
../repos/stcorp-coda-3a25f25/codafind:     file format elf32-littlearm


Disassembly of section .init:

00010890 <.init>:
   10890:	push	{r3, lr}
   10894:	bl	109dc <_start@@Base+0x3c>
   10898:	pop	{r3, pc}

Disassembly of section .plt:

0001089c <coda_match_filefilter@plt-0x14>:
   1089c:	push	{lr}		; (str lr, [sp, #-4]!)
   108a0:	ldr	lr, [pc, #4]	; 108ac <coda_match_filefilter@plt-0x4>
   108a4:	add	lr, pc, lr
   108a8:	ldr	pc, [lr, #8]!
   108ac:	andeq	r1, r1, r4, asr r7

000108b0 <coda_match_filefilter@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #69632	; 0x11000
   108b8:	ldr	pc, [ip, #1876]!	; 0x754

000108bc <strcmp@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #69632	; 0x11000
   108c4:	ldr	pc, [ip, #1868]!	; 0x74c

000108c8 <printf@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #69632	; 0x11000
   108d0:	ldr	pc, [ip, #1860]!	; 0x744

000108d4 <coda_set_definition_path_conditional@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #69632	; 0x11000
   108dc:	ldr	pc, [ip, #1852]!	; 0x73c

000108e0 <coda_set_definition_path@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #69632	; 0x11000
   108e8:	ldr	pc, [ip, #1844]!	; 0x734

000108ec <fwrite@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #69632	; 0x11000
   108f4:	ldr	pc, [ip, #1836]!	; 0x72c

000108f8 <coda_done@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #69632	; 0x11000
   10900:	ldr	pc, [ip, #1828]!	; 0x724

00010904 <puts@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #69632	; 0x11000
   1090c:	ldr	pc, [ip, #1820]!	; 0x71c

00010910 <__libc_start_main@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #69632	; 0x11000
   10918:	ldr	pc, [ip, #1812]!	; 0x714

0001091c <__gmon_start__@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #69632	; 0x11000
   10924:	ldr	pc, [ip, #1804]!	; 0x70c

00010928 <exit@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #69632	; 0x11000
   10930:	ldr	pc, [ip, #1796]!	; 0x704

00010934 <fprintf@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #69632	; 0x11000
   1093c:	ldr	pc, [ip, #1788]!	; 0x6fc

00010940 <coda_init@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #69632	; 0x11000
   10948:	ldr	pc, [ip, #1780]!	; 0x6f4

0001094c <coda_set_option_perform_conversions@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #69632	; 0x11000
   10954:	ldr	pc, [ip, #1772]!	; 0x6ec

00010958 <putchar@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #69632	; 0x11000
   10960:	ldr	pc, [ip, #1764]!	; 0x6e4

00010964 <coda_errno_to_string@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #69632	; 0x11000
   1096c:	ldr	pc, [ip, #1756]!	; 0x6dc

00010970 <coda_get_libcoda_version@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #69632	; 0x11000
   10978:	ldr	pc, [ip, #1748]!	; 0x6d4

0001097c <coda_get_errno@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #69632	; 0x11000
   10984:	ldr	pc, [ip, #1740]!	; 0x6cc

00010988 <abort@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #69632	; 0x11000
   10990:	ldr	pc, [ip, #1732]!	; 0x6c4

00010994 <__assert_fail@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1724]!	; 0x6bc

Disassembly of section .text:

000109a0 <_start@@Base>:
   109a0:	mov	fp, #0
   109a4:	mov	lr, #0
   109a8:	pop	{r1}		; (ldr r1, [sp], #4)
   109ac:	mov	r2, sp
   109b0:	push	{r2}		; (str r2, [sp, #-4]!)
   109b4:	push	{r0}		; (str r0, [sp, #-4]!)
   109b8:	ldr	ip, [pc, #16]	; 109d0 <_start@@Base+0x30>
   109bc:	push	{ip}		; (str ip, [sp, #-4]!)
   109c0:	ldr	r0, [pc, #12]	; 109d4 <_start@@Base+0x34>
   109c4:	ldr	r3, [pc, #12]	; 109d8 <_start@@Base+0x38>
   109c8:	bl	10910 <__libc_start_main@plt>
   109cc:	bl	10988 <abort@plt>
   109d0:	andeq	r1, r1, ip, lsl #10
   109d4:	ldrdeq	r0, [r1], -ip
   109d8:	andeq	r1, r1, ip, lsr #9
   109dc:	ldr	r3, [pc, #20]	; 109f8 <_start@@Base+0x58>
   109e0:	ldr	r2, [pc, #20]	; 109fc <_start@@Base+0x5c>
   109e4:	add	r3, pc, r3
   109e8:	ldr	r2, [r3, r2]
   109ec:	cmp	r2, #0
   109f0:	bxeq	lr
   109f4:	b	1091c <__gmon_start__@plt>
   109f8:	andeq	r1, r1, r4, lsl r6
   109fc:	andeq	r0, r0, r0, rrx
   10a00:	ldr	r0, [pc, #24]	; 10a20 <_start@@Base+0x80>
   10a04:	ldr	r3, [pc, #24]	; 10a24 <_start@@Base+0x84>
   10a08:	cmp	r3, r0
   10a0c:	bxeq	lr
   10a10:	ldr	r3, [pc, #16]	; 10a28 <_start@@Base+0x88>
   10a14:	cmp	r3, #0
   10a18:	bxeq	lr
   10a1c:	bx	r3
   10a20:	andeq	r2, r2, r0, ror r0
   10a24:	andeq	r2, r2, r0, ror r0
   10a28:	andeq	r0, r0, r0
   10a2c:	ldr	r0, [pc, #36]	; 10a58 <_start@@Base+0xb8>
   10a30:	ldr	r1, [pc, #36]	; 10a5c <_start@@Base+0xbc>
   10a34:	sub	r1, r1, r0
   10a38:	asr	r1, r1, #2
   10a3c:	add	r1, r1, r1, lsr #31
   10a40:	asrs	r1, r1, #1
   10a44:	bxeq	lr
   10a48:	ldr	r3, [pc, #16]	; 10a60 <_start@@Base+0xc0>
   10a4c:	cmp	r3, #0
   10a50:	bxeq	lr
   10a54:	bx	r3
   10a58:	andeq	r2, r2, r0, ror r0
   10a5c:	andeq	r2, r2, r0, ror r0
   10a60:	andeq	r0, r0, r0
   10a64:	push	{r4, lr}
   10a68:	ldr	r4, [pc, #24]	; 10a88 <_start@@Base+0xe8>
   10a6c:	ldrb	r3, [r4]
   10a70:	cmp	r3, #0
   10a74:	popne	{r4, pc}
   10a78:	bl	10a00 <_start@@Base+0x60>
   10a7c:	mov	r3, #1
   10a80:	strb	r3, [r4]
   10a84:	pop	{r4, pc}
   10a88:	andeq	r2, r2, r0, ror r0
   10a8c:	b	10a2c <_start@@Base+0x8c>
   10a90:	str	fp, [sp, #-8]!
   10a94:	str	lr, [sp, #4]
   10a98:	add	fp, sp, #4
   10a9c:	bl	10970 <coda_get_libcoda_version@plt>
   10aa0:	mov	r3, r0
   10aa4:	mov	r1, r3
   10aa8:	ldr	r3, [pc, #52]	; 10ae4 <_start@@Base+0x144>
   10aac:	add	r3, pc, r3
   10ab0:	mov	r0, r3
   10ab4:	bl	108c8 <printf@plt>
   10ab8:	ldr	r3, [pc, #40]	; 10ae8 <_start@@Base+0x148>
   10abc:	add	r3, pc, r3
   10ac0:	mov	r0, r3
   10ac4:	bl	10904 <puts@plt>
   10ac8:	mov	r0, #10
   10acc:	bl	10958 <putchar@plt>
   10ad0:	nop	{0}
   10ad4:	sub	sp, fp, #4
   10ad8:	ldr	fp, [sp]
   10adc:	add	sp, sp, #4
   10ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ae4:	andeq	r0, r0, r8, ror #20
   10ae8:	andeq	r0, r0, r8, ror #20
   10aec:	str	fp, [sp, #-8]!
   10af0:	str	lr, [sp, #4]
   10af4:	add	fp, sp, #4
   10af8:	ldr	r3, [pc, #436]	; 10cb4 <_start@@Base+0x314>
   10afc:	add	r3, pc, r3
   10b00:	mov	r0, r3
   10b04:	bl	10904 <puts@plt>
   10b08:	ldr	r3, [pc, #424]	; 10cb8 <_start@@Base+0x318>
   10b0c:	add	r3, pc, r3
   10b10:	mov	r0, r3
   10b14:	bl	10904 <puts@plt>
   10b18:	ldr	r3, [pc, #412]	; 10cbc <_start@@Base+0x31c>
   10b1c:	add	r3, pc, r3
   10b20:	mov	r0, r3
   10b24:	bl	10904 <puts@plt>
   10b28:	ldr	r3, [pc, #400]	; 10cc0 <_start@@Base+0x320>
   10b2c:	add	r3, pc, r3
   10b30:	mov	r0, r3
   10b34:	bl	10904 <puts@plt>
   10b38:	mov	r0, #10
   10b3c:	bl	10958 <putchar@plt>
   10b40:	ldr	r3, [pc, #380]	; 10cc4 <_start@@Base+0x324>
   10b44:	add	r3, pc, r3
   10b48:	mov	r0, r3
   10b4c:	bl	10904 <puts@plt>
   10b50:	ldr	r3, [pc, #368]	; 10cc8 <_start@@Base+0x328>
   10b54:	add	r3, pc, r3
   10b58:	mov	r0, r3
   10b5c:	bl	10904 <puts@plt>
   10b60:	ldr	r3, [pc, #356]	; 10ccc <_start@@Base+0x32c>
   10b64:	add	r3, pc, r3
   10b68:	mov	r0, r3
   10b6c:	bl	10904 <puts@plt>
   10b70:	ldr	r3, [pc, #344]	; 10cd0 <_start@@Base+0x330>
   10b74:	add	r3, pc, r3
   10b78:	mov	r0, r3
   10b7c:	bl	10904 <puts@plt>
   10b80:	ldr	r3, [pc, #332]	; 10cd4 <_start@@Base+0x334>
   10b84:	add	r3, pc, r3
   10b88:	mov	r0, r3
   10b8c:	bl	10904 <puts@plt>
   10b90:	ldr	r3, [pc, #320]	; 10cd8 <_start@@Base+0x338>
   10b94:	add	r3, pc, r3
   10b98:	mov	r0, r3
   10b9c:	bl	10904 <puts@plt>
   10ba0:	ldr	r3, [pc, #308]	; 10cdc <_start@@Base+0x33c>
   10ba4:	add	r3, pc, r3
   10ba8:	mov	r0, r3
   10bac:	bl	10904 <puts@plt>
   10bb0:	ldr	r3, [pc, #296]	; 10ce0 <_start@@Base+0x340>
   10bb4:	add	r3, pc, r3
   10bb8:	mov	r0, r3
   10bbc:	bl	10904 <puts@plt>
   10bc0:	ldr	r3, [pc, #284]	; 10ce4 <_start@@Base+0x344>
   10bc4:	add	r3, pc, r3
   10bc8:	mov	r0, r3
   10bcc:	bl	10904 <puts@plt>
   10bd0:	mov	r0, #10
   10bd4:	bl	10958 <putchar@plt>
   10bd8:	ldr	r3, [pc, #264]	; 10ce8 <_start@@Base+0x348>
   10bdc:	add	r3, pc, r3
   10be0:	mov	r0, r3
   10be4:	bl	10904 <puts@plt>
   10be8:	ldr	r3, [pc, #252]	; 10cec <_start@@Base+0x34c>
   10bec:	add	r3, pc, r3
   10bf0:	mov	r0, r3
   10bf4:	bl	10904 <puts@plt>
   10bf8:	mov	r0, #10
   10bfc:	bl	10958 <putchar@plt>
   10c00:	ldr	r3, [pc, #232]	; 10cf0 <_start@@Base+0x350>
   10c04:	add	r3, pc, r3
   10c08:	mov	r0, r3
   10c0c:	bl	10904 <puts@plt>
   10c10:	ldr	r3, [pc, #220]	; 10cf4 <_start@@Base+0x354>
   10c14:	add	r3, pc, r3
   10c18:	mov	r0, r3
   10c1c:	bl	10904 <puts@plt>
   10c20:	mov	r0, #10
   10c24:	bl	10958 <putchar@plt>
   10c28:	ldr	r3, [pc, #200]	; 10cf8 <_start@@Base+0x358>
   10c2c:	add	r3, pc, r3
   10c30:	mov	r0, r3
   10c34:	bl	10904 <puts@plt>
   10c38:	ldr	r3, [pc, #188]	; 10cfc <_start@@Base+0x35c>
   10c3c:	add	r3, pc, r3
   10c40:	mov	r0, r3
   10c44:	bl	10904 <puts@plt>
   10c48:	ldr	r3, [pc, #176]	; 10d00 <_start@@Base+0x360>
   10c4c:	add	r3, pc, r3
   10c50:	mov	r0, r3
   10c54:	bl	10904 <puts@plt>
   10c58:	ldr	r3, [pc, #164]	; 10d04 <_start@@Base+0x364>
   10c5c:	add	r3, pc, r3
   10c60:	mov	r0, r3
   10c64:	bl	10904 <puts@plt>
   10c68:	ldr	r3, [pc, #152]	; 10d08 <_start@@Base+0x368>
   10c6c:	add	r3, pc, r3
   10c70:	mov	r0, r3
   10c74:	bl	10904 <puts@plt>
   10c78:	ldr	r3, [pc, #140]	; 10d0c <_start@@Base+0x36c>
   10c7c:	add	r3, pc, r3
   10c80:	mov	r0, r3
   10c84:	bl	10904 <puts@plt>
   10c88:	ldr	r3, [pc, #128]	; 10d10 <_start@@Base+0x370>
   10c8c:	add	r3, pc, r3
   10c90:	mov	r0, r3
   10c94:	bl	10904 <puts@plt>
   10c98:	mov	r0, #10
   10c9c:	bl	10958 <putchar@plt>
   10ca0:	nop	{0}
   10ca4:	sub	sp, fp, #4
   10ca8:	ldr	fp, [sp]
   10cac:	add	sp, sp, #4
   10cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   10cb4:	andeq	r0, r0, r8, asr sl
   10cb8:	andeq	r0, r0, r0, asr sl
   10cbc:	andeq	r0, r0, r4, lsl #21
   10cc0:	andeq	r0, r0, r4, asr #21
   10cc4:	andeq	r0, r0, r4, asr #21
   10cc8:	andeq	r0, r0, r8, asr #21
   10ccc:	andeq	r0, r0, r0, ror #21
   10cd0:	andeq	r0, r0, ip, lsl #22
   10cd4:	andeq	r0, r0, ip, lsr #22
   10cd8:	andeq	r0, r0, r4, ror #22
   10cdc:	andeq	r0, r0, r4, lsr #23
   10ce0:	andeq	r0, r0, r0, asr #23
   10ce4:	andeq	r0, r0, ip, asr #23
   10ce8:	andeq	r0, r0, ip, ror #23
   10cec:	strdeq	r0, [r0], -r4
   10cf0:	strdeq	r0, [r0], -ip
   10cf4:	andeq	r0, r0, r8, lsl #24
   10cf8:	andeq	r0, r0, r4, lsr #24
   10cfc:	andeq	r0, r0, r4, ror #24
   10d00:	andeq	r0, r0, r0, lsr #25
   10d04:			; <UNDEFINED> instruction: 0x00000cbc
   10d08:	strdeq	r0, [r0], -r8
   10d0c:	andeq	r0, r0, r0, lsr sp
   10d10:	andeq	r0, r0, r0, ror #26

00010d14 <callback@@Base>:
   10d14:	str	fp, [sp, #-8]!
   10d18:	str	lr, [sp, #4]
   10d1c:	add	fp, sp, #4
   10d20:	sub	sp, sp, #16
   10d24:	str	r0, [fp, #-8]
   10d28:	str	r1, [fp, #-12]
   10d2c:	str	r2, [fp, #-16]
   10d30:	str	r3, [fp, #-20]	; 0xffffffec
   10d34:	ldr	r3, [pc, #364]	; 10ea8 <callback@@Base+0x194>
   10d38:	add	r3, pc, r3
   10d3c:	ldr	r2, [fp, #-12]
   10d40:	cmp	r2, #0
   10d44:	bne	10d6c <callback@@Base+0x58>
   10d48:	ldr	r2, [pc, #348]	; 10eac <callback@@Base+0x198>
   10d4c:	ldr	r3, [r3, r2]
   10d50:	ldr	r0, [r3]
   10d54:	ldr	r3, [fp, #-16]
   10d58:	ldr	r2, [fp, #-8]
   10d5c:	ldr	r1, [pc, #332]	; 10eb0 <callback@@Base+0x19c>
   10d60:	add	r1, pc, r1
   10d64:	bl	10934 <fprintf@plt>
   10d68:	b	10e90 <callback@@Base+0x17c>
   10d6c:	ldr	r2, [fp, #-12]
   10d70:	cmp	r2, #2
   10d74:	bne	10d9c <callback@@Base+0x88>
   10d78:	ldr	r2, [pc, #300]	; 10eac <callback@@Base+0x198>
   10d7c:	ldr	r3, [r3, r2]
   10d80:	ldr	r3, [r3]
   10d84:	ldr	r2, [fp, #-8]
   10d88:	ldr	r1, [pc, #292]	; 10eb4 <callback@@Base+0x1a0>
   10d8c:	add	r1, pc, r1
   10d90:	mov	r0, r3
   10d94:	bl	10934 <fprintf@plt>
   10d98:	b	10e90 <callback@@Base+0x17c>
   10d9c:	ldr	r2, [fp, #-12]
   10da0:	cmp	r2, #1
   10da4:	bne	10dcc <callback@@Base+0xb8>
   10da8:	ldr	r2, [pc, #252]	; 10eac <callback@@Base+0x198>
   10dac:	ldr	r3, [r3, r2]
   10db0:	ldr	r0, [r3]
   10db4:	ldr	r3, [fp, #-16]
   10db8:	ldr	r2, [fp, #-8]
   10dbc:	ldr	r1, [pc, #244]	; 10eb8 <callback@@Base+0x1a4>
   10dc0:	add	r1, pc, r1
   10dc4:	bl	10934 <fprintf@plt>
   10dc8:	b	10e90 <callback@@Base+0x17c>
   10dcc:	ldr	r3, [pc, #232]	; 10ebc <callback@@Base+0x1a8>
   10dd0:	add	r3, pc, r3
   10dd4:	ldr	r3, [r3]
   10dd8:	cmp	r3, #0
   10ddc:	beq	10e7c <callback@@Base+0x168>
   10de0:	ldr	r1, [fp, #-8]
   10de4:	ldr	r3, [pc, #212]	; 10ec0 <callback@@Base+0x1ac>
   10de8:	add	r3, pc, r3
   10dec:	mov	r0, r3
   10df0:	bl	108c8 <printf@plt>
   10df4:	ldr	r3, [fp, #-12]
   10df8:	cmp	r3, #5
   10dfc:	addls	pc, pc, r3, lsl #2
   10e00:	b	10e90 <callback@@Base+0x17c>
   10e04:	b	10e1c <callback@@Base+0x108>
   10e08:	b	10e1c <callback@@Base+0x108>
   10e0c:	b	10e1c <callback@@Base+0x108>
   10e10:	b	10e3c <callback@@Base+0x128>
   10e14:	b	10e64 <callback@@Base+0x150>
   10e18:	b	10e50 <callback@@Base+0x13c>
   10e1c:	ldr	r3, [pc, #160]	; 10ec4 <callback@@Base+0x1b0>
   10e20:	add	r3, pc, r3
   10e24:	mov	r2, #110	; 0x6e
   10e28:	ldr	r1, [pc, #152]	; 10ec8 <callback@@Base+0x1b4>
   10e2c:	add	r1, pc, r1
   10e30:	ldr	r0, [pc, #148]	; 10ecc <callback@@Base+0x1b8>
   10e34:	add	r0, pc, r0
   10e38:	bl	10994 <__assert_fail@plt>
   10e3c:	ldr	r3, [pc, #140]	; 10ed0 <callback@@Base+0x1bc>
   10e40:	add	r3, pc, r3
   10e44:	mov	r0, r3
   10e48:	bl	10904 <puts@plt>
   10e4c:	b	10e90 <callback@@Base+0x17c>
   10e50:	ldr	r3, [pc, #124]	; 10ed4 <callback@@Base+0x1c0>
   10e54:	add	r3, pc, r3
   10e58:	mov	r0, r3
   10e5c:	bl	10904 <puts@plt>
   10e60:	b	10e90 <callback@@Base+0x17c>
   10e64:	ldr	r3, [pc, #108]	; 10ed8 <callback@@Base+0x1c4>
   10e68:	add	r3, pc, r3
   10e6c:	mov	r0, r3
   10e70:	bl	10904 <puts@plt>
   10e74:	nop	{0}
   10e78:	b	10e90 <callback@@Base+0x17c>
   10e7c:	ldr	r3, [fp, #-12]
   10e80:	cmp	r3, #4
   10e84:	bne	10e90 <callback@@Base+0x17c>
   10e88:	ldr	r0, [fp, #-8]
   10e8c:	bl	10904 <puts@plt>
   10e90:	mov	r3, #0
   10e94:	mov	r0, r3
   10e98:	sub	sp, fp, #4
   10e9c:	ldr	fp, [sp]
   10ea0:	add	sp, sp, #4
   10ea4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ea8:	andeq	r1, r1, r0, asr #5
   10eac:	andeq	r0, r0, ip, asr r0
   10eb0:	andeq	r0, r0, ip, asr #25
   10eb4:	andeq	r0, r0, r8, lsr #25
   10eb8:	muleq	r0, r4, ip
   10ebc:	muleq	r1, ip, r2
   10ec0:	andeq	r0, r0, ip, lsl #25
   10ec4:	andeq	r0, r0, r4, lsl #27
   10ec8:	andeq	r0, r0, r0, asr ip
   10ecc:	andeq	r0, r0, r4, lsr #25
   10ed0:	muleq	r0, ip, ip
   10ed4:	muleq	r0, ip, ip
   10ed8:	muleq	r0, r4, ip

00010edc <main@@Base>:
   10edc:	str	r4, [sp, #-12]!
   10ee0:	str	fp, [sp, #4]
   10ee4:	str	lr, [sp, #8]
   10ee8:	add	fp, sp, #8
   10eec:	sub	sp, sp, #36	; 0x24
   10ef0:	str	r0, [fp, #-32]	; 0xffffffe0
   10ef4:	str	r1, [fp, #-36]	; 0xffffffdc
   10ef8:	ldr	r4, [pc, #1364]	; 11454 <main@@Base+0x578>
   10efc:	add	r4, pc, r4
   10f00:	mov	r3, #0
   10f04:	str	r3, [fp, #-16]
   10f08:	ldr	r3, [pc, #1352]	; 11458 <main@@Base+0x57c>
   10f0c:	add	r3, pc, r3
   10f10:	mov	r2, #0
   10f14:	str	r2, [r3]
   10f18:	mov	r3, #1
   10f1c:	str	r3, [fp, #-20]	; 0xffffffec
   10f20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10f24:	cmp	r3, #1
   10f28:	beq	10f84 <main@@Base+0xa8>
   10f2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10f30:	add	r3, r3, #4
   10f34:	ldr	r3, [r3]
   10f38:	ldr	r2, [pc, #1308]	; 1145c <main@@Base+0x580>
   10f3c:	add	r2, pc, r2
   10f40:	mov	r1, r2
   10f44:	mov	r0, r3
   10f48:	bl	108bc <strcmp@plt>
   10f4c:	mov	r3, r0
   10f50:	cmp	r3, #0
   10f54:	beq	10f84 <main@@Base+0xa8>
   10f58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10f5c:	add	r3, r3, #4
   10f60:	ldr	r3, [r3]
   10f64:	ldr	r2, [pc, #1268]	; 11460 <main@@Base+0x584>
   10f68:	add	r2, pc, r2
   10f6c:	mov	r1, r2
   10f70:	mov	r0, r3
   10f74:	bl	108bc <strcmp@plt>
   10f78:	mov	r3, r0
   10f7c:	cmp	r3, #0
   10f80:	bne	10f90 <main@@Base+0xb4>
   10f84:	bl	10aec <_start@@Base+0x14c>
   10f88:	mov	r0, #0
   10f8c:	bl	10928 <exit@plt>
   10f90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10f94:	add	r3, r3, #4
   10f98:	ldr	r3, [r3]
   10f9c:	ldr	r2, [pc, #1216]	; 11464 <main@@Base+0x588>
   10fa0:	add	r2, pc, r2
   10fa4:	mov	r1, r2
   10fa8:	mov	r0, r3
   10fac:	bl	108bc <strcmp@plt>
   10fb0:	mov	r3, r0
   10fb4:	cmp	r3, #0
   10fb8:	beq	10fe8 <main@@Base+0x10c>
   10fbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10fc0:	add	r3, r3, #4
   10fc4:	ldr	r3, [r3]
   10fc8:	ldr	r2, [pc, #1176]	; 11468 <main@@Base+0x58c>
   10fcc:	add	r2, pc, r2
   10fd0:	mov	r1, r2
   10fd4:	mov	r0, r3
   10fd8:	bl	108bc <strcmp@plt>
   10fdc:	mov	r3, r0
   10fe0:	cmp	r3, #0
   10fe4:	bne	10ff4 <main@@Base+0x118>
   10fe8:	bl	10a90 <_start@@Base+0xf0>
   10fec:	mov	r0, #0
   10ff0:	bl	10928 <exit@plt>
   10ff4:	mov	r3, #1
   10ff8:	str	r3, [fp, #-24]	; 0xffffffe8
   10ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11000:	add	r3, r3, #1
   11004:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11008:	cmp	r2, r3
   1100c:	ble	11074 <main@@Base+0x198>
   11010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11014:	lsl	r3, r3, #2
   11018:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1101c:	add	r3, r2, r3
   11020:	ldr	r3, [r3]
   11024:	ldr	r2, [pc, #1088]	; 1146c <main@@Base+0x590>
   11028:	add	r2, pc, r2
   1102c:	mov	r1, r2
   11030:	mov	r0, r3
   11034:	bl	108bc <strcmp@plt>
   11038:	mov	r3, r0
   1103c:	cmp	r3, #0
   11040:	bne	11074 <main@@Base+0x198>
   11044:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11048:	add	r3, r3, #1
   1104c:	lsl	r3, r3, #2
   11050:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11054:	add	r3, r2, r3
   11058:	ldr	r3, [r3]
   1105c:	mov	r0, r3
   11060:	bl	108e0 <coda_set_definition_path@plt>
   11064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11068:	add	r3, r3, #2
   1106c:	str	r3, [fp, #-24]	; 0xffffffe8
   11070:	b	110e8 <main@@Base+0x20c>
   11074:	ldr	r3, [pc, #1012]	; 11470 <main@@Base+0x594>
   11078:	add	r3, pc, r3
   1107c:	str	r3, [fp, #-28]	; 0xffffffe4
   11080:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11084:	ldr	r3, [r3]
   11088:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1108c:	mov	r1, #0
   11090:	mov	r0, r3
   11094:	bl	108d4 <coda_set_definition_path_conditional@plt>
   11098:	mov	r3, r0
   1109c:	cmp	r3, #0
   110a0:	beq	11300 <main@@Base+0x424>
   110a4:	ldr	r3, [pc, #968]	; 11474 <main@@Base+0x598>
   110a8:	ldr	r3, [r4, r3]
   110ac:	ldr	r4, [r3]
   110b0:	bl	1097c <coda_get_errno@plt>
   110b4:	mov	r3, r0
   110b8:	ldr	r3, [r3]
   110bc:	mov	r0, r3
   110c0:	bl	10964 <coda_errno_to_string@plt>
   110c4:	mov	r3, r0
   110c8:	mov	r2, r3
   110cc:	ldr	r3, [pc, #932]	; 11478 <main@@Base+0x59c>
   110d0:	add	r3, pc, r3
   110d4:	mov	r1, r3
   110d8:	mov	r0, r4
   110dc:	bl	10934 <fprintf@plt>
   110e0:	mov	r0, #1
   110e4:	bl	10928 <exit@plt>
   110e8:	b	11300 <main@@Base+0x424>
   110ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110f0:	lsl	r3, r3, #2
   110f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   110f8:	add	r3, r2, r3
   110fc:	ldr	r3, [r3]
   11100:	ldr	r2, [pc, #884]	; 1147c <main@@Base+0x5a0>
   11104:	add	r2, pc, r2
   11108:	mov	r1, r2
   1110c:	mov	r0, r3
   11110:	bl	108bc <strcmp@plt>
   11114:	mov	r3, r0
   11118:	cmp	r3, #0
   1111c:	beq	11154 <main@@Base+0x278>
   11120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11124:	lsl	r3, r3, #2
   11128:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1112c:	add	r3, r2, r3
   11130:	ldr	r3, [r3]
   11134:	ldr	r2, [pc, #836]	; 11480 <main@@Base+0x5a4>
   11138:	add	r2, pc, r2
   1113c:	mov	r1, r2
   11140:	mov	r0, r3
   11144:	bl	108bc <strcmp@plt>
   11148:	mov	r3, r0
   1114c:	cmp	r3, #0
   11150:	bne	11160 <main@@Base+0x284>
   11154:	mov	r3, #0
   11158:	str	r3, [fp, #-20]	; 0xffffffec
   1115c:	b	112f4 <main@@Base+0x418>
   11160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11164:	lsl	r3, r3, #2
   11168:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1116c:	add	r3, r2, r3
   11170:	ldr	r3, [r3]
   11174:	ldr	r2, [pc, #776]	; 11484 <main@@Base+0x5a8>
   11178:	add	r2, pc, r2
   1117c:	mov	r1, r2
   11180:	mov	r0, r3
   11184:	bl	108bc <strcmp@plt>
   11188:	mov	r3, r0
   1118c:	cmp	r3, #0
   11190:	beq	111c8 <main@@Base+0x2ec>
   11194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11198:	lsl	r3, r3, #2
   1119c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   111a0:	add	r3, r2, r3
   111a4:	ldr	r3, [r3]
   111a8:	ldr	r2, [pc, #728]	; 11488 <main@@Base+0x5ac>
   111ac:	add	r2, pc, r2
   111b0:	mov	r1, r2
   111b4:	mov	r0, r3
   111b8:	bl	108bc <strcmp@plt>
   111bc:	mov	r3, r0
   111c0:	cmp	r3, #0
   111c4:	bne	1122c <main@@Base+0x350>
   111c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111cc:	add	r3, r3, #1
   111d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   111d4:	cmp	r2, r3
   111d8:	ble	1122c <main@@Base+0x350>
   111dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111e0:	add	r3, r3, #1
   111e4:	lsl	r3, r3, #2
   111e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   111ec:	add	r3, r2, r3
   111f0:	ldr	r3, [r3]
   111f4:	ldrb	r3, [r3]
   111f8:	cmp	r3, #45	; 0x2d
   111fc:	beq	1122c <main@@Base+0x350>
   11200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11204:	add	r3, r3, #1
   11208:	lsl	r3, r3, #2
   1120c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11210:	add	r3, r2, r3
   11214:	ldr	r3, [r3]
   11218:	str	r3, [fp, #-16]
   1121c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11220:	add	r3, r3, #1
   11224:	str	r3, [fp, #-24]	; 0xffffffe8
   11228:	b	112f4 <main@@Base+0x418>
   1122c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11230:	lsl	r3, r3, #2
   11234:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11238:	add	r3, r2, r3
   1123c:	ldr	r3, [r3]
   11240:	ldr	r2, [pc, #580]	; 1148c <main@@Base+0x5b0>
   11244:	add	r2, pc, r2
   11248:	mov	r1, r2
   1124c:	mov	r0, r3
   11250:	bl	108bc <strcmp@plt>
   11254:	mov	r3, r0
   11258:	cmp	r3, #0
   1125c:	beq	11294 <main@@Base+0x3b8>
   11260:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11264:	lsl	r3, r3, #2
   11268:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1126c:	add	r3, r2, r3
   11270:	ldr	r3, [r3]
   11274:	ldr	r2, [pc, #532]	; 11490 <main@@Base+0x5b4>
   11278:	add	r2, pc, r2
   1127c:	mov	r1, r2
   11280:	mov	r0, r3
   11284:	bl	108bc <strcmp@plt>
   11288:	mov	r3, r0
   1128c:	cmp	r3, #0
   11290:	bne	112a8 <main@@Base+0x3cc>
   11294:	ldr	r3, [pc, #504]	; 11494 <main@@Base+0x5b8>
   11298:	add	r3, pc, r3
   1129c:	mov	r2, #1
   112a0:	str	r2, [r3]
   112a4:	b	112f4 <main@@Base+0x418>
   112a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112ac:	lsl	r3, r3, #2
   112b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   112b4:	add	r3, r2, r3
   112b8:	ldr	r3, [r3]
   112bc:	ldrb	r3, [r3]
   112c0:	cmp	r3, #45	; 0x2d
   112c4:	bne	11314 <main@@Base+0x438>
   112c8:	ldr	r3, [pc, #420]	; 11474 <main@@Base+0x598>
   112cc:	ldr	r3, [r4, r3]
   112d0:	ldr	r3, [r3]
   112d4:	mov	r2, #25
   112d8:	mov	r1, #1
   112dc:	ldr	r0, [pc, #436]	; 11498 <main@@Base+0x5bc>
   112e0:	add	r0, pc, r0
   112e4:	bl	108ec <fwrite@plt>
   112e8:	bl	10aec <_start@@Base+0x14c>
   112ec:	mov	r0, #1
   112f0:	bl	10928 <exit@plt>
   112f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112f8:	add	r3, r3, #1
   112fc:	str	r3, [fp, #-24]	; 0xffffffe8
   11300:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11304:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11308:	cmp	r2, r3
   1130c:	blt	110ec <main@@Base+0x210>
   11310:	b	11318 <main@@Base+0x43c>
   11314:	nop	{0}
   11318:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1131c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11320:	cmp	r2, r3
   11324:	bne	11354 <main@@Base+0x478>
   11328:	ldr	r3, [pc, #324]	; 11474 <main@@Base+0x598>
   1132c:	ldr	r3, [r4, r3]
   11330:	ldr	r3, [r3]
   11334:	mov	r2, #25
   11338:	mov	r1, #1
   1133c:	ldr	r0, [pc, #344]	; 1149c <main@@Base+0x5c0>
   11340:	add	r0, pc, r0
   11344:	bl	108ec <fwrite@plt>
   11348:	bl	10aec <_start@@Base+0x14c>
   1134c:	mov	r0, #1
   11350:	bl	10928 <exit@plt>
   11354:	bl	10940 <coda_init@plt>
   11358:	mov	r3, r0
   1135c:	cmp	r3, #0
   11360:	beq	113a8 <main@@Base+0x4cc>
   11364:	ldr	r3, [pc, #264]	; 11474 <main@@Base+0x598>
   11368:	ldr	r3, [r4, r3]
   1136c:	ldr	r4, [r3]
   11370:	bl	1097c <coda_get_errno@plt>
   11374:	mov	r3, r0
   11378:	ldr	r3, [r3]
   1137c:	mov	r0, r3
   11380:	bl	10964 <coda_errno_to_string@plt>
   11384:	mov	r3, r0
   11388:	mov	r2, r3
   1138c:	ldr	r3, [pc, #268]	; 114a0 <main@@Base+0x5c4>
   11390:	add	r3, pc, r3
   11394:	mov	r1, r3
   11398:	mov	r0, r4
   1139c:	bl	10934 <fprintf@plt>
   113a0:	mov	r0, #1
   113a4:	bl	10928 <exit@plt>
   113a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   113ac:	bl	1094c <coda_set_option_perform_conversions@plt>
   113b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   113b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113b8:	sub	r1, r2, r3
   113bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113c0:	lsl	r3, r3, #2
   113c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   113c8:	add	r2, r2, r3
   113cc:	mov	r3, #0
   113d0:	str	r3, [sp]
   113d4:	ldr	r3, [pc, #200]	; 114a4 <main@@Base+0x5c8>
   113d8:	ldr	r3, [r4, r3]
   113dc:	ldr	r0, [fp, #-16]
   113e0:	bl	108b0 <coda_match_filefilter@plt>
   113e4:	mov	r3, r0
   113e8:	cmp	r3, #0
   113ec:	beq	11434 <main@@Base+0x558>
   113f0:	ldr	r3, [pc, #124]	; 11474 <main@@Base+0x598>
   113f4:	ldr	r3, [r4, r3]
   113f8:	ldr	r4, [r3]
   113fc:	bl	1097c <coda_get_errno@plt>
   11400:	mov	r3, r0
   11404:	ldr	r3, [r3]
   11408:	mov	r0, r3
   1140c:	bl	10964 <coda_errno_to_string@plt>
   11410:	mov	r3, r0
   11414:	mov	r2, r3
   11418:	ldr	r3, [pc, #136]	; 114a8 <main@@Base+0x5cc>
   1141c:	add	r3, pc, r3
   11420:	mov	r1, r3
   11424:	mov	r0, r4
   11428:	bl	10934 <fprintf@plt>
   1142c:	mov	r0, #1
   11430:	bl	10928 <exit@plt>
   11434:	bl	108f8 <coda_done@plt>
   11438:	mov	r3, #0
   1143c:	mov	r0, r3
   11440:	sub	sp, fp, #8
   11444:	ldr	r4, [sp]
   11448:	ldr	fp, [sp, #4]
   1144c:	add	sp, sp, #8
   11450:	pop	{pc}		; (ldr pc, [sp], #4)
   11454:	strdeq	r1, [r1], -ip
   11458:	andeq	r1, r1, r0, ror #2
   1145c:	andeq	r0, r0, r8, asr #23
   11460:	andeq	r0, r0, r0, lsr #23
   11464:	andeq	r0, r0, r0, ror fp
   11468:	andeq	r0, r0, r8, asr #22
   1146c:	strdeq	r0, [r0], -r8
   11470:	andeq	r0, r0, ip, lsr #21
   11474:	andeq	r0, r0, ip, asr r0
   11478:	andeq	r0, r0, r0, ror sl
   1147c:	andeq	r0, r0, r8, asr #20
   11480:	andeq	r0, r0, r8, lsl sl
   11484:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11488:	andeq	r0, r0, r0, asr #19
   1148c:	andeq	r0, r0, r4, lsr r9
   11490:	andeq	r0, r0, r4, lsl #18
   11494:	ldrdeq	r0, [r1], -r4
   11498:	andeq	r0, r0, r8, lsr #17
   1149c:	andeq	r0, r0, r8, asr #16
   114a0:			; <UNDEFINED> instruction: 0x000007b0
   114a4:	andeq	r0, r0, r4, rrx
   114a8:	andeq	r0, r0, r4, lsr #14

000114ac <__libc_csu_init@@Base>:
   114ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114b0:	mov	r7, r0
   114b4:	ldr	r6, [pc, #72]	; 11504 <__libc_csu_init@@Base+0x58>
   114b8:	ldr	r5, [pc, #72]	; 11508 <__libc_csu_init@@Base+0x5c>
   114bc:	add	r6, pc, r6
   114c0:	add	r5, pc, r5
   114c4:	sub	r6, r6, r5
   114c8:	mov	r8, r1
   114cc:	mov	r9, r2
   114d0:	bl	10890 <coda_match_filefilter@plt-0x20>
   114d4:	asrs	r6, r6, #2
   114d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   114dc:	mov	r4, #0
   114e0:	add	r4, r4, #1
   114e4:	ldr	r3, [r5], #4
   114e8:	mov	r2, r9
   114ec:	mov	r1, r8
   114f0:	mov	r0, r7
   114f4:	blx	r3
   114f8:	cmp	r6, r4
   114fc:	bne	114e0 <__libc_csu_init@@Base+0x34>
   11500:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11504:	andeq	r0, r1, r8, lsr sl
   11508:	andeq	r0, r1, r0, lsr sl

0001150c <__libc_csu_fini@@Base>:
   1150c:	bx	lr

Disassembly of section .fini:

00011510 <.fini>:
   11510:	push	{r3, lr}
   11514:	pop	{r3, pc}
