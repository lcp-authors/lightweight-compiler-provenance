
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

000110a0 <.init>:
   110a0:	push	{r3, lr}
   110a4:	bl	111ec <_start@@Base+0x3c>
   110a8:	pop	{r3, pc}

Disassembly of section .plt:

000110ac <calloc@plt-0x14>:
   110ac:	push	{lr}		; (str lr, [sp, #-4]!)
   110b0:	ldr	lr, [pc, #4]	; 110bc <calloc@plt-0x4>
   110b4:	add	lr, pc, lr
   110b8:	ldr	pc, [lr, #8]!
   110bc:	andeq	r1, r1, r4, asr #30

000110c0 <calloc@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #69632	; 0x11000
   110c8:	ldr	pc, [ip, #3908]!	; 0xf44

000110cc <strcmp@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #69632	; 0x11000
   110d4:	ldr	pc, [ip, #3900]!	; 0xf3c

000110d8 <strtol@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #69632	; 0x11000
   110e0:	ldr	pc, [ip, #3892]!	; 0xf34

000110e4 <printf@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #69632	; 0x11000
   110ec:	ldr	pc, [ip, #3884]!	; 0xf2c

000110f0 <__isoc99_fscanf@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #69632	; 0x11000
   110f8:	ldr	pc, [ip, #3876]!	; 0xf24

000110fc <fopen@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #69632	; 0x11000
   11104:	ldr	pc, [ip, #3868]!	; 0xf1c

00011108 <free@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #69632	; 0x11000
   11110:	ldr	pc, [ip, #3860]!	; 0xf14

00011114 <realloc@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #69632	; 0x11000
   1111c:	ldr	pc, [ip, #3852]!	; 0xf0c

00011120 <strcpy@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #69632	; 0x11000
   11128:	ldr	pc, [ip, #3844]!	; 0xf04

0001112c <puts@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #69632	; 0x11000
   11134:	ldr	pc, [ip, #3836]!	; 0xefc

00011138 <malloc@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #69632	; 0x11000
   11140:	ldr	pc, [ip, #3828]!	; 0xef4

00011144 <__libc_start_main@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #69632	; 0x11000
   1114c:	ldr	pc, [ip, #3820]!	; 0xeec

00011150 <__gmon_start__@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #69632	; 0x11000
   11158:	ldr	pc, [ip, #3812]!	; 0xee4

0001115c <strlen@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #69632	; 0x11000
   11164:	ldr	pc, [ip, #3804]!	; 0xedc

00011168 <setvbuf@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #69632	; 0x11000
   11170:	ldr	pc, [ip, #3796]!	; 0xed4

00011174 <memset@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #69632	; 0x11000
   1117c:	ldr	pc, [ip, #3788]!	; 0xecc

00011180 <putchar@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #69632	; 0x11000
   11188:	ldr	pc, [ip, #3780]!	; 0xec4

0001118c <fclose@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #69632	; 0x11000
   11194:	ldr	pc, [ip, #3772]!	; 0xebc

00011198 <getline@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #69632	; 0x11000
   111a0:	ldr	pc, [ip, #3764]!	; 0xeb4

000111a4 <abort@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #69632	; 0x11000
   111ac:	ldr	pc, [ip, #3756]!	; 0xeac

Disassembly of section .text:

000111b0 <_start@@Base>:
   111b0:	mov	fp, #0
   111b4:	mov	lr, #0
   111b8:	pop	{r1}		; (ldr r1, [sp], #4)
   111bc:	mov	r2, sp
   111c0:	push	{r2}		; (str r2, [sp, #-4]!)
   111c4:	push	{r0}		; (str r0, [sp, #-4]!)
   111c8:	ldr	ip, [pc, #16]	; 111e0 <_start@@Base+0x30>
   111cc:	push	{ip}		; (str ip, [sp, #-4]!)
   111d0:	ldr	r0, [pc, #12]	; 111e4 <_start@@Base+0x34>
   111d4:	ldr	r3, [pc, #12]	; 111e8 <_start@@Base+0x38>
   111d8:	bl	11144 <__libc_start_main@plt>
   111dc:	bl	111a4 <abort@plt>
   111e0:	andeq	r2, r1, ip, lsl ip
   111e4:	andeq	r1, r1, r8, asr #11
   111e8:			; <UNDEFINED> instruction: 0x00012bbc
   111ec:	ldr	r3, [pc, #20]	; 11208 <_start@@Base+0x58>
   111f0:	ldr	r2, [pc, #20]	; 1120c <_start@@Base+0x5c>
   111f4:	add	r3, pc, r3
   111f8:	ldr	r2, [r3, r2]
   111fc:	cmp	r2, #0
   11200:	bxeq	lr
   11204:	b	11150 <__gmon_start__@plt>
   11208:	andeq	r1, r1, r4, lsl #28
   1120c:	andeq	r0, r0, ip, asr r0
   11210:	ldr	r0, [pc, #24]	; 11230 <_start@@Base+0x80>
   11214:	ldr	r3, [pc, #24]	; 11234 <_start@@Base+0x84>
   11218:	cmp	r3, r0
   1121c:	bxeq	lr
   11220:	ldr	r3, [pc, #16]	; 11238 <_start@@Base+0x88>
   11224:	cmp	r3, #0
   11228:	bxeq	lr
   1122c:	bx	r3
   11230:	andeq	r3, r2, ip, rrx
   11234:	andeq	r3, r2, ip, rrx
   11238:	andeq	r0, r0, r0
   1123c:	ldr	r0, [pc, #36]	; 11268 <_start@@Base+0xb8>
   11240:	ldr	r1, [pc, #36]	; 1126c <_start@@Base+0xbc>
   11244:	sub	r1, r1, r0
   11248:	asr	r1, r1, #2
   1124c:	add	r1, r1, r1, lsr #31
   11250:	asrs	r1, r1, #1
   11254:	bxeq	lr
   11258:	ldr	r3, [pc, #16]	; 11270 <_start@@Base+0xc0>
   1125c:	cmp	r3, #0
   11260:	bxeq	lr
   11264:	bx	r3
   11268:	andeq	r3, r2, ip, rrx
   1126c:	andeq	r3, r2, ip, rrx
   11270:	andeq	r0, r0, r0
   11274:	push	{r4, lr}
   11278:	ldr	r4, [pc, #24]	; 11298 <_start@@Base+0xe8>
   1127c:	ldrb	r3, [r4]
   11280:	cmp	r3, #0
   11284:	popne	{r4, pc}
   11288:	bl	11210 <_start@@Base+0x60>
   1128c:	mov	r3, #1
   11290:	strb	r3, [r4]
   11294:	pop	{r4, pc}
   11298:	andeq	r3, r2, ip, rrx
   1129c:	b	1123c <_start@@Base+0x8c>

000112a0 <proximas_n_chegadas@@Base>:
   112a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112a4:	add	fp, sp, #28
   112a8:	sub	sp, sp, #4
   112ac:	mov	r5, r0
   112b0:	ldr	r0, [r2, #8]
   112b4:	ldr	r6, [r2]
   112b8:	mov	r8, r3
   112bc:	mov	sl, r2
   112c0:	mov	r4, r1
   112c4:	lsl	r0, r0, #2
   112c8:	bl	11138 <malloc@plt>
   112cc:	mov	r9, r0
   112d0:	cmp	r6, #0
   112d4:	beq	112fc <proximas_n_chegadas@@Base+0x5c>
   112d8:	mov	r7, r9
   112dc:	mov	r0, #200	; 0xc8
   112e0:	bl	11138 <malloc@plt>
   112e4:	str	r0, [r7], #4
   112e8:	ldr	r1, [r6]
   112ec:	bl	11120 <strcpy@plt>
   112f0:	ldr	r6, [r6, #4]
   112f4:	cmp	r6, #0
   112f8:	bne	112dc <proximas_n_chegadas@@Base+0x3c>
   112fc:	ldr	r0, [r5, #8]
   11300:	bl	1201c <heap_nova@@Base>
   11304:	ldr	r6, [r5]
   11308:	mov	r7, r0
   1130c:	cmp	r6, #0
   11310:	beq	11358 <proximas_n_chegadas@@Base+0xb8>
   11314:	ldr	r4, [r4]
   11318:	mov	r1, #0
   1131c:	mov	r2, #10
   11320:	ldr	r0, [r4], #4
   11324:	bl	110d8 <strtol@plt>
   11328:	ldr	r5, [r9, r0, lsl #2]
   1132c:	ldr	r0, [r6]
   11330:	mov	r1, #0
   11334:	mov	r2, #10
   11338:	bl	110d8 <strtol@plt>
   1133c:	mov	r2, r0
   11340:	mov	r0, r7
   11344:	mov	r1, r5
   11348:	bl	12158 <heap_insere@@Base>
   1134c:	ldr	r6, [r6, #4]
   11350:	cmp	r6, #0
   11354:	bne	11314 <proximas_n_chegadas@@Base+0x74>
   11358:	ldr	r0, [sl, #8]
   1135c:	cmp	r0, #1
   11360:	blt	11380 <proximas_n_chegadas@@Base+0xe0>
   11364:	mov	r4, #0
   11368:	ldr	r0, [r9, r4, lsl #2]
   1136c:	bl	11108 <free@plt>
   11370:	ldr	r0, [sl, #8]
   11374:	add	r4, r4, #1
   11378:	cmp	r4, r0
   1137c:	blt	11368 <proximas_n_chegadas@@Base+0xc8>
   11380:	mov	r0, r9
   11384:	bl	11108 <free@plt>
   11388:	cmp	r8, #1
   1138c:	blt	113cc <proximas_n_chegadas@@Base+0x12c>
   11390:	ldr	r5, [pc, #72]	; 113e0 <proximas_n_chegadas@@Base+0x140>
   11394:	mov	r4, #0
   11398:	add	r5, pc, r5
   1139c:	mov	r0, r7
   113a0:	bl	12274 <heap_remove@@Base>
   113a4:	mov	r6, r0
   113a8:	add	r4, r4, #1
   113ac:	mov	r0, r5
   113b0:	mov	r1, r4
   113b4:	mov	r2, r6
   113b8:	bl	110e4 <printf@plt>
   113bc:	mov	r0, r6
   113c0:	bl	11108 <free@plt>
   113c4:	cmp	r8, r4
   113c8:	bne	1139c <proximas_n_chegadas@@Base+0xfc>
   113cc:	mov	r0, r7
   113d0:	bl	12078 <heap_apaga@@Base>
   113d4:	mov	r0, #1
   113d8:	sub	sp, fp, #28
   113dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113e0:	muleq	r0, r4, r8

000113e4 <pesquisa_destinos@@Base>:
   113e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   113e8:	add	fp, sp, #28
   113ec:	sub	sp, sp, #4
   113f0:	mov	r7, r2
   113f4:	mov	sl, r1
   113f8:	mov	r8, r0
   113fc:	bl	124c8 <lista_nova@@Base>
   11400:	ldr	r4, [sl]
   11404:	mov	r9, r0
   11408:	mov	r6, #0
   1140c:	cmp	r4, #0
   11410:	bne	11428 <pesquisa_destinos@@Base+0x44>
   11414:	b	1143c <pesquisa_destinos@@Base+0x58>
   11418:	ldr	r4, [r4, #4]
   1141c:	add	r6, r6, #1
   11420:	cmp	r4, #0
   11424:	beq	1143c <pesquisa_destinos@@Base+0x58>
   11428:	ldr	r0, [r4]
   1142c:	mov	r1, r7
   11430:	bl	110cc <strcmp@plt>
   11434:	cmp	r0, #0
   11438:	bne	11418 <pesquisa_destinos@@Base+0x34>
   1143c:	mov	r0, r8
   11440:	mov	r1, r6
   11444:	bl	11bb8 <v_sucessores@@Base>
   11448:	mov	r6, r0
   1144c:	ldr	r0, [r0]
   11450:	cmp	r0, #1
   11454:	blt	114b4 <pesquisa_destinos@@Base+0xd0>
   11458:	mov	r7, #0
   1145c:	ldr	r4, [sl]
   11460:	mov	r0, r6
   11464:	mov	r1, r7
   11468:	bl	12940 <vetor_elemento@@Base>
   1146c:	cmp	r0, #1
   11470:	blt	11494 <pesquisa_destinos@@Base+0xb0>
   11474:	mov	r5, #0
   11478:	ldr	r4, [r4, #4]
   1147c:	mov	r0, r6
   11480:	mov	r1, r7
   11484:	bl	12940 <vetor_elemento@@Base>
   11488:	add	r5, r5, #1
   1148c:	cmp	r5, r0
   11490:	blt	11478 <pesquisa_destinos@@Base+0x94>
   11494:	ldr	r1, [r4]
   11498:	mov	r0, r9
   1149c:	mov	r2, #0
   114a0:	bl	12570 <lista_insere@@Base>
   114a4:	ldr	r0, [r6]
   114a8:	add	r7, r7, #1
   114ac:	cmp	r7, r0
   114b0:	blt	1145c <pesquisa_destinos@@Base+0x78>
   114b4:	mov	r0, r6
   114b8:	bl	128dc <vetor_apaga@@Base>
   114bc:	mov	r0, r9
   114c0:	sub	sp, fp, #28
   114c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000114c8 <carrega_rotas@@Base>:
   114c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   114cc:	add	fp, sp, #24
   114d0:	sub	sp, sp, #8
   114d4:	cmp	r1, #0
   114d8:	beq	115a4 <carrega_rotas@@Base+0xdc>
   114dc:	mov	r4, r1
   114e0:	ldr	r1, [pc, #204]	; 115b4 <carrega_rotas@@Base+0xec>
   114e4:	mov	r6, r0
   114e8:	mov	r0, r4
   114ec:	add	r1, pc, r1
   114f0:	bl	110fc <fopen@plt>
   114f4:	cmp	r0, #0
   114f8:	beq	11584 <carrega_rotas@@Base+0xbc>
   114fc:	mov	r5, r0
   11500:	mov	r0, r6
   11504:	bl	12540 <lista_tamanho@@Base>
   11508:	mov	r1, #0
   1150c:	bl	1187c <grafo_novo@@Base>
   11510:	cmp	r0, #0
   11514:	beq	11598 <carrega_rotas@@Base+0xd0>
   11518:	ldr	r1, [pc, #156]	; 115bc <carrega_rotas@@Base+0xf4>
   1151c:	mov	r4, r0
   11520:	add	r2, sp, #4
   11524:	mov	r3, sp
   11528:	mov	r0, r5
   1152c:	add	r1, pc, r1
   11530:	bl	110f0 <__isoc99_fscanf@plt>
   11534:	cmp	r0, #2
   11538:	bne	11578 <carrega_rotas@@Base+0xb0>
   1153c:	ldr	r8, [pc, #124]	; 115c0 <carrega_rotas@@Base+0xf8>
   11540:	add	r7, sp, #4
   11544:	mov	r6, sp
   11548:	add	r8, pc, r8
   1154c:	ldr	r2, [sp]
   11550:	ldr	r1, [sp, #4]
   11554:	mov	r0, r4
   11558:	bl	11960 <grafo_adiciona@@Base>
   1155c:	mov	r0, r5
   11560:	mov	r1, r8
   11564:	mov	r2, r7
   11568:	mov	r3, r6
   1156c:	bl	110f0 <__isoc99_fscanf@plt>
   11570:	cmp	r0, #2
   11574:	beq	1154c <carrega_rotas@@Base+0x84>
   11578:	mov	r0, r5
   1157c:	bl	1118c <fclose@plt>
   11580:	b	115a8 <carrega_rotas@@Base+0xe0>
   11584:	ldr	r0, [pc, #44]	; 115b8 <carrega_rotas@@Base+0xf0>
   11588:	mov	r1, r4
   1158c:	add	r0, pc, r0
   11590:	bl	110e4 <printf@plt>
   11594:	b	115a4 <carrega_rotas@@Base+0xdc>
   11598:	ldr	r0, [pc, #36]	; 115c4 <carrega_rotas@@Base+0xfc>
   1159c:	add	r0, pc, r0
   115a0:	bl	1112c <puts@plt>
   115a4:	mov	r4, #0
   115a8:	mov	r0, r4
   115ac:	sub	sp, fp, #24
   115b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   115b4:	andeq	r1, r0, sl, asr #14
   115b8:	andeq	r1, r0, ip, lsr #13
   115bc:	andeq	r1, r0, sp, lsr #14
   115c0:	andeq	r1, r0, r1, lsl r7
   115c4:	andeq	r1, r0, ip, asr #14

000115c8 <main@@Base>:
   115c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115cc:	add	fp, sp, #28
   115d0:	sub	sp, sp, #28
   115d4:	ldr	r0, [pc, #568]	; 11814 <main@@Base+0x24c>
   115d8:	mov	r1, #0
   115dc:	mov	r2, #2
   115e0:	mov	r3, #0
   115e4:	mov	r8, #0
   115e8:	ldr	r0, [pc, r0]
   115ec:	ldr	r0, [r0]
   115f0:	bl	11168 <setvbuf@plt>
   115f4:	ldr	r0, [pc, #540]	; 11818 <main@@Base+0x250>
   115f8:	ldr	r1, [pc, #540]	; 1181c <main@@Base+0x254>
   115fc:	add	r0, pc, r0
   11600:	add	r1, pc, r1
   11604:	bl	110fc <fopen@plt>
   11608:	mov	r5, r0
   1160c:	bl	124c8 <lista_nova@@Base>
   11610:	mov	r9, r0
   11614:	add	r0, sp, #24
   11618:	add	r1, sp, #20
   1161c:	mov	r2, r5
   11620:	str	r8, [sp, #24]
   11624:	str	r8, [sp, #20]
   11628:	bl	11198 <getline@plt>
   1162c:	ldr	r4, [sp, #24]
   11630:	cmn	r0, #1
   11634:	beq	1167c <main@@Base+0xb4>
   11638:	add	r6, sp, #24
   1163c:	add	r7, sp, #20
   11640:	mov	r0, r4
   11644:	bl	1115c <strlen@plt>
   11648:	add	r0, r4, r0
   1164c:	mov	r2, #0
   11650:	strb	r8, [r0, #-1]
   11654:	mov	r0, r9
   11658:	ldr	r1, [sp, #24]
   1165c:	bl	12570 <lista_insere@@Base>
   11660:	mov	r0, r6
   11664:	mov	r1, r7
   11668:	mov	r2, r5
   1166c:	bl	11198 <getline@plt>
   11670:	ldr	r4, [sp, #24]
   11674:	cmn	r0, #1
   11678:	bne	11640 <main@@Base+0x78>
   1167c:	mov	r0, r4
   11680:	bl	11108 <free@plt>
   11684:	mov	r0, r5
   11688:	bl	1118c <fclose@plt>
   1168c:	ldr	r1, [pc, #396]	; 11820 <main@@Base+0x258>
   11690:	mov	r0, r9
   11694:	add	r1, pc, r1
   11698:	bl	114c8 <carrega_rotas@@Base>
   1169c:	str	r0, [sp]
   116a0:	ldr	r0, [pc, #380]	; 11824 <main@@Base+0x25c>
   116a4:	add	r0, pc, r0
   116a8:	bl	1112c <puts@plt>
   116ac:	ldr	r0, [pc, #372]	; 11828 <main@@Base+0x260>
   116b0:	ldr	r1, [pc, #372]	; 1182c <main@@Base+0x264>
   116b4:	add	r0, pc, r0
   116b8:	add	r1, pc, r1
   116bc:	bl	110fc <fopen@plt>
   116c0:	mov	sl, r0
   116c4:	bl	124c8 <lista_nova@@Base>
   116c8:	mov	r7, r0
   116cc:	bl	124c8 <lista_nova@@Base>
   116d0:	ldr	r1, [pc, #344]	; 11830 <main@@Base+0x268>
   116d4:	mov	r5, r0
   116d8:	add	r2, sp, #15
   116dc:	add	r3, sp, #5
   116e0:	mov	r0, sl
   116e4:	add	r1, pc, r1
   116e8:	bl	110f0 <__isoc99_fscanf@plt>
   116ec:	cmp	r0, #2
   116f0:	bne	11740 <main@@Base+0x178>
   116f4:	ldr	r8, [pc, #312]	; 11834 <main@@Base+0x26c>
   116f8:	add	r4, sp, #15
   116fc:	add	r6, sp, #5
   11700:	add	r8, pc, r8
   11704:	mov	r0, r7
   11708:	mov	r1, r4
   1170c:	mov	r2, #0
   11710:	bl	12570 <lista_insere@@Base>
   11714:	mov	r0, r5
   11718:	mov	r1, r6
   1171c:	mov	r2, #0
   11720:	bl	12570 <lista_insere@@Base>
   11724:	mov	r0, sl
   11728:	mov	r1, r8
   1172c:	mov	r2, r4
   11730:	mov	r3, r6
   11734:	bl	110f0 <__isoc99_fscanf@plt>
   11738:	cmp	r0, #2
   1173c:	beq	11704 <main@@Base+0x13c>
   11740:	mov	r0, r7
   11744:	mov	r1, r5
   11748:	mov	r2, r9
   1174c:	mov	r3, #5
   11750:	bl	112a0 <proximas_n_chegadas@@Base>
   11754:	mov	r0, r7
   11758:	bl	124f8 <lista_apaga@@Base>
   1175c:	mov	r0, r5
   11760:	bl	124f8 <lista_apaga@@Base>
   11764:	mov	r0, sl
   11768:	bl	1118c <fclose@plt>
   1176c:	ldr	r0, [pc, #196]	; 11838 <main@@Base+0x270>
   11770:	add	r0, pc, r0
   11774:	bl	1112c <puts@plt>
   11778:	ldr	r2, [pc, #188]	; 1183c <main@@Base+0x274>
   1177c:	ldr	r6, [sp]
   11780:	mov	r1, r9
   11784:	add	r2, pc, r2
   11788:	mov	r0, r6
   1178c:	bl	113e4 <pesquisa_destinos@@Base>
   11790:	cmp	r0, #0
   11794:	beq	117e4 <main@@Base+0x21c>
   11798:	mov	r5, r0
   1179c:	bl	12540 <lista_tamanho@@Base>
   117a0:	mov	r2, r0
   117a4:	ldr	r0, [pc, #156]	; 11848 <main@@Base+0x280>
   117a8:	ldr	r1, [pc, #156]	; 1184c <main@@Base+0x284>
   117ac:	add	r0, pc, r0
   117b0:	add	r1, pc, r1
   117b4:	bl	110e4 <printf@plt>
   117b8:	ldr	r4, [r5]
   117bc:	cmp	r4, #0
   117c0:	beq	117d8 <main@@Base+0x210>
   117c4:	ldr	r0, [r4]
   117c8:	bl	1112c <puts@plt>
   117cc:	ldr	r4, [r4, #4]
   117d0:	cmp	r4, #0
   117d4:	bne	117c4 <main@@Base+0x1fc>
   117d8:	mov	r0, r5
   117dc:	bl	124f8 <lista_apaga@@Base>
   117e0:	b	117f8 <main@@Base+0x230>
   117e4:	ldr	r0, [pc, #84]	; 11840 <main@@Base+0x278>
   117e8:	ldr	r1, [pc, #84]	; 11844 <main@@Base+0x27c>
   117ec:	add	r0, pc, r0
   117f0:	add	r1, pc, r1
   117f4:	bl	110e4 <printf@plt>
   117f8:	mov	r0, r6
   117fc:	bl	118dc <grafo_apaga@@Base>
   11800:	mov	r0, r9
   11804:	bl	124f8 <lista_apaga@@Base>
   11808:	mov	r0, #0
   1180c:	sub	sp, fp, #28
   11810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11814:	andeq	r1, r1, r0, ror sl
   11818:	andeq	r1, r0, r3, ror #12
   1181c:	andeq	r1, r0, r6, lsr r6
   11820:	ldrdeq	r1, [r0], -sl
   11824:	andeq	r1, r0, r4, ror #12
   11828:	andeq	r1, r0, r4, asr #11
   1182c:	andeq	r1, r0, lr, ror r5
   11830:	andeq	r1, r0, r1, lsr #11
   11834:	andeq	r1, r0, r5, lsl #11
   11838:			; <UNDEFINED> instruction: 0x000015b8
   1183c:	andeq	r1, r0, r7, lsl #10
   11840:	andeq	r1, r0, sl, lsr #9
   11844:	muleq	r0, fp, r4
   11848:	andeq	r1, r0, pc, lsl #10
   1184c:	ldrdeq	r1, [r0], -fp

00011850 <cria_no@@Base>:
   11850:	push	{r4, sl, fp, lr}
   11854:	add	fp, sp, #8
   11858:	mov	r4, r0
   1185c:	mov	r0, #8
   11860:	bl	11138 <malloc@plt>
   11864:	cmp	r0, #0
   11868:	moveq	r0, #0
   1186c:	movne	r1, #0
   11870:	strne	r4, [r0]
   11874:	strne	r1, [r0, #4]
   11878:	pop	{r4, sl, fp, pc}

0001187c <grafo_novo@@Base>:
   1187c:	push	{r4, r5, r6, sl, fp, lr}
   11880:	add	fp, sp, #16
   11884:	mov	r5, r0
   11888:	mov	r0, #12
   1188c:	mov	r6, r1
   11890:	bl	11138 <malloc@plt>
   11894:	cmp	r0, #0
   11898:	beq	118d0 <grafo_novo@@Base+0x54>
   1189c:	str	r6, [r0]
   118a0:	mov	r4, r0
   118a4:	str	r5, [r0, #4]
   118a8:	mov	r0, r5
   118ac:	mov	r1, #8
   118b0:	bl	110c0 <calloc@plt>
   118b4:	cmp	r0, #0
   118b8:	str	r0, [r4, #8]
   118bc:	beq	118c8 <grafo_novo@@Base+0x4c>
   118c0:	mov	r0, r4
   118c4:	pop	{r4, r5, r6, sl, fp, pc}
   118c8:	mov	r0, r4
   118cc:	bl	11108 <free@plt>
   118d0:	mov	r4, #0
   118d4:	mov	r0, r4
   118d8:	pop	{r4, r5, r6, sl, fp, pc}

000118dc <grafo_apaga@@Base>:
   118dc:	cmp	r0, #0
   118e0:	bxeq	lr
   118e4:	push	{r4, r5, fp, lr}
   118e8:	add	fp, sp, #8
   118ec:	mov	r4, r0
   118f0:	ldr	r0, [r0, #8]
   118f4:	cmp	r0, #0
   118f8:	beq	11954 <grafo_apaga@@Base+0x78>
   118fc:	ldr	r2, [r4, #4]
   11900:	cmp	r2, #1
   11904:	blt	11950 <grafo_apaga@@Base+0x74>
   11908:	mov	r5, #0
   1190c:	add	r3, r0, r5, lsl #3
   11910:	ldr	r1, [r3, #4]!
   11914:	cmp	r1, #0
   11918:	beq	11944 <grafo_apaga@@Base+0x68>
   1191c:	ldr	r0, [r1, #4]
   11920:	str	r0, [r3]
   11924:	mov	r0, r1
   11928:	bl	11108 <free@plt>
   1192c:	ldr	r0, [r4, #8]
   11930:	add	r3, r0, r5, lsl #3
   11934:	ldr	r1, [r3, #4]!
   11938:	cmp	r1, #0
   1193c:	bne	1191c <grafo_apaga@@Base+0x40>
   11940:	ldr	r2, [r4, #4]
   11944:	add	r5, r5, #1
   11948:	cmp	r5, r2
   1194c:	blt	1190c <grafo_apaga@@Base+0x30>
   11950:	bl	11108 <free@plt>
   11954:	mov	r0, r4
   11958:	pop	{r4, r5, fp, lr}
   1195c:	b	11108 <free@plt>

00011960 <grafo_adiciona@@Base>:
   11960:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11964:	add	fp, sp, #24
   11968:	cmp	r0, #0
   1196c:	beq	119ac <grafo_adiciona@@Base+0x4c>
   11970:	ldr	r8, [r0, #8]
   11974:	mov	r6, r0
   11978:	mov	r4, r2
   1197c:	mov	r5, r1
   11980:	add	r7, r8, r1, lsl #3
   11984:	ldr	r0, [r7, #4]!
   11988:	cmp	r0, #0
   1198c:	bne	119a0 <grafo_adiciona@@Base+0x40>
   11990:	b	119b0 <grafo_adiciona@@Base+0x50>
   11994:	ldr	r0, [r0, #4]
   11998:	cmp	r0, #0
   1199c:	beq	119b0 <grafo_adiciona@@Base+0x50>
   119a0:	ldr	r1, [r0]
   119a4:	cmp	r1, r4
   119a8:	bne	11994 <grafo_adiciona@@Base+0x34>
   119ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   119b0:	mov	r0, #8
   119b4:	bl	11138 <malloc@plt>
   119b8:	str	r4, [r0]
   119bc:	ldr	r1, [r7]
   119c0:	str	r1, [r0, #4]
   119c4:	str	r0, [r7]
   119c8:	ldr	r0, [r8, r5, lsl #3]
   119cc:	add	r0, r0, #1
   119d0:	str	r0, [r8, r5, lsl #3]
   119d4:	ldr	r0, [r6]
   119d8:	cmp	r0, #0
   119dc:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   119e0:	mov	r0, #8
   119e4:	bl	11138 <malloc@plt>
   119e8:	str	r5, [r0]
   119ec:	add	r1, r8, r4, lsl #3
   119f0:	ldr	r2, [r1, #4]
   119f4:	str	r2, [r0, #4]
   119f8:	ldr	r2, [r8, r4, lsl #3]
   119fc:	add	r2, r2, #1
   11a00:	str	r2, [r8, r4, lsl #3]
   11a04:	str	r0, [r1, #4]
   11a08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011a0c <grafo_aresta@@Base>:
   11a0c:	mov	r3, r0
   11a10:	mov	r0, #0
   11a14:	cmp	r3, #0
   11a18:	beq	11a40 <grafo_aresta@@Base+0x34>
   11a1c:	ldr	r3, [r3, #8]
   11a20:	add	r1, r3, r1, lsl #3
   11a24:	ldr	r1, [r1, #4]
   11a28:	cmp	r1, #0
   11a2c:	bxeq	lr
   11a30:	ldr	r3, [r1]
   11a34:	cmp	r3, r2
   11a38:	bne	11a24 <grafo_aresta@@Base+0x18>
   11a3c:	mov	r0, #1
   11a40:	bx	lr

00011a44 <grafo_remove@@Base>:
   11a44:	push	{r4, r5, r6, sl, fp, lr}
   11a48:	add	fp, sp, #16
   11a4c:	cmp	r0, #0
   11a50:	beq	11ac0 <grafo_remove@@Base+0x7c>
   11a54:	mov	r6, r0
   11a58:	ldr	r0, [r0, #8]
   11a5c:	mov	r4, r1
   11a60:	add	r1, r0, r1, lsl #3
   11a64:	ldr	r0, [r1, #4]!
   11a68:	cmp	r0, #0
   11a6c:	beq	11ac0 <grafo_remove@@Base+0x7c>
   11a70:	mov	r5, r2
   11a74:	ldr	r2, [r0]
   11a78:	cmp	r2, r5
   11a7c:	bne	11a8c <grafo_remove@@Base+0x48>
   11a80:	ldr	r2, [r0, #4]
   11a84:	str	r2, [r1]
   11a88:	b	11ab0 <grafo_remove@@Base+0x6c>
   11a8c:	mov	r1, r0
   11a90:	ldr	r0, [r0, #4]
   11a94:	cmp	r0, #0
   11a98:	beq	11ab4 <grafo_remove@@Base+0x70>
   11a9c:	ldr	r2, [r0]
   11aa0:	cmp	r2, r5
   11aa4:	bne	11a8c <grafo_remove@@Base+0x48>
   11aa8:	ldr	r2, [r0, #4]
   11aac:	str	r2, [r1, #4]
   11ab0:	bl	11108 <free@plt>
   11ab4:	ldr	r0, [r6]
   11ab8:	cmp	r0, #0
   11abc:	beq	11ac4 <grafo_remove@@Base+0x80>
   11ac0:	pop	{r4, r5, r6, sl, fp, pc}
   11ac4:	ldr	r0, [r6, #8]
   11ac8:	add	r1, r0, r5, lsl #3
   11acc:	ldr	r0, [r1, #4]!
   11ad0:	ldr	r2, [r0]
   11ad4:	cmp	r2, r4
   11ad8:	bne	11aec <grafo_remove@@Base+0xa8>
   11adc:	ldr	r2, [r0, #4]
   11ae0:	str	r2, [r1]
   11ae4:	pop	{r4, r5, r6, sl, fp, lr}
   11ae8:	b	11108 <free@plt>
   11aec:	mov	r1, r0
   11af0:	ldr	r0, [r0, #4]
   11af4:	cmp	r0, #0
   11af8:	popeq	{r4, r5, r6, sl, fp, pc}
   11afc:	ldr	r2, [r0]
   11b00:	cmp	r2, r4
   11b04:	bne	11aec <grafo_remove@@Base+0xa8>
   11b08:	ldr	r2, [r0, #4]
   11b0c:	str	r2, [r1, #4]
   11b10:	pop	{r4, r5, r6, sl, fp, lr}
   11b14:	b	11108 <free@plt>

00011b18 <grafo_imprime@@Base>:
   11b18:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11b1c:	add	fp, sp, #24
   11b20:	mov	r4, r0
   11b24:	ldr	r0, [r0, #4]
   11b28:	cmp	r0, #1
   11b2c:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   11b30:	ldr	r9, [pc, #116]	; 11bac <grafo_imprime@@Base+0x94>
   11b34:	ldr	r8, [pc, #116]	; 11bb0 <grafo_imprime@@Base+0x98>
   11b38:	ldr	r7, [pc, #116]	; 11bb4 <grafo_imprime@@Base+0x9c>
   11b3c:	mov	r5, #0
   11b40:	add	r9, pc, r9
   11b44:	add	r8, pc, r8
   11b48:	add	r7, pc, r7
   11b4c:	ldr	r0, [r4, #8]
   11b50:	mov	r1, r5
   11b54:	add	r0, r0, r5, lsl #3
   11b58:	ldr	r6, [r0, #4]
   11b5c:	mov	r0, r9
   11b60:	bl	110e4 <printf@plt>
   11b64:	cmp	r6, #0
   11b68:	beq	11b90 <grafo_imprime@@Base+0x78>
   11b6c:	ldr	r1, [r6]
   11b70:	mov	r0, r8
   11b74:	b	11b80 <grafo_imprime@@Base+0x68>
   11b78:	ldr	r1, [r6]
   11b7c:	mov	r0, r7
   11b80:	bl	110e4 <printf@plt>
   11b84:	ldr	r6, [r6, #4]
   11b88:	cmp	r6, #0
   11b8c:	bne	11b78 <grafo_imprime@@Base+0x60>
   11b90:	mov	r0, #10
   11b94:	bl	11180 <putchar@plt>
   11b98:	ldr	r0, [r4, #4]
   11b9c:	add	r5, r5, #1
   11ba0:	cmp	r5, r0
   11ba4:	blt	11b4c <grafo_imprime@@Base+0x34>
   11ba8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11bac:	andeq	r1, r0, r8, lsl #4
   11bb0:	andeq	r1, r0, r8, lsl r1
   11bb4:	andeq	r1, r0, r5, lsl #4

00011bb8 <v_sucessores@@Base>:
   11bb8:	push	{r4, r5, r6, r7, fp, lr}
   11bbc:	add	fp, sp, #16
   11bc0:	mov	r4, #0
   11bc4:	cmp	r0, #0
   11bc8:	beq	11c40 <v_sucessores@@Base+0x88>
   11bcc:	mov	r5, r1
   11bd0:	cmp	r1, #0
   11bd4:	blt	11c40 <v_sucessores@@Base+0x88>
   11bd8:	mov	r6, r0
   11bdc:	ldr	r0, [r0, #4]
   11be0:	cmp	r0, r5
   11be4:	ble	11c40 <v_sucessores@@Base+0x88>
   11be8:	bl	128ac <vetor_novo@@Base>
   11bec:	mov	r4, r0
   11bf0:	ldr	r0, [r6, #4]
   11bf4:	cmp	r0, #1
   11bf8:	blt	11c40 <v_sucessores@@Base+0x88>
   11bfc:	mov	r7, #0
   11c00:	ldr	r1, [r6, #8]
   11c04:	add	r1, r1, r5, lsl #3
   11c08:	ldr	r1, [r1, #4]
   11c0c:	cmp	r1, #0
   11c10:	beq	11c34 <v_sucessores@@Base+0x7c>
   11c14:	ldr	r2, [r1]
   11c18:	cmp	r2, r7
   11c1c:	bne	11c08 <v_sucessores@@Base+0x50>
   11c20:	mov	r0, r4
   11c24:	mov	r1, r7
   11c28:	mvn	r2, #0
   11c2c:	bl	12968 <vetor_insere@@Base>
   11c30:	ldr	r0, [r6, #4]
   11c34:	add	r7, r7, #1
   11c38:	cmp	r7, r0
   11c3c:	blt	11c00 <v_sucessores@@Base+0x48>
   11c40:	mov	r0, r4
   11c44:	pop	{r4, r5, r6, r7, fp, pc}

00011c48 <v_antecessores@@Base>:
   11c48:	push	{r4, r5, r6, r7, fp, lr}
   11c4c:	add	fp, sp, #16
   11c50:	mov	r4, #0
   11c54:	cmp	r0, #0
   11c58:	beq	11cd0 <v_antecessores@@Base+0x88>
   11c5c:	mov	r5, r1
   11c60:	cmp	r1, #0
   11c64:	blt	11cd0 <v_antecessores@@Base+0x88>
   11c68:	mov	r6, r0
   11c6c:	ldr	r0, [r0, #4]
   11c70:	cmp	r0, r5
   11c74:	ble	11cd0 <v_antecessores@@Base+0x88>
   11c78:	bl	128ac <vetor_novo@@Base>
   11c7c:	mov	r4, r0
   11c80:	ldr	r0, [r6, #4]
   11c84:	cmp	r0, #1
   11c88:	blt	11cd0 <v_antecessores@@Base+0x88>
   11c8c:	mov	r7, #0
   11c90:	ldr	r1, [r6, #8]
   11c94:	add	r1, r1, r7, lsl #3
   11c98:	ldr	r1, [r1, #4]
   11c9c:	cmp	r1, #0
   11ca0:	beq	11cc4 <v_antecessores@@Base+0x7c>
   11ca4:	ldr	r2, [r1]
   11ca8:	cmp	r2, r5
   11cac:	bne	11c98 <v_antecessores@@Base+0x50>
   11cb0:	mov	r0, r4
   11cb4:	mov	r1, r7
   11cb8:	mvn	r2, #0
   11cbc:	bl	12968 <vetor_insere@@Base>
   11cc0:	ldr	r0, [r6, #4]
   11cc4:	add	r7, r7, #1
   11cc8:	cmp	r7, r0
   11ccc:	blt	11c90 <v_antecessores@@Base+0x48>
   11cd0:	mov	r0, r4
   11cd4:	pop	{r4, r5, r6, r7, fp, pc}

00011cd8 <dfs_helper@@Base>:
   11cd8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11cdc:	add	fp, sp, #24
   11ce0:	sub	sp, sp, #8
   11ce4:	ldr	r9, [fp, #8]
   11ce8:	mov	r4, r1
   11cec:	mov	r6, r0
   11cf0:	mov	r0, #0
   11cf4:	ldr	r1, [r9, r1, lsl #2]
   11cf8:	cmp	r1, #0
   11cfc:	bne	11d84 <dfs_helper@@Base+0xac>
   11d00:	cmp	r4, r2
   11d04:	mov	r5, r2
   11d08:	str	r3, [r9, r4, lsl #2]
   11d0c:	moveq	r0, r3
   11d10:	subeq	sp, fp, #24
   11d14:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   11d18:	ldr	r0, [r6, #4]
   11d1c:	cmp	r0, #1
   11d20:	blt	11d7c <dfs_helper@@Base+0xa4>
   11d24:	add	r8, r3, #1
   11d28:	mov	r7, #0
   11d2c:	ldr	r1, [r6, #8]
   11d30:	add	r1, r1, r4, lsl #3
   11d34:	ldr	r1, [r1, #4]
   11d38:	cmp	r1, #0
   11d3c:	beq	11d70 <dfs_helper@@Base+0x98>
   11d40:	ldr	r2, [r1]
   11d44:	cmp	r2, r7
   11d48:	bne	11d34 <dfs_helper@@Base+0x5c>
   11d4c:	mov	r0, r6
   11d50:	mov	r1, r7
   11d54:	mov	r2, r5
   11d58:	mov	r3, r8
   11d5c:	str	r9, [sp]
   11d60:	bl	11cd8 <dfs_helper@@Base>
   11d64:	cmp	r0, #0
   11d68:	bne	11d84 <dfs_helper@@Base+0xac>
   11d6c:	ldr	r0, [r6, #4]
   11d70:	add	r7, r7, #1
   11d74:	cmp	r7, r0
   11d78:	blt	11d2c <dfs_helper@@Base+0x54>
   11d7c:	mov	r0, #0
   11d80:	str	r0, [r9, r4, lsl #2]
   11d84:	sub	sp, fp, #24
   11d88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00011d8c <grafo_dfs@@Base>:
   11d8c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11d90:	add	fp, sp, #24
   11d94:	sub	sp, sp, #8
   11d98:	cmp	r0, #0
   11d9c:	beq	11e54 <grafo_dfs@@Base+0xc8>
   11da0:	mov	r4, r0
   11da4:	ldr	r0, [r0, #4]
   11da8:	mov	r7, r1
   11dac:	mov	r1, #4
   11db0:	mov	r8, r3
   11db4:	mov	r6, r2
   11db8:	bl	110c0 <calloc@plt>
   11dbc:	mov	r5, r0
   11dc0:	str	r0, [sp]
   11dc4:	mov	r0, r4
   11dc8:	mov	r1, r7
   11dcc:	mov	r2, r6
   11dd0:	mov	r3, #1
   11dd4:	bl	11cd8 <dfs_helper@@Base>
   11dd8:	cmp	r0, #0
   11ddc:	beq	11e5c <grafo_dfs@@Base+0xd0>
   11de0:	mov	r1, #4
   11de4:	mov	r7, r0
   11de8:	bl	110c0 <calloc@plt>
   11dec:	mov	r6, r0
   11df0:	cmp	r7, #1
   11df4:	blt	11e44 <grafo_dfs@@Base+0xb8>
   11df8:	ldr	r0, [r4, #4]
   11dfc:	mov	r1, #0
   11e00:	mov	r2, r1
   11e04:	add	r1, r1, #1
   11e08:	cmp	r0, #1
   11e0c:	blt	11e2c <grafo_dfs@@Base+0xa0>
   11e10:	mov	r3, #0
   11e14:	ldr	r4, [r5, r3, lsl #2]
   11e18:	cmp	r4, r1
   11e1c:	beq	11e38 <grafo_dfs@@Base+0xac>
   11e20:	add	r3, r3, #1
   11e24:	cmp	r3, r0
   11e28:	blt	11e14 <grafo_dfs@@Base+0x88>
   11e2c:	cmp	r1, r7
   11e30:	bne	11e00 <grafo_dfs@@Base+0x74>
   11e34:	b	11e44 <grafo_dfs@@Base+0xb8>
   11e38:	str	r3, [r6, r2, lsl #2]
   11e3c:	cmp	r1, r7
   11e40:	bne	11e00 <grafo_dfs@@Base+0x74>
   11e44:	mov	r0, r5
   11e48:	str	r7, [r8]
   11e4c:	bl	11108 <free@plt>
   11e50:	b	11e6c <grafo_dfs@@Base+0xe0>
   11e54:	mov	r6, #0
   11e58:	b	11e6c <grafo_dfs@@Base+0xe0>
   11e5c:	mov	r0, r5
   11e60:	bl	11108 <free@plt>
   11e64:	mov	r6, #0
   11e68:	str	r6, [r8]
   11e6c:	mov	r0, r6
   11e70:	sub	sp, fp, #24
   11e74:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011e78 <grafo_bfs@@Base>:
   11e78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e7c:	add	fp, sp, #28
   11e80:	sub	sp, sp, #12
   11e84:	cmp	r0, #0
   11e88:	beq	11f90 <grafo_bfs@@Base+0x118>
   11e8c:	stmib	sp, {r2, r3}
   11e90:	mov	r8, r1
   11e94:	mov	sl, r0
   11e98:	mov	r1, #4
   11e9c:	ldr	r7, [r0, #4]
   11ea0:	mov	r0, r7
   11ea4:	bl	110c0 <calloc@plt>
   11ea8:	mov	r5, r0
   11eac:	mov	r0, r7
   11eb0:	mov	r1, #4
   11eb4:	bl	110c0 <calloc@plt>
   11eb8:	mov	r9, r0
   11ebc:	cmp	r7, #1
   11ec0:	blt	11ed4 <grafo_bfs@@Base+0x5c>
   11ec4:	lsl	r2, r7, #2
   11ec8:	mov	r0, r5
   11ecc:	mov	r1, #255	; 0xff
   11ed0:	bl	11174 <memset@plt>
   11ed4:	str	r8, [r5, r8, lsl #2]
   11ed8:	str	r8, [r9]
   11edc:	mov	r0, #0
   11ee0:	mov	r1, #1
   11ee4:	b	11eec <grafo_bfs@@Base+0x74>
   11ee8:	ldr	r8, [r9, r0, lsl #2]
   11eec:	add	r0, r0, #1
   11ef0:	cmp	r7, #1
   11ef4:	sdiv	r2, r0, r7
   11ef8:	mls	r0, r2, r7, r0
   11efc:	blt	11f64 <grafo_bfs@@Base+0xec>
   11f00:	ldr	r2, [sl, #8]
   11f04:	mov	r3, #0
   11f08:	add	r2, r2, r8, lsl #3
   11f0c:	ldr	r6, [r2, #4]
   11f10:	cmp	r6, #0
   11f14:	mov	r2, r6
   11f18:	beq	11f58 <grafo_bfs@@Base+0xe0>
   11f1c:	ldr	r4, [r2]
   11f20:	cmp	r4, r3
   11f24:	beq	11f38 <grafo_bfs@@Base+0xc0>
   11f28:	ldr	r2, [r2, #4]
   11f2c:	cmp	r2, #0
   11f30:	bne	11f1c <grafo_bfs@@Base+0xa4>
   11f34:	b	11f58 <grafo_bfs@@Base+0xe0>
   11f38:	ldr	r2, [r5, r3, lsl #2]
   11f3c:	cmn	r2, #1
   11f40:	bne	11f58 <grafo_bfs@@Base+0xe0>
   11f44:	str	r3, [r9, r1, lsl #2]
   11f48:	add	r1, r1, #1
   11f4c:	str	r8, [r5, r3, lsl #2]
   11f50:	sdiv	r2, r1, r7
   11f54:	mls	r1, r2, r7, r1
   11f58:	add	r3, r3, #1
   11f5c:	cmp	r3, r7
   11f60:	bne	11f10 <grafo_bfs@@Base+0x98>
   11f64:	cmp	r0, r1
   11f68:	bne	11ee8 <grafo_bfs@@Base+0x70>
   11f6c:	ldr	r6, [sp, #4]
   11f70:	ldr	r4, [r5, r6, lsl #2]
   11f74:	cmp	r4, #0
   11f78:	blt	11f98 <grafo_bfs@@Base+0x120>
   11f7c:	cmp	r4, r6
   11f80:	bne	11fa0 <grafo_bfs@@Base+0x128>
   11f84:	mov	r8, #2
   11f88:	mov	r7, #1
   11f8c:	b	11fc0 <grafo_bfs@@Base+0x148>
   11f90:	mov	sl, #0
   11f94:	b	12010 <grafo_bfs@@Base+0x198>
   11f98:	mov	r7, #0
   11f9c:	b	11ff8 <grafo_bfs@@Base+0x180>
   11fa0:	mov	r7, #1
   11fa4:	mov	r0, r4
   11fa8:	ldr	r1, [r5, r0, lsl #2]
   11fac:	add	r7, r7, #1
   11fb0:	cmp	r1, r0
   11fb4:	mov	r0, r1
   11fb8:	bne	11fa8 <grafo_bfs@@Base+0x130>
   11fbc:	add	r8, r7, #1
   11fc0:	lsl	r0, r7, #2
   11fc4:	bl	11138 <malloc@plt>
   11fc8:	mov	sl, r0
   11fcc:	add	r0, r0, r7, lsl #2
   11fd0:	cmp	r8, #2
   11fd4:	str	r6, [r0, #-4]
   11fd8:	beq	11ff8 <grafo_bfs@@Base+0x180>
   11fdc:	sub	r0, r0, #8
   11fe0:	sub	r1, r8, #2
   11fe4:	ldr	r2, [r5, r4, lsl #2]
   11fe8:	str	r4, [r0], #-4
   11fec:	subs	r1, r1, #1
   11ff0:	mov	r4, r2
   11ff4:	bne	11fe4 <grafo_bfs@@Base+0x16c>
   11ff8:	mov	r0, r9
   11ffc:	bl	11108 <free@plt>
   12000:	mov	r0, r5
   12004:	bl	11108 <free@plt>
   12008:	ldr	r0, [sp, #8]
   1200c:	str	r7, [r0]
   12010:	mov	r0, sl
   12014:	sub	sp, fp, #28
   12018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001201c <heap_nova@@Base>:
   1201c:	push	{r4, r5, fp, lr}
   12020:	add	fp, sp, #8
   12024:	mov	r5, r0
   12028:	mov	r0, #12
   1202c:	bl	11138 <malloc@plt>
   12030:	cmp	r0, #0
   12034:	beq	1206c <heap_nova@@Base+0x50>
   12038:	mov	r4, r0
   1203c:	mov	r0, #0
   12040:	mov	r1, #4
   12044:	stm	r4, {r0, r5}
   12048:	mov	r0, r5
   1204c:	bl	110c0 <calloc@plt>
   12050:	cmp	r0, #0
   12054:	str	r0, [r4, #8]
   12058:	beq	12064 <heap_nova@@Base+0x48>
   1205c:	mov	r0, r4
   12060:	pop	{r4, r5, fp, pc}
   12064:	mov	r0, r4
   12068:	bl	11108 <free@plt>
   1206c:	mov	r4, #0
   12070:	mov	r0, r4
   12074:	pop	{r4, r5, fp, pc}

00012078 <heap_apaga@@Base>:
   12078:	cmp	r0, #0
   1207c:	bxeq	lr
   12080:	push	{r4, r5, r6, sl, fp, lr}
   12084:	add	fp, sp, #16
   12088:	ldr	r1, [r0]
   1208c:	mov	r4, r0
   12090:	ldr	r0, [r0, #8]
   12094:	cmp	r1, #1
   12098:	blt	120d8 <heap_apaga@@Base+0x60>
   1209c:	mov	r5, #0
   120a0:	mov	r6, #0
   120a4:	ldr	r0, [r0, r6, lsl #2]
   120a8:	ldr	r0, [r0, #4]
   120ac:	bl	11108 <free@plt>
   120b0:	ldr	r0, [r4, #8]
   120b4:	ldr	r0, [r0, r6, lsl #2]
   120b8:	bl	11108 <free@plt>
   120bc:	ldr	r0, [r4, #8]
   120c0:	str	r5, [r0, r6, lsl #2]
   120c4:	add	r6, r6, #1
   120c8:	ldr	r1, [r4]
   120cc:	ldr	r0, [r4, #8]
   120d0:	cmp	r6, r1
   120d4:	blt	120a4 <heap_apaga@@Base+0x2c>
   120d8:	bl	11108 <free@plt>
   120dc:	mov	r0, r4
   120e0:	pop	{r4, r5, r6, sl, fp, lr}
   120e4:	b	11108 <free@plt>

000120e8 <elemento_cria@@Base>:
   120e8:	push	{r4, r5, r6, r7, fp, lr}
   120ec:	add	fp, sp, #16
   120f0:	mov	r4, r0
   120f4:	mov	r0, #8
   120f8:	mov	r7, r1
   120fc:	bl	11138 <malloc@plt>
   12100:	mov	r5, #0
   12104:	cmp	r0, #0
   12108:	beq	12140 <elemento_cria@@Base+0x58>
   1210c:	mov	r6, r0
   12110:	mov	r0, r7
   12114:	bl	1115c <strlen@plt>
   12118:	add	r0, r0, #1
   1211c:	mov	r1, #1
   12120:	bl	110c0 <calloc@plt>
   12124:	cmp	r0, #0
   12128:	str	r0, [r6, #4]
   1212c:	beq	12148 <elemento_cria@@Base+0x60>
   12130:	mov	r1, r7
   12134:	bl	11120 <strcpy@plt>
   12138:	mov	r5, r6
   1213c:	str	r4, [r6]
   12140:	mov	r0, r5
   12144:	pop	{r4, r5, r6, r7, fp, pc}
   12148:	mov	r0, r6
   1214c:	bl	11108 <free@plt>
   12150:	mov	r0, r5
   12154:	pop	{r4, r5, r6, r7, fp, pc}

00012158 <heap_insere@@Base>:
   12158:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1215c:	add	fp, sp, #24
   12160:	mov	r4, r0
   12164:	mov	r7, r1
   12168:	ldr	r0, [r0]
   1216c:	mov	r5, #0
   12170:	ldr	r1, [r4, #4]
   12174:	cmp	r0, r1
   12178:	bge	1222c <heap_insere@@Base+0xd4>
   1217c:	mov	r0, #8
   12180:	mov	r8, r2
   12184:	bl	11138 <malloc@plt>
   12188:	cmp	r0, #0
   1218c:	beq	1222c <heap_insere@@Base+0xd4>
   12190:	mov	r6, r0
   12194:	mov	r0, r7
   12198:	bl	1115c <strlen@plt>
   1219c:	add	r0, r0, #1
   121a0:	mov	r1, #1
   121a4:	bl	110c0 <calloc@plt>
   121a8:	cmp	r0, #0
   121ac:	str	r0, [r6, #4]
   121b0:	beq	12234 <heap_insere@@Base+0xdc>
   121b4:	mov	r1, r7
   121b8:	bl	11120 <strcpy@plt>
   121bc:	str	r8, [r6]
   121c0:	ldr	r0, [r4]
   121c4:	ldr	r1, [r4, #8]
   121c8:	str	r6, [r1, r0, lsl #2]
   121cc:	add	r1, r0, #1
   121d0:	cmp	r0, #0
   121d4:	str	r1, [r4]
   121d8:	beq	12228 <heap_insere@@Base+0xd0>
   121dc:	ldr	r1, [r4, #8]
   121e0:	ldr	r2, [r1, r0, lsl #2]
   121e4:	cmp	r2, #0
   121e8:	subne	r3, r0, #1
   121ec:	addne	r3, r3, r3, lsr #31
   121f0:	asrne	r3, r3, #1
   121f4:	ldrne	r7, [r1, r3, lsl #2]
   121f8:	cmpne	r7, #0
   121fc:	beq	12228 <heap_insere@@Base+0xd0>
   12200:	ldr	r6, [r7]
   12204:	ldr	r5, [r2]
   12208:	cmp	r5, r6
   1220c:	bge	12228 <heap_insere@@Base+0xd0>
   12210:	str	r2, [r1, r3, lsl #2]
   12214:	cmp	r0, #2
   12218:	ldr	r1, [r4, #8]
   1221c:	str	r7, [r1, r0, lsl #2]
   12220:	mov	r0, r3
   12224:	bhi	121dc <heap_insere@@Base+0x84>
   12228:	mov	r5, #1
   1222c:	mov	r0, r5
   12230:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12234:	mov	r0, r6
   12238:	bl	11108 <free@plt>
   1223c:	mov	r0, r5
   12240:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012244 <menor_que@@Base>:
   12244:	mov	r2, r0
   12248:	mov	r0, #0
   1224c:	cmp	r2, #0
   12250:	cmpne	r1, #0
   12254:	bne	1225c <menor_que@@Base+0x18>
   12258:	bx	lr
   1225c:	ldr	r1, [r1]
   12260:	ldr	r2, [r2]
   12264:	mov	r0, #0
   12268:	cmp	r2, r1
   1226c:	movwlt	r0, #1
   12270:	bx	lr

00012274 <heap_remove@@Base>:
   12274:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12278:	add	fp, sp, #24
   1227c:	mov	r8, #0
   12280:	cmp	r0, #0
   12284:	beq	12378 <heap_remove@@Base+0x104>
   12288:	mov	r5, r0
   1228c:	ldr	r0, [r0]
   12290:	cmp	r0, #1
   12294:	blt	12378 <heap_remove@@Base+0x104>
   12298:	ldr	r0, [r5, #8]
   1229c:	ldr	r0, [r0]
   122a0:	ldr	r8, [r0, #4]
   122a4:	bl	11108 <free@plt>
   122a8:	ldr	r0, [r5]
   122ac:	ldr	r1, [r5, #8]
   122b0:	mov	r7, #0
   122b4:	sub	lr, r0, #1
   122b8:	cmp	r0, #3
   122bc:	str	lr, [r5]
   122c0:	ldr	r2, [r1, lr, lsl #2]
   122c4:	str	r2, [r1]
   122c8:	ldr	r1, [r5, #8]
   122cc:	str	r7, [r1, lr, lsl #2]
   122d0:	blt	12378 <heap_remove@@Base+0x104>
   122d4:	mov	ip, #1
   122d8:	mov	r3, #1
   122dc:	mov	r1, #0
   122e0:	ldr	r6, [r5, #8]
   122e4:	add	r2, r7, #2
   122e8:	cmp	r2, lr
   122ec:	bge	12314 <heap_remove@@Base+0xa0>
   122f0:	mov	r4, r6
   122f4:	mov	r7, r6
   122f8:	ldr	r0, [r4, r2, lsl #2]!
   122fc:	ldr	r9, [r7, r3, lsl #2]!
   12300:	cmp	r0, #0
   12304:	cmpne	r9, #0
   12308:	bne	12364 <heap_remove@@Base+0xf0>
   1230c:	mov	r4, r7
   12310:	b	12318 <heap_remove@@Base+0xa4>
   12314:	add	r4, r6, r3, lsl #2
   12318:	mov	r2, r3
   1231c:	ldr	r3, [r4]
   12320:	cmp	r3, #0
   12324:	ldrne	r0, [r6, r1, lsl #2]
   12328:	cmpne	r0, #0
   1232c:	beq	12378 <heap_remove@@Base+0x104>
   12330:	ldr	r6, [r0]
   12334:	ldr	r7, [r3]
   12338:	cmp	r7, r6
   1233c:	bge	12378 <heap_remove@@Base+0x104>
   12340:	str	r0, [r4]
   12344:	lsl	r7, r2, #1
   12348:	ldr	r0, [r5, #8]
   1234c:	str	r3, [r0, r1, lsl #2]
   12350:	orr	r3, ip, r2, lsl #1
   12354:	mov	r1, r2
   12358:	cmp	r3, lr
   1235c:	blt	122e0 <heap_remove@@Base+0x6c>
   12360:	b	12378 <heap_remove@@Base+0x104>
   12364:	ldr	r9, [r9]
   12368:	ldr	r0, [r0]
   1236c:	cmp	r0, r9
   12370:	bge	1230c <heap_remove@@Base+0x98>
   12374:	b	1231c <heap_remove@@Base+0xa8>
   12378:	mov	r0, r8
   1237c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012380 <mostraHeap@@Base>:
   12380:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12384:	add	fp, sp, #28
   12388:	sub	sp, sp, #4
   1238c:	mov	r9, r0
   12390:	ldr	r0, [r0]
   12394:	cmp	r0, r1
   12398:	ble	12440 <mostraHeap@@Base+0xc0>
   1239c:	mov	sl, r1
   123a0:	mov	r7, #0
   123a4:	cmp	r1, #1
   123a8:	blt	123cc <mostraHeap@@Base+0x4c>
   123ac:	mov	r0, sl
   123b0:	sub	r1, r0, #1
   123b4:	add	r7, r7, #1
   123b8:	cmp	r0, #2
   123bc:	add	r1, r1, r1, lsr #31
   123c0:	asr	r1, r1, #1
   123c4:	mov	r0, r1
   123c8:	bgt	123b0 <mostraHeap@@Base+0x30>
   123cc:	mov	r0, #1
   123d0:	orr	r1, r0, sl, lsl #1
   123d4:	mov	r0, r9
   123d8:	bl	12380 <mostraHeap@@Base>
   123dc:	lsl	r8, sl, #1
   123e0:	cmp	r7, #0
   123e4:	beq	1240c <mostraHeap@@Base+0x8c>
   123e8:	ldr	r6, [pc, #96]	; 12450 <mostraHeap@@Base+0xd0>
   123ec:	add	r4, r7, r7, lsl #1
   123f0:	mov	r5, #0
   123f4:	add	r6, pc, r6
   123f8:	mov	r0, r6
   123fc:	bl	110e4 <printf@plt>
   12400:	add	r5, r5, #1
   12404:	cmp	r5, r4
   12408:	bcc	123f8 <mostraHeap@@Base+0x78>
   1240c:	ldr	r0, [r9, #8]
   12410:	ldr	r0, [r0, sl, lsl #2]
   12414:	ldr	r2, [r0]
   12418:	ldr	r1, [r0, #4]
   1241c:	ldr	r0, [pc, #48]	; 12454 <mostraHeap@@Base+0xd4>
   12420:	add	r0, pc, r0
   12424:	bl	110e4 <printf@plt>
   12428:	add	r1, r8, #2
   1242c:	mov	r0, r9
   12430:	bl	12380 <mostraHeap@@Base>
   12434:	cmp	r7, #0
   12438:	subne	sp, fp, #28
   1243c:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12440:	mov	r0, #10
   12444:	sub	sp, fp, #28
   12448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1244c:	b	11180 <putchar@plt>
   12450:	andeq	r0, r0, lr, asr r9
   12454:	andeq	r0, r0, r8, lsr r9

00012458 <novo_str@@Base>:
   12458:	push	{r4, r5, r6, sl, fp, lr}
   1245c:	add	fp, sp, #16
   12460:	mov	r6, r0
   12464:	mov	r0, #12
   12468:	bl	11138 <malloc@plt>
   1246c:	mov	r5, #0
   12470:	cmp	r0, #0
   12474:	beq	124b0 <novo_str@@Base+0x58>
   12478:	mov	r4, r0
   1247c:	mov	r0, r6
   12480:	bl	1115c <strlen@plt>
   12484:	add	r0, r0, #1
   12488:	bl	11138 <malloc@plt>
   1248c:	cmp	r0, #0
   12490:	str	r0, [r4]
   12494:	beq	124b8 <novo_str@@Base+0x60>
   12498:	mov	r1, r6
   1249c:	bl	11120 <strcpy@plt>
   124a0:	mov	r0, #0
   124a4:	mov	r5, r4
   124a8:	str	r0, [r4, #4]
   124ac:	str	r0, [r4, #8]
   124b0:	mov	r0, r5
   124b4:	pop	{r4, r5, r6, sl, fp, pc}
   124b8:	mov	r0, r4
   124bc:	bl	11108 <free@plt>
   124c0:	mov	r0, r5
   124c4:	pop	{r4, r5, r6, sl, fp, pc}

000124c8 <lista_nova@@Base>:
   124c8:	push	{fp, lr}
   124cc:	mov	fp, sp
   124d0:	mov	r0, #12
   124d4:	bl	11138 <malloc@plt>
   124d8:	cmp	r0, #0
   124dc:	movne	r1, #0
   124e0:	strne	r1, [r0]
   124e4:	strne	r1, [r0, #4]
   124e8:	strne	r1, [r0, #8]
   124ec:	popne	{fp, pc}
   124f0:	mov	r0, #0
   124f4:	pop	{fp, pc}

000124f8 <lista_apaga@@Base>:
   124f8:	cmp	r0, #0
   124fc:	bxeq	lr
   12500:	push	{r4, r5, fp, lr}
   12504:	add	fp, sp, #8
   12508:	mov	r4, r0
   1250c:	b	12528 <lista_apaga@@Base+0x30>
   12510:	ldr	r0, [r5, #4]
   12514:	str	r0, [r4]
   12518:	ldr	r0, [r5]
   1251c:	bl	11108 <free@plt>
   12520:	mov	r0, r5
   12524:	bl	11108 <free@plt>
   12528:	ldr	r5, [r4]
   1252c:	cmp	r5, #0
   12530:	bne	12510 <lista_apaga@@Base+0x18>
   12534:	mov	r0, r4
   12538:	pop	{r4, r5, fp, lr}
   1253c:	b	11108 <free@plt>

00012540 <lista_tamanho@@Base>:
   12540:	cmp	r0, #0
   12544:	ldrne	r0, [r0, #8]
   12548:	mvneq	r0, #0
   1254c:	bx	lr

00012550 <lista_inicio@@Base>:
   12550:	cmp	r0, #0
   12554:	ldrne	r0, [r0]
   12558:	moveq	r0, #0
   1255c:	bx	lr

00012560 <lista_fim@@Base>:
   12560:	cmp	r0, #0
   12564:	ldrne	r0, [r0, #4]
   12568:	moveq	r0, #0
   1256c:	bx	lr

00012570 <lista_insere@@Base>:
   12570:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12574:	add	fp, sp, #24
   12578:	cmp	r0, #0
   1257c:	mov	r7, #0
   12580:	movne	r6, r1
   12584:	cmpne	r1, #0
   12588:	bne	12594 <lista_insere@@Base+0x24>
   1258c:	mov	r0, r7
   12590:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12594:	mov	r5, r0
   12598:	mov	r0, #12
   1259c:	mov	r8, r2
   125a0:	bl	11138 <malloc@plt>
   125a4:	cmp	r0, #0
   125a8:	beq	1258c <lista_insere@@Base+0x1c>
   125ac:	mov	r4, r0
   125b0:	mov	r0, r6
   125b4:	bl	1115c <strlen@plt>
   125b8:	add	r0, r0, #1
   125bc:	bl	11138 <malloc@plt>
   125c0:	cmp	r0, #0
   125c4:	str	r0, [r4]
   125c8:	beq	12618 <lista_insere@@Base+0xa8>
   125cc:	mov	r1, r6
   125d0:	bl	11120 <strcpy@plt>
   125d4:	mov	r0, #0
   125d8:	cmp	r8, #0
   125dc:	str	r0, [r4, #4]
   125e0:	str	r0, [r4, #8]
   125e4:	ldr	r1, [r5, #8]
   125e8:	ldr	r0, [r5]
   125ec:	add	r1, r1, #1
   125f0:	str	r1, [r5, #8]
   125f4:	beq	12628 <lista_insere@@Base+0xb8>
   125f8:	cmp	r0, r8
   125fc:	beq	12640 <lista_insere@@Base+0xd0>
   12600:	ldr	r0, [r8, #8]
   12604:	str	r8, [r4, #4]
   12608:	str	r0, [r4, #8]
   1260c:	str	r4, [r0, #4]
   12610:	str	r4, [r8, #8]
   12614:	b	12658 <lista_insere@@Base+0xe8>
   12618:	mov	r0, r4
   1261c:	bl	11108 <free@plt>
   12620:	mov	r0, r7
   12624:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12628:	cmp	r0, #0
   1262c:	beq	12650 <lista_insere@@Base+0xe0>
   12630:	ldr	r0, [r5, #4]
   12634:	str	r0, [r4, #8]
   12638:	str	r4, [r0, #4]
   1263c:	b	12654 <lista_insere@@Base+0xe4>
   12640:	str	r8, [r4, #4]
   12644:	str	r4, [r8, #8]
   12648:	str	r4, [r5]
   1264c:	b	12658 <lista_insere@@Base+0xe8>
   12650:	str	r4, [r5]
   12654:	str	r4, [r5, #4]
   12658:	mov	r7, r4
   1265c:	mov	r0, r7
   12660:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012664 <lista_remove@@Base>:
   12664:	push	{r4, r5, fp, lr}
   12668:	add	fp, sp, #8
   1266c:	cmp	r0, #0
   12670:	mov	r4, #0
   12674:	movne	r5, r1
   12678:	cmpne	r1, #0
   1267c:	bne	12688 <lista_remove@@Base+0x24>
   12680:	mov	r0, r4
   12684:	pop	{r4, r5, fp, pc}
   12688:	ldr	r1, [r0, #8]
   1268c:	sub	r1, r1, #1
   12690:	str	r1, [r0, #8]
   12694:	ldr	r1, [r5, #8]
   12698:	ldr	r4, [r5, #4]
   1269c:	cmp	r1, #0
   126a0:	streq	r4, [r0]
   126a4:	strne	r4, [r1, #4]
   126a8:	ldrne	r4, [r5, #4]
   126ac:	add	r2, r4, #8
   126b0:	cmp	r4, #0
   126b4:	addeq	r2, r0, #4
   126b8:	str	r1, [r2]
   126bc:	ldr	r0, [r5]
   126c0:	bl	11108 <free@plt>
   126c4:	mov	r0, r5
   126c8:	bl	11108 <free@plt>
   126cc:	mov	r0, r4
   126d0:	pop	{r4, r5, fp, pc}

000126d4 <lista_pesquisa@@Base>:
   126d4:	push	{r4, r5, r6, sl, fp, lr}
   126d8:	add	fp, sp, #16
   126dc:	cmp	r0, #0
   126e0:	mov	r4, #0
   126e4:	movne	r5, r1
   126e8:	cmpne	r1, #0
   126ec:	bne	126f8 <lista_pesquisa@@Base+0x24>
   126f0:	mov	r0, r4
   126f4:	pop	{r4, r5, r6, sl, fp, pc}
   126f8:	cmp	r2, #1
   126fc:	bhi	126f0 <lista_pesquisa@@Base+0x1c>
   12700:	cmp	r2, #0
   12704:	beq	1273c <lista_pesquisa@@Base+0x68>
   12708:	ldr	r6, [r0, #4]
   1270c:	cmp	r6, #0
   12710:	bne	12724 <lista_pesquisa@@Base+0x50>
   12714:	b	126f0 <lista_pesquisa@@Base+0x1c>
   12718:	ldr	r6, [r6, #8]
   1271c:	cmp	r6, #0
   12720:	beq	126f0 <lista_pesquisa@@Base+0x1c>
   12724:	ldr	r0, [r6]
   12728:	mov	r1, r5
   1272c:	bl	110cc <strcmp@plt>
   12730:	cmp	r0, #0
   12734:	bne	12718 <lista_pesquisa@@Base+0x44>
   12738:	b	1276c <lista_pesquisa@@Base+0x98>
   1273c:	ldr	r6, [r0]
   12740:	cmp	r6, #0
   12744:	bne	12758 <lista_pesquisa@@Base+0x84>
   12748:	b	126f0 <lista_pesquisa@@Base+0x1c>
   1274c:	ldr	r6, [r6, #4]
   12750:	cmp	r6, #0
   12754:	beq	126f0 <lista_pesquisa@@Base+0x1c>
   12758:	ldr	r0, [r6]
   1275c:	mov	r1, r5
   12760:	bl	110cc <strcmp@plt>
   12764:	cmp	r0, #0
   12768:	bne	1274c <lista_pesquisa@@Base+0x78>
   1276c:	mov	r4, r6
   12770:	mov	r0, r4
   12774:	pop	{r4, r5, r6, sl, fp, pc}

00012778 <lista_ordena@@Base>:
   12778:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1277c:	add	fp, sp, #24
   12780:	cmp	r0, #0
   12784:	beq	12800 <lista_ordena@@Base+0x88>
   12788:	ldr	r1, [r0, #8]
   1278c:	mov	r8, #0
   12790:	cmp	r1, #0
   12794:	beq	12804 <lista_ordena@@Base+0x8c>
   12798:	ldr	r0, [r0]
   1279c:	b	127b4 <lista_ordena@@Base+0x3c>
   127a0:	ldr	r0, [r9]
   127a4:	ldr	r1, [r7]
   127a8:	str	r1, [r9]
   127ac:	str	r0, [r7]
   127b0:	ldr	r0, [r5]
   127b4:	mov	r5, r0
   127b8:	ldr	r4, [r5, #4]!
   127bc:	cmp	r4, #0
   127c0:	beq	12804 <lista_ordena@@Base+0x8c>
   127c4:	mov	r9, r0
   127c8:	mov	r7, r0
   127cc:	mov	r6, r4
   127d0:	ldr	r1, [r7]
   127d4:	ldr	r0, [r6]
   127d8:	bl	110cc <strcmp@plt>
   127dc:	cmp	r0, #0
   127e0:	movlt	r7, r6
   127e4:	ldr	r6, [r6, #4]
   127e8:	cmp	r6, #0
   127ec:	bne	127d0 <lista_ordena@@Base+0x58>
   127f0:	cmp	r7, r9
   127f4:	mov	r0, r4
   127f8:	bne	127a0 <lista_ordena@@Base+0x28>
   127fc:	b	127b4 <lista_ordena@@Base+0x3c>
   12800:	mvn	r8, #0
   12804:	mov	r0, r8
   12808:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001280c <lista_inverte@@Base>:
   1280c:	cmp	r0, #0
   12810:	mvneq	r1, #0
   12814:	moveq	r0, r1
   12818:	bxeq	lr
   1281c:	ldr	r2, [r0, #8]
   12820:	mov	r1, #0
   12824:	cmp	r2, #2
   12828:	blt	128a4 <lista_inverte@@Base+0x98>
   1282c:	bne	12838 <lista_inverte@@Base+0x2c>
   12830:	ldr	r2, [r0]
   12834:	b	12880 <lista_inverte@@Base+0x74>
   12838:	push	{fp, lr}
   1283c:	mov	fp, sp
   12840:	ldr	ip, [r0]
   12844:	sub	r1, r2, #2
   12848:	ldr	r3, [ip, #4]
   1284c:	mov	r2, r3
   12850:	ldr	r3, [r3, #4]
   12854:	subs	r1, r1, #1
   12858:	ldr	lr, [r2, #8]
   1285c:	str	r3, [lr, #4]
   12860:	ldr	r3, [r2, #4]
   12864:	str	lr, [r3, #8]
   12868:	str	ip, [r2, #4]
   1286c:	str	r2, [ip, #8]
   12870:	mov	ip, r2
   12874:	bne	1284c <lista_inverte@@Base+0x40>
   12878:	str	r2, [r0]
   1287c:	pop	{fp, lr}
   12880:	ldr	r3, [r0, #4]
   12884:	mov	r1, #0
   12888:	ldr	ip, [r3, #8]
   1288c:	str	ip, [r0, #4]
   12890:	str	r1, [ip, #4]
   12894:	str	r2, [r3, #4]
   12898:	str	r1, [r3, #8]
   1289c:	str	r3, [r2, #8]
   128a0:	str	r3, [r0]
   128a4:	mov	r0, r1
   128a8:	bx	lr

000128ac <vetor_novo@@Base>:
   128ac:	push	{fp, lr}
   128b0:	mov	fp, sp
   128b4:	mov	r0, #12
   128b8:	bl	11138 <malloc@plt>
   128bc:	cmp	r0, #0
   128c0:	movne	r1, #0
   128c4:	strne	r1, [r0]
   128c8:	strne	r1, [r0, #4]
   128cc:	strne	r1, [r0, #8]
   128d0:	popne	{fp, pc}
   128d4:	mov	r0, #0
   128d8:	pop	{fp, pc}

000128dc <vetor_apaga@@Base>:
   128dc:	cmp	r0, #0
   128e0:	bxeq	lr
   128e4:	push	{r4, sl, fp, lr}
   128e8:	add	fp, sp, #8
   128ec:	mov	r4, r0
   128f0:	ldr	r0, [r0, #8]
   128f4:	bl	11108 <free@plt>
   128f8:	mov	r0, r4
   128fc:	pop	{r4, sl, fp, lr}
   12900:	b	11108 <free@plt>

00012904 <vetor_atribui@@Base>:
   12904:	mov	ip, r0
   12908:	mvn	r0, #0
   1290c:	cmp	ip, #0
   12910:	bxeq	lr
   12914:	cmp	r1, #0
   12918:	ldrge	r3, [ip]
   1291c:	cmpge	r3, r1
   12920:	ldrgt	r0, [ip, #8]
   12924:	strgt	r2, [r0, r1, lsl #2]
   12928:	movgt	r0, r1
   1292c:	bx	lr

00012930 <vetor_tamanho@@Base>:
   12930:	cmp	r0, #0
   12934:	ldrne	r0, [r0]
   12938:	mvneq	r0, #0
   1293c:	bx	lr

00012940 <vetor_elemento@@Base>:
   12940:	mov	r2, r0
   12944:	mov	r0, #-2147483648	; 0x80000000
   12948:	cmp	r2, #0
   1294c:	bxeq	lr
   12950:	cmp	r1, #0
   12954:	ldrge	r3, [r2]
   12958:	cmpge	r3, r1
   1295c:	ldrgt	r0, [r2, #8]
   12960:	ldrgt	r0, [r0, r1, lsl #2]
   12964:	bx	lr

00012968 <vetor_insere@@Base>:
   12968:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1296c:	add	fp, sp, #24
   12970:	mvn	r7, #0
   12974:	cmp	r0, #0
   12978:	beq	12a28 <vetor_insere@@Base+0xc0>
   1297c:	mov	r4, r2
   12980:	cmn	r2, #1
   12984:	blt	12a28 <vetor_insere@@Base+0xc0>
   12988:	mov	r8, r1
   1298c:	ldr	r1, [r0]
   12990:	mov	r5, r0
   12994:	cmp	r1, r4
   12998:	blt	12a28 <vetor_insere@@Base+0xc0>
   1299c:	ldr	r0, [r5, #4]
   129a0:	cmn	r4, #1
   129a4:	moveq	r4, r1
   129a8:	cmp	r1, r0
   129ac:	bne	129e8 <vetor_insere@@Base+0x80>
   129b0:	lsl	r0, r1, #1
   129b4:	cmp	r1, #0
   129b8:	movweq	r0, #1
   129bc:	str	r0, [r5, #4]
   129c0:	lsl	r1, r0, #2
   129c4:	ldr	r0, [r5, #8]
   129c8:	bl	11114 <realloc@plt>
   129cc:	cmp	r0, #0
   129d0:	str	r0, [r5, #8]
   129d4:	beq	12a28 <vetor_insere@@Base+0xc0>
   129d8:	ldr	r1, [r5]
   129dc:	cmp	r1, r4
   129e0:	bgt	129f4 <vetor_insere@@Base+0x8c>
   129e4:	b	12a18 <vetor_insere@@Base+0xb0>
   129e8:	ldr	r0, [r5, #8]
   129ec:	cmp	r1, r4
   129f0:	ble	12a18 <vetor_insere@@Base+0xb0>
   129f4:	add	r7, r0, r1, lsl #2
   129f8:	mov	r2, r1
   129fc:	mov	r3, r7
   12a00:	ldr	r6, [r3, #-4]!
   12a04:	sub	r2, r2, #1
   12a08:	cmp	r2, r4
   12a0c:	str	r6, [r7]
   12a10:	mov	r7, r3
   12a14:	bgt	12a00 <vetor_insere@@Base+0x98>
   12a18:	str	r8, [r0, r4, lsl #2]
   12a1c:	add	r0, r1, #1
   12a20:	mov	r7, r4
   12a24:	str	r0, [r5]
   12a28:	mov	r0, r7
   12a2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012a30 <vetor_remove@@Base>:
   12a30:	mvn	r2, #0
   12a34:	cmp	r0, #0
   12a38:	beq	12a4c <vetor_remove@@Base+0x1c>
   12a3c:	cmp	r1, #0
   12a40:	ldrge	ip, [r0]
   12a44:	cmpge	ip, r1
   12a48:	bgt	12a54 <vetor_remove@@Base+0x24>
   12a4c:	mov	r0, r2
   12a50:	bx	lr
   12a54:	push	{r4, r5, r6, r7, fp, lr}
   12a58:	add	fp, sp, #16
   12a5c:	add	r4, r1, #1
   12a60:	cmp	r4, ip
   12a64:	bge	12ac8 <vetor_remove@@Base+0x98>
   12a68:	mvn	r3, r1
   12a6c:	add	lr, ip, r3
   12a70:	ldr	r3, [r0, #8]
   12a74:	cmp	lr, #4
   12a78:	bcc	12aac <vetor_remove@@Base+0x7c>
   12a7c:	bic	r2, lr, #3
   12a80:	add	r5, r3, r1, lsl #2
   12a84:	add	r1, r2, r1
   12a88:	add	r4, r4, r2
   12a8c:	mov	r6, r2
   12a90:	add	r7, r5, #4
   12a94:	subs	r6, r6, #4
   12a98:	vld1.32	{d16-d17}, [r7]
   12a9c:	vst1.32	{d16-d17}, [r5]!
   12aa0:	bne	12a90 <vetor_remove@@Base+0x60>
   12aa4:	cmp	lr, r2
   12aa8:	beq	12ac8 <vetor_remove@@Base+0x98>
   12aac:	ldr	r7, [r3, r4, lsl #2]
   12ab0:	mov	r2, r4
   12ab4:	add	r4, r4, #1
   12ab8:	cmp	ip, r4
   12abc:	str	r7, [r3, r1, lsl #2]
   12ac0:	mov	r1, r2
   12ac4:	bne	12aac <vetor_remove@@Base+0x7c>
   12ac8:	sub	r1, ip, #1
   12acc:	mov	r2, #0
   12ad0:	str	r1, [r0]
   12ad4:	pop	{r4, r5, r6, r7, fp, lr}
   12ad8:	mov	r0, r2
   12adc:	bx	lr

00012ae0 <vetor_pesquisa@@Base>:
   12ae0:	push	{fp, lr}
   12ae4:	mov	fp, sp
   12ae8:	mov	r2, r0
   12aec:	mvn	r0, #0
   12af0:	cmp	r2, #0
   12af4:	beq	12b28 <vetor_pesquisa@@Base+0x48>
   12af8:	ldr	ip, [r2]
   12afc:	cmp	ip, #1
   12b00:	poplt	{fp, pc}
   12b04:	ldr	lr, [r2, #8]
   12b08:	mov	r2, #0
   12b0c:	ldr	r3, [lr, r2, lsl #2]
   12b10:	cmp	r3, r1
   12b14:	moveq	r0, r2
   12b18:	popeq	{fp, pc}
   12b1c:	add	r2, r2, #1
   12b20:	cmp	r2, ip
   12b24:	blt	12b0c <vetor_pesquisa@@Base+0x2c>
   12b28:	pop	{fp, pc}

00012b2c <vetor_ordena@@Base>:
   12b2c:	cmp	r0, #0
   12b30:	mvneq	r0, #0
   12b34:	bxeq	lr
   12b38:	ldr	ip, [r0]
   12b3c:	mov	r1, r0
   12b40:	mov	r0, #0
   12b44:	cmp	ip, #2
   12b48:	bxlt	lr
   12b4c:	push	{r4, r5, fp, lr}
   12b50:	add	fp, sp, #8
   12b54:	ldr	r0, [r1, #8]
   12b58:	mov	r1, #1
   12b5c:	mov	lr, #0
   12b60:	ldr	r2, [r0, r1, lsl #2]
   12b64:	mov	r3, lr
   12b68:	ldr	r4, [r0, r3, lsl #2]
   12b6c:	cmp	r2, r4
   12b70:	bge	12b98 <vetor_ordena@@Base+0x6c>
   12b74:	add	r5, r0, r3, lsl #2
   12b78:	str	r4, [r5, #4]
   12b7c:	sub	r4, r3, #1
   12b80:	add	r3, r3, #1
   12b84:	cmp	r3, #1
   12b88:	mov	r3, r4
   12b8c:	bgt	12b68 <vetor_ordena@@Base+0x3c>
   12b90:	add	r3, r4, #1
   12b94:	b	12b9c <vetor_ordena@@Base+0x70>
   12b98:	add	r3, r3, #1
   12b9c:	add	r1, r1, #1
   12ba0:	add	lr, lr, #1
   12ba4:	str	r2, [r0, r3, lsl #2]
   12ba8:	cmp	r1, ip
   12bac:	blt	12b60 <vetor_ordena@@Base+0x34>
   12bb0:	mov	r0, #0
   12bb4:	pop	{r4, r5, fp, lr}
   12bb8:	bx	lr

00012bbc <__libc_csu_init@@Base>:
   12bbc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12bc0:	mov	r7, r0
   12bc4:	ldr	r6, [pc, #72]	; 12c14 <__libc_csu_init@@Base+0x58>
   12bc8:	ldr	r5, [pc, #72]	; 12c18 <__libc_csu_init@@Base+0x5c>
   12bcc:	add	r6, pc, r6
   12bd0:	add	r5, pc, r5
   12bd4:	sub	r6, r6, r5
   12bd8:	mov	r8, r1
   12bdc:	mov	r9, r2
   12be0:	bl	110a0 <calloc@plt-0x20>
   12be4:	asrs	r6, r6, #2
   12be8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bec:	mov	r4, #0
   12bf0:	add	r4, r4, #1
   12bf4:	ldr	r3, [r5], #4
   12bf8:	mov	r2, r9
   12bfc:	mov	r1, r8
   12c00:	mov	r0, r7
   12c04:	blx	r3
   12c08:	cmp	r6, r4
   12c0c:	bne	12bf0 <__libc_csu_init@@Base+0x34>
   12c10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12c14:	andeq	r0, r1, r8, lsr r3
   12c18:	andeq	r0, r1, r0, lsr r3

00012c1c <__libc_csu_fini@@Base>:
   12c1c:	bx	lr

Disassembly of section .fini:

00012c20 <.fini>:
   12c20:	push	{r3, lr}
   12c24:	pop	{r3, pc}
