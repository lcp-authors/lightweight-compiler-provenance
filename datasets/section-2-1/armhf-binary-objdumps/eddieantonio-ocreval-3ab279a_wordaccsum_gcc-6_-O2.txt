
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

000106e4 <.init>:
   106e4:	push	{r3, lr}
   106e8:	bl	108e8 <abort@plt+0xdc>
   106ec:	pop	{r3, pc}

Disassembly of section .plt:

000106f0 <calloc@plt-0x14>:
   106f0:	push	{lr}		; (str lr, [sp, #-4]!)
   106f4:	ldr	lr, [pc, #4]	; 10700 <calloc@plt-0x4>
   106f8:	add	lr, pc, lr
   106fc:	ldr	pc, [lr, #8]!
   10700:	andeq	r2, r1, r0, lsl #18

00010704 <calloc@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #73728	; 0x12000
   1070c:	ldr	pc, [ip, #2304]!	; 0x900

00010710 <strcmp@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #73728	; 0x12000
   10718:	ldr	pc, [ip, #2296]!	; 0x8f8

0001071c <strtol@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #73728	; 0x12000
   10724:	ldr	pc, [ip, #2288]!	; 0x8f0

00010728 <fopen@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #73728	; 0x12000
   10730:	ldr	pc, [ip, #2280]!	; 0x8e8

00010734 <free@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #73728	; 0x12000
   1073c:	ldr	pc, [ip, #2272]!	; 0x8e0

00010740 <fgets@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #73728	; 0x12000
   10748:	ldr	pc, [ip, #2264]!	; 0x8d8

0001074c <strdup@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #73728	; 0x12000
   10754:	ldr	pc, [ip, #2256]!	; 0x8d0

00010758 <unlink@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #73728	; 0x12000
   10760:	ldr	pc, [ip, #2248]!	; 0x8c8

00010764 <__xstat@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #73728	; 0x12000
   1076c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010770 <fwrite@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #73728	; 0x12000
   10778:	ldr	pc, [ip, #2232]!	; 0x8b8

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #73728	; 0x12000
   10784:	ldr	pc, [ip, #2224]!	; 0x8b0

00010788 <__sysv_signal@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #73728	; 0x12000
   10790:	ldr	pc, [ip, #2216]!	; 0x8a8

00010794 <__gmon_start__@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #73728	; 0x12000
   1079c:	ldr	pc, [ip, #2208]!	; 0x8a0

000107a0 <getpid@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #73728	; 0x12000
   107a8:	ldr	pc, [ip, #2200]!	; 0x898

000107ac <exit@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #73728	; 0x12000
   107b4:	ldr	pc, [ip, #2192]!	; 0x890

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #73728	; 0x12000
   107c0:	ldr	pc, [ip, #2184]!	; 0x888

000107c4 <fprintf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #73728	; 0x12000
   107cc:	ldr	pc, [ip, #2176]!	; 0x880

000107d0 <__isoc99_sscanf@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #73728	; 0x12000
   107d8:	ldr	pc, [ip, #2168]!	; 0x878

000107dc <fclose@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #73728	; 0x12000
   107e4:	ldr	pc, [ip, #2160]!	; 0x870

000107e8 <fputc@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #73728	; 0x12000
   107f0:	ldr	pc, [ip, #2152]!	; 0x868

000107f4 <sprintf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #73728	; 0x12000
   107fc:	ldr	pc, [ip, #2144]!	; 0x860

00010800 <strncmp@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2136]!	; 0x858

0001080c <abort@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2128]!	; 0x850

Disassembly of section .text:

00010818 <error@@Base-0x48c>:
   10818:	push	{r4, r5, r6, lr}
   1081c:	sub	sp, sp, #8
   10820:	add	ip, sp, #8
   10824:	ldr	r2, [pc, #112]	; 1089c <abort@plt+0x90>
   10828:	mov	r3, #0
   1082c:	str	r0, [ip, #-4]!
   10830:	add	r2, pc, r2
   10834:	mov	r0, ip
   10838:	mov	r5, r1
   1083c:	bl	10e44 <error@@Base+0x1a0>
   10840:	ldr	r3, [sp, #4]
   10844:	ldr	r2, [pc, #84]	; 108a0 <abort@plt+0x94>
   10848:	cmp	r3, #1
   1084c:	add	r2, pc, r2
   10850:	ble	10890 <abort@plt+0x84>
   10854:	ldr	r3, [pc, #72]	; 108a4 <abort@plt+0x98>
   10858:	sub	r5, r5, #4
   1085c:	mov	r4, #0
   10860:	ldr	r6, [r2, r3]
   10864:	ldr	r1, [r5, #4]!
   10868:	mov	r0, r6
   1086c:	bl	1169c <error@@Base+0x9f8>
   10870:	ldr	r3, [sp, #4]
   10874:	add	r4, r4, #1
   10878:	cmp	r3, r4
   1087c:	bgt	10864 <abort@plt+0x58>
   10880:	mov	r0, r6
   10884:	mov	r1, #0
   10888:	bl	1184c <error@@Base+0xba8>
   1088c:	bl	10c30 <abort@plt+0x424>
   10890:	ldr	r0, [pc, #16]	; 108a8 <abort@plt+0x9c>
   10894:	add	r0, pc, r0
   10898:	bl	10ca4 <error@@Base>
   1089c:	ldrdeq	r1, [r0], -ip
   108a0:	andeq	r2, r1, ip, lsr #15
   108a4:	andeq	r0, r0, ip, ror r0
   108a8:	andeq	r1, r0, ip, lsr #17
   108ac:	mov	fp, #0
   108b0:	mov	lr, #0
   108b4:	pop	{r1}		; (ldr r1, [sp], #4)
   108b8:	mov	r2, sp
   108bc:	push	{r2}		; (str r2, [sp, #-4]!)
   108c0:	push	{r0}		; (str r0, [sp, #-4]!)
   108c4:	ldr	ip, [pc, #16]	; 108dc <abort@plt+0xd0>
   108c8:	push	{ip}		; (str ip, [sp, #-4]!)
   108cc:	ldr	r0, [pc, #12]	; 108e0 <abort@plt+0xd4>
   108d0:	ldr	r3, [pc, #12]	; 108e4 <abort@plt+0xd8>
   108d4:	bl	1077c <__libc_start_main@plt>
   108d8:	bl	1080c <abort@plt>
   108dc:	andeq	r2, r1, r4, lsl #2
   108e0:	andeq	r0, r1, r8, lsl r8
   108e4:	andeq	r2, r1, r4, lsr #1
   108e8:	ldr	r3, [pc, #20]	; 10904 <abort@plt+0xf8>
   108ec:	ldr	r2, [pc, #20]	; 10908 <abort@plt+0xfc>
   108f0:	add	r3, pc, r3
   108f4:	ldr	r2, [r3, r2]
   108f8:	cmp	r2, #0
   108fc:	bxeq	lr
   10900:	b	10794 <__gmon_start__@plt>
   10904:	andeq	r2, r1, r8, lsl #14
   10908:	andeq	r0, r0, r4, ror r0
   1090c:	ldr	r3, [pc, #28]	; 10930 <abort@plt+0x124>
   10910:	ldr	r0, [pc, #28]	; 10934 <abort@plt+0x128>
   10914:	sub	r3, r3, r0
   10918:	cmp	r3, #6
   1091c:	bxls	lr
   10920:	ldr	r3, [pc, #16]	; 10938 <abort@plt+0x12c>
   10924:	cmp	r3, #0
   10928:	bxeq	lr
   1092c:	bx	r3
   10930:	andeq	r3, r2, r3, lsr #1
   10934:	andeq	r3, r2, r0, lsr #1
   10938:	andeq	r0, r0, r0
   1093c:	ldr	r1, [pc, #36]	; 10968 <abort@plt+0x15c>
   10940:	ldr	r0, [pc, #36]	; 1096c <abort@plt+0x160>
   10944:	sub	r1, r1, r0
   10948:	asr	r1, r1, #2
   1094c:	add	r1, r1, r1, lsr #31
   10950:	asrs	r1, r1, #1
   10954:	bxeq	lr
   10958:	ldr	r3, [pc, #16]	; 10970 <abort@plt+0x164>
   1095c:	cmp	r3, #0
   10960:	bxeq	lr
   10964:	bx	r3
   10968:	andeq	r3, r2, r0, lsr #1
   1096c:	andeq	r3, r2, r0, lsr #1
   10970:	andeq	r0, r0, r0
   10974:	push	{r4, lr}
   10978:	ldr	r4, [pc, #24]	; 10998 <abort@plt+0x18c>
   1097c:	ldrb	r3, [r4]
   10980:	cmp	r3, #0
   10984:	popne	{r4, pc}
   10988:	bl	1090c <abort@plt+0x100>
   1098c:	mov	r3, #1
   10990:	strb	r3, [r4]
   10994:	pop	{r4, pc}
   10998:	andeq	r3, r2, r0, lsr #1
   1099c:	ldr	r0, [pc, #40]	; 109cc <abort@plt+0x1c0>
   109a0:	ldr	r3, [r0]
   109a4:	cmp	r3, #0
   109a8:	bne	109b0 <abort@plt+0x1a4>
   109ac:	b	1093c <abort@plt+0x130>
   109b0:	ldr	r3, [pc, #24]	; 109d0 <abort@plt+0x1c4>
   109b4:	cmp	r3, #0
   109b8:	beq	109ac <abort@plt+0x1a0>
   109bc:	push	{r4, lr}
   109c0:	blx	r3
   109c4:	pop	{r4, lr}
   109c8:	b	1093c <abort@plt+0x130>
   109cc:	andeq	r2, r2, r4, lsl #30
   109d0:	andeq	r0, r0, r0
   109d4:	ldr	r3, [pc, #76]	; 10a28 <abort@plt+0x21c>
   109d8:	ldr	r2, [pc, #76]	; 10a2c <abort@plt+0x220>
   109dc:	add	r3, pc, r3
   109e0:	push	{r4, r5, lr}
   109e4:	sub	sp, sp, #116	; 0x74
   109e8:	ldr	r3, [r3, r2]
   109ec:	mov	r5, r0
   109f0:	ldr	r4, [r3]
   109f4:	bl	107a0 <getpid@plt>
   109f8:	ldr	r1, [pc, #48]	; 10a30 <abort@plt+0x224>
   109fc:	mov	r2, r4
   10a00:	add	r4, sp, #12
   10a04:	add	r1, pc, r1
   10a08:	str	r5, [sp]
   10a0c:	mov	r3, r0
   10a10:	mov	r0, r4
   10a14:	bl	107f4 <sprintf@plt>
   10a18:	mov	r0, r4
   10a1c:	bl	1074c <strdup@plt>
   10a20:	add	sp, sp, #116	; 0x74
   10a24:	pop	{r4, r5, pc}
   10a28:	andeq	r2, r1, ip, lsl r6
   10a2c:	andeq	r0, r0, r8, ror r0
   10a30:	andeq	r1, r0, r4, asr r7
   10a34:	ldr	r3, [pc, #108]	; 10aa8 <abort@plt+0x29c>
   10a38:	ldr	r2, [pc, #108]	; 10aac <abort@plt+0x2a0>
   10a3c:	add	r3, pc, r3
   10a40:	push	{r7, lr}
   10a44:	mov	r7, r0
   10a48:	ldr	r3, [r3, r2]
   10a4c:	ldr	r3, [r3]
   10a50:	cmp	r3, #0
   10a54:	beq	10a5c <abort@plt+0x250>
   10a58:	blx	r3
   10a5c:	ldr	r6, [pc, #76]	; 10ab0 <abort@plt+0x2a4>
   10a60:	add	r6, pc, r6
   10a64:	ldrsh	r3, [r6]
   10a68:	cmp	r3, #0
   10a6c:	movgt	r4, #1
   10a70:	ble	10aa0 <abort@plt+0x294>
   10a74:	mov	r0, r4
   10a78:	bl	109d4 <abort@plt+0x1c8>
   10a7c:	add	r4, r4, #1
   10a80:	sxth	r4, r4
   10a84:	mov	r5, r0
   10a88:	bl	10758 <unlink@plt>
   10a8c:	mov	r0, r5
   10a90:	bl	10734 <free@plt>
   10a94:	ldrsh	r3, [r6]
   10a98:	cmp	r3, r4
   10a9c:	bge	10a74 <abort@plt+0x268>
   10aa0:	mov	r0, r7
   10aa4:	bl	107ac <exit@plt>
   10aa8:			; <UNDEFINED> instruction: 0x000125bc
   10aac:	andeq	r0, r0, r0, lsl #1
   10ab0:	andeq	r2, r1, sl, lsr r6
   10ab4:	ldrb	r3, [r0]
   10ab8:	cmp	r3, #0
   10abc:	beq	10b20 <abort@plt+0x314>
   10ac0:	ldrb	ip, [r1]
   10ac4:	cmp	ip, r3
   10ac8:	bne	10b30 <abort@plt+0x324>
   10acc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ad0:	mov	r2, #0
   10ad4:	mov	lr, r1
   10ad8:	b	10ae8 <abort@plt+0x2dc>
   10adc:	ldrb	ip, [lr, #1]!
   10ae0:	cmp	r3, ip
   10ae4:	bne	10b08 <abort@plt+0x2fc>
   10ae8:	ldrb	r3, [r0, #1]!
   10aec:	add	r2, r2, #1
   10af0:	cmp	r3, #0
   10af4:	bne	10adc <abort@plt+0x2d0>
   10af8:	ldrb	ip, [r1, r2]
   10afc:	cmp	ip, #0
   10b00:	movne	r3, #0
   10b04:	beq	10b18 <abort@plt+0x30c>
   10b08:	cmp	r3, ip
   10b0c:	movcs	r0, #1
   10b10:	mvncc	r0, #0
   10b14:	pop	{pc}		; (ldr pc, [sp], #4)
   10b18:	mov	r0, ip
   10b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   10b20:	ldrb	ip, [r1, r3]
   10b24:	cmp	ip, #0
   10b28:	movne	r3, #0
   10b2c:	beq	10b40 <abort@plt+0x334>
   10b30:	cmp	r3, ip
   10b34:	movcs	r0, #1
   10b38:	mvncc	r0, #0
   10b3c:	bx	lr
   10b40:	mov	r0, ip
   10b44:	bx	lr
   10b48:	ldr	r2, [pc, #44]	; 10b7c <abort@plt+0x370>
   10b4c:	ldr	r3, [pc, #44]	; 10b80 <abort@plt+0x374>
   10b50:	add	r2, pc, r2
   10b54:	ldr	r3, [r2, r3]
   10b58:	ldr	r3, [r3]
   10b5c:	cmp	r3, r0
   10b60:	bxeq	lr
   10b64:	ldr	r3, [pc, #24]	; 10b84 <abort@plt+0x378>
   10b68:	ldr	r3, [r2, r3]
   10b6c:	ldr	r3, [r3]
   10b70:	cmp	r0, r3
   10b74:	bxeq	lr
   10b78:	b	107dc <fclose@plt>
   10b7c:	andeq	r2, r1, r8, lsr #9
   10b80:	andeq	r0, r0, r4, lsl #1
   10b84:	andeq	r0, r0, r8, lsl #1
   10b88:	push	{lr}		; (str lr, [sp, #-4]!)
   10b8c:	sub	sp, sp, #92	; 0x5c
   10b90:	mov	r1, r0
   10b94:	mov	r2, sp
   10b98:	mov	r0, #3
   10b9c:	bl	10764 <__xstat@plt>
   10ba0:	clz	r0, r0
   10ba4:	lsr	r0, r0, #5
   10ba8:	add	sp, sp, #92	; 0x5c
   10bac:	pop	{pc}		; (ldr pc, [sp], #4)
   10bb0:	ldr	r2, [pc, #44]	; 10be4 <abort@plt+0x3d8>
   10bb4:	push	{r4, lr}
   10bb8:	add	r2, pc, r2
   10bbc:	ldrh	r3, [r2]
   10bc0:	add	r3, r3, #1
   10bc4:	sxth	r3, r3
   10bc8:	mov	r0, r3
   10bcc:	strh	r3, [r2]
   10bd0:	bl	109d4 <abort@plt+0x1c8>
   10bd4:	mov	r4, r0
   10bd8:	bl	10758 <unlink@plt>
   10bdc:	mov	r0, r4
   10be0:	pop	{r4, pc}
   10be4:	andeq	r2, r1, r2, ror #9
   10be8:	push	{r4, lr}
   10bec:	mov	r4, r0
   10bf0:	bl	107b8 <strlen@plt>
   10bf4:	sub	r0, r0, #1
   10bf8:	sxth	r0, r0
   10bfc:	cmp	r0, #0
   10c00:	bge	10c18 <abort@plt+0x40c>
   10c04:	b	10c24 <abort@plt+0x418>
   10c08:	sub	r0, r0, #1
   10c0c:	sxth	r0, r0
   10c10:	cmn	r0, #1
   10c14:	beq	10c24 <abort@plt+0x418>
   10c18:	ldrb	r3, [r4, r0]
   10c1c:	cmp	r3, #47	; 0x2f
   10c20:	bne	10c08 <abort@plt+0x3fc>
   10c24:	add	r0, r0, #1
   10c28:	add	r0, r4, r0
   10c2c:	pop	{r4, pc}
   10c30:	push	{r4, lr}
   10c34:	mov	r0, #0
   10c38:	bl	10a34 <abort@plt+0x228>
   10c3c:	ldr	r1, [pc, #76]	; 10c90 <abort@plt+0x484>
   10c40:	ldr	r2, [pc, #76]	; 10c94 <abort@plt+0x488>
   10c44:	add	r1, pc, r1
   10c48:	push	{r4, lr}
   10c4c:	ldr	r2, [r1, r2]
   10c50:	ldr	r2, [r2]
   10c54:	cmp	r2, #0
   10c58:	beq	10c64 <abort@plt+0x458>
   10c5c:	blx	r2
   10c60:	bl	10c30 <abort@plt+0x424>
   10c64:	ldr	r2, [pc, #44]	; 10c98 <abort@plt+0x48c>
   10c68:	ldr	ip, [pc, #44]	; 10c9c <abort@plt+0x490>
   10c6c:	mov	r3, r0
   10c70:	ldr	r0, [r1, r2]
   10c74:	ldr	ip, [r1, ip]
   10c78:	ldr	r1, [pc, #32]	; 10ca0 <abort@plt+0x494>
   10c7c:	ldr	r0, [r0]
   10c80:	add	r1, pc, r1
   10c84:	ldr	r2, [ip]
   10c88:	bl	107c4 <fprintf@plt>
   10c8c:	b	10c60 <abort@plt+0x454>
   10c90:			; <UNDEFINED> instruction: 0x000123b4
   10c94:	andeq	r0, r0, ip, rrx
   10c98:	andeq	r0, r0, r0, ror r0
   10c9c:	andeq	r0, r0, r8, ror r0
   10ca0:	andeq	r1, r0, r8, ror #9

00010ca4 <error@@Base>:
   10ca4:	push	{r4, lr}
   10ca8:	mov	r3, r0
   10cac:	ldr	r4, [pc, #52]	; 10ce8 <error@@Base+0x44>
   10cb0:	ldr	r1, [pc, #52]	; 10cec <error@@Base+0x48>
   10cb4:	ldr	r2, [pc, #52]	; 10cf0 <error@@Base+0x4c>
   10cb8:	add	r4, pc, r4
   10cbc:	ldr	ip, [r4, r1]
   10cc0:	ldr	r0, [r4, r2]
   10cc4:	ldr	r1, [pc, #40]	; 10cf4 <error@@Base+0x50>
   10cc8:	ldr	r2, [ip]
   10ccc:	add	r1, pc, r1
   10cd0:	ldr	r0, [r0]
   10cd4:	bl	107c4 <fprintf@plt>
   10cd8:	ldr	r3, [pc, #24]	; 10cf8 <error@@Base+0x54>
   10cdc:	ldr	r3, [r4, r3]
   10ce0:	ldr	r0, [r3]
   10ce4:	bl	10a34 <abort@plt+0x228>
   10ce8:	andeq	r2, r1, r0, asr #6
   10cec:	andeq	r0, r0, r8, ror r0
   10cf0:	andeq	r0, r0, r0, ror r0
   10cf4:	andeq	r1, r0, ip, lsr #9
   10cf8:	andeq	r0, r0, ip, lsl #1
   10cfc:	push	{r4, lr}
   10d00:	bl	10704 <calloc@plt>
   10d04:	cmp	r0, #0
   10d08:	popne	{r4, pc}
   10d0c:	ldr	r0, [pc, #4]	; 10d18 <error@@Base+0x74>
   10d10:	add	r0, pc, r0
   10d14:	bl	10ca4 <error@@Base>
   10d18:	andeq	r1, r0, r0, ror r4
   10d1c:	ldr	r3, [pc, #40]	; 10d4c <error@@Base+0xa8>
   10d20:	add	r3, pc, r3
   10d24:	ldrb	r2, [r3, #2]
   10d28:	cmp	r2, #0
   10d2c:	beq	10d34 <error@@Base+0x90>
   10d30:	bx	lr
   10d34:	ldr	r0, [pc, #20]	; 10d50 <error@@Base+0xac>
   10d38:	push	{r4, lr}
   10d3c:	mov	r2, #1
   10d40:	add	r0, pc, r0
   10d44:	strb	r2, [r3, #2]
   10d48:	bl	10ca4 <error@@Base>
   10d4c:	andeq	r2, r1, sl, ror r3
   10d50:	andeq	r1, r0, ip, asr r4
   10d54:	ldr	r4, [pc, #68]	; 10da0 <error@@Base+0xfc>
   10d58:	ldr	r2, [pc, #68]	; 10da4 <error@@Base+0x100>
   10d5c:	ldr	ip, [pc, #68]	; 10da8 <error@@Base+0x104>
   10d60:	add	r4, pc, r4
   10d64:	push	{lr}		; (str lr, [sp, #-4]!)
   10d68:	sub	sp, sp, #12
   10d6c:	mov	r3, r0
   10d70:	ldr	ip, [r4, ip]
   10d74:	ldr	r0, [r4, r2]
   10d78:	str	r1, [sp]
   10d7c:	ldr	r1, [pc, #40]	; 10dac <error@@Base+0x108>
   10d80:	ldr	r2, [ip]
   10d84:	ldr	r0, [r0]
   10d88:	add	r1, pc, r1
   10d8c:	bl	107c4 <fprintf@plt>
   10d90:	ldr	r3, [pc, #24]	; 10db0 <error@@Base+0x10c>
   10d94:	ldr	r3, [r4, r3]
   10d98:	ldr	r0, [r3]
   10d9c:	bl	10a34 <abort@plt+0x228>
   10da0:	muleq	r1, r8, r2
   10da4:	andeq	r0, r0, r0, ror r0
   10da8:	andeq	r0, r0, r8, ror r0
   10dac:	andeq	r1, r0, r4, lsr #8
   10db0:	andeq	r0, r0, ip, lsl #1
   10db4:	ldr	ip, [pc, #116]	; 10e30 <error@@Base+0x18c>
   10db8:	subs	r2, r0, #0
   10dbc:	push	{r4, r5, r6, lr}
   10dc0:	add	ip, pc, ip
   10dc4:	mov	r4, r1
   10dc8:	beq	10df8 <error@@Base+0x154>
   10dcc:	mov	r5, r2
   10dd0:	bl	10728 <fopen@plt>
   10dd4:	cmp	r0, #0
   10dd8:	popne	{r4, r5, r6, pc}
   10ddc:	ldrb	r3, [r4]
   10de0:	mov	r1, r5
   10de4:	cmp	r3, #119	; 0x77
   10de8:	beq	10e24 <error@@Base+0x180>
   10dec:	ldr	r0, [pc, #64]	; 10e34 <error@@Base+0x190>
   10df0:	add	r0, pc, r0
   10df4:	bl	10d54 <error@@Base+0xb0>
   10df8:	ldrb	r3, [r1]
   10dfc:	cmp	r3, #114	; 0x72
   10e00:	beq	10e14 <error@@Base+0x170>
   10e04:	ldr	r3, [pc, #44]	; 10e38 <error@@Base+0x194>
   10e08:	ldr	r3, [ip, r3]
   10e0c:	ldr	r0, [r3]
   10e10:	pop	{r4, r5, r6, pc}
   10e14:	ldr	r3, [pc, #32]	; 10e3c <error@@Base+0x198>
   10e18:	ldr	r3, [ip, r3]
   10e1c:	ldr	r0, [r3]
   10e20:	pop	{r4, r5, r6, pc}
   10e24:	ldr	r0, [pc, #20]	; 10e40 <error@@Base+0x19c>
   10e28:	add	r0, pc, r0
   10e2c:	bl	10d54 <error@@Base+0xb0>
   10e30:	andeq	r2, r1, r8, lsr r2
   10e34:	andeq	r1, r0, r4, ror #7
   10e38:	andeq	r0, r0, r8, lsl #1
   10e3c:	andeq	r0, r0, r4, lsl #1
   10e40:	muleq	r0, r4, r3
   10e44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e48:	sub	sp, sp, #20
   10e4c:	mov	r7, r0
   10e50:	str	r0, [sp, #8]
   10e54:	ldr	r0, [r1]
   10e58:	str	r2, [sp, #12]
   10e5c:	mov	r9, r1
   10e60:	mov	r6, r3
   10e64:	bl	10be8 <abort@plt+0x3dc>
   10e68:	ldr	r5, [pc, #496]	; 11060 <error@@Base+0x3bc>
   10e6c:	ldr	r3, [pc, #496]	; 11064 <error@@Base+0x3c0>
   10e70:	add	r5, pc, r5
   10e74:	ldr	r4, [pc, #492]	; 11068 <error@@Base+0x3c4>
   10e78:	ldr	r3, [r5, r3]
   10e7c:	add	r4, pc, r4
   10e80:	mov	r1, r4
   10e84:	str	r0, [r3]
   10e88:	mov	r0, #2
   10e8c:	bl	10788 <__sysv_signal@plt>
   10e90:	mov	r1, r4
   10e94:	mov	r0, #15
   10e98:	bl	10788 <__sysv_signal@plt>
   10e9c:	ldr	fp, [r7]
   10ea0:	cmp	fp, #1
   10ea4:	beq	10fec <error@@Base+0x348>
   10ea8:	mov	r7, #0
   10eac:	ble	11000 <error@@Base+0x35c>
   10eb0:	ldr	r3, [pc, #436]	; 1106c <error@@Base+0x3c8>
   10eb4:	mov	sl, #1
   10eb8:	add	r3, pc, r3
   10ebc:	str	r3, [sp, #4]
   10ec0:	mov	r4, sl
   10ec4:	mov	r3, fp
   10ec8:	b	10eec <error@@Base+0x248>
   10ecc:	add	r2, r7, #1
   10ed0:	str	r5, [r9, r7, lsl #2]
   10ed4:	sxth	r7, r2
   10ed8:	add	r4, r4, #1
   10edc:	sxth	r4, r4
   10ee0:	cmp	r4, r3
   10ee4:	mov	sl, r4
   10ee8:	bge	11000 <error@@Base+0x35c>
   10eec:	ldr	r5, [r9, r4, lsl #2]
   10ef0:	lsl	fp, r4, #2
   10ef4:	ldrb	r2, [r5]
   10ef8:	cmp	r2, #45	; 0x2d
   10efc:	bne	10ecc <error@@Base+0x228>
   10f00:	ldrb	r8, [r5, #1]
   10f04:	cmp	r8, #0
   10f08:	beq	10ecc <error@@Base+0x228>
   10f0c:	mov	r0, r5
   10f10:	str	r3, [sp]
   10f14:	bl	107b8 <strlen@plt>
   10f18:	mov	r1, r5
   10f1c:	mov	r2, r0
   10f20:	ldr	r0, [sp, #4]
   10f24:	bl	10800 <strncmp@plt>
   10f28:	cmp	r0, #0
   10f2c:	beq	11048 <error@@Base+0x3a4>
   10f30:	ldr	r3, [sp]
   10f34:	add	sl, sl, #1
   10f38:	cmp	sl, r3
   10f3c:	addlt	fp, r9, fp
   10f40:	movge	ip, #0
   10f44:	ldrlt	ip, [fp, #4]
   10f48:	cmp	r6, #0
   10f4c:	beq	10f90 <error@@Base+0x2ec>
   10f50:	ldrb	r2, [r6]
   10f54:	cmp	r2, #0
   10f58:	beq	10f90 <error@@Base+0x2ec>
   10f5c:	cmp	r2, r8
   10f60:	beq	10fa0 <error@@Base+0x2fc>
   10f64:	mov	r2, #0
   10f68:	b	10f74 <error@@Base+0x2d0>
   10f6c:	cmp	r8, r0
   10f70:	beq	10fa4 <error@@Base+0x300>
   10f74:	add	r2, r2, #1
   10f78:	sxth	r2, r2
   10f7c:	add	r1, r2, r2, lsl #1
   10f80:	ldrb	r0, [r6, r1, lsl #2]
   10f84:	add	r1, r6, r1, lsl #2
   10f88:	cmp	r0, #0
   10f8c:	bne	10f6c <error@@Base+0x2c8>
   10f90:	ldr	r0, [pc, #216]	; 11070 <error@@Base+0x3cc>
   10f94:	mov	r1, r5
   10f98:	add	r0, pc, r0
   10f9c:	bl	10d54 <error@@Base+0xb0>
   10fa0:	mov	r1, r6
   10fa4:	ldr	r2, [r1, #4]
   10fa8:	cmp	r2, #0
   10fac:	beq	11010 <error@@Base+0x36c>
   10fb0:	ldrb	r0, [r5, #2]
   10fb4:	cmp	r0, #0
   10fb8:	cmpeq	ip, #0
   10fbc:	beq	11010 <error@@Base+0x36c>
   10fc0:	ldr	r1, [r2]
   10fc4:	cmp	r1, #0
   10fc8:	bne	11050 <error@@Base+0x3ac>
   10fcc:	cmp	r0, #0
   10fd0:	addne	ip, r5, #2
   10fd4:	str	ip, [r2]
   10fd8:	ldrb	r2, [r5, #2]
   10fdc:	cmp	r2, #0
   10fe0:	addeq	r4, r4, #1
   10fe4:	sxtheq	r4, r4
   10fe8:	b	10ed8 <error@@Base+0x234>
   10fec:	ldr	r3, [pc, #128]	; 11074 <error@@Base+0x3d0>
   10ff0:	ldr	r3, [r5, r3]
   10ff4:	ldrb	r7, [r3]
   10ff8:	cmp	r7, #0
   10ffc:	bne	11048 <error@@Base+0x3a4>
   11000:	ldr	r3, [sp, #8]
   11004:	str	r7, [r3]
   11008:	add	sp, sp, #20
   1100c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11010:	ldr	r3, [r1, #8]
   11014:	cmp	r3, #0
   11018:	beq	10f90 <error@@Base+0x2ec>
   1101c:	ldrb	r2, [r5, #2]
   11020:	cmp	r2, #0
   11024:	bne	10f90 <error@@Base+0x2ec>
   11028:	ldrb	r2, [r3]
   1102c:	cmp	r2, #0
   11030:	bne	11050 <error@@Base+0x3ac>
   11034:	mov	r2, #1
   11038:	strb	r2, [r3]
   1103c:	ldr	r3, [sp, #8]
   11040:	ldr	r3, [r3]
   11044:	b	10ed8 <error@@Base+0x234>
   11048:	ldr	r0, [sp, #12]
   1104c:	bl	10c3c <abort@plt+0x430>
   11050:	ldr	r0, [pc, #32]	; 11078 <error@@Base+0x3d4>
   11054:	mov	r1, r5
   11058:	add	r0, pc, r0
   1105c:	bl	10d54 <error@@Base+0xb0>
   11060:	andeq	r2, r1, r8, lsl #3
   11064:	andeq	r0, r0, r8, ror r0
   11068:			; <UNDEFINED> instruction: 0xfffffe98
   1106c:	andeq	r1, r0, r0, lsr r3
   11070:	andeq	r1, r0, r8, asr r2
   11074:	andeq	r0, r0, r8, rrx
   11078:	andeq	r1, r0, r8, lsr #3
   1107c:	ldr	ip, [pc, #60]	; 110c0 <error@@Base+0x41c>
   11080:	push	{lr}		; (str lr, [sp, #-4]!)
   11084:	add	ip, pc, ip
   11088:	ldr	r2, [pc, #52]	; 110c4 <error@@Base+0x420>
   1108c:	ldr	lr, [pc, #52]	; 110c8 <error@@Base+0x424>
   11090:	sub	sp, sp, #12
   11094:	mov	r3, r0
   11098:	ldr	lr, [ip, lr]
   1109c:	ldr	r0, [ip, r2]
   110a0:	str	r1, [sp]
   110a4:	ldr	r1, [pc, #32]	; 110cc <error@@Base+0x428>
   110a8:	ldr	r2, [lr]
   110ac:	add	r1, pc, r1
   110b0:	ldr	r0, [r0]
   110b4:	bl	107c4 <fprintf@plt>
   110b8:	add	sp, sp, #12
   110bc:	pop	{pc}		; (ldr pc, [sp], #4)
   110c0:	andeq	r1, r1, r4, ror pc
   110c4:	andeq	r0, r0, r0, ror r0
   110c8:	andeq	r0, r0, r8, ror r0
   110cc:	andeq	r1, r0, r0, lsl #2
   110d0:	push	{r4, r5, r6, lr}
   110d4:	mov	r2, r0
   110d8:	ldr	r4, [pc, #60]	; 1111c <error@@Base+0x478>
   110dc:	mov	r5, r1
   110e0:	add	r4, pc, r4
   110e4:	mov	r1, #99	; 0x63
   110e8:	mov	r0, r4
   110ec:	bl	10740 <fgets@plt>
   110f0:	cmp	r0, #0
   110f4:	popeq	{r4, r5, r6, pc}
   110f8:	ldr	r1, [pc, #32]	; 11120 <error@@Base+0x47c>
   110fc:	mov	r2, r5
   11100:	mov	r0, r4
   11104:	add	r1, pc, r1
   11108:	bl	107d0 <__isoc99_sscanf@plt>
   1110c:	sub	r0, r0, #1
   11110:	clz	r0, r0
   11114:	lsr	r0, r0, #5
   11118:	pop	{r4, r5, r6, pc}
   1111c:	andeq	r1, r1, r0, asr #31
   11120:	andeq	r1, r0, r4, lsl r1
   11124:	push	{r4, r5, r6, lr}
   11128:	mov	r6, r2
   1112c:	ldr	r4, [pc, #68]	; 11178 <error@@Base+0x4d4>
   11130:	mov	r2, r0
   11134:	add	r4, pc, r4
   11138:	mov	r5, r1
   1113c:	mov	r0, r4
   11140:	mov	r1, #99	; 0x63
   11144:	bl	10740 <fgets@plt>
   11148:	cmp	r0, #0
   1114c:	popeq	{r4, r5, r6, pc}
   11150:	ldr	r1, [pc, #36]	; 1117c <error@@Base+0x4d8>
   11154:	mov	r3, r6
   11158:	mov	r2, r5
   1115c:	mov	r0, r4
   11160:	add	r1, pc, r1
   11164:	bl	107d0 <__isoc99_sscanf@plt>
   11168:	sub	r0, r0, #2
   1116c:	clz	r0, r0
   11170:	lsr	r0, r0, #5
   11174:	pop	{r4, r5, r6, pc}
   11178:	andeq	r1, r1, ip, ror #30
   1117c:	strheq	r1, [r0], -r4
   11180:	ldr	r1, [r1, #8]
   11184:	ldr	r0, [r0, #8]
   11188:	b	10ab4 <abort@plt+0x2a8>
   1118c:	ldr	r2, [r1]
   11190:	mov	r3, r0
   11194:	cmp	r2, #0
   11198:	beq	111d0 <error@@Base+0x52c>
   1119c:	ldr	r3, [r1, #4]
   111a0:	vmov	s15, r2
   111a4:	sub	r3, r2, r3
   111a8:	vldr	d5, [pc, #56]	; 111e8 <error@@Base+0x544>
   111ac:	vmov	s14, r3
   111b0:	vcvt.f64.s32	d6, s15
   111b4:	ldr	r1, [pc, #52]	; 111f0 <error@@Base+0x54c>
   111b8:	vcvt.f64.s32	d7, s14
   111bc:	add	r1, pc, r1
   111c0:	vmul.f64	d7, d7, d5
   111c4:	vdiv.f64	d5, d7, d6
   111c8:	vmov	r2, r3, d5
   111cc:	b	107c4 <fprintf@plt>
   111d0:	ldr	r0, [pc, #28]	; 111f4 <error@@Base+0x550>
   111d4:	mov	r2, #8
   111d8:	mov	r1, #1
   111dc:	add	r0, pc, r0
   111e0:	b	10770 <fwrite@plt>
   111e4:	nop			; (mov r0, r0)
   111e8:	andeq	r0, r0, r0
   111ec:	subsmi	r0, r9, r0
   111f0:	andeq	r1, r0, ip, rrx
   111f4:	andeq	r1, r0, r0, asr #32
   111f8:	push	{r4, r5, r6, lr}
   111fc:	subs	r4, r1, #0
   11200:	mov	r5, r0
   11204:	beq	11240 <error@@Base+0x59c>
   11208:	ldr	r1, [pc, #76]	; 1125c <error@@Base+0x5b8>
   1120c:	ldm	r4, {r2, r3}
   11210:	add	r1, pc, r1
   11214:	bl	107c4 <fprintf@plt>
   11218:	mov	r1, r4
   1121c:	mov	r0, r5
   11220:	bl	1118c <error@@Base+0x4e8>
   11224:	ldr	r0, [pc, #52]	; 11260 <error@@Base+0x5bc>
   11228:	mov	r3, r5
   1122c:	mov	r2, #3
   11230:	mov	r1, #1
   11234:	add	r0, pc, r0
   11238:	pop	{r4, r5, r6, lr}
   1123c:	b	10770 <fwrite@plt>
   11240:	mov	r3, r0
   11244:	ldr	r0, [pc, #24]	; 11264 <error@@Base+0x5c0>
   11248:	mov	r2, #26
   1124c:	mov	r1, #1
   11250:	add	r0, pc, r0
   11254:	bl	10770 <fwrite@plt>
   11258:	b	11224 <error@@Base+0x580>
   1125c:	andeq	r1, r0, r0, lsr #32
   11260:	andeq	r1, r0, r4, lsr #32
   11264:	andeq	r0, r0, ip, ror #31
   11268:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1126c:	mov	r5, r1
   11270:	ldr	r1, [pc, #284]	; 11394 <error@@Base+0x6f0>
   11274:	ldrb	r9, [sp, #32]
   11278:	mov	r6, r0
   1127c:	add	r1, pc, r1
   11280:	mov	r7, r2
   11284:	mov	r2, r3
   11288:	ldrb	sl, [sp, #36]	; 0x24
   1128c:	bl	107c4 <fprintf@plt>
   11290:	mov	r0, r6
   11294:	mov	r1, #0
   11298:	bl	111f8 <error@@Base+0x554>
   1129c:	cmp	r9, #0
   112a0:	beq	11370 <error@@Base+0x6cc>
   112a4:	ldr	r2, [pc, #236]	; 11398 <error@@Base+0x6f4>
   112a8:	ldr	r1, [pc, #236]	; 1139c <error@@Base+0x6f8>
   112ac:	add	r2, pc, r2
   112b0:	add	r1, pc, r1
   112b4:	mov	r0, r6
   112b8:	bl	107c4 <fprintf@plt>
   112bc:	cmp	r7, #0
   112c0:	ble	11310 <error@@Base+0x66c>
   112c4:	ldr	r8, [pc, #212]	; 113a0 <error@@Base+0x6fc>
   112c8:	mov	r4, #1
   112cc:	add	r8, pc, r8
   112d0:	ldr	r3, [r5, r4, lsl #3]
   112d4:	mov	r0, r6
   112d8:	cmp	r3, #0
   112dc:	add	r1, r5, r4, lsl #3
   112e0:	ble	112f8 <error@@Base+0x654>
   112e4:	bl	111f8 <error@@Base+0x554>
   112e8:	mov	r2, r4
   112ec:	mov	r1, r8
   112f0:	mov	r0, r6
   112f4:	bl	107c4 <fprintf@plt>
   112f8:	add	r4, r4, #1
   112fc:	sxth	r4, r4
   11300:	cmp	r7, r4
   11304:	bge	112d0 <error@@Base+0x62c>
   11308:	cmp	r9, #0
   1130c:	beq	11340 <error@@Base+0x69c>
   11310:	add	r1, r7, #1
   11314:	ldr	r3, [r5, r1, lsl #3]
   11318:	add	r1, r5, r1, lsl #3
   1131c:	cmp	r3, #0
   11320:	ble	11340 <error@@Base+0x69c>
   11324:	mov	r0, r6
   11328:	bl	111f8 <error@@Base+0x554>
   1132c:	ldr	r1, [pc, #112]	; 113a4 <error@@Base+0x700>
   11330:	mov	r2, r7
   11334:	add	r1, pc, r1
   11338:	mov	r0, r6
   1133c:	bl	107c4 <fprintf@plt>
   11340:	cmp	sl, #0
   11344:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11348:	mov	r1, r5
   1134c:	mov	r0, r6
   11350:	bl	111f8 <error@@Base+0x554>
   11354:	ldr	r0, [pc, #76]	; 113a8 <error@@Base+0x704>
   11358:	mov	r3, r6
   1135c:	mov	r2, #7
   11360:	mov	r1, #1
   11364:	add	r0, pc, r0
   11368:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   1136c:	b	10770 <fwrite@plt>
   11370:	ldr	r2, [pc, #52]	; 113ac <error@@Base+0x708>
   11374:	ldr	r1, [pc, #52]	; 113b0 <error@@Base+0x70c>
   11378:	add	r2, pc, r2
   1137c:	add	r1, pc, r1
   11380:	mov	r0, r6
   11384:	bl	107c4 <fprintf@plt>
   11388:	cmp	r7, #0
   1138c:	bgt	112c4 <error@@Base+0x620>
   11390:	b	11340 <error@@Base+0x69c>
   11394:	andeq	r0, r0, r0, ror #31
   11398:	ldrdeq	r0, [r0], -r8
   1139c:	andeq	r0, r0, ip, asr #29
   113a0:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   113a4:	andeq	r0, r0, ip, lsr pc
   113a8:	andeq	r0, r0, r8, lsl pc
   113ac:	andeq	r0, r0, r4, lsl pc
   113b0:	andeq	r0, r0, r0, lsl #28
   113b4:	push	{r4, r5, r6, r7, r8, lr}
   113b8:	mov	r6, r0
   113bc:	mov	r0, r1
   113c0:	add	r5, r1, #4096	; 0x1000
   113c4:	mov	r4, r2
   113c8:	bl	11da0 <error@@Base+0x10fc>
   113cc:	ldr	r2, [pc, #144]	; 11464 <error@@Base+0x7c0>
   113d0:	ldr	r1, [r5, #3952]	; 0xf70
   113d4:	ldr	r0, [r5, #3956]	; 0xf74
   113d8:	add	r2, pc, r2
   113dc:	bl	11bac <error@@Base+0xf08>
   113e0:	ldr	r1, [pc, #128]	; 11468 <error@@Base+0x7c4>
   113e4:	mov	r2, r4
   113e8:	add	r1, pc, r1
   113ec:	mov	r0, r6
   113f0:	bl	107c4 <fprintf@plt>
   113f4:	mov	r0, r6
   113f8:	mov	r1, #0
   113fc:	bl	111f8 <error@@Base+0x554>
   11400:	mov	r1, r6
   11404:	mov	r0, #10
   11408:	bl	107e8 <fputc@plt>
   1140c:	ldr	r3, [r5, #3956]	; 0xf74
   11410:	cmp	r3, #0
   11414:	pople	{r4, r5, r6, r7, r8, pc}
   11418:	ldr	r7, [pc, #76]	; 1146c <error@@Base+0x7c8>
   1141c:	mov	r4, #0
   11420:	add	r7, pc, r7
   11424:	ldr	r3, [r5, #3952]	; 0xf70
   11428:	mov	r0, r6
   1142c:	ldr	r1, [r3, r4, lsl #2]
   11430:	add	r1, r1, #12
   11434:	bl	111f8 <error@@Base+0x554>
   11438:	ldr	r3, [r5, #3952]	; 0xf70
   1143c:	mov	r1, r7
   11440:	mov	r0, r6
   11444:	ldr	r3, [r3, r4, lsl #2]
   11448:	add	r4, r4, #1
   1144c:	ldr	r2, [r3, #8]
   11450:	bl	107c4 <fprintf@plt>
   11454:	ldr	r3, [r5, #3956]	; 0xf74
   11458:	cmp	r3, r4
   1145c:	bgt	11424 <error@@Base+0x780>
   11460:	pop	{r4, r5, r6, r7, r8, pc}
   11464:			; <UNDEFINED> instruction: 0xfffffda0
   11468:	andeq	r0, r0, r4, ror lr
   1146c:	andeq	r0, r0, ip, asr sp
   11470:	ldr	ip, [r0]
   11474:	ldr	r3, [r0, #4]
   11478:	add	r1, ip, r1
   1147c:	add	r2, r3, r2
   11480:	stm	r0, {r1, r2}
   11484:	bx	lr
   11488:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1148c:	mov	r2, r0
   11490:	ldr	r4, [pc, #236]	; 11584 <error@@Base+0x8e0>
   11494:	sub	sp, sp, #20
   11498:	add	r4, pc, r4
   1149c:	mov	r6, r0
   114a0:	mov	sl, r1
   114a4:	mov	r0, r4
   114a8:	mov	r1, #99	; 0x63
   114ac:	bl	10740 <fgets@plt>
   114b0:	cmp	r0, #0
   114b4:	beq	11570 <error@@Base+0x8cc>
   114b8:	mov	r0, r4
   114bc:	mov	r2, r6
   114c0:	mov	r1, #99	; 0x63
   114c4:	bl	10740 <fgets@plt>
   114c8:	cmp	r0, #0
   114cc:	beq	11570 <error@@Base+0x8cc>
   114d0:	ldr	r4, [pc, #176]	; 11588 <error@@Base+0x8e4>
   114d4:	ldr	fp, [pc, #176]	; 1158c <error@@Base+0x8e8>
   114d8:	mov	r3, #0
   114dc:	add	r4, pc, r4
   114e0:	str	r3, [sp, #4]
   114e4:	add	r4, r4, #29
   114e8:	mov	r5, r3
   114ec:	add	r9, sp, #12
   114f0:	add	r8, sp, #8
   114f4:	mov	r7, #10
   114f8:	add	fp, pc, fp
   114fc:	b	11514 <error@@Base+0x870>
   11500:	ldr	r1, [sp, #8]
   11504:	lsl	r3, r3, #3
   11508:	add	r0, sl, r3
   1150c:	ldr	r2, [sp, #12]
   11510:	bl	11470 <error@@Base+0x7cc>
   11514:	mov	r2, r9
   11518:	mov	r1, r8
   1151c:	mov	r0, r6
   11520:	bl	11124 <error@@Base+0x480>
   11524:	mov	r2, r7
   11528:	mov	r1, r5
   1152c:	cmp	r0, #0
   11530:	mov	r0, r4
   11534:	beq	11578 <error@@Base+0x8d4>
   11538:	bl	1071c <strtol@plt>
   1153c:	mov	r1, fp
   11540:	subs	r3, r0, #0
   11544:	mov	r0, r4
   11548:	bne	11500 <error@@Base+0x85c>
   1154c:	bl	10710 <strcmp@plt>
   11550:	mov	r3, r5
   11554:	cmp	r0, #0
   11558:	movne	r3, #88	; 0x58
   1155c:	ldreq	r2, [sp, #8]
   11560:	ldrne	r1, [sp, #8]
   11564:	streq	r2, [sp, #4]
   11568:	moveq	r1, r2
   1156c:	b	11508 <error@@Base+0x864>
   11570:	mov	r3, #0
   11574:	str	r3, [sp, #4]
   11578:	ldr	r0, [sp, #4]
   1157c:	add	sp, sp, #20
   11580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11584:	andeq	r1, r1, r8, lsl #24
   11588:	andeq	r1, r1, r4, asr #23
   1158c:	andeq	r0, r0, r4, lsl #27
   11590:	push	{r4, r5, r6, r7, r8, lr}
   11594:	mov	r5, r2
   11598:	mov	r6, r3
   1159c:	mov	r7, r0
   115a0:	mov	r8, r1
   115a4:	bl	11c14 <error@@Base+0xf70>
   115a8:	subs	r4, r0, #0
   115ac:	beq	115c4 <error@@Base+0x920>
   115b0:	mov	r2, r6
   115b4:	mov	r1, r5
   115b8:	add	r0, r4, #12
   115bc:	pop	{r4, r5, r6, r7, r8, lr}
   115c0:	b	11470 <error@@Base+0x7cc>
   115c4:	mov	r1, #20
   115c8:	mov	r0, #1
   115cc:	bl	10cfc <error@@Base+0x58>
   115d0:	mov	r4, r0
   115d4:	mov	r0, r8
   115d8:	bl	1074c <strdup@plt>
   115dc:	mov	r1, r4
   115e0:	str	r0, [r4, #8]
   115e4:	mov	r0, r7
   115e8:	bl	11c98 <error@@Base+0xff4>
   115ec:	b	115b0 <error@@Base+0x90c>
   115f0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115f4:	mov	r2, r0
   115f8:	ldr	r4, [pc, #148]	; 11694 <error@@Base+0x9f0>
   115fc:	sub	sp, sp, #8
   11600:	add	r4, pc, r4
   11604:	mov	r5, r0
   11608:	mov	r8, r1
   1160c:	mov	r0, r4
   11610:	mov	r1, #99	; 0x63
   11614:	bl	10740 <fgets@plt>
   11618:	cmp	r0, #0
   1161c:	beq	1168c <error@@Base+0x9e8>
   11620:	mov	r0, r4
   11624:	mov	r2, r5
   11628:	mov	r1, #99	; 0x63
   1162c:	bl	10740 <fgets@plt>
   11630:	cmp	r0, #0
   11634:	beq	1168c <error@@Base+0x9e8>
   11638:	ldr	r4, [pc, #88]	; 11698 <error@@Base+0x9f4>
   1163c:	add	r7, sp, #4
   11640:	add	r4, pc, r4
   11644:	add	sl, r4, #29
   11648:	mov	r6, sp
   1164c:	mov	r9, #0
   11650:	b	11670 <error@@Base+0x9cc>
   11654:	bl	107b8 <strlen@plt>
   11658:	ldm	sp, {r2, r3}
   1165c:	mov	r1, sl
   11660:	add	ip, r4, r0
   11664:	mov	r0, r8
   11668:	strb	r9, [ip, #-1]
   1166c:	bl	11590 <error@@Base+0x8ec>
   11670:	mov	r2, r7
   11674:	mov	r1, r6
   11678:	mov	r0, r5
   1167c:	bl	11124 <error@@Base+0x480>
   11680:	cmp	r0, #0
   11684:	mov	r0, r4
   11688:	bne	11654 <error@@Base+0x9b0>
   1168c:	add	sp, sp, #8
   11690:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11694:	andeq	r1, r1, r0, lsr #21
   11698:	andeq	r1, r1, r0, ror #20
   1169c:	push	{r4, r5, r6, r7, lr}
   116a0:	mov	r7, r1
   116a4:	ldr	r1, [pc, #392]	; 11834 <error@@Base+0xb90>
   116a8:	sub	sp, sp, #12
   116ac:	add	r1, pc, r1
   116b0:	mov	r6, r0
   116b4:	mov	r0, r7
   116b8:	bl	10db4 <error@@Base+0x110>
   116bc:	ldr	r5, [pc, #372]	; 11838 <error@@Base+0xb94>
   116c0:	mov	r1, #99	; 0x63
   116c4:	add	r5, pc, r5
   116c8:	mov	r2, r0
   116cc:	mov	r4, r0
   116d0:	mov	r0, r5
   116d4:	bl	10740 <fgets@plt>
   116d8:	cmp	r0, #0
   116dc:	beq	11810 <error@@Base+0xb6c>
   116e0:	ldr	r1, [pc, #340]	; 1183c <error@@Base+0xb98>
   116e4:	mov	r2, #45	; 0x2d
   116e8:	add	r1, pc, r1
   116ec:	mov	r0, r5
   116f0:	bl	10800 <strncmp@plt>
   116f4:	cmp	r0, #0
   116f8:	bne	11810 <error@@Base+0xb6c>
   116fc:	mov	r2, r4
   11700:	mov	r1, #99	; 0x63
   11704:	mov	r0, r5
   11708:	bl	10740 <fgets@plt>
   1170c:	cmp	r0, #0
   11710:	beq	11810 <error@@Base+0xb6c>
   11714:	ldr	r1, [pc, #292]	; 11840 <error@@Base+0xb9c>
   11718:	mov	r0, r5
   1171c:	add	r1, pc, r1
   11720:	bl	10710 <strcmp@plt>
   11724:	cmp	r0, #0
   11728:	bne	11810 <error@@Base+0xb6c>
   1172c:	mov	r1, sp
   11730:	mov	r0, r4
   11734:	bl	110d0 <error@@Base+0x42c>
   11738:	cmp	r0, #0
   1173c:	beq	11810 <error@@Base+0xb6c>
   11740:	add	r1, sp, #4
   11744:	mov	r0, r4
   11748:	bl	110d0 <error@@Base+0x42c>
   1174c:	cmp	r0, #0
   11750:	beq	11810 <error@@Base+0xb6c>
   11754:	mov	r2, r4
   11758:	mov	r1, #99	; 0x63
   1175c:	mov	r0, r5
   11760:	bl	10740 <fgets@plt>
   11764:	cmp	r0, #0
   11768:	beq	11810 <error@@Base+0xb6c>
   1176c:	mov	r0, r5
   11770:	mov	r2, r4
   11774:	mov	r1, #99	; 0x63
   11778:	bl	10740 <fgets@plt>
   1177c:	cmp	r0, #0
   11780:	beq	11810 <error@@Base+0xb6c>
   11784:	ldm	sp, {r1, r2}
   11788:	mov	r0, r6
   1178c:	bl	11470 <error@@Base+0x7cc>
   11790:	add	r1, r6, #8
   11794:	mov	r0, r4
   11798:	bl	11488 <error@@Base+0x7e4>
   1179c:	add	r1, r6, #416	; 0x1a0
   117a0:	mov	r7, r0
   117a4:	mov	r0, r4
   117a8:	bl	11488 <error@@Base+0x7e4>
   117ac:	add	r1, r6, #824	; 0x338
   117b0:	mov	r5, r0
   117b4:	mov	r0, r4
   117b8:	bl	11488 <error@@Base+0x7e4>
   117bc:	ldr	r3, [sp]
   117c0:	cmp	r3, #0
   117c4:	ble	11800 <error@@Base+0xb5c>
   117c8:	add	r1, r6, #920	; 0x398
   117cc:	mov	r0, r4
   117d0:	bl	11488 <error@@Base+0x7e4>
   117d4:	cmp	r7, #0
   117d8:	ble	117e8 <error@@Base+0xb44>
   117dc:	add	r1, r6, #992	; 0x3e0
   117e0:	mov	r0, r4
   117e4:	bl	115f0 <error@@Base+0x94c>
   117e8:	cmp	r5, #0
   117ec:	ble	11800 <error@@Base+0xb5c>
   117f0:	add	r1, r6, #9024	; 0x2340
   117f4:	add	r1, r1, #24
   117f8:	mov	r0, r4
   117fc:	bl	115f0 <error@@Base+0x94c>
   11800:	mov	r0, r4
   11804:	bl	10b48 <abort@plt+0x33c>
   11808:	add	sp, sp, #12
   1180c:	pop	{r4, r5, r6, r7, pc}
   11810:	cmp	r7, #0
   11814:	beq	11828 <error@@Base+0xb84>
   11818:	ldr	r0, [pc, #36]	; 11844 <error@@Base+0xba0>
   1181c:	mov	r1, r7
   11820:	add	r0, pc, r0
   11824:	bl	10d54 <error@@Base+0xb0>
   11828:	ldr	r7, [pc, #24]	; 11848 <error@@Base+0xba4>
   1182c:	add	r7, pc, r7
   11830:	b	11818 <error@@Base+0xb74>
   11834:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11838:	ldrdeq	r1, [r1], -ip
   1183c:			; <UNDEFINED> instruction: 0x00000bb8
   11840:			; <UNDEFINED> instruction: 0x00000bb4
   11844:	andeq	r0, r0, r0, ror #21
   11848:	andeq	r0, r0, r8, ror #20
   1184c:	mov	r3, r1
   11850:	ldr	r1, [pc, #360]	; 119c0 <error@@Base+0xd1c>
   11854:	push	{r4, r5, r6, r7, r8, lr}
   11858:	add	r1, pc, r1
   1185c:	sub	sp, sp, #8
   11860:	mov	r4, r0
   11864:	mov	r0, r3
   11868:	bl	10db4 <error@@Base+0x110>
   1186c:	ldr	r3, [pc, #336]	; 119c4 <error@@Base+0xd20>
   11870:	ldr	r2, [pc, #336]	; 119c8 <error@@Base+0xd24>
   11874:	ldr	r1, [pc, #336]	; 119cc <error@@Base+0xd28>
   11878:	add	r3, pc, r3
   1187c:	add	r2, pc, r2
   11880:	add	r1, pc, r1
   11884:	ldr	r8, [pc, #324]	; 119d0 <error@@Base+0xd2c>
   11888:	mov	r7, #0
   1188c:	add	r8, pc, r8
   11890:	mov	r5, r0
   11894:	bl	107c4 <fprintf@plt>
   11898:	ldr	r1, [pc, #308]	; 119d4 <error@@Base+0xd30>
   1189c:	ldr	r2, [r4]
   118a0:	add	r1, pc, r1
   118a4:	mov	r0, r5
   118a8:	bl	107c4 <fprintf@plt>
   118ac:	ldr	r1, [pc, #292]	; 119d8 <error@@Base+0xd34>
   118b0:	ldr	r2, [r4, #4]
   118b4:	add	r1, pc, r1
   118b8:	mov	r0, r5
   118bc:	bl	107c4 <fprintf@plt>
   118c0:	mov	r1, r4
   118c4:	mov	r0, r5
   118c8:	bl	1118c <error@@Base+0x4e8>
   118cc:	ldr	r0, [pc, #264]	; 119dc <error@@Base+0xd38>
   118d0:	mov	r1, #1
   118d4:	mov	r6, r1
   118d8:	mov	r3, r5
   118dc:	mov	r2, #12
   118e0:	add	r0, pc, r0
   118e4:	bl	10770 <fwrite@plt>
   118e8:	add	r1, r4, #8
   118ec:	mov	r0, r5
   118f0:	mov	r3, r8
   118f4:	mov	r2, #50	; 0x32
   118f8:	str	r6, [sp, #4]
   118fc:	str	r7, [sp]
   11900:	bl	11268 <error@@Base+0x5c4>
   11904:	ldr	r3, [pc, #212]	; 119e0 <error@@Base+0xd3c>
   11908:	add	r1, r4, #416	; 0x1a0
   1190c:	mov	r0, r5
   11910:	add	r3, pc, r3
   11914:	mov	r2, #50	; 0x32
   11918:	str	r6, [sp, #4]
   1191c:	str	r7, [sp]
   11920:	bl	11268 <error@@Base+0x5c4>
   11924:	ldr	r3, [pc, #184]	; 119e4 <error@@Base+0xd40>
   11928:	str	r6, [sp, #4]
   1192c:	add	r3, pc, r3
   11930:	str	r6, [sp]
   11934:	add	r1, r4, #824	; 0x338
   11938:	mov	r0, r5
   1193c:	mov	r2, #10
   11940:	bl	11268 <error@@Base+0x5c4>
   11944:	ldr	r3, [r4]
   11948:	cmp	r3, r7
   1194c:	ble	119b0 <error@@Base+0xd0c>
   11950:	ldr	r3, [pc, #144]	; 119e8 <error@@Base+0xd44>
   11954:	str	r7, [sp, #4]
   11958:	add	r3, pc, r3
   1195c:	str	r7, [sp]
   11960:	mov	r2, #8
   11964:	add	r1, r4, #920	; 0x398
   11968:	mov	r0, r5
   1196c:	bl	11268 <error@@Base+0x5c4>
   11970:	ldr	r3, [r4, #8]
   11974:	cmp	r3, r7
   11978:	ble	1198c <error@@Base+0xce8>
   1197c:	mov	r2, r8
   11980:	add	r1, r4, #992	; 0x3e0
   11984:	mov	r0, r5
   11988:	bl	113b4 <error@@Base+0x710>
   1198c:	ldr	r3, [r4, #416]	; 0x1a0
   11990:	cmp	r3, #0
   11994:	ble	119b0 <error@@Base+0xd0c>
   11998:	ldr	r2, [pc, #76]	; 119ec <error@@Base+0xd48>
   1199c:	add	r1, r4, #9024	; 0x2340
   119a0:	add	r1, r1, #24
   119a4:	add	r2, pc, r2
   119a8:	mov	r0, r5
   119ac:	bl	113b4 <error@@Base+0x710>
   119b0:	mov	r0, r5
   119b4:	add	sp, sp, #8
   119b8:	pop	{r4, r5, r6, r7, r8, lr}
   119bc:	b	10b48 <abort@plt+0x33c>
   119c0:			; <UNDEFINED> instruction: 0x00000abc
   119c4:	andeq	r0, r0, r8, asr sl
   119c8:	andeq	r0, r0, r4, lsr #20
   119cc:	muleq	r0, r8, sl
   119d0:	andeq	r0, r0, ip, asr #21
   119d4:	andeq	r0, r0, r0, lsl #21
   119d8:	andeq	r0, r0, ip, ror sl
   119dc:	andeq	r0, r0, r8, ror #20
   119e0:	andeq	r0, r0, r4, asr sl
   119e4:	andeq	r0, r0, r8, asr #20
   119e8:	andeq	r0, r0, r4, lsr sl
   119ec:	andeq	r0, r0, r0, asr #19
   119f0:	ldr	r2, [pc, #420]	; 11b9c <error@@Base+0xef8>
   119f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   119f8:	sub	sp, sp, #28
   119fc:	add	r2, pc, r2
   11a00:	ldr	r9, [pc, #408]	; 11ba0 <error@@Base+0xefc>
   11a04:	ldr	r8, [pc, #408]	; 11ba4 <error@@Base+0xf00>
   11a08:	str	r2, [sp, #16]
   11a0c:	ldr	r2, [pc, #404]	; 11ba8 <error@@Base+0xf04>
   11a10:	add	r9, pc, r9
   11a14:	add	r8, pc, r8
   11a18:	add	r2, pc, r2
   11a1c:	lsl	r3, r1, #2
   11a20:	str	r1, [sp, #12]
   11a24:	str	r2, [sp, #4]
   11a28:	str	r0, [sp, #8]
   11a2c:	str	r3, [sp, #20]
   11a30:	ldr	r3, [sp, #16]
   11a34:	ldr	r2, [sp, #12]
   11a38:	ldr	r1, [r3]
   11a3c:	ldr	r3, [sp, #8]
   11a40:	cmp	r3, r2
   11a44:	ldr	r7, [r1, r3, lsl #2]
   11a48:	bge	11b80 <error@@Base+0xedc>
   11a4c:	ldr	r4, [sp, #8]
   11a50:	ldr	r5, [sp, #12]
   11a54:	lsl	r6, r5, #2
   11a58:	b	11a60 <error@@Base+0xdbc>
   11a5c:	ldr	r1, [r9]
   11a60:	ldr	r1, [r1, r6]
   11a64:	ldr	r3, [r9, #4]
   11a68:	mov	r0, r7
   11a6c:	blx	r3
   11a70:	cmp	r0, #0
   11a74:	bge	11acc <error@@Base+0xe28>
   11a78:	sub	r5, r5, #1
   11a7c:	cmp	r5, r4
   11a80:	sub	r6, r6, #4
   11a84:	bgt	11a5c <error@@Base+0xdb8>
   11a88:	bne	11ac8 <error@@Base+0xe24>
   11a8c:	ldr	r1, [r9]
   11a90:	mov	fp, r5
   11a94:	add	r0, r1, fp, lsl #2
   11a98:	ldr	r3, [sp, #8]
   11a9c:	sub	r1, fp, #1
   11aa0:	cmp	r3, r1
   11aa4:	str	r7, [r0]
   11aa8:	blt	11b64 <error@@Base+0xec0>
   11aac:	ldr	r2, [sp, #12]
   11ab0:	add	r3, r5, #1
   11ab4:	cmp	r3, r2
   11ab8:	str	r3, [sp, #8]
   11abc:	blt	11a30 <error@@Base+0xd8c>
   11ac0:	add	sp, sp, #28
   11ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11ac8:	lsl	r6, r5, #2
   11acc:	ldr	r3, [sp, #4]
   11ad0:	add	sl, r4, #1
   11ad4:	cmp	sl, r5
   11ad8:	ldr	r1, [r3]
   11adc:	add	r0, r1, r6
   11ae0:	ldr	r2, [r1, r6]
   11ae4:	str	r2, [r1, r4, lsl #2]
   11ae8:	lsl	r4, r4, #2
   11aec:	bge	11b70 <error@@Base+0xecc>
   11af0:	add	fp, r4, #4
   11af4:	b	11b0c <error@@Base+0xe68>
   11af8:	add	sl, sl, #1
   11afc:	cmp	sl, r5
   11b00:	add	fp, fp, #4
   11b04:	beq	11b50 <error@@Base+0xeac>
   11b08:	ldr	r1, [r8]
   11b0c:	ldr	r1, [r1, fp]
   11b10:	ldr	r3, [r8, #4]
   11b14:	mov	r0, r7
   11b18:	blx	r3
   11b1c:	cmp	r0, #0
   11b20:	bgt	11af8 <error@@Base+0xe54>
   11b24:	ldr	r1, [r8]
   11b28:	mov	r4, sl
   11b2c:	add	r0, r1, r6
   11b30:	sub	r5, r5, #1
   11b34:	ldr	r2, [r1, fp]
   11b38:	cmp	r5, sl
   11b3c:	str	r2, [r0]
   11b40:	bgt	11a54 <error@@Base+0xdb0>
   11b44:	mov	fp, r5
   11b48:	mov	r5, r4
   11b4c:	b	11a94 <error@@Base+0xdf0>
   11b50:	ldr	r0, [r8]
   11b54:	mov	fp, sl
   11b58:	add	r0, r0, r6
   11b5c:	mov	r5, fp
   11b60:	b	11a98 <error@@Base+0xdf4>
   11b64:	mov	r0, r3
   11b68:	bl	119f0 <error@@Base+0xd4c>
   11b6c:	b	11aac <error@@Base+0xe08>
   11b70:	beq	11b94 <error@@Base+0xef0>
   11b74:	lsl	fp, sl, #2
   11b78:	mov	r4, sl
   11b7c:	b	11b30 <error@@Base+0xe8c>
   11b80:	ldr	r3, [sp, #20]
   11b84:	mov	fp, r2
   11b88:	add	r0, r1, r3
   11b8c:	ldr	r5, [sp, #8]
   11b90:	b	11a98 <error@@Base+0xdf4>
   11b94:	mov	fp, sl
   11b98:	b	11b5c <error@@Base+0xeb8>
   11b9c:	andeq	r1, r1, r8, lsl #14
   11ba0:	strdeq	r1, [r1], -r4
   11ba4:	strdeq	r1, [r1], -r0
   11ba8:	andeq	r1, r1, ip, ror #13
   11bac:	cmp	r0, #1
   11bb0:	mov	ip, r1
   11bb4:	bxle	lr
   11bb8:	ldr	r3, [pc, #20]	; 11bd4 <error@@Base+0xf30>
   11bbc:	sub	r1, r0, #1
   11bc0:	add	r3, pc, r3
   11bc4:	mov	r0, #0
   11bc8:	str	ip, [r3]
   11bcc:	str	r2, [r3, #4]
   11bd0:	b	119f0 <error@@Base+0xd4c>
   11bd4:	andeq	r1, r1, r4, asr #10
   11bd8:	push	{r4, r5, r6, lr}
   11bdc:	add	r5, r0, #8000	; 0x1f40
   11be0:	mov	r6, r0
   11be4:	add	r5, r5, #48	; 0x30
   11be8:	mov	r4, r0
   11bec:	mov	r0, r4
   11bf0:	add	r4, r4, #16
   11bf4:	bl	11e70 <error@@Base+0x11cc>
   11bf8:	cmp	r4, r5
   11bfc:	bne	11bec <error@@Base+0xf48>
   11c00:	add	r6, r6, #4096	; 0x1000
   11c04:	mov	r3, #0
   11c08:	str	r3, [r6, #3952]	; 0xf70
   11c0c:	str	r3, [r6, #3956]	; 0xf74
   11c10:	pop	{r4, r5, r6, pc}
   11c14:	push	{r4, r5, r6, lr}
   11c18:	mov	r5, r1
   11c1c:	ldrb	r3, [r1]
   11c20:	cmp	r3, #0
   11c24:	beq	11c5c <error@@Base+0xfb8>
   11c28:	mov	r2, #0
   11c2c:	add	r2, r2, r3
   11c30:	ldrb	r3, [r1, #1]!
   11c34:	cmp	r3, #0
   11c38:	bne	11c2c <error@@Base+0xf88>
   11c3c:	ldr	r1, [pc, #80]	; 11c94 <error@@Base+0xff0>
   11c40:	asr	r3, r2, #31
   11c44:	smull	ip, r1, r1, r2
   11c48:	add	r1, r1, r2
   11c4c:	rsb	r3, r3, r1, asr #8
   11c50:	rsb	r1, r3, r3, lsl #6
   11c54:	rsb	r3, r3, r1, lsl #3
   11c58:	sub	r3, r2, r3
   11c5c:	ldr	r4, [r0, r3, lsl #4]
   11c60:	cmp	r4, #0
   11c64:	bne	11c78 <error@@Base+0xfd4>
   11c68:	b	11c8c <error@@Base+0xfe8>
   11c6c:	ldr	r4, [r4, #4]
   11c70:	cmp	r4, #0
   11c74:	beq	11c8c <error@@Base+0xfe8>
   11c78:	ldr	r1, [r4, #8]
   11c7c:	mov	r0, r5
   11c80:	bl	10710 <strcmp@plt>
   11c84:	cmp	r0, #0
   11c88:	bne	11c6c <error@@Base+0xfc8>
   11c8c:	mov	r0, r4
   11c90:	pop	{r4, r5, r6, pc}
   11c94:	subhi	r4, sl, #1552	; 0x610
   11c98:	ldr	ip, [r1, #8]
   11c9c:	push	{r4, lr}
   11ca0:	ldrb	r3, [ip]
   11ca4:	cmp	r3, #0
   11ca8:	beq	11ce4 <error@@Base+0x1040>
   11cac:	mov	r2, #0
   11cb0:	add	r2, r2, r3
   11cb4:	ldrb	r3, [ip, #1]!
   11cb8:	cmp	r3, #0
   11cbc:	bne	11cb0 <error@@Base+0x100c>
   11cc0:	ldr	ip, [pc, #80]	; 11d18 <error@@Base+0x1074>
   11cc4:	asr	r3, r2, #31
   11cc8:	smull	lr, ip, ip, r2
   11ccc:	add	ip, ip, r2
   11cd0:	rsb	r3, r3, ip, asr #8
   11cd4:	rsb	ip, r3, r3, lsl #6
   11cd8:	rsb	r3, r3, ip, lsl #3
   11cdc:	sub	r3, r2, r3
   11ce0:	lsl	r3, r3, #4
   11ce4:	add	r4, r0, #4096	; 0x1000
   11ce8:	add	r0, r0, r3
   11cec:	bl	11e88 <error@@Base+0x11e4>
   11cf0:	ldr	r0, [r4, #3952]	; 0xf70
   11cf4:	cmp	r0, #0
   11cf8:	beq	11d08 <error@@Base+0x1064>
   11cfc:	bl	10734 <free@plt>
   11d00:	mov	r3, #0
   11d04:	str	r3, [r4, #3952]	; 0xf70
   11d08:	ldr	r3, [r4, #3956]	; 0xf74
   11d0c:	add	r3, r3, #1
   11d10:	str	r3, [r4, #3956]	; 0xf74
   11d14:	pop	{r4, pc}
   11d18:	subhi	r4, sl, #1552	; 0x610
   11d1c:	ldr	ip, [r1, #8]
   11d20:	push	{r4, lr}
   11d24:	ldrb	r3, [ip]
   11d28:	cmp	r3, #0
   11d2c:	beq	11d68 <error@@Base+0x10c4>
   11d30:	mov	r2, #0
   11d34:	add	r2, r2, r3
   11d38:	ldrb	r3, [ip, #1]!
   11d3c:	cmp	r3, #0
   11d40:	bne	11d34 <error@@Base+0x1090>
   11d44:	ldr	ip, [pc, #80]	; 11d9c <error@@Base+0x10f8>
   11d48:	asr	r3, r2, #31
   11d4c:	smull	lr, ip, ip, r2
   11d50:	add	ip, ip, r2
   11d54:	rsb	r3, r3, ip, asr #8
   11d58:	rsb	ip, r3, r3, lsl #6
   11d5c:	rsb	r3, r3, ip, lsl #3
   11d60:	sub	r3, r2, r3
   11d64:	lsl	r3, r3, #4
   11d68:	add	r4, r0, #4096	; 0x1000
   11d6c:	add	r0, r0, r3
   11d70:	bl	11fb8 <error@@Base+0x1314>
   11d74:	ldr	r0, [r4, #3952]	; 0xf70
   11d78:	cmp	r0, #0
   11d7c:	beq	11d8c <error@@Base+0x10e8>
   11d80:	bl	10734 <free@plt>
   11d84:	mov	r3, #0
   11d88:	str	r3, [r4, #3952]	; 0xf70
   11d8c:	ldr	r3, [r4, #3956]	; 0xf74
   11d90:	sub	r3, r3, #1
   11d94:	str	r3, [r4, #3956]	; 0xf74
   11d98:	pop	{r4, pc}
   11d9c:	subhi	r4, sl, #1552	; 0x610
   11da0:	push	{r4, r5, r6, lr}
   11da4:	add	r6, r0, #4096	; 0x1000
   11da8:	ldr	r4, [r6, #3952]	; 0xf70
   11dac:	cmp	r4, #0
   11db0:	popne	{r4, r5, r6, pc}
   11db4:	ldr	r3, [r6, #3956]	; 0xf74
   11db8:	cmp	r3, #0
   11dbc:	popeq	{r4, r5, r6, pc}
   11dc0:	mov	r5, r0
   11dc4:	mov	r1, #4
   11dc8:	mov	r0, r3
   11dcc:	bl	10cfc <error@@Base+0x58>
   11dd0:	ldr	lr, [pc, #60]	; 11e14 <error@@Base+0x1170>
   11dd4:	mov	r2, r4
   11dd8:	mov	ip, r4
   11ddc:	str	r0, [r6, #3952]	; 0xf70
   11de0:	ldr	r3, [r5, ip, lsl #4]
   11de4:	cmp	r3, #0
   11de8:	beq	11e04 <error@@Base+0x1160>
   11dec:	add	r1, r0, r2, lsl #2
   11df0:	str	r3, [r1], #4
   11df4:	ldr	r3, [r3, #4]
   11df8:	add	r2, r2, #1
   11dfc:	cmp	r3, #0
   11e00:	bne	11df0 <error@@Base+0x114c>
   11e04:	add	ip, ip, #1
   11e08:	cmp	ip, lr
   11e0c:	bne	11de0 <error@@Base+0x113c>
   11e10:	pop	{r4, r5, r6, pc}
   11e14:	strdeq	r0, [r0], -r7
   11e18:	push	{r4, r5, r6, r7, r8, lr}
   11e1c:	add	r5, r0, #8000	; 0x1f40
   11e20:	mov	r7, r0
   11e24:	mov	r6, r1
   11e28:	add	r5, r5, #48	; 0x30
   11e2c:	mov	r4, r0
   11e30:	mov	r0, r4
   11e34:	mov	r1, r6
   11e38:	add	r4, r4, #16
   11e3c:	bl	12068 <error@@Base+0x13c4>
   11e40:	cmp	r4, r5
   11e44:	bne	11e30 <error@@Base+0x118c>
   11e48:	add	r7, r7, #4096	; 0x1000
   11e4c:	ldr	r0, [r7, #3952]	; 0xf70
   11e50:	cmp	r0, #0
   11e54:	beq	11e64 <error@@Base+0x11c0>
   11e58:	bl	10734 <free@plt>
   11e5c:	mov	r3, #0
   11e60:	str	r3, [r7, #3952]	; 0xf70
   11e64:	mov	r3, #0
   11e68:	str	r3, [r7, #3956]	; 0xf74
   11e6c:	pop	{r4, r5, r6, r7, r8, pc}
   11e70:	mov	r3, #0
   11e74:	str	r3, [r0, #4]
   11e78:	str	r3, [r0]
   11e7c:	str	r3, [r0, #8]
   11e80:	str	r3, [r0, #12]
   11e84:	bx	lr
   11e88:	ldr	r3, [r0]
   11e8c:	mov	r2, #0
   11e90:	cmp	r3, r2
   11e94:	push	{r4, lr}
   11e98:	mov	r4, r0
   11e9c:	stm	r1, {r2, r3}
   11ea0:	str	r1, [r0]
   11ea4:	streq	r1, [r0, #4]
   11ea8:	ldr	r0, [r0, #8]
   11eac:	strne	r1, [r3]
   11eb0:	cmp	r0, #0
   11eb4:	beq	11ec4 <error@@Base+0x1220>
   11eb8:	bl	10734 <free@plt>
   11ebc:	mov	r3, #0
   11ec0:	str	r3, [r4, #8]
   11ec4:	ldr	r3, [r4, #12]
   11ec8:	add	r3, r3, #1
   11ecc:	str	r3, [r4, #12]
   11ed0:	pop	{r4, pc}
   11ed4:	ldr	r3, [r0, #4]
   11ed8:	mov	r2, #0
   11edc:	cmp	r3, r2
   11ee0:	push	{r4, lr}
   11ee4:	mov	r4, r0
   11ee8:	str	r3, [r1]
   11eec:	str	r2, [r1, #4]
   11ef0:	streq	r1, [r0]
   11ef4:	ldr	r0, [r0, #8]
   11ef8:	strne	r1, [r3, #4]
   11efc:	cmp	r0, #0
   11f00:	str	r1, [r4, #4]
   11f04:	beq	11f14 <error@@Base+0x1270>
   11f08:	bl	10734 <free@plt>
   11f0c:	mov	r3, #0
   11f10:	str	r3, [r4, #8]
   11f14:	ldr	r3, [r4, #12]
   11f18:	add	r3, r3, #1
   11f1c:	str	r3, [r4, #12]
   11f20:	pop	{r4, pc}
   11f24:	ldr	r3, [r2]
   11f28:	push	{r4, lr}
   11f2c:	cmp	r3, #0
   11f30:	str	r3, [r1]
   11f34:	str	r2, [r1, #4]
   11f38:	mov	r4, r0
   11f3c:	streq	r1, [r0]
   11f40:	ldr	r0, [r0, #8]
   11f44:	strne	r1, [r3, #4]
   11f48:	cmp	r0, #0
   11f4c:	str	r1, [r2]
   11f50:	beq	11f60 <error@@Base+0x12bc>
   11f54:	bl	10734 <free@plt>
   11f58:	mov	r3, #0
   11f5c:	str	r3, [r4, #8]
   11f60:	ldr	r3, [r4, #12]
   11f64:	add	r3, r3, #1
   11f68:	str	r3, [r4, #12]
   11f6c:	pop	{r4, pc}
   11f70:	ldr	r3, [r1, #4]
   11f74:	push	{r4, lr}
   11f78:	cmp	r3, #0
   11f7c:	stm	r2, {r1, r3}
   11f80:	mov	r4, r0
   11f84:	str	r2, [r1, #4]
   11f88:	streq	r2, [r0, #4]
   11f8c:	ldr	r0, [r0, #8]
   11f90:	strne	r2, [r3]
   11f94:	cmp	r0, #0
   11f98:	beq	11fa8 <error@@Base+0x1304>
   11f9c:	bl	10734 <free@plt>
   11fa0:	mov	r3, #0
   11fa4:	str	r3, [r4, #8]
   11fa8:	ldr	r3, [r4, #12]
   11fac:	add	r3, r3, #1
   11fb0:	str	r3, [r4, #12]
   11fb4:	pop	{r4, pc}
   11fb8:	ldr	r3, [r1]
   11fbc:	ldr	r2, [r1, #4]
   11fc0:	cmp	r3, #0
   11fc4:	push	{r4, r5, r6, lr}
   11fc8:	mov	r4, r0
   11fcc:	strne	r2, [r3, #4]
   11fd0:	ldrne	r2, [r1, #4]
   11fd4:	streq	r2, [r0]
   11fd8:	cmp	r2, #0
   11fdc:	streq	r3, [r0, #4]
   11fe0:	ldr	r0, [r0, #8]
   11fe4:	mov	r5, #0
   11fe8:	strne	r3, [r2]
   11fec:	cmp	r0, r5
   11ff0:	str	r5, [r1, #4]
   11ff4:	str	r5, [r1]
   11ff8:	beq	12004 <error@@Base+0x1360>
   11ffc:	bl	10734 <free@plt>
   12000:	str	r5, [r4, #8]
   12004:	ldr	r3, [r4, #12]
   12008:	sub	r3, r3, #1
   1200c:	str	r3, [r4, #12]
   12010:	pop	{r4, r5, r6, pc}
   12014:	ldr	r3, [r0, #8]
   12018:	cmp	r3, #0
   1201c:	bxne	lr
   12020:	ldr	r3, [r0, #12]
   12024:	cmp	r3, #0
   12028:	bxeq	lr
   1202c:	push	{r4, lr}
   12030:	mov	r1, #4
   12034:	mov	r4, r0
   12038:	mov	r0, r3
   1203c:	bl	10cfc <error@@Base+0x58>
   12040:	ldr	r3, [r4]
   12044:	cmp	r3, #0
   12048:	str	r0, [r4, #8]
   1204c:	popeq	{r4, pc}
   12050:	sub	r0, r0, #4
   12054:	str	r3, [r0, #4]!
   12058:	ldr	r3, [r3, #4]
   1205c:	cmp	r3, #0
   12060:	bne	12054 <error@@Base+0x13b0>
   12064:	pop	{r4, pc}
   12068:	push	{r4, r5, r6, lr}
   1206c:	ldr	r4, [r0]
   12070:	cmp	r4, #0
   12074:	popeq	{r4, r5, r6, pc}
   12078:	mov	r5, r0
   1207c:	mov	r6, r1
   12080:	mov	r1, r4
   12084:	mov	r0, r5
   12088:	bl	11fb8 <error@@Base+0x1314>
   1208c:	mov	r0, r4
   12090:	blx	r6
   12094:	ldr	r4, [r5]
   12098:	cmp	r4, #0
   1209c:	bne	12080 <error@@Base+0x13dc>
   120a0:	pop	{r4, r5, r6, pc}
   120a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   120a8:	mov	r7, r0
   120ac:	ldr	r6, [pc, #72]	; 120fc <error@@Base+0x1458>
   120b0:	ldr	r5, [pc, #72]	; 12100 <error@@Base+0x145c>
   120b4:	add	r6, pc, r6
   120b8:	add	r5, pc, r5
   120bc:	sub	r6, r6, r5
   120c0:	mov	r8, r1
   120c4:	mov	r9, r2
   120c8:	bl	106e4 <calloc@plt-0x20>
   120cc:	asrs	r6, r6, #2
   120d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   120d4:	mov	r4, #0
   120d8:	add	r4, r4, #1
   120dc:	ldr	r3, [r5], #4
   120e0:	mov	r2, r9
   120e4:	mov	r1, r8
   120e8:	mov	r0, r7
   120ec:	blx	r3
   120f0:	cmp	r6, r4
   120f4:	bne	120d8 <error@@Base+0x1434>
   120f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120fc:	andeq	r0, r1, r4, asr #28
   12100:	andeq	r0, r1, ip, lsr lr
   12104:	bx	lr

Disassembly of section .fini:

00012108 <.fini>:
   12108:	push	{r3, lr}
   1210c:	pop	{r3, pc}
