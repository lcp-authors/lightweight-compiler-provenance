
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010c34 <.init>:
   10c34:	push	{r3, lr}
   10c38:	bl	1129c <rb_base64_encode@plt+0x3d8>
   10c3c:	pop	{r3, pc}

Disassembly of section .plt:

00010c40 <open@plt-0x14>:
   10c40:	push	{lr}		; (str lr, [sp, #-4]!)
   10c44:	ldr	lr, [pc, #4]	; 10c50 <open@plt-0x4>
   10c48:	add	lr, pc, lr
   10c4c:	ldr	pc, [lr, #8]!
   10c50:			; <UNDEFINED> instruction: 0x000143b0

00010c54 <open@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #20, 20	; 0x14000
   10c5c:	ldr	pc, [ip, #944]!	; 0x3b0

00010c60 <sigemptyset@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #20, 20	; 0x14000
   10c68:	ldr	pc, [ip, #936]!	; 0x3a8

00010c6c <strerror@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #20, 20	; 0x14000
   10c74:	ldr	pc, [ip, #928]!	; 0x3a0

00010c78 <rb_get_type@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #20, 20	; 0x14000
   10c80:	ldr	pc, [ip, #920]!	; 0x398

00010c84 <abort@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #20, 20	; 0x14000
   10c8c:	ldr	pc, [ip, #912]!	; 0x390

00010c90 <rb_event_addish@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #20, 20	; 0x14000
   10c98:	ldr	pc, [ip, #904]!	; 0x388

00010c9c <rb_ignore_errno@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #20, 20	; 0x14000
   10ca4:	ldr	pc, [ip, #896]!	; 0x380

00010ca8 <__libc_start_main@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #20, 20	; 0x14000
   10cb0:	ldr	pc, [ip, #888]!	; 0x378

00010cb4 <rb_setselect@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #20, 20	; 0x14000
   10cbc:	ldr	pc, [ip, #880]!	; 0x370

00010cc0 <__gmon_start__@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #20, 20	; 0x14000
   10cc8:	ldr	pc, [ip, #872]!	; 0x368

00010ccc <rb_send_fd_buf@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #20, 20	; 0x14000
   10cd4:	ldr	pc, [ip, #864]!	; 0x360

00010cd8 <vsnprintf@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #20, 20	; 0x14000
   10ce0:	ldr	pc, [ip, #856]!	; 0x358

00010ce4 <getenv@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #20, 20	; 0x14000
   10cec:	ldr	pc, [ip, #848]!	; 0x350

00010cf0 <calloc@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #20, 20	; 0x14000
   10cf8:	ldr	pc, [ip, #840]!	; 0x348

00010cfc <rb_set_nb@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #20, 20	; 0x14000
   10d04:	ldr	pc, [ip, #832]!	; 0x340

00010d08 <memset@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #20, 20	; 0x14000
   10d10:	ldr	pc, [ip, #824]!	; 0x338

00010d14 <__assert_fail@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #20, 20	; 0x14000
   10d1c:	ldr	pc, [ip, #816]!	; 0x330

00010d20 <rb_linebuf_parse@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #20, 20	; 0x14000
   10d28:	ldr	pc, [ip, #808]!	; 0x328

00010d2c <rb_strlcpy@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #20, 20	; 0x14000
   10d34:	ldr	pc, [ip, #800]!	; 0x320

00010d38 <rb_init_rawbuffers@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #20, 20	; 0x14000
   10d40:	ldr	pc, [ip, #792]!	; 0x318

00010d44 <free@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #20, 20	; 0x14000
   10d4c:	ldr	pc, [ip, #784]!	; 0x310

00010d50 <rb_lib_loop@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #20, 20	; 0x14000
   10d58:	ldr	pc, [ip, #776]!	; 0x308

00010d5c <rb_read@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #20, 20	; 0x14000
   10d64:	ldr	pc, [ip, #768]!	; 0x300

00010d68 <rb_set_type@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #20, 20	; 0x14000
   10d70:	ldr	pc, [ip, #760]!	; 0x2f8

00010d74 <rb_linebuf_get@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #20, 20	; 0x14000
   10d7c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d80 <rb_linebuf_flush@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #20, 20	; 0x14000
   10d88:	ldr	pc, [ip, #744]!	; 0x2e8

00010d8c <strlen@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #20, 20	; 0x14000
   10d94:	ldr	pc, [ip, #736]!	; 0x2e0

00010d98 <memcpy@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #20, 20	; 0x14000
   10da0:	ldr	pc, [ip, #728]!	; 0x2d8

00010da4 <rb_linebuf_donebuf@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #20, 20	; 0x14000
   10dac:	ldr	pc, [ip, #720]!	; 0x2d0

00010db0 <rb_strcasestr@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #20, 20	; 0x14000
   10db8:	ldr	pc, [ip, #712]!	; 0x2c8

00010dbc <rb_close@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #20, 20	; 0x14000
   10dc4:	ldr	pc, [ip, #704]!	; 0x2c0

00010dc8 <strtol@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #20, 20	; 0x14000
   10dd0:	ldr	pc, [ip, #696]!	; 0x2b8

00010dd4 <sigaddset@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #20, 20	; 0x14000
   10ddc:	ldr	pc, [ip, #688]!	; 0x2b0

00010de0 <rb_rawbuf_length@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #20, 20	; 0x14000
   10de8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dec <rb_free_rawbuffer@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #20, 20	; 0x14000
   10df4:	ldr	pc, [ip, #672]!	; 0x2a0

00010df8 <close@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #20, 20	; 0x14000
   10e00:	ldr	pc, [ip, #664]!	; 0x298

00010e04 <fwrite@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #20, 20	; 0x14000
   10e0c:	ldr	pc, [ip, #656]!	; 0x290

00010e10 <rb_outofmemory@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #20, 20	; 0x14000
   10e18:	ldr	pc, [ip, #648]!	; 0x288

00010e1c <rb_rawbuf_get@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #20, 20	; 0x14000
   10e24:	ldr	pc, [ip, #640]!	; 0x280

00010e28 <sigaction@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #20, 20	; 0x14000
   10e30:	ldr	pc, [ip, #632]!	; 0x278

00010e34 <rb_lib_init@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #20, 20	; 0x14000
   10e3c:	ldr	pc, [ip, #624]!	; 0x270

00010e40 <rb_new_rawbuffer@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #20, 20	; 0x14000
   10e48:	ldr	pc, [ip, #616]!	; 0x268

00010e4c <rb_open@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #20, 20	; 0x14000
   10e54:	ldr	pc, [ip, #608]!	; 0x260

00010e58 <rb_recv_fd_buf@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #20, 20	; 0x14000
   10e60:	ldr	pc, [ip, #600]!	; 0x258

00010e64 <dup2@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #20, 20	; 0x14000
   10e6c:	ldr	pc, [ip, #592]!	; 0x250

00010e70 <rb_linebuf_newbuf@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #20, 20	; 0x14000
   10e78:	ldr	pc, [ip, #584]!	; 0x248

00010e7c <rb_linebuf_init@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #20, 20	; 0x14000
   10e84:	ldr	pc, [ip, #576]!	; 0x240

00010e88 <getrlimit@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #20, 20	; 0x14000
   10e90:	ldr	pc, [ip, #568]!	; 0x238

00010e94 <rb_rawbuf_append@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #20, 20	; 0x14000
   10e9c:	ldr	pc, [ip, #560]!	; 0x230

00010ea0 <rb_rawbuf_flush@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #20, 20	; 0x14000
   10ea8:	ldr	pc, [ip, #552]!	; 0x228

00010eac <exit@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #20, 20	; 0x14000
   10eb4:	ldr	pc, [ip, #544]!	; 0x220

00010eb8 <__errno_location@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #20, 20	; 0x14000
   10ec0:	ldr	pc, [ip, #536]!	; 0x218

00010ec4 <rb_base64_encode@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #20, 20	; 0x14000
   10ecc:	ldr	pc, [ip, #528]!	; 0x210

Disassembly of section .text:

00010ed0 <.text>:
   10ed0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10ed4:	mov	r0, #7
   10ed8:	strd	r6, [sp, #8]
   10edc:	strd	r8, [sp, #16]
   10ee0:	strd	sl, [sp, #24]
   10ee4:	str	lr, [sp, #32]
   10ee8:	sub	sp, sp, #164	; 0xa4
   10eec:	add	r6, sp, #20
   10ef0:	ldr	r8, [pc, #812]	; 11224 <rb_base64_encode@plt+0x360>
   10ef4:	mov	r1, r6
   10ef8:	bl	10e88 <getrlimit@plt>
   10efc:	cmp	r0, #0
   10f00:	ldr	r0, [pc, #800]	; 11228 <rb_base64_encode@plt+0x364>
   10f04:	movwne	r5, #65535	; 0xffff
   10f08:	ldreq	r5, [sp, #20]
   10f0c:	add	r8, pc, r8
   10f10:	add	r0, pc, r0
   10f14:	bl	10ce4 <getenv@plt>
   10f18:	mov	sl, r0
   10f1c:	ldr	r0, [pc, #776]	; 1122c <rb_base64_encode@plt+0x368>
   10f20:	add	r0, pc, r0
   10f24:	bl	10ce4 <getenv@plt>
   10f28:	mov	r7, r0
   10f2c:	ldr	r0, [pc, #764]	; 11230 <rb_base64_encode@plt+0x36c>
   10f30:	clz	r4, r7
   10f34:	lsr	r4, r4, #5
   10f38:	add	r0, pc, r0
   10f3c:	bl	10ce4 <getenv@plt>
   10f40:	cmp	sl, #0
   10f44:	mov	r9, r0
   10f48:	moveq	r4, #1
   10f4c:	cmp	r0, #0
   10f50:	moveq	r4, #1
   10f54:	cmp	r4, #0
   10f58:	beq	10f9c <rb_base64_encode@plt+0xd8>
   10f5c:	ldr	r3, [pc, #720]	; 11234 <rb_base64_encode@plt+0x370>
   10f60:	mov	r2, #52	; 0x34
   10f64:	mov	r1, #1
   10f68:	ldr	r0, [pc, #712]	; 11238 <rb_base64_encode@plt+0x374>
   10f6c:	ldr	r4, [r8, r3]
   10f70:	add	r0, pc, r0
   10f74:	ldr	r3, [r4]
   10f78:	bl	10e04 <fwrite@plt>
   10f7c:	ldr	r0, [pc, #696]	; 1123c <rb_base64_encode@plt+0x378>
   10f80:	mov	r2, #49	; 0x31
   10f84:	mov	r1, #1
   10f88:	ldr	r3, [r4]
   10f8c:	add	r0, pc, r0
   10f90:	bl	10e04 <fwrite@plt>
   10f94:	mov	r0, #1
   10f98:	bl	10eac <exit@plt>
   10f9c:	mov	r2, #10
   10fa0:	mov	r1, r4
   10fa4:	mov	r0, sl
   10fa8:	bl	10dc8 <strtol@plt>
   10fac:	mov	r8, r0
   10fb0:	mov	r2, #10
   10fb4:	mov	r0, r7
   10fb8:	mov	r1, r4
   10fbc:	bl	10dc8 <strtol@plt>
   10fc0:	mov	r7, r0
   10fc4:	mov	r2, #10
   10fc8:	mov	r0, r9
   10fcc:	mov	r1, r4
   10fd0:	bl	10dc8 <strtol@plt>
   10fd4:	ldr	r3, [pc, #612]	; 11240 <rb_base64_encode@plt+0x37c>
   10fd8:	cmp	r5, #0
   10fdc:	add	r3, pc, r3
   10fe0:	str	r0, [r3, #12]
   10fe4:	ble	1102c <rb_base64_encode@plt+0x168>
   10fe8:	add	r4, r4, #1
   10fec:	cmp	r4, r5
   10ff0:	beq	1102c <rb_base64_encode@plt+0x168>
   10ff4:	cmp	r4, r8
   10ff8:	cmpne	r4, r7
   10ffc:	movne	r3, #1
   11000:	moveq	r3, #0
   11004:	cmp	r4, #2
   11008:	movle	r3, #0
   1100c:	andgt	r3, r3, #1
   11010:	cmp	r3, #0
   11014:	beq	10fe8 <rb_base64_encode@plt+0x124>
   11018:	mov	r0, r4
   1101c:	add	r4, r4, #1
   11020:	bl	10df8 <close@plt>
   11024:	cmp	r4, r5
   11028:	bne	10ff4 <rb_base64_encode@plt+0x130>
   1102c:	ldr	r0, [pc, #528]	; 11244 <rb_base64_encode@plt+0x380>
   11030:	mov	r1, #2
   11034:	add	r0, pc, r0
   11038:	bl	10c54 <open@plt>
   1103c:	subs	r4, r0, #0
   11040:	blt	11070 <rb_base64_encode@plt+0x1ac>
   11044:	cmp	r8, #0
   11048:	cmpne	r7, #0
   1104c:	bne	11214 <rb_base64_encode@plt+0x350>
   11050:	cmp	r8, #1
   11054:	cmpne	r7, #1
   11058:	bne	11204 <rb_base64_encode@plt+0x340>
   1105c:	cmp	r8, #2
   11060:	cmpne	r7, #2
   11064:	bne	111f4 <rb_base64_encode@plt+0x330>
   11068:	cmp	r4, #2
   1106c:	bgt	111e8 <rb_base64_encode@plt+0x324>
   11070:	mov	r4, #0
   11074:	add	r9, sp, #24
   11078:	mov	fp, #1
   1107c:	mov	r0, r9
   11080:	mov	sl, #4096	; 0x1000
   11084:	str	fp, [sp, #20]
   11088:	str	r4, [sp, #152]	; 0x98
   1108c:	bl	10c60 <sigemptyset@plt>
   11090:	mov	r1, #13
   11094:	mov	r0, r9
   11098:	bl	10dd4 <sigaddset@plt>
   1109c:	mov	r1, #14
   110a0:	mov	r0, r9
   110a4:	bl	10dd4 <sigaddset@plt>
   110a8:	mov	r1, #5
   110ac:	mov	r0, r9
   110b0:	bl	10dd4 <sigaddset@plt>
   110b4:	mov	r1, #28
   110b8:	mov	r0, r9
   110bc:	bl	10dd4 <sigaddset@plt>
   110c0:	mov	r1, r6
   110c4:	mov	r2, r4
   110c8:	mov	r0, #28
   110cc:	bl	10e28 <sigaction@plt>
   110d0:	mov	r1, r6
   110d4:	mov	r2, r4
   110d8:	mov	r0, #13
   110dc:	bl	10e28 <sigaction@plt>
   110e0:	mov	r1, r6
   110e4:	mov	r2, r4
   110e8:	mov	r0, #5
   110ec:	bl	10e28 <sigaction@plt>
   110f0:	ldr	r3, [pc, #336]	; 11248 <rb_base64_encode@plt+0x384>
   110f4:	mov	r1, r6
   110f8:	mov	r2, r4
   110fc:	mov	r0, #14
   11100:	add	r3, pc, r3
   11104:	str	r3, [sp, #20]
   11108:	bl	10e28 <sigaction@plt>
   1110c:	mov	ip, #1024	; 0x400
   11110:	mov	r3, r4
   11114:	mov	r2, r4
   11118:	mov	r1, r4
   1111c:	mov	r0, r4
   11120:	stm	sp, {r5, ip}
   11124:	str	sl, [sp, #8]
   11128:	bl	10e34 <rb_lib_init@plt>
   1112c:	mov	r0, sl
   11130:	bl	10e7c <rb_linebuf_init@plt>
   11134:	mov	r0, sl
   11138:	bl	10d38 <rb_init_rawbuffers@plt>
   1113c:	mov	r0, fp
   11140:	mov	r1, #48	; 0x30
   11144:	bl	10cf0 <calloc@plt>
   11148:	subs	r6, r0, #0
   1114c:	beq	11220 <rb_base64_encode@plt+0x35c>
   11150:	ldr	r5, [pc, #244]	; 1124c <rb_base64_encode@plt+0x388>
   11154:	mov	r1, #4
   11158:	mov	r0, r8
   1115c:	ldr	r2, [pc, #236]	; 11250 <rb_base64_encode@plt+0x38c>
   11160:	add	r5, pc, r5
   11164:	add	r2, pc, r2
   11168:	str	r6, [r5, #16]
   1116c:	bl	10e4c <rb_open@plt>
   11170:	ldr	r2, [pc, #220]	; 11254 <rb_base64_encode@plt+0x390>
   11174:	mov	r1, #8
   11178:	str	r0, [r6, #16]
   1117c:	mov	r0, r7
   11180:	ldr	r6, [r5, #16]
   11184:	add	r2, pc, r2
   11188:	bl	10e4c <rb_open@plt>
   1118c:	ldr	r3, [r5, #16]
   11190:	str	r0, [r6, #20]
   11194:	ldr	r0, [r3, #16]
   11198:	bl	10cfc <rb_set_nb@plt>
   1119c:	ldr	r3, [r5, #16]
   111a0:	ldr	r0, [r3, #20]
   111a4:	bl	10cfc <rb_set_nb@plt>
   111a8:	ldr	r1, [pc, #168]	; 11258 <rb_base64_encode@plt+0x394>
   111ac:	mov	r2, r4
   111b0:	mov	r3, #10
   111b4:	ldr	r0, [pc, #160]	; 1125c <rb_base64_encode@plt+0x398>
   111b8:	add	r1, pc, r1
   111bc:	add	r0, pc, r0
   111c0:	bl	10c90 <rb_event_addish@plt>
   111c4:	ldr	r3, [r5, #16]
   111c8:	mov	r1, r4
   111cc:	ldr	r0, [r3, #20]
   111d0:	bl	113e4 <rb_base64_encode@plt+0x520>
   111d4:	ldr	r1, [r5, #16]
   111d8:	ldr	r0, [r1, #16]
   111dc:	bl	1255c <rb_base64_encode@plt+0x1698>
   111e0:	mov	r0, r4
   111e4:	bl	10d50 <rb_lib_loop@plt>
   111e8:	mov	r0, r4
   111ec:	bl	10df8 <close@plt>
   111f0:	b	11070 <rb_base64_encode@plt+0x1ac>
   111f4:	mov	r1, #2
   111f8:	mov	r0, r4
   111fc:	bl	10e64 <dup2@plt>
   11200:	b	11068 <rb_base64_encode@plt+0x1a4>
   11204:	mov	r1, #1
   11208:	mov	r0, r4
   1120c:	bl	10e64 <dup2@plt>
   11210:	b	1105c <rb_base64_encode@plt+0x198>
   11214:	mov	r1, #0
   11218:	bl	10e64 <dup2@plt>
   1121c:	b	11050 <rb_base64_encode@plt+0x18c>
   11220:	bl	10e10 <rb_outofmemory@plt>
   11224:	andeq	r4, r1, ip, ror #1
   11228:	ldrdeq	r3, [r0], -r0
   1122c:	andeq	r3, r0, r8, asr #7
   11230:			; <UNDEFINED> instruction: 0x000033bc
   11234:	andeq	r0, r0, r4, ror #1
   11238:	muleq	r0, r0, r3
   1123c:	andeq	r3, r0, ip, lsr #7
   11240:	andeq	r4, r1, r0, lsl r1
   11244:	andeq	r3, r0, r8, lsr r3
   11248:	andeq	r0, r0, r8, asr #4
   1124c:	andeq	r3, r1, ip, lsl #31
   11250:	andeq	r3, r0, r4, lsl r2
   11254:	andeq	r3, r0, r8, lsl #4
   11258:	muleq	r0, r4, r1
   1125c:	ldrdeq	r3, [r0], -ip
   11260:	mov	fp, #0
   11264:	mov	lr, #0
   11268:	pop	{r1}		; (ldr r1, [sp], #4)
   1126c:	mov	r2, sp
   11270:	push	{r2}		; (str r2, [sp, #-4]!)
   11274:	push	{r0}		; (str r0, [sp, #-4]!)
   11278:	ldr	ip, [pc, #16]	; 11290 <rb_base64_encode@plt+0x3cc>
   1127c:	push	{ip}		; (str ip, [sp, #-4]!)
   11280:	ldr	r0, [pc, #12]	; 11294 <rb_base64_encode@plt+0x3d0>
   11284:	ldr	r3, [pc, #12]	; 11298 <rb_base64_encode@plt+0x3d4>
   11288:	bl	10ca8 <__libc_start_main@plt>
   1128c:	bl	10c84 <abort@plt>
   11290:	ldrdeq	r4, [r1], -ip
   11294:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11298:	andeq	r4, r1, ip, ror r0
   1129c:	ldr	r3, [pc, #20]	; 112b8 <rb_base64_encode@plt+0x3f4>
   112a0:	ldr	r2, [pc, #20]	; 112bc <rb_base64_encode@plt+0x3f8>
   112a4:	add	r3, pc, r3
   112a8:	ldr	r2, [r3, r2]
   112ac:	cmp	r2, #0
   112b0:	bxeq	lr
   112b4:	b	10cc0 <__gmon_start__@plt>
   112b8:	andeq	r3, r1, r4, asr sp
   112bc:	andeq	r0, r0, r0, ror #1
   112c0:	ldr	r0, [pc, #24]	; 112e0 <rb_base64_encode@plt+0x41c>
   112c4:	ldr	r3, [pc, #24]	; 112e4 <rb_base64_encode@plt+0x420>
   112c8:	cmp	r3, r0
   112cc:	bxeq	lr
   112d0:	ldr	r3, [pc, #16]	; 112e8 <rb_base64_encode@plt+0x424>
   112d4:	cmp	r3, #0
   112d8:	bxeq	lr
   112dc:	bx	r3
   112e0:	strdeq	r5, [r2], -r0
   112e4:	strdeq	r5, [r2], -r0
   112e8:	andeq	r0, r0, r0
   112ec:	ldr	r0, [pc, #36]	; 11318 <rb_base64_encode@plt+0x454>
   112f0:	ldr	r1, [pc, #36]	; 1131c <rb_base64_encode@plt+0x458>
   112f4:	sub	r1, r1, r0
   112f8:	asr	r1, r1, #2
   112fc:	add	r1, r1, r1, lsr #31
   11300:	asrs	r1, r1, #1
   11304:	bxeq	lr
   11308:	ldr	r3, [pc, #16]	; 11320 <rb_base64_encode@plt+0x45c>
   1130c:	cmp	r3, #0
   11310:	bxeq	lr
   11314:	bx	r3
   11318:	strdeq	r5, [r2], -r0
   1131c:	strdeq	r5, [r2], -r0
   11320:	andeq	r0, r0, r0
   11324:	push	{r4, lr}
   11328:	ldr	r4, [pc, #24]	; 11348 <rb_base64_encode@plt+0x484>
   1132c:	ldrb	r3, [r4]
   11330:	cmp	r3, #0
   11334:	popne	{r4, pc}
   11338:	bl	112c0 <rb_base64_encode@plt+0x3fc>
   1133c:	mov	r3, #1
   11340:	strb	r3, [r4]
   11344:	pop	{r4, pc}
   11348:	strdeq	r5, [r2], -r0
   1134c:	b	112ec <rb_base64_encode@plt+0x428>
   11350:	bx	lr
   11354:	ldr	r3, [pc, #128]	; 113dc <rb_base64_encode@plt+0x518>
   11358:	strd	r4, [sp, #-16]!
   1135c:	add	r3, pc, r3
   11360:	ldr	r3, [r3]
   11364:	str	r6, [sp, #8]
   11368:	str	lr, [sp, #12]
   1136c:	cmp	r3, #0
   11370:	beq	113b8 <rb_base64_encode@plt+0x4f4>
   11374:	ldr	r5, [r3, #8]
   11378:	ldr	r4, [r3]
   1137c:	add	r0, r4, #52	; 0x34
   11380:	bl	10da4 <rb_linebuf_donebuf@plt>
   11384:	add	r0, r4, #24
   11388:	bl	10da4 <rb_linebuf_donebuf@plt>
   1138c:	ldr	r0, [r4, #20]
   11390:	bl	10dec <rb_free_rawbuffer@plt>
   11394:	ldr	r0, [r4, #16]
   11398:	bl	10dec <rb_free_rawbuffer@plt>
   1139c:	mov	r0, r4
   113a0:	bl	10d44 <free@plt>
   113a4:	cmp	r5, #0
   113a8:	mov	r3, r5
   113ac:	beq	113b8 <rb_base64_encode@plt+0x4f4>
   113b0:	ldr	r5, [r5, #8]
   113b4:	b	11378 <rb_base64_encode@plt+0x4b4>
   113b8:	ldr	r3, [pc, #32]	; 113e0 <rb_base64_encode@plt+0x51c>
   113bc:	mov	r2, #0
   113c0:	ldrd	r4, [sp]
   113c4:	ldr	r6, [sp, #8]
   113c8:	add	sp, sp, #12
   113cc:	add	r3, pc, r3
   113d0:	str	r2, [r3]
   113d4:	str	r2, [r3, #4]
   113d8:	pop	{pc}		; (ldr pc, [sp], #4)
   113dc:	muleq	r1, r0, sp
   113e0:	andeq	r3, r1, r0, lsr #26
   113e4:	strd	r4, [sp, #-12]!
   113e8:	mov	r4, r0
   113ec:	str	lr, [sp, #8]
   113f0:	sub	sp, sp, #16384	; 0x4000
   113f4:	sub	sp, sp, #4
   113f8:	mov	r5, sp
   113fc:	mov	r2, #16384	; 0x4000
   11400:	mov	r1, r5
   11404:	mov	r0, r4
   11408:	bl	10d5c <rb_read@plt>
   1140c:	cmp	r0, #0
   11410:	bgt	113fc <rb_base64_encode@plt+0x538>
   11414:	beq	1142c <rb_base64_encode@plt+0x568>
   11418:	bl	10eb8 <__errno_location@plt>
   1141c:	ldr	r0, [r0]
   11420:	bl	10c9c <rb_ignore_errno@plt>
   11424:	cmp	r0, #0
   11428:	bne	11434 <rb_base64_encode@plt+0x570>
   1142c:	mov	r0, #0
   11430:	bl	10eac <exit@plt>
   11434:	ldr	r2, [pc, #36]	; 11460 <rb_base64_encode@plt+0x59c>
   11438:	mov	r0, r4
   1143c:	mov	r3, #0
   11440:	mov	r1, #1
   11444:	add	r2, pc, r2
   11448:	bl	10cb4 <rb_setselect@plt>
   1144c:	add	sp, sp, #16384	; 0x4000
   11450:	add	sp, sp, #4
   11454:	ldrd	r4, [sp]
   11458:	add	sp, sp, #8
   1145c:	pop	{pc}		; (ldr pc, [sp], #4)
   11460:			; <UNDEFINED> instruction: 0xffffff98
   11464:	ldr	r3, [pc, #32]	; 1148c <rb_base64_encode@plt+0x5c8>
   11468:	mov	r2, #213	; 0xd5
   1146c:	str	r4, [sp, #-8]!
   11470:	ldr	r1, [pc, #24]	; 11490 <rb_base64_encode@plt+0x5cc>
   11474:	str	lr, [sp, #4]
   11478:	ldr	r0, [pc, #20]	; 11494 <rb_base64_encode@plt+0x5d0>
   1147c:	add	r3, pc, r3
   11480:	add	r1, pc, r1
   11484:	add	r0, pc, r0
   11488:	bl	10d14 <__assert_fail@plt>
   1148c:	andeq	r2, r0, r8, ror #24
   11490:	andeq	r2, r0, r4, lsl #25
   11494:	muleq	r0, ip, ip
   11498:	ldr	r3, [pc, #36]	; 114c4 <rb_base64_encode@plt+0x600>
   1149c:	mov	r2, #236	; 0xec
   114a0:	str	r4, [sp, #-8]!
   114a4:	ldr	r1, [pc, #28]	; 114c8 <rb_base64_encode@plt+0x604>
   114a8:	str	lr, [sp, #4]
   114ac:	ldr	r0, [pc, #24]	; 114cc <rb_base64_encode@plt+0x608>
   114b0:	add	r3, pc, r3
   114b4:	add	r3, r3, #16
   114b8:	add	r1, pc, r1
   114bc:	add	r0, pc, r0
   114c0:	bl	10d14 <__assert_fail@plt>
   114c4:	andeq	r2, r0, r4, lsr ip
   114c8:	andeq	r2, r0, ip, asr #24
   114cc:	andeq	r2, r0, r4, ror ip
   114d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   114d4:	strd	r6, [sp, #8]
   114d8:	ldr	r7, [r1, #36]	; 0x24
   114dc:	strd	r8, [sp, #16]
   114e0:	mov	r8, r1
   114e4:	str	sl, [sp, #24]
   114e8:	str	lr, [sp, #28]
   114ec:	sub	sp, sp, #8
   114f0:	cmp	r7, #0
   114f4:	beq	11568 <rb_base64_encode@plt+0x6a4>
   114f8:	ldr	r9, [pc, #328]	; 11648 <rb_base64_encode@plt+0x784>
   114fc:	mov	sl, #0
   11500:	ldr	r6, [r7, #8]
   11504:	add	r9, pc, r9
   11508:	ldr	r4, [r7]
   1150c:	ldr	ip, [r9, #12]
   11510:	ldr	r0, [r8, #16]
   11514:	add	r5, r4, #20
   11518:	ldr	r3, [r4, #12]
   1151c:	mov	r1, r5
   11520:	ldr	r2, [r4, #36]	; 0x24
   11524:	str	ip, [sp, #4]
   11528:	ldr	ip, [r4, #16]
   1152c:	str	ip, [sp]
   11530:	bl	10ccc <rb_send_fd_buf@plt>
   11534:	cmp	r0, #0
   11538:	bgt	11590 <rb_base64_encode@plt+0x6cc>
   1153c:	beq	1160c <rb_base64_encode@plt+0x748>
   11540:	bl	10eb8 <__errno_location@plt>
   11544:	ldr	r0, [r0]
   11548:	bl	10c9c <rb_ignore_errno@plt>
   1154c:	cmp	r0, #0
   11550:	beq	1160c <rb_base64_encode@plt+0x748>
   11554:	cmp	r6, #0
   11558:	beq	11568 <rb_base64_encode@plt+0x6a4>
   1155c:	mov	r7, r6
   11560:	ldr	r6, [r6, #8]
   11564:	b	11508 <rb_base64_encode@plt+0x644>
   11568:	ldr	r3, [r8, #44]	; 0x2c
   1156c:	cmp	r3, #0
   11570:	bne	11614 <rb_base64_encode@plt+0x750>
   11574:	add	sp, sp, #8
   11578:	ldrd	r4, [sp]
   1157c:	ldrd	r6, [sp, #8]
   11580:	ldrd	r8, [sp, #16]
   11584:	ldr	sl, [sp, #24]
   11588:	add	sp, sp, #28
   1158c:	pop	{pc}		; (ldr pc, [sp], #4)
   11590:	ldr	r3, [r7, #4]
   11594:	ldr	r2, [r7, #8]
   11598:	cmp	r2, #0
   1159c:	strne	r3, [r2, #4]
   115a0:	ldrne	r3, [r7, #4]
   115a4:	streq	r3, [r8, #40]	; 0x28
   115a8:	cmp	r3, #0
   115ac:	strne	r2, [r3, #8]
   115b0:	ldr	r3, [r8, #44]	; 0x2c
   115b4:	streq	r2, [r8, #36]	; 0x24
   115b8:	ldr	r2, [r4, #36]	; 0x24
   115bc:	str	sl, [r7, #4]
   115c0:	str	sl, [r7, #8]
   115c4:	sub	r3, r3, #1
   115c8:	cmp	r2, #0
   115cc:	str	r3, [r8, #44]	; 0x2c
   115d0:	movgt	r7, #0
   115d4:	ble	115f0 <rb_base64_encode@plt+0x72c>
   115d8:	ldr	r0, [r5], #4
   115dc:	add	r7, r7, #1
   115e0:	bl	10dbc <rb_close@plt>
   115e4:	ldr	r3, [r4, #36]	; 0x24
   115e8:	cmp	r3, r7
   115ec:	bgt	115d8 <rb_base64_encode@plt+0x714>
   115f0:	ldr	r0, [r4, #12]
   115f4:	cmp	r0, #0
   115f8:	beq	11600 <rb_base64_encode@plt+0x73c>
   115fc:	bl	10d44 <free@plt>
   11600:	mov	r0, r4
   11604:	bl	10d44 <free@plt>
   11608:	b	11554 <rb_base64_encode@plt+0x690>
   1160c:	mov	r0, #0
   11610:	bl	10eac <exit@plt>
   11614:	ldr	r2, [pc, #48]	; 1164c <rb_base64_encode@plt+0x788>
   11618:	mov	r3, r8
   1161c:	mov	r1, #2
   11620:	ldr	r0, [r8, #16]
   11624:	add	r2, pc, r2
   11628:	add	sp, sp, #8
   1162c:	ldrd	r4, [sp]
   11630:	ldrd	r6, [sp, #8]
   11634:	ldrd	r8, [sp, #16]
   11638:	ldr	sl, [sp, #24]
   1163c:	ldr	lr, [sp, #28]
   11640:	add	sp, sp, #32
   11644:	b	10cb4 <rb_setselect@plt>
   11648:	andeq	r3, r1, r8, ror #23
   1164c:			; <UNDEFINED> instruction: 0xfffffea4
   11650:	strd	r4, [sp, #-12]!
   11654:	subs	r4, r1, #0
   11658:	str	lr, [sp, #8]
   1165c:	sub	sp, sp, #16384	; 0x4000
   11660:	sub	sp, sp, #4
   11664:	beq	116b4 <rb_base64_encode@plt+0x7f0>
   11668:	mov	r5, sp
   1166c:	mov	r2, #16384	; 0x4000
   11670:	mov	r1, r5
   11674:	ldr	r0, [r4, #88]	; 0x58
   11678:	bl	10d5c <rb_read@plt>
   1167c:	cmp	r0, #0
   11680:	beq	116c8 <rb_base64_encode@plt+0x804>
   11684:	bge	1166c <rb_base64_encode@plt+0x7a8>
   11688:	bl	10eb8 <__errno_location@plt>
   1168c:	ldr	r0, [r0]
   11690:	bl	10c9c <rb_ignore_errno@plt>
   11694:	cmp	r0, #0
   11698:	beq	116c8 <rb_base64_encode@plt+0x804>
   1169c:	ldr	r2, [pc, #128]	; 11724 <rb_base64_encode@plt+0x860>
   116a0:	mov	r3, r4
   116a4:	mov	r1, #1
   116a8:	ldr	r0, [r4, #88]	; 0x58
   116ac:	add	r2, pc, r2
   116b0:	bl	10cb4 <rb_setselect@plt>
   116b4:	add	sp, sp, #16384	; 0x4000
   116b8:	add	sp, sp, #4
   116bc:	ldrd	r4, [sp]
   116c0:	add	sp, sp, #8
   116c4:	pop	{pc}		; (ldr pc, [sp], #4)
   116c8:	ldr	r0, [r4, #88]	; 0x58
   116cc:	bl	10dbc <rb_close@plt>
   116d0:	ldr	r2, [pc, #80]	; 11728 <rb_base64_encode@plt+0x864>
   116d4:	mov	r3, #0
   116d8:	str	r4, [r4]
   116dc:	str	r3, [r4, #4]
   116e0:	add	r2, pc, r2
   116e4:	ldr	r3, [r2]
   116e8:	cmp	r3, #0
   116ec:	str	r3, [r4, #8]
   116f0:	strne	r4, [r3, #4]
   116f4:	beq	11714 <rb_base64_encode@plt+0x850>
   116f8:	ldr	r3, [pc, #44]	; 1172c <rb_base64_encode@plt+0x868>
   116fc:	add	r3, pc, r3
   11700:	ldr	r2, [r3, #8]
   11704:	str	r4, [r3]
   11708:	add	r2, r2, #1
   1170c:	str	r2, [r3, #8]
   11710:	b	116b4 <rb_base64_encode@plt+0x7f0>
   11714:	ldr	r3, [r2, #4]
   11718:	cmp	r3, #0
   1171c:	streq	r4, [r2, #4]
   11720:	b	116f8 <rb_base64_encode@plt+0x834>
   11724:			; <UNDEFINED> instruction: 0xffffff9c
   11728:	andeq	r3, r1, ip, lsl #20
   1172c:	strdeq	r3, [r1], -r0
   11730:	push	{r2, r3}
   11734:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11738:	strd	r6, [sp, #8]
   1173c:	str	r8, [sp, #16]
   11740:	str	lr, [sp, #20]
   11744:	sub	sp, sp, #392	; 0x188
   11748:	ldrb	r3, [r0, #128]	; 0x80
   1174c:	tst	r3, #2
   11750:	bne	11914 <rb_base64_encode@plt+0xa50>
   11754:	tst	r3, #8
   11758:	mov	r4, r0
   1175c:	mov	r5, r1
   11760:	bne	11934 <rb_base64_encode@plt+0xa70>
   11764:	ldr	r0, [r4, #16]
   11768:	ldr	r1, [r4, #84]	; 0x54
   1176c:	bl	10ea0 <rb_rawbuf_flush@plt>
   11770:	add	r1, r4, #24
   11774:	ldr	r0, [r4, #88]	; 0x58
   11778:	bl	10d80 <rb_linebuf_flush@plt>
   1177c:	ldr	r0, [r4, #84]	; 0x54
   11780:	bl	10dbc <rb_close@plt>
   11784:	movw	r3, #19923	; 0x4dd3
   11788:	movt	r3, #4194	; 0x1062
   1178c:	ldrb	r2, [r4, #128]	; 0x80
   11790:	mov	ip, #2000	; 0x7d0
   11794:	ldr	r0, [r4, #80]	; 0x50
   11798:	ldr	r1, [r4, #8]
   1179c:	orr	r2, r2, #2
   117a0:	umull	lr, r3, r3, r0
   117a4:	strb	r2, [r4, #128]	; 0x80
   117a8:	cmp	r1, #0
   117ac:	lsr	r3, r3, #7
   117b0:	mls	r3, ip, r3, r0
   117b4:	beq	1197c <rb_base64_encode@plt+0xab8>
   117b8:	ldr	r0, [r4, #4]
   117bc:	lsl	r2, r3, #1
   117c0:	str	r0, [r1, #4]
   117c4:	ldr	r0, [r4, #4]
   117c8:	cmp	r0, #0
   117cc:	strne	r1, [r0, #8]
   117d0:	beq	119a4 <rb_base64_encode@plt+0xae0>
   117d4:	ldr	ip, [pc, #544]	; 119fc <rb_base64_encode@plt+0xb38>
   117d8:	add	r2, r2, r3
   117dc:	eor	r5, r5, #1
   117e0:	mov	r6, #0
   117e4:	ldr	r3, [sp, #416]	; 0x1a0
   117e8:	ldr	r0, [r4, #88]	; 0x58
   117ec:	add	ip, pc, ip
   117f0:	cmp	r3, #0
   117f4:	add	r3, ip, r2, lsl #2
   117f8:	andne	r5, r5, #1
   117fc:	moveq	r5, #1
   11800:	ldr	r2, [r3, #8]
   11804:	cmp	r5, r6
   11808:	str	r6, [r4, #4]
   1180c:	str	r6, [r4, #8]
   11810:	sub	r2, r2, #1
   11814:	str	r2, [r3, #8]
   11818:	bne	1193c <rb_base64_encode@plt+0xa78>
   1181c:	ldr	r2, [pc, #476]	; 11a00 <rb_base64_encode@plt+0xb3c>
   11820:	mov	r3, r4
   11824:	mov	r1, #1
   11828:	add	r6, sp, #8
   1182c:	add	r8, sp, #136	; 0x88
   11830:	add	r2, pc, r2
   11834:	bl	10cb4 <rb_setselect@plt>
   11838:	mov	r3, r5
   1183c:	mov	r2, r5
   11840:	ldr	r0, [r4, #88]	; 0x58
   11844:	mov	r1, #2
   11848:	bl	10cb4 <rb_setselect@plt>
   1184c:	add	r1, sp, #420	; 0x1a4
   11850:	mov	r0, r6
   11854:	ldr	r2, [sp, #416]	; 0x1a0
   11858:	mov	r3, r1
   1185c:	str	r1, [sp, #4]
   11860:	mov	r1, #128	; 0x80
   11864:	bl	10cd8 <vsnprintf@plt>
   11868:	ldr	r3, [r4, #80]	; 0x50
   1186c:	mov	ip, #68	; 0x44
   11870:	mov	r1, r6
   11874:	mov	r2, #251	; 0xfb
   11878:	add	r0, sp, #141	; 0x8d
   1187c:	strb	ip, [sp, #136]	; 0x88
   11880:	str	r3, [sp, #137]	; 0x89
   11884:	bl	10d2c <rb_strlcpy@plt>
   11888:	mov	r0, r6
   1188c:	bl	10d8c <strlen@plt>
   11890:	add	r7, r0, #6
   11894:	mov	r1, #40	; 0x28
   11898:	ldr	r6, [r4, #12]
   1189c:	mov	r0, #1
   118a0:	bl	10cf0 <calloc@plt>
   118a4:	subs	r4, r0, #0
   118a8:	beq	119d8 <rb_base64_encode@plt+0xb14>
   118ac:	mov	r1, r7
   118b0:	mov	r0, #1
   118b4:	bl	10cf0 <calloc@plt>
   118b8:	subs	r3, r0, #0
   118bc:	beq	119d8 <rb_base64_encode@plt+0xb14>
   118c0:	mov	r1, r8
   118c4:	mov	r2, r7
   118c8:	str	r3, [r4, #12]
   118cc:	str	r7, [r4, #16]
   118d0:	bl	10d98 <memcpy@plt>
   118d4:	cmn	r6, #36	; 0x24
   118d8:	str	r5, [r4, #36]	; 0x24
   118dc:	beq	119dc <rb_base64_encode@plt+0xb18>
   118e0:	ldr	r3, [r6, #40]	; 0x28
   118e4:	str	r4, [r4]
   118e8:	cmp	r3, #0
   118ec:	stmib	r4, {r3, r5}
   118f0:	strne	r4, [r3, #8]
   118f4:	beq	119c8 <rb_base64_encode@plt+0xb04>
   118f8:	mov	r1, r6
   118fc:	str	r4, [r6, #40]	; 0x28
   11900:	ldr	r3, [r6, #44]	; 0x2c
   11904:	ldr	r0, [r6, #16]
   11908:	add	r3, r3, #1
   1190c:	str	r3, [r6, #44]	; 0x2c
   11910:	bl	114d0 <rb_base64_encode@plt+0x60c>
   11914:	add	sp, sp, #392	; 0x188
   11918:	ldrd	r4, [sp]
   1191c:	ldrd	r6, [sp, #8]
   11920:	ldr	r8, [sp, #16]
   11924:	ldr	lr, [sp, #20]
   11928:	add	sp, sp, #24
   1192c:	add	sp, sp, #8
   11930:	bx	lr
   11934:	bl	11b80 <rb_base64_encode@plt+0xcbc>
   11938:	b	11764 <rb_base64_encode@plt+0x8a0>
   1193c:	bl	10dbc <rb_close@plt>
   11940:	ldr	r2, [pc, #188]	; 11a04 <rb_base64_encode@plt+0xb40>
   11944:	add	r2, pc, r2
   11948:	ldr	r3, [r2]
   1194c:	stm	r4, {r4, r6}
   11950:	cmp	r3, #0
   11954:	str	r3, [r4, #8]
   11958:	strne	r4, [r3, #4]
   1195c:	beq	119b8 <rb_base64_encode@plt+0xaf4>
   11960:	ldr	r3, [pc, #160]	; 11a08 <rb_base64_encode@plt+0xb44>
   11964:	add	r3, pc, r3
   11968:	ldr	r2, [r3, #8]
   1196c:	str	r4, [r3]
   11970:	add	r2, r2, #1
   11974:	str	r2, [r3, #8]
   11978:	b	11914 <rb_base64_encode@plt+0xa50>
   1197c:	ldr	ip, [pc, #136]	; 11a0c <rb_base64_encode@plt+0xb48>
   11980:	lsl	r2, r3, #1
   11984:	ldr	r0, [r4, #4]
   11988:	add	lr, r2, r3
   1198c:	add	ip, pc, ip
   11990:	add	ip, ip, lr, lsl #2
   11994:	cmp	r0, #0
   11998:	str	r0, [ip, #4]
   1199c:	strne	r1, [r0, #8]
   119a0:	bne	117d4 <rb_base64_encode@plt+0x910>
   119a4:	ldr	r0, [pc, #100]	; 11a10 <rb_base64_encode@plt+0xb4c>
   119a8:	add	ip, r2, r3
   119ac:	add	r0, pc, r0
   119b0:	str	r1, [r0, ip, lsl #2]
   119b4:	b	117d4 <rb_base64_encode@plt+0x910>
   119b8:	ldr	r3, [r2, #4]
   119bc:	cmp	r3, #0
   119c0:	streq	r4, [r2, #4]
   119c4:	b	11960 <rb_base64_encode@plt+0xa9c>
   119c8:	ldr	r3, [r6, #36]	; 0x24
   119cc:	cmp	r3, #0
   119d0:	streq	r4, [r6, #36]	; 0x24
   119d4:	b	118f8 <rb_base64_encode@plt+0xa34>
   119d8:	bl	10e10 <rb_outofmemory@plt>
   119dc:	ldr	r3, [pc, #48]	; 11a14 <rb_base64_encode@plt+0xb50>
   119e0:	mov	r2, #212	; 0xd4
   119e4:	ldr	r1, [pc, #44]	; 11a18 <rb_base64_encode@plt+0xb54>
   119e8:	ldr	r0, [pc, #44]	; 11a1c <rb_base64_encode@plt+0xb58>
   119ec:	add	r3, pc, r3
   119f0:	add	r1, pc, r1
   119f4:	add	r0, pc, r0
   119f8:	bl	10d14 <__assert_fail@plt>
   119fc:	andeq	r3, r1, r4, lsl r9
   11a00:			; <UNDEFINED> instruction: 0xfffffe18
   11a04:	andeq	r3, r1, r8, lsr #15
   11a08:	andeq	r3, r1, r8, lsl #15
   11a0c:	andeq	r3, r1, r4, ror r7
   11a10:	andeq	r3, r1, r4, asr r7
   11a14:	strdeq	r2, [r0], -r8
   11a18:	andeq	r2, r0, r4, lsl r7
   11a1c:	andeq	r2, r0, ip, lsr r7
   11a20:	strd	r4, [sp, #-16]!
   11a24:	mov	r4, r1
   11a28:	str	r6, [sp, #8]
   11a2c:	mov	r6, r0
   11a30:	str	lr, [sp, #12]
   11a34:	b	11a48 <rb_base64_encode@plt+0xb84>
   11a38:	ldrd	r2, [r4, #96]	; 0x60
   11a3c:	adds	r0, r2, r5
   11a40:	adc	r1, r3, r5, asr #31
   11a44:	strd	r0, [r4, #96]	; 0x60
   11a48:	mov	r1, r6
   11a4c:	ldr	r0, [r4, #16]
   11a50:	bl	10ea0 <rb_rawbuf_flush@plt>
   11a54:	subs	r5, r0, #0
   11a58:	bgt	11a38 <rb_base64_encode@plt+0xb74>
   11a5c:	bl	10eb8 <__errno_location@plt>
   11a60:	cmp	r5, #0
   11a64:	mov	r6, r0
   11a68:	bne	11ab8 <rb_base64_encode@plt+0xbf4>
   11a6c:	ldr	r3, [pc, #232]	; 11b5c <rb_base64_encode@plt+0xc98>
   11a70:	mov	r1, #1
   11a74:	mov	r0, r4
   11a78:	ldr	r2, [pc, #224]	; 11b60 <rb_base64_encode@plt+0xc9c>
   11a7c:	add	r3, pc, r3
   11a80:	add	r2, pc, r2
   11a84:	bl	11730 <rb_base64_encode@plt+0x86c>
   11a88:	ldr	r0, [r6]
   11a8c:	bl	10c6c <strerror@plt>
   11a90:	ldr	r2, [pc, #204]	; 11b64 <rb_base64_encode@plt+0xca0>
   11a94:	mov	r3, r0
   11a98:	mov	r1, #1
   11a9c:	mov	r0, r4
   11aa0:	ldrd	r4, [sp]
   11aa4:	ldr	r6, [sp, #8]
   11aa8:	add	r2, pc, r2
   11aac:	ldr	lr, [sp, #12]
   11ab0:	add	sp, sp, #16
   11ab4:	b	11730 <rb_base64_encode@plt+0x86c>
   11ab8:	ldr	r0, [r0]
   11abc:	bl	10c9c <rb_ignore_errno@plt>
   11ac0:	cmp	r0, #0
   11ac4:	beq	11a88 <rb_base64_encode@plt+0xbc4>
   11ac8:	ldr	r0, [r4, #16]
   11acc:	bl	10de0 <rb_rawbuf_length@plt>
   11ad0:	cmp	r0, #0
   11ad4:	ble	11b0c <rb_base64_encode@plt+0xc48>
   11ad8:	ldr	r2, [pc, #136]	; 11b68 <rb_base64_encode@plt+0xca4>
   11adc:	mov	r3, r4
   11ae0:	mov	r1, #2
   11ae4:	ldr	r0, [r4, #84]	; 0x54
   11ae8:	add	r2, pc, r2
   11aec:	bl	10cb4 <rb_setselect@plt>
   11af0:	ldrb	r3, [r4, #128]	; 0x80
   11af4:	tst	r3, #1
   11af8:	bne	11b24 <rb_base64_encode@plt+0xc60>
   11afc:	ldrd	r4, [sp]
   11b00:	ldr	r6, [sp, #8]
   11b04:	add	sp, sp, #12
   11b08:	pop	{pc}		; (ldr pc, [sp], #4)
   11b0c:	mov	r3, #0
   11b10:	mov	r1, #2
   11b14:	ldr	r0, [r4, #84]	; 0x54
   11b18:	mov	r2, r3
   11b1c:	bl	10cb4 <rb_setselect@plt>
   11b20:	b	11af0 <rb_base64_encode@plt+0xc2c>
   11b24:	ldr	r0, [r4, #16]
   11b28:	bl	10de0 <rb_rawbuf_length@plt>
   11b2c:	cmp	r0, #0
   11b30:	bne	11afc <rb_base64_encode@plt+0xc38>
   11b34:	ldrb	r3, [r4, #128]	; 0x80
   11b38:	mov	r1, r4
   11b3c:	ldr	r0, [r4, #88]	; 0x58
   11b40:	bic	r3, r3, #1
   11b44:	strb	r3, [r4, #128]	; 0x80
   11b48:	ldrd	r4, [sp]
   11b4c:	ldr	r6, [sp, #8]
   11b50:	ldr	lr, [sp, #12]
   11b54:	add	sp, sp, #16
   11b58:	b	11d5c <rb_base64_encode@plt+0xe98>
   11b5c:	ldrdeq	r2, [r0], -r4
   11b60:	strdeq	r2, [r0], -r4
   11b64:	muleq	r0, r8, r6
   11b68:	andeq	r0, r0, ip, ror r0
   11b6c:	ldrb	r3, [r1, #128]	; 0x80
   11b70:	tst	r3, #2
   11b74:	bne	11b7c <rb_base64_encode@plt+0xcb8>
   11b78:	b	11a20 <rb_base64_encode@plt+0xb5c>
   11b7c:	bx	lr
   11b80:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11b84:	mov	r5, r0
   11b88:	mov	r2, #16384	; 0x4000
   11b8c:	strd	r6, [sp, #8]
   11b90:	mov	r1, #0
   11b94:	add	r7, r5, #52	; 0x34
   11b98:	strd	r8, [sp, #16]
   11b9c:	mov	r6, #0
   11ba0:	ldr	r8, [pc, #336]	; 11cf8 <rb_base64_encode@plt+0xe34>
   11ba4:	str	sl, [sp, #24]
   11ba8:	ldr	r9, [pc, #332]	; 11cfc <rb_base64_encode@plt+0xe38>
   11bac:	str	lr, [sp, #28]
   11bb0:	sub	sp, sp, #16384	; 0x4000
   11bb4:	sub	sp, sp, #16
   11bb8:	add	r4, sp, #16
   11bbc:	add	r8, pc, r8
   11bc0:	mov	r0, r4
   11bc4:	add	r9, pc, r9
   11bc8:	bl	10d08 <memset@plt>
   11bcc:	mov	r3, #0
   11bd0:	mov	r2, #16384	; 0x4000
   11bd4:	str	r6, [sp]
   11bd8:	mov	r1, r4
   11bdc:	mov	r0, r7
   11be0:	bl	10d74 <rb_linebuf_get@plt>
   11be4:	subs	sl, r0, #0
   11be8:	beq	11cb8 <rb_base64_encode@plt+0xdf4>
   11bec:	ldrb	r0, [r5, #128]	; 0x80
   11bf0:	add	r3, sl, #2
   11bf4:	movw	ip, #32385	; 0x7e81
   11bf8:	rev16	r3, r3
   11bfc:	sub	r1, r4, #4
   11c00:	mov	r2, #4
   11c04:	tst	r0, #2
   11c08:	bne	11bcc <rb_base64_encode@plt+0xd08>
   11c0c:	cmp	sl, #122	; 0x7a
   11c10:	ldr	r0, [r5, #16]
   11c14:	ble	11c60 <rb_base64_encode@plt+0xd9c>
   11c18:	strh	ip, [r4, #-4]
   11c1c:	strh	r3, [r4, #-2]
   11c20:	bl	10e94 <rb_rawbuf_append@plt>
   11c24:	ldrb	r3, [r5, #128]	; 0x80
   11c28:	mov	r2, sl
   11c2c:	mov	r1, r4
   11c30:	tst	r3, #2
   11c34:	bne	11bcc <rb_base64_encode@plt+0xd08>
   11c38:	ldr	r0, [r5, #16]
   11c3c:	bl	10e94 <rb_rawbuf_append@plt>
   11c40:	ldrb	r3, [r5, #128]	; 0x80
   11c44:	mov	r2, #2
   11c48:	mov	r1, r8
   11c4c:	ldr	r0, [r5, #16]
   11c50:	tst	r3, #2
   11c54:	bne	11bcc <rb_base64_encode@plt+0xd08>
   11c58:	bl	10e94 <rb_rawbuf_append@plt>
   11c5c:	b	11bcc <rb_base64_encode@plt+0xd08>
   11c60:	mvn	r1, #126	; 0x7e
   11c64:	add	r3, sl, #2
   11c68:	and	r3, r3, #127	; 0x7f
   11c6c:	mov	r2, #2
   11c70:	strb	r1, [r4, #-4]
   11c74:	sub	r1, r4, #4
   11c78:	strb	r3, [r4, #-3]
   11c7c:	bl	10e94 <rb_rawbuf_append@plt>
   11c80:	ldrb	r3, [r5, #128]	; 0x80
   11c84:	mov	r2, sl
   11c88:	mov	r1, r4
   11c8c:	tst	r3, #2
   11c90:	bne	11bcc <rb_base64_encode@plt+0xd08>
   11c94:	ldr	r0, [r5, #16]
   11c98:	bl	10e94 <rb_rawbuf_append@plt>
   11c9c:	ldrb	r3, [r5, #128]	; 0x80
   11ca0:	mov	r2, #2
   11ca4:	mov	r1, r9
   11ca8:	ldr	r0, [r5, #16]
   11cac:	tst	r3, #2
   11cb0:	beq	11c58 <rb_base64_encode@plt+0xd94>
   11cb4:	b	11bcc <rb_base64_encode@plt+0xd08>
   11cb8:	ldrb	r3, [r5, #128]	; 0x80
   11cbc:	tst	r3, #8
   11cc0:	beq	11cd8 <rb_base64_encode@plt+0xe14>
   11cc4:	tst	r3, #2
   11cc8:	bne	11cd8 <rb_base64_encode@plt+0xe14>
   11ccc:	mov	r1, r5
   11cd0:	ldr	r0, [r5, #84]	; 0x54
   11cd4:	bl	11a20 <rb_base64_encode@plt+0xb5c>
   11cd8:	add	sp, sp, #16384	; 0x4000
   11cdc:	add	sp, sp, #16
   11ce0:	ldrd	r4, [sp]
   11ce4:	ldrd	r6, [sp, #8]
   11ce8:	ldrd	r8, [sp, #16]
   11cec:	ldr	sl, [sp, #24]
   11cf0:	add	sp, sp, #28
   11cf4:	pop	{pc}		; (ldr pc, [sp], #4)
   11cf8:			; <UNDEFINED> instruction: 0x000025bc
   11cfc:			; <UNDEFINED> instruction: 0x000025b4
   11d00:	str	r4, [sp, #-8]!
   11d04:	mov	r1, #1
   11d08:	mov	r4, r0
   11d0c:	str	lr, [sp, #4]
   11d10:	mov	r3, #0
   11d14:	ldrb	ip, [r0, #128]	; 0x80
   11d18:	mov	r2, r3
   11d1c:	ldr	r0, [r0, #88]	; 0x58
   11d20:	orr	ip, ip, r1
   11d24:	strb	ip, [r4, #128]	; 0x80
   11d28:	bl	10cb4 <rb_setselect@plt>
   11d2c:	ldrb	r3, [r4, #128]	; 0x80
   11d30:	tst	r3, #8
   11d34:	beq	11d4c <rb_base64_encode@plt+0xe88>
   11d38:	tst	r3, #2
   11d3c:	bne	11d4c <rb_base64_encode@plt+0xe88>
   11d40:	mov	r1, r4
   11d44:	ldr	r0, [r4, #84]	; 0x54
   11d48:	bl	11a20 <rb_base64_encode@plt+0xb5c>
   11d4c:	ldr	r4, [sp]
   11d50:	add	sp, sp, #4
   11d54:	mov	r0, #1
   11d58:	pop	{pc}		; (ldr pc, [sp], #4)
   11d5c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11d60:	mov	r2, #16384	; 0x4000
   11d64:	mov	r4, r1
   11d68:	strd	r6, [sp, #8]
   11d6c:	mov	r1, #0
   11d70:	strd	r8, [sp, #16]
   11d74:	strd	sl, [sp, #24]
   11d78:	str	lr, [sp, #32]
   11d7c:	sub	sp, sp, #16384	; 0x4000
   11d80:	sub	sp, sp, #4
   11d84:	mov	r8, sp
   11d88:	mov	r0, r8
   11d8c:	bl	10d08 <memset@plt>
   11d90:	cmp	r4, #0
   11d94:	beq	11da4 <rb_base64_encode@plt+0xee0>
   11d98:	ldrb	r3, [r4, #128]	; 0x80
   11d9c:	tst	r3, #2
   11da0:	beq	11dc4 <rb_base64_encode@plt+0xf00>
   11da4:	add	sp, sp, #16384	; 0x4000
   11da8:	add	sp, sp, #4
   11dac:	ldrd	r4, [sp]
   11db0:	ldrd	r6, [sp, #8]
   11db4:	ldrd	r8, [sp, #16]
   11db8:	ldrd	sl, [sp, #24]
   11dbc:	add	sp, sp, #32
   11dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   11dc4:	ldr	r0, [r4, #16]
   11dc8:	bl	10de0 <rb_rawbuf_length@plt>
   11dcc:	cmp	r0, #4096	; 0x1000
   11dd0:	bge	11e98 <rb_base64_encode@plt+0xfd4>
   11dd4:	add	r9, r4, #52	; 0x34
   11dd8:	ldrb	r3, [r4, #128]	; 0x80
   11ddc:	mov	r2, #16384	; 0x4000
   11de0:	mov	r1, r8
   11de4:	ands	r5, r3, #2
   11de8:	bne	11da4 <rb_base64_encode@plt+0xee0>
   11dec:	ldr	r0, [r4, #88]	; 0x58
   11df0:	bl	10d5c <rb_read@plt>
   11df4:	subs	ip, r0, #0
   11df8:	mov	r3, r5
   11dfc:	mov	r1, r8
   11e00:	mov	r0, r9
   11e04:	mov	r2, ip
   11e08:	beq	11eac <rb_base64_encode@plt+0xfe8>
   11e0c:	blt	11e54 <rb_base64_encode@plt+0xf90>
   11e10:	ldrd	r6, [r4, #112]	; 0x70
   11e14:	adds	sl, r6, ip
   11e18:	adc	fp, r7, ip, asr #31
   11e1c:	strd	sl, [r4, #112]	; 0x70
   11e20:	bl	10d20 <rb_linebuf_parse@plt>
   11e24:	ldrb	r3, [r4, #128]	; 0x80
   11e28:	tst	r3, #2
   11e2c:	bne	11da4 <rb_base64_encode@plt+0xee0>
   11e30:	ldr	r0, [r4, #16]
   11e34:	bl	10de0 <rb_rawbuf_length@plt>
   11e38:	cmp	r0, #4096	; 0x1000
   11e3c:	blt	11dd8 <rb_base64_encode@plt+0xf14>
   11e40:	mov	r0, r4
   11e44:	bl	11d00 <rb_base64_encode@plt+0xe3c>
   11e48:	cmp	r0, #0
   11e4c:	beq	11dd8 <rb_base64_encode@plt+0xf14>
   11e50:	b	11da4 <rb_base64_encode@plt+0xee0>
   11e54:	bl	10eb8 <__errno_location@plt>
   11e58:	ldr	r0, [r0]
   11e5c:	bl	10c9c <rb_ignore_errno@plt>
   11e60:	cmp	r0, #0
   11e64:	beq	11eac <rb_base64_encode@plt+0xfe8>
   11e68:	ldr	r2, [pc, #80]	; 11ec0 <rb_base64_encode@plt+0xffc>
   11e6c:	mov	r3, r4
   11e70:	mov	r1, #1
   11e74:	ldr	r0, [r4, #88]	; 0x58
   11e78:	add	r2, pc, r2
   11e7c:	bl	10cb4 <rb_setselect@plt>
   11e80:	ldrb	r3, [r4, #128]	; 0x80
   11e84:	tst	r3, #8
   11e88:	beq	11da4 <rb_base64_encode@plt+0xee0>
   11e8c:	mov	r0, r4
   11e90:	bl	11b80 <rb_base64_encode@plt+0xcbc>
   11e94:	b	11da4 <rb_base64_encode@plt+0xee0>
   11e98:	mov	r0, r4
   11e9c:	bl	11d00 <rb_base64_encode@plt+0xe3c>
   11ea0:	cmp	r0, #0
   11ea4:	bne	11da4 <rb_base64_encode@plt+0xee0>
   11ea8:	b	11dd4 <rb_base64_encode@plt+0xf10>
   11eac:	mov	r2, #0
   11eb0:	mov	r0, r4
   11eb4:	mov	r1, r2
   11eb8:	bl	11730 <rb_base64_encode@plt+0x86c>
   11ebc:	b	11da4 <rb_base64_encode@plt+0xee0>
   11ec0:			; <UNDEFINED> instruction: 0xfffffedc
   11ec4:	ldrb	r3, [r1, #128]	; 0x80
   11ec8:	tst	r3, #2
   11ecc:	bxne	lr
   11ed0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ed4:	mov	r5, r0
   11ed8:	mov	r4, r1
   11edc:	str	r6, [sp, #8]
   11ee0:	add	r6, r1, #24
   11ee4:	strd	r8, [sp, #12]
   11ee8:	str	lr, [sp, #20]
   11eec:	b	11f00 <rb_base64_encode@plt+0x103c>
   11ef0:	ldrd	r2, [r4, #120]	; 0x78
   11ef4:	adds	r8, r2, r0
   11ef8:	adc	r9, r3, r0, asr #31
   11efc:	strd	r8, [r4, #120]	; 0x78
   11f00:	mov	r1, r6
   11f04:	mov	r0, r5
   11f08:	bl	10d80 <rb_linebuf_flush@plt>
   11f0c:	cmp	r0, #0
   11f10:	bgt	11ef0 <rb_base64_encode@plt+0x102c>
   11f14:	beq	11f6c <rb_base64_encode@plt+0x10a8>
   11f18:	bl	10eb8 <__errno_location@plt>
   11f1c:	ldr	r0, [r0]
   11f20:	bl	10c9c <rb_ignore_errno@plt>
   11f24:	cmp	r0, #0
   11f28:	beq	11f6c <rb_base64_encode@plt+0x10a8>
   11f2c:	ldr	r3, [r4, #40]	; 0x28
   11f30:	ldr	r0, [r4, #88]	; 0x58
   11f34:	cmp	r3, #0
   11f38:	movle	r3, #0
   11f3c:	movle	r2, r3
   11f40:	ble	11f50 <rb_base64_encode@plt+0x108c>
   11f44:	ldr	r2, [pc, #68]	; 11f90 <rb_base64_encode@plt+0x10cc>
   11f48:	mov	r3, r4
   11f4c:	add	r2, pc, r2
   11f50:	mov	r1, #2
   11f54:	ldrd	r4, [sp]
   11f58:	ldr	r6, [sp, #8]
   11f5c:	ldrd	r8, [sp, #12]
   11f60:	ldr	lr, [sp, #20]
   11f64:	add	sp, sp, #24
   11f68:	b	10cb4 <rb_setselect@plt>
   11f6c:	mov	r2, #0
   11f70:	mov	r0, r4
   11f74:	ldrd	r4, [sp]
   11f78:	mov	r1, r2
   11f7c:	ldr	r6, [sp, #8]
   11f80:	ldrd	r8, [sp, #12]
   11f84:	ldr	lr, [sp, #20]
   11f88:	add	sp, sp, #24
   11f8c:	b	11730 <rb_base64_encode@plt+0x86c>
   11f90:			; <UNDEFINED> instruction: 0xffffff70
   11f94:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11f98:	mov	r2, #16384	; 0x4000
   11f9c:	mov	r4, r1
   11fa0:	strd	r6, [sp, #8]
   11fa4:	mov	r1, #0
   11fa8:	strd	r8, [sp, #16]
   11fac:	strd	sl, [sp, #24]
   11fb0:	str	lr, [sp, #32]
   11fb4:	sub	sp, sp, #32768	; 0x8000
   11fb8:	sub	sp, sp, #148	; 0x94
   11fbc:	add	r5, sp, #144	; 0x90
   11fc0:	str	r0, [sp, #4]
   11fc4:	mov	r0, r5
   11fc8:	bl	10d08 <memset@plt>
   11fcc:	cmp	r4, #0
   11fd0:	beq	122b0 <rb_base64_encode@plt+0x13ec>
   11fd4:	ldrb	r3, [r4, #128]	; 0x80
   11fd8:	tst	r3, #2
   11fdc:	bne	122b0 <rb_base64_encode@plt+0x13ec>
   11fe0:	ldr	r3, [pc, #1348]	; 1252c <rb_base64_encode@plt+0x1668>
   11fe4:	add	r3, pc, r3
   11fe8:	str	r3, [sp, #8]
   11fec:	ldr	r3, [pc, #1340]	; 12530 <rb_base64_encode@plt+0x166c>
   11ff0:	add	r3, pc, r3
   11ff4:	str	r3, [sp, #20]
   11ff8:	ldr	r3, [pc, #1332]	; 12534 <rb_base64_encode@plt+0x1670>
   11ffc:	add	r3, pc, r3
   12000:	str	r3, [sp, #16]
   12004:	mov	r2, #16384	; 0x4000
   12008:	mov	r1, r5
   1200c:	ldr	r0, [sp, #4]
   12010:	bl	10d5c <rb_read@plt>
   12014:	subs	r8, r0, #0
   12018:	blt	124f0 <rb_base64_encode@plt+0x162c>
   1201c:	beq	124d8 <rb_base64_encode@plt+0x1614>
   12020:	mov	r1, r5
   12024:	mov	r2, r8
   12028:	ldr	r0, [r4, #20]
   1202c:	bl	10e94 <rb_rawbuf_append@plt>
   12030:	ldrb	r1, [r4, #128]	; 0x80
   12034:	ands	r1, r1, #8
   12038:	beq	12238 <rb_base64_encode@plt+0x1374>
   1203c:	ldr	r3, [pc, #1268]	; 12538 <rb_base64_encode@plt+0x1674>
   12040:	add	r9, sp, #24
   12044:	ldr	sl, [pc, #1264]	; 1253c <rb_base64_encode@plt+0x1678>
   12048:	add	r3, pc, r3
   1204c:	add	sl, pc, sl
   12050:	str	r3, [sp, #12]
   12054:	mov	r2, #2
   12058:	mov	r1, r9
   1205c:	ldr	r0, [r4, #20]
   12060:	bl	10e1c <rb_rawbuf_get@plt>
   12064:	cmp	r0, #2
   12068:	mov	fp, r0
   1206c:	bne	122d0 <rb_base64_encode@plt+0x140c>
   12070:	ldrb	r7, [r5, #-119]	; 0xffffff89
   12074:	and	r2, r7, #127	; 0x7f
   12078:	lsr	r7, r7, #7
   1207c:	cmp	r2, #126	; 0x7e
   12080:	strb	r2, [r5, #-119]	; 0xffffff89
   12084:	beq	12144 <rb_base64_encode@plt+0x1280>
   12088:	cmp	r2, #127	; 0x7f
   1208c:	beq	12054 <rb_base64_encode@plt+0x1190>
   12090:	cmp	r7, #1
   12094:	ldr	r0, [r4, #20]
   12098:	bne	12114 <rb_base64_encode@plt+0x1250>
   1209c:	sub	fp, r5, #96	; 0x60
   120a0:	mov	r2, #4
   120a4:	mov	r1, fp
   120a8:	bl	10e1c <rb_rawbuf_get@plt>
   120ac:	cmp	r0, #0
   120b0:	beq	1237c <rb_base64_encode@plt+0x14b8>
   120b4:	add	r6, sp, #16384	; 0x4000
   120b8:	ldrb	r2, [r5, #-119]	; 0xffffff89
   120bc:	add	r6, r6, #144	; 0x90
   120c0:	mov	r1, r6
   120c4:	ldr	r0, [r4, #20]
   120c8:	bl	10e1c <rb_rawbuf_get@plt>
   120cc:	subs	r2, r0, #0
   120d0:	beq	1212c <rb_base64_encode@plt+0x1268>
   120d4:	subgt	r1, r6, #1
   120d8:	movgt	r3, #0
   120dc:	ble	12100 <rb_base64_encode@plt+0x123c>
   120e0:	and	r0, r3, #3
   120e4:	ldrb	ip, [r1, #1]!
   120e8:	add	r3, r3, #1
   120ec:	cmp	r3, r2
   120f0:	ldrb	r0, [fp, r0]
   120f4:	eor	r0, r0, ip
   120f8:	strb	r0, [r1]
   120fc:	bne	120e0 <rb_base64_encode@plt+0x121c>
   12100:	mov	r1, r6
   12104:	mov	r3, #1
   12108:	add	r0, r4, #24
   1210c:	bl	10d20 <rb_linebuf_parse@plt>
   12110:	b	12054 <rb_base64_encode@plt+0x1190>
   12114:	add	r6, sp, #16384	; 0x4000
   12118:	add	r6, r6, #144	; 0x90
   1211c:	mov	r1, r6
   12120:	bl	10e1c <rb_rawbuf_get@plt>
   12124:	subs	r2, r0, #0
   12128:	bne	12100 <rb_base64_encode@plt+0x123c>
   1212c:	ldr	r2, [pc, #1036]	; 12540 <rb_base64_encode@plt+0x167c>
   12130:	mov	r1, #1
   12134:	mov	r0, r4
   12138:	add	r2, pc, r2
   1213c:	bl	11730 <rb_base64_encode@plt+0x86c>
   12140:	b	12054 <rb_base64_encode@plt+0x1190>
   12144:	add	r6, sp, #16384	; 0x4000
   12148:	mov	r2, #16384	; 0x4000
   1214c:	add	r6, r6, #144	; 0x90
   12150:	mov	r1, #0
   12154:	mov	r0, r6
   12158:	bl	10d08 <memset@plt>
   1215c:	mov	r2, fp
   12160:	sub	r1, r5, #116	; 0x74
   12164:	ldr	r0, [r4, #20]
   12168:	bl	10e1c <rb_rawbuf_get@plt>
   1216c:	cmp	r0, #0
   12170:	beq	12224 <rb_base64_encode@plt+0x1360>
   12174:	ldrh	r3, [r5, #-116]	; 0xffffff8c
   12178:	cmp	r7, #1
   1217c:	ldr	r0, [r4, #20]
   12180:	rev16	r3, r3
   12184:	uxth	r2, r3
   12188:	strh	r3, [r5, #-116]	; 0xffffff8c
   1218c:	bne	12200 <rb_base64_encode@plt+0x133c>
   12190:	sub	fp, r5, #96	; 0x60
   12194:	mov	r2, #4
   12198:	mov	r1, fp
   1219c:	bl	10e1c <rb_rawbuf_get@plt>
   121a0:	cmp	r0, #0
   121a4:	beq	123d8 <rb_base64_encode@plt+0x1514>
   121a8:	ldrh	r2, [r5, #-116]	; 0xffffff8c
   121ac:	mov	r1, r6
   121b0:	ldr	r0, [r4, #20]
   121b4:	bl	10e1c <rb_rawbuf_get@plt>
   121b8:	subs	r2, r0, #0
   121bc:	beq	12210 <rb_base64_encode@plt+0x134c>
   121c0:	subgt	r1, r6, #1
   121c4:	movgt	r3, #0
   121c8:	ble	12100 <rb_base64_encode@plt+0x123c>
   121cc:	and	r0, r3, #3
   121d0:	ldrb	ip, [r1, #1]!
   121d4:	add	r3, r3, #1
   121d8:	cmp	r3, r2
   121dc:	ldrb	r0, [fp, r0]
   121e0:	eor	r0, r0, ip
   121e4:	strb	r0, [r1]
   121e8:	bne	121cc <rb_base64_encode@plt+0x1308>
   121ec:	mov	r1, r6
   121f0:	mov	r3, #1
   121f4:	add	r0, r4, #24
   121f8:	bl	10d20 <rb_linebuf_parse@plt>
   121fc:	b	12054 <rb_base64_encode@plt+0x1190>
   12200:	mov	r1, r6
   12204:	bl	10e1c <rb_rawbuf_get@plt>
   12208:	subs	r2, r0, #0
   1220c:	bne	12100 <rb_base64_encode@plt+0x123c>
   12210:	mov	r1, #1
   12214:	mov	r0, r4
   12218:	ldr	r2, [sp, #16]
   1221c:	bl	11730 <rb_base64_encode@plt+0x86c>
   12220:	b	12054 <rb_base64_encode@plt+0x1190>
   12224:	mov	r2, sl
   12228:	mov	r1, #1
   1222c:	mov	r0, r4
   12230:	bl	11730 <rb_base64_encode@plt+0x86c>
   12234:	b	12054 <rb_base64_encode@plt+0x1190>
   12238:	add	r6, sp, #16384	; 0x4000
   1223c:	mov	r2, #16384	; 0x4000
   12240:	add	r6, r6, #144	; 0x90
   12244:	mov	r0, r6
   12248:	bl	10d08 <memset@plt>
   1224c:	b	12264 <rb_base64_encode@plt+0x13a0>
   12250:	mov	r0, r6
   12254:	ldr	r1, [sp, #8]
   12258:	bl	10db0 <rb_strcasestr@plt>
   1225c:	cmp	r0, #0
   12260:	bne	12300 <rb_base64_encode@plt+0x143c>
   12264:	mov	r2, #16384	; 0x4000
   12268:	mov	r1, r6
   1226c:	ldr	r0, [r4, #20]
   12270:	bl	10e1c <rb_rawbuf_get@plt>
   12274:	cmp	r0, #0
   12278:	bne	12250 <rb_base64_encode@plt+0x138c>
   1227c:	ldrb	r3, [r4, #128]	; 0x80
   12280:	tst	r3, #8
   12284:	bne	123ec <rb_base64_encode@plt+0x1528>
   12288:	tst	r3, #2
   1228c:	bne	1229c <rb_base64_encode@plt+0x13d8>
   12290:	mov	r1, r4
   12294:	ldr	r0, [r4, #84]	; 0x54
   12298:	bl	11a20 <rb_base64_encode@plt+0xb5c>
   1229c:	cmp	r8, #16384	; 0x4000
   122a0:	blt	122e4 <rb_base64_encode@plt+0x1420>
   122a4:	ldrb	r3, [r4, #128]	; 0x80
   122a8:	tst	r3, #2
   122ac:	beq	12004 <rb_base64_encode@plt+0x1140>
   122b0:	add	sp, sp, #32768	; 0x8000
   122b4:	add	sp, sp, #148	; 0x94
   122b8:	ldrd	r4, [sp]
   122bc:	ldrd	r6, [sp, #8]
   122c0:	ldrd	r8, [sp, #16]
   122c4:	ldrd	sl, [sp, #24]
   122c8:	add	sp, sp, #32
   122cc:	pop	{pc}		; (ldr pc, [sp], #4)
   122d0:	mov	r1, r4
   122d4:	ldr	r0, [r4, #88]	; 0x58
   122d8:	bl	11ec4 <rb_base64_encode@plt+0x1000>
   122dc:	cmp	r8, #16384	; 0x4000
   122e0:	bge	122a4 <rb_base64_encode@plt+0x13e0>
   122e4:	ldr	r2, [pc, #600]	; 12544 <rb_base64_encode@plt+0x1680>
   122e8:	mov	r3, r4
   122ec:	mov	r1, #1
   122f0:	ldr	r0, [sp, #4]
   122f4:	add	r2, pc, r2
   122f8:	bl	10cb4 <rb_setselect@plt>
   122fc:	b	122b0 <rb_base64_encode@plt+0x13ec>
   12300:	add	r3, sp, #32768	; 0x8000
   12304:	add	r1, r0, #18
   12308:	add	r3, r3, #144	; 0x90
   1230c:	cmp	r1, r3
   12310:	bcs	12360 <rb_base64_encode@plt+0x149c>
   12314:	ldrb	r3, [r0, #18]
   12318:	cmp	r3, #0
   1231c:	beq	12360 <rb_base64_encode@plt+0x149c>
   12320:	cmp	r3, #9
   12324:	cmpne	r3, #32
   12328:	bne	12394 <rb_base64_encode@plt+0x14d0>
   1232c:	add	r2, sp, #32768	; 0x8000
   12330:	add	r0, r0, #19
   12334:	add	r2, r2, #144	; 0x90
   12338:	b	12354 <rb_base64_encode@plt+0x1490>
   1233c:	ldrb	r3, [r0], #1
   12340:	cmp	r3, #0
   12344:	beq	12360 <rb_base64_encode@plt+0x149c>
   12348:	cmp	r3, #32
   1234c:	cmpne	r3, #9
   12350:	bne	12394 <rb_base64_encode@plt+0x14d0>
   12354:	cmp	r2, r0
   12358:	mov	r1, r0
   1235c:	bne	1233c <rb_base64_encode@plt+0x1478>
   12360:	mov	r2, #37	; 0x25
   12364:	add	r0, r4, #129	; 0x81
   12368:	bl	10d2c <rb_strlcpy@plt>
   1236c:	ldrb	r3, [r4, #128]	; 0x80
   12370:	orr	r3, r3, #8
   12374:	strb	r3, [r4, #128]	; 0x80
   12378:	b	12264 <rb_base64_encode@plt+0x13a0>
   1237c:	ldr	r2, [pc, #452]	; 12548 <rb_base64_encode@plt+0x1684>
   12380:	mov	r1, r7
   12384:	mov	r0, r4
   12388:	add	r2, pc, r2
   1238c:	bl	11730 <rb_base64_encode@plt+0x86c>
   12390:	b	12054 <rb_base64_encode@plt+0x1190>
   12394:	cmp	r3, #10
   12398:	cmpne	r3, #13
   1239c:	addne	r3, r1, #1
   123a0:	bne	123c0 <rb_base64_encode@plt+0x14fc>
   123a4:	b	12460 <rb_base64_encode@plt+0x159c>
   123a8:	ldrb	r2, [r3], #1
   123ac:	cmp	r2, #0
   123b0:	beq	12360 <rb_base64_encode@plt+0x149c>
   123b4:	cmp	r2, #10
   123b8:	cmpne	r2, #13
   123bc:	beq	12464 <rb_base64_encode@plt+0x15a0>
   123c0:	add	r2, sp, #32768	; 0x8000
   123c4:	mov	r0, r3
   123c8:	add	r2, r2, #144	; 0x90
   123cc:	cmp	r3, r2
   123d0:	bcc	123a8 <rb_base64_encode@plt+0x14e4>
   123d4:	b	12360 <rb_base64_encode@plt+0x149c>
   123d8:	mov	r1, r7
   123dc:	mov	r0, r4
   123e0:	ldr	r2, [sp, #12]
   123e4:	bl	11730 <rb_base64_encode@plt+0x86c>
   123e8:	b	12054 <rb_base64_encode@plt+0x1190>
   123ec:	sub	r6, r5, #96	; 0x60
   123f0:	add	r9, r4, #129	; 0x81
   123f4:	mov	r0, r6
   123f8:	sub	r7, r5, #116	; 0x74
   123fc:	bl	13e3c <rb_base64_encode@plt+0x2f78>
   12400:	mov	r0, r9
   12404:	bl	10d8c <strlen@plt>
   12408:	mov	r2, r0
   1240c:	mov	r1, r9
   12410:	mov	r0, r6
   12414:	bl	13e94 <rb_base64_encode@plt+0x2fd0>
   12418:	mov	r0, r6
   1241c:	mov	r2, #36	; 0x24
   12420:	ldr	r1, [sp, #20]
   12424:	bl	13e94 <rb_base64_encode@plt+0x2fd0>
   12428:	mov	r0, r6
   1242c:	mov	r1, r7
   12430:	bl	13f70 <rb_base64_encode@plt+0x30ac>
   12434:	mov	r0, r7
   12438:	mov	r1, #20
   1243c:	bl	10ec4 <rb_base64_encode@plt>
   12440:	ldrb	r3, [r4, #128]	; 0x80
   12444:	mov	r6, r0
   12448:	tst	r3, #2
   1244c:	beq	12470 <rb_base64_encode@plt+0x15ac>
   12450:	mov	r0, r6
   12454:	bl	10d44 <free@plt>
   12458:	ldrb	r3, [r4, #128]	; 0x80
   1245c:	b	12288 <rb_base64_encode@plt+0x13c4>
   12460:	mov	r0, r1
   12464:	mov	r3, #0
   12468:	strb	r3, [r0]
   1246c:	b	12360 <rb_base64_encode@plt+0x149c>
   12470:	ldr	r1, [pc, #212]	; 1254c <rb_base64_encode@plt+0x1688>
   12474:	mov	r2, #129	; 0x81
   12478:	ldr	r0, [r4, #16]
   1247c:	add	r1, pc, r1
   12480:	bl	10e94 <rb_rawbuf_append@plt>
   12484:	mov	r0, r6
   12488:	bl	10d8c <strlen@plt>
   1248c:	ldrb	r1, [r4, #128]	; 0x80
   12490:	mov	r2, r0
   12494:	ldr	r0, [r4, #16]
   12498:	tst	r1, #2
   1249c:	bne	12450 <rb_base64_encode@plt+0x158c>
   124a0:	mov	r1, r6
   124a4:	bl	10e94 <rb_rawbuf_append@plt>
   124a8:	ldrb	r3, [r4, #128]	; 0x80
   124ac:	ldr	r0, [r4, #16]
   124b0:	tst	r3, #2
   124b4:	bne	12450 <rb_base64_encode@plt+0x158c>
   124b8:	ldr	r1, [pc, #144]	; 12550 <rb_base64_encode@plt+0x168c>
   124bc:	mov	r2, #4
   124c0:	add	r1, pc, r1
   124c4:	bl	10e94 <rb_rawbuf_append@plt>
   124c8:	mov	r0, r6
   124cc:	bl	10d44 <free@plt>
   124d0:	ldrb	r3, [r4, #128]	; 0x80
   124d4:	b	12288 <rb_base64_encode@plt+0x13c4>
   124d8:	ldr	r2, [pc, #116]	; 12554 <rb_base64_encode@plt+0x1690>
   124dc:	mov	r0, r4
   124e0:	mov	r1, #0
   124e4:	add	r2, pc, r2
   124e8:	bl	11730 <rb_base64_encode@plt+0x86c>
   124ec:	b	122b0 <rb_base64_encode@plt+0x13ec>
   124f0:	bl	10eb8 <__errno_location@plt>
   124f4:	ldr	r0, [r0]
   124f8:	bl	10c9c <rb_ignore_errno@plt>
   124fc:	cmp	r0, #0
   12500:	beq	124d8 <rb_base64_encode@plt+0x1614>
   12504:	ldr	r2, [pc, #76]	; 12558 <rb_base64_encode@plt+0x1694>
   12508:	mov	r3, r4
   1250c:	mov	r1, #1
   12510:	ldr	r0, [sp, #4]
   12514:	add	r2, pc, r2
   12518:	bl	10cb4 <rb_setselect@plt>
   1251c:	mov	r1, r4
   12520:	ldr	r0, [r4, #88]	; 0x58
   12524:	bl	11ec4 <rb_base64_encode@plt+0x1000>
   12528:	b	122b0 <rb_base64_encode@plt+0x13ec>
   1252c:	andeq	r2, r0, ip, lsr #3
   12530:			; <UNDEFINED> instruction: 0x000021b4
   12534:			; <UNDEFINED> instruction: 0x000022b8
   12538:	andeq	r2, r0, r0, asr #4
   1253c:	andeq	r2, r0, ip, lsl #4
   12540:	andeq	r2, r0, ip, ror r1
   12544:			; <UNDEFINED> instruction: 0xfffffc98
   12548:	andeq	r1, r0, r0, lsl #30
   1254c:	andeq	r1, r0, r0, asr sp
   12550:	muleq	r0, r0, sp
   12554:	muleq	r0, r8, ip
   12558:			; <UNDEFINED> instruction: 0xfffffa78
   1255c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12560:	strd	r6, [sp, #8]
   12564:	mov	r6, r1
   12568:	mov	r7, #16384	; 0x4000
   1256c:	strd	r8, [sp, #16]
   12570:	strd	sl, [sp, #24]
   12574:	str	lr, [sp, #32]
   12578:	sub	sp, sp, #20
   1257c:	mov	r1, #40	; 0x28
   12580:	mov	r0, #1
   12584:	bl	10cf0 <calloc@plt>
   12588:	subs	r4, r0, #0
   1258c:	beq	1260c <rb_base64_encode@plt+0x1748>
   12590:	mov	r1, #16384	; 0x4000
   12594:	mov	r0, #1
   12598:	bl	10cf0 <calloc@plt>
   1259c:	subs	r1, r0, #0
   125a0:	beq	1260c <rb_base64_encode@plt+0x1748>
   125a4:	mov	r0, #4
   125a8:	add	r5, r4, #20
   125ac:	str	r1, [r4, #12]
   125b0:	mov	r3, r5
   125b4:	mov	r2, #16384	; 0x4000
   125b8:	str	r7, [r4, #16]
   125bc:	str	r0, [sp]
   125c0:	ldr	r0, [r6, #16]
   125c4:	bl	10e58 <rb_recv_fd_buf@plt>
   125c8:	subs	r8, r0, #0
   125cc:	bgt	12610 <rb_base64_encode@plt+0x174c>
   125d0:	ldr	r0, [r4, #12]
   125d4:	cmp	r0, #0
   125d8:	beq	125e0 <rb_base64_encode@plt+0x171c>
   125dc:	bl	10d44 <free@plt>
   125e0:	mov	r0, r4
   125e4:	bl	10d44 <free@plt>
   125e8:	cmp	r8, #0
   125ec:	beq	12604 <rb_base64_encode@plt+0x1740>
   125f0:	bl	10eb8 <__errno_location@plt>
   125f4:	ldr	r0, [r0]
   125f8:	bl	10c9c <rb_ignore_errno@plt>
   125fc:	cmp	r0, #0
   12600:	bne	12678 <rb_base64_encode@plt+0x17b4>
   12604:	mov	r0, #0
   12608:	bl	10eac <exit@plt>
   1260c:	bl	10e10 <rb_outofmemory@plt>
   12610:	ldr	r3, [r6, #28]
   12614:	mov	r2, #0
   12618:	str	r4, [r4]
   1261c:	cmp	r3, r2
   12620:	str	r3, [r4, #4]
   12624:	str	r2, [r4, #8]
   12628:	str	r8, [r4, #16]
   1262c:	strne	r4, [r3, #8]
   12630:	beq	12668 <rb_base64_encode@plt+0x17a4>
   12634:	ldr	r2, [r6, #32]
   12638:	mov	r3, #0
   1263c:	str	r4, [r6, #28]
   12640:	add	r2, r2, #1
   12644:	str	r2, [r6, #32]
   12648:	ldr	r2, [r5], #4
   1264c:	cmp	r2, #0
   12650:	beq	12660 <rb_base64_encode@plt+0x179c>
   12654:	add	r3, r3, #1
   12658:	cmp	r3, #4
   1265c:	bne	12648 <rb_base64_encode@plt+0x1784>
   12660:	str	r3, [r4, #36]	; 0x24
   12664:	b	1257c <rb_base64_encode@plt+0x16b8>
   12668:	ldr	r3, [r6, #24]
   1266c:	cmp	r3, #0
   12670:	streq	r4, [r6, #24]
   12674:	b	12634 <rb_base64_encode@plt+0x1770>
   12678:	ldr	r4, [r6, #24]
   1267c:	cmp	r4, #0
   12680:	beq	1271c <rb_base64_encode@plt+0x1858>
   12684:	ldr	sl, [pc, #608]	; 128ec <rb_base64_encode@plt+0x1a28>
   12688:	movw	r8, #19923	; 0x4dd3
   1268c:	movt	r8, #4194	; 0x1062
   12690:	ldr	r3, [pc, #600]	; 128f0 <rb_base64_encode@plt+0x1a2c>
   12694:	ldr	r7, [r4, #8]
   12698:	add	sl, pc, sl
   1269c:	add	r3, pc, r3
   126a0:	str	r3, [sp, #8]
   126a4:	ldr	r5, [r4]
   126a8:	ldr	r0, [r5, #12]
   126ac:	ldrb	r3, [r0]
   126b0:	cmp	r3, #65	; 0x41
   126b4:	beq	12750 <rb_base64_encode@plt+0x188c>
   126b8:	ldr	r3, [r4, #4]
   126bc:	ldr	r2, [r4, #8]
   126c0:	cmp	r2, #0
   126c4:	beq	12790 <rb_base64_encode@plt+0x18cc>
   126c8:	str	r3, [r2, #4]
   126cc:	ldr	r3, [r4, #4]
   126d0:	cmp	r3, #0
   126d4:	strne	r2, [r3, #8]
   126d8:	ldr	r3, [r6, #32]
   126dc:	streq	r2, [r6, #24]
   126e0:	mov	r2, #0
   126e4:	cmp	r0, r2
   126e8:	str	r2, [r4, #4]
   126ec:	str	r2, [r4, #8]
   126f0:	sub	r3, r3, #1
   126f4:	str	r3, [r6, #32]
   126f8:	beq	12700 <rb_base64_encode@plt+0x183c>
   126fc:	bl	10d44 <free@plt>
   12700:	mov	r0, r5
   12704:	bl	10d44 <free@plt>
   12708:	cmp	r7, #0
   1270c:	beq	1271c <rb_base64_encode@plt+0x1858>
   12710:	mov	r4, r7
   12714:	ldr	r7, [r7, #8]
   12718:	b	126a4 <rb_base64_encode@plt+0x17e0>
   1271c:	ldr	r2, [pc, #464]	; 128f4 <rb_base64_encode@plt+0x1a30>
   12720:	mov	r3, r6
   12724:	mov	r1, #1
   12728:	ldr	r0, [r6, #16]
   1272c:	add	r2, pc, r2
   12730:	add	sp, sp, #20
   12734:	ldrd	r4, [sp]
   12738:	ldrd	r6, [sp, #8]
   1273c:	ldrd	r8, [sp, #16]
   12740:	ldrd	sl, [sp, #24]
   12744:	ldr	lr, [sp, #32]
   12748:	add	sp, sp, #36	; 0x24
   1274c:	b	10cb4 <rb_setselect@plt>
   12750:	ldr	r3, [r5, #36]	; 0x24
   12754:	cmp	r3, #2
   12758:	bne	128ac <rb_base64_encode@plt+0x19e8>
   1275c:	ldrd	r2, [r5, #16]
   12760:	cmp	r2, #5
   12764:	beq	12798 <rb_base64_encode@plt+0x18d4>
   12768:	add	fp, r5, #24
   1276c:	mov	r9, #0
   12770:	mov	r0, r3
   12774:	add	r9, r9, #1
   12778:	bl	10dbc <rb_close@plt>
   1277c:	ldr	r3, [r5, #36]	; 0x24
   12780:	cmp	r9, r3
   12784:	bge	128a4 <rb_base64_encode@plt+0x19e0>
   12788:	ldr	r3, [fp], #4
   1278c:	b	12770 <rb_base64_encode@plt+0x18ac>
   12790:	str	r3, [r6, #28]
   12794:	b	126d0 <rb_base64_encode@plt+0x180c>
   12798:	mov	r1, #168	; 0xa8
   1279c:	mov	r0, #1
   127a0:	str	r3, [sp, #12]
   127a4:	ldr	r9, [r5, #24]
   127a8:	bl	10cf0 <calloc@plt>
   127ac:	subs	fp, r0, #0
   127b0:	beq	1260c <rb_base64_encode@plt+0x1748>
   127b4:	ldr	r3, [sp, #12]
   127b8:	mvn	r1, #0
   127bc:	str	r6, [fp, #12]
   127c0:	str	r1, [fp, #80]	; 0x50
   127c4:	mov	r0, r3
   127c8:	str	r3, [fp, #84]	; 0x54
   127cc:	str	r9, [fp, #88]	; 0x58
   127d0:	bl	10cfc <rb_set_nb@plt>
   127d4:	mov	r0, r9
   127d8:	bl	10cfc <rb_set_nb@plt>
   127dc:	add	r0, fp, #52	; 0x34
   127e0:	bl	10e70 <rb_linebuf_newbuf@plt>
   127e4:	add	r0, fp, #24
   127e8:	bl	10e70 <rb_linebuf_newbuf@plt>
   127ec:	bl	10e40 <rb_new_rawbuffer@plt>
   127f0:	str	r0, [fp, #20]
   127f4:	bl	10e40 <rb_new_rawbuffer@plt>
   127f8:	ldr	r1, [r5, #12]
   127fc:	mov	r3, #0
   12800:	mov	ip, #2000	; 0x7d0
   12804:	str	r0, [fp, #16]
   12808:	ldr	r1, [r1, #1]
   1280c:	str	fp, [fp]
   12810:	str	r3, [fp, #4]
   12814:	umull	r2, r3, r8, r1
   12818:	str	r1, [fp, #80]	; 0x50
   1281c:	lsr	r3, r3, #7
   12820:	mls	r3, ip, r3, r1
   12824:	lsl	r1, r3, #1
   12828:	add	r0, r1, r3
   1282c:	ldr	ip, [sl, r0, lsl #2]
   12830:	add	r0, sl, r0, lsl #2
   12834:	cmp	ip, #0
   12838:	str	ip, [fp, #8]
   1283c:	strne	fp, [ip, #4]
   12840:	beq	128cc <rb_base64_encode@plt+0x1a08>
   12844:	ldr	r2, [sp, #8]
   12848:	add	r3, r1, r3
   1284c:	ldrb	r1, [fp, #128]	; 0x80
   12850:	ldr	r0, [fp, #84]	; 0x54
   12854:	add	ip, r2, r3, lsl #2
   12858:	str	fp, [r2, r3, lsl #2]
   1285c:	ldr	r3, [ip, #8]
   12860:	orr	r1, r1, #4
   12864:	strb	r1, [fp, #128]	; 0x80
   12868:	add	r3, r3, #1
   1286c:	str	r3, [ip, #8]
   12870:	bl	10c78 <rb_get_type@plt>
   12874:	tst	r0, #64	; 0x40
   12878:	bne	128bc <rb_base64_encode@plt+0x19f8>
   1287c:	ldr	r0, [fp, #88]	; 0x58
   12880:	bl	10c78 <rb_get_type@plt>
   12884:	cmp	r0, #64	; 0x40
   12888:	beq	128dc <rb_base64_encode@plt+0x1a18>
   1288c:	mov	r1, fp
   12890:	ldr	r0, [fp, #84]	; 0x54
   12894:	bl	11f94 <rb_base64_encode@plt+0x10d0>
   12898:	mov	r1, fp
   1289c:	ldr	r0, [fp, #88]	; 0x58
   128a0:	bl	11d5c <rb_base64_encode@plt+0xe98>
   128a4:	ldr	r0, [r5, #12]
   128a8:	b	126b8 <rb_base64_encode@plt+0x17f4>
   128ac:	cmp	r3, #0
   128b0:	ble	126b8 <rb_base64_encode@plt+0x17f4>
   128b4:	ldr	r3, [r5, #20]
   128b8:	b	12768 <rb_base64_encode@plt+0x18a4>
   128bc:	mov	r1, #4
   128c0:	ldr	r0, [fp, #84]	; 0x54
   128c4:	bl	10d68 <rb_set_type@plt>
   128c8:	b	1287c <rb_base64_encode@plt+0x19b8>
   128cc:	ldr	ip, [r0, #4]
   128d0:	cmp	ip, #0
   128d4:	streq	fp, [r0, #4]
   128d8:	b	12844 <rb_base64_encode@plt+0x1980>
   128dc:	mov	r1, #4
   128e0:	ldr	r0, [fp, #88]	; 0x58
   128e4:	bl	10d68 <rb_set_type@plt>
   128e8:	b	1288c <rb_base64_encode@plt+0x19c8>
   128ec:	andeq	r2, r1, r8, ror #20
   128f0:	andeq	r2, r1, r4, ror #20
   128f4:			; <UNDEFINED> instruction: 0xfffffe28
   128f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   128fc:	movw	r3, #60321	; 0xeba1
   12900:	movt	r3, #28377	; 0x6ed9
   12904:	ldr	r4, [r0, #4]
   12908:	movw	r2, #31129	; 0x7999
   1290c:	movt	r2, #23170	; 0x5a82
   12910:	strd	r6, [sp, #8]
   12914:	movw	ip, #48348	; 0xbcdc
   12918:	movt	ip, #36635	; 0x8f1b
   1291c:	strd	r8, [sp, #16]
   12920:	mov	r8, r2
   12924:	strd	sl, [sp, #24]
   12928:	str	lr, [sp, #32]
   1292c:	sub	sp, sp, #188	; 0xbc
   12930:	movw	lr, #49622	; 0xc1d6
   12934:	movt	lr, #51810	; 0xca62
   12938:	ror	fp, r4, #2
   1293c:	ldr	r6, [r0]
   12940:	stmib	sp, {r3, lr}
   12944:	mov	lr, r4
   12948:	mov	r4, r0
   1294c:	ldr	sl, [r0, #8]
   12950:	str	r2, [sp, #12]
   12954:	ldr	r7, [r0, #12]
   12958:	str	ip, [sp, #80]	; 0x50
   1295c:	ldr	r0, [r0, #16]
   12960:	str	lr, [sp, #100]	; 0x64
   12964:	eor	r5, sl, fp
   12968:	ldr	r9, [r1, #4]
   1296c:	eor	ip, sl, r7
   12970:	str	sl, [sp, #104]	; 0x68
   12974:	and	ip, ip, lr
   12978:	ldr	lr, [r1]
   1297c:	mov	r3, r0
   12980:	add	r0, sl, r2
   12984:	mov	r2, r6
   12988:	mov	r6, r7
   1298c:	mov	r7, r3
   12990:	eor	ip, ip, r6
   12994:	and	r5, r5, r2
   12998:	str	r4, [sp, #116]	; 0x74
   1299c:	add	r4, fp, r8
   129a0:	str	r3, [sp, #112]	; 0x70
   129a4:	add	r8, r6, r8
   129a8:	eor	r5, r5, sl
   129ac:	ldr	r3, [sp, #12]
   129b0:	ror	sl, r2, #2
   129b4:	add	r5, r5, r8
   129b8:	str	r6, [sp, #108]	; 0x6c
   129bc:	mov	r6, r2
   129c0:	ldr	r8, [r1, #12]
   129c4:	str	r2, [sp, #96]	; 0x60
   129c8:	rev	r2, r9
   129cc:	rev	r9, lr
   129d0:	add	r5, r5, r2
   129d4:	eor	lr, fp, sl
   129d8:	add	r7, r7, r3
   129dc:	str	r2, [sp, #16]
   129e0:	mov	r2, r9
   129e4:	add	r7, r7, r6, ror #27
   129e8:	ldr	r6, [r1, #8]
   129ec:	rev	r8, r8
   129f0:	add	ip, ip, r7
   129f4:	add	r7, sl, r3
   129f8:	add	ip, r9, ip
   129fc:	ldr	r9, [r1, #16]
   12a00:	mov	r3, r8
   12a04:	and	lr, lr, ip
   12a08:	add	r5, r5, ip, ror #27
   12a0c:	add	r4, r4, r3
   12a10:	rev	r6, r6
   12a14:	eor	fp, fp, lr
   12a18:	ror	ip, ip, #2
   12a1c:	add	r0, r0, r6
   12a20:	ror	lr, r5, #2
   12a24:	ldr	r8, [r1, #24]
   12a28:	add	r0, fp, r0
   12a2c:	str	r6, [sp, #20]
   12a30:	eor	r6, sl, ip
   12a34:	ldr	fp, [r1, #20]
   12a38:	rev	r9, r9
   12a3c:	add	r0, r0, r5, ror #27
   12a40:	str	r3, [sp, #28]
   12a44:	mov	r3, r9
   12a48:	and	r6, r6, r5
   12a4c:	ldr	r9, [r1, #28]
   12a50:	add	r7, r7, r3
   12a54:	eor	r6, r6, sl
   12a58:	str	r3, [sp, #36]	; 0x24
   12a5c:	ror	sl, r0, #2
   12a60:	eor	r5, ip, lr
   12a64:	ldr	r3, [sp, #12]
   12a68:	add	r4, r6, r4
   12a6c:	and	r5, r5, r0
   12a70:	rev	fp, fp
   12a74:	add	r4, r4, r0, ror #27
   12a78:	eor	r5, r5, ip
   12a7c:	mov	r0, fp
   12a80:	eor	fp, lr, sl
   12a84:	add	r7, r5, r7
   12a88:	and	fp, fp, r4
   12a8c:	ldr	r5, [r1, #32]
   12a90:	str	r0, [sp, #56]	; 0x38
   12a94:	add	r6, r7, r4, ror #27
   12a98:	eor	fp, fp, lr
   12a9c:	add	r0, r0, r3
   12aa0:	ror	r4, r4, #2
   12aa4:	rev	r9, r9
   12aa8:	add	ip, r0, ip
   12aac:	ror	r7, r6, #2
   12ab0:	add	ip, fp, ip
   12ab4:	rev	fp, r8
   12ab8:	eor	r8, sl, r4
   12abc:	add	ip, ip, r6, ror #27
   12ac0:	eor	r0, r4, r7
   12ac4:	and	r6, r6, r8
   12ac8:	str	fp, [sp, #64]	; 0x40
   12acc:	add	fp, fp, r3
   12ad0:	mov	r3, r9
   12ad4:	ldr	r8, [r1, #36]	; 0x24
   12ad8:	add	fp, fp, lr
   12adc:	eor	lr, r6, sl
   12ae0:	rev	r5, r5
   12ae4:	ror	r6, ip, #2
   12ae8:	add	r9, lr, fp
   12aec:	mov	lr, r3
   12af0:	str	r3, [sp, #68]	; 0x44
   12af4:	ldr	r3, [sp, #12]
   12af8:	add	r9, r9, ip, ror #27
   12afc:	and	r0, r0, ip
   12b00:	mov	ip, r5
   12b04:	eor	r0, r0, r4
   12b08:	rev	r8, r8
   12b0c:	ldr	fp, [r1, #40]	; 0x28
   12b10:	ror	r5, r9, #2
   12b14:	str	ip, [sp, #32]
   12b18:	add	lr, lr, r3
   12b1c:	add	ip, ip, r3
   12b20:	mov	r3, r8
   12b24:	ldr	r8, [r1, #52]	; 0x34
   12b28:	add	lr, lr, sl
   12b2c:	add	lr, r0, lr
   12b30:	eor	r0, r7, r6
   12b34:	ldr	sl, [r1, #44]	; 0x2c
   12b38:	and	r0, r0, r9
   12b3c:	add	lr, lr, r9, ror #27
   12b40:	add	ip, ip, r4
   12b44:	eor	r0, r0, r7
   12b48:	add	r0, r0, ip
   12b4c:	eor	ip, r6, r5
   12b50:	ror	r4, lr, #2
   12b54:	str	r8, [sp, #24]
   12b58:	mov	r8, r3
   12b5c:	rev	fp, fp
   12b60:	str	r3, [sp, #40]	; 0x28
   12b64:	and	ip, ip, lr
   12b68:	add	r0, r0, lr, ror #27
   12b6c:	ldr	r3, [sp, #12]
   12b70:	eor	ip, ip, r6
   12b74:	ldr	r9, [r1, #48]	; 0x30
   12b78:	ldr	lr, [r1, #56]	; 0x38
   12b7c:	add	r8, r8, r3
   12b80:	add	r7, r8, r7
   12b84:	mov	r8, fp
   12b88:	ldr	r1, [r1, #60]	; 0x3c
   12b8c:	eor	fp, r5, r4
   12b90:	add	ip, ip, r7
   12b94:	rev	r7, sl
   12b98:	add	ip, ip, r0, ror #27
   12b9c:	and	fp, fp, r0
   12ba0:	ror	r0, r0, #2
   12ba4:	str	r8, [sp, #44]	; 0x2c
   12ba8:	add	r8, r8, r3
   12bac:	eor	fp, fp, r5
   12bb0:	add	r6, r8, r6
   12bb4:	str	r7, [sp, #48]	; 0x30
   12bb8:	add	r7, r7, r3
   12bbc:	add	r6, fp, r6
   12bc0:	ror	sl, ip, #2
   12bc4:	add	r5, r7, r5
   12bc8:	eor	r7, r4, r0
   12bcc:	add	r6, r6, ip, ror #27
   12bd0:	and	ip, ip, r7
   12bd4:	rev	fp, r9
   12bd8:	eor	r9, ip, r4
   12bdc:	eor	r8, r0, sl
   12be0:	ror	r7, r6, #2
   12be4:	add	r9, r9, r5
   12be8:	ldr	r5, [sp, #24]
   12bec:	rev	r1, r1
   12bf0:	add	r9, r9, r6, ror #27
   12bf4:	and	r6, r6, r8
   12bf8:	str	fp, [sp, #52]	; 0x34
   12bfc:	add	fp, fp, r3
   12c00:	eor	r8, sl, r7
   12c04:	add	fp, fp, r4
   12c08:	eor	r4, r6, r0
   12c0c:	add	r4, r4, fp
   12c10:	and	r8, r8, r9
   12c14:	rev	ip, r5
   12c18:	add	r4, r4, r9, ror #27
   12c1c:	eor	r8, r8, sl
   12c20:	ror	r5, r9, #2
   12c24:	ldr	r9, [sp, #20]
   12c28:	add	fp, ip, r3
   12c2c:	add	r0, fp, r0
   12c30:	rev	lr, lr
   12c34:	ror	fp, r4, #2
   12c38:	add	r0, r8, r0
   12c3c:	add	r6, lr, r3
   12c40:	add	r0, r0, r4, ror #27
   12c44:	add	sl, r6, sl
   12c48:	eor	r6, r7, r5
   12c4c:	and	r4, r4, r6
   12c50:	eor	r8, r2, r9
   12c54:	ldr	r2, [sp, #16]
   12c58:	eor	r4, r4, r7
   12c5c:	add	sl, r4, sl
   12c60:	ror	r6, r0, #2
   12c64:	ldr	r9, [sp, #32]
   12c68:	add	sl, sl, r0, ror #27
   12c6c:	eor	r4, fp, r6
   12c70:	and	r4, r4, sl
   12c74:	eor	r8, r8, r9
   12c78:	ldr	r9, [sp, #28]
   12c7c:	eor	r8, r8, ip
   12c80:	ror	r8, r8, #31
   12c84:	eor	r9, r2, r9
   12c88:	mov	r2, r1
   12c8c:	str	r8, [sp, #16]
   12c90:	add	r8, r1, r3
   12c94:	ldr	r1, [sp, #40]	; 0x28
   12c98:	add	r7, r8, r7
   12c9c:	ldr	r8, [sp, #16]
   12ca0:	eor	r9, r9, r1
   12ca4:	eor	r1, r5, fp
   12ca8:	and	r1, r1, r0
   12cac:	ldr	r0, [sp, #20]
   12cb0:	eor	r9, r9, lr
   12cb4:	eor	r1, r1, r5
   12cb8:	ror	r9, r9, #31
   12cbc:	add	r8, r8, r3
   12cc0:	add	r1, r1, r7
   12cc4:	ldr	r7, [sp, #36]	; 0x24
   12cc8:	add	r5, r8, r5
   12ccc:	add	r1, r1, sl, ror #27
   12cd0:	eor	r8, r4, fp
   12cd4:	str	r9, [sp, #24]
   12cd8:	ror	r9, sl, #2
   12cdc:	add	r8, r8, r5
   12ce0:	ror	r4, r1, #2
   12ce4:	eor	r5, r6, r9
   12ce8:	add	r8, r8, r1, ror #27
   12cec:	eor	r7, r0, r7
   12cf0:	ldr	r0, [sp, #44]	; 0x2c
   12cf4:	and	r5, r5, r1
   12cf8:	eor	r5, r5, r6
   12cfc:	eor	r7, r7, r0
   12d00:	ldr	r0, [sp, #28]
   12d04:	eor	r7, r7, r2
   12d08:	str	r2, [sp, #60]	; 0x3c
   12d0c:	ldr	r2, [sp, #24]
   12d10:	ror	r7, r7, #31
   12d14:	ldr	r1, [sp, #48]	; 0x30
   12d18:	ldr	sl, [sp, #56]	; 0x38
   12d1c:	eor	sl, r0, sl
   12d20:	add	r0, r2, r3
   12d24:	add	r0, r0, fp
   12d28:	eor	sl, sl, r1
   12d2c:	ldr	r1, [sp, #36]	; 0x24
   12d30:	add	r5, r5, r0
   12d34:	mov	r3, r7
   12d38:	ror	r7, r8, #2
   12d3c:	ldr	r0, [sp, #12]
   12d40:	add	r5, r5, r8, ror #27
   12d44:	ldr	fp, [sp, #64]	; 0x40
   12d48:	add	r0, r3, r0
   12d4c:	eor	r1, r1, fp
   12d50:	ldr	fp, [sp, #16]
   12d54:	eor	sl, sl, fp
   12d58:	ldr	fp, [sp, #52]	; 0x34
   12d5c:	ror	sl, sl, #31
   12d60:	str	sl, [sp, #20]
   12d64:	add	sl, r0, r6
   12d68:	eor	r0, r9, r4
   12d6c:	eor	r1, r1, fp
   12d70:	and	r0, r0, r8
   12d74:	ldr	r8, [sp, #56]	; 0x38
   12d78:	eor	r1, r1, r2
   12d7c:	mov	fp, r3
   12d80:	ror	r1, r1, #31
   12d84:	ldr	r2, [sp, #12]
   12d88:	eor	r0, r0, r9
   12d8c:	eor	r6, r4, r7
   12d90:	add	r0, r0, sl
   12d94:	ror	sl, r5, #2
   12d98:	mov	r3, r1
   12d9c:	ldr	r1, [sp, #68]	; 0x44
   12da0:	add	r0, r0, r5, ror #27
   12da4:	and	r6, r6, r5
   12da8:	ldr	r5, [sp, #32]
   12dac:	eor	r6, r6, r4
   12db0:	str	r3, [sp, #28]
   12db4:	eor	r1, r8, r1
   12db8:	ldr	r8, [sp, #20]
   12dbc:	eor	r1, r1, ip
   12dc0:	eor	r1, r1, fp
   12dc4:	ror	r1, r1, #31
   12dc8:	add	r2, r8, r2
   12dcc:	add	r2, r2, r9
   12dd0:	ldr	r9, [sp, #64]	; 0x40
   12dd4:	add	r2, r6, r2
   12dd8:	ror	r6, r0, #2
   12ddc:	str	fp, [sp, #64]	; 0x40
   12de0:	add	r2, r2, r0, ror #27
   12de4:	eor	r8, r9, r5
   12de8:	mov	r9, r3
   12dec:	ldr	r3, [sp, #4]
   12df0:	eor	r5, r7, sl
   12df4:	eor	r8, r8, lr
   12df8:	eor	r0, r0, r5
   12dfc:	ldr	r5, [sp, #68]	; 0x44
   12e00:	add	fp, r9, r3
   12e04:	ldr	r9, [sp, #40]	; 0x28
   12e08:	add	r4, fp, r4
   12e0c:	add	r0, r0, r4
   12e10:	ldr	r4, [sp, #4]
   12e14:	eor	r9, r5, r9
   12e18:	ldr	r5, [sp, #20]
   12e1c:	eor	fp, r8, r5
   12e20:	ror	r8, r2, #2
   12e24:	ror	r5, fp, #31
   12e28:	ldr	fp, [sp, #28]
   12e2c:	mov	r3, r5
   12e30:	ldr	r5, [sp, #60]	; 0x3c
   12e34:	eor	r9, r9, r5
   12e38:	add	r5, r1, r4
   12e3c:	add	r4, r0, r2, ror #27
   12e40:	eor	r9, r9, fp
   12e44:	add	r5, r5, r7
   12e48:	ldr	fp, [sp, #16]
   12e4c:	ror	r7, r9, #31
   12e50:	eor	r0, sl, r6
   12e54:	eor	r2, r2, r0
   12e58:	ldr	r0, [sp, #32]
   12e5c:	ror	r9, r4, #2
   12e60:	add	r5, r2, r5
   12e64:	mov	r2, r3
   12e68:	str	r3, [sp, #32]
   12e6c:	str	r7, [sp, #36]	; 0x24
   12e70:	add	r5, r5, r4, ror #27
   12e74:	ldr	r3, [sp, #4]
   12e78:	ldr	r7, [sp, #44]	; 0x2c
   12e7c:	add	r2, r2, r3
   12e80:	add	r2, r2, sl
   12e84:	eor	r7, r0, r7
   12e88:	eor	r0, r6, r8
   12e8c:	eor	r0, r0, r4
   12e90:	eor	r7, r7, fp
   12e94:	ldr	fp, [sp, #40]	; 0x28
   12e98:	add	r0, r0, r2
   12e9c:	eor	r7, r7, r1
   12ea0:	ldr	r2, [sp, #36]	; 0x24
   12ea4:	ror	r7, r7, #31
   12ea8:	add	r0, r0, r5, ror #27
   12eac:	ldr	sl, [sp, #48]	; 0x30
   12eb0:	eor	r4, fp, sl
   12eb4:	add	fp, r2, r3
   12eb8:	ror	sl, r5, #2
   12ebc:	mov	r3, r7
   12ec0:	ldr	r7, [sp, #24]
   12ec4:	eor	r2, r8, r9
   12ec8:	eor	r2, r2, r5
   12ecc:	add	r6, fp, r6
   12ed0:	ldr	r5, [sp, #52]	; 0x34
   12ed4:	add	r6, r2, r6
   12ed8:	str	r3, [sp, #40]	; 0x28
   12edc:	add	r6, r6, r0, ror #27
   12ee0:	eor	r4, r4, r7
   12ee4:	ldr	r7, [sp, #44]	; 0x2c
   12ee8:	eor	fp, r7, r5
   12eec:	ldr	r7, [sp, #32]
   12ef0:	mov	r5, r3
   12ef4:	ldr	r3, [sp, #4]
   12ef8:	eor	r4, r4, r7
   12efc:	ror	r7, r0, #2
   12f00:	ror	r2, r4, #31
   12f04:	eor	r4, r9, sl
   12f08:	add	r5, r5, r3
   12f0c:	eor	r0, r0, r4
   12f10:	ldr	r4, [sp, #4]
   12f14:	add	r8, r5, r8
   12f18:	str	r2, [sp, #44]	; 0x2c
   12f1c:	add	r8, r0, r8
   12f20:	ldr	r0, [sp, #44]	; 0x2c
   12f24:	add	r8, r8, r6, ror #27
   12f28:	ldr	r2, [sp, #64]	; 0x40
   12f2c:	eor	fp, fp, r2
   12f30:	ldr	r2, [sp, #36]	; 0x24
   12f34:	eor	fp, fp, r2
   12f38:	ror	r5, fp, #31
   12f3c:	ldr	fp, [sp, #48]	; 0x30
   12f40:	mov	r3, r5
   12f44:	ror	r5, r6, #2
   12f48:	str	r3, [sp, #84]	; 0x54
   12f4c:	eor	r2, fp, ip
   12f50:	add	fp, r0, r4
   12f54:	ldr	r0, [sp, #20]
   12f58:	eor	r4, sl, r7
   12f5c:	add	fp, fp, r9
   12f60:	eor	r4, r4, r6
   12f64:	ldr	r6, [sp, #40]	; 0x28
   12f68:	add	r4, r4, fp
   12f6c:	ldr	r9, [sp, #52]	; 0x34
   12f70:	add	r4, r4, r8, ror #27
   12f74:	eor	r2, r2, r0
   12f78:	ror	r0, r8, #2
   12f7c:	eor	r2, r2, r6
   12f80:	ror	r6, r2, #31
   12f84:	ldr	r2, [sp, #4]
   12f88:	eor	r9, r9, lr
   12f8c:	str	r6, [sp, #48]	; 0x30
   12f90:	ldr	r6, [sp, #28]
   12f94:	add	fp, r3, r2
   12f98:	eor	r2, r7, r5
   12f9c:	eor	r2, r2, r8
   12fa0:	ldr	r8, [sp, #44]	; 0x2c
   12fa4:	add	sl, fp, sl
   12fa8:	add	r2, r2, sl
   12fac:	mov	fp, r3
   12fb0:	add	r2, r2, r4, ror #27
   12fb4:	ldr	r3, [sp, #4]
   12fb8:	eor	r9, r9, r6
   12fbc:	ror	r6, r4, #2
   12fc0:	eor	r9, r9, r8
   12fc4:	ldr	r8, [sp, #60]	; 0x3c
   12fc8:	ror	r9, r9, #31
   12fcc:	mov	sl, r9
   12fd0:	ldr	r9, [sp, #48]	; 0x30
   12fd4:	eor	ip, ip, r8
   12fd8:	ldr	r8, [sp, #4]
   12fdc:	eor	ip, ip, r1
   12fe0:	str	sl, [sp, #52]	; 0x34
   12fe4:	add	sl, sl, r3
   12fe8:	eor	ip, ip, fp
   12fec:	ldr	fp, [sp, #16]
   12ff0:	ror	ip, ip, #31
   12ff4:	add	r8, r9, r8
   12ff8:	eor	r9, r5, r0
   12ffc:	eor	r9, r9, r4
   13000:	add	r7, r8, r7
   13004:	ldr	r8, [sp, #48]	; 0x30
   13008:	add	r7, r9, r7
   1300c:	eor	lr, lr, fp
   13010:	str	ip, [sp, #56]	; 0x38
   13014:	add	r9, r7, r2, ror #27
   13018:	ldr	r7, [sp, #32]
   1301c:	add	r5, sl, r5
   13020:	eor	fp, r0, r6
   13024:	ror	ip, r2, #2
   13028:	ldr	sl, [sp, #24]
   1302c:	eor	r2, r2, fp
   13030:	ror	r4, r9, #2
   13034:	add	r5, r2, r5
   13038:	ldr	r2, [sp, #4]
   1303c:	add	r5, r5, r9, ror #27
   13040:	eor	lr, lr, r7
   13044:	eor	lr, lr, r8
   13048:	ldr	fp, [sp, #36]	; 0x24
   1304c:	mov	r7, sl
   13050:	ldr	r8, [sp, #60]	; 0x3c
   13054:	eor	r7, r7, r8
   13058:	ror	r8, lr, #31
   1305c:	ldr	lr, [sp, #56]	; 0x38
   13060:	eor	r7, r7, fp
   13064:	ror	fp, r5, #2
   13068:	mov	r3, r8
   1306c:	str	r3, [sp, #60]	; 0x3c
   13070:	add	r8, lr, r2
   13074:	eor	lr, r6, ip
   13078:	ldr	r2, [sp, #16]
   1307c:	eor	r9, r9, lr
   13080:	add	r0, r8, r0
   13084:	ldr	lr, [sp, #52]	; 0x34
   13088:	add	r9, r9, r0
   1308c:	mov	r0, r3
   13090:	add	r9, r9, r5, ror #27
   13094:	ldr	r3, [sp, #4]
   13098:	ldr	r8, [sp, #64]	; 0x40
   1309c:	eor	r7, r7, lr
   130a0:	ldr	lr, [sp, #56]	; 0x38
   130a4:	add	r0, r0, r3
   130a8:	add	r6, r0, r6
   130ac:	eor	r8, r2, r8
   130b0:	ror	r2, r7, #31
   130b4:	str	r2, [sp, #12]
   130b8:	ldr	r2, [sp, #40]	; 0x28
   130bc:	eor	r8, r8, r2
   130c0:	eor	r2, ip, r4
   130c4:	eor	r8, r8, lr
   130c8:	eor	r5, r5, r2
   130cc:	ldr	r2, [sp, #4]
   130d0:	ror	r0, r8, #31
   130d4:	add	r6, r5, r6
   130d8:	ldr	r5, [sp, #12]
   130dc:	add	r6, r6, r9, ror #27
   130e0:	mov	r3, r0
   130e4:	ldr	r0, [sp, #20]
   130e8:	ldr	r8, [sp, #44]	; 0x2c
   130ec:	add	lr, r5, r2
   130f0:	eor	r2, r4, fp
   130f4:	eor	r2, r2, r9
   130f8:	add	ip, lr, ip
   130fc:	ldr	lr, [sp, #4]
   13100:	eor	r7, sl, r0
   13104:	ror	r0, r9, #2
   13108:	add	ip, r2, ip
   1310c:	ldr	r9, [sp, #60]	; 0x3c
   13110:	add	ip, ip, r6, ror #27
   13114:	eor	r5, r7, r8
   13118:	ror	r8, r6, #2
   1311c:	ldr	r7, [sp, #64]	; 0x40
   13120:	eor	r5, r5, r9
   13124:	ldr	r9, [sp, #28]
   13128:	ror	sl, r5, #31
   1312c:	eor	r5, fp, r0
   13130:	eor	r6, r6, r5
   13134:	ldr	r5, [sp, #12]
   13138:	mov	r2, sl
   1313c:	add	sl, r3, lr
   13140:	add	r4, sl, r4
   13144:	eor	r7, r7, r9
   13148:	ldr	r9, [sp, #84]	; 0x54
   1314c:	add	r4, r6, r4
   13150:	add	r4, r4, ip, ror #27
   13154:	eor	r7, r7, r9
   13158:	ror	r9, ip, #2
   1315c:	eor	r7, r7, r5
   13160:	ldr	r5, [sp, #20]
   13164:	ror	r6, r7, #31
   13168:	ldr	r7, [sp, #32]
   1316c:	str	r6, [sp, #64]	; 0x40
   13170:	ldr	r6, [sp, #48]	; 0x30
   13174:	eor	sl, r5, r1
   13178:	ldr	r5, [sp, #4]
   1317c:	eor	sl, sl, r6
   13180:	mov	r6, r2
   13184:	eor	sl, sl, r3
   13188:	eor	r2, r0, r8
   1318c:	ror	sl, sl, #31
   13190:	eor	ip, ip, r2
   13194:	ldr	r2, [sp, #28]
   13198:	add	lr, r6, lr
   1319c:	add	fp, lr, fp
   131a0:	ror	lr, r4, #2
   131a4:	str	sl, [sp, #68]	; 0x44
   131a8:	add	ip, ip, fp
   131ac:	ldr	sl, [sp, #64]	; 0x40
   131b0:	add	ip, ip, r4, ror #27
   131b4:	eor	r2, r2, r7
   131b8:	eor	r7, r8, r9
   131bc:	eor	r4, r4, r7
   131c0:	add	r5, sl, r5
   131c4:	ldr	sl, [sp, #52]	; 0x34
   131c8:	add	r0, r5, r0
   131cc:	str	r6, [sp, #88]	; 0x58
   131d0:	add	r0, r4, r0
   131d4:	ldr	r7, [sp, #36]	; 0x24
   131d8:	add	r0, r0, ip, ror #27
   131dc:	eor	r2, r2, sl
   131e0:	ror	r5, r0, #2
   131e4:	eor	r2, r2, r6
   131e8:	ror	r6, ip, #2
   131ec:	ror	fp, r2, #31
   131f0:	ldr	r2, [sp, #4]
   131f4:	eor	r1, r1, r7
   131f8:	mov	r4, fp
   131fc:	ldr	fp, [sp, #68]	; 0x44
   13200:	add	sl, fp, r2
   13204:	ldr	fp, [sp, #56]	; 0x38
   13208:	eor	r2, r9, lr
   1320c:	eor	ip, ip, r2
   13210:	add	r8, sl, r8
   13214:	ldr	r2, [sp, #32]
   13218:	add	ip, ip, r8
   1321c:	mov	r8, r4
   13220:	eor	r4, lr, r6
   13224:	add	ip, ip, r0, ror #27
   13228:	str	r3, [sp, #32]
   1322c:	eor	r0, r0, r4
   13230:	str	r8, [sp, #92]	; 0x5c
   13234:	eor	r1, r1, fp
   13238:	ldr	fp, [sp, #64]	; 0x40
   1323c:	eor	r1, r1, fp
   13240:	ldr	fp, [sp, #40]	; 0x28
   13244:	ror	r1, r1, #31
   13248:	mov	sl, r1
   1324c:	ldr	r1, [sp, #68]	; 0x44
   13250:	eor	fp, r2, fp
   13254:	ldr	r2, [sp, #60]	; 0x3c
   13258:	eor	fp, fp, r2
   1325c:	ldr	r2, [sp, #4]
   13260:	eor	fp, fp, r1
   13264:	ror	r1, fp, #31
   13268:	ldr	fp, [sp, #44]	; 0x2c
   1326c:	str	sl, [sp, #44]	; 0x2c
   13270:	mov	r4, r1
   13274:	ror	r1, ip, #2
   13278:	add	r2, r8, r2
   1327c:	add	r2, r2, r9
   13280:	str	r4, [sp, #72]	; 0x48
   13284:	add	r2, r0, r2
   13288:	eor	r9, r7, fp
   1328c:	ldr	r7, [sp, #4]
   13290:	add	r0, r2, ip, ror #27
   13294:	ldr	r2, [sp, #12]
   13298:	add	r7, sl, r7
   1329c:	eor	sl, r6, r5
   132a0:	eor	ip, ip, sl
   132a4:	add	lr, r7, lr
   132a8:	ldr	r7, [sp, #40]	; 0x28
   132ac:	eor	r9, r9, r2
   132b0:	add	lr, ip, lr
   132b4:	eor	r9, r9, r8
   132b8:	ldr	r2, [sp, #4]
   132bc:	ror	r8, r0, #2
   132c0:	ror	ip, r9, #31
   132c4:	ldr	r9, [sp, #84]	; 0x54
   132c8:	add	lr, lr, r0, ror #27
   132cc:	str	ip, [sp, #76]	; 0x4c
   132d0:	ror	sl, lr, #2
   132d4:	add	r4, r4, r2
   132d8:	eor	r2, r5, r1
   132dc:	eor	r2, r2, r0
   132e0:	mov	r0, r3
   132e4:	ldr	r3, [sp, #4]
   132e8:	eor	r7, r7, r9
   132ec:	add	r6, r4, r6
   132f0:	eor	r7, r7, r0
   132f4:	ldr	r0, [sp, #44]	; 0x2c
   132f8:	add	r2, r2, r6
   132fc:	add	r2, r2, lr, ror #27
   13300:	ldr	r6, [sp, #48]	; 0x30
   13304:	add	r3, ip, r3
   13308:	eor	ip, r1, r8
   1330c:	add	r3, r3, r5
   13310:	eor	lr, lr, ip
   13314:	ldr	ip, [sp, #80]	; 0x50
   13318:	eor	r7, r7, r0
   1331c:	add	lr, lr, r3
   13320:	ror	r0, r2, #2
   13324:	ror	r7, r7, #31
   13328:	ldr	r3, [sp, #72]	; 0x48
   1332c:	orr	r9, r2, sl
   13330:	eor	r4, fp, r6
   13334:	add	lr, lr, r2, ror #27
   13338:	and	r9, r9, r8
   1333c:	and	r2, r2, sl
   13340:	str	r7, [sp, #4]
   13344:	orr	r9, r9, r2
   13348:	ldr	r5, [sp, #4]
   1334c:	ldr	r7, [sp, #88]	; 0x58
   13350:	eor	r4, r4, r7
   13354:	eor	r7, r4, r3
   13358:	add	r3, r5, ip
   1335c:	ldr	r5, [sp, #84]	; 0x54
   13360:	ror	r7, r7, #31
   13364:	add	r1, r3, r1
   13368:	mov	r3, ip
   1336c:	add	r9, r9, r1
   13370:	orr	r4, lr, r0
   13374:	add	r9, r9, lr, ror #27
   13378:	and	r4, r4, sl
   1337c:	str	r7, [sp, #48]	; 0x30
   13380:	ldr	r7, [sp, #52]	; 0x34
   13384:	eor	fp, r5, r7
   13388:	ldr	r5, [sp, #64]	; 0x40
   1338c:	ror	r7, lr, #2
   13390:	and	lr, lr, r0
   13394:	ldr	r1, [sp, #76]	; 0x4c
   13398:	orr	r4, r4, lr
   1339c:	eor	fp, fp, r5
   133a0:	ror	r5, r9, #2
   133a4:	eor	fp, fp, r1
   133a8:	ldr	r1, [sp, #48]	; 0x30
   133ac:	ror	ip, fp, #31
   133b0:	ldr	fp, [sp, #56]	; 0x38
   133b4:	str	ip, [sp, #16]
   133b8:	orr	ip, r9, r7
   133bc:	add	r1, r1, r3
   133c0:	and	ip, ip, r0
   133c4:	ldr	lr, [sp, #16]
   133c8:	add	r8, r1, r8
   133cc:	ldr	r1, [sp, #68]	; 0x44
   133d0:	eor	r2, r6, fp
   133d4:	add	r4, r4, r8
   133d8:	add	r4, r4, r9, ror #27
   133dc:	ldr	r6, [sp, #4]
   133e0:	eor	r2, r2, r1
   133e4:	mov	r1, r3
   133e8:	ror	r3, r4, #2
   133ec:	add	r8, lr, r1
   133f0:	eor	r6, r2, r6
   133f4:	and	r2, r9, r7
   133f8:	ror	r9, r6, #31
   133fc:	ldr	r6, [sp, #60]	; 0x3c
   13400:	orr	r2, ip, r2
   13404:	add	sl, r8, sl
   13408:	mov	r8, r1
   1340c:	ldr	r1, [sp, #12]
   13410:	add	r2, r2, sl
   13414:	str	r9, [sp, #20]
   13418:	add	r2, r2, r4, ror #27
   1341c:	ldr	ip, [sp, #92]	; 0x5c
   13420:	ldr	r9, [sp, #52]	; 0x34
   13424:	ldr	sl, [sp, #20]
   13428:	eor	r9, r9, r6
   1342c:	orr	r6, r4, r5
   13430:	eor	r9, r9, ip
   13434:	ldr	ip, [sp, #48]	; 0x30
   13438:	and	r6, r6, r7
   1343c:	and	r4, r4, r5
   13440:	add	sl, sl, r8
   13444:	orr	r4, r6, r4
   13448:	mov	r6, r8
   1344c:	ldr	r8, [sp, #60]	; 0x3c
   13450:	add	r0, sl, r0
   13454:	add	r0, r4, r0
   13458:	ldr	sl, [sp, #20]
   1345c:	eor	r9, r9, ip
   13460:	eor	ip, fp, r1
   13464:	add	r0, r0, r2, ror #27
   13468:	ldr	fp, [sp, #44]	; 0x2c
   1346c:	ror	r9, r9, #31
   13470:	orr	r1, r2, r3
   13474:	and	r1, r1, r5
   13478:	str	r9, [sp, #24]
   1347c:	ror	r9, r2, #2
   13480:	and	r2, r2, r3
   13484:	orr	r2, r1, r2
   13488:	eor	ip, ip, fp
   1348c:	ldr	fp, [sp, #24]
   13490:	eor	lr, ip, lr
   13494:	ror	lr, lr, #31
   13498:	add	ip, fp, r6
   1349c:	ldr	fp, [sp, #32]
   134a0:	add	r7, ip, r7
   134a4:	str	lr, [sp, #28]
   134a8:	ldr	ip, [sp, #72]	; 0x48
   134ac:	eor	lr, r8, fp
   134b0:	orr	r8, r0, r9
   134b4:	ror	fp, r0, #2
   134b8:	and	r8, r8, r3
   134bc:	eor	lr, lr, ip
   134c0:	add	ip, r2, r7
   134c4:	ldr	r2, [sp, #28]
   134c8:	eor	r4, lr, sl
   134cc:	add	ip, ip, r0, ror #27
   134d0:	and	r0, r0, r9
   134d4:	ror	r7, r4, #31
   134d8:	orr	r0, r8, r0
   134dc:	orr	lr, ip, fp
   134e0:	ror	sl, ip, #2
   134e4:	mov	r4, r7
   134e8:	ldr	r7, [sp, #88]	; 0x58
   134ec:	and	lr, lr, r9
   134f0:	add	r1, r2, r6
   134f4:	ldr	r2, [sp, #12]
   134f8:	add	r5, r1, r5
   134fc:	add	r0, r0, r5
   13500:	str	r4, [sp, #52]	; 0x34
   13504:	ldr	r5, [sp, #24]
   13508:	add	r0, r0, ip, ror #27
   1350c:	and	ip, ip, fp
   13510:	orr	ip, lr, ip
   13514:	mov	lr, r6
   13518:	eor	r7, r2, r7
   1351c:	ldr	r2, [sp, #76]	; 0x4c
   13520:	eor	r2, r7, r2
   13524:	ldr	r7, [sp, #64]	; 0x40
   13528:	eor	r2, r2, r5
   1352c:	add	r5, r4, r6
   13530:	ror	r4, r0, #2
   13534:	ror	r6, r2, #31
   13538:	ldr	r2, [sp, #32]
   1353c:	add	r3, r5, r3
   13540:	add	r3, ip, r3
   13544:	add	r3, r3, r0, ror #27
   13548:	str	r6, [sp, #12]
   1354c:	ldr	r5, [sp, #4]
   13550:	eor	r8, r2, r7
   13554:	orr	r2, r0, sl
   13558:	ldr	r6, [sp, #28]
   1355c:	and	r2, r2, fp
   13560:	and	r0, r0, sl
   13564:	orr	r0, r2, r0
   13568:	ldr	r2, [sp, #48]	; 0x30
   1356c:	eor	r8, r8, r5
   13570:	ldr	r1, [sp, #88]	; 0x58
   13574:	eor	r8, r8, r6
   13578:	ldr	r6, [sp, #12]
   1357c:	ror	r5, r8, #31
   13580:	ldr	r8, [sp, #68]	; 0x44
   13584:	str	r5, [sp, #32]
   13588:	add	ip, r6, lr
   1358c:	ror	r6, r3, #2
   13590:	add	r9, ip, r9
   13594:	mov	ip, lr
   13598:	add	r9, r0, r9
   1359c:	ldr	r0, [sp, #52]	; 0x34
   135a0:	eor	r5, r1, r8
   135a4:	eor	r5, r5, r2
   135a8:	orr	r1, r3, r4
   135ac:	add	r9, r9, r3, ror #27
   135b0:	and	r1, r1, sl
   135b4:	and	r3, r3, r4
   135b8:	orr	r3, r1, r3
   135bc:	ldr	r1, [sp, #12]
   135c0:	ror	lr, r9, #2
   135c4:	eor	r5, r5, r0
   135c8:	ldr	r0, [sp, #32]
   135cc:	add	r2, r0, ip
   135d0:	ror	r0, r5, #31
   135d4:	ldr	r5, [sp, #92]	; 0x5c
   135d8:	add	fp, r2, fp
   135dc:	add	fp, r3, fp
   135e0:	orr	r3, r9, r6
   135e4:	ldr	r2, [sp, #44]	; 0x2c
   135e8:	str	r0, [sp, #36]	; 0x24
   135ec:	add	fp, fp, r9, ror #27
   135f0:	and	r3, r3, r4
   135f4:	ldr	r0, [sp, #16]
   135f8:	and	r9, r9, r6
   135fc:	eor	r7, r7, r5
   13600:	eor	r2, r8, r2
   13604:	ldr	r8, [sp, #92]	; 0x5c
   13608:	eor	r5, r7, r0
   1360c:	ldr	r7, [sp, #36]	; 0x24
   13610:	ror	r0, fp, #2
   13614:	eor	r5, r5, r1
   13618:	add	r1, r7, ip
   1361c:	ror	r7, r5, #31
   13620:	orr	r5, r3, r9
   13624:	ldr	r9, [sp, #32]
   13628:	add	r1, r1, sl
   1362c:	mov	sl, ip
   13630:	add	r5, r5, r1
   13634:	orr	r3, fp, lr
   13638:	str	r7, [sp, #40]	; 0x28
   1363c:	add	r5, r5, fp, ror #27
   13640:	and	r3, r3, r6
   13644:	ldr	r7, [sp, #20]
   13648:	and	fp, fp, lr
   1364c:	ldr	ip, [sp, #72]	; 0x48
   13650:	eor	r2, r2, r7
   13654:	ror	r7, r5, #2
   13658:	eor	r2, r2, r9
   1365c:	ldr	r9, [sp, #40]	; 0x28
   13660:	add	r1, r9, sl
   13664:	ror	r9, r2, #31
   13668:	eor	r2, r8, ip
   1366c:	ldr	r8, [sp, #24]
   13670:	orr	ip, r3, fp
   13674:	add	r4, r1, r4
   13678:	add	ip, ip, r4
   1367c:	add	r4, r9, sl
   13680:	ldr	r1, [sp, #44]	; 0x2c
   13684:	add	ip, ip, r5, ror #27
   13688:	mov	fp, sl
   1368c:	str	r9, [sp, #64]	; 0x40
   13690:	add	r6, r4, r6
   13694:	ldr	r9, [sp, #28]
   13698:	eor	r3, r2, r8
   1369c:	orr	r2, r5, r0
   136a0:	ldr	r8, [sp, #36]	; 0x24
   136a4:	and	r5, r5, r0
   136a8:	and	r2, r2, lr
   136ac:	eor	r3, r3, r8
   136b0:	ldr	r8, [sp, #76]	; 0x4c
   136b4:	ror	r3, r3, #31
   136b8:	mov	sl, r3
   136bc:	orr	r3, r2, r5
   136c0:	ldr	r5, [sp, #40]	; 0x28
   136c4:	orr	r2, ip, r7
   136c8:	add	r3, r3, r6
   136cc:	eor	r1, r1, r8
   136d0:	add	r3, r3, ip, ror #27
   136d4:	and	r2, r2, r0
   136d8:	eor	r9, r1, r9
   136dc:	ror	r8, ip, #2
   136e0:	and	ip, ip, r7
   136e4:	orr	r4, r2, ip
   136e8:	str	sl, [sp, #56]	; 0x38
   136ec:	add	sl, sl, fp
   136f0:	eor	r9, r9, r5
   136f4:	ldr	r5, [sp, #4]
   136f8:	add	lr, sl, lr
   136fc:	ror	r1, r9, #31
   13700:	mov	sl, fp
   13704:	add	r4, r4, lr
   13708:	add	r4, r4, r3, ror #27
   1370c:	mov	r9, r1
   13710:	ldr	r1, [sp, #72]	; 0x48
   13714:	ror	lr, r4, #2
   13718:	eor	r6, r1, r5
   1371c:	ldr	r1, [sp, #52]	; 0x34
   13720:	ror	r5, r3, #2
   13724:	ldr	ip, [sp, #64]	; 0x40
   13728:	str	r9, [sp, #60]	; 0x3c
   1372c:	ldr	r2, [sp, #76]	; 0x4c
   13730:	eor	r6, r6, r1
   13734:	orr	r1, r3, r8
   13738:	and	r1, r1, r7
   1373c:	and	r3, r3, r8
   13740:	eor	r6, r6, ip
   13744:	add	ip, r9, fp
   13748:	ror	fp, r6, #31
   1374c:	ldr	r6, [sp, #12]
   13750:	add	r0, ip, r0
   13754:	ldr	ip, [sp, #16]
   13758:	str	fp, [sp, #44]	; 0x2c
   1375c:	ldr	fp, [sp, #48]	; 0x30
   13760:	eor	r9, r2, fp
   13764:	orr	r2, r1, r3
   13768:	ldr	r3, [sp, #56]	; 0x38
   1376c:	eor	r9, r9, r6
   13770:	add	r2, r2, r0
   13774:	orr	r0, r4, r5
   13778:	add	r2, r2, r4, ror #27
   1377c:	and	r4, r4, r5
   13780:	and	r0, r0, r8
   13784:	eor	r9, r9, r3
   13788:	ldr	r3, [sp, #44]	; 0x2c
   1378c:	ror	r1, r9, #31
   13790:	mov	r9, r1
   13794:	ldr	r1, [sp, #4]
   13798:	add	r6, r3, sl
   1379c:	str	r9, [sp, #48]	; 0x30
   137a0:	add	r6, r6, r7
   137a4:	eor	r3, r1, ip
   137a8:	orr	ip, r0, r4
   137ac:	ldr	r0, [sp, #32]
   137b0:	add	ip, ip, r6
   137b4:	orr	r4, r2, lr
   137b8:	ror	r1, r2, #2
   137bc:	add	ip, ip, r2, ror #27
   137c0:	and	r4, r4, r5
   137c4:	and	r2, r2, lr
   137c8:	eor	r3, r3, r0
   137cc:	ldr	r0, [sp, #60]	; 0x3c
   137d0:	eor	r3, r3, r0
   137d4:	mov	r0, r9
   137d8:	add	r6, r0, sl
   137dc:	ldr	r0, [sp, #20]
   137e0:	mov	r9, sl
   137e4:	ror	sl, r3, #31
   137e8:	add	r8, r6, r8
   137ec:	ror	r3, ip, #2
   137f0:	add	r6, sl, r9
   137f4:	add	r5, r6, r5
   137f8:	eor	r7, fp, r0
   137fc:	ldr	fp, [sp, #36]	; 0x24
   13800:	orr	r0, r4, r2
   13804:	add	r0, r0, r8
   13808:	mov	r8, r9
   1380c:	ldr	r9, [sp, #24]
   13810:	orr	r2, ip, r1
   13814:	add	r0, r0, ip, ror #27
   13818:	and	r2, r2, lr
   1381c:	and	ip, ip, r1
   13820:	orr	r4, r2, ip
   13824:	ldr	r2, [sp, #40]	; 0x28
   13828:	orr	ip, r0, r3
   1382c:	eor	r7, r7, fp
   13830:	add	r4, r4, r5
   13834:	ldr	fp, [sp, #44]	; 0x2c
   13838:	add	r4, r4, r0, ror #27
   1383c:	and	ip, ip, r1
   13840:	ldr	r5, [sp, #48]	; 0x30
   13844:	eor	r7, r7, fp
   13848:	ror	r7, r7, #31
   1384c:	str	r7, [sp, #4]
   13850:	ldr	r7, [sp, #16]
   13854:	eor	fp, r7, r9
   13858:	ldr	r7, [sp, #4]
   1385c:	ror	r9, r0, #2
   13860:	eor	fp, fp, r2
   13864:	and	r0, r0, r3
   13868:	eor	fp, fp, r5
   1386c:	ldr	r2, [sp, #20]
   13870:	ror	fp, fp, #31
   13874:	ldr	r5, [sp, #28]
   13878:	add	r7, r7, r8
   1387c:	ror	r8, r4, #2
   13880:	add	lr, r7, lr
   13884:	ldr	r7, [sp, #64]	; 0x40
   13888:	eor	r6, r2, r5
   1388c:	orr	r2, ip, r0
   13890:	ldr	ip, [sp, #24]
   13894:	add	r2, r2, lr
   13898:	orr	r5, r4, r9
   1389c:	eor	r6, r6, r7
   138a0:	ldr	r7, [sp, #52]	; 0x34
   138a4:	add	r2, r2, r4, ror #27
   138a8:	eor	r6, r6, sl
   138ac:	and	r5, r5, r3
   138b0:	ldr	r0, [sp, #80]	; 0x50
   138b4:	and	r4, r4, r9
   138b8:	eor	lr, ip, r7
   138bc:	orr	r7, r2, r8
   138c0:	and	r7, r7, r9
   138c4:	add	ip, fp, r0
   138c8:	ror	r0, r6, #31
   138cc:	ldr	r6, [sp, #56]	; 0x38
   138d0:	add	r1, ip, r1
   138d4:	ldr	ip, [sp, #4]
   138d8:	str	r0, [sp, #16]
   138dc:	ror	r0, r2, #2
   138e0:	eor	lr, lr, r6
   138e4:	orr	r6, r5, r4
   138e8:	add	r6, r6, r1
   138ec:	eor	lr, lr, ip
   138f0:	ldr	ip, [sp, #28]
   138f4:	add	r6, r6, r2, ror #27
   138f8:	ror	r1, lr, #31
   138fc:	and	r2, r2, r8
   13900:	ldr	r5, [sp, #12]
   13904:	orr	r2, r7, r2
   13908:	str	r1, [sp, #20]
   1390c:	ldr	r7, [sp, #52]	; 0x34
   13910:	ldr	r1, [sp, #60]	; 0x3c
   13914:	eor	ip, ip, r5
   13918:	ror	r5, r6, #2
   1391c:	eor	lr, ip, r1
   13920:	ldr	ip, [sp, #16]
   13924:	eor	lr, lr, fp
   13928:	ldr	r1, [sp, #80]	; 0x50
   1392c:	ror	lr, lr, #31
   13930:	str	lr, [sp, #24]
   13934:	ldr	lr, [sp, #8]
   13938:	add	r1, ip, r1
   1393c:	ldr	ip, [sp, #32]
   13940:	add	r3, r1, r3
   13944:	eor	r1, r8, r0
   13948:	eor	r1, r1, r6
   1394c:	eor	r4, r7, ip
   13950:	add	ip, r2, r3
   13954:	ldr	r2, [sp, #20]
   13958:	add	ip, ip, r6, ror #27
   1395c:	ldr	r6, [sp, #12]
   13960:	ldr	r7, [sp, #44]	; 0x2c
   13964:	add	r3, r2, lr
   13968:	add	r3, r3, r9
   1396c:	ldr	r9, [sp, #16]
   13970:	add	r1, r1, r3
   13974:	ldr	r3, [sp, #24]
   13978:	add	r1, r1, ip, ror #27
   1397c:	eor	r4, r4, r7
   13980:	ldr	r2, [sp, #36]	; 0x24
   13984:	eor	r4, r4, r9
   13988:	ror	r9, ip, #2
   1398c:	ldr	r7, [sp, #48]	; 0x30
   13990:	eor	r2, r6, r2
   13994:	ror	r6, r4, #31
   13998:	eor	r2, r2, r7
   1399c:	ror	r7, r1, #2
   139a0:	str	r6, [sp, #12]
   139a4:	mov	r6, lr
   139a8:	add	lr, r3, lr
   139ac:	add	r8, lr, r8
   139b0:	ldr	lr, [sp, #20]
   139b4:	eor	r3, r0, r5
   139b8:	eor	r3, r3, ip
   139bc:	add	r3, r3, r8
   139c0:	ldr	ip, [sp, #32]
   139c4:	eor	r2, r2, lr
   139c8:	ldr	lr, [sp, #40]	; 0x28
   139cc:	ror	r8, r2, #31
   139d0:	eor	r2, r5, r9
   139d4:	eor	r2, r2, r1
   139d8:	str	r8, [sp, #28]
   139dc:	ldr	r8, [sp, #12]
   139e0:	eor	r4, ip, lr
   139e4:	add	lr, r3, r1, ror #27
   139e8:	eor	r4, r4, sl
   139ec:	ldr	r1, [sp, #36]	; 0x24
   139f0:	add	r3, r8, r6
   139f4:	ldr	r8, [sp, #24]
   139f8:	add	r0, r3, r0
   139fc:	eor	r3, r9, r7
   13a00:	add	r2, r2, r0
   13a04:	ldr	r0, [sp, #28]
   13a08:	eor	r3, r3, lr
   13a0c:	add	r2, r2, lr, ror #27
   13a10:	eor	r4, r4, r8
   13a14:	ror	r8, lr, #2
   13a18:	ror	ip, r4, #31
   13a1c:	ldr	r4, [sp, #64]	; 0x40
   13a20:	ror	lr, r2, #2
   13a24:	str	ip, [sp, #32]
   13a28:	add	ip, r0, r6
   13a2c:	ldr	r0, [sp, #4]
   13a30:	add	ip, ip, r5
   13a34:	eor	r1, r1, r4
   13a38:	add	r3, r3, ip
   13a3c:	ldr	r5, [sp, #40]	; 0x28
   13a40:	add	ip, r3, r2, ror #27
   13a44:	eor	r1, r1, r0
   13a48:	ldr	r0, [sp, #12]
   13a4c:	eor	r1, r1, r0
   13a50:	ldr	r0, [sp, #56]	; 0x38
   13a54:	ror	r1, r1, #31
   13a58:	eor	r5, r5, r0
   13a5c:	ldr	r0, [sp, #32]
   13a60:	str	r1, [sp, #36]	; 0x24
   13a64:	eor	r1, r7, r8
   13a68:	eor	r5, r5, fp
   13a6c:	ldr	r3, [sp, #28]
   13a70:	eor	r1, r1, r2
   13a74:	mov	r2, r4
   13a78:	ror	r4, ip, #2
   13a7c:	add	r0, r0, r6
   13a80:	eor	r6, r8, lr
   13a84:	add	r0, r0, r9
   13a88:	ldr	r9, [sp, #60]	; 0x3c
   13a8c:	add	r0, r1, r0
   13a90:	eor	r5, r5, r3
   13a94:	ldr	r1, [sp, #8]
   13a98:	add	r0, r0, ip, ror #27
   13a9c:	ror	r5, r5, #31
   13aa0:	ldr	r3, [sp, #36]	; 0x24
   13aa4:	eor	r2, r2, r9
   13aa8:	ldr	r9, [sp, #16]
   13aac:	eor	r2, r2, r9
   13ab0:	add	r9, r3, r1
   13ab4:	ldr	r3, [sp, #32]
   13ab8:	add	r9, r9, r7
   13abc:	ldr	r7, [sp, #44]	; 0x2c
   13ac0:	eor	r2, r2, r3
   13ac4:	eor	r3, r6, ip
   13ac8:	ldr	r6, [sp, #56]	; 0x38
   13acc:	ror	ip, r2, #31
   13ad0:	add	r2, r5, r1
   13ad4:	eor	r1, lr, r4
   13ad8:	add	r8, r2, r8
   13adc:	ldr	r2, [sp, #36]	; 0x24
   13ae0:	eor	r1, r1, r0
   13ae4:	add	r1, r1, r8
   13ae8:	str	ip, [sp, #40]	; 0x28
   13aec:	eor	ip, r6, r7
   13af0:	add	r6, r3, r9
   13af4:	ldr	r3, [sp, #20]
   13af8:	add	r6, r6, r0, ror #27
   13afc:	ror	r7, r0, #2
   13b00:	ldr	r0, [sp, #48]	; 0x30
   13b04:	eor	r8, r4, r7
   13b08:	eor	ip, ip, r3
   13b0c:	ldr	r3, [sp, #8]
   13b10:	eor	r8, r8, r6
   13b14:	eor	ip, ip, r2
   13b18:	ldr	r2, [sp, #60]	; 0x3c
   13b1c:	ror	ip, ip, #31
   13b20:	str	ip, [sp, #52]	; 0x34
   13b24:	eor	r9, r2, r0
   13b28:	ldr	r2, [sp, #40]	; 0x28
   13b2c:	ror	r0, r6, #2
   13b30:	add	r3, r2, r3
   13b34:	ldr	r2, [sp, #24]
   13b38:	add	r3, r3, lr
   13b3c:	ldr	lr, [sp, #44]	; 0x2c
   13b40:	add	r3, r8, r3
   13b44:	ldr	r8, [sp, #12]
   13b48:	eor	r9, r9, r2
   13b4c:	add	r2, r1, r6, ror #27
   13b50:	eor	r9, r9, r5
   13b54:	ldr	r1, [sp, #52]	; 0x34
   13b58:	eor	r6, lr, sl
   13b5c:	ror	ip, r9, #31
   13b60:	ldr	r9, [sp, #8]
   13b64:	add	r3, r3, r2, ror #27
   13b68:	eor	r6, r6, r8
   13b6c:	ror	r8, r2, #2
   13b70:	str	r8, [sp, #8]
   13b74:	ldr	r8, [sp, #40]	; 0x28
   13b78:	add	lr, r1, r9
   13b7c:	eor	r1, r7, r0
   13b80:	eor	r1, r1, r2
   13b84:	add	lr, lr, r4
   13b88:	ldr	r4, [sp, #28]
   13b8c:	add	r1, r1, lr
   13b90:	add	r1, r1, r3, ror #27
   13b94:	ldr	lr, [sp, #8]
   13b98:	eor	r6, r6, r8
   13b9c:	add	r8, ip, r9
   13ba0:	ror	r2, r6, #31
   13ba4:	ldr	r6, [sp, #4]
   13ba8:	add	r7, r8, r7
   13bac:	str	r2, [sp, #44]	; 0x2c
   13bb0:	eor	lr, r0, lr
   13bb4:	ldr	r8, [sp, #44]	; 0x2c
   13bb8:	eor	lr, lr, r3
   13bbc:	add	lr, lr, r7
   13bc0:	ldr	r2, [sp, #48]	; 0x30
   13bc4:	eor	r2, r2, r6
   13bc8:	ror	r6, r3, #2
   13bcc:	ldr	r3, [sp, #52]	; 0x34
   13bd0:	eor	r2, r2, r4
   13bd4:	add	r4, r8, r9
   13bd8:	ldr	r8, [sp, #8]
   13bdc:	add	r4, r4, r0
   13be0:	eor	r2, r2, r3
   13be4:	eor	r3, sl, fp
   13be8:	ror	sl, r1, #2
   13bec:	ror	r2, r2, #31
   13bf0:	eor	r7, r8, r6
   13bf4:	ldr	r8, [sp, #32]
   13bf8:	str	ip, [sp, #48]	; 0x30
   13bfc:	add	r0, r2, r9
   13c00:	eor	r3, r3, r8
   13c04:	add	r8, lr, r1, ror #27
   13c08:	eor	r1, r1, r7
   13c0c:	ldr	r7, [sp, #4]
   13c10:	add	r4, r1, r4
   13c14:	eor	r3, r3, ip
   13c18:	add	r4, r4, r8, ror #27
   13c1c:	ldr	lr, [sp, #16]
   13c20:	ror	r3, r3, #31
   13c24:	ldr	r1, [sp, #36]	; 0x24
   13c28:	ldr	ip, [sp, #44]	; 0x2c
   13c2c:	eor	r7, r7, lr
   13c30:	eor	lr, r6, sl
   13c34:	eor	lr, lr, r8
   13c38:	eor	r7, r7, r1
   13c3c:	mov	r1, r9
   13c40:	ror	r9, r8, #2
   13c44:	ldr	r8, [sp, #20]
   13c48:	eor	r7, r7, ip
   13c4c:	ldr	ip, [sp, #8]
   13c50:	ror	r7, r7, #31
   13c54:	eor	fp, fp, r8
   13c58:	ror	r8, r4, #2
   13c5c:	eor	r5, r5, fp
   13c60:	ldr	fp, [sp, #24]
   13c64:	add	r0, r0, ip
   13c68:	mov	ip, r1
   13c6c:	add	r1, r3, r1
   13c70:	add	lr, lr, r0
   13c74:	add	r1, r1, r6
   13c78:	eor	r0, sl, r9
   13c7c:	ldr	r6, [sp, #16]
   13c80:	add	lr, lr, r4, ror #27
   13c84:	eor	r0, r0, r4
   13c88:	add	r4, r7, ip
   13c8c:	str	ip, [sp, #8]
   13c90:	add	r0, r0, r1
   13c94:	eor	r1, r9, r8
   13c98:	ldr	ip, [sp, #40]	; 0x28
   13c9c:	add	r0, r0, lr, ror #27
   13ca0:	eor	r1, r1, lr
   13ca4:	add	sl, r4, sl
   13ca8:	eor	r5, r5, r2
   13cac:	eor	r6, r6, fp
   13cb0:	ror	fp, lr, #2
   13cb4:	ldr	r4, [sp, #8]
   13cb8:	ror	r5, r5, #31
   13cbc:	add	sl, r1, sl
   13cc0:	ldr	lr, [sp, #20]
   13cc4:	ror	r1, r0, #2
   13cc8:	eor	r6, r6, ip
   13ccc:	add	sl, sl, r0, ror #27
   13cd0:	eor	r6, r6, r3
   13cd4:	ldr	r3, [sp, #12]
   13cd8:	ror	r6, r6, #31
   13cdc:	ldr	ip, [sp, #52]	; 0x34
   13ce0:	eor	lr, lr, r3
   13ce4:	eor	r3, r8, fp
   13ce8:	eor	r0, r0, r3
   13cec:	add	r3, r6, r4
   13cf0:	eor	ip, ip, lr
   13cf4:	add	lr, r5, r4
   13cf8:	add	r9, lr, r9
   13cfc:	ldr	lr, [sp, #24]
   13d00:	eor	r4, fp, r1
   13d04:	add	r9, r0, r9
   13d08:	eor	r7, r7, ip
   13d0c:	ror	ip, sl, #2
   13d10:	ldr	r0, [sp, #28]
   13d14:	add	r9, r9, sl, ror #27
   13d18:	eor	sl, sl, r4
   13d1c:	ror	r7, r7, #31
   13d20:	add	r8, r3, r8
   13d24:	ldr	r4, [sp, #8]
   13d28:	add	sl, sl, r8
   13d2c:	eor	r8, r1, ip
   13d30:	add	sl, sl, r9, ror #27
   13d34:	eor	lr, lr, r0
   13d38:	ldr	r0, [sp, #48]	; 0x30
   13d3c:	add	r3, r7, r4
   13d40:	ldr	r4, [sp, #32]
   13d44:	add	r3, r3, fp
   13d48:	ldr	fp, [sp, #8]
   13d4c:	eor	lr, lr, r0
   13d50:	ror	r0, r9, #2
   13d54:	eor	r9, r9, r8
   13d58:	eor	r5, r5, lr
   13d5c:	ldr	lr, [sp, #12]
   13d60:	add	r3, r9, r3
   13d64:	add	r3, r3, sl, ror #27
   13d68:	ldr	r9, [sp, #36]	; 0x24
   13d6c:	add	r5, fp, r5, ror #31
   13d70:	ldr	r8, [sp, #44]	; 0x2c
   13d74:	eor	r4, lr, r4
   13d78:	add	r5, r5, r1
   13d7c:	ldr	lr, [sp, #28]
   13d80:	ldr	r1, [sp, #96]	; 0x60
   13d84:	eor	r4, r4, r8
   13d88:	ror	r8, sl, #2
   13d8c:	eor	r4, r4, r6
   13d90:	eor	r6, lr, r9
   13d94:	eor	lr, ip, r0
   13d98:	add	r4, fp, r4, ror #31
   13d9c:	eor	sl, sl, lr
   13da0:	ror	r9, r3, #2
   13da4:	eor	r2, r2, r6
   13da8:	add	fp, r1, fp
   13dac:	add	sl, r5, sl
   13db0:	ldr	lr, [sp, #100]	; 0x64
   13db4:	eor	r1, r0, r8
   13db8:	add	sl, sl, r3, ror #27
   13dbc:	add	r4, r4, ip
   13dc0:	eor	r3, r3, r1
   13dc4:	eor	r2, r2, r7
   13dc8:	ldr	r6, [sp, #108]	; 0x6c
   13dcc:	add	r4, r4, r3
   13dd0:	add	r2, fp, r2, ror #31
   13dd4:	eor	fp, r8, r9
   13dd8:	ldr	r3, [sp, #104]	; 0x68
   13ddc:	eor	fp, fp, sl
   13de0:	add	r2, r2, r0
   13de4:	mov	r0, #0
   13de8:	add	r2, r2, fp
   13dec:	add	r9, r6, r9
   13df0:	add	r7, r3, sl, ror #2
   13df4:	ldr	r3, [sp, #112]	; 0x70
   13df8:	add	sl, r4, sl, ror #27
   13dfc:	ldr	r4, [sp, #116]	; 0x74
   13e00:	add	r2, r2, sl, ror #27
   13e04:	add	sl, lr, sl
   13e08:	add	r8, r3, r8
   13e0c:	str	sl, [r4, #4]
   13e10:	str	r7, [r4, #8]
   13e14:	str	r2, [r4]
   13e18:	str	r9, [r4, #12]
   13e1c:	str	r8, [r4, #16]
   13e20:	add	sp, sp, #188	; 0xbc
   13e24:	ldrd	r4, [sp]
   13e28:	ldrd	r6, [sp, #8]
   13e2c:	ldrd	r8, [sp, #16]
   13e30:	ldrd	sl, [sp, #24]
   13e34:	add	sp, sp, #32
   13e38:	pop	{pc}		; (ldr pc, [sp], #4)
   13e3c:	strd	r4, [sp, #-12]!
   13e40:	mov	r4, #0
   13e44:	mov	r5, #0
   13e48:	movw	ip, #43913	; 0xab89
   13e4c:	movt	ip, #61389	; 0xefcd
   13e50:	str	lr, [sp, #8]
   13e54:	movw	r1, #56574	; 0xdcfe
   13e58:	movt	r1, #39098	; 0x98ba
   13e5c:	movw	r2, #21622	; 0x5476
   13e60:	movt	r2, #4146	; 0x1032
   13e64:	str	ip, [r0, #4]
   13e68:	movw	r3, #57840	; 0xe1f0
   13e6c:	movt	r3, #50130	; 0xc3d2
   13e70:	strd	r4, [r0, #24]
   13e74:	movw	lr, #8961	; 0x2301
   13e78:	movt	lr, #26437	; 0x6745
   13e7c:	ldrd	r4, [sp]
   13e80:	add	sp, sp, #8
   13e84:	str	lr, [r0]
   13e88:	str	r1, [r0, #8]
   13e8c:	strd	r2, [r0, #12]
   13e90:	pop	{pc}		; (ldr pc, [sp], #4)
   13e94:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13e98:	mov	r5, r2
   13e9c:	strd	r6, [sp, #8]
   13ea0:	mov	r6, r0
   13ea4:	strd	sl, [sp, #24]
   13ea8:	ldrd	sl, [r0, #24]
   13eac:	lsl	r0, r2, #3
   13eb0:	strd	r8, [sp, #16]
   13eb4:	mov	r8, r1
   13eb8:	str	lr, [sp, #32]
   13ebc:	sub	sp, sp, #4
   13ec0:	ubfx	r9, sl, #3, #6
   13ec4:	adds	r2, sl, r0
   13ec8:	adc	r3, fp, #0
   13ecc:	add	r0, r9, r5
   13ed0:	add	r7, r9, #32
   13ed4:	cmp	r0, #63	; 0x3f
   13ed8:	add	r7, r6, r7
   13edc:	strd	r2, [r6, #24]
   13ee0:	bhi	13f10 <rb_base64_encode@plt+0x304c>
   13ee4:	mov	r2, r5
   13ee8:	mov	r1, r8
   13eec:	mov	r0, r7
   13ef0:	add	sp, sp, #4
   13ef4:	ldrd	r4, [sp]
   13ef8:	ldrd	r6, [sp, #8]
   13efc:	ldrd	r8, [sp, #16]
   13f00:	ldrd	sl, [sp, #24]
   13f04:	ldr	lr, [sp, #32]
   13f08:	add	sp, sp, #36	; 0x24
   13f0c:	b	10d98 <memcpy@plt>
   13f10:	rsb	r4, r9, #64	; 0x40
   13f14:	mov	r0, r7
   13f18:	mov	r2, r4
   13f1c:	add	r7, r6, #32
   13f20:	bl	10d98 <memcpy@plt>
   13f24:	mov	r1, r7
   13f28:	mov	r0, r6
   13f2c:	bl	128f8 <rb_base64_encode@plt+0x1a34>
   13f30:	rsb	r3, r9, #127	; 0x7f
   13f34:	cmp	r5, r3
   13f38:	subls	r3, r9, #64	; 0x40
   13f3c:	addls	r8, r8, r4
   13f40:	addls	r5, r5, r3
   13f44:	bls	13ee4 <rb_base64_encode@plt+0x3020>
   13f48:	add	r1, r8, r4
   13f4c:	mov	r0, r6
   13f50:	bl	128f8 <rb_base64_encode@plt+0x1a34>
   13f54:	add	r3, r4, #127	; 0x7f
   13f58:	add	r4, r4, #64	; 0x40
   13f5c:	cmp	r5, r3
   13f60:	bhi	13f48 <rb_base64_encode@plt+0x3084>
   13f64:	add	r8, r8, r4
   13f68:	sub	r5, r5, r4
   13f6c:	b	13ee4 <rb_base64_encode@plt+0x3020>
   13f70:	ldr	ip, [r0, #24]
   13f74:	mov	r2, #1
   13f78:	strd	r4, [sp, #-28]!	; 0xffffffe4
   13f7c:	mov	r4, r1
   13f80:	mov	r5, r0
   13f84:	ldr	r3, [r0, #28]
   13f88:	strd	r6, [sp, #8]
   13f8c:	ldr	r1, [pc, #224]	; 14074 <rb_base64_encode@plt+0x31b0>
   13f90:	strd	r8, [sp, #16]
   13f94:	rev	ip, ip
   13f98:	str	lr, [sp, #24]
   13f9c:	sub	sp, sp, #12
   13fa0:	lsr	r8, r3, #24
   13fa4:	lsr	lr, r3, #16
   13fa8:	add	r1, pc, r1
   13fac:	strb	r8, [sp]
   13fb0:	mov	r8, #0
   13fb4:	strb	r3, [sp, #3]
   13fb8:	lsr	r3, r3, #8
   13fbc:	strb	lr, [sp, #1]
   13fc0:	strb	r3, [sp, #2]
   13fc4:	str	ip, [sp, #4]
   13fc8:	bl	13e94 <rb_base64_encode@plt+0x2fd0>
   13fcc:	ldr	r1, [r5, #24]
   13fd0:	cmp	r8, #0
   13fd4:	and	r2, r1, #504	; 0x1f8
   13fd8:	cmpeq	r2, #448	; 0x1c0
   13fdc:	beq	1400c <rb_base64_encode@plt+0x3148>
   13fe0:	ldr	r9, [pc, #144]	; 14078 <rb_base64_encode@plt+0x31b4>
   13fe4:	add	r9, pc, r9
   13fe8:	mov	r2, #1
   13fec:	mov	r1, r9
   13ff0:	mov	r0, r5
   13ff4:	bl	13e94 <rb_base64_encode@plt+0x2fd0>
   13ff8:	ldr	r3, [r5, #24]
   13ffc:	cmp	r8, #0
   14000:	and	r6, r3, #504	; 0x1f8
   14004:	cmpeq	r6, #448	; 0x1c0
   14008:	bne	13fe8 <rb_base64_encode@plt+0x3124>
   1400c:	mov	r2, #8
   14010:	mov	r1, sp
   14014:	mov	r0, r5
   14018:	bl	13e94 <rb_base64_encode@plt+0x2fd0>
   1401c:	sub	r1, r4, #1
   14020:	mov	r2, #0
   14024:	lsr	r0, r2, #2
   14028:	mvn	r3, r2
   1402c:	add	r2, r2, #1
   14030:	and	r3, r3, #3
   14034:	cmp	r2, #20
   14038:	ldr	r0, [r5, r0, lsl #2]
   1403c:	lsl	r3, r3, #3
   14040:	lsr	r3, r0, r3
   14044:	strb	r3, [r1, #1]!
   14048:	bne	14024 <rb_base64_encode@plt+0x3160>
   1404c:	mov	r0, r5
   14050:	mov	r2, #96	; 0x60
   14054:	mov	r1, #0
   14058:	add	sp, sp, #12
   1405c:	ldrd	r4, [sp]
   14060:	ldrd	r6, [sp, #8]
   14064:	ldrd	r8, [sp, #16]
   14068:	ldr	lr, [sp, #24]
   1406c:	add	sp, sp, #28
   14070:	b	10d08 <memset@plt>
   14074:	andeq	r0, r0, r8, lsl #8
   14078:	andeq	r0, r0, r8, asr #7
   1407c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14080:	mov	r7, r0
   14084:	ldr	r6, [pc, #72]	; 140d4 <rb_base64_encode@plt+0x3210>
   14088:	ldr	r5, [pc, #72]	; 140d8 <rb_base64_encode@plt+0x3214>
   1408c:	add	r6, pc, r6
   14090:	add	r5, pc, r5
   14094:	sub	r6, r6, r5
   14098:	mov	r8, r1
   1409c:	mov	r9, r2
   140a0:	bl	10c34 <open@plt-0x20>
   140a4:	asrs	r6, r6, #2
   140a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   140ac:	mov	r4, #0
   140b0:	add	r4, r4, #1
   140b4:	ldr	r3, [r5], #4
   140b8:	mov	r2, r9
   140bc:	mov	r1, r8
   140c0:	mov	r0, r7
   140c4:	blx	r3
   140c8:	cmp	r6, r4
   140cc:	bne	140b0 <rb_base64_encode@plt+0x31ec>
   140d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   140d4:	andeq	r0, r1, r8, ror #28
   140d8:	andeq	r0, r1, r0, ror #28
   140dc:	bx	lr

Disassembly of section .fini:

000140e0 <.fini>:
   140e0:	push	{r3, lr}
   140e4:	pop	{r3, pc}
