
../repos/stcorp-coda-3a25f25/codaeval:     file format elf32-littlearm


Disassembly of section .init:

00010cb4 <.init>:
   10cb4:	push	{r3, lr}
   10cb8:	bl	10ed8 <_start@@Base+0x3c>
   10cbc:	pop	{r3, pc}

Disassembly of section .plt:

00010cc0 <coda_match_filefilter@plt-0x14>:
   10cc0:	push	{lr}		; (str lr, [sp, #-4]!)
   10cc4:	ldr	lr, [pc, #4]	; 10cd0 <coda_match_filefilter@plt-0x4>
   10cc8:	add	lr, pc, lr
   10ccc:	ldr	pc, [lr, #8]!
   10cd0:	andeq	r3, r1, r0, lsr r3

00010cd4 <coda_match_filefilter@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #77824	; 0x13000
   10cdc:	ldr	pc, [ip, #816]!	; 0x330

00010ce0 <coda_expression_eval_integer@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #77824	; 0x13000
   10ce8:	ldr	pc, [ip, #808]!	; 0x328

00010cec <strcmp@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #77824	; 0x13000
   10cf4:	ldr	pc, [ip, #800]!	; 0x320

00010cf8 <printf@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #77824	; 0x13000
   10d00:	ldr	pc, [ip, #792]!	; 0x318

00010d04 <coda_set_error@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #77824	; 0x13000
   10d0c:	ldr	pc, [ip, #784]!	; 0x310

00010d10 <coda_open@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #77824	; 0x13000
   10d18:	ldr	pc, [ip, #776]!	; 0x308

00010d1c <free@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #77824	; 0x13000
   10d24:	ldr	pc, [ip, #768]!	; 0x300

00010d28 <coda_set_definition_path_conditional@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #77824	; 0x13000
   10d30:	ldr	pc, [ip, #760]!	; 0x2f8

00010d34 <coda_set_definition_path@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #77824	; 0x13000
   10d3c:	ldr	pc, [ip, #752]!	; 0x2f0

00010d40 <fwrite@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #77824	; 0x13000
   10d48:	ldr	pc, [ip, #744]!	; 0x2e8

00010d4c <coda_expression_eval_bool@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #77824	; 0x13000
   10d54:	ldr	pc, [ip, #736]!	; 0x2e0

00010d58 <coda_cursor_set_product@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #77824	; 0x13000
   10d60:	ldr	pc, [ip, #728]!	; 0x2d8

00010d64 <coda_done@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #77824	; 0x13000
   10d6c:	ldr	pc, [ip, #720]!	; 0x2d0

00010d70 <puts@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #77824	; 0x13000
   10d78:	ldr	pc, [ip, #712]!	; 0x2c8

00010d7c <__libc_start_main@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #77824	; 0x13000
   10d84:	ldr	pc, [ip, #704]!	; 0x2c0

00010d88 <coda_expression_delete@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #77824	; 0x13000
   10d90:	ldr	pc, [ip, #696]!	; 0x2b8

00010d94 <__gmon_start__@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #77824	; 0x13000
   10d9c:	ldr	pc, [ip, #688]!	; 0x2b0

00010da0 <__ctype_b_loc@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #77824	; 0x13000
   10da8:	ldr	pc, [ip, #680]!	; 0x2a8

00010dac <exit@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #77824	; 0x13000
   10db4:	ldr	pc, [ip, #672]!	; 0x2a0

00010db8 <strlen@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #77824	; 0x13000
   10dc0:	ldr	pc, [ip, #664]!	; 0x298

00010dc4 <fprintf@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #77824	; 0x13000
   10dcc:	ldr	pc, [ip, #656]!	; 0x290

00010dd0 <coda_init@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #77824	; 0x13000
   10dd8:	ldr	pc, [ip, #648]!	; 0x288

00010ddc <coda_set_option_perform_conversions@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #77824	; 0x13000
   10de4:	ldr	pc, [ip, #640]!	; 0x280

00010de8 <coda_expression_eval_string@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #77824	; 0x13000
   10df0:	ldr	pc, [ip, #632]!	; 0x278

00010df4 <putchar@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #77824	; 0x13000
   10dfc:	ldr	pc, [ip, #624]!	; 0x270

00010e00 <coda_expression_get_type@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #77824	; 0x13000
   10e08:	ldr	pc, [ip, #616]!	; 0x268

00010e0c <coda_close@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #77824	; 0x13000
   10e14:	ldr	pc, [ip, #608]!	; 0x260

00010e18 <coda_expression_is_constant@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #77824	; 0x13000
   10e20:	ldr	pc, [ip, #600]!	; 0x258

00010e24 <coda_expression_eval_float@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #77824	; 0x13000
   10e2c:	ldr	pc, [ip, #592]!	; 0x250

00010e30 <coda_expression_eval_node@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #77824	; 0x13000
   10e38:	ldr	pc, [ip, #584]!	; 0x248

00010e3c <coda_errno_to_string@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #77824	; 0x13000
   10e44:	ldr	pc, [ip, #576]!	; 0x240

00010e48 <coda_expression_get_type_name@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #77824	; 0x13000
   10e50:	ldr	pc, [ip, #568]!	; 0x238

00010e54 <coda_expression_from_string@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #77824	; 0x13000
   10e5c:	ldr	pc, [ip, #560]!	; 0x230

00010e60 <coda_get_libcoda_version@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #77824	; 0x13000
   10e68:	ldr	pc, [ip, #552]!	; 0x228

00010e6c <coda_get_errno@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #77824	; 0x13000
   10e74:	ldr	pc, [ip, #544]!	; 0x220

00010e78 <abort@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #77824	; 0x13000
   10e80:	ldr	pc, [ip, #536]!	; 0x218

00010e84 <coda_str64@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #77824	; 0x13000
   10e8c:	ldr	pc, [ip, #528]!	; 0x210

00010e90 <__assert_fail@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #77824	; 0x13000
   10e98:	ldr	pc, [ip, #520]!	; 0x208

Disassembly of section .text:

00010e9c <_start@@Base>:
   10e9c:	mov	fp, #0
   10ea0:	mov	lr, #0
   10ea4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ea8:	mov	r2, sp
   10eac:	push	{r2}		; (str r2, [sp, #-4]!)
   10eb0:	push	{r0}		; (str r0, [sp, #-4]!)
   10eb4:	ldr	ip, [pc, #16]	; 10ecc <_start@@Base+0x30>
   10eb8:	push	{ip}		; (str ip, [sp, #-4]!)
   10ebc:	ldr	r0, [pc, #12]	; 10ed0 <_start@@Base+0x34>
   10ec0:	ldr	r3, [pc, #12]	; 10ed4 <_start@@Base+0x38>
   10ec4:	bl	10d7c <__libc_start_main@plt>
   10ec8:	bl	10e78 <abort@plt>
   10ecc:	andeq	r2, r1, ip, ror #9
   10ed0:	muleq	r1, r4, fp
   10ed4:	andeq	r2, r1, ip, lsl #9
   10ed8:	ldr	r3, [pc, #20]	; 10ef4 <_start@@Base+0x58>
   10edc:	ldr	r2, [pc, #20]	; 10ef8 <_start@@Base+0x5c>
   10ee0:	add	r3, pc, r3
   10ee4:	ldr	r2, [r3, r2]
   10ee8:	cmp	r2, #0
   10eec:	bxeq	lr
   10ef0:	b	10d94 <__gmon_start__@plt>
   10ef4:	andeq	r3, r1, r8, lsl r1
   10ef8:	andeq	r0, r0, r8, lsr #1
   10efc:	ldr	r3, [pc, #28]	; 10f20 <_start@@Base+0x84>
   10f00:	ldr	r0, [pc, #28]	; 10f24 <_start@@Base+0x88>
   10f04:	sub	r3, r3, r0
   10f08:	cmp	r3, #6
   10f0c:	bxls	lr
   10f10:	ldr	r3, [pc, #16]	; 10f28 <_start@@Base+0x8c>
   10f14:	cmp	r3, #0
   10f18:	bxeq	lr
   10f1c:	bx	r3
   10f20:	strheq	r4, [r2], -fp
   10f24:	strheq	r4, [r2], -r8
   10f28:	andeq	r0, r0, r0
   10f2c:	ldr	r1, [pc, #36]	; 10f58 <_start@@Base+0xbc>
   10f30:	ldr	r0, [pc, #36]	; 10f5c <_start@@Base+0xc0>
   10f34:	sub	r1, r1, r0
   10f38:	asr	r1, r1, #2
   10f3c:	add	r1, r1, r1, lsr #31
   10f40:	asrs	r1, r1, #1
   10f44:	bxeq	lr
   10f48:	ldr	r3, [pc, #16]	; 10f60 <_start@@Base+0xc4>
   10f4c:	cmp	r3, #0
   10f50:	bxeq	lr
   10f54:	bx	r3
   10f58:	strheq	r4, [r2], -r8
   10f5c:	strheq	r4, [r2], -r8
   10f60:	andeq	r0, r0, r0
   10f64:	push	{r4, lr}
   10f68:	ldr	r4, [pc, #24]	; 10f88 <_start@@Base+0xec>
   10f6c:	ldrb	r3, [r4]
   10f70:	cmp	r3, #0
   10f74:	popne	{r4, pc}
   10f78:	bl	10efc <_start@@Base+0x60>
   10f7c:	mov	r3, #1
   10f80:	strb	r3, [r4]
   10f84:	pop	{r4, pc}
   10f88:	strheq	r4, [r2], -r8
   10f8c:	ldr	r0, [pc, #40]	; 10fbc <_start@@Base+0x120>
   10f90:	ldr	r3, [r0]
   10f94:	cmp	r3, #0
   10f98:	bne	10fa0 <_start@@Base+0x104>
   10f9c:	b	10f2c <_start@@Base+0x90>
   10fa0:	ldr	r3, [pc, #24]	; 10fc0 <_start@@Base+0x124>
   10fa4:	cmp	r3, #0
   10fa8:	beq	10f9c <_start@@Base+0x100>
   10fac:	push	{r4, lr}
   10fb0:	blx	r3
   10fb4:	pop	{r4, lr}
   10fb8:	b	10f2c <_start@@Base+0x90>
   10fbc:	strdeq	r3, [r2], -ip
   10fc0:	andeq	r0, r0, r0
   10fc4:	push	{fp, lr}
   10fc8:	add	fp, sp, #4
   10fcc:	sub	sp, sp, #16
   10fd0:	str	r0, [fp, #-16]
   10fd4:	str	r1, [fp, #-20]	; 0xffffffec
   10fd8:	mov	r3, #0
   10fdc:	str	r3, [fp, #-8]
   10fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fe4:	cmp	r3, #0
   10fe8:	beq	112f0 <_start@@Base+0x454>
   10fec:	ldr	r3, [fp, #-16]
   10ff0:	cmp	r3, #0
   10ff4:	beq	112f0 <_start@@Base+0x454>
   10ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ffc:	cmp	r3, #0
   11000:	bge	112dc <_start@@Base+0x440>
   11004:	ldr	r0, [fp, #-16]
   11008:	bl	10db8 <strlen@plt>
   1100c:	mov	r3, r0
   11010:	str	r3, [fp, #-20]	; 0xffffffec
   11014:	b	112dc <_start@@Base+0x440>
   11018:	ldr	r3, [fp, #-8]
   1101c:	ldr	r2, [fp, #-16]
   11020:	add	r3, r2, r3
   11024:	ldrb	r3, [r3]
   11028:	sub	r3, r3, #7
   1102c:	cmp	r3, #85	; 0x55
   11030:	addls	pc, pc, r3, lsl #2
   11034:	b	11258 <_start@@Base+0x3bc>
   11038:	b	111a4 <_start@@Base+0x308>
   1103c:	b	111b8 <_start@@Base+0x31c>
   11040:	b	11208 <_start@@Base+0x36c>
   11044:	b	111e0 <_start@@Base+0x344>
   11048:	b	1121c <_start@@Base+0x380>
   1104c:	b	111cc <_start@@Base+0x330>
   11050:	b	111f4 <_start@@Base+0x358>
   11054:	b	11258 <_start@@Base+0x3bc>
   11058:	b	11258 <_start@@Base+0x3bc>
   1105c:	b	11258 <_start@@Base+0x3bc>
   11060:	b	11258 <_start@@Base+0x3bc>
   11064:	b	11258 <_start@@Base+0x3bc>
   11068:	b	11258 <_start@@Base+0x3bc>
   1106c:	b	11258 <_start@@Base+0x3bc>
   11070:	b	11258 <_start@@Base+0x3bc>
   11074:	b	11258 <_start@@Base+0x3bc>
   11078:	b	11258 <_start@@Base+0x3bc>
   1107c:	b	11258 <_start@@Base+0x3bc>
   11080:	b	11258 <_start@@Base+0x3bc>
   11084:	b	11258 <_start@@Base+0x3bc>
   11088:	b	11190 <_start@@Base+0x2f4>
   1108c:	b	11258 <_start@@Base+0x3bc>
   11090:	b	11258 <_start@@Base+0x3bc>
   11094:	b	11258 <_start@@Base+0x3bc>
   11098:	b	11258 <_start@@Base+0x3bc>
   1109c:	b	11258 <_start@@Base+0x3bc>
   110a0:	b	11258 <_start@@Base+0x3bc>
   110a4:	b	11244 <_start@@Base+0x3a8>
   110a8:	b	11258 <_start@@Base+0x3bc>
   110ac:	b	11258 <_start@@Base+0x3bc>
   110b0:	b	11258 <_start@@Base+0x3bc>
   110b4:	b	11258 <_start@@Base+0x3bc>
   110b8:	b	11258 <_start@@Base+0x3bc>
   110bc:	b	11258 <_start@@Base+0x3bc>
   110c0:	b	11258 <_start@@Base+0x3bc>
   110c4:	b	11258 <_start@@Base+0x3bc>
   110c8:	b	11258 <_start@@Base+0x3bc>
   110cc:	b	11258 <_start@@Base+0x3bc>
   110d0:	b	11258 <_start@@Base+0x3bc>
   110d4:	b	11258 <_start@@Base+0x3bc>
   110d8:	b	11258 <_start@@Base+0x3bc>
   110dc:	b	11258 <_start@@Base+0x3bc>
   110e0:	b	11258 <_start@@Base+0x3bc>
   110e4:	b	11258 <_start@@Base+0x3bc>
   110e8:	b	11258 <_start@@Base+0x3bc>
   110ec:	b	11258 <_start@@Base+0x3bc>
   110f0:	b	11258 <_start@@Base+0x3bc>
   110f4:	b	11258 <_start@@Base+0x3bc>
   110f8:	b	11258 <_start@@Base+0x3bc>
   110fc:	b	11258 <_start@@Base+0x3bc>
   11100:	b	11258 <_start@@Base+0x3bc>
   11104:	b	11258 <_start@@Base+0x3bc>
   11108:	b	11258 <_start@@Base+0x3bc>
   1110c:	b	11258 <_start@@Base+0x3bc>
   11110:	b	11258 <_start@@Base+0x3bc>
   11114:	b	11258 <_start@@Base+0x3bc>
   11118:	b	11258 <_start@@Base+0x3bc>
   1111c:	b	11258 <_start@@Base+0x3bc>
   11120:	b	11258 <_start@@Base+0x3bc>
   11124:	b	11258 <_start@@Base+0x3bc>
   11128:	b	11258 <_start@@Base+0x3bc>
   1112c:	b	11258 <_start@@Base+0x3bc>
   11130:	b	11258 <_start@@Base+0x3bc>
   11134:	b	11258 <_start@@Base+0x3bc>
   11138:	b	11258 <_start@@Base+0x3bc>
   1113c:	b	11258 <_start@@Base+0x3bc>
   11140:	b	11258 <_start@@Base+0x3bc>
   11144:	b	11258 <_start@@Base+0x3bc>
   11148:	b	11258 <_start@@Base+0x3bc>
   1114c:	b	11258 <_start@@Base+0x3bc>
   11150:	b	11258 <_start@@Base+0x3bc>
   11154:	b	11258 <_start@@Base+0x3bc>
   11158:	b	11258 <_start@@Base+0x3bc>
   1115c:	b	11258 <_start@@Base+0x3bc>
   11160:	b	11258 <_start@@Base+0x3bc>
   11164:	b	11258 <_start@@Base+0x3bc>
   11168:	b	11258 <_start@@Base+0x3bc>
   1116c:	b	11258 <_start@@Base+0x3bc>
   11170:	b	11258 <_start@@Base+0x3bc>
   11174:	b	11258 <_start@@Base+0x3bc>
   11178:	b	11258 <_start@@Base+0x3bc>
   1117c:	b	11258 <_start@@Base+0x3bc>
   11180:	b	11258 <_start@@Base+0x3bc>
   11184:	b	11258 <_start@@Base+0x3bc>
   11188:	b	11258 <_start@@Base+0x3bc>
   1118c:	b	11230 <_start@@Base+0x394>
   11190:	ldr	r3, [pc, #356]	; 112fc <_start@@Base+0x460>
   11194:	add	r3, pc, r3
   11198:	mov	r0, r3
   1119c:	bl	10cf8 <printf@plt>
   111a0:	b	112d0 <_start@@Base+0x434>
   111a4:	ldr	r3, [pc, #340]	; 11300 <_start@@Base+0x464>
   111a8:	add	r3, pc, r3
   111ac:	mov	r0, r3
   111b0:	bl	10cf8 <printf@plt>
   111b4:	b	112d0 <_start@@Base+0x434>
   111b8:	ldr	r3, [pc, #324]	; 11304 <_start@@Base+0x468>
   111bc:	add	r3, pc, r3
   111c0:	mov	r0, r3
   111c4:	bl	10cf8 <printf@plt>
   111c8:	b	112d0 <_start@@Base+0x434>
   111cc:	ldr	r3, [pc, #308]	; 11308 <_start@@Base+0x46c>
   111d0:	add	r3, pc, r3
   111d4:	mov	r0, r3
   111d8:	bl	10cf8 <printf@plt>
   111dc:	b	112d0 <_start@@Base+0x434>
   111e0:	ldr	r3, [pc, #292]	; 1130c <_start@@Base+0x470>
   111e4:	add	r3, pc, r3
   111e8:	mov	r0, r3
   111ec:	bl	10cf8 <printf@plt>
   111f0:	b	112d0 <_start@@Base+0x434>
   111f4:	ldr	r3, [pc, #276]	; 11310 <_start@@Base+0x474>
   111f8:	add	r3, pc, r3
   111fc:	mov	r0, r3
   11200:	bl	10cf8 <printf@plt>
   11204:	b	112d0 <_start@@Base+0x434>
   11208:	ldr	r3, [pc, #260]	; 11314 <_start@@Base+0x478>
   1120c:	add	r3, pc, r3
   11210:	mov	r0, r3
   11214:	bl	10cf8 <printf@plt>
   11218:	b	112d0 <_start@@Base+0x434>
   1121c:	ldr	r3, [pc, #244]	; 11318 <_start@@Base+0x47c>
   11220:	add	r3, pc, r3
   11224:	mov	r0, r3
   11228:	bl	10cf8 <printf@plt>
   1122c:	b	112d0 <_start@@Base+0x434>
   11230:	ldr	r3, [pc, #228]	; 1131c <_start@@Base+0x480>
   11234:	add	r3, pc, r3
   11238:	mov	r0, r3
   1123c:	bl	10cf8 <printf@plt>
   11240:	b	112d0 <_start@@Base+0x434>
   11244:	ldr	r3, [pc, #212]	; 11320 <_start@@Base+0x484>
   11248:	add	r3, pc, r3
   1124c:	mov	r0, r3
   11250:	bl	10cf8 <printf@plt>
   11254:	b	112d0 <_start@@Base+0x434>
   11258:	bl	10da0 <__ctype_b_loc@plt>
   1125c:	mov	r3, r0
   11260:	ldr	r2, [r3]
   11264:	ldr	r3, [fp, #-8]
   11268:	ldr	r1, [fp, #-16]
   1126c:	add	r3, r1, r3
   11270:	ldrb	r3, [r3]
   11274:	lsl	r3, r3, #1
   11278:	add	r3, r2, r3
   1127c:	ldrh	r3, [r3]
   11280:	and	r3, r3, #16384	; 0x4000
   11284:	cmp	r3, #0
   11288:	bne	112b4 <_start@@Base+0x418>
   1128c:	ldr	r3, [fp, #-8]
   11290:	ldr	r2, [fp, #-16]
   11294:	add	r3, r2, r3
   11298:	ldrb	r3, [r3]
   1129c:	mov	r1, r3
   112a0:	ldr	r3, [pc, #124]	; 11324 <_start@@Base+0x488>
   112a4:	add	r3, pc, r3
   112a8:	mov	r0, r3
   112ac:	bl	10cf8 <printf@plt>
   112b0:	b	112cc <_start@@Base+0x430>
   112b4:	ldr	r3, [fp, #-8]
   112b8:	ldr	r2, [fp, #-16]
   112bc:	add	r3, r2, r3
   112c0:	ldrb	r3, [r3]
   112c4:	mov	r0, r3
   112c8:	bl	10df4 <putchar@plt>
   112cc:	nop			; (mov r0, r0)
   112d0:	ldr	r3, [fp, #-8]
   112d4:	add	r3, r3, #1
   112d8:	str	r3, [fp, #-8]
   112dc:	ldr	r2, [fp, #-8]
   112e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   112e4:	cmp	r2, r3
   112e8:	blt	11018 <_start@@Base+0x17c>
   112ec:	b	112f4 <_start@@Base+0x458>
   112f0:	nop			; (mov r0, r0)
   112f4:	sub	sp, fp, #4
   112f8:	pop	{fp, pc}
   112fc:	andeq	r1, r0, r0, ror #6
   11300:	andeq	r1, r0, r0, asr r3
   11304:	andeq	r1, r0, r0, asr #6
   11308:	andeq	r1, r0, r0, lsr r3
   1130c:	andeq	r1, r0, r0, lsr #6
   11310:	andeq	r1, r0, r0, lsl r3
   11314:	andeq	r1, r0, r0, lsl #6
   11318:	strdeq	r1, [r0], -r0
   1131c:	andeq	r1, r0, r0, ror #5
   11320:	ldrdeq	r1, [r0], -r0
   11324:	andeq	r1, r0, r8, ror r2
   11328:	push	{fp, lr}
   1132c:	add	fp, sp, #4
   11330:	bl	10e60 <coda_get_libcoda_version@plt>
   11334:	mov	r3, r0
   11338:	mov	r1, r3
   1133c:	ldr	r3, [pc, #40]	; 1136c <_start@@Base+0x4d0>
   11340:	add	r3, pc, r3
   11344:	mov	r0, r3
   11348:	bl	10cf8 <printf@plt>
   1134c:	ldr	r3, [pc, #28]	; 11370 <_start@@Base+0x4d4>
   11350:	add	r3, pc, r3
   11354:	mov	r0, r3
   11358:	bl	10d70 <puts@plt>
   1135c:	mov	r0, #10
   11360:	bl	10df4 <putchar@plt>
   11364:	nop			; (mov r0, r0)
   11368:	pop	{fp, pc}
   1136c:	andeq	r1, r0, r4, ror #3
   11370:	andeq	r1, r0, r4, ror #3
   11374:	push	{fp, lr}
   11378:	add	fp, sp, #4
   1137c:	ldr	r3, [pc, #560]	; 115b4 <_start@@Base+0x718>
   11380:	add	r3, pc, r3
   11384:	mov	r0, r3
   11388:	bl	10d70 <puts@plt>
   1138c:	ldr	r3, [pc, #548]	; 115b8 <_start@@Base+0x71c>
   11390:	add	r3, pc, r3
   11394:	mov	r0, r3
   11398:	bl	10d70 <puts@plt>
   1139c:	ldr	r3, [pc, #536]	; 115bc <_start@@Base+0x720>
   113a0:	add	r3, pc, r3
   113a4:	mov	r0, r3
   113a8:	bl	10d70 <puts@plt>
   113ac:	ldr	r3, [pc, #524]	; 115c0 <_start@@Base+0x724>
   113b0:	add	r3, pc, r3
   113b4:	mov	r0, r3
   113b8:	bl	10d70 <puts@plt>
   113bc:	ldr	r3, [pc, #512]	; 115c4 <_start@@Base+0x728>
   113c0:	add	r3, pc, r3
   113c4:	mov	r0, r3
   113c8:	bl	10d70 <puts@plt>
   113cc:	ldr	r3, [pc, #500]	; 115c8 <_start@@Base+0x72c>
   113d0:	add	r3, pc, r3
   113d4:	mov	r0, r3
   113d8:	bl	10d70 <puts@plt>
   113dc:	ldr	r3, [pc, #488]	; 115cc <_start@@Base+0x730>
   113e0:	add	r3, pc, r3
   113e4:	mov	r0, r3
   113e8:	bl	10d70 <puts@plt>
   113ec:	mov	r0, #10
   113f0:	bl	10df4 <putchar@plt>
   113f4:	ldr	r3, [pc, #468]	; 115d0 <_start@@Base+0x734>
   113f8:	add	r3, pc, r3
   113fc:	mov	r0, r3
   11400:	bl	10d70 <puts@plt>
   11404:	ldr	r3, [pc, #456]	; 115d4 <_start@@Base+0x738>
   11408:	add	r3, pc, r3
   1140c:	mov	r0, r3
   11410:	bl	10d70 <puts@plt>
   11414:	ldr	r3, [pc, #444]	; 115d8 <_start@@Base+0x73c>
   11418:	add	r3, pc, r3
   1141c:	mov	r0, r3
   11420:	bl	10d70 <puts@plt>
   11424:	ldr	r3, [pc, #432]	; 115dc <_start@@Base+0x740>
   11428:	add	r3, pc, r3
   1142c:	mov	r0, r3
   11430:	bl	10d70 <puts@plt>
   11434:	ldr	r3, [pc, #420]	; 115e0 <_start@@Base+0x744>
   11438:	add	r3, pc, r3
   1143c:	mov	r0, r3
   11440:	bl	10d70 <puts@plt>
   11444:	ldr	r3, [pc, #408]	; 115e4 <_start@@Base+0x748>
   11448:	add	r3, pc, r3
   1144c:	mov	r0, r3
   11450:	bl	10d70 <puts@plt>
   11454:	ldr	r3, [pc, #396]	; 115e8 <_start@@Base+0x74c>
   11458:	add	r3, pc, r3
   1145c:	mov	r0, r3
   11460:	bl	10d70 <puts@plt>
   11464:	ldr	r3, [pc, #384]	; 115ec <_start@@Base+0x750>
   11468:	add	r3, pc, r3
   1146c:	mov	r0, r3
   11470:	bl	10d70 <puts@plt>
   11474:	ldr	r3, [pc, #372]	; 115f0 <_start@@Base+0x754>
   11478:	add	r3, pc, r3
   1147c:	mov	r0, r3
   11480:	bl	10d70 <puts@plt>
   11484:	ldr	r3, [pc, #360]	; 115f4 <_start@@Base+0x758>
   11488:	add	r3, pc, r3
   1148c:	mov	r0, r3
   11490:	bl	10d70 <puts@plt>
   11494:	ldr	r3, [pc, #348]	; 115f8 <_start@@Base+0x75c>
   11498:	add	r3, pc, r3
   1149c:	mov	r0, r3
   114a0:	bl	10d70 <puts@plt>
   114a4:	ldr	r3, [pc, #336]	; 115fc <_start@@Base+0x760>
   114a8:	add	r3, pc, r3
   114ac:	mov	r0, r3
   114b0:	bl	10d70 <puts@plt>
   114b4:	mov	r0, #10
   114b8:	bl	10df4 <putchar@plt>
   114bc:	ldr	r3, [pc, #316]	; 11600 <_start@@Base+0x764>
   114c0:	add	r3, pc, r3
   114c4:	mov	r0, r3
   114c8:	bl	10d70 <puts@plt>
   114cc:	ldr	r3, [pc, #304]	; 11604 <_start@@Base+0x768>
   114d0:	add	r3, pc, r3
   114d4:	mov	r0, r3
   114d8:	bl	10d70 <puts@plt>
   114dc:	mov	r0, #10
   114e0:	bl	10df4 <putchar@plt>
   114e4:	ldr	r3, [pc, #284]	; 11608 <_start@@Base+0x76c>
   114e8:	add	r3, pc, r3
   114ec:	mov	r0, r3
   114f0:	bl	10d70 <puts@plt>
   114f4:	ldr	r3, [pc, #272]	; 1160c <_start@@Base+0x770>
   114f8:	add	r3, pc, r3
   114fc:	mov	r0, r3
   11500:	bl	10d70 <puts@plt>
   11504:	mov	r0, #10
   11508:	bl	10df4 <putchar@plt>
   1150c:	ldr	r3, [pc, #252]	; 11610 <_start@@Base+0x774>
   11510:	add	r3, pc, r3
   11514:	mov	r0, r3
   11518:	bl	10d70 <puts@plt>
   1151c:	ldr	r3, [pc, #240]	; 11614 <_start@@Base+0x778>
   11520:	add	r3, pc, r3
   11524:	mov	r0, r3
   11528:	bl	10d70 <puts@plt>
   1152c:	mov	r0, #10
   11530:	bl	10df4 <putchar@plt>
   11534:	ldr	r3, [pc, #220]	; 11618 <_start@@Base+0x77c>
   11538:	add	r3, pc, r3
   1153c:	mov	r0, r3
   11540:	bl	10d70 <puts@plt>
   11544:	ldr	r3, [pc, #208]	; 1161c <_start@@Base+0x780>
   11548:	add	r3, pc, r3
   1154c:	mov	r0, r3
   11550:	bl	10d70 <puts@plt>
   11554:	ldr	r3, [pc, #196]	; 11620 <_start@@Base+0x784>
   11558:	add	r3, pc, r3
   1155c:	mov	r0, r3
   11560:	bl	10d70 <puts@plt>
   11564:	ldr	r3, [pc, #184]	; 11624 <_start@@Base+0x788>
   11568:	add	r3, pc, r3
   1156c:	mov	r0, r3
   11570:	bl	10d70 <puts@plt>
   11574:	ldr	r3, [pc, #172]	; 11628 <_start@@Base+0x78c>
   11578:	add	r3, pc, r3
   1157c:	mov	r0, r3
   11580:	bl	10d70 <puts@plt>
   11584:	ldr	r3, [pc, #160]	; 1162c <_start@@Base+0x790>
   11588:	add	r3, pc, r3
   1158c:	mov	r0, r3
   11590:	bl	10d70 <puts@plt>
   11594:	ldr	r3, [pc, #148]	; 11630 <_start@@Base+0x794>
   11598:	add	r3, pc, r3
   1159c:	mov	r0, r3
   115a0:	bl	10d70 <puts@plt>
   115a4:	mov	r0, #10
   115a8:	bl	10df4 <putchar@plt>
   115ac:	nop			; (mov r0, r0)
   115b0:	pop	{fp, pc}
   115b4:	andeq	r1, r0, r4, ror #3
   115b8:	ldrdeq	r1, [r0], -ip
   115bc:	andeq	r1, r0, ip, lsl r2
   115c0:	andeq	r1, r0, ip, asr r2
   115c4:	andeq	r1, r0, r0, ror r2
   115c8:	andeq	r1, r0, ip, lsr #5
   115cc:	andeq	r1, r0, r8, ror #5
   115d0:	andeq	r1, r0, r0, lsl #6
   115d4:	andeq	r1, r0, r4, lsl #6
   115d8:	andeq	r1, r0, ip, lsl #6
   115dc:	andeq	r1, r0, ip, asr #6
   115e0:	andeq	r1, r0, ip, lsl #7
   115e4:	andeq	r1, r0, r4, lsr #7
   115e8:	ldrdeq	r1, [r0], -r0
   115ec:	ldrdeq	r1, [r0], -r8
   115f0:	andeq	r1, r0, r4, lsl r4
   115f4:	andeq	r1, r0, r0, asr r4
   115f8:	andeq	r1, r0, r0, ror #8
   115fc:	muleq	r0, ip, r4
   11600:			; <UNDEFINED> instruction: 0x000014b4
   11604:	strdeq	r1, [r0], -r4
   11608:	strdeq	r1, [r0], -r4
   1160c:	strdeq	r1, [r0], -ip
   11610:	andeq	r1, r0, r4, lsl #10
   11614:	andeq	r1, r0, r0, lsl r5
   11618:	andeq	r1, r0, ip, lsr #10
   1161c:	andeq	r1, r0, r8, ror #10
   11620:	andeq	r1, r0, r4, lsr #11
   11624:	andeq	r1, r0, r4, asr #11
   11628:	andeq	r1, r0, r0, lsl #12
   1162c:	andeq	r1, r0, ip, lsr r6
   11630:	andeq	r1, r0, ip, ror #12
   11634:	push	{fp, lr}
   11638:	add	fp, sp, #4
   1163c:	sub	sp, sp, #64	; 0x40
   11640:	str	r0, [fp, #-64]	; 0xffffffc0
   11644:	ldr	r3, [pc, #640]	; 118cc <_start@@Base+0xa30>
   11648:	add	r3, pc, r3
   1164c:	ldr	r3, [r3]
   11650:	cmp	r3, #5
   11654:	addls	pc, pc, r3, lsl #2
   11658:	b	118bc <_start@@Base+0xa20>
   1165c:	b	11674 <_start@@Base+0x7d8>
   11660:	b	11700 <_start@@Base+0x864>
   11664:	b	11780 <_start@@Base+0x8e4>
   11668:	b	117f8 <_start@@Base+0x95c>
   1166c:	b	11898 <_start@@Base+0x9fc>
   11670:	b	11898 <_start@@Base+0x9fc>
   11674:	ldr	r3, [pc, #596]	; 118d0 <_start@@Base+0xa34>
   11678:	add	r3, pc, r3
   1167c:	ldr	r3, [r3]
   11680:	sub	r2, fp, #8
   11684:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11688:	mov	r0, r3
   1168c:	bl	10d4c <coda_expression_eval_bool@plt>
   11690:	mov	r3, r0
   11694:	cmp	r3, #0
   11698:	beq	116d4 <_start@@Base+0x838>
   1169c:	bl	10e6c <coda_get_errno@plt>
   116a0:	mov	r3, r0
   116a4:	ldr	r3, [r3]
   116a8:	mov	r0, r3
   116ac:	bl	10e3c <coda_errno_to_string@plt>
   116b0:	mov	r3, r0
   116b4:	mov	r2, r3
   116b8:	ldr	r3, [pc, #532]	; 118d4 <_start@@Base+0xa38>
   116bc:	add	r3, pc, r3
   116c0:	mov	r1, r3
   116c4:	mvn	r0, #400	; 0x190
   116c8:	bl	10d04 <coda_set_error@plt>
   116cc:	mvn	r3, #0
   116d0:	b	118c0 <_start@@Base+0xa24>
   116d4:	ldr	r3, [fp, #-8]
   116d8:	cmp	r3, #0
   116dc:	beq	116ec <_start@@Base+0x850>
   116e0:	ldr	r3, [pc, #496]	; 118d8 <_start@@Base+0xa3c>
   116e4:	add	r3, pc, r3
   116e8:	b	116f4 <_start@@Base+0x858>
   116ec:	ldr	r3, [pc, #488]	; 118dc <_start@@Base+0xa40>
   116f0:	add	r3, pc, r3
   116f4:	mov	r0, r3
   116f8:	bl	10d70 <puts@plt>
   116fc:	b	118bc <_start@@Base+0xa20>
   11700:	ldr	r3, [pc, #472]	; 118e0 <_start@@Base+0xa44>
   11704:	add	r3, pc, r3
   11708:	ldr	r3, [r3]
   1170c:	sub	r2, fp, #20
   11710:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11714:	mov	r0, r3
   11718:	bl	10ce0 <coda_expression_eval_integer@plt>
   1171c:	mov	r3, r0
   11720:	cmp	r3, #0
   11724:	beq	11760 <_start@@Base+0x8c4>
   11728:	bl	10e6c <coda_get_errno@plt>
   1172c:	mov	r3, r0
   11730:	ldr	r3, [r3]
   11734:	mov	r0, r3
   11738:	bl	10e3c <coda_errno_to_string@plt>
   1173c:	mov	r3, r0
   11740:	mov	r2, r3
   11744:	ldr	r3, [pc, #408]	; 118e4 <_start@@Base+0xa48>
   11748:	add	r3, pc, r3
   1174c:	mov	r1, r3
   11750:	mvn	r0, #400	; 0x190
   11754:	bl	10d04 <coda_set_error@plt>
   11758:	mvn	r3, #0
   1175c:	b	118c0 <_start@@Base+0xa24>
   11760:	ldrd	r0, [fp, #-20]	; 0xffffffec
   11764:	sub	r3, fp, #44	; 0x2c
   11768:	mov	r2, r3
   1176c:	bl	10e84 <coda_str64@plt>
   11770:	sub	r3, fp, #44	; 0x2c
   11774:	mov	r0, r3
   11778:	bl	10d70 <puts@plt>
   1177c:	b	118bc <_start@@Base+0xa20>
   11780:	ldr	r3, [pc, #352]	; 118e8 <_start@@Base+0xa4c>
   11784:	add	r3, pc, r3
   11788:	ldr	r3, [r3]
   1178c:	sub	r2, fp, #52	; 0x34
   11790:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11794:	mov	r0, r3
   11798:	bl	10e24 <coda_expression_eval_float@plt>
   1179c:	mov	r3, r0
   117a0:	cmp	r3, #0
   117a4:	beq	117e0 <_start@@Base+0x944>
   117a8:	bl	10e6c <coda_get_errno@plt>
   117ac:	mov	r3, r0
   117b0:	ldr	r3, [r3]
   117b4:	mov	r0, r3
   117b8:	bl	10e3c <coda_errno_to_string@plt>
   117bc:	mov	r3, r0
   117c0:	mov	r2, r3
   117c4:	ldr	r3, [pc, #288]	; 118ec <_start@@Base+0xa50>
   117c8:	add	r3, pc, r3
   117cc:	mov	r1, r3
   117d0:	mvn	r0, #400	; 0x190
   117d4:	bl	10d04 <coda_set_error@plt>
   117d8:	mvn	r3, #0
   117dc:	b	118c0 <_start@@Base+0xa24>
   117e0:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   117e4:	ldr	r1, [pc, #260]	; 118f0 <_start@@Base+0xa54>
   117e8:	add	r1, pc, r1
   117ec:	mov	r0, r1
   117f0:	bl	10cf8 <printf@plt>
   117f4:	b	118bc <_start@@Base+0xa20>
   117f8:	mov	r3, #0
   117fc:	str	r3, [fp, #-56]	; 0xffffffc8
   11800:	ldr	r3, [pc, #236]	; 118f4 <_start@@Base+0xa58>
   11804:	add	r3, pc, r3
   11808:	ldr	r0, [r3]
   1180c:	sub	r3, fp, #60	; 0x3c
   11810:	sub	r2, fp, #56	; 0x38
   11814:	ldr	r1, [fp, #-64]	; 0xffffffc0
   11818:	bl	10de8 <coda_expression_eval_string@plt>
   1181c:	mov	r3, r0
   11820:	cmp	r3, #0
   11824:	beq	11860 <_start@@Base+0x9c4>
   11828:	bl	10e6c <coda_get_errno@plt>
   1182c:	mov	r3, r0
   11830:	ldr	r3, [r3]
   11834:	mov	r0, r3
   11838:	bl	10e3c <coda_errno_to_string@plt>
   1183c:	mov	r3, r0
   11840:	mov	r2, r3
   11844:	ldr	r3, [pc, #172]	; 118f8 <_start@@Base+0xa5c>
   11848:	add	r3, pc, r3
   1184c:	mov	r1, r3
   11850:	mvn	r0, #400	; 0x190
   11854:	bl	10d04 <coda_set_error@plt>
   11858:	mvn	r3, #0
   1185c:	b	118c0 <_start@@Base+0xa24>
   11860:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11864:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11868:	mov	r1, r2
   1186c:	mov	r0, r3
   11870:	bl	10fc4 <_start@@Base+0x128>
   11874:	mov	r0, #10
   11878:	bl	10df4 <putchar@plt>
   1187c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11880:	cmp	r3, #0
   11884:	beq	118b8 <_start@@Base+0xa1c>
   11888:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1188c:	mov	r0, r3
   11890:	bl	10d1c <free@plt>
   11894:	b	118b8 <_start@@Base+0xa1c>
   11898:	ldr	r3, [pc, #92]	; 118fc <_start@@Base+0xa60>
   1189c:	add	r3, pc, r3
   118a0:	mov	r2, #230	; 0xe6
   118a4:	ldr	r1, [pc, #84]	; 11900 <_start@@Base+0xa64>
   118a8:	add	r1, pc, r1
   118ac:	ldr	r0, [pc, #80]	; 11904 <_start@@Base+0xa68>
   118b0:	add	r0, pc, r0
   118b4:	bl	10e90 <__assert_fail@plt>
   118b8:	nop			; (mov r0, r0)
   118bc:	mov	r3, #0
   118c0:	mov	r0, r3
   118c4:	sub	sp, fp, #4
   118c8:	pop	{fp, pc}
   118cc:	andeq	r2, r1, r0, ror sl
   118d0:	andeq	r2, r1, ip, lsr sl
   118d4:	andeq	r1, r0, r8, lsl #11
   118d8:	andeq	r1, r0, r8, lsl #11
   118dc:	andeq	r1, r0, r4, lsl #11
   118e0:			; <UNDEFINED> instruction: 0x000129b0
   118e4:	andeq	r1, r0, r4, lsr r5
   118e8:	andeq	r2, r1, r0, lsr r9
   118ec:	ldrdeq	r1, [r0], -ip
   118f0:	andeq	r1, r0, ip, ror #9
   118f4:			; <UNDEFINED> instruction: 0x000128b0
   118f8:	muleq	r0, r4, r4
   118fc:	andeq	r1, r0, r4, lsr r7
   11900:	andeq	r1, r0, ip, asr r4
   11904:			; <UNDEFINED> instruction: 0x000014b0
   11908:	push	{r4, fp, lr}
   1190c:	add	fp, sp, #8
   11910:	sub	sp, sp, #540	; 0x21c
   11914:	str	r0, [fp, #-544]	; 0xfffffde0
   11918:	ldr	r4, [pc, #364]	; 11a8c <_start@@Base+0xbf0>
   1191c:	add	r4, pc, r4
   11920:	mov	r3, #0
   11924:	str	r3, [fp, #-16]
   11928:	sub	r3, fp, #16
   1192c:	mov	r1, r3
   11930:	ldr	r0, [fp, #-544]	; 0xfffffde0
   11934:	bl	10d10 <coda_open@plt>
   11938:	mov	r3, r0
   1193c:	cmp	r3, #0
   11940:	beq	1194c <_start@@Base+0xab0>
   11944:	mov	r3, #1
   11948:	b	11a80 <_start@@Base+0xbe4>
   1194c:	ldr	r2, [fp, #-16]
   11950:	sub	r3, fp, #540	; 0x21c
   11954:	mov	r1, r2
   11958:	mov	r0, r3
   1195c:	bl	10d58 <coda_cursor_set_product@plt>
   11960:	mov	r3, r0
   11964:	cmp	r3, #0
   11968:	beq	11980 <_start@@Base+0xae4>
   1196c:	ldr	r3, [fp, #-16]
   11970:	mov	r0, r3
   11974:	bl	10e0c <coda_close@plt>
   11978:	mov	r3, #1
   1197c:	b	11a80 <_start@@Base+0xbe4>
   11980:	ldr	r3, [pc, #264]	; 11a90 <_start@@Base+0xbf4>
   11984:	add	r3, pc, r3
   11988:	ldr	r3, [r3]
   1198c:	cmp	r3, #0
   11990:	beq	11a0c <_start@@Base+0xb70>
   11994:	ldr	r3, [pc, #248]	; 11a94 <_start@@Base+0xbf8>
   11998:	add	r3, pc, r3
   1199c:	ldr	r3, [r3]
   119a0:	sub	r2, fp, #540	; 0x21c
   119a4:	mov	r1, r2
   119a8:	mov	r0, r3
   119ac:	bl	10e30 <coda_expression_eval_node@plt>
   119b0:	mov	r3, r0
   119b4:	cmp	r3, #0
   119b8:	beq	11a0c <_start@@Base+0xb70>
   119bc:	ldr	r3, [pc, #212]	; 11a98 <_start@@Base+0xbfc>
   119c0:	ldr	r3, [r4, r3]
   119c4:	ldr	r4, [r3]
   119c8:	bl	10e6c <coda_get_errno@plt>
   119cc:	mov	r3, r0
   119d0:	ldr	r3, [r3]
   119d4:	mov	r0, r3
   119d8:	bl	10e3c <coda_errno_to_string@plt>
   119dc:	mov	r3, r0
   119e0:	mov	r2, r3
   119e4:	ldr	r3, [pc, #176]	; 11a9c <_start@@Base+0xc00>
   119e8:	add	r3, pc, r3
   119ec:	mov	r1, r3
   119f0:	mov	r0, r4
   119f4:	bl	10dc4 <fprintf@plt>
   119f8:	ldr	r3, [fp, #-16]
   119fc:	mov	r0, r3
   11a00:	bl	10e0c <coda_close@plt>
   11a04:	mov	r3, #0
   11a08:	b	11a80 <_start@@Base+0xbe4>
   11a0c:	sub	r3, fp, #540	; 0x21c
   11a10:	mov	r0, r3
   11a14:	bl	11634 <_start@@Base+0x798>
   11a18:	mov	r3, r0
   11a1c:	cmp	r3, #0
   11a20:	beq	11a5c <_start@@Base+0xbc0>
   11a24:	ldr	r3, [pc, #108]	; 11a98 <_start@@Base+0xbfc>
   11a28:	ldr	r3, [r4, r3]
   11a2c:	ldr	r4, [r3]
   11a30:	bl	10e6c <coda_get_errno@plt>
   11a34:	mov	r3, r0
   11a38:	ldr	r3, [r3]
   11a3c:	mov	r0, r3
   11a40:	bl	10e3c <coda_errno_to_string@plt>
   11a44:	mov	r2, r0
   11a48:	ldr	r3, [fp, #-544]	; 0xfffffde0
   11a4c:	ldr	r1, [pc, #76]	; 11aa0 <_start@@Base+0xc04>
   11a50:	add	r1, pc, r1
   11a54:	mov	r0, r4
   11a58:	bl	10dc4 <fprintf@plt>
   11a5c:	ldr	r3, [fp, #-16]
   11a60:	mov	r0, r3
   11a64:	bl	10e0c <coda_close@plt>
   11a68:	mov	r3, r0
   11a6c:	cmp	r3, #0
   11a70:	beq	11a7c <_start@@Base+0xbe0>
   11a74:	mov	r3, #1
   11a78:	b	11a80 <_start@@Base+0xbe4>
   11a7c:	mov	r3, #0
   11a80:	mov	r0, r3
   11a84:	sub	sp, fp, #8
   11a88:	pop	{r4, fp, pc}
   11a8c:	ldrdeq	r2, [r1], -ip
   11a90:	andeq	r2, r1, r8, lsr r7
   11a94:	andeq	r2, r1, r4, lsr #14
   11a98:	andeq	r0, r0, r4, lsr #1
   11a9c:	andeq	r1, r0, ip, ror r3
   11aa0:	andeq	r1, r0, r4, asr #6

00011aa4 <callback@@Base>:
   11aa4:	push	{fp, lr}
   11aa8:	add	fp, sp, #4
   11aac:	sub	sp, sp, #16
   11ab0:	str	r0, [fp, #-8]
   11ab4:	str	r1, [fp, #-12]
   11ab8:	str	r2, [fp, #-16]
   11abc:	str	r3, [fp, #-20]	; 0xffffffec
   11ac0:	ldr	r3, [pc, #184]	; 11b80 <callback@@Base+0xdc>
   11ac4:	add	r3, pc, r3
   11ac8:	ldr	r2, [fp, #-12]
   11acc:	cmp	r2, #0
   11ad0:	bne	11af8 <callback@@Base+0x54>
   11ad4:	ldr	r2, [pc, #168]	; 11b84 <callback@@Base+0xe0>
   11ad8:	ldr	r3, [r3, r2]
   11adc:	ldr	r0, [r3]
   11ae0:	ldr	r3, [fp, #-8]
   11ae4:	ldr	r2, [fp, #-16]
   11ae8:	ldr	r1, [pc, #152]	; 11b88 <callback@@Base+0xe4>
   11aec:	add	r1, pc, r1
   11af0:	bl	10dc4 <fprintf@plt>
   11af4:	b	11b54 <callback@@Base+0xb0>
   11af8:	ldr	r2, [fp, #-12]
   11afc:	cmp	r2, #2
   11b00:	bne	11b28 <callback@@Base+0x84>
   11b04:	ldr	r2, [pc, #120]	; 11b84 <callback@@Base+0xe0>
   11b08:	ldr	r3, [r3, r2]
   11b0c:	ldr	r3, [r3]
   11b10:	ldr	r2, [fp, #-8]
   11b14:	ldr	r1, [pc, #112]	; 11b8c <callback@@Base+0xe8>
   11b18:	add	r1, pc, r1
   11b1c:	mov	r0, r3
   11b20:	bl	10dc4 <fprintf@plt>
   11b24:	b	11b54 <callback@@Base+0xb0>
   11b28:	ldr	r2, [fp, #-12]
   11b2c:	cmp	r2, #1
   11b30:	bne	11b54 <callback@@Base+0xb0>
   11b34:	ldr	r2, [pc, #72]	; 11b84 <callback@@Base+0xe0>
   11b38:	ldr	r3, [r3, r2]
   11b3c:	ldr	r0, [r3]
   11b40:	ldr	r3, [fp, #-16]
   11b44:	ldr	r2, [fp, #-8]
   11b48:	ldr	r1, [pc, #64]	; 11b90 <callback@@Base+0xec>
   11b4c:	add	r1, pc, r1
   11b50:	bl	10dc4 <fprintf@plt>
   11b54:	ldr	r3, [fp, #-12]
   11b58:	cmp	r3, #4
   11b5c:	bne	11b70 <callback@@Base+0xcc>
   11b60:	ldr	r0, [fp, #-8]
   11b64:	bl	11908 <_start@@Base+0xa6c>
   11b68:	mov	r3, r0
   11b6c:	b	11b74 <callback@@Base+0xd0>
   11b70:	mov	r3, #0
   11b74:	mov	r0, r3
   11b78:	sub	sp, fp, #4
   11b7c:	pop	{fp, pc}
   11b80:	andeq	r2, r1, r4, lsr r5
   11b84:	andeq	r0, r0, r4, lsr #1
   11b88:	andeq	r1, r0, r8, lsr #5
   11b8c:	muleq	r0, r0, r2
   11b90:	andeq	r1, r0, r4, lsl #5

00011b94 <main@@Base>:
   11b94:	push	{r4, fp, lr}
   11b98:	add	fp, sp, #8
   11b9c:	sub	sp, sp, #36	; 0x24
   11ba0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ba4:	str	r1, [fp, #-36]	; 0xffffffdc
   11ba8:	ldr	r4, [pc, #2104]	; 123e8 <main@@Base+0x854>
   11bac:	add	r4, pc, r4
   11bb0:	mov	r3, #1
   11bb4:	str	r3, [fp, #-16]
   11bb8:	mov	r3, #0
   11bbc:	str	r3, [fp, #-20]	; 0xffffffec
   11bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bc4:	cmp	r3, #1
   11bc8:	beq	11c24 <main@@Base+0x90>
   11bcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bd0:	add	r3, r3, #4
   11bd4:	ldr	r3, [r3]
   11bd8:	ldr	r2, [pc, #2060]	; 123ec <main@@Base+0x858>
   11bdc:	add	r2, pc, r2
   11be0:	mov	r1, r2
   11be4:	mov	r0, r3
   11be8:	bl	10cec <strcmp@plt>
   11bec:	mov	r3, r0
   11bf0:	cmp	r3, #0
   11bf4:	beq	11c24 <main@@Base+0x90>
   11bf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bfc:	add	r3, r3, #4
   11c00:	ldr	r3, [r3]
   11c04:	ldr	r2, [pc, #2020]	; 123f0 <main@@Base+0x85c>
   11c08:	add	r2, pc, r2
   11c0c:	mov	r1, r2
   11c10:	mov	r0, r3
   11c14:	bl	10cec <strcmp@plt>
   11c18:	mov	r3, r0
   11c1c:	cmp	r3, #0
   11c20:	bne	11c30 <main@@Base+0x9c>
   11c24:	bl	11374 <_start@@Base+0x4d8>
   11c28:	mov	r0, #0
   11c2c:	bl	10dac <exit@plt>
   11c30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c34:	add	r3, r3, #4
   11c38:	ldr	r3, [r3]
   11c3c:	ldr	r2, [pc, #1968]	; 123f4 <main@@Base+0x860>
   11c40:	add	r2, pc, r2
   11c44:	mov	r1, r2
   11c48:	mov	r0, r3
   11c4c:	bl	10cec <strcmp@plt>
   11c50:	mov	r3, r0
   11c54:	cmp	r3, #0
   11c58:	beq	11c88 <main@@Base+0xf4>
   11c5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c60:	add	r3, r3, #4
   11c64:	ldr	r3, [r3]
   11c68:	ldr	r2, [pc, #1928]	; 123f8 <main@@Base+0x864>
   11c6c:	add	r2, pc, r2
   11c70:	mov	r1, r2
   11c74:	mov	r0, r3
   11c78:	bl	10cec <strcmp@plt>
   11c7c:	mov	r3, r0
   11c80:	cmp	r3, #0
   11c84:	bne	11c94 <main@@Base+0x100>
   11c88:	bl	11328 <_start@@Base+0x48c>
   11c8c:	mov	r0, #0
   11c90:	bl	10dac <exit@plt>
   11c94:	mov	r3, #1
   11c98:	str	r3, [fp, #-24]	; 0xffffffe8
   11c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ca0:	add	r2, r3, #1
   11ca4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ca8:	cmp	r2, r3
   11cac:	bge	11d14 <main@@Base+0x180>
   11cb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cb4:	lsl	r3, r3, #2
   11cb8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11cbc:	add	r3, r2, r3
   11cc0:	ldr	r3, [r3]
   11cc4:	ldr	r2, [pc, #1840]	; 123fc <main@@Base+0x868>
   11cc8:	add	r2, pc, r2
   11ccc:	mov	r1, r2
   11cd0:	mov	r0, r3
   11cd4:	bl	10cec <strcmp@plt>
   11cd8:	mov	r3, r0
   11cdc:	cmp	r3, #0
   11ce0:	bne	11d14 <main@@Base+0x180>
   11ce4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ce8:	add	r3, r3, #1
   11cec:	lsl	r3, r3, #2
   11cf0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11cf4:	add	r3, r2, r3
   11cf8:	ldr	r3, [r3]
   11cfc:	mov	r0, r3
   11d00:	bl	10d34 <coda_set_definition_path@plt>
   11d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d08:	add	r3, r3, #2
   11d0c:	str	r3, [fp, #-24]	; 0xffffffe8
   11d10:	b	11d88 <main@@Base+0x1f4>
   11d14:	ldr	r3, [pc, #1764]	; 12400 <main@@Base+0x86c>
   11d18:	add	r3, pc, r3
   11d1c:	str	r3, [fp, #-28]	; 0xffffffe4
   11d20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11d24:	ldr	r3, [r3]
   11d28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d2c:	mov	r1, #0
   11d30:	mov	r0, r3
   11d34:	bl	10d28 <coda_set_definition_path_conditional@plt>
   11d38:	mov	r3, r0
   11d3c:	cmp	r3, #0
   11d40:	beq	11fc4 <main@@Base+0x430>
   11d44:	ldr	r3, [pc, #1720]	; 12404 <main@@Base+0x870>
   11d48:	ldr	r3, [r4, r3]
   11d4c:	ldr	r4, [r3]
   11d50:	bl	10e6c <coda_get_errno@plt>
   11d54:	mov	r3, r0
   11d58:	ldr	r3, [r3]
   11d5c:	mov	r0, r3
   11d60:	bl	10e3c <coda_errno_to_string@plt>
   11d64:	mov	r3, r0
   11d68:	mov	r2, r3
   11d6c:	ldr	r3, [pc, #1684]	; 12408 <main@@Base+0x874>
   11d70:	add	r3, pc, r3
   11d74:	mov	r1, r3
   11d78:	mov	r0, r4
   11d7c:	bl	10dc4 <fprintf@plt>
   11d80:	mov	r0, #1
   11d84:	bl	10dac <exit@plt>
   11d88:	b	11fc4 <main@@Base+0x430>
   11d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d90:	lsl	r3, r3, #2
   11d94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11d98:	add	r3, r2, r3
   11d9c:	ldr	r3, [r3]
   11da0:	ldr	r2, [pc, #1636]	; 1240c <main@@Base+0x878>
   11da4:	add	r2, pc, r2
   11da8:	mov	r1, r2
   11dac:	mov	r0, r3
   11db0:	bl	10cec <strcmp@plt>
   11db4:	mov	r3, r0
   11db8:	cmp	r3, #0
   11dbc:	beq	11df4 <main@@Base+0x260>
   11dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11dc4:	lsl	r3, r3, #2
   11dc8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11dcc:	add	r3, r2, r3
   11dd0:	ldr	r3, [r3]
   11dd4:	ldr	r2, [pc, #1588]	; 12410 <main@@Base+0x87c>
   11dd8:	add	r2, pc, r2
   11ddc:	mov	r1, r2
   11de0:	mov	r0, r3
   11de4:	bl	10cec <strcmp@plt>
   11de8:	mov	r3, r0
   11dec:	cmp	r3, #0
   11df0:	bne	11e00 <main@@Base+0x26c>
   11df4:	mov	r3, #1
   11df8:	str	r3, [fp, #-20]	; 0xffffffec
   11dfc:	b	11fb8 <main@@Base+0x424>
   11e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e04:	lsl	r3, r3, #2
   11e08:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11e0c:	add	r3, r2, r3
   11e10:	ldr	r3, [r3]
   11e14:	ldr	r2, [pc, #1528]	; 12414 <main@@Base+0x880>
   11e18:	add	r2, pc, r2
   11e1c:	mov	r1, r2
   11e20:	mov	r0, r3
   11e24:	bl	10cec <strcmp@plt>
   11e28:	mov	r3, r0
   11e2c:	cmp	r3, #0
   11e30:	beq	11e68 <main@@Base+0x2d4>
   11e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e38:	lsl	r3, r3, #2
   11e3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11e40:	add	r3, r2, r3
   11e44:	ldr	r3, [r3]
   11e48:	ldr	r2, [pc, #1480]	; 12418 <main@@Base+0x884>
   11e4c:	add	r2, pc, r2
   11e50:	mov	r1, r2
   11e54:	mov	r0, r3
   11e58:	bl	10cec <strcmp@plt>
   11e5c:	mov	r3, r0
   11e60:	cmp	r3, #0
   11e64:	bne	11e74 <main@@Base+0x2e0>
   11e68:	mov	r3, #0
   11e6c:	str	r3, [fp, #-16]
   11e70:	b	11fb8 <main@@Base+0x424>
   11e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e78:	lsl	r3, r3, #2
   11e7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11e80:	add	r3, r2, r3
   11e84:	ldr	r3, [r3]
   11e88:	ldr	r2, [pc, #1420]	; 1241c <main@@Base+0x888>
   11e8c:	add	r2, pc, r2
   11e90:	mov	r1, r2
   11e94:	mov	r0, r3
   11e98:	bl	10cec <strcmp@plt>
   11e9c:	mov	r3, r0
   11ea0:	cmp	r3, #0
   11ea4:	bne	11f6c <main@@Base+0x3d8>
   11ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11eac:	add	r2, r3, #1
   11eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11eb4:	cmp	r2, r3
   11eb8:	bge	11f6c <main@@Base+0x3d8>
   11ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ec0:	add	r3, r3, #1
   11ec4:	lsl	r3, r3, #2
   11ec8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ecc:	add	r3, r2, r3
   11ed0:	ldr	r3, [r3]
   11ed4:	ldrb	r3, [r3]
   11ed8:	cmp	r3, #45	; 0x2d
   11edc:	beq	11f6c <main@@Base+0x3d8>
   11ee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ee4:	add	r3, r3, #1
   11ee8:	lsl	r3, r3, #2
   11eec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11ef0:	add	r3, r2, r3
   11ef4:	ldr	r3, [r3]
   11ef8:	ldr	r2, [pc, #1312]	; 12420 <main@@Base+0x88c>
   11efc:	add	r2, pc, r2
   11f00:	mov	r1, r2
   11f04:	mov	r0, r3
   11f08:	bl	10e54 <coda_expression_from_string@plt>
   11f0c:	mov	r3, r0
   11f10:	cmp	r3, #0
   11f14:	beq	11f5c <main@@Base+0x3c8>
   11f18:	ldr	r3, [pc, #1252]	; 12404 <main@@Base+0x870>
   11f1c:	ldr	r3, [r4, r3]
   11f20:	ldr	r4, [r3]
   11f24:	bl	10e6c <coda_get_errno@plt>
   11f28:	mov	r3, r0
   11f2c:	ldr	r3, [r3]
   11f30:	mov	r0, r3
   11f34:	bl	10e3c <coda_errno_to_string@plt>
   11f38:	mov	r3, r0
   11f3c:	mov	r2, r3
   11f40:	ldr	r3, [pc, #1244]	; 12424 <main@@Base+0x890>
   11f44:	add	r3, pc, r3
   11f48:	mov	r1, r3
   11f4c:	mov	r0, r4
   11f50:	bl	10dc4 <fprintf@plt>
   11f54:	mov	r0, #1
   11f58:	bl	10dac <exit@plt>
   11f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f60:	add	r3, r3, #1
   11f64:	str	r3, [fp, #-24]	; 0xffffffe8
   11f68:	b	11fb8 <main@@Base+0x424>
   11f6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f70:	lsl	r3, r3, #2
   11f74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11f78:	add	r3, r2, r3
   11f7c:	ldr	r3, [r3]
   11f80:	ldrb	r3, [r3]
   11f84:	cmp	r3, #45	; 0x2d
   11f88:	bne	11fd8 <main@@Base+0x444>
   11f8c:	ldr	r3, [pc, #1136]	; 12404 <main@@Base+0x870>
   11f90:	ldr	r3, [r4, r3]
   11f94:	ldr	r3, [r3]
   11f98:	mov	r2, #25
   11f9c:	mov	r1, #1
   11fa0:	ldr	r0, [pc, #1152]	; 12428 <main@@Base+0x894>
   11fa4:	add	r0, pc, r0
   11fa8:	bl	10d40 <fwrite@plt>
   11fac:	bl	11374 <_start@@Base+0x4d8>
   11fb0:	mov	r0, #1
   11fb4:	bl	10dac <exit@plt>
   11fb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fbc:	add	r3, r3, #1
   11fc0:	str	r3, [fp, #-24]	; 0xffffffe8
   11fc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11fc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fcc:	cmp	r2, r3
   11fd0:	blt	11d8c <main@@Base+0x1f8>
   11fd4:	b	11fdc <main@@Base+0x448>
   11fd8:	nop			; (mov r0, r0)
   11fdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11fe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11fe4:	cmp	r2, r3
   11fe8:	blt	12018 <main@@Base+0x484>
   11fec:	ldr	r3, [pc, #1040]	; 12404 <main@@Base+0x870>
   11ff0:	ldr	r3, [r4, r3]
   11ff4:	ldr	r3, [r3]
   11ff8:	mov	r2, #25
   11ffc:	mov	r1, #1
   12000:	ldr	r0, [pc, #1060]	; 1242c <main@@Base+0x898>
   12004:	add	r0, pc, r0
   12008:	bl	10d40 <fwrite@plt>
   1200c:	bl	11374 <_start@@Base+0x4d8>
   12010:	mov	r0, #1
   12014:	bl	10dac <exit@plt>
   12018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1201c:	lsl	r3, r3, #2
   12020:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12024:	add	r3, r2, r3
   12028:	ldr	r3, [r3]
   1202c:	ldr	r2, [pc, #1020]	; 12430 <main@@Base+0x89c>
   12030:	add	r2, pc, r2
   12034:	mov	r1, r2
   12038:	mov	r0, r3
   1203c:	bl	10e54 <coda_expression_from_string@plt>
   12040:	mov	r3, r0
   12044:	cmp	r3, #0
   12048:	beq	12090 <main@@Base+0x4fc>
   1204c:	ldr	r3, [pc, #944]	; 12404 <main@@Base+0x870>
   12050:	ldr	r3, [r4, r3]
   12054:	ldr	r4, [r3]
   12058:	bl	10e6c <coda_get_errno@plt>
   1205c:	mov	r3, r0
   12060:	ldr	r3, [r3]
   12064:	mov	r0, r3
   12068:	bl	10e3c <coda_errno_to_string@plt>
   1206c:	mov	r3, r0
   12070:	mov	r2, r3
   12074:	ldr	r3, [pc, #952]	; 12434 <main@@Base+0x8a0>
   12078:	add	r3, pc, r3
   1207c:	mov	r1, r3
   12080:	mov	r0, r4
   12084:	bl	10dc4 <fprintf@plt>
   12088:	mov	r0, #1
   1208c:	bl	10dac <exit@plt>
   12090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12094:	add	r3, r3, #1
   12098:	str	r3, [fp, #-24]	; 0xffffffe8
   1209c:	ldr	r3, [pc, #916]	; 12438 <main@@Base+0x8a4>
   120a0:	add	r3, pc, r3
   120a4:	ldr	r3, [r3]
   120a8:	ldr	r2, [pc, #908]	; 1243c <main@@Base+0x8a8>
   120ac:	add	r2, pc, r2
   120b0:	mov	r1, r2
   120b4:	mov	r0, r3
   120b8:	bl	10e00 <coda_expression_get_type@plt>
   120bc:	mov	r3, r0
   120c0:	cmp	r3, #0
   120c4:	beq	1210c <main@@Base+0x578>
   120c8:	ldr	r3, [pc, #820]	; 12404 <main@@Base+0x870>
   120cc:	ldr	r3, [r4, r3]
   120d0:	ldr	r4, [r3]
   120d4:	bl	10e6c <coda_get_errno@plt>
   120d8:	mov	r3, r0
   120dc:	ldr	r3, [r3]
   120e0:	mov	r0, r3
   120e4:	bl	10e3c <coda_errno_to_string@plt>
   120e8:	mov	r3, r0
   120ec:	mov	r2, r3
   120f0:	ldr	r3, [pc, #840]	; 12440 <main@@Base+0x8ac>
   120f4:	add	r3, pc, r3
   120f8:	mov	r1, r3
   120fc:	mov	r0, r4
   12100:	bl	10dc4 <fprintf@plt>
   12104:	mov	r0, #1
   12108:	bl	10dac <exit@plt>
   1210c:	ldr	r3, [pc, #816]	; 12444 <main@@Base+0x8b0>
   12110:	add	r3, pc, r3
   12114:	ldr	r3, [r3]
   12118:	cmp	r3, #4
   1211c:	beq	12134 <main@@Base+0x5a0>
   12120:	ldr	r3, [pc, #800]	; 12448 <main@@Base+0x8b4>
   12124:	add	r3, pc, r3
   12128:	ldr	r3, [r3]
   1212c:	cmp	r3, #5
   12130:	bne	12178 <main@@Base+0x5e4>
   12134:	ldr	r3, [pc, #712]	; 12404 <main@@Base+0x870>
   12138:	ldr	r3, [r4, r3]
   1213c:	ldr	r4, [r3]
   12140:	ldr	r3, [pc, #772]	; 1244c <main@@Base+0x8b8>
   12144:	add	r3, pc, r3
   12148:	ldr	r3, [r3]
   1214c:	mov	r0, r3
   12150:	bl	10e48 <coda_expression_get_type_name@plt>
   12154:	mov	r3, r0
   12158:	mov	r2, r3
   1215c:	ldr	r3, [pc, #748]	; 12450 <main@@Base+0x8bc>
   12160:	add	r3, pc, r3
   12164:	mov	r1, r3
   12168:	mov	r0, r4
   1216c:	bl	10dc4 <fprintf@plt>
   12170:	mov	r0, #1
   12174:	bl	10dac <exit@plt>
   12178:	ldr	r3, [fp, #-20]	; 0xffffffec
   1217c:	cmp	r3, #0
   12180:	beq	121c8 <main@@Base+0x634>
   12184:	ldr	r3, [pc, #712]	; 12454 <main@@Base+0x8c0>
   12188:	add	r3, pc, r3
   1218c:	ldr	r3, [r3]
   12190:	mov	r0, r3
   12194:	bl	10d88 <coda_expression_delete@plt>
   12198:	ldr	r3, [pc, #696]	; 12458 <main@@Base+0x8c4>
   1219c:	add	r3, pc, r3
   121a0:	ldr	r3, [r3]
   121a4:	cmp	r3, #0
   121a8:	beq	121c0 <main@@Base+0x62c>
   121ac:	ldr	r3, [pc, #680]	; 1245c <main@@Base+0x8c8>
   121b0:	add	r3, pc, r3
   121b4:	ldr	r3, [r3]
   121b8:	mov	r0, r3
   121bc:	bl	10d88 <coda_expression_delete@plt>
   121c0:	mov	r3, #0
   121c4:	b	123dc <main@@Base+0x848>
   121c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121d0:	cmp	r2, r3
   121d4:	bge	122c0 <main@@Base+0x72c>
   121d8:	bl	10dd0 <coda_init@plt>
   121dc:	mov	r3, r0
   121e0:	cmp	r3, #0
   121e4:	beq	1222c <main@@Base+0x698>
   121e8:	ldr	r3, [pc, #532]	; 12404 <main@@Base+0x870>
   121ec:	ldr	r3, [r4, r3]
   121f0:	ldr	r4, [r3]
   121f4:	bl	10e6c <coda_get_errno@plt>
   121f8:	mov	r3, r0
   121fc:	ldr	r3, [r3]
   12200:	mov	r0, r3
   12204:	bl	10e3c <coda_errno_to_string@plt>
   12208:	mov	r3, r0
   1220c:	mov	r2, r3
   12210:	ldr	r3, [pc, #584]	; 12460 <main@@Base+0x8cc>
   12214:	add	r3, pc, r3
   12218:	mov	r1, r3
   1221c:	mov	r0, r4
   12220:	bl	10dc4 <fprintf@plt>
   12224:	mov	r0, #1
   12228:	bl	10dac <exit@plt>
   1222c:	ldr	r0, [fp, #-16]
   12230:	bl	10ddc <coda_set_option_perform_conversions@plt>
   12234:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1223c:	sub	r1, r2, r3
   12240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12244:	lsl	r3, r3, #2
   12248:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1224c:	add	r2, r2, r3
   12250:	mov	r3, #0
   12254:	str	r3, [sp]
   12258:	ldr	r3, [pc, #516]	; 12464 <main@@Base+0x8d0>
   1225c:	ldr	r3, [r4, r3]
   12260:	mov	r0, #0
   12264:	bl	10cd4 <coda_match_filefilter@plt>
   12268:	mov	r3, r0
   1226c:	cmp	r3, #0
   12270:	beq	122b8 <main@@Base+0x724>
   12274:	ldr	r3, [pc, #392]	; 12404 <main@@Base+0x870>
   12278:	ldr	r3, [r4, r3]
   1227c:	ldr	r4, [r3]
   12280:	bl	10e6c <coda_get_errno@plt>
   12284:	mov	r3, r0
   12288:	ldr	r3, [r3]
   1228c:	mov	r0, r3
   12290:	bl	10e3c <coda_errno_to_string@plt>
   12294:	mov	r3, r0
   12298:	mov	r2, r3
   1229c:	ldr	r3, [pc, #452]	; 12468 <main@@Base+0x8d4>
   122a0:	add	r3, pc, r3
   122a4:	mov	r1, r3
   122a8:	mov	r0, r4
   122ac:	bl	10dc4 <fprintf@plt>
   122b0:	mov	r0, #1
   122b4:	bl	10dac <exit@plt>
   122b8:	bl	10d64 <coda_done@plt>
   122bc:	b	1239c <main@@Base+0x808>
   122c0:	ldr	r3, [pc, #420]	; 1246c <main@@Base+0x8d8>
   122c4:	add	r3, pc, r3
   122c8:	ldr	r3, [r3]
   122cc:	cmp	r3, #0
   122d0:	beq	122fc <main@@Base+0x768>
   122d4:	ldr	r3, [pc, #296]	; 12404 <main@@Base+0x870>
   122d8:	ldr	r3, [r4, r3]
   122dc:	ldr	r3, [r3]
   122e0:	mov	r2, #96	; 0x60
   122e4:	mov	r1, #1
   122e8:	ldr	r0, [pc, #384]	; 12470 <main@@Base+0x8dc>
   122ec:	add	r0, pc, r0
   122f0:	bl	10d40 <fwrite@plt>
   122f4:	mov	r0, #1
   122f8:	bl	10dac <exit@plt>
   122fc:	ldr	r3, [pc, #368]	; 12474 <main@@Base+0x8e0>
   12300:	add	r3, pc, r3
   12304:	ldr	r3, [r3]
   12308:	mov	r0, r3
   1230c:	bl	10e18 <coda_expression_is_constant@plt>
   12310:	mov	r3, r0
   12314:	cmp	r3, #0
   12318:	bne	12344 <main@@Base+0x7b0>
   1231c:	ldr	r3, [pc, #224]	; 12404 <main@@Base+0x870>
   12320:	ldr	r3, [r4, r3]
   12324:	ldr	r3, [r3]
   12328:	mov	r2, #111	; 0x6f
   1232c:	mov	r1, #1
   12330:	ldr	r0, [pc, #320]	; 12478 <main@@Base+0x8e4>
   12334:	add	r0, pc, r0
   12338:	bl	10d40 <fwrite@plt>
   1233c:	mov	r0, #1
   12340:	bl	10dac <exit@plt>
   12344:	mov	r0, #0
   12348:	bl	11634 <_start@@Base+0x798>
   1234c:	mov	r3, r0
   12350:	cmp	r3, #0
   12354:	beq	1239c <main@@Base+0x808>
   12358:	ldr	r3, [pc, #164]	; 12404 <main@@Base+0x870>
   1235c:	ldr	r3, [r4, r3]
   12360:	ldr	r4, [r3]
   12364:	bl	10e6c <coda_get_errno@plt>
   12368:	mov	r3, r0
   1236c:	ldr	r3, [r3]
   12370:	mov	r0, r3
   12374:	bl	10e3c <coda_errno_to_string@plt>
   12378:	mov	r3, r0
   1237c:	mov	r2, r3
   12380:	ldr	r3, [pc, #244]	; 1247c <main@@Base+0x8e8>
   12384:	add	r3, pc, r3
   12388:	mov	r1, r3
   1238c:	mov	r0, r4
   12390:	bl	10dc4 <fprintf@plt>
   12394:	mov	r0, #1
   12398:	bl	10dac <exit@plt>
   1239c:	ldr	r3, [pc, #220]	; 12480 <main@@Base+0x8ec>
   123a0:	add	r3, pc, r3
   123a4:	ldr	r3, [r3]
   123a8:	mov	r0, r3
   123ac:	bl	10d88 <coda_expression_delete@plt>
   123b0:	ldr	r3, [pc, #204]	; 12484 <main@@Base+0x8f0>
   123b4:	add	r3, pc, r3
   123b8:	ldr	r3, [r3]
   123bc:	cmp	r3, #0
   123c0:	beq	123d8 <main@@Base+0x844>
   123c4:	ldr	r3, [pc, #188]	; 12488 <main@@Base+0x8f4>
   123c8:	add	r3, pc, r3
   123cc:	ldr	r3, [r3]
   123d0:	mov	r0, r3
   123d4:	bl	10d88 <coda_expression_delete@plt>
   123d8:	mov	r3, #0
   123dc:	mov	r0, r3
   123e0:	sub	sp, fp, #8
   123e4:	pop	{r4, fp, pc}
   123e8:	andeq	r2, r1, ip, asr #8
   123ec:	andeq	r1, r0, r8, lsl r2
   123f0:	strdeq	r1, [r0], -r0
   123f4:	andeq	r1, r0, r0, asr #3
   123f8:	muleq	r0, r8, r1
   123fc:	andeq	r1, r0, r8, asr #2
   12400:	strdeq	r1, [r0], -ip
   12404:	andeq	r0, r0, r4, lsr #1
   12408:	andeq	r1, r0, r0, asr #1
   1240c:	muleq	r0, r8, r0
   12410:	andeq	r1, r0, r8, rrx
   12414:	andeq	r1, r0, r0, lsr r0
   12418:	andeq	r1, r0, r0
   1241c:	ldrdeq	r0, [r0], -r8
   12420:	andeq	r2, r1, r0, asr #3
   12424:	andeq	r0, r0, r4, lsr #30
   12428:	andeq	r0, r0, ip, ror #29
   1242c:	andeq	r0, r0, ip, lsl #29
   12430:	andeq	r2, r1, r4, lsl #1
   12434:	andeq	r0, r0, r4, lsr lr
   12438:	andeq	r2, r1, r4, lsl r0
   1243c:	andeq	r2, r1, ip
   12440:	andeq	r0, r0, ip, lsr sp
   12444:	andeq	r1, r1, r8, lsr #31
   12448:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   1244c:	andeq	r1, r1, r4, ror pc
   12450:	andeq	r0, r0, ip, ror #26
   12454:	andeq	r1, r1, ip, lsr #30
   12458:	andeq	r1, r1, r0, lsr #30
   1245c:	andeq	r1, r1, ip, lsl #30
   12460:	andeq	r0, r0, ip, lsl ip
   12464:	andeq	r0, r0, ip, lsr #1
   12468:	muleq	r0, r0, fp
   1246c:	strdeq	r1, [r1], -r8
   12470:	andeq	r0, r0, r0, lsl ip
   12474:			; <UNDEFINED> instruction: 0x00011db4
   12478:	andeq	r0, r0, ip, lsr #24
   1247c:	andeq	r0, r0, ip, lsr #21
   12480:	andeq	r1, r1, r4, lsl sp
   12484:	andeq	r1, r1, r8, lsl #26
   12488:	strdeq	r1, [r1], -r4

0001248c <__libc_csu_init@@Base>:
   1248c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12490:	mov	r7, r0
   12494:	ldr	r6, [pc, #72]	; 124e4 <__libc_csu_init@@Base+0x58>
   12498:	ldr	r5, [pc, #72]	; 124e8 <__libc_csu_init@@Base+0x5c>
   1249c:	add	r6, pc, r6
   124a0:	add	r5, pc, r5
   124a4:	sub	r6, r6, r5
   124a8:	mov	r8, r1
   124ac:	mov	r9, r2
   124b0:	bl	10cb4 <coda_match_filefilter@plt-0x20>
   124b4:	asrs	r6, r6, #2
   124b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   124bc:	mov	r4, #0
   124c0:	add	r4, r4, #1
   124c4:	ldr	r3, [r5], #4
   124c8:	mov	r2, r9
   124cc:	mov	r1, r8
   124d0:	mov	r0, r7
   124d4:	blx	r3
   124d8:	cmp	r6, r4
   124dc:	bne	124c0 <__libc_csu_init@@Base+0x34>
   124e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124e4:	andeq	r1, r1, r4, asr sl
   124e8:	andeq	r1, r1, ip, asr #20

000124ec <__libc_csu_fini@@Base>:
   124ec:	bx	lr

Disassembly of section .fini:

000124f0 <.fini>:
   124f0:	push	{r3, lr}
   124f4:	pop	{r3, pc}
