
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010a78 <.init>:
   10a78:	push	{r3, lr}
   10a7c:	bl	10b58 <_start@@Base+0x3c>
   10a80:	pop	{r3, pc}

Disassembly of section .plt:

00010a84 <calloc@plt-0x14>:
   10a84:	push	{lr}		; (str lr, [sp, #-4]!)
   10a88:	ldr	lr, [pc, #4]	; 10a94 <calloc@plt-0x4>
   10a8c:	add	lr, pc, lr
   10a90:	ldr	pc, [lr, #8]!
   10a94:	andeq	r3, r1, ip, ror #10

00010a98 <calloc@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #77824	; 0x13000
   10aa0:	ldr	pc, [ip, #1388]!	; 0x56c

00010aa4 <printf@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #77824	; 0x13000
   10aac:	ldr	pc, [ip, #1380]!	; 0x564

00010ab0 <free@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #77824	; 0x13000
   10ab8:	ldr	pc, [ip, #1372]!	; 0x55c

00010abc <realloc@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #77824	; 0x13000
   10ac4:	ldr	pc, [ip, #1364]!	; 0x554

00010ac8 <puts@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #77824	; 0x13000
   10ad0:	ldr	pc, [ip, #1356]!	; 0x54c

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #77824	; 0x13000
   10adc:	ldr	pc, [ip, #1348]!	; 0x544

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #77824	; 0x13000
   10ae8:	ldr	pc, [ip, #1340]!	; 0x53c

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #77824	; 0x13000
   10af4:	ldr	pc, [ip, #1332]!	; 0x534

00010af8 <setvbuf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #77824	; 0x13000
   10b00:	ldr	pc, [ip, #1324]!	; 0x52c

00010b04 <putchar@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #77824	; 0x13000
   10b0c:	ldr	pc, [ip, #1316]!	; 0x524

00010b10 <abort@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #77824	; 0x13000
   10b18:	ldr	pc, [ip, #1308]!	; 0x51c

Disassembly of section .text:

00010b1c <_start@@Base>:
   10b1c:	mov	fp, #0
   10b20:	mov	lr, #0
   10b24:	pop	{r1}		; (ldr r1, [sp], #4)
   10b28:	mov	r2, sp
   10b2c:	push	{r2}		; (str r2, [sp, #-4]!)
   10b30:	push	{r0}		; (str r0, [sp, #-4]!)
   10b34:	ldr	ip, [pc, #16]	; 10b4c <_start@@Base+0x30>
   10b38:	push	{ip}		; (str ip, [sp, #-4]!)
   10b3c:	ldr	r0, [pc, #12]	; 10b50 <_start@@Base+0x34>
   10b40:	ldr	r3, [pc, #12]	; 10b54 <_start@@Base+0x38>
   10b44:	bl	10ae0 <__libc_start_main@plt>
   10b48:	bl	10b10 <abort@plt>
   10b4c:	ldrdeq	r3, [r1], -r8
   10b50:	andeq	r2, r1, ip, asr #1
   10b54:	andeq	r3, r1, r8, ror r1
   10b58:	ldr	r3, [pc, #20]	; 10b74 <_start@@Base+0x58>
   10b5c:	ldr	r2, [pc, #20]	; 10b78 <_start@@Base+0x5c>
   10b60:	add	r3, pc, r3
   10b64:	ldr	r2, [r3, r2]
   10b68:	cmp	r2, #0
   10b6c:	bxeq	lr
   10b70:	b	10aec <__gmon_start__@plt>
   10b74:	muleq	r1, r8, r4
   10b78:	andeq	r0, r0, ip, lsr r0
   10b7c:	ldr	r0, [pc, #24]	; 10b9c <_start@@Base+0x80>
   10b80:	ldr	r3, [pc, #24]	; 10ba0 <_start@@Base+0x84>
   10b84:	cmp	r3, r0
   10b88:	bxeq	lr
   10b8c:	ldr	r3, [pc, #16]	; 10ba4 <_start@@Base+0x88>
   10b90:	cmp	r3, #0
   10b94:	bxeq	lr
   10b98:	bx	r3
   10b9c:	andeq	r4, r2, ip, asr #32
   10ba0:	andeq	r4, r2, ip, asr #32
   10ba4:	andeq	r0, r0, r0
   10ba8:	ldr	r0, [pc, #36]	; 10bd4 <_start@@Base+0xb8>
   10bac:	ldr	r1, [pc, #36]	; 10bd8 <_start@@Base+0xbc>
   10bb0:	sub	r1, r1, r0
   10bb4:	asr	r1, r1, #2
   10bb8:	add	r1, r1, r1, lsr #31
   10bbc:	asrs	r1, r1, #1
   10bc0:	bxeq	lr
   10bc4:	ldr	r3, [pc, #16]	; 10bdc <_start@@Base+0xc0>
   10bc8:	cmp	r3, #0
   10bcc:	bxeq	lr
   10bd0:	bx	r3
   10bd4:	andeq	r4, r2, ip, asr #32
   10bd8:	andeq	r4, r2, ip, asr #32
   10bdc:	andeq	r0, r0, r0
   10be0:	push	{r4, lr}
   10be4:	ldr	r4, [pc, #24]	; 10c04 <_start@@Base+0xe8>
   10be8:	ldrb	r3, [r4]
   10bec:	cmp	r3, #0
   10bf0:	popne	{r4, pc}
   10bf4:	bl	10b7c <_start@@Base+0x60>
   10bf8:	mov	r3, #1
   10bfc:	strb	r3, [r4]
   10c00:	pop	{r4, pc}
   10c04:	andeq	r4, r2, ip, asr #32
   10c08:	b	10ba8 <_start@@Base+0x8c>

00010c0c <_g@@Base>:
   10c0c:	push	{r1, r2, r3}
   10c10:	str	fp, [sp, #-8]!
   10c14:	str	lr, [sp, #4]
   10c18:	add	fp, sp, #4
   10c1c:	sub	sp, sp, #36	; 0x24
   10c20:	str	r0, [fp, #-36]	; 0xffffffdc
   10c24:	mov	r0, #8
   10c28:	bl	10ad4 <malloc@plt>
   10c2c:	mov	r3, r0
   10c30:	str	r3, [fp, #-16]
   10c34:	add	r3, fp, #8
   10c38:	str	r3, [fp, #-32]	; 0xffffffe0
   10c3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c40:	mov	r1, #8
   10c44:	mov	r0, r3
   10c48:	bl	10a98 <calloc@plt>
   10c4c:	mov	r3, r0
   10c50:	mov	r2, r3
   10c54:	ldr	r3, [fp, #-16]
   10c58:	str	r2, [r3, #4]
   10c5c:	mov	r3, #0
   10c60:	str	r3, [fp, #-12]
   10c64:	b	10d18 <_g@@Base+0x10c>
   10c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c6c:	add	r2, r3, #4
   10c70:	str	r2, [fp, #-32]	; 0xffffffe0
   10c74:	ldr	r3, [r3]
   10c78:	str	r3, [fp, #-20]	; 0xffffffec
   10c7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c80:	add	r2, r3, #4
   10c84:	str	r2, [fp, #-32]	; 0xffffffe0
   10c88:	ldr	r3, [r3]
   10c8c:	str	r3, [fp, #-24]	; 0xffffffe8
   10c90:	mov	r1, #8
   10c94:	mov	r0, #1
   10c98:	bl	10a98 <calloc@plt>
   10c9c:	mov	r3, r0
   10ca0:	str	r3, [fp, #-28]	; 0xffffffe4
   10ca4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10cac:	str	r2, [r3]
   10cb0:	ldr	r3, [fp, #-16]
   10cb4:	ldr	r2, [r3, #4]
   10cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10cbc:	lsl	r3, r3, #3
   10cc0:	add	r3, r2, r3
   10cc4:	ldr	r2, [r3, #4]
   10cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ccc:	str	r2, [r3, #4]
   10cd0:	ldr	r3, [fp, #-16]
   10cd4:	ldr	r2, [r3, #4]
   10cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10cdc:	lsl	r3, r3, #3
   10ce0:	add	r3, r2, r3
   10ce4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10ce8:	str	r2, [r3, #4]
   10cec:	ldr	r3, [fp, #-16]
   10cf0:	ldr	r2, [r3, #4]
   10cf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10cf8:	lsl	r3, r3, #3
   10cfc:	add	r3, r2, r3
   10d00:	ldr	r2, [r3]
   10d04:	add	r2, r2, #1
   10d08:	str	r2, [r3]
   10d0c:	ldr	r3, [fp, #-12]
   10d10:	add	r3, r3, #2
   10d14:	str	r3, [fp, #-12]
   10d18:	ldr	r2, [fp, #-12]
   10d1c:	ldr	r3, [fp, #4]
   10d20:	cmp	r2, r3
   10d24:	blt	10c68 <_g@@Base+0x5c>
   10d28:	ldr	r3, [fp, #-16]
   10d2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10d30:	str	r2, [r3]
   10d34:	ldr	r3, [fp, #-16]
   10d38:	mov	r0, r3
   10d3c:	sub	sp, fp, #4
   10d40:	ldr	fp, [sp]
   10d44:	ldr	lr, [sp, #4]
   10d48:	add	sp, sp, #8
   10d4c:	add	sp, sp, #12
   10d50:	bx	lr

00010d54 <_f@@Base>:
   10d54:	str	fp, [sp, #-8]!
   10d58:	str	lr, [sp, #4]
   10d5c:	add	fp, sp, #4
   10d60:	sub	sp, sp, #16
   10d64:	str	r0, [fp, #-16]
   10d68:	str	r1, [fp, #-20]	; 0xffffffec
   10d6c:	ldr	r3, [fp, #-16]
   10d70:	cmp	r3, #0
   10d74:	bne	10d80 <_f@@Base+0x2c>
   10d78:	mov	r3, #0
   10d7c:	b	10dd4 <_f@@Base+0x80>
   10d80:	mov	r3, #0
   10d84:	str	r3, [fp, #-8]
   10d88:	b	10dbc <_f@@Base+0x68>
   10d8c:	ldr	r1, [fp, #-8]
   10d90:	ldr	r0, [fp, #-16]
   10d94:	bl	12ce0 <vetor_elemento@@Base>
   10d98:	mov	r2, r0
   10d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10da0:	cmp	r3, r2
   10da4:	bne	10db0 <_f@@Base+0x5c>
   10da8:	mov	r3, #1
   10dac:	b	10dd4 <_f@@Base+0x80>
   10db0:	ldr	r3, [fp, #-8]
   10db4:	add	r3, r3, #1
   10db8:	str	r3, [fp, #-8]
   10dbc:	ldr	r3, [fp, #-16]
   10dc0:	ldr	r3, [r3]
   10dc4:	ldr	r2, [fp, #-8]
   10dc8:	cmp	r2, r3
   10dcc:	blt	10d8c <_f@@Base+0x38>
   10dd0:	mov	r3, #0
   10dd4:	mov	r0, r3
   10dd8:	sub	sp, fp, #4
   10ddc:	ldr	fp, [sp]
   10de0:	add	sp, sp, #4
   10de4:	pop	{pc}		; (ldr pc, [sp], #4)

00010de8 <teste_grafo_novo@@Base>:
   10de8:	str	fp, [sp, #-8]!
   10dec:	str	lr, [sp, #4]
   10df0:	add	fp, sp, #4
   10df4:	sub	sp, sp, #8
   10df8:	mov	r3, #0
   10dfc:	str	r3, [fp, #-8]
   10e00:	ldr	r3, [pc, #376]	; 10f80 <teste_grafo_novo@@Base+0x198>
   10e04:	add	r3, pc, r3
   10e08:	mov	r0, r3
   10e0c:	bl	10aa4 <printf@plt>
   10e10:	mov	r0, #10
   10e14:	bl	12294 <grafo_novo@@Base>
   10e18:	str	r0, [fp, #-12]
   10e1c:	ldr	r3, [fp, #-12]
   10e20:	cmp	r3, #0
   10e24:	bne	10e74 <teste_grafo_novo@@Base+0x8c>
   10e28:	ldr	r3, [pc, #340]	; 10f84 <teste_grafo_novo@@Base+0x19c>
   10e2c:	add	r3, pc, r3
   10e30:	mov	r0, r3
   10e34:	bl	10aa4 <printf@plt>
   10e38:	ldr	r3, [fp, #-8]
   10e3c:	add	r3, r3, #1
   10e40:	str	r3, [fp, #-8]
   10e44:	ldr	r3, [fp, #-8]
   10e48:	cmp	r3, #0
   10e4c:	bne	10e64 <teste_grafo_novo@@Base+0x7c>
   10e50:	ldr	r3, [pc, #304]	; 10f88 <teste_grafo_novo@@Base+0x1a0>
   10e54:	add	r3, pc, r3
   10e58:	mov	r0, r3
   10e5c:	bl	10ac8 <puts@plt>
   10e60:	b	10e6c <teste_grafo_novo@@Base+0x84>
   10e64:	mov	r0, #10
   10e68:	bl	10b04 <putchar@plt>
   10e6c:	ldr	r3, [fp, #-8]
   10e70:	b	10f6c <teste_grafo_novo@@Base+0x184>
   10e74:	ldr	r3, [fp, #-12]
   10e78:	ldr	r3, [r3]
   10e7c:	cmp	r3, #10
   10e80:	beq	10ea0 <teste_grafo_novo@@Base+0xb8>
   10e84:	ldr	r3, [pc, #256]	; 10f8c <teste_grafo_novo@@Base+0x1a4>
   10e88:	add	r3, pc, r3
   10e8c:	mov	r0, r3
   10e90:	bl	10aa4 <printf@plt>
   10e94:	ldr	r3, [fp, #-8]
   10e98:	add	r3, r3, #1
   10e9c:	str	r3, [fp, #-8]
   10ea0:	ldr	r0, [fp, #-12]
   10ea4:	bl	12370 <grafo_apaga@@Base>
   10ea8:	mov	r0, #1
   10eac:	bl	12294 <grafo_novo@@Base>
   10eb0:	str	r0, [fp, #-12]
   10eb4:	ldr	r3, [fp, #-12]
   10eb8:	cmp	r3, #0
   10ebc:	bne	10f0c <teste_grafo_novo@@Base+0x124>
   10ec0:	ldr	r3, [pc, #200]	; 10f90 <teste_grafo_novo@@Base+0x1a8>
   10ec4:	add	r3, pc, r3
   10ec8:	mov	r0, r3
   10ecc:	bl	10aa4 <printf@plt>
   10ed0:	ldr	r3, [fp, #-8]
   10ed4:	add	r3, r3, #1
   10ed8:	str	r3, [fp, #-8]
   10edc:	ldr	r3, [fp, #-8]
   10ee0:	cmp	r3, #0
   10ee4:	bne	10efc <teste_grafo_novo@@Base+0x114>
   10ee8:	ldr	r3, [pc, #164]	; 10f94 <teste_grafo_novo@@Base+0x1ac>
   10eec:	add	r3, pc, r3
   10ef0:	mov	r0, r3
   10ef4:	bl	10ac8 <puts@plt>
   10ef8:	b	10f04 <teste_grafo_novo@@Base+0x11c>
   10efc:	mov	r0, #10
   10f00:	bl	10b04 <putchar@plt>
   10f04:	ldr	r3, [fp, #-8]
   10f08:	b	10f6c <teste_grafo_novo@@Base+0x184>
   10f0c:	ldr	r3, [fp, #-12]
   10f10:	ldr	r3, [r3]
   10f14:	cmp	r3, #1
   10f18:	beq	10f38 <teste_grafo_novo@@Base+0x150>
   10f1c:	ldr	r3, [pc, #116]	; 10f98 <teste_grafo_novo@@Base+0x1b0>
   10f20:	add	r3, pc, r3
   10f24:	mov	r0, r3
   10f28:	bl	10aa4 <printf@plt>
   10f2c:	ldr	r3, [fp, #-8]
   10f30:	add	r3, r3, #1
   10f34:	str	r3, [fp, #-8]
   10f38:	ldr	r0, [fp, #-12]
   10f3c:	bl	12370 <grafo_apaga@@Base>
   10f40:	ldr	r3, [fp, #-8]
   10f44:	cmp	r3, #0
   10f48:	bne	10f60 <teste_grafo_novo@@Base+0x178>
   10f4c:	ldr	r3, [pc, #72]	; 10f9c <teste_grafo_novo@@Base+0x1b4>
   10f50:	add	r3, pc, r3
   10f54:	mov	r0, r3
   10f58:	bl	10ac8 <puts@plt>
   10f5c:	b	10f68 <teste_grafo_novo@@Base+0x180>
   10f60:	mov	r0, #10
   10f64:	bl	10b04 <putchar@plt>
   10f68:	ldr	r3, [fp, #-8]
   10f6c:	mov	r0, r3
   10f70:	sub	sp, fp, #4
   10f74:	ldr	fp, [sp]
   10f78:	add	sp, sp, #4
   10f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   10f80:	ldrdeq	r2, [r0], -ip
   10f84:	andeq	r2, r0, r4, asr #7
   10f88:			; <UNDEFINED> instruction: 0x000023b4
   10f8c:	andeq	r2, r0, r4, lsl #7
   10f90:	andeq	r2, r0, ip, lsr #6
   10f94:	andeq	r2, r0, ip, lsl r3
   10f98:	andeq	r2, r0, r0, lsl r3
   10f9c:			; <UNDEFINED> instruction: 0x000022b8

00010fa0 <teste_grafo_aresta@@Base>:
   10fa0:	str	fp, [sp, #-8]!
   10fa4:	str	lr, [sp, #4]
   10fa8:	add	fp, sp, #4
   10fac:	sub	sp, sp, #88	; 0x58
   10fb0:	mov	r3, #0
   10fb4:	str	r3, [fp, #-8]
   10fb8:	mov	r3, #1
   10fbc:	str	r3, [sp, #76]	; 0x4c
   10fc0:	mov	r3, #0
   10fc4:	str	r3, [sp, #72]	; 0x48
   10fc8:	mov	r3, #3
   10fcc:	str	r3, [sp, #68]	; 0x44
   10fd0:	mov	r3, #6
   10fd4:	str	r3, [sp, #64]	; 0x40
   10fd8:	mov	r3, #6
   10fdc:	str	r3, [sp, #60]	; 0x3c
   10fe0:	mov	r3, #7
   10fe4:	str	r3, [sp, #56]	; 0x38
   10fe8:	mov	r3, #1
   10fec:	str	r3, [sp, #52]	; 0x34
   10ff0:	mov	r3, #1
   10ff4:	str	r3, [sp, #48]	; 0x30
   10ff8:	mov	r3, #6
   10ffc:	str	r3, [sp, #44]	; 0x2c
   11000:	mov	r3, #4
   11004:	str	r3, [sp, #40]	; 0x28
   11008:	mov	r3, #0
   1100c:	str	r3, [sp, #36]	; 0x24
   11010:	mov	r3, #4
   11014:	str	r3, [sp, #32]
   11018:	mov	r3, #4
   1101c:	str	r3, [sp, #28]
   11020:	mov	r3, #5
   11024:	str	r3, [sp, #24]
   11028:	mov	r3, #5
   1102c:	str	r3, [sp, #20]
   11030:	mov	r3, #7
   11034:	str	r3, [sp, #16]
   11038:	mov	r3, #2
   1103c:	str	r3, [sp, #12]
   11040:	mov	r3, #0
   11044:	str	r3, [sp, #8]
   11048:	mov	r3, #2
   1104c:	str	r3, [sp, #4]
   11050:	mov	r3, #7
   11054:	str	r3, [sp]
   11058:	mov	r3, #2
   1105c:	mov	r2, #3
   11060:	mov	r1, #22
   11064:	mov	r0, #8
   11068:	bl	10c0c <_g@@Base>
   1106c:	str	r0, [fp, #-12]
   11070:	ldr	r3, [pc, #304]	; 111a8 <teste_grafo_aresta@@Base+0x208>
   11074:	add	r3, pc, r3
   11078:	mov	r0, r3
   1107c:	bl	10aa4 <printf@plt>
   11080:	mov	r2, #4
   11084:	mov	r1, #5
   11088:	ldr	r0, [fp, #-12]
   1108c:	bl	12438 <grafo_aresta@@Base>
   11090:	mov	r3, r0
   11094:	cmp	r3, #1
   11098:	beq	110b8 <teste_grafo_aresta@@Base+0x118>
   1109c:	ldr	r3, [pc, #264]	; 111ac <teste_grafo_aresta@@Base+0x20c>
   110a0:	add	r3, pc, r3
   110a4:	mov	r0, r3
   110a8:	bl	10aa4 <printf@plt>
   110ac:	ldr	r3, [fp, #-8]
   110b0:	add	r3, r3, #1
   110b4:	str	r3, [fp, #-8]
   110b8:	mov	r2, #6
   110bc:	mov	r1, #7
   110c0:	ldr	r0, [fp, #-12]
   110c4:	bl	12438 <grafo_aresta@@Base>
   110c8:	mov	r3, r0
   110cc:	cmp	r3, #1
   110d0:	beq	110f0 <teste_grafo_aresta@@Base+0x150>
   110d4:	ldr	r3, [pc, #212]	; 111b0 <teste_grafo_aresta@@Base+0x210>
   110d8:	add	r3, pc, r3
   110dc:	mov	r0, r3
   110e0:	bl	10aa4 <printf@plt>
   110e4:	ldr	r3, [fp, #-8]
   110e8:	add	r3, r3, #1
   110ec:	str	r3, [fp, #-8]
   110f0:	mov	r2, #1
   110f4:	mov	r1, #7
   110f8:	ldr	r0, [fp, #-12]
   110fc:	bl	12438 <grafo_aresta@@Base>
   11100:	mov	r3, r0
   11104:	cmp	r3, #0
   11108:	beq	11128 <teste_grafo_aresta@@Base+0x188>
   1110c:	ldr	r3, [pc, #160]	; 111b4 <teste_grafo_aresta@@Base+0x214>
   11110:	add	r3, pc, r3
   11114:	mov	r0, r3
   11118:	bl	10aa4 <printf@plt>
   1111c:	ldr	r3, [fp, #-8]
   11120:	add	r3, r3, #1
   11124:	str	r3, [fp, #-8]
   11128:	mov	r2, #7
   1112c:	mov	r1, #2
   11130:	mov	r0, #0
   11134:	bl	12438 <grafo_aresta@@Base>
   11138:	mov	r3, r0
   1113c:	cmn	r3, #1
   11140:	beq	11160 <teste_grafo_aresta@@Base+0x1c0>
   11144:	ldr	r3, [pc, #108]	; 111b8 <teste_grafo_aresta@@Base+0x218>
   11148:	add	r3, pc, r3
   1114c:	mov	r0, r3
   11150:	bl	10aa4 <printf@plt>
   11154:	ldr	r3, [fp, #-8]
   11158:	add	r3, r3, #1
   1115c:	str	r3, [fp, #-8]
   11160:	ldr	r0, [fp, #-12]
   11164:	bl	12370 <grafo_apaga@@Base>
   11168:	ldr	r3, [fp, #-8]
   1116c:	cmp	r3, #0
   11170:	bne	11188 <teste_grafo_aresta@@Base+0x1e8>
   11174:	ldr	r3, [pc, #64]	; 111bc <teste_grafo_aresta@@Base+0x21c>
   11178:	add	r3, pc, r3
   1117c:	mov	r0, r3
   11180:	bl	10ac8 <puts@plt>
   11184:	b	11190 <teste_grafo_aresta@@Base+0x1f0>
   11188:	mov	r0, #10
   1118c:	bl	10b04 <putchar@plt>
   11190:	ldr	r3, [fp, #-8]
   11194:	mov	r0, r3
   11198:	sub	sp, fp, #4
   1119c:	ldr	fp, [sp]
   111a0:	add	sp, sp, #4
   111a4:	pop	{pc}		; (ldr pc, [sp], #4)
   111a8:	andeq	r2, r0, r0, ror #3
   111ac:	andeq	r2, r0, r8, asr #3
   111b0:	muleq	r0, r0, r1
   111b4:	muleq	r0, r0, r1
   111b8:	muleq	r0, r4, r1
   111bc:	muleq	r0, r0, r0

000111c0 <teste_grafo_adiciona@@Base>:
   111c0:	str	fp, [sp, #-8]!
   111c4:	str	lr, [sp, #4]
   111c8:	add	fp, sp, #4
   111cc:	sub	sp, sp, #16
   111d0:	mov	r3, #0
   111d4:	str	r3, [fp, #-8]
   111d8:	mov	r3, #2
   111dc:	str	r3, [sp, #4]
   111e0:	mov	r3, #7
   111e4:	str	r3, [sp]
   111e8:	mov	r3, #2
   111ec:	mov	r2, #3
   111f0:	mov	r1, #4
   111f4:	mov	r0, #9
   111f8:	bl	10c0c <_g@@Base>
   111fc:	str	r0, [fp, #-12]
   11200:	ldr	r3, [pc, #672]	; 114a8 <teste_grafo_adiciona@@Base+0x2e8>
   11204:	add	r3, pc, r3
   11208:	mov	r0, r3
   1120c:	bl	10aa4 <printf@plt>
   11210:	mov	r2, #7
   11214:	mov	r1, #2
   11218:	ldr	r0, [fp, #-12]
   1121c:	bl	124fc <grafo_adiciona@@Base>
   11220:	mov	r3, r0
   11224:	cmp	r3, #1
   11228:	beq	11248 <teste_grafo_adiciona@@Base+0x88>
   1122c:	ldr	r3, [pc, #632]	; 114ac <teste_grafo_adiciona@@Base+0x2ec>
   11230:	add	r3, pc, r3
   11234:	mov	r0, r3
   11238:	bl	10aa4 <printf@plt>
   1123c:	ldr	r3, [fp, #-8]
   11240:	add	r3, r3, #1
   11244:	str	r3, [fp, #-8]
   11248:	ldr	r3, [fp, #-12]
   1124c:	ldr	r3, [r3, #4]
   11250:	add	r3, r3, #16
   11254:	ldr	r3, [r3, #4]
   11258:	cmp	r3, #0
   1125c:	beq	1127c <teste_grafo_adiciona@@Base+0xbc>
   11260:	ldr	r3, [fp, #-12]
   11264:	ldr	r3, [r3, #4]
   11268:	add	r3, r3, #16
   1126c:	ldr	r3, [r3, #4]
   11270:	ldr	r3, [r3]
   11274:	cmp	r3, #7
   11278:	beq	11298 <teste_grafo_adiciona@@Base+0xd8>
   1127c:	ldr	r3, [pc, #556]	; 114b0 <teste_grafo_adiciona@@Base+0x2f0>
   11280:	add	r3, pc, r3
   11284:	mov	r0, r3
   11288:	bl	10aa4 <printf@plt>
   1128c:	ldr	r3, [fp, #-8]
   11290:	add	r3, r3, #1
   11294:	str	r3, [fp, #-8]
   11298:	mov	r2, #8
   1129c:	mov	r1, #3
   112a0:	ldr	r0, [fp, #-12]
   112a4:	bl	124fc <grafo_adiciona@@Base>
   112a8:	mov	r3, r0
   112ac:	cmp	r3, #1
   112b0:	beq	112d0 <teste_grafo_adiciona@@Base+0x110>
   112b4:	ldr	r3, [pc, #504]	; 114b4 <teste_grafo_adiciona@@Base+0x2f4>
   112b8:	add	r3, pc, r3
   112bc:	mov	r0, r3
   112c0:	bl	10aa4 <printf@plt>
   112c4:	ldr	r3, [fp, #-8]
   112c8:	add	r3, r3, #1
   112cc:	str	r3, [fp, #-8]
   112d0:	ldr	r3, [fp, #-12]
   112d4:	ldr	r3, [r3, #4]
   112d8:	add	r3, r3, #24
   112dc:	ldr	r3, [r3, #4]
   112e0:	cmp	r3, #0
   112e4:	beq	1139c <teste_grafo_adiciona@@Base+0x1dc>
   112e8:	ldr	r3, [fp, #-12]
   112ec:	ldr	r3, [r3, #4]
   112f0:	add	r3, r3, #24
   112f4:	ldr	r3, [r3, #4]
   112f8:	ldr	r3, [r3, #4]
   112fc:	cmp	r3, #0
   11300:	beq	1139c <teste_grafo_adiciona@@Base+0x1dc>
   11304:	ldr	r3, [fp, #-12]
   11308:	ldr	r3, [r3, #4]
   1130c:	add	r3, r3, #24
   11310:	ldr	r3, [r3, #4]
   11314:	ldr	r3, [r3, #4]
   11318:	ldr	r3, [r3, #4]
   1131c:	cmp	r3, #0
   11320:	bne	1139c <teste_grafo_adiciona@@Base+0x1dc>
   11324:	ldr	r3, [fp, #-12]
   11328:	ldr	r3, [r3, #4]
   1132c:	add	r3, r3, #24
   11330:	ldr	r3, [r3, #4]
   11334:	ldr	r3, [r3]
   11338:	cmp	r3, #2
   1133c:	bne	11360 <teste_grafo_adiciona@@Base+0x1a0>
   11340:	ldr	r3, [fp, #-12]
   11344:	ldr	r3, [r3, #4]
   11348:	add	r3, r3, #24
   1134c:	ldr	r3, [r3, #4]
   11350:	ldr	r3, [r3, #4]
   11354:	ldr	r3, [r3]
   11358:	cmp	r3, #8
   1135c:	beq	113b8 <teste_grafo_adiciona@@Base+0x1f8>
   11360:	ldr	r3, [fp, #-12]
   11364:	ldr	r3, [r3, #4]
   11368:	add	r3, r3, #24
   1136c:	ldr	r3, [r3, #4]
   11370:	ldr	r3, [r3]
   11374:	cmp	r3, #8
   11378:	bne	1139c <teste_grafo_adiciona@@Base+0x1dc>
   1137c:	ldr	r3, [fp, #-12]
   11380:	ldr	r3, [r3, #4]
   11384:	add	r3, r3, #24
   11388:	ldr	r3, [r3, #4]
   1138c:	ldr	r3, [r3, #4]
   11390:	ldr	r3, [r3]
   11394:	cmp	r3, #2
   11398:	beq	113b8 <teste_grafo_adiciona@@Base+0x1f8>
   1139c:	ldr	r3, [pc, #276]	; 114b8 <teste_grafo_adiciona@@Base+0x2f8>
   113a0:	add	r3, pc, r3
   113a4:	mov	r0, r3
   113a8:	bl	10aa4 <printf@plt>
   113ac:	ldr	r3, [fp, #-8]
   113b0:	add	r3, r3, #1
   113b4:	str	r3, [fp, #-8]
   113b8:	mov	r2, #7
   113bc:	mov	r1, #2
   113c0:	ldr	r0, [fp, #-12]
   113c4:	bl	124fc <grafo_adiciona@@Base>
   113c8:	mov	r3, r0
   113cc:	cmp	r3, #0
   113d0:	beq	113f0 <teste_grafo_adiciona@@Base+0x230>
   113d4:	ldr	r3, [pc, #224]	; 114bc <teste_grafo_adiciona@@Base+0x2fc>
   113d8:	add	r3, pc, r3
   113dc:	mov	r0, r3
   113e0:	bl	10aa4 <printf@plt>
   113e4:	ldr	r3, [fp, #-8]
   113e8:	add	r3, r3, #1
   113ec:	str	r3, [fp, #-8]
   113f0:	mov	r2, #7
   113f4:	mov	r1, #22
   113f8:	ldr	r0, [fp, #-12]
   113fc:	bl	124fc <grafo_adiciona@@Base>
   11400:	mov	r3, r0
   11404:	cmn	r3, #1
   11408:	beq	11428 <teste_grafo_adiciona@@Base+0x268>
   1140c:	ldr	r3, [pc, #172]	; 114c0 <teste_grafo_adiciona@@Base+0x300>
   11410:	add	r3, pc, r3
   11414:	mov	r0, r3
   11418:	bl	10aa4 <printf@plt>
   1141c:	ldr	r3, [fp, #-8]
   11420:	add	r3, r3, #1
   11424:	str	r3, [fp, #-8]
   11428:	mov	r2, #7
   1142c:	mov	r1, #2
   11430:	mov	r0, #0
   11434:	bl	124fc <grafo_adiciona@@Base>
   11438:	mov	r3, r0
   1143c:	cmn	r3, #1
   11440:	beq	11460 <teste_grafo_adiciona@@Base+0x2a0>
   11444:	ldr	r3, [pc, #120]	; 114c4 <teste_grafo_adiciona@@Base+0x304>
   11448:	add	r3, pc, r3
   1144c:	mov	r0, r3
   11450:	bl	10aa4 <printf@plt>
   11454:	ldr	r3, [fp, #-8]
   11458:	add	r3, r3, #1
   1145c:	str	r3, [fp, #-8]
   11460:	ldr	r0, [fp, #-12]
   11464:	bl	12370 <grafo_apaga@@Base>
   11468:	ldr	r3, [fp, #-8]
   1146c:	cmp	r3, #0
   11470:	bne	11488 <teste_grafo_adiciona@@Base+0x2c8>
   11474:	ldr	r3, [pc, #76]	; 114c8 <teste_grafo_adiciona@@Base+0x308>
   11478:	add	r3, pc, r3
   1147c:	mov	r0, r3
   11480:	bl	10ac8 <puts@plt>
   11484:	b	11490 <teste_grafo_adiciona@@Base+0x2d0>
   11488:	mov	r0, #10
   1148c:	bl	10b04 <putchar@plt>
   11490:	ldr	r3, [fp, #-8]
   11494:	mov	r0, r3
   11498:	sub	sp, fp, #4
   1149c:	ldr	fp, [sp]
   114a0:	add	sp, sp, #4
   114a4:	pop	{pc}		; (ldr pc, [sp], #4)
   114a8:	andeq	r2, r0, r0, lsl r1
   114ac:	strdeq	r2, [r0], -r8
   114b0:	andeq	r2, r0, r4, ror #1
   114b4:	andeq	r2, r0, r0, ror r0
   114b8:	strdeq	r1, [r0], -r4
   114bc:	strdeq	r1, [r0], -r8
   114c0:	strdeq	r1, [r0], -r8
   114c4:	strdeq	r1, [r0], -r8
   114c8:	muleq	r0, r0, sp

000114cc <teste_grafo_remove@@Base>:
   114cc:	str	fp, [sp, #-8]!
   114d0:	str	lr, [sp, #4]
   114d4:	add	fp, sp, #4
   114d8:	sub	sp, sp, #24
   114dc:	mov	r3, #0
   114e0:	str	r3, [fp, #-8]
   114e4:	mov	r3, #1
   114e8:	str	r3, [sp, #12]
   114ec:	mov	r3, #7
   114f0:	str	r3, [sp, #8]
   114f4:	mov	r3, #2
   114f8:	str	r3, [sp, #4]
   114fc:	mov	r3, #7
   11500:	str	r3, [sp]
   11504:	mov	r3, #2
   11508:	mov	r2, #3
   1150c:	mov	r1, #6
   11510:	mov	r0, #9
   11514:	bl	10c0c <_g@@Base>
   11518:	str	r0, [fp, #-12]
   1151c:	ldr	r3, [pc, #464]	; 116f4 <teste_grafo_remove@@Base+0x228>
   11520:	add	r3, pc, r3
   11524:	mov	r0, r3
   11528:	bl	10aa4 <printf@plt>
   1152c:	mov	r2, #1
   11530:	mov	r1, #7
   11534:	ldr	r0, [fp, #-12]
   11538:	bl	1260c <grafo_remove@@Base>
   1153c:	mov	r3, r0
   11540:	cmp	r3, #1
   11544:	beq	11564 <teste_grafo_remove@@Base+0x98>
   11548:	ldr	r3, [pc, #424]	; 116f8 <teste_grafo_remove@@Base+0x22c>
   1154c:	add	r3, pc, r3
   11550:	mov	r0, r3
   11554:	bl	10aa4 <printf@plt>
   11558:	ldr	r3, [fp, #-8]
   1155c:	add	r3, r3, #1
   11560:	str	r3, [fp, #-8]
   11564:	ldr	r3, [fp, #-12]
   11568:	ldr	r3, [r3, #4]
   1156c:	add	r3, r3, #56	; 0x38
   11570:	ldr	r3, [r3, #4]
   11574:	cmp	r3, #0
   11578:	beq	115b4 <teste_grafo_remove@@Base+0xe8>
   1157c:	ldr	r3, [fp, #-12]
   11580:	ldr	r3, [r3, #4]
   11584:	add	r3, r3, #56	; 0x38
   11588:	ldr	r3, [r3, #4]
   1158c:	ldr	r3, [r3, #4]
   11590:	cmp	r3, #0
   11594:	bne	115b4 <teste_grafo_remove@@Base+0xe8>
   11598:	ldr	r3, [fp, #-12]
   1159c:	ldr	r3, [r3, #4]
   115a0:	add	r3, r3, #56	; 0x38
   115a4:	ldr	r3, [r3, #4]
   115a8:	ldr	r3, [r3]
   115ac:	cmp	r3, #2
   115b0:	beq	115d0 <teste_grafo_remove@@Base+0x104>
   115b4:	ldr	r3, [pc, #320]	; 116fc <teste_grafo_remove@@Base+0x230>
   115b8:	add	r3, pc, r3
   115bc:	mov	r0, r3
   115c0:	bl	10aa4 <printf@plt>
   115c4:	ldr	r3, [fp, #-8]
   115c8:	add	r3, r3, #1
   115cc:	str	r3, [fp, #-8]
   115d0:	mov	r2, #2
   115d4:	mov	r1, #7
   115d8:	ldr	r0, [fp, #-12]
   115dc:	bl	1260c <grafo_remove@@Base>
   115e0:	mov	r3, r0
   115e4:	cmp	r3, #1
   115e8:	beq	11608 <teste_grafo_remove@@Base+0x13c>
   115ec:	ldr	r3, [pc, #268]	; 11700 <teste_grafo_remove@@Base+0x234>
   115f0:	add	r3, pc, r3
   115f4:	mov	r0, r3
   115f8:	bl	10aa4 <printf@plt>
   115fc:	ldr	r3, [fp, #-8]
   11600:	add	r3, r3, #1
   11604:	str	r3, [fp, #-8]
   11608:	ldr	r3, [fp, #-12]
   1160c:	ldr	r3, [r3, #4]
   11610:	add	r3, r3, #56	; 0x38
   11614:	ldr	r3, [r3, #4]
   11618:	cmp	r3, #0
   1161c:	beq	1163c <teste_grafo_remove@@Base+0x170>
   11620:	ldr	r3, [pc, #220]	; 11704 <teste_grafo_remove@@Base+0x238>
   11624:	add	r3, pc, r3
   11628:	mov	r0, r3
   1162c:	bl	10aa4 <printf@plt>
   11630:	ldr	r3, [fp, #-8]
   11634:	add	r3, r3, #1
   11638:	str	r3, [fp, #-8]
   1163c:	mov	r2, #0
   11640:	mov	r1, #4
   11644:	ldr	r0, [fp, #-12]
   11648:	bl	1260c <grafo_remove@@Base>
   1164c:	mov	r3, r0
   11650:	cmp	r3, #0
   11654:	beq	11674 <teste_grafo_remove@@Base+0x1a8>
   11658:	ldr	r3, [pc, #168]	; 11708 <teste_grafo_remove@@Base+0x23c>
   1165c:	add	r3, pc, r3
   11660:	mov	r0, r3
   11664:	bl	10aa4 <printf@plt>
   11668:	ldr	r3, [fp, #-8]
   1166c:	add	r3, r3, #1
   11670:	str	r3, [fp, #-8]
   11674:	mov	r2, #22
   11678:	mov	r1, #7
   1167c:	ldr	r0, [fp, #-12]
   11680:	bl	1260c <grafo_remove@@Base>
   11684:	mov	r3, r0
   11688:	cmn	r3, #1
   1168c:	beq	116ac <teste_grafo_remove@@Base+0x1e0>
   11690:	ldr	r3, [pc, #116]	; 1170c <teste_grafo_remove@@Base+0x240>
   11694:	add	r3, pc, r3
   11698:	mov	r0, r3
   1169c:	bl	10aa4 <printf@plt>
   116a0:	ldr	r3, [fp, #-8]
   116a4:	add	r3, r3, #1
   116a8:	str	r3, [fp, #-8]
   116ac:	ldr	r0, [fp, #-12]
   116b0:	bl	12370 <grafo_apaga@@Base>
   116b4:	ldr	r3, [fp, #-8]
   116b8:	cmp	r3, #0
   116bc:	bne	116d4 <teste_grafo_remove@@Base+0x208>
   116c0:	ldr	r3, [pc, #72]	; 11710 <teste_grafo_remove@@Base+0x244>
   116c4:	add	r3, pc, r3
   116c8:	mov	r0, r3
   116cc:	bl	10ac8 <puts@plt>
   116d0:	b	116dc <teste_grafo_remove@@Base+0x210>
   116d4:	mov	r0, #10
   116d8:	bl	10b04 <putchar@plt>
   116dc:	ldr	r3, [fp, #-8]
   116e0:	mov	r0, r3
   116e4:	sub	sp, fp, #4
   116e8:	ldr	fp, [sp]
   116ec:	add	sp, sp, #4
   116f0:	pop	{pc}		; (ldr pc, [sp], #4)
   116f4:	andeq	r1, r0, r8, asr pc
   116f8:	andeq	r1, r0, r0, asr #30
   116fc:	andeq	r1, r0, r0, lsl pc
   11700:	muleq	r0, ip, lr
   11704:	andeq	r1, r0, r4, lsr #29
   11708:	andeq	r1, r0, r8, lsr #29
   1170c:	andeq	r1, r0, ip, lsr #29
   11710:	andeq	r1, r0, r4, asr #22

00011714 <teste_v_sucessores@@Base>:
   11714:	str	fp, [sp, #-8]!
   11718:	str	lr, [sp, #4]
   1171c:	add	fp, sp, #4
   11720:	sub	sp, sp, #96	; 0x60
   11724:	mov	r3, #0
   11728:	str	r3, [fp, #-8]
   1172c:	mov	r3, #1
   11730:	str	r3, [sp, #76]	; 0x4c
   11734:	mov	r3, #0
   11738:	str	r3, [sp, #72]	; 0x48
   1173c:	mov	r3, #3
   11740:	str	r3, [sp, #68]	; 0x44
   11744:	mov	r3, #6
   11748:	str	r3, [sp, #64]	; 0x40
   1174c:	mov	r3, #6
   11750:	str	r3, [sp, #60]	; 0x3c
   11754:	mov	r3, #7
   11758:	str	r3, [sp, #56]	; 0x38
   1175c:	mov	r3, #1
   11760:	str	r3, [sp, #52]	; 0x34
   11764:	mov	r3, #1
   11768:	str	r3, [sp, #48]	; 0x30
   1176c:	mov	r3, #6
   11770:	str	r3, [sp, #44]	; 0x2c
   11774:	mov	r3, #4
   11778:	str	r3, [sp, #40]	; 0x28
   1177c:	mov	r3, #0
   11780:	str	r3, [sp, #36]	; 0x24
   11784:	mov	r3, #4
   11788:	str	r3, [sp, #32]
   1178c:	mov	r3, #4
   11790:	str	r3, [sp, #28]
   11794:	mov	r3, #5
   11798:	str	r3, [sp, #24]
   1179c:	mov	r3, #5
   117a0:	str	r3, [sp, #20]
   117a4:	mov	r3, #7
   117a8:	str	r3, [sp, #16]
   117ac:	mov	r3, #2
   117b0:	str	r3, [sp, #12]
   117b4:	mov	r3, #0
   117b8:	str	r3, [sp, #8]
   117bc:	mov	r3, #2
   117c0:	str	r3, [sp, #4]
   117c4:	mov	r3, #7
   117c8:	str	r3, [sp]
   117cc:	mov	r3, #2
   117d0:	mov	r2, #3
   117d4:	mov	r1, #22
   117d8:	mov	r0, #8
   117dc:	bl	10c0c <_g@@Base>
   117e0:	str	r0, [fp, #-12]
   117e4:	ldr	r3, [pc, #516]	; 119f0 <teste_v_sucessores@@Base+0x2dc>
   117e8:	add	r3, pc, r3
   117ec:	mov	r0, r3
   117f0:	bl	10aa4 <printf@plt>
   117f4:	mov	r1, #7
   117f8:	ldr	r0, [fp, #-12]
   117fc:	bl	127dc <v_sucessores@@Base>
   11800:	str	r0, [fp, #-16]
   11804:	ldr	r3, [fp, #-16]
   11808:	cmp	r3, #0
   1180c:	bne	1182c <teste_v_sucessores@@Base+0x118>
   11810:	ldr	r3, [pc, #476]	; 119f4 <teste_v_sucessores@@Base+0x2e0>
   11814:	add	r3, pc, r3
   11818:	mov	r0, r3
   1181c:	bl	10aa4 <printf@plt>
   11820:	ldr	r3, [fp, #-8]
   11824:	add	r3, r3, #1
   11828:	str	r3, [fp, #-8]
   1182c:	ldr	r3, [fp, #-16]
   11830:	cmp	r3, #0
   11834:	bne	11868 <teste_v_sucessores@@Base+0x154>
   11838:	ldr	r3, [fp, #-8]
   1183c:	cmp	r3, #0
   11840:	bne	11858 <teste_v_sucessores@@Base+0x144>
   11844:	ldr	r3, [pc, #428]	; 119f8 <teste_v_sucessores@@Base+0x2e4>
   11848:	add	r3, pc, r3
   1184c:	mov	r0, r3
   11850:	bl	10ac8 <puts@plt>
   11854:	b	11860 <teste_v_sucessores@@Base+0x14c>
   11858:	mov	r0, #10
   1185c:	bl	10b04 <putchar@plt>
   11860:	ldr	r3, [fp, #-8]
   11864:	b	119dc <teste_v_sucessores@@Base+0x2c8>
   11868:	ldr	r3, [fp, #-16]
   1186c:	ldr	r3, [r3]
   11870:	cmp	r3, #3
   11874:	beq	11894 <teste_v_sucessores@@Base+0x180>
   11878:	ldr	r3, [pc, #380]	; 119fc <teste_v_sucessores@@Base+0x2e8>
   1187c:	add	r3, pc, r3
   11880:	mov	r0, r3
   11884:	bl	10aa4 <printf@plt>
   11888:	ldr	r3, [fp, #-8]
   1188c:	add	r3, r3, #1
   11890:	str	r3, [fp, #-8]
   11894:	mov	r1, #2
   11898:	ldr	r0, [fp, #-16]
   1189c:	bl	10d54 <_f@@Base>
   118a0:	mov	r3, r0
   118a4:	cmp	r3, #0
   118a8:	beq	118dc <teste_v_sucessores@@Base+0x1c8>
   118ac:	mov	r1, #5
   118b0:	ldr	r0, [fp, #-16]
   118b4:	bl	10d54 <_f@@Base>
   118b8:	mov	r3, r0
   118bc:	cmp	r3, #0
   118c0:	beq	118dc <teste_v_sucessores@@Base+0x1c8>
   118c4:	mov	r1, #6
   118c8:	ldr	r0, [fp, #-16]
   118cc:	bl	10d54 <_f@@Base>
   118d0:	mov	r3, r0
   118d4:	cmp	r3, #0
   118d8:	bne	118f8 <teste_v_sucessores@@Base+0x1e4>
   118dc:	ldr	r3, [pc, #284]	; 11a00 <teste_v_sucessores@@Base+0x2ec>
   118e0:	add	r3, pc, r3
   118e4:	mov	r0, r3
   118e8:	bl	10aa4 <printf@plt>
   118ec:	ldr	r3, [fp, #-8]
   118f0:	add	r3, r3, #1
   118f4:	str	r3, [fp, #-8]
   118f8:	ldr	r0, [fp, #-16]
   118fc:	bl	12bd8 <vetor_apaga@@Base>
   11900:	mov	r1, #2
   11904:	ldr	r0, [fp, #-12]
   11908:	bl	127dc <v_sucessores@@Base>
   1190c:	str	r0, [fp, #-16]
   11910:	ldr	r3, [fp, #-16]
   11914:	cmp	r3, #0
   11918:	bne	11938 <teste_v_sucessores@@Base+0x224>
   1191c:	ldr	r3, [pc, #224]	; 11a04 <teste_v_sucessores@@Base+0x2f0>
   11920:	add	r3, pc, r3
   11924:	mov	r0, r3
   11928:	bl	10aa4 <printf@plt>
   1192c:	ldr	r3, [fp, #-8]
   11930:	add	r3, r3, #1
   11934:	str	r3, [fp, #-8]
   11938:	ldr	r3, [fp, #-16]
   1193c:	cmp	r3, #0
   11940:	bne	11974 <teste_v_sucessores@@Base+0x260>
   11944:	ldr	r3, [fp, #-8]
   11948:	cmp	r3, #0
   1194c:	bne	11964 <teste_v_sucessores@@Base+0x250>
   11950:	ldr	r3, [pc, #176]	; 11a08 <teste_v_sucessores@@Base+0x2f4>
   11954:	add	r3, pc, r3
   11958:	mov	r0, r3
   1195c:	bl	10ac8 <puts@plt>
   11960:	b	1196c <teste_v_sucessores@@Base+0x258>
   11964:	mov	r0, #10
   11968:	bl	10b04 <putchar@plt>
   1196c:	ldr	r3, [fp, #-8]
   11970:	b	119dc <teste_v_sucessores@@Base+0x2c8>
   11974:	ldr	r3, [fp, #-16]
   11978:	ldr	r3, [r3]
   1197c:	cmp	r3, #0
   11980:	beq	119a0 <teste_v_sucessores@@Base+0x28c>
   11984:	ldr	r3, [pc, #128]	; 11a0c <teste_v_sucessores@@Base+0x2f8>
   11988:	add	r3, pc, r3
   1198c:	mov	r0, r3
   11990:	bl	10aa4 <printf@plt>
   11994:	ldr	r3, [fp, #-8]
   11998:	add	r3, r3, #1
   1199c:	str	r3, [fp, #-8]
   119a0:	ldr	r0, [fp, #-16]
   119a4:	bl	12bd8 <vetor_apaga@@Base>
   119a8:	ldr	r0, [fp, #-12]
   119ac:	bl	12370 <grafo_apaga@@Base>
   119b0:	ldr	r3, [fp, #-8]
   119b4:	cmp	r3, #0
   119b8:	bne	119d0 <teste_v_sucessores@@Base+0x2bc>
   119bc:	ldr	r3, [pc, #76]	; 11a10 <teste_v_sucessores@@Base+0x2fc>
   119c0:	add	r3, pc, r3
   119c4:	mov	r0, r3
   119c8:	bl	10ac8 <puts@plt>
   119cc:	b	119d8 <teste_v_sucessores@@Base+0x2c4>
   119d0:	mov	r0, #10
   119d4:	bl	10b04 <putchar@plt>
   119d8:	ldr	r3, [fp, #-8]
   119dc:	mov	r0, r3
   119e0:	sub	sp, fp, #4
   119e4:	ldr	fp, [sp]
   119e8:	add	sp, sp, #4
   119ec:	pop	{pc}		; (ldr pc, [sp], #4)
   119f0:	muleq	r0, r0, sp
   119f4:	andeq	r1, r0, r8, ror sp
   119f8:	andeq	r1, r0, r0, asr #19
   119fc:	andeq	r1, r0, r0, asr #26
   11a00:	andeq	r1, r0, r8, lsl #26
   11a04:	strdeq	r1, [r0], -r4
   11a08:			; <UNDEFINED> instruction: 0x000018b4
   11a0c:	andeq	r1, r0, ip, asr #25
   11a10:	andeq	r1, r0, r8, asr #16

00011a14 <teste_v_antecessores@@Base>:
   11a14:	str	fp, [sp, #-8]!
   11a18:	str	lr, [sp, #4]
   11a1c:	add	fp, sp, #4
   11a20:	sub	sp, sp, #96	; 0x60
   11a24:	mov	r3, #0
   11a28:	str	r3, [fp, #-8]
   11a2c:	mov	r3, #1
   11a30:	str	r3, [sp, #76]	; 0x4c
   11a34:	mov	r3, #0
   11a38:	str	r3, [sp, #72]	; 0x48
   11a3c:	mov	r3, #3
   11a40:	str	r3, [sp, #68]	; 0x44
   11a44:	mov	r3, #6
   11a48:	str	r3, [sp, #64]	; 0x40
   11a4c:	mov	r3, #6
   11a50:	str	r3, [sp, #60]	; 0x3c
   11a54:	mov	r3, #7
   11a58:	str	r3, [sp, #56]	; 0x38
   11a5c:	mov	r3, #1
   11a60:	str	r3, [sp, #52]	; 0x34
   11a64:	mov	r3, #1
   11a68:	str	r3, [sp, #48]	; 0x30
   11a6c:	mov	r3, #6
   11a70:	str	r3, [sp, #44]	; 0x2c
   11a74:	mov	r3, #4
   11a78:	str	r3, [sp, #40]	; 0x28
   11a7c:	mov	r3, #0
   11a80:	str	r3, [sp, #36]	; 0x24
   11a84:	mov	r3, #4
   11a88:	str	r3, [sp, #32]
   11a8c:	mov	r3, #4
   11a90:	str	r3, [sp, #28]
   11a94:	mov	r3, #5
   11a98:	str	r3, [sp, #24]
   11a9c:	mov	r3, #5
   11aa0:	str	r3, [sp, #20]
   11aa4:	mov	r3, #7
   11aa8:	str	r3, [sp, #16]
   11aac:	mov	r3, #2
   11ab0:	str	r3, [sp, #12]
   11ab4:	mov	r3, #0
   11ab8:	str	r3, [sp, #8]
   11abc:	mov	r3, #2
   11ac0:	str	r3, [sp, #4]
   11ac4:	mov	r3, #7
   11ac8:	str	r3, [sp]
   11acc:	mov	r3, #2
   11ad0:	mov	r2, #3
   11ad4:	mov	r1, #22
   11ad8:	mov	r0, #8
   11adc:	bl	10c0c <_g@@Base>
   11ae0:	str	r0, [fp, #-12]
   11ae4:	ldr	r3, [pc, #516]	; 11cf0 <teste_v_antecessores@@Base+0x2dc>
   11ae8:	add	r3, pc, r3
   11aec:	mov	r0, r3
   11af0:	bl	10aa4 <printf@plt>
   11af4:	mov	r1, #2
   11af8:	ldr	r0, [fp, #-12]
   11afc:	bl	128ac <v_antecessores@@Base>
   11b00:	str	r0, [fp, #-16]
   11b04:	ldr	r3, [fp, #-16]
   11b08:	cmp	r3, #0
   11b0c:	bne	11b2c <teste_v_antecessores@@Base+0x118>
   11b10:	ldr	r3, [pc, #476]	; 11cf4 <teste_v_antecessores@@Base+0x2e0>
   11b14:	add	r3, pc, r3
   11b18:	mov	r0, r3
   11b1c:	bl	10aa4 <printf@plt>
   11b20:	ldr	r3, [fp, #-8]
   11b24:	add	r3, r3, #1
   11b28:	str	r3, [fp, #-8]
   11b2c:	ldr	r3, [fp, #-16]
   11b30:	cmp	r3, #0
   11b34:	bne	11b68 <teste_v_antecessores@@Base+0x154>
   11b38:	ldr	r3, [fp, #-8]
   11b3c:	cmp	r3, #0
   11b40:	bne	11b58 <teste_v_antecessores@@Base+0x144>
   11b44:	ldr	r3, [pc, #428]	; 11cf8 <teste_v_antecessores@@Base+0x2e4>
   11b48:	add	r3, pc, r3
   11b4c:	mov	r0, r3
   11b50:	bl	10ac8 <puts@plt>
   11b54:	b	11b60 <teste_v_antecessores@@Base+0x14c>
   11b58:	mov	r0, #10
   11b5c:	bl	10b04 <putchar@plt>
   11b60:	ldr	r3, [fp, #-8]
   11b64:	b	11cdc <teste_v_antecessores@@Base+0x2c8>
   11b68:	ldr	r3, [fp, #-16]
   11b6c:	ldr	r3, [r3]
   11b70:	cmp	r3, #3
   11b74:	beq	11b94 <teste_v_antecessores@@Base+0x180>
   11b78:	ldr	r3, [pc, #380]	; 11cfc <teste_v_antecessores@@Base+0x2e8>
   11b7c:	add	r3, pc, r3
   11b80:	mov	r0, r3
   11b84:	bl	10aa4 <printf@plt>
   11b88:	ldr	r3, [fp, #-8]
   11b8c:	add	r3, r3, #1
   11b90:	str	r3, [fp, #-8]
   11b94:	mov	r1, #0
   11b98:	ldr	r0, [fp, #-16]
   11b9c:	bl	10d54 <_f@@Base>
   11ba0:	mov	r3, r0
   11ba4:	cmp	r3, #0
   11ba8:	beq	11bdc <teste_v_antecessores@@Base+0x1c8>
   11bac:	mov	r1, #3
   11bb0:	ldr	r0, [fp, #-16]
   11bb4:	bl	10d54 <_f@@Base>
   11bb8:	mov	r3, r0
   11bbc:	cmp	r3, #0
   11bc0:	beq	11bdc <teste_v_antecessores@@Base+0x1c8>
   11bc4:	mov	r1, #7
   11bc8:	ldr	r0, [fp, #-16]
   11bcc:	bl	10d54 <_f@@Base>
   11bd0:	mov	r3, r0
   11bd4:	cmp	r3, #0
   11bd8:	bne	11bf8 <teste_v_antecessores@@Base+0x1e4>
   11bdc:	ldr	r3, [pc, #284]	; 11d00 <teste_v_antecessores@@Base+0x2ec>
   11be0:	add	r3, pc, r3
   11be4:	mov	r0, r3
   11be8:	bl	10aa4 <printf@plt>
   11bec:	ldr	r3, [fp, #-8]
   11bf0:	add	r3, r3, #1
   11bf4:	str	r3, [fp, #-8]
   11bf8:	ldr	r0, [fp, #-16]
   11bfc:	bl	12bd8 <vetor_apaga@@Base>
   11c00:	mov	r1, #7
   11c04:	ldr	r0, [fp, #-12]
   11c08:	bl	128ac <v_antecessores@@Base>
   11c0c:	str	r0, [fp, #-16]
   11c10:	ldr	r3, [fp, #-16]
   11c14:	cmp	r3, #0
   11c18:	bne	11c38 <teste_v_antecessores@@Base+0x224>
   11c1c:	ldr	r3, [pc, #224]	; 11d04 <teste_v_antecessores@@Base+0x2f0>
   11c20:	add	r3, pc, r3
   11c24:	mov	r0, r3
   11c28:	bl	10aa4 <printf@plt>
   11c2c:	ldr	r3, [fp, #-8]
   11c30:	add	r3, r3, #1
   11c34:	str	r3, [fp, #-8]
   11c38:	ldr	r3, [fp, #-16]
   11c3c:	cmp	r3, #0
   11c40:	bne	11c74 <teste_v_antecessores@@Base+0x260>
   11c44:	ldr	r3, [fp, #-8]
   11c48:	cmp	r3, #0
   11c4c:	bne	11c64 <teste_v_antecessores@@Base+0x250>
   11c50:	ldr	r3, [pc, #176]	; 11d08 <teste_v_antecessores@@Base+0x2f4>
   11c54:	add	r3, pc, r3
   11c58:	mov	r0, r3
   11c5c:	bl	10ac8 <puts@plt>
   11c60:	b	11c6c <teste_v_antecessores@@Base+0x258>
   11c64:	mov	r0, #10
   11c68:	bl	10b04 <putchar@plt>
   11c6c:	ldr	r3, [fp, #-8]
   11c70:	b	11cdc <teste_v_antecessores@@Base+0x2c8>
   11c74:	ldr	r3, [fp, #-16]
   11c78:	ldr	r3, [r3]
   11c7c:	cmp	r3, #0
   11c80:	beq	11ca0 <teste_v_antecessores@@Base+0x28c>
   11c84:	ldr	r3, [pc, #128]	; 11d0c <teste_v_antecessores@@Base+0x2f8>
   11c88:	add	r3, pc, r3
   11c8c:	mov	r0, r3
   11c90:	bl	10aa4 <printf@plt>
   11c94:	ldr	r3, [fp, #-8]
   11c98:	add	r3, r3, #1
   11c9c:	str	r3, [fp, #-8]
   11ca0:	ldr	r0, [fp, #-16]
   11ca4:	bl	12bd8 <vetor_apaga@@Base>
   11ca8:	ldr	r0, [fp, #-12]
   11cac:	bl	12370 <grafo_apaga@@Base>
   11cb0:	ldr	r3, [fp, #-8]
   11cb4:	cmp	r3, #0
   11cb8:	bne	11cd0 <teste_v_antecessores@@Base+0x2bc>
   11cbc:	ldr	r3, [pc, #76]	; 11d10 <teste_v_antecessores@@Base+0x2fc>
   11cc0:	add	r3, pc, r3
   11cc4:	mov	r0, r3
   11cc8:	bl	10ac8 <puts@plt>
   11ccc:	b	11cd8 <teste_v_antecessores@@Base+0x2c4>
   11cd0:	mov	r0, #10
   11cd4:	bl	10b04 <putchar@plt>
   11cd8:	ldr	r3, [fp, #-8]
   11cdc:	mov	r0, r3
   11ce0:	sub	sp, fp, #4
   11ce4:	ldr	fp, [sp]
   11ce8:	add	sp, sp, #4
   11cec:	pop	{pc}		; (ldr pc, [sp], #4)
   11cf0:	muleq	r0, ip, fp
   11cf4:	andeq	r1, r0, r4, lsl #23
   11cf8:	andeq	r1, r0, r0, asr #13
   11cfc:	andeq	r1, r0, ip, asr #22
   11d00:	andeq	r1, r0, r8, lsl fp
   11d04:	andeq	r1, r0, r8, lsl #22
   11d08:			; <UNDEFINED> instruction: 0x000015b4
   11d0c:	andeq	r1, r0, r0, ror #21
   11d10:	andeq	r1, r0, r8, asr #10

00011d14 <teste_v_grau@@Base>:
   11d14:	str	fp, [sp, #-8]!
   11d18:	str	lr, [sp, #4]
   11d1c:	add	fp, sp, #4
   11d20:	sub	sp, sp, #88	; 0x58
   11d24:	mov	r3, #0
   11d28:	str	r3, [fp, #-8]
   11d2c:	mov	r3, #1
   11d30:	str	r3, [sp, #76]	; 0x4c
   11d34:	mov	r3, #0
   11d38:	str	r3, [sp, #72]	; 0x48
   11d3c:	mov	r3, #3
   11d40:	str	r3, [sp, #68]	; 0x44
   11d44:	mov	r3, #6
   11d48:	str	r3, [sp, #64]	; 0x40
   11d4c:	mov	r3, #6
   11d50:	str	r3, [sp, #60]	; 0x3c
   11d54:	mov	r3, #7
   11d58:	str	r3, [sp, #56]	; 0x38
   11d5c:	mov	r3, #1
   11d60:	str	r3, [sp, #52]	; 0x34
   11d64:	mov	r3, #1
   11d68:	str	r3, [sp, #48]	; 0x30
   11d6c:	mov	r3, #6
   11d70:	str	r3, [sp, #44]	; 0x2c
   11d74:	mov	r3, #4
   11d78:	str	r3, [sp, #40]	; 0x28
   11d7c:	mov	r3, #0
   11d80:	str	r3, [sp, #36]	; 0x24
   11d84:	mov	r3, #4
   11d88:	str	r3, [sp, #32]
   11d8c:	mov	r3, #4
   11d90:	str	r3, [sp, #28]
   11d94:	mov	r3, #5
   11d98:	str	r3, [sp, #24]
   11d9c:	mov	r3, #5
   11da0:	str	r3, [sp, #20]
   11da4:	mov	r3, #7
   11da8:	str	r3, [sp, #16]
   11dac:	mov	r3, #2
   11db0:	str	r3, [sp, #12]
   11db4:	mov	r3, #0
   11db8:	str	r3, [sp, #8]
   11dbc:	mov	r3, #2
   11dc0:	str	r3, [sp, #4]
   11dc4:	mov	r3, #7
   11dc8:	str	r3, [sp]
   11dcc:	mov	r3, #2
   11dd0:	mov	r2, #3
   11dd4:	mov	r1, #22
   11dd8:	mov	r0, #8
   11ddc:	bl	10c0c <_g@@Base>
   11de0:	str	r0, [fp, #-12]
   11de4:	ldr	r3, [pc, #236]	; 11ed8 <teste_v_grau@@Base+0x1c4>
   11de8:	add	r3, pc, r3
   11dec:	mov	r0, r3
   11df0:	bl	10aa4 <printf@plt>
   11df4:	mvn	r1, #3
   11df8:	ldr	r0, [fp, #-12]
   11dfc:	bl	129b8 <v_grau@@Base>
   11e00:	mov	r3, r0
   11e04:	cmn	r3, #1
   11e08:	beq	11e28 <teste_v_grau@@Base+0x114>
   11e0c:	ldr	r3, [pc, #200]	; 11edc <teste_v_grau@@Base+0x1c8>
   11e10:	add	r3, pc, r3
   11e14:	mov	r0, r3
   11e18:	bl	10aa4 <printf@plt>
   11e1c:	ldr	r3, [fp, #-8]
   11e20:	add	r3, r3, #1
   11e24:	str	r3, [fp, #-8]
   11e28:	mov	r1, #7
   11e2c:	ldr	r0, [fp, #-12]
   11e30:	bl	129b8 <v_grau@@Base>
   11e34:	mov	r3, r0
   11e38:	cmp	r3, #3
   11e3c:	beq	11e5c <teste_v_grau@@Base+0x148>
   11e40:	ldr	r3, [pc, #152]	; 11ee0 <teste_v_grau@@Base+0x1cc>
   11e44:	add	r3, pc, r3
   11e48:	mov	r0, r3
   11e4c:	bl	10aa4 <printf@plt>
   11e50:	ldr	r3, [fp, #-8]
   11e54:	add	r3, r3, #1
   11e58:	str	r3, [fp, #-8]
   11e5c:	mov	r1, #5
   11e60:	ldr	r0, [fp, #-12]
   11e64:	bl	129b8 <v_grau@@Base>
   11e68:	mov	r3, r0
   11e6c:	cmp	r3, #2
   11e70:	beq	11e90 <teste_v_grau@@Base+0x17c>
   11e74:	ldr	r3, [pc, #104]	; 11ee4 <teste_v_grau@@Base+0x1d0>
   11e78:	add	r3, pc, r3
   11e7c:	mov	r0, r3
   11e80:	bl	10aa4 <printf@plt>
   11e84:	ldr	r3, [fp, #-8]
   11e88:	add	r3, r3, #1
   11e8c:	str	r3, [fp, #-8]
   11e90:	ldr	r0, [fp, #-12]
   11e94:	bl	12370 <grafo_apaga@@Base>
   11e98:	ldr	r3, [fp, #-8]
   11e9c:	cmp	r3, #0
   11ea0:	bne	11eb8 <teste_v_grau@@Base+0x1a4>
   11ea4:	ldr	r3, [pc, #60]	; 11ee8 <teste_v_grau@@Base+0x1d4>
   11ea8:	add	r3, pc, r3
   11eac:	mov	r0, r3
   11eb0:	bl	10ac8 <puts@plt>
   11eb4:	b	11ec0 <teste_v_grau@@Base+0x1ac>
   11eb8:	mov	r0, #10
   11ebc:	bl	10b04 <putchar@plt>
   11ec0:	ldr	r3, [fp, #-8]
   11ec4:	mov	r0, r3
   11ec8:	sub	sp, fp, #4
   11ecc:	ldr	fp, [sp]
   11ed0:	add	sp, sp, #4
   11ed4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ed8:			; <UNDEFINED> instruction: 0x000019b0
   11edc:	muleq	r0, r4, r9
   11ee0:	muleq	r0, r0, r9
   11ee4:	andeq	r1, r0, ip, lsl #19
   11ee8:	andeq	r1, r0, r0, ror #6

00011eec <teste_v_celebridade@@Base>:
   11eec:	str	fp, [sp, #-8]!
   11ef0:	str	lr, [sp, #4]
   11ef4:	add	fp, sp, #4
   11ef8:	sub	sp, sp, #120	; 0x78
   11efc:	mov	r3, #0
   11f00:	str	r3, [fp, #-8]
   11f04:	mov	r3, #2
   11f08:	str	r3, [sp, #108]	; 0x6c
   11f0c:	mov	r3, #5
   11f10:	str	r3, [sp, #104]	; 0x68
   11f14:	mov	r3, #2
   11f18:	str	r3, [sp, #100]	; 0x64
   11f1c:	mov	r3, #4
   11f20:	str	r3, [sp, #96]	; 0x60
   11f24:	mov	r3, #2
   11f28:	str	r3, [sp, #92]	; 0x5c
   11f2c:	mov	r3, #6
   11f30:	str	r3, [sp, #88]	; 0x58
   11f34:	mov	r3, #2
   11f38:	str	r3, [sp, #84]	; 0x54
   11f3c:	mov	r3, #1
   11f40:	str	r3, [sp, #80]	; 0x50
   11f44:	mov	r3, #1
   11f48:	str	r3, [sp, #76]	; 0x4c
   11f4c:	mov	r3, #0
   11f50:	str	r3, [sp, #72]	; 0x48
   11f54:	mov	r3, #3
   11f58:	str	r3, [sp, #68]	; 0x44
   11f5c:	mov	r3, #6
   11f60:	str	r3, [sp, #64]	; 0x40
   11f64:	mov	r3, #6
   11f68:	str	r3, [sp, #60]	; 0x3c
   11f6c:	mov	r3, #7
   11f70:	str	r3, [sp, #56]	; 0x38
   11f74:	mov	r3, #1
   11f78:	str	r3, [sp, #52]	; 0x34
   11f7c:	mov	r3, #1
   11f80:	str	r3, [sp, #48]	; 0x30
   11f84:	mov	r3, #6
   11f88:	str	r3, [sp, #44]	; 0x2c
   11f8c:	mov	r3, #4
   11f90:	str	r3, [sp, #40]	; 0x28
   11f94:	mov	r3, #0
   11f98:	str	r3, [sp, #36]	; 0x24
   11f9c:	mov	r3, #4
   11fa0:	str	r3, [sp, #32]
   11fa4:	mov	r3, #4
   11fa8:	str	r3, [sp, #28]
   11fac:	mov	r3, #5
   11fb0:	str	r3, [sp, #24]
   11fb4:	mov	r3, #5
   11fb8:	str	r3, [sp, #20]
   11fbc:	mov	r3, #7
   11fc0:	str	r3, [sp, #16]
   11fc4:	mov	r3, #2
   11fc8:	str	r3, [sp, #12]
   11fcc:	mov	r3, #0
   11fd0:	str	r3, [sp, #8]
   11fd4:	mov	r3, #2
   11fd8:	str	r3, [sp, #4]
   11fdc:	mov	r3, #7
   11fe0:	str	r3, [sp]
   11fe4:	mov	r3, #2
   11fe8:	mov	r2, #3
   11fec:	mov	r1, #30
   11ff0:	mov	r0, #8
   11ff4:	bl	10c0c <_g@@Base>
   11ff8:	str	r0, [fp, #-12]
   11ffc:	ldr	r3, [pc, #184]	; 120bc <teste_v_celebridade@@Base+0x1d0>
   12000:	add	r3, pc, r3
   12004:	mov	r0, r3
   12008:	bl	10aa4 <printf@plt>
   1200c:	mov	r1, #7
   12010:	ldr	r0, [fp, #-12]
   12014:	bl	12a54 <v_celebridade@@Base>
   12018:	mov	r3, r0
   1201c:	cmp	r3, #0
   12020:	beq	12040 <teste_v_celebridade@@Base+0x154>
   12024:	ldr	r3, [pc, #148]	; 120c0 <teste_v_celebridade@@Base+0x1d4>
   12028:	add	r3, pc, r3
   1202c:	mov	r0, r3
   12030:	bl	10aa4 <printf@plt>
   12034:	ldr	r3, [fp, #-8]
   12038:	add	r3, r3, #1
   1203c:	str	r3, [fp, #-8]
   12040:	mov	r1, #2
   12044:	ldr	r0, [fp, #-12]
   12048:	bl	12a54 <v_celebridade@@Base>
   1204c:	mov	r3, r0
   12050:	cmp	r3, #1
   12054:	beq	12074 <teste_v_celebridade@@Base+0x188>
   12058:	ldr	r3, [pc, #100]	; 120c4 <teste_v_celebridade@@Base+0x1d8>
   1205c:	add	r3, pc, r3
   12060:	mov	r0, r3
   12064:	bl	10aa4 <printf@plt>
   12068:	ldr	r3, [fp, #-8]
   1206c:	add	r3, r3, #1
   12070:	str	r3, [fp, #-8]
   12074:	ldr	r0, [fp, #-12]
   12078:	bl	12370 <grafo_apaga@@Base>
   1207c:	ldr	r3, [fp, #-8]
   12080:	cmp	r3, #0
   12084:	bne	1209c <teste_v_celebridade@@Base+0x1b0>
   12088:	ldr	r3, [pc, #56]	; 120c8 <teste_v_celebridade@@Base+0x1dc>
   1208c:	add	r3, pc, r3
   12090:	mov	r0, r3
   12094:	bl	10ac8 <puts@plt>
   12098:	b	120a4 <teste_v_celebridade@@Base+0x1b8>
   1209c:	mov	r0, #10
   120a0:	bl	10b04 <putchar@plt>
   120a4:	ldr	r3, [fp, #-8]
   120a8:	mov	r0, r3
   120ac:	sub	sp, fp, #4
   120b0:	ldr	fp, [sp]
   120b4:	add	sp, sp, #4
   120b8:	pop	{pc}		; (ldr pc, [sp], #4)
   120bc:	andeq	r1, r0, r4, lsr r8
   120c0:	andeq	r1, r0, r0, lsr #16
   120c4:	andeq	r1, r0, r4, lsr #16
   120c8:	andeq	r1, r0, ip, ror r1

000120cc <main@@Base>:
   120cc:	str	r4, [sp, #-12]!
   120d0:	str	fp, [sp, #4]
   120d4:	str	lr, [sp, #8]
   120d8:	add	fp, sp, #8
   120dc:	sub	sp, sp, #12
   120e0:	ldr	r4, [pc, #304]	; 12218 <main@@Base+0x14c>
   120e4:	add	r4, pc, r4
   120e8:	ldr	r3, [pc, #300]	; 1221c <main@@Base+0x150>
   120ec:	ldr	r3, [r4, r3]
   120f0:	ldr	r0, [r3]
   120f4:	mov	r3, #0
   120f8:	mov	r2, #2
   120fc:	mov	r1, #0
   12100:	bl	10af8 <setvbuf@plt>
   12104:	ldr	r3, [pc, #276]	; 12220 <main@@Base+0x154>
   12108:	ldr	r3, [r4, r3]
   1210c:	ldr	r0, [r3]
   12110:	mov	r3, #0
   12114:	mov	r2, #2
   12118:	mov	r1, #0
   1211c:	bl	10af8 <setvbuf@plt>
   12120:	mov	r3, #0
   12124:	str	r3, [fp, #-16]
   12128:	bl	10de8 <teste_grafo_novo@@Base>
   1212c:	mov	r2, r0
   12130:	ldr	r3, [fp, #-16]
   12134:	add	r3, r3, r2
   12138:	str	r3, [fp, #-16]
   1213c:	bl	10fa0 <teste_grafo_aresta@@Base>
   12140:	mov	r2, r0
   12144:	ldr	r3, [fp, #-16]
   12148:	add	r3, r3, r2
   1214c:	str	r3, [fp, #-16]
   12150:	bl	111c0 <teste_grafo_adiciona@@Base>
   12154:	mov	r2, r0
   12158:	ldr	r3, [fp, #-16]
   1215c:	add	r3, r3, r2
   12160:	str	r3, [fp, #-16]
   12164:	bl	114cc <teste_grafo_remove@@Base>
   12168:	mov	r2, r0
   1216c:	ldr	r3, [fp, #-16]
   12170:	add	r3, r3, r2
   12174:	str	r3, [fp, #-16]
   12178:	bl	11714 <teste_v_sucessores@@Base>
   1217c:	mov	r2, r0
   12180:	ldr	r3, [fp, #-16]
   12184:	add	r3, r3, r2
   12188:	str	r3, [fp, #-16]
   1218c:	bl	11a14 <teste_v_antecessores@@Base>
   12190:	mov	r2, r0
   12194:	ldr	r3, [fp, #-16]
   12198:	add	r3, r3, r2
   1219c:	str	r3, [fp, #-16]
   121a0:	bl	11d14 <teste_v_grau@@Base>
   121a4:	mov	r2, r0
   121a8:	ldr	r3, [fp, #-16]
   121ac:	add	r3, r3, r2
   121b0:	str	r3, [fp, #-16]
   121b4:	bl	11eec <teste_v_celebridade@@Base>
   121b8:	mov	r2, r0
   121bc:	ldr	r3, [fp, #-16]
   121c0:	add	r3, r3, r2
   121c4:	str	r3, [fp, #-16]
   121c8:	ldr	r3, [fp, #-16]
   121cc:	cmp	r3, #0
   121d0:	bne	121e8 <main@@Base+0x11c>
   121d4:	ldr	r3, [pc, #72]	; 12224 <main@@Base+0x158>
   121d8:	add	r3, pc, r3
   121dc:	mov	r0, r3
   121e0:	bl	10ac8 <puts@plt>
   121e4:	b	121fc <main@@Base+0x130>
   121e8:	ldr	r1, [fp, #-16]
   121ec:	ldr	r3, [pc, #52]	; 12228 <main@@Base+0x15c>
   121f0:	add	r3, pc, r3
   121f4:	mov	r0, r3
   121f8:	bl	10aa4 <printf@plt>
   121fc:	mov	r3, #0
   12200:	mov	r0, r3
   12204:	sub	sp, fp, #8
   12208:	ldr	r4, [sp]
   1220c:	ldr	fp, [sp, #4]
   12210:	add	sp, sp, #8
   12214:	pop	{pc}		; (ldr pc, [sp], #4)
   12218:	andeq	r1, r1, r4, lsl pc
   1221c:	andeq	r0, r0, r0, asr #32
   12220:	andeq	r0, r0, r8, lsr r0
   12224:	ldrdeq	r1, [r0], -ip
   12228:	ldrdeq	r1, [r0], -ip

0001222c <cria_elem@@Base>:
   1222c:	str	fp, [sp, #-8]!
   12230:	str	lr, [sp, #4]
   12234:	add	fp, sp, #4
   12238:	sub	sp, sp, #16
   1223c:	str	r0, [fp, #-16]
   12240:	mov	r0, #8
   12244:	bl	10ad4 <malloc@plt>
   12248:	mov	r3, r0
   1224c:	str	r3, [fp, #-8]
   12250:	ldr	r3, [fp, #-8]
   12254:	cmp	r3, #0
   12258:	bne	12264 <cria_elem@@Base+0x38>
   1225c:	mov	r3, #0
   12260:	b	12280 <cria_elem@@Base+0x54>
   12264:	ldr	r3, [fp, #-8]
   12268:	ldr	r2, [fp, #-16]
   1226c:	str	r2, [r3]
   12270:	ldr	r3, [fp, #-8]
   12274:	mov	r2, #0
   12278:	str	r2, [r3, #4]
   1227c:	ldr	r3, [fp, #-8]
   12280:	mov	r0, r3
   12284:	sub	sp, fp, #4
   12288:	ldr	fp, [sp]
   1228c:	add	sp, sp, #4
   12290:	pop	{pc}		; (ldr pc, [sp], #4)

00012294 <grafo_novo@@Base>:
   12294:	str	fp, [sp, #-8]!
   12298:	str	lr, [sp, #4]
   1229c:	add	fp, sp, #4
   122a0:	sub	sp, sp, #16
   122a4:	str	r0, [fp, #-16]
   122a8:	ldr	r3, [fp, #-16]
   122ac:	cmp	r3, #0
   122b0:	bgt	122bc <grafo_novo@@Base+0x28>
   122b4:	mov	r3, #0
   122b8:	b	1235c <grafo_novo@@Base+0xc8>
   122bc:	mov	r0, #8
   122c0:	bl	10ad4 <malloc@plt>
   122c4:	mov	r3, r0
   122c8:	str	r3, [fp, #-12]
   122cc:	ldr	r3, [fp, #-12]
   122d0:	ldr	r2, [fp, #-16]
   122d4:	str	r2, [r3]
   122d8:	ldr	r3, [fp, #-16]
   122dc:	lsl	r3, r3, #3
   122e0:	mov	r0, r3
   122e4:	bl	10ad4 <malloc@plt>
   122e8:	mov	r3, r0
   122ec:	mov	r2, r3
   122f0:	ldr	r3, [fp, #-12]
   122f4:	str	r2, [r3, #4]
   122f8:	mov	r3, #0
   122fc:	str	r3, [fp, #-8]
   12300:	b	12348 <grafo_novo@@Base+0xb4>
   12304:	ldr	r3, [fp, #-12]
   12308:	ldr	r2, [r3, #4]
   1230c:	ldr	r3, [fp, #-8]
   12310:	lsl	r3, r3, #3
   12314:	add	r3, r2, r3
   12318:	mov	r2, #0
   1231c:	str	r2, [r3]
   12320:	ldr	r3, [fp, #-12]
   12324:	ldr	r2, [r3, #4]
   12328:	ldr	r3, [fp, #-8]
   1232c:	lsl	r3, r3, #3
   12330:	add	r3, r2, r3
   12334:	mov	r2, #0
   12338:	str	r2, [r3, #4]
   1233c:	ldr	r3, [fp, #-8]
   12340:	add	r3, r3, #1
   12344:	str	r3, [fp, #-8]
   12348:	ldr	r2, [fp, #-8]
   1234c:	ldr	r3, [fp, #-16]
   12350:	cmp	r2, r3
   12354:	blt	12304 <grafo_novo@@Base+0x70>
   12358:	ldr	r3, [fp, #-12]
   1235c:	mov	r0, r3
   12360:	sub	sp, fp, #4
   12364:	ldr	fp, [sp]
   12368:	add	sp, sp, #4
   1236c:	pop	{pc}		; (ldr pc, [sp], #4)

00012370 <grafo_apaga@@Base>:
   12370:	str	fp, [sp, #-8]!
   12374:	str	lr, [sp, #4]
   12378:	add	fp, sp, #4
   1237c:	sub	sp, sp, #24
   12380:	str	r0, [fp, #-24]	; 0xffffffe8
   12384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12388:	cmp	r3, #0
   1238c:	beq	12424 <grafo_apaga@@Base+0xb4>
   12390:	mov	r3, #0
   12394:	str	r3, [fp, #-8]
   12398:	b	123f0 <grafo_apaga@@Base+0x80>
   1239c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123a0:	ldr	r2, [r3, #4]
   123a4:	ldr	r3, [fp, #-8]
   123a8:	lsl	r3, r3, #3
   123ac:	add	r3, r2, r3
   123b0:	ldr	r3, [r3, #4]
   123b4:	str	r3, [fp, #-12]
   123b8:	b	123d8 <grafo_apaga@@Base+0x68>
   123bc:	ldr	r3, [fp, #-12]
   123c0:	str	r3, [fp, #-16]
   123c4:	ldr	r3, [fp, #-12]
   123c8:	ldr	r3, [r3, #4]
   123cc:	str	r3, [fp, #-12]
   123d0:	ldr	r0, [fp, #-16]
   123d4:	bl	10ab0 <free@plt>
   123d8:	ldr	r3, [fp, #-12]
   123dc:	cmp	r3, #0
   123e0:	bne	123bc <grafo_apaga@@Base+0x4c>
   123e4:	ldr	r3, [fp, #-8]
   123e8:	add	r3, r3, #1
   123ec:	str	r3, [fp, #-8]
   123f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123f4:	ldr	r3, [r3]
   123f8:	ldr	r2, [fp, #-8]
   123fc:	cmp	r2, r3
   12400:	blt	1239c <grafo_apaga@@Base+0x2c>
   12404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12408:	ldr	r3, [r3, #4]
   1240c:	mov	r0, r3
   12410:	bl	10ab0 <free@plt>
   12414:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12418:	bl	10ab0 <free@plt>
   1241c:	nop	{0}
   12420:	b	12428 <grafo_apaga@@Base+0xb8>
   12424:	nop	{0}
   12428:	sub	sp, fp, #4
   1242c:	ldr	fp, [sp]
   12430:	add	sp, sp, #4
   12434:	pop	{pc}		; (ldr pc, [sp], #4)

00012438 <grafo_aresta@@Base>:
   12438:	push	{fp}		; (str fp, [sp, #-4]!)
   1243c:	add	fp, sp, #0
   12440:	sub	sp, sp, #28
   12444:	str	r0, [fp, #-16]
   12448:	str	r1, [fp, #-20]	; 0xffffffec
   1244c:	str	r2, [fp, #-24]	; 0xffffffe8
   12450:	ldr	r3, [fp, #-16]
   12454:	cmp	r3, #0
   12458:	beq	12470 <grafo_aresta@@Base+0x38>
   1245c:	ldr	r3, [fp, #-16]
   12460:	ldr	r3, [r3]
   12464:	ldr	r2, [fp, #-20]	; 0xffffffec
   12468:	cmp	r2, r3
   1246c:	ble	12478 <grafo_aresta@@Base+0x40>
   12470:	mvn	r3, #0
   12474:	b	124ec <grafo_aresta@@Base+0xb4>
   12478:	ldr	r3, [fp, #-16]
   1247c:	ldr	r3, [r3]
   12480:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12484:	cmp	r2, r3
   12488:	ble	12494 <grafo_aresta@@Base+0x5c>
   1248c:	mov	r3, #0
   12490:	b	124ec <grafo_aresta@@Base+0xb4>
   12494:	ldr	r3, [fp, #-16]
   12498:	ldr	r2, [r3, #4]
   1249c:	ldr	r3, [fp, #-20]	; 0xffffffec
   124a0:	lsl	r3, r3, #3
   124a4:	add	r3, r2, r3
   124a8:	ldr	r3, [r3, #4]
   124ac:	str	r3, [fp, #-8]
   124b0:	b	124dc <grafo_aresta@@Base+0xa4>
   124b4:	ldr	r3, [fp, #-8]
   124b8:	ldr	r3, [r3]
   124bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   124c0:	cmp	r2, r3
   124c4:	bne	124d0 <grafo_aresta@@Base+0x98>
   124c8:	mov	r3, #1
   124cc:	b	124ec <grafo_aresta@@Base+0xb4>
   124d0:	ldr	r3, [fp, #-8]
   124d4:	ldr	r3, [r3, #4]
   124d8:	str	r3, [fp, #-8]
   124dc:	ldr	r3, [fp, #-8]
   124e0:	cmp	r3, #0
   124e4:	bne	124b4 <grafo_aresta@@Base+0x7c>
   124e8:	mov	r3, #0
   124ec:	mov	r0, r3
   124f0:	add	sp, fp, #0
   124f4:	pop	{fp}		; (ldr fp, [sp], #4)
   124f8:	bx	lr

000124fc <grafo_adiciona@@Base>:
   124fc:	str	r4, [sp, #-12]!
   12500:	str	fp, [sp, #4]
   12504:	str	lr, [sp, #8]
   12508:	add	fp, sp, #8
   1250c:	sub	sp, sp, #28
   12510:	str	r0, [fp, #-24]	; 0xffffffe8
   12514:	str	r1, [fp, #-28]	; 0xffffffe4
   12518:	str	r2, [fp, #-32]	; 0xffffffe0
   1251c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12520:	cmp	r3, #0
   12524:	beq	12550 <grafo_adiciona@@Base+0x54>
   12528:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1252c:	ldr	r3, [r3]
   12530:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12534:	cmp	r2, r3
   12538:	bgt	12550 <grafo_adiciona@@Base+0x54>
   1253c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12540:	ldr	r3, [r3]
   12544:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12548:	cmp	r2, r3
   1254c:	ble	12558 <grafo_adiciona@@Base+0x5c>
   12550:	mvn	r3, #0
   12554:	b	125f4 <grafo_adiciona@@Base+0xf8>
   12558:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1255c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12564:	bl	12438 <grafo_aresta@@Base>
   12568:	mov	r3, r0
   1256c:	cmp	r3, #1
   12570:	bne	1257c <grafo_adiciona@@Base+0x80>
   12574:	mov	r3, #0
   12578:	b	125f4 <grafo_adiciona@@Base+0xf8>
   1257c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12580:	ldr	r2, [r3, #4]
   12584:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12588:	lsl	r3, r3, #3
   1258c:	add	r3, r2, r3
   12590:	ldr	r3, [r3, #4]
   12594:	str	r3, [fp, #-16]
   12598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1259c:	ldr	r2, [r3, #4]
   125a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   125a4:	lsl	r3, r3, #3
   125a8:	add	r4, r2, r3
   125ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125b0:	bl	1222c <cria_elem@@Base>
   125b4:	mov	r3, r0
   125b8:	str	r3, [r4, #4]
   125bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125c0:	ldr	r2, [r3, #4]
   125c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   125c8:	lsl	r3, r3, #3
   125cc:	add	r3, r2, r3
   125d0:	ldr	r3, [r3, #4]
   125d4:	ldr	r2, [fp, #-16]
   125d8:	str	r2, [r3, #4]
   125dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125e0:	ldr	r3, [r3, #4]
   125e4:	ldr	r2, [r3]
   125e8:	add	r2, r2, #1
   125ec:	str	r2, [r3]
   125f0:	mov	r3, #1
   125f4:	mov	r0, r3
   125f8:	sub	sp, fp, #8
   125fc:	ldr	r4, [sp]
   12600:	ldr	fp, [sp, #4]
   12604:	add	sp, sp, #8
   12608:	pop	{pc}		; (ldr pc, [sp], #4)

0001260c <grafo_remove@@Base>:
   1260c:	str	fp, [sp, #-8]!
   12610:	str	lr, [sp, #4]
   12614:	add	fp, sp, #4
   12618:	sub	sp, sp, #32
   1261c:	str	r0, [fp, #-24]	; 0xffffffe8
   12620:	str	r1, [fp, #-28]	; 0xffffffe4
   12624:	str	r2, [fp, #-32]	; 0xffffffe0
   12628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1262c:	cmp	r3, #0
   12630:	beq	127c4 <grafo_remove@@Base+0x1b8>
   12634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12638:	ldr	r3, [r3]
   1263c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12640:	cmp	r2, r3
   12644:	bgt	127c4 <grafo_remove@@Base+0x1b8>
   12648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1264c:	ldr	r3, [r3]
   12650:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12654:	cmp	r2, r3
   12658:	bgt	127c4 <grafo_remove@@Base+0x1b8>
   1265c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12660:	ldr	r2, [r3, #4]
   12664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12668:	lsl	r3, r3, #3
   1266c:	add	r3, r2, r3
   12670:	ldr	r3, [r3, #4]
   12674:	cmp	r3, #0
   12678:	bne	12684 <grafo_remove@@Base+0x78>
   1267c:	mov	r3, #0
   12680:	b	127c8 <grafo_remove@@Base+0x1bc>
   12684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12688:	ldr	r2, [r3, #4]
   1268c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12690:	lsl	r3, r3, #3
   12694:	add	r3, r2, r3
   12698:	ldr	r3, [r3, #4]
   1269c:	ldr	r3, [r3]
   126a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   126a4:	cmp	r2, r3
   126a8:	bne	12720 <grafo_remove@@Base+0x114>
   126ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126b0:	ldr	r2, [r3, #4]
   126b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126b8:	lsl	r3, r3, #3
   126bc:	add	r3, r2, r3
   126c0:	ldr	r3, [r3, #4]
   126c4:	str	r3, [fp, #-16]
   126c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126cc:	ldr	r2, [r3, #4]
   126d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126d4:	lsl	r3, r3, #3
   126d8:	add	r3, r2, r3
   126dc:	ldr	r2, [r3, #4]
   126e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126e4:	ldr	r1, [r3, #4]
   126e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   126ec:	lsl	r3, r3, #3
   126f0:	add	r3, r1, r3
   126f4:	ldr	r2, [r2, #4]
   126f8:	str	r2, [r3, #4]
   126fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12700:	ldr	r3, [r3, #4]
   12704:	ldr	r2, [r3]
   12708:	sub	r2, r2, #1
   1270c:	str	r2, [r3]
   12710:	ldr	r0, [fp, #-16]
   12714:	bl	10ab0 <free@plt>
   12718:	mov	r3, #1
   1271c:	b	127c8 <grafo_remove@@Base+0x1bc>
   12720:	mov	r3, #0
   12724:	str	r3, [fp, #-12]
   12728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1272c:	ldr	r2, [r3, #4]
   12730:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12734:	lsl	r3, r3, #3
   12738:	add	r3, r2, r3
   1273c:	ldr	r3, [r3, #4]
   12740:	str	r3, [fp, #-8]
   12744:	b	127b0 <grafo_remove@@Base+0x1a4>
   12748:	ldr	r3, [fp, #-8]
   1274c:	ldr	r3, [r3]
   12750:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12754:	cmp	r2, r3
   12758:	bne	1279c <grafo_remove@@Base+0x190>
   1275c:	ldr	r3, [fp, #-12]
   12760:	cmp	r3, #0
   12764:	beq	1279c <grafo_remove@@Base+0x190>
   12768:	ldr	r3, [fp, #-8]
   1276c:	ldr	r2, [r3, #4]
   12770:	ldr	r3, [fp, #-12]
   12774:	str	r2, [r3, #4]
   12778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1277c:	ldr	r3, [r3, #4]
   12780:	ldr	r2, [r3]
   12784:	sub	r2, r2, #1
   12788:	str	r2, [r3]
   1278c:	ldr	r0, [fp, #-8]
   12790:	bl	10ab0 <free@plt>
   12794:	mov	r3, #1
   12798:	b	127c8 <grafo_remove@@Base+0x1bc>
   1279c:	ldr	r3, [fp, #-8]
   127a0:	str	r3, [fp, #-12]
   127a4:	ldr	r3, [fp, #-8]
   127a8:	ldr	r3, [r3, #4]
   127ac:	str	r3, [fp, #-8]
   127b0:	ldr	r3, [fp, #-8]
   127b4:	cmp	r3, #0
   127b8:	bne	12748 <grafo_remove@@Base+0x13c>
   127bc:	mov	r3, #0
   127c0:	b	127c8 <grafo_remove@@Base+0x1bc>
   127c4:	mvn	r3, #0
   127c8:	mov	r0, r3
   127cc:	sub	sp, fp, #4
   127d0:	ldr	fp, [sp]
   127d4:	add	sp, sp, #4
   127d8:	pop	{pc}		; (ldr pc, [sp], #4)

000127dc <v_sucessores@@Base>:
   127dc:	str	fp, [sp, #-8]!
   127e0:	str	lr, [sp, #4]
   127e4:	add	fp, sp, #4
   127e8:	sub	sp, sp, #24
   127ec:	str	r0, [fp, #-24]	; 0xffffffe8
   127f0:	str	r1, [fp, #-28]	; 0xffffffe4
   127f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127f8:	cmp	r3, #0
   127fc:	beq	12894 <v_sucessores@@Base+0xb8>
   12800:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12804:	ldr	r3, [r3]
   12808:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1280c:	cmp	r2, r3
   12810:	bge	12894 <v_sucessores@@Base+0xb8>
   12814:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12818:	cmp	r3, #0
   1281c:	blt	12894 <v_sucessores@@Base+0xb8>
   12820:	mov	r3, #0
   12824:	str	r3, [fp, #-8]
   12828:	bl	12b68 <vetor_novo@@Base>
   1282c:	str	r0, [fp, #-16]
   12830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12834:	ldr	r2, [r3, #4]
   12838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1283c:	lsl	r3, r3, #3
   12840:	add	r3, r2, r3
   12844:	ldr	r3, [r3, #4]
   12848:	str	r3, [fp, #-12]
   1284c:	b	12880 <v_sucessores@@Base+0xa4>
   12850:	ldr	r3, [fp, #-12]
   12854:	ldr	r3, [r3]
   12858:	ldr	r2, [fp, #-8]
   1285c:	mov	r1, r3
   12860:	ldr	r0, [fp, #-16]
   12864:	bl	12d50 <vetor_insere@@Base>
   12868:	ldr	r3, [fp, #-8]
   1286c:	add	r3, r3, #1
   12870:	str	r3, [fp, #-8]
   12874:	ldr	r3, [fp, #-12]
   12878:	ldr	r3, [r3, #4]
   1287c:	str	r3, [fp, #-12]
   12880:	ldr	r3, [fp, #-12]
   12884:	cmp	r3, #0
   12888:	bne	12850 <v_sucessores@@Base+0x74>
   1288c:	ldr	r3, [fp, #-16]
   12890:	b	12898 <v_sucessores@@Base+0xbc>
   12894:	mov	r3, #0
   12898:	mov	r0, r3
   1289c:	sub	sp, fp, #4
   128a0:	ldr	fp, [sp]
   128a4:	add	sp, sp, #4
   128a8:	pop	{pc}		; (ldr pc, [sp], #4)

000128ac <v_antecessores@@Base>:
   128ac:	str	fp, [sp, #-8]!
   128b0:	str	lr, [sp, #4]
   128b4:	add	fp, sp, #4
   128b8:	sub	sp, sp, #24
   128bc:	str	r0, [fp, #-24]	; 0xffffffe8
   128c0:	str	r1, [fp, #-28]	; 0xffffffe4
   128c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128c8:	cmp	r3, #0
   128cc:	beq	129a0 <v_antecessores@@Base+0xf4>
   128d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128d4:	ldr	r3, [r3]
   128d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   128dc:	cmp	r2, r3
   128e0:	bge	129a0 <v_antecessores@@Base+0xf4>
   128e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   128e8:	cmp	r3, #0
   128ec:	blt	129a0 <v_antecessores@@Base+0xf4>
   128f0:	bl	12b68 <vetor_novo@@Base>
   128f4:	str	r0, [fp, #-20]	; 0xffffffec
   128f8:	mov	r3, #0
   128fc:	str	r3, [fp, #-12]
   12900:	mov	r3, #0
   12904:	str	r3, [fp, #-8]
   12908:	b	12984 <v_antecessores@@Base+0xd8>
   1290c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12910:	ldr	r2, [r3, #4]
   12914:	ldr	r3, [fp, #-8]
   12918:	lsl	r3, r3, #3
   1291c:	add	r3, r2, r3
   12920:	ldr	r3, [r3, #4]
   12924:	str	r3, [fp, #-16]
   12928:	b	1296c <v_antecessores@@Base+0xc0>
   1292c:	ldr	r3, [fp, #-16]
   12930:	ldr	r3, [r3]
   12934:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12938:	cmp	r2, r3
   1293c:	bne	12960 <v_antecessores@@Base+0xb4>
   12940:	ldr	r2, [fp, #-12]
   12944:	ldr	r1, [fp, #-8]
   12948:	ldr	r0, [fp, #-20]	; 0xffffffec
   1294c:	bl	12d50 <vetor_insere@@Base>
   12950:	ldr	r3, [fp, #-12]
   12954:	add	r3, r3, #1
   12958:	str	r3, [fp, #-12]
   1295c:	b	12978 <v_antecessores@@Base+0xcc>
   12960:	ldr	r3, [fp, #-16]
   12964:	ldr	r3, [r3, #4]
   12968:	str	r3, [fp, #-16]
   1296c:	ldr	r3, [fp, #-16]
   12970:	cmp	r3, #0
   12974:	bne	1292c <v_antecessores@@Base+0x80>
   12978:	ldr	r3, [fp, #-8]
   1297c:	add	r3, r3, #1
   12980:	str	r3, [fp, #-8]
   12984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12988:	ldr	r3, [r3]
   1298c:	ldr	r2, [fp, #-8]
   12990:	cmp	r2, r3
   12994:	blt	1290c <v_antecessores@@Base+0x60>
   12998:	ldr	r3, [fp, #-20]	; 0xffffffec
   1299c:	b	129a4 <v_antecessores@@Base+0xf8>
   129a0:	mov	r3, #0
   129a4:	mov	r0, r3
   129a8:	sub	sp, fp, #4
   129ac:	ldr	fp, [sp]
   129b0:	add	sp, sp, #4
   129b4:	pop	{pc}		; (ldr pc, [sp], #4)

000129b8 <v_grau@@Base>:
   129b8:	str	r4, [sp, #-12]!
   129bc:	str	fp, [sp, #4]
   129c0:	str	lr, [sp, #8]
   129c4:	add	fp, sp, #8
   129c8:	sub	sp, sp, #28
   129cc:	str	r0, [fp, #-32]	; 0xffffffe0
   129d0:	str	r1, [fp, #-36]	; 0xffffffdc
   129d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   129d8:	cmp	r3, #0
   129dc:	bge	129e8 <v_grau@@Base+0x30>
   129e0:	mvn	r3, #0
   129e4:	b	12a3c <v_grau@@Base+0x84>
   129e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   129f0:	bl	128ac <v_antecessores@@Base>
   129f4:	str	r0, [fp, #-16]
   129f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   129fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12a00:	bl	127dc <v_sucessores@@Base>
   12a04:	str	r0, [fp, #-20]	; 0xffffffec
   12a08:	ldr	r0, [fp, #-16]
   12a0c:	bl	12ca4 <vetor_tamanho@@Base>
   12a10:	mov	r4, r0
   12a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a18:	bl	12ca4 <vetor_tamanho@@Base>
   12a1c:	mov	r3, r0
   12a20:	add	r3, r4, r3
   12a24:	str	r3, [fp, #-24]	; 0xffffffe8
   12a28:	ldr	r0, [fp, #-16]
   12a2c:	bl	12bd8 <vetor_apaga@@Base>
   12a30:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a34:	bl	12bd8 <vetor_apaga@@Base>
   12a38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a3c:	mov	r0, r3
   12a40:	sub	sp, fp, #8
   12a44:	ldr	r4, [sp]
   12a48:	ldr	fp, [sp, #4]
   12a4c:	add	sp, sp, #8
   12a50:	pop	{pc}		; (ldr pc, [sp], #4)

00012a54 <v_celebridade@@Base>:
   12a54:	push	{fp}		; (str fp, [sp, #-4]!)
   12a58:	add	fp, sp, #0
   12a5c:	sub	sp, sp, #28
   12a60:	str	r0, [fp, #-24]	; 0xffffffe8
   12a64:	str	r1, [fp, #-28]	; 0xffffffe4
   12a68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a6c:	cmp	r3, #0
   12a70:	bne	12a7c <v_celebridade@@Base+0x28>
   12a74:	mvn	r3, #0
   12a78:	b	12b58 <v_celebridade@@Base+0x104>
   12a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12a80:	ldr	r2, [r3, #4]
   12a84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12a88:	lsl	r3, r3, #3
   12a8c:	add	r3, r2, r3
   12a90:	ldr	r3, [r3]
   12a94:	cmp	r3, #0
   12a98:	beq	12aa4 <v_celebridade@@Base+0x50>
   12a9c:	mov	r3, #0
   12aa0:	b	12b58 <v_celebridade@@Base+0x104>
   12aa4:	mov	r3, #0
   12aa8:	str	r3, [fp, #-12]
   12aac:	mov	r3, #0
   12ab0:	str	r3, [fp, #-8]
   12ab4:	b	12b20 <v_celebridade@@Base+0xcc>
   12ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12abc:	ldr	r2, [r3, #4]
   12ac0:	ldr	r3, [fp, #-8]
   12ac4:	lsl	r3, r3, #3
   12ac8:	add	r3, r2, r3
   12acc:	ldr	r3, [r3, #4]
   12ad0:	str	r3, [fp, #-16]
   12ad4:	b	12b08 <v_celebridade@@Base+0xb4>
   12ad8:	ldr	r3, [fp, #-16]
   12adc:	ldr	r3, [r3]
   12ae0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12ae4:	cmp	r2, r3
   12ae8:	bne	12afc <v_celebridade@@Base+0xa8>
   12aec:	ldr	r3, [fp, #-12]
   12af0:	add	r3, r3, #1
   12af4:	str	r3, [fp, #-12]
   12af8:	b	12b14 <v_celebridade@@Base+0xc0>
   12afc:	ldr	r3, [fp, #-16]
   12b00:	ldr	r3, [r3, #4]
   12b04:	str	r3, [fp, #-16]
   12b08:	ldr	r3, [fp, #-16]
   12b0c:	cmp	r3, #0
   12b10:	bne	12ad8 <v_celebridade@@Base+0x84>
   12b14:	ldr	r3, [fp, #-8]
   12b18:	add	r3, r3, #1
   12b1c:	str	r3, [fp, #-8]
   12b20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b24:	ldr	r3, [r3]
   12b28:	ldr	r2, [fp, #-8]
   12b2c:	cmp	r2, r3
   12b30:	blt	12ab8 <v_celebridade@@Base+0x64>
   12b34:	ldr	r3, [fp, #-12]
   12b38:	add	r2, r3, #1
   12b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b40:	ldr	r3, [r3]
   12b44:	cmp	r2, r3
   12b48:	bne	12b54 <v_celebridade@@Base+0x100>
   12b4c:	mov	r3, #1
   12b50:	b	12b58 <v_celebridade@@Base+0x104>
   12b54:	mov	r3, #0
   12b58:	mov	r0, r3
   12b5c:	add	sp, fp, #0
   12b60:	pop	{fp}		; (ldr fp, [sp], #4)
   12b64:	bx	lr

00012b68 <vetor_novo@@Base>:
   12b68:	str	fp, [sp, #-8]!
   12b6c:	str	lr, [sp, #4]
   12b70:	add	fp, sp, #4
   12b74:	sub	sp, sp, #8
   12b78:	mov	r0, #12
   12b7c:	bl	10ad4 <malloc@plt>
   12b80:	mov	r3, r0
   12b84:	str	r3, [fp, #-8]
   12b88:	ldr	r3, [fp, #-8]
   12b8c:	cmp	r3, #0
   12b90:	bne	12b9c <vetor_novo@@Base+0x34>
   12b94:	mov	r3, #0
   12b98:	b	12bc4 <vetor_novo@@Base+0x5c>
   12b9c:	ldr	r3, [fp, #-8]
   12ba0:	mov	r2, #0
   12ba4:	str	r2, [r3]
   12ba8:	ldr	r3, [fp, #-8]
   12bac:	mov	r2, #0
   12bb0:	str	r2, [r3, #4]
   12bb4:	ldr	r3, [fp, #-8]
   12bb8:	mov	r2, #0
   12bbc:	str	r2, [r3, #8]
   12bc0:	ldr	r3, [fp, #-8]
   12bc4:	mov	r0, r3
   12bc8:	sub	sp, fp, #4
   12bcc:	ldr	fp, [sp]
   12bd0:	add	sp, sp, #4
   12bd4:	pop	{pc}		; (ldr pc, [sp], #4)

00012bd8 <vetor_apaga@@Base>:
   12bd8:	str	fp, [sp, #-8]!
   12bdc:	str	lr, [sp, #4]
   12be0:	add	fp, sp, #4
   12be4:	sub	sp, sp, #8
   12be8:	str	r0, [fp, #-8]
   12bec:	ldr	r3, [fp, #-8]
   12bf0:	cmp	r3, #0
   12bf4:	beq	12c14 <vetor_apaga@@Base+0x3c>
   12bf8:	ldr	r3, [fp, #-8]
   12bfc:	ldr	r3, [r3, #8]
   12c00:	mov	r0, r3
   12c04:	bl	10ab0 <free@plt>
   12c08:	ldr	r0, [fp, #-8]
   12c0c:	bl	10ab0 <free@plt>
   12c10:	b	12c18 <vetor_apaga@@Base+0x40>
   12c14:	nop	{0}
   12c18:	sub	sp, fp, #4
   12c1c:	ldr	fp, [sp]
   12c20:	add	sp, sp, #4
   12c24:	pop	{pc}		; (ldr pc, [sp], #4)

00012c28 <vetor_atribui@@Base>:
   12c28:	push	{fp}		; (str fp, [sp, #-4]!)
   12c2c:	add	fp, sp, #0
   12c30:	sub	sp, sp, #20
   12c34:	str	r0, [fp, #-8]
   12c38:	str	r1, [fp, #-12]
   12c3c:	str	r2, [fp, #-16]
   12c40:	ldr	r3, [fp, #-8]
   12c44:	cmp	r3, #0
   12c48:	beq	12c6c <vetor_atribui@@Base+0x44>
   12c4c:	ldr	r3, [fp, #-12]
   12c50:	cmp	r3, #0
   12c54:	blt	12c6c <vetor_atribui@@Base+0x44>
   12c58:	ldr	r3, [fp, #-8]
   12c5c:	ldr	r3, [r3]
   12c60:	ldr	r2, [fp, #-12]
   12c64:	cmp	r2, r3
   12c68:	blt	12c74 <vetor_atribui@@Base+0x4c>
   12c6c:	mvn	r3, #0
   12c70:	b	12c94 <vetor_atribui@@Base+0x6c>
   12c74:	ldr	r3, [fp, #-8]
   12c78:	ldr	r2, [r3, #8]
   12c7c:	ldr	r3, [fp, #-12]
   12c80:	lsl	r3, r3, #2
   12c84:	add	r3, r2, r3
   12c88:	ldr	r2, [fp, #-16]
   12c8c:	str	r2, [r3]
   12c90:	ldr	r3, [fp, #-12]
   12c94:	mov	r0, r3
   12c98:	add	sp, fp, #0
   12c9c:	pop	{fp}		; (ldr fp, [sp], #4)
   12ca0:	bx	lr

00012ca4 <vetor_tamanho@@Base>:
   12ca4:	push	{fp}		; (str fp, [sp, #-4]!)
   12ca8:	add	fp, sp, #0
   12cac:	sub	sp, sp, #12
   12cb0:	str	r0, [fp, #-8]
   12cb4:	ldr	r3, [fp, #-8]
   12cb8:	cmp	r3, #0
   12cbc:	bne	12cc8 <vetor_tamanho@@Base+0x24>
   12cc0:	mvn	r3, #0
   12cc4:	b	12cd0 <vetor_tamanho@@Base+0x2c>
   12cc8:	ldr	r3, [fp, #-8]
   12ccc:	ldr	r3, [r3]
   12cd0:	mov	r0, r3
   12cd4:	add	sp, fp, #0
   12cd8:	pop	{fp}		; (ldr fp, [sp], #4)
   12cdc:	bx	lr

00012ce0 <vetor_elemento@@Base>:
   12ce0:	push	{fp}		; (str fp, [sp, #-4]!)
   12ce4:	add	fp, sp, #0
   12ce8:	sub	sp, sp, #12
   12cec:	str	r0, [fp, #-8]
   12cf0:	str	r1, [fp, #-12]
   12cf4:	ldr	r3, [fp, #-8]
   12cf8:	cmp	r3, #0
   12cfc:	beq	12d20 <vetor_elemento@@Base+0x40>
   12d00:	ldr	r3, [fp, #-12]
   12d04:	cmp	r3, #0
   12d08:	blt	12d20 <vetor_elemento@@Base+0x40>
   12d0c:	ldr	r3, [fp, #-8]
   12d10:	ldr	r3, [r3]
   12d14:	ldr	r2, [fp, #-12]
   12d18:	cmp	r2, r3
   12d1c:	blt	12d28 <vetor_elemento@@Base+0x48>
   12d20:	mov	r3, #-2147483648	; 0x80000000
   12d24:	b	12d40 <vetor_elemento@@Base+0x60>
   12d28:	ldr	r3, [fp, #-8]
   12d2c:	ldr	r2, [r3, #8]
   12d30:	ldr	r3, [fp, #-12]
   12d34:	lsl	r3, r3, #2
   12d38:	add	r3, r2, r3
   12d3c:	ldr	r3, [r3]
   12d40:	mov	r0, r3
   12d44:	add	sp, fp, #0
   12d48:	pop	{fp}		; (ldr fp, [sp], #4)
   12d4c:	bx	lr

00012d50 <vetor_insere@@Base>:
   12d50:	str	fp, [sp, #-8]!
   12d54:	str	lr, [sp, #4]
   12d58:	add	fp, sp, #4
   12d5c:	sub	sp, sp, #24
   12d60:	str	r0, [fp, #-16]
   12d64:	str	r1, [fp, #-20]	; 0xffffffec
   12d68:	str	r2, [fp, #-24]	; 0xffffffe8
   12d6c:	ldr	r3, [fp, #-16]
   12d70:	cmp	r3, #0
   12d74:	beq	12d98 <vetor_insere@@Base+0x48>
   12d78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d7c:	cmn	r3, #1
   12d80:	blt	12d98 <vetor_insere@@Base+0x48>
   12d84:	ldr	r3, [fp, #-16]
   12d88:	ldr	r3, [r3]
   12d8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12d90:	cmp	r2, r3
   12d94:	ble	12da0 <vetor_insere@@Base+0x50>
   12d98:	mvn	r3, #0
   12d9c:	b	12ee0 <vetor_insere@@Base+0x190>
   12da0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12da4:	cmn	r3, #1
   12da8:	bne	12db8 <vetor_insere@@Base+0x68>
   12dac:	ldr	r3, [fp, #-16]
   12db0:	ldr	r3, [r3]
   12db4:	str	r3, [fp, #-24]	; 0xffffffe8
   12db8:	ldr	r3, [fp, #-16]
   12dbc:	ldr	r2, [r3]
   12dc0:	ldr	r3, [fp, #-16]
   12dc4:	ldr	r3, [r3, #4]
   12dc8:	cmp	r2, r3
   12dcc:	bne	12e48 <vetor_insere@@Base+0xf8>
   12dd0:	ldr	r3, [fp, #-16]
   12dd4:	ldr	r3, [r3, #4]
   12dd8:	cmp	r3, #0
   12ddc:	bne	12df0 <vetor_insere@@Base+0xa0>
   12de0:	ldr	r3, [fp, #-16]
   12de4:	mov	r2, #1
   12de8:	str	r2, [r3, #4]
   12dec:	b	12e04 <vetor_insere@@Base+0xb4>
   12df0:	ldr	r3, [fp, #-16]
   12df4:	ldr	r3, [r3, #4]
   12df8:	lsl	r2, r3, #1
   12dfc:	ldr	r3, [fp, #-16]
   12e00:	str	r2, [r3, #4]
   12e04:	ldr	r3, [fp, #-16]
   12e08:	ldr	r2, [r3, #8]
   12e0c:	ldr	r3, [fp, #-16]
   12e10:	ldr	r3, [r3, #4]
   12e14:	lsl	r3, r3, #2
   12e18:	mov	r1, r3
   12e1c:	mov	r0, r2
   12e20:	bl	10abc <realloc@plt>
   12e24:	mov	r2, r0
   12e28:	ldr	r3, [fp, #-16]
   12e2c:	str	r2, [r3, #8]
   12e30:	ldr	r3, [fp, #-16]
   12e34:	ldr	r3, [r3, #8]
   12e38:	cmp	r3, #0
   12e3c:	bne	12e48 <vetor_insere@@Base+0xf8>
   12e40:	mvn	r3, #0
   12e44:	b	12ee0 <vetor_insere@@Base+0x190>
   12e48:	ldr	r3, [fp, #-16]
   12e4c:	ldr	r3, [r3]
   12e50:	sub	r3, r3, #1
   12e54:	str	r3, [fp, #-8]
   12e58:	b	12e9c <vetor_insere@@Base+0x14c>
   12e5c:	ldr	r3, [fp, #-16]
   12e60:	ldr	r2, [r3, #8]
   12e64:	ldr	r3, [fp, #-8]
   12e68:	lsl	r3, r3, #2
   12e6c:	add	r2, r2, r3
   12e70:	ldr	r3, [fp, #-16]
   12e74:	ldr	r1, [r3, #8]
   12e78:	ldr	r3, [fp, #-8]
   12e7c:	add	r3, r3, #1
   12e80:	lsl	r3, r3, #2
   12e84:	add	r3, r1, r3
   12e88:	ldr	r2, [r2]
   12e8c:	str	r2, [r3]
   12e90:	ldr	r3, [fp, #-8]
   12e94:	sub	r3, r3, #1
   12e98:	str	r3, [fp, #-8]
   12e9c:	ldr	r2, [fp, #-8]
   12ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ea4:	cmp	r2, r3
   12ea8:	bge	12e5c <vetor_insere@@Base+0x10c>
   12eac:	ldr	r3, [fp, #-16]
   12eb0:	ldr	r2, [r3, #8]
   12eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12eb8:	lsl	r3, r3, #2
   12ebc:	add	r3, r2, r3
   12ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   12ec4:	str	r2, [r3]
   12ec8:	ldr	r3, [fp, #-16]
   12ecc:	ldr	r3, [r3]
   12ed0:	add	r2, r3, #1
   12ed4:	ldr	r3, [fp, #-16]
   12ed8:	str	r2, [r3]
   12edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ee0:	mov	r0, r3
   12ee4:	sub	sp, fp, #4
   12ee8:	ldr	fp, [sp]
   12eec:	add	sp, sp, #4
   12ef0:	pop	{pc}		; (ldr pc, [sp], #4)

00012ef4 <vetor_remove@@Base>:
   12ef4:	push	{fp}		; (str fp, [sp, #-4]!)
   12ef8:	add	fp, sp, #0
   12efc:	sub	sp, sp, #20
   12f00:	str	r0, [fp, #-16]
   12f04:	str	r1, [fp, #-20]	; 0xffffffec
   12f08:	ldr	r3, [fp, #-16]
   12f0c:	cmp	r3, #0
   12f10:	beq	12f34 <vetor_remove@@Base+0x40>
   12f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f18:	cmp	r3, #0
   12f1c:	blt	12f34 <vetor_remove@@Base+0x40>
   12f20:	ldr	r3, [fp, #-16]
   12f24:	ldr	r3, [r3]
   12f28:	ldr	r2, [fp, #-20]	; 0xffffffec
   12f2c:	cmp	r2, r3
   12f30:	blt	12f3c <vetor_remove@@Base+0x48>
   12f34:	mvn	r3, #0
   12f38:	b	12fb8 <vetor_remove@@Base+0xc4>
   12f3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f40:	add	r3, r3, #1
   12f44:	str	r3, [fp, #-8]
   12f48:	b	12f8c <vetor_remove@@Base+0x98>
   12f4c:	ldr	r3, [fp, #-16]
   12f50:	ldr	r2, [r3, #8]
   12f54:	ldr	r3, [fp, #-8]
   12f58:	lsl	r3, r3, #2
   12f5c:	add	r2, r2, r3
   12f60:	ldr	r3, [fp, #-16]
   12f64:	ldr	r1, [r3, #8]
   12f68:	ldr	r3, [fp, #-8]
   12f6c:	sub	r3, r3, #-1073741823	; 0xc0000001
   12f70:	lsl	r3, r3, #2
   12f74:	add	r3, r1, r3
   12f78:	ldr	r2, [r2]
   12f7c:	str	r2, [r3]
   12f80:	ldr	r3, [fp, #-8]
   12f84:	add	r3, r3, #1
   12f88:	str	r3, [fp, #-8]
   12f8c:	ldr	r3, [fp, #-16]
   12f90:	ldr	r3, [r3]
   12f94:	ldr	r2, [fp, #-8]
   12f98:	cmp	r2, r3
   12f9c:	blt	12f4c <vetor_remove@@Base+0x58>
   12fa0:	ldr	r3, [fp, #-16]
   12fa4:	ldr	r3, [r3]
   12fa8:	sub	r2, r3, #1
   12fac:	ldr	r3, [fp, #-16]
   12fb0:	str	r2, [r3]
   12fb4:	mov	r3, #0
   12fb8:	mov	r0, r3
   12fbc:	add	sp, fp, #0
   12fc0:	pop	{fp}		; (ldr fp, [sp], #4)
   12fc4:	bx	lr

00012fc8 <vetor_pesquisa@@Base>:
   12fc8:	push	{fp}		; (str fp, [sp, #-4]!)
   12fcc:	add	fp, sp, #0
   12fd0:	sub	sp, sp, #20
   12fd4:	str	r0, [fp, #-16]
   12fd8:	str	r1, [fp, #-20]	; 0xffffffec
   12fdc:	ldr	r3, [fp, #-16]
   12fe0:	cmp	r3, #0
   12fe4:	bne	12ff0 <vetor_pesquisa@@Base+0x28>
   12fe8:	mvn	r3, #0
   12fec:	b	1304c <vetor_pesquisa@@Base+0x84>
   12ff0:	mov	r3, #0
   12ff4:	str	r3, [fp, #-8]
   12ff8:	b	13034 <vetor_pesquisa@@Base+0x6c>
   12ffc:	ldr	r3, [fp, #-16]
   13000:	ldr	r2, [r3, #8]
   13004:	ldr	r3, [fp, #-8]
   13008:	lsl	r3, r3, #2
   1300c:	add	r3, r2, r3
   13010:	ldr	r3, [r3]
   13014:	ldr	r2, [fp, #-20]	; 0xffffffec
   13018:	cmp	r2, r3
   1301c:	bne	13028 <vetor_pesquisa@@Base+0x60>
   13020:	ldr	r3, [fp, #-8]
   13024:	b	1304c <vetor_pesquisa@@Base+0x84>
   13028:	ldr	r3, [fp, #-8]
   1302c:	add	r3, r3, #1
   13030:	str	r3, [fp, #-8]
   13034:	ldr	r3, [fp, #-16]
   13038:	ldr	r3, [r3]
   1303c:	ldr	r2, [fp, #-8]
   13040:	cmp	r2, r3
   13044:	blt	12ffc <vetor_pesquisa@@Base+0x34>
   13048:	mvn	r3, #0
   1304c:	mov	r0, r3
   13050:	add	sp, fp, #0
   13054:	pop	{fp}		; (ldr fp, [sp], #4)
   13058:	bx	lr

0001305c <vetor_ordena@@Base>:
   1305c:	push	{fp}		; (str fp, [sp, #-4]!)
   13060:	add	fp, sp, #0
   13064:	sub	sp, sp, #28
   13068:	str	r0, [fp, #-24]	; 0xffffffe8
   1306c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13070:	cmp	r3, #0
   13074:	bne	13080 <vetor_ordena@@Base+0x24>
   13078:	mvn	r3, #0
   1307c:	b	13168 <vetor_ordena@@Base+0x10c>
   13080:	mov	r3, #1
   13084:	str	r3, [fp, #-8]
   13088:	b	13150 <vetor_ordena@@Base+0xf4>
   1308c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13090:	ldr	r2, [r3, #8]
   13094:	ldr	r3, [fp, #-8]
   13098:	lsl	r3, r3, #2
   1309c:	add	r3, r2, r3
   130a0:	ldr	r3, [r3]
   130a4:	str	r3, [fp, #-16]
   130a8:	ldr	r3, [fp, #-8]
   130ac:	str	r3, [fp, #-12]
   130b0:	b	130f4 <vetor_ordena@@Base+0x98>
   130b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   130b8:	ldr	r2, [r3, #8]
   130bc:	ldr	r3, [fp, #-12]
   130c0:	sub	r3, r3, #-1073741823	; 0xc0000001
   130c4:	lsl	r3, r3, #2
   130c8:	add	r2, r2, r3
   130cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   130d0:	ldr	r1, [r3, #8]
   130d4:	ldr	r3, [fp, #-12]
   130d8:	lsl	r3, r3, #2
   130dc:	add	r3, r1, r3
   130e0:	ldr	r2, [r2]
   130e4:	str	r2, [r3]
   130e8:	ldr	r3, [fp, #-12]
   130ec:	sub	r3, r3, #1
   130f0:	str	r3, [fp, #-12]
   130f4:	ldr	r3, [fp, #-12]
   130f8:	cmp	r3, #0
   130fc:	ble	13128 <vetor_ordena@@Base+0xcc>
   13100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13104:	ldr	r2, [r3, #8]
   13108:	ldr	r3, [fp, #-12]
   1310c:	sub	r3, r3, #-1073741823	; 0xc0000001
   13110:	lsl	r3, r3, #2
   13114:	add	r3, r2, r3
   13118:	ldr	r3, [r3]
   1311c:	ldr	r2, [fp, #-16]
   13120:	cmp	r2, r3
   13124:	blt	130b4 <vetor_ordena@@Base+0x58>
   13128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1312c:	ldr	r2, [r3, #8]
   13130:	ldr	r3, [fp, #-12]
   13134:	lsl	r3, r3, #2
   13138:	add	r3, r2, r3
   1313c:	ldr	r2, [fp, #-16]
   13140:	str	r2, [r3]
   13144:	ldr	r3, [fp, #-8]
   13148:	add	r3, r3, #1
   1314c:	str	r3, [fp, #-8]
   13150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13154:	ldr	r3, [r3]
   13158:	ldr	r2, [fp, #-8]
   1315c:	cmp	r2, r3
   13160:	blt	1308c <vetor_ordena@@Base+0x30>
   13164:	mov	r3, #0
   13168:	mov	r0, r3
   1316c:	add	sp, fp, #0
   13170:	pop	{fp}		; (ldr fp, [sp], #4)
   13174:	bx	lr

00013178 <__libc_csu_init@@Base>:
   13178:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1317c:	mov	r7, r0
   13180:	ldr	r6, [pc, #72]	; 131d0 <__libc_csu_init@@Base+0x58>
   13184:	ldr	r5, [pc, #72]	; 131d4 <__libc_csu_init@@Base+0x5c>
   13188:	add	r6, pc, r6
   1318c:	add	r5, pc, r5
   13190:	sub	r6, r6, r5
   13194:	mov	r8, r1
   13198:	mov	r9, r2
   1319c:	bl	10a78 <calloc@plt-0x20>
   131a0:	asrs	r6, r6, #2
   131a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   131a8:	mov	r4, #0
   131ac:	add	r4, r4, #1
   131b0:	ldr	r3, [r5], #4
   131b4:	mov	r2, r9
   131b8:	mov	r1, r8
   131bc:	mov	r0, r7
   131c0:	blx	r3
   131c4:	cmp	r6, r4
   131c8:	bne	131ac <__libc_csu_init@@Base+0x34>
   131cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   131d0:	andeq	r0, r1, r4, lsl #27
   131d4:	andeq	r0, r1, ip, ror sp

000131d8 <__libc_csu_fini@@Base>:
   131d8:	bx	lr

Disassembly of section .fini:

000131dc <.fini>:
   131dc:	push	{r3, lr}
   131e0:	pop	{r3, pc}
