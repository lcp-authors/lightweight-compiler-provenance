
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf32-littlearm


Disassembly of section .init:

00011234 <.init>:
   11234:	push	{r3, lr}
   11238:	bl	113b0 <_start@@Base+0x3c>
   1123c:	pop	{r3, pc}

Disassembly of section .plt:

00011240 <strstr@plt-0x14>:
   11240:	push	{lr}		; (str lr, [sp, #-4]!)
   11244:	ldr	lr, [pc, #4]	; 11250 <strstr@plt-0x4>
   11248:	add	lr, pc, lr
   1124c:	ldr	pc, [lr, #8]!
   11250:			; <UNDEFINED> instruction: 0x00015db0

00011254 <strstr@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #86016	; 0x15000
   1125c:	ldr	pc, [ip, #3504]!	; 0xdb0

00011260 <raise@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #86016	; 0x15000
   11268:	ldr	pc, [ip, #3496]!	; 0xda8

0001126c <strcmp@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #86016	; 0x15000
   11274:	ldr	pc, [ip, #3488]!	; 0xda0

00011278 <mprotect@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #86016	; 0x15000
   11280:	ldr	pc, [ip, #3480]!	; 0xd98

00011284 <free@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #86016	; 0x15000
   1128c:	ldr	pc, [ip, #3472]!	; 0xd90

00011290 <memcpy@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #86016	; 0x15000
   11298:	ldr	pc, [ip, #3464]!	; 0xd88

0001129c <fn_vv@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #86016	; 0x15000
   112a4:	ldr	pc, [ip, #3456]!	; 0xd80

000112a8 <realloc@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #86016	; 0x15000
   112b0:	ldr	pc, [ip, #3448]!	; 0xd78

000112b4 <fn_ii@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #86016	; 0x15000
   112bc:	ldr	pc, [ip, #3440]!	; 0xd70

000112c0 <fn_ii_va@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #86016	; 0x15000
   112c8:	ldr	pc, [ip, #3432]!	; 0xd68

000112cc <malloc@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #86016	; 0x15000
   112d4:	ldr	pc, [ip, #3424]!	; 0xd60

000112d8 <__libc_start_main@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #86016	; 0x15000
   112e0:	ldr	pc, [ip, #3416]!	; 0xd58

000112e4 <__gmon_start__@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #86016	; 0x15000
   112ec:	ldr	pc, [ip, #3408]!	; 0xd50

000112f0 <strlen@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #86016	; 0x15000
   112f8:	ldr	pc, [ip, #3400]!	; 0xd48

000112fc <mmap@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #86016	; 0x15000
   11304:	ldr	pc, [ip, #3392]!	; 0xd40

00011308 <strchr@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #86016	; 0x15000
   11310:	ldr	pc, [ip, #3384]!	; 0xd38

00011314 <fprintf@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #86016	; 0x15000
   1131c:	ldr	pc, [ip, #3376]!	; 0xd30

00011320 <__errno_location@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #86016	; 0x15000
   11328:	ldr	pc, [ip, #3368]!	; 0xd28

0001132c <snprintf@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #86016	; 0x15000
   11334:	ldr	pc, [ip, #3360]!	; 0xd20

00011338 <memset@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #86016	; 0x15000
   11340:	ldr	pc, [ip, #3352]!	; 0xd18

00011344 <munmap@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #86016	; 0x15000
   1134c:	ldr	pc, [ip, #3344]!	; 0xd10

00011350 <__tls_get_addr@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #86016	; 0x15000
   11358:	ldr	pc, [ip, #3336]!	; 0xd08

0001135c <strncmp@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #86016	; 0x15000
   11364:	ldr	pc, [ip, #3328]!	; 0xd00

00011368 <abort@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #86016	; 0x15000
   11370:	ldr	pc, [ip, #3320]!	; 0xcf8

Disassembly of section .text:

00011374 <_start@@Base>:
   11374:	mov	fp, #0
   11378:	mov	lr, #0
   1137c:	pop	{r1}		; (ldr r1, [sp], #4)
   11380:	mov	r2, sp
   11384:	push	{r2}		; (str r2, [sp, #-4]!)
   11388:	push	{r0}		; (str r0, [sp, #-4]!)
   1138c:	ldr	ip, [pc, #16]	; 113a4 <_start@@Base+0x30>
   11390:	push	{ip}		; (str ip, [sp, #-4]!)
   11394:	ldr	r0, [pc, #12]	; 113a8 <_start@@Base+0x34>
   11398:	ldr	r3, [pc, #12]	; 113ac <_start@@Base+0x38>
   1139c:	bl	112d8 <__libc_start_main@plt>
   113a0:	bl	11368 <abort@plt>
   113a4:	andeq	r5, r1, r8, asr #20
   113a8:			; <UNDEFINED> instruction: 0x000125b8
   113ac:	andeq	r5, r1, r8, ror #19
   113b0:	ldr	r3, [pc, #20]	; 113cc <_start@@Base+0x58>
   113b4:	ldr	r2, [pc, #20]	; 113d0 <_start@@Base+0x5c>
   113b8:	add	r3, pc, r3
   113bc:	ldr	r2, [r3, r2]
   113c0:	cmp	r2, #0
   113c4:	bxeq	lr
   113c8:	b	112e4 <__gmon_start__@plt>
   113cc:	andeq	r5, r1, r0, asr #24
   113d0:	strheq	r0, [r0], -r8
   113d4:	ldr	r3, [pc, #28]	; 113f8 <_start@@Base+0x84>
   113d8:	ldr	r0, [pc, #28]	; 113fc <_start@@Base+0x88>
   113dc:	sub	r3, r3, r0
   113e0:	cmp	r3, #6
   113e4:	bxls	lr
   113e8:	ldr	r3, [pc, #16]	; 11400 <_start@@Base+0x8c>
   113ec:	cmp	r3, #0
   113f0:	bxeq	lr
   113f4:	bx	r3
   113f8:	andeq	r7, r2, r3, ror #1
   113fc:	andeq	r7, r2, r0, ror #1
   11400:	andeq	r0, r0, r0
   11404:	ldr	r1, [pc, #36]	; 11430 <_start@@Base+0xbc>
   11408:	ldr	r0, [pc, #36]	; 11434 <_start@@Base+0xc0>
   1140c:	sub	r1, r1, r0
   11410:	asr	r1, r1, #2
   11414:	add	r1, r1, r1, lsr #31
   11418:	asrs	r1, r1, #1
   1141c:	bxeq	lr
   11420:	ldr	r3, [pc, #16]	; 11438 <_start@@Base+0xc4>
   11424:	cmp	r3, #0
   11428:	bxeq	lr
   1142c:	bx	r3
   11430:	andeq	r7, r2, r0, ror #1
   11434:	andeq	r7, r2, r0, ror #1
   11438:	andeq	r0, r0, r0
   1143c:	push	{r4, lr}
   11440:	ldr	r4, [pc, #24]	; 11460 <_start@@Base+0xec>
   11444:	ldrb	r3, [r4]
   11448:	cmp	r3, #0
   1144c:	popne	{r4, pc}
   11450:	bl	113d4 <_start@@Base+0x60>
   11454:	mov	r3, #1
   11458:	strb	r3, [r4]
   1145c:	pop	{r4, pc}
   11460:	andeq	r7, r2, r0, ror #1
   11464:	ldr	r0, [pc, #40]	; 11494 <_start@@Base+0x120>
   11468:	ldr	r3, [r0]
   1146c:	cmp	r3, #0
   11470:	bne	11478 <_start@@Base+0x104>
   11474:	b	11404 <_start@@Base+0x90>
   11478:	ldr	r3, [pc, #24]	; 11498 <_start@@Base+0x124>
   1147c:	cmp	r3, #0
   11480:	beq	11474 <_start@@Base+0x100>
   11484:	push	{r4, lr}
   11488:	blx	r3
   1148c:	pop	{r4, lr}
   11490:	b	11404 <_start@@Base+0x90>
   11494:	strdeq	r6, [r2], -ip
   11498:	andeq	r0, r0, r0
   1149c:	push	{fp, lr}
   114a0:	add	fp, sp, #4
   114a4:	sub	sp, sp, #96	; 0x60
   114a8:	str	r0, [fp, #-96]	; 0xffffffa0
   114ac:	bl	134cc <mmk_matcher_ctx@@Base>
   114b0:	str	r0, [fp, #-24]	; 0xffffffe8
   114b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114b8:	cmp	r3, #0
   114bc:	beq	11714 <_start@@Base+0x3a0>
   114c0:	bl	149bc <mmk_ctx@@Base>
   114c4:	mov	r3, r0
   114c8:	mov	r0, r3
   114cc:	bl	145b0 <mmk_stub_context@@Base>
   114d0:	str	r0, [fp, #-28]	; 0xffffffe4
   114d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114d8:	ldr	r3, [r3]
   114dc:	cmp	r3, #0
   114e0:	bne	11530 <_start@@Base+0x1bc>
   114e4:	mov	r0, #44	; 0x2c
   114e8:	bl	15410 <mmk_malloc@@Base>
   114ec:	str	r0, [fp, #-32]	; 0xffffffe0
   114f0:	bl	156ec <mmk_when_get_result@@Base>
   114f4:	mov	r2, r0
   114f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   114fc:	add	ip, r3, #8
   11500:	mov	lr, r2
   11504:	ldm	lr!, {r0, r1, r2, r3}
   11508:	stmia	ip!, {r0, r1, r2, r3}
   1150c:	ldr	r3, [lr]
   11510:	str	r3, [ip]
   11514:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11518:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1151c:	str	r2, [r3, #40]	; 0x28
   11520:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11524:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11528:	bl	15718 <mmk_when_impl@@Base>
   1152c:	b	11704 <_start@@Base+0x390>
   11530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11534:	ldr	r3, [r3]
   11538:	cmp	r3, #1
   1153c:	bne	11704 <_start@@Base+0x390>
   11540:	mov	r3, #0
   11544:	str	r3, [fp, #-8]
   11548:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1154c:	bl	138f0 <mmk_mock_params_begin@@Base>
   11550:	str	r0, [fp, #-12]
   11554:	b	116bc <_start@@Base+0x348>
   11558:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1155c:	str	r3, [fp, #-36]	; 0xffffffdc
   11560:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11564:	ldr	r3, [r3, #8]
   11568:	cmp	r3, #0
   1156c:	beq	1165c <_start@@Base+0x2e8>
   11570:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11574:	ldr	r3, [r3, #8]
   11578:	str	r3, [fp, #-36]	; 0xffffffdc
   1157c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11580:	ldr	r3, [r3]
   11584:	cmp	r3, #0
   11588:	beq	11680 <_start@@Base+0x30c>
   1158c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11590:	ldr	r3, [r3]
   11594:	cmp	r3, #0
   11598:	bge	1161c <_start@@Base+0x2a8>
   1159c:	ldr	r3, [fp, #-12]
   115a0:	add	r3, r3, #12
   115a4:	sub	r1, fp, #96	; 0x60
   115a8:	mov	r2, #4
   115ac:	mov	r0, r3
   115b0:	bl	15004 <mmk_memcmp@@Base>
   115b4:	str	r0, [fp, #-40]	; 0xffffffd8
   115b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   115bc:	cmp	r3, #0
   115c0:	bne	115d8 <_start@@Base+0x264>
   115c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   115c8:	ldr	r3, [r3]
   115cc:	and	r3, r3, #2
   115d0:	cmp	r3, #0
   115d4:	beq	11698 <_start@@Base+0x324>
   115d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   115dc:	cmp	r3, #0
   115e0:	bge	115f8 <_start@@Base+0x284>
   115e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   115e8:	ldr	r3, [r3]
   115ec:	and	r3, r3, #4
   115f0:	cmp	r3, #0
   115f4:	beq	116a0 <_start@@Base+0x32c>
   115f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   115fc:	cmp	r3, #0
   11600:	ble	11680 <_start@@Base+0x30c>
   11604:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11608:	ldr	r3, [r3]
   1160c:	and	r3, r3, #8
   11610:	cmp	r3, #0
   11614:	bne	11680 <_start@@Base+0x30c>
   11618:	b	116ac <_start@@Base+0x338>
   1161c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11620:	ldr	r3, [r3]
   11624:	cmp	r3, #1
   11628:	bne	11680 <_start@@Base+0x30c>
   1162c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11630:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   11634:	str	r0, [fp, #-44]	; 0xffffffd4
   11638:	ldr	r3, [fp, #-12]
   1163c:	ldr	r2, [r3, #12]
   11640:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11644:	mov	r0, r2
   11648:	blx	r3
   1164c:	mov	r3, r0
   11650:	cmp	r3, #0
   11654:	bne	11680 <_start@@Base+0x30c>
   11658:	b	116ac <_start@@Base+0x338>
   1165c:	ldr	r3, [fp, #-12]
   11660:	add	r3, r3, #12
   11664:	sub	r1, fp, #96	; 0x60
   11668:	mov	r2, #4
   1166c:	mov	r0, r3
   11670:	bl	15004 <mmk_memcmp@@Base>
   11674:	mov	r3, r0
   11678:	cmp	r3, #0
   1167c:	bne	116a8 <_start@@Base+0x334>
   11680:	ldr	r3, [fp, #-12]
   11684:	ldr	r3, [r3]
   11688:	ldr	r2, [fp, #-8]
   1168c:	add	r3, r2, r3
   11690:	str	r3, [fp, #-8]
   11694:	b	116ac <_start@@Base+0x338>
   11698:	nop			; (mov r0, r0)
   1169c:	b	116ac <_start@@Base+0x338>
   116a0:	nop			; (mov r0, r0)
   116a4:	b	116ac <_start@@Base+0x338>
   116a8:	nop			; (mov r0, r0)
   116ac:	ldr	r1, [fp, #-12]
   116b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   116b4:	bl	13944 <mmk_mock_params_next@@Base>
   116b8:	str	r0, [fp, #-12]
   116bc:	ldr	r3, [fp, #-12]
   116c0:	cmp	r3, #0
   116c4:	bne	11558 <_start@@Base+0x1e4>
   116c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116cc:	str	r3, [fp, #-16]
   116d0:	b	116f0 <_start@@Base+0x37c>
   116d4:	ldr	r3, [fp, #-16]
   116d8:	ldr	r3, [r3, #8]
   116dc:	str	r3, [fp, #-48]	; 0xffffffd0
   116e0:	ldr	r0, [fp, #-16]
   116e4:	bl	154a0 <mmk_free@@Base>
   116e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   116ec:	str	r3, [fp, #-16]
   116f0:	ldr	r3, [fp, #-16]
   116f4:	cmp	r3, #0
   116f8:	bne	116d4 <_start@@Base+0x360>
   116fc:	ldr	r0, [fp, #-8]
   11700:	bl	14bb8 <mmk_verify_set_times@@Base>
   11704:	ldr	r3, [pc, #648]	; 11994 <_start@@Base+0x620>
   11708:	add	r3, pc, r3
   1170c:	ldr	r3, [r3]
   11710:	b	11988 <_start@@Base+0x614>
   11714:	sub	r3, fp, #88	; 0x58
   11718:	mov	r2, #0
   1171c:	str	r2, [r3]
   11720:	str	r2, [r3, #4]
   11724:	str	r2, [r3, #8]
   11728:	str	r2, [r3, #12]
   1172c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11730:	str	r3, [fp, #-76]	; 0xffffffb4
   11734:	sub	r3, fp, #88	; 0x58
   11738:	str	r3, [fp, #-52]	; 0xffffffcc
   1173c:	mov	r1, #16
   11740:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11744:	bl	14dcc <mmk_verify_register_call@@Base>
   11748:	bl	139bc <mmk_mock_get_params@@Base>
   1174c:	str	r0, [fp, #-20]	; 0xffffffec
   11750:	b	11970 <_start@@Base+0x5fc>
   11754:	ldr	r3, [fp, #-20]	; 0xffffffec
   11758:	str	r3, [fp, #-56]	; 0xffffffc8
   1175c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11760:	ldr	r3, [r3]
   11764:	str	r3, [fp, #-60]	; 0xffffffc4
   11768:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1176c:	ldr	r3, [r3, #8]
   11770:	cmp	r3, #0
   11774:	beq	1185c <_start@@Base+0x4e8>
   11778:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1177c:	ldr	r3, [r3, #8]
   11780:	str	r3, [fp, #-60]	; 0xffffffc4
   11784:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11788:	ldr	r3, [r3]
   1178c:	cmp	r3, #0
   11790:	beq	11880 <_start@@Base+0x50c>
   11794:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11798:	ldr	r3, [r3]
   1179c:	cmp	r3, #0
   117a0:	bge	11820 <_start@@Base+0x4ac>
   117a4:	sub	r1, fp, #96	; 0x60
   117a8:	sub	r3, fp, #96	; 0x60
   117ac:	mov	r2, #4
   117b0:	mov	r0, r3
   117b4:	bl	15004 <mmk_memcmp@@Base>
   117b8:	str	r0, [fp, #-64]	; 0xffffffc0
   117bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   117c0:	cmp	r3, #0
   117c4:	bne	117dc <_start@@Base+0x468>
   117c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   117cc:	ldr	r3, [r3]
   117d0:	and	r3, r3, #2
   117d4:	cmp	r3, #0
   117d8:	beq	11958 <_start@@Base+0x5e4>
   117dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   117e0:	cmp	r3, #0
   117e4:	bge	117fc <_start@@Base+0x488>
   117e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   117ec:	ldr	r3, [r3]
   117f0:	and	r3, r3, #4
   117f4:	cmp	r3, #0
   117f8:	beq	11958 <_start@@Base+0x5e4>
   117fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11800:	cmp	r3, #0
   11804:	ble	11880 <_start@@Base+0x50c>
   11808:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1180c:	ldr	r3, [r3]
   11810:	and	r3, r3, #8
   11814:	cmp	r3, #0
   11818:	bne	11880 <_start@@Base+0x50c>
   1181c:	b	11958 <_start@@Base+0x5e4>
   11820:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11824:	ldr	r3, [r3]
   11828:	cmp	r3, #1
   1182c:	bne	11880 <_start@@Base+0x50c>
   11830:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11834:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   11838:	str	r0, [fp, #-68]	; 0xffffffbc
   1183c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11840:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11844:	mov	r0, r2
   11848:	blx	r3
   1184c:	mov	r3, r0
   11850:	cmp	r3, #0
   11854:	bne	11880 <_start@@Base+0x50c>
   11858:	b	11964 <_start@@Base+0x5f0>
   1185c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11860:	add	r1, r3, #40	; 0x28
   11864:	sub	r3, fp, #96	; 0x60
   11868:	mov	r2, #4
   1186c:	mov	r0, r3
   11870:	bl	15004 <mmk_memcmp@@Base>
   11874:	mov	r3, r0
   11878:	cmp	r3, #0
   1187c:	bne	11960 <_start@@Base+0x5ec>
   11880:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11884:	ldr	r3, [r3, #12]
   11888:	cmp	r3, #0
   1188c:	beq	118a4 <_start@@Base+0x530>
   11890:	bl	11320 <__errno_location@plt>
   11894:	mov	r2, r0
   11898:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1189c:	ldr	r3, [r3, #12]
   118a0:	str	r3, [r2]
   118a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   118a8:	ldr	r3, [r3, #20]
   118ac:	cmp	r3, #0
   118b0:	beq	118e4 <_start@@Base+0x570>
   118b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   118b8:	ldr	r3, [r3, #16]
   118bc:	cmp	r3, #0
   118c0:	bne	118e4 <_start@@Base+0x570>
   118c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   118c8:	ldr	r3, [r3, #20]
   118cc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   118d0:	mov	r0, r2
   118d4:	blx	r3
   118d8:	str	r0, [fp, #-72]	; 0xffffffb8
   118dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   118e0:	b	11988 <_start@@Base+0x614>
   118e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   118e8:	ldr	r3, [r3, #20]
   118ec:	cmp	r3, #0
   118f0:	beq	11928 <_start@@Base+0x5b4>
   118f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   118f8:	ldr	r3, [r3, #16]
   118fc:	cmp	r3, #0
   11900:	beq	11928 <_start@@Base+0x5b4>
   11904:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11908:	ldr	r3, [r3, #20]
   1190c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11910:	mov	r0, r2
   11914:	blx	r3
   11918:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1191c:	ldr	r3, [r3, #16]
   11920:	ldr	r3, [r3]
   11924:	b	11988 <_start@@Base+0x614>
   11928:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1192c:	ldr	r3, [r3, #16]
   11930:	cmp	r3, #0
   11934:	beq	11948 <_start@@Base+0x5d4>
   11938:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1193c:	ldr	r3, [r3, #16]
   11940:	ldr	r3, [r3]
   11944:	b	11988 <_start@@Base+0x614>
   11948:	ldr	r3, [pc, #72]	; 11998 <_start@@Base+0x624>
   1194c:	add	r3, pc, r3
   11950:	ldr	r3, [r3]
   11954:	b	11988 <_start@@Base+0x614>
   11958:	nop			; (mov r0, r0)
   1195c:	b	11964 <_start@@Base+0x5f0>
   11960:	nop			; (mov r0, r0)
   11964:	ldr	r3, [fp, #-20]	; 0xffffffec
   11968:	ldr	r3, [r3, #4]
   1196c:	str	r3, [fp, #-20]	; 0xffffffec
   11970:	ldr	r3, [fp, #-20]	; 0xffffffec
   11974:	cmp	r3, #0
   11978:	bne	11754 <_start@@Base+0x3e0>
   1197c:	ldr	r3, [pc, #24]	; 1199c <_start@@Base+0x628>
   11980:	add	r3, pc, r3
   11984:	ldr	r3, [r3]
   11988:	mov	r0, r3
   1198c:	sub	sp, fp, #4
   11990:	pop	{fp, pc}
   11994:	ldrdeq	r5, [r1], -r8
   11998:	muleq	r1, r4, r7
   1199c:	andeq	r5, r1, r0, ror #14
   119a0:	push	{fp, lr}
   119a4:	add	fp, sp, #4
   119a8:	sub	sp, sp, #8
   119ac:	str	r0, [fp, #-8]
   119b0:	ldr	r3, [pc, #28]	; 119d4 <_start@@Base+0x660>
   119b4:	add	r3, pc, r3
   119b8:	mov	r1, r3
   119bc:	ldr	r0, [fp, #-8]
   119c0:	bl	13618 <mmk_mock_create_internal@@Base>
   119c4:	mov	r3, r0
   119c8:	mov	r0, r3
   119cc:	sub	sp, fp, #4
   119d0:	pop	{fp, pc}
   119d4:			; <UNDEFINED> instruction: 0xfffffae0
   119d8:	push	{fp, lr}
   119dc:	add	fp, sp, #4
   119e0:	sub	sp, sp, #64	; 0x40
   119e4:	bl	134cc <mmk_matcher_ctx@@Base>
   119e8:	str	r0, [fp, #-20]	; 0xffffffec
   119ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   119f0:	cmp	r3, #0
   119f4:	beq	11b00 <_start@@Base+0x78c>
   119f8:	bl	149bc <mmk_ctx@@Base>
   119fc:	mov	r3, r0
   11a00:	mov	r0, r3
   11a04:	bl	145b0 <mmk_stub_context@@Base>
   11a08:	str	r0, [fp, #-24]	; 0xffffffe8
   11a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a10:	ldr	r3, [r3]
   11a14:	cmp	r3, #0
   11a18:	bne	11a5c <_start@@Base+0x6e8>
   11a1c:	mov	r0, #40	; 0x28
   11a20:	bl	15410 <mmk_malloc@@Base>
   11a24:	str	r0, [fp, #-28]	; 0xffffffe4
   11a28:	bl	156ec <mmk_when_get_result@@Base>
   11a2c:	mov	r2, r0
   11a30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a34:	add	ip, r3, #8
   11a38:	mov	lr, r2
   11a3c:	ldm	lr!, {r0, r1, r2, r3}
   11a40:	stmia	ip!, {r0, r1, r2, r3}
   11a44:	ldr	r3, [lr]
   11a48:	str	r3, [ip]
   11a4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a54:	bl	15718 <mmk_when_impl@@Base>
   11a58:	b	11be4 <_start@@Base+0x870>
   11a5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a60:	ldr	r3, [r3]
   11a64:	cmp	r3, #1
   11a68:	bne	11be4 <_start@@Base+0x870>
   11a6c:	mov	r3, #0
   11a70:	str	r3, [fp, #-8]
   11a74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a78:	bl	138f0 <mmk_mock_params_begin@@Base>
   11a7c:	str	r0, [fp, #-12]
   11a80:	b	11ab4 <_start@@Base+0x740>
   11a84:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a88:	str	r3, [fp, #-32]	; 0xffffffe0
   11a8c:	ldr	r3, [fp, #-12]
   11a90:	ldr	r3, [r3]
   11a94:	ldr	r2, [fp, #-8]
   11a98:	add	r3, r2, r3
   11a9c:	str	r3, [fp, #-8]
   11aa0:	nop			; (mov r0, r0)
   11aa4:	ldr	r1, [fp, #-12]
   11aa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11aac:	bl	13944 <mmk_mock_params_next@@Base>
   11ab0:	str	r0, [fp, #-12]
   11ab4:	ldr	r3, [fp, #-12]
   11ab8:	cmp	r3, #0
   11abc:	bne	11a84 <_start@@Base+0x710>
   11ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ac4:	str	r3, [fp, #-16]
   11ac8:	b	11ae8 <_start@@Base+0x774>
   11acc:	ldr	r3, [fp, #-16]
   11ad0:	ldr	r3, [r3, #8]
   11ad4:	str	r3, [fp, #-36]	; 0xffffffdc
   11ad8:	ldr	r0, [fp, #-16]
   11adc:	bl	154a0 <mmk_free@@Base>
   11ae0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11ae4:	str	r3, [fp, #-16]
   11ae8:	ldr	r3, [fp, #-16]
   11aec:	cmp	r3, #0
   11af0:	bne	11acc <_start@@Base+0x758>
   11af4:	ldr	r0, [fp, #-8]
   11af8:	bl	14bb8 <mmk_verify_set_times@@Base>
   11afc:	b	11be4 <_start@@Base+0x870>
   11b00:	sub	r3, fp, #64	; 0x40
   11b04:	mov	r2, #0
   11b08:	str	r2, [r3]
   11b0c:	str	r2, [r3, #4]
   11b10:	str	r2, [r3, #8]
   11b14:	sub	r3, fp, #64	; 0x40
   11b18:	str	r3, [fp, #-40]	; 0xffffffd8
   11b1c:	mov	r1, #12
   11b20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11b24:	bl	14dcc <mmk_verify_register_call@@Base>
   11b28:	bl	139bc <mmk_mock_get_params@@Base>
   11b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   11b30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11b34:	cmp	r3, #0
   11b38:	beq	11bec <_start@@Base+0x878>
   11b3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11b40:	str	r3, [fp, #-48]	; 0xffffffd0
   11b44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11b48:	ldr	r3, [r3]
   11b4c:	str	r3, [fp, #-52]	; 0xffffffcc
   11b50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b54:	ldr	r3, [r3, #12]
   11b58:	cmp	r3, #0
   11b5c:	beq	11b74 <_start@@Base+0x800>
   11b60:	bl	11320 <__errno_location@plt>
   11b64:	mov	r2, r0
   11b68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b6c:	ldr	r3, [r3, #12]
   11b70:	str	r3, [r2]
   11b74:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b78:	ldr	r3, [r3, #20]
   11b7c:	cmp	r3, #0
   11b80:	beq	11ba4 <_start@@Base+0x830>
   11b84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b88:	ldr	r3, [r3, #16]
   11b8c:	cmp	r3, #0
   11b90:	bne	11ba4 <_start@@Base+0x830>
   11b94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b98:	ldr	r3, [r3, #20]
   11b9c:	blx	r3
   11ba0:	b	11bf0 <_start@@Base+0x87c>
   11ba4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11ba8:	ldr	r3, [r3, #20]
   11bac:	cmp	r3, #0
   11bb0:	beq	11bd4 <_start@@Base+0x860>
   11bb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11bb8:	ldr	r3, [r3, #16]
   11bbc:	cmp	r3, #0
   11bc0:	beq	11bd4 <_start@@Base+0x860>
   11bc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11bc8:	ldr	r3, [r3, #20]
   11bcc:	blx	r3
   11bd0:	b	11bf0 <_start@@Base+0x87c>
   11bd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11bd8:	ldr	r3, [r3, #16]
   11bdc:	cmp	r3, #0
   11be0:	b	11bf0 <_start@@Base+0x87c>
   11be4:	nop			; (mov r0, r0)
   11be8:	b	11bf0 <_start@@Base+0x87c>
   11bec:	nop			; (mov r0, r0)
   11bf0:	sub	sp, fp, #4
   11bf4:	pop	{fp, pc}
   11bf8:	push	{fp, lr}
   11bfc:	add	fp, sp, #4
   11c00:	sub	sp, sp, #8
   11c04:	str	r0, [fp, #-8]
   11c08:	ldr	r3, [pc, #28]	; 11c2c <_start@@Base+0x8b8>
   11c0c:	add	r3, pc, r3
   11c10:	mov	r1, r3
   11c14:	ldr	r0, [fp, #-8]
   11c18:	bl	13618 <mmk_mock_create_internal@@Base>
   11c1c:	mov	r3, r0
   11c20:	mov	r0, r3
   11c24:	sub	sp, fp, #4
   11c28:	pop	{fp, pc}
   11c2c:			; <UNDEFINED> instruction: 0xfffffdc4
   11c30:	push	{r4, fp, lr}
   11c34:	add	fp, sp, #8
   11c38:	sub	sp, sp, #36	; 0x24
   11c3c:	str	r0, [fp, #-32]	; 0xffffffe0
   11c40:	str	r1, [fp, #-36]	; 0xffffffdc
   11c44:	str	r2, [fp, #-40]	; 0xffffffd8
   11c48:	str	r3, [fp, #-44]	; 0xffffffd4
   11c4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c50:	cmp	r3, #0
   11c54:	bgt	11c60 <_start@@Base+0x8ec>
   11c58:	mov	r3, #0
   11c5c:	b	11d30 <_start@@Base+0x9bc>
   11c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c64:	lsl	r3, r3, #2
   11c68:	mov	r0, r3
   11c6c:	bl	15410 <mmk_malloc@@Base>
   11c70:	str	r0, [fp, #-20]	; 0xffffffec
   11c74:	mov	r3, #0
   11c78:	str	r3, [fp, #-16]
   11c7c:	b	11d04 <_start@@Base+0x990>
   11c80:	ldr	r3, [fp, #-16]
   11c84:	lsl	r3, r3, #2
   11c88:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c8c:	add	r4, r2, r3
   11c90:	mov	r0, #8
   11c94:	bl	15410 <mmk_malloc@@Base>
   11c98:	mov	r3, r0
   11c9c:	str	r3, [r4]
   11ca0:	ldr	r3, [fp, #-16]
   11ca4:	lsl	r3, r3, #2
   11ca8:	ldr	r2, [fp, #-20]	; 0xffffffec
   11cac:	add	r3, r2, r3
   11cb0:	ldr	r3, [r3]
   11cb4:	mov	r2, #4
   11cb8:	str	r2, [r3]
   11cbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11cc0:	add	r2, r3, #4
   11cc4:	str	r2, [fp, #-36]	; 0xffffffdc
   11cc8:	ldr	r3, [r3]
   11ccc:	str	r3, [fp, #-24]	; 0xffffffe8
   11cd0:	ldr	r3, [fp, #-16]
   11cd4:	lsl	r3, r3, #2
   11cd8:	ldr	r2, [fp, #-20]	; 0xffffffec
   11cdc:	add	r3, r2, r3
   11ce0:	ldr	r3, [r3]
   11ce4:	add	r3, r3, #4
   11ce8:	sub	r1, fp, #24
   11cec:	mov	r2, #4
   11cf0:	mov	r0, r3
   11cf4:	bl	150b4 <mmk_memcpy@@Base>
   11cf8:	ldr	r3, [fp, #-16]
   11cfc:	add	r3, r3, #1
   11d00:	str	r3, [fp, #-16]
   11d04:	ldr	r2, [fp, #-16]
   11d08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d0c:	cmp	r2, r3
   11d10:	blt	11c80 <_start@@Base+0x90c>
   11d14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11d18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11d1c:	str	r2, [r3]
   11d20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11d24:	ldr	r2, [fp, #-20]	; 0xffffffec
   11d28:	str	r2, [r3]
   11d2c:	mov	r3, #1
   11d30:	mov	r0, r3
   11d34:	sub	sp, fp, #8
   11d38:	pop	{r4, fp, pc}
   11d3c:	push	{r0, r1, r2, r3}
   11d40:	push	{r4, fp, lr}
   11d44:	add	fp, sp, #8
   11d48:	sub	sp, sp, #156	; 0x9c
   11d4c:	ldr	r3, [pc, #2032]	; 12544 <_start@@Base+0x11d0>
   11d50:	add	r3, pc, r3
   11d54:	str	r3, [fp, #-40]	; 0xffffffd8
   11d58:	add	r3, fp, #8
   11d5c:	str	r3, [fp, #-136]	; 0xffffff78
   11d60:	bl	134cc <mmk_matcher_ctx@@Base>
   11d64:	str	r0, [fp, #-44]	; 0xffffffd4
   11d68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11d6c:	cmp	r3, #0
   11d70:	beq	12244 <_start@@Base+0xed0>
   11d74:	bl	149bc <mmk_ctx@@Base>
   11d78:	mov	r3, r0
   11d7c:	mov	r0, r3
   11d80:	bl	145b0 <mmk_stub_context@@Base>
   11d84:	str	r0, [fp, #-48]	; 0xffffffd0
   11d88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11d8c:	ldr	r3, [r3]
   11d90:	cmp	r3, #0
   11d94:	bne	11e3c <_start@@Base+0xac8>
   11d98:	mov	r0, #44	; 0x2c
   11d9c:	bl	15410 <mmk_malloc@@Base>
   11da0:	str	r0, [fp, #-52]	; 0xffffffcc
   11da4:	bl	156ec <mmk_when_get_result@@Base>
   11da8:	mov	r2, r0
   11dac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11db0:	add	ip, r3, #8
   11db4:	mov	lr, r2
   11db8:	ldm	lr!, {r0, r1, r2, r3}
   11dbc:	stmia	ip!, {r0, r1, r2, r3}
   11dc0:	ldr	r3, [lr]
   11dc4:	str	r3, [ip]
   11dc8:	ldr	r2, [fp, #4]
   11dcc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11dd0:	str	r2, [r3, #40]	; 0x28
   11dd4:	mov	r3, #0
   11dd8:	str	r3, [fp, #-144]	; 0xffffff70
   11ddc:	mov	r3, #0
   11de0:	str	r3, [fp, #-148]	; 0xffffff6c
   11de4:	ldr	r3, [fp, #-136]	; 0xffffff78
   11de8:	str	r3, [fp, #-140]	; 0xffffff74
   11dec:	ldr	r0, [fp, #4]
   11df0:	sub	r3, fp, #148	; 0x94
   11df4:	sub	r2, fp, #144	; 0x90
   11df8:	ldr	r4, [fp, #-40]	; 0xffffffd8
   11dfc:	ldr	r1, [fp, #-140]	; 0xffffff74
   11e00:	blx	r4
   11e04:	str	r0, [fp, #-56]	; 0xffffffc8
   11e08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11e0c:	cmp	r3, #0
   11e10:	beq	11e2c <_start@@Base+0xab8>
   11e14:	ldr	r2, [fp, #-144]	; 0xffffff70
   11e18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11e1c:	str	r2, [r3, #32]
   11e20:	ldr	r2, [fp, #-148]	; 0xffffff6c
   11e24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11e28:	str	r2, [r3, #36]	; 0x24
   11e2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11e30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e34:	bl	15718 <mmk_when_impl@@Base>
   11e38:	b	12234 <_start@@Base+0xec0>
   11e3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11e40:	ldr	r3, [r3]
   11e44:	cmp	r3, #1
   11e48:	bne	12234 <_start@@Base+0xec0>
   11e4c:	mov	r3, #0
   11e50:	str	r3, [fp, #-16]
   11e54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11e58:	bl	138f0 <mmk_mock_params_begin@@Base>
   11e5c:	str	r0, [fp, #-20]	; 0xffffffec
   11e60:	b	121ec <_start@@Base+0xe78>
   11e64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11e68:	str	r3, [fp, #-24]	; 0xffffffe8
   11e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e70:	ldr	r3, [r3, #8]
   11e74:	cmp	r3, #0
   11e78:	beq	11f68 <_start@@Base+0xbf4>
   11e7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e80:	ldr	r3, [r3, #8]
   11e84:	str	r3, [fp, #-24]	; 0xffffffe8
   11e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e8c:	ldr	r3, [r3]
   11e90:	cmp	r3, #0
   11e94:	beq	11f8c <_start@@Base+0xc18>
   11e98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e9c:	ldr	r3, [r3]
   11ea0:	cmp	r3, #0
   11ea4:	bge	11f28 <_start@@Base+0xbb4>
   11ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11eac:	add	r3, r3, #12
   11eb0:	mov	r2, #4
   11eb4:	add	r1, fp, #4
   11eb8:	mov	r0, r3
   11ebc:	bl	15004 <mmk_memcmp@@Base>
   11ec0:	str	r0, [fp, #-60]	; 0xffffffc4
   11ec4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ec8:	cmp	r3, #0
   11ecc:	bne	11ee4 <_start@@Base+0xb70>
   11ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ed4:	ldr	r3, [r3]
   11ed8:	and	r3, r3, #2
   11edc:	cmp	r3, #0
   11ee0:	beq	121a8 <_start@@Base+0xe34>
   11ee4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ee8:	cmp	r3, #0
   11eec:	bge	11f04 <_start@@Base+0xb90>
   11ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ef4:	ldr	r3, [r3]
   11ef8:	and	r3, r3, #4
   11efc:	cmp	r3, #0
   11f00:	beq	121b0 <_start@@Base+0xe3c>
   11f04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11f08:	cmp	r3, #0
   11f0c:	ble	11f8c <_start@@Base+0xc18>
   11f10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f14:	ldr	r3, [r3]
   11f18:	and	r3, r3, #8
   11f1c:	cmp	r3, #0
   11f20:	bne	11f8c <_start@@Base+0xc18>
   11f24:	b	121dc <_start@@Base+0xe68>
   11f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f2c:	ldr	r3, [r3]
   11f30:	cmp	r3, #1
   11f34:	bne	11f8c <_start@@Base+0xc18>
   11f38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f3c:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   11f40:	str	r0, [fp, #-64]	; 0xffffffc0
   11f44:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f48:	ldr	r2, [r3, #12]
   11f4c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11f50:	mov	r0, r2
   11f54:	blx	r3
   11f58:	mov	r3, r0
   11f5c:	cmp	r3, #0
   11f60:	bne	11f8c <_start@@Base+0xc18>
   11f64:	b	121dc <_start@@Base+0xe68>
   11f68:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f6c:	add	r3, r3, #12
   11f70:	mov	r2, #4
   11f74:	add	r1, fp, #4
   11f78:	mov	r0, r3
   11f7c:	bl	15004 <mmk_memcmp@@Base>
   11f80:	mov	r3, r0
   11f84:	cmp	r3, #0
   11f88:	bne	121b8 <_start@@Base+0xe44>
   11f8c:	mov	r3, #0
   11f90:	str	r3, [fp, #-152]	; 0xffffff68
   11f94:	mov	r3, #0
   11f98:	str	r3, [fp, #-156]	; 0xffffff64
   11f9c:	ldr	r3, [fp, #-136]	; 0xffffff78
   11fa0:	str	r3, [fp, #-140]	; 0xffffff74
   11fa4:	ldr	r0, [fp, #4]
   11fa8:	sub	r3, fp, #156	; 0x9c
   11fac:	sub	r2, fp, #152	; 0x98
   11fb0:	ldr	r4, [fp, #-40]	; 0xffffffd8
   11fb4:	ldr	r1, [fp, #-140]	; 0xffffff74
   11fb8:	blx	r4
   11fbc:	str	r0, [fp, #-68]	; 0xffffffbc
   11fc0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11fc4:	cmp	r3, #0
   11fc8:	beq	121dc <_start@@Base+0xe68>
   11fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11fd0:	ldr	r2, [r3, #4]
   11fd4:	ldr	r3, [fp, #-152]	; 0xffffff68
   11fd8:	cmp	r2, r3
   11fdc:	bne	121dc <_start@@Base+0xe68>
   11fe0:	mov	r3, #0
   11fe4:	str	r3, [fp, #-28]	; 0xffffffe4
   11fe8:	b	12174 <_start@@Base+0xe00>
   11fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ff0:	ldr	r2, [r3, #8]
   11ff4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11ff8:	lsl	r3, r3, #2
   11ffc:	add	r3, r2, r3
   12000:	ldr	r3, [r3]
   12004:	str	r3, [fp, #-72]	; 0xffffffb8
   12008:	ldr	r2, [fp, #-156]	; 0xffffff64
   1200c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12010:	lsl	r3, r3, #2
   12014:	add	r3, r2, r3
   12018:	ldr	r3, [r3]
   1201c:	str	r3, [fp, #-76]	; 0xffffffb4
   12020:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12024:	ldr	r2, [r3]
   12028:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1202c:	ldr	r3, [r3]
   12030:	cmp	r2, r3
   12034:	bne	121c0 <_start@@Base+0xe4c>
   12038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1203c:	ldr	r3, [r3, #8]
   12040:	cmp	r3, #0
   12044:	beq	12134 <_start@@Base+0xdc0>
   12048:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1204c:	ldr	r3, [r3, #8]
   12050:	str	r3, [fp, #-24]	; 0xffffffe8
   12054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12058:	ldr	r3, [r3]
   1205c:	cmp	r3, #0
   12060:	beq	12160 <_start@@Base+0xdec>
   12064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12068:	ldr	r3, [r3]
   1206c:	cmp	r3, #0
   12070:	bge	120fc <_start@@Base+0xd88>
   12074:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12078:	add	r0, r3, #4
   1207c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12080:	add	r1, r3, #4
   12084:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12088:	ldr	r3, [r3]
   1208c:	mov	r2, r3
   12090:	bl	15004 <mmk_memcmp@@Base>
   12094:	str	r0, [fp, #-80]	; 0xffffffb0
   12098:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1209c:	cmp	r3, #0
   120a0:	bne	120b8 <_start@@Base+0xd44>
   120a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   120a8:	ldr	r3, [r3]
   120ac:	and	r3, r3, #2
   120b0:	cmp	r3, #0
   120b4:	beq	121c8 <_start@@Base+0xe54>
   120b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   120bc:	cmp	r3, #0
   120c0:	bge	120d8 <_start@@Base+0xd64>
   120c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   120c8:	ldr	r3, [r3]
   120cc:	and	r3, r3, #4
   120d0:	cmp	r3, #0
   120d4:	beq	121d0 <_start@@Base+0xe5c>
   120d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   120dc:	cmp	r3, #0
   120e0:	ble	12160 <_start@@Base+0xdec>
   120e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   120e8:	ldr	r3, [r3]
   120ec:	and	r3, r3, #8
   120f0:	cmp	r3, #0
   120f4:	bne	12160 <_start@@Base+0xdec>
   120f8:	b	121dc <_start@@Base+0xe68>
   120fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12100:	ldr	r3, [r3]
   12104:	cmp	r3, #1
   12108:	bne	12160 <_start@@Base+0xdec>
   1210c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12110:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   12114:	str	r0, [fp, #-84]	; 0xffffffac
   12118:	ldr	r3, [fp, #-84]	; 0xffffffac
   1211c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   12120:	blx	r3
   12124:	mov	r3, r0
   12128:	cmp	r3, #0
   1212c:	bne	12160 <_start@@Base+0xdec>
   12130:	b	121dc <_start@@Base+0xe68>
   12134:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12138:	add	r0, r3, #4
   1213c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12140:	add	r1, r3, #4
   12144:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12148:	ldr	r3, [r3]
   1214c:	mov	r2, r3
   12150:	bl	15004 <mmk_memcmp@@Base>
   12154:	mov	r3, r0
   12158:	cmp	r3, #0
   1215c:	bne	121d8 <_start@@Base+0xe64>
   12160:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12164:	bl	154a0 <mmk_free@@Base>
   12168:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1216c:	add	r3, r3, #1
   12170:	str	r3, [fp, #-28]	; 0xffffffe4
   12174:	ldr	r3, [fp, #-152]	; 0xffffff68
   12178:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1217c:	cmp	r2, r3
   12180:	bcc	11fec <_start@@Base+0xc78>
   12184:	ldr	r3, [fp, #-156]	; 0xffffff64
   12188:	mov	r0, r3
   1218c:	bl	154a0 <mmk_free@@Base>
   12190:	ldr	r3, [fp, #-20]	; 0xffffffec
   12194:	ldr	r3, [r3]
   12198:	ldr	r2, [fp, #-16]
   1219c:	add	r3, r2, r3
   121a0:	str	r3, [fp, #-16]
   121a4:	b	121dc <_start@@Base+0xe68>
   121a8:	nop			; (mov r0, r0)
   121ac:	b	121dc <_start@@Base+0xe68>
   121b0:	nop			; (mov r0, r0)
   121b4:	b	121dc <_start@@Base+0xe68>
   121b8:	nop			; (mov r0, r0)
   121bc:	b	121dc <_start@@Base+0xe68>
   121c0:	nop			; (mov r0, r0)
   121c4:	b	121dc <_start@@Base+0xe68>
   121c8:	nop			; (mov r0, r0)
   121cc:	b	121dc <_start@@Base+0xe68>
   121d0:	nop			; (mov r0, r0)
   121d4:	b	121dc <_start@@Base+0xe68>
   121d8:	nop			; (mov r0, r0)
   121dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   121e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   121e4:	bl	13944 <mmk_mock_params_next@@Base>
   121e8:	str	r0, [fp, #-20]	; 0xffffffec
   121ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   121f0:	cmp	r3, #0
   121f4:	bne	11e64 <_start@@Base+0xaf0>
   121f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   121fc:	str	r3, [fp, #-32]	; 0xffffffe0
   12200:	b	12220 <_start@@Base+0xeac>
   12204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12208:	ldr	r3, [r3, #8]
   1220c:	str	r3, [fp, #-88]	; 0xffffffa8
   12210:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12214:	bl	154a0 <mmk_free@@Base>
   12218:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1221c:	str	r3, [fp, #-32]	; 0xffffffe0
   12220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12224:	cmp	r3, #0
   12228:	bne	12204 <_start@@Base+0xe90>
   1222c:	ldr	r0, [fp, #-16]
   12230:	bl	14bb8 <mmk_verify_set_times@@Base>
   12234:	ldr	r3, [pc, #780]	; 12548 <_start@@Base+0x11d4>
   12238:	add	r3, pc, r3
   1223c:	ldr	r3, [r3]
   12240:	b	12530 <_start@@Base+0x11bc>
   12244:	sub	r3, fp, #132	; 0x84
   12248:	mov	r2, #0
   1224c:	str	r2, [r3]
   12250:	str	r2, [r3, #4]
   12254:	str	r2, [r3, #8]
   12258:	str	r2, [r3, #12]
   1225c:	ldr	r3, [fp, #4]
   12260:	str	r3, [fp, #-120]	; 0xffffff88
   12264:	sub	r3, fp, #132	; 0x84
   12268:	str	r3, [fp, #-92]	; 0xffffffa4
   1226c:	mov	r3, #0
   12270:	str	r3, [fp, #-160]	; 0xffffff60
   12274:	mov	r3, #0
   12278:	str	r3, [fp, #-164]	; 0xffffff5c
   1227c:	ldr	r3, [fp, #-136]	; 0xffffff78
   12280:	str	r3, [fp, #-140]	; 0xffffff74
   12284:	ldr	r0, [fp, #4]
   12288:	sub	r3, fp, #164	; 0xa4
   1228c:	sub	r2, fp, #160	; 0xa0
   12290:	ldr	r4, [fp, #-40]	; 0xffffffd8
   12294:	ldr	r1, [fp, #-140]	; 0xffffff74
   12298:	blx	r4
   1229c:	str	r0, [fp, #-96]	; 0xffffffa0
   122a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   122a4:	cmp	r3, #0
   122a8:	beq	122c4 <_start@@Base+0xf50>
   122ac:	ldr	r2, [fp, #-160]	; 0xffffff60
   122b0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   122b4:	str	r2, [r3, #4]
   122b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   122bc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   122c0:	str	r2, [r3, #8]
   122c4:	mov	r1, #16
   122c8:	ldr	r0, [fp, #-92]	; 0xffffffa4
   122cc:	bl	14dcc <mmk_verify_register_call@@Base>
   122d0:	bl	139bc <mmk_mock_get_params@@Base>
   122d4:	str	r0, [fp, #-36]	; 0xffffffdc
   122d8:	b	12518 <_start@@Base+0x11a4>
   122dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   122e0:	str	r3, [fp, #-100]	; 0xffffff9c
   122e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   122e8:	ldr	r3, [r3]
   122ec:	str	r3, [fp, #-104]	; 0xffffff98
   122f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   122f4:	ldr	r3, [r3, #8]
   122f8:	cmp	r3, #0
   122fc:	beq	123e8 <_start@@Base+0x1074>
   12300:	ldr	r3, [fp, #-104]	; 0xffffff98
   12304:	ldr	r3, [r3, #8]
   12308:	str	r3, [fp, #-104]	; 0xffffff98
   1230c:	ldr	r3, [fp, #-104]	; 0xffffff98
   12310:	ldr	r3, [r3]
   12314:	cmp	r3, #0
   12318:	beq	12410 <_start@@Base+0x109c>
   1231c:	ldr	r3, [fp, #-104]	; 0xffffff98
   12320:	ldr	r3, [r3]
   12324:	cmp	r3, #0
   12328:	bge	123ac <_start@@Base+0x1038>
   1232c:	mov	r2, #4
   12330:	add	r3, fp, #4
   12334:	mov	r1, r3
   12338:	add	r3, fp, #4
   1233c:	mov	r0, r3
   12340:	bl	15004 <mmk_memcmp@@Base>
   12344:	str	r0, [fp, #-108]	; 0xffffff94
   12348:	ldr	r3, [fp, #-108]	; 0xffffff94
   1234c:	cmp	r3, #0
   12350:	bne	12368 <_start@@Base+0xff4>
   12354:	ldr	r3, [fp, #-104]	; 0xffffff98
   12358:	ldr	r3, [r3]
   1235c:	and	r3, r3, #2
   12360:	cmp	r3, #0
   12364:	beq	12500 <_start@@Base+0x118c>
   12368:	ldr	r3, [fp, #-108]	; 0xffffff94
   1236c:	cmp	r3, #0
   12370:	bge	12388 <_start@@Base+0x1014>
   12374:	ldr	r3, [fp, #-104]	; 0xffffff98
   12378:	ldr	r3, [r3]
   1237c:	and	r3, r3, #4
   12380:	cmp	r3, #0
   12384:	beq	12500 <_start@@Base+0x118c>
   12388:	ldr	r3, [fp, #-108]	; 0xffffff94
   1238c:	cmp	r3, #0
   12390:	ble	12410 <_start@@Base+0x109c>
   12394:	ldr	r3, [fp, #-104]	; 0xffffff98
   12398:	ldr	r3, [r3]
   1239c:	and	r3, r3, #8
   123a0:	cmp	r3, #0
   123a4:	bne	12410 <_start@@Base+0x109c>
   123a8:	b	12500 <_start@@Base+0x118c>
   123ac:	ldr	r3, [fp, #-104]	; 0xffffff98
   123b0:	ldr	r3, [r3]
   123b4:	cmp	r3, #1
   123b8:	bne	12410 <_start@@Base+0x109c>
   123bc:	ldr	r0, [fp, #-104]	; 0xffffff98
   123c0:	bl	135f0 <mmk_matcher_get_predicate@@Base>
   123c4:	str	r0, [fp, #-112]	; 0xffffff90
   123c8:	ldr	r2, [fp, #4]
   123cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   123d0:	mov	r0, r2
   123d4:	blx	r3
   123d8:	mov	r3, r0
   123dc:	cmp	r3, #0
   123e0:	bne	12410 <_start@@Base+0x109c>
   123e4:	b	1250c <_start@@Base+0x1198>
   123e8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123ec:	add	r3, r3, #40	; 0x28
   123f0:	mov	r2, #4
   123f4:	mov	r1, r3
   123f8:	add	r3, fp, #4
   123fc:	mov	r0, r3
   12400:	bl	15004 <mmk_memcmp@@Base>
   12404:	mov	r3, r0
   12408:	cmp	r3, #0
   1240c:	bne	12508 <_start@@Base+0x1194>
   12410:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12414:	ldr	r3, [r3, #12]
   12418:	cmp	r3, #0
   1241c:	beq	12434 <_start@@Base+0x10c0>
   12420:	bl	11320 <__errno_location@plt>
   12424:	mov	r2, r0
   12428:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1242c:	ldr	r3, [r3, #12]
   12430:	str	r3, [r2]
   12434:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12438:	ldr	r3, [r3, #20]
   1243c:	cmp	r3, #0
   12440:	beq	12480 <_start@@Base+0x110c>
   12444:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12448:	ldr	r3, [r3, #16]
   1244c:	cmp	r3, #0
   12450:	bne	12480 <_start@@Base+0x110c>
   12454:	ldr	r3, [fp, #-136]	; 0xffffff78
   12458:	str	r3, [fp, #-140]	; 0xffffff74
   1245c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12460:	ldr	r3, [r3, #20]
   12464:	ldr	r2, [fp, #4]
   12468:	ldr	r1, [fp, #-140]	; 0xffffff74
   1246c:	mov	r0, r2
   12470:	blx	r3
   12474:	str	r0, [fp, #-116]	; 0xffffff8c
   12478:	ldr	r3, [fp, #-116]	; 0xffffff8c
   1247c:	b	12530 <_start@@Base+0x11bc>
   12480:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12484:	ldr	r3, [r3, #20]
   12488:	cmp	r3, #0
   1248c:	beq	124d0 <_start@@Base+0x115c>
   12490:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12494:	ldr	r3, [r3, #16]
   12498:	cmp	r3, #0
   1249c:	beq	124d0 <_start@@Base+0x115c>
   124a0:	ldr	r3, [fp, #-136]	; 0xffffff78
   124a4:	str	r3, [fp, #-140]	; 0xffffff74
   124a8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   124ac:	ldr	r3, [r3, #20]
   124b0:	ldr	r2, [fp, #4]
   124b4:	ldr	r1, [fp, #-140]	; 0xffffff74
   124b8:	mov	r0, r2
   124bc:	blx	r3
   124c0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   124c4:	ldr	r3, [r3, #16]
   124c8:	ldr	r3, [r3]
   124cc:	b	12530 <_start@@Base+0x11bc>
   124d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   124d4:	ldr	r3, [r3, #16]
   124d8:	cmp	r3, #0
   124dc:	beq	124f0 <_start@@Base+0x117c>
   124e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   124e4:	ldr	r3, [r3, #16]
   124e8:	ldr	r3, [r3]
   124ec:	b	12530 <_start@@Base+0x11bc>
   124f0:	ldr	r3, [pc, #84]	; 1254c <_start@@Base+0x11d8>
   124f4:	add	r3, pc, r3
   124f8:	ldr	r3, [r3]
   124fc:	b	12530 <_start@@Base+0x11bc>
   12500:	nop			; (mov r0, r0)
   12504:	b	1250c <_start@@Base+0x1198>
   12508:	nop			; (mov r0, r0)
   1250c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12510:	ldr	r3, [r3, #4]
   12514:	str	r3, [fp, #-36]	; 0xffffffdc
   12518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1251c:	cmp	r3, #0
   12520:	bne	122dc <_start@@Base+0xf68>
   12524:	ldr	r3, [pc, #36]	; 12550 <_start@@Base+0x11dc>
   12528:	add	r3, pc, r3
   1252c:	ldr	r3, [r3]
   12530:	mov	r0, r3
   12534:	sub	sp, fp, #8
   12538:	pop	{r4, fp, lr}
   1253c:	add	sp, sp, #16
   12540:	bx	lr
   12544:			; <UNDEFINED> instruction: 0xfffffed8
   12548:	andeq	r4, r1, ip, lsr #29
   1254c:	strdeq	r4, [r1], -r0
   12550:			; <UNDEFINED> instruction: 0x00014bbc
   12554:	push	{fp, lr}
   12558:	add	fp, sp, #4
   1255c:	sub	sp, sp, #8
   12560:	str	r0, [fp, #-8]
   12564:	ldr	r3, [pc, #28]	; 12588 <_start@@Base+0x1214>
   12568:	add	r3, pc, r3
   1256c:	mov	r1, r3
   12570:	ldr	r0, [fp, #-8]
   12574:	bl	13618 <mmk_mock_create_internal@@Base>
   12578:	mov	r3, r0
   1257c:	mov	r0, r3
   12580:	sub	sp, fp, #4
   12584:	pop	{fp, pc}
   12588:			; <UNDEFINED> instruction: 0xfffff7cc

0001258c <set_valid@@Base>:
   1258c:	push	{fp}		; (str fp, [sp, #-4]!)
   12590:	add	fp, sp, #0
   12594:	ldr	r3, [pc, #24]	; 125b4 <set_valid@@Base+0x28>
   12598:	add	r3, pc, r3
   1259c:	mov	r2, #1
   125a0:	str	r2, [r3]
   125a4:	nop			; (mov r0, r0)
   125a8:	add	sp, fp, #0
   125ac:	pop	{fp}		; (ldr fp, [sp], #4)
   125b0:	bx	lr
   125b4:	andeq	r4, r1, r4, asr #22

000125b8 <main@@Base>:
   125b8:	push	{r4, fp, lr}
   125bc:	add	fp, sp, #8
   125c0:	sub	sp, sp, #468	; 0x1d4
   125c4:	ldr	r4, [pc, #2956]	; 13158 <main@@Base+0xba0>
   125c8:	add	r4, pc, r4
   125cc:	ldr	r3, [pc, #2952]	; 1315c <main@@Base+0xba4>
   125d0:	add	r3, pc, r3
   125d4:	mov	r0, r3
   125d8:	bl	11bf8 <_start@@Base+0x884>
   125dc:	mov	r0, #0
   125e0:	bl	13430 <mmk_matcher_init@@Base>
   125e4:	sub	r3, fp, #468	; 0x1d4
   125e8:	mov	r2, #0
   125ec:	str	r2, [r3]
   125f0:	str	r2, [r3, #4]
   125f4:	str	r2, [r3, #8]
   125f8:	str	r2, [r3, #12]
   125fc:	str	r2, [r3, #16]
   12600:	ldr	r3, [pc, #2904]	; 13160 <main@@Base+0xba8>
   12604:	ldr	r3, [r4, r3]
   12608:	str	r3, [fp, #-456]	; 0xfffffe38
   1260c:	sub	r3, fp, #468	; 0x1d4
   12610:	mov	r0, r3
   12614:	bl	156b0 <mmk_when_init@@Base>
   12618:	bl	1129c <fn_vv@plt>
   1261c:	bl	1349c <mmk_matcher_term@@Base>
   12620:	mov	r0, #1
   12624:	bl	13430 <mmk_matcher_init@@Base>
   12628:	bl	1129c <fn_vv@plt>
   1262c:	bl	1349c <mmk_matcher_term@@Base>
   12630:	sub	r3, fp, #448	; 0x1c0
   12634:	mov	r2, #0
   12638:	str	r2, [r3]
   1263c:	str	r2, [r3, #4]
   12640:	str	r2, [r3, #8]
   12644:	str	r2, [r3, #12]
   12648:	str	r2, [r3, #16]
   1264c:	str	r2, [r3, #20]
   12650:	mov	r3, #1
   12654:	str	r3, [fp, #-448]	; 0xfffffe40
   12658:	mov	r3, #1
   1265c:	str	r3, [fp, #-444]	; 0xfffffe44
   12660:	sub	r3, fp, #448	; 0x1c0
   12664:	mov	r0, r3
   12668:	bl	14bf4 <mmk_verify_times@@Base>
   1266c:	mov	r3, r0
   12670:	cmp	r3, #0
   12674:	bne	126ac <main@@Base+0xf4>
   12678:	ldr	r3, [pc, #2788]	; 13164 <main@@Base+0xbac>
   1267c:	ldr	r3, [r4, r3]
   12680:	ldr	r0, [r3]
   12684:	ldr	r3, [pc, #2780]	; 13168 <main@@Base+0xbb0>
   12688:	add	r3, pc, r3
   1268c:	str	r3, [sp]
   12690:	mov	r3, #42	; 0x2a
   12694:	ldr	r2, [pc, #2768]	; 1316c <main@@Base+0xbb4>
   12698:	add	r2, pc, r2
   1269c:	ldr	r1, [pc, #2764]	; 13170 <main@@Base+0xbb8>
   126a0:	add	r1, pc, r1
   126a4:	bl	11314 <fprintf@plt>
   126a8:	bl	11368 <abort@plt>
   126ac:	mov	r0, #1
   126b0:	bl	13430 <mmk_matcher_init@@Base>
   126b4:	bl	1129c <fn_vv@plt>
   126b8:	bl	1349c <mmk_matcher_term@@Base>
   126bc:	sub	r3, fp, #424	; 0x1a8
   126c0:	mov	r2, #0
   126c4:	str	r2, [r3]
   126c8:	str	r2, [r3, #4]
   126cc:	str	r2, [r3, #8]
   126d0:	str	r2, [r3, #12]
   126d4:	str	r2, [r3, #16]
   126d8:	str	r2, [r3, #20]
   126dc:	mov	r3, #1
   126e0:	str	r3, [fp, #-424]	; 0xfffffe58
   126e4:	mov	r3, #1
   126e8:	str	r3, [fp, #-412]	; 0xfffffe64
   126ec:	sub	r3, fp, #424	; 0x1a8
   126f0:	mov	r0, r3
   126f4:	bl	14bf4 <mmk_verify_times@@Base>
   126f8:	mov	r3, r0
   126fc:	cmp	r3, #0
   12700:	bne	12738 <main@@Base+0x180>
   12704:	ldr	r3, [pc, #2648]	; 13164 <main@@Base+0xbac>
   12708:	ldr	r3, [r4, r3]
   1270c:	ldr	r0, [r3]
   12710:	ldr	r3, [pc, #2652]	; 13174 <main@@Base+0xbbc>
   12714:	add	r3, pc, r3
   12718:	str	r3, [sp]
   1271c:	mov	r3, #43	; 0x2b
   12720:	ldr	r2, [pc, #2640]	; 13178 <main@@Base+0xbc0>
   12724:	add	r2, pc, r2
   12728:	ldr	r1, [pc, #2636]	; 1317c <main@@Base+0xbc4>
   1272c:	add	r1, pc, r1
   12730:	bl	11314 <fprintf@plt>
   12734:	bl	11368 <abort@plt>
   12738:	mov	r0, #1
   1273c:	bl	13430 <mmk_matcher_init@@Base>
   12740:	bl	1129c <fn_vv@plt>
   12744:	bl	1349c <mmk_matcher_term@@Base>
   12748:	sub	r3, fp, #400	; 0x190
   1274c:	mov	r2, #0
   12750:	str	r2, [r3]
   12754:	str	r2, [r3, #4]
   12758:	str	r2, [r3, #8]
   1275c:	str	r2, [r3, #12]
   12760:	str	r2, [r3, #16]
   12764:	str	r2, [r3, #20]
   12768:	mov	r3, #1
   1276c:	str	r3, [fp, #-400]	; 0xfffffe70
   12770:	mov	r3, #1
   12774:	str	r3, [fp, #-384]	; 0xfffffe80
   12778:	sub	r3, fp, #400	; 0x190
   1277c:	mov	r0, r3
   12780:	bl	14bf4 <mmk_verify_times@@Base>
   12784:	mov	r3, r0
   12788:	cmp	r3, #0
   1278c:	beq	127c4 <main@@Base+0x20c>
   12790:	ldr	r3, [pc, #2508]	; 13164 <main@@Base+0xbac>
   12794:	ldr	r3, [r4, r3]
   12798:	ldr	r0, [r3]
   1279c:	ldr	r3, [pc, #2524]	; 13180 <main@@Base+0xbc8>
   127a0:	add	r3, pc, r3
   127a4:	str	r3, [sp]
   127a8:	mov	r3, #45	; 0x2d
   127ac:	ldr	r2, [pc, #2512]	; 13184 <main@@Base+0xbcc>
   127b0:	add	r2, pc, r2
   127b4:	ldr	r1, [pc, #2508]	; 13188 <main@@Base+0xbd0>
   127b8:	add	r1, pc, r1
   127bc:	bl	11314 <fprintf@plt>
   127c0:	bl	11368 <abort@plt>
   127c4:	mov	r0, #1
   127c8:	bl	13430 <mmk_matcher_init@@Base>
   127cc:	bl	1129c <fn_vv@plt>
   127d0:	bl	1349c <mmk_matcher_term@@Base>
   127d4:	sub	r3, fp, #376	; 0x178
   127d8:	mov	r2, #0
   127dc:	str	r2, [r3]
   127e0:	str	r2, [r3, #4]
   127e4:	str	r2, [r3, #8]
   127e8:	str	r2, [r3, #12]
   127ec:	str	r2, [r3, #16]
   127f0:	str	r2, [r3, #20]
   127f4:	mov	r3, #1
   127f8:	str	r3, [fp, #-376]	; 0xfffffe88
   127fc:	mov	r3, #1
   12800:	str	r3, [fp, #-368]	; 0xfffffe90
   12804:	sub	r3, fp, #376	; 0x178
   12808:	mov	r0, r3
   1280c:	bl	14bf4 <mmk_verify_times@@Base>
   12810:	mov	r3, r0
   12814:	cmp	r3, #0
   12818:	beq	12850 <main@@Base+0x298>
   1281c:	ldr	r3, [pc, #2368]	; 13164 <main@@Base+0xbac>
   12820:	ldr	r3, [r4, r3]
   12824:	ldr	r0, [r3]
   12828:	ldr	r3, [pc, #2396]	; 1318c <main@@Base+0xbd4>
   1282c:	add	r3, pc, r3
   12830:	str	r3, [sp]
   12834:	mov	r3, #46	; 0x2e
   12838:	ldr	r2, [pc, #2384]	; 13190 <main@@Base+0xbd8>
   1283c:	add	r2, pc, r2
   12840:	ldr	r1, [pc, #2380]	; 13194 <main@@Base+0xbdc>
   12844:	add	r1, pc, r1
   12848:	bl	11314 <fprintf@plt>
   1284c:	bl	11368 <abort@plt>
   12850:	mov	r0, #1
   12854:	bl	13430 <mmk_matcher_init@@Base>
   12858:	bl	1129c <fn_vv@plt>
   1285c:	bl	1349c <mmk_matcher_term@@Base>
   12860:	sub	r3, fp, #352	; 0x160
   12864:	mov	r2, #0
   12868:	str	r2, [r3]
   1286c:	str	r2, [r3, #4]
   12870:	str	r2, [r3, #8]
   12874:	str	r2, [r3, #12]
   12878:	str	r2, [r3, #16]
   1287c:	str	r2, [r3, #20]
   12880:	mov	r3, #1
   12884:	str	r3, [fp, #-352]	; 0xfffffea0
   12888:	mov	r3, #1
   1288c:	str	r3, [fp, #-344]	; 0xfffffea8
   12890:	mov	r3, #1
   12894:	str	r3, [fp, #-340]	; 0xfffffeac
   12898:	sub	r3, fp, #352	; 0x160
   1289c:	mov	r0, r3
   128a0:	bl	14bf4 <mmk_verify_times@@Base>
   128a4:	mov	r3, r0
   128a8:	cmp	r3, #0
   128ac:	beq	128e4 <main@@Base+0x32c>
   128b0:	ldr	r3, [pc, #2220]	; 13164 <main@@Base+0xbac>
   128b4:	ldr	r3, [r4, r3]
   128b8:	ldr	r0, [r3]
   128bc:	ldr	r3, [pc, #2260]	; 13198 <main@@Base+0xbe0>
   128c0:	add	r3, pc, r3
   128c4:	str	r3, [sp]
   128c8:	mov	r3, #47	; 0x2f
   128cc:	ldr	r2, [pc, #2248]	; 1319c <main@@Base+0xbe4>
   128d0:	add	r2, pc, r2
   128d4:	ldr	r1, [pc, #2244]	; 131a0 <main@@Base+0xbe8>
   128d8:	add	r1, pc, r1
   128dc:	bl	11314 <fprintf@plt>
   128e0:	bl	11368 <abort@plt>
   128e4:	bl	1129c <fn_vv@plt>
   128e8:	ldr	r3, [pc, #2228]	; 131a4 <main@@Base+0xbec>
   128ec:	add	r3, pc, r3
   128f0:	ldr	r3, [r3]
   128f4:	cmp	r3, #0
   128f8:	bne	12930 <main@@Base+0x378>
   128fc:	ldr	r3, [pc, #2144]	; 13164 <main@@Base+0xbac>
   12900:	ldr	r3, [r4, r3]
   12904:	ldr	r0, [r3]
   12908:	ldr	r3, [pc, #2200]	; 131a8 <main@@Base+0xbf0>
   1290c:	add	r3, pc, r3
   12910:	str	r3, [sp]
   12914:	mov	r3, #50	; 0x32
   12918:	ldr	r2, [pc, #2188]	; 131ac <main@@Base+0xbf4>
   1291c:	add	r2, pc, r2
   12920:	ldr	r1, [pc, #2184]	; 131b0 <main@@Base+0xbf8>
   12924:	add	r1, pc, r1
   12928:	bl	11314 <fprintf@plt>
   1292c:	bl	11368 <abort@plt>
   12930:	mov	r0, #1
   12934:	bl	13430 <mmk_matcher_init@@Base>
   12938:	bl	1129c <fn_vv@plt>
   1293c:	bl	1349c <mmk_matcher_term@@Base>
   12940:	sub	r3, fp, #328	; 0x148
   12944:	mov	r2, #0
   12948:	str	r2, [r3]
   1294c:	str	r2, [r3, #4]
   12950:	str	r2, [r3, #8]
   12954:	str	r2, [r3, #12]
   12958:	str	r2, [r3, #16]
   1295c:	str	r2, [r3, #20]
   12960:	mov	r3, #1
   12964:	str	r3, [fp, #-328]	; 0xfffffeb8
   12968:	mov	r3, #1
   1296c:	str	r3, [fp, #-312]	; 0xfffffec8
   12970:	sub	r3, fp, #328	; 0x148
   12974:	mov	r0, r3
   12978:	bl	14bf4 <mmk_verify_times@@Base>
   1297c:	mov	r3, r0
   12980:	cmp	r3, #0
   12984:	bne	129bc <main@@Base+0x404>
   12988:	ldr	r3, [pc, #2004]	; 13164 <main@@Base+0xbac>
   1298c:	ldr	r3, [r4, r3]
   12990:	ldr	r0, [r3]
   12994:	ldr	r3, [pc, #2072]	; 131b4 <main@@Base+0xbfc>
   12998:	add	r3, pc, r3
   1299c:	str	r3, [sp]
   129a0:	mov	r3, #51	; 0x33
   129a4:	ldr	r2, [pc, #2060]	; 131b8 <main@@Base+0xc00>
   129a8:	add	r2, pc, r2
   129ac:	ldr	r1, [pc, #2056]	; 131bc <main@@Base+0xc04>
   129b0:	add	r1, pc, r1
   129b4:	bl	11314 <fprintf@plt>
   129b8:	bl	11368 <abort@plt>
   129bc:	mov	r0, #1
   129c0:	bl	13430 <mmk_matcher_init@@Base>
   129c4:	bl	1129c <fn_vv@plt>
   129c8:	bl	1349c <mmk_matcher_term@@Base>
   129cc:	sub	r3, fp, #304	; 0x130
   129d0:	mov	r2, #0
   129d4:	str	r2, [r3]
   129d8:	str	r2, [r3, #4]
   129dc:	str	r2, [r3, #8]
   129e0:	str	r2, [r3, #12]
   129e4:	str	r2, [r3, #16]
   129e8:	str	r2, [r3, #20]
   129ec:	mov	r3, #1
   129f0:	str	r3, [fp, #-304]	; 0xfffffed0
   129f4:	mov	r3, #1
   129f8:	str	r3, [fp, #-296]	; 0xfffffed8
   129fc:	sub	r3, fp, #304	; 0x130
   12a00:	mov	r0, r3
   12a04:	bl	14bf4 <mmk_verify_times@@Base>
   12a08:	mov	r3, r0
   12a0c:	cmp	r3, #0
   12a10:	bne	12a48 <main@@Base+0x490>
   12a14:	ldr	r3, [pc, #1864]	; 13164 <main@@Base+0xbac>
   12a18:	ldr	r3, [r4, r3]
   12a1c:	ldr	r0, [r3]
   12a20:	ldr	r3, [pc, #1944]	; 131c0 <main@@Base+0xc08>
   12a24:	add	r3, pc, r3
   12a28:	str	r3, [sp]
   12a2c:	mov	r3, #52	; 0x34
   12a30:	ldr	r2, [pc, #1932]	; 131c4 <main@@Base+0xc0c>
   12a34:	add	r2, pc, r2
   12a38:	ldr	r1, [pc, #1928]	; 131c8 <main@@Base+0xc10>
   12a3c:	add	r1, pc, r1
   12a40:	bl	11314 <fprintf@plt>
   12a44:	bl	11368 <abort@plt>
   12a48:	mov	r0, #1
   12a4c:	bl	13430 <mmk_matcher_init@@Base>
   12a50:	bl	1129c <fn_vv@plt>
   12a54:	bl	1349c <mmk_matcher_term@@Base>
   12a58:	sub	r3, fp, #280	; 0x118
   12a5c:	mov	r2, #0
   12a60:	str	r2, [r3]
   12a64:	str	r2, [r3, #4]
   12a68:	str	r2, [r3, #8]
   12a6c:	str	r2, [r3, #12]
   12a70:	str	r2, [r3, #16]
   12a74:	str	r2, [r3, #20]
   12a78:	mov	r3, #1
   12a7c:	str	r3, [fp, #-280]	; 0xfffffee8
   12a80:	mov	r3, #1
   12a84:	str	r3, [fp, #-268]	; 0xfffffef4
   12a88:	sub	r3, fp, #280	; 0x118
   12a8c:	mov	r0, r3
   12a90:	bl	14bf4 <mmk_verify_times@@Base>
   12a94:	mov	r3, r0
   12a98:	cmp	r3, #0
   12a9c:	bne	12ad4 <main@@Base+0x51c>
   12aa0:	ldr	r3, [pc, #1724]	; 13164 <main@@Base+0xbac>
   12aa4:	ldr	r3, [r4, r3]
   12aa8:	ldr	r0, [r3]
   12aac:	ldr	r3, [pc, #1816]	; 131cc <main@@Base+0xc14>
   12ab0:	add	r3, pc, r3
   12ab4:	str	r3, [sp]
   12ab8:	mov	r3, #53	; 0x35
   12abc:	ldr	r2, [pc, #1804]	; 131d0 <main@@Base+0xc18>
   12ac0:	add	r2, pc, r2
   12ac4:	ldr	r1, [pc, #1800]	; 131d4 <main@@Base+0xc1c>
   12ac8:	add	r1, pc, r1
   12acc:	bl	11314 <fprintf@plt>
   12ad0:	bl	11368 <abort@plt>
   12ad4:	mov	r0, #1
   12ad8:	bl	13430 <mmk_matcher_init@@Base>
   12adc:	bl	1129c <fn_vv@plt>
   12ae0:	bl	1349c <mmk_matcher_term@@Base>
   12ae4:	sub	r3, fp, #256	; 0x100
   12ae8:	mov	r2, #0
   12aec:	str	r2, [r3]
   12af0:	str	r2, [r3, #4]
   12af4:	str	r2, [r3, #8]
   12af8:	str	r2, [r3, #12]
   12afc:	str	r2, [r3, #16]
   12b00:	str	r2, [r3, #20]
   12b04:	mov	r3, #1
   12b08:	str	r3, [fp, #-256]	; 0xffffff00
   12b0c:	mov	r3, #1
   12b10:	str	r3, [fp, #-248]	; 0xffffff08
   12b14:	mov	r3, #1
   12b18:	str	r3, [fp, #-244]	; 0xffffff0c
   12b1c:	sub	r3, fp, #256	; 0x100
   12b20:	mov	r0, r3
   12b24:	bl	14bf4 <mmk_verify_times@@Base>
   12b28:	mov	r3, r0
   12b2c:	cmp	r3, #0
   12b30:	bne	12b68 <main@@Base+0x5b0>
   12b34:	ldr	r3, [pc, #1576]	; 13164 <main@@Base+0xbac>
   12b38:	ldr	r3, [r4, r3]
   12b3c:	ldr	r0, [r3]
   12b40:	ldr	r3, [pc, #1680]	; 131d8 <main@@Base+0xc20>
   12b44:	add	r3, pc, r3
   12b48:	str	r3, [sp]
   12b4c:	mov	r3, #54	; 0x36
   12b50:	ldr	r2, [pc, #1668]	; 131dc <main@@Base+0xc24>
   12b54:	add	r2, pc, r2
   12b58:	ldr	r1, [pc, #1664]	; 131e0 <main@@Base+0xc28>
   12b5c:	add	r1, pc, r1
   12b60:	bl	11314 <fprintf@plt>
   12b64:	bl	11368 <abort@plt>
   12b68:	mov	r0, #1
   12b6c:	bl	13430 <mmk_matcher_init@@Base>
   12b70:	bl	1129c <fn_vv@plt>
   12b74:	bl	1349c <mmk_matcher_term@@Base>
   12b78:	sub	r3, fp, #232	; 0xe8
   12b7c:	mov	r2, #0
   12b80:	str	r2, [r3]
   12b84:	str	r2, [r3, #4]
   12b88:	str	r2, [r3, #8]
   12b8c:	str	r2, [r3, #12]
   12b90:	str	r2, [r3, #16]
   12b94:	str	r2, [r3, #20]
   12b98:	mov	r3, #1
   12b9c:	str	r3, [fp, #-232]	; 0xffffff18
   12ba0:	mov	r3, #1
   12ba4:	str	r3, [fp, #-228]	; 0xffffff1c
   12ba8:	sub	r3, fp, #232	; 0xe8
   12bac:	mov	r0, r3
   12bb0:	bl	14bf4 <mmk_verify_times@@Base>
   12bb4:	mov	r3, r0
   12bb8:	cmp	r3, #0
   12bbc:	beq	12bf4 <main@@Base+0x63c>
   12bc0:	ldr	r3, [pc, #1436]	; 13164 <main@@Base+0xbac>
   12bc4:	ldr	r3, [r4, r3]
   12bc8:	ldr	r0, [r3]
   12bcc:	ldr	r3, [pc, #1552]	; 131e4 <main@@Base+0xc2c>
   12bd0:	add	r3, pc, r3
   12bd4:	str	r3, [sp]
   12bd8:	mov	r3, #55	; 0x37
   12bdc:	ldr	r2, [pc, #1540]	; 131e8 <main@@Base+0xc30>
   12be0:	add	r2, pc, r2
   12be4:	ldr	r1, [pc, #1536]	; 131ec <main@@Base+0xc34>
   12be8:	add	r1, pc, r1
   12bec:	bl	11314 <fprintf@plt>
   12bf0:	bl	11368 <abort@plt>
   12bf4:	mov	r0, #1
   12bf8:	bl	13430 <mmk_matcher_init@@Base>
   12bfc:	bl	1129c <fn_vv@plt>
   12c00:	bl	1349c <mmk_matcher_term@@Base>
   12c04:	sub	r3, fp, #208	; 0xd0
   12c08:	mov	r2, #0
   12c0c:	str	r2, [r3]
   12c10:	str	r2, [r3, #4]
   12c14:	str	r2, [r3, #8]
   12c18:	str	r2, [r3, #12]
   12c1c:	str	r2, [r3, #16]
   12c20:	str	r2, [r3, #20]
   12c24:	mov	r3, #1
   12c28:	str	r3, [fp, #-208]	; 0xffffff30
   12c2c:	mov	r3, #2
   12c30:	str	r3, [fp, #-192]	; 0xffffff40
   12c34:	sub	r3, fp, #208	; 0xd0
   12c38:	mov	r0, r3
   12c3c:	bl	14bf4 <mmk_verify_times@@Base>
   12c40:	mov	r3, r0
   12c44:	cmp	r3, #0
   12c48:	beq	12c80 <main@@Base+0x6c8>
   12c4c:	ldr	r3, [pc, #1296]	; 13164 <main@@Base+0xbac>
   12c50:	ldr	r3, [r4, r3]
   12c54:	ldr	r0, [r3]
   12c58:	ldr	r3, [pc, #1424]	; 131f0 <main@@Base+0xc38>
   12c5c:	add	r3, pc, r3
   12c60:	str	r3, [sp]
   12c64:	mov	r3, #56	; 0x38
   12c68:	ldr	r2, [pc, #1412]	; 131f4 <main@@Base+0xc3c>
   12c6c:	add	r2, pc, r2
   12c70:	ldr	r1, [pc, #1408]	; 131f8 <main@@Base+0xc40>
   12c74:	add	r1, pc, r1
   12c78:	bl	11314 <fprintf@plt>
   12c7c:	bl	11368 <abort@plt>
   12c80:	mov	r0, #1
   12c84:	bl	13430 <mmk_matcher_init@@Base>
   12c88:	bl	1129c <fn_vv@plt>
   12c8c:	bl	1349c <mmk_matcher_term@@Base>
   12c90:	sub	r3, fp, #184	; 0xb8
   12c94:	mov	r2, #0
   12c98:	str	r2, [r3]
   12c9c:	str	r2, [r3, #4]
   12ca0:	str	r2, [r3, #8]
   12ca4:	str	r2, [r3, #12]
   12ca8:	str	r2, [r3, #16]
   12cac:	str	r2, [r3, #20]
   12cb0:	mov	r3, #1
   12cb4:	str	r3, [fp, #-184]	; 0xffffff48
   12cb8:	mov	r3, #2
   12cbc:	str	r3, [fp, #-176]	; 0xffffff50
   12cc0:	sub	r3, fp, #184	; 0xb8
   12cc4:	mov	r0, r3
   12cc8:	bl	14bf4 <mmk_verify_times@@Base>
   12ccc:	mov	r3, r0
   12cd0:	cmp	r3, #0
   12cd4:	beq	12d0c <main@@Base+0x754>
   12cd8:	ldr	r3, [pc, #1156]	; 13164 <main@@Base+0xbac>
   12cdc:	ldr	r3, [r4, r3]
   12ce0:	ldr	r0, [r3]
   12ce4:	ldr	r3, [pc, #1296]	; 131fc <main@@Base+0xc44>
   12ce8:	add	r3, pc, r3
   12cec:	str	r3, [sp]
   12cf0:	mov	r3, #57	; 0x39
   12cf4:	ldr	r2, [pc, #1284]	; 13200 <main@@Base+0xc48>
   12cf8:	add	r2, pc, r2
   12cfc:	ldr	r1, [pc, #1280]	; 13204 <main@@Base+0xc4c>
   12d00:	add	r1, pc, r1
   12d04:	bl	11314 <fprintf@plt>
   12d08:	bl	11368 <abort@plt>
   12d0c:	ldr	r3, [pc, #1268]	; 13208 <main@@Base+0xc50>
   12d10:	ldr	r3, [r4, r3]
   12d14:	mov	r0, r3
   12d18:	bl	133e4 <mmk_reset@@Base>
   12d1c:	ldr	r3, [pc, #1256]	; 1320c <main@@Base+0xc54>
   12d20:	str	r3, [fp, #-16]
   12d24:	ldr	r3, [pc, #1252]	; 13210 <main@@Base+0xc58>
   12d28:	add	r3, pc, r3
   12d2c:	mov	r0, r3
   12d30:	bl	119a0 <_start@@Base+0x62c>
   12d34:	mov	r0, #0
   12d38:	bl	13430 <mmk_matcher_init@@Base>
   12d3c:	sub	r3, fp, #160	; 0xa0
   12d40:	mov	r2, #0
   12d44:	str	r2, [r3]
   12d48:	str	r2, [r3, #4]
   12d4c:	str	r2, [r3, #8]
   12d50:	str	r2, [r3, #12]
   12d54:	str	r2, [r3, #16]
   12d58:	ldr	r3, [fp, #-16]
   12d5c:	str	r3, [fp, #-156]	; 0xffffff64
   12d60:	mov	r3, #1
   12d64:	str	r3, [fp, #-140]	; 0xffffff74
   12d68:	sub	r3, fp, #140	; 0x8c
   12d6c:	str	r3, [fp, #-152]	; 0xffffff68
   12d70:	sub	r3, fp, #160	; 0xa0
   12d74:	mov	r0, r3
   12d78:	bl	156b0 <mmk_when_init@@Base>
   12d7c:	mov	r0, #1
   12d80:	bl	112b4 <fn_ii@plt>
   12d84:	bl	1349c <mmk_matcher_term@@Base>
   12d88:	mov	r0, #1
   12d8c:	bl	112b4 <fn_ii@plt>
   12d90:	mov	r3, r0
   12d94:	cmp	r3, #1
   12d98:	bne	12db4 <main@@Base+0x7fc>
   12d9c:	bl	11320 <__errno_location@plt>
   12da0:	mov	r3, r0
   12da4:	ldr	r2, [r3]
   12da8:	ldr	r3, [fp, #-16]
   12dac:	cmp	r2, r3
   12db0:	beq	12de8 <main@@Base+0x830>
   12db4:	ldr	r3, [pc, #936]	; 13164 <main@@Base+0xbac>
   12db8:	ldr	r3, [r4, r3]
   12dbc:	ldr	r0, [r3]
   12dc0:	ldr	r3, [pc, #1100]	; 13214 <main@@Base+0xc5c>
   12dc4:	add	r3, pc, r3
   12dc8:	str	r3, [sp]
   12dcc:	mov	r3, #64	; 0x40
   12dd0:	ldr	r2, [pc, #1088]	; 13218 <main@@Base+0xc60>
   12dd4:	add	r2, pc, r2
   12dd8:	ldr	r1, [pc, #1084]	; 1321c <main@@Base+0xc64>
   12ddc:	add	r1, pc, r1
   12de0:	bl	11314 <fprintf@plt>
   12de4:	bl	11368 <abort@plt>
   12de8:	mov	r0, #42	; 0x2a
   12dec:	bl	112b4 <fn_ii@plt>
   12df0:	mov	r3, r0
   12df4:	cmp	r3, #0
   12df8:	beq	12e30 <main@@Base+0x878>
   12dfc:	ldr	r3, [pc, #864]	; 13164 <main@@Base+0xbac>
   12e00:	ldr	r3, [r4, r3]
   12e04:	ldr	r0, [r3]
   12e08:	ldr	r3, [pc, #1040]	; 13220 <main@@Base+0xc68>
   12e0c:	add	r3, pc, r3
   12e10:	str	r3, [sp]
   12e14:	mov	r3, #65	; 0x41
   12e18:	ldr	r2, [pc, #1028]	; 13224 <main@@Base+0xc6c>
   12e1c:	add	r2, pc, r2
   12e20:	ldr	r1, [pc, #1024]	; 13228 <main@@Base+0xc70>
   12e24:	add	r1, pc, r1
   12e28:	bl	11314 <fprintf@plt>
   12e2c:	bl	11368 <abort@plt>
   12e30:	mov	r0, #1
   12e34:	bl	13430 <mmk_matcher_init@@Base>
   12e38:	mov	r1, #0
   12e3c:	mov	r0, #0
   12e40:	bl	134f8 <mmk_matcher_add@@Base>
   12e44:	mov	r0, #0
   12e48:	bl	112b4 <fn_ii@plt>
   12e4c:	bl	1349c <mmk_matcher_term@@Base>
   12e50:	sub	r3, fp, #136	; 0x88
   12e54:	mov	r2, #0
   12e58:	str	r2, [r3]
   12e5c:	str	r2, [r3, #4]
   12e60:	str	r2, [r3, #8]
   12e64:	str	r2, [r3, #12]
   12e68:	str	r2, [r3, #16]
   12e6c:	str	r2, [r3, #20]
   12e70:	mov	r3, #1
   12e74:	str	r3, [fp, #-136]	; 0xffffff78
   12e78:	mov	r3, #2
   12e7c:	str	r3, [fp, #-120]	; 0xffffff88
   12e80:	sub	r3, fp, #136	; 0x88
   12e84:	mov	r0, r3
   12e88:	bl	14bf4 <mmk_verify_times@@Base>
   12e8c:	mov	r3, r0
   12e90:	cmp	r3, #0
   12e94:	bne	12ecc <main@@Base+0x914>
   12e98:	ldr	r3, [pc, #708]	; 13164 <main@@Base+0xbac>
   12e9c:	ldr	r3, [r4, r3]
   12ea0:	ldr	r0, [r3]
   12ea4:	ldr	r3, [pc, #896]	; 1322c <main@@Base+0xc74>
   12ea8:	add	r3, pc, r3
   12eac:	str	r3, [sp]
   12eb0:	mov	r3, #67	; 0x43
   12eb4:	ldr	r2, [pc, #884]	; 13230 <main@@Base+0xc78>
   12eb8:	add	r2, pc, r2
   12ebc:	ldr	r1, [pc, #880]	; 13234 <main@@Base+0xc7c>
   12ec0:	add	r1, pc, r1
   12ec4:	bl	11314 <fprintf@plt>
   12ec8:	bl	11368 <abort@plt>
   12ecc:	mov	r0, #1
   12ed0:	bl	13430 <mmk_matcher_init@@Base>
   12ed4:	mov	r0, #1
   12ed8:	bl	112b4 <fn_ii@plt>
   12edc:	bl	1349c <mmk_matcher_term@@Base>
   12ee0:	sub	r3, fp, #112	; 0x70
   12ee4:	mov	r2, #0
   12ee8:	str	r2, [r3]
   12eec:	str	r2, [r3, #4]
   12ef0:	str	r2, [r3, #8]
   12ef4:	str	r2, [r3, #12]
   12ef8:	str	r2, [r3, #16]
   12efc:	str	r2, [r3, #20]
   12f00:	mov	r3, #1
   12f04:	str	r3, [fp, #-112]	; 0xffffff90
   12f08:	mov	r3, #1
   12f0c:	str	r3, [fp, #-96]	; 0xffffffa0
   12f10:	sub	r3, fp, #112	; 0x70
   12f14:	mov	r0, r3
   12f18:	bl	14bf4 <mmk_verify_times@@Base>
   12f1c:	mov	r3, r0
   12f20:	cmp	r3, #0
   12f24:	bne	12f5c <main@@Base+0x9a4>
   12f28:	ldr	r3, [pc, #564]	; 13164 <main@@Base+0xbac>
   12f2c:	ldr	r3, [r4, r3]
   12f30:	ldr	r0, [r3]
   12f34:	ldr	r3, [pc, #764]	; 13238 <main@@Base+0xc80>
   12f38:	add	r3, pc, r3
   12f3c:	str	r3, [sp]
   12f40:	mov	r3, #68	; 0x44
   12f44:	ldr	r2, [pc, #752]	; 1323c <main@@Base+0xc84>
   12f48:	add	r2, pc, r2
   12f4c:	ldr	r1, [pc, #748]	; 13240 <main@@Base+0xc88>
   12f50:	add	r1, pc, r1
   12f54:	bl	11314 <fprintf@plt>
   12f58:	bl	11368 <abort@plt>
   12f5c:	mov	r0, #1
   12f60:	bl	13430 <mmk_matcher_init@@Base>
   12f64:	mov	r0, #42	; 0x2a
   12f68:	bl	112b4 <fn_ii@plt>
   12f6c:	bl	1349c <mmk_matcher_term@@Base>
   12f70:	sub	r3, fp, #88	; 0x58
   12f74:	mov	r2, #0
   12f78:	str	r2, [r3]
   12f7c:	str	r2, [r3, #4]
   12f80:	str	r2, [r3, #8]
   12f84:	str	r2, [r3, #12]
   12f88:	str	r2, [r3, #16]
   12f8c:	str	r2, [r3, #20]
   12f90:	mov	r3, #1
   12f94:	str	r3, [fp, #-88]	; 0xffffffa8
   12f98:	mov	r3, #1
   12f9c:	str	r3, [fp, #-72]	; 0xffffffb8
   12fa0:	sub	r3, fp, #88	; 0x58
   12fa4:	mov	r0, r3
   12fa8:	bl	14bf4 <mmk_verify_times@@Base>
   12fac:	mov	r3, r0
   12fb0:	cmp	r3, #0
   12fb4:	bne	12fec <main@@Base+0xa34>
   12fb8:	ldr	r3, [pc, #420]	; 13164 <main@@Base+0xbac>
   12fbc:	ldr	r3, [r4, r3]
   12fc0:	ldr	r0, [r3]
   12fc4:	ldr	r3, [pc, #632]	; 13244 <main@@Base+0xc8c>
   12fc8:	add	r3, pc, r3
   12fcc:	str	r3, [sp]
   12fd0:	mov	r3, #69	; 0x45
   12fd4:	ldr	r2, [pc, #620]	; 13248 <main@@Base+0xc90>
   12fd8:	add	r2, pc, r2
   12fdc:	ldr	r1, [pc, #616]	; 1324c <main@@Base+0xc94>
   12fe0:	add	r1, pc, r1
   12fe4:	bl	11314 <fprintf@plt>
   12fe8:	bl	11368 <abort@plt>
   12fec:	mov	r0, #1
   12ff0:	bl	13430 <mmk_matcher_init@@Base>
   12ff4:	mov	r0, #12
   12ff8:	bl	112b4 <fn_ii@plt>
   12ffc:	bl	1349c <mmk_matcher_term@@Base>
   13000:	sub	r3, fp, #64	; 0x40
   13004:	mov	r2, #0
   13008:	str	r2, [r3]
   1300c:	str	r2, [r3, #4]
   13010:	str	r2, [r3, #8]
   13014:	str	r2, [r3, #12]
   13018:	str	r2, [r3, #16]
   1301c:	str	r2, [r3, #20]
   13020:	mov	r3, #1
   13024:	str	r3, [fp, #-64]	; 0xffffffc0
   13028:	mov	r3, #1
   1302c:	str	r3, [fp, #-60]	; 0xffffffc4
   13030:	sub	r3, fp, #64	; 0x40
   13034:	mov	r0, r3
   13038:	bl	14bf4 <mmk_verify_times@@Base>
   1303c:	mov	r3, r0
   13040:	cmp	r3, #0
   13044:	bne	1307c <main@@Base+0xac4>
   13048:	ldr	r3, [pc, #276]	; 13164 <main@@Base+0xbac>
   1304c:	ldr	r3, [r4, r3]
   13050:	ldr	r0, [r3]
   13054:	ldr	r3, [pc, #500]	; 13250 <main@@Base+0xc98>
   13058:	add	r3, pc, r3
   1305c:	str	r3, [sp]
   13060:	mov	r3, #70	; 0x46
   13064:	ldr	r2, [pc, #488]	; 13254 <main@@Base+0xc9c>
   13068:	add	r2, pc, r2
   1306c:	ldr	r1, [pc, #484]	; 13258 <main@@Base+0xca0>
   13070:	add	r1, pc, r1
   13074:	bl	11314 <fprintf@plt>
   13078:	bl	11368 <abort@plt>
   1307c:	ldr	r3, [pc, #472]	; 1325c <main@@Base+0xca4>
   13080:	ldr	r3, [r4, r3]
   13084:	mov	r0, r3
   13088:	bl	133e4 <mmk_reset@@Base>
   1308c:	ldr	r3, [pc, #460]	; 13260 <main@@Base+0xca8>
   13090:	add	r3, pc, r3
   13094:	mov	r0, r3
   13098:	bl	12554 <_start@@Base+0x11e0>
   1309c:	mov	r0, #0
   130a0:	bl	13430 <mmk_matcher_init@@Base>
   130a4:	sub	r3, fp, #40	; 0x28
   130a8:	mov	r2, #0
   130ac:	str	r2, [r3]
   130b0:	str	r2, [r3, #4]
   130b4:	str	r2, [r3, #8]
   130b8:	str	r2, [r3, #12]
   130bc:	str	r2, [r3, #16]
   130c0:	mov	r3, #1
   130c4:	str	r3, [fp, #-20]	; 0xffffffec
   130c8:	sub	r3, fp, #20
   130cc:	str	r3, [fp, #-32]	; 0xffffffe0
   130d0:	sub	r3, fp, #40	; 0x28
   130d4:	mov	r0, r3
   130d8:	bl	156b0 <mmk_when_init@@Base>
   130dc:	mov	r1, #42	; 0x2a
   130e0:	mov	r0, #1
   130e4:	bl	112c0 <fn_ii_va@plt>
   130e8:	bl	1349c <mmk_matcher_term@@Base>
   130ec:	mov	r1, #42	; 0x2a
   130f0:	mov	r0, #1
   130f4:	bl	112c0 <fn_ii_va@plt>
   130f8:	mov	r3, r0
   130fc:	cmp	r3, #1
   13100:	beq	13138 <main@@Base+0xb80>
   13104:	ldr	r3, [pc, #88]	; 13164 <main@@Base+0xbac>
   13108:	ldr	r3, [r4, r3]
   1310c:	ldr	r0, [r3]
   13110:	ldr	r3, [pc, #332]	; 13264 <main@@Base+0xcac>
   13114:	add	r3, pc, r3
   13118:	str	r3, [sp]
   1311c:	mov	r3, #77	; 0x4d
   13120:	ldr	r2, [pc, #320]	; 13268 <main@@Base+0xcb0>
   13124:	add	r2, pc, r2
   13128:	ldr	r1, [pc, #316]	; 1326c <main@@Base+0xcb4>
   1312c:	add	r1, pc, r1
   13130:	bl	11314 <fprintf@plt>
   13134:	bl	11368 <abort@plt>
   13138:	ldr	r3, [pc, #304]	; 13270 <main@@Base+0xcb8>
   1313c:	ldr	r3, [r4, r3]
   13140:	mov	r0, r3
   13144:	bl	133e4 <mmk_reset@@Base>
   13148:	mov	r3, #0
   1314c:	mov	r0, r3
   13150:	sub	sp, fp, #8
   13154:	pop	{r4, fp, pc}
   13158:	andeq	r4, r1, r0, lsr sl
   1315c:	andeq	r3, r0, r0, lsl #9
   13160:	muleq	r0, ip, r0
   13164:	andeq	r0, r0, r4, lsr #1
   13168:	andeq	r3, r0, r0, asr #8
   1316c:	andeq	r3, r0, r0, asr #7
   13170:	andeq	r3, r0, r8, lsl #8
   13174:	ldrdeq	r3, [r0], -r4
   13178:	andeq	r3, r0, r4, lsr r3
   1317c:	andeq	r3, r0, ip, ror r3
   13180:	andeq	r3, r0, ip, ror #6
   13184:	andeq	r3, r0, r8, lsr #5
   13188:	strdeq	r3, [r0], -r0
   1318c:	andeq	r3, r0, r4, lsl #6
   13190:	andeq	r3, r0, ip, lsl r2
   13194:	andeq	r3, r0, r4, ror #4
   13198:	muleq	r0, r4, r2
   1319c:	andeq	r3, r0, r8, lsl #3
   131a0:	ldrdeq	r3, [r0], -r0
   131a4:	strdeq	r4, [r1], -r0
   131a8:	andeq	r3, r0, ip, ror r2
   131ac:	andeq	r3, r0, ip, lsr r1
   131b0:	andeq	r3, r0, r4, lsl #3
   131b4:	strdeq	r3, [r0], -r8
   131b8:	strheq	r3, [r0], -r0
   131bc:	strdeq	r3, [r0], -r8
   131c0:	andeq	r3, r0, ip, lsl #3
   131c4:	andeq	r3, r0, r4, lsr #32
   131c8:	andeq	r3, r0, ip, rrx
   131cc:	andeq	r3, r0, r8, lsr r0
   131d0:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   131d4:	andeq	r2, r0, r0, ror #31
   131d8:	muleq	r0, r0, r0
   131dc:	andeq	r2, r0, r4, lsl #30
   131e0:	andeq	r2, r0, ip, asr #30
   131e4:	andeq	r3, r0, r8, lsr r0
   131e8:	andeq	r2, r0, r8, ror lr
   131ec:	andeq	r2, r0, r0, asr #29
   131f0:	ldrdeq	r2, [r0], -r0
   131f4:	andeq	r2, r0, ip, ror #27
   131f8:	andeq	r2, r0, r4, lsr lr
   131fc:	andeq	r2, r0, r8, ror #30
   13200:	andeq	r2, r0, r0, ror #26
   13204:	andeq	r2, r0, r8, lsr #27
   13208:	muleq	r0, r4, r0
   1320c:	mrc2	14, 7, pc, cr14, cr14, {7}
   13210:	andeq	r2, r0, ip, asr #30
   13214:			; <UNDEFINED> instruction: 0x00002eb8
   13218:	andeq	r2, r0, r4, lsl #25
   1321c:	andeq	r2, r0, ip, asr #25
   13220:	muleq	r0, r0, lr
   13224:	andeq	r2, r0, ip, lsr ip
   13228:	andeq	r2, r0, r4, lsl #25
   1322c:	andeq	r2, r0, r4, lsl #28
   13230:	andeq	r2, r0, r0, lsr #23
   13234:	andeq	r2, r0, r8, ror #23
   13238:	andeq	r2, r0, r0, lsr #27
   1323c:	andeq	r2, r0, r0, lsl fp
   13240:	andeq	r2, r0, r8, asr fp
   13244:	andeq	r2, r0, r4, lsr sp
   13248:	andeq	r2, r0, r0, lsl #21
   1324c:	andeq	r2, r0, r8, asr #21
   13250:	andeq	r2, r0, r8, asr #25
   13254:	strdeq	r2, [r0], -r0
   13258:	andeq	r2, r0, r8, lsr sl
   1325c:	andeq	r0, r0, r0, lsr #1
   13260:			; <UNDEFINED> instruction: 0x00002cb4
   13264:	andeq	r2, r0, ip, lsr ip
   13268:	andeq	r2, r0, r4, lsr r9
   1326c:	andeq	r2, r0, ip, ror r9
   13270:	andeq	r0, r0, r8, lsr #1

00013274 <mmk_init@@Base>:
   13274:	push	{r4, fp, lr}
   13278:	add	fp, sp, #8
   1327c:	sub	sp, sp, #12
   13280:	ldr	r4, [pc, #164]	; 1332c <mmk_init@@Base+0xb8>
   13284:	add	r4, pc, r4
   13288:	ldr	r3, [pc, #160]	; 13330 <mmk_init@@Base+0xbc>
   1328c:	add	r3, pc, r3
   13290:	ldr	r3, [r3]
   13294:	cmp	r3, #0
   13298:	bne	13320 <mmk_init@@Base+0xac>
   1329c:	bl	13d40 <plt_init_ctx@@Base>
   132a0:	mov	r2, r0
   132a4:	ldr	r3, [pc, #136]	; 13334 <mmk_init@@Base+0xc0>
   132a8:	add	r3, pc, r3
   132ac:	str	r2, [r3, #4]
   132b0:	ldr	r3, [pc, #128]	; 13338 <mmk_init@@Base+0xc4>
   132b4:	add	r3, pc, r3
   132b8:	ldr	r3, [r3, #4]
   132bc:	cmn	r3, #1
   132c0:	bne	132f8 <mmk_init@@Base+0x84>
   132c4:	ldr	r3, [pc, #112]	; 1333c <mmk_init@@Base+0xc8>
   132c8:	ldr	r3, [r4, r3]
   132cc:	ldr	r0, [r3]
   132d0:	ldr	r3, [pc, #104]	; 13340 <mmk_init@@Base+0xcc>
   132d4:	add	r3, pc, r3
   132d8:	str	r3, [sp]
   132dc:	mov	r3, #45	; 0x2d
   132e0:	ldr	r2, [pc, #92]	; 13344 <mmk_init@@Base+0xd0>
   132e4:	add	r2, pc, r2
   132e8:	ldr	r1, [pc, #88]	; 13348 <mmk_init@@Base+0xd4>
   132ec:	add	r1, pc, r1
   132f0:	bl	11314 <fprintf@plt>
   132f4:	bl	11368 <abort@plt>
   132f8:	ldr	r3, [pc, #76]	; 1334c <mmk_init@@Base+0xd8>
   132fc:	add	r3, pc, r3
   13300:	ldr	r3, [r3, #4]
   13304:	mov	r0, r3
   13308:	bl	154e0 <mmk_init_vital_functions@@Base>
   1330c:	ldr	r3, [pc, #60]	; 13350 <mmk_init@@Base+0xdc>
   13310:	add	r3, pc, r3
   13314:	mov	r2, #1
   13318:	str	r2, [r3]
   1331c:	b	13324 <mmk_init@@Base+0xb0>
   13320:	nop			; (mov r0, r0)
   13324:	sub	sp, fp, #8
   13328:	pop	{r4, fp, pc}
   1332c:	andeq	r3, r1, r4, ror sp
   13330:	andeq	r3, r1, ip, asr lr
   13334:	andeq	r3, r1, r0, asr #28
   13338:	andeq	r3, r1, r4, lsr lr
   1333c:	andeq	r0, r0, r4, lsr #1
   13340:	andeq	r2, r0, r4, lsl #22
   13344:	andeq	r2, r0, r4, lsl #21
   13348:	andeq	r2, r0, ip, asr #21
   1334c:	andeq	r3, r1, ip, ror #27
   13350:	ldrdeq	r3, [r1], -r8

00013354 <mmk_plt_ctx@@Base>:
   13354:	push	{fp, lr}
   13358:	add	fp, sp, #4
   1335c:	sub	sp, sp, #8
   13360:	ldr	r2, [pc, #96]	; 133c8 <mmk_plt_ctx@@Base+0x74>
   13364:	add	r2, pc, r2
   13368:	ldr	r3, [pc, #92]	; 133cc <mmk_plt_ctx@@Base+0x78>
   1336c:	add	r3, pc, r3
   13370:	ldr	r3, [r3]
   13374:	cmp	r3, #0
   13378:	bne	133b0 <mmk_plt_ctx@@Base+0x5c>
   1337c:	ldr	r3, [pc, #76]	; 133d0 <mmk_plt_ctx@@Base+0x7c>
   13380:	ldr	r3, [r2, r3]
   13384:	ldr	r0, [r3]
   13388:	ldr	r3, [pc, #68]	; 133d4 <mmk_plt_ctx@@Base+0x80>
   1338c:	add	r3, pc, r3
   13390:	str	r3, [sp]
   13394:	mov	r3, #54	; 0x36
   13398:	ldr	r2, [pc, #56]	; 133d8 <mmk_plt_ctx@@Base+0x84>
   1339c:	add	r2, pc, r2
   133a0:	ldr	r1, [pc, #52]	; 133dc <mmk_plt_ctx@@Base+0x88>
   133a4:	add	r1, pc, r1
   133a8:	bl	11314 <fprintf@plt>
   133ac:	bl	11368 <abort@plt>
   133b0:	ldr	r3, [pc, #40]	; 133e0 <mmk_plt_ctx@@Base+0x8c>
   133b4:	add	r3, pc, r3
   133b8:	ldr	r3, [r3, #4]
   133bc:	mov	r0, r3
   133c0:	sub	sp, fp, #4
   133c4:	pop	{fp, pc}
   133c8:	muleq	r1, r4, ip
   133cc:	andeq	r3, r1, ip, ror sp
   133d0:	andeq	r0, r0, r4, lsr #1
   133d4:	andeq	r2, r0, r4, ror #20
   133d8:	andeq	r2, r0, ip, asr #19
   133dc:	andeq	r2, r0, r4, lsl sl
   133e0:	andeq	r3, r1, r4, lsr sp

000133e4 <mmk_reset@@Base>:
   133e4:	push	{fp, lr}
   133e8:	add	fp, sp, #4
   133ec:	sub	sp, sp, #16
   133f0:	str	r0, [fp, #-16]
   133f4:	ldr	r3, [fp, #-16]
   133f8:	cmp	r3, #0
   133fc:	beq	13424 <mmk_reset@@Base+0x40>
   13400:	ldr	r0, [fp, #-16]
   13404:	bl	14918 <mmk_ask_ctx@@Base>
   13408:	str	r0, [fp, #-8]
   1340c:	ldr	r0, [fp, #-8]
   13410:	bl	145b0 <mmk_stub_context@@Base>
   13414:	str	r0, [fp, #-12]
   13418:	ldr	r0, [fp, #-12]
   1341c:	bl	13814 <mmk_mock_destroy_internal@@Base>
   13420:	b	13428 <mmk_reset@@Base+0x44>
   13424:	nop			; (mov r0, r0)
   13428:	sub	sp, fp, #4
   1342c:	pop	{fp, pc}

00013430 <mmk_matcher_init@@Base>:
   13430:	push	{fp, lr}
   13434:	add	fp, sp, #4
   13438:	sub	sp, sp, #16
   1343c:	str	r0, [fp, #-16]
   13440:	mov	r0, #12
   13444:	bl	15410 <mmk_malloc@@Base>
   13448:	str	r0, [fp, #-8]
   1344c:	ldr	r3, [fp, #-8]
   13450:	mov	r2, r3
   13454:	mov	r3, #0
   13458:	str	r3, [r2]
   1345c:	str	r3, [r2, #4]
   13460:	str	r3, [r2, #8]
   13464:	ldr	r3, [fp, #-8]
   13468:	ldr	r2, [fp, #-16]
   1346c:	str	r2, [r3]
   13470:	ldr	r3, [pc, #32]	; 13498 <mmk_matcher_init@@Base+0x68>
   13474:	add	r3, pc, r3
   13478:	mov	r0, r3
   1347c:	bl	11350 <__tls_get_addr@plt>
   13480:	mov	r2, r0
   13484:	ldr	r3, [fp, #-8]
   13488:	str	r3, [r2]
   1348c:	nop			; (mov r0, r0)
   13490:	sub	sp, fp, #4
   13494:	pop	{fp, pc}
   13498:	strdeq	r3, [r1], -r0

0001349c <mmk_matcher_term@@Base>:
   1349c:	push	{fp, lr}
   134a0:	add	fp, sp, #4
   134a4:	ldr	r3, [pc, #28]	; 134c8 <mmk_matcher_term@@Base+0x2c>
   134a8:	add	r3, pc, r3
   134ac:	mov	r0, r3
   134b0:	bl	11350 <__tls_get_addr@plt>
   134b4:	mov	r2, r0
   134b8:	mov	r3, #0
   134bc:	str	r3, [r2]
   134c0:	nop			; (mov r0, r0)
   134c4:	pop	{fp, pc}
   134c8:			; <UNDEFINED> instruction: 0x00013bbc

000134cc <mmk_matcher_ctx@@Base>:
   134cc:	push	{fp, lr}
   134d0:	add	fp, sp, #4
   134d4:	ldr	r3, [pc, #24]	; 134f4 <mmk_matcher_ctx@@Base+0x28>
   134d8:	add	r3, pc, r3
   134dc:	mov	r0, r3
   134e0:	bl	11350 <__tls_get_addr@plt>
   134e4:	mov	r3, r0
   134e8:	ldr	r3, [r3]
   134ec:	mov	r0, r3
   134f0:	pop	{fp, pc}
   134f4:	andeq	r3, r1, ip, lsl #23

000134f8 <mmk_matcher_add@@Base>:
   134f8:	push	{fp, lr}
   134fc:	add	fp, sp, #4
   13500:	sub	sp, sp, #24
   13504:	str	r0, [fp, #-24]	; 0xffffffe8
   13508:	str	r1, [fp, #-28]	; 0xffffffe4
   1350c:	mov	r0, #12
   13510:	bl	15410 <mmk_malloc@@Base>
   13514:	str	r0, [fp, #-16]
   13518:	ldr	r3, [pc, #200]	; 135e8 <mmk_matcher_add@@Base+0xf0>
   1351c:	add	r3, pc, r3
   13520:	mov	r0, r3
   13524:	bl	11350 <__tls_get_addr@plt>
   13528:	mov	r3, r0
   1352c:	ldr	r3, [r3]
   13530:	str	r3, [fp, #-8]
   13534:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13538:	ldr	r3, [fp, #-16]
   1353c:	mov	r2, r3
   13540:	mov	r3, #0
   13544:	str	r3, [r2]
   13548:	str	r3, [r2, #4]
   1354c:	str	r3, [r2, #8]
   13550:	ldr	r3, [fp, #-16]
   13554:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13558:	str	r2, [r3]
   1355c:	ldr	r3, [fp, #-16]
   13560:	str	r1, [r3, #4]
   13564:	ldr	r3, [pc, #128]	; 135ec <mmk_matcher_add@@Base+0xf4>
   13568:	add	r3, pc, r3
   1356c:	mov	r0, r3
   13570:	bl	11350 <__tls_get_addr@plt>
   13574:	mov	r3, r0
   13578:	ldr	r3, [r3]
   1357c:	ldr	r3, [r3, #8]
   13580:	str	r3, [fp, #-12]
   13584:	b	1359c <mmk_matcher_add@@Base+0xa4>
   13588:	ldr	r3, [fp, #-12]
   1358c:	str	r3, [fp, #-8]
   13590:	ldr	r3, [fp, #-12]
   13594:	ldr	r3, [r3, #8]
   13598:	str	r3, [fp, #-12]
   1359c:	ldr	r3, [fp, #-12]
   135a0:	cmp	r3, #0
   135a4:	beq	135c0 <mmk_matcher_add@@Base+0xc8>
   135a8:	ldr	r3, [fp, #-12]
   135ac:	ldr	r2, [r3, #4]
   135b0:	ldr	r3, [fp, #-16]
   135b4:	ldr	r3, [r3, #4]
   135b8:	cmp	r2, r3
   135bc:	bcc	13588 <mmk_matcher_add@@Base+0x90>
   135c0:	ldr	r3, [fp, #-8]
   135c4:	ldr	r2, [r3, #8]
   135c8:	ldr	r3, [fp, #-16]
   135cc:	str	r2, [r3, #8]
   135d0:	ldr	r3, [fp, #-8]
   135d4:	ldr	r2, [fp, #-16]
   135d8:	str	r2, [r3, #8]
   135dc:	nop			; (mov r0, r0)
   135e0:	sub	sp, fp, #4
   135e4:	pop	{fp, pc}
   135e8:	andeq	r3, r1, r8, asr #22
   135ec:	strdeq	r3, [r1], -ip

000135f0 <mmk_matcher_get_predicate@@Base>:
   135f0:	push	{fp}		; (str fp, [sp, #-4]!)
   135f4:	add	fp, sp, #0
   135f8:	sub	sp, sp, #12
   135fc:	str	r0, [fp, #-8]
   13600:	ldr	r3, [fp, #-8]
   13604:	add	r3, r3, #12
   13608:	mov	r0, r3
   1360c:	add	sp, fp, #0
   13610:	pop	{fp}		; (ldr fp, [sp], #4)
   13614:	bx	lr

00013618 <mmk_mock_create_internal@@Base>:
   13618:	push	{r4, fp, lr}
   1361c:	add	fp, sp, #8
   13620:	sub	sp, sp, #44	; 0x2c
   13624:	str	r0, [fp, #-40]	; 0xffffffd8
   13628:	str	r1, [fp, #-44]	; 0xffffffd4
   1362c:	ldr	r4, [pc, #452]	; 137f8 <mmk_mock_create_internal@@Base+0x1e0>
   13630:	add	r4, pc, r4
   13634:	bl	13274 <mmk_init@@Base>
   13638:	mov	r0, #20
   1363c:	bl	15410 <mmk_malloc@@Base>
   13640:	str	r0, [fp, #-20]	; 0xffffffec
   13644:	ldr	r3, [fp, #-20]	; 0xffffffec
   13648:	cmp	r3, #0
   1364c:	bne	13684 <mmk_mock_create_internal@@Base+0x6c>
   13650:	ldr	r3, [pc, #420]	; 137fc <mmk_mock_create_internal@@Base+0x1e4>
   13654:	ldr	r3, [r4, r3]
   13658:	ldr	r0, [r3]
   1365c:	ldr	r3, [pc, #412]	; 13800 <mmk_mock_create_internal@@Base+0x1e8>
   13660:	add	r3, pc, r3
   13664:	str	r3, [sp]
   13668:	mov	r3, #36	; 0x24
   1366c:	ldr	r2, [pc, #400]	; 13804 <mmk_mock_create_internal@@Base+0x1ec>
   13670:	add	r2, pc, r2
   13674:	ldr	r1, [pc, #396]	; 13808 <mmk_mock_create_internal@@Base+0x1f0>
   13678:	add	r1, pc, r1
   1367c:	bl	11314 <fprintf@plt>
   13680:	bl	11368 <abort@plt>
   13684:	ldr	r3, [fp, #-20]	; 0xffffffec
   13688:	mov	r2, r3
   1368c:	mov	r3, #0
   13690:	str	r3, [r2]
   13694:	str	r3, [r2, #4]
   13698:	str	r3, [r2, #8]
   1369c:	str	r3, [r2, #12]
   136a0:	str	r3, [r2, #16]
   136a4:	mov	r1, #64	; 0x40
   136a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   136ac:	bl	151f8 <mmk_strchr@@Base>
   136b0:	str	r0, [fp, #-24]	; 0xffffffe8
   136b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136b8:	cmp	r3, #0
   136bc:	bne	136d0 <mmk_mock_create_internal@@Base+0xb8>
   136c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   136c4:	bl	1535c <mmk_strlen@@Base>
   136c8:	str	r0, [fp, #-16]
   136cc:	b	136e0 <mmk_mock_create_internal@@Base+0xc8>
   136d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   136d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   136d8:	sub	r3, r2, r3
   136dc:	str	r3, [fp, #-16]
   136e0:	ldr	r3, [fp, #-16]
   136e4:	add	r3, r3, #1
   136e8:	mov	r0, r3
   136ec:	bl	15410 <mmk_malloc@@Base>
   136f0:	str	r0, [fp, #-28]	; 0xffffffe4
   136f4:	ldr	r2, [fp, #-16]
   136f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   136fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13700:	bl	152d0 <mmk_strncpy@@Base>
   13704:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13708:	ldr	r3, [fp, #-16]
   1370c:	add	r3, r2, r3
   13710:	mov	r2, #0
   13714:	strb	r2, [r3]
   13718:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1371c:	cmp	r3, #0
   13720:	beq	1374c <mmk_mock_create_internal@@Base+0x134>
   13724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13728:	add	r3, r3, #1
   1372c:	mov	r2, #4
   13730:	ldr	r1, [pc, #212]	; 1380c <mmk_mock_create_internal@@Base+0x1f4>
   13734:	add	r1, pc, r1
   13738:	mov	r0, r3
   1373c:	bl	15134 <mmk_strneq@@Base>
   13740:	mov	r3, r0
   13744:	cmp	r3, #0
   13748:	beq	13754 <mmk_mock_create_internal@@Base+0x13c>
   1374c:	mov	r3, #1
   13750:	b	13758 <mmk_mock_create_internal@@Base+0x140>
   13754:	mov	r3, #0
   13758:	str	r3, [fp, #-32]	; 0xffffffe0
   1375c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13760:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13764:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13768:	bl	14808 <mmk_stub_create@@Base>
   1376c:	mov	r2, r0
   13770:	ldr	r3, [fp, #-20]	; 0xffffffec
   13774:	str	r2, [r3, #4]
   13778:	ldr	r3, [fp, #-20]	; 0xffffffec
   1377c:	ldr	r3, [r3, #4]
   13780:	cmp	r3, #0
   13784:	bne	137ac <mmk_mock_create_internal@@Base+0x194>
   13788:	ldr	r3, [pc, #108]	; 137fc <mmk_mock_create_internal@@Base+0x1e4>
   1378c:	ldr	r3, [r4, r3]
   13790:	ldr	r3, [r3]
   13794:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13798:	ldr	r1, [pc, #112]	; 13810 <mmk_mock_create_internal@@Base+0x1f8>
   1379c:	add	r1, pc, r1
   137a0:	mov	r0, r3
   137a4:	bl	11314 <fprintf@plt>
   137a8:	bl	11368 <abort@plt>
   137ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   137b0:	cmp	r3, #0
   137b4:	bne	137d8 <mmk_mock_create_internal@@Base+0x1c0>
   137b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   137bc:	ldr	r4, [r3, #4]
   137c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   137c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   137c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137cc:	bl	14808 <mmk_stub_create@@Base>
   137d0:	mov	r3, r0
   137d4:	str	r3, [r4, #36]	; 0x24
   137d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137dc:	bl	154a0 <mmk_free@@Base>
   137e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   137e4:	ldr	r3, [r3, #4]
   137e8:	ldr	r3, [r3, #32]
   137ec:	mov	r0, r3
   137f0:	sub	sp, fp, #8
   137f4:	pop	{r4, fp, pc}
   137f8:	andeq	r3, r1, r8, asr #19
   137fc:	andeq	r0, r0, r4, lsr #1
   13800:	andeq	r2, r0, r4, lsl r8
   13804:	muleq	r0, r4, r7
   13808:	ldrdeq	r2, [r0], -ip
   1380c:	andeq	r2, r0, r4, asr #14
   13810:	andeq	r2, r0, r4, ror #13

00013814 <mmk_mock_destroy_internal@@Base>:
   13814:	push	{fp, lr}
   13818:	add	fp, sp, #4
   1381c:	sub	sp, sp, #32
   13820:	str	r0, [fp, #-32]	; 0xffffffe0
   13824:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13828:	ldr	r3, [r3, #4]
   1382c:	str	r3, [fp, #-8]
   13830:	b	13850 <mmk_mock_destroy_internal@@Base+0x3c>
   13834:	ldr	r3, [fp, #-8]
   13838:	ldr	r3, [r3, #36]	; 0x24
   1383c:	str	r3, [fp, #-20]	; 0xffffffec
   13840:	ldr	r0, [fp, #-8]
   13844:	bl	148ec <mmk_stub_destroy@@Base>
   13848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1384c:	str	r3, [fp, #-8]
   13850:	ldr	r3, [fp, #-8]
   13854:	cmp	r3, #0
   13858:	bne	13834 <mmk_mock_destroy_internal@@Base+0x20>
   1385c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13860:	ldr	r3, [r3, #8]
   13864:	mov	r0, r3
   13868:	bl	154a0 <mmk_free@@Base>
   1386c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13870:	ldr	r3, [r3]
   13874:	str	r3, [fp, #-12]
   13878:	b	138d0 <mmk_mock_destroy_internal@@Base+0xbc>
   1387c:	ldr	r3, [fp, #-12]
   13880:	ldr	r3, [r3, #4]
   13884:	str	r3, [fp, #-24]	; 0xffffffe8
   13888:	ldr	r3, [fp, #-12]
   1388c:	ldr	r3, [r3]
   13890:	str	r3, [fp, #-16]
   13894:	b	138b4 <mmk_mock_destroy_internal@@Base+0xa0>
   13898:	ldr	r3, [fp, #-16]
   1389c:	ldr	r3, [r3, #8]
   138a0:	str	r3, [fp, #-28]	; 0xffffffe4
   138a4:	ldr	r0, [fp, #-16]
   138a8:	bl	154a0 <mmk_free@@Base>
   138ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   138b0:	str	r3, [fp, #-16]
   138b4:	ldr	r3, [fp, #-16]
   138b8:	cmp	r3, #0
   138bc:	bne	13898 <mmk_mock_destroy_internal@@Base+0x84>
   138c0:	ldr	r0, [fp, #-12]
   138c4:	bl	154a0 <mmk_free@@Base>
   138c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   138cc:	str	r3, [fp, #-12]
   138d0:	ldr	r3, [fp, #-12]
   138d4:	cmp	r3, #0
   138d8:	bne	1387c <mmk_mock_destroy_internal@@Base+0x68>
   138dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138e0:	bl	154a0 <mmk_free@@Base>
   138e4:	nop			; (mov r0, r0)
   138e8:	sub	sp, fp, #4
   138ec:	pop	{fp, pc}

000138f0 <mmk_mock_params_begin@@Base>:
   138f0:	push	{fp}		; (str fp, [sp, #-4]!)
   138f4:	add	fp, sp, #0
   138f8:	sub	sp, sp, #12
   138fc:	str	r0, [fp, #-8]
   13900:	ldr	r3, [fp, #-8]
   13904:	ldr	r3, [r3, #8]
   13908:	cmp	r3, #0
   1390c:	beq	13920 <mmk_mock_params_begin@@Base+0x30>
   13910:	ldr	r3, [fp, #-8]
   13914:	ldr	r3, [r3, #12]
   13918:	cmp	r3, #0
   1391c:	bne	13928 <mmk_mock_params_begin@@Base+0x38>
   13920:	mov	r3, #0
   13924:	b	13934 <mmk_mock_params_begin@@Base+0x44>
   13928:	ldr	r3, [fp, #-8]
   1392c:	ldr	r3, [r3, #8]
   13930:	add	r3, r3, #4
   13934:	mov	r0, r3
   13938:	add	sp, fp, #0
   1393c:	pop	{fp}		; (ldr fp, [sp], #4)
   13940:	bx	lr

00013944 <mmk_mock_params_next@@Base>:
   13944:	push	{fp}		; (str fp, [sp, #-4]!)
   13948:	add	fp, sp, #0
   1394c:	sub	sp, sp, #20
   13950:	str	r0, [fp, #-16]
   13954:	str	r1, [fp, #-20]	; 0xffffffec
   13958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1395c:	str	r3, [fp, #-8]
   13960:	ldr	r3, [fp, #-8]
   13964:	ldr	r3, [r3, #-4]
   13968:	str	r3, [fp, #-12]
   1396c:	ldr	r3, [fp, #-12]
   13970:	add	r3, r3, #4
   13974:	ldr	r2, [fp, #-8]
   13978:	add	r3, r2, r3
   1397c:	str	r3, [fp, #-8]
   13980:	ldr	r3, [fp, #-16]
   13984:	ldr	r2, [r3, #8]
   13988:	ldr	r3, [fp, #-16]
   1398c:	ldr	r3, [r3, #12]
   13990:	add	r2, r2, r3
   13994:	ldr	r3, [fp, #-8]
   13998:	cmp	r2, r3
   1399c:	bhi	139a8 <mmk_mock_params_next@@Base+0x64>
   139a0:	mov	r3, #0
   139a4:	b	139ac <mmk_mock_params_next@@Base+0x68>
   139a8:	ldr	r3, [fp, #-8]
   139ac:	mov	r0, r3
   139b0:	add	sp, fp, #0
   139b4:	pop	{fp}		; (ldr fp, [sp], #4)
   139b8:	bx	lr

000139bc <mmk_mock_get_params@@Base>:
   139bc:	push	{fp, lr}
   139c0:	add	fp, sp, #4
   139c4:	sub	sp, sp, #8
   139c8:	bl	149bc <mmk_ctx@@Base>
   139cc:	mov	r3, r0
   139d0:	mov	r0, r3
   139d4:	bl	145b0 <mmk_stub_context@@Base>
   139d8:	str	r0, [fp, #-8]
   139dc:	ldr	r3, [fp, #-8]
   139e0:	ldr	r3, [r3]
   139e4:	mov	r0, r3
   139e8:	sub	sp, fp, #4
   139ec:	pop	{fp, pc}
   139f0:	push	{fp}		; (str fp, [sp, #-4]!)
   139f4:	add	fp, sp, #0
   139f8:	sub	sp, sp, #20
   139fc:	str	r0, [fp, #-16]
   13a00:	str	r1, [fp, #-20]	; 0xffffffec
   13a04:	ldr	r3, [fp, #-16]
   13a08:	ldr	r3, [r3]
   13a0c:	str	r3, [fp, #-12]
   13a10:	ldr	r3, [fp, #-16]
   13a14:	ldr	r3, [r3, #8]
   13a18:	str	r3, [fp, #-8]
   13a1c:	b	13a74 <mmk_mock_get_params@@Base+0xb8>
   13a20:	ldr	r3, [fp, #-8]
   13a24:	ldr	r2, [r3]
   13a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a2c:	cmp	r2, r3
   13a30:	bne	13a68 <mmk_mock_get_params@@Base+0xac>
   13a34:	ldr	r3, [fp, #-8]
   13a38:	ldr	r2, [r3, #4]
   13a3c:	ldr	r3, [fp, #-12]
   13a40:	cmp	r2, r3
   13a44:	bcc	13a54 <mmk_mock_get_params@@Base+0x98>
   13a48:	ldr	r3, [fp, #-8]
   13a4c:	ldr	r3, [r3, #4]
   13a50:	b	13a88 <mmk_mock_get_params@@Base+0xcc>
   13a54:	ldr	r3, [fp, #-8]
   13a58:	ldr	r2, [r3, #4]
   13a5c:	ldr	r3, [fp, #-12]
   13a60:	add	r3, r2, r3
   13a64:	b	13a88 <mmk_mock_get_params@@Base+0xcc>
   13a68:	ldr	r3, [fp, #-8]
   13a6c:	add	r3, r3, #8
   13a70:	str	r3, [fp, #-8]
   13a74:	ldr	r3, [fp, #-8]
   13a78:	ldr	r3, [r3]
   13a7c:	cmp	r3, #0
   13a80:	bne	13a20 <mmk_mock_get_params@@Base+0x64>
   13a84:	mov	r3, #0
   13a88:	mov	r0, r3
   13a8c:	add	sp, fp, #0
   13a90:	pop	{fp}		; (ldr fp, [sp], #4)
   13a94:	bx	lr
   13a98:	push	{fp}		; (str fp, [sp, #-4]!)
   13a9c:	add	fp, sp, #0
   13aa0:	sub	sp, sp, #20
   13aa4:	str	r0, [fp, #-16]
   13aa8:	str	r1, [fp, #-20]	; 0xffffffec
   13aac:	ldr	r3, [fp, #-16]
   13ab0:	ldr	r3, [r3, #8]
   13ab4:	str	r3, [fp, #-8]
   13ab8:	b	13ae8 <mmk_mock_get_params@@Base+0x12c>
   13abc:	ldr	r3, [fp, #-8]
   13ac0:	ldr	r2, [r3]
   13ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ac8:	cmp	r2, r3
   13acc:	bne	13adc <mmk_mock_get_params@@Base+0x120>
   13ad0:	ldr	r3, [fp, #-8]
   13ad4:	ldr	r3, [r3, #4]
   13ad8:	b	13afc <mmk_mock_get_params@@Base+0x140>
   13adc:	ldr	r3, [fp, #-8]
   13ae0:	add	r3, r3, #8
   13ae4:	str	r3, [fp, #-8]
   13ae8:	ldr	r3, [fp, #-8]
   13aec:	ldr	r3, [r3]
   13af0:	cmp	r3, #0
   13af4:	bne	13abc <mmk_mock_get_params@@Base+0x100>
   13af8:	mov	r3, #0
   13afc:	mov	r0, r3
   13b00:	add	sp, fp, #0
   13b04:	pop	{fp}		; (ldr fp, [sp], #4)
   13b08:	bx	lr
   13b0c:	push	{fp}		; (str fp, [sp, #-4]!)
   13b10:	add	fp, sp, #0
   13b14:	sub	sp, sp, #12
   13b18:	str	r0, [fp, #-8]
   13b1c:	str	r1, [fp, #-12]
   13b20:	b	13b50 <mmk_mock_get_params@@Base+0x194>
   13b24:	ldr	r3, [fp, #-8]
   13b28:	ldr	r2, [r3]
   13b2c:	ldr	r3, [fp, #-12]
   13b30:	cmp	r2, r3
   13b34:	bne	13b44 <mmk_mock_get_params@@Base+0x188>
   13b38:	ldr	r3, [fp, #-8]
   13b3c:	ldr	r3, [r3, #4]
   13b40:	b	13b64 <mmk_mock_get_params@@Base+0x1a8>
   13b44:	ldr	r3, [fp, #-8]
   13b48:	add	r3, r3, #8
   13b4c:	str	r3, [fp, #-8]
   13b50:	ldr	r3, [fp, #-8]
   13b54:	ldr	r3, [r3]
   13b58:	cmp	r3, #0
   13b5c:	bne	13b24 <mmk_mock_get_params@@Base+0x168>
   13b60:	mvn	r3, #0
   13b64:	mov	r0, r3
   13b68:	add	sp, fp, #0
   13b6c:	pop	{fp}		; (ldr fp, [sp], #4)
   13b70:	bx	lr
   13b74:	push	{fp}		; (str fp, [sp, #-4]!)
   13b78:	add	fp, sp, #0
   13b7c:	sub	sp, sp, #20
   13b80:	str	r0, [fp, #-16]
   13b84:	str	r1, [fp, #-20]	; 0xffffffec
   13b88:	mov	r3, #0
   13b8c:	str	r3, [fp, #-8]
   13b90:	b	13bd4 <mmk_mock_get_params@@Base+0x218>
   13b94:	ldr	r3, [fp, #-8]
   13b98:	lsl	r3, r3, #5
   13b9c:	ldr	r2, [fp, #-16]
   13ba0:	add	r3, r2, r3
   13ba4:	ldr	r3, [r3]
   13ba8:	cmp	r3, #2
   13bac:	bne	13bc8 <mmk_mock_get_params@@Base+0x20c>
   13bb0:	ldr	r3, [fp, #-8]
   13bb4:	lsl	r3, r3, #5
   13bb8:	ldr	r2, [fp, #-16]
   13bbc:	add	r3, r2, r3
   13bc0:	ldr	r3, [r3, #8]
   13bc4:	b	13be8 <mmk_mock_get_params@@Base+0x22c>
   13bc8:	ldr	r3, [fp, #-8]
   13bcc:	add	r3, r3, #1
   13bd0:	str	r3, [fp, #-8]
   13bd4:	ldr	r2, [fp, #-8]
   13bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bdc:	cmp	r2, r3
   13be0:	bcc	13b94 <mmk_mock_get_params@@Base+0x1d8>
   13be4:	mov	r3, #0
   13be8:	mov	r0, r3
   13bec:	add	sp, fp, #0
   13bf0:	pop	{fp}		; (ldr fp, [sp], #4)
   13bf4:	bx	lr
   13bf8:	push	{fp}		; (str fp, [sp, #-4]!)
   13bfc:	add	fp, sp, #0
   13c00:	sub	sp, sp, #20
   13c04:	str	r0, [fp, #-16]
   13c08:	ldr	r3, [fp, #-16]
   13c0c:	str	r3, [fp, #-8]
   13c10:	b	13c3c <mmk_mock_get_params@@Base+0x280>
   13c14:	ldr	r3, [fp, #-8]
   13c18:	ldr	r3, [r3]
   13c1c:	cmp	r3, #21
   13c20:	bne	13c30 <mmk_mock_get_params@@Base+0x274>
   13c24:	ldr	r3, [fp, #-8]
   13c28:	ldr	r3, [r3, #4]
   13c2c:	b	13c50 <mmk_mock_get_params@@Base+0x294>
   13c30:	ldr	r3, [fp, #-8]
   13c34:	add	r3, r3, #8
   13c38:	str	r3, [fp, #-8]
   13c3c:	ldr	r3, [fp, #-8]
   13c40:	ldr	r3, [r3]
   13c44:	cmp	r3, #0
   13c48:	bne	13c14 <mmk_mock_get_params@@Base+0x258>
   13c4c:	mov	r3, #0
   13c50:	mov	r0, r3
   13c54:	add	sp, fp, #0
   13c58:	pop	{fp}		; (ldr fp, [sp], #4)
   13c5c:	bx	lr
   13c60:	push	{fp, lr}
   13c64:	add	fp, sp, #4
   13c68:	sub	sp, sp, #24
   13c6c:	ldr	r3, [pc, #192]	; 13d34 <mmk_mock_get_params@@Base+0x378>
   13c70:	add	r3, pc, r3
   13c74:	mov	r2, #0
   13c78:	str	r2, [fp, #-8]
   13c7c:	ldr	r2, [pc, #180]	; 13d38 <mmk_mock_get_params@@Base+0x37c>
   13c80:	ldr	r2, [r3, r2]
   13c84:	str	r2, [fp, #-8]
   13c88:	ldr	r2, [fp, #-8]
   13c8c:	cmp	r2, #0
   13c90:	bne	13d24 <mmk_mock_get_params@@Base+0x368>
   13c94:	ldr	r2, [pc, #160]	; 13d3c <mmk_mock_get_params@@Base+0x380>
   13c98:	ldr	r3, [r3, r2]
   13c9c:	ldr	r3, [r3]
   13ca0:	str	r3, [fp, #-12]
   13ca4:	nop			; (mov r0, r0)
   13ca8:	ldr	r3, [fp, #-12]
   13cac:	add	r2, r3, #4
   13cb0:	str	r2, [fp, #-12]
   13cb4:	ldr	r3, [r3]
   13cb8:	cmp	r3, #0
   13cbc:	bne	13ca8 <mmk_mock_get_params@@Base+0x2ec>
   13cc0:	ldr	r3, [fp, #-12]
   13cc4:	str	r3, [fp, #-16]
   13cc8:	mov	r1, #3
   13ccc:	ldr	r0, [fp, #-16]
   13cd0:	bl	13b0c <mmk_mock_get_params@@Base+0x150>
   13cd4:	str	r0, [fp, #-20]	; 0xffffffec
   13cd8:	mov	r1, #4
   13cdc:	ldr	r0, [fp, #-16]
   13ce0:	bl	13b0c <mmk_mock_get_params@@Base+0x150>
   13ce4:	str	r0, [fp, #-24]	; 0xffffffe8
   13ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cec:	cmn	r3, #1
   13cf0:	beq	13d24 <mmk_mock_get_params@@Base+0x368>
   13cf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13cf8:	cmn	r3, #1
   13cfc:	beq	13d24 <mmk_mock_get_params@@Base+0x368>
   13d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d08:	mov	r0, r3
   13d0c:	bl	13b74 <mmk_mock_get_params@@Base+0x1b8>
   13d10:	str	r0, [fp, #-28]	; 0xffffffe4
   13d14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d18:	mov	r0, r3
   13d1c:	bl	13bf8 <mmk_mock_get_params@@Base+0x23c>
   13d20:	str	r0, [fp, #-8]
   13d24:	ldr	r3, [fp, #-8]
   13d28:	mov	r0, r3
   13d2c:	sub	sp, fp, #4
   13d30:	pop	{fp, pc}
   13d34:	andeq	r3, r1, r8, lsl #7
   13d38:	andeq	r0, r0, r8, asr #1
   13d3c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00013d40 <plt_init_ctx@@Base>:
   13d40:	push	{fp, lr}
   13d44:	add	fp, sp, #4
   13d48:	ldr	r3, [pc, #52]	; 13d84 <plt_init_ctx@@Base+0x44>
   13d4c:	add	r3, pc, r3
   13d50:	ldr	r3, [r3]
   13d54:	cmn	r3, #1
   13d58:	bne	13d70 <plt_init_ctx@@Base+0x30>
   13d5c:	bl	13c60 <mmk_mock_get_params@@Base+0x2a4>
   13d60:	mov	r2, r0
   13d64:	ldr	r3, [pc, #28]	; 13d88 <plt_init_ctx@@Base+0x48>
   13d68:	add	r3, pc, r3
   13d6c:	str	r2, [r3]
   13d70:	ldr	r3, [pc, #20]	; 13d8c <plt_init_ctx@@Base+0x4c>
   13d74:	add	r3, pc, r3
   13d78:	ldr	r3, [r3]
   13d7c:	mov	r0, r3
   13d80:	pop	{fp, pc}
   13d84:	andeq	r3, r1, r8, lsl #7
   13d88:	andeq	r3, r1, ip, ror #6
   13d8c:	andeq	r3, r1, r0, ror #6

00013d90 <plt_get_lib@@Base>:
   13d90:	push	{r4, r5, r6, r7, r8, fp, lr}
   13d94:	add	fp, sp, #24
   13d98:	sub	sp, sp, #60	; 0x3c
   13d9c:	str	r0, [fp, #-80]	; 0xffffffb0
   13da0:	str	r1, [fp, #-84]	; 0xffffffac
   13da4:	ldr	r8, [pc, #908]	; 14138 <plt_get_lib@@Base+0x3a8>
   13da8:	add	r8, pc, r8
   13dac:	ldr	r3, [fp, #-84]	; 0xffffffac
   13db0:	cmp	r3, #0
   13db4:	bne	13dc4 <plt_get_lib@@Base+0x34>
   13db8:	ldr	r3, [pc, #892]	; 1413c <plt_get_lib@@Base+0x3ac>
   13dbc:	add	r3, pc, r3
   13dc0:	str	r3, [fp, #-84]	; 0xffffffac
   13dc4:	mov	r3, #0
   13dc8:	str	r3, [fp, #-32]	; 0xffffffe0
   13dcc:	mov	r2, #4
   13dd0:	ldr	r3, [pc, #872]	; 14140 <plt_get_lib@@Base+0x3b0>
   13dd4:	add	r3, pc, r3
   13dd8:	mov	r1, r3
   13ddc:	ldr	r0, [fp, #-84]	; 0xffffffac
   13de0:	bl	1135c <strncmp@plt>
   13de4:	mov	r3, r0
   13de8:	cmp	r3, #0
   13dec:	bne	13dfc <plt_get_lib@@Base+0x6c>
   13df0:	mov	r3, #1
   13df4:	str	r3, [fp, #-32]	; 0xffffffe0
   13df8:	b	13f04 <plt_get_lib@@Base+0x174>
   13dfc:	mov	r2, #5
   13e00:	ldr	r3, [pc, #828]	; 14144 <plt_get_lib@@Base+0x3b4>
   13e04:	add	r3, pc, r3
   13e08:	mov	r1, r3
   13e0c:	ldr	r0, [fp, #-84]	; 0xffffffac
   13e10:	bl	1135c <strncmp@plt>
   13e14:	mov	r3, r0
   13e18:	cmp	r3, #0
   13e1c:	bne	13e2c <plt_get_lib@@Base+0x9c>
   13e20:	mov	r3, #2
   13e24:	str	r3, [fp, #-32]	; 0xffffffe0
   13e28:	b	13f04 <plt_get_lib@@Base+0x174>
   13e2c:	mov	r2, #4
   13e30:	ldr	r3, [pc, #784]	; 14148 <plt_get_lib@@Base+0x3b8>
   13e34:	add	r3, pc, r3
   13e38:	mov	r1, r3
   13e3c:	ldr	r0, [fp, #-84]	; 0xffffffac
   13e40:	bl	1135c <strncmp@plt>
   13e44:	mov	r3, r0
   13e48:	cmp	r3, #0
   13e4c:	bne	13e5c <plt_get_lib@@Base+0xcc>
   13e50:	mov	r3, #3
   13e54:	str	r3, [fp, #-32]	; 0xffffffe0
   13e58:	b	13f04 <plt_get_lib@@Base+0x174>
   13e5c:	ldr	r3, [pc, #744]	; 1414c <plt_get_lib@@Base+0x3bc>
   13e60:	add	r3, pc, r3
   13e64:	mov	r1, r3
   13e68:	ldr	r0, [fp, #-84]	; 0xffffffac
   13e6c:	bl	1126c <strcmp@plt>
   13e70:	mov	r3, r0
   13e74:	cmp	r3, #0
   13e78:	bne	13e8c <plt_get_lib@@Base+0xfc>
   13e7c:	ldr	r3, [pc, #716]	; 14150 <plt_get_lib@@Base+0x3c0>
   13e80:	add	r3, pc, r3
   13e84:	str	r3, [fp, #-84]	; 0xffffffac
   13e88:	b	13f04 <plt_get_lib@@Base+0x174>
   13e8c:	mov	r1, #58	; 0x3a
   13e90:	ldr	r0, [fp, #-84]	; 0xffffffac
   13e94:	bl	11308 <strchr@plt>
   13e98:	str	r0, [fp, #-40]	; 0xffffffd8
   13e9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13ea0:	cmp	r3, #0
   13ea4:	beq	13ee0 <plt_get_lib@@Base+0x150>
   13ea8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13eac:	ldr	r3, [fp, #-84]	; 0xffffffac
   13eb0:	sub	r3, r2, r3
   13eb4:	add	r3, r3, #1
   13eb8:	str	r3, [fp, #-44]	; 0xffffffd4
   13ebc:	ldr	r3, [pc, #656]	; 14154 <plt_get_lib@@Base+0x3c4>
   13ec0:	ldr	r3, [r8, r3]
   13ec4:	ldr	r0, [r3]
   13ec8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13ecc:	ldr	r3, [fp, #-84]	; 0xffffffac
   13ed0:	ldr	r1, [pc, #640]	; 14158 <plt_get_lib@@Base+0x3c8>
   13ed4:	add	r1, pc, r1
   13ed8:	bl	11314 <fprintf@plt>
   13edc:	b	13f00 <plt_get_lib@@Base+0x170>
   13ee0:	ldr	r3, [pc, #620]	; 14154 <plt_get_lib@@Base+0x3c4>
   13ee4:	ldr	r3, [r8, r3]
   13ee8:	ldr	r3, [r3]
   13eec:	ldr	r2, [fp, #-84]	; 0xffffffac
   13ef0:	ldr	r1, [pc, #612]	; 1415c <plt_get_lib@@Base+0x3cc>
   13ef4:	add	r1, pc, r1
   13ef8:	mov	r0, r3
   13efc:	bl	11314 <fprintf@plt>
   13f00:	bl	11368 <abort@plt>
   13f04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f08:	cmp	r3, #0
   13f0c:	beq	13f28 <plt_get_lib@@Base+0x198>
   13f10:	mov	r1, #58	; 0x3a
   13f14:	ldr	r0, [fp, #-84]	; 0xffffffac
   13f18:	bl	11308 <strchr@plt>
   13f1c:	mov	r3, r0
   13f20:	add	r3, r3, #1
   13f24:	b	13f2c <plt_get_lib@@Base+0x19c>
   13f28:	ldr	r3, [fp, #-84]	; 0xffffffac
   13f2c:	str	r3, [fp, #-48]	; 0xffffffd0
   13f30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f34:	bl	112f0 <strlen@plt>
   13f38:	str	r0, [fp, #-52]	; 0xffffffcc
   13f3c:	ldr	r3, [pc, #540]	; 14160 <plt_get_lib@@Base+0x3d0>
   13f40:	add	r3, pc, r3
   13f44:	mov	r1, r3
   13f48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13f4c:	bl	1126c <strcmp@plt>
   13f50:	mov	r3, r0
   13f54:	cmp	r3, #0
   13f58:	moveq	r3, #1
   13f5c:	movne	r3, #0
   13f60:	uxtb	r3, r3
   13f64:	str	r3, [fp, #-56]	; 0xffffffc8
   13f68:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13f6c:	ldr	r3, [r3, #4]
   13f70:	str	r3, [fp, #-36]	; 0xffffffdc
   13f74:	b	1411c <plt_get_lib@@Base+0x38c>
   13f78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13f7c:	cmp	r3, #1
   13f80:	bne	140a0 <plt_get_lib@@Base+0x310>
   13f84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13f88:	cmp	r3, #0
   13f8c:	beq	13fe8 <plt_get_lib@@Base+0x258>
   13f90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13f94:	ldr	r3, [r3, #4]
   13f98:	ldr	r2, [pc, #452]	; 14164 <plt_get_lib@@Base+0x3d4>
   13f9c:	add	r2, pc, r2
   13fa0:	mov	r1, r2
   13fa4:	mov	r0, r3
   13fa8:	bl	11254 <strstr@plt>
   13fac:	mov	r3, r0
   13fb0:	cmp	r3, #0
   13fb4:	bne	13fe0 <plt_get_lib@@Base+0x250>
   13fb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fbc:	ldr	r3, [r3, #4]
   13fc0:	ldr	r2, [pc, #416]	; 14168 <plt_get_lib@@Base+0x3d8>
   13fc4:	add	r2, pc, r2
   13fc8:	mov	r1, r2
   13fcc:	mov	r0, r3
   13fd0:	bl	11254 <strstr@plt>
   13fd4:	mov	r3, r0
   13fd8:	cmp	r3, #0
   13fdc:	beq	14110 <plt_get_lib@@Base+0x380>
   13fe0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13fe4:	b	1412c <plt_get_lib@@Base+0x39c>
   13fe8:	mov	r3, sp
   13fec:	mov	r8, r3
   13ff0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   13ff4:	add	r3, r3, #8
   13ff8:	str	r3, [fp, #-64]	; 0xffffffc0
   13ffc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14000:	mov	r3, r1
   14004:	sub	r3, r3, #1
   14008:	str	r3, [fp, #-68]	; 0xffffffbc
   1400c:	mov	r2, r1
   14010:	mov	r3, #0
   14014:	lsl	r5, r3, #3
   14018:	orr	r5, r5, r2, lsr #29
   1401c:	lsl	r4, r2, #3
   14020:	mov	r2, r1
   14024:	mov	r3, #0
   14028:	lsl	r7, r3, #3
   1402c:	orr	r7, r7, r2, lsr #29
   14030:	lsl	r6, r2, #3
   14034:	add	r3, r1, #7
   14038:	lsr	r3, r3, #3
   1403c:	lsl	r3, r3, #3
   14040:	sub	sp, sp, r3
   14044:	mov	r3, sp
   14048:	add	r3, r3, #0
   1404c:	str	r3, [fp, #-72]	; 0xffffffb8
   14050:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14054:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14058:	ldr	r2, [pc, #268]	; 1416c <plt_get_lib@@Base+0x3dc>
   1405c:	add	r2, pc, r2
   14060:	ldr	r1, [fp, #-64]	; 0xffffffc0
   14064:	bl	1132c <snprintf@plt>
   14068:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1406c:	ldr	r3, [r3, #4]
   14070:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14074:	mov	r1, r2
   14078:	mov	r0, r3
   1407c:	bl	11254 <strstr@plt>
   14080:	mov	r3, r0
   14084:	cmp	r3, #0
   14088:	beq	14098 <plt_get_lib@@Base+0x308>
   1408c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14090:	mov	sp, r8
   14094:	b	1412c <plt_get_lib@@Base+0x39c>
   14098:	mov	sp, r8
   1409c:	b	14110 <plt_get_lib@@Base+0x380>
   140a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140a4:	cmp	r3, #0
   140a8:	beq	140b8 <plt_get_lib@@Base+0x328>
   140ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140b0:	cmp	r3, #2
   140b4:	bne	140e0 <plt_get_lib@@Base+0x350>
   140b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   140bc:	ldr	r3, [r3, #4]
   140c0:	mov	r1, r3
   140c4:	ldr	r0, [fp, #-84]	; 0xffffffac
   140c8:	bl	1126c <strcmp@plt>
   140cc:	mov	r3, r0
   140d0:	cmp	r3, #0
   140d4:	bne	14110 <plt_get_lib@@Base+0x380>
   140d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   140dc:	b	1412c <plt_get_lib@@Base+0x39c>
   140e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   140e4:	cmp	r3, #3
   140e8:	bne	14110 <plt_get_lib@@Base+0x380>
   140ec:	ldr	r1, [fp, #-48]	; 0xffffffd0
   140f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   140f4:	bl	14254 <plt_get_lib@@Base+0x4c4>
   140f8:	str	r0, [fp, #-60]	; 0xffffffc4
   140fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14100:	cmp	r3, #0
   14104:	beq	14110 <plt_get_lib@@Base+0x380>
   14108:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1410c:	b	1412c <plt_get_lib@@Base+0x39c>
   14110:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14114:	ldr	r3, [r3, #12]
   14118:	str	r3, [fp, #-36]	; 0xffffffdc
   1411c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14120:	cmp	r3, #0
   14124:	bne	13f78 <plt_get_lib@@Base+0x1e8>
   14128:	mov	r3, #0
   1412c:	mov	r0, r3
   14130:	sub	sp, fp, #24
   14134:	pop	{r4, r5, r6, r7, r8, fp, pc}
   14138:	andeq	r3, r1, r0, asr r2
   1413c:	strdeq	r2, [r0], -r8
   14140:	andeq	r2, r0, r8, ror #1
   14144:	andeq	r2, r0, r0, asr #1
   14148:	muleq	r0, r8, r0
   1414c:	andeq	r2, r0, r4, asr r0
   14150:	andeq	r2, r0, r4, asr r0
   14154:	andeq	r0, r0, r4, lsr #1
   14158:	andeq	r2, r0, r4
   1415c:	andeq	r2, r0, r8
   14160:	andeq	r1, r0, r0, ror #31
   14164:	andeq	r1, r0, r8, lsl #31
   14168:	andeq	r1, r0, ip, ror #30
   1416c:	andeq	r1, r0, r0, ror #29
   14170:	push	{fp, lr}
   14174:	add	fp, sp, #4
   14178:	sub	sp, sp, #32
   1417c:	str	r0, [fp, #-24]	; 0xffffffe8
   14180:	str	r1, [fp, #-28]	; 0xffffffe4
   14184:	str	r2, [fp, #-32]	; 0xffffffe0
   14188:	str	r3, [fp, #-36]	; 0xffffffdc
   1418c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14190:	ldr	r3, [r3]
   14194:	str	r3, [fp, #-8]
   14198:	mov	r3, #0
   1419c:	str	r3, [fp, #-12]
   141a0:	b	14214 <plt_get_lib@@Base+0x484>
   141a4:	ldr	r3, [fp, #-8]
   141a8:	ldr	r3, [r3, #4]
   141ac:	lsr	r3, r3, #8
   141b0:	lsl	r3, r3, #4
   141b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   141b8:	add	r3, r2, r3
   141bc:	str	r3, [fp, #-16]
   141c0:	ldr	r3, [fp, #-16]
   141c4:	ldr	r3, [r3]
   141c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   141cc:	add	r3, r2, r3
   141d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   141d4:	mov	r0, r3
   141d8:	bl	1126c <strcmp@plt>
   141dc:	mov	r3, r0
   141e0:	cmp	r3, #0
   141e4:	bne	141f4 <plt_get_lib@@Base+0x464>
   141e8:	ldr	r3, [fp, #-8]
   141ec:	ldr	r3, [r3]
   141f0:	b	14248 <plt_get_lib@@Base+0x4b8>
   141f4:	ldr	r3, [fp, #-12]
   141f8:	add	r3, r3, #1
   141fc:	str	r3, [fp, #-12]
   14200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14204:	ldr	r3, [r3, #8]
   14208:	ldr	r2, [fp, #-8]
   1420c:	add	r3, r2, r3
   14210:	str	r3, [fp, #-8]
   14214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14218:	ldr	r2, [r3, #4]
   1421c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14220:	ldr	r3, [r3, #8]
   14224:	mov	r1, r3
   14228:	mov	r0, r2
   1422c:	bl	157cc <mmk_trampoline_end@@Base+0x4>
   14230:	mov	r3, r0
   14234:	mov	r2, r3
   14238:	ldr	r3, [fp, #-12]
   1423c:	cmp	r2, r3
   14240:	bhi	141a4 <plt_get_lib@@Base+0x414>
   14244:	mov	r3, #0
   14248:	mov	r0, r3
   1424c:	sub	sp, fp, #4
   14250:	pop	{fp, pc}
   14254:	push	{fp, lr}
   14258:	add	fp, sp, #4
   1425c:	sub	sp, sp, #56	; 0x38
   14260:	str	r0, [fp, #-56]	; 0xffffffc8
   14264:	str	r1, [fp, #-60]	; 0xffffffc4
   14268:	mov	r1, #6
   1426c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14270:	bl	139f0 <mmk_mock_get_params@@Base+0x34>
   14274:	str	r0, [fp, #-8]
   14278:	mov	r1, #5
   1427c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14280:	bl	139f0 <mmk_mock_get_params@@Base+0x34>
   14284:	str	r0, [fp, #-12]
   14288:	mov	r1, #20
   1428c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14290:	bl	13a98 <mmk_mock_get_params@@Base+0xdc>
   14294:	mov	r3, r0
   14298:	str	r3, [fp, #-16]
   1429c:	mov	r1, #23
   142a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142a4:	bl	139f0 <mmk_mock_get_params@@Base+0x34>
   142a8:	str	r0, [fp, #-20]	; 0xffffffec
   142ac:	mov	r1, #2
   142b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142b4:	bl	13a98 <mmk_mock_get_params@@Base+0xdc>
   142b8:	str	r0, [fp, #-24]	; 0xffffffe8
   142bc:	ldr	r3, [fp, #-16]
   142c0:	add	r3, r3, #2
   142c4:	mov	r1, r3
   142c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142cc:	bl	13a98 <mmk_mock_get_params@@Base+0xdc>
   142d0:	str	r0, [fp, #-28]	; 0xffffffe4
   142d4:	ldr	r3, [fp, #-8]
   142d8:	cmp	r3, #0
   142dc:	beq	1431c <plt_get_lib@@Base+0x58c>
   142e0:	ldr	r3, [fp, #-12]
   142e4:	cmp	r3, #0
   142e8:	beq	1431c <plt_get_lib@@Base+0x58c>
   142ec:	ldr	r3, [fp, #-16]
   142f0:	cmp	r3, #0
   142f4:	beq	1431c <plt_get_lib@@Base+0x58c>
   142f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   142fc:	cmp	r3, #0
   14300:	beq	1431c <plt_get_lib@@Base+0x58c>
   14304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14308:	cmp	r3, #0
   1430c:	beq	1431c <plt_get_lib@@Base+0x58c>
   14310:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14314:	cmp	r3, #0
   14318:	bne	14324 <plt_get_lib@@Base+0x594>
   1431c:	mov	r3, #0
   14320:	b	14380 <plt_get_lib@@Base+0x5f0>
   14324:	ldr	r3, [fp, #-20]	; 0xffffffec
   14328:	str	r3, [fp, #-48]	; 0xffffffd0
   1432c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14330:	str	r3, [fp, #-44]	; 0xffffffd4
   14334:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14338:	str	r3, [fp, #-40]	; 0xffffffd8
   1433c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14340:	ldr	r3, [r3]
   14344:	str	r3, [fp, #-32]	; 0xffffffe0
   14348:	sub	r0, fp, #48	; 0x30
   1434c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14350:	ldr	r2, [fp, #-12]
   14354:	ldr	r1, [fp, #-8]
   14358:	bl	14170 <plt_get_lib@@Base+0x3e0>
   1435c:	str	r0, [fp, #-36]	; 0xffffffdc
   14360:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14364:	cmp	r3, #0
   14368:	beq	1437c <plt_get_lib@@Base+0x5ec>
   1436c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14370:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14374:	add	r3, r2, r3
   14378:	b	14380 <plt_get_lib@@Base+0x5f0>
   1437c:	mov	r3, #0
   14380:	mov	r0, r3
   14384:	sub	sp, fp, #4
   14388:	pop	{fp, pc}

0001438c <plt_get_offsets@@Base>:
   1438c:	push	{fp, lr}
   14390:	add	fp, sp, #4
   14394:	sub	sp, sp, #24
   14398:	str	r0, [fp, #-16]
   1439c:	str	r1, [fp, #-20]	; 0xffffffec
   143a0:	str	r2, [fp, #-24]	; 0xffffffe8
   143a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   143a8:	ldr	r0, [fp, #-16]
   143ac:	bl	14254 <plt_get_lib@@Base+0x4c4>
   143b0:	str	r0, [fp, #-8]
   143b4:	ldr	r3, [fp, #-8]
   143b8:	cmp	r3, #0
   143bc:	beq	14400 <plt_get_offsets@@Base+0x74>
   143c0:	mov	r0, #8
   143c4:	bl	15410 <mmk_malloc@@Base>
   143c8:	str	r0, [fp, #-12]
   143cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143d0:	mov	r2, #1
   143d4:	str	r2, [r3]
   143d8:	ldr	r3, [fp, #-12]
   143dc:	mov	r2, r3
   143e0:	mov	r3, #0
   143e4:	str	r3, [r2]
   143e8:	str	r3, [r2, #4]
   143ec:	ldr	r3, [fp, #-12]
   143f0:	ldr	r2, [fp, #-8]
   143f4:	str	r2, [r3]
   143f8:	ldr	r3, [fp, #-12]
   143fc:	b	14404 <plt_get_offsets@@Base+0x78>
   14400:	mov	r3, #0
   14404:	mov	r0, r3
   14408:	sub	sp, fp, #4
   1440c:	pop	{fp, pc}

00014410 <plt_set_offsets@@Base>:
   14410:	push	{fp}		; (str fp, [sp, #-4]!)
   14414:	add	fp, sp, #0
   14418:	sub	sp, sp, #28
   1441c:	str	r0, [fp, #-16]
   14420:	str	r1, [fp, #-20]	; 0xffffffec
   14424:	str	r2, [fp, #-24]	; 0xffffffe8
   14428:	mov	r3, #0
   1442c:	str	r3, [fp, #-8]
   14430:	b	144a4 <plt_set_offsets@@Base+0x94>
   14434:	ldr	r3, [fp, #-8]
   14438:	lsl	r3, r3, #3
   1443c:	ldr	r2, [fp, #-16]
   14440:	add	r3, r2, r3
   14444:	ldr	r3, [r3, #4]
   14448:	cmp	r3, #0
   1444c:	bne	1447c <plt_set_offsets@@Base+0x6c>
   14450:	ldr	r3, [fp, #-8]
   14454:	lsl	r3, r3, #3
   14458:	ldr	r2, [fp, #-16]
   1445c:	add	r3, r2, r3
   14460:	ldr	r2, [fp, #-8]
   14464:	lsl	r2, r2, #3
   14468:	ldr	r1, [fp, #-16]
   1446c:	add	r2, r1, r2
   14470:	ldr	r2, [r2]
   14474:	ldr	r2, [r2]
   14478:	str	r2, [r3, #4]
   1447c:	ldr	r3, [fp, #-8]
   14480:	lsl	r3, r3, #3
   14484:	ldr	r2, [fp, #-16]
   14488:	add	r3, r2, r3
   1448c:	ldr	r3, [r3]
   14490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14494:	str	r2, [r3]
   14498:	ldr	r3, [fp, #-8]
   1449c:	add	r3, r3, #1
   144a0:	str	r3, [fp, #-8]
   144a4:	ldr	r2, [fp, #-8]
   144a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   144ac:	cmp	r2, r3
   144b0:	bcc	14434 <plt_set_offsets@@Base+0x24>
   144b4:	nop			; (mov r0, r0)
   144b8:	add	sp, fp, #0
   144bc:	pop	{fp}		; (ldr fp, [sp], #4)
   144c0:	bx	lr

000144c4 <plt_reset_offsets@@Base>:
   144c4:	push	{fp}		; (str fp, [sp, #-4]!)
   144c8:	add	fp, sp, #0
   144cc:	sub	sp, sp, #20
   144d0:	str	r0, [fp, #-16]
   144d4:	str	r1, [fp, #-20]	; 0xffffffec
   144d8:	mov	r3, #0
   144dc:	str	r3, [fp, #-8]
   144e0:	b	1451c <plt_reset_offsets@@Base+0x58>
   144e4:	ldr	r3, [fp, #-8]
   144e8:	lsl	r3, r3, #3
   144ec:	ldr	r2, [fp, #-16]
   144f0:	add	r3, r2, r3
   144f4:	ldr	r3, [r3]
   144f8:	ldr	r2, [fp, #-8]
   144fc:	lsl	r2, r2, #3
   14500:	ldr	r1, [fp, #-16]
   14504:	add	r2, r1, r2
   14508:	ldr	r2, [r2, #4]
   1450c:	str	r2, [r3]
   14510:	ldr	r3, [fp, #-8]
   14514:	add	r3, r3, #1
   14518:	str	r3, [fp, #-8]
   1451c:	ldr	r2, [fp, #-8]
   14520:	ldr	r3, [fp, #-20]	; 0xffffffec
   14524:	cmp	r2, r3
   14528:	bcc	144e4 <plt_reset_offsets@@Base+0x20>
   1452c:	nop			; (mov r0, r0)
   14530:	add	sp, fp, #0
   14534:	pop	{fp}		; (ldr fp, [sp], #4)
   14538:	bx	lr

0001453c <plt_get_real_fn@@Base>:
   1453c:	push	{fp, lr}
   14540:	add	fp, sp, #4
   14544:	sub	sp, sp, #16
   14548:	str	r0, [fp, #-16]
   1454c:	str	r1, [fp, #-20]	; 0xffffffec
   14550:	ldr	r3, [fp, #-16]
   14554:	ldr	r3, [r3, #4]
   14558:	str	r3, [fp, #-8]
   1455c:	b	14594 <plt_get_real_fn@@Base+0x58>
   14560:	ldr	r1, [fp, #-20]	; 0xffffffec
   14564:	ldr	r0, [fp, #-8]
   14568:	bl	14254 <plt_get_lib@@Base+0x4c4>
   1456c:	str	r0, [fp, #-12]
   14570:	ldr	r3, [fp, #-12]
   14574:	cmp	r3, #0
   14578:	beq	14588 <plt_get_real_fn@@Base+0x4c>
   1457c:	ldr	r3, [fp, #-12]
   14580:	ldr	r3, [r3]
   14584:	b	145a4 <plt_get_real_fn@@Base+0x68>
   14588:	ldr	r3, [fp, #-8]
   1458c:	ldr	r3, [r3, #12]
   14590:	str	r3, [fp, #-8]
   14594:	ldr	r3, [fp, #-8]
   14598:	cmp	r3, #0
   1459c:	bne	14560 <plt_get_real_fn@@Base+0x24>
   145a0:	mov	r3, #0
   145a4:	mov	r0, r3
   145a8:	sub	sp, fp, #4
   145ac:	pop	{fp, pc}

000145b0 <mmk_stub_context@@Base>:
   145b0:	push	{fp}		; (str fp, [sp, #-4]!)
   145b4:	add	fp, sp, #0
   145b8:	sub	sp, sp, #12
   145bc:	str	r0, [fp, #-8]
   145c0:	ldr	r3, [fp, #-8]
   145c4:	cmp	r3, #0
   145c8:	bne	145d4 <mmk_stub_context@@Base+0x24>
   145cc:	mov	r3, #0
   145d0:	b	145dc <mmk_stub_context@@Base+0x2c>
   145d4:	ldr	r3, [fp, #-8]
   145d8:	ldr	r3, [r3, #12]
   145dc:	mov	r0, r3
   145e0:	add	sp, fp, #0
   145e4:	pop	{fp}		; (ldr fp, [sp], #4)
   145e8:	bx	lr

000145ec <mmk_stub_create_static@@Base>:
   145ec:	push	{r4, r5, fp, lr}
   145f0:	add	fp, sp, #12
   145f4:	sub	sp, sp, #40	; 0x28
   145f8:	str	r0, [fp, #-40]	; 0xffffffd8
   145fc:	str	r1, [fp, #-44]	; 0xffffffd4
   14600:	str	r2, [fp, #-48]	; 0xffffffd0
   14604:	str	r3, [fp, #-52]	; 0xffffffcc
   14608:	ldr	r4, [pc, #480]	; 147f0 <mmk_stub_create_static@@Base+0x204>
   1460c:	add	r4, pc, r4
   14610:	ldr	r3, [pc, #476]	; 147f4 <mmk_stub_create_static@@Base+0x208>
   14614:	add	r3, pc, r3
   14618:	mov	r0, r3
   1461c:	bl	11350 <__tls_get_addr@plt>
   14620:	mov	r2, r0
   14624:	mov	r3, #0
   14628:	str	r3, [r2]
   1462c:	ldr	r3, [pc, #452]	; 147f8 <mmk_stub_create_static@@Base+0x20c>
   14630:	add	r3, pc, r3
   14634:	mov	r0, r3
   14638:	bl	11350 <__tls_get_addr@plt>
   1463c:	mov	r2, r0
   14640:	mov	r3, #0
   14644:	str	r3, [r2]
   14648:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1464c:	bl	1535c <mmk_strlen@@Base>
   14650:	mov	r3, r0
   14654:	add	r3, r3, #1
   14658:	mov	r0, r3
   1465c:	bl	15410 <mmk_malloc@@Base>
   14660:	str	r0, [fp, #-20]	; 0xffffffec
   14664:	ldr	r3, [fp, #-20]	; 0xffffffec
   14668:	cmp	r3, #0
   1466c:	bne	14678 <mmk_stub_create_static@@Base+0x8c>
   14670:	mvn	r3, #11
   14674:	b	147e4 <mmk_stub_create_static@@Base+0x1f8>
   14678:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1467c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14680:	bl	15260 <mmk_strcpy@@Base>
   14684:	mov	r3, #0
   14688:	str	r3, [fp, #-16]
   1468c:	mov	r1, #64	; 0x40
   14690:	ldr	r0, [fp, #-20]	; 0xffffffec
   14694:	bl	151f8 <mmk_strchr@@Base>
   14698:	str	r0, [fp, #-24]	; 0xffffffe8
   1469c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146a0:	cmp	r3, #0
   146a4:	beq	146c0 <mmk_stub_create_static@@Base+0xd4>
   146a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146ac:	mov	r2, #0
   146b0:	strb	r2, [r3]
   146b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146b8:	add	r3, r3, #1
   146bc:	str	r3, [fp, #-16]
   146c0:	bl	13354 <mmk_plt_ctx@@Base>
   146c4:	mov	r3, r0
   146c8:	ldr	r1, [fp, #-16]
   146cc:	mov	r0, r3
   146d0:	bl	13d90 <plt_get_lib@@Base>
   146d4:	str	r0, [fp, #-28]	; 0xffffffe4
   146d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   146dc:	cmp	r3, #0
   146e0:	bne	146ec <mmk_stub_create_static@@Base+0x100>
   146e4:	mvn	r3, #1
   146e8:	b	147e4 <mmk_stub_create_static@@Base+0x1f8>
   146ec:	mov	r3, #0
   146f0:	str	r3, [fp, #-36]	; 0xffffffdc
   146f4:	sub	r3, fp, #36	; 0x24
   146f8:	mov	r2, r3
   146fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14700:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14704:	bl	1438c <plt_get_offsets@@Base>
   14708:	str	r0, [fp, #-32]	; 0xffffffe0
   1470c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14710:	cmp	r3, #0
   14714:	beq	14724 <mmk_stub_create_static@@Base+0x138>
   14718:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1471c:	cmp	r3, #0
   14720:	bne	1472c <mmk_stub_create_static@@Base+0x140>
   14724:	mvn	r3, #1
   14728:	b	147e4 <mmk_stub_create_static@@Base+0x1f8>
   1472c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14730:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14734:	mov	r0, r3
   14738:	mov	r3, #40	; 0x28
   1473c:	mov	r2, r3
   14740:	mov	r1, #0
   14744:	bl	11338 <memset@plt>
   14748:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1474c:	ldr	r2, [pc, #168]	; 147fc <mmk_stub_create_static@@Base+0x210>
   14750:	ldr	r2, [r4, r2]
   14754:	str	r2, [r3]
   14758:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1475c:	ldr	r2, [pc, #156]	; 14800 <mmk_stub_create_static@@Base+0x214>
   14760:	ldr	r2, [r4, r2]
   14764:	str	r2, [r3, #4]
   14768:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1476c:	ldr	r2, [pc, #144]	; 14804 <mmk_stub_create_static@@Base+0x218>
   14770:	ldr	r2, [r4, r2]
   14774:	str	r2, [r3, #8]
   14778:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1477c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14780:	str	r2, [r3, #12]
   14784:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14788:	ldr	r2, [fp, #-20]	; 0xffffffec
   1478c:	str	r2, [r3, #16]
   14790:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14794:	ldr	r2, [fp, #-16]
   14798:	str	r2, [r3, #20]
   1479c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147a4:	str	r2, [r3, #24]
   147a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147ac:	str	r5, [r3, #28]
   147b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   147b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   147b8:	bl	14a24 <create_trampoline@@Base>
   147bc:	mov	r2, r0
   147c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147c4:	str	r2, [r3, #32]
   147c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   147cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147d0:	ldr	r3, [r3, #32]
   147d4:	mov	r2, r3
   147d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147dc:	bl	14410 <plt_set_offsets@@Base>
   147e0:	mov	r3, #0
   147e4:	mov	r0, r3
   147e8:	sub	sp, fp, #12
   147ec:	pop	{r4, r5, fp, pc}
   147f0:	andeq	r2, r1, ip, ror #19
   147f4:	andeq	r2, r1, r8, asr sl
   147f8:	andeq	r2, r1, r4, asr #20
   147fc:	andeq	r0, r0, ip, asr #1
   14800:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14804:	strheq	r0, [r0], -ip

00014808 <mmk_stub_create@@Base>:
   14808:	push	{fp, lr}
   1480c:	add	fp, sp, #4
   14810:	sub	sp, sp, #24
   14814:	str	r0, [fp, #-16]
   14818:	str	r1, [fp, #-20]	; 0xffffffec
   1481c:	str	r2, [fp, #-24]	; 0xffffffe8
   14820:	bl	13274 <mmk_init@@Base>
   14824:	mov	r0, #40	; 0x28
   14828:	bl	15410 <mmk_malloc@@Base>
   1482c:	str	r0, [fp, #-8]
   14830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14834:	ldr	r2, [fp, #-20]	; 0xffffffec
   14838:	ldr	r1, [fp, #-16]
   1483c:	ldr	r0, [fp, #-8]
   14840:	bl	145ec <mmk_stub_create_static@@Base>
   14844:	str	r0, [fp, #-12]
   14848:	ldr	r3, [fp, #-12]
   1484c:	cmp	r3, #0
   14850:	bge	14874 <mmk_stub_create@@Base+0x6c>
   14854:	ldr	r0, [fp, #-8]
   14858:	bl	154a0 <mmk_free@@Base>
   1485c:	bl	11320 <__errno_location@plt>
   14860:	mov	r2, r0
   14864:	ldr	r3, [fp, #-12]
   14868:	str	r3, [r2]
   1486c:	mov	r3, #0
   14870:	str	r3, [fp, #-8]
   14874:	ldr	r3, [fp, #-8]
   14878:	mov	r0, r3
   1487c:	sub	sp, fp, #4
   14880:	pop	{fp, pc}

00014884 <mmk_stub_destroy_static@@Base>:
   14884:	push	{fp, lr}
   14888:	add	fp, sp, #4
   1488c:	sub	sp, sp, #8
   14890:	str	r0, [fp, #-8]
   14894:	ldr	r3, [fp, #-8]
   14898:	ldr	r2, [r3, #24]
   1489c:	ldr	r3, [fp, #-8]
   148a0:	ldr	r3, [r3, #28]
   148a4:	mov	r1, r3
   148a8:	mov	r0, r2
   148ac:	bl	144c4 <plt_reset_offsets@@Base>
   148b0:	ldr	r3, [fp, #-8]
   148b4:	ldr	r3, [r3, #24]
   148b8:	mov	r0, r3
   148bc:	bl	154a0 <mmk_free@@Base>
   148c0:	ldr	r3, [fp, #-8]
   148c4:	ldr	r3, [r3, #32]
   148c8:	mov	r0, r3
   148cc:	bl	14b88 <destroy_trampoline@@Base>
   148d0:	ldr	r3, [fp, #-8]
   148d4:	ldr	r3, [r3, #16]
   148d8:	mov	r0, r3
   148dc:	bl	154a0 <mmk_free@@Base>
   148e0:	nop			; (mov r0, r0)
   148e4:	sub	sp, fp, #4
   148e8:	pop	{fp, pc}

000148ec <mmk_stub_destroy@@Base>:
   148ec:	push	{fp, lr}
   148f0:	add	fp, sp, #4
   148f4:	sub	sp, sp, #8
   148f8:	str	r0, [fp, #-8]
   148fc:	ldr	r0, [fp, #-8]
   14900:	bl	14884 <mmk_stub_destroy_static@@Base>
   14904:	ldr	r0, [fp, #-8]
   14908:	bl	154a0 <mmk_free@@Base>
   1490c:	nop			; (mov r0, r0)
   14910:	sub	sp, fp, #4
   14914:	pop	{fp, pc}

00014918 <mmk_ask_ctx@@Base>:
   14918:	push	{fp, lr}
   1491c:	add	fp, sp, #4
   14920:	sub	sp, sp, #8
   14924:	str	r0, [fp, #-8]
   14928:	ldr	r3, [pc, #44]	; 1495c <mmk_ask_ctx@@Base+0x44>
   1492c:	add	r3, pc, r3
   14930:	mov	r0, r3
   14934:	bl	11350 <__tls_get_addr@plt>
   14938:	mov	r2, r0
   1493c:	mov	r3, #1
   14940:	str	r3, [r2]
   14944:	ldr	r3, [fp, #-8]
   14948:	blx	r3
   1494c:	mov	r3, r0
   14950:	mov	r0, r3
   14954:	sub	sp, fp, #4
   14958:	pop	{fp, pc}
   1495c:	andeq	r2, r1, r0, asr #14

00014960 <mmk_ctx_asked@@Base>:
   14960:	push	{fp, lr}
   14964:	add	fp, sp, #4
   14968:	sub	sp, sp, #8
   1496c:	ldr	r3, [pc, #64]	; 149b4 <mmk_ctx_asked@@Base+0x54>
   14970:	add	r3, pc, r3
   14974:	mov	r0, r3
   14978:	bl	11350 <__tls_get_addr@plt>
   1497c:	mov	r3, r0
   14980:	ldr	r3, [r3]
   14984:	str	r3, [fp, #-8]
   14988:	ldr	r3, [pc, #40]	; 149b8 <mmk_ctx_asked@@Base+0x58>
   1498c:	add	r3, pc, r3
   14990:	mov	r0, r3
   14994:	bl	11350 <__tls_get_addr@plt>
   14998:	mov	r2, r0
   1499c:	mov	r3, #0
   149a0:	str	r3, [r2]
   149a4:	ldr	r3, [fp, #-8]
   149a8:	mov	r0, r3
   149ac:	sub	sp, fp, #4
   149b0:	pop	{fp, pc}
   149b4:	strdeq	r2, [r1], -ip
   149b8:	andeq	r2, r1, r0, ror #13

000149bc <mmk_ctx@@Base>:
   149bc:	push	{fp, lr}
   149c0:	add	fp, sp, #4
   149c4:	ldr	r3, [pc, #24]	; 149e4 <mmk_ctx@@Base+0x28>
   149c8:	add	r3, pc, r3
   149cc:	mov	r0, r3
   149d0:	bl	11350 <__tls_get_addr@plt>
   149d4:	mov	r3, r0
   149d8:	ldr	r3, [r3]
   149dc:	mov	r0, r3
   149e0:	pop	{fp, pc}
   149e4:	andeq	r2, r1, ip, lsr #13

000149e8 <mmk_set_ctx@@Base>:
   149e8:	push	{fp, lr}
   149ec:	add	fp, sp, #4
   149f0:	sub	sp, sp, #8
   149f4:	str	r0, [fp, #-8]
   149f8:	ldr	r3, [pc, #32]	; 14a20 <mmk_set_ctx@@Base+0x38>
   149fc:	add	r3, pc, r3
   14a00:	mov	r0, r3
   14a04:	bl	11350 <__tls_get_addr@plt>
   14a08:	mov	r2, r0
   14a0c:	ldr	r3, [fp, #-8]
   14a10:	str	r3, [r2]
   14a14:	nop			; (mov r0, r0)
   14a18:	sub	sp, fp, #4
   14a1c:	pop	{fp, pc}
   14a20:	andeq	r2, r1, r8, ror r6

00014a24 <create_trampoline@@Base>:
   14a24:	push	{r4, fp, lr}
   14a28:	add	fp, sp, #8
   14a2c:	sub	sp, sp, #28
   14a30:	str	r0, [fp, #-24]	; 0xffffffe8
   14a34:	str	r1, [fp, #-28]	; 0xffffffe4
   14a38:	ldr	r4, [pc, #288]	; 14b60 <create_trampoline@@Base+0x13c>
   14a3c:	add	r4, pc, r4
   14a40:	ldr	r3, [pc, #284]	; 14b64 <create_trampoline@@Base+0x140>
   14a44:	ldr	r3, [r4, r3]
   14a48:	mov	r2, r3
   14a4c:	ldr	r3, [pc, #276]	; 14b68 <create_trampoline@@Base+0x144>
   14a50:	ldr	r3, [r4, r3]
   14a54:	sub	r3, r2, r3
   14a58:	str	r3, [fp, #-16]
   14a5c:	ldr	r3, [fp, #-16]
   14a60:	cmp	r3, #4096	; 0x1000
   14a64:	bcc	14a9c <create_trampoline@@Base+0x78>
   14a68:	ldr	r3, [pc, #252]	; 14b6c <create_trampoline@@Base+0x148>
   14a6c:	ldr	r3, [r4, r3]
   14a70:	ldr	r0, [r3]
   14a74:	ldr	r3, [pc, #244]	; 14b70 <create_trampoline@@Base+0x14c>
   14a78:	add	r3, pc, r3
   14a7c:	str	r3, [sp]
   14a80:	mov	r3, #45	; 0x2d
   14a84:	ldr	r2, [pc, #232]	; 14b74 <create_trampoline@@Base+0x150>
   14a88:	add	r2, pc, r2
   14a8c:	ldr	r1, [pc, #228]	; 14b78 <create_trampoline@@Base+0x154>
   14a90:	add	r1, pc, r1
   14a94:	bl	11314 <fprintf@plt>
   14a98:	bl	11368 <abort@plt>
   14a9c:	mov	r3, #0
   14aa0:	str	r3, [sp, #4]
   14aa4:	mvn	r3, #0
   14aa8:	str	r3, [sp]
   14aac:	mov	r3, #34	; 0x22
   14ab0:	mov	r2, #7
   14ab4:	mov	r1, #4096	; 0x1000
   14ab8:	mov	r0, #0
   14abc:	bl	112fc <mmap@plt>
   14ac0:	str	r0, [fp, #-20]	; 0xffffffec
   14ac4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ac8:	cmn	r3, #1
   14acc:	bne	14b04 <create_trampoline@@Base+0xe0>
   14ad0:	ldr	r3, [pc, #148]	; 14b6c <create_trampoline@@Base+0x148>
   14ad4:	ldr	r3, [r4, r3]
   14ad8:	ldr	r0, [r3]
   14adc:	ldr	r3, [pc, #152]	; 14b7c <create_trampoline@@Base+0x158>
   14ae0:	add	r3, pc, r3
   14ae4:	str	r3, [sp]
   14ae8:	mov	r3, #69	; 0x45
   14aec:	ldr	r2, [pc, #140]	; 14b80 <create_trampoline@@Base+0x15c>
   14af0:	add	r2, pc, r2
   14af4:	ldr	r1, [pc, #136]	; 14b84 <create_trampoline@@Base+0x160>
   14af8:	add	r1, pc, r1
   14afc:	bl	11314 <fprintf@plt>
   14b00:	bl	11368 <abort@plt>
   14b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b0c:	str	r2, [r3]
   14b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b14:	add	r3, r3, #4
   14b18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b1c:	str	r2, [r3]
   14b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b24:	add	r0, r3, #8
   14b28:	ldr	r2, [fp, #-16]
   14b2c:	ldr	r3, [pc, #52]	; 14b68 <create_trampoline@@Base+0x144>
   14b30:	ldr	r3, [r4, r3]
   14b34:	mov	r1, r3
   14b38:	bl	11290 <memcpy@plt>
   14b3c:	mov	r2, #5
   14b40:	mov	r1, #4096	; 0x1000
   14b44:	ldr	r0, [fp, #-20]	; 0xffffffec
   14b48:	bl	11278 <mprotect@plt>
   14b4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b50:	add	r3, r3, #8
   14b54:	mov	r0, r3
   14b58:	sub	sp, fp, #8
   14b5c:	pop	{r4, fp, pc}
   14b60:			; <UNDEFINED> instruction: 0x000125bc
   14b64:	muleq	r0, r8, r0
   14b68:	andeq	r0, r0, ip, lsr #1
   14b6c:	andeq	r0, r0, r4, lsr #1
   14b70:	andeq	r1, r0, r8, asr #10
   14b74:	andeq	r1, r0, r0, asr #9
   14b78:	andeq	r1, r0, r0, lsl r5
   14b7c:	strdeq	r1, [r0], -ip
   14b80:	andeq	r1, r0, r8, asr r4
   14b84:	andeq	r1, r0, r8, lsr #9

00014b88 <destroy_trampoline@@Base>:
   14b88:	push	{fp, lr}
   14b8c:	add	fp, sp, #4
   14b90:	sub	sp, sp, #8
   14b94:	str	r0, [fp, #-8]
   14b98:	ldr	r3, [fp, #-8]
   14b9c:	sub	r3, r3, #8
   14ba0:	mov	r1, #4096	; 0x1000
   14ba4:	mov	r0, r3
   14ba8:	bl	11344 <munmap@plt>
   14bac:	nop			; (mov r0, r0)
   14bb0:	sub	sp, fp, #4
   14bb4:	pop	{fp, pc}

00014bb8 <mmk_verify_set_times@@Base>:
   14bb8:	push	{fp, lr}
   14bbc:	add	fp, sp, #4
   14bc0:	sub	sp, sp, #8
   14bc4:	str	r0, [fp, #-8]
   14bc8:	ldr	r3, [pc, #32]	; 14bf0 <mmk_verify_set_times@@Base+0x38>
   14bcc:	add	r3, pc, r3
   14bd0:	mov	r0, r3
   14bd4:	bl	11350 <__tls_get_addr@plt>
   14bd8:	mov	r2, r0
   14bdc:	ldr	r3, [fp, #-8]
   14be0:	str	r3, [r2]
   14be4:	nop			; (mov r0, r0)
   14be8:	sub	sp, fp, #4
   14bec:	pop	{fp, pc}
   14bf0:			; <UNDEFINED> instruction: 0x000124b0

00014bf4 <mmk_verify_times@@Base>:
   14bf4:	push	{fp, lr}
   14bf8:	add	fp, sp, #4
   14bfc:	sub	sp, sp, #16
   14c00:	str	r0, [fp, #-16]
   14c04:	ldr	r3, [pc, #260]	; 14d10 <mmk_verify_times@@Base+0x11c>
   14c08:	add	r3, pc, r3
   14c0c:	mov	r0, r3
   14c10:	bl	11350 <__tls_get_addr@plt>
   14c14:	mov	r3, r0
   14c18:	ldr	r3, [r3]
   14c1c:	str	r3, [fp, #-8]
   14c20:	ldr	r3, [fp, #-16]
   14c24:	ldr	r3, [r3, #4]
   14c28:	cmp	r3, #0
   14c2c:	beq	14c48 <mmk_verify_times@@Base+0x54>
   14c30:	ldr	r3, [fp, #-8]
   14c34:	cmp	r3, #0
   14c38:	moveq	r3, #1
   14c3c:	movne	r3, #0
   14c40:	uxtb	r3, r3
   14c44:	b	14d04 <mmk_verify_times@@Base+0x110>
   14c48:	ldr	r3, [fp, #-16]
   14c4c:	ldr	r3, [r3, #8]
   14c50:	cmp	r3, #0
   14c54:	bne	14c68 <mmk_verify_times@@Base+0x74>
   14c58:	ldr	r3, [fp, #-16]
   14c5c:	ldr	r3, [r3, #12]
   14c60:	cmp	r3, #0
   14c64:	beq	14cc0 <mmk_verify_times@@Base+0xcc>
   14c68:	ldr	r3, [fp, #-16]
   14c6c:	ldr	r3, [r3, #12]
   14c70:	cmp	r3, #0
   14c74:	beq	14c84 <mmk_verify_times@@Base+0x90>
   14c78:	ldr	r3, [fp, #-16]
   14c7c:	ldr	r3, [r3, #12]
   14c80:	b	14c88 <mmk_verify_times@@Base+0x94>
   14c84:	ldr	r3, [fp, #-8]
   14c88:	str	r3, [fp, #-12]
   14c8c:	ldr	r3, [fp, #-16]
   14c90:	ldr	r2, [r3, #8]
   14c94:	ldr	r3, [fp, #-8]
   14c98:	cmp	r2, r3
   14c9c:	bhi	14cb8 <mmk_verify_times@@Base+0xc4>
   14ca0:	ldr	r2, [fp, #-8]
   14ca4:	ldr	r3, [fp, #-12]
   14ca8:	cmp	r2, r3
   14cac:	bhi	14cb8 <mmk_verify_times@@Base+0xc4>
   14cb0:	mov	r3, #1
   14cb4:	b	14d04 <mmk_verify_times@@Base+0x110>
   14cb8:	mov	r3, #0
   14cbc:	b	14d04 <mmk_verify_times@@Base+0x110>
   14cc0:	ldr	r3, [fp, #-16]
   14cc4:	ldr	r3, [r3, #20]
   14cc8:	cmp	r3, #0
   14ccc:	beq	14ce8 <mmk_verify_times@@Base+0xf4>
   14cd0:	ldr	r3, [fp, #-16]
   14cd4:	ldr	r3, [r3, #20]
   14cd8:	ldr	r0, [fp, #-8]
   14cdc:	blx	r3
   14ce0:	mov	r3, r0
   14ce4:	b	14d04 <mmk_verify_times@@Base+0x110>
   14ce8:	ldr	r3, [fp, #-16]
   14cec:	ldr	r2, [r3, #16]
   14cf0:	ldr	r3, [fp, #-8]
   14cf4:	cmp	r2, r3
   14cf8:	moveq	r3, #1
   14cfc:	movne	r3, #0
   14d00:	uxtb	r3, r3
   14d04:	mov	r0, r3
   14d08:	sub	sp, fp, #4
   14d0c:	pop	{fp, pc}
   14d10:	andeq	r2, r1, r4, ror r4
   14d14:	push	{fp, lr}
   14d18:	add	fp, sp, #4
   14d1c:	sub	sp, sp, #32
   14d20:	str	r0, [fp, #-24]	; 0xffffffe8
   14d24:	str	r1, [fp, #-28]	; 0xffffffe4
   14d28:	str	r2, [fp, #-32]	; 0xffffffe0
   14d2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d30:	add	r3, r3, #4
   14d34:	str	r3, [fp, #-28]	; 0xffffffe4
   14d38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d3c:	sub	r3, r3, #4
   14d40:	str	r3, [fp, #-32]	; 0xffffffe0
   14d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d48:	bl	138f0 <mmk_mock_params_begin@@Base>
   14d4c:	str	r0, [fp, #-8]
   14d50:	b	14db0 <mmk_verify_times@@Base+0x1bc>
   14d54:	ldr	r3, [fp, #-8]
   14d58:	add	r3, r3, #4
   14d5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14d60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d64:	mov	r0, r3
   14d68:	bl	15004 <mmk_memcmp@@Base>
   14d6c:	str	r0, [fp, #-12]
   14d70:	ldr	r3, [fp, #-12]
   14d74:	cmp	r3, #0
   14d78:	bne	14da0 <mmk_verify_times@@Base+0x1ac>
   14d7c:	ldr	r3, [fp, #-8]
   14d80:	str	r3, [fp, #-16]
   14d84:	ldr	r3, [fp, #-16]
   14d88:	ldr	r3, [r3]
   14d8c:	add	r2, r3, #1
   14d90:	ldr	r3, [fp, #-16]
   14d94:	str	r2, [r3]
   14d98:	mov	r3, #1
   14d9c:	b	14dc0 <mmk_verify_times@@Base+0x1cc>
   14da0:	ldr	r1, [fp, #-8]
   14da4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14da8:	bl	13944 <mmk_mock_params_next@@Base>
   14dac:	str	r0, [fp, #-8]
   14db0:	ldr	r3, [fp, #-8]
   14db4:	cmp	r3, #0
   14db8:	bne	14d54 <mmk_verify_times@@Base+0x160>
   14dbc:	mov	r3, #0
   14dc0:	mov	r0, r3
   14dc4:	sub	sp, fp, #4
   14dc8:	pop	{fp, pc}

00014dcc <mmk_verify_register_call@@Base>:
   14dcc:	push	{r4, fp, lr}
   14dd0:	add	fp, sp, #8
   14dd4:	sub	sp, sp, #28
   14dd8:	str	r0, [fp, #-24]	; 0xffffffe8
   14ddc:	str	r1, [fp, #-28]	; 0xffffffe4
   14de0:	ldr	r4, [pc, #508]	; 14fe4 <mmk_verify_register_call@@Base+0x218>
   14de4:	add	r4, pc, r4
   14de8:	bl	149bc <mmk_ctx@@Base>
   14dec:	mov	r3, r0
   14df0:	mov	r0, r3
   14df4:	bl	145b0 <mmk_stub_context@@Base>
   14df8:	str	r0, [fp, #-16]
   14dfc:	ldr	r3, [fp, #-16]
   14e00:	ldr	r3, [r3, #8]
   14e04:	cmp	r3, #0
   14e08:	bne	14e70 <mmk_verify_register_call@@Base+0xa4>
   14e0c:	mov	r0, #4096	; 0x1000
   14e10:	bl	15410 <mmk_malloc@@Base>
   14e14:	mov	r2, r0
   14e18:	ldr	r3, [fp, #-16]
   14e1c:	str	r2, [r3, #8]
   14e20:	ldr	r3, [fp, #-16]
   14e24:	ldr	r3, [r3, #8]
   14e28:	cmp	r3, #0
   14e2c:	bne	14e64 <mmk_verify_register_call@@Base+0x98>
   14e30:	ldr	r3, [pc, #432]	; 14fe8 <mmk_verify_register_call@@Base+0x21c>
   14e34:	ldr	r3, [r4, r3]
   14e38:	ldr	r0, [r3]
   14e3c:	ldr	r3, [pc, #424]	; 14fec <mmk_verify_register_call@@Base+0x220>
   14e40:	add	r3, pc, r3
   14e44:	str	r3, [sp]
   14e48:	mov	r3, #79	; 0x4f
   14e4c:	ldr	r2, [pc, #412]	; 14ff0 <mmk_verify_register_call@@Base+0x224>
   14e50:	add	r2, pc, r2
   14e54:	ldr	r1, [pc, #408]	; 14ff4 <mmk_verify_register_call@@Base+0x228>
   14e58:	add	r1, pc, r1
   14e5c:	bl	11314 <fprintf@plt>
   14e60:	bl	11368 <abort@plt>
   14e64:	ldr	r3, [fp, #-16]
   14e68:	mov	r2, #4096	; 0x1000
   14e6c:	str	r2, [r3, #16]
   14e70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e74:	mov	r2, r3
   14e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14e7c:	ldr	r0, [fp, #-16]
   14e80:	bl	14d14 <mmk_verify_times@@Base+0x120>
   14e84:	mov	r3, r0
   14e88:	cmp	r3, #0
   14e8c:	bne	14fd8 <mmk_verify_register_call@@Base+0x20c>
   14e90:	ldr	r3, [fp, #-16]
   14e94:	ldr	r2, [r3, #12]
   14e98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e9c:	add	r3, r2, r3
   14ea0:	add	r2, r3, #4
   14ea4:	ldr	r3, [fp, #-16]
   14ea8:	ldr	r3, [r3, #16]
   14eac:	cmp	r2, r3
   14eb0:	bcc	14f5c <mmk_verify_register_call@@Base+0x190>
   14eb4:	b	14ecc <mmk_verify_register_call@@Base+0x100>
   14eb8:	ldr	r3, [fp, #-16]
   14ebc:	ldr	r3, [r3, #16]
   14ec0:	add	r2, r3, #4096	; 0x1000
   14ec4:	ldr	r3, [fp, #-16]
   14ec8:	str	r2, [r3, #16]
   14ecc:	ldr	r3, [fp, #-16]
   14ed0:	ldr	r2, [r3, #12]
   14ed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14ed8:	add	r3, r2, r3
   14edc:	add	r2, r3, #4
   14ee0:	ldr	r3, [fp, #-16]
   14ee4:	ldr	r3, [r3, #16]
   14ee8:	cmp	r2, r3
   14eec:	bcs	14eb8 <mmk_verify_register_call@@Base+0xec>
   14ef0:	ldr	r3, [fp, #-16]
   14ef4:	ldr	r2, [r3, #8]
   14ef8:	ldr	r3, [fp, #-16]
   14efc:	ldr	r3, [r3, #16]
   14f00:	mov	r1, r3
   14f04:	mov	r0, r2
   14f08:	bl	15454 <mmk_realloc@@Base>
   14f0c:	mov	r2, r0
   14f10:	ldr	r3, [fp, #-16]
   14f14:	str	r2, [r3, #8]
   14f18:	ldr	r3, [fp, #-16]
   14f1c:	ldr	r3, [r3, #8]
   14f20:	cmp	r3, #0
   14f24:	bne	14f5c <mmk_verify_register_call@@Base+0x190>
   14f28:	ldr	r3, [pc, #184]	; 14fe8 <mmk_verify_register_call@@Base+0x21c>
   14f2c:	ldr	r3, [r4, r3]
   14f30:	ldr	r0, [r3]
   14f34:	ldr	r3, [pc, #188]	; 14ff8 <mmk_verify_register_call@@Base+0x22c>
   14f38:	add	r3, pc, r3
   14f3c:	str	r3, [sp]
   14f40:	mov	r3, #91	; 0x5b
   14f44:	ldr	r2, [pc, #176]	; 14ffc <mmk_verify_register_call@@Base+0x230>
   14f48:	add	r2, pc, r2
   14f4c:	ldr	r1, [pc, #172]	; 15000 <mmk_verify_register_call@@Base+0x234>
   14f50:	add	r1, pc, r1
   14f54:	bl	11314 <fprintf@plt>
   14f58:	bl	11368 <abort@plt>
   14f5c:	ldr	r3, [fp, #-16]
   14f60:	ldr	r2, [r3, #8]
   14f64:	ldr	r3, [fp, #-16]
   14f68:	ldr	r3, [r3, #12]
   14f6c:	add	r3, r2, r3
   14f70:	sub	r1, fp, #28
   14f74:	mov	r2, #4
   14f78:	mov	r0, r3
   14f7c:	bl	150b4 <mmk_memcpy@@Base>
   14f80:	ldr	r3, [fp, #-16]
   14f84:	ldr	r2, [r3, #8]
   14f88:	ldr	r3, [fp, #-16]
   14f8c:	ldr	r3, [r3, #12]
   14f90:	add	r3, r3, #4
   14f94:	add	r3, r2, r3
   14f98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14f9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14fa0:	mov	r0, r3
   14fa4:	bl	150b4 <mmk_memcpy@@Base>
   14fa8:	str	r0, [fp, #-20]	; 0xffffffec
   14fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fb0:	mov	r2, #1
   14fb4:	str	r2, [r3]
   14fb8:	ldr	r3, [fp, #-16]
   14fbc:	ldr	r2, [r3, #12]
   14fc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fc4:	add	r3, r2, r3
   14fc8:	add	r2, r3, #4
   14fcc:	ldr	r3, [fp, #-16]
   14fd0:	str	r2, [r3, #12]
   14fd4:	b	14fdc <mmk_verify_register_call@@Base+0x210>
   14fd8:	nop			; (mov r0, r0)
   14fdc:	sub	sp, fp, #8
   14fe0:	pop	{r4, fp, pc}
   14fe4:	andeq	r2, r1, r4, lsl r2
   14fe8:	andeq	r0, r0, r4, lsr #1
   14fec:	andeq	r1, r0, r4, lsr #4
   14ff0:	andeq	r1, r0, r0, lsr #3
   14ff4:	andeq	r1, r0, ip, ror #3
   14ff8:	andeq	r1, r0, ip, lsr #2
   14ffc:	andeq	r1, r0, r8, lsr #1
   15000:	strdeq	r1, [r0], -r4

00015004 <mmk_memcmp@@Base>:
   15004:	push	{fp}		; (str fp, [sp, #-4]!)
   15008:	add	fp, sp, #0
   1500c:	sub	sp, sp, #28
   15010:	str	r0, [fp, #-16]
   15014:	str	r1, [fp, #-20]	; 0xffffffec
   15018:	str	r2, [fp, #-24]	; 0xffffffe8
   1501c:	ldr	r3, [fp, #-16]
   15020:	str	r3, [fp, #-8]
   15024:	ldr	r3, [fp, #-20]	; 0xffffffec
   15028:	str	r3, [fp, #-12]
   1502c:	b	15094 <mmk_memcmp@@Base+0x90>
   15030:	ldr	r3, [fp, #-8]
   15034:	ldrb	r2, [r3]
   15038:	ldr	r3, [fp, #-12]
   1503c:	ldrb	r3, [r3]
   15040:	cmp	r2, r3
   15044:	beq	15070 <mmk_memcmp@@Base+0x6c>
   15048:	ldr	r3, [fp, #-8]
   1504c:	ldrb	r2, [r3]
   15050:	ldr	r3, [fp, #-12]
   15054:	ldrb	r3, [r3]
   15058:	cmp	r2, r3
   1505c:	bcs	15068 <mmk_memcmp@@Base+0x64>
   15060:	mvn	r3, #0
   15064:	b	150a4 <mmk_memcmp@@Base+0xa0>
   15068:	mov	r3, #1
   1506c:	b	150a4 <mmk_memcmp@@Base+0xa0>
   15070:	ldr	r3, [fp, #-8]
   15074:	add	r3, r3, #1
   15078:	str	r3, [fp, #-8]
   1507c:	ldr	r3, [fp, #-12]
   15080:	add	r3, r3, #1
   15084:	str	r3, [fp, #-12]
   15088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1508c:	sub	r3, r3, #1
   15090:	str	r3, [fp, #-24]	; 0xffffffe8
   15094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15098:	cmp	r3, #0
   1509c:	bne	15030 <mmk_memcmp@@Base+0x2c>
   150a0:	mov	r3, #0
   150a4:	mov	r0, r3
   150a8:	add	sp, fp, #0
   150ac:	pop	{fp}		; (ldr fp, [sp], #4)
   150b0:	bx	lr

000150b4 <mmk_memcpy@@Base>:
   150b4:	push	{fp}		; (str fp, [sp, #-4]!)
   150b8:	add	fp, sp, #0
   150bc:	sub	sp, sp, #28
   150c0:	str	r0, [fp, #-16]
   150c4:	str	r1, [fp, #-20]	; 0xffffffec
   150c8:	str	r2, [fp, #-24]	; 0xffffffe8
   150cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   150d0:	str	r3, [fp, #-8]
   150d4:	ldr	r3, [fp, #-16]
   150d8:	str	r3, [fp, #-12]
   150dc:	b	15114 <mmk_memcpy@@Base+0x60>
   150e0:	ldr	r3, [fp, #-8]
   150e4:	ldrb	r2, [r3]
   150e8:	ldr	r3, [fp, #-12]
   150ec:	strb	r2, [r3]
   150f0:	ldr	r3, [fp, #-12]
   150f4:	add	r3, r3, #1
   150f8:	str	r3, [fp, #-12]
   150fc:	ldr	r3, [fp, #-8]
   15100:	add	r3, r3, #1
   15104:	str	r3, [fp, #-8]
   15108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1510c:	sub	r3, r3, #1
   15110:	str	r3, [fp, #-24]	; 0xffffffe8
   15114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15118:	cmp	r3, #0
   1511c:	bne	150e0 <mmk_memcpy@@Base+0x2c>
   15120:	ldr	r3, [fp, #-16]
   15124:	mov	r0, r3
   15128:	add	sp, fp, #0
   1512c:	pop	{fp}		; (ldr fp, [sp], #4)
   15130:	bx	lr

00015134 <mmk_strneq@@Base>:
   15134:	push	{fp}		; (str fp, [sp, #-4]!)
   15138:	add	fp, sp, #0
   1513c:	sub	sp, sp, #20
   15140:	str	r0, [fp, #-8]
   15144:	str	r1, [fp, #-12]
   15148:	str	r2, [fp, #-16]
   1514c:	b	15194 <mmk_strneq@@Base+0x60>
   15150:	ldr	r3, [fp, #-8]
   15154:	ldrb	r2, [r3]
   15158:	ldr	r3, [fp, #-12]
   1515c:	ldrb	r3, [r3]
   15160:	cmp	r2, r3
   15164:	beq	15170 <mmk_strneq@@Base+0x3c>
   15168:	mov	r3, #0
   1516c:	b	151e8 <mmk_strneq@@Base+0xb4>
   15170:	ldr	r3, [fp, #-8]
   15174:	add	r3, r3, #1
   15178:	str	r3, [fp, #-8]
   1517c:	ldr	r3, [fp, #-12]
   15180:	add	r3, r3, #1
   15184:	str	r3, [fp, #-12]
   15188:	ldr	r3, [fp, #-16]
   1518c:	sub	r3, r3, #1
   15190:	str	r3, [fp, #-16]
   15194:	ldr	r3, [fp, #-8]
   15198:	ldrb	r3, [r3]
   1519c:	cmp	r3, #0
   151a0:	beq	151c0 <mmk_strneq@@Base+0x8c>
   151a4:	ldr	r3, [fp, #-12]
   151a8:	ldrb	r3, [r3]
   151ac:	cmp	r3, #0
   151b0:	beq	151c0 <mmk_strneq@@Base+0x8c>
   151b4:	ldr	r3, [fp, #-16]
   151b8:	cmp	r3, #0
   151bc:	bne	15150 <mmk_strneq@@Base+0x1c>
   151c0:	ldr	r3, [fp, #-16]
   151c4:	cmp	r3, #0
   151c8:	beq	151dc <mmk_strneq@@Base+0xa8>
   151cc:	ldr	r3, [fp, #-12]
   151d0:	ldrb	r3, [r3]
   151d4:	cmp	r3, #0
   151d8:	bne	151e4 <mmk_strneq@@Base+0xb0>
   151dc:	mov	r3, #1
   151e0:	b	151e8 <mmk_strneq@@Base+0xb4>
   151e4:	mov	r3, #0
   151e8:	mov	r0, r3
   151ec:	add	sp, fp, #0
   151f0:	pop	{fp}		; (ldr fp, [sp], #4)
   151f4:	bx	lr

000151f8 <mmk_strchr@@Base>:
   151f8:	push	{fp}		; (str fp, [sp, #-4]!)
   151fc:	add	fp, sp, #0
   15200:	sub	sp, sp, #12
   15204:	str	r0, [fp, #-8]
   15208:	str	r1, [fp, #-12]
   1520c:	b	1523c <mmk_strchr@@Base+0x44>
   15210:	ldr	r3, [fp, #-8]
   15214:	ldrb	r3, [r3]
   15218:	mov	r2, r3
   1521c:	ldr	r3, [fp, #-12]
   15220:	cmp	r2, r3
   15224:	bne	15230 <mmk_strchr@@Base+0x38>
   15228:	ldr	r3, [fp, #-8]
   1522c:	b	15250 <mmk_strchr@@Base+0x58>
   15230:	ldr	r3, [fp, #-8]
   15234:	add	r3, r3, #1
   15238:	str	r3, [fp, #-8]
   1523c:	ldr	r3, [fp, #-8]
   15240:	ldrb	r3, [r3]
   15244:	cmp	r3, #0
   15248:	bne	15210 <mmk_strchr@@Base+0x18>
   1524c:	mov	r3, #0
   15250:	mov	r0, r3
   15254:	add	sp, fp, #0
   15258:	pop	{fp}		; (ldr fp, [sp], #4)
   1525c:	bx	lr

00015260 <mmk_strcpy@@Base>:
   15260:	push	{fp}		; (str fp, [sp, #-4]!)
   15264:	add	fp, sp, #0
   15268:	sub	sp, sp, #12
   1526c:	str	r0, [fp, #-8]
   15270:	str	r1, [fp, #-12]
   15274:	b	152a0 <mmk_strcpy@@Base+0x40>
   15278:	ldr	r3, [fp, #-12]
   1527c:	ldrb	r2, [r3]
   15280:	ldr	r3, [fp, #-8]
   15284:	strb	r2, [r3]
   15288:	ldr	r3, [fp, #-8]
   1528c:	add	r3, r3, #1
   15290:	str	r3, [fp, #-8]
   15294:	ldr	r3, [fp, #-12]
   15298:	add	r3, r3, #1
   1529c:	str	r3, [fp, #-12]
   152a0:	ldr	r3, [fp, #-12]
   152a4:	ldrb	r3, [r3]
   152a8:	cmp	r3, #0
   152ac:	bne	15278 <mmk_strcpy@@Base+0x18>
   152b0:	ldr	r3, [fp, #-8]
   152b4:	mov	r2, #0
   152b8:	strb	r2, [r3]
   152bc:	ldr	r3, [fp, #-8]
   152c0:	mov	r0, r3
   152c4:	add	sp, fp, #0
   152c8:	pop	{fp}		; (ldr fp, [sp], #4)
   152cc:	bx	lr

000152d0 <mmk_strncpy@@Base>:
   152d0:	push	{fp}		; (str fp, [sp, #-4]!)
   152d4:	add	fp, sp, #0
   152d8:	sub	sp, sp, #20
   152dc:	str	r0, [fp, #-8]
   152e0:	str	r1, [fp, #-12]
   152e4:	str	r2, [fp, #-16]
   152e8:	b	15320 <mmk_strncpy@@Base+0x50>
   152ec:	ldr	r3, [fp, #-12]
   152f0:	ldrb	r2, [r3]
   152f4:	ldr	r3, [fp, #-8]
   152f8:	strb	r2, [r3]
   152fc:	ldr	r3, [fp, #-8]
   15300:	add	r3, r3, #1
   15304:	str	r3, [fp, #-8]
   15308:	ldr	r3, [fp, #-12]
   1530c:	add	r3, r3, #1
   15310:	str	r3, [fp, #-12]
   15314:	ldr	r3, [fp, #-16]
   15318:	sub	r3, r3, #1
   1531c:	str	r3, [fp, #-16]
   15320:	ldr	r3, [fp, #-12]
   15324:	ldrb	r3, [r3]
   15328:	cmp	r3, #0
   1532c:	beq	1533c <mmk_strncpy@@Base+0x6c>
   15330:	ldr	r3, [fp, #-16]
   15334:	cmp	r3, #0
   15338:	bne	152ec <mmk_strncpy@@Base+0x1c>
   1533c:	ldr	r3, [fp, #-8]
   15340:	mov	r2, #0
   15344:	strb	r2, [r3]
   15348:	ldr	r3, [fp, #-8]
   1534c:	mov	r0, r3
   15350:	add	sp, fp, #0
   15354:	pop	{fp}		; (ldr fp, [sp], #4)
   15358:	bx	lr

0001535c <mmk_strlen@@Base>:
   1535c:	push	{fp}		; (str fp, [sp, #-4]!)
   15360:	add	fp, sp, #0
   15364:	sub	sp, sp, #20
   15368:	str	r0, [fp, #-16]
   1536c:	mov	r3, #0
   15370:	str	r3, [fp, #-8]
   15374:	b	15390 <mmk_strlen@@Base+0x34>
   15378:	ldr	r3, [fp, #-8]
   1537c:	add	r3, r3, #1
   15380:	str	r3, [fp, #-8]
   15384:	ldr	r3, [fp, #-16]
   15388:	add	r3, r3, #1
   1538c:	str	r3, [fp, #-16]
   15390:	ldr	r3, [fp, #-16]
   15394:	ldrb	r3, [r3]
   15398:	cmp	r3, #0
   1539c:	bne	15378 <mmk_strlen@@Base+0x1c>
   153a0:	ldr	r3, [fp, #-8]
   153a4:	mov	r0, r3
   153a8:	add	sp, fp, #0
   153ac:	pop	{fp}		; (ldr fp, [sp], #4)
   153b0:	bx	lr

000153b4 <mmk_isspace@@Base>:
   153b4:	push	{fp}		; (str fp, [sp, #-4]!)
   153b8:	add	fp, sp, #0
   153bc:	sub	sp, sp, #12
   153c0:	str	r0, [fp, #-8]
   153c4:	ldr	r3, [fp, #-8]
   153c8:	cmp	r3, #32
   153cc:	beq	153f4 <mmk_isspace@@Base+0x40>
   153d0:	ldr	r3, [fp, #-8]
   153d4:	cmp	r3, #9
   153d8:	beq	153f4 <mmk_isspace@@Base+0x40>
   153dc:	ldr	r3, [fp, #-8]
   153e0:	cmp	r3, #13
   153e4:	beq	153f4 <mmk_isspace@@Base+0x40>
   153e8:	ldr	r3, [fp, #-8]
   153ec:	cmp	r3, #10
   153f0:	bne	153fc <mmk_isspace@@Base+0x48>
   153f4:	mov	r3, #1
   153f8:	b	15400 <mmk_isspace@@Base+0x4c>
   153fc:	mov	r3, #0
   15400:	mov	r0, r3
   15404:	add	sp, fp, #0
   15408:	pop	{fp}		; (ldr fp, [sp], #4)
   1540c:	bx	lr

00015410 <mmk_malloc@@Base>:
   15410:	push	{fp, lr}
   15414:	add	fp, sp, #4
   15418:	sub	sp, sp, #8
   1541c:	str	r0, [fp, #-8]
   15420:	ldr	r2, [pc, #36]	; 1544c <mmk_malloc@@Base+0x3c>
   15424:	add	r2, pc, r2
   15428:	ldr	r3, [pc, #32]	; 15450 <mmk_malloc@@Base+0x40>
   1542c:	ldr	r3, [r2, r3]
   15430:	ldr	r3, [r3]
   15434:	ldr	r0, [fp, #-8]
   15438:	blx	r3
   1543c:	mov	r3, r0
   15440:	mov	r0, r3
   15444:	sub	sp, fp, #4
   15448:	pop	{fp, pc}
   1544c:	ldrdeq	r1, [r1], -r4
   15450:	andeq	r0, r0, r4, asr #1

00015454 <mmk_realloc@@Base>:
   15454:	push	{fp, lr}
   15458:	add	fp, sp, #4
   1545c:	sub	sp, sp, #8
   15460:	str	r0, [fp, #-8]
   15464:	str	r1, [fp, #-12]
   15468:	ldr	r2, [pc, #40]	; 15498 <mmk_realloc@@Base+0x44>
   1546c:	add	r2, pc, r2
   15470:	ldr	r3, [pc, #36]	; 1549c <mmk_realloc@@Base+0x48>
   15474:	ldr	r3, [r2, r3]
   15478:	ldr	r3, [r3]
   1547c:	ldr	r1, [fp, #-12]
   15480:	ldr	r0, [fp, #-8]
   15484:	blx	r3
   15488:	mov	r3, r0
   1548c:	mov	r0, r3
   15490:	sub	sp, fp, #4
   15494:	pop	{fp, pc}
   15498:	andeq	r1, r1, ip, lsl #23
   1549c:	strheq	r0, [r0], -r4

000154a0 <mmk_free@@Base>:
   154a0:	push	{fp, lr}
   154a4:	add	fp, sp, #4
   154a8:	sub	sp, sp, #8
   154ac:	str	r0, [fp, #-8]
   154b0:	ldr	r2, [pc, #32]	; 154d8 <mmk_free@@Base+0x38>
   154b4:	add	r2, pc, r2
   154b8:	ldr	r3, [pc, #28]	; 154dc <mmk_free@@Base+0x3c>
   154bc:	ldr	r3, [r2, r3]
   154c0:	ldr	r3, [r3]
   154c4:	ldr	r0, [fp, #-8]
   154c8:	blx	r3
   154cc:	nop			; (mov r0, r0)
   154d0:	sub	sp, fp, #4
   154d4:	pop	{fp, pc}
   154d8:	andeq	r1, r1, r4, asr #22
   154dc:	andeq	r0, r0, r0, asr #1

000154e0 <mmk_init_vital_functions@@Base>:
   154e0:	push	{r4, fp, lr}
   154e4:	add	fp, sp, #8
   154e8:	sub	sp, sp, #20
   154ec:	str	r0, [fp, #-16]
   154f0:	ldr	r4, [pc, #372]	; 1566c <mmk_init_vital_functions@@Base+0x18c>
   154f4:	add	r4, pc, r4
   154f8:	mov	r0, #0
   154fc:	bl	112cc <malloc@plt>
   15500:	mov	r3, r0
   15504:	mov	r1, #0
   15508:	mov	r0, r3
   1550c:	bl	112a8 <realloc@plt>
   15510:	mov	r3, r0
   15514:	mov	r0, r3
   15518:	bl	11284 <free@plt>
   1551c:	ldr	r3, [pc, #332]	; 15670 <mmk_init_vital_functions@@Base+0x190>
   15520:	add	r3, pc, r3
   15524:	mov	r1, r3
   15528:	ldr	r0, [fp, #-16]
   1552c:	bl	1453c <plt_get_real_fn@@Base>
   15530:	mov	r2, r0
   15534:	ldr	r3, [pc, #312]	; 15674 <mmk_init_vital_functions@@Base+0x194>
   15538:	ldr	r3, [r4, r3]
   1553c:	str	r2, [r3]
   15540:	ldr	r3, [pc, #300]	; 15674 <mmk_init_vital_functions@@Base+0x194>
   15544:	ldr	r3, [r4, r3]
   15548:	ldr	r3, [r3]
   1554c:	cmp	r3, #0
   15550:	bne	15588 <mmk_init_vital_functions@@Base+0xa8>
   15554:	ldr	r3, [pc, #284]	; 15678 <mmk_init_vital_functions@@Base+0x198>
   15558:	ldr	r3, [r4, r3]
   1555c:	ldr	r0, [r3]
   15560:	ldr	r3, [pc, #276]	; 1567c <mmk_init_vital_functions@@Base+0x19c>
   15564:	add	r3, pc, r3
   15568:	str	r3, [sp]
   1556c:	mov	r3, #88	; 0x58
   15570:	ldr	r2, [pc, #264]	; 15680 <mmk_init_vital_functions@@Base+0x1a0>
   15574:	add	r2, pc, r2
   15578:	ldr	r1, [pc, #260]	; 15684 <mmk_init_vital_functions@@Base+0x1a4>
   1557c:	add	r1, pc, r1
   15580:	bl	11314 <fprintf@plt>
   15584:	bl	11368 <abort@plt>
   15588:	ldr	r3, [pc, #248]	; 15688 <mmk_init_vital_functions@@Base+0x1a8>
   1558c:	add	r3, pc, r3
   15590:	mov	r1, r3
   15594:	ldr	r0, [fp, #-16]
   15598:	bl	1453c <plt_get_real_fn@@Base>
   1559c:	mov	r2, r0
   155a0:	ldr	r3, [pc, #228]	; 1568c <mmk_init_vital_functions@@Base+0x1ac>
   155a4:	ldr	r3, [r4, r3]
   155a8:	str	r2, [r3]
   155ac:	ldr	r3, [pc, #216]	; 1568c <mmk_init_vital_functions@@Base+0x1ac>
   155b0:	ldr	r3, [r4, r3]
   155b4:	ldr	r3, [r3]
   155b8:	cmp	r3, #0
   155bc:	bne	155f4 <mmk_init_vital_functions@@Base+0x114>
   155c0:	ldr	r3, [pc, #176]	; 15678 <mmk_init_vital_functions@@Base+0x198>
   155c4:	ldr	r3, [r4, r3]
   155c8:	ldr	r0, [r3]
   155cc:	ldr	r3, [pc, #188]	; 15690 <mmk_init_vital_functions@@Base+0x1b0>
   155d0:	add	r3, pc, r3
   155d4:	str	r3, [sp]
   155d8:	mov	r3, #89	; 0x59
   155dc:	ldr	r2, [pc, #176]	; 15694 <mmk_init_vital_functions@@Base+0x1b4>
   155e0:	add	r2, pc, r2
   155e4:	ldr	r1, [pc, #172]	; 15698 <mmk_init_vital_functions@@Base+0x1b8>
   155e8:	add	r1, pc, r1
   155ec:	bl	11314 <fprintf@plt>
   155f0:	bl	11368 <abort@plt>
   155f4:	ldr	r3, [pc, #160]	; 1569c <mmk_init_vital_functions@@Base+0x1bc>
   155f8:	add	r3, pc, r3
   155fc:	mov	r1, r3
   15600:	ldr	r0, [fp, #-16]
   15604:	bl	1453c <plt_get_real_fn@@Base>
   15608:	mov	r2, r0
   1560c:	ldr	r3, [pc, #140]	; 156a0 <mmk_init_vital_functions@@Base+0x1c0>
   15610:	ldr	r3, [r4, r3]
   15614:	str	r2, [r3]
   15618:	ldr	r3, [pc, #128]	; 156a0 <mmk_init_vital_functions@@Base+0x1c0>
   1561c:	ldr	r3, [r4, r3]
   15620:	ldr	r3, [r3]
   15624:	cmp	r3, #0
   15628:	bne	15660 <mmk_init_vital_functions@@Base+0x180>
   1562c:	ldr	r3, [pc, #68]	; 15678 <mmk_init_vital_functions@@Base+0x198>
   15630:	ldr	r3, [r4, r3]
   15634:	ldr	r0, [r3]
   15638:	ldr	r3, [pc, #100]	; 156a4 <mmk_init_vital_functions@@Base+0x1c4>
   1563c:	add	r3, pc, r3
   15640:	str	r3, [sp]
   15644:	mov	r3, #90	; 0x5a
   15648:	ldr	r2, [pc, #88]	; 156a8 <mmk_init_vital_functions@@Base+0x1c8>
   1564c:	add	r2, pc, r2
   15650:	ldr	r1, [pc, #84]	; 156ac <mmk_init_vital_functions@@Base+0x1cc>
   15654:	add	r1, pc, r1
   15658:	bl	11314 <fprintf@plt>
   1565c:	bl	11368 <abort@plt>
   15660:	nop			; (mov r0, r0)
   15664:	sub	sp, fp, #8
   15668:	pop	{r4, fp, pc}
   1566c:	andeq	r1, r1, r4, lsl #22
   15670:	andeq	r0, r0, r4, asr fp
   15674:	andeq	r0, r0, r4, asr #1
   15678:	andeq	r0, r0, r4, lsr #1
   1567c:	andeq	r0, r0, ip, lsl #23
   15680:	andeq	r0, r0, r8, lsl #22
   15684:	andeq	r0, r0, r4, asr fp
   15688:	muleq	r0, ip, fp
   1568c:	strheq	r0, [r0], -r4
   15690:	andeq	r0, r0, r0, ror #22
   15694:	muleq	r0, ip, sl
   15698:	andeq	r0, r0, r8, ror #21
   1569c:	andeq	r0, r0, r0, ror fp
   156a0:	andeq	r0, r0, r0, asr #1
   156a4:	andeq	r0, r0, r4, lsr fp
   156a8:	andeq	r0, r0, r0, lsr sl
   156ac:	andeq	r0, r0, ip, ror sl

000156b0 <mmk_when_init@@Base>:
   156b0:	push	{fp, lr}
   156b4:	add	fp, sp, #4
   156b8:	sub	sp, sp, #8
   156bc:	str	r0, [fp, #-8]
   156c0:	ldr	r3, [pc, #32]	; 156e8 <mmk_when_init@@Base+0x38>
   156c4:	add	r3, pc, r3
   156c8:	mov	r0, r3
   156cc:	bl	11350 <__tls_get_addr@plt>
   156d0:	mov	r2, r0
   156d4:	ldr	r3, [fp, #-8]
   156d8:	str	r3, [r2]
   156dc:	nop			; (mov r0, r0)
   156e0:	sub	sp, fp, #4
   156e4:	pop	{fp, pc}
   156e8:	andeq	r1, r1, r0, asr #19

000156ec <mmk_when_get_result@@Base>:
   156ec:	push	{fp, lr}
   156f0:	add	fp, sp, #4
   156f4:	ldr	r3, [pc, #24]	; 15714 <mmk_when_get_result@@Base+0x28>
   156f8:	add	r3, pc, r3
   156fc:	mov	r0, r3
   15700:	bl	11350 <__tls_get_addr@plt>
   15704:	mov	r3, r0
   15708:	ldr	r3, [r3]
   1570c:	mov	r0, r3
   15710:	pop	{fp, pc}
   15714:	andeq	r1, r1, ip, lsl #19

00015718 <mmk_when_impl@@Base>:
   15718:	push	{fp, lr}
   1571c:	add	fp, sp, #4
   15720:	sub	sp, sp, #16
   15724:	str	r0, [fp, #-16]
   15728:	str	r1, [fp, #-20]	; 0xffffffec
   1572c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15730:	str	r3, [fp, #-8]
   15734:	bl	134cc <mmk_matcher_ctx@@Base>
   15738:	mov	r2, r0
   1573c:	ldr	r3, [fp, #-8]
   15740:	str	r2, [r3]
   15744:	ldr	r3, [fp, #-16]
   15748:	ldr	r2, [r3]
   1574c:	ldr	r3, [fp, #-8]
   15750:	str	r2, [r3, #4]
   15754:	ldr	r3, [fp, #-16]
   15758:	ldr	r2, [fp, #-8]
   1575c:	str	r2, [r3]
   15760:	nop			; (mov r0, r0)
   15764:	sub	sp, fp, #4
   15768:	pop	{fp, pc}

0001576c <mmk_trampoline@@Base>:
   1576c:	sub	ip, pc, #8
   15770:	push	{r0, r1, r2, r3}
   15774:	push	{ip, lr}
   15778:	ldr	r0, [ip, #-8]
   1577c:	ldr	ip, [r0, #4]
   15780:	blx	ip
   15784:	pop	{ip, lr}
   15788:	push	{ip, lr}
   1578c:	ldr	ip, [ip, #-8]
   15790:	ldr	ip, [ip]
   15794:	blx	ip
   15798:	cmp	r0, #0
   1579c:	bne	157ac <mmk_trampoline@@Base+0x40>
   157a0:	pop	{ip, lr}
   157a4:	pop	{r0, r1, r2, r3}
   157a8:	ldr	pc, [ip, #-4]
   157ac:	pop	{ip, lr}
   157b0:	pop	{r0, r1, r2, r3}
   157b4:	push	{ip, lr}
   157b8:	ldr	ip, [ip, #-8]
   157bc:	ldr	ip, [ip, #8]
   157c0:	blx	ip
   157c4:	pop	{ip, pc}

000157c8 <mmk_trampoline_end@@Base>:
   157c8:	nop			; (mov r0, r0)
   157cc:	subs	r2, r1, #1
   157d0:	bxeq	lr
   157d4:	bcc	159ac <mmk_trampoline_end@@Base+0x1e4>
   157d8:	cmp	r0, r1
   157dc:	bls	15990 <mmk_trampoline_end@@Base+0x1c8>
   157e0:	tst	r1, r2
   157e4:	beq	1599c <mmk_trampoline_end@@Base+0x1d4>
   157e8:	clz	r3, r0
   157ec:	clz	r2, r1
   157f0:	sub	r3, r2, r3
   157f4:	rsbs	r3, r3, #31
   157f8:	addne	r3, r3, r3, lsl #1
   157fc:	mov	r2, #0
   15800:	addne	pc, pc, r3, lsl #2
   15804:	nop			; (mov r0, r0)
   15808:	cmp	r0, r1, lsl #31
   1580c:	adc	r2, r2, r2
   15810:	subcs	r0, r0, r1, lsl #31
   15814:	cmp	r0, r1, lsl #30
   15818:	adc	r2, r2, r2
   1581c:	subcs	r0, r0, r1, lsl #30
   15820:	cmp	r0, r1, lsl #29
   15824:	adc	r2, r2, r2
   15828:	subcs	r0, r0, r1, lsl #29
   1582c:	cmp	r0, r1, lsl #28
   15830:	adc	r2, r2, r2
   15834:	subcs	r0, r0, r1, lsl #28
   15838:	cmp	r0, r1, lsl #27
   1583c:	adc	r2, r2, r2
   15840:	subcs	r0, r0, r1, lsl #27
   15844:	cmp	r0, r1, lsl #26
   15848:	adc	r2, r2, r2
   1584c:	subcs	r0, r0, r1, lsl #26
   15850:	cmp	r0, r1, lsl #25
   15854:	adc	r2, r2, r2
   15858:	subcs	r0, r0, r1, lsl #25
   1585c:	cmp	r0, r1, lsl #24
   15860:	adc	r2, r2, r2
   15864:	subcs	r0, r0, r1, lsl #24
   15868:	cmp	r0, r1, lsl #23
   1586c:	adc	r2, r2, r2
   15870:	subcs	r0, r0, r1, lsl #23
   15874:	cmp	r0, r1, lsl #22
   15878:	adc	r2, r2, r2
   1587c:	subcs	r0, r0, r1, lsl #22
   15880:	cmp	r0, r1, lsl #21
   15884:	adc	r2, r2, r2
   15888:	subcs	r0, r0, r1, lsl #21
   1588c:	cmp	r0, r1, lsl #20
   15890:	adc	r2, r2, r2
   15894:	subcs	r0, r0, r1, lsl #20
   15898:	cmp	r0, r1, lsl #19
   1589c:	adc	r2, r2, r2
   158a0:	subcs	r0, r0, r1, lsl #19
   158a4:	cmp	r0, r1, lsl #18
   158a8:	adc	r2, r2, r2
   158ac:	subcs	r0, r0, r1, lsl #18
   158b0:	cmp	r0, r1, lsl #17
   158b4:	adc	r2, r2, r2
   158b8:	subcs	r0, r0, r1, lsl #17
   158bc:	cmp	r0, r1, lsl #16
   158c0:	adc	r2, r2, r2
   158c4:	subcs	r0, r0, r1, lsl #16
   158c8:	cmp	r0, r1, lsl #15
   158cc:	adc	r2, r2, r2
   158d0:	subcs	r0, r0, r1, lsl #15
   158d4:	cmp	r0, r1, lsl #14
   158d8:	adc	r2, r2, r2
   158dc:	subcs	r0, r0, r1, lsl #14
   158e0:	cmp	r0, r1, lsl #13
   158e4:	adc	r2, r2, r2
   158e8:	subcs	r0, r0, r1, lsl #13
   158ec:	cmp	r0, r1, lsl #12
   158f0:	adc	r2, r2, r2
   158f4:	subcs	r0, r0, r1, lsl #12
   158f8:	cmp	r0, r1, lsl #11
   158fc:	adc	r2, r2, r2
   15900:	subcs	r0, r0, r1, lsl #11
   15904:	cmp	r0, r1, lsl #10
   15908:	adc	r2, r2, r2
   1590c:	subcs	r0, r0, r1, lsl #10
   15910:	cmp	r0, r1, lsl #9
   15914:	adc	r2, r2, r2
   15918:	subcs	r0, r0, r1, lsl #9
   1591c:	cmp	r0, r1, lsl #8
   15920:	adc	r2, r2, r2
   15924:	subcs	r0, r0, r1, lsl #8
   15928:	cmp	r0, r1, lsl #7
   1592c:	adc	r2, r2, r2
   15930:	subcs	r0, r0, r1, lsl #7
   15934:	cmp	r0, r1, lsl #6
   15938:	adc	r2, r2, r2
   1593c:	subcs	r0, r0, r1, lsl #6
   15940:	cmp	r0, r1, lsl #5
   15944:	adc	r2, r2, r2
   15948:	subcs	r0, r0, r1, lsl #5
   1594c:	cmp	r0, r1, lsl #4
   15950:	adc	r2, r2, r2
   15954:	subcs	r0, r0, r1, lsl #4
   15958:	cmp	r0, r1, lsl #3
   1595c:	adc	r2, r2, r2
   15960:	subcs	r0, r0, r1, lsl #3
   15964:	cmp	r0, r1, lsl #2
   15968:	adc	r2, r2, r2
   1596c:	subcs	r0, r0, r1, lsl #2
   15970:	cmp	r0, r1, lsl #1
   15974:	adc	r2, r2, r2
   15978:	subcs	r0, r0, r1, lsl #1
   1597c:	cmp	r0, r1
   15980:	adc	r2, r2, r2
   15984:	subcs	r0, r0, r1
   15988:	mov	r0, r2
   1598c:	bx	lr
   15990:	moveq	r0, #1
   15994:	movne	r0, #0
   15998:	bx	lr
   1599c:	clz	r2, r1
   159a0:	rsb	r2, r2, #31
   159a4:	lsr	r0, r0, r2
   159a8:	bx	lr
   159ac:	cmp	r0, #0
   159b0:	mvnne	r0, #0
   159b4:	b	159d8 <mmk_trampoline_end@@Base+0x210>
   159b8:	cmp	r1, #0
   159bc:	beq	159ac <mmk_trampoline_end@@Base+0x1e4>
   159c0:	push	{r0, r1, lr}
   159c4:	bl	157cc <mmk_trampoline_end@@Base+0x4>
   159c8:	pop	{r1, r2, lr}
   159cc:	mul	r3, r2, r0
   159d0:	sub	r1, r1, r3
   159d4:	bx	lr
   159d8:	push	{r1, lr}
   159dc:	mov	r0, #8
   159e0:	bl	11260 <raise@plt>
   159e4:	pop	{r1, pc}

000159e8 <__libc_csu_init@@Base>:
   159e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   159ec:	mov	r7, r0
   159f0:	ldr	r6, [pc, #72]	; 15a40 <__libc_csu_init@@Base+0x58>
   159f4:	ldr	r5, [pc, #72]	; 15a44 <__libc_csu_init@@Base+0x5c>
   159f8:	add	r6, pc, r6
   159fc:	add	r5, pc, r5
   15a00:	sub	r6, r6, r5
   15a04:	mov	r8, r1
   15a08:	mov	r9, r2
   15a0c:	bl	11234 <strstr@plt-0x20>
   15a10:	asrs	r6, r6, #2
   15a14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a18:	mov	r4, #0
   15a1c:	add	r4, r4, #1
   15a20:	ldr	r3, [r5], #4
   15a24:	mov	r2, r9
   15a28:	mov	r1, r8
   15a2c:	mov	r0, r7
   15a30:	blx	r3
   15a34:	cmp	r6, r4
   15a38:	bne	15a1c <__libc_csu_init@@Base+0x34>
   15a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15a40:	strdeq	r1, [r1], -r8
   15a44:	strdeq	r1, [r1], -r0

00015a48 <__libc_csu_fini@@Base>:
   15a48:	bx	lr

Disassembly of section .fini:

00015a4c <.fini>:
   15a4c:	push	{r3, lr}
   15a50:	pop	{r3, pc}
