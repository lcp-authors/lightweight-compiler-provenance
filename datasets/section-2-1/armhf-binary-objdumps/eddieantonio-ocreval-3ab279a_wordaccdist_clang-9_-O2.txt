
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

000107e0 <.init>:
   107e0:	push	{r3, lr}
   107e4:	bl	1095c <abort@plt+0x48>
   107e8:	pop	{r3, pc}

Disassembly of section .plt:

000107ec <calloc@plt-0x14>:
   107ec:	push	{lr}		; (str lr, [sp, #-4]!)
   107f0:	ldr	lr, [pc, #4]	; 107fc <calloc@plt-0x4>
   107f4:	add	lr, pc, lr
   107f8:	ldr	pc, [lr, #8]!
   107fc:	andeq	r2, r1, r4, lsl #16

00010800 <calloc@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2052]!	; 0x804

0001080c <strcmp@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2044]!	; 0x7fc

00010818 <strtol@plt>:
   10818:	add	ip, pc, #0, 12
   1081c:	add	ip, ip, #73728	; 0x12000
   10820:	ldr	pc, [ip, #2036]!	; 0x7f4

00010824 <fopen@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #73728	; 0x12000
   1082c:	ldr	pc, [ip, #2028]!	; 0x7ec

00010830 <free@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #73728	; 0x12000
   10838:	ldr	pc, [ip, #2020]!	; 0x7e4

0001083c <fgets@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #73728	; 0x12000
   10844:	ldr	pc, [ip, #2012]!	; 0x7dc

00010848 <strdup@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #73728	; 0x12000
   10850:	ldr	pc, [ip, #2004]!	; 0x7d4

00010854 <unlink@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #73728	; 0x12000
   1085c:	ldr	pc, [ip, #1996]!	; 0x7cc

00010860 <__xstat@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #73728	; 0x12000
   10868:	ldr	pc, [ip, #1988]!	; 0x7c4

0001086c <fwrite@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #73728	; 0x12000
   10874:	ldr	pc, [ip, #1980]!	; 0x7bc

00010878 <__libc_start_main@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #73728	; 0x12000
   10880:	ldr	pc, [ip, #1972]!	; 0x7b4

00010884 <__sysv_signal@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #73728	; 0x12000
   1088c:	ldr	pc, [ip, #1964]!	; 0x7ac

00010890 <__gmon_start__@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #73728	; 0x12000
   10898:	ldr	pc, [ip, #1956]!	; 0x7a4

0001089c <getpid@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #73728	; 0x12000
   108a4:	ldr	pc, [ip, #1948]!	; 0x79c

000108a8 <exit@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #73728	; 0x12000
   108b0:	ldr	pc, [ip, #1940]!	; 0x794

000108b4 <bcmp@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #73728	; 0x12000
   108bc:	ldr	pc, [ip, #1932]!	; 0x78c

000108c0 <strlen@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #73728	; 0x12000
   108c8:	ldr	pc, [ip, #1924]!	; 0x784

000108cc <fprintf@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #73728	; 0x12000
   108d4:	ldr	pc, [ip, #1916]!	; 0x77c

000108d8 <__isoc99_sscanf@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #73728	; 0x12000
   108e0:	ldr	pc, [ip, #1908]!	; 0x774

000108e4 <fclose@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #73728	; 0x12000
   108ec:	ldr	pc, [ip, #1900]!	; 0x76c

000108f0 <fputc@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #73728	; 0x12000
   108f8:	ldr	pc, [ip, #1892]!	; 0x764

000108fc <sprintf@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #73728	; 0x12000
   10904:	ldr	pc, [ip, #1884]!	; 0x75c

00010908 <strncmp@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #73728	; 0x12000
   10910:	ldr	pc, [ip, #1876]!	; 0x754

00010914 <abort@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #73728	; 0x12000
   1091c:	ldr	pc, [ip, #1868]!	; 0x74c

Disassembly of section .text:

00010920 <error@@Base-0x7e8>:
   10920:	mov	fp, #0
   10924:	mov	lr, #0
   10928:	pop	{r1}		; (ldr r1, [sp], #4)
   1092c:	mov	r2, sp
   10930:	push	{r2}		; (str r2, [sp, #-4]!)
   10934:	push	{r0}		; (str r0, [sp, #-4]!)
   10938:	ldr	ip, [pc, #16]	; 10950 <abort@plt+0x3c>
   1093c:	push	{ip}		; (str ip, [sp, #-4]!)
   10940:	ldr	r0, [pc, #12]	; 10954 <abort@plt+0x40>
   10944:	ldr	r3, [pc, #12]	; 10958 <abort@plt+0x44>
   10948:	bl	10878 <__libc_start_main@plt>
   1094c:	bl	10914 <abort@plt>
   10950:	andeq	r2, r1, r8, asr r7
   10954:	andeq	r0, r1, r4, asr sl
   10958:	strdeq	r2, [r1], -r8
   1095c:	ldr	r3, [pc, #20]	; 10978 <abort@plt+0x64>
   10960:	ldr	r2, [pc, #20]	; 1097c <abort@plt+0x68>
   10964:	add	r3, pc, r3
   10968:	ldr	r2, [r3, r2]
   1096c:	cmp	r2, #0
   10970:	bxeq	lr
   10974:	b	10890 <__gmon_start__@plt>
   10978:	muleq	r1, r4, r6
   1097c:	andeq	r0, r0, r8, ror r0
   10980:	ldr	r0, [pc, #24]	; 109a0 <abort@plt+0x8c>
   10984:	ldr	r3, [pc, #24]	; 109a4 <abort@plt+0x90>
   10988:	cmp	r3, r0
   1098c:	bxeq	lr
   10990:	ldr	r3, [pc, #16]	; 109a8 <abort@plt+0x94>
   10994:	cmp	r3, #0
   10998:	bxeq	lr
   1099c:	bx	r3
   109a0:	andeq	r3, r2, r8, lsr #1
   109a4:	andeq	r3, r2, r8, lsr #1
   109a8:	andeq	r0, r0, r0
   109ac:	ldr	r0, [pc, #36]	; 109d8 <abort@plt+0xc4>
   109b0:	ldr	r1, [pc, #36]	; 109dc <abort@plt+0xc8>
   109b4:	sub	r1, r1, r0
   109b8:	asr	r1, r1, #2
   109bc:	add	r1, r1, r1, lsr #31
   109c0:	asrs	r1, r1, #1
   109c4:	bxeq	lr
   109c8:	ldr	r3, [pc, #16]	; 109e0 <abort@plt+0xcc>
   109cc:	cmp	r3, #0
   109d0:	bxeq	lr
   109d4:	bx	r3
   109d8:	andeq	r3, r2, r8, lsr #1
   109dc:	andeq	r3, r2, r8, lsr #1
   109e0:	andeq	r0, r0, r0
   109e4:	push	{r4, lr}
   109e8:	ldr	r4, [pc, #24]	; 10a08 <abort@plt+0xf4>
   109ec:	ldrb	r3, [r4]
   109f0:	cmp	r3, #0
   109f4:	popne	{r4, pc}
   109f8:	bl	10980 <abort@plt+0x6c>
   109fc:	mov	r3, #1
   10a00:	strb	r3, [r4]
   10a04:	pop	{r4, pc}
   10a08:	andeq	r3, r2, r8, lsr #1
   10a0c:	b	109ac <abort@plt+0x98>
   10a10:	push	{r4, r5, r6, sl, fp, lr}
   10a14:	add	fp, sp, #16
   10a18:	ldr	r4, [pc, #44]	; 10a4c <abort@plt+0x138>
   10a1c:	mov	r1, r0
   10a20:	ldr	r4, [pc, r4]
   10a24:	ldm	r4, {r5, r6}
   10a28:	mov	r0, r4
   10a2c:	bl	113b0 <error@@Base+0x2a8>
   10a30:	ldm	r4, {r0, r2}
   10a34:	sub	r2, r2, r6
   10a38:	sub	r1, r0, r5
   10a3c:	ldr	r0, [pc, #12]	; 10a50 <abort@plt+0x13c>
   10a40:	ldr	r0, [pc, r0]
   10a44:	pop	{r4, r5, r6, sl, fp, lr}
   10a48:	b	10af8 <abort@plt+0x1e4>
   10a4c:	andeq	r2, r1, r8, asr r6
   10a50:	andeq	r2, r1, r4, asr #12
   10a54:	push	{fp, lr}
   10a58:	mov	fp, sp
   10a5c:	sub	sp, sp, #8
   10a60:	str	r0, [sp, #4]
   10a64:	add	r0, sp, #4
   10a68:	mov	r3, #0
   10a6c:	mov	r9, r1
   10a70:	mov	r7, #0
   10a74:	ldr	r2, [pc, #108]	; 10ae8 <abort@plt+0x1d4>
   10a78:	add	r2, pc, r2
   10a7c:	bl	10e80 <abort@plt+0x56c>
   10a80:	ldr	r0, [sp, #4]
   10a84:	cmp	r0, #1
   10a88:	blt	10ad4 <abort@plt+0x1c0>
   10a8c:	ldr	r5, [pc, #88]	; 10aec <abort@plt+0x1d8>
   10a90:	ldr	r5, [pc, r5]
   10a94:	ldr	r8, [pc, #84]	; 10af0 <abort@plt+0x1dc>
   10a98:	ldr	r8, [pc, r8]
   10a9c:	ldr	r1, [r9, r7, lsl #2]
   10aa0:	ldr	r6, [r5]
   10aa4:	ldr	r4, [r5, #4]
   10aa8:	mov	r0, r5
   10aac:	bl	113b0 <error@@Base+0x2a8>
   10ab0:	ldm	r5, {r0, r2}
   10ab4:	sub	r2, r2, r4
   10ab8:	sub	r1, r0, r6
   10abc:	mov	r0, r8
   10ac0:	bl	10af8 <abort@plt+0x1e4>
   10ac4:	ldr	r0, [sp, #4]
   10ac8:	add	r7, r7, #1
   10acc:	cmp	r7, r0
   10ad0:	blt	10a9c <abort@plt+0x188>
   10ad4:	ldr	r0, [pc, #24]	; 10af4 <abort@plt+0x1e0>
   10ad8:	mov	r1, #0
   10adc:	ldr	r0, [pc, r0]
   10ae0:	bl	10b80 <abort@plt+0x26c>
   10ae4:	bl	110c4 <abort@plt+0x7b0>
   10ae8:	andeq	r1, r0, r8, ror #25
   10aec:	andeq	r2, r1, r8, ror #11
   10af0:	andeq	r2, r1, ip, ror #11
   10af4:	andeq	r2, r1, r8, lsr #11
   10af8:	cmp	r1, #0
   10afc:	bxeq	lr
   10b00:	push	{fp, lr}
   10b04:	mov	fp, sp
   10b08:	sub	r2, r1, r2
   10b0c:	vldr	d16, [pc, #100]	; 10b78 <abort@plt+0x264>
   10b10:	vmov	s2, r1
   10b14:	vmov	s0, r2
   10b18:	vcvt.f64.s32	d17, s0
   10b1c:	vcvt.f64.s32	d18, s2
   10b20:	vmul.f64	d16, d17, d16
   10b24:	vdiv.f64	d16, d16, d18
   10b28:	vcmpe.f64	d16, #0.0
   10b2c:	vmrs	APSR_nzcv, fpscr
   10b30:	blt	10b64 <abort@plt+0x250>
   10b34:	mov	r2, #0
   10b38:	sxth	ip, r2
   10b3c:	add	r2, r2, #1
   10b40:	ldr	r3, [r0, ip, lsl #2]
   10b44:	add	lr, r3, r1
   10b48:	sxth	r3, r2
   10b4c:	str	lr, [r0, ip, lsl #2]
   10b50:	vmov	s0, r3
   10b54:	vcvt.f64.s32	d17, s0
   10b58:	vcmpe.f64	d16, d17
   10b5c:	vmrs	APSR_nzcv, fpscr
   10b60:	bge	10b38 <abort@plt+0x224>
   10b64:	ldr	r2, [r0, #404]	; 0x194
   10b68:	add	r1, r2, r1
   10b6c:	str	r1, [r0, #404]	; 0x194
   10b70:	pop	{fp, lr}
   10b74:	bx	lr
   10b78:	andeq	r0, r0, r0
   10b7c:	subsmi	r0, r9, r0
   10b80:	push	{r4, r5, r6, r7, fp, lr}
   10b84:	add	fp, sp, #16
   10b88:	vpush	{d8}
   10b8c:	sub	sp, sp, #8
   10b90:	mov	r4, r0
   10b94:	ldr	r0, [r0, #404]	; 0x194
   10b98:	cmp	r0, #0
   10b9c:	beq	10c18 <abort@plt+0x304>
   10ba0:	ldr	r2, [pc, #136]	; 10c30 <abort@plt+0x31c>
   10ba4:	mov	r0, r1
   10ba8:	add	r2, pc, r2
   10bac:	mov	r1, r2
   10bb0:	bl	10ce0 <abort@plt+0x3cc>
   10bb4:	ldr	r7, [pc, #120]	; 10c34 <abort@plt+0x320>
   10bb8:	vldr	d8, [pc, #104]	; 10c28 <abort@plt+0x314>
   10bbc:	mov	r5, r0
   10bc0:	mov	r6, #0
   10bc4:	add	r7, pc, r7
   10bc8:	add	r0, r4, r6, lsl #2
   10bcc:	vldr	s2, [r4, #404]	; 0x194
   10bd0:	mov	r1, r7
   10bd4:	mov	r2, r6
   10bd8:	vldr	s0, [r0]
   10bdc:	mov	r0, r5
   10be0:	vcvt.f64.s32	d16, s0
   10be4:	vcvt.f64.s32	d17, s2
   10be8:	vmul.f64	d16, d16, d8
   10bec:	vdiv.f64	d16, d16, d17
   10bf0:	vstr	d16, [sp]
   10bf4:	bl	108cc <fprintf@plt>
   10bf8:	add	r6, r6, #1
   10bfc:	cmp	r6, #101	; 0x65
   10c00:	bne	10bc8 <abort@plt+0x2b4>
   10c04:	mov	r0, r5
   10c08:	sub	sp, fp, #24
   10c0c:	vpop	{d8}
   10c10:	pop	{r4, r5, r6, r7, fp, lr}
   10c14:	b	10d68 <abort@plt+0x454>
   10c18:	sub	sp, fp, #24
   10c1c:	vpop	{d8}
   10c20:	pop	{r4, r5, r6, r7, fp, pc}
   10c24:	nop	{0}
   10c28:	andeq	r0, r0, r0
   10c2c:	subsmi	r0, r9, r0
   10c30:	andeq	r1, r0, r4, ror #23
   10c34:	andeq	r1, r0, sl, asr #23
   10c38:	push	{fp, lr}
   10c3c:	mov	fp, sp
   10c40:	bl	10800 <calloc@plt>
   10c44:	cmp	r0, #0
   10c48:	popne	{fp, pc}
   10c4c:	ldr	r0, [pc, #4]	; 10c58 <abort@plt+0x344>
   10c50:	add	r0, pc, r0
   10c54:	bl	11108 <error@@Base>
   10c58:	andeq	r1, r0, r9, asr #22
   10c5c:	push	{r4, r5, r6, sl, fp, lr}
   10c60:	add	fp, sp, #16
   10c64:	ldrb	r3, [r0]
   10c68:	ldrb	ip, [r1]
   10c6c:	mov	r2, r0
   10c70:	mov	r0, #0
   10c74:	cmp	r3, #0
   10c78:	beq	10cb8 <abort@plt+0x3a4>
   10c7c:	add	r6, r2, #1
   10c80:	add	lr, r1, #1
   10c84:	mov	r2, #0
   10c88:	uxtb	r4, ip
   10c8c:	uxtb	r5, r3
   10c90:	cmp	r5, r4
   10c94:	bne	10cc8 <abort@plt+0x3b4>
   10c98:	ldrb	r3, [r6, r2]
   10c9c:	ldrb	ip, [lr, r2]
   10ca0:	add	r2, r2, #1
   10ca4:	cmp	r3, #0
   10ca8:	bne	10c88 <abort@plt+0x374>
   10cac:	cmp	ip, #0
   10cb0:	bne	10cc4 <abort@plt+0x3b0>
   10cb4:	pop	{r4, r5, r6, sl, fp, pc}
   10cb8:	mov	r2, #0
   10cbc:	cmp	ip, #0
   10cc0:	beq	10cb4 <abort@plt+0x3a0>
   10cc4:	mov	r3, #0
   10cc8:	ldrb	r1, [r1, r2]
   10ccc:	uxtb	r2, r3
   10cd0:	mov	r0, #1
   10cd4:	cmp	r2, r1
   10cd8:	mvncc	r0, #0
   10cdc:	pop	{r4, r5, r6, sl, fp, pc}
   10ce0:	push	{r4, r5, fp, lr}
   10ce4:	add	fp, sp, #8
   10ce8:	mov	r5, r1
   10cec:	cmp	r0, #0
   10cf0:	beq	10d24 <abort@plt+0x410>
   10cf4:	mov	r1, r5
   10cf8:	mov	r4, r0
   10cfc:	bl	10824 <fopen@plt>
   10d00:	cmp	r0, #0
   10d04:	popne	{r4, r5, fp, pc}
   10d08:	ldrb	r0, [r5]
   10d0c:	cmp	r0, #119	; 0x77
   10d10:	bne	10d48 <abort@plt+0x434>
   10d14:	ldr	r0, [pc, #72]	; 10d64 <abort@plt+0x450>
   10d18:	mov	r1, r4
   10d1c:	add	r0, pc, r0
   10d20:	bl	11158 <error@@Base+0x50>
   10d24:	ldrb	r0, [r5]
   10d28:	ldr	r1, [pc, #40]	; 10d58 <abort@plt+0x444>
   10d2c:	ldr	r1, [pc, r1]
   10d30:	ldr	r2, [pc, #36]	; 10d5c <abort@plt+0x448>
   10d34:	cmp	r0, #114	; 0x72
   10d38:	ldr	r2, [pc, r2]
   10d3c:	moveq	r2, r1
   10d40:	ldr	r0, [r2]
   10d44:	pop	{r4, r5, fp, pc}
   10d48:	ldr	r0, [pc, #16]	; 10d60 <abort@plt+0x44c>
   10d4c:	mov	r1, r4
   10d50:	add	r0, pc, r0
   10d54:	bl	11158 <error@@Base+0x50>
   10d58:	andeq	r2, r1, r4, asr r3
   10d5c:	andeq	r2, r1, r0, asr r3
   10d60:	andeq	r1, r0, r9, ror sl
   10d64:	muleq	r0, r7, sl
   10d68:	ldr	r1, [pc, #40]	; 10d98 <abort@plt+0x484>
   10d6c:	ldr	r1, [pc, r1]
   10d70:	ldr	r1, [r1]
   10d74:	cmp	r1, r0
   10d78:	bxeq	lr
   10d7c:	ldr	r1, [pc, #24]	; 10d9c <abort@plt+0x488>
   10d80:	ldr	r1, [pc, r1]
   10d84:	ldr	r1, [r1]
   10d88:	cmp	r1, r0
   10d8c:	beq	10d94 <abort@plt+0x480>
   10d90:	b	108e4 <fclose@plt>
   10d94:	bx	lr
   10d98:	andeq	r2, r1, r4, lsl r3
   10d9c:	andeq	r2, r1, r8, lsl #6
   10da0:	push	{fp, lr}
   10da4:	mov	fp, sp
   10da8:	sub	sp, sp, #88	; 0x58
   10dac:	mov	r1, r0
   10db0:	mov	r2, sp
   10db4:	mov	r0, #3
   10db8:	bl	10860 <__xstat@plt>
   10dbc:	clz	r0, r0
   10dc0:	lsr	r0, r0, #5
   10dc4:	mov	sp, fp
   10dc8:	pop	{fp, pc}
   10dcc:	push	{r4, r5, fp, lr}
   10dd0:	add	fp, sp, #8
   10dd4:	sub	sp, sp, #104	; 0x68
   10dd8:	ldr	r0, [pc, #92]	; 10e3c <abort@plt+0x528>
   10ddc:	add	r0, pc, r0
   10de0:	ldrh	r1, [r0]
   10de4:	add	r5, r1, #1
   10de8:	strh	r5, [r0]
   10dec:	ldr	r0, [pc, #76]	; 10e40 <abort@plt+0x52c>
   10df0:	ldr	r0, [pc, r0]
   10df4:	ldr	r4, [r0]
   10df8:	bl	1089c <getpid@plt>
   10dfc:	mov	r3, r0
   10e00:	sxth	r0, r5
   10e04:	add	r5, sp, #4
   10e08:	mov	r2, r4
   10e0c:	str	r0, [sp]
   10e10:	mov	r0, r5
   10e14:	ldr	r1, [pc, #40]	; 10e44 <abort@plt+0x530>
   10e18:	add	r1, pc, r1
   10e1c:	bl	108fc <sprintf@plt>
   10e20:	mov	r0, r5
   10e24:	bl	10848 <strdup@plt>
   10e28:	mov	r4, r0
   10e2c:	bl	10854 <unlink@plt>
   10e30:	mov	r0, r4
   10e34:	sub	sp, fp, #8
   10e38:	pop	{r4, r5, fp, pc}
   10e3c:	andeq	r2, r1, r6, asr #5
   10e40:	andeq	r2, r1, r4, lsl #5
   10e44:	ldrdeq	r1, [r0], -sl
   10e48:	push	{r4, sl, fp, lr}
   10e4c:	add	fp, sp, #8
   10e50:	mov	r4, r0
   10e54:	bl	108c0 <strlen@plt>
   10e58:	sub	r0, r0, #1
   10e5c:	sxth	r0, r0
   10e60:	cmp	r0, #0
   10e64:	bmi	10e74 <abort@plt+0x560>
   10e68:	ldrb	r1, [r4, r0]
   10e6c:	cmp	r1, #47	; 0x2f
   10e70:	bne	10e58 <abort@plt+0x544>
   10e74:	add	r0, r0, r4
   10e78:	add	r0, r0, #1
   10e7c:	pop	{r4, sl, fp, pc}
   10e80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e84:	add	fp, sp, #28
   10e88:	sub	sp, sp, #12
   10e8c:	stmib	sp, {r0, r1}
   10e90:	mov	r6, r3
   10e94:	str	r2, [sp]
   10e98:	ldr	r4, [r1]
   10e9c:	mov	r0, r4
   10ea0:	bl	108c0 <strlen@plt>
   10ea4:	sub	r0, r0, #1
   10ea8:	sxth	r0, r0
   10eac:	cmp	r0, #0
   10eb0:	bmi	10ec0 <abort@plt+0x5ac>
   10eb4:	ldrb	r1, [r4, r0]
   10eb8:	cmp	r1, #47	; 0x2f
   10ebc:	bne	10ea4 <abort@plt+0x590>
   10ec0:	ldr	r1, [pc, #484]	; 110ac <abort@plt+0x798>
   10ec4:	add	r0, r0, r4
   10ec8:	add	r0, r0, #1
   10ecc:	ldr	r1, [pc, r1]
   10ed0:	str	r0, [r1]
   10ed4:	mov	r0, #2
   10ed8:	ldr	r4, [pc, #464]	; 110b0 <abort@plt+0x79c>
   10edc:	add	r4, pc, r4
   10ee0:	mov	r1, r4
   10ee4:	bl	10884 <__sysv_signal@plt>
   10ee8:	mov	r0, #15
   10eec:	mov	r1, r4
   10ef0:	bl	10884 <__sysv_signal@plt>
   10ef4:	ldr	r0, [sp, #4]
   10ef8:	ldr	r5, [r0]
   10efc:	cmp	r5, #1
   10f00:	bne	10f18 <abort@plt+0x604>
   10f04:	ldr	r0, [pc, #424]	; 110b4 <abort@plt+0x7a0>
   10f08:	ldr	r0, [pc, r0]
   10f0c:	ldrb	r0, [r0]
   10f10:	cmp	r0, #0
   10f14:	bne	11094 <abort@plt+0x780>
   10f18:	ldr	ip, [sp, #8]
   10f1c:	mov	r8, #0
   10f20:	cmp	r5, #2
   10f24:	blt	11070 <abort@plt+0x75c>
   10f28:	mov	r8, #0
   10f2c:	mov	r7, #1
   10f30:	mov	r9, #1
   10f34:	ldr	r4, [ip, r7, lsl #2]
   10f38:	ldrb	r0, [r4]
   10f3c:	cmp	r0, #45	; 0x2d
   10f40:	bne	11018 <abort@plt+0x704>
   10f44:	ldrb	sl, [r4, #1]
   10f48:	cmp	sl, #0
   10f4c:	beq	11018 <abort@plt+0x704>
   10f50:	mov	r0, r4
   10f54:	bl	108c0 <strlen@plt>
   10f58:	mov	r2, r0
   10f5c:	ldr	r0, [pc, #340]	; 110b8 <abort@plt+0x7a4>
   10f60:	mov	r1, r4
   10f64:	add	r0, pc, r0
   10f68:	bl	10908 <strncmp@plt>
   10f6c:	cmp	r0, #0
   10f70:	beq	11094 <abort@plt+0x780>
   10f74:	ldr	ip, [sp, #8]
   10f78:	add	r1, r7, #1
   10f7c:	mov	r0, #0
   10f80:	cmp	r1, r5
   10f84:	ldrlt	r0, [ip, r1, lsl #2]
   10f88:	cmp	r6, #0
   10f8c:	ldrbne	r2, [r6]
   10f90:	cmpne	r2, #0
   10f94:	beq	11084 <abort@plt+0x770>
   10f98:	mov	r1, #0
   10f9c:	cmp	sl, r2
   10fa0:	beq	10fc8 <abort@plt+0x6b4>
   10fa4:	mov	r2, #1
   10fa8:	sxth	r1, r2
   10fac:	add	r3, r1, r1, lsl #1
   10fb0:	ldrb	r3, [r6, r3, lsl #2]
   10fb4:	cmp	r3, #0
   10fb8:	beq	11084 <abort@plt+0x770>
   10fbc:	add	r2, r2, #1
   10fc0:	cmp	sl, r3
   10fc4:	bne	10fa8 <abort@plt+0x694>
   10fc8:	add	r1, r1, r1, lsl #1
   10fcc:	add	r3, r6, r1, lsl #2
   10fd0:	ldr	r1, [r3, #4]
   10fd4:	cmp	r1, #0
   10fd8:	beq	11038 <abort@plt+0x724>
   10fdc:	mov	r2, r4
   10fe0:	cmp	r0, #0
   10fe4:	ldrb	r7, [r2, #2]!
   10fe8:	cmpeq	r7, #0
   10fec:	beq	11038 <abort@plt+0x724>
   10ff0:	ldr	r3, [r1]
   10ff4:	cmp	r3, #0
   10ff8:	bne	1109c <abort@plt+0x788>
   10ffc:	cmp	r7, #0
   11000:	movne	r0, r2
   11004:	str	r0, [r1]
   11008:	ldrb	r0, [r2]
   1100c:	cmp	r0, #0
   11010:	addeq	r9, r9, #1
   11014:	b	11024 <abort@plt+0x710>
   11018:	sxth	r0, r8
   1101c:	add	r8, r8, #1
   11020:	str	r4, [ip, r0, lsl #2]
   11024:	add	r9, r9, #1
   11028:	sxth	r7, r9
   1102c:	cmp	r5, r7
   11030:	bgt	10f34 <abort@plt+0x620>
   11034:	b	11070 <abort@plt+0x75c>
   11038:	ldr	r0, [r3, #8]
   1103c:	cmp	r0, #0
   11040:	beq	11084 <abort@plt+0x770>
   11044:	ldrb	r1, [r4, #2]
   11048:	cmp	r1, #0
   1104c:	bne	11084 <abort@plt+0x770>
   11050:	ldrb	r1, [r0]
   11054:	cmp	r1, #0
   11058:	bne	1109c <abort@plt+0x788>
   1105c:	mov	r1, #1
   11060:	strb	r1, [r0]
   11064:	ldr	r0, [sp, #4]
   11068:	ldr	r5, [r0]
   1106c:	b	11024 <abort@plt+0x710>
   11070:	ldr	r1, [sp, #4]
   11074:	sxth	r0, r8
   11078:	str	r0, [r1]
   1107c:	sub	sp, fp, #28
   11080:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11084:	ldr	r0, [pc, #52]	; 110c0 <abort@plt+0x7ac>
   11088:	mov	r1, r4
   1108c:	add	r0, pc, r0
   11090:	bl	11158 <error@@Base+0x50>
   11094:	ldr	r0, [sp]
   11098:	bl	11234 <error@@Base+0x12c>
   1109c:	ldr	r0, [pc, #24]	; 110bc <abort@plt+0x7a8>
   110a0:	mov	r1, r4
   110a4:	add	r0, pc, r0
   110a8:	bl	11158 <error@@Base+0x50>
   110ac:	andeq	r2, r1, r8, lsr #3
   110b0:	andeq	r0, r0, r8, lsl r3
   110b4:	andeq	r2, r1, ip, asr r1
   110b8:	andeq	r1, r0, fp, lsr #17
   110bc:	andeq	r1, r0, pc, lsl #15
   110c0:	muleq	r0, r8, r7
   110c4:	push	{fp, lr}
   110c8:	mov	fp, sp
   110cc:	mov	r0, #0
   110d0:	bl	110d4 <abort@plt+0x7c0>
   110d4:	push	{fp, lr}
   110d8:	mov	fp, sp
   110dc:	mov	r4, r0
   110e0:	ldr	r0, [pc, #28]	; 11104 <abort@plt+0x7f0>
   110e4:	ldr	r0, [pc, r0]
   110e8:	ldr	r0, [r0]
   110ec:	cmp	r0, #0
   110f0:	beq	110f8 <abort@plt+0x7e4>
   110f4:	blx	r0
   110f8:	bl	11294 <error@@Base+0x18c>
   110fc:	mov	r0, r4
   11100:	bl	108a8 <exit@plt>
   11104:	muleq	r1, r8, pc	; <UNPREDICTABLE>

00011108 <error@@Base>:
   11108:	push	{fp, lr}
   1110c:	mov	fp, sp
   11110:	mov	r3, r0
   11114:	ldr	r0, [pc, #44]	; 11148 <error@@Base+0x40>
   11118:	ldr	r0, [pc, r0]
   1111c:	ldr	r2, [r0]
   11120:	ldr	r0, [pc, #36]	; 1114c <error@@Base+0x44>
   11124:	ldr	r0, [pc, r0]
   11128:	ldr	r0, [r0]
   1112c:	ldr	r1, [pc, #28]	; 11150 <error@@Base+0x48>
   11130:	add	r1, pc, r1
   11134:	bl	108cc <fprintf@plt>
   11138:	ldr	r0, [pc, #20]	; 11154 <error@@Base+0x4c>
   1113c:	ldr	r0, [pc, r0]
   11140:	ldr	r0, [r0]
   11144:	bl	110d4 <abort@plt+0x7c0>
   11148:	andeq	r1, r1, ip, asr pc
   1114c:	andeq	r1, r1, r8, asr #30
   11150:	andeq	r1, r0, sp, lsr #13
   11154:	andeq	r1, r1, r0, asr pc
   11158:	push	{fp, lr}
   1115c:	mov	fp, sp
   11160:	sub	sp, sp, #8
   11164:	mov	r3, r0
   11168:	ldr	r0, [pc, #48]	; 111a0 <error@@Base+0x98>
   1116c:	ldr	r0, [pc, r0]
   11170:	ldr	r2, [r0]
   11174:	ldr	r0, [pc, #40]	; 111a4 <error@@Base+0x9c>
   11178:	ldr	r0, [pc, r0]
   1117c:	str	r1, [sp]
   11180:	ldr	r0, [r0]
   11184:	ldr	r1, [pc, #28]	; 111a8 <error@@Base+0xa0>
   11188:	add	r1, pc, r1
   1118c:	bl	108cc <fprintf@plt>
   11190:	ldr	r0, [pc, #20]	; 111ac <error@@Base+0xa4>
   11194:	ldr	r0, [pc, r0]
   11198:	ldr	r0, [r0]
   1119c:	bl	110d4 <abort@plt+0x7c0>
   111a0:	andeq	r1, r1, r8, lsl #30
   111a4:	strdeq	r1, [r1], -r4
   111a8:	andeq	r1, r0, sp, asr r6
   111ac:	strdeq	r1, [r1], -r8
   111b0:	push	{fp, lr}
   111b4:	mov	fp, sp
   111b8:	sub	sp, sp, #8
   111bc:	mov	r3, r0
   111c0:	ldr	r0, [pc, #40]	; 111f0 <error@@Base+0xe8>
   111c4:	ldr	r0, [pc, r0]
   111c8:	ldr	r2, [r0]
   111cc:	ldr	r0, [pc, #32]	; 111f4 <error@@Base+0xec>
   111d0:	ldr	r0, [pc, r0]
   111d4:	str	r1, [sp]
   111d8:	ldr	r0, [r0]
   111dc:	ldr	r1, [pc, #20]	; 111f8 <error@@Base+0xf0>
   111e0:	add	r1, pc, r1
   111e4:	bl	108cc <fprintf@plt>
   111e8:	mov	sp, fp
   111ec:	pop	{fp, pc}
   111f0:			; <UNDEFINED> instruction: 0x00011eb0
   111f4:	muleq	r1, ip, lr
   111f8:	andeq	r1, r0, r5, lsl #12
   111fc:	push	{fp, lr}
   11200:	mov	fp, sp
   11204:	ldr	r0, [pc, #32]	; 1122c <error@@Base+0x124>
   11208:	add	r0, pc, r0
   1120c:	ldrb	r1, [r0]
   11210:	cmp	r1, #1
   11214:	popeq	{fp, pc}
   11218:	mov	r1, #1
   1121c:	strb	r1, [r0]
   11220:	ldr	r0, [pc, #8]	; 11230 <error@@Base+0x128>
   11224:	add	r0, pc, r0
   11228:	bl	11108 <error@@Base>
   1122c:	muleq	r1, ip, lr
   11230:	ldrdeq	r1, [r0], -ip
   11234:	push	{fp, lr}
   11238:	mov	fp, sp
   1123c:	mov	r3, r0
   11240:	ldr	r0, [pc, #60]	; 11284 <error@@Base+0x17c>
   11244:	ldr	r0, [pc, r0]
   11248:	ldr	r0, [r0]
   1124c:	cmp	r0, #0
   11250:	bne	1127c <error@@Base+0x174>
   11254:	ldr	r0, [pc, #44]	; 11288 <error@@Base+0x180>
   11258:	ldr	r0, [pc, r0]
   1125c:	ldr	r2, [r0]
   11260:	ldr	r0, [pc, #36]	; 1128c <error@@Base+0x184>
   11264:	ldr	r0, [pc, r0]
   11268:	ldr	r0, [r0]
   1126c:	ldr	r1, [pc, #28]	; 11290 <error@@Base+0x188>
   11270:	add	r1, pc, r1
   11274:	bl	108cc <fprintf@plt>
   11278:	bl	110c4 <abort@plt+0x7b0>
   1127c:	blx	r0
   11280:	bl	110c4 <abort@plt+0x7b0>
   11284:	andeq	r1, r1, r4, lsr #28
   11288:	andeq	r1, r1, ip, lsl lr
   1128c:	andeq	r1, r1, r8, lsl #28
   11290:	andeq	r1, r0, r5, lsr #11
   11294:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11298:	add	fp, sp, #24
   1129c:	sub	sp, sp, #104	; 0x68
   112a0:	ldr	r8, [pc, #124]	; 11324 <error@@Base+0x21c>
   112a4:	add	r8, pc, r8
   112a8:	ldrsh	r0, [r8]
   112ac:	cmp	r0, #1
   112b0:	blt	1131c <error@@Base+0x214>
   112b4:	ldr	r9, [pc, #108]	; 11328 <error@@Base+0x220>
   112b8:	mov	r7, #1
   112bc:	add	r4, sp, #4
   112c0:	ldr	r9, [pc, r9]
   112c4:	ldr	r5, [pc, #96]	; 1132c <error@@Base+0x224>
   112c8:	add	r5, pc, r5
   112cc:	ldr	r6, [r9]
   112d0:	bl	1089c <getpid@plt>
   112d4:	mov	r3, r0
   112d8:	sxth	r0, r7
   112dc:	mov	r1, r5
   112e0:	mov	r2, r6
   112e4:	str	r0, [sp]
   112e8:	mov	r0, r4
   112ec:	bl	108fc <sprintf@plt>
   112f0:	mov	r0, r4
   112f4:	bl	10848 <strdup@plt>
   112f8:	mov	r6, r0
   112fc:	bl	10854 <unlink@plt>
   11300:	mov	r0, r6
   11304:	bl	10830 <free@plt>
   11308:	add	r0, r7, #1
   1130c:	sxth	r7, r0
   11310:	ldrsh	r0, [r8]
   11314:	cmp	r7, r0
   11318:	ble	112cc <error@@Base+0x1c4>
   1131c:	sub	sp, fp, #24
   11320:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11324:	strdeq	r1, [r1], -lr
   11328:			; <UNDEFINED> instruction: 0x00011db4
   1132c:	andeq	r1, r0, sl, lsr #10
   11330:	ldm	r0, {r3, ip}
   11334:	add	r2, ip, r2
   11338:	add	r1, r3, r1
   1133c:	stm	r0, {r1, r2}
   11340:	bx	lr
   11344:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11348:	add	fp, sp, #24
   1134c:	mov	r8, r3
   11350:	mov	r5, r2
   11354:	mov	r4, r1
   11358:	mov	r6, r0
   1135c:	bl	121c8 <error@@Base+0x10c0>
   11360:	mov	r7, r0
   11364:	cmp	r0, #0
   11368:	bne	11394 <error@@Base+0x28c>
   1136c:	mov	r0, #1
   11370:	mov	r1, #20
   11374:	bl	10c38 <abort@plt+0x324>
   11378:	mov	r7, r0
   1137c:	mov	r0, r4
   11380:	bl	10848 <strdup@plt>
   11384:	str	r0, [r7, #8]
   11388:	mov	r0, r6
   1138c:	mov	r1, r7
   11390:	bl	12258 <error@@Base+0x1150>
   11394:	ldr	r0, [r7, #12]
   11398:	ldr	r1, [r7, #16]
   1139c:	add	r0, r0, r5
   113a0:	add	r1, r1, r8
   113a4:	str	r0, [r7, #12]
   113a8:	str	r1, [r7, #16]
   113ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   113b0:	push	{r4, r5, r6, r7, fp, lr}
   113b4:	add	fp, sp, #16
   113b8:	sub	sp, sp, #8
   113bc:	mov	r6, r1
   113c0:	ldr	r1, [pc, #484]	; 115ac <error@@Base+0x4a4>
   113c4:	mov	r5, r0
   113c8:	mov	r0, r6
   113cc:	add	r1, pc, r1
   113d0:	bl	10ce0 <abort@plt+0x3cc>
   113d4:	mov	r4, r0
   113d8:	ldr	r0, [pc, #464]	; 115b0 <error@@Base+0x4a8>
   113dc:	mov	r1, #99	; 0x63
   113e0:	mov	r2, r4
   113e4:	add	r0, pc, r0
   113e8:	bl	1083c <fgets@plt>
   113ec:	cmp	r0, #0
   113f0:	beq	11590 <error@@Base+0x488>
   113f4:	ldr	r0, [pc, #440]	; 115b4 <error@@Base+0x4ac>
   113f8:	ldr	r1, [pc, #440]	; 115b8 <error@@Base+0x4b0>
   113fc:	mov	r2, #45	; 0x2d
   11400:	add	r0, pc, r0
   11404:	add	r1, pc, r1
   11408:	bl	108b4 <bcmp@plt>
   1140c:	cmp	r0, #0
   11410:	bne	11590 <error@@Base+0x488>
   11414:	ldr	r0, [pc, #416]	; 115bc <error@@Base+0x4b4>
   11418:	mov	r1, #99	; 0x63
   1141c:	mov	r2, r4
   11420:	add	r0, pc, r0
   11424:	bl	1083c <fgets@plt>
   11428:	cmp	r0, #0
   1142c:	beq	11590 <error@@Base+0x488>
   11430:	ldr	r0, [pc, #392]	; 115c0 <error@@Base+0x4b8>
   11434:	ldr	r1, [pc, #392]	; 115c4 <error@@Base+0x4bc>
   11438:	mov	r2, #48	; 0x30
   1143c:	add	r0, pc, r0
   11440:	add	r1, pc, r1
   11444:	bl	108b4 <bcmp@plt>
   11448:	cmp	r0, #0
   1144c:	bne	11590 <error@@Base+0x488>
   11450:	ldr	r0, [pc, #368]	; 115c8 <error@@Base+0x4c0>
   11454:	mov	r1, #99	; 0x63
   11458:	mov	r2, r4
   1145c:	add	r0, pc, r0
   11460:	bl	1083c <fgets@plt>
   11464:	cmp	r0, #0
   11468:	beq	11590 <error@@Base+0x488>
   1146c:	ldr	r0, [pc, #344]	; 115cc <error@@Base+0x4c4>
   11470:	ldr	r1, [pc, #344]	; 115d0 <error@@Base+0x4c8>
   11474:	add	r2, sp, #4
   11478:	add	r0, pc, r0
   1147c:	add	r1, pc, r1
   11480:	bl	108d8 <__isoc99_sscanf@plt>
   11484:	cmp	r0, #1
   11488:	bne	11590 <error@@Base+0x488>
   1148c:	ldr	r0, [pc, #320]	; 115d4 <error@@Base+0x4cc>
   11490:	mov	r1, #99	; 0x63
   11494:	mov	r2, r4
   11498:	add	r0, pc, r0
   1149c:	bl	1083c <fgets@plt>
   114a0:	cmp	r0, #0
   114a4:	beq	11590 <error@@Base+0x488>
   114a8:	ldr	r0, [pc, #296]	; 115d8 <error@@Base+0x4d0>
   114ac:	ldr	r1, [pc, #296]	; 115dc <error@@Base+0x4d4>
   114b0:	mov	r2, sp
   114b4:	add	r0, pc, r0
   114b8:	add	r1, pc, r1
   114bc:	bl	108d8 <__isoc99_sscanf@plt>
   114c0:	cmp	r0, #1
   114c4:	bne	11590 <error@@Base+0x488>
   114c8:	ldr	r0, [pc, #272]	; 115e0 <error@@Base+0x4d8>
   114cc:	mov	r1, #99	; 0x63
   114d0:	mov	r2, r4
   114d4:	add	r0, pc, r0
   114d8:	bl	1083c <fgets@plt>
   114dc:	cmp	r0, #0
   114e0:	beq	11590 <error@@Base+0x488>
   114e4:	ldr	r0, [pc, #248]	; 115e4 <error@@Base+0x4dc>
   114e8:	mov	r1, #99	; 0x63
   114ec:	mov	r2, r4
   114f0:	add	r0, pc, r0
   114f4:	bl	1083c <fgets@plt>
   114f8:	cmp	r0, #0
   114fc:	beq	11590 <error@@Base+0x488>
   11500:	ldr	r2, [sp, #4]
   11504:	ldm	r5, {r0, r1}
   11508:	add	r0, r0, r2
   1150c:	ldr	r2, [sp]
   11510:	add	r1, r1, r2
   11514:	stm	r5, {r0, r1}
   11518:	add	r1, r5, #8
   1151c:	mov	r0, r4
   11520:	bl	115f0 <error@@Base+0x4e8>
   11524:	mov	r7, r0
   11528:	add	r1, r5, #416	; 0x1a0
   1152c:	mov	r0, r4
   11530:	bl	115f0 <error@@Base+0x4e8>
   11534:	mov	r6, r0
   11538:	add	r1, r5, #824	; 0x338
   1153c:	mov	r0, r4
   11540:	bl	115f0 <error@@Base+0x4e8>
   11544:	ldr	r0, [sp, #4]
   11548:	cmp	r0, #1
   1154c:	blt	11580 <error@@Base+0x478>
   11550:	add	r1, r5, #920	; 0x398
   11554:	mov	r0, r4
   11558:	bl	115f0 <error@@Base+0x4e8>
   1155c:	cmp	r7, #1
   11560:	addge	r1, r5, #992	; 0x3e0
   11564:	movge	r0, r4
   11568:	blge	11730 <error@@Base+0x628>
   1156c:	cmp	r6, #1
   11570:	movwge	r0, #9048	; 0x2358
   11574:	addge	r1, r5, r0
   11578:	movge	r0, r4
   1157c:	blge	11730 <error@@Base+0x628>
   11580:	mov	r0, r4
   11584:	bl	10d68 <abort@plt+0x454>
   11588:	sub	sp, fp, #16
   1158c:	pop	{r4, r5, r6, r7, fp, pc}
   11590:	ldr	r1, [pc, #80]	; 115e8 <error@@Base+0x4e0>
   11594:	ldr	r0, [pc, #80]	; 115ec <error@@Base+0x4e4>
   11598:	cmp	r6, #0
   1159c:	add	r1, pc, r1
   115a0:	movne	r1, r6
   115a4:	add	r0, pc, r0
   115a8:	bl	11158 <error@@Base+0x50>
   115ac:	andeq	r1, r0, r8, ror r4
   115b0:	andeq	r1, r1, r1, asr #25
   115b4:	andeq	r1, r1, r5, lsr #25
   115b8:	andeq	r1, r0, r2, asr #8
   115bc:	andeq	r1, r1, r5, lsl #25
   115c0:	andeq	r1, r1, r9, ror #24
   115c4:	andeq	r1, r0, r6, lsr r4
   115c8:	andeq	r1, r1, r9, asr #24
   115cc:	andeq	r1, r1, sp, lsr #24
   115d0:	andeq	r1, r0, sp, lsr #9
   115d4:	andeq	r1, r1, sp, lsl #24
   115d8:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   115dc:	andeq	r1, r0, r1, ror r4
   115e0:	ldrdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   115e4:			; <UNDEFINED> instruction: 0x00011bb5
   115e8:	andeq	r1, r0, ip, lsl r3
   115ec:	andeq	r1, r0, r2, lsl #6
   115f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115f4:	add	fp, sp, #28
   115f8:	sub	sp, sp, #12
   115fc:	mov	r5, r0
   11600:	ldr	r0, [pc, #276]	; 1171c <error@@Base+0x614>
   11604:	mov	r4, r1
   11608:	mov	r1, #99	; 0x63
   1160c:	mov	r2, r5
   11610:	add	r0, pc, r0
   11614:	bl	1083c <fgets@plt>
   11618:	mov	r6, #0
   1161c:	cmp	r0, #0
   11620:	beq	11710 <error@@Base+0x608>
   11624:	ldr	r0, [pc, #244]	; 11720 <error@@Base+0x618>
   11628:	mov	r1, #99	; 0x63
   1162c:	mov	r2, r5
   11630:	add	r0, pc, r0
   11634:	bl	1083c <fgets@plt>
   11638:	cmp	r0, #0
   1163c:	beq	11710 <error@@Base+0x608>
   11640:	ldr	r7, [pc, #220]	; 11724 <error@@Base+0x61c>
   11644:	mov	r1, #99	; 0x63
   11648:	mov	r2, r5
   1164c:	add	r7, pc, r7
   11650:	mov	r0, r7
   11654:	bl	1083c <fgets@plt>
   11658:	cmp	r0, #0
   1165c:	beq	11710 <error@@Base+0x608>
   11660:	mov	r6, #0
   11664:	add	r9, sp, #8
   11668:	add	sl, sp, #4
   1166c:	add	r8, r7, #29
   11670:	b	116d0 <error@@Base+0x5c8>
   11674:	ldr	r1, [pc, #176]	; 1172c <error@@Base+0x624>
   11678:	mov	r0, r8
   1167c:	mov	r2, #8
   11680:	add	r1, pc, r1
   11684:	bl	108b4 <bcmp@plt>
   11688:	ldr	r1, [sp, #8]
   1168c:	cmp	r0, #0
   11690:	movwne	r0, #11
   11694:	moveq	r6, r1
   11698:	mov	r2, r4
   1169c:	ldr	r0, [r2, r0, lsl #3]!
   116a0:	add	r0, r0, r1
   116a4:	ldr	r1, [sp, #4]
   116a8:	str	r0, [r2]
   116ac:	ldr	r0, [r2, #4]
   116b0:	add	r0, r0, r1
   116b4:	mov	r1, #99	; 0x63
   116b8:	str	r0, [r2, #4]
   116bc:	mov	r0, r7
   116c0:	mov	r2, r5
   116c4:	bl	1083c <fgets@plt>
   116c8:	cmp	r0, #0
   116cc:	beq	11710 <error@@Base+0x608>
   116d0:	ldr	r1, [pc, #80]	; 11728 <error@@Base+0x620>
   116d4:	mov	r0, r7
   116d8:	mov	r2, r9
   116dc:	mov	r3, sl
   116e0:	add	r1, pc, r1
   116e4:	bl	108d8 <__isoc99_sscanf@plt>
   116e8:	cmp	r0, #2
   116ec:	bne	11710 <error@@Base+0x608>
   116f0:	mov	r0, r8
   116f4:	mov	r1, #0
   116f8:	mov	r2, #10
   116fc:	bl	10818 <strtol@plt>
   11700:	cmp	r0, #0
   11704:	beq	11674 <error@@Base+0x56c>
   11708:	ldr	r1, [sp, #8]
   1170c:	b	11698 <error@@Base+0x590>
   11710:	mov	r0, r6
   11714:	sub	sp, fp, #28
   11718:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1171c:	muleq	r1, r5, sl
   11720:	andeq	r1, r1, r5, ror sl
   11724:	andeq	r1, r1, r9, asr sl
   11728:	andeq	r1, r0, r5, asr #4
   1172c:	muleq	r0, sp, r2
   11730:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11734:	add	fp, sp, #28
   11738:	sub	sp, sp, #12
   1173c:	mov	r5, r0
   11740:	ldr	r0, [pc, #276]	; 1185c <error@@Base+0x754>
   11744:	mov	r4, r1
   11748:	mov	r1, #99	; 0x63
   1174c:	mov	r2, r5
   11750:	add	r0, pc, r0
   11754:	bl	1083c <fgets@plt>
   11758:	cmp	r0, #0
   1175c:	beq	11854 <error@@Base+0x74c>
   11760:	ldr	r0, [pc, #248]	; 11860 <error@@Base+0x758>
   11764:	mov	r1, #99	; 0x63
   11768:	mov	r2, r5
   1176c:	add	r0, pc, r0
   11770:	bl	1083c <fgets@plt>
   11774:	cmp	r0, #0
   11778:	beq	11854 <error@@Base+0x74c>
   1177c:	ldr	r6, [pc, #224]	; 11864 <error@@Base+0x75c>
   11780:	mov	r1, #99	; 0x63
   11784:	mov	r2, r5
   11788:	add	r6, pc, r6
   1178c:	mov	r0, r6
   11790:	bl	1083c <fgets@plt>
   11794:	cmp	r0, #0
   11798:	beq	11854 <error@@Base+0x74c>
   1179c:	add	r7, r6, #29
   117a0:	b	117d4 <error@@Base+0x6cc>
   117a4:	ldr	r0, [r8, #12]
   117a8:	ldr	r1, [r8, #16]
   117ac:	mov	r2, r5
   117b0:	add	r0, r0, r9
   117b4:	add	r1, r1, sl
   117b8:	str	r0, [r8, #12]
   117bc:	str	r1, [r8, #16]
   117c0:	mov	r0, r6
   117c4:	mov	r1, #99	; 0x63
   117c8:	bl	1083c <fgets@plt>
   117cc:	cmp	r0, #0
   117d0:	beq	11854 <error@@Base+0x74c>
   117d4:	ldr	r1, [pc, #140]	; 11868 <error@@Base+0x760>
   117d8:	mov	r0, r6
   117dc:	add	r2, sp, #8
   117e0:	add	r3, sp, #4
   117e4:	add	r1, pc, r1
   117e8:	bl	108d8 <__isoc99_sscanf@plt>
   117ec:	cmp	r0, #2
   117f0:	bne	11854 <error@@Base+0x74c>
   117f4:	mov	r0, r6
   117f8:	bl	108c0 <strlen@plt>
   117fc:	ldr	r9, [sp, #8]
   11800:	ldr	sl, [sp, #4]
   11804:	add	r0, r0, r6
   11808:	mov	r1, #0
   1180c:	strb	r1, [r0, #-1]
   11810:	mov	r0, r4
   11814:	mov	r1, r7
   11818:	bl	121c8 <error@@Base+0x10c0>
   1181c:	mov	r8, r0
   11820:	cmp	r0, #0
   11824:	bne	117a4 <error@@Base+0x69c>
   11828:	mov	r0, #1
   1182c:	mov	r1, #20
   11830:	bl	10c38 <abort@plt+0x324>
   11834:	mov	r8, r0
   11838:	mov	r0, r7
   1183c:	bl	10848 <strdup@plt>
   11840:	str	r0, [r8, #8]
   11844:	mov	r0, r4
   11848:	mov	r1, r8
   1184c:	bl	12258 <error@@Base+0x1150>
   11850:	b	117a4 <error@@Base+0x69c>
   11854:	sub	sp, fp, #28
   11858:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1185c:	andeq	r1, r1, r5, asr r9
   11860:	andeq	r1, r1, r9, lsr r9
   11864:	andeq	r1, r1, sp, lsl r9
   11868:	andeq	r1, r0, r1, asr #2
   1186c:	nop	{0}
   11870:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11874:	add	fp, sp, #24
   11878:	sub	sp, sp, #8
   1187c:	mov	r2, r1
   11880:	ldr	r1, [pc, #448]	; 11a48 <error@@Base+0x940>
   11884:	mov	r5, r0
   11888:	mov	r0, r2
   1188c:	add	r1, pc, r1
   11890:	bl	10ce0 <abort@plt+0x3cc>
   11894:	ldr	r1, [pc, #432]	; 11a4c <error@@Base+0x944>
   11898:	ldr	r2, [pc, #432]	; 11a50 <error@@Base+0x948>
   1189c:	ldr	r3, [pc, #432]	; 11a54 <error@@Base+0x94c>
   118a0:	mov	r4, r0
   118a4:	add	r1, pc, r1
   118a8:	add	r2, pc, r2
   118ac:	add	r3, pc, r3
   118b0:	bl	108cc <fprintf@plt>
   118b4:	ldr	r2, [r5]
   118b8:	ldr	r1, [pc, #408]	; 11a58 <error@@Base+0x950>
   118bc:	mov	r0, r4
   118c0:	add	r1, pc, r1
   118c4:	bl	108cc <fprintf@plt>
   118c8:	ldr	r2, [r5, #4]
   118cc:	ldr	r1, [pc, #392]	; 11a5c <error@@Base+0x954>
   118d0:	mov	r0, r4
   118d4:	add	r1, pc, r1
   118d8:	bl	108cc <fprintf@plt>
   118dc:	ldr	r0, [r5]
   118e0:	cmp	r0, #0
   118e4:	beq	11924 <error@@Base+0x81c>
   118e8:	ldr	r1, [r5, #4]
   118ec:	vldr	d16, [pc, #332]	; 11a40 <error@@Base+0x938>
   118f0:	vmov	s2, r0
   118f4:	sub	r1, r0, r1
   118f8:	mov	r0, r4
   118fc:	vmov	s0, r1
   11900:	vcvt.f64.s32	d17, s0
   11904:	vcvt.f64.s32	d18, s2
   11908:	ldr	r1, [pc, #340]	; 11a64 <error@@Base+0x95c>
   1190c:	add	r1, pc, r1
   11910:	vmul.f64	d16, d17, d16
   11914:	vdiv.f64	d16, d16, d18
   11918:	vmov	r2, r3, d16
   1191c:	bl	108cc <fprintf@plt>
   11920:	b	1193c <error@@Base+0x834>
   11924:	ldr	r0, [pc, #308]	; 11a60 <error@@Base+0x958>
   11928:	mov	r1, #8
   1192c:	mov	r2, #1
   11930:	mov	r3, r4
   11934:	add	r0, pc, r0
   11938:	bl	1086c <fwrite@plt>
   1193c:	ldr	r0, [pc, #292]	; 11a68 <error@@Base+0x960>
   11940:	mov	r1, #12
   11944:	mov	r2, #1
   11948:	mov	r3, r4
   1194c:	mov	r7, #1
   11950:	add	r0, pc, r0
   11954:	bl	1086c <fwrite@plt>
   11958:	mov	r8, #0
   1195c:	str	r7, [sp, #4]
   11960:	add	r1, r5, #8
   11964:	mov	r0, r4
   11968:	mov	r2, #50	; 0x32
   1196c:	str	r8, [sp]
   11970:	ldr	r3, [pc, #244]	; 11a6c <error@@Base+0x964>
   11974:	add	r3, pc, r3
   11978:	bl	11a88 <error@@Base+0x980>
   1197c:	str	r8, [sp]
   11980:	str	r7, [sp, #4]
   11984:	add	r6, r5, #416	; 0x1a0
   11988:	mov	r0, r4
   1198c:	mov	r2, #50	; 0x32
   11990:	ldr	r3, [pc, #216]	; 11a70 <error@@Base+0x968>
   11994:	mov	r1, r6
   11998:	add	r3, pc, r3
   1199c:	bl	11a88 <error@@Base+0x980>
   119a0:	str	r7, [sp]
   119a4:	str	r7, [sp, #4]
   119a8:	add	r1, r5, #824	; 0x338
   119ac:	mov	r0, r4
   119b0:	mov	r2, #10
   119b4:	ldr	r3, [pc, #184]	; 11a74 <error@@Base+0x96c>
   119b8:	add	r3, pc, r3
   119bc:	bl	11a88 <error@@Base+0x980>
   119c0:	ldr	r0, [r5]
   119c4:	cmp	r0, #1
   119c8:	blt	11a30 <error@@Base+0x928>
   119cc:	str	r8, [sp]
   119d0:	str	r8, [sp, #4]
   119d4:	add	r1, r5, #920	; 0x398
   119d8:	mov	r0, r4
   119dc:	mov	r2, #8
   119e0:	ldr	r3, [pc, #144]	; 11a78 <error@@Base+0x970>
   119e4:	add	r3, pc, r3
   119e8:	bl	11a88 <error@@Base+0x980>
   119ec:	ldr	r0, [r5, #8]
   119f0:	cmp	r0, #1
   119f4:	blt	11a0c <error@@Base+0x904>
   119f8:	ldr	r2, [pc, #124]	; 11a7c <error@@Base+0x974>
   119fc:	add	r1, r5, #992	; 0x3e0
   11a00:	mov	r0, r4
   11a04:	add	r2, pc, r2
   11a08:	bl	11e48 <error@@Base+0xd40>
   11a0c:	ldr	r0, [r6]
   11a10:	cmp	r0, #1
   11a14:	blt	11a30 <error@@Base+0x928>
   11a18:	ldr	r2, [pc, #96]	; 11a80 <error@@Base+0x978>
   11a1c:	movw	r0, #9048	; 0x2358
   11a20:	add	r1, r5, r0
   11a24:	mov	r0, r4
   11a28:	add	r2, pc, r2
   11a2c:	bl	11e48 <error@@Base+0xd40>
   11a30:	mov	r0, r4
   11a34:	sub	sp, fp, #24
   11a38:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11a3c:	b	10d68 <abort@plt+0x454>
   11a40:	andeq	r0, r0, r0
   11a44:	subsmi	r0, r9, r0
   11a48:	andeq	r0, r0, r0, lsl #30
   11a4c:	andeq	r1, r0, sl, lsl r0
   11a50:	muleq	r0, lr, pc	; <UNPREDICTABLE>
   11a54:	andeq	r0, r0, sl, asr #31
   11a58:	andeq	r1, r0, r3
   11a5c:	strdeq	r0, [r0], -sp
   11a60:	strdeq	r0, [r0], -r9
   11a64:	andeq	r1, r0, sl, lsr #32
   11a68:	muleq	r0, r7, pc	; <UNPREDICTABLE>
   11a6c:	andeq	r0, r0, r0, lsl #31
   11a70:	andeq	r0, r0, pc, ror #30
   11a74:	andeq	r0, r0, r6, asr #30
   11a78:	andeq	r0, r0, r1, lsr pc
   11a7c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a80:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   11a84:	nop	{0}
   11a88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11a8c:	add	fp, sp, #28
   11a90:	sub	sp, sp, #4
   11a94:	vpush	{d8}
   11a98:	sub	sp, sp, #8
   11a9c:	mov	r5, r1
   11aa0:	ldr	r1, [pc, #832]	; 11de8 <error@@Base+0xce0>
   11aa4:	mov	r8, r2
   11aa8:	mov	r2, r3
   11aac:	mov	r4, r0
   11ab0:	add	r1, pc, r1
   11ab4:	bl	108cc <fprintf@plt>
   11ab8:	ldr	r0, [pc, #812]	; 11dec <error@@Base+0xce4>
   11abc:	mov	r1, #26
   11ac0:	mov	r2, #1
   11ac4:	mov	r3, r4
   11ac8:	mov	r7, #1
   11acc:	add	r0, pc, r0
   11ad0:	bl	1086c <fwrite@plt>
   11ad4:	ldr	r0, [pc, #788]	; 11df0 <error@@Base+0xce8>
   11ad8:	mov	r1, #3
   11adc:	mov	r2, #1
   11ae0:	mov	r3, r4
   11ae4:	add	r0, pc, r0
   11ae8:	bl	1086c <fwrite@plt>
   11aec:	ldrb	r1, [fp, #8]
   11af0:	ldr	r0, [pc, #764]	; 11df4 <error@@Base+0xcec>
   11af4:	ldr	r2, [pc, #764]	; 11df8 <error@@Base+0xcf0>
   11af8:	str	r1, [sp]
   11afc:	cmp	r1, #0
   11b00:	add	r0, pc, r0
   11b04:	add	r2, pc, r2
   11b08:	ldr	r1, [pc, #748]	; 11dfc <error@@Base+0xcf4>
   11b0c:	movne	r2, r0
   11b10:	mov	r0, r4
   11b14:	add	r1, pc, r1
   11b18:	bl	108cc <fprintf@plt>
   11b1c:	ldr	r1, [fp, #12]
   11b20:	lsl	r0, r8, #16
   11b24:	sxth	r6, r8
   11b28:	cmp	r0, #65536	; 0x10000
   11b2c:	str	r1, [sp, #4]
   11b30:	blt	11c1c <error@@Base+0xb14>
   11b34:	ldr	sl, [pc, #708]	; 11e00 <error@@Base+0xcf8>
   11b38:	vldr	d8, [pc, #672]	; 11de0 <error@@Base+0xcd8>
   11b3c:	mov	r8, #1
   11b40:	add	sl, pc, sl
   11b44:	b	11b98 <error@@Base+0xa90>
   11b48:	ldr	r0, [pc, #704]	; 11e10 <error@@Base+0xd08>
   11b4c:	mov	r1, #26
   11b50:	add	r0, pc, r0
   11b54:	mov	r2, #1
   11b58:	mov	r3, r4
   11b5c:	bl	1086c <fwrite@plt>
   11b60:	ldr	r0, [pc, #684]	; 11e14 <error@@Base+0xd0c>
   11b64:	mov	r1, #3
   11b68:	mov	r2, #1
   11b6c:	mov	r3, r4
   11b70:	add	r0, pc, r0
   11b74:	bl	1086c <fwrite@plt>
   11b78:	mov	r0, r4
   11b7c:	mov	r1, sl
   11b80:	mov	r2, r7
   11b84:	bl	108cc <fprintf@plt>
   11b88:	add	r8, r8, #1
   11b8c:	sxth	r7, r8
   11b90:	cmp	r6, r7
   11b94:	blt	11c1c <error@@Base+0xb14>
   11b98:	mov	r0, r5
   11b9c:	ldr	r2, [r0, r7, lsl #3]!
   11ba0:	cmp	r2, #1
   11ba4:	blt	11b88 <error@@Base+0xa80>
   11ba8:	cmp	r0, #0
   11bac:	beq	11b48 <error@@Base+0xa40>
   11bb0:	add	r9, r5, r7, lsl #3
   11bb4:	mov	r0, r4
   11bb8:	ldr	r3, [r9, #4]!
   11bbc:	ldr	r1, [pc, #576]	; 11e04 <error@@Base+0xcfc>
   11bc0:	add	r1, pc, r1
   11bc4:	bl	108cc <fprintf@plt>
   11bc8:	ldr	r0, [r5, r7, lsl #3]
   11bcc:	cmp	r0, #0
   11bd0:	beq	11c0c <error@@Base+0xb04>
   11bd4:	ldr	r1, [r9]
   11bd8:	vmov	s2, r0
   11bdc:	sub	r1, r0, r1
   11be0:	mov	r0, r4
   11be4:	vmov	s0, r1
   11be8:	vcvt.f64.s32	d16, s0
   11bec:	vcvt.f64.s32	d17, s2
   11bf0:	ldr	r1, [pc, #532]	; 11e0c <error@@Base+0xd04>
   11bf4:	add	r1, pc, r1
   11bf8:	vmul.f64	d16, d16, d8
   11bfc:	vdiv.f64	d16, d16, d17
   11c00:	vmov	r2, r3, d16
   11c04:	bl	108cc <fprintf@plt>
   11c08:	b	11b60 <error@@Base+0xa58>
   11c0c:	ldr	r0, [pc, #500]	; 11e08 <error@@Base+0xd00>
   11c10:	mov	r1, #8
   11c14:	add	r0, pc, r0
   11c18:	b	11b54 <error@@Base+0xa4c>
   11c1c:	ldr	r0, [sp]
   11c20:	cmp	r0, #0
   11c24:	beq	11cf8 <error@@Base+0xbf0>
   11c28:	add	r7, r6, #1
   11c2c:	mov	r0, r5
   11c30:	ldr	r2, [r0, r7, lsl #3]!
   11c34:	cmp	r2, #1
   11c38:	blt	11cf8 <error@@Base+0xbf0>
   11c3c:	cmp	r0, #0
   11c40:	beq	11ca4 <error@@Base+0xb9c>
   11c44:	add	r8, r5, r7, lsl #3
   11c48:	mov	r0, r4
   11c4c:	ldr	r3, [r8, #4]!
   11c50:	ldr	r1, [pc, #448]	; 11e18 <error@@Base+0xd10>
   11c54:	add	r1, pc, r1
   11c58:	bl	108cc <fprintf@plt>
   11c5c:	ldr	r0, [r5, r7, lsl #3]
   11c60:	cmp	r0, #0
   11c64:	beq	11cb4 <error@@Base+0xbac>
   11c68:	ldr	r1, [r8]
   11c6c:	vldr	d16, [pc, #364]	; 11de0 <error@@Base+0xcd8>
   11c70:	vmov	s2, r0
   11c74:	sub	r1, r0, r1
   11c78:	mov	r0, r4
   11c7c:	vmov	s0, r1
   11c80:	vcvt.f64.s32	d17, s0
   11c84:	vcvt.f64.s32	d18, s2
   11c88:	ldr	r1, [pc, #400]	; 11e20 <error@@Base+0xd18>
   11c8c:	add	r1, pc, r1
   11c90:	vmul.f64	d16, d17, d16
   11c94:	vdiv.f64	d16, d16, d18
   11c98:	vmov	r2, r3, d16
   11c9c:	bl	108cc <fprintf@plt>
   11ca0:	b	11ccc <error@@Base+0xbc4>
   11ca4:	ldr	r0, [pc, #376]	; 11e24 <error@@Base+0xd1c>
   11ca8:	mov	r1, #26
   11cac:	add	r0, pc, r0
   11cb0:	b	11cc0 <error@@Base+0xbb8>
   11cb4:	ldr	r0, [pc, #352]	; 11e1c <error@@Base+0xd14>
   11cb8:	mov	r1, #8
   11cbc:	add	r0, pc, r0
   11cc0:	mov	r2, #1
   11cc4:	mov	r3, r4
   11cc8:	bl	1086c <fwrite@plt>
   11ccc:	ldr	r0, [pc, #340]	; 11e28 <error@@Base+0xd20>
   11cd0:	mov	r1, #3
   11cd4:	mov	r2, #1
   11cd8:	mov	r3, r4
   11cdc:	add	r0, pc, r0
   11ce0:	bl	1086c <fwrite@plt>
   11ce4:	ldr	r1, [pc, #320]	; 11e2c <error@@Base+0xd24>
   11ce8:	mov	r0, r4
   11cec:	mov	r2, r6
   11cf0:	add	r1, pc, r1
   11cf4:	bl	108cc <fprintf@plt>
   11cf8:	ldr	r0, [sp, #4]
   11cfc:	tst	r0, #255	; 0xff
   11d00:	beq	11d68 <error@@Base+0xc60>
   11d04:	cmp	r5, #0
   11d08:	beq	11d78 <error@@Base+0xc70>
   11d0c:	ldm	r5, {r2, r3}
   11d10:	ldr	r1, [pc, #280]	; 11e30 <error@@Base+0xd28>
   11d14:	mov	r0, r4
   11d18:	add	r1, pc, r1
   11d1c:	bl	108cc <fprintf@plt>
   11d20:	ldr	r0, [r5]
   11d24:	cmp	r0, #0
   11d28:	beq	11d88 <error@@Base+0xc80>
   11d2c:	ldr	r1, [r5, #4]
   11d30:	vldr	d16, [pc, #168]	; 11de0 <error@@Base+0xcd8>
   11d34:	vmov	s2, r0
   11d38:	sub	r1, r0, r1
   11d3c:	mov	r0, r4
   11d40:	vmov	s0, r1
   11d44:	vcvt.f64.s32	d17, s0
   11d48:	vcvt.f64.s32	d18, s2
   11d4c:	ldr	r1, [pc, #228]	; 11e38 <error@@Base+0xd30>
   11d50:	add	r1, pc, r1
   11d54:	vmul.f64	d16, d17, d16
   11d58:	vdiv.f64	d16, d16, d18
   11d5c:	vmov	r2, r3, d16
   11d60:	bl	108cc <fprintf@plt>
   11d64:	b	11da0 <error@@Base+0xc98>
   11d68:	sub	sp, fp, #40	; 0x28
   11d6c:	vpop	{d8}
   11d70:	add	sp, sp, #4
   11d74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d78:	ldr	r0, [pc, #188]	; 11e3c <error@@Base+0xd34>
   11d7c:	mov	r1, #26
   11d80:	add	r0, pc, r0
   11d84:	b	11d94 <error@@Base+0xc8c>
   11d88:	ldr	r0, [pc, #164]	; 11e34 <error@@Base+0xd2c>
   11d8c:	mov	r1, #8
   11d90:	add	r0, pc, r0
   11d94:	mov	r2, #1
   11d98:	mov	r3, r4
   11d9c:	bl	1086c <fwrite@plt>
   11da0:	ldr	r0, [pc, #152]	; 11e40 <error@@Base+0xd38>
   11da4:	mov	r1, #3
   11da8:	mov	r2, #1
   11dac:	mov	r3, r4
   11db0:	add	r0, pc, r0
   11db4:	bl	1086c <fwrite@plt>
   11db8:	ldr	r0, [pc, #132]	; 11e44 <error@@Base+0xd3c>
   11dbc:	mov	r1, #7
   11dc0:	mov	r2, #1
   11dc4:	mov	r3, r4
   11dc8:	add	r0, pc, r0
   11dcc:	sub	sp, fp, #40	; 0x28
   11dd0:	vpop	{d8}
   11dd4:	add	sp, sp, #4
   11dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ddc:	b	1086c <fwrite@plt>
   11de0:	andeq	r0, r0, r0
   11de4:	subsmi	r0, r9, r0
   11de8:	andeq	r0, r0, ip, lsl #29
   11dec:	andeq	r0, r0, r0, lsr #29
   11df0:	andeq	r0, r0, r3, lsr #29
   11df4:	andeq	r0, r0, r1, asr #28
   11df8:	andeq	r0, r0, r4, asr #28
   11dfc:	andeq	r0, r0, r9, lsr #28
   11e00:	andeq	r0, r0, pc, lsl #28
   11e04:	andeq	r0, r0, r1, lsr #27
   11e08:	andeq	r0, r0, r9, lsl sp
   11e0c:	andeq	r0, r0, r2, asr #26
   11e10:	andeq	r0, r0, ip, lsl lr
   11e14:	andeq	r0, r0, r7, lsl lr
   11e18:	andeq	r0, r0, sp, lsl #26
   11e1c:	andeq	r0, r0, r1, ror ip
   11e20:	andeq	r0, r0, sl, lsr #25
   11e24:	andeq	r0, r0, r0, asr #25
   11e28:	andeq	r0, r0, fp, lsr #25
   11e2c:	andeq	r0, r0, r8, ror #24
   11e30:	andeq	r0, r0, r9, asr #24
   11e34:	muleq	r0, sp, fp
   11e38:	andeq	r0, r0, r6, ror #23
   11e3c:	andeq	r0, r0, ip, ror #23
   11e40:	ldrdeq	r0, [r0], -r7
   11e44:	andeq	r0, r0, r5, asr fp
   11e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11e4c:	add	fp, sp, #28
   11e50:	sub	sp, sp, #4
   11e54:	vpush	{d8}
   11e58:	mov	r5, r0
   11e5c:	mov	r0, r1
   11e60:	mov	r6, r2
   11e64:	mov	r4, r1
   11e68:	bl	12368 <error@@Base+0x1260>
   11e6c:	movw	r0, #8048	; 0x1f70
   11e70:	ldr	r1, [r4, r0]!
   11e74:	ldr	r0, [r4, #4]
   11e78:	ldr	r2, [pc, #336]	; 11fd0 <error@@Base+0xec8>
   11e7c:	add	r2, pc, r2
   11e80:	bl	12000 <error@@Base+0xef8>
   11e84:	ldr	r1, [pc, #328]	; 11fd4 <error@@Base+0xecc>
   11e88:	mov	r0, r5
   11e8c:	mov	r2, r6
   11e90:	add	r1, pc, r1
   11e94:	bl	108cc <fprintf@plt>
   11e98:	ldr	r0, [pc, #312]	; 11fd8 <error@@Base+0xed0>
   11e9c:	mov	r1, #26
   11ea0:	mov	r2, #1
   11ea4:	mov	r3, r5
   11ea8:	add	r0, pc, r0
   11eac:	bl	1086c <fwrite@plt>
   11eb0:	ldr	r0, [pc, #292]	; 11fdc <error@@Base+0xed4>
   11eb4:	mov	r1, #3
   11eb8:	mov	r2, #1
   11ebc:	mov	r3, r5
   11ec0:	add	r0, pc, r0
   11ec4:	bl	1086c <fwrite@plt>
   11ec8:	mov	r0, #10
   11ecc:	mov	r1, r5
   11ed0:	bl	108f0 <fputc@plt>
   11ed4:	ldr	r0, [r4, #4]
   11ed8:	cmp	r0, #1
   11edc:	blt	11fb8 <error@@Base+0xeb0>
   11ee0:	ldr	r9, [pc, #248]	; 11fe0 <error@@Base+0xed8>
   11ee4:	ldr	r7, [pc, #248]	; 11fe4 <error@@Base+0xedc>
   11ee8:	ldr	r6, [pc, #248]	; 11fe8 <error@@Base+0xee0>
   11eec:	vldr	d8, [pc, #212]	; 11fc8 <error@@Base+0xec0>
   11ef0:	mov	r8, #0
   11ef4:	add	r9, pc, r9
   11ef8:	add	r7, pc, r7
   11efc:	add	r6, pc, r6
   11f00:	b	11f74 <error@@Base+0xe6c>
   11f04:	ldr	r1, [sl, #16]
   11f08:	vmov	s2, r0
   11f0c:	sub	r1, r0, r1
   11f10:	mov	r0, r5
   11f14:	vmov	s0, r1
   11f18:	vcvt.f64.s32	d16, s0
   11f1c:	vcvt.f64.s32	d17, s2
   11f20:	ldr	r1, [pc, #200]	; 11ff0 <error@@Base+0xee8>
   11f24:	add	r1, pc, r1
   11f28:	vmul.f64	d16, d16, d8
   11f2c:	vdiv.f64	d16, d16, d17
   11f30:	vmov	r2, r3, d16
   11f34:	bl	108cc <fprintf@plt>
   11f38:	mov	r0, r7
   11f3c:	mov	r1, #3
   11f40:	mov	r2, #1
   11f44:	mov	r3, r5
   11f48:	bl	1086c <fwrite@plt>
   11f4c:	ldr	r0, [r4]
   11f50:	mov	r1, r6
   11f54:	ldr	r0, [r0, r8, lsl #2]
   11f58:	ldr	r2, [r0, #8]
   11f5c:	mov	r0, r5
   11f60:	bl	108cc <fprintf@plt>
   11f64:	ldr	r0, [r4, #4]
   11f68:	add	r8, r8, #1
   11f6c:	cmp	r8, r0
   11f70:	bge	11fb8 <error@@Base+0xeb0>
   11f74:	ldr	r0, [r4]
   11f78:	mov	r1, r9
   11f7c:	ldr	sl, [r0, r8, lsl #2]
   11f80:	mov	r0, r5
   11f84:	ldr	r2, [sl, #12]
   11f88:	ldr	r3, [sl, #16]
   11f8c:	bl	108cc <fprintf@plt>
   11f90:	ldr	r0, [sl, #12]
   11f94:	cmp	r0, #0
   11f98:	bne	11f04 <error@@Base+0xdfc>
   11f9c:	ldr	r0, [pc, #72]	; 11fec <error@@Base+0xee4>
   11fa0:	mov	r1, #8
   11fa4:	mov	r2, #1
   11fa8:	mov	r3, r5
   11fac:	add	r0, pc, r0
   11fb0:	bl	1086c <fwrite@plt>
   11fb4:	b	11f38 <error@@Base+0xe30>
   11fb8:	vpop	{d8}
   11fbc:	add	sp, sp, #4
   11fc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fc4:	nop	{0}
   11fc8:	andeq	r0, r0, r0
   11fcc:	subsmi	r0, r9, r0
   11fd0:	andeq	r0, r0, r0, ror r1
   11fd4:	andeq	r0, r0, ip, lsr #21
   11fd8:	andeq	r0, r0, r4, asr #21
   11fdc:	andeq	r0, r0, r7, asr #21
   11fe0:	andeq	r0, r0, sp, ror #20
   11fe4:	andeq	r0, r0, pc, lsl #21
   11fe8:	andeq	r0, r0, r1, asr #20
   11fec:	andeq	r0, r0, r1, lsl #19
   11ff0:	andeq	r0, r0, r2, lsl sl
   11ff4:	ldr	r1, [r1, #8]
   11ff8:	ldr	r0, [r0, #8]
   11ffc:	b	10c5c <abort@plt+0x348>
   12000:	cmp	r0, #2
   12004:	bxlt	lr
   12008:	ldr	r3, [pc, #28]	; 1202c <error@@Base+0xf24>
   1200c:	add	r3, pc, r3
   12010:	str	r2, [r3]
   12014:	ldr	r2, [pc, #20]	; 12030 <error@@Base+0xf28>
   12018:	add	r2, pc, r2
   1201c:	str	r1, [r2]
   12020:	sub	r1, r0, #1
   12024:	mov	r0, #0
   12028:	b	12034 <error@@Base+0xf2c>
   1202c:	andeq	r1, r1, r4, lsl #2
   12030:	strdeq	r1, [r1], -r4
   12034:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12038:	add	fp, sp, #24
   1203c:	mov	r8, r1
   12040:	mov	r5, r0
   12044:	b	12074 <error@@Base+0xf6c>
   12048:	mov	r7, r4
   1204c:	ldr	r0, [pc, #308]	; 12188 <error@@Base+0x1080>
   12050:	ldr	r0, [pc, r0]
   12054:	sub	r1, r4, #1
   12058:	str	r6, [r0, r4, lsl #2]
   1205c:	cmp	r1, r5
   12060:	movgt	r0, r5
   12064:	blgt	12034 <error@@Base+0xf2c>
   12068:	add	r5, r7, #1
   1206c:	cmp	r5, r8
   12070:	bge	12168 <error@@Base+0x1060>
   12074:	ldr	r0, [pc, #240]	; 1216c <error@@Base+0x1064>
   12078:	cmp	r5, r8
   1207c:	mov	r4, r8
   12080:	mov	r7, r5
   12084:	ldr	r0, [pc, r0]
   12088:	ldr	r6, [r0, r5, lsl #2]
   1208c:	bge	12054 <error@@Base+0xf4c>
   12090:	mov	r7, r5
   12094:	mov	r4, r8
   12098:	cmp	r7, r4
   1209c:	blt	120b4 <error@@Base+0xfac>
   120a0:	b	120e4 <error@@Base+0xfdc>
   120a4:	cmp	r7, r4
   120a8:	bge	1204c <error@@Base+0xf44>
   120ac:	cmp	r7, r4
   120b0:	bge	120e4 <error@@Base+0xfdc>
   120b4:	ldr	r0, [pc, #180]	; 12170 <error@@Base+0x1068>
   120b8:	ldr	r0, [pc, r0]
   120bc:	ldr	r1, [r0, r4, lsl #2]
   120c0:	ldr	r2, [pc, #172]	; 12174 <error@@Base+0x106c>
   120c4:	mov	r0, r6
   120c8:	ldr	r2, [pc, r2]
   120cc:	blx	r2
   120d0:	cmn	r0, #1
   120d4:	bgt	120e4 <error@@Base+0xfdc>
   120d8:	sub	r4, r4, #1
   120dc:	cmp	r7, r4
   120e0:	blt	120b4 <error@@Base+0xfac>
   120e4:	cmp	r7, r4
   120e8:	bne	120f8 <error@@Base+0xff0>
   120ec:	cmp	r7, r4
   120f0:	blt	12114 <error@@Base+0x100c>
   120f4:	b	12148 <error@@Base+0x1040>
   120f8:	ldr	r0, [pc, #120]	; 12178 <error@@Base+0x1070>
   120fc:	ldr	r0, [pc, r0]
   12100:	ldr	r1, [r0, r4, lsl #2]
   12104:	str	r1, [r0, r7, lsl #2]
   12108:	add	r7, r7, #1
   1210c:	cmp	r7, r4
   12110:	bge	12148 <error@@Base+0x1040>
   12114:	ldr	r0, [pc, #96]	; 1217c <error@@Base+0x1074>
   12118:	ldr	r0, [pc, r0]
   1211c:	ldr	r1, [r0, r7, lsl #2]
   12120:	ldr	r2, [pc, #88]	; 12180 <error@@Base+0x1078>
   12124:	mov	r0, r6
   12128:	ldr	r2, [pc, r2]
   1212c:	blx	r2
   12130:	cmp	r0, #1
   12134:	blt	12148 <error@@Base+0x1040>
   12138:	add	r7, r7, #1
   1213c:	cmp	r4, r7
   12140:	bne	12114 <error@@Base+0x100c>
   12144:	b	12048 <error@@Base+0xf40>
   12148:	cmp	r7, r4
   1214c:	beq	120a4 <error@@Base+0xf9c>
   12150:	ldr	r0, [pc, #44]	; 12184 <error@@Base+0x107c>
   12154:	ldr	r0, [pc, r0]
   12158:	ldr	r1, [r0, r7, lsl #2]
   1215c:	str	r1, [r0, r4, lsl #2]
   12160:	sub	r4, r4, #1
   12164:	b	120a4 <error@@Base+0xf9c>
   12168:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   1216c:	andeq	r1, r1, r8, lsl #1
   12170:	andeq	r1, r1, r4, asr r0
   12174:	andeq	r1, r1, r8, asr #32
   12178:	andeq	r1, r1, r0, lsl r0
   1217c:	strdeq	r0, [r1], -r4
   12180:	andeq	r0, r1, r8, ror #31
   12184:			; <UNDEFINED> instruction: 0x00010fb8
   12188:	strheq	r1, [r1], -ip
   1218c:	push	{r4, r5, r6, sl, fp, lr}
   12190:	add	fp, sp, #16
   12194:	mov	r4, r0
   12198:	movw	r0, #8048	; 0x1f70
   1219c:	movw	r6, #503	; 0x1f7
   121a0:	add	r5, r4, r0
   121a4:	mov	r0, r4
   121a8:	bl	12440 <error@@Base+0x1338>
   121ac:	subs	r6, r6, #1
   121b0:	add	r4, r4, #16
   121b4:	bne	121a4 <error@@Base+0x109c>
   121b8:	mov	r0, #0
   121bc:	str	r0, [r5]
   121c0:	str	r0, [r5, #4]
   121c4:	pop	{r4, r5, r6, sl, fp, pc}
   121c8:	push	{r4, r5, r6, sl, fp, lr}
   121cc:	add	fp, sp, #16
   121d0:	mov	r5, r1
   121d4:	ldrb	r1, [r1]
   121d8:	mov	r4, #0
   121dc:	mov	r2, #0
   121e0:	cmp	r1, #0
   121e4:	beq	12218 <error@@Base+0x1110>
   121e8:	add	r3, r5, #1
   121ec:	mov	r2, #0
   121f0:	uxtab	r2, r2, r1
   121f4:	ldrb	r1, [r3], #1
   121f8:	cmp	r1, #0
   121fc:	bne	121f0 <error@@Base+0x10e8>
   12200:	movw	r1, #20065	; 0x4e61
   12204:	movt	r1, #33354	; 0x824a
   12208:	umull	r1, r3, r2, r1
   1220c:	lsr	r1, r3, #8
   12210:	movw	r3, #503	; 0x1f7
   12214:	mls	r2, r1, r3, r2
   12218:	ldr	r6, [r0, r2, lsl #4]
   1221c:	cmp	r6, #0
   12220:	beq	12244 <error@@Base+0x113c>
   12224:	ldr	r1, [r6, #8]
   12228:	mov	r0, r5
   1222c:	bl	1080c <strcmp@plt>
   12230:	cmp	r0, #0
   12234:	beq	1224c <error@@Base+0x1144>
   12238:	ldr	r6, [r6, #4]
   1223c:	cmp	r6, #0
   12240:	bne	12224 <error@@Base+0x111c>
   12244:	mov	r0, r4
   12248:	pop	{r4, r5, r6, sl, fp, pc}
   1224c:	mov	r4, r6
   12250:	mov	r0, r4
   12254:	pop	{r4, r5, r6, sl, fp, pc}
   12258:	push	{r4, r5, fp, lr}
   1225c:	add	fp, sp, #8
   12260:	movw	r2, #8048	; 0x1f70
   12264:	add	r5, r0, r2
   12268:	ldr	r2, [r1, #8]
   1226c:	ldrb	r3, [r2]
   12270:	cmp	r3, #0
   12274:	beq	122ac <error@@Base+0x11a4>
   12278:	add	r4, r2, #1
   1227c:	mov	r2, #0
   12280:	uxtab	r2, r2, r3
   12284:	ldrb	r3, [r4], #1
   12288:	cmp	r3, #0
   1228c:	bne	12280 <error@@Base+0x1178>
   12290:	movw	r3, #20065	; 0x4e61
   12294:	movt	r3, #33354	; 0x824a
   12298:	umull	r3, r4, r2, r3
   1229c:	lsr	r3, r4, #8
   122a0:	movw	r4, #503	; 0x1f7
   122a4:	mls	r2, r3, r4, r2
   122a8:	b	122b0 <error@@Base+0x11a8>
   122ac:	mov	r2, #0
   122b0:	add	r0, r0, r2, lsl #4
   122b4:	bl	1244c <error@@Base+0x1344>
   122b8:	ldr	r0, [r5]
   122bc:	cmp	r0, #0
   122c0:	beq	122d0 <error@@Base+0x11c8>
   122c4:	bl	10830 <free@plt>
   122c8:	mov	r0, #0
   122cc:	str	r0, [r5]
   122d0:	ldr	r0, [r5, #4]
   122d4:	add	r0, r0, #1
   122d8:	str	r0, [r5, #4]
   122dc:	pop	{r4, r5, fp, pc}
   122e0:	push	{r4, r5, fp, lr}
   122e4:	add	fp, sp, #8
   122e8:	movw	r2, #8048	; 0x1f70
   122ec:	add	r5, r0, r2
   122f0:	ldr	r2, [r1, #8]
   122f4:	ldrb	r3, [r2]
   122f8:	cmp	r3, #0
   122fc:	beq	12334 <error@@Base+0x122c>
   12300:	add	r4, r2, #1
   12304:	mov	r2, #0
   12308:	uxtab	r2, r2, r3
   1230c:	ldrb	r3, [r4], #1
   12310:	cmp	r3, #0
   12314:	bne	12308 <error@@Base+0x1200>
   12318:	movw	r3, #20065	; 0x4e61
   1231c:	movt	r3, #33354	; 0x824a
   12320:	umull	r3, r4, r2, r3
   12324:	lsr	r3, r4, #8
   12328:	movw	r4, #503	; 0x1f7
   1232c:	mls	r2, r3, r4, r2
   12330:	b	12338 <error@@Base+0x1230>
   12334:	mov	r2, #0
   12338:	add	r0, r0, r2, lsl #4
   1233c:	bl	12594 <error@@Base+0x148c>
   12340:	ldr	r0, [r5]
   12344:	cmp	r0, #0
   12348:	beq	12358 <error@@Base+0x1250>
   1234c:	bl	10830 <free@plt>
   12350:	mov	r0, #0
   12354:	str	r0, [r5]
   12358:	ldr	r0, [r5, #4]
   1235c:	sub	r0, r0, #1
   12360:	str	r0, [r5, #4]
   12364:	pop	{r4, r5, fp, pc}
   12368:	push	{r4, r5, fp, lr}
   1236c:	add	fp, sp, #8
   12370:	mov	r4, r0
   12374:	movw	r0, #8048	; 0x1f70
   12378:	mov	r5, r4
   1237c:	ldr	r0, [r5, r0]!
   12380:	cmp	r0, #0
   12384:	bne	123e4 <error@@Base+0x12dc>
   12388:	ldr	r0, [r5, #4]
   1238c:	cmp	r0, #0
   12390:	popeq	{r4, r5, fp, pc}
   12394:	mov	r1, #4
   12398:	bl	10c38 <abort@plt+0x324>
   1239c:	str	r0, [r5]
   123a0:	mov	r0, #0
   123a4:	movw	ip, #503	; 0x1f7
   123a8:	mov	r2, #0
   123ac:	b	123bc <error@@Base+0x12b4>
   123b0:	add	r2, r2, #1
   123b4:	cmp	r2, ip
   123b8:	beq	123e4 <error@@Base+0x12dc>
   123bc:	ldr	r3, [r4, r2, lsl #4]
   123c0:	cmp	r3, #0
   123c4:	beq	123b0 <error@@Base+0x12a8>
   123c8:	ldr	r1, [r5]
   123cc:	str	r3, [r1, r0, lsl #2]
   123d0:	add	r0, r0, #1
   123d4:	ldr	r3, [r3, #4]
   123d8:	cmp	r3, #0
   123dc:	bne	123c8 <error@@Base+0x12c0>
   123e0:	b	123b0 <error@@Base+0x12a8>
   123e4:	pop	{r4, r5, fp, pc}
   123e8:	push	{r4, r5, r6, r7, fp, lr}
   123ec:	add	fp, sp, #16
   123f0:	mov	r5, r0
   123f4:	movw	r0, #8048	; 0x1f70
   123f8:	mov	r4, r1
   123fc:	movw	r7, #503	; 0x1f7
   12400:	add	r6, r5, r0
   12404:	mov	r0, r5
   12408:	mov	r1, r4
   1240c:	bl	12668 <error@@Base+0x1560>
   12410:	subs	r7, r7, #1
   12414:	add	r5, r5, #16
   12418:	bne	12404 <error@@Base+0x12fc>
   1241c:	ldr	r0, [r6]
   12420:	cmp	r0, #0
   12424:	beq	12434 <error@@Base+0x132c>
   12428:	bl	10830 <free@plt>
   1242c:	mov	r0, #0
   12430:	str	r0, [r6]
   12434:	mov	r0, #0
   12438:	str	r0, [r6, #4]
   1243c:	pop	{r4, r5, r6, r7, fp, pc}
   12440:	vmov.i32	q8, #0	; 0x00000000
   12444:	vst1.32	{d16-d17}, [r0]
   12448:	bx	lr
   1244c:	push	{r4, r5, fp, lr}
   12450:	add	fp, sp, #8
   12454:	mov	r4, r0
   12458:	ldr	r0, [r0]
   1245c:	mov	r5, #0
   12460:	str	r5, [r1]
   12464:	cmp	r0, #0
   12468:	str	r0, [r1, #4]
   1246c:	str	r1, [r4]
   12470:	addeq	r0, r4, #4
   12474:	str	r1, [r0]
   12478:	ldr	r0, [r4, #8]
   1247c:	cmp	r0, #0
   12480:	beq	1248c <error@@Base+0x1384>
   12484:	bl	10830 <free@plt>
   12488:	str	r5, [r4, #8]
   1248c:	ldr	r0, [r4, #12]
   12490:	add	r0, r0, #1
   12494:	str	r0, [r4, #12]
   12498:	pop	{r4, r5, fp, pc}
   1249c:	push	{r4, r5, fp, lr}
   124a0:	add	fp, sp, #8
   124a4:	mov	r4, r0
   124a8:	ldr	r0, [r0, #4]
   124ac:	mov	r5, #0
   124b0:	mov	r2, r4
   124b4:	cmp	r0, #0
   124b8:	stm	r1, {r0, r5}
   124bc:	addne	r2, r0, #4
   124c0:	str	r1, [r2]
   124c4:	str	r1, [r4, #4]
   124c8:	ldr	r0, [r4, #8]
   124cc:	cmp	r0, #0
   124d0:	beq	124dc <error@@Base+0x13d4>
   124d4:	bl	10830 <free@plt>
   124d8:	str	r5, [r4, #8]
   124dc:	ldr	r0, [r4, #12]
   124e0:	add	r0, r0, #1
   124e4:	str	r0, [r4, #12]
   124e8:	pop	{r4, r5, fp, pc}
   124ec:	push	{r4, sl, fp, lr}
   124f0:	add	fp, sp, #8
   124f4:	mov	r4, r0
   124f8:	ldr	r0, [r2]
   124fc:	mov	r3, r4
   12500:	cmp	r0, #0
   12504:	stm	r1, {r0, r2}
   12508:	addne	r3, r0, #4
   1250c:	str	r1, [r3]
   12510:	str	r1, [r2]
   12514:	ldr	r0, [r4, #8]
   12518:	cmp	r0, #0
   1251c:	beq	1252c <error@@Base+0x1424>
   12520:	bl	10830 <free@plt>
   12524:	mov	r0, #0
   12528:	str	r0, [r4, #8]
   1252c:	ldr	r0, [r4, #12]
   12530:	add	r0, r0, #1
   12534:	str	r0, [r4, #12]
   12538:	pop	{r4, sl, fp, pc}
   1253c:	push	{r4, sl, fp, lr}
   12540:	add	fp, sp, #8
   12544:	mov	r4, r0
   12548:	mov	r0, r1
   1254c:	cmp	r1, #0
   12550:	ldr	r3, [r0, #4]!
   12554:	moveq	r0, r4
   12558:	stm	r2, {r1, r3}
   1255c:	str	r2, [r0]
   12560:	cmp	r3, #0
   12564:	addeq	r3, r4, #4
   12568:	str	r2, [r3]
   1256c:	ldr	r0, [r4, #8]
   12570:	cmp	r0, #0
   12574:	beq	12584 <error@@Base+0x147c>
   12578:	bl	10830 <free@plt>
   1257c:	mov	r0, #0
   12580:	str	r0, [r4, #8]
   12584:	ldr	r0, [r4, #12]
   12588:	add	r0, r0, #1
   1258c:	str	r0, [r4, #12]
   12590:	pop	{r4, sl, fp, pc}
   12594:	push	{r4, r5, fp, lr}
   12598:	add	fp, sp, #8
   1259c:	mov	r4, r0
   125a0:	ldm	r1, {r0, r2}
   125a4:	cmp	r0, #0
   125a8:	beq	125b8 <error@@Base+0x14b0>
   125ac:	str	r2, [r0, #4]
   125b0:	ldr	r2, [r1, #4]
   125b4:	b	125bc <error@@Base+0x14b4>
   125b8:	str	r2, [r4]
   125bc:	cmp	r2, #0
   125c0:	mov	r5, #0
   125c4:	addeq	r2, r4, #4
   125c8:	str	r0, [r2]
   125cc:	str	r5, [r1]
   125d0:	str	r5, [r1, #4]
   125d4:	ldr	r0, [r4, #8]
   125d8:	cmp	r0, #0
   125dc:	beq	125e8 <error@@Base+0x14e0>
   125e0:	bl	10830 <free@plt>
   125e4:	str	r5, [r4, #8]
   125e8:	ldr	r0, [r4, #12]
   125ec:	sub	r0, r0, #1
   125f0:	str	r0, [r4, #12]
   125f4:	pop	{r4, r5, fp, pc}
   125f8:	push	{r4, sl, fp, lr}
   125fc:	add	fp, sp, #8
   12600:	mov	r4, r0
   12604:	ldr	r0, [r0, #8]
   12608:	cmp	r0, #0
   1260c:	beq	12614 <error@@Base+0x150c>
   12610:	pop	{r4, sl, fp, pc}
   12614:	ldr	r0, [r4, #12]
   12618:	cmp	r0, #0
   1261c:	beq	12610 <error@@Base+0x1508>
   12620:	mov	r1, #4
   12624:	bl	10c38 <abort@plt+0x324>
   12628:	str	r0, [r4, #8]
   1262c:	ldr	r1, [r4]
   12630:	cmp	r1, #0
   12634:	beq	12610 <error@@Base+0x1508>
   12638:	str	r1, [r0]
   1263c:	ldr	r0, [r1, #4]
   12640:	cmp	r0, #0
   12644:	popeq	{r4, sl, fp, pc}
   12648:	mov	r1, #4
   1264c:	ldr	r2, [r4, #8]
   12650:	str	r0, [r2, r1]
   12654:	add	r1, r1, #4
   12658:	ldr	r0, [r0, #4]
   1265c:	cmp	r0, #0
   12660:	bne	1264c <error@@Base+0x1544>
   12664:	b	12610 <error@@Base+0x1508>
   12668:	push	{r4, r5, r6, r7, fp, lr}
   1266c:	add	fp, sp, #16
   12670:	ldr	r6, [r0]
   12674:	cmp	r6, #0
   12678:	beq	126f4 <error@@Base+0x15ec>
   1267c:	mov	r4, r1
   12680:	mov	r5, r0
   12684:	mov	r7, #0
   12688:	b	126ac <error@@Base+0x15a4>
   1268c:	ldr	r0, [r5, #12]
   12690:	sub	r0, r0, #1
   12694:	str	r0, [r5, #12]
   12698:	mov	r0, r6
   1269c:	blx	r4
   126a0:	ldr	r6, [r5]
   126a4:	cmp	r6, #0
   126a8:	beq	126f4 <error@@Base+0x15ec>
   126ac:	ldm	r6, {r0, r1}
   126b0:	cmp	r0, #0
   126b4:	beq	126c4 <error@@Base+0x15bc>
   126b8:	str	r1, [r0, #4]
   126bc:	ldr	r1, [r6, #4]
   126c0:	b	126c8 <error@@Base+0x15c0>
   126c4:	str	r1, [r5]
   126c8:	cmp	r1, #0
   126cc:	addeq	r1, r5, #4
   126d0:	str	r0, [r1]
   126d4:	str	r7, [r6]
   126d8:	str	r7, [r6, #4]
   126dc:	ldr	r0, [r5, #8]
   126e0:	cmp	r0, #0
   126e4:	beq	1268c <error@@Base+0x1584>
   126e8:	bl	10830 <free@plt>
   126ec:	str	r7, [r5, #8]
   126f0:	b	1268c <error@@Base+0x1584>
   126f4:	pop	{r4, r5, r6, r7, fp, pc}
   126f8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126fc:	mov	r7, r0
   12700:	ldr	r6, [pc, #72]	; 12750 <error@@Base+0x1648>
   12704:	ldr	r5, [pc, #72]	; 12754 <error@@Base+0x164c>
   12708:	add	r6, pc, r6
   1270c:	add	r5, pc, r5
   12710:	sub	r6, r6, r5
   12714:	mov	r8, r1
   12718:	mov	r9, r2
   1271c:	bl	107e0 <calloc@plt-0x20>
   12720:	asrs	r6, r6, #2
   12724:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12728:	mov	r4, #0
   1272c:	add	r4, r4, #1
   12730:	ldr	r3, [r5], #4
   12734:	mov	r2, r9
   12738:	mov	r1, r8
   1273c:	mov	r0, r7
   12740:	blx	r3
   12744:	cmp	r6, r4
   12748:	bne	1272c <error@@Base+0x1624>
   1274c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12750:	andeq	r0, r1, ip, ror #15
   12754:	andeq	r0, r1, r4, ror #15
   12758:	bx	lr

Disassembly of section .fini:

0001275c <.fini>:
   1275c:	push	{r3, lr}
   12760:	pop	{r3, pc}
