
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012f58 <.init>:
   12f58:	push	{r3, lr}
   12f5c:	bl	13044 <_start@@Base+0x3c>
   12f60:	pop	{r3, pc}

Disassembly of section .plt:

00012f64 <strcmp@plt-0x14>:
   12f64:	push	{lr}		; (str lr, [sp, #-4]!)
   12f68:	ldr	lr, [pc, #4]	; 12f74 <strcmp@plt-0x4>
   12f6c:	add	lr, pc, lr
   12f70:	ldr	pc, [lr, #8]!
   12f74:	andeq	r6, r1, ip, lsl #1

00012f78 <strcmp@plt>:
   12f78:	add	ip, pc, #0, 12
   12f7c:	add	ip, ip, #90112	; 0x16000
   12f80:	ldr	pc, [ip, #140]!	; 0x8c

00012f84 <printf@plt>:
   12f84:	add	ip, pc, #0, 12
   12f88:	add	ip, ip, #90112	; 0x16000
   12f8c:	ldr	pc, [ip, #132]!	; 0x84

00012f90 <free@plt>:
   12f90:	add	ip, pc, #0, 12
   12f94:	add	ip, ip, #90112	; 0x16000
   12f98:	ldr	pc, [ip, #124]!	; 0x7c

00012f9c <realloc@plt>:
   12f9c:	add	ip, pc, #0, 12
   12fa0:	add	ip, ip, #90112	; 0x16000
   12fa4:	ldr	pc, [ip, #116]!	; 0x74

00012fa8 <strcpy@plt>:
   12fa8:	add	ip, pc, #0, 12
   12fac:	add	ip, ip, #90112	; 0x16000
   12fb0:	ldr	pc, [ip, #108]!	; 0x6c

00012fb4 <malloc@plt>:
   12fb4:	add	ip, pc, #0, 12
   12fb8:	add	ip, ip, #90112	; 0x16000
   12fbc:	ldr	pc, [ip, #100]!	; 0x64

00012fc0 <__libc_start_main@plt>:
   12fc0:	add	ip, pc, #0, 12
   12fc4:	add	ip, ip, #90112	; 0x16000
   12fc8:	ldr	pc, [ip, #92]!	; 0x5c

00012fcc <__gmon_start__@plt>:
   12fcc:	add	ip, pc, #0, 12
   12fd0:	add	ip, ip, #90112	; 0x16000
   12fd4:	ldr	pc, [ip, #84]!	; 0x54

00012fd8 <strlen@plt>:
   12fd8:	add	ip, pc, #0, 12
   12fdc:	add	ip, ip, #90112	; 0x16000
   12fe0:	ldr	pc, [ip, #76]!	; 0x4c

00012fe4 <snprintf@plt>:
   12fe4:	add	ip, pc, #0, 12
   12fe8:	add	ip, ip, #90112	; 0x16000
   12fec:	ldr	pc, [ip, #68]!	; 0x44

00012ff0 <__isoc99_sscanf@plt>:
   12ff0:	add	ip, pc, #0, 12
   12ff4:	add	ip, ip, #90112	; 0x16000
   12ff8:	ldr	pc, [ip, #60]!	; 0x3c

00012ffc <abort@plt>:
   12ffc:	add	ip, pc, #0, 12
   13000:	add	ip, ip, #90112	; 0x16000
   13004:	ldr	pc, [ip, #52]!	; 0x34

Disassembly of section .text:

00013008 <_start@@Base>:
   13008:	mov	fp, #0
   1300c:	mov	lr, #0
   13010:	pop	{r1}		; (ldr r1, [sp], #4)
   13014:	mov	r2, sp
   13018:	push	{r2}		; (str r2, [sp, #-4]!)
   1301c:	push	{r0}		; (str r0, [sp, #-4]!)
   13020:	ldr	ip, [pc, #16]	; 13038 <_start@@Base+0x30>
   13024:	push	{ip}		; (str ip, [sp, #-4]!)
   13028:	ldr	r0, [pc, #12]	; 1303c <_start@@Base+0x34>
   1302c:	ldr	r3, [pc, #12]	; 13040 <_start@@Base+0x38>
   13030:	bl	12fc0 <__libc_start_main@plt>
   13034:	bl	12ffc <abort@plt>
   13038:	andeq	r8, r1, ip, ror #20
   1303c:	strdeq	r3, [r1], -r8
   13040:	andeq	r8, r1, ip, lsl #20
   13044:	ldr	r3, [pc, #20]	; 13060 <_start@@Base+0x58>
   13048:	ldr	r2, [pc, #20]	; 13064 <_start@@Base+0x5c>
   1304c:	add	r3, pc, r3
   13050:	ldr	r2, [r3, r2]
   13054:	cmp	r2, #0
   13058:	bxeq	lr
   1305c:	b	12fcc <__gmon_start__@plt>
   13060:	andeq	r5, r1, ip, lsr #31
   13064:	andeq	r0, r0, ip, lsr r0
   13068:	ldr	r0, [pc, #24]	; 13088 <_start@@Base+0x80>
   1306c:	ldr	r3, [pc, #24]	; 1308c <_start@@Base+0x84>
   13070:	cmp	r3, r0
   13074:	bxeq	lr
   13078:	ldr	r3, [pc, #16]	; 13090 <_start@@Base+0x88>
   1307c:	cmp	r3, #0
   13080:	bxeq	lr
   13084:	bx	r3
   13088:	andeq	r9, r2, r8, asr #32
   1308c:	andeq	r9, r2, r8, asr #32
   13090:	andeq	r0, r0, r0
   13094:	ldr	r0, [pc, #36]	; 130c0 <_start@@Base+0xb8>
   13098:	ldr	r1, [pc, #36]	; 130c4 <_start@@Base+0xbc>
   1309c:	sub	r1, r1, r0
   130a0:	asr	r1, r1, #2
   130a4:	add	r1, r1, r1, lsr #31
   130a8:	asrs	r1, r1, #1
   130ac:	bxeq	lr
   130b0:	ldr	r3, [pc, #16]	; 130c8 <_start@@Base+0xc0>
   130b4:	cmp	r3, #0
   130b8:	bxeq	lr
   130bc:	bx	r3
   130c0:	andeq	r9, r2, r8, asr #32
   130c4:	andeq	r9, r2, r8, asr #32
   130c8:	andeq	r0, r0, r0
   130cc:	push	{r4, lr}
   130d0:	ldr	r4, [pc, #24]	; 130f0 <_start@@Base+0xe8>
   130d4:	ldrb	r3, [r4]
   130d8:	cmp	r3, #0
   130dc:	popne	{r4, pc}
   130e0:	bl	13068 <_start@@Base+0x60>
   130e4:	mov	r3, #1
   130e8:	strb	r3, [r4]
   130ec:	pop	{r4, pc}
   130f0:	andeq	r9, r2, r8, asr #32
   130f4:	b	13094 <_start@@Base+0x8c>

000130f8 <main@@Base>:
   130f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130fc:	add	fp, sp, #28
   13100:	sub	sp, sp, #4
   13104:	vpush	{d8-d10}
   13108:	sub	sp, sp, #64	; 0x40
   1310c:	add	r5, sp, #8
   13110:	mov	r0, r5
   13114:	bl	13368 <table_init@@Base>
   13118:	ldr	r1, [pc, #480]	; 13300 <main@@Base+0x208>
   1311c:	mov	r0, r5
   13120:	mov	r2, #0
   13124:	mov	r7, #0
   13128:	add	r1, pc, r1
   1312c:	bl	13de4 <table_add_column@@Base>
   13130:	ldr	r1, [pc, #460]	; 13304 <main@@Base+0x20c>
   13134:	mov	r6, r0
   13138:	mov	r0, r5
   1313c:	mov	r2, #16
   13140:	add	r1, pc, r1
   13144:	bl	13de4 <table_add_column@@Base>
   13148:	vldr	s18, [pc, #428]	; 132fc <main@@Base+0x204>
   1314c:	movw	sl, #39322	; 0x999a
   13150:	vmov.f32	s20, #80	; 0x3e800000  0.250
   13154:	mov	r8, r0
   13158:	mov	r4, #0
   1315c:	movt	sl, #6553	; 0x1999
   13160:	vmov.f32	s16, s18
   13164:	mov	r0, r5
   13168:	bl	16e20 <table_add_row@@Base>
   1316c:	movw	r1, #52429	; 0xcccd
   13170:	uxtb	r0, r4
   13174:	mov	r2, r6
   13178:	movt	r1, #52428	; 0xcccc
   1317c:	mul	r0, r0, r1
   13180:	mov	r1, r4
   13184:	ror	r0, r0, #1
   13188:	cmp	r0, sl
   1318c:	mov	r0, #0
   13190:	movwcc	r0, #1
   13194:	cmp	r4, #0
   13198:	movwne	r1, #1
   1319c:	and	r9, r1, r0
   131a0:	mov	r0, r5
   131a4:	mov	r1, r4
   131a8:	add	r7, r7, r9
   131ac:	mov	r3, r7
   131b0:	bl	173d0 <table_set_int@@Base>
   131b4:	cmp	r9, #0
   131b8:	mov	r0, r5
   131bc:	mov	r1, r4
   131c0:	mov	r2, r8
   131c4:	vseleq.f32	s0, s16, s18
   131c8:	tst	r4, #1
   131cc:	vadd.f32	s2, s0, s20
   131d0:	vseleq.f32	s2, s2, s0
   131d4:	cmp	r4, #0
   131d8:	vseleq.f32	s16, s0, s2
   131dc:	vmov.f32	s0, s16
   131e0:	bl	17bf0 <table_set_float@@Base>
   131e4:	add	r4, r4, #1
   131e8:	cmp	r4, #100	; 0x64
   131ec:	bne	13164 <main@@Base+0x6c>
   131f0:	add	r4, sp, #8
   131f4:	mov	r1, r6
   131f8:	mov	r2, #4
   131fc:	mov	r3, #0
   13200:	mov	r9, #0
   13204:	mov	r0, r4
   13208:	bl	16048 <table_sorted_find_int@@Base>
   1320c:	mov	r7, r0
   13210:	mov	r0, r4
   13214:	mov	r1, r6
   13218:	mov	r2, #4
   1321c:	mov	r3, #1
   13220:	bl	16048 <table_sorted_find_int@@Base>
   13224:	mov	r6, r0
   13228:	cmp	r7, #40	; 0x28
   1322c:	beq	13244 <main@@Base+0x14c>
   13230:	ldr	r0, [pc, #208]	; 13308 <main@@Base+0x210>
   13234:	mov	r1, r7
   13238:	add	r0, pc, r0
   1323c:	bl	12f84 <printf@plt>
   13240:	mvn	r9, #0
   13244:	cmp	r6, #49	; 0x31
   13248:	beq	13260 <main@@Base+0x168>
   1324c:	ldr	r0, [pc, #184]	; 1330c <main@@Base+0x214>
   13250:	mov	r1, r6
   13254:	add	r0, pc, r0
   13258:	bl	12f84 <printf@plt>
   1325c:	mvn	r9, #0
   13260:	vmov.f32	s16, #96	; 0x3f000000  0.5
   13264:	add	r4, sp, #8
   13268:	mov	r1, r8
   1326c:	mov	r2, #0
   13270:	mov	r3, r7
   13274:	str	r6, [sp]
   13278:	mov	r0, r4
   1327c:	vmov.f32	s0, s16
   13280:	bl	16a3c <table_sorted_subset_find_float@@Base>
   13284:	vmov.f32	s0, s16
   13288:	mov	r5, r0
   1328c:	mov	r0, r4
   13290:	mov	r1, r8
   13294:	mov	r2, #1
   13298:	mov	r3, r7
   1329c:	str	r6, [sp]
   132a0:	bl	16a3c <table_sorted_subset_find_float@@Base>
   132a4:	mov	r4, r0
   132a8:	cmp	r5, #42	; 0x2a
   132ac:	beq	132c4 <main@@Base+0x1cc>
   132b0:	ldr	r0, [pc, #88]	; 13310 <main@@Base+0x218>
   132b4:	mov	r1, r5
   132b8:	add	r0, pc, r0
   132bc:	bl	12f84 <printf@plt>
   132c0:	mvn	r9, #0
   132c4:	cmp	r4, #43	; 0x2b
   132c8:	beq	132e0 <main@@Base+0x1e8>
   132cc:	ldr	r0, [pc, #64]	; 13314 <main@@Base+0x21c>
   132d0:	mov	r1, r4
   132d4:	add	r0, pc, r0
   132d8:	bl	12f84 <printf@plt>
   132dc:	mvn	r9, #0
   132e0:	add	r0, sp, #8
   132e4:	bl	133c4 <table_destroy@@Base>
   132e8:	mov	r0, r9
   132ec:	sub	sp, fp, #56	; 0x38
   132f0:	vpop	{d8-d10}
   132f4:	add	sp, sp, #4
   132f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   132fc:	andeq	r0, r0, r0
   13300:	andeq	r5, r0, ip, asr #18
   13304:	andeq	r5, r0, r6, lsr r9
   13308:	andeq	r5, r0, r0, asr #16
   1330c:	andeq	r5, r0, ip, asr r8
   13310:	andeq	r5, r0, pc, lsr #16
   13314:	andeq	r5, r0, r1, asr r8

00013318 <table_new@@Base>:
   13318:	push	{fp, lr}
   1331c:	mov	fp, sp
   13320:	mov	r0, #56	; 0x38
   13324:	bl	12fb4 <malloc@plt>
   13328:	vmov.i32	q8, #0	; 0x00000000
   1332c:	mov	r1, #0
   13330:	mov	r2, #10
   13334:	mov	r3, #20
   13338:	str	r1, [r0]
   1333c:	stmib	r0, {r1, r2}
   13340:	str	r1, [r0, #12]
   13344:	str	r1, [r0, #16]
   13348:	str	r1, [r0, #20]
   1334c:	str	r3, [r0, #24]
   13350:	str	r1, [r0, #28]
   13354:	str	r2, [r0, #48]	; 0x30
   13358:	str	r1, [r0, #52]	; 0x34
   1335c:	add	r1, r0, #32
   13360:	vst1.32	{d16-d17}, [r1]
   13364:	pop	{fp, pc}

00013368 <table_init@@Base>:
   13368:	vmov.i32	q8, #0	; 0x00000000
   1336c:	mov	r1, #0
   13370:	mov	r2, #10
   13374:	mov	r3, #20
   13378:	str	r1, [r0]
   1337c:	stmib	r0, {r1, r2}
   13380:	str	r1, [r0, #12]
   13384:	str	r1, [r0, #16]
   13388:	str	r1, [r0, #20]
   1338c:	str	r3, [r0, #24]
   13390:	str	r1, [r0, #28]
   13394:	str	r2, [r0, #48]	; 0x30
   13398:	str	r1, [r0, #52]	; 0x34
   1339c:	add	r0, r0, #32
   133a0:	vst1.32	{d16-d17}, [r0]
   133a4:	bx	lr

000133a8 <table_delete@@Base>:
   133a8:	push	{r4, sl, fp, lr}
   133ac:	add	fp, sp, #8
   133b0:	mov	r4, r0
   133b4:	bl	133c4 <table_destroy@@Base>
   133b8:	mov	r0, r4
   133bc:	pop	{r4, sl, fp, lr}
   133c0:	b	12f90 <free@plt>

000133c4 <table_destroy@@Base>:
   133c4:	cmp	r0, #0
   133c8:	bxeq	lr
   133cc:	push	{r4, r5, r6, sl, fp, lr}
   133d0:	add	fp, sp, #16
   133d4:	mvn	r1, #0
   133d8:	mvn	r2, #0
   133dc:	mov	r3, #64	; 0x40
   133e0:	mov	r4, r0
   133e4:	bl	13c5c <table_notify@@Base>
   133e8:	mov	r0, r4
   133ec:	bl	16e18 <table_get_row_length@@Base>
   133f0:	cmp	r0, #1
   133f4:	blt	13418 <table_destroy@@Base+0x54>
   133f8:	mov	r5, r0
   133fc:	mov	r6, #0
   13400:	mov	r0, r4
   13404:	mov	r1, r6
   13408:	bl	16dbc <table_row_destroy@@Base>
   1340c:	add	r6, r6, #1
   13410:	cmp	r5, r6
   13414:	bne	13400 <table_destroy@@Base+0x3c>
   13418:	ldr	r0, [r4, #16]
   1341c:	cmp	r0, #0
   13420:	beq	13428 <table_destroy@@Base+0x64>
   13424:	bl	12f90 <free@plt>
   13428:	mov	r0, r4
   1342c:	bl	13d58 <table_get_column_length@@Base>
   13430:	cmp	r0, #1
   13434:	blt	13458 <table_destroy@@Base+0x94>
   13438:	mov	r5, r0
   1343c:	mov	r6, #0
   13440:	mov	r0, r4
   13444:	mov	r1, r6
   13448:	bl	13d40 <table_column_destroy@@Base>
   1344c:	add	r6, r6, #1
   13450:	cmp	r5, r6
   13454:	bne	13440 <table_destroy@@Base+0x7c>
   13458:	ldr	r0, [r4]
   1345c:	cmp	r0, #0
   13460:	beq	13468 <table_destroy@@Base+0xa4>
   13464:	bl	12f90 <free@plt>
   13468:	ldr	r0, [r4, #36]	; 0x24
   1346c:	cmp	r0, #0
   13470:	beq	13478 <table_destroy@@Base+0xb4>
   13474:	bl	12f90 <free@plt>
   13478:	ldr	r0, [r4, #40]	; 0x28
   1347c:	cmp	r0, #0
   13480:	beq	13488 <table_destroy@@Base+0xc4>
   13484:	bl	12f90 <free@plt>
   13488:	ldr	r0, [r4, #44]	; 0x2c
   1348c:	cmp	r0, #0
   13490:	pop	{r4, r5, r6, sl, fp, lr}
   13494:	beq	1349c <table_destroy@@Base+0xd8>
   13498:	b	12f90 <free@plt>
   1349c:	bx	lr

000134a0 <table_dupe@@Base>:
   134a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134a4:	add	fp, sp, #28
   134a8:	sub	sp, sp, #12
   134ac:	mov	r4, r0
   134b0:	bl	16e18 <table_get_row_length@@Base>
   134b4:	mov	r8, r0
   134b8:	mov	r0, r4
   134bc:	bl	13d58 <table_get_column_length@@Base>
   134c0:	mov	r6, r0
   134c4:	mov	r0, #56	; 0x38
   134c8:	bl	12fb4 <malloc@plt>
   134cc:	vmov.i32	q8, #0	; 0x00000000
   134d0:	mov	sl, r0
   134d4:	mov	r5, #0
   134d8:	mov	r0, #10
   134dc:	mov	r1, #20
   134e0:	cmp	r6, #1
   134e4:	str	r5, [sl]
   134e8:	str	r5, [sl, #4]
   134ec:	str	r0, [sl, #8]
   134f0:	str	r5, [sl, #12]
   134f4:	str	r5, [sl, #16]
   134f8:	str	r5, [sl, #20]
   134fc:	str	r1, [sl, #24]
   13500:	str	r5, [sl, #28]
   13504:	str	r0, [sl, #48]	; 0x30
   13508:	add	r0, sl, #32
   1350c:	str	r5, [sl, #52]	; 0x34
   13510:	vst1.32	{d16-d17}, [r0]
   13514:	blt	13550 <table_dupe@@Base+0xb0>
   13518:	mov	r0, r4
   1351c:	mov	r1, r5
   13520:	bl	13dc0 <table_get_column_name@@Base>
   13524:	mov	r7, r0
   13528:	mov	r0, r4
   1352c:	mov	r1, r5
   13530:	bl	13dd0 <table_get_column_data_type@@Base>
   13534:	mov	r2, r0
   13538:	mov	r0, sl
   1353c:	mov	r1, r7
   13540:	bl	13de4 <table_add_column@@Base>
   13544:	add	r5, r5, #1
   13548:	cmp	r6, r5
   1354c:	bne	13518 <table_dupe@@Base+0x78>
   13550:	cmp	r8, #1
   13554:	blt	139c8 <table_dupe@@Base+0x528>
   13558:	mov	r5, #0
   1355c:	add	r9, sp, #8
   13560:	b	13570 <table_dupe@@Base+0xd0>
   13564:	add	r5, r5, #1
   13568:	cmp	r5, r8
   1356c:	beq	139c8 <table_dupe@@Base+0x528>
   13570:	mov	r0, sl
   13574:	bl	16e20 <table_add_row@@Base>
   13578:	cmp	r6, #1
   1357c:	blt	13564 <table_dupe@@Base+0xc4>
   13580:	mov	r7, #0
   13584:	b	135bc <table_dupe@@Base+0x11c>
   13588:	mov	r0, r4
   1358c:	mov	r1, r5
   13590:	mov	r2, r7
   13594:	bl	16d78 <table_get_ptr@@Base>
   13598:	str	r0, [sp, #8]
   1359c:	mov	r0, sl
   135a0:	mov	r1, r5
   135a4:	mov	r2, r7
   135a8:	mov	r3, r9
   135ac:	bl	17eac <table_set_ptr@@Base>
   135b0:	add	r7, r7, #1
   135b4:	cmp	r6, r7
   135b8:	beq	13564 <table_dupe@@Base+0xc4>
   135bc:	mov	r0, r4
   135c0:	mov	r1, r7
   135c4:	bl	13dd0 <table_get_column_data_type@@Base>
   135c8:	cmp	r0, #23
   135cc:	bhi	135b0 <table_dupe@@Base+0x110>
   135d0:	add	r1, pc, #4
   135d4:	ldr	r0, [r1, r0, lsl #2]
   135d8:	add	pc, r1, r0
   135dc:	andeq	r0, r0, r0, rrx
   135e0:	andeq	r0, r0, r8, lsl #1
   135e4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   135e8:	ldrdeq	r0, [r0], -r8
   135ec:	andeq	r0, r0, r0, lsl #2
   135f0:	andeq	r0, r0, r8, lsr #2
   135f4:	andeq	r0, r0, r0, asr r1
   135f8:	andeq	r0, r0, r8, ror r1
   135fc:	andeq	r0, r0, r0, lsr #3
   13600:	andeq	r0, r0, r8, asr #3
   13604:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13608:	andeq	r0, r0, r8, lsl r2
   1360c:	andeq	r0, r0, r0, asr #4
   13610:	andeq	r0, r0, r8, ror #4
   13614:	muleq	r0, r0, r2
   13618:			; <UNDEFINED> instruction: 0x000002b8
   1361c:	andeq	r0, r0, r0, ror #5
   13620:	andeq	r0, r0, r4, lsl #6
   13624:	andeq	r0, r0, r8, lsr #6
   13628:	andeq	r0, r0, ip, asr #6
   1362c:	andeq	r0, r0, r4, ror r3
   13630:	muleq	r0, ip, r3
   13634:	andeq	r0, r0, r4, asr #7
   13638:			; <UNDEFINED> instruction: 0xffffffac
   1363c:	mov	r0, r4
   13640:	mov	r1, r5
   13644:	mov	r2, r7
   13648:	bl	16b6c <table_get_int@@Base>
   1364c:	mov	r3, r0
   13650:	mov	r0, sl
   13654:	mov	r1, r5
   13658:	mov	r2, r7
   1365c:	bl	173d0 <table_set_int@@Base>
   13660:	b	135b0 <table_dupe@@Base+0x110>
   13664:	mov	r0, r4
   13668:	mov	r1, r5
   1366c:	mov	r2, r7
   13670:	bl	16b84 <table_get_uint@@Base>
   13674:	mov	r3, r0
   13678:	mov	r0, sl
   1367c:	mov	r1, r5
   13680:	mov	r2, r7
   13684:	bl	17450 <table_set_uint@@Base>
   13688:	b	135b0 <table_dupe@@Base+0x110>
   1368c:	mov	r0, r4
   13690:	mov	r1, r5
   13694:	mov	r2, r7
   13698:	bl	16b9c <table_get_int8@@Base>
   1369c:	mov	r3, r0
   136a0:	mov	r0, sl
   136a4:	mov	r1, r5
   136a8:	mov	r2, r7
   136ac:	bl	174d0 <table_set_int8@@Base>
   136b0:	b	135b0 <table_dupe@@Base+0x110>
   136b4:	mov	r0, r4
   136b8:	mov	r1, r5
   136bc:	mov	r2, r7
   136c0:	bl	16bb4 <table_get_uint8@@Base>
   136c4:	mov	r3, r0
   136c8:	mov	r0, sl
   136cc:	mov	r1, r5
   136d0:	mov	r2, r7
   136d4:	bl	17550 <table_set_uint8@@Base>
   136d8:	b	135b0 <table_dupe@@Base+0x110>
   136dc:	mov	r0, r4
   136e0:	mov	r1, r5
   136e4:	mov	r2, r7
   136e8:	bl	16bcc <table_get_int16@@Base>
   136ec:	mov	r3, r0
   136f0:	mov	r0, sl
   136f4:	mov	r1, r5
   136f8:	mov	r2, r7
   136fc:	bl	175d0 <table_set_int16@@Base>
   13700:	b	135b0 <table_dupe@@Base+0x110>
   13704:	mov	r0, r4
   13708:	mov	r1, r5
   1370c:	mov	r2, r7
   13710:	bl	16be4 <table_get_uint16@@Base>
   13714:	mov	r3, r0
   13718:	mov	r0, sl
   1371c:	mov	r1, r5
   13720:	mov	r2, r7
   13724:	bl	17650 <table_set_uint16@@Base>
   13728:	b	135b0 <table_dupe@@Base+0x110>
   1372c:	mov	r0, r4
   13730:	mov	r1, r5
   13734:	mov	r2, r7
   13738:	bl	16bfc <table_get_int32@@Base>
   1373c:	mov	r3, r0
   13740:	mov	r0, sl
   13744:	mov	r1, r5
   13748:	mov	r2, r7
   1374c:	bl	176d0 <table_set_int32@@Base>
   13750:	b	135b0 <table_dupe@@Base+0x110>
   13754:	mov	r0, r4
   13758:	mov	r1, r5
   1375c:	mov	r2, r7
   13760:	bl	16c14 <table_get_uint32@@Base>
   13764:	mov	r3, r0
   13768:	mov	r0, sl
   1376c:	mov	r1, r5
   13770:	mov	r2, r7
   13774:	bl	17750 <table_set_uint32@@Base>
   13778:	b	135b0 <table_dupe@@Base+0x110>
   1377c:	mov	r0, r4
   13780:	mov	r1, r5
   13784:	mov	r2, r7
   13788:	bl	16c2c <table_get_int64@@Base>
   1378c:	stm	sp, {r0, r1}
   13790:	mov	r0, sl
   13794:	mov	r1, r5
   13798:	mov	r2, r7
   1379c:	bl	177d0 <table_set_int64@@Base>
   137a0:	b	135b0 <table_dupe@@Base+0x110>
   137a4:	mov	r0, r4
   137a8:	mov	r1, r5
   137ac:	mov	r2, r7
   137b0:	bl	16c44 <table_get_uint64@@Base>
   137b4:	stm	sp, {r0, r1}
   137b8:	mov	r0, sl
   137bc:	mov	r1, r5
   137c0:	mov	r2, r7
   137c4:	bl	17858 <table_set_uint64@@Base>
   137c8:	b	135b0 <table_dupe@@Base+0x110>
   137cc:	mov	r0, r4
   137d0:	mov	r1, r5
   137d4:	mov	r2, r7
   137d8:	bl	16c5c <table_get_short@@Base>
   137dc:	mov	r3, r0
   137e0:	mov	r0, sl
   137e4:	mov	r1, r5
   137e8:	mov	r2, r7
   137ec:	bl	178e0 <table_set_short@@Base>
   137f0:	b	135b0 <table_dupe@@Base+0x110>
   137f4:	mov	r0, r4
   137f8:	mov	r1, r5
   137fc:	mov	r2, r7
   13800:	bl	16c74 <table_get_ushort@@Base>
   13804:	mov	r3, r0
   13808:	mov	r0, sl
   1380c:	mov	r1, r5
   13810:	mov	r2, r7
   13814:	bl	17960 <table_set_ushort@@Base>
   13818:	b	135b0 <table_dupe@@Base+0x110>
   1381c:	mov	r0, r4
   13820:	mov	r1, r5
   13824:	mov	r2, r7
   13828:	bl	16c8c <table_get_long@@Base>
   1382c:	mov	r3, r0
   13830:	mov	r0, sl
   13834:	mov	r1, r5
   13838:	mov	r2, r7
   1383c:	bl	179e0 <table_set_long@@Base>
   13840:	b	135b0 <table_dupe@@Base+0x110>
   13844:	mov	r0, r4
   13848:	mov	r1, r5
   1384c:	mov	r2, r7
   13850:	bl	16ca4 <table_get_ulong@@Base>
   13854:	mov	r3, r0
   13858:	mov	r0, sl
   1385c:	mov	r1, r5
   13860:	mov	r2, r7
   13864:	bl	17a60 <table_set_ulong@@Base>
   13868:	b	135b0 <table_dupe@@Base+0x110>
   1386c:	mov	r0, r4
   13870:	mov	r1, r5
   13874:	mov	r2, r7
   13878:	bl	16cbc <table_get_llong@@Base>
   1387c:	stm	sp, {r0, r1}
   13880:	mov	r0, sl
   13884:	mov	r1, r5
   13888:	mov	r2, r7
   1388c:	bl	17ae0 <table_set_llong@@Base>
   13890:	b	135b0 <table_dupe@@Base+0x110>
   13894:	mov	r0, r4
   13898:	mov	r1, r5
   1389c:	mov	r2, r7
   138a0:	bl	16cd4 <table_get_ullong@@Base>
   138a4:	stm	sp, {r0, r1}
   138a8:	mov	r0, sl
   138ac:	mov	r1, r5
   138b0:	mov	r2, r7
   138b4:	bl	17b68 <table_set_ullong@@Base>
   138b8:	b	135b0 <table_dupe@@Base+0x110>
   138bc:	mov	r0, r4
   138c0:	mov	r1, r5
   138c4:	mov	r2, r7
   138c8:	bl	16cec <table_get_float@@Base>
   138cc:	mov	r0, sl
   138d0:	mov	r1, r5
   138d4:	mov	r2, r7
   138d8:	bl	17bf0 <table_set_float@@Base>
   138dc:	b	135b0 <table_dupe@@Base+0x110>
   138e0:	mov	r0, r4
   138e4:	mov	r1, r5
   138e8:	mov	r2, r7
   138ec:	bl	16d04 <table_get_double@@Base>
   138f0:	mov	r0, sl
   138f4:	mov	r1, r5
   138f8:	mov	r2, r7
   138fc:	bl	17c7c <table_set_double@@Base>
   13900:	b	135b0 <table_dupe@@Base+0x110>
   13904:	mov	r0, r4
   13908:	mov	r1, r5
   1390c:	mov	r2, r7
   13910:	bl	16d1c <table_get_ldouble@@Base>
   13914:	mov	r0, sl
   13918:	mov	r1, r5
   1391c:	mov	r2, r7
   13920:	bl	17d04 <table_set_ldouble@@Base>
   13924:	b	135b0 <table_dupe@@Base+0x110>
   13928:	mov	r0, r4
   1392c:	mov	r1, r5
   13930:	mov	r2, r7
   13934:	bl	16d34 <table_get_char@@Base>
   13938:	mov	r3, r0
   1393c:	mov	r0, sl
   13940:	mov	r1, r5
   13944:	mov	r2, r7
   13948:	bl	17dac <table_set_char@@Base>
   1394c:	b	135b0 <table_dupe@@Base+0x110>
   13950:	mov	r0, r4
   13954:	mov	r1, r5
   13958:	mov	r2, r7
   1395c:	bl	16d4c <table_get_uchar@@Base>
   13960:	mov	r3, r0
   13964:	mov	r0, sl
   13968:	mov	r1, r5
   1396c:	mov	r2, r7
   13970:	bl	17e2c <table_set_uchar@@Base>
   13974:	b	135b0 <table_dupe@@Base+0x110>
   13978:	mov	r0, r4
   1397c:	mov	r1, r5
   13980:	mov	r2, r7
   13984:	bl	16d64 <table_get_string@@Base>
   13988:	mov	r3, r0
   1398c:	mov	r0, sl
   13990:	mov	r1, r5
   13994:	mov	r2, r7
   13998:	bl	17d8c <table_set_string@@Base>
   1399c:	b	135b0 <table_dupe@@Base+0x110>
   139a0:	mov	r0, r4
   139a4:	mov	r1, r5
   139a8:	mov	r2, r7
   139ac:	bl	16b54 <table_get_bool@@Base>
   139b0:	mov	r3, r0
   139b4:	mov	r0, sl
   139b8:	mov	r1, r5
   139bc:	mov	r2, r7
   139c0:	bl	17350 <table_set_bool@@Base>
   139c4:	b	135b0 <table_dupe@@Base+0x110>
   139c8:	mov	r0, sl
   139cc:	sub	sp, fp, #28
   139d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000139d4 <table_get_major_version@@Base>:
   139d4:	mov	r0, #0
   139d8:	bx	lr

000139dc <table_get_minor_version@@Base>:
   139dc:	mov	r0, #0
   139e0:	bx	lr

000139e4 <table_get_patch_version@@Base>:
   139e4:	mov	r0, #0
   139e8:	bx	lr

000139ec <table_get_version@@Base>:
   139ec:	ldr	r0, [pc, #4]	; 139f8 <table_get_version@@Base+0xc>
   139f0:	add	r0, pc, r0
   139f4:	bx	lr
   139f8:	andeq	r5, r0, r5, lsl #1

000139fc <table_get_callback_length@@Base>:
   139fc:	ldr	r0, [r0, #32]
   13a00:	bx	lr

00013a04 <table_register_callback@@Base>:
   13a04:	push	{r4, r5, r6, r7, fp, lr}
   13a08:	add	fp, sp, #16
   13a0c:	mov	r5, r0
   13a10:	ldr	r0, [r0, #32]
   13a14:	mov	r4, r3
   13a18:	mov	r6, r2
   13a1c:	mov	r7, r1
   13a20:	cmp	r0, #1
   13a24:	blt	13a78 <table_register_callback@@Base+0x74>
   13a28:	ldr	r2, [r5, #36]	; 0x24
   13a2c:	mov	r1, #0
   13a30:	b	13a40 <table_register_callback@@Base+0x3c>
   13a34:	add	r1, r1, #1
   13a38:	cmp	r0, r1
   13a3c:	beq	13a78 <table_register_callback@@Base+0x74>
   13a40:	ldr	r3, [r2, r1, lsl #2]
   13a44:	cmp	r3, r7
   13a48:	bne	13a34 <table_register_callback@@Base+0x30>
   13a4c:	ldr	r3, [r5, #40]	; 0x28
   13a50:	ldr	r3, [r3, r1, lsl #2]
   13a54:	cmp	r3, r6
   13a58:	bne	13a34 <table_register_callback@@Base+0x30>
   13a5c:	cmp	r1, #0
   13a60:	beq	13a78 <table_register_callback@@Base+0x74>
   13a64:	ldr	r0, [r5, #44]	; 0x2c
   13a68:	ldr	r2, [r0, r1, lsl #2]
   13a6c:	orr	r2, r2, r4
   13a70:	str	r2, [r0, r1, lsl #2]
   13a74:	pop	{r4, r5, r6, r7, fp, pc}
   13a78:	ldr	r1, [r5, #48]	; 0x30
   13a7c:	udiv	r2, r0, r1
   13a80:	mls	r2, r2, r1, r0
   13a84:	cmp	r2, #0
   13a88:	bne	13ad4 <table_register_callback@@Base+0xd0>
   13a8c:	ldr	r2, [r5, #52]	; 0x34
   13a90:	ldr	r0, [r5, #36]	; 0x24
   13a94:	add	r1, r2, r1
   13a98:	str	r1, [r5, #52]	; 0x34
   13a9c:	lsl	r1, r1, #2
   13aa0:	bl	12f9c <realloc@plt>
   13aa4:	str	r0, [r5, #36]	; 0x24
   13aa8:	ldr	r1, [r5, #52]	; 0x34
   13aac:	ldr	r0, [r5, #40]	; 0x28
   13ab0:	lsl	r1, r1, #2
   13ab4:	bl	12f9c <realloc@plt>
   13ab8:	str	r0, [r5, #40]	; 0x28
   13abc:	ldr	r1, [r5, #52]	; 0x34
   13ac0:	ldr	r0, [r5, #44]	; 0x2c
   13ac4:	lsl	r1, r1, #2
   13ac8:	bl	12f9c <realloc@plt>
   13acc:	str	r0, [r5, #44]	; 0x2c
   13ad0:	ldr	r0, [r5, #32]
   13ad4:	ldr	r1, [r5, #36]	; 0x24
   13ad8:	str	r7, [r1, r0, lsl #2]
   13adc:	ldr	r1, [r5, #40]	; 0x28
   13ae0:	str	r6, [r1, r0, lsl #2]
   13ae4:	ldr	r1, [r5, #44]	; 0x2c
   13ae8:	str	r4, [r1, r0, lsl #2]
   13aec:	ldr	r0, [r5, #32]
   13af0:	add	r0, r0, #1
   13af4:	str	r0, [r5, #32]
   13af8:	pop	{r4, r5, r6, r7, fp, pc}

00013afc <table_unregister_callback@@Base>:
   13afc:	push	{r4, r5, r6, sl, fp, lr}
   13b00:	add	fp, sp, #16
   13b04:	ldr	r4, [r0, #32]
   13b08:	cmp	r4, #1
   13b0c:	blt	13c58 <table_unregister_callback@@Base+0x15c>
   13b10:	ldr	r3, [r0, #36]	; 0x24
   13b14:	mov	r6, r0
   13b18:	mov	r0, #0
   13b1c:	b	13b2c <table_unregister_callback@@Base+0x30>
   13b20:	add	r0, r0, #1
   13b24:	cmp	r0, r4
   13b28:	beq	13c58 <table_unregister_callback@@Base+0x15c>
   13b2c:	ldr	r5, [r3, r0, lsl #2]
   13b30:	cmp	r5, r1
   13b34:	bne	13b20 <table_unregister_callback@@Base+0x24>
   13b38:	ldr	r5, [r6, #40]	; 0x28
   13b3c:	ldr	r5, [r5, r0, lsl #2]
   13b40:	cmp	r5, r2
   13b44:	bne	13b20 <table_unregister_callback@@Base+0x24>
   13b48:	sub	r1, r4, #1
   13b4c:	cmp	r0, r1
   13b50:	bge	13bd4 <table_unregister_callback@@Base+0xd8>
   13b54:	add	r2, r0, #1
   13b58:	ldr	r1, [r3, r2, lsl #2]
   13b5c:	str	r1, [r3, r0, lsl #2]
   13b60:	ldr	r1, [r6, #40]	; 0x28
   13b64:	ldr	r3, [r1, r2, lsl #2]
   13b68:	str	r3, [r1, r0, lsl #2]
   13b6c:	ldr	r1, [r6, #44]	; 0x2c
   13b70:	ldr	r3, [r1, r2, lsl #2]
   13b74:	str	r3, [r1, r0, lsl #2]
   13b78:	ldr	r1, [r6, #32]
   13b7c:	sub	r1, r1, #1
   13b80:	cmp	r2, r1
   13b84:	bge	13bd4 <table_unregister_callback@@Base+0xd8>
   13b88:	ldr	r1, [r6, #36]	; 0x24
   13b8c:	add	r1, r1, r0, lsl #2
   13b90:	ldr	r2, [r1, #8]
   13b94:	str	r2, [r1, #4]
   13b98:	ldr	r1, [r6, #40]	; 0x28
   13b9c:	add	r1, r1, r0, lsl #2
   13ba0:	ldr	r2, [r1, #8]
   13ba4:	str	r2, [r1, #4]
   13ba8:	ldr	r1, [r6, #44]	; 0x2c
   13bac:	add	r1, r1, r0, lsl #2
   13bb0:	ldr	r2, [r1, #8]
   13bb4:	str	r2, [r1, #4]
   13bb8:	add	r2, r0, #1
   13bbc:	add	r0, r0, #2
   13bc0:	ldr	r1, [r6, #32]
   13bc4:	sub	r1, r1, #1
   13bc8:	cmp	r0, r1
   13bcc:	mov	r0, r2
   13bd0:	blt	13b88 <table_unregister_callback@@Base+0x8c>
   13bd4:	str	r1, [r6, #32]
   13bd8:	ldr	r2, [r6, #48]	; 0x30
   13bdc:	udiv	r0, r1, r2
   13be0:	mls	r0, r0, r2, r1
   13be4:	cmp	r0, #0
   13be8:	popne	{r4, r5, r6, sl, fp, pc}
   13bec:	ldr	r1, [r6, #52]	; 0x34
   13bf0:	ldr	r0, [r6, #36]	; 0x24
   13bf4:	subs	r1, r1, r2
   13bf8:	str	r1, [r6, #52]	; 0x34
   13bfc:	beq	13c34 <table_unregister_callback@@Base+0x138>
   13c00:	lsl	r1, r1, #2
   13c04:	bl	12f9c <realloc@plt>
   13c08:	str	r0, [r6, #36]	; 0x24
   13c0c:	ldr	r1, [r6, #52]	; 0x34
   13c10:	ldr	r0, [r6, #40]	; 0x28
   13c14:	lsl	r1, r1, #2
   13c18:	bl	12f9c <realloc@plt>
   13c1c:	str	r0, [r6, #40]	; 0x28
   13c20:	ldr	r1, [r6, #52]	; 0x34
   13c24:	ldr	r0, [r6, #44]	; 0x2c
   13c28:	lsl	r1, r1, #2
   13c2c:	bl	12f9c <realloc@plt>
   13c30:	b	13c54 <table_unregister_callback@@Base+0x158>
   13c34:	bl	12f90 <free@plt>
   13c38:	ldr	r0, [r6, #40]	; 0x28
   13c3c:	bl	12f90 <free@plt>
   13c40:	ldr	r0, [r6, #44]	; 0x2c
   13c44:	bl	12f90 <free@plt>
   13c48:	mov	r0, #0
   13c4c:	str	r0, [r6, #36]	; 0x24
   13c50:	str	r0, [r6, #40]	; 0x28
   13c54:	str	r0, [r6, #44]	; 0x2c
   13c58:	pop	{r4, r5, r6, sl, fp, pc}

00013c5c <table_notify@@Base>:
   13c5c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c60:	add	fp, sp, #24
   13c64:	sub	sp, sp, #8
   13c68:	mov	r7, r0
   13c6c:	ldr	r0, [r0, #32]
   13c70:	cmp	r0, #1
   13c74:	blt	13cd8 <table_notify@@Base+0x7c>
   13c78:	mov	r4, r3
   13c7c:	mov	r8, r2
   13c80:	mov	r9, r1
   13c84:	mov	r5, #0
   13c88:	b	13c98 <table_notify@@Base+0x3c>
   13c8c:	add	r5, r5, #1
   13c90:	cmp	r5, r0
   13c94:	bge	13cd8 <table_notify@@Base+0x7c>
   13c98:	ldr	r1, [r7, #44]	; 0x2c
   13c9c:	ldr	r1, [r1, r5, lsl #2]
   13ca0:	tst	r1, r4
   13ca4:	beq	13c8c <table_notify@@Base+0x30>
   13ca8:	ldr	r0, [r7, #36]	; 0x24
   13cac:	ldr	r1, [r7, #40]	; 0x28
   13cb0:	mov	r2, r8
   13cb4:	mov	r3, r4
   13cb8:	ldr	r6, [r0, r5, lsl #2]
   13cbc:	ldr	r0, [r1, r5, lsl #2]
   13cc0:	mov	r1, r9
   13cc4:	str	r0, [sp]
   13cc8:	mov	r0, r7
   13ccc:	blx	r6
   13cd0:	ldr	r0, [r7, #32]
   13cd4:	b	13c8c <table_notify@@Base+0x30>
   13cd8:	sub	sp, fp, #24
   13cdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ce0 <table_column_init@@Base>:
   13ce0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13ce4:	add	fp, sp, #24
   13ce8:	ldr	r7, [r0]
   13cec:	mov	r0, r2
   13cf0:	mov	r4, r3
   13cf4:	mov	r5, r2
   13cf8:	mov	r6, r1
   13cfc:	bl	12fd8 <strlen@plt>
   13d00:	add	r0, r0, #1
   13d04:	bl	12fb4 <malloc@plt>
   13d08:	ldr	r8, [fp, #8]
   13d0c:	add	r6, r6, r6, lsl #1
   13d10:	cmp	r0, #0
   13d14:	str	r0, [r7, r6, lsl #2]
   13d18:	beq	13d24 <table_column_init@@Base+0x44>
   13d1c:	mov	r1, r5
   13d20:	bl	12fa8 <strcpy@plt>
   13d24:	add	r0, r7, r6, lsl #2
   13d28:	stmib	r0, {r4, r8}
   13d2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013d30 <table_get_col_ptr@@Base>:
   13d30:	ldr	r0, [r0]
   13d34:	add	r1, r1, r1, lsl #1
   13d38:	add	r0, r0, r1, lsl #2
   13d3c:	bx	lr

00013d40 <table_column_destroy@@Base>:
   13d40:	ldr	r0, [r0]
   13d44:	add	r1, r1, r1, lsl #1
   13d48:	ldr	r0, [r0, r1, lsl #2]
   13d4c:	cmp	r0, #0
   13d50:	bxeq	lr
   13d54:	b	12f90 <free@plt>

00013d58 <table_get_column_length@@Base>:
   13d58:	ldr	r0, [r0, #4]
   13d5c:	bx	lr

00013d60 <table_get_column@@Base>:
   13d60:	push	{r4, r5, r6, r7, fp, lr}
   13d64:	add	fp, sp, #16
   13d68:	ldr	r6, [r0, #4]
   13d6c:	cmp	r6, #1
   13d70:	blt	13dac <table_get_column@@Base+0x4c>
   13d74:	ldr	r7, [r0]
   13d78:	mov	r5, r1
   13d7c:	mov	r4, #0
   13d80:	ldr	r0, [r7]
   13d84:	mov	r1, r5
   13d88:	bl	12f78 <strcmp@plt>
   13d8c:	cmp	r0, #0
   13d90:	beq	13db0 <table_get_column@@Base+0x50>
   13d94:	add	r4, r4, #1
   13d98:	add	r7, r7, #12
   13d9c:	cmp	r6, r4
   13da0:	bne	13d80 <table_get_column@@Base+0x20>
   13da4:	mov	r4, r6
   13da8:	b	13db0 <table_get_column@@Base+0x50>
   13dac:	mov	r4, #0
   13db0:	cmp	r4, r6
   13db4:	mvneq	r4, #0
   13db8:	mov	r0, r4
   13dbc:	pop	{r4, r5, r6, r7, fp, pc}

00013dc0 <table_get_column_name@@Base>:
   13dc0:	ldr	r0, [r0]
   13dc4:	add	r1, r1, r1, lsl #1
   13dc8:	ldr	r0, [r0, r1, lsl #2]
   13dcc:	bx	lr

00013dd0 <table_get_column_data_type@@Base>:
   13dd0:	ldr	r0, [r0]
   13dd4:	add	r1, r1, r1, lsl #1
   13dd8:	add	r0, r0, r1, lsl #2
   13ddc:	ldr	r0, [r0, #4]
   13de0:	bx	lr

00013de4 <table_add_column@@Base>:
   13de4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13de8:	add	fp, sp, #28
   13dec:	sub	sp, sp, #4
   13df0:	mov	r4, r0
   13df4:	mov	r8, r1
   13df8:	ldr	r0, [r0, #4]
   13dfc:	mov	r9, r2
   13e00:	ldr	r1, [r4, #8]
   13e04:	udiv	r2, r0, r1
   13e08:	mls	r0, r2, r1, r0
   13e0c:	cmp	r0, #0
   13e10:	bne	13e7c <table_add_column@@Base+0x98>
   13e14:	ldr	r2, [r4, #12]
   13e18:	ldr	r0, [r4]
   13e1c:	add	r1, r2, r1
   13e20:	str	r1, [r4, #12]
   13e24:	add	r1, r1, r1, lsl #1
   13e28:	lsl	r1, r1, #2
   13e2c:	bl	12f9c <realloc@plt>
   13e30:	str	r0, [r4]
   13e34:	mov	r0, r4
   13e38:	bl	16e18 <table_get_row_length@@Base>
   13e3c:	cmp	r0, #1
   13e40:	blt	13e7c <table_add_column@@Base+0x98>
   13e44:	mov	r6, r0
   13e48:	mov	r5, #0
   13e4c:	mov	r0, r4
   13e50:	mov	r1, r5
   13e54:	bl	16db0 <table_get_row_ptr@@Base>
   13e58:	ldr	r1, [r4, #12]
   13e5c:	mov	r7, r0
   13e60:	ldr	r0, [r0]
   13e64:	lsl	r1, r1, #2
   13e68:	bl	12f9c <realloc@plt>
   13e6c:	add	r5, r5, #1
   13e70:	str	r0, [r7]
   13e74:	cmp	r6, r5
   13e78:	bne	13e4c <table_add_column@@Base+0x68>
   13e7c:	mov	r0, r4
   13e80:	bl	16e18 <table_get_row_length@@Base>
   13e84:	ldr	r6, [r4, #4]
   13e88:	mov	r7, r0
   13e8c:	mov	r0, r9
   13e90:	bl	14800 <table_get_default_compare_function_for_data_type@@Base>
   13e94:	ldr	r5, [r4]
   13e98:	mov	sl, r0
   13e9c:	mov	r0, r8
   13ea0:	bl	12fd8 <strlen@plt>
   13ea4:	add	r0, r0, #1
   13ea8:	bl	12fb4 <malloc@plt>
   13eac:	mov	r1, r8
   13eb0:	add	r8, r6, r6, lsl #1
   13eb4:	cmp	r0, #0
   13eb8:	str	r0, [r5, r8, lsl #2]
   13ebc:	beq	13ec4 <table_add_column@@Base+0xe0>
   13ec0:	bl	12fa8 <strcpy@plt>
   13ec4:	add	r0, r5, r8, lsl #2
   13ec8:	cmp	r7, #1
   13ecc:	stmib	r0, {r9, sl}
   13ed0:	blt	13ef4 <table_add_column@@Base+0x110>
   13ed4:	mov	r5, #0
   13ed8:	mov	r0, r4
   13edc:	mov	r1, r5
   13ee0:	mov	r2, r6
   13ee4:	bl	17f08 <table_cell_init@@Base>
   13ee8:	add	r5, r5, #1
   13eec:	cmp	r7, r5
   13ef0:	bne	13ed8 <table_add_column@@Base+0xf4>
   13ef4:	ldr	r2, [r4, #4]
   13ef8:	mov	r0, r4
   13efc:	mvn	r1, #0
   13f00:	mov	r3, #8
   13f04:	bl	13c5c <table_notify@@Base>
   13f08:	ldr	r0, [r4, #4]
   13f0c:	add	r1, r0, #1
   13f10:	str	r1, [r4, #4]
   13f14:	sub	sp, fp, #28
   13f18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013f1c <table_remove_column@@Base>:
   13f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f20:	add	fp, sp, #28
   13f24:	sub	sp, sp, #12
   13f28:	mov	r5, r0
   13f2c:	ldr	r0, [r0]
   13f30:	add	r6, r1, r1, lsl #1
   13f34:	mov	r4, r1
   13f38:	ldr	r0, [r0, r6, lsl #2]
   13f3c:	cmp	r0, #0
   13f40:	beq	13f48 <table_remove_column@@Base+0x2c>
   13f44:	bl	12f90 <free@plt>
   13f48:	ldr	r7, [r5, #4]
   13f4c:	sub	r8, r7, #1
   13f50:	cmp	r8, r4
   13f54:	ble	13f88 <table_remove_column@@Base+0x6c>
   13f58:	mvn	r0, r4
   13f5c:	lsl	r1, r6, #2
   13f60:	add	r0, r0, r7
   13f64:	ldr	r2, [r5]
   13f68:	subs	r0, r0, #1
   13f6c:	add	r2, r2, r1
   13f70:	add	r1, r1, #12
   13f74:	vldr	d16, [r2, #12]
   13f78:	ldr	r3, [r2, #20]
   13f7c:	str	r3, [r2, #8]
   13f80:	vstr	d16, [r2]
   13f84:	bne	13f64 <table_remove_column@@Base+0x48>
   13f88:	mov	r0, r5
   13f8c:	bl	16e18 <table_get_row_length@@Base>
   13f90:	cmp	r0, #1
   13f94:	blt	14054 <table_remove_column@@Base+0x138>
   13f98:	mov	r9, r0
   13f9c:	mvn	r0, r4
   13fa0:	sub	sl, r7, #2
   13fa4:	add	r0, r7, r0
   13fa8:	mov	r7, #0
   13fac:	and	r0, r0, #1
   13fb0:	str	r0, [sp, #8]
   13fb4:	add	r0, r4, #1
   13fb8:	str	r0, [sp, #4]
   13fbc:	b	13fcc <table_remove_column@@Base+0xb0>
   13fc0:	add	r7, r7, #1
   13fc4:	cmp	r7, r9
   13fc8:	beq	14054 <table_remove_column@@Base+0x138>
   13fcc:	mov	r0, r5
   13fd0:	mov	r1, r7
   13fd4:	mov	r2, r4
   13fd8:	bl	17f44 <table_cell_destroy@@Base>
   13fdc:	mov	r0, r5
   13fe0:	mov	r1, r7
   13fe4:	bl	16db0 <table_get_row_ptr@@Base>
   13fe8:	cmp	r8, r4
   13fec:	ble	13fc0 <table_remove_column@@Base+0xa4>
   13ff0:	ldr	r1, [sp, #8]
   13ff4:	mov	r2, r4
   13ff8:	cmp	r1, #0
   13ffc:	beq	14014 <table_remove_column@@Base+0xf8>
   14000:	ldr	r1, [r0]
   14004:	add	r2, r1, r4, lsl #2
   14008:	ldr	r2, [r2, #4]
   1400c:	str	r2, [r1, r4, lsl #2]
   14010:	ldr	r2, [sp, #4]
   14014:	cmp	sl, r4
   14018:	beq	13fc0 <table_remove_column@@Base+0xa4>
   1401c:	sub	r1, r8, r2
   14020:	lsl	r2, r2, #2
   14024:	ldr	r3, [r0]
   14028:	subs	r1, r1, #2
   1402c:	add	r6, r3, r2
   14030:	ldr	r6, [r6, #4]
   14034:	str	r6, [r3, r2]
   14038:	ldr	r3, [r0]
   1403c:	add	r3, r3, r2
   14040:	add	r2, r2, #8
   14044:	ldr	r6, [r3, #8]
   14048:	str	r6, [r3, #4]
   1404c:	bne	14024 <table_remove_column@@Base+0x108>
   14050:	b	13fc0 <table_remove_column@@Base+0xa4>
   14054:	ldmib	r5, {r0, r1}
   14058:	sub	r0, r0, #1
   1405c:	udiv	r2, r0, r1
   14060:	str	r0, [r5, #4]
   14064:	mls	r0, r2, r1, r0
   14068:	cmp	r0, #0
   1406c:	bne	140d8 <table_remove_column@@Base+0x1bc>
   14070:	ldr	r2, [r5, #12]
   14074:	ldr	r0, [r5]
   14078:	sub	r1, r2, r1
   1407c:	str	r1, [r5, #12]
   14080:	add	r1, r1, r1, lsl #1
   14084:	lsl	r1, r1, #2
   14088:	bl	12f9c <realloc@plt>
   1408c:	str	r0, [r5]
   14090:	mov	r0, r5
   14094:	bl	16e18 <table_get_row_length@@Base>
   14098:	cmp	r0, #1
   1409c:	blt	140d8 <table_remove_column@@Base+0x1bc>
   140a0:	mov	r8, r0
   140a4:	mov	r7, #0
   140a8:	mov	r0, r5
   140ac:	mov	r1, r7
   140b0:	bl	16db0 <table_get_row_ptr@@Base>
   140b4:	ldr	r1, [r5, #12]
   140b8:	mov	r6, r0
   140bc:	ldr	r0, [r0]
   140c0:	lsl	r1, r1, #2
   140c4:	bl	12f9c <realloc@plt>
   140c8:	add	r7, r7, #1
   140cc:	str	r0, [r6]
   140d0:	cmp	r8, r7
   140d4:	bne	140a8 <table_remove_column@@Base+0x18c>
   140d8:	mov	r0, r5
   140dc:	mvn	r1, #0
   140e0:	mov	r2, r4
   140e4:	mov	r3, #16
   140e8:	bl	13c5c <table_notify@@Base>
   140ec:	mov	r0, #0
   140f0:	sub	sp, fp, #28
   140f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000140f8 <table_get_column_compare_function@@Base>:
   140f8:	ldr	r0, [r0]
   140fc:	add	r1, r1, r1, lsl #1
   14100:	add	r0, r0, r1, lsl #2
   14104:	ldr	r0, [r0, #8]
   14108:	bx	lr

0001410c <table_set_column_compare_function@@Base>:
   1410c:	ldr	r0, [r0]
   14110:	add	r1, r1, r1, lsl #1
   14114:	add	r0, r0, r1, lsl #2
   14118:	str	r2, [r0, #8]
   1411c:	bx	lr

00014120 <table_compare_bool@@Base>:
   14120:	cmp	r0, #0
   14124:	beq	14158 <table_compare_bool@@Base+0x38>
   14128:	cmp	r1, #0
   1412c:	moveq	r1, #1
   14130:	moveq	r0, r1
   14134:	bxeq	lr
   14138:	ldrb	r2, [r1]
   1413c:	ldrb	r0, [r0]
   14140:	mov	r1, #0
   14144:	cmp	r0, r2
   14148:	mvncc	r1, #0
   1414c:	movwhi	r1, #1
   14150:	mov	r0, r1
   14154:	bx	lr
   14158:	cmp	r1, #0
   1415c:	mvnne	r1, #0
   14160:	mov	r0, r1
   14164:	bx	lr

00014168 <table_compare_int@@Base>:
   14168:	cmp	r0, #0
   1416c:	beq	141a0 <table_compare_int@@Base+0x38>
   14170:	cmp	r1, #0
   14174:	moveq	r1, #1
   14178:	moveq	r0, r1
   1417c:	bxeq	lr
   14180:	ldr	r2, [r1]
   14184:	ldr	r0, [r0]
   14188:	mov	r1, #0
   1418c:	cmp	r0, r2
   14190:	mvnlt	r1, #0
   14194:	movwgt	r1, #1
   14198:	mov	r0, r1
   1419c:	bx	lr
   141a0:	cmp	r1, #0
   141a4:	mvnne	r1, #0
   141a8:	mov	r0, r1
   141ac:	bx	lr

000141b0 <table_compare_uint@@Base>:
   141b0:	cmp	r0, #0
   141b4:	beq	141e8 <table_compare_uint@@Base+0x38>
   141b8:	cmp	r1, #0
   141bc:	moveq	r1, #1
   141c0:	moveq	r0, r1
   141c4:	bxeq	lr
   141c8:	ldr	r2, [r1]
   141cc:	ldr	r0, [r0]
   141d0:	mov	r1, #0
   141d4:	cmp	r0, r2
   141d8:	mvncc	r1, #0
   141dc:	movwhi	r1, #1
   141e0:	mov	r0, r1
   141e4:	bx	lr
   141e8:	cmp	r1, #0
   141ec:	mvnne	r1, #0
   141f0:	mov	r0, r1
   141f4:	bx	lr

000141f8 <table_compare_int8@@Base>:
   141f8:	cmp	r0, #0
   141fc:	beq	14230 <table_compare_int8@@Base+0x38>
   14200:	cmp	r1, #0
   14204:	moveq	r1, #1
   14208:	moveq	r0, r1
   1420c:	bxeq	lr
   14210:	ldrsb	r2, [r1]
   14214:	ldrsb	r0, [r0]
   14218:	mov	r1, #0
   1421c:	cmp	r0, r2
   14220:	mvnlt	r1, #0
   14224:	movwgt	r1, #1
   14228:	mov	r0, r1
   1422c:	bx	lr
   14230:	cmp	r1, #0
   14234:	mvnne	r1, #0
   14238:	mov	r0, r1
   1423c:	bx	lr

00014240 <table_compare_uint8@@Base>:
   14240:	cmp	r0, #0
   14244:	beq	14278 <table_compare_uint8@@Base+0x38>
   14248:	cmp	r1, #0
   1424c:	moveq	r1, #1
   14250:	moveq	r0, r1
   14254:	bxeq	lr
   14258:	ldrb	r2, [r1]
   1425c:	ldrb	r0, [r0]
   14260:	mov	r1, #0
   14264:	cmp	r0, r2
   14268:	mvncc	r1, #0
   1426c:	movwhi	r1, #1
   14270:	mov	r0, r1
   14274:	bx	lr
   14278:	cmp	r1, #0
   1427c:	mvnne	r1, #0
   14280:	mov	r0, r1
   14284:	bx	lr

00014288 <table_compare_int16@@Base>:
   14288:	cmp	r0, #0
   1428c:	beq	142c0 <table_compare_int16@@Base+0x38>
   14290:	cmp	r1, #0
   14294:	moveq	r1, #1
   14298:	moveq	r0, r1
   1429c:	bxeq	lr
   142a0:	ldrsh	r2, [r1]
   142a4:	ldrsh	r0, [r0]
   142a8:	mov	r1, #0
   142ac:	cmp	r0, r2
   142b0:	mvnlt	r1, #0
   142b4:	movwgt	r1, #1
   142b8:	mov	r0, r1
   142bc:	bx	lr
   142c0:	cmp	r1, #0
   142c4:	mvnne	r1, #0
   142c8:	mov	r0, r1
   142cc:	bx	lr

000142d0 <table_compare_uint16@@Base>:
   142d0:	cmp	r0, #0
   142d4:	beq	14308 <table_compare_uint16@@Base+0x38>
   142d8:	cmp	r1, #0
   142dc:	moveq	r1, #1
   142e0:	moveq	r0, r1
   142e4:	bxeq	lr
   142e8:	ldrh	r2, [r1]
   142ec:	ldrh	r0, [r0]
   142f0:	mov	r1, #0
   142f4:	cmp	r0, r2
   142f8:	mvncc	r1, #0
   142fc:	movwhi	r1, #1
   14300:	mov	r0, r1
   14304:	bx	lr
   14308:	cmp	r1, #0
   1430c:	mvnne	r1, #0
   14310:	mov	r0, r1
   14314:	bx	lr

00014318 <table_compare_int32@@Base>:
   14318:	cmp	r0, #0
   1431c:	beq	14350 <table_compare_int32@@Base+0x38>
   14320:	cmp	r1, #0
   14324:	moveq	r1, #1
   14328:	moveq	r0, r1
   1432c:	bxeq	lr
   14330:	ldr	r2, [r1]
   14334:	ldr	r0, [r0]
   14338:	mov	r1, #0
   1433c:	cmp	r0, r2
   14340:	mvnlt	r1, #0
   14344:	movwgt	r1, #1
   14348:	mov	r0, r1
   1434c:	bx	lr
   14350:	cmp	r1, #0
   14354:	mvnne	r1, #0
   14358:	mov	r0, r1
   1435c:	bx	lr

00014360 <table_compare_uint32@@Base>:
   14360:	cmp	r0, #0
   14364:	beq	14398 <table_compare_uint32@@Base+0x38>
   14368:	cmp	r1, #0
   1436c:	moveq	r1, #1
   14370:	moveq	r0, r1
   14374:	bxeq	lr
   14378:	ldr	r2, [r1]
   1437c:	ldr	r0, [r0]
   14380:	mov	r1, #0
   14384:	cmp	r0, r2
   14388:	mvncc	r1, #0
   1438c:	movwhi	r1, #1
   14390:	mov	r0, r1
   14394:	bx	lr
   14398:	cmp	r1, #0
   1439c:	mvnne	r1, #0
   143a0:	mov	r0, r1
   143a4:	bx	lr

000143a8 <table_compare_int64@@Base>:
   143a8:	cmp	r0, #0
   143ac:	beq	14400 <table_compare_int64@@Base+0x58>
   143b0:	cmp	r1, #0
   143b4:	moveq	r1, #1
   143b8:	moveq	r0, r1
   143bc:	bxeq	lr
   143c0:	push	{r5, r7, fp, lr}
   143c4:	add	fp, sp, #8
   143c8:	ldm	r0, {r0, r5}
   143cc:	ldm	r1, {r2, r7}
   143d0:	mov	r1, #0
   143d4:	subs	r3, r0, r2
   143d8:	sbcs	r3, r5, r7
   143dc:	movwlt	r1, #1
   143e0:	cmp	r1, #0
   143e4:	mvnne	r1, #0
   143e8:	subs	r0, r2, r0
   143ec:	sbcs	r0, r7, r5
   143f0:	movwlt	r1, #1
   143f4:	pop	{r5, r7, fp, lr}
   143f8:	mov	r0, r1
   143fc:	bx	lr
   14400:	cmp	r1, #0
   14404:	mvnne	r1, #0
   14408:	mov	r0, r1
   1440c:	bx	lr

00014410 <table_compare_uint64@@Base>:
   14410:	cmp	r0, #0
   14414:	beq	14468 <table_compare_uint64@@Base+0x58>
   14418:	cmp	r1, #0
   1441c:	moveq	r1, #1
   14420:	moveq	r0, r1
   14424:	bxeq	lr
   14428:	push	{r5, r7, fp, lr}
   1442c:	add	fp, sp, #8
   14430:	ldm	r0, {r0, r5}
   14434:	ldm	r1, {r2, r7}
   14438:	mov	r1, #0
   1443c:	subs	r3, r0, r2
   14440:	sbcs	r3, r5, r7
   14444:	movwcc	r1, #1
   14448:	cmp	r1, #0
   1444c:	mvnne	r1, #0
   14450:	subs	r0, r2, r0
   14454:	sbcs	r0, r7, r5
   14458:	movwcc	r1, #1
   1445c:	pop	{r5, r7, fp, lr}
   14460:	mov	r0, r1
   14464:	bx	lr
   14468:	cmp	r1, #0
   1446c:	mvnne	r1, #0
   14470:	mov	r0, r1
   14474:	bx	lr

00014478 <table_compare_short@@Base>:
   14478:	cmp	r0, #0
   1447c:	beq	144b0 <table_compare_short@@Base+0x38>
   14480:	cmp	r1, #0
   14484:	moveq	r1, #1
   14488:	moveq	r0, r1
   1448c:	bxeq	lr
   14490:	ldrsh	r2, [r1]
   14494:	ldrsh	r0, [r0]
   14498:	mov	r1, #0
   1449c:	cmp	r0, r2
   144a0:	mvnlt	r1, #0
   144a4:	movwgt	r1, #1
   144a8:	mov	r0, r1
   144ac:	bx	lr
   144b0:	cmp	r1, #0
   144b4:	mvnne	r1, #0
   144b8:	mov	r0, r1
   144bc:	bx	lr

000144c0 <table_compare_ushort@@Base>:
   144c0:	cmp	r0, #0
   144c4:	beq	144f8 <table_compare_ushort@@Base+0x38>
   144c8:	cmp	r1, #0
   144cc:	moveq	r1, #1
   144d0:	moveq	r0, r1
   144d4:	bxeq	lr
   144d8:	ldrh	r2, [r1]
   144dc:	ldrh	r0, [r0]
   144e0:	mov	r1, #0
   144e4:	cmp	r0, r2
   144e8:	mvncc	r1, #0
   144ec:	movwhi	r1, #1
   144f0:	mov	r0, r1
   144f4:	bx	lr
   144f8:	cmp	r1, #0
   144fc:	mvnne	r1, #0
   14500:	mov	r0, r1
   14504:	bx	lr

00014508 <table_compare_long@@Base>:
   14508:	cmp	r0, #0
   1450c:	beq	14540 <table_compare_long@@Base+0x38>
   14510:	cmp	r1, #0
   14514:	moveq	r1, #1
   14518:	moveq	r0, r1
   1451c:	bxeq	lr
   14520:	ldr	r2, [r1]
   14524:	ldr	r0, [r0]
   14528:	mov	r1, #0
   1452c:	cmp	r0, r2
   14530:	mvnlt	r1, #0
   14534:	movwgt	r1, #1
   14538:	mov	r0, r1
   1453c:	bx	lr
   14540:	cmp	r1, #0
   14544:	mvnne	r1, #0
   14548:	mov	r0, r1
   1454c:	bx	lr

00014550 <table_compare_ulong@@Base>:
   14550:	cmp	r0, #0
   14554:	beq	14588 <table_compare_ulong@@Base+0x38>
   14558:	cmp	r1, #0
   1455c:	moveq	r1, #1
   14560:	moveq	r0, r1
   14564:	bxeq	lr
   14568:	ldr	r2, [r1]
   1456c:	ldr	r0, [r0]
   14570:	mov	r1, #0
   14574:	cmp	r0, r2
   14578:	mvncc	r1, #0
   1457c:	movwhi	r1, #1
   14580:	mov	r0, r1
   14584:	bx	lr
   14588:	cmp	r1, #0
   1458c:	mvnne	r1, #0
   14590:	mov	r0, r1
   14594:	bx	lr

00014598 <table_compare_llong@@Base>:
   14598:	cmp	r0, #0
   1459c:	beq	145f0 <table_compare_llong@@Base+0x58>
   145a0:	cmp	r1, #0
   145a4:	moveq	r1, #1
   145a8:	moveq	r0, r1
   145ac:	bxeq	lr
   145b0:	push	{r5, r7, fp, lr}
   145b4:	add	fp, sp, #8
   145b8:	ldm	r0, {r0, r5}
   145bc:	ldm	r1, {r2, r7}
   145c0:	mov	r1, #0
   145c4:	subs	r3, r0, r2
   145c8:	sbcs	r3, r5, r7
   145cc:	movwlt	r1, #1
   145d0:	cmp	r1, #0
   145d4:	mvnne	r1, #0
   145d8:	subs	r0, r2, r0
   145dc:	sbcs	r0, r7, r5
   145e0:	movwlt	r1, #1
   145e4:	pop	{r5, r7, fp, lr}
   145e8:	mov	r0, r1
   145ec:	bx	lr
   145f0:	cmp	r1, #0
   145f4:	mvnne	r1, #0
   145f8:	mov	r0, r1
   145fc:	bx	lr

00014600 <table_compare_ullong@@Base>:
   14600:	cmp	r0, #0
   14604:	beq	14638 <table_compare_ullong@@Base+0x38>
   14608:	cmp	r1, #0
   1460c:	moveq	r1, #1
   14610:	moveq	r0, r1
   14614:	bxeq	lr
   14618:	ldr	r2, [r1]
   1461c:	ldr	r0, [r0]
   14620:	mov	r1, #0
   14624:	cmp	r0, r2
   14628:	mvncc	r1, #0
   1462c:	movwhi	r1, #1
   14630:	mov	r0, r1
   14634:	bx	lr
   14638:	cmp	r1, #0
   1463c:	mvnne	r1, #0
   14640:	mov	r0, r1
   14644:	bx	lr

00014648 <table_compare_float@@Base>:
   14648:	cmp	r0, #0
   1464c:	beq	14684 <table_compare_float@@Base+0x3c>
   14650:	cmp	r1, #0
   14654:	moveq	r1, #1
   14658:	moveq	r0, r1
   1465c:	bxeq	lr
   14660:	vldr	s0, [r1]
   14664:	vldr	s2, [r0]
   14668:	mov	r1, #0
   1466c:	vcmpe.f32	s2, s0
   14670:	vmrs	APSR_nzcv, fpscr
   14674:	mvnmi	r1, #0
   14678:	movwgt	r1, #1
   1467c:	mov	r0, r1
   14680:	bx	lr
   14684:	cmp	r1, #0
   14688:	mvnne	r1, #0
   1468c:	mov	r0, r1
   14690:	bx	lr

00014694 <table_compare_double@@Base>:
   14694:	cmp	r0, #0
   14698:	beq	146d0 <table_compare_double@@Base+0x3c>
   1469c:	cmp	r1, #0
   146a0:	moveq	r1, #1
   146a4:	moveq	r0, r1
   146a8:	bxeq	lr
   146ac:	vldr	d16, [r1]
   146b0:	vldr	d17, [r0]
   146b4:	mov	r1, #0
   146b8:	vcmpe.f64	d17, d16
   146bc:	vmrs	APSR_nzcv, fpscr
   146c0:	mvnmi	r1, #0
   146c4:	movwgt	r1, #1
   146c8:	mov	r0, r1
   146cc:	bx	lr
   146d0:	cmp	r1, #0
   146d4:	mvnne	r1, #0
   146d8:	mov	r0, r1
   146dc:	bx	lr

000146e0 <table_compare_ldouble@@Base>:
   146e0:	cmp	r0, #0
   146e4:	beq	1471c <table_compare_ldouble@@Base+0x3c>
   146e8:	cmp	r1, #0
   146ec:	moveq	r1, #1
   146f0:	moveq	r0, r1
   146f4:	bxeq	lr
   146f8:	vldr	d16, [r1]
   146fc:	vldr	d17, [r0]
   14700:	mov	r1, #0
   14704:	vcmpe.f64	d17, d16
   14708:	vmrs	APSR_nzcv, fpscr
   1470c:	mvnmi	r1, #0
   14710:	movwgt	r1, #1
   14714:	mov	r0, r1
   14718:	bx	lr
   1471c:	cmp	r1, #0
   14720:	mvnne	r1, #0
   14724:	mov	r0, r1
   14728:	bx	lr

0001472c <table_compare_char@@Base>:
   1472c:	cmp	r0, #0
   14730:	beq	14764 <table_compare_char@@Base+0x38>
   14734:	cmp	r1, #0
   14738:	moveq	r1, #1
   1473c:	moveq	r0, r1
   14740:	bxeq	lr
   14744:	ldrb	r2, [r1]
   14748:	ldrb	r0, [r0]
   1474c:	mov	r1, #0
   14750:	cmp	r0, r2
   14754:	mvncc	r1, #0
   14758:	movwhi	r1, #1
   1475c:	mov	r0, r1
   14760:	bx	lr
   14764:	cmp	r1, #0
   14768:	mvnne	r1, #0
   1476c:	mov	r0, r1
   14770:	bx	lr

00014774 <table_compare_uchar@@Base>:
   14774:	cmp	r0, #0
   14778:	beq	147ac <table_compare_uchar@@Base+0x38>
   1477c:	cmp	r1, #0
   14780:	moveq	r1, #1
   14784:	moveq	r0, r1
   14788:	bxeq	lr
   1478c:	ldrb	r2, [r1]
   14790:	ldrb	r0, [r0]
   14794:	mov	r1, #0
   14798:	cmp	r0, r2
   1479c:	mvncc	r1, #0
   147a0:	movwhi	r1, #1
   147a4:	mov	r0, r1
   147a8:	bx	lr
   147ac:	cmp	r1, #0
   147b0:	mvnne	r1, #0
   147b4:	mov	r0, r1
   147b8:	bx	lr

000147bc <table_compare_string@@Base>:
   147bc:	cmp	r0, #0
   147c0:	beq	147d8 <table_compare_string@@Base+0x1c>
   147c4:	cmp	r1, #0
   147c8:	moveq	r1, #1
   147cc:	moveq	r0, r1
   147d0:	bxeq	lr
   147d4:	b	12f78 <strcmp@plt>
   147d8:	cmp	r1, #0
   147dc:	mvnne	r1, #0
   147e0:	mov	r0, r1
   147e4:	bx	lr

000147e8 <table_compare_ptr@@Base>:
   147e8:	cmp	r0, r1
   147ec:	mov	r2, #0
   147f0:	mvncc	r2, #0
   147f4:	movwhi	r2, #1
   147f8:	mov	r0, r2
   147fc:	bx	lr

00014800 <table_get_default_compare_function_for_data_type@@Base>:
   14800:	cmp	r0, #23
   14804:	movhi	r0, #0
   14808:	bxhi	lr
   1480c:	ldr	r1, [pc, #8]	; 1481c <table_get_default_compare_function_for_data_type@@Base+0x1c>
   14810:	add	r1, pc, r1
   14814:	ldr	r0, [r1, r0, lsl #2]
   14818:	bx	lr
   1481c:	muleq	r1, r8, r6

00014820 <table_subset_find@@Base>:
   14820:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14824:	add	fp, sp, #28
   14828:	sub	sp, sp, #4
   1482c:	mov	r8, r3
   14830:	mov	r9, r2
   14834:	mov	r6, r1
   14838:	mov	r7, r0
   1483c:	bl	140f8 <table_get_column_compare_function@@Base>
   14840:	ldr	r4, [fp, #12]
   14844:	ldr	r5, [fp, #8]
   14848:	mov	sl, r0
   1484c:	cmp	r8, #0
   14850:	beq	14898 <table_subset_find@@Base+0x78>
   14854:	mvn	r8, #0
   14858:	cmp	r4, r5
   1485c:	blt	148e8 <table_subset_find@@Base+0xc8>
   14860:	mov	r0, r7
   14864:	mov	r1, r4
   14868:	mov	r2, r6
   1486c:	bl	16b40 <table_get@@Base>
   14870:	mov	r1, r0
   14874:	mov	r0, r9
   14878:	blx	sl
   1487c:	cmp	r0, #0
   14880:	beq	148dc <table_subset_find@@Base+0xbc>
   14884:	sub	r0, r4, #1
   14888:	cmp	r4, r5
   1488c:	mov	r4, r0
   14890:	bgt	14860 <table_subset_find@@Base+0x40>
   14894:	b	148e8 <table_subset_find@@Base+0xc8>
   14898:	mvn	r8, #0
   1489c:	cmp	r5, r4
   148a0:	bgt	148e8 <table_subset_find@@Base+0xc8>
   148a4:	mov	r0, r7
   148a8:	mov	r1, r5
   148ac:	mov	r2, r6
   148b0:	bl	16b40 <table_get@@Base>
   148b4:	mov	r1, r0
   148b8:	mov	r0, r9
   148bc:	blx	sl
   148c0:	cmp	r0, #0
   148c4:	beq	148e4 <table_subset_find@@Base+0xc4>
   148c8:	add	r0, r5, #1
   148cc:	cmp	r5, r4
   148d0:	mov	r5, r0
   148d4:	blt	148a4 <table_subset_find@@Base+0x84>
   148d8:	b	148e8 <table_subset_find@@Base+0xc8>
   148dc:	mov	r8, r4
   148e0:	b	148e8 <table_subset_find@@Base+0xc8>
   148e4:	mov	r8, r5
   148e8:	mov	r0, r8
   148ec:	sub	sp, fp, #28
   148f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000148f4 <table_find@@Base>:
   148f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   148f8:	add	fp, sp, #28
   148fc:	sub	sp, sp, #4
   14900:	mov	r5, r3
   14904:	mov	r9, r2
   14908:	mov	sl, r1
   1490c:	mov	r6, r0
   14910:	bl	16e18 <table_get_row_length@@Base>
   14914:	mov	r7, r0
   14918:	mov	r0, r6
   1491c:	mov	r1, sl
   14920:	bl	140f8 <table_get_column_compare_function@@Base>
   14924:	mov	r4, r0
   14928:	mvn	r8, #0
   1492c:	cmp	r5, #0
   14930:	beq	14974 <table_find@@Base+0x80>
   14934:	cmp	r7, #1
   14938:	blt	149c0 <table_find@@Base+0xcc>
   1493c:	sub	r5, r7, #1
   14940:	mov	r0, r6
   14944:	mov	r2, sl
   14948:	mov	r1, r5
   1494c:	bl	16b40 <table_get@@Base>
   14950:	mov	r1, r0
   14954:	mov	r0, r9
   14958:	blx	r4
   1495c:	cmp	r0, #0
   14960:	beq	149b4 <table_find@@Base+0xc0>
   14964:	cmp	r5, #0
   14968:	mov	r7, r5
   1496c:	bgt	1493c <table_find@@Base+0x48>
   14970:	b	149c0 <table_find@@Base+0xcc>
   14974:	cmp	r7, #1
   14978:	blt	149c0 <table_find@@Base+0xcc>
   1497c:	mov	r5, #0
   14980:	mov	r0, r6
   14984:	mov	r1, r5
   14988:	mov	r2, sl
   1498c:	bl	16b40 <table_get@@Base>
   14990:	mov	r1, r0
   14994:	mov	r0, r9
   14998:	blx	r4
   1499c:	cmp	r0, #0
   149a0:	beq	149bc <table_find@@Base+0xc8>
   149a4:	add	r5, r5, #1
   149a8:	cmp	r7, r5
   149ac:	bne	14980 <table_find@@Base+0x8c>
   149b0:	b	149c0 <table_find@@Base+0xcc>
   149b4:	sub	r8, r7, #1
   149b8:	b	149c0 <table_find@@Base+0xcc>
   149bc:	mov	r8, r5
   149c0:	mov	r0, r8
   149c4:	sub	sp, fp, #28
   149c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000149cc <table_find_bool@@Base>:
   149cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149d0:	add	fp, sp, #28
   149d4:	sub	sp, sp, #4
   149d8:	mov	r4, r3
   149dc:	mov	r9, r1
   149e0:	mov	r5, r0
   149e4:	strb	r2, [sp, #3]
   149e8:	bl	16e18 <table_get_row_length@@Base>
   149ec:	mov	r8, r0
   149f0:	mov	r0, r5
   149f4:	mov	r1, r9
   149f8:	bl	140f8 <table_get_column_compare_function@@Base>
   149fc:	mov	r6, r0
   14a00:	mvn	sl, #0
   14a04:	cmp	r4, #0
   14a08:	beq	14a50 <table_find_bool@@Base+0x84>
   14a0c:	cmp	r8, #1
   14a10:	blt	14aa4 <table_find_bool@@Base+0xd8>
   14a14:	add	r4, sp, #3
   14a18:	sub	r7, r8, #1
   14a1c:	mov	r0, r5
   14a20:	mov	r2, r9
   14a24:	mov	r1, r7
   14a28:	bl	16b40 <table_get@@Base>
   14a2c:	mov	r1, r0
   14a30:	mov	r0, r4
   14a34:	blx	r6
   14a38:	cmp	r0, #0
   14a3c:	beq	14a98 <table_find_bool@@Base+0xcc>
   14a40:	cmp	r7, #0
   14a44:	mov	r8, r7
   14a48:	bgt	14a18 <table_find_bool@@Base+0x4c>
   14a4c:	b	14aa4 <table_find_bool@@Base+0xd8>
   14a50:	cmp	r8, #1
   14a54:	blt	14aa4 <table_find_bool@@Base+0xd8>
   14a58:	mov	r4, #0
   14a5c:	add	sl, sp, #3
   14a60:	mov	r0, r5
   14a64:	mov	r1, r4
   14a68:	mov	r2, r9
   14a6c:	bl	16b40 <table_get@@Base>
   14a70:	mov	r1, r0
   14a74:	mov	r0, sl
   14a78:	blx	r6
   14a7c:	cmp	r0, #0
   14a80:	beq	14aa0 <table_find_bool@@Base+0xd4>
   14a84:	add	r4, r4, #1
   14a88:	cmp	r8, r4
   14a8c:	bne	14a60 <table_find_bool@@Base+0x94>
   14a90:	mvn	sl, #0
   14a94:	b	14aa4 <table_find_bool@@Base+0xd8>
   14a98:	sub	sl, r8, #1
   14a9c:	b	14aa4 <table_find_bool@@Base+0xd8>
   14aa0:	mov	sl, r4
   14aa4:	mov	r0, sl
   14aa8:	sub	sp, fp, #28
   14aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014ab0 <table_find_int@@Base>:
   14ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14ab4:	add	fp, sp, #28
   14ab8:	sub	sp, sp, #4
   14abc:	mov	r4, r3
   14ac0:	mov	r9, r1
   14ac4:	mov	r5, r0
   14ac8:	str	r2, [sp]
   14acc:	bl	16e18 <table_get_row_length@@Base>
   14ad0:	mov	r8, r0
   14ad4:	mov	r0, r5
   14ad8:	mov	r1, r9
   14adc:	bl	140f8 <table_get_column_compare_function@@Base>
   14ae0:	mov	r6, r0
   14ae4:	mvn	sl, #0
   14ae8:	cmp	r4, #0
   14aec:	beq	14b34 <table_find_int@@Base+0x84>
   14af0:	cmp	r8, #1
   14af4:	blt	14b88 <table_find_int@@Base+0xd8>
   14af8:	mov	r4, sp
   14afc:	sub	r7, r8, #1
   14b00:	mov	r0, r5
   14b04:	mov	r2, r9
   14b08:	mov	r1, r7
   14b0c:	bl	16b40 <table_get@@Base>
   14b10:	mov	r1, r0
   14b14:	mov	r0, r4
   14b18:	blx	r6
   14b1c:	cmp	r0, #0
   14b20:	beq	14b7c <table_find_int@@Base+0xcc>
   14b24:	cmp	r7, #0
   14b28:	mov	r8, r7
   14b2c:	bgt	14afc <table_find_int@@Base+0x4c>
   14b30:	b	14b88 <table_find_int@@Base+0xd8>
   14b34:	cmp	r8, #1
   14b38:	blt	14b88 <table_find_int@@Base+0xd8>
   14b3c:	mov	r4, #0
   14b40:	mov	sl, sp
   14b44:	mov	r0, r5
   14b48:	mov	r1, r4
   14b4c:	mov	r2, r9
   14b50:	bl	16b40 <table_get@@Base>
   14b54:	mov	r1, r0
   14b58:	mov	r0, sl
   14b5c:	blx	r6
   14b60:	cmp	r0, #0
   14b64:	beq	14b84 <table_find_int@@Base+0xd4>
   14b68:	add	r4, r4, #1
   14b6c:	cmp	r8, r4
   14b70:	bne	14b44 <table_find_int@@Base+0x94>
   14b74:	mvn	sl, #0
   14b78:	b	14b88 <table_find_int@@Base+0xd8>
   14b7c:	sub	sl, r8, #1
   14b80:	b	14b88 <table_find_int@@Base+0xd8>
   14b84:	mov	sl, r4
   14b88:	mov	r0, sl
   14b8c:	sub	sp, fp, #28
   14b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014b94 <table_find_uint@@Base>:
   14b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14b98:	add	fp, sp, #28
   14b9c:	sub	sp, sp, #4
   14ba0:	mov	r4, r3
   14ba4:	mov	r9, r1
   14ba8:	mov	r5, r0
   14bac:	str	r2, [sp]
   14bb0:	bl	16e18 <table_get_row_length@@Base>
   14bb4:	mov	r8, r0
   14bb8:	mov	r0, r5
   14bbc:	mov	r1, r9
   14bc0:	bl	140f8 <table_get_column_compare_function@@Base>
   14bc4:	mov	r6, r0
   14bc8:	mvn	sl, #0
   14bcc:	cmp	r4, #0
   14bd0:	beq	14c18 <table_find_uint@@Base+0x84>
   14bd4:	cmp	r8, #1
   14bd8:	blt	14c6c <table_find_uint@@Base+0xd8>
   14bdc:	mov	r4, sp
   14be0:	sub	r7, r8, #1
   14be4:	mov	r0, r5
   14be8:	mov	r2, r9
   14bec:	mov	r1, r7
   14bf0:	bl	16b40 <table_get@@Base>
   14bf4:	mov	r1, r0
   14bf8:	mov	r0, r4
   14bfc:	blx	r6
   14c00:	cmp	r0, #0
   14c04:	beq	14c60 <table_find_uint@@Base+0xcc>
   14c08:	cmp	r7, #0
   14c0c:	mov	r8, r7
   14c10:	bgt	14be0 <table_find_uint@@Base+0x4c>
   14c14:	b	14c6c <table_find_uint@@Base+0xd8>
   14c18:	cmp	r8, #1
   14c1c:	blt	14c6c <table_find_uint@@Base+0xd8>
   14c20:	mov	r4, #0
   14c24:	mov	sl, sp
   14c28:	mov	r0, r5
   14c2c:	mov	r1, r4
   14c30:	mov	r2, r9
   14c34:	bl	16b40 <table_get@@Base>
   14c38:	mov	r1, r0
   14c3c:	mov	r0, sl
   14c40:	blx	r6
   14c44:	cmp	r0, #0
   14c48:	beq	14c68 <table_find_uint@@Base+0xd4>
   14c4c:	add	r4, r4, #1
   14c50:	cmp	r8, r4
   14c54:	bne	14c28 <table_find_uint@@Base+0x94>
   14c58:	mvn	sl, #0
   14c5c:	b	14c6c <table_find_uint@@Base+0xd8>
   14c60:	sub	sl, r8, #1
   14c64:	b	14c6c <table_find_uint@@Base+0xd8>
   14c68:	mov	sl, r4
   14c6c:	mov	r0, sl
   14c70:	sub	sp, fp, #28
   14c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014c78 <table_find_int8@@Base>:
   14c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14c7c:	add	fp, sp, #28
   14c80:	sub	sp, sp, #4
   14c84:	mov	r4, r3
   14c88:	mov	r9, r1
   14c8c:	mov	r5, r0
   14c90:	strb	r2, [sp, #3]
   14c94:	bl	16e18 <table_get_row_length@@Base>
   14c98:	mov	r8, r0
   14c9c:	mov	r0, r5
   14ca0:	mov	r1, r9
   14ca4:	bl	140f8 <table_get_column_compare_function@@Base>
   14ca8:	mov	r6, r0
   14cac:	mvn	sl, #0
   14cb0:	cmp	r4, #0
   14cb4:	beq	14cfc <table_find_int8@@Base+0x84>
   14cb8:	cmp	r8, #1
   14cbc:	blt	14d50 <table_find_int8@@Base+0xd8>
   14cc0:	add	r4, sp, #3
   14cc4:	sub	r7, r8, #1
   14cc8:	mov	r0, r5
   14ccc:	mov	r2, r9
   14cd0:	mov	r1, r7
   14cd4:	bl	16b40 <table_get@@Base>
   14cd8:	mov	r1, r0
   14cdc:	mov	r0, r4
   14ce0:	blx	r6
   14ce4:	cmp	r0, #0
   14ce8:	beq	14d44 <table_find_int8@@Base+0xcc>
   14cec:	cmp	r7, #0
   14cf0:	mov	r8, r7
   14cf4:	bgt	14cc4 <table_find_int8@@Base+0x4c>
   14cf8:	b	14d50 <table_find_int8@@Base+0xd8>
   14cfc:	cmp	r8, #1
   14d00:	blt	14d50 <table_find_int8@@Base+0xd8>
   14d04:	mov	r4, #0
   14d08:	add	sl, sp, #3
   14d0c:	mov	r0, r5
   14d10:	mov	r1, r4
   14d14:	mov	r2, r9
   14d18:	bl	16b40 <table_get@@Base>
   14d1c:	mov	r1, r0
   14d20:	mov	r0, sl
   14d24:	blx	r6
   14d28:	cmp	r0, #0
   14d2c:	beq	14d4c <table_find_int8@@Base+0xd4>
   14d30:	add	r4, r4, #1
   14d34:	cmp	r8, r4
   14d38:	bne	14d0c <table_find_int8@@Base+0x94>
   14d3c:	mvn	sl, #0
   14d40:	b	14d50 <table_find_int8@@Base+0xd8>
   14d44:	sub	sl, r8, #1
   14d48:	b	14d50 <table_find_int8@@Base+0xd8>
   14d4c:	mov	sl, r4
   14d50:	mov	r0, sl
   14d54:	sub	sp, fp, #28
   14d58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014d5c <table_find_uint8@@Base>:
   14d5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14d60:	add	fp, sp, #28
   14d64:	sub	sp, sp, #4
   14d68:	mov	r4, r3
   14d6c:	mov	r9, r1
   14d70:	mov	r5, r0
   14d74:	strb	r2, [sp, #3]
   14d78:	bl	16e18 <table_get_row_length@@Base>
   14d7c:	mov	r8, r0
   14d80:	mov	r0, r5
   14d84:	mov	r1, r9
   14d88:	bl	140f8 <table_get_column_compare_function@@Base>
   14d8c:	mov	r6, r0
   14d90:	mvn	sl, #0
   14d94:	cmp	r4, #0
   14d98:	beq	14de0 <table_find_uint8@@Base+0x84>
   14d9c:	cmp	r8, #1
   14da0:	blt	14e34 <table_find_uint8@@Base+0xd8>
   14da4:	add	r4, sp, #3
   14da8:	sub	r7, r8, #1
   14dac:	mov	r0, r5
   14db0:	mov	r2, r9
   14db4:	mov	r1, r7
   14db8:	bl	16b40 <table_get@@Base>
   14dbc:	mov	r1, r0
   14dc0:	mov	r0, r4
   14dc4:	blx	r6
   14dc8:	cmp	r0, #0
   14dcc:	beq	14e28 <table_find_uint8@@Base+0xcc>
   14dd0:	cmp	r7, #0
   14dd4:	mov	r8, r7
   14dd8:	bgt	14da8 <table_find_uint8@@Base+0x4c>
   14ddc:	b	14e34 <table_find_uint8@@Base+0xd8>
   14de0:	cmp	r8, #1
   14de4:	blt	14e34 <table_find_uint8@@Base+0xd8>
   14de8:	mov	r4, #0
   14dec:	add	sl, sp, #3
   14df0:	mov	r0, r5
   14df4:	mov	r1, r4
   14df8:	mov	r2, r9
   14dfc:	bl	16b40 <table_get@@Base>
   14e00:	mov	r1, r0
   14e04:	mov	r0, sl
   14e08:	blx	r6
   14e0c:	cmp	r0, #0
   14e10:	beq	14e30 <table_find_uint8@@Base+0xd4>
   14e14:	add	r4, r4, #1
   14e18:	cmp	r8, r4
   14e1c:	bne	14df0 <table_find_uint8@@Base+0x94>
   14e20:	mvn	sl, #0
   14e24:	b	14e34 <table_find_uint8@@Base+0xd8>
   14e28:	sub	sl, r8, #1
   14e2c:	b	14e34 <table_find_uint8@@Base+0xd8>
   14e30:	mov	sl, r4
   14e34:	mov	r0, sl
   14e38:	sub	sp, fp, #28
   14e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014e40 <table_find_int16@@Base>:
   14e40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14e44:	add	fp, sp, #28
   14e48:	sub	sp, sp, #4
   14e4c:	mov	r4, r3
   14e50:	mov	r9, r1
   14e54:	mov	r5, r0
   14e58:	strh	r2, [sp, #2]
   14e5c:	bl	16e18 <table_get_row_length@@Base>
   14e60:	mov	r8, r0
   14e64:	mov	r0, r5
   14e68:	mov	r1, r9
   14e6c:	bl	140f8 <table_get_column_compare_function@@Base>
   14e70:	mov	r6, r0
   14e74:	mvn	sl, #0
   14e78:	cmp	r4, #0
   14e7c:	beq	14ec4 <table_find_int16@@Base+0x84>
   14e80:	cmp	r8, #1
   14e84:	blt	14f18 <table_find_int16@@Base+0xd8>
   14e88:	add	r4, sp, #2
   14e8c:	sub	r7, r8, #1
   14e90:	mov	r0, r5
   14e94:	mov	r2, r9
   14e98:	mov	r1, r7
   14e9c:	bl	16b40 <table_get@@Base>
   14ea0:	mov	r1, r0
   14ea4:	mov	r0, r4
   14ea8:	blx	r6
   14eac:	cmp	r0, #0
   14eb0:	beq	14f0c <table_find_int16@@Base+0xcc>
   14eb4:	cmp	r7, #0
   14eb8:	mov	r8, r7
   14ebc:	bgt	14e8c <table_find_int16@@Base+0x4c>
   14ec0:	b	14f18 <table_find_int16@@Base+0xd8>
   14ec4:	cmp	r8, #1
   14ec8:	blt	14f18 <table_find_int16@@Base+0xd8>
   14ecc:	mov	r4, #0
   14ed0:	add	sl, sp, #2
   14ed4:	mov	r0, r5
   14ed8:	mov	r1, r4
   14edc:	mov	r2, r9
   14ee0:	bl	16b40 <table_get@@Base>
   14ee4:	mov	r1, r0
   14ee8:	mov	r0, sl
   14eec:	blx	r6
   14ef0:	cmp	r0, #0
   14ef4:	beq	14f14 <table_find_int16@@Base+0xd4>
   14ef8:	add	r4, r4, #1
   14efc:	cmp	r8, r4
   14f00:	bne	14ed4 <table_find_int16@@Base+0x94>
   14f04:	mvn	sl, #0
   14f08:	b	14f18 <table_find_int16@@Base+0xd8>
   14f0c:	sub	sl, r8, #1
   14f10:	b	14f18 <table_find_int16@@Base+0xd8>
   14f14:	mov	sl, r4
   14f18:	mov	r0, sl
   14f1c:	sub	sp, fp, #28
   14f20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00014f24 <table_find_uint16@@Base>:
   14f24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f28:	add	fp, sp, #28
   14f2c:	sub	sp, sp, #4
   14f30:	mov	r4, r3
   14f34:	mov	r9, r1
   14f38:	mov	r5, r0
   14f3c:	strh	r2, [sp, #2]
   14f40:	bl	16e18 <table_get_row_length@@Base>
   14f44:	mov	r8, r0
   14f48:	mov	r0, r5
   14f4c:	mov	r1, r9
   14f50:	bl	140f8 <table_get_column_compare_function@@Base>
   14f54:	mov	r6, r0
   14f58:	mvn	sl, #0
   14f5c:	cmp	r4, #0
   14f60:	beq	14fa8 <table_find_uint16@@Base+0x84>
   14f64:	cmp	r8, #1
   14f68:	blt	14ffc <table_find_uint16@@Base+0xd8>
   14f6c:	add	r4, sp, #2
   14f70:	sub	r7, r8, #1
   14f74:	mov	r0, r5
   14f78:	mov	r2, r9
   14f7c:	mov	r1, r7
   14f80:	bl	16b40 <table_get@@Base>
   14f84:	mov	r1, r0
   14f88:	mov	r0, r4
   14f8c:	blx	r6
   14f90:	cmp	r0, #0
   14f94:	beq	14ff0 <table_find_uint16@@Base+0xcc>
   14f98:	cmp	r7, #0
   14f9c:	mov	r8, r7
   14fa0:	bgt	14f70 <table_find_uint16@@Base+0x4c>
   14fa4:	b	14ffc <table_find_uint16@@Base+0xd8>
   14fa8:	cmp	r8, #1
   14fac:	blt	14ffc <table_find_uint16@@Base+0xd8>
   14fb0:	mov	r4, #0
   14fb4:	add	sl, sp, #2
   14fb8:	mov	r0, r5
   14fbc:	mov	r1, r4
   14fc0:	mov	r2, r9
   14fc4:	bl	16b40 <table_get@@Base>
   14fc8:	mov	r1, r0
   14fcc:	mov	r0, sl
   14fd0:	blx	r6
   14fd4:	cmp	r0, #0
   14fd8:	beq	14ff8 <table_find_uint16@@Base+0xd4>
   14fdc:	add	r4, r4, #1
   14fe0:	cmp	r8, r4
   14fe4:	bne	14fb8 <table_find_uint16@@Base+0x94>
   14fe8:	mvn	sl, #0
   14fec:	b	14ffc <table_find_uint16@@Base+0xd8>
   14ff0:	sub	sl, r8, #1
   14ff4:	b	14ffc <table_find_uint16@@Base+0xd8>
   14ff8:	mov	sl, r4
   14ffc:	mov	r0, sl
   15000:	sub	sp, fp, #28
   15004:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015008 <table_find_int32@@Base>:
   15008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1500c:	add	fp, sp, #28
   15010:	sub	sp, sp, #4
   15014:	mov	r4, r3
   15018:	mov	r9, r1
   1501c:	mov	r5, r0
   15020:	str	r2, [sp]
   15024:	bl	16e18 <table_get_row_length@@Base>
   15028:	mov	r8, r0
   1502c:	mov	r0, r5
   15030:	mov	r1, r9
   15034:	bl	140f8 <table_get_column_compare_function@@Base>
   15038:	mov	r6, r0
   1503c:	mvn	sl, #0
   15040:	cmp	r4, #0
   15044:	beq	1508c <table_find_int32@@Base+0x84>
   15048:	cmp	r8, #1
   1504c:	blt	150e0 <table_find_int32@@Base+0xd8>
   15050:	mov	r4, sp
   15054:	sub	r7, r8, #1
   15058:	mov	r0, r5
   1505c:	mov	r2, r9
   15060:	mov	r1, r7
   15064:	bl	16b40 <table_get@@Base>
   15068:	mov	r1, r0
   1506c:	mov	r0, r4
   15070:	blx	r6
   15074:	cmp	r0, #0
   15078:	beq	150d4 <table_find_int32@@Base+0xcc>
   1507c:	cmp	r7, #0
   15080:	mov	r8, r7
   15084:	bgt	15054 <table_find_int32@@Base+0x4c>
   15088:	b	150e0 <table_find_int32@@Base+0xd8>
   1508c:	cmp	r8, #1
   15090:	blt	150e0 <table_find_int32@@Base+0xd8>
   15094:	mov	r4, #0
   15098:	mov	sl, sp
   1509c:	mov	r0, r5
   150a0:	mov	r1, r4
   150a4:	mov	r2, r9
   150a8:	bl	16b40 <table_get@@Base>
   150ac:	mov	r1, r0
   150b0:	mov	r0, sl
   150b4:	blx	r6
   150b8:	cmp	r0, #0
   150bc:	beq	150dc <table_find_int32@@Base+0xd4>
   150c0:	add	r4, r4, #1
   150c4:	cmp	r8, r4
   150c8:	bne	1509c <table_find_int32@@Base+0x94>
   150cc:	mvn	sl, #0
   150d0:	b	150e0 <table_find_int32@@Base+0xd8>
   150d4:	sub	sl, r8, #1
   150d8:	b	150e0 <table_find_int32@@Base+0xd8>
   150dc:	mov	sl, r4
   150e0:	mov	r0, sl
   150e4:	sub	sp, fp, #28
   150e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000150ec <table_find_uint32@@Base>:
   150ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   150f0:	add	fp, sp, #28
   150f4:	sub	sp, sp, #4
   150f8:	mov	r4, r3
   150fc:	mov	r9, r1
   15100:	mov	r5, r0
   15104:	str	r2, [sp]
   15108:	bl	16e18 <table_get_row_length@@Base>
   1510c:	mov	r8, r0
   15110:	mov	r0, r5
   15114:	mov	r1, r9
   15118:	bl	140f8 <table_get_column_compare_function@@Base>
   1511c:	mov	r6, r0
   15120:	mvn	sl, #0
   15124:	cmp	r4, #0
   15128:	beq	15170 <table_find_uint32@@Base+0x84>
   1512c:	cmp	r8, #1
   15130:	blt	151c4 <table_find_uint32@@Base+0xd8>
   15134:	mov	r4, sp
   15138:	sub	r7, r8, #1
   1513c:	mov	r0, r5
   15140:	mov	r2, r9
   15144:	mov	r1, r7
   15148:	bl	16b40 <table_get@@Base>
   1514c:	mov	r1, r0
   15150:	mov	r0, r4
   15154:	blx	r6
   15158:	cmp	r0, #0
   1515c:	beq	151b8 <table_find_uint32@@Base+0xcc>
   15160:	cmp	r7, #0
   15164:	mov	r8, r7
   15168:	bgt	15138 <table_find_uint32@@Base+0x4c>
   1516c:	b	151c4 <table_find_uint32@@Base+0xd8>
   15170:	cmp	r8, #1
   15174:	blt	151c4 <table_find_uint32@@Base+0xd8>
   15178:	mov	r4, #0
   1517c:	mov	sl, sp
   15180:	mov	r0, r5
   15184:	mov	r1, r4
   15188:	mov	r2, r9
   1518c:	bl	16b40 <table_get@@Base>
   15190:	mov	r1, r0
   15194:	mov	r0, sl
   15198:	blx	r6
   1519c:	cmp	r0, #0
   151a0:	beq	151c0 <table_find_uint32@@Base+0xd4>
   151a4:	add	r4, r4, #1
   151a8:	cmp	r8, r4
   151ac:	bne	15180 <table_find_uint32@@Base+0x94>
   151b0:	mvn	sl, #0
   151b4:	b	151c4 <table_find_uint32@@Base+0xd8>
   151b8:	sub	sl, r8, #1
   151bc:	b	151c4 <table_find_uint32@@Base+0xd8>
   151c0:	mov	sl, r4
   151c4:	mov	r0, sl
   151c8:	sub	sp, fp, #28
   151cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000151d0 <table_find_int64@@Base>:
   151d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   151d4:	add	fp, sp, #28
   151d8:	sub	sp, sp, #12
   151dc:	mov	r9, r1
   151e0:	mov	r5, r0
   151e4:	stm	sp, {r2, r3}
   151e8:	bl	16e18 <table_get_row_length@@Base>
   151ec:	mov	r8, r0
   151f0:	mov	r0, r5
   151f4:	mov	r1, r9
   151f8:	bl	140f8 <table_get_column_compare_function@@Base>
   151fc:	mov	r6, r0
   15200:	ldr	r0, [fp, #8]
   15204:	mvn	sl, #0
   15208:	cmp	r0, #0
   1520c:	beq	15254 <table_find_int64@@Base+0x84>
   15210:	cmp	r8, #1
   15214:	blt	152a8 <table_find_int64@@Base+0xd8>
   15218:	mov	r4, sp
   1521c:	sub	r7, r8, #1
   15220:	mov	r0, r5
   15224:	mov	r2, r9
   15228:	mov	r1, r7
   1522c:	bl	16b40 <table_get@@Base>
   15230:	mov	r1, r0
   15234:	mov	r0, r4
   15238:	blx	r6
   1523c:	cmp	r0, #0
   15240:	beq	1529c <table_find_int64@@Base+0xcc>
   15244:	cmp	r7, #0
   15248:	mov	r8, r7
   1524c:	bgt	1521c <table_find_int64@@Base+0x4c>
   15250:	b	152a8 <table_find_int64@@Base+0xd8>
   15254:	cmp	r8, #1
   15258:	blt	152a8 <table_find_int64@@Base+0xd8>
   1525c:	mov	r4, #0
   15260:	mov	sl, sp
   15264:	mov	r0, r5
   15268:	mov	r1, r4
   1526c:	mov	r2, r9
   15270:	bl	16b40 <table_get@@Base>
   15274:	mov	r1, r0
   15278:	mov	r0, sl
   1527c:	blx	r6
   15280:	cmp	r0, #0
   15284:	beq	152a4 <table_find_int64@@Base+0xd4>
   15288:	add	r4, r4, #1
   1528c:	cmp	r8, r4
   15290:	bne	15264 <table_find_int64@@Base+0x94>
   15294:	mvn	sl, #0
   15298:	b	152a8 <table_find_int64@@Base+0xd8>
   1529c:	sub	sl, r8, #1
   152a0:	b	152a8 <table_find_int64@@Base+0xd8>
   152a4:	mov	sl, r4
   152a8:	mov	r0, sl
   152ac:	sub	sp, fp, #28
   152b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000152b4 <table_find_uint64@@Base>:
   152b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   152b8:	add	fp, sp, #28
   152bc:	sub	sp, sp, #12
   152c0:	mov	r9, r1
   152c4:	mov	r5, r0
   152c8:	stm	sp, {r2, r3}
   152cc:	bl	16e18 <table_get_row_length@@Base>
   152d0:	mov	r8, r0
   152d4:	mov	r0, r5
   152d8:	mov	r1, r9
   152dc:	bl	140f8 <table_get_column_compare_function@@Base>
   152e0:	mov	r6, r0
   152e4:	ldr	r0, [fp, #8]
   152e8:	mvn	sl, #0
   152ec:	cmp	r0, #0
   152f0:	beq	15338 <table_find_uint64@@Base+0x84>
   152f4:	cmp	r8, #1
   152f8:	blt	1538c <table_find_uint64@@Base+0xd8>
   152fc:	mov	r4, sp
   15300:	sub	r7, r8, #1
   15304:	mov	r0, r5
   15308:	mov	r2, r9
   1530c:	mov	r1, r7
   15310:	bl	16b40 <table_get@@Base>
   15314:	mov	r1, r0
   15318:	mov	r0, r4
   1531c:	blx	r6
   15320:	cmp	r0, #0
   15324:	beq	15380 <table_find_uint64@@Base+0xcc>
   15328:	cmp	r7, #0
   1532c:	mov	r8, r7
   15330:	bgt	15300 <table_find_uint64@@Base+0x4c>
   15334:	b	1538c <table_find_uint64@@Base+0xd8>
   15338:	cmp	r8, #1
   1533c:	blt	1538c <table_find_uint64@@Base+0xd8>
   15340:	mov	r4, #0
   15344:	mov	sl, sp
   15348:	mov	r0, r5
   1534c:	mov	r1, r4
   15350:	mov	r2, r9
   15354:	bl	16b40 <table_get@@Base>
   15358:	mov	r1, r0
   1535c:	mov	r0, sl
   15360:	blx	r6
   15364:	cmp	r0, #0
   15368:	beq	15388 <table_find_uint64@@Base+0xd4>
   1536c:	add	r4, r4, #1
   15370:	cmp	r8, r4
   15374:	bne	15348 <table_find_uint64@@Base+0x94>
   15378:	mvn	sl, #0
   1537c:	b	1538c <table_find_uint64@@Base+0xd8>
   15380:	sub	sl, r8, #1
   15384:	b	1538c <table_find_uint64@@Base+0xd8>
   15388:	mov	sl, r4
   1538c:	mov	r0, sl
   15390:	sub	sp, fp, #28
   15394:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015398 <table_find_short@@Base>:
   15398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1539c:	add	fp, sp, #28
   153a0:	sub	sp, sp, #4
   153a4:	mov	r4, r3
   153a8:	mov	r9, r1
   153ac:	mov	r5, r0
   153b0:	strh	r2, [sp, #2]
   153b4:	bl	16e18 <table_get_row_length@@Base>
   153b8:	mov	r8, r0
   153bc:	mov	r0, r5
   153c0:	mov	r1, r9
   153c4:	bl	140f8 <table_get_column_compare_function@@Base>
   153c8:	mov	r6, r0
   153cc:	mvn	sl, #0
   153d0:	cmp	r4, #0
   153d4:	beq	1541c <table_find_short@@Base+0x84>
   153d8:	cmp	r8, #1
   153dc:	blt	15470 <table_find_short@@Base+0xd8>
   153e0:	add	r4, sp, #2
   153e4:	sub	r7, r8, #1
   153e8:	mov	r0, r5
   153ec:	mov	r2, r9
   153f0:	mov	r1, r7
   153f4:	bl	16b40 <table_get@@Base>
   153f8:	mov	r1, r0
   153fc:	mov	r0, r4
   15400:	blx	r6
   15404:	cmp	r0, #0
   15408:	beq	15464 <table_find_short@@Base+0xcc>
   1540c:	cmp	r7, #0
   15410:	mov	r8, r7
   15414:	bgt	153e4 <table_find_short@@Base+0x4c>
   15418:	b	15470 <table_find_short@@Base+0xd8>
   1541c:	cmp	r8, #1
   15420:	blt	15470 <table_find_short@@Base+0xd8>
   15424:	mov	r4, #0
   15428:	add	sl, sp, #2
   1542c:	mov	r0, r5
   15430:	mov	r1, r4
   15434:	mov	r2, r9
   15438:	bl	16b40 <table_get@@Base>
   1543c:	mov	r1, r0
   15440:	mov	r0, sl
   15444:	blx	r6
   15448:	cmp	r0, #0
   1544c:	beq	1546c <table_find_short@@Base+0xd4>
   15450:	add	r4, r4, #1
   15454:	cmp	r8, r4
   15458:	bne	1542c <table_find_short@@Base+0x94>
   1545c:	mvn	sl, #0
   15460:	b	15470 <table_find_short@@Base+0xd8>
   15464:	sub	sl, r8, #1
   15468:	b	15470 <table_find_short@@Base+0xd8>
   1546c:	mov	sl, r4
   15470:	mov	r0, sl
   15474:	sub	sp, fp, #28
   15478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001547c <table_find_ushort@@Base>:
   1547c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15480:	add	fp, sp, #28
   15484:	sub	sp, sp, #4
   15488:	mov	r4, r3
   1548c:	mov	r9, r1
   15490:	mov	r5, r0
   15494:	strh	r2, [sp, #2]
   15498:	bl	16e18 <table_get_row_length@@Base>
   1549c:	mov	r8, r0
   154a0:	mov	r0, r5
   154a4:	mov	r1, r9
   154a8:	bl	140f8 <table_get_column_compare_function@@Base>
   154ac:	mov	r6, r0
   154b0:	mvn	sl, #0
   154b4:	cmp	r4, #0
   154b8:	beq	15500 <table_find_ushort@@Base+0x84>
   154bc:	cmp	r8, #1
   154c0:	blt	15554 <table_find_ushort@@Base+0xd8>
   154c4:	add	r4, sp, #2
   154c8:	sub	r7, r8, #1
   154cc:	mov	r0, r5
   154d0:	mov	r2, r9
   154d4:	mov	r1, r7
   154d8:	bl	16b40 <table_get@@Base>
   154dc:	mov	r1, r0
   154e0:	mov	r0, r4
   154e4:	blx	r6
   154e8:	cmp	r0, #0
   154ec:	beq	15548 <table_find_ushort@@Base+0xcc>
   154f0:	cmp	r7, #0
   154f4:	mov	r8, r7
   154f8:	bgt	154c8 <table_find_ushort@@Base+0x4c>
   154fc:	b	15554 <table_find_ushort@@Base+0xd8>
   15500:	cmp	r8, #1
   15504:	blt	15554 <table_find_ushort@@Base+0xd8>
   15508:	mov	r4, #0
   1550c:	add	sl, sp, #2
   15510:	mov	r0, r5
   15514:	mov	r1, r4
   15518:	mov	r2, r9
   1551c:	bl	16b40 <table_get@@Base>
   15520:	mov	r1, r0
   15524:	mov	r0, sl
   15528:	blx	r6
   1552c:	cmp	r0, #0
   15530:	beq	15550 <table_find_ushort@@Base+0xd4>
   15534:	add	r4, r4, #1
   15538:	cmp	r8, r4
   1553c:	bne	15510 <table_find_ushort@@Base+0x94>
   15540:	mvn	sl, #0
   15544:	b	15554 <table_find_ushort@@Base+0xd8>
   15548:	sub	sl, r8, #1
   1554c:	b	15554 <table_find_ushort@@Base+0xd8>
   15550:	mov	sl, r4
   15554:	mov	r0, sl
   15558:	sub	sp, fp, #28
   1555c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015560 <table_find_long@@Base>:
   15560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15564:	add	fp, sp, #28
   15568:	sub	sp, sp, #4
   1556c:	mov	r4, r3
   15570:	mov	r9, r1
   15574:	mov	r5, r0
   15578:	str	r2, [sp]
   1557c:	bl	16e18 <table_get_row_length@@Base>
   15580:	mov	r8, r0
   15584:	mov	r0, r5
   15588:	mov	r1, r9
   1558c:	bl	140f8 <table_get_column_compare_function@@Base>
   15590:	mov	r6, r0
   15594:	mvn	sl, #0
   15598:	cmp	r4, #0
   1559c:	beq	155e4 <table_find_long@@Base+0x84>
   155a0:	cmp	r8, #1
   155a4:	blt	15638 <table_find_long@@Base+0xd8>
   155a8:	mov	r4, sp
   155ac:	sub	r7, r8, #1
   155b0:	mov	r0, r5
   155b4:	mov	r2, r9
   155b8:	mov	r1, r7
   155bc:	bl	16b40 <table_get@@Base>
   155c0:	mov	r1, r0
   155c4:	mov	r0, r4
   155c8:	blx	r6
   155cc:	cmp	r0, #0
   155d0:	beq	1562c <table_find_long@@Base+0xcc>
   155d4:	cmp	r7, #0
   155d8:	mov	r8, r7
   155dc:	bgt	155ac <table_find_long@@Base+0x4c>
   155e0:	b	15638 <table_find_long@@Base+0xd8>
   155e4:	cmp	r8, #1
   155e8:	blt	15638 <table_find_long@@Base+0xd8>
   155ec:	mov	r4, #0
   155f0:	mov	sl, sp
   155f4:	mov	r0, r5
   155f8:	mov	r1, r4
   155fc:	mov	r2, r9
   15600:	bl	16b40 <table_get@@Base>
   15604:	mov	r1, r0
   15608:	mov	r0, sl
   1560c:	blx	r6
   15610:	cmp	r0, #0
   15614:	beq	15634 <table_find_long@@Base+0xd4>
   15618:	add	r4, r4, #1
   1561c:	cmp	r8, r4
   15620:	bne	155f4 <table_find_long@@Base+0x94>
   15624:	mvn	sl, #0
   15628:	b	15638 <table_find_long@@Base+0xd8>
   1562c:	sub	sl, r8, #1
   15630:	b	15638 <table_find_long@@Base+0xd8>
   15634:	mov	sl, r4
   15638:	mov	r0, sl
   1563c:	sub	sp, fp, #28
   15640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015644 <table_find_ulong@@Base>:
   15644:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15648:	add	fp, sp, #28
   1564c:	sub	sp, sp, #4
   15650:	mov	r4, r3
   15654:	mov	r9, r1
   15658:	mov	r5, r0
   1565c:	str	r2, [sp]
   15660:	bl	16e18 <table_get_row_length@@Base>
   15664:	mov	r8, r0
   15668:	mov	r0, r5
   1566c:	mov	r1, r9
   15670:	bl	140f8 <table_get_column_compare_function@@Base>
   15674:	mov	r6, r0
   15678:	mvn	sl, #0
   1567c:	cmp	r4, #0
   15680:	beq	156c8 <table_find_ulong@@Base+0x84>
   15684:	cmp	r8, #1
   15688:	blt	1571c <table_find_ulong@@Base+0xd8>
   1568c:	mov	r4, sp
   15690:	sub	r7, r8, #1
   15694:	mov	r0, r5
   15698:	mov	r2, r9
   1569c:	mov	r1, r7
   156a0:	bl	16b40 <table_get@@Base>
   156a4:	mov	r1, r0
   156a8:	mov	r0, r4
   156ac:	blx	r6
   156b0:	cmp	r0, #0
   156b4:	beq	15710 <table_find_ulong@@Base+0xcc>
   156b8:	cmp	r7, #0
   156bc:	mov	r8, r7
   156c0:	bgt	15690 <table_find_ulong@@Base+0x4c>
   156c4:	b	1571c <table_find_ulong@@Base+0xd8>
   156c8:	cmp	r8, #1
   156cc:	blt	1571c <table_find_ulong@@Base+0xd8>
   156d0:	mov	r4, #0
   156d4:	mov	sl, sp
   156d8:	mov	r0, r5
   156dc:	mov	r1, r4
   156e0:	mov	r2, r9
   156e4:	bl	16b40 <table_get@@Base>
   156e8:	mov	r1, r0
   156ec:	mov	r0, sl
   156f0:	blx	r6
   156f4:	cmp	r0, #0
   156f8:	beq	15718 <table_find_ulong@@Base+0xd4>
   156fc:	add	r4, r4, #1
   15700:	cmp	r8, r4
   15704:	bne	156d8 <table_find_ulong@@Base+0x94>
   15708:	mvn	sl, #0
   1570c:	b	1571c <table_find_ulong@@Base+0xd8>
   15710:	sub	sl, r8, #1
   15714:	b	1571c <table_find_ulong@@Base+0xd8>
   15718:	mov	sl, r4
   1571c:	mov	r0, sl
   15720:	sub	sp, fp, #28
   15724:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015728 <table_find_llong@@Base>:
   15728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1572c:	add	fp, sp, #28
   15730:	sub	sp, sp, #12
   15734:	mov	r9, r1
   15738:	mov	r5, r0
   1573c:	stm	sp, {r2, r3}
   15740:	bl	16e18 <table_get_row_length@@Base>
   15744:	mov	r8, r0
   15748:	mov	r0, r5
   1574c:	mov	r1, r9
   15750:	bl	140f8 <table_get_column_compare_function@@Base>
   15754:	mov	r6, r0
   15758:	ldr	r0, [fp, #8]
   1575c:	mvn	sl, #0
   15760:	cmp	r0, #0
   15764:	beq	157ac <table_find_llong@@Base+0x84>
   15768:	cmp	r8, #1
   1576c:	blt	15800 <table_find_llong@@Base+0xd8>
   15770:	mov	r4, sp
   15774:	sub	r7, r8, #1
   15778:	mov	r0, r5
   1577c:	mov	r2, r9
   15780:	mov	r1, r7
   15784:	bl	16b40 <table_get@@Base>
   15788:	mov	r1, r0
   1578c:	mov	r0, r4
   15790:	blx	r6
   15794:	cmp	r0, #0
   15798:	beq	157f4 <table_find_llong@@Base+0xcc>
   1579c:	cmp	r7, #0
   157a0:	mov	r8, r7
   157a4:	bgt	15774 <table_find_llong@@Base+0x4c>
   157a8:	b	15800 <table_find_llong@@Base+0xd8>
   157ac:	cmp	r8, #1
   157b0:	blt	15800 <table_find_llong@@Base+0xd8>
   157b4:	mov	r4, #0
   157b8:	mov	sl, sp
   157bc:	mov	r0, r5
   157c0:	mov	r1, r4
   157c4:	mov	r2, r9
   157c8:	bl	16b40 <table_get@@Base>
   157cc:	mov	r1, r0
   157d0:	mov	r0, sl
   157d4:	blx	r6
   157d8:	cmp	r0, #0
   157dc:	beq	157fc <table_find_llong@@Base+0xd4>
   157e0:	add	r4, r4, #1
   157e4:	cmp	r8, r4
   157e8:	bne	157bc <table_find_llong@@Base+0x94>
   157ec:	mvn	sl, #0
   157f0:	b	15800 <table_find_llong@@Base+0xd8>
   157f4:	sub	sl, r8, #1
   157f8:	b	15800 <table_find_llong@@Base+0xd8>
   157fc:	mov	sl, r4
   15800:	mov	r0, sl
   15804:	sub	sp, fp, #28
   15808:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001580c <table_find_ullong@@Base>:
   1580c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15810:	add	fp, sp, #28
   15814:	sub	sp, sp, #12
   15818:	mov	r9, r1
   1581c:	mov	r5, r0
   15820:	stm	sp, {r2, r3}
   15824:	bl	16e18 <table_get_row_length@@Base>
   15828:	mov	r8, r0
   1582c:	mov	r0, r5
   15830:	mov	r1, r9
   15834:	bl	140f8 <table_get_column_compare_function@@Base>
   15838:	mov	r6, r0
   1583c:	ldr	r0, [fp, #8]
   15840:	mvn	sl, #0
   15844:	cmp	r0, #0
   15848:	beq	15890 <table_find_ullong@@Base+0x84>
   1584c:	cmp	r8, #1
   15850:	blt	158e4 <table_find_ullong@@Base+0xd8>
   15854:	mov	r4, sp
   15858:	sub	r7, r8, #1
   1585c:	mov	r0, r5
   15860:	mov	r2, r9
   15864:	mov	r1, r7
   15868:	bl	16b40 <table_get@@Base>
   1586c:	mov	r1, r0
   15870:	mov	r0, r4
   15874:	blx	r6
   15878:	cmp	r0, #0
   1587c:	beq	158d8 <table_find_ullong@@Base+0xcc>
   15880:	cmp	r7, #0
   15884:	mov	r8, r7
   15888:	bgt	15858 <table_find_ullong@@Base+0x4c>
   1588c:	b	158e4 <table_find_ullong@@Base+0xd8>
   15890:	cmp	r8, #1
   15894:	blt	158e4 <table_find_ullong@@Base+0xd8>
   15898:	mov	r4, #0
   1589c:	mov	sl, sp
   158a0:	mov	r0, r5
   158a4:	mov	r1, r4
   158a8:	mov	r2, r9
   158ac:	bl	16b40 <table_get@@Base>
   158b0:	mov	r1, r0
   158b4:	mov	r0, sl
   158b8:	blx	r6
   158bc:	cmp	r0, #0
   158c0:	beq	158e0 <table_find_ullong@@Base+0xd4>
   158c4:	add	r4, r4, #1
   158c8:	cmp	r8, r4
   158cc:	bne	158a0 <table_find_ullong@@Base+0x94>
   158d0:	mvn	sl, #0
   158d4:	b	158e4 <table_find_ullong@@Base+0xd8>
   158d8:	sub	sl, r8, #1
   158dc:	b	158e4 <table_find_ullong@@Base+0xd8>
   158e0:	mov	sl, r4
   158e4:	mov	r0, sl
   158e8:	sub	sp, fp, #28
   158ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000158f0 <table_find_float@@Base>:
   158f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158f4:	add	fp, sp, #28
   158f8:	sub	sp, sp, #4
   158fc:	mov	r4, r2
   15900:	mov	r9, r1
   15904:	mov	r5, r0
   15908:	vstr	s0, [sp]
   1590c:	bl	16e18 <table_get_row_length@@Base>
   15910:	mov	r8, r0
   15914:	mov	r0, r5
   15918:	mov	r1, r9
   1591c:	bl	140f8 <table_get_column_compare_function@@Base>
   15920:	mov	r6, r0
   15924:	mvn	sl, #0
   15928:	cmp	r4, #0
   1592c:	beq	15974 <table_find_float@@Base+0x84>
   15930:	cmp	r8, #1
   15934:	blt	159c8 <table_find_float@@Base+0xd8>
   15938:	mov	r4, sp
   1593c:	sub	r7, r8, #1
   15940:	mov	r0, r5
   15944:	mov	r2, r9
   15948:	mov	r1, r7
   1594c:	bl	16b40 <table_get@@Base>
   15950:	mov	r1, r0
   15954:	mov	r0, r4
   15958:	blx	r6
   1595c:	cmp	r0, #0
   15960:	beq	159bc <table_find_float@@Base+0xcc>
   15964:	cmp	r7, #0
   15968:	mov	r8, r7
   1596c:	bgt	1593c <table_find_float@@Base+0x4c>
   15970:	b	159c8 <table_find_float@@Base+0xd8>
   15974:	cmp	r8, #1
   15978:	blt	159c8 <table_find_float@@Base+0xd8>
   1597c:	mov	r4, #0
   15980:	mov	sl, sp
   15984:	mov	r0, r5
   15988:	mov	r1, r4
   1598c:	mov	r2, r9
   15990:	bl	16b40 <table_get@@Base>
   15994:	mov	r1, r0
   15998:	mov	r0, sl
   1599c:	blx	r6
   159a0:	cmp	r0, #0
   159a4:	beq	159c4 <table_find_float@@Base+0xd4>
   159a8:	add	r4, r4, #1
   159ac:	cmp	r8, r4
   159b0:	bne	15984 <table_find_float@@Base+0x94>
   159b4:	mvn	sl, #0
   159b8:	b	159c8 <table_find_float@@Base+0xd8>
   159bc:	sub	sl, r8, #1
   159c0:	b	159c8 <table_find_float@@Base+0xd8>
   159c4:	mov	sl, r4
   159c8:	mov	r0, sl
   159cc:	sub	sp, fp, #28
   159d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000159d4 <table_find_double@@Base>:
   159d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159d8:	add	fp, sp, #28
   159dc:	sub	sp, sp, #12
   159e0:	mov	r4, r2
   159e4:	mov	r9, r1
   159e8:	mov	r5, r0
   159ec:	vstr	d0, [sp]
   159f0:	bl	16e18 <table_get_row_length@@Base>
   159f4:	mov	r8, r0
   159f8:	mov	r0, r5
   159fc:	mov	r1, r9
   15a00:	bl	140f8 <table_get_column_compare_function@@Base>
   15a04:	mov	r6, r0
   15a08:	mvn	sl, #0
   15a0c:	cmp	r4, #0
   15a10:	beq	15a58 <table_find_double@@Base+0x84>
   15a14:	cmp	r8, #1
   15a18:	blt	15aac <table_find_double@@Base+0xd8>
   15a1c:	mov	r4, sp
   15a20:	sub	r7, r8, #1
   15a24:	mov	r0, r5
   15a28:	mov	r2, r9
   15a2c:	mov	r1, r7
   15a30:	bl	16b40 <table_get@@Base>
   15a34:	mov	r1, r0
   15a38:	mov	r0, r4
   15a3c:	blx	r6
   15a40:	cmp	r0, #0
   15a44:	beq	15aa0 <table_find_double@@Base+0xcc>
   15a48:	cmp	r7, #0
   15a4c:	mov	r8, r7
   15a50:	bgt	15a20 <table_find_double@@Base+0x4c>
   15a54:	b	15aac <table_find_double@@Base+0xd8>
   15a58:	cmp	r8, #1
   15a5c:	blt	15aac <table_find_double@@Base+0xd8>
   15a60:	mov	r4, #0
   15a64:	mov	sl, sp
   15a68:	mov	r0, r5
   15a6c:	mov	r1, r4
   15a70:	mov	r2, r9
   15a74:	bl	16b40 <table_get@@Base>
   15a78:	mov	r1, r0
   15a7c:	mov	r0, sl
   15a80:	blx	r6
   15a84:	cmp	r0, #0
   15a88:	beq	15aa8 <table_find_double@@Base+0xd4>
   15a8c:	add	r4, r4, #1
   15a90:	cmp	r8, r4
   15a94:	bne	15a68 <table_find_double@@Base+0x94>
   15a98:	mvn	sl, #0
   15a9c:	b	15aac <table_find_double@@Base+0xd8>
   15aa0:	sub	sl, r8, #1
   15aa4:	b	15aac <table_find_double@@Base+0xd8>
   15aa8:	mov	sl, r4
   15aac:	mov	r0, sl
   15ab0:	sub	sp, fp, #28
   15ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015ab8 <table_find_ldouble@@Base>:
   15ab8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15abc:	add	fp, sp, #28
   15ac0:	sub	sp, sp, #12
   15ac4:	mov	r4, r2
   15ac8:	mov	r9, r1
   15acc:	mov	r5, r0
   15ad0:	vstr	d0, [sp]
   15ad4:	bl	16e18 <table_get_row_length@@Base>
   15ad8:	mov	r8, r0
   15adc:	mov	r0, r5
   15ae0:	mov	r1, r9
   15ae4:	bl	140f8 <table_get_column_compare_function@@Base>
   15ae8:	mov	r6, r0
   15aec:	mvn	sl, #0
   15af0:	cmp	r4, #0
   15af4:	beq	15b3c <table_find_ldouble@@Base+0x84>
   15af8:	cmp	r8, #1
   15afc:	blt	15b90 <table_find_ldouble@@Base+0xd8>
   15b00:	mov	r4, sp
   15b04:	sub	r7, r8, #1
   15b08:	mov	r0, r5
   15b0c:	mov	r2, r9
   15b10:	mov	r1, r7
   15b14:	bl	16b40 <table_get@@Base>
   15b18:	mov	r1, r0
   15b1c:	mov	r0, r4
   15b20:	blx	r6
   15b24:	cmp	r0, #0
   15b28:	beq	15b84 <table_find_ldouble@@Base+0xcc>
   15b2c:	cmp	r7, #0
   15b30:	mov	r8, r7
   15b34:	bgt	15b04 <table_find_ldouble@@Base+0x4c>
   15b38:	b	15b90 <table_find_ldouble@@Base+0xd8>
   15b3c:	cmp	r8, #1
   15b40:	blt	15b90 <table_find_ldouble@@Base+0xd8>
   15b44:	mov	r4, #0
   15b48:	mov	sl, sp
   15b4c:	mov	r0, r5
   15b50:	mov	r1, r4
   15b54:	mov	r2, r9
   15b58:	bl	16b40 <table_get@@Base>
   15b5c:	mov	r1, r0
   15b60:	mov	r0, sl
   15b64:	blx	r6
   15b68:	cmp	r0, #0
   15b6c:	beq	15b8c <table_find_ldouble@@Base+0xd4>
   15b70:	add	r4, r4, #1
   15b74:	cmp	r8, r4
   15b78:	bne	15b4c <table_find_ldouble@@Base+0x94>
   15b7c:	mvn	sl, #0
   15b80:	b	15b90 <table_find_ldouble@@Base+0xd8>
   15b84:	sub	sl, r8, #1
   15b88:	b	15b90 <table_find_ldouble@@Base+0xd8>
   15b8c:	mov	sl, r4
   15b90:	mov	r0, sl
   15b94:	sub	sp, fp, #28
   15b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015b9c <table_find_char@@Base>:
   15b9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ba0:	add	fp, sp, #28
   15ba4:	sub	sp, sp, #4
   15ba8:	mov	r4, r3
   15bac:	mov	r9, r1
   15bb0:	mov	r5, r0
   15bb4:	strb	r2, [sp, #3]
   15bb8:	bl	16e18 <table_get_row_length@@Base>
   15bbc:	mov	r8, r0
   15bc0:	mov	r0, r5
   15bc4:	mov	r1, r9
   15bc8:	bl	140f8 <table_get_column_compare_function@@Base>
   15bcc:	mov	r6, r0
   15bd0:	mvn	sl, #0
   15bd4:	cmp	r4, #0
   15bd8:	beq	15c20 <table_find_char@@Base+0x84>
   15bdc:	cmp	r8, #1
   15be0:	blt	15c74 <table_find_char@@Base+0xd8>
   15be4:	add	r4, sp, #3
   15be8:	sub	r7, r8, #1
   15bec:	mov	r0, r5
   15bf0:	mov	r2, r9
   15bf4:	mov	r1, r7
   15bf8:	bl	16b40 <table_get@@Base>
   15bfc:	mov	r1, r0
   15c00:	mov	r0, r4
   15c04:	blx	r6
   15c08:	cmp	r0, #0
   15c0c:	beq	15c68 <table_find_char@@Base+0xcc>
   15c10:	cmp	r7, #0
   15c14:	mov	r8, r7
   15c18:	bgt	15be8 <table_find_char@@Base+0x4c>
   15c1c:	b	15c74 <table_find_char@@Base+0xd8>
   15c20:	cmp	r8, #1
   15c24:	blt	15c74 <table_find_char@@Base+0xd8>
   15c28:	mov	r4, #0
   15c2c:	add	sl, sp, #3
   15c30:	mov	r0, r5
   15c34:	mov	r1, r4
   15c38:	mov	r2, r9
   15c3c:	bl	16b40 <table_get@@Base>
   15c40:	mov	r1, r0
   15c44:	mov	r0, sl
   15c48:	blx	r6
   15c4c:	cmp	r0, #0
   15c50:	beq	15c70 <table_find_char@@Base+0xd4>
   15c54:	add	r4, r4, #1
   15c58:	cmp	r8, r4
   15c5c:	bne	15c30 <table_find_char@@Base+0x94>
   15c60:	mvn	sl, #0
   15c64:	b	15c74 <table_find_char@@Base+0xd8>
   15c68:	sub	sl, r8, #1
   15c6c:	b	15c74 <table_find_char@@Base+0xd8>
   15c70:	mov	sl, r4
   15c74:	mov	r0, sl
   15c78:	sub	sp, fp, #28
   15c7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015c80 <table_find_uchar@@Base>:
   15c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15c84:	add	fp, sp, #28
   15c88:	sub	sp, sp, #4
   15c8c:	mov	r4, r3
   15c90:	mov	r9, r1
   15c94:	mov	r5, r0
   15c98:	strb	r2, [sp, #3]
   15c9c:	bl	16e18 <table_get_row_length@@Base>
   15ca0:	mov	r8, r0
   15ca4:	mov	r0, r5
   15ca8:	mov	r1, r9
   15cac:	bl	140f8 <table_get_column_compare_function@@Base>
   15cb0:	mov	r6, r0
   15cb4:	mvn	sl, #0
   15cb8:	cmp	r4, #0
   15cbc:	beq	15d04 <table_find_uchar@@Base+0x84>
   15cc0:	cmp	r8, #1
   15cc4:	blt	15d58 <table_find_uchar@@Base+0xd8>
   15cc8:	add	r4, sp, #3
   15ccc:	sub	r7, r8, #1
   15cd0:	mov	r0, r5
   15cd4:	mov	r2, r9
   15cd8:	mov	r1, r7
   15cdc:	bl	16b40 <table_get@@Base>
   15ce0:	mov	r1, r0
   15ce4:	mov	r0, r4
   15ce8:	blx	r6
   15cec:	cmp	r0, #0
   15cf0:	beq	15d4c <table_find_uchar@@Base+0xcc>
   15cf4:	cmp	r7, #0
   15cf8:	mov	r8, r7
   15cfc:	bgt	15ccc <table_find_uchar@@Base+0x4c>
   15d00:	b	15d58 <table_find_uchar@@Base+0xd8>
   15d04:	cmp	r8, #1
   15d08:	blt	15d58 <table_find_uchar@@Base+0xd8>
   15d0c:	mov	r4, #0
   15d10:	add	sl, sp, #3
   15d14:	mov	r0, r5
   15d18:	mov	r1, r4
   15d1c:	mov	r2, r9
   15d20:	bl	16b40 <table_get@@Base>
   15d24:	mov	r1, r0
   15d28:	mov	r0, sl
   15d2c:	blx	r6
   15d30:	cmp	r0, #0
   15d34:	beq	15d54 <table_find_uchar@@Base+0xd4>
   15d38:	add	r4, r4, #1
   15d3c:	cmp	r8, r4
   15d40:	bne	15d14 <table_find_uchar@@Base+0x94>
   15d44:	mvn	sl, #0
   15d48:	b	15d58 <table_find_uchar@@Base+0xd8>
   15d4c:	sub	sl, r8, #1
   15d50:	b	15d58 <table_find_uchar@@Base+0xd8>
   15d54:	mov	sl, r4
   15d58:	mov	r0, sl
   15d5c:	sub	sp, fp, #28
   15d60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015d64 <table_find_string@@Base>:
   15d64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d68:	add	fp, sp, #28
   15d6c:	sub	sp, sp, #4
   15d70:	mov	r4, r3
   15d74:	mov	r9, r1
   15d78:	mov	r5, r0
   15d7c:	str	r2, [sp]
   15d80:	bl	16e18 <table_get_row_length@@Base>
   15d84:	mov	r8, r0
   15d88:	mov	r0, r5
   15d8c:	mov	r1, r9
   15d90:	bl	140f8 <table_get_column_compare_function@@Base>
   15d94:	mov	r6, r0
   15d98:	mvn	sl, #0
   15d9c:	cmp	r4, #0
   15da0:	beq	15de8 <table_find_string@@Base+0x84>
   15da4:	cmp	r8, #1
   15da8:	blt	15e3c <table_find_string@@Base+0xd8>
   15dac:	mov	r4, sp
   15db0:	sub	r7, r8, #1
   15db4:	mov	r0, r5
   15db8:	mov	r2, r9
   15dbc:	mov	r1, r7
   15dc0:	bl	16b40 <table_get@@Base>
   15dc4:	mov	r1, r0
   15dc8:	mov	r0, r4
   15dcc:	blx	r6
   15dd0:	cmp	r0, #0
   15dd4:	beq	15e30 <table_find_string@@Base+0xcc>
   15dd8:	cmp	r7, #0
   15ddc:	mov	r8, r7
   15de0:	bgt	15db0 <table_find_string@@Base+0x4c>
   15de4:	b	15e3c <table_find_string@@Base+0xd8>
   15de8:	cmp	r8, #1
   15dec:	blt	15e3c <table_find_string@@Base+0xd8>
   15df0:	mov	r4, #0
   15df4:	mov	sl, sp
   15df8:	mov	r0, r5
   15dfc:	mov	r1, r4
   15e00:	mov	r2, r9
   15e04:	bl	16b40 <table_get@@Base>
   15e08:	mov	r1, r0
   15e0c:	mov	r0, sl
   15e10:	blx	r6
   15e14:	cmp	r0, #0
   15e18:	beq	15e38 <table_find_string@@Base+0xd4>
   15e1c:	add	r4, r4, #1
   15e20:	cmp	r8, r4
   15e24:	bne	15df8 <table_find_string@@Base+0x94>
   15e28:	mvn	sl, #0
   15e2c:	b	15e3c <table_find_string@@Base+0xd8>
   15e30:	sub	sl, r8, #1
   15e34:	b	15e3c <table_find_string@@Base+0xd8>
   15e38:	mov	sl, r4
   15e3c:	mov	r0, sl
   15e40:	sub	sp, fp, #28
   15e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015e48 <table_find_ptr@@Base>:
   15e48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15e4c:	add	fp, sp, #28
   15e50:	sub	sp, sp, #4
   15e54:	mov	r5, r3
   15e58:	mov	r9, r2
   15e5c:	mov	sl, r1
   15e60:	mov	r6, r0
   15e64:	bl	16e18 <table_get_row_length@@Base>
   15e68:	mov	r7, r0
   15e6c:	mov	r0, r6
   15e70:	mov	r1, sl
   15e74:	bl	140f8 <table_get_column_compare_function@@Base>
   15e78:	mov	r4, r0
   15e7c:	mvn	r8, #0
   15e80:	cmp	r5, #0
   15e84:	beq	15ec8 <table_find_ptr@@Base+0x80>
   15e88:	cmp	r7, #1
   15e8c:	blt	15f14 <table_find_ptr@@Base+0xcc>
   15e90:	sub	r5, r7, #1
   15e94:	mov	r0, r6
   15e98:	mov	r2, sl
   15e9c:	mov	r1, r5
   15ea0:	bl	16b40 <table_get@@Base>
   15ea4:	mov	r1, r0
   15ea8:	mov	r0, r9
   15eac:	blx	r4
   15eb0:	cmp	r0, #0
   15eb4:	beq	15f08 <table_find_ptr@@Base+0xc0>
   15eb8:	cmp	r5, #0
   15ebc:	mov	r7, r5
   15ec0:	bgt	15e90 <table_find_ptr@@Base+0x48>
   15ec4:	b	15f14 <table_find_ptr@@Base+0xcc>
   15ec8:	cmp	r7, #1
   15ecc:	blt	15f14 <table_find_ptr@@Base+0xcc>
   15ed0:	mov	r5, #0
   15ed4:	mov	r0, r6
   15ed8:	mov	r1, r5
   15edc:	mov	r2, sl
   15ee0:	bl	16b40 <table_get@@Base>
   15ee4:	mov	r1, r0
   15ee8:	mov	r0, r9
   15eec:	blx	r4
   15ef0:	cmp	r0, #0
   15ef4:	beq	15f10 <table_find_ptr@@Base+0xc8>
   15ef8:	add	r5, r5, #1
   15efc:	cmp	r7, r5
   15f00:	bne	15ed4 <table_find_ptr@@Base+0x8c>
   15f04:	b	15f14 <table_find_ptr@@Base+0xcc>
   15f08:	sub	r8, r7, #1
   15f0c:	b	15f14 <table_find_ptr@@Base+0xcc>
   15f10:	mov	r8, r5
   15f14:	mov	r0, r8
   15f18:	sub	sp, fp, #28
   15f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015f20 <table_sorted_find@@Base>:
   15f20:	push	{r4, r5, r6, r7, fp, lr}
   15f24:	add	fp, sp, #16
   15f28:	sub	sp, sp, #8
   15f2c:	mov	r4, r3
   15f30:	mov	r5, r2
   15f34:	mov	r6, r1
   15f38:	mov	r7, r0
   15f3c:	bl	16e18 <table_get_row_length@@Base>
   15f40:	sub	r0, r0, #1
   15f44:	mov	r1, #0
   15f48:	mov	r2, r5
   15f4c:	mov	r3, r4
   15f50:	str	r1, [sp]
   15f54:	str	r0, [sp, #4]
   15f58:	mov	r0, r7
   15f5c:	mov	r1, r6
   15f60:	bl	15f6c <table_sorted_subset_find@@Base>
   15f64:	sub	sp, fp, #16
   15f68:	pop	{r4, r5, r6, r7, fp, pc}

00015f6c <table_sorted_subset_find@@Base>:
   15f6c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f70:	add	fp, sp, #28
   15f74:	push	{r3}		; (str r3, [sp, #-4]!)
   15f78:	ldr	r6, [fp, #12]
   15f7c:	ldr	r8, [fp, #8]
   15f80:	mov	r9, r2
   15f84:	mov	sl, r1
   15f88:	mov	r7, r0
   15f8c:	mov	r0, r7
   15f90:	mov	r1, sl
   15f94:	bl	140f8 <table_get_column_compare_function@@Base>
   15f98:	mov	r4, r0
   15f9c:	sub	r0, r6, r8
   15fa0:	mov	r2, sl
   15fa4:	add	r0, r0, r0, lsr #31
   15fa8:	add	r5, r8, r0, asr #1
   15fac:	mov	r0, r7
   15fb0:	mov	r1, r5
   15fb4:	bl	16b40 <table_get@@Base>
   15fb8:	mov	r1, r0
   15fbc:	mov	r0, r9
   15fc0:	blx	r4
   15fc4:	cmp	r6, r8
   15fc8:	blt	1603c <table_sorted_subset_find@@Base+0xd0>
   15fcc:	cmn	r0, #1
   15fd0:	bne	15fdc <table_sorted_subset_find@@Base+0x70>
   15fd4:	sub	r6, r5, #1
   15fd8:	b	15f8c <table_sorted_subset_find@@Base+0x20>
   15fdc:	cmp	r0, #1
   15fe0:	bne	15fec <table_sorted_subset_find@@Base+0x80>
   15fe4:	mov	r8, r5
   15fe8:	b	15f8c <table_sorted_subset_find@@Base+0x20>
   15fec:	cmp	r0, #0
   15ff0:	bne	1603c <table_sorted_subset_find@@Base+0xd0>
   15ff4:	ldr	r8, [sp]
   15ff8:	cmp	r8, #0
   15ffc:	add	r6, r5, #1
   16000:	mov	r0, r7
   16004:	mov	r2, sl
   16008:	subeq	r6, r5, #1
   1600c:	mov	r1, r6
   16010:	bl	16b40 <table_get@@Base>
   16014:	mov	r1, r9
   16018:	blx	r4
   1601c:	cmp	r0, #0
   16020:	mov	r5, r6
   16024:	beq	15ff8 <table_sorted_subset_find@@Base+0x8c>
   16028:	cmp	r8, #0
   1602c:	addeq	r0, r6, #1
   16030:	subne	r0, r6, #1
   16034:	sub	sp, fp, #28
   16038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1603c:	rsb	r0, r5, #0
   16040:	sub	sp, fp, #28
   16044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00016048 <table_sorted_find_int@@Base>:
   16048:	push	{r4, r5, r6, sl, fp, lr}
   1604c:	add	fp, sp, #16
   16050:	sub	sp, sp, #16
   16054:	mov	r4, r3
   16058:	mov	r5, r1
   1605c:	mov	r6, r0
   16060:	str	r2, [sp, #12]
   16064:	bl	16e18 <table_get_row_length@@Base>
   16068:	sub	r0, r0, #1
   1606c:	mov	r1, #0
   16070:	add	r2, sp, #12
   16074:	mov	r3, r4
   16078:	str	r1, [sp]
   1607c:	str	r0, [sp, #4]
   16080:	mov	r0, r6
   16084:	mov	r1, r5
   16088:	bl	15f6c <table_sorted_subset_find@@Base>
   1608c:	sub	sp, fp, #16
   16090:	pop	{r4, r5, r6, sl, fp, pc}

00016094 <table_sorted_find_uint@@Base>:
   16094:	push	{r4, r5, r6, sl, fp, lr}
   16098:	add	fp, sp, #16
   1609c:	sub	sp, sp, #16
   160a0:	mov	r4, r3
   160a4:	mov	r5, r1
   160a8:	mov	r6, r0
   160ac:	str	r2, [sp, #12]
   160b0:	bl	16e18 <table_get_row_length@@Base>
   160b4:	sub	r0, r0, #1
   160b8:	mov	r1, #0
   160bc:	add	r2, sp, #12
   160c0:	mov	r3, r4
   160c4:	str	r1, [sp]
   160c8:	str	r0, [sp, #4]
   160cc:	mov	r0, r6
   160d0:	mov	r1, r5
   160d4:	bl	15f6c <table_sorted_subset_find@@Base>
   160d8:	sub	sp, fp, #16
   160dc:	pop	{r4, r5, r6, sl, fp, pc}

000160e0 <table_sorted_find_int8@@Base>:
   160e0:	push	{r4, r5, r6, sl, fp, lr}
   160e4:	add	fp, sp, #16
   160e8:	sub	sp, sp, #16
   160ec:	mov	r4, r3
   160f0:	mov	r5, r1
   160f4:	mov	r6, r0
   160f8:	strb	r2, [sp, #15]
   160fc:	bl	16e18 <table_get_row_length@@Base>
   16100:	sub	r0, r0, #1
   16104:	mov	r1, #0
   16108:	add	r2, sp, #15
   1610c:	mov	r3, r4
   16110:	str	r1, [sp]
   16114:	str	r0, [sp, #4]
   16118:	mov	r0, r6
   1611c:	mov	r1, r5
   16120:	bl	15f6c <table_sorted_subset_find@@Base>
   16124:	sub	sp, fp, #16
   16128:	pop	{r4, r5, r6, sl, fp, pc}

0001612c <table_sorted_find_uint8@@Base>:
   1612c:	push	{r4, r5, r6, sl, fp, lr}
   16130:	add	fp, sp, #16
   16134:	sub	sp, sp, #16
   16138:	mov	r4, r3
   1613c:	mov	r5, r1
   16140:	mov	r6, r0
   16144:	strb	r2, [sp, #15]
   16148:	bl	16e18 <table_get_row_length@@Base>
   1614c:	sub	r0, r0, #1
   16150:	mov	r1, #0
   16154:	add	r2, sp, #15
   16158:	mov	r3, r4
   1615c:	str	r1, [sp]
   16160:	str	r0, [sp, #4]
   16164:	mov	r0, r6
   16168:	mov	r1, r5
   1616c:	bl	15f6c <table_sorted_subset_find@@Base>
   16170:	sub	sp, fp, #16
   16174:	pop	{r4, r5, r6, sl, fp, pc}

00016178 <table_sorted_find_int16@@Base>:
   16178:	push	{r4, r5, r6, sl, fp, lr}
   1617c:	add	fp, sp, #16
   16180:	sub	sp, sp, #16
   16184:	mov	r4, r3
   16188:	mov	r5, r1
   1618c:	mov	r6, r0
   16190:	strh	r2, [sp, #14]
   16194:	bl	16e18 <table_get_row_length@@Base>
   16198:	sub	r0, r0, #1
   1619c:	mov	r1, #0
   161a0:	add	r2, sp, #14
   161a4:	mov	r3, r4
   161a8:	str	r1, [sp]
   161ac:	str	r0, [sp, #4]
   161b0:	mov	r0, r6
   161b4:	mov	r1, r5
   161b8:	bl	15f6c <table_sorted_subset_find@@Base>
   161bc:	sub	sp, fp, #16
   161c0:	pop	{r4, r5, r6, sl, fp, pc}

000161c4 <table_sorted_find_uint16@@Base>:
   161c4:	push	{r4, r5, r6, sl, fp, lr}
   161c8:	add	fp, sp, #16
   161cc:	sub	sp, sp, #16
   161d0:	mov	r4, r3
   161d4:	mov	r5, r1
   161d8:	mov	r6, r0
   161dc:	strh	r2, [sp, #14]
   161e0:	bl	16e18 <table_get_row_length@@Base>
   161e4:	sub	r0, r0, #1
   161e8:	mov	r1, #0
   161ec:	add	r2, sp, #14
   161f0:	mov	r3, r4
   161f4:	str	r1, [sp]
   161f8:	str	r0, [sp, #4]
   161fc:	mov	r0, r6
   16200:	mov	r1, r5
   16204:	bl	15f6c <table_sorted_subset_find@@Base>
   16208:	sub	sp, fp, #16
   1620c:	pop	{r4, r5, r6, sl, fp, pc}

00016210 <table_sorted_find_int32@@Base>:
   16210:	push	{r4, r5, r6, sl, fp, lr}
   16214:	add	fp, sp, #16
   16218:	sub	sp, sp, #16
   1621c:	mov	r4, r3
   16220:	mov	r5, r1
   16224:	mov	r6, r0
   16228:	str	r2, [sp, #12]
   1622c:	bl	16e18 <table_get_row_length@@Base>
   16230:	sub	r0, r0, #1
   16234:	mov	r1, #0
   16238:	add	r2, sp, #12
   1623c:	mov	r3, r4
   16240:	str	r1, [sp]
   16244:	str	r0, [sp, #4]
   16248:	mov	r0, r6
   1624c:	mov	r1, r5
   16250:	bl	15f6c <table_sorted_subset_find@@Base>
   16254:	sub	sp, fp, #16
   16258:	pop	{r4, r5, r6, sl, fp, pc}

0001625c <table_sorted_find_uint32@@Base>:
   1625c:	push	{r4, r5, r6, sl, fp, lr}
   16260:	add	fp, sp, #16
   16264:	sub	sp, sp, #16
   16268:	mov	r4, r3
   1626c:	mov	r5, r1
   16270:	mov	r6, r0
   16274:	str	r2, [sp, #12]
   16278:	bl	16e18 <table_get_row_length@@Base>
   1627c:	sub	r0, r0, #1
   16280:	mov	r1, #0
   16284:	add	r2, sp, #12
   16288:	mov	r3, r4
   1628c:	str	r1, [sp]
   16290:	str	r0, [sp, #4]
   16294:	mov	r0, r6
   16298:	mov	r1, r5
   1629c:	bl	15f6c <table_sorted_subset_find@@Base>
   162a0:	sub	sp, fp, #16
   162a4:	pop	{r4, r5, r6, sl, fp, pc}

000162a8 <table_sorted_find_int64@@Base>:
   162a8:	push	{r4, r5, fp, lr}
   162ac:	add	fp, sp, #8
   162b0:	sub	sp, sp, #16
   162b4:	mov	r4, r1
   162b8:	mov	r5, r0
   162bc:	str	r3, [sp, #12]
   162c0:	str	r2, [sp, #8]
   162c4:	bl	16e18 <table_get_row_length@@Base>
   162c8:	ldr	r3, [fp, #8]
   162cc:	sub	r0, r0, #1
   162d0:	mov	r1, #0
   162d4:	add	r2, sp, #8
   162d8:	str	r1, [sp]
   162dc:	str	r0, [sp, #4]
   162e0:	mov	r0, r5
   162e4:	mov	r1, r4
   162e8:	bl	15f6c <table_sorted_subset_find@@Base>
   162ec:	sub	sp, fp, #8
   162f0:	pop	{r4, r5, fp, pc}

000162f4 <table_sorted_find_uint64@@Base>:
   162f4:	push	{r4, r5, fp, lr}
   162f8:	add	fp, sp, #8
   162fc:	sub	sp, sp, #16
   16300:	mov	r4, r1
   16304:	mov	r5, r0
   16308:	str	r3, [sp, #12]
   1630c:	str	r2, [sp, #8]
   16310:	bl	16e18 <table_get_row_length@@Base>
   16314:	ldr	r3, [fp, #8]
   16318:	sub	r0, r0, #1
   1631c:	mov	r1, #0
   16320:	add	r2, sp, #8
   16324:	str	r1, [sp]
   16328:	str	r0, [sp, #4]
   1632c:	mov	r0, r5
   16330:	mov	r1, r4
   16334:	bl	15f6c <table_sorted_subset_find@@Base>
   16338:	sub	sp, fp, #8
   1633c:	pop	{r4, r5, fp, pc}

00016340 <table_sorted_find_short@@Base>:
   16340:	push	{r4, r5, r6, sl, fp, lr}
   16344:	add	fp, sp, #16
   16348:	sub	sp, sp, #16
   1634c:	mov	r4, r3
   16350:	mov	r5, r1
   16354:	mov	r6, r0
   16358:	strh	r2, [sp, #14]
   1635c:	bl	16e18 <table_get_row_length@@Base>
   16360:	sub	r0, r0, #1
   16364:	mov	r1, #0
   16368:	add	r2, sp, #14
   1636c:	mov	r3, r4
   16370:	str	r1, [sp]
   16374:	str	r0, [sp, #4]
   16378:	mov	r0, r6
   1637c:	mov	r1, r5
   16380:	bl	15f6c <table_sorted_subset_find@@Base>
   16384:	sub	sp, fp, #16
   16388:	pop	{r4, r5, r6, sl, fp, pc}

0001638c <table_sorted_find_ushort@@Base>:
   1638c:	push	{r4, r5, r6, sl, fp, lr}
   16390:	add	fp, sp, #16
   16394:	sub	sp, sp, #16
   16398:	mov	r4, r3
   1639c:	mov	r5, r1
   163a0:	mov	r6, r0
   163a4:	strh	r2, [sp, #14]
   163a8:	bl	16e18 <table_get_row_length@@Base>
   163ac:	sub	r0, r0, #1
   163b0:	mov	r1, #0
   163b4:	add	r2, sp, #14
   163b8:	mov	r3, r4
   163bc:	str	r1, [sp]
   163c0:	str	r0, [sp, #4]
   163c4:	mov	r0, r6
   163c8:	mov	r1, r5
   163cc:	bl	15f6c <table_sorted_subset_find@@Base>
   163d0:	sub	sp, fp, #16
   163d4:	pop	{r4, r5, r6, sl, fp, pc}

000163d8 <table_sorted_find_long@@Base>:
   163d8:	push	{r4, r5, r6, sl, fp, lr}
   163dc:	add	fp, sp, #16
   163e0:	sub	sp, sp, #16
   163e4:	mov	r4, r3
   163e8:	mov	r5, r1
   163ec:	mov	r6, r0
   163f0:	str	r2, [sp, #12]
   163f4:	bl	16e18 <table_get_row_length@@Base>
   163f8:	sub	r0, r0, #1
   163fc:	mov	r1, #0
   16400:	add	r2, sp, #12
   16404:	mov	r3, r4
   16408:	str	r1, [sp]
   1640c:	str	r0, [sp, #4]
   16410:	mov	r0, r6
   16414:	mov	r1, r5
   16418:	bl	15f6c <table_sorted_subset_find@@Base>
   1641c:	sub	sp, fp, #16
   16420:	pop	{r4, r5, r6, sl, fp, pc}

00016424 <table_sorted_find_ulong@@Base>:
   16424:	push	{r4, r5, r6, sl, fp, lr}
   16428:	add	fp, sp, #16
   1642c:	sub	sp, sp, #16
   16430:	mov	r4, r3
   16434:	mov	r5, r1
   16438:	mov	r6, r0
   1643c:	str	r2, [sp, #12]
   16440:	bl	16e18 <table_get_row_length@@Base>
   16444:	sub	r0, r0, #1
   16448:	mov	r1, #0
   1644c:	add	r2, sp, #12
   16450:	mov	r3, r4
   16454:	str	r1, [sp]
   16458:	str	r0, [sp, #4]
   1645c:	mov	r0, r6
   16460:	mov	r1, r5
   16464:	bl	15f6c <table_sorted_subset_find@@Base>
   16468:	sub	sp, fp, #16
   1646c:	pop	{r4, r5, r6, sl, fp, pc}

00016470 <table_sorted_find_llong@@Base>:
   16470:	push	{r4, r5, fp, lr}
   16474:	add	fp, sp, #8
   16478:	sub	sp, sp, #16
   1647c:	mov	r4, r1
   16480:	mov	r5, r0
   16484:	str	r3, [sp, #12]
   16488:	str	r2, [sp, #8]
   1648c:	bl	16e18 <table_get_row_length@@Base>
   16490:	ldr	r3, [fp, #8]
   16494:	sub	r0, r0, #1
   16498:	mov	r1, #0
   1649c:	add	r2, sp, #8
   164a0:	str	r1, [sp]
   164a4:	str	r0, [sp, #4]
   164a8:	mov	r0, r5
   164ac:	mov	r1, r4
   164b0:	bl	15f6c <table_sorted_subset_find@@Base>
   164b4:	sub	sp, fp, #8
   164b8:	pop	{r4, r5, fp, pc}

000164bc <table_sorted_find_ullong@@Base>:
   164bc:	push	{r4, r5, fp, lr}
   164c0:	add	fp, sp, #8
   164c4:	sub	sp, sp, #16
   164c8:	mov	r4, r1
   164cc:	mov	r5, r0
   164d0:	str	r3, [sp, #12]
   164d4:	str	r2, [sp, #8]
   164d8:	bl	16e18 <table_get_row_length@@Base>
   164dc:	ldr	r3, [fp, #8]
   164e0:	sub	r0, r0, #1
   164e4:	mov	r1, #0
   164e8:	add	r2, sp, #8
   164ec:	str	r1, [sp]
   164f0:	str	r0, [sp, #4]
   164f4:	mov	r0, r5
   164f8:	mov	r1, r4
   164fc:	bl	15f6c <table_sorted_subset_find@@Base>
   16500:	sub	sp, fp, #8
   16504:	pop	{r4, r5, fp, pc}

00016508 <table_sorted_find_float@@Base>:
   16508:	push	{r4, r5, r6, sl, fp, lr}
   1650c:	add	fp, sp, #16
   16510:	sub	sp, sp, #16
   16514:	mov	r4, r2
   16518:	mov	r5, r1
   1651c:	mov	r6, r0
   16520:	vstr	s0, [sp, #12]
   16524:	bl	16e18 <table_get_row_length@@Base>
   16528:	sub	r0, r0, #1
   1652c:	mov	r1, #0
   16530:	add	r2, sp, #12
   16534:	mov	r3, r4
   16538:	str	r1, [sp]
   1653c:	str	r0, [sp, #4]
   16540:	mov	r0, r6
   16544:	mov	r1, r5
   16548:	bl	15f6c <table_sorted_subset_find@@Base>
   1654c:	sub	sp, fp, #16
   16550:	pop	{r4, r5, r6, sl, fp, pc}

00016554 <table_sorted_find_double@@Base>:
   16554:	push	{r4, r5, r6, sl, fp, lr}
   16558:	add	fp, sp, #16
   1655c:	sub	sp, sp, #16
   16560:	mov	r4, r2
   16564:	mov	r5, r1
   16568:	mov	r6, r0
   1656c:	vstr	d0, [sp, #8]
   16570:	bl	16e18 <table_get_row_length@@Base>
   16574:	sub	r0, r0, #1
   16578:	mov	r1, #0
   1657c:	add	r2, sp, #8
   16580:	mov	r3, r4
   16584:	str	r1, [sp]
   16588:	str	r0, [sp, #4]
   1658c:	mov	r0, r6
   16590:	mov	r1, r5
   16594:	bl	15f6c <table_sorted_subset_find@@Base>
   16598:	sub	sp, fp, #16
   1659c:	pop	{r4, r5, r6, sl, fp, pc}

000165a0 <table_sorted_find_ldouble@@Base>:
   165a0:	push	{r4, r5, r6, sl, fp, lr}
   165a4:	add	fp, sp, #16
   165a8:	sub	sp, sp, #16
   165ac:	mov	r4, r2
   165b0:	mov	r5, r1
   165b4:	mov	r6, r0
   165b8:	vstr	d0, [sp, #8]
   165bc:	bl	16e18 <table_get_row_length@@Base>
   165c0:	sub	r0, r0, #1
   165c4:	mov	r1, #0
   165c8:	add	r2, sp, #8
   165cc:	mov	r3, r4
   165d0:	str	r1, [sp]
   165d4:	str	r0, [sp, #4]
   165d8:	mov	r0, r6
   165dc:	mov	r1, r5
   165e0:	bl	15f6c <table_sorted_subset_find@@Base>
   165e4:	sub	sp, fp, #16
   165e8:	pop	{r4, r5, r6, sl, fp, pc}

000165ec <table_sorted_find_char@@Base>:
   165ec:	push	{r4, r5, r6, sl, fp, lr}
   165f0:	add	fp, sp, #16
   165f4:	sub	sp, sp, #16
   165f8:	mov	r4, r3
   165fc:	mov	r5, r1
   16600:	mov	r6, r0
   16604:	strb	r2, [sp, #15]
   16608:	bl	16e18 <table_get_row_length@@Base>
   1660c:	sub	r0, r0, #1
   16610:	mov	r1, #0
   16614:	add	r2, sp, #15
   16618:	mov	r3, r4
   1661c:	str	r1, [sp]
   16620:	str	r0, [sp, #4]
   16624:	mov	r0, r6
   16628:	mov	r1, r5
   1662c:	bl	15f6c <table_sorted_subset_find@@Base>
   16630:	sub	sp, fp, #16
   16634:	pop	{r4, r5, r6, sl, fp, pc}

00016638 <table_sorted_find_uchar@@Base>:
   16638:	push	{r4, r5, r6, sl, fp, lr}
   1663c:	add	fp, sp, #16
   16640:	sub	sp, sp, #16
   16644:	mov	r4, r3
   16648:	mov	r5, r1
   1664c:	mov	r6, r0
   16650:	strb	r2, [sp, #15]
   16654:	bl	16e18 <table_get_row_length@@Base>
   16658:	sub	r0, r0, #1
   1665c:	mov	r1, #0
   16660:	add	r2, sp, #15
   16664:	mov	r3, r4
   16668:	str	r1, [sp]
   1666c:	str	r0, [sp, #4]
   16670:	mov	r0, r6
   16674:	mov	r1, r5
   16678:	bl	15f6c <table_sorted_subset_find@@Base>
   1667c:	sub	sp, fp, #16
   16680:	pop	{r4, r5, r6, sl, fp, pc}

00016684 <table_sorted_find_string@@Base>:
   16684:	push	{r4, r5, r6, r7, fp, lr}
   16688:	add	fp, sp, #16
   1668c:	sub	sp, sp, #8
   16690:	mov	r4, r3
   16694:	mov	r5, r2
   16698:	mov	r6, r1
   1669c:	mov	r7, r0
   166a0:	bl	16e18 <table_get_row_length@@Base>
   166a4:	sub	r0, r0, #1
   166a8:	mov	r1, #0
   166ac:	mov	r2, r5
   166b0:	mov	r3, r4
   166b4:	str	r1, [sp]
   166b8:	str	r0, [sp, #4]
   166bc:	mov	r0, r7
   166c0:	mov	r1, r6
   166c4:	bl	15f6c <table_sorted_subset_find@@Base>
   166c8:	sub	sp, fp, #16
   166cc:	pop	{r4, r5, r6, r7, fp, pc}

000166d0 <table_sorted_find_ptr@@Base>:
   166d0:	push	{r4, r5, r6, r7, fp, lr}
   166d4:	add	fp, sp, #16
   166d8:	sub	sp, sp, #8
   166dc:	mov	r4, r3
   166e0:	mov	r5, r2
   166e4:	mov	r6, r1
   166e8:	mov	r7, r0
   166ec:	bl	16e18 <table_get_row_length@@Base>
   166f0:	sub	r0, r0, #1
   166f4:	mov	r1, #0
   166f8:	mov	r2, r5
   166fc:	mov	r3, r4
   16700:	str	r1, [sp]
   16704:	str	r0, [sp, #4]
   16708:	mov	r0, r7
   1670c:	mov	r1, r6
   16710:	bl	15f6c <table_sorted_subset_find@@Base>
   16714:	sub	sp, fp, #16
   16718:	pop	{r4, r5, r6, r7, fp, pc}

0001671c <table_sorted_subset_find_int@@Base>:
   1671c:	push	{fp, lr}
   16720:	mov	fp, sp
   16724:	sub	sp, sp, #16
   16728:	str	r2, [fp, #-4]
   1672c:	ldr	r2, [fp, #12]
   16730:	str	r2, [sp, #4]
   16734:	ldr	r2, [fp, #8]
   16738:	str	r2, [sp]
   1673c:	sub	r2, fp, #4
   16740:	bl	15f6c <table_sorted_subset_find@@Base>
   16744:	mov	sp, fp
   16748:	pop	{fp, pc}

0001674c <table_sorted_subset_find_uint@@Base>:
   1674c:	push	{fp, lr}
   16750:	mov	fp, sp
   16754:	sub	sp, sp, #16
   16758:	str	r2, [fp, #-4]
   1675c:	ldr	r2, [fp, #12]
   16760:	str	r2, [sp, #4]
   16764:	ldr	r2, [fp, #8]
   16768:	str	r2, [sp]
   1676c:	sub	r2, fp, #4
   16770:	bl	15f6c <table_sorted_subset_find@@Base>
   16774:	mov	sp, fp
   16778:	pop	{fp, pc}

0001677c <table_sorted_subset_find_int8@@Base>:
   1677c:	push	{fp, lr}
   16780:	mov	fp, sp
   16784:	sub	sp, sp, #16
   16788:	strb	r2, [fp, #-1]
   1678c:	ldr	r2, [fp, #12]
   16790:	str	r2, [sp, #4]
   16794:	ldr	r2, [fp, #8]
   16798:	str	r2, [sp]
   1679c:	sub	r2, fp, #1
   167a0:	bl	15f6c <table_sorted_subset_find@@Base>
   167a4:	mov	sp, fp
   167a8:	pop	{fp, pc}

000167ac <table_sorted_subset_find_uint8@@Base>:
   167ac:	push	{fp, lr}
   167b0:	mov	fp, sp
   167b4:	sub	sp, sp, #16
   167b8:	strb	r2, [fp, #-1]
   167bc:	ldr	r2, [fp, #12]
   167c0:	str	r2, [sp, #4]
   167c4:	ldr	r2, [fp, #8]
   167c8:	str	r2, [sp]
   167cc:	sub	r2, fp, #1
   167d0:	bl	15f6c <table_sorted_subset_find@@Base>
   167d4:	mov	sp, fp
   167d8:	pop	{fp, pc}

000167dc <table_sorted_subset_find_int16@@Base>:
   167dc:	push	{fp, lr}
   167e0:	mov	fp, sp
   167e4:	sub	sp, sp, #16
   167e8:	strh	r2, [fp, #-2]
   167ec:	ldr	r2, [fp, #12]
   167f0:	str	r2, [sp, #4]
   167f4:	ldr	r2, [fp, #8]
   167f8:	str	r2, [sp]
   167fc:	sub	r2, fp, #2
   16800:	bl	15f6c <table_sorted_subset_find@@Base>
   16804:	mov	sp, fp
   16808:	pop	{fp, pc}

0001680c <table_sorted_subset_find_uint16@@Base>:
   1680c:	push	{fp, lr}
   16810:	mov	fp, sp
   16814:	sub	sp, sp, #16
   16818:	strh	r2, [fp, #-2]
   1681c:	ldr	r2, [fp, #12]
   16820:	str	r2, [sp, #4]
   16824:	ldr	r2, [fp, #8]
   16828:	str	r2, [sp]
   1682c:	sub	r2, fp, #2
   16830:	bl	15f6c <table_sorted_subset_find@@Base>
   16834:	mov	sp, fp
   16838:	pop	{fp, pc}

0001683c <table_sorted_subset_find_int32@@Base>:
   1683c:	push	{fp, lr}
   16840:	mov	fp, sp
   16844:	sub	sp, sp, #16
   16848:	str	r2, [fp, #-4]
   1684c:	ldr	r2, [fp, #12]
   16850:	str	r2, [sp, #4]
   16854:	ldr	r2, [fp, #8]
   16858:	str	r2, [sp]
   1685c:	sub	r2, fp, #4
   16860:	bl	15f6c <table_sorted_subset_find@@Base>
   16864:	mov	sp, fp
   16868:	pop	{fp, pc}

0001686c <table_sorted_subset_find_uint32@@Base>:
   1686c:	push	{fp, lr}
   16870:	mov	fp, sp
   16874:	sub	sp, sp, #16
   16878:	str	r2, [fp, #-4]
   1687c:	ldr	r2, [fp, #12]
   16880:	str	r2, [sp, #4]
   16884:	ldr	r2, [fp, #8]
   16888:	str	r2, [sp]
   1688c:	sub	r2, fp, #4
   16890:	bl	15f6c <table_sorted_subset_find@@Base>
   16894:	mov	sp, fp
   16898:	pop	{fp, pc}

0001689c <table_sorted_subset_find_int64@@Base>:
   1689c:	push	{fp, lr}
   168a0:	mov	fp, sp
   168a4:	sub	sp, sp, #16
   168a8:	str	r2, [sp, #8]
   168ac:	ldr	r2, [fp, #16]
   168b0:	str	r3, [sp, #12]
   168b4:	ldr	r3, [fp, #8]
   168b8:	str	r2, [sp, #4]
   168bc:	ldr	r2, [fp, #12]
   168c0:	str	r2, [sp]
   168c4:	add	r2, sp, #8
   168c8:	bl	15f6c <table_sorted_subset_find@@Base>
   168cc:	mov	sp, fp
   168d0:	pop	{fp, pc}

000168d4 <table_sorted_subset_find_uint64@@Base>:
   168d4:	push	{fp, lr}
   168d8:	mov	fp, sp
   168dc:	sub	sp, sp, #16
   168e0:	str	r2, [sp, #8]
   168e4:	ldr	r2, [fp, #16]
   168e8:	str	r3, [sp, #12]
   168ec:	ldr	r3, [fp, #8]
   168f0:	str	r2, [sp, #4]
   168f4:	ldr	r2, [fp, #12]
   168f8:	str	r2, [sp]
   168fc:	add	r2, sp, #8
   16900:	bl	15f6c <table_sorted_subset_find@@Base>
   16904:	mov	sp, fp
   16908:	pop	{fp, pc}

0001690c <table_sorted_subset_find_short@@Base>:
   1690c:	push	{fp, lr}
   16910:	mov	fp, sp
   16914:	sub	sp, sp, #16
   16918:	strh	r2, [fp, #-2]
   1691c:	ldr	r2, [fp, #12]
   16920:	str	r2, [sp, #4]
   16924:	ldr	r2, [fp, #8]
   16928:	str	r2, [sp]
   1692c:	sub	r2, fp, #2
   16930:	bl	15f6c <table_sorted_subset_find@@Base>
   16934:	mov	sp, fp
   16938:	pop	{fp, pc}

0001693c <table_sorted_subset_find_ushort@@Base>:
   1693c:	push	{fp, lr}
   16940:	mov	fp, sp
   16944:	sub	sp, sp, #16
   16948:	strh	r2, [fp, #-2]
   1694c:	ldr	r2, [fp, #12]
   16950:	str	r2, [sp, #4]
   16954:	ldr	r2, [fp, #8]
   16958:	str	r2, [sp]
   1695c:	sub	r2, fp, #2
   16960:	bl	15f6c <table_sorted_subset_find@@Base>
   16964:	mov	sp, fp
   16968:	pop	{fp, pc}

0001696c <table_sorted_subset_find_long@@Base>:
   1696c:	push	{fp, lr}
   16970:	mov	fp, sp
   16974:	sub	sp, sp, #16
   16978:	str	r2, [fp, #-4]
   1697c:	ldr	r2, [fp, #12]
   16980:	str	r2, [sp, #4]
   16984:	ldr	r2, [fp, #8]
   16988:	str	r2, [sp]
   1698c:	sub	r2, fp, #4
   16990:	bl	15f6c <table_sorted_subset_find@@Base>
   16994:	mov	sp, fp
   16998:	pop	{fp, pc}

0001699c <table_sorted_subset_find_ulong@@Base>:
   1699c:	push	{fp, lr}
   169a0:	mov	fp, sp
   169a4:	sub	sp, sp, #16
   169a8:	str	r2, [fp, #-4]
   169ac:	ldr	r2, [fp, #12]
   169b0:	str	r2, [sp, #4]
   169b4:	ldr	r2, [fp, #8]
   169b8:	str	r2, [sp]
   169bc:	sub	r2, fp, #4
   169c0:	bl	15f6c <table_sorted_subset_find@@Base>
   169c4:	mov	sp, fp
   169c8:	pop	{fp, pc}

000169cc <table_sorted_subset_find_llong@@Base>:
   169cc:	push	{fp, lr}
   169d0:	mov	fp, sp
   169d4:	sub	sp, sp, #16
   169d8:	str	r2, [sp, #8]
   169dc:	ldr	r2, [fp, #16]
   169e0:	str	r3, [sp, #12]
   169e4:	ldr	r3, [fp, #8]
   169e8:	str	r2, [sp, #4]
   169ec:	ldr	r2, [fp, #12]
   169f0:	str	r2, [sp]
   169f4:	add	r2, sp, #8
   169f8:	bl	15f6c <table_sorted_subset_find@@Base>
   169fc:	mov	sp, fp
   16a00:	pop	{fp, pc}

00016a04 <table_sorted_subset_find_ullong@@Base>:
   16a04:	push	{fp, lr}
   16a08:	mov	fp, sp
   16a0c:	sub	sp, sp, #16
   16a10:	str	r2, [sp, #8]
   16a14:	ldr	r2, [fp, #16]
   16a18:	str	r3, [sp, #12]
   16a1c:	ldr	r3, [fp, #8]
   16a20:	str	r2, [sp, #4]
   16a24:	ldr	r2, [fp, #12]
   16a28:	str	r2, [sp]
   16a2c:	add	r2, sp, #8
   16a30:	bl	15f6c <table_sorted_subset_find@@Base>
   16a34:	mov	sp, fp
   16a38:	pop	{fp, pc}

00016a3c <table_sorted_subset_find_float@@Base>:
   16a3c:	push	{fp, lr}
   16a40:	mov	fp, sp
   16a44:	sub	sp, sp, #16
   16a48:	mov	ip, r2
   16a4c:	ldr	r2, [fp, #8]
   16a50:	str	r3, [sp]
   16a54:	vstr	s0, [fp, #-4]
   16a58:	mov	r3, ip
   16a5c:	str	r2, [sp, #4]
   16a60:	sub	r2, fp, #4
   16a64:	bl	15f6c <table_sorted_subset_find@@Base>
   16a68:	mov	sp, fp
   16a6c:	pop	{fp, pc}

00016a70 <table_sorted_subset_find_double@@Base>:
   16a70:	push	{fp, lr}
   16a74:	mov	fp, sp
   16a78:	sub	sp, sp, #16
   16a7c:	mov	ip, r2
   16a80:	ldr	r2, [fp, #8]
   16a84:	str	r3, [sp]
   16a88:	vstr	d0, [sp, #8]
   16a8c:	mov	r3, ip
   16a90:	str	r2, [sp, #4]
   16a94:	add	r2, sp, #8
   16a98:	bl	15f6c <table_sorted_subset_find@@Base>
   16a9c:	mov	sp, fp
   16aa0:	pop	{fp, pc}

00016aa4 <table_sorted_subset_find_ldouble@@Base>:
   16aa4:	push	{fp, lr}
   16aa8:	mov	fp, sp
   16aac:	sub	sp, sp, #16
   16ab0:	mov	ip, r2
   16ab4:	ldr	r2, [fp, #8]
   16ab8:	str	r3, [sp]
   16abc:	vstr	d0, [sp, #8]
   16ac0:	mov	r3, ip
   16ac4:	str	r2, [sp, #4]
   16ac8:	add	r2, sp, #8
   16acc:	bl	15f6c <table_sorted_subset_find@@Base>
   16ad0:	mov	sp, fp
   16ad4:	pop	{fp, pc}

00016ad8 <table_sorted_subset_find_char@@Base>:
   16ad8:	push	{fp, lr}
   16adc:	mov	fp, sp
   16ae0:	sub	sp, sp, #16
   16ae4:	strb	r2, [fp, #-1]
   16ae8:	ldr	r2, [fp, #12]
   16aec:	str	r2, [sp, #4]
   16af0:	ldr	r2, [fp, #8]
   16af4:	str	r2, [sp]
   16af8:	sub	r2, fp, #1
   16afc:	bl	15f6c <table_sorted_subset_find@@Base>
   16b00:	mov	sp, fp
   16b04:	pop	{fp, pc}

00016b08 <table_sorted_subset_find_uchar@@Base>:
   16b08:	push	{fp, lr}
   16b0c:	mov	fp, sp
   16b10:	sub	sp, sp, #16
   16b14:	strb	r2, [fp, #-1]
   16b18:	ldr	r2, [fp, #12]
   16b1c:	str	r2, [sp, #4]
   16b20:	ldr	r2, [fp, #8]
   16b24:	str	r2, [sp]
   16b28:	sub	r2, fp, #1
   16b2c:	bl	15f6c <table_sorted_subset_find@@Base>
   16b30:	mov	sp, fp
   16b34:	pop	{fp, pc}

00016b38 <table_sorted_subset_find_string@@Base>:
   16b38:	b	15f6c <table_sorted_subset_find@@Base>

00016b3c <table_sorted_subset_find_ptr@@Base>:
   16b3c:	b	15f6c <table_sorted_subset_find@@Base>

00016b40 <table_get@@Base>:
   16b40:	push	{fp, lr}
   16b44:	mov	fp, sp
   16b48:	bl	17f28 <table_get_cell_ptr@@Base>
   16b4c:	ldr	r0, [r0]
   16b50:	pop	{fp, pc}

00016b54 <table_get_bool@@Base>:
   16b54:	push	{fp, lr}
   16b58:	mov	fp, sp
   16b5c:	bl	17f28 <table_get_cell_ptr@@Base>
   16b60:	ldr	r0, [r0]
   16b64:	ldrb	r0, [r0]
   16b68:	pop	{fp, pc}

00016b6c <table_get_int@@Base>:
   16b6c:	push	{fp, lr}
   16b70:	mov	fp, sp
   16b74:	bl	17f28 <table_get_cell_ptr@@Base>
   16b78:	ldr	r0, [r0]
   16b7c:	ldr	r0, [r0]
   16b80:	pop	{fp, pc}

00016b84 <table_get_uint@@Base>:
   16b84:	push	{fp, lr}
   16b88:	mov	fp, sp
   16b8c:	bl	17f28 <table_get_cell_ptr@@Base>
   16b90:	ldr	r0, [r0]
   16b94:	ldr	r0, [r0]
   16b98:	pop	{fp, pc}

00016b9c <table_get_int8@@Base>:
   16b9c:	push	{fp, lr}
   16ba0:	mov	fp, sp
   16ba4:	bl	17f28 <table_get_cell_ptr@@Base>
   16ba8:	ldr	r0, [r0]
   16bac:	ldrsb	r0, [r0]
   16bb0:	pop	{fp, pc}

00016bb4 <table_get_uint8@@Base>:
   16bb4:	push	{fp, lr}
   16bb8:	mov	fp, sp
   16bbc:	bl	17f28 <table_get_cell_ptr@@Base>
   16bc0:	ldr	r0, [r0]
   16bc4:	ldrb	r0, [r0]
   16bc8:	pop	{fp, pc}

00016bcc <table_get_int16@@Base>:
   16bcc:	push	{fp, lr}
   16bd0:	mov	fp, sp
   16bd4:	bl	17f28 <table_get_cell_ptr@@Base>
   16bd8:	ldr	r0, [r0]
   16bdc:	ldrsh	r0, [r0]
   16be0:	pop	{fp, pc}

00016be4 <table_get_uint16@@Base>:
   16be4:	push	{fp, lr}
   16be8:	mov	fp, sp
   16bec:	bl	17f28 <table_get_cell_ptr@@Base>
   16bf0:	ldr	r0, [r0]
   16bf4:	ldrh	r0, [r0]
   16bf8:	pop	{fp, pc}

00016bfc <table_get_int32@@Base>:
   16bfc:	push	{fp, lr}
   16c00:	mov	fp, sp
   16c04:	bl	17f28 <table_get_cell_ptr@@Base>
   16c08:	ldr	r0, [r0]
   16c0c:	ldr	r0, [r0]
   16c10:	pop	{fp, pc}

00016c14 <table_get_uint32@@Base>:
   16c14:	push	{fp, lr}
   16c18:	mov	fp, sp
   16c1c:	bl	17f28 <table_get_cell_ptr@@Base>
   16c20:	ldr	r0, [r0]
   16c24:	ldr	r0, [r0]
   16c28:	pop	{fp, pc}

00016c2c <table_get_int64@@Base>:
   16c2c:	push	{fp, lr}
   16c30:	mov	fp, sp
   16c34:	bl	17f28 <table_get_cell_ptr@@Base>
   16c38:	ldr	r0, [r0]
   16c3c:	ldrd	r0, [r0]
   16c40:	pop	{fp, pc}

00016c44 <table_get_uint64@@Base>:
   16c44:	push	{fp, lr}
   16c48:	mov	fp, sp
   16c4c:	bl	17f28 <table_get_cell_ptr@@Base>
   16c50:	ldr	r0, [r0]
   16c54:	ldrd	r0, [r0]
   16c58:	pop	{fp, pc}

00016c5c <table_get_short@@Base>:
   16c5c:	push	{fp, lr}
   16c60:	mov	fp, sp
   16c64:	bl	17f28 <table_get_cell_ptr@@Base>
   16c68:	ldr	r0, [r0]
   16c6c:	ldrsh	r0, [r0]
   16c70:	pop	{fp, pc}

00016c74 <table_get_ushort@@Base>:
   16c74:	push	{fp, lr}
   16c78:	mov	fp, sp
   16c7c:	bl	17f28 <table_get_cell_ptr@@Base>
   16c80:	ldr	r0, [r0]
   16c84:	ldrh	r0, [r0]
   16c88:	pop	{fp, pc}

00016c8c <table_get_long@@Base>:
   16c8c:	push	{fp, lr}
   16c90:	mov	fp, sp
   16c94:	bl	17f28 <table_get_cell_ptr@@Base>
   16c98:	ldr	r0, [r0]
   16c9c:	ldr	r0, [r0]
   16ca0:	pop	{fp, pc}

00016ca4 <table_get_ulong@@Base>:
   16ca4:	push	{fp, lr}
   16ca8:	mov	fp, sp
   16cac:	bl	17f28 <table_get_cell_ptr@@Base>
   16cb0:	ldr	r0, [r0]
   16cb4:	ldr	r0, [r0]
   16cb8:	pop	{fp, pc}

00016cbc <table_get_llong@@Base>:
   16cbc:	push	{fp, lr}
   16cc0:	mov	fp, sp
   16cc4:	bl	17f28 <table_get_cell_ptr@@Base>
   16cc8:	ldr	r0, [r0]
   16ccc:	ldrd	r0, [r0]
   16cd0:	pop	{fp, pc}

00016cd4 <table_get_ullong@@Base>:
   16cd4:	push	{fp, lr}
   16cd8:	mov	fp, sp
   16cdc:	bl	17f28 <table_get_cell_ptr@@Base>
   16ce0:	ldr	r0, [r0]
   16ce4:	ldrd	r0, [r0]
   16ce8:	pop	{fp, pc}

00016cec <table_get_float@@Base>:
   16cec:	push	{fp, lr}
   16cf0:	mov	fp, sp
   16cf4:	bl	17f28 <table_get_cell_ptr@@Base>
   16cf8:	ldr	r0, [r0]
   16cfc:	vldr	s0, [r0]
   16d00:	pop	{fp, pc}

00016d04 <table_get_double@@Base>:
   16d04:	push	{fp, lr}
   16d08:	mov	fp, sp
   16d0c:	bl	17f28 <table_get_cell_ptr@@Base>
   16d10:	ldr	r0, [r0]
   16d14:	vldr	d0, [r0]
   16d18:	pop	{fp, pc}

00016d1c <table_get_ldouble@@Base>:
   16d1c:	push	{fp, lr}
   16d20:	mov	fp, sp
   16d24:	bl	17f28 <table_get_cell_ptr@@Base>
   16d28:	ldr	r0, [r0]
   16d2c:	vldr	d0, [r0]
   16d30:	pop	{fp, pc}

00016d34 <table_get_char@@Base>:
   16d34:	push	{fp, lr}
   16d38:	mov	fp, sp
   16d3c:	bl	17f28 <table_get_cell_ptr@@Base>
   16d40:	ldr	r0, [r0]
   16d44:	ldrb	r0, [r0]
   16d48:	pop	{fp, pc}

00016d4c <table_get_uchar@@Base>:
   16d4c:	push	{fp, lr}
   16d50:	mov	fp, sp
   16d54:	bl	17f28 <table_get_cell_ptr@@Base>
   16d58:	ldr	r0, [r0]
   16d5c:	ldrb	r0, [r0]
   16d60:	pop	{fp, pc}

00016d64 <table_get_string@@Base>:
   16d64:	push	{fp, lr}
   16d68:	mov	fp, sp
   16d6c:	bl	17f28 <table_get_cell_ptr@@Base>
   16d70:	ldr	r0, [r0]
   16d74:	pop	{fp, pc}

00016d78 <table_get_ptr@@Base>:
   16d78:	push	{fp, lr}
   16d7c:	mov	fp, sp
   16d80:	bl	17f28 <table_get_cell_ptr@@Base>
   16d84:	ldr	r0, [r0]
   16d88:	pop	{fp, pc}

00016d8c <table_row_init@@Base>:
   16d8c:	push	{r4, r5, fp, lr}
   16d90:	add	fp, sp, #8
   16d94:	mov	r4, r1
   16d98:	ldr	r1, [r0, #12]
   16d9c:	ldr	r5, [r0, #16]
   16da0:	lsl	r0, r1, #2
   16da4:	bl	12fb4 <malloc@plt>
   16da8:	str	r0, [r5, r4, lsl #2]
   16dac:	pop	{r4, r5, fp, pc}

00016db0 <table_get_row_ptr@@Base>:
   16db0:	ldr	r0, [r0, #16]
   16db4:	add	r0, r0, r1, lsl #2
   16db8:	bx	lr

00016dbc <table_row_destroy@@Base>:
   16dbc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16dc0:	add	fp, sp, #24
   16dc4:	mov	r4, r1
   16dc8:	mov	r5, r0
   16dcc:	bl	13d58 <table_get_column_length@@Base>
   16dd0:	ldr	r8, [r5, #16]
   16dd4:	cmp	r0, #1
   16dd8:	blt	16e00 <table_row_destroy@@Base+0x44>
   16ddc:	mov	r6, r0
   16de0:	mov	r7, #0
   16de4:	mov	r0, r5
   16de8:	mov	r1, r4
   16dec:	mov	r2, r7
   16df0:	bl	17f44 <table_cell_destroy@@Base>
   16df4:	add	r7, r7, #1
   16df8:	cmp	r6, r7
   16dfc:	bne	16de4 <table_row_destroy@@Base+0x28>
   16e00:	ldr	r0, [r8, r4, lsl #2]
   16e04:	cmp	r0, #0
   16e08:	beq	16e14 <table_row_destroy@@Base+0x58>
   16e0c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   16e10:	b	12f90 <free@plt>
   16e14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016e18 <table_get_row_length@@Base>:
   16e18:	ldr	r0, [r0, #20]
   16e1c:	bx	lr

00016e20 <table_add_row@@Base>:
   16e20:	push	{r4, r5, r6, r7, fp, lr}
   16e24:	add	fp, sp, #16
   16e28:	ldr	r5, [r0, #20]
   16e2c:	ldr	r1, [r0, #24]
   16e30:	mov	r4, r0
   16e34:	udiv	r0, r5, r1
   16e38:	mls	r0, r0, r1, r5
   16e3c:	cmp	r0, #0
   16e40:	bne	16e64 <table_add_row@@Base+0x44>
   16e44:	ldr	r2, [r4, #28]
   16e48:	ldr	r0, [r4, #16]
   16e4c:	add	r1, r2, r1
   16e50:	str	r1, [r4, #28]
   16e54:	lsl	r1, r1, #2
   16e58:	bl	12f9c <realloc@plt>
   16e5c:	str	r0, [r4, #16]
   16e60:	ldr	r5, [r4, #20]
   16e64:	mov	r0, r4
   16e68:	bl	13d58 <table_get_column_length@@Base>
   16e6c:	mov	r6, r0
   16e70:	ldr	r0, [r4, #12]
   16e74:	ldr	r7, [r4, #16]
   16e78:	lsl	r0, r0, #2
   16e7c:	bl	12fb4 <malloc@plt>
   16e80:	cmp	r6, #1
   16e84:	str	r0, [r7, r5, lsl #2]
   16e88:	blt	16eac <table_add_row@@Base+0x8c>
   16e8c:	mov	r7, #0
   16e90:	mov	r0, r4
   16e94:	mov	r1, r5
   16e98:	mov	r2, r7
   16e9c:	bl	17f08 <table_cell_init@@Base>
   16ea0:	add	r7, r7, #1
   16ea4:	cmp	r6, r7
   16ea8:	bne	16e90 <table_add_row@@Base+0x70>
   16eac:	ldr	r1, [r4, #20]
   16eb0:	mov	r0, r4
   16eb4:	mvn	r2, #0
   16eb8:	mov	r3, #2
   16ebc:	bl	13c5c <table_notify@@Base>
   16ec0:	ldr	r0, [r4, #20]
   16ec4:	add	r1, r0, #1
   16ec8:	str	r1, [r4, #20]
   16ecc:	pop	{r4, r5, r6, r7, fp, pc}

00016ed0 <table_remove_row@@Base>:
   16ed0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16ed4:	add	fp, sp, #24
   16ed8:	ldr	r8, [r0, #20]
   16edc:	mov	r4, r1
   16ee0:	mov	r5, r0
   16ee4:	bl	13d58 <table_get_column_length@@Base>
   16ee8:	cmp	r0, #1
   16eec:	blt	16f40 <table_remove_row@@Base+0x70>
   16ef0:	mov	r6, r0
   16ef4:	mov	r7, #0
   16ef8:	b	16f08 <table_remove_row@@Base+0x38>
   16efc:	add	r7, r7, #1
   16f00:	cmp	r6, r7
   16f04:	beq	16f40 <table_remove_row@@Base+0x70>
   16f08:	mov	r0, r5
   16f0c:	mov	r1, r7
   16f10:	bl	13dd0 <table_get_column_data_type@@Base>
   16f14:	cmp	r0, #23
   16f18:	beq	16efc <table_remove_row@@Base+0x2c>
   16f1c:	mov	r0, r5
   16f20:	mov	r1, r4
   16f24:	mov	r2, r7
   16f28:	bl	17f28 <table_get_cell_ptr@@Base>
   16f2c:	ldr	r0, [r0]
   16f30:	cmp	r0, #0
   16f34:	beq	16efc <table_remove_row@@Base+0x2c>
   16f38:	bl	12f90 <free@plt>
   16f3c:	b	16efc <table_remove_row@@Base+0x2c>
   16f40:	ldr	r0, [r5, #16]
   16f44:	ldr	r0, [r0, r4, lsl #2]
   16f48:	cmp	r0, #0
   16f4c:	beq	16f54 <table_remove_row@@Base+0x84>
   16f50:	bl	12f90 <free@plt>
   16f54:	sub	r0, r8, #1
   16f58:	cmp	r0, r4
   16f5c:	ble	16fcc <table_remove_row@@Base+0xfc>
   16f60:	mvn	r0, r4
   16f64:	add	r1, r8, r0
   16f68:	sub	r0, r8, #2
   16f6c:	tst	r1, #1
   16f70:	mov	r1, r4
   16f74:	beq	16f8c <table_remove_row@@Base+0xbc>
   16f78:	ldr	r1, [r5, #16]
   16f7c:	add	r2, r1, r4, lsl #2
   16f80:	ldr	r2, [r2, #4]
   16f84:	str	r2, [r1, r4, lsl #2]
   16f88:	add	r1, r4, #1
   16f8c:	cmp	r0, r4
   16f90:	beq	16fcc <table_remove_row@@Base+0xfc>
   16f94:	mvn	r0, r1
   16f98:	lsl	r1, r1, #2
   16f9c:	add	r0, r0, r8
   16fa0:	ldr	r2, [r5, #16]
   16fa4:	subs	r0, r0, #2
   16fa8:	add	r3, r2, r1
   16fac:	ldr	r3, [r3, #4]
   16fb0:	str	r3, [r2, r1]
   16fb4:	ldr	r2, [r5, #16]
   16fb8:	add	r2, r2, r1
   16fbc:	add	r1, r1, #8
   16fc0:	ldr	r3, [r2, #8]
   16fc4:	str	r3, [r2, #4]
   16fc8:	bne	16fa0 <table_remove_row@@Base+0xd0>
   16fcc:	ldr	r0, [r5, #20]
   16fd0:	ldr	r1, [r5, #24]
   16fd4:	sub	r0, r0, #1
   16fd8:	udiv	r2, r0, r1
   16fdc:	str	r0, [r5, #20]
   16fe0:	mls	r0, r2, r1, r0
   16fe4:	cmp	r0, #0
   16fe8:	bne	17008 <table_remove_row@@Base+0x138>
   16fec:	ldr	r2, [r5, #28]
   16ff0:	ldr	r0, [r5, #16]
   16ff4:	sub	r1, r2, r1
   16ff8:	str	r1, [r5, #28]
   16ffc:	lsl	r1, r1, #2
   17000:	bl	12f9c <realloc@plt>
   17004:	str	r0, [r5, #16]
   17008:	mov	r0, r5
   1700c:	mov	r1, r4
   17010:	mvn	r2, #0
   17014:	mov	r3, #4
   17018:	bl	13c5c <table_notify@@Base>
   1701c:	mov	r0, #0
   17020:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017024 <table_set_row_ptr@@Base>:
   17024:	ldr	r2, [r2]
   17028:	ldr	r0, [r0, #16]
   1702c:	str	r2, [r0, r1, lsl #2]
   17030:	bx	lr

00017034 <table_set@@Base>:
   17034:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17038:	add	fp, sp, #24
   1703c:	mov	r8, r3
   17040:	mov	r4, r2
   17044:	mov	r9, r1
   17048:	mov	r6, r0
   1704c:	bl	17f28 <table_get_cell_ptr@@Base>
   17050:	mov	r5, r0
   17054:	mov	r0, r6
   17058:	mov	r1, r4
   1705c:	bl	13d30 <table_get_col_ptr@@Base>
   17060:	ldr	r1, [fp, #8]
   17064:	mvn	r7, #0
   17068:	cmp	r1, #23
   1706c:	bhi	17334 <table_set@@Base+0x300>
   17070:	add	r2, pc, #4
   17074:	ldr	r1, [r2, r1, lsl #2]
   17078:	add	pc, r2, r1
   1707c:	andeq	r0, r0, r0, rrx
   17080:	andeq	r0, r0, r0, ror r0
   17084:	andeq	r0, r0, r0, lsl #1
   17088:	muleq	r0, r0, r0
   1708c:	andeq	r0, r0, r0, lsr #1
   17090:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   17094:	andeq	r0, r0, r0, asr #1
   17098:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1709c:	andeq	r0, r0, r0, ror #1
   170a0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   170a4:	andeq	r0, r0, r0, lsl #2
   170a8:	andeq	r0, r0, r0, lsl r1
   170ac:	andeq	r0, r0, r8, asr #2
   170b0:	andeq	r0, r0, r8, asr r1
   170b4:	andeq	r0, r0, r8, ror #2
   170b8:	andeq	r0, r0, r8, ror r1
   170bc:	andeq	r0, r0, r8, lsl #3
   170c0:	andeq	r0, r0, r0, asr #3
   170c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   170c8:	andeq	r0, r0, r0, lsl r2
   170cc:	andeq	r0, r0, r0, lsr #4
   170d0:	andeq	r0, r0, r0, lsr r2
   170d4:	andeq	r0, r0, ip, ror #4
   170d8:	andeq	r0, r0, r0, asr #5
   170dc:	ldr	r0, [r0, #4]
   170e0:	cmp	r0, #0
   170e4:	bne	17334 <table_set@@Base+0x300>
   170e8:	b	17210 <table_set@@Base+0x1dc>
   170ec:	ldr	r0, [r0, #4]
   170f0:	cmp	r0, #1
   170f4:	beq	17210 <table_set@@Base+0x1dc>
   170f8:	b	17334 <table_set@@Base+0x300>
   170fc:	ldr	r0, [r0, #4]
   17100:	cmp	r0, #2
   17104:	beq	172f4 <table_set@@Base+0x2c0>
   17108:	b	17334 <table_set@@Base+0x300>
   1710c:	ldr	r0, [r0, #4]
   17110:	cmp	r0, #3
   17114:	beq	172f4 <table_set@@Base+0x2c0>
   17118:	b	17334 <table_set@@Base+0x300>
   1711c:	ldr	r0, [r0, #4]
   17120:	cmp	r0, #4
   17124:	beq	17198 <table_set@@Base+0x164>
   17128:	b	17334 <table_set@@Base+0x300>
   1712c:	ldr	r0, [r0, #4]
   17130:	cmp	r0, #5
   17134:	beq	17198 <table_set@@Base+0x164>
   17138:	b	17334 <table_set@@Base+0x300>
   1713c:	ldr	r0, [r0, #4]
   17140:	cmp	r0, #6
   17144:	beq	17210 <table_set@@Base+0x1dc>
   17148:	b	17334 <table_set@@Base+0x300>
   1714c:	ldr	r0, [r0, #4]
   17150:	cmp	r0, #7
   17154:	beq	17210 <table_set@@Base+0x1dc>
   17158:	b	17334 <table_set@@Base+0x300>
   1715c:	ldr	r0, [r0, #4]
   17160:	cmp	r0, #8
   17164:	beq	17258 <table_set@@Base+0x224>
   17168:	b	17334 <table_set@@Base+0x300>
   1716c:	ldr	r0, [r0, #4]
   17170:	cmp	r0, #9
   17174:	beq	17258 <table_set@@Base+0x224>
   17178:	b	17334 <table_set@@Base+0x300>
   1717c:	ldr	r0, [r0, #4]
   17180:	cmp	r0, #10
   17184:	beq	17198 <table_set@@Base+0x164>
   17188:	b	17334 <table_set@@Base+0x300>
   1718c:	ldr	r0, [r0, #4]
   17190:	cmp	r0, #11
   17194:	bne	17334 <table_set@@Base+0x300>
   17198:	ldr	r0, [r5]
   1719c:	cmp	r0, #0
   171a0:	bne	171b8 <table_set@@Base+0x184>
   171a4:	mov	r0, #2
   171a8:	bl	12fb4 <malloc@plt>
   171ac:	cmp	r0, #0
   171b0:	str	r0, [r5]
   171b4:	beq	17334 <table_set@@Base+0x300>
   171b8:	ldrh	r1, [r8]
   171bc:	strh	r1, [r0]
   171c0:	b	1731c <table_set@@Base+0x2e8>
   171c4:	ldr	r0, [r0, #4]
   171c8:	cmp	r0, #12
   171cc:	beq	17210 <table_set@@Base+0x1dc>
   171d0:	b	17334 <table_set@@Base+0x300>
   171d4:	ldr	r0, [r0, #4]
   171d8:	cmp	r0, #13
   171dc:	beq	17210 <table_set@@Base+0x1dc>
   171e0:	b	17334 <table_set@@Base+0x300>
   171e4:	ldr	r0, [r0, #4]
   171e8:	cmp	r0, #14
   171ec:	beq	17258 <table_set@@Base+0x224>
   171f0:	b	17334 <table_set@@Base+0x300>
   171f4:	ldr	r0, [r0, #4]
   171f8:	cmp	r0, #15
   171fc:	beq	17258 <table_set@@Base+0x224>
   17200:	b	17334 <table_set@@Base+0x300>
   17204:	ldr	r0, [r0, #4]
   17208:	cmp	r0, #16
   1720c:	bne	17334 <table_set@@Base+0x300>
   17210:	ldr	r0, [r5]
   17214:	cmp	r0, #0
   17218:	bne	17230 <table_set@@Base+0x1fc>
   1721c:	mov	r0, #4
   17220:	bl	12fb4 <malloc@plt>
   17224:	cmp	r0, #0
   17228:	str	r0, [r5]
   1722c:	beq	17334 <table_set@@Base+0x300>
   17230:	ldr	r1, [r8]
   17234:	str	r1, [r0]
   17238:	b	1731c <table_set@@Base+0x2e8>
   1723c:	ldr	r0, [r0, #4]
   17240:	cmp	r0, #17
   17244:	beq	17258 <table_set@@Base+0x224>
   17248:	b	17334 <table_set@@Base+0x300>
   1724c:	ldr	r0, [r0, #4]
   17250:	cmp	r0, #18
   17254:	bne	17334 <table_set@@Base+0x300>
   17258:	ldr	r0, [r5]
   1725c:	cmp	r0, #0
   17260:	bne	17278 <table_set@@Base+0x244>
   17264:	mov	r0, #8
   17268:	bl	12fb4 <malloc@plt>
   1726c:	cmp	r0, #0
   17270:	str	r0, [r5]
   17274:	beq	17334 <table_set@@Base+0x300>
   17278:	ldr	r1, [r8]
   1727c:	ldr	r2, [r8, #4]
   17280:	str	r2, [r0, #4]
   17284:	str	r1, [r0]
   17288:	b	1731c <table_set@@Base+0x2e8>
   1728c:	ldr	r0, [r0, #4]
   17290:	cmp	r0, #19
   17294:	beq	172f4 <table_set@@Base+0x2c0>
   17298:	b	17334 <table_set@@Base+0x300>
   1729c:	ldr	r0, [r0, #4]
   172a0:	cmp	r0, #20
   172a4:	beq	172f4 <table_set@@Base+0x2c0>
   172a8:	b	17334 <table_set@@Base+0x300>
   172ac:	ldr	r0, [r0, #4]
   172b0:	cmp	r0, #21
   172b4:	bne	17334 <table_set@@Base+0x300>
   172b8:	mov	r0, r8
   172bc:	bl	12fd8 <strlen@plt>
   172c0:	ldr	r2, [r5]
   172c4:	add	r1, r0, #1
   172c8:	mov	r0, r2
   172cc:	bl	12f9c <realloc@plt>
   172d0:	cmp	r0, #0
   172d4:	str	r0, [r5]
   172d8:	beq	17334 <table_set@@Base+0x300>
   172dc:	mov	r1, r8
   172e0:	bl	12fa8 <strcpy@plt>
   172e4:	b	1731c <table_set@@Base+0x2e8>
   172e8:	ldr	r0, [r0, #4]
   172ec:	cmp	r0, #22
   172f0:	bne	17334 <table_set@@Base+0x300>
   172f4:	ldr	r0, [r5]
   172f8:	cmp	r0, #0
   172fc:	bne	17314 <table_set@@Base+0x2e0>
   17300:	mov	r0, #1
   17304:	bl	12fb4 <malloc@plt>
   17308:	cmp	r0, #0
   1730c:	str	r0, [r5]
   17310:	beq	17334 <table_set@@Base+0x300>
   17314:	ldrb	r1, [r8]
   17318:	strb	r1, [r0]
   1731c:	mov	r0, r6
   17320:	mov	r1, r9
   17324:	mov	r2, r4
   17328:	mov	r3, #1
   1732c:	bl	13c5c <table_notify@@Base>
   17330:	mov	r7, #0
   17334:	mov	r0, r7
   17338:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1733c:	ldr	r0, [r0, #4]
   17340:	cmp	r0, #23
   17344:	bne	17334 <table_set@@Base+0x300>
   17348:	str	r8, [r5]
   1734c:	b	1731c <table_set@@Base+0x2e8>

00017350 <table_set_bool@@Base>:
   17350:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17354:	add	fp, sp, #24
   17358:	mov	r8, r3
   1735c:	mov	r4, r2
   17360:	mov	r9, r1
   17364:	mov	r6, r0
   17368:	bl	17f28 <table_get_cell_ptr@@Base>
   1736c:	mov	r5, r0
   17370:	mov	r0, r6
   17374:	mov	r1, r4
   17378:	bl	13d30 <table_get_col_ptr@@Base>
   1737c:	ldr	r0, [r0, #4]
   17380:	mvn	r7, #0
   17384:	cmp	r0, #22
   17388:	bne	173c8 <table_set_bool@@Base+0x78>
   1738c:	ldr	r0, [r5]
   17390:	cmp	r0, #0
   17394:	bne	173ac <table_set_bool@@Base+0x5c>
   17398:	mov	r0, #1
   1739c:	bl	12fb4 <malloc@plt>
   173a0:	cmp	r0, #0
   173a4:	str	r0, [r5]
   173a8:	beq	173c8 <table_set_bool@@Base+0x78>
   173ac:	strb	r8, [r0]
   173b0:	mov	r0, r6
   173b4:	mov	r1, r9
   173b8:	mov	r2, r4
   173bc:	mov	r3, #1
   173c0:	bl	13c5c <table_notify@@Base>
   173c4:	mov	r7, #0
   173c8:	mov	r0, r7
   173cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000173d0 <table_set_int@@Base>:
   173d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   173d4:	add	fp, sp, #24
   173d8:	mov	r8, r3
   173dc:	mov	r4, r2
   173e0:	mov	r5, r1
   173e4:	mov	r6, r0
   173e8:	bl	17f28 <table_get_cell_ptr@@Base>
   173ec:	mov	r9, r0
   173f0:	mov	r0, r6
   173f4:	mov	r1, r4
   173f8:	bl	13d30 <table_get_col_ptr@@Base>
   173fc:	ldr	r0, [r0, #4]
   17400:	mvn	r7, #0
   17404:	cmp	r0, #0
   17408:	bne	17448 <table_set_int@@Base+0x78>
   1740c:	ldr	r0, [r9]
   17410:	cmp	r0, #0
   17414:	bne	1742c <table_set_int@@Base+0x5c>
   17418:	mov	r0, #4
   1741c:	bl	12fb4 <malloc@plt>
   17420:	cmp	r0, #0
   17424:	str	r0, [r9]
   17428:	beq	17448 <table_set_int@@Base+0x78>
   1742c:	str	r8, [r0]
   17430:	mov	r0, r6
   17434:	mov	r1, r5
   17438:	mov	r2, r4
   1743c:	mov	r3, #1
   17440:	bl	13c5c <table_notify@@Base>
   17444:	mov	r7, #0
   17448:	mov	r0, r7
   1744c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017450 <table_set_uint@@Base>:
   17450:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17454:	add	fp, sp, #24
   17458:	mov	r8, r3
   1745c:	mov	r4, r2
   17460:	mov	r5, r1
   17464:	mov	r6, r0
   17468:	bl	17f28 <table_get_cell_ptr@@Base>
   1746c:	mov	r9, r0
   17470:	mov	r0, r6
   17474:	mov	r1, r4
   17478:	bl	13d30 <table_get_col_ptr@@Base>
   1747c:	ldr	r0, [r0, #4]
   17480:	mvn	r7, #0
   17484:	cmp	r0, #1
   17488:	bne	174c8 <table_set_uint@@Base+0x78>
   1748c:	ldr	r0, [r9]
   17490:	cmp	r0, #0
   17494:	bne	174ac <table_set_uint@@Base+0x5c>
   17498:	mov	r0, #4
   1749c:	bl	12fb4 <malloc@plt>
   174a0:	cmp	r0, #0
   174a4:	str	r0, [r9]
   174a8:	beq	174c8 <table_set_uint@@Base+0x78>
   174ac:	str	r8, [r0]
   174b0:	mov	r0, r6
   174b4:	mov	r1, r5
   174b8:	mov	r2, r4
   174bc:	mov	r3, #1
   174c0:	bl	13c5c <table_notify@@Base>
   174c4:	mov	r7, #0
   174c8:	mov	r0, r7
   174cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000174d0 <table_set_int8@@Base>:
   174d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   174d4:	add	fp, sp, #24
   174d8:	mov	r8, r3
   174dc:	mov	r4, r2
   174e0:	mov	r9, r1
   174e4:	mov	r6, r0
   174e8:	bl	17f28 <table_get_cell_ptr@@Base>
   174ec:	mov	r5, r0
   174f0:	mov	r0, r6
   174f4:	mov	r1, r4
   174f8:	bl	13d30 <table_get_col_ptr@@Base>
   174fc:	ldr	r0, [r0, #4]
   17500:	mvn	r7, #0
   17504:	cmp	r0, #2
   17508:	bne	17548 <table_set_int8@@Base+0x78>
   1750c:	ldr	r0, [r5]
   17510:	cmp	r0, #0
   17514:	bne	1752c <table_set_int8@@Base+0x5c>
   17518:	mov	r0, #1
   1751c:	bl	12fb4 <malloc@plt>
   17520:	cmp	r0, #0
   17524:	str	r0, [r5]
   17528:	beq	17548 <table_set_int8@@Base+0x78>
   1752c:	strb	r8, [r0]
   17530:	mov	r0, r6
   17534:	mov	r1, r9
   17538:	mov	r2, r4
   1753c:	mov	r3, #1
   17540:	bl	13c5c <table_notify@@Base>
   17544:	mov	r7, #0
   17548:	mov	r0, r7
   1754c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017550 <table_set_uint8@@Base>:
   17550:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17554:	add	fp, sp, #24
   17558:	mov	r8, r3
   1755c:	mov	r4, r2
   17560:	mov	r9, r1
   17564:	mov	r6, r0
   17568:	bl	17f28 <table_get_cell_ptr@@Base>
   1756c:	mov	r5, r0
   17570:	mov	r0, r6
   17574:	mov	r1, r4
   17578:	bl	13d30 <table_get_col_ptr@@Base>
   1757c:	ldr	r0, [r0, #4]
   17580:	mvn	r7, #0
   17584:	cmp	r0, #3
   17588:	bne	175c8 <table_set_uint8@@Base+0x78>
   1758c:	ldr	r0, [r5]
   17590:	cmp	r0, #0
   17594:	bne	175ac <table_set_uint8@@Base+0x5c>
   17598:	mov	r0, #1
   1759c:	bl	12fb4 <malloc@plt>
   175a0:	cmp	r0, #0
   175a4:	str	r0, [r5]
   175a8:	beq	175c8 <table_set_uint8@@Base+0x78>
   175ac:	strb	r8, [r0]
   175b0:	mov	r0, r6
   175b4:	mov	r1, r9
   175b8:	mov	r2, r4
   175bc:	mov	r3, #1
   175c0:	bl	13c5c <table_notify@@Base>
   175c4:	mov	r7, #0
   175c8:	mov	r0, r7
   175cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000175d0 <table_set_int16@@Base>:
   175d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   175d4:	add	fp, sp, #24
   175d8:	mov	r8, r3
   175dc:	mov	r4, r2
   175e0:	mov	r9, r1
   175e4:	mov	r6, r0
   175e8:	bl	17f28 <table_get_cell_ptr@@Base>
   175ec:	mov	r5, r0
   175f0:	mov	r0, r6
   175f4:	mov	r1, r4
   175f8:	bl	13d30 <table_get_col_ptr@@Base>
   175fc:	ldr	r0, [r0, #4]
   17600:	mvn	r7, #0
   17604:	cmp	r0, #4
   17608:	bne	17648 <table_set_int16@@Base+0x78>
   1760c:	ldr	r0, [r5]
   17610:	cmp	r0, #0
   17614:	bne	1762c <table_set_int16@@Base+0x5c>
   17618:	mov	r0, #2
   1761c:	bl	12fb4 <malloc@plt>
   17620:	cmp	r0, #0
   17624:	str	r0, [r5]
   17628:	beq	17648 <table_set_int16@@Base+0x78>
   1762c:	strh	r8, [r0]
   17630:	mov	r0, r6
   17634:	mov	r1, r9
   17638:	mov	r2, r4
   1763c:	mov	r3, #1
   17640:	bl	13c5c <table_notify@@Base>
   17644:	mov	r7, #0
   17648:	mov	r0, r7
   1764c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017650 <table_set_uint16@@Base>:
   17650:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17654:	add	fp, sp, #24
   17658:	mov	r8, r3
   1765c:	mov	r4, r2
   17660:	mov	r9, r1
   17664:	mov	r6, r0
   17668:	bl	17f28 <table_get_cell_ptr@@Base>
   1766c:	mov	r5, r0
   17670:	mov	r0, r6
   17674:	mov	r1, r4
   17678:	bl	13d30 <table_get_col_ptr@@Base>
   1767c:	ldr	r0, [r0, #4]
   17680:	mvn	r7, #0
   17684:	cmp	r0, #5
   17688:	bne	176c8 <table_set_uint16@@Base+0x78>
   1768c:	ldr	r0, [r5]
   17690:	cmp	r0, #0
   17694:	bne	176ac <table_set_uint16@@Base+0x5c>
   17698:	mov	r0, #2
   1769c:	bl	12fb4 <malloc@plt>
   176a0:	cmp	r0, #0
   176a4:	str	r0, [r5]
   176a8:	beq	176c8 <table_set_uint16@@Base+0x78>
   176ac:	strh	r8, [r0]
   176b0:	mov	r0, r6
   176b4:	mov	r1, r9
   176b8:	mov	r2, r4
   176bc:	mov	r3, #1
   176c0:	bl	13c5c <table_notify@@Base>
   176c4:	mov	r7, #0
   176c8:	mov	r0, r7
   176cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000176d0 <table_set_int32@@Base>:
   176d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   176d4:	add	fp, sp, #24
   176d8:	mov	r8, r3
   176dc:	mov	r4, r2
   176e0:	mov	r5, r1
   176e4:	mov	r6, r0
   176e8:	bl	17f28 <table_get_cell_ptr@@Base>
   176ec:	mov	r9, r0
   176f0:	mov	r0, r6
   176f4:	mov	r1, r4
   176f8:	bl	13d30 <table_get_col_ptr@@Base>
   176fc:	ldr	r0, [r0, #4]
   17700:	mvn	r7, #0
   17704:	cmp	r0, #6
   17708:	bne	17748 <table_set_int32@@Base+0x78>
   1770c:	ldr	r0, [r9]
   17710:	cmp	r0, #0
   17714:	bne	1772c <table_set_int32@@Base+0x5c>
   17718:	mov	r0, #4
   1771c:	bl	12fb4 <malloc@plt>
   17720:	cmp	r0, #0
   17724:	str	r0, [r9]
   17728:	beq	17748 <table_set_int32@@Base+0x78>
   1772c:	str	r8, [r0]
   17730:	mov	r0, r6
   17734:	mov	r1, r5
   17738:	mov	r2, r4
   1773c:	mov	r3, #1
   17740:	bl	13c5c <table_notify@@Base>
   17744:	mov	r7, #0
   17748:	mov	r0, r7
   1774c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017750 <table_set_uint32@@Base>:
   17750:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17754:	add	fp, sp, #24
   17758:	mov	r8, r3
   1775c:	mov	r4, r2
   17760:	mov	r5, r1
   17764:	mov	r6, r0
   17768:	bl	17f28 <table_get_cell_ptr@@Base>
   1776c:	mov	r9, r0
   17770:	mov	r0, r6
   17774:	mov	r1, r4
   17778:	bl	13d30 <table_get_col_ptr@@Base>
   1777c:	ldr	r0, [r0, #4]
   17780:	mvn	r7, #0
   17784:	cmp	r0, #7
   17788:	bne	177c8 <table_set_uint32@@Base+0x78>
   1778c:	ldr	r0, [r9]
   17790:	cmp	r0, #0
   17794:	bne	177ac <table_set_uint32@@Base+0x5c>
   17798:	mov	r0, #4
   1779c:	bl	12fb4 <malloc@plt>
   177a0:	cmp	r0, #0
   177a4:	str	r0, [r9]
   177a8:	beq	177c8 <table_set_uint32@@Base+0x78>
   177ac:	str	r8, [r0]
   177b0:	mov	r0, r6
   177b4:	mov	r1, r5
   177b8:	mov	r2, r4
   177bc:	mov	r3, #1
   177c0:	bl	13c5c <table_notify@@Base>
   177c4:	mov	r7, #0
   177c8:	mov	r0, r7
   177cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000177d0 <table_set_int64@@Base>:
   177d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   177d4:	add	fp, sp, #24
   177d8:	mov	r4, r2
   177dc:	mov	r8, r1
   177e0:	mov	r6, r0
   177e4:	bl	17f28 <table_get_cell_ptr@@Base>
   177e8:	mov	r5, r0
   177ec:	mov	r0, r6
   177f0:	mov	r1, r4
   177f4:	bl	13d30 <table_get_col_ptr@@Base>
   177f8:	ldr	r0, [r0, #4]
   177fc:	mvn	r7, #0
   17800:	cmp	r0, #8
   17804:	bne	17850 <table_set_int64@@Base+0x80>
   17808:	ldr	r0, [r5]
   1780c:	cmp	r0, #0
   17810:	bne	17828 <table_set_int64@@Base+0x58>
   17814:	mov	r0, #8
   17818:	bl	12fb4 <malloc@plt>
   1781c:	cmp	r0, #0
   17820:	str	r0, [r5]
   17824:	beq	17850 <table_set_int64@@Base+0x80>
   17828:	ldr	r1, [fp, #12]
   1782c:	ldr	r2, [fp, #8]
   17830:	mov	r3, #1
   17834:	str	r2, [r0]
   17838:	str	r1, [r0, #4]
   1783c:	mov	r0, r6
   17840:	mov	r1, r8
   17844:	mov	r2, r4
   17848:	bl	13c5c <table_notify@@Base>
   1784c:	mov	r7, #0
   17850:	mov	r0, r7
   17854:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017858 <table_set_uint64@@Base>:
   17858:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1785c:	add	fp, sp, #24
   17860:	mov	r4, r2
   17864:	mov	r8, r1
   17868:	mov	r6, r0
   1786c:	bl	17f28 <table_get_cell_ptr@@Base>
   17870:	mov	r5, r0
   17874:	mov	r0, r6
   17878:	mov	r1, r4
   1787c:	bl	13d30 <table_get_col_ptr@@Base>
   17880:	ldr	r0, [r0, #4]
   17884:	mvn	r7, #0
   17888:	cmp	r0, #9
   1788c:	bne	178d8 <table_set_uint64@@Base+0x80>
   17890:	ldr	r0, [r5]
   17894:	cmp	r0, #0
   17898:	bne	178b0 <table_set_uint64@@Base+0x58>
   1789c:	mov	r0, #8
   178a0:	bl	12fb4 <malloc@plt>
   178a4:	cmp	r0, #0
   178a8:	str	r0, [r5]
   178ac:	beq	178d8 <table_set_uint64@@Base+0x80>
   178b0:	ldr	r1, [fp, #12]
   178b4:	ldr	r2, [fp, #8]
   178b8:	mov	r3, #1
   178bc:	str	r2, [r0]
   178c0:	str	r1, [r0, #4]
   178c4:	mov	r0, r6
   178c8:	mov	r1, r8
   178cc:	mov	r2, r4
   178d0:	bl	13c5c <table_notify@@Base>
   178d4:	mov	r7, #0
   178d8:	mov	r0, r7
   178dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000178e0 <table_set_short@@Base>:
   178e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   178e4:	add	fp, sp, #24
   178e8:	mov	r8, r3
   178ec:	mov	r4, r2
   178f0:	mov	r9, r1
   178f4:	mov	r6, r0
   178f8:	bl	17f28 <table_get_cell_ptr@@Base>
   178fc:	mov	r5, r0
   17900:	mov	r0, r6
   17904:	mov	r1, r4
   17908:	bl	13d30 <table_get_col_ptr@@Base>
   1790c:	ldr	r0, [r0, #4]
   17910:	mvn	r7, #0
   17914:	cmp	r0, #10
   17918:	bne	17958 <table_set_short@@Base+0x78>
   1791c:	ldr	r0, [r5]
   17920:	cmp	r0, #0
   17924:	bne	1793c <table_set_short@@Base+0x5c>
   17928:	mov	r0, #2
   1792c:	bl	12fb4 <malloc@plt>
   17930:	cmp	r0, #0
   17934:	str	r0, [r5]
   17938:	beq	17958 <table_set_short@@Base+0x78>
   1793c:	strh	r8, [r0]
   17940:	mov	r0, r6
   17944:	mov	r1, r9
   17948:	mov	r2, r4
   1794c:	mov	r3, #1
   17950:	bl	13c5c <table_notify@@Base>
   17954:	mov	r7, #0
   17958:	mov	r0, r7
   1795c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017960 <table_set_ushort@@Base>:
   17960:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17964:	add	fp, sp, #24
   17968:	mov	r8, r3
   1796c:	mov	r4, r2
   17970:	mov	r9, r1
   17974:	mov	r6, r0
   17978:	bl	17f28 <table_get_cell_ptr@@Base>
   1797c:	mov	r5, r0
   17980:	mov	r0, r6
   17984:	mov	r1, r4
   17988:	bl	13d30 <table_get_col_ptr@@Base>
   1798c:	ldr	r0, [r0, #4]
   17990:	mvn	r7, #0
   17994:	cmp	r0, #11
   17998:	bne	179d8 <table_set_ushort@@Base+0x78>
   1799c:	ldr	r0, [r5]
   179a0:	cmp	r0, #0
   179a4:	bne	179bc <table_set_ushort@@Base+0x5c>
   179a8:	mov	r0, #2
   179ac:	bl	12fb4 <malloc@plt>
   179b0:	cmp	r0, #0
   179b4:	str	r0, [r5]
   179b8:	beq	179d8 <table_set_ushort@@Base+0x78>
   179bc:	strh	r8, [r0]
   179c0:	mov	r0, r6
   179c4:	mov	r1, r9
   179c8:	mov	r2, r4
   179cc:	mov	r3, #1
   179d0:	bl	13c5c <table_notify@@Base>
   179d4:	mov	r7, #0
   179d8:	mov	r0, r7
   179dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000179e0 <table_set_long@@Base>:
   179e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   179e4:	add	fp, sp, #24
   179e8:	mov	r8, r3
   179ec:	mov	r4, r2
   179f0:	mov	r5, r1
   179f4:	mov	r6, r0
   179f8:	bl	17f28 <table_get_cell_ptr@@Base>
   179fc:	mov	r9, r0
   17a00:	mov	r0, r6
   17a04:	mov	r1, r4
   17a08:	bl	13d30 <table_get_col_ptr@@Base>
   17a0c:	ldr	r0, [r0, #4]
   17a10:	mvn	r7, #0
   17a14:	cmp	r0, #12
   17a18:	bne	17a58 <table_set_long@@Base+0x78>
   17a1c:	ldr	r0, [r9]
   17a20:	cmp	r0, #0
   17a24:	bne	17a3c <table_set_long@@Base+0x5c>
   17a28:	mov	r0, #4
   17a2c:	bl	12fb4 <malloc@plt>
   17a30:	cmp	r0, #0
   17a34:	str	r0, [r9]
   17a38:	beq	17a58 <table_set_long@@Base+0x78>
   17a3c:	str	r8, [r0]
   17a40:	mov	r0, r6
   17a44:	mov	r1, r5
   17a48:	mov	r2, r4
   17a4c:	mov	r3, #1
   17a50:	bl	13c5c <table_notify@@Base>
   17a54:	mov	r7, #0
   17a58:	mov	r0, r7
   17a5c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017a60 <table_set_ulong@@Base>:
   17a60:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17a64:	add	fp, sp, #24
   17a68:	mov	r8, r3
   17a6c:	mov	r4, r2
   17a70:	mov	r5, r1
   17a74:	mov	r6, r0
   17a78:	bl	17f28 <table_get_cell_ptr@@Base>
   17a7c:	mov	r9, r0
   17a80:	mov	r0, r6
   17a84:	mov	r1, r4
   17a88:	bl	13d30 <table_get_col_ptr@@Base>
   17a8c:	ldr	r0, [r0, #4]
   17a90:	mvn	r7, #0
   17a94:	cmp	r0, #13
   17a98:	bne	17ad8 <table_set_ulong@@Base+0x78>
   17a9c:	ldr	r0, [r9]
   17aa0:	cmp	r0, #0
   17aa4:	bne	17abc <table_set_ulong@@Base+0x5c>
   17aa8:	mov	r0, #4
   17aac:	bl	12fb4 <malloc@plt>
   17ab0:	cmp	r0, #0
   17ab4:	str	r0, [r9]
   17ab8:	beq	17ad8 <table_set_ulong@@Base+0x78>
   17abc:	str	r8, [r0]
   17ac0:	mov	r0, r6
   17ac4:	mov	r1, r5
   17ac8:	mov	r2, r4
   17acc:	mov	r3, #1
   17ad0:	bl	13c5c <table_notify@@Base>
   17ad4:	mov	r7, #0
   17ad8:	mov	r0, r7
   17adc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017ae0 <table_set_llong@@Base>:
   17ae0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17ae4:	add	fp, sp, #24
   17ae8:	mov	r4, r2
   17aec:	mov	r8, r1
   17af0:	mov	r6, r0
   17af4:	bl	17f28 <table_get_cell_ptr@@Base>
   17af8:	mov	r5, r0
   17afc:	mov	r0, r6
   17b00:	mov	r1, r4
   17b04:	bl	13d30 <table_get_col_ptr@@Base>
   17b08:	ldr	r0, [r0, #4]
   17b0c:	mvn	r7, #0
   17b10:	cmp	r0, #14
   17b14:	bne	17b60 <table_set_llong@@Base+0x80>
   17b18:	ldr	r0, [r5]
   17b1c:	cmp	r0, #0
   17b20:	bne	17b38 <table_set_llong@@Base+0x58>
   17b24:	mov	r0, #8
   17b28:	bl	12fb4 <malloc@plt>
   17b2c:	cmp	r0, #0
   17b30:	str	r0, [r5]
   17b34:	beq	17b60 <table_set_llong@@Base+0x80>
   17b38:	ldr	r1, [fp, #12]
   17b3c:	ldr	r2, [fp, #8]
   17b40:	mov	r3, #1
   17b44:	str	r2, [r0]
   17b48:	str	r1, [r0, #4]
   17b4c:	mov	r0, r6
   17b50:	mov	r1, r8
   17b54:	mov	r2, r4
   17b58:	bl	13c5c <table_notify@@Base>
   17b5c:	mov	r7, #0
   17b60:	mov	r0, r7
   17b64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017b68 <table_set_ullong@@Base>:
   17b68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17b6c:	add	fp, sp, #24
   17b70:	mov	r4, r2
   17b74:	mov	r8, r1
   17b78:	mov	r6, r0
   17b7c:	bl	17f28 <table_get_cell_ptr@@Base>
   17b80:	mov	r5, r0
   17b84:	mov	r0, r6
   17b88:	mov	r1, r4
   17b8c:	bl	13d30 <table_get_col_ptr@@Base>
   17b90:	ldr	r0, [r0, #4]
   17b94:	mvn	r7, #0
   17b98:	cmp	r0, #15
   17b9c:	bne	17be8 <table_set_ullong@@Base+0x80>
   17ba0:	ldr	r0, [r5]
   17ba4:	cmp	r0, #0
   17ba8:	bne	17bc0 <table_set_ullong@@Base+0x58>
   17bac:	mov	r0, #8
   17bb0:	bl	12fb4 <malloc@plt>
   17bb4:	cmp	r0, #0
   17bb8:	str	r0, [r5]
   17bbc:	beq	17be8 <table_set_ullong@@Base+0x80>
   17bc0:	ldr	r1, [fp, #12]
   17bc4:	ldr	r2, [fp, #8]
   17bc8:	mov	r3, #1
   17bcc:	str	r2, [r0]
   17bd0:	str	r1, [r0, #4]
   17bd4:	mov	r0, r6
   17bd8:	mov	r1, r8
   17bdc:	mov	r2, r4
   17be0:	bl	13c5c <table_notify@@Base>
   17be4:	mov	r7, #0
   17be8:	mov	r0, r7
   17bec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017bf0 <table_set_float@@Base>:
   17bf0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17bf4:	add	fp, sp, #24
   17bf8:	vpush	{d8}
   17bfc:	vmov.f32	s16, s0
   17c00:	mov	r4, r2
   17c04:	mov	r8, r1
   17c08:	mov	r6, r0
   17c0c:	bl	17f28 <table_get_cell_ptr@@Base>
   17c10:	mov	r5, r0
   17c14:	mov	r0, r6
   17c18:	mov	r1, r4
   17c1c:	bl	13d30 <table_get_col_ptr@@Base>
   17c20:	ldr	r0, [r0, #4]
   17c24:	mvn	r7, #0
   17c28:	cmp	r0, #16
   17c2c:	bne	17c70 <table_set_float@@Base+0x80>
   17c30:	ldr	r0, [r5]
   17c34:	cmp	r0, #0
   17c38:	bne	17c50 <table_set_float@@Base+0x60>
   17c3c:	mov	r0, #4
   17c40:	bl	12fb4 <malloc@plt>
   17c44:	cmp	r0, #0
   17c48:	str	r0, [r5]
   17c4c:	beq	17c70 <table_set_float@@Base+0x80>
   17c50:	vmov	r1, s16
   17c54:	mov	r2, r4
   17c58:	mov	r3, #1
   17c5c:	str	r1, [r0]
   17c60:	mov	r0, r6
   17c64:	mov	r1, r8
   17c68:	bl	13c5c <table_notify@@Base>
   17c6c:	mov	r7, #0
   17c70:	mov	r0, r7
   17c74:	vpop	{d8}
   17c78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017c7c <table_set_double@@Base>:
   17c7c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17c80:	add	fp, sp, #24
   17c84:	vpush	{d8}
   17c88:	vorr	d8, d0, d0
   17c8c:	mov	r4, r2
   17c90:	mov	r5, r1
   17c94:	mov	r6, r0
   17c98:	bl	17f28 <table_get_cell_ptr@@Base>
   17c9c:	mov	r8, r0
   17ca0:	mov	r0, r6
   17ca4:	mov	r1, r4
   17ca8:	bl	13d30 <table_get_col_ptr@@Base>
   17cac:	ldr	r0, [r0, #4]
   17cb0:	mvn	r7, #0
   17cb4:	cmp	r0, #17
   17cb8:	bne	17cf8 <table_set_double@@Base+0x7c>
   17cbc:	ldr	r0, [r8]
   17cc0:	cmp	r0, #0
   17cc4:	bne	17cdc <table_set_double@@Base+0x60>
   17cc8:	mov	r0, #8
   17ccc:	bl	12fb4 <malloc@plt>
   17cd0:	cmp	r0, #0
   17cd4:	str	r0, [r8]
   17cd8:	beq	17cf8 <table_set_double@@Base+0x7c>
   17cdc:	vst1.8	{d8}, [r0]
   17ce0:	mov	r0, r6
   17ce4:	mov	r1, r5
   17ce8:	mov	r2, r4
   17cec:	mov	r3, #1
   17cf0:	bl	13c5c <table_notify@@Base>
   17cf4:	mov	r7, #0
   17cf8:	mov	r0, r7
   17cfc:	vpop	{d8}
   17d00:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017d04 <table_set_ldouble@@Base>:
   17d04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17d08:	add	fp, sp, #24
   17d0c:	vpush	{d8}
   17d10:	vorr	d8, d0, d0
   17d14:	mov	r4, r2
   17d18:	mov	r5, r1
   17d1c:	mov	r6, r0
   17d20:	bl	17f28 <table_get_cell_ptr@@Base>
   17d24:	mov	r8, r0
   17d28:	mov	r0, r6
   17d2c:	mov	r1, r4
   17d30:	bl	13d30 <table_get_col_ptr@@Base>
   17d34:	ldr	r0, [r0, #4]
   17d38:	mvn	r7, #0
   17d3c:	cmp	r0, #18
   17d40:	bne	17d80 <table_set_ldouble@@Base+0x7c>
   17d44:	ldr	r0, [r8]
   17d48:	cmp	r0, #0
   17d4c:	bne	17d64 <table_set_ldouble@@Base+0x60>
   17d50:	mov	r0, #8
   17d54:	bl	12fb4 <malloc@plt>
   17d58:	cmp	r0, #0
   17d5c:	str	r0, [r8]
   17d60:	beq	17d80 <table_set_ldouble@@Base+0x7c>
   17d64:	vst1.8	{d8}, [r0]
   17d68:	mov	r0, r6
   17d6c:	mov	r1, r5
   17d70:	mov	r2, r4
   17d74:	mov	r3, #1
   17d78:	bl	13c5c <table_notify@@Base>
   17d7c:	mov	r7, #0
   17d80:	mov	r0, r7
   17d84:	vpop	{d8}
   17d88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017d8c <table_set_string@@Base>:
   17d8c:	push	{fp, lr}
   17d90:	mov	fp, sp
   17d94:	sub	sp, sp, #8
   17d98:	mov	ip, #21
   17d9c:	str	ip, [sp]
   17da0:	bl	17034 <table_set@@Base>
   17da4:	mov	sp, fp
   17da8:	pop	{fp, pc}

00017dac <table_set_char@@Base>:
   17dac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17db0:	add	fp, sp, #24
   17db4:	mov	r8, r3
   17db8:	mov	r4, r2
   17dbc:	mov	r9, r1
   17dc0:	mov	r6, r0
   17dc4:	bl	17f28 <table_get_cell_ptr@@Base>
   17dc8:	mov	r5, r0
   17dcc:	mov	r0, r6
   17dd0:	mov	r1, r4
   17dd4:	bl	13d30 <table_get_col_ptr@@Base>
   17dd8:	ldr	r0, [r0, #4]
   17ddc:	mvn	r7, #0
   17de0:	cmp	r0, #19
   17de4:	bne	17e24 <table_set_char@@Base+0x78>
   17de8:	ldr	r0, [r5]
   17dec:	cmp	r0, #0
   17df0:	bne	17e08 <table_set_char@@Base+0x5c>
   17df4:	mov	r0, #1
   17df8:	bl	12fb4 <malloc@plt>
   17dfc:	cmp	r0, #0
   17e00:	str	r0, [r5]
   17e04:	beq	17e24 <table_set_char@@Base+0x78>
   17e08:	strb	r8, [r0]
   17e0c:	mov	r0, r6
   17e10:	mov	r1, r9
   17e14:	mov	r2, r4
   17e18:	mov	r3, #1
   17e1c:	bl	13c5c <table_notify@@Base>
   17e20:	mov	r7, #0
   17e24:	mov	r0, r7
   17e28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017e2c <table_set_uchar@@Base>:
   17e2c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17e30:	add	fp, sp, #24
   17e34:	mov	r8, r3
   17e38:	mov	r4, r2
   17e3c:	mov	r9, r1
   17e40:	mov	r6, r0
   17e44:	bl	17f28 <table_get_cell_ptr@@Base>
   17e48:	mov	r5, r0
   17e4c:	mov	r0, r6
   17e50:	mov	r1, r4
   17e54:	bl	13d30 <table_get_col_ptr@@Base>
   17e58:	ldr	r0, [r0, #4]
   17e5c:	mvn	r7, #0
   17e60:	cmp	r0, #20
   17e64:	bne	17ea4 <table_set_uchar@@Base+0x78>
   17e68:	ldr	r0, [r5]
   17e6c:	cmp	r0, #0
   17e70:	bne	17e88 <table_set_uchar@@Base+0x5c>
   17e74:	mov	r0, #1
   17e78:	bl	12fb4 <malloc@plt>
   17e7c:	cmp	r0, #0
   17e80:	str	r0, [r5]
   17e84:	beq	17ea4 <table_set_uchar@@Base+0x78>
   17e88:	strb	r8, [r0]
   17e8c:	mov	r0, r6
   17e90:	mov	r1, r9
   17e94:	mov	r2, r4
   17e98:	mov	r3, #1
   17e9c:	bl	13c5c <table_notify@@Base>
   17ea0:	mov	r7, #0
   17ea4:	mov	r0, r7
   17ea8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00017eac <table_set_ptr@@Base>:
   17eac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17eb0:	add	fp, sp, #24
   17eb4:	mov	r8, r3
   17eb8:	mov	r4, r2
   17ebc:	mov	r5, r1
   17ec0:	mov	r6, r0
   17ec4:	bl	17f28 <table_get_cell_ptr@@Base>
   17ec8:	mov	r7, r0
   17ecc:	mov	r0, r6
   17ed0:	mov	r1, r4
   17ed4:	bl	13d30 <table_get_col_ptr@@Base>
   17ed8:	ldr	r1, [r0, #4]
   17edc:	mvn	r0, #0
   17ee0:	cmp	r1, #23
   17ee4:	bne	17f04 <table_set_ptr@@Base+0x58>
   17ee8:	mov	r0, r6
   17eec:	mov	r1, r5
   17ef0:	mov	r2, r4
   17ef4:	mov	r3, #1
   17ef8:	str	r8, [r7]
   17efc:	bl	13c5c <table_notify@@Base>
   17f00:	mov	r0, #0
   17f04:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00017f08 <table_cell_init@@Base>:
   17f08:	push	{r4, sl, fp, lr}
   17f0c:	add	fp, sp, #8
   17f10:	mov	r4, r2
   17f14:	bl	16db0 <table_get_row_ptr@@Base>
   17f18:	ldr	r0, [r0]
   17f1c:	mov	r1, #0
   17f20:	str	r1, [r0, r4, lsl #2]
   17f24:	pop	{r4, sl, fp, pc}

00017f28 <table_get_cell_ptr@@Base>:
   17f28:	push	{r4, sl, fp, lr}
   17f2c:	add	fp, sp, #8
   17f30:	mov	r4, r2
   17f34:	bl	16db0 <table_get_row_ptr@@Base>
   17f38:	ldr	r0, [r0]
   17f3c:	add	r0, r0, r4, lsl #2
   17f40:	pop	{r4, sl, fp, pc}

00017f44 <table_cell_destroy@@Base>:
   17f44:	push	{r4, r5, r6, sl, fp, lr}
   17f48:	add	fp, sp, #16
   17f4c:	mov	r5, r1
   17f50:	mov	r1, r2
   17f54:	mov	r4, r2
   17f58:	mov	r6, r0
   17f5c:	bl	13dd0 <table_get_column_data_type@@Base>
   17f60:	cmp	r0, #23
   17f64:	popeq	{r4, r5, r6, sl, fp, pc}
   17f68:	mov	r0, r6
   17f6c:	mov	r1, r5
   17f70:	bl	16db0 <table_get_row_ptr@@Base>
   17f74:	ldr	r0, [r0]
   17f78:	ldr	r0, [r0, r4, lsl #2]
   17f7c:	cmp	r0, #0
   17f80:	beq	17f8c <table_cell_destroy@@Base+0x48>
   17f84:	pop	{r4, r5, r6, sl, fp, lr}
   17f88:	b	12f90 <free@plt>
   17f8c:	pop	{r4, r5, r6, sl, fp, pc}

00017f90 <table_cell_to_buffer@@Base>:
   17f90:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17f94:	add	fp, sp, #24
   17f98:	sub	sp, sp, #8
   17f9c:	mov	r7, r1
   17fa0:	mov	r1, r2
   17fa4:	mov	r5, r3
   17fa8:	mov	r6, r2
   17fac:	mov	r4, r0
   17fb0:	bl	13dd0 <table_get_column_data_type@@Base>
   17fb4:	cmp	r0, #23
   17fb8:	bhi	182ac <table_cell_to_buffer@@Base+0x31c>
   17fbc:	add	r1, pc, #8
   17fc0:	ldr	r8, [fp, #8]
   17fc4:	ldr	r0, [r1, r0, lsl #2]
   17fc8:	add	pc, r1, r0
   17fcc:	andeq	r0, r0, r0, rrx
   17fd0:	andeq	r0, r0, r4, ror r0
   17fd4:	andeq	r0, r0, r8, lsl #1
   17fd8:	muleq	r0, ip, r0
   17fdc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   17fe0:	andeq	r0, r0, r4, asr #1
   17fe4:	ldrdeq	r0, [r0], -r8
   17fe8:	andeq	r0, r0, ip, ror #1
   17fec:	andeq	r0, r0, ip, lsl #2
   17ff0:	andeq	r0, r0, r0, lsr #2
   17ff4:	andeq	r0, r0, r4, lsr r1
   17ff8:	andeq	r0, r0, r4, asr r1
   17ffc:	andeq	r0, r0, r4, ror r1
   18000:	muleq	r0, r4, r1
   18004:			; <UNDEFINED> instruction: 0x000001b4
   18008:	ldrdeq	r0, [r0], -r4
   1800c:	strdeq	r0, [r0], -r4
   18010:	andeq	r0, r0, r8, lsl r2
   18014:	andeq	r0, r0, r8, lsr r2
   18018:	andeq	r0, r0, r4, ror #4
   1801c:	andeq	r0, r0, r8, ror r2
   18020:	muleq	r0, r8, r2
   18024:			; <UNDEFINED> instruction: 0x000002b8
   18028:	andeq	r0, r0, ip, ror #5
   1802c:	mov	r0, r4
   18030:	mov	r1, r7
   18034:	mov	r2, r6
   18038:	bl	16b6c <table_get_int@@Base>
   1803c:	b	18294 <table_cell_to_buffer@@Base+0x304>
   18040:	mov	r0, r4
   18044:	mov	r1, r7
   18048:	mov	r2, r6
   1804c:	bl	16b84 <table_get_uint@@Base>
   18050:	b	180c8 <table_cell_to_buffer@@Base+0x138>
   18054:	mov	r0, r4
   18058:	mov	r1, r7
   1805c:	mov	r2, r6
   18060:	bl	16b9c <table_get_int8@@Base>
   18064:	b	18294 <table_cell_to_buffer@@Base+0x304>
   18068:	mov	r0, r4
   1806c:	mov	r1, r7
   18070:	mov	r2, r6
   18074:	bl	16bb4 <table_get_uint8@@Base>
   18078:	b	180c8 <table_cell_to_buffer@@Base+0x138>
   1807c:	mov	r0, r4
   18080:	mov	r1, r7
   18084:	mov	r2, r6
   18088:	bl	16bcc <table_get_int16@@Base>
   1808c:	b	18294 <table_cell_to_buffer@@Base+0x304>
   18090:	mov	r0, r4
   18094:	mov	r1, r7
   18098:	mov	r2, r6
   1809c:	bl	16be4 <table_get_uint16@@Base>
   180a0:	b	180c8 <table_cell_to_buffer@@Base+0x138>
   180a4:	mov	r0, r4
   180a8:	mov	r1, r7
   180ac:	mov	r2, r6
   180b0:	bl	16bfc <table_get_int32@@Base>
   180b4:	b	18294 <table_cell_to_buffer@@Base+0x304>
   180b8:	mov	r0, r4
   180bc:	mov	r1, r7
   180c0:	mov	r2, r6
   180c4:	bl	16c14 <table_get_uint32@@Base>
   180c8:	ldr	r2, [pc, #524]	; 182dc <table_cell_to_buffer@@Base+0x34c>
   180cc:	mov	r3, r0
   180d0:	add	r2, pc, r2
   180d4:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   180d8:	mov	r0, r4
   180dc:	mov	r1, r7
   180e0:	mov	r2, r6
   180e4:	bl	16c2c <table_get_int64@@Base>
   180e8:	b	18190 <table_cell_to_buffer@@Base+0x200>
   180ec:	mov	r0, r4
   180f0:	mov	r1, r7
   180f4:	mov	r2, r6
   180f8:	bl	16c44 <table_get_uint64@@Base>
   180fc:	b	181b0 <table_cell_to_buffer@@Base+0x220>
   18100:	mov	r0, r4
   18104:	mov	r1, r7
   18108:	mov	r2, r6
   1810c:	bl	16c5c <table_get_short@@Base>
   18110:	ldr	r2, [pc, #464]	; 182e8 <table_cell_to_buffer@@Base+0x358>
   18114:	mov	r3, r0
   18118:	add	r2, pc, r2
   1811c:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   18120:	mov	r0, r4
   18124:	mov	r1, r7
   18128:	mov	r2, r6
   1812c:	bl	16c74 <table_get_ushort@@Base>
   18130:	ldr	r2, [pc, #436]	; 182ec <table_cell_to_buffer@@Base+0x35c>
   18134:	mov	r3, r0
   18138:	add	r2, pc, r2
   1813c:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   18140:	mov	r0, r4
   18144:	mov	r1, r7
   18148:	mov	r2, r6
   1814c:	bl	16c8c <table_get_long@@Base>
   18150:	ldr	r2, [pc, #408]	; 182f0 <table_cell_to_buffer@@Base+0x360>
   18154:	mov	r3, r0
   18158:	add	r2, pc, r2
   1815c:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   18160:	mov	r0, r4
   18164:	mov	r1, r7
   18168:	mov	r2, r6
   1816c:	bl	16ca4 <table_get_ulong@@Base>
   18170:	ldr	r2, [pc, #380]	; 182f4 <table_cell_to_buffer@@Base+0x364>
   18174:	mov	r3, r0
   18178:	add	r2, pc, r2
   1817c:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   18180:	mov	r0, r4
   18184:	mov	r1, r7
   18188:	mov	r2, r6
   1818c:	bl	16cbc <table_get_llong@@Base>
   18190:	stm	sp, {r0, r1}
   18194:	ldr	r2, [pc, #324]	; 182e0 <table_cell_to_buffer@@Base+0x350>
   18198:	add	r2, pc, r2
   1819c:	b	18220 <table_cell_to_buffer@@Base+0x290>
   181a0:	mov	r0, r4
   181a4:	mov	r1, r7
   181a8:	mov	r2, r6
   181ac:	bl	16cd4 <table_get_ullong@@Base>
   181b0:	stm	sp, {r0, r1}
   181b4:	ldr	r2, [pc, #296]	; 182e4 <table_cell_to_buffer@@Base+0x354>
   181b8:	add	r2, pc, r2
   181bc:	b	18220 <table_cell_to_buffer@@Base+0x290>
   181c0:	mov	r0, r4
   181c4:	mov	r1, r7
   181c8:	mov	r2, r6
   181cc:	bl	16cec <table_get_float@@Base>
   181d0:	vcvt.f64.f32	d16, s0
   181d4:	vstr	d16, [sp]
   181d8:	ldr	r2, [pc, #284]	; 182fc <table_cell_to_buffer@@Base+0x36c>
   181dc:	add	r2, pc, r2
   181e0:	b	18220 <table_cell_to_buffer@@Base+0x290>
   181e4:	mov	r0, r4
   181e8:	mov	r1, r7
   181ec:	mov	r2, r6
   181f0:	bl	16d04 <table_get_double@@Base>
   181f4:	vstr	d0, [sp]
   181f8:	ldr	r2, [pc, #256]	; 18300 <table_cell_to_buffer@@Base+0x370>
   181fc:	add	r2, pc, r2
   18200:	b	18220 <table_cell_to_buffer@@Base+0x290>
   18204:	mov	r0, r4
   18208:	mov	r1, r7
   1820c:	mov	r2, r6
   18210:	bl	16d1c <table_get_ldouble@@Base>
   18214:	vstr	d0, [sp]
   18218:	ldr	r2, [pc, #228]	; 18304 <table_cell_to_buffer@@Base+0x374>
   1821c:	add	r2, pc, r2
   18220:	mov	r0, r5
   18224:	mov	r1, r8
   18228:	bl	12fe4 <snprintf@plt>
   1822c:	b	182ac <table_cell_to_buffer@@Base+0x31c>
   18230:	mov	r0, r4
   18234:	mov	r1, r7
   18238:	mov	r2, r6
   1823c:	bl	16d34 <table_get_char@@Base>
   18240:	b	18254 <table_cell_to_buffer@@Base+0x2c4>
   18244:	mov	r0, r4
   18248:	mov	r1, r7
   1824c:	mov	r2, r6
   18250:	bl	16d4c <table_get_uchar@@Base>
   18254:	ldr	r2, [pc, #172]	; 18308 <table_cell_to_buffer@@Base+0x378>
   18258:	mov	r3, r0
   1825c:	add	r2, pc, r2
   18260:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   18264:	mov	r0, r4
   18268:	mov	r1, r7
   1826c:	mov	r2, r6
   18270:	bl	16d64 <table_get_string@@Base>
   18274:	ldr	r2, [pc, #124]	; 182f8 <table_cell_to_buffer@@Base+0x368>
   18278:	mov	r3, r0
   1827c:	add	r2, pc, r2
   18280:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   18284:	mov	r0, r4
   18288:	mov	r1, r7
   1828c:	mov	r2, r6
   18290:	bl	16b54 <table_get_bool@@Base>
   18294:	ldr	r2, [pc, #60]	; 182d8 <table_cell_to_buffer@@Base+0x348>
   18298:	mov	r3, r0
   1829c:	add	r2, pc, r2
   182a0:	mov	r0, r5
   182a4:	mov	r1, r8
   182a8:	bl	12fe4 <snprintf@plt>
   182ac:	mov	r0, #0
   182b0:	sub	sp, fp, #24
   182b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   182b8:	mov	r0, r4
   182bc:	mov	r1, r7
   182c0:	mov	r2, r6
   182c4:	bl	16d78 <table_get_ptr@@Base>
   182c8:	ldr	r2, [pc, #60]	; 1830c <table_cell_to_buffer@@Base+0x37c>
   182cc:	mov	r3, r0
   182d0:	add	r2, pc, r2
   182d4:	b	182a0 <table_cell_to_buffer@@Base+0x310>
   182d8:	andeq	r0, r0, r1, lsl r8
   182dc:	muleq	r0, r2, sl
   182e0:	andeq	r0, r0, sp, asr #19
   182e4:			; <UNDEFINED> instruction: 0x000009b2
   182e8:	andeq	r0, r0, r7, asr sl
   182ec:	andeq	r0, r0, fp, lsr sl
   182f0:	andeq	r0, r0, pc, lsl sl
   182f4:	andeq	r0, r0, r3, lsl #20
   182f8:	andeq	r0, r0, r3, lsl #18
   182fc:	andeq	r0, r0, r6, lsr #19
   18300:	andeq	r0, r0, r9, lsl #19
   18304:	andeq	r0, r0, sp, ror #18
   18308:	andeq	r0, r0, r1, lsr r9
   1830c:	andeq	r0, r0, r0, asr #17

00018310 <table_cell_from_buffer@@Base>:
   18310:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   18314:	add	fp, sp, #24
   18318:	sub	sp, sp, #264	; 0x108
   1831c:	mov	r5, r1
   18320:	mov	r1, r2
   18324:	mov	r7, r3
   18328:	mov	r4, r2
   1832c:	mov	r6, r0
   18330:	bl	13dd0 <table_get_column_data_type@@Base>
   18334:	cmp	r0, #23
   18338:	bhi	1896c <table_cell_from_buffer@@Base+0x65c>
   1833c:	add	r1, pc, #4
   18340:	ldr	r0, [r1, r0, lsl #2]
   18344:	add	pc, r1, r0
   18348:	andeq	r0, r0, r0, rrx
   1834c:	muleq	r0, ip, r0
   18350:	ldrdeq	r0, [r0], -r8
   18354:	andeq	r0, r0, r4, lsl r1
   18358:	andeq	r0, r0, r0, asr r1
   1835c:	andeq	r0, r0, ip, lsl #3
   18360:	andeq	r0, r0, r8, asr #3
   18364:	andeq	r0, r0, r4, lsl #4
   18368:	andeq	r0, r0, r0, asr #4
   1836c:	andeq	r0, r0, r4, lsl #5
   18370:	andeq	r0, r0, r8, asr #5
   18374:	andeq	r0, r0, r4, lsl #6
   18378:	andeq	r0, r0, r0, asr #6
   1837c:	andeq	r0, r0, ip, ror r3
   18380:			; <UNDEFINED> instruction: 0x000003b8
   18384:	strdeq	r0, [r0], -ip
   18388:	andeq	r0, r0, r0, asr #8
   1838c:	andeq	r0, r0, ip, ror r4
   18390:			; <UNDEFINED> instruction: 0x000004b8
   18394:	strdeq	r0, [r0], -r4
   18398:	andeq	r0, r0, r0, lsr r5
   1839c:	andeq	r0, r0, ip, ror #10
   183a0:	andeq	r0, r0, r8, lsr #11
   183a4:	andeq	r0, r0, ip, ror #11
   183a8:	ldr	r1, [pc, #1480]	; 18978 <table_cell_from_buffer@@Base+0x668>
   183ac:	add	r2, sp, #8
   183b0:	mov	r0, r7
   183b4:	add	r1, pc, r1
   183b8:	bl	12ff0 <__isoc99_sscanf@plt>
   183bc:	mov	r1, r0
   183c0:	mvn	r0, #0
   183c4:	cmp	r1, #1
   183c8:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   183cc:	ldr	r3, [sp, #8]
   183d0:	mov	r0, r6
   183d4:	mov	r1, r5
   183d8:	mov	r2, r4
   183dc:	bl	173d0 <table_set_int@@Base>
   183e0:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   183e4:	ldr	r1, [pc, #1424]	; 1897c <table_cell_from_buffer@@Base+0x66c>
   183e8:	add	r2, sp, #8
   183ec:	mov	r0, r7
   183f0:	add	r1, pc, r1
   183f4:	bl	12ff0 <__isoc99_sscanf@plt>
   183f8:	mov	r1, r0
   183fc:	mvn	r0, #0
   18400:	cmp	r1, #1
   18404:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18408:	ldr	r3, [sp, #8]
   1840c:	mov	r0, r6
   18410:	mov	r1, r5
   18414:	mov	r2, r4
   18418:	bl	17450 <table_set_uint@@Base>
   1841c:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18420:	ldr	r1, [pc, #1368]	; 18980 <table_cell_from_buffer@@Base+0x670>
   18424:	add	r2, sp, #8
   18428:	mov	r0, r7
   1842c:	add	r1, pc, r1
   18430:	bl	12ff0 <__isoc99_sscanf@plt>
   18434:	mov	r1, r0
   18438:	mvn	r0, #0
   1843c:	cmp	r1, #1
   18440:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18444:	ldrsb	r3, [sp, #8]
   18448:	mov	r0, r6
   1844c:	mov	r1, r5
   18450:	mov	r2, r4
   18454:	bl	174d0 <table_set_int8@@Base>
   18458:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   1845c:	ldr	r1, [pc, #1312]	; 18984 <table_cell_from_buffer@@Base+0x674>
   18460:	add	r2, sp, #8
   18464:	mov	r0, r7
   18468:	add	r1, pc, r1
   1846c:	bl	12ff0 <__isoc99_sscanf@plt>
   18470:	mov	r1, r0
   18474:	mvn	r0, #0
   18478:	cmp	r1, #1
   1847c:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18480:	ldrb	r3, [sp, #8]
   18484:	mov	r0, r6
   18488:	mov	r1, r5
   1848c:	mov	r2, r4
   18490:	bl	17550 <table_set_uint8@@Base>
   18494:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18498:	ldr	r1, [pc, #1256]	; 18988 <table_cell_from_buffer@@Base+0x678>
   1849c:	add	r2, sp, #8
   184a0:	mov	r0, r7
   184a4:	add	r1, pc, r1
   184a8:	bl	12ff0 <__isoc99_sscanf@plt>
   184ac:	mov	r1, r0
   184b0:	mvn	r0, #0
   184b4:	cmp	r1, #1
   184b8:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   184bc:	ldrsh	r3, [sp, #8]
   184c0:	mov	r0, r6
   184c4:	mov	r1, r5
   184c8:	mov	r2, r4
   184cc:	bl	175d0 <table_set_int16@@Base>
   184d0:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   184d4:	ldr	r1, [pc, #1200]	; 1898c <table_cell_from_buffer@@Base+0x67c>
   184d8:	add	r2, sp, #8
   184dc:	mov	r0, r7
   184e0:	add	r1, pc, r1
   184e4:	bl	12ff0 <__isoc99_sscanf@plt>
   184e8:	mov	r1, r0
   184ec:	mvn	r0, #0
   184f0:	cmp	r1, #1
   184f4:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   184f8:	ldrh	r3, [sp, #8]
   184fc:	mov	r0, r6
   18500:	mov	r1, r5
   18504:	mov	r2, r4
   18508:	bl	17650 <table_set_uint16@@Base>
   1850c:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18510:	ldr	r1, [pc, #1144]	; 18990 <table_cell_from_buffer@@Base+0x680>
   18514:	add	r2, sp, #8
   18518:	mov	r0, r7
   1851c:	add	r1, pc, r1
   18520:	bl	12ff0 <__isoc99_sscanf@plt>
   18524:	mov	r1, r0
   18528:	mvn	r0, #0
   1852c:	cmp	r1, #1
   18530:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18534:	ldr	r3, [sp, #8]
   18538:	mov	r0, r6
   1853c:	mov	r1, r5
   18540:	mov	r2, r4
   18544:	bl	176d0 <table_set_int32@@Base>
   18548:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   1854c:	ldr	r1, [pc, #1088]	; 18994 <table_cell_from_buffer@@Base+0x684>
   18550:	add	r2, sp, #8
   18554:	mov	r0, r7
   18558:	add	r1, pc, r1
   1855c:	bl	12ff0 <__isoc99_sscanf@plt>
   18560:	mov	r1, r0
   18564:	mvn	r0, #0
   18568:	cmp	r1, #1
   1856c:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18570:	ldr	r3, [sp, #8]
   18574:	mov	r0, r6
   18578:	mov	r1, r5
   1857c:	mov	r2, r4
   18580:	bl	17750 <table_set_uint32@@Base>
   18584:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18588:	ldr	r1, [pc, #1032]	; 18998 <table_cell_from_buffer@@Base+0x688>
   1858c:	add	r2, sp, #8
   18590:	mov	r0, r7
   18594:	add	r1, pc, r1
   18598:	bl	12ff0 <__isoc99_sscanf@plt>
   1859c:	mov	r1, r0
   185a0:	mvn	r0, #0
   185a4:	cmp	r1, #1
   185a8:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   185ac:	ldr	r0, [sp, #8]
   185b0:	ldr	r1, [sp, #12]
   185b4:	mov	r2, r4
   185b8:	stm	sp, {r0, r1}
   185bc:	mov	r0, r6
   185c0:	mov	r1, r5
   185c4:	bl	177d0 <table_set_int64@@Base>
   185c8:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   185cc:	ldr	r1, [pc, #968]	; 1899c <table_cell_from_buffer@@Base+0x68c>
   185d0:	add	r2, sp, #8
   185d4:	mov	r0, r7
   185d8:	add	r1, pc, r1
   185dc:	bl	12ff0 <__isoc99_sscanf@plt>
   185e0:	mov	r1, r0
   185e4:	mvn	r0, #0
   185e8:	cmp	r1, #1
   185ec:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   185f0:	ldr	r0, [sp, #8]
   185f4:	ldr	r1, [sp, #12]
   185f8:	mov	r2, r4
   185fc:	stm	sp, {r0, r1}
   18600:	mov	r0, r6
   18604:	mov	r1, r5
   18608:	bl	17858 <table_set_uint64@@Base>
   1860c:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18610:	ldr	r1, [pc, #904]	; 189a0 <table_cell_from_buffer@@Base+0x690>
   18614:	add	r2, sp, #8
   18618:	mov	r0, r7
   1861c:	add	r1, pc, r1
   18620:	bl	12ff0 <__isoc99_sscanf@plt>
   18624:	mov	r1, r0
   18628:	mvn	r0, #0
   1862c:	cmp	r1, #1
   18630:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18634:	ldrsh	r3, [sp, #8]
   18638:	mov	r0, r6
   1863c:	mov	r1, r5
   18640:	mov	r2, r4
   18644:	bl	178e0 <table_set_short@@Base>
   18648:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   1864c:	ldr	r1, [pc, #848]	; 189a4 <table_cell_from_buffer@@Base+0x694>
   18650:	add	r2, sp, #8
   18654:	mov	r0, r7
   18658:	add	r1, pc, r1
   1865c:	bl	12ff0 <__isoc99_sscanf@plt>
   18660:	mov	r1, r0
   18664:	mvn	r0, #0
   18668:	cmp	r1, #1
   1866c:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18670:	ldrh	r3, [sp, #8]
   18674:	mov	r0, r6
   18678:	mov	r1, r5
   1867c:	mov	r2, r4
   18680:	bl	17960 <table_set_ushort@@Base>
   18684:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18688:	ldr	r1, [pc, #792]	; 189a8 <table_cell_from_buffer@@Base+0x698>
   1868c:	add	r2, sp, #8
   18690:	mov	r0, r7
   18694:	add	r1, pc, r1
   18698:	bl	12ff0 <__isoc99_sscanf@plt>
   1869c:	mov	r1, r0
   186a0:	mvn	r0, #0
   186a4:	cmp	r1, #1
   186a8:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   186ac:	ldr	r3, [sp, #8]
   186b0:	mov	r0, r6
   186b4:	mov	r1, r5
   186b8:	mov	r2, r4
   186bc:	bl	179e0 <table_set_long@@Base>
   186c0:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   186c4:	ldr	r1, [pc, #736]	; 189ac <table_cell_from_buffer@@Base+0x69c>
   186c8:	add	r2, sp, #8
   186cc:	mov	r0, r7
   186d0:	add	r1, pc, r1
   186d4:	bl	12ff0 <__isoc99_sscanf@plt>
   186d8:	mov	r1, r0
   186dc:	mvn	r0, #0
   186e0:	cmp	r1, #1
   186e4:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   186e8:	ldr	r3, [sp, #8]
   186ec:	mov	r0, r6
   186f0:	mov	r1, r5
   186f4:	mov	r2, r4
   186f8:	bl	17a60 <table_set_ulong@@Base>
   186fc:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18700:	ldr	r1, [pc, #680]	; 189b0 <table_cell_from_buffer@@Base+0x6a0>
   18704:	add	r2, sp, #8
   18708:	mov	r0, r7
   1870c:	add	r1, pc, r1
   18710:	bl	12ff0 <__isoc99_sscanf@plt>
   18714:	mov	r1, r0
   18718:	mvn	r0, #0
   1871c:	cmp	r1, #1
   18720:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18724:	ldr	r0, [sp, #8]
   18728:	ldr	r1, [sp, #12]
   1872c:	mov	r2, r4
   18730:	stm	sp, {r0, r1}
   18734:	mov	r0, r6
   18738:	mov	r1, r5
   1873c:	bl	17ae0 <table_set_llong@@Base>
   18740:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18744:	ldr	r1, [pc, #616]	; 189b4 <table_cell_from_buffer@@Base+0x6a4>
   18748:	add	r2, sp, #8
   1874c:	mov	r0, r7
   18750:	add	r1, pc, r1
   18754:	bl	12ff0 <__isoc99_sscanf@plt>
   18758:	mov	r1, r0
   1875c:	mvn	r0, #0
   18760:	cmp	r1, #1
   18764:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18768:	ldr	r0, [sp, #8]
   1876c:	ldr	r1, [sp, #12]
   18770:	mov	r2, r4
   18774:	stm	sp, {r0, r1}
   18778:	mov	r0, r6
   1877c:	mov	r1, r5
   18780:	bl	17b68 <table_set_ullong@@Base>
   18784:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18788:	ldr	r1, [pc, #556]	; 189bc <table_cell_from_buffer@@Base+0x6ac>
   1878c:	add	r2, sp, #8
   18790:	mov	r0, r7
   18794:	add	r1, pc, r1
   18798:	bl	12ff0 <__isoc99_sscanf@plt>
   1879c:	mov	r1, r0
   187a0:	mvn	r0, #0
   187a4:	cmp	r1, #1
   187a8:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   187ac:	vldr	s0, [sp, #8]
   187b0:	mov	r0, r6
   187b4:	mov	r1, r5
   187b8:	mov	r2, r4
   187bc:	bl	17bf0 <table_set_float@@Base>
   187c0:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   187c4:	ldr	r1, [pc, #500]	; 189c0 <table_cell_from_buffer@@Base+0x6b0>
   187c8:	add	r2, sp, #8
   187cc:	mov	r0, r7
   187d0:	add	r1, pc, r1
   187d4:	bl	12ff0 <__isoc99_sscanf@plt>
   187d8:	mov	r1, r0
   187dc:	mvn	r0, #0
   187e0:	cmp	r1, #1
   187e4:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   187e8:	vldr	d0, [sp, #8]
   187ec:	mov	r0, r6
   187f0:	mov	r1, r5
   187f4:	mov	r2, r4
   187f8:	bl	17c7c <table_set_double@@Base>
   187fc:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18800:	ldr	r1, [pc, #444]	; 189c4 <table_cell_from_buffer@@Base+0x6b4>
   18804:	add	r2, sp, #8
   18808:	mov	r0, r7
   1880c:	add	r1, pc, r1
   18810:	bl	12ff0 <__isoc99_sscanf@plt>
   18814:	mov	r1, r0
   18818:	mvn	r0, #0
   1881c:	cmp	r1, #1
   18820:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18824:	vldr	d0, [sp, #8]
   18828:	mov	r0, r6
   1882c:	mov	r1, r5
   18830:	mov	r2, r4
   18834:	bl	17d04 <table_set_ldouble@@Base>
   18838:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   1883c:	ldr	r1, [pc, #392]	; 189cc <table_cell_from_buffer@@Base+0x6bc>
   18840:	add	r2, sp, #8
   18844:	mov	r0, r7
   18848:	add	r1, pc, r1
   1884c:	bl	12ff0 <__isoc99_sscanf@plt>
   18850:	mov	r1, r0
   18854:	mvn	r0, #0
   18858:	cmp	r1, #1
   1885c:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18860:	ldrb	r3, [sp, #8]
   18864:	mov	r0, r6
   18868:	mov	r1, r5
   1886c:	mov	r2, r4
   18870:	bl	17dac <table_set_char@@Base>
   18874:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18878:	ldr	r1, [pc, #336]	; 189d0 <table_cell_from_buffer@@Base+0x6c0>
   1887c:	add	r2, sp, #8
   18880:	mov	r0, r7
   18884:	add	r1, pc, r1
   18888:	bl	12ff0 <__isoc99_sscanf@plt>
   1888c:	mov	r1, r0
   18890:	mvn	r0, #0
   18894:	cmp	r1, #1
   18898:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   1889c:	ldrb	r3, [sp, #8]
   188a0:	mov	r0, r6
   188a4:	mov	r1, r5
   188a8:	mov	r2, r4
   188ac:	bl	17e2c <table_set_uchar@@Base>
   188b0:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   188b4:	ldr	r1, [pc, #252]	; 189b8 <table_cell_from_buffer@@Base+0x6a8>
   188b8:	add	r2, sp, #8
   188bc:	mov	r0, r7
   188c0:	add	r1, pc, r1
   188c4:	bl	12ff0 <__isoc99_sscanf@plt>
   188c8:	mov	r1, r0
   188cc:	mvn	r0, #0
   188d0:	cmp	r1, #1
   188d4:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   188d8:	add	r3, sp, #8
   188dc:	mov	r0, r6
   188e0:	mov	r1, r5
   188e4:	mov	r2, r4
   188e8:	bl	17d8c <table_set_string@@Base>
   188ec:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   188f0:	ldr	r1, [pc, #208]	; 189c8 <table_cell_from_buffer@@Base+0x6b8>
   188f4:	add	r2, sp, #8
   188f8:	mov	r0, r7
   188fc:	add	r1, pc, r1
   18900:	bl	12ff0 <__isoc99_sscanf@plt>
   18904:	mov	r1, r0
   18908:	mvn	r0, #0
   1890c:	cmp	r1, #1
   18910:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18914:	ldr	r3, [sp, #8]
   18918:	mov	r0, r6
   1891c:	mov	r1, r5
   18920:	mov	r2, r4
   18924:	cmp	r3, #0
   18928:	movwne	r3, #1
   1892c:	bl	17350 <table_set_bool@@Base>
   18930:	b	1896c <table_cell_from_buffer@@Base+0x65c>
   18934:	ldr	r1, [pc, #152]	; 189d4 <table_cell_from_buffer@@Base+0x6c4>
   18938:	add	r2, sp, #8
   1893c:	mov	r0, r7
   18940:	add	r1, pc, r1
   18944:	bl	12ff0 <__isoc99_sscanf@plt>
   18948:	mov	r1, r0
   1894c:	mvn	r0, #0
   18950:	cmp	r1, #1
   18954:	bne	18970 <table_cell_from_buffer@@Base+0x660>
   18958:	ldr	r3, [sp, #8]
   1895c:	mov	r0, r6
   18960:	mov	r1, r5
   18964:	mov	r2, r4
   18968:	bl	17eac <table_set_ptr@@Base>
   1896c:	mov	r0, #0
   18970:	sub	sp, fp, #24
   18974:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18978:	strdeq	r0, [r0], -r9
   1897c:	andeq	r0, r0, r2, ror r7
   18980:	andeq	r0, r0, r7, ror #14
   18984:	andeq	r0, r0, r0, lsr r7
   18988:	andeq	r0, r0, fp, asr #13
   1898c:	muleq	r0, r3, r6
   18990:	muleq	r0, r1, r5
   18994:	andeq	r0, r0, sl, lsl #12
   18998:	ldrdeq	r0, [r0], -r1
   1899c:	muleq	r0, r2, r5
   189a0:	andeq	r0, r0, r3, asr r5
   189a4:	andeq	r0, r0, fp, lsl r5
   189a8:	andeq	r0, r0, r3, ror #9
   189ac:	andeq	r0, r0, fp, lsr #9
   189b0:	andeq	r0, r0, r9, asr r4
   189b4:	andeq	r0, r0, sl, lsl r4
   189b8:			; <UNDEFINED> instruction: 0x000002bf
   189bc:	andeq	r0, r0, lr, ror #7
   189c0:			; <UNDEFINED> instruction: 0x000003b5
   189c4:	andeq	r0, r0, sp, ror r3
   189c8:			; <UNDEFINED> instruction: 0x000001b1
   189cc:	andeq	r0, r0, r5, asr #6
   189d0:	andeq	r0, r0, r9, lsl #6
   189d4:	andeq	r0, r0, r0, asr r2

000189d8 <table_cell_nullify@@Base>:
   189d8:	push	{r4, r5, fp, lr}
   189dc:	add	fp, sp, #8
   189e0:	mov	r4, r2
   189e4:	bl	16db0 <table_get_row_ptr@@Base>
   189e8:	ldr	r5, [r0]
   189ec:	ldr	r0, [r5, r4, lsl #2]
   189f0:	cmp	r0, #0
   189f4:	beq	18a04 <table_cell_nullify@@Base+0x2c>
   189f8:	bl	12f90 <free@plt>
   189fc:	mov	r0, #0
   18a00:	str	r0, [r5, r4, lsl #2]
   18a04:	mov	r0, #0
   18a08:	pop	{r4, r5, fp, pc}

00018a0c <__libc_csu_init@@Base>:
   18a0c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18a10:	mov	r7, r0
   18a14:	ldr	r6, [pc, #72]	; 18a64 <__libc_csu_init@@Base+0x58>
   18a18:	ldr	r5, [pc, #72]	; 18a68 <__libc_csu_init@@Base+0x5c>
   18a1c:	add	r6, pc, r6
   18a20:	add	r5, pc, r5
   18a24:	sub	r6, r6, r5
   18a28:	mov	r8, r1
   18a2c:	mov	r9, r2
   18a30:	bl	12f58 <strcmp@plt-0x20>
   18a34:	asrs	r6, r6, #2
   18a38:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a3c:	mov	r4, #0
   18a40:	add	r4, r4, #1
   18a44:	ldr	r3, [r5], #4
   18a48:	mov	r2, r9
   18a4c:	mov	r1, r8
   18a50:	mov	r0, r7
   18a54:	blx	r3
   18a58:	cmp	r6, r4
   18a5c:	bne	18a40 <__libc_csu_init@@Base+0x34>
   18a60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18a64:	andeq	r0, r1, r8, lsl #9
   18a68:	andeq	r0, r1, r0, lsl #9

00018a6c <__libc_csu_fini@@Base>:
   18a6c:	bx	lr

Disassembly of section .fini:

00018a70 <.fini>:
   18a70:	push	{r3, lr}
   18a74:	pop	{r3, pc}
