
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

000108ec <.init>:
   108ec:	push	{r3, lr}
   108f0:	bl	10b44 <getc@plt+0xb8>
   108f4:	pop	{r3, pc}

Disassembly of section .plt:

000108f8 <calloc@plt-0x14>:
   108f8:	push	{lr}		; (str lr, [sp, #-4]!)
   108fc:	ldr	lr, [pc, #4]	; 10908 <calloc@plt-0x4>
   10900:	add	lr, pc, lr
   10904:	ldr	pc, [lr, #8]!
   10908:	strdeq	r4, [r1], -r8

0001090c <calloc@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #20, 20	; 0x14000
   10914:	ldr	pc, [ip, #1784]!	; 0x6f8

00010918 <strcmp@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #20, 20	; 0x14000
   10920:	ldr	pc, [ip, #1776]!	; 0x6f0

00010924 <printf@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #20, 20	; 0x14000
   1092c:	ldr	pc, [ip, #1768]!	; 0x6e8

00010930 <fopen@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #20, 20	; 0x14000
   10938:	ldr	pc, [ip, #1760]!	; 0x6e0

0001093c <free@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #20, 20	; 0x14000
   10944:	ldr	pc, [ip, #1752]!	; 0x6d8

00010948 <utf8proc_get_property@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #20, 20	; 0x14000
   10950:	ldr	pc, [ip, #1744]!	; 0x6d0

00010954 <fgets@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #20, 20	; 0x14000
   1095c:	ldr	pc, [ip, #1736]!	; 0x6c8

00010960 <utf8proc_encode_char@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #20, 20	; 0x14000
   10968:	ldr	pc, [ip, #1728]!	; 0x6c0

0001096c <strdup@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #20, 20	; 0x14000
   10974:	ldr	pc, [ip, #1720]!	; 0x6b8

00010978 <rewind@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #20, 20	; 0x14000
   10980:	ldr	pc, [ip, #1712]!	; 0x6b0

00010984 <unlink@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #20, 20	; 0x14000
   1098c:	ldr	pc, [ip, #1704]!	; 0x6a8

00010990 <utf8proc_tolower@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #20, 20	; 0x14000
   10998:	ldr	pc, [ip, #1696]!	; 0x6a0

0001099c <__xstat@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #20, 20	; 0x14000
   109a4:	ldr	pc, [ip, #1688]!	; 0x698

000109a8 <fwrite@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #20, 20	; 0x14000
   109b0:	ldr	pc, [ip, #1680]!	; 0x690

000109b4 <fread@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #20, 20	; 0x14000
   109bc:	ldr	pc, [ip, #1672]!	; 0x688

000109c0 <utf8proc_iterate@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #20, 20	; 0x14000
   109c8:	ldr	pc, [ip, #1664]!	; 0x680

000109cc <__libc_start_main@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #20, 20	; 0x14000
   109d4:	ldr	pc, [ip, #1656]!	; 0x678

000109d8 <__sysv_signal@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #20, 20	; 0x14000
   109e0:	ldr	pc, [ip, #1648]!	; 0x670

000109e4 <__gmon_start__@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1640]!	; 0x668

000109f0 <getpid@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1632]!	; 0x660

000109fc <exit@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1624]!	; 0x658

00010a08 <utf8proc_category@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1616]!	; 0x650

00010a14 <strlen@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1608]!	; 0x648

00010a20 <fprintf@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1600]!	; 0x640

00010a2c <sqrt@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1592]!	; 0x638

00010a38 <__isoc99_sscanf@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1584]!	; 0x630

00010a44 <fclose@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1576]!	; 0x628

00010a50 <sprintf@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1568]!	; 0x620

00010a5c <utf8proc_errmsg@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1560]!	; 0x618

00010a68 <fputs@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1552]!	; 0x610

00010a74 <strncmp@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1544]!	; 0x608

00010a80 <abort@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1536]!	; 0x600

00010a8c <getc@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1528]!	; 0x5f8

Disassembly of section .text:

00010a98 <error@@Base-0x18f8>:
   10a98:	push	{r4, r5, lr}
   10a9c:	sub	sp, sp, #12
   10aa0:	add	ip, sp, #8
   10aa4:	ldr	r2, [pc, #84]	; 10b00 <getc@plt+0x74>
   10aa8:	mov	r3, #0
   10aac:	str	r0, [ip, #-4]!
   10ab0:	add	r2, pc, r2
   10ab4:	mov	r0, ip
   10ab8:	mov	r5, r1
   10abc:	bl	12530 <error@@Base+0x1a0>
   10ac0:	ldr	r3, [sp, #4]
   10ac4:	cmp	r3, #1
   10ac8:	subgt	r5, r5, #4
   10acc:	movgt	r4, #0
   10ad0:	ble	10af4 <getc@plt+0x68>
   10ad4:	ldr	r0, [r5, #4]!
   10ad8:	bl	10c30 <getc@plt+0x1a4>
   10adc:	ldr	r3, [sp, #4]
   10ae0:	add	r4, r4, #1
   10ae4:	cmp	r3, r4
   10ae8:	bgt	10ad4 <getc@plt+0x48>
   10aec:	bl	10c7c <getc@plt+0x1f0>
   10af0:	bl	1231c <getc@plt+0x1890>
   10af4:	ldr	r0, [pc, #8]	; 10b04 <getc@plt+0x78>
   10af8:	add	r0, pc, r0
   10afc:	bl	12390 <error@@Base>
   10b00:	strdeq	r2, [r0], -ip
   10b04:	andeq	r2, r0, r8, ror #13
   10b08:	mov	fp, #0
   10b0c:	mov	lr, #0
   10b10:	pop	{r1}		; (ldr r1, [sp], #4)
   10b14:	mov	r2, sp
   10b18:	push	{r2}		; (str r2, [sp, #-4]!)
   10b1c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b20:	ldr	ip, [pc, #16]	; 10b38 <getc@plt+0xac>
   10b24:	push	{ip}		; (str ip, [sp, #-4]!)
   10b28:	ldr	r0, [pc, #12]	; 10b3c <getc@plt+0xb0>
   10b2c:	ldr	r3, [pc, #12]	; 10b40 <getc@plt+0xb4>
   10b30:	bl	109cc <__libc_start_main@plt>
   10b34:	bl	10a80 <abort@plt>
   10b38:	andeq	r3, r1, r8, lsl #2
   10b3c:	muleq	r1, r8, sl
   10b40:	andeq	r3, r1, r8, lsr #1
   10b44:	ldr	r3, [pc, #20]	; 10b60 <getc@plt+0xd4>
   10b48:	ldr	r2, [pc, #20]	; 10b64 <getc@plt+0xd8>
   10b4c:	add	r3, pc, r3
   10b50:	ldr	r2, [r3, r2]
   10b54:	cmp	r2, #0
   10b58:	bxeq	lr
   10b5c:	b	109e4 <__gmon_start__@plt>
   10b60:	andeq	r4, r1, ip, lsr #9
   10b64:	andeq	r0, r0, r0, lsr #1
   10b68:	ldr	r3, [pc, #28]	; 10b8c <getc@plt+0x100>
   10b6c:	ldr	r0, [pc, #28]	; 10b90 <getc@plt+0x104>
   10b70:	sub	r3, r3, r0
   10b74:	cmp	r3, #6
   10b78:	bxls	lr
   10b7c:	ldr	r3, [pc, #16]	; 10b94 <getc@plt+0x108>
   10b80:	cmp	r3, #0
   10b84:	bxeq	lr
   10b88:	bx	r3
   10b8c:	ldrdeq	r5, [r2], -r3
   10b90:	ldrdeq	r5, [r2], -r0
   10b94:	andeq	r0, r0, r0
   10b98:	ldr	r1, [pc, #36]	; 10bc4 <getc@plt+0x138>
   10b9c:	ldr	r0, [pc, #36]	; 10bc8 <getc@plt+0x13c>
   10ba0:	sub	r1, r1, r0
   10ba4:	asr	r1, r1, #2
   10ba8:	add	r1, r1, r1, lsr #31
   10bac:	asrs	r1, r1, #1
   10bb0:	bxeq	lr
   10bb4:	ldr	r3, [pc, #16]	; 10bcc <getc@plt+0x140>
   10bb8:	cmp	r3, #0
   10bbc:	bxeq	lr
   10bc0:	bx	r3
   10bc4:	ldrdeq	r5, [r2], -r0
   10bc8:	ldrdeq	r5, [r2], -r0
   10bcc:	andeq	r0, r0, r0
   10bd0:	push	{r4, lr}
   10bd4:	ldr	r4, [pc, #24]	; 10bf4 <getc@plt+0x168>
   10bd8:	ldrb	r3, [r4]
   10bdc:	cmp	r3, #0
   10be0:	popne	{r4, pc}
   10be4:	bl	10b68 <getc@plt+0xdc>
   10be8:	mov	r3, #1
   10bec:	strb	r3, [r4]
   10bf0:	pop	{r4, pc}
   10bf4:	ldrdeq	r5, [r2], -r0
   10bf8:	ldr	r0, [pc, #40]	; 10c28 <getc@plt+0x19c>
   10bfc:	ldr	r3, [r0]
   10c00:	cmp	r3, #0
   10c04:	bne	10c0c <getc@plt+0x180>
   10c08:	b	10b98 <getc@plt+0x10c>
   10c0c:	ldr	r3, [pc, #24]	; 10c2c <getc@plt+0x1a0>
   10c10:	cmp	r3, #0
   10c14:	beq	10c08 <getc@plt+0x17c>
   10c18:	push	{r4, lr}
   10c1c:	blx	r3
   10c20:	pop	{r4, lr}
   10c24:	b	10b98 <getc@plt+0x10c>
   10c28:	andeq	r4, r2, r0, asr #21
   10c2c:	andeq	r0, r0, r0
   10c30:	push	{r4, r5, r6, r7, r8, lr}
   10c34:	mov	r1, r0
   10c38:	ldr	r4, [pc, #48]	; 10c70 <getc@plt+0x1e4>
   10c3c:	ldr	r3, [pc, #48]	; 10c74 <getc@plt+0x1e8>
   10c40:	add	r4, pc, r4
   10c44:	ldr	r5, [r4, r3]
   10c48:	mov	r0, r5
   10c4c:	ldm	r5, {r6, r7}
   10c50:	bl	1111c <getc@plt+0x690>
   10c54:	ldm	r5, {r1, r2}
   10c58:	ldr	r3, [pc, #24]	; 10c78 <getc@plt+0x1ec>
   10c5c:	sub	r2, r2, r7
   10c60:	ldr	r0, [r4, r3]
   10c64:	sub	r1, r1, r6
   10c68:	pop	{r4, r5, r6, r7, r8, lr}
   10c6c:	b	11a58 <getc@plt+0xfcc>
   10c70:			; <UNDEFINED> instruction: 0x000143b8
   10c74:	muleq	r0, r4, r0
   10c78:	andeq	r0, r0, r8, lsr #1
   10c7c:	push	{r4, r5, lr}
   10c80:	sub	sp, sp, #36	; 0x24
   10c84:	ldr	r4, [pc, #188]	; 10d48 <getc@plt+0x2bc>
   10c88:	ldr	r3, [pc, #188]	; 10d4c <getc@plt+0x2c0>
   10c8c:	add	r4, pc, r4
   10c90:	add	r2, sp, #24
   10c94:	ldr	r5, [r4, r3]
   10c98:	add	r1, sp, #16
   10c9c:	mov	r0, r5
   10ca0:	bl	11aa4 <getc@plt+0x1018>
   10ca4:	ldr	r0, [pc, #164]	; 10d50 <getc@plt+0x2c4>
   10ca8:	ldr	r1, [r5, #12]
   10cac:	add	r0, pc, r0
   10cb0:	bl	10924 <printf@plt>
   10cb4:	ldr	r3, [pc, #152]	; 10d54 <getc@plt+0x2c8>
   10cb8:	ldr	r0, [pc, #152]	; 10d58 <getc@plt+0x2cc>
   10cbc:	ldr	r4, [r4, r3]
   10cc0:	add	r0, pc, r0
   10cc4:	ldr	r1, [r4]
   10cc8:	bl	10924 <printf@plt>
   10ccc:	ldr	r0, [pc, #136]	; 10d5c <getc@plt+0x2d0>
   10cd0:	ldr	r1, [r4, #4]
   10cd4:	add	r0, pc, r0
   10cd8:	bl	10924 <printf@plt>
   10cdc:	ldm	r4, {r2, r3}
   10ce0:	vldr	d5, [pc, #88]	; 10d40 <getc@plt+0x2b4>
   10ce4:	ldr	r0, [pc, #116]	; 10d60 <getc@plt+0x2d4>
   10ce8:	sub	r3, r2, r3
   10cec:	vmov	s15, r2
   10cf0:	vmov	s14, r3
   10cf4:	add	r0, pc, r0
   10cf8:	vcvt.f64.s32	d6, s15
   10cfc:	vcvt.f64.s32	d7, s14
   10d00:	vmul.f64	d7, d7, d5
   10d04:	vdiv.f64	d5, d7, d6
   10d08:	vmov	r2, r3, d5
   10d0c:	bl	10924 <printf@plt>
   10d10:	ldrd	r4, [sp, #24]
   10d14:	ldr	r1, [pc, #72]	; 10d64 <getc@plt+0x2d8>
   10d18:	ldr	r0, [pc, #72]	; 10d68 <getc@plt+0x2dc>
   10d1c:	add	r1, pc, r1
   10d20:	ldrd	r2, [sp, #16]
   10d24:	strd	r4, [sp]
   10d28:	str	r1, [sp, #8]
   10d2c:	add	r0, pc, r0
   10d30:	bl	10924 <printf@plt>
   10d34:	add	sp, sp, #36	; 0x24
   10d38:	pop	{r4, r5, pc}
   10d3c:	nop			; (mov r0, r0)
   10d40:	andeq	r0, r0, r0
   10d44:	subsmi	r0, r9, r0
   10d48:	andeq	r4, r1, ip, ror #6
   10d4c:	andeq	r0, r0, r8, lsr #1
   10d50:	andeq	r2, r0, r4, ror #8
   10d54:	muleq	r0, r4, r0
   10d58:	andeq	r2, r0, r8, ror #8
   10d5c:	andeq	r2, r0, r8, ror #8
   10d60:	andeq	r2, r0, r8, asr r4
   10d64:	andeq	r2, r0, ip, asr r4
   10d68:	andeq	r2, r0, r4, lsr r4
   10d6c:	andeq	r0, r0, r0
   10d70:	push	{r4, r5, r6, lr}
   10d74:	mov	r6, r2
   10d78:	ldr	r4, [pc, #84]	; 10dd4 <getc@plt+0x348>
   10d7c:	mov	r2, r0
   10d80:	add	r4, pc, r4
   10d84:	mov	r5, r1
   10d88:	mov	r0, r4
   10d8c:	mov	r1, #99	; 0x63
   10d90:	bl	10954 <fgets@plt>
   10d94:	cmp	r0, #0
   10d98:	beq	10db8 <getc@plt+0x32c>
   10d9c:	ldr	r1, [pc, #52]	; 10dd8 <getc@plt+0x34c>
   10da0:	mov	r0, r4
   10da4:	mov	r2, r5
   10da8:	add	r1, pc, r1
   10dac:	bl	10a38 <__isoc99_sscanf@plt>
   10db0:	cmp	r0, #1
   10db4:	beq	10dc0 <getc@plt+0x334>
   10db8:	mov	r0, #0
   10dbc:	pop	{r4, r5, r6, pc}
   10dc0:	ldr	r2, [r5]
   10dc4:	ldr	r3, [r6]
   10dc8:	add	r3, r3, r2
   10dcc:	str	r3, [r6]
   10dd0:	pop	{r4, r5, r6, pc}
   10dd4:	andeq	r4, r1, ip, asr #6
   10dd8:	andeq	r2, r0, ip, asr r4
   10ddc:	push	{r4, r5, lr}
   10de0:	mov	r2, r0
   10de4:	ldr	r5, [pc, #156]	; 10e88 <getc@plt+0x3fc>
   10de8:	sub	sp, sp, #28
   10dec:	add	r5, pc, r5
   10df0:	mov	r4, r1
   10df4:	mov	r0, r5
   10df8:	mov	r1, #99	; 0x63
   10dfc:	bl	10954 <fgets@plt>
   10e00:	cmp	r0, #0
   10e04:	beq	10e38 <getc@plt+0x3ac>
   10e08:	add	r3, sp, #20
   10e0c:	ldr	r1, [pc, #120]	; 10e8c <getc@plt+0x400>
   10e10:	str	r3, [sp, #4]
   10e14:	add	r3, sp, #16
   10e18:	str	r3, [sp]
   10e1c:	mov	r0, r5
   10e20:	add	r3, sp, #12
   10e24:	add	r2, sp, #8
   10e28:	add	r1, pc, r1
   10e2c:	bl	10a38 <__isoc99_sscanf@plt>
   10e30:	cmp	r0, #4
   10e34:	beq	10e44 <getc@plt+0x3b8>
   10e38:	mov	r0, #0
   10e3c:	add	sp, sp, #28
   10e40:	pop	{r4, r5, pc}
   10e44:	ldr	ip, [r4]
   10e48:	ldr	lr, [sp, #8]
   10e4c:	ldr	r1, [r4, #4]
   10e50:	ldr	r0, [sp, #12]
   10e54:	ldr	r2, [r4, #8]
   10e58:	ldr	r3, [r4, #12]
   10e5c:	add	ip, ip, lr
   10e60:	ldr	r5, [sp, #16]
   10e64:	ldr	lr, [sp, #20]
   10e68:	add	r1, r1, r0
   10e6c:	add	r2, r2, r5
   10e70:	add	r3, r3, lr
   10e74:	mov	r0, #1
   10e78:	str	ip, [r4]
   10e7c:	stmib	r4, {r1, r2, r3}
   10e80:	add	sp, sp, #28
   10e84:	pop	{r4, r5, pc}
   10e88:	andeq	r4, r1, r0, ror #5
   10e8c:	ldrdeq	r2, [r0], -r0
   10e90:	push	{r4, r5, r6, lr}
   10e94:	mov	r6, r2
   10e98:	ldr	r4, [pc, #68]	; 10ee4 <getc@plt+0x458>
   10e9c:	mov	r2, r0
   10ea0:	add	r4, pc, r4
   10ea4:	mov	r5, r1
   10ea8:	mov	r0, r4
   10eac:	mov	r1, #99	; 0x63
   10eb0:	bl	10954 <fgets@plt>
   10eb4:	cmp	r0, #0
   10eb8:	popeq	{r4, r5, r6, pc}
   10ebc:	ldr	r1, [pc, #36]	; 10ee8 <getc@plt+0x45c>
   10ec0:	mov	r3, r6
   10ec4:	mov	r2, r5
   10ec8:	mov	r0, r4
   10ecc:	add	r1, pc, r1
   10ed0:	bl	10a38 <__isoc99_sscanf@plt>
   10ed4:	sub	r0, r0, #2
   10ed8:	clz	r0, r0
   10edc:	lsr	r0, r0, #5
   10ee0:	pop	{r4, r5, r6, pc}
   10ee4:	andeq	r4, r1, ip, lsr #4
   10ee8:	andeq	r2, r0, r4, lsr r3
   10eec:	sub	sp, sp, #8
   10ef0:	cmp	r2, #0
   10ef4:	str	r1, [sp, #4]
   10ef8:	beq	10f2c <getc@plt+0x4a0>
   10efc:	vldr	s15, [sp, #4]
   10f00:	vldr	d5, [pc, #64]	; 10f48 <getc@plt+0x4bc>
   10f04:	vmov	s13, r2
   10f08:	ldr	r1, [pc, #64]	; 10f50 <getc@plt+0x4c4>
   10f0c:	vcvt.f64.s32	d7, s15
   10f10:	add	r1, pc, r1
   10f14:	vcvt.f64.s32	d6, s13
   10f18:	vmul.f64	d7, d7, d5
   10f1c:	vdiv.f64	d5, d7, d6
   10f20:	vmov	r2, r3, d5
   10f24:	add	sp, sp, #8
   10f28:	b	10a20 <fprintf@plt>
   10f2c:	mov	r3, r0
   10f30:	ldr	r0, [pc, #28]	; 10f54 <getc@plt+0x4c8>
   10f34:	mov	r2, #8
   10f38:	mov	r1, #1
   10f3c:	add	r0, pc, r0
   10f40:	add	sp, sp, #8
   10f44:	b	109a8 <fwrite@plt>
   10f48:	andeq	r0, r0, r0
   10f4c:	subsmi	r0, r9, r0
   10f50:	andeq	r2, r0, r4, lsl #6
   10f54:	andeq	r2, r0, ip, asr #5
   10f58:	ldr	r2, [r0, #12]
   10f5c:	ldr	r3, [r1, #12]
   10f60:	cmp	r2, r3
   10f64:	beq	10f70 <getc@plt+0x4e4>
   10f68:	sub	r0, r3, r2
   10f6c:	bx	lr
   10f70:	ldr	r2, [r0, #16]
   10f74:	ldr	r3, [r1, #16]
   10f78:	cmp	r2, r3
   10f7c:	bne	10f68 <getc@plt+0x4dc>
   10f80:	ldr	r1, [r1, #8]
   10f84:	ldr	r0, [r0, #8]
   10f88:	b	121a0 <getc@plt+0x1714>
   10f8c:	push	{r4, r5, r6, r7, lr}
   10f90:	mov	r4, r1
   10f94:	mov	r6, r2
   10f98:	mov	r7, r3
   10f9c:	ldm	r1, {r2, r3}
   10fa0:	ldr	r1, [pc, #120]	; 11020 <getc@plt+0x594>
   10fa4:	sub	sp, sp, #20
   10fa8:	add	r1, pc, r1
   10fac:	mov	r5, r0
   10fb0:	bl	10a20 <fprintf@plt>
   10fb4:	ldr	r2, [r4]
   10fb8:	ldr	r1, [r4, #4]
   10fbc:	mov	r0, r5
   10fc0:	sub	r1, r2, r1
   10fc4:	bl	10eec <getc@plt+0x460>
   10fc8:	cmp	r6, #0
   10fcc:	beq	10fec <getc@plt+0x560>
   10fd0:	ldr	r1, [pc, #76]	; 11024 <getc@plt+0x598>
   10fd4:	mov	r2, r6
   10fd8:	mov	r0, r5
   10fdc:	add	r1, pc, r1
   10fe0:	bl	10a20 <fprintf@plt>
   10fe4:	add	sp, sp, #20
   10fe8:	pop	{r4, r5, r6, r7, pc}
   10fec:	add	r4, sp, #4
   10ff0:	mov	r1, r7
   10ff4:	mov	r0, r6
   10ff8:	mov	r2, r4
   10ffc:	mov	r3, #1
   11000:	bl	12bf8 <error@@Base+0x868>
   11004:	ldr	r1, [pc, #28]	; 11028 <getc@plt+0x59c>
   11008:	mov	r2, r4
   1100c:	mov	r0, r5
   11010:	add	r1, pc, r1
   11014:	bl	10a20 <fprintf@plt>
   11018:	add	sp, sp, #20
   1101c:	pop	{r4, r5, r6, r7, pc}
   11020:	andeq	r2, r0, r4, ror r2
   11024:	strdeq	r2, [r0], -r0
   11028:	andeq	r2, r0, r8, lsl r2
   1102c:	push	{r4, r5, r6, r7, r8, lr}
   11030:	mov	r5, r0
   11034:	mov	r0, r1
   11038:	mov	r7, r2
   1103c:	mov	r6, r3
   11040:	mov	r4, r1
   11044:	bl	12028 <getc@plt+0x159c>
   11048:	add	r1, r5, r4, lsl #3
   1104c:	add	r1, r1, #8192	; 0x2000
   11050:	sxth	r0, r0
   11054:	add	r0, r5, r0, lsl #3
   11058:	ldr	r2, [r0, #68]	; 0x44
   1105c:	ldr	r3, [r0, #72]	; 0x48
   11060:	add	r2, r2, r7
   11064:	add	r3, r3, r6
   11068:	str	r2, [r0, #68]	; 0x44
   1106c:	str	r3, [r0, #72]	; 0x48
   11070:	ldr	r2, [r5, #2116]	; 0x844
   11074:	ldr	r3, [r5, #2120]	; 0x848
   11078:	add	r2, r2, r7
   1107c:	add	r3, r3, r6
   11080:	str	r2, [r5, #2116]	; 0x844
   11084:	str	r3, [r5, #2120]	; 0x848
   11088:	ldr	ip, [r1, #1988]	; 0x7c4
   1108c:	ldr	r0, [r1, #1992]	; 0x7c8
   11090:	add	r2, ip, r7
   11094:	add	r3, r0, r6
   11098:	str	r2, [r1, #1988]	; 0x7c4
   1109c:	str	r3, [r1, #1992]	; 0x7c8
   110a0:	pop	{r4, r5, r6, r7, r8, pc}
   110a4:	add	r0, r0, #2112	; 0x840
   110a8:	push	{r4, r5, r6, r7, r8, lr}
   110ac:	add	r4, r0, #12
   110b0:	mov	r0, r4
   110b4:	mov	r6, r2
   110b8:	mov	r5, r3
   110bc:	mov	r7, r1
   110c0:	bl	11cc0 <getc@plt+0x1234>
   110c4:	cmp	r0, #0
   110c8:	beq	110e8 <getc@plt+0x65c>
   110cc:	ldr	ip, [r0, #12]
   110d0:	ldr	r1, [r0, #16]
   110d4:	add	r2, ip, r6
   110d8:	add	r3, r1, r5
   110dc:	str	r2, [r0, #12]
   110e0:	str	r3, [r0, #16]
   110e4:	pop	{r4, r5, r6, r7, r8, pc}
   110e8:	mov	r1, #20
   110ec:	mov	r0, #1
   110f0:	bl	123e8 <error@@Base+0x58>
   110f4:	mov	r8, r0
   110f8:	mov	r0, r7
   110fc:	bl	1096c <strdup@plt>
   11100:	str	r6, [r8, #12]
   11104:	str	r5, [r8, #16]
   11108:	mov	r1, r8
   1110c:	str	r0, [r8, #8]
   11110:	mov	r0, r4
   11114:	pop	{r4, r5, r6, r7, r8, lr}
   11118:	b	11d44 <getc@plt+0x12b8>
   1111c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11120:	mov	r8, r1
   11124:	ldr	r1, [pc, #868]	; 11490 <getc@plt+0xa04>
   11128:	sub	sp, sp, #28
   1112c:	add	r1, pc, r1
   11130:	mov	r5, r0
   11134:	mov	r0, r8
   11138:	bl	124a0 <error@@Base+0x110>
   1113c:	ldr	r6, [pc, #848]	; 11494 <getc@plt+0xa08>
   11140:	mov	r1, #99	; 0x63
   11144:	add	r6, pc, r6
   11148:	mov	r2, r0
   1114c:	mov	r4, r0
   11150:	mov	r0, r6
   11154:	bl	10954 <fgets@plt>
   11158:	cmp	r0, #0
   1115c:	beq	1146c <getc@plt+0x9e0>
   11160:	ldr	r1, [pc, #816]	; 11498 <getc@plt+0xa0c>
   11164:	mov	r2, #40	; 0x28
   11168:	add	r1, pc, r1
   1116c:	mov	r0, r6
   11170:	bl	10a74 <strncmp@plt>
   11174:	cmp	r0, #0
   11178:	bne	1146c <getc@plt+0x9e0>
   1117c:	mov	r2, r4
   11180:	mov	r1, #99	; 0x63
   11184:	mov	r0, r6
   11188:	bl	10954 <fgets@plt>
   1118c:	cmp	r0, #0
   11190:	beq	1146c <getc@plt+0x9e0>
   11194:	ldr	r1, [pc, #768]	; 1149c <getc@plt+0xa10>
   11198:	mov	r0, r6
   1119c:	add	r1, pc, r1
   111a0:	bl	10918 <strcmp@plt>
   111a4:	cmp	r0, #0
   111a8:	bne	1146c <getc@plt+0x9e0>
   111ac:	mov	r2, r5
   111b0:	add	r1, sp, #4
   111b4:	mov	r0, r4
   111b8:	bl	10d70 <getc@plt+0x2e4>
   111bc:	cmp	r0, #0
   111c0:	beq	1146c <getc@plt+0x9e0>
   111c4:	add	r2, r5, #4
   111c8:	add	r1, sp, #8
   111cc:	mov	r0, r4
   111d0:	bl	10d70 <getc@plt+0x2e4>
   111d4:	cmp	r0, #0
   111d8:	beq	1146c <getc@plt+0x9e0>
   111dc:	mov	r2, r4
   111e0:	mov	r1, #99	; 0x63
   111e4:	mov	r0, r6
   111e8:	bl	10954 <fgets@plt>
   111ec:	cmp	r0, #0
   111f0:	beq	1146c <getc@plt+0x9e0>
   111f4:	mov	r0, r6
   111f8:	mov	r2, r4
   111fc:	mov	r1, #99	; 0x63
   11200:	bl	10954 <fgets@plt>
   11204:	cmp	r0, #0
   11208:	beq	1146c <getc@plt+0x9e0>
   1120c:	add	r6, sp, #12
   11210:	mov	r1, r6
   11214:	add	r2, r5, #8
   11218:	mov	r0, r4
   1121c:	bl	10d70 <getc@plt+0x2e4>
   11220:	cmp	r0, #0
   11224:	beq	1146c <getc@plt+0x9e0>
   11228:	add	r2, r5, #12
   1122c:	mov	r1, r6
   11230:	mov	r0, r4
   11234:	bl	10d70 <getc@plt+0x2e4>
   11238:	cmp	r0, #0
   1123c:	beq	1146c <getc@plt+0x9e0>
   11240:	add	r2, r5, #16
   11244:	mov	r1, r6
   11248:	mov	r0, r4
   1124c:	bl	10d70 <getc@plt+0x2e4>
   11250:	cmp	r0, #0
   11254:	beq	1146c <getc@plt+0x9e0>
   11258:	ldr	r7, [pc, #576]	; 114a0 <getc@plt+0xa14>
   1125c:	mov	r2, r4
   11260:	add	r7, pc, r7
   11264:	mov	r0, r7
   11268:	mov	r1, #99	; 0x63
   1126c:	bl	10954 <fgets@plt>
   11270:	cmp	r0, #0
   11274:	beq	1146c <getc@plt+0x9e0>
   11278:	mov	r2, r4
   1127c:	mov	r1, #99	; 0x63
   11280:	mov	r0, r7
   11284:	bl	10954 <fgets@plt>
   11288:	cmp	r0, #0
   1128c:	beq	1146c <getc@plt+0x9e0>
   11290:	mov	r2, r4
   11294:	mov	r1, #99	; 0x63
   11298:	mov	r0, r7
   1129c:	bl	10954 <fgets@plt>
   112a0:	cmp	r0, #0
   112a4:	beq	1146c <getc@plt+0x9e0>
   112a8:	mov	r2, r4
   112ac:	mov	r1, #99	; 0x63
   112b0:	mov	r0, r7
   112b4:	bl	10954 <fgets@plt>
   112b8:	cmp	r0, #0
   112bc:	beq	1146c <getc@plt+0x9e0>
   112c0:	add	r1, r5, #20
   112c4:	mov	r0, r4
   112c8:	bl	10ddc <getc@plt+0x350>
   112cc:	cmp	r0, #0
   112d0:	beq	1146c <getc@plt+0x9e0>
   112d4:	add	r1, r5, #36	; 0x24
   112d8:	mov	r0, r4
   112dc:	bl	10ddc <getc@plt+0x350>
   112e0:	cmp	r0, #0
   112e4:	beq	1146c <getc@plt+0x9e0>
   112e8:	add	r1, r5, #52	; 0x34
   112ec:	mov	r0, r4
   112f0:	bl	10ddc <getc@plt+0x350>
   112f4:	cmp	r0, #0
   112f8:	beq	1146c <getc@plt+0x9e0>
   112fc:	mov	r2, r4
   11300:	mov	r1, #99	; 0x63
   11304:	mov	r0, r7
   11308:	bl	10954 <fgets@plt>
   1130c:	cmp	r0, #0
   11310:	beq	1146c <getc@plt+0x9e0>
   11314:	mov	r8, #99	; 0x63
   11318:	b	11328 <getc@plt+0x89c>
   1131c:	ldrb	r3, [r7]
   11320:	cmp	r3, #10
   11324:	beq	11340 <getc@plt+0x8b4>
   11328:	mov	r2, r4
   1132c:	mov	r1, r8
   11330:	mov	r0, r7
   11334:	bl	10954 <fgets@plt>
   11338:	cmp	r0, #0
   1133c:	bne	1131c <getc@plt+0x890>
   11340:	ldr	r3, [sp, #8]
   11344:	cmp	r3, #0
   11348:	ble	113a8 <getc@plt+0x91c>
   1134c:	ldr	r0, [pc, #336]	; 114a4 <getc@plt+0xa18>
   11350:	mov	r2, r4
   11354:	mov	r1, #99	; 0x63
   11358:	add	r0, pc, r0
   1135c:	bl	10954 <fgets@plt>
   11360:	cmp	r0, #0
   11364:	beq	113a8 <getc@plt+0x91c>
   11368:	ldr	r8, [pc, #312]	; 114a8 <getc@plt+0xa1c>
   1136c:	add	r7, sp, #16
   11370:	add	r8, pc, r8
   11374:	add	r8, r8, #20
   11378:	b	11390 <getc@plt+0x904>
   1137c:	ldr	r3, [sp, #16]
   11380:	ldr	r2, [sp, #12]
   11384:	mov	r1, r8
   11388:	mov	r0, r5
   1138c:	bl	110a4 <getc@plt+0x618>
   11390:	mov	r2, r7
   11394:	mov	r1, r6
   11398:	mov	r0, r4
   1139c:	bl	10e90 <getc@plt+0x404>
   113a0:	cmp	r0, #0
   113a4:	bne	1137c <getc@plt+0x8f0>
   113a8:	ldr	r3, [sp, #4]
   113ac:	cmp	r3, #0
   113b0:	ble	1145c <getc@plt+0x9d0>
   113b4:	ldr	r0, [pc, #240]	; 114ac <getc@plt+0xa20>
   113b8:	mov	r2, r4
   113bc:	mov	r1, #99	; 0x63
   113c0:	add	r0, pc, r0
   113c4:	bl	10954 <fgets@plt>
   113c8:	cmp	r0, #0
   113cc:	beq	1145c <getc@plt+0x9d0>
   113d0:	ldr	r8, [pc, #216]	; 114b0 <getc@plt+0xa24>
   113d4:	ldr	r9, [pc, #216]	; 114b4 <getc@plt+0xa28>
   113d8:	add	r8, pc, r8
   113dc:	add	r7, sp, #16
   113e0:	add	fp, r8, #31
   113e4:	add	sl, sp, #20
   113e8:	add	r9, pc, r9
   113ec:	b	1140c <getc@plt+0x980>
   113f0:	mov	r3, #10
   113f4:	mov	r1, r3
   113f8:	str	r3, [sp, #20]
   113fc:	ldr	r3, [sp, #16]
   11400:	ldr	r2, [sp, #12]
   11404:	mov	r0, r5
   11408:	bl	1102c <getc@plt+0x5a0>
   1140c:	mov	r2, r7
   11410:	mov	r1, r6
   11414:	mov	r0, r4
   11418:	bl	10e90 <getc@plt+0x404>
   1141c:	cmp	r0, #0
   11420:	beq	1145c <getc@plt+0x9d0>
   11424:	ldrb	r3, [r8, #31]
   11428:	cmp	r3, #125	; 0x7d
   1142c:	beq	11450 <getc@plt+0x9c4>
   11430:	cmp	r3, #92	; 0x5c
   11434:	beq	113f0 <getc@plt+0x964>
   11438:	mov	r1, r9
   1143c:	mov	r2, sl
   11440:	mov	r0, fp
   11444:	bl	10a38 <__isoc99_sscanf@plt>
   11448:	ldr	r1, [sp, #20]
   1144c:	b	113fc <getc@plt+0x970>
   11450:	ldrb	r1, [r8, #30]
   11454:	str	r1, [sp, #20]
   11458:	b	113fc <getc@plt+0x970>
   1145c:	mov	r0, r4
   11460:	bl	12234 <getc@plt+0x17a8>
   11464:	add	sp, sp, #28
   11468:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1146c:	cmp	r8, #0
   11470:	beq	11484 <getc@plt+0x9f8>
   11474:	ldr	r0, [pc, #60]	; 114b8 <getc@plt+0xa2c>
   11478:	mov	r1, r8
   1147c:	add	r0, pc, r0
   11480:	bl	12440 <error@@Base+0xb0>
   11484:	ldr	r8, [pc, #48]	; 114bc <getc@plt+0xa30>
   11488:	add	r8, pc, r8
   1148c:	b	11474 <getc@plt+0x9e8>
   11490:	andeq	r2, r0, r0, lsl r1
   11494:	andeq	r3, r1, r8, lsl #31
   11498:	ldrdeq	r2, [r0], -r8
   1149c:	ldrdeq	r2, [r0], -r0
   114a0:	andeq	r3, r1, ip, ror #28
   114a4:	andeq	r3, r1, r4, ror sp
   114a8:	andeq	r3, r1, ip, asr sp
   114ac:	andeq	r3, r1, ip, lsl #26
   114b0:	strdeq	r3, [r1], -r4
   114b4:			; <UNDEFINED> instruction: 0x00001eb0
   114b8:	andeq	r1, r0, r0, lsr #28
   114bc:	andeq	r1, r0, ip, lsr #27
   114c0:	mov	r3, r1
   114c4:	ldr	r1, [pc, #832]	; 1180c <getc@plt+0xd80>
   114c8:	push	{r4, r5, r6, r7, r8, lr}
   114cc:	add	r1, pc, r1
   114d0:	sub	sp, sp, #16
   114d4:	mov	r6, r0
   114d8:	mov	r0, r3
   114dc:	bl	124a0 <error@@Base+0x110>
   114e0:	ldr	r3, [pc, #808]	; 11810 <getc@plt+0xd84>
   114e4:	ldr	r2, [pc, #808]	; 11814 <getc@plt+0xd88>
   114e8:	ldr	r1, [pc, #808]	; 11818 <getc@plt+0xd8c>
   114ec:	add	r3, pc, r3
   114f0:	add	r2, pc, r2
   114f4:	add	r1, pc, r1
   114f8:	ldr	r4, [pc, #796]	; 1181c <getc@plt+0xd90>
   114fc:	add	r5, r6, #68	; 0x44
   11500:	add	r4, pc, r4
   11504:	mov	r7, r0
   11508:	bl	10a20 <fprintf@plt>
   1150c:	ldr	r3, [pc, #780]	; 11820 <getc@plt+0xd94>
   11510:	mov	r1, r4
   11514:	ldr	r2, [r6]
   11518:	add	r3, pc, r3
   1151c:	mov	r0, r7
   11520:	bl	10a20 <fprintf@plt>
   11524:	ldr	r3, [pc, #760]	; 11824 <getc@plt+0xd98>
   11528:	mov	r1, r4
   1152c:	add	r3, pc, r3
   11530:	ldr	r2, [r6, #4]
   11534:	mov	r0, r7
   11538:	bl	10a20 <fprintf@plt>
   1153c:	ldr	r2, [r6]
   11540:	ldr	r1, [r6, #4]
   11544:	mov	r0, r7
   11548:	sub	r1, r2, r1
   1154c:	bl	10eec <getc@plt+0x460>
   11550:	ldr	r1, [pc, #720]	; 11828 <getc@plt+0xd9c>
   11554:	mov	r0, r7
   11558:	add	r1, pc, r1
   1155c:	bl	10a20 <fprintf@plt>
   11560:	ldr	r3, [pc, #708]	; 1182c <getc@plt+0xda0>
   11564:	mov	r1, r4
   11568:	ldr	r2, [r6, #8]
   1156c:	add	r3, pc, r3
   11570:	mov	r0, r7
   11574:	bl	10a20 <fprintf@plt>
   11578:	ldr	r3, [pc, #688]	; 11830 <getc@plt+0xda4>
   1157c:	mov	r1, r4
   11580:	ldr	r2, [r6, #12]
   11584:	add	r3, pc, r3
   11588:	mov	r0, r7
   1158c:	bl	10a20 <fprintf@plt>
   11590:	ldr	r3, [pc, #668]	; 11834 <getc@plt+0xda8>
   11594:	mov	r1, r4
   11598:	ldr	r2, [r6, #16]
   1159c:	add	r3, pc, r3
   115a0:	mov	r0, r7
   115a4:	bl	10a20 <fprintf@plt>
   115a8:	ldr	r3, [r6, #12]
   115ac:	ldr	r1, [r6, #8]
   115b0:	ldr	r2, [r6]
   115b4:	add	r1, r1, r3
   115b8:	mov	r0, r7
   115bc:	bl	10eec <getc@plt+0x460>
   115c0:	ldr	r1, [pc, #624]	; 11838 <getc@plt+0xdac>
   115c4:	mov	r0, r7
   115c8:	add	r1, pc, r1
   115cc:	bl	10a20 <fprintf@plt>
   115d0:	ldr	r2, [r6]
   115d4:	ldr	r1, [r6, #48]	; 0x30
   115d8:	mov	r0, r7
   115dc:	sub	r1, r2, r1
   115e0:	bl	10eec <getc@plt+0x460>
   115e4:	ldr	r1, [pc, #592]	; 1183c <getc@plt+0xdb0>
   115e8:	mov	r0, r7
   115ec:	add	r1, pc, r1
   115f0:	bl	10a20 <fprintf@plt>
   115f4:	ldr	r0, [pc, #580]	; 11840 <getc@plt+0xdb4>
   115f8:	mov	r3, r7
   115fc:	mov	r2, #37	; 0x25
   11600:	mov	r1, #1
   11604:	add	r0, pc, r0
   11608:	bl	109a8 <fwrite@plt>
   1160c:	ldr	r4, [pc, #560]	; 11844 <getc@plt+0xdb8>
   11610:	ldr	ip, [pc, #560]	; 11848 <getc@plt+0xdbc>
   11614:	ldr	r0, [r6, #32]
   11618:	ldr	r1, [r6, #28]
   1161c:	add	r4, pc, r4
   11620:	add	ip, pc, ip
   11624:	ldr	r3, [r6, #24]
   11628:	ldr	r2, [r6, #20]
   1162c:	str	r0, [sp, #4]
   11630:	str	r1, [sp]
   11634:	str	ip, [sp, #8]
   11638:	mov	r1, r4
   1163c:	mov	r0, r7
   11640:	bl	10a20 <fprintf@plt>
   11644:	ldr	ip, [pc, #512]	; 1184c <getc@plt+0xdc0>
   11648:	ldr	r0, [r6, #48]	; 0x30
   1164c:	ldr	r1, [r6, #44]	; 0x2c
   11650:	add	ip, pc, ip
   11654:	ldr	r3, [r6, #40]	; 0x28
   11658:	ldr	r2, [r6, #36]	; 0x24
   1165c:	str	r0, [sp, #4]
   11660:	str	r1, [sp]
   11664:	str	ip, [sp, #8]
   11668:	mov	r1, r4
   1166c:	mov	r0, r7
   11670:	bl	10a20 <fprintf@plt>
   11674:	ldr	lr, [r6, #64]	; 0x40
   11678:	ldr	r0, [r6, #60]	; 0x3c
   1167c:	ldr	ip, [pc, #460]	; 11850 <getc@plt+0xdc4>
   11680:	ldr	r3, [r6, #56]	; 0x38
   11684:	add	ip, pc, ip
   11688:	ldr	r2, [r6, #52]	; 0x34
   1168c:	mov	r1, r4
   11690:	stm	sp, {r0, lr}
   11694:	str	ip, [sp, #8]
   11698:	mov	r0, r7
   1169c:	bl	10a20 <fprintf@plt>
   116a0:	ldr	r1, [pc, #428]	; 11854 <getc@plt+0xdc8>
   116a4:	mov	r0, r7
   116a8:	add	r1, pc, r1
   116ac:	bl	10a20 <fprintf@plt>
   116b0:	mov	r4, #0
   116b4:	mov	r8, r4
   116b8:	ldr	r3, [r5]
   116bc:	mov	r0, r4
   116c0:	cmp	r3, #0
   116c4:	add	r4, r4, #1
   116c8:	ble	116e4 <getc@plt+0xc58>
   116cc:	bl	12064 <getc@plt+0x15d8>
   116d0:	mov	r3, r8
   116d4:	mov	r1, r5
   116d8:	mov	r2, r0
   116dc:	mov	r0, r7
   116e0:	bl	10f8c <getc@plt+0x500>
   116e4:	cmp	r4, #256	; 0x100
   116e8:	add	r5, r5, #8
   116ec:	bne	116b8 <getc@plt+0xc2c>
   116f0:	ldr	r2, [pc, #352]	; 11858 <getc@plt+0xdcc>
   116f4:	add	r4, r6, #2112	; 0x840
   116f8:	mov	r3, #0
   116fc:	add	r1, r4, #4
   11700:	add	r2, pc, r2
   11704:	mov	r0, r7
   11708:	bl	10f8c <getc@plt+0x500>
   1170c:	ldr	r3, [r6, #4]
   11710:	cmp	r3, #0
   11714:	ble	1179c <getc@plt+0xd10>
   11718:	add	r0, r4, #12
   1171c:	bl	11e4c <getc@plt+0x13c0>
   11720:	add	r5, r6, #8192	; 0x2000
   11724:	ldr	r2, [pc, #304]	; 1185c <getc@plt+0xdd0>
   11728:	ldr	r1, [r5, #1980]	; 0x7bc
   1172c:	ldr	r0, [r5, #1984]	; 0x7c0
   11730:	add	r2, pc, r2
   11734:	bl	11a2c <getc@plt+0xfa0>
   11738:	ldr	r0, [pc, #288]	; 11860 <getc@plt+0xdd4>
   1173c:	mov	r3, r7
   11740:	mov	r2, #39	; 0x27
   11744:	mov	r1, #1
   11748:	add	r0, pc, r0
   1174c:	bl	109a8 <fwrite@plt>
   11750:	ldr	r3, [r5, #1984]	; 0x7c0
   11754:	cmp	r3, #0
   11758:	ble	1179c <getc@plt+0xd10>
   1175c:	ldr	r8, [pc, #256]	; 11864 <getc@plt+0xdd8>
   11760:	mov	r4, #0
   11764:	add	r8, pc, r8
   11768:	ldr	r3, [r5, #1980]	; 0x7bc
   1176c:	mov	r1, r8
   11770:	mov	r0, r7
   11774:	ldr	ip, [r3, r4, lsl #2]
   11778:	add	r4, r4, #1
   1177c:	ldr	r3, [ip, #16]
   11780:	ldr	r2, [ip, #12]
   11784:	ldr	ip, [ip, #8]
   11788:	str	ip, [sp]
   1178c:	bl	10a20 <fprintf@plt>
   11790:	ldr	r3, [r5, #1984]	; 0x7c0
   11794:	cmp	r3, r4
   11798:	bgt	11768 <getc@plt+0xcdc>
   1179c:	ldr	r3, [r6]
   117a0:	cmp	r3, #0
   117a4:	ble	117fc <getc@plt+0xd70>
   117a8:	ldr	r1, [pc, #184]	; 11868 <getc@plt+0xddc>
   117ac:	mov	r0, r7
   117b0:	add	r1, pc, r1
   117b4:	bl	10a20 <fprintf@plt>
   117b8:	add	r4, r6, #10176	; 0x27c0
   117bc:	mov	r5, #0
   117c0:	ldr	r8, [pc, #164]	; 1186c <getc@plt+0xde0>
   117c4:	add	r4, r4, #4
   117c8:	mov	r6, r5
   117cc:	ldr	ip, [r4]
   117d0:	mov	r3, r5
   117d4:	cmp	ip, #0
   117d8:	mov	r1, r4
   117dc:	mov	r2, r6
   117e0:	mov	r0, r7
   117e4:	add	r5, r5, #1
   117e8:	ble	117f0 <getc@plt+0xd64>
   117ec:	bl	10f8c <getc@plt+0x500>
   117f0:	cmp	r5, r8
   117f4:	add	r4, r4, #8
   117f8:	bne	117cc <getc@plt+0xd40>
   117fc:	mov	r0, r7
   11800:	add	sp, sp, #16
   11804:	pop	{r4, r5, r6, r7, r8, lr}
   11808:	b	12234 <getc@plt+0x17a8>
   1180c:	andeq	r1, r0, r4, ror #27
   11810:	andeq	r1, r0, r0, lsl #27
   11814:	andeq	r1, r0, r0, asr sp
   11818:	andeq	r1, r0, r0, asr #27
   1181c:	andeq	r1, r0, r8, asr #27
   11820:	andeq	r1, r0, r4, lsr #27
   11824:	andeq	r1, r0, r8, lsr #27
   11828:	andeq	r1, r0, r4, lsl #27
   1182c:	andeq	r1, r0, r0, lsl #27
   11830:	andeq	r1, r0, ip, ror sp
   11834:	andeq	r1, r0, r4, ror sp
   11838:	andeq	r1, r0, r4, asr sp
   1183c:	andeq	r1, r0, r8, asr #26
   11840:	andeq	r1, r0, r0, asr sp
   11844:	andeq	r1, r0, r0, ror #26
   11848:	andeq	r1, r0, r8, ror sp
   1184c:	andeq	r1, r0, r0, asr sp
   11850:	andeq	r1, r0, r8, lsr #26
   11854:	andeq	r1, r0, ip, lsl #26
   11858:	andeq	r1, r0, ip, lsr #25
   1185c:			; <UNDEFINED> instruction: 0xfffff820
   11860:	andeq	r1, r0, ip, lsl #25
   11864:	muleq	r0, r8, ip
   11868:	andeq	r1, r0, r4, lsl #24
   1186c:			; <UNDEFINED> instruction: 0x0010ffff
   11870:	ldr	r2, [pc, #420]	; 11a1c <getc@plt+0xf90>
   11874:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11878:	sub	sp, sp, #28
   1187c:	add	r2, pc, r2
   11880:	ldr	r9, [pc, #408]	; 11a20 <getc@plt+0xf94>
   11884:	ldr	r8, [pc, #408]	; 11a24 <getc@plt+0xf98>
   11888:	str	r2, [sp, #16]
   1188c:	ldr	r2, [pc, #404]	; 11a28 <getc@plt+0xf9c>
   11890:	add	r9, pc, r9
   11894:	add	r8, pc, r8
   11898:	add	r2, pc, r2
   1189c:	lsl	r3, r1, #2
   118a0:	str	r1, [sp, #12]
   118a4:	str	r2, [sp, #4]
   118a8:	str	r0, [sp, #8]
   118ac:	str	r3, [sp, #20]
   118b0:	ldr	r3, [sp, #16]
   118b4:	ldr	r2, [sp, #12]
   118b8:	ldr	r1, [r3]
   118bc:	ldr	r3, [sp, #8]
   118c0:	cmp	r3, r2
   118c4:	ldr	r7, [r1, r3, lsl #2]
   118c8:	bge	11a00 <getc@plt+0xf74>
   118cc:	ldr	r4, [sp, #8]
   118d0:	ldr	r5, [sp, #12]
   118d4:	lsl	r6, r5, #2
   118d8:	b	118e0 <getc@plt+0xe54>
   118dc:	ldr	r1, [r9]
   118e0:	ldr	r1, [r1, r6]
   118e4:	ldr	r3, [r9, #4]
   118e8:	mov	r0, r7
   118ec:	blx	r3
   118f0:	cmp	r0, #0
   118f4:	bge	1194c <getc@plt+0xec0>
   118f8:	sub	r5, r5, #1
   118fc:	cmp	r5, r4
   11900:	sub	r6, r6, #4
   11904:	bgt	118dc <getc@plt+0xe50>
   11908:	bne	11948 <getc@plt+0xebc>
   1190c:	ldr	r1, [r9]
   11910:	mov	fp, r5
   11914:	add	r0, r1, fp, lsl #2
   11918:	ldr	r3, [sp, #8]
   1191c:	sub	r1, fp, #1
   11920:	cmp	r3, r1
   11924:	str	r7, [r0]
   11928:	blt	119e4 <getc@plt+0xf58>
   1192c:	ldr	r2, [sp, #12]
   11930:	add	r3, r5, #1
   11934:	cmp	r3, r2
   11938:	str	r3, [sp, #8]
   1193c:	blt	118b0 <getc@plt+0xe24>
   11940:	add	sp, sp, #28
   11944:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11948:	lsl	r6, r5, #2
   1194c:	ldr	r3, [sp, #4]
   11950:	add	sl, r4, #1
   11954:	cmp	sl, r5
   11958:	ldr	r1, [r3]
   1195c:	add	r0, r1, r6
   11960:	ldr	r2, [r1, r6]
   11964:	str	r2, [r1, r4, lsl #2]
   11968:	lsl	r4, r4, #2
   1196c:	bge	119f0 <getc@plt+0xf64>
   11970:	add	fp, r4, #4
   11974:	b	1198c <getc@plt+0xf00>
   11978:	add	sl, sl, #1
   1197c:	cmp	sl, r5
   11980:	add	fp, fp, #4
   11984:	beq	119d0 <getc@plt+0xf44>
   11988:	ldr	r1, [r8]
   1198c:	ldr	r1, [r1, fp]
   11990:	ldr	r3, [r8, #4]
   11994:	mov	r0, r7
   11998:	blx	r3
   1199c:	cmp	r0, #0
   119a0:	bgt	11978 <getc@plt+0xeec>
   119a4:	ldr	r1, [r8]
   119a8:	mov	r4, sl
   119ac:	add	r0, r1, r6
   119b0:	sub	r5, r5, #1
   119b4:	ldr	r2, [r1, fp]
   119b8:	cmp	r5, sl
   119bc:	str	r2, [r0]
   119c0:	bgt	118d4 <getc@plt+0xe48>
   119c4:	mov	fp, r5
   119c8:	mov	r5, r4
   119cc:	b	11914 <getc@plt+0xe88>
   119d0:	ldr	r0, [r8]
   119d4:	mov	fp, sl
   119d8:	add	r0, r0, r6
   119dc:	mov	r5, fp
   119e0:	b	11918 <getc@plt+0xe8c>
   119e4:	mov	r0, r3
   119e8:	bl	11870 <getc@plt+0xde4>
   119ec:	b	1192c <getc@plt+0xea0>
   119f0:	beq	11a14 <getc@plt+0xf88>
   119f4:	lsl	fp, sl, #2
   119f8:	mov	r4, sl
   119fc:	b	119b0 <getc@plt+0xf24>
   11a00:	ldr	r3, [sp, #20]
   11a04:	mov	fp, r2
   11a08:	add	r0, r1, r3
   11a0c:	ldr	r5, [sp, #8]
   11a10:	b	11918 <getc@plt+0xe8c>
   11a14:	mov	fp, sl
   11a18:	b	119dc <getc@plt+0xf50>
   11a1c:			; <UNDEFINED> instruction: 0x000138b4
   11a20:	andeq	r3, r1, r0, lsr #17
   11a24:	muleq	r1, ip, r8
   11a28:	muleq	r1, r8, r8
   11a2c:	cmp	r0, #1
   11a30:	mov	ip, r1
   11a34:	bxle	lr
   11a38:	ldr	r3, [pc, #20]	; 11a54 <getc@plt+0xfc8>
   11a3c:	sub	r1, r0, #1
   11a40:	add	r3, pc, r3
   11a44:	mov	r0, #0
   11a48:	str	ip, [r3]
   11a4c:	str	r2, [r3, #4]
   11a50:	b	11870 <getc@plt+0xde4>
   11a54:	strdeq	r3, [r1], -r0
   11a58:	push	{r4, r5, r6, lr}
   11a5c:	mov	r4, r0
   11a60:	mov	r6, r1
   11a64:	mov	r0, #1
   11a68:	mov	r1, #32
   11a6c:	mov	r5, r2
   11a70:	bl	123e8 <error@@Base+0x58>
   11a74:	str	r5, [r0, #12]
   11a78:	str	r6, [r0, #8]
   11a7c:	ldr	r3, [r4, #28]
   11a80:	mov	r1, r0
   11a84:	ldr	r0, [r4, #24]
   11a88:	add	r2, r3, r5
   11a8c:	add	r0, r0, r6
   11a90:	str	r0, [r4, #24]
   11a94:	str	r2, [r4, #28]
   11a98:	mov	r0, r4
   11a9c:	pop	{r4, r5, r6, lr}
   11aa0:	b	12ed8 <error@@Base+0xb48>
   11aa4:	push	{r4, r5, r6, lr}
   11aa8:	sub	sp, sp, #24
   11aac:	ldr	r4, [r0]
   11ab0:	cmp	r4, #0
   11ab4:	beq	11c5c <getc@plt+0x11d0>
   11ab8:	mov	r3, r4
   11abc:	mov	lr, #0
   11ac0:	ldr	ip, [r3, #8]
   11ac4:	ldr	r3, [r3, #4]
   11ac8:	cmp	ip, #0
   11acc:	addgt	lr, lr, #1
   11ad0:	cmp	r3, #0
   11ad4:	bne	11ac0 <getc@plt+0x1034>
   11ad8:	cmp	lr, #1
   11adc:	ble	11c5c <getc@plt+0x11d0>
   11ae0:	ldr	r5, [r0, #24]
   11ae4:	ldr	r6, [r0, #28]
   11ae8:	vldr	d6, [pc, #376]	; 11c68 <getc@plt+0x11dc>
   11aec:	sub	r3, r5, r6
   11af0:	vmov	s15, r5
   11af4:	vmov	s14, r3
   11af8:	vldr	s7, [r0, #12]
   11afc:	vmov.f64	d0, d6
   11b00:	vcvt.f64.s32	d5, s15
   11b04:	vcvt.f64.s32	d7, s14
   11b08:	vmov	r3, s7
   11b0c:	vcvt.f64.s32	d2, s7
   11b10:	vldr	d4, [pc, #344]	; 11c70 <getc@plt+0x11e4>
   11b14:	mov	ip, r4
   11b18:	sub	r3, r3, #1
   11b1c:	vmov	s6, r3
   11b20:	vmul.f64	d7, d7, d6
   11b24:	vcvt.f64.s32	d3, s6
   11b28:	vdiv.f64	d1, d7, d5
   11b2c:	vstr	d1, [r0, #32]
   11b30:	vmul.f64	d1, d1, d2
   11b34:	ldr	lr, [ip, #8]
   11b38:	ldr	r3, [ip, #12]
   11b3c:	sub	lr, r5, lr
   11b40:	sub	r3, r6, r3
   11b44:	sub	r3, lr, r3
   11b48:	vmov	s15, lr
   11b4c:	vmov	s14, r3
   11b50:	vcvt.f64.s32	d6, s15
   11b54:	vcvt.f64.s32	d7, s14
   11b58:	vmul.f64	d7, d7, d0
   11b5c:	vdiv.f64	d5, d7, d6
   11b60:	vmov.f64	d7, d1
   11b64:	vmls.f64	d7, d3, d5
   11b68:	vstr	d5, [ip, #16]
   11b6c:	vadd.f64	d4, d4, d5
   11b70:	vstr	d7, [ip, #24]
   11b74:	ldr	ip, [ip, #4]
   11b78:	cmp	ip, #0
   11b7c:	bne	11b34 <getc@plt+0x10a8>
   11b80:	vmul.f64	d4, d3, d4
   11b84:	vldr	d6, [pc, #228]	; 11c70 <getc@plt+0x11e4>
   11b88:	vdiv.f64	d7, d4, d2
   11b8c:	vsub.f64	d1, d1, d7
   11b90:	vstr	d1, [r0, #40]	; 0x28
   11b94:	vldr	d7, [r4, #24]
   11b98:	ldr	r4, [r4, #4]
   11b9c:	cmp	r4, #0
   11ba0:	vsub.f64	d7, d7, d1
   11ba4:	vmla.f64	d6, d7, d7
   11ba8:	bne	11b94 <getc@plt+0x1108>
   11bac:	vdiv.f64	d7, d6, d3
   11bb0:	vdiv.f64	d0, d7, d2
   11bb4:	vcmp.f64	d0, #0.0
   11bb8:	vsqrt.f64	d7, d0
   11bbc:	vmrs	APSR_nzcv, fpscr
   11bc0:	bmi	11c30 <getc@plt+0x11a4>
   11bc4:	vldr	d5, [pc, #172]	; 11c78 <getc@plt+0x11ec>
   11bc8:	vldr	d6, [pc, #152]	; 11c68 <getc@plt+0x11dc>
   11bcc:	vmul.f64	d7, d7, d5
   11bd0:	vsub.f64	d1, d1, d7
   11bd4:	vcmpe.f64	d1, d6
   11bd8:	vmrs	APSR_nzcv, fpscr
   11bdc:	vmovgt.f64	d1, d6
   11be0:	bgt	11bf4 <getc@plt+0x1168>
   11be4:	vldr	d6, [pc, #132]	; 11c70 <getc@plt+0x11e4>
   11be8:	vcmp.f64	d1, d6
   11bec:	vmrs	APSR_nzcv, fpscr
   11bf0:	vmovmi.f64	d1, d6
   11bf4:	vstr	d1, [r1]
   11bf8:	vldr	d6, [pc, #104]	; 11c68 <getc@plt+0x11dc>
   11bfc:	vldr	d5, [r0, #40]	; 0x28
   11c00:	vadd.f64	d7, d7, d5
   11c04:	vcmpe.f64	d7, d6
   11c08:	vmrs	APSR_nzcv, fpscr
   11c0c:	vmovgt.f64	d7, d6
   11c10:	bgt	11c24 <getc@plt+0x1198>
   11c14:	vldr	d6, [pc, #84]	; 11c70 <getc@plt+0x11e4>
   11c18:	vcmp.f64	d7, d6
   11c1c:	vmrs	APSR_nzcv, fpscr
   11c20:	vmovmi.f64	d7, d6
   11c24:	vstr	d7, [r2]
   11c28:	add	sp, sp, #24
   11c2c:	pop	{r4, r5, r6, pc}
   11c30:	str	r2, [sp, #20]
   11c34:	str	r1, [sp, #16]
   11c38:	str	r0, [sp, #12]
   11c3c:	vstr	d7, [sp]
   11c40:	bl	10a2c <sqrt@plt>
   11c44:	ldr	r0, [sp, #12]
   11c48:	ldr	r2, [sp, #20]
   11c4c:	ldr	r1, [sp, #16]
   11c50:	vldr	d1, [r0, #40]	; 0x28
   11c54:	vldr	d7, [sp]
   11c58:	b	11bc4 <getc@plt+0x1138>
   11c5c:	ldr	r0, [pc, #28]	; 11c80 <getc@plt+0x11f4>
   11c60:	add	r0, pc, r0
   11c64:	bl	12390 <error@@Base>
   11c68:	andeq	r0, r0, r0
   11c6c:	subsmi	r0, r9, r0
	...
   11c78:			; <UNDEFINED> instruction: 0xf5c28f5c
   11c7c:	svccc	0x00ff5c28
   11c80:	andeq	r1, r0, ip, lsr #15
   11c84:	push	{r4, r5, r6, lr}
   11c88:	add	r5, r0, #8000	; 0x1f40
   11c8c:	mov	r6, r0
   11c90:	add	r5, r5, #48	; 0x30
   11c94:	mov	r4, r0
   11c98:	mov	r0, r4
   11c9c:	add	r4, r4, #16
   11ca0:	bl	12e74 <error@@Base+0xae4>
   11ca4:	cmp	r4, r5
   11ca8:	bne	11c98 <getc@plt+0x120c>
   11cac:	add	r6, r6, #4096	; 0x1000
   11cb0:	mov	r3, #0
   11cb4:	str	r3, [r6, #3952]	; 0xf70
   11cb8:	str	r3, [r6, #3956]	; 0xf74
   11cbc:	pop	{r4, r5, r6, pc}
   11cc0:	push	{r4, r5, r6, lr}
   11cc4:	mov	r5, r1
   11cc8:	ldrb	r3, [r1]
   11ccc:	cmp	r3, #0
   11cd0:	beq	11d08 <getc@plt+0x127c>
   11cd4:	mov	r2, #0
   11cd8:	add	r2, r2, r3
   11cdc:	ldrb	r3, [r1, #1]!
   11ce0:	cmp	r3, #0
   11ce4:	bne	11cd8 <getc@plt+0x124c>
   11ce8:	ldr	r1, [pc, #80]	; 11d40 <getc@plt+0x12b4>
   11cec:	asr	r3, r2, #31
   11cf0:	smull	ip, r1, r1, r2
   11cf4:	add	r1, r1, r2
   11cf8:	rsb	r3, r3, r1, asr #8
   11cfc:	rsb	r1, r3, r3, lsl #6
   11d00:	rsb	r3, r3, r1, lsl #3
   11d04:	sub	r3, r2, r3
   11d08:	ldr	r4, [r0, r3, lsl #4]
   11d0c:	cmp	r4, #0
   11d10:	bne	11d24 <getc@plt+0x1298>
   11d14:	b	11d38 <getc@plt+0x12ac>
   11d18:	ldr	r4, [r4, #4]
   11d1c:	cmp	r4, #0
   11d20:	beq	11d38 <getc@plt+0x12ac>
   11d24:	ldr	r1, [r4, #8]
   11d28:	mov	r0, r5
   11d2c:	bl	10918 <strcmp@plt>
   11d30:	cmp	r0, #0
   11d34:	bne	11d18 <getc@plt+0x128c>
   11d38:	mov	r0, r4
   11d3c:	pop	{r4, r5, r6, pc}
   11d40:	subhi	r4, sl, #1552	; 0x610
   11d44:	ldr	ip, [r1, #8]
   11d48:	push	{r4, lr}
   11d4c:	ldrb	r3, [ip]
   11d50:	cmp	r3, #0
   11d54:	beq	11d90 <getc@plt+0x1304>
   11d58:	mov	r2, #0
   11d5c:	add	r2, r2, r3
   11d60:	ldrb	r3, [ip, #1]!
   11d64:	cmp	r3, #0
   11d68:	bne	11d5c <getc@plt+0x12d0>
   11d6c:	ldr	ip, [pc, #80]	; 11dc4 <getc@plt+0x1338>
   11d70:	asr	r3, r2, #31
   11d74:	smull	lr, ip, ip, r2
   11d78:	add	ip, ip, r2
   11d7c:	rsb	r3, r3, ip, asr #8
   11d80:	rsb	ip, r3, r3, lsl #6
   11d84:	rsb	r3, r3, ip, lsl #3
   11d88:	sub	r3, r2, r3
   11d8c:	lsl	r3, r3, #4
   11d90:	add	r4, r0, #4096	; 0x1000
   11d94:	add	r0, r0, r3
   11d98:	bl	12e8c <error@@Base+0xafc>
   11d9c:	ldr	r0, [r4, #3952]	; 0xf70
   11da0:	cmp	r0, #0
   11da4:	beq	11db4 <getc@plt+0x1328>
   11da8:	bl	1093c <free@plt>
   11dac:	mov	r3, #0
   11db0:	str	r3, [r4, #3952]	; 0xf70
   11db4:	ldr	r3, [r4, #3956]	; 0xf74
   11db8:	add	r3, r3, #1
   11dbc:	str	r3, [r4, #3956]	; 0xf74
   11dc0:	pop	{r4, pc}
   11dc4:	subhi	r4, sl, #1552	; 0x610
   11dc8:	ldr	ip, [r1, #8]
   11dcc:	push	{r4, lr}
   11dd0:	ldrb	r3, [ip]
   11dd4:	cmp	r3, #0
   11dd8:	beq	11e14 <getc@plt+0x1388>
   11ddc:	mov	r2, #0
   11de0:	add	r2, r2, r3
   11de4:	ldrb	r3, [ip, #1]!
   11de8:	cmp	r3, #0
   11dec:	bne	11de0 <getc@plt+0x1354>
   11df0:	ldr	ip, [pc, #80]	; 11e48 <getc@plt+0x13bc>
   11df4:	asr	r3, r2, #31
   11df8:	smull	lr, ip, ip, r2
   11dfc:	add	ip, ip, r2
   11e00:	rsb	r3, r3, ip, asr #8
   11e04:	rsb	ip, r3, r3, lsl #6
   11e08:	rsb	r3, r3, ip, lsl #3
   11e0c:	sub	r3, r2, r3
   11e10:	lsl	r3, r3, #4
   11e14:	add	r4, r0, #4096	; 0x1000
   11e18:	add	r0, r0, r3
   11e1c:	bl	12fbc <error@@Base+0xc2c>
   11e20:	ldr	r0, [r4, #3952]	; 0xf70
   11e24:	cmp	r0, #0
   11e28:	beq	11e38 <getc@plt+0x13ac>
   11e2c:	bl	1093c <free@plt>
   11e30:	mov	r3, #0
   11e34:	str	r3, [r4, #3952]	; 0xf70
   11e38:	ldr	r3, [r4, #3956]	; 0xf74
   11e3c:	sub	r3, r3, #1
   11e40:	str	r3, [r4, #3956]	; 0xf74
   11e44:	pop	{r4, pc}
   11e48:	subhi	r4, sl, #1552	; 0x610
   11e4c:	push	{r4, r5, r6, lr}
   11e50:	add	r6, r0, #4096	; 0x1000
   11e54:	ldr	r4, [r6, #3952]	; 0xf70
   11e58:	cmp	r4, #0
   11e5c:	popne	{r4, r5, r6, pc}
   11e60:	ldr	r3, [r6, #3956]	; 0xf74
   11e64:	cmp	r3, #0
   11e68:	popeq	{r4, r5, r6, pc}
   11e6c:	mov	r5, r0
   11e70:	mov	r1, #4
   11e74:	mov	r0, r3
   11e78:	bl	123e8 <error@@Base+0x58>
   11e7c:	ldr	lr, [pc, #60]	; 11ec0 <getc@plt+0x1434>
   11e80:	mov	r2, r4
   11e84:	mov	ip, r4
   11e88:	str	r0, [r6, #3952]	; 0xf70
   11e8c:	ldr	r3, [r5, ip, lsl #4]
   11e90:	cmp	r3, #0
   11e94:	beq	11eb0 <getc@plt+0x1424>
   11e98:	add	r1, r0, r2, lsl #2
   11e9c:	str	r3, [r1], #4
   11ea0:	ldr	r3, [r3, #4]
   11ea4:	add	r2, r2, #1
   11ea8:	cmp	r3, #0
   11eac:	bne	11e9c <getc@plt+0x1410>
   11eb0:	add	ip, ip, #1
   11eb4:	cmp	ip, lr
   11eb8:	bne	11e8c <getc@plt+0x1400>
   11ebc:	pop	{r4, r5, r6, pc}
   11ec0:	strdeq	r0, [r0], -r7
   11ec4:	push	{r4, r5, r6, r7, r8, lr}
   11ec8:	add	r5, r0, #8000	; 0x1f40
   11ecc:	mov	r7, r0
   11ed0:	mov	r6, r1
   11ed4:	add	r5, r5, #48	; 0x30
   11ed8:	mov	r4, r0
   11edc:	mov	r0, r4
   11ee0:	mov	r1, r6
   11ee4:	add	r4, r4, #16
   11ee8:	bl	1306c <error@@Base+0xcdc>
   11eec:	cmp	r4, r5
   11ef0:	bne	11edc <getc@plt+0x1450>
   11ef4:	add	r7, r7, #4096	; 0x1000
   11ef8:	ldr	r0, [r7, #3952]	; 0xf70
   11efc:	cmp	r0, #0
   11f00:	beq	11f10 <getc@plt+0x1484>
   11f04:	bl	1093c <free@plt>
   11f08:	mov	r3, #0
   11f0c:	str	r3, [r7, #3952]	; 0xf70
   11f10:	mov	r3, #0
   11f14:	str	r3, [r7, #3956]	; 0xf74
   11f18:	pop	{r4, r5, r6, r7, r8, pc}
   11f1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f20:	sub	sp, sp, #12
   11f24:	ldr	r4, [pc, #232]	; 12014 <getc@plt+0x1588>
   11f28:	ldr	r6, [pc, #232]	; 12018 <getc@plt+0x158c>
   11f2c:	add	r4, pc, r4
   11f30:	add	r6, pc, r6
   11f34:	ldr	r5, [pc, #224]	; 1201c <getc@plt+0x1590>
   11f38:	add	r7, r4, #1088	; 0x440
   11f3c:	add	r6, r6, #1024	; 0x400
   11f40:	ldr	r3, [pc, #216]	; 12020 <getc@plt+0x1594>
   11f44:	add	r7, r7, #4
   11f48:	add	r6, r6, #4
   11f4c:	add	r5, pc, r5
   11f50:	add	r3, pc, r3
   11f54:	str	r3, [sp, #4]
   11f58:	ldrsh	sl, [r5]
   11f5c:	cmp	sl, #0
   11f60:	ble	12000 <getc@plt+0x1574>
   11f64:	ldr	fp, [r4, #8]
   11f68:	mov	r8, r5
   11f6c:	mov	r9, #0
   11f70:	b	11f80 <getc@plt+0x14f4>
   11f74:	add	r9, r9, #1
   11f78:	cmp	r9, sl
   11f7c:	beq	11fdc <getc@plt+0x1550>
   11f80:	ldr	r1, [r8, #4]!
   11f84:	mov	r0, fp
   11f88:	bl	10918 <strcmp@plt>
   11f8c:	cmp	r0, #0
   11f90:	bne	11f74 <getc@plt+0x14e8>
   11f94:	cmp	sl, r9
   11f98:	beq	11fdc <getc@plt+0x1550>
   11f9c:	ldr	r3, [r4]
   11fa0:	ldr	r1, [r4, #4]
   11fa4:	cmp	r3, r1
   11fa8:	subls	r2, r3, #1
   11fac:	uxtbls	r0, r9
   11fb0:	addls	r2, r6, r2
   11fb4:	bhi	11fc8 <getc@plt+0x153c>
   11fb8:	add	r3, r3, #1
   11fbc:	cmp	r3, r1
   11fc0:	strb	r0, [r2, #1]!
   11fc4:	bls	11fb8 <getc@plt+0x152c>
   11fc8:	add	r4, r4, #12
   11fcc:	cmp	r4, r7
   11fd0:	bne	11f58 <getc@plt+0x14cc>
   11fd4:	add	sp, sp, #12
   11fd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fdc:	cmp	sl, #256	; 0x100
   11fe0:	beq	12008 <getc@plt+0x157c>
   11fe4:	ldr	r1, [sp, #4]
   11fe8:	ldr	r2, [r4, #8]
   11fec:	add	r3, r1, sl, lsl #2
   11ff0:	add	sl, sl, #1
   11ff4:	strh	sl, [r1]
   11ff8:	str	r2, [r3, #4]
   11ffc:	b	11f9c <getc@plt+0x1510>
   12000:	mov	r9, #0
   12004:	b	11f94 <getc@plt+0x1508>
   12008:	ldr	r0, [pc, #20]	; 12024 <getc@plt+0x1598>
   1200c:	add	r0, pc, r0
   12010:	bl	12390 <error@@Base>
   12014:	muleq	r1, r0, fp
   12018:	andeq	r3, r1, r8, lsl #4
   1201c:	andeq	r3, r1, ip, ror #3
   12020:	andeq	r3, r1, r8, ror #3
   12024:	andeq	r1, r0, r8, lsl r4
   12028:	ldr	r3, [pc, #44]	; 1205c <getc@plt+0x15d0>
   1202c:	push	{r4, lr}
   12030:	add	r3, pc, r3
   12034:	mov	r4, r0
   12038:	ldrsh	r3, [r3]
   1203c:	cmp	r3, #0
   12040:	bne	12048 <getc@plt+0x15bc>
   12044:	bl	11f1c <getc@plt+0x1490>
   12048:	ldr	r3, [pc, #16]	; 12060 <getc@plt+0x15d4>
   1204c:	add	r3, pc, r3
   12050:	add	r0, r3, r4
   12054:	ldrb	r0, [r0, #1028]	; 0x404
   12058:	pop	{r4, pc}
   1205c:	andeq	r3, r1, r8, lsl #2
   12060:	andeq	r3, r1, ip, ror #1
   12064:	push	{r4, r5, r6, lr}
   12068:	uxtb	r4, r0
   1206c:	ldr	r5, [pc, #64]	; 120b4 <getc@plt+0x1628>
   12070:	add	r5, pc, r5
   12074:	ldrsh	r3, [r5]
   12078:	cmp	r3, #0
   1207c:	beq	1209c <getc@plt+0x1610>
   12080:	cmp	r4, r3
   12084:	bge	120a8 <getc@plt+0x161c>
   12088:	ldr	r3, [pc, #40]	; 120b8 <getc@plt+0x162c>
   1208c:	add	r3, pc, r3
   12090:	add	r0, r3, r4, lsl #2
   12094:	ldr	r0, [r0, #4]
   12098:	pop	{r4, r5, r6, pc}
   1209c:	bl	11f1c <getc@plt+0x1490>
   120a0:	ldrsh	r3, [r5]
   120a4:	b	12080 <getc@plt+0x15f4>
   120a8:	ldr	r0, [pc, #12]	; 120bc <getc@plt+0x1630>
   120ac:	add	r0, pc, r0
   120b0:	bl	12390 <error@@Base>
   120b4:	andeq	r3, r1, r8, asr #1
   120b8:	andeq	r3, r1, ip, lsr #1
   120bc:	muleq	r0, r4, r3
   120c0:	ldr	r3, [pc, #76]	; 12114 <getc@plt+0x1688>
   120c4:	ldr	r2, [pc, #76]	; 12118 <getc@plt+0x168c>
   120c8:	add	r3, pc, r3
   120cc:	push	{r4, r5, lr}
   120d0:	sub	sp, sp, #116	; 0x74
   120d4:	ldr	r3, [r3, r2]
   120d8:	mov	r5, r0
   120dc:	ldr	r4, [r3]
   120e0:	bl	109f0 <getpid@plt>
   120e4:	ldr	r1, [pc, #48]	; 1211c <getc@plt+0x1690>
   120e8:	mov	r2, r4
   120ec:	add	r4, sp, #12
   120f0:	add	r1, pc, r1
   120f4:	str	r5, [sp]
   120f8:	mov	r3, r0
   120fc:	mov	r0, r4
   12100:	bl	10a50 <sprintf@plt>
   12104:	mov	r0, r4
   12108:	bl	1096c <strdup@plt>
   1210c:	add	sp, sp, #116	; 0x74
   12110:	pop	{r4, r5, pc}
   12114:	andeq	r2, r1, r0, lsr pc
   12118:	andeq	r0, r0, r4, lsr #1
   1211c:	andeq	r1, r0, r0, lsr #19
   12120:	ldr	r3, [pc, #108]	; 12194 <getc@plt+0x1708>
   12124:	ldr	r2, [pc, #108]	; 12198 <getc@plt+0x170c>
   12128:	add	r3, pc, r3
   1212c:	push	{r7, lr}
   12130:	mov	r7, r0
   12134:	ldr	r3, [r3, r2]
   12138:	ldr	r3, [r3]
   1213c:	cmp	r3, #0
   12140:	beq	12148 <getc@plt+0x16bc>
   12144:	blx	r3
   12148:	ldr	r6, [pc, #76]	; 1219c <getc@plt+0x1710>
   1214c:	add	r6, pc, r6
   12150:	ldrsh	r3, [r6]
   12154:	cmp	r3, #0
   12158:	movgt	r4, #1
   1215c:	ble	1218c <getc@plt+0x1700>
   12160:	mov	r0, r4
   12164:	bl	120c0 <getc@plt+0x1634>
   12168:	add	r4, r4, #1
   1216c:	sxth	r4, r4
   12170:	mov	r5, r0
   12174:	bl	10984 <unlink@plt>
   12178:	mov	r0, r5
   1217c:	bl	1093c <free@plt>
   12180:	ldrsh	r3, [r6]
   12184:	cmp	r3, r4
   12188:	bge	12160 <getc@plt+0x16d4>
   1218c:	mov	r0, r7
   12190:	bl	109fc <exit@plt>
   12194:	ldrdeq	r2, [r1], -r0
   12198:	andeq	r0, r0, ip, lsr #1
   1219c:			; <UNDEFINED> instruction: 0x001233f0
   121a0:	ldrb	r3, [r0]
   121a4:	cmp	r3, #0
   121a8:	beq	1220c <getc@plt+0x1780>
   121ac:	ldrb	ip, [r1]
   121b0:	cmp	ip, r3
   121b4:	bne	1221c <getc@plt+0x1790>
   121b8:	push	{lr}		; (str lr, [sp, #-4]!)
   121bc:	mov	r2, #0
   121c0:	mov	lr, r1
   121c4:	b	121d4 <getc@plt+0x1748>
   121c8:	ldrb	ip, [lr, #1]!
   121cc:	cmp	r3, ip
   121d0:	bne	121f4 <getc@plt+0x1768>
   121d4:	ldrb	r3, [r0, #1]!
   121d8:	add	r2, r2, #1
   121dc:	cmp	r3, #0
   121e0:	bne	121c8 <getc@plt+0x173c>
   121e4:	ldrb	ip, [r1, r2]
   121e8:	cmp	ip, #0
   121ec:	movne	r3, #0
   121f0:	beq	12204 <getc@plt+0x1778>
   121f4:	cmp	r3, ip
   121f8:	movcs	r0, #1
   121fc:	mvncc	r0, #0
   12200:	pop	{pc}		; (ldr pc, [sp], #4)
   12204:	mov	r0, ip
   12208:	pop	{pc}		; (ldr pc, [sp], #4)
   1220c:	ldrb	ip, [r1, r3]
   12210:	cmp	ip, #0
   12214:	movne	r3, #0
   12218:	beq	1222c <getc@plt+0x17a0>
   1221c:	cmp	r3, ip
   12220:	movcs	r0, #1
   12224:	mvncc	r0, #0
   12228:	bx	lr
   1222c:	mov	r0, ip
   12230:	bx	lr
   12234:	ldr	r2, [pc, #44]	; 12268 <getc@plt+0x17dc>
   12238:	ldr	r3, [pc, #44]	; 1226c <getc@plt+0x17e0>
   1223c:	add	r2, pc, r2
   12240:	ldr	r3, [r2, r3]
   12244:	ldr	r3, [r3]
   12248:	cmp	r3, r0
   1224c:	bxeq	lr
   12250:	ldr	r3, [pc, #24]	; 12270 <getc@plt+0x17e4>
   12254:	ldr	r3, [r2, r3]
   12258:	ldr	r3, [r3]
   1225c:	cmp	r0, r3
   12260:	bxeq	lr
   12264:	b	10a44 <fclose@plt>
   12268:			; <UNDEFINED> instruction: 0x00012dbc
   1226c:	strheq	r0, [r0], -r4
   12270:	strheq	r0, [r0], -r8
   12274:	push	{lr}		; (str lr, [sp, #-4]!)
   12278:	sub	sp, sp, #92	; 0x5c
   1227c:	mov	r1, r0
   12280:	mov	r2, sp
   12284:	mov	r0, #3
   12288:	bl	1099c <__xstat@plt>
   1228c:	clz	r0, r0
   12290:	lsr	r0, r0, #5
   12294:	add	sp, sp, #92	; 0x5c
   12298:	pop	{pc}		; (ldr pc, [sp], #4)
   1229c:	ldr	r2, [pc, #44]	; 122d0 <getc@plt+0x1844>
   122a0:	push	{r4, lr}
   122a4:	add	r2, pc, r2
   122a8:	ldrh	r3, [r2]
   122ac:	add	r3, r3, #1
   122b0:	sxth	r3, r3
   122b4:	mov	r0, r3
   122b8:	strh	r3, [r2]
   122bc:	bl	120c0 <getc@plt+0x1634>
   122c0:	mov	r4, r0
   122c4:	bl	10984 <unlink@plt>
   122c8:	mov	r0, r4
   122cc:	pop	{r4, pc}
   122d0:	mulseq	r2, r8, r2
   122d4:	push	{r4, lr}
   122d8:	mov	r4, r0
   122dc:	bl	10a14 <strlen@plt>
   122e0:	sub	r0, r0, #1
   122e4:	sxth	r0, r0
   122e8:	cmp	r0, #0
   122ec:	bge	12304 <getc@plt+0x1878>
   122f0:	b	12310 <getc@plt+0x1884>
   122f4:	sub	r0, r0, #1
   122f8:	sxth	r0, r0
   122fc:	cmn	r0, #1
   12300:	beq	12310 <getc@plt+0x1884>
   12304:	ldrb	r3, [r4, r0]
   12308:	cmp	r3, #47	; 0x2f
   1230c:	bne	122f4 <getc@plt+0x1868>
   12310:	add	r0, r0, #1
   12314:	add	r0, r4, r0
   12318:	pop	{r4, pc}
   1231c:	push	{r4, lr}
   12320:	mov	r0, #0
   12324:	bl	12120 <getc@plt+0x1694>
   12328:	ldr	r1, [pc, #76]	; 1237c <getc@plt+0x18f0>
   1232c:	ldr	r2, [pc, #76]	; 12380 <getc@plt+0x18f4>
   12330:	add	r1, pc, r1
   12334:	push	{r4, lr}
   12338:	ldr	r2, [r1, r2]
   1233c:	ldr	r2, [r2]
   12340:	cmp	r2, #0
   12344:	beq	12350 <getc@plt+0x18c4>
   12348:	blx	r2
   1234c:	bl	1231c <getc@plt+0x1890>
   12350:	ldr	r2, [pc, #44]	; 12384 <getc@plt+0x18f8>
   12354:	ldr	ip, [pc, #44]	; 12388 <getc@plt+0x18fc>
   12358:	mov	r3, r0
   1235c:	ldr	r0, [r1, r2]
   12360:	ldr	ip, [r1, ip]
   12364:	ldr	r1, [pc, #32]	; 1238c <getc@plt+0x1900>
   12368:	ldr	r0, [r0]
   1236c:	add	r1, pc, r1
   12370:	ldr	r2, [ip]
   12374:	bl	10a20 <fprintf@plt>
   12378:	b	1234c <getc@plt+0x18c0>
   1237c:	andeq	r2, r1, r8, asr #25
   12380:	muleq	r0, r8, r0
   12384:	muleq	r0, ip, r0
   12388:	andeq	r0, r0, r4, lsr #1
   1238c:	andeq	r1, r0, r4, lsr r7

00012390 <error@@Base>:
   12390:	push	{r4, lr}
   12394:	mov	r3, r0
   12398:	ldr	r4, [pc, #52]	; 123d4 <error@@Base+0x44>
   1239c:	ldr	r1, [pc, #52]	; 123d8 <error@@Base+0x48>
   123a0:	ldr	r2, [pc, #52]	; 123dc <error@@Base+0x4c>
   123a4:	add	r4, pc, r4
   123a8:	ldr	ip, [r4, r1]
   123ac:	ldr	r0, [r4, r2]
   123b0:	ldr	r1, [pc, #40]	; 123e0 <error@@Base+0x50>
   123b4:	ldr	r2, [ip]
   123b8:	add	r1, pc, r1
   123bc:	ldr	r0, [r0]
   123c0:	bl	10a20 <fprintf@plt>
   123c4:	ldr	r3, [pc, #24]	; 123e4 <error@@Base+0x54>
   123c8:	ldr	r3, [r4, r3]
   123cc:	ldr	r0, [r3]
   123d0:	bl	12120 <getc@plt+0x1694>
   123d4:	andeq	r2, r1, r4, asr ip
   123d8:	andeq	r0, r0, r4, lsr #1
   123dc:	muleq	r0, ip, r0
   123e0:	strdeq	r1, [r0], -r8
   123e4:	strheq	r0, [r0], -ip
   123e8:	push	{r4, lr}
   123ec:	bl	1090c <calloc@plt>
   123f0:	cmp	r0, #0
   123f4:	popne	{r4, pc}
   123f8:	ldr	r0, [pc, #4]	; 12404 <error@@Base+0x74>
   123fc:	add	r0, pc, r0
   12400:	bl	12390 <error@@Base>
   12404:			; <UNDEFINED> instruction: 0x000016bc
   12408:	ldr	r3, [pc, #40]	; 12438 <error@@Base+0xa8>
   1240c:	add	r3, pc, r3
   12410:	ldrb	r2, [r3, #2]
   12414:	cmp	r2, #0
   12418:	beq	12420 <error@@Base+0x90>
   1241c:	bx	lr
   12420:	ldr	r0, [pc, #20]	; 1243c <error@@Base+0xac>
   12424:	push	{r4, lr}
   12428:	mov	r2, #1
   1242c:	add	r0, pc, r0
   12430:	strb	r2, [r3, #2]
   12434:	bl	12390 <error@@Base>
   12438:	andseq	r3, r2, r0, lsr r1
   1243c:	andeq	r1, r0, r8, lsr #13
   12440:	ldr	r4, [pc, #68]	; 1248c <error@@Base+0xfc>
   12444:	ldr	r2, [pc, #68]	; 12490 <error@@Base+0x100>
   12448:	ldr	ip, [pc, #68]	; 12494 <error@@Base+0x104>
   1244c:	add	r4, pc, r4
   12450:	push	{lr}		; (str lr, [sp, #-4]!)
   12454:	sub	sp, sp, #12
   12458:	mov	r3, r0
   1245c:	ldr	ip, [r4, ip]
   12460:	ldr	r0, [r4, r2]
   12464:	str	r1, [sp]
   12468:	ldr	r1, [pc, #40]	; 12498 <error@@Base+0x108>
   1246c:	ldr	r2, [ip]
   12470:	ldr	r0, [r0]
   12474:	add	r1, pc, r1
   12478:	bl	10a20 <fprintf@plt>
   1247c:	ldr	r3, [pc, #24]	; 1249c <error@@Base+0x10c>
   12480:	ldr	r3, [r4, r3]
   12484:	ldr	r0, [r3]
   12488:	bl	12120 <getc@plt+0x1694>
   1248c:	andeq	r2, r1, ip, lsr #23
   12490:	muleq	r0, ip, r0
   12494:	andeq	r0, r0, r4, lsr #1
   12498:	andeq	r1, r0, r0, ror r6
   1249c:	strheq	r0, [r0], -ip
   124a0:	ldr	ip, [pc, #116]	; 1251c <error@@Base+0x18c>
   124a4:	subs	r2, r0, #0
   124a8:	push	{r4, r5, r6, lr}
   124ac:	add	ip, pc, ip
   124b0:	mov	r4, r1
   124b4:	beq	124e4 <error@@Base+0x154>
   124b8:	mov	r5, r2
   124bc:	bl	10930 <fopen@plt>
   124c0:	cmp	r0, #0
   124c4:	popne	{r4, r5, r6, pc}
   124c8:	ldrb	r3, [r4]
   124cc:	mov	r1, r5
   124d0:	cmp	r3, #119	; 0x77
   124d4:	beq	12510 <error@@Base+0x180>
   124d8:	ldr	r0, [pc, #64]	; 12520 <error@@Base+0x190>
   124dc:	add	r0, pc, r0
   124e0:	bl	12440 <error@@Base+0xb0>
   124e4:	ldrb	r3, [r1]
   124e8:	cmp	r3, #114	; 0x72
   124ec:	beq	12500 <error@@Base+0x170>
   124f0:	ldr	r3, [pc, #44]	; 12524 <error@@Base+0x194>
   124f4:	ldr	r3, [ip, r3]
   124f8:	ldr	r0, [r3]
   124fc:	pop	{r4, r5, r6, pc}
   12500:	ldr	r3, [pc, #32]	; 12528 <error@@Base+0x198>
   12504:	ldr	r3, [ip, r3]
   12508:	ldr	r0, [r3]
   1250c:	pop	{r4, r5, r6, pc}
   12510:	ldr	r0, [pc, #20]	; 1252c <error@@Base+0x19c>
   12514:	add	r0, pc, r0
   12518:	bl	12440 <error@@Base+0xb0>
   1251c:	andeq	r2, r1, ip, asr #22
   12520:	andeq	r1, r0, r0, lsr r6
   12524:	strheq	r0, [r0], -r8
   12528:	strheq	r0, [r0], -r4
   1252c:	andeq	r1, r0, r0, ror #11
   12530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12534:	sub	sp, sp, #20
   12538:	mov	r7, r0
   1253c:	str	r0, [sp, #8]
   12540:	ldr	r0, [r1]
   12544:	str	r2, [sp, #12]
   12548:	mov	r9, r1
   1254c:	mov	r6, r3
   12550:	bl	122d4 <getc@plt+0x1848>
   12554:	ldr	r5, [pc, #496]	; 1274c <error@@Base+0x3bc>
   12558:	ldr	r3, [pc, #496]	; 12750 <error@@Base+0x3c0>
   1255c:	add	r5, pc, r5
   12560:	ldr	r4, [pc, #492]	; 12754 <error@@Base+0x3c4>
   12564:	ldr	r3, [r5, r3]
   12568:	add	r4, pc, r4
   1256c:	mov	r1, r4
   12570:	str	r0, [r3]
   12574:	mov	r0, #2
   12578:	bl	109d8 <__sysv_signal@plt>
   1257c:	mov	r1, r4
   12580:	mov	r0, #15
   12584:	bl	109d8 <__sysv_signal@plt>
   12588:	ldr	fp, [r7]
   1258c:	cmp	fp, #1
   12590:	beq	126d8 <error@@Base+0x348>
   12594:	mov	r7, #0
   12598:	ble	126ec <error@@Base+0x35c>
   1259c:	ldr	r3, [pc, #436]	; 12758 <error@@Base+0x3c8>
   125a0:	mov	sl, #1
   125a4:	add	r3, pc, r3
   125a8:	str	r3, [sp, #4]
   125ac:	mov	r4, sl
   125b0:	mov	r3, fp
   125b4:	b	125d8 <error@@Base+0x248>
   125b8:	add	r2, r7, #1
   125bc:	str	r5, [r9, r7, lsl #2]
   125c0:	sxth	r7, r2
   125c4:	add	r4, r4, #1
   125c8:	sxth	r4, r4
   125cc:	cmp	r4, r3
   125d0:	mov	sl, r4
   125d4:	bge	126ec <error@@Base+0x35c>
   125d8:	ldr	r5, [r9, r4, lsl #2]
   125dc:	lsl	fp, r4, #2
   125e0:	ldrb	r2, [r5]
   125e4:	cmp	r2, #45	; 0x2d
   125e8:	bne	125b8 <error@@Base+0x228>
   125ec:	ldrb	r8, [r5, #1]
   125f0:	cmp	r8, #0
   125f4:	beq	125b8 <error@@Base+0x228>
   125f8:	mov	r0, r5
   125fc:	str	r3, [sp]
   12600:	bl	10a14 <strlen@plt>
   12604:	mov	r1, r5
   12608:	mov	r2, r0
   1260c:	ldr	r0, [sp, #4]
   12610:	bl	10a74 <strncmp@plt>
   12614:	cmp	r0, #0
   12618:	beq	12734 <error@@Base+0x3a4>
   1261c:	ldr	r3, [sp]
   12620:	add	sl, sl, #1
   12624:	cmp	sl, r3
   12628:	addlt	fp, r9, fp
   1262c:	movge	ip, #0
   12630:	ldrlt	ip, [fp, #4]
   12634:	cmp	r6, #0
   12638:	beq	1267c <error@@Base+0x2ec>
   1263c:	ldrb	r2, [r6]
   12640:	cmp	r2, #0
   12644:	beq	1267c <error@@Base+0x2ec>
   12648:	cmp	r2, r8
   1264c:	beq	1268c <error@@Base+0x2fc>
   12650:	mov	r2, #0
   12654:	b	12660 <error@@Base+0x2d0>
   12658:	cmp	r8, r0
   1265c:	beq	12690 <error@@Base+0x300>
   12660:	add	r2, r2, #1
   12664:	sxth	r2, r2
   12668:	add	r1, r2, r2, lsl #1
   1266c:	ldrb	r0, [r6, r1, lsl #2]
   12670:	add	r1, r6, r1, lsl #2
   12674:	cmp	r0, #0
   12678:	bne	12658 <error@@Base+0x2c8>
   1267c:	ldr	r0, [pc, #216]	; 1275c <error@@Base+0x3cc>
   12680:	mov	r1, r5
   12684:	add	r0, pc, r0
   12688:	bl	12440 <error@@Base+0xb0>
   1268c:	mov	r1, r6
   12690:	ldr	r2, [r1, #4]
   12694:	cmp	r2, #0
   12698:	beq	126fc <error@@Base+0x36c>
   1269c:	ldrb	r0, [r5, #2]
   126a0:	cmp	r0, #0
   126a4:	cmpeq	ip, #0
   126a8:	beq	126fc <error@@Base+0x36c>
   126ac:	ldr	r1, [r2]
   126b0:	cmp	r1, #0
   126b4:	bne	1273c <error@@Base+0x3ac>
   126b8:	cmp	r0, #0
   126bc:	addne	ip, r5, #2
   126c0:	str	ip, [r2]
   126c4:	ldrb	r2, [r5, #2]
   126c8:	cmp	r2, #0
   126cc:	addeq	r4, r4, #1
   126d0:	sxtheq	r4, r4
   126d4:	b	125c4 <error@@Base+0x234>
   126d8:	ldr	r3, [pc, #128]	; 12760 <error@@Base+0x3d0>
   126dc:	ldr	r3, [r5, r3]
   126e0:	ldrb	r7, [r3]
   126e4:	cmp	r7, #0
   126e8:	bne	12734 <error@@Base+0x3a4>
   126ec:	ldr	r3, [sp, #8]
   126f0:	str	r7, [r3]
   126f4:	add	sp, sp, #20
   126f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   126fc:	ldr	r3, [r1, #8]
   12700:	cmp	r3, #0
   12704:	beq	1267c <error@@Base+0x2ec>
   12708:	ldrb	r2, [r5, #2]
   1270c:	cmp	r2, #0
   12710:	bne	1267c <error@@Base+0x2ec>
   12714:	ldrb	r2, [r3]
   12718:	cmp	r2, #0
   1271c:	bne	1273c <error@@Base+0x3ac>
   12720:	mov	r2, #1
   12724:	strb	r2, [r3]
   12728:	ldr	r3, [sp, #8]
   1272c:	ldr	r3, [r3]
   12730:	b	125c4 <error@@Base+0x234>
   12734:	ldr	r0, [sp, #12]
   12738:	bl	12328 <getc@plt+0x189c>
   1273c:	ldr	r0, [pc, #32]	; 12764 <error@@Base+0x3d4>
   12740:	mov	r1, r5
   12744:	add	r0, pc, r0
   12748:	bl	12440 <error@@Base+0xb0>
   1274c:	muleq	r1, ip, sl
   12750:	andeq	r0, r0, r4, lsr #1
   12754:			; <UNDEFINED> instruction: 0xfffffe98
   12758:	andeq	r1, r0, ip, ror r5
   1275c:	andeq	r1, r0, r4, lsr #9
   12760:	muleq	r0, r0, r0
   12764:	strdeq	r1, [r0], -r4
   12768:	ldr	ip, [pc, #60]	; 127ac <error@@Base+0x41c>
   1276c:	push	{lr}		; (str lr, [sp, #-4]!)
   12770:	add	ip, pc, ip
   12774:	ldr	r2, [pc, #52]	; 127b0 <error@@Base+0x420>
   12778:	ldr	lr, [pc, #52]	; 127b4 <error@@Base+0x424>
   1277c:	sub	sp, sp, #12
   12780:	mov	r3, r0
   12784:	ldr	lr, [ip, lr]
   12788:	ldr	r0, [ip, r2]
   1278c:	str	r1, [sp]
   12790:	ldr	r1, [pc, #32]	; 127b8 <error@@Base+0x428>
   12794:	ldr	r2, [lr]
   12798:	add	r1, pc, r1
   1279c:	ldr	r0, [r0]
   127a0:	bl	10a20 <fprintf@plt>
   127a4:	add	sp, sp, #12
   127a8:	pop	{pc}		; (ldr pc, [sp], #4)
   127ac:	andeq	r2, r1, r8, lsl #17
   127b0:	muleq	r0, ip, r0
   127b4:	andeq	r0, r0, r4, lsr #1
   127b8:	andeq	r1, r0, ip, asr #6
   127bc:	push	{r4, r5, r6, lr}
   127c0:	mov	r4, r0
   127c4:	uxtb	r6, r1
   127c8:	mov	r0, #1
   127cc:	mov	r1, #16
   127d0:	mov	r5, r2
   127d4:	bl	123e8 <error@@Base+0x58>
   127d8:	strb	r6, [r0, #8]
   127dc:	str	r5, [r0, #12]
   127e0:	mov	r1, r0
   127e4:	mov	r0, r4
   127e8:	pop	{r4, r5, r6, lr}
   127ec:	b	12ed8 <error@@Base+0xb48>
   127f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   127f4:	sub	sp, sp, #132	; 0x84
   127f8:	ldrb	r3, [r2]
   127fc:	ldr	r6, [pc, #936]	; 12bac <error@@Base+0x81c>
   12800:	str	r2, [sp, #16]
   12804:	adds	r3, r3, #0
   12808:	movne	r3, #1
   1280c:	cmp	r1, #0
   12810:	movne	r3, #0
   12814:	cmp	r3, #0
   12818:	str	r0, [sp, #4]
   1281c:	add	r6, pc, r6
   12820:	bne	12b98 <error@@Base+0x808>
   12824:	ldr	r3, [sp, #4]
   12828:	mov	r0, r1
   1282c:	ldr	r1, [pc, #892]	; 12bb0 <error@@Base+0x820>
   12830:	ldr	r3, [r3, #4]
   12834:	add	r1, pc, r1
   12838:	str	r3, [sp, #20]
   1283c:	bl	124a0 <error@@Base+0x110>
   12840:	ldr	r3, [sp, #16]
   12844:	ldrb	r3, [r3]
   12848:	cmp	r3, #0
   1284c:	mov	r7, r0
   12850:	bne	12ad8 <error@@Base+0x748>
   12854:	ldr	r2, [sp, #16]
   12858:	mov	r0, r7
   1285c:	ldr	r3, [r2, #4]
   12860:	ldrb	fp, [r2, #1]
   12864:	mov	r4, r3
   12868:	bl	10a8c <getc@plt>
   1286c:	cmp	r4, #0
   12870:	mov	r2, r4
   12874:	moveq	r2, #94	; 0x5e
   12878:	str	r2, [sp, #12]
   1287c:	cmn	r0, #1
   12880:	beq	12948 <error@@Base+0x5b8>
   12884:	ldr	r3, [pc, #808]	; 12bb4 <error@@Base+0x824>
   12888:	ldr	r3, [r6, r3]
   1288c:	str	r3, [sp]
   12890:	ldrsb	r4, [r3, r0]
   12894:	cmp	r4, #0
   12898:	ble	12b80 <error@@Base+0x7f0>
   1289c:	add	r3, sp, #25
   128a0:	mov	r6, #0
   128a4:	str	r3, [sp, #8]
   128a8:	add	sl, sp, #28
   128ac:	add	r9, sp, #24
   128b0:	mov	r8, #4
   128b4:	b	128c8 <error@@Base+0x538>
   128b8:	ldr	r3, [sp]
   128bc:	ldrsb	r4, [r3, r0]
   128c0:	cmp	r4, #0
   128c4:	ble	12b80 <error@@Base+0x7f0>
   128c8:	cmp	r4, #1
   128cc:	strb	r0, [sp, #24]
   128d0:	beq	128f4 <error@@Base+0x564>
   128d4:	sub	r5, r4, #1
   128d8:	mov	r2, r5
   128dc:	mov	r3, r7
   128e0:	mov	r1, #1
   128e4:	ldr	r0, [sp, #8]
   128e8:	bl	109b4 <fread@plt>
   128ec:	cmp	r5, r0
   128f0:	bne	12b8c <error@@Base+0x7fc>
   128f4:	mov	r2, sl
   128f8:	mov	r1, r8
   128fc:	mov	r0, r9
   12900:	bl	109c0 <utf8proc_iterate@plt>
   12904:	cmp	r0, r4
   12908:	bne	12b78 <error@@Base+0x7e8>
   1290c:	cmp	fp, #0
   12910:	ldr	r2, [sp, #28]
   12914:	beq	12928 <error@@Base+0x598>
   12918:	ldr	r3, [sp, #12]
   1291c:	cmp	r2, r3
   12920:	moveq	r6, #1
   12924:	beq	12938 <error@@Base+0x5a8>
   12928:	mov	r1, r6
   1292c:	ldr	r0, [sp, #4]
   12930:	bl	127bc <error@@Base+0x42c>
   12934:	mov	r6, #0
   12938:	mov	r0, r7
   1293c:	bl	10a8c <getc@plt>
   12940:	cmn	r0, #1
   12944:	bne	128b8 <error@@Base+0x528>
   12948:	mov	r0, r7
   1294c:	bl	12234 <getc@plt+0x17a8>
   12950:	ldr	r3, [sp, #16]
   12954:	ldrb	r3, [r3, #9]
   12958:	cmp	r3, #0
   1295c:	beq	12a90 <error@@Base+0x700>
   12960:	ldr	r3, [sp, #20]
   12964:	cmp	r3, #0
   12968:	ldreq	r3, [sp, #4]
   1296c:	ldrne	r6, [r3, #4]
   12970:	ldreq	r6, [r3]
   12974:	cmp	r6, #0
   12978:	beq	12a90 <error@@Base+0x700>
   1297c:	mov	r5, r6
   12980:	mov	r7, #32
   12984:	b	129ac <error@@Base+0x61c>
   12988:	cmp	r4, #11
   1298c:	bcs	129d8 <error@@Base+0x648>
   12990:	cmp	r4, #9
   12994:	beq	129d8 <error@@Base+0x648>
   12998:	cmp	r4, #10
   1299c:	bne	129c8 <error@@Base+0x638>
   129a0:	ldr	r5, [r5, #4]
   129a4:	cmp	r5, #0
   129a8:	beq	129e8 <error@@Base+0x658>
   129ac:	ldr	r4, [r5, #12]
   129b0:	mov	r0, r4
   129b4:	bl	10948 <utf8proc_get_property@plt>
   129b8:	cmp	r4, #13
   129bc:	bls	12988 <error@@Base+0x5f8>
   129c0:	cmp	r4, #160	; 0xa0
   129c4:	beq	129d8 <error@@Base+0x648>
   129c8:	ldrsh	r3, [r0]
   129cc:	sub	r3, r3, #23
   129d0:	cmp	r3, #2
   129d4:	bhi	129a0 <error@@Base+0x610>
   129d8:	str	r7, [r5, #12]
   129dc:	ldr	r5, [r5, #4]
   129e0:	cmp	r5, #0
   129e4:	bne	129ac <error@@Base+0x61c>
   129e8:	ldr	r7, [sp, #4]
   129ec:	b	12a4c <error@@Base+0x6bc>
   129f0:	cmp	r3, #10
   129f4:	movne	r2, #0
   129f8:	andeq	r2, r2, #1
   129fc:	cmp	r2, #0
   12a00:	beq	12a80 <error@@Base+0x6f0>
   12a04:	cmp	r4, #0
   12a08:	moveq	r3, #0
   12a0c:	andne	r3, r5, #1
   12a10:	cmp	r3, #0
   12a14:	beq	12a30 <error@@Base+0x6a0>
   12a18:	ldr	r3, [r4, #12]
   12a1c:	cmp	r3, #32
   12a20:	ldrbeq	r3, [r4, #8]
   12a24:	ldrbeq	r2, [r6, #8]
   12a28:	orreq	r3, r3, r2
   12a2c:	strbeq	r3, [r4, #8]
   12a30:	mov	r1, r6
   12a34:	mov	r0, r7
   12a38:	bl	12fbc <error@@Base+0xc2c>
   12a3c:	mov	r0, r6
   12a40:	bl	1093c <free@plt>
   12a44:	subs	r6, r4, #0
   12a48:	beq	12a90 <error@@Base+0x700>
   12a4c:	ldr	r3, [r6, #12]
   12a50:	ldr	r4, [r6, #4]
   12a54:	cmp	r3, #32
   12a58:	eor	r2, r5, #1
   12a5c:	bne	129f0 <error@@Base+0x660>
   12a60:	cmp	r4, #0
   12a64:	orreq	r2, r2, #1
   12a68:	cmp	r2, #0
   12a6c:	bne	12a04 <error@@Base+0x674>
   12a70:	ldr	r2, [r4, #12]
   12a74:	cmp	r2, #10
   12a78:	cmpne	r2, #32
   12a7c:	beq	12a04 <error@@Base+0x674>
   12a80:	subs	r5, r3, #10
   12a84:	movne	r5, #1
   12a88:	subs	r6, r4, #0
   12a8c:	bne	12a4c <error@@Base+0x6bc>
   12a90:	ldr	r3, [sp, #16]
   12a94:	ldrb	r3, [r3, #10]
   12a98:	cmp	r3, #0
   12a9c:	beq	12ad0 <error@@Base+0x740>
   12aa0:	ldr	r3, [sp, #20]
   12aa4:	cmp	r3, #0
   12aa8:	ldreq	r3, [sp, #4]
   12aac:	ldrne	r4, [r3, #4]
   12ab0:	ldreq	r4, [r3]
   12ab4:	b	12ac8 <error@@Base+0x738>
   12ab8:	ldr	r0, [r4, #12]
   12abc:	bl	10990 <utf8proc_tolower@plt>
   12ac0:	str	r0, [r4, #12]
   12ac4:	ldr	r4, [r4, #4]
   12ac8:	cmp	r4, #0
   12acc:	bne	12ab8 <error@@Base+0x728>
   12ad0:	add	sp, sp, #132	; 0x84
   12ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ad8:	add	r5, sp, #28
   12adc:	mov	r0, r5
   12ae0:	mov	r2, r7
   12ae4:	mov	r1, #99	; 0x63
   12ae8:	bl	10954 <fgets@plt>
   12aec:	cmp	r0, #0
   12af0:	beq	12b60 <error@@Base+0x7d0>
   12af4:	ldr	r1, [pc, #188]	; 12bb8 <error@@Base+0x828>
   12af8:	mov	r2, #51	; 0x33
   12afc:	add	r1, pc, r1
   12b00:	mov	r0, r5
   12b04:	bl	10a74 <strncmp@plt>
   12b08:	subs	r4, r0, #0
   12b0c:	bne	12b60 <error@@Base+0x7d0>
   12b10:	ldr	r9, [pc, #164]	; 12bbc <error@@Base+0x82c>
   12b14:	mov	r8, #99	; 0x63
   12b18:	add	r9, pc, r9
   12b1c:	mov	r2, r7
   12b20:	mov	r1, r8
   12b24:	mov	r0, r5
   12b28:	bl	10954 <fgets@plt>
   12b2c:	cmp	r0, #0
   12b30:	beq	12b58 <error@@Base+0x7c8>
   12b34:	mov	r1, r9
   12b38:	mov	r0, r5
   12b3c:	bl	10918 <strcmp@plt>
   12b40:	cmp	r0, #0
   12b44:	bne	12b1c <error@@Base+0x78c>
   12b48:	add	r4, r4, #1
   12b4c:	sxth	r4, r4
   12b50:	cmp	r4, #1
   12b54:	ble	12b1c <error@@Base+0x78c>
   12b58:	mov	r3, #1
   12b5c:	b	12b6c <error@@Base+0x7dc>
   12b60:	mov	r0, r7
   12b64:	bl	10978 <rewind@plt>
   12b68:	mov	r3, #0
   12b6c:	ldr	r2, [sp, #16]
   12b70:	strb	r3, [r2, #11]
   12b74:	b	12854 <error@@Base+0x4c4>
   12b78:	bl	10a5c <utf8proc_errmsg@plt>
   12b7c:	bl	12390 <error@@Base>
   12b80:	ldr	r0, [pc, #56]	; 12bc0 <error@@Base+0x830>
   12b84:	add	r0, pc, r0
   12b88:	bl	12390 <error@@Base>
   12b8c:	ldr	r0, [pc, #48]	; 12bc4 <error@@Base+0x834>
   12b90:	add	r0, pc, r0
   12b94:	bl	12390 <error@@Base>
   12b98:	ldr	r1, [pc, #40]	; 12bc8 <error@@Base+0x838>
   12b9c:	ldr	r0, [pc, #40]	; 12bcc <error@@Base+0x83c>
   12ba0:	add	r1, pc, r1
   12ba4:	add	r0, pc, r0
   12ba8:	bl	12440 <error@@Base+0xb0>
   12bac:	ldrdeq	r2, [r1], -ip
   12bb0:	andeq	r0, r0, r8, lsl #20
   12bb4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12bb8:	andeq	r1, r0, ip, rrx
   12bbc:	andeq	r1, r0, r8, lsl #1
   12bc0:	andeq	r1, r0, r4, asr r0
   12bc4:	andeq	r1, r0, r0, rrx
   12bc8:	andeq	r0, r0, ip, lsr #31
   12bcc:			; <UNDEFINED> instruction: 0x00000fb4
   12bd0:	push	{r4, lr}
   12bd4:	bl	10960 <utf8proc_encode_char@plt>
   12bd8:	cmp	r0, #0
   12bdc:	ble	12be8 <error@@Base+0x858>
   12be0:	sxtb	r0, r0
   12be4:	pop	{r4, pc}
   12be8:	ldr	r0, [pc, #4]	; 12bf4 <error@@Base+0x864>
   12bec:	add	r0, pc, r0
   12bf0:	bl	12390 <error@@Base>
   12bf4:	andeq	r1, r0, ip, lsl r0
   12bf8:	push	{r4, r5, r6, r7, r8, lr}
   12bfc:	uxtb	r4, r0
   12c00:	cmp	r4, #0
   12c04:	mov	r6, r1
   12c08:	mov	r8, r2
   12c0c:	uxtb	r5, r3
   12c10:	moveq	r7, r4
   12c14:	bne	12c8c <error@@Base+0x8fc>
   12c18:	cmp	r6, #10
   12c1c:	beq	12c6c <error@@Base+0x8dc>
   12c20:	mov	r0, r6
   12c24:	bl	10948 <utf8proc_get_property@plt>
   12c28:	cmp	r6, #32
   12c2c:	beq	12ca4 <error@@Base+0x914>
   12c30:	ldrh	r3, [r0]
   12c34:	cmp	r3, #29
   12c38:	bhi	12c4c <error@@Base+0x8bc>
   12c3c:	mov	r1, #1
   12c40:	ldr	r2, [pc, #192]	; 12d08 <error@@Base+0x978>
   12c44:	ands	r3, r2, r1, lsl r3
   12c48:	bne	12ca4 <error@@Base+0x914>
   12c4c:	cmp	r6, #255	; 0xff
   12c50:	bls	12cf0 <error@@Base+0x960>
   12c54:	ldr	r1, [pc, #176]	; 12d0c <error@@Base+0x97c>
   12c58:	mov	r2, r6
   12c5c:	add	r0, r8, r4
   12c60:	add	r1, pc, r1
   12c64:	pop	{r4, r5, r6, r7, r8, lr}
   12c68:	b	10a50 <sprintf@plt>
   12c6c:	ldr	r1, [pc, #156]	; 12d10 <error@@Base+0x980>
   12c70:	cmp	r5, #0
   12c74:	add	r1, pc, r1
   12c78:	add	r0, r8, r4
   12c7c:	ldreq	r1, [pc, #144]	; 12d14 <error@@Base+0x984>
   12c80:	addeq	r1, pc, r1
   12c84:	pop	{r4, r5, r6, r7, r8, lr}
   12c88:	b	10a50 <sprintf@plt>
   12c8c:	mov	r1, r2
   12c90:	mov	r0, #94	; 0x5e
   12c94:	bl	12bd0 <error@@Base+0x840>
   12c98:	mov	r4, r0
   12c9c:	sxth	r7, r0
   12ca0:	b	12c18 <error@@Base+0x888>
   12ca4:	mov	r0, r6
   12ca8:	bl	10a08 <utf8proc_category@plt>
   12cac:	sub	r0, r0, #6
   12cb0:	cmp	r0, #2
   12cb4:	bhi	12cd0 <error@@Base+0x940>
   12cb8:	add	r1, r8, r4
   12cbc:	ldr	r0, [pc, #84]	; 12d18 <error@@Base+0x988>
   12cc0:	bl	12bd0 <error@@Base+0x840>
   12cc4:	add	r7, r0, r7
   12cc8:	sxth	r7, r7
   12ccc:	mov	r4, r7
   12cd0:	add	r1, r8, r4
   12cd4:	mov	r0, r6
   12cd8:	bl	12bd0 <error@@Base+0x840>
   12cdc:	mov	r3, #0
   12ce0:	add	r0, r0, r7
   12ce4:	sxth	r0, r0
   12ce8:	strb	r3, [r8, r0]
   12cec:	pop	{r4, r5, r6, r7, r8, pc}
   12cf0:	ldr	r1, [pc, #36]	; 12d1c <error@@Base+0x98c>
   12cf4:	mov	r2, r6
   12cf8:	add	r0, r8, r4
   12cfc:	add	r1, pc, r1
   12d00:	pop	{r4, r5, r6, r7, r8, lr}
   12d04:	b	10a50 <sprintf@plt>
   12d08:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   12d0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12d10:	andeq	r0, r0, ip, lsr #31
   12d14:	andeq	r0, r0, r4, lsl r7
   12d18:	andeq	r2, r0, ip, asr #11
   12d1c:	andeq	r0, r0, ip, lsr #30
   12d20:	push	{r4, r5, r6, r7, lr}
   12d24:	mov	r7, r0
   12d28:	mov	r0, r1
   12d2c:	ldr	r1, [pc, #184]	; 12dec <error@@Base+0xa5c>
   12d30:	sub	sp, sp, #20
   12d34:	add	r1, pc, r1
   12d38:	mov	r5, r2
   12d3c:	bl	124a0 <error@@Base+0x110>
   12d40:	cmp	r5, #0
   12d44:	mov	r6, r0
   12d48:	beq	12d9c <error@@Base+0xa0c>
   12d4c:	mov	r3, r0
   12d50:	ldr	r4, [pc, #152]	; 12df0 <error@@Base+0xa60>
   12d54:	ldr	r0, [pc, #152]	; 12df4 <error@@Base+0xa64>
   12d58:	add	r4, pc, r4
   12d5c:	mov	r2, #55	; 0x37
   12d60:	mov	r1, #1
   12d64:	add	r0, pc, r0
   12d68:	bl	109a8 <fwrite@plt>
   12d6c:	mov	r3, r6
   12d70:	mov	r2, #55	; 0x37
   12d74:	mov	r1, #1
   12d78:	mov	r0, r4
   12d7c:	bl	109a8 <fwrite@plt>
   12d80:	mov	r0, r6
   12d84:	blx	r5
   12d88:	mov	r3, r6
   12d8c:	mov	r0, r4
   12d90:	mov	r2, #55	; 0x37
   12d94:	mov	r1, #1
   12d98:	bl	109a8 <fwrite@plt>
   12d9c:	ldr	r4, [r7]
   12da0:	cmp	r4, #0
   12da4:	addne	r5, sp, #4
   12da8:	movne	r7, #0
   12dac:	beq	12ddc <error@@Base+0xa4c>
   12db0:	ldr	r1, [r4, #12]
   12db4:	ldrb	r0, [r4, #8]
   12db8:	mov	r3, r7
   12dbc:	mov	r2, r5
   12dc0:	bl	12bf8 <error@@Base+0x868>
   12dc4:	mov	r1, r6
   12dc8:	mov	r0, r5
   12dcc:	bl	10a68 <fputs@plt>
   12dd0:	ldr	r4, [r4, #4]
   12dd4:	cmp	r4, #0
   12dd8:	bne	12db0 <error@@Base+0xa20>
   12ddc:	mov	r0, r6
   12de0:	bl	12234 <getc@plt+0x17a8>
   12de4:	add	sp, sp, #20
   12de8:	pop	{r4, r5, r6, r7, pc}
   12dec:	andeq	r0, r0, ip, ror r5
   12df0:	andeq	r0, r0, r8, asr #28
   12df4:	andeq	r0, r0, r4, lsl #28
   12df8:	push	{r4, r5, r6, r7, r8, r9, lr}
   12dfc:	mov	r5, #0
   12e00:	ldrb	r3, [r1]
   12e04:	sub	sp, sp, #12
   12e08:	cmp	r3, r5
   12e0c:	str	r5, [sp, #4]
   12e10:	movne	r4, r1
   12e14:	movne	r6, r0
   12e18:	addne	r8, sp, #4
   12e1c:	mvnne	r7, #0
   12e20:	bne	12e3c <error@@Base+0xaac>
   12e24:	b	12e68 <error@@Base+0xad8>
   12e28:	ldr	r2, [sp, #4]
   12e2c:	bl	127bc <error@@Base+0x42c>
   12e30:	ldrb	r3, [r4, r9]!
   12e34:	cmp	r3, #0
   12e38:	beq	12e68 <error@@Base+0xad8>
   12e3c:	mov	r1, r7
   12e40:	mov	r2, r8
   12e44:	mov	r0, r4
   12e48:	bl	109c0 <utf8proc_iterate@plt>
   12e4c:	mov	r1, r5
   12e50:	subs	r9, r0, #0
   12e54:	mov	r0, r6
   12e58:	bgt	12e28 <error@@Base+0xa98>
   12e5c:	mov	r0, #0
   12e60:	add	sp, sp, #12
   12e64:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12e68:	mov	r0, #1
   12e6c:	add	sp, sp, #12
   12e70:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12e74:	mov	r3, #0
   12e78:	str	r3, [r0, #4]
   12e7c:	str	r3, [r0]
   12e80:	str	r3, [r0, #8]
   12e84:	str	r3, [r0, #12]
   12e88:	bx	lr
   12e8c:	ldr	r3, [r0]
   12e90:	mov	r2, #0
   12e94:	cmp	r3, r2
   12e98:	push	{r4, lr}
   12e9c:	mov	r4, r0
   12ea0:	stm	r1, {r2, r3}
   12ea4:	str	r1, [r0]
   12ea8:	streq	r1, [r0, #4]
   12eac:	ldr	r0, [r0, #8]
   12eb0:	strne	r1, [r3]
   12eb4:	cmp	r0, #0
   12eb8:	beq	12ec8 <error@@Base+0xb38>
   12ebc:	bl	1093c <free@plt>
   12ec0:	mov	r3, #0
   12ec4:	str	r3, [r4, #8]
   12ec8:	ldr	r3, [r4, #12]
   12ecc:	add	r3, r3, #1
   12ed0:	str	r3, [r4, #12]
   12ed4:	pop	{r4, pc}
   12ed8:	ldr	r3, [r0, #4]
   12edc:	mov	r2, #0
   12ee0:	cmp	r3, r2
   12ee4:	push	{r4, lr}
   12ee8:	mov	r4, r0
   12eec:	str	r3, [r1]
   12ef0:	str	r2, [r1, #4]
   12ef4:	streq	r1, [r0]
   12ef8:	ldr	r0, [r0, #8]
   12efc:	strne	r1, [r3, #4]
   12f00:	cmp	r0, #0
   12f04:	str	r1, [r4, #4]
   12f08:	beq	12f18 <error@@Base+0xb88>
   12f0c:	bl	1093c <free@plt>
   12f10:	mov	r3, #0
   12f14:	str	r3, [r4, #8]
   12f18:	ldr	r3, [r4, #12]
   12f1c:	add	r3, r3, #1
   12f20:	str	r3, [r4, #12]
   12f24:	pop	{r4, pc}
   12f28:	ldr	r3, [r2]
   12f2c:	push	{r4, lr}
   12f30:	cmp	r3, #0
   12f34:	str	r3, [r1]
   12f38:	str	r2, [r1, #4]
   12f3c:	mov	r4, r0
   12f40:	streq	r1, [r0]
   12f44:	ldr	r0, [r0, #8]
   12f48:	strne	r1, [r3, #4]
   12f4c:	cmp	r0, #0
   12f50:	str	r1, [r2]
   12f54:	beq	12f64 <error@@Base+0xbd4>
   12f58:	bl	1093c <free@plt>
   12f5c:	mov	r3, #0
   12f60:	str	r3, [r4, #8]
   12f64:	ldr	r3, [r4, #12]
   12f68:	add	r3, r3, #1
   12f6c:	str	r3, [r4, #12]
   12f70:	pop	{r4, pc}
   12f74:	ldr	r3, [r1, #4]
   12f78:	push	{r4, lr}
   12f7c:	cmp	r3, #0
   12f80:	stm	r2, {r1, r3}
   12f84:	mov	r4, r0
   12f88:	str	r2, [r1, #4]
   12f8c:	streq	r2, [r0, #4]
   12f90:	ldr	r0, [r0, #8]
   12f94:	strne	r2, [r3]
   12f98:	cmp	r0, #0
   12f9c:	beq	12fac <error@@Base+0xc1c>
   12fa0:	bl	1093c <free@plt>
   12fa4:	mov	r3, #0
   12fa8:	str	r3, [r4, #8]
   12fac:	ldr	r3, [r4, #12]
   12fb0:	add	r3, r3, #1
   12fb4:	str	r3, [r4, #12]
   12fb8:	pop	{r4, pc}
   12fbc:	ldr	r3, [r1]
   12fc0:	ldr	r2, [r1, #4]
   12fc4:	cmp	r3, #0
   12fc8:	push	{r4, r5, r6, lr}
   12fcc:	mov	r4, r0
   12fd0:	strne	r2, [r3, #4]
   12fd4:	ldrne	r2, [r1, #4]
   12fd8:	streq	r2, [r0]
   12fdc:	cmp	r2, #0
   12fe0:	streq	r3, [r0, #4]
   12fe4:	ldr	r0, [r0, #8]
   12fe8:	mov	r5, #0
   12fec:	strne	r3, [r2]
   12ff0:	cmp	r0, r5
   12ff4:	str	r5, [r1, #4]
   12ff8:	str	r5, [r1]
   12ffc:	beq	13008 <error@@Base+0xc78>
   13000:	bl	1093c <free@plt>
   13004:	str	r5, [r4, #8]
   13008:	ldr	r3, [r4, #12]
   1300c:	sub	r3, r3, #1
   13010:	str	r3, [r4, #12]
   13014:	pop	{r4, r5, r6, pc}
   13018:	ldr	r3, [r0, #8]
   1301c:	cmp	r3, #0
   13020:	bxne	lr
   13024:	ldr	r3, [r0, #12]
   13028:	cmp	r3, #0
   1302c:	bxeq	lr
   13030:	push	{r4, lr}
   13034:	mov	r1, #4
   13038:	mov	r4, r0
   1303c:	mov	r0, r3
   13040:	bl	123e8 <error@@Base+0x58>
   13044:	ldr	r3, [r4]
   13048:	cmp	r3, #0
   1304c:	str	r0, [r4, #8]
   13050:	popeq	{r4, pc}
   13054:	sub	r0, r0, #4
   13058:	str	r3, [r0, #4]!
   1305c:	ldr	r3, [r3, #4]
   13060:	cmp	r3, #0
   13064:	bne	13058 <error@@Base+0xcc8>
   13068:	pop	{r4, pc}
   1306c:	push	{r4, r5, r6, lr}
   13070:	ldr	r4, [r0]
   13074:	cmp	r4, #0
   13078:	popeq	{r4, r5, r6, pc}
   1307c:	mov	r5, r0
   13080:	mov	r6, r1
   13084:	mov	r1, r4
   13088:	mov	r0, r5
   1308c:	bl	12fbc <error@@Base+0xc2c>
   13090:	mov	r0, r4
   13094:	blx	r6
   13098:	ldr	r4, [r5]
   1309c:	cmp	r4, #0
   130a0:	bne	13084 <error@@Base+0xcf4>
   130a4:	pop	{r4, r5, r6, pc}
   130a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   130ac:	mov	r7, r0
   130b0:	ldr	r6, [pc, #72]	; 13100 <error@@Base+0xd70>
   130b4:	ldr	r5, [pc, #72]	; 13104 <error@@Base+0xd74>
   130b8:	add	r6, pc, r6
   130bc:	add	r5, pc, r5
   130c0:	sub	r6, r6, r5
   130c4:	mov	r8, r1
   130c8:	mov	r9, r2
   130cc:	bl	108ec <calloc@plt-0x20>
   130d0:	asrs	r6, r6, #2
   130d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   130d8:	mov	r4, #0
   130dc:	add	r4, r4, #1
   130e0:	ldr	r3, [r5], #4
   130e4:	mov	r2, r9
   130e8:	mov	r1, r8
   130ec:	mov	r0, r7
   130f0:	blx	r3
   130f4:	cmp	r6, r4
   130f8:	bne	130dc <error@@Base+0xd4c>
   130fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13100:	strdeq	r1, [r1], -ip
   13104:	strdeq	r1, [r1], -r4
   13108:	bx	lr

Disassembly of section .fini:

0001310c <.fini>:
   1310c:	push	{r3, lr}
   13110:	pop	{r3, pc}
