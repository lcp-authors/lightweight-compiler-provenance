
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

000109bc <.init>:
   109bc:	push	{r3, lr}
   109c0:	bl	10afc <_start@@Base+0x3c>
   109c4:	pop	{r3, pc}

Disassembly of section .plt:

000109c8 <calloc@plt-0x14>:
   109c8:	push	{lr}		; (str lr, [sp, #-4]!)
   109cc:	ldr	lr, [pc, #4]	; 109d8 <calloc@plt-0x4>
   109d0:	add	lr, pc, lr
   109d4:	ldr	pc, [lr, #8]!
   109d8:	andeq	r1, r1, r8, lsr #12

000109dc <calloc@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1576]!	; 0x628

000109e8 <raise@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1568]!	; 0x620

000109f4 <strcmp@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1560]!	; 0x618

00010a00 <printf@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1552]!	; 0x610

00010a0c <free@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1544]!	; 0x608

00010a18 <fgets@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1536]!	; 0x600

00010a24 <time@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a30 <realloc@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a3c <strcat@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a48 <strcpy@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a54 <puts@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a60 <malloc@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a6c <__libc_start_main@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #69632	; 0x11000
   10a74:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a78 <__gmon_start__@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #69632	; 0x11000
   10a80:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a84 <strlen@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #69632	; 0x11000
   10a8c:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a90 <srand@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #69632	; 0x11000
   10a98:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a9c <rand@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #69632	; 0x11000
   10aa4:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa8 <__isoc99_scanf@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #69632	; 0x11000
   10ab0:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab4 <abort@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #69632	; 0x11000
   10abc:	ldr	pc, [ip, #1432]!	; 0x598

Disassembly of section .text:

00010ac0 <_start@@Base>:
   10ac0:	mov	fp, #0
   10ac4:	mov	lr, #0
   10ac8:	pop	{r1}		; (ldr r1, [sp], #4)
   10acc:	mov	r2, sp
   10ad0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ad4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ad8:	ldr	ip, [pc, #16]	; 10af0 <_start@@Base+0x30>
   10adc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ae0:	ldr	r0, [pc, #12]	; 10af4 <_start@@Base+0x34>
   10ae4:	ldr	r3, [pc, #12]	; 10af8 <_start@@Base+0x38>
   10ae8:	bl	10a6c <__libc_start_main@plt>
   10aec:	bl	10ab4 <abort@plt>
   10af0:	andeq	r1, r1, ip, asr #21
   10af4:	andeq	r0, r1, ip, asr ip
   10af8:	andeq	r1, r1, ip, ror #20
   10afc:	ldr	r3, [pc, #20]	; 10b18 <_start@@Base+0x58>
   10b00:	ldr	r2, [pc, #20]	; 10b1c <_start@@Base+0x5c>
   10b04:	add	r3, pc, r3
   10b08:	ldr	r2, [r3, r2]
   10b0c:	cmp	r2, #0
   10b10:	bxeq	lr
   10b14:	b	10a78 <__gmon_start__@plt>
   10b18:	strdeq	r1, [r1], -r4
   10b1c:	andeq	r0, r0, r8, asr r0
   10b20:	ldr	r3, [pc, #28]	; 10b44 <_start@@Base+0x84>
   10b24:	ldr	r0, [pc, #28]	; 10b48 <_start@@Base+0x88>
   10b28:	sub	r3, r3, r0
   10b2c:	cmp	r3, #6
   10b30:	bxls	lr
   10b34:	ldr	r3, [pc, #16]	; 10b4c <_start@@Base+0x8c>
   10b38:	cmp	r3, #0
   10b3c:	bxeq	lr
   10b40:	bx	r3
   10b44:	andeq	r2, r2, fp, rrx
   10b48:	andeq	r2, r2, r8, rrx
   10b4c:	andeq	r0, r0, r0
   10b50:	ldr	r1, [pc, #36]	; 10b7c <_start@@Base+0xbc>
   10b54:	ldr	r0, [pc, #36]	; 10b80 <_start@@Base+0xc0>
   10b58:	sub	r1, r1, r0
   10b5c:	asr	r1, r1, #2
   10b60:	add	r1, r1, r1, lsr #31
   10b64:	asrs	r1, r1, #1
   10b68:	bxeq	lr
   10b6c:	ldr	r3, [pc, #16]	; 10b84 <_start@@Base+0xc4>
   10b70:	cmp	r3, #0
   10b74:	bxeq	lr
   10b78:	bx	r3
   10b7c:	andeq	r2, r2, r8, rrx
   10b80:	andeq	r2, r2, r8, rrx
   10b84:	andeq	r0, r0, r0
   10b88:	push	{r4, lr}
   10b8c:	ldr	r4, [pc, #24]	; 10bac <_start@@Base+0xec>
   10b90:	ldrb	r3, [r4]
   10b94:	cmp	r3, #0
   10b98:	popne	{r4, pc}
   10b9c:	bl	10b20 <_start@@Base+0x60>
   10ba0:	mov	r3, #1
   10ba4:	strb	r3, [r4]
   10ba8:	pop	{r4, pc}
   10bac:	andeq	r2, r2, r8, rrx
   10bb0:	ldr	r0, [pc, #40]	; 10be0 <_start@@Base+0x120>
   10bb4:	ldr	r3, [r0]
   10bb8:	cmp	r3, #0
   10bbc:	bne	10bc4 <_start@@Base+0x104>
   10bc0:	b	10b50 <_start@@Base+0x90>
   10bc4:	ldr	r3, [pc, #24]	; 10be4 <_start@@Base+0x124>
   10bc8:	cmp	r3, #0
   10bcc:	beq	10bc0 <_start@@Base+0x100>
   10bd0:	push	{r4, lr}
   10bd4:	blx	r3
   10bd8:	pop	{r4, lr}
   10bdc:	b	10b50 <_start@@Base+0x90>
   10be0:	andeq	r1, r2, r4, lsl pc
   10be4:	andeq	r0, r0, r0

00010be8 <imprime@@Base>:
   10be8:	push	{r4, fp, lr}
   10bec:	add	fp, sp, #8
   10bf0:	sub	sp, sp, #20
   10bf4:	str	r0, [fp, #-24]	; 0xffffffe8
   10bf8:	mov	r3, #0
   10bfc:	str	r3, [fp, #-16]
   10c00:	b	10c40 <imprime@@Base+0x58>
   10c04:	ldr	r3, [fp, #-16]
   10c08:	add	r4, r3, #1
   10c0c:	ldr	r1, [fp, #-16]
   10c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c14:	bl	11054 <vetor_elemento@@Base>
   10c18:	mov	r3, r0
   10c1c:	mov	r2, r3
   10c20:	mov	r1, r4
   10c24:	ldr	r3, [pc, #44]	; 10c58 <imprime@@Base+0x70>
   10c28:	add	r3, pc, r3
   10c2c:	mov	r0, r3
   10c30:	bl	10a00 <printf@plt>
   10c34:	ldr	r3, [fp, #-16]
   10c38:	add	r3, r3, #1
   10c3c:	str	r3, [fp, #-16]
   10c40:	ldr	r3, [fp, #-16]
   10c44:	cmp	r3, #4
   10c48:	ble	10c04 <imprime@@Base+0x1c>
   10c4c:	nop			; (mov r0, r0)
   10c50:	sub	sp, fp, #8
   10c54:	pop	{r4, fp, pc}
   10c58:	andeq	r0, r0, ip, lsr #29

00010c5c <main@@Base>:
   10c5c:	push	{r4, fp, lr}
   10c60:	add	fp, sp, #8
   10c64:	sub	sp, sp, #116	; 0x74
   10c68:	ldr	r4, [pc, #360]	; 10dd8 <main@@Base+0x17c>
   10c6c:	add	r4, pc, r4
   10c70:	bl	10df8 <vetor_novo@@Base>
   10c74:	str	r0, [fp, #-20]	; 0xffffffec
   10c78:	mov	r3, #0
   10c7c:	str	r3, [fp, #-16]
   10c80:	b	10d00 <main@@Base+0xa4>
   10c84:	ldr	r3, [fp, #-16]
   10c88:	add	r3, r3, #1
   10c8c:	mov	r1, r3
   10c90:	ldr	r3, [pc, #324]	; 10ddc <main@@Base+0x180>
   10c94:	add	r3, pc, r3
   10c98:	mov	r0, r3
   10c9c:	bl	10a00 <printf@plt>
   10ca0:	ldr	r3, [pc, #312]	; 10de0 <main@@Base+0x184>
   10ca4:	ldr	r3, [r4, r3]
   10ca8:	ldr	r2, [r3]
   10cac:	sub	r3, fp, #120	; 0x78
   10cb0:	mov	r1, #100	; 0x64
   10cb4:	mov	r0, r3
   10cb8:	bl	10a18 <fgets@plt>
   10cbc:	sub	r3, fp, #120	; 0x78
   10cc0:	mov	r0, r3
   10cc4:	bl	10a84 <strlen@plt>
   10cc8:	mov	r3, r0
   10ccc:	sub	r3, r3, #1
   10cd0:	sub	r2, fp, #12
   10cd4:	add	r3, r2, r3
   10cd8:	mov	r2, #0
   10cdc:	strb	r2, [r3, #-108]	; 0xffffff94
   10ce0:	sub	r3, fp, #120	; 0x78
   10ce4:	ldr	r2, [fp, #-16]
   10ce8:	mov	r1, r3
   10cec:	ldr	r0, [fp, #-20]	; 0xffffffec
   10cf0:	bl	110c4 <vetor_insere@@Base>
   10cf4:	ldr	r3, [fp, #-16]
   10cf8:	add	r3, r3, #1
   10cfc:	str	r3, [fp, #-16]
   10d00:	ldr	r3, [fp, #-16]
   10d04:	cmp	r3, #4
   10d08:	ble	10c84 <main@@Base+0x28>
   10d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d10:	bl	10be8 <imprime@@Base>
   10d14:	ldr	r3, [pc, #200]	; 10de4 <main@@Base+0x188>
   10d18:	add	r3, pc, r3
   10d1c:	mov	r0, r3
   10d20:	bl	10a00 <printf@plt>
   10d24:	sub	r3, fp, #120	; 0x78
   10d28:	mov	r1, r3
   10d2c:	ldr	r3, [pc, #180]	; 10de8 <main@@Base+0x18c>
   10d30:	add	r3, pc, r3
   10d34:	mov	r0, r3
   10d38:	bl	10aa8 <__isoc99_scanf@plt>
   10d3c:	sub	r3, fp, #120	; 0x78
   10d40:	mov	r1, r3
   10d44:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d48:	bl	1139c <vetor_pesquisa@@Base>
   10d4c:	mov	r3, r0
   10d50:	mov	r1, r3
   10d54:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d58:	bl	112ac <vetor_remove@@Base>
   10d5c:	mov	r3, r0
   10d60:	cmp	r3, #0
   10d64:	beq	10d7c <main@@Base+0x120>
   10d68:	ldr	r3, [pc, #124]	; 10dec <main@@Base+0x190>
   10d6c:	add	r3, pc, r3
   10d70:	mov	r0, r3
   10d74:	bl	10a54 <puts@plt>
   10d78:	b	10d84 <main@@Base+0x128>
   10d7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d80:	bl	10be8 <imprime@@Base>
   10d84:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d88:	bl	11438 <vetor_ordena@@Base>
   10d8c:	mov	r3, r0
   10d90:	cmp	r3, #0
   10d94:	beq	10da8 <main@@Base+0x14c>
   10d98:	ldr	r3, [pc, #80]	; 10df0 <main@@Base+0x194>
   10d9c:	add	r3, pc, r3
   10da0:	mov	r0, r3
   10da4:	bl	10a00 <printf@plt>
   10da8:	ldr	r3, [pc, #68]	; 10df4 <main@@Base+0x198>
   10dac:	add	r3, pc, r3
   10db0:	mov	r0, r3
   10db4:	bl	10a54 <puts@plt>
   10db8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10dbc:	bl	10be8 <imprime@@Base>
   10dc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   10dc4:	bl	10e5c <vetor_apaga@@Base>
   10dc8:	mov	r3, #0
   10dcc:	mov	r0, r3
   10dd0:	sub	sp, fp, #8
   10dd4:	pop	{r4, fp, pc}
   10dd8:	andeq	r1, r1, ip, lsl #7
   10ddc:	andeq	r0, r0, r0, ror #28
   10de0:	andeq	r0, r0, ip, asr r0
   10de4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10de8:	strdeq	r0, [r0], -r8
   10dec:	andeq	r0, r0, r0, asr #27
   10df0:	andeq	r0, r0, r8, lsr #27
   10df4:			; <UNDEFINED> instruction: 0x00000dbc

00010df8 <vetor_novo@@Base>:
   10df8:	push	{fp, lr}
   10dfc:	add	fp, sp, #4
   10e00:	sub	sp, sp, #8
   10e04:	mov	r0, #12
   10e08:	bl	10a60 <malloc@plt>
   10e0c:	mov	r3, r0
   10e10:	str	r3, [fp, #-8]
   10e14:	ldr	r3, [fp, #-8]
   10e18:	cmp	r3, #0
   10e1c:	bne	10e28 <vetor_novo@@Base+0x30>
   10e20:	mov	r3, #0
   10e24:	b	10e50 <vetor_novo@@Base+0x58>
   10e28:	ldr	r3, [fp, #-8]
   10e2c:	mov	r2, #0
   10e30:	str	r2, [r3]
   10e34:	ldr	r3, [fp, #-8]
   10e38:	mov	r2, #0
   10e3c:	str	r2, [r3, #4]
   10e40:	ldr	r3, [fp, #-8]
   10e44:	mov	r2, #0
   10e48:	str	r2, [r3, #8]
   10e4c:	ldr	r3, [fp, #-8]
   10e50:	mov	r0, r3
   10e54:	sub	sp, fp, #4
   10e58:	pop	{fp, pc}

00010e5c <vetor_apaga@@Base>:
   10e5c:	push	{fp, lr}
   10e60:	add	fp, sp, #4
   10e64:	sub	sp, sp, #16
   10e68:	str	r0, [fp, #-16]
   10e6c:	ldr	r3, [fp, #-16]
   10e70:	cmp	r3, #0
   10e74:	beq	10ee0 <vetor_apaga@@Base+0x84>
   10e78:	mov	r3, #0
   10e7c:	str	r3, [fp, #-8]
   10e80:	b	10eb0 <vetor_apaga@@Base+0x54>
   10e84:	ldr	r3, [fp, #-16]
   10e88:	ldr	r2, [r3, #8]
   10e8c:	ldr	r3, [fp, #-8]
   10e90:	lsl	r3, r3, #2
   10e94:	add	r3, r2, r3
   10e98:	ldr	r3, [r3]
   10e9c:	mov	r0, r3
   10ea0:	bl	10a0c <free@plt>
   10ea4:	ldr	r3, [fp, #-8]
   10ea8:	add	r3, r3, #1
   10eac:	str	r3, [fp, #-8]
   10eb0:	ldr	r3, [fp, #-16]
   10eb4:	ldr	r2, [r3]
   10eb8:	ldr	r3, [fp, #-8]
   10ebc:	cmp	r2, r3
   10ec0:	bgt	10e84 <vetor_apaga@@Base+0x28>
   10ec4:	ldr	r3, [fp, #-16]
   10ec8:	ldr	r3, [r3, #8]
   10ecc:	mov	r0, r3
   10ed0:	bl	10a0c <free@plt>
   10ed4:	ldr	r0, [fp, #-16]
   10ed8:	bl	10a0c <free@plt>
   10edc:	b	10ee4 <vetor_apaga@@Base+0x88>
   10ee0:	nop			; (mov r0, r0)
   10ee4:	sub	sp, fp, #4
   10ee8:	pop	{fp, pc}

00010eec <vetor_atribui@@Base>:
   10eec:	push	{r4, fp, lr}
   10ef0:	add	fp, sp, #8
   10ef4:	sub	sp, sp, #28
   10ef8:	str	r0, [fp, #-24]	; 0xffffffe8
   10efc:	str	r1, [fp, #-28]	; 0xffffffe4
   10f00:	str	r2, [fp, #-32]	; 0xffffffe0
   10f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f08:	cmp	r3, #0
   10f0c:	beq	10f30 <vetor_atribui@@Base+0x44>
   10f10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f14:	cmp	r3, #0
   10f18:	blt	10f30 <vetor_atribui@@Base+0x44>
   10f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f20:	ldr	r2, [r3]
   10f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f28:	cmp	r2, r3
   10f2c:	bgt	10f38 <vetor_atribui@@Base+0x4c>
   10f30:	mvn	r3, #0
   10f34:	b	1100c <vetor_atribui@@Base+0x120>
   10f38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10f3c:	bl	10a84 <strlen@plt>
   10f40:	str	r0, [fp, #-16]
   10f44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f48:	ldr	r2, [r3, #8]
   10f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f50:	lsl	r3, r3, #2
   10f54:	add	r3, r2, r3
   10f58:	ldr	r3, [r3]
   10f5c:	mov	r0, r3
   10f60:	bl	10a84 <strlen@plt>
   10f64:	mov	r2, r0
   10f68:	ldr	r3, [fp, #-16]
   10f6c:	cmp	r2, r3
   10f70:	bcs	10fe4 <vetor_atribui@@Base+0xf8>
   10f74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f78:	ldr	r2, [r3, #8]
   10f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f80:	lsl	r3, r3, #2
   10f84:	add	r4, r2, r3
   10f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f8c:	ldr	r2, [r3, #8]
   10f90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10f94:	lsl	r3, r3, #2
   10f98:	add	r3, r2, r3
   10f9c:	ldr	r2, [r3]
   10fa0:	ldr	r3, [fp, #-16]
   10fa4:	add	r3, r3, #1
   10fa8:	mov	r1, r3
   10fac:	mov	r0, r2
   10fb0:	bl	10a30 <realloc@plt>
   10fb4:	mov	r3, r0
   10fb8:	str	r3, [r4]
   10fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fc0:	ldr	r2, [r3, #8]
   10fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10fc8:	lsl	r3, r3, #2
   10fcc:	add	r3, r2, r3
   10fd0:	ldr	r3, [r3]
   10fd4:	cmp	r3, #0
   10fd8:	bne	10fe4 <vetor_atribui@@Base+0xf8>
   10fdc:	mvn	r3, #0
   10fe0:	b	1100c <vetor_atribui@@Base+0x120>
   10fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fe8:	ldr	r2, [r3, #8]
   10fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ff0:	lsl	r3, r3, #2
   10ff4:	add	r3, r2, r3
   10ff8:	ldr	r3, [r3]
   10ffc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11000:	mov	r0, r3
   11004:	bl	10a48 <strcpy@plt>
   11008:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1100c:	mov	r0, r3
   11010:	sub	sp, fp, #8
   11014:	pop	{r4, fp, pc}

00011018 <vetor_tamanho@@Base>:
   11018:	push	{fp}		; (str fp, [sp, #-4]!)
   1101c:	add	fp, sp, #0
   11020:	sub	sp, sp, #12
   11024:	str	r0, [fp, #-8]
   11028:	ldr	r3, [fp, #-8]
   1102c:	cmp	r3, #0
   11030:	bne	1103c <vetor_tamanho@@Base+0x24>
   11034:	mvn	r3, #0
   11038:	b	11044 <vetor_tamanho@@Base+0x2c>
   1103c:	ldr	r3, [fp, #-8]
   11040:	ldr	r3, [r3]
   11044:	mov	r0, r3
   11048:	add	sp, fp, #0
   1104c:	pop	{fp}		; (ldr fp, [sp], #4)
   11050:	bx	lr

00011054 <vetor_elemento@@Base>:
   11054:	push	{fp}		; (str fp, [sp, #-4]!)
   11058:	add	fp, sp, #0
   1105c:	sub	sp, sp, #12
   11060:	str	r0, [fp, #-8]
   11064:	str	r1, [fp, #-12]
   11068:	ldr	r3, [fp, #-8]
   1106c:	cmp	r3, #0
   11070:	beq	11094 <vetor_elemento@@Base+0x40>
   11074:	ldr	r3, [fp, #-12]
   11078:	cmp	r3, #0
   1107c:	blt	11094 <vetor_elemento@@Base+0x40>
   11080:	ldr	r3, [fp, #-8]
   11084:	ldr	r2, [r3]
   11088:	ldr	r3, [fp, #-12]
   1108c:	cmp	r2, r3
   11090:	bgt	1109c <vetor_elemento@@Base+0x48>
   11094:	mov	r3, #0
   11098:	b	110b4 <vetor_elemento@@Base+0x60>
   1109c:	ldr	r3, [fp, #-8]
   110a0:	ldr	r2, [r3, #8]
   110a4:	ldr	r3, [fp, #-12]
   110a8:	lsl	r3, r3, #2
   110ac:	add	r3, r2, r3
   110b0:	ldr	r3, [r3]
   110b4:	mov	r0, r3
   110b8:	add	sp, fp, #0
   110bc:	pop	{fp}		; (ldr fp, [sp], #4)
   110c0:	bx	lr

000110c4 <vetor_insere@@Base>:
   110c4:	push	{r4, fp, lr}
   110c8:	add	fp, sp, #8
   110cc:	sub	sp, sp, #28
   110d0:	str	r0, [fp, #-24]	; 0xffffffe8
   110d4:	str	r1, [fp, #-28]	; 0xffffffe4
   110d8:	str	r2, [fp, #-32]	; 0xffffffe0
   110dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110e0:	cmp	r3, #0
   110e4:	beq	11108 <vetor_insere@@Base+0x44>
   110e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   110ec:	cmp	r3, #0
   110f0:	blt	11108 <vetor_insere@@Base+0x44>
   110f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110f8:	ldr	r2, [r3]
   110fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11100:	cmp	r2, r3
   11104:	bge	11110 <vetor_insere@@Base+0x4c>
   11108:	mvn	r3, #0
   1110c:	b	112a0 <vetor_insere@@Base+0x1dc>
   11110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11114:	ldr	r2, [r3]
   11118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1111c:	ldr	r3, [r3, #4]
   11120:	cmp	r2, r3
   11124:	bne	111a0 <vetor_insere@@Base+0xdc>
   11128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1112c:	ldr	r3, [r3, #4]
   11130:	cmp	r3, #0
   11134:	bne	11148 <vetor_insere@@Base+0x84>
   11138:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1113c:	mov	r2, #1
   11140:	str	r2, [r3, #4]
   11144:	b	1115c <vetor_insere@@Base+0x98>
   11148:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1114c:	ldr	r3, [r3, #4]
   11150:	lsl	r2, r3, #1
   11154:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11158:	str	r2, [r3, #4]
   1115c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11160:	ldr	r2, [r3, #8]
   11164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11168:	ldr	r3, [r3, #4]
   1116c:	lsl	r3, r3, #2
   11170:	mov	r1, r3
   11174:	mov	r0, r2
   11178:	bl	10a30 <realloc@plt>
   1117c:	mov	r2, r0
   11180:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11184:	str	r2, [r3, #8]
   11188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1118c:	ldr	r3, [r3, #8]
   11190:	cmp	r3, #0
   11194:	bne	111a0 <vetor_insere@@Base+0xdc>
   11198:	mvn	r3, #0
   1119c:	b	112a0 <vetor_insere@@Base+0x1dc>
   111a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111a4:	ldr	r3, [r3]
   111a8:	sub	r3, r3, #1
   111ac:	str	r3, [fp, #-16]
   111b0:	b	111f4 <vetor_insere@@Base+0x130>
   111b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   111b8:	ldr	r2, [r3, #8]
   111bc:	ldr	r3, [fp, #-16]
   111c0:	add	r3, r3, #1
   111c4:	lsl	r3, r3, #2
   111c8:	add	r3, r2, r3
   111cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   111d0:	ldr	r1, [r2, #8]
   111d4:	ldr	r2, [fp, #-16]
   111d8:	lsl	r2, r2, #2
   111dc:	add	r2, r1, r2
   111e0:	ldr	r2, [r2]
   111e4:	str	r2, [r3]
   111e8:	ldr	r3, [fp, #-16]
   111ec:	sub	r3, r3, #1
   111f0:	str	r3, [fp, #-16]
   111f4:	ldr	r2, [fp, #-16]
   111f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   111fc:	cmp	r2, r3
   11200:	bge	111b4 <vetor_insere@@Base+0xf0>
   11204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11208:	ldr	r2, [r3, #8]
   1120c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11210:	lsl	r3, r3, #2
   11214:	add	r4, r2, r3
   11218:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1121c:	bl	10a84 <strlen@plt>
   11220:	mov	r3, r0
   11224:	add	r3, r3, #1
   11228:	mov	r1, #1
   1122c:	mov	r0, r3
   11230:	bl	109dc <calloc@plt>
   11234:	mov	r3, r0
   11238:	str	r3, [r4]
   1123c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11240:	ldr	r2, [r3, #8]
   11244:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11248:	lsl	r3, r3, #2
   1124c:	add	r3, r2, r3
   11250:	ldr	r3, [r3]
   11254:	cmp	r3, #0
   11258:	bne	11264 <vetor_insere@@Base+0x1a0>
   1125c:	mvn	r3, #0
   11260:	b	112a0 <vetor_insere@@Base+0x1dc>
   11264:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11268:	ldr	r2, [r3, #8]
   1126c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11270:	lsl	r3, r3, #2
   11274:	add	r3, r2, r3
   11278:	ldr	r3, [r3]
   1127c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11280:	mov	r0, r3
   11284:	bl	10a48 <strcpy@plt>
   11288:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1128c:	ldr	r3, [r3]
   11290:	add	r2, r3, #1
   11294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11298:	str	r2, [r3]
   1129c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   112a0:	mov	r0, r3
   112a4:	sub	sp, fp, #8
   112a8:	pop	{r4, fp, pc}

000112ac <vetor_remove@@Base>:
   112ac:	push	{fp, lr}
   112b0:	add	fp, sp, #4
   112b4:	sub	sp, sp, #16
   112b8:	str	r0, [fp, #-16]
   112bc:	str	r1, [fp, #-20]	; 0xffffffec
   112c0:	ldr	r3, [fp, #-16]
   112c4:	cmp	r3, #0
   112c8:	beq	112ec <vetor_remove@@Base+0x40>
   112cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   112d0:	cmp	r3, #0
   112d4:	blt	112ec <vetor_remove@@Base+0x40>
   112d8:	ldr	r3, [fp, #-16]
   112dc:	ldr	r2, [r3]
   112e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   112e4:	cmp	r2, r3
   112e8:	bgt	112f4 <vetor_remove@@Base+0x48>
   112ec:	mvn	r3, #0
   112f0:	b	11390 <vetor_remove@@Base+0xe4>
   112f4:	ldr	r3, [fp, #-16]
   112f8:	ldr	r2, [r3, #8]
   112fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11300:	lsl	r3, r3, #2
   11304:	add	r3, r2, r3
   11308:	ldr	r3, [r3]
   1130c:	mov	r0, r3
   11310:	bl	10a0c <free@plt>
   11314:	ldr	r3, [fp, #-20]	; 0xffffffec
   11318:	add	r3, r3, #1
   1131c:	str	r3, [fp, #-8]
   11320:	b	11364 <vetor_remove@@Base+0xb8>
   11324:	ldr	r3, [fp, #-16]
   11328:	ldr	r2, [r3, #8]
   1132c:	ldr	r3, [fp, #-8]
   11330:	sub	r3, r3, #-1073741823	; 0xc0000001
   11334:	lsl	r3, r3, #2
   11338:	add	r3, r2, r3
   1133c:	ldr	r2, [fp, #-16]
   11340:	ldr	r1, [r2, #8]
   11344:	ldr	r2, [fp, #-8]
   11348:	lsl	r2, r2, #2
   1134c:	add	r2, r1, r2
   11350:	ldr	r2, [r2]
   11354:	str	r2, [r3]
   11358:	ldr	r3, [fp, #-8]
   1135c:	add	r3, r3, #1
   11360:	str	r3, [fp, #-8]
   11364:	ldr	r3, [fp, #-16]
   11368:	ldr	r2, [r3]
   1136c:	ldr	r3, [fp, #-8]
   11370:	cmp	r2, r3
   11374:	bgt	11324 <vetor_remove@@Base+0x78>
   11378:	ldr	r3, [fp, #-16]
   1137c:	ldr	r3, [r3]
   11380:	sub	r2, r3, #1
   11384:	ldr	r3, [fp, #-16]
   11388:	str	r2, [r3]
   1138c:	mov	r3, #0
   11390:	mov	r0, r3
   11394:	sub	sp, fp, #4
   11398:	pop	{fp, pc}

0001139c <vetor_pesquisa@@Base>:
   1139c:	push	{fp, lr}
   113a0:	add	fp, sp, #4
   113a4:	sub	sp, sp, #16
   113a8:	str	r0, [fp, #-16]
   113ac:	str	r1, [fp, #-20]	; 0xffffffec
   113b0:	ldr	r3, [fp, #-16]
   113b4:	cmp	r3, #0
   113b8:	bne	113c4 <vetor_pesquisa@@Base+0x28>
   113bc:	mvn	r3, #0
   113c0:	b	1142c <vetor_pesquisa@@Base+0x90>
   113c4:	mov	r3, #0
   113c8:	str	r3, [fp, #-8]
   113cc:	b	11414 <vetor_pesquisa@@Base+0x78>
   113d0:	ldr	r3, [fp, #-16]
   113d4:	ldr	r2, [r3, #8]
   113d8:	ldr	r3, [fp, #-8]
   113dc:	lsl	r3, r3, #2
   113e0:	add	r3, r2, r3
   113e4:	ldr	r3, [r3]
   113e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   113ec:	mov	r0, r3
   113f0:	bl	109f4 <strcmp@plt>
   113f4:	mov	r3, r0
   113f8:	cmp	r3, #0
   113fc:	bne	11408 <vetor_pesquisa@@Base+0x6c>
   11400:	ldr	r3, [fp, #-8]
   11404:	b	1142c <vetor_pesquisa@@Base+0x90>
   11408:	ldr	r3, [fp, #-8]
   1140c:	add	r3, r3, #1
   11410:	str	r3, [fp, #-8]
   11414:	ldr	r3, [fp, #-16]
   11418:	ldr	r2, [r3]
   1141c:	ldr	r3, [fp, #-8]
   11420:	cmp	r2, r3
   11424:	bgt	113d0 <vetor_pesquisa@@Base+0x34>
   11428:	mvn	r3, #0
   1142c:	mov	r0, r3
   11430:	sub	sp, fp, #4
   11434:	pop	{fp, pc}

00011438 <vetor_ordena@@Base>:
   11438:	push	{fp, lr}
   1143c:	add	fp, sp, #4
   11440:	sub	sp, sp, #24
   11444:	str	r0, [fp, #-24]	; 0xffffffe8
   11448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1144c:	cmp	r3, #0
   11450:	bne	1145c <vetor_ordena@@Base+0x24>
   11454:	mvn	r3, #0
   11458:	b	11550 <vetor_ordena@@Base+0x118>
   1145c:	mov	r3, #1
   11460:	str	r3, [fp, #-8]
   11464:	b	11538 <vetor_ordena@@Base+0x100>
   11468:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1146c:	ldr	r2, [r3, #8]
   11470:	ldr	r3, [fp, #-8]
   11474:	lsl	r3, r3, #2
   11478:	add	r3, r2, r3
   1147c:	ldr	r3, [r3]
   11480:	str	r3, [fp, #-16]
   11484:	ldr	r3, [fp, #-8]
   11488:	str	r3, [fp, #-12]
   1148c:	b	114d0 <vetor_ordena@@Base+0x98>
   11490:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11494:	ldr	r2, [r3, #8]
   11498:	ldr	r3, [fp, #-12]
   1149c:	lsl	r3, r3, #2
   114a0:	add	r3, r2, r3
   114a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   114a8:	ldr	r1, [r2, #8]
   114ac:	ldr	r2, [fp, #-12]
   114b0:	sub	r2, r2, #-1073741823	; 0xc0000001
   114b4:	lsl	r2, r2, #2
   114b8:	add	r2, r1, r2
   114bc:	ldr	r2, [r2]
   114c0:	str	r2, [r3]
   114c4:	ldr	r3, [fp, #-12]
   114c8:	sub	r3, r3, #1
   114cc:	str	r3, [fp, #-12]
   114d0:	ldr	r3, [fp, #-12]
   114d4:	cmp	r3, #0
   114d8:	ble	11510 <vetor_ordena@@Base+0xd8>
   114dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114e0:	ldr	r2, [r3, #8]
   114e4:	ldr	r3, [fp, #-12]
   114e8:	sub	r3, r3, #-1073741823	; 0xc0000001
   114ec:	lsl	r3, r3, #2
   114f0:	add	r3, r2, r3
   114f4:	ldr	r3, [r3]
   114f8:	mov	r1, r3
   114fc:	ldr	r0, [fp, #-16]
   11500:	bl	109f4 <strcmp@plt>
   11504:	mov	r3, r0
   11508:	cmp	r3, #0
   1150c:	blt	11490 <vetor_ordena@@Base+0x58>
   11510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11514:	ldr	r2, [r3, #8]
   11518:	ldr	r3, [fp, #-12]
   1151c:	lsl	r3, r3, #2
   11520:	add	r3, r2, r3
   11524:	ldr	r2, [fp, #-16]
   11528:	str	r2, [r3]
   1152c:	ldr	r3, [fp, #-8]
   11530:	add	r3, r3, #1
   11534:	str	r3, [fp, #-8]
   11538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1153c:	ldr	r2, [r3]
   11540:	ldr	r3, [fp, #-8]
   11544:	cmp	r2, r3
   11548:	bgt	11468 <vetor_ordena@@Base+0x30>
   1154c:	mov	r3, #0
   11550:	mov	r0, r3
   11554:	sub	sp, fp, #4
   11558:	pop	{fp, pc}

0001155c <vetor_concatena@@Base>:
   1155c:	push	{fp, lr}
   11560:	add	fp, sp, #4
   11564:	sub	sp, sp, #16
   11568:	str	r0, [fp, #-16]
   1156c:	str	r1, [fp, #-20]	; 0xffffffec
   11570:	ldr	r3, [fp, #-16]
   11574:	cmp	r3, #0
   11578:	beq	11588 <vetor_concatena@@Base+0x2c>
   1157c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11580:	cmp	r3, #0
   11584:	bne	11590 <vetor_concatena@@Base+0x34>
   11588:	mov	r3, #0
   1158c:	b	11624 <vetor_concatena@@Base+0xc8>
   11590:	bl	10df8 <vetor_novo@@Base>
   11594:	str	r0, [fp, #-8]
   11598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1159c:	ldr	r3, [r3]
   115a0:	lsl	r3, r3, #2
   115a4:	ldr	r2, [fp, #-16]
   115a8:	ldr	r2, [r2]
   115ac:	add	r3, r3, r2
   115b0:	mov	r2, r3
   115b4:	ldr	r3, [fp, #-8]
   115b8:	str	r2, [r3, #8]
   115bc:	ldr	r3, [fp, #-16]
   115c0:	ldr	r2, [r3, #4]
   115c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   115c8:	ldr	r3, [r3, #4]
   115cc:	add	r2, r2, r3
   115d0:	ldr	r3, [fp, #-8]
   115d4:	str	r2, [r3, #4]
   115d8:	ldr	r3, [fp, #-8]
   115dc:	ldr	r3, [r3, #8]
   115e0:	ldr	r2, [r3]
   115e4:	ldr	r3, [fp, #-16]
   115e8:	ldr	r3, [r3, #8]
   115ec:	ldr	r3, [r3]
   115f0:	mov	r1, r3
   115f4:	mov	r0, r2
   115f8:	bl	10a48 <strcpy@plt>
   115fc:	ldr	r3, [fp, #-8]
   11600:	ldr	r3, [r3, #8]
   11604:	ldr	r2, [r3]
   11608:	ldr	r3, [fp, #-20]	; 0xffffffec
   1160c:	ldr	r3, [r3, #8]
   11610:	ldr	r3, [r3]
   11614:	mov	r1, r3
   11618:	mov	r0, r2
   1161c:	bl	10a3c <strcat@plt>
   11620:	ldr	r3, [fp, #-8]
   11624:	mov	r0, r3
   11628:	sub	sp, fp, #4
   1162c:	pop	{fp, pc}

00011630 <vetor_inverte@@Base>:
   11630:	push	{fp, lr}
   11634:	add	fp, sp, #4
   11638:	sub	sp, sp, #24
   1163c:	str	r0, [fp, #-24]	; 0xffffffe8
   11640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11644:	bl	11018 <vetor_tamanho@@Base>
   11648:	str	r0, [fp, #-16]
   1164c:	ldr	r3, [fp, #-16]
   11650:	str	r3, [fp, #-12]
   11654:	ldr	r3, [fp, #-16]
   11658:	cmp	r3, #0
   1165c:	ble	1170c <vetor_inverte@@Base+0xdc>
   11660:	mov	r3, #0
   11664:	str	r3, [fp, #-8]
   11668:	b	116ec <vetor_inverte@@Base+0xbc>
   1166c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11670:	ldr	r2, [r3, #8]
   11674:	ldr	r3, [fp, #-8]
   11678:	lsl	r3, r3, #2
   1167c:	add	r3, r2, r3
   11680:	ldr	r3, [r3]
   11684:	str	r3, [fp, #-20]	; 0xffffffec
   11688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1168c:	ldr	r2, [r3, #8]
   11690:	ldr	r3, [fp, #-8]
   11694:	lsl	r3, r3, #2
   11698:	add	r3, r2, r3
   1169c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   116a0:	ldr	r1, [r2, #8]
   116a4:	ldr	r2, [fp, #-12]
   116a8:	lsl	r2, r2, #2
   116ac:	add	r2, r1, r2
   116b0:	ldr	r2, [r2]
   116b4:	str	r2, [r3]
   116b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116bc:	ldr	r2, [r3, #8]
   116c0:	ldr	r3, [fp, #-12]
   116c4:	lsl	r3, r3, #2
   116c8:	add	r3, r2, r3
   116cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   116d0:	str	r2, [r3]
   116d4:	ldr	r3, [fp, #-12]
   116d8:	sub	r3, r3, #1
   116dc:	str	r3, [fp, #-12]
   116e0:	ldr	r3, [fp, #-8]
   116e4:	add	r3, r3, #1
   116e8:	str	r3, [fp, #-8]
   116ec:	ldr	r2, [fp, #-8]
   116f0:	ldr	r3, [fp, #-16]
   116f4:	cmp	r2, r3
   116f8:	bge	1170c <vetor_inverte@@Base+0xdc>
   116fc:	ldr	r2, [fp, #-8]
   11700:	ldr	r3, [fp, #-12]
   11704:	cmp	r2, r3
   11708:	blt	1166c <vetor_inverte@@Base+0x3c>
   1170c:	mov	r3, #0
   11710:	mov	r0, r3
   11714:	sub	sp, fp, #4
   11718:	pop	{fp, pc}

0001171c <vetor_baralha@@Base>:
   1171c:	push	{fp, lr}
   11720:	add	fp, sp, #4
   11724:	sub	sp, sp, #32
   11728:	str	r0, [fp, #-32]	; 0xffffffe0
   1172c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11730:	ldr	r3, [r3]
   11734:	str	r3, [fp, #-12]
   11738:	bl	10df8 <vetor_novo@@Base>
   1173c:	str	r0, [fp, #-16]
   11740:	sub	r3, fp, #24
   11744:	mov	r0, r3
   11748:	bl	10a24 <time@plt>
   1174c:	mov	r3, r0
   11750:	mov	r0, r3
   11754:	bl	10a90 <srand@plt>
   11758:	mov	r3, #0
   1175c:	str	r3, [fp, #-8]
   11760:	b	117fc <vetor_baralha@@Base+0xe0>
   11764:	bl	10a9c <rand@plt>
   11768:	mov	r2, r0
   1176c:	ldr	r3, [fp, #-12]
   11770:	add	r3, r3, #1
   11774:	mov	r1, r3
   11778:	mov	r0, r2
   1177c:	bl	11a3c <vetor_baralha@@Base+0x320>
   11780:	mov	r3, r1
   11784:	str	r3, [fp, #-20]	; 0xffffffec
   11788:	ldr	r3, [fp, #-16]
   1178c:	ldr	r2, [r3, #8]
   11790:	ldr	r3, [fp, #-8]
   11794:	lsl	r3, r3, #2
   11798:	add	r3, r2, r3
   1179c:	ldr	r3, [r3]
   117a0:	str	r3, [fp, #-28]	; 0xffffffe4
   117a4:	ldr	r3, [fp, #-16]
   117a8:	ldr	r2, [r3, #8]
   117ac:	ldr	r3, [fp, #-8]
   117b0:	lsl	r3, r3, #2
   117b4:	add	r3, r2, r3
   117b8:	ldr	r2, [fp, #-16]
   117bc:	ldr	r1, [r2, #8]
   117c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   117c4:	lsl	r2, r2, #2
   117c8:	add	r2, r1, r2
   117cc:	ldr	r2, [r2]
   117d0:	str	r2, [r3]
   117d4:	ldr	r3, [fp, #-16]
   117d8:	ldr	r2, [r3, #8]
   117dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   117e0:	lsl	r3, r3, #2
   117e4:	add	r3, r2, r3
   117e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   117ec:	str	r2, [r3]
   117f0:	ldr	r3, [fp, #-8]
   117f4:	add	r3, r3, #1
   117f8:	str	r3, [fp, #-8]
   117fc:	ldr	r2, [fp, #-8]
   11800:	ldr	r3, [fp, #-12]
   11804:	cmp	r2, r3
   11808:	blt	11764 <vetor_baralha@@Base+0x48>
   1180c:	ldr	r3, [fp, #-16]
   11810:	mov	r0, r3
   11814:	sub	sp, fp, #4
   11818:	pop	{fp, pc}
   1181c:	cmp	r1, #0
   11820:	beq	11a2c <vetor_baralha@@Base+0x310>
   11824:	eor	ip, r0, r1
   11828:	rsbmi	r1, r1, #0
   1182c:	subs	r2, r1, #1
   11830:	beq	119f8 <vetor_baralha@@Base+0x2dc>
   11834:	movs	r3, r0
   11838:	rsbmi	r3, r0, #0
   1183c:	cmp	r3, r1
   11840:	bls	11a04 <vetor_baralha@@Base+0x2e8>
   11844:	tst	r1, r2
   11848:	beq	11a14 <vetor_baralha@@Base+0x2f8>
   1184c:	clz	r2, r3
   11850:	clz	r0, r1
   11854:	sub	r2, r0, r2
   11858:	rsbs	r2, r2, #31
   1185c:	addne	r2, r2, r2, lsl #1
   11860:	mov	r0, #0
   11864:	addne	pc, pc, r2, lsl #2
   11868:	nop			; (mov r0, r0)
   1186c:	cmp	r3, r1, lsl #31
   11870:	adc	r0, r0, r0
   11874:	subcs	r3, r3, r1, lsl #31
   11878:	cmp	r3, r1, lsl #30
   1187c:	adc	r0, r0, r0
   11880:	subcs	r3, r3, r1, lsl #30
   11884:	cmp	r3, r1, lsl #29
   11888:	adc	r0, r0, r0
   1188c:	subcs	r3, r3, r1, lsl #29
   11890:	cmp	r3, r1, lsl #28
   11894:	adc	r0, r0, r0
   11898:	subcs	r3, r3, r1, lsl #28
   1189c:	cmp	r3, r1, lsl #27
   118a0:	adc	r0, r0, r0
   118a4:	subcs	r3, r3, r1, lsl #27
   118a8:	cmp	r3, r1, lsl #26
   118ac:	adc	r0, r0, r0
   118b0:	subcs	r3, r3, r1, lsl #26
   118b4:	cmp	r3, r1, lsl #25
   118b8:	adc	r0, r0, r0
   118bc:	subcs	r3, r3, r1, lsl #25
   118c0:	cmp	r3, r1, lsl #24
   118c4:	adc	r0, r0, r0
   118c8:	subcs	r3, r3, r1, lsl #24
   118cc:	cmp	r3, r1, lsl #23
   118d0:	adc	r0, r0, r0
   118d4:	subcs	r3, r3, r1, lsl #23
   118d8:	cmp	r3, r1, lsl #22
   118dc:	adc	r0, r0, r0
   118e0:	subcs	r3, r3, r1, lsl #22
   118e4:	cmp	r3, r1, lsl #21
   118e8:	adc	r0, r0, r0
   118ec:	subcs	r3, r3, r1, lsl #21
   118f0:	cmp	r3, r1, lsl #20
   118f4:	adc	r0, r0, r0
   118f8:	subcs	r3, r3, r1, lsl #20
   118fc:	cmp	r3, r1, lsl #19
   11900:	adc	r0, r0, r0
   11904:	subcs	r3, r3, r1, lsl #19
   11908:	cmp	r3, r1, lsl #18
   1190c:	adc	r0, r0, r0
   11910:	subcs	r3, r3, r1, lsl #18
   11914:	cmp	r3, r1, lsl #17
   11918:	adc	r0, r0, r0
   1191c:	subcs	r3, r3, r1, lsl #17
   11920:	cmp	r3, r1, lsl #16
   11924:	adc	r0, r0, r0
   11928:	subcs	r3, r3, r1, lsl #16
   1192c:	cmp	r3, r1, lsl #15
   11930:	adc	r0, r0, r0
   11934:	subcs	r3, r3, r1, lsl #15
   11938:	cmp	r3, r1, lsl #14
   1193c:	adc	r0, r0, r0
   11940:	subcs	r3, r3, r1, lsl #14
   11944:	cmp	r3, r1, lsl #13
   11948:	adc	r0, r0, r0
   1194c:	subcs	r3, r3, r1, lsl #13
   11950:	cmp	r3, r1, lsl #12
   11954:	adc	r0, r0, r0
   11958:	subcs	r3, r3, r1, lsl #12
   1195c:	cmp	r3, r1, lsl #11
   11960:	adc	r0, r0, r0
   11964:	subcs	r3, r3, r1, lsl #11
   11968:	cmp	r3, r1, lsl #10
   1196c:	adc	r0, r0, r0
   11970:	subcs	r3, r3, r1, lsl #10
   11974:	cmp	r3, r1, lsl #9
   11978:	adc	r0, r0, r0
   1197c:	subcs	r3, r3, r1, lsl #9
   11980:	cmp	r3, r1, lsl #8
   11984:	adc	r0, r0, r0
   11988:	subcs	r3, r3, r1, lsl #8
   1198c:	cmp	r3, r1, lsl #7
   11990:	adc	r0, r0, r0
   11994:	subcs	r3, r3, r1, lsl #7
   11998:	cmp	r3, r1, lsl #6
   1199c:	adc	r0, r0, r0
   119a0:	subcs	r3, r3, r1, lsl #6
   119a4:	cmp	r3, r1, lsl #5
   119a8:	adc	r0, r0, r0
   119ac:	subcs	r3, r3, r1, lsl #5
   119b0:	cmp	r3, r1, lsl #4
   119b4:	adc	r0, r0, r0
   119b8:	subcs	r3, r3, r1, lsl #4
   119bc:	cmp	r3, r1, lsl #3
   119c0:	adc	r0, r0, r0
   119c4:	subcs	r3, r3, r1, lsl #3
   119c8:	cmp	r3, r1, lsl #2
   119cc:	adc	r0, r0, r0
   119d0:	subcs	r3, r3, r1, lsl #2
   119d4:	cmp	r3, r1, lsl #1
   119d8:	adc	r0, r0, r0
   119dc:	subcs	r3, r3, r1, lsl #1
   119e0:	cmp	r3, r1
   119e4:	adc	r0, r0, r0
   119e8:	subcs	r3, r3, r1
   119ec:	cmp	ip, #0
   119f0:	rsbmi	r0, r0, #0
   119f4:	bx	lr
   119f8:	teq	ip, r0
   119fc:	rsbmi	r0, r0, #0
   11a00:	bx	lr
   11a04:	movcc	r0, #0
   11a08:	asreq	r0, ip, #31
   11a0c:	orreq	r0, r0, #1
   11a10:	bx	lr
   11a14:	clz	r2, r1
   11a18:	rsb	r2, r2, #31
   11a1c:	cmp	ip, #0
   11a20:	lsr	r0, r3, r2
   11a24:	rsbmi	r0, r0, #0
   11a28:	bx	lr
   11a2c:	cmp	r0, #0
   11a30:	mvngt	r0, #-2147483648	; 0x80000000
   11a34:	movlt	r0, #-2147483648	; 0x80000000
   11a38:	b	11a5c <vetor_baralha@@Base+0x340>
   11a3c:	cmp	r1, #0
   11a40:	beq	11a2c <vetor_baralha@@Base+0x310>
   11a44:	push	{r0, r1, lr}
   11a48:	bl	11824 <vetor_baralha@@Base+0x108>
   11a4c:	pop	{r1, r2, lr}
   11a50:	mul	r3, r2, r0
   11a54:	sub	r1, r1, r3
   11a58:	bx	lr
   11a5c:	push	{r1, lr}
   11a60:	mov	r0, #8
   11a64:	bl	109e8 <raise@plt>
   11a68:	pop	{r1, pc}

00011a6c <__libc_csu_init@@Base>:
   11a6c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a70:	mov	r7, r0
   11a74:	ldr	r6, [pc, #72]	; 11ac4 <__libc_csu_init@@Base+0x58>
   11a78:	ldr	r5, [pc, #72]	; 11ac8 <__libc_csu_init@@Base+0x5c>
   11a7c:	add	r6, pc, r6
   11a80:	add	r5, pc, r5
   11a84:	sub	r6, r6, r5
   11a88:	mov	r8, r1
   11a8c:	mov	r9, r2
   11a90:	bl	109bc <calloc@plt-0x20>
   11a94:	asrs	r6, r6, #2
   11a98:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a9c:	mov	r4, #0
   11aa0:	add	r4, r4, #1
   11aa4:	ldr	r3, [r5], #4
   11aa8:	mov	r2, r9
   11aac:	mov	r1, r8
   11ab0:	mov	r0, r7
   11ab4:	blx	r3
   11ab8:	cmp	r6, r4
   11abc:	bne	11aa0 <__libc_csu_init@@Base+0x34>
   11ac0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ac4:	andeq	r0, r1, ip, lsl #9
   11ac8:	andeq	r0, r1, r4, lsl #9

00011acc <__libc_csu_fini@@Base>:
   11acc:	bx	lr

Disassembly of section .fini:

00011ad0 <.fini>:
   11ad0:	push	{r3, lr}
   11ad4:	pop	{r3, pc}
