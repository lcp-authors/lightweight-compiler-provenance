
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

0001093c <.init>:
   1093c:	push	{r3, lr}
   10940:	bl	10aac <_start@@Base+0x3c>
   10944:	pop	{r3, pc}

Disassembly of section .plt:

00010948 <raise@plt-0x14>:
   10948:	push	{lr}		; (str lr, [sp, #-4]!)
   1094c:	ldr	lr, [pc, #4]	; 10958 <raise@plt-0x4>
   10950:	add	lr, pc, lr
   10954:	ldr	pc, [lr, #8]!
   10958:	andeq	r1, r1, r8, lsr #13

0001095c <raise@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1704]!	; 0x6a8

00010968 <fopen@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1696]!	; 0x6a0

00010974 <time@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1688]!	; 0x698

00010980 <xcb_connect@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1680]!	; 0x690

0001098c <sleep@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1672]!	; 0x688

00010998 <xcb_flush@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1664]!	; 0x680

000109a4 <rewind@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1656]!	; 0x678

000109b0 <xcb_screen_next@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1648]!	; 0x670

000109bc <fread@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1640]!	; 0x668

000109c8 <xcb_setup_roots_iterator@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1632]!	; 0x660

000109d4 <puts@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1624]!	; 0x658

000109e0 <__libc_start_main@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1616]!	; 0x650

000109ec <localtime@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1608]!	; 0x648

000109f8 <__gmon_start__@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1600]!	; 0x640

00010a04 <exit@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1592]!	; 0x638

00010a10 <snprintf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1584]!	; 0x630

00010a1c <__isoc99_sscanf@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1576]!	; 0x628

00010a28 <fclose@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1568]!	; 0x620

00010a34 <xcb_disconnect@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1560]!	; 0x618

00010a40 <xcb_connection_has_error@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1552]!	; 0x610

00010a4c <xcb_get_setup@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1544]!	; 0x608

00010a58 <xcb_change_property@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1536]!	; 0x600

00010a64 <abort@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1528]!	; 0x5f8

Disassembly of section .text:

00010a70 <_start@@Base>:
   10a70:	mov	fp, #0
   10a74:	mov	lr, #0
   10a78:	pop	{r1}		; (ldr r1, [sp], #4)
   10a7c:	mov	r2, sp
   10a80:	push	{r2}		; (str r2, [sp, #-4]!)
   10a84:	push	{r0}		; (str r0, [sp, #-4]!)
   10a88:	ldr	ip, [pc, #16]	; 10aa0 <_start@@Base+0x30>
   10a8c:	push	{ip}		; (str ip, [sp, #-4]!)
   10a90:	ldr	r0, [pc, #12]	; 10aa4 <_start@@Base+0x34>
   10a94:	ldr	r3, [pc, #12]	; 10aa8 <_start@@Base+0x38>
   10a98:	bl	109e0 <__libc_start_main@plt>
   10a9c:	bl	10a64 <abort@plt>
   10aa0:	andeq	r1, r1, ip, lsl r5
   10aa4:	andeq	r0, r1, r4, lsr #26
   10aa8:			; <UNDEFINED> instruction: 0x000114bc
   10aac:	ldr	r3, [pc, #20]	; 10ac8 <_start@@Base+0x58>
   10ab0:	ldr	r2, [pc, #20]	; 10acc <_start@@Base+0x5c>
   10ab4:	add	r3, pc, r3
   10ab8:	ldr	r2, [r3, r2]
   10abc:	cmp	r2, #0
   10ac0:	bxeq	lr
   10ac4:	b	109f8 <__gmon_start__@plt>
   10ac8:	andeq	r1, r1, r4, asr #10
   10acc:	andeq	r0, r0, r8, rrx
   10ad0:	ldr	r3, [pc, #28]	; 10af4 <_start@@Base+0x84>
   10ad4:	ldr	r0, [pc, #28]	; 10af8 <_start@@Base+0x88>
   10ad8:	sub	r3, r3, r0
   10adc:	cmp	r3, #6
   10ae0:	bxls	lr
   10ae4:	ldr	r3, [pc, #16]	; 10afc <_start@@Base+0x8c>
   10ae8:	cmp	r3, #0
   10aec:	bxeq	lr
   10af0:	bx	r3
   10af4:	andeq	r2, r2, r7, ror r0
   10af8:	andeq	r2, r2, r4, ror r0
   10afc:	andeq	r0, r0, r0
   10b00:	ldr	r1, [pc, #36]	; 10b2c <_start@@Base+0xbc>
   10b04:	ldr	r0, [pc, #36]	; 10b30 <_start@@Base+0xc0>
   10b08:	sub	r1, r1, r0
   10b0c:	asr	r1, r1, #2
   10b10:	add	r1, r1, r1, lsr #31
   10b14:	asrs	r1, r1, #1
   10b18:	bxeq	lr
   10b1c:	ldr	r3, [pc, #16]	; 10b34 <_start@@Base+0xc4>
   10b20:	cmp	r3, #0
   10b24:	bxeq	lr
   10b28:	bx	r3
   10b2c:	andeq	r2, r2, r4, ror r0
   10b30:	andeq	r2, r2, r4, ror r0
   10b34:	andeq	r0, r0, r0
   10b38:	push	{r4, lr}
   10b3c:	ldr	r4, [pc, #24]	; 10b5c <_start@@Base+0xec>
   10b40:	ldrb	r3, [r4]
   10b44:	cmp	r3, #0
   10b48:	popne	{r4, pc}
   10b4c:	bl	10ad0 <_start@@Base+0x60>
   10b50:	mov	r3, #1
   10b54:	strb	r3, [r4]
   10b58:	pop	{r4, pc}
   10b5c:	andeq	r2, r2, r4, ror r0
   10b60:	ldr	r0, [pc, #40]	; 10b90 <_start@@Base+0x120>
   10b64:	ldr	r3, [r0]
   10b68:	cmp	r3, #0
   10b6c:	bne	10b74 <_start@@Base+0x104>
   10b70:	b	10b00 <_start@@Base+0x90>
   10b74:	ldr	r3, [pc, #24]	; 10b94 <_start@@Base+0x124>
   10b78:	cmp	r3, #0
   10b7c:	beq	10b70 <_start@@Base+0x100>
   10b80:	push	{r4, lr}
   10b84:	blx	r3
   10b88:	pop	{r4, lr}
   10b8c:	b	10b00 <_start@@Base+0x90>
   10b90:	andeq	r1, r2, ip, lsl #30
   10b94:	andeq	r0, r0, r0
   10b98:	push	{fp, lr}
   10b9c:	add	fp, sp, #4
   10ba0:	sub	sp, sp, #32
   10ba4:	str	r0, [fp, #-32]	; 0xffffffe0
   10ba8:	sub	r3, fp, #12
   10bac:	mov	r1, r3
   10bb0:	mov	r0, #0
   10bb4:	bl	10980 <xcb_connect@plt>
   10bb8:	mov	r2, r0
   10bbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10bc0:	str	r2, [r3]
   10bc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10bc8:	ldr	r3, [r3]
   10bcc:	mov	r0, r3
   10bd0:	bl	10a40 <xcb_connection_has_error@plt>
   10bd4:	mov	r3, r0
   10bd8:	cmp	r3, #0
   10bdc:	beq	10c08 <_start@@Base+0x198>
   10be0:	ldr	r3, [pc, #140]	; 10c74 <_start@@Base+0x204>
   10be4:	add	r3, pc, r3
   10be8:	mov	r0, r3
   10bec:	bl	109d4 <puts@plt>
   10bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10bf4:	ldr	r3, [r3]
   10bf8:	mov	r0, r3
   10bfc:	bl	10a34 <xcb_disconnect@plt>
   10c00:	mov	r0, #1
   10c04:	bl	10a04 <exit@plt>
   10c08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c0c:	ldr	r3, [r3]
   10c10:	mov	r0, r3
   10c14:	bl	10a4c <xcb_get_setup@plt>
   10c18:	mov	r2, r0
   10c1c:	sub	r3, fp, #24
   10c20:	mov	r1, r2
   10c24:	mov	r0, r3
   10c28:	bl	109c8 <xcb_setup_roots_iterator@plt>
   10c2c:	b	10c3c <_start@@Base+0x1cc>
   10c30:	sub	r3, fp, #24
   10c34:	mov	r0, r3
   10c38:	bl	109b0 <xcb_screen_next@plt>
   10c3c:	ldr	r3, [fp, #-12]
   10c40:	sub	r2, r3, #1
   10c44:	str	r2, [fp, #-12]
   10c48:	cmp	r3, #0
   10c4c:	bne	10c30 <_start@@Base+0x1c0>
   10c50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10c54:	str	r3, [fp, #-8]
   10c58:	ldr	r3, [fp, #-8]
   10c5c:	ldr	r2, [r3]
   10c60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c64:	str	r2, [r3, #4]
   10c68:	nop			; (mov r0, r0)
   10c6c:	sub	sp, fp, #4
   10c70:	pop	{fp, pc}
   10c74:	andeq	r0, r0, r0, asr #18
   10c78:	push	{fp, lr}
   10c7c:	add	fp, sp, #4
   10c80:	sub	sp, sp, #72	; 0x48
   10c84:	str	r0, [fp, #-56]	; 0xffffffc8
   10c88:	str	r1, [fp, #-60]	; 0xffffffc4
   10c8c:	mov	r0, #0
   10c90:	bl	10974 <time@plt>
   10c94:	mov	r3, r0
   10c98:	str	r3, [fp, #-8]
   10c9c:	sub	r3, fp, #8
   10ca0:	mov	r0, r3
   10ca4:	bl	109ec <localtime@plt>
   10ca8:	mov	r3, r0
   10cac:	sub	ip, fp, #52	; 0x34
   10cb0:	mov	lr, r3
   10cb4:	ldm	lr!, {r0, r1, r2, r3}
   10cb8:	stmia	ip!, {r0, r1, r2, r3}
   10cbc:	ldm	lr!, {r0, r1, r2, r3}
   10cc0:	stmia	ip!, {r0, r1, r2, r3}
   10cc4:	ldm	lr, {r0, r1, r2}
   10cc8:	stm	ip, {r0, r1, r2}
   10ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10cd0:	add	r3, r3, #1888	; 0x760
   10cd4:	add	r3, r3, #12
   10cd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10cdc:	add	r2, r2, #1
   10ce0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10ce4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10ce8:	ldr	ip, [fp, #-48]	; 0xffffffd0
   10cec:	str	ip, [sp, #12]
   10cf0:	str	r0, [sp, #8]
   10cf4:	str	r1, [sp, #4]
   10cf8:	str	r2, [sp]
   10cfc:	ldr	r2, [pc, #28]	; 10d20 <_start@@Base+0x2b0>
   10d00:	add	r2, pc, r2
   10d04:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10d08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10d0c:	bl	10a10 <snprintf@plt>
   10d10:	mov	r3, r0
   10d14:	mov	r0, r3
   10d18:	sub	sp, fp, #4
   10d1c:	pop	{fp, pc}
   10d20:	andeq	r0, r0, ip, lsr r8

00010d24 <main@@Base>:
   10d24:	push	{fp, lr}
   10d28:	add	fp, sp, #4
   10d2c:	sub	sp, sp, #144	; 0x90
   10d30:	sub	r3, fp, #100	; 0x64
   10d34:	mov	r0, r3
   10d38:	bl	10b98 <_start@@Base+0x128>
   10d3c:	sub	r3, fp, #132	; 0x84
   10d40:	mov	r0, r3
   10d44:	bl	10f10 <init_bat@@Base>
   10d48:	mov	r3, #0
   10d4c:	strb	r3, [fp, #-12]
   10d50:	mov	r3, #0
   10d54:	str	r3, [fp, #-8]
   10d58:	ldrb	r3, [fp, #-108]	; 0xffffff94
   10d5c:	cmp	r3, #0
   10d60:	beq	10d94 <main@@Base+0x70>
   10d64:	sub	r2, fp, #92	; 0x5c
   10d68:	ldr	r3, [fp, #-8]
   10d6c:	add	r1, r2, r3
   10d70:	ldr	r3, [fp, #-8]
   10d74:	rsb	r2, r3, #80	; 0x50
   10d78:	sub	r3, fp, #132	; 0x84
   10d7c:	mov	r0, r3
   10d80:	bl	1117c <bat@@Base>
   10d84:	mov	r2, r0
   10d88:	ldr	r3, [fp, #-8]
   10d8c:	add	r3, r3, r2
   10d90:	str	r3, [fp, #-8]
   10d94:	sub	r2, fp, #92	; 0x5c
   10d98:	ldr	r3, [fp, #-8]
   10d9c:	add	r2, r2, r3
   10da0:	ldr	r3, [fp, #-8]
   10da4:	rsb	r3, r3, #80	; 0x50
   10da8:	mov	r1, r3
   10dac:	mov	r0, r2
   10db0:	bl	10c78 <_start@@Base+0x208>
   10db4:	mov	r2, r0
   10db8:	ldr	r3, [fp, #-8]
   10dbc:	add	r3, r3, r2
   10dc0:	str	r3, [fp, #-8]
   10dc4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   10dc8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   10dcc:	sub	r3, fp, #92	; 0x5c
   10dd0:	str	r3, [sp, #12]
   10dd4:	ldr	r3, [fp, #-8]
   10dd8:	str	r3, [sp, #8]
   10ddc:	mov	r3, #8
   10de0:	str	r3, [sp, #4]
   10de4:	mov	r3, #31
   10de8:	str	r3, [sp]
   10dec:	mov	r3, #39	; 0x27
   10df0:	mov	r1, #0
   10df4:	bl	10a58 <xcb_change_property@plt>
   10df8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   10dfc:	mov	r0, r3
   10e00:	bl	10998 <xcb_flush@plt>
   10e04:	mov	r3, r0
   10e08:	cmp	r3, #0
   10e0c:	bgt	10e40 <main@@Base+0x11c>
   10e10:	ldr	r3, [pc, #104]	; 10e80 <main@@Base+0x15c>
   10e14:	add	r3, pc, r3
   10e18:	mov	r0, r3
   10e1c:	bl	109d4 <puts@plt>
   10e20:	nop			; (mov r0, r0)
   10e24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   10e28:	mov	r0, r3
   10e2c:	bl	10a34 <xcb_disconnect@plt>
   10e30:	ldrb	r3, [fp, #-108]	; 0xffffff94
   10e34:	cmp	r3, #0
   10e38:	beq	10e70 <main@@Base+0x14c>
   10e3c:	b	10e4c <main@@Base+0x128>
   10e40:	mov	r0, #60	; 0x3c
   10e44:	bl	1098c <sleep@plt>
   10e48:	b	10d48 <main@@Base+0x24>
   10e4c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   10e50:	mov	r0, r3
   10e54:	bl	10a28 <fclose@plt>
   10e58:	ldr	r3, [fp, #-124]	; 0xffffff84
   10e5c:	mov	r0, r3
   10e60:	bl	10a28 <fclose@plt>
   10e64:	ldr	r3, [fp, #-128]	; 0xffffff80
   10e68:	mov	r0, r3
   10e6c:	bl	10a28 <fclose@plt>
   10e70:	mov	r3, #2
   10e74:	mov	r0, r3
   10e78:	sub	sp, fp, #4
   10e7c:	pop	{fp, pc}
   10e80:	andeq	r0, r0, r4, asr #14

00010e84 <read_int@@Base>:
   10e84:	push	{fp, lr}
   10e88:	add	fp, sp, #4
   10e8c:	sub	sp, sp, #64	; 0x40
   10e90:	str	r0, [fp, #-64]	; 0xffffffc0
   10e94:	ldr	r0, [fp, #-64]	; 0xffffffc0
   10e98:	bl	109a4 <rewind@plt>
   10e9c:	sub	r0, fp, #60	; 0x3c
   10ea0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10ea4:	mov	r2, #40	; 0x28
   10ea8:	mov	r1, #1
   10eac:	bl	109bc <fread@plt>
   10eb0:	str	r0, [fp, #-8]
   10eb4:	sub	r2, fp, #60	; 0x3c
   10eb8:	ldr	r3, [fp, #-8]
   10ebc:	add	r3, r2, r3
   10ec0:	mov	r2, #0
   10ec4:	strb	r2, [r3]
   10ec8:	sub	r2, fp, #20
   10ecc:	sub	r3, fp, #60	; 0x3c
   10ed0:	ldr	r1, [pc, #52]	; 10f0c <read_int@@Base+0x88>
   10ed4:	add	r1, pc, r1
   10ed8:	mov	r0, r3
   10edc:	bl	10a1c <__isoc99_sscanf@plt>
   10ee0:	mov	r3, r0
   10ee4:	cmp	r3, #1
   10ee8:	bne	10ef4 <read_int@@Base+0x70>
   10eec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10ef0:	b	10efc <read_int@@Base+0x78>
   10ef4:	mvn	r2, #0
   10ef8:	mov	r3, #0
   10efc:	mov	r0, r2
   10f00:	mov	r1, r3
   10f04:	sub	sp, fp, #4
   10f08:	pop	{fp, pc}
   10f0c:	andeq	r0, r0, r4, lsr #13

00010f10 <init_bat@@Base>:
   10f10:	push	{fp, lr}
   10f14:	add	fp, sp, #4
   10f18:	sub	sp, sp, #16
   10f1c:	str	r0, [fp, #-16]
   10f20:	ldr	r3, [pc, #416]	; 110c8 <init_bat@@Base+0x1b8>
   10f24:	add	r3, pc, r3
   10f28:	mov	r1, r3
   10f2c:	ldr	r3, [pc, #408]	; 110cc <init_bat@@Base+0x1bc>
   10f30:	add	r3, pc, r3
   10f34:	mov	r0, r3
   10f38:	bl	10968 <fopen@plt>
   10f3c:	str	r0, [fp, #-8]
   10f40:	ldr	r3, [fp, #-8]
   10f44:	cmp	r3, #0
   10f48:	bne	10f6c <init_bat@@Base+0x5c>
   10f4c:	ldr	r3, [pc, #380]	; 110d0 <init_bat@@Base+0x1c0>
   10f50:	add	r3, pc, r3
   10f54:	mov	r1, r3
   10f58:	ldr	r3, [pc, #372]	; 110d4 <init_bat@@Base+0x1c4>
   10f5c:	add	r3, pc, r3
   10f60:	mov	r0, r3
   10f64:	bl	10968 <fopen@plt>
   10f68:	str	r0, [fp, #-8]
   10f6c:	ldr	r3, [fp, #-8]
   10f70:	cmp	r3, #0
   10f74:	bne	10fac <init_bat@@Base+0x9c>
   10f78:	ldr	r3, [fp, #-16]
   10f7c:	mov	r2, #0
   10f80:	strb	r2, [r3, #24]
   10f84:	ldr	r3, [fp, #-16]
   10f88:	mov	r2, #0
   10f8c:	str	r2, [r3]
   10f90:	ldr	r3, [fp, #-16]
   10f94:	mov	r2, #0
   10f98:	str	r2, [r3, #4]
   10f9c:	ldr	r3, [fp, #-16]
   10fa0:	mov	r2, #0
   10fa4:	str	r2, [r3, #8]
   10fa8:	b	110c0 <init_bat@@Base+0x1b0>
   10fac:	ldr	r3, [fp, #-16]
   10fb0:	mov	r2, #1
   10fb4:	strb	r2, [r3, #24]
   10fb8:	ldr	r0, [fp, #-8]
   10fbc:	bl	10e84 <read_int@@Base>
   10fc0:	mov	r2, r0
   10fc4:	mov	r3, r1
   10fc8:	ldr	r1, [fp, #-16]
   10fcc:	strd	r2, [r1, #16]
   10fd0:	ldr	r3, [pc, #256]	; 110d8 <init_bat@@Base+0x1c8>
   10fd4:	add	r3, pc, r3
   10fd8:	mov	r1, r3
   10fdc:	ldr	r3, [pc, #248]	; 110dc <init_bat@@Base+0x1cc>
   10fe0:	add	r3, pc, r3
   10fe4:	mov	r0, r3
   10fe8:	bl	10968 <fopen@plt>
   10fec:	mov	r2, r0
   10ff0:	ldr	r3, [fp, #-16]
   10ff4:	str	r2, [r3]
   10ff8:	ldr	r3, [pc, #224]	; 110e0 <init_bat@@Base+0x1d0>
   10ffc:	add	r3, pc, r3
   11000:	mov	r1, r3
   11004:	ldr	r3, [pc, #216]	; 110e4 <init_bat@@Base+0x1d4>
   11008:	add	r3, pc, r3
   1100c:	mov	r0, r3
   11010:	bl	10968 <fopen@plt>
   11014:	mov	r2, r0
   11018:	ldr	r3, [fp, #-16]
   1101c:	str	r2, [r3, #4]
   11020:	ldr	r3, [fp, #-16]
   11024:	ldr	r3, [r3, #4]
   11028:	cmp	r3, #0
   1102c:	bne	11058 <init_bat@@Base+0x148>
   11030:	ldr	r3, [pc, #176]	; 110e8 <init_bat@@Base+0x1d8>
   11034:	add	r3, pc, r3
   11038:	mov	r1, r3
   1103c:	ldr	r3, [pc, #168]	; 110ec <init_bat@@Base+0x1dc>
   11040:	add	r3, pc, r3
   11044:	mov	r0, r3
   11048:	bl	10968 <fopen@plt>
   1104c:	mov	r2, r0
   11050:	ldr	r3, [fp, #-16]
   11054:	str	r2, [r3, #4]
   11058:	ldr	r3, [pc, #144]	; 110f0 <init_bat@@Base+0x1e0>
   1105c:	add	r3, pc, r3
   11060:	mov	r1, r3
   11064:	ldr	r3, [pc, #136]	; 110f4 <init_bat@@Base+0x1e4>
   11068:	add	r3, pc, r3
   1106c:	mov	r0, r3
   11070:	bl	10968 <fopen@plt>
   11074:	mov	r2, r0
   11078:	ldr	r3, [fp, #-16]
   1107c:	str	r2, [r3, #8]
   11080:	ldr	r3, [fp, #-16]
   11084:	ldr	r3, [r3, #8]
   11088:	cmp	r3, #0
   1108c:	bne	110b8 <init_bat@@Base+0x1a8>
   11090:	ldr	r3, [pc, #96]	; 110f8 <init_bat@@Base+0x1e8>
   11094:	add	r3, pc, r3
   11098:	mov	r1, r3
   1109c:	ldr	r3, [pc, #88]	; 110fc <init_bat@@Base+0x1ec>
   110a0:	add	r3, pc, r3
   110a4:	mov	r0, r3
   110a8:	bl	10968 <fopen@plt>
   110ac:	mov	r2, r0
   110b0:	ldr	r3, [fp, #-16]
   110b4:	str	r2, [r3, #8]
   110b8:	ldr	r0, [fp, #-8]
   110bc:	bl	10a28 <fclose@plt>
   110c0:	sub	sp, fp, #4
   110c4:	pop	{fp, pc}
   110c8:	andeq	r0, r0, ip, asr r6
   110cc:	andeq	r0, r0, r4, asr r6
   110d0:	andeq	r0, r0, r0, lsr r6
   110d4:	andeq	r0, r0, r4, asr r6
   110d8:	andeq	r0, r0, ip, lsr #11
   110dc:	strdeq	r0, [r0], -ip
   110e0:	andeq	r0, r0, r4, lsl #11
   110e4:	strdeq	r0, [r0], -r8
   110e8:	andeq	r0, r0, ip, asr #10
   110ec:	andeq	r0, r0, r8, ror #11
   110f0:	andeq	r0, r0, r4, lsr #10
   110f4:	andeq	r0, r0, r8, ror #11
   110f8:	andeq	r0, r0, ip, ror #9
   110fc:	ldrdeq	r0, [r0], -r8

00011100 <close_bat@@Base>:
   11100:	push	{fp, lr}
   11104:	add	fp, sp, #4
   11108:	sub	sp, sp, #8
   1110c:	str	r0, [fp, #-8]
   11110:	ldr	r3, [fp, #-8]
   11114:	ldr	r3, [r3]
   11118:	cmp	r3, #0
   1111c:	beq	11130 <close_bat@@Base+0x30>
   11120:	ldr	r3, [fp, #-8]
   11124:	ldr	r3, [r3]
   11128:	mov	r0, r3
   1112c:	bl	10a28 <fclose@plt>
   11130:	ldr	r3, [fp, #-8]
   11134:	ldr	r3, [r3, #4]
   11138:	cmp	r3, #0
   1113c:	beq	11150 <close_bat@@Base+0x50>
   11140:	ldr	r3, [fp, #-8]
   11144:	ldr	r3, [r3, #4]
   11148:	mov	r0, r3
   1114c:	bl	10a28 <fclose@plt>
   11150:	ldr	r3, [fp, #-8]
   11154:	ldr	r3, [r3, #8]
   11158:	cmp	r3, #0
   1115c:	beq	11170 <close_bat@@Base+0x70>
   11160:	ldr	r3, [fp, #-8]
   11164:	ldr	r3, [r3, #8]
   11168:	mov	r0, r3
   1116c:	bl	10a28 <fclose@plt>
   11170:	nop			; (mov r0, r0)
   11174:	sub	sp, fp, #4
   11178:	pop	{fp, pc}

0001117c <bat@@Base>:
   1117c:	push	{fp, lr}
   11180:	add	fp, sp, #4
   11184:	sub	sp, sp, #64	; 0x40
   11188:	str	r0, [fp, #-48]	; 0xffffffd0
   1118c:	str	r1, [fp, #-52]	; 0xffffffcc
   11190:	str	r2, [fp, #-56]	; 0xffffffc8
   11194:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11198:	ldr	r3, [r3]
   1119c:	mov	r0, r3
   111a0:	bl	10e84 <read_int@@Base>
   111a4:	mov	r2, r0
   111a8:	mov	r3, r1
   111ac:	orr	r3, r2, r3
   111b0:	cmp	r3, #0
   111b4:	movne	r3, #1
   111b8:	moveq	r3, #0
   111bc:	strb	r3, [fp, #-5]
   111c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   111c4:	ldr	r3, [r3, #4]
   111c8:	mov	r0, r3
   111cc:	bl	10e84 <read_int@@Base>
   111d0:	strd	r0, [fp, #-20]	; 0xffffffec
   111d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   111d8:	ldr	r3, [r3, #8]
   111dc:	mov	r0, r3
   111e0:	bl	10e84 <read_int@@Base>
   111e4:	strd	r0, [fp, #-28]	; 0xffffffe4
   111e8:	ldr	r3, [fp, #-16]
   111ec:	mov	r2, #100	; 0x64
   111f0:	mul	r2, r2, r3
   111f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   111f8:	mov	r1, #0
   111fc:	mul	r3, r1, r3
   11200:	add	r3, r2, r3
   11204:	ldr	r2, [fp, #-20]	; 0xffffffec
   11208:	mov	r1, #100	; 0x64
   1120c:	umull	r0, r1, r2, r1
   11210:	add	r3, r3, r1
   11214:	mov	r1, r3
   11218:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1121c:	ldrd	r2, [r3, #16]
   11220:	bl	11348 <bat@@Base+0x1cc>
   11224:	mov	r2, r0
   11228:	mov	r3, r1
   1122c:	mov	r3, r2
   11230:	str	r3, [fp, #-32]	; 0xffffffe0
   11234:	ldrb	r3, [fp, #-5]
   11238:	cmp	r3, #0
   1123c:	beq	11260 <bat@@Base+0xe4>
   11240:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11244:	ldr	r2, [pc, #240]	; 1133c <bat@@Base+0x1c0>
   11248:	add	r2, pc, r2
   1124c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11250:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11254:	bl	10a10 <snprintf@plt>
   11258:	mov	r3, r0
   1125c:	b	11330 <bat@@Base+0x1b4>
   11260:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11264:	orrs	r3, r2, r3
   11268:	beq	11314 <bat@@Base+0x198>
   1126c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   11270:	ldrd	r0, [fp, #-20]	; 0xffffffec
   11274:	bl	11348 <bat@@Base+0x1cc>
   11278:	mov	r2, r0
   1127c:	mov	r3, r1
   11280:	mov	r3, r2
   11284:	str	r3, [fp, #-36]	; 0xffffffdc
   11288:	ldr	r3, [fp, #-16]
   1128c:	mov	r2, #60	; 0x3c
   11290:	mul	r2, r2, r3
   11294:	ldr	r3, [fp, #-20]	; 0xffffffec
   11298:	mov	r1, #0
   1129c:	mul	r3, r1, r3
   112a0:	add	r3, r2, r3
   112a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   112a8:	mov	r1, #60	; 0x3c
   112ac:	umull	r0, r1, r2, r1
   112b0:	add	r3, r3, r1
   112b4:	mov	r1, r3
   112b8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   112bc:	bl	11348 <bat@@Base+0x1cc>
   112c0:	mov	r2, r0
   112c4:	mov	r3, r1
   112c8:	mov	r0, r2
   112cc:	mov	r1, r3
   112d0:	mov	r2, #60	; 0x3c
   112d4:	mov	r3, #0
   112d8:	bl	11348 <bat@@Base+0x1cc>
   112dc:	mov	r3, r2
   112e0:	str	r3, [fp, #-40]	; 0xffffffd8
   112e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   112e8:	str	r3, [sp, #4]
   112ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   112f0:	str	r3, [sp]
   112f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   112f8:	ldr	r2, [pc, #64]	; 11340 <bat@@Base+0x1c4>
   112fc:	add	r2, pc, r2
   11300:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11304:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11308:	bl	10a10 <snprintf@plt>
   1130c:	mov	r3, r0
   11310:	b	11330 <bat@@Base+0x1b4>
   11314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11318:	ldr	r2, [pc, #36]	; 11344 <bat@@Base+0x1c8>
   1131c:	add	r2, pc, r2
   11320:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11324:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11328:	bl	10a10 <snprintf@plt>
   1132c:	mov	r3, r0
   11330:	mov	r0, r3
   11334:	sub	sp, fp, #4
   11338:	pop	{fp, pc}
   1133c:	andeq	r0, r0, ip, asr r4
   11340:			; <UNDEFINED> instruction: 0x000003b4
   11344:	andeq	r0, r0, r8, lsr #7
   11348:	cmp	r3, #0
   1134c:	cmpeq	r2, #0
   11350:	bne	11368 <bat@@Base+0x1ec>
   11354:	cmp	r1, #0
   11358:	cmpeq	r0, #0
   1135c:	mvnne	r1, #0
   11360:	mvnne	r0, #0
   11364:	b	11384 <bat@@Base+0x208>
   11368:	sub	sp, sp, #8
   1136c:	push	{sp, lr}
   11370:	bl	11394 <bat@@Base+0x218>
   11374:	ldr	lr, [sp, #4]
   11378:	add	sp, sp, #8
   1137c:	pop	{r2, r3}
   11380:	bx	lr
   11384:	push	{r1, lr}
   11388:	mov	r0, #8
   1138c:	bl	1095c <raise@plt>
   11390:	pop	{r1, pc}
   11394:	cmp	r1, r3
   11398:	push	{r4, r5, r6, r7, r8, r9, lr}
   1139c:	cmpeq	r0, r2
   113a0:	mov	r4, r0
   113a4:	mov	r5, r1
   113a8:	ldr	r9, [sp, #28]
   113ac:	movcc	r0, #0
   113b0:	movcc	r1, #0
   113b4:	bcc	114ac <bat@@Base+0x330>
   113b8:	cmp	r3, #0
   113bc:	clzeq	ip, r2
   113c0:	clzne	ip, r3
   113c4:	addeq	ip, ip, #32
   113c8:	cmp	r5, #0
   113cc:	clzeq	r1, r4
   113d0:	addeq	r1, r1, #32
   113d4:	clzne	r1, r5
   113d8:	sub	ip, ip, r1
   113dc:	sub	lr, ip, #32
   113e0:	lsl	r7, r3, ip
   113e4:	rsb	r8, ip, #32
   113e8:	orr	r7, r7, r2, lsl lr
   113ec:	orr	r7, r7, r2, lsr r8
   113f0:	lsl	r6, r2, ip
   113f4:	cmp	r5, r7
   113f8:	cmpeq	r4, r6
   113fc:	movcc	r0, #0
   11400:	movcc	r1, #0
   11404:	bcc	11420 <bat@@Base+0x2a4>
   11408:	mov	r3, #1
   1140c:	subs	r4, r4, r6
   11410:	lsl	r1, r3, lr
   11414:	lsl	r0, r3, ip
   11418:	orr	r1, r1, r3, lsr r8
   1141c:	sbc	r5, r5, r7
   11420:	cmp	ip, #0
   11424:	beq	114ac <bat@@Base+0x330>
   11428:	lsrs	r3, r7, #1
   1142c:	rrx	r2, r6
   11430:	mov	r6, ip
   11434:	b	11458 <bat@@Base+0x2dc>
   11438:	subs	r4, r4, r2
   1143c:	sbc	r5, r5, r3
   11440:	adds	r4, r4, r4
   11444:	adc	r5, r5, r5
   11448:	adds	r4, r4, #1
   1144c:	adc	r5, r5, #0
   11450:	subs	r6, r6, #1
   11454:	beq	11474 <bat@@Base+0x2f8>
   11458:	cmp	r5, r3
   1145c:	cmpeq	r4, r2
   11460:	bcs	11438 <bat@@Base+0x2bc>
   11464:	adds	r4, r4, r4
   11468:	adc	r5, r5, r5
   1146c:	subs	r6, r6, #1
   11470:	bne	11458 <bat@@Base+0x2dc>
   11474:	lsr	r6, r4, ip
   11478:	lsr	r7, r5, ip
   1147c:	orr	r6, r6, r5, lsl r8
   11480:	adds	r2, r0, r4
   11484:	orr	r6, r6, r5, lsr lr
   11488:	adc	r3, r1, r5
   1148c:	lsl	r1, r7, ip
   11490:	orr	r1, r1, r6, lsl lr
   11494:	lsl	r0, r6, ip
   11498:	orr	r1, r1, r6, lsr r8
   1149c:	subs	r0, r2, r0
   114a0:	mov	r4, r6
   114a4:	mov	r5, r7
   114a8:	sbc	r1, r3, r1
   114ac:	cmp	r9, #0
   114b0:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   114b4:	strd	r4, [r9]
   114b8:	pop	{r4, r5, r6, r7, r8, r9, pc}

000114bc <__libc_csu_init@@Base>:
   114bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114c0:	mov	r7, r0
   114c4:	ldr	r6, [pc, #72]	; 11514 <__libc_csu_init@@Base+0x58>
   114c8:	ldr	r5, [pc, #72]	; 11518 <__libc_csu_init@@Base+0x5c>
   114cc:	add	r6, pc, r6
   114d0:	add	r5, pc, r5
   114d4:	sub	r6, r6, r5
   114d8:	mov	r8, r1
   114dc:	mov	r9, r2
   114e0:	bl	1093c <raise@plt-0x20>
   114e4:	asrs	r6, r6, #2
   114e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   114ec:	mov	r4, #0
   114f0:	add	r4, r4, #1
   114f4:	ldr	r3, [r5], #4
   114f8:	mov	r2, r9
   114fc:	mov	r1, r8
   11500:	mov	r0, r7
   11504:	blx	r3
   11508:	cmp	r6, r4
   1150c:	bne	114f0 <__libc_csu_init@@Base+0x34>
   11510:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11514:	andeq	r0, r1, r4, lsr sl
   11518:	andeq	r0, r1, ip, lsr #20

0001151c <__libc_csu_fini@@Base>:
   1151c:	bx	lr

Disassembly of section .fini:

00011520 <.fini>:
   11520:	push	{r3, lr}
   11524:	pop	{r3, pc}
