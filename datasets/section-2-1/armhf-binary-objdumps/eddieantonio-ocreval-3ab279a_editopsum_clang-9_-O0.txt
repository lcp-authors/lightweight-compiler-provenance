
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

00010724 <.init>:
   10724:	push	{r3, lr}
   10728:	bl	10858 <abort@plt+0x48>
   1072c:	pop	{r3, pc}

Disassembly of section .plt:

00010730 <calloc@plt-0x14>:
   10730:	push	{lr}		; (str lr, [sp, #-4]!)
   10734:	ldr	lr, [pc, #4]	; 10740 <calloc@plt-0x4>
   10738:	add	lr, pc, lr
   1073c:	ldr	pc, [lr, #8]!
   10740:	andeq	r1, r1, r0, asr #17

00010744 <calloc@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010750 <strcmp@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2232]!	; 0x8b8

0001075c <fopen@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2224]!	; 0x8b0

00010768 <free@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2216]!	; 0x8a8

00010774 <fgets@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2208]!	; 0x8a0

00010780 <strdup@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2200]!	; 0x898

0001078c <__xstat@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2192]!	; 0x890

00010798 <__libc_start_main@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2184]!	; 0x888

000107a4 <__sysv_signal@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2176]!	; 0x880

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2168]!	; 0x878

000107bc <exit@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2160]!	; 0x870

000107c8 <strlen@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2152]!	; 0x868

000107d4 <fprintf@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2144]!	; 0x860

000107e0 <__isoc99_sscanf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2136]!	; 0x858

000107ec <fclose@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2128]!	; 0x850

000107f8 <sprintf@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2120]!	; 0x848

00010804 <strncmp@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2112]!	; 0x840

00010810 <abort@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2104]!	; 0x838

Disassembly of section .text:

0001081c <error@@Base-0xe70>:
   1081c:	mov	fp, #0
   10820:	mov	lr, #0
   10824:	pop	{r1}		; (ldr r1, [sp], #4)
   10828:	mov	r2, sp
   1082c:	push	{r2}		; (str r2, [sp, #-4]!)
   10830:	push	{r0}		; (str r0, [sp, #-4]!)
   10834:	ldr	ip, [pc, #16]	; 1084c <abort@plt+0x3c>
   10838:	push	{ip}		; (str ip, [sp, #-4]!)
   1083c:	ldr	r0, [pc, #12]	; 10850 <abort@plt+0x40>
   10840:	ldr	r3, [pc, #12]	; 10854 <abort@plt+0x44>
   10844:	bl	10798 <__libc_start_main@plt>
   10848:	bl	10810 <abort@plt>
   1084c:	andeq	r1, r1, r8, lsr ip
   10850:	andeq	r0, r1, ip, lsl #18
   10854:	ldrdeq	r1, [r1], -r8
   10858:	ldr	r3, [pc, #20]	; 10874 <abort@plt+0x64>
   1085c:	ldr	r2, [pc, #20]	; 10878 <abort@plt+0x68>
   10860:	add	r3, pc, r3
   10864:	ldr	r2, [r3, r2]
   10868:	cmp	r2, #0
   1086c:	bxeq	lr
   10870:	b	107b0 <__gmon_start__@plt>
   10874:	muleq	r1, r8, r7
   10878:	andeq	r0, r0, ip, ror r0
   1087c:	ldr	r0, [pc, #24]	; 1089c <abort@plt+0x8c>
   10880:	ldr	r3, [pc, #24]	; 108a0 <abort@plt+0x90>
   10884:	cmp	r3, r0
   10888:	bxeq	lr
   1088c:	ldr	r3, [pc, #16]	; 108a4 <abort@plt+0x94>
   10890:	cmp	r3, #0
   10894:	bxeq	lr
   10898:	bx	r3
   1089c:	strheq	r2, [r2], -r4
   108a0:	strheq	r2, [r2], -r4
   108a4:	andeq	r0, r0, r0
   108a8:	ldr	r0, [pc, #36]	; 108d4 <abort@plt+0xc4>
   108ac:	ldr	r1, [pc, #36]	; 108d8 <abort@plt+0xc8>
   108b0:	sub	r1, r1, r0
   108b4:	asr	r1, r1, #2
   108b8:	add	r1, r1, r1, lsr #31
   108bc:	asrs	r1, r1, #1
   108c0:	bxeq	lr
   108c4:	ldr	r3, [pc, #16]	; 108dc <abort@plt+0xcc>
   108c8:	cmp	r3, #0
   108cc:	bxeq	lr
   108d0:	bx	r3
   108d4:	strheq	r2, [r2], -r4
   108d8:	strheq	r2, [r2], -r4
   108dc:	andeq	r0, r0, r0
   108e0:	push	{r4, lr}
   108e4:	ldr	r4, [pc, #24]	; 10904 <abort@plt+0xf4>
   108e8:	ldrb	r3, [r4]
   108ec:	cmp	r3, #0
   108f0:	popne	{r4, pc}
   108f4:	bl	1087c <abort@plt+0x6c>
   108f8:	mov	r3, #1
   108fc:	strb	r3, [r4]
   10900:	pop	{r4, pc}
   10904:	strheq	r2, [r2], -r4
   10908:	b	108a8 <abort@plt+0x98>
   1090c:	push	{fp, lr}
   10910:	mov	fp, sp
   10914:	sub	sp, sp, #32
   10918:	ldr	r2, [pc, #216]	; 109f8 <abort@plt+0x1e8>
   1091c:	add	r2, pc, r2
   10920:	ldr	r3, [pc, #212]	; 109fc <abort@plt+0x1ec>
   10924:	ldr	r3, [pc, r3]
   10928:	movw	ip, #0
   1092c:	str	ip, [fp, #-4]
   10930:	str	r0, [fp, #-8]
   10934:	str	r1, [fp, #-12]
   10938:	ldr	r1, [fp, #-12]
   1093c:	sub	r0, fp, #8
   10940:	str	r3, [sp, #12]
   10944:	mov	r3, ip
   10948:	ldr	ip, [sp, #12]
   1094c:	blx	ip
   10950:	ldr	r0, [fp, #-8]
   10954:	cmp	r0, #2
   10958:	bge	10970 <abort@plt+0x160>
   1095c:	ldr	r0, [pc, #176]	; 10a14 <abort@plt+0x204>
   10960:	add	r0, pc, r0
   10964:	ldr	r1, [pc, #172]	; 10a18 <abort@plt+0x208>
   10968:	ldr	r1, [pc, r1]
   1096c:	blx	r1
   10970:	movw	r0, #0
   10974:	str	r0, [sp, #16]
   10978:	ldr	r0, [sp, #16]
   1097c:	ldr	r1, [fp, #-8]
   10980:	cmp	r0, r1
   10984:	bge	109c8 <abort@plt+0x1b8>
   10988:	ldr	r0, [pc, #124]	; 10a0c <abort@plt+0x1fc>
   1098c:	ldr	r0, [pc, r0]
   10990:	ldr	r1, [pc, #120]	; 10a10 <abort@plt+0x200>
   10994:	ldr	r1, [pc, r1]
   10998:	ldr	r2, [fp, #-12]
   1099c:	ldr	r3, [sp, #16]
   109a0:	add	r2, r2, r3, lsl #2
   109a4:	ldr	r2, [r2]
   109a8:	str	r1, [sp, #8]
   109ac:	mov	r1, r2
   109b0:	ldr	r2, [sp, #8]
   109b4:	blx	r2
   109b8:	ldr	r0, [sp, #16]
   109bc:	add	r0, r0, #1
   109c0:	str	r0, [sp, #16]
   109c4:	b	10978 <abort@plt+0x168>
   109c8:	ldr	r0, [pc, #52]	; 10a04 <abort@plt+0x1f4>
   109cc:	ldr	r0, [pc, r0]
   109d0:	ldr	r1, [pc, #48]	; 10a08 <abort@plt+0x1f8>
   109d4:	ldr	r1, [pc, r1]
   109d8:	movw	r2, #0
   109dc:	str	r1, [sp, #4]
   109e0:	mov	r1, r2
   109e4:	ldr	r2, [sp, #4]
   109e8:	blx	r2
   109ec:	ldr	r0, [pc, #12]	; 10a00 <abort@plt+0x1f0>
   109f0:	ldr	r0, [pc, r0]
   109f4:	blx	r0
   109f8:	andeq	r1, r0, r4, lsr r3
   109fc:	andeq	r1, r1, r8, asr #14
   10a00:	muleq	r1, r8, r6
   10a04:	andeq	r1, r1, r0, asr #13
   10a08:	muleq	r1, ip, r6
   10a0c:	andeq	r1, r1, r0, lsl #14
   10a10:	andeq	r1, r1, ip, asr #13
   10a14:	andeq	r1, r0, r1, lsr #6
   10a18:	andeq	r1, r1, ip, ror #13
   10a1c:	push	{fp, lr}
   10a20:	mov	fp, sp
   10a24:	sub	sp, sp, #40	; 0x28
   10a28:	ldr	r2, [pc, #488]	; 10c18 <abort@plt+0x408>
   10a2c:	add	r2, pc, r2
   10a30:	ldr	r3, [pc, #484]	; 10c1c <abort@plt+0x40c>
   10a34:	ldr	r3, [pc, r3]
   10a38:	str	r0, [fp, #-4]
   10a3c:	str	r1, [fp, #-8]
   10a40:	ldr	r0, [fp, #-8]
   10a44:	mov	r1, r2
   10a48:	blx	r3
   10a4c:	str	r0, [fp, #-12]
   10a50:	ldr	r0, [fp, #-12]
   10a54:	bl	10c40 <abort@plt+0x430>
   10a58:	and	r0, r0, #255	; 0xff
   10a5c:	cmp	r0, #0
   10a60:	beq	10ba4 <abort@plt+0x394>
   10a64:	ldr	r0, [pc, #436]	; 10c20 <abort@plt+0x410>
   10a68:	add	r0, pc, r0
   10a6c:	ldr	r1, [pc, #432]	; 10c24 <abort@plt+0x414>
   10a70:	add	r1, pc, r1
   10a74:	movw	r2, #42	; 0x2a
   10a78:	bl	10804 <strncmp@plt>
   10a7c:	cmp	r0, #0
   10a80:	bne	10ba4 <abort@plt+0x394>
   10a84:	ldr	r0, [fp, #-12]
   10a88:	bl	10c40 <abort@plt+0x430>
   10a8c:	and	r0, r0, #255	; 0xff
   10a90:	cmp	r0, #0
   10a94:	beq	10ba4 <abort@plt+0x394>
   10a98:	ldr	r0, [pc, #408]	; 10c38 <abort@plt+0x428>
   10a9c:	add	r0, pc, r0
   10aa0:	ldr	r1, [pc, #404]	; 10c3c <abort@plt+0x42c>
   10aa4:	add	r1, pc, r1
   10aa8:	bl	10750 <strcmp@plt>
   10aac:	cmp	r0, #0
   10ab0:	bne	10ba4 <abort@plt+0x394>
   10ab4:	ldr	r0, [fp, #-12]
   10ab8:	ldr	r2, [fp, #-4]
   10abc:	add	r1, sp, #20
   10ac0:	bl	10c94 <abort@plt+0x484>
   10ac4:	and	r0, r0, #255	; 0xff
   10ac8:	cmp	r0, #0
   10acc:	beq	10ba4 <abort@plt+0x394>
   10ad0:	ldr	r0, [fp, #-12]
   10ad4:	ldr	r1, [fp, #-4]
   10ad8:	add	r2, r1, #4
   10adc:	add	r1, sp, #20
   10ae0:	bl	10c94 <abort@plt+0x484>
   10ae4:	and	r0, r0, #255	; 0xff
   10ae8:	cmp	r0, #0
   10aec:	beq	10ba4 <abort@plt+0x394>
   10af0:	ldr	r0, [fp, #-12]
   10af4:	ldr	r1, [fp, #-4]
   10af8:	add	r2, r1, #8
   10afc:	sub	r1, fp, #16
   10b00:	bl	10c94 <abort@plt+0x484>
   10b04:	and	r0, r0, #255	; 0xff
   10b08:	cmp	r0, #0
   10b0c:	beq	10ba4 <abort@plt+0x394>
   10b10:	ldr	r0, [fp, #-16]
   10b14:	cmp	r0, #0
   10b18:	ble	10ba0 <abort@plt+0x390>
   10b1c:	ldr	r0, [fp, #-12]
   10b20:	bl	10c40 <abort@plt+0x430>
   10b24:	and	r0, r0, #255	; 0xff
   10b28:	cmp	r0, #0
   10b2c:	beq	10ba0 <abort@plt+0x390>
   10b30:	ldr	r0, [fp, #-12]
   10b34:	bl	10c40 <abort@plt+0x430>
   10b38:	and	r0, r0, #255	; 0xff
   10b3c:	cmp	r0, #0
   10b40:	beq	10ba0 <abort@plt+0x390>
   10b44:	ldr	r0, [fp, #-12]
   10b48:	bl	10c40 <abort@plt+0x430>
   10b4c:	and	r0, r0, #255	; 0xff
   10b50:	cmp	r0, #0
   10b54:	beq	10ba0 <abort@plt+0x390>
   10b58:	b	10b5c <abort@plt+0x34c>
   10b5c:	ldr	r0, [fp, #-12]
   10b60:	add	r1, sp, #20
   10b64:	add	r2, sp, #16
   10b68:	bl	10d20 <abort@plt+0x510>
   10b6c:	sxtb	r0, r0
   10b70:	cmp	r0, #0
   10b74:	beq	10b9c <abort@plt+0x38c>
   10b78:	ldr	r0, [sp, #20]
   10b7c:	ldr	r1, [fp, #-4]
   10b80:	add	r1, r1, #12
   10b84:	ldr	r2, [sp, #16]
   10b88:	add	r1, r1, r2, lsl #2
   10b8c:	ldr	r2, [r1]
   10b90:	add	r0, r2, r0
   10b94:	str	r0, [r1]
   10b98:	b	10b5c <abort@plt+0x34c>
   10b9c:	b	10ba0 <abort@plt+0x390>
   10ba0:	b	10bf4 <abort@plt+0x3e4>
   10ba4:	ldr	r0, [fp, #-8]
   10ba8:	movw	r1, #0
   10bac:	cmp	r0, r1
   10bb0:	beq	10bc0 <abort@plt+0x3b0>
   10bb4:	ldr	r0, [fp, #-8]
   10bb8:	str	r0, [sp, #12]
   10bbc:	b	10bd0 <abort@plt+0x3c0>
   10bc0:	ldr	r0, [pc, #96]	; 10c28 <abort@plt+0x418>
   10bc4:	add	r0, pc, r0
   10bc8:	str	r0, [sp, #12]
   10bcc:	b	10bd0 <abort@plt+0x3c0>
   10bd0:	ldr	r0, [sp, #12]
   10bd4:	ldr	r1, [pc, #80]	; 10c2c <abort@plt+0x41c>
   10bd8:	add	r1, pc, r1
   10bdc:	ldr	r2, [pc, #76]	; 10c30 <abort@plt+0x420>
   10be0:	ldr	r2, [pc, r2]
   10be4:	str	r0, [sp, #8]
   10be8:	mov	r0, r1
   10bec:	ldr	r1, [sp, #8]
   10bf0:	blx	r2
   10bf4:	ldr	r0, [pc, #56]	; 10c34 <abort@plt+0x424>
   10bf8:	ldr	r0, [pc, r0]
   10bfc:	ldr	r1, [fp, #-12]
   10c00:	str	r0, [sp, #4]
   10c04:	mov	r0, r1
   10c08:	ldr	r1, [sp, #4]
   10c0c:	blx	r1
   10c10:	mov	sp, fp
   10c14:	pop	{fp, pc}
   10c18:	andeq	r1, r0, ip, ror #4
   10c1c:	andeq	r1, r1, r8, lsr #12
   10c20:	andeq	r1, r1, r5, asr #12
   10c24:	andeq	r1, r0, sl, lsr #4
   10c28:	andeq	r1, r0, r2, asr #2
   10c2c:	andeq	r1, r0, ip, lsl r1
   10c30:			; <UNDEFINED> instruction: 0x000114b8
   10c34:	andeq	r1, r1, r4, asr r4
   10c38:	andeq	r1, r1, r1, lsl r6
   10c3c:	andeq	r1, r0, r3, lsr #4
   10c40:	push	{fp, lr}
   10c44:	mov	fp, sp
   10c48:	sub	sp, sp, #8
   10c4c:	ldr	r1, [pc, #60]	; 10c90 <abort@plt+0x480>
   10c50:	add	r1, pc, r1
   10c54:	str	r0, [sp, #4]
   10c58:	ldr	r2, [sp, #4]
   10c5c:	mov	r0, r1
   10c60:	movw	r1, #99	; 0x63
   10c64:	bl	10774 <fgets@plt>
   10c68:	movw	r1, #0
   10c6c:	cmp	r0, r1
   10c70:	movw	r0, #0
   10c74:	movne	r0, #1
   10c78:	tst	r0, #1
   10c7c:	movw	r0, #1
   10c80:	moveq	r0, #0
   10c84:	and	r0, r0, #255	; 0xff
   10c88:	mov	sp, fp
   10c8c:	pop	{fp, pc}
   10c90:	andeq	r1, r1, sp, asr r4
   10c94:	push	{fp, lr}
   10c98:	mov	fp, sp
   10c9c:	sub	sp, sp, #16
   10ca0:	str	r0, [sp, #8]
   10ca4:	str	r1, [sp, #4]
   10ca8:	str	r2, [sp]
   10cac:	ldr	r0, [sp, #8]
   10cb0:	bl	10c40 <abort@plt+0x430>
   10cb4:	and	r0, r0, #255	; 0xff
   10cb8:	cmp	r0, #0
   10cbc:	beq	10d04 <abort@plt+0x4f4>
   10cc0:	ldr	r0, [pc, #80]	; 10d18 <abort@plt+0x508>
   10cc4:	add	r0, pc, r0
   10cc8:	ldr	r1, [pc, #76]	; 10d1c <abort@plt+0x50c>
   10ccc:	add	r1, pc, r1
   10cd0:	ldr	r2, [sp, #4]
   10cd4:	bl	107e0 <__isoc99_sscanf@plt>
   10cd8:	cmp	r0, #1
   10cdc:	bne	10d04 <abort@plt+0x4f4>
   10ce0:	ldr	r0, [sp, #4]
   10ce4:	ldr	r0, [r0]
   10ce8:	ldr	r1, [sp]
   10cec:	ldr	r2, [r1]
   10cf0:	add	r0, r2, r0
   10cf4:	str	r0, [r1]
   10cf8:	movw	r0, #1
   10cfc:	strb	r0, [fp, #-1]
   10d00:	b	10d0c <abort@plt+0x4fc>
   10d04:	movw	r0, #0
   10d08:	strb	r0, [fp, #-1]
   10d0c:	ldrb	r0, [fp, #-1]
   10d10:	mov	sp, fp
   10d14:	pop	{fp, pc}
   10d18:	andeq	r1, r1, r9, ror #7
   10d1c:	andeq	r1, r0, r0, lsl #1
   10d20:	push	{fp, lr}
   10d24:	mov	fp, sp
   10d28:	sub	sp, sp, #16
   10d2c:	str	r0, [fp, #-4]
   10d30:	str	r1, [sp, #8]
   10d34:	str	r2, [sp, #4]
   10d38:	ldr	r0, [fp, #-4]
   10d3c:	bl	10c40 <abort@plt+0x430>
   10d40:	and	r0, r0, #255	; 0xff
   10d44:	cmp	r0, #0
   10d48:	movw	r0, #0
   10d4c:	str	r0, [sp]
   10d50:	beq	10d80 <abort@plt+0x570>
   10d54:	ldr	r0, [pc, #64]	; 10d9c <abort@plt+0x58c>
   10d58:	add	r0, pc, r0
   10d5c:	ldr	r1, [pc, #60]	; 10da0 <abort@plt+0x590>
   10d60:	add	r1, pc, r1
   10d64:	ldr	r2, [sp, #8]
   10d68:	ldr	r3, [sp, #4]
   10d6c:	bl	107e0 <__isoc99_sscanf@plt>
   10d70:	cmp	r0, #2
   10d74:	movw	r0, #0
   10d78:	moveq	r0, #1
   10d7c:	str	r0, [sp]
   10d80:	ldr	r0, [sp]
   10d84:	tst	r0, #1
   10d88:	movw	r0, #1
   10d8c:	moveq	r0, #0
   10d90:	and	r0, r0, #255	; 0xff
   10d94:	mov	sp, fp
   10d98:	pop	{fp, pc}
   10d9c:	andeq	r1, r1, r5, asr r3
   10da0:	andeq	r0, r0, r8, ror #31
   10da4:	push	{fp, lr}
   10da8:	mov	fp, sp
   10dac:	sub	sp, sp, #24
   10db0:	ldr	r2, [pc, #344]	; 10f10 <abort@plt+0x700>
   10db4:	add	r2, pc, r2
   10db8:	ldr	r3, [pc, #340]	; 10f14 <abort@plt+0x704>
   10dbc:	ldr	r3, [pc, r3]
   10dc0:	str	r0, [fp, #-4]
   10dc4:	str	r1, [fp, #-8]
   10dc8:	ldr	r0, [fp, #-8]
   10dcc:	mov	r1, r2
   10dd0:	blx	r3
   10dd4:	ldr	r1, [pc, #296]	; 10f04 <abort@plt+0x6f4>
   10dd8:	add	r1, pc, r1
   10ddc:	ldr	r2, [pc, #292]	; 10f08 <abort@plt+0x6f8>
   10de0:	add	r2, pc, r2
   10de4:	ldr	r3, [pc, #288]	; 10f0c <abort@plt+0x6fc>
   10de8:	add	r3, pc, r3
   10dec:	str	r0, [sp, #12]
   10df0:	ldr	r0, [sp, #12]
   10df4:	bl	107d4 <fprintf@plt>
   10df8:	ldr	r1, [pc, #256]	; 10f00 <abort@plt+0x6f0>
   10dfc:	add	r2, pc, r1
   10e00:	ldr	r1, [sp, #12]
   10e04:	ldr	r3, [fp, #-4]
   10e08:	ldr	r3, [r3]
   10e0c:	str	r0, [sp, #4]
   10e10:	mov	r0, r1
   10e14:	mov	r1, r3
   10e18:	bl	10f20 <abort@plt+0x710>
   10e1c:	ldr	r0, [pc, #216]	; 10efc <abort@plt+0x6ec>
   10e20:	add	r2, pc, r0
   10e24:	ldr	r0, [sp, #12]
   10e28:	ldr	r1, [fp, #-4]
   10e2c:	ldr	r1, [r1, #4]
   10e30:	bl	10f20 <abort@plt+0x710>
   10e34:	ldr	r0, [pc, #188]	; 10ef8 <abort@plt+0x6e8>
   10e38:	add	r2, pc, r0
   10e3c:	ldr	r0, [sp, #12]
   10e40:	ldr	r1, [fp, #-4]
   10e44:	ldr	r1, [r1, #8]
   10e48:	bl	10f20 <abort@plt+0x710>
   10e4c:	ldr	r0, [fp, #-4]
   10e50:	ldr	r0, [r0, #8]
   10e54:	cmp	r0, #0
   10e58:	ble	10ed4 <abort@plt+0x6c4>
   10e5c:	ldr	r0, [pc, #180]	; 10f18 <abort@plt+0x708>
   10e60:	add	r1, pc, r0
   10e64:	ldr	r0, [sp, #12]
   10e68:	bl	107d4 <fprintf@plt>
   10e6c:	movw	r1, #1
   10e70:	str	r1, [sp, #8]
   10e74:	ldr	r0, [sp, #8]
   10e78:	cmp	r0, #100	; 0x64
   10e7c:	bgt	10ed0 <abort@plt+0x6c0>
   10e80:	ldr	r0, [fp, #-4]
   10e84:	add	r0, r0, #12
   10e88:	ldr	r1, [sp, #8]
   10e8c:	add	r0, r0, r1, lsl #2
   10e90:	ldr	r0, [r0]
   10e94:	cmp	r0, #0
   10e98:	ble	10ebc <abort@plt+0x6ac>
   10e9c:	ldr	r0, [sp, #12]
   10ea0:	ldr	r1, [fp, #-4]
   10ea4:	add	r1, r1, #12
   10ea8:	ldr	r2, [sp, #8]
   10eac:	add	r1, r1, r2, lsl #2
   10eb0:	ldr	r1, [r1]
   10eb4:	ldr	r2, [sp, #8]
   10eb8:	bl	10f68 <abort@plt+0x758>
   10ebc:	b	10ec0 <abort@plt+0x6b0>
   10ec0:	ldr	r0, [sp, #8]
   10ec4:	add	r0, r0, #1
   10ec8:	str	r0, [sp, #8]
   10ecc:	b	10e74 <abort@plt+0x664>
   10ed0:	b	10ed4 <abort@plt+0x6c4>
   10ed4:	ldr	r0, [pc, #64]	; 10f1c <abort@plt+0x70c>
   10ed8:	ldr	r0, [pc, r0]
   10edc:	ldr	r1, [sp, #12]
   10ee0:	str	r0, [sp]
   10ee4:	mov	r0, r1
   10ee8:	ldr	r1, [sp]
   10eec:	blx	r1
   10ef0:	mov	sp, fp
   10ef4:	pop	{fp, pc}
   10ef8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10efc:	strdeq	r0, [r0], -lr
   10f00:	andeq	r0, r0, r7, lsl pc
   10f04:	andeq	r0, r0, r6, lsr pc
   10f08:			; <UNDEFINED> instruction: 0x00000eba
   10f0c:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   10f10:	andeq	r0, r0, r8, asr pc
   10f14:	andeq	r1, r1, r0, lsr #5
   10f18:	andeq	r0, r0, lr, asr #29
   10f1c:	andeq	r1, r1, r4, ror r1
   10f20:	push	{fp, lr}
   10f24:	mov	fp, sp
   10f28:	sub	sp, sp, #16
   10f2c:	ldr	r3, [pc, #48]	; 10f64 <abort@plt+0x754>
   10f30:	add	r3, pc, r3
   10f34:	str	r0, [fp, #-4]
   10f38:	str	r1, [sp, #8]
   10f3c:	str	r2, [sp, #4]
   10f40:	ldr	r0, [fp, #-4]
   10f44:	ldr	r2, [sp, #8]
   10f48:	ldr	r1, [sp, #4]
   10f4c:	str	r1, [sp]
   10f50:	mov	r1, r3
   10f54:	ldr	r3, [sp]
   10f58:	bl	107d4 <fprintf@plt>
   10f5c:	mov	sp, fp
   10f60:	pop	{fp, pc}
   10f64:	andeq	r0, r0, r0, lsr #28
   10f68:	push	{fp, lr}
   10f6c:	mov	fp, sp
   10f70:	sub	sp, sp, #16
   10f74:	ldr	r3, [pc, #48]	; 10fac <abort@plt+0x79c>
   10f78:	add	r3, pc, r3
   10f7c:	str	r0, [fp, #-4]
   10f80:	str	r1, [sp, #8]
   10f84:	str	r2, [sp, #4]
   10f88:	ldr	r0, [fp, #-4]
   10f8c:	ldr	r2, [sp, #8]
   10f90:	ldr	r1, [sp, #4]
   10f94:	str	r1, [sp]
   10f98:	mov	r1, r3
   10f9c:	ldr	r3, [sp]
   10fa0:	bl	107d4 <fprintf@plt>
   10fa4:	mov	sp, fp
   10fa8:	pop	{fp, pc}
   10fac:	andeq	r0, r0, r3, ror #27
   10fb0:	push	{fp, lr}
   10fb4:	mov	fp, sp
   10fb8:	sub	sp, sp, #16
   10fbc:	str	r0, [fp, #-4]
   10fc0:	str	r1, [sp, #8]
   10fc4:	ldr	r0, [fp, #-4]
   10fc8:	ldr	r1, [sp, #8]
   10fcc:	bl	10744 <calloc@plt>
   10fd0:	str	r0, [sp, #4]
   10fd4:	ldr	r0, [sp, #4]
   10fd8:	movw	r1, #0
   10fdc:	cmp	r0, r1
   10fe0:	bne	10ff0 <abort@plt+0x7e0>
   10fe4:	ldr	r0, [pc, #16]	; 10ffc <abort@plt+0x7ec>
   10fe8:	add	r0, pc, r0
   10fec:	bl	1168c <error@@Base>
   10ff0:	ldr	r0, [sp, #4]
   10ff4:	mov	sp, fp
   10ff8:	pop	{fp, pc}
   10ffc:	andeq	r0, r0, lr, ror sp
   11000:	sub	sp, sp, #20
   11004:	str	r0, [sp, #12]
   11008:	str	r1, [sp, #8]
   1100c:	movw	r0, #0
   11010:	str	r0, [sp, #4]
   11014:	ldr	r0, [sp, #12]
   11018:	ldr	r1, [sp, #4]
   1101c:	add	r0, r0, r1
   11020:	ldrb	r0, [r0]
   11024:	cmp	r0, #0
   11028:	movw	r0, #0
   1102c:	str	r0, [sp]
   11030:	beq	11064 <abort@plt+0x854>
   11034:	ldr	r0, [sp, #12]
   11038:	ldr	r1, [sp, #4]
   1103c:	add	r0, r0, r1
   11040:	ldrb	r0, [r0]
   11044:	ldr	r1, [sp, #8]
   11048:	ldr	r2, [sp, #4]
   1104c:	add	r1, r1, r2
   11050:	ldrb	r1, [r1]
   11054:	cmp	r0, r1
   11058:	movw	r0, #0
   1105c:	moveq	r0, #1
   11060:	str	r0, [sp]
   11064:	ldr	r0, [sp]
   11068:	tst	r0, #1
   1106c:	beq	11084 <abort@plt+0x874>
   11070:	b	11074 <abort@plt+0x864>
   11074:	ldr	r0, [sp, #4]
   11078:	add	r0, r0, #1
   1107c:	str	r0, [sp, #4]
   11080:	b	11014 <abort@plt+0x804>
   11084:	ldr	r0, [sp, #12]
   11088:	ldr	r1, [sp, #4]
   1108c:	add	r0, r0, r1
   11090:	ldrb	r0, [r0]
   11094:	cmp	r0, #0
   11098:	bne	110b4 <abort@plt+0x8a4>
   1109c:	ldr	r0, [sp, #8]
   110a0:	ldr	r1, [sp, #4]
   110a4:	add	r0, r0, r1
   110a8:	ldrb	r0, [r0]
   110ac:	cmp	r0, #0
   110b0:	beq	110f4 <abort@plt+0x8e4>
   110b4:	ldr	r0, [sp, #12]
   110b8:	ldr	r1, [sp, #4]
   110bc:	add	r0, r0, r1
   110c0:	ldrb	r0, [r0]
   110c4:	ldr	r1, [sp, #8]
   110c8:	ldr	r2, [sp, #4]
   110cc:	add	r1, r1, r2
   110d0:	ldrb	r1, [r1]
   110d4:	cmp	r0, r1
   110d8:	movw	r0, #0
   110dc:	movlt	r0, #1
   110e0:	tst	r0, #1
   110e4:	mvn	r0, #0
   110e8:	moveq	r0, #1
   110ec:	str	r0, [sp, #16]
   110f0:	b	110fc <abort@plt+0x8ec>
   110f4:	movw	r0, #0
   110f8:	str	r0, [sp, #16]
   110fc:	ldr	r0, [sp, #16]
   11100:	add	sp, sp, #20
   11104:	bx	lr
   11108:	push	{fp, lr}
   1110c:	mov	fp, sp
   11110:	sub	sp, sp, #24
   11114:	str	r0, [fp, #-8]
   11118:	str	r1, [sp, #12]
   1111c:	ldr	r0, [fp, #-8]
   11120:	movw	r1, #0
   11124:	cmp	r0, r1
   11128:	bne	1116c <abort@plt+0x95c>
   1112c:	ldr	r0, [sp, #12]
   11130:	ldrb	r0, [r0]
   11134:	cmp	r0, #114	; 0x72
   11138:	bne	11150 <abort@plt+0x940>
   1113c:	ldr	r0, [pc, #148]	; 111d8 <abort@plt+0x9c8>
   11140:	ldr	r0, [pc, r0]
   11144:	ldr	r0, [r0]
   11148:	str	r0, [sp, #4]
   1114c:	b	11160 <abort@plt+0x950>
   11150:	ldr	r0, [pc, #124]	; 111d4 <abort@plt+0x9c4>
   11154:	ldr	r0, [pc, r0]
   11158:	ldr	r0, [r0]
   1115c:	str	r0, [sp, #4]
   11160:	ldr	r0, [sp, #4]
   11164:	str	r0, [fp, #-4]
   11168:	b	111c8 <abort@plt+0x9b8>
   1116c:	ldr	r0, [fp, #-8]
   11170:	ldr	r1, [sp, #12]
   11174:	bl	1075c <fopen@plt>
   11178:	str	r0, [sp, #8]
   1117c:	ldr	r0, [sp, #8]
   11180:	movw	r1, #0
   11184:	cmp	r0, r1
   11188:	beq	11198 <abort@plt+0x988>
   1118c:	ldr	r0, [sp, #8]
   11190:	str	r0, [fp, #-4]
   11194:	b	111c8 <abort@plt+0x9b8>
   11198:	ldr	r0, [sp, #12]
   1119c:	ldrb	r0, [r0]
   111a0:	cmp	r0, #119	; 0x77
   111a4:	bne	111b8 <abort@plt+0x9a8>
   111a8:	ldr	r0, [pc, #48]	; 111e0 <abort@plt+0x9d0>
   111ac:	add	r0, pc, r0
   111b0:	ldr	r1, [fp, #-8]
   111b4:	bl	116ec <error@@Base+0x60>
   111b8:	ldr	r0, [pc, #28]	; 111dc <abort@plt+0x9cc>
   111bc:	add	r0, pc, r0
   111c0:	ldr	r1, [fp, #-8]
   111c4:	bl	116ec <error@@Base+0x60>
   111c8:	ldr	r0, [fp, #-4]
   111cc:	mov	sp, fp
   111d0:	pop	{fp, pc}
   111d4:	andeq	r0, r1, ip, lsr pc
   111d8:	andeq	r0, r1, r4, asr #30
   111dc:	ldrdeq	r0, [r0], -sl
   111e0:	ldrdeq	r0, [r0], -r4
   111e4:	push	{fp, lr}
   111e8:	mov	fp, sp
   111ec:	sub	sp, sp, #8
   111f0:	ldr	r1, [pc, #60]	; 11234 <abort@plt+0xa24>
   111f4:	ldr	r1, [pc, r1]
   111f8:	str	r0, [sp, #4]
   111fc:	ldr	r0, [sp, #4]
   11200:	ldr	r1, [r1]
   11204:	cmp	r0, r1
   11208:	beq	1122c <abort@plt+0xa1c>
   1120c:	ldr	r0, [pc, #36]	; 11238 <abort@plt+0xa28>
   11210:	ldr	r0, [pc, r0]
   11214:	ldr	r1, [sp, #4]
   11218:	ldr	r0, [r0]
   1121c:	cmp	r1, r0
   11220:	beq	1122c <abort@plt+0xa1c>
   11224:	ldr	r0, [sp, #4]
   11228:	bl	107ec <fclose@plt>
   1122c:	mov	sp, fp
   11230:	pop	{fp, pc}
   11234:	muleq	r1, r0, lr
   11238:	andeq	r0, r1, r0, lsl #29
   1123c:	push	{fp, lr}
   11240:	mov	fp, sp
   11244:	sub	sp, sp, #96	; 0x60
   11248:	str	r0, [fp, #-4]
   1124c:	ldr	r0, [fp, #-4]
   11250:	mov	r1, sp
   11254:	bl	11c3c <error@@Base+0x5b0>
   11258:	cmp	r0, #0
   1125c:	movw	r0, #0
   11260:	moveq	r0, #1
   11264:	tst	r0, #1
   11268:	movw	r0, #1
   1126c:	moveq	r0, #0
   11270:	and	r0, r0, #255	; 0xff
   11274:	mov	sp, fp
   11278:	pop	{fp, pc}
   1127c:	push	{fp, lr}
   11280:	mov	fp, sp
   11284:	sub	sp, sp, #8
   11288:	ldr	r0, [pc, #68]	; 112d4 <abort@plt+0xac4>
   1128c:	add	r0, pc, r0
   11290:	ldrh	r1, [r0]
   11294:	movw	r2, #1
   11298:	add	r1, r1, r2
   1129c:	strh	r1, [r0]
   112a0:	sxth	r0, r1
   112a4:	bl	112d8 <abort@plt+0xac8>
   112a8:	ldr	r1, [pc, #32]	; 112d0 <abort@plt+0xac0>
   112ac:	ldr	r1, [pc, r1]
   112b0:	str	r0, [sp, #4]
   112b4:	ldr	r0, [sp, #4]
   112b8:	blx	r1
   112bc:	ldr	r1, [sp, #4]
   112c0:	str	r0, [sp]
   112c4:	mov	r0, r1
   112c8:	mov	sp, fp
   112cc:	pop	{fp, pc}
   112d0:			; <UNDEFINED> instruction: 0x00010db8
   112d4:	andeq	r0, r1, r6, lsl #29
   112d8:	push	{fp, lr}
   112dc:	mov	fp, sp
   112e0:	sub	sp, sp, #128	; 0x80
   112e4:	ldr	r1, [pc, #112]	; 1135c <abort@plt+0xb4c>
   112e8:	ldr	r1, [pc, r1]
   112ec:	ldr	r2, [pc, #108]	; 11360 <abort@plt+0xb50>
   112f0:	ldr	r2, [pc, r2]
   112f4:	add	r3, sp, #26
   112f8:	strh	r0, [fp, #-2]
   112fc:	ldr	r2, [r2]
   11300:	str	r3, [sp, #20]
   11304:	str	r2, [sp, #16]
   11308:	blx	r1
   1130c:	ldr	r1, [pc, #68]	; 11358 <abort@plt+0xb48>
   11310:	add	r1, pc, r1
   11314:	ldrsh	r2, [fp, #-2]
   11318:	ldr	r3, [sp, #20]
   1131c:	str	r0, [sp, #12]
   11320:	mov	r0, r3
   11324:	ldr	ip, [sp, #16]
   11328:	str	r2, [sp, #8]
   1132c:	mov	r2, ip
   11330:	ldr	r3, [sp, #12]
   11334:	ldr	lr, [sp, #8]
   11338:	str	lr, [sp]
   1133c:	bl	107f8 <sprintf@plt>
   11340:	add	r1, sp, #26
   11344:	str	r0, [sp, #4]
   11348:	mov	r0, r1
   1134c:	bl	10780 <strdup@plt>
   11350:	mov	sp, fp
   11354:	pop	{fp, pc}
   11358:	andeq	r0, r0, pc, lsr #21
   1135c:	muleq	r1, r4, sp
   11360:	andeq	r0, r1, r8, lsl #27
   11364:	push	{fp, lr}
   11368:	mov	fp, sp
   1136c:	sub	sp, sp, #16
   11370:	str	r0, [fp, #-4]
   11374:	movw	r0, #47	; 0x2f
   11378:	strb	r0, [fp, #-5]
   1137c:	ldr	r0, [fp, #-4]
   11380:	bl	107c8 <strlen@plt>
   11384:	sub	r0, r0, #1
   11388:	strh	r0, [sp, #8]
   1138c:	ldrsh	r0, [sp, #8]
   11390:	cmp	r0, #0
   11394:	movw	r0, #0
   11398:	str	r0, [sp, #4]
   1139c:	blt	113c4 <abort@plt+0xbb4>
   113a0:	ldr	r0, [fp, #-4]
   113a4:	ldrsh	r1, [sp, #8]
   113a8:	add	r0, r0, r1
   113ac:	ldrb	r0, [r0]
   113b0:	ldrb	r1, [fp, #-5]
   113b4:	cmp	r0, r1
   113b8:	movw	r0, #0
   113bc:	movne	r0, #1
   113c0:	str	r0, [sp, #4]
   113c4:	ldr	r0, [sp, #4]
   113c8:	tst	r0, #1
   113cc:	beq	113e8 <abort@plt+0xbd8>
   113d0:	b	113d4 <abort@plt+0xbc4>
   113d4:	ldrh	r0, [sp, #8]
   113d8:	movw	r1, #65535	; 0xffff
   113dc:	add	r0, r0, r1
   113e0:	strh	r0, [sp, #8]
   113e4:	b	1138c <abort@plt+0xb7c>
   113e8:	ldr	r0, [fp, #-4]
   113ec:	ldrsh	r1, [sp, #8]
   113f0:	add	r1, r1, #1
   113f4:	add	r0, r0, r1
   113f8:	mov	sp, fp
   113fc:	pop	{fp, pc}
   11400:	push	{fp, lr}
   11404:	mov	fp, sp
   11408:	sub	sp, sp, #16
   1140c:	str	r0, [fp, #-4]
   11410:	str	r1, [sp, #8]
   11414:	str	r2, [sp, #4]
   11418:	str	r3, [sp]
   1141c:	ldr	r0, [sp, #8]
   11420:	ldr	r0, [r0]
   11424:	bl	11364 <abort@plt+0xb54>
   11428:	ldr	r1, [pc, #36]	; 11454 <abort@plt+0xc44>
   1142c:	ldr	r1, [pc, r1]
   11430:	str	r0, [r1]
   11434:	bl	117c8 <error@@Base+0x13c>
   11438:	ldr	r0, [fp, #-4]
   1143c:	ldr	r1, [sp, #8]
   11440:	ldr	r2, [sp, #4]
   11444:	ldr	r3, [sp]
   11448:	bl	11458 <abort@plt+0xc48>
   1144c:	mov	sp, fp
   11450:	pop	{fp, pc}
   11454:	andeq	r0, r1, ip, asr #24
   11458:	push	{fp, lr}
   1145c:	mov	fp, sp
   11460:	sub	sp, sp, #48	; 0x30
   11464:	str	r0, [fp, #-4]
   11468:	str	r1, [fp, #-8]
   1146c:	str	r2, [fp, #-12]
   11470:	str	r3, [fp, #-16]
   11474:	movw	r0, #0
   11478:	strh	r0, [fp, #-20]	; 0xffffffec
   1147c:	ldr	r0, [fp, #-4]
   11480:	ldr	r0, [r0]
   11484:	cmp	r0, #1
   11488:	bne	114a8 <abort@plt+0xc98>
   1148c:	ldr	r0, [pc, #404]	; 11628 <abort@plt+0xe18>
   11490:	ldr	r0, [pc, r0]
   11494:	ldrb	r0, [r0]
   11498:	cmp	r0, #0
   1149c:	beq	114a8 <abort@plt+0xc98>
   114a0:	ldr	r0, [fp, #-12]
   114a4:	bl	11860 <error@@Base+0x1d4>
   114a8:	movw	r0, #1
   114ac:	strh	r0, [fp, #-18]	; 0xffffffee
   114b0:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   114b4:	ldr	r1, [fp, #-4]
   114b8:	ldr	r1, [r1]
   114bc:	cmp	r0, r1
   114c0:	bge	11614 <abort@plt+0xe04>
   114c4:	ldr	r0, [fp, #-8]
   114c8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   114cc:	add	r0, r0, r1, lsl #2
   114d0:	ldr	r0, [r0]
   114d4:	ldrb	r0, [r0]
   114d8:	cmp	r0, #45	; 0x2d
   114dc:	bne	115dc <abort@plt+0xdcc>
   114e0:	ldr	r0, [fp, #-8]
   114e4:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   114e8:	add	r0, r0, r1, lsl #2
   114ec:	ldr	r0, [r0]
   114f0:	ldrb	r0, [r0, #1]
   114f4:	cmp	r0, #0
   114f8:	beq	115dc <abort@plt+0xdcc>
   114fc:	ldr	r0, [pc, #296]	; 1162c <abort@plt+0xe1c>
   11500:	add	r0, pc, r0
   11504:	ldr	r1, [fp, #-8]
   11508:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   1150c:	ldr	r2, [r1, r2, lsl #2]!
   11510:	ldr	r1, [r1]
   11514:	str	r0, [sp, #24]
   11518:	mov	r0, r1
   1151c:	str	r2, [sp, #20]
   11520:	bl	107c8 <strlen@plt>
   11524:	ldr	r1, [sp, #24]
   11528:	str	r0, [sp, #16]
   1152c:	mov	r0, r1
   11530:	ldr	r1, [sp, #20]
   11534:	ldr	r2, [sp, #16]
   11538:	bl	10804 <strncmp@plt>
   1153c:	cmp	r0, #0
   11540:	bne	1154c <abort@plt+0xd3c>
   11544:	ldr	r0, [fp, #-12]
   11548:	bl	11860 <error@@Base+0x1d4>
   1154c:	ldr	r0, [fp, #-8]
   11550:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11554:	add	r0, r0, r1, lsl #2
   11558:	ldr	r0, [r0]
   1155c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11560:	add	r1, r1, #1
   11564:	ldr	r2, [fp, #-4]
   11568:	ldr	r2, [r2]
   1156c:	cmp	r1, r2
   11570:	str	r0, [sp, #12]
   11574:	bge	11594 <abort@plt+0xd84>
   11578:	ldr	r0, [fp, #-8]
   1157c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11580:	add	r1, r1, #1
   11584:	add	r0, r0, r1, lsl #2
   11588:	ldr	r0, [r0]
   1158c:	str	r0, [sp, #8]
   11590:	b	115a0 <abort@plt+0xd90>
   11594:	movw	r0, #0
   11598:	str	r0, [sp, #8]
   1159c:	b	115a0 <abort@plt+0xd90>
   115a0:	ldr	r0, [sp, #8]
   115a4:	ldr	r2, [fp, #-16]
   115a8:	ldr	r1, [sp, #12]
   115ac:	str	r0, [sp, #4]
   115b0:	mov	r0, r1
   115b4:	ldr	r1, [sp, #4]
   115b8:	bl	118e8 <error@@Base+0x25c>
   115bc:	sxtb	r0, r0
   115c0:	cmp	r0, #0
   115c4:	beq	115d8 <abort@plt+0xdc8>
   115c8:	ldrh	r0, [fp, #-18]	; 0xffffffee
   115cc:	movw	r1, #1
   115d0:	add	r0, r0, r1
   115d4:	strh	r0, [fp, #-18]	; 0xffffffee
   115d8:	b	115fc <abort@plt+0xdec>
   115dc:	ldr	r0, [fp, #-8]
   115e0:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   115e4:	ldr	r1, [r0, r1, lsl #2]
   115e8:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   115ec:	add	r3, r2, #1
   115f0:	strh	r3, [fp, #-20]	; 0xffffffec
   115f4:	add	r0, r0, r2, lsl #2
   115f8:	str	r1, [r0]
   115fc:	b	11600 <abort@plt+0xdf0>
   11600:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11604:	movw	r1, #1
   11608:	add	r0, r0, r1
   1160c:	strh	r0, [fp, #-18]	; 0xffffffee
   11610:	b	114b0 <abort@plt+0xca0>
   11614:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11618:	ldr	r1, [fp, #-4]
   1161c:	str	r0, [r1]
   11620:	mov	sp, fp
   11624:	pop	{fp, pc}
   11628:	andeq	r0, r1, r0, asr #23
   1162c:	ldrdeq	r0, [r0], -ip
   11630:	push	{fp, lr}
   11634:	mov	fp, sp
   11638:	movw	r0, #0
   1163c:	bl	11640 <abort@plt+0xe30>
   11640:	push	{fp, lr}
   11644:	mov	fp, sp
   11648:	sub	sp, sp, #8
   1164c:	ldr	r1, [pc, #48]	; 11684 <abort@plt+0xe74>
   11650:	ldr	r1, [pc, r1]
   11654:	str	r0, [sp, #4]
   11658:	ldr	r0, [r1]
   1165c:	movw	r1, #0
   11660:	cmp	r0, r1
   11664:	beq	11678 <abort@plt+0xe68>
   11668:	ldr	r0, [pc, #24]	; 11688 <abort@plt+0xe78>
   1166c:	ldr	r0, [pc, r0]
   11670:	ldr	r0, [r0]
   11674:	blx	r0
   11678:	bl	11b5c <error@@Base+0x4d0>
   1167c:	ldr	r0, [sp, #4]
   11680:	bl	107bc <exit@plt>
   11684:	andeq	r0, r1, r0, lsr sl
   11688:	andeq	r0, r1, r4, lsl sl

0001168c <error@@Base>:
   1168c:	push	{fp, lr}
   11690:	mov	fp, sp
   11694:	sub	sp, sp, #8
   11698:	ldr	r1, [pc, #64]	; 116e0 <error@@Base+0x54>
   1169c:	add	r1, pc, r1
   116a0:	ldr	r2, [pc, #60]	; 116e4 <error@@Base+0x58>
   116a4:	ldr	r2, [pc, r2]
   116a8:	ldr	r3, [pc, #56]	; 116e8 <error@@Base+0x5c>
   116ac:	ldr	r3, [pc, r3]
   116b0:	str	r0, [sp, #4]
   116b4:	ldr	r0, [r3]
   116b8:	ldr	r2, [r2]
   116bc:	ldr	r3, [sp, #4]
   116c0:	bl	107d4 <fprintf@plt>
   116c4:	ldr	r1, [pc, #16]	; 116dc <error@@Base+0x50>
   116c8:	ldr	r1, [pc, r1]
   116cc:	ldr	r1, [r1]
   116d0:	str	r0, [sp]
   116d4:	mov	r0, r1
   116d8:	bl	11640 <abort@plt+0xe30>
   116dc:	andeq	r0, r1, ip, asr #19
   116e0:	andeq	r0, r0, lr, lsl #14
   116e4:	ldrdeq	r0, [r1], -r4
   116e8:			; <UNDEFINED> instruction: 0x000109bc
   116ec:	push	{fp, lr}
   116f0:	mov	fp, sp
   116f4:	sub	sp, sp, #24
   116f8:	ldr	r2, [pc, #88]	; 11758 <error@@Base+0xcc>
   116fc:	add	r2, pc, r2
   11700:	ldr	r3, [pc, #84]	; 1175c <error@@Base+0xd0>
   11704:	ldr	r3, [pc, r3]
   11708:	ldr	ip, [pc, #80]	; 11760 <error@@Base+0xd4>
   1170c:	ldr	ip, [pc, ip]
   11710:	str	r0, [fp, #-4]
   11714:	str	r1, [fp, #-8]
   11718:	ldr	r0, [ip]
   1171c:	ldr	r1, [r3]
   11720:	ldr	r3, [fp, #-4]
   11724:	ldr	ip, [fp, #-8]
   11728:	str	r1, [sp, #12]
   1172c:	mov	r1, r2
   11730:	ldr	r2, [sp, #12]
   11734:	str	ip, [sp]
   11738:	bl	107d4 <fprintf@plt>
   1173c:	ldr	r1, [pc, #16]	; 11754 <error@@Base+0xc8>
   11740:	ldr	r1, [pc, r1]
   11744:	ldr	r1, [r1]
   11748:	str	r0, [sp, #8]
   1174c:	mov	r0, r1
   11750:	bl	11640 <abort@plt+0xe30>
   11754:	andeq	r0, r1, r4, asr r9
   11758:			; <UNDEFINED> instruction: 0x000006b6
   1175c:	andeq	r0, r1, r4, ror r9
   11760:	andeq	r0, r1, ip, asr r9
   11764:	push	{fp, lr}
   11768:	mov	fp, sp
   1176c:	sub	sp, sp, #16
   11770:	ldr	r2, [pc, #68]	; 117bc <error@@Base+0x130>
   11774:	add	r2, pc, r2
   11778:	ldr	r3, [pc, #64]	; 117c0 <error@@Base+0x134>
   1177c:	ldr	r3, [pc, r3]
   11780:	ldr	ip, [pc, #60]	; 117c4 <error@@Base+0x138>
   11784:	ldr	ip, [pc, ip]
   11788:	str	r0, [fp, #-4]
   1178c:	str	r1, [sp, #8]
   11790:	ldr	r0, [ip]
   11794:	ldr	r1, [r3]
   11798:	ldr	r3, [fp, #-4]
   1179c:	ldr	ip, [sp, #8]
   117a0:	str	r1, [sp, #4]
   117a4:	mov	r1, r2
   117a8:	ldr	r2, [sp, #4]
   117ac:	str	ip, [sp]
   117b0:	bl	107d4 <fprintf@plt>
   117b4:	mov	sp, fp
   117b8:	pop	{fp, pc}
   117bc:	andeq	r0, r0, lr, lsr r6
   117c0:	strdeq	r0, [r1], -ip
   117c4:	andeq	r0, r1, r4, ror #17
   117c8:	push	{fp, lr}
   117cc:	mov	fp, sp
   117d0:	sub	sp, sp, #8
   117d4:	ldr	r0, [pc, #44]	; 11808 <error@@Base+0x17c>
   117d8:	add	r1, pc, r0
   117dc:	movw	r0, #2
   117e0:	bl	107a4 <__sysv_signal@plt>
   117e4:	ldr	r1, [pc, #24]	; 11804 <error@@Base+0x178>
   117e8:	add	r1, pc, r1
   117ec:	movw	r2, #15
   117f0:	str	r0, [sp, #4]
   117f4:	mov	r0, r2
   117f8:	bl	107a4 <__sysv_signal@plt>
   117fc:	mov	sp, fp
   11800:	pop	{fp, pc}
   11804:	andeq	r0, r0, ip, lsl r0
   11808:	andeq	r0, r0, ip, lsr #32
   1180c:	push	{fp, lr}
   11810:	mov	fp, sp
   11814:	sub	sp, sp, #8
   11818:	ldr	r1, [pc, #52]	; 11854 <error@@Base+0x1c8>
   1181c:	add	r1, pc, r1
   11820:	str	r0, [sp, #4]
   11824:	ldrsb	r0, [r1]
   11828:	cmp	r0, #0
   1182c:	beq	11838 <error@@Base+0x1ac>
   11830:	mov	sp, fp
   11834:	pop	{fp, pc}
   11838:	ldr	r0, [pc, #24]	; 11858 <error@@Base+0x1cc>
   1183c:	add	r0, pc, r0
   11840:	ldr	r1, [pc, #20]	; 1185c <error@@Base+0x1d0>
   11844:	add	r1, pc, r1
   11848:	movw	r2, #1
   1184c:	strb	r2, [r1]
   11850:	bl	1168c <error@@Base>
   11854:	strdeq	r0, [r1], -r8
   11858:	muleq	r0, r1, r5
   1185c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11860:	push	{fp, lr}
   11864:	mov	fp, sp
   11868:	sub	sp, sp, #8
   1186c:	ldr	r1, [pc, #96]	; 118d4 <error@@Base+0x248>
   11870:	ldr	r1, [pc, r1]
   11874:	str	r0, [sp, #4]
   11878:	ldr	r0, [r1]
   1187c:	movw	r1, #0
   11880:	cmp	r0, r1
   11884:	beq	1189c <error@@Base+0x210>
   11888:	ldr	r0, [pc, #84]	; 118e4 <error@@Base+0x258>
   1188c:	ldr	r0, [pc, r0]
   11890:	ldr	r0, [r0]
   11894:	blx	r0
   11898:	b	118d0 <error@@Base+0x244>
   1189c:	ldr	r0, [pc, #52]	; 118d8 <error@@Base+0x24c>
   118a0:	add	r1, pc, r0
   118a4:	ldr	r0, [pc, #48]	; 118dc <error@@Base+0x250>
   118a8:	ldr	r0, [pc, r0]
   118ac:	ldr	r2, [pc, #44]	; 118e0 <error@@Base+0x254>
   118b0:	ldr	r2, [pc, r2]
   118b4:	ldr	r2, [r2]
   118b8:	ldr	r0, [r0]
   118bc:	ldr	r3, [sp, #4]
   118c0:	str	r0, [sp]
   118c4:	mov	r0, r2
   118c8:	ldr	r2, [sp]
   118cc:	bl	107d4 <fprintf@plt>
   118d0:	bl	11630 <abort@plt+0xe20>
   118d4:	andeq	r0, r1, r8, ror #15
   118d8:	andeq	r0, r0, r2, asr #10
   118dc:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   118e0:			; <UNDEFINED> instruction: 0x000107b8
   118e4:	andeq	r0, r1, ip, asr #15
   118e8:	push	{fp, lr}
   118ec:	mov	fp, sp
   118f0:	sub	sp, sp, #32
   118f4:	str	r0, [fp, #-8]
   118f8:	str	r1, [fp, #-12]
   118fc:	str	r2, [sp, #16]
   11900:	ldr	r0, [sp, #16]
   11904:	movw	r1, #0
   11908:	cmp	r0, r1
   1190c:	bne	11914 <error@@Base+0x288>
   11910:	b	11b28 <error@@Base+0x49c>
   11914:	movw	r0, #0
   11918:	strh	r0, [sp, #14]
   1191c:	ldr	r0, [sp, #16]
   11920:	ldrsh	r1, [sp, #14]
   11924:	movw	r2, #12
   11928:	mul	r1, r1, r2
   1192c:	add	r0, r0, r1
   11930:	ldrb	r0, [r0]
   11934:	cmp	r0, #0
   11938:	movw	r0, #0
   1193c:	str	r0, [sp, #8]
   11940:	beq	11974 <error@@Base+0x2e8>
   11944:	ldr	r0, [fp, #-8]
   11948:	ldrb	r0, [r0, #1]
   1194c:	ldr	r1, [sp, #16]
   11950:	ldrsh	r2, [sp, #14]
   11954:	movw	r3, #12
   11958:	mul	r2, r2, r3
   1195c:	add	r1, r1, r2
   11960:	ldrb	r1, [r1]
   11964:	cmp	r0, r1
   11968:	movw	r0, #0
   1196c:	movne	r0, #1
   11970:	str	r0, [sp, #8]
   11974:	ldr	r0, [sp, #8]
   11978:	tst	r0, #1
   1197c:	beq	11998 <error@@Base+0x30c>
   11980:	b	11984 <error@@Base+0x2f8>
   11984:	ldrh	r0, [sp, #14]
   11988:	movw	r1, #1
   1198c:	add	r0, r0, r1
   11990:	strh	r0, [sp, #14]
   11994:	b	1191c <error@@Base+0x290>
   11998:	ldr	r0, [sp, #16]
   1199c:	ldrsh	r1, [sp, #14]
   119a0:	movw	r2, #12
   119a4:	mul	r1, r1, r2
   119a8:	add	r0, r0, r1
   119ac:	ldrsb	r0, [r0]
   119b0:	cmp	r0, #0
   119b4:	bne	119bc <error@@Base+0x330>
   119b8:	b	11b28 <error@@Base+0x49c>
   119bc:	ldr	r0, [sp, #16]
   119c0:	ldrsh	r1, [sp, #14]
   119c4:	movw	r2, #12
   119c8:	mul	r1, r1, r2
   119cc:	add	r0, r0, r1
   119d0:	ldr	r0, [r0, #4]
   119d4:	movw	r1, #0
   119d8:	cmp	r0, r1
   119dc:	beq	11a9c <error@@Base+0x410>
   119e0:	ldr	r0, [fp, #-8]
   119e4:	ldrb	r0, [r0, #2]
   119e8:	cmp	r0, #0
   119ec:	bne	11a00 <error@@Base+0x374>
   119f0:	ldr	r0, [fp, #-12]
   119f4:	movw	r1, #0
   119f8:	cmp	r0, r1
   119fc:	beq	11a9c <error@@Base+0x410>
   11a00:	ldr	r0, [sp, #16]
   11a04:	ldrsh	r1, [sp, #14]
   11a08:	movw	r2, #12
   11a0c:	mul	r1, r1, r2
   11a10:	add	r0, r0, r1
   11a14:	ldr	r0, [r0, #4]
   11a18:	ldr	r0, [r0]
   11a1c:	movw	r1, #0
   11a20:	cmp	r0, r1
   11a24:	beq	11a2c <error@@Base+0x3a0>
   11a28:	b	11b38 <error@@Base+0x4ac>
   11a2c:	ldr	r0, [fp, #-8]
   11a30:	ldrb	r0, [r0, #2]
   11a34:	cmp	r0, #0
   11a38:	beq	11a4c <error@@Base+0x3c0>
   11a3c:	ldr	r0, [fp, #-8]
   11a40:	add	r0, r0, #2
   11a44:	str	r0, [sp, #4]
   11a48:	b	11a54 <error@@Base+0x3c8>
   11a4c:	ldr	r0, [fp, #-12]
   11a50:	str	r0, [sp, #4]
   11a54:	ldr	r0, [sp, #4]
   11a58:	ldr	r1, [sp, #16]
   11a5c:	ldrsh	r2, [sp, #14]
   11a60:	movw	r3, #12
   11a64:	mul	r2, r2, r3
   11a68:	add	r1, r1, r2
   11a6c:	ldr	r1, [r1, #4]
   11a70:	str	r0, [r1]
   11a74:	ldr	r0, [fp, #-8]
   11a78:	ldrb	r0, [r0, #2]
   11a7c:	cmp	r0, #0
   11a80:	movw	r0, #0
   11a84:	movne	r0, #1
   11a88:	tst	r0, #1
   11a8c:	movw	r0, #0
   11a90:	moveq	r0, #1
   11a94:	strb	r0, [fp, #-1]
   11a98:	b	11b48 <error@@Base+0x4bc>
   11a9c:	ldr	r0, [sp, #16]
   11aa0:	ldrsh	r1, [sp, #14]
   11aa4:	movw	r2, #12
   11aa8:	mul	r1, r1, r2
   11aac:	add	r0, r0, r1
   11ab0:	ldr	r0, [r0, #8]
   11ab4:	movw	r1, #0
   11ab8:	cmp	r0, r1
   11abc:	beq	11b24 <error@@Base+0x498>
   11ac0:	ldr	r0, [fp, #-8]
   11ac4:	ldrsb	r0, [r0, #2]
   11ac8:	cmp	r0, #0
   11acc:	bne	11b24 <error@@Base+0x498>
   11ad0:	ldr	r0, [sp, #16]
   11ad4:	ldrsh	r1, [sp, #14]
   11ad8:	movw	r2, #12
   11adc:	mul	r1, r1, r2
   11ae0:	add	r0, r0, r1
   11ae4:	ldr	r0, [r0, #8]
   11ae8:	ldrsb	r0, [r0]
   11aec:	cmp	r0, #0
   11af0:	beq	11af8 <error@@Base+0x46c>
   11af4:	b	11b38 <error@@Base+0x4ac>
   11af8:	ldr	r0, [sp, #16]
   11afc:	ldrsh	r1, [sp, #14]
   11b00:	movw	r2, #12
   11b04:	mul	r1, r1, r2
   11b08:	add	r0, r0, r1
   11b0c:	ldr	r0, [r0, #8]
   11b10:	movw	r1, #1
   11b14:	strb	r1, [r0]
   11b18:	movw	r0, #0
   11b1c:	strb	r0, [fp, #-1]
   11b20:	b	11b48 <error@@Base+0x4bc>
   11b24:	b	11b28 <error@@Base+0x49c>
   11b28:	ldr	r0, [pc, #36]	; 11b54 <error@@Base+0x4c8>
   11b2c:	add	r0, pc, r0
   11b30:	ldr	r1, [fp, #-8]
   11b34:	bl	116ec <error@@Base+0x60>
   11b38:	ldr	r0, [pc, #24]	; 11b58 <error@@Base+0x4cc>
   11b3c:	add	r0, pc, r0
   11b40:	ldr	r1, [fp, #-8]
   11b44:	bl	116ec <error@@Base+0x60>
   11b48:	ldrb	r0, [fp, #-1]
   11b4c:	mov	sp, fp
   11b50:	pop	{fp, pc}
   11b54:	andeq	r0, r0, r5, asr #5
   11b58:	andeq	r0, r0, r4, asr #5
   11b5c:	push	{fp, lr}
   11b60:	mov	fp, sp
   11b64:	sub	sp, sp, #16
   11b68:	movw	r0, #1
   11b6c:	strh	r0, [fp, #-2]
   11b70:	ldr	r0, [pc, #88]	; 11bd0 <error@@Base+0x544>
   11b74:	add	r0, pc, r0
   11b78:	ldrsh	r1, [fp, #-2]
   11b7c:	ldrsh	r0, [r0]
   11b80:	cmp	r1, r0
   11b84:	bgt	11bc8 <error@@Base+0x53c>
   11b88:	ldrsh	r0, [fp, #-2]
   11b8c:	bl	112d8 <abort@plt+0xac8>
   11b90:	ldr	r1, [pc, #60]	; 11bd4 <error@@Base+0x548>
   11b94:	ldr	r1, [pc, r1]
   11b98:	str	r0, [sp, #8]
   11b9c:	ldr	r0, [sp, #8]
   11ba0:	blx	r1
   11ba4:	ldr	r1, [sp, #8]
   11ba8:	str	r0, [sp, #4]
   11bac:	mov	r0, r1
   11bb0:	bl	10768 <free@plt>
   11bb4:	ldrh	r0, [fp, #-2]
   11bb8:	movw	r1, #1
   11bbc:	add	r0, r0, r1
   11bc0:	strh	r0, [fp, #-2]
   11bc4:	b	11b70 <error@@Base+0x4e4>
   11bc8:	mov	sp, fp
   11bcc:	pop	{fp, pc}
   11bd0:	muleq	r1, lr, r5
   11bd4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11bd8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bdc:	mov	r7, r0
   11be0:	ldr	r6, [pc, #72]	; 11c30 <error@@Base+0x5a4>
   11be4:	ldr	r5, [pc, #72]	; 11c34 <error@@Base+0x5a8>
   11be8:	add	r6, pc, r6
   11bec:	add	r5, pc, r5
   11bf0:	sub	r6, r6, r5
   11bf4:	mov	r8, r1
   11bf8:	mov	r9, r2
   11bfc:	bl	10724 <calloc@plt-0x20>
   11c00:	asrs	r6, r6, #2
   11c04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c08:	mov	r4, #0
   11c0c:	add	r4, r4, #1
   11c10:	ldr	r3, [r5], #4
   11c14:	mov	r2, r9
   11c18:	mov	r1, r8
   11c1c:	mov	r0, r7
   11c20:	blx	r3
   11c24:	cmp	r6, r4
   11c28:	bne	11c0c <error@@Base+0x580>
   11c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c30:	andeq	r0, r1, ip, lsl #6
   11c34:	andeq	r0, r1, r4, lsl #6
   11c38:	bx	lr
   11c3c:	mov	r2, r1
   11c40:	mov	r1, r0
   11c44:	mov	r0, #3
   11c48:	b	1078c <__xstat@plt>

Disassembly of section .fini:

00011c4c <.fini>:
   11c4c:	push	{r3, lr}
   11c50:	pop	{r3, pc}
