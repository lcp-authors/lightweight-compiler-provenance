
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

00010724 <.init>:
   10724:	push	{r3, lr}
   10728:	bl	10858 <abort@plt+0x48>
   1072c:	pop	{r3, pc}

Disassembly of section .plt:

00010730 <calloc@plt-0x14>:
   10730:	push	{lr}		; (str lr, [sp, #-4]!)
   10734:	ldr	lr, [pc, #4]	; 10740 <calloc@plt-0x4>
   10738:	add	lr, pc, lr
   1073c:	ldr	pc, [lr, #8]!
   10740:	andeq	r1, r1, r0, asr #17

00010744 <calloc@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010750 <strcmp@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2232]!	; 0x8b8

0001075c <fopen@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2224]!	; 0x8b0

00010768 <free@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2216]!	; 0x8a8

00010774 <fgets@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2208]!	; 0x8a0

00010780 <strdup@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2200]!	; 0x898

0001078c <__xstat@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2192]!	; 0x890

00010798 <__libc_start_main@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2184]!	; 0x888

000107a4 <__sysv_signal@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2176]!	; 0x880

000107b0 <__gmon_start__@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2168]!	; 0x878

000107bc <exit@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2160]!	; 0x870

000107c8 <strlen@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2152]!	; 0x868

000107d4 <fprintf@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2144]!	; 0x860

000107e0 <__isoc99_sscanf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2136]!	; 0x858

000107ec <fclose@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2128]!	; 0x850

000107f8 <sprintf@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2120]!	; 0x848

00010804 <strncmp@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2112]!	; 0x840

00010810 <abort@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2104]!	; 0x838

Disassembly of section .text:

0001081c <error@@Base-0xe80>:
   1081c:	mov	fp, #0
   10820:	mov	lr, #0
   10824:	pop	{r1}		; (ldr r1, [sp], #4)
   10828:	mov	r2, sp
   1082c:	push	{r2}		; (str r2, [sp, #-4]!)
   10830:	push	{r0}		; (str r0, [sp, #-4]!)
   10834:	ldr	ip, [pc, #16]	; 1084c <abort@plt+0x3c>
   10838:	push	{ip}		; (str ip, [sp, #-4]!)
   1083c:	ldr	r0, [pc, #12]	; 10850 <abort@plt+0x40>
   10840:	ldr	r3, [pc, #12]	; 10854 <abort@plt+0x44>
   10844:	bl	10798 <__libc_start_main@plt>
   10848:	bl	10810 <abort@plt>
   1084c:	andeq	r1, r1, r4, asr ip
   10850:	andeq	r0, r1, ip, lsl #18
   10854:	strdeq	r1, [r1], -r4
   10858:	ldr	r3, [pc, #20]	; 10874 <abort@plt+0x64>
   1085c:	ldr	r2, [pc, #20]	; 10878 <abort@plt+0x68>
   10860:	add	r3, pc, r3
   10864:	ldr	r2, [r3, r2]
   10868:	cmp	r2, #0
   1086c:	bxeq	lr
   10870:	b	107b0 <__gmon_start__@plt>
   10874:	muleq	r1, r8, r7
   10878:	andeq	r0, r0, ip, ror r0
   1087c:	ldr	r0, [pc, #24]	; 1089c <abort@plt+0x8c>
   10880:	ldr	r3, [pc, #24]	; 108a0 <abort@plt+0x90>
   10884:	cmp	r3, r0
   10888:	bxeq	lr
   1088c:	ldr	r3, [pc, #16]	; 108a4 <abort@plt+0x94>
   10890:	cmp	r3, #0
   10894:	bxeq	lr
   10898:	bx	r3
   1089c:	strheq	r2, [r2], -r4
   108a0:	strheq	r2, [r2], -r4
   108a4:	andeq	r0, r0, r0
   108a8:	ldr	r0, [pc, #36]	; 108d4 <abort@plt+0xc4>
   108ac:	ldr	r1, [pc, #36]	; 108d8 <abort@plt+0xc8>
   108b0:	sub	r1, r1, r0
   108b4:	asr	r1, r1, #2
   108b8:	add	r1, r1, r1, lsr #31
   108bc:	asrs	r1, r1, #1
   108c0:	bxeq	lr
   108c4:	ldr	r3, [pc, #16]	; 108dc <abort@plt+0xcc>
   108c8:	cmp	r3, #0
   108cc:	bxeq	lr
   108d0:	bx	r3
   108d4:	strheq	r2, [r2], -r4
   108d8:	strheq	r2, [r2], -r4
   108dc:	andeq	r0, r0, r0
   108e0:	push	{r4, lr}
   108e4:	ldr	r4, [pc, #24]	; 10904 <abort@plt+0xf4>
   108e8:	ldrb	r3, [r4]
   108ec:	cmp	r3, #0
   108f0:	popne	{r4, pc}
   108f4:	bl	1087c <abort@plt+0x6c>
   108f8:	mov	r3, #1
   108fc:	strb	r3, [r4]
   10900:	pop	{r4, pc}
   10904:	strheq	r2, [r2], -r4
   10908:	b	108a8 <abort@plt+0x98>
   1090c:	push	{fp, lr}
   10910:	mov	fp, sp
   10914:	sub	sp, sp, #32
   10918:	ldr	r2, [pc, #216]	; 109f8 <abort@plt+0x1e8>
   1091c:	add	r2, pc, r2
   10920:	ldr	r3, [pc, #212]	; 109fc <abort@plt+0x1ec>
   10924:	ldr	r3, [pc, r3]
   10928:	movw	ip, #0
   1092c:	str	ip, [fp, #-4]
   10930:	str	r0, [fp, #-8]
   10934:	str	r1, [fp, #-12]
   10938:	ldr	r1, [fp, #-12]
   1093c:	sub	r0, fp, #8
   10940:	str	r3, [sp, #12]
   10944:	mov	r3, ip
   10948:	ldr	ip, [sp, #12]
   1094c:	blx	ip
   10950:	ldr	r0, [fp, #-8]
   10954:	cmp	r0, #2
   10958:	bge	10970 <abort@plt+0x160>
   1095c:	ldr	r0, [pc, #176]	; 10a14 <abort@plt+0x204>
   10960:	add	r0, pc, r0
   10964:	ldr	r1, [pc, #172]	; 10a18 <abort@plt+0x208>
   10968:	ldr	r1, [pc, r1]
   1096c:	blx	r1
   10970:	movw	r0, #0
   10974:	str	r0, [sp, #16]
   10978:	ldr	r0, [sp, #16]
   1097c:	ldr	r1, [fp, #-8]
   10980:	cmp	r0, r1
   10984:	bge	109c8 <abort@plt+0x1b8>
   10988:	ldr	r0, [pc, #124]	; 10a0c <abort@plt+0x1fc>
   1098c:	ldr	r0, [pc, r0]
   10990:	ldr	r1, [pc, #120]	; 10a10 <abort@plt+0x200>
   10994:	ldr	r1, [pc, r1]
   10998:	ldr	r2, [fp, #-12]
   1099c:	ldr	r3, [sp, #16]
   109a0:	add	r2, r2, r3, lsl #2
   109a4:	ldr	r2, [r2]
   109a8:	str	r1, [sp, #8]
   109ac:	mov	r1, r2
   109b0:	ldr	r2, [sp, #8]
   109b4:	blx	r2
   109b8:	ldr	r0, [sp, #16]
   109bc:	add	r0, r0, #1
   109c0:	str	r0, [sp, #16]
   109c4:	b	10978 <abort@plt+0x168>
   109c8:	ldr	r0, [pc, #52]	; 10a04 <abort@plt+0x1f4>
   109cc:	ldr	r0, [pc, r0]
   109d0:	ldr	r1, [pc, #48]	; 10a08 <abort@plt+0x1f8>
   109d4:	ldr	r1, [pc, r1]
   109d8:	movw	r2, #0
   109dc:	str	r1, [sp, #4]
   109e0:	mov	r1, r2
   109e4:	ldr	r2, [sp, #4]
   109e8:	blx	r2
   109ec:	ldr	r0, [pc, #12]	; 10a00 <abort@plt+0x1f0>
   109f0:	ldr	r0, [pc, r0]
   109f4:	blx	r0
   109f8:	andeq	r1, r0, r0, asr r3
   109fc:	andeq	r1, r1, r8, asr #14
   10a00:	muleq	r1, r8, r6
   10a04:	andeq	r1, r1, r0, asr #13
   10a08:	muleq	r1, ip, r6
   10a0c:	andeq	r1, r1, r0, lsl #14
   10a10:	andeq	r1, r1, ip, asr #13
   10a14:	andeq	r1, r0, sp, lsr r3
   10a18:	andeq	r1, r1, ip, ror #13
   10a1c:	push	{fp, lr}
   10a20:	mov	fp, sp
   10a24:	sub	sp, sp, #40	; 0x28
   10a28:	ldr	r2, [pc, #488]	; 10c18 <abort@plt+0x408>
   10a2c:	add	r2, pc, r2
   10a30:	ldr	r3, [pc, #484]	; 10c1c <abort@plt+0x40c>
   10a34:	ldr	r3, [pc, r3]
   10a38:	str	r0, [fp, #-4]
   10a3c:	str	r1, [fp, #-8]
   10a40:	ldr	r0, [fp, #-8]
   10a44:	mov	r1, r2
   10a48:	blx	r3
   10a4c:	str	r0, [fp, #-12]
   10a50:	ldr	r0, [fp, #-12]
   10a54:	bl	10c40 <abort@plt+0x430>
   10a58:	and	r0, r0, #255	; 0xff
   10a5c:	cmp	r0, #0
   10a60:	beq	10ba4 <abort@plt+0x394>
   10a64:	ldr	r0, [pc, #436]	; 10c20 <abort@plt+0x410>
   10a68:	add	r0, pc, r0
   10a6c:	ldr	r1, [pc, #432]	; 10c24 <abort@plt+0x414>
   10a70:	add	r1, pc, r1
   10a74:	movw	r2, #42	; 0x2a
   10a78:	bl	10804 <strncmp@plt>
   10a7c:	cmp	r0, #0
   10a80:	bne	10ba4 <abort@plt+0x394>
   10a84:	ldr	r0, [fp, #-12]
   10a88:	bl	10c40 <abort@plt+0x430>
   10a8c:	and	r0, r0, #255	; 0xff
   10a90:	cmp	r0, #0
   10a94:	beq	10ba4 <abort@plt+0x394>
   10a98:	ldr	r0, [pc, #408]	; 10c38 <abort@plt+0x428>
   10a9c:	add	r0, pc, r0
   10aa0:	ldr	r1, [pc, #404]	; 10c3c <abort@plt+0x42c>
   10aa4:	add	r1, pc, r1
   10aa8:	bl	10750 <strcmp@plt>
   10aac:	cmp	r0, #0
   10ab0:	bne	10ba4 <abort@plt+0x394>
   10ab4:	ldr	r0, [fp, #-12]
   10ab8:	ldr	r2, [fp, #-4]
   10abc:	add	r1, sp, #20
   10ac0:	bl	10c94 <abort@plt+0x484>
   10ac4:	and	r0, r0, #255	; 0xff
   10ac8:	cmp	r0, #0
   10acc:	beq	10ba4 <abort@plt+0x394>
   10ad0:	ldr	r0, [fp, #-12]
   10ad4:	ldr	r1, [fp, #-4]
   10ad8:	add	r2, r1, #4
   10adc:	add	r1, sp, #20
   10ae0:	bl	10c94 <abort@plt+0x484>
   10ae4:	and	r0, r0, #255	; 0xff
   10ae8:	cmp	r0, #0
   10aec:	beq	10ba4 <abort@plt+0x394>
   10af0:	ldr	r0, [fp, #-12]
   10af4:	ldr	r1, [fp, #-4]
   10af8:	add	r2, r1, #8
   10afc:	sub	r1, fp, #16
   10b00:	bl	10c94 <abort@plt+0x484>
   10b04:	and	r0, r0, #255	; 0xff
   10b08:	cmp	r0, #0
   10b0c:	beq	10ba4 <abort@plt+0x394>
   10b10:	ldr	r0, [fp, #-16]
   10b14:	cmp	r0, #0
   10b18:	ble	10ba0 <abort@plt+0x390>
   10b1c:	ldr	r0, [fp, #-12]
   10b20:	bl	10c40 <abort@plt+0x430>
   10b24:	and	r0, r0, #255	; 0xff
   10b28:	cmp	r0, #0
   10b2c:	beq	10ba0 <abort@plt+0x390>
   10b30:	ldr	r0, [fp, #-12]
   10b34:	bl	10c40 <abort@plt+0x430>
   10b38:	and	r0, r0, #255	; 0xff
   10b3c:	cmp	r0, #0
   10b40:	beq	10ba0 <abort@plt+0x390>
   10b44:	ldr	r0, [fp, #-12]
   10b48:	bl	10c40 <abort@plt+0x430>
   10b4c:	and	r0, r0, #255	; 0xff
   10b50:	cmp	r0, #0
   10b54:	beq	10ba0 <abort@plt+0x390>
   10b58:	b	10b5c <abort@plt+0x34c>
   10b5c:	ldr	r0, [fp, #-12]
   10b60:	add	r1, sp, #20
   10b64:	add	r2, sp, #16
   10b68:	bl	10d20 <abort@plt+0x510>
   10b6c:	sxtb	r0, r0
   10b70:	cmp	r0, #0
   10b74:	beq	10b9c <abort@plt+0x38c>
   10b78:	ldr	r0, [sp, #20]
   10b7c:	ldr	r1, [fp, #-4]
   10b80:	add	r1, r1, #12
   10b84:	ldr	r2, [sp, #16]
   10b88:	add	r1, r1, r2, lsl #2
   10b8c:	ldr	r2, [r1]
   10b90:	add	r0, r2, r0
   10b94:	str	r0, [r1]
   10b98:	b	10b5c <abort@plt+0x34c>
   10b9c:	b	10ba0 <abort@plt+0x390>
   10ba0:	b	10bf4 <abort@plt+0x3e4>
   10ba4:	ldr	r0, [fp, #-8]
   10ba8:	movw	r1, #0
   10bac:	cmp	r0, r1
   10bb0:	beq	10bc0 <abort@plt+0x3b0>
   10bb4:	ldr	r0, [fp, #-8]
   10bb8:	str	r0, [sp, #12]
   10bbc:	b	10bd0 <abort@plt+0x3c0>
   10bc0:	ldr	r0, [pc, #96]	; 10c28 <abort@plt+0x418>
   10bc4:	add	r0, pc, r0
   10bc8:	str	r0, [sp, #12]
   10bcc:	b	10bd0 <abort@plt+0x3c0>
   10bd0:	ldr	r0, [sp, #12]
   10bd4:	ldr	r1, [pc, #80]	; 10c2c <abort@plt+0x41c>
   10bd8:	add	r1, pc, r1
   10bdc:	ldr	r2, [pc, #76]	; 10c30 <abort@plt+0x420>
   10be0:	ldr	r2, [pc, r2]
   10be4:	str	r0, [sp, #8]
   10be8:	mov	r0, r1
   10bec:	ldr	r1, [sp, #8]
   10bf0:	blx	r2
   10bf4:	ldr	r0, [pc, #56]	; 10c34 <abort@plt+0x424>
   10bf8:	ldr	r0, [pc, r0]
   10bfc:	ldr	r1, [fp, #-12]
   10c00:	str	r0, [sp, #4]
   10c04:	mov	r0, r1
   10c08:	ldr	r1, [sp, #4]
   10c0c:	blx	r1
   10c10:	mov	sp, fp
   10c14:	pop	{fp, pc}
   10c18:	andeq	r1, r0, r8, lsl #5
   10c1c:	andeq	r1, r1, r8, lsr #12
   10c20:	andeq	r1, r1, r5, asr #12
   10c24:	andeq	r1, r0, r6, asr #4
   10c28:	andeq	r1, r0, lr, asr r1
   10c2c:	andeq	r1, r0, r8, lsr r1
   10c30:			; <UNDEFINED> instruction: 0x000114b8
   10c34:	andeq	r1, r1, r4, asr r4
   10c38:	andeq	r1, r1, r1, lsl r6
   10c3c:	andeq	r1, r0, pc, lsr r2
   10c40:	push	{fp, lr}
   10c44:	mov	fp, sp
   10c48:	sub	sp, sp, #8
   10c4c:	ldr	r1, [pc, #60]	; 10c90 <abort@plt+0x480>
   10c50:	add	r1, pc, r1
   10c54:	str	r0, [sp, #4]
   10c58:	ldr	r2, [sp, #4]
   10c5c:	mov	r0, r1
   10c60:	movw	r1, #99	; 0x63
   10c64:	bl	10774 <fgets@plt>
   10c68:	movw	r1, #0
   10c6c:	cmp	r0, r1
   10c70:	movw	r0, #0
   10c74:	movne	r0, #1
   10c78:	tst	r0, #1
   10c7c:	movw	r0, #1
   10c80:	moveq	r0, #0
   10c84:	and	r0, r0, #255	; 0xff
   10c88:	mov	sp, fp
   10c8c:	pop	{fp, pc}
   10c90:	andeq	r1, r1, sp, asr r4
   10c94:	push	{fp, lr}
   10c98:	mov	fp, sp
   10c9c:	sub	sp, sp, #16
   10ca0:	str	r0, [sp, #8]
   10ca4:	str	r1, [sp, #4]
   10ca8:	str	r2, [sp]
   10cac:	ldr	r0, [sp, #8]
   10cb0:	bl	10c40 <abort@plt+0x430>
   10cb4:	and	r0, r0, #255	; 0xff
   10cb8:	cmp	r0, #0
   10cbc:	beq	10d04 <abort@plt+0x4f4>
   10cc0:	ldr	r0, [pc, #80]	; 10d18 <abort@plt+0x508>
   10cc4:	add	r0, pc, r0
   10cc8:	ldr	r1, [pc, #76]	; 10d1c <abort@plt+0x50c>
   10ccc:	add	r1, pc, r1
   10cd0:	ldr	r2, [sp, #4]
   10cd4:	bl	107e0 <__isoc99_sscanf@plt>
   10cd8:	cmp	r0, #1
   10cdc:	bne	10d04 <abort@plt+0x4f4>
   10ce0:	ldr	r0, [sp, #4]
   10ce4:	ldr	r0, [r0]
   10ce8:	ldr	r1, [sp]
   10cec:	ldr	r2, [r1]
   10cf0:	add	r0, r2, r0
   10cf4:	str	r0, [r1]
   10cf8:	movw	r0, #1
   10cfc:	strb	r0, [fp, #-1]
   10d00:	b	10d0c <abort@plt+0x4fc>
   10d04:	movw	r0, #0
   10d08:	strb	r0, [fp, #-1]
   10d0c:	ldrb	r0, [fp, #-1]
   10d10:	mov	sp, fp
   10d14:	pop	{fp, pc}
   10d18:	andeq	r1, r1, r9, ror #7
   10d1c:	muleq	r0, ip, r0
   10d20:	push	{fp, lr}
   10d24:	mov	fp, sp
   10d28:	sub	sp, sp, #16
   10d2c:	str	r0, [fp, #-4]
   10d30:	str	r1, [sp, #8]
   10d34:	str	r2, [sp, #4]
   10d38:	ldr	r0, [fp, #-4]
   10d3c:	bl	10c40 <abort@plt+0x430>
   10d40:	and	r0, r0, #255	; 0xff
   10d44:	cmp	r0, #0
   10d48:	movw	r0, #0
   10d4c:	str	r0, [sp]
   10d50:	beq	10d80 <abort@plt+0x570>
   10d54:	ldr	r0, [pc, #64]	; 10d9c <abort@plt+0x58c>
   10d58:	add	r0, pc, r0
   10d5c:	ldr	r1, [pc, #60]	; 10da0 <abort@plt+0x590>
   10d60:	add	r1, pc, r1
   10d64:	ldr	r2, [sp, #8]
   10d68:	ldr	r3, [sp, #4]
   10d6c:	bl	107e0 <__isoc99_sscanf@plt>
   10d70:	cmp	r0, #2
   10d74:	movw	r0, #0
   10d78:	moveq	r0, #1
   10d7c:	str	r0, [sp]
   10d80:	ldr	r0, [sp]
   10d84:	tst	r0, #1
   10d88:	movw	r0, #1
   10d8c:	moveq	r0, #0
   10d90:	and	r0, r0, #255	; 0xff
   10d94:	mov	sp, fp
   10d98:	pop	{fp, pc}
   10d9c:	andeq	r1, r1, r5, asr r3
   10da0:	andeq	r1, r0, r4
   10da4:	push	{fp, lr}
   10da8:	mov	fp, sp
   10dac:	sub	sp, sp, #32
   10db0:	ldr	r2, [pc, #348]	; 10f14 <abort@plt+0x704>
   10db4:	add	r2, pc, r2
   10db8:	ldr	r3, [pc, #344]	; 10f18 <abort@plt+0x708>
   10dbc:	ldr	r3, [pc, r3]
   10dc0:	str	r0, [fp, #-4]
   10dc4:	str	r1, [fp, #-8]
   10dc8:	ldr	r0, [fp, #-8]
   10dcc:	mov	r1, r2
   10dd0:	blx	r3
   10dd4:	ldr	r1, [pc, #300]	; 10f08 <abort@plt+0x6f8>
   10dd8:	add	r1, pc, r1
   10ddc:	ldr	r2, [pc, #296]	; 10f0c <abort@plt+0x6fc>
   10de0:	add	r2, pc, r2
   10de4:	ldr	r3, [pc, #292]	; 10f10 <abort@plt+0x700>
   10de8:	add	r3, pc, r3
   10dec:	str	r0, [fp, #-12]
   10df0:	ldr	r0, [fp, #-12]
   10df4:	bl	107d4 <fprintf@plt>
   10df8:	ldr	r1, [pc, #260]	; 10f04 <abort@plt+0x6f4>
   10dfc:	add	r2, pc, r1
   10e00:	ldr	r1, [fp, #-12]
   10e04:	ldr	r3, [fp, #-4]
   10e08:	ldr	r3, [r3]
   10e0c:	str	r0, [sp, #12]
   10e10:	mov	r0, r1
   10e14:	mov	r1, r3
   10e18:	bl	10f24 <abort@plt+0x714>
   10e1c:	ldr	r0, [pc, #220]	; 10f00 <abort@plt+0x6f0>
   10e20:	add	r2, pc, r0
   10e24:	ldr	r0, [fp, #-12]
   10e28:	ldr	r1, [fp, #-4]
   10e2c:	ldr	r1, [r1, #4]
   10e30:	bl	10f24 <abort@plt+0x714>
   10e34:	ldr	r0, [pc, #192]	; 10efc <abort@plt+0x6ec>
   10e38:	add	r2, pc, r0
   10e3c:	ldr	r0, [fp, #-12]
   10e40:	ldr	r1, [fp, #-4]
   10e44:	ldr	r1, [r1, #8]
   10e48:	bl	10f24 <abort@plt+0x714>
   10e4c:	ldr	r0, [fp, #-4]
   10e50:	ldr	r0, [r0, #8]
   10e54:	cmp	r0, #0
   10e58:	ble	10ed8 <abort@plt+0x6c8>
   10e5c:	ldr	r0, [pc, #184]	; 10f1c <abort@plt+0x70c>
   10e60:	add	r1, pc, r0
   10e64:	ldr	r0, [fp, #-12]
   10e68:	bl	107d4 <fprintf@plt>
   10e6c:	movw	r1, #1
   10e70:	str	r1, [sp, #16]
   10e74:	str	r0, [sp, #8]
   10e78:	ldr	r0, [sp, #16]
   10e7c:	cmp	r0, #100	; 0x64
   10e80:	bgt	10ed4 <abort@plt+0x6c4>
   10e84:	ldr	r0, [fp, #-4]
   10e88:	add	r0, r0, #12
   10e8c:	ldr	r1, [sp, #16]
   10e90:	add	r0, r0, r1, lsl #2
   10e94:	ldr	r0, [r0]
   10e98:	cmp	r0, #0
   10e9c:	ble	10ec0 <abort@plt+0x6b0>
   10ea0:	ldr	r0, [fp, #-12]
   10ea4:	ldr	r1, [fp, #-4]
   10ea8:	add	r1, r1, #12
   10eac:	ldr	r2, [sp, #16]
   10eb0:	add	r1, r1, r2, lsl #2
   10eb4:	ldr	r1, [r1]
   10eb8:	ldr	r2, [sp, #16]
   10ebc:	bl	10f70 <abort@plt+0x760>
   10ec0:	b	10ec4 <abort@plt+0x6b4>
   10ec4:	ldr	r0, [sp, #16]
   10ec8:	add	r0, r0, #1
   10ecc:	str	r0, [sp, #16]
   10ed0:	b	10e78 <abort@plt+0x668>
   10ed4:	b	10ed8 <abort@plt+0x6c8>
   10ed8:	ldr	r0, [pc, #64]	; 10f20 <abort@plt+0x710>
   10edc:	ldr	r0, [pc, r0]
   10ee0:	ldr	r1, [fp, #-12]
   10ee4:	str	r0, [sp, #4]
   10ee8:	mov	r0, r1
   10eec:	ldr	r1, [sp, #4]
   10ef0:	blx	r1
   10ef4:	mov	sp, fp
   10ef8:	pop	{fp, pc}
   10efc:	andeq	r0, r0, ip, lsl #30
   10f00:	andeq	r0, r0, sl, lsl pc
   10f04:	andeq	r0, r0, r3, lsr pc
   10f08:	andeq	r0, r0, r2, asr pc
   10f0c:	ldrdeq	r0, [r0], -r6
   10f10:	strdeq	r0, [r0], -fp
   10f14:	andeq	r0, r0, r4, ror pc
   10f18:	andeq	r1, r1, r0, lsr #5
   10f1c:	andeq	r0, r0, sl, ror #29
   10f20:	andeq	r1, r1, r0, ror r1
   10f24:	push	{fp, lr}
   10f28:	mov	fp, sp
   10f2c:	sub	sp, sp, #24
   10f30:	ldr	r3, [pc, #52]	; 10f6c <abort@plt+0x75c>
   10f34:	add	r3, pc, r3
   10f38:	str	r0, [fp, #-4]
   10f3c:	str	r1, [fp, #-8]
   10f40:	str	r2, [sp, #12]
   10f44:	ldr	r0, [fp, #-4]
   10f48:	ldr	r2, [fp, #-8]
   10f4c:	ldr	r1, [sp, #12]
   10f50:	str	r1, [sp, #8]
   10f54:	mov	r1, r3
   10f58:	ldr	r3, [sp, #8]
   10f5c:	bl	107d4 <fprintf@plt>
   10f60:	str	r0, [sp, #4]
   10f64:	mov	sp, fp
   10f68:	pop	{fp, pc}
   10f6c:	andeq	r0, r0, r8, lsr lr
   10f70:	push	{fp, lr}
   10f74:	mov	fp, sp
   10f78:	sub	sp, sp, #24
   10f7c:	ldr	r3, [pc, #52]	; 10fb8 <abort@plt+0x7a8>
   10f80:	add	r3, pc, r3
   10f84:	str	r0, [fp, #-4]
   10f88:	str	r1, [fp, #-8]
   10f8c:	str	r2, [sp, #12]
   10f90:	ldr	r0, [fp, #-4]
   10f94:	ldr	r2, [fp, #-8]
   10f98:	ldr	r1, [sp, #12]
   10f9c:	str	r1, [sp, #8]
   10fa0:	mov	r1, r3
   10fa4:	ldr	r3, [sp, #8]
   10fa8:	bl	107d4 <fprintf@plt>
   10fac:	str	r0, [sp, #4]
   10fb0:	mov	sp, fp
   10fb4:	pop	{fp, pc}
   10fb8:	strdeq	r0, [r0], -r7
   10fbc:	push	{fp, lr}
   10fc0:	mov	fp, sp
   10fc4:	sub	sp, sp, #16
   10fc8:	str	r0, [fp, #-4]
   10fcc:	str	r1, [sp, #8]
   10fd0:	ldr	r0, [fp, #-4]
   10fd4:	ldr	r1, [sp, #8]
   10fd8:	bl	10744 <calloc@plt>
   10fdc:	str	r0, [sp, #4]
   10fe0:	ldr	r0, [sp, #4]
   10fe4:	movw	r1, #0
   10fe8:	cmp	r0, r1
   10fec:	bne	10ffc <abort@plt+0x7ec>
   10ff0:	ldr	r0, [pc, #16]	; 11008 <abort@plt+0x7f8>
   10ff4:	add	r0, pc, r0
   10ff8:	bl	1169c <error@@Base>
   10ffc:	ldr	r0, [sp, #4]
   11000:	mov	sp, fp
   11004:	pop	{fp, pc}
   11008:	andeq	r0, r0, lr, lsl #27
   1100c:	sub	sp, sp, #20
   11010:	str	r0, [sp, #12]
   11014:	str	r1, [sp, #8]
   11018:	movw	r0, #0
   1101c:	str	r0, [sp, #4]
   11020:	ldr	r0, [sp, #12]
   11024:	ldr	r1, [sp, #4]
   11028:	add	r0, r0, r1
   1102c:	ldrb	r0, [r0]
   11030:	cmp	r0, #0
   11034:	movw	r0, #0
   11038:	str	r0, [sp]
   1103c:	beq	11070 <abort@plt+0x860>
   11040:	ldr	r0, [sp, #12]
   11044:	ldr	r1, [sp, #4]
   11048:	add	r0, r0, r1
   1104c:	ldrb	r0, [r0]
   11050:	ldr	r1, [sp, #8]
   11054:	ldr	r2, [sp, #4]
   11058:	add	r1, r1, r2
   1105c:	ldrb	r1, [r1]
   11060:	cmp	r0, r1
   11064:	movw	r0, #0
   11068:	moveq	r0, #1
   1106c:	str	r0, [sp]
   11070:	ldr	r0, [sp]
   11074:	tst	r0, #1
   11078:	beq	11090 <abort@plt+0x880>
   1107c:	b	11080 <abort@plt+0x870>
   11080:	ldr	r0, [sp, #4]
   11084:	add	r0, r0, #1
   11088:	str	r0, [sp, #4]
   1108c:	b	11020 <abort@plt+0x810>
   11090:	ldr	r0, [sp, #12]
   11094:	ldr	r1, [sp, #4]
   11098:	add	r0, r0, r1
   1109c:	ldrb	r0, [r0]
   110a0:	cmp	r0, #0
   110a4:	bne	110c0 <abort@plt+0x8b0>
   110a8:	ldr	r0, [sp, #8]
   110ac:	ldr	r1, [sp, #4]
   110b0:	add	r0, r0, r1
   110b4:	ldrb	r0, [r0]
   110b8:	cmp	r0, #0
   110bc:	beq	11100 <abort@plt+0x8f0>
   110c0:	ldr	r0, [sp, #12]
   110c4:	ldr	r1, [sp, #4]
   110c8:	add	r0, r0, r1
   110cc:	ldrb	r0, [r0]
   110d0:	ldr	r1, [sp, #8]
   110d4:	ldr	r2, [sp, #4]
   110d8:	add	r1, r1, r2
   110dc:	ldrb	r1, [r1]
   110e0:	cmp	r0, r1
   110e4:	movw	r0, #0
   110e8:	movlt	r0, #1
   110ec:	tst	r0, #1
   110f0:	mvn	r0, #0
   110f4:	moveq	r0, #1
   110f8:	str	r0, [sp, #16]
   110fc:	b	11108 <abort@plt+0x8f8>
   11100:	movw	r0, #0
   11104:	str	r0, [sp, #16]
   11108:	ldr	r0, [sp, #16]
   1110c:	add	sp, sp, #20
   11110:	bx	lr
   11114:	push	{fp, lr}
   11118:	mov	fp, sp
   1111c:	sub	sp, sp, #24
   11120:	str	r0, [fp, #-8]
   11124:	str	r1, [sp, #12]
   11128:	ldr	r0, [fp, #-8]
   1112c:	movw	r1, #0
   11130:	cmp	r0, r1
   11134:	bne	11178 <abort@plt+0x968>
   11138:	ldr	r0, [sp, #12]
   1113c:	ldrb	r0, [r0]
   11140:	cmp	r0, #114	; 0x72
   11144:	bne	1115c <abort@plt+0x94c>
   11148:	ldr	r0, [pc, #148]	; 111e4 <abort@plt+0x9d4>
   1114c:	ldr	r0, [pc, r0]
   11150:	ldr	r0, [r0]
   11154:	str	r0, [sp, #4]
   11158:	b	1116c <abort@plt+0x95c>
   1115c:	ldr	r0, [pc, #124]	; 111e0 <abort@plt+0x9d0>
   11160:	ldr	r0, [pc, r0]
   11164:	ldr	r0, [r0]
   11168:	str	r0, [sp, #4]
   1116c:	ldr	r0, [sp, #4]
   11170:	str	r0, [fp, #-4]
   11174:	b	111d4 <abort@plt+0x9c4>
   11178:	ldr	r0, [fp, #-8]
   1117c:	ldr	r1, [sp, #12]
   11180:	bl	1075c <fopen@plt>
   11184:	str	r0, [sp, #8]
   11188:	ldr	r0, [sp, #8]
   1118c:	movw	r1, #0
   11190:	cmp	r0, r1
   11194:	beq	111a4 <abort@plt+0x994>
   11198:	ldr	r0, [sp, #8]
   1119c:	str	r0, [fp, #-4]
   111a0:	b	111d4 <abort@plt+0x9c4>
   111a4:	ldr	r0, [sp, #12]
   111a8:	ldrb	r0, [r0]
   111ac:	cmp	r0, #119	; 0x77
   111b0:	bne	111c4 <abort@plt+0x9b4>
   111b4:	ldr	r0, [pc, #48]	; 111ec <abort@plt+0x9dc>
   111b8:	add	r0, pc, r0
   111bc:	ldr	r1, [fp, #-8]
   111c0:	bl	116fc <error@@Base+0x60>
   111c4:	ldr	r0, [pc, #28]	; 111e8 <abort@plt+0x9d8>
   111c8:	add	r0, pc, r0
   111cc:	ldr	r1, [fp, #-8]
   111d0:	bl	116fc <error@@Base+0x60>
   111d4:	ldr	r0, [fp, #-4]
   111d8:	mov	sp, fp
   111dc:	pop	{fp, pc}
   111e0:	andeq	r0, r1, r0, lsr pc
   111e4:	andeq	r0, r1, r8, lsr pc
   111e8:	andeq	r0, r0, sl, ror #23
   111ec:	andeq	r0, r0, r4, ror #23
   111f0:	push	{fp, lr}
   111f4:	mov	fp, sp
   111f8:	sub	sp, sp, #8
   111fc:	ldr	r1, [pc, #64]	; 11244 <abort@plt+0xa34>
   11200:	ldr	r1, [pc, r1]
   11204:	str	r0, [sp, #4]
   11208:	ldr	r0, [sp, #4]
   1120c:	ldr	r1, [r1]
   11210:	cmp	r0, r1
   11214:	beq	1123c <abort@plt+0xa2c>
   11218:	ldr	r0, [pc, #40]	; 11248 <abort@plt+0xa38>
   1121c:	ldr	r0, [pc, r0]
   11220:	ldr	r1, [sp, #4]
   11224:	ldr	r0, [r0]
   11228:	cmp	r1, r0
   1122c:	beq	1123c <abort@plt+0xa2c>
   11230:	ldr	r0, [sp, #4]
   11234:	bl	107ec <fclose@plt>
   11238:	str	r0, [sp]
   1123c:	mov	sp, fp
   11240:	pop	{fp, pc}
   11244:	andeq	r0, r1, r4, lsl #29
   11248:	andeq	r0, r1, r4, ror lr
   1124c:	push	{fp, lr}
   11250:	mov	fp, sp
   11254:	sub	sp, sp, #96	; 0x60
   11258:	str	r0, [fp, #-4]
   1125c:	ldr	r0, [fp, #-4]
   11260:	mov	r1, sp
   11264:	bl	11c58 <error@@Base+0x5bc>
   11268:	cmp	r0, #0
   1126c:	movw	r0, #0
   11270:	moveq	r0, #1
   11274:	tst	r0, #1
   11278:	movw	r0, #1
   1127c:	moveq	r0, #0
   11280:	and	r0, r0, #255	; 0xff
   11284:	mov	sp, fp
   11288:	pop	{fp, pc}
   1128c:	push	{fp, lr}
   11290:	mov	fp, sp
   11294:	sub	sp, sp, #8
   11298:	ldr	r0, [pc, #68]	; 112e4 <abort@plt+0xad4>
   1129c:	add	r0, pc, r0
   112a0:	ldrh	r1, [r0]
   112a4:	movw	r2, #1
   112a8:	add	r1, r1, r2
   112ac:	strh	r1, [r0]
   112b0:	sxth	r0, r1
   112b4:	bl	112e8 <abort@plt+0xad8>
   112b8:	ldr	r1, [pc, #32]	; 112e0 <abort@plt+0xad0>
   112bc:	ldr	r1, [pc, r1]
   112c0:	str	r0, [sp, #4]
   112c4:	ldr	r0, [sp, #4]
   112c8:	blx	r1
   112cc:	ldr	r1, [sp, #4]
   112d0:	str	r0, [sp]
   112d4:	mov	r0, r1
   112d8:	mov	sp, fp
   112dc:	pop	{fp, pc}
   112e0:	andeq	r0, r1, r8, lsr #27
   112e4:	andeq	r0, r1, r6, ror lr
   112e8:	push	{fp, lr}
   112ec:	mov	fp, sp
   112f0:	sub	sp, sp, #128	; 0x80
   112f4:	ldr	r1, [pc, #112]	; 1136c <abort@plt+0xb5c>
   112f8:	ldr	r1, [pc, r1]
   112fc:	ldr	r2, [pc, #108]	; 11370 <abort@plt+0xb60>
   11300:	ldr	r2, [pc, r2]
   11304:	add	r3, sp, #26
   11308:	strh	r0, [fp, #-2]
   1130c:	ldr	r2, [r2]
   11310:	str	r3, [sp, #20]
   11314:	str	r2, [sp, #16]
   11318:	blx	r1
   1131c:	ldr	r1, [pc, #68]	; 11368 <abort@plt+0xb58>
   11320:	add	r1, pc, r1
   11324:	ldrsh	r2, [fp, #-2]
   11328:	ldr	r3, [sp, #20]
   1132c:	str	r0, [sp, #12]
   11330:	mov	r0, r3
   11334:	ldr	lr, [sp, #16]
   11338:	str	r2, [sp, #8]
   1133c:	mov	r2, lr
   11340:	ldr	r3, [sp, #12]
   11344:	ldr	ip, [sp, #8]
   11348:	str	ip, [sp]
   1134c:	bl	107f8 <sprintf@plt>
   11350:	add	r1, sp, #26
   11354:	str	r0, [sp, #4]
   11358:	mov	r0, r1
   1135c:	bl	10780 <strdup@plt>
   11360:	mov	sp, fp
   11364:	pop	{fp, pc}
   11368:			; <UNDEFINED> instruction: 0x00000abb
   1136c:	andeq	r0, r1, r4, lsl #27
   11370:	andeq	r0, r1, r8, ror sp
   11374:	push	{fp, lr}
   11378:	mov	fp, sp
   1137c:	sub	sp, sp, #16
   11380:	str	r0, [fp, #-4]
   11384:	movw	r0, #47	; 0x2f
   11388:	strb	r0, [fp, #-5]
   1138c:	ldr	r0, [fp, #-4]
   11390:	bl	107c8 <strlen@plt>
   11394:	sub	r0, r0, #1
   11398:	strh	r0, [sp, #8]
   1139c:	ldrsh	r0, [sp, #8]
   113a0:	cmp	r0, #0
   113a4:	movw	r0, #0
   113a8:	str	r0, [sp, #4]
   113ac:	blt	113d4 <abort@plt+0xbc4>
   113b0:	ldr	r0, [fp, #-4]
   113b4:	ldrsh	r1, [sp, #8]
   113b8:	add	r0, r0, r1
   113bc:	ldrb	r0, [r0]
   113c0:	ldrb	r1, [fp, #-5]
   113c4:	cmp	r0, r1
   113c8:	movw	r0, #0
   113cc:	movne	r0, #1
   113d0:	str	r0, [sp, #4]
   113d4:	ldr	r0, [sp, #4]
   113d8:	tst	r0, #1
   113dc:	beq	113f8 <abort@plt+0xbe8>
   113e0:	b	113e4 <abort@plt+0xbd4>
   113e4:	ldrh	r0, [sp, #8]
   113e8:	movw	r1, #65535	; 0xffff
   113ec:	add	r0, r0, r1
   113f0:	strh	r0, [sp, #8]
   113f4:	b	1139c <abort@plt+0xb8c>
   113f8:	ldr	r0, [fp, #-4]
   113fc:	ldrsh	r1, [sp, #8]
   11400:	add	r1, r1, #1
   11404:	add	r0, r0, r1
   11408:	mov	sp, fp
   1140c:	pop	{fp, pc}
   11410:	push	{fp, lr}
   11414:	mov	fp, sp
   11418:	sub	sp, sp, #16
   1141c:	str	r0, [fp, #-4]
   11420:	str	r1, [sp, #8]
   11424:	str	r2, [sp, #4]
   11428:	str	r3, [sp]
   1142c:	ldr	r0, [sp, #8]
   11430:	ldr	r0, [r0]
   11434:	bl	11374 <abort@plt+0xb64>
   11438:	ldr	r1, [pc, #36]	; 11464 <abort@plt+0xc54>
   1143c:	ldr	r1, [pc, r1]
   11440:	str	r0, [r1]
   11444:	bl	117dc <error@@Base+0x140>
   11448:	ldr	r0, [fp, #-4]
   1144c:	ldr	r1, [sp, #8]
   11450:	ldr	r2, [sp, #4]
   11454:	ldr	r3, [sp]
   11458:	bl	11468 <abort@plt+0xc58>
   1145c:	mov	sp, fp
   11460:	pop	{fp, pc}
   11464:	andeq	r0, r1, ip, lsr ip
   11468:	push	{fp, lr}
   1146c:	mov	fp, sp
   11470:	sub	sp, sp, #48	; 0x30
   11474:	str	r0, [fp, #-4]
   11478:	str	r1, [fp, #-8]
   1147c:	str	r2, [fp, #-12]
   11480:	str	r3, [fp, #-16]
   11484:	movw	r0, #0
   11488:	strh	r0, [fp, #-20]	; 0xffffffec
   1148c:	ldr	r0, [fp, #-4]
   11490:	ldr	r0, [r0]
   11494:	cmp	r0, #1
   11498:	bne	114b8 <abort@plt+0xca8>
   1149c:	ldr	r0, [pc, #404]	; 11638 <abort@plt+0xe28>
   114a0:	ldr	r0, [pc, r0]
   114a4:	ldrb	r0, [r0]
   114a8:	cmp	r0, #0
   114ac:	beq	114b8 <abort@plt+0xca8>
   114b0:	ldr	r0, [fp, #-12]
   114b4:	bl	11878 <error@@Base+0x1dc>
   114b8:	movw	r0, #1
   114bc:	strh	r0, [fp, #-18]	; 0xffffffee
   114c0:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   114c4:	ldr	r1, [fp, #-4]
   114c8:	ldr	r1, [r1]
   114cc:	cmp	r0, r1
   114d0:	bge	11624 <abort@plt+0xe14>
   114d4:	ldr	r0, [fp, #-8]
   114d8:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   114dc:	add	r0, r0, r1, lsl #2
   114e0:	ldr	r0, [r0]
   114e4:	ldrb	r0, [r0]
   114e8:	cmp	r0, #45	; 0x2d
   114ec:	bne	115ec <abort@plt+0xddc>
   114f0:	ldr	r0, [fp, #-8]
   114f4:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   114f8:	add	r0, r0, r1, lsl #2
   114fc:	ldr	r0, [r0]
   11500:	ldrb	r0, [r0, #1]
   11504:	cmp	r0, #0
   11508:	beq	115ec <abort@plt+0xddc>
   1150c:	ldr	r0, [pc, #296]	; 1163c <abort@plt+0xe2c>
   11510:	add	r0, pc, r0
   11514:	ldr	r1, [fp, #-8]
   11518:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   1151c:	ldr	r2, [r1, r2, lsl #2]!
   11520:	ldr	r1, [r1]
   11524:	str	r0, [sp, #24]
   11528:	mov	r0, r1
   1152c:	str	r2, [sp, #20]
   11530:	bl	107c8 <strlen@plt>
   11534:	ldr	r1, [sp, #24]
   11538:	str	r0, [sp, #16]
   1153c:	mov	r0, r1
   11540:	ldr	r1, [sp, #20]
   11544:	ldr	r2, [sp, #16]
   11548:	bl	10804 <strncmp@plt>
   1154c:	cmp	r0, #0
   11550:	bne	1155c <abort@plt+0xd4c>
   11554:	ldr	r0, [fp, #-12]
   11558:	bl	11878 <error@@Base+0x1dc>
   1155c:	ldr	r0, [fp, #-8]
   11560:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11564:	add	r0, r0, r1, lsl #2
   11568:	ldr	r0, [r0]
   1156c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11570:	add	r1, r1, #1
   11574:	ldr	r2, [fp, #-4]
   11578:	ldr	r2, [r2]
   1157c:	cmp	r1, r2
   11580:	str	r0, [sp, #12]
   11584:	bge	115a4 <abort@plt+0xd94>
   11588:	ldr	r0, [fp, #-8]
   1158c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11590:	add	r1, r1, #1
   11594:	add	r0, r0, r1, lsl #2
   11598:	ldr	r0, [r0]
   1159c:	str	r0, [sp, #8]
   115a0:	b	115b0 <abort@plt+0xda0>
   115a4:	movw	r0, #0
   115a8:	str	r0, [sp, #8]
   115ac:	b	115b0 <abort@plt+0xda0>
   115b0:	ldr	r0, [sp, #8]
   115b4:	ldr	r2, [fp, #-16]
   115b8:	ldr	r1, [sp, #12]
   115bc:	str	r0, [sp, #4]
   115c0:	mov	r0, r1
   115c4:	ldr	r1, [sp, #4]
   115c8:	bl	11904 <error@@Base+0x268>
   115cc:	sxtb	r0, r0
   115d0:	cmp	r0, #0
   115d4:	beq	115e8 <abort@plt+0xdd8>
   115d8:	ldrh	r0, [fp, #-18]	; 0xffffffee
   115dc:	movw	r1, #1
   115e0:	add	r0, r0, r1
   115e4:	strh	r0, [fp, #-18]	; 0xffffffee
   115e8:	b	1160c <abort@plt+0xdfc>
   115ec:	ldr	r0, [fp, #-8]
   115f0:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   115f4:	ldr	r1, [r0, r1, lsl #2]
   115f8:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   115fc:	add	r3, r2, #1
   11600:	strh	r3, [fp, #-20]	; 0xffffffec
   11604:	add	r0, r0, r2, lsl #2
   11608:	str	r1, [r0]
   1160c:	b	11610 <abort@plt+0xe00>
   11610:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11614:	movw	r1, #1
   11618:	add	r0, r0, r1
   1161c:	strh	r0, [fp, #-18]	; 0xffffffee
   11620:	b	114c0 <abort@plt+0xcb0>
   11624:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11628:	ldr	r1, [fp, #-4]
   1162c:	str	r0, [r1]
   11630:	mov	sp, fp
   11634:	pop	{fp, pc}
   11638:			; <UNDEFINED> instruction: 0x00010bb0
   1163c:	andeq	r0, r0, r8, ror #17
   11640:	push	{fp, lr}
   11644:	mov	fp, sp
   11648:	movw	r0, #0
   1164c:	bl	11650 <abort@plt+0xe40>
   11650:	push	{fp, lr}
   11654:	mov	fp, sp
   11658:	sub	sp, sp, #8
   1165c:	ldr	r1, [pc, #48]	; 11694 <abort@plt+0xe84>
   11660:	ldr	r1, [pc, r1]
   11664:	str	r0, [sp, #4]
   11668:	ldr	r0, [r1]
   1166c:	movw	r1, #0
   11670:	cmp	r0, r1
   11674:	beq	11688 <abort@plt+0xe78>
   11678:	ldr	r0, [pc, #24]	; 11698 <abort@plt+0xe88>
   1167c:	ldr	r0, [pc, r0]
   11680:	ldr	r0, [r0]
   11684:	blx	r0
   11688:	bl	11b78 <error@@Base+0x4dc>
   1168c:	ldr	r0, [sp, #4]
   11690:	bl	107bc <exit@plt>
   11694:	andeq	r0, r1, r0, lsr #20
   11698:	andeq	r0, r1, r4, lsl #20

0001169c <error@@Base>:
   1169c:	push	{fp, lr}
   116a0:	mov	fp, sp
   116a4:	sub	sp, sp, #8
   116a8:	ldr	r1, [pc, #64]	; 116f0 <error@@Base+0x54>
   116ac:	add	r1, pc, r1
   116b0:	ldr	r2, [pc, #60]	; 116f4 <error@@Base+0x58>
   116b4:	ldr	r2, [pc, r2]
   116b8:	ldr	r3, [pc, #56]	; 116f8 <error@@Base+0x5c>
   116bc:	ldr	r3, [pc, r3]
   116c0:	str	r0, [sp, #4]
   116c4:	ldr	r0, [r3]
   116c8:	ldr	r2, [r2]
   116cc:	ldr	r3, [sp, #4]
   116d0:	bl	107d4 <fprintf@plt>
   116d4:	ldr	r1, [pc, #16]	; 116ec <error@@Base+0x50>
   116d8:	ldr	r1, [pc, r1]
   116dc:	ldr	r1, [r1]
   116e0:	str	r0, [sp]
   116e4:	mov	r0, r1
   116e8:	bl	11650 <abort@plt+0xe40>
   116ec:			; <UNDEFINED> instruction: 0x000109bc
   116f0:	andeq	r0, r0, sl, lsl r7
   116f4:	andeq	r0, r1, r4, asr #19
   116f8:	andeq	r0, r1, ip, lsr #19
   116fc:	push	{fp, lr}
   11700:	mov	fp, sp
   11704:	sub	sp, sp, #24
   11708:	ldr	r2, [pc, #88]	; 11768 <error@@Base+0xcc>
   1170c:	add	r2, pc, r2
   11710:	ldr	r3, [pc, #84]	; 1176c <error@@Base+0xd0>
   11714:	ldr	r3, [pc, r3]
   11718:	ldr	ip, [pc, #80]	; 11770 <error@@Base+0xd4>
   1171c:	ldr	ip, [pc, ip]
   11720:	str	r0, [fp, #-4]
   11724:	str	r1, [fp, #-8]
   11728:	ldr	r0, [ip]
   1172c:	ldr	r1, [r3]
   11730:	ldr	r3, [fp, #-4]
   11734:	ldr	ip, [fp, #-8]
   11738:	str	r1, [sp, #12]
   1173c:	mov	r1, r2
   11740:	ldr	r2, [sp, #12]
   11744:	str	ip, [sp]
   11748:	bl	107d4 <fprintf@plt>
   1174c:	ldr	r1, [pc, #16]	; 11764 <error@@Base+0xc8>
   11750:	ldr	r1, [pc, r1]
   11754:	ldr	r1, [r1]
   11758:	str	r0, [sp, #8]
   1175c:	mov	r0, r1
   11760:	bl	11650 <abort@plt+0xe40>
   11764:	andeq	r0, r1, r4, asr #18
   11768:	andeq	r0, r0, r2, asr #13
   1176c:	andeq	r0, r1, r4, ror #18
   11770:	andeq	r0, r1, ip, asr #18
   11774:	push	{fp, lr}
   11778:	mov	fp, sp
   1177c:	sub	sp, sp, #24
   11780:	ldr	r2, [pc, #72]	; 117d0 <error@@Base+0x134>
   11784:	add	r2, pc, r2
   11788:	ldr	r3, [pc, #68]	; 117d4 <error@@Base+0x138>
   1178c:	ldr	r3, [pc, r3]
   11790:	ldr	ip, [pc, #64]	; 117d8 <error@@Base+0x13c>
   11794:	ldr	ip, [pc, ip]
   11798:	str	r0, [fp, #-4]
   1179c:	str	r1, [fp, #-8]
   117a0:	ldr	r0, [ip]
   117a4:	ldr	r1, [r3]
   117a8:	ldr	r3, [fp, #-4]
   117ac:	ldr	ip, [fp, #-8]
   117b0:	str	r1, [sp, #12]
   117b4:	mov	r1, r2
   117b8:	ldr	r2, [sp, #12]
   117bc:	str	ip, [sp]
   117c0:	bl	107d4 <fprintf@plt>
   117c4:	str	r0, [sp, #8]
   117c8:	mov	sp, fp
   117cc:	pop	{fp, pc}
   117d0:	andeq	r0, r0, sl, asr #12
   117d4:	andeq	r0, r1, ip, ror #17
   117d8:	ldrdeq	r0, [r1], -r4
   117dc:	push	{fp, lr}
   117e0:	mov	fp, sp
   117e4:	sub	sp, sp, #8
   117e8:	ldr	r0, [pc, #48]	; 11820 <error@@Base+0x184>
   117ec:	add	r1, pc, r0
   117f0:	movw	r0, #2
   117f4:	bl	107a4 <__sysv_signal@plt>
   117f8:	ldr	r1, [pc, #28]	; 1181c <error@@Base+0x180>
   117fc:	add	r1, pc, r1
   11800:	movw	lr, #15
   11804:	str	r0, [sp, #4]
   11808:	mov	r0, lr
   1180c:	bl	107a4 <__sysv_signal@plt>
   11810:	str	r0, [sp]
   11814:	mov	sp, fp
   11818:	pop	{fp, pc}
   1181c:	andeq	r0, r0, r0, lsr #32
   11820:	andeq	r0, r0, r0, lsr r0
   11824:	push	{fp, lr}
   11828:	mov	fp, sp
   1182c:	sub	sp, sp, #8
   11830:	ldr	r1, [pc, #52]	; 1186c <error@@Base+0x1d0>
   11834:	add	r1, pc, r1
   11838:	str	r0, [sp, #4]
   1183c:	ldrsb	r0, [r1]
   11840:	cmp	r0, #0
   11844:	beq	11850 <error@@Base+0x1b4>
   11848:	mov	sp, fp
   1184c:	pop	{fp, pc}
   11850:	ldr	r0, [pc, #24]	; 11870 <error@@Base+0x1d4>
   11854:	add	r0, pc, r0
   11858:	ldr	r1, [pc, #20]	; 11874 <error@@Base+0x1d8>
   1185c:	add	r1, pc, r1
   11860:	movw	r2, #1
   11864:	strb	r2, [r1]
   11868:	bl	1169c <error@@Base>
   1186c:	andeq	r0, r1, r0, ror #17
   11870:	muleq	r0, r5, r5
   11874:			; <UNDEFINED> instruction: 0x000108b8
   11878:	push	{fp, lr}
   1187c:	mov	fp, sp
   11880:	sub	sp, sp, #16
   11884:	ldr	r1, [pc, #100]	; 118f0 <error@@Base+0x254>
   11888:	ldr	r1, [pc, r1]
   1188c:	str	r0, [fp, #-4]
   11890:	ldr	r0, [r1]
   11894:	movw	r1, #0
   11898:	cmp	r0, r1
   1189c:	beq	118b4 <error@@Base+0x218>
   118a0:	ldr	r0, [pc, #88]	; 11900 <error@@Base+0x264>
   118a4:	ldr	r0, [pc, r0]
   118a8:	ldr	r0, [r0]
   118ac:	blx	r0
   118b0:	b	118ec <error@@Base+0x250>
   118b4:	ldr	r0, [pc, #56]	; 118f4 <error@@Base+0x258>
   118b8:	add	r1, pc, r0
   118bc:	ldr	r0, [pc, #52]	; 118f8 <error@@Base+0x25c>
   118c0:	ldr	r0, [pc, r0]
   118c4:	ldr	r2, [pc, #48]	; 118fc <error@@Base+0x260>
   118c8:	ldr	r2, [pc, r2]
   118cc:	ldr	r2, [r2]
   118d0:	ldr	r0, [r0]
   118d4:	ldr	r3, [fp, #-4]
   118d8:	str	r0, [sp, #8]
   118dc:	mov	r0, r2
   118e0:	ldr	r2, [sp, #8]
   118e4:	bl	107d4 <fprintf@plt>
   118e8:	str	r0, [sp, #4]
   118ec:	bl	11640 <abort@plt+0xe30>
   118f0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   118f4:	andeq	r0, r0, r6, asr #10
   118f8:			; <UNDEFINED> instruction: 0x000107b8
   118fc:	andeq	r0, r1, r0, lsr #15
   11900:			; <UNDEFINED> instruction: 0x000107b4
   11904:	push	{fp, lr}
   11908:	mov	fp, sp
   1190c:	sub	sp, sp, #32
   11910:	str	r0, [fp, #-8]
   11914:	str	r1, [fp, #-12]
   11918:	str	r2, [sp, #16]
   1191c:	ldr	r0, [sp, #16]
   11920:	movw	r1, #0
   11924:	cmp	r0, r1
   11928:	bne	11930 <error@@Base+0x294>
   1192c:	b	11b44 <error@@Base+0x4a8>
   11930:	movw	r0, #0
   11934:	strh	r0, [sp, #14]
   11938:	ldr	r0, [sp, #16]
   1193c:	ldrsh	r1, [sp, #14]
   11940:	movw	r2, #12
   11944:	mul	r1, r1, r2
   11948:	add	r0, r0, r1
   1194c:	ldrb	r0, [r0]
   11950:	cmp	r0, #0
   11954:	movw	r0, #0
   11958:	str	r0, [sp, #8]
   1195c:	beq	11990 <error@@Base+0x2f4>
   11960:	ldr	r0, [fp, #-8]
   11964:	ldrb	r0, [r0, #1]
   11968:	ldr	r1, [sp, #16]
   1196c:	ldrsh	r2, [sp, #14]
   11970:	movw	r3, #12
   11974:	mul	r2, r2, r3
   11978:	add	r1, r1, r2
   1197c:	ldrb	r1, [r1]
   11980:	cmp	r0, r1
   11984:	movw	r0, #0
   11988:	movne	r0, #1
   1198c:	str	r0, [sp, #8]
   11990:	ldr	r0, [sp, #8]
   11994:	tst	r0, #1
   11998:	beq	119b4 <error@@Base+0x318>
   1199c:	b	119a0 <error@@Base+0x304>
   119a0:	ldrh	r0, [sp, #14]
   119a4:	movw	r1, #1
   119a8:	add	r0, r0, r1
   119ac:	strh	r0, [sp, #14]
   119b0:	b	11938 <error@@Base+0x29c>
   119b4:	ldr	r0, [sp, #16]
   119b8:	ldrsh	r1, [sp, #14]
   119bc:	movw	r2, #12
   119c0:	mul	r1, r1, r2
   119c4:	add	r0, r0, r1
   119c8:	ldrsb	r0, [r0]
   119cc:	cmp	r0, #0
   119d0:	bne	119d8 <error@@Base+0x33c>
   119d4:	b	11b44 <error@@Base+0x4a8>
   119d8:	ldr	r0, [sp, #16]
   119dc:	ldrsh	r1, [sp, #14]
   119e0:	movw	r2, #12
   119e4:	mul	r1, r1, r2
   119e8:	add	r0, r0, r1
   119ec:	ldr	r0, [r0, #4]
   119f0:	movw	r1, #0
   119f4:	cmp	r0, r1
   119f8:	beq	11ab8 <error@@Base+0x41c>
   119fc:	ldr	r0, [fp, #-8]
   11a00:	ldrb	r0, [r0, #2]
   11a04:	cmp	r0, #0
   11a08:	bne	11a1c <error@@Base+0x380>
   11a0c:	ldr	r0, [fp, #-12]
   11a10:	movw	r1, #0
   11a14:	cmp	r0, r1
   11a18:	beq	11ab8 <error@@Base+0x41c>
   11a1c:	ldr	r0, [sp, #16]
   11a20:	ldrsh	r1, [sp, #14]
   11a24:	movw	r2, #12
   11a28:	mul	r1, r1, r2
   11a2c:	add	r0, r0, r1
   11a30:	ldr	r0, [r0, #4]
   11a34:	ldr	r0, [r0]
   11a38:	movw	r1, #0
   11a3c:	cmp	r0, r1
   11a40:	beq	11a48 <error@@Base+0x3ac>
   11a44:	b	11b54 <error@@Base+0x4b8>
   11a48:	ldr	r0, [fp, #-8]
   11a4c:	ldrb	r0, [r0, #2]
   11a50:	cmp	r0, #0
   11a54:	beq	11a68 <error@@Base+0x3cc>
   11a58:	ldr	r0, [fp, #-8]
   11a5c:	add	r0, r0, #2
   11a60:	str	r0, [sp, #4]
   11a64:	b	11a70 <error@@Base+0x3d4>
   11a68:	ldr	r0, [fp, #-12]
   11a6c:	str	r0, [sp, #4]
   11a70:	ldr	r0, [sp, #4]
   11a74:	ldr	r1, [sp, #16]
   11a78:	ldrsh	r2, [sp, #14]
   11a7c:	movw	r3, #12
   11a80:	mul	r2, r2, r3
   11a84:	add	r1, r1, r2
   11a88:	ldr	r1, [r1, #4]
   11a8c:	str	r0, [r1]
   11a90:	ldr	r0, [fp, #-8]
   11a94:	ldrb	r0, [r0, #2]
   11a98:	cmp	r0, #0
   11a9c:	movw	r0, #0
   11aa0:	movne	r0, #1
   11aa4:	tst	r0, #1
   11aa8:	movw	r0, #0
   11aac:	moveq	r0, #1
   11ab0:	strb	r0, [fp, #-1]
   11ab4:	b	11b64 <error@@Base+0x4c8>
   11ab8:	ldr	r0, [sp, #16]
   11abc:	ldrsh	r1, [sp, #14]
   11ac0:	movw	r2, #12
   11ac4:	mul	r1, r1, r2
   11ac8:	add	r0, r0, r1
   11acc:	ldr	r0, [r0, #8]
   11ad0:	movw	r1, #0
   11ad4:	cmp	r0, r1
   11ad8:	beq	11b40 <error@@Base+0x4a4>
   11adc:	ldr	r0, [fp, #-8]
   11ae0:	ldrsb	r0, [r0, #2]
   11ae4:	cmp	r0, #0
   11ae8:	bne	11b40 <error@@Base+0x4a4>
   11aec:	ldr	r0, [sp, #16]
   11af0:	ldrsh	r1, [sp, #14]
   11af4:	movw	r2, #12
   11af8:	mul	r1, r1, r2
   11afc:	add	r0, r0, r1
   11b00:	ldr	r0, [r0, #8]
   11b04:	ldrsb	r0, [r0]
   11b08:	cmp	r0, #0
   11b0c:	beq	11b14 <error@@Base+0x478>
   11b10:	b	11b54 <error@@Base+0x4b8>
   11b14:	ldr	r0, [sp, #16]
   11b18:	ldrsh	r1, [sp, #14]
   11b1c:	movw	r2, #12
   11b20:	mul	r1, r1, r2
   11b24:	add	r0, r0, r1
   11b28:	ldr	r0, [r0, #8]
   11b2c:	movw	r1, #1
   11b30:	strb	r1, [r0]
   11b34:	movw	r0, #0
   11b38:	strb	r0, [fp, #-1]
   11b3c:	b	11b64 <error@@Base+0x4c8>
   11b40:	b	11b44 <error@@Base+0x4a8>
   11b44:	ldr	r0, [pc, #36]	; 11b70 <error@@Base+0x4d4>
   11b48:	add	r0, pc, r0
   11b4c:	ldr	r1, [fp, #-8]
   11b50:	bl	116fc <error@@Base+0x60>
   11b54:	ldr	r0, [pc, #24]	; 11b74 <error@@Base+0x4d8>
   11b58:	add	r0, pc, r0
   11b5c:	ldr	r1, [fp, #-8]
   11b60:	bl	116fc <error@@Base+0x60>
   11b64:	ldrb	r0, [fp, #-1]
   11b68:	mov	sp, fp
   11b6c:	pop	{fp, pc}
   11b70:	andeq	r0, r0, r5, asr #5
   11b74:	andeq	r0, r0, r4, asr #5
   11b78:	push	{fp, lr}
   11b7c:	mov	fp, sp
   11b80:	sub	sp, sp, #16
   11b84:	movw	r0, #1
   11b88:	strh	r0, [fp, #-2]
   11b8c:	ldr	r0, [pc, #88]	; 11bec <error@@Base+0x550>
   11b90:	add	r0, pc, r0
   11b94:	ldrsh	r1, [fp, #-2]
   11b98:	ldrsh	r0, [r0]
   11b9c:	cmp	r1, r0
   11ba0:	bgt	11be4 <error@@Base+0x548>
   11ba4:	ldrsh	r0, [fp, #-2]
   11ba8:	bl	112e8 <abort@plt+0xad8>
   11bac:	ldr	lr, [pc, #60]	; 11bf0 <error@@Base+0x554>
   11bb0:	ldr	lr, [pc, lr]
   11bb4:	str	r0, [sp, #8]
   11bb8:	ldr	r0, [sp, #8]
   11bbc:	blx	lr
   11bc0:	ldr	lr, [sp, #8]
   11bc4:	str	r0, [sp, #4]
   11bc8:	mov	r0, lr
   11bcc:	bl	10768 <free@plt>
   11bd0:	ldrh	r0, [fp, #-2]
   11bd4:	movw	r1, #1
   11bd8:	add	r0, r0, r1
   11bdc:	strh	r0, [fp, #-2]
   11be0:	b	11b8c <error@@Base+0x4f0>
   11be4:	mov	sp, fp
   11be8:	pop	{fp, pc}
   11bec:	andeq	r0, r1, r2, lsl #11
   11bf0:			; <UNDEFINED> instruction: 0x000104b4
   11bf4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11bf8:	mov	r7, r0
   11bfc:	ldr	r6, [pc, #72]	; 11c4c <error@@Base+0x5b0>
   11c00:	ldr	r5, [pc, #72]	; 11c50 <error@@Base+0x5b4>
   11c04:	add	r6, pc, r6
   11c08:	add	r5, pc, r5
   11c0c:	sub	r6, r6, r5
   11c10:	mov	r8, r1
   11c14:	mov	r9, r2
   11c18:	bl	10724 <calloc@plt-0x20>
   11c1c:	asrs	r6, r6, #2
   11c20:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c24:	mov	r4, #0
   11c28:	add	r4, r4, #1
   11c2c:	ldr	r3, [r5], #4
   11c30:	mov	r2, r9
   11c34:	mov	r1, r8
   11c38:	mov	r0, r7
   11c3c:	blx	r3
   11c40:	cmp	r6, r4
   11c44:	bne	11c28 <error@@Base+0x58c>
   11c48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11c4c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11c50:	andeq	r0, r1, r8, ror #5
   11c54:	bx	lr
   11c58:	mov	r2, r1
   11c5c:	mov	r1, r0
   11c60:	mov	r0, #3
   11c64:	b	1078c <__xstat@plt>

Disassembly of section .fini:

00011c68 <.fini>:
   11c68:	push	{r3, lr}
   11c6c:	pop	{r3, pc}
