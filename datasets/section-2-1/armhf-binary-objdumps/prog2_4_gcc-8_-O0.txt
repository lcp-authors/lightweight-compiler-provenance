
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010930 <.init>:
   10930:	push	{r3, lr}
   10934:	bl	10a28 <_start@@Base+0x3c>
   10938:	pop	{r3, pc}

Disassembly of section .plt:

0001093c <strcmp@plt-0x14>:
   1093c:	push	{lr}		; (str lr, [sp, #-4]!)
   10940:	ldr	lr, [pc, #4]	; 1094c <strcmp@plt-0x4>
   10944:	add	lr, pc, lr
   10948:	ldr	pc, [lr, #8]!
   1094c:			; <UNDEFINED> instruction: 0x000126b4

00010950 <strcmp@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #73728	; 0x12000
   10958:	ldr	pc, [ip, #1716]!	; 0x6b4

0001095c <printf@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #73728	; 0x12000
   10964:	ldr	pc, [ip, #1708]!	; 0x6ac

00010968 <free@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #73728	; 0x12000
   10970:	ldr	pc, [ip, #1700]!	; 0x6a4

00010974 <strdup@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #73728	; 0x12000
   1097c:	ldr	pc, [ip, #1692]!	; 0x69c

00010980 <strcpy@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #73728	; 0x12000
   10988:	ldr	pc, [ip, #1684]!	; 0x694

0001098c <puts@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #73728	; 0x12000
   10994:	ldr	pc, [ip, #1676]!	; 0x68c

00010998 <malloc@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #73728	; 0x12000
   109a0:	ldr	pc, [ip, #1668]!	; 0x684

000109a4 <__libc_start_main@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #73728	; 0x12000
   109ac:	ldr	pc, [ip, #1660]!	; 0x67c

000109b0 <__gmon_start__@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #73728	; 0x12000
   109b8:	ldr	pc, [ip, #1652]!	; 0x674

000109bc <strlen@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #73728	; 0x12000
   109c4:	ldr	pc, [ip, #1644]!	; 0x66c

000109c8 <setvbuf@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #73728	; 0x12000
   109d0:	ldr	pc, [ip, #1636]!	; 0x664

000109d4 <putchar@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #73728	; 0x12000
   109dc:	ldr	pc, [ip, #1628]!	; 0x65c

000109e0 <abort@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #73728	; 0x12000
   109e8:	ldr	pc, [ip, #1620]!	; 0x654

Disassembly of section .text:

000109ec <_start@@Base>:
   109ec:	mov	fp, #0
   109f0:	mov	lr, #0
   109f4:	pop	{r1}		; (ldr r1, [sp], #4)
   109f8:	mov	r2, sp
   109fc:	push	{r2}		; (str r2, [sp, #-4]!)
   10a00:	push	{r0}		; (str r0, [sp, #-4]!)
   10a04:	ldr	ip, [pc, #16]	; 10a1c <_start@@Base+0x30>
   10a08:	push	{ip}		; (str ip, [sp, #-4]!)
   10a0c:	ldr	r0, [pc, #12]	; 10a20 <_start@@Base+0x34>
   10a10:	ldr	r3, [pc, #12]	; 10a24 <_start@@Base+0x38>
   10a14:	bl	109a4 <__libc_start_main@plt>
   10a18:	bl	109e0 <abort@plt>
   10a1c:	ldrdeq	r2, [r1], -r0
   10a20:	andeq	r1, r1, r8, lsr pc
   10a24:	andeq	r2, r1, r0, ror r8
   10a28:	ldr	r3, [pc, #20]	; 10a44 <_start@@Base+0x58>
   10a2c:	ldr	r2, [pc, #20]	; 10a48 <_start@@Base+0x5c>
   10a30:	add	r3, pc, r3
   10a34:	ldr	r2, [r3, r2]
   10a38:	cmp	r2, #0
   10a3c:	bxeq	lr
   10a40:	b	109b0 <__gmon_start__@plt>
   10a44:	andeq	r2, r1, r8, asr #11
   10a48:	andeq	r0, r0, r4, asr #32
   10a4c:	ldr	r0, [pc, #24]	; 10a6c <_start@@Base+0x80>
   10a50:	ldr	r3, [pc, #24]	; 10a70 <_start@@Base+0x84>
   10a54:	cmp	r3, r0
   10a58:	bxeq	lr
   10a5c:	ldr	r3, [pc, #16]	; 10a74 <_start@@Base+0x88>
   10a60:	cmp	r3, #0
   10a64:	bxeq	lr
   10a68:	bx	r3
   10a6c:	andeq	r3, r2, r4, asr r0
   10a70:	andeq	r3, r2, r4, asr r0
   10a74:	andeq	r0, r0, r0
   10a78:	ldr	r0, [pc, #36]	; 10aa4 <_start@@Base+0xb8>
   10a7c:	ldr	r1, [pc, #36]	; 10aa8 <_start@@Base+0xbc>
   10a80:	sub	r1, r1, r0
   10a84:	asr	r1, r1, #2
   10a88:	add	r1, r1, r1, lsr #31
   10a8c:	asrs	r1, r1, #1
   10a90:	bxeq	lr
   10a94:	ldr	r3, [pc, #16]	; 10aac <_start@@Base+0xc0>
   10a98:	cmp	r3, #0
   10a9c:	bxeq	lr
   10aa0:	bx	r3
   10aa4:	andeq	r3, r2, r4, asr r0
   10aa8:	andeq	r3, r2, r4, asr r0
   10aac:	andeq	r0, r0, r0
   10ab0:	push	{r4, lr}
   10ab4:	ldr	r4, [pc, #24]	; 10ad4 <_start@@Base+0xe8>
   10ab8:	ldrb	r3, [r4]
   10abc:	cmp	r3, #0
   10ac0:	popne	{r4, pc}
   10ac4:	bl	10a4c <_start@@Base+0x60>
   10ac8:	mov	r3, #1
   10acc:	strb	r3, [r4]
   10ad0:	pop	{r4, pc}
   10ad4:	andeq	r3, r2, r4, asr r0
   10ad8:	b	10a78 <_start@@Base+0x8c>

00010adc <_l@@Base>:
   10adc:	push	{r0, r1, r2, r3}
   10ae0:	str	fp, [sp, #-8]!
   10ae4:	str	lr, [sp, #4]
   10ae8:	add	fp, sp, #4
   10aec:	sub	sp, sp, #24
   10af0:	mov	r0, #12
   10af4:	bl	10998 <malloc@plt>
   10af8:	mov	r3, r0
   10afc:	str	r3, [fp, #-16]
   10b00:	ldr	r3, [fp, #-16]
   10b04:	mov	r2, #0
   10b08:	str	r2, [r3]
   10b0c:	ldr	r3, [fp, #-16]
   10b10:	mov	r2, #0
   10b14:	str	r2, [r3, #4]
   10b18:	ldr	r3, [fp, #-16]
   10b1c:	ldr	r2, [fp, #4]
   10b20:	str	r2, [r3, #8]
   10b24:	add	r3, fp, #8
   10b28:	str	r3, [fp, #-24]	; 0xffffffe8
   10b2c:	mov	r3, #0
   10b30:	str	r3, [fp, #-12]
   10b34:	b	10c08 <_l@@Base+0x12c>
   10b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b3c:	add	r2, r3, #4
   10b40:	str	r2, [fp, #-24]	; 0xffffffe8
   10b44:	ldr	r3, [r3]
   10b48:	str	r3, [fp, #-20]	; 0xffffffec
   10b4c:	ldr	r3, [fp, #-12]
   10b50:	cmp	r3, #0
   10b54:	bne	10b8c <_l@@Base+0xb0>
   10b58:	mov	r0, #12
   10b5c:	bl	10998 <malloc@plt>
   10b60:	mov	r3, r0
   10b64:	mov	r2, r3
   10b68:	ldr	r3, [fp, #-16]
   10b6c:	str	r2, [r3]
   10b70:	ldr	r3, [fp, #-16]
   10b74:	ldr	r3, [r3]
   10b78:	str	r3, [fp, #-8]
   10b7c:	ldr	r3, [fp, #-8]
   10b80:	mov	r2, #0
   10b84:	str	r2, [r3, #8]
   10b88:	b	10bc0 <_l@@Base+0xe4>
   10b8c:	mov	r0, #12
   10b90:	bl	10998 <malloc@plt>
   10b94:	mov	r3, r0
   10b98:	mov	r2, r3
   10b9c:	ldr	r3, [fp, #-8]
   10ba0:	str	r2, [r3, #4]
   10ba4:	ldr	r3, [fp, #-8]
   10ba8:	ldr	r3, [r3, #4]
   10bac:	ldr	r2, [fp, #-8]
   10bb0:	str	r2, [r3, #8]
   10bb4:	ldr	r3, [fp, #-8]
   10bb8:	ldr	r3, [r3, #4]
   10bbc:	str	r3, [fp, #-8]
   10bc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   10bc4:	bl	109bc <strlen@plt>
   10bc8:	mov	r3, r0
   10bcc:	add	r3, r3, #1
   10bd0:	mov	r0, r3
   10bd4:	bl	10998 <malloc@plt>
   10bd8:	mov	r3, r0
   10bdc:	mov	r2, r3
   10be0:	ldr	r3, [fp, #-8]
   10be4:	str	r2, [r3]
   10be8:	ldr	r3, [fp, #-8]
   10bec:	ldr	r3, [r3]
   10bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   10bf4:	mov	r0, r3
   10bf8:	bl	10980 <strcpy@plt>
   10bfc:	ldr	r3, [fp, #-12]
   10c00:	add	r3, r3, #1
   10c04:	str	r3, [fp, #-12]
   10c08:	ldr	r2, [fp, #-12]
   10c0c:	ldr	r3, [fp, #4]
   10c10:	cmp	r2, r3
   10c14:	blt	10b38 <_l@@Base+0x5c>
   10c18:	ldr	r3, [fp, #-8]
   10c1c:	mov	r2, #0
   10c20:	str	r2, [r3, #4]
   10c24:	ldr	r3, [fp, #-16]
   10c28:	ldr	r2, [fp, #-8]
   10c2c:	str	r2, [r3, #4]
   10c30:	ldr	r3, [fp, #-16]
   10c34:	mov	r0, r3
   10c38:	sub	sp, fp, #4
   10c3c:	ldr	fp, [sp]
   10c40:	ldr	lr, [sp, #4]
   10c44:	add	sp, sp, #8
   10c48:	add	sp, sp, #16
   10c4c:	bx	lr

00010c50 <_f@@Base>:
   10c50:	push	{fp}		; (str fp, [sp, #-4]!)
   10c54:	add	fp, sp, #0
   10c58:	sub	sp, sp, #20
   10c5c:	str	r0, [fp, #-16]
   10c60:	str	r1, [fp, #-20]	; 0xffffffec
   10c64:	ldr	r3, [fp, #-16]
   10c68:	cmp	r3, #0
   10c6c:	bne	10c78 <_f@@Base+0x28>
   10c70:	mov	r3, #0
   10c74:	b	10ce8 <_f@@Base+0x98>
   10c78:	ldr	r3, [fp, #-16]
   10c7c:	ldr	r3, [r3]
   10c80:	str	r3, [fp, #-12]
   10c84:	mov	r3, #0
   10c88:	str	r3, [fp, #-8]
   10c8c:	b	10ca8 <_f@@Base+0x58>
   10c90:	ldr	r3, [fp, #-12]
   10c94:	ldr	r3, [r3, #4]
   10c98:	str	r3, [fp, #-12]
   10c9c:	ldr	r3, [fp, #-8]
   10ca0:	add	r3, r3, #1
   10ca4:	str	r3, [fp, #-8]
   10ca8:	ldr	r2, [fp, #-8]
   10cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   10cb0:	cmp	r2, r3
   10cb4:	bge	10cc4 <_f@@Base+0x74>
   10cb8:	ldr	r3, [fp, #-12]
   10cbc:	cmp	r3, #0
   10cc0:	bne	10c90 <_f@@Base+0x40>
   10cc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   10cc8:	ldr	r3, [fp, #-8]
   10ccc:	cmp	r2, r3
   10cd0:	bne	10ce0 <_f@@Base+0x90>
   10cd4:	ldr	r3, [fp, #-12]
   10cd8:	ldr	r3, [r3]
   10cdc:	b	10ce8 <_f@@Base+0x98>
   10ce0:	ldr	r3, [pc, #16]	; 10cf8 <_f@@Base+0xa8>
   10ce4:	add	r3, pc, r3
   10ce8:	mov	r0, r3
   10cec:	add	sp, fp, #0
   10cf0:	pop	{fp}		; (ldr fp, [sp], #4)
   10cf4:	bx	lr
   10cf8:	strdeq	r1, [r0], -r4

00010cfc <teste_lista_nova@@Base>:
   10cfc:	str	fp, [sp, #-8]!
   10d00:	str	lr, [sp, #4]
   10d04:	add	fp, sp, #4
   10d08:	sub	sp, sp, #8
   10d0c:	mov	r3, #0
   10d10:	str	r3, [fp, #-8]
   10d14:	ldr	r3, [pc, #220]	; 10df8 <teste_lista_nova@@Base+0xfc>
   10d18:	add	r3, pc, r3
   10d1c:	mov	r0, r3
   10d20:	bl	1095c <printf@plt>
   10d24:	bl	12070 <lista_nova@@Base>
   10d28:	str	r0, [fp, #-12]
   10d2c:	ldr	r3, [fp, #-12]
   10d30:	cmp	r3, #0
   10d34:	bne	10d84 <teste_lista_nova@@Base+0x88>
   10d38:	ldr	r3, [pc, #188]	; 10dfc <teste_lista_nova@@Base+0x100>
   10d3c:	add	r3, pc, r3
   10d40:	mov	r0, r3
   10d44:	bl	1095c <printf@plt>
   10d48:	ldr	r3, [fp, #-8]
   10d4c:	add	r3, r3, #1
   10d50:	str	r3, [fp, #-8]
   10d54:	ldr	r3, [fp, #-8]
   10d58:	cmp	r3, #0
   10d5c:	bne	10d74 <teste_lista_nova@@Base+0x78>
   10d60:	ldr	r3, [pc, #152]	; 10e00 <teste_lista_nova@@Base+0x104>
   10d64:	add	r3, pc, r3
   10d68:	mov	r0, r3
   10d6c:	bl	1098c <puts@plt>
   10d70:	b	10d7c <teste_lista_nova@@Base+0x80>
   10d74:	mov	r0, #10
   10d78:	bl	109d4 <putchar@plt>
   10d7c:	ldr	r3, [fp, #-8]
   10d80:	b	10de4 <teste_lista_nova@@Base+0xe8>
   10d84:	ldr	r3, [fp, #-12]
   10d88:	ldr	r3, [r3, #8]
   10d8c:	cmp	r3, #0
   10d90:	beq	10db0 <teste_lista_nova@@Base+0xb4>
   10d94:	ldr	r3, [pc, #104]	; 10e04 <teste_lista_nova@@Base+0x108>
   10d98:	add	r3, pc, r3
   10d9c:	mov	r0, r3
   10da0:	bl	1095c <printf@plt>
   10da4:	ldr	r3, [fp, #-8]
   10da8:	add	r3, r3, #1
   10dac:	str	r3, [fp, #-8]
   10db0:	ldr	r0, [fp, #-12]
   10db4:	bl	120c8 <lista_apaga@@Base>
   10db8:	ldr	r3, [fp, #-8]
   10dbc:	cmp	r3, #0
   10dc0:	bne	10dd8 <teste_lista_nova@@Base+0xdc>
   10dc4:	ldr	r3, [pc, #60]	; 10e08 <teste_lista_nova@@Base+0x10c>
   10dc8:	add	r3, pc, r3
   10dcc:	mov	r0, r3
   10dd0:	bl	1098c <puts@plt>
   10dd4:	b	10de0 <teste_lista_nova@@Base+0xe4>
   10dd8:	mov	r0, #10
   10ddc:	bl	109d4 <putchar@plt>
   10de0:	ldr	r3, [fp, #-8]
   10de4:	mov	r0, r3
   10de8:	sub	sp, fp, #4
   10dec:	ldr	fp, [sp]
   10df0:	add	sp, sp, #4
   10df4:	pop	{pc}		; (ldr pc, [sp], #4)
   10df8:	andeq	r1, r0, r4, asr #23
   10dfc:			; <UNDEFINED> instruction: 0x00001bb0
   10e00:	andeq	r1, r0, r0, lsr #23
   10e04:	andeq	r1, r0, r0, ror fp
   10e08:	andeq	r1, r0, ip, lsr fp

00010e0c <teste_lista_insere@@Base>:
   10e0c:	str	fp, [sp, #-8]!
   10e10:	str	lr, [sp, #4]
   10e14:	add	fp, sp, #4
   10e18:	sub	sp, sp, #24
   10e1c:	mov	r3, #0
   10e20:	str	r3, [fp, #-8]
   10e24:	ldr	r3, [pc, #1276]	; 11328 <teste_lista_insere@@Base+0x51c>
   10e28:	add	r3, pc, r3
   10e2c:	str	r3, [fp, #-12]
   10e30:	ldr	r3, [pc, #1268]	; 1132c <teste_lista_insere@@Base+0x520>
   10e34:	add	r3, pc, r3
   10e38:	str	r3, [fp, #-16]
   10e3c:	ldr	r2, [fp, #-12]
   10e40:	ldr	r1, [fp, #-12]
   10e44:	mov	r0, #2
   10e48:	bl	10adc <_l@@Base>
   10e4c:	str	r0, [fp, #-20]	; 0xffffffec
   10e50:	ldr	r3, [pc, #1240]	; 11330 <teste_lista_insere@@Base+0x524>
   10e54:	add	r3, pc, r3
   10e58:	mov	r0, r3
   10e5c:	bl	1095c <printf@plt>
   10e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   10e64:	ldr	r3, [r3]
   10e68:	ldr	r3, [r3, #4]
   10e6c:	mov	r2, r3
   10e70:	ldr	r1, [fp, #-16]
   10e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   10e78:	bl	12240 <lista_insere@@Base>
   10e7c:	str	r0, [fp, #-24]	; 0xffffffe8
   10e80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e84:	cmp	r3, #0
   10e88:	bne	10ea8 <teste_lista_insere@@Base+0x9c>
   10e8c:	ldr	r3, [pc, #1184]	; 11334 <teste_lista_insere@@Base+0x528>
   10e90:	add	r3, pc, r3
   10e94:	mov	r0, r3
   10e98:	bl	1095c <printf@plt>
   10e9c:	ldr	r3, [fp, #-8]
   10ea0:	add	r3, r3, #1
   10ea4:	str	r3, [fp, #-8]
   10ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10eac:	ldr	r3, [r3, #8]
   10eb0:	cmp	r3, #3
   10eb4:	beq	10ed4 <teste_lista_insere@@Base+0xc8>
   10eb8:	ldr	r3, [pc, #1144]	; 11338 <teste_lista_insere@@Base+0x52c>
   10ebc:	add	r3, pc, r3
   10ec0:	mov	r0, r3
   10ec4:	bl	1095c <printf@plt>
   10ec8:	ldr	r3, [fp, #-8]
   10ecc:	add	r3, r3, #1
   10ed0:	str	r3, [fp, #-8]
   10ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ed8:	ldr	r3, [r3, #8]
   10edc:	cmp	r3, #3
   10ee0:	beq	10f14 <teste_lista_insere@@Base+0x108>
   10ee4:	ldr	r3, [fp, #-8]
   10ee8:	cmp	r3, #0
   10eec:	bne	10f04 <teste_lista_insere@@Base+0xf8>
   10ef0:	ldr	r3, [pc, #1092]	; 1133c <teste_lista_insere@@Base+0x530>
   10ef4:	add	r3, pc, r3
   10ef8:	mov	r0, r3
   10efc:	bl	1098c <puts@plt>
   10f00:	b	10f0c <teste_lista_insere@@Base+0x100>
   10f04:	mov	r0, #10
   10f08:	bl	109d4 <putchar@plt>
   10f0c:	ldr	r3, [fp, #-8]
   10f10:	b	11314 <teste_lista_insere@@Base+0x508>
   10f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f18:	ldr	r3, [r3]
   10f1c:	ldr	r3, [r3]
   10f20:	ldr	r1, [fp, #-12]
   10f24:	mov	r0, r3
   10f28:	bl	10950 <strcmp@plt>
   10f2c:	mov	r3, r0
   10f30:	cmp	r3, #0
   10f34:	bne	10f8c <teste_lista_insere@@Base+0x180>
   10f38:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f3c:	ldr	r3, [r3]
   10f40:	ldr	r3, [r3, #4]
   10f44:	ldr	r3, [r3]
   10f48:	ldr	r1, [fp, #-16]
   10f4c:	mov	r0, r3
   10f50:	bl	10950 <strcmp@plt>
   10f54:	mov	r3, r0
   10f58:	cmp	r3, #0
   10f5c:	bne	10f8c <teste_lista_insere@@Base+0x180>
   10f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f64:	ldr	r3, [r3]
   10f68:	ldr	r3, [r3, #4]
   10f6c:	ldr	r3, [r3, #4]
   10f70:	ldr	r3, [r3]
   10f74:	ldr	r1, [fp, #-12]
   10f78:	mov	r0, r3
   10f7c:	bl	10950 <strcmp@plt>
   10f80:	mov	r3, r0
   10f84:	cmp	r3, #0
   10f88:	beq	10fa8 <teste_lista_insere@@Base+0x19c>
   10f8c:	ldr	r3, [pc, #940]	; 11340 <teste_lista_insere@@Base+0x534>
   10f90:	add	r3, pc, r3
   10f94:	mov	r0, r3
   10f98:	bl	1095c <printf@plt>
   10f9c:	ldr	r3, [fp, #-8]
   10fa0:	add	r3, r3, #1
   10fa4:	str	r3, [fp, #-8]
   10fa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fac:	ldr	r3, [r3]
   10fb0:	mov	r2, r3
   10fb4:	ldr	r1, [fp, #-16]
   10fb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fbc:	bl	12240 <lista_insere@@Base>
   10fc0:	str	r0, [fp, #-24]	; 0xffffffe8
   10fc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fc8:	ldr	r3, [r3]
   10fcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10fd0:	cmp	r2, r3
   10fd4:	beq	10ff4 <teste_lista_insere@@Base+0x1e8>
   10fd8:	ldr	r3, [pc, #868]	; 11344 <teste_lista_insere@@Base+0x538>
   10fdc:	add	r3, pc, r3
   10fe0:	mov	r0, r3
   10fe4:	bl	1095c <printf@plt>
   10fe8:	ldr	r3, [fp, #-8]
   10fec:	add	r3, r3, #1
   10ff0:	str	r3, [fp, #-8]
   10ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ff8:	ldr	r3, [r3, #8]
   10ffc:	cmp	r3, #4
   11000:	beq	11020 <teste_lista_insere@@Base+0x214>
   11004:	ldr	r3, [pc, #828]	; 11348 <teste_lista_insere@@Base+0x53c>
   11008:	add	r3, pc, r3
   1100c:	mov	r0, r3
   11010:	bl	1095c <printf@plt>
   11014:	ldr	r3, [fp, #-8]
   11018:	add	r3, r3, #1
   1101c:	str	r3, [fp, #-8]
   11020:	ldr	r3, [fp, #-20]	; 0xffffffec
   11024:	ldr	r3, [r3, #8]
   11028:	cmp	r3, #4
   1102c:	beq	11060 <teste_lista_insere@@Base+0x254>
   11030:	ldr	r3, [fp, #-8]
   11034:	cmp	r3, #0
   11038:	bne	11050 <teste_lista_insere@@Base+0x244>
   1103c:	ldr	r3, [pc, #776]	; 1134c <teste_lista_insere@@Base+0x540>
   11040:	add	r3, pc, r3
   11044:	mov	r0, r3
   11048:	bl	1098c <puts@plt>
   1104c:	b	11058 <teste_lista_insere@@Base+0x24c>
   11050:	mov	r0, #10
   11054:	bl	109d4 <putchar@plt>
   11058:	ldr	r3, [fp, #-8]
   1105c:	b	11314 <teste_lista_insere@@Base+0x508>
   11060:	ldr	r3, [fp, #-20]	; 0xffffffec
   11064:	ldr	r3, [r3]
   11068:	ldr	r3, [r3]
   1106c:	ldr	r1, [fp, #-16]
   11070:	mov	r0, r3
   11074:	bl	10950 <strcmp@plt>
   11078:	mov	r3, r0
   1107c:	cmp	r3, #0
   11080:	bne	11108 <teste_lista_insere@@Base+0x2fc>
   11084:	ldr	r3, [fp, #-20]	; 0xffffffec
   11088:	ldr	r3, [r3]
   1108c:	ldr	r3, [r3, #4]
   11090:	ldr	r3, [r3]
   11094:	ldr	r1, [fp, #-12]
   11098:	mov	r0, r3
   1109c:	bl	10950 <strcmp@plt>
   110a0:	mov	r3, r0
   110a4:	cmp	r3, #0
   110a8:	bne	11108 <teste_lista_insere@@Base+0x2fc>
   110ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   110b0:	ldr	r3, [r3]
   110b4:	ldr	r3, [r3, #4]
   110b8:	ldr	r3, [r3, #4]
   110bc:	ldr	r3, [r3]
   110c0:	ldr	r1, [fp, #-16]
   110c4:	mov	r0, r3
   110c8:	bl	10950 <strcmp@plt>
   110cc:	mov	r3, r0
   110d0:	cmp	r3, #0
   110d4:	bne	11108 <teste_lista_insere@@Base+0x2fc>
   110d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   110dc:	ldr	r3, [r3]
   110e0:	ldr	r3, [r3, #4]
   110e4:	ldr	r3, [r3, #4]
   110e8:	ldr	r3, [r3, #4]
   110ec:	ldr	r3, [r3]
   110f0:	ldr	r1, [fp, #-12]
   110f4:	mov	r0, r3
   110f8:	bl	10950 <strcmp@plt>
   110fc:	mov	r3, r0
   11100:	cmp	r3, #0
   11104:	beq	11124 <teste_lista_insere@@Base+0x318>
   11108:	ldr	r3, [pc, #576]	; 11350 <teste_lista_insere@@Base+0x544>
   1110c:	add	r3, pc, r3
   11110:	mov	r0, r3
   11114:	bl	1095c <printf@plt>
   11118:	ldr	r3, [fp, #-8]
   1111c:	add	r3, r3, #1
   11120:	str	r3, [fp, #-8]
   11124:	mov	r2, #0
   11128:	ldr	r3, [pc, #548]	; 11354 <teste_lista_insere@@Base+0x548>
   1112c:	add	r3, pc, r3
   11130:	mov	r1, r3
   11134:	ldr	r0, [fp, #-20]	; 0xffffffec
   11138:	bl	12240 <lista_insere@@Base>
   1113c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11140:	ldr	r3, [r3, #8]
   11144:	cmp	r3, #5
   11148:	beq	11168 <teste_lista_insere@@Base+0x35c>
   1114c:	ldr	r3, [pc, #516]	; 11358 <teste_lista_insere@@Base+0x54c>
   11150:	add	r3, pc, r3
   11154:	mov	r0, r3
   11158:	bl	1095c <printf@plt>
   1115c:	ldr	r3, [fp, #-8]
   11160:	add	r3, r3, #1
   11164:	str	r3, [fp, #-8]
   11168:	ldr	r3, [fp, #-20]	; 0xffffffec
   1116c:	ldr	r3, [r3, #8]
   11170:	cmp	r3, #5
   11174:	beq	111a8 <teste_lista_insere@@Base+0x39c>
   11178:	ldr	r3, [fp, #-8]
   1117c:	cmp	r3, #0
   11180:	bne	11198 <teste_lista_insere@@Base+0x38c>
   11184:	ldr	r3, [pc, #464]	; 1135c <teste_lista_insere@@Base+0x550>
   11188:	add	r3, pc, r3
   1118c:	mov	r0, r3
   11190:	bl	1098c <puts@plt>
   11194:	b	111a0 <teste_lista_insere@@Base+0x394>
   11198:	mov	r0, #10
   1119c:	bl	109d4 <putchar@plt>
   111a0:	ldr	r3, [fp, #-8]
   111a4:	b	11314 <teste_lista_insere@@Base+0x508>
   111a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   111ac:	ldr	r3, [r3]
   111b0:	ldr	r3, [r3, #4]
   111b4:	ldr	r3, [r3, #4]
   111b8:	ldr	r3, [r3, #4]
   111bc:	ldr	r3, [r3, #4]
   111c0:	ldr	r3, [r3]
   111c4:	ldr	r2, [pc, #404]	; 11360 <teste_lista_insere@@Base+0x554>
   111c8:	add	r2, pc, r2
   111cc:	mov	r1, r2
   111d0:	mov	r0, r3
   111d4:	bl	10950 <strcmp@plt>
   111d8:	mov	r3, r0
   111dc:	cmp	r3, #0
   111e0:	beq	11200 <teste_lista_insere@@Base+0x3f4>
   111e4:	ldr	r3, [pc, #376]	; 11364 <teste_lista_insere@@Base+0x558>
   111e8:	add	r3, pc, r3
   111ec:	mov	r0, r3
   111f0:	bl	1095c <printf@plt>
   111f4:	ldr	r3, [fp, #-8]
   111f8:	add	r3, r3, #1
   111fc:	str	r3, [fp, #-8]
   11200:	ldr	r0, [fp, #-20]	; 0xffffffec
   11204:	bl	120c8 <lista_apaga@@Base>
   11208:	bl	12070 <lista_nova@@Base>
   1120c:	str	r0, [fp, #-20]	; 0xffffffec
   11210:	mov	r2, #0
   11214:	ldr	r3, [pc, #332]	; 11368 <teste_lista_insere@@Base+0x55c>
   11218:	add	r3, pc, r3
   1121c:	mov	r1, r3
   11220:	ldr	r0, [fp, #-20]	; 0xffffffec
   11224:	bl	12240 <lista_insere@@Base>
   11228:	ldr	r3, [fp, #-20]	; 0xffffffec
   1122c:	ldr	r3, [r3, #8]
   11230:	cmp	r3, #1
   11234:	beq	11254 <teste_lista_insere@@Base+0x448>
   11238:	ldr	r3, [pc, #300]	; 1136c <teste_lista_insere@@Base+0x560>
   1123c:	add	r3, pc, r3
   11240:	mov	r0, r3
   11244:	bl	1095c <printf@plt>
   11248:	ldr	r3, [fp, #-8]
   1124c:	add	r3, r3, #1
   11250:	str	r3, [fp, #-8]
   11254:	ldr	r0, [fp, #-20]	; 0xffffffec
   11258:	bl	1218c <lista_tamanho@@Base>
   1125c:	mov	r3, r0
   11260:	cmp	r3, #1
   11264:	beq	11298 <teste_lista_insere@@Base+0x48c>
   11268:	ldr	r3, [fp, #-8]
   1126c:	cmp	r3, #0
   11270:	bne	11288 <teste_lista_insere@@Base+0x47c>
   11274:	ldr	r3, [pc, #244]	; 11370 <teste_lista_insere@@Base+0x564>
   11278:	add	r3, pc, r3
   1127c:	mov	r0, r3
   11280:	bl	1098c <puts@plt>
   11284:	b	11290 <teste_lista_insere@@Base+0x484>
   11288:	mov	r0, #10
   1128c:	bl	109d4 <putchar@plt>
   11290:	ldr	r3, [fp, #-8]
   11294:	b	11314 <teste_lista_insere@@Base+0x508>
   11298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1129c:	ldr	r3, [r3]
   112a0:	ldr	r3, [r3]
   112a4:	ldr	r2, [pc, #200]	; 11374 <teste_lista_insere@@Base+0x568>
   112a8:	add	r2, pc, r2
   112ac:	mov	r1, r2
   112b0:	mov	r0, r3
   112b4:	bl	10950 <strcmp@plt>
   112b8:	mov	r3, r0
   112bc:	cmp	r3, #0
   112c0:	beq	112e0 <teste_lista_insere@@Base+0x4d4>
   112c4:	ldr	r3, [pc, #172]	; 11378 <teste_lista_insere@@Base+0x56c>
   112c8:	add	r3, pc, r3
   112cc:	mov	r0, r3
   112d0:	bl	1095c <printf@plt>
   112d4:	ldr	r3, [fp, #-8]
   112d8:	add	r3, r3, #1
   112dc:	str	r3, [fp, #-8]
   112e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   112e4:	bl	120c8 <lista_apaga@@Base>
   112e8:	ldr	r3, [fp, #-8]
   112ec:	cmp	r3, #0
   112f0:	bne	11308 <teste_lista_insere@@Base+0x4fc>
   112f4:	ldr	r3, [pc, #128]	; 1137c <teste_lista_insere@@Base+0x570>
   112f8:	add	r3, pc, r3
   112fc:	mov	r0, r3
   11300:	bl	1098c <puts@plt>
   11304:	b	11310 <teste_lista_insere@@Base+0x504>
   11308:	mov	r0, #10
   1130c:	bl	109d4 <putchar@plt>
   11310:	ldr	r3, [fp, #-8]
   11314:	mov	r0, r3
   11318:	sub	sp, fp, #4
   1131c:	ldr	fp, [sp]
   11320:	add	sp, sp, #4
   11324:	pop	{pc}		; (ldr pc, [sp], #4)
   11328:	andeq	r1, r0, r4, lsl #22
   1132c:	strdeq	r1, [r0], -ip
   11330:	andeq	r1, r0, r4, ror #21
   11334:			; <UNDEFINED> instruction: 0x00001abc
   11338:			; <UNDEFINED> instruction: 0x00001abc
   1133c:	andeq	r1, r0, r0, lsl sl
   11340:	andeq	r1, r0, r4, lsr #20
   11344:	andeq	r1, r0, r0, lsl sl
   11348:	andeq	r1, r0, r4, lsl sl
   1134c:	andeq	r1, r0, r4, asr #17
   11350:	andeq	r1, r0, r8, lsr #17
   11354:	andeq	r1, r0, r4, lsl #16
   11358:	andeq	r1, r0, r8, lsl #18
   1135c:	andeq	r1, r0, ip, ror r7
   11360:	andeq	r1, r0, r8, ror #14
   11364:	andeq	r1, r0, ip, asr #15
   11368:	andeq	r1, r0, r8, lsl r7
   1136c:	andeq	r1, r0, r8, asr r8
   11370:	andeq	r1, r0, ip, lsl #13
   11374:	andeq	r1, r0, r8, lsl #13
   11378:	andeq	r1, r0, ip, ror #13
   1137c:	andeq	r1, r0, ip, lsl #12

00011380 <teste_lista_remove@@Base>:
   11380:	str	fp, [sp, #-8]!
   11384:	str	lr, [sp, #4]
   11388:	add	fp, sp, #4
   1138c:	sub	sp, sp, #24
   11390:	mov	r3, #0
   11394:	str	r3, [fp, #-8]
   11398:	ldr	r3, [pc, #552]	; 115c8 <teste_lista_remove@@Base+0x248>
   1139c:	add	r3, pc, r3
   113a0:	str	r3, [sp, #4]
   113a4:	ldr	r3, [pc, #544]	; 115cc <teste_lista_remove@@Base+0x24c>
   113a8:	add	r3, pc, r3
   113ac:	str	r3, [sp]
   113b0:	ldr	r3, [pc, #536]	; 115d0 <teste_lista_remove@@Base+0x250>
   113b4:	add	r3, pc, r3
   113b8:	ldr	r2, [pc, #532]	; 115d4 <teste_lista_remove@@Base+0x254>
   113bc:	add	r2, pc, r2
   113c0:	ldr	r1, [pc, #528]	; 115d8 <teste_lista_remove@@Base+0x258>
   113c4:	add	r1, pc, r1
   113c8:	mov	r0, #5
   113cc:	bl	10adc <_l@@Base>
   113d0:	str	r0, [fp, #-12]
   113d4:	ldr	r3, [pc, #512]	; 115dc <teste_lista_remove@@Base+0x25c>
   113d8:	add	r3, pc, r3
   113dc:	mov	r0, r3
   113e0:	bl	1095c <printf@plt>
   113e4:	ldr	r3, [fp, #-12]
   113e8:	ldr	r3, [r3]
   113ec:	ldr	r3, [r3, #4]
   113f0:	ldr	r3, [r3, #4]
   113f4:	ldr	r3, [r3, #4]
   113f8:	mov	r1, r3
   113fc:	ldr	r0, [fp, #-12]
   11400:	bl	123fc <lista_remove@@Base>
   11404:	str	r0, [fp, #-16]
   11408:	ldr	r3, [fp, #-12]
   1140c:	ldr	r3, [r3, #4]
   11410:	ldr	r2, [fp, #-16]
   11414:	cmp	r2, r3
   11418:	beq	11438 <teste_lista_remove@@Base+0xb8>
   1141c:	ldr	r3, [pc, #444]	; 115e0 <teste_lista_remove@@Base+0x260>
   11420:	add	r3, pc, r3
   11424:	mov	r0, r3
   11428:	bl	1095c <printf@plt>
   1142c:	ldr	r3, [fp, #-8]
   11430:	add	r3, r3, #1
   11434:	str	r3, [fp, #-8]
   11438:	ldr	r3, [fp, #-12]
   1143c:	ldr	r3, [r3, #8]
   11440:	cmp	r3, #4
   11444:	beq	11464 <teste_lista_remove@@Base+0xe4>
   11448:	ldr	r3, [pc, #404]	; 115e4 <teste_lista_remove@@Base+0x264>
   1144c:	add	r3, pc, r3
   11450:	mov	r0, r3
   11454:	bl	1095c <printf@plt>
   11458:	ldr	r3, [fp, #-8]
   1145c:	add	r3, r3, #1
   11460:	str	r3, [fp, #-8]
   11464:	ldr	r3, [fp, #-12]
   11468:	ldr	r3, [r3]
   1146c:	ldr	r3, [r3]
   11470:	ldr	r2, [pc, #368]	; 115e8 <teste_lista_remove@@Base+0x268>
   11474:	add	r2, pc, r2
   11478:	mov	r1, r2
   1147c:	mov	r0, r3
   11480:	bl	10950 <strcmp@plt>
   11484:	mov	r3, r0
   11488:	cmp	r3, #0
   1148c:	bne	1152c <teste_lista_remove@@Base+0x1ac>
   11490:	ldr	r3, [fp, #-12]
   11494:	ldr	r3, [r3]
   11498:	ldr	r3, [r3, #4]
   1149c:	ldr	r3, [r3]
   114a0:	ldr	r2, [pc, #324]	; 115ec <teste_lista_remove@@Base+0x26c>
   114a4:	add	r2, pc, r2
   114a8:	mov	r1, r2
   114ac:	mov	r0, r3
   114b0:	bl	10950 <strcmp@plt>
   114b4:	mov	r3, r0
   114b8:	cmp	r3, #0
   114bc:	bne	1152c <teste_lista_remove@@Base+0x1ac>
   114c0:	ldr	r3, [fp, #-12]
   114c4:	ldr	r3, [r3]
   114c8:	ldr	r3, [r3, #4]
   114cc:	ldr	r3, [r3, #4]
   114d0:	ldr	r3, [r3]
   114d4:	ldr	r2, [pc, #276]	; 115f0 <teste_lista_remove@@Base+0x270>
   114d8:	add	r2, pc, r2
   114dc:	mov	r1, r2
   114e0:	mov	r0, r3
   114e4:	bl	10950 <strcmp@plt>
   114e8:	mov	r3, r0
   114ec:	cmp	r3, #0
   114f0:	bne	1152c <teste_lista_remove@@Base+0x1ac>
   114f4:	ldr	r3, [fp, #-12]
   114f8:	ldr	r3, [r3]
   114fc:	ldr	r3, [r3, #4]
   11500:	ldr	r3, [r3, #4]
   11504:	ldr	r3, [r3, #4]
   11508:	ldr	r3, [r3]
   1150c:	ldr	r2, [pc, #224]	; 115f4 <teste_lista_remove@@Base+0x274>
   11510:	add	r2, pc, r2
   11514:	mov	r1, r2
   11518:	mov	r0, r3
   1151c:	bl	10950 <strcmp@plt>
   11520:	mov	r3, r0
   11524:	cmp	r3, #0
   11528:	beq	11548 <teste_lista_remove@@Base+0x1c8>
   1152c:	ldr	r3, [pc, #196]	; 115f8 <teste_lista_remove@@Base+0x278>
   11530:	add	r3, pc, r3
   11534:	mov	r0, r3
   11538:	bl	1095c <printf@plt>
   1153c:	ldr	r3, [fp, #-8]
   11540:	add	r3, r3, #1
   11544:	str	r3, [fp, #-8]
   11548:	mov	r1, #0
   1154c:	ldr	r0, [fp, #-12]
   11550:	bl	123fc <lista_remove@@Base>
   11554:	str	r0, [fp, #-16]
   11558:	ldr	r3, [fp, #-16]
   1155c:	cmp	r3, #0
   11560:	beq	11580 <teste_lista_remove@@Base+0x200>
   11564:	ldr	r3, [pc, #144]	; 115fc <teste_lista_remove@@Base+0x27c>
   11568:	add	r3, pc, r3
   1156c:	mov	r0, r3
   11570:	bl	1095c <printf@plt>
   11574:	ldr	r3, [fp, #-8]
   11578:	add	r3, r3, #1
   1157c:	str	r3, [fp, #-8]
   11580:	ldr	r0, [fp, #-12]
   11584:	bl	120c8 <lista_apaga@@Base>
   11588:	ldr	r3, [fp, #-8]
   1158c:	cmp	r3, #0
   11590:	bne	115a8 <teste_lista_remove@@Base+0x228>
   11594:	ldr	r3, [pc, #100]	; 11600 <teste_lista_remove@@Base+0x280>
   11598:	add	r3, pc, r3
   1159c:	mov	r0, r3
   115a0:	bl	1098c <puts@plt>
   115a4:	b	115b0 <teste_lista_remove@@Base+0x230>
   115a8:	mov	r0, #10
   115ac:	bl	109d4 <putchar@plt>
   115b0:	ldr	r3, [fp, #-8]
   115b4:	mov	r0, r3
   115b8:	sub	sp, fp, #4
   115bc:	ldr	fp, [sp]
   115c0:	add	sp, sp, #4
   115c4:	pop	{pc}		; (ldr pc, [sp], #4)
   115c8:	andeq	r1, r0, r0, asr #14
   115cc:	andeq	r1, r0, r8, lsr r7
   115d0:	andeq	r1, r0, ip, lsl r7
   115d4:	andeq	r1, r0, r8, lsl r7
   115d8:	andeq	r1, r0, r4, lsl r7
   115dc:	andeq	r1, r0, ip, lsl #14
   115e0:	ldrdeq	r1, [r0], -r8
   115e4:	andeq	r1, r0, r8, ror #13
   115e8:	andeq	r1, r0, r4, ror #12
   115ec:	andeq	r1, r0, r0, lsr r6
   115f0:	strdeq	r1, [r0], -r8
   115f4:	andeq	r1, r0, ip, asr #11
   115f8:	andeq	r1, r0, r0, asr #12
   115fc:	andeq	r1, r0, r0, asr #12
   11600:	andeq	r1, r0, ip, ror #6

00011604 <teste_lista_pesquisa@@Base>:
   11604:	str	fp, [sp, #-8]!
   11608:	str	lr, [sp, #4]
   1160c:	add	fp, sp, #4
   11610:	sub	sp, sp, #32
   11614:	mov	r3, #0
   11618:	str	r3, [fp, #-8]
   1161c:	ldr	r3, [pc, #456]	; 117ec <teste_lista_pesquisa@@Base+0x1e8>
   11620:	add	r3, pc, r3
   11624:	str	r3, [fp, #-12]
   11628:	ldr	r3, [pc, #448]	; 117f0 <teste_lista_pesquisa@@Base+0x1ec>
   1162c:	add	r3, pc, r3
   11630:	str	r3, [fp, #-16]
   11634:	ldr	r3, [fp, #-12]
   11638:	str	r3, [sp, #12]
   1163c:	ldr	r3, [fp, #-12]
   11640:	str	r3, [sp, #8]
   11644:	ldr	r3, [fp, #-16]
   11648:	str	r3, [sp, #4]
   1164c:	ldr	r3, [fp, #-12]
   11650:	str	r3, [sp]
   11654:	ldr	r3, [fp, #-12]
   11658:	ldr	r2, [fp, #-12]
   1165c:	ldr	r1, [fp, #-12]
   11660:	mov	r0, #7
   11664:	bl	10adc <_l@@Base>
   11668:	str	r0, [fp, #-20]	; 0xffffffec
   1166c:	ldr	r3, [pc, #384]	; 117f4 <teste_lista_pesquisa@@Base+0x1f0>
   11670:	add	r3, pc, r3
   11674:	mov	r0, r3
   11678:	bl	1095c <printf@plt>
   1167c:	mov	r2, #0
   11680:	ldr	r1, [fp, #-16]
   11684:	ldr	r0, [fp, #-20]	; 0xffffffec
   11688:	bl	12510 <lista_pesquisa@@Base>
   1168c:	mov	r2, r0
   11690:	ldr	r3, [fp, #-20]	; 0xffffffec
   11694:	ldr	r3, [r3]
   11698:	ldr	r3, [r3, #4]
   1169c:	ldr	r3, [r3, #4]
   116a0:	ldr	r3, [r3, #4]
   116a4:	ldr	r3, [r3, #4]
   116a8:	cmp	r2, r3
   116ac:	beq	116cc <teste_lista_pesquisa@@Base+0xc8>
   116b0:	ldr	r3, [pc, #320]	; 117f8 <teste_lista_pesquisa@@Base+0x1f4>
   116b4:	add	r3, pc, r3
   116b8:	mov	r0, r3
   116bc:	bl	1095c <printf@plt>
   116c0:	ldr	r3, [fp, #-8]
   116c4:	add	r3, r3, #1
   116c8:	str	r3, [fp, #-8]
   116cc:	mov	r2, #0
   116d0:	ldr	r3, [pc, #292]	; 117fc <teste_lista_pesquisa@@Base+0x1f8>
   116d4:	add	r3, pc, r3
   116d8:	mov	r1, r3
   116dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   116e0:	bl	12510 <lista_pesquisa@@Base>
   116e4:	mov	r3, r0
   116e8:	cmp	r3, #0
   116ec:	beq	1170c <teste_lista_pesquisa@@Base+0x108>
   116f0:	ldr	r3, [pc, #264]	; 11800 <teste_lista_pesquisa@@Base+0x1fc>
   116f4:	add	r3, pc, r3
   116f8:	mov	r0, r3
   116fc:	bl	1095c <printf@plt>
   11700:	ldr	r3, [fp, #-8]
   11704:	add	r3, r3, #1
   11708:	str	r3, [fp, #-8]
   1170c:	mov	r2, #1
   11710:	ldr	r1, [fp, #-12]
   11714:	ldr	r0, [fp, #-20]	; 0xffffffec
   11718:	bl	12510 <lista_pesquisa@@Base>
   1171c:	mov	r2, r0
   11720:	ldr	r3, [fp, #-20]	; 0xffffffec
   11724:	ldr	r3, [r3]
   11728:	ldr	r3, [r3, #4]
   1172c:	ldr	r3, [r3, #4]
   11730:	ldr	r3, [r3, #4]
   11734:	ldr	r3, [r3, #4]
   11738:	ldr	r3, [r3, #4]
   1173c:	ldr	r3, [r3, #4]
   11740:	cmp	r2, r3
   11744:	beq	11764 <teste_lista_pesquisa@@Base+0x160>
   11748:	ldr	r3, [pc, #180]	; 11804 <teste_lista_pesquisa@@Base+0x200>
   1174c:	add	r3, pc, r3
   11750:	mov	r0, r3
   11754:	bl	1095c <printf@plt>
   11758:	ldr	r3, [fp, #-8]
   1175c:	add	r3, r3, #1
   11760:	str	r3, [fp, #-8]
   11764:	mov	r2, #1
   11768:	ldr	r3, [pc, #152]	; 11808 <teste_lista_pesquisa@@Base+0x204>
   1176c:	add	r3, pc, r3
   11770:	mov	r1, r3
   11774:	ldr	r0, [fp, #-20]	; 0xffffffec
   11778:	bl	12510 <lista_pesquisa@@Base>
   1177c:	mov	r3, r0
   11780:	cmp	r3, #0
   11784:	beq	117a4 <teste_lista_pesquisa@@Base+0x1a0>
   11788:	ldr	r3, [pc, #124]	; 1180c <teste_lista_pesquisa@@Base+0x208>
   1178c:	add	r3, pc, r3
   11790:	mov	r0, r3
   11794:	bl	1095c <printf@plt>
   11798:	ldr	r3, [fp, #-8]
   1179c:	add	r3, r3, #1
   117a0:	str	r3, [fp, #-8]
   117a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   117a8:	bl	120c8 <lista_apaga@@Base>
   117ac:	ldr	r3, [fp, #-8]
   117b0:	cmp	r3, #0
   117b4:	bne	117cc <teste_lista_pesquisa@@Base+0x1c8>
   117b8:	ldr	r3, [pc, #80]	; 11810 <teste_lista_pesquisa@@Base+0x20c>
   117bc:	add	r3, pc, r3
   117c0:	mov	r0, r3
   117c4:	bl	1098c <puts@plt>
   117c8:	b	117d4 <teste_lista_pesquisa@@Base+0x1d0>
   117cc:	mov	r0, #10
   117d0:	bl	109d4 <putchar@plt>
   117d4:	ldr	r3, [fp, #-8]
   117d8:	mov	r0, r3
   117dc:	sub	sp, fp, #4
   117e0:	ldr	fp, [sp]
   117e4:	add	sp, sp, #4
   117e8:	pop	{pc}		; (ldr pc, [sp], #4)
   117ec:	andeq	r1, r0, ip, lsl #6
   117f0:			; <UNDEFINED> instruction: 0x000015b0
   117f4:	andeq	r1, r0, r0, ror r5
   117f8:	andeq	r1, r0, r0, asr #10
   117fc:	andeq	r1, r0, r8, ror #10
   11800:	andeq	r1, r0, r0, asr r5
   11804:	andeq	r1, r0, r8, lsr #9
   11808:	ldrdeq	r1, [r0], -r0
   1180c:			; <UNDEFINED> instruction: 0x000014b8
   11810:	andeq	r1, r0, r8, asr #2

00011814 <teste_lista_ordena@@Base>:
   11814:	str	fp, [sp, #-8]!
   11818:	str	lr, [sp, #4]
   1181c:	add	fp, sp, #4
   11820:	sub	sp, sp, #24
   11824:	mov	r3, #0
   11828:	str	r3, [fp, #-8]
   1182c:	ldr	r3, [pc, #776]	; 11b3c <teste_lista_ordena@@Base+0x328>
   11830:	add	r3, pc, r3
   11834:	str	r3, [sp, #4]
   11838:	ldr	r3, [pc, #768]	; 11b40 <teste_lista_ordena@@Base+0x32c>
   1183c:	add	r3, pc, r3
   11840:	str	r3, [sp]
   11844:	ldr	r3, [pc, #760]	; 11b44 <teste_lista_ordena@@Base+0x330>
   11848:	add	r3, pc, r3
   1184c:	ldr	r2, [pc, #756]	; 11b48 <teste_lista_ordena@@Base+0x334>
   11850:	add	r2, pc, r2
   11854:	ldr	r1, [pc, #752]	; 11b4c <teste_lista_ordena@@Base+0x338>
   11858:	add	r1, pc, r1
   1185c:	mov	r0, #5
   11860:	bl	10adc <_l@@Base>
   11864:	str	r0, [fp, #-12]
   11868:	ldr	r3, [pc, #736]	; 11b50 <teste_lista_ordena@@Base+0x33c>
   1186c:	add	r3, pc, r3
   11870:	mov	r0, r3
   11874:	bl	1095c <printf@plt>
   11878:	mov	r0, #0
   1187c:	bl	1264c <lista_ordena@@Base>
   11880:	str	r0, [fp, #-16]
   11884:	ldr	r3, [fp, #-16]
   11888:	cmn	r3, #1
   1188c:	beq	118ac <teste_lista_ordena@@Base+0x98>
   11890:	ldr	r3, [pc, #700]	; 11b54 <teste_lista_ordena@@Base+0x340>
   11894:	add	r3, pc, r3
   11898:	mov	r0, r3
   1189c:	bl	1095c <printf@plt>
   118a0:	ldr	r3, [fp, #-8]
   118a4:	add	r3, r3, #1
   118a8:	str	r3, [fp, #-8]
   118ac:	ldr	r0, [fp, #-12]
   118b0:	bl	1264c <lista_ordena@@Base>
   118b4:	ldr	r3, [fp, #-12]
   118b8:	ldr	r3, [r3]
   118bc:	ldr	r3, [r3]
   118c0:	ldr	r2, [pc, #656]	; 11b58 <teste_lista_ordena@@Base+0x344>
   118c4:	add	r2, pc, r2
   118c8:	mov	r1, r2
   118cc:	mov	r0, r3
   118d0:	bl	10950 <strcmp@plt>
   118d4:	mov	r3, r0
   118d8:	cmp	r3, #0
   118dc:	bne	119b8 <teste_lista_ordena@@Base+0x1a4>
   118e0:	ldr	r3, [fp, #-12]
   118e4:	ldr	r3, [r3]
   118e8:	ldr	r3, [r3, #4]
   118ec:	ldr	r3, [r3]
   118f0:	ldr	r2, [pc, #612]	; 11b5c <teste_lista_ordena@@Base+0x348>
   118f4:	add	r2, pc, r2
   118f8:	mov	r1, r2
   118fc:	mov	r0, r3
   11900:	bl	10950 <strcmp@plt>
   11904:	mov	r3, r0
   11908:	cmp	r3, #0
   1190c:	bne	119b8 <teste_lista_ordena@@Base+0x1a4>
   11910:	ldr	r3, [fp, #-12]
   11914:	ldr	r3, [r3]
   11918:	ldr	r3, [r3, #4]
   1191c:	ldr	r3, [r3, #4]
   11920:	ldr	r3, [r3]
   11924:	ldr	r2, [pc, #564]	; 11b60 <teste_lista_ordena@@Base+0x34c>
   11928:	add	r2, pc, r2
   1192c:	mov	r1, r2
   11930:	mov	r0, r3
   11934:	bl	10950 <strcmp@plt>
   11938:	mov	r3, r0
   1193c:	cmp	r3, #0
   11940:	bne	119b8 <teste_lista_ordena@@Base+0x1a4>
   11944:	ldr	r3, [fp, #-12]
   11948:	ldr	r3, [r3]
   1194c:	ldr	r3, [r3, #4]
   11950:	ldr	r3, [r3, #4]
   11954:	ldr	r3, [r3, #4]
   11958:	ldr	r3, [r3]
   1195c:	ldr	r2, [pc, #512]	; 11b64 <teste_lista_ordena@@Base+0x350>
   11960:	add	r2, pc, r2
   11964:	mov	r1, r2
   11968:	mov	r0, r3
   1196c:	bl	10950 <strcmp@plt>
   11970:	mov	r3, r0
   11974:	cmp	r3, #0
   11978:	bne	119b8 <teste_lista_ordena@@Base+0x1a4>
   1197c:	ldr	r3, [fp, #-12]
   11980:	ldr	r3, [r3]
   11984:	ldr	r3, [r3, #4]
   11988:	ldr	r3, [r3, #4]
   1198c:	ldr	r3, [r3, #4]
   11990:	ldr	r3, [r3, #4]
   11994:	ldr	r3, [r3]
   11998:	ldr	r2, [pc, #456]	; 11b68 <teste_lista_ordena@@Base+0x354>
   1199c:	add	r2, pc, r2
   119a0:	mov	r1, r2
   119a4:	mov	r0, r3
   119a8:	bl	10950 <strcmp@plt>
   119ac:	mov	r3, r0
   119b0:	cmp	r3, #0
   119b4:	beq	119d4 <teste_lista_ordena@@Base+0x1c0>
   119b8:	ldr	r3, [pc, #428]	; 11b6c <teste_lista_ordena@@Base+0x358>
   119bc:	add	r3, pc, r3
   119c0:	mov	r0, r3
   119c4:	bl	1095c <printf@plt>
   119c8:	ldr	r3, [fp, #-8]
   119cc:	add	r3, r3, #1
   119d0:	str	r3, [fp, #-8]
   119d4:	ldr	r3, [fp, #-12]
   119d8:	ldr	r3, [r3, #4]
   119dc:	ldr	r3, [r3]
   119e0:	ldr	r2, [pc, #392]	; 11b70 <teste_lista_ordena@@Base+0x35c>
   119e4:	add	r2, pc, r2
   119e8:	mov	r1, r2
   119ec:	mov	r0, r3
   119f0:	bl	10950 <strcmp@plt>
   119f4:	mov	r3, r0
   119f8:	cmp	r3, #0
   119fc:	bne	11ad8 <teste_lista_ordena@@Base+0x2c4>
   11a00:	ldr	r3, [fp, #-12]
   11a04:	ldr	r3, [r3, #4]
   11a08:	ldr	r3, [r3, #8]
   11a0c:	ldr	r3, [r3]
   11a10:	ldr	r2, [pc, #348]	; 11b74 <teste_lista_ordena@@Base+0x360>
   11a14:	add	r2, pc, r2
   11a18:	mov	r1, r2
   11a1c:	mov	r0, r3
   11a20:	bl	10950 <strcmp@plt>
   11a24:	mov	r3, r0
   11a28:	cmp	r3, #0
   11a2c:	bne	11ad8 <teste_lista_ordena@@Base+0x2c4>
   11a30:	ldr	r3, [fp, #-12]
   11a34:	ldr	r3, [r3, #4]
   11a38:	ldr	r3, [r3, #8]
   11a3c:	ldr	r3, [r3, #8]
   11a40:	ldr	r3, [r3]
   11a44:	ldr	r2, [pc, #300]	; 11b78 <teste_lista_ordena@@Base+0x364>
   11a48:	add	r2, pc, r2
   11a4c:	mov	r1, r2
   11a50:	mov	r0, r3
   11a54:	bl	10950 <strcmp@plt>
   11a58:	mov	r3, r0
   11a5c:	cmp	r3, #0
   11a60:	bne	11ad8 <teste_lista_ordena@@Base+0x2c4>
   11a64:	ldr	r3, [fp, #-12]
   11a68:	ldr	r3, [r3, #4]
   11a6c:	ldr	r3, [r3, #8]
   11a70:	ldr	r3, [r3, #8]
   11a74:	ldr	r3, [r3, #8]
   11a78:	ldr	r3, [r3]
   11a7c:	ldr	r2, [pc, #248]	; 11b7c <teste_lista_ordena@@Base+0x368>
   11a80:	add	r2, pc, r2
   11a84:	mov	r1, r2
   11a88:	mov	r0, r3
   11a8c:	bl	10950 <strcmp@plt>
   11a90:	mov	r3, r0
   11a94:	cmp	r3, #0
   11a98:	bne	11ad8 <teste_lista_ordena@@Base+0x2c4>
   11a9c:	ldr	r3, [fp, #-12]
   11aa0:	ldr	r3, [r3, #4]
   11aa4:	ldr	r3, [r3, #8]
   11aa8:	ldr	r3, [r3, #8]
   11aac:	ldr	r3, [r3, #8]
   11ab0:	ldr	r3, [r3, #8]
   11ab4:	ldr	r3, [r3]
   11ab8:	ldr	r2, [pc, #192]	; 11b80 <teste_lista_ordena@@Base+0x36c>
   11abc:	add	r2, pc, r2
   11ac0:	mov	r1, r2
   11ac4:	mov	r0, r3
   11ac8:	bl	10950 <strcmp@plt>
   11acc:	mov	r3, r0
   11ad0:	cmp	r3, #0
   11ad4:	beq	11af4 <teste_lista_ordena@@Base+0x2e0>
   11ad8:	ldr	r3, [pc, #164]	; 11b84 <teste_lista_ordena@@Base+0x370>
   11adc:	add	r3, pc, r3
   11ae0:	mov	r0, r3
   11ae4:	bl	1095c <printf@plt>
   11ae8:	ldr	r3, [fp, #-8]
   11aec:	add	r3, r3, #1
   11af0:	str	r3, [fp, #-8]
   11af4:	ldr	r0, [fp, #-12]
   11af8:	bl	120c8 <lista_apaga@@Base>
   11afc:	ldr	r3, [fp, #-8]
   11b00:	cmp	r3, #0
   11b04:	bne	11b1c <teste_lista_ordena@@Base+0x308>
   11b08:	ldr	r3, [pc, #120]	; 11b88 <teste_lista_ordena@@Base+0x374>
   11b0c:	add	r3, pc, r3
   11b10:	mov	r0, r3
   11b14:	bl	1098c <puts@plt>
   11b18:	b	11b24 <teste_lista_ordena@@Base+0x310>
   11b1c:	mov	r0, #10
   11b20:	bl	109d4 <putchar@plt>
   11b24:	ldr	r3, [fp, #-8]
   11b28:	mov	r0, r3
   11b2c:	sub	sp, fp, #4
   11b30:	ldr	fp, [sp]
   11b34:	add	sp, sp, #4
   11b38:	pop	{pc}		; (ldr pc, [sp], #4)
   11b3c:	andeq	r1, r0, r0, ror #8
   11b40:	andeq	r1, r0, r8, asr r4
   11b44:	andeq	r1, r0, ip, lsr r4
   11b48:	andeq	r1, r0, r8, lsr r4
   11b4c:	andeq	r1, r0, r4, lsr r4
   11b50:	andeq	r1, r0, ip, lsr #8
   11b54:	andeq	r1, r0, r8, lsl r4
   11b58:	andeq	r1, r0, r8, asr #7
   11b5c:	muleq	r0, r4, r3
   11b60:	andeq	r1, r0, ip, ror #6
   11b64:	andeq	r1, r0, r0, lsr r3
   11b68:	andeq	r1, r0, r8, ror #5
   11b6c:	andeq	r1, r0, r0, lsr #6
   11b70:	andeq	r1, r0, r0, lsr #5
   11b74:	andeq	r1, r0, ip, ror r2
   11b78:	andeq	r1, r0, ip, asr #4
   11b7c:	andeq	r1, r0, r8, lsl #4
   11b80:	ldrdeq	r1, [r0], -r0
   11b84:	andeq	r1, r0, r0, asr #4
   11b88:	strdeq	r0, [r0], -r8

00011b8c <teste_lista_inverte@@Base>:
   11b8c:	str	fp, [sp, #-8]!
   11b90:	str	lr, [sp, #4]
   11b94:	add	fp, sp, #4
   11b98:	sub	sp, sp, #24
   11b9c:	mov	r3, #0
   11ba0:	str	r3, [fp, #-8]
   11ba4:	ldr	r3, [pc, #824]	; 11ee4 <teste_lista_inverte@@Base+0x358>
   11ba8:	add	r3, pc, r3
   11bac:	str	r3, [sp, #4]
   11bb0:	ldr	r3, [pc, #816]	; 11ee8 <teste_lista_inverte@@Base+0x35c>
   11bb4:	add	r3, pc, r3
   11bb8:	str	r3, [sp]
   11bbc:	ldr	r3, [pc, #808]	; 11eec <teste_lista_inverte@@Base+0x360>
   11bc0:	add	r3, pc, r3
   11bc4:	ldr	r2, [pc, #804]	; 11ef0 <teste_lista_inverte@@Base+0x364>
   11bc8:	add	r2, pc, r2
   11bcc:	ldr	r1, [pc, #800]	; 11ef4 <teste_lista_inverte@@Base+0x368>
   11bd0:	add	r1, pc, r1
   11bd4:	mov	r0, #5
   11bd8:	bl	10adc <_l@@Base>
   11bdc:	str	r0, [fp, #-12]
   11be0:	ldr	r3, [pc, #784]	; 11ef8 <teste_lista_inverte@@Base+0x36c>
   11be4:	add	r3, pc, r3
   11be8:	mov	r0, r3
   11bec:	bl	1095c <printf@plt>
   11bf0:	mov	r0, #0
   11bf4:	bl	1275c <lista_inverte@@Base>
   11bf8:	str	r0, [fp, #-16]
   11bfc:	ldr	r3, [fp, #-16]
   11c00:	cmn	r3, #1
   11c04:	beq	11c24 <teste_lista_inverte@@Base+0x98>
   11c08:	ldr	r3, [pc, #748]	; 11efc <teste_lista_inverte@@Base+0x370>
   11c0c:	add	r3, pc, r3
   11c10:	mov	r0, r3
   11c14:	bl	1095c <printf@plt>
   11c18:	ldr	r3, [fp, #-8]
   11c1c:	add	r3, r3, #1
   11c20:	str	r3, [fp, #-8]
   11c24:	ldr	r0, [fp, #-12]
   11c28:	bl	1275c <lista_inverte@@Base>
   11c2c:	str	r0, [fp, #-16]
   11c30:	ldr	r3, [fp, #-12]
   11c34:	ldr	r3, [r3, #8]
   11c38:	cmp	r3, #5
   11c3c:	beq	11c5c <teste_lista_inverte@@Base+0xd0>
   11c40:	ldr	r3, [pc, #696]	; 11f00 <teste_lista_inverte@@Base+0x374>
   11c44:	add	r3, pc, r3
   11c48:	mov	r0, r3
   11c4c:	bl	1095c <printf@plt>
   11c50:	ldr	r3, [fp, #-8]
   11c54:	add	r3, r3, #1
   11c58:	str	r3, [fp, #-8]
   11c5c:	ldr	r3, [fp, #-12]
   11c60:	ldr	r3, [r3]
   11c64:	ldr	r3, [r3]
   11c68:	ldr	r2, [pc, #660]	; 11f04 <teste_lista_inverte@@Base+0x378>
   11c6c:	add	r2, pc, r2
   11c70:	mov	r1, r2
   11c74:	mov	r0, r3
   11c78:	bl	10950 <strcmp@plt>
   11c7c:	mov	r3, r0
   11c80:	cmp	r3, #0
   11c84:	bne	11d60 <teste_lista_inverte@@Base+0x1d4>
   11c88:	ldr	r3, [fp, #-12]
   11c8c:	ldr	r3, [r3]
   11c90:	ldr	r3, [r3, #4]
   11c94:	ldr	r3, [r3]
   11c98:	ldr	r2, [pc, #616]	; 11f08 <teste_lista_inverte@@Base+0x37c>
   11c9c:	add	r2, pc, r2
   11ca0:	mov	r1, r2
   11ca4:	mov	r0, r3
   11ca8:	bl	10950 <strcmp@plt>
   11cac:	mov	r3, r0
   11cb0:	cmp	r3, #0
   11cb4:	bne	11d60 <teste_lista_inverte@@Base+0x1d4>
   11cb8:	ldr	r3, [fp, #-12]
   11cbc:	ldr	r3, [r3]
   11cc0:	ldr	r3, [r3, #4]
   11cc4:	ldr	r3, [r3, #4]
   11cc8:	ldr	r3, [r3]
   11ccc:	ldr	r2, [pc, #568]	; 11f0c <teste_lista_inverte@@Base+0x380>
   11cd0:	add	r2, pc, r2
   11cd4:	mov	r1, r2
   11cd8:	mov	r0, r3
   11cdc:	bl	10950 <strcmp@plt>
   11ce0:	mov	r3, r0
   11ce4:	cmp	r3, #0
   11ce8:	bne	11d60 <teste_lista_inverte@@Base+0x1d4>
   11cec:	ldr	r3, [fp, #-12]
   11cf0:	ldr	r3, [r3]
   11cf4:	ldr	r3, [r3, #4]
   11cf8:	ldr	r3, [r3, #4]
   11cfc:	ldr	r3, [r3, #4]
   11d00:	ldr	r3, [r3]
   11d04:	ldr	r2, [pc, #516]	; 11f10 <teste_lista_inverte@@Base+0x384>
   11d08:	add	r2, pc, r2
   11d0c:	mov	r1, r2
   11d10:	mov	r0, r3
   11d14:	bl	10950 <strcmp@plt>
   11d18:	mov	r3, r0
   11d1c:	cmp	r3, #0
   11d20:	bne	11d60 <teste_lista_inverte@@Base+0x1d4>
   11d24:	ldr	r3, [fp, #-12]
   11d28:	ldr	r3, [r3]
   11d2c:	ldr	r3, [r3, #4]
   11d30:	ldr	r3, [r3, #4]
   11d34:	ldr	r3, [r3, #4]
   11d38:	ldr	r3, [r3, #4]
   11d3c:	ldr	r3, [r3]
   11d40:	ldr	r2, [pc, #460]	; 11f14 <teste_lista_inverte@@Base+0x388>
   11d44:	add	r2, pc, r2
   11d48:	mov	r1, r2
   11d4c:	mov	r0, r3
   11d50:	bl	10950 <strcmp@plt>
   11d54:	mov	r3, r0
   11d58:	cmp	r3, #0
   11d5c:	beq	11d7c <teste_lista_inverte@@Base+0x1f0>
   11d60:	ldr	r3, [pc, #432]	; 11f18 <teste_lista_inverte@@Base+0x38c>
   11d64:	add	r3, pc, r3
   11d68:	mov	r0, r3
   11d6c:	bl	1095c <printf@plt>
   11d70:	ldr	r3, [fp, #-8]
   11d74:	add	r3, r3, #1
   11d78:	str	r3, [fp, #-8]
   11d7c:	ldr	r3, [fp, #-12]
   11d80:	ldr	r3, [r3, #4]
   11d84:	ldr	r3, [r3]
   11d88:	ldr	r2, [pc, #396]	; 11f1c <teste_lista_inverte@@Base+0x390>
   11d8c:	add	r2, pc, r2
   11d90:	mov	r1, r2
   11d94:	mov	r0, r3
   11d98:	bl	10950 <strcmp@plt>
   11d9c:	mov	r3, r0
   11da0:	cmp	r3, #0
   11da4:	bne	11e80 <teste_lista_inverte@@Base+0x2f4>
   11da8:	ldr	r3, [fp, #-12]
   11dac:	ldr	r3, [r3, #4]
   11db0:	ldr	r3, [r3, #8]
   11db4:	ldr	r3, [r3]
   11db8:	ldr	r2, [pc, #352]	; 11f20 <teste_lista_inverte@@Base+0x394>
   11dbc:	add	r2, pc, r2
   11dc0:	mov	r1, r2
   11dc4:	mov	r0, r3
   11dc8:	bl	10950 <strcmp@plt>
   11dcc:	mov	r3, r0
   11dd0:	cmp	r3, #0
   11dd4:	bne	11e80 <teste_lista_inverte@@Base+0x2f4>
   11dd8:	ldr	r3, [fp, #-12]
   11ddc:	ldr	r3, [r3, #4]
   11de0:	ldr	r3, [r3, #8]
   11de4:	ldr	r3, [r3, #8]
   11de8:	ldr	r3, [r3]
   11dec:	ldr	r2, [pc, #304]	; 11f24 <teste_lista_inverte@@Base+0x398>
   11df0:	add	r2, pc, r2
   11df4:	mov	r1, r2
   11df8:	mov	r0, r3
   11dfc:	bl	10950 <strcmp@plt>
   11e00:	mov	r3, r0
   11e04:	cmp	r3, #0
   11e08:	bne	11e80 <teste_lista_inverte@@Base+0x2f4>
   11e0c:	ldr	r3, [fp, #-12]
   11e10:	ldr	r3, [r3, #4]
   11e14:	ldr	r3, [r3, #8]
   11e18:	ldr	r3, [r3, #8]
   11e1c:	ldr	r3, [r3, #8]
   11e20:	ldr	r3, [r3]
   11e24:	ldr	r2, [pc, #252]	; 11f28 <teste_lista_inverte@@Base+0x39c>
   11e28:	add	r2, pc, r2
   11e2c:	mov	r1, r2
   11e30:	mov	r0, r3
   11e34:	bl	10950 <strcmp@plt>
   11e38:	mov	r3, r0
   11e3c:	cmp	r3, #0
   11e40:	bne	11e80 <teste_lista_inverte@@Base+0x2f4>
   11e44:	ldr	r3, [fp, #-12]
   11e48:	ldr	r3, [r3, #4]
   11e4c:	ldr	r3, [r3, #8]
   11e50:	ldr	r3, [r3, #8]
   11e54:	ldr	r3, [r3, #8]
   11e58:	ldr	r3, [r3, #8]
   11e5c:	ldr	r3, [r3]
   11e60:	ldr	r2, [pc, #196]	; 11f2c <teste_lista_inverte@@Base+0x3a0>
   11e64:	add	r2, pc, r2
   11e68:	mov	r1, r2
   11e6c:	mov	r0, r3
   11e70:	bl	10950 <strcmp@plt>
   11e74:	mov	r3, r0
   11e78:	cmp	r3, #0
   11e7c:	beq	11e9c <teste_lista_inverte@@Base+0x310>
   11e80:	ldr	r3, [pc, #168]	; 11f30 <teste_lista_inverte@@Base+0x3a4>
   11e84:	add	r3, pc, r3
   11e88:	mov	r0, r3
   11e8c:	bl	1095c <printf@plt>
   11e90:	ldr	r3, [fp, #-8]
   11e94:	add	r3, r3, #1
   11e98:	str	r3, [fp, #-8]
   11e9c:	ldr	r0, [fp, #-12]
   11ea0:	bl	120c8 <lista_apaga@@Base>
   11ea4:	ldr	r3, [fp, #-8]
   11ea8:	cmp	r3, #0
   11eac:	bne	11ec4 <teste_lista_inverte@@Base+0x338>
   11eb0:	ldr	r3, [pc, #124]	; 11f34 <teste_lista_inverte@@Base+0x3a8>
   11eb4:	add	r3, pc, r3
   11eb8:	mov	r0, r3
   11ebc:	bl	1098c <puts@plt>
   11ec0:	b	11ecc <teste_lista_inverte@@Base+0x340>
   11ec4:	mov	r0, #10
   11ec8:	bl	109d4 <putchar@plt>
   11ecc:	ldr	r3, [fp, #-8]
   11ed0:	mov	r0, r3
   11ed4:	sub	sp, fp, #4
   11ed8:	ldr	fp, [sp]
   11edc:	add	sp, sp, #4
   11ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ee4:	andeq	r1, r0, r8, ror #1
   11ee8:	andeq	r1, r0, r0, ror #1
   11eec:	andeq	r1, r0, r4, asr #1
   11ef0:	andeq	r1, r0, r0, asr #1
   11ef4:	strheq	r1, [r0], -ip
   11ef8:	andeq	r1, r0, r8, ror r1
   11efc:	andeq	r1, r0, r0, lsr #1
   11f00:	andeq	r1, r0, ip, lsr #2
   11f04:	andeq	r1, r0, r4, lsr #32
   11f08:	strdeq	r0, [r0], -r8
   11f0c:			; <UNDEFINED> instruction: 0x00000fb4
   11f10:	andeq	r0, r0, r0, lsl #31
   11f14:	andeq	r0, r0, r8, asr #30
   11f18:	andeq	r1, r0, r8, lsr r0
   11f1c:	andeq	r0, r0, r0, lsl #30
   11f20:	andeq	r0, r0, ip, asr #29
   11f24:	muleq	r0, r4, lr
   11f28:	andeq	r0, r0, ip, ror #28
   11f2c:	andeq	r0, r0, ip, lsr #28
   11f30:	muleq	r0, r8, lr
   11f34:	andeq	r0, r0, r0, asr sl

00011f38 <main@@Base>:
   11f38:	str	r4, [sp, #-12]!
   11f3c:	str	fp, [sp, #4]
   11f40:	str	lr, [sp, #8]
   11f44:	add	fp, sp, #8
   11f48:	sub	sp, sp, #12
   11f4c:	ldr	r4, [pc, #264]	; 1205c <main@@Base+0x124>
   11f50:	add	r4, pc, r4
   11f54:	ldr	r3, [pc, #260]	; 12060 <main@@Base+0x128>
   11f58:	ldr	r3, [r4, r3]
   11f5c:	ldr	r0, [r3]
   11f60:	mov	r3, #0
   11f64:	mov	r2, #2
   11f68:	mov	r1, #0
   11f6c:	bl	109c8 <setvbuf@plt>
   11f70:	ldr	r3, [pc, #236]	; 12064 <main@@Base+0x12c>
   11f74:	ldr	r3, [r4, r3]
   11f78:	ldr	r0, [r3]
   11f7c:	mov	r3, #0
   11f80:	mov	r2, #2
   11f84:	mov	r1, #0
   11f88:	bl	109c8 <setvbuf@plt>
   11f8c:	mov	r3, #0
   11f90:	str	r3, [fp, #-16]
   11f94:	bl	10cfc <teste_lista_nova@@Base>
   11f98:	mov	r2, r0
   11f9c:	ldr	r3, [fp, #-16]
   11fa0:	add	r3, r3, r2
   11fa4:	str	r3, [fp, #-16]
   11fa8:	bl	10e0c <teste_lista_insere@@Base>
   11fac:	mov	r2, r0
   11fb0:	ldr	r3, [fp, #-16]
   11fb4:	add	r3, r3, r2
   11fb8:	str	r3, [fp, #-16]
   11fbc:	bl	11380 <teste_lista_remove@@Base>
   11fc0:	mov	r2, r0
   11fc4:	ldr	r3, [fp, #-16]
   11fc8:	add	r3, r3, r2
   11fcc:	str	r3, [fp, #-16]
   11fd0:	bl	11604 <teste_lista_pesquisa@@Base>
   11fd4:	mov	r2, r0
   11fd8:	ldr	r3, [fp, #-16]
   11fdc:	add	r3, r3, r2
   11fe0:	str	r3, [fp, #-16]
   11fe4:	bl	11814 <teste_lista_ordena@@Base>
   11fe8:	mov	r2, r0
   11fec:	ldr	r3, [fp, #-16]
   11ff0:	add	r3, r3, r2
   11ff4:	str	r3, [fp, #-16]
   11ff8:	bl	11b8c <teste_lista_inverte@@Base>
   11ffc:	mov	r2, r0
   12000:	ldr	r3, [fp, #-16]
   12004:	add	r3, r3, r2
   12008:	str	r3, [fp, #-16]
   1200c:	ldr	r3, [fp, #-16]
   12010:	cmp	r3, #0
   12014:	bne	1202c <main@@Base+0xf4>
   12018:	ldr	r3, [pc, #72]	; 12068 <main@@Base+0x130>
   1201c:	add	r3, pc, r3
   12020:	mov	r0, r3
   12024:	bl	1098c <puts@plt>
   12028:	b	12040 <main@@Base+0x108>
   1202c:	ldr	r1, [fp, #-16]
   12030:	ldr	r3, [pc, #52]	; 1206c <main@@Base+0x134>
   12034:	add	r3, pc, r3
   12038:	mov	r0, r3
   1203c:	bl	1095c <printf@plt>
   12040:	mov	r3, #0
   12044:	mov	r0, r3
   12048:	sub	sp, fp, #8
   1204c:	ldr	r4, [sp]
   12050:	ldr	fp, [sp, #4]
   12054:	add	sp, sp, #8
   12058:	pop	{pc}		; (ldr pc, [sp], #4)
   1205c:	andeq	r1, r1, r8, lsr #1
   12060:	andeq	r0, r0, r8, asr #32
   12064:	andeq	r0, r0, r0, asr #32
   12068:	andeq	r0, r0, r0, asr #27
   1206c:	andeq	r0, r0, r0, asr #27

00012070 <lista_nova@@Base>:
   12070:	str	fp, [sp, #-8]!
   12074:	str	lr, [sp, #4]
   12078:	add	fp, sp, #4
   1207c:	sub	sp, sp, #8
   12080:	mov	r0, #12
   12084:	bl	10998 <malloc@plt>
   12088:	mov	r3, r0
   1208c:	str	r3, [fp, #-8]
   12090:	ldr	r3, [fp, #-8]
   12094:	cmp	r3, #0
   12098:	bne	120a4 <lista_nova@@Base+0x34>
   1209c:	mov	r3, #0
   120a0:	b	120b4 <lista_nova@@Base+0x44>
   120a4:	ldr	r3, [fp, #-8]
   120a8:	mov	r2, #0
   120ac:	str	r2, [r3, #8]
   120b0:	ldr	r3, [fp, #-8]
   120b4:	mov	r0, r3
   120b8:	sub	sp, fp, #4
   120bc:	ldr	fp, [sp]
   120c0:	add	sp, sp, #4
   120c4:	pop	{pc}		; (ldr pc, [sp], #4)

000120c8 <lista_apaga@@Base>:
   120c8:	str	fp, [sp, #-8]!
   120cc:	str	lr, [sp, #4]
   120d0:	add	fp, sp, #4
   120d4:	sub	sp, sp, #16
   120d8:	str	r0, [fp, #-16]
   120dc:	ldr	r3, [fp, #-16]
   120e0:	cmp	r3, #0
   120e4:	beq	12178 <lista_apaga@@Base+0xb0>
   120e8:	ldr	r0, [fp, #-16]
   120ec:	bl	1218c <lista_tamanho@@Base>
   120f0:	mov	r3, r0
   120f4:	cmp	r3, #0
   120f8:	bne	12108 <lista_apaga@@Base+0x40>
   120fc:	ldr	r0, [fp, #-16]
   12100:	bl	10968 <free@plt>
   12104:	b	1217c <lista_apaga@@Base+0xb4>
   12108:	ldr	r3, [fp, #-16]
   1210c:	ldr	r3, [r3]
   12110:	str	r3, [fp, #-8]
   12114:	ldr	r3, [fp, #-8]
   12118:	cmp	r3, #0
   1211c:	beq	12168 <lista_apaga@@Base+0xa0>
   12120:	ldr	r3, [fp, #-8]
   12124:	ldr	r3, [r3, #4]
   12128:	str	r3, [fp, #-12]
   1212c:	b	1215c <lista_apaga@@Base+0x94>
   12130:	ldr	r3, [fp, #-8]
   12134:	ldr	r3, [r3, #4]
   12138:	str	r3, [fp, #-12]
   1213c:	ldr	r3, [fp, #-8]
   12140:	ldr	r3, [r3]
   12144:	mov	r0, r3
   12148:	bl	10968 <free@plt>
   1214c:	ldr	r0, [fp, #-8]
   12150:	bl	10968 <free@plt>
   12154:	ldr	r3, [fp, #-12]
   12158:	str	r3, [fp, #-8]
   1215c:	ldr	r3, [fp, #-12]
   12160:	cmp	r3, #0
   12164:	bne	12130 <lista_apaga@@Base+0x68>
   12168:	ldr	r0, [fp, #-16]
   1216c:	bl	10968 <free@plt>
   12170:	nop	{0}
   12174:	b	1217c <lista_apaga@@Base+0xb4>
   12178:	nop	{0}
   1217c:	sub	sp, fp, #4
   12180:	ldr	fp, [sp]
   12184:	add	sp, sp, #4
   12188:	pop	{pc}		; (ldr pc, [sp], #4)

0001218c <lista_tamanho@@Base>:
   1218c:	push	{fp}		; (str fp, [sp, #-4]!)
   12190:	add	fp, sp, #0
   12194:	sub	sp, sp, #12
   12198:	str	r0, [fp, #-8]
   1219c:	ldr	r3, [fp, #-8]
   121a0:	cmp	r3, #0
   121a4:	bne	121b0 <lista_tamanho@@Base+0x24>
   121a8:	mvn	r3, #0
   121ac:	b	121b8 <lista_tamanho@@Base+0x2c>
   121b0:	ldr	r3, [fp, #-8]
   121b4:	ldr	r3, [r3, #8]
   121b8:	mov	r0, r3
   121bc:	add	sp, fp, #0
   121c0:	pop	{fp}		; (ldr fp, [sp], #4)
   121c4:	bx	lr

000121c8 <lista_inicio@@Base>:
   121c8:	push	{fp}		; (str fp, [sp, #-4]!)
   121cc:	add	fp, sp, #0
   121d0:	sub	sp, sp, #12
   121d4:	str	r0, [fp, #-8]
   121d8:	ldr	r3, [fp, #-8]
   121dc:	cmp	r3, #0
   121e0:	bne	121ec <lista_inicio@@Base+0x24>
   121e4:	mov	r3, #0
   121e8:	b	121f4 <lista_inicio@@Base+0x2c>
   121ec:	ldr	r3, [fp, #-8]
   121f0:	ldr	r3, [r3]
   121f4:	mov	r0, r3
   121f8:	add	sp, fp, #0
   121fc:	pop	{fp}		; (ldr fp, [sp], #4)
   12200:	bx	lr

00012204 <lista_fim@@Base>:
   12204:	push	{fp}		; (str fp, [sp, #-4]!)
   12208:	add	fp, sp, #0
   1220c:	sub	sp, sp, #12
   12210:	str	r0, [fp, #-8]
   12214:	ldr	r3, [fp, #-8]
   12218:	cmp	r3, #0
   1221c:	bne	12228 <lista_fim@@Base+0x24>
   12220:	mov	r3, #0
   12224:	b	12230 <lista_fim@@Base+0x2c>
   12228:	ldr	r3, [fp, #-8]
   1222c:	ldr	r3, [r3, #4]
   12230:	mov	r0, r3
   12234:	add	sp, fp, #0
   12238:	pop	{fp}		; (ldr fp, [sp], #4)
   1223c:	bx	lr

00012240 <lista_insere@@Base>:
   12240:	str	fp, [sp, #-8]!
   12244:	str	lr, [sp, #4]
   12248:	add	fp, sp, #4
   1224c:	sub	sp, sp, #24
   12250:	str	r0, [fp, #-16]
   12254:	str	r1, [fp, #-20]	; 0xffffffec
   12258:	str	r2, [fp, #-24]	; 0xffffffe8
   1225c:	ldr	r3, [fp, #-16]
   12260:	cmp	r3, #0
   12264:	bne	12270 <lista_insere@@Base+0x30>
   12268:	mov	r3, #0
   1226c:	b	123e8 <lista_insere@@Base+0x1a8>
   12270:	mov	r0, #12
   12274:	bl	10998 <malloc@plt>
   12278:	mov	r3, r0
   1227c:	str	r3, [fp, #-8]
   12280:	ldr	r0, [fp, #-20]	; 0xffffffec
   12284:	bl	109bc <strlen@plt>
   12288:	mov	r3, r0
   1228c:	add	r3, r3, #1
   12290:	mov	r0, r3
   12294:	bl	10998 <malloc@plt>
   12298:	mov	r3, r0
   1229c:	mov	r2, r3
   122a0:	ldr	r3, [fp, #-8]
   122a4:	str	r2, [r3]
   122a8:	ldr	r3, [fp, #-8]
   122ac:	ldr	r3, [r3]
   122b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   122b4:	mov	r0, r3
   122b8:	bl	10980 <strcpy@plt>
   122bc:	ldr	r3, [fp, #-16]
   122c0:	ldr	r3, [r3, #8]
   122c4:	cmp	r3, #0
   122c8:	bne	12300 <lista_insere@@Base+0xc0>
   122cc:	ldr	r3, [fp, #-8]
   122d0:	mov	r2, #0
   122d4:	str	r2, [r3, #8]
   122d8:	ldr	r3, [fp, #-8]
   122dc:	mov	r2, #0
   122e0:	str	r2, [r3, #4]
   122e4:	ldr	r3, [fp, #-16]
   122e8:	ldr	r2, [fp, #-8]
   122ec:	str	r2, [r3]
   122f0:	ldr	r3, [fp, #-16]
   122f4:	ldr	r2, [fp, #-8]
   122f8:	str	r2, [r3, #4]
   122fc:	b	123d0 <lista_insere@@Base+0x190>
   12300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12304:	cmp	r3, #0
   12308:	bne	12348 <lista_insere@@Base+0x108>
   1230c:	ldr	r3, [fp, #-8]
   12310:	mov	r2, #0
   12314:	str	r2, [r3, #4]
   12318:	ldr	r3, [fp, #-16]
   1231c:	ldr	r2, [r3, #4]
   12320:	ldr	r3, [fp, #-8]
   12324:	str	r2, [r3, #8]
   12328:	ldr	r3, [fp, #-16]
   1232c:	ldr	r3, [r3, #4]
   12330:	ldr	r2, [fp, #-8]
   12334:	str	r2, [r3, #4]
   12338:	ldr	r3, [fp, #-16]
   1233c:	ldr	r2, [fp, #-8]
   12340:	str	r2, [r3, #4]
   12344:	b	123d0 <lista_insere@@Base+0x190>
   12348:	ldr	r3, [fp, #-16]
   1234c:	ldr	r3, [r3]
   12350:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12354:	cmp	r2, r3
   12358:	bne	12398 <lista_insere@@Base+0x158>
   1235c:	ldr	r3, [fp, #-8]
   12360:	mov	r2, #0
   12364:	str	r2, [r3, #8]
   12368:	ldr	r3, [fp, #-16]
   1236c:	ldr	r2, [r3]
   12370:	ldr	r3, [fp, #-8]
   12374:	str	r2, [r3, #4]
   12378:	ldr	r3, [fp, #-16]
   1237c:	ldr	r2, [fp, #-8]
   12380:	str	r2, [r3]
   12384:	ldr	r3, [fp, #-16]
   12388:	ldr	r3, [r3]
   1238c:	ldr	r2, [fp, #-8]
   12390:	str	r2, [r3, #8]
   12394:	b	123d0 <lista_insere@@Base+0x190>
   12398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1239c:	ldr	r3, [r3, #8]
   123a0:	ldr	r2, [fp, #-8]
   123a4:	str	r2, [r3, #4]
   123a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123ac:	ldr	r2, [r3, #8]
   123b0:	ldr	r3, [fp, #-8]
   123b4:	str	r2, [r3, #8]
   123b8:	ldr	r3, [fp, #-8]
   123bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   123c0:	str	r2, [r3, #4]
   123c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123c8:	ldr	r2, [fp, #-8]
   123cc:	str	r2, [r3, #8]
   123d0:	ldr	r3, [fp, #-16]
   123d4:	ldr	r3, [r3, #8]
   123d8:	add	r2, r3, #1
   123dc:	ldr	r3, [fp, #-16]
   123e0:	str	r2, [r3, #8]
   123e4:	ldr	r3, [fp, #-8]
   123e8:	mov	r0, r3
   123ec:	sub	sp, fp, #4
   123f0:	ldr	fp, [sp]
   123f4:	add	sp, sp, #4
   123f8:	pop	{pc}		; (ldr pc, [sp], #4)

000123fc <lista_remove@@Base>:
   123fc:	str	fp, [sp, #-8]!
   12400:	str	lr, [sp, #4]
   12404:	add	fp, sp, #4
   12408:	sub	sp, sp, #16
   1240c:	str	r0, [fp, #-16]
   12410:	str	r1, [fp, #-20]	; 0xffffffec
   12414:	ldr	r3, [fp, #-20]	; 0xffffffec
   12418:	cmp	r3, #0
   1241c:	bne	12428 <lista_remove@@Base+0x2c>
   12420:	mov	r3, #0
   12424:	b	124fc <lista_remove@@Base+0x100>
   12428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1242c:	ldr	r3, [r3, #4]
   12430:	str	r3, [fp, #-8]
   12434:	ldr	r3, [fp, #-16]
   12438:	ldr	r3, [r3]
   1243c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12440:	cmp	r2, r3
   12444:	bne	1246c <lista_remove@@Base+0x70>
   12448:	ldr	r3, [fp, #-20]	; 0xffffffec
   1244c:	ldr	r3, [r3, #4]
   12450:	mov	r2, #0
   12454:	str	r2, [r3, #8]
   12458:	ldr	r3, [fp, #-20]	; 0xffffffec
   1245c:	ldr	r2, [r3, #4]
   12460:	ldr	r3, [fp, #-16]
   12464:	str	r2, [r3]
   12468:	b	124cc <lista_remove@@Base+0xd0>
   1246c:	ldr	r3, [fp, #-16]
   12470:	ldr	r3, [r3, #4]
   12474:	ldr	r2, [fp, #-20]	; 0xffffffec
   12478:	cmp	r2, r3
   1247c:	bne	124a4 <lista_remove@@Base+0xa8>
   12480:	ldr	r3, [fp, #-20]	; 0xffffffec
   12484:	ldr	r3, [r3, #8]
   12488:	mov	r2, #0
   1248c:	str	r2, [r3, #4]
   12490:	ldr	r3, [fp, #-20]	; 0xffffffec
   12494:	ldr	r2, [r3, #8]
   12498:	ldr	r3, [fp, #-16]
   1249c:	str	r2, [r3, #4]
   124a0:	b	124cc <lista_remove@@Base+0xd0>
   124a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   124a8:	ldr	r3, [r3, #8]
   124ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   124b0:	ldr	r2, [r2, #4]
   124b4:	str	r2, [r3, #4]
   124b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   124bc:	ldr	r3, [r3, #4]
   124c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   124c4:	ldr	r2, [r2, #8]
   124c8:	str	r2, [r3, #8]
   124cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   124d0:	ldr	r3, [r3]
   124d4:	mov	r0, r3
   124d8:	bl	10968 <free@plt>
   124dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   124e0:	bl	10968 <free@plt>
   124e4:	ldr	r3, [fp, #-16]
   124e8:	ldr	r3, [r3, #8]
   124ec:	sub	r2, r3, #1
   124f0:	ldr	r3, [fp, #-16]
   124f4:	str	r2, [r3, #8]
   124f8:	ldr	r3, [fp, #-8]
   124fc:	mov	r0, r3
   12500:	sub	sp, fp, #4
   12504:	ldr	fp, [sp]
   12508:	add	sp, sp, #4
   1250c:	pop	{pc}		; (ldr pc, [sp], #4)

00012510 <lista_pesquisa@@Base>:
   12510:	str	fp, [sp, #-8]!
   12514:	str	lr, [sp, #4]
   12518:	add	fp, sp, #4
   1251c:	sub	sp, sp, #24
   12520:	str	r0, [fp, #-16]
   12524:	str	r1, [fp, #-20]	; 0xffffffec
   12528:	str	r2, [fp, #-24]	; 0xffffffe8
   1252c:	ldr	r3, [fp, #-16]
   12530:	cmp	r3, #0
   12534:	bne	12540 <lista_pesquisa@@Base+0x30>
   12538:	mov	r3, #0
   1253c:	b	12638 <lista_pesquisa@@Base+0x128>
   12540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12544:	cmp	r3, #0
   12548:	bne	125bc <lista_pesquisa@@Base+0xac>
   1254c:	ldr	r3, [fp, #-16]
   12550:	ldr	r3, [r3]
   12554:	str	r3, [fp, #-8]
   12558:	mov	r3, #0
   1255c:	str	r3, [fp, #-12]
   12560:	b	125a4 <lista_pesquisa@@Base+0x94>
   12564:	ldr	r3, [fp, #-8]
   12568:	ldr	r3, [r3]
   1256c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12570:	mov	r0, r3
   12574:	bl	10950 <strcmp@plt>
   12578:	mov	r3, r0
   1257c:	cmp	r3, #0
   12580:	bne	1258c <lista_pesquisa@@Base+0x7c>
   12584:	ldr	r3, [fp, #-8]
   12588:	b	12638 <lista_pesquisa@@Base+0x128>
   1258c:	ldr	r3, [fp, #-8]
   12590:	ldr	r3, [r3, #4]
   12594:	str	r3, [fp, #-8]
   12598:	ldr	r3, [fp, #-12]
   1259c:	add	r3, r3, #1
   125a0:	str	r3, [fp, #-12]
   125a4:	ldr	r3, [fp, #-16]
   125a8:	ldr	r3, [r3, #8]
   125ac:	ldr	r2, [fp, #-12]
   125b0:	cmp	r2, r3
   125b4:	blt	12564 <lista_pesquisa@@Base+0x54>
   125b8:	b	12634 <lista_pesquisa@@Base+0x124>
   125bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125c0:	cmp	r3, #1
   125c4:	bne	12634 <lista_pesquisa@@Base+0x124>
   125c8:	ldr	r3, [fp, #-16]
   125cc:	ldr	r3, [r3, #4]
   125d0:	str	r3, [fp, #-8]
   125d4:	mov	r3, #0
   125d8:	str	r3, [fp, #-12]
   125dc:	b	12620 <lista_pesquisa@@Base+0x110>
   125e0:	ldr	r3, [fp, #-8]
   125e4:	ldr	r3, [r3]
   125e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   125ec:	mov	r0, r3
   125f0:	bl	10950 <strcmp@plt>
   125f4:	mov	r3, r0
   125f8:	cmp	r3, #0
   125fc:	bne	12608 <lista_pesquisa@@Base+0xf8>
   12600:	ldr	r3, [fp, #-8]
   12604:	b	12638 <lista_pesquisa@@Base+0x128>
   12608:	ldr	r3, [fp, #-8]
   1260c:	ldr	r3, [r3, #8]
   12610:	str	r3, [fp, #-8]
   12614:	ldr	r3, [fp, #-12]
   12618:	add	r3, r3, #1
   1261c:	str	r3, [fp, #-12]
   12620:	ldr	r3, [fp, #-16]
   12624:	ldr	r3, [r3, #8]
   12628:	ldr	r2, [fp, #-12]
   1262c:	cmp	r2, r3
   12630:	blt	125e0 <lista_pesquisa@@Base+0xd0>
   12634:	mov	r3, #0
   12638:	mov	r0, r3
   1263c:	sub	sp, fp, #4
   12640:	ldr	fp, [sp]
   12644:	add	sp, sp, #4
   12648:	pop	{pc}		; (ldr pc, [sp], #4)

0001264c <lista_ordena@@Base>:
   1264c:	str	fp, [sp, #-8]!
   12650:	str	lr, [sp, #4]
   12654:	add	fp, sp, #4
   12658:	sub	sp, sp, #24
   1265c:	str	r0, [fp, #-24]	; 0xffffffe8
   12660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12664:	cmp	r3, #0
   12668:	bne	12674 <lista_ordena@@Base+0x28>
   1266c:	mvn	r3, #0
   12670:	b	12748 <lista_ordena@@Base+0xfc>
   12674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12678:	ldr	r3, [r3, #8]
   1267c:	cmp	r3, #0
   12680:	bne	1268c <lista_ordena@@Base+0x40>
   12684:	mov	r3, #0
   12688:	b	12748 <lista_ordena@@Base+0xfc>
   1268c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12690:	ldr	r3, [r3]
   12694:	str	r3, [fp, #-8]
   12698:	b	12730 <lista_ordena@@Base+0xe4>
   1269c:	ldr	r3, [fp, #-8]
   126a0:	str	r3, [fp, #-12]
   126a4:	b	126f8 <lista_ordena@@Base+0xac>
   126a8:	ldr	r3, [fp, #-8]
   126ac:	ldr	r3, [r3]
   126b0:	str	r3, [fp, #-16]
   126b4:	ldr	r3, [fp, #-8]
   126b8:	ldr	r3, [r3, #4]
   126bc:	ldr	r2, [r3]
   126c0:	ldr	r3, [fp, #-8]
   126c4:	str	r2, [r3]
   126c8:	ldr	r3, [fp, #-8]
   126cc:	ldr	r3, [r3, #4]
   126d0:	ldr	r2, [fp, #-16]
   126d4:	str	r2, [r3]
   126d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126dc:	ldr	r3, [r3]
   126e0:	ldr	r2, [fp, #-8]
   126e4:	cmp	r2, r3
   126e8:	beq	126f8 <lista_ordena@@Base+0xac>
   126ec:	ldr	r3, [fp, #-8]
   126f0:	ldr	r3, [r3, #8]
   126f4:	str	r3, [fp, #-8]
   126f8:	ldr	r3, [fp, #-8]
   126fc:	ldr	r2, [r3]
   12700:	ldr	r3, [fp, #-8]
   12704:	ldr	r3, [r3, #4]
   12708:	ldr	r3, [r3]
   1270c:	mov	r1, r3
   12710:	mov	r0, r2
   12714:	bl	10950 <strcmp@plt>
   12718:	mov	r3, r0
   1271c:	cmp	r3, #0
   12720:	bgt	126a8 <lista_ordena@@Base+0x5c>
   12724:	ldr	r3, [fp, #-12]
   12728:	ldr	r3, [r3, #4]
   1272c:	str	r3, [fp, #-8]
   12730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12734:	ldr	r3, [r3, #4]
   12738:	ldr	r2, [fp, #-8]
   1273c:	cmp	r2, r3
   12740:	bne	1269c <lista_ordena@@Base+0x50>
   12744:	mov	r3, #0
   12748:	mov	r0, r3
   1274c:	sub	sp, fp, #4
   12750:	ldr	fp, [sp]
   12754:	add	sp, sp, #4
   12758:	pop	{pc}		; (ldr pc, [sp], #4)

0001275c <lista_inverte@@Base>:
   1275c:	str	fp, [sp, #-8]!
   12760:	str	lr, [sp, #4]
   12764:	add	fp, sp, #4
   12768:	sub	sp, sp, #24
   1276c:	str	r0, [fp, #-24]	; 0xffffffe8
   12770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12774:	cmp	r3, #0
   12778:	bne	12784 <lista_inverte@@Base+0x28>
   1277c:	mvn	r3, #0
   12780:	b	1285c <lista_inverte@@Base+0x100>
   12784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12788:	ldr	r3, [r3, #8]
   1278c:	cmp	r3, #0
   12790:	bne	1279c <lista_inverte@@Base+0x40>
   12794:	mov	r3, #0
   12798:	b	1285c <lista_inverte@@Base+0x100>
   1279c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127a0:	ldr	r3, [r3]
   127a4:	str	r3, [fp, #-12]
   127a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127ac:	ldr	r3, [r3, #4]
   127b0:	str	r3, [fp, #-16]
   127b4:	mov	r3, #0
   127b8:	str	r3, [fp, #-8]
   127bc:	b	12834 <lista_inverte@@Base+0xd8>
   127c0:	ldr	r3, [fp, #-12]
   127c4:	ldr	r3, [r3]
   127c8:	mov	r0, r3
   127cc:	bl	10974 <strdup@plt>
   127d0:	mov	r3, r0
   127d4:	str	r3, [fp, #-20]	; 0xffffffec
   127d8:	ldr	r3, [fp, #-16]
   127dc:	ldr	r3, [r3]
   127e0:	mov	r0, r3
   127e4:	bl	10974 <strdup@plt>
   127e8:	mov	r3, r0
   127ec:	mov	r2, r3
   127f0:	ldr	r3, [fp, #-12]
   127f4:	str	r2, [r3]
   127f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   127fc:	bl	10974 <strdup@plt>
   12800:	mov	r3, r0
   12804:	mov	r2, r3
   12808:	ldr	r3, [fp, #-16]
   1280c:	str	r2, [r3]
   12810:	ldr	r3, [fp, #-12]
   12814:	ldr	r3, [r3, #4]
   12818:	str	r3, [fp, #-12]
   1281c:	ldr	r3, [fp, #-16]
   12820:	ldr	r3, [r3, #8]
   12824:	str	r3, [fp, #-16]
   12828:	ldr	r3, [fp, #-8]
   1282c:	add	r3, r3, #1
   12830:	str	r3, [fp, #-8]
   12834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12838:	ldr	r3, [r3, #8]
   1283c:	lsr	r2, r3, #31
   12840:	add	r3, r2, r3
   12844:	asr	r3, r3, #1
   12848:	mov	r2, r3
   1284c:	ldr	r3, [fp, #-8]
   12850:	cmp	r3, r2
   12854:	blt	127c0 <lista_inverte@@Base+0x64>
   12858:	mov	r3, #0
   1285c:	mov	r0, r3
   12860:	sub	sp, fp, #4
   12864:	ldr	fp, [sp]
   12868:	add	sp, sp, #4
   1286c:	pop	{pc}		; (ldr pc, [sp], #4)

00012870 <__libc_csu_init@@Base>:
   12870:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12874:	mov	r7, r0
   12878:	ldr	r6, [pc, #72]	; 128c8 <__libc_csu_init@@Base+0x58>
   1287c:	ldr	r5, [pc, #72]	; 128cc <__libc_csu_init@@Base+0x5c>
   12880:	add	r6, pc, r6
   12884:	add	r5, pc, r5
   12888:	sub	r6, r6, r5
   1288c:	mov	r8, r1
   12890:	mov	r9, r2
   12894:	bl	10930 <strcmp@plt-0x20>
   12898:	asrs	r6, r6, #2
   1289c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   128a0:	mov	r4, #0
   128a4:	add	r4, r4, #1
   128a8:	ldr	r3, [r5], #4
   128ac:	mov	r2, r9
   128b0:	mov	r1, r8
   128b4:	mov	r0, r7
   128b8:	blx	r3
   128bc:	cmp	r6, r4
   128c0:	bne	128a4 <__libc_csu_init@@Base+0x34>
   128c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128c8:	andeq	r0, r1, ip, lsl #13
   128cc:	andeq	r0, r1, r4, lsl #13

000128d0 <__libc_csu_fini@@Base>:
   128d0:	bx	lr

Disassembly of section .fini:

000128d4 <.fini>:
   128d4:	push	{r3, lr}
   128d8:	pop	{r3, pc}
