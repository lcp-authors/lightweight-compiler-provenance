
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

0001070c <.init>:
   1070c:	push	{r3, lr}
   10710:	bl	10870 <sprintf@plt+0x48>
   10714:	pop	{r3, pc}

Disassembly of section .plt:

00010718 <open@plt-0x14>:
   10718:	push	{lr}		; (str lr, [sp, #-4]!)
   1071c:	ldr	lr, [pc, #4]	; 10728 <open@plt-0x4>
   10720:	add	lr, pc, lr
   10724:	ldr	pc, [lr, #8]!
   10728:	ldrdeq	r1, [r1], -r8

0001072c <open@plt>:
   1072c:	add	ip, pc, #0, 12
   10730:	add	ip, ip, #69632	; 0x11000
   10734:	ldr	pc, [ip, #2264]!	; 0x8d8

00010738 <abort@plt>:
   10738:	add	ip, pc, #0, 12
   1073c:	add	ip, ip, #69632	; 0x11000
   10740:	ldr	pc, [ip, #2256]!	; 0x8d0

00010744 <srand@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #69632	; 0x11000
   1074c:	ldr	pc, [ip, #2248]!	; 0x8c8

00010750 <__libc_start_main@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #69632	; 0x11000
   10758:	ldr	pc, [ip, #2240]!	; 0x8c0

0001075c <__gmon_start__@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #69632	; 0x11000
   10764:	ldr	pc, [ip, #2232]!	; 0x8b8

00010768 <getpass@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #69632	; 0x11000
   10770:	ldr	pc, [ip, #2224]!	; 0x8b0

00010774 <calloc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2216]!	; 0x8a8

00010780 <free@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2208]!	; 0x8a0

0001078c <read@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2200]!	; 0x898

00010798 <strlen@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2192]!	; 0x890

000107a4 <getopt@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2184]!	; 0x888

000107b0 <strtol@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2176]!	; 0x880

000107bc <printf@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2168]!	; 0x878

000107c8 <fwrite@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2160]!	; 0x870

000107d4 <time@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2152]!	; 0x868

000107e0 <strdup@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2144]!	; 0x860

000107ec <rb_crypt@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2136]!	; 0x858

000107f8 <puts@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2128]!	; 0x850

00010804 <rand@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2120]!	; 0x848

00010810 <strcmp@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2112]!	; 0x840

0001081c <exit@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2104]!	; 0x838

00010828 <sprintf@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2096]!	; 0x830

Disassembly of section .text:

00010834 <.text>:
   10834:	mov	fp, #0
   10838:	mov	lr, #0
   1083c:	pop	{r1}		; (ldr r1, [sp], #4)
   10840:	mov	r2, sp
   10844:	push	{r2}		; (str r2, [sp, #-4]!)
   10848:	push	{r0}		; (str r0, [sp, #-4]!)
   1084c:	ldr	ip, [pc, #16]	; 10864 <sprintf@plt+0x3c>
   10850:	push	{ip}		; (str ip, [sp, #-4]!)
   10854:	ldr	r0, [pc, #12]	; 10868 <sprintf@plt+0x40>
   10858:	ldr	r3, [pc, #12]	; 1086c <sprintf@plt+0x44>
   1085c:	bl	10750 <__libc_start_main@plt>
   10860:	bl	10738 <abort@plt>
   10864:	andeq	r1, r1, r4, ror #3
   10868:	andeq	r0, r1, r4, lsr #18
   1086c:	andeq	r1, r1, r4, lsl #3
   10870:	ldr	r3, [pc, #20]	; 1088c <sprintf@plt+0x64>
   10874:	ldr	r2, [pc, #20]	; 10890 <sprintf@plt+0x68>
   10878:	add	r3, pc, r3
   1087c:	ldr	r2, [r3, r2]
   10880:	cmp	r2, #0
   10884:	bxeq	lr
   10888:	b	1075c <__gmon_start__@plt>
   1088c:	andeq	r1, r1, r0, lsl #15
   10890:	andeq	r0, r0, r4, rrx
   10894:	ldr	r0, [pc, #24]	; 108b4 <sprintf@plt+0x8c>
   10898:	ldr	r3, [pc, #24]	; 108b8 <sprintf@plt+0x90>
   1089c:	cmp	r3, r0
   108a0:	bxeq	lr
   108a4:	ldr	r3, [pc, #16]	; 108bc <sprintf@plt+0x94>
   108a8:	cmp	r3, #0
   108ac:	bxeq	lr
   108b0:	bx	r3
   108b4:	andeq	r2, r2, r8, ror r0
   108b8:	andeq	r2, r2, r8, ror r0
   108bc:	andeq	r0, r0, r0
   108c0:	ldr	r0, [pc, #36]	; 108ec <sprintf@plt+0xc4>
   108c4:	ldr	r1, [pc, #36]	; 108f0 <sprintf@plt+0xc8>
   108c8:	sub	r1, r1, r0
   108cc:	asr	r1, r1, #2
   108d0:	add	r1, r1, r1, lsr #31
   108d4:	asrs	r1, r1, #1
   108d8:	bxeq	lr
   108dc:	ldr	r3, [pc, #16]	; 108f4 <sprintf@plt+0xcc>
   108e0:	cmp	r3, #0
   108e4:	bxeq	lr
   108e8:	bx	r3
   108ec:	andeq	r2, r2, r8, ror r0
   108f0:	andeq	r2, r2, r8, ror r0
   108f4:	andeq	r0, r0, r0
   108f8:	push	{r4, lr}
   108fc:	ldr	r4, [pc, #24]	; 1091c <sprintf@plt+0xf4>
   10900:	ldrb	r3, [r4]
   10904:	cmp	r3, #0
   10908:	popne	{r4, pc}
   1090c:	bl	10894 <sprintf@plt+0x6c>
   10910:	mov	r3, #1
   10914:	strb	r3, [r4]
   10918:	pop	{r4, pc}
   1091c:	andeq	r2, r2, r8, ror r0
   10920:	b	108c0 <sprintf@plt+0x98>
   10924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10928:	add	fp, sp, #28
   1092c:	sub	sp, sp, #12
   10930:	mov	r5, r0
   10934:	mov	r0, #0
   10938:	mov	r4, r1
   1093c:	mov	r8, #0
   10940:	mov	r6, #0
   10944:	mov	sl, #0
   10948:	str	r0, [sp, #4]
   1094c:	mov	r0, #0
   10950:	ldr	r7, [pc, #1328]	; 10e88 <sprintf@plt+0x660>
   10954:	ldr	r9, [pc, #1328]	; 10e8c <sprintf@plt+0x664>
   10958:	ldr	r9, [pc, r9]
   1095c:	add	r7, pc, r7
   10960:	str	r0, [sp]
   10964:	b	10974 <sprintf@plt+0x14c>
   10968:	ldr	r0, [pc, #1312]	; 10e90 <sprintf@plt+0x668>
   1096c:	add	r0, pc, r0
   10970:	bl	107bc <printf@plt>
   10974:	mov	r0, r5
   10978:	mov	r1, r4
   1097c:	mov	r2, r7
   10980:	bl	107a4 <getopt@plt>
   10984:	mov	r1, r0
   10988:	sub	r0, r0, #63	; 0x3f
   1098c:	cmp	r0, #58	; 0x3a
   10990:	bhi	10a98 <sprintf@plt+0x270>
   10994:	add	r2, pc, #4
   10998:	ldr	r0, [r2, r0, lsl #2]
   1099c:	add	pc, r2, r0
   109a0:	andeq	r0, r0, r8, lsl #9
   109a4:			; <UNDEFINED> instruction: 0xffffffc8
   109a8:			; <UNDEFINED> instruction: 0xffffffc8
   109ac:			; <UNDEFINED> instruction: 0xffffffc8
   109b0:			; <UNDEFINED> instruction: 0xffffffc8
   109b4:			; <UNDEFINED> instruction: 0xffffffc8
   109b8:			; <UNDEFINED> instruction: 0xffffffc8
   109bc:			; <UNDEFINED> instruction: 0xffffffc8
   109c0:			; <UNDEFINED> instruction: 0xffffffc8
   109c4:			; <UNDEFINED> instruction: 0xffffffc8
   109c8:			; <UNDEFINED> instruction: 0xffffffc8
   109cc:			; <UNDEFINED> instruction: 0xffffffc8
   109d0:			; <UNDEFINED> instruction: 0xffffffc8
   109d4:			; <UNDEFINED> instruction: 0xffffffc8
   109d8:			; <UNDEFINED> instruction: 0xffffffc8
   109dc:			; <UNDEFINED> instruction: 0xffffffc8
   109e0:			; <UNDEFINED> instruction: 0xffffffc8
   109e4:			; <UNDEFINED> instruction: 0xffffffc8
   109e8:			; <UNDEFINED> instruction: 0xffffffc8
   109ec:			; <UNDEFINED> instruction: 0xffffffc8
   109f0:			; <UNDEFINED> instruction: 0xffffffc8
   109f4:			; <UNDEFINED> instruction: 0xffffffc8
   109f8:			; <UNDEFINED> instruction: 0xffffffc8
   109fc:			; <UNDEFINED> instruction: 0xffffffc8
   10a00:			; <UNDEFINED> instruction: 0xffffffc8
   10a04:			; <UNDEFINED> instruction: 0xffffffc8
   10a08:			; <UNDEFINED> instruction: 0xffffffc8
   10a0c:			; <UNDEFINED> instruction: 0xffffffc8
   10a10:			; <UNDEFINED> instruction: 0xffffffc8
   10a14:			; <UNDEFINED> instruction: 0xffffffc8
   10a18:			; <UNDEFINED> instruction: 0xffffffc8
   10a1c:			; <UNDEFINED> instruction: 0xffffffc8
   10a20:			; <UNDEFINED> instruction: 0xffffffc8
   10a24:			; <UNDEFINED> instruction: 0xffffffc8
   10a28:			; <UNDEFINED> instruction: 0xffffffc8
   10a2c:	andeq	r0, r0, ip, ror #1
   10a30:			; <UNDEFINED> instruction: 0xffffffc8
   10a34:			; <UNDEFINED> instruction: 0xffffffc8
   10a38:			; <UNDEFINED> instruction: 0xffffffc8
   10a3c:			; <UNDEFINED> instruction: 0xffffffc8
   10a40:			; <UNDEFINED> instruction: 0xffffffc8
   10a44:	andeq	r0, r0, ip, lsl #9
   10a48:			; <UNDEFINED> instruction: 0xffffffc8
   10a4c:			; <UNDEFINED> instruction: 0xffffffc8
   10a50:			; <UNDEFINED> instruction: 0xffffffc8
   10a54:	andeq	r0, r0, ip, lsl r1
   10a58:	andeq	r0, r0, r4, lsl r1
   10a5c:			; <UNDEFINED> instruction: 0xffffffc8
   10a60:			; <UNDEFINED> instruction: 0xffffffc8
   10a64:	andeq	r0, r0, r8, lsr r1
   10a68:			; <UNDEFINED> instruction: 0xffffffc8
   10a6c:	andeq	r0, r0, r8, asr #2
   10a70:	andeq	r0, r0, r4, lsl #2
   10a74:			; <UNDEFINED> instruction: 0xffffffc8
   10a78:			; <UNDEFINED> instruction: 0xffffffc8
   10a7c:			; <UNDEFINED> instruction: 0xffffffc8
   10a80:			; <UNDEFINED> instruction: 0xffffffc8
   10a84:	andeq	r0, r0, r4, ror #2
   10a88:	andeq	r0, r0, ip, ror #2
   10a8c:	orr	r8, r8, #16
   10a90:	mov	sl, #4
   10a94:	b	10974 <sprintf@plt+0x14c>
   10a98:	cmn	r1, #1
   10a9c:	bne	10968 <sprintf@plt+0x140>
   10aa0:	b	10b14 <sprintf@plt+0x2ec>
   10aa4:	ldr	r0, [r9]
   10aa8:	orr	r8, r8, #2
   10aac:	str	r0, [sp]
   10ab0:	b	10974 <sprintf@plt+0x14c>
   10ab4:	orr	r8, r8, #1
   10ab8:	b	10974 <sprintf@plt+0x14c>
   10abc:	ldr	r0, [r9]
   10ac0:	mov	r1, #0
   10ac4:	mov	r2, #10
   10ac8:	bl	107b0 <strtol@plt>
   10acc:	mov	r6, r0
   10ad0:	orr	r8, r8, #8
   10ad4:	b	10974 <sprintf@plt+0x14c>
   10ad8:	ldr	r0, [r9]
   10adc:	orr	r8, r8, #4
   10ae0:	str	r0, [sp, #4]
   10ae4:	b	10974 <sprintf@plt+0x14c>
   10ae8:	ldr	r0, [r9]
   10aec:	mov	r1, #0
   10af0:	mov	r2, #10
   10af4:	bl	107b0 <strtol@plt>
   10af8:	mov	sl, r0
   10afc:	orr	r8, r8, #32
   10b00:	b	10974 <sprintf@plt+0x14c>
   10b04:	orr	r8, r8, #64	; 0x40
   10b08:	b	10974 <sprintf@plt+0x14c>
   10b0c:	orr	r8, r8, #128	; 0x80
   10b10:	b	10974 <sprintf@plt+0x14c>
   10b14:	tst	r8, #1
   10b18:	bne	10b5c <sprintf@plt+0x334>
   10b1c:	tst	r8, #16
   10b20:	bne	10c1c <sprintf@plt+0x3f4>
   10b24:	cmp	r6, #0
   10b28:	and	r0, r8, #2
   10b2c:	movweq	r6, #16
   10b30:	tst	r8, #64	; 0x40
   10b34:	bne	10cfc <sprintf@plt+0x4d4>
   10b38:	cmp	r0, #0
   10b3c:	bne	10d80 <sprintf@plt+0x558>
   10b40:	cmp	r6, #17
   10b44:	bge	10e68 <sprintf@plt+0x640>
   10b48:	ldr	r7, [pc, #916]	; 10ee4 <sprintf@plt+0x6bc>
   10b4c:	mov	r4, #36	; 0x24
   10b50:	movw	r0, #13860	; 0x3624
   10b54:	add	r7, pc, r7
   10b58:	b	10b84 <sprintf@plt+0x35c>
   10b5c:	cmp	r6, #0
   10b60:	movweq	r6, #8
   10b64:	tst	r8, #2
   10b68:	bne	10c8c <sprintf@plt+0x464>
   10b6c:	cmp	r6, #17
   10b70:	bge	10e3c <sprintf@plt+0x614>
   10b74:	ldr	r7, [pc, #808]	; 10ea4 <sprintf@plt+0x67c>
   10b78:	mov	r4, #36	; 0x24
   10b7c:	movw	r0, #12580	; 0x3124
   10b80:	add	r7, pc, r7
   10b84:	strb	r4, [r7, #2]
   10b88:	strh	r0, [r7]
   10b8c:	add	r0, r7, #3
   10b90:	mov	r1, r6
   10b94:	bl	11058 <sprintf@plt+0x830>
   10b98:	add	r0, r7, r6
   10b9c:	strh	r4, [r0, #3]
   10ba0:	tst	r8, #4
   10ba4:	bne	10ccc <sprintf@plt+0x4a4>
   10ba8:	ldr	r0, [pc, #832]	; 10ef0 <sprintf@plt+0x6c8>
   10bac:	add	r0, pc, r0
   10bb0:	bl	10768 <getpass@plt>
   10bb4:	mov	r1, r7
   10bb8:	bl	107ec <rb_crypt@plt>
   10bbc:	cmp	r0, #0
   10bc0:	beq	10de0 <sprintf@plt+0x5b8>
   10bc4:	bl	107e0 <strdup@plt>
   10bc8:	mov	r4, r0
   10bcc:	ldr	r0, [pc, #808]	; 10efc <sprintf@plt+0x6d4>
   10bd0:	add	r0, pc, r0
   10bd4:	bl	10768 <getpass@plt>
   10bd8:	mov	r1, r7
   10bdc:	bl	107ec <rb_crypt@plt>
   10be0:	cmp	r0, #0
   10be4:	beq	10de0 <sprintf@plt+0x5b8>
   10be8:	mov	r1, r0
   10bec:	mov	r0, r4
   10bf0:	bl	10810 <strcmp@plt>
   10bf4:	cmp	r0, #0
   10bf8:	beq	10ce4 <sprintf@plt+0x4bc>
   10bfc:	ldr	r0, [pc, #764]	; 10f00 <sprintf@plt+0x6d8>
   10c00:	mov	r4, #1
   10c04:	mov	r1, #23
   10c08:	ldr	r0, [pc, r0]
   10c0c:	ldr	r3, [r0]
   10c10:	ldr	r0, [pc, #748]	; 10f04 <sprintf@plt+0x6dc>
   10c14:	add	r0, pc, r0
   10c18:	b	10e1c <sprintf@plt+0x5f4>
   10c1c:	cmp	r6, #0
   10c20:	movweq	r6, #22
   10c24:	tst	r8, #2
   10c28:	bne	10d20 <sprintf@plt+0x4f8>
   10c2c:	cmp	r6, #23
   10c30:	bge	10e5c <sprintf@plt+0x634>
   10c34:	ldr	r1, [pc, #640]	; 10ebc <sprintf@plt+0x694>
   10c38:	add	r4, sp, #9
   10c3c:	mov	r2, sl
   10c40:	mov	r0, r4
   10c44:	add	r1, pc, r1
   10c48:	bl	10828 <sprintf@plt>
   10c4c:	ldr	r7, [pc, #620]	; 10ec0 <sprintf@plt+0x698>
   10c50:	ldr	r1, [pc, #620]	; 10ec4 <sprintf@plt+0x69c>
   10c54:	mov	r2, r4
   10c58:	add	r7, pc, r7
   10c5c:	add	r1, pc, r1
   10c60:	mov	r0, r7
   10c64:	bl	10828 <sprintf@plt>
   10c68:	add	r0, r7, #7
   10c6c:	mov	r1, r6
   10c70:	bl	11058 <sprintf@plt+0x830>
   10c74:	add	r0, r7, r6
   10c78:	mov	r1, #36	; 0x24
   10c7c:	strh	r1, [r0, #7]
   10c80:	tst	r8, #4
   10c84:	beq	10ba8 <sprintf@plt+0x380>
   10c88:	b	10ccc <sprintf@plt+0x4a4>
   10c8c:	ldr	r4, [sp]
   10c90:	cmp	r4, #0
   10c94:	beq	10e30 <sprintf@plt+0x608>
   10c98:	mov	r0, r4
   10c9c:	bl	10798 <strlen@plt>
   10ca0:	cmp	r0, #17
   10ca4:	bcs	10e30 <sprintf@plt+0x608>
   10ca8:	ldr	r7, [pc, #488]	; 10e98 <sprintf@plt+0x670>
   10cac:	ldr	r1, [pc, #488]	; 10e9c <sprintf@plt+0x674>
   10cb0:	add	r7, pc, r7
   10cb4:	add	r1, pc, r1
   10cb8:	mov	r0, r7
   10cbc:	mov	r2, r4
   10cc0:	bl	10828 <sprintf@plt>
   10cc4:	tst	r8, #4
   10cc8:	beq	10ba8 <sprintf@plt+0x380>
   10ccc:	ldr	r0, [sp, #4]
   10cd0:	cmp	r0, #0
   10cd4:	beq	10e00 <sprintf@plt+0x5d8>
   10cd8:	mov	r1, r7
   10cdc:	bl	107ec <rb_crypt@plt>
   10ce0:	mov	r4, r0
   10ce4:	mov	r0, r4
   10ce8:	bl	107f8 <puts@plt>
   10cec:	mov	r4, #0
   10cf0:	mov	r0, r4
   10cf4:	sub	sp, fp, #28
   10cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cfc:	cmp	r0, #0
   10d00:	bne	10db0 <sprintf@plt+0x588>
   10d04:	cmp	r6, #17
   10d08:	bge	10e74 <sprintf@plt+0x64c>
   10d0c:	ldr	r7, [pc, #448]	; 10ed4 <sprintf@plt+0x6ac>
   10d10:	mov	r4, #36	; 0x24
   10d14:	movw	r0, #13604	; 0x3524
   10d18:	add	r7, pc, r7
   10d1c:	b	10b84 <sprintf@plt+0x35c>
   10d20:	ldr	r5, [sp]
   10d24:	cmp	r5, #0
   10d28:	beq	10e48 <sprintf@plt+0x620>
   10d2c:	mov	r0, r5
   10d30:	bl	10798 <strlen@plt>
   10d34:	cmp	r0, #23
   10d38:	bcs	10e48 <sprintf@plt+0x620>
   10d3c:	ldr	r1, [pc, #360]	; 10eac <sprintf@plt+0x684>
   10d40:	add	r4, sp, #9
   10d44:	mov	r2, sl
   10d48:	mov	r0, r4
   10d4c:	add	r1, pc, r1
   10d50:	bl	10828 <sprintf@plt>
   10d54:	ldr	r7, [pc, #340]	; 10eb0 <sprintf@plt+0x688>
   10d58:	ldr	r1, [pc, #340]	; 10eb4 <sprintf@plt+0x68c>
   10d5c:	mov	r2, r4
   10d60:	mov	r3, r5
   10d64:	add	r7, pc, r7
   10d68:	add	r1, pc, r1
   10d6c:	mov	r0, r7
   10d70:	bl	10828 <sprintf@plt>
   10d74:	tst	r8, #4
   10d78:	beq	10ba8 <sprintf@plt+0x380>
   10d7c:	b	10ccc <sprintf@plt+0x4a4>
   10d80:	ldr	r4, [sp]
   10d84:	cmp	r4, #0
   10d88:	beq	10e30 <sprintf@plt+0x608>
   10d8c:	mov	r0, r4
   10d90:	bl	10798 <strlen@plt>
   10d94:	cmp	r0, #17
   10d98:	bcs	10e30 <sprintf@plt+0x608>
   10d9c:	ldr	r7, [pc, #308]	; 10ed8 <sprintf@plt+0x6b0>
   10da0:	ldr	r1, [pc, #308]	; 10edc <sprintf@plt+0x6b4>
   10da4:	add	r7, pc, r7
   10da8:	add	r1, pc, r1
   10dac:	b	10cb8 <sprintf@plt+0x490>
   10db0:	ldr	r4, [sp]
   10db4:	cmp	r4, #0
   10db8:	beq	10e30 <sprintf@plt+0x608>
   10dbc:	mov	r0, r4
   10dc0:	bl	10798 <strlen@plt>
   10dc4:	cmp	r0, #17
   10dc8:	bcs	10e30 <sprintf@plt+0x608>
   10dcc:	ldr	r7, [pc, #244]	; 10ec8 <sprintf@plt+0x6a0>
   10dd0:	ldr	r1, [pc, #244]	; 10ecc <sprintf@plt+0x6a4>
   10dd4:	add	r7, pc, r7
   10dd8:	add	r1, pc, r1
   10ddc:	b	10cb8 <sprintf@plt+0x490>
   10de0:	ldr	r0, [pc, #268]	; 10ef4 <sprintf@plt+0x6cc>
   10de4:	mov	r4, #1
   10de8:	mov	r1, #18
   10dec:	ldr	r0, [pc, r0]
   10df0:	ldr	r3, [r0]
   10df4:	ldr	r0, [pc, #252]	; 10ef8 <sprintf@plt+0x6d0>
   10df8:	add	r0, pc, r0
   10dfc:	b	10e1c <sprintf@plt+0x5f4>
   10e00:	ldr	r0, [pc, #224]	; 10ee8 <sprintf@plt+0x6c0>
   10e04:	mov	r4, #1
   10e08:	mov	r1, #30
   10e0c:	ldr	r0, [pc, r0]
   10e10:	ldr	r3, [r0]
   10e14:	ldr	r0, [pc, #208]	; 10eec <sprintf@plt+0x6c4>
   10e18:	add	r0, pc, r0
   10e1c:	mov	r2, #1
   10e20:	bl	107c8 <fwrite@plt>
   10e24:	b	10cf0 <sprintf@plt+0x4c8>
   10e28:	bl	10fd8 <sprintf@plt+0x7b0>
   10e2c:	bl	10f08 <sprintf@plt+0x6e0>
   10e30:	ldr	r0, [pc, #92]	; 10e94 <sprintf@plt+0x66c>
   10e34:	add	r0, pc, r0
   10e38:	b	10e50 <sprintf@plt+0x628>
   10e3c:	ldr	r0, [pc, #92]	; 10ea0 <sprintf@plt+0x678>
   10e40:	add	r0, pc, r0
   10e44:	b	10e7c <sprintf@plt+0x654>
   10e48:	ldr	r0, [pc, #88]	; 10ea8 <sprintf@plt+0x680>
   10e4c:	add	r0, pc, r0
   10e50:	bl	107f8 <puts@plt>
   10e54:	mov	r0, #1
   10e58:	bl	1081c <exit@plt>
   10e5c:	ldr	r0, [pc, #84]	; 10eb8 <sprintf@plt+0x690>
   10e60:	add	r0, pc, r0
   10e64:	b	10e7c <sprintf@plt+0x654>
   10e68:	ldr	r0, [pc, #112]	; 10ee0 <sprintf@plt+0x6b8>
   10e6c:	add	r0, pc, r0
   10e70:	b	10e7c <sprintf@plt+0x654>
   10e74:	ldr	r0, [pc, #84]	; 10ed0 <sprintf@plt+0x6a8>
   10e78:	add	r0, pc, r0
   10e7c:	bl	107f8 <puts@plt>
   10e80:	mov	r0, #0
   10e84:	bl	1081c <exit@plt>
   10e88:	muleq	r0, r0, r8
   10e8c:	andeq	r1, r1, ip, lsl #14
   10e90:	andeq	r0, r0, pc, lsl #17
   10e94:	andeq	r0, r0, r4, lsr r9
   10e98:	andeq	r1, r1, r1, asr #7
   10e9c:			; <UNDEFINED> instruction: 0x000005ba
   10ea0:	andeq	r0, r0, r8, ror r8
   10ea4:	andeq	r1, r1, r6, lsl #10
   10ea8:	andeq	r0, r0, ip, lsl #17
   10eac:	andeq	r0, r0, r4, lsl #11
   10eb0:	andeq	r1, r1, fp, lsl #7
   10eb4:	andeq	r0, r0, sp, ror #10
   10eb8:	andeq	r0, r0, r8, asr #17
   10ebc:	andeq	r0, r0, ip, lsl #13
   10ec0:			; <UNDEFINED> instruction: 0x000114b6
   10ec4:	andeq	r0, r0, r4, lsl #13
   10ec8:	andeq	r1, r1, r7, asr #5
   10ecc:	andeq	r0, r0, sl, ror #9
   10ed0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10ed4:	andeq	r1, r1, sp, lsr #7
   10ed8:	andeq	r1, r1, ip, lsl #6
   10edc:	andeq	r0, r0, r1, lsr #10
   10ee0:	andeq	r0, r0, ip, asr #18
   10ee4:	andeq	r1, r1, r6, lsl #11
   10ee8:	andeq	r1, r1, r4, asr r2
   10eec:	strdeq	r0, [r0], -r8
   10ef0:	andeq	r0, r0, r3, lsl #13
   10ef4:	andeq	r1, r1, r4, ror r2
   10ef8:	andeq	r0, r0, r3, asr #8
   10efc:	andeq	r0, r0, lr, ror r6
   10f00:	andeq	r1, r1, r8, asr r4
   10f04:	andeq	r0, r0, r2, asr #12
   10f08:	push	{fp, lr}
   10f0c:	mov	fp, sp
   10f10:	ldr	r0, [pc, #144]	; 10fa8 <sprintf@plt+0x780>
   10f14:	add	r0, pc, r0
   10f18:	bl	107f8 <puts@plt>
   10f1c:	ldr	r0, [pc, #136]	; 10fac <sprintf@plt+0x784>
   10f20:	add	r0, pc, r0
   10f24:	bl	107f8 <puts@plt>
   10f28:	ldr	r0, [pc, #128]	; 10fb0 <sprintf@plt+0x788>
   10f2c:	add	r0, pc, r0
   10f30:	bl	107f8 <puts@plt>
   10f34:	ldr	r0, [pc, #120]	; 10fb4 <sprintf@plt+0x78c>
   10f38:	add	r0, pc, r0
   10f3c:	bl	107f8 <puts@plt>
   10f40:	ldr	r0, [pc, #112]	; 10fb8 <sprintf@plt+0x790>
   10f44:	add	r0, pc, r0
   10f48:	bl	107f8 <puts@plt>
   10f4c:	ldr	r0, [pc, #104]	; 10fbc <sprintf@plt+0x794>
   10f50:	add	r0, pc, r0
   10f54:	bl	107f8 <puts@plt>
   10f58:	ldr	r0, [pc, #96]	; 10fc0 <sprintf@plt+0x798>
   10f5c:	add	r0, pc, r0
   10f60:	bl	107f8 <puts@plt>
   10f64:	ldr	r0, [pc, #88]	; 10fc4 <sprintf@plt+0x79c>
   10f68:	add	r0, pc, r0
   10f6c:	bl	107f8 <puts@plt>
   10f70:	ldr	r0, [pc, #80]	; 10fc8 <sprintf@plt+0x7a0>
   10f74:	add	r0, pc, r0
   10f78:	bl	107f8 <puts@plt>
   10f7c:	ldr	r0, [pc, #72]	; 10fcc <sprintf@plt+0x7a4>
   10f80:	add	r0, pc, r0
   10f84:	bl	107f8 <puts@plt>
   10f88:	ldr	r0, [pc, #64]	; 10fd0 <sprintf@plt+0x7a8>
   10f8c:	add	r0, pc, r0
   10f90:	bl	107f8 <puts@plt>
   10f94:	ldr	r0, [pc, #56]	; 10fd4 <sprintf@plt+0x7ac>
   10f98:	add	r0, pc, r0
   10f9c:	bl	107f8 <puts@plt>
   10fa0:	mov	r0, #0
   10fa4:	bl	1081c <exit@plt>
   10fa8:	ldrdeq	r0, [r0], -r4
   10fac:	andeq	r0, r0, r8, lsl r4
   10fb0:	andeq	r0, r0, ip, lsr #8
   10fb4:	andeq	r0, r0, r0, asr #8
   10fb8:	andeq	r0, r0, r4, asr r4
   10fbc:	andeq	r0, r0, r8, ror #8
   10fc0:	muleq	r0, ip, r4
   10fc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10fc8:	strdeq	r0, [r0], -r4
   10fcc:	andeq	r0, r0, r8, lsr #10
   10fd0:	andeq	r0, r0, ip, lsr r5
   10fd4:	andeq	r0, r0, r0, ror #10
   10fd8:	push	{fp, lr}
   10fdc:	mov	fp, sp
   10fe0:	ldr	r0, [pc, #84]	; 1103c <sprintf@plt+0x814>
   10fe4:	add	r0, pc, r0
   10fe8:	bl	107f8 <puts@plt>
   10fec:	ldr	r0, [pc, #76]	; 11040 <sprintf@plt+0x818>
   10ff0:	add	r0, pc, r0
   10ff4:	bl	107f8 <puts@plt>
   10ff8:	ldr	r0, [pc, #68]	; 11044 <sprintf@plt+0x81c>
   10ffc:	add	r0, pc, r0
   11000:	bl	107f8 <puts@plt>
   11004:	ldr	r0, [pc, #60]	; 11048 <sprintf@plt+0x820>
   11008:	add	r0, pc, r0
   1100c:	bl	107f8 <puts@plt>
   11010:	ldr	r0, [pc, #52]	; 1104c <sprintf@plt+0x824>
   11014:	add	r0, pc, r0
   11018:	bl	107f8 <puts@plt>
   1101c:	ldr	r0, [pc, #44]	; 11050 <sprintf@plt+0x828>
   11020:	add	r0, pc, r0
   11024:	bl	107f8 <puts@plt>
   11028:	ldr	r0, [pc, #36]	; 11054 <sprintf@plt+0x82c>
   1102c:	add	r0, pc, r0
   11030:	bl	107f8 <puts@plt>
   11034:	mov	r0, #0
   11038:	bl	1081c <exit@plt>
   1103c:	andeq	r0, r0, r4, asr #10
   11040:	andeq	r0, r0, r8, ror #10
   11044:	andeq	r0, r0, ip, lsr #11
   11048:	andeq	r0, r0, r0, ror #11
   1104c:	andeq	r0, r0, r4, lsl r6
   11050:	andeq	r0, r0, r8, asr #12
   11054:	andeq	r0, r0, ip, ror #12
   11058:	push	{r4, r5, r6, r7, fp, lr}
   1105c:	add	fp, sp, #16
   11060:	mov	r5, r0
   11064:	ldr	r0, [pc, #264]	; 11174 <sprintf@plt+0x94c>
   11068:	mov	r4, r1
   1106c:	mov	r1, #0
   11070:	add	r0, pc, r0
   11074:	bl	1072c <open@plt>
   11078:	cmn	r0, #1
   1107c:	ble	110e4 <sprintf@plt+0x8bc>
   11080:	mov	r7, r0
   11084:	mov	r0, #1
   11088:	mov	r1, r4
   1108c:	bl	10774 <calloc@plt>
   11090:	mov	r6, r0
   11094:	mov	r0, r7
   11098:	mov	r2, r4
   1109c:	mov	r1, r6
   110a0:	bl	1078c <read@plt>
   110a4:	cmp	r0, r4
   110a8:	bne	11128 <sprintf@plt+0x900>
   110ac:	cmp	r4, #1
   110b0:	blt	110d8 <sprintf@plt+0x8b0>
   110b4:	ldr	r0, [pc, #192]	; 1117c <sprintf@plt+0x954>
   110b8:	mov	r1, r6
   110bc:	add	r0, pc, r0
   110c0:	ldrb	r2, [r1], #1
   110c4:	subs	r4, r4, #1
   110c8:	and	r2, r2, #63	; 0x3f
   110cc:	ldrb	r2, [r0, r2]
   110d0:	strb	r2, [r5], #1
   110d4:	bne	110c0 <sprintf@plt+0x898>
   110d8:	mov	r0, r6
   110dc:	pop	{r4, r5, r6, r7, fp, lr}
   110e0:	b	10780 <free@plt>
   110e4:	mov	r0, #0
   110e8:	bl	107d4 <time@plt>
   110ec:	bl	10744 <srand@plt>
   110f0:	cmp	r4, #1
   110f4:	blt	11170 <sprintf@plt+0x948>
   110f8:	ldr	r6, [pc, #120]	; 11178 <sprintf@plt+0x950>
   110fc:	add	r6, pc, r6
   11100:	bl	10804 <rand@plt>
   11104:	asr	r1, r0, #31
   11108:	subs	r4, r4, #1
   1110c:	add	r1, r0, r1, lsr #26
   11110:	bic	r1, r1, #63	; 0x3f
   11114:	sub	r0, r0, r1
   11118:	ldrb	r0, [r6, r0]
   1111c:	strb	r0, [r5], #1
   11120:	bne	11100 <sprintf@plt+0x8d8>
   11124:	b	11170 <sprintf@plt+0x948>
   11128:	mov	r0, r6
   1112c:	bl	10780 <free@plt>
   11130:	mov	r0, #0
   11134:	bl	107d4 <time@plt>
   11138:	bl	10744 <srand@plt>
   1113c:	cmp	r4, #1
   11140:	poplt	{r4, r5, r6, r7, fp, pc}
   11144:	ldr	r6, [pc, #52]	; 11180 <sprintf@plt+0x958>
   11148:	add	r6, pc, r6
   1114c:	bl	10804 <rand@plt>
   11150:	asr	r1, r0, #31
   11154:	subs	r4, r4, #1
   11158:	add	r1, r0, r1, lsr #26
   1115c:	bic	r1, r1, #63	; 0x3f
   11160:	sub	r0, r0, r1
   11164:	ldrb	r0, [r6, r0]
   11168:	strb	r0, [r5], #1
   1116c:	bne	1114c <sprintf@plt+0x924>
   11170:	pop	{r4, r5, r6, r7, fp, pc}
   11174:	andeq	r0, r0, r5, lsl #4
   11178:	andeq	r0, r0, r5, lsl #3
   1117c:	andeq	r0, r0, r5, asr #3
   11180:	andeq	r0, r0, r9, lsr r1
   11184:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11188:	mov	r7, r0
   1118c:	ldr	r6, [pc, #72]	; 111dc <sprintf@plt+0x9b4>
   11190:	ldr	r5, [pc, #72]	; 111e0 <sprintf@plt+0x9b8>
   11194:	add	r6, pc, r6
   11198:	add	r5, pc, r5
   1119c:	sub	r6, r6, r5
   111a0:	mov	r8, r1
   111a4:	mov	r9, r2
   111a8:	bl	1070c <open@plt-0x20>
   111ac:	asrs	r6, r6, #2
   111b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   111b4:	mov	r4, #0
   111b8:	add	r4, r4, #1
   111bc:	ldr	r3, [r5], #4
   111c0:	mov	r2, r9
   111c4:	mov	r1, r8
   111c8:	mov	r0, r7
   111cc:	blx	r3
   111d0:	cmp	r6, r4
   111d4:	bne	111b8 <sprintf@plt+0x990>
   111d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   111dc:	andeq	r0, r1, r8, asr sp
   111e0:	andeq	r0, r1, r0, asr sp
   111e4:	bx	lr

Disassembly of section .fini:

000111e8 <.fini>:
   111e8:	push	{r3, lr}
   111ec:	pop	{r3, pc}
