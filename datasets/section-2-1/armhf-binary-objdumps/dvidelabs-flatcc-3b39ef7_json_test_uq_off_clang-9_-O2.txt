
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

00014e04 <.init>:
   14e04:	push	{r3, lr}
   14e08:	bl	14f84 <_start@@Base+0x3c>
   14e0c:	pop	{r3, pc}

Disassembly of section .plt:

00014e10 <raise@plt-0x14>:
   14e10:	push	{lr}		; (str lr, [sp, #-4]!)
   14e14:	ldr	lr, [pc, #4]	; 14e20 <raise@plt-0x4>
   14e18:	add	lr, pc, lr
   14e1c:	ldr	pc, [lr, #8]!
   14e20:	andeq	r7, r4, r0, ror #3

00014e24 <raise@plt>:
   14e24:	add	ip, pc, #0, 12
   14e28:	add	ip, ip, #290816	; 0x47000
   14e2c:	ldr	pc, [ip, #480]!	; 0x1e0

00014e30 <strcmp@plt>:
   14e30:	add	ip, pc, #0, 12
   14e34:	add	ip, ip, #290816	; 0x47000
   14e38:	ldr	pc, [ip, #472]!	; 0x1d8

00014e3c <memmove@plt>:
   14e3c:	add	ip, pc, #0, 12
   14e40:	add	ip, ip, #290816	; 0x47000
   14e44:	ldr	pc, [ip, #464]!	; 0x1d0

00014e48 <free@plt>:
   14e48:	add	ip, pc, #0, 12
   14e4c:	add	ip, ip, #290816	; 0x47000
   14e50:	ldr	pc, [ip, #456]!	; 0x1c8

00014e54 <memcpy@plt>:
   14e54:	add	ip, pc, #0, 12
   14e58:	add	ip, ip, #290816	; 0x47000
   14e5c:	ldr	pc, [ip, #448]!	; 0x1c0

00014e60 <__isinff@plt>:
   14e60:	add	ip, pc, #0, 12
   14e64:	add	ip, ip, #290816	; 0x47000
   14e68:	ldr	pc, [ip, #440]!	; 0x1b8

00014e6c <__isinf@plt>:
   14e6c:	add	ip, pc, #0, 12
   14e70:	add	ip, ip, #290816	; 0x47000
   14e74:	ldr	pc, [ip, #432]!	; 0x1b0

00014e78 <realloc@plt>:
   14e78:	add	ip, pc, #0, 12
   14e7c:	add	ip, ip, #290816	; 0x47000
   14e80:	ldr	pc, [ip, #424]!	; 0x1a8

00014e84 <fwrite@plt>:
   14e84:	add	ip, pc, #0, 12
   14e88:	add	ip, ip, #290816	; 0x47000
   14e8c:	ldr	pc, [ip, #416]!	; 0x1a0

00014e90 <malloc@plt>:
   14e90:	add	ip, pc, #0, 12
   14e94:	add	ip, ip, #290816	; 0x47000
   14e98:	ldr	pc, [ip, #408]!	; 0x198

00014e9c <__libc_start_main@plt>:
   14e9c:	add	ip, pc, #0, 12
   14ea0:	add	ip, ip, #290816	; 0x47000
   14ea4:	ldr	pc, [ip, #400]!	; 0x190

00014ea8 <__gmon_start__@plt>:
   14ea8:	add	ip, pc, #0, 12
   14eac:	add	ip, ip, #290816	; 0x47000
   14eb0:	ldr	pc, [ip, #392]!	; 0x188

00014eb4 <bcmp@plt>:
   14eb4:	add	ip, pc, #0, 12
   14eb8:	add	ip, ip, #290816	; 0x47000
   14ebc:	ldr	pc, [ip, #384]!	; 0x180

00014ec0 <strlen@plt>:
   14ec0:	add	ip, pc, #0, 12
   14ec4:	add	ip, ip, #290816	; 0x47000
   14ec8:	ldr	pc, [ip, #376]!	; 0x178

00014ecc <fprintf@plt>:
   14ecc:	add	ip, pc, #0, 12
   14ed0:	add	ip, ip, #290816	; 0x47000
   14ed4:	ldr	pc, [ip, #368]!	; 0x170

00014ed8 <posix_memalign@plt>:
   14ed8:	add	ip, pc, #0, 12
   14edc:	add	ip, ip, #290816	; 0x47000
   14ee0:	ldr	pc, [ip, #360]!	; 0x168

00014ee4 <memset@plt>:
   14ee4:	add	ip, pc, #0, 12
   14ee8:	add	ip, ip, #290816	; 0x47000
   14eec:	ldr	pc, [ip, #352]!	; 0x160

00014ef0 <strncpy@plt>:
   14ef0:	add	ip, pc, #0, 12
   14ef4:	add	ip, ip, #290816	; 0x47000
   14ef8:	ldr	pc, [ip, #344]!	; 0x158

00014efc <strtod@plt>:
   14efc:	add	ip, pc, #0, 12
   14f00:	add	ip, ip, #290816	; 0x47000
   14f04:	ldr	pc, [ip, #336]!	; 0x150

00014f08 <memchr@plt>:
   14f08:	add	ip, pc, #0, 12
   14f0c:	add	ip, ip, #290816	; 0x47000
   14f10:	ldr	pc, [ip, #328]!	; 0x148

00014f14 <fputc@plt>:
   14f14:	add	ip, pc, #0, 12
   14f18:	add	ip, ip, #290816	; 0x47000
   14f1c:	ldr	pc, [ip, #320]!	; 0x140

00014f20 <sprintf@plt>:
   14f20:	add	ip, pc, #0, 12
   14f24:	add	ip, ip, #290816	; 0x47000
   14f28:	ldr	pc, [ip, #312]!	; 0x138

00014f2c <abort@plt>:
   14f2c:	add	ip, pc, #0, 12
   14f30:	add	ip, ip, #290816	; 0x47000
   14f34:	ldr	pc, [ip, #304]!	; 0x130

00014f38 <__assert_fail@plt>:
   14f38:	add	ip, pc, #0, 12
   14f3c:	add	ip, ip, #290816	; 0x47000
   14f40:	ldr	pc, [ip, #296]!	; 0x128

Disassembly of section .text:

00014f48 <_start@@Base>:
   14f48:	mov	fp, #0
   14f4c:	mov	lr, #0
   14f50:	pop	{r1}		; (ldr r1, [sp], #4)
   14f54:	mov	r2, sp
   14f58:	push	{r2}		; (str r2, [sp, #-4]!)
   14f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   14f60:	ldr	ip, [pc, #16]	; 14f78 <_start@@Base+0x30>
   14f64:	push	{ip}		; (str ip, [sp, #-4]!)
   14f68:	ldr	r0, [pc, #12]	; 14f7c <_start@@Base+0x34>
   14f6c:	ldr	r3, [pc, #12]	; 14f80 <_start@@Base+0x38>
   14f70:	bl	14e9c <__libc_start_main@plt>
   14f74:	bl	14f2c <abort@plt>
   14f78:	andeq	r5, r4, r0, asr #16
   14f7c:			; <UNDEFINED> instruction: 0x00015eb8
   14f80:	andeq	r5, r4, r0, ror #15
   14f84:	ldr	r3, [pc, #20]	; 14fa0 <_start@@Base+0x58>
   14f88:	ldr	r2, [pc, #20]	; 14fa4 <_start@@Base+0x5c>
   14f8c:	add	r3, pc, r3
   14f90:	ldr	r2, [r3, r2]
   14f94:	cmp	r2, #0
   14f98:	bxeq	lr
   14f9c:	b	14ea8 <__gmon_start__@plt>
   14fa0:	andeq	r7, r4, ip, rrx
   14fa4:	andeq	r0, r0, r4, ror r0
   14fa8:	ldr	r0, [pc, #24]	; 14fc8 <_start@@Base+0x80>
   14fac:	ldr	r3, [pc, #24]	; 14fcc <_start@@Base+0x84>
   14fb0:	cmp	r3, r0
   14fb4:	bxeq	lr
   14fb8:	ldr	r3, [pc, #16]	; 14fd0 <_start@@Base+0x88>
   14fbc:	cmp	r3, #0
   14fc0:	bxeq	lr
   14fc4:	bx	r3
   14fc8:	andeq	ip, r5, r8, asr r3
   14fcc:	andeq	ip, r5, r8, asr r3
   14fd0:	andeq	r0, r0, r0
   14fd4:	ldr	r0, [pc, #36]	; 15000 <_start@@Base+0xb8>
   14fd8:	ldr	r1, [pc, #36]	; 15004 <_start@@Base+0xbc>
   14fdc:	sub	r1, r1, r0
   14fe0:	asr	r1, r1, #2
   14fe4:	add	r1, r1, r1, lsr #31
   14fe8:	asrs	r1, r1, #1
   14fec:	bxeq	lr
   14ff0:	ldr	r3, [pc, #16]	; 15008 <_start@@Base+0xc0>
   14ff4:	cmp	r3, #0
   14ff8:	bxeq	lr
   14ffc:	bx	r3
   15000:	andeq	ip, r5, r8, asr r3
   15004:	andeq	ip, r5, r8, asr r3
   15008:	andeq	r0, r0, r0
   1500c:	push	{r4, lr}
   15010:	ldr	r4, [pc, #24]	; 15030 <_start@@Base+0xe8>
   15014:	ldrb	r3, [r4]
   15018:	cmp	r3, #0
   1501c:	popne	{r4, pc}
   15020:	bl	14fa8 <_start@@Base+0x60>
   15024:	mov	r3, #1
   15028:	strb	r3, [r4]
   1502c:	pop	{r4, pc}
   15030:	andeq	ip, r5, r8, asr r3
   15034:	b	14fd4 <_start@@Base+0x8c>

00015038 <test_json@@Base>:
   15038:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1503c:	add	fp, sp, #28
   15040:	sub	sp, sp, #364	; 0x16c
   15044:	mov	r6, r0
   15048:	add	r0, sp, #100	; 0x64
   1504c:	mov	r7, r3
   15050:	mov	r9, r2
   15054:	mov	r4, r1
   15058:	bl	2ce1c <flatcc_builder_init@@Base>
   1505c:	add	r0, sp, #12
   15060:	mov	r1, #0
   15064:	bl	44d04 <flatcc_json_printer_init_dynamic_buffer@@Base>
   15068:	ldr	r0, [fp, #12]
   1506c:	ldr	r5, [fp, #8]
   15070:	ldr	r8, [fp, #16]
   15074:	uxtb	r1, r0
   15078:	tst	r0, #16
   1507c:	ubfx	r2, r1, #3, #1
   15080:	strb	r2, [sp, #41]	; 0x29
   15084:	ubfx	r2, r1, #2, #1
   15088:	strb	r2, [sp, #40]	; 0x28
   1508c:	ubfx	r1, r1, #1, #1
   15090:	strb	r1, [sp, #39]	; 0x27
   15094:	and	r1, r0, #1
   15098:	strb	r1, [sp, #38]	; 0x26
   1509c:	movne	r1, #2
   150a0:	strbne	r1, [sp, #37]	; 0x25
   150a4:	tst	r0, #32
   150a8:	movne	r0, #0
   150ac:	strbne	r0, [sp, #39]	; 0x27
   150b0:	movwne	r0, #258	; 0x102
   150b4:	strhne	r0, [sp, #37]	; 0x25
   150b8:	mov	r0, r4
   150bc:	bl	14ec0 <strlen@plt>
   150c0:	mov	r3, r0
   150c4:	ldm	r6, {r0, r1}
   150c8:	str	r5, [sp]
   150cc:	mov	r2, r4
   150d0:	stmib	sp, {r0, r1}
   150d4:	add	r0, sp, #100	; 0x64
   150d8:	add	r1, sp, #60	; 0x3c
   150dc:	bl	37efc <flatcc_json_parser_table_as_root@@Base>
   150e0:	cmp	r0, r7
   150e4:	bne	15194 <test_json@@Base+0x15c>
   150e8:	mov	r5, #0
   150ec:	cmp	r7, #0
   150f0:	beq	150fc <test_json@@Base+0xc4>
   150f4:	mov	r4, #0
   150f8:	b	15170 <test_json@@Base+0x138>
   150fc:	add	r0, sp, #100	; 0x64
   15100:	sub	r1, fp, #56	; 0x38
   15104:	bl	31970 <flatcc_builder_finalize_aligned_buffer@@Base>
   15108:	ldr	r2, [r6]
   1510c:	ldr	r3, [r6, #12]
   15110:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15114:	mov	r4, r0
   15118:	bl	32c88 <flatcc_verify_table_as_root@@Base>
   1511c:	cmp	r0, #0
   15120:	bne	15254 <test_json@@Base+0x21c>
   15124:	ldr	r0, [r6, #8]
   15128:	ldr	r3, [r6]
   1512c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15130:	add	r6, sp, #12
   15134:	mov	r1, r4
   15138:	str	r0, [sp]
   1513c:	mov	r0, r6
   15140:	bl	44354 <flatcc_json_printer_table_as_root@@Base>
   15144:	sub	r1, fp, #60	; 0x3c
   15148:	mov	r0, r6
   1514c:	bl	44e2c <flatcc_json_printer_get_buffer@@Base>
   15150:	mov	r6, r0
   15154:	cmp	r0, #0
   15158:	beq	151c8 <test_json@@Base+0x190>
   1515c:	mov	r0, r9
   15160:	mov	r1, r6
   15164:	bl	14e30 <strcmp@plt>
   15168:	cmp	r0, #0
   1516c:	bne	151c8 <test_json@@Base+0x190>
   15170:	mov	r0, r4
   15174:	bl	31ab0 <flatcc_builder_aligned_free@@Base>
   15178:	add	r0, sp, #100	; 0x64
   1517c:	bl	2d18c <flatcc_builder_clear@@Base>
   15180:	add	r0, sp, #12
   15184:	bl	44ec4 <flatcc_json_printer_clear@@Base>
   15188:	mov	r0, r5
   1518c:	sub	sp, fp, #28
   15190:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15194:	cmp	r7, #0
   15198:	beq	15228 <test_json@@Base+0x1f0>
   1519c:	ldr	r6, [pc, #708]	; 15468 <test_json@@Base+0x430>
   151a0:	cmp	r0, #0
   151a4:	ldr	r6, [pc, r6]
   151a8:	ldr	r5, [r6]
   151ac:	bne	152d4 <test_json@@Base+0x29c>
   151b0:	mov	r0, r7
   151b4:	bl	33dac <flatcc_json_parser_error_string@@Base>
   151b8:	ldr	r1, [pc, #692]	; 15474 <test_json@@Base+0x43c>
   151bc:	mov	r3, r0
   151c0:	add	r1, pc, r1
   151c4:	b	15244 <test_json@@Base+0x20c>
   151c8:	ldr	r7, [pc, #712]	; 15498 <test_json@@Base+0x460>
   151cc:	mov	r2, r8
   151d0:	ldr	r7, [pc, r7]
   151d4:	ldr	r0, [r7]
   151d8:	ldr	r1, [pc, #700]	; 1549c <test_json@@Base+0x464>
   151dc:	add	r1, pc, r1
   151e0:	bl	14ecc <fprintf@plt>
   151e4:	ldr	r0, [r7]
   151e8:	ldr	r5, [pc, #688]	; 154a0 <test_json@@Base+0x468>
   151ec:	mov	r2, r6
   151f0:	add	r5, pc, r5
   151f4:	mov	r1, r5
   151f8:	bl	14ecc <fprintf@plt>
   151fc:	ldr	r3, [r7]
   15200:	ldr	r0, [pc, #668]	; 154a4 <test_json@@Base+0x46c>
   15204:	mov	r1, #10
   15208:	mov	r2, #1
   1520c:	add	r0, pc, r0
   15210:	bl	14e84 <fwrite@plt>
   15214:	ldr	r0, [r7]
   15218:	mov	r1, r5
   1521c:	mov	r2, r9
   15220:	bl	14ecc <fprintf@plt>
   15224:	b	15284 <test_json@@Base+0x24c>
   15228:	ldr	r1, [pc, #584]	; 15478 <test_json@@Base+0x440>
   1522c:	ldr	r1, [pc, r1]
   15230:	ldr	r5, [r1]
   15234:	bl	33dac <flatcc_json_parser_error_string@@Base>
   15238:	ldr	r1, [pc, #572]	; 1547c <test_json@@Base+0x444>
   1523c:	mov	r3, r0
   15240:	add	r1, pc, r1
   15244:	mov	r0, r5
   15248:	mov	r2, r8
   1524c:	bl	14ecc <fprintf@plt>
   15250:	b	15310 <test_json@@Base+0x2d8>
   15254:	ldr	r1, [pc, #560]	; 1548c <test_json@@Base+0x454>
   15258:	ldr	r1, [pc, r1]
   1525c:	ldr	r5, [r1]
   15260:	bl	32044 <flatcc_verify_error_string@@Base>
   15264:	str	r0, [sp]
   15268:	mov	r0, r5
   1526c:	mov	r3, r8
   15270:	ldr	r1, [pc, #536]	; 15490 <test_json@@Base+0x458>
   15274:	ldr	r2, [pc, #536]	; 15494 <test_json@@Base+0x45c>
   15278:	add	r1, pc, r1
   1527c:	add	r2, pc, r2
   15280:	bl	14ecc <fprintf@plt>
   15284:	mvn	r5, #0
   15288:	cmp	r4, #0
   1528c:	beq	150f4 <test_json@@Base+0xbc>
   15290:	ldr	r0, [pc, #528]	; 154a8 <test_json@@Base+0x470>
   15294:	ldr	r0, [pc, r0]
   15298:	ldr	r9, [fp, #-56]	; 0xffffffc8
   1529c:	ldr	r6, [r0]
   152a0:	ldr	r1, [pc, #516]	; 154ac <test_json@@Base+0x474>
   152a4:	ldr	r2, [pc, #516]	; 154b0 <test_json@@Base+0x478>
   152a8:	add	r1, pc, r1
   152ac:	add	r2, pc, r2
   152b0:	mov	r0, r6
   152b4:	bl	14ecc <fprintf@plt>
   152b8:	cmp	r9, #0
   152bc:	beq	15450 <test_json@@Base+0x418>
   152c0:	sub	r7, fp, #49	; 0x31
   152c4:	mov	r8, #0
   152c8:	ands	sl, r8, #15
   152cc:	bne	15400 <test_json@@Base+0x3c8>
   152d0:	b	153e0 <test_json@@Base+0x3a8>
   152d4:	bl	33dac <flatcc_json_parser_error_string@@Base>
   152d8:	ldr	r1, [pc, #396]	; 1546c <test_json@@Base+0x434>
   152dc:	mov	r3, r0
   152e0:	mov	r0, r5
   152e4:	mov	r2, r8
   152e8:	add	r1, pc, r1
   152ec:	bl	14ecc <fprintf@plt>
   152f0:	ldr	r5, [r6]
   152f4:	mov	r0, r7
   152f8:	bl	33dac <flatcc_json_parser_error_string@@Base>
   152fc:	ldr	r1, [pc, #364]	; 15470 <test_json@@Base+0x438>
   15300:	mov	r2, r0
   15304:	mov	r0, r5
   15308:	add	r1, pc, r1
   1530c:	bl	14ecc <fprintf@plt>
   15310:	ldr	r5, [pc, #360]	; 15480 <test_json@@Base+0x448>
   15314:	mov	r2, r4
   15318:	ldr	r5, [pc, r5]
   1531c:	ldr	r0, [r5]
   15320:	ldr	r1, [pc, #348]	; 15484 <test_json@@Base+0x44c>
   15324:	add	r1, pc, r1
   15328:	bl	14ecc <fprintf@plt>
   1532c:	ldr	r0, [sp, #76]	; 0x4c
   15330:	ldr	r3, [r5]
   15334:	cmp	r0, #2
   15338:	blt	15364 <test_json@@Base+0x32c>
   1533c:	mov	r4, #0
   15340:	mov	r0, #32
   15344:	mov	r1, r3
   15348:	bl	14f14 <fputc@plt>
   1534c:	ldr	r0, [sp, #76]	; 0x4c
   15350:	ldr	r3, [r5]
   15354:	add	r4, r4, #1
   15358:	sub	r0, r0, #1
   1535c:	cmp	r4, r0
   15360:	blt	15340 <test_json@@Base+0x308>
   15364:	ldr	r0, [pc, #284]	; 15488 <test_json@@Base+0x450>
   15368:	mov	r1, #2
   1536c:	mov	r2, #1
   15370:	add	r0, pc, r0
   15374:	bl	14e84 <fwrite@plt>
   15378:	mvn	r5, #0
   1537c:	b	150f4 <test_json@@Base+0xbc>
   15380:	ldr	r1, [pc, #304]	; 154b8 <test_json@@Base+0x480>
   15384:	mov	r0, r6
   15388:	mov	r2, r8
   1538c:	add	r1, pc, r1
   15390:	bl	14ecc <fprintf@plt>
   15394:	ldrb	r2, [r4, r8]
   15398:	ldr	r1, [pc, #292]	; 154c4 <test_json@@Base+0x48c>
   1539c:	mov	r0, r6
   153a0:	add	r1, pc, r1
   153a4:	bl	14ecc <fprintf@plt>
   153a8:	ldrb	r0, [r4, r8]
   153ac:	add	r8, r8, #1
   153b0:	sub	r1, r0, #32
   153b4:	uxtb	r1, r1
   153b8:	cmp	r1, #94	; 0x5e
   153bc:	mov	r1, #0
   153c0:	movwhi	r0, #46	; 0x2e
   153c4:	cmp	r9, r8
   153c8:	strb	r0, [r7, sl]
   153cc:	add	r0, r7, sl
   153d0:	strb	r1, [r0, #1]
   153d4:	beq	15418 <test_json@@Base+0x3e0>
   153d8:	ands	sl, r8, #15
   153dc:	bne	15400 <test_json@@Base+0x3c8>
   153e0:	cmp	r8, #0
   153e4:	beq	15380 <test_json@@Base+0x348>
   153e8:	ldr	r1, [pc, #196]	; 154b4 <test_json@@Base+0x47c>
   153ec:	mov	r0, r6
   153f0:	mov	r2, r7
   153f4:	add	r1, pc, r1
   153f8:	bl	14ecc <fprintf@plt>
   153fc:	b	15380 <test_json@@Base+0x348>
   15400:	tst	r8, #7
   15404:	bne	15394 <test_json@@Base+0x35c>
   15408:	mov	r0, #32
   1540c:	mov	r1, r6
   15410:	bl	14f14 <fputc@plt>
   15414:	b	15394 <test_json@@Base+0x35c>
   15418:	tst	r9, #15
   1541c:	beq	15450 <test_json@@Base+0x418>
   15420:	ldr	r8, [pc, #148]	; 154bc <test_json@@Base+0x484>
   15424:	add	r7, r9, #1
   15428:	add	r8, pc, r8
   1542c:	mov	r0, r8
   15430:	mov	r1, #3
   15434:	mov	r2, #1
   15438:	mov	r3, r6
   1543c:	bl	14e84 <fwrite@plt>
   15440:	add	r0, r7, #1
   15444:	tst	r7, #15
   15448:	mov	r7, r0
   1544c:	bne	1542c <test_json@@Base+0x3f4>
   15450:	ldr	r1, [pc, #104]	; 154c0 <test_json@@Base+0x488>
   15454:	sub	r2, fp, #49	; 0x31
   15458:	mov	r0, r6
   1545c:	add	r1, pc, r1
   15460:	bl	14ecc <fprintf@plt>
   15464:	b	15170 <test_json@@Base+0x138>
   15468:	andeq	r6, r4, r4, asr #29
   1546c:	andeq	r0, r3, r4, ror #10
   15470:	andeq	r0, r3, fp, lsl #11
   15474:			; <UNDEFINED> instruction: 0x000306b2
   15478:	andeq	r6, r4, ip, lsr lr
   1547c:	andeq	r0, r3, r2, ror r6
   15480:	andeq	r6, r4, r0, asr sp
   15484:	andeq	r3, r3, r4, lsl #1
   15488:	andeq	r0, r3, r3, ror #10
   1548c:	andeq	r6, r4, r0, lsl lr
   15490:	andeq	r0, r3, lr, asr r6
   15494:	andeq	r0, r3, r1, lsl #13
   15498:	muleq	r4, r8, lr
   1549c:	andeq	r0, r3, r3, lsl #15
   154a0:			; <UNDEFINED> instruction: 0x000331b8
   154a4:	andeq	r0, r3, r8, lsl #15
   154a8:	ldrdeq	r6, [r4], -r4
   154ac:	strdeq	r3, [r3], -r9
   154b0:	strdeq	r0, [r3], -r3
   154b4:			; <UNDEFINED> instruction: 0x00032fb2
   154b8:	andeq	r3, r3, r0, lsr #32
   154bc:	muleq	r3, r2, pc	; <UNPREDICTABLE>
   154c0:	andeq	r2, r3, sl, asr #30
   154c4:	andeq	r3, r3, r4, lsl r0

000154c8 <edge_case_tests@@Base>:
   154c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   154cc:	add	fp, sp, #28
   154d0:	sub	sp, sp, #28
   154d4:	mov	r9, #0
   154d8:	mov	r0, #158	; 0x9e
   154dc:	mov	r3, #0
   154e0:	str	r9, [sp]
   154e4:	str	r9, [sp, #4]
   154e8:	str	r0, [sp, #8]
   154ec:	ldr	r4, [pc, #468]	; 156c8 <edge_case_tests@@Base+0x200>
   154f0:	ldr	r1, [pc, #468]	; 156cc <edge_case_tests@@Base+0x204>
   154f4:	ldr	r2, [pc, #468]	; 156d0 <edge_case_tests@@Base+0x208>
   154f8:	add	r4, pc, r4
   154fc:	add	r1, pc, r1
   15500:	add	r2, pc, r2
   15504:	mov	r0, r4
   15508:	bl	15038 <test_json@@Base>
   1550c:	str	r0, [sp, #24]
   15510:	mov	r7, #2
   15514:	mov	r0, #168	; 0xa8
   15518:	mov	r3, #0
   1551c:	stm	sp, {r7, r9}
   15520:	str	r0, [sp, #8]
   15524:	mov	r0, r4
   15528:	ldr	r5, [pc, #420]	; 156d4 <edge_case_tests@@Base+0x20c>
   1552c:	ldr	sl, [pc, #420]	; 156d8 <edge_case_tests@@Base+0x210>
   15530:	add	r5, pc, r5
   15534:	add	sl, pc, sl
   15538:	mov	r1, r5
   1553c:	mov	r2, sl
   15540:	bl	15038 <test_json@@Base>
   15544:	str	r0, [sp, #20]
   15548:	mov	r0, #172	; 0xac
   1554c:	str	r9, [sp]
   15550:	str	r7, [sp, #4]
   15554:	mov	r3, #0
   15558:	str	r0, [sp, #8]
   1555c:	mov	r0, r4
   15560:	ldr	r1, [pc, #372]	; 156dc <edge_case_tests@@Base+0x214>
   15564:	ldr	r2, [pc, #372]	; 156e0 <edge_case_tests@@Base+0x218>
   15568:	add	r1, pc, r1
   1556c:	add	r2, pc, r2
   15570:	bl	15038 <test_json@@Base>
   15574:	str	r0, [sp, #16]
   15578:	mov	r0, #176	; 0xb0
   1557c:	mov	r1, #4
   15580:	str	r7, [sp]
   15584:	mov	r3, #0
   15588:	str	r1, [sp, #4]
   1558c:	str	r0, [sp, #8]
   15590:	mov	r0, r4
   15594:	mov	r1, r5
   15598:	ldr	r2, [pc, #324]	; 156e4 <edge_case_tests@@Base+0x21c>
   1559c:	add	r2, pc, r2
   155a0:	bl	15038 <test_json@@Base>
   155a4:	str	r0, [sp, #12]
   155a8:	mov	r0, #180	; 0xb4
   155ac:	mov	r1, #8
   155b0:	str	r9, [sp]
   155b4:	mov	r3, #0
   155b8:	str	r0, [sp, #8]
   155bc:	str	r1, [sp, #4]
   155c0:	mov	r0, r4
   155c4:	ldr	r1, [pc, #284]	; 156e8 <edge_case_tests@@Base+0x220>
   155c8:	ldr	r2, [pc, #284]	; 156ec <edge_case_tests@@Base+0x224>
   155cc:	add	r1, pc, r1
   155d0:	add	r2, pc, r2
   155d4:	bl	15038 <test_json@@Base>
   155d8:	mov	r6, r0
   155dc:	mov	r0, #195	; 0xc3
   155e0:	stm	sp, {r7, r9}
   155e4:	mov	r2, sl
   155e8:	mov	r3, #0
   155ec:	str	r0, [sp, #8]
   155f0:	mov	r0, r4
   155f4:	ldr	r1, [pc, #244]	; 156f0 <edge_case_tests@@Base+0x228>
   155f8:	add	r1, pc, r1
   155fc:	bl	15038 <test_json@@Base>
   15600:	mov	r7, r0
   15604:	mov	r0, #199	; 0xc7
   15608:	mov	sl, #1
   1560c:	str	r9, [sp, #4]
   15610:	mov	r3, #0
   15614:	str	r0, [sp, #8]
   15618:	str	sl, [sp]
   1561c:	mov	r0, r4
   15620:	ldr	r5, [pc, #204]	; 156f4 <edge_case_tests@@Base+0x22c>
   15624:	ldr	r2, [pc, #204]	; 156f8 <edge_case_tests@@Base+0x230>
   15628:	add	r5, pc, r5
   1562c:	add	r2, pc, r2
   15630:	mov	r1, r5
   15634:	bl	15038 <test_json@@Base>
   15638:	mov	r8, r0
   1563c:	mov	r0, #203	; 0xcb
   15640:	str	sl, [sp]
   15644:	str	sl, [sp, #4]
   15648:	mov	r1, r5
   1564c:	mov	r3, #0
   15650:	str	r0, [sp, #8]
   15654:	mov	r0, r4
   15658:	ldr	r2, [pc, #156]	; 156fc <edge_case_tests@@Base+0x234>
   1565c:	add	r2, pc, r2
   15660:	bl	15038 <test_json@@Base>
   15664:	mov	r1, #209	; 0xd1
   15668:	ldr	r2, [sp, #20]
   1566c:	str	sl, [sp]
   15670:	str	r9, [sp, #4]
   15674:	mov	r3, #0
   15678:	str	r1, [sp, #8]
   1567c:	ldr	r1, [sp, #24]
   15680:	orr	r1, r2, r1
   15684:	ldr	r2, [sp, #16]
   15688:	orr	r1, r1, r2
   1568c:	ldr	r2, [sp, #12]
   15690:	orr	r1, r1, r2
   15694:	orr	r1, r1, r6
   15698:	orr	r1, r1, r7
   1569c:	orr	r1, r1, r8
   156a0:	orr	r5, r1, r0
   156a4:	ldr	r1, [pc, #84]	; 15700 <edge_case_tests@@Base+0x238>
   156a8:	ldr	r2, [pc, #84]	; 15704 <edge_case_tests@@Base+0x23c>
   156ac:	mov	r0, r4
   156b0:	add	r1, pc, r1
   156b4:	add	r2, pc, r2
   156b8:	bl	15038 <test_json@@Base>
   156bc:	orr	r0, r5, r0
   156c0:	sub	sp, fp, #28
   156c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   156c8:	muleq	r4, r0, r8
   156cc:			; <UNDEFINED> instruction: 0x000304b1
   156d0:	andeq	r0, r3, r2, ror #9
   156d4:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   156d8:	andeq	r0, r3, sp, ror #9
   156dc:	ldrdeq	r0, [r3], -fp
   156e0:	strdeq	r0, [r3], -lr
   156e4:	andeq	r0, r3, fp, ror #9
   156e8:	andeq	r0, r3, lr, asr #9
   156ec:	andeq	r0, r3, ip, ror #9
   156f0:	ldrdeq	r0, [r3], -r6
   156f4:	andeq	r0, r3, ip, asr #11
   156f8:	strdeq	r0, [r3], -sl
   156fc:	andeq	r0, r3, r5, ror #11
   15700:	andeq	r0, r3, r8, lsr #11
   15704:	andeq	r0, r3, r2, ror r5

00015708 <error_case_tests@@Base>:
   15708:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1570c:	add	fp, sp, #28
   15710:	sub	sp, sp, #36	; 0x24
   15714:	mov	r6, #0
   15718:	movw	r0, #285	; 0x11d
   1571c:	mov	r2, #0
   15720:	mov	r3, #13
   15724:	str	r6, [sp]
   15728:	str	r6, [sp, #4]
   1572c:	str	r0, [sp, #8]
   15730:	ldr	r4, [pc, #568]	; 15970 <error_case_tests@@Base+0x268>
   15734:	ldr	r1, [pc, #568]	; 15974 <error_case_tests@@Base+0x26c>
   15738:	add	r4, pc, r4
   1573c:	add	r1, pc, r1
   15740:	mov	r0, r4
   15744:	bl	15038 <test_json@@Base>
   15748:	str	r0, [sp, #32]
   1574c:	movw	r0, #287	; 0x11f
   15750:	str	r6, [sp]
   15754:	str	r6, [sp, #4]
   15758:	mov	r2, #0
   1575c:	mov	r3, #13
   15760:	str	r0, [sp, #8]
   15764:	mov	r0, r4
   15768:	ldr	r1, [pc, #520]	; 15978 <error_case_tests@@Base+0x270>
   1576c:	add	r1, pc, r1
   15770:	bl	15038 <test_json@@Base>
   15774:	str	r0, [sp, #28]
   15778:	movw	r0, #289	; 0x121
   1577c:	str	r6, [sp]
   15780:	str	r6, [sp, #4]
   15784:	mov	r2, #0
   15788:	mov	r3, #13
   1578c:	str	r0, [sp, #8]
   15790:	mov	r0, r4
   15794:	ldr	r1, [pc, #480]	; 1597c <error_case_tests@@Base+0x274>
   15798:	add	r1, pc, r1
   1579c:	bl	15038 <test_json@@Base>
   157a0:	str	r0, [sp, #24]
   157a4:	movw	r0, #291	; 0x123
   157a8:	str	r6, [sp]
   157ac:	str	r6, [sp, #4]
   157b0:	mov	r2, #0
   157b4:	mov	r3, #13
   157b8:	str	r0, [sp, #8]
   157bc:	mov	r0, r4
   157c0:	ldr	r1, [pc, #440]	; 15980 <error_case_tests@@Base+0x278>
   157c4:	add	r1, pc, r1
   157c8:	bl	15038 <test_json@@Base>
   157cc:	str	r0, [sp, #20]
   157d0:	movw	r0, #293	; 0x125
   157d4:	str	r6, [sp]
   157d8:	str	r6, [sp, #4]
   157dc:	mov	r2, #0
   157e0:	mov	r3, #13
   157e4:	str	r0, [sp, #8]
   157e8:	mov	r0, r4
   157ec:	ldr	r1, [pc, #400]	; 15984 <error_case_tests@@Base+0x27c>
   157f0:	add	r1, pc, r1
   157f4:	bl	15038 <test_json@@Base>
   157f8:	str	r0, [sp, #16]
   157fc:	mov	r0, #296	; 0x128
   15800:	str	r6, [sp]
   15804:	str	r6, [sp, #4]
   15808:	mov	r2, #0
   1580c:	mov	r3, #13
   15810:	str	r0, [sp, #8]
   15814:	mov	r0, r4
   15818:	ldr	r1, [pc, #360]	; 15988 <error_case_tests@@Base+0x280>
   1581c:	add	r1, pc, r1
   15820:	bl	15038 <test_json@@Base>
   15824:	mov	r7, r0
   15828:	movw	r0, #299	; 0x12b
   1582c:	str	r6, [sp]
   15830:	str	r6, [sp, #4]
   15834:	mov	r2, #0
   15838:	mov	r3, #13
   1583c:	str	r0, [sp, #8]
   15840:	mov	r0, r4
   15844:	ldr	r1, [pc, #320]	; 1598c <error_case_tests@@Base+0x284>
   15848:	add	r1, pc, r1
   1584c:	bl	15038 <test_json@@Base>
   15850:	mov	r8, r0
   15854:	movw	r0, #303	; 0x12f
   15858:	str	r6, [sp]
   1585c:	str	r6, [sp, #4]
   15860:	mov	r2, #0
   15864:	mov	r3, #13
   15868:	str	r0, [sp, #8]
   1586c:	mov	r0, r4
   15870:	ldr	r1, [pc, #280]	; 15990 <error_case_tests@@Base+0x288>
   15874:	add	r1, pc, r1
   15878:	bl	15038 <test_json@@Base>
   1587c:	mov	r9, r0
   15880:	movw	r0, #307	; 0x133
   15884:	str	r6, [sp]
   15888:	str	r6, [sp, #4]
   1588c:	mov	r2, #0
   15890:	mov	r3, #13
   15894:	str	r0, [sp, #8]
   15898:	mov	r0, r4
   1589c:	ldr	r1, [pc, #240]	; 15994 <error_case_tests@@Base+0x28c>
   158a0:	add	r1, pc, r1
   158a4:	bl	15038 <test_json@@Base>
   158a8:	mov	sl, r0
   158ac:	movw	r0, #311	; 0x137
   158b0:	str	r6, [sp]
   158b4:	str	r6, [sp, #4]
   158b8:	mov	r2, #0
   158bc:	mov	r3, #5
   158c0:	str	r0, [sp, #8]
   158c4:	mov	r0, r4
   158c8:	ldr	r1, [pc, #200]	; 15998 <error_case_tests@@Base+0x290>
   158cc:	add	r1, pc, r1
   158d0:	bl	15038 <test_json@@Base>
   158d4:	mov	r5, r0
   158d8:	movw	r0, #314	; 0x13a
   158dc:	str	r6, [sp]
   158e0:	str	r6, [sp, #4]
   158e4:	mov	r2, #0
   158e8:	mov	r3, #5
   158ec:	str	r0, [sp, #8]
   158f0:	mov	r0, r4
   158f4:	ldr	r1, [pc, #160]	; 1599c <error_case_tests@@Base+0x294>
   158f8:	add	r1, pc, r1
   158fc:	bl	15038 <test_json@@Base>
   15900:	movw	r1, #317	; 0x13d
   15904:	ldr	r2, [sp, #28]
   15908:	str	r6, [sp]
   1590c:	str	r6, [sp, #4]
   15910:	mov	r3, #5
   15914:	str	r1, [sp, #8]
   15918:	ldr	r1, [sp, #32]
   1591c:	orr	r1, r2, r1
   15920:	ldr	r2, [sp, #24]
   15924:	orr	r1, r1, r2
   15928:	ldr	r2, [sp, #20]
   1592c:	orr	r1, r1, r2
   15930:	ldr	r2, [sp, #16]
   15934:	orr	r1, r1, r2
   15938:	mov	r2, #0
   1593c:	orr	r1, r1, r7
   15940:	orr	r1, r1, r8
   15944:	orr	r1, r1, r9
   15948:	orr	r1, r1, sl
   1594c:	orr	r1, r1, r5
   15950:	orr	r5, r1, r0
   15954:	ldr	r1, [pc, #68]	; 159a0 <error_case_tests@@Base+0x298>
   15958:	mov	r0, r4
   1595c:	add	r1, pc, r1
   15960:	bl	15038 <test_json@@Base>
   15964:	orr	r0, r5, r0
   15968:	sub	sp, fp, #28
   1596c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15970:	andeq	r6, r4, r0, asr r6
   15974:	andeq	r0, r3, sp, lsl #11
   15978:	andeq	r0, r3, r7, ror r5
   1597c:	andeq	r0, r3, ip, lsr #11
   15980:	ldrdeq	r0, [r3], -lr
   15984:	andeq	r0, r3, sl, lsl #12
   15988:	andeq	r0, r3, r3, lsr r6
   1598c:	andeq	r0, r3, r5, lsr #13
   15990:	andeq	r0, r3, r4, lsl r7
   15994:	andeq	r0, r3, pc, lsr #15
   15998:	andeq	r0, r3, sl, asr #16
   1599c:	andeq	r0, r3, r6, lsr r8
   159a0:	strdeq	r0, [r3], -r8

000159a4 <base64_tests@@Base>:
   159a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   159a8:	add	fp, sp, #28
   159ac:	sub	sp, sp, #20
   159b0:	mov	r8, #0
   159b4:	movw	r0, #369	; 0x171
   159b8:	mov	r3, #0
   159bc:	str	r8, [sp]
   159c0:	str	r8, [sp, #4]
   159c4:	str	r0, [sp, #8]
   159c8:	ldr	r4, [pc, #388]	; 15b54 <base64_tests@@Base+0x1b0>
   159cc:	ldr	r1, [pc, #388]	; 15b58 <base64_tests@@Base+0x1b4>
   159d0:	ldr	r2, [pc, #388]	; 15b5c <base64_tests@@Base+0x1b8>
   159d4:	add	r4, pc, r4
   159d8:	add	r1, pc, r1
   159dc:	add	r2, pc, r2
   159e0:	mov	r0, r4
   159e4:	bl	15038 <test_json@@Base>
   159e8:	str	r0, [sp, #16]
   159ec:	mov	r0, #372	; 0x174
   159f0:	str	r8, [sp]
   159f4:	str	r8, [sp, #4]
   159f8:	mov	r3, #0
   159fc:	str	r0, [sp, #8]
   15a00:	mov	r0, r4
   15a04:	ldr	r1, [pc, #340]	; 15b60 <base64_tests@@Base+0x1bc>
   15a08:	ldr	r2, [pc, #340]	; 15b64 <base64_tests@@Base+0x1c0>
   15a0c:	add	r1, pc, r1
   15a10:	add	r2, pc, r2
   15a14:	bl	15038 <test_json@@Base>
   15a18:	mov	r9, r0
   15a1c:	mov	r0, #376	; 0x178
   15a20:	str	r8, [sp]
   15a24:	str	r8, [sp, #4]
   15a28:	mov	r3, #0
   15a2c:	str	r0, [sp, #8]
   15a30:	mov	r0, r4
   15a34:	ldr	r1, [pc, #300]	; 15b68 <base64_tests@@Base+0x1c4>
   15a38:	ldr	r6, [pc, #300]	; 15b6c <base64_tests@@Base+0x1c8>
   15a3c:	add	r6, pc, r6
   15a40:	add	r1, pc, r1
   15a44:	mov	r2, r6
   15a48:	bl	15038 <test_json@@Base>
   15a4c:	mov	sl, r0
   15a50:	movw	r0, #379	; 0x17b
   15a54:	str	r8, [sp]
   15a58:	str	r8, [sp, #4]
   15a5c:	mov	r3, #0
   15a60:	str	r0, [sp, #8]
   15a64:	mov	r0, r4
   15a68:	ldr	r1, [pc, #256]	; 15b70 <base64_tests@@Base+0x1cc>
   15a6c:	ldr	r7, [pc, #256]	; 15b74 <base64_tests@@Base+0x1d0>
   15a70:	add	r7, pc, r7
   15a74:	add	r1, pc, r1
   15a78:	mov	r2, r7
   15a7c:	bl	15038 <test_json@@Base>
   15a80:	mov	r5, r0
   15a84:	movw	r0, #382	; 0x17e
   15a88:	str	r8, [sp]
   15a8c:	str	r8, [sp, #4]
   15a90:	mov	r2, r6
   15a94:	mov	r3, #0
   15a98:	str	r0, [sp, #8]
   15a9c:	mov	r0, r4
   15aa0:	ldr	r1, [pc, #208]	; 15b78 <base64_tests@@Base+0x1d4>
   15aa4:	add	r1, pc, r1
   15aa8:	bl	15038 <test_json@@Base>
   15aac:	mov	r6, r0
   15ab0:	movw	r0, #385	; 0x181
   15ab4:	str	r8, [sp]
   15ab8:	str	r8, [sp, #4]
   15abc:	mov	r2, r7
   15ac0:	mov	r3, #0
   15ac4:	str	r0, [sp, #8]
   15ac8:	mov	r0, r4
   15acc:	ldr	r1, [pc, #168]	; 15b7c <base64_tests@@Base+0x1d8>
   15ad0:	add	r1, pc, r1
   15ad4:	bl	15038 <test_json@@Base>
   15ad8:	mov	r7, r0
   15adc:	mov	r0, #388	; 0x184
   15ae0:	str	r8, [sp]
   15ae4:	str	r8, [sp, #4]
   15ae8:	mov	r2, #0
   15aec:	mov	r3, #31
   15af0:	str	r0, [sp, #8]
   15af4:	mov	r0, r4
   15af8:	ldr	r1, [pc, #128]	; 15b80 <base64_tests@@Base+0x1dc>
   15afc:	add	r1, pc, r1
   15b00:	bl	15038 <test_json@@Base>
   15b04:	movw	r1, #391	; 0x187
   15b08:	str	r8, [sp]
   15b0c:	str	r8, [sp, #4]
   15b10:	mov	r2, #0
   15b14:	mov	r3, #32
   15b18:	str	r1, [sp, #8]
   15b1c:	ldr	r1, [sp, #16]
   15b20:	orr	r1, r9, r1
   15b24:	orr	r1, r1, sl
   15b28:	orr	r1, r1, r5
   15b2c:	orr	r1, r1, r6
   15b30:	orr	r1, r1, r7
   15b34:	orr	r5, r1, r0
   15b38:	ldr	r1, [pc, #68]	; 15b84 <base64_tests@@Base+0x1e0>
   15b3c:	mov	r0, r4
   15b40:	add	r1, pc, r1
   15b44:	bl	15038 <test_json@@Base>
   15b48:	orr	r0, r5, r0
   15b4c:	sub	sp, fp, #28
   15b50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15b54:			; <UNDEFINED> instruction: 0x000463b4
   15b58:			; <UNDEFINED> instruction: 0x000307b4
   15b5c:	andeq	r0, r3, fp, lsr #1
   15b60:	muleq	r3, r6, r7
   15b64:			; <UNDEFINED> instruction: 0x000307b9
   15b68:	andeq	r0, r3, ip, lsr #15
   15b6c:	andeq	r0, r3, r9, ror #16
   15b70:	andeq	r0, r3, r5, ror #17
   15b74:	andeq	r0, r3, r5, lsr #19
   15b78:	andeq	r0, r3, r8, lsr #20
   15b7c:			; <UNDEFINED> instruction: 0x00030ab3
   15b80:	andeq	r0, r3, r1, asr #22
   15b84:			; <UNDEFINED> instruction: 0x00030bb6

00015b88 <mixed_type_union_tests@@Base>:
   15b88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b8c:	add	fp, sp, #28
   15b90:	sub	sp, sp, #20
   15b94:	mov	r8, #0
   15b98:	mov	r0, #432	; 0x1b0
   15b9c:	mov	r3, #0
   15ba0:	str	r8, [sp]
   15ba4:	str	r8, [sp, #4]
   15ba8:	str	r0, [sp, #8]
   15bac:	ldr	r4, [pc, #340]	; 15d08 <mixed_type_union_tests@@Base+0x180>
   15bb0:	ldr	r1, [pc, #340]	; 15d0c <mixed_type_union_tests@@Base+0x184>
   15bb4:	ldr	r2, [pc, #340]	; 15d10 <mixed_type_union_tests@@Base+0x188>
   15bb8:	add	r4, pc, r4
   15bbc:	add	r1, pc, r1
   15bc0:	add	r2, pc, r2
   15bc4:	mov	r0, r4
   15bc8:	bl	15038 <test_json@@Base>
   15bcc:	str	r0, [sp, #16]
   15bd0:	movw	r0, #437	; 0x1b5
   15bd4:	str	r8, [sp]
   15bd8:	str	r8, [sp, #4]
   15bdc:	mov	r3, #0
   15be0:	str	r0, [sp, #8]
   15be4:	mov	r0, r4
   15be8:	ldr	r1, [pc, #292]	; 15d14 <mixed_type_union_tests@@Base+0x18c>
   15bec:	ldr	r9, [pc, #292]	; 15d18 <mixed_type_union_tests@@Base+0x190>
   15bf0:	add	r9, pc, r9
   15bf4:	add	r1, pc, r1
   15bf8:	mov	r2, r9
   15bfc:	bl	15038 <test_json@@Base>
   15c00:	mov	sl, r0
   15c04:	movw	r0, #442	; 0x1ba
   15c08:	str	r8, [sp]
   15c0c:	str	r8, [sp, #4]
   15c10:	mov	r2, r9
   15c14:	mov	r3, #0
   15c18:	str	r0, [sp, #8]
   15c1c:	mov	r0, r4
   15c20:	ldr	r1, [pc, #244]	; 15d1c <mixed_type_union_tests@@Base+0x194>
   15c24:	add	r1, pc, r1
   15c28:	bl	15038 <test_json@@Base>
   15c2c:	mov	r5, r0
   15c30:	movw	r0, #449	; 0x1c1
   15c34:	str	r8, [sp]
   15c38:	str	r8, [sp, #4]
   15c3c:	mov	r3, #0
   15c40:	str	r0, [sp, #8]
   15c44:	mov	r0, r4
   15c48:	ldr	r1, [pc, #208]	; 15d20 <mixed_type_union_tests@@Base+0x198>
   15c4c:	ldr	r2, [pc, #208]	; 15d24 <mixed_type_union_tests@@Base+0x19c>
   15c50:	add	r1, pc, r1
   15c54:	add	r2, pc, r2
   15c58:	bl	15038 <test_json@@Base>
   15c5c:	mov	r6, r0
   15c60:	movw	r0, #458	; 0x1ca
   15c64:	str	r8, [sp]
   15c68:	str	r8, [sp, #4]
   15c6c:	mov	r3, #0
   15c70:	str	r0, [sp, #8]
   15c74:	mov	r0, r4
   15c78:	ldr	r1, [pc, #168]	; 15d28 <mixed_type_union_tests@@Base+0x1a0>
   15c7c:	ldr	r2, [pc, #168]	; 15d2c <mixed_type_union_tests@@Base+0x1a4>
   15c80:	add	r1, pc, r1
   15c84:	add	r2, pc, r2
   15c88:	bl	15038 <test_json@@Base>
   15c8c:	mov	r7, r0
   15c90:	movw	r0, #469	; 0x1d5
   15c94:	str	r8, [sp]
   15c98:	str	r8, [sp, #4]
   15c9c:	mov	r3, #0
   15ca0:	str	r0, [sp, #8]
   15ca4:	mov	r0, r4
   15ca8:	ldr	r1, [pc, #128]	; 15d30 <mixed_type_union_tests@@Base+0x1a8>
   15cac:	ldr	r2, [pc, #128]	; 15d34 <mixed_type_union_tests@@Base+0x1ac>
   15cb0:	add	r1, pc, r1
   15cb4:	add	r2, pc, r2
   15cb8:	bl	15038 <test_json@@Base>
   15cbc:	movw	r1, #474	; 0x1da
   15cc0:	str	r8, [sp]
   15cc4:	str	r8, [sp, #4]
   15cc8:	mov	r2, r9
   15ccc:	mov	r3, #0
   15cd0:	str	r1, [sp, #8]
   15cd4:	ldr	r1, [sp, #16]
   15cd8:	orr	r1, sl, r1
   15cdc:	orr	r1, r1, r5
   15ce0:	orr	r1, r1, r6
   15ce4:	orr	r1, r1, r7
   15ce8:	orr	r5, r1, r0
   15cec:	ldr	r1, [pc, #68]	; 15d38 <mixed_type_union_tests@@Base+0x1b0>
   15cf0:	mov	r0, r4
   15cf4:	add	r1, pc, r1
   15cf8:	bl	15038 <test_json@@Base>
   15cfc:	orr	r0, r5, r0
   15d00:	sub	sp, fp, #28
   15d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15d08:	andeq	r6, r4, r0, ror #3
   15d0c:	strdeq	r0, [r3], -r6
   15d10:	andeq	r0, r3, r1, asr #24
   15d14:	andeq	r0, r3, r4, asr ip
   15d18:	ldrdeq	r0, [r3], -fp
   15d1c:	andeq	r0, r3, lr, lsl sp
   15d20:	andeq	r0, r3, r8, lsl #27
   15d24:	andeq	r0, r3, r1, ror #28
   15d28:	andeq	r0, r3, lr, ror #29
   15d2c:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   15d30:	andeq	r1, r3, r2, lsr #1
   15d34:	andeq	r1, r3, pc, lsl r2
   15d38:	andeq	r1, r3, r5, lsr #6

00015d3c <union_vector_tests@@Base>:
   15d3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15d40:	add	fp, sp, #28
   15d44:	sub	sp, sp, #12
   15d48:	mov	r7, #0
   15d4c:	movw	r0, #485	; 0x1e5
   15d50:	mov	r3, #0
   15d54:	str	r7, [sp]
   15d58:	str	r7, [sp, #4]
   15d5c:	str	r0, [sp, #8]
   15d60:	ldr	r4, [pc, #288]	; 15e88 <union_vector_tests@@Base+0x14c>
   15d64:	ldr	r1, [pc, #288]	; 15e8c <union_vector_tests@@Base+0x150>
   15d68:	ldr	r8, [pc, #288]	; 15e90 <union_vector_tests@@Base+0x154>
   15d6c:	add	r4, pc, r4
   15d70:	add	r8, pc, r8
   15d74:	add	r1, pc, r1
   15d78:	mov	r0, r4
   15d7c:	mov	r2, r8
   15d80:	bl	15038 <test_json@@Base>
   15d84:	mov	r9, r0
   15d88:	mov	r0, #488	; 0x1e8
   15d8c:	str	r7, [sp]
   15d90:	str	r7, [sp, #4]
   15d94:	mov	r3, #0
   15d98:	str	r0, [sp, #8]
   15d9c:	mov	r0, r4
   15da0:	ldr	r1, [pc, #236]	; 15e94 <union_vector_tests@@Base+0x158>
   15da4:	ldr	r2, [pc, #236]	; 15e98 <union_vector_tests@@Base+0x15c>
   15da8:	add	r1, pc, r1
   15dac:	add	r2, pc, r2
   15db0:	bl	15038 <test_json@@Base>
   15db4:	mov	sl, r0
   15db8:	movw	r0, #491	; 0x1eb
   15dbc:	str	r7, [sp]
   15dc0:	str	r7, [sp, #4]
   15dc4:	mov	r3, #0
   15dc8:	str	r0, [sp, #8]
   15dcc:	mov	r0, r4
   15dd0:	ldr	r1, [pc, #196]	; 15e9c <union_vector_tests@@Base+0x160>
   15dd4:	ldr	r2, [pc, #196]	; 15ea0 <union_vector_tests@@Base+0x164>
   15dd8:	add	r1, pc, r1
   15ddc:	add	r2, pc, r2
   15de0:	bl	15038 <test_json@@Base>
   15de4:	mov	r6, r0
   15de8:	movw	r0, #494	; 0x1ee
   15dec:	str	r7, [sp]
   15df0:	str	r7, [sp, #4]
   15df4:	mov	r3, #0
   15df8:	str	r0, [sp, #8]
   15dfc:	mov	r0, r4
   15e00:	ldr	r1, [pc, #156]	; 15ea4 <union_vector_tests@@Base+0x168>
   15e04:	ldr	r2, [pc, #156]	; 15ea8 <union_vector_tests@@Base+0x16c>
   15e08:	add	r1, pc, r1
   15e0c:	add	r2, pc, r2
   15e10:	bl	15038 <test_json@@Base>
   15e14:	mov	r5, r0
   15e18:	movw	r0, #497	; 0x1f1
   15e1c:	str	r7, [sp]
   15e20:	str	r7, [sp, #4]
   15e24:	mov	r2, r8
   15e28:	mov	r3, #0
   15e2c:	str	r0, [sp, #8]
   15e30:	mov	r0, r4
   15e34:	ldr	r1, [pc, #112]	; 15eac <union_vector_tests@@Base+0x170>
   15e38:	add	r1, pc, r1
   15e3c:	bl	15038 <test_json@@Base>
   15e40:	mov	r1, #500	; 0x1f4
   15e44:	str	r7, [sp]
   15e48:	str	r7, [sp, #4]
   15e4c:	mov	r3, #0
   15e50:	str	r1, [sp, #8]
   15e54:	orr	r1, sl, r9
   15e58:	orr	r1, r1, r6
   15e5c:	orr	r1, r1, r5
   15e60:	orr	r5, r1, r0
   15e64:	ldr	r1, [pc, #68]	; 15eb0 <union_vector_tests@@Base+0x174>
   15e68:	ldr	r2, [pc, #68]	; 15eb4 <union_vector_tests@@Base+0x178>
   15e6c:	mov	r0, r4
   15e70:	add	r1, pc, r1
   15e74:	add	r2, pc, r2
   15e78:	bl	15038 <test_json@@Base>
   15e7c:	orr	r0, r5, r0
   15e80:	sub	sp, fp, #28
   15e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e88:	andeq	r6, r4, ip, lsr r0
   15e8c:	andeq	r1, r3, r2, lsr r3
   15e90:	andeq	r1, r3, r6, ror r3
   15e94:	andeq	r1, r3, r6, ror r3
   15e98:	andeq	r1, r3, r5, lsr #7
   15e9c:	andeq	r1, r3, r4, lsr #7
   15ea0:	andeq	r1, r3, sp, ror #7
   15ea4:	andeq	r1, r3, r5, lsl #8
   15ea8:	andeq	r1, r3, lr, ror r4
   15eac:			; <UNDEFINED> instruction: 0x000314be
   15eb0:	andeq	r1, r3, r5, asr #9
   15eb4:	andeq	r1, r3, r7, lsr #10

00015eb8 <main@@Base>:
   15eb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ebc:	add	fp, sp, #28
   15ec0:	sub	sp, sp, #164	; 0xa4
   15ec4:	bl	154c8 <edge_case_tests@@Base>
   15ec8:	str	r0, [fp, #-32]	; 0xffffffe0
   15ecc:	bl	15708 <error_case_tests@@Base>
   15ed0:	str	r0, [fp, #-36]	; 0xffffffdc
   15ed4:	bl	15d3c <union_vector_tests@@Base>
   15ed8:	str	r0, [fp, #-40]	; 0xffffffd8
   15edc:	bl	159a4 <base64_tests@@Base>
   15ee0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ee4:	bl	15b88 <mixed_type_union_tests@@Base>
   15ee8:	mov	r8, #0
   15eec:	str	r0, [fp, #-48]	; 0xffffffd0
   15ef0:	movw	r0, #525	; 0x20d
   15ef4:	mov	r3, #0
   15ef8:	str	r8, [sp]
   15efc:	str	r8, [sp, #4]
   15f00:	str	r0, [sp, #8]
   15f04:	ldr	r4, [pc, #2140]	; 16768 <main@@Base+0x8b0>
   15f08:	ldr	r1, [pc, #2140]	; 1676c <main@@Base+0x8b4>
   15f0c:	ldr	r9, [pc, #2140]	; 16770 <main@@Base+0x8b8>
   15f10:	add	r4, pc, r4
   15f14:	add	r9, pc, r9
   15f18:	add	r1, pc, r1
   15f1c:	mov	r0, r4
   15f20:	mov	r2, r9
   15f24:	bl	15038 <test_json@@Base>
   15f28:	str	r0, [fp, #-52]	; 0xffffffcc
   15f2c:	mov	r0, #528	; 0x210
   15f30:	str	r8, [sp]
   15f34:	str	r8, [sp, #4]
   15f38:	mov	r3, #0
   15f3c:	str	r0, [sp, #8]
   15f40:	mov	r0, r4
   15f44:	ldr	r1, [pc, #2088]	; 16774 <main@@Base+0x8bc>
   15f48:	ldr	r5, [pc, #2088]	; 16778 <main@@Base+0x8c0>
   15f4c:	add	r5, pc, r5
   15f50:	add	r1, pc, r1
   15f54:	mov	r2, r5
   15f58:	bl	15038 <test_json@@Base>
   15f5c:	str	r0, [fp, #-56]	; 0xffffffc8
   15f60:	movw	r0, #531	; 0x213
   15f64:	str	r8, [sp]
   15f68:	str	r8, [sp, #4]
   15f6c:	mov	r3, #0
   15f70:	str	r0, [sp, #8]
   15f74:	mov	r0, r4
   15f78:	ldr	r1, [pc, #2044]	; 1677c <main@@Base+0x8c4>
   15f7c:	ldr	r7, [pc, #2044]	; 16780 <main@@Base+0x8c8>
   15f80:	add	r7, pc, r7
   15f84:	add	r1, pc, r1
   15f88:	mov	r2, r7
   15f8c:	bl	15038 <test_json@@Base>
   15f90:	str	r0, [fp, #-60]	; 0xffffffc4
   15f94:	movw	r0, #534	; 0x216
   15f98:	str	r8, [sp]
   15f9c:	str	r8, [sp, #4]
   15fa0:	mov	r3, #0
   15fa4:	str	r0, [sp, #8]
   15fa8:	mov	r0, r4
   15fac:	ldr	r1, [pc, #2000]	; 16784 <main@@Base+0x8cc>
   15fb0:	ldr	r6, [pc, #2000]	; 16788 <main@@Base+0x8d0>
   15fb4:	add	r6, pc, r6
   15fb8:	add	r1, pc, r1
   15fbc:	mov	r2, r6
   15fc0:	bl	15038 <test_json@@Base>
   15fc4:	str	r0, [fp, #-64]	; 0xffffffc0
   15fc8:	movw	r0, #537	; 0x219
   15fcc:	str	r8, [sp]
   15fd0:	str	r8, [sp, #4]
   15fd4:	mov	r2, r6
   15fd8:	mov	r3, #0
   15fdc:	str	r0, [sp, #8]
   15fe0:	mov	r0, r4
   15fe4:	ldr	r1, [pc, #1952]	; 1678c <main@@Base+0x8d4>
   15fe8:	add	r1, pc, r1
   15fec:	bl	15038 <test_json@@Base>
   15ff0:	str	r0, [fp, #-68]	; 0xffffffbc
   15ff4:	mov	r0, #540	; 0x21c
   15ff8:	str	r8, [sp]
   15ffc:	str	r8, [sp, #4]
   16000:	mov	r2, r5
   16004:	mov	r3, #0
   16008:	str	r0, [sp, #8]
   1600c:	mov	r0, r4
   16010:	ldr	r1, [pc, #1912]	; 16790 <main@@Base+0x8d8>
   16014:	add	r1, pc, r1
   16018:	bl	15038 <test_json@@Base>
   1601c:	str	r0, [fp, #-72]	; 0xffffffb8
   16020:	movw	r0, #543	; 0x21f
   16024:	str	r8, [sp]
   16028:	str	r8, [sp, #4]
   1602c:	mov	r2, r7
   16030:	mov	r3, #0
   16034:	str	r0, [sp, #8]
   16038:	mov	r0, r4
   1603c:	ldr	r1, [pc, #1872]	; 16794 <main@@Base+0x8dc>
   16040:	add	r1, pc, r1
   16044:	bl	15038 <test_json@@Base>
   16048:	str	r0, [fp, #-76]	; 0xffffffb4
   1604c:	movw	r0, #547	; 0x223
   16050:	str	r8, [sp]
   16054:	str	r8, [sp, #4]
   16058:	mov	r2, r9
   1605c:	mov	r3, #0
   16060:	str	r0, [sp, #8]
   16064:	mov	r0, r4
   16068:	ldr	r1, [pc, #1832]	; 16798 <main@@Base+0x8e0>
   1606c:	add	r1, pc, r1
   16070:	bl	15038 <test_json@@Base>
   16074:	str	r0, [fp, #-80]	; 0xffffffb0
   16078:	movw	r0, #551	; 0x227
   1607c:	str	r8, [sp]
   16080:	str	r8, [sp, #4]
   16084:	mov	r2, r9
   16088:	mov	r3, #0
   1608c:	str	r0, [sp, #8]
   16090:	mov	r0, r4
   16094:	ldr	r1, [pc, #1792]	; 1679c <main@@Base+0x8e4>
   16098:	add	r1, pc, r1
   1609c:	bl	15038 <test_json@@Base>
   160a0:	str	r0, [fp, #-84]	; 0xffffffac
   160a4:	movw	r0, #601	; 0x259
   160a8:	str	r8, [sp]
   160ac:	str	r8, [sp, #4]
   160b0:	mov	r2, r5
   160b4:	mov	r3, #0
   160b8:	str	r0, [sp, #8]
   160bc:	mov	r0, r4
   160c0:	ldr	r1, [pc, #1752]	; 167a0 <main@@Base+0x8e8>
   160c4:	add	r1, pc, r1
   160c8:	bl	15038 <test_json@@Base>
   160cc:	str	r0, [fp, #-88]	; 0xffffffa8
   160d0:	mov	r0, #604	; 0x25c
   160d4:	str	r8, [sp]
   160d8:	str	r8, [sp, #4]
   160dc:	mov	r2, r7
   160e0:	mov	r3, #0
   160e4:	str	r0, [sp, #8]
   160e8:	mov	r0, r4
   160ec:	ldr	r1, [pc, #1712]	; 167a4 <main@@Base+0x8ec>
   160f0:	add	r1, pc, r1
   160f4:	bl	15038 <test_json@@Base>
   160f8:	str	r0, [fp, #-92]	; 0xffffffa4
   160fc:	movw	r0, #607	; 0x25f
   16100:	str	r8, [sp]
   16104:	str	r8, [sp, #4]
   16108:	mov	r3, #0
   1610c:	str	r0, [sp, #8]
   16110:	mov	r0, r4
   16114:	ldr	r1, [pc, #1676]	; 167a8 <main@@Base+0x8f0>
   16118:	ldr	r2, [pc, #1676]	; 167ac <main@@Base+0x8f4>
   1611c:	add	r1, pc, r1
   16120:	add	r2, pc, r2
   16124:	bl	15038 <test_json@@Base>
   16128:	str	r0, [sp, #96]	; 0x60
   1612c:	movw	r0, #610	; 0x262
   16130:	str	r8, [sp]
   16134:	str	r8, [sp, #4]
   16138:	mov	r2, r6
   1613c:	mov	r3, #0
   16140:	str	r0, [sp, #8]
   16144:	mov	r0, r4
   16148:	ldr	r1, [pc, #1632]	; 167b0 <main@@Base+0x8f8>
   1614c:	add	r1, pc, r1
   16150:	bl	15038 <test_json@@Base>
   16154:	str	r0, [sp, #92]	; 0x5c
   16158:	movw	r0, #613	; 0x265
   1615c:	str	r8, [sp]
   16160:	str	r8, [sp, #4]
   16164:	mov	r3, #0
   16168:	str	r0, [sp, #8]
   1616c:	mov	r0, r4
   16170:	ldr	r1, [pc, #1596]	; 167b4 <main@@Base+0x8fc>
   16174:	ldr	r2, [pc, #1596]	; 167b8 <main@@Base+0x900>
   16178:	add	r1, pc, r1
   1617c:	add	r2, pc, r2
   16180:	bl	15038 <test_json@@Base>
   16184:	str	r0, [sp, #88]	; 0x58
   16188:	mov	r0, #616	; 0x268
   1618c:	str	r8, [sp]
   16190:	str	r8, [sp, #4]
   16194:	mov	r3, #0
   16198:	str	r0, [sp, #8]
   1619c:	mov	r0, r4
   161a0:	ldr	r1, [pc, #1556]	; 167bc <main@@Base+0x904>
   161a4:	ldr	r2, [pc, #1556]	; 167c0 <main@@Base+0x908>
   161a8:	add	r1, pc, r1
   161ac:	add	r2, pc, r2
   161b0:	bl	15038 <test_json@@Base>
   161b4:	str	r0, [sp, #84]	; 0x54
   161b8:	movw	r0, #619	; 0x26b
   161bc:	str	r8, [sp]
   161c0:	str	r8, [sp, #4]
   161c4:	mov	r3, #0
   161c8:	str	r0, [sp, #8]
   161cc:	mov	r0, r4
   161d0:	ldr	r1, [pc, #1516]	; 167c4 <main@@Base+0x90c>
   161d4:	ldr	r2, [pc, #1516]	; 167c8 <main@@Base+0x910>
   161d8:	add	r1, pc, r1
   161dc:	add	r2, pc, r2
   161e0:	bl	15038 <test_json@@Base>
   161e4:	str	r0, [sp, #80]	; 0x50
   161e8:	movw	r0, #622	; 0x26e
   161ec:	str	r8, [sp]
   161f0:	str	r8, [sp, #4]
   161f4:	mov	r2, r5
   161f8:	mov	r3, #0
   161fc:	str	r0, [sp, #8]
   16200:	mov	r0, r4
   16204:	ldr	r1, [pc, #1472]	; 167cc <main@@Base+0x914>
   16208:	add	r1, pc, r1
   1620c:	bl	15038 <test_json@@Base>
   16210:	str	r0, [sp, #76]	; 0x4c
   16214:	movw	r0, #625	; 0x271
   16218:	str	r8, [sp]
   1621c:	str	r8, [sp, #4]
   16220:	mov	r2, r5
   16224:	mov	r3, #0
   16228:	str	r0, [sp, #8]
   1622c:	mov	r0, r4
   16230:	ldr	r1, [pc, #1432]	; 167d0 <main@@Base+0x918>
   16234:	add	r1, pc, r1
   16238:	bl	15038 <test_json@@Base>
   1623c:	str	r0, [sp, #72]	; 0x48
   16240:	mov	r0, #628	; 0x274
   16244:	str	r8, [sp]
   16248:	str	r8, [sp, #4]
   1624c:	mov	r3, #0
   16250:	str	r0, [sp, #8]
   16254:	mov	r0, r4
   16258:	ldr	r5, [pc, #1396]	; 167d4 <main@@Base+0x91c>
   1625c:	ldr	r6, [pc, #1396]	; 167d8 <main@@Base+0x920>
   16260:	add	r5, pc, r5
   16264:	add	r6, pc, r6
   16268:	mov	r1, r5
   1626c:	mov	r2, r6
   16270:	bl	15038 <test_json@@Base>
   16274:	str	r0, [sp, #68]	; 0x44
   16278:	movw	r0, #631	; 0x277
   1627c:	mov	r1, r5
   16280:	mov	r2, r6
   16284:	mov	r3, #0
   16288:	str	r8, [sp]
   1628c:	str	r8, [sp, #4]
   16290:	str	r0, [sp, #8]
   16294:	mov	r0, r4
   16298:	bl	15038 <test_json@@Base>
   1629c:	str	r0, [sp, #64]	; 0x40
   162a0:	movw	r0, #634	; 0x27a
   162a4:	str	r8, [sp]
   162a8:	str	r8, [sp, #4]
   162ac:	mov	r3, #0
   162b0:	str	r0, [sp, #8]
   162b4:	mov	r0, r4
   162b8:	ldr	r1, [pc, #1308]	; 167dc <main@@Base+0x924>
   162bc:	ldr	r2, [pc, #1308]	; 167e0 <main@@Base+0x928>
   162c0:	add	r1, pc, r1
   162c4:	add	r2, pc, r2
   162c8:	bl	15038 <test_json@@Base>
   162cc:	str	r0, [sp, #60]	; 0x3c
   162d0:	movw	r0, #638	; 0x27e
   162d4:	str	r8, [sp]
   162d8:	str	r8, [sp, #4]
   162dc:	mov	r3, #0
   162e0:	str	r0, [sp, #8]
   162e4:	mov	r0, r4
   162e8:	ldr	r1, [pc, #1268]	; 167e4 <main@@Base+0x92c>
   162ec:	ldr	r2, [pc, #1268]	; 167e8 <main@@Base+0x930>
   162f0:	add	r1, pc, r1
   162f4:	add	r2, pc, r2
   162f8:	bl	15038 <test_json@@Base>
   162fc:	str	r0, [sp, #56]	; 0x38
   16300:	movw	r0, #642	; 0x282
   16304:	str	r8, [sp]
   16308:	str	r8, [sp, #4]
   1630c:	mov	r3, #0
   16310:	str	r0, [sp, #8]
   16314:	mov	r0, r4
   16318:	ldr	r1, [pc, #1228]	; 167ec <main@@Base+0x934>
   1631c:	ldr	r2, [pc, #1228]	; 167f0 <main@@Base+0x938>
   16320:	add	r1, pc, r1
   16324:	add	r2, pc, r2
   16328:	bl	15038 <test_json@@Base>
   1632c:	str	r0, [sp, #52]	; 0x34
   16330:	movw	r0, #646	; 0x286
   16334:	str	r8, [sp]
   16338:	str	r8, [sp, #4]
   1633c:	mov	r2, r9
   16340:	mov	r3, #0
   16344:	str	r0, [sp, #8]
   16348:	mov	r0, r4
   1634c:	ldr	r1, [pc, #1184]	; 167f4 <main@@Base+0x93c>
   16350:	add	r1, pc, r1
   16354:	bl	15038 <test_json@@Base>
   16358:	str	r0, [sp, #48]	; 0x30
   1635c:	movw	r0, #649	; 0x289
   16360:	str	r8, [sp]
   16364:	str	r8, [sp, #4]
   16368:	mov	r2, r9
   1636c:	mov	r3, #0
   16370:	str	r0, [sp, #8]
   16374:	mov	r0, r4
   16378:	ldr	r1, [pc, #1144]	; 167f8 <main@@Base+0x940>
   1637c:	add	r1, pc, r1
   16380:	bl	15038 <test_json@@Base>
   16384:	str	r0, [sp, #44]	; 0x2c
   16388:	mov	r0, #716	; 0x2cc
   1638c:	str	r8, [sp]
   16390:	str	r8, [sp, #4]
   16394:	mov	r3, #0
   16398:	str	r0, [sp, #8]
   1639c:	mov	r0, r4
   163a0:	ldr	r1, [pc, #1108]	; 167fc <main@@Base+0x944>
   163a4:	ldr	r2, [pc, #1108]	; 16800 <main@@Base+0x948>
   163a8:	add	r1, pc, r1
   163ac:	add	r2, pc, r2
   163b0:	bl	15038 <test_json@@Base>
   163b4:	str	r0, [sp, #40]	; 0x28
   163b8:	movw	r0, #731	; 0x2db
   163bc:	str	r8, [sp]
   163c0:	str	r8, [sp, #4]
   163c4:	mov	r3, #0
   163c8:	str	r0, [sp, #8]
   163cc:	mov	r0, r4
   163d0:	ldr	r1, [pc, #1068]	; 16804 <main@@Base+0x94c>
   163d4:	ldr	r2, [pc, #1068]	; 16808 <main@@Base+0x950>
   163d8:	add	r1, pc, r1
   163dc:	add	r2, pc, r2
   163e0:	bl	15038 <test_json@@Base>
   163e4:	str	r0, [sp, #36]	; 0x24
   163e8:	movw	r0, #734	; 0x2de
   163ec:	str	r8, [sp]
   163f0:	str	r8, [sp, #4]
   163f4:	mov	r3, #0
   163f8:	str	r0, [sp, #8]
   163fc:	mov	r0, r4
   16400:	ldr	r1, [pc, #1028]	; 1680c <main@@Base+0x954>
   16404:	ldr	r2, [pc, #1028]	; 16810 <main@@Base+0x958>
   16408:	add	r1, pc, r1
   1640c:	add	r2, pc, r2
   16410:	bl	15038 <test_json@@Base>
   16414:	str	r0, [sp, #32]
   16418:	movw	r0, #738	; 0x2e2
   1641c:	str	r8, [sp]
   16420:	str	r8, [sp, #4]
   16424:	mov	r3, #0
   16428:	str	r0, [sp, #8]
   1642c:	mov	r0, r4
   16430:	ldr	r1, [pc, #988]	; 16814 <main@@Base+0x95c>
   16434:	ldr	r5, [pc, #988]	; 16818 <main@@Base+0x960>
   16438:	add	r5, pc, r5
   1643c:	add	r1, pc, r1
   16440:	mov	r2, r5
   16444:	bl	15038 <test_json@@Base>
   16448:	str	r0, [sp, #28]
   1644c:	movw	r0, #750	; 0x2ee
   16450:	str	r8, [sp]
   16454:	str	r8, [sp, #4]
   16458:	mov	r2, r5
   1645c:	mov	r3, #0
   16460:	str	r0, [sp, #8]
   16464:	mov	r0, r4
   16468:	ldr	r1, [pc, #940]	; 1681c <main@@Base+0x964>
   1646c:	add	r1, pc, r1
   16470:	bl	15038 <test_json@@Base>
   16474:	str	r0, [sp, #24]
   16478:	movw	r0, #766	; 0x2fe
   1647c:	str	r8, [sp]
   16480:	str	r8, [sp, #4]
   16484:	mov	r3, #0
   16488:	str	r0, [sp, #8]
   1648c:	mov	r0, r4
   16490:	ldr	r1, [pc, #904]	; 16820 <main@@Base+0x968>
   16494:	ldr	r2, [pc, #904]	; 16824 <main@@Base+0x96c>
   16498:	add	r1, pc, r1
   1649c:	add	r2, pc, r2
   164a0:	bl	15038 <test_json@@Base>
   164a4:	str	r0, [sp, #20]
   164a8:	movw	r0, #770	; 0x302
   164ac:	str	r8, [sp]
   164b0:	str	r8, [sp, #4]
   164b4:	mov	r3, #0
   164b8:	str	r0, [sp, #8]
   164bc:	mov	r0, r4
   164c0:	ldr	r1, [pc, #864]	; 16828 <main@@Base+0x970>
   164c4:	ldr	r2, [pc, #864]	; 1682c <main@@Base+0x974>
   164c8:	add	r1, pc, r1
   164cc:	add	r2, pc, r2
   164d0:	bl	15038 <test_json@@Base>
   164d4:	str	r0, [sp, #16]
   164d8:	mov	r0, #776	; 0x308
   164dc:	str	r8, [sp]
   164e0:	str	r8, [sp, #4]
   164e4:	mov	r3, #0
   164e8:	str	r0, [sp, #8]
   164ec:	mov	r0, r4
   164f0:	ldr	r1, [pc, #824]	; 16830 <main@@Base+0x978>
   164f4:	ldr	r2, [pc, #824]	; 16834 <main@@Base+0x97c>
   164f8:	add	r1, pc, r1
   164fc:	add	r2, pc, r2
   16500:	bl	15038 <test_json@@Base>
   16504:	mov	r7, r0
   16508:	movw	r0, #781	; 0x30d
   1650c:	str	r8, [sp]
   16510:	str	r8, [sp, #4]
   16514:	mov	r2, r9
   16518:	mov	r3, #0
   1651c:	str	r0, [sp, #8]
   16520:	mov	r0, r4
   16524:	ldr	r1, [pc, #780]	; 16838 <main@@Base+0x980>
   16528:	add	r1, pc, r1
   1652c:	bl	15038 <test_json@@Base>
   16530:	mov	r6, r0
   16534:	movw	r0, #786	; 0x312
   16538:	str	r8, [sp]
   1653c:	str	r8, [sp, #4]
   16540:	mov	r3, #0
   16544:	str	r0, [sp, #8]
   16548:	mov	r0, r4
   1654c:	ldr	r1, [pc, #744]	; 1683c <main@@Base+0x984>
   16550:	ldr	r2, [pc, #744]	; 16840 <main@@Base+0x988>
   16554:	add	r1, pc, r1
   16558:	add	r2, pc, r2
   1655c:	bl	15038 <test_json@@Base>
   16560:	mov	r9, r0
   16564:	movw	r0, #791	; 0x317
   16568:	str	r8, [sp]
   1656c:	str	r8, [sp, #4]
   16570:	mov	r3, #0
   16574:	str	r0, [sp, #8]
   16578:	mov	r0, r4
   1657c:	ldr	r1, [pc, #704]	; 16844 <main@@Base+0x98c>
   16580:	ldr	r2, [pc, #704]	; 16848 <main@@Base+0x990>
   16584:	add	r1, pc, r1
   16588:	add	r2, pc, r2
   1658c:	bl	15038 <test_json@@Base>
   16590:	mov	sl, r0
   16594:	mov	r0, #796	; 0x31c
   16598:	str	r8, [sp]
   1659c:	str	r8, [sp, #4]
   165a0:	mov	r3, #0
   165a4:	str	r0, [sp, #8]
   165a8:	mov	r0, r4
   165ac:	ldr	r1, [pc, #664]	; 1684c <main@@Base+0x994>
   165b0:	ldr	r2, [pc, #664]	; 16850 <main@@Base+0x998>
   165b4:	add	r1, pc, r1
   165b8:	add	r2, pc, r2
   165bc:	bl	15038 <test_json@@Base>
   165c0:	mov	r5, r0
   165c4:	movw	r0, #801	; 0x321
   165c8:	str	r8, [sp]
   165cc:	str	r8, [sp, #4]
   165d0:	mov	r3, #0
   165d4:	str	r0, [sp, #8]
   165d8:	mov	r0, r4
   165dc:	ldr	r1, [pc, #624]	; 16854 <main@@Base+0x99c>
   165e0:	ldr	r2, [pc, #624]	; 16858 <main@@Base+0x9a0>
   165e4:	add	r1, pc, r1
   165e8:	add	r2, pc, r2
   165ec:	bl	15038 <test_json@@Base>
   165f0:	movw	r1, #806	; 0x326
   165f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   165f8:	str	r8, [sp]
   165fc:	str	r8, [sp, #4]
   16600:	mov	r3, #0
   16604:	str	r1, [sp, #8]
   16608:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1660c:	orr	r1, r2, r1
   16610:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16614:	orr	r1, r1, r2
   16618:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1661c:	orr	r1, r1, r2
   16620:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16624:	orr	r1, r1, r2
   16628:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1662c:	orr	r1, r1, r2
   16630:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16634:	orr	r1, r1, r2
   16638:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1663c:	orr	r1, r1, r2
   16640:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16644:	orr	r1, r1, r2
   16648:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1664c:	orr	r1, r1, r2
   16650:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16654:	orr	r1, r1, r2
   16658:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1665c:	orr	r1, r1, r2
   16660:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16664:	orr	r1, r1, r2
   16668:	ldr	r2, [fp, #-84]	; 0xffffffac
   1666c:	orr	r1, r1, r2
   16670:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16674:	orr	r1, r1, r2
   16678:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1667c:	orr	r1, r1, r2
   16680:	ldr	r2, [sp, #96]	; 0x60
   16684:	orr	r1, r1, r2
   16688:	ldr	r2, [sp, #92]	; 0x5c
   1668c:	orr	r1, r1, r2
   16690:	ldr	r2, [sp, #88]	; 0x58
   16694:	orr	r1, r1, r2
   16698:	ldr	r2, [sp, #84]	; 0x54
   1669c:	orr	r1, r1, r2
   166a0:	ldr	r2, [sp, #80]	; 0x50
   166a4:	orr	r1, r1, r2
   166a8:	ldr	r2, [sp, #76]	; 0x4c
   166ac:	orr	r1, r1, r2
   166b0:	ldr	r2, [sp, #72]	; 0x48
   166b4:	orr	r1, r1, r2
   166b8:	ldr	r2, [sp, #68]	; 0x44
   166bc:	orr	r1, r1, r2
   166c0:	ldr	r2, [sp, #64]	; 0x40
   166c4:	orr	r1, r1, r2
   166c8:	ldr	r2, [sp, #60]	; 0x3c
   166cc:	orr	r1, r1, r2
   166d0:	ldr	r2, [sp, #56]	; 0x38
   166d4:	orr	r1, r1, r2
   166d8:	ldr	r2, [sp, #52]	; 0x34
   166dc:	orr	r1, r1, r2
   166e0:	ldr	r2, [sp, #48]	; 0x30
   166e4:	orr	r1, r1, r2
   166e8:	ldr	r2, [sp, #44]	; 0x2c
   166ec:	orr	r1, r1, r2
   166f0:	ldr	r2, [sp, #40]	; 0x28
   166f4:	orr	r1, r1, r2
   166f8:	ldr	r2, [sp, #36]	; 0x24
   166fc:	orr	r1, r1, r2
   16700:	ldr	r2, [sp, #32]
   16704:	orr	r1, r1, r2
   16708:	ldr	r2, [sp, #28]
   1670c:	orr	r1, r1, r2
   16710:	ldr	r2, [sp, #24]
   16714:	orr	r1, r1, r2
   16718:	ldr	r2, [sp, #20]
   1671c:	orr	r1, r1, r2
   16720:	ldr	r2, [sp, #16]
   16724:	orr	r1, r1, r2
   16728:	orr	r1, r1, r7
   1672c:	orr	r1, r1, r6
   16730:	orr	r1, r1, r9
   16734:	orr	r1, r1, sl
   16738:	orr	r1, r1, r5
   1673c:	orr	r5, r1, r0
   16740:	ldr	r1, [pc, #276]	; 1685c <main@@Base+0x9a4>
   16744:	ldr	r2, [pc, #276]	; 16860 <main@@Base+0x9a8>
   16748:	mov	r0, r4
   1674c:	add	r1, pc, r1
   16750:	add	r2, pc, r2
   16754:	bl	15038 <test_json@@Base>
   16758:	orrs	r0, r5, r0
   1675c:	mvnne	r0, #0
   16760:	sub	sp, fp, #28
   16764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16768:	andeq	r5, r4, r8, ror lr
   1676c:	ldrdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   16770:	andeq	pc, r2, r3, ror fp	; <UNPREDICTABLE>
   16774:			; <UNDEFINED> instruction: 0x000314be
   16778:	andeq	r1, r3, r9, ror #9
   1677c:	ldrdeq	r1, [r3], -r2
   16780:	strdeq	r1, [r3], -lr
   16784:	andeq	r1, r3, r9, ror #9
   16788:	andeq	r1, r3, lr, lsl r5
   1678c:	andeq	r1, r3, r6, lsl r5
   16790:	andeq	r1, r3, r4, lsr #10
   16794:	andeq	r1, r3, lr, lsl r5
   16798:	andeq	r1, r3, fp, lsl r5
   1679c:	andeq	pc, r2, r8, ror #18
   167a0:	andeq	r1, r3, sl, ror #9
   167a4:	ldrdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   167a8:	ldrdeq	r1, [r3], -r4
   167ac:	strdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   167b0:	andeq	r1, r3, fp, ror #9
   167b4:	andeq	r1, r3, r1, ror #9
   167b8:	strdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   167bc:	strdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   167c0:	andeq	r1, r3, pc, lsl #10
   167c4:	andeq	r1, r3, r1, lsl #10
   167c8:	andeq	r1, r3, lr, lsl r5
   167cc:	andeq	r1, r3, pc, lsl #10
   167d0:	andeq	r1, r3, lr, lsl #10
   167d4:	andeq	r1, r3, ip, lsl r5
   167d8:	andeq	r1, r3, r2, asr #10
   167dc:	andeq	r1, r3, r0, lsl #10
   167e0:	andeq	r1, r3, sp, asr #10
   167e4:	andeq	r1, r3, r8, ror #10
   167e8:			; <UNDEFINED> instruction: 0x000315b9
   167ec:	ldrdeq	r1, [r3], -r7
   167f0:	andeq	r1, r3, r2, asr #12
   167f4:	andeq	r1, r3, r8, ror r6
   167f8:	andeq	r1, r3, r7, ror r6
   167fc:	andeq	r1, r3, r1, ror r6
   16800:	ldrdeq	r1, [r3], -sl
   16804:	andeq	r1, r3, ip, lsl #14
   16808:	andeq	r1, r3, r5, asr #14
   1680c:	andeq	r1, r3, r9, asr #14
   16810:	andeq	r1, r3, pc, asr r7
   16814:	andeq	r1, r3, r1, asr #14
   16818:	andeq	r1, r3, sp, lsl #15
   1681c:	muleq	r3, sl, r7
   16820:	andeq	r1, r3, fp, lsl #16
   16824:	andeq	r1, r3, lr, lsr #16
   16828:	andeq	r1, r3, r4, lsr #16
   1682c:	andeq	r1, r3, pc, asr #16
   16830:	andeq	r1, r3, sp, asr #16
   16834:	andeq	r1, r3, r4, asr #17
   16838:	andeq	r1, r3, r8, lsl #18
   1683c:	andeq	r1, r3, r4, asr r9
   16840:	andeq	r1, r3, sl, asr #19
   16844:	andeq	r1, r3, sp, lsl #20
   16848:	muleq	r3, r4, sl
   1684c:	andeq	r1, r3, r6, ror #21
   16850:	andeq	r1, r3, sp, asr fp
   16854:	andeq	r1, r3, r1, lsr #23
   16858:	andeq	r1, r3, r7, lsr #24
   1685c:	andeq	r1, r3, r2, asr #22
   16860:	andeq	r1, r3, sp, asr #23
   16864:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16868:	add	fp, sp, #28
   1686c:	sub	sp, sp, #4
   16870:	vpush	{d8-d9}
   16874:	sub	sp, sp, #72	; 0x48
   16878:	mov	sl, r0
   1687c:	mov	r0, #0
   16880:	mov	r8, r1
   16884:	mov	r1, #36	; 0x24
   16888:	mov	r5, r3
   1688c:	mov	r6, r2
   16890:	str	r0, [r3]
   16894:	ldr	r0, [sl]
   16898:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   1689c:	cmp	r0, #0
   168a0:	beq	168d0 <main@@Base+0xa18>
   168a4:	mov	r0, sl
   168a8:	mov	r1, r8
   168ac:	mov	r2, r6
   168b0:	mov	r3, #33	; 0x21
   168b4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   168b8:	mov	r7, r0
   168bc:	mov	r0, r7
   168c0:	sub	sp, fp, #48	; 0x30
   168c4:	vpop	{d8-d9}
   168c8:	add	sp, sp, #4
   168cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   168d0:	add	r0, sp, #40	; 0x28
   168d4:	mov	r1, r8
   168d8:	mov	r2, r6
   168dc:	mov	r3, #1
   168e0:	str	r0, [sp]
   168e4:	mov	r0, sl
   168e8:	bl	36b24 <flatcc_json_parser_prepare_unions@@Base>
   168ec:	cmp	r0, r6
   168f0:	beq	168a4 <main@@Base+0x9ec>
   168f4:	cmp	r8, r6
   168f8:	beq	1692c <main@@Base+0xa74>
   168fc:	ldrb	r0, [r8]
   16900:	cmp	r0, #123	; 0x7b
   16904:	bne	1692c <main@@Base+0xa74>
   16908:	add	r1, r8, #1
   1690c:	sub	r0, r6, r1
   16910:	cmp	r0, #2
   16914:	blt	169c4 <main@@Base+0xb0c>
   16918:	ldrb	r0, [r1]
   1691c:	cmp	r0, #32
   16920:	bls	169b4 <main@@Base+0xafc>
   16924:	mov	r8, r1
   16928:	b	169d4 <main@@Base+0xb1c>
   1692c:	mov	r0, sl
   16930:	mov	r1, r8
   16934:	mov	r2, r6
   16938:	mov	r3, #21
   1693c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   16940:	mov	r8, r0
   16944:	ldr	r0, [sl, #20]
   16948:	cmp	r0, #0
   1694c:	bne	168a4 <main@@Base+0x9ec>
   16950:	ldr	r0, [sl]
   16954:	mov	r1, #3
   16958:	bl	2fa28 <flatcc_builder_check_required_field@@Base>
   1695c:	cmp	r0, #0
   16960:	beq	16998 <main@@Base+0xae0>
   16964:	ldr	r3, [sp, #40]	; 0x28
   16968:	mov	r0, sl
   1696c:	mov	r1, r8
   16970:	mov	r2, r6
   16974:	bl	36bb4 <flatcc_json_parser_finalize_unions@@Base>
   16978:	mov	r7, r0
   1697c:	ldr	r0, [sl]
   16980:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   16984:	cmp	r0, #0
   16988:	mov	r8, r7
   1698c:	str	r0, [r5]
   16990:	bne	168bc <main@@Base+0xa04>
   16994:	b	168a4 <main@@Base+0x9ec>
   16998:	mov	r0, sl
   1699c:	mov	r1, r8
   169a0:	mov	r2, r6
   169a4:	mov	r3, #29
   169a8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   169ac:	mov	r8, r0
   169b0:	b	168a4 <main@@Base+0x9ec>
   169b4:	bne	169c4 <main@@Base+0xb0c>
   169b8:	ldrb	r0, [r8, #2]!
   169bc:	cmp	r0, #32
   169c0:	bhi	169d4 <main@@Base+0xb1c>
   169c4:	mov	r0, sl
   169c8:	mov	r2, r6
   169cc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   169d0:	mov	r8, r0
   169d4:	cmp	r8, r6
   169d8:	mov	r2, r6
   169dc:	beq	16a20 <main@@Base+0xb68>
   169e0:	ldrb	r0, [r8]
   169e4:	cmp	r0, #125	; 0x7d
   169e8:	bne	16a1c <main@@Base+0xb64>
   169ec:	add	r1, r8, #1
   169f0:	sub	r0, r6, r1
   169f4:	cmp	r0, #2
   169f8:	blt	1fbf8 <main@@Base+0x9d40>
   169fc:	ldrb	r0, [r1]
   16a00:	cmp	r0, #32
   16a04:	bhi	1fbb8 <main@@Base+0x9d00>
   16a08:	bne	1fbf8 <main@@Base+0x9d40>
   16a0c:	ldrb	r0, [r8, #2]!
   16a10:	cmp	r0, #32
   16a14:	bhi	16944 <main@@Base+0xa8c>
   16a18:	b	1fbf8 <main@@Base+0x9d40>
   16a1c:	mov	r2, r8
   16a20:	movw	r0, #13407	; 0x345f
   16a24:	vldr	s18, [pc, #988]	; 16e08 <main@@Base+0xf50>
   16a28:	vmov.f32	s16, #8	; 0x40400000  3.0
   16a2c:	add	r1, sp, #24
   16a30:	str	r6, [sp, #36]	; 0x24
   16a34:	movt	r0, #29494	; 0x7336
   16a38:	sub	r0, r0, #512	; 0x200
   16a3c:	sub	r0, r0, #196608	; 0x30000
   16a40:	stm	r1, {r0, r5, sl}
   16a44:	cmp	r2, r6
   16a48:	mov	r8, r6
   16a4c:	beq	16a7c <main@@Base+0xbc4>
   16a50:	ldrb	r0, [r2]
   16a54:	cmp	r0, #34	; 0x22
   16a58:	bne	16a64 <main@@Base+0xbac>
   16a5c:	add	r8, r2, #1
   16a60:	b	16a7c <main@@Base+0xbc4>
   16a64:	mov	r1, r2
   16a68:	mov	r0, sl
   16a6c:	mov	r2, r6
   16a70:	mov	r3, #5
   16a74:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   16a78:	mov	r8, r0
   16a7c:	sub	r9, r6, r8
   16a80:	mov	r0, #8
   16a84:	cmp	r9, #8
   16a88:	movcc	r0, r9
   16a8c:	sub	r0, r0, #1
   16a90:	cmp	r0, #7
   16a94:	bhi	193e4 <main@@Base+0x352c>
   16a98:	add	r6, pc, #36	; 0x24
   16a9c:	mov	sl, #0
   16aa0:	mov	ip, #0
   16aa4:	mov	r7, #0
   16aa8:	mov	r1, #0
   16aac:	mov	r2, #0
   16ab0:	mov	r3, #0
   16ab4:	mov	r5, #0
   16ab8:	mov	r4, #0
   16abc:	ldr	r0, [r6, r0, lsl #2]
   16ac0:	add	pc, r6, r0
   16ac4:	andeq	r0, r0, r4, rrx
   16ac8:	andeq	r0, r0, ip, asr r0
   16acc:	andeq	r0, r0, r4, asr r0
   16ad0:	andeq	r0, r0, ip, asr #32
   16ad4:	andeq	r0, r0, r0, asr #32
   16ad8:	andeq	r0, r0, r4, lsr r0
   16adc:	andeq	r0, r0, r4, lsr #32
   16ae0:	andeq	r0, r0, r0, lsr #32
   16ae4:	ldrb	ip, [r8, #7]
   16ae8:	ldrb	r0, [r8, #6]
   16aec:	mov	r7, sl
   16af0:	orr	r0, ip, r0, lsl #8
   16af4:	mov	sl, r0
   16af8:	ldrb	r0, [r8, #5]
   16afc:	mov	r1, r7
   16b00:	orr	sl, sl, r0, lsl #16
   16b04:	ldrb	r0, [r8, #4]
   16b08:	mov	r2, r1
   16b0c:	orr	sl, sl, r0, lsl #24
   16b10:	ldrb	r0, [r8, #3]
   16b14:	orr	r3, r0, r2
   16b18:	ldrb	r0, [r8, #2]
   16b1c:	orr	r5, r3, r0, lsl #8
   16b20:	ldrb	r0, [r8, #1]
   16b24:	orr	r4, r5, r0, lsl #16
   16b28:	ldrb	r0, [r8]
   16b2c:	movw	r1, #29281	; 0x7261
   16b30:	movt	r1, #24946	; 0x6172
   16b34:	subs	r1, sl, r1
   16b38:	orr	r0, r4, r0, lsl #24
   16b3c:	movw	r4, #29556	; 0x7374
   16b40:	movt	r4, #29797	; 0x7465
   16b44:	sbcs	r1, r0, r4
   16b48:	bcs	16bf8 <main@@Base+0xd40>
   16b4c:	movw	r1, #28004	; 0x6d64
   16b50:	movw	r2, #30309	; 0x7665
   16b54:	movt	r1, #28257	; 0x6e61
   16b58:	movt	r2, #26990	; 0x696e
   16b5c:	cmp	r0, r1
   16b60:	bhi	16d7c <main@@Base+0xec4>
   16b64:	movw	r1, #25975	; 0x6577
   16b68:	ldr	r6, [sp, #36]	; 0x24
   16b6c:	movt	r1, #26220	; 0x666c
   16b70:	cmp	r0, r1
   16b74:	bhi	16e8c <main@@Base+0xfd4>
   16b78:	movw	r1, #27759	; 0x6c6f
   16b7c:	movt	r1, #25455	; 0x636f
   16b80:	eor	r2, r0, r1
   16b84:	and	r1, sl, #-16777216	; 0xff000000
   16b88:	eor	r3, r1, #1912602624	; 0x72000000
   16b8c:	orrs	r2, r3, r2
   16b90:	beq	1772c <main@@Base+0x1874>
   16b94:	movw	r2, #25965	; 0x656d
   16b98:	ldr	sl, [sp, #32]
   16b9c:	eor	r1, r1, #2030043136	; 0x79000000
   16ba0:	movt	r2, #25966	; 0x656e
   16ba4:	eor	r0, r0, r2
   16ba8:	orrs	r0, r1, r0
   16bac:	bne	193e4 <main@@Base+0x352c>
   16bb0:	cmp	r9, #6
   16bb4:	mov	r1, r8
   16bb8:	blt	189b0 <main@@Base+0x2af8>
   16bbc:	ldrb	r0, [r8, #5]
   16bc0:	mov	r1, r8
   16bc4:	cmp	r0, #34	; 0x22
   16bc8:	bne	189b0 <main@@Base+0x2af8>
   16bcc:	add	r2, r8, #6
   16bd0:	sub	r0, r6, r2
   16bd4:	cmp	r0, #2
   16bd8:	blt	17fec <main@@Base+0x2134>
   16bdc:	ldrb	r0, [r2]
   16be0:	cmp	r0, #32
   16be4:	bls	17fd8 <main@@Base+0x2120>
   16be8:	mov	r1, r2
   16bec:	cmp	r1, r6
   16bf0:	bne	18008 <main@@Base+0x2150>
   16bf4:	b	18040 <main@@Base+0x2188>
   16bf8:	movw	r1, #0
   16bfc:	movt	r1, #26163	; 0x6633
   16c00:	subs	r1, sl, r1
   16c04:	sbcs	r1, r0, r4
   16c08:	bcs	16e0c <main@@Base+0xf54>
   16c0c:	movw	r1, #29281	; 0x7261
   16c10:	ldr	r6, [sp, #36]	; 0x24
   16c14:	movt	r1, #24946	; 0x6172
   16c18:	eor	r2, sl, r1
   16c1c:	eor	r1, r0, r4
   16c20:	orrs	r2, r2, r1
   16c24:	bne	16f00 <main@@Base+0x1048>
   16c28:	add	r9, r8, #8
   16c2c:	mov	r0, #8
   16c30:	sub	ip, r6, r9
   16c34:	cmp	ip, #8
   16c38:	movcc	r0, ip
   16c3c:	sub	r0, r0, #1
   16c40:	cmp	r0, #7
   16c44:	bhi	18700 <main@@Base+0x2848>
   16c48:	add	r2, pc, #36	; 0x24
   16c4c:	mov	r1, #0
   16c50:	mov	lr, #0
   16c54:	mov	sl, #0
   16c58:	mov	r6, #0
   16c5c:	mov	r3, #0
   16c60:	mov	r5, #0
   16c64:	mov	r4, #0
   16c68:	ldr	r7, [r2, r0, lsl #2]
   16c6c:	mov	r0, #0
   16c70:	add	pc, r2, r7
   16c74:	andeq	r0, r0, r4, rrx
   16c78:	andeq	r0, r0, ip, asr r0
   16c7c:	andeq	r0, r0, r4, asr r0
   16c80:	andeq	r0, r0, ip, asr #32
   16c84:	andeq	r0, r0, r0, asr #32
   16c88:	andeq	r0, r0, r4, lsr r0
   16c8c:	andeq	r0, r0, r4, lsr #32
   16c90:	andeq	r0, r0, r0, lsr #32
   16c94:	ldrb	lr, [r8, #15]
   16c98:	ldrb	r0, [r8, #14]
   16c9c:	mov	sl, r1
   16ca0:	orr	r0, lr, r0, lsl #8
   16ca4:	mov	r1, r0
   16ca8:	ldrb	r0, [r8, #13]
   16cac:	mov	r6, sl
   16cb0:	orr	r1, r1, r0, lsl #16
   16cb4:	ldrb	r0, [r8, #12]
   16cb8:	mov	r3, r6
   16cbc:	orr	r1, r1, r0, lsl #24
   16cc0:	ldrb	r0, [r8, #11]
   16cc4:	orr	r5, r0, r3
   16cc8:	ldrb	r0, [r8, #10]
   16ccc:	orr	r4, r5, r0, lsl #8
   16cd0:	ldrb	r0, [r8, #9]
   16cd4:	orr	r0, r4, r0, lsl #16
   16cd8:	ldrb	r2, [r9]
   16cdc:	movw	r7, #26227	; 0x6673
   16ce0:	movt	r7, #31087	; 0x796f
   16ce4:	orr	r2, r0, r2, lsl #24
   16ce8:	movw	r0, #26989	; 0x696d
   16cec:	movt	r0, #29810	; 0x7472
   16cf0:	subs	r0, r0, r1
   16cf4:	sbcs	r0, r7, r2
   16cf8:	bcc	17664 <main@@Base+0x17ac>
   16cfc:	movw	r0, #29797	; 0x7465
   16d00:	ldr	r6, [sp, #36]	; 0x24
   16d04:	eor	r3, r2, r7
   16d08:	movt	r0, #28530	; 0x6f72
   16d0c:	eor	r0, r1, r0
   16d10:	orrs	r0, r0, r3
   16d14:	beq	17b00 <main@@Base+0x1c48>
   16d18:	movw	r0, #27763	; 0x6c73
   16d1c:	movt	r0, #28527	; 0x6f6f
   16d20:	eor	r0, r1, r0
   16d24:	movw	r1, #26210	; 0x6662
   16d28:	movt	r1, #31087	; 0x796f
   16d2c:	eor	r1, r2, r1
   16d30:	orrs	r0, r0, r1
   16d34:	bne	18700 <main@@Base+0x2848>
   16d38:	cmp	ip, #9
   16d3c:	blt	18700 <main@@Base+0x2848>
   16d40:	ldrb	r0, [r8, #16]
   16d44:	cmp	r0, #34	; 0x22
   16d48:	bne	18700 <main@@Base+0x2848>
   16d4c:	ldr	r4, [sp, #32]
   16d50:	add	r1, r8, #17
   16d54:	sub	r0, r6, r1
   16d58:	cmp	r0, #2
   16d5c:	blt	186b4 <main@@Base+0x27fc>
   16d60:	ldrb	r0, [r1]
   16d64:	cmp	r0, #32
   16d68:	bls	186a4 <main@@Base+0x27ec>
   16d6c:	mov	r8, r1
   16d70:	cmp	r8, r6
   16d74:	bne	186cc <main@@Base+0x2814>
   16d78:	b	18710 <main@@Base+0x2858>
   16d7c:	movw	r1, #29555	; 0x7373
   16d80:	ldr	r6, [sp, #36]	; 0x24
   16d84:	movt	r1, #29797	; 0x7465
   16d88:	cmp	r0, r1
   16d8c:	bhi	16fc8 <main@@Base+0x1110>
   16d90:	movw	r3, #24430	; 0x5f6e
   16d94:	movw	r2, #29285	; 0x7265
   16d98:	movt	r3, #28276	; 0x6e74
   16d9c:	movt	r2, #28769	; 0x7061
   16da0:	subs	r1, sl, r3
   16da4:	sbcs	r1, r0, r2
   16da8:	bcs	1716c <main@@Base+0x12b4>
   16dac:	movw	r1, #28005	; 0x6d65
   16db0:	movt	r1, #28257	; 0x6e61
   16db4:	teq	r0, r1
   16db8:	bne	193e0 <main@@Base+0x3528>
   16dbc:	ldr	sl, [sp, #32]
   16dc0:	cmp	r9, #5
   16dc4:	mov	r1, r8
   16dc8:	blt	18b80 <main@@Base+0x2cc8>
   16dcc:	ldrb	r0, [r8, #4]
   16dd0:	mov	r1, r8
   16dd4:	cmp	r0, #34	; 0x22
   16dd8:	bne	18b80 <main@@Base+0x2cc8>
   16ddc:	add	r2, r8, #5
   16de0:	sub	r0, r6, r2
   16de4:	cmp	r0, #2
   16de8:	blt	180e4 <main@@Base+0x222c>
   16dec:	ldrb	r0, [r2]
   16df0:	cmp	r0, #32
   16df4:	bls	180d0 <main@@Base+0x2218>
   16df8:	mov	r1, r2
   16dfc:	cmp	r1, r6
   16e00:	bne	18100 <main@@Base+0x2248>
   16e04:	b	18138 <main@@Base+0x2280>
   16e08:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   16e0c:	movw	r2, #29544	; 0x7368
   16e10:	ldr	r6, [sp, #36]	; 0x24
   16e14:	movt	r2, #26721	; 0x6861
   16e18:	subs	r1, sl, r2
   16e1c:	sbcs	r1, r0, r4
   16e20:	bcs	17024 <main@@Base+0x116c>
   16e24:	movw	r1, #0
   16e28:	bfc	sl, #0, #16
   16e2c:	eor	r0, r0, r4
   16e30:	movt	r1, #26163	; 0x6633
   16e34:	eor	r1, sl, r1
   16e38:	orrs	r0, r1, r0
   16e3c:	bne	193e0 <main@@Base+0x3528>
   16e40:	ldr	sl, [sp, #32]
   16e44:	cmp	r9, #7
   16e48:	mov	r7, r8
   16e4c:	blt	183ac <main@@Base+0x24f4>
   16e50:	ldrb	r0, [r8, #6]
   16e54:	mov	r7, r8
   16e58:	cmp	r0, #34	; 0x22
   16e5c:	bne	183ac <main@@Base+0x24f4>
   16e60:	add	r1, r8, #7
   16e64:	sub	r0, r6, r1
   16e68:	cmp	r0, #2
   16e6c:	blt	17ef4 <main@@Base+0x203c>
   16e70:	ldrb	r0, [r1]
   16e74:	cmp	r0, #32
   16e78:	bls	17ee0 <main@@Base+0x2028>
   16e7c:	mov	r7, r1
   16e80:	cmp	r7, r6
   16e84:	bne	17f0c <main@@Base+0x2054>
   16e88:	b	17f44 <main@@Base+0x208c>
   16e8c:	movw	r1, #65535	; 0xffff
   16e90:	movw	r3, #28530	; 0x6f72
   16e94:	movt	r1, #26735	; 0x686f
   16e98:	movt	r3, #28276	; 0x6e74
   16e9c:	cmp	r0, r1
   16ea0:	bhi	17348 <main@@Base+0x1490>
   16ea4:	movw	r1, #25976	; 0x6578
   16ea8:	movt	r1, #26220	; 0x666c
   16eac:	teq	r0, r1
   16eb0:	bne	193e0 <main@@Base+0x3528>
   16eb4:	ldr	sl, [sp, #32]
   16eb8:	cmp	r9, #5
   16ebc:	mov	r9, r8
   16ec0:	blt	18bd4 <main@@Base+0x2d1c>
   16ec4:	ldrb	r0, [r8, #4]
   16ec8:	mov	r9, r8
   16ecc:	cmp	r0, #34	; 0x22
   16ed0:	bne	18bd4 <main@@Base+0x2d1c>
   16ed4:	add	r1, r8, #5
   16ed8:	sub	r0, r6, r1
   16edc:	cmp	r0, #2
   16ee0:	blt	18160 <main@@Base+0x22a8>
   16ee4:	ldrb	r0, [r1]
   16ee8:	cmp	r0, #32
   16eec:	bls	1814c <main@@Base+0x2294>
   16ef0:	mov	r9, r1
   16ef4:	cmp	r9, r6
   16ef8:	bne	18178 <main@@Base+0x22c0>
   16efc:	b	181b0 <main@@Base+0x22f8>
   16f00:	movw	r2, #28788	; 0x7074
   16f04:	movt	r2, #25965	; 0x656d
   16f08:	subs	r2, sl, r2
   16f0c:	sbcs	r2, r0, r4
   16f10:	bcs	173b4 <main@@Base+0x14fc>
   16f14:	movw	r0, #28524	; 0x6f6c
   16f18:	movt	r0, #25199	; 0x626f
   16f1c:	eor	r0, sl, r0
   16f20:	orrs	r0, r0, r1
   16f24:	beq	17ab4 <main@@Base+0x1bfc>
   16f28:	movw	r0, #29541	; 0x7365
   16f2c:	movt	r0, #25185	; 0x6261
   16f30:	eor	r0, sl, r0
   16f34:	orrs	r0, r0, r1
   16f38:	bne	193e0 <main@@Base+0x3528>
   16f3c:	add	r7, r8, #8
   16f40:	ldr	sl, [sp, #32]
   16f44:	mov	r2, #8
   16f48:	sub	r0, r6, r7
   16f4c:	cmp	r0, #8
   16f50:	movcc	r2, r0
   16f54:	sub	r1, r2, #2
   16f58:	cmp	r1, #7
   16f5c:	bcs	17e70 <main@@Base+0x1fb8>
   16f60:	ldrb	r1, [r8, #9]
   16f64:	lsl	r2, r1, #16
   16f68:	mov	r1, #0
   16f6c:	ldrb	r3, [r7]
   16f70:	orr	r2, r2, r3, lsl #24
   16f74:	movw	r3, #0
   16f78:	movt	r3, #13876	; 0x3634
   16f7c:	eor	r2, r2, r3
   16f80:	orrs	r1, r1, r2
   16f84:	bne	1ea90 <main@@Base+0x8bd8>
   16f88:	cmp	r0, #3
   16f8c:	blt	1ea90 <main@@Base+0x8bd8>
   16f90:	ldrb	r0, [r8, #10]
   16f94:	cmp	r0, #34	; 0x22
   16f98:	bne	1ea90 <main@@Base+0x8bd8>
   16f9c:	add	r1, r8, #11
   16fa0:	sub	r0, r6, r1
   16fa4:	cmp	r0, #2
   16fa8:	blt	18f9c <main@@Base+0x30e4>
   16fac:	ldrb	r0, [r1]
   16fb0:	cmp	r0, #32
   16fb4:	bls	18f8c <main@@Base+0x30d4>
   16fb8:	mov	r8, r1
   16fbc:	cmp	r8, r6
   16fc0:	bne	18fb4 <main@@Base+0x30fc>
   16fc4:	b	18fec <main@@Base+0x3134>
   16fc8:	and	r5, sl, #-16777216	; 0xff000000
   16fcc:	eor	r7, r0, r4
   16fd0:	eor	r1, r5, #872415232	; 0x34000000
   16fd4:	orrs	r1, r1, r7
   16fd8:	bne	17448 <main@@Base+0x1590>
   16fdc:	cmp	r9, #6
   16fe0:	mov	r9, r8
   16fe4:	blt	18470 <main@@Base+0x25b8>
   16fe8:	ldrb	r0, [r8, #5]
   16fec:	mov	r9, r8
   16ff0:	cmp	r0, #34	; 0x22
   16ff4:	bne	18470 <main@@Base+0x25b8>
   16ff8:	add	r1, r8, #6
   16ffc:	sub	r0, r6, r1
   17000:	cmp	r0, #2
   17004:	blt	17f70 <main@@Base+0x20b8>
   17008:	ldrb	r0, [r1]
   1700c:	cmp	r0, #32
   17010:	bls	17f5c <main@@Base+0x20a4>
   17014:	mov	r9, r1
   17018:	cmp	r9, r6
   1701c:	bne	17f88 <main@@Base+0x20d0>
   17020:	b	17fc0 <main@@Base+0x2108>
   17024:	eor	r2, sl, r2
   17028:	eor	r1, r0, r4
   1702c:	orrs	r2, r2, r1
   17030:	bne	17498 <main@@Base+0x15e0>
   17034:	add	r9, r8, #8
   17038:	mov	r0, #8
   1703c:	sub	ip, r6, r9
   17040:	cmp	ip, #8
   17044:	movcc	r0, ip
   17048:	sub	r0, r0, #1
   1704c:	cmp	r0, #7
   17050:	bhi	18700 <main@@Base+0x2848>
   17054:	add	r2, pc, #36	; 0x24
   17058:	mov	r1, #0
   1705c:	mov	lr, #0
   17060:	mov	sl, #0
   17064:	mov	r6, #0
   17068:	mov	r3, #0
   1706c:	mov	r5, #0
   17070:	mov	r4, #0
   17074:	ldr	r7, [r2, r0, lsl #2]
   17078:	mov	r0, #0
   1707c:	add	pc, r2, r7
   17080:	andeq	r0, r0, r4, rrx
   17084:	andeq	r0, r0, ip, asr r0
   17088:	andeq	r0, r0, r4, asr r0
   1708c:	andeq	r0, r0, ip, asr #32
   17090:	andeq	r0, r0, r0, asr #32
   17094:	andeq	r0, r0, r4, lsr r0
   17098:	andeq	r0, r0, r4, lsr #32
   1709c:	andeq	r0, r0, r0, lsr #32
   170a0:	ldrb	lr, [r8, #15]
   170a4:	ldrb	r0, [r8, #14]
   170a8:	mov	sl, r1
   170ac:	orr	r0, lr, r0, lsl #8
   170b0:	mov	r1, r0
   170b4:	ldrb	r0, [r8, #13]
   170b8:	mov	r6, sl
   170bc:	orr	r1, r1, r0, lsl #16
   170c0:	ldrb	r0, [r8, #12]
   170c4:	mov	r3, r6
   170c8:	orr	r1, r1, r0, lsl #24
   170cc:	ldrb	r0, [r8, #11]
   170d0:	orr	r5, r0, r3
   170d4:	ldrb	r0, [r8, #10]
   170d8:	orr	r4, r5, r0, lsl #8
   170dc:	ldrb	r0, [r8, #9]
   170e0:	orr	r0, r4, r0, lsl #16
   170e4:	ldrb	r2, [r9]
   170e8:	movw	r3, #30257	; 0x7631
   170ec:	movt	r3, #26222	; 0x666e
   170f0:	orr	r2, r0, r2, lsl #24
   170f4:	subs	r0, r1, r3
   170f8:	movw	r0, #13407	; 0x345f
   170fc:	movt	r0, #29494	; 0x7336
   17100:	sbcs	r0, r2, r0
   17104:	bcs	17a28 <main@@Base+0x1b70>
   17108:	eor	r0, r1, r3
   1710c:	ldr	r1, [sp, #24]
   17110:	ldr	r6, [sp, #36]	; 0x24
   17114:	eor	r1, r2, r1
   17118:	orrs	r0, r0, r1
   1711c:	bne	18700 <main@@Base+0x2848>
   17120:	ldr	sl, [sp, #32]
   17124:	cmp	ip, #9
   17128:	blt	18904 <main@@Base+0x2a4c>
   1712c:	ldrb	r0, [r8, #16]
   17130:	cmp	r0, #34	; 0x22
   17134:	bne	18904 <main@@Base+0x2a4c>
   17138:	ldr	r4, [sp, #36]	; 0x24
   1713c:	add	r1, r8, #17
   17140:	sub	r0, r4, r1
   17144:	cmp	r0, #2
   17148:	blt	188b4 <main@@Base+0x29fc>
   1714c:	ldrb	r0, [r1]
   17150:	cmp	r0, #32
   17154:	bls	1889c <main@@Base+0x29e4>
   17158:	ldr	r4, [sp, #36]	; 0x24
   1715c:	mov	r6, r1
   17160:	cmp	r6, r4
   17164:	bne	188cc <main@@Base+0x2a14>
   17168:	b	18974 <main@@Base+0x2abc>
   1716c:	eor	r1, sl, r3
   17170:	eor	r2, r0, r2
   17174:	orrs	r1, r1, r2
   17178:	bne	17778 <main@@Base+0x18c0>
   1717c:	add	r1, r8, #8
   17180:	mov	r2, #8
   17184:	ldr	sl, [sp, #32]
   17188:	sub	r0, r6, r1
   1718c:	cmp	r0, #8
   17190:	movcs	r0, r2
   17194:	sub	r2, r0, #1
   17198:	cmp	r2, #7
   1719c:	bhi	17aac <main@@Base+0x1bf4>
   171a0:	add	r5, pc, #36	; 0x24
   171a4:	mov	r9, #0
   171a8:	mov	ip, #0
   171ac:	mov	lr, #0
   171b0:	mov	r7, #0
   171b4:	mov	r3, #0
   171b8:	mov	r6, #0
   171bc:	mov	r4, #0
   171c0:	ldr	r0, [r5, r2, lsl #2]
   171c4:	mov	r2, #0
   171c8:	add	pc, r5, r0
   171cc:	andeq	r0, r0, r4, rrx
   171d0:	andeq	r0, r0, ip, asr r0
   171d4:	andeq	r0, r0, r4, asr r0
   171d8:	andeq	r0, r0, ip, asr #32
   171dc:	andeq	r0, r0, r0, asr #32
   171e0:	andeq	r0, r0, r4, lsr r0
   171e4:	andeq	r0, r0, r4, lsr #32
   171e8:	andeq	r0, r0, r0, lsr #32
   171ec:	ldrb	ip, [r8, #15]
   171f0:	ldrb	r0, [r8, #14]
   171f4:	mov	lr, r9
   171f8:	orr	r0, ip, r0, lsl #8
   171fc:	mov	r9, r0
   17200:	ldrb	r0, [r8, #13]
   17204:	mov	r7, lr
   17208:	orr	r9, r9, r0, lsl #16
   1720c:	ldrb	r0, [r8, #12]
   17210:	mov	r3, r7
   17214:	orr	r9, r9, r0, lsl #24
   17218:	ldrb	r0, [r8, #11]
   1721c:	orr	r6, r0, r3
   17220:	ldrb	r0, [r8, #10]
   17224:	orr	r2, r6, r0, lsl #8
   17228:	ldrb	r0, [r8, #9]
   1722c:	orr	r4, r2, r0, lsl #16
   17230:	ldrb	r2, [r1]
   17234:	movw	r0, #25445	; 0x6365
   17238:	movw	r3, #25971	; 0x6573
   1723c:	ldr	r6, [sp, #36]	; 0x24
   17240:	movt	r0, #28769	; 0x7061
   17244:	movt	r3, #24941	; 0x616d
   17248:	eor	r0, r9, r0
   1724c:	orr	r2, r4, r2, lsl #24
   17250:	eor	r2, r2, r3
   17254:	orrs	r0, r0, r2
   17258:	bne	17aac <main@@Base+0x1bf4>
   1725c:	add	r9, r8, #16
   17260:	mov	r1, #8
   17264:	sub	r0, r6, r9
   17268:	cmp	r0, #8
   1726c:	movcc	r1, r0
   17270:	sub	r2, r1, #1
   17274:	cmp	r2, #7
   17278:	bhi	18704 <main@@Base+0x284c>
   1727c:	add	r4, pc, #24
   17280:	mov	r1, #0
   17284:	mov	r3, #0
   17288:	mov	r6, #0
   1728c:	mov	r5, #0
   17290:	ldr	r7, [r4, r2, lsl #2]
   17294:	mov	r2, #0
   17298:	add	pc, r4, r7
   1729c:	andeq	r0, r0, r4, asr #32
   172a0:	andeq	r0, r0, ip, lsr r0
   172a4:	andeq	r0, r0, r4, lsr r0
   172a8:	andeq	r0, r0, r8, lsr #32
   172ac:	andeq	r0, r0, r0, lsr #32
   172b0:	andeq	r0, r0, r0, lsr #32
   172b4:	andeq	r0, r0, r0, lsr #32
   172b8:	andeq	r0, r0, r0, lsr #32
   172bc:	ldrb	r2, [r8, #20]
   172c0:	lsl	r2, r2, #24
   172c4:	ldrb	r3, [r8, #19]
   172c8:	orr	r3, r3, r1
   172cc:	mov	r1, r2
   172d0:	ldrb	r2, [r8, #18]
   172d4:	orr	r6, r3, r2, lsl #8
   172d8:	ldrb	r2, [r8, #17]
   172dc:	orr	r5, r6, r2, lsl #16
   172e0:	ldrb	r2, [r9]
   172e4:	movw	r3, #25971	; 0x6573
   172e8:	ldr	r6, [sp, #36]	; 0x24
   172ec:	and	r1, r1, #-16777216	; 0xff000000
   172f0:	movt	r3, #24436	; 0x5f74
   172f4:	eor	r1, r1, #1946157056	; 0x74000000
   172f8:	orr	r2, r5, r2, lsl #24
   172fc:	eor	r2, r2, r3
   17300:	orrs	r1, r1, r2
   17304:	bne	18704 <main@@Base+0x284c>
   17308:	cmp	r0, #6
   1730c:	blt	18704 <main@@Base+0x284c>
   17310:	ldrb	r0, [r8, #21]
   17314:	cmp	r0, #34	; 0x22
   17318:	bne	18704 <main@@Base+0x284c>
   1731c:	add	r1, r8, #22
   17320:	sub	r0, r6, r1
   17324:	cmp	r0, #2
   17328:	blt	1984c <main@@Base+0x3994>
   1732c:	ldrb	r0, [r1]
   17330:	cmp	r0, #32
   17334:	bls	1983c <main@@Base+0x3984>
   17338:	mov	r8, r1
   1733c:	cmp	r8, r6
   17340:	bne	19864 <main@@Base+0x39ac>
   17344:	b	1989c <main@@Base+0x39e4>
   17348:	subs	r1, sl, r3
   1734c:	sbcs	r1, r0, r2
   17350:	bcs	177d8 <main@@Base+0x1920>
   17354:	movw	r1, #0
   17358:	bfc	r0, #0, #16
   1735c:	movt	r1, #26736	; 0x6870
   17360:	teq	r0, r1
   17364:	bne	193e0 <main@@Base+0x3528>
   17368:	ldr	sl, [sp, #32]
   1736c:	cmp	r9, #3
   17370:	mov	r7, r8
   17374:	blt	199a0 <main@@Base+0x3ae8>
   17378:	ldrb	r0, [r8, #2]
   1737c:	mov	r7, r8
   17380:	cmp	r0, #34	; 0x22
   17384:	bne	199a0 <main@@Base+0x3ae8>
   17388:	add	r1, r8, #3
   1738c:	sub	r0, r6, r1
   17390:	cmp	r0, #2
   17394:	blt	1873c <main@@Base+0x2884>
   17398:	ldrb	r0, [r1]
   1739c:	cmp	r0, #32
   173a0:	bls	18728 <main@@Base+0x2870>
   173a4:	mov	r7, r1
   173a8:	cmp	r7, r6
   173ac:	bne	18754 <main@@Base+0x289c>
   173b0:	b	1878c <main@@Base+0x28d4>
   173b4:	mvn	r2, #-1711276032	; 0x9a000000
   173b8:	subs	r2, r2, sl
   173bc:	sbcs	r2, r4, r0
   173c0:	bcc	17858 <main@@Base+0x19a0>
   173c4:	movw	r0, #28788	; 0x7074
   173c8:	movt	r0, #25965	; 0x656d
   173cc:	eor	r0, sl, r0
   173d0:	orrs	r0, r0, r1
   173d4:	bne	193e0 <main@@Base+0x3528>
   173d8:	add	r7, r8, #8
   173dc:	ldr	sl, [sp, #32]
   173e0:	mov	r1, #8
   173e4:	sub	r0, r6, r7
   173e8:	cmp	r0, #8
   173ec:	movcc	r1, r0
   173f0:	sub	r1, r1, #1
   173f4:	cmp	r1, #7
   173f8:	bhi	1ea90 <main@@Base+0x8bd8>
   173fc:	ldrb	r1, [r7]
   17400:	cmp	r1, #121	; 0x79
   17404:	bne	1ea90 <main@@Base+0x8bd8>
   17408:	cmp	r0, #2
   1740c:	blt	1ea90 <main@@Base+0x8bd8>
   17410:	ldrb	r0, [r8, #9]
   17414:	cmp	r0, #34	; 0x22
   17418:	bne	1ea90 <main@@Base+0x8bd8>
   1741c:	add	r1, r8, #10
   17420:	sub	r0, r6, r1
   17424:	cmp	r0, #2
   17428:	blt	1ac64 <main@@Base+0x4dac>
   1742c:	ldrb	r0, [r1]
   17430:	cmp	r0, #32
   17434:	bls	1ac54 <main@@Base+0x4d9c>
   17438:	mov	r8, r1
   1743c:	cmp	r8, r6
   17440:	bne	1ac7c <main@@Base+0x4dc4>
   17444:	b	1acbc <main@@Base+0x4e04>
   17448:	teq	r0, r4
   1744c:	bne	1822c <main@@Base+0x2374>
   17450:	cmp	r9, #5
   17454:	mov	r1, r8
   17458:	blt	18f2c <main@@Base+0x3074>
   1745c:	ldrb	r0, [r8, #4]
   17460:	mov	r1, r8
   17464:	cmp	r0, #34	; 0x22
   17468:	bne	18f2c <main@@Base+0x3074>
   1746c:	add	r2, r8, #5
   17470:	sub	r0, r6, r2
   17474:	cmp	r0, #2
   17478:	blt	181dc <main@@Base+0x2324>
   1747c:	ldrb	r0, [r2]
   17480:	cmp	r0, #32
   17484:	bls	181c8 <main@@Base+0x2310>
   17488:	mov	r1, r2
   1748c:	cmp	r1, r6
   17490:	bne	181f8 <main@@Base+0x2340>
   17494:	b	18280 <main@@Base+0x23c8>
   17498:	movw	r7, #24431	; 0x5f6f
   1749c:	movw	r3, #25460	; 0x6374
   174a0:	movt	r7, #28530	; 0x6f72
   174a4:	movt	r3, #30309	; 0x7665
   174a8:	subs	r2, sl, r7
   174ac:	sbcs	r2, r0, r3
   174b0:	bcs	178cc <main@@Base+0x1a14>
   174b4:	movw	r0, #29556	; 0x7374
   174b8:	movt	r0, #28261	; 0x6e65
   174bc:	eor	r0, sl, r0
   174c0:	orrs	r0, r0, r1
   174c4:	bne	193e0 <main@@Base+0x3528>
   174c8:	add	r1, r8, #8
   174cc:	mov	r2, #8
   174d0:	ldr	sl, [sp, #32]
   174d4:	sub	r0, r6, r1
   174d8:	cmp	r0, #8
   174dc:	movcs	r0, r2
   174e0:	sub	r2, r0, #1
   174e4:	cmp	r2, #7
   174e8:	bhi	17aac <main@@Base+0x1bf4>
   174ec:	add	r5, pc, #36	; 0x24
   174f0:	mov	r9, #0
   174f4:	mov	ip, #0
   174f8:	mov	lr, #0
   174fc:	mov	r7, #0
   17500:	mov	r3, #0
   17504:	mov	r6, #0
   17508:	mov	r4, #0
   1750c:	ldr	r0, [r5, r2, lsl #2]
   17510:	mov	r2, #0
   17514:	add	pc, r5, r0
   17518:	andeq	r0, r0, r4, rrx
   1751c:	andeq	r0, r0, ip, asr r0
   17520:	andeq	r0, r0, r4, asr r0
   17524:	andeq	r0, r0, ip, asr #32
   17528:	andeq	r0, r0, r0, asr #32
   1752c:	andeq	r0, r0, r4, lsr r0
   17530:	andeq	r0, r0, r4, lsr #32
   17534:	andeq	r0, r0, r0, lsr #32
   17538:	ldrb	ip, [r8, #15]
   1753c:	ldrb	r0, [r8, #14]
   17540:	mov	lr, r9
   17544:	orr	r0, ip, r0, lsl #8
   17548:	mov	r9, r0
   1754c:	ldrb	r0, [r8, #13]
   17550:	mov	r7, lr
   17554:	orr	r9, r9, r0, lsl #16
   17558:	ldrb	r0, [r8, #12]
   1755c:	mov	r3, r7
   17560:	orr	r9, r9, r0, lsl #24
   17564:	ldrb	r0, [r8, #11]
   17568:	orr	r6, r0, r3
   1756c:	ldrb	r0, [r8, #10]
   17570:	orr	r4, r6, r0, lsl #8
   17574:	ldrb	r0, [r8, #9]
   17578:	orr	r2, r4, r0, lsl #16
   1757c:	ldrb	r3, [r1]
   17580:	movw	r0, #25205	; 0x6275
   17584:	ldr	r6, [sp, #36]	; 0x24
   17588:	movt	r0, #24948	; 0x6174
   1758c:	eor	r0, r9, r0
   17590:	orr	r2, r2, r3, lsl #24
   17594:	movw	r3, #26220	; 0x666c
   17598:	movt	r3, #25956	; 0x6564
   1759c:	eor	r2, r2, r3
   175a0:	orrs	r0, r0, r2
   175a4:	bne	17aac <main@@Base+0x1bf4>
   175a8:	add	r7, r8, #16
   175ac:	mov	r1, #8
   175b0:	sub	r0, r6, r7
   175b4:	cmp	r0, #8
   175b8:	movcc	r1, r0
   175bc:	sub	r2, r1, #1
   175c0:	cmp	r2, #7
   175c4:	bhi	1ea90 <main@@Base+0x8bd8>
   175c8:	add	r3, pc, #8
   175cc:	mov	r1, #0
   175d0:	ldr	r2, [r3, r2, lsl #2]
   175d4:	add	pc, r3, r2
   175d8:	andeq	r0, r0, r4, lsr r0
   175dc:	andeq	r0, r0, ip, lsr #32
   175e0:	andeq	r0, r0, r4, lsr #32
   175e4:	andeq	r0, r0, r0, lsr #32
   175e8:	andeq	r0, r0, r0, lsr #32
   175ec:	andeq	r0, r0, r0, lsr #32
   175f0:	andeq	r0, r0, r0, lsr #32
   175f4:	andeq	r0, r0, r0, lsr #32
   175f8:	ldrb	r1, [r8, #19]
   175fc:	ldrb	r2, [r8, #18]
   17600:	orr	r1, r1, r2, lsl #8
   17604:	ldrb	r2, [r8, #17]
   17608:	orr	r1, r1, r2, lsl #16
   1760c:	ldrb	r2, [r7]
   17610:	orr	r1, r1, r2, lsl #24
   17614:	movw	r2, #25970	; 0x6572
   17618:	movt	r2, #26214	; 0x6666
   1761c:	teq	r1, r2
   17620:	bne	1ea90 <main@@Base+0x8bd8>
   17624:	cmp	r0, #5
   17628:	blt	1ea90 <main@@Base+0x8bd8>
   1762c:	ldrb	r0, [r8, #20]
   17630:	cmp	r0, #34	; 0x22
   17634:	bne	1ea90 <main@@Base+0x8bd8>
   17638:	add	r1, r8, #21
   1763c:	sub	r0, r6, r1
   17640:	cmp	r0, #2
   17644:	blt	1b08c <main@@Base+0x51d4>
   17648:	ldrb	r0, [r1]
   1764c:	cmp	r0, #32
   17650:	bls	1b078 <main@@Base+0x51c0>
   17654:	mov	r9, r1
   17658:	cmp	r9, r6
   1765c:	bne	1b0a4 <main@@Base+0x51ec>
   17660:	b	1b0e4 <main@@Base+0x522c>
   17664:	movw	r0, #27749	; 0x6c65
   17668:	movw	r3, #26228	; 0x6674
   1766c:	ldr	r6, [sp, #36]	; 0x24
   17670:	ldr	sl, [sp, #32]
   17674:	movt	r0, #24930	; 0x6162
   17678:	movt	r3, #31087	; 0x796f
   1767c:	eor	r0, r1, r0
   17680:	eor	r3, r2, r3
   17684:	orrs	r0, r0, r3
   17688:	beq	17c18 <main@@Base+0x1d60>
   1768c:	movw	r0, #26990	; 0x696e
   17690:	movt	r0, #29810	; 0x7472
   17694:	eor	r0, r1, r0
   17698:	eor	r1, r2, r7
   1769c:	orrs	r0, r0, r1
   176a0:	bne	18704 <main@@Base+0x284c>
   176a4:	add	r7, r8, #16
   176a8:	mov	r2, #8
   176ac:	sub	r0, r6, r7
   176b0:	cmp	r0, #8
   176b4:	movcc	r2, r0
   176b8:	sub	r1, r2, #2
   176bc:	cmp	r1, #7
   176c0:	bcs	17ecc <main@@Base+0x2014>
   176c4:	ldrb	r1, [r8, #17]
   176c8:	lsl	r2, r1, #16
   176cc:	mov	r1, #0
   176d0:	ldrb	r3, [r7]
   176d4:	orr	r2, r2, r3, lsl #24
   176d8:	movw	r3, #0
   176dc:	movt	r3, #26418	; 0x6732
   176e0:	eor	r3, r2, r3
   176e4:	orrs	r1, r1, r3
   176e8:	bne	17db0 <main@@Base+0x1ef8>
   176ec:	cmp	r0, #3
   176f0:	blt	1ea90 <main@@Base+0x8bd8>
   176f4:	ldrb	r0, [r8, #18]
   176f8:	cmp	r0, #34	; 0x22
   176fc:	bne	1ea90 <main@@Base+0x8bd8>
   17700:	add	r1, r8, #19
   17704:	sub	r0, r6, r1
   17708:	cmp	r0, #2
   1770c:	blt	19014 <main@@Base+0x315c>
   17710:	ldrb	r0, [r1]
   17714:	cmp	r0, #32
   17718:	bls	19004 <main@@Base+0x314c>
   1771c:	mov	r8, r1
   17720:	cmp	r8, r6
   17724:	bne	1902c <main@@Base+0x3174>
   17728:	b	19064 <main@@Base+0x31ac>
   1772c:	ldr	sl, [sp, #32]
   17730:	cmp	r9, #6
   17734:	mov	r7, r8
   17738:	blt	18a04 <main@@Base+0x2b4c>
   1773c:	ldrb	r0, [r8, #5]
   17740:	mov	r7, r8
   17744:	cmp	r0, #34	; 0x22
   17748:	bne	18a04 <main@@Base+0x2b4c>
   1774c:	add	r1, r8, #6
   17750:	sub	r0, r6, r1
   17754:	cmp	r0, #2
   17758:	blt	18068 <main@@Base+0x21b0>
   1775c:	ldrb	r0, [r1]
   17760:	cmp	r0, #32
   17764:	bls	18054 <main@@Base+0x219c>
   17768:	mov	r7, r1
   1776c:	cmp	r7, r6
   17770:	bne	18080 <main@@Base+0x21c8>
   17774:	b	180b8 <main@@Base+0x2200>
   17778:	movw	r1, #29440	; 0x7300
   1777c:	ldr	sl, [sp, #32]
   17780:	bic	r0, r0, #255	; 0xff
   17784:	movt	r1, #28783	; 0x706f
   17788:	teq	r0, r1
   1778c:	bne	193e4 <main@@Base+0x352c>
   17790:	cmp	r9, #4
   17794:	mov	r9, r8
   17798:	blt	19b20 <main@@Base+0x3c68>
   1779c:	ldrb	r0, [r8, #3]
   177a0:	mov	r9, r8
   177a4:	cmp	r0, #34	; 0x22
   177a8:	bne	19b20 <main@@Base+0x3c68>
   177ac:	add	r1, r8, #4
   177b0:	sub	r0, r6, r1
   177b4:	cmp	r0, #2
   177b8:	blt	187b8 <main@@Base+0x2900>
   177bc:	ldrb	r0, [r1]
   177c0:	cmp	r0, #32
   177c4:	bls	187a4 <main@@Base+0x28ec>
   177c8:	mov	r9, r1
   177cc:	cmp	r9, r6
   177d0:	bne	187d0 <main@@Base+0x2918>
   177d4:	b	18808 <main@@Base+0x2950>
   177d8:	eor	r1, sl, r3
   177dc:	eor	r2, r0, r2
   177e0:	orrs	r1, r1, r2
   177e4:	bne	17c84 <main@@Base+0x1dcc>
   177e8:	add	r7, r8, #8
   177ec:	ldr	sl, [sp, #32]
   177f0:	mov	r1, #8
   177f4:	sub	r0, r6, r7
   177f8:	cmp	r0, #8
   177fc:	movcc	r1, r0
   17800:	sub	r1, r1, #1
   17804:	cmp	r1, #7
   17808:	bhi	1ea90 <main@@Base+0x8bd8>
   1780c:	ldrb	r1, [r7]
   17810:	cmp	r1, #121	; 0x79
   17814:	bne	1ea90 <main@@Base+0x8bd8>
   17818:	cmp	r0, #2
   1781c:	blt	1ea90 <main@@Base+0x8bd8>
   17820:	ldrb	r0, [r8, #9]
   17824:	cmp	r0, #34	; 0x22
   17828:	bne	1ea90 <main@@Base+0x8bd8>
   1782c:	add	r1, r8, #10
   17830:	sub	r0, r6, r1
   17834:	cmp	r0, #2
   17838:	blt	1ace4 <main@@Base+0x4e2c>
   1783c:	ldrb	r0, [r1]
   17840:	cmp	r0, #32
   17844:	bls	1acd4 <main@@Base+0x4e1c>
   17848:	mov	r8, r1
   1784c:	cmp	r8, r6
   17850:	bne	1acfc <main@@Base+0x4e44>
   17854:	b	1ad3c <main@@Base+0x4e84>
   17858:	movw	r3, #0
   1785c:	mov	r2, sl
   17860:	movt	r3, #26163	; 0x6633
   17864:	bfc	r2, #0, #16
   17868:	subs	r3, r3, #65536	; 0x10000
   1786c:	eor	r2, r2, r3
   17870:	sbc	r3, r4, #0
   17874:	eor	r0, r0, r3
   17878:	orrs	r0, r2, r0
   1787c:	bne	17ce0 <main@@Base+0x1e28>
   17880:	ldr	sl, [sp, #32]
   17884:	cmp	r9, #7
   17888:	mov	r7, r8
   1788c:	blt	1a7c4 <main@@Base+0x490c>
   17890:	ldrb	r0, [r8, #6]
   17894:	mov	r7, r8
   17898:	cmp	r0, #34	; 0x22
   1789c:	bne	1a7c4 <main@@Base+0x490c>
   178a0:	add	r1, r8, #7
   178a4:	sub	r0, r6, r1
   178a8:	cmp	r0, #2
   178ac:	blt	18834 <main@@Base+0x297c>
   178b0:	ldrb	r0, [r1]
   178b4:	cmp	r0, #32
   178b8:	bls	18820 <main@@Base+0x2968>
   178bc:	mov	r7, r1
   178c0:	cmp	r7, r6
   178c4:	bne	1884c <main@@Base+0x2994>
   178c8:	b	18884 <main@@Base+0x29cc>
   178cc:	eor	r1, sl, r7
   178d0:	eor	r0, r0, r3
   178d4:	orrs	r0, r1, r0
   178d8:	bne	193e0 <main@@Base+0x3528>
   178dc:	add	sl, r8, #8
   178e0:	mov	r1, #8
   178e4:	sub	lr, r6, sl
   178e8:	cmp	lr, #8
   178ec:	movcc	r1, lr
   178f0:	sub	r2, r1, #1
   178f4:	cmp	r2, #7
   178f8:	bhi	1b050 <main@@Base+0x5198>
   178fc:	add	r0, pc, #36	; 0x24
   17900:	mov	r1, #0
   17904:	mov	ip, #0
   17908:	mov	r9, #0
   1790c:	mov	r6, #0
   17910:	mov	r3, #0
   17914:	mov	r5, #0
   17918:	mov	r4, #0
   1791c:	ldr	r7, [r0, r2, lsl #2]
   17920:	mov	r2, #0
   17924:	add	pc, r0, r7
   17928:	andeq	r0, r0, r4, rrx
   1792c:	andeq	r0, r0, ip, asr r0
   17930:	andeq	r0, r0, r4, asr r0
   17934:	andeq	r0, r0, ip, asr #32
   17938:	andeq	r0, r0, r0, asr #32
   1793c:	andeq	r0, r0, r4, lsr r0
   17940:	andeq	r0, r0, r4, lsr #32
   17944:	andeq	r0, r0, r0, lsr #32
   17948:	ldrb	ip, [r8, #15]
   1794c:	ldrb	r0, [r8, #14]
   17950:	mov	r9, r1
   17954:	orr	r0, ip, r0, lsl #8
   17958:	mov	r1, r0
   1795c:	ldrb	r0, [r8, #13]
   17960:	mov	r6, r9
   17964:	orr	r1, r1, r0, lsl #16
   17968:	ldrb	r0, [r8, #12]
   1796c:	mov	r3, r6
   17970:	orr	r1, r1, r0, lsl #24
   17974:	ldrb	r0, [r8, #11]
   17978:	orr	r5, r0, r3
   1797c:	ldrb	r0, [r8, #10]
   17980:	orr	r4, r5, r0, lsl #8
   17984:	ldrb	r0, [r8, #9]
   17988:	orr	r2, r4, r0, lsl #16
   1798c:	ldrb	r3, [sl]
   17990:	movw	r0, #27749	; 0x6c65
   17994:	movt	r0, #30050	; 0x7562
   17998:	eor	r0, r1, r0
   1799c:	orr	r2, r2, r3, lsl #24
   179a0:	movw	r3, #25711	; 0x646f
   179a4:	movt	r3, #26207	; 0x665f
   179a8:	eor	r3, r2, r3
   179ac:	orrs	r0, r0, r3
   179b0:	bne	17dfc <main@@Base+0x1f44>
   179b4:	ldr	r6, [sp, #36]	; 0x24
   179b8:	add	r7, r8, #16
   179bc:	mov	r1, #8
   179c0:	sub	r0, r6, r7
   179c4:	cmp	r0, #8
   179c8:	movcc	r1, r0
   179cc:	sub	r1, r1, #1
   179d0:	cmp	r1, #7
   179d4:	bhi	17e68 <main@@Base+0x1fb0>
   179d8:	ldrb	r1, [r7]
   179dc:	cmp	r1, #115	; 0x73
   179e0:	bne	17e68 <main@@Base+0x1fb0>
   179e4:	ldr	sl, [sp, #32]
   179e8:	cmp	r0, #2
   179ec:	blt	1ea90 <main@@Base+0x8bd8>
   179f0:	ldrb	r0, [r8, #17]
   179f4:	cmp	r0, #34	; 0x22
   179f8:	bne	1ea90 <main@@Base+0x8bd8>
   179fc:	add	r1, r8, #18
   17a00:	sub	r0, r6, r1
   17a04:	cmp	r0, #2
   17a08:	blt	1b9b4 <main@@Base+0x5afc>
   17a0c:	ldrb	r0, [r1]
   17a10:	cmp	r0, #32
   17a14:	bls	1b9a0 <main@@Base+0x5ae8>
   17a18:	mov	r9, r1
   17a1c:	cmp	r9, r6
   17a20:	bne	1b9cc <main@@Base+0x5b14>
   17a24:	b	1ba0c <main@@Base+0x5b54>
   17a28:	movw	r0, #30256	; 0x7630
   17a2c:	ldr	r6, [sp, #36]	; 0x24
   17a30:	movt	r0, #26222	; 0x666e
   17a34:	subs	r0, r0, r1
   17a38:	movw	r0, #12895	; 0x325f
   17a3c:	movt	r0, #30003	; 0x7533
   17a40:	sbcs	r0, r0, r2
   17a44:	eor	r0, r1, r3
   17a48:	bcc	17d3c <main@@Base+0x1e84>
   17a4c:	movw	r1, #13407	; 0x345f
   17a50:	ldr	sl, [sp, #32]
   17a54:	movt	r1, #29494	; 0x7336
   17a58:	eor	r1, r2, r1
   17a5c:	orrs	r0, r0, r1
   17a60:	bne	18704 <main@@Base+0x284c>
   17a64:	cmp	ip, #9
   17a68:	blt	19254 <main@@Base+0x339c>
   17a6c:	ldrb	r0, [r8, #16]
   17a70:	cmp	r0, #34	; 0x22
   17a74:	bne	19254 <main@@Base+0x339c>
   17a78:	ldr	r4, [sp, #36]	; 0x24
   17a7c:	add	r1, r8, #17
   17a80:	sub	r0, r4, r1
   17a84:	cmp	r0, #2
   17a88:	blt	19204 <main@@Base+0x334c>
   17a8c:	ldrb	r0, [r1]
   17a90:	cmp	r0, #32
   17a94:	bls	191ec <main@@Base+0x3334>
   17a98:	ldr	r4, [sp, #36]	; 0x24
   17a9c:	mov	r6, r1
   17aa0:	cmp	r6, r4
   17aa4:	bne	1921c <main@@Base+0x3364>
   17aa8:	b	192c4 <main@@Base+0x340c>
   17aac:	mov	r0, sl
   17ab0:	b	1ea98 <main@@Base+0x8be0>
   17ab4:	ldr	sl, [sp, #32]
   17ab8:	cmp	r9, #9
   17abc:	mov	r7, r8
   17ac0:	blt	1969c <main@@Base+0x37e4>
   17ac4:	ldrb	r0, [r8, #8]
   17ac8:	mov	r7, r8
   17acc:	cmp	r0, #34	; 0x22
   17ad0:	bne	1969c <main@@Base+0x37e4>
   17ad4:	add	r1, r8, #9
   17ad8:	sub	r0, r6, r1
   17adc:	cmp	r0, #2
   17ae0:	blt	18324 <main@@Base+0x246c>
   17ae4:	ldrb	r0, [r1]
   17ae8:	cmp	r0, #32
   17aec:	bls	18310 <main@@Base+0x2458>
   17af0:	mov	r7, r1
   17af4:	cmp	r7, r6
   17af8:	bne	1833c <main@@Base+0x2484>
   17afc:	b	18374 <main@@Base+0x24bc>
   17b00:	add	r9, r8, #16
   17b04:	ldr	sl, [sp, #32]
   17b08:	mov	r1, #8
   17b0c:	sub	ip, r6, r9
   17b10:	cmp	ip, #8
   17b14:	movcc	r1, ip
   17b18:	sub	r2, r1, #1
   17b1c:	cmp	r2, #7
   17b20:	bhi	18704 <main@@Base+0x284c>
   17b24:	add	r0, pc, #32
   17b28:	mov	r1, #0
   17b2c:	mov	lr, #0
   17b30:	mov	r5, #0
   17b34:	mov	r3, #0
   17b38:	mov	r6, #0
   17b3c:	mov	r4, #0
   17b40:	mov	r7, #0
   17b44:	ldr	r2, [r0, r2, lsl #2]
   17b48:	add	pc, r0, r2
   17b4c:	andeq	r0, r0, ip, asr r0
   17b50:	andeq	r0, r0, r4, asr r0
   17b54:	andeq	r0, r0, ip, asr #32
   17b58:	andeq	r0, r0, r4, asr #32
   17b5c:	andeq	r0, r0, r8, lsr r0
   17b60:	andeq	r0, r0, r8, lsr #32
   17b64:	andeq	r0, r0, r0, lsr #32
   17b68:	andeq	r0, r0, r0, lsr #32
   17b6c:	ldrb	r0, [r8, #22]
   17b70:	lsl	lr, r0, #8
   17b74:	ldrb	r0, [r8, #21]
   17b78:	mov	r5, r1
   17b7c:	orr	r0, lr, r0, lsl #16
   17b80:	mov	r1, r0
   17b84:	ldrb	r0, [r8, #20]
   17b88:	mov	r3, r5
   17b8c:	orr	r1, r1, r0, lsl #24
   17b90:	ldrb	r0, [r8, #19]
   17b94:	orr	r6, r0, r3
   17b98:	ldrb	r0, [r8, #18]
   17b9c:	orr	r4, r6, r0, lsl #8
   17ba0:	ldrb	r0, [r8, #17]
   17ba4:	orr	r7, r4, r0, lsl #16
   17ba8:	bic	r0, r1, #255	; 0xff
   17bac:	movw	r1, #29696	; 0x7400
   17bb0:	movw	r2, #29810	; 0x7472
   17bb4:	ldr	r6, [sp, #36]	; 0x24
   17bb8:	movt	r1, #30051	; 0x7563
   17bbc:	movt	r2, #25715	; 0x6473
   17bc0:	eor	r0, r0, r1
   17bc4:	ldrb	r1, [r9]
   17bc8:	orr	r1, r7, r1, lsl #24
   17bcc:	eor	r1, r1, r2
   17bd0:	orrs	r0, r0, r1
   17bd4:	bne	18704 <main@@Base+0x284c>
   17bd8:	cmp	ip, #8
   17bdc:	blt	18704 <main@@Base+0x284c>
   17be0:	ldrb	r0, [r8, #23]
   17be4:	cmp	r0, #34	; 0x22
   17be8:	bne	18704 <main@@Base+0x284c>
   17bec:	add	r1, r8, #24
   17bf0:	sub	r0, r6, r1
   17bf4:	cmp	r0, #2
   17bf8:	blt	1908c <main@@Base+0x31d4>
   17bfc:	ldrb	r0, [r1]
   17c00:	cmp	r0, #32
   17c04:	bls	1907c <main@@Base+0x31c4>
   17c08:	mov	r8, r1
   17c0c:	cmp	r8, r6
   17c10:	bne	190a4 <main@@Base+0x31ec>
   17c14:	b	190dc <main@@Base+0x3224>
   17c18:	add	r7, r8, #16
   17c1c:	mov	r1, #8
   17c20:	sub	r0, r6, r7
   17c24:	cmp	r0, #8
   17c28:	movcc	r1, r0
   17c2c:	sub	r1, r1, #1
   17c30:	cmp	r1, #7
   17c34:	bhi	1ea90 <main@@Base+0x8bd8>
   17c38:	ldrb	r1, [r7]
   17c3c:	cmp	r1, #115	; 0x73
   17c40:	bne	1ea90 <main@@Base+0x8bd8>
   17c44:	cmp	r0, #2
   17c48:	blt	1ea90 <main@@Base+0x8bd8>
   17c4c:	ldrb	r0, [r8, #17]
   17c50:	cmp	r0, #34	; 0x22
   17c54:	bne	1ea90 <main@@Base+0x8bd8>
   17c58:	add	r1, r8, #18
   17c5c:	sub	r0, r6, r1
   17c60:	cmp	r0, #2
   17c64:	blt	1a85c <main@@Base+0x49a4>
   17c68:	ldrb	r0, [r1]
   17c6c:	cmp	r0, #32
   17c70:	bls	1a84c <main@@Base+0x4994>
   17c74:	mov	r8, r1
   17c78:	cmp	r8, r6
   17c7c:	bne	1a874 <main@@Base+0x49bc>
   17c80:	b	1a8b4 <main@@Base+0x49fc>
   17c84:	movw	r1, #28257	; 0x6e61
   17c88:	ldr	sl, [sp, #32]
   17c8c:	movt	r1, #28001	; 0x6d61
   17c90:	teq	r0, r1
   17c94:	bne	193e4 <main@@Base+0x352c>
   17c98:	cmp	r9, #5
   17c9c:	mov	r7, r8
   17ca0:	blt	1b474 <main@@Base+0x55bc>
   17ca4:	ldrb	r0, [r8, #4]
   17ca8:	mov	r7, r8
   17cac:	cmp	r0, #34	; 0x22
   17cb0:	bne	1b474 <main@@Base+0x55bc>
   17cb4:	add	r1, r8, #5
   17cb8:	sub	r0, r6, r1
   17cbc:	cmp	r0, #2
   17cc0:	blt	19108 <main@@Base+0x3250>
   17cc4:	ldrb	r0, [r1]
   17cc8:	cmp	r0, #32
   17ccc:	bls	190f4 <main@@Base+0x323c>
   17cd0:	mov	r7, r1
   17cd4:	cmp	r7, r6
   17cd8:	bne	19120 <main@@Base+0x3268>
   17cdc:	b	19158 <main@@Base+0x32a0>
   17ce0:	and	r0, sl, #-16777216	; 0xff000000
   17ce4:	eor	r0, r0, #1711276032	; 0x66000000
   17ce8:	orrs	r0, r0, r1
   17cec:	bne	193e0 <main@@Base+0x3528>
   17cf0:	ldr	sl, [sp, #32]
   17cf4:	cmp	r9, #6
   17cf8:	mov	r7, r8
   17cfc:	blt	1b5f8 <main@@Base+0x5740>
   17d00:	ldrb	r0, [r8, #5]
   17d04:	mov	r7, r8
   17d08:	cmp	r0, #34	; 0x22
   17d0c:	bne	1b5f8 <main@@Base+0x5740>
   17d10:	add	r1, r8, #6
   17d14:	sub	r0, r6, r1
   17d18:	cmp	r0, #2
   17d1c:	blt	19184 <main@@Base+0x32cc>
   17d20:	ldrb	r0, [r1]
   17d24:	cmp	r0, #32
   17d28:	bls	19170 <main@@Base+0x32b8>
   17d2c:	mov	r7, r1
   17d30:	cmp	r7, r6
   17d34:	bne	1919c <main@@Base+0x32e4>
   17d38:	b	191d4 <main@@Base+0x331c>
   17d3c:	movw	r1, #13407	; 0x345f
   17d40:	ldr	sl, [sp, #32]
   17d44:	movt	r1, #30006	; 0x7536
   17d48:	eor	r1, r2, r1
   17d4c:	orrs	r1, r0, r1
   17d50:	beq	17e84 <main@@Base+0x1fcc>
   17d54:	movw	r1, #12895	; 0x325f
   17d58:	movt	r1, #30003	; 0x7533
   17d5c:	eor	r1, r2, r1
   17d60:	orrs	r0, r0, r1
   17d64:	bne	18704 <main@@Base+0x284c>
   17d68:	cmp	ip, #9
   17d6c:	blt	1a938 <main@@Base+0x4a80>
   17d70:	ldrb	r0, [r8, #16]
   17d74:	cmp	r0, #34	; 0x22
   17d78:	bne	1a938 <main@@Base+0x4a80>
   17d7c:	ldr	r4, [sp, #36]	; 0x24
   17d80:	add	r1, r8, #17
   17d84:	sub	r0, r4, r1
   17d88:	cmp	r0, #2
   17d8c:	blt	1a8e4 <main@@Base+0x4a2c>
   17d90:	ldrb	r0, [r1]
   17d94:	cmp	r0, #32
   17d98:	bls	1a8cc <main@@Base+0x4a14>
   17d9c:	ldr	r4, [sp, #36]	; 0x24
   17da0:	mov	r6, r1
   17da4:	cmp	r6, r4
   17da8:	bne	1a8fc <main@@Base+0x4a44>
   17dac:	b	1a9b0 <main@@Base+0x4af8>
   17db0:	and	r1, r2, #-16777216	; 0xff000000
   17db4:	teq	r1, #1728053248	; 0x67000000
   17db8:	bne	1ea90 <main@@Base+0x8bd8>
   17dbc:	cmp	r0, #2
   17dc0:	blt	1ea90 <main@@Base+0x8bd8>
   17dc4:	ldrb	r0, [r8, #17]
   17dc8:	cmp	r0, #34	; 0x22
   17dcc:	bne	1ea90 <main@@Base+0x8bd8>
   17dd0:	add	r1, r8, #18
   17dd4:	sub	r0, r6, r1
   17dd8:	cmp	r0, #2
   17ddc:	blt	1abe4 <main@@Base+0x4d2c>
   17de0:	ldrb	r0, [r1]
   17de4:	cmp	r0, #32
   17de8:	bls	1abd4 <main@@Base+0x4d1c>
   17dec:	mov	r8, r1
   17df0:	cmp	r8, r6
   17df4:	bne	1abfc <main@@Base+0x4d44>
   17df8:	b	1ac3c <main@@Base+0x4d84>
   17dfc:	movw	r0, #24428	; 0x5f6c
   17e00:	lsr	r1, r1, #8
   17e04:	ldr	r6, [sp, #36]	; 0x24
   17e08:	movt	r0, #102	; 0x66
   17e0c:	orr	r1, r1, r2, lsl #24
   17e10:	eor	r0, r0, r2, lsr #8
   17e14:	movw	r2, #26483	; 0x6773
   17e18:	movt	r2, #28526	; 0x6f6e
   17e1c:	eor	r1, r1, r2
   17e20:	orrs	r0, r1, r0
   17e24:	bne	1b050 <main@@Base+0x5198>
   17e28:	cmp	lr, #8
   17e2c:	blt	1b050 <main@@Base+0x5198>
   17e30:	ldrb	r0, [r8, #15]
   17e34:	cmp	r0, #34	; 0x22
   17e38:	bne	1b050 <main@@Base+0x5198>
   17e3c:	add	r1, r8, #16
   17e40:	sub	r0, r6, r1
   17e44:	cmp	r0, #2
   17e48:	blt	1b000 <main@@Base+0x5148>
   17e4c:	ldrb	r0, [r1]
   17e50:	cmp	r0, #32
   17e54:	bls	1afec <main@@Base+0x5134>
   17e58:	mov	r9, r1
   17e5c:	cmp	r9, r6
   17e60:	bne	1b018 <main@@Base+0x5160>
   17e64:	b	1b060 <main@@Base+0x51a8>
   17e68:	ldr	sl, [sp, #32]
   17e6c:	b	1ea90 <main@@Base+0x8bd8>
   17e70:	cmp	r2, #1
   17e74:	mov	r1, #0
   17e78:	mov	r2, #0
   17e7c:	beq	16f6c <main@@Base+0x10b4>
   17e80:	b	1ea90 <main@@Base+0x8bd8>
   17e84:	cmp	ip, #9
   17e88:	blt	1aa38 <main@@Base+0x4b80>
   17e8c:	ldrb	r0, [r8, #16]
   17e90:	cmp	r0, #34	; 0x22
   17e94:	bne	1aa38 <main@@Base+0x4b80>
   17e98:	ldr	r4, [sp, #36]	; 0x24
   17e9c:	add	r1, r8, #17
   17ea0:	sub	r0, r4, r1
   17ea4:	cmp	r0, #2
   17ea8:	blt	1a9e4 <main@@Base+0x4b2c>
   17eac:	ldrb	r0, [r1]
   17eb0:	cmp	r0, #32
   17eb4:	bls	1a9cc <main@@Base+0x4b14>
   17eb8:	ldr	r4, [sp, #36]	; 0x24
   17ebc:	mov	r6, r1
   17ec0:	cmp	r6, r4
   17ec4:	bne	1a9fc <main@@Base+0x4b44>
   17ec8:	b	1aab0 <main@@Base+0x4bf8>
   17ecc:	cmp	r2, #1
   17ed0:	mov	r1, #0
   17ed4:	mov	r2, #0
   17ed8:	beq	176d0 <main@@Base+0x1818>
   17edc:	b	1ea90 <main@@Base+0x8bd8>
   17ee0:	bne	17ef4 <main@@Base+0x203c>
   17ee4:	mov	r7, r8
   17ee8:	ldrb	r0, [r7, #8]!
   17eec:	cmp	r0, #32
   17ef0:	bhi	17f04 <main@@Base+0x204c>
   17ef4:	mov	r0, sl
   17ef8:	mov	r2, r6
   17efc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   17f00:	mov	r7, r0
   17f04:	cmp	r7, r6
   17f08:	beq	17f44 <main@@Base+0x208c>
   17f0c:	ldrb	r0, [r7]
   17f10:	cmp	r0, #58	; 0x3a
   17f14:	bne	17f44 <main@@Base+0x208c>
   17f18:	add	r1, r7, #1
   17f1c:	sub	r0, r6, r1
   17f20:	cmp	r0, #2
   17f24:	blt	1839c <main@@Base+0x24e4>
   17f28:	ldrb	r0, [r1]
   17f2c:	cmp	r0, #32
   17f30:	bls	1838c <main@@Base+0x24d4>
   17f34:	mov	r7, r1
   17f38:	cmp	r8, r7
   17f3c:	bne	183b4 <main@@Base+0x24fc>
   17f40:	b	193e4 <main@@Base+0x352c>
   17f44:	mov	r0, sl
   17f48:	mov	r1, r7
   17f4c:	mov	r2, r6
   17f50:	mov	r3, #4
   17f54:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   17f58:	b	183a8 <main@@Base+0x24f0>
   17f5c:	bne	17f70 <main@@Base+0x20b8>
   17f60:	mov	r9, r8
   17f64:	ldrb	r0, [r9, #7]!
   17f68:	cmp	r0, #32
   17f6c:	bhi	17f80 <main@@Base+0x20c8>
   17f70:	ldr	r0, [sp, #32]
   17f74:	mov	r2, r6
   17f78:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   17f7c:	mov	r9, r0
   17f80:	cmp	r9, r6
   17f84:	beq	17fc0 <main@@Base+0x2108>
   17f88:	ldrb	r0, [r9]
   17f8c:	cmp	r0, #58	; 0x3a
   17f90:	bne	17fc0 <main@@Base+0x2108>
   17f94:	add	r1, r9, #1
   17f98:	sub	r0, r6, r1
   17f9c:	cmp	r0, #2
   17fa0:	blt	18460 <main@@Base+0x25a8>
   17fa4:	ldrb	r0, [r1]
   17fa8:	cmp	r0, #32
   17fac:	bls	18450 <main@@Base+0x2598>
   17fb0:	mov	r9, r1
   17fb4:	cmp	r8, r9
   17fb8:	bne	18478 <main@@Base+0x25c0>
   17fbc:	b	1935c <main@@Base+0x34a4>
   17fc0:	ldr	r0, [sp, #32]
   17fc4:	mov	r1, r9
   17fc8:	mov	r2, r6
   17fcc:	mov	r3, #4
   17fd0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   17fd4:	b	1846c <main@@Base+0x25b4>
   17fd8:	bne	17fec <main@@Base+0x2134>
   17fdc:	mov	r1, r8
   17fe0:	ldrb	r0, [r1, #7]!
   17fe4:	cmp	r0, #32
   17fe8:	bhi	18000 <main@@Base+0x2148>
   17fec:	mov	r1, r2
   17ff0:	mov	r0, sl
   17ff4:	mov	r2, r6
   17ff8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   17ffc:	mov	r1, r0
   18000:	cmp	r1, r6
   18004:	beq	18040 <main@@Base+0x2188>
   18008:	ldrb	r0, [r1]
   1800c:	cmp	r0, #58	; 0x3a
   18010:	bne	18040 <main@@Base+0x2188>
   18014:	add	r2, r1, #1
   18018:	sub	r0, r6, r2
   1801c:	cmp	r0, #2
   18020:	blt	1899c <main@@Base+0x2ae4>
   18024:	ldrb	r0, [r2]
   18028:	cmp	r0, #32
   1802c:	bls	1898c <main@@Base+0x2ad4>
   18030:	mov	r1, r2
   18034:	cmp	r8, r1
   18038:	bne	189b8 <main@@Base+0x2b00>
   1803c:	b	193e4 <main@@Base+0x352c>
   18040:	mov	r0, sl
   18044:	mov	r2, r6
   18048:	mov	r3, #4
   1804c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18050:	b	189ac <main@@Base+0x2af4>
   18054:	bne	18068 <main@@Base+0x21b0>
   18058:	mov	r7, r8
   1805c:	ldrb	r0, [r7, #7]!
   18060:	cmp	r0, #32
   18064:	bhi	18078 <main@@Base+0x21c0>
   18068:	mov	r0, sl
   1806c:	mov	r2, r6
   18070:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18074:	mov	r7, r0
   18078:	cmp	r7, r6
   1807c:	beq	180b8 <main@@Base+0x2200>
   18080:	ldrb	r0, [r7]
   18084:	cmp	r0, #58	; 0x3a
   18088:	bne	180b8 <main@@Base+0x2200>
   1808c:	add	r1, r7, #1
   18090:	sub	r0, r6, r1
   18094:	cmp	r0, #2
   18098:	blt	189f4 <main@@Base+0x2b3c>
   1809c:	ldrb	r0, [r1]
   180a0:	cmp	r0, #32
   180a4:	bls	189e4 <main@@Base+0x2b2c>
   180a8:	mov	r7, r1
   180ac:	cmp	r8, r7
   180b0:	bne	18a0c <main@@Base+0x2b54>
   180b4:	b	193e4 <main@@Base+0x352c>
   180b8:	mov	r0, sl
   180bc:	mov	r1, r7
   180c0:	mov	r2, r6
   180c4:	mov	r3, #4
   180c8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   180cc:	b	18a00 <main@@Base+0x2b48>
   180d0:	bne	180e4 <main@@Base+0x222c>
   180d4:	mov	r1, r8
   180d8:	ldrb	r0, [r1, #6]!
   180dc:	cmp	r0, #32
   180e0:	bhi	180f8 <main@@Base+0x2240>
   180e4:	mov	r1, r2
   180e8:	mov	r0, sl
   180ec:	mov	r2, r6
   180f0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   180f4:	mov	r1, r0
   180f8:	cmp	r1, r6
   180fc:	beq	18138 <main@@Base+0x2280>
   18100:	ldrb	r0, [r1]
   18104:	cmp	r0, #58	; 0x3a
   18108:	bne	18138 <main@@Base+0x2280>
   1810c:	add	r2, r1, #1
   18110:	sub	r0, r6, r2
   18114:	cmp	r0, #2
   18118:	blt	18b6c <main@@Base+0x2cb4>
   1811c:	ldrb	r0, [r2]
   18120:	cmp	r0, #32
   18124:	bls	18b5c <main@@Base+0x2ca4>
   18128:	mov	r1, r2
   1812c:	cmp	r8, r1
   18130:	bne	18b88 <main@@Base+0x2cd0>
   18134:	b	193e4 <main@@Base+0x352c>
   18138:	mov	r0, sl
   1813c:	mov	r2, r6
   18140:	mov	r3, #4
   18144:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18148:	b	18b7c <main@@Base+0x2cc4>
   1814c:	bne	18160 <main@@Base+0x22a8>
   18150:	mov	r9, r8
   18154:	ldrb	r0, [r9, #6]!
   18158:	cmp	r0, #32
   1815c:	bhi	18170 <main@@Base+0x22b8>
   18160:	mov	r0, sl
   18164:	mov	r2, r6
   18168:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1816c:	mov	r9, r0
   18170:	cmp	r9, r6
   18174:	beq	181b0 <main@@Base+0x22f8>
   18178:	ldrb	r0, [r9]
   1817c:	cmp	r0, #58	; 0x3a
   18180:	bne	181b0 <main@@Base+0x22f8>
   18184:	add	r1, r9, #1
   18188:	sub	r0, r6, r1
   1818c:	cmp	r0, #2
   18190:	blt	18bc4 <main@@Base+0x2d0c>
   18194:	ldrb	r0, [r1]
   18198:	cmp	r0, #32
   1819c:	bls	18bb4 <main@@Base+0x2cfc>
   181a0:	mov	r9, r1
   181a4:	cmp	r8, r9
   181a8:	bne	18bdc <main@@Base+0x2d24>
   181ac:	b	193e4 <main@@Base+0x352c>
   181b0:	mov	r0, sl
   181b4:	mov	r1, r9
   181b8:	mov	r2, r6
   181bc:	mov	r3, #4
   181c0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   181c4:	b	18bd0 <main@@Base+0x2d18>
   181c8:	bne	181dc <main@@Base+0x2324>
   181cc:	mov	r1, r8
   181d0:	ldrb	r0, [r1, #6]!
   181d4:	cmp	r0, #32
   181d8:	bhi	181f0 <main@@Base+0x2338>
   181dc:	ldr	r0, [sp, #32]
   181e0:	mov	r1, r2
   181e4:	mov	r2, r6
   181e8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   181ec:	mov	r1, r0
   181f0:	cmp	r1, r6
   181f4:	beq	18280 <main@@Base+0x23c8>
   181f8:	ldrb	r0, [r1]
   181fc:	cmp	r0, #58	; 0x3a
   18200:	bne	18280 <main@@Base+0x23c8>
   18204:	add	r2, r1, #1
   18208:	sub	r0, r6, r2
   1820c:	cmp	r0, #2
   18210:	blt	18f18 <main@@Base+0x3060>
   18214:	ldrb	r0, [r2]
   18218:	cmp	r0, #32
   1821c:	bls	18f08 <main@@Base+0x3050>
   18220:	mov	r1, r2
   18224:	cmp	r8, r1
   18228:	bne	18f34 <main@@Base+0x307c>
   1822c:	eor	r0, r5, #889192448	; 0x35000000
   18230:	orrs	r0, r0, r7
   18234:	bne	1935c <main@@Base+0x34a4>
   18238:	cmp	r9, #6
   1823c:	mov	r9, r8
   18240:	blt	192fc <main@@Base+0x3444>
   18244:	ldrb	r0, [r8, #5]
   18248:	mov	r9, r8
   1824c:	cmp	r0, #34	; 0x22
   18250:	bne	192fc <main@@Base+0x3444>
   18254:	add	r1, r8, #6
   18258:	sub	r0, r6, r1
   1825c:	cmp	r0, #2
   18260:	blt	182a8 <main@@Base+0x23f0>
   18264:	ldrb	r0, [r1]
   18268:	cmp	r0, #32
   1826c:	bls	18294 <main@@Base+0x23dc>
   18270:	mov	r9, r1
   18274:	cmp	r9, r6
   18278:	bne	182c0 <main@@Base+0x2408>
   1827c:	b	182f8 <main@@Base+0x2440>
   18280:	ldr	r0, [sp, #32]
   18284:	mov	r2, r6
   18288:	mov	r3, #4
   1828c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18290:	b	18f28 <main@@Base+0x3070>
   18294:	bne	182a8 <main@@Base+0x23f0>
   18298:	mov	r9, r8
   1829c:	ldrb	r0, [r9, #7]!
   182a0:	cmp	r0, #32
   182a4:	bhi	182b8 <main@@Base+0x2400>
   182a8:	ldr	r0, [sp, #32]
   182ac:	mov	r2, r6
   182b0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   182b4:	mov	r9, r0
   182b8:	cmp	r9, r6
   182bc:	beq	182f8 <main@@Base+0x2440>
   182c0:	ldrb	r0, [r9]
   182c4:	cmp	r0, #58	; 0x3a
   182c8:	bne	182f8 <main@@Base+0x2440>
   182cc:	add	r1, r9, #1
   182d0:	sub	r0, r6, r1
   182d4:	cmp	r0, #2
   182d8:	blt	192ec <main@@Base+0x3434>
   182dc:	ldrb	r0, [r1]
   182e0:	cmp	r0, #32
   182e4:	bls	192dc <main@@Base+0x3424>
   182e8:	mov	r9, r1
   182ec:	cmp	r8, r9
   182f0:	bne	19304 <main@@Base+0x344c>
   182f4:	b	1935c <main@@Base+0x34a4>
   182f8:	ldr	r0, [sp, #32]
   182fc:	mov	r1, r9
   18300:	mov	r2, r6
   18304:	mov	r3, #4
   18308:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1830c:	b	192f8 <main@@Base+0x3440>
   18310:	bne	18324 <main@@Base+0x246c>
   18314:	mov	r7, r8
   18318:	ldrb	r0, [r7, #10]!
   1831c:	cmp	r0, #32
   18320:	bhi	18334 <main@@Base+0x247c>
   18324:	mov	r0, sl
   18328:	mov	r2, r6
   1832c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18330:	mov	r7, r0
   18334:	cmp	r7, r6
   18338:	beq	18374 <main@@Base+0x24bc>
   1833c:	ldrb	r0, [r7]
   18340:	cmp	r0, #58	; 0x3a
   18344:	bne	18374 <main@@Base+0x24bc>
   18348:	add	r1, r7, #1
   1834c:	sub	r0, r6, r1
   18350:	cmp	r0, #2
   18354:	blt	1968c <main@@Base+0x37d4>
   18358:	ldrb	r0, [r1]
   1835c:	cmp	r0, #32
   18360:	bls	1967c <main@@Base+0x37c4>
   18364:	mov	r7, r1
   18368:	cmp	r8, r7
   1836c:	bne	196a4 <main@@Base+0x37ec>
   18370:	b	193e4 <main@@Base+0x352c>
   18374:	mov	r0, sl
   18378:	mov	r1, r7
   1837c:	mov	r2, r6
   18380:	mov	r3, #4
   18384:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18388:	b	19698 <main@@Base+0x37e0>
   1838c:	bne	1839c <main@@Base+0x24e4>
   18390:	ldrb	r0, [r7, #2]!
   18394:	cmp	r0, #32
   18398:	bhi	183ac <main@@Base+0x24f4>
   1839c:	mov	r0, sl
   183a0:	mov	r2, r6
   183a4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   183a8:	mov	r7, r0
   183ac:	cmp	r8, r7
   183b0:	beq	193e4 <main@@Base+0x352c>
   183b4:	mov	r0, #0
   183b8:	mov	r1, r7
   183bc:	mov	r2, r6
   183c0:	sub	r3, fp, #56	; 0x38
   183c4:	str	r0, [fp, #-56]	; 0xffffffc8
   183c8:	mov	r0, sl
   183cc:	bl	36160 <flatcc_json_parser_float@@Base>
   183d0:	mov	r9, r0
   183d4:	cmp	r7, r0
   183d8:	bne	1840c <main@@Base+0x2554>
   183dc:	sub	r0, fp, #56	; 0x38
   183e0:	mov	r1, r7
   183e4:	mov	r2, r6
   183e8:	str	r0, [sp]
   183ec:	mov	r0, sl
   183f0:	ldr	r3, [pc, #4088]	; 193f0 <main@@Base+0x3538>
   183f4:	add	r3, pc, r3
   183f8:	bl	23dcc <main@@Base+0xdf14>
   183fc:	mov	r9, r0
   18400:	cmp	r0, r7
   18404:	cmpne	r9, r6
   18408:	beq	1fc38 <main@@Base+0x9d80>
   1840c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   18410:	vcmp.f32	s0, #0.0
   18414:	vmrs	APSR_nzcv, fpscr
   18418:	bne	18428 <main@@Base+0x2570>
   1841c:	ldrb	r0, [sl, #8]
   18420:	tst	r0, #2
   18424:	beq	1eaa4 <main@@Base+0x8bec>
   18428:	ldr	r0, [sl]
   1842c:	mov	r1, #27
   18430:	mov	r2, #4
   18434:	mov	r3, #4
   18438:	bl	3063c <flatcc_builder_table_add@@Base>
   1843c:	cmp	r0, #0
   18440:	beq	1fc38 <main@@Base+0x9d80>
   18444:	ldr	r1, [fp, #-56]	; 0xffffffc8
   18448:	str	r1, [r0]
   1844c:	b	1eaa4 <main@@Base+0x8bec>
   18450:	bne	18460 <main@@Base+0x25a8>
   18454:	ldrb	r0, [r9, #2]!
   18458:	cmp	r0, #32
   1845c:	bhi	18470 <main@@Base+0x25b8>
   18460:	ldr	r0, [sp, #32]
   18464:	mov	r2, r6
   18468:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1846c:	mov	r9, r0
   18470:	cmp	r8, r9
   18474:	beq	1935c <main@@Base+0x34a4>
   18478:	ldr	sl, [sp, #32]
   1847c:	mov	r1, #4
   18480:	mov	r2, #2
   18484:	mvn	r3, #-1073741824	; 0xc0000000
   18488:	ldr	r0, [sl]
   1848c:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   18490:	cmp	r0, #0
   18494:	bne	1fc38 <main@@Base+0x9d80>
   18498:	cmp	r9, r6
   1849c:	beq	184d0 <main@@Base+0x2618>
   184a0:	ldrb	r0, [r9]
   184a4:	cmp	r0, #91	; 0x5b
   184a8:	bne	184d0 <main@@Base+0x2618>
   184ac:	add	r1, r9, #1
   184b0:	sub	r0, r6, r1
   184b4:	cmp	r0, #2
   184b8:	blt	18518 <main@@Base+0x2660>
   184bc:	ldrb	r0, [r1]
   184c0:	cmp	r0, #32
   184c4:	bls	18508 <main@@Base+0x2650>
   184c8:	mov	r9, r1
   184cc:	b	18528 <main@@Base+0x2670>
   184d0:	mov	r0, sl
   184d4:	mov	r1, r9
   184d8:	mov	r2, r6
   184dc:	mov	r3, #22
   184e0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   184e4:	mov	r9, r0
   184e8:	ldr	r0, [sl]
   184ec:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   184f0:	cmp	r0, #0
   184f4:	str	r0, [sp, #44]	; 0x2c
   184f8:	beq	1fc38 <main@@Base+0x9d80>
   184fc:	ldr	r0, [sl]
   18500:	mov	r1, #9
   18504:	b	19428 <main@@Base+0x3570>
   18508:	bne	18518 <main@@Base+0x2660>
   1850c:	ldrb	r0, [r9, #2]!
   18510:	cmp	r0, #32
   18514:	bhi	18528 <main@@Base+0x2670>
   18518:	mov	r0, sl
   1851c:	mov	r2, r6
   18520:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18524:	mov	r9, r0
   18528:	cmp	r9, r6
   1852c:	mov	r8, r6
   18530:	beq	18574 <main@@Base+0x26bc>
   18534:	ldrb	r0, [r9]
   18538:	cmp	r0, #93	; 0x5d
   1853c:	bne	18570 <main@@Base+0x26b8>
   18540:	add	r1, r9, #1
   18544:	sub	r0, r6, r1
   18548:	cmp	r0, #2
   1854c:	blt	18f7c <main@@Base+0x30c4>
   18550:	ldrb	r0, [r1]
   18554:	cmp	r0, #32
   18558:	bhi	18690 <main@@Base+0x27d8>
   1855c:	bne	18f7c <main@@Base+0x30c4>
   18560:	ldrb	r0, [r9, #2]!
   18564:	cmp	r0, #32
   18568:	bhi	184e8 <main@@Base+0x2630>
   1856c:	b	18f7c <main@@Base+0x30c4>
   18570:	mov	r8, r9
   18574:	ldr	r0, [sl]
   18578:	mov	r1, #1
   1857c:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   18580:	mov	r3, r0
   18584:	cmp	r0, #0
   18588:	beq	168a4 <main@@Base+0x9ec>
   1858c:	mov	r0, sl
   18590:	mov	r1, r8
   18594:	mov	r2, r6
   18598:	bl	22154 <main@@Base+0xc29c>
   1859c:	mov	r1, r0
   185a0:	sub	r0, r6, r0
   185a4:	cmp	r0, #2
   185a8:	blt	185dc <main@@Base+0x2724>
   185ac:	ldrb	r0, [r1]
   185b0:	cmp	r0, #32
   185b4:	bls	185c8 <main@@Base+0x2710>
   185b8:	mov	r8, r1
   185bc:	cmp	r8, r6
   185c0:	bne	185f4 <main@@Base+0x273c>
   185c4:	b	18664 <main@@Base+0x27ac>
   185c8:	bne	185dc <main@@Base+0x2724>
   185cc:	mov	r8, r1
   185d0:	ldrb	r0, [r8, #1]!
   185d4:	cmp	r0, #32
   185d8:	bhi	185ec <main@@Base+0x2734>
   185dc:	mov	r0, sl
   185e0:	mov	r2, r6
   185e4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   185e8:	mov	r8, r0
   185ec:	cmp	r8, r6
   185f0:	beq	18664 <main@@Base+0x27ac>
   185f4:	ldrb	r0, [r8]
   185f8:	cmp	r0, #44	; 0x2c
   185fc:	bne	1866c <main@@Base+0x27b4>
   18600:	add	r1, r8, #1
   18604:	sub	r0, r6, r1
   18608:	cmp	r0, #2
   1860c:	blt	1863c <main@@Base+0x2784>
   18610:	ldrb	r0, [r1]
   18614:	cmp	r0, #32
   18618:	bls	1862c <main@@Base+0x2774>
   1861c:	mov	r8, r1
   18620:	cmp	r8, r6
   18624:	bne	18654 <main@@Base+0x279c>
   18628:	b	18698 <main@@Base+0x27e0>
   1862c:	bne	1863c <main@@Base+0x2784>
   18630:	ldrb	r0, [r8, #2]!
   18634:	cmp	r0, #32
   18638:	bhi	1864c <main@@Base+0x2794>
   1863c:	mov	r0, sl
   18640:	mov	r2, r6
   18644:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18648:	mov	r8, r0
   1864c:	cmp	r8, r6
   18650:	beq	18698 <main@@Base+0x27e0>
   18654:	ldrb	r0, [r8]
   18658:	cmp	r0, #93	; 0x5d
   1865c:	bne	18574 <main@@Base+0x26bc>
   18660:	b	18674 <main@@Base+0x27bc>
   18664:	mov	r9, r6
   18668:	b	184e8 <main@@Base+0x2630>
   1866c:	cmp	r0, #93	; 0x5d
   18670:	bne	18b48 <main@@Base+0x2c90>
   18674:	add	r1, r8, #1
   18678:	sub	r0, r6, r1
   1867c:	cmp	r0, #2
   18680:	blt	18f7c <main@@Base+0x30c4>
   18684:	ldrb	r0, [r1]
   18688:	cmp	r0, #32
   1868c:	bls	18f68 <main@@Base+0x30b0>
   18690:	mov	r9, r1
   18694:	b	184e8 <main@@Base+0x2630>
   18698:	mov	r0, sl
   1869c:	mov	r1, r6
   186a0:	b	18b50 <main@@Base+0x2c98>
   186a4:	bne	186b4 <main@@Base+0x27fc>
   186a8:	ldrb	r0, [r8, #18]!
   186ac:	cmp	r0, #32
   186b0:	bhi	186c4 <main@@Base+0x280c>
   186b4:	mov	r0, r4
   186b8:	mov	r2, r6
   186bc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   186c0:	mov	r8, r0
   186c4:	cmp	r8, r6
   186c8:	beq	18710 <main@@Base+0x2858>
   186cc:	ldrb	r0, [r8]
   186d0:	cmp	r0, #58	; 0x3a
   186d4:	bne	18710 <main@@Base+0x2858>
   186d8:	add	r1, r8, #1
   186dc:	sub	r0, r6, r1
   186e0:	cmp	r0, #2
   186e4:	blt	198d8 <main@@Base+0x3a20>
   186e8:	ldrb	r0, [r1]
   186ec:	cmp	r0, #32
   186f0:	bls	198c8 <main@@Base+0x3a10>
   186f4:	mov	r8, r1
   186f8:	cmp	r9, r8
   186fc:	bne	198f0 <main@@Base+0x3a38>
   18700:	ldr	sl, [sp, #32]
   18704:	mov	r0, sl
   18708:	mov	r1, r9
   1870c:	b	1ea98 <main@@Base+0x8be0>
   18710:	mov	r0, r4
   18714:	mov	r1, r8
   18718:	mov	r2, r6
   1871c:	mov	r3, #4
   18720:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18724:	b	198e4 <main@@Base+0x3a2c>
   18728:	bne	1873c <main@@Base+0x2884>
   1872c:	mov	r7, r8
   18730:	ldrb	r0, [r7, #4]!
   18734:	cmp	r0, #32
   18738:	bhi	1874c <main@@Base+0x2894>
   1873c:	mov	r0, sl
   18740:	mov	r2, r6
   18744:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18748:	mov	r7, r0
   1874c:	cmp	r7, r6
   18750:	beq	1878c <main@@Base+0x28d4>
   18754:	ldrb	r0, [r7]
   18758:	cmp	r0, #58	; 0x3a
   1875c:	bne	1878c <main@@Base+0x28d4>
   18760:	add	r1, r7, #1
   18764:	sub	r0, r6, r1
   18768:	cmp	r0, #2
   1876c:	blt	19990 <main@@Base+0x3ad8>
   18770:	ldrb	r0, [r1]
   18774:	cmp	r0, #32
   18778:	bls	19980 <main@@Base+0x3ac8>
   1877c:	mov	r7, r1
   18780:	cmp	r8, r7
   18784:	bne	199a8 <main@@Base+0x3af0>
   18788:	b	193e4 <main@@Base+0x352c>
   1878c:	mov	r0, sl
   18790:	mov	r1, r7
   18794:	mov	r2, r6
   18798:	mov	r3, #4
   1879c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   187a0:	b	1999c <main@@Base+0x3ae4>
   187a4:	bne	187b8 <main@@Base+0x2900>
   187a8:	mov	r9, r8
   187ac:	ldrb	r0, [r9, #5]!
   187b0:	cmp	r0, #32
   187b4:	bhi	187c8 <main@@Base+0x2910>
   187b8:	mov	r0, sl
   187bc:	mov	r2, r6
   187c0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   187c4:	mov	r9, r0
   187c8:	cmp	r9, r6
   187cc:	beq	18808 <main@@Base+0x2950>
   187d0:	ldrb	r0, [r9]
   187d4:	cmp	r0, #58	; 0x3a
   187d8:	bne	18808 <main@@Base+0x2950>
   187dc:	add	r1, r9, #1
   187e0:	sub	r0, r6, r1
   187e4:	cmp	r0, #2
   187e8:	blt	19b10 <main@@Base+0x3c58>
   187ec:	ldrb	r0, [r1]
   187f0:	cmp	r0, #32
   187f4:	bls	19b00 <main@@Base+0x3c48>
   187f8:	mov	r9, r1
   187fc:	cmp	r8, r9
   18800:	bne	19b28 <main@@Base+0x3c70>
   18804:	b	193e4 <main@@Base+0x352c>
   18808:	mov	r0, sl
   1880c:	mov	r1, r9
   18810:	mov	r2, r6
   18814:	mov	r3, #4
   18818:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1881c:	b	19b1c <main@@Base+0x3c64>
   18820:	bne	18834 <main@@Base+0x297c>
   18824:	mov	r7, r8
   18828:	ldrb	r0, [r7, #8]!
   1882c:	cmp	r0, #32
   18830:	bhi	18844 <main@@Base+0x298c>
   18834:	mov	r0, sl
   18838:	mov	r2, r6
   1883c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18840:	mov	r7, r0
   18844:	cmp	r7, r6
   18848:	beq	18884 <main@@Base+0x29cc>
   1884c:	ldrb	r0, [r7]
   18850:	cmp	r0, #58	; 0x3a
   18854:	bne	18884 <main@@Base+0x29cc>
   18858:	add	r1, r7, #1
   1885c:	sub	r0, r6, r1
   18860:	cmp	r0, #2
   18864:	blt	1a7b4 <main@@Base+0x48fc>
   18868:	ldrb	r0, [r1]
   1886c:	cmp	r0, #32
   18870:	bls	1a7a4 <main@@Base+0x48ec>
   18874:	mov	r7, r1
   18878:	cmp	r8, r7
   1887c:	bne	1a7cc <main@@Base+0x4914>
   18880:	b	193e4 <main@@Base+0x352c>
   18884:	mov	r0, sl
   18888:	mov	r1, r7
   1888c:	mov	r2, r6
   18890:	mov	r3, #4
   18894:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18898:	b	1a7c0 <main@@Base+0x4908>
   1889c:	ldr	r4, [sp, #36]	; 0x24
   188a0:	bne	188b4 <main@@Base+0x29fc>
   188a4:	mov	r6, r8
   188a8:	ldrb	r0, [r6, #18]!
   188ac:	cmp	r0, #32
   188b0:	bhi	188c4 <main@@Base+0x2a0c>
   188b4:	mov	r0, sl
   188b8:	mov	r2, r4
   188bc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   188c0:	mov	r6, r0
   188c4:	cmp	r6, r4
   188c8:	beq	18974 <main@@Base+0x2abc>
   188cc:	ldrb	r0, [r6]
   188d0:	cmp	r0, #58	; 0x3a
   188d4:	bne	18974 <main@@Base+0x2abc>
   188d8:	ldr	r0, [sp, #36]	; 0x24
   188dc:	add	r1, r6, #1
   188e0:	sub	r0, r0, r1
   188e4:	cmp	r0, #2
   188e8:	blt	1aaec <main@@Base+0x4c34>
   188ec:	ldrb	r0, [r1]
   188f0:	cmp	r0, #32
   188f4:	bls	1aadc <main@@Base+0x4c24>
   188f8:	mov	r6, r1
   188fc:	cmp	r9, r6
   18900:	bne	1ab04 <main@@Base+0x4c4c>
   18904:	ldr	r6, [sp, #36]	; 0x24
   18908:	add	r7, r8, #16
   1890c:	mov	r1, #8
   18910:	sub	r0, r6, r7
   18914:	cmp	r0, #8
   18918:	movcc	r1, r0
   1891c:	sub	r1, r1, #1
   18920:	cmp	r1, #7
   18924:	bhi	1ea90 <main@@Base+0x8bd8>
   18928:	ldrb	r1, [r7]
   1892c:	cmp	r1, #97	; 0x61
   18930:	bne	1ea90 <main@@Base+0x8bd8>
   18934:	cmp	r0, #2
   18938:	blt	1ea90 <main@@Base+0x8bd8>
   1893c:	ldrb	r0, [r8, #17]
   18940:	cmp	r0, #34	; 0x22
   18944:	bne	1ea90 <main@@Base+0x8bd8>
   18948:	add	r1, r8, #18
   1894c:	sub	r0, r6, r1
   18950:	cmp	r0, #2
   18954:	blt	1b10c <main@@Base+0x5254>
   18958:	ldrb	r0, [r1]
   1895c:	cmp	r0, #32
   18960:	bls	1b0fc <main@@Base+0x5244>
   18964:	mov	r8, r1
   18968:	cmp	r8, r6
   1896c:	bne	1b124 <main@@Base+0x526c>
   18970:	b	1b164 <main@@Base+0x52ac>
   18974:	ldr	r2, [sp, #36]	; 0x24
   18978:	mov	r0, sl
   1897c:	mov	r1, r6
   18980:	mov	r3, #4
   18984:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18988:	b	1aaf8 <main@@Base+0x4c40>
   1898c:	bne	1899c <main@@Base+0x2ae4>
   18990:	ldrb	r0, [r1, #2]!
   18994:	cmp	r0, #32
   18998:	bhi	189b0 <main@@Base+0x2af8>
   1899c:	mov	r1, r2
   189a0:	mov	r0, sl
   189a4:	mov	r2, r6
   189a8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   189ac:	mov	r1, r0
   189b0:	cmp	r8, r1
   189b4:	beq	193e4 <main@@Base+0x352c>
   189b8:	mov	r0, sl
   189bc:	mov	r2, r6
   189c0:	add	r3, sp, #44	; 0x2c
   189c4:	bl	16864 <main@@Base+0x9ac>
   189c8:	mov	r9, r0
   189cc:	ldr	r0, [sp, #44]	; 0x2c
   189d0:	cmp	r0, #0
   189d4:	beq	1fc38 <main@@Base+0x9d80>
   189d8:	ldr	r0, [sl]
   189dc:	mov	r1, #12
   189e0:	b	19428 <main@@Base+0x3570>
   189e4:	bne	189f4 <main@@Base+0x2b3c>
   189e8:	ldrb	r0, [r7, #2]!
   189ec:	cmp	r0, #32
   189f0:	bhi	18a04 <main@@Base+0x2b4c>
   189f4:	mov	r0, sl
   189f8:	mov	r2, r6
   189fc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18a00:	mov	r7, r0
   18a04:	cmp	r8, r7
   18a08:	beq	193e4 <main@@Base+0x352c>
   18a0c:	mov	r4, #0
   18a10:	cmp	r7, r6
   18a14:	str	r4, [fp, #-52]	; 0xffffffcc
   18a18:	str	r4, [fp, #-56]	; 0xffffffc8
   18a1c:	strb	r4, [sp, #60]	; 0x3c
   18a20:	str	r4, [sp, #48]	; 0x30
   18a24:	beq	18a84 <main@@Base+0x2bcc>
   18a28:	sub	r0, fp, #56	; 0x38
   18a2c:	mov	r1, r7
   18a30:	mov	r2, r6
   18a34:	add	r3, sp, #48	; 0x30
   18a38:	str	r0, [sp]
   18a3c:	mov	r0, sl
   18a40:	bl	362a4 <flatcc_json_parser_integer@@Base>
   18a44:	cmp	r0, r7
   18a48:	beq	18a94 <main@@Base+0x2bdc>
   18a4c:	ldr	r2, [sp, #48]	; 0x30
   18a50:	mov	r9, r0
   18a54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18a58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   18a5c:	cmp	r2, #0
   18a60:	beq	18aa4 <main@@Base+0x2bec>
   18a64:	subs	r2, r0, #129	; 0x81
   18a68:	sbcs	r1, r1, #0
   18a6c:	bcc	18ad4 <main@@Base+0x2c1c>
   18a70:	mov	r0, sl
   18a74:	mov	r1, r9
   18a78:	mov	r2, r6
   18a7c:	mov	r3, #8
   18a80:	b	18ac0 <main@@Base+0x2c08>
   18a84:	mov	r9, r6
   18a88:	cmp	r7, r9
   18a8c:	bne	18b24 <main@@Base+0x2c6c>
   18a90:	b	18aec <main@@Base+0x2c34>
   18a94:	mov	r9, r7
   18a98:	cmp	r7, r9
   18a9c:	bne	18b24 <main@@Base+0x2c6c>
   18aa0:	b	18aec <main@@Base+0x2c34>
   18aa4:	subs	r2, r0, #128	; 0x80
   18aa8:	sbcs	r1, r1, #0
   18aac:	bcc	18adc <main@@Base+0x2c24>
   18ab0:	mov	r0, sl
   18ab4:	mov	r1, r9
   18ab8:	mov	r2, r6
   18abc:	mov	r3, #7
   18ac0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18ac4:	mov	r9, r0
   18ac8:	cmp	r7, r9
   18acc:	bne	18b24 <main@@Base+0x2c6c>
   18ad0:	b	18aec <main@@Base+0x2c34>
   18ad4:	rsb	r4, r0, #0
   18ad8:	b	18ae0 <main@@Base+0x2c28>
   18adc:	mov	r4, r0
   18ae0:	strb	r4, [sp, #60]	; 0x3c
   18ae4:	cmp	r7, r9
   18ae8:	bne	18b24 <main@@Base+0x2c6c>
   18aec:	add	r0, sp, #60	; 0x3c
   18af0:	mov	r1, r7
   18af4:	mov	r2, r6
   18af8:	str	r0, [sp]
   18afc:	mov	r0, sl
   18b00:	ldr	r3, [pc, #4084]	; 19afc <main@@Base+0x3c44>
   18b04:	add	r3, pc, r3
   18b08:	bl	21b94 <main@@Base+0xbcdc>
   18b0c:	mov	r9, r0
   18b10:	cmp	r0, r7
   18b14:	beq	1fc38 <main@@Base+0x9d80>
   18b18:	cmp	r9, r6
   18b1c:	beq	1fc38 <main@@Base+0x9d80>
   18b20:	ldrb	r4, [sp, #60]	; 0x3c
   18b24:	uxtb	r0, r4
   18b28:	cmp	r0, #8
   18b2c:	bne	18b3c <main@@Base+0x2c84>
   18b30:	ldrb	r0, [sl, #8]
   18b34:	tst	r0, #2
   18b38:	beq	1eaa4 <main@@Base+0x8bec>
   18b3c:	ldr	r0, [sl]
   18b40:	mov	r1, #6
   18b44:	b	1980c <main@@Base+0x3954>
   18b48:	mov	r0, sl
   18b4c:	mov	r1, r8
   18b50:	mov	r2, r6
   18b54:	mov	r3, #9
   18b58:	b	184e0 <main@@Base+0x2628>
   18b5c:	bne	18b6c <main@@Base+0x2cb4>
   18b60:	ldrb	r0, [r1, #2]!
   18b64:	cmp	r0, #32
   18b68:	bhi	18b80 <main@@Base+0x2cc8>
   18b6c:	mov	r1, r2
   18b70:	mov	r0, sl
   18b74:	mov	r2, r6
   18b78:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18b7c:	mov	r1, r0
   18b80:	cmp	r8, r1
   18b84:	beq	193e4 <main@@Base+0x352c>
   18b88:	mov	r0, sl
   18b8c:	mov	r2, r6
   18b90:	add	r3, sp, #44	; 0x2c
   18b94:	bl	36850 <flatcc_json_parser_build_string@@Base>
   18b98:	mov	r9, r0
   18b9c:	ldr	r0, [sp, #44]	; 0x2c
   18ba0:	cmp	r0, #0
   18ba4:	beq	1fc38 <main@@Base+0x9d80>
   18ba8:	ldr	r0, [sl]
   18bac:	mov	r1, #3
   18bb0:	b	19428 <main@@Base+0x3570>
   18bb4:	bne	18bc4 <main@@Base+0x2d0c>
   18bb8:	ldrb	r0, [r9, #2]!
   18bbc:	cmp	r0, #32
   18bc0:	bhi	18bd4 <main@@Base+0x2d1c>
   18bc4:	mov	r0, sl
   18bc8:	mov	r2, r6
   18bcc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18bd0:	mov	r9, r0
   18bd4:	cmp	r8, r9
   18bd8:	beq	193e4 <main@@Base+0x352c>
   18bdc:	ldr	r0, [sl]
   18be0:	mov	r1, #1
   18be4:	mov	r2, #1
   18be8:	mvn	r3, #0
   18bec:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   18bf0:	cmp	r0, #0
   18bf4:	bne	1fc38 <main@@Base+0x9d80>
   18bf8:	cmp	r9, r6
   18bfc:	beq	18c30 <main@@Base+0x2d78>
   18c00:	ldrb	r0, [r9]
   18c04:	cmp	r0, #91	; 0x5b
   18c08:	bne	18c30 <main@@Base+0x2d78>
   18c0c:	add	r1, r9, #1
   18c10:	sub	r0, r6, r1
   18c14:	cmp	r0, #2
   18c18:	blt	18c78 <main@@Base+0x2dc0>
   18c1c:	ldrb	r0, [r1]
   18c20:	cmp	r0, #32
   18c24:	bls	18c68 <main@@Base+0x2db0>
   18c28:	mov	r9, r1
   18c2c:	b	18c88 <main@@Base+0x2dd0>
   18c30:	mov	r0, sl
   18c34:	mov	r1, r9
   18c38:	mov	r2, r6
   18c3c:	mov	r3, #22
   18c40:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18c44:	mov	r9, r0
   18c48:	ldr	r0, [sl]
   18c4c:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   18c50:	cmp	r0, #0
   18c54:	str	r0, [sp, #44]	; 0x2c
   18c58:	beq	1fc38 <main@@Base+0x9d80>
   18c5c:	ldr	r0, [sl]
   18c60:	mov	r1, #30
   18c64:	b	19428 <main@@Base+0x3570>
   18c68:	bne	18c78 <main@@Base+0x2dc0>
   18c6c:	ldrb	r0, [r9, #2]!
   18c70:	cmp	r0, #32
   18c74:	bhi	18c88 <main@@Base+0x2dd0>
   18c78:	mov	r0, sl
   18c7c:	mov	r2, r6
   18c80:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18c84:	mov	r9, r0
   18c88:	cmp	r9, r6
   18c8c:	mov	r5, r6
   18c90:	beq	18ca4 <main@@Base+0x2dec>
   18c94:	ldrb	r0, [r9]
   18c98:	cmp	r0, #93	; 0x5d
   18c9c:	beq	18eb8 <main@@Base+0x3000>
   18ca0:	mov	r5, r9
   18ca4:	mov	r0, #0
   18ca8:	mov	r1, #1
   18cac:	strb	r0, [sp, #60]	; 0x3c
   18cb0:	ldr	r0, [sl]
   18cb4:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   18cb8:	cmp	r0, #0
   18cbc:	beq	1fc18 <main@@Base+0x9d60>
   18cc0:	mov	r4, r0
   18cc4:	mov	r9, r5
   18cc8:	mov	r5, #0
   18ccc:	cmp	r9, r6
   18cd0:	str	r5, [fp, #-52]	; 0xffffffcc
   18cd4:	str	r5, [fp, #-56]	; 0xffffffc8
   18cd8:	strb	r5, [sp, #60]	; 0x3c
   18cdc:	str	r5, [sp, #48]	; 0x30
   18ce0:	beq	18d28 <main@@Base+0x2e70>
   18ce4:	sub	r0, fp, #56	; 0x38
   18ce8:	mov	r1, r9
   18cec:	mov	r2, r6
   18cf0:	add	r3, sp, #48	; 0x30
   18cf4:	str	r0, [sp]
   18cf8:	mov	r0, sl
   18cfc:	bl	362a4 <flatcc_json_parser_integer@@Base>
   18d00:	cmp	r0, r9
   18d04:	beq	18d38 <main@@Base+0x2e80>
   18d08:	mov	r1, r0
   18d0c:	ldr	r0, [sp, #48]	; 0x30
   18d10:	cmp	r0, #0
   18d14:	beq	18d48 <main@@Base+0x2e90>
   18d18:	mov	r0, sl
   18d1c:	mov	r2, r6
   18d20:	mov	r3, #8
   18d24:	b	18d68 <main@@Base+0x2eb0>
   18d28:	mov	r1, r6
   18d2c:	cmp	r9, r1
   18d30:	bne	18dac <main@@Base+0x2ef4>
   18d34:	b	18d78 <main@@Base+0x2ec0>
   18d38:	mov	r1, r9
   18d3c:	cmp	r9, r1
   18d40:	bne	18dac <main@@Base+0x2ef4>
   18d44:	b	18d78 <main@@Base+0x2ec0>
   18d48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   18d4c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   18d50:	subs	r3, r0, #256	; 0x100
   18d54:	sbcs	r2, r2, #0
   18d58:	bcc	18e94 <main@@Base+0x2fdc>
   18d5c:	mov	r0, sl
   18d60:	mov	r2, r6
   18d64:	mov	r3, #7
   18d68:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   18d6c:	mov	r1, r0
   18d70:	cmp	r9, r1
   18d74:	bne	18dac <main@@Base+0x2ef4>
   18d78:	add	r0, sp, #60	; 0x3c
   18d7c:	mov	r1, r9
   18d80:	mov	r2, r6
   18d84:	str	r0, [sp]
   18d88:	mov	r0, sl
   18d8c:	ldr	r3, [pc, #4080]	; 19d84 <main@@Base+0x3ecc>
   18d90:	add	r3, pc, r3
   18d94:	bl	21d80 <main@@Base+0xbec8>
   18d98:	mov	r1, r0
   18d9c:	cmp	r0, r9
   18da0:	cmpne	r1, r6
   18da4:	beq	1fc58 <main@@Base+0x9da0>
   18da8:	ldrb	r5, [sp, #60]	; 0x3c
   18dac:	sub	r0, r6, r1
   18db0:	strb	r5, [r4]
   18db4:	cmp	r0, #2
   18db8:	blt	18dec <main@@Base+0x2f34>
   18dbc:	ldrb	r0, [r1]
   18dc0:	cmp	r0, #32
   18dc4:	bls	18dd8 <main@@Base+0x2f20>
   18dc8:	mov	r9, r1
   18dcc:	cmp	r9, r6
   18dd0:	bne	18e04 <main@@Base+0x2f4c>
   18dd4:	b	18ea8 <main@@Base+0x2ff0>
   18dd8:	bne	18dec <main@@Base+0x2f34>
   18ddc:	mov	r9, r1
   18de0:	ldrb	r0, [r9, #1]!
   18de4:	cmp	r0, #32
   18de8:	bhi	18dfc <main@@Base+0x2f44>
   18dec:	mov	r0, sl
   18df0:	mov	r2, r6
   18df4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18df8:	mov	r9, r0
   18dfc:	cmp	r9, r6
   18e00:	beq	18ea8 <main@@Base+0x2ff0>
   18e04:	ldrb	r0, [r9]
   18e08:	cmp	r0, #44	; 0x2c
   18e0c:	bne	18eb0 <main@@Base+0x2ff8>
   18e10:	add	r1, r9, #1
   18e14:	sub	r0, r6, r1
   18e18:	cmp	r0, #2
   18e1c:	blt	18e4c <main@@Base+0x2f94>
   18e20:	ldrb	r0, [r1]
   18e24:	cmp	r0, #32
   18e28:	bls	18e3c <main@@Base+0x2f84>
   18e2c:	mov	r9, r1
   18e30:	cmp	r9, r6
   18e34:	bne	18e64 <main@@Base+0x2fac>
   18e38:	b	18efc <main@@Base+0x3044>
   18e3c:	bne	18e4c <main@@Base+0x2f94>
   18e40:	ldrb	r0, [r9, #2]!
   18e44:	cmp	r0, #32
   18e48:	bhi	18e5c <main@@Base+0x2fa4>
   18e4c:	mov	r0, sl
   18e50:	mov	r2, r6
   18e54:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18e58:	mov	r9, r0
   18e5c:	cmp	r9, r6
   18e60:	beq	18efc <main@@Base+0x3044>
   18e64:	ldrb	r0, [r9]
   18e68:	cmp	r0, #93	; 0x5d
   18e6c:	beq	18eb8 <main@@Base+0x3000>
   18e70:	mov	r0, #0
   18e74:	mov	r1, #1
   18e78:	strb	r0, [sp, #60]	; 0x3c
   18e7c:	ldr	r0, [sl]
   18e80:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   18e84:	mov	r4, r0
   18e88:	cmp	r0, #0
   18e8c:	bne	18cc8 <main@@Base+0x2e10>
   18e90:	b	1fc38 <main@@Base+0x9d80>
   18e94:	mov	r5, r0
   18e98:	strb	r0, [sp, #60]	; 0x3c
   18e9c:	cmp	r9, r1
   18ea0:	bne	18dac <main@@Base+0x2ef4>
   18ea4:	b	18d78 <main@@Base+0x2ec0>
   18ea8:	mov	r9, r6
   18eac:	b	18c48 <main@@Base+0x2d90>
   18eb0:	cmp	r0, #93	; 0x5d
   18eb4:	bne	198b4 <main@@Base+0x39fc>
   18eb8:	add	r1, r9, #1
   18ebc:	sub	r0, r6, r1
   18ec0:	cmp	r0, #2
   18ec4:	blt	18eec <main@@Base+0x3034>
   18ec8:	ldrb	r0, [r1]
   18ecc:	cmp	r0, #32
   18ed0:	bls	18edc <main@@Base+0x3024>
   18ed4:	mov	r9, r1
   18ed8:	b	18c48 <main@@Base+0x2d90>
   18edc:	bne	18eec <main@@Base+0x3034>
   18ee0:	ldrb	r0, [r9, #2]!
   18ee4:	cmp	r0, #32
   18ee8:	bhi	18c48 <main@@Base+0x2d90>
   18eec:	mov	r0, sl
   18ef0:	mov	r2, r6
   18ef4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18ef8:	b	18c44 <main@@Base+0x2d8c>
   18efc:	mov	r0, sl
   18f00:	mov	r1, r6
   18f04:	b	198bc <main@@Base+0x3a04>
   18f08:	bne	18f18 <main@@Base+0x3060>
   18f0c:	ldrb	r0, [r1, #2]!
   18f10:	cmp	r0, #32
   18f14:	bhi	18f2c <main@@Base+0x3074>
   18f18:	ldr	r0, [sp, #32]
   18f1c:	mov	r1, r2
   18f20:	mov	r2, r6
   18f24:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18f28:	mov	r1, r0
   18f2c:	cmp	r8, r1
   18f30:	beq	1822c <main@@Base+0x2374>
   18f34:	ldr	r0, [sp, #40]	; 0x28
   18f38:	mov	r2, #8
   18f3c:	mov	r3, #0
   18f40:	str	r2, [sp]
   18f44:	mov	r2, r6
   18f48:	str	r0, [sp, #4]
   18f4c:	ldr	r0, [pc, #4080]	; 19f44 <main@@Base+0x408c>
   18f50:	ldr	sl, [sp, #32]
   18f54:	add	r0, pc, r0
   18f58:	str	r0, [sp, #8]
   18f5c:	mov	r0, sl
   18f60:	bl	36c28 <flatcc_json_parser_union@@Base>
   18f64:	b	1eaa0 <main@@Base+0x8be8>
   18f68:	bne	18f7c <main@@Base+0x30c4>
   18f6c:	ldrb	r0, [r8, #2]!
   18f70:	mov	r9, r8
   18f74:	cmp	r0, #32
   18f78:	bhi	184e8 <main@@Base+0x2630>
   18f7c:	mov	r0, sl
   18f80:	mov	r2, r6
   18f84:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18f88:	b	184e4 <main@@Base+0x262c>
   18f8c:	bne	18f9c <main@@Base+0x30e4>
   18f90:	ldrb	r0, [r8, #12]!
   18f94:	cmp	r0, #32
   18f98:	bhi	18fac <main@@Base+0x30f4>
   18f9c:	mov	r0, sl
   18fa0:	mov	r2, r6
   18fa4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   18fa8:	mov	r8, r0
   18fac:	cmp	r8, r6
   18fb0:	beq	18fec <main@@Base+0x3134>
   18fb4:	ldrb	r0, [r8]
   18fb8:	cmp	r0, #58	; 0x3a
   18fbc:	bne	18fec <main@@Base+0x3134>
   18fc0:	add	r1, r8, #1
   18fc4:	sub	r0, r6, r1
   18fc8:	cmp	r0, #2
   18fcc:	blt	1b18c <main@@Base+0x52d4>
   18fd0:	ldrb	r0, [r1]
   18fd4:	cmp	r0, #32
   18fd8:	bls	1b17c <main@@Base+0x52c4>
   18fdc:	mov	r8, r1
   18fe0:	cmp	r7, r8
   18fe4:	bne	1b1a4 <main@@Base+0x52ec>
   18fe8:	b	1ea90 <main@@Base+0x8bd8>
   18fec:	mov	r0, sl
   18ff0:	mov	r1, r8
   18ff4:	mov	r2, r6
   18ff8:	mov	r3, #4
   18ffc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19000:	b	1b198 <main@@Base+0x52e0>
   19004:	bne	19014 <main@@Base+0x315c>
   19008:	ldrb	r0, [r8, #20]!
   1900c:	cmp	r0, #32
   19010:	bhi	19024 <main@@Base+0x316c>
   19014:	mov	r0, sl
   19018:	mov	r2, r6
   1901c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19020:	mov	r8, r0
   19024:	cmp	r8, r6
   19028:	beq	19064 <main@@Base+0x31ac>
   1902c:	ldrb	r0, [r8]
   19030:	cmp	r0, #58	; 0x3a
   19034:	bne	19064 <main@@Base+0x31ac>
   19038:	add	r1, r8, #1
   1903c:	sub	r0, r6, r1
   19040:	cmp	r0, #2
   19044:	blt	1b294 <main@@Base+0x53dc>
   19048:	ldrb	r0, [r1]
   1904c:	cmp	r0, #32
   19050:	bls	1b284 <main@@Base+0x53cc>
   19054:	mov	r8, r1
   19058:	cmp	r7, r8
   1905c:	bne	1b2ac <main@@Base+0x53f4>
   19060:	b	1ea90 <main@@Base+0x8bd8>
   19064:	mov	r0, sl
   19068:	mov	r1, r8
   1906c:	mov	r2, r6
   19070:	mov	r3, #4
   19074:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19078:	b	1b2a0 <main@@Base+0x53e8>
   1907c:	bne	1908c <main@@Base+0x31d4>
   19080:	ldrb	r0, [r8, #25]!
   19084:	cmp	r0, #32
   19088:	bhi	1909c <main@@Base+0x31e4>
   1908c:	mov	r0, sl
   19090:	mov	r2, r6
   19094:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19098:	mov	r8, r0
   1909c:	cmp	r8, r6
   190a0:	beq	190dc <main@@Base+0x3224>
   190a4:	ldrb	r0, [r8]
   190a8:	cmp	r0, #58	; 0x3a
   190ac:	bne	190dc <main@@Base+0x3224>
   190b0:	add	r1, r8, #1
   190b4:	sub	r0, r6, r1
   190b8:	cmp	r0, #2
   190bc:	blt	1b340 <main@@Base+0x5488>
   190c0:	ldrb	r0, [r1]
   190c4:	cmp	r0, #32
   190c8:	bls	1b330 <main@@Base+0x5478>
   190cc:	mov	r8, r1
   190d0:	cmp	r9, r8
   190d4:	bne	1b358 <main@@Base+0x54a0>
   190d8:	b	18704 <main@@Base+0x284c>
   190dc:	mov	r0, sl
   190e0:	mov	r1, r8
   190e4:	mov	r2, r6
   190e8:	mov	r3, #4
   190ec:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   190f0:	b	1b34c <main@@Base+0x5494>
   190f4:	bne	19108 <main@@Base+0x3250>
   190f8:	mov	r7, r8
   190fc:	ldrb	r0, [r7, #6]!
   19100:	cmp	r0, #32
   19104:	bhi	19118 <main@@Base+0x3260>
   19108:	mov	r0, sl
   1910c:	mov	r2, r6
   19110:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19114:	mov	r7, r0
   19118:	cmp	r7, r6
   1911c:	beq	19158 <main@@Base+0x32a0>
   19120:	ldrb	r0, [r7]
   19124:	cmp	r0, #58	; 0x3a
   19128:	bne	19158 <main@@Base+0x32a0>
   1912c:	add	r1, r7, #1
   19130:	sub	r0, r6, r1
   19134:	cmp	r0, #2
   19138:	blt	1b464 <main@@Base+0x55ac>
   1913c:	ldrb	r0, [r1]
   19140:	cmp	r0, #32
   19144:	bls	1b454 <main@@Base+0x559c>
   19148:	mov	r7, r1
   1914c:	cmp	r8, r7
   19150:	bne	1b47c <main@@Base+0x55c4>
   19154:	b	193e4 <main@@Base+0x352c>
   19158:	mov	r0, sl
   1915c:	mov	r1, r7
   19160:	mov	r2, r6
   19164:	mov	r3, #4
   19168:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1916c:	b	1b470 <main@@Base+0x55b8>
   19170:	bne	19184 <main@@Base+0x32cc>
   19174:	mov	r7, r8
   19178:	ldrb	r0, [r7, #7]!
   1917c:	cmp	r0, #32
   19180:	bhi	19194 <main@@Base+0x32dc>
   19184:	mov	r0, sl
   19188:	mov	r2, r6
   1918c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19190:	mov	r7, r0
   19194:	cmp	r7, r6
   19198:	beq	191d4 <main@@Base+0x331c>
   1919c:	ldrb	r0, [r7]
   191a0:	cmp	r0, #58	; 0x3a
   191a4:	bne	191d4 <main@@Base+0x331c>
   191a8:	add	r1, r7, #1
   191ac:	sub	r0, r6, r1
   191b0:	cmp	r0, #2
   191b4:	blt	1b5e8 <main@@Base+0x5730>
   191b8:	ldrb	r0, [r1]
   191bc:	cmp	r0, #32
   191c0:	bls	1b5d8 <main@@Base+0x5720>
   191c4:	mov	r7, r1
   191c8:	cmp	r8, r7
   191cc:	bne	1b600 <main@@Base+0x5748>
   191d0:	b	193e4 <main@@Base+0x352c>
   191d4:	mov	r0, sl
   191d8:	mov	r1, r7
   191dc:	mov	r2, r6
   191e0:	mov	r3, #4
   191e4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   191e8:	b	1b5f4 <main@@Base+0x573c>
   191ec:	ldr	r4, [sp, #36]	; 0x24
   191f0:	bne	19204 <main@@Base+0x334c>
   191f4:	mov	r6, r8
   191f8:	ldrb	r0, [r6, #18]!
   191fc:	cmp	r0, #32
   19200:	bhi	19214 <main@@Base+0x335c>
   19204:	mov	r0, sl
   19208:	mov	r2, r4
   1920c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19210:	mov	r6, r0
   19214:	cmp	r6, r4
   19218:	beq	192c4 <main@@Base+0x340c>
   1921c:	ldrb	r0, [r6]
   19220:	cmp	r0, #58	; 0x3a
   19224:	bne	192c4 <main@@Base+0x340c>
   19228:	ldr	r0, [sp, #36]	; 0x24
   1922c:	add	r1, r6, #1
   19230:	sub	r0, r0, r1
   19234:	cmp	r0, #2
   19238:	blt	1b690 <main@@Base+0x57d8>
   1923c:	ldrb	r0, [r1]
   19240:	cmp	r0, #32
   19244:	bls	1b680 <main@@Base+0x57c8>
   19248:	mov	r6, r1
   1924c:	cmp	r9, r6
   19250:	bne	1b6a8 <main@@Base+0x57f0>
   19254:	ldr	r6, [sp, #36]	; 0x24
   19258:	add	r7, r8, #16
   1925c:	mov	r1, #8
   19260:	sub	r0, r6, r7
   19264:	cmp	r0, #8
   19268:	movcc	r1, r0
   1926c:	sub	r1, r1, #1
   19270:	cmp	r1, #7
   19274:	bhi	1ea90 <main@@Base+0x8bd8>
   19278:	ldrb	r1, [r7]
   1927c:	cmp	r1, #97	; 0x61
   19280:	bne	1ea90 <main@@Base+0x8bd8>
   19284:	cmp	r0, #2
   19288:	blt	1ea90 <main@@Base+0x8bd8>
   1928c:	ldrb	r0, [r8, #17]
   19290:	cmp	r0, #34	; 0x22
   19294:	bne	1ea90 <main@@Base+0x8bd8>
   19298:	add	r1, r8, #18
   1929c:	sub	r0, r6, r1
   192a0:	cmp	r0, #2
   192a4:	blt	1c514 <main@@Base+0x665c>
   192a8:	ldrb	r0, [r1]
   192ac:	cmp	r0, #32
   192b0:	bls	1c504 <main@@Base+0x664c>
   192b4:	mov	r8, r1
   192b8:	cmp	r8, r6
   192bc:	bne	1c52c <main@@Base+0x6674>
   192c0:	b	1c570 <main@@Base+0x66b8>
   192c4:	ldr	r2, [sp, #36]	; 0x24
   192c8:	mov	r0, sl
   192cc:	mov	r1, r6
   192d0:	mov	r3, #4
   192d4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   192d8:	b	1b69c <main@@Base+0x57e4>
   192dc:	bne	192ec <main@@Base+0x3434>
   192e0:	ldrb	r0, [r9, #2]!
   192e4:	cmp	r0, #32
   192e8:	bhi	192fc <main@@Base+0x3444>
   192ec:	ldr	r0, [sp, #32]
   192f0:	mov	r2, r6
   192f4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   192f8:	mov	r9, r0
   192fc:	cmp	r8, r9
   19300:	beq	1935c <main@@Base+0x34a4>
   19304:	ldr	sl, [sp, #32]
   19308:	mov	r1, #4
   1930c:	mov	r2, #2
   19310:	mvn	r3, #-1073741824	; 0xc0000000
   19314:	ldr	r0, [sl]
   19318:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   1931c:	cmp	r0, #0
   19320:	bne	1fc38 <main@@Base+0x9d80>
   19324:	cmp	r9, r6
   19328:	beq	193f4 <main@@Base+0x353c>
   1932c:	ldrb	r0, [r9]
   19330:	cmp	r0, #91	; 0x5b
   19334:	bne	193f4 <main@@Base+0x353c>
   19338:	add	r1, r9, #1
   1933c:	sub	r0, r6, r1
   19340:	cmp	r0, #2
   19344:	blt	19450 <main@@Base+0x3598>
   19348:	ldrb	r0, [r1]
   1934c:	cmp	r0, #32
   19350:	bls	19440 <main@@Base+0x3588>
   19354:	mov	r9, r1
   19358:	b	19460 <main@@Base+0x35a8>
   1935c:	movw	r0, #31088	; 0x7970
   19360:	movt	r0, #24436	; 0x5f74
   19364:	eor	r0, sl, r0
   19368:	orrs	r0, r0, r7
   1936c:	bne	193e0 <main@@Base+0x3528>
   19370:	add	r7, r8, #8
   19374:	ldr	sl, [sp, #32]
   19378:	mov	r1, #8
   1937c:	sub	r0, r6, r7
   19380:	cmp	r0, #8
   19384:	movcc	r1, r0
   19388:	sub	r1, r1, #1
   1938c:	cmp	r1, #7
   19390:	bhi	1ea90 <main@@Base+0x8bd8>
   19394:	ldrb	r1, [r7]
   19398:	cmp	r1, #101	; 0x65
   1939c:	bne	1ea90 <main@@Base+0x8bd8>
   193a0:	cmp	r0, #2
   193a4:	blt	1ea90 <main@@Base+0x8bd8>
   193a8:	ldrb	r0, [r8, #9]
   193ac:	cmp	r0, #34	; 0x22
   193b0:	bne	1ea90 <main@@Base+0x8bd8>
   193b4:	add	r1, r8, #10
   193b8:	sub	r0, r6, r1
   193bc:	cmp	r0, #2
   193c0:	blt	19614 <main@@Base+0x375c>
   193c4:	ldrb	r0, [r1]
   193c8:	cmp	r0, #32
   193cc:	bls	19604 <main@@Base+0x374c>
   193d0:	mov	r8, r1
   193d4:	cmp	r8, r6
   193d8:	bne	1962c <main@@Base+0x3774>
   193dc:	b	19664 <main@@Base+0x37ac>
   193e0:	ldr	sl, [sp, #32]
   193e4:	mov	r0, sl
   193e8:	mov	r1, r8
   193ec:	b	1ea98 <main@@Base+0x8be0>
   193f0:	andeq	r3, r4, r0, lsl sp
   193f4:	mov	r0, sl
   193f8:	mov	r1, r9
   193fc:	mov	r2, r6
   19400:	mov	r3, #22
   19404:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19408:	mov	r9, r0
   1940c:	ldr	r0, [sl]
   19410:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   19414:	cmp	r0, #0
   19418:	str	r0, [sp, #44]	; 0x2c
   1941c:	beq	1fc38 <main@@Base+0x9d80>
   19420:	ldr	r0, [sl]
   19424:	mov	r1, #31
   19428:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   1942c:	cmp	r0, #0
   19430:	beq	1fc38 <main@@Base+0x9d80>
   19434:	ldr	r1, [sp, #44]	; 0x2c
   19438:	str	r1, [r0]
   1943c:	b	1eaa4 <main@@Base+0x8bec>
   19440:	bne	19450 <main@@Base+0x3598>
   19444:	ldrb	r0, [r9, #2]!
   19448:	cmp	r0, #32
   1944c:	bhi	19460 <main@@Base+0x35a8>
   19450:	mov	r0, sl
   19454:	mov	r2, r6
   19458:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1945c:	mov	r9, r0
   19460:	cmp	r9, r6
   19464:	mov	r8, r6
   19468:	beq	194ac <main@@Base+0x35f4>
   1946c:	ldrb	r0, [r9]
   19470:	cmp	r0, #93	; 0x5d
   19474:	bne	194a8 <main@@Base+0x35f0>
   19478:	add	r1, r9, #1
   1947c:	sub	r0, r6, r1
   19480:	cmp	r0, #2
   19484:	blt	1cb84 <main@@Base+0x6ccc>
   19488:	ldrb	r0, [r1]
   1948c:	cmp	r0, #32
   19490:	bhi	195b4 <main@@Base+0x36fc>
   19494:	bne	1cb84 <main@@Base+0x6ccc>
   19498:	ldrb	r0, [r9, #2]!
   1949c:	cmp	r0, #32
   194a0:	bhi	1940c <main@@Base+0x3554>
   194a4:	b	1cb84 <main@@Base+0x6ccc>
   194a8:	mov	r8, r9
   194ac:	ldr	r0, [sl]
   194b0:	mov	r1, #1
   194b4:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   194b8:	mov	r3, r0
   194bc:	cmp	r0, #0
   194c0:	beq	168a4 <main@@Base+0x9ec>
   194c4:	mov	r0, sl
   194c8:	mov	r1, r8
   194cc:	mov	r2, r6
   194d0:	bl	22154 <main@@Base+0xc29c>
   194d4:	mov	r1, r0
   194d8:	sub	r0, r6, r0
   194dc:	cmp	r0, #2
   194e0:	blt	19514 <main@@Base+0x365c>
   194e4:	ldrb	r0, [r1]
   194e8:	cmp	r0, #32
   194ec:	bls	19500 <main@@Base+0x3648>
   194f0:	mov	r8, r1
   194f4:	cmp	r8, r6
   194f8:	bne	1952c <main@@Base+0x3674>
   194fc:	b	195bc <main@@Base+0x3704>
   19500:	bne	19514 <main@@Base+0x365c>
   19504:	mov	r8, r1
   19508:	ldrb	r0, [r8, #1]!
   1950c:	cmp	r0, #32
   19510:	bhi	19524 <main@@Base+0x366c>
   19514:	mov	r0, sl
   19518:	mov	r2, r6
   1951c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19520:	mov	r8, r0
   19524:	cmp	r8, r6
   19528:	beq	195bc <main@@Base+0x3704>
   1952c:	ldrb	r0, [r8]
   19530:	cmp	r0, #44	; 0x2c
   19534:	bne	195c4 <main@@Base+0x370c>
   19538:	add	r1, r8, #1
   1953c:	sub	r0, r6, r1
   19540:	cmp	r0, #2
   19544:	blt	19574 <main@@Base+0x36bc>
   19548:	ldrb	r0, [r1]
   1954c:	cmp	r0, #32
   19550:	bls	19564 <main@@Base+0x36ac>
   19554:	mov	r8, r1
   19558:	cmp	r8, r6
   1955c:	bne	1958c <main@@Base+0x36d4>
   19560:	b	195f8 <main@@Base+0x3740>
   19564:	bne	19574 <main@@Base+0x36bc>
   19568:	ldrb	r0, [r8, #2]!
   1956c:	cmp	r0, #32
   19570:	bhi	19584 <main@@Base+0x36cc>
   19574:	mov	r0, sl
   19578:	mov	r2, r6
   1957c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19580:	mov	r8, r0
   19584:	cmp	r8, r6
   19588:	beq	195f8 <main@@Base+0x3740>
   1958c:	ldrb	r0, [r8]
   19590:	cmp	r0, #93	; 0x5d
   19594:	bne	194ac <main@@Base+0x35f4>
   19598:	add	r1, r8, #1
   1959c:	sub	r0, r6, r1
   195a0:	cmp	r0, #2
   195a4:	blt	1cb84 <main@@Base+0x6ccc>
   195a8:	ldrb	r0, [r1]
   195ac:	cmp	r0, #32
   195b0:	bls	1b7fc <main@@Base+0x5944>
   195b4:	mov	r9, r1
   195b8:	b	1940c <main@@Base+0x3554>
   195bc:	mov	r9, r6
   195c0:	b	1940c <main@@Base+0x3554>
   195c4:	cmp	r0, #93	; 0x5d
   195c8:	bne	1aac8 <main@@Base+0x4c10>
   195cc:	add	r1, r8, #1
   195d0:	sub	r0, r6, r1
   195d4:	cmp	r0, #2
   195d8:	blt	1cb84 <main@@Base+0x6ccc>
   195dc:	ldrb	r0, [r1]
   195e0:	cmp	r0, #32
   195e4:	bls	1cb68 <main@@Base+0x6cb0>
   195e8:	ldr	r6, [sp, #36]	; 0x24
   195ec:	ldr	sl, [sp, #32]
   195f0:	mov	r9, r1
   195f4:	b	1940c <main@@Base+0x3554>
   195f8:	mov	r0, sl
   195fc:	mov	r1, r6
   19600:	b	1aad0 <main@@Base+0x4c18>
   19604:	bne	19614 <main@@Base+0x375c>
   19608:	ldrb	r0, [r8, #11]!
   1960c:	cmp	r0, #32
   19610:	bhi	19624 <main@@Base+0x376c>
   19614:	mov	r0, sl
   19618:	mov	r2, r6
   1961c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19620:	mov	r8, r0
   19624:	cmp	r8, r6
   19628:	beq	19664 <main@@Base+0x37ac>
   1962c:	ldrb	r0, [r8]
   19630:	cmp	r0, #58	; 0x3a
   19634:	bne	19664 <main@@Base+0x37ac>
   19638:	add	r1, r8, #1
   1963c:	sub	r0, r6, r1
   19640:	cmp	r0, #2
   19644:	blt	1b818 <main@@Base+0x5960>
   19648:	ldrb	r0, [r1]
   1964c:	cmp	r0, #32
   19650:	bls	1b808 <main@@Base+0x5950>
   19654:	mov	r8, r1
   19658:	cmp	r7, r8
   1965c:	bne	1b830 <main@@Base+0x5978>
   19660:	b	1ea90 <main@@Base+0x8bd8>
   19664:	mov	r0, sl
   19668:	mov	r1, r8
   1966c:	mov	r2, r6
   19670:	mov	r3, #4
   19674:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19678:	b	1b824 <main@@Base+0x596c>
   1967c:	bne	1968c <main@@Base+0x37d4>
   19680:	ldrb	r0, [r7, #2]!
   19684:	cmp	r0, #32
   19688:	bhi	1969c <main@@Base+0x37e4>
   1968c:	mov	r0, sl
   19690:	mov	r2, r6
   19694:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19698:	mov	r7, r0
   1969c:	cmp	r8, r7
   196a0:	beq	193e4 <main@@Base+0x352c>
   196a4:	sub	r4, r6, r7
   196a8:	mov	r0, #0
   196ac:	cmp	r4, #4
   196b0:	strb	r0, [sp, #60]	; 0x3c
   196b4:	blt	196f8 <main@@Base+0x3840>
   196b8:	ldr	r1, [pc, #4008]	; 1a668 <main@@Base+0x47b0>
   196bc:	mov	r0, r7
   196c0:	mov	r2, #4
   196c4:	add	r1, pc, r1
   196c8:	bl	14eb4 <bcmp@plt>
   196cc:	cmp	r0, #0
   196d0:	beq	19760 <main@@Base+0x38a8>
   196d4:	cmp	r4, #5
   196d8:	blt	196f8 <main@@Base+0x3840>
   196dc:	ldr	r1, [pc, #4076]	; 1a6d0 <main@@Base+0x4818>
   196e0:	mov	r0, r7
   196e4:	mov	r2, #5
   196e8:	add	r1, pc, r1
   196ec:	bl	14eb4 <bcmp@plt>
   196f0:	cmp	r0, #0
   196f4:	beq	19828 <main@@Base+0x3970>
   196f8:	mov	r4, #0
   196fc:	cmp	r7, r6
   19700:	str	r4, [fp, #-52]	; 0xffffffcc
   19704:	str	r4, [fp, #-56]	; 0xffffffc8
   19708:	str	r4, [sp, #48]	; 0x30
   1970c:	beq	19758 <main@@Base+0x38a0>
   19710:	sub	r0, fp, #56	; 0x38
   19714:	mov	r1, r7
   19718:	mov	r2, r6
   1971c:	add	r3, sp, #48	; 0x30
   19720:	str	r0, [sp]
   19724:	mov	r0, sl
   19728:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1972c:	cmp	r0, r7
   19730:	beq	1976c <main@@Base+0x38b4>
   19734:	mov	r9, r0
   19738:	ldr	r0, [sp, #48]	; 0x30
   1973c:	cmp	r0, #0
   19740:	beq	19774 <main@@Base+0x38bc>
   19744:	mov	r0, sl
   19748:	mov	r1, r9
   1974c:	mov	r2, r6
   19750:	mov	r3, #8
   19754:	b	19798 <main@@Base+0x38e0>
   19758:	mov	r9, r6
   1975c:	b	197a0 <main@@Base+0x38e8>
   19760:	mov	r4, #1
   19764:	add	r9, r7, #4
   19768:	b	197ac <main@@Base+0x38f4>
   1976c:	mov	r9, r7
   19770:	b	197a0 <main@@Base+0x38e8>
   19774:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19778:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1977c:	subs	r2, r0, #256	; 0x100
   19780:	sbcs	r1, r1, #0
   19784:	bcc	19834 <main@@Base+0x397c>
   19788:	mov	r0, sl
   1978c:	mov	r1, r9
   19790:	mov	r2, r6
   19794:	mov	r3, #7
   19798:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1979c:	mov	r9, r0
   197a0:	uxtb	r4, r4
   197a4:	cmp	r4, #0
   197a8:	movwne	r4, #1
   197ac:	strb	r4, [sp, #60]	; 0x3c
   197b0:	cmp	r7, r9
   197b4:	bne	197f0 <main@@Base+0x3938>
   197b8:	add	r0, sp, #60	; 0x3c
   197bc:	mov	r1, r7
   197c0:	mov	r2, r6
   197c4:	str	r0, [sp]
   197c8:	mov	r0, sl
   197cc:	ldr	r3, [pc, #4044]	; 1a7a0 <main@@Base+0x48e8>
   197d0:	add	r3, pc, r3
   197d4:	bl	23c18 <main@@Base+0xdd60>
   197d8:	mov	r9, r0
   197dc:	cmp	r0, r7
   197e0:	beq	1fc38 <main@@Base+0x9d80>
   197e4:	cmp	r9, r6
   197e8:	beq	1fc38 <main@@Base+0x9d80>
   197ec:	ldrb	r4, [sp, #60]	; 0x3c
   197f0:	cmp	r4, #1
   197f4:	bne	19804 <main@@Base+0x394c>
   197f8:	ldrb	r0, [sl, #8]
   197fc:	tst	r0, #2
   19800:	beq	1eaa4 <main@@Base+0x8bec>
   19804:	ldr	r0, [sl]
   19808:	mov	r1, #15
   1980c:	mov	r2, #1
   19810:	mov	r3, #1
   19814:	bl	3063c <flatcc_builder_table_add@@Base>
   19818:	cmp	r0, #0
   1981c:	beq	1fc38 <main@@Base+0x9d80>
   19820:	strb	r4, [r0]
   19824:	b	1eaa4 <main@@Base+0x8bec>
   19828:	mov	r4, #0
   1982c:	add	r9, r7, #5
   19830:	b	197ac <main@@Base+0x38f4>
   19834:	mov	r4, r0
   19838:	b	197a0 <main@@Base+0x38e8>
   1983c:	bne	1984c <main@@Base+0x3994>
   19840:	ldrb	r0, [r8, #23]!
   19844:	cmp	r0, #32
   19848:	bhi	1985c <main@@Base+0x39a4>
   1984c:	mov	r0, sl
   19850:	mov	r2, r6
   19854:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19858:	mov	r8, r0
   1985c:	cmp	r8, r6
   19860:	beq	1989c <main@@Base+0x39e4>
   19864:	ldrb	r0, [r8]
   19868:	cmp	r0, #58	; 0x3a
   1986c:	bne	1989c <main@@Base+0x39e4>
   19870:	add	r1, r8, #1
   19874:	sub	r0, r6, r1
   19878:	cmp	r0, #2
   1987c:	blt	1b880 <main@@Base+0x59c8>
   19880:	ldrb	r0, [r1]
   19884:	cmp	r0, #32
   19888:	bls	1b870 <main@@Base+0x59b8>
   1988c:	mov	r8, r1
   19890:	cmp	r9, r8
   19894:	bne	1b898 <main@@Base+0x59e0>
   19898:	b	18704 <main@@Base+0x284c>
   1989c:	mov	r0, sl
   198a0:	mov	r1, r8
   198a4:	mov	r2, r6
   198a8:	mov	r3, #4
   198ac:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   198b0:	b	1b88c <main@@Base+0x59d4>
   198b4:	mov	r0, sl
   198b8:	mov	r1, r9
   198bc:	mov	r2, r6
   198c0:	mov	r3, #9
   198c4:	b	18c40 <main@@Base+0x2d88>
   198c8:	bne	198d8 <main@@Base+0x3a20>
   198cc:	ldrb	r0, [r8, #2]!
   198d0:	cmp	r0, #32
   198d4:	bhi	198e8 <main@@Base+0x3a30>
   198d8:	mov	r0, r4
   198dc:	mov	r2, r6
   198e0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   198e4:	mov	r8, r0
   198e8:	cmp	r9, r8
   198ec:	beq	18700 <main@@Base+0x2848>
   198f0:	ldr	sl, [sp, #32]
   198f4:	mov	r1, #1
   198f8:	mov	r2, #1
   198fc:	mvn	r3, #0
   19900:	ldr	r0, [sl]
   19904:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   19908:	cmp	r0, #0
   1990c:	bne	168a4 <main@@Base+0x9ec>
   19910:	cmp	r8, r6
   19914:	beq	19948 <main@@Base+0x3a90>
   19918:	ldrb	r0, [r8]
   1991c:	cmp	r0, #91	; 0x5b
   19920:	bne	19948 <main@@Base+0x3a90>
   19924:	add	r1, r8, #1
   19928:	sub	r0, r6, r1
   1992c:	cmp	r0, #2
   19930:	blt	1ad64 <main@@Base+0x4eac>
   19934:	ldrb	r0, [r1]
   19938:	cmp	r0, #32
   1993c:	bls	1ad54 <main@@Base+0x4e9c>
   19940:	mov	r8, r1
   19944:	b	1ad74 <main@@Base+0x4ebc>
   19948:	mov	r0, sl
   1994c:	mov	r1, r8
   19950:	mov	r2, r6
   19954:	mov	r3, #22
   19958:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1995c:	mov	r8, r0
   19960:	ldr	r0, [sl]
   19964:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   19968:	cmp	r0, #0
   1996c:	str	r0, [sp, #44]	; 0x2c
   19970:	beq	168a4 <main@@Base+0x9ec>
   19974:	ldr	r0, [sl]
   19978:	mov	r1, #24
   1997c:	b	1f78c <main@@Base+0x98d4>
   19980:	bne	19990 <main@@Base+0x3ad8>
   19984:	ldrb	r0, [r7, #2]!
   19988:	cmp	r0, #32
   1998c:	bhi	199a0 <main@@Base+0x3ae8>
   19990:	mov	r0, sl
   19994:	mov	r2, r6
   19998:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1999c:	mov	r7, r0
   199a0:	cmp	r8, r7
   199a4:	beq	193e4 <main@@Base+0x352c>
   199a8:	mov	r4, #0
   199ac:	cmp	r7, r6
   199b0:	str	r4, [fp, #-52]	; 0xffffffcc
   199b4:	str	r4, [fp, #-56]	; 0xffffffc8
   199b8:	strh	r4, [sp, #60]	; 0x3c
   199bc:	str	r4, [sp, #48]	; 0x30
   199c0:	beq	19a24 <main@@Base+0x3b6c>
   199c4:	sub	r0, fp, #56	; 0x38
   199c8:	mov	r1, r7
   199cc:	mov	r2, r6
   199d0:	add	r3, sp, #48	; 0x30
   199d4:	str	r0, [sp]
   199d8:	mov	r0, sl
   199dc:	bl	362a4 <flatcc_json_parser_integer@@Base>
   199e0:	cmp	r0, r7
   199e4:	beq	19a34 <main@@Base+0x3b7c>
   199e8:	ldr	r2, [sp, #48]	; 0x30
   199ec:	mov	r9, r0
   199f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   199f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   199f8:	cmp	r2, #0
   199fc:	beq	19a44 <main@@Base+0x3b8c>
   19a00:	movw	r2, #32769	; 0x8001
   19a04:	subs	r2, r0, r2
   19a08:	sbcs	r1, r1, #0
   19a0c:	bcc	19a74 <main@@Base+0x3bbc>
   19a10:	mov	r0, sl
   19a14:	mov	r1, r9
   19a18:	mov	r2, r6
   19a1c:	mov	r3, #8
   19a20:	b	19a60 <main@@Base+0x3ba8>
   19a24:	mov	r9, r6
   19a28:	cmp	r7, r9
   19a2c:	bne	19ac4 <main@@Base+0x3c0c>
   19a30:	b	19a8c <main@@Base+0x3bd4>
   19a34:	mov	r9, r7
   19a38:	cmp	r7, r9
   19a3c:	bne	19ac4 <main@@Base+0x3c0c>
   19a40:	b	19a8c <main@@Base+0x3bd4>
   19a44:	subs	r2, r0, #32768	; 0x8000
   19a48:	sbcs	r1, r1, #0
   19a4c:	bcc	19a7c <main@@Base+0x3bc4>
   19a50:	mov	r0, sl
   19a54:	mov	r1, r9
   19a58:	mov	r2, r6
   19a5c:	mov	r3, #7
   19a60:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19a64:	mov	r9, r0
   19a68:	cmp	r7, r9
   19a6c:	bne	19ac4 <main@@Base+0x3c0c>
   19a70:	b	19a8c <main@@Base+0x3bd4>
   19a74:	rsb	r4, r0, #0
   19a78:	b	19a80 <main@@Base+0x3bc8>
   19a7c:	mov	r4, r0
   19a80:	strh	r4, [sp, #60]	; 0x3c
   19a84:	cmp	r7, r9
   19a88:	bne	19ac4 <main@@Base+0x3c0c>
   19a8c:	add	r0, sp, #60	; 0x3c
   19a90:	mov	r1, r7
   19a94:	mov	r2, r6
   19a98:	str	r0, [sp]
   19a9c:	mov	r0, sl
   19aa0:	ldr	r3, [pc, #3872]	; 1a9c8 <main@@Base+0x4b10>
   19aa4:	add	r3, pc, r3
   19aa8:	bl	21f64 <main@@Base+0xc0ac>
   19aac:	mov	r9, r0
   19ab0:	cmp	r0, r7
   19ab4:	beq	1fc38 <main@@Base+0x9d80>
   19ab8:	cmp	r9, r6
   19abc:	beq	1fc38 <main@@Base+0x9d80>
   19ac0:	ldrh	r4, [sp, #60]	; 0x3c
   19ac4:	uxth	r0, r4
   19ac8:	cmp	r0, #100	; 0x64
   19acc:	bne	19adc <main@@Base+0x3c24>
   19ad0:	ldrb	r0, [sl, #8]
   19ad4:	tst	r0, #2
   19ad8:	beq	1eaa4 <main@@Base+0x8bec>
   19adc:	ldr	r0, [sl]
   19ae0:	mov	r1, #2
   19ae4:	mov	r2, #2
   19ae8:	mov	r3, #2
   19aec:	bl	3063c <flatcc_builder_table_add@@Base>
   19af0:	cmp	r0, #0
   19af4:	bne	1b5cc <main@@Base+0x5714>
   19af8:	b	1fc38 <main@@Base+0x9d80>
   19afc:	andeq	r3, r4, r0, lsl #11
   19b00:	bne	19b10 <main@@Base+0x3c58>
   19b04:	ldrb	r0, [r9, #2]!
   19b08:	cmp	r0, #32
   19b0c:	bhi	19b20 <main@@Base+0x3c68>
   19b10:	mov	r0, sl
   19b14:	mov	r2, r6
   19b18:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19b1c:	mov	r9, r0
   19b20:	cmp	r8, r9
   19b24:	beq	193e4 <main@@Base+0x352c>
   19b28:	ldr	r0, [sl]
   19b2c:	mov	r1, #0
   19b30:	mov	r2, #32
   19b34:	mov	r3, #16
   19b38:	bl	3063c <flatcc_builder_table_add@@Base>
   19b3c:	cmp	r0, #0
   19b40:	beq	1fc90 <main@@Base+0x9dd8>
   19b44:	cmp	r9, r6
   19b48:	beq	19b80 <main@@Base+0x3cc8>
   19b4c:	mov	sl, r0
   19b50:	ldrb	r0, [r9]
   19b54:	cmp	r0, #123	; 0x7b
   19b58:	bne	19b80 <main@@Base+0x3cc8>
   19b5c:	add	r1, r9, #1
   19b60:	sub	r0, r6, r1
   19b64:	cmp	r0, #2
   19b68:	blt	19bac <main@@Base+0x3cf4>
   19b6c:	ldrb	r0, [r1]
   19b70:	cmp	r0, #32
   19b74:	bls	19b9c <main@@Base+0x3ce4>
   19b78:	mov	r9, r1
   19b7c:	b	19bbc <main@@Base+0x3d04>
   19b80:	ldr	sl, [sp, #32]
   19b84:	mov	r1, r9
   19b88:	mov	r2, r6
   19b8c:	mov	r3, #21
   19b90:	mov	r0, sl
   19b94:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19b98:	b	1eaa0 <main@@Base+0x8be8>
   19b9c:	bne	19bac <main@@Base+0x3cf4>
   19ba0:	ldrb	r0, [r9, #2]!
   19ba4:	cmp	r0, #32
   19ba8:	bhi	19bbc <main@@Base+0x3d04>
   19bac:	ldr	r0, [sp, #32]
   19bb0:	mov	r2, r6
   19bb4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19bb8:	mov	r9, r0
   19bbc:	cmp	r9, r6
   19bc0:	mov	r2, r6
   19bc4:	beq	19c0c <main@@Base+0x3d54>
   19bc8:	ldrb	r0, [r9]
   19bcc:	cmp	r0, #125	; 0x7d
   19bd0:	bne	19c08 <main@@Base+0x3d50>
   19bd4:	ldr	sl, [sp, #32]
   19bd8:	add	r1, r9, #1
   19bdc:	sub	r0, r6, r1
   19be0:	cmp	r0, #2
   19be4:	blt	1d5f8 <main@@Base+0x7740>
   19be8:	ldrb	r0, [r1]
   19bec:	cmp	r0, #32
   19bf0:	bhi	1a728 <main@@Base+0x4870>
   19bf4:	bne	1d5f8 <main@@Base+0x7740>
   19bf8:	ldrb	r0, [r9, #2]!
   19bfc:	cmp	r0, #32
   19c00:	bls	1d5f8 <main@@Base+0x7740>
   19c04:	b	1eaa4 <main@@Base+0x8bec>
   19c08:	mov	r2, r9
   19c0c:	add	r0, sl, #26
   19c10:	str	r0, [sp, #20]
   19c14:	cmp	r2, r6
   19c18:	mov	r9, r6
   19c1c:	beq	19c4c <main@@Base+0x3d94>
   19c20:	ldrb	r0, [r2]
   19c24:	cmp	r0, #34	; 0x22
   19c28:	bne	19c34 <main@@Base+0x3d7c>
   19c2c:	add	r9, r2, #1
   19c30:	b	19c4c <main@@Base+0x3d94>
   19c34:	ldr	r0, [sp, #32]
   19c38:	mov	r1, r2
   19c3c:	mov	r2, r6
   19c40:	mov	r3, #5
   19c44:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19c48:	mov	r9, r0
   19c4c:	sub	ip, r6, r9
   19c50:	mov	r0, #8
   19c54:	cmp	ip, #8
   19c58:	movcc	r0, ip
   19c5c:	sub	r0, r0, #1
   19c60:	cmp	r0, #7
   19c64:	bhi	1a62c <main@@Base+0x4774>
   19c68:	add	r2, pc, #36	; 0x24
   19c6c:	mov	r1, #0
   19c70:	mov	lr, #0
   19c74:	mov	r8, #0
   19c78:	mov	r7, #0
   19c7c:	mov	r3, #0
   19c80:	mov	r6, #0
   19c84:	mov	r4, #0
   19c88:	ldr	r5, [r2, r0, lsl #2]
   19c8c:	mov	r0, #0
   19c90:	add	pc, r2, r5
   19c94:	andeq	r0, r0, r4, rrx
   19c98:	andeq	r0, r0, ip, asr r0
   19c9c:	andeq	r0, r0, r4, asr r0
   19ca0:	andeq	r0, r0, ip, asr #32
   19ca4:	andeq	r0, r0, r0, asr #32
   19ca8:	andeq	r0, r0, r4, lsr r0
   19cac:	andeq	r0, r0, r4, lsr #32
   19cb0:	andeq	r0, r0, r0, lsr #32
   19cb4:	ldrb	lr, [r9, #7]
   19cb8:	ldrb	r0, [r9, #6]
   19cbc:	mov	r8, r1
   19cc0:	orr	r0, lr, r0, lsl #8
   19cc4:	mov	r1, r0
   19cc8:	ldrb	r0, [r9, #5]
   19ccc:	mov	r7, r8
   19cd0:	orr	r1, r1, r0, lsl #16
   19cd4:	ldrb	r0, [r9, #4]
   19cd8:	mov	r3, r7
   19cdc:	orr	r1, r1, r0, lsl #24
   19ce0:	ldrb	r0, [r9, #3]
   19ce4:	orr	r6, r0, r3
   19ce8:	ldrb	r0, [r9, #2]
   19cec:	orr	r4, r6, r0, lsl #8
   19cf0:	ldrb	r0, [r9, #1]
   19cf4:	orr	r0, r4, r0, lsl #16
   19cf8:	ldrb	r2, [r9]
   19cfc:	movw	r3, #29556	; 0x7374
   19d00:	movt	r3, #29797	; 0x7465
   19d04:	orr	r2, r0, r2, lsl #24
   19d08:	mvn	r0, #-855638016	; 0xcd000000
   19d0c:	subs	r0, r0, r1
   19d10:	sbcs	r0, r3, r2
   19d14:	bcc	19d88 <main@@Base+0x3ed0>
   19d18:	ldr	r6, [sp, #36]	; 0x24
   19d1c:	and	r1, r1, #-16777216	; 0xff000000
   19d20:	eor	r0, r2, r3
   19d24:	eor	r2, r1, #822083584	; 0x31000000
   19d28:	orrs	r2, r2, r0
   19d2c:	beq	19e54 <main@@Base+0x3f9c>
   19d30:	eor	r1, r1, #838860800	; 0x32000000
   19d34:	orrs	r0, r1, r0
   19d38:	bne	1a62c <main@@Base+0x4774>
   19d3c:	cmp	ip, #6
   19d40:	mov	r7, r9
   19d44:	blt	1a170 <main@@Base+0x42b8>
   19d48:	ldrb	r0, [r9, #5]
   19d4c:	mov	r7, r9
   19d50:	cmp	r0, #34	; 0x22
   19d54:	bne	1a170 <main@@Base+0x42b8>
   19d58:	add	r1, r9, #6
   19d5c:	sub	r0, r6, r1
   19d60:	cmp	r0, #2
   19d64:	blt	19f5c <main@@Base+0x40a4>
   19d68:	ldrb	r0, [r1]
   19d6c:	cmp	r0, #32
   19d70:	bls	19f48 <main@@Base+0x4090>
   19d74:	mov	r7, r1
   19d78:	cmp	r7, r6
   19d7c:	bne	19f74 <main@@Base+0x40bc>
   19d80:	b	19fb0 <main@@Base+0x40f8>
   19d84:	andeq	r3, r4, r4, lsl #6
   19d88:	ldr	r6, [sp, #36]	; 0x24
   19d8c:	cmn	r2, #-2013265919	; 0x88000001
   19d90:	bhi	19df0 <main@@Base+0x3f38>
   19d94:	and	r1, r1, #-16777216	; 0xff000000
   19d98:	eor	r0, r2, r3
   19d9c:	eor	r1, r1, #855638016	; 0x33000000
   19da0:	orrs	r0, r1, r0
   19da4:	bne	1a62c <main@@Base+0x4774>
   19da8:	cmp	ip, #6
   19dac:	mov	r1, r9
   19db0:	blt	1a460 <main@@Base+0x45a8>
   19db4:	ldrb	r0, [r9, #5]
   19db8:	mov	r1, r9
   19dbc:	cmp	r0, #34	; 0x22
   19dc0:	bne	1a460 <main@@Base+0x45a8>
   19dc4:	add	r2, r9, #6
   19dc8:	sub	r0, r6, r2
   19dcc:	cmp	r0, #2
   19dd0:	blt	1a05c <main@@Base+0x41a4>
   19dd4:	ldrb	r0, [r2]
   19dd8:	cmp	r0, #32
   19ddc:	bls	1a048 <main@@Base+0x4190>
   19de0:	mov	r1, r2
   19de4:	cmp	r1, r6
   19de8:	bne	1a078 <main@@Base+0x41c0>
   19dec:	b	1a0b4 <main@@Base+0x41fc>
   19df0:	lsr	r0, r2, #24
   19df4:	and	r1, r2, #-16777216	; 0xff000000
   19df8:	cmp	r0, #120	; 0x78
   19dfc:	bhi	19e9c <main@@Base+0x3fe4>
   19e00:	teq	r1, #2013265920	; 0x78000000
   19e04:	bne	1a62c <main@@Base+0x4774>
   19e08:	cmp	ip, #2
   19e0c:	mov	r7, r9
   19e10:	blt	1a4a0 <main@@Base+0x45e8>
   19e14:	ldrb	r0, [r9, #1]
   19e18:	mov	r7, r9
   19e1c:	cmp	r0, #34	; 0x22
   19e20:	bne	1a4a0 <main@@Base+0x45e8>
   19e24:	add	r1, r9, #2
   19e28:	sub	r0, r6, r1
   19e2c:	cmp	r0, #2
   19e30:	blt	1a0e0 <main@@Base+0x4228>
   19e34:	ldrb	r0, [r1]
   19e38:	cmp	r0, #32
   19e3c:	bls	1a0c8 <main@@Base+0x4210>
   19e40:	ldr	r6, [sp, #36]	; 0x24
   19e44:	mov	r7, r1
   19e48:	cmp	r7, r6
   19e4c:	bne	1a0f8 <main@@Base+0x4240>
   19e50:	b	1a134 <main@@Base+0x427c>
   19e54:	cmp	ip, #6
   19e58:	mov	r7, r9
   19e5c:	blt	1a2b0 <main@@Base+0x43f8>
   19e60:	ldrb	r0, [r9, #5]
   19e64:	mov	r7, r9
   19e68:	cmp	r0, #34	; 0x22
   19e6c:	bne	1a2b0 <main@@Base+0x43f8>
   19e70:	add	r1, r9, #6
   19e74:	sub	r0, r6, r1
   19e78:	cmp	r0, #2
   19e7c:	blt	19fdc <main@@Base+0x4124>
   19e80:	ldrb	r0, [r1]
   19e84:	cmp	r0, #32
   19e88:	bls	19fc8 <main@@Base+0x4110>
   19e8c:	mov	r7, r1
   19e90:	cmp	r7, r6
   19e94:	bne	19ff4 <main@@Base+0x413c>
   19e98:	b	1a030 <main@@Base+0x4178>
   19e9c:	teq	r1, #2030043136	; 0x79000000
   19ea0:	beq	19ef8 <main@@Base+0x4040>
   19ea4:	teq	r1, #2046820352	; 0x7a000000
   19ea8:	bne	1a62c <main@@Base+0x4774>
   19eac:	cmp	ip, #2
   19eb0:	mov	r7, r9
   19eb4:	blt	1a530 <main@@Base+0x4678>
   19eb8:	ldrb	r0, [r9, #1]
   19ebc:	mov	r7, r9
   19ec0:	cmp	r0, #34	; 0x22
   19ec4:	bne	1a530 <main@@Base+0x4678>
   19ec8:	add	r1, r9, #2
   19ecc:	sub	r0, r6, r1
   19ed0:	cmp	r0, #2
   19ed4:	blt	1a338 <main@@Base+0x4480>
   19ed8:	ldrb	r0, [r1]
   19edc:	cmp	r0, #32
   19ee0:	bls	1a320 <main@@Base+0x4468>
   19ee4:	ldr	r6, [sp, #36]	; 0x24
   19ee8:	mov	r7, r1
   19eec:	cmp	r7, r6
   19ef0:	bne	1a350 <main@@Base+0x4498>
   19ef4:	b	1a390 <main@@Base+0x44d8>
   19ef8:	cmp	ip, #2
   19efc:	mov	r7, r9
   19f00:	blt	1a5c0 <main@@Base+0x4708>
   19f04:	ldrb	r0, [r9, #1]
   19f08:	mov	r7, r9
   19f0c:	cmp	r0, #34	; 0x22
   19f10:	bne	1a5c0 <main@@Base+0x4708>
   19f14:	add	r1, r9, #2
   19f18:	sub	r0, r6, r1
   19f1c:	cmp	r0, #2
   19f20:	blt	1a3c4 <main@@Base+0x450c>
   19f24:	ldrb	r0, [r1]
   19f28:	cmp	r0, #32
   19f2c:	bls	1a3ac <main@@Base+0x44f4>
   19f30:	ldr	r6, [sp, #36]	; 0x24
   19f34:	mov	r7, r1
   19f38:	cmp	r7, r6
   19f3c:	bne	1a3dc <main@@Base+0x4524>
   19f40:	b	1a41c <main@@Base+0x4564>
   19f44:	ldrdeq	r9, [r0], -ip
   19f48:	bne	19f5c <main@@Base+0x40a4>
   19f4c:	mov	r7, r9
   19f50:	ldrb	r0, [r7, #7]!
   19f54:	cmp	r0, #32
   19f58:	bhi	19f6c <main@@Base+0x40b4>
   19f5c:	ldr	r0, [sp, #32]
   19f60:	mov	r2, r6
   19f64:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19f68:	mov	r7, r0
   19f6c:	cmp	r7, r6
   19f70:	beq	19fb0 <main@@Base+0x40f8>
   19f74:	ldrb	r0, [r7]
   19f78:	cmp	r0, #58	; 0x3a
   19f7c:	bne	19fb0 <main@@Base+0x40f8>
   19f80:	add	r1, r7, #1
   19f84:	sub	r0, r6, r1
   19f88:	cmp	r0, #2
   19f8c:	blt	1a160 <main@@Base+0x42a8>
   19f90:	ldrb	r0, [r1]
   19f94:	cmp	r0, #32
   19f98:	bls	1a14c <main@@Base+0x4294>
   19f9c:	ldr	r6, [sp, #36]	; 0x24
   19fa0:	mov	r7, r1
   19fa4:	cmp	r9, r7
   19fa8:	bne	1a178 <main@@Base+0x42c0>
   19fac:	b	1a62c <main@@Base+0x4774>
   19fb0:	ldr	r0, [sp, #32]
   19fb4:	mov	r1, r7
   19fb8:	mov	r2, r6
   19fbc:	mov	r3, #4
   19fc0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   19fc4:	b	1a16c <main@@Base+0x42b4>
   19fc8:	bne	19fdc <main@@Base+0x4124>
   19fcc:	mov	r7, r9
   19fd0:	ldrb	r0, [r7, #7]!
   19fd4:	cmp	r0, #32
   19fd8:	bhi	19fec <main@@Base+0x4134>
   19fdc:	ldr	r0, [sp, #32]
   19fe0:	mov	r2, r6
   19fe4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   19fe8:	mov	r7, r0
   19fec:	cmp	r7, r6
   19ff0:	beq	1a030 <main@@Base+0x4178>
   19ff4:	ldrb	r0, [r7]
   19ff8:	cmp	r0, #58	; 0x3a
   19ffc:	bne	1a030 <main@@Base+0x4178>
   1a000:	add	r1, r7, #1
   1a004:	sub	r0, r6, r1
   1a008:	cmp	r0, #2
   1a00c:	blt	1a2a0 <main@@Base+0x43e8>
   1a010:	ldrb	r0, [r1]
   1a014:	cmp	r0, #32
   1a018:	bls	1a28c <main@@Base+0x43d4>
   1a01c:	ldr	r6, [sp, #36]	; 0x24
   1a020:	mov	r7, r1
   1a024:	cmp	r9, r7
   1a028:	bne	1a2b8 <main@@Base+0x4400>
   1a02c:	b	1a62c <main@@Base+0x4774>
   1a030:	ldr	r0, [sp, #32]
   1a034:	mov	r1, r7
   1a038:	mov	r2, r6
   1a03c:	mov	r3, #4
   1a040:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a044:	b	1a2ac <main@@Base+0x43f4>
   1a048:	bne	1a05c <main@@Base+0x41a4>
   1a04c:	mov	r1, r9
   1a050:	ldrb	r0, [r1, #7]!
   1a054:	cmp	r0, #32
   1a058:	bhi	1a070 <main@@Base+0x41b8>
   1a05c:	ldr	r0, [sp, #32]
   1a060:	mov	r1, r2
   1a064:	mov	r2, r6
   1a068:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a06c:	mov	r1, r0
   1a070:	cmp	r1, r6
   1a074:	beq	1a0b4 <main@@Base+0x41fc>
   1a078:	ldrb	r0, [r1]
   1a07c:	cmp	r0, #58	; 0x3a
   1a080:	bne	1a0b4 <main@@Base+0x41fc>
   1a084:	add	r2, r1, #1
   1a088:	sub	r0, r6, r2
   1a08c:	cmp	r0, #2
   1a090:	blt	1a44c <main@@Base+0x4594>
   1a094:	ldrb	r0, [r2]
   1a098:	cmp	r0, #32
   1a09c:	bls	1a438 <main@@Base+0x4580>
   1a0a0:	ldr	r6, [sp, #36]	; 0x24
   1a0a4:	mov	r1, r2
   1a0a8:	cmp	r9, r1
   1a0ac:	bne	1a468 <main@@Base+0x45b0>
   1a0b0:	b	1a62c <main@@Base+0x4774>
   1a0b4:	ldr	r0, [sp, #32]
   1a0b8:	mov	r2, r6
   1a0bc:	mov	r3, #4
   1a0c0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a0c4:	b	1a45c <main@@Base+0x45a4>
   1a0c8:	ldr	r6, [sp, #36]	; 0x24
   1a0cc:	bne	1a0e0 <main@@Base+0x4228>
   1a0d0:	mov	r7, r9
   1a0d4:	ldrb	r0, [r7, #3]!
   1a0d8:	cmp	r0, #32
   1a0dc:	bhi	1a0f0 <main@@Base+0x4238>
   1a0e0:	ldr	r0, [sp, #32]
   1a0e4:	mov	r2, r6
   1a0e8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a0ec:	mov	r7, r0
   1a0f0:	cmp	r7, r6
   1a0f4:	beq	1a134 <main@@Base+0x427c>
   1a0f8:	ldrb	r0, [r7]
   1a0fc:	cmp	r0, #58	; 0x3a
   1a100:	bne	1a134 <main@@Base+0x427c>
   1a104:	add	r1, r7, #1
   1a108:	sub	r0, r6, r1
   1a10c:	cmp	r0, #2
   1a110:	blt	1a490 <main@@Base+0x45d8>
   1a114:	ldrb	r0, [r1]
   1a118:	cmp	r0, #32
   1a11c:	bls	1a47c <main@@Base+0x45c4>
   1a120:	ldr	r6, [sp, #36]	; 0x24
   1a124:	mov	r7, r1
   1a128:	cmp	r9, r7
   1a12c:	bne	1a4a8 <main@@Base+0x45f0>
   1a130:	b	1a62c <main@@Base+0x4774>
   1a134:	ldr	r0, [sp, #32]
   1a138:	mov	r1, r7
   1a13c:	mov	r2, r6
   1a140:	mov	r3, #4
   1a144:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a148:	b	1a49c <main@@Base+0x45e4>
   1a14c:	ldr	r6, [sp, #36]	; 0x24
   1a150:	bne	1a160 <main@@Base+0x42a8>
   1a154:	ldrb	r0, [r7, #2]!
   1a158:	cmp	r0, #32
   1a15c:	bhi	1a170 <main@@Base+0x42b8>
   1a160:	ldr	r0, [sp, #32]
   1a164:	mov	r2, r6
   1a168:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a16c:	mov	r7, r0
   1a170:	cmp	r9, r7
   1a174:	beq	1a62c <main@@Base+0x4774>
   1a178:	mov	r5, #0
   1a17c:	cmp	r7, r6
   1a180:	str	r5, [fp, #-52]	; 0xffffffcc
   1a184:	str	r5, [fp, #-56]	; 0xffffffc8
   1a188:	strb	r5, [sp, #60]	; 0x3c
   1a18c:	str	r5, [sp, #48]	; 0x30
   1a190:	beq	1a1ec <main@@Base+0x4334>
   1a194:	sub	r0, fp, #56	; 0x38
   1a198:	mov	r1, r7
   1a19c:	mov	r2, r6
   1a1a0:	add	r3, sp, #48	; 0x30
   1a1a4:	str	r0, [sp]
   1a1a8:	ldr	r0, [sp, #32]
   1a1ac:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1a1b0:	cmp	r0, r7
   1a1b4:	beq	1a1fc <main@@Base+0x4344>
   1a1b8:	ldr	r3, [sp, #48]	; 0x30
   1a1bc:	mov	r1, r0
   1a1c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a1c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a1c8:	cmp	r3, #0
   1a1cc:	beq	1a20c <main@@Base+0x4354>
   1a1d0:	subs	r3, r0, #129	; 0x81
   1a1d4:	sbcs	r2, r2, #0
   1a1d8:	bcc	1a238 <main@@Base+0x4380>
   1a1dc:	ldr	r0, [sp, #32]
   1a1e0:	mov	r2, r6
   1a1e4:	mov	r3, #8
   1a1e8:	b	1a224 <main@@Base+0x436c>
   1a1ec:	mov	r1, r6
   1a1f0:	cmp	r7, r1
   1a1f4:	bne	1a284 <main@@Base+0x43cc>
   1a1f8:	b	1a250 <main@@Base+0x4398>
   1a1fc:	mov	r1, r7
   1a200:	cmp	r7, r1
   1a204:	bne	1a284 <main@@Base+0x43cc>
   1a208:	b	1a250 <main@@Base+0x4398>
   1a20c:	subs	r3, r0, #128	; 0x80
   1a210:	sbcs	r2, r2, #0
   1a214:	bcc	1a240 <main@@Base+0x4388>
   1a218:	ldr	r0, [sp, #32]
   1a21c:	mov	r2, r6
   1a220:	mov	r3, #7
   1a224:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a228:	mov	r1, r0
   1a22c:	cmp	r7, r1
   1a230:	bne	1a284 <main@@Base+0x43cc>
   1a234:	b	1a250 <main@@Base+0x4398>
   1a238:	rsb	r5, r0, #0
   1a23c:	b	1a244 <main@@Base+0x438c>
   1a240:	mov	r5, r0
   1a244:	strb	r5, [sp, #60]	; 0x3c
   1a248:	cmp	r7, r1
   1a24c:	bne	1a284 <main@@Base+0x43cc>
   1a250:	add	r0, sp, #60	; 0x3c
   1a254:	mov	r1, r7
   1a258:	mov	r2, r6
   1a25c:	str	r0, [sp]
   1a260:	ldr	r0, [sp, #32]
   1a264:	ldr	r3, [pc, #4092]	; 1b268 <main@@Base+0x53b0>
   1a268:	add	r3, pc, r3
   1a26c:	bl	21b94 <main@@Base+0xbcdc>
   1a270:	mov	r1, r0
   1a274:	cmp	r0, r7
   1a278:	cmpne	r1, r6
   1a27c:	beq	1a730 <main@@Base+0x4878>
   1a280:	ldrb	r5, [sp, #60]	; 0x3c
   1a284:	strb	r5, [sl, #24]
   1a288:	b	1a640 <main@@Base+0x4788>
   1a28c:	ldr	r6, [sp, #36]	; 0x24
   1a290:	bne	1a2a0 <main@@Base+0x43e8>
   1a294:	ldrb	r0, [r7, #2]!
   1a298:	cmp	r0, #32
   1a29c:	bhi	1a2b0 <main@@Base+0x43f8>
   1a2a0:	ldr	r0, [sp, #32]
   1a2a4:	mov	r2, r6
   1a2a8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a2ac:	mov	r7, r0
   1a2b0:	cmp	r9, r7
   1a2b4:	beq	1a62c <main@@Base+0x4774>
   1a2b8:	mov	r0, #0
   1a2bc:	mov	r1, r7
   1a2c0:	mov	r2, r6
   1a2c4:	sub	r3, fp, #56	; 0x38
   1a2c8:	str	r0, [fp, #-52]	; 0xffffffcc
   1a2cc:	str	r0, [fp, #-56]	; 0xffffffc8
   1a2d0:	ldr	r0, [sp, #32]
   1a2d4:	bl	3579c <flatcc_json_parser_double@@Base>
   1a2d8:	mov	r1, r0
   1a2dc:	cmp	r7, r0
   1a2e0:	bne	1a314 <main@@Base+0x445c>
   1a2e4:	sub	r0, fp, #56	; 0x38
   1a2e8:	mov	r1, r7
   1a2ec:	mov	r2, r6
   1a2f0:	str	r0, [sp]
   1a2f4:	ldr	r0, [sp, #32]
   1a2f8:	ldr	r3, [pc, #4084]	; 1b2f4 <main@@Base+0x543c>
   1a2fc:	add	r3, pc, r3
   1a300:	bl	246d4 <main@@Base+0xe81c>
   1a304:	mov	r1, r0
   1a308:	cmp	r0, r7
   1a30c:	cmpne	r1, r6
   1a310:	beq	1a730 <main@@Base+0x4878>
   1a314:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1a318:	vstr	d16, [sl, #16]
   1a31c:	b	1a640 <main@@Base+0x4788>
   1a320:	ldr	r6, [sp, #36]	; 0x24
   1a324:	bne	1a338 <main@@Base+0x4480>
   1a328:	mov	r7, r9
   1a32c:	ldrb	r0, [r7, #3]!
   1a330:	cmp	r0, #32
   1a334:	bhi	1a348 <main@@Base+0x4490>
   1a338:	ldr	r0, [sp, #32]
   1a33c:	mov	r2, r6
   1a340:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a344:	mov	r7, r0
   1a348:	cmp	r7, r6
   1a34c:	beq	1a390 <main@@Base+0x44d8>
   1a350:	ldrb	r0, [r7]
   1a354:	cmp	r0, #58	; 0x3a
   1a358:	bne	1a390 <main@@Base+0x44d8>
   1a35c:	ldr	r6, [sp, #36]	; 0x24
   1a360:	add	r1, r7, #1
   1a364:	sub	r0, r6, r1
   1a368:	cmp	r0, #2
   1a36c:	blt	1a520 <main@@Base+0x4668>
   1a370:	ldrb	r0, [r1]
   1a374:	cmp	r0, #32
   1a378:	bls	1a50c <main@@Base+0x4654>
   1a37c:	ldr	r6, [sp, #36]	; 0x24
   1a380:	mov	r7, r1
   1a384:	cmp	r9, r7
   1a388:	bne	1a538 <main@@Base+0x4680>
   1a38c:	b	1a62c <main@@Base+0x4774>
   1a390:	ldr	r6, [sp, #36]	; 0x24
   1a394:	ldr	r0, [sp, #32]
   1a398:	mov	r1, r7
   1a39c:	mov	r3, #4
   1a3a0:	mov	r2, r6
   1a3a4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a3a8:	b	1a52c <main@@Base+0x4674>
   1a3ac:	ldr	r6, [sp, #36]	; 0x24
   1a3b0:	bne	1a3c4 <main@@Base+0x450c>
   1a3b4:	mov	r7, r9
   1a3b8:	ldrb	r0, [r7, #3]!
   1a3bc:	cmp	r0, #32
   1a3c0:	bhi	1a3d4 <main@@Base+0x451c>
   1a3c4:	ldr	r0, [sp, #32]
   1a3c8:	mov	r2, r6
   1a3cc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a3d0:	mov	r7, r0
   1a3d4:	cmp	r7, r6
   1a3d8:	beq	1a41c <main@@Base+0x4564>
   1a3dc:	ldrb	r0, [r7]
   1a3e0:	cmp	r0, #58	; 0x3a
   1a3e4:	bne	1a41c <main@@Base+0x4564>
   1a3e8:	ldr	r6, [sp, #36]	; 0x24
   1a3ec:	add	r1, r7, #1
   1a3f0:	sub	r0, r6, r1
   1a3f4:	cmp	r0, #2
   1a3f8:	blt	1a5b0 <main@@Base+0x46f8>
   1a3fc:	ldrb	r0, [r1]
   1a400:	cmp	r0, #32
   1a404:	bls	1a59c <main@@Base+0x46e4>
   1a408:	ldr	r6, [sp, #36]	; 0x24
   1a40c:	mov	r7, r1
   1a410:	cmp	r9, r7
   1a414:	bne	1a5c8 <main@@Base+0x4710>
   1a418:	b	1a62c <main@@Base+0x4774>
   1a41c:	ldr	r6, [sp, #36]	; 0x24
   1a420:	ldr	r0, [sp, #32]
   1a424:	mov	r1, r7
   1a428:	mov	r3, #4
   1a42c:	mov	r2, r6
   1a430:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a434:	b	1a5bc <main@@Base+0x4704>
   1a438:	ldr	r6, [sp, #36]	; 0x24
   1a43c:	bne	1a44c <main@@Base+0x4594>
   1a440:	ldrb	r0, [r1, #2]!
   1a444:	cmp	r0, #32
   1a448:	bhi	1a460 <main@@Base+0x45a8>
   1a44c:	ldr	r0, [sp, #32]
   1a450:	mov	r1, r2
   1a454:	mov	r2, r6
   1a458:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a45c:	mov	r1, r0
   1a460:	cmp	r9, r1
   1a464:	beq	1a62c <main@@Base+0x4774>
   1a468:	ldr	r0, [sp, #32]
   1a46c:	ldr	r3, [sp, #20]
   1a470:	mov	r2, r6
   1a474:	bl	22154 <main@@Base+0xc29c>
   1a478:	b	1a63c <main@@Base+0x4784>
   1a47c:	ldr	r6, [sp, #36]	; 0x24
   1a480:	bne	1a490 <main@@Base+0x45d8>
   1a484:	ldrb	r0, [r7, #2]!
   1a488:	cmp	r0, #32
   1a48c:	bhi	1a4a0 <main@@Base+0x45e8>
   1a490:	ldr	r0, [sp, #32]
   1a494:	mov	r2, r6
   1a498:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a49c:	mov	r7, r0
   1a4a0:	cmp	r9, r7
   1a4a4:	beq	1a62c <main@@Base+0x4774>
   1a4a8:	mov	r0, #0
   1a4ac:	mov	r1, r7
   1a4b0:	mov	r2, r6
   1a4b4:	sub	r3, fp, #56	; 0x38
   1a4b8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a4bc:	ldr	r0, [sp, #32]
   1a4c0:	bl	36160 <flatcc_json_parser_float@@Base>
   1a4c4:	mov	r1, r0
   1a4c8:	cmp	r7, r0
   1a4cc:	bne	1a500 <main@@Base+0x4648>
   1a4d0:	sub	r0, fp, #56	; 0x38
   1a4d4:	mov	r1, r7
   1a4d8:	mov	r2, r6
   1a4dc:	str	r0, [sp]
   1a4e0:	ldr	r0, [sp, #32]
   1a4e4:	ldr	r3, [pc, #3940]	; 1b450 <main@@Base+0x5598>
   1a4e8:	add	r3, pc, r3
   1a4ec:	bl	23dcc <main@@Base+0xdf14>
   1a4f0:	mov	r1, r0
   1a4f4:	cmp	r0, r7
   1a4f8:	cmpne	r1, r6
   1a4fc:	beq	1a730 <main@@Base+0x4878>
   1a500:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a504:	str	r0, [sl]
   1a508:	b	1a640 <main@@Base+0x4788>
   1a50c:	ldr	r6, [sp, #36]	; 0x24
   1a510:	bne	1a520 <main@@Base+0x4668>
   1a514:	ldrb	r0, [r7, #2]!
   1a518:	cmp	r0, #32
   1a51c:	bhi	1a530 <main@@Base+0x4678>
   1a520:	ldr	r0, [sp, #32]
   1a524:	mov	r2, r6
   1a528:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a52c:	mov	r7, r0
   1a530:	cmp	r9, r7
   1a534:	beq	1a62c <main@@Base+0x4774>
   1a538:	mov	r0, #0
   1a53c:	mov	r1, r7
   1a540:	mov	r2, r6
   1a544:	sub	r3, fp, #56	; 0x38
   1a548:	str	r0, [fp, #-56]	; 0xffffffc8
   1a54c:	ldr	r0, [sp, #32]
   1a550:	bl	36160 <flatcc_json_parser_float@@Base>
   1a554:	mov	r1, r0
   1a558:	cmp	r7, r0
   1a55c:	bne	1a590 <main@@Base+0x46d8>
   1a560:	sub	r0, fp, #56	; 0x38
   1a564:	mov	r1, r7
   1a568:	mov	r2, r6
   1a56c:	str	r0, [sp]
   1a570:	ldr	r0, [sp, #32]
   1a574:	ldr	r3, [pc, #4052]	; 1b550 <main@@Base+0x5698>
   1a578:	add	r3, pc, r3
   1a57c:	bl	23dcc <main@@Base+0xdf14>
   1a580:	mov	r1, r0
   1a584:	cmp	r0, r7
   1a588:	cmpne	r1, r6
   1a58c:	beq	1a730 <main@@Base+0x4878>
   1a590:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a594:	str	r0, [sl, #8]
   1a598:	b	1a640 <main@@Base+0x4788>
   1a59c:	ldr	r6, [sp, #36]	; 0x24
   1a5a0:	bne	1a5b0 <main@@Base+0x46f8>
   1a5a4:	ldrb	r0, [r7, #2]!
   1a5a8:	cmp	r0, #32
   1a5ac:	bhi	1a5c0 <main@@Base+0x4708>
   1a5b0:	ldr	r0, [sp, #32]
   1a5b4:	mov	r2, r6
   1a5b8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a5bc:	mov	r7, r0
   1a5c0:	cmp	r9, r7
   1a5c4:	beq	1a62c <main@@Base+0x4774>
   1a5c8:	mov	r0, #0
   1a5cc:	mov	r1, r7
   1a5d0:	mov	r2, r6
   1a5d4:	sub	r3, fp, #56	; 0x38
   1a5d8:	str	r0, [fp, #-56]	; 0xffffffc8
   1a5dc:	ldr	r0, [sp, #32]
   1a5e0:	bl	36160 <flatcc_json_parser_float@@Base>
   1a5e4:	mov	r1, r0
   1a5e8:	cmp	r7, r0
   1a5ec:	bne	1a620 <main@@Base+0x4768>
   1a5f0:	sub	r0, fp, #56	; 0x38
   1a5f4:	mov	r1, r7
   1a5f8:	mov	r2, r6
   1a5fc:	str	r0, [sp]
   1a600:	ldr	r0, [sp, #32]
   1a604:	ldr	r3, [pc, #4040]	; 1b5d4 <main@@Base+0x571c>
   1a608:	add	r3, pc, r3
   1a60c:	bl	23dcc <main@@Base+0xdf14>
   1a610:	mov	r1, r0
   1a614:	cmp	r0, r7
   1a618:	cmpne	r1, r6
   1a61c:	beq	1a730 <main@@Base+0x4878>
   1a620:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a624:	str	r0, [sl, #4]
   1a628:	b	1a640 <main@@Base+0x4788>
   1a62c:	ldr	r0, [sp, #32]
   1a630:	mov	r1, r9
   1a634:	mov	r2, r6
   1a638:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   1a63c:	mov	r1, r0
   1a640:	sub	r0, r6, r1
   1a644:	cmp	r0, #2
   1a648:	blt	1a680 <main@@Base+0x47c8>
   1a64c:	ldrb	r0, [r1]
   1a650:	cmp	r0, #32
   1a654:	bls	1a66c <main@@Base+0x47b4>
   1a658:	mov	r2, r1
   1a65c:	cmp	r2, r6
   1a660:	bne	1a698 <main@@Base+0x47e0>
   1a664:	b	1a74c <main@@Base+0x4894>
   1a668:	strdeq	lr, [r2], -pc	; <UNPREDICTABLE>
   1a66c:	bne	1a680 <main@@Base+0x47c8>
   1a670:	mov	r2, r1
   1a674:	ldrb	r0, [r2, #1]!
   1a678:	cmp	r0, #32
   1a67c:	bhi	1a690 <main@@Base+0x47d8>
   1a680:	ldr	r0, [sp, #32]
   1a684:	mov	r2, r6
   1a688:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a68c:	mov	r2, r0
   1a690:	cmp	r2, r6
   1a694:	beq	1a74c <main@@Base+0x4894>
   1a698:	ldrb	r0, [r2]
   1a69c:	cmp	r0, #44	; 0x2c
   1a6a0:	bne	1a758 <main@@Base+0x48a0>
   1a6a4:	add	r1, r2, #1
   1a6a8:	sub	r0, r6, r1
   1a6ac:	cmp	r0, #2
   1a6b0:	blt	1a6e4 <main@@Base+0x482c>
   1a6b4:	ldrb	r0, [r1]
   1a6b8:	cmp	r0, #32
   1a6bc:	bls	1a6d4 <main@@Base+0x481c>
   1a6c0:	mov	r2, r1
   1a6c4:	cmp	r2, r6
   1a6c8:	bne	1a6fc <main@@Base+0x4844>
   1a6cc:	b	1a790 <main@@Base+0x48d8>
   1a6d0:	andeq	lr, r2, r0, ror #25
   1a6d4:	bne	1a6e4 <main@@Base+0x482c>
   1a6d8:	ldrb	r0, [r2, #2]!
   1a6dc:	cmp	r0, #32
   1a6e0:	bhi	1a6f4 <main@@Base+0x483c>
   1a6e4:	ldr	r0, [sp, #32]
   1a6e8:	mov	r2, r6
   1a6ec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a6f0:	mov	r2, r0
   1a6f4:	cmp	r2, r6
   1a6f8:	beq	1a790 <main@@Base+0x48d8>
   1a6fc:	ldrb	r0, [r2]
   1a700:	cmp	r0, #125	; 0x7d
   1a704:	bne	19c14 <main@@Base+0x3d5c>
   1a708:	ldr	sl, [sp, #32]
   1a70c:	add	r1, r2, #1
   1a710:	sub	r0, r6, r1
   1a714:	cmp	r0, #2
   1a718:	blt	1d5f8 <main@@Base+0x7740>
   1a71c:	ldrb	r0, [r1]
   1a720:	cmp	r0, #32
   1a724:	bls	1c90c <main@@Base+0x6a54>
   1a728:	mov	r9, r1
   1a72c:	b	1eaa4 <main@@Base+0x8bec>
   1a730:	ldr	sl, [sp, #32]
   1a734:	ldr	r6, [sp, #36]	; 0x24
   1a738:	mov	r3, #33	; 0x21
   1a73c:	mov	r0, sl
   1a740:	mov	r2, r6
   1a744:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a748:	b	1eaa0 <main@@Base+0x8be8>
   1a74c:	ldr	sl, [sp, #32]
   1a750:	mov	r9, r6
   1a754:	b	1eaa4 <main@@Base+0x8bec>
   1a758:	ldr	sl, [sp, #32]
   1a75c:	cmp	r0, #125	; 0x7d
   1a760:	bne	1b26c <main@@Base+0x53b4>
   1a764:	add	r1, r2, #1
   1a768:	sub	r0, r6, r1
   1a76c:	cmp	r0, #2
   1a770:	blt	1d5f8 <main@@Base+0x7740>
   1a774:	ldrb	r0, [r1]
   1a778:	cmp	r0, #32
   1a77c:	bls	1d5dc <main@@Base+0x7724>
   1a780:	ldr	r6, [sp, #36]	; 0x24
   1a784:	ldr	sl, [sp, #32]
   1a788:	mov	r9, r1
   1a78c:	b	1eaa4 <main@@Base+0x8bec>
   1a790:	ldr	sl, [sp, #32]
   1a794:	mov	r1, r6
   1a798:	mov	r0, sl
   1a79c:	b	1b274 <main@@Base+0x53bc>
   1a7a0:	andeq	r2, r4, r0, lsl r9
   1a7a4:	bne	1a7b4 <main@@Base+0x48fc>
   1a7a8:	ldrb	r0, [r7, #2]!
   1a7ac:	cmp	r0, #32
   1a7b0:	bhi	1a7c4 <main@@Base+0x490c>
   1a7b4:	mov	r0, sl
   1a7b8:	mov	r2, r6
   1a7bc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a7c0:	mov	r7, r0
   1a7c4:	cmp	r8, r7
   1a7c8:	beq	193e4 <main@@Base+0x352c>
   1a7cc:	mov	r0, #0
   1a7d0:	mov	r1, r7
   1a7d4:	mov	r2, r6
   1a7d8:	sub	r3, fp, #56	; 0x38
   1a7dc:	str	r0, [fp, #-56]	; 0xffffffc8
   1a7e0:	mov	r0, sl
   1a7e4:	bl	36160 <flatcc_json_parser_float@@Base>
   1a7e8:	mov	r9, r0
   1a7ec:	cmp	r7, r0
   1a7f0:	bne	1a824 <main@@Base+0x496c>
   1a7f4:	sub	r0, fp, #56	; 0x38
   1a7f8:	mov	r1, r7
   1a7fc:	mov	r2, r6
   1a800:	str	r0, [sp]
   1a804:	mov	r0, sl
   1a808:	ldr	r3, [pc, #4084]	; 1b804 <main@@Base+0x594c>
   1a80c:	add	r3, pc, r3
   1a810:	bl	23dcc <main@@Base+0xdf14>
   1a814:	mov	r9, r0
   1a818:	cmp	r0, r7
   1a81c:	cmpne	r9, r6
   1a820:	beq	1fc38 <main@@Base+0x9d80>
   1a824:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1a828:	vcmp.f32	s0, s16
   1a82c:	vmrs	APSR_nzcv, fpscr
   1a830:	bne	1a840 <main@@Base+0x4988>
   1a834:	ldrb	r0, [sl, #8]
   1a838:	tst	r0, #2
   1a83c:	beq	1eaa4 <main@@Base+0x8bec>
   1a840:	ldr	r0, [sl]
   1a844:	mov	r1, #26
   1a848:	b	18430 <main@@Base+0x2578>
   1a84c:	bne	1a85c <main@@Base+0x49a4>
   1a850:	ldrb	r0, [r8, #19]!
   1a854:	cmp	r0, #32
   1a858:	bhi	1a86c <main@@Base+0x49b4>
   1a85c:	mov	r0, sl
   1a860:	mov	r2, r6
   1a864:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a868:	mov	r8, r0
   1a86c:	cmp	r8, r6
   1a870:	beq	1a8b4 <main@@Base+0x49fc>
   1a874:	ldrb	r0, [r8]
   1a878:	cmp	r0, #58	; 0x3a
   1a87c:	bne	1a8b4 <main@@Base+0x49fc>
   1a880:	add	r1, r8, #1
   1a884:	sub	r0, r6, r1
   1a888:	cmp	r0, #2
   1a88c:	blt	1c5a0 <main@@Base+0x66e8>
   1a890:	ldrb	r0, [r1]
   1a894:	cmp	r0, #32
   1a898:	bls	1c588 <main@@Base+0x66d0>
   1a89c:	ldr	r6, [sp, #36]	; 0x24
   1a8a0:	ldr	sl, [sp, #32]
   1a8a4:	mov	r8, r1
   1a8a8:	cmp	r7, r8
   1a8ac:	bne	1c5b8 <main@@Base+0x6700>
   1a8b0:	b	1ea90 <main@@Base+0x8bd8>
   1a8b4:	mov	r0, sl
   1a8b8:	mov	r1, r8
   1a8bc:	mov	r2, r6
   1a8c0:	mov	r3, #4
   1a8c4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a8c8:	b	1c5ac <main@@Base+0x66f4>
   1a8cc:	ldr	r4, [sp, #36]	; 0x24
   1a8d0:	bne	1a8e4 <main@@Base+0x4a2c>
   1a8d4:	mov	r6, r8
   1a8d8:	ldrb	r0, [r6, #18]!
   1a8dc:	cmp	r0, #32
   1a8e0:	bhi	1a8f4 <main@@Base+0x4a3c>
   1a8e4:	mov	r0, sl
   1a8e8:	mov	r2, r4
   1a8ec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a8f0:	mov	r6, r0
   1a8f4:	cmp	r6, r4
   1a8f8:	beq	1a9b0 <main@@Base+0x4af8>
   1a8fc:	ldrb	r0, [r6]
   1a900:	cmp	r0, #58	; 0x3a
   1a904:	bne	1a9b0 <main@@Base+0x4af8>
   1a908:	ldr	r0, [sp, #36]	; 0x24
   1a90c:	add	r1, r6, #1
   1a910:	sub	r0, r0, r1
   1a914:	cmp	r0, #2
   1a918:	blt	1c658 <main@@Base+0x67a0>
   1a91c:	ldrb	r0, [r1]
   1a920:	cmp	r0, #32
   1a924:	bls	1c644 <main@@Base+0x678c>
   1a928:	ldr	sl, [sp, #32]
   1a92c:	mov	r6, r1
   1a930:	cmp	r9, r6
   1a934:	bne	1c670 <main@@Base+0x67b8>
   1a938:	ldr	r6, [sp, #36]	; 0x24
   1a93c:	add	r7, r8, #16
   1a940:	mov	r1, #8
   1a944:	sub	r0, r6, r7
   1a948:	cmp	r0, #8
   1a94c:	movcc	r1, r0
   1a950:	sub	r1, r1, #1
   1a954:	cmp	r1, #7
   1a958:	bhi	1ea90 <main@@Base+0x8bd8>
   1a95c:	ldrb	r1, [r7]
   1a960:	cmp	r1, #97	; 0x61
   1a964:	bne	1ea90 <main@@Base+0x8bd8>
   1a968:	cmp	r0, #2
   1a96c:	blt	1ea90 <main@@Base+0x8bd8>
   1a970:	ldrb	r0, [r8, #17]
   1a974:	cmp	r0, #34	; 0x22
   1a978:	bne	1ea90 <main@@Base+0x8bd8>
   1a97c:	add	r1, r8, #18
   1a980:	sub	r0, r6, r1
   1a984:	cmp	r0, #2
   1a988:	blt	1cc74 <main@@Base+0x6dbc>
   1a98c:	ldrb	r0, [r1]
   1a990:	cmp	r0, #32
   1a994:	bls	1cc5c <main@@Base+0x6da4>
   1a998:	ldr	r6, [sp, #36]	; 0x24
   1a99c:	ldr	sl, [sp, #32]
   1a9a0:	mov	r8, r1
   1a9a4:	cmp	r8, r6
   1a9a8:	bne	1cc8c <main@@Base+0x6dd4>
   1a9ac:	b	1cccc <main@@Base+0x6e14>
   1a9b0:	ldr	r2, [sp, #36]	; 0x24
   1a9b4:	mov	r0, sl
   1a9b8:	mov	r1, r6
   1a9bc:	mov	r3, #4
   1a9c0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1a9c4:	b	1c664 <main@@Base+0x67ac>
   1a9c8:	strdeq	r2, [r4], -ip
   1a9cc:	ldr	r4, [sp, #36]	; 0x24
   1a9d0:	bne	1a9e4 <main@@Base+0x4b2c>
   1a9d4:	mov	r6, r8
   1a9d8:	ldrb	r0, [r6, #18]!
   1a9dc:	cmp	r0, #32
   1a9e0:	bhi	1a9f4 <main@@Base+0x4b3c>
   1a9e4:	mov	r0, sl
   1a9e8:	mov	r2, r4
   1a9ec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1a9f0:	mov	r6, r0
   1a9f4:	cmp	r6, r4
   1a9f8:	beq	1aab0 <main@@Base+0x4bf8>
   1a9fc:	ldrb	r0, [r6]
   1aa00:	cmp	r0, #58	; 0x3a
   1aa04:	bne	1aab0 <main@@Base+0x4bf8>
   1aa08:	ldr	r0, [sp, #36]	; 0x24
   1aa0c:	add	r1, r6, #1
   1aa10:	sub	r0, r0, r1
   1aa14:	cmp	r0, #2
   1aa18:	blt	1c7ac <main@@Base+0x68f4>
   1aa1c:	ldrb	r0, [r1]
   1aa20:	cmp	r0, #32
   1aa24:	bls	1c798 <main@@Base+0x68e0>
   1aa28:	ldr	sl, [sp, #32]
   1aa2c:	mov	r6, r1
   1aa30:	cmp	r9, r6
   1aa34:	bne	1c7c4 <main@@Base+0x690c>
   1aa38:	ldr	r6, [sp, #36]	; 0x24
   1aa3c:	add	r7, r8, #16
   1aa40:	mov	r1, #8
   1aa44:	sub	r0, r6, r7
   1aa48:	cmp	r0, #8
   1aa4c:	movcc	r1, r0
   1aa50:	sub	r1, r1, #1
   1aa54:	cmp	r1, #7
   1aa58:	bhi	1ea90 <main@@Base+0x8bd8>
   1aa5c:	ldrb	r1, [r7]
   1aa60:	cmp	r1, #97	; 0x61
   1aa64:	bne	1ea90 <main@@Base+0x8bd8>
   1aa68:	cmp	r0, #2
   1aa6c:	blt	1ea90 <main@@Base+0x8bd8>
   1aa70:	ldrb	r0, [r8, #17]
   1aa74:	cmp	r0, #34	; 0x22
   1aa78:	bne	1ea90 <main@@Base+0x8bd8>
   1aa7c:	add	r1, r8, #18
   1aa80:	sub	r0, r6, r1
   1aa84:	cmp	r0, #2
   1aa88:	blt	1ccfc <main@@Base+0x6e44>
   1aa8c:	ldrb	r0, [r1]
   1aa90:	cmp	r0, #32
   1aa94:	bls	1cce4 <main@@Base+0x6e2c>
   1aa98:	ldr	r6, [sp, #36]	; 0x24
   1aa9c:	ldr	sl, [sp, #32]
   1aaa0:	mov	r8, r1
   1aaa4:	cmp	r8, r6
   1aaa8:	bne	1cd14 <main@@Base+0x6e5c>
   1aaac:	b	1cd54 <main@@Base+0x6e9c>
   1aab0:	ldr	r2, [sp, #36]	; 0x24
   1aab4:	mov	r0, sl
   1aab8:	mov	r1, r6
   1aabc:	mov	r3, #4
   1aac0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1aac4:	b	1c7b8 <main@@Base+0x6900>
   1aac8:	mov	r0, sl
   1aacc:	mov	r1, r8
   1aad0:	mov	r2, r6
   1aad4:	mov	r3, #9
   1aad8:	b	19404 <main@@Base+0x354c>
   1aadc:	bne	1aaec <main@@Base+0x4c34>
   1aae0:	ldrb	r0, [r6, #2]!
   1aae4:	cmp	r0, #32
   1aae8:	bhi	1aafc <main@@Base+0x4c44>
   1aaec:	ldr	r2, [sp, #36]	; 0x24
   1aaf0:	mov	r0, sl
   1aaf4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1aaf8:	mov	r6, r0
   1aafc:	cmp	r9, r6
   1ab00:	beq	18904 <main@@Base+0x2a4c>
   1ab04:	ldr	r2, [sp, #36]	; 0x24
   1ab08:	mov	r4, #0
   1ab0c:	str	r4, [fp, #-52]	; 0xffffffcc
   1ab10:	str	r4, [fp, #-56]	; 0xffffffc8
   1ab14:	str	r4, [sp, #60]	; 0x3c
   1ab18:	str	r4, [sp, #48]	; 0x30
   1ab1c:	cmp	r6, r2
   1ab20:	beq	1ab7c <main@@Base+0x4cc4>
   1ab24:	sub	r0, fp, #56	; 0x38
   1ab28:	mov	r1, r6
   1ab2c:	add	r3, sp, #48	; 0x30
   1ab30:	str	r0, [sp]
   1ab34:	mov	r0, sl
   1ab38:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1ab3c:	cmp	r0, r6
   1ab40:	beq	1ab8c <main@@Base+0x4cd4>
   1ab44:	ldr	r2, [sp, #48]	; 0x30
   1ab48:	mov	r9, r0
   1ab4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ab50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ab54:	cmp	r2, #0
   1ab58:	beq	1ab9c <main@@Base+0x4ce4>
   1ab5c:	subs	r2, r0, #-2147483647	; 0x80000001
   1ab60:	sbcs	r1, r1, #0
   1ab64:	bcc	1abcc <main@@Base+0x4d14>
   1ab68:	ldr	r2, [sp, #36]	; 0x24
   1ab6c:	mov	r0, sl
   1ab70:	mov	r1, r9
   1ab74:	mov	r3, #8
   1ab78:	b	1abb8 <main@@Base+0x4d00>
   1ab7c:	mov	r9, r2
   1ab80:	cmp	r6, r9
   1ab84:	bne	1b42c <main@@Base+0x5574>
   1ab88:	b	1b3f4 <main@@Base+0x553c>
   1ab8c:	mov	r9, r6
   1ab90:	cmp	r6, r9
   1ab94:	bne	1b42c <main@@Base+0x5574>
   1ab98:	b	1b3f4 <main@@Base+0x553c>
   1ab9c:	subs	r2, r0, #-2147483648	; 0x80000000
   1aba0:	sbcs	r1, r1, #0
   1aba4:	bcc	1b3e4 <main@@Base+0x552c>
   1aba8:	ldr	r2, [sp, #36]	; 0x24
   1abac:	mov	r0, sl
   1abb0:	mov	r1, r9
   1abb4:	mov	r3, #7
   1abb8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1abbc:	mov	r9, r0
   1abc0:	cmp	r6, r9
   1abc4:	bne	1b42c <main@@Base+0x5574>
   1abc8:	b	1b3f4 <main@@Base+0x553c>
   1abcc:	rsb	r4, r0, #0
   1abd0:	b	1b3e8 <main@@Base+0x5530>
   1abd4:	bne	1abe4 <main@@Base+0x4d2c>
   1abd8:	ldrb	r0, [r8, #19]!
   1abdc:	cmp	r0, #32
   1abe0:	bhi	1abf4 <main@@Base+0x4d3c>
   1abe4:	mov	r0, sl
   1abe8:	mov	r2, r6
   1abec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1abf0:	mov	r8, r0
   1abf4:	cmp	r8, r6
   1abf8:	beq	1ac3c <main@@Base+0x4d84>
   1abfc:	ldrb	r0, [r8]
   1ac00:	cmp	r0, #58	; 0x3a
   1ac04:	bne	1ac3c <main@@Base+0x4d84>
   1ac08:	add	r1, r8, #1
   1ac0c:	sub	r0, r6, r1
   1ac10:	cmp	r0, #2
   1ac14:	blt	1c92c <main@@Base+0x6a74>
   1ac18:	ldrb	r0, [r1]
   1ac1c:	cmp	r0, #32
   1ac20:	bls	1c914 <main@@Base+0x6a5c>
   1ac24:	ldr	r6, [sp, #36]	; 0x24
   1ac28:	ldr	sl, [sp, #32]
   1ac2c:	mov	r8, r1
   1ac30:	cmp	r7, r8
   1ac34:	bne	1c944 <main@@Base+0x6a8c>
   1ac38:	b	1ea90 <main@@Base+0x8bd8>
   1ac3c:	mov	r0, sl
   1ac40:	mov	r1, r8
   1ac44:	mov	r2, r6
   1ac48:	mov	r3, #4
   1ac4c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ac50:	b	1c938 <main@@Base+0x6a80>
   1ac54:	bne	1ac64 <main@@Base+0x4dac>
   1ac58:	ldrb	r0, [r8, #11]!
   1ac5c:	cmp	r0, #32
   1ac60:	bhi	1ac74 <main@@Base+0x4dbc>
   1ac64:	mov	r0, sl
   1ac68:	mov	r2, r6
   1ac6c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ac70:	mov	r8, r0
   1ac74:	cmp	r8, r6
   1ac78:	beq	1acbc <main@@Base+0x4e04>
   1ac7c:	ldrb	r0, [r8]
   1ac80:	cmp	r0, #58	; 0x3a
   1ac84:	bne	1acbc <main@@Base+0x4e04>
   1ac88:	add	r1, r8, #1
   1ac8c:	sub	r0, r6, r1
   1ac90:	cmp	r0, #2
   1ac94:	blt	1c9e0 <main@@Base+0x6b28>
   1ac98:	ldrb	r0, [r1]
   1ac9c:	cmp	r0, #32
   1aca0:	bls	1c9c8 <main@@Base+0x6b10>
   1aca4:	ldr	r6, [sp, #36]	; 0x24
   1aca8:	ldr	sl, [sp, #32]
   1acac:	mov	r8, r1
   1acb0:	cmp	r7, r8
   1acb4:	bne	1c9f8 <main@@Base+0x6b40>
   1acb8:	b	1ea90 <main@@Base+0x8bd8>
   1acbc:	mov	r0, sl
   1acc0:	mov	r1, r8
   1acc4:	mov	r2, r6
   1acc8:	mov	r3, #4
   1accc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1acd0:	b	1c9ec <main@@Base+0x6b34>
   1acd4:	bne	1ace4 <main@@Base+0x4e2c>
   1acd8:	ldrb	r0, [r8, #11]!
   1acdc:	cmp	r0, #32
   1ace0:	bhi	1acf4 <main@@Base+0x4e3c>
   1ace4:	mov	r0, sl
   1ace8:	mov	r2, r6
   1acec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1acf0:	mov	r8, r0
   1acf4:	cmp	r8, r6
   1acf8:	beq	1ad3c <main@@Base+0x4e84>
   1acfc:	ldrb	r0, [r8]
   1ad00:	cmp	r0, #58	; 0x3a
   1ad04:	bne	1ad3c <main@@Base+0x4e84>
   1ad08:	add	r1, r8, #1
   1ad0c:	sub	r0, r6, r1
   1ad10:	cmp	r0, #2
   1ad14:	blt	1cab8 <main@@Base+0x6c00>
   1ad18:	ldrb	r0, [r1]
   1ad1c:	cmp	r0, #32
   1ad20:	bls	1caa0 <main@@Base+0x6be8>
   1ad24:	ldr	r6, [sp, #36]	; 0x24
   1ad28:	ldr	sl, [sp, #32]
   1ad2c:	mov	r8, r1
   1ad30:	cmp	r7, r8
   1ad34:	bne	1cad0 <main@@Base+0x6c18>
   1ad38:	b	1ea90 <main@@Base+0x8bd8>
   1ad3c:	mov	r0, sl
   1ad40:	mov	r1, r8
   1ad44:	mov	r2, r6
   1ad48:	mov	r3, #4
   1ad4c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ad50:	b	1cac4 <main@@Base+0x6c0c>
   1ad54:	bne	1ad64 <main@@Base+0x4eac>
   1ad58:	ldrb	r0, [r8, #2]!
   1ad5c:	cmp	r0, #32
   1ad60:	bhi	1ad74 <main@@Base+0x4ebc>
   1ad64:	mov	r0, sl
   1ad68:	mov	r2, r6
   1ad6c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ad70:	mov	r8, r0
   1ad74:	cmp	r8, r6
   1ad78:	mov	r5, r6
   1ad7c:	beq	1ad90 <main@@Base+0x4ed8>
   1ad80:	ldrb	r0, [r8]
   1ad84:	cmp	r0, #93	; 0x5d
   1ad88:	beq	1b974 <main@@Base+0x5abc>
   1ad8c:	mov	r5, r8
   1ad90:	mov	r0, #0
   1ad94:	mov	r1, #1
   1ad98:	strb	r0, [sp, #60]	; 0x3c
   1ad9c:	ldr	r0, [sl]
   1ada0:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1ada4:	cmp	r0, #0
   1ada8:	beq	1fc2c <main@@Base+0x9d74>
   1adac:	mov	r7, r0
   1adb0:	mov	r8, r5
   1adb4:	sub	r5, r6, r8
   1adb8:	cmp	r5, #4
   1adbc:	blt	1ae00 <main@@Base+0x4f48>
   1adc0:	ldr	r1, [pc, #4024]	; 1bd80 <main@@Base+0x5ec8>
   1adc4:	mov	r0, r8
   1adc8:	mov	r2, #4
   1adcc:	add	r1, pc, r1
   1add0:	bl	14eb4 <bcmp@plt>
   1add4:	cmp	r0, #0
   1add8:	beq	1ae64 <main@@Base+0x4fac>
   1addc:	cmp	r5, #5
   1ade0:	blt	1ae00 <main@@Base+0x4f48>
   1ade4:	ldr	r1, [pc, #3992]	; 1bd84 <main@@Base+0x5ecc>
   1ade8:	mov	r0, r8
   1adec:	mov	r2, #5
   1adf0:	add	r1, pc, r1
   1adf4:	bl	14eb4 <bcmp@plt>
   1adf8:	cmp	r0, #0
   1adfc:	beq	1afd8 <main@@Base+0x5120>
   1ae00:	mov	r5, #0
   1ae04:	cmp	r8, r6
   1ae08:	str	r5, [fp, #-52]	; 0xffffffcc
   1ae0c:	str	r5, [fp, #-56]	; 0xffffffc8
   1ae10:	str	r5, [sp, #48]	; 0x30
   1ae14:	beq	1ae5c <main@@Base+0x4fa4>
   1ae18:	sub	r0, fp, #56	; 0x38
   1ae1c:	mov	r1, r8
   1ae20:	mov	r2, r6
   1ae24:	add	r3, sp, #48	; 0x30
   1ae28:	str	r0, [sp]
   1ae2c:	mov	r0, sl
   1ae30:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1ae34:	cmp	r0, r8
   1ae38:	beq	1ae70 <main@@Base+0x4fb8>
   1ae3c:	mov	r1, r0
   1ae40:	ldr	r0, [sp, #48]	; 0x30
   1ae44:	cmp	r0, #0
   1ae48:	beq	1ae78 <main@@Base+0x4fc0>
   1ae4c:	mov	r0, sl
   1ae50:	mov	r2, r6
   1ae54:	mov	r3, #8
   1ae58:	b	1ae98 <main@@Base+0x4fe0>
   1ae5c:	mov	r1, r6
   1ae60:	b	1aea0 <main@@Base+0x4fe8>
   1ae64:	mov	r0, #1
   1ae68:	add	r1, r8, #4
   1ae6c:	b	1aeac <main@@Base+0x4ff4>
   1ae70:	mov	r1, r8
   1ae74:	b	1aea0 <main@@Base+0x4fe8>
   1ae78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ae7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ae80:	subs	r3, r0, #256	; 0x100
   1ae84:	sbcs	r2, r2, #0
   1ae88:	bcc	1afe4 <main@@Base+0x512c>
   1ae8c:	mov	r0, sl
   1ae90:	mov	r2, r6
   1ae94:	mov	r3, #7
   1ae98:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ae9c:	mov	r1, r0
   1aea0:	uxtb	r0, r5
   1aea4:	cmp	r0, #0
   1aea8:	movwne	r0, #1
   1aeac:	strb	r0, [sp, #60]	; 0x3c
   1aeb0:	cmp	r8, r1
   1aeb4:	bne	1aef0 <main@@Base+0x5038>
   1aeb8:	add	r0, sp, #60	; 0x3c
   1aebc:	mov	r1, r8
   1aec0:	mov	r2, r6
   1aec4:	str	r0, [sp]
   1aec8:	mov	r0, sl
   1aecc:	ldr	r3, [pc, #4040]	; 1be9c <main@@Base+0x5fe4>
   1aed0:	add	r3, pc, r3
   1aed4:	bl	23c18 <main@@Base+0xdd60>
   1aed8:	mov	r1, r0
   1aedc:	cmp	r0, r8
   1aee0:	beq	1fc24 <main@@Base+0x9d6c>
   1aee4:	cmp	r1, r6
   1aee8:	beq	1fc24 <main@@Base+0x9d6c>
   1aeec:	ldrb	r0, [sp, #60]	; 0x3c
   1aef0:	strb	r0, [r7]
   1aef4:	sub	r0, r6, r1
   1aef8:	cmp	r0, #2
   1aefc:	blt	1af30 <main@@Base+0x5078>
   1af00:	ldrb	r0, [r1]
   1af04:	cmp	r0, #32
   1af08:	bls	1af1c <main@@Base+0x5064>
   1af0c:	mov	r8, r1
   1af10:	cmp	r8, r6
   1af14:	bne	1af48 <main@@Base+0x5090>
   1af18:	b	1b95c <main@@Base+0x5aa4>
   1af1c:	bne	1af30 <main@@Base+0x5078>
   1af20:	mov	r8, r1
   1af24:	ldrb	r0, [r8, #1]!
   1af28:	cmp	r0, #32
   1af2c:	bhi	1af40 <main@@Base+0x5088>
   1af30:	mov	r0, sl
   1af34:	mov	r2, r6
   1af38:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1af3c:	mov	r8, r0
   1af40:	cmp	r8, r6
   1af44:	beq	1b95c <main@@Base+0x5aa4>
   1af48:	ldrb	r0, [r8]
   1af4c:	cmp	r0, #44	; 0x2c
   1af50:	bne	1b964 <main@@Base+0x5aac>
   1af54:	add	r1, r8, #1
   1af58:	sub	r0, r6, r1
   1af5c:	cmp	r0, #2
   1af60:	blt	1af90 <main@@Base+0x50d8>
   1af64:	ldrb	r0, [r1]
   1af68:	cmp	r0, #32
   1af6c:	bls	1af80 <main@@Base+0x50c8>
   1af70:	mov	r8, r1
   1af74:	cmp	r8, r6
   1af78:	bne	1afa8 <main@@Base+0x50f0>
   1af7c:	b	1ba4c <main@@Base+0x5b94>
   1af80:	bne	1af90 <main@@Base+0x50d8>
   1af84:	ldrb	r0, [r8, #2]!
   1af88:	cmp	r0, #32
   1af8c:	bhi	1afa0 <main@@Base+0x50e8>
   1af90:	mov	r0, sl
   1af94:	mov	r2, r6
   1af98:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1af9c:	mov	r8, r0
   1afa0:	cmp	r8, r6
   1afa4:	beq	1ba4c <main@@Base+0x5b94>
   1afa8:	ldrb	r0, [r8]
   1afac:	cmp	r0, #93	; 0x5d
   1afb0:	beq	1b974 <main@@Base+0x5abc>
   1afb4:	mov	r0, #0
   1afb8:	mov	r1, #1
   1afbc:	strb	r0, [sp, #60]	; 0x3c
   1afc0:	ldr	r0, [sl]
   1afc4:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1afc8:	mov	r7, r0
   1afcc:	cmp	r0, #0
   1afd0:	bne	1adb4 <main@@Base+0x4efc>
   1afd4:	b	168a4 <main@@Base+0x9ec>
   1afd8:	mov	r0, #0
   1afdc:	add	r1, r8, #5
   1afe0:	b	1aeac <main@@Base+0x4ff4>
   1afe4:	mov	r5, r0
   1afe8:	b	1aea0 <main@@Base+0x4fe8>
   1afec:	bne	1b000 <main@@Base+0x5148>
   1aff0:	mov	r9, r8
   1aff4:	ldrb	r0, [r9, #17]!
   1aff8:	cmp	r0, #32
   1affc:	bhi	1b010 <main@@Base+0x5158>
   1b000:	ldr	r0, [sp, #32]
   1b004:	mov	r2, r6
   1b008:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b00c:	mov	r9, r0
   1b010:	cmp	r9, r6
   1b014:	beq	1b060 <main@@Base+0x51a8>
   1b018:	ldrb	r0, [r9]
   1b01c:	cmp	r0, #58	; 0x3a
   1b020:	bne	1b060 <main@@Base+0x51a8>
   1b024:	add	r1, r9, #1
   1b028:	sub	r0, r6, r1
   1b02c:	cmp	r0, #2
   1b030:	blt	1cba8 <main@@Base+0x6cf0>
   1b034:	ldrb	r0, [r1]
   1b038:	cmp	r0, #32
   1b03c:	bls	1cb94 <main@@Base+0x6cdc>
   1b040:	ldr	r6, [sp, #36]	; 0x24
   1b044:	mov	r9, r1
   1b048:	cmp	sl, r9
   1b04c:	bne	1cbc0 <main@@Base+0x6d08>
   1b050:	ldr	r0, [sp, #32]
   1b054:	mov	r1, sl
   1b058:	mov	sl, r0
   1b05c:	b	1ea98 <main@@Base+0x8be0>
   1b060:	ldr	r0, [sp, #32]
   1b064:	mov	r1, r9
   1b068:	mov	r2, r6
   1b06c:	mov	r3, #4
   1b070:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b074:	b	1cbb4 <main@@Base+0x6cfc>
   1b078:	bne	1b08c <main@@Base+0x51d4>
   1b07c:	mov	r9, r8
   1b080:	ldrb	r0, [r9, #22]!
   1b084:	cmp	r0, #32
   1b088:	bhi	1b09c <main@@Base+0x51e4>
   1b08c:	mov	r0, sl
   1b090:	mov	r2, r6
   1b094:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b098:	mov	r9, r0
   1b09c:	cmp	r9, r6
   1b0a0:	beq	1b0e4 <main@@Base+0x522c>
   1b0a4:	ldrb	r0, [r9]
   1b0a8:	cmp	r0, #58	; 0x3a
   1b0ac:	bne	1b0e4 <main@@Base+0x522c>
   1b0b0:	add	r1, r9, #1
   1b0b4:	sub	r0, r6, r1
   1b0b8:	cmp	r0, #2
   1b0bc:	blt	1cd84 <main@@Base+0x6ecc>
   1b0c0:	ldrb	r0, [r1]
   1b0c4:	cmp	r0, #32
   1b0c8:	bls	1cd6c <main@@Base+0x6eb4>
   1b0cc:	ldr	r6, [sp, #36]	; 0x24
   1b0d0:	ldr	sl, [sp, #32]
   1b0d4:	mov	r9, r1
   1b0d8:	cmp	r7, r9
   1b0dc:	bne	1cd9c <main@@Base+0x6ee4>
   1b0e0:	b	1ea90 <main@@Base+0x8bd8>
   1b0e4:	mov	r0, sl
   1b0e8:	mov	r1, r9
   1b0ec:	mov	r2, r6
   1b0f0:	mov	r3, #4
   1b0f4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b0f8:	b	1cd90 <main@@Base+0x6ed8>
   1b0fc:	bne	1b10c <main@@Base+0x5254>
   1b100:	ldrb	r0, [r8, #19]!
   1b104:	cmp	r0, #32
   1b108:	bhi	1b11c <main@@Base+0x5264>
   1b10c:	mov	r0, sl
   1b110:	mov	r2, r6
   1b114:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b118:	mov	r8, r0
   1b11c:	cmp	r8, r6
   1b120:	beq	1b164 <main@@Base+0x52ac>
   1b124:	ldrb	r0, [r8]
   1b128:	cmp	r0, #58	; 0x3a
   1b12c:	bne	1b164 <main@@Base+0x52ac>
   1b130:	add	r1, r8, #1
   1b134:	sub	r0, r6, r1
   1b138:	cmp	r0, #2
   1b13c:	blt	1ce7c <main@@Base+0x6fc4>
   1b140:	ldrb	r0, [r1]
   1b144:	cmp	r0, #32
   1b148:	bls	1ce64 <main@@Base+0x6fac>
   1b14c:	ldr	r6, [sp, #36]	; 0x24
   1b150:	ldr	sl, [sp, #32]
   1b154:	mov	r8, r1
   1b158:	cmp	r7, r8
   1b15c:	bne	1ce94 <main@@Base+0x6fdc>
   1b160:	b	1ea90 <main@@Base+0x8bd8>
   1b164:	mov	r0, sl
   1b168:	mov	r1, r8
   1b16c:	mov	r2, r6
   1b170:	mov	r3, #4
   1b174:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b178:	b	1ce88 <main@@Base+0x6fd0>
   1b17c:	bne	1b18c <main@@Base+0x52d4>
   1b180:	ldrb	r0, [r8, #2]!
   1b184:	cmp	r0, #32
   1b188:	bhi	1b19c <main@@Base+0x52e4>
   1b18c:	mov	r0, sl
   1b190:	mov	r2, r6
   1b194:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b198:	mov	r8, r0
   1b19c:	cmp	r7, r8
   1b1a0:	beq	1ea90 <main@@Base+0x8bd8>
   1b1a4:	mov	r0, #0
   1b1a8:	mov	r1, #3
   1b1ac:	str	r0, [sp, #44]	; 0x2c
   1b1b0:	ldr	r0, [sl]
   1b1b4:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   1b1b8:	cmp	r0, #0
   1b1bc:	bne	1b220 <main@@Base+0x5368>
   1b1c0:	cmp	r8, r6
   1b1c4:	beq	1b1fc <main@@Base+0x5344>
   1b1c8:	ldrb	r0, [r8]
   1b1cc:	cmp	r0, #123	; 0x7b
   1b1d0:	bne	1b1fc <main@@Base+0x5344>
   1b1d4:	add	r1, r8, #1
   1b1d8:	sub	r0, r6, r1
   1b1dc:	cmp	r0, #2
   1b1e0:	blt	1d668 <main@@Base+0x77b0>
   1b1e4:	ldrb	r0, [r1]
   1b1e8:	cmp	r0, #32
   1b1ec:	bls	1d650 <main@@Base+0x7798>
   1b1f0:	ldr	r6, [sp, #36]	; 0x24
   1b1f4:	mov	r8, r1
   1b1f8:	b	1d678 <main@@Base+0x77c0>
   1b1fc:	mov	r0, sl
   1b200:	mov	r1, r8
   1b204:	mov	r2, r6
   1b208:	mov	r3, #21
   1b20c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b210:	mov	r8, r0
   1b214:	ldr	r0, [sl, #20]
   1b218:	cmp	r0, #0
   1b21c:	beq	1b250 <main@@Base+0x5398>
   1b220:	mov	r0, sl
   1b224:	mov	r1, r8
   1b228:	mov	r2, r6
   1b22c:	mov	r3, #33	; 0x21
   1b230:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b234:	mov	r8, r0
   1b238:	ldr	r0, [sp, #44]	; 0x2c
   1b23c:	cmp	r0, #0
   1b240:	beq	168a4 <main@@Base+0x9ec>
   1b244:	ldr	r0, [sl]
   1b248:	mov	r1, #35	; 0x23
   1b24c:	b	1f78c <main@@Base+0x98d4>
   1b250:	ldr	r0, [sl]
   1b254:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   1b258:	cmp	r0, #0
   1b25c:	str	r0, [sp, #44]	; 0x2c
   1b260:	bne	1b244 <main@@Base+0x538c>
   1b264:	b	1b220 <main@@Base+0x5368>
   1b268:	andeq	r1, r4, ip, lsr #30
   1b26c:	mov	r0, sl
   1b270:	mov	r1, r2
   1b274:	mov	r2, r6
   1b278:	mov	r3, #10
   1b27c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b280:	b	1eaa0 <main@@Base+0x8be8>
   1b284:	bne	1b294 <main@@Base+0x53dc>
   1b288:	ldrb	r0, [r8, #2]!
   1b28c:	cmp	r0, #32
   1b290:	bhi	1b2a4 <main@@Base+0x53ec>
   1b294:	mov	r0, sl
   1b298:	mov	r2, r6
   1b29c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b2a0:	mov	r8, r0
   1b2a4:	cmp	r7, r8
   1b2a8:	beq	1ea90 <main@@Base+0x8bd8>
   1b2ac:	ldr	r0, [sl]
   1b2b0:	bl	2ed1c <flatcc_builder_start_offset_vector@@Base>
   1b2b4:	cmp	r0, #0
   1b2b8:	bne	168a4 <main@@Base+0x9ec>
   1b2bc:	cmp	r8, r6
   1b2c0:	beq	1b2f8 <main@@Base+0x5440>
   1b2c4:	ldrb	r0, [r8]
   1b2c8:	cmp	r0, #91	; 0x5b
   1b2cc:	bne	1b2f8 <main@@Base+0x5440>
   1b2d0:	add	r1, r8, #1
   1b2d4:	sub	r0, r6, r1
   1b2d8:	cmp	r0, #2
   1b2dc:	blt	1ba68 <main@@Base+0x5bb0>
   1b2e0:	ldrb	r0, [r1]
   1b2e4:	cmp	r0, #32
   1b2e8:	bls	1ba58 <main@@Base+0x5ba0>
   1b2ec:	mov	r8, r1
   1b2f0:	b	1ba78 <main@@Base+0x5bc0>
   1b2f4:	andeq	r1, r4, r8, lsr #29
   1b2f8:	mov	r0, sl
   1b2fc:	mov	r1, r8
   1b300:	mov	r2, r6
   1b304:	mov	r3, #22
   1b308:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b30c:	mov	r8, r0
   1b310:	ldr	r0, [sl]
   1b314:	bl	2ef04 <flatcc_builder_end_offset_vector@@Base>
   1b318:	cmp	r0, #0
   1b31c:	str	r0, [sp, #44]	; 0x2c
   1b320:	beq	168a4 <main@@Base+0x9ec>
   1b324:	ldr	r0, [sl]
   1b328:	mov	r1, #28
   1b32c:	b	1f78c <main@@Base+0x98d4>
   1b330:	bne	1b340 <main@@Base+0x5488>
   1b334:	ldrb	r0, [r8, #2]!
   1b338:	cmp	r0, #32
   1b33c:	bhi	1b350 <main@@Base+0x5498>
   1b340:	mov	r0, sl
   1b344:	mov	r2, r6
   1b348:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b34c:	mov	r8, r0
   1b350:	cmp	r9, r8
   1b354:	beq	18704 <main@@Base+0x284c>
   1b358:	ldr	r0, [sl]
   1b35c:	mov	r1, #8
   1b360:	mov	r2, #4
   1b364:	mvn	r3, #-536870912	; 0xe0000000
   1b368:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   1b36c:	cmp	r0, #0
   1b370:	bne	168a4 <main@@Base+0x9ec>
   1b374:	cmp	r8, r6
   1b378:	beq	1b3ac <main@@Base+0x54f4>
   1b37c:	ldrb	r0, [r8]
   1b380:	cmp	r0, #91	; 0x5b
   1b384:	bne	1b3ac <main@@Base+0x54f4>
   1b388:	add	r1, r8, #1
   1b38c:	sub	r0, r6, r1
   1b390:	cmp	r0, #2
   1b394:	blt	1bbe8 <main@@Base+0x5d30>
   1b398:	ldrb	r0, [r1]
   1b39c:	cmp	r0, #32
   1b3a0:	bls	1bbd4 <main@@Base+0x5d1c>
   1b3a4:	mov	r9, r1
   1b3a8:	b	1bbf8 <main@@Base+0x5d40>
   1b3ac:	mov	r0, sl
   1b3b0:	mov	r1, r8
   1b3b4:	mov	r2, r6
   1b3b8:	mov	r3, #22
   1b3bc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b3c0:	mov	r9, r0
   1b3c4:	ldr	r0, [sl]
   1b3c8:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   1b3cc:	cmp	r0, #0
   1b3d0:	str	r0, [sp, #44]	; 0x2c
   1b3d4:	beq	1fc38 <main@@Base+0x9d80>
   1b3d8:	ldr	r0, [sl]
   1b3dc:	mov	r1, #29
   1b3e0:	b	19428 <main@@Base+0x3570>
   1b3e4:	mov	r4, r0
   1b3e8:	str	r4, [sp, #60]	; 0x3c
   1b3ec:	cmp	r6, r9
   1b3f0:	bne	1b42c <main@@Base+0x5574>
   1b3f4:	add	r0, sp, #60	; 0x3c
   1b3f8:	ldr	r4, [sp, #36]	; 0x24
   1b3fc:	mov	r1, r6
   1b400:	str	r0, [sp]
   1b404:	mov	r0, sl
   1b408:	ldr	r3, [pc, #4012]	; 1c3bc <main@@Base+0x6504>
   1b40c:	mov	r2, r4
   1b410:	add	r3, pc, r3
   1b414:	bl	23f4c <main@@Base+0xe094>
   1b418:	mov	r9, r0
   1b41c:	cmp	r0, r6
   1b420:	cmpne	r9, r4
   1b424:	beq	1fc08 <main@@Base+0x9d50>
   1b428:	ldr	r4, [sp, #60]	; 0x3c
   1b42c:	ldr	r6, [sp, #36]	; 0x24
   1b430:	cmp	r4, #0
   1b434:	bne	1b444 <main@@Base+0x558c>
   1b438:	ldrb	r0, [sl, #8]
   1b43c:	tst	r0, #2
   1b440:	beq	1eaa4 <main@@Base+0x8bec>
   1b444:	ldr	r0, [sl]
   1b448:	mov	r1, #16
   1b44c:	b	1c778 <main@@Base+0x68c0>
   1b450:	andeq	r1, r4, r8, asr #25
   1b454:	bne	1b464 <main@@Base+0x55ac>
   1b458:	ldrb	r0, [r7, #2]!
   1b45c:	cmp	r0, #32
   1b460:	bhi	1b474 <main@@Base+0x55bc>
   1b464:	mov	r0, sl
   1b468:	mov	r2, r6
   1b46c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b470:	mov	r7, r0
   1b474:	cmp	r8, r7
   1b478:	beq	193e4 <main@@Base+0x352c>
   1b47c:	mov	r4, #0
   1b480:	cmp	r7, r6
   1b484:	str	r4, [fp, #-52]	; 0xffffffcc
   1b488:	str	r4, [fp, #-56]	; 0xffffffc8
   1b48c:	strh	r4, [sp, #60]	; 0x3c
   1b490:	str	r4, [sp, #48]	; 0x30
   1b494:	beq	1b4f8 <main@@Base+0x5640>
   1b498:	sub	r0, fp, #56	; 0x38
   1b49c:	mov	r1, r7
   1b4a0:	mov	r2, r6
   1b4a4:	add	r3, sp, #48	; 0x30
   1b4a8:	str	r0, [sp]
   1b4ac:	mov	r0, sl
   1b4b0:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1b4b4:	cmp	r0, r7
   1b4b8:	beq	1b508 <main@@Base+0x5650>
   1b4bc:	ldr	r2, [sp, #48]	; 0x30
   1b4c0:	mov	r9, r0
   1b4c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b4c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1b4cc:	cmp	r2, #0
   1b4d0:	beq	1b518 <main@@Base+0x5660>
   1b4d4:	movw	r2, #32769	; 0x8001
   1b4d8:	subs	r2, r0, r2
   1b4dc:	sbcs	r1, r1, #0
   1b4e0:	bcc	1b548 <main@@Base+0x5690>
   1b4e4:	mov	r0, sl
   1b4e8:	mov	r1, r9
   1b4ec:	mov	r2, r6
   1b4f0:	mov	r3, #8
   1b4f4:	b	1b534 <main@@Base+0x567c>
   1b4f8:	mov	r9, r6
   1b4fc:	cmp	r7, r9
   1b500:	bne	1b598 <main@@Base+0x56e0>
   1b504:	b	1b564 <main@@Base+0x56ac>
   1b508:	mov	r9, r7
   1b50c:	cmp	r7, r9
   1b510:	bne	1b598 <main@@Base+0x56e0>
   1b514:	b	1b564 <main@@Base+0x56ac>
   1b518:	subs	r2, r0, #32768	; 0x8000
   1b51c:	sbcs	r1, r1, #0
   1b520:	bcc	1b554 <main@@Base+0x569c>
   1b524:	mov	r0, sl
   1b528:	mov	r1, r9
   1b52c:	mov	r2, r6
   1b530:	mov	r3, #7
   1b534:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b538:	mov	r9, r0
   1b53c:	cmp	r7, r9
   1b540:	bne	1b598 <main@@Base+0x56e0>
   1b544:	b	1b564 <main@@Base+0x56ac>
   1b548:	rsb	r4, r0, #0
   1b54c:	b	1b558 <main@@Base+0x56a0>
   1b550:	andeq	r1, r4, r4, asr #24
   1b554:	mov	r4, r0
   1b558:	strh	r4, [sp, #60]	; 0x3c
   1b55c:	cmp	r7, r9
   1b560:	bne	1b598 <main@@Base+0x56e0>
   1b564:	add	r0, sp, #60	; 0x3c
   1b568:	mov	r1, r7
   1b56c:	mov	r2, r6
   1b570:	str	r0, [sp]
   1b574:	mov	r0, sl
   1b578:	ldr	r3, [pc, #4076]	; 1c56c <main@@Base+0x66b4>
   1b57c:	add	r3, pc, r3
   1b580:	bl	21f64 <main@@Base+0xc0ac>
   1b584:	mov	r9, r0
   1b588:	cmp	r0, r7
   1b58c:	cmpne	r9, r6
   1b590:	beq	1fc08 <main@@Base+0x9d50>
   1b594:	ldrh	r4, [sp, #60]	; 0x3c
   1b598:	uxth	r0, r4
   1b59c:	cmp	r0, #150	; 0x96
   1b5a0:	bne	1b5b0 <main@@Base+0x56f8>
   1b5a4:	ldrb	r0, [sl, #8]
   1b5a8:	tst	r0, #2
   1b5ac:	beq	1eaa4 <main@@Base+0x8bec>
   1b5b0:	ldr	r0, [sl]
   1b5b4:	mov	r1, #1
   1b5b8:	mov	r2, #2
   1b5bc:	mov	r3, #2
   1b5c0:	bl	3063c <flatcc_builder_table_add@@Base>
   1b5c4:	cmp	r0, #0
   1b5c8:	beq	1fc08 <main@@Base+0x9d50>
   1b5cc:	strh	r4, [r0]
   1b5d0:	b	1eaa4 <main@@Base+0x8bec>
   1b5d4:	andeq	r1, r4, r0, asr #23
   1b5d8:	bne	1b5e8 <main@@Base+0x5730>
   1b5dc:	ldrb	r0, [r7, #2]!
   1b5e0:	cmp	r0, #32
   1b5e4:	bhi	1b5f8 <main@@Base+0x5740>
   1b5e8:	mov	r0, sl
   1b5ec:	mov	r2, r6
   1b5f0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b5f4:	mov	r7, r0
   1b5f8:	cmp	r8, r7
   1b5fc:	beq	193e4 <main@@Base+0x352c>
   1b600:	mov	r0, #0
   1b604:	mov	r1, r7
   1b608:	mov	r2, r6
   1b60c:	sub	r3, fp, #56	; 0x38
   1b610:	str	r0, [fp, #-56]	; 0xffffffc8
   1b614:	mov	r0, sl
   1b618:	bl	36160 <flatcc_json_parser_float@@Base>
   1b61c:	mov	r9, r0
   1b620:	cmp	r7, r0
   1b624:	bne	1b658 <main@@Base+0x57a0>
   1b628:	sub	r0, fp, #56	; 0x38
   1b62c:	mov	r1, r7
   1b630:	mov	r2, r6
   1b634:	str	r0, [sp]
   1b638:	mov	r0, sl
   1b63c:	ldr	r3, [pc, #4092]	; 1c640 <main@@Base+0x6788>
   1b640:	add	r3, pc, r3
   1b644:	bl	23dcc <main@@Base+0xdf14>
   1b648:	mov	r9, r0
   1b64c:	cmp	r0, r7
   1b650:	cmpne	r9, r6
   1b654:	beq	1fc38 <main@@Base+0x9d80>
   1b658:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1b65c:	vcmp.f32	s0, s18
   1b660:	vmrs	APSR_nzcv, fpscr
   1b664:	bne	1b674 <main@@Base+0x57bc>
   1b668:	ldrb	r0, [sl, #8]
   1b66c:	tst	r0, #2
   1b670:	beq	1eaa4 <main@@Base+0x8bec>
   1b674:	ldr	r0, [sl]
   1b678:	mov	r1, #25
   1b67c:	b	18430 <main@@Base+0x2578>
   1b680:	bne	1b690 <main@@Base+0x57d8>
   1b684:	ldrb	r0, [r6, #2]!
   1b688:	cmp	r0, #32
   1b68c:	bhi	1b6a0 <main@@Base+0x57e8>
   1b690:	ldr	r2, [sp, #36]	; 0x24
   1b694:	mov	r0, sl
   1b698:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b69c:	mov	r6, r0
   1b6a0:	cmp	r9, r6
   1b6a4:	beq	19254 <main@@Base+0x339c>
   1b6a8:	ldr	r2, [sp, #36]	; 0x24
   1b6ac:	mov	r4, #0
   1b6b0:	str	r4, [fp, #-52]	; 0xffffffcc
   1b6b4:	str	r4, [fp, #-56]	; 0xffffffc8
   1b6b8:	str	r4, [sp, #52]	; 0x34
   1b6bc:	str	r4, [sp, #48]	; 0x30
   1b6c0:	str	r4, [sp, #60]	; 0x3c
   1b6c4:	cmp	r6, r2
   1b6c8:	beq	1b724 <main@@Base+0x586c>
   1b6cc:	sub	r0, fp, #56	; 0x38
   1b6d0:	mov	r1, r6
   1b6d4:	add	r3, sp, #60	; 0x3c
   1b6d8:	str	r0, [sp]
   1b6dc:	mov	r0, sl
   1b6e0:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1b6e4:	cmp	r0, r6
   1b6e8:	beq	1b738 <main@@Base+0x5880>
   1b6ec:	mov	r9, r0
   1b6f0:	ldr	r0, [sp, #60]	; 0x3c
   1b6f4:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1b6f8:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1b6fc:	cmp	r0, #0
   1b700:	beq	1b750 <main@@Base+0x5898>
   1b704:	subs	r0, r4, #1
   1b708:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1b70c:	bcc	1b784 <main@@Base+0x58cc>
   1b710:	ldr	r2, [sp, #36]	; 0x24
   1b714:	mov	r0, sl
   1b718:	mov	r1, r9
   1b71c:	mov	r3, #8
   1b720:	b	1b768 <main@@Base+0x58b0>
   1b724:	mov	r5, #0
   1b728:	mov	r9, r2
   1b72c:	cmp	r6, r9
   1b730:	bne	1b7d8 <main@@Base+0x5920>
   1b734:	b	1b79c <main@@Base+0x58e4>
   1b738:	mov	r4, #0
   1b73c:	mov	r5, #0
   1b740:	mov	r9, r6
   1b744:	cmp	r6, r9
   1b748:	bne	1b7d8 <main@@Base+0x5920>
   1b74c:	b	1b79c <main@@Base+0x58e4>
   1b750:	cmn	r5, #1
   1b754:	bgt	1b78c <main@@Base+0x58d4>
   1b758:	ldr	r2, [sp, #36]	; 0x24
   1b75c:	mov	r0, sl
   1b760:	mov	r1, r9
   1b764:	mov	r3, #7
   1b768:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b76c:	mov	r9, r0
   1b770:	mov	r4, #0
   1b774:	mov	r5, #0
   1b778:	cmp	r6, r9
   1b77c:	bne	1b7d8 <main@@Base+0x5920>
   1b780:	b	1b79c <main@@Base+0x58e4>
   1b784:	rsbs	r4, r4, #0
   1b788:	rsc	r5, r5, #0
   1b78c:	str	r4, [sp, #48]	; 0x30
   1b790:	str	r5, [sp, #52]	; 0x34
   1b794:	cmp	r6, r9
   1b798:	bne	1b7d8 <main@@Base+0x5920>
   1b79c:	add	r0, sp, #48	; 0x30
   1b7a0:	ldr	r4, [sp, #36]	; 0x24
   1b7a4:	mov	r1, r6
   1b7a8:	str	r0, [sp]
   1b7ac:	mov	r0, sl
   1b7b0:	ldr	r3, [pc, #4060]	; 1c794 <main@@Base+0x68dc>
   1b7b4:	mov	r2, r4
   1b7b8:	add	r3, pc, r3
   1b7bc:	bl	24138 <main@@Base+0xe280>
   1b7c0:	mov	r9, r0
   1b7c4:	cmp	r0, r6
   1b7c8:	cmpne	r9, r4
   1b7cc:	beq	1fc08 <main@@Base+0x9d50>
   1b7d0:	ldr	r4, [sp, #48]	; 0x30
   1b7d4:	ldr	r5, [sp, #52]	; 0x34
   1b7d8:	ldr	r6, [sp, #36]	; 0x24
   1b7dc:	orrs	r0, r4, r5
   1b7e0:	bne	1b7f0 <main@@Base+0x5938>
   1b7e4:	ldrb	r0, [sl, #8]
   1b7e8:	tst	r0, #2
   1b7ec:	beq	1eaa4 <main@@Base+0x8bec>
   1b7f0:	ldr	r0, [sl]
   1b7f4:	mov	r1, #18
   1b7f8:	b	1c8f0 <main@@Base+0x6a38>
   1b7fc:	beq	1cb74 <main@@Base+0x6cbc>
   1b800:	b	1cb84 <main@@Base+0x6ccc>
   1b804:	andeq	r1, r4, r0, ror #17
   1b808:	bne	1b818 <main@@Base+0x5960>
   1b80c:	ldrb	r0, [r8, #2]!
   1b810:	cmp	r0, #32
   1b814:	bhi	1b828 <main@@Base+0x5970>
   1b818:	mov	r0, sl
   1b81c:	mov	r2, r6
   1b820:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b824:	mov	r8, r0
   1b828:	cmp	r7, r8
   1b82c:	beq	1ea90 <main@@Base+0x8bd8>
   1b830:	ldr	r0, [sp, #40]	; 0x28
   1b834:	mov	r1, #8
   1b838:	mov	r2, r6
   1b83c:	mov	r3, #0
   1b840:	str	r1, [sp]
   1b844:	mov	r1, r8
   1b848:	str	r0, [sp, #4]
   1b84c:	ldr	r0, [pc, #4076]	; 1c840 <main@@Base+0x6988>
   1b850:	add	r0, pc, r0
   1b854:	str	r0, [sp, #8]
   1b858:	ldr	r0, [pc, #4088]	; 1c858 <main@@Base+0x69a0>
   1b85c:	add	r0, pc, r0
   1b860:	str	r0, [sp, #12]
   1b864:	mov	r0, sl
   1b868:	bl	36d68 <flatcc_json_parser_union_type@@Base>
   1b86c:	b	1eaa0 <main@@Base+0x8be8>
   1b870:	bne	1b880 <main@@Base+0x59c8>
   1b874:	ldrb	r0, [r8, #2]!
   1b878:	cmp	r0, #32
   1b87c:	bhi	1b890 <main@@Base+0x59d8>
   1b880:	mov	r0, sl
   1b884:	mov	r2, r6
   1b888:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b88c:	mov	r8, r0
   1b890:	cmp	r9, r8
   1b894:	beq	18704 <main@@Base+0x284c>
   1b898:	mov	r0, #0
   1b89c:	mov	r1, #0
   1b8a0:	str	r0, [sp, #44]	; 0x2c
   1b8a4:	ldr	r0, [sl]
   1b8a8:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   1b8ac:	cmp	r0, #0
   1b8b0:	bne	1b914 <main@@Base+0x5a5c>
   1b8b4:	cmp	r8, r6
   1b8b8:	beq	1b8f0 <main@@Base+0x5a38>
   1b8bc:	ldrb	r0, [r8]
   1b8c0:	cmp	r0, #123	; 0x7b
   1b8c4:	bne	1b8f0 <main@@Base+0x5a38>
   1b8c8:	add	r1, r8, #1
   1b8cc:	sub	r0, r6, r1
   1b8d0:	cmp	r0, #2
   1b8d4:	blt	1e23c <main@@Base+0x8384>
   1b8d8:	ldrb	r0, [r1]
   1b8dc:	cmp	r0, #32
   1b8e0:	bls	1e228 <main@@Base+0x8370>
   1b8e4:	ldr	r6, [sp, #36]	; 0x24
   1b8e8:	mov	r8, r1
   1b8ec:	b	1e24c <main@@Base+0x8394>
   1b8f0:	mov	r0, sl
   1b8f4:	mov	r1, r8
   1b8f8:	mov	r2, r6
   1b8fc:	mov	r3, #21
   1b900:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b904:	mov	r8, r0
   1b908:	ldr	r0, [sl, #20]
   1b90c:	cmp	r0, #0
   1b910:	beq	1b944 <main@@Base+0x5a8c>
   1b914:	mov	r0, sl
   1b918:	mov	r1, r8
   1b91c:	mov	r2, r6
   1b920:	mov	r3, #33	; 0x21
   1b924:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1b928:	mov	r8, r0
   1b92c:	ldr	r0, [sp, #44]	; 0x2c
   1b930:	cmp	r0, #0
   1b934:	beq	168a4 <main@@Base+0x9ec>
   1b938:	ldr	r0, [sl]
   1b93c:	mov	r1, #34	; 0x22
   1b940:	b	1f78c <main@@Base+0x98d4>
   1b944:	ldr	r0, [sl]
   1b948:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   1b94c:	cmp	r0, #0
   1b950:	str	r0, [sp, #44]	; 0x2c
   1b954:	bne	1b938 <main@@Base+0x5a80>
   1b958:	b	1b914 <main@@Base+0x5a5c>
   1b95c:	mov	r8, r6
   1b960:	b	19960 <main@@Base+0x3aa8>
   1b964:	cmp	r0, #93	; 0x5d
   1b968:	bne	1cf68 <main@@Base+0x70b0>
   1b96c:	ldr	r6, [sp, #36]	; 0x24
   1b970:	ldr	sl, [sp, #32]
   1b974:	add	r1, r8, #1
   1b978:	sub	r0, r6, r1
   1b97c:	cmp	r0, #2
   1b980:	blt	1ba3c <main@@Base+0x5b84>
   1b984:	ldrb	r0, [r1]
   1b988:	cmp	r0, #32
   1b98c:	bls	1ba24 <main@@Base+0x5b6c>
   1b990:	ldr	r6, [sp, #36]	; 0x24
   1b994:	ldr	sl, [sp, #32]
   1b998:	mov	r8, r1
   1b99c:	b	19960 <main@@Base+0x3aa8>
   1b9a0:	bne	1b9b4 <main@@Base+0x5afc>
   1b9a4:	mov	r9, r8
   1b9a8:	ldrb	r0, [r9, #19]!
   1b9ac:	cmp	r0, #32
   1b9b0:	bhi	1b9c4 <main@@Base+0x5b0c>
   1b9b4:	mov	r0, sl
   1b9b8:	mov	r2, r6
   1b9bc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1b9c0:	mov	r9, r0
   1b9c4:	cmp	r9, r6
   1b9c8:	beq	1ba0c <main@@Base+0x5b54>
   1b9cc:	ldrb	r0, [r9]
   1b9d0:	cmp	r0, #58	; 0x3a
   1b9d4:	bne	1ba0c <main@@Base+0x5b54>
   1b9d8:	add	r1, r9, #1
   1b9dc:	sub	r0, r6, r1
   1b9e0:	cmp	r0, #2
   1b9e4:	blt	1dfd4 <main@@Base+0x811c>
   1b9e8:	ldrb	r0, [r1]
   1b9ec:	cmp	r0, #32
   1b9f0:	bls	1dfbc <main@@Base+0x8104>
   1b9f4:	ldr	r6, [sp, #36]	; 0x24
   1b9f8:	ldr	sl, [sp, #32]
   1b9fc:	mov	r9, r1
   1ba00:	cmp	r7, r9
   1ba04:	bne	1dfec <main@@Base+0x8134>
   1ba08:	b	1ea90 <main@@Base+0x8bd8>
   1ba0c:	mov	r0, sl
   1ba10:	mov	r1, r9
   1ba14:	mov	r2, r6
   1ba18:	mov	r3, #4
   1ba1c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ba20:	b	1dfe0 <main@@Base+0x8128>
   1ba24:	ldr	r6, [sp, #36]	; 0x24
   1ba28:	ldr	sl, [sp, #32]
   1ba2c:	bne	1ba3c <main@@Base+0x5b84>
   1ba30:	ldrb	r0, [r8, #2]!
   1ba34:	cmp	r0, #32
   1ba38:	bhi	19960 <main@@Base+0x3aa8>
   1ba3c:	mov	r0, sl
   1ba40:	mov	r2, r6
   1ba44:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ba48:	b	1995c <main@@Base+0x3aa4>
   1ba4c:	mov	r0, sl
   1ba50:	mov	r1, r6
   1ba54:	b	1cf78 <main@@Base+0x70c0>
   1ba58:	bne	1ba68 <main@@Base+0x5bb0>
   1ba5c:	ldrb	r0, [r8, #2]!
   1ba60:	cmp	r0, #32
   1ba64:	bhi	1ba78 <main@@Base+0x5bc0>
   1ba68:	mov	r0, sl
   1ba6c:	mov	r2, r6
   1ba70:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ba74:	mov	r8, r0
   1ba78:	cmp	r8, r6
   1ba7c:	mov	r2, r6
   1ba80:	beq	1bacc <main@@Base+0x5c14>
   1ba84:	ldrb	r0, [r8]
   1ba88:	cmp	r0, #93	; 0x5d
   1ba8c:	bne	1bac8 <main@@Base+0x5c10>
   1ba90:	add	r1, r8, #1
   1ba94:	sub	r0, r6, r1
   1ba98:	cmp	r0, #2
   1ba9c:	blt	1f7c4 <main@@Base+0x990c>
   1baa0:	ldrb	r0, [r1]
   1baa4:	cmp	r0, #32
   1baa8:	bhi	1d634 <main@@Base+0x777c>
   1baac:	ldr	r6, [sp, #36]	; 0x24
   1bab0:	ldr	sl, [sp, #32]
   1bab4:	bne	1f7c4 <main@@Base+0x990c>
   1bab8:	ldrb	r0, [r8, #2]!
   1babc:	cmp	r0, #32
   1bac0:	bhi	1b310 <main@@Base+0x5458>
   1bac4:	b	1f7c4 <main@@Base+0x990c>
   1bac8:	mov	r2, r8
   1bacc:	mov	r1, r2
   1bad0:	mov	r0, sl
   1bad4:	mov	r2, r6
   1bad8:	add	r3, sp, #44	; 0x2c
   1badc:	bl	36850 <flatcc_json_parser_build_string@@Base>
   1bae0:	mov	r8, r0
   1bae4:	ldr	r0, [sp, #44]	; 0x2c
   1bae8:	cmp	r0, #0
   1baec:	beq	168a4 <main@@Base+0x9ec>
   1baf0:	ldr	r0, [sl]
   1baf4:	mov	r1, #1
   1baf8:	bl	2e474 <flatcc_builder_extend_offset_vector@@Base>
   1bafc:	cmp	r0, #0
   1bb00:	beq	168a4 <main@@Base+0x9ec>
   1bb04:	ldr	r1, [sp, #44]	; 0x2c
   1bb08:	str	r1, [r0]
   1bb0c:	sub	r0, r6, r8
   1bb10:	cmp	r0, #2
   1bb14:	blt	1bb48 <main@@Base+0x5c90>
   1bb18:	ldrb	r0, [r8]
   1bb1c:	cmp	r0, #32
   1bb20:	bls	1bb34 <main@@Base+0x5c7c>
   1bb24:	mov	r2, r8
   1bb28:	cmp	r2, r6
   1bb2c:	bne	1bb64 <main@@Base+0x5cac>
   1bb30:	b	1d5d4 <main@@Base+0x771c>
   1bb34:	bne	1bb48 <main@@Base+0x5c90>
   1bb38:	mov	r2, r8
   1bb3c:	ldrb	r0, [r2, #1]!
   1bb40:	cmp	r0, #32
   1bb44:	bhi	1bb5c <main@@Base+0x5ca4>
   1bb48:	mov	r0, sl
   1bb4c:	mov	r1, r8
   1bb50:	mov	r2, r6
   1bb54:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1bb58:	mov	r2, r0
   1bb5c:	cmp	r2, r6
   1bb60:	beq	1d5d4 <main@@Base+0x771c>
   1bb64:	ldrb	r0, [r2]
   1bb68:	cmp	r0, #44	; 0x2c
   1bb6c:	bne	1d608 <main@@Base+0x7750>
   1bb70:	add	r1, r2, #1
   1bb74:	sub	r0, r6, r1
   1bb78:	cmp	r0, #2
   1bb7c:	blt	1bbac <main@@Base+0x5cf4>
   1bb80:	ldrb	r0, [r1]
   1bb84:	cmp	r0, #32
   1bb88:	bls	1bb9c <main@@Base+0x5ce4>
   1bb8c:	mov	r2, r1
   1bb90:	cmp	r2, r6
   1bb94:	bne	1bbc4 <main@@Base+0x5d0c>
   1bb98:	b	1d644 <main@@Base+0x778c>
   1bb9c:	bne	1bbac <main@@Base+0x5cf4>
   1bba0:	ldrb	r0, [r2, #2]!
   1bba4:	cmp	r0, #32
   1bba8:	bhi	1bbbc <main@@Base+0x5d04>
   1bbac:	mov	r0, sl
   1bbb0:	mov	r2, r6
   1bbb4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1bbb8:	mov	r2, r0
   1bbbc:	cmp	r2, r6
   1bbc0:	beq	1d644 <main@@Base+0x778c>
   1bbc4:	ldrb	r0, [r2]
   1bbc8:	cmp	r0, #93	; 0x5d
   1bbcc:	bne	1bacc <main@@Base+0x5c14>
   1bbd0:	b	1d618 <main@@Base+0x7760>
   1bbd4:	bne	1bbe8 <main@@Base+0x5d30>
   1bbd8:	ldrb	r0, [r8, #2]!
   1bbdc:	mov	r9, r8
   1bbe0:	cmp	r0, #32
   1bbe4:	bhi	1bbf8 <main@@Base+0x5d40>
   1bbe8:	mov	r0, sl
   1bbec:	mov	r2, r6
   1bbf0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1bbf4:	mov	r9, r0
   1bbf8:	cmp	r9, r6
   1bbfc:	mov	r8, r6
   1bc00:	beq	1bc4c <main@@Base+0x5d94>
   1bc04:	ldrb	r0, [r9]
   1bc08:	cmp	r0, #93	; 0x5d
   1bc0c:	bne	1bc48 <main@@Base+0x5d90>
   1bc10:	add	r1, r9, #1
   1bc14:	sub	r0, r6, r1
   1bc18:	cmp	r0, #2
   1bc1c:	blt	1f7f0 <main@@Base+0x9938>
   1bc20:	ldrb	r0, [r1]
   1bc24:	cmp	r0, #32
   1bc28:	bhi	1d178 <main@@Base+0x72c0>
   1bc2c:	ldr	r6, [sp, #36]	; 0x24
   1bc30:	ldr	sl, [sp, #32]
   1bc34:	bne	1f7f0 <main@@Base+0x9938>
   1bc38:	ldrb	r0, [r9, #2]!
   1bc3c:	cmp	r0, #32
   1bc40:	bhi	1b3c4 <main@@Base+0x550c>
   1bc44:	b	1f7f0 <main@@Base+0x9938>
   1bc48:	mov	r8, r9
   1bc4c:	ldr	r0, [sl]
   1bc50:	mov	r1, #1
   1bc54:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1bc58:	mov	r9, r0
   1bc5c:	cmp	r0, #0
   1bc60:	beq	168a4 <main@@Base+0x9ec>
   1bc64:	cmp	r8, r6
   1bc68:	beq	1bc9c <main@@Base+0x5de4>
   1bc6c:	ldrb	r0, [r8]
   1bc70:	cmp	r0, #123	; 0x7b
   1bc74:	bne	1bc9c <main@@Base+0x5de4>
   1bc78:	add	r1, r8, #1
   1bc7c:	sub	r0, r6, r1
   1bc80:	cmp	r0, #2
   1bc84:	blt	1bd98 <main@@Base+0x5ee0>
   1bc88:	ldrb	r0, [r1]
   1bc8c:	cmp	r0, #32
   1bc90:	bls	1bd88 <main@@Base+0x5ed0>
   1bc94:	mov	r8, r1
   1bc98:	b	1bda8 <main@@Base+0x5ef0>
   1bc9c:	mov	r0, sl
   1bca0:	mov	r1, r8
   1bca4:	mov	r2, r6
   1bca8:	mov	r3, #21
   1bcac:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1bcb0:	mov	r8, r0
   1bcb4:	sub	r0, r6, r8
   1bcb8:	cmp	r0, #2
   1bcbc:	blt	1bcf0 <main@@Base+0x5e38>
   1bcc0:	ldrb	r0, [r8]
   1bcc4:	cmp	r0, #32
   1bcc8:	bls	1bcdc <main@@Base+0x5e24>
   1bccc:	mov	r9, r8
   1bcd0:	cmp	r9, r6
   1bcd4:	bne	1bd0c <main@@Base+0x5e54>
   1bcd8:	b	1cf84 <main@@Base+0x70cc>
   1bcdc:	bne	1bcf0 <main@@Base+0x5e38>
   1bce0:	mov	r9, r8
   1bce4:	ldrb	r0, [r9, #1]!
   1bce8:	cmp	r0, #32
   1bcec:	bhi	1bd04 <main@@Base+0x5e4c>
   1bcf0:	mov	r0, sl
   1bcf4:	mov	r1, r8
   1bcf8:	mov	r2, r6
   1bcfc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1bd00:	mov	r9, r0
   1bd04:	cmp	r9, r6
   1bd08:	beq	1cf84 <main@@Base+0x70cc>
   1bd0c:	ldrb	r0, [r9]
   1bd10:	cmp	r0, #44	; 0x2c
   1bd14:	bne	1d120 <main@@Base+0x7268>
   1bd18:	add	r1, r9, #1
   1bd1c:	sub	r0, r6, r1
   1bd20:	cmp	r0, #2
   1bd24:	blt	1bd58 <main@@Base+0x5ea0>
   1bd28:	ldrb	r0, [r1]
   1bd2c:	cmp	r0, #32
   1bd30:	bls	1bd44 <main@@Base+0x5e8c>
   1bd34:	mov	r8, r1
   1bd38:	cmp	r8, r6
   1bd3c:	bne	1bd70 <main@@Base+0x5eb8>
   1bd40:	b	1d150 <main@@Base+0x7298>
   1bd44:	bne	1bd58 <main@@Base+0x5ea0>
   1bd48:	ldrb	r0, [r9, #2]!
   1bd4c:	mov	r8, r9
   1bd50:	cmp	r0, #32
   1bd54:	bhi	1bd68 <main@@Base+0x5eb0>
   1bd58:	mov	r0, sl
   1bd5c:	mov	r2, r6
   1bd60:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1bd64:	mov	r8, r0
   1bd68:	cmp	r8, r6
   1bd6c:	beq	1d150 <main@@Base+0x7298>
   1bd70:	ldrb	r0, [r8]
   1bd74:	cmp	r0, #93	; 0x5d
   1bd78:	bne	1bc4c <main@@Base+0x5d94>
   1bd7c:	b	1d15c <main@@Base+0x72a4>
   1bd80:	strdeq	sp, [r2], -r7
   1bd84:	ldrdeq	sp, [r2], -r8
   1bd88:	bne	1bd98 <main@@Base+0x5ee0>
   1bd8c:	ldrb	r0, [r8, #2]!
   1bd90:	cmp	r0, #32
   1bd94:	bhi	1bda8 <main@@Base+0x5ef0>
   1bd98:	mov	r0, sl
   1bd9c:	mov	r2, r6
   1bda0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1bda4:	mov	r8, r0
   1bda8:	cmp	r8, r6
   1bdac:	mov	r2, r6
   1bdb0:	beq	1bdfc <main@@Base+0x5f44>
   1bdb4:	ldrb	r0, [r8]
   1bdb8:	cmp	r0, #125	; 0x7d
   1bdbc:	bne	1bdf8 <main@@Base+0x5f40>
   1bdc0:	add	r1, r8, #1
   1bdc4:	sub	r0, r6, r1
   1bdc8:	cmp	r0, #2
   1bdcc:	blt	1c4f4 <main@@Base+0x663c>
   1bdd0:	ldrb	r0, [r1]
   1bdd4:	cmp	r0, #32
   1bdd8:	bhi	1c4a0 <main@@Base+0x65e8>
   1bddc:	ldr	r6, [sp, #36]	; 0x24
   1bde0:	ldr	sl, [sp, #32]
   1bde4:	bne	1c4f4 <main@@Base+0x663c>
   1bde8:	ldrb	r0, [r8, #2]!
   1bdec:	cmp	r0, #32
   1bdf0:	bhi	1bcb4 <main@@Base+0x5dfc>
   1bdf4:	b	1c4f4 <main@@Base+0x663c>
   1bdf8:	mov	r2, r8
   1bdfc:	cmp	r2, r6
   1be00:	mov	r8, r6
   1be04:	beq	1be34 <main@@Base+0x5f7c>
   1be08:	ldrb	r0, [r2]
   1be0c:	cmp	r0, #34	; 0x22
   1be10:	bne	1be1c <main@@Base+0x5f64>
   1be14:	add	r8, r2, #1
   1be18:	b	1be34 <main@@Base+0x5f7c>
   1be1c:	mov	r1, r2
   1be20:	mov	r0, sl
   1be24:	mov	r2, r6
   1be28:	mov	r3, #5
   1be2c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1be30:	mov	r8, r0
   1be34:	sub	lr, r6, r8
   1be38:	mov	r1, #8
   1be3c:	cmp	lr, #8
   1be40:	movcc	r1, lr
   1be44:	sub	r2, r1, #1
   1be48:	cmp	r2, #7
   1be4c:	bhi	1c2c4 <main@@Base+0x640c>
   1be50:	add	r0, pc, #36	; 0x24
   1be54:	mov	r1, #0
   1be58:	mov	ip, #0
   1be5c:	mov	sl, #0
   1be60:	mov	r7, #0
   1be64:	mov	r3, #0
   1be68:	mov	r6, #0
   1be6c:	mov	r4, #0
   1be70:	ldr	r5, [r0, r2, lsl #2]
   1be74:	mov	r2, #0
   1be78:	add	pc, r0, r5
   1be7c:	andeq	r0, r0, r8, rrx
   1be80:	andeq	r0, r0, r0, rrx
   1be84:	andeq	r0, r0, r8, asr r0
   1be88:	andeq	r0, r0, r0, asr r0
   1be8c:	andeq	r0, r0, r4, asr #32
   1be90:	andeq	r0, r0, r8, lsr r0
   1be94:	andeq	r0, r0, r8, lsr #32
   1be98:	andeq	r0, r0, r4, lsr #32
   1be9c:	andeq	r1, r4, r4, lsl #4
   1bea0:	ldrb	ip, [r8, #7]
   1bea4:	ldrb	r0, [r8, #6]
   1bea8:	mov	sl, r1
   1beac:	orr	r0, ip, r0, lsl #8
   1beb0:	mov	r1, r0
   1beb4:	ldrb	r0, [r8, #5]
   1beb8:	mov	r7, sl
   1bebc:	orr	r1, r1, r0, lsl #16
   1bec0:	ldrb	r0, [r8, #4]
   1bec4:	mov	r3, r7
   1bec8:	orr	r1, r1, r0, lsl #24
   1becc:	ldrb	r0, [r8, #3]
   1bed0:	orr	r6, r0, r3
   1bed4:	ldrb	r0, [r8, #2]
   1bed8:	orr	r2, r6, r0, lsl #8
   1bedc:	ldrb	r0, [r8, #1]
   1bee0:	orr	r4, r2, r0, lsl #16
   1bee4:	ldrb	r0, [r8]
   1bee8:	movw	r3, #0
   1beec:	movt	r3, #26980	; 0x6964
   1bef0:	orr	r2, r4, r0, lsl #24
   1bef4:	mov	r0, r2
   1bef8:	bfc	r0, #0, #16
   1befc:	teq	r0, r3
   1bf00:	bne	1bf5c <main@@Base+0x60a4>
   1bf04:	ldr	r6, [sp, #36]	; 0x24
   1bf08:	ldr	sl, [sp, #32]
   1bf0c:	cmp	lr, #3
   1bf10:	mov	r7, r8
   1bf14:	blt	1c120 <main@@Base+0x6268>
   1bf18:	ldrb	r0, [r8, #2]
   1bf1c:	mov	r7, r8
   1bf20:	cmp	r0, #34	; 0x22
   1bf24:	bne	1c120 <main@@Base+0x6268>
   1bf28:	add	r1, r8, #3
   1bf2c:	sub	r0, r6, r1
   1bf30:	cmp	r0, #2
   1bf34:	blt	1bfec <main@@Base+0x6134>
   1bf38:	ldrb	r0, [r1]
   1bf3c:	cmp	r0, #32
   1bf40:	bls	1bfd0 <main@@Base+0x6118>
   1bf44:	ldr	r6, [sp, #36]	; 0x24
   1bf48:	ldr	sl, [sp, #32]
   1bf4c:	mov	r7, r1
   1bf50:	cmp	r7, r6
   1bf54:	bne	1c004 <main@@Base+0x614c>
   1bf58:	b	1c044 <main@@Base+0x618c>
   1bf5c:	movw	r0, #25445	; 0x6365
   1bf60:	ldr	r6, [sp, #36]	; 0x24
   1bf64:	ldr	sl, [sp, #32]
   1bf68:	movt	r0, #24942	; 0x616e
   1bf6c:	eor	r0, r1, r0
   1bf70:	movw	r1, #29556	; 0x7374
   1bf74:	movt	r1, #25705	; 0x6469
   1bf78:	eor	r1, r2, r1
   1bf7c:	orrs	r0, r0, r1
   1bf80:	bne	1c2c4 <main@@Base+0x640c>
   1bf84:	cmp	lr, #9
   1bf88:	mov	r7, r8
   1bf8c:	blt	1c25c <main@@Base+0x63a4>
   1bf90:	ldrb	r0, [r8, #8]
   1bf94:	mov	r7, r8
   1bf98:	cmp	r0, #34	; 0x22
   1bf9c:	bne	1c25c <main@@Base+0x63a4>
   1bfa0:	add	r1, r8, #9
   1bfa4:	sub	r0, r6, r1
   1bfa8:	cmp	r0, #2
   1bfac:	blt	1c078 <main@@Base+0x61c0>
   1bfb0:	ldrb	r0, [r1]
   1bfb4:	cmp	r0, #32
   1bfb8:	bls	1c05c <main@@Base+0x61a4>
   1bfbc:	ldr	r6, [sp, #36]	; 0x24
   1bfc0:	mov	r7, r1
   1bfc4:	cmp	r7, r6
   1bfc8:	bne	1c090 <main@@Base+0x61d8>
   1bfcc:	b	1c0d8 <main@@Base+0x6220>
   1bfd0:	ldr	r6, [sp, #36]	; 0x24
   1bfd4:	ldr	sl, [sp, #32]
   1bfd8:	bne	1bfec <main@@Base+0x6134>
   1bfdc:	mov	r7, r8
   1bfe0:	ldrb	r0, [r7, #4]!
   1bfe4:	cmp	r0, #32
   1bfe8:	bhi	1bffc <main@@Base+0x6144>
   1bfec:	mov	r0, sl
   1bff0:	mov	r2, r6
   1bff4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1bff8:	mov	r7, r0
   1bffc:	cmp	r7, r6
   1c000:	beq	1c044 <main@@Base+0x618c>
   1c004:	ldrb	r0, [r7]
   1c008:	cmp	r0, #58	; 0x3a
   1c00c:	bne	1c044 <main@@Base+0x618c>
   1c010:	add	r1, r7, #1
   1c014:	sub	r0, r6, r1
   1c018:	cmp	r0, #2
   1c01c:	blt	1c110 <main@@Base+0x6258>
   1c020:	ldrb	r0, [r1]
   1c024:	cmp	r0, #32
   1c028:	bls	1c0f8 <main@@Base+0x6240>
   1c02c:	ldr	r6, [sp, #36]	; 0x24
   1c030:	ldr	sl, [sp, #32]
   1c034:	mov	r7, r1
   1c038:	cmp	r8, r7
   1c03c:	bne	1c128 <main@@Base+0x6270>
   1c040:	b	1c2c4 <main@@Base+0x640c>
   1c044:	mov	r0, sl
   1c048:	mov	r1, r7
   1c04c:	mov	r2, r6
   1c050:	mov	r3, #4
   1c054:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c058:	b	1c11c <main@@Base+0x6264>
   1c05c:	ldr	r6, [sp, #36]	; 0x24
   1c060:	ldr	sl, [sp, #32]
   1c064:	bne	1c078 <main@@Base+0x61c0>
   1c068:	mov	r7, r8
   1c06c:	ldrb	r0, [r7, #10]!
   1c070:	cmp	r0, #32
   1c074:	bhi	1c088 <main@@Base+0x61d0>
   1c078:	mov	r0, sl
   1c07c:	mov	r2, r6
   1c080:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c084:	mov	r7, r0
   1c088:	cmp	r7, r6
   1c08c:	beq	1c0d8 <main@@Base+0x6220>
   1c090:	ldrb	r0, [r7]
   1c094:	cmp	r0, #58	; 0x3a
   1c098:	bne	1c0d8 <main@@Base+0x6220>
   1c09c:	ldr	r6, [sp, #36]	; 0x24
   1c0a0:	ldr	sl, [sp, #32]
   1c0a4:	add	r1, r7, #1
   1c0a8:	sub	r0, r6, r1
   1c0ac:	cmp	r0, #2
   1c0b0:	blt	1c24c <main@@Base+0x6394>
   1c0b4:	ldrb	r0, [r1]
   1c0b8:	cmp	r0, #32
   1c0bc:	bls	1c234 <main@@Base+0x637c>
   1c0c0:	ldr	r6, [sp, #36]	; 0x24
   1c0c4:	ldr	sl, [sp, #32]
   1c0c8:	mov	r7, r1
   1c0cc:	cmp	r8, r7
   1c0d0:	bne	1c264 <main@@Base+0x63ac>
   1c0d4:	b	1c2c4 <main@@Base+0x640c>
   1c0d8:	ldr	sl, [sp, #32]
   1c0dc:	ldr	r6, [sp, #36]	; 0x24
   1c0e0:	mov	r1, r7
   1c0e4:	mov	r3, #4
   1c0e8:	mov	r0, sl
   1c0ec:	mov	r2, r6
   1c0f0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c0f4:	b	1c258 <main@@Base+0x63a0>
   1c0f8:	ldr	r6, [sp, #36]	; 0x24
   1c0fc:	ldr	sl, [sp, #32]
   1c100:	bne	1c110 <main@@Base+0x6258>
   1c104:	ldrb	r0, [r7, #2]!
   1c108:	cmp	r0, #32
   1c10c:	bhi	1c120 <main@@Base+0x6268>
   1c110:	mov	r0, sl
   1c114:	mov	r2, r6
   1c118:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c11c:	mov	r7, r0
   1c120:	cmp	r8, r7
   1c124:	beq	1c2c4 <main@@Base+0x640c>
   1c128:	mov	r4, #0
   1c12c:	cmp	r7, r6
   1c130:	str	r4, [fp, #-52]	; 0xffffffcc
   1c134:	str	r4, [fp, #-56]	; 0xffffffc8
   1c138:	str	r4, [sp, #60]	; 0x3c
   1c13c:	str	r4, [sp, #48]	; 0x30
   1c140:	beq	1c188 <main@@Base+0x62d0>
   1c144:	sub	r0, fp, #56	; 0x38
   1c148:	mov	r1, r7
   1c14c:	mov	r2, r6
   1c150:	add	r3, sp, #48	; 0x30
   1c154:	str	r0, [sp]
   1c158:	mov	r0, sl
   1c15c:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1c160:	cmp	r0, r7
   1c164:	beq	1c198 <main@@Base+0x62e0>
   1c168:	mov	r1, r0
   1c16c:	ldr	r0, [sp, #48]	; 0x30
   1c170:	cmp	r0, #0
   1c174:	beq	1c1a8 <main@@Base+0x62f0>
   1c178:	mov	r0, sl
   1c17c:	mov	r2, r6
   1c180:	mov	r3, #8
   1c184:	b	1c1c8 <main@@Base+0x6310>
   1c188:	mov	r1, r6
   1c18c:	cmp	r7, r1
   1c190:	bne	1c210 <main@@Base+0x6358>
   1c194:	b	1c1d8 <main@@Base+0x6320>
   1c198:	mov	r1, r7
   1c19c:	cmp	r7, r1
   1c1a0:	bne	1c210 <main@@Base+0x6358>
   1c1a4:	b	1c1d8 <main@@Base+0x6320>
   1c1a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c1ac:	cmp	r0, #0
   1c1b0:	beq	1c218 <main@@Base+0x6360>
   1c1b4:	ldr	sl, [sp, #32]
   1c1b8:	ldr	r6, [sp, #36]	; 0x24
   1c1bc:	mov	r3, #7
   1c1c0:	mov	r0, sl
   1c1c4:	mov	r2, r6
   1c1c8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c1cc:	mov	r1, r0
   1c1d0:	cmp	r7, r1
   1c1d4:	bne	1c210 <main@@Base+0x6358>
   1c1d8:	add	r0, sp, #60	; 0x3c
   1c1dc:	mov	r1, r7
   1c1e0:	mov	r2, r6
   1c1e4:	str	r0, [sp]
   1c1e8:	mov	r0, sl
   1c1ec:	ldr	r3, [pc, #3988]	; 1d188 <main@@Base+0x72d0>
   1c1f0:	add	r3, pc, r3
   1c1f4:	bl	24330 <main@@Base+0xe478>
   1c1f8:	mov	r1, r0
   1c1fc:	cmp	r0, r7
   1c200:	cmpne	r1, r6
   1c204:	beq	1c454 <main@@Base+0x659c>
   1c208:	ldr	r4, [sp, #60]	; 0x3c
   1c20c:	ldr	sl, [sp, #32]
   1c210:	str	r4, [r9]
   1c214:	b	1c2d8 <main@@Base+0x6420>
   1c218:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c21c:	ldr	r6, [sp, #36]	; 0x24
   1c220:	ldr	sl, [sp, #32]
   1c224:	str	r4, [sp, #60]	; 0x3c
   1c228:	cmp	r7, r1
   1c22c:	bne	1c210 <main@@Base+0x6358>
   1c230:	b	1c1d8 <main@@Base+0x6320>
   1c234:	ldr	r6, [sp, #36]	; 0x24
   1c238:	ldr	sl, [sp, #32]
   1c23c:	bne	1c24c <main@@Base+0x6394>
   1c240:	ldrb	r0, [r7, #2]!
   1c244:	cmp	r0, #32
   1c248:	bhi	1c25c <main@@Base+0x63a4>
   1c24c:	mov	r0, sl
   1c250:	mov	r2, r6
   1c254:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c258:	mov	r7, r0
   1c25c:	cmp	r8, r7
   1c260:	beq	1c2c4 <main@@Base+0x640c>
   1c264:	mov	r4, #0
   1c268:	cmp	r7, r6
   1c26c:	str	r4, [fp, #-52]	; 0xffffffcc
   1c270:	str	r4, [fp, #-56]	; 0xffffffc8
   1c274:	str	r4, [sp, #60]	; 0x3c
   1c278:	str	r4, [sp, #48]	; 0x30
   1c27c:	beq	1c39c <main@@Base+0x64e4>
   1c280:	sub	r0, fp, #56	; 0x38
   1c284:	mov	r1, r7
   1c288:	mov	r2, r6
   1c28c:	add	r3, sp, #48	; 0x30
   1c290:	str	r0, [sp]
   1c294:	mov	r0, sl
   1c298:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1c29c:	cmp	r0, r7
   1c2a0:	beq	1c3ac <main@@Base+0x64f4>
   1c2a4:	mov	r1, r0
   1c2a8:	ldr	r0, [sp, #48]	; 0x30
   1c2ac:	cmp	r0, #0
   1c2b0:	beq	1c3c0 <main@@Base+0x6508>
   1c2b4:	ldr	sl, [sp, #32]
   1c2b8:	ldr	r6, [sp, #36]	; 0x24
   1c2bc:	mov	r3, #8
   1c2c0:	b	1c3d8 <main@@Base+0x6520>
   1c2c4:	mov	r0, sl
   1c2c8:	mov	r1, r8
   1c2cc:	mov	r2, r6
   1c2d0:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c2d4:	mov	r1, r0
   1c2d8:	sub	r0, r6, r1
   1c2dc:	cmp	r0, #2
   1c2e0:	blt	1c314 <main@@Base+0x645c>
   1c2e4:	ldrb	r0, [r1]
   1c2e8:	cmp	r0, #32
   1c2ec:	bls	1c300 <main@@Base+0x6448>
   1c2f0:	mov	r2, r1
   1c2f4:	cmp	r2, r6
   1c2f8:	bne	1c32c <main@@Base+0x6474>
   1c2fc:	b	1c46c <main@@Base+0x65b4>
   1c300:	bne	1c314 <main@@Base+0x645c>
   1c304:	mov	r2, r1
   1c308:	ldrb	r0, [r2, #1]!
   1c30c:	cmp	r0, #32
   1c310:	bhi	1c324 <main@@Base+0x646c>
   1c314:	mov	r0, sl
   1c318:	mov	r2, r6
   1c31c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c320:	mov	r2, r0
   1c324:	cmp	r2, r6
   1c328:	beq	1c46c <main@@Base+0x65b4>
   1c32c:	ldrb	r0, [r2]
   1c330:	cmp	r0, #44	; 0x2c
   1c334:	bne	1c474 <main@@Base+0x65bc>
   1c338:	add	r1, r2, #1
   1c33c:	sub	r0, r6, r1
   1c340:	cmp	r0, #2
   1c344:	blt	1c374 <main@@Base+0x64bc>
   1c348:	ldrb	r0, [r1]
   1c34c:	cmp	r0, #32
   1c350:	bls	1c364 <main@@Base+0x64ac>
   1c354:	mov	r2, r1
   1c358:	cmp	r2, r6
   1c35c:	bne	1c38c <main@@Base+0x64d4>
   1c360:	b	1c4b0 <main@@Base+0x65f8>
   1c364:	bne	1c374 <main@@Base+0x64bc>
   1c368:	ldrb	r0, [r2, #2]!
   1c36c:	cmp	r0, #32
   1c370:	bhi	1c384 <main@@Base+0x64cc>
   1c374:	mov	r0, sl
   1c378:	mov	r2, r6
   1c37c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c380:	mov	r2, r0
   1c384:	cmp	r2, r6
   1c388:	beq	1c4b0 <main@@Base+0x65f8>
   1c38c:	ldrb	r0, [r2]
   1c390:	cmp	r0, #125	; 0x7d
   1c394:	bne	1bdfc <main@@Base+0x5f44>
   1c398:	b	1c484 <main@@Base+0x65cc>
   1c39c:	mov	r1, r6
   1c3a0:	cmp	r7, r1
   1c3a4:	bne	1c430 <main@@Base+0x6578>
   1c3a8:	b	1c3f0 <main@@Base+0x6538>
   1c3ac:	mov	r1, r7
   1c3b0:	cmp	r7, r1
   1c3b4:	bne	1c430 <main@@Base+0x6578>
   1c3b8:	b	1c3f0 <main@@Base+0x6538>
   1c3bc:	andeq	r0, r4, r0, lsl #26
   1c3c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c3c4:	cmp	r0, #0
   1c3c8:	beq	1c438 <main@@Base+0x6580>
   1c3cc:	ldr	sl, [sp, #32]
   1c3d0:	ldr	r6, [sp, #36]	; 0x24
   1c3d4:	mov	r3, #7
   1c3d8:	mov	r0, sl
   1c3dc:	mov	r2, r6
   1c3e0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c3e4:	mov	r1, r0
   1c3e8:	cmp	r7, r1
   1c3ec:	bne	1c430 <main@@Base+0x6578>
   1c3f0:	add	r0, sp, #60	; 0x3c
   1c3f4:	mov	r1, r7
   1c3f8:	mov	r2, r6
   1c3fc:	str	r0, [sp]
   1c400:	mov	r0, sl
   1c404:	ldr	r3, [pc, #3996]	; 1d3a8 <main@@Base+0x74f0>
   1c408:	add	r3, pc, r3
   1c40c:	bl	24330 <main@@Base+0xe478>
   1c410:	cmp	r0, r7
   1c414:	mov	r1, r0
   1c418:	ldrne	r0, [sp, #36]	; 0x24
   1c41c:	cmpne	r1, r0
   1c420:	beq	1c454 <main@@Base+0x659c>
   1c424:	ldr	r4, [sp, #60]	; 0x3c
   1c428:	ldr	r6, [sp, #36]	; 0x24
   1c42c:	ldr	sl, [sp, #32]
   1c430:	str	r4, [r9, #4]
   1c434:	b	1c2d8 <main@@Base+0x6420>
   1c438:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c43c:	ldr	r6, [sp, #36]	; 0x24
   1c440:	ldr	sl, [sp, #32]
   1c444:	str	r4, [sp, #60]	; 0x3c
   1c448:	cmp	r7, r1
   1c44c:	bne	1c430 <main@@Base+0x6578>
   1c450:	b	1c3f0 <main@@Base+0x6538>
   1c454:	ldr	sl, [sp, #32]
   1c458:	ldr	r6, [sp, #36]	; 0x24
   1c45c:	mov	r3, #33	; 0x21
   1c460:	mov	r0, sl
   1c464:	mov	r2, r6
   1c468:	b	1bcac <main@@Base+0x5df4>
   1c46c:	mov	r8, r6
   1c470:	b	1bcb4 <main@@Base+0x5dfc>
   1c474:	cmp	r0, #125	; 0x7d
   1c478:	bne	1c4bc <main@@Base+0x6604>
   1c47c:	ldr	r6, [sp, #36]	; 0x24
   1c480:	ldr	sl, [sp, #32]
   1c484:	add	r1, r2, #1
   1c488:	sub	r0, r6, r1
   1c48c:	cmp	r0, #2
   1c490:	blt	1c4f4 <main@@Base+0x663c>
   1c494:	ldrb	r0, [r1]
   1c498:	cmp	r0, #32
   1c49c:	bls	1c4d8 <main@@Base+0x6620>
   1c4a0:	ldr	r6, [sp, #36]	; 0x24
   1c4a4:	ldr	sl, [sp, #32]
   1c4a8:	mov	r8, r1
   1c4ac:	b	1bcb4 <main@@Base+0x5dfc>
   1c4b0:	mov	r0, sl
   1c4b4:	mov	r1, r6
   1c4b8:	b	1c4cc <main@@Base+0x6614>
   1c4bc:	ldr	sl, [sp, #32]
   1c4c0:	ldr	r6, [sp, #36]	; 0x24
   1c4c4:	mov	r1, r2
   1c4c8:	mov	r0, sl
   1c4cc:	mov	r2, r6
   1c4d0:	mov	r3, #10
   1c4d4:	b	1bcac <main@@Base+0x5df4>
   1c4d8:	ldr	r6, [sp, #36]	; 0x24
   1c4dc:	ldr	sl, [sp, #32]
   1c4e0:	bne	1c4f4 <main@@Base+0x663c>
   1c4e4:	ldrb	r0, [r2, #2]!
   1c4e8:	mov	r8, r2
   1c4ec:	cmp	r0, #32
   1c4f0:	bhi	1bcb4 <main@@Base+0x5dfc>
   1c4f4:	mov	r0, sl
   1c4f8:	mov	r2, r6
   1c4fc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c500:	b	1bcb0 <main@@Base+0x5df8>
   1c504:	bne	1c514 <main@@Base+0x665c>
   1c508:	ldrb	r0, [r8, #19]!
   1c50c:	cmp	r0, #32
   1c510:	bhi	1c524 <main@@Base+0x666c>
   1c514:	mov	r0, sl
   1c518:	mov	r2, r6
   1c51c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c520:	mov	r8, r0
   1c524:	cmp	r8, r6
   1c528:	beq	1c570 <main@@Base+0x66b8>
   1c52c:	ldrb	r0, [r8]
   1c530:	cmp	r0, #58	; 0x3a
   1c534:	bne	1c570 <main@@Base+0x66b8>
   1c538:	add	r1, r8, #1
   1c53c:	sub	r0, r6, r1
   1c540:	cmp	r0, #2
   1c544:	blt	1e134 <main@@Base+0x827c>
   1c548:	ldrb	r0, [r1]
   1c54c:	cmp	r0, #32
   1c550:	bls	1e11c <main@@Base+0x8264>
   1c554:	ldr	r6, [sp, #36]	; 0x24
   1c558:	ldr	sl, [sp, #32]
   1c55c:	mov	r8, r1
   1c560:	cmp	r7, r8
   1c564:	bne	1e14c <main@@Base+0x8294>
   1c568:	b	1ea90 <main@@Base+0x8bd8>
   1c56c:	andeq	r0, r4, ip, lsr fp
   1c570:	mov	r0, sl
   1c574:	mov	r1, r8
   1c578:	mov	r2, r6
   1c57c:	mov	r3, #4
   1c580:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c584:	b	1e140 <main@@Base+0x8288>
   1c588:	ldr	r6, [sp, #36]	; 0x24
   1c58c:	ldr	sl, [sp, #32]
   1c590:	bne	1c5a0 <main@@Base+0x66e8>
   1c594:	ldrb	r0, [r8, #2]!
   1c598:	cmp	r0, #32
   1c59c:	bhi	1c5b0 <main@@Base+0x66f8>
   1c5a0:	mov	r0, sl
   1c5a4:	mov	r2, r6
   1c5a8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c5ac:	mov	r8, r0
   1c5b0:	cmp	r7, r8
   1c5b4:	beq	1ea90 <main@@Base+0x8bd8>
   1c5b8:	ldr	r0, [sl]
   1c5bc:	bl	2ed1c <flatcc_builder_start_offset_vector@@Base>
   1c5c0:	cmp	r0, #0
   1c5c4:	bne	168a4 <main@@Base+0x9ec>
   1c5c8:	cmp	r8, r6
   1c5cc:	beq	1c608 <main@@Base+0x6750>
   1c5d0:	ldrb	r0, [r8]
   1c5d4:	cmp	r0, #91	; 0x5b
   1c5d8:	bne	1c608 <main@@Base+0x6750>
   1c5dc:	add	r1, r8, #1
   1c5e0:	sub	r0, r6, r1
   1c5e4:	cmp	r0, #2
   1c5e8:	blt	1cfa4 <main@@Base+0x70ec>
   1c5ec:	ldrb	r0, [r1]
   1c5f0:	cmp	r0, #32
   1c5f4:	bls	1cf8c <main@@Base+0x70d4>
   1c5f8:	ldr	r6, [sp, #36]	; 0x24
   1c5fc:	ldr	sl, [sp, #32]
   1c600:	mov	r8, r1
   1c604:	b	1cfb4 <main@@Base+0x70fc>
   1c608:	mov	r0, sl
   1c60c:	mov	r1, r8
   1c610:	mov	r2, r6
   1c614:	mov	r3, #22
   1c618:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c61c:	mov	r8, r0
   1c620:	ldr	r0, [sl]
   1c624:	bl	2ef04 <flatcc_builder_end_offset_vector@@Base>
   1c628:	cmp	r0, #0
   1c62c:	str	r0, [sp, #44]	; 0x2c
   1c630:	beq	168a4 <main@@Base+0x9ec>
   1c634:	ldr	r0, [sl]
   1c638:	mov	r1, #11
   1c63c:	b	1f78c <main@@Base+0x98d4>
   1c640:			; <UNDEFINED> instruction: 0x00040ab8
   1c644:	ldr	sl, [sp, #32]
   1c648:	bne	1c658 <main@@Base+0x67a0>
   1c64c:	ldrb	r0, [r6, #2]!
   1c650:	cmp	r0, #32
   1c654:	bhi	1c668 <main@@Base+0x67b0>
   1c658:	ldr	r2, [sp, #36]	; 0x24
   1c65c:	mov	r0, sl
   1c660:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c664:	mov	r6, r0
   1c668:	cmp	r9, r6
   1c66c:	beq	1a938 <main@@Base+0x4a80>
   1c670:	ldr	r2, [sp, #36]	; 0x24
   1c674:	mov	r4, #0
   1c678:	str	r4, [fp, #-52]	; 0xffffffcc
   1c67c:	str	r4, [fp, #-56]	; 0xffffffc8
   1c680:	str	r4, [sp, #60]	; 0x3c
   1c684:	str	r4, [sp, #48]	; 0x30
   1c688:	cmp	r6, r2
   1c68c:	beq	1c6d0 <main@@Base+0x6818>
   1c690:	sub	r0, fp, #56	; 0x38
   1c694:	mov	r1, r6
   1c698:	add	r3, sp, #48	; 0x30
   1c69c:	str	r0, [sp]
   1c6a0:	mov	r0, sl
   1c6a4:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1c6a8:	cmp	r0, r6
   1c6ac:	beq	1c6e0 <main@@Base+0x6828>
   1c6b0:	mov	r1, r0
   1c6b4:	ldr	r0, [sp, #48]	; 0x30
   1c6b8:	cmp	r0, #0
   1c6bc:	beq	1c6f0 <main@@Base+0x6838>
   1c6c0:	ldr	r2, [sp, #36]	; 0x24
   1c6c4:	mov	r0, sl
   1c6c8:	mov	r3, #8
   1c6cc:	b	1c70c <main@@Base+0x6854>
   1c6d0:	mov	r9, r2
   1c6d4:	cmp	r6, r9
   1c6d8:	bne	1c758 <main@@Base+0x68a0>
   1c6dc:	b	1c71c <main@@Base+0x6864>
   1c6e0:	mov	r9, r6
   1c6e4:	cmp	r6, r9
   1c6e8:	bne	1c758 <main@@Base+0x68a0>
   1c6ec:	b	1c71c <main@@Base+0x6864>
   1c6f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c6f4:	cmp	r0, #0
   1c6f8:	beq	1d134 <main@@Base+0x727c>
   1c6fc:	ldr	sl, [sp, #32]
   1c700:	ldr	r2, [sp, #36]	; 0x24
   1c704:	mov	r3, #7
   1c708:	mov	r0, sl
   1c70c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c710:	mov	r9, r0
   1c714:	cmp	r6, r9
   1c718:	bne	1c758 <main@@Base+0x68a0>
   1c71c:	add	r0, sp, #60	; 0x3c
   1c720:	ldr	r4, [sp, #36]	; 0x24
   1c724:	mov	r1, r6
   1c728:	str	r0, [sp]
   1c72c:	mov	r0, sl
   1c730:	ldr	r3, [pc, #4036]	; 1d6fc <main@@Base+0x7844>
   1c734:	mov	r2, r4
   1c738:	add	r3, pc, r3
   1c73c:	bl	24330 <main@@Base+0xe478>
   1c740:	mov	r9, r0
   1c744:	cmp	r0, r6
   1c748:	cmpne	r9, r4
   1c74c:	beq	1fc08 <main@@Base+0x9d50>
   1c750:	ldr	r4, [sp, #60]	; 0x3c
   1c754:	ldr	sl, [sp, #32]
   1c758:	ldr	r6, [sp, #36]	; 0x24
   1c75c:	cmp	r4, #0
   1c760:	bne	1c770 <main@@Base+0x68b8>
   1c764:	ldrb	r0, [sl, #8]
   1c768:	tst	r0, #2
   1c76c:	beq	1eaa4 <main@@Base+0x8bec>
   1c770:	ldr	r0, [sl]
   1c774:	mov	r1, #17
   1c778:	mov	r2, #4
   1c77c:	mov	r3, #4
   1c780:	bl	3063c <flatcc_builder_table_add@@Base>
   1c784:	cmp	r0, #0
   1c788:	beq	1fc08 <main@@Base+0x9d50>
   1c78c:	str	r4, [r0]
   1c790:	b	1eaa4 <main@@Base+0x8bec>
   1c794:	andeq	r0, r4, r0, ror r9
   1c798:	ldr	sl, [sp, #32]
   1c79c:	bne	1c7ac <main@@Base+0x68f4>
   1c7a0:	ldrb	r0, [r6, #2]!
   1c7a4:	cmp	r0, #32
   1c7a8:	bhi	1c7bc <main@@Base+0x6904>
   1c7ac:	ldr	r2, [sp, #36]	; 0x24
   1c7b0:	mov	r0, sl
   1c7b4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c7b8:	mov	r6, r0
   1c7bc:	cmp	r9, r6
   1c7c0:	beq	1aa38 <main@@Base+0x4b80>
   1c7c4:	ldr	r2, [sp, #36]	; 0x24
   1c7c8:	mov	r4, #0
   1c7cc:	str	r4, [fp, #-52]	; 0xffffffcc
   1c7d0:	str	r4, [fp, #-56]	; 0xffffffc8
   1c7d4:	str	r4, [sp, #52]	; 0x34
   1c7d8:	str	r4, [sp, #48]	; 0x30
   1c7dc:	str	r4, [sp, #60]	; 0x3c
   1c7e0:	cmp	r6, r2
   1c7e4:	beq	1c844 <main@@Base+0x698c>
   1c7e8:	sub	r0, fp, #56	; 0x38
   1c7ec:	mov	r1, r6
   1c7f0:	add	r3, sp, #60	; 0x3c
   1c7f4:	str	r0, [sp]
   1c7f8:	mov	r0, sl
   1c7fc:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1c800:	cmp	r0, r6
   1c804:	beq	1c85c <main@@Base+0x69a4>
   1c808:	mov	r1, r0
   1c80c:	ldr	r0, [sp, #60]	; 0x3c
   1c810:	cmp	r0, #0
   1c814:	beq	1c874 <main@@Base+0x69bc>
   1c818:	ldr	r2, [sp, #36]	; 0x24
   1c81c:	mov	r0, sl
   1c820:	mov	r3, #8
   1c824:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c828:	mov	r9, r0
   1c82c:	mov	r4, #0
   1c830:	mov	r5, #0
   1c834:	cmp	r6, r9
   1c838:	bne	1c8d0 <main@@Base+0x6a18>
   1c83c:	b	1c890 <main@@Base+0x69d8>
   1c840:	andeq	r0, r4, r4, ror r8
   1c844:	mov	r5, #0
   1c848:	mov	r9, r2
   1c84c:	cmp	r6, r9
   1c850:	bne	1c8d0 <main@@Base+0x6a18>
   1c854:	b	1c890 <main@@Base+0x69d8>
   1c858:	ldrdeq	r6, [r0], -r4
   1c85c:	mov	r4, #0
   1c860:	mov	r5, #0
   1c864:	mov	r9, r6
   1c868:	cmp	r6, r9
   1c86c:	bne	1c8d0 <main@@Base+0x6a18>
   1c870:	b	1c890 <main@@Base+0x69d8>
   1c874:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1c878:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1c87c:	mov	r9, r1
   1c880:	str	r5, [sp, #52]	; 0x34
   1c884:	str	r4, [sp, #48]	; 0x30
   1c888:	cmp	r6, r9
   1c88c:	bne	1c8d0 <main@@Base+0x6a18>
   1c890:	add	r0, sp, #48	; 0x30
   1c894:	ldr	r4, [sp, #36]	; 0x24
   1c898:	mov	r1, r6
   1c89c:	str	r0, [sp]
   1c8a0:	mov	r0, sl
   1c8a4:	ldr	r3, [pc, #3988]	; 1d840 <main@@Base+0x7988>
   1c8a8:	mov	r2, r4
   1c8ac:	add	r3, pc, r3
   1c8b0:	bl	24510 <main@@Base+0xe658>
   1c8b4:	mov	r9, r0
   1c8b8:	cmp	r0, r6
   1c8bc:	cmpne	r9, r4
   1c8c0:	beq	1fc08 <main@@Base+0x9d50>
   1c8c4:	ldr	r4, [sp, #48]	; 0x30
   1c8c8:	ldr	r5, [sp, #52]	; 0x34
   1c8cc:	ldr	sl, [sp, #32]
   1c8d0:	ldr	r6, [sp, #36]	; 0x24
   1c8d4:	orrs	r0, r4, r5
   1c8d8:	bne	1c8e8 <main@@Base+0x6a30>
   1c8dc:	ldrb	r0, [sl, #8]
   1c8e0:	tst	r0, #2
   1c8e4:	beq	1eaa4 <main@@Base+0x8bec>
   1c8e8:	ldr	r0, [sl]
   1c8ec:	mov	r1, #19
   1c8f0:	mov	r2, #8
   1c8f4:	mov	r3, #8
   1c8f8:	bl	3063c <flatcc_builder_table_add@@Base>
   1c8fc:	cmp	r0, #0
   1c900:	beq	1fc08 <main@@Base+0x9d50>
   1c904:	strd	r4, [r0]
   1c908:	b	1eaa4 <main@@Base+0x8bec>
   1c90c:	beq	1d5e8 <main@@Base+0x7730>
   1c910:	b	1d5f8 <main@@Base+0x7740>
   1c914:	ldr	r6, [sp, #36]	; 0x24
   1c918:	ldr	sl, [sp, #32]
   1c91c:	bne	1c92c <main@@Base+0x6a74>
   1c920:	ldrb	r0, [r8, #2]!
   1c924:	cmp	r0, #32
   1c928:	bhi	1c93c <main@@Base+0x6a84>
   1c92c:	mov	r0, sl
   1c930:	mov	r2, r6
   1c934:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c938:	mov	r8, r0
   1c93c:	cmp	r7, r8
   1c940:	beq	1ea90 <main@@Base+0x8bd8>
   1c944:	ldr	r0, [sl]
   1c948:	bl	2ed1c <flatcc_builder_start_offset_vector@@Base>
   1c94c:	cmp	r0, #0
   1c950:	bne	168a4 <main@@Base+0x9ec>
   1c954:	cmp	r8, r6
   1c958:	beq	1c990 <main@@Base+0x6ad8>
   1c95c:	ldrb	r0, [r8]
   1c960:	cmp	r0, #91	; 0x5b
   1c964:	bne	1c990 <main@@Base+0x6ad8>
   1c968:	add	r1, r8, #1
   1c96c:	sub	r0, r6, r1
   1c970:	cmp	r0, #2
   1c974:	blt	1d1a4 <main@@Base+0x72ec>
   1c978:	ldrb	r0, [r1]
   1c97c:	cmp	r0, #32
   1c980:	bls	1d18c <main@@Base+0x72d4>
   1c984:	ldr	r6, [sp, #36]	; 0x24
   1c988:	mov	r8, r1
   1c98c:	b	1d1b4 <main@@Base+0x72fc>
   1c990:	mov	r0, sl
   1c994:	mov	r1, r8
   1c998:	mov	r2, r6
   1c99c:	mov	r3, #22
   1c9a0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1c9a4:	mov	r8, r0
   1c9a8:	ldr	r0, [sl]
   1c9ac:	bl	2ef04 <flatcc_builder_end_offset_vector@@Base>
   1c9b0:	cmp	r0, #0
   1c9b4:	str	r0, [sp, #44]	; 0x2c
   1c9b8:	beq	168a4 <main@@Base+0x9ec>
   1c9bc:	ldr	r0, [sl]
   1c9c0:	mov	r1, #10
   1c9c4:	b	1f78c <main@@Base+0x98d4>
   1c9c8:	ldr	r6, [sp, #36]	; 0x24
   1c9cc:	ldr	sl, [sp, #32]
   1c9d0:	bne	1c9e0 <main@@Base+0x6b28>
   1c9d4:	ldrb	r0, [r8, #2]!
   1c9d8:	cmp	r0, #32
   1c9dc:	bhi	1c9f0 <main@@Base+0x6b38>
   1c9e0:	mov	r0, sl
   1c9e4:	mov	r2, r6
   1c9e8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1c9ec:	mov	r8, r0
   1c9f0:	cmp	r7, r8
   1c9f4:	beq	1ea90 <main@@Base+0x8bd8>
   1c9f8:	mov	r0, #0
   1c9fc:	mov	r1, #3
   1ca00:	str	r0, [sp, #44]	; 0x2c
   1ca04:	ldr	r0, [sl]
   1ca08:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   1ca0c:	cmp	r0, #0
   1ca10:	bne	1f760 <main@@Base+0x98a8>
   1ca14:	cmp	r8, r6
   1ca18:	beq	1ca4c <main@@Base+0x6b94>
   1ca1c:	ldrb	r0, [r8]
   1ca20:	cmp	r0, #123	; 0x7b
   1ca24:	bne	1ca4c <main@@Base+0x6b94>
   1ca28:	add	r1, r8, #1
   1ca2c:	sub	r0, r6, r1
   1ca30:	cmp	r0, #2
   1ca34:	blt	1eecc <main@@Base+0x9014>
   1ca38:	ldrb	r0, [r1]
   1ca3c:	cmp	r0, #32
   1ca40:	bls	1eebc <main@@Base+0x9004>
   1ca44:	mov	r8, r1
   1ca48:	b	1eedc <main@@Base+0x9024>
   1ca4c:	mov	r0, sl
   1ca50:	mov	r1, r8
   1ca54:	mov	r2, r6
   1ca58:	mov	r3, #21
   1ca5c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ca60:	mov	r7, r0
   1ca64:	ldr	r0, [sl, #20]
   1ca68:	cmp	r0, #0
   1ca6c:	beq	1ca7c <main@@Base+0x6bc4>
   1ca70:	ldr	r6, [sp, #36]	; 0x24
   1ca74:	mov	r8, r7
   1ca78:	b	1f760 <main@@Base+0x98a8>
   1ca7c:	ldr	r0, [sl]
   1ca80:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   1ca84:	mov	r8, r7
   1ca88:	cmp	r0, #0
   1ca8c:	str	r0, [sp, #44]	; 0x2c
   1ca90:	beq	1f758 <main@@Base+0x98a0>
   1ca94:	ldr	r6, [sp, #36]	; 0x24
   1ca98:	ldr	sl, [sp, #32]
   1ca9c:	b	1f784 <main@@Base+0x98cc>
   1caa0:	ldr	r6, [sp, #36]	; 0x24
   1caa4:	ldr	sl, [sp, #32]
   1caa8:	bne	1cab8 <main@@Base+0x6c00>
   1caac:	ldrb	r0, [r8, #2]!
   1cab0:	cmp	r0, #32
   1cab4:	bhi	1cac8 <main@@Base+0x6c10>
   1cab8:	mov	r0, sl
   1cabc:	mov	r2, r6
   1cac0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1cac4:	mov	r8, r0
   1cac8:	cmp	r7, r8
   1cacc:	beq	1ea90 <main@@Base+0x8bd8>
   1cad0:	ldr	r0, [sl]
   1cad4:	mov	r1, #1
   1cad8:	mov	r2, #1
   1cadc:	mvn	r3, #0
   1cae0:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   1cae4:	cmp	r0, #0
   1cae8:	bne	168a4 <main@@Base+0x9ec>
   1caec:	cmp	r8, r6
   1caf0:	beq	1cb30 <main@@Base+0x6c78>
   1caf4:	ldrb	r0, [r8]
   1caf8:	cmp	r0, #91	; 0x5b
   1cafc:	bne	1cb30 <main@@Base+0x6c78>
   1cb00:	add	r1, r8, #1
   1cb04:	sub	r0, r6, r1
   1cb08:	cmp	r0, #2
   1cb0c:	blt	1d338 <main@@Base+0x7480>
   1cb10:	ldrb	r0, [r1]
   1cb14:	cmp	r0, #32
   1cb18:	bls	1d320 <main@@Base+0x7468>
   1cb1c:	ldr	r6, [sp, #36]	; 0x24
   1cb20:	mov	r8, r1
   1cb24:	cmp	r8, r6
   1cb28:	bne	1d350 <main@@Base+0x7498>
   1cb2c:	b	1d3b0 <main@@Base+0x74f8>
   1cb30:	mov	r0, sl
   1cb34:	mov	r1, r8
   1cb38:	mov	r2, r6
   1cb3c:	mov	r3, #22
   1cb40:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1cb44:	mov	r8, r0
   1cb48:	ldr	r0, [sl]
   1cb4c:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   1cb50:	cmp	r0, #0
   1cb54:	str	r0, [sp, #44]	; 0x2c
   1cb58:	beq	168a4 <main@@Base+0x9ec>
   1cb5c:	ldr	r0, [sl]
   1cb60:	mov	r1, #5
   1cb64:	b	1f78c <main@@Base+0x98d4>
   1cb68:	ldr	r6, [sp, #36]	; 0x24
   1cb6c:	ldr	sl, [sp, #32]
   1cb70:	bne	1cb84 <main@@Base+0x6ccc>
   1cb74:	ldrb	r0, [r8, #2]!
   1cb78:	mov	r9, r8
   1cb7c:	cmp	r0, #32
   1cb80:	bhi	1940c <main@@Base+0x3554>
   1cb84:	mov	r0, sl
   1cb88:	mov	r2, r6
   1cb8c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1cb90:	b	19408 <main@@Base+0x3550>
   1cb94:	ldr	r6, [sp, #36]	; 0x24
   1cb98:	bne	1cba8 <main@@Base+0x6cf0>
   1cb9c:	ldrb	r0, [r9, #2]!
   1cba0:	cmp	r0, #32
   1cba4:	bhi	1cbb8 <main@@Base+0x6d00>
   1cba8:	ldr	r0, [sp, #32]
   1cbac:	mov	r2, r6
   1cbb0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1cbb4:	mov	r9, r0
   1cbb8:	cmp	sl, r9
   1cbbc:	beq	1b050 <main@@Base+0x5198>
   1cbc0:	ldr	sl, [sp, #32]
   1cbc4:	mov	r1, #8
   1cbc8:	mov	r2, #8
   1cbcc:	mvn	r3, #-536870912	; 0xe0000000
   1cbd0:	ldr	r0, [sl]
   1cbd4:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   1cbd8:	cmp	r0, #0
   1cbdc:	bne	1fc38 <main@@Base+0x9d80>
   1cbe0:	cmp	r9, r6
   1cbe4:	beq	1cc24 <main@@Base+0x6d6c>
   1cbe8:	ldrb	r0, [r9]
   1cbec:	cmp	r0, #91	; 0x5b
   1cbf0:	bne	1cc24 <main@@Base+0x6d6c>
   1cbf4:	add	r1, r9, #1
   1cbf8:	sub	r0, r6, r1
   1cbfc:	cmp	r0, #2
   1cc00:	blt	1dcec <main@@Base+0x7e34>
   1cc04:	ldrb	r0, [r1]
   1cc08:	cmp	r0, #32
   1cc0c:	bls	1dcd4 <main@@Base+0x7e1c>
   1cc10:	ldr	r6, [sp, #36]	; 0x24
   1cc14:	mov	r9, r1
   1cc18:	cmp	r9, r6
   1cc1c:	bne	1dd04 <main@@Base+0x7e4c>
   1cc20:	b	1dd60 <main@@Base+0x7ea8>
   1cc24:	mov	r0, sl
   1cc28:	mov	r1, r9
   1cc2c:	mov	r2, r6
   1cc30:	mov	r3, #22
   1cc34:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1cc38:	mov	r9, r0
   1cc3c:	ldr	r0, [sl]
   1cc40:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   1cc44:	cmp	r0, #0
   1cc48:	str	r0, [sp, #44]	; 0x2c
   1cc4c:	beq	1fc38 <main@@Base+0x9d80>
   1cc50:	ldr	r0, [sl]
   1cc54:	mov	r1, #32
   1cc58:	b	19428 <main@@Base+0x3570>
   1cc5c:	ldr	r6, [sp, #36]	; 0x24
   1cc60:	ldr	sl, [sp, #32]
   1cc64:	bne	1cc74 <main@@Base+0x6dbc>
   1cc68:	ldrb	r0, [r8, #19]!
   1cc6c:	cmp	r0, #32
   1cc70:	bhi	1cc84 <main@@Base+0x6dcc>
   1cc74:	mov	r0, sl
   1cc78:	mov	r2, r6
   1cc7c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1cc80:	mov	r8, r0
   1cc84:	cmp	r8, r6
   1cc88:	beq	1cccc <main@@Base+0x6e14>
   1cc8c:	ldrb	r0, [r8]
   1cc90:	cmp	r0, #58	; 0x3a
   1cc94:	bne	1cccc <main@@Base+0x6e14>
   1cc98:	add	r1, r8, #1
   1cc9c:	sub	r0, r6, r1
   1cca0:	cmp	r0, #2
   1cca4:	blt	1e8b4 <main@@Base+0x89fc>
   1cca8:	ldrb	r0, [r1]
   1ccac:	cmp	r0, #32
   1ccb0:	bls	1e89c <main@@Base+0x89e4>
   1ccb4:	ldr	r6, [sp, #36]	; 0x24
   1ccb8:	ldr	sl, [sp, #32]
   1ccbc:	mov	r8, r1
   1ccc0:	cmp	r7, r8
   1ccc4:	bne	1e8cc <main@@Base+0x8a14>
   1ccc8:	b	1ea90 <main@@Base+0x8bd8>
   1cccc:	mov	r0, sl
   1ccd0:	mov	r1, r8
   1ccd4:	mov	r2, r6
   1ccd8:	mov	r3, #4
   1ccdc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1cce0:	b	1e8c0 <main@@Base+0x8a08>
   1cce4:	ldr	r6, [sp, #36]	; 0x24
   1cce8:	ldr	sl, [sp, #32]
   1ccec:	bne	1ccfc <main@@Base+0x6e44>
   1ccf0:	ldrb	r0, [r8, #19]!
   1ccf4:	cmp	r0, #32
   1ccf8:	bhi	1cd0c <main@@Base+0x6e54>
   1ccfc:	mov	r0, sl
   1cd00:	mov	r2, r6
   1cd04:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1cd08:	mov	r8, r0
   1cd0c:	cmp	r8, r6
   1cd10:	beq	1cd54 <main@@Base+0x6e9c>
   1cd14:	ldrb	r0, [r8]
   1cd18:	cmp	r0, #58	; 0x3a
   1cd1c:	bne	1cd54 <main@@Base+0x6e9c>
   1cd20:	add	r1, r8, #1
   1cd24:	sub	r0, r6, r1
   1cd28:	cmp	r0, #2
   1cd2c:	blt	1ea04 <main@@Base+0x8b4c>
   1cd30:	ldrb	r0, [r1]
   1cd34:	cmp	r0, #32
   1cd38:	bls	1e9ec <main@@Base+0x8b34>
   1cd3c:	ldr	r6, [sp, #36]	; 0x24
   1cd40:	ldr	sl, [sp, #32]
   1cd44:	mov	r8, r1
   1cd48:	cmp	r7, r8
   1cd4c:	bne	1ea1c <main@@Base+0x8b64>
   1cd50:	b	1ea90 <main@@Base+0x8bd8>
   1cd54:	mov	r0, sl
   1cd58:	mov	r1, r8
   1cd5c:	mov	r2, r6
   1cd60:	mov	r3, #4
   1cd64:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1cd68:	b	1ea10 <main@@Base+0x8b58>
   1cd6c:	ldr	r6, [sp, #36]	; 0x24
   1cd70:	ldr	sl, [sp, #32]
   1cd74:	bne	1cd84 <main@@Base+0x6ecc>
   1cd78:	ldrb	r0, [r9, #2]!
   1cd7c:	cmp	r0, #32
   1cd80:	bhi	1cd94 <main@@Base+0x6edc>
   1cd84:	mov	r0, sl
   1cd88:	mov	r2, r6
   1cd8c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1cd90:	mov	r9, r0
   1cd94:	cmp	r7, r9
   1cd98:	beq	1ea90 <main@@Base+0x8bd8>
   1cd9c:	cmp	r9, r6
   1cda0:	beq	1ce00 <main@@Base+0x6f48>
   1cda4:	ldrb	r0, [r9]
   1cda8:	cmp	r0, #91	; 0x5b
   1cdac:	bne	1ce00 <main@@Base+0x6f48>
   1cdb0:	ldr	r0, [sl]
   1cdb4:	mov	r1, #1
   1cdb8:	mov	r2, #1
   1cdbc:	mvn	r3, #0
   1cdc0:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   1cdc4:	cmp	r0, #0
   1cdc8:	bne	1fc08 <main@@Base+0x9d50>
   1cdcc:	ldrb	r0, [r9]
   1cdd0:	cmp	r0, #91	; 0x5b
   1cdd4:	bne	1ce4c <main@@Base+0x6f94>
   1cdd8:	ldr	r0, [sp, #36]	; 0x24
   1cddc:	add	r1, r9, #1
   1cde0:	sub	r0, r0, r1
   1cde4:	cmp	r0, #2
   1cde8:	blt	1ec48 <main@@Base+0x8d90>
   1cdec:	ldrb	r0, [r1]
   1cdf0:	cmp	r0, #32
   1cdf4:	bls	1ec38 <main@@Base+0x8d80>
   1cdf8:	mov	r9, r1
   1cdfc:	b	1ec58 <main@@Base+0x8da0>
   1ce00:	ldr	r0, [sl]
   1ce04:	mov	r1, #0
   1ce08:	mov	r2, #0
   1ce0c:	mov	r3, #0
   1ce10:	bl	2dbc4 <flatcc_builder_start_buffer@@Base>
   1ce14:	cmp	r0, #0
   1ce18:	bne	1fc38 <main@@Base+0x9d80>
   1ce1c:	mov	r0, sl
   1ce20:	mov	r1, r9
   1ce24:	mov	r2, r6
   1ce28:	add	r3, sp, #44	; 0x2c
   1ce2c:	bl	16864 <main@@Base+0x9ac>
   1ce30:	ldr	r1, [sp, #44]	; 0x2c
   1ce34:	mov	r9, r0
   1ce38:	cmp	r1, #0
   1ce3c:	beq	1fc38 <main@@Base+0x9d80>
   1ce40:	ldr	r0, [sl]
   1ce44:	bl	2ddc4 <flatcc_builder_end_buffer@@Base>
   1ce48:	b	1fb0c <main@@Base+0x9c54>
   1ce4c:	ldr	r0, [sp, #32]
   1ce50:	ldr	r2, [sp, #36]	; 0x24
   1ce54:	mov	r1, r9
   1ce58:	mov	r3, #22
   1ce5c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ce60:	b	1faf8 <main@@Base+0x9c40>
   1ce64:	ldr	r6, [sp, #36]	; 0x24
   1ce68:	ldr	sl, [sp, #32]
   1ce6c:	bne	1ce7c <main@@Base+0x6fc4>
   1ce70:	ldrb	r0, [r8, #2]!
   1ce74:	cmp	r0, #32
   1ce78:	bhi	1ce8c <main@@Base+0x6fd4>
   1ce7c:	mov	r0, sl
   1ce80:	mov	r2, r6
   1ce84:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ce88:	mov	r8, r0
   1ce8c:	cmp	r7, r8
   1ce90:	beq	1ea90 <main@@Base+0x8bd8>
   1ce94:	mov	r2, r6
   1ce98:	mov	r6, #0
   1ce9c:	cmp	r8, r2
   1cea0:	str	r6, [fp, #-52]	; 0xffffffcc
   1cea4:	str	r6, [fp, #-56]	; 0xffffffc8
   1cea8:	str	r6, [sp, #60]	; 0x3c
   1ceac:	str	r6, [sp, #48]	; 0x30
   1ceb0:	beq	1cf0c <main@@Base+0x7054>
   1ceb4:	sub	r0, fp, #56	; 0x38
   1ceb8:	mov	r1, r8
   1cebc:	add	r3, sp, #48	; 0x30
   1cec0:	str	r0, [sp]
   1cec4:	mov	r0, sl
   1cec8:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1cecc:	cmp	r0, r8
   1ced0:	beq	1cf1c <main@@Base+0x7064>
   1ced4:	ldr	r2, [sp, #48]	; 0x30
   1ced8:	mov	r9, r0
   1cedc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cee0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1cee4:	cmp	r2, #0
   1cee8:	beq	1cf2c <main@@Base+0x7074>
   1ceec:	subs	r2, r0, #-2147483647	; 0x80000001
   1cef0:	sbcs	r1, r1, #0
   1cef4:	bcc	1cf60 <main@@Base+0x70a8>
   1cef8:	ldr	sl, [sp, #32]
   1cefc:	ldr	r2, [sp, #36]	; 0x24
   1cf00:	mov	r1, r9
   1cf04:	mov	r3, #8
   1cf08:	b	1cf48 <main@@Base+0x7090>
   1cf0c:	mov	r9, r2
   1cf10:	cmp	r8, r9
   1cf14:	bne	1e0e4 <main@@Base+0x822c>
   1cf18:	b	1e0a8 <main@@Base+0x81f0>
   1cf1c:	mov	r9, r8
   1cf20:	cmp	r8, r9
   1cf24:	bne	1e0e4 <main@@Base+0x822c>
   1cf28:	b	1e0a8 <main@@Base+0x81f0>
   1cf2c:	subs	r2, r0, #-2147483648	; 0x80000000
   1cf30:	sbcs	r1, r1, #0
   1cf34:	bcc	1e094 <main@@Base+0x81dc>
   1cf38:	ldr	sl, [sp, #32]
   1cf3c:	ldr	r2, [sp, #36]	; 0x24
   1cf40:	mov	r1, r9
   1cf44:	mov	r3, #7
   1cf48:	mov	r0, sl
   1cf4c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1cf50:	mov	r9, r0
   1cf54:	cmp	r8, r9
   1cf58:	bne	1e0e4 <main@@Base+0x822c>
   1cf5c:	b	1e0a8 <main@@Base+0x81f0>
   1cf60:	rsb	r6, r0, #0
   1cf64:	b	1e098 <main@@Base+0x81e0>
   1cf68:	ldr	sl, [sp, #32]
   1cf6c:	ldr	r6, [sp, #36]	; 0x24
   1cf70:	mov	r1, r8
   1cf74:	mov	r0, sl
   1cf78:	mov	r2, r6
   1cf7c:	mov	r3, #9
   1cf80:	b	19958 <main@@Base+0x3aa0>
   1cf84:	mov	r9, r6
   1cf88:	b	1b3c4 <main@@Base+0x550c>
   1cf8c:	ldr	r6, [sp, #36]	; 0x24
   1cf90:	ldr	sl, [sp, #32]
   1cf94:	bne	1cfa4 <main@@Base+0x70ec>
   1cf98:	ldrb	r0, [r8, #2]!
   1cf9c:	cmp	r0, #32
   1cfa0:	bhi	1cfb4 <main@@Base+0x70fc>
   1cfa4:	mov	r0, sl
   1cfa8:	mov	r2, r6
   1cfac:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1cfb0:	mov	r8, r0
   1cfb4:	cmp	r8, r6
   1cfb8:	mov	r2, r6
   1cfbc:	beq	1d018 <main@@Base+0x7160>
   1cfc0:	ldrb	r0, [r8]
   1cfc4:	cmp	r0, #93	; 0x5d
   1cfc8:	bne	1d00c <main@@Base+0x7154>
   1cfcc:	ldr	r6, [sp, #36]	; 0x24
   1cfd0:	ldr	sl, [sp, #32]
   1cfd4:	add	r1, r8, #1
   1cfd8:	sub	r0, r6, r1
   1cfdc:	cmp	r0, #2
   1cfe0:	blt	1f9bc <main@@Base+0x9b04>
   1cfe4:	ldrb	r0, [r1]
   1cfe8:	cmp	r0, #32
   1cfec:	bhi	1e4d0 <main@@Base+0x8618>
   1cff0:	ldr	r6, [sp, #36]	; 0x24
   1cff4:	ldr	sl, [sp, #32]
   1cff8:	bne	1f9bc <main@@Base+0x9b04>
   1cffc:	ldrb	r0, [r8, #2]!
   1d000:	cmp	r0, #32
   1d004:	bhi	1c620 <main@@Base+0x6768>
   1d008:	b	1f9bc <main@@Base+0x9b04>
   1d00c:	ldr	r6, [sp, #36]	; 0x24
   1d010:	ldr	sl, [sp, #32]
   1d014:	mov	r2, r8
   1d018:	mov	r1, r2
   1d01c:	mov	r0, sl
   1d020:	mov	r2, r6
   1d024:	add	r3, sp, #44	; 0x2c
   1d028:	bl	16864 <main@@Base+0x9ac>
   1d02c:	mov	r8, r0
   1d030:	ldr	r0, [sp, #44]	; 0x2c
   1d034:	cmp	r0, #0
   1d038:	beq	168a4 <main@@Base+0x9ec>
   1d03c:	ldr	r0, [sl]
   1d040:	mov	r1, #1
   1d044:	bl	2e474 <flatcc_builder_extend_offset_vector@@Base>
   1d048:	cmp	r0, #0
   1d04c:	beq	168a4 <main@@Base+0x9ec>
   1d050:	ldr	r1, [sp, #44]	; 0x2c
   1d054:	str	r1, [r0]
   1d058:	sub	r0, r6, r8
   1d05c:	cmp	r0, #2
   1d060:	blt	1d094 <main@@Base+0x71dc>
   1d064:	ldrb	r0, [r8]
   1d068:	cmp	r0, #32
   1d06c:	bls	1d080 <main@@Base+0x71c8>
   1d070:	mov	r2, r8
   1d074:	cmp	r2, r6
   1d078:	bne	1d0b0 <main@@Base+0x71f8>
   1d07c:	b	1e45c <main@@Base+0x85a4>
   1d080:	bne	1d094 <main@@Base+0x71dc>
   1d084:	mov	r2, r8
   1d088:	ldrb	r0, [r2, #1]!
   1d08c:	cmp	r0, #32
   1d090:	bhi	1d0a8 <main@@Base+0x71f0>
   1d094:	mov	r0, sl
   1d098:	mov	r1, r8
   1d09c:	mov	r2, r6
   1d0a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d0a4:	mov	r2, r0
   1d0a8:	cmp	r2, r6
   1d0ac:	beq	1e45c <main@@Base+0x85a4>
   1d0b0:	ldrb	r0, [r2]
   1d0b4:	cmp	r0, #44	; 0x2c
   1d0b8:	bne	1e4a4 <main@@Base+0x85ec>
   1d0bc:	add	r1, r2, #1
   1d0c0:	sub	r0, r6, r1
   1d0c4:	cmp	r0, #2
   1d0c8:	blt	1d0f8 <main@@Base+0x7240>
   1d0cc:	ldrb	r0, [r1]
   1d0d0:	cmp	r0, #32
   1d0d4:	bls	1d0e8 <main@@Base+0x7230>
   1d0d8:	mov	r2, r1
   1d0dc:	cmp	r2, r6
   1d0e0:	bne	1d110 <main@@Base+0x7258>
   1d0e4:	b	1e4f4 <main@@Base+0x863c>
   1d0e8:	bne	1d0f8 <main@@Base+0x7240>
   1d0ec:	ldrb	r0, [r2, #2]!
   1d0f0:	cmp	r0, #32
   1d0f4:	bhi	1d108 <main@@Base+0x7250>
   1d0f8:	mov	r0, sl
   1d0fc:	mov	r2, r6
   1d100:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d104:	mov	r2, r0
   1d108:	cmp	r2, r6
   1d10c:	beq	1e4f4 <main@@Base+0x863c>
   1d110:	ldrb	r0, [r2]
   1d114:	cmp	r0, #93	; 0x5d
   1d118:	bne	1d018 <main@@Base+0x7160>
   1d11c:	b	1e4b4 <main@@Base+0x85fc>
   1d120:	cmp	r0, #93	; 0x5d
   1d124:	bne	1e438 <main@@Base+0x8580>
   1d128:	ldr	r6, [sp, #36]	; 0x24
   1d12c:	ldr	sl, [sp, #32]
   1d130:	b	1bc10 <main@@Base+0x5d58>
   1d134:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1d138:	ldr	sl, [sp, #32]
   1d13c:	mov	r9, r1
   1d140:	str	r4, [sp, #60]	; 0x3c
   1d144:	cmp	r6, r9
   1d148:	bne	1c758 <main@@Base+0x68a0>
   1d14c:	b	1c71c <main@@Base+0x6864>
   1d150:	mov	r0, sl
   1d154:	mov	r1, r6
   1d158:	b	1e448 <main@@Base+0x8590>
   1d15c:	add	r1, r8, #1
   1d160:	sub	r0, r6, r1
   1d164:	cmp	r0, #2
   1d168:	blt	1f7f0 <main@@Base+0x9938>
   1d16c:	ldrb	r0, [r1]
   1d170:	cmp	r0, #32
   1d174:	bls	1f7d4 <main@@Base+0x991c>
   1d178:	ldr	r6, [sp, #36]	; 0x24
   1d17c:	ldr	sl, [sp, #32]
   1d180:	mov	r9, r1
   1d184:	b	1b3c4 <main@@Base+0x550c>
   1d188:	andeq	r0, r4, r0, lsr r1
   1d18c:	ldr	r6, [sp, #36]	; 0x24
   1d190:	ldr	sl, [sp, #32]
   1d194:	bne	1d1a4 <main@@Base+0x72ec>
   1d198:	ldrb	r0, [r8, #2]!
   1d19c:	cmp	r0, #32
   1d1a0:	bhi	1d1b4 <main@@Base+0x72fc>
   1d1a4:	mov	r0, sl
   1d1a8:	mov	r2, r6
   1d1ac:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d1b0:	mov	r8, r0
   1d1b4:	cmp	r8, r6
   1d1b8:	mov	r2, r6
   1d1bc:	beq	1d210 <main@@Base+0x7358>
   1d1c0:	ldrb	r0, [r8]
   1d1c4:	cmp	r0, #93	; 0x5d
   1d1c8:	bne	1d20c <main@@Base+0x7354>
   1d1cc:	ldr	r6, [sp, #36]	; 0x24
   1d1d0:	ldr	sl, [sp, #32]
   1d1d4:	add	r1, r8, #1
   1d1d8:	sub	r0, r6, r1
   1d1dc:	cmp	r0, #2
   1d1e0:	blt	1fa54 <main@@Base+0x9b9c>
   1d1e4:	ldrb	r0, [r1]
   1d1e8:	cmp	r0, #32
   1d1ec:	bhi	1e588 <main@@Base+0x86d0>
   1d1f0:	ldr	r6, [sp, #36]	; 0x24
   1d1f4:	ldr	sl, [sp, #32]
   1d1f8:	bne	1fa54 <main@@Base+0x9b9c>
   1d1fc:	ldrb	r0, [r8, #2]!
   1d200:	cmp	r0, #32
   1d204:	bhi	1c9a8 <main@@Base+0x6af0>
   1d208:	b	1fa54 <main@@Base+0x9b9c>
   1d20c:	mov	r2, r8
   1d210:	ldr	r6, [sp, #36]	; 0x24
   1d214:	ldr	sl, [sp, #32]
   1d218:	mov	r1, r2
   1d21c:	mov	r0, sl
   1d220:	mov	r2, r6
   1d224:	add	r3, sp, #44	; 0x2c
   1d228:	bl	36850 <flatcc_json_parser_build_string@@Base>
   1d22c:	mov	r8, r0
   1d230:	ldr	r0, [sp, #44]	; 0x2c
   1d234:	cmp	r0, #0
   1d238:	beq	168a4 <main@@Base+0x9ec>
   1d23c:	ldr	r0, [sl]
   1d240:	mov	r1, #1
   1d244:	bl	2e474 <flatcc_builder_extend_offset_vector@@Base>
   1d248:	cmp	r0, #0
   1d24c:	beq	168a4 <main@@Base+0x9ec>
   1d250:	ldr	r1, [sp, #44]	; 0x2c
   1d254:	str	r1, [r0]
   1d258:	sub	r0, r6, r8
   1d25c:	cmp	r0, #2
   1d260:	blt	1d294 <main@@Base+0x73dc>
   1d264:	ldrb	r0, [r8]
   1d268:	cmp	r0, #32
   1d26c:	bls	1d280 <main@@Base+0x73c8>
   1d270:	mov	r2, r8
   1d274:	cmp	r2, r6
   1d278:	bne	1d2b0 <main@@Base+0x73f8>
   1d27c:	b	1e530 <main@@Base+0x8678>
   1d280:	bne	1d294 <main@@Base+0x73dc>
   1d284:	mov	r2, r8
   1d288:	ldrb	r0, [r2, #1]!
   1d28c:	cmp	r0, #32
   1d290:	bhi	1d2a8 <main@@Base+0x73f0>
   1d294:	mov	r0, sl
   1d298:	mov	r1, r8
   1d29c:	mov	r2, r6
   1d2a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d2a4:	mov	r2, r0
   1d2a8:	cmp	r2, r6
   1d2ac:	beq	1e530 <main@@Base+0x8678>
   1d2b0:	ldrb	r0, [r2]
   1d2b4:	cmp	r0, #44	; 0x2c
   1d2b8:	bne	1e55c <main@@Base+0x86a4>
   1d2bc:	add	r1, r2, #1
   1d2c0:	sub	r0, r6, r1
   1d2c4:	cmp	r0, #2
   1d2c8:	blt	1d2f8 <main@@Base+0x7440>
   1d2cc:	ldrb	r0, [r1]
   1d2d0:	cmp	r0, #32
   1d2d4:	bls	1d2e8 <main@@Base+0x7430>
   1d2d8:	mov	r2, r1
   1d2dc:	cmp	r2, r6
   1d2e0:	bne	1d310 <main@@Base+0x7458>
   1d2e4:	b	1e5bc <main@@Base+0x8704>
   1d2e8:	bne	1d2f8 <main@@Base+0x7440>
   1d2ec:	ldrb	r0, [r2, #2]!
   1d2f0:	cmp	r0, #32
   1d2f4:	bhi	1d308 <main@@Base+0x7450>
   1d2f8:	mov	r0, sl
   1d2fc:	mov	r2, r6
   1d300:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d304:	mov	r2, r0
   1d308:	cmp	r2, r6
   1d30c:	beq	1e5bc <main@@Base+0x8704>
   1d310:	ldrb	r0, [r2]
   1d314:	cmp	r0, #93	; 0x5d
   1d318:	bne	1d218 <main@@Base+0x7360>
   1d31c:	b	1e56c <main@@Base+0x86b4>
   1d320:	ldr	r6, [sp, #36]	; 0x24
   1d324:	ldr	sl, [sp, #32]
   1d328:	bne	1d338 <main@@Base+0x7480>
   1d32c:	ldrb	r0, [r8, #2]!
   1d330:	cmp	r0, #32
   1d334:	bhi	1d348 <main@@Base+0x7490>
   1d338:	mov	r0, sl
   1d33c:	mov	r2, r6
   1d340:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d344:	mov	r8, r0
   1d348:	cmp	r8, r6
   1d34c:	beq	1d3b0 <main@@Base+0x74f8>
   1d350:	ldrb	r0, [r8]
   1d354:	cmp	r0, #93	; 0x5d
   1d358:	bne	1d3ac <main@@Base+0x74f4>
   1d35c:	ldr	r6, [sp, #36]	; 0x24
   1d360:	ldr	sl, [sp, #32]
   1d364:	add	r1, r8, #1
   1d368:	sub	r0, r6, r1
   1d36c:	cmp	r0, #2
   1d370:	blt	1d398 <main@@Base+0x74e0>
   1d374:	ldrb	r0, [r1]
   1d378:	cmp	r0, #32
   1d37c:	bhi	1e554 <main@@Base+0x869c>
   1d380:	ldr	r6, [sp, #36]	; 0x24
   1d384:	ldr	sl, [sp, #32]
   1d388:	bne	1d398 <main@@Base+0x74e0>
   1d38c:	ldrb	r0, [r8, #2]!
   1d390:	cmp	r0, #32
   1d394:	bhi	1cb48 <main@@Base+0x6c90>
   1d398:	mov	r0, sl
   1d39c:	mov	r2, r6
   1d3a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d3a4:	b	1cb44 <main@@Base+0x6c8c>
   1d3a8:	andeq	pc, r3, r4, lsr #30
   1d3ac:	mov	r6, r8
   1d3b0:	mov	r0, #0
   1d3b4:	mov	r1, #1
   1d3b8:	strb	r0, [sp, #60]	; 0x3c
   1d3bc:	ldr	r0, [sp, #32]
   1d3c0:	ldr	r0, [r0]
   1d3c4:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1d3c8:	cmp	r0, #0
   1d3cc:	beq	1fc64 <main@@Base+0x9dac>
   1d3d0:	mov	r8, r6
   1d3d4:	ldr	r6, [sp, #36]	; 0x24
   1d3d8:	ldr	sl, [sp, #32]
   1d3dc:	mov	r7, r0
   1d3e0:	mov	r5, #0
   1d3e4:	cmp	r8, r6
   1d3e8:	str	r5, [fp, #-52]	; 0xffffffcc
   1d3ec:	str	r5, [fp, #-56]	; 0xffffffc8
   1d3f0:	strb	r5, [sp, #60]	; 0x3c
   1d3f4:	str	r5, [sp, #48]	; 0x30
   1d3f8:	beq	1d440 <main@@Base+0x7588>
   1d3fc:	sub	r0, fp, #56	; 0x38
   1d400:	mov	r1, r8
   1d404:	mov	r2, r6
   1d408:	add	r3, sp, #48	; 0x30
   1d40c:	str	r0, [sp]
   1d410:	mov	r0, sl
   1d414:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1d418:	cmp	r0, r8
   1d41c:	beq	1d450 <main@@Base+0x7598>
   1d420:	mov	r1, r0
   1d424:	ldr	r0, [sp, #48]	; 0x30
   1d428:	cmp	r0, #0
   1d42c:	beq	1d460 <main@@Base+0x75a8>
   1d430:	mov	r0, sl
   1d434:	mov	r2, r6
   1d438:	mov	r3, #8
   1d43c:	b	1d488 <main@@Base+0x75d0>
   1d440:	mov	r1, r6
   1d444:	cmp	r8, r1
   1d448:	bne	1d4d0 <main@@Base+0x7618>
   1d44c:	b	1d498 <main@@Base+0x75e0>
   1d450:	mov	r1, r8
   1d454:	cmp	r8, r1
   1d458:	bne	1d4d0 <main@@Base+0x7618>
   1d45c:	b	1d498 <main@@Base+0x75e0>
   1d460:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d464:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d468:	subs	r3, r0, #256	; 0x100
   1d46c:	sbcs	r2, r2, #0
   1d470:	bcc	1d5b8 <main@@Base+0x7700>
   1d474:	ldr	sl, [sp, #32]
   1d478:	ldr	r6, [sp, #36]	; 0x24
   1d47c:	mov	r3, #7
   1d480:	mov	r0, sl
   1d484:	mov	r2, r6
   1d488:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1d48c:	mov	r1, r0
   1d490:	cmp	r8, r1
   1d494:	bne	1d4d0 <main@@Base+0x7618>
   1d498:	add	r0, sp, #60	; 0x3c
   1d49c:	mov	r1, r8
   1d4a0:	mov	r2, r6
   1d4a4:	str	r0, [sp]
   1d4a8:	mov	r0, sl
   1d4ac:	ldr	r3, [pc, #4076]	; 1e4a0 <main@@Base+0x85e8>
   1d4b0:	add	r3, pc, r3
   1d4b4:	bl	21d80 <main@@Base+0xbec8>
   1d4b8:	mov	r1, r0
   1d4bc:	cmp	r0, r8
   1d4c0:	cmpne	r1, r6
   1d4c4:	beq	1fc48 <main@@Base+0x9d90>
   1d4c8:	ldrb	r5, [sp, #60]	; 0x3c
   1d4cc:	ldr	sl, [sp, #32]
   1d4d0:	sub	r0, r6, r1
   1d4d4:	strb	r5, [r7]
   1d4d8:	cmp	r0, #2
   1d4dc:	blt	1d510 <main@@Base+0x7658>
   1d4e0:	ldrb	r0, [r1]
   1d4e4:	cmp	r0, #32
   1d4e8:	bls	1d4fc <main@@Base+0x7644>
   1d4ec:	mov	r8, r1
   1d4f0:	cmp	r8, r6
   1d4f4:	bne	1d528 <main@@Base+0x7670>
   1d4f8:	b	1e4e0 <main@@Base+0x8628>
   1d4fc:	bne	1d510 <main@@Base+0x7658>
   1d500:	mov	r8, r1
   1d504:	ldrb	r0, [r8, #1]!
   1d508:	cmp	r0, #32
   1d50c:	bhi	1d520 <main@@Base+0x7668>
   1d510:	mov	r0, sl
   1d514:	mov	r2, r6
   1d518:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d51c:	mov	r8, r0
   1d520:	cmp	r8, r6
   1d524:	beq	1e4e0 <main@@Base+0x8628>
   1d528:	ldrb	r0, [r8]
   1d52c:	cmp	r0, #44	; 0x2c
   1d530:	bne	1e500 <main@@Base+0x8648>
   1d534:	add	r1, r8, #1
   1d538:	sub	r0, r6, r1
   1d53c:	cmp	r0, #2
   1d540:	blt	1d570 <main@@Base+0x76b8>
   1d544:	ldrb	r0, [r1]
   1d548:	cmp	r0, #32
   1d54c:	bls	1d560 <main@@Base+0x76a8>
   1d550:	mov	r8, r1
   1d554:	cmp	r8, r6
   1d558:	bne	1d588 <main@@Base+0x76d0>
   1d55c:	b	1e520 <main@@Base+0x8668>
   1d560:	bne	1d570 <main@@Base+0x76b8>
   1d564:	ldrb	r0, [r8, #2]!
   1d568:	cmp	r0, #32
   1d56c:	bhi	1d580 <main@@Base+0x76c8>
   1d570:	mov	r0, sl
   1d574:	mov	r2, r6
   1d578:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d57c:	mov	r8, r0
   1d580:	cmp	r8, r6
   1d584:	beq	1e520 <main@@Base+0x8668>
   1d588:	ldrb	r0, [r8]
   1d58c:	cmp	r0, #93	; 0x5d
   1d590:	beq	1e538 <main@@Base+0x8680>
   1d594:	mov	r0, #0
   1d598:	mov	r1, #1
   1d59c:	strb	r0, [sp, #60]	; 0x3c
   1d5a0:	ldr	r0, [sl]
   1d5a4:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1d5a8:	mov	r7, r0
   1d5ac:	cmp	r0, #0
   1d5b0:	bne	1d3e0 <main@@Base+0x7528>
   1d5b4:	b	168a4 <main@@Base+0x9ec>
   1d5b8:	ldr	r6, [sp, #36]	; 0x24
   1d5bc:	ldr	sl, [sp, #32]
   1d5c0:	mov	r5, r0
   1d5c4:	strb	r0, [sp, #60]	; 0x3c
   1d5c8:	cmp	r8, r1
   1d5cc:	bne	1d4d0 <main@@Base+0x7618>
   1d5d0:	b	1d498 <main@@Base+0x75e0>
   1d5d4:	mov	r8, r6
   1d5d8:	b	1b310 <main@@Base+0x5458>
   1d5dc:	ldr	r6, [sp, #36]	; 0x24
   1d5e0:	ldr	sl, [sp, #32]
   1d5e4:	bne	1d5f8 <main@@Base+0x7740>
   1d5e8:	ldrb	r0, [r2, #2]!
   1d5ec:	mov	r9, r2
   1d5f0:	cmp	r0, #32
   1d5f4:	bhi	1eaa4 <main@@Base+0x8bec>
   1d5f8:	mov	r0, sl
   1d5fc:	mov	r2, r6
   1d600:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d604:	b	1eaa0 <main@@Base+0x8be8>
   1d608:	cmp	r0, #93	; 0x5d
   1d60c:	bne	1e598 <main@@Base+0x86e0>
   1d610:	ldr	r6, [sp, #36]	; 0x24
   1d614:	ldr	sl, [sp, #32]
   1d618:	add	r1, r2, #1
   1d61c:	sub	r0, r6, r1
   1d620:	cmp	r0, #2
   1d624:	blt	1f7c4 <main@@Base+0x990c>
   1d628:	ldrb	r0, [r1]
   1d62c:	cmp	r0, #32
   1d630:	bls	1f7a8 <main@@Base+0x98f0>
   1d634:	ldr	r6, [sp, #36]	; 0x24
   1d638:	ldr	sl, [sp, #32]
   1d63c:	mov	r8, r1
   1d640:	b	1b310 <main@@Base+0x5458>
   1d644:	mov	r0, sl
   1d648:	mov	r1, r6
   1d64c:	b	1e5a8 <main@@Base+0x86f0>
   1d650:	ldr	r6, [sp, #36]	; 0x24
   1d654:	ldr	sl, [sp, #32]
   1d658:	bne	1d668 <main@@Base+0x77b0>
   1d65c:	ldrb	r0, [r8, #2]!
   1d660:	cmp	r0, #32
   1d664:	bhi	1d678 <main@@Base+0x77c0>
   1d668:	mov	r0, sl
   1d66c:	mov	r2, r6
   1d670:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d674:	mov	r8, r0
   1d678:	cmp	r8, r6
   1d67c:	mov	r2, r6
   1d680:	beq	1d6d4 <main@@Base+0x781c>
   1d684:	ldrb	r0, [r8]
   1d688:	cmp	r0, #125	; 0x7d
   1d68c:	bne	1d6d0 <main@@Base+0x7818>
   1d690:	ldr	r6, [sp, #36]	; 0x24
   1d694:	ldr	sl, [sp, #32]
   1d698:	add	r1, r8, #1
   1d69c:	sub	r0, r6, r1
   1d6a0:	cmp	r0, #2
   1d6a4:	blt	1f95c <main@@Base+0x9aa4>
   1d6a8:	ldrb	r0, [r1]
   1d6ac:	cmp	r0, #32
   1d6b0:	bhi	1e490 <main@@Base+0x85d8>
   1d6b4:	ldr	r6, [sp, #36]	; 0x24
   1d6b8:	ldr	sl, [sp, #32]
   1d6bc:	bne	1f95c <main@@Base+0x9aa4>
   1d6c0:	ldrb	r0, [r8, #2]!
   1d6c4:	cmp	r0, #32
   1d6c8:	bhi	1b214 <main@@Base+0x535c>
   1d6cc:	b	1f95c <main@@Base+0x9aa4>
   1d6d0:	mov	r2, r8
   1d6d4:	ldr	r6, [sp, #36]	; 0x24
   1d6d8:	ldr	sl, [sp, #32]
   1d6dc:	cmp	r2, r6
   1d6e0:	mov	r8, r6
   1d6e4:	beq	1d718 <main@@Base+0x7860>
   1d6e8:	ldrb	r0, [r2]
   1d6ec:	cmp	r0, #34	; 0x22
   1d6f0:	bne	1d700 <main@@Base+0x7848>
   1d6f4:	add	r8, r2, #1
   1d6f8:	b	1d718 <main@@Base+0x7860>
   1d6fc:	andeq	pc, r3, r8, lsl #20
   1d700:	mov	r1, r2
   1d704:	mov	r0, sl
   1d708:	mov	r2, r6
   1d70c:	mov	r3, #5
   1d710:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1d714:	mov	r8, r0
   1d718:	sub	lr, r6, r8
   1d71c:	mov	r1, #8
   1d720:	cmp	lr, #8
   1d724:	movcc	r1, lr
   1d728:	sub	r2, r1, #1
   1d72c:	cmp	r2, #7
   1d730:	bhi	1d8b0 <main@@Base+0x79f8>
   1d734:	add	r0, pc, #36	; 0x24
   1d738:	mov	r1, #0
   1d73c:	mov	ip, #0
   1d740:	mov	r9, #0
   1d744:	mov	r7, #0
   1d748:	mov	r3, #0
   1d74c:	mov	r6, #0
   1d750:	mov	r4, #0
   1d754:	ldr	r5, [r0, r2, lsl #2]
   1d758:	mov	r2, #0
   1d75c:	add	pc, r0, r5
   1d760:	andeq	r0, r0, r4, rrx
   1d764:	andeq	r0, r0, ip, asr r0
   1d768:	andeq	r0, r0, r4, asr r0
   1d76c:	andeq	r0, r0, ip, asr #32
   1d770:	andeq	r0, r0, r0, asr #32
   1d774:	andeq	r0, r0, r4, lsr r0
   1d778:	andeq	r0, r0, r4, lsr #32
   1d77c:	andeq	r0, r0, r0, lsr #32
   1d780:	ldrb	ip, [r8, #7]
   1d784:	ldrb	r0, [r8, #6]
   1d788:	mov	r9, r1
   1d78c:	orr	r0, ip, r0, lsl #8
   1d790:	mov	r1, r0
   1d794:	ldrb	r0, [r8, #5]
   1d798:	mov	r7, r9
   1d79c:	orr	r1, r1, r0, lsl #16
   1d7a0:	ldrb	r0, [r8, #4]
   1d7a4:	mov	r3, r7
   1d7a8:	orr	r1, r1, r0, lsl #24
   1d7ac:	ldrb	r0, [r8, #3]
   1d7b0:	orr	r6, r0, r3
   1d7b4:	ldrb	r0, [r8, #2]
   1d7b8:	orr	r4, r6, r0, lsl #8
   1d7bc:	ldrb	r0, [r8, #1]
   1d7c0:	orr	r2, r4, r0, lsl #16
   1d7c4:	ldrb	r0, [r8]
   1d7c8:	orr	r2, r2, r0, lsl #24
   1d7cc:	movw	r0, #0
   1d7d0:	movt	r0, #25956	; 0x6564
   1d7d4:	subs	r0, r1, r0
   1d7d8:	movw	r0, #29556	; 0x7374
   1d7dc:	movt	r0, #28261	; 0x6e65
   1d7e0:	sbcs	r0, r2, r0
   1d7e4:	bcs	1d844 <main@@Base+0x798c>
   1d7e8:	movw	r0, #29793	; 0x7461
   1d7ec:	ldr	r6, [sp, #36]	; 0x24
   1d7f0:	movt	r0, #25697	; 0x6461
   1d7f4:	teq	r2, r0
   1d7f8:	bne	1d8b0 <main@@Base+0x79f8>
   1d7fc:	cmp	lr, #5
   1d800:	mov	r1, r8
   1d804:	blt	1dad4 <main@@Base+0x7c1c>
   1d808:	ldrb	r0, [r8, #4]
   1d80c:	mov	r1, r8
   1d810:	cmp	r0, #34	; 0x22
   1d814:	bne	1dad4 <main@@Base+0x7c1c>
   1d818:	ldr	r0, [sp, #36]	; 0x24
   1d81c:	add	r2, r8, #5
   1d820:	sub	r0, r0, r2
   1d824:	cmp	r0, #2
   1d828:	blt	1d938 <main@@Base+0x7a80>
   1d82c:	ldrb	r0, [r2]
   1d830:	cmp	r0, #32
   1d834:	bls	1d924 <main@@Base+0x7a6c>
   1d838:	mov	r1, r2
   1d83c:	b	1d94c <main@@Base+0x7a94>
   1d840:	andeq	pc, r3, ip, lsr #17
   1d844:	movw	r0, #29292	; 0x726c
   1d848:	lsr	r3, r1, #8
   1d84c:	movw	r7, #29793	; 0x7461
   1d850:	movt	r0, #117	; 0x75
   1d854:	orr	r3, r3, r2, lsl #24
   1d858:	movt	r7, #25697	; 0x6461
   1d85c:	eor	r0, r0, r2, lsr #8
   1d860:	eor	r3, r3, r7
   1d864:	orrs	r0, r3, r0
   1d868:	bne	1d8bc <main@@Base+0x7a04>
   1d86c:	cmp	lr, #8
   1d870:	mov	r1, r8
   1d874:	blt	1db34 <main@@Base+0x7c7c>
   1d878:	ldrb	r0, [r8, #7]
   1d87c:	mov	r1, r8
   1d880:	cmp	r0, #34	; 0x22
   1d884:	bne	1db34 <main@@Base+0x7c7c>
   1d888:	ldr	r0, [sp, #36]	; 0x24
   1d88c:	add	r2, r8, #8
   1d890:	sub	r0, r0, r2
   1d894:	cmp	r0, #2
   1d898:	blt	1d9bc <main@@Base+0x7b04>
   1d89c:	ldrb	r0, [r2]
   1d8a0:	cmp	r0, #32
   1d8a4:	bls	1d9a8 <main@@Base+0x7af0>
   1d8a8:	mov	r1, r2
   1d8ac:	b	1d9d0 <main@@Base+0x7b18>
   1d8b0:	mov	r0, sl
   1d8b4:	mov	r1, r8
   1d8b8:	b	1dc00 <main@@Base+0x7d48>
   1d8bc:	movw	r0, #29556	; 0x7374
   1d8c0:	bfc	r1, #0, #16
   1d8c4:	movt	r0, #28261	; 0x6e65
   1d8c8:	eor	r0, r2, r0
   1d8cc:	movw	r2, #0
   1d8d0:	movt	r2, #25956	; 0x6564
   1d8d4:	eor	r1, r1, r2
   1d8d8:	orrs	r0, r1, r0
   1d8dc:	bne	1dbf0 <main@@Base+0x7d38>
   1d8e0:	cmp	lr, #7
   1d8e4:	mov	r1, r8
   1d8e8:	blt	1db94 <main@@Base+0x7cdc>
   1d8ec:	ldrb	r0, [r8, #6]
   1d8f0:	mov	r1, r8
   1d8f4:	cmp	r0, #34	; 0x22
   1d8f8:	bne	1db94 <main@@Base+0x7cdc>
   1d8fc:	ldr	r0, [sp, #36]	; 0x24
   1d900:	add	r2, r8, #7
   1d904:	sub	r0, r0, r2
   1d908:	cmp	r0, #2
   1d90c:	blt	1da40 <main@@Base+0x7b88>
   1d910:	ldrb	r0, [r2]
   1d914:	cmp	r0, #32
   1d918:	bls	1da2c <main@@Base+0x7b74>
   1d91c:	mov	r1, r2
   1d920:	b	1da54 <main@@Base+0x7b9c>
   1d924:	bne	1d938 <main@@Base+0x7a80>
   1d928:	mov	r1, r8
   1d92c:	ldrb	r0, [r1, #6]!
   1d930:	cmp	r0, #32
   1d934:	bhi	1d94c <main@@Base+0x7a94>
   1d938:	mov	r1, r2
   1d93c:	ldr	r0, [sp, #32]
   1d940:	ldr	r2, [sp, #36]	; 0x24
   1d944:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d948:	mov	r1, r0
   1d94c:	ldr	r0, [sp, #36]	; 0x24
   1d950:	cmp	r1, r0
   1d954:	beq	1d994 <main@@Base+0x7adc>
   1d958:	ldrb	r0, [r1]
   1d95c:	cmp	r0, #58	; 0x3a
   1d960:	bne	1d994 <main@@Base+0x7adc>
   1d964:	ldr	r0, [sp, #36]	; 0x24
   1d968:	add	r2, r1, #1
   1d96c:	sub	r0, r0, r2
   1d970:	cmp	r0, #2
   1d974:	blt	1dac0 <main@@Base+0x7c08>
   1d978:	ldrb	r0, [r2]
   1d97c:	cmp	r0, #32
   1d980:	bls	1dab0 <main@@Base+0x7bf8>
   1d984:	mov	r1, r2
   1d988:	cmp	r8, r1
   1d98c:	bne	1dadc <main@@Base+0x7c24>
   1d990:	b	1dbf0 <main@@Base+0x7d38>
   1d994:	ldr	r0, [sp, #32]
   1d998:	ldr	r2, [sp, #36]	; 0x24
   1d99c:	mov	r3, #4
   1d9a0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1d9a4:	b	1dad0 <main@@Base+0x7c18>
   1d9a8:	bne	1d9bc <main@@Base+0x7b04>
   1d9ac:	mov	r1, r8
   1d9b0:	ldrb	r0, [r1, #9]!
   1d9b4:	cmp	r0, #32
   1d9b8:	bhi	1d9d0 <main@@Base+0x7b18>
   1d9bc:	mov	r1, r2
   1d9c0:	ldr	r0, [sp, #32]
   1d9c4:	ldr	r2, [sp, #36]	; 0x24
   1d9c8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1d9cc:	mov	r1, r0
   1d9d0:	ldr	r0, [sp, #36]	; 0x24
   1d9d4:	cmp	r1, r0
   1d9d8:	beq	1da18 <main@@Base+0x7b60>
   1d9dc:	ldrb	r0, [r1]
   1d9e0:	cmp	r0, #58	; 0x3a
   1d9e4:	bne	1da18 <main@@Base+0x7b60>
   1d9e8:	ldr	r0, [sp, #36]	; 0x24
   1d9ec:	add	r2, r1, #1
   1d9f0:	sub	r0, r0, r2
   1d9f4:	cmp	r0, #2
   1d9f8:	blt	1db20 <main@@Base+0x7c68>
   1d9fc:	ldrb	r0, [r2]
   1da00:	cmp	r0, #32
   1da04:	bls	1db10 <main@@Base+0x7c58>
   1da08:	mov	r1, r2
   1da0c:	cmp	r8, r1
   1da10:	bne	1db3c <main@@Base+0x7c84>
   1da14:	b	1dbf0 <main@@Base+0x7d38>
   1da18:	ldr	r0, [sp, #32]
   1da1c:	ldr	r2, [sp, #36]	; 0x24
   1da20:	mov	r3, #4
   1da24:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1da28:	b	1db30 <main@@Base+0x7c78>
   1da2c:	bne	1da40 <main@@Base+0x7b88>
   1da30:	mov	r1, r8
   1da34:	ldrb	r0, [r1, #8]!
   1da38:	cmp	r0, #32
   1da3c:	bhi	1da54 <main@@Base+0x7b9c>
   1da40:	mov	r1, r2
   1da44:	ldr	r0, [sp, #32]
   1da48:	ldr	r2, [sp, #36]	; 0x24
   1da4c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1da50:	mov	r1, r0
   1da54:	ldr	r0, [sp, #36]	; 0x24
   1da58:	cmp	r1, r0
   1da5c:	beq	1da9c <main@@Base+0x7be4>
   1da60:	ldrb	r0, [r1]
   1da64:	cmp	r0, #58	; 0x3a
   1da68:	bne	1da9c <main@@Base+0x7be4>
   1da6c:	ldr	r0, [sp, #36]	; 0x24
   1da70:	add	r2, r1, #1
   1da74:	sub	r0, r0, r2
   1da78:	cmp	r0, #2
   1da7c:	blt	1db80 <main@@Base+0x7cc8>
   1da80:	ldrb	r0, [r2]
   1da84:	cmp	r0, #32
   1da88:	bls	1db70 <main@@Base+0x7cb8>
   1da8c:	mov	r1, r2
   1da90:	cmp	r8, r1
   1da94:	bne	1db9c <main@@Base+0x7ce4>
   1da98:	b	1dbf0 <main@@Base+0x7d38>
   1da9c:	ldr	r0, [sp, #32]
   1daa0:	ldr	r2, [sp, #36]	; 0x24
   1daa4:	mov	r3, #4
   1daa8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1daac:	b	1db90 <main@@Base+0x7cd8>
   1dab0:	bne	1dac0 <main@@Base+0x7c08>
   1dab4:	ldrb	r0, [r1, #2]!
   1dab8:	cmp	r0, #32
   1dabc:	bhi	1dad4 <main@@Base+0x7c1c>
   1dac0:	mov	r1, r2
   1dac4:	ldr	r0, [sp, #32]
   1dac8:	ldr	r2, [sp, #36]	; 0x24
   1dacc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1dad0:	mov	r1, r0
   1dad4:	cmp	r8, r1
   1dad8:	beq	1dbf0 <main@@Base+0x7d38>
   1dadc:	mov	r0, #0
   1dae0:	ldr	r2, [sp, #36]	; 0x24
   1dae4:	sub	r3, fp, #56	; 0x38
   1dae8:	str	r0, [sp]
   1daec:	ldr	r0, [sp, #32]
   1daf0:	bl	36414 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1daf4:	mov	r8, r0
   1daf8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dafc:	cmp	r0, #0
   1db00:	beq	1eeb0 <main@@Base+0x8ff8>
   1db04:	ldr	r0, [sp, #32]
   1db08:	mov	r1, #0
   1db0c:	b	1dbcc <main@@Base+0x7d14>
   1db10:	bne	1db20 <main@@Base+0x7c68>
   1db14:	ldrb	r0, [r1, #2]!
   1db18:	cmp	r0, #32
   1db1c:	bhi	1db34 <main@@Base+0x7c7c>
   1db20:	mov	r1, r2
   1db24:	ldr	r0, [sp, #32]
   1db28:	ldr	r2, [sp, #36]	; 0x24
   1db2c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1db30:	mov	r1, r0
   1db34:	cmp	r8, r1
   1db38:	beq	1dbf0 <main@@Base+0x7d38>
   1db3c:	mov	r0, #1
   1db40:	ldr	r2, [sp, #36]	; 0x24
   1db44:	sub	r3, fp, #56	; 0x38
   1db48:	str	r0, [sp]
   1db4c:	ldr	r0, [sp, #32]
   1db50:	bl	36414 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1db54:	mov	r8, r0
   1db58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1db5c:	cmp	r0, #0
   1db60:	beq	1eeb0 <main@@Base+0x8ff8>
   1db64:	ldr	r0, [sp, #32]
   1db68:	mov	r1, #1
   1db6c:	b	1dbcc <main@@Base+0x7d14>
   1db70:	bne	1db80 <main@@Base+0x7cc8>
   1db74:	ldrb	r0, [r1, #2]!
   1db78:	cmp	r0, #32
   1db7c:	bhi	1db94 <main@@Base+0x7cdc>
   1db80:	mov	r1, r2
   1db84:	ldr	r0, [sp, #32]
   1db88:	ldr	r2, [sp, #36]	; 0x24
   1db8c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1db90:	mov	r1, r0
   1db94:	cmp	r8, r1
   1db98:	beq	1dbf0 <main@@Base+0x7d38>
   1db9c:	mov	r0, #0
   1dba0:	ldr	r2, [sp, #36]	; 0x24
   1dba4:	sub	r3, fp, #56	; 0x38
   1dba8:	str	r0, [sp]
   1dbac:	ldr	r0, [sp, #32]
   1dbb0:	bl	36414 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1dbb4:	mov	r8, r0
   1dbb8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dbbc:	cmp	r0, #0
   1dbc0:	beq	1eeb0 <main@@Base+0x8ff8>
   1dbc4:	ldr	r0, [sp, #32]
   1dbc8:	mov	r1, #2
   1dbcc:	ldr	r0, [r0]
   1dbd0:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   1dbd4:	cmp	r0, #0
   1dbd8:	beq	1eeb0 <main@@Base+0x8ff8>
   1dbdc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1dbe0:	str	r1, [r0]
   1dbe4:	ldr	r6, [sp, #36]	; 0x24
   1dbe8:	ldr	sl, [sp, #32]
   1dbec:	b	1dc0c <main@@Base+0x7d54>
   1dbf0:	ldr	sl, [sp, #32]
   1dbf4:	ldr	r6, [sp, #36]	; 0x24
   1dbf8:	mov	r1, r8
   1dbfc:	mov	r0, sl
   1dc00:	mov	r2, r6
   1dc04:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   1dc08:	mov	r8, r0
   1dc0c:	sub	r0, r6, r8
   1dc10:	cmp	r0, #2
   1dc14:	blt	1dc48 <main@@Base+0x7d90>
   1dc18:	ldrb	r0, [r8]
   1dc1c:	cmp	r0, #32
   1dc20:	bls	1dc34 <main@@Base+0x7d7c>
   1dc24:	mov	r2, r8
   1dc28:	cmp	r2, r6
   1dc2c:	bne	1dc64 <main@@Base+0x7dac>
   1dc30:	b	1e454 <main@@Base+0x859c>
   1dc34:	bne	1dc48 <main@@Base+0x7d90>
   1dc38:	mov	r2, r8
   1dc3c:	ldrb	r0, [r2, #1]!
   1dc40:	cmp	r0, #32
   1dc44:	bhi	1dc5c <main@@Base+0x7da4>
   1dc48:	mov	r0, sl
   1dc4c:	mov	r1, r8
   1dc50:	mov	r2, r6
   1dc54:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1dc58:	mov	r2, r0
   1dc5c:	cmp	r2, r6
   1dc60:	beq	1e454 <main@@Base+0x859c>
   1dc64:	ldrb	r0, [r2]
   1dc68:	cmp	r0, #44	; 0x2c
   1dc6c:	bne	1e464 <main@@Base+0x85ac>
   1dc70:	add	r1, r2, #1
   1dc74:	sub	r0, r6, r1
   1dc78:	cmp	r0, #2
   1dc7c:	blt	1dcac <main@@Base+0x7df4>
   1dc80:	ldrb	r0, [r1]
   1dc84:	cmp	r0, #32
   1dc88:	bls	1dc9c <main@@Base+0x7de4>
   1dc8c:	mov	r2, r1
   1dc90:	cmp	r2, r6
   1dc94:	bne	1dcc4 <main@@Base+0x7e0c>
   1dc98:	b	1e4e8 <main@@Base+0x8630>
   1dc9c:	bne	1dcac <main@@Base+0x7df4>
   1dca0:	ldrb	r0, [r2, #2]!
   1dca4:	cmp	r0, #32
   1dca8:	bhi	1dcbc <main@@Base+0x7e04>
   1dcac:	mov	r0, sl
   1dcb0:	mov	r2, r6
   1dcb4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1dcb8:	mov	r2, r0
   1dcbc:	cmp	r2, r6
   1dcc0:	beq	1e4e8 <main@@Base+0x8630>
   1dcc4:	ldrb	r0, [r2]
   1dcc8:	cmp	r0, #125	; 0x7d
   1dccc:	bne	1d6dc <main@@Base+0x7824>
   1dcd0:	b	1e474 <main@@Base+0x85bc>
   1dcd4:	ldr	r6, [sp, #36]	; 0x24
   1dcd8:	ldr	sl, [sp, #32]
   1dcdc:	bne	1dcec <main@@Base+0x7e34>
   1dce0:	ldrb	r0, [r9, #2]!
   1dce4:	cmp	r0, #32
   1dce8:	bhi	1dcfc <main@@Base+0x7e44>
   1dcec:	mov	r0, sl
   1dcf0:	mov	r2, r6
   1dcf4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1dcf8:	mov	r9, r0
   1dcfc:	cmp	r9, r6
   1dd00:	beq	1dd60 <main@@Base+0x7ea8>
   1dd04:	ldrb	r0, [r9]
   1dd08:	cmp	r0, #93	; 0x5d
   1dd0c:	bne	1dd5c <main@@Base+0x7ea4>
   1dd10:	ldr	r6, [sp, #36]	; 0x24
   1dd14:	ldr	sl, [sp, #32]
   1dd18:	add	r1, r9, #1
   1dd1c:	sub	r0, r6, r1
   1dd20:	cmp	r0, #2
   1dd24:	blt	1dd4c <main@@Base+0x7e94>
   1dd28:	ldrb	r0, [r1]
   1dd2c:	cmp	r0, #32
   1dd30:	bhi	1e888 <main@@Base+0x89d0>
   1dd34:	ldr	r6, [sp, #36]	; 0x24
   1dd38:	ldr	sl, [sp, #32]
   1dd3c:	bne	1dd4c <main@@Base+0x7e94>
   1dd40:	ldrb	r0, [r9, #2]!
   1dd44:	cmp	r0, #32
   1dd48:	bhi	1cc3c <main@@Base+0x6d84>
   1dd4c:	mov	r0, sl
   1dd50:	mov	r2, r6
   1dd54:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1dd58:	b	1cc38 <main@@Base+0x6d80>
   1dd5c:	mov	r6, r9
   1dd60:	mov	r0, #0
   1dd64:	mov	r1, #1
   1dd68:	str	r0, [sp, #52]	; 0x34
   1dd6c:	str	r0, [sp, #48]	; 0x30
   1dd70:	ldr	r0, [sp, #32]
   1dd74:	ldr	r0, [r0]
   1dd78:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1dd7c:	cmp	r0, #0
   1dd80:	beq	1fc88 <main@@Base+0x9dd0>
   1dd84:	mov	r9, r6
   1dd88:	ldr	r6, [sp, #36]	; 0x24
   1dd8c:	ldr	sl, [sp, #32]
   1dd90:	mov	r4, r0
   1dd94:	mov	r0, #0
   1dd98:	cmp	r9, r6
   1dd9c:	str	r0, [fp, #-52]	; 0xffffffcc
   1dda0:	str	r0, [fp, #-56]	; 0xffffffc8
   1dda4:	str	r0, [sp, #52]	; 0x34
   1dda8:	str	r0, [sp, #48]	; 0x30
   1ddac:	str	r0, [sp, #60]	; 0x3c
   1ddb0:	beq	1de10 <main@@Base+0x7f58>
   1ddb4:	sub	r0, fp, #56	; 0x38
   1ddb8:	mov	r1, r9
   1ddbc:	mov	r2, r6
   1ddc0:	add	r3, sp, #60	; 0x3c
   1ddc4:	str	r0, [sp]
   1ddc8:	mov	r0, sl
   1ddcc:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1ddd0:	cmp	r0, r9
   1ddd4:	beq	1de24 <main@@Base+0x7f6c>
   1ddd8:	ldr	r2, [sp, #60]	; 0x3c
   1dddc:	mov	r1, r0
   1dde0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dde4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dde8:	cmp	r2, #0
   1ddec:	beq	1de3c <main@@Base+0x7f84>
   1ddf0:	rsbs	r2, r0, #0
   1ddf4:	mov	r2, #-2147483648	; 0x80000000
   1ddf8:	sbcs	r2, r2, r3
   1ddfc:	bcs	1de74 <main@@Base+0x7fbc>
   1de00:	ldr	sl, [sp, #32]
   1de04:	ldr	r6, [sp, #36]	; 0x24
   1de08:	mov	r3, #8
   1de0c:	b	1de50 <main@@Base+0x7f98>
   1de10:	mov	r3, #0
   1de14:	mov	r1, r6
   1de18:	cmp	r9, r1
   1de1c:	bne	1ded0 <main@@Base+0x8018>
   1de20:	b	1de94 <main@@Base+0x7fdc>
   1de24:	mov	r0, #0
   1de28:	mov	r3, #0
   1de2c:	mov	r1, r9
   1de30:	cmp	r9, r1
   1de34:	bne	1ded0 <main@@Base+0x8018>
   1de38:	b	1de94 <main@@Base+0x7fdc>
   1de3c:	cmn	r3, #1
   1de40:	bgt	1de7c <main@@Base+0x7fc4>
   1de44:	ldr	sl, [sp, #32]
   1de48:	ldr	r6, [sp, #36]	; 0x24
   1de4c:	mov	r3, #7
   1de50:	mov	r0, sl
   1de54:	mov	r2, r6
   1de58:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1de5c:	mov	r1, r0
   1de60:	mov	r0, #0
   1de64:	mov	r3, #0
   1de68:	cmp	r9, r1
   1de6c:	bne	1ded0 <main@@Base+0x8018>
   1de70:	b	1de94 <main@@Base+0x7fdc>
   1de74:	rsbs	r0, r0, #0
   1de78:	rsc	r3, r3, #0
   1de7c:	ldr	r6, [sp, #36]	; 0x24
   1de80:	ldr	sl, [sp, #32]
   1de84:	str	r0, [sp, #48]	; 0x30
   1de88:	str	r3, [sp, #52]	; 0x34
   1de8c:	cmp	r9, r1
   1de90:	bne	1ded0 <main@@Base+0x8018>
   1de94:	add	r0, sp, #48	; 0x30
   1de98:	mov	r1, r9
   1de9c:	mov	r2, r6
   1dea0:	str	r0, [sp]
   1dea4:	mov	r0, sl
   1dea8:	ldr	r3, [pc, #4092]	; 1eeac <main@@Base+0x8ff4>
   1deac:	add	r3, pc, r3
   1deb0:	bl	24138 <main@@Base+0xe280>
   1deb4:	mov	r1, r0
   1deb8:	cmp	r0, r9
   1debc:	cmpne	r1, r6
   1dec0:	beq	1fc54 <main@@Base+0x9d9c>
   1dec4:	ldr	r0, [sp, #48]	; 0x30
   1dec8:	ldr	r3, [sp, #52]	; 0x34
   1decc:	ldr	sl, [sp, #32]
   1ded0:	stm	r4, {r0, r3}
   1ded4:	sub	r0, r6, r1
   1ded8:	cmp	r0, #2
   1dedc:	blt	1df10 <main@@Base+0x8058>
   1dee0:	ldrb	r0, [r1]
   1dee4:	cmp	r0, #32
   1dee8:	bls	1defc <main@@Base+0x8044>
   1deec:	mov	r9, r1
   1def0:	cmp	r9, r6
   1def4:	bne	1df28 <main@@Base+0x8070>
   1def8:	b	1e5b4 <main@@Base+0x86fc>
   1defc:	bne	1df10 <main@@Base+0x8058>
   1df00:	mov	r9, r1
   1df04:	ldrb	r0, [r9, #1]!
   1df08:	cmp	r0, #32
   1df0c:	bhi	1df20 <main@@Base+0x8068>
   1df10:	mov	r0, sl
   1df14:	mov	r2, r6
   1df18:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1df1c:	mov	r9, r0
   1df20:	cmp	r9, r6
   1df24:	beq	1e5b4 <main@@Base+0x86fc>
   1df28:	ldrb	r0, [r9]
   1df2c:	cmp	r0, #44	; 0x2c
   1df30:	bne	1e5c8 <main@@Base+0x8710>
   1df34:	add	r1, r9, #1
   1df38:	sub	r0, r6, r1
   1df3c:	cmp	r0, #2
   1df40:	blt	1df70 <main@@Base+0x80b8>
   1df44:	ldrb	r0, [r1]
   1df48:	cmp	r0, #32
   1df4c:	bls	1df60 <main@@Base+0x80a8>
   1df50:	mov	r9, r1
   1df54:	cmp	r9, r6
   1df58:	bne	1df88 <main@@Base+0x80d0>
   1df5c:	b	1e820 <main@@Base+0x8968>
   1df60:	bne	1df70 <main@@Base+0x80b8>
   1df64:	ldrb	r0, [r9, #2]!
   1df68:	cmp	r0, #32
   1df6c:	bhi	1df80 <main@@Base+0x80c8>
   1df70:	mov	r0, sl
   1df74:	mov	r2, r6
   1df78:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1df7c:	mov	r9, r0
   1df80:	cmp	r9, r6
   1df84:	beq	1e820 <main@@Base+0x8968>
   1df88:	ldrb	r0, [r9]
   1df8c:	cmp	r0, #93	; 0x5d
   1df90:	beq	1e86c <main@@Base+0x89b4>
   1df94:	mov	r0, #0
   1df98:	mov	r1, #1
   1df9c:	str	r0, [sp, #52]	; 0x34
   1dfa0:	str	r0, [sp, #48]	; 0x30
   1dfa4:	ldr	r0, [sl]
   1dfa8:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1dfac:	mov	r4, r0
   1dfb0:	cmp	r0, #0
   1dfb4:	bne	1dd94 <main@@Base+0x7edc>
   1dfb8:	b	1fc38 <main@@Base+0x9d80>
   1dfbc:	ldr	r6, [sp, #36]	; 0x24
   1dfc0:	ldr	sl, [sp, #32]
   1dfc4:	bne	1dfd4 <main@@Base+0x811c>
   1dfc8:	ldrb	r0, [r9, #2]!
   1dfcc:	cmp	r0, #32
   1dfd0:	bhi	1dfe4 <main@@Base+0x812c>
   1dfd4:	mov	r0, sl
   1dfd8:	mov	r2, r6
   1dfdc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1dfe0:	mov	r9, r0
   1dfe4:	cmp	r7, r9
   1dfe8:	beq	1ea90 <main@@Base+0x8bd8>
   1dfec:	ldr	r0, [sl]
   1dff0:	mov	r1, #8
   1dff4:	mov	r2, #8
   1dff8:	mvn	r3, #-536870912	; 0xe0000000
   1dffc:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   1e000:	cmp	r0, #0
   1e004:	bne	1fc90 <main@@Base+0x9dd8>
   1e008:	cmp	r9, r6
   1e00c:	beq	1e040 <main@@Base+0x8188>
   1e010:	ldrb	r0, [r9]
   1e014:	cmp	r0, #91	; 0x5b
   1e018:	bne	1e040 <main@@Base+0x8188>
   1e01c:	add	r1, r9, #1
   1e020:	sub	r0, r6, r1
   1e024:	cmp	r0, #2
   1e028:	blt	1e5f8 <main@@Base+0x8740>
   1e02c:	ldrb	r0, [r1]
   1e030:	cmp	r0, #32
   1e034:	bls	1e5e8 <main@@Base+0x8730>
   1e038:	mov	r9, r1
   1e03c:	b	1e608 <main@@Base+0x8750>
   1e040:	ldr	sl, [sp, #32]
   1e044:	mov	r1, r9
   1e048:	mov	r2, r6
   1e04c:	mov	r3, #22
   1e050:	mov	r0, sl
   1e054:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1e058:	mov	r9, r0
   1e05c:	ldr	r0, [sl]
   1e060:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   1e064:	cmp	r0, #0
   1e068:	str	r0, [sp, #44]	; 0x2c
   1e06c:	beq	1fc34 <main@@Base+0x9d7c>
   1e070:	ldr	r0, [sl]
   1e074:	mov	r1, #33	; 0x21
   1e078:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   1e07c:	cmp	r0, #0
   1e080:	beq	1fc34 <main@@Base+0x9d7c>
   1e084:	ldr	r1, [sp, #44]	; 0x2c
   1e088:	ldr	r6, [sp, #36]	; 0x24
   1e08c:	str	r1, [r0]
   1e090:	b	1eaa4 <main@@Base+0x8bec>
   1e094:	mov	r6, r0
   1e098:	ldr	sl, [sp, #32]
   1e09c:	str	r6, [sp, #60]	; 0x3c
   1e0a0:	cmp	r8, r9
   1e0a4:	bne	1e0e4 <main@@Base+0x822c>
   1e0a8:	add	r0, sp, #60	; 0x3c
   1e0ac:	ldr	r2, [sp, #36]	; 0x24
   1e0b0:	mov	r1, r8
   1e0b4:	str	r0, [sp]
   1e0b8:	mov	r0, sl
   1e0bc:	ldr	r3, [pc, #4052]	; 1f098 <main@@Base+0x91e0>
   1e0c0:	add	r3, pc, r3
   1e0c4:	bl	23f4c <main@@Base+0xe094>
   1e0c8:	cmp	r0, r8
   1e0cc:	mov	r9, r0
   1e0d0:	ldrne	r1, [sp, #36]	; 0x24
   1e0d4:	cmpne	r9, r1
   1e0d8:	beq	1fc08 <main@@Base+0x9d50>
   1e0dc:	ldr	r6, [sp, #60]	; 0x3c
   1e0e0:	ldr	sl, [sp, #32]
   1e0e4:	cmp	r6, #0
   1e0e8:	bne	1e0f8 <main@@Base+0x8240>
   1e0ec:	ldrb	r0, [sl, #8]
   1e0f0:	tst	r0, #2
   1e0f4:	beq	1ec30 <main@@Base+0x8d78>
   1e0f8:	ldr	r0, [sl]
   1e0fc:	mov	r1, #20
   1e100:	mov	r2, #4
   1e104:	mov	r3, #4
   1e108:	bl	3063c <flatcc_builder_table_add@@Base>
   1e10c:	cmp	r0, #0
   1e110:	beq	1fc08 <main@@Base+0x9d50>
   1e114:	str	r6, [r0]
   1e118:	b	1ec30 <main@@Base+0x8d78>
   1e11c:	ldr	r6, [sp, #36]	; 0x24
   1e120:	ldr	sl, [sp, #32]
   1e124:	bne	1e134 <main@@Base+0x827c>
   1e128:	ldrb	r0, [r8, #2]!
   1e12c:	cmp	r0, #32
   1e130:	bhi	1e144 <main@@Base+0x828c>
   1e134:	mov	r0, sl
   1e138:	mov	r2, r6
   1e13c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e140:	mov	r8, r0
   1e144:	cmp	r7, r8
   1e148:	beq	1ea90 <main@@Base+0x8bd8>
   1e14c:	mov	r2, r6
   1e150:	mov	r6, #0
   1e154:	cmp	r8, r2
   1e158:	str	r6, [fp, #-52]	; 0xffffffcc
   1e15c:	str	r6, [fp, #-56]	; 0xffffffc8
   1e160:	str	r6, [sp, #52]	; 0x34
   1e164:	str	r6, [sp, #48]	; 0x30
   1e168:	str	r6, [sp, #60]	; 0x3c
   1e16c:	beq	1e1c8 <main@@Base+0x8310>
   1e170:	sub	r0, fp, #56	; 0x38
   1e174:	mov	r1, r8
   1e178:	add	r3, sp, #60	; 0x3c
   1e17c:	str	r0, [sp]
   1e180:	mov	r0, sl
   1e184:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1e188:	cmp	r0, r8
   1e18c:	beq	1e1dc <main@@Base+0x8324>
   1e190:	mov	r9, r0
   1e194:	ldr	r0, [sp, #60]	; 0x3c
   1e198:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e19c:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1e1a0:	cmp	r0, #0
   1e1a4:	beq	1e1f4 <main@@Base+0x833c>
   1e1a8:	subs	r0, r6, #1
   1e1ac:	sbcs	r0, r7, #-2147483648	; 0x80000000
   1e1b0:	bcc	1e3c0 <main@@Base+0x8508>
   1e1b4:	ldr	r0, [sp, #32]
   1e1b8:	ldr	r2, [sp, #36]	; 0x24
   1e1bc:	mov	r1, r9
   1e1c0:	mov	r3, #8
   1e1c4:	b	1e20c <main@@Base+0x8354>
   1e1c8:	mov	r7, #0
   1e1cc:	mov	r9, r2
   1e1d0:	cmp	r8, r9
   1e1d4:	bne	1e414 <main@@Base+0x855c>
   1e1d8:	b	1e3d8 <main@@Base+0x8520>
   1e1dc:	mov	r6, #0
   1e1e0:	mov	r7, #0
   1e1e4:	mov	r9, r8
   1e1e8:	cmp	r8, r9
   1e1ec:	bne	1e414 <main@@Base+0x855c>
   1e1f0:	b	1e3d8 <main@@Base+0x8520>
   1e1f4:	cmn	r7, #1
   1e1f8:	bgt	1e3c8 <main@@Base+0x8510>
   1e1fc:	ldr	r0, [sp, #32]
   1e200:	ldr	r2, [sp, #36]	; 0x24
   1e204:	mov	r1, r9
   1e208:	mov	r3, #7
   1e20c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1e210:	mov	r9, r0
   1e214:	mov	r6, #0
   1e218:	mov	r7, #0
   1e21c:	cmp	r8, r9
   1e220:	bne	1e414 <main@@Base+0x855c>
   1e224:	b	1e3d8 <main@@Base+0x8520>
   1e228:	ldr	r6, [sp, #36]	; 0x24
   1e22c:	bne	1e23c <main@@Base+0x8384>
   1e230:	ldrb	r0, [r8, #2]!
   1e234:	cmp	r0, #32
   1e238:	bhi	1e24c <main@@Base+0x8394>
   1e23c:	ldr	r0, [sp, #32]
   1e240:	mov	r2, r6
   1e244:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e248:	mov	r8, r0
   1e24c:	cmp	r8, r6
   1e250:	mov	r3, r6
   1e254:	beq	1e2a8 <main@@Base+0x83f0>
   1e258:	ldrb	r0, [r8]
   1e25c:	cmp	r0, #125	; 0x7d
   1e260:	bne	1e2a4 <main@@Base+0x83ec>
   1e264:	ldr	r6, [sp, #36]	; 0x24
   1e268:	ldr	sl, [sp, #32]
   1e26c:	add	r1, r8, #1
   1e270:	sub	r0, r6, r1
   1e274:	cmp	r0, #2
   1e278:	blt	1fabc <main@@Base+0x9c04>
   1e27c:	ldrb	r0, [r1]
   1e280:	cmp	r0, #32
   1e284:	bhi	1e85c <main@@Base+0x89a4>
   1e288:	ldr	r6, [sp, #36]	; 0x24
   1e28c:	ldr	sl, [sp, #32]
   1e290:	bne	1fabc <main@@Base+0x9c04>
   1e294:	ldrb	r0, [r8, #2]!
   1e298:	cmp	r0, #32
   1e29c:	bhi	1b908 <main@@Base+0x5a50>
   1e2a0:	b	1fabc <main@@Base+0x9c04>
   1e2a4:	mov	r3, r8
   1e2a8:	ldr	r6, [sp, #36]	; 0x24
   1e2ac:	ldr	sl, [sp, #32]
   1e2b0:	cmp	r3, r6
   1e2b4:	mov	r1, r6
   1e2b8:	beq	1e2e8 <main@@Base+0x8430>
   1e2bc:	ldrb	r0, [r3]
   1e2c0:	cmp	r0, #34	; 0x22
   1e2c4:	bne	1e2d0 <main@@Base+0x8418>
   1e2c8:	add	r1, r3, #1
   1e2cc:	b	1e2e8 <main@@Base+0x8430>
   1e2d0:	mov	r1, r3
   1e2d4:	mov	r0, sl
   1e2d8:	mov	r2, r6
   1e2dc:	mov	r3, #5
   1e2e0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1e2e4:	mov	r1, r0
   1e2e8:	mov	r0, sl
   1e2ec:	mov	r2, r6
   1e2f0:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e2f4:	mov	r2, r0
   1e2f8:	sub	r0, r6, r0
   1e2fc:	cmp	r0, #2
   1e300:	blt	1e334 <main@@Base+0x847c>
   1e304:	ldrb	r0, [r2]
   1e308:	cmp	r0, #32
   1e30c:	bls	1e320 <main@@Base+0x8468>
   1e310:	mov	r3, r2
   1e314:	cmp	r3, r6
   1e318:	bne	1e350 <main@@Base+0x8498>
   1e31c:	b	1e818 <main@@Base+0x8960>
   1e320:	bne	1e334 <main@@Base+0x847c>
   1e324:	mov	r3, r2
   1e328:	ldrb	r0, [r3, #1]!
   1e32c:	cmp	r0, #32
   1e330:	bhi	1e348 <main@@Base+0x8490>
   1e334:	mov	r1, r2
   1e338:	mov	r0, sl
   1e33c:	mov	r2, r6
   1e340:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e344:	mov	r3, r0
   1e348:	cmp	r3, r6
   1e34c:	beq	1e818 <main@@Base+0x8960>
   1e350:	ldrb	r0, [r3]
   1e354:	cmp	r0, #44	; 0x2c
   1e358:	bne	1e830 <main@@Base+0x8978>
   1e35c:	add	r1, r3, #1
   1e360:	sub	r0, r6, r1
   1e364:	cmp	r0, #2
   1e368:	blt	1e398 <main@@Base+0x84e0>
   1e36c:	ldrb	r0, [r1]
   1e370:	cmp	r0, #32
   1e374:	bls	1e388 <main@@Base+0x84d0>
   1e378:	mov	r3, r1
   1e37c:	cmp	r3, r6
   1e380:	bne	1e3b0 <main@@Base+0x84f8>
   1e384:	b	1e890 <main@@Base+0x89d8>
   1e388:	bne	1e398 <main@@Base+0x84e0>
   1e38c:	ldrb	r0, [r3, #2]!
   1e390:	cmp	r0, #32
   1e394:	bhi	1e3a8 <main@@Base+0x84f0>
   1e398:	mov	r0, sl
   1e39c:	mov	r2, r6
   1e3a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e3a4:	mov	r3, r0
   1e3a8:	cmp	r3, r6
   1e3ac:	beq	1e890 <main@@Base+0x89d8>
   1e3b0:	ldrb	r0, [r3]
   1e3b4:	cmp	r0, #125	; 0x7d
   1e3b8:	bne	1e2b0 <main@@Base+0x83f8>
   1e3bc:	b	1e840 <main@@Base+0x8988>
   1e3c0:	rsbs	r6, r6, #0
   1e3c4:	rsc	r7, r7, #0
   1e3c8:	str	r6, [sp, #48]	; 0x30
   1e3cc:	str	r7, [sp, #52]	; 0x34
   1e3d0:	cmp	r8, r9
   1e3d4:	bne	1e414 <main@@Base+0x855c>
   1e3d8:	add	r0, sp, #48	; 0x30
   1e3dc:	ldr	r2, [sp, #36]	; 0x24
   1e3e0:	mov	r1, r8
   1e3e4:	str	r0, [sp]
   1e3e8:	ldr	r0, [sp, #32]
   1e3ec:	ldr	r3, [pc, #3988]	; 1f388 <main@@Base+0x94d0>
   1e3f0:	add	r3, pc, r3
   1e3f4:	bl	24138 <main@@Base+0xe280>
   1e3f8:	cmp	r0, r8
   1e3fc:	mov	r9, r0
   1e400:	ldrne	r1, [sp, #36]	; 0x24
   1e404:	cmpne	r9, r1
   1e408:	beq	1fc08 <main@@Base+0x9d50>
   1e40c:	ldr	r6, [sp, #48]	; 0x30
   1e410:	ldr	r7, [sp, #52]	; 0x34
   1e414:	ldr	sl, [sp, #32]
   1e418:	orrs	r0, r6, r7
   1e41c:	bne	1e42c <main@@Base+0x8574>
   1e420:	ldrb	r0, [sl, #8]
   1e424:	tst	r0, #2
   1e428:	beq	1ec30 <main@@Base+0x8d78>
   1e42c:	ldr	r0, [sl]
   1e430:	mov	r1, #22
   1e434:	b	1ec14 <main@@Base+0x8d5c>
   1e438:	ldr	sl, [sp, #32]
   1e43c:	ldr	r6, [sp, #36]	; 0x24
   1e440:	mov	r1, r9
   1e444:	mov	r0, sl
   1e448:	mov	r2, r6
   1e44c:	mov	r3, #9
   1e450:	b	1b3bc <main@@Base+0x5504>
   1e454:	mov	r8, r6
   1e458:	b	1b214 <main@@Base+0x535c>
   1e45c:	mov	r8, r6
   1e460:	b	1c620 <main@@Base+0x6768>
   1e464:	cmp	r0, #125	; 0x7d
   1e468:	bne	1f800 <main@@Base+0x9948>
   1e46c:	ldr	r6, [sp, #36]	; 0x24
   1e470:	ldr	sl, [sp, #32]
   1e474:	add	r1, r2, #1
   1e478:	sub	r0, r6, r1
   1e47c:	cmp	r0, #2
   1e480:	blt	1f95c <main@@Base+0x9aa4>
   1e484:	ldrb	r0, [r1]
   1e488:	cmp	r0, #32
   1e48c:	bls	1f940 <main@@Base+0x9a88>
   1e490:	ldr	r6, [sp, #36]	; 0x24
   1e494:	ldr	sl, [sp, #32]
   1e498:	mov	r8, r1
   1e49c:	b	1b214 <main@@Base+0x535c>
   1e4a0:	strdeq	lr, [r3], -ip
   1e4a4:	cmp	r0, #93	; 0x5d
   1e4a8:	bne	1f81c <main@@Base+0x9964>
   1e4ac:	ldr	r6, [sp, #36]	; 0x24
   1e4b0:	ldr	sl, [sp, #32]
   1e4b4:	add	r1, r2, #1
   1e4b8:	sub	r0, r6, r1
   1e4bc:	cmp	r0, #2
   1e4c0:	blt	1f9bc <main@@Base+0x9b04>
   1e4c4:	ldrb	r0, [r1]
   1e4c8:	cmp	r0, #32
   1e4cc:	bls	1f9a0 <main@@Base+0x9ae8>
   1e4d0:	ldr	r6, [sp, #36]	; 0x24
   1e4d4:	ldr	sl, [sp, #32]
   1e4d8:	mov	r8, r1
   1e4dc:	b	1c620 <main@@Base+0x6768>
   1e4e0:	mov	r8, r6
   1e4e4:	b	1f9ec <main@@Base+0x9b34>
   1e4e8:	mov	r0, sl
   1e4ec:	mov	r1, r6
   1e4f0:	b	1f810 <main@@Base+0x9958>
   1e4f4:	mov	r0, sl
   1e4f8:	mov	r1, r6
   1e4fc:	b	1f82c <main@@Base+0x9974>
   1e500:	cmp	r0, #93	; 0x5d
   1e504:	bne	1f838 <main@@Base+0x9980>
   1e508:	ldr	r0, [sp, #36]	; 0x24
   1e50c:	add	r1, r8, #1
   1e510:	sub	r0, r0, r1
   1e514:	cmp	r0, #2
   1e518:	blt	1f9dc <main@@Base+0x9b24>
   1e51c:	b	1e548 <main@@Base+0x8690>
   1e520:	mov	r0, sl
   1e524:	mov	r1, r6
   1e528:	mov	r2, r6
   1e52c:	b	1f844 <main@@Base+0x998c>
   1e530:	mov	r8, r6
   1e534:	b	1c9a8 <main@@Base+0x6af0>
   1e538:	add	r1, r8, #1
   1e53c:	sub	r0, r6, r1
   1e540:	cmp	r0, #2
   1e544:	blt	1f9dc <main@@Base+0x9b24>
   1e548:	ldrb	r0, [r1]
   1e54c:	cmp	r0, #32
   1e550:	bls	1f9cc <main@@Base+0x9b14>
   1e554:	mov	r8, r1
   1e558:	b	1f9ec <main@@Base+0x9b34>
   1e55c:	cmp	r0, #93	; 0x5d
   1e560:	bne	1f868 <main@@Base+0x99b0>
   1e564:	ldr	r6, [sp, #36]	; 0x24
   1e568:	ldr	sl, [sp, #32]
   1e56c:	add	r1, r2, #1
   1e570:	sub	r0, r6, r1
   1e574:	cmp	r0, #2
   1e578:	blt	1fa54 <main@@Base+0x9b9c>
   1e57c:	ldrb	r0, [r1]
   1e580:	cmp	r0, #32
   1e584:	bls	1fa38 <main@@Base+0x9b80>
   1e588:	ldr	r6, [sp, #36]	; 0x24
   1e58c:	ldr	sl, [sp, #32]
   1e590:	mov	r8, r1
   1e594:	b	1c9a8 <main@@Base+0x6af0>
   1e598:	ldr	sl, [sp, #32]
   1e59c:	ldr	r6, [sp, #36]	; 0x24
   1e5a0:	mov	r1, r2
   1e5a4:	mov	r0, sl
   1e5a8:	mov	r2, r6
   1e5ac:	mov	r3, #9
   1e5b0:	b	1b308 <main@@Base+0x5450>
   1e5b4:	mov	r9, r6
   1e5b8:	b	1fa94 <main@@Base+0x9bdc>
   1e5bc:	mov	r0, sl
   1e5c0:	mov	r1, r6
   1e5c4:	b	1f878 <main@@Base+0x99c0>
   1e5c8:	cmp	r0, #93	; 0x5d
   1e5cc:	bne	1f890 <main@@Base+0x99d8>
   1e5d0:	ldr	r0, [sp, #36]	; 0x24
   1e5d4:	add	r1, r9, #1
   1e5d8:	sub	r0, r0, r1
   1e5dc:	cmp	r0, #2
   1e5e0:	blt	1fa84 <main@@Base+0x9bcc>
   1e5e4:	b	1e87c <main@@Base+0x89c4>
   1e5e8:	bne	1e5f8 <main@@Base+0x8740>
   1e5ec:	ldrb	r0, [r9, #2]!
   1e5f0:	cmp	r0, #32
   1e5f4:	bhi	1e608 <main@@Base+0x8750>
   1e5f8:	ldr	r0, [sp, #32]
   1e5fc:	ldr	r2, [sp, #36]	; 0x24
   1e600:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e604:	mov	r9, r0
   1e608:	ldr	r4, [sp, #36]	; 0x24
   1e60c:	cmp	r9, r4
   1e610:	beq	1e66c <main@@Base+0x87b4>
   1e614:	ldrb	r0, [r9]
   1e618:	cmp	r0, #93	; 0x5d
   1e61c:	bne	1e668 <main@@Base+0x87b0>
   1e620:	ldr	r0, [sp, #36]	; 0x24
   1e624:	ldr	sl, [sp, #32]
   1e628:	add	r1, r9, #1
   1e62c:	sub	r0, r0, r1
   1e630:	cmp	r0, #2
   1e634:	blt	1e658 <main@@Base+0x87a0>
   1e638:	ldrb	r0, [r1]
   1e63c:	cmp	r0, #32
   1e640:	bhi	1f8d0 <main@@Base+0x9a18>
   1e644:	ldr	sl, [sp, #32]
   1e648:	bne	1e658 <main@@Base+0x87a0>
   1e64c:	ldrb	r0, [r9, #2]!
   1e650:	cmp	r0, #32
   1e654:	bhi	1e05c <main@@Base+0x81a4>
   1e658:	ldr	r2, [sp, #36]	; 0x24
   1e65c:	mov	r0, sl
   1e660:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e664:	b	1e058 <main@@Base+0x81a0>
   1e668:	mov	r4, r9
   1e66c:	mov	r0, #0
   1e670:	mov	r1, #1
   1e674:	str	r0, [fp, #-52]	; 0xffffffcc
   1e678:	str	r0, [fp, #-56]	; 0xffffffc8
   1e67c:	ldr	r0, [sp, #32]
   1e680:	ldr	r0, [r0]
   1e684:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1e688:	cmp	r0, #0
   1e68c:	beq	1fc6c <main@@Base+0x9db4>
   1e690:	ldr	r6, [sp, #36]	; 0x24
   1e694:	ldr	sl, [sp, #32]
   1e698:	mov	r7, r0
   1e69c:	mov	r9, r4
   1e6a0:	mov	r0, sl
   1e6a4:	mov	r1, r9
   1e6a8:	mov	r2, r6
   1e6ac:	sub	r3, fp, #56	; 0x38
   1e6b0:	bl	3579c <flatcc_json_parser_double@@Base>
   1e6b4:	mov	r4, r0
   1e6b8:	cmp	r9, r0
   1e6bc:	bne	1e6fc <main@@Base+0x8844>
   1e6c0:	sub	r0, fp, #56	; 0x38
   1e6c4:	mov	r1, r9
   1e6c8:	mov	r2, r6
   1e6cc:	str	r0, [sp]
   1e6d0:	mov	r0, sl
   1e6d4:	ldr	r3, [pc, #4036]	; 1f6a0 <main@@Base+0x97e8>
   1e6d8:	add	r3, pc, r3
   1e6dc:	bl	246d4 <main@@Base+0xe81c>
   1e6e0:	mov	r4, r0
   1e6e4:	cmp	r0, r9
   1e6e8:	beq	1fc6c <main@@Base+0x9db4>
   1e6ec:	ldr	r6, [sp, #36]	; 0x24
   1e6f0:	ldr	sl, [sp, #32]
   1e6f4:	cmp	r4, r6
   1e6f8:	beq	1fc40 <main@@Base+0x9d88>
   1e6fc:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1e700:	sub	r0, r6, r4
   1e704:	cmp	r0, #2
   1e708:	vstr	d16, [r7]
   1e70c:	blt	1e74c <main@@Base+0x8894>
   1e710:	ldrb	r0, [r4]
   1e714:	cmp	r0, #32
   1e718:	bls	1e730 <main@@Base+0x8878>
   1e71c:	ldr	r6, [sp, #36]	; 0x24
   1e720:	mov	r9, r4
   1e724:	cmp	r9, r6
   1e728:	bne	1e768 <main@@Base+0x88b0>
   1e72c:	b	1f884 <main@@Base+0x99cc>
   1e730:	ldr	r6, [sp, #36]	; 0x24
   1e734:	ldr	sl, [sp, #32]
   1e738:	bne	1e74c <main@@Base+0x8894>
   1e73c:	mov	r9, r4
   1e740:	ldrb	r0, [r9, #1]!
   1e744:	cmp	r0, #32
   1e748:	bhi	1e760 <main@@Base+0x88a8>
   1e74c:	mov	r0, sl
   1e750:	mov	r1, r4
   1e754:	mov	r2, r6
   1e758:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e75c:	mov	r9, r0
   1e760:	cmp	r9, r6
   1e764:	beq	1f884 <main@@Base+0x99cc>
   1e768:	ldrb	r0, [r9]
   1e76c:	cmp	r0, #44	; 0x2c
   1e770:	bne	1f8a8 <main@@Base+0x99f0>
   1e774:	ldr	r4, [sp, #36]	; 0x24
   1e778:	add	r1, r9, #1
   1e77c:	sub	r0, r4, r1
   1e780:	cmp	r0, #2
   1e784:	ldr	r0, [sp, #32]
   1e788:	blt	1e7c4 <main@@Base+0x890c>
   1e78c:	ldrb	r0, [r1]
   1e790:	cmp	r0, #32
   1e794:	bls	1e7ac <main@@Base+0x88f4>
   1e798:	ldr	r4, [sp, #36]	; 0x24
   1e79c:	mov	r9, r1
   1e7a0:	cmp	r9, r4
   1e7a4:	bne	1e7d8 <main@@Base+0x8920>
   1e7a8:	b	1f8dc <main@@Base+0x9a24>
   1e7ac:	ldr	r4, [sp, #36]	; 0x24
   1e7b0:	ldr	r0, [sp, #32]
   1e7b4:	bne	1e7c4 <main@@Base+0x890c>
   1e7b8:	ldrb	r2, [r9, #2]!
   1e7bc:	cmp	r2, #32
   1e7c0:	bhi	1e7d0 <main@@Base+0x8918>
   1e7c4:	mov	r2, r4
   1e7c8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e7cc:	mov	r9, r0
   1e7d0:	cmp	r9, r4
   1e7d4:	beq	1f8dc <main@@Base+0x9a24>
   1e7d8:	ldrb	r0, [r9]
   1e7dc:	cmp	r0, #93	; 0x5d
   1e7e0:	beq	1f8b0 <main@@Base+0x99f8>
   1e7e4:	ldr	sl, [sp, #32]
   1e7e8:	mov	r0, #0
   1e7ec:	mov	r1, #1
   1e7f0:	str	r0, [fp, #-52]	; 0xffffffcc
   1e7f4:	str	r0, [fp, #-56]	; 0xffffffc8
   1e7f8:	ldr	r0, [sl]
   1e7fc:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1e800:	ldr	r6, [sp, #36]	; 0x24
   1e804:	mov	r7, r0
   1e808:	cmp	r0, #0
   1e80c:	mov	r4, r9
   1e810:	bne	1e6a0 <main@@Base+0x87e8>
   1e814:	b	1fc40 <main@@Base+0x9d88>
   1e818:	mov	r8, r6
   1e81c:	b	1b908 <main@@Base+0x5a50>
   1e820:	mov	r0, sl
   1e824:	mov	r1, r6
   1e828:	mov	r2, r6
   1e82c:	b	1f89c <main@@Base+0x99e4>
   1e830:	cmp	r0, #125	; 0x7d
   1e834:	bne	1f8ec <main@@Base+0x9a34>
   1e838:	ldr	r6, [sp, #36]	; 0x24
   1e83c:	ldr	sl, [sp, #32]
   1e840:	add	r1, r3, #1
   1e844:	sub	r0, r6, r1
   1e848:	cmp	r0, #2
   1e84c:	blt	1fabc <main@@Base+0x9c04>
   1e850:	ldrb	r0, [r1]
   1e854:	cmp	r0, #32
   1e858:	bls	1faa0 <main@@Base+0x9be8>
   1e85c:	ldr	r6, [sp, #36]	; 0x24
   1e860:	ldr	sl, [sp, #32]
   1e864:	mov	r8, r1
   1e868:	b	1b908 <main@@Base+0x5a50>
   1e86c:	add	r1, r9, #1
   1e870:	sub	r0, r6, r1
   1e874:	cmp	r0, #2
   1e878:	blt	1fa84 <main@@Base+0x9bcc>
   1e87c:	ldrb	r0, [r1]
   1e880:	cmp	r0, #32
   1e884:	bls	1fa74 <main@@Base+0x9bbc>
   1e888:	mov	r9, r1
   1e88c:	b	1fa94 <main@@Base+0x9bdc>
   1e890:	mov	r0, sl
   1e894:	mov	r1, r6
   1e898:	b	1f8fc <main@@Base+0x9a44>
   1e89c:	ldr	r6, [sp, #36]	; 0x24
   1e8a0:	ldr	sl, [sp, #32]
   1e8a4:	bne	1e8b4 <main@@Base+0x89fc>
   1e8a8:	ldrb	r0, [r8, #2]!
   1e8ac:	cmp	r0, #32
   1e8b0:	bhi	1e8c4 <main@@Base+0x8a0c>
   1e8b4:	mov	r0, sl
   1e8b8:	mov	r2, r6
   1e8bc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1e8c0:	mov	r8, r0
   1e8c4:	cmp	r7, r8
   1e8c8:	beq	1ea90 <main@@Base+0x8bd8>
   1e8cc:	mov	r5, #0
   1e8d0:	cmp	r8, r6
   1e8d4:	str	r5, [fp, #-52]	; 0xffffffcc
   1e8d8:	str	r5, [fp, #-56]	; 0xffffffc8
   1e8dc:	str	r5, [sp, #60]	; 0x3c
   1e8e0:	str	r5, [sp, #48]	; 0x30
   1e8e4:	beq	1e92c <main@@Base+0x8a74>
   1e8e8:	sub	r0, fp, #56	; 0x38
   1e8ec:	ldr	r2, [sp, #36]	; 0x24
   1e8f0:	mov	r1, r8
   1e8f4:	add	r3, sp, #48	; 0x30
   1e8f8:	str	r0, [sp]
   1e8fc:	ldr	r0, [sp, #32]
   1e900:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1e904:	cmp	r0, r8
   1e908:	beq	1e93c <main@@Base+0x8a84>
   1e90c:	mov	r1, r0
   1e910:	ldr	r0, [sp, #48]	; 0x30
   1e914:	cmp	r0, #0
   1e918:	beq	1e94c <main@@Base+0x8a94>
   1e91c:	ldr	r0, [sp, #32]
   1e920:	ldr	r2, [sp, #36]	; 0x24
   1e924:	mov	r3, #8
   1e928:	b	1e964 <main@@Base+0x8aac>
   1e92c:	ldr	r9, [sp, #36]	; 0x24
   1e930:	cmp	r8, r9
   1e934:	bne	1e9ac <main@@Base+0x8af4>
   1e938:	b	1e974 <main@@Base+0x8abc>
   1e93c:	mov	r9, r8
   1e940:	cmp	r8, r9
   1e944:	bne	1e9ac <main@@Base+0x8af4>
   1e948:	b	1e974 <main@@Base+0x8abc>
   1e94c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e950:	cmp	r0, #0
   1e954:	beq	1f850 <main@@Base+0x9998>
   1e958:	ldr	r0, [sp, #32]
   1e95c:	ldr	r2, [sp, #36]	; 0x24
   1e960:	mov	r3, #7
   1e964:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1e968:	mov	r9, r0
   1e96c:	cmp	r8, r9
   1e970:	bne	1e9ac <main@@Base+0x8af4>
   1e974:	add	r0, sp, #60	; 0x3c
   1e978:	ldr	r2, [sp, #36]	; 0x24
   1e97c:	mov	r1, r8
   1e980:	str	r0, [sp]
   1e984:	ldr	r0, [sp, #32]
   1e988:	ldr	r3, [pc, #4076]	; 1f97c <main@@Base+0x9ac4>
   1e98c:	add	r3, pc, r3
   1e990:	bl	24330 <main@@Base+0xe478>
   1e994:	cmp	r0, r8
   1e998:	mov	r9, r0
   1e99c:	ldrne	r1, [sp, #36]	; 0x24
   1e9a0:	cmpne	r9, r1
   1e9a4:	beq	1fc08 <main@@Base+0x9d50>
   1e9a8:	ldr	r5, [sp, #60]	; 0x3c
   1e9ac:	ldr	sl, [sp, #32]
   1e9b0:	cmp	r5, #0
   1e9b4:	bne	1e9c4 <main@@Base+0x8b0c>
   1e9b8:	ldrb	r0, [sl, #8]
   1e9bc:	tst	r0, #2
   1e9c0:	beq	1ec30 <main@@Base+0x8d78>
   1e9c4:	ldr	r0, [sl]
   1e9c8:	mov	r1, #21
   1e9cc:	mov	r2, #4
   1e9d0:	mov	r3, #4
   1e9d4:	bl	3063c <flatcc_builder_table_add@@Base>
   1e9d8:	cmp	r0, #0
   1e9dc:	beq	1fc08 <main@@Base+0x9d50>
   1e9e0:	ldr	sl, [sp, #32]
   1e9e4:	str	r5, [r0]
   1e9e8:	b	1ec30 <main@@Base+0x8d78>
   1e9ec:	ldr	r6, [sp, #36]	; 0x24
   1e9f0:	ldr	sl, [sp, #32]
   1e9f4:	bne	1ea04 <main@@Base+0x8b4c>
   1e9f8:	ldrb	r0, [r8, #2]!
   1e9fc:	cmp	r0, #32
   1ea00:	bhi	1ea14 <main@@Base+0x8b5c>
   1ea04:	mov	r0, sl
   1ea08:	mov	r2, r6
   1ea0c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ea10:	mov	r8, r0
   1ea14:	cmp	r7, r8
   1ea18:	beq	1ea90 <main@@Base+0x8bd8>
   1ea1c:	mov	r0, r6
   1ea20:	mov	r6, #0
   1ea24:	cmp	r8, r0
   1ea28:	str	r6, [fp, #-52]	; 0xffffffcc
   1ea2c:	str	r6, [fp, #-56]	; 0xffffffc8
   1ea30:	str	r6, [sp, #52]	; 0x34
   1ea34:	str	r6, [sp, #48]	; 0x30
   1ea38:	str	r6, [sp, #60]	; 0x3c
   1ea3c:	beq	1eb70 <main@@Base+0x8cb8>
   1ea40:	sub	r0, fp, #56	; 0x38
   1ea44:	ldr	r2, [sp, #36]	; 0x24
   1ea48:	mov	r1, r8
   1ea4c:	add	r3, sp, #60	; 0x3c
   1ea50:	str	r0, [sp]
   1ea54:	ldr	r0, [sp, #32]
   1ea58:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1ea5c:	cmp	r0, r8
   1ea60:	beq	1eb84 <main@@Base+0x8ccc>
   1ea64:	mov	r1, r0
   1ea68:	ldr	r0, [sp, #60]	; 0x3c
   1ea6c:	cmp	r0, #0
   1ea70:	beq	1eb9c <main@@Base+0x8ce4>
   1ea74:	ldr	r0, [sp, #32]
   1ea78:	ldr	r2, [sp, #36]	; 0x24
   1ea7c:	mov	r3, #8
   1ea80:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ea84:	mov	r9, r0
   1ea88:	mov	r6, #0
   1ea8c:	b	1eb74 <main@@Base+0x8cbc>
   1ea90:	mov	r0, sl
   1ea94:	mov	r1, r7
   1ea98:	mov	r2, r6
   1ea9c:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   1eaa0:	mov	r9, r0
   1eaa4:	sub	r0, r6, r9
   1eaa8:	cmp	r0, #2
   1eaac:	blt	1eae0 <main@@Base+0x8c28>
   1eab0:	ldrb	r0, [r9]
   1eab4:	cmp	r0, #32
   1eab8:	bls	1eacc <main@@Base+0x8c14>
   1eabc:	mov	r2, r9
   1eac0:	cmp	r2, r6
   1eac4:	bne	1eafc <main@@Base+0x8c44>
   1eac8:	b	1fb88 <main@@Base+0x9cd0>
   1eacc:	bne	1eae0 <main@@Base+0x8c28>
   1ead0:	mov	r2, r9
   1ead4:	ldrb	r0, [r2, #1]!
   1ead8:	cmp	r0, #32
   1eadc:	bhi	1eaf4 <main@@Base+0x8c3c>
   1eae0:	mov	r0, sl
   1eae4:	mov	r1, r9
   1eae8:	mov	r2, r6
   1eaec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1eaf0:	mov	r2, r0
   1eaf4:	cmp	r2, r6
   1eaf8:	beq	1fb88 <main@@Base+0x9cd0>
   1eafc:	ldrb	r0, [r2]
   1eb00:	ldr	r5, [sp, #28]
   1eb04:	cmp	r0, #44	; 0x2c
   1eb08:	bne	1fb94 <main@@Base+0x9cdc>
   1eb0c:	add	r1, r2, #1
   1eb10:	sub	r0, r6, r1
   1eb14:	cmp	r0, #2
   1eb18:	blt	1eb48 <main@@Base+0x8c90>
   1eb1c:	ldrb	r0, [r1]
   1eb20:	cmp	r0, #32
   1eb24:	bls	1eb38 <main@@Base+0x8c80>
   1eb28:	mov	r2, r1
   1eb2c:	cmp	r2, r6
   1eb30:	bne	1eb60 <main@@Base+0x8ca8>
   1eb34:	b	1fbc0 <main@@Base+0x9d08>
   1eb38:	bne	1eb48 <main@@Base+0x8c90>
   1eb3c:	ldrb	r0, [r2, #2]!
   1eb40:	cmp	r0, #32
   1eb44:	bhi	1eb58 <main@@Base+0x8ca0>
   1eb48:	mov	r0, sl
   1eb4c:	mov	r2, r6
   1eb50:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1eb54:	mov	r2, r0
   1eb58:	cmp	r2, r6
   1eb5c:	beq	1fbc0 <main@@Base+0x9d08>
   1eb60:	ldrb	r0, [r2]
   1eb64:	cmp	r0, #125	; 0x7d
   1eb68:	bne	16a44 <main@@Base+0xb8c>
   1eb6c:	b	1fb9c <main@@Base+0x9ce4>
   1eb70:	ldr	r9, [sp, #36]	; 0x24
   1eb74:	mov	r7, #0
   1eb78:	cmp	r8, r9
   1eb7c:	bne	1ebf4 <main@@Base+0x8d3c>
   1eb80:	b	1ebb8 <main@@Base+0x8d00>
   1eb84:	mov	r6, #0
   1eb88:	mov	r7, #0
   1eb8c:	mov	r9, r8
   1eb90:	cmp	r8, r9
   1eb94:	bne	1ebf4 <main@@Base+0x8d3c>
   1eb98:	b	1ebb8 <main@@Base+0x8d00>
   1eb9c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1eba0:	ldr	r7, [fp, #-52]	; 0xffffffcc
   1eba4:	mov	r9, r1
   1eba8:	str	r7, [sp, #52]	; 0x34
   1ebac:	str	r6, [sp, #48]	; 0x30
   1ebb0:	cmp	r8, r9
   1ebb4:	bne	1ebf4 <main@@Base+0x8d3c>
   1ebb8:	add	r0, sp, #48	; 0x30
   1ebbc:	ldr	r2, [sp, #36]	; 0x24
   1ebc0:	mov	r1, r8
   1ebc4:	str	r0, [sp]
   1ebc8:	ldr	r0, [sp, #32]
   1ebcc:	ldr	r3, [pc, #4088]	; 1fbcc <main@@Base+0x9d14>
   1ebd0:	add	r3, pc, r3
   1ebd4:	bl	24510 <main@@Base+0xe658>
   1ebd8:	cmp	r0, r8
   1ebdc:	mov	r9, r0
   1ebe0:	ldrne	r1, [sp, #36]	; 0x24
   1ebe4:	cmpne	r9, r1
   1ebe8:	beq	1fc08 <main@@Base+0x9d50>
   1ebec:	ldr	r6, [sp, #48]	; 0x30
   1ebf0:	ldr	r7, [sp, #52]	; 0x34
   1ebf4:	ldr	sl, [sp, #32]
   1ebf8:	orrs	r0, r6, r7
   1ebfc:	bne	1ec0c <main@@Base+0x8d54>
   1ec00:	ldrb	r0, [sl, #8]
   1ec04:	tst	r0, #2
   1ec08:	beq	1ec30 <main@@Base+0x8d78>
   1ec0c:	ldr	r0, [sl]
   1ec10:	mov	r1, #23
   1ec14:	mov	r2, #8
   1ec18:	mov	r3, #8
   1ec1c:	bl	3063c <flatcc_builder_table_add@@Base>
   1ec20:	cmp	r0, #0
   1ec24:	beq	1fc08 <main@@Base+0x9d50>
   1ec28:	strd	r6, [r0]
   1ec2c:	ldr	sl, [sp, #32]
   1ec30:	ldr	r6, [sp, #36]	; 0x24
   1ec34:	b	1eaa4 <main@@Base+0x8bec>
   1ec38:	bne	1ec48 <main@@Base+0x8d90>
   1ec3c:	ldrb	r0, [r9, #2]!
   1ec40:	cmp	r0, #32
   1ec44:	bhi	1ec58 <main@@Base+0x8da0>
   1ec48:	ldr	r0, [sp, #32]
   1ec4c:	ldr	r2, [sp, #36]	; 0x24
   1ec50:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ec54:	mov	r9, r0
   1ec58:	ldr	r5, [sp, #36]	; 0x24
   1ec5c:	cmp	r9, r5
   1ec60:	beq	1ec74 <main@@Base+0x8dbc>
   1ec64:	ldrb	r0, [r9]
   1ec68:	cmp	r0, #93	; 0x5d
   1ec6c:	beq	1f918 <main@@Base+0x9a60>
   1ec70:	mov	r5, r9
   1ec74:	mov	r0, #0
   1ec78:	mov	r1, #1
   1ec7c:	strb	r0, [sp, #60]	; 0x3c
   1ec80:	ldr	r0, [sp, #32]
   1ec84:	ldr	r0, [r0]
   1ec88:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1ec8c:	cmp	r0, #0
   1ec90:	beq	1fc9c <main@@Base+0x9de4>
   1ec94:	mov	r4, r0
   1ec98:	mov	r9, r5
   1ec9c:	ldr	r6, [sp, #36]	; 0x24
   1eca0:	mov	r5, #0
   1eca4:	str	r5, [fp, #-52]	; 0xffffffcc
   1eca8:	str	r5, [fp, #-56]	; 0xffffffc8
   1ecac:	strb	r5, [sp, #60]	; 0x3c
   1ecb0:	str	r5, [sp, #48]	; 0x30
   1ecb4:	cmp	r9, r6
   1ecb8:	beq	1ed00 <main@@Base+0x8e48>
   1ecbc:	sub	r0, fp, #56	; 0x38
   1ecc0:	mov	r1, r9
   1ecc4:	mov	r2, r6
   1ecc8:	add	r3, sp, #48	; 0x30
   1eccc:	str	r0, [sp]
   1ecd0:	ldr	r0, [sp, #32]
   1ecd4:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1ecd8:	cmp	r0, r9
   1ecdc:	beq	1ed08 <main@@Base+0x8e50>
   1ece0:	mov	r1, r0
   1ece4:	ldr	r0, [sp, #48]	; 0x30
   1ece8:	cmp	r0, #0
   1ecec:	beq	1ed10 <main@@Base+0x8e58>
   1ecf0:	ldr	r7, [sp, #32]
   1ecf4:	ldr	r6, [sp, #36]	; 0x24
   1ecf8:	mov	r3, #8
   1ecfc:	b	1ed30 <main@@Base+0x8e78>
   1ed00:	mov	r1, r6
   1ed04:	b	1ed58 <main@@Base+0x8ea0>
   1ed08:	mov	r1, r9
   1ed0c:	b	1ed54 <main@@Base+0x8e9c>
   1ed10:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ed14:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ed18:	subs	r3, r0, #256	; 0x100
   1ed1c:	sbcs	r2, r2, #0
   1ed20:	bcc	1ed4c <main@@Base+0x8e94>
   1ed24:	ldr	r7, [sp, #32]
   1ed28:	ldr	r6, [sp, #36]	; 0x24
   1ed2c:	mov	r3, #7
   1ed30:	mov	r0, r7
   1ed34:	mov	r2, r6
   1ed38:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ed3c:	mov	r1, r0
   1ed40:	cmp	r9, r1
   1ed44:	bne	1eda4 <main@@Base+0x8eec>
   1ed48:	b	1ed64 <main@@Base+0x8eac>
   1ed4c:	mov	r5, r0
   1ed50:	strb	r0, [sp, #60]	; 0x3c
   1ed54:	ldr	r6, [sp, #36]	; 0x24
   1ed58:	ldr	r7, [sp, #32]
   1ed5c:	cmp	r9, r1
   1ed60:	bne	1eda4 <main@@Base+0x8eec>
   1ed64:	add	r0, sp, #60	; 0x3c
   1ed68:	mov	r1, r9
   1ed6c:	mov	r2, r6
   1ed70:	str	r0, [sp]
   1ed74:	mov	r0, r7
   1ed78:	ldr	r3, [pc, #3888]	; 1fcb0 <main@@Base+0x9df8>
   1ed7c:	add	r3, pc, r3
   1ed80:	bl	21d80 <main@@Base+0xbec8>
   1ed84:	cmp	r0, r9
   1ed88:	mov	r1, r0
   1ed8c:	ldrne	r0, [sp, #36]	; 0x24
   1ed90:	cmpne	r1, r0
   1ed94:	beq	1fc7c <main@@Base+0x9dc4>
   1ed98:	ldrb	r5, [sp, #60]	; 0x3c
   1ed9c:	ldr	r6, [sp, #36]	; 0x24
   1eda0:	ldr	r7, [sp, #32]
   1eda4:	sub	r0, r6, r1
   1eda8:	strb	r5, [r4]
   1edac:	cmp	r0, #2
   1edb0:	blt	1edf0 <main@@Base+0x8f38>
   1edb4:	ldrb	r0, [r1]
   1edb8:	cmp	r0, #32
   1edbc:	bls	1edd4 <main@@Base+0x8f1c>
   1edc0:	ldr	r6, [sp, #36]	; 0x24
   1edc4:	mov	r9, r1
   1edc8:	cmp	r9, r6
   1edcc:	bne	1ee08 <main@@Base+0x8f50>
   1edd0:	b	1f908 <main@@Base+0x9a50>
   1edd4:	ldr	r6, [sp, #36]	; 0x24
   1edd8:	ldr	r7, [sp, #32]
   1eddc:	bne	1edf0 <main@@Base+0x8f38>
   1ede0:	mov	r9, r1
   1ede4:	ldrb	r0, [r9, #1]!
   1ede8:	cmp	r0, #32
   1edec:	bhi	1ee00 <main@@Base+0x8f48>
   1edf0:	mov	r0, r7
   1edf4:	mov	r2, r6
   1edf8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1edfc:	mov	r9, r0
   1ee00:	cmp	r9, r6
   1ee04:	beq	1f908 <main@@Base+0x9a50>
   1ee08:	ldrb	r0, [r9]
   1ee0c:	cmp	r0, #44	; 0x2c
   1ee10:	bne	1f910 <main@@Base+0x9a58>
   1ee14:	ldr	r4, [sp, #36]	; 0x24
   1ee18:	add	r1, r9, #1
   1ee1c:	sub	r0, r4, r1
   1ee20:	cmp	r0, #2
   1ee24:	ldr	r0, [sp, #32]
   1ee28:	blt	1ee64 <main@@Base+0x8fac>
   1ee2c:	ldrb	r0, [r1]
   1ee30:	cmp	r0, #32
   1ee34:	bls	1ee4c <main@@Base+0x8f94>
   1ee38:	ldr	r4, [sp, #36]	; 0x24
   1ee3c:	mov	r9, r1
   1ee40:	cmp	r9, r4
   1ee44:	bne	1ee78 <main@@Base+0x8fc0>
   1ee48:	b	1f96c <main@@Base+0x9ab4>
   1ee4c:	ldr	r4, [sp, #36]	; 0x24
   1ee50:	ldr	r0, [sp, #32]
   1ee54:	bne	1ee64 <main@@Base+0x8fac>
   1ee58:	ldrb	r2, [r9, #2]!
   1ee5c:	cmp	r2, #32
   1ee60:	bhi	1ee70 <main@@Base+0x8fb8>
   1ee64:	mov	r2, r4
   1ee68:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1ee6c:	mov	r9, r0
   1ee70:	cmp	r9, r4
   1ee74:	beq	1f96c <main@@Base+0x9ab4>
   1ee78:	ldrb	r0, [r9]
   1ee7c:	cmp	r0, #93	; 0x5d
   1ee80:	beq	1f918 <main@@Base+0x9a60>
   1ee84:	mov	r0, #0
   1ee88:	mov	r1, #1
   1ee8c:	strb	r0, [sp, #60]	; 0x3c
   1ee90:	ldr	r0, [sp, #32]
   1ee94:	ldr	r0, [r0]
   1ee98:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   1ee9c:	mov	r4, r0
   1eea0:	cmp	r0, #0
   1eea4:	bne	1ec9c <main@@Base+0x8de4>
   1eea8:	b	1fc08 <main@@Base+0x9d50>
   1eeac:	ldrdeq	lr, [r3], -ip
   1eeb0:	ldr	r6, [sp, #36]	; 0x24
   1eeb4:	ldr	sl, [sp, #32]
   1eeb8:	b	1b220 <main@@Base+0x5368>
   1eebc:	bne	1eecc <main@@Base+0x9014>
   1eec0:	ldrb	r0, [r8, #2]!
   1eec4:	cmp	r0, #32
   1eec8:	bhi	1eedc <main@@Base+0x9024>
   1eecc:	ldr	r0, [sp, #32]
   1eed0:	ldr	r2, [sp, #36]	; 0x24
   1eed4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1eed8:	mov	r8, r0
   1eedc:	ldr	r7, [sp, #36]	; 0x24
   1eee0:	cmp	r8, r7
   1eee4:	beq	1ef38 <main@@Base+0x9080>
   1eee8:	ldrb	r0, [r8]
   1eeec:	cmp	r0, #125	; 0x7d
   1eef0:	bne	1ef34 <main@@Base+0x907c>
   1eef4:	ldr	r0, [sp, #36]	; 0x24
   1eef8:	ldr	sl, [sp, #32]
   1eefc:	add	r1, r8, #1
   1ef00:	sub	r0, r0, r1
   1ef04:	cmp	r0, #2
   1ef08:	blt	1fb78 <main@@Base+0x9cc0>
   1ef0c:	ldrb	r0, [r1]
   1ef10:	cmp	r0, #32
   1ef14:	bhi	1fa2c <main@@Base+0x9b74>
   1ef18:	ldr	sl, [sp, #32]
   1ef1c:	bne	1fb78 <main@@Base+0x9cc0>
   1ef20:	ldrb	r0, [r8, #2]!
   1ef24:	mov	r7, r8
   1ef28:	cmp	r0, #32
   1ef2c:	bhi	1ca64 <main@@Base+0x6bac>
   1ef30:	b	1fb78 <main@@Base+0x9cc0>
   1ef34:	mov	r7, r8
   1ef38:	ldr	r5, [sp, #36]	; 0x24
   1ef3c:	cmp	r7, r5
   1ef40:	mov	r8, r5
   1ef44:	beq	1ef74 <main@@Base+0x90bc>
   1ef48:	ldrb	r0, [r7]
   1ef4c:	cmp	r0, #34	; 0x22
   1ef50:	bne	1ef5c <main@@Base+0x90a4>
   1ef54:	add	r8, r7, #1
   1ef58:	b	1ef74 <main@@Base+0x90bc>
   1ef5c:	ldr	r0, [sp, #32]
   1ef60:	mov	r1, r7
   1ef64:	mov	r2, r5
   1ef68:	mov	r3, #5
   1ef6c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1ef70:	mov	r8, r0
   1ef74:	sub	lr, r5, r8
   1ef78:	mov	r1, #8
   1ef7c:	cmp	lr, #8
   1ef80:	movcc	r1, lr
   1ef84:	sub	r2, r1, #1
   1ef88:	cmp	r2, #7
   1ef8c:	bhi	1f65c <main@@Base+0x97a4>
   1ef90:	add	r0, pc, #36	; 0x24
   1ef94:	mov	r1, #0
   1ef98:	mov	ip, #0
   1ef9c:	mov	r9, #0
   1efa0:	mov	r7, #0
   1efa4:	mov	r3, #0
   1efa8:	mov	r6, #0
   1efac:	mov	r4, #0
   1efb0:	ldr	r5, [r0, r2, lsl #2]
   1efb4:	mov	r2, #0
   1efb8:	add	pc, r0, r5
   1efbc:	andeq	r0, r0, r4, rrx
   1efc0:	andeq	r0, r0, ip, asr r0
   1efc4:	andeq	r0, r0, r4, asr r0
   1efc8:	andeq	r0, r0, ip, asr #32
   1efcc:	andeq	r0, r0, r0, asr #32
   1efd0:	andeq	r0, r0, r4, lsr r0
   1efd4:	andeq	r0, r0, r4, lsr #32
   1efd8:	andeq	r0, r0, r0, lsr #32
   1efdc:	ldrb	ip, [r8, #7]
   1efe0:	ldrb	r0, [r8, #6]
   1efe4:	mov	r9, r1
   1efe8:	orr	r0, ip, r0, lsl #8
   1efec:	mov	r1, r0
   1eff0:	ldrb	r0, [r8, #5]
   1eff4:	mov	r7, r9
   1eff8:	orr	r1, r1, r0, lsl #16
   1effc:	ldrb	r0, [r8, #4]
   1f000:	mov	r3, r7
   1f004:	orr	r1, r1, r0, lsl #24
   1f008:	ldrb	r0, [r8, #3]
   1f00c:	orr	r6, r0, r3
   1f010:	ldrb	r0, [r8, #2]
   1f014:	orr	r4, r6, r0, lsl #8
   1f018:	ldrb	r0, [r8, #1]
   1f01c:	orr	r2, r4, r0, lsl #16
   1f020:	ldrb	r0, [r8]
   1f024:	orr	r2, r2, r0, lsl #24
   1f028:	movw	r0, #65535	; 0xffff
   1f02c:	movt	r0, #26979	; 0x6963
   1f030:	cmp	r2, r0
   1f034:	bhi	1f09c <main@@Base+0x91e4>
   1f038:	movw	r0, #30062	; 0x756e
   1f03c:	and	r1, r1, #-16777216	; 0xff000000
   1f040:	movt	r0, #25455	; 0x636f
   1f044:	eor	r1, r1, #1946157056	; 0x74000000
   1f048:	eor	r0, r2, r0
   1f04c:	orrs	r0, r1, r0
   1f050:	bne	1f65c <main@@Base+0x97a4>
   1f054:	cmp	lr, #6
   1f058:	mov	r7, r8
   1f05c:	blt	1f2f8 <main@@Base+0x9440>
   1f060:	ldrb	r0, [r8, #5]
   1f064:	mov	r7, r8
   1f068:	cmp	r0, #34	; 0x22
   1f06c:	bne	1f2f8 <main@@Base+0x9440>
   1f070:	ldr	r0, [sp, #36]	; 0x24
   1f074:	add	r1, r8, #6
   1f078:	sub	r0, r0, r1
   1f07c:	cmp	r0, #2
   1f080:	blt	1f160 <main@@Base+0x92a8>
   1f084:	ldrb	r0, [r1]
   1f088:	cmp	r0, #32
   1f08c:	bls	1f14c <main@@Base+0x9294>
   1f090:	mov	r7, r1
   1f094:	b	1f170 <main@@Base+0x92b8>
   1f098:	andeq	lr, r3, ip, asr r0
   1f09c:	movw	r1, #27648	; 0x6c00
   1f0a0:	bic	r0, r2, #255	; 0xff
   1f0a4:	movt	r1, #30305	; 0x7661
   1f0a8:	teq	r0, r1
   1f0ac:	bne	1f0f4 <main@@Base+0x923c>
   1f0b0:	cmp	lr, #4
   1f0b4:	mov	r7, r8
   1f0b8:	blt	1f470 <main@@Base+0x95b8>
   1f0bc:	ldrb	r0, [r8, #3]
   1f0c0:	mov	r7, r8
   1f0c4:	cmp	r0, #34	; 0x22
   1f0c8:	bne	1f470 <main@@Base+0x95b8>
   1f0cc:	ldr	r0, [sp, #36]	; 0x24
   1f0d0:	add	r1, r8, #4
   1f0d4:	sub	r0, r0, r1
   1f0d8:	cmp	r0, #2
   1f0dc:	blt	1f1e4 <main@@Base+0x932c>
   1f0e0:	ldrb	r0, [r1]
   1f0e4:	cmp	r0, #32
   1f0e8:	bls	1f1d0 <main@@Base+0x9318>
   1f0ec:	mov	r7, r1
   1f0f0:	b	1f1f4 <main@@Base+0x933c>
   1f0f4:	movw	r0, #0
   1f0f8:	bfc	r2, #0, #16
   1f0fc:	movt	r0, #26980	; 0x6964
   1f100:	teq	r2, r0
   1f104:	bne	1f65c <main@@Base+0x97a4>
   1f108:	cmp	lr, #3
   1f10c:	mov	r1, r8
   1f110:	blt	1f608 <main@@Base+0x9750>
   1f114:	ldrb	r0, [r8, #2]
   1f118:	mov	r1, r8
   1f11c:	cmp	r0, #34	; 0x22
   1f120:	bne	1f608 <main@@Base+0x9750>
   1f124:	ldr	r0, [sp, #36]	; 0x24
   1f128:	add	r2, r8, #3
   1f12c:	sub	r0, r0, r2
   1f130:	cmp	r0, #2
   1f134:	blt	1f268 <main@@Base+0x93b0>
   1f138:	ldrb	r0, [r2]
   1f13c:	cmp	r0, #32
   1f140:	bls	1f254 <main@@Base+0x939c>
   1f144:	mov	r1, r2
   1f148:	b	1f27c <main@@Base+0x93c4>
   1f14c:	bne	1f160 <main@@Base+0x92a8>
   1f150:	mov	r7, r8
   1f154:	ldrb	r0, [r7, #7]!
   1f158:	cmp	r0, #32
   1f15c:	bhi	1f170 <main@@Base+0x92b8>
   1f160:	ldr	r0, [sp, #32]
   1f164:	ldr	r2, [sp, #36]	; 0x24
   1f168:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f16c:	mov	r7, r0
   1f170:	ldr	r0, [sp, #36]	; 0x24
   1f174:	cmp	r7, r0
   1f178:	beq	1f1b8 <main@@Base+0x9300>
   1f17c:	ldrb	r0, [r7]
   1f180:	cmp	r0, #58	; 0x3a
   1f184:	bne	1f1b8 <main@@Base+0x9300>
   1f188:	ldr	r0, [sp, #36]	; 0x24
   1f18c:	add	r1, r7, #1
   1f190:	sub	r0, r0, r1
   1f194:	cmp	r0, #2
   1f198:	blt	1f2e8 <main@@Base+0x9430>
   1f19c:	ldrb	r0, [r1]
   1f1a0:	cmp	r0, #32
   1f1a4:	bls	1f2d8 <main@@Base+0x9420>
   1f1a8:	mov	r7, r1
   1f1ac:	cmp	r8, r7
   1f1b0:	bne	1f300 <main@@Base+0x9448>
   1f1b4:	b	1f65c <main@@Base+0x97a4>
   1f1b8:	ldr	r0, [sp, #32]
   1f1bc:	ldr	r2, [sp, #36]	; 0x24
   1f1c0:	mov	r1, r7
   1f1c4:	mov	r3, #4
   1f1c8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f1cc:	b	1f2f4 <main@@Base+0x943c>
   1f1d0:	bne	1f1e4 <main@@Base+0x932c>
   1f1d4:	mov	r7, r8
   1f1d8:	ldrb	r0, [r7, #5]!
   1f1dc:	cmp	r0, #32
   1f1e0:	bhi	1f1f4 <main@@Base+0x933c>
   1f1e4:	ldr	r0, [sp, #32]
   1f1e8:	ldr	r2, [sp, #36]	; 0x24
   1f1ec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f1f0:	mov	r7, r0
   1f1f4:	ldr	r0, [sp, #36]	; 0x24
   1f1f8:	cmp	r7, r0
   1f1fc:	beq	1f23c <main@@Base+0x9384>
   1f200:	ldrb	r0, [r7]
   1f204:	cmp	r0, #58	; 0x3a
   1f208:	bne	1f23c <main@@Base+0x9384>
   1f20c:	ldr	r0, [sp, #36]	; 0x24
   1f210:	add	r1, r7, #1
   1f214:	sub	r0, r0, r1
   1f218:	cmp	r0, #2
   1f21c:	blt	1f460 <main@@Base+0x95a8>
   1f220:	ldrb	r0, [r1]
   1f224:	cmp	r0, #32
   1f228:	bls	1f450 <main@@Base+0x9598>
   1f22c:	mov	r7, r1
   1f230:	cmp	r8, r7
   1f234:	bne	1f478 <main@@Base+0x95c0>
   1f238:	b	1f65c <main@@Base+0x97a4>
   1f23c:	ldr	r0, [sp, #32]
   1f240:	ldr	r2, [sp, #36]	; 0x24
   1f244:	mov	r1, r7
   1f248:	mov	r3, #4
   1f24c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f250:	b	1f46c <main@@Base+0x95b4>
   1f254:	bne	1f268 <main@@Base+0x93b0>
   1f258:	mov	r1, r8
   1f25c:	ldrb	r0, [r1, #4]!
   1f260:	cmp	r0, #32
   1f264:	bhi	1f27c <main@@Base+0x93c4>
   1f268:	mov	r1, r2
   1f26c:	ldr	r0, [sp, #32]
   1f270:	ldr	r2, [sp, #36]	; 0x24
   1f274:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f278:	mov	r1, r0
   1f27c:	ldr	r0, [sp, #36]	; 0x24
   1f280:	cmp	r1, r0
   1f284:	beq	1f2c4 <main@@Base+0x940c>
   1f288:	ldrb	r0, [r1]
   1f28c:	cmp	r0, #58	; 0x3a
   1f290:	bne	1f2c4 <main@@Base+0x940c>
   1f294:	ldr	r0, [sp, #36]	; 0x24
   1f298:	add	r2, r1, #1
   1f29c:	sub	r0, r0, r2
   1f2a0:	cmp	r0, #2
   1f2a4:	blt	1f5f4 <main@@Base+0x973c>
   1f2a8:	ldrb	r0, [r2]
   1f2ac:	cmp	r0, #32
   1f2b0:	bls	1f5e4 <main@@Base+0x972c>
   1f2b4:	mov	r1, r2
   1f2b8:	cmp	r8, r1
   1f2bc:	bne	1f610 <main@@Base+0x9758>
   1f2c0:	b	1f65c <main@@Base+0x97a4>
   1f2c4:	ldr	r0, [sp, #32]
   1f2c8:	ldr	r2, [sp, #36]	; 0x24
   1f2cc:	mov	r3, #4
   1f2d0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f2d4:	b	1f604 <main@@Base+0x974c>
   1f2d8:	bne	1f2e8 <main@@Base+0x9430>
   1f2dc:	ldrb	r0, [r7, #2]!
   1f2e0:	cmp	r0, #32
   1f2e4:	bhi	1f2f8 <main@@Base+0x9440>
   1f2e8:	ldr	r0, [sp, #32]
   1f2ec:	ldr	r2, [sp, #36]	; 0x24
   1f2f0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f2f4:	mov	r7, r0
   1f2f8:	cmp	r8, r7
   1f2fc:	beq	1f65c <main@@Base+0x97a4>
   1f300:	ldr	r0, [sp, #36]	; 0x24
   1f304:	mov	r5, #0
   1f308:	str	r5, [fp, #-52]	; 0xffffffcc
   1f30c:	str	r5, [fp, #-56]	; 0xffffffc8
   1f310:	strh	r5, [sp, #60]	; 0x3c
   1f314:	str	r5, [sp, #48]	; 0x30
   1f318:	cmp	r7, r0
   1f31c:	beq	1f368 <main@@Base+0x94b0>
   1f320:	sub	r0, fp, #56	; 0x38
   1f324:	ldr	r2, [sp, #36]	; 0x24
   1f328:	mov	r1, r7
   1f32c:	add	r3, sp, #48	; 0x30
   1f330:	str	r0, [sp]
   1f334:	ldr	r0, [sp, #32]
   1f338:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1f33c:	cmp	r0, r7
   1f340:	beq	1f378 <main@@Base+0x94c0>
   1f344:	mov	r8, r0
   1f348:	ldr	r0, [sp, #48]	; 0x30
   1f34c:	cmp	r0, #0
   1f350:	beq	1f38c <main@@Base+0x94d4>
   1f354:	ldr	r0, [sp, #32]
   1f358:	ldr	r2, [sp, #36]	; 0x24
   1f35c:	mov	r1, r8
   1f360:	mov	r3, #8
   1f364:	b	1f3b0 <main@@Base+0x94f8>
   1f368:	ldr	r8, [sp, #36]	; 0x24
   1f36c:	cmp	r7, r8
   1f370:	bne	1f3f8 <main@@Base+0x9540>
   1f374:	b	1f3c0 <main@@Base+0x9508>
   1f378:	mov	r8, r7
   1f37c:	cmp	r7, r8
   1f380:	bne	1f3f8 <main@@Base+0x9540>
   1f384:	b	1f3c0 <main@@Base+0x9508>
   1f388:	andeq	sp, r3, r4, asr #26
   1f38c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f390:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f394:	subs	r2, r0, #65536	; 0x10000
   1f398:	sbcs	r1, r1, #0
   1f39c:	bcc	1f43c <main@@Base+0x9584>
   1f3a0:	ldr	r0, [sp, #32]
   1f3a4:	ldr	r2, [sp, #36]	; 0x24
   1f3a8:	mov	r1, r8
   1f3ac:	mov	r3, #7
   1f3b0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f3b4:	mov	r8, r0
   1f3b8:	cmp	r7, r8
   1f3bc:	bne	1f3f8 <main@@Base+0x9540>
   1f3c0:	add	r0, sp, #60	; 0x3c
   1f3c4:	ldr	r2, [sp, #36]	; 0x24
   1f3c8:	mov	r1, r7
   1f3cc:	str	r0, [sp]
   1f3d0:	ldr	r0, [sp, #32]
   1f3d4:	ldr	r3, [pc, #2252]	; 1fca8 <main@@Base+0x9df0>
   1f3d8:	add	r3, pc, r3
   1f3dc:	bl	2b8e8 <main@@Base+0x15a30>
   1f3e0:	cmp	r0, r7
   1f3e4:	mov	r8, r0
   1f3e8:	ldrne	r0, [sp, #36]	; 0x24
   1f3ec:	cmpne	r8, r0
   1f3f0:	beq	1f758 <main@@Base+0x98a0>
   1f3f4:	ldrh	r5, [sp, #60]	; 0x3c
   1f3f8:	movw	r0, #65535	; 0xffff
   1f3fc:	tst	r5, r0
   1f400:	bne	1f414 <main@@Base+0x955c>
   1f404:	ldr	r0, [sp, #32]
   1f408:	ldrb	r0, [r0, #8]
   1f40c:	tst	r0, #2
   1f410:	beq	1f650 <main@@Base+0x9798>
   1f414:	ldr	r0, [sp, #32]
   1f418:	mov	r1, #2
   1f41c:	mov	r2, #2
   1f420:	mov	r3, #2
   1f424:	ldr	r0, [r0]
   1f428:	bl	3063c <flatcc_builder_table_add@@Base>
   1f42c:	cmp	r0, #0
   1f430:	beq	1f758 <main@@Base+0x98a0>
   1f434:	strh	r5, [r0]
   1f438:	b	1f650 <main@@Base+0x9798>
   1f43c:	mov	r5, r0
   1f440:	strh	r0, [sp, #60]	; 0x3c
   1f444:	cmp	r7, r8
   1f448:	bne	1f3f8 <main@@Base+0x9540>
   1f44c:	b	1f3c0 <main@@Base+0x9508>
   1f450:	bne	1f460 <main@@Base+0x95a8>
   1f454:	ldrb	r0, [r7, #2]!
   1f458:	cmp	r0, #32
   1f45c:	bhi	1f470 <main@@Base+0x95b8>
   1f460:	ldr	r0, [sp, #32]
   1f464:	ldr	r2, [sp, #36]	; 0x24
   1f468:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f46c:	mov	r7, r0
   1f470:	cmp	r8, r7
   1f474:	beq	1f65c <main@@Base+0x97a4>
   1f478:	ldr	r0, [sp, #36]	; 0x24
   1f47c:	mov	r6, #0
   1f480:	str	r6, [fp, #-52]	; 0xffffffcc
   1f484:	str	r6, [fp, #-56]	; 0xffffffc8
   1f488:	str	r6, [sp, #52]	; 0x34
   1f48c:	str	r6, [sp, #48]	; 0x30
   1f490:	str	r6, [sp, #60]	; 0x3c
   1f494:	cmp	r7, r0
   1f498:	beq	1f4f8 <main@@Base+0x9640>
   1f49c:	sub	r0, fp, #56	; 0x38
   1f4a0:	ldr	r2, [sp, #36]	; 0x24
   1f4a4:	mov	r1, r7
   1f4a8:	add	r3, sp, #60	; 0x3c
   1f4ac:	str	r0, [sp]
   1f4b0:	ldr	r0, [sp, #32]
   1f4b4:	bl	362a4 <flatcc_json_parser_integer@@Base>
   1f4b8:	cmp	r0, r7
   1f4bc:	beq	1f500 <main@@Base+0x9648>
   1f4c0:	mov	r8, r0
   1f4c4:	ldr	r0, [sp, #60]	; 0x3c
   1f4c8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1f4cc:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1f4d0:	cmp	r0, #0
   1f4d4:	beq	1f518 <main@@Base+0x9660>
   1f4d8:	subs	r0, r6, #1
   1f4dc:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1f4e0:	bcc	1f54c <main@@Base+0x9694>
   1f4e4:	ldr	r0, [sp, #32]
   1f4e8:	ldr	r2, [sp, #36]	; 0x24
   1f4ec:	mov	r1, r8
   1f4f0:	mov	r3, #8
   1f4f4:	b	1f530 <main@@Base+0x9678>
   1f4f8:	ldr	r8, [sp, #36]	; 0x24
   1f4fc:	b	1f53c <main@@Base+0x9684>
   1f500:	mov	r6, #0
   1f504:	mov	r5, #0
   1f508:	mov	r8, r7
   1f50c:	cmp	r7, r8
   1f510:	bne	1f5a0 <main@@Base+0x96e8>
   1f514:	b	1f564 <main@@Base+0x96ac>
   1f518:	cmn	r5, #1
   1f51c:	bgt	1f554 <main@@Base+0x969c>
   1f520:	ldr	r0, [sp, #32]
   1f524:	ldr	r2, [sp, #36]	; 0x24
   1f528:	mov	r1, r8
   1f52c:	mov	r3, #7
   1f530:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f534:	mov	r8, r0
   1f538:	mov	r6, #0
   1f53c:	mov	r5, #0
   1f540:	cmp	r7, r8
   1f544:	bne	1f5a0 <main@@Base+0x96e8>
   1f548:	b	1f564 <main@@Base+0x96ac>
   1f54c:	rsbs	r6, r6, #0
   1f550:	rsc	r5, r5, #0
   1f554:	str	r6, [sp, #48]	; 0x30
   1f558:	str	r5, [sp, #52]	; 0x34
   1f55c:	cmp	r7, r8
   1f560:	bne	1f5a0 <main@@Base+0x96e8>
   1f564:	add	r0, sp, #48	; 0x30
   1f568:	ldr	r2, [sp, #36]	; 0x24
   1f56c:	mov	r1, r7
   1f570:	str	r0, [sp]
   1f574:	ldr	r0, [sp, #32]
   1f578:	ldr	r3, [pc, #1836]	; 1fcac <main@@Base+0x9df4>
   1f57c:	add	r3, pc, r3
   1f580:	bl	24138 <main@@Base+0xe280>
   1f584:	cmp	r0, r7
   1f588:	mov	r8, r0
   1f58c:	ldrne	r0, [sp, #36]	; 0x24
   1f590:	cmpne	r8, r0
   1f594:	beq	1f758 <main@@Base+0x98a0>
   1f598:	ldr	r6, [sp, #48]	; 0x30
   1f59c:	ldr	r5, [sp, #52]	; 0x34
   1f5a0:	orrs	r0, r6, r5
   1f5a4:	bne	1f5b8 <main@@Base+0x9700>
   1f5a8:	ldr	r0, [sp, #32]
   1f5ac:	ldrb	r0, [r0, #8]
   1f5b0:	tst	r0, #2
   1f5b4:	beq	1f650 <main@@Base+0x9798>
   1f5b8:	ldr	r0, [sp, #32]
   1f5bc:	mov	r1, #1
   1f5c0:	mov	r2, #8
   1f5c4:	mov	r3, #8
   1f5c8:	ldr	r0, [r0]
   1f5cc:	bl	3063c <flatcc_builder_table_add@@Base>
   1f5d0:	cmp	r0, #0
   1f5d4:	beq	1f758 <main@@Base+0x98a0>
   1f5d8:	str	r6, [r0]
   1f5dc:	str	r5, [r0, #4]
   1f5e0:	b	1f650 <main@@Base+0x9798>
   1f5e4:	bne	1f5f4 <main@@Base+0x973c>
   1f5e8:	ldrb	r0, [r1, #2]!
   1f5ec:	cmp	r0, #32
   1f5f0:	bhi	1f608 <main@@Base+0x9750>
   1f5f4:	mov	r1, r2
   1f5f8:	ldr	r0, [sp, #32]
   1f5fc:	ldr	r2, [sp, #36]	; 0x24
   1f600:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f604:	mov	r1, r0
   1f608:	cmp	r8, r1
   1f60c:	beq	1f65c <main@@Base+0x97a4>
   1f610:	ldr	r0, [sp, #32]
   1f614:	ldr	r2, [sp, #36]	; 0x24
   1f618:	add	r3, sp, #56	; 0x38
   1f61c:	bl	36850 <flatcc_json_parser_build_string@@Base>
   1f620:	mov	r8, r0
   1f624:	ldr	r0, [sp, #56]	; 0x38
   1f628:	cmp	r0, #0
   1f62c:	beq	1f758 <main@@Base+0x98a0>
   1f630:	ldr	r0, [sp, #32]
   1f634:	mov	r1, #0
   1f638:	ldr	r0, [r0]
   1f63c:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   1f640:	cmp	r0, #0
   1f644:	beq	1f758 <main@@Base+0x98a0>
   1f648:	ldr	r1, [sp, #56]	; 0x38
   1f64c:	str	r1, [r0]
   1f650:	ldr	r5, [sp, #36]	; 0x24
   1f654:	ldr	sl, [sp, #32]
   1f658:	b	1f678 <main@@Base+0x97c0>
   1f65c:	ldr	sl, [sp, #32]
   1f660:	ldr	r5, [sp, #36]	; 0x24
   1f664:	mov	r1, r8
   1f668:	mov	r0, sl
   1f66c:	mov	r2, r5
   1f670:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f674:	mov	r8, r0
   1f678:	sub	r0, r5, r8
   1f67c:	cmp	r0, #2
   1f680:	blt	1f6b8 <main@@Base+0x9800>
   1f684:	ldrb	r0, [r8]
   1f688:	cmp	r0, #32
   1f68c:	bls	1f6a4 <main@@Base+0x97ec>
   1f690:	mov	r7, r8
   1f694:	cmp	r7, r5
   1f698:	bne	1f6d4 <main@@Base+0x981c>
   1f69c:	b	1f9f8 <main@@Base+0x9b40>
   1f6a0:	andeq	sp, r3, r4, lsr #21
   1f6a4:	bne	1f6b8 <main@@Base+0x9800>
   1f6a8:	mov	r7, r8
   1f6ac:	ldrb	r0, [r7, #1]!
   1f6b0:	cmp	r0, #32
   1f6b4:	bhi	1f6cc <main@@Base+0x9814>
   1f6b8:	mov	r0, sl
   1f6bc:	mov	r1, r8
   1f6c0:	mov	r2, r5
   1f6c4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f6c8:	mov	r7, r0
   1f6cc:	cmp	r7, r5
   1f6d0:	beq	1f9f8 <main@@Base+0x9b40>
   1f6d4:	ldrb	r0, [r7]
   1f6d8:	cmp	r0, #44	; 0x2c
   1f6dc:	bne	1fa00 <main@@Base+0x9b48>
   1f6e0:	add	r1, r7, #1
   1f6e4:	sub	r0, r5, r1
   1f6e8:	cmp	r0, #2
   1f6ec:	blt	1f728 <main@@Base+0x9870>
   1f6f0:	ldrb	r0, [r1]
   1f6f4:	cmp	r0, #32
   1f6f8:	bls	1f710 <main@@Base+0x9858>
   1f6fc:	ldr	r5, [sp, #36]	; 0x24
   1f700:	mov	r7, r1
   1f704:	cmp	r7, r5
   1f708:	bne	1f740 <main@@Base+0x9888>
   1f70c:	b	1fa64 <main@@Base+0x9bac>
   1f710:	ldr	r5, [sp, #36]	; 0x24
   1f714:	ldr	sl, [sp, #32]
   1f718:	bne	1f728 <main@@Base+0x9870>
   1f71c:	ldrb	r0, [r7, #2]!
   1f720:	cmp	r0, #32
   1f724:	bhi	1f738 <main@@Base+0x9880>
   1f728:	mov	r0, sl
   1f72c:	mov	r2, r5
   1f730:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f734:	mov	r7, r0
   1f738:	cmp	r7, r5
   1f73c:	beq	1fa64 <main@@Base+0x9bac>
   1f740:	ldrb	r0, [r7]
   1f744:	cmp	r0, #125	; 0x7d
   1f748:	bne	1ef3c <main@@Base+0x9084>
   1f74c:	add	r1, r7, #1
   1f750:	sub	r0, r5, r1
   1f754:	b	1fa14 <main@@Base+0x9b5c>
   1f758:	ldr	r6, [sp, #36]	; 0x24
   1f75c:	ldr	sl, [sp, #32]
   1f760:	mov	r0, sl
   1f764:	mov	r1, r8
   1f768:	mov	r2, r6
   1f76c:	mov	r3, #33	; 0x21
   1f770:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f774:	mov	r8, r0
   1f778:	ldr	r0, [sp, #44]	; 0x2c
   1f77c:	cmp	r0, #0
   1f780:	beq	168a4 <main@@Base+0x9ec>
   1f784:	ldr	r0, [sl]
   1f788:	mov	r1, #14
   1f78c:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   1f790:	cmp	r0, #0
   1f794:	beq	168a4 <main@@Base+0x9ec>
   1f798:	ldr	r1, [sp, #44]	; 0x2c
   1f79c:	mov	r9, r8
   1f7a0:	str	r1, [r0]
   1f7a4:	b	1eaa4 <main@@Base+0x8bec>
   1f7a8:	ldr	r6, [sp, #36]	; 0x24
   1f7ac:	ldr	sl, [sp, #32]
   1f7b0:	bne	1f7c4 <main@@Base+0x990c>
   1f7b4:	ldrb	r0, [r2, #2]!
   1f7b8:	mov	r8, r2
   1f7bc:	cmp	r0, #32
   1f7c0:	bhi	1b310 <main@@Base+0x5458>
   1f7c4:	mov	r0, sl
   1f7c8:	mov	r2, r6
   1f7cc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f7d0:	b	1b30c <main@@Base+0x5454>
   1f7d4:	ldr	r6, [sp, #36]	; 0x24
   1f7d8:	ldr	sl, [sp, #32]
   1f7dc:	bne	1f7f0 <main@@Base+0x9938>
   1f7e0:	ldrb	r0, [r8, #2]!
   1f7e4:	mov	r9, r8
   1f7e8:	cmp	r0, #32
   1f7ec:	bhi	1b3c4 <main@@Base+0x550c>
   1f7f0:	mov	r0, sl
   1f7f4:	mov	r2, r6
   1f7f8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f7fc:	b	1b3c0 <main@@Base+0x5508>
   1f800:	ldr	sl, [sp, #32]
   1f804:	ldr	r6, [sp, #36]	; 0x24
   1f808:	mov	r1, r2
   1f80c:	mov	r0, sl
   1f810:	mov	r2, r6
   1f814:	mov	r3, #10
   1f818:	b	1b20c <main@@Base+0x5354>
   1f81c:	ldr	sl, [sp, #32]
   1f820:	ldr	r6, [sp, #36]	; 0x24
   1f824:	mov	r1, r2
   1f828:	mov	r0, sl
   1f82c:	mov	r2, r6
   1f830:	mov	r3, #9
   1f834:	b	1c618 <main@@Base+0x6760>
   1f838:	ldr	r0, [sp, #32]
   1f83c:	ldr	r2, [sp, #36]	; 0x24
   1f840:	mov	r1, r8
   1f844:	mov	r3, #9
   1f848:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f84c:	b	1f9e8 <main@@Base+0x9b30>
   1f850:	ldr	r5, [fp, #-56]	; 0xffffffc8
   1f854:	mov	r9, r1
   1f858:	str	r5, [sp, #60]	; 0x3c
   1f85c:	cmp	r8, r9
   1f860:	bne	1e9ac <main@@Base+0x8af4>
   1f864:	b	1e974 <main@@Base+0x8abc>
   1f868:	ldr	sl, [sp, #32]
   1f86c:	ldr	r6, [sp, #36]	; 0x24
   1f870:	mov	r1, r2
   1f874:	mov	r0, sl
   1f878:	mov	r2, r6
   1f87c:	mov	r3, #9
   1f880:	b	1c9a0 <main@@Base+0x6ae8>
   1f884:	ldr	r9, [sp, #36]	; 0x24
   1f888:	ldr	sl, [sp, #32]
   1f88c:	b	1e05c <main@@Base+0x81a4>
   1f890:	ldr	r0, [sp, #32]
   1f894:	ldr	r2, [sp, #36]	; 0x24
   1f898:	mov	r1, r9
   1f89c:	mov	r3, #9
   1f8a0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1f8a4:	b	1fa90 <main@@Base+0x9bd8>
   1f8a8:	cmp	r0, #93	; 0x5d
   1f8ac:	bne	1facc <main@@Base+0x9c14>
   1f8b0:	ldr	r0, [sp, #36]	; 0x24
   1f8b4:	add	r1, r9, #1
   1f8b8:	sub	r0, r0, r1
   1f8bc:	cmp	r0, #2
   1f8c0:	blt	1fb4c <main@@Base+0x9c94>
   1f8c4:	ldrb	r0, [r1]
   1f8c8:	cmp	r0, #32
   1f8cc:	bls	1fb3c <main@@Base+0x9c84>
   1f8d0:	ldr	sl, [sp, #32]
   1f8d4:	mov	r9, r1
   1f8d8:	b	1e05c <main@@Base+0x81a4>
   1f8dc:	ldr	r1, [sp, #36]	; 0x24
   1f8e0:	ldr	r0, [sp, #32]
   1f8e4:	mov	r2, r1
   1f8e8:	b	1fad8 <main@@Base+0x9c20>
   1f8ec:	ldr	sl, [sp, #32]
   1f8f0:	ldr	r6, [sp, #36]	; 0x24
   1f8f4:	mov	r1, r3
   1f8f8:	mov	r0, sl
   1f8fc:	mov	r2, r6
   1f900:	mov	r3, #10
   1f904:	b	1b900 <main@@Base+0x5a48>
   1f908:	ldr	r9, [sp, #36]	; 0x24
   1f90c:	b	1fafc <main@@Base+0x9c44>
   1f910:	cmp	r0, #93	; 0x5d
   1f914:	bne	1fae4 <main@@Base+0x9c2c>
   1f918:	ldr	r0, [sp, #36]	; 0x24
   1f91c:	add	r1, r9, #1
   1f920:	sub	r0, r0, r1
   1f924:	cmp	r0, #2
   1f928:	blt	1f990 <main@@Base+0x9ad8>
   1f92c:	ldrb	r0, [r1]
   1f930:	cmp	r0, #32
   1f934:	bls	1f980 <main@@Base+0x9ac8>
   1f938:	mov	r9, r1
   1f93c:	b	1fafc <main@@Base+0x9c44>
   1f940:	ldr	r6, [sp, #36]	; 0x24
   1f944:	ldr	sl, [sp, #32]
   1f948:	bne	1f95c <main@@Base+0x9aa4>
   1f94c:	ldrb	r0, [r2, #2]!
   1f950:	mov	r8, r2
   1f954:	cmp	r0, #32
   1f958:	bhi	1b214 <main@@Base+0x535c>
   1f95c:	mov	r0, sl
   1f960:	mov	r2, r6
   1f964:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f968:	b	1b210 <main@@Base+0x5358>
   1f96c:	ldr	r1, [sp, #36]	; 0x24
   1f970:	ldr	r0, [sp, #32]
   1f974:	mov	r2, r1
   1f978:	b	1faf0 <main@@Base+0x9c38>
   1f97c:	andeq	sp, r3, r0, asr #15
   1f980:	bne	1f990 <main@@Base+0x9ad8>
   1f984:	ldrb	r0, [r9, #2]!
   1f988:	cmp	r0, #32
   1f98c:	bhi	1fafc <main@@Base+0x9c44>
   1f990:	ldr	r0, [sp, #32]
   1f994:	ldr	r2, [sp, #36]	; 0x24
   1f998:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f99c:	b	1faf8 <main@@Base+0x9c40>
   1f9a0:	ldr	r6, [sp, #36]	; 0x24
   1f9a4:	ldr	sl, [sp, #32]
   1f9a8:	bne	1f9bc <main@@Base+0x9b04>
   1f9ac:	ldrb	r0, [r2, #2]!
   1f9b0:	mov	r8, r2
   1f9b4:	cmp	r0, #32
   1f9b8:	bhi	1c620 <main@@Base+0x6768>
   1f9bc:	mov	r0, sl
   1f9c0:	mov	r2, r6
   1f9c4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f9c8:	b	1c61c <main@@Base+0x6764>
   1f9cc:	bne	1f9dc <main@@Base+0x9b24>
   1f9d0:	ldrb	r0, [r8, #2]!
   1f9d4:	cmp	r0, #32
   1f9d8:	bhi	1f9ec <main@@Base+0x9b34>
   1f9dc:	ldr	r0, [sp, #32]
   1f9e0:	ldr	r2, [sp, #36]	; 0x24
   1f9e4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1f9e8:	mov	r8, r0
   1f9ec:	ldr	r6, [sp, #36]	; 0x24
   1f9f0:	ldr	sl, [sp, #32]
   1f9f4:	b	1cb48 <main@@Base+0x6c90>
   1f9f8:	mov	r7, r5
   1f9fc:	b	1ca64 <main@@Base+0x6bac>
   1fa00:	cmp	r0, #125	; 0x7d
   1fa04:	bne	1fb24 <main@@Base+0x9c6c>
   1fa08:	ldr	r0, [sp, #36]	; 0x24
   1fa0c:	add	r1, r7, #1
   1fa10:	sub	r0, r0, r1
   1fa14:	ldr	sl, [sp, #32]
   1fa18:	cmp	r0, #2
   1fa1c:	blt	1fb78 <main@@Base+0x9cc0>
   1fa20:	ldrb	r0, [r1]
   1fa24:	cmp	r0, #32
   1fa28:	bls	1fb64 <main@@Base+0x9cac>
   1fa2c:	ldr	sl, [sp, #32]
   1fa30:	mov	r7, r1
   1fa34:	b	1ca64 <main@@Base+0x6bac>
   1fa38:	ldr	r6, [sp, #36]	; 0x24
   1fa3c:	ldr	sl, [sp, #32]
   1fa40:	bne	1fa54 <main@@Base+0x9b9c>
   1fa44:	ldrb	r0, [r2, #2]!
   1fa48:	mov	r8, r2
   1fa4c:	cmp	r0, #32
   1fa50:	bhi	1c9a8 <main@@Base+0x6af0>
   1fa54:	mov	r0, sl
   1fa58:	mov	r2, r6
   1fa5c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1fa60:	b	1c9a4 <main@@Base+0x6aec>
   1fa64:	ldr	sl, [sp, #32]
   1fa68:	mov	r1, r5
   1fa6c:	mov	r2, r5
   1fa70:	b	1fb30 <main@@Base+0x9c78>
   1fa74:	bne	1fa84 <main@@Base+0x9bcc>
   1fa78:	ldrb	r0, [r9, #2]!
   1fa7c:	cmp	r0, #32
   1fa80:	bhi	1fa94 <main@@Base+0x9bdc>
   1fa84:	ldr	r0, [sp, #32]
   1fa88:	ldr	r2, [sp, #36]	; 0x24
   1fa8c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1fa90:	mov	r9, r0
   1fa94:	ldr	r6, [sp, #36]	; 0x24
   1fa98:	ldr	sl, [sp, #32]
   1fa9c:	b	1cc3c <main@@Base+0x6d84>
   1faa0:	ldr	r6, [sp, #36]	; 0x24
   1faa4:	ldr	sl, [sp, #32]
   1faa8:	bne	1fabc <main@@Base+0x9c04>
   1faac:	ldrb	r0, [r3, #2]!
   1fab0:	mov	r8, r3
   1fab4:	cmp	r0, #32
   1fab8:	bhi	1b908 <main@@Base+0x5a50>
   1fabc:	mov	r0, sl
   1fac0:	mov	r2, r6
   1fac4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1fac8:	b	1b904 <main@@Base+0x5a4c>
   1facc:	ldr	r0, [sp, #32]
   1fad0:	ldr	r2, [sp, #36]	; 0x24
   1fad4:	mov	r1, r9
   1fad8:	mov	r3, #9
   1fadc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1fae0:	b	1fb58 <main@@Base+0x9ca0>
   1fae4:	ldr	r0, [sp, #32]
   1fae8:	ldr	r2, [sp, #36]	; 0x24
   1faec:	mov	r1, r9
   1faf0:	mov	r3, #9
   1faf4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   1faf8:	mov	r9, r0
   1fafc:	ldr	sl, [sp, #32]
   1fb00:	ldr	r0, [sl]
   1fb04:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   1fb08:	ldr	r6, [sp, #36]	; 0x24
   1fb0c:	cmp	r0, #0
   1fb10:	str	r0, [sp, #44]	; 0x2c
   1fb14:	beq	1fc38 <main@@Base+0x9d80>
   1fb18:	ldr	r0, [sl]
   1fb1c:	mov	r1, #13
   1fb20:	b	19428 <main@@Base+0x3570>
   1fb24:	ldr	sl, [sp, #32]
   1fb28:	ldr	r2, [sp, #36]	; 0x24
   1fb2c:	mov	r1, r7
   1fb30:	mov	r0, sl
   1fb34:	mov	r3, #10
   1fb38:	b	1ca5c <main@@Base+0x6ba4>
   1fb3c:	bne	1fb4c <main@@Base+0x9c94>
   1fb40:	ldrb	r0, [r9, #2]!
   1fb44:	cmp	r0, #32
   1fb48:	bhi	1fb5c <main@@Base+0x9ca4>
   1fb4c:	ldr	r0, [sp, #32]
   1fb50:	ldr	r2, [sp, #36]	; 0x24
   1fb54:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1fb58:	mov	r9, r0
   1fb5c:	ldr	sl, [sp, #32]
   1fb60:	b	1e05c <main@@Base+0x81a4>
   1fb64:	ldr	sl, [sp, #32]
   1fb68:	bne	1fb78 <main@@Base+0x9cc0>
   1fb6c:	ldrb	r0, [r7, #2]!
   1fb70:	cmp	r0, #32
   1fb74:	bhi	1ca64 <main@@Base+0x6bac>
   1fb78:	ldr	r2, [sp, #36]	; 0x24
   1fb7c:	mov	r0, sl
   1fb80:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1fb84:	b	1ca60 <main@@Base+0x6ba8>
   1fb88:	ldr	r5, [sp, #28]
   1fb8c:	mov	r8, r6
   1fb90:	b	16944 <main@@Base+0xa8c>
   1fb94:	cmp	r0, #125	; 0x7d
   1fb98:	bne	1fbd0 <main@@Base+0x9d18>
   1fb9c:	add	r1, r2, #1
   1fba0:	sub	r0, r6, r1
   1fba4:	cmp	r0, #2
   1fba8:	blt	1fbf8 <main@@Base+0x9d40>
   1fbac:	ldrb	r0, [r1]
   1fbb0:	cmp	r0, #32
   1fbb4:	bls	1fbe4 <main@@Base+0x9d2c>
   1fbb8:	mov	r8, r1
   1fbbc:	b	16944 <main@@Base+0xa8c>
   1fbc0:	mov	r0, sl
   1fbc4:	mov	r1, r6
   1fbc8:	b	1fbd8 <main@@Base+0x9d20>
   1fbcc:	muleq	r3, r4, r5
   1fbd0:	mov	r0, sl
   1fbd4:	mov	r1, r2
   1fbd8:	mov	r2, r6
   1fbdc:	mov	r3, #10
   1fbe0:	b	1693c <main@@Base+0xa84>
   1fbe4:	bne	1fbf8 <main@@Base+0x9d40>
   1fbe8:	ldrb	r0, [r2, #2]!
   1fbec:	mov	r8, r2
   1fbf0:	cmp	r0, #32
   1fbf4:	bhi	16944 <main@@Base+0xa8c>
   1fbf8:	mov	r0, sl
   1fbfc:	mov	r2, r6
   1fc00:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   1fc04:	b	16940 <main@@Base+0xa88>
   1fc08:	mov	r8, r9
   1fc0c:	ldr	r6, [sp, #36]	; 0x24
   1fc10:	ldr	sl, [sp, #32]
   1fc14:	b	168a4 <main@@Base+0x9ec>
   1fc18:	mov	r9, r5
   1fc1c:	mov	r8, r5
   1fc20:	b	168a4 <main@@Base+0x9ec>
   1fc24:	mov	r8, r1
   1fc28:	b	168a4 <main@@Base+0x9ec>
   1fc2c:	mov	r8, r5
   1fc30:	b	168a4 <main@@Base+0x9ec>
   1fc34:	ldr	r6, [sp, #36]	; 0x24
   1fc38:	mov	r8, r9
   1fc3c:	b	168a4 <main@@Base+0x9ec>
   1fc40:	mov	r8, r4
   1fc44:	b	168a4 <main@@Base+0x9ec>
   1fc48:	ldr	sl, [sp, #32]
   1fc4c:	mov	r8, r1
   1fc50:	b	168a4 <main@@Base+0x9ec>
   1fc54:	ldr	sl, [sp, #32]
   1fc58:	mov	r9, r1
   1fc5c:	mov	r8, r1
   1fc60:	b	168a4 <main@@Base+0x9ec>
   1fc64:	mov	r8, r6
   1fc68:	b	1fc0c <main@@Base+0x9d54>
   1fc6c:	ldr	r6, [sp, #36]	; 0x24
   1fc70:	ldr	sl, [sp, #32]
   1fc74:	mov	r8, r4
   1fc78:	b	168a4 <main@@Base+0x9ec>
   1fc7c:	mov	r9, r1
   1fc80:	mov	r8, r1
   1fc84:	b	1fc0c <main@@Base+0x9d54>
   1fc88:	mov	r9, r6
   1fc8c:	ldr	r6, [sp, #36]	; 0x24
   1fc90:	ldr	sl, [sp, #32]
   1fc94:	mov	r8, r9
   1fc98:	b	168a4 <main@@Base+0x9ec>
   1fc9c:	mov	r9, r5
   1fca0:	mov	r8, r5
   1fca4:	b	1fc0c <main@@Base+0x9d54>
   1fca8:	andeq	ip, r3, r0, ror #30
   1fcac:	andeq	ip, r3, r8, asr #27
   1fcb0:	strdeq	sp, [r3], -r4
   1fcb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1fcb8:	add	fp, sp, #28
   1fcbc:	sub	sp, sp, #20
   1fcc0:	mov	r5, r0
   1fcc4:	ldr	r0, [pc, #1268]	; 201c0 <main@@Base+0xa308>
   1fcc8:	mov	r4, r1
   1fccc:	mov	r1, #3
   1fcd0:	mov	r2, #0
   1fcd4:	mov	r8, #0
   1fcd8:	str	r1, [sp]
   1fcdc:	mov	r1, r4
   1fce0:	add	r0, pc, r0
   1fce4:	str	r0, [sp, #4]
   1fce8:	mov	r0, r5
   1fcec:	ldr	r3, [pc, #1232]	; 201c4 <main@@Base+0xa30c>
   1fcf0:	add	r3, pc, r3
   1fcf4:	bl	43f7c <flatcc_json_printer_struct_field@@Base>
   1fcf8:	mov	r0, #150	; 0x96
   1fcfc:	mov	r1, #4
   1fd00:	mov	r2, #1
   1fd04:	mov	r6, #4
   1fd08:	str	r1, [sp]
   1fd0c:	str	r0, [sp, #4]
   1fd10:	mov	r0, r5
   1fd14:	mov	r1, r4
   1fd18:	ldr	r3, [pc, #1192]	; 201c8 <main@@Base+0xa310>
   1fd1c:	add	r3, pc, r3
   1fd20:	bl	3adec <flatcc_json_printer_int16_field@@Base>
   1fd24:	mov	r0, #100	; 0x64
   1fd28:	mov	r1, #2
   1fd2c:	mov	r2, #2
   1fd30:	str	r1, [sp]
   1fd34:	str	r0, [sp, #4]
   1fd38:	mov	r0, r5
   1fd3c:	mov	r1, r4
   1fd40:	ldr	r3, [pc, #1156]	; 201cc <main@@Base+0xa314>
   1fd44:	add	r3, pc, r3
   1fd48:	bl	3adec <flatcc_json_printer_int16_field@@Base>
   1fd4c:	str	r6, [sp]
   1fd50:	mov	r0, r5
   1fd54:	mov	r1, r4
   1fd58:	mov	r2, #3
   1fd5c:	ldr	r3, [pc, #1132]	; 201d0 <main@@Base+0xa318>
   1fd60:	add	r3, pc, r3
   1fd64:	bl	3a404 <flatcc_json_printer_string_field@@Base>
   1fd68:	mov	r0, #9
   1fd6c:	mov	r1, r4
   1fd70:	mov	r2, #5
   1fd74:	mov	r7, #5
   1fd78:	str	r0, [sp]
   1fd7c:	mov	r0, r5
   1fd80:	ldr	r3, [pc, #1100]	; 201d4 <main@@Base+0xa31c>
   1fd84:	add	r3, pc, r3
   1fd88:	bl	3cf74 <flatcc_json_printer_uint8_vector_field@@Base>
   1fd8c:	ldr	r0, [pc, #1092]	; 201d8 <main@@Base+0xa320>
   1fd90:	mov	r1, #8
   1fd94:	str	r7, [sp]
   1fd98:	mov	r2, #6
   1fd9c:	mov	r7, #5
   1fda0:	str	r1, [sp, #4]
   1fda4:	mov	r1, r4
   1fda8:	add	r0, pc, r0
   1fdac:	str	r0, [sp, #8]
   1fdb0:	mov	r0, r5
   1fdb4:	ldr	r3, [pc, #1056]	; 201dc <main@@Base+0xa324>
   1fdb8:	add	r3, pc, r3
   1fdbc:	bl	3b7b4 <flatcc_json_printer_int8_enum_field@@Base>
   1fdc0:	ldr	r0, [pc, #1048]	; 201e0 <main@@Base+0xa328>
   1fdc4:	ldr	r1, [pc, #1048]	; 201e4 <main@@Base+0xa32c>
   1fdc8:	str	r6, [sp]
   1fdcc:	mov	r2, #8
   1fdd0:	add	r0, pc, r0
   1fdd4:	add	r1, pc, r1
   1fdd8:	str	r1, [sp, #4]
   1fddc:	str	r0, [sp, #8]
   1fde0:	mov	r0, r5
   1fde4:	mov	r1, r4
   1fde8:	ldr	r3, [pc, #1016]	; 201e8 <main@@Base+0xa330>
   1fdec:	add	r3, pc, r3
   1fdf0:	bl	43670 <flatcc_json_printer_union_field@@Base>
   1fdf4:	ldr	r0, [pc, #1008]	; 201ec <main@@Base+0xa334>
   1fdf8:	str	r7, [sp]
   1fdfc:	str	r6, [sp, #4]
   1fe00:	mov	r1, r4
   1fe04:	mov	r2, #9
   1fe08:	mov	sl, #5
   1fe0c:	add	r0, pc, r0
   1fe10:	str	r0, [sp, #8]
   1fe14:	mov	r0, r5
   1fe18:	ldr	r3, [pc, #976]	; 201f0 <main@@Base+0xa338>
   1fe1c:	add	r3, pc, r3
   1fe20:	bl	422ac <flatcc_json_printer_struct_vector_field@@Base>
   1fe24:	mov	r7, #17
   1fe28:	mov	r0, r5
   1fe2c:	mov	r1, r4
   1fe30:	mov	r2, #10
   1fe34:	str	r7, [sp]
   1fe38:	ldr	r3, [pc, #948]	; 201f4 <main@@Base+0xa33c>
   1fe3c:	add	r3, pc, r3
   1fe40:	bl	42854 <flatcc_json_printer_string_vector_field@@Base>
   1fe44:	ldr	r9, [pc, #940]	; 201f8 <main@@Base+0xa340>
   1fe48:	mov	r0, r5
   1fe4c:	mov	r1, r4
   1fe50:	mov	r2, #11
   1fe54:	add	r9, pc, r9
   1fe58:	stm	sp, {r7, r9}
   1fe5c:	ldr	r3, [pc, #920]	; 201fc <main@@Base+0xa344>
   1fe60:	add	r3, pc, r3
   1fe64:	bl	42c18 <flatcc_json_printer_table_vector_field@@Base>
   1fe68:	str	sl, [sp]
   1fe6c:	str	r9, [sp, #4]
   1fe70:	mov	r0, r5
   1fe74:	mov	r1, r4
   1fe78:	mov	r2, #12
   1fe7c:	mov	sl, #5
   1fe80:	ldr	r3, [pc, #888]	; 20200 <main@@Base+0xa348>
   1fe84:	add	r3, pc, r3
   1fe88:	bl	43484 <flatcc_json_printer_table_field@@Base>
   1fe8c:	mov	r0, #20
   1fe90:	mov	r1, r4
   1fe94:	mov	r2, #13
   1fe98:	stm	sp, {r0, r8, r9}
   1fe9c:	mov	r0, r5
   1fea0:	ldr	r3, [pc, #860]	; 20204 <main@@Base+0xa34c>
   1fea4:	add	r3, pc, r3
   1fea8:	bl	44834 <flatcc_json_printer_table_as_nested_root@@Base>
   1feac:	ldr	r0, [pc, #852]	; 20208 <main@@Base+0xa350>
   1feb0:	mov	r1, #9
   1feb4:	mov	r2, #14
   1feb8:	str	r1, [sp]
   1febc:	mov	r1, r4
   1fec0:	add	r0, pc, r0
   1fec4:	str	r0, [sp, #4]
   1fec8:	mov	r0, r5
   1fecc:	ldr	r3, [pc, #824]	; 2020c <main@@Base+0xa354>
   1fed0:	add	r3, pc, r3
   1fed4:	bl	43484 <flatcc_json_printer_table_field@@Base>
   1fed8:	mov	r9, #8
   1fedc:	mov	r0, #1
   1fee0:	mov	r1, r4
   1fee4:	mov	r2, #15
   1fee8:	str	r0, [sp, #4]
   1feec:	str	r9, [sp]
   1fef0:	mov	r0, r5
   1fef4:	ldr	r3, [pc, #788]	; 20210 <main@@Base+0xa358>
   1fef8:	add	r3, pc, r3
   1fefc:	bl	3b0ac <flatcc_json_printer_bool_field@@Base>
   1ff00:	mov	r6, #16
   1ff04:	mov	r0, r5
   1ff08:	mov	r1, r4
   1ff0c:	mov	r2, #16
   1ff10:	stm	sp, {r6, r8}
   1ff14:	ldr	r3, [pc, #760]	; 20214 <main@@Base+0xa35c>
   1ff18:	add	r3, pc, r3
   1ff1c:	bl	3aed4 <flatcc_json_printer_int32_field@@Base>
   1ff20:	stm	sp, {r6, r8}
   1ff24:	mov	r0, r5
   1ff28:	mov	r1, r4
   1ff2c:	mov	r2, #17
   1ff30:	ldr	r3, [pc, #736]	; 20218 <main@@Base+0xa360>
   1ff34:	add	r3, pc, r3
   1ff38:	bl	3aab0 <flatcc_json_printer_uint32_field@@Base>
   1ff3c:	str	r8, [sp, #8]
   1ff40:	str	r8, [sp, #12]
   1ff44:	str	r6, [sp]
   1ff48:	mov	r0, r5
   1ff4c:	mov	r1, r4
   1ff50:	mov	r2, #18
   1ff54:	ldr	r3, [pc, #704]	; 2021c <main@@Base+0xa364>
   1ff58:	add	r3, pc, r3
   1ff5c:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   1ff60:	str	r8, [sp, #8]
   1ff64:	str	r8, [sp, #12]
   1ff68:	str	r6, [sp]
   1ff6c:	mov	r0, r5
   1ff70:	mov	r1, r4
   1ff74:	mov	r2, #19
   1ff78:	ldr	r3, [pc, #672]	; 20220 <main@@Base+0xa368>
   1ff7c:	add	r3, pc, r3
   1ff80:	bl	3ab74 <flatcc_json_printer_uint64_field@@Base>
   1ff84:	stm	sp, {r7, r8}
   1ff88:	mov	r0, r5
   1ff8c:	mov	r1, r4
   1ff90:	mov	r2, #20
   1ff94:	ldr	r3, [pc, #648]	; 20224 <main@@Base+0xa36c>
   1ff98:	add	r3, pc, r3
   1ff9c:	bl	3aed4 <flatcc_json_printer_int32_field@@Base>
   1ffa0:	stm	sp, {r7, r8}
   1ffa4:	mov	r0, r5
   1ffa8:	mov	r1, r4
   1ffac:	mov	r2, #21
   1ffb0:	ldr	r3, [pc, #624]	; 20228 <main@@Base+0xa370>
   1ffb4:	add	r3, pc, r3
   1ffb8:	bl	3aab0 <flatcc_json_printer_uint32_field@@Base>
   1ffbc:	str	r8, [sp, #8]
   1ffc0:	str	r8, [sp, #12]
   1ffc4:	str	r7, [sp]
   1ffc8:	mov	r0, r5
   1ffcc:	mov	r1, r4
   1ffd0:	mov	r2, #22
   1ffd4:	ldr	r3, [pc, #592]	; 2022c <main@@Base+0xa374>
   1ffd8:	add	r3, pc, r3
   1ffdc:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   1ffe0:	str	r8, [sp, #8]
   1ffe4:	str	r8, [sp, #12]
   1ffe8:	str	r7, [sp]
   1ffec:	mov	r0, r5
   1fff0:	mov	r1, r4
   1fff4:	mov	r2, #23
   1fff8:	mov	r8, #23
   1fffc:	ldr	r3, [pc, #556]	; 20230 <main@@Base+0xa378>
   20000:	add	r3, pc, r3
   20004:	bl	3ab74 <flatcc_json_printer_uint64_field@@Base>
   20008:	str	r6, [sp]
   2000c:	mov	r0, r5
   20010:	mov	r1, r4
   20014:	mov	r2, #24
   20018:	ldr	r3, [pc, #532]	; 20234 <main@@Base+0xa37c>
   2001c:	add	r3, pc, r3
   20020:	bl	3f11c <flatcc_json_printer_bool_vector_field@@Base>
   20024:	str	sl, [sp]
   20028:	vldr	s0, [pc, #392]	; 201b8 <main@@Base+0xa300>
   2002c:	mov	r0, r5
   20030:	mov	r1, r4
   20034:	mov	r2, #25
   20038:	ldr	r3, [pc, #504]	; 20238 <main@@Base+0xa380>
   2003c:	add	r3, pc, r3
   20040:	bl	3b1a4 <flatcc_json_printer_float_field@@Base>
   20044:	mov	r6, #6
   20048:	vmov.f32	s0, #8	; 0x40400000  3.0
   2004c:	mov	r0, r5
   20050:	mov	r1, r4
   20054:	mov	r2, #26
   20058:	str	r6, [sp]
   2005c:	ldr	r3, [pc, #472]	; 2023c <main@@Base+0xa384>
   20060:	add	r3, pc, r3
   20064:	bl	3b1a4 <flatcc_json_printer_float_field@@Base>
   20068:	str	r6, [sp]
   2006c:	vldr	s0, [pc, #328]	; 201bc <main@@Base+0xa304>
   20070:	mov	r0, r5
   20074:	mov	r1, r4
   20078:	mov	r2, #27
   2007c:	ldr	r3, [pc, #444]	; 20240 <main@@Base+0xa388>
   20080:	add	r3, pc, r3
   20084:	bl	3b1a4 <flatcc_json_printer_float_field@@Base>
   20088:	mov	r0, #18
   2008c:	mov	r1, r4
   20090:	mov	r2, #28
   20094:	str	r0, [sp]
   20098:	mov	r0, r5
   2009c:	ldr	r3, [pc, #416]	; 20244 <main@@Base+0xa38c>
   200a0:	add	r3, pc, r3
   200a4:	bl	42854 <flatcc_json_printer_string_vector_field@@Base>
   200a8:	ldr	r0, [pc, #408]	; 20248 <main@@Base+0xa390>
   200ac:	stm	sp, {r8, r9}
   200b0:	mov	r1, r4
   200b4:	mov	r2, #29
   200b8:	add	r0, pc, r0
   200bc:	str	r0, [sp, #8]
   200c0:	mov	r0, r5
   200c4:	ldr	r3, [pc, #384]	; 2024c <main@@Base+0xa394>
   200c8:	add	r3, pc, r3
   200cc:	bl	422ac <flatcc_json_printer_struct_vector_field@@Base>
   200d0:	mov	r6, #4
   200d4:	mov	r0, r5
   200d8:	mov	r1, r4
   200dc:	mov	r2, #30
   200e0:	str	r6, [sp]
   200e4:	ldr	r3, [pc, #356]	; 20250 <main@@Base+0xa398>
   200e8:	add	r3, pc, r3
   200ec:	bl	3cf74 <flatcc_json_printer_uint8_vector_field@@Base>
   200f0:	str	sl, [sp]
   200f4:	str	r6, [sp, #4]
   200f8:	mov	r1, r4
   200fc:	mov	r2, #31
   20100:	ldr	r0, [pc, #332]	; 20254 <main@@Base+0xa39c>
   20104:	add	r0, pc, r0
   20108:	str	r0, [sp, #8]
   2010c:	mov	r0, r5
   20110:	ldr	r3, [pc, #320]	; 20258 <main@@Base+0xa3a0>
   20114:	add	r3, pc, r3
   20118:	bl	422ac <flatcc_json_printer_struct_vector_field@@Base>
   2011c:	mov	r0, #15
   20120:	mov	r1, r4
   20124:	mov	r2, #32
   20128:	str	r0, [sp]
   2012c:	mov	r0, r5
   20130:	ldr	r3, [pc, #292]	; 2025c <main@@Base+0xa3a4>
   20134:	add	r3, pc, r3
   20138:	bl	3ed18 <flatcc_json_printer_int64_vector_field@@Base>
   2013c:	str	r7, [sp]
   20140:	mov	r0, r5
   20144:	mov	r1, r4
   20148:	mov	r2, #33	; 0x21
   2014c:	ldr	r3, [pc, #268]	; 20260 <main@@Base+0xa3a8>
   20150:	add	r3, pc, r3
   20154:	bl	3f910 <flatcc_json_printer_double_vector_field@@Base>
   20158:	ldr	r0, [pc, #260]	; 20264 <main@@Base+0xa3ac>
   2015c:	mov	r1, #21
   20160:	mov	r2, #34	; 0x22
   20164:	str	r1, [sp]
   20168:	mov	r1, r4
   2016c:	add	r0, pc, r0
   20170:	str	r0, [sp, #4]
   20174:	mov	r0, r5
   20178:	ldr	r3, [pc, #232]	; 20268 <main@@Base+0xa3b0>
   2017c:	add	r3, pc, r3
   20180:	bl	43484 <flatcc_json_printer_table_field@@Base>
   20184:	ldr	r0, [pc, #224]	; 2026c <main@@Base+0xa3b4>
   20188:	mov	r1, #10
   2018c:	mov	r2, #35	; 0x23
   20190:	str	r1, [sp]
   20194:	mov	r1, r4
   20198:	add	r0, pc, r0
   2019c:	str	r0, [sp, #4]
   201a0:	mov	r0, r5
   201a4:	ldr	r3, [pc, #196]	; 20270 <main@@Base+0xa3b8>
   201a8:	add	r3, pc, r3
   201ac:	bl	43484 <flatcc_json_printer_table_field@@Base>
   201b0:	sub	sp, fp, #28
   201b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   201b8:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   201bc:	andeq	r0, r0, r0
   201c0:	andeq	fp, r0, r4, ror #27
   201c4:	ldrdeq	r8, [r2], -lr
   201c8:			; <UNDEFINED> instruction: 0x000286b6
   201cc:	muleq	r2, r3, r6
   201d0:	andeq	r8, r2, sl, ror r6
   201d4:	andeq	r8, r2, fp, asr r6
   201d8:	andeq	fp, r0, r8, lsr lr
   201dc:	andeq	r8, r2, r1, lsr r6
   201e0:	andeq	fp, r0, r0, lsl #31
   201e4:	strdeq	fp, [r0], -r0
   201e8:	andeq	r8, r2, r5, ror r7
   201ec:	andeq	fp, r0, r0, ror pc
   201f0:	ldrdeq	r8, [r2], -r3
   201f4:			; <UNDEFINED> instruction: 0x000285b9
   201f8:			; <UNDEFINED> instruction: 0xfffffe58
   201fc:	andeq	r8, r2, r7, lsr #11
   20200:	muleq	r2, r5, r5
   20204:	andeq	r8, r2, fp, ror r5
   20208:	andeq	fp, r0, r4, lsr #30
   2020c:	andeq	r8, r2, r4, ror #10
   20210:	andeq	r8, r2, r6, asr #10
   20214:	andeq	r8, r2, pc, lsr #10
   20218:	andeq	r8, r2, r4, lsr #10
   2021c:	andeq	r8, r2, r1, lsl r5
   20220:	strdeq	r8, [r2], -lr
   20224:	strdeq	r8, [r2], -r3
   20228:	andeq	r8, r2, r9, ror #9
   2022c:	ldrdeq	r8, [r2], -r7
   20230:	andeq	r8, r2, r1, asr #9
   20234:			; <UNDEFINED> instruction: 0x000284b7
   20238:	andeq	r8, r2, r8, lsr #9
   2023c:	andeq	r8, r2, sl, lsl #9
   20240:	andeq	r8, r2, r1, ror r4
   20244:	andeq	r8, r2, r8, asr r4
   20248:			; <UNDEFINED> instruction: 0x0000bdbc
   2024c:	andeq	r8, r2, r3, asr #8
   20250:	andeq	r8, r2, fp, lsr r4
   20254:	andeq	fp, r0, r8, ror ip
   20258:	andeq	r8, r2, r4, lsl r4
   2025c:	strdeq	r8, [r2], -sl
   20260:	andeq	r8, r2, lr, ror #7
   20264:	andeq	fp, r0, ip, ror sp
   20268:	ldrdeq	r8, [r2], -r4
   2026c:	andeq	fp, r0, r4, asr sp
   20270:			; <UNDEFINED> instruction: 0x000283be
   20274:	push	{r4, r5, r6, r7, fp, lr}
   20278:	add	fp, sp, #16
   2027c:	sub	sp, sp, #8
   20280:	mov	r1, #0
   20284:	mov	r2, #32
   20288:	mov	r3, #16
   2028c:	mov	r4, r0
   20290:	bl	32070 <flatcc_verify_field@@Base>
   20294:	cmp	r0, #0
   20298:	bne	206a0 <main@@Base+0xa7e8>
   2029c:	mov	r0, r4
   202a0:	mov	r1, #2
   202a4:	mov	r2, #2
   202a8:	mov	r3, #2
   202ac:	bl	32070 <flatcc_verify_field@@Base>
   202b0:	cmp	r0, #0
   202b4:	bne	206a0 <main@@Base+0xa7e8>
   202b8:	mov	r0, r4
   202bc:	mov	r1, #1
   202c0:	mov	r2, #2
   202c4:	mov	r3, #2
   202c8:	bl	32070 <flatcc_verify_field@@Base>
   202cc:	cmp	r0, #0
   202d0:	bne	206a0 <main@@Base+0xa7e8>
   202d4:	mov	r0, r4
   202d8:	mov	r1, #3
   202dc:	mov	r2, #1
   202e0:	bl	320f4 <flatcc_verify_string_field@@Base>
   202e4:	cmp	r0, #0
   202e8:	bne	206a0 <main@@Base+0xa7e8>
   202ec:	mov	r0, r4
   202f0:	mov	r1, #6
   202f4:	mov	r2, #1
   202f8:	mov	r3, #1
   202fc:	mov	r5, #1
   20300:	bl	32070 <flatcc_verify_field@@Base>
   20304:	cmp	r0, #0
   20308:	bne	206a0 <main@@Base+0xa7e8>
   2030c:	mvn	r0, #0
   20310:	mov	r1, #5
   20314:	mov	r2, #0
   20318:	mov	r3, #1
   2031c:	str	r5, [sp]
   20320:	str	r0, [sp, #4]
   20324:	mov	r0, r4
   20328:	bl	321d4 <flatcc_verify_vector_field@@Base>
   2032c:	cmp	r0, #0
   20330:	bne	206a0 <main@@Base+0xa7e8>
   20334:	ldr	r3, [pc, #908]	; 206c8 <main@@Base+0xa810>
   20338:	mov	r0, r4
   2033c:	mov	r1, #11
   20340:	mov	r2, #0
   20344:	add	r3, pc, r3
   20348:	bl	325bc <flatcc_verify_table_vector_field@@Base>
   2034c:	cmp	r0, #0
   20350:	bne	206a0 <main@@Base+0xa7e8>
   20354:	mov	r0, r4
   20358:	mov	r1, #10
   2035c:	mov	r2, #0
   20360:	bl	322cc <flatcc_verify_string_vector_field@@Base>
   20364:	cmp	r0, #0
   20368:	bne	206a0 <main@@Base+0xa7e8>
   2036c:	mov	r0, r4
   20370:	mov	r1, #28
   20374:	mov	r2, #0
   20378:	bl	322cc <flatcc_verify_string_vector_field@@Base>
   2037c:	cmp	r0, #0
   20380:	bne	206a0 <main@@Base+0xa7e8>
   20384:	mvn	r0, #0
   20388:	mov	r1, #1
   2038c:	mov	r2, #0
   20390:	mov	r3, #1
   20394:	str	r1, [sp]
   20398:	str	r0, [sp, #4]
   2039c:	mov	r0, r4
   203a0:	mov	r1, #24
   203a4:	bl	321d4 <flatcc_verify_vector_field@@Base>
   203a8:	cmp	r0, #0
   203ac:	bne	206a0 <main@@Base+0xa7e8>
   203b0:	mvn	r0, #-536870912	; 0xe0000000
   203b4:	mov	r1, #4
   203b8:	mov	r2, #0
   203bc:	mov	r3, #8
   203c0:	str	r1, [sp]
   203c4:	str	r0, [sp, #4]
   203c8:	mov	r0, r4
   203cc:	mov	r1, #29
   203d0:	bl	321d4 <flatcc_verify_vector_field@@Base>
   203d4:	cmp	r0, #0
   203d8:	bne	206a0 <main@@Base+0xa7e8>
   203dc:	ldr	r5, [pc, #744]	; 206cc <main@@Base+0xa814>
   203e0:	mov	r0, r4
   203e4:	mov	r1, #12
   203e8:	mov	r2, #0
   203ec:	add	r5, pc, r5
   203f0:	mov	r3, r5
   203f4:	bl	32454 <flatcc_verify_table_field@@Base>
   203f8:	cmp	r0, #0
   203fc:	bne	206a0 <main@@Base+0xa7e8>
   20400:	ldr	r3, [pc, #712]	; 206d0 <main@@Base+0xa818>
   20404:	mov	r0, r4
   20408:	mov	r1, #8
   2040c:	mov	r2, #0
   20410:	add	r3, pc, r3
   20414:	bl	333e4 <flatcc_verify_union_field@@Base>
   20418:	cmp	r0, #0
   2041c:	bne	206a0 <main@@Base+0xa7e8>
   20420:	mvn	r6, #-1073741824	; 0xc0000000
   20424:	mov	r7, #2
   20428:	mov	r0, r4
   2042c:	mov	r1, #9
   20430:	mov	r2, #0
   20434:	mov	r3, #4
   20438:	str	r7, [sp]
   2043c:	str	r6, [sp, #4]
   20440:	bl	321d4 <flatcc_verify_vector_field@@Base>
   20444:	cmp	r0, #0
   20448:	bne	206a0 <main@@Base+0xa7e8>
   2044c:	mov	r0, r4
   20450:	mov	r1, #31
   20454:	mov	r2, #0
   20458:	mov	r3, #4
   2045c:	str	r7, [sp]
   20460:	str	r6, [sp, #4]
   20464:	bl	321d4 <flatcc_verify_vector_field@@Base>
   20468:	cmp	r0, #0
   2046c:	bne	206a0 <main@@Base+0xa7e8>
   20470:	mov	r0, #1
   20474:	mov	r1, #13
   20478:	mov	r2, #0
   2047c:	mov	r3, #0
   20480:	stm	sp, {r0, r5}
   20484:	mov	r0, r4
   20488:	bl	330c4 <flatcc_verify_table_as_nested_root@@Base>
   2048c:	cmp	r0, #0
   20490:	bne	206a0 <main@@Base+0xa7e8>
   20494:	ldr	r3, [pc, #568]	; 206d4 <main@@Base+0xa81c>
   20498:	mov	r0, r4
   2049c:	mov	r1, #14
   204a0:	mov	r2, #0
   204a4:	add	r3, pc, r3
   204a8:	bl	32454 <flatcc_verify_table_field@@Base>
   204ac:	cmp	r0, #0
   204b0:	bne	206a0 <main@@Base+0xa7e8>
   204b4:	mov	r0, r4
   204b8:	mov	r1, #15
   204bc:	mov	r2, #1
   204c0:	mov	r3, #1
   204c4:	bl	32070 <flatcc_verify_field@@Base>
   204c8:	cmp	r0, #0
   204cc:	bne	206a0 <main@@Base+0xa7e8>
   204d0:	mov	r0, r4
   204d4:	mov	r1, #16
   204d8:	mov	r2, #4
   204dc:	mov	r3, #4
   204e0:	bl	32070 <flatcc_verify_field@@Base>
   204e4:	cmp	r0, #0
   204e8:	bne	206a0 <main@@Base+0xa7e8>
   204ec:	mov	r0, r4
   204f0:	mov	r1, #17
   204f4:	mov	r2, #4
   204f8:	mov	r3, #4
   204fc:	bl	32070 <flatcc_verify_field@@Base>
   20500:	cmp	r0, #0
   20504:	bne	206a0 <main@@Base+0xa7e8>
   20508:	mov	r0, r4
   2050c:	mov	r1, #18
   20510:	mov	r2, #8
   20514:	mov	r3, #8
   20518:	bl	32070 <flatcc_verify_field@@Base>
   2051c:	cmp	r0, #0
   20520:	bne	206a0 <main@@Base+0xa7e8>
   20524:	mov	r0, r4
   20528:	mov	r1, #19
   2052c:	mov	r2, #8
   20530:	mov	r3, #8
   20534:	bl	32070 <flatcc_verify_field@@Base>
   20538:	cmp	r0, #0
   2053c:	bne	206a0 <main@@Base+0xa7e8>
   20540:	mov	r0, r4
   20544:	mov	r1, #20
   20548:	mov	r2, #4
   2054c:	mov	r3, #4
   20550:	bl	32070 <flatcc_verify_field@@Base>
   20554:	cmp	r0, #0
   20558:	bne	206a0 <main@@Base+0xa7e8>
   2055c:	mov	r0, r4
   20560:	mov	r1, #21
   20564:	mov	r2, #4
   20568:	mov	r3, #4
   2056c:	bl	32070 <flatcc_verify_field@@Base>
   20570:	cmp	r0, #0
   20574:	bne	206a0 <main@@Base+0xa7e8>
   20578:	mov	r0, r4
   2057c:	mov	r1, #22
   20580:	mov	r2, #8
   20584:	mov	r3, #8
   20588:	bl	32070 <flatcc_verify_field@@Base>
   2058c:	cmp	r0, #0
   20590:	bne	206a0 <main@@Base+0xa7e8>
   20594:	mov	r0, r4
   20598:	mov	r1, #23
   2059c:	mov	r2, #8
   205a0:	mov	r3, #8
   205a4:	bl	32070 <flatcc_verify_field@@Base>
   205a8:	cmp	r0, #0
   205ac:	bne	206a0 <main@@Base+0xa7e8>
   205b0:	mov	r0, r4
   205b4:	mov	r1, #25
   205b8:	mov	r2, #4
   205bc:	mov	r3, #4
   205c0:	bl	32070 <flatcc_verify_field@@Base>
   205c4:	cmp	r0, #0
   205c8:	bne	206a0 <main@@Base+0xa7e8>
   205cc:	mov	r0, r4
   205d0:	mov	r1, #26
   205d4:	mov	r2, #4
   205d8:	mov	r3, #4
   205dc:	bl	32070 <flatcc_verify_field@@Base>
   205e0:	cmp	r0, #0
   205e4:	bne	206a0 <main@@Base+0xa7e8>
   205e8:	mov	r0, r4
   205ec:	mov	r1, #27
   205f0:	mov	r2, #4
   205f4:	mov	r3, #4
   205f8:	bl	32070 <flatcc_verify_field@@Base>
   205fc:	cmp	r0, #0
   20600:	bne	206a0 <main@@Base+0xa7e8>
   20604:	mvn	r0, #0
   20608:	mov	r1, #1
   2060c:	mov	r2, #0
   20610:	mov	r3, #1
   20614:	str	r1, [sp]
   20618:	str	r0, [sp, #4]
   2061c:	mov	r0, r4
   20620:	mov	r1, #30
   20624:	bl	321d4 <flatcc_verify_vector_field@@Base>
   20628:	cmp	r0, #0
   2062c:	bne	206a0 <main@@Base+0xa7e8>
   20630:	mvn	r5, #-536870912	; 0xe0000000
   20634:	mov	r6, #8
   20638:	mov	r0, r4
   2063c:	mov	r1, #32
   20640:	mov	r2, #0
   20644:	mov	r3, #8
   20648:	str	r6, [sp]
   2064c:	str	r5, [sp, #4]
   20650:	bl	321d4 <flatcc_verify_vector_field@@Base>
   20654:	cmp	r0, #0
   20658:	bne	206a0 <main@@Base+0xa7e8>
   2065c:	mov	r0, r4
   20660:	mov	r1, #33	; 0x21
   20664:	mov	r2, #0
   20668:	mov	r3, #8
   2066c:	str	r6, [sp]
   20670:	str	r5, [sp, #4]
   20674:	bl	321d4 <flatcc_verify_vector_field@@Base>
   20678:	cmp	r0, #0
   2067c:	bne	206a0 <main@@Base+0xa7e8>
   20680:	ldr	r3, [pc, #80]	; 206d8 <main@@Base+0xa820>
   20684:	mov	r0, r4
   20688:	mov	r1, #34	; 0x22
   2068c:	mov	r2, #0
   20690:	add	r3, pc, r3
   20694:	bl	32454 <flatcc_verify_table_field@@Base>
   20698:	cmp	r0, #0
   2069c:	beq	206a8 <main@@Base+0xa7f0>
   206a0:	sub	sp, fp, #16
   206a4:	pop	{r4, r5, r6, r7, fp, pc}
   206a8:	ldr	r3, [pc, #44]	; 206dc <main@@Base+0xa824>
   206ac:	mov	r0, r4
   206b0:	mov	r1, #35	; 0x23
   206b4:	mov	r2, #0
   206b8:	add	r3, pc, r3
   206bc:	sub	sp, fp, #16
   206c0:	pop	{r4, r5, r6, r7, fp, lr}
   206c4:	b	32454 <flatcc_verify_table_field@@Base>
   206c8:			; <UNDEFINED> instruction: 0xffffff28
   206cc:			; <UNDEFINED> instruction: 0xfffffe80
   206d0:	andeq	ip, r0, ip, ror #5
   206d4:	andeq	ip, r0, r8, lsl #5
   206d8:	strdeq	ip, [r0], -r4
   206dc:	ldrdeq	ip, [r0], -r4
   206e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206e4:	add	fp, sp, #28
   206e8:	sub	sp, sp, #12
   206ec:	mov	r5, r1
   206f0:	sub	r1, r2, r1
   206f4:	cmp	r1, #8
   206f8:	movcs	r1, #8
   206fc:	sub	r1, r1, #1
   20700:	cmp	r1, #7
   20704:	bhi	20878 <main@@Base+0xa9c0>
   20708:	str	r3, [sp, #8]
   2070c:	add	r4, pc, #36	; 0x24
   20710:	mov	r9, #0
   20714:	mov	ip, #0
   20718:	mov	lr, #0
   2071c:	mov	sl, #0
   20720:	mov	r6, #0
   20724:	mov	r7, #0
   20728:	mov	r3, #0
   2072c:	ldr	r8, [r4, r1, lsl #2]
   20730:	mov	r1, #0
   20734:	add	pc, r4, r8
   20738:	andeq	r0, r0, r4, rrx
   2073c:	andeq	r0, r0, ip, asr r0
   20740:	andeq	r0, r0, r4, asr r0
   20744:	andeq	r0, r0, ip, asr #32
   20748:	andeq	r0, r0, r0, asr #32
   2074c:	andeq	r0, r0, r4, lsr r0
   20750:	andeq	r0, r0, r4, lsr #32
   20754:	andeq	r0, r0, r0, lsr #32
   20758:	ldrb	ip, [r5, #7]
   2075c:	ldrb	r1, [r5, #6]
   20760:	mov	lr, r9
   20764:	orr	r1, ip, r1, lsl #8
   20768:	mov	r9, r1
   2076c:	ldrb	r1, [r5, #5]
   20770:	mov	sl, lr
   20774:	orr	r9, r9, r1, lsl #16
   20778:	ldrb	r1, [r5, #4]
   2077c:	mov	r6, sl
   20780:	orr	r9, r9, r1, lsl #24
   20784:	ldrb	r1, [r5, #3]
   20788:	orr	r7, r1, r6
   2078c:	ldrb	r1, [r5, #2]
   20790:	orr	r3, r7, r1, lsl #8
   20794:	ldrb	r1, [r5, #1]
   20798:	orr	r1, r3, r1, lsl #16
   2079c:	ldrb	r7, [r5]
   207a0:	ldr	r3, [fp, #12]
   207a4:	ldr	r8, [fp, #8]
   207a8:	orr	r4, r1, r7, lsl #24
   207ac:	movw	r7, #25957	; 0x6565
   207b0:	mvn	r1, #-1845493760	; 0x92000000
   207b4:	movt	r7, #18290	; 0x4772
   207b8:	subs	r1, r1, r9
   207bc:	sbcs	r1, r7, r4
   207c0:	bcc	207f8 <main@@Base+0xa940>
   207c4:	movw	r1, #30053	; 0x7565
   207c8:	movt	r1, #17004	; 0x426c
   207cc:	teq	r4, r1
   207d0:	bne	20878 <main@@Base+0xa9c0>
   207d4:	str	r3, [sp]
   207d8:	mov	r1, r5
   207dc:	mov	r3, #4
   207e0:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   207e4:	cmp	r0, r5
   207e8:	beq	20878 <main@@Base+0xa9c0>
   207ec:	mov	r1, #0
   207f0:	mov	r2, #8
   207f4:	b	20864 <main@@Base+0xa9ac>
   207f8:	movw	r6, #25600	; 0x6400
   207fc:	bic	r1, r4, #255	; 0xff
   20800:	movt	r6, #21093	; 0x5265
   20804:	teq	r1, r6
   20808:	bne	20830 <main@@Base+0xa978>
   2080c:	str	r3, [sp]
   20810:	mov	r1, r5
   20814:	mov	r3, #3
   20818:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   2081c:	cmp	r0, r5
   20820:	beq	20878 <main@@Base+0xa9c0>
   20824:	mov	r1, #0
   20828:	mov	r2, #1
   2082c:	b	20864 <main@@Base+0xa9ac>
   20830:	eor	r1, r4, r7
   20834:	and	r7, r9, #-16777216	; 0xff000000
   20838:	eor	r7, r7, #1845493760	; 0x6e000000
   2083c:	orrs	r1, r7, r1
   20840:	bne	20878 <main@@Base+0xa9c0>
   20844:	str	r3, [sp]
   20848:	mov	r1, r5
   2084c:	mov	r3, #5
   20850:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   20854:	cmp	r0, r5
   20858:	beq	20878 <main@@Base+0xa9c0>
   2085c:	mov	r1, #0
   20860:	mov	r2, #2
   20864:	str	r2, [r8]
   20868:	str	r1, [r8, #4]
   2086c:	mov	r5, r0
   20870:	ldr	r2, [sp, #8]
   20874:	str	r1, [r2]
   20878:	mov	r0, r5
   2087c:	sub	sp, fp, #28
   20880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20888:	add	fp, sp, #28
   2088c:	sub	sp, sp, #20
   20890:	sub	sl, r2, r1
   20894:	cmp	sl, #8
   20898:	mov	r7, sl
   2089c:	movcs	r7, #8
   208a0:	sub	r7, r7, #1
   208a4:	cmp	r7, #7
   208a8:	bhi	20cac <main@@Base+0xadf4>
   208ac:	str	r0, [sp, #16]
   208b0:	str	r3, [sp, #12]
   208b4:	mov	r4, #0
   208b8:	mov	lr, #0
   208bc:	mov	r6, #0
   208c0:	mov	r3, #0
   208c4:	mov	r5, #0
   208c8:	mov	r8, #0
   208cc:	mov	r9, #0
   208d0:	ldr	r0, [fp, #12]
   208d4:	str	r0, [sp, #8]
   208d8:	ldr	r0, [fp, #8]
   208dc:	str	r0, [sp, #4]
   208e0:	add	ip, pc, #8
   208e4:	ldr	r0, [ip, r7, lsl #2]
   208e8:	mov	r7, #0
   208ec:	add	pc, ip, r0
   208f0:	andeq	r0, r0, r4, rrx
   208f4:	andeq	r0, r0, ip, asr r0
   208f8:	andeq	r0, r0, r4, asr r0
   208fc:	andeq	r0, r0, ip, asr #32
   20900:	andeq	r0, r0, r0, asr #32
   20904:	andeq	r0, r0, r4, lsr r0
   20908:	andeq	r0, r0, r4, lsr #32
   2090c:	andeq	r0, r0, r0, lsr #32
   20910:	ldrb	lr, [r1, #7]
   20914:	ldrb	r0, [r1, #6]
   20918:	mov	r7, r4
   2091c:	orr	r0, lr, r0, lsl #8
   20920:	mov	r4, r0
   20924:	ldrb	r0, [r1, #5]
   20928:	mov	r6, r7
   2092c:	orr	r4, r4, r0, lsl #16
   20930:	ldrb	r0, [r1, #4]
   20934:	mov	r3, r6
   20938:	orr	r4, r4, r0, lsl #24
   2093c:	ldrb	r0, [r1, #3]
   20940:	orr	r5, r0, r3
   20944:	ldrb	r0, [r1, #2]
   20948:	orr	r8, r5, r0, lsl #8
   2094c:	ldrb	r0, [r1, #1]
   20950:	orr	r9, r8, r0, lsl #16
   20954:	ldrb	r0, [r1]
   20958:	movw	lr, #30061	; 0x756d
   2095c:	movw	r3, #30815	; 0x785f
   20960:	movt	lr, #25966	; 0x656e
   20964:	movt	r3, #26725	; 0x6865
   20968:	orr	r6, r9, r0, lsl #24
   2096c:	subs	r0, r4, lr
   20970:	sbcs	r0, r6, r3
   20974:	bcs	209dc <main@@Base+0xab24>
   20978:	movw	r3, #27759	; 0x6c6f
   2097c:	mvn	r0, #-1912602624	; 0x8e000000
   20980:	bic	r7, r6, #255	; 0xff
   20984:	movt	r3, #17263	; 0x436f
   20988:	subs	r0, r0, r4
   2098c:	sbcs	r0, r3, r6
   20990:	bcc	20a38 <main@@Base+0xab80>
   20994:	cmp	sl, #4
   20998:	blt	20cac <main@@Base+0xadf4>
   2099c:	movw	r0, #30976	; 0x7900
   209a0:	movt	r0, #16750	; 0x416e
   209a4:	teq	r7, r0
   209a8:	bne	20cac <main@@Base+0xadf4>
   209ac:	ldrb	r0, [r1, #3]
   209b0:	mov	r3, r1
   209b4:	cmp	r0, #46	; 0x2e
   209b8:	addeq	r3, r3, #4
   209bc:	cmp	r3, r1
   209c0:	beq	20cac <main@@Base+0xadf4>
   209c4:	mov	r1, r3
   209c8:	ldr	r0, [sp, #16]
   209cc:	ldr	r3, [sp, #12]
   209d0:	sub	sp, fp, #28
   209d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209d8:	b	237dc <main@@Base+0xd924>
   209dc:	add	r0, r3, #64512	; 0xfc00
   209e0:	add	r7, r0, #17301504	; 0x1080000
   209e4:	subs	r0, r4, lr
   209e8:	sbcs	r0, r6, r7
   209ec:	bcs	20a80 <main@@Base+0xabc8>
   209f0:	cmp	sl, #9
   209f4:	blt	20cac <main@@Base+0xadf4>
   209f8:	eor	r0, r4, lr
   209fc:	eor	r3, r6, r3
   20a00:	orrs	r0, r0, r3
   20a04:	bne	20cac <main@@Base+0xadf4>
   20a08:	ldrb	r0, [r1, #8]
   20a0c:	mov	r3, r1
   20a10:	cmp	r0, #46	; 0x2e
   20a14:	addeq	r3, r3, #9
   20a18:	cmp	r3, r1
   20a1c:	beq	20cac <main@@Base+0xadf4>
   20a20:	mov	r1, r3
   20a24:	ldr	r0, [sp, #16]
   20a28:	ldr	r3, [sp, #12]
   20a2c:	sub	sp, fp, #28
   20a30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a34:	b	24ac8 <main@@Base+0xec10>
   20a38:	movw	r0, #28416	; 0x6f00
   20a3c:	movt	r0, #18031	; 0x466f
   20a40:	teq	r7, r0
   20a44:	bne	20adc <main@@Base+0xac24>
   20a48:	cmp	sl, #4
   20a4c:	blt	20cac <main@@Base+0xadf4>
   20a50:	ldrb	r0, [r1, #3]
   20a54:	mov	r3, r1
   20a58:	cmp	r0, #46	; 0x2e
   20a5c:	addeq	r3, r3, #4
   20a60:	cmp	r3, r1
   20a64:	beq	20cac <main@@Base+0xadf4>
   20a68:	mov	r1, r3
   20a6c:	ldr	r0, [sp, #16]
   20a70:	ldr	r3, [sp, #12]
   20a74:	sub	sp, fp, #28
   20a78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20a7c:	b	24860 <main@@Base+0xe9a8>
   20a80:	sub	r0, r3, #4352	; 0x1100
   20a84:	subs	r3, r4, lr
   20a88:	sub	r0, r0, #-100663296	; 0xfa000000
   20a8c:	sbcs	r0, r6, r0
   20a90:	bcs	20b28 <main@@Base+0xac70>
   20a94:	cmp	sl, #9
   20a98:	blt	20cac <main@@Base+0xadf4>
   20a9c:	eor	r0, r4, lr
   20aa0:	eor	r3, r6, r7
   20aa4:	orrs	r0, r0, r3
   20aa8:	bne	20cac <main@@Base+0xadf4>
   20aac:	ldrb	r0, [r1, #8]
   20ab0:	mov	r3, r1
   20ab4:	cmp	r0, #46	; 0x2e
   20ab8:	addeq	r3, r3, #9
   20abc:	cmp	r3, r1
   20ac0:	beq	20cac <main@@Base+0xadf4>
   20ac4:	mov	r1, r3
   20ac8:	ldr	r0, [sp, #16]
   20acc:	ldr	r3, [sp, #12]
   20ad0:	sub	sp, fp, #28
   20ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20ad8:	b	24c78 <main@@Base+0xedc0>
   20adc:	cmp	sl, #6
   20ae0:	blt	20cac <main@@Base+0xadf4>
   20ae4:	and	r0, r4, #-16777216	; 0xff000000
   20ae8:	eor	r3, r6, r3
   20aec:	eor	r0, r0, #1912602624	; 0x72000000
   20af0:	orrs	r0, r0, r3
   20af4:	bne	20cac <main@@Base+0xadf4>
   20af8:	ldrb	r0, [r1, #5]
   20afc:	mov	r3, r1
   20b00:	cmp	r0, #46	; 0x2e
   20b04:	addeq	r3, r3, #6
   20b08:	cmp	r3, r1
   20b0c:	beq	20cac <main@@Base+0xadf4>
   20b10:	mov	r1, r3
   20b14:	ldr	r0, [sp, #16]
   20b18:	ldr	r3, [sp, #12]
   20b1c:	sub	sp, fp, #28
   20b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b24:	b	206e0 <main@@Base+0xa828>
   20b28:	movw	r0, #29817	; 0x7479
   20b2c:	movw	r3, #29797	; 0x7465
   20b30:	movt	r0, #28016	; 0x6d70
   20b34:	movt	r3, #28271	; 0x6e6f
   20b38:	eor	r0, r4, r0
   20b3c:	eor	r3, r6, r3
   20b40:	orrs	r0, r0, r3
   20b44:	beq	20b98 <main@@Base+0xace0>
   20b48:	movw	r3, #26463	; 0x675f
   20b4c:	eor	r0, r4, lr
   20b50:	movt	r3, #28261	; 0x6e65
   20b54:	eor	r3, r6, r3
   20b58:	orrs	r0, r0, r3
   20b5c:	bne	20cac <main@@Base+0xadf4>
   20b60:	cmp	sl, #9
   20b64:	blt	20cac <main@@Base+0xadf4>
   20b68:	ldrb	r0, [r1, #8]
   20b6c:	mov	r3, r1
   20b70:	cmp	r0, #46	; 0x2e
   20b74:	addeq	r3, r3, #9
   20b78:	cmp	r3, r1
   20b7c:	beq	20cac <main@@Base+0xadf4>
   20b80:	mov	r1, r3
   20b84:	ldr	r0, [sp, #16]
   20b88:	ldr	r3, [sp, #12]
   20b8c:	sub	sp, fp, #28
   20b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20b94:	b	24e6c <main@@Base+0xefb4>
   20b98:	add	ip, r1, #8
   20b9c:	sub	r5, r2, ip
   20ba0:	cmp	r5, #8
   20ba4:	mov	r0, r5
   20ba8:	movcs	r0, #8
   20bac:	sub	r3, r0, #1
   20bb0:	cmp	r3, #7
   20bb4:	bhi	20cac <main@@Base+0xadf4>
   20bb8:	add	r0, pc, #20
   20bbc:	mov	r8, #0
   20bc0:	mov	r4, #0
   20bc4:	mov	r7, #0
   20bc8:	ldr	r6, [r0, r3, lsl #2]
   20bcc:	mov	r3, #0
   20bd0:	add	pc, r0, r6
   20bd4:	andeq	r0, r0, r8, lsr r0
   20bd8:	andeq	r0, r0, r0, lsr r0
   20bdc:	andeq	r0, r0, r8, lsr #32
   20be0:	andeq	r0, r0, r0, lsr #32
   20be4:	andeq	r0, r0, r0, lsr #32
   20be8:	andeq	r0, r0, r0, lsr #32
   20bec:	andeq	r0, r0, r0, lsr #32
   20bf0:	andeq	r0, r0, r0, lsr #32
   20bf4:	ldrb	r3, [r1, #11]
   20bf8:	mov	r8, #0
   20bfc:	ldrb	r0, [r1, #10]
   20c00:	orr	r4, r3, r0, lsl #8
   20c04:	ldrb	r0, [r1, #9]
   20c08:	orr	r7, r4, r0, lsl #16
   20c0c:	cmp	r5, #5
   20c10:	blt	20cac <main@@Base+0xadf4>
   20c14:	ldrb	r0, [ip]
   20c18:	orr	r0, r7, r0, lsl #24
   20c1c:	eor	r0, r0, lr
   20c20:	orrs	r0, r8, r0
   20c24:	bne	20cac <main@@Base+0xadf4>
   20c28:	ldrb	r0, [r1, #12]
   20c2c:	mov	r5, ip
   20c30:	cmp	r0, #46	; 0x2e
   20c34:	addeq	r5, r1, #13
   20c38:	cmp	r5, ip
   20c3c:	beq	20cac <main@@Base+0xadf4>
   20c40:	sub	r0, r2, r5
   20c44:	cmp	r0, #8
   20c48:	movcs	r0, #8
   20c4c:	sub	r0, r0, #1
   20c50:	cmp	r0, #7
   20c54:	bhi	20ca8 <main@@Base+0xadf0>
   20c58:	ldrb	r0, [r5]
   20c5c:	cmp	r0, #120	; 0x78
   20c60:	bne	20ca8 <main@@Base+0xadf0>
   20c64:	ldr	r0, [sp, #8]
   20c68:	mov	r1, r5
   20c6c:	mov	r3, #1
   20c70:	str	r0, [sp]
   20c74:	ldr	r0, [sp, #16]
   20c78:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   20c7c:	cmp	r0, r5
   20c80:	mov	r1, r5
   20c84:	beq	20cac <main@@Base+0xadf4>
   20c88:	ldr	r2, [sp, #4]
   20c8c:	mov	r1, #0
   20c90:	str	r1, [r2]
   20c94:	str	r1, [r2, #4]
   20c98:	ldr	r2, [sp, #12]
   20c9c:	str	r1, [r2]
   20ca0:	mov	r1, r0
   20ca4:	b	20cac <main@@Base+0xadf4>
   20ca8:	mov	r1, r5
   20cac:	mov	r0, r1
   20cb0:	sub	sp, fp, #28
   20cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20cb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20cbc:	add	fp, sp, #28
   20cc0:	sub	sp, sp, #28
   20cc4:	mov	r8, r2
   20cc8:	sub	r2, r2, r1
   20ccc:	cmp	r2, #8
   20cd0:	movcs	r2, #8
   20cd4:	sub	r2, r2, #1
   20cd8:	cmp	r2, #7
   20cdc:	bhi	21b88 <main@@Base+0xbcd0>
   20ce0:	str	r0, [sp, #24]
   20ce4:	mov	r0, #0
   20ce8:	mov	ip, #0
   20cec:	mov	lr, #0
   20cf0:	mov	sl, #0
   20cf4:	mov	r6, #0
   20cf8:	mov	r5, #0
   20cfc:	ldr	r7, [fp, #12]
   20d00:	str	r7, [sp, #20]
   20d04:	ldr	r7, [fp, #8]
   20d08:	str	r7, [sp, #16]
   20d0c:	add	r4, pc, #12
   20d10:	mov	r7, #0
   20d14:	ldr	r9, [r4, r2, lsl #2]
   20d18:	mov	r2, #0
   20d1c:	add	pc, r4, r9
   20d20:	andeq	r0, r0, r4, rrx
   20d24:	andeq	r0, r0, ip, asr r0
   20d28:	andeq	r0, r0, r4, asr r0
   20d2c:	andeq	r0, r0, ip, asr #32
   20d30:	andeq	r0, r0, r0, asr #32
   20d34:	andeq	r0, r0, r4, lsr r0
   20d38:	andeq	r0, r0, r4, lsr #32
   20d3c:	andeq	r0, r0, r0, lsr #32
   20d40:	ldrb	ip, [r1, #7]
   20d44:	ldrb	r2, [r1, #6]
   20d48:	mov	lr, r0
   20d4c:	orr	r2, ip, r2, lsl #8
   20d50:	mov	r0, r2
   20d54:	ldrb	r2, [r1, #5]
   20d58:	mov	sl, lr
   20d5c:	orr	r0, r0, r2, lsl #16
   20d60:	ldrb	r2, [r1, #4]
   20d64:	mov	r6, sl
   20d68:	orr	r0, r0, r2, lsl #24
   20d6c:	ldrb	r2, [r1, #3]
   20d70:	orr	r7, r2, r6
   20d74:	ldrb	r2, [r1, #2]
   20d78:	orr	r5, r7, r2, lsl #8
   20d7c:	ldrb	r2, [r1, #1]
   20d80:	orr	r2, r5, r2, lsl #16
   20d84:	ldrb	r7, [r1]
   20d88:	movw	r6, #18273	; 0x4761
   20d8c:	movt	r6, #19833	; 0x4d79
   20d90:	orr	r2, r2, r7, lsl #24
   20d94:	movw	r7, #11844	; 0x2e44
   20d98:	movt	r7, #28005	; 0x6d65
   20d9c:	subs	r7, r7, r0
   20da0:	sbcs	r7, r6, r2
   20da4:	bcc	20f08 <main@@Base+0xb050>
   20da8:	movw	r7, #31022	; 0x792e
   20dac:	movt	r7, #24947	; 0x6173
   20db0:	eor	r0, r0, r7
   20db4:	movw	r7, #28276	; 0x6e74
   20db8:	movt	r7, #18017	; 0x4661
   20dbc:	eor	r2, r2, r7
   20dc0:	orrs	r0, r0, r2
   20dc4:	bne	21b88 <main@@Base+0xbcd0>
   20dc8:	add	lr, r1, #8
   20dcc:	sub	r0, r8, lr
   20dd0:	cmp	r0, #8
   20dd4:	movcs	r0, #8
   20dd8:	sub	r0, r0, #1
   20ddc:	cmp	r0, #7
   20de0:	bhi	21b88 <main@@Base+0xbcd0>
   20de4:	str	r3, [sp, #12]
   20de8:	add	r5, pc, #36	; 0x24
   20dec:	mov	sl, #0
   20df0:	mov	ip, #0
   20df4:	mov	r9, #0
   20df8:	mov	r6, #0
   20dfc:	mov	r7, #0
   20e00:	mov	r4, #0
   20e04:	mov	r3, #0
   20e08:	ldr	r2, [r5, r0, lsl #2]
   20e0c:	mov	r0, #0
   20e10:	add	pc, r5, r2
   20e14:	andeq	r0, r0, r4, rrx
   20e18:	andeq	r0, r0, ip, asr r0
   20e1c:	andeq	r0, r0, r4, asr r0
   20e20:	andeq	r0, r0, ip, asr #32
   20e24:	andeq	r0, r0, r0, asr #32
   20e28:	andeq	r0, r0, r4, lsr r0
   20e2c:	andeq	r0, r0, r4, lsr #32
   20e30:	andeq	r0, r0, r0, lsr #32
   20e34:	ldrb	ip, [r1, #15]
   20e38:	ldrb	r0, [r1, #14]
   20e3c:	mov	r9, sl
   20e40:	orr	r0, ip, r0, lsl #8
   20e44:	mov	sl, r0
   20e48:	ldrb	r0, [r1, #13]
   20e4c:	mov	r6, r9
   20e50:	orr	sl, sl, r0, lsl #16
   20e54:	ldrb	r0, [r1, #12]
   20e58:	mov	r7, r6
   20e5c:	orr	sl, sl, r0, lsl #24
   20e60:	ldrb	r0, [r1, #11]
   20e64:	orr	r4, r0, r7
   20e68:	ldrb	r0, [r1, #10]
   20e6c:	orr	r3, r4, r0, lsl #8
   20e70:	ldrb	r0, [r1, #9]
   20e74:	orr	r0, r3, r0, lsl #16
   20e78:	ldrb	r3, [lr]
   20e7c:	movw	r2, #29797	; 0x7465
   20e80:	movt	r2, #24931	; 0x6163
   20e84:	eor	r2, sl, r2
   20e88:	orr	r0, r0, r3, lsl #24
   20e8c:	movw	r3, #24946	; 0x6172
   20e90:	movt	r3, #17256	; 0x4368
   20e94:	eor	r0, r0, r3
   20e98:	orrs	r0, r2, r0
   20e9c:	bne	21b88 <main@@Base+0xbcd0>
   20ea0:	add	r0, r1, #16
   20ea4:	sub	r2, r8, r0
   20ea8:	cmp	r2, #8
   20eac:	mov	r3, r2
   20eb0:	movcs	r3, #8
   20eb4:	sub	r3, r3, #1
   20eb8:	cmp	r3, #7
   20ebc:	bhi	21b88 <main@@Base+0xbcd0>
   20ec0:	cmp	r2, #2
   20ec4:	blt	21b88 <main@@Base+0xbcd0>
   20ec8:	ldrb	r2, [r0]
   20ecc:	cmp	r2, #114	; 0x72
   20ed0:	bne	21b88 <main@@Base+0xbcd0>
   20ed4:	ldrb	r2, [r1, #17]
   20ed8:	ldr	r3, [sp, #12]
   20edc:	cmp	r2, #46	; 0x2e
   20ee0:	mov	r2, r0
   20ee4:	addeq	r2, r1, #18
   20ee8:	cmp	r2, r0
   20eec:	beq	21b88 <main@@Base+0xbcd0>
   20ef0:	ldr	r0, [sp, #24]
   20ef4:	mov	r1, r2
   20ef8:	mov	r2, r8
   20efc:	sub	sp, fp, #28
   20f00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20f04:	b	24fb8 <main@@Base+0xf100>
   20f08:	movw	r7, #11855	; 0x2e4f
   20f0c:	eor	r2, r2, r6
   20f10:	movt	r7, #28005	; 0x6d65
   20f14:	eor	r7, r0, r7
   20f18:	orrs	r7, r7, r2
   20f1c:	beq	210b8 <main@@Base+0xb200>
   20f20:	movw	r7, #11845	; 0x2e45
   20f24:	movt	r7, #28005	; 0x6d65
   20f28:	eor	r0, r0, r7
   20f2c:	orrs	r0, r0, r2
   20f30:	bne	21b88 <main@@Base+0xbcd0>
   20f34:	add	lr, r1, #8
   20f38:	sub	r0, r8, lr
   20f3c:	cmp	r0, #8
   20f40:	movcs	r0, #8
   20f44:	sub	r2, r0, #1
   20f48:	cmp	r2, #7
   20f4c:	bhi	21b88 <main@@Base+0xbcd0>
   20f50:	str	r3, [sp, #12]
   20f54:	add	r5, pc, #36	; 0x24
   20f58:	mov	r0, #0
   20f5c:	mov	ip, #0
   20f60:	mov	r9, #0
   20f64:	mov	r7, #0
   20f68:	mov	r6, #0
   20f6c:	mov	r4, #0
   20f70:	mov	r3, #0
   20f74:	ldr	sl, [r5, r2, lsl #2]
   20f78:	mov	r2, #0
   20f7c:	add	pc, r5, sl
   20f80:	andeq	r0, r0, r4, rrx
   20f84:	andeq	r0, r0, ip, asr r0
   20f88:	andeq	r0, r0, r4, asr r0
   20f8c:	andeq	r0, r0, ip, asr #32
   20f90:	andeq	r0, r0, r0, asr #32
   20f94:	andeq	r0, r0, r4, lsr r0
   20f98:	andeq	r0, r0, r4, lsr #32
   20f9c:	andeq	r0, r0, r0, lsr #32
   20fa0:	ldrb	ip, [r1, #15]
   20fa4:	ldrb	r2, [r1, #14]
   20fa8:	mov	r9, r0
   20fac:	orr	r2, ip, r2, lsl #8
   20fb0:	mov	r0, r2
   20fb4:	ldrb	r2, [r1, #13]
   20fb8:	mov	r7, r9
   20fbc:	orr	r0, r0, r2, lsl #16
   20fc0:	ldrb	r2, [r1, #12]
   20fc4:	mov	r6, r7
   20fc8:	orr	r0, r0, r2, lsl #24
   20fcc:	ldrb	r2, [r1, #11]
   20fd0:	orr	r4, r2, r6
   20fd4:	ldrb	r2, [r1, #10]
   20fd8:	orr	r3, r4, r2, lsl #8
   20fdc:	ldrb	r2, [r1, #9]
   20fe0:	orr	r2, r3, r2, lsl #16
   20fe4:	ldrb	r3, [lr]
   20fe8:	movw	r6, #11880	; 0x2e68
   20fec:	movt	r6, #27749	; 0x6c65
   20ff0:	subs	r7, r0, r6
   20ff4:	orr	r2, r2, r3, lsl #24
   20ff8:	movw	r3, #28016	; 0x6d70
   20ffc:	movt	r3, #30817	; 0x7861
   21000:	sbcs	r7, r2, r3
   21004:	bcs	21484 <main@@Base+0xb5cc>
   21008:	ldr	lr, [sp, #12]
   2100c:	subs	r7, r6, #37	; 0x25
   21010:	sbc	r5, r3, #0
   21014:	subs	r7, r0, r7
   21018:	sbcs	r7, r2, r5
   2101c:	bcs	215a0 <main@@Base+0xb6e8>
   21020:	subs	r7, r6, #39	; 0x27
   21024:	sbc	r3, r3, #0
   21028:	eor	r0, r0, r7
   2102c:	eor	r2, r2, r3
   21030:	orrs	r0, r0, r2
   21034:	bne	21b88 <main@@Base+0xbcd0>
   21038:	add	r0, r1, #16
   2103c:	sub	r6, r8, r0
   21040:	cmp	r6, #8
   21044:	mov	r2, r6
   21048:	movcs	r2, #8
   2104c:	sub	r3, r2, #2
   21050:	cmp	r3, #7
   21054:	bcs	21a6c <main@@Base+0xbbb4>
   21058:	ldrb	r2, [r1, #17]
   2105c:	mov	r3, #0
   21060:	lsl	r7, r2, #16
   21064:	cmp	r6, #3
   21068:	blt	21b88 <main@@Base+0xbcd0>
   2106c:	ldrb	r2, [r0]
   21070:	orr	r2, r7, r2, lsl #24
   21074:	eor	r2, r2, #7929856	; 0x790000
   21078:	eor	r2, r2, #1845493760	; 0x6e000000
   2107c:	orrs	r2, r3, r2
   21080:	bne	21b88 <main@@Base+0xbcd0>
   21084:	ldrb	r2, [r1, #18]
   21088:	cmp	r2, #46	; 0x2e
   2108c:	mov	r2, r0
   21090:	addeq	r2, r1, #19
   21094:	cmp	r2, r0
   21098:	beq	21b88 <main@@Base+0xbcd0>
   2109c:	ldr	r0, [sp, #24]
   210a0:	mov	r1, r2
   210a4:	mov	r2, r8
   210a8:	mov	r3, lr
   210ac:	sub	sp, fp, #28
   210b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   210b4:	b	237dc <main@@Base+0xd924>
   210b8:	add	lr, r1, #8
   210bc:	sub	r0, r8, lr
   210c0:	cmp	r0, #8
   210c4:	movcs	r0, #8
   210c8:	sub	r0, r0, #1
   210cc:	cmp	r0, #7
   210d0:	bhi	21b88 <main@@Base+0xbcd0>
   210d4:	str	r3, [sp, #12]
   210d8:	add	r5, pc, #36	; 0x24
   210dc:	mov	sl, #0
   210e0:	mov	ip, #0
   210e4:	mov	r9, #0
   210e8:	mov	r7, #0
   210ec:	mov	r6, #0
   210f0:	mov	r4, #0
   210f4:	mov	r3, #0
   210f8:	ldr	r2, [r5, r0, lsl #2]
   210fc:	mov	r0, #0
   21100:	add	pc, r5, r2
   21104:	andeq	r0, r0, r4, rrx
   21108:	andeq	r0, r0, ip, asr r0
   2110c:	andeq	r0, r0, r4, asr r0
   21110:	andeq	r0, r0, ip, asr #32
   21114:	andeq	r0, r0, r0, asr #32
   21118:	andeq	r0, r0, r4, lsr r0
   2111c:	andeq	r0, r0, r4, lsr #32
   21120:	andeq	r0, r0, r0, lsr #32
   21124:	ldrb	ip, [r1, #15]
   21128:	ldrb	r0, [r1, #14]
   2112c:	mov	r9, sl
   21130:	orr	r0, ip, r0, lsl #8
   21134:	mov	sl, r0
   21138:	ldrb	r0, [r1, #13]
   2113c:	mov	r7, r9
   21140:	orr	sl, sl, r0, lsl #16
   21144:	ldrb	r0, [r1, #12]
   21148:	mov	r6, r7
   2114c:	orr	sl, sl, r0, lsl #24
   21150:	ldrb	r0, [r1, #11]
   21154:	orr	r4, r0, r6
   21158:	ldrb	r0, [r1, #10]
   2115c:	orr	r3, r4, r0, lsl #8
   21160:	ldrb	r0, [r1, #9]
   21164:	orr	r0, r3, r0, lsl #16
   21168:	ldrb	r3, [lr]
   2116c:	movw	r2, #28005	; 0x6d65
   21170:	movt	r2, #20065	; 0x4e61
   21174:	eor	r2, sl, r2
   21178:	orr	r0, r0, r3, lsl #24
   2117c:	movw	r3, #25970	; 0x6572
   21180:	movt	r3, #29800	; 0x7468
   21184:	eor	r0, r0, r3
   21188:	orrs	r0, r2, r0
   2118c:	bne	21b88 <main@@Base+0xbcd0>
   21190:	add	lr, r1, #16
   21194:	sub	r0, r8, lr
   21198:	cmp	r0, #8
   2119c:	movcs	r0, #8
   211a0:	sub	r0, r0, #1
   211a4:	cmp	r0, #7
   211a8:	bhi	21b88 <main@@Base+0xbcd0>
   211ac:	add	r5, pc, #36	; 0x24
   211b0:	mov	sl, #0
   211b4:	mov	ip, #0
   211b8:	mov	r9, #0
   211bc:	mov	r7, #0
   211c0:	mov	r6, #0
   211c4:	mov	r4, #0
   211c8:	mov	r3, #0
   211cc:	ldr	r2, [r5, r0, lsl #2]
   211d0:	mov	r0, #0
   211d4:	add	pc, r5, r2
   211d8:	andeq	r0, r0, r4, rrx
   211dc:	andeq	r0, r0, ip, asr r0
   211e0:	andeq	r0, r0, r4, asr r0
   211e4:	andeq	r0, r0, ip, asr #32
   211e8:	andeq	r0, r0, r0, asr #32
   211ec:	andeq	r0, r0, r4, lsr r0
   211f0:	andeq	r0, r0, r4, lsr #32
   211f4:	andeq	r0, r0, r0, lsr #32
   211f8:	ldrb	ip, [r1, #23]
   211fc:	ldrb	r0, [r1, #22]
   21200:	mov	r9, sl
   21204:	orr	r0, ip, r0, lsl #8
   21208:	mov	sl, r0
   2120c:	ldrb	r0, [r1, #21]
   21210:	mov	r7, r9
   21214:	orr	sl, sl, r0, lsl #16
   21218:	ldrb	r0, [r1, #20]
   2121c:	mov	r6, r7
   21220:	orr	sl, sl, r0, lsl #24
   21224:	ldrb	r0, [r1, #19]
   21228:	orr	r4, r0, r6
   2122c:	ldrb	r0, [r1, #18]
   21230:	orr	r3, r4, r0, lsl #8
   21234:	ldrb	r0, [r1, #17]
   21238:	orr	r0, r3, r0, lsl #16
   2123c:	ldrb	r3, [lr]
   21240:	movw	r2, #18034	; 0x4672
   21244:	movt	r2, #25902	; 0x652e
   21248:	eor	r2, sl, r2
   2124c:	orr	r0, r0, r3, lsl #24
   21250:	movw	r3, #24931	; 0x6163
   21254:	movt	r3, #21360	; 0x5370
   21258:	eor	r0, r0, r3
   2125c:	orrs	r0, r2, r0
   21260:	bne	21b88 <main@@Base+0xbcd0>
   21264:	add	lr, r1, #24
   21268:	sub	r0, r8, lr
   2126c:	cmp	r0, #8
   21270:	movcs	r0, #8
   21274:	sub	r0, r0, #1
   21278:	cmp	r0, #7
   2127c:	bhi	21b88 <main@@Base+0xbcd0>
   21280:	add	r5, pc, #36	; 0x24
   21284:	mov	sl, #0
   21288:	mov	ip, #0
   2128c:	mov	r9, #0
   21290:	mov	r7, #0
   21294:	mov	r6, #0
   21298:	mov	r4, #0
   2129c:	mov	r3, #0
   212a0:	ldr	r2, [r5, r0, lsl #2]
   212a4:	mov	r0, #0
   212a8:	add	pc, r5, r2
   212ac:	andeq	r0, r0, r4, rrx
   212b0:	andeq	r0, r0, ip, asr r0
   212b4:	andeq	r0, r0, r4, asr r0
   212b8:	andeq	r0, r0, ip, asr #32
   212bc:	andeq	r0, r0, r0, asr #32
   212c0:	andeq	r0, r0, r4, lsr r0
   212c4:	andeq	r0, r0, r4, lsr #32
   212c8:	andeq	r0, r0, r0, lsr #32
   212cc:	ldrb	ip, [r1, #31]
   212d0:	ldrb	r0, [r1, #30]
   212d4:	mov	r9, sl
   212d8:	orr	r0, ip, r0, lsl #8
   212dc:	mov	sl, r0
   212e0:	ldrb	r0, [r1, #29]
   212e4:	mov	r7, r9
   212e8:	orr	sl, sl, r0, lsl #16
   212ec:	ldrb	r0, [r1, #28]
   212f0:	mov	r6, r7
   212f4:	orr	sl, sl, r0, lsl #24
   212f8:	ldrb	r0, [r1, #27]
   212fc:	orr	r4, r0, r6
   21300:	ldrb	r0, [r1, #26]
   21304:	orr	r3, r4, r0, lsl #8
   21308:	ldrb	r0, [r1, #25]
   2130c:	orr	r0, r3, r0, lsl #16
   21310:	ldrb	r3, [lr]
   21314:	movw	r2, #30052	; 0x7564
   21318:	movt	r2, #25452	; 0x636c
   2131c:	eor	r2, sl, r2
   21320:	orr	r0, r0, r3, lsl #24
   21324:	movw	r3, #18798	; 0x496e
   21328:	movt	r3, #28525	; 0x6f6d
   2132c:	eor	r0, r0, r3
   21330:	orrs	r0, r2, r0
   21334:	bne	21b88 <main@@Base+0xbcd0>
   21338:	add	r0, r1, #32
   2133c:	sub	r2, r8, r0
   21340:	cmp	r2, #8
   21344:	mov	r3, r2
   21348:	movcs	r3, #8
   2134c:	sub	r3, r3, #1
   21350:	cmp	r3, #7
   21354:	bhi	21b88 <main@@Base+0xbcd0>
   21358:	cmp	r2, #2
   2135c:	blt	21b88 <main@@Base+0xbcd0>
   21360:	ldrb	r2, [r0]
   21364:	cmp	r2, #101	; 0x65
   21368:	bne	21b88 <main@@Base+0xbcd0>
   2136c:	ldrb	r2, [r1, #33]	; 0x21
   21370:	ldr	r9, [sp, #12]
   21374:	mov	r7, r0
   21378:	cmp	r2, #46	; 0x2e
   2137c:	addeq	r7, r1, #34	; 0x22
   21380:	cmp	r7, r0
   21384:	beq	21b88 <main@@Base+0xbcd0>
   21388:	sub	r0, r8, r7
   2138c:	cmp	r0, #8
   21390:	movcs	r0, #8
   21394:	sub	r0, r0, #1
   21398:	cmp	r0, #7
   2139c:	bhi	21b84 <main@@Base+0xbccc>
   213a0:	add	r6, pc, #36	; 0x24
   213a4:	mov	sl, #0
   213a8:	mov	ip, #0
   213ac:	mov	lr, #0
   213b0:	mov	r1, #0
   213b4:	mov	r2, #0
   213b8:	mov	r3, #0
   213bc:	mov	r5, #0
   213c0:	mov	r4, #0
   213c4:	ldr	r0, [r6, r0, lsl #2]
   213c8:	add	pc, r6, r0
   213cc:	andeq	r0, r0, r4, rrx
   213d0:	andeq	r0, r0, ip, asr r0
   213d4:	andeq	r0, r0, r4, asr r0
   213d8:	andeq	r0, r0, ip, asr #32
   213dc:	andeq	r0, r0, r0, asr #32
   213e0:	andeq	r0, r0, r4, lsr r0
   213e4:	andeq	r0, r0, r4, lsr #32
   213e8:	andeq	r0, r0, r0, lsr #32
   213ec:	ldrb	ip, [r7, #7]
   213f0:	ldrb	r0, [r7, #6]
   213f4:	mov	lr, sl
   213f8:	orr	r0, ip, r0, lsl #8
   213fc:	mov	sl, r0
   21400:	ldrb	r0, [r7, #5]
   21404:	mov	r1, lr
   21408:	orr	sl, sl, r0, lsl #16
   2140c:	ldrb	r0, [r7, #4]
   21410:	mov	r2, r1
   21414:	orr	sl, sl, r0, lsl #24
   21418:	ldrb	r0, [r7, #3]
   2141c:	orr	r3, r0, r2
   21420:	ldrb	r0, [r7, #2]
   21424:	orr	r5, r3, r0, lsl #8
   21428:	ldrb	r0, [r7, #1]
   2142c:	orr	r4, r5, r0, lsl #16
   21430:	ldrb	r0, [r7]
   21434:	movw	r1, #28416	; 0x6f00
   21438:	movt	r1, #18031	; 0x466f
   2143c:	orr	r6, r4, r0, lsl #24
   21440:	ldr	r4, [sp, #24]
   21444:	bic	r0, r6, #255	; 0xff
   21448:	teq	r0, r1
   2144c:	bne	21a94 <main@@Base+0xbbdc>
   21450:	ldr	r0, [sp, #20]
   21454:	mov	r1, r7
   21458:	mov	r2, r8
   2145c:	mov	r3, #3
   21460:	str	r0, [sp]
   21464:	mov	r0, r4
   21468:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   2146c:	cmp	r0, r7
   21470:	beq	21a94 <main@@Base+0xbbdc>
   21474:	mov	r1, r0
   21478:	mov	r3, #0
   2147c:	mov	r2, #17
   21480:	b	21b28 <main@@Base+0xbc70>
   21484:	eor	r5, r0, r6
   21488:	eor	r7, r2, r3
   2148c:	orrs	r5, r5, r7
   21490:	bne	21698 <main@@Base+0xb7e0>
   21494:	add	ip, r1, #16
   21498:	sub	r2, r8, ip
   2149c:	cmp	r2, #8
   214a0:	mov	r0, r2
   214a4:	movcs	r0, #8
   214a8:	sub	r0, r0, #1
   214ac:	cmp	r0, #7
   214b0:	bhi	21b88 <main@@Base+0xbcd0>
   214b4:	add	r5, pc, #32
   214b8:	mov	r9, #0
   214bc:	mov	lr, #0
   214c0:	mov	sl, #0
   214c4:	mov	r3, #0
   214c8:	mov	r4, #0
   214cc:	mov	r7, #0
   214d0:	ldr	r6, [r5, r0, lsl #2]
   214d4:	mov	r0, #0
   214d8:	add	pc, r5, r6
   214dc:	andeq	r0, r0, ip, asr r0
   214e0:	andeq	r0, r0, r4, asr r0
   214e4:	andeq	r0, r0, ip, asr #32
   214e8:	andeq	r0, r0, r4, asr #32
   214ec:	andeq	r0, r0, r8, lsr r0
   214f0:	andeq	r0, r0, r8, lsr #32
   214f4:	andeq	r0, r0, r0, lsr #32
   214f8:	andeq	r0, r0, r0, lsr #32
   214fc:	ldrb	r0, [r1, #22]
   21500:	lsl	lr, r0, #8
   21504:	ldrb	r0, [r1, #21]
   21508:	mov	sl, r9
   2150c:	orr	r0, lr, r0, lsl #16
   21510:	mov	r9, r0
   21514:	ldrb	r0, [r1, #20]
   21518:	mov	r3, sl
   2151c:	orr	r9, r9, r0, lsl #24
   21520:	ldrb	r0, [r1, #19]
   21524:	orr	r4, r0, r3
   21528:	ldrb	r0, [r1, #18]
   2152c:	orr	r7, r4, r0, lsl #8
   21530:	ldrb	r0, [r1, #17]
   21534:	orr	r0, r7, r0, lsl #16
   21538:	cmp	r2, #8
   2153c:	blt	21b88 <main@@Base+0xbcd0>
   21540:	ldrb	r2, [ip]
   21544:	movw	r3, #27904	; 0x6d00
   21548:	movt	r3, #28277	; 0x6e75
   2154c:	eor	r3, r9, r3
   21550:	orr	r0, r0, r2, lsl #24
   21554:	movw	r2, #24421	; 0x5f65
   21558:	movt	r2, #25959	; 0x6567
   2155c:	add	r2, r2, #1114112	; 0x110000
   21560:	eor	r0, r0, r2
   21564:	orrs	r0, r3, r0
   21568:	bne	21b88 <main@@Base+0xbcd0>
   2156c:	ldrb	r0, [r1, #23]
   21570:	ldr	r3, [sp, #12]
   21574:	mov	r2, ip
   21578:	cmp	r0, #46	; 0x2e
   2157c:	addeq	r2, r1, #24
   21580:	cmp	r2, ip
   21584:	beq	21b88 <main@@Base+0xbcd0>
   21588:	ldr	r0, [sp, #24]
   2158c:	mov	r1, r2
   21590:	mov	r2, r8
   21594:	sub	sp, fp, #28
   21598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2159c:	b	24ac8 <main@@Base+0xec10>
   215a0:	movw	r7, #11846	; 0x2e46
   215a4:	eor	r2, r2, r3
   215a8:	movt	r7, #27749	; 0x6c65
   215ac:	eor	r7, r0, r7
   215b0:	orrs	r3, r7, r2
   215b4:	beq	218f8 <main@@Base+0xba40>
   215b8:	movw	r3, #11843	; 0x2e43
   215bc:	movt	r3, #27749	; 0x6c65
   215c0:	eor	r0, r0, r3
   215c4:	orrs	r0, r0, r2
   215c8:	bne	21b88 <main@@Base+0xbcd0>
   215cc:	add	r0, r1, #16
   215d0:	sub	r2, r8, r0
   215d4:	cmp	r2, #8
   215d8:	mov	r3, r2
   215dc:	movcs	r3, #8
   215e0:	sub	r7, r3, #1
   215e4:	cmp	r7, #7
   215e8:	bhi	21b88 <main@@Base+0xbcd0>
   215ec:	add	r4, pc, #20
   215f0:	mov	ip, #0
   215f4:	mov	r5, #0
   215f8:	mov	r6, #0
   215fc:	ldr	r3, [r4, r7, lsl #2]
   21600:	mov	r7, #0
   21604:	add	pc, r4, r3
   21608:	andeq	r0, r0, r8, lsr r0
   2160c:	andeq	r0, r0, r0, lsr r0
   21610:	andeq	r0, r0, r8, lsr #32
   21614:	andeq	r0, r0, r0, lsr #32
   21618:	andeq	r0, r0, r0, lsr #32
   2161c:	andeq	r0, r0, r0, lsr #32
   21620:	andeq	r0, r0, r0, lsr #32
   21624:	andeq	r0, r0, r0, lsr #32
   21628:	ldrb	r7, [r1, #19]
   2162c:	mov	ip, #0
   21630:	ldrb	r3, [r1, #18]
   21634:	orr	r5, r7, r3, lsl #8
   21638:	ldrb	r3, [r1, #17]
   2163c:	orr	r6, r5, r3, lsl #16
   21640:	cmp	r2, #5
   21644:	blt	21b88 <main@@Base+0xbcd0>
   21648:	ldrb	r2, [r0]
   2164c:	movw	r3, #28530	; 0x6f72
   21650:	movt	r3, #28524	; 0x6f6c
   21654:	orr	r2, r6, r2, lsl #24
   21658:	eor	r2, r2, r3
   2165c:	orrs	r2, ip, r2
   21660:	bne	21b88 <main@@Base+0xbcd0>
   21664:	ldrb	r2, [r1, #20]
   21668:	cmp	r2, #46	; 0x2e
   2166c:	mov	r2, r0
   21670:	addeq	r2, r1, #21
   21674:	cmp	r2, r0
   21678:	beq	21b88 <main@@Base+0xbcd0>
   2167c:	ldr	r0, [sp, #24]
   21680:	mov	r1, r2
   21684:	mov	r2, r8
   21688:	mov	r3, lr
   2168c:	sub	sp, fp, #28
   21690:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21694:	b	206e0 <main@@Base+0xa828>
   21698:	add	r5, r6, #6
   2169c:	subs	r4, r0, r5
   216a0:	sbcs	r2, r2, r3
   216a4:	bcs	217c8 <main@@Base+0xb910>
   216a8:	add	r2, r6, #1
   216ac:	eor	r0, r0, r2
   216b0:	orrs	r0, r0, r7
   216b4:	bne	21b88 <main@@Base+0xbcd0>
   216b8:	add	ip, r1, #16
   216bc:	sub	r2, r8, ip
   216c0:	cmp	r2, #8
   216c4:	mov	r0, r2
   216c8:	movcs	r0, #8
   216cc:	sub	r0, r0, #1
   216d0:	cmp	r0, #7
   216d4:	bhi	21b88 <main@@Base+0xbcd0>
   216d8:	add	r7, pc, #32
   216dc:	mov	lr, #0
   216e0:	mov	r9, #0
   216e4:	mov	sl, #0
   216e8:	mov	r3, #0
   216ec:	mov	r5, #0
   216f0:	mov	r4, #0
   216f4:	ldr	r6, [r7, r0, lsl #2]
   216f8:	mov	r0, #0
   216fc:	add	pc, r7, r6
   21700:	andeq	r0, r0, ip, asr r0
   21704:	andeq	r0, r0, r4, asr r0
   21708:	andeq	r0, r0, ip, asr #32
   2170c:	andeq	r0, r0, r4, asr #32
   21710:	andeq	r0, r0, r8, lsr r0
   21714:	andeq	r0, r0, r8, lsr #32
   21718:	andeq	r0, r0, r0, lsr #32
   2171c:	andeq	r0, r0, r0, lsr #32
   21720:	ldrb	r0, [r1, #22]
   21724:	lsl	r9, r0, #8
   21728:	ldrb	r0, [r1, #21]
   2172c:	mov	sl, lr
   21730:	orr	r0, r9, r0, lsl #16
   21734:	mov	lr, r0
   21738:	ldrb	r0, [r1, #20]
   2173c:	mov	r3, sl
   21740:	orr	lr, lr, r0, lsl #24
   21744:	ldrb	r0, [r1, #19]
   21748:	orr	r0, r0, r3
   2174c:	ldrb	r3, [r1, #18]
   21750:	orr	r5, r0, r3, lsl #8
   21754:	ldrb	r0, [r1, #17]
   21758:	orr	r4, r5, r0, lsl #16
   2175c:	cmp	r2, #8
   21760:	blt	21b88 <main@@Base+0xbcd0>
   21764:	ldrb	r2, [ip]
   21768:	movw	r0, #24421	; 0x5f65
   2176c:	movw	r3, #27904	; 0x6d00
   21770:	movt	r0, #25959	; 0x6567
   21774:	movt	r3, #28277	; 0x6e75
   21778:	add	r0, r0, #851968	; 0xd0000
   2177c:	eor	r3, lr, r3
   21780:	orr	r2, r4, r2, lsl #24
   21784:	add	r0, r0, #150994944	; 0x9000000
   21788:	eor	r0, r2, r0
   2178c:	orrs	r0, r3, r0
   21790:	bne	21b88 <main@@Base+0xbcd0>
   21794:	ldrb	r0, [r1, #23]
   21798:	ldr	r3, [sp, #12]
   2179c:	mov	r2, ip
   217a0:	cmp	r0, #46	; 0x2e
   217a4:	addeq	r2, r1, #24
   217a8:	cmp	r2, ip
   217ac:	beq	21b88 <main@@Base+0xbcd0>
   217b0:	ldr	r0, [sp, #24]
   217b4:	mov	r1, r2
   217b8:	mov	r2, r8
   217bc:	sub	sp, fp, #28
   217c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217c4:	b	24c78 <main@@Base+0xedc0>
   217c8:	eor	r0, r0, r5
   217cc:	orrs	r0, r0, r7
   217d0:	bne	21b88 <main@@Base+0xbcd0>
   217d4:	add	lr, r1, #16
   217d8:	sub	r2, r8, lr
   217dc:	cmp	r2, #8
   217e0:	mov	r0, r2
   217e4:	movcs	r0, #8
   217e8:	sub	r0, r0, #1
   217ec:	cmp	r0, #7
   217f0:	bhi	21b88 <main@@Base+0xbcd0>
   217f4:	add	r5, pc, #40	; 0x28
   217f8:	mov	sl, #0
   217fc:	mov	r9, #0
   21800:	mov	r7, #0
   21804:	mov	r6, #0
   21808:	mov	r4, #0
   2180c:	mov	ip, #0
   21810:	ldr	r3, [r5, r0, lsl #2]
   21814:	mov	r0, #0
   21818:	str	r0, [sp, #8]
   2181c:	mov	r0, #0
   21820:	add	pc, r5, r3
   21824:	andeq	r0, r0, ip, rrx
   21828:	andeq	r0, r0, r4, rrx
   2182c:	andeq	r0, r0, ip, asr r0
   21830:	andeq	r0, r0, r4, asr r0
   21834:	andeq	r0, r0, r8, asr #32
   21838:	andeq	r0, r0, ip, lsr r0
   2183c:	andeq	r0, r0, r8, lsr #32
   21840:	andeq	r0, r0, r0, lsr #32
   21844:	ldrb	r0, [r1, #23]
   21848:	str	r0, [sp, #8]
   2184c:	ldrb	r0, [r1, #22]
   21850:	ldr	r3, [sp, #8]
   21854:	mov	r9, sl
   21858:	orr	r0, r3, r0, lsl #8
   2185c:	mov	sl, r0
   21860:	ldrb	r0, [r1, #21]
   21864:	mov	r7, r9
   21868:	orr	sl, sl, r0, lsl #16
   2186c:	ldrb	r0, [r1, #20]
   21870:	mov	r6, r7
   21874:	orr	sl, sl, r0, lsl #24
   21878:	ldrb	r0, [r1, #19]
   2187c:	orr	r4, r0, r6
   21880:	ldrb	r0, [r1, #18]
   21884:	orr	r0, r4, r0, lsl #8
   21888:	ldrb	r3, [r1, #17]
   2188c:	orr	ip, r0, r3, lsl #16
   21890:	ldrb	r0, [lr]
   21894:	cmp	r2, #8
   21898:	orr	r6, ip, r0, lsl #24
   2189c:	movw	ip, #27904	; 0x6d00
   218a0:	movt	ip, #28277	; 0x6e75
   218a4:	blt	21978 <main@@Base+0xbac0>
   218a8:	movw	r2, #24421	; 0x5f65
   218ac:	bic	r0, sl, #255	; 0xff
   218b0:	movt	r2, #25959	; 0x6567
   218b4:	eor	r0, r0, ip
   218b8:	eor	r2, r6, r2
   218bc:	orrs	r0, r0, r2
   218c0:	bne	21978 <main@@Base+0xbac0>
   218c4:	ldrb	r0, [r1, #23]
   218c8:	mov	r2, lr
   218cc:	cmp	r0, #46	; 0x2e
   218d0:	addeq	r2, r1, #24
   218d4:	cmp	r2, lr
   218d8:	beq	21978 <main@@Base+0xbac0>
   218dc:	ldr	r0, [sp, #24]
   218e0:	ldr	r3, [sp, #12]
   218e4:	mov	r1, r2
   218e8:	mov	r2, r8
   218ec:	sub	sp, fp, #28
   218f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   218f4:	b	24e6c <main@@Base+0xefb4>
   218f8:	add	r0, r1, #16
   218fc:	sub	r6, r8, r0
   21900:	cmp	r6, #8
   21904:	mov	r2, r6
   21908:	movcs	r2, #8
   2190c:	sub	r3, r2, #2
   21910:	cmp	r3, #7
   21914:	bcs	21a80 <main@@Base+0xbbc8>
   21918:	ldrb	r2, [r1, #17]
   2191c:	mov	r3, #0
   21920:	lsl	r7, r2, #16
   21924:	cmp	r6, #3
   21928:	blt	21b88 <main@@Base+0xbcd0>
   2192c:	ldrb	r2, [r0]
   21930:	orr	r2, r7, r2, lsl #24
   21934:	eor	r2, r2, #7274496	; 0x6f0000
   21938:	eor	r2, r2, #1862270976	; 0x6f000000
   2193c:	orrs	r2, r3, r2
   21940:	bne	21b88 <main@@Base+0xbcd0>
   21944:	ldrb	r2, [r1, #18]
   21948:	cmp	r2, #46	; 0x2e
   2194c:	mov	r2, r0
   21950:	addeq	r2, r1, #19
   21954:	cmp	r2, r0
   21958:	beq	21b88 <main@@Base+0xbcd0>
   2195c:	ldr	r0, [sp, #24]
   21960:	mov	r1, r2
   21964:	mov	r2, r8
   21968:	mov	r3, lr
   2196c:	sub	sp, fp, #28
   21970:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21974:	b	24860 <main@@Base+0xe9a8>
   21978:	movw	r0, #31077	; 0x7965
   2197c:	movw	r2, #25965	; 0x656d
   21980:	movt	r0, #28788	; 0x7074
   21984:	movt	r2, #28532	; 0x6f74
   21988:	eor	r0, sl, r0
   2198c:	eor	r2, r6, r2
   21990:	orrs	r0, r0, r2
   21994:	bne	21b88 <main@@Base+0xbcd0>
   21998:	add	r0, r1, #24
   2199c:	sub	r6, r8, r0
   219a0:	cmp	r6, #8
   219a4:	mov	r2, r6
   219a8:	movcs	r2, #8
   219ac:	sub	r3, r2, #3
   219b0:	cmp	r3, #6
   219b4:	bcs	21b3c <main@@Base+0xbc84>
   219b8:	ldrb	r2, [r1, #26]
   219bc:	ldr	r4, [sp, #12]
   219c0:	mov	r3, #0
   219c4:	lsl	r2, r2, #8
   219c8:	ldrb	r7, [r1, #25]
   219cc:	orr	r7, r2, r7, lsl #16
   219d0:	cmp	r6, #4
   219d4:	blt	21b88 <main@@Base+0xbcd0>
   219d8:	ldrb	r2, [r0]
   219dc:	orr	r2, r7, r2, lsl #24
   219e0:	eor	r2, r2, ip
   219e4:	orrs	r2, r3, r2
   219e8:	bne	21b88 <main@@Base+0xbcd0>
   219ec:	ldrb	r2, [r1, #27]
   219f0:	mov	r6, r0
   219f4:	cmp	r2, #46	; 0x2e
   219f8:	addeq	r6, r1, #28
   219fc:	cmp	r6, r0
   21a00:	beq	21b88 <main@@Base+0xbcd0>
   21a04:	sub	r0, r8, r6
   21a08:	cmp	r0, #8
   21a0c:	movcs	r0, #8
   21a10:	sub	r0, r0, #1
   21a14:	cmp	r0, #7
   21a18:	bhi	21b5c <main@@Base+0xbca4>
   21a1c:	ldrb	r0, [r6]
   21a20:	cmp	r0, #120	; 0x78
   21a24:	bne	21b5c <main@@Base+0xbca4>
   21a28:	ldr	r0, [sp, #20]
   21a2c:	mov	r1, r6
   21a30:	mov	r2, r8
   21a34:	mov	r3, #1
   21a38:	str	r0, [sp]
   21a3c:	ldr	r0, [sp, #24]
   21a40:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   21a44:	cmp	r0, r6
   21a48:	mov	r1, r6
   21a4c:	beq	21b88 <main@@Base+0xbcd0>
   21a50:	ldr	r2, [sp, #16]
   21a54:	mov	r1, #0
   21a58:	str	r1, [r2]
   21a5c:	str	r1, [r2, #4]
   21a60:	str	r1, [r4]
   21a64:	mov	r1, r0
   21a68:	b	21b88 <main@@Base+0xbcd0>
   21a6c:	mov	r3, #0
   21a70:	cmp	r2, #1
   21a74:	mov	r7, #0
   21a78:	beq	21064 <main@@Base+0xb1ac>
   21a7c:	b	21b88 <main@@Base+0xbcd0>
   21a80:	mov	r3, #0
   21a84:	cmp	r2, #1
   21a88:	mov	r7, #0
   21a8c:	beq	21924 <main@@Base+0xba6c>
   21a90:	b	21b88 <main@@Base+0xbcd0>
   21a94:	movw	r0, #25942	; 0x6556
   21a98:	movw	r1, #25452	; 0x636c
   21a9c:	movt	r0, #30052	; 0x7564
   21aa0:	movt	r1, #18798	; 0x496e
   21aa4:	eor	r0, sl, r0
   21aa8:	eor	r1, r6, r1
   21aac:	orrs	r0, r0, r1
   21ab0:	bne	21b84 <main@@Base+0xbccc>
   21ab4:	add	r6, r7, #8
   21ab8:	sub	r1, r8, r6
   21abc:	cmp	r1, #8
   21ac0:	movcs	r1, #8
   21ac4:	sub	r0, r1, #2
   21ac8:	cmp	r0, #7
   21acc:	bcs	21b74 <main@@Base+0xbcbc>
   21ad0:	ldrb	r0, [r7, #9]
   21ad4:	lsl	r1, r0, #16
   21ad8:	mov	r0, #0
   21adc:	ldrb	r2, [r6]
   21ae0:	orr	r1, r1, r2, lsl #24
   21ae4:	eor	r1, r1, #23855104	; 0x16c0000
   21ae8:	eor	r1, r1, #1610612736	; 0x60000000
   21aec:	orrs	r0, r0, r1
   21af0:	bne	21b84 <main@@Base+0xbccc>
   21af4:	ldr	r0, [sp, #20]
   21af8:	mov	r1, r6
   21afc:	mov	r2, r8
   21b00:	mov	r3, #2
   21b04:	str	r0, [sp]
   21b08:	mov	r0, r4
   21b0c:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   21b10:	cmp	r0, r6
   21b14:	mov	r1, r7
   21b18:	beq	21b88 <main@@Base+0xbcd0>
   21b1c:	mov	r2, #0
   21b20:	mov	r3, #0
   21b24:	mov	r1, r0
   21b28:	ldr	r0, [sp, #16]
   21b2c:	strd	r2, [r0]
   21b30:	mov	r0, #0
   21b34:	str	r0, [r9]
   21b38:	b	21b88 <main@@Base+0xbcd0>
   21b3c:	ldr	r4, [sp, #12]
   21b40:	mov	r3, #0
   21b44:	cmp	r2, #1
   21b48:	beq	21b64 <main@@Base+0xbcac>
   21b4c:	cmp	r2, #2
   21b50:	mov	r2, #0
   21b54:	beq	219c8 <main@@Base+0xbb10>
   21b58:	b	21b88 <main@@Base+0xbcd0>
   21b5c:	mov	r1, r6
   21b60:	b	21b88 <main@@Base+0xbcd0>
   21b64:	mov	r7, #0
   21b68:	cmp	r6, #4
   21b6c:	bge	219d8 <main@@Base+0xbb20>
   21b70:	b	21b88 <main@@Base+0xbcd0>
   21b74:	cmp	r1, #1
   21b78:	mov	r0, #0
   21b7c:	mov	r1, #0
   21b80:	beq	21adc <main@@Base+0xbc24>
   21b84:	mov	r1, r7
   21b88:	mov	r0, r1
   21b8c:	sub	sp, fp, #28
   21b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21b98:	add	fp, sp, #28
   21b9c:	sub	sp, sp, #44	; 0x2c
   21ba0:	mov	r6, r2
   21ba4:	ldr	r2, [fp, #8]
   21ba8:	mov	r5, r0
   21bac:	mov	r0, #0
   21bb0:	mov	sl, r3
   21bb4:	cmp	r1, r6
   21bb8:	strb	r0, [r2]
   21bbc:	beq	21be8 <main@@Base+0xbd30>
   21bc0:	ldrb	r0, [r1]
   21bc4:	cmp	r0, #34	; 0x22
   21bc8:	bne	21bd4 <main@@Base+0xbd1c>
   21bcc:	add	r1, r1, #1
   21bd0:	b	21be8 <main@@Base+0xbd30>
   21bd4:	mov	r0, r5
   21bd8:	mov	r2, r6
   21bdc:	mov	r3, #5
   21be0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21be4:	mov	r1, r0
   21be8:	sub	r0, r6, r1
   21bec:	cmp	r0, #2
   21bf0:	blt	21c24 <main@@Base+0xbd6c>
   21bf4:	ldrb	r0, [r1]
   21bf8:	cmp	r0, #32
   21bfc:	bls	21c10 <main@@Base+0xbd58>
   21c00:	mov	r7, r1
   21c04:	cmp	r7, r6
   21c08:	bne	21c3c <main@@Base+0xbd84>
   21c0c:	b	21d54 <main@@Base+0xbe9c>
   21c10:	bne	21c24 <main@@Base+0xbd6c>
   21c14:	mov	r7, r1
   21c18:	ldrb	r0, [r7, #1]!
   21c1c:	cmp	r0, #32
   21c20:	bhi	21c34 <main@@Base+0xbd7c>
   21c24:	mov	r0, r5
   21c28:	mov	r2, r6
   21c2c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   21c30:	mov	r7, r0
   21c34:	cmp	r7, r6
   21c38:	beq	21d54 <main@@Base+0xbe9c>
   21c3c:	add	r0, sl, #4
   21c40:	mov	r2, #0
   21c44:	add	r8, sp, #32
   21c48:	add	r9, sp, #28
   21c4c:	str	sl, [sp, #16]
   21c50:	str	r0, [sp, #12]
   21c54:	ldr	r4, [sl]
   21c58:	mov	sl, r0
   21c5c:	str	r2, [sp, #20]
   21c60:	add	r0, sp, #24
   21c64:	mov	r1, r7
   21c68:	mov	r2, r6
   21c6c:	mov	r3, r9
   21c70:	str	r8, [sp]
   21c74:	str	r0, [sp, #4]
   21c78:	mov	r0, r5
   21c7c:	blx	r4
   21c80:	cmp	r0, r6
   21c84:	beq	21d54 <main@@Base+0xbe9c>
   21c88:	mov	r4, r0
   21c8c:	cmp	r0, r7
   21c90:	bne	21ca4 <main@@Base+0xbdec>
   21c94:	ldr	r4, [sl], #4
   21c98:	cmp	r4, #0
   21c9c:	bne	21c60 <main@@Base+0xbda8>
   21ca0:	b	21d5c <main@@Base+0xbea4>
   21ca4:	ldr	r2, [sp, #28]
   21ca8:	ldr	r0, [sp, #32]
   21cac:	ldr	r1, [sp, #36]	; 0x24
   21cb0:	cmp	r2, #0
   21cb4:	beq	21cdc <main@@Base+0xbe24>
   21cb8:	ldr	sl, [sp, #16]
   21cbc:	subs	r2, r0, #129	; 0x81
   21cc0:	sbcs	r1, r1, #0
   21cc4:	bcc	21d10 <main@@Base+0xbe58>
   21cc8:	mov	r0, r5
   21ccc:	mov	r1, r4
   21cd0:	mov	r2, r6
   21cd4:	mov	r3, #8
   21cd8:	b	21cfc <main@@Base+0xbe44>
   21cdc:	ldr	sl, [sp, #16]
   21ce0:	subs	r2, r0, #128	; 0x80
   21ce4:	sbcs	r1, r1, #0
   21ce8:	bcc	21d18 <main@@Base+0xbe60>
   21cec:	mov	r0, r5
   21cf0:	mov	r1, r4
   21cf4:	mov	r2, r6
   21cf8:	mov	r3, #7
   21cfc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21d00:	ldr	r2, [sp, #20]
   21d04:	cmp	r0, r6
   21d08:	bne	21d28 <main@@Base+0xbe70>
   21d0c:	b	21d54 <main@@Base+0xbe9c>
   21d10:	rsb	r2, r0, #0
   21d14:	b	21d1c <main@@Base+0xbe64>
   21d18:	mov	r2, r0
   21d1c:	mov	r0, r4
   21d20:	cmp	r0, r6
   21d24:	beq	21d54 <main@@Base+0xbe9c>
   21d28:	ldr	r0, [fp, #8]
   21d2c:	mov	r7, r4
   21d30:	mov	r1, r0
   21d34:	ldrb	r0, [r0]
   21d38:	add	r0, r0, r2
   21d3c:	strb	r0, [r1]
   21d40:	ldr	r0, [sp, #24]
   21d44:	cmp	r0, #0
   21d48:	ldr	r0, [sp, #12]
   21d4c:	bne	21c54 <main@@Base+0xbd9c>
   21d50:	b	21d74 <main@@Base+0xbebc>
   21d54:	mov	r4, r6
   21d58:	b	21d74 <main@@Base+0xbebc>
   21d5c:	mov	r0, r5
   21d60:	mov	r1, r7
   21d64:	mov	r2, r6
   21d68:	mov	r3, #23
   21d6c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21d70:	mov	r4, r0
   21d74:	mov	r0, r4
   21d78:	sub	sp, fp, #28
   21d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21d80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d84:	add	fp, sp, #28
   21d88:	sub	sp, sp, #44	; 0x2c
   21d8c:	mov	r6, r2
   21d90:	ldr	r2, [fp, #8]
   21d94:	mov	r5, r0
   21d98:	mov	r0, #0
   21d9c:	mov	sl, r3
   21da0:	cmp	r1, r6
   21da4:	strb	r0, [r2]
   21da8:	beq	21dd4 <main@@Base+0xbf1c>
   21dac:	ldrb	r0, [r1]
   21db0:	cmp	r0, #34	; 0x22
   21db4:	bne	21dc0 <main@@Base+0xbf08>
   21db8:	add	r1, r1, #1
   21dbc:	b	21dd4 <main@@Base+0xbf1c>
   21dc0:	mov	r0, r5
   21dc4:	mov	r2, r6
   21dc8:	mov	r3, #5
   21dcc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21dd0:	mov	r1, r0
   21dd4:	sub	r0, r6, r1
   21dd8:	cmp	r0, #2
   21ddc:	blt	21e10 <main@@Base+0xbf58>
   21de0:	ldrb	r0, [r1]
   21de4:	cmp	r0, #32
   21de8:	bls	21dfc <main@@Base+0xbf44>
   21dec:	mov	r7, r1
   21df0:	cmp	r7, r6
   21df4:	bne	21e28 <main@@Base+0xbf70>
   21df8:	b	21f38 <main@@Base+0xc080>
   21dfc:	bne	21e10 <main@@Base+0xbf58>
   21e00:	mov	r7, r1
   21e04:	ldrb	r0, [r7, #1]!
   21e08:	cmp	r0, #32
   21e0c:	bhi	21e20 <main@@Base+0xbf68>
   21e10:	mov	r0, r5
   21e14:	mov	r2, r6
   21e18:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   21e1c:	mov	r7, r0
   21e20:	cmp	r7, r6
   21e24:	beq	21f38 <main@@Base+0xc080>
   21e28:	add	r0, sl, #4
   21e2c:	mov	r1, #0
   21e30:	add	r8, sp, #32
   21e34:	add	r9, sp, #28
   21e38:	str	sl, [sp, #16]
   21e3c:	str	r1, [sp, #20]
   21e40:	str	r0, [sp, #12]
   21e44:	ldr	r4, [sl]
   21e48:	mov	sl, r0
   21e4c:	add	r0, sp, #24
   21e50:	mov	r1, r7
   21e54:	mov	r2, r6
   21e58:	mov	r3, r9
   21e5c:	str	r8, [sp]
   21e60:	str	r0, [sp, #4]
   21e64:	mov	r0, r5
   21e68:	blx	r4
   21e6c:	cmp	r0, r6
   21e70:	beq	21f38 <main@@Base+0xc080>
   21e74:	mov	r4, r0
   21e78:	cmp	r0, r7
   21e7c:	bne	21e90 <main@@Base+0xbfd8>
   21e80:	ldr	r4, [sl], #4
   21e84:	cmp	r4, #0
   21e88:	bne	21e4c <main@@Base+0xbf94>
   21e8c:	b	21f40 <main@@Base+0xc088>
   21e90:	ldr	r0, [sp, #28]
   21e94:	cmp	r0, #0
   21e98:	beq	21ec0 <main@@Base+0xc008>
   21e9c:	mov	r0, r5
   21ea0:	mov	r1, r4
   21ea4:	mov	r2, r6
   21ea8:	mov	r3, #8
   21eac:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21eb0:	ldr	sl, [sp, #16]
   21eb4:	cmp	r0, r6
   21eb8:	bne	21f08 <main@@Base+0xc050>
   21ebc:	b	21f38 <main@@Base+0xc080>
   21ec0:	ldr	r0, [sp, #32]
   21ec4:	ldr	r1, [sp, #36]	; 0x24
   21ec8:	ldr	sl, [sp, #16]
   21ecc:	subs	r2, r0, #256	; 0x100
   21ed0:	sbcs	r1, r1, #0
   21ed4:	bcc	21ef8 <main@@Base+0xc040>
   21ed8:	mov	r0, r5
   21edc:	mov	r1, r4
   21ee0:	mov	r2, r6
   21ee4:	mov	r3, #7
   21ee8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21eec:	cmp	r0, r6
   21ef0:	bne	21f08 <main@@Base+0xc050>
   21ef4:	b	21f38 <main@@Base+0xc080>
   21ef8:	str	r0, [sp, #20]
   21efc:	mov	r0, r4
   21f00:	cmp	r0, r6
   21f04:	beq	21f38 <main@@Base+0xc080>
   21f08:	ldr	r0, [fp, #8]
   21f0c:	ldr	r2, [sp, #20]
   21f10:	mov	r7, r4
   21f14:	mov	r1, r0
   21f18:	ldrb	r0, [r0]
   21f1c:	add	r0, r0, r2
   21f20:	strb	r0, [r1]
   21f24:	ldr	r0, [sp, #24]
   21f28:	cmp	r0, #0
   21f2c:	ldr	r0, [sp, #12]
   21f30:	bne	21e44 <main@@Base+0xbf8c>
   21f34:	b	21f58 <main@@Base+0xc0a0>
   21f38:	mov	r4, r6
   21f3c:	b	21f58 <main@@Base+0xc0a0>
   21f40:	mov	r0, r5
   21f44:	mov	r1, r7
   21f48:	mov	r2, r6
   21f4c:	mov	r3, #23
   21f50:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21f54:	mov	r4, r0
   21f58:	mov	r0, r4
   21f5c:	sub	sp, fp, #28
   21f60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21f64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21f68:	add	fp, sp, #28
   21f6c:	sub	sp, sp, #44	; 0x2c
   21f70:	mov	r6, r2
   21f74:	ldr	r2, [fp, #8]
   21f78:	mov	r5, r0
   21f7c:	mov	r0, #0
   21f80:	mov	sl, r3
   21f84:	cmp	r1, r6
   21f88:	strh	r0, [r2]
   21f8c:	beq	21fb8 <main@@Base+0xc100>
   21f90:	ldrb	r0, [r1]
   21f94:	cmp	r0, #34	; 0x22
   21f98:	bne	21fa4 <main@@Base+0xc0ec>
   21f9c:	add	r1, r1, #1
   21fa0:	b	21fb8 <main@@Base+0xc100>
   21fa4:	mov	r0, r5
   21fa8:	mov	r2, r6
   21fac:	mov	r3, #5
   21fb0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   21fb4:	mov	r1, r0
   21fb8:	sub	r0, r6, r1
   21fbc:	cmp	r0, #2
   21fc0:	blt	21ff4 <main@@Base+0xc13c>
   21fc4:	ldrb	r0, [r1]
   21fc8:	cmp	r0, #32
   21fcc:	bls	21fe0 <main@@Base+0xc128>
   21fd0:	mov	r7, r1
   21fd4:	cmp	r7, r6
   21fd8:	bne	2200c <main@@Base+0xc154>
   21fdc:	b	22128 <main@@Base+0xc270>
   21fe0:	bne	21ff4 <main@@Base+0xc13c>
   21fe4:	mov	r7, r1
   21fe8:	ldrb	r0, [r7, #1]!
   21fec:	cmp	r0, #32
   21ff0:	bhi	22004 <main@@Base+0xc14c>
   21ff4:	mov	r0, r5
   21ff8:	mov	r2, r6
   21ffc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22000:	mov	r7, r0
   22004:	cmp	r7, r6
   22008:	beq	22128 <main@@Base+0xc270>
   2200c:	add	r0, sl, #4
   22010:	mov	r2, #0
   22014:	add	r8, sp, #32
   22018:	add	r9, sp, #28
   2201c:	str	sl, [sp, #16]
   22020:	str	r0, [sp, #12]
   22024:	ldr	r4, [sl]
   22028:	mov	sl, r0
   2202c:	str	r2, [sp, #20]
   22030:	add	r0, sp, #24
   22034:	mov	r1, r7
   22038:	mov	r2, r6
   2203c:	mov	r3, r9
   22040:	str	r8, [sp]
   22044:	str	r0, [sp, #4]
   22048:	mov	r0, r5
   2204c:	blx	r4
   22050:	cmp	r0, r6
   22054:	beq	22128 <main@@Base+0xc270>
   22058:	mov	r4, r0
   2205c:	cmp	r0, r7
   22060:	bne	22074 <main@@Base+0xc1bc>
   22064:	ldr	r4, [sl], #4
   22068:	cmp	r4, #0
   2206c:	bne	22030 <main@@Base+0xc178>
   22070:	b	22130 <main@@Base+0xc278>
   22074:	ldr	r2, [sp, #28]
   22078:	ldr	r0, [sp, #32]
   2207c:	ldr	r1, [sp, #36]	; 0x24
   22080:	cmp	r2, #0
   22084:	beq	220b0 <main@@Base+0xc1f8>
   22088:	ldr	sl, [sp, #16]
   2208c:	movw	r2, #32769	; 0x8001
   22090:	subs	r2, r0, r2
   22094:	sbcs	r1, r1, #0
   22098:	bcc	220e4 <main@@Base+0xc22c>
   2209c:	mov	r0, r5
   220a0:	mov	r1, r4
   220a4:	mov	r2, r6
   220a8:	mov	r3, #8
   220ac:	b	220d0 <main@@Base+0xc218>
   220b0:	ldr	sl, [sp, #16]
   220b4:	subs	r2, r0, #32768	; 0x8000
   220b8:	sbcs	r1, r1, #0
   220bc:	bcc	220ec <main@@Base+0xc234>
   220c0:	mov	r0, r5
   220c4:	mov	r1, r4
   220c8:	mov	r2, r6
   220cc:	mov	r3, #7
   220d0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   220d4:	ldr	r2, [sp, #20]
   220d8:	cmp	r0, r6
   220dc:	bne	220fc <main@@Base+0xc244>
   220e0:	b	22128 <main@@Base+0xc270>
   220e4:	rsb	r2, r0, #0
   220e8:	b	220f0 <main@@Base+0xc238>
   220ec:	mov	r2, r0
   220f0:	mov	r0, r4
   220f4:	cmp	r0, r6
   220f8:	beq	22128 <main@@Base+0xc270>
   220fc:	ldr	r0, [fp, #8]
   22100:	mov	r7, r4
   22104:	mov	r1, r0
   22108:	ldrh	r0, [r0]
   2210c:	add	r0, r0, r2
   22110:	strh	r0, [r1]
   22114:	ldr	r0, [sp, #24]
   22118:	cmp	r0, #0
   2211c:	ldr	r0, [sp, #12]
   22120:	bne	22024 <main@@Base+0xc16c>
   22124:	b	22148 <main@@Base+0xc290>
   22128:	mov	r4, r6
   2212c:	b	22148 <main@@Base+0xc290>
   22130:	mov	r0, r5
   22134:	mov	r1, r7
   22138:	mov	r2, r6
   2213c:	mov	r3, #23
   22140:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22144:	mov	r4, r0
   22148:	mov	r0, r4
   2214c:	sub	sp, fp, #28
   22150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22158:	add	fp, sp, #28
   2215c:	sub	sp, sp, #28
   22160:	mov	r7, r2
   22164:	mov	r5, r0
   22168:	cmp	r1, r2
   2216c:	beq	221a4 <main@@Base+0xc2ec>
   22170:	ldrb	r0, [r1]
   22174:	cmp	r0, #123	; 0x7b
   22178:	bne	221a4 <main@@Base+0xc2ec>
   2217c:	add	r2, r1, #1
   22180:	mov	r9, r3
   22184:	sub	r0, r7, r2
   22188:	cmp	r0, #2
   2218c:	blt	221cc <main@@Base+0xc314>
   22190:	ldrb	r0, [r2]
   22194:	cmp	r0, #32
   22198:	bls	221bc <main@@Base+0xc304>
   2219c:	mov	r1, r2
   221a0:	b	221e0 <main@@Base+0xc328>
   221a4:	mov	r0, r5
   221a8:	mov	r2, r7
   221ac:	mov	r3, #21
   221b0:	sub	sp, fp, #28
   221b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   221b8:	b	33dd8 <flatcc_json_parser_set_error@@Base>
   221bc:	bne	221cc <main@@Base+0xc314>
   221c0:	ldrb	r0, [r1, #2]!
   221c4:	cmp	r0, #32
   221c8:	bhi	221e0 <main@@Base+0xc328>
   221cc:	mov	r1, r2
   221d0:	mov	r0, r5
   221d4:	mov	r2, r7
   221d8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   221dc:	mov	r1, r0
   221e0:	cmp	r1, r7
   221e4:	mov	r2, r7
   221e8:	beq	22220 <main@@Base+0xc368>
   221ec:	ldrb	r0, [r1]
   221f0:	cmp	r0, #125	; 0x7d
   221f4:	bne	2221c <main@@Base+0xc364>
   221f8:	add	r2, r1, #1
   221fc:	sub	r0, r7, r2
   22200:	cmp	r0, #2
   22204:	blt	227cc <main@@Base+0xc914>
   22208:	ldrb	r0, [r2]
   2220c:	cmp	r0, #32
   22210:	bls	227bc <main@@Base+0xc904>
   22214:	mov	r1, r2
   22218:	b	22824 <main@@Base+0xc96c>
   2221c:	mov	r2, r1
   22220:	mov	sl, #1627389952	; 0x61000000
   22224:	cmp	r2, r7
   22228:	mov	r4, r7
   2222c:	beq	2225c <main@@Base+0xc3a4>
   22230:	ldrb	r0, [r2]
   22234:	cmp	r0, #34	; 0x22
   22238:	bne	22244 <main@@Base+0xc38c>
   2223c:	add	r4, r2, #1
   22240:	b	2225c <main@@Base+0xc3a4>
   22244:	mov	r1, r2
   22248:	mov	r0, r5
   2224c:	mov	r2, r7
   22250:	mov	r3, #5
   22254:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22258:	mov	r4, r0
   2225c:	sub	r0, r7, r4
   22260:	mov	r1, #8
   22264:	cmp	r0, #8
   22268:	movcc	r1, r0
   2226c:	sub	r1, r1, #1
   22270:	cmp	r1, #7
   22274:	bhi	225f4 <main@@Base+0xc73c>
   22278:	ldrb	r1, [r4]
   2227c:	teq	sl, r1, lsl #24
   22280:	beq	222d8 <main@@Base+0xc420>
   22284:	lsl	r1, r1, #24
   22288:	teq	r1, #1644167168	; 0x62000000
   2228c:	bne	225f4 <main@@Base+0xc73c>
   22290:	cmp	r0, #2
   22294:	mov	r8, r4
   22298:	blt	22438 <main@@Base+0xc580>
   2229c:	ldrb	r0, [r4, #1]
   222a0:	mov	r8, r4
   222a4:	cmp	r0, #34	; 0x22
   222a8:	bne	22438 <main@@Base+0xc580>
   222ac:	add	r1, r4, #2
   222b0:	sub	r0, r7, r1
   222b4:	cmp	r0, #2
   222b8:	blt	22334 <main@@Base+0xc47c>
   222bc:	ldrb	r0, [r1]
   222c0:	cmp	r0, #32
   222c4:	bls	22320 <main@@Base+0xc468>
   222c8:	mov	r8, r1
   222cc:	cmp	r8, r7
   222d0:	bne	2234c <main@@Base+0xc494>
   222d4:	b	22384 <main@@Base+0xc4cc>
   222d8:	cmp	r0, #2
   222dc:	mov	r6, r4
   222e0:	blt	22574 <main@@Base+0xc6bc>
   222e4:	ldrb	r0, [r4, #1]
   222e8:	mov	r6, r4
   222ec:	cmp	r0, #34	; 0x22
   222f0:	bne	22574 <main@@Base+0xc6bc>
   222f4:	add	r1, r4, #2
   222f8:	sub	r0, r7, r1
   222fc:	cmp	r0, #2
   22300:	blt	223b0 <main@@Base+0xc4f8>
   22304:	ldrb	r0, [r1]
   22308:	cmp	r0, #32
   2230c:	bls	2239c <main@@Base+0xc4e4>
   22310:	mov	r6, r1
   22314:	cmp	r6, r7
   22318:	bne	223c8 <main@@Base+0xc510>
   2231c:	b	22400 <main@@Base+0xc548>
   22320:	bne	22334 <main@@Base+0xc47c>
   22324:	mov	r8, r4
   22328:	ldrb	r0, [r8, #3]!
   2232c:	cmp	r0, #32
   22330:	bhi	22344 <main@@Base+0xc48c>
   22334:	mov	r0, r5
   22338:	mov	r2, r7
   2233c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22340:	mov	r8, r0
   22344:	cmp	r8, r7
   22348:	beq	22384 <main@@Base+0xc4cc>
   2234c:	ldrb	r0, [r8]
   22350:	cmp	r0, #58	; 0x3a
   22354:	bne	22384 <main@@Base+0xc4cc>
   22358:	add	r1, r8, #1
   2235c:	sub	r0, r7, r1
   22360:	cmp	r0, #2
   22364:	blt	22428 <main@@Base+0xc570>
   22368:	ldrb	r0, [r1]
   2236c:	cmp	r0, #32
   22370:	bls	22418 <main@@Base+0xc560>
   22374:	mov	r8, r1
   22378:	cmp	r4, r8
   2237c:	bne	22440 <main@@Base+0xc588>
   22380:	b	225f4 <main@@Base+0xc73c>
   22384:	mov	r0, r5
   22388:	mov	r1, r8
   2238c:	mov	r2, r7
   22390:	mov	r3, #4
   22394:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22398:	b	22434 <main@@Base+0xc57c>
   2239c:	bne	223b0 <main@@Base+0xc4f8>
   223a0:	mov	r6, r4
   223a4:	ldrb	r0, [r6, #3]!
   223a8:	cmp	r0, #32
   223ac:	bhi	223c0 <main@@Base+0xc508>
   223b0:	mov	r0, r5
   223b4:	mov	r2, r7
   223b8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   223bc:	mov	r6, r0
   223c0:	cmp	r6, r7
   223c4:	beq	22400 <main@@Base+0xc548>
   223c8:	ldrb	r0, [r6]
   223cc:	cmp	r0, #58	; 0x3a
   223d0:	bne	22400 <main@@Base+0xc548>
   223d4:	add	r1, r6, #1
   223d8:	sub	r0, r7, r1
   223dc:	cmp	r0, #2
   223e0:	blt	22564 <main@@Base+0xc6ac>
   223e4:	ldrb	r0, [r1]
   223e8:	cmp	r0, #32
   223ec:	bls	22554 <main@@Base+0xc69c>
   223f0:	mov	r6, r1
   223f4:	cmp	r4, r6
   223f8:	bne	2257c <main@@Base+0xc6c4>
   223fc:	b	225f4 <main@@Base+0xc73c>
   22400:	mov	r0, r5
   22404:	mov	r1, r6
   22408:	mov	r2, r7
   2240c:	mov	r3, #4
   22410:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22414:	b	22570 <main@@Base+0xc6b8>
   22418:	bne	22428 <main@@Base+0xc570>
   2241c:	ldrb	r0, [r8, #2]!
   22420:	cmp	r0, #32
   22424:	bhi	22438 <main@@Base+0xc580>
   22428:	mov	r0, r5
   2242c:	mov	r2, r7
   22430:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22434:	mov	r8, r0
   22438:	cmp	r4, r8
   2243c:	beq	225f4 <main@@Base+0xc73c>
   22440:	mov	r4, #0
   22444:	cmp	r8, r7
   22448:	str	r4, [sp, #20]
   2244c:	str	r4, [sp, #16]
   22450:	strb	r4, [sp, #10]
   22454:	str	r4, [sp, #12]
   22458:	beq	224b4 <main@@Base+0xc5fc>
   2245c:	add	r0, sp, #16
   22460:	mov	r1, r8
   22464:	mov	r2, r7
   22468:	add	r3, sp, #12
   2246c:	str	r0, [sp]
   22470:	mov	r0, r5
   22474:	bl	362a4 <flatcc_json_parser_integer@@Base>
   22478:	cmp	r0, r8
   2247c:	beq	224c4 <main@@Base+0xc60c>
   22480:	ldr	r3, [sp, #12]
   22484:	mov	r1, r0
   22488:	ldr	r0, [sp, #16]
   2248c:	ldr	r2, [sp, #20]
   22490:	cmp	r3, #0
   22494:	beq	224d4 <main@@Base+0xc61c>
   22498:	subs	r3, r0, #129	; 0x81
   2249c:	sbcs	r2, r2, #0
   224a0:	bcc	22500 <main@@Base+0xc648>
   224a4:	mov	r0, r5
   224a8:	mov	r2, r7
   224ac:	mov	r3, #8
   224b0:	b	224ec <main@@Base+0xc634>
   224b4:	mov	r1, r7
   224b8:	cmp	r8, r1
   224bc:	bne	2254c <main@@Base+0xc694>
   224c0:	b	22518 <main@@Base+0xc660>
   224c4:	mov	r1, r8
   224c8:	cmp	r8, r1
   224cc:	bne	2254c <main@@Base+0xc694>
   224d0:	b	22518 <main@@Base+0xc660>
   224d4:	subs	r3, r0, #128	; 0x80
   224d8:	sbcs	r2, r2, #0
   224dc:	bcc	22508 <main@@Base+0xc650>
   224e0:	mov	r0, r5
   224e4:	mov	r2, r7
   224e8:	mov	r3, #7
   224ec:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   224f0:	mov	r1, r0
   224f4:	cmp	r8, r1
   224f8:	bne	2254c <main@@Base+0xc694>
   224fc:	b	22518 <main@@Base+0xc660>
   22500:	rsb	r4, r0, #0
   22504:	b	2250c <main@@Base+0xc654>
   22508:	mov	r4, r0
   2250c:	strb	r4, [sp, #10]
   22510:	cmp	r8, r1
   22514:	bne	2254c <main@@Base+0xc694>
   22518:	add	r0, sp, #10
   2251c:	mov	r1, r8
   22520:	mov	r2, r7
   22524:	str	r0, [sp]
   22528:	mov	r0, r5
   2252c:	ldr	r3, [pc, #764]	; 22830 <main@@Base+0xc978>
   22530:	add	r3, pc, r3
   22534:	bl	21b94 <main@@Base+0xbcdc>
   22538:	mov	r1, r0
   2253c:	cmp	r0, r8
   22540:	cmpne	r1, r7
   22544:	beq	2276c <main@@Base+0xc8b4>
   22548:	ldrb	r4, [sp, #10]
   2254c:	strb	r4, [r9, #2]
   22550:	b	22608 <main@@Base+0xc750>
   22554:	bne	22564 <main@@Base+0xc6ac>
   22558:	ldrb	r0, [r6, #2]!
   2255c:	cmp	r0, #32
   22560:	bhi	22574 <main@@Base+0xc6bc>
   22564:	mov	r0, r5
   22568:	mov	r2, r7
   2256c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22570:	mov	r6, r0
   22574:	cmp	r4, r6
   22578:	beq	225f4 <main@@Base+0xc73c>
   2257c:	mov	r4, #0
   22580:	cmp	r6, r7
   22584:	str	r4, [sp, #20]
   22588:	str	r4, [sp, #16]
   2258c:	strh	r4, [sp, #10]
   22590:	str	r4, [sp, #12]
   22594:	beq	226cc <main@@Base+0xc814>
   22598:	add	r0, sp, #16
   2259c:	mov	r1, r6
   225a0:	mov	r2, r7
   225a4:	add	r3, sp, #12
   225a8:	str	r0, [sp]
   225ac:	mov	r0, r5
   225b0:	bl	362a4 <flatcc_json_parser_integer@@Base>
   225b4:	cmp	r0, r6
   225b8:	beq	226dc <main@@Base+0xc824>
   225bc:	ldr	r3, [sp, #12]
   225c0:	mov	r1, r0
   225c4:	ldr	r0, [sp, #16]
   225c8:	ldr	r2, [sp, #20]
   225cc:	cmp	r3, #0
   225d0:	beq	226ec <main@@Base+0xc834>
   225d4:	movw	r3, #32769	; 0x8001
   225d8:	subs	r3, r0, r3
   225dc:	sbcs	r2, r2, #0
   225e0:	bcc	22718 <main@@Base+0xc860>
   225e4:	mov	r0, r5
   225e8:	mov	r2, r7
   225ec:	mov	r3, #8
   225f0:	b	22704 <main@@Base+0xc84c>
   225f4:	mov	r0, r5
   225f8:	mov	r1, r4
   225fc:	mov	r2, r7
   22600:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   22604:	mov	r1, r0
   22608:	sub	r0, r7, r1
   2260c:	cmp	r0, #2
   22610:	blt	22644 <main@@Base+0xc78c>
   22614:	ldrb	r0, [r1]
   22618:	cmp	r0, #32
   2261c:	bls	22630 <main@@Base+0xc778>
   22620:	mov	r2, r1
   22624:	cmp	r2, r7
   22628:	bne	2265c <main@@Base+0xc7a4>
   2262c:	b	2277c <main@@Base+0xc8c4>
   22630:	bne	22644 <main@@Base+0xc78c>
   22634:	mov	r2, r1
   22638:	ldrb	r0, [r2, #1]!
   2263c:	cmp	r0, #32
   22640:	bhi	22654 <main@@Base+0xc79c>
   22644:	mov	r0, r5
   22648:	mov	r2, r7
   2264c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22650:	mov	r2, r0
   22654:	cmp	r2, r7
   22658:	beq	2277c <main@@Base+0xc8c4>
   2265c:	ldrb	r0, [r2]
   22660:	cmp	r0, #44	; 0x2c
   22664:	bne	22784 <main@@Base+0xc8cc>
   22668:	add	r1, r2, #1
   2266c:	sub	r0, r7, r1
   22670:	cmp	r0, #2
   22674:	blt	226a4 <main@@Base+0xc7ec>
   22678:	ldrb	r0, [r1]
   2267c:	cmp	r0, #32
   22680:	bls	22694 <main@@Base+0xc7dc>
   22684:	mov	r2, r1
   22688:	cmp	r2, r7
   2268c:	bne	226bc <main@@Base+0xc804>
   22690:	b	227b0 <main@@Base+0xc8f8>
   22694:	bne	226a4 <main@@Base+0xc7ec>
   22698:	ldrb	r0, [r2, #2]!
   2269c:	cmp	r0, #32
   226a0:	bhi	226b4 <main@@Base+0xc7fc>
   226a4:	mov	r0, r5
   226a8:	mov	r2, r7
   226ac:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   226b0:	mov	r2, r0
   226b4:	cmp	r2, r7
   226b8:	beq	227b0 <main@@Base+0xc8f8>
   226bc:	ldrb	r0, [r2]
   226c0:	cmp	r0, #125	; 0x7d
   226c4:	bne	22224 <main@@Base+0xc36c>
   226c8:	b	2278c <main@@Base+0xc8d4>
   226cc:	mov	r1, r7
   226d0:	cmp	r6, r1
   226d4:	bne	22764 <main@@Base+0xc8ac>
   226d8:	b	22730 <main@@Base+0xc878>
   226dc:	mov	r1, r6
   226e0:	cmp	r6, r1
   226e4:	bne	22764 <main@@Base+0xc8ac>
   226e8:	b	22730 <main@@Base+0xc878>
   226ec:	subs	r3, r0, #32768	; 0x8000
   226f0:	sbcs	r2, r2, #0
   226f4:	bcc	22720 <main@@Base+0xc868>
   226f8:	mov	r0, r5
   226fc:	mov	r2, r7
   22700:	mov	r3, #7
   22704:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22708:	mov	r1, r0
   2270c:	cmp	r6, r1
   22710:	bne	22764 <main@@Base+0xc8ac>
   22714:	b	22730 <main@@Base+0xc878>
   22718:	rsb	r4, r0, #0
   2271c:	b	22724 <main@@Base+0xc86c>
   22720:	mov	r4, r0
   22724:	strh	r4, [sp, #10]
   22728:	cmp	r6, r1
   2272c:	bne	22764 <main@@Base+0xc8ac>
   22730:	add	r0, sp, #10
   22734:	mov	r1, r6
   22738:	mov	r2, r7
   2273c:	str	r0, [sp]
   22740:	mov	r0, r5
   22744:	ldr	r3, [pc, #232]	; 22834 <main@@Base+0xc97c>
   22748:	add	r3, pc, r3
   2274c:	bl	21f64 <main@@Base+0xc0ac>
   22750:	mov	r1, r0
   22754:	cmp	r0, r6
   22758:	cmpne	r1, r7
   2275c:	beq	2276c <main@@Base+0xc8b4>
   22760:	ldrh	r4, [sp, #10]
   22764:	strh	r4, [r9]
   22768:	b	22608 <main@@Base+0xc750>
   2276c:	mov	r0, r5
   22770:	mov	r2, r7
   22774:	mov	r3, #33	; 0x21
   22778:	b	227f4 <main@@Base+0xc93c>
   2277c:	mov	r1, r7
   22780:	b	22824 <main@@Base+0xc96c>
   22784:	cmp	r0, #125	; 0x7d
   22788:	bne	227e4 <main@@Base+0xc92c>
   2278c:	add	r3, r2, #1
   22790:	sub	r0, r7, r3
   22794:	cmp	r0, #2
   22798:	blt	22810 <main@@Base+0xc958>
   2279c:	ldrb	r0, [r3]
   227a0:	cmp	r0, #32
   227a4:	bls	227fc <main@@Base+0xc944>
   227a8:	mov	r1, r3
   227ac:	b	22824 <main@@Base+0xc96c>
   227b0:	mov	r0, r5
   227b4:	mov	r1, r7
   227b8:	b	227ec <main@@Base+0xc934>
   227bc:	bne	227cc <main@@Base+0xc914>
   227c0:	ldrb	r0, [r1, #2]!
   227c4:	cmp	r0, #32
   227c8:	bhi	22824 <main@@Base+0xc96c>
   227cc:	mov	r1, r2
   227d0:	mov	r0, r5
   227d4:	mov	r2, r7
   227d8:	sub	sp, fp, #28
   227dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   227e0:	b	33e88 <flatcc_json_parser_space_ext@@Base>
   227e4:	mov	r0, r5
   227e8:	mov	r1, r2
   227ec:	mov	r2, r7
   227f0:	mov	r3, #10
   227f4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   227f8:	b	22820 <main@@Base+0xc968>
   227fc:	bne	22810 <main@@Base+0xc958>
   22800:	ldrb	r0, [r2, #2]!
   22804:	mov	r1, r2
   22808:	cmp	r0, #32
   2280c:	bhi	22824 <main@@Base+0xc96c>
   22810:	mov	r0, r5
   22814:	mov	r1, r3
   22818:	mov	r2, r7
   2281c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22820:	mov	r1, r0
   22824:	mov	r0, r1
   22828:	sub	sp, fp, #28
   2282c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22830:	andeq	r9, r3, r4, lsr #25
   22834:	muleq	r3, r8, sl
   22838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2283c:	add	fp, sp, #28
   22840:	sub	sp, sp, #28
   22844:	ldr	r5, [fp, #8]
   22848:	mov	r8, r0
   2284c:	mov	r0, #0
   22850:	mov	sl, r2
   22854:	mov	r4, r1
   22858:	cmp	r3, #4
   2285c:	str	r0, [r5]
   22860:	bhi	228c0 <main@@Base+0xca08>
   22864:	add	r0, pc, #4
   22868:	ldr	r1, [r0, r3, lsl #2]
   2286c:	add	pc, r0, r1
   22870:	andeq	r0, r0, r4, lsl r0
   22874:	andeq	r0, r0, r8, ror r0
   22878:	muleq	r0, r0, r0
   2287c:	andeq	r0, r0, r4, ror #1
   22880:	andeq	r0, r0, r8, lsr r1
   22884:	sub	r0, sl, r4
   22888:	cmp	r0, #4
   2288c:	blt	228ac <main@@Base+0xc9f4>
   22890:	ldr	r1, [pc, #3888]	; 237c8 <main@@Base+0xd910>
   22894:	mov	r0, r4
   22898:	mov	r2, #4
   2289c:	add	r1, pc, r1
   228a0:	bl	14eb4 <bcmp@plt>
   228a4:	cmp	r0, #0
   228a8:	beq	22a60 <main@@Base+0xcba8>
   228ac:	mov	r0, r8
   228b0:	mov	r1, r4
   228b4:	mov	r2, sl
   228b8:	mov	r3, #26
   228bc:	b	228dc <main@@Base+0xca24>
   228c0:	ldrb	r0, [r8, #8]
   228c4:	tst	r0, #1
   228c8:	bne	22a30 <main@@Base+0xcb78>
   228cc:	mov	r0, r8
   228d0:	mov	r1, r4
   228d4:	mov	r2, sl
   228d8:	mov	r3, #15
   228dc:	sub	sp, fp, #28
   228e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   228e4:	b	33dd8 <flatcc_json_parser_set_error@@Base>
   228e8:	mov	r0, r8
   228ec:	mov	r1, r4
   228f0:	mov	r2, sl
   228f4:	mov	r3, r5
   228f8:	bl	16864 <main@@Base+0x9ac>
   228fc:	b	229f8 <main@@Base+0xcb40>
   22900:	mov	r0, #0
   22904:	mov	r1, #4
   22908:	str	r0, [r5]
   2290c:	ldr	r0, [r8]
   22910:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   22914:	cmp	r0, #0
   22918:	bne	229e4 <main@@Base+0xcb2c>
   2291c:	cmp	r4, sl
   22920:	beq	229c0 <main@@Base+0xcb08>
   22924:	ldrb	r0, [r4]
   22928:	cmp	r0, #123	; 0x7b
   2292c:	bne	229c0 <main@@Base+0xcb08>
   22930:	add	r1, r4, #1
   22934:	sub	r0, sl, r1
   22938:	cmp	r0, #2
   2293c:	blt	22a80 <main@@Base+0xcbc8>
   22940:	ldrb	r0, [r1]
   22944:	cmp	r0, #32
   22948:	bls	22a70 <main@@Base+0xcbb8>
   2294c:	mov	r4, r1
   22950:	b	22a90 <main@@Base+0xcbd8>
   22954:	mov	r0, #0
   22958:	mov	r1, #0
   2295c:	str	r0, [r5]
   22960:	ldr	r0, [r8]
   22964:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   22968:	cmp	r0, #0
   2296c:	bne	229e4 <main@@Base+0xcb2c>
   22970:	cmp	r4, sl
   22974:	beq	229c0 <main@@Base+0xcb08>
   22978:	ldrb	r0, [r4]
   2297c:	cmp	r0, #123	; 0x7b
   22980:	bne	229c0 <main@@Base+0xcb08>
   22984:	add	r1, r4, #1
   22988:	sub	r0, sl, r1
   2298c:	cmp	r0, #2
   22990:	blt	2359c <main@@Base+0xd6e4>
   22994:	ldrb	r0, [r1]
   22998:	cmp	r0, #32
   2299c:	bls	2358c <main@@Base+0xd6d4>
   229a0:	mov	r4, r1
   229a4:	b	235ac <main@@Base+0xd6f4>
   229a8:	mov	r0, r8
   229ac:	mov	r1, r4
   229b0:	mov	r2, sl
   229b4:	mov	r3, r5
   229b8:	bl	252a0 <main@@Base+0xf3e8>
   229bc:	b	229f8 <main@@Base+0xcb40>
   229c0:	mov	r0, r8
   229c4:	mov	r1, r4
   229c8:	mov	r2, sl
   229cc:	mov	r3, #21
   229d0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   229d4:	mov	r4, r0
   229d8:	ldr	r0, [r8, #20]
   229dc:	cmp	r0, #0
   229e0:	beq	22a48 <main@@Base+0xcb90>
   229e4:	mov	r0, r8
   229e8:	mov	r1, r4
   229ec:	mov	r2, sl
   229f0:	mov	r3, #33	; 0x21
   229f4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   229f8:	mov	r4, r0
   229fc:	ldr	r0, [r8, #20]
   22a00:	cmp	r0, #0
   22a04:	bne	22a64 <main@@Base+0xcbac>
   22a08:	ldr	r0, [r5]
   22a0c:	cmp	r0, #0
   22a10:	bne	22a64 <main@@Base+0xcbac>
   22a14:	mov	r0, r8
   22a18:	mov	r1, r4
   22a1c:	mov	r2, sl
   22a20:	mov	r3, #33	; 0x21
   22a24:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22a28:	mov	r4, r0
   22a2c:	b	22a64 <main@@Base+0xcbac>
   22a30:	mov	r0, r8
   22a34:	mov	r1, r4
   22a38:	mov	r2, sl
   22a3c:	sub	sp, fp, #28
   22a40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22a44:	b	34774 <flatcc_json_parser_generic_json@@Base>
   22a48:	ldr	r0, [r8]
   22a4c:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   22a50:	cmp	r0, #0
   22a54:	str	r0, [r5]
   22a58:	bne	229fc <main@@Base+0xcb44>
   22a5c:	b	229e4 <main@@Base+0xcb2c>
   22a60:	add	r4, r4, #4
   22a64:	mov	r0, r4
   22a68:	sub	sp, fp, #28
   22a6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22a70:	bne	22a80 <main@@Base+0xcbc8>
   22a74:	ldrb	r0, [r4, #2]!
   22a78:	cmp	r0, #32
   22a7c:	bhi	22a90 <main@@Base+0xcbd8>
   22a80:	mov	r0, r8
   22a84:	mov	r2, sl
   22a88:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22a8c:	mov	r4, r0
   22a90:	cmp	r4, sl
   22a94:	mov	r2, sl
   22a98:	beq	22aac <main@@Base+0xcbf4>
   22a9c:	ldrb	r0, [r4]
   22aa0:	cmp	r0, #125	; 0x7d
   22aa4:	beq	235c4 <main@@Base+0xd70c>
   22aa8:	mov	r2, r4
   22aac:	cmp	r2, sl
   22ab0:	mov	r9, sl
   22ab4:	beq	22ae4 <main@@Base+0xcc2c>
   22ab8:	ldrb	r0, [r2]
   22abc:	cmp	r0, #34	; 0x22
   22ac0:	bne	22acc <main@@Base+0xcc14>
   22ac4:	add	r9, r2, #1
   22ac8:	b	22ae4 <main@@Base+0xcc2c>
   22acc:	mov	r1, r2
   22ad0:	mov	r0, r8
   22ad4:	mov	r2, sl
   22ad8:	mov	r3, #5
   22adc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22ae0:	mov	r9, r0
   22ae4:	sub	lr, sl, r9
   22ae8:	mov	r0, #8
   22aec:	cmp	lr, #8
   22af0:	movcc	r0, lr
   22af4:	sub	r1, r0, #1
   22af8:	cmp	r1, #7
   22afc:	bhi	233d8 <main@@Base+0xd520>
   22b00:	add	r4, pc, #32
   22b04:	mov	ip, r5
   22b08:	mov	r0, #0
   22b0c:	mov	r2, #0
   22b10:	mov	r3, #0
   22b14:	mov	r7, #0
   22b18:	mov	r6, #0
   22b1c:	ldr	r5, [r4, r1, lsl #2]
   22b20:	mov	r1, #0
   22b24:	add	pc, r4, r5
   22b28:	andeq	r0, r0, r0, asr r0
   22b2c:	andeq	r0, r0, r8, asr #32
   22b30:	andeq	r0, r0, r0, asr #32
   22b34:	andeq	r0, r0, r8, lsr r0
   22b38:	andeq	r0, r0, r8, lsr #32
   22b3c:	andeq	r0, r0, r0, lsr #32
   22b40:	andeq	r0, r0, r0, lsr #32
   22b44:	andeq	r0, r0, r0, lsr #32
   22b48:	ldrb	r1, [r9, #5]
   22b4c:	lsl	r1, r1, #16
   22b50:	ldrb	r2, [r9, #4]
   22b54:	orr	r1, r1, r2, lsl #24
   22b58:	mov	r2, r0
   22b5c:	mov	r0, r1
   22b60:	ldrb	r1, [r9, #3]
   22b64:	orr	r3, r1, r2
   22b68:	ldrb	r1, [r9, #2]
   22b6c:	orr	r7, r3, r1, lsl #8
   22b70:	ldrb	r1, [r9, #1]
   22b74:	orr	r6, r7, r1, lsl #16
   22b78:	ldrb	r1, [r9]
   22b7c:	movw	r3, #29234	; 0x7232
   22b80:	lsr	r2, r0, #16
   22b84:	movt	r3, #27759	; 0x6c6f
   22b88:	orr	r7, r6, r1, lsl #24
   22b8c:	movw	r1, #25455	; 0x636f
   22b90:	orr	r2, r2, r7, lsl #16
   22b94:	eor	r1, r1, r7, lsr #16
   22b98:	eor	r2, r2, r3
   22b9c:	orrs	r1, r2, r1
   22ba0:	bne	22bf0 <main@@Base+0xcd38>
   22ba4:	cmp	lr, #7
   22ba8:	mov	r6, r9
   22bac:	mov	r5, ip
   22bb0:	blt	22d90 <main@@Base+0xced8>
   22bb4:	ldrb	r0, [r9, #6]
   22bb8:	mov	r6, r9
   22bbc:	cmp	r0, #34	; 0x22
   22bc0:	bne	22d90 <main@@Base+0xced8>
   22bc4:	add	r1, r9, #7
   22bc8:	sub	r0, sl, r1
   22bcc:	cmp	r0, #2
   22bd0:	blt	22c6c <main@@Base+0xcdb4>
   22bd4:	ldrb	r0, [r1]
   22bd8:	cmp	r0, #32
   22bdc:	bls	22c58 <main@@Base+0xcda0>
   22be0:	mov	r6, r1
   22be4:	cmp	r6, sl
   22be8:	bne	22c8c <main@@Base+0xcdd4>
   22bec:	b	22cc4 <main@@Base+0xce0c>
   22bf0:	movw	r1, #27759	; 0x6c6f
   22bf4:	and	r0, r0, #-16777216	; 0xff000000
   22bf8:	mov	r5, ip
   22bfc:	movt	r1, #25455	; 0x636f
   22c00:	eor	r0, r0, #1912602624	; 0x72000000
   22c04:	eor	r1, r7, r1
   22c08:	orrs	r0, r0, r1
   22c0c:	bne	22f78 <main@@Base+0xd0c0>
   22c10:	cmp	lr, #6
   22c14:	mov	r6, r9
   22c18:	blt	22ef8 <main@@Base+0xd040>
   22c1c:	ldrb	r0, [r9, #5]
   22c20:	mov	r6, r9
   22c24:	cmp	r0, #34	; 0x22
   22c28:	bne	22ef8 <main@@Base+0xd040>
   22c2c:	add	r1, r9, #6
   22c30:	sub	r0, sl, r1
   22c34:	cmp	r0, #2
   22c38:	blt	22cf4 <main@@Base+0xce3c>
   22c3c:	ldrb	r0, [r1]
   22c40:	cmp	r0, #32
   22c44:	bls	22ce0 <main@@Base+0xce28>
   22c48:	mov	r6, r1
   22c4c:	cmp	r6, sl
   22c50:	bne	22d14 <main@@Base+0xce5c>
   22c54:	b	22d4c <main@@Base+0xce94>
   22c58:	bne	22c6c <main@@Base+0xcdb4>
   22c5c:	mov	r6, r9
   22c60:	ldrb	r0, [r6, #8]!
   22c64:	cmp	r0, #32
   22c68:	bhi	22c84 <main@@Base+0xcdcc>
   22c6c:	mov	r0, r8
   22c70:	mov	r2, sl
   22c74:	mov	r4, lr
   22c78:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22c7c:	mov	lr, r4
   22c80:	mov	r6, r0
   22c84:	cmp	r6, sl
   22c88:	beq	22cc4 <main@@Base+0xce0c>
   22c8c:	ldrb	r0, [r6]
   22c90:	cmp	r0, #58	; 0x3a
   22c94:	bne	22cc4 <main@@Base+0xce0c>
   22c98:	add	r1, r6, #1
   22c9c:	sub	r0, sl, r1
   22ca0:	cmp	r0, #2
   22ca4:	blt	22d78 <main@@Base+0xcec0>
   22ca8:	ldrb	r0, [r1]
   22cac:	cmp	r0, #32
   22cb0:	bls	22d68 <main@@Base+0xceb0>
   22cb4:	mov	r6, r1
   22cb8:	cmp	r9, r6
   22cbc:	bne	22d98 <main@@Base+0xcee0>
   22cc0:	b	22f78 <main@@Base+0xd0c0>
   22cc4:	mov	r0, r8
   22cc8:	mov	r1, r6
   22ccc:	mov	r2, sl
   22cd0:	mov	r3, #4
   22cd4:	mov	r4, lr
   22cd8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22cdc:	b	22d88 <main@@Base+0xced0>
   22ce0:	bne	22cf4 <main@@Base+0xce3c>
   22ce4:	mov	r6, r9
   22ce8:	ldrb	r0, [r6, #7]!
   22cec:	cmp	r0, #32
   22cf0:	bhi	22d0c <main@@Base+0xce54>
   22cf4:	mov	r0, r8
   22cf8:	mov	r2, sl
   22cfc:	mov	r4, lr
   22d00:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22d04:	mov	lr, r4
   22d08:	mov	r6, r0
   22d0c:	cmp	r6, sl
   22d10:	beq	22d4c <main@@Base+0xce94>
   22d14:	ldrb	r0, [r6]
   22d18:	cmp	r0, #58	; 0x3a
   22d1c:	bne	22d4c <main@@Base+0xce94>
   22d20:	add	r1, r6, #1
   22d24:	sub	r0, sl, r1
   22d28:	cmp	r0, #2
   22d2c:	blt	22ee0 <main@@Base+0xd028>
   22d30:	ldrb	r0, [r1]
   22d34:	cmp	r0, #32
   22d38:	bls	22ed0 <main@@Base+0xd018>
   22d3c:	mov	r6, r1
   22d40:	cmp	r9, r6
   22d44:	bne	22f00 <main@@Base+0xd048>
   22d48:	b	22f78 <main@@Base+0xd0c0>
   22d4c:	mov	r0, r8
   22d50:	mov	r1, r6
   22d54:	mov	r2, sl
   22d58:	mov	r3, #4
   22d5c:	mov	r4, lr
   22d60:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22d64:	b	22ef0 <main@@Base+0xd038>
   22d68:	bne	22d78 <main@@Base+0xcec0>
   22d6c:	ldrb	r0, [r6, #2]!
   22d70:	cmp	r0, #32
   22d74:	bhi	22d90 <main@@Base+0xced8>
   22d78:	mov	r0, r8
   22d7c:	mov	r2, sl
   22d80:	mov	r4, lr
   22d84:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22d88:	mov	lr, r4
   22d8c:	mov	r6, r0
   22d90:	cmp	r9, r6
   22d94:	beq	22f78 <main@@Base+0xd0c0>
   22d98:	mov	r7, #0
   22d9c:	cmp	r6, sl
   22da0:	str	r7, [sp, #20]
   22da4:	str	r7, [sp, #16]
   22da8:	strb	r7, [sp, #11]
   22dac:	str	r7, [sp, #12]
   22db0:	beq	22e10 <main@@Base+0xcf58>
   22db4:	add	r0, sp, #16
   22db8:	mov	r1, r6
   22dbc:	mov	r2, sl
   22dc0:	add	r3, sp, #12
   22dc4:	str	r0, [sp]
   22dc8:	mov	r0, r8
   22dcc:	bl	362a4 <flatcc_json_parser_integer@@Base>
   22dd0:	cmp	r0, r6
   22dd4:	beq	22e20 <main@@Base+0xcf68>
   22dd8:	ldr	r2, [sp, #12]
   22ddc:	mov	r4, r0
   22de0:	ldr	r0, [sp, #16]
   22de4:	ldr	r1, [sp, #20]
   22de8:	cmp	r2, #0
   22dec:	beq	22e30 <main@@Base+0xcf78>
   22df0:	subs	r2, r0, #129	; 0x81
   22df4:	sbcs	r1, r1, #0
   22df8:	bcc	22e60 <main@@Base+0xcfa8>
   22dfc:	mov	r0, r8
   22e00:	mov	r1, r4
   22e04:	mov	r2, sl
   22e08:	mov	r3, #8
   22e0c:	b	22e4c <main@@Base+0xcf94>
   22e10:	mov	r4, sl
   22e14:	cmp	r6, r4
   22e18:	bne	22eac <main@@Base+0xcff4>
   22e1c:	b	22e78 <main@@Base+0xcfc0>
   22e20:	mov	r4, r6
   22e24:	cmp	r6, r4
   22e28:	bne	22eac <main@@Base+0xcff4>
   22e2c:	b	22e78 <main@@Base+0xcfc0>
   22e30:	subs	r2, r0, #128	; 0x80
   22e34:	sbcs	r1, r1, #0
   22e38:	bcc	22e68 <main@@Base+0xcfb0>
   22e3c:	mov	r0, r8
   22e40:	mov	r1, r4
   22e44:	mov	r2, sl
   22e48:	mov	r3, #7
   22e4c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   22e50:	mov	r4, r0
   22e54:	cmp	r6, r4
   22e58:	bne	22eac <main@@Base+0xcff4>
   22e5c:	b	22e78 <main@@Base+0xcfc0>
   22e60:	rsb	r7, r0, #0
   22e64:	b	22e6c <main@@Base+0xcfb4>
   22e68:	mov	r7, r0
   22e6c:	strb	r7, [sp, #11]
   22e70:	cmp	r6, r4
   22e74:	bne	22eac <main@@Base+0xcff4>
   22e78:	add	r0, sp, #11
   22e7c:	mov	r1, r6
   22e80:	mov	r2, sl
   22e84:	str	r0, [sp]
   22e88:	mov	r0, r8
   22e8c:	ldr	r3, [pc, #2360]	; 237cc <main@@Base+0xd914>
   22e90:	add	r3, pc, r3
   22e94:	bl	21b94 <main@@Base+0xbcdc>
   22e98:	mov	r4, r0
   22e9c:	cmp	r0, r6
   22ea0:	cmpne	r4, sl
   22ea4:	beq	229e4 <main@@Base+0xcb2c>
   22ea8:	ldrb	r7, [sp, #11]
   22eac:	uxtb	r0, r7
   22eb0:	cmp	r0, #2
   22eb4:	bne	22ec4 <main@@Base+0xd00c>
   22eb8:	ldrb	r0, [r8, #8]
   22ebc:	tst	r0, #2
   22ec0:	beq	234c4 <main@@Base+0xd60c>
   22ec4:	ldr	r0, [r8]
   22ec8:	mov	r1, #1
   22ecc:	b	23168 <main@@Base+0xd2b0>
   22ed0:	bne	22ee0 <main@@Base+0xd028>
   22ed4:	ldrb	r0, [r6, #2]!
   22ed8:	cmp	r0, #32
   22edc:	bhi	22ef8 <main@@Base+0xd040>
   22ee0:	mov	r0, r8
   22ee4:	mov	r2, sl
   22ee8:	mov	r4, lr
   22eec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   22ef0:	mov	lr, r4
   22ef4:	mov	r6, r0
   22ef8:	cmp	r9, r6
   22efc:	beq	22f78 <main@@Base+0xd0c0>
   22f00:	mov	r7, #0
   22f04:	cmp	r6, sl
   22f08:	str	r7, [sp, #20]
   22f0c:	str	r7, [sp, #16]
   22f10:	strb	r7, [sp, #11]
   22f14:	str	r7, [sp, #12]
   22f18:	beq	23030 <main@@Base+0xd178>
   22f1c:	add	r0, sp, #16
   22f20:	mov	r1, r6
   22f24:	mov	r2, sl
   22f28:	add	r3, sp, #12
   22f2c:	str	r0, [sp]
   22f30:	mov	r0, r8
   22f34:	bl	362a4 <flatcc_json_parser_integer@@Base>
   22f38:	cmp	r0, r6
   22f3c:	beq	23040 <main@@Base+0xd188>
   22f40:	ldr	r2, [sp, #12]
   22f44:	mov	r4, r0
   22f48:	ldr	r0, [sp, #16]
   22f4c:	ldr	r1, [sp, #20]
   22f50:	cmp	r2, #0
   22f54:	beq	23050 <main@@Base+0xd198>
   22f58:	subs	r2, r0, #129	; 0x81
   22f5c:	sbcs	r1, r1, #0
   22f60:	bcc	23080 <main@@Base+0xd1c8>
   22f64:	mov	r0, r8
   22f68:	mov	r1, r4
   22f6c:	mov	r2, sl
   22f70:	mov	r3, #8
   22f74:	b	2306c <main@@Base+0xd1b4>
   22f78:	movw	r1, #12800	; 0x3200
   22f7c:	bic	r0, r7, #255	; 0xff
   22f80:	movt	r1, #30051	; 0x7563
   22f84:	teq	r0, r1
   22f88:	bne	22fd4 <main@@Base+0xd11c>
   22f8c:	cmp	lr, #4
   22f90:	mov	r7, r9
   22f94:	blt	23220 <main@@Base+0xd368>
   22f98:	ldrb	r0, [r9, #3]
   22f9c:	mov	r7, r9
   22fa0:	cmp	r0, #34	; 0x22
   22fa4:	bne	23220 <main@@Base+0xd368>
   22fa8:	add	r1, r9, #4
   22fac:	sub	r0, sl, r1
   22fb0:	cmp	r0, #2
   22fb4:	blt	2309c <main@@Base+0xd1e4>
   22fb8:	ldrb	r0, [r1]
   22fbc:	cmp	r0, #32
   22fc0:	bls	23088 <main@@Base+0xd1d0>
   22fc4:	mov	r7, r1
   22fc8:	cmp	r7, sl
   22fcc:	bne	230b4 <main@@Base+0xd1fc>
   22fd0:	b	230ec <main@@Base+0xd234>
   22fd4:	movw	r0, #0
   22fd8:	bfc	r7, #0, #16
   22fdc:	movt	r0, #30051	; 0x7563
   22fe0:	teq	r7, r0
   22fe4:	bne	233d8 <main@@Base+0xd520>
   22fe8:	cmp	lr, #3
   22fec:	mov	r7, r9
   22ff0:	blt	2336c <main@@Base+0xd4b4>
   22ff4:	ldrb	r0, [r9, #2]
   22ff8:	mov	r7, r9
   22ffc:	cmp	r0, #34	; 0x22
   23000:	bne	2336c <main@@Base+0xd4b4>
   23004:	add	r1, r9, #3
   23008:	sub	r0, sl, r1
   2300c:	cmp	r0, #2
   23010:	blt	23198 <main@@Base+0xd2e0>
   23014:	ldrb	r0, [r1]
   23018:	cmp	r0, #32
   2301c:	bls	23184 <main@@Base+0xd2cc>
   23020:	mov	r7, r1
   23024:	cmp	r7, sl
   23028:	bne	231b0 <main@@Base+0xd2f8>
   2302c:	b	231e8 <main@@Base+0xd330>
   23030:	mov	r4, sl
   23034:	cmp	r6, r4
   23038:	bne	23148 <main@@Base+0xd290>
   2303c:	b	23114 <main@@Base+0xd25c>
   23040:	mov	r4, r6
   23044:	cmp	r6, r4
   23048:	bne	23148 <main@@Base+0xd290>
   2304c:	b	23114 <main@@Base+0xd25c>
   23050:	subs	r2, r0, #128	; 0x80
   23054:	sbcs	r1, r1, #0
   23058:	bcc	23104 <main@@Base+0xd24c>
   2305c:	mov	r0, r8
   23060:	mov	r1, r4
   23064:	mov	r2, sl
   23068:	mov	r3, #7
   2306c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23070:	mov	r4, r0
   23074:	cmp	r6, r4
   23078:	bne	23148 <main@@Base+0xd290>
   2307c:	b	23114 <main@@Base+0xd25c>
   23080:	rsb	r7, r0, #0
   23084:	b	23108 <main@@Base+0xd250>
   23088:	bne	2309c <main@@Base+0xd1e4>
   2308c:	mov	r7, r9
   23090:	ldrb	r0, [r7, #5]!
   23094:	cmp	r0, #32
   23098:	bhi	230ac <main@@Base+0xd1f4>
   2309c:	mov	r0, r8
   230a0:	mov	r2, sl
   230a4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   230a8:	mov	r7, r0
   230ac:	cmp	r7, sl
   230b0:	beq	230ec <main@@Base+0xd234>
   230b4:	ldrb	r0, [r7]
   230b8:	cmp	r0, #58	; 0x3a
   230bc:	bne	230ec <main@@Base+0xd234>
   230c0:	add	r1, r7, #1
   230c4:	sub	r0, sl, r1
   230c8:	cmp	r0, #2
   230cc:	blt	23210 <main@@Base+0xd358>
   230d0:	ldrb	r0, [r1]
   230d4:	cmp	r0, #32
   230d8:	bls	23200 <main@@Base+0xd348>
   230dc:	mov	r7, r1
   230e0:	cmp	r9, r7
   230e4:	bne	23228 <main@@Base+0xd370>
   230e8:	b	233d8 <main@@Base+0xd520>
   230ec:	mov	r0, r8
   230f0:	mov	r1, r7
   230f4:	mov	r2, sl
   230f8:	mov	r3, #4
   230fc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23100:	b	2321c <main@@Base+0xd364>
   23104:	mov	r7, r0
   23108:	strb	r7, [sp, #11]
   2310c:	cmp	r6, r4
   23110:	bne	23148 <main@@Base+0xd290>
   23114:	add	r0, sp, #11
   23118:	mov	r1, r6
   2311c:	mov	r2, sl
   23120:	str	r0, [sp]
   23124:	mov	r0, r8
   23128:	ldr	r3, [pc, #1696]	; 237d0 <main@@Base+0xd918>
   2312c:	add	r3, pc, r3
   23130:	bl	21b94 <main@@Base+0xbcdc>
   23134:	mov	r4, r0
   23138:	cmp	r0, r6
   2313c:	cmpne	r4, sl
   23140:	beq	229e4 <main@@Base+0xcb2c>
   23144:	ldrb	r7, [sp, #11]
   23148:	uxtb	r0, r7
   2314c:	cmp	r0, #2
   23150:	bne	23160 <main@@Base+0xd2a8>
   23154:	ldrb	r0, [r8, #8]
   23158:	tst	r0, #2
   2315c:	beq	234c4 <main@@Base+0xd60c>
   23160:	ldr	r0, [r8]
   23164:	mov	r1, #0
   23168:	mov	r2, #1
   2316c:	mov	r3, #1
   23170:	bl	3063c <flatcc_builder_table_add@@Base>
   23174:	cmp	r0, #0
   23178:	beq	229e4 <main@@Base+0xcb2c>
   2317c:	strb	r7, [r0]
   23180:	b	234c4 <main@@Base+0xd60c>
   23184:	bne	23198 <main@@Base+0xd2e0>
   23188:	mov	r7, r9
   2318c:	ldrb	r0, [r7, #4]!
   23190:	cmp	r0, #32
   23194:	bhi	231a8 <main@@Base+0xd2f0>
   23198:	mov	r0, r8
   2319c:	mov	r2, sl
   231a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   231a4:	mov	r7, r0
   231a8:	cmp	r7, sl
   231ac:	beq	231e8 <main@@Base+0xd330>
   231b0:	ldrb	r0, [r7]
   231b4:	cmp	r0, #58	; 0x3a
   231b8:	bne	231e8 <main@@Base+0xd330>
   231bc:	add	r1, r7, #1
   231c0:	sub	r0, sl, r1
   231c4:	cmp	r0, #2
   231c8:	blt	2335c <main@@Base+0xd4a4>
   231cc:	ldrb	r0, [r1]
   231d0:	cmp	r0, #32
   231d4:	bls	2334c <main@@Base+0xd494>
   231d8:	mov	r7, r1
   231dc:	cmp	r9, r7
   231e0:	bne	23374 <main@@Base+0xd4bc>
   231e4:	b	233d8 <main@@Base+0xd520>
   231e8:	mov	r0, r8
   231ec:	mov	r1, r7
   231f0:	mov	r2, sl
   231f4:	mov	r3, #4
   231f8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   231fc:	b	23368 <main@@Base+0xd4b0>
   23200:	bne	23210 <main@@Base+0xd358>
   23204:	ldrb	r0, [r7, #2]!
   23208:	cmp	r0, #32
   2320c:	bhi	23220 <main@@Base+0xd368>
   23210:	mov	r0, r8
   23214:	mov	r2, sl
   23218:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2321c:	mov	r7, r0
   23220:	cmp	r9, r7
   23224:	beq	233d8 <main@@Base+0xd520>
   23228:	mov	r6, #0
   2322c:	cmp	r7, sl
   23230:	str	r6, [sp, #20]
   23234:	str	r6, [sp, #16]
   23238:	strb	r6, [sp, #11]
   2323c:	str	r6, [sp, #12]
   23240:	beq	2328c <main@@Base+0xd3d4>
   23244:	add	r0, sp, #16
   23248:	mov	r1, r7
   2324c:	mov	r2, sl
   23250:	add	r3, sp, #12
   23254:	str	r0, [sp]
   23258:	mov	r0, r8
   2325c:	bl	362a4 <flatcc_json_parser_integer@@Base>
   23260:	cmp	r0, r7
   23264:	beq	2329c <main@@Base+0xd3e4>
   23268:	mov	r4, r0
   2326c:	ldr	r0, [sp, #12]
   23270:	cmp	r0, #0
   23274:	beq	232ac <main@@Base+0xd3f4>
   23278:	mov	r0, r8
   2327c:	mov	r1, r4
   23280:	mov	r2, sl
   23284:	mov	r3, #8
   23288:	b	232d0 <main@@Base+0xd418>
   2328c:	mov	r4, sl
   23290:	cmp	r7, r4
   23294:	bne	23314 <main@@Base+0xd45c>
   23298:	b	232e0 <main@@Base+0xd428>
   2329c:	mov	r4, r7
   232a0:	cmp	r7, r4
   232a4:	bne	23314 <main@@Base+0xd45c>
   232a8:	b	232e0 <main@@Base+0xd428>
   232ac:	ldr	r0, [sp, #16]
   232b0:	ldr	r1, [sp, #20]
   232b4:	subs	r2, r0, #256	; 0x100
   232b8:	sbcs	r1, r1, #0
   232bc:	bcc	23338 <main@@Base+0xd480>
   232c0:	mov	r0, r8
   232c4:	mov	r1, r4
   232c8:	mov	r2, sl
   232cc:	mov	r3, #7
   232d0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   232d4:	mov	r4, r0
   232d8:	cmp	r7, r4
   232dc:	bne	23314 <main@@Base+0xd45c>
   232e0:	add	r0, sp, #11
   232e4:	mov	r1, r7
   232e8:	mov	r2, sl
   232ec:	str	r0, [sp]
   232f0:	mov	r0, r8
   232f4:	ldr	r3, [pc, #1240]	; 237d4 <main@@Base+0xd91c>
   232f8:	add	r3, pc, r3
   232fc:	bl	21d80 <main@@Base+0xbec8>
   23300:	mov	r4, r0
   23304:	cmp	r0, r7
   23308:	cmpne	r4, sl
   2330c:	beq	229e4 <main@@Base+0xcb2c>
   23310:	ldrb	r6, [sp, #11]
   23314:	uxtb	r0, r6
   23318:	cmp	r0, #2
   2331c:	bne	2332c <main@@Base+0xd474>
   23320:	ldrb	r0, [r8, #8]
   23324:	tst	r0, #2
   23328:	beq	234c4 <main@@Base+0xd60c>
   2332c:	ldr	r0, [r8]
   23330:	mov	r1, #3
   23334:	b	234ac <main@@Base+0xd5f4>
   23338:	mov	r6, r0
   2333c:	strb	r0, [sp, #11]
   23340:	cmp	r7, r4
   23344:	bne	23314 <main@@Base+0xd45c>
   23348:	b	232e0 <main@@Base+0xd428>
   2334c:	bne	2335c <main@@Base+0xd4a4>
   23350:	ldrb	r0, [r7, #2]!
   23354:	cmp	r0, #32
   23358:	bhi	2336c <main@@Base+0xd4b4>
   2335c:	mov	r0, r8
   23360:	mov	r2, sl
   23364:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   23368:	mov	r7, r0
   2336c:	cmp	r9, r7
   23370:	beq	233d8 <main@@Base+0xd520>
   23374:	mov	r6, #0
   23378:	cmp	r7, sl
   2337c:	str	r6, [sp, #20]
   23380:	str	r6, [sp, #16]
   23384:	strb	r6, [sp, #11]
   23388:	str	r6, [sp, #12]
   2338c:	beq	233f0 <main@@Base+0xd538>
   23390:	add	r0, sp, #16
   23394:	mov	r1, r7
   23398:	mov	r2, sl
   2339c:	add	r3, sp, #12
   233a0:	str	r0, [sp]
   233a4:	mov	r0, r8
   233a8:	bl	362a4 <flatcc_json_parser_integer@@Base>
   233ac:	cmp	r0, r7
   233b0:	beq	23400 <main@@Base+0xd548>
   233b4:	mov	r4, r0
   233b8:	ldr	r0, [sp, #12]
   233bc:	cmp	r0, #0
   233c0:	beq	23410 <main@@Base+0xd558>
   233c4:	mov	r0, r8
   233c8:	mov	r1, r4
   233cc:	mov	r2, sl
   233d0:	mov	r3, #8
   233d4:	b	23434 <main@@Base+0xd57c>
   233d8:	mov	r0, r8
   233dc:	mov	r1, r9
   233e0:	mov	r2, sl
   233e4:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   233e8:	mov	r4, r0
   233ec:	b	234c4 <main@@Base+0xd60c>
   233f0:	mov	r4, sl
   233f4:	cmp	r7, r4
   233f8:	bne	2348c <main@@Base+0xd5d4>
   233fc:	b	23444 <main@@Base+0xd58c>
   23400:	mov	r4, r7
   23404:	cmp	r7, r4
   23408:	bne	2348c <main@@Base+0xd5d4>
   2340c:	b	23444 <main@@Base+0xd58c>
   23410:	ldr	r0, [sp, #16]
   23414:	ldr	r1, [sp, #20]
   23418:	subs	r2, r0, #256	; 0x100
   2341c:	sbcs	r1, r1, #0
   23420:	bcc	2347c <main@@Base+0xd5c4>
   23424:	mov	r0, r8
   23428:	mov	r1, r4
   2342c:	mov	r2, sl
   23430:	mov	r3, #7
   23434:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23438:	mov	r4, r0
   2343c:	cmp	r7, r4
   23440:	bne	2348c <main@@Base+0xd5d4>
   23444:	add	r0, sp, #11
   23448:	mov	r1, r7
   2344c:	mov	r2, sl
   23450:	str	r0, [sp]
   23454:	mov	r0, r8
   23458:	ldr	r3, [pc, #888]	; 237d8 <main@@Base+0xd920>
   2345c:	add	r3, pc, r3
   23460:	bl	21d80 <main@@Base+0xbec8>
   23464:	mov	r4, r0
   23468:	cmp	r0, r7
   2346c:	cmpne	r4, sl
   23470:	beq	229e4 <main@@Base+0xcb2c>
   23474:	ldrb	r6, [sp, #11]
   23478:	b	2348c <main@@Base+0xd5d4>
   2347c:	mov	r6, r0
   23480:	strb	r0, [sp, #11]
   23484:	cmp	r7, r4
   23488:	beq	23444 <main@@Base+0xd58c>
   2348c:	uxtb	r0, r6
   23490:	cmp	r0, #2
   23494:	bne	234a4 <main@@Base+0xd5ec>
   23498:	ldrb	r0, [r8, #8]
   2349c:	tst	r0, #2
   234a0:	beq	234c4 <main@@Base+0xd60c>
   234a4:	ldr	r0, [r8]
   234a8:	mov	r1, #2
   234ac:	mov	r2, #1
   234b0:	mov	r3, #1
   234b4:	bl	3063c <flatcc_builder_table_add@@Base>
   234b8:	cmp	r0, #0
   234bc:	beq	229e4 <main@@Base+0xcb2c>
   234c0:	strb	r6, [r0]
   234c4:	sub	r0, sl, r4
   234c8:	cmp	r0, #2
   234cc:	blt	23500 <main@@Base+0xd648>
   234d0:	ldrb	r0, [r4]
   234d4:	cmp	r0, #32
   234d8:	bls	234ec <main@@Base+0xd634>
   234dc:	mov	r2, r4
   234e0:	cmp	r2, sl
   234e4:	bne	2351c <main@@Base+0xd664>
   234e8:	b	23708 <main@@Base+0xd850>
   234ec:	bne	23500 <main@@Base+0xd648>
   234f0:	mov	r2, r4
   234f4:	ldrb	r0, [r2, #1]!
   234f8:	cmp	r0, #32
   234fc:	bhi	23514 <main@@Base+0xd65c>
   23500:	mov	r0, r8
   23504:	mov	r1, r4
   23508:	mov	r2, sl
   2350c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   23510:	mov	r2, r0
   23514:	cmp	r2, sl
   23518:	beq	23708 <main@@Base+0xd850>
   2351c:	ldrb	r0, [r2]
   23520:	cmp	r0, #44	; 0x2c
   23524:	bne	23764 <main@@Base+0xd8ac>
   23528:	add	r1, r2, #1
   2352c:	sub	r0, sl, r1
   23530:	cmp	r0, #2
   23534:	blt	23564 <main@@Base+0xd6ac>
   23538:	ldrb	r0, [r1]
   2353c:	cmp	r0, #32
   23540:	bls	23554 <main@@Base+0xd69c>
   23544:	mov	r2, r1
   23548:	cmp	r2, sl
   2354c:	bne	2357c <main@@Base+0xd6c4>
   23550:	b	23710 <main@@Base+0xd858>
   23554:	bne	23564 <main@@Base+0xd6ac>
   23558:	ldrb	r0, [r2, #2]!
   2355c:	cmp	r0, #32
   23560:	bhi	23574 <main@@Base+0xd6bc>
   23564:	mov	r0, r8
   23568:	mov	r2, sl
   2356c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   23570:	mov	r2, r0
   23574:	cmp	r2, sl
   23578:	beq	23710 <main@@Base+0xd858>
   2357c:	ldrb	r0, [r2]
   23580:	cmp	r0, #125	; 0x7d
   23584:	bne	22aac <main@@Base+0xcbf4>
   23588:	b	2376c <main@@Base+0xd8b4>
   2358c:	bne	2359c <main@@Base+0xd6e4>
   23590:	ldrb	r0, [r4, #2]!
   23594:	cmp	r0, #32
   23598:	bhi	235ac <main@@Base+0xd6f4>
   2359c:	mov	r0, r8
   235a0:	mov	r2, sl
   235a4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   235a8:	mov	r4, r0
   235ac:	cmp	r4, sl
   235b0:	mov	r3, sl
   235b4:	beq	235f8 <main@@Base+0xd740>
   235b8:	ldrb	r0, [r4]
   235bc:	cmp	r0, #125	; 0x7d
   235c0:	bne	235f4 <main@@Base+0xd73c>
   235c4:	add	r1, r4, #1
   235c8:	sub	r0, sl, r1
   235cc:	cmp	r0, #2
   235d0:	blt	237b8 <main@@Base+0xd900>
   235d4:	ldrb	r0, [r1]
   235d8:	cmp	r0, #32
   235dc:	bhi	23788 <main@@Base+0xd8d0>
   235e0:	bne	237b8 <main@@Base+0xd900>
   235e4:	ldrb	r0, [r4, #2]!
   235e8:	cmp	r0, #32
   235ec:	bhi	229d8 <main@@Base+0xcb20>
   235f0:	b	237b8 <main@@Base+0xd900>
   235f4:	mov	r3, r4
   235f8:	cmp	r3, sl
   235fc:	mov	r1, sl
   23600:	beq	23630 <main@@Base+0xd778>
   23604:	ldrb	r0, [r3]
   23608:	cmp	r0, #34	; 0x22
   2360c:	bne	23618 <main@@Base+0xd760>
   23610:	add	r1, r3, #1
   23614:	b	23630 <main@@Base+0xd778>
   23618:	mov	r1, r3
   2361c:	mov	r0, r8
   23620:	mov	r2, sl
   23624:	mov	r3, #5
   23628:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2362c:	mov	r1, r0
   23630:	mov	r0, r8
   23634:	mov	r2, sl
   23638:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   2363c:	mov	r2, r0
   23640:	sub	r0, sl, r0
   23644:	cmp	r0, #2
   23648:	blt	2367c <main@@Base+0xd7c4>
   2364c:	ldrb	r0, [r2]
   23650:	cmp	r0, #32
   23654:	bls	23668 <main@@Base+0xd7b0>
   23658:	mov	r3, r2
   2365c:	cmp	r3, sl
   23660:	bne	23698 <main@@Base+0xd7e0>
   23664:	b	23708 <main@@Base+0xd850>
   23668:	bne	2367c <main@@Base+0xd7c4>
   2366c:	mov	r3, r2
   23670:	ldrb	r0, [r3, #1]!
   23674:	cmp	r0, #32
   23678:	bhi	23690 <main@@Base+0xd7d8>
   2367c:	mov	r1, r2
   23680:	mov	r0, r8
   23684:	mov	r2, sl
   23688:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2368c:	mov	r3, r0
   23690:	cmp	r3, sl
   23694:	beq	23708 <main@@Base+0xd850>
   23698:	ldrb	r0, [r3]
   2369c:	cmp	r0, #44	; 0x2c
   236a0:	bne	2371c <main@@Base+0xd864>
   236a4:	add	r1, r3, #1
   236a8:	sub	r0, sl, r1
   236ac:	cmp	r0, #2
   236b0:	blt	236e0 <main@@Base+0xd828>
   236b4:	ldrb	r0, [r1]
   236b8:	cmp	r0, #32
   236bc:	bls	236d0 <main@@Base+0xd818>
   236c0:	mov	r3, r1
   236c4:	cmp	r3, sl
   236c8:	bne	236f8 <main@@Base+0xd840>
   236cc:	b	23710 <main@@Base+0xd858>
   236d0:	bne	236e0 <main@@Base+0xd828>
   236d4:	ldrb	r0, [r3, #2]!
   236d8:	cmp	r0, #32
   236dc:	bhi	236f0 <main@@Base+0xd838>
   236e0:	mov	r0, r8
   236e4:	mov	r2, sl
   236e8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   236ec:	mov	r3, r0
   236f0:	cmp	r3, sl
   236f4:	beq	23710 <main@@Base+0xd858>
   236f8:	ldrb	r0, [r3]
   236fc:	cmp	r0, #125	; 0x7d
   23700:	bne	235f8 <main@@Base+0xd740>
   23704:	b	23724 <main@@Base+0xd86c>
   23708:	mov	r4, sl
   2370c:	b	229d8 <main@@Base+0xcb20>
   23710:	mov	r0, r8
   23714:	mov	r1, sl
   23718:	b	23798 <main@@Base+0xd8e0>
   2371c:	cmp	r0, #125	; 0x7d
   23720:	bne	23758 <main@@Base+0xd8a0>
   23724:	add	r1, r3, #1
   23728:	sub	r0, sl, r1
   2372c:	cmp	r0, #2
   23730:	blt	237b8 <main@@Base+0xd900>
   23734:	ldrb	r0, [r1]
   23738:	cmp	r0, #32
   2373c:	bhi	23788 <main@@Base+0xd8d0>
   23740:	bne	237b8 <main@@Base+0xd900>
   23744:	ldrb	r0, [r3, #2]!
   23748:	mov	r4, r3
   2374c:	cmp	r0, #32
   23750:	bhi	229d8 <main@@Base+0xcb20>
   23754:	b	237b8 <main@@Base+0xd900>
   23758:	mov	r0, r8
   2375c:	mov	r1, r3
   23760:	b	23798 <main@@Base+0xd8e0>
   23764:	cmp	r0, #125	; 0x7d
   23768:	bne	23790 <main@@Base+0xd8d8>
   2376c:	add	r1, r2, #1
   23770:	sub	r0, sl, r1
   23774:	cmp	r0, #2
   23778:	blt	237b8 <main@@Base+0xd900>
   2377c:	ldrb	r0, [r1]
   23780:	cmp	r0, #32
   23784:	bls	237a4 <main@@Base+0xd8ec>
   23788:	mov	r4, r1
   2378c:	b	229d8 <main@@Base+0xcb20>
   23790:	mov	r0, r8
   23794:	mov	r1, r2
   23798:	mov	r2, sl
   2379c:	mov	r3, #10
   237a0:	b	229d0 <main@@Base+0xcb18>
   237a4:	bne	237b8 <main@@Base+0xd900>
   237a8:	ldrb	r0, [r2, #2]!
   237ac:	mov	r4, r2
   237b0:	cmp	r0, #32
   237b4:	bhi	229d8 <main@@Base+0xcb20>
   237b8:	mov	r0, r8
   237bc:	mov	r2, sl
   237c0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   237c4:	b	229d4 <main@@Base+0xcb1c>
   237c8:	strdeq	r8, [r2], -r5
   237cc:	andeq	r9, r3, ip, asr r3
   237d0:	ldrdeq	r9, [r3], -r0
   237d4:	andeq	r8, r3, r4, lsl pc
   237d8:			; <UNDEFINED> instruction: 0x00038dbc
   237dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   237e0:	add	fp, sp, #28
   237e4:	sub	sp, sp, #20
   237e8:	mov	r8, r1
   237ec:	sub	r1, r2, r1
   237f0:	cmp	r1, #8
   237f4:	movcs	r1, #8
   237f8:	sub	r1, r1, #1
   237fc:	cmp	r1, #7
   23800:	bhi	23a08 <main@@Base+0xdb50>
   23804:	str	r2, [sp, #16]
   23808:	str	r0, [sp, #12]
   2380c:	add	r4, pc, #40	; 0x28
   23810:	mov	lr, r3
   23814:	mov	sl, #0
   23818:	mov	ip, #0
   2381c:	mov	r5, #0
   23820:	mov	r2, #0
   23824:	mov	r3, #0
   23828:	mov	r7, #0
   2382c:	mov	r6, #0
   23830:	ldr	r0, [r4, r1, lsl #2]
   23834:	mov	r1, #0
   23838:	add	pc, r4, r0
   2383c:	andeq	r0, r0, r4, rrx
   23840:	andeq	r0, r0, ip, asr r0
   23844:	andeq	r0, r0, r4, asr r0
   23848:	andeq	r0, r0, ip, asr #32
   2384c:	andeq	r0, r0, r0, asr #32
   23850:	andeq	r0, r0, r4, lsr r0
   23854:	andeq	r0, r0, r4, lsr #32
   23858:	andeq	r0, r0, r0, lsr #32
   2385c:	ldrb	ip, [r8, #7]
   23860:	ldrb	r0, [r8, #6]
   23864:	mov	r5, sl
   23868:	orr	r0, ip, r0, lsl #8
   2386c:	mov	sl, r0
   23870:	ldrb	r0, [r8, #5]
   23874:	mov	r1, r5
   23878:	orr	sl, sl, r0, lsl #16
   2387c:	ldrb	r0, [r8, #4]
   23880:	mov	r2, r1
   23884:	orr	sl, sl, r0, lsl #24
   23888:	ldrb	r0, [r8, #3]
   2388c:	orr	r3, r0, r2
   23890:	ldrb	r0, [r8, #2]
   23894:	orr	r7, r3, r0, lsl #8
   23898:	ldrb	r0, [r8, #1]
   2389c:	orr	r6, r7, r0, lsl #16
   238a0:	ldrb	r0, [r8]
   238a4:	movw	r1, #28275	; 0x6e73
   238a8:	ldr	r5, [fp, #12]
   238ac:	ldr	r7, [fp, #8]
   238b0:	movt	r1, #19823	; 0x4d6f
   238b4:	orr	r9, r6, r0, lsl #24
   238b8:	movw	r0, #29184	; 0x7200
   238bc:	movt	r0, #29797	; 0x7465
   238c0:	subs	r2, sl, r0
   238c4:	sbcs	r2, r9, r1
   238c8:	bcs	23910 <main@@Base+0xda58>
   238cc:	movw	r1, #29696	; 0x7400
   238d0:	bic	r0, r9, #255	; 0xff
   238d4:	movt	r1, #16748	; 0x416c
   238d8:	teq	r0, r1
   238dc:	bne	23a08 <main@@Base+0xdb50>
   238e0:	ldr	r0, [sp, #12]
   238e4:	ldr	r2, [sp, #16]
   238e8:	mov	r1, r8
   238ec:	mov	r3, #3
   238f0:	mov	r4, lr
   238f4:	str	r5, [sp]
   238f8:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   238fc:	cmp	r0, r8
   23900:	beq	23a08 <main@@Base+0xdb50>
   23904:	mov	r1, #0
   23908:	mov	r2, #4
   2390c:	b	23950 <main@@Base+0xda98>
   23910:	add	r2, r0, #50	; 0x32
   23914:	eor	r1, r9, r1
   23918:	eor	r2, sl, r2
   2391c:	orrs	r2, r2, r1
   23920:	bne	23960 <main@@Base+0xdaa8>
   23924:	ldr	r0, [sp, #12]
   23928:	ldr	r2, [sp, #16]
   2392c:	mov	r1, r8
   23930:	mov	r3, #8
   23934:	mov	r4, lr
   23938:	str	r5, [sp]
   2393c:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   23940:	cmp	r0, r8
   23944:	beq	23a08 <main@@Base+0xdb50>
   23948:	mov	r1, #0
   2394c:	mov	r2, #3
   23950:	str	r2, [r7]
   23954:	str	r1, [r7, #4]
   23958:	str	r1, [r4]
   2395c:	b	23a04 <main@@Base+0xdb4c>
   23960:	ldr	r6, [sp, #16]
   23964:	ldr	r7, [sp, #12]
   23968:	bic	r2, sl, #255	; 0xff
   2396c:	eor	r0, r2, r0
   23970:	orrs	r0, r0, r1
   23974:	bne	239b8 <main@@Base+0xdb00>
   23978:	mov	r0, r7
   2397c:	mov	r1, r8
   23980:	mov	r2, r6
   23984:	mov	r3, #7
   23988:	str	r5, [sp]
   2398c:	mov	r4, lr
   23990:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   23994:	mov	lr, r4
   23998:	cmp	r0, r8
   2399c:	beq	239b8 <main@@Base+0xdb00>
   239a0:	ldr	r3, [fp, #8]
   239a4:	mov	r2, #1
   239a8:	mov	r1, #0
   239ac:	str	r2, [r3]
   239b0:	str	r1, [r3, #4]
   239b4:	b	23a00 <main@@Base+0xdb48>
   239b8:	movw	r0, #20037	; 0x4e45
   239bc:	movt	r0, #20047	; 0x4e4f
   239c0:	teq	r9, r0
   239c4:	bne	23a14 <main@@Base+0xdb5c>
   239c8:	mov	r0, r7
   239cc:	mov	r1, r8
   239d0:	mov	r2, r6
   239d4:	mov	r3, #4
   239d8:	str	r5, [sp]
   239dc:	mov	r4, lr
   239e0:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   239e4:	mov	lr, r4
   239e8:	cmp	r0, r8
   239ec:	beq	23a14 <main@@Base+0xdb5c>
   239f0:	ldr	r2, [fp, #8]
   239f4:	mov	r1, #0
   239f8:	str	r1, [r2]
   239fc:	str	r1, [r2, #4]
   23a00:	str	r1, [lr]
   23a04:	mov	r8, r0
   23a08:	mov	r0, r8
   23a0c:	sub	sp, fp, #28
   23a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a14:	movw	r0, #28016	; 0x6d70
   23a18:	movw	r1, #29556	; 0x7374
   23a1c:	movt	r0, #21353	; 0x5369
   23a20:	movt	r1, #21605	; 0x5465
   23a24:	eor	r0, sl, r0
   23a28:	eor	r1, r9, r1
   23a2c:	orrs	r0, r0, r1
   23a30:	bne	23a08 <main@@Base+0xdb50>
   23a34:	str	lr, [sp, #8]
   23a38:	add	lr, r8, #8
   23a3c:	sub	r0, r6, lr
   23a40:	cmp	r0, #8
   23a44:	movcs	r0, #8
   23a48:	sub	r0, r0, #1
   23a4c:	cmp	r0, #7
   23a50:	bhi	23a08 <main@@Base+0xdb50>
   23a54:	add	r4, pc, #36	; 0x24
   23a58:	mov	sl, #0
   23a5c:	mov	ip, #0
   23a60:	mov	r9, #0
   23a64:	mov	r3, #0
   23a68:	mov	r2, #0
   23a6c:	mov	r6, #0
   23a70:	mov	r7, #0
   23a74:	ldr	r1, [r4, r0, lsl #2]
   23a78:	mov	r0, #0
   23a7c:	add	pc, r4, r1
   23a80:	andeq	r0, r0, r4, rrx
   23a84:	andeq	r0, r0, ip, asr r0
   23a88:	andeq	r0, r0, r4, asr r0
   23a8c:	andeq	r0, r0, ip, asr #32
   23a90:	andeq	r0, r0, r0, asr #32
   23a94:	andeq	r0, r0, r4, lsr r0
   23a98:	andeq	r0, r0, r4, lsr #32
   23a9c:	andeq	r0, r0, r0, lsr #32
   23aa0:	ldrb	ip, [r8, #15]
   23aa4:	ldrb	r0, [r8, #14]
   23aa8:	mov	r9, sl
   23aac:	orr	r0, ip, r0, lsl #8
   23ab0:	mov	sl, r0
   23ab4:	ldrb	r0, [r8, #13]
   23ab8:	orr	sl, sl, r0, lsl #16
   23abc:	mov	r0, r9
   23ac0:	ldrb	r1, [r8, #12]
   23ac4:	mov	r3, r0
   23ac8:	orr	sl, sl, r1, lsl #24
   23acc:	ldrb	r0, [r8, #11]
   23ad0:	orr	r2, r0, r3
   23ad4:	ldrb	r0, [r8, #10]
   23ad8:	orr	r6, r2, r0, lsl #8
   23adc:	ldrb	r0, [r8, #9]
   23ae0:	orr	r7, r6, r0, lsl #16
   23ae4:	ldrb	r1, [lr]
   23ae8:	movw	r0, #25943	; 0x6557
   23aec:	movw	r2, #21601	; 0x5461
   23af0:	movt	r0, #25196	; 0x626c
   23af4:	movt	r2, #27749	; 0x6c65
   23af8:	eor	r0, sl, r0
   23afc:	orr	r1, r7, r1, lsl #24
   23b00:	eor	r1, r1, r2
   23b04:	orrs	r0, r0, r1
   23b08:	bne	23a08 <main@@Base+0xdb50>
   23b0c:	ldr	r0, [sp, #16]
   23b10:	add	r9, r8, #16
   23b14:	sub	r0, r0, r9
   23b18:	cmp	r0, #8
   23b1c:	movcs	r0, #8
   23b20:	sub	r0, r0, #1
   23b24:	cmp	r0, #7
   23b28:	bhi	23a08 <main@@Base+0xdb50>
   23b2c:	add	r4, pc, #32
   23b30:	mov	lr, #0
   23b34:	mov	ip, #0
   23b38:	mov	r2, #0
   23b3c:	mov	r3, #0
   23b40:	mov	r7, #0
   23b44:	mov	r6, #0
   23b48:	ldr	r1, [r4, r0, lsl #2]
   23b4c:	mov	r0, #0
   23b50:	add	pc, r4, r1
   23b54:	andeq	r0, r0, ip, asr r0
   23b58:	andeq	r0, r0, r4, asr r0
   23b5c:	andeq	r0, r0, ip, asr #32
   23b60:	andeq	r0, r0, r4, asr #32
   23b64:	andeq	r0, r0, r8, lsr r0
   23b68:	andeq	r0, r0, r8, lsr #32
   23b6c:	andeq	r0, r0, r0, lsr #32
   23b70:	andeq	r0, r0, r0, lsr #32
   23b74:	ldrb	r0, [r8, #22]
   23b78:	lsl	ip, r0, #8
   23b7c:	ldrb	r0, [r8, #21]
   23b80:	orr	r1, ip, r0, lsl #16
   23b84:	mov	r0, lr
   23b88:	mov	lr, r1
   23b8c:	ldrb	r1, [r8, #20]
   23b90:	mov	r2, r0
   23b94:	orr	lr, lr, r1, lsl #24
   23b98:	ldrb	r0, [r8, #19]
   23b9c:	orr	r3, r0, r2
   23ba0:	ldrb	r0, [r8, #18]
   23ba4:	orr	r7, r3, r0, lsl #8
   23ba8:	ldrb	r0, [r8, #17]
   23bac:	orr	r6, r7, r0, lsl #16
   23bb0:	ldrb	r1, [r9]
   23bb4:	movw	r0, #27904	; 0x6d00
   23bb8:	movw	r2, #26693	; 0x6845
   23bbc:	movt	r0, #28277	; 0x6e75
   23bc0:	movt	r2, #26996	; 0x6974
   23bc4:	eor	r0, lr, r0
   23bc8:	orr	r1, r6, r1, lsl #24
   23bcc:	eor	r1, r1, r2
   23bd0:	orrs	r0, r0, r1
   23bd4:	bne	23a08 <main@@Base+0xdb50>
   23bd8:	ldr	r0, [sp, #12]
   23bdc:	ldr	r2, [sp, #16]
   23be0:	mov	r1, r9
   23be4:	mov	r3, #7
   23be8:	str	r5, [sp]
   23bec:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   23bf0:	ldr	r3, [fp, #8]
   23bf4:	cmp	r0, r9
   23bf8:	beq	23a08 <main@@Base+0xdb50>
   23bfc:	mov	r2, #2
   23c00:	mov	r1, #0
   23c04:	str	r2, [r3]
   23c08:	str	r1, [r3, #4]
   23c0c:	ldr	r2, [sp, #8]
   23c10:	str	r1, [r2]
   23c14:	b	23a04 <main@@Base+0xdb4c>
   23c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23c1c:	add	fp, sp, #28
   23c20:	sub	sp, sp, #44	; 0x2c
   23c24:	mov	r7, r2
   23c28:	ldr	r2, [fp, #8]
   23c2c:	mov	r5, r0
   23c30:	mov	r0, #0
   23c34:	mov	sl, r3
   23c38:	cmp	r1, r7
   23c3c:	strb	r0, [r2]
   23c40:	beq	23c6c <main@@Base+0xddb4>
   23c44:	ldrb	r0, [r1]
   23c48:	cmp	r0, #34	; 0x22
   23c4c:	bne	23c58 <main@@Base+0xdda0>
   23c50:	add	r1, r1, #1
   23c54:	b	23c6c <main@@Base+0xddb4>
   23c58:	mov	r0, r5
   23c5c:	mov	r2, r7
   23c60:	mov	r3, #5
   23c64:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23c68:	mov	r1, r0
   23c6c:	sub	r0, r7, r1
   23c70:	cmp	r0, #2
   23c74:	blt	23ca8 <main@@Base+0xddf0>
   23c78:	ldrb	r0, [r1]
   23c7c:	cmp	r0, #32
   23c80:	bls	23c94 <main@@Base+0xdddc>
   23c84:	mov	r6, r1
   23c88:	cmp	r6, r7
   23c8c:	bne	23cc0 <main@@Base+0xde08>
   23c90:	b	23da0 <main@@Base+0xdee8>
   23c94:	bne	23ca8 <main@@Base+0xddf0>
   23c98:	mov	r6, r1
   23c9c:	ldrb	r0, [r6, #1]!
   23ca0:	cmp	r0, #32
   23ca4:	bhi	23cb8 <main@@Base+0xde00>
   23ca8:	mov	r0, r5
   23cac:	mov	r2, r7
   23cb0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   23cb4:	mov	r6, r0
   23cb8:	cmp	r6, r7
   23cbc:	beq	23da0 <main@@Base+0xdee8>
   23cc0:	add	r0, sl, #4
   23cc4:	mov	r1, #0
   23cc8:	add	r8, sp, #32
   23ccc:	add	r9, sp, #28
   23cd0:	str	sl, [sp, #16]
   23cd4:	str	r1, [sp, #20]
   23cd8:	str	r0, [sp, #12]
   23cdc:	ldr	r4, [sl]
   23ce0:	mov	sl, r0
   23ce4:	add	r0, sp, #24
   23ce8:	mov	r1, r6
   23cec:	mov	r2, r7
   23cf0:	mov	r3, r9
   23cf4:	str	r8, [sp]
   23cf8:	str	r0, [sp, #4]
   23cfc:	mov	r0, r5
   23d00:	blx	r4
   23d04:	cmp	r0, r7
   23d08:	beq	23da0 <main@@Base+0xdee8>
   23d0c:	mov	r4, r0
   23d10:	cmp	r0, r6
   23d14:	bne	23d28 <main@@Base+0xde70>
   23d18:	ldr	r4, [sl], #4
   23d1c:	cmp	r4, #0
   23d20:	bne	23ce4 <main@@Base+0xde2c>
   23d24:	b	23da8 <main@@Base+0xdef0>
   23d28:	ldr	r0, [sp, #28]
   23d2c:	cmp	r0, #0
   23d30:	beq	23d4c <main@@Base+0xde94>
   23d34:	mov	r0, r5
   23d38:	mov	r1, r4
   23d3c:	mov	r2, r7
   23d40:	mov	r3, #8
   23d44:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23d48:	b	23d64 <main@@Base+0xdeac>
   23d4c:	ldr	r0, [sp, #32]
   23d50:	ldr	r1, [sp, #36]	; 0x24
   23d54:	orrs	r0, r0, r1
   23d58:	movwne	r0, #1
   23d5c:	str	r0, [sp, #20]
   23d60:	mov	r0, r4
   23d64:	ldr	sl, [sp, #16]
   23d68:	cmp	r0, r7
   23d6c:	beq	23da0 <main@@Base+0xdee8>
   23d70:	ldr	r0, [fp, #8]
   23d74:	ldr	r2, [sp, #20]
   23d78:	mov	r6, r4
   23d7c:	mov	r1, r0
   23d80:	ldrb	r0, [r0]
   23d84:	add	r0, r0, r2
   23d88:	strb	r0, [r1]
   23d8c:	ldr	r0, [sp, #24]
   23d90:	cmp	r0, #0
   23d94:	ldr	r0, [sp, #12]
   23d98:	bne	23cdc <main@@Base+0xde24>
   23d9c:	b	23dc0 <main@@Base+0xdf08>
   23da0:	mov	r4, r7
   23da4:	b	23dc0 <main@@Base+0xdf08>
   23da8:	mov	r0, r5
   23dac:	mov	r1, r6
   23db0:	mov	r2, r7
   23db4:	mov	r3, #23
   23db8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23dbc:	mov	r4, r0
   23dc0:	mov	r0, r4
   23dc4:	sub	sp, fp, #28
   23dc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23dd0:	add	fp, sp, #28
   23dd4:	sub	sp, sp, #36	; 0x24
   23dd8:	mov	r6, r2
   23ddc:	ldr	r2, [fp, #8]
   23de0:	mov	r5, r0
   23de4:	mov	r0, #0
   23de8:	mov	r8, r3
   23dec:	cmp	r1, r6
   23df0:	str	r0, [r2]
   23df4:	beq	23e20 <main@@Base+0xdf68>
   23df8:	ldrb	r0, [r1]
   23dfc:	cmp	r0, #34	; 0x22
   23e00:	bne	23e0c <main@@Base+0xdf54>
   23e04:	add	r1, r1, #1
   23e08:	b	23e20 <main@@Base+0xdf68>
   23e0c:	mov	r0, r5
   23e10:	mov	r2, r6
   23e14:	mov	r3, #5
   23e18:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23e1c:	mov	r1, r0
   23e20:	sub	r0, r6, r1
   23e24:	cmp	r0, #2
   23e28:	blt	23e5c <main@@Base+0xdfa4>
   23e2c:	ldrb	r0, [r1]
   23e30:	cmp	r0, #32
   23e34:	bls	23e48 <main@@Base+0xdf90>
   23e38:	mov	r7, r1
   23e3c:	cmp	r7, r6
   23e40:	bne	23e74 <main@@Base+0xdfbc>
   23e44:	b	23f20 <main@@Base+0xe068>
   23e48:	bne	23e5c <main@@Base+0xdfa4>
   23e4c:	mov	r7, r1
   23e50:	ldrb	r0, [r7, #1]!
   23e54:	cmp	r0, #32
   23e58:	bhi	23e6c <main@@Base+0xdfb4>
   23e5c:	mov	r0, r5
   23e60:	mov	r2, r6
   23e64:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   23e68:	mov	r7, r0
   23e6c:	cmp	r7, r6
   23e70:	beq	23f20 <main@@Base+0xe068>
   23e74:	add	r0, r8, #4
   23e78:	add	sl, sp, #24
   23e7c:	add	r9, sp, #20
   23e80:	str	r8, [sp, #12]
   23e84:	str	r0, [sp, #8]
   23e88:	ldr	r4, [r8]
   23e8c:	mov	r8, r0
   23e90:	add	r0, sp, #16
   23e94:	mov	r1, r7
   23e98:	mov	r2, r6
   23e9c:	mov	r3, r9
   23ea0:	str	sl, [sp]
   23ea4:	str	r0, [sp, #4]
   23ea8:	mov	r0, r5
   23eac:	blx	r4
   23eb0:	cmp	r0, r6
   23eb4:	beq	23f20 <main@@Base+0xe068>
   23eb8:	mov	r4, r0
   23ebc:	cmp	r0, r7
   23ec0:	bne	23ed4 <main@@Base+0xe01c>
   23ec4:	ldr	r4, [r8], #4
   23ec8:	cmp	r4, #0
   23ecc:	bne	23e90 <main@@Base+0xdfd8>
   23ed0:	b	23f28 <main@@Base+0xe070>
   23ed4:	ldr	r0, [sp, #24]
   23ed8:	ldr	r1, [sp, #28]
   23edc:	bl	455e0 <flatcc_json_printer_clear@@Base+0x71c>
   23ee0:	vmov	s2, r0
   23ee4:	ldr	r2, [fp, #8]
   23ee8:	ldr	r1, [sp, #20]
   23eec:	ldr	r8, [sp, #12]
   23ef0:	mov	r7, r4
   23ef4:	vldr	s0, [r2]
   23ef8:	cmp	r1, #0
   23efc:	vneg.f32	s4, s2
   23f00:	vseleq.f32	s2, s2, s4
   23f04:	vadd.f32	s0, s0, s2
   23f08:	vstr	s0, [r2]
   23f0c:	ldr	r0, [sp, #16]
   23f10:	cmp	r0, #0
   23f14:	ldr	r0, [sp, #8]
   23f18:	bne	23e88 <main@@Base+0xdfd0>
   23f1c:	b	23f40 <main@@Base+0xe088>
   23f20:	mov	r4, r6
   23f24:	b	23f40 <main@@Base+0xe088>
   23f28:	mov	r0, r5
   23f2c:	mov	r1, r7
   23f30:	mov	r2, r6
   23f34:	mov	r3, #23
   23f38:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23f3c:	mov	r4, r0
   23f40:	mov	r0, r4
   23f44:	sub	sp, fp, #28
   23f48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23f4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23f50:	add	fp, sp, #28
   23f54:	sub	sp, sp, #44	; 0x2c
   23f58:	mov	r6, r2
   23f5c:	ldr	r2, [fp, #8]
   23f60:	mov	r5, r0
   23f64:	mov	r0, #0
   23f68:	mov	sl, r3
   23f6c:	cmp	r1, r6
   23f70:	str	r0, [r2]
   23f74:	beq	23fa0 <main@@Base+0xe0e8>
   23f78:	ldrb	r0, [r1]
   23f7c:	cmp	r0, #34	; 0x22
   23f80:	bne	23f8c <main@@Base+0xe0d4>
   23f84:	add	r1, r1, #1
   23f88:	b	23fa0 <main@@Base+0xe0e8>
   23f8c:	mov	r0, r5
   23f90:	mov	r2, r6
   23f94:	mov	r3, #5
   23f98:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   23f9c:	mov	r1, r0
   23fa0:	sub	r0, r6, r1
   23fa4:	cmp	r0, #2
   23fa8:	blt	23fdc <main@@Base+0xe124>
   23fac:	ldrb	r0, [r1]
   23fb0:	cmp	r0, #32
   23fb4:	bls	23fc8 <main@@Base+0xe110>
   23fb8:	mov	r7, r1
   23fbc:	cmp	r7, r6
   23fc0:	bne	23ff4 <main@@Base+0xe13c>
   23fc4:	b	2410c <main@@Base+0xe254>
   23fc8:	bne	23fdc <main@@Base+0xe124>
   23fcc:	mov	r7, r1
   23fd0:	ldrb	r0, [r7, #1]!
   23fd4:	cmp	r0, #32
   23fd8:	bhi	23fec <main@@Base+0xe134>
   23fdc:	mov	r0, r5
   23fe0:	mov	r2, r6
   23fe4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   23fe8:	mov	r7, r0
   23fec:	cmp	r7, r6
   23ff0:	beq	2410c <main@@Base+0xe254>
   23ff4:	add	r0, sl, #4
   23ff8:	mov	r2, #0
   23ffc:	add	r8, sp, #32
   24000:	add	r9, sp, #28
   24004:	str	sl, [sp, #16]
   24008:	str	r0, [sp, #12]
   2400c:	ldr	r4, [sl]
   24010:	mov	sl, r0
   24014:	str	r2, [sp, #20]
   24018:	add	r0, sp, #24
   2401c:	mov	r1, r7
   24020:	mov	r2, r6
   24024:	mov	r3, r9
   24028:	str	r8, [sp]
   2402c:	str	r0, [sp, #4]
   24030:	mov	r0, r5
   24034:	blx	r4
   24038:	cmp	r0, r6
   2403c:	beq	2410c <main@@Base+0xe254>
   24040:	mov	r4, r0
   24044:	cmp	r0, r7
   24048:	bne	2405c <main@@Base+0xe1a4>
   2404c:	ldr	r4, [sl], #4
   24050:	cmp	r4, #0
   24054:	bne	24018 <main@@Base+0xe160>
   24058:	b	24114 <main@@Base+0xe25c>
   2405c:	ldr	r2, [sp, #28]
   24060:	ldr	r0, [sp, #32]
   24064:	ldr	r1, [sp, #36]	; 0x24
   24068:	cmp	r2, #0
   2406c:	beq	24094 <main@@Base+0xe1dc>
   24070:	ldr	sl, [sp, #16]
   24074:	subs	r2, r0, #-2147483647	; 0x80000001
   24078:	sbcs	r1, r1, #0
   2407c:	bcc	240c8 <main@@Base+0xe210>
   24080:	mov	r0, r5
   24084:	mov	r1, r4
   24088:	mov	r2, r6
   2408c:	mov	r3, #8
   24090:	b	240b4 <main@@Base+0xe1fc>
   24094:	ldr	sl, [sp, #16]
   24098:	subs	r2, r0, #-2147483648	; 0x80000000
   2409c:	sbcs	r1, r1, #0
   240a0:	bcc	240d0 <main@@Base+0xe218>
   240a4:	mov	r0, r5
   240a8:	mov	r1, r4
   240ac:	mov	r2, r6
   240b0:	mov	r3, #7
   240b4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   240b8:	ldr	r2, [sp, #20]
   240bc:	cmp	r0, r6
   240c0:	bne	240e0 <main@@Base+0xe228>
   240c4:	b	2410c <main@@Base+0xe254>
   240c8:	rsb	r2, r0, #0
   240cc:	b	240d4 <main@@Base+0xe21c>
   240d0:	mov	r2, r0
   240d4:	mov	r0, r4
   240d8:	cmp	r0, r6
   240dc:	beq	2410c <main@@Base+0xe254>
   240e0:	ldr	r0, [fp, #8]
   240e4:	mov	r7, r4
   240e8:	mov	r1, r0
   240ec:	ldr	r0, [r0]
   240f0:	add	r0, r0, r2
   240f4:	str	r0, [r1]
   240f8:	ldr	r0, [sp, #24]
   240fc:	cmp	r0, #0
   24100:	ldr	r0, [sp, #12]
   24104:	bne	2400c <main@@Base+0xe154>
   24108:	b	2412c <main@@Base+0xe274>
   2410c:	mov	r4, r6
   24110:	b	2412c <main@@Base+0xe274>
   24114:	mov	r0, r5
   24118:	mov	r1, r7
   2411c:	mov	r2, r6
   24120:	mov	r3, #23
   24124:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24128:	mov	r4, r0
   2412c:	mov	r0, r4
   24130:	sub	sp, fp, #28
   24134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2413c:	add	fp, sp, #28
   24140:	sub	sp, sp, #44	; 0x2c
   24144:	mov	r6, r2
   24148:	ldr	r2, [fp, #8]
   2414c:	mov	r5, r0
   24150:	mov	r0, #0
   24154:	mov	sl, r3
   24158:	cmp	r1, r6
   2415c:	str	r0, [r2]
   24160:	str	r0, [r2, #4]
   24164:	beq	24190 <main@@Base+0xe2d8>
   24168:	ldrb	r0, [r1]
   2416c:	cmp	r0, #34	; 0x22
   24170:	bne	2417c <main@@Base+0xe2c4>
   24174:	add	r1, r1, #1
   24178:	b	24190 <main@@Base+0xe2d8>
   2417c:	mov	r0, r5
   24180:	mov	r2, r6
   24184:	mov	r3, #5
   24188:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2418c:	mov	r1, r0
   24190:	sub	r0, r6, r1
   24194:	cmp	r0, #2
   24198:	blt	241cc <main@@Base+0xe314>
   2419c:	ldrb	r0, [r1]
   241a0:	cmp	r0, #32
   241a4:	bls	241b8 <main@@Base+0xe300>
   241a8:	mov	r7, r1
   241ac:	cmp	r7, r6
   241b0:	bne	241e4 <main@@Base+0xe32c>
   241b4:	b	24304 <main@@Base+0xe44c>
   241b8:	bne	241cc <main@@Base+0xe314>
   241bc:	mov	r7, r1
   241c0:	ldrb	r0, [r7, #1]!
   241c4:	cmp	r0, #32
   241c8:	bhi	241dc <main@@Base+0xe324>
   241cc:	mov	r0, r5
   241d0:	mov	r2, r6
   241d4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   241d8:	mov	r7, r0
   241dc:	cmp	r7, r6
   241e0:	beq	24304 <main@@Base+0xe44c>
   241e4:	add	r0, sl, #4
   241e8:	mov	r1, #0
   241ec:	add	r8, sp, #32
   241f0:	add	r9, sp, #28
   241f4:	mov	r2, #0
   241f8:	str	sl, [sp, #12]
   241fc:	str	r0, [sp, #8]
   24200:	ldr	r4, [sl]
   24204:	mov	sl, r0
   24208:	str	r2, [sp, #16]
   2420c:	str	r1, [sp, #20]
   24210:	add	r0, sp, #24
   24214:	mov	r1, r7
   24218:	mov	r2, r6
   2421c:	mov	r3, r9
   24220:	str	r8, [sp]
   24224:	str	r0, [sp, #4]
   24228:	mov	r0, r5
   2422c:	blx	r4
   24230:	cmp	r0, r6
   24234:	beq	24304 <main@@Base+0xe44c>
   24238:	mov	r4, r0
   2423c:	cmp	r0, r7
   24240:	bne	24254 <main@@Base+0xe39c>
   24244:	ldr	r4, [sl], #4
   24248:	cmp	r4, #0
   2424c:	bne	24210 <main@@Base+0xe358>
   24250:	b	2430c <main@@Base+0xe454>
   24254:	add	r2, sp, #28
   24258:	ldm	r2, {r0, r1, r2}
   2425c:	cmp	r0, #0
   24260:	beq	24288 <main@@Base+0xe3d0>
   24264:	ldr	sl, [sp, #12]
   24268:	subs	r0, r1, #1
   2426c:	sbcs	r0, r2, #-2147483648	; 0x80000000
   24270:	bcc	242c0 <main@@Base+0xe408>
   24274:	mov	r0, r5
   24278:	mov	r1, r4
   2427c:	mov	r2, r6
   24280:	mov	r3, #8
   24284:	b	242a8 <main@@Base+0xe3f0>
   24288:	ldr	sl, [sp, #12]
   2428c:	cmn	r2, #1
   24290:	mov	r0, r4
   24294:	bgt	242b4 <main@@Base+0xe3fc>
   24298:	mov	r0, r5
   2429c:	mov	r1, r4
   242a0:	mov	r2, r6
   242a4:	mov	r3, #7
   242a8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   242ac:	ldr	r1, [sp, #20]
   242b0:	ldr	r2, [sp, #16]
   242b4:	cmp	r0, r6
   242b8:	bne	242d4 <main@@Base+0xe41c>
   242bc:	b	24304 <main@@Base+0xe44c>
   242c0:	rsbs	r1, r1, #0
   242c4:	mov	r0, r4
   242c8:	rsc	r2, r2, #0
   242cc:	cmp	r0, r6
   242d0:	beq	24304 <main@@Base+0xe44c>
   242d4:	ldr	r0, [fp, #8]
   242d8:	mov	r7, r0
   242dc:	ldm	r0, {r0, r3}
   242e0:	adds	r0, r0, r1
   242e4:	adc	r3, r3, r2
   242e8:	stm	r7, {r0, r3}
   242ec:	mov	r7, r4
   242f0:	ldr	r0, [sp, #24]
   242f4:	cmp	r0, #0
   242f8:	ldr	r0, [sp, #8]
   242fc:	bne	24200 <main@@Base+0xe348>
   24300:	b	24324 <main@@Base+0xe46c>
   24304:	mov	r4, r6
   24308:	b	24324 <main@@Base+0xe46c>
   2430c:	mov	r0, r5
   24310:	mov	r1, r7
   24314:	mov	r2, r6
   24318:	mov	r3, #23
   2431c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24320:	mov	r4, r0
   24324:	mov	r0, r4
   24328:	sub	sp, fp, #28
   2432c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24330:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24334:	add	fp, sp, #28
   24338:	sub	sp, sp, #44	; 0x2c
   2433c:	mov	r6, r2
   24340:	ldr	r2, [fp, #8]
   24344:	mov	r5, r0
   24348:	mov	r0, #0
   2434c:	mov	sl, r3
   24350:	cmp	r1, r6
   24354:	str	r0, [r2]
   24358:	beq	24384 <main@@Base+0xe4cc>
   2435c:	ldrb	r0, [r1]
   24360:	cmp	r0, #34	; 0x22
   24364:	bne	24370 <main@@Base+0xe4b8>
   24368:	add	r1, r1, #1
   2436c:	b	24384 <main@@Base+0xe4cc>
   24370:	mov	r0, r5
   24374:	mov	r2, r6
   24378:	mov	r3, #5
   2437c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24380:	mov	r1, r0
   24384:	sub	r0, r6, r1
   24388:	cmp	r0, #2
   2438c:	blt	243c0 <main@@Base+0xe508>
   24390:	ldrb	r0, [r1]
   24394:	cmp	r0, #32
   24398:	bls	243ac <main@@Base+0xe4f4>
   2439c:	mov	r7, r1
   243a0:	cmp	r7, r6
   243a4:	bne	243d8 <main@@Base+0xe520>
   243a8:	b	244e4 <main@@Base+0xe62c>
   243ac:	bne	243c0 <main@@Base+0xe508>
   243b0:	mov	r7, r1
   243b4:	ldrb	r0, [r7, #1]!
   243b8:	cmp	r0, #32
   243bc:	bhi	243d0 <main@@Base+0xe518>
   243c0:	mov	r0, r5
   243c4:	mov	r2, r6
   243c8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   243cc:	mov	r7, r0
   243d0:	cmp	r7, r6
   243d4:	beq	244e4 <main@@Base+0xe62c>
   243d8:	add	r0, sl, #4
   243dc:	mov	r1, #0
   243e0:	add	r8, sp, #32
   243e4:	add	r9, sp, #28
   243e8:	str	sl, [sp, #16]
   243ec:	str	r1, [sp, #20]
   243f0:	str	r0, [sp, #12]
   243f4:	ldr	r4, [sl]
   243f8:	mov	sl, r0
   243fc:	add	r0, sp, #24
   24400:	mov	r1, r7
   24404:	mov	r2, r6
   24408:	mov	r3, r9
   2440c:	str	r8, [sp]
   24410:	str	r0, [sp, #4]
   24414:	mov	r0, r5
   24418:	blx	r4
   2441c:	cmp	r0, r6
   24420:	beq	244e4 <main@@Base+0xe62c>
   24424:	mov	r4, r0
   24428:	cmp	r0, r7
   2442c:	bne	24440 <main@@Base+0xe588>
   24430:	ldr	r4, [sl], #4
   24434:	cmp	r4, #0
   24438:	bne	243fc <main@@Base+0xe544>
   2443c:	b	244ec <main@@Base+0xe634>
   24440:	ldr	r0, [sp, #28]
   24444:	cmp	r0, #0
   24448:	beq	24470 <main@@Base+0xe5b8>
   2444c:	mov	r0, r5
   24450:	mov	r1, r4
   24454:	mov	r2, r6
   24458:	mov	r3, #8
   2445c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24460:	ldr	sl, [sp, #16]
   24464:	cmp	r0, r6
   24468:	bne	244b4 <main@@Base+0xe5fc>
   2446c:	b	244e4 <main@@Base+0xe62c>
   24470:	ldr	r0, [sp, #36]	; 0x24
   24474:	ldr	sl, [sp, #16]
   24478:	cmp	r0, #0
   2447c:	beq	244a0 <main@@Base+0xe5e8>
   24480:	mov	r0, r5
   24484:	mov	r1, r4
   24488:	mov	r2, r6
   2448c:	mov	r3, #7
   24490:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24494:	cmp	r0, r6
   24498:	bne	244b4 <main@@Base+0xe5fc>
   2449c:	b	244e4 <main@@Base+0xe62c>
   244a0:	ldr	r0, [sp, #32]
   244a4:	str	r0, [sp, #20]
   244a8:	mov	r0, r4
   244ac:	cmp	r0, r6
   244b0:	beq	244e4 <main@@Base+0xe62c>
   244b4:	ldr	r0, [fp, #8]
   244b8:	ldr	r2, [sp, #20]
   244bc:	mov	r7, r4
   244c0:	mov	r1, r0
   244c4:	ldr	r0, [r0]
   244c8:	add	r0, r0, r2
   244cc:	str	r0, [r1]
   244d0:	ldr	r0, [sp, #24]
   244d4:	cmp	r0, #0
   244d8:	ldr	r0, [sp, #12]
   244dc:	bne	243f4 <main@@Base+0xe53c>
   244e0:	b	24504 <main@@Base+0xe64c>
   244e4:	mov	r4, r6
   244e8:	b	24504 <main@@Base+0xe64c>
   244ec:	mov	r0, r5
   244f0:	mov	r1, r7
   244f4:	mov	r2, r6
   244f8:	mov	r3, #23
   244fc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24500:	mov	r4, r0
   24504:	mov	r0, r4
   24508:	sub	sp, fp, #28
   2450c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24514:	add	fp, sp, #28
   24518:	sub	sp, sp, #44	; 0x2c
   2451c:	mov	r7, r2
   24520:	ldr	r2, [fp, #8]
   24524:	mov	r5, r0
   24528:	mov	r0, #0
   2452c:	mov	sl, r3
   24530:	cmp	r1, r7
   24534:	str	r0, [r2]
   24538:	str	r0, [r2, #4]
   2453c:	beq	24568 <main@@Base+0xe6b0>
   24540:	ldrb	r0, [r1]
   24544:	cmp	r0, #34	; 0x22
   24548:	bne	24554 <main@@Base+0xe69c>
   2454c:	add	r1, r1, #1
   24550:	b	24568 <main@@Base+0xe6b0>
   24554:	mov	r0, r5
   24558:	mov	r2, r7
   2455c:	mov	r3, #5
   24560:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24564:	mov	r1, r0
   24568:	sub	r0, r7, r1
   2456c:	cmp	r0, #2
   24570:	blt	245a4 <main@@Base+0xe6ec>
   24574:	ldrb	r0, [r1]
   24578:	cmp	r0, #32
   2457c:	bls	24590 <main@@Base+0xe6d8>
   24580:	mov	r6, r1
   24584:	cmp	r6, r7
   24588:	bne	245bc <main@@Base+0xe704>
   2458c:	b	246a8 <main@@Base+0xe7f0>
   24590:	bne	245a4 <main@@Base+0xe6ec>
   24594:	mov	r6, r1
   24598:	ldrb	r0, [r6, #1]!
   2459c:	cmp	r0, #32
   245a0:	bhi	245b4 <main@@Base+0xe6fc>
   245a4:	mov	r0, r5
   245a8:	mov	r2, r7
   245ac:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   245b0:	mov	r6, r0
   245b4:	cmp	r6, r7
   245b8:	beq	246a8 <main@@Base+0xe7f0>
   245bc:	mov	r1, #0
   245c0:	add	r0, sl, #4
   245c4:	add	r8, sp, #32
   245c8:	add	r9, sp, #28
   245cc:	str	sl, [sp, #12]
   245d0:	str	r1, [sp, #20]
   245d4:	mov	r1, #0
   245d8:	str	r0, [sp, #8]
   245dc:	str	r1, [sp, #16]
   245e0:	ldr	r4, [sl]
   245e4:	mov	sl, r0
   245e8:	add	r0, sp, #24
   245ec:	mov	r1, r6
   245f0:	mov	r2, r7
   245f4:	mov	r3, r9
   245f8:	str	r8, [sp]
   245fc:	str	r0, [sp, #4]
   24600:	mov	r0, r5
   24604:	blx	r4
   24608:	cmp	r0, r7
   2460c:	beq	246a8 <main@@Base+0xe7f0>
   24610:	mov	r4, r0
   24614:	cmp	r0, r6
   24618:	bne	2462c <main@@Base+0xe774>
   2461c:	ldr	r4, [sl], #4
   24620:	cmp	r4, #0
   24624:	bne	245e8 <main@@Base+0xe730>
   24628:	b	246b0 <main@@Base+0xe7f8>
   2462c:	ldr	r0, [sp, #28]
   24630:	cmp	r0, #0
   24634:	beq	24650 <main@@Base+0xe798>
   24638:	mov	r0, r5
   2463c:	mov	r1, r4
   24640:	mov	r2, r7
   24644:	mov	r3, #8
   24648:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2464c:	b	24664 <main@@Base+0xe7ac>
   24650:	ldr	r0, [sp, #32]
   24654:	str	r0, [sp, #20]
   24658:	ldr	r0, [sp, #36]	; 0x24
   2465c:	str	r0, [sp, #16]
   24660:	mov	r0, r4
   24664:	ldr	sl, [sp, #12]
   24668:	cmp	r0, r7
   2466c:	beq	246a8 <main@@Base+0xe7f0>
   24670:	ldr	r0, [fp, #8]
   24674:	ldr	r3, [sp, #20]
   24678:	mov	r6, r4
   2467c:	mov	r2, r0
   24680:	ldrd	r0, [r0]
   24684:	adds	r0, r0, r3
   24688:	ldr	r3, [sp, #16]
   2468c:	adc	r1, r1, r3
   24690:	strd	r0, [r2]
   24694:	ldr	r0, [sp, #24]
   24698:	cmp	r0, #0
   2469c:	ldr	r0, [sp, #8]
   246a0:	bne	245e0 <main@@Base+0xe728>
   246a4:	b	246c8 <main@@Base+0xe810>
   246a8:	mov	r4, r7
   246ac:	b	246c8 <main@@Base+0xe810>
   246b0:	mov	r0, r5
   246b4:	mov	r1, r6
   246b8:	mov	r2, r7
   246bc:	mov	r3, #23
   246c0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   246c4:	mov	r4, r0
   246c8:	mov	r0, r4
   246cc:	sub	sp, fp, #28
   246d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   246d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   246d8:	add	fp, sp, #28
   246dc:	sub	sp, sp, #36	; 0x24
   246e0:	mov	r6, r2
   246e4:	ldr	r2, [fp, #8]
   246e8:	mov	r5, r0
   246ec:	mov	r0, #0
   246f0:	mov	r8, r3
   246f4:	cmp	r1, r6
   246f8:	str	r0, [r2]
   246fc:	str	r0, [r2, #4]
   24700:	beq	2472c <main@@Base+0xe874>
   24704:	ldrb	r0, [r1]
   24708:	cmp	r0, #34	; 0x22
   2470c:	bne	24718 <main@@Base+0xe860>
   24710:	add	r1, r1, #1
   24714:	b	2472c <main@@Base+0xe874>
   24718:	mov	r0, r5
   2471c:	mov	r2, r6
   24720:	mov	r3, #5
   24724:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24728:	mov	r1, r0
   2472c:	sub	r0, r6, r1
   24730:	cmp	r0, #2
   24734:	blt	24768 <main@@Base+0xe8b0>
   24738:	ldrb	r0, [r1]
   2473c:	cmp	r0, #32
   24740:	bls	24754 <main@@Base+0xe89c>
   24744:	mov	r7, r1
   24748:	cmp	r7, r6
   2474c:	bne	24780 <main@@Base+0xe8c8>
   24750:	b	24834 <main@@Base+0xe97c>
   24754:	bne	24768 <main@@Base+0xe8b0>
   24758:	mov	r7, r1
   2475c:	ldrb	r0, [r7, #1]!
   24760:	cmp	r0, #32
   24764:	bhi	24778 <main@@Base+0xe8c0>
   24768:	mov	r0, r5
   2476c:	mov	r2, r6
   24770:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   24774:	mov	r7, r0
   24778:	cmp	r7, r6
   2477c:	beq	24834 <main@@Base+0xe97c>
   24780:	add	r0, r8, #4
   24784:	add	sl, sp, #24
   24788:	add	r9, sp, #20
   2478c:	str	r8, [sp, #12]
   24790:	str	r0, [sp, #8]
   24794:	ldr	r4, [r8]
   24798:	mov	r8, r0
   2479c:	add	r0, sp, #16
   247a0:	mov	r1, r7
   247a4:	mov	r2, r6
   247a8:	mov	r3, r9
   247ac:	str	sl, [sp]
   247b0:	str	r0, [sp, #4]
   247b4:	mov	r0, r5
   247b8:	blx	r4
   247bc:	cmp	r0, r6
   247c0:	beq	24834 <main@@Base+0xe97c>
   247c4:	mov	r4, r0
   247c8:	cmp	r0, r7
   247cc:	bne	247e0 <main@@Base+0xe928>
   247d0:	ldr	r4, [r8], #4
   247d4:	cmp	r4, #0
   247d8:	bne	2479c <main@@Base+0xe8e4>
   247dc:	b	2483c <main@@Base+0xe984>
   247e0:	ldr	r0, [sp, #24]
   247e4:	ldr	r1, [sp, #28]
   247e8:	bl	453a8 <flatcc_json_printer_clear@@Base+0x4e4>
   247ec:	ldr	r2, [fp, #8]
   247f0:	vmov	d17, r0, r1
   247f4:	ldr	r3, [sp, #20]
   247f8:	ldr	r8, [sp, #12]
   247fc:	mov	r7, r2
   24800:	vldr	d16, [r2]
   24804:	eor	r2, r1, #-2147483648	; 0x80000000
   24808:	cmp	r3, #0
   2480c:	vmov	d18, r0, r2
   24810:	vseleq.f64	d17, d17, d18
   24814:	vadd.f64	d16, d16, d17
   24818:	vstr	d16, [r7]
   2481c:	mov	r7, r4
   24820:	ldr	r0, [sp, #16]
   24824:	cmp	r0, #0
   24828:	ldr	r0, [sp, #8]
   2482c:	bne	24794 <main@@Base+0xe8dc>
   24830:	b	24854 <main@@Base+0xe99c>
   24834:	mov	r4, r6
   24838:	b	24854 <main@@Base+0xe99c>
   2483c:	mov	r0, r5
   24840:	mov	r1, r7
   24844:	mov	r2, r6
   24848:	mov	r3, #23
   2484c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   24850:	mov	r4, r0
   24854:	mov	r0, r4
   24858:	sub	sp, fp, #28
   2485c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24864:	add	fp, sp, #28
   24868:	sub	sp, sp, #12
   2486c:	mov	sl, r1
   24870:	sub	r1, r2, r1
   24874:	cmp	r1, #8
   24878:	movcs	r1, #8
   2487c:	sub	r1, r1, #1
   24880:	cmp	r1, #7
   24884:	bhi	24abc <main@@Base+0xec04>
   24888:	str	r3, [sp, #8]
   2488c:	add	r3, pc, #36	; 0x24
   24890:	mov	r8, #0
   24894:	mov	ip, #0
   24898:	mov	lr, #0
   2489c:	mov	r5, #0
   248a0:	mov	r6, #0
   248a4:	mov	r7, #0
   248a8:	mov	r4, #0
   248ac:	ldr	r9, [r3, r1, lsl #2]
   248b0:	mov	r1, #0
   248b4:	add	pc, r3, r9
   248b8:	andeq	r0, r0, r4, rrx
   248bc:	andeq	r0, r0, ip, asr r0
   248c0:	andeq	r0, r0, r4, asr r0
   248c4:	andeq	r0, r0, ip, asr #32
   248c8:	andeq	r0, r0, r0, asr #32
   248cc:	andeq	r0, r0, r4, lsr r0
   248d0:	andeq	r0, r0, r4, lsr #32
   248d4:	andeq	r0, r0, r0, lsr #32
   248d8:	ldrb	ip, [sl, #7]
   248dc:	ldrb	r1, [sl, #6]
   248e0:	mov	lr, r8
   248e4:	orr	r1, ip, r1, lsl #8
   248e8:	mov	r8, r1
   248ec:	ldrb	r1, [sl, #5]
   248f0:	mov	r5, lr
   248f4:	orr	r8, r8, r1, lsl #16
   248f8:	ldrb	r1, [sl, #4]
   248fc:	mov	r6, r5
   24900:	orr	r8, r8, r1, lsl #24
   24904:	ldrb	r1, [sl, #3]
   24908:	orr	r7, r1, r6
   2490c:	ldrb	r1, [sl, #2]
   24910:	orr	r4, r7, r1, lsl #8
   24914:	ldrb	r1, [sl, #1]
   24918:	orr	r1, r4, r1, lsl #16
   2491c:	ldrb	r7, [sl]
   24920:	movw	r3, #28276	; 0x6e74
   24924:	ldr	r6, [fp, #12]
   24928:	movt	r3, #29285	; 0x7265
   2492c:	eor	r3, r8, r3
   24930:	orr	r1, r1, r7, lsl #24
   24934:	movw	r7, #20577	; 0x5061
   24938:	movt	r7, #18798	; 0x496e
   2493c:	eor	r7, r1, r7
   24940:	orrs	r3, r3, r7
   24944:	bne	24a70 <main@@Base+0xebb8>
   24948:	add	r8, sl, #8
   2494c:	sub	r1, r2, r8
   24950:	cmp	r1, #8
   24954:	movcs	r1, #8
   24958:	sub	r1, r1, #1
   2495c:	cmp	r1, #7
   24960:	bhi	24abc <main@@Base+0xec04>
   24964:	str	r0, [sp, #4]
   24968:	add	r3, pc, #36	; 0x24
   2496c:	mov	r6, #0
   24970:	mov	r0, #0
   24974:	mov	r9, #0
   24978:	mov	r7, #0
   2497c:	mov	r5, #0
   24980:	mov	r4, #0
   24984:	mov	ip, #0
   24988:	ldr	lr, [r3, r1, lsl #2]
   2498c:	mov	r1, #0
   24990:	add	pc, r3, lr
   24994:	andeq	r0, r0, r4, rrx
   24998:	andeq	r0, r0, ip, asr r0
   2499c:	andeq	r0, r0, r4, asr r0
   249a0:	andeq	r0, r0, ip, asr #32
   249a4:	andeq	r0, r0, r0, asr #32
   249a8:	andeq	r0, r0, r4, lsr r0
   249ac:	andeq	r0, r0, r4, lsr #32
   249b0:	andeq	r0, r0, r0, lsr #32
   249b4:	ldrb	r0, [sl, #15]
   249b8:	ldrb	r1, [sl, #14]
   249bc:	mov	r9, r6
   249c0:	orr	r0, r0, r1, lsl #8
   249c4:	mov	r6, r0
   249c8:	ldrb	r0, [sl, #13]
   249cc:	mov	r7, r9
   249d0:	orr	r6, r6, r0, lsl #16
   249d4:	ldrb	r0, [sl, #12]
   249d8:	mov	r5, r7
   249dc:	orr	r6, r6, r0, lsl #24
   249e0:	ldrb	r0, [sl, #11]
   249e4:	orr	r1, r0, r5
   249e8:	ldrb	r0, [sl, #10]
   249ec:	orr	r4, r1, r0, lsl #8
   249f0:	ldrb	r0, [sl, #9]
   249f4:	orr	ip, r4, r0, lsl #16
   249f8:	ldrb	r1, [r8]
   249fc:	movw	r0, #24931	; 0x6163
   24a00:	movw	r3, #28005	; 0x6d65
   24a04:	movt	r0, #29552	; 0x7370
   24a08:	movt	r3, #20065	; 0x4e61
   24a0c:	eor	r0, r6, r0
   24a10:	orr	r1, ip, r1, lsl #24
   24a14:	eor	r1, r1, r3
   24a18:	orrs	r0, r0, r1
   24a1c:	bne	24abc <main@@Base+0xec04>
   24a20:	add	r6, sl, #16
   24a24:	sub	r0, r2, r6
   24a28:	cmp	r0, #8
   24a2c:	movcs	r0, #8
   24a30:	sub	r0, r0, #1
   24a34:	cmp	r0, #7
   24a38:	bhi	24abc <main@@Base+0xec04>
   24a3c:	ldrb	r0, [r6]
   24a40:	cmp	r0, #101	; 0x65
   24a44:	bne	24abc <main@@Base+0xec04>
   24a48:	ldr	r0, [fp, #12]
   24a4c:	mov	r1, r6
   24a50:	mov	r3, #1
   24a54:	mov	r8, #1
   24a58:	str	r0, [sp]
   24a5c:	ldr	r0, [sp, #4]
   24a60:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24a64:	cmp	r0, r6
   24a68:	bne	24a9c <main@@Base+0xebe4>
   24a6c:	b	24abc <main@@Base+0xec04>
   24a70:	movw	r3, #20037	; 0x4e45
   24a74:	movt	r3, #20047	; 0x4e4f
   24a78:	teq	r1, r3
   24a7c:	bne	24abc <main@@Base+0xec04>
   24a80:	mov	r1, sl
   24a84:	mov	r3, #4
   24a88:	str	r6, [sp]
   24a8c:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24a90:	cmp	r0, sl
   24a94:	beq	24abc <main@@Base+0xec04>
   24a98:	mov	r8, #0
   24a9c:	mov	sl, r0
   24aa0:	ldr	r0, [fp, #8]
   24aa4:	mov	r1, #0
   24aa8:	str	r8, [r0]
   24aac:	str	r1, [r0, #4]
   24ab0:	mov	r0, #0
   24ab4:	ldr	r1, [sp, #8]
   24ab8:	str	r0, [r1]
   24abc:	mov	r0, sl
   24ac0:	sub	sp, fp, #28
   24ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24acc:	add	fp, sp, #28
   24ad0:	sub	sp, sp, #12
   24ad4:	mov	r5, r1
   24ad8:	sub	r1, r2, r1
   24adc:	cmp	r1, #8
   24ae0:	movcs	r1, #8
   24ae4:	sub	r1, r1, #1
   24ae8:	cmp	r1, #7
   24aec:	bhi	24c6c <main@@Base+0xedb4>
   24af0:	str	r3, [sp, #8]
   24af4:	add	r6, pc, #36	; 0x24
   24af8:	mov	lr, #0
   24afc:	mov	ip, #0
   24b00:	mov	r9, #0
   24b04:	mov	sl, #0
   24b08:	mov	r4, #0
   24b0c:	mov	r3, #0
   24b10:	mov	r7, #0
   24b14:	ldr	r8, [r6, r1, lsl #2]
   24b18:	mov	r1, #0
   24b1c:	add	pc, r6, r8
   24b20:	andeq	r0, r0, r4, rrx
   24b24:	andeq	r0, r0, ip, asr r0
   24b28:	andeq	r0, r0, r4, asr r0
   24b2c:	andeq	r0, r0, ip, asr #32
   24b30:	andeq	r0, r0, r0, asr #32
   24b34:	andeq	r0, r0, r4, lsr r0
   24b38:	andeq	r0, r0, r4, lsr #32
   24b3c:	andeq	r0, r0, r0, lsr #32
   24b40:	ldrb	ip, [r5, #7]
   24b44:	ldrb	r1, [r5, #6]
   24b48:	mov	r9, lr
   24b4c:	orr	r1, ip, r1, lsl #8
   24b50:	mov	lr, r1
   24b54:	ldrb	r1, [r5, #5]
   24b58:	mov	sl, r9
   24b5c:	orr	lr, lr, r1, lsl #16
   24b60:	ldrb	r1, [r5, #4]
   24b64:	orr	lr, lr, r1, lsl #24
   24b68:	mov	r1, sl
   24b6c:	ldrb	r3, [r5, #3]
   24b70:	orr	r4, r3, r1
   24b74:	ldrb	r1, [r5, #2]
   24b78:	orr	r3, r4, r1, lsl #8
   24b7c:	ldrb	r1, [r5, #1]
   24b80:	orr	r7, r3, r1, lsl #16
   24b84:	ldrb	r1, [r5]
   24b88:	ldr	r3, [fp, #12]
   24b8c:	ldr	r8, [fp, #8]
   24b90:	orr	r1, r7, r1, lsl #24
   24b94:	movw	r7, #30769	; 0x7831
   24b98:	movt	r7, #26725	; 0x6865
   24b9c:	cmp	r1, r7
   24ba0:	bhi	24bd0 <main@@Base+0xed18>
   24ba4:	teq	r1, r7
   24ba8:	bne	24c6c <main@@Base+0xedb4>
   24bac:	str	r3, [sp]
   24bb0:	mov	r1, r5
   24bb4:	mov	r3, #4
   24bb8:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24bbc:	cmp	r0, r5
   24bc0:	beq	24c6c <main@@Base+0xedb4>
   24bc4:	mov	r1, #0
   24bc8:	mov	r2, #3
   24bcc:	b	24c58 <main@@Base+0xeda0>
   24bd0:	lsr	r4, lr, #16
   24bd4:	movw	r6, #25959	; 0x6567
   24bd8:	movw	r7, #26725	; 0x6865
   24bdc:	orr	r4, r4, r1, lsl #16
   24be0:	movt	r6, #30830	; 0x786e
   24be4:	eor	r7, r7, r1, lsr #16
   24be8:	eor	r6, r4, r6
   24bec:	orrs	r7, r6, r7
   24bf0:	bne	24c24 <main@@Base+0xed6c>
   24bf4:	str	r3, [sp]
   24bf8:	mov	r1, r5
   24bfc:	mov	r3, #6
   24c00:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24c04:	cmp	r0, r5
   24c08:	beq	24c6c <main@@Base+0xedb4>
   24c0c:	mvn	r2, #1
   24c10:	mvn	r1, #0
   24c14:	str	r2, [r8]
   24c18:	str	r1, [r8, #4]
   24c1c:	mov	r1, #1
   24c20:	b	24c60 <main@@Base+0xeda8>
   24c24:	movw	r7, #30770	; 0x7832
   24c28:	movt	r7, #26725	; 0x6865
   24c2c:	teq	r1, r7
   24c30:	bne	24c6c <main@@Base+0xedb4>
   24c34:	str	r3, [sp]
   24c38:	mov	r1, r5
   24c3c:	mov	r3, #4
   24c40:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24c44:	cmp	r0, r5
   24c48:	beq	24c6c <main@@Base+0xedb4>
   24c4c:	movw	r2, #48815	; 0xbeaf
   24c50:	mov	r1, #0
   24c54:	movt	r2, #32431	; 0x7eaf
   24c58:	str	r2, [r8]
   24c5c:	str	r1, [r8, #4]
   24c60:	ldr	r2, [sp, #8]
   24c64:	mov	r5, r0
   24c68:	str	r1, [r2]
   24c6c:	mov	r0, r5
   24c70:	sub	sp, fp, #28
   24c74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24c7c:	add	fp, sp, #28
   24c80:	sub	sp, sp, #12
   24c84:	mov	r8, r1
   24c88:	sub	r1, r2, r1
   24c8c:	cmp	r1, #8
   24c90:	movcs	r1, #8
   24c94:	sub	r1, r1, #1
   24c98:	cmp	r1, #7
   24c9c:	bhi	24e60 <main@@Base+0xefa8>
   24ca0:	str	r3, [sp, #8]
   24ca4:	add	r5, pc, #36	; 0x24
   24ca8:	mov	sl, #0
   24cac:	mov	ip, #0
   24cb0:	mov	lr, #0
   24cb4:	mov	r4, #0
   24cb8:	mov	r6, #0
   24cbc:	mov	r7, #0
   24cc0:	mov	r3, #0
   24cc4:	ldr	r9, [r5, r1, lsl #2]
   24cc8:	mov	r1, #0
   24ccc:	add	pc, r5, r9
   24cd0:	andeq	r0, r0, r4, rrx
   24cd4:	andeq	r0, r0, ip, asr r0
   24cd8:	andeq	r0, r0, r4, asr r0
   24cdc:	andeq	r0, r0, ip, asr #32
   24ce0:	andeq	r0, r0, r0, asr #32
   24ce4:	andeq	r0, r0, r4, lsr r0
   24ce8:	andeq	r0, r0, r4, lsr #32
   24cec:	andeq	r0, r0, r0, lsr #32
   24cf0:	ldrb	ip, [r8, #7]
   24cf4:	ldrb	r1, [r8, #6]
   24cf8:	mov	lr, sl
   24cfc:	orr	r1, ip, r1, lsl #8
   24d00:	mov	sl, r1
   24d04:	ldrb	r1, [r8, #5]
   24d08:	mov	r4, lr
   24d0c:	orr	sl, sl, r1, lsl #16
   24d10:	ldrb	r1, [r8, #4]
   24d14:	mov	r6, r4
   24d18:	orr	sl, sl, r1, lsl #24
   24d1c:	ldrb	r1, [r8, #3]
   24d20:	orr	r7, r1, r6
   24d24:	ldrb	r1, [r8, #2]
   24d28:	orr	r3, r7, r1, lsl #8
   24d2c:	ldrb	r1, [r8, #1]
   24d30:	orr	r1, r3, r1, lsl #16
   24d34:	ldrb	r7, [r8]
   24d38:	ldr	r3, [fp, #12]
   24d3c:	ldr	r5, [fp, #8]
   24d40:	orr	r4, r1, r7, lsl #24
   24d44:	movw	r1, #29745	; 0x7431
   24d48:	movt	r1, #26990	; 0x696e
   24d4c:	cmp	r4, r1
   24d50:	bhi	24d80 <main@@Base+0xeec8>
   24d54:	teq	r4, r1
   24d58:	bne	24e60 <main@@Base+0xefa8>
   24d5c:	str	r3, [sp]
   24d60:	mov	r1, r8
   24d64:	mov	r3, #4
   24d68:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24d6c:	cmp	r0, r8
   24d70:	beq	24e60 <main@@Base+0xefa8>
   24d74:	mov	r1, #0
   24d78:	mov	r2, #2
   24d7c:	b	24dcc <main@@Base+0xef14>
   24d80:	movw	r6, #0
   24d84:	movw	r1, #29806	; 0x746e
   24d88:	movt	r6, #25959	; 0x6567
   24d8c:	movt	r1, #26990	; 0x696e
   24d90:	subs	r7, sl, r6
   24d94:	sbcs	r7, r4, r1
   24d98:	bcs	24dd8 <main@@Base+0xef20>
   24d9c:	movw	r1, #29746	; 0x7432
   24da0:	movt	r1, #26990	; 0x696e
   24da4:	teq	r4, r1
   24da8:	bne	24e60 <main@@Base+0xefa8>
   24dac:	str	r3, [sp]
   24db0:	mov	r1, r8
   24db4:	mov	r3, #4
   24db8:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24dbc:	cmp	r0, r8
   24dc0:	beq	24e60 <main@@Base+0xefa8>
   24dc4:	mov	r1, #0
   24dc8:	mov	r2, #42	; 0x2a
   24dcc:	str	r2, [r5]
   24dd0:	str	r1, [r5, #4]
   24dd4:	b	24e54 <main@@Base+0xef9c>
   24dd8:	eor	r1, r4, r1
   24ddc:	add	r7, r6, #12800	; 0x3200
   24de0:	bic	r4, sl, #255	; 0xff
   24de4:	eor	r7, r4, r7
   24de8:	orrs	r7, r7, r1
   24dec:	bne	24e18 <main@@Base+0xef60>
   24df0:	str	r3, [sp]
   24df4:	mov	r1, r8
   24df8:	mov	r3, #7
   24dfc:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24e00:	cmp	r0, r8
   24e04:	beq	24e60 <main@@Base+0xefa8>
   24e08:	mvn	r2, #1
   24e0c:	mvn	r1, #0
   24e10:	orr	r2, r2, #1
   24e14:	b	24e48 <main@@Base+0xef90>
   24e18:	bfc	sl, #0, #16
   24e1c:	eor	r7, sl, r6
   24e20:	orrs	r1, r7, r1
   24e24:	bne	24e60 <main@@Base+0xefa8>
   24e28:	str	r3, [sp]
   24e2c:	mov	r1, r8
   24e30:	mov	r3, #6
   24e34:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24e38:	cmp	r0, r8
   24e3c:	beq	24e60 <main@@Base+0xefa8>
   24e40:	mvn	r1, #0
   24e44:	mvn	r2, #1
   24e48:	str	r2, [r5]
   24e4c:	str	r1, [r5, #4]
   24e50:	mov	r1, #1
   24e54:	ldr	r2, [sp, #8]
   24e58:	mov	r8, r0
   24e5c:	str	r1, [r2]
   24e60:	mov	r0, r8
   24e64:	sub	sp, fp, #28
   24e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24e6c:	push	{r4, r5, r6, r7, fp, lr}
   24e70:	add	fp, sp, #16
   24e74:	sub	sp, sp, #8
   24e78:	mov	r5, r1
   24e7c:	sub	r1, r2, r1
   24e80:	mov	r4, r3
   24e84:	cmp	r1, #8
   24e88:	movcs	r1, #8
   24e8c:	sub	r3, r1, #1
   24e90:	cmp	r3, #7
   24e94:	bhi	24fac <main@@Base+0xf0f4>
   24e98:	add	r7, pc, #8
   24e9c:	mov	r1, #0
   24ea0:	ldr	r3, [r7, r3, lsl #2]
   24ea4:	add	pc, r7, r3
   24ea8:	andeq	r0, r0, r8, lsr r0
   24eac:	andeq	r0, r0, r0, lsr r0
   24eb0:	andeq	r0, r0, r8, lsr #32
   24eb4:	andeq	r0, r0, r0, lsr #32
   24eb8:	andeq	r0, r0, r0, lsr #32
   24ebc:	andeq	r0, r0, r0, lsr #32
   24ec0:	andeq	r0, r0, r0, lsr #32
   24ec4:	andeq	r0, r0, r0, lsr #32
   24ec8:	ldrb	r3, [r5, #3]
   24ecc:	orr	r1, r3, r1
   24ed0:	ldrb	r3, [r5, #2]
   24ed4:	orr	r1, r1, r3, lsl #8
   24ed8:	ldrb	r3, [r5, #1]
   24edc:	orr	r1, r1, r3, lsl #16
   24ee0:	ldrb	r6, [r5]
   24ee4:	ldr	r3, [fp, #12]
   24ee8:	ldr	r7, [fp, #8]
   24eec:	orr	r1, r1, r6, lsl #24
   24ef0:	movw	r6, #26417	; 0x6731
   24ef4:	movt	r6, #28261	; 0x6e65
   24ef8:	cmp	r1, r6
   24efc:	bhi	24f2c <main@@Base+0xf074>
   24f00:	teq	r1, r6
   24f04:	bne	24fac <main@@Base+0xf0f4>
   24f08:	str	r3, [sp]
   24f0c:	mov	r1, r5
   24f10:	mov	r3, #4
   24f14:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24f18:	cmp	r0, r5
   24f1c:	beq	24fac <main@@Base+0xf0f4>
   24f20:	mvn	r1, #0
   24f24:	mvn	r2, #11
   24f28:	b	24f98 <main@@Base+0xf0e0>
   24f2c:	movw	r6, #26418	; 0x6732
   24f30:	movt	r6, #28261	; 0x6e65
   24f34:	teq	r1, r6
   24f38:	beq	24f74 <main@@Base+0xf0bc>
   24f3c:	movw	r6, #26419	; 0x6733
   24f40:	movt	r6, #28261	; 0x6e65
   24f44:	teq	r1, r6
   24f48:	bne	24fac <main@@Base+0xf0f4>
   24f4c:	str	r3, [sp]
   24f50:	mov	r1, r5
   24f54:	mov	r3, #4
   24f58:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24f5c:	cmp	r0, r5
   24f60:	beq	24fac <main@@Base+0xf0f4>
   24f64:	mvn	r2, #11
   24f68:	mvn	r1, #0
   24f6c:	orr	r2, r2, #2
   24f70:	b	24f98 <main@@Base+0xf0e0>
   24f74:	str	r3, [sp]
   24f78:	mov	r1, r5
   24f7c:	mov	r3, #4
   24f80:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   24f84:	cmp	r0, r5
   24f88:	beq	24fac <main@@Base+0xf0f4>
   24f8c:	mvn	r2, #11
   24f90:	mvn	r1, #0
   24f94:	orr	r2, r2, #1
   24f98:	str	r2, [r7]
   24f9c:	str	r1, [r7, #4]
   24fa0:	mov	r1, #1
   24fa4:	mov	r5, r0
   24fa8:	str	r1, [r4]
   24fac:	mov	r0, r5
   24fb0:	sub	sp, fp, #16
   24fb4:	pop	{r4, r5, r6, r7, fp, pc}
   24fb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24fbc:	add	fp, sp, #28
   24fc0:	sub	sp, sp, #12
   24fc4:	mov	sl, r1
   24fc8:	sub	r1, r2, r1
   24fcc:	cmp	r1, #8
   24fd0:	movcs	r1, #8
   24fd4:	sub	r7, r1, #1
   24fd8:	cmp	r7, #7
   24fdc:	bhi	2525c <main@@Base+0xf3a4>
   24fe0:	str	r3, [sp, #8]
   24fe4:	add	r1, pc, #36	; 0x24
   24fe8:	mov	r9, #0
   24fec:	mov	ip, #0
   24ff0:	mov	lr, #0
   24ff4:	mov	r6, #0
   24ff8:	mov	r4, #0
   24ffc:	mov	r5, #0
   25000:	mov	r8, #0
   25004:	ldr	r3, [r1, r7, lsl #2]
   25008:	mov	r7, #0
   2500c:	add	pc, r1, r3
   25010:	andeq	r0, r0, r4, rrx
   25014:	andeq	r0, r0, ip, asr r0
   25018:	andeq	r0, r0, r4, asr r0
   2501c:	andeq	r0, r0, ip, asr #32
   25020:	andeq	r0, r0, r0, asr #32
   25024:	andeq	r0, r0, r4, lsr r0
   25028:	andeq	r0, r0, r4, lsr #32
   2502c:	andeq	r0, r0, r0, lsr #32
   25030:	ldrb	ip, [sl, #7]
   25034:	ldrb	r1, [sl, #6]
   25038:	mov	lr, r9
   2503c:	orr	r1, ip, r1, lsl #8
   25040:	mov	r9, r1
   25044:	ldrb	r1, [sl, #5]
   25048:	mov	r6, lr
   2504c:	orr	r9, r9, r1, lsl #16
   25050:	ldrb	r1, [sl, #4]
   25054:	mov	r7, r6
   25058:	orr	r9, r9, r1, lsl #24
   2505c:	ldrb	r1, [sl, #3]
   25060:	orr	r4, r1, r7
   25064:	ldrb	r1, [sl, #2]
   25068:	orr	r5, r4, r1, lsl #8
   2506c:	ldrb	r1, [sl, #1]
   25070:	orr	r8, r5, r1, lsl #16
   25074:	ldrb	r1, [sl]
   25078:	ldr	lr, [fp, #12]
   2507c:	ldr	r5, [fp, #8]
   25080:	orr	r6, r8, r1, lsl #24
   25084:	movw	r1, #20036	; 0x4e44
   25088:	movt	r1, #20047	; 0x4e4f
   2508c:	cmp	r6, r1
   25090:	bhi	250f0 <main@@Base+0xf238>
   25094:	movw	r7, #28160	; 0x6e00
   25098:	movw	r4, #28523	; 0x6f6b
   2509c:	and	r3, r9, #-16777216	; 0xff000000
   250a0:	movt	r7, #18017	; 0x4661
   250a4:	movt	r4, #17007	; 0x426f
   250a8:	subs	r1, r9, r7
   250ac:	sbcs	r1, r6, r4
   250b0:	bcs	2513c <main@@Base+0xf284>
   250b4:	movw	r1, #27756	; 0x6c6c
   250b8:	eor	r3, r3, #1694498816	; 0x65000000
   250bc:	movt	r1, #16997	; 0x4265
   250c0:	eor	r1, r6, r1
   250c4:	orrs	r1, r3, r1
   250c8:	bne	2525c <main@@Base+0xf3a4>
   250cc:	mov	r1, sl
   250d0:	mov	r3, #5
   250d4:	str	lr, [sp]
   250d8:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   250dc:	cmp	r0, sl
   250e0:	beq	2525c <main@@Base+0xf3a4>
   250e4:	mov	r1, #0
   250e8:	mov	r2, #9
   250ec:	b	25248 <main@@Base+0xf390>
   250f0:	movw	r7, #26725	; 0x6865
   250f4:	mvn	r1, #-1912602624	; 0x8e000000
   250f8:	movt	r7, #20340	; 0x4f74
   250fc:	subs	r1, r1, r9
   25100:	sbcs	r1, r7, r6
   25104:	bcc	25178 <main@@Base+0xf2c0>
   25108:	movw	r1, #20037	; 0x4e45
   2510c:	movt	r1, #20047	; 0x4e4f
   25110:	teq	r6, r1
   25114:	bne	2525c <main@@Base+0xf3a4>
   25118:	mov	r1, sl
   2511c:	mov	r3, #4
   25120:	str	lr, [sp]
   25124:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   25128:	cmp	r0, sl
   2512c:	beq	2525c <main@@Base+0xf3a4>
   25130:	mov	r1, #0
   25134:	str	r1, [r5]
   25138:	b	2524c <main@@Base+0xf394>
   2513c:	movw	r1, #19553	; 0x4c61
   25140:	eor	r3, r3, #1845493760	; 0x6e000000
   25144:	movt	r1, #19829	; 0x4d75
   25148:	eor	r1, r6, r1
   2514c:	orrs	r1, r3, r1
   25150:	bne	251cc <main@@Base+0xf314>
   25154:	mov	r1, sl
   25158:	mov	r3, #5
   2515c:	str	lr, [sp]
   25160:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   25164:	cmp	r0, sl
   25168:	beq	2525c <main@@Base+0xf3a4>
   2516c:	mov	r1, #0
   25170:	mov	r2, #2
   25174:	b	25248 <main@@Base+0xf390>
   25178:	movw	r4, #25964	; 0x656c
   2517c:	movw	ip, #28789	; 0x7075
   25180:	movt	r4, #28282	; 0x6e7a
   25184:	movt	ip, #21089	; 0x5261
   25188:	subs	r1, r9, r4
   2518c:	sbcs	r1, r6, ip
   25190:	bcs	25204 <main@@Base+0xf34c>
   25194:	and	r3, r9, #-16777216	; 0xff000000
   25198:	eor	r1, r6, r7
   2519c:	eor	r3, r3, #1912602624	; 0x72000000
   251a0:	orrs	r1, r3, r1
   251a4:	bne	2525c <main@@Base+0xf3a4>
   251a8:	mov	r1, sl
   251ac:	mov	r3, #5
   251b0:	str	lr, [sp]
   251b4:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   251b8:	cmp	r0, sl
   251bc:	beq	2525c <main@@Base+0xf3a4>
   251c0:	mov	r1, #0
   251c4:	mov	r2, #11
   251c8:	b	25248 <main@@Base+0xf390>
   251cc:	bic	r3, r9, #255	; 0xff
   251d0:	eor	r1, r6, r4
   251d4:	eor	r3, r3, r7
   251d8:	orrs	r1, r3, r1
   251dc:	bne	2525c <main@@Base+0xf3a4>
   251e0:	mov	r1, sl
   251e4:	mov	r3, #7
   251e8:	str	lr, [sp]
   251ec:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   251f0:	cmp	r0, sl
   251f4:	beq	2525c <main@@Base+0xf3a4>
   251f8:	mov	r1, #0
   251fc:	mov	r2, #10
   25200:	b	25248 <main@@Base+0xf390>
   25204:	lsr	r3, r9, #16
   25208:	movw	r7, #25956	; 0x6564
   2520c:	movw	r1, #21870	; 0x556e
   25210:	orr	r3, r3, r6, lsl #16
   25214:	movt	r7, #30067	; 0x7573
   25218:	eor	r1, r1, r6, lsr #16
   2521c:	eor	r3, r3, r7
   25220:	orrs	r1, r3, r1
   25224:	bne	25268 <main@@Base+0xf3b0>
   25228:	mov	r1, sl
   2522c:	mov	r3, #6
   25230:	str	lr, [sp]
   25234:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   25238:	cmp	r0, sl
   2523c:	beq	2525c <main@@Base+0xf3a4>
   25240:	mov	r1, #0
   25244:	mov	r2, #255	; 0xff
   25248:	str	r2, [r5]
   2524c:	str	r1, [r5, #4]
   25250:	mov	sl, r0
   25254:	ldr	r2, [sp, #8]
   25258:	str	r1, [r2]
   2525c:	mov	r0, sl
   25260:	sub	sp, fp, #28
   25264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25268:	eor	r1, r9, r4
   2526c:	eor	r3, r6, ip
   25270:	orrs	r1, r1, r3
   25274:	bne	2525c <main@@Base+0xf3a4>
   25278:	mov	r1, sl
   2527c:	mov	r3, #8
   25280:	str	lr, [sp]
   25284:	mov	r4, #8
   25288:	bl	344ac <flatcc_json_parser_match_constant@@Base>
   2528c:	cmp	r0, sl
   25290:	beq	2525c <main@@Base+0xf3a4>
   25294:	mov	r1, #0
   25298:	str	r4, [r5]
   2529c:	b	2524c <main@@Base+0xf394>
   252a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   252a4:	add	fp, sp, #28
   252a8:	sub	sp, sp, #36	; 0x24
   252ac:	mov	r5, r0
   252b0:	mov	r0, #0
   252b4:	mov	r4, r1
   252b8:	mov	r1, #4
   252bc:	mov	r7, r3
   252c0:	mov	r8, r2
   252c4:	str	r0, [r3]
   252c8:	ldr	r0, [r5]
   252cc:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   252d0:	cmp	r0, #0
   252d4:	beq	252fc <main@@Base+0xf444>
   252d8:	mov	r0, r5
   252dc:	mov	r1, r4
   252e0:	mov	r2, r8
   252e4:	mov	r3, #33	; 0x21
   252e8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   252ec:	mov	r4, r0
   252f0:	mov	r0, r4
   252f4:	sub	sp, fp, #28
   252f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   252fc:	add	r0, sp, #28
   25300:	mov	r1, r4
   25304:	mov	r2, r8
   25308:	mov	r3, #1
   2530c:	str	r0, [sp]
   25310:	mov	r0, r5
   25314:	bl	36b24 <flatcc_json_parser_prepare_unions@@Base>
   25318:	cmp	r0, r8
   2531c:	beq	252d8 <main@@Base+0xf420>
   25320:	cmp	r4, r8
   25324:	beq	25358 <main@@Base+0xf4a0>
   25328:	ldrb	r0, [r4]
   2532c:	cmp	r0, #123	; 0x7b
   25330:	bne	25358 <main@@Base+0xf4a0>
   25334:	add	r1, r4, #1
   25338:	sub	r0, r8, r1
   2533c:	cmp	r0, #2
   25340:	blt	253bc <main@@Base+0xf504>
   25344:	ldrb	r0, [r1]
   25348:	cmp	r0, #32
   2534c:	bls	253ac <main@@Base+0xf4f4>
   25350:	mov	r4, r1
   25354:	b	253cc <main@@Base+0xf514>
   25358:	mov	r0, r5
   2535c:	mov	r1, r4
   25360:	mov	r2, r8
   25364:	mov	r3, #21
   25368:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2536c:	mov	r4, r0
   25370:	ldr	r0, [r5, #20]
   25374:	cmp	r0, #0
   25378:	bne	252d8 <main@@Base+0xf420>
   2537c:	ldr	r3, [sp, #28]
   25380:	mov	r0, r5
   25384:	mov	r1, r4
   25388:	mov	r2, r8
   2538c:	bl	36bb4 <flatcc_json_parser_finalize_unions@@Base>
   25390:	mov	r4, r0
   25394:	ldr	r0, [r5]
   25398:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   2539c:	cmp	r0, #0
   253a0:	str	r0, [r7]
   253a4:	bne	252f0 <main@@Base+0xf438>
   253a8:	b	252d8 <main@@Base+0xf420>
   253ac:	bne	253bc <main@@Base+0xf504>
   253b0:	ldrb	r0, [r4, #2]!
   253b4:	cmp	r0, #32
   253b8:	bhi	253cc <main@@Base+0xf514>
   253bc:	mov	r0, r5
   253c0:	mov	r2, r8
   253c4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   253c8:	mov	r4, r0
   253cc:	cmp	r4, r8
   253d0:	mov	r2, r8
   253d4:	beq	25418 <main@@Base+0xf560>
   253d8:	ldrb	r0, [r4]
   253dc:	cmp	r0, #125	; 0x7d
   253e0:	bne	25414 <main@@Base+0xf55c>
   253e4:	add	r1, r4, #1
   253e8:	sub	r0, r8, r1
   253ec:	cmp	r0, #2
   253f0:	blt	25bf8 <main@@Base+0xfd40>
   253f4:	ldrb	r0, [r1]
   253f8:	cmp	r0, #32
   253fc:	bhi	25bbc <main@@Base+0xfd04>
   25400:	bne	25bf8 <main@@Base+0xfd40>
   25404:	ldrb	r0, [r4, #2]!
   25408:	cmp	r0, #32
   2540c:	bhi	25370 <main@@Base+0xf4b8>
   25410:	b	25bf8 <main@@Base+0xfd40>
   25414:	mov	r2, r4
   25418:	str	r7, [sp, #20]
   2541c:	cmp	r2, r8
   25420:	mov	r9, r8
   25424:	beq	25454 <main@@Base+0xf59c>
   25428:	ldrb	r0, [r2]
   2542c:	cmp	r0, #34	; 0x22
   25430:	bne	2543c <main@@Base+0xf584>
   25434:	add	r9, r2, #1
   25438:	b	25454 <main@@Base+0xf59c>
   2543c:	mov	r1, r2
   25440:	mov	r0, r5
   25444:	mov	r2, r8
   25448:	mov	r3, #5
   2544c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   25450:	mov	r9, r0
   25454:	sub	r1, r8, r9
   25458:	mov	r0, #8
   2545c:	cmp	r1, #8
   25460:	movcc	r0, r1
   25464:	sub	r0, r0, #1
   25468:	cmp	r0, #7
   2546c:	bhi	25ab4 <main@@Base+0xfbfc>
   25470:	str	r1, [sp, #24]
   25474:	add	r4, pc, #40	; 0x28
   25478:	mov	lr, r5
   2547c:	mov	sl, #0
   25480:	mov	ip, #0
   25484:	mov	r5, #0
   25488:	mov	r1, #0
   2548c:	mov	r2, #0
   25490:	mov	r3, #0
   25494:	mov	r6, #0
   25498:	mov	r7, #0
   2549c:	ldr	r0, [r4, r0, lsl #2]
   254a0:	add	pc, r4, r0
   254a4:	andeq	r0, r0, r4, rrx
   254a8:	andeq	r0, r0, ip, asr r0
   254ac:	andeq	r0, r0, r4, asr r0
   254b0:	andeq	r0, r0, ip, asr #32
   254b4:	andeq	r0, r0, r0, asr #32
   254b8:	andeq	r0, r0, r4, lsr r0
   254bc:	andeq	r0, r0, r4, lsr #32
   254c0:	andeq	r0, r0, r0, lsr #32
   254c4:	ldrb	ip, [r9, #7]
   254c8:	ldrb	r0, [r9, #6]
   254cc:	mov	r5, sl
   254d0:	orr	r0, ip, r0, lsl #8
   254d4:	mov	sl, r0
   254d8:	ldrb	r0, [r9, #5]
   254dc:	mov	r1, r5
   254e0:	orr	sl, sl, r0, lsl #16
   254e4:	ldrb	r0, [r9, #4]
   254e8:	mov	r2, r1
   254ec:	orr	sl, sl, r0, lsl #24
   254f0:	ldrb	r0, [r9, #3]
   254f4:	orr	r3, r0, r2
   254f8:	ldrb	r0, [r9, #2]
   254fc:	orr	r6, r3, r0, lsl #8
   25500:	ldrb	r0, [r9, #1]
   25504:	orr	r7, r6, r0, lsl #16
   25508:	movw	r2, #30976	; 0x7900
   2550c:	movt	r2, #24942	; 0x616e
   25510:	add	r0, r2, #95	; 0x5f
   25514:	eor	r1, sl, r0
   25518:	ldrb	r0, [r9]
   2551c:	orr	r4, r7, r0, lsl #24
   25520:	movw	r0, #28281	; 0x6e79
   25524:	movt	r0, #28001	; 0x6d61
   25528:	eor	r0, r4, r0
   2552c:	orrs	r1, r1, r0
   25530:	bne	255f8 <main@@Base+0xf740>
   25534:	add	r6, r9, #8
   25538:	ldr	r7, [sp, #20]
   2553c:	mov	r1, #8
   25540:	mov	r5, lr
   25544:	sub	r0, r8, r6
   25548:	cmp	r0, #8
   2554c:	movcc	r1, r0
   25550:	sub	r2, r1, #1
   25554:	cmp	r2, #7
   25558:	bhi	25804 <main@@Base+0xf94c>
   2555c:	add	r3, pc, #8
   25560:	mov	r1, #0
   25564:	ldr	r2, [r3, r2, lsl #2]
   25568:	add	pc, r3, r2
   2556c:	andeq	r0, r0, r4, lsr r0
   25570:	andeq	r0, r0, ip, lsr #32
   25574:	andeq	r0, r0, r4, lsr #32
   25578:	andeq	r0, r0, r0, lsr #32
   2557c:	andeq	r0, r0, r0, lsr #32
   25580:	andeq	r0, r0, r0, lsr #32
   25584:	andeq	r0, r0, r0, lsr #32
   25588:	andeq	r0, r0, r0, lsr #32
   2558c:	ldrb	r1, [r9, #11]
   25590:	ldrb	r2, [r9, #10]
   25594:	orr	r1, r1, r2, lsl #8
   25598:	ldrb	r2, [r9, #9]
   2559c:	orr	r1, r1, r2, lsl #16
   255a0:	ldrb	r2, [r6]
   255a4:	orr	r1, r1, r2, lsl #24
   255a8:	movw	r2, #28773	; 0x7065
   255ac:	movt	r2, #29817	; 0x7479
   255b0:	teq	r1, r2
   255b4:	bne	25804 <main@@Base+0xf94c>
   255b8:	cmp	r0, #5
   255bc:	blt	25804 <main@@Base+0xf94c>
   255c0:	ldrb	r0, [r9, #12]
   255c4:	cmp	r0, #34	; 0x22
   255c8:	bne	25804 <main@@Base+0xf94c>
   255cc:	add	r1, r9, #13
   255d0:	sub	r0, r8, r1
   255d4:	cmp	r0, #2
   255d8:	blt	257b8 <main@@Base+0xf900>
   255dc:	ldrb	r0, [r1]
   255e0:	cmp	r0, #32
   255e4:	bls	257a8 <main@@Base+0xf8f0>
   255e8:	mov	r9, r1
   255ec:	cmp	r9, r8
   255f0:	bne	257d0 <main@@Base+0xf918>
   255f4:	b	25810 <main@@Base+0xf958>
   255f8:	ldr	r6, [sp, #24]
   255fc:	bic	r1, sl, #255	; 0xff
   25600:	mov	r5, lr
   25604:	eor	r1, r1, r2
   25608:	orrs	r0, r1, r0
   2560c:	bne	256bc <main@@Base+0xf804>
   25610:	cmp	r6, #8
   25614:	mov	r1, r9
   25618:	blt	25944 <main@@Base+0xfa8c>
   2561c:	ldrb	r0, [r9, #7]
   25620:	mov	r1, r9
   25624:	cmp	r0, #34	; 0x22
   25628:	bne	25944 <main@@Base+0xfa8c>
   2562c:	add	r2, r9, #8
   25630:	sub	r0, r8, r2
   25634:	cmp	r0, #2
   25638:	blt	2566c <main@@Base+0xf7b4>
   2563c:	ldrb	r0, [r2]
   25640:	cmp	r0, #32
   25644:	bls	25658 <main@@Base+0xf7a0>
   25648:	mov	r1, r2
   2564c:	cmp	r1, r8
   25650:	bne	25688 <main@@Base+0xf7d0>
   25654:	b	25794 <main@@Base+0xf8dc>
   25658:	bne	2566c <main@@Base+0xf7b4>
   2565c:	mov	r1, r9
   25660:	ldrb	r0, [r1, #9]!
   25664:	cmp	r0, #32
   25668:	bhi	25680 <main@@Base+0xf7c8>
   2566c:	mov	r1, r2
   25670:	mov	r0, r5
   25674:	mov	r2, r8
   25678:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2567c:	mov	r1, r0
   25680:	cmp	r1, r8
   25684:	beq	25794 <main@@Base+0xf8dc>
   25688:	ldrb	r0, [r1]
   2568c:	cmp	r0, #58	; 0x3a
   25690:	bne	25794 <main@@Base+0xf8dc>
   25694:	add	r2, r1, #1
   25698:	sub	r0, r8, r2
   2569c:	cmp	r0, #2
   256a0:	blt	25930 <main@@Base+0xfa78>
   256a4:	ldrb	r0, [r2]
   256a8:	cmp	r0, #32
   256ac:	bls	25920 <main@@Base+0xfa68>
   256b0:	mov	r1, r2
   256b4:	cmp	r9, r1
   256b8:	bne	2594c <main@@Base+0xfa94>
   256bc:	lsr	r1, sl, #16
   256c0:	movw	r2, #27000	; 0x6978
   256c4:	movw	r0, #28786	; 0x7072
   256c8:	orr	r1, r1, r4, lsl #16
   256cc:	movt	r2, #25958	; 0x6566
   256d0:	eor	r0, r0, r4, lsr #16
   256d4:	eor	r1, r1, r2
   256d8:	orrs	r0, r1, r0
   256dc:	bne	2572c <main@@Base+0xf874>
   256e0:	ldr	r7, [sp, #20]
   256e4:	cmp	r6, #7
   256e8:	mov	r1, r9
   256ec:	blt	25a18 <main@@Base+0xfb60>
   256f0:	ldrb	r0, [r9, #6]
   256f4:	mov	r1, r9
   256f8:	cmp	r0, #34	; 0x22
   256fc:	bne	25a18 <main@@Base+0xfb60>
   25700:	add	r2, r9, #7
   25704:	sub	r0, r8, r2
   25708:	cmp	r0, #2
   2570c:	blt	2583c <main@@Base+0xf984>
   25710:	ldrb	r0, [r2]
   25714:	cmp	r0, #32
   25718:	bls	25828 <main@@Base+0xf970>
   2571c:	mov	r1, r2
   25720:	cmp	r1, r8
   25724:	bne	25858 <main@@Base+0xf9a0>
   25728:	b	25890 <main@@Base+0xf9d8>
   2572c:	movw	r0, #30313	; 0x7669
   25730:	ldr	r7, [sp, #20]
   25734:	and	r1, sl, #-16777216	; 0xff000000
   25738:	movt	r0, #28015	; 0x6d6f
   2573c:	eor	r1, r1, #1694498816	; 0x65000000
   25740:	eor	r0, r4, r0
   25744:	orrs	r0, r1, r0
   25748:	bne	25ab4 <main@@Base+0xfbfc>
   2574c:	cmp	r6, #6
   25750:	mov	r1, r9
   25754:	blt	25a70 <main@@Base+0xfbb8>
   25758:	ldrb	r0, [r9, #5]
   2575c:	mov	r1, r9
   25760:	cmp	r0, #34	; 0x22
   25764:	bne	25a70 <main@@Base+0xfbb8>
   25768:	add	r2, r9, #6
   2576c:	sub	r0, r8, r2
   25770:	cmp	r0, #2
   25774:	blt	258b8 <main@@Base+0xfa00>
   25778:	ldrb	r0, [r2]
   2577c:	cmp	r0, #32
   25780:	bls	258a4 <main@@Base+0xf9ec>
   25784:	mov	r1, r2
   25788:	cmp	r1, r8
   2578c:	bne	258d4 <main@@Base+0xfa1c>
   25790:	b	2590c <main@@Base+0xfa54>
   25794:	mov	r0, r5
   25798:	mov	r2, r8
   2579c:	mov	r3, #4
   257a0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   257a4:	b	25940 <main@@Base+0xfa88>
   257a8:	bne	257b8 <main@@Base+0xf900>
   257ac:	ldrb	r0, [r9, #14]!
   257b0:	cmp	r0, #32
   257b4:	bhi	257c8 <main@@Base+0xf910>
   257b8:	mov	r0, r5
   257bc:	mov	r2, r8
   257c0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   257c4:	mov	r9, r0
   257c8:	cmp	r9, r8
   257cc:	beq	25810 <main@@Base+0xf958>
   257d0:	ldrb	r0, [r9]
   257d4:	cmp	r0, #58	; 0x3a
   257d8:	bne	25810 <main@@Base+0xf958>
   257dc:	add	r1, r9, #1
   257e0:	sub	r0, r8, r1
   257e4:	cmp	r0, #2
   257e8:	blt	25990 <main@@Base+0xfad8>
   257ec:	ldrb	r0, [r1]
   257f0:	cmp	r0, #32
   257f4:	bls	25980 <main@@Base+0xfac8>
   257f8:	mov	r9, r1
   257fc:	cmp	r6, r9
   25800:	bne	259a8 <main@@Base+0xfaf0>
   25804:	mov	r0, r5
   25808:	mov	r1, r6
   2580c:	b	25abc <main@@Base+0xfc04>
   25810:	mov	r0, r5
   25814:	mov	r1, r9
   25818:	mov	r2, r8
   2581c:	mov	r3, #4
   25820:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   25824:	b	2599c <main@@Base+0xfae4>
   25828:	bne	2583c <main@@Base+0xf984>
   2582c:	mov	r1, r9
   25830:	ldrb	r0, [r1, #8]!
   25834:	cmp	r0, #32
   25838:	bhi	25850 <main@@Base+0xf998>
   2583c:	mov	r1, r2
   25840:	mov	r0, r5
   25844:	mov	r2, r8
   25848:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2584c:	mov	r1, r0
   25850:	cmp	r1, r8
   25854:	beq	25890 <main@@Base+0xf9d8>
   25858:	ldrb	r0, [r1]
   2585c:	cmp	r0, #58	; 0x3a
   25860:	bne	25890 <main@@Base+0xf9d8>
   25864:	add	r2, r1, #1
   25868:	sub	r0, r8, r2
   2586c:	cmp	r0, #2
   25870:	blt	25a04 <main@@Base+0xfb4c>
   25874:	ldrb	r0, [r2]
   25878:	cmp	r0, #32
   2587c:	bls	259f4 <main@@Base+0xfb3c>
   25880:	mov	r1, r2
   25884:	cmp	r9, r1
   25888:	bne	25a20 <main@@Base+0xfb68>
   2588c:	b	25ab4 <main@@Base+0xfbfc>
   25890:	mov	r0, r5
   25894:	mov	r2, r8
   25898:	mov	r3, #4
   2589c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   258a0:	b	25a14 <main@@Base+0xfb5c>
   258a4:	bne	258b8 <main@@Base+0xfa00>
   258a8:	mov	r1, r9
   258ac:	ldrb	r0, [r1, #7]!
   258b0:	cmp	r0, #32
   258b4:	bhi	258cc <main@@Base+0xfa14>
   258b8:	mov	r1, r2
   258bc:	mov	r0, r5
   258c0:	mov	r2, r8
   258c4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   258c8:	mov	r1, r0
   258cc:	cmp	r1, r8
   258d0:	beq	2590c <main@@Base+0xfa54>
   258d4:	ldrb	r0, [r1]
   258d8:	cmp	r0, #58	; 0x3a
   258dc:	bne	2590c <main@@Base+0xfa54>
   258e0:	add	r2, r1, #1
   258e4:	sub	r0, r8, r2
   258e8:	cmp	r0, #2
   258ec:	blt	25a5c <main@@Base+0xfba4>
   258f0:	ldrb	r0, [r2]
   258f4:	cmp	r0, #32
   258f8:	bls	25a4c <main@@Base+0xfb94>
   258fc:	mov	r1, r2
   25900:	cmp	r9, r1
   25904:	bne	25a78 <main@@Base+0xfbc0>
   25908:	b	25ab4 <main@@Base+0xfbfc>
   2590c:	mov	r0, r5
   25910:	mov	r2, r8
   25914:	mov	r3, #4
   25918:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2591c:	b	25a6c <main@@Base+0xfbb4>
   25920:	bne	25930 <main@@Base+0xfa78>
   25924:	ldrb	r0, [r1, #2]!
   25928:	cmp	r0, #32
   2592c:	bhi	25944 <main@@Base+0xfa8c>
   25930:	mov	r1, r2
   25934:	mov	r0, r5
   25938:	mov	r2, r8
   2593c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   25940:	mov	r1, r0
   25944:	cmp	r9, r1
   25948:	beq	256bc <main@@Base+0xf804>
   2594c:	ldr	r0, [sp, #28]
   25950:	mov	r2, #3
   25954:	mov	r3, #0
   25958:	str	r2, [sp]
   2595c:	mov	r2, r8
   25960:	str	r0, [sp, #4]
   25964:	ldr	r0, [pc, #680]	; 25c14 <main@@Base+0xfd5c>
   25968:	add	r0, pc, r0
   2596c:	str	r0, [sp, #8]
   25970:	mov	r0, r5
   25974:	bl	372e0 <flatcc_json_parser_union_vector@@Base>
   25978:	ldr	r7, [sp, #20]
   2597c:	b	25ac4 <main@@Base+0xfc0c>
   25980:	bne	25990 <main@@Base+0xfad8>
   25984:	ldrb	r0, [r9, #2]!
   25988:	cmp	r0, #32
   2598c:	bhi	259a0 <main@@Base+0xfae8>
   25990:	mov	r0, r5
   25994:	mov	r2, r8
   25998:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2599c:	mov	r9, r0
   259a0:	cmp	r6, r9
   259a4:	beq	25804 <main@@Base+0xf94c>
   259a8:	ldr	r0, [sp, #28]
   259ac:	mov	r1, #3
   259b0:	mov	r2, r8
   259b4:	mov	r3, #0
   259b8:	str	r1, [sp]
   259bc:	mov	r1, r9
   259c0:	str	r0, [sp, #4]
   259c4:	ldr	r0, [pc, #572]	; 25c08 <main@@Base+0xfd50>
   259c8:	add	r0, pc, r0
   259cc:	str	r0, [sp, #8]
   259d0:	ldr	r0, [pc, #564]	; 25c0c <main@@Base+0xfd54>
   259d4:	add	r0, pc, r0
   259d8:	str	r0, [sp, #12]
   259dc:	ldr	r0, [pc, #556]	; 25c10 <main@@Base+0xfd58>
   259e0:	add	r0, pc, r0
   259e4:	str	r0, [sp, #16]
   259e8:	mov	r0, r5
   259ec:	bl	377dc <flatcc_json_parser_union_type_vector@@Base>
   259f0:	b	25ac4 <main@@Base+0xfc0c>
   259f4:	bne	25a04 <main@@Base+0xfb4c>
   259f8:	ldrb	r0, [r1, #2]!
   259fc:	cmp	r0, #32
   25a00:	bhi	25a18 <main@@Base+0xfb60>
   25a04:	mov	r1, r2
   25a08:	mov	r0, r5
   25a0c:	mov	r2, r8
   25a10:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   25a14:	mov	r1, r0
   25a18:	cmp	r9, r1
   25a1c:	beq	25ab4 <main@@Base+0xfbfc>
   25a20:	mov	r0, r5
   25a24:	mov	r2, r8
   25a28:	add	r3, sp, #32
   25a2c:	bl	25c2c <main@@Base+0xfd74>
   25a30:	ldr	r6, [sp, #32]
   25a34:	mov	r4, r0
   25a38:	cmp	r6, #0
   25a3c:	beq	252d8 <main@@Base+0xf420>
   25a40:	ldr	r0, [r5]
   25a44:	mov	r1, #0
   25a48:	b	25aa0 <main@@Base+0xfbe8>
   25a4c:	bne	25a5c <main@@Base+0xfba4>
   25a50:	ldrb	r0, [r1, #2]!
   25a54:	cmp	r0, #32
   25a58:	bhi	25a70 <main@@Base+0xfbb8>
   25a5c:	mov	r1, r2
   25a60:	mov	r0, r5
   25a64:	mov	r2, r8
   25a68:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   25a6c:	mov	r1, r0
   25a70:	cmp	r9, r1
   25a74:	beq	25ab4 <main@@Base+0xfbfc>
   25a78:	mov	r0, r5
   25a7c:	mov	r2, r8
   25a80:	add	r3, sp, #32
   25a84:	bl	28e68 <main@@Base+0x12fb0>
   25a88:	ldr	r6, [sp, #32]
   25a8c:	mov	r4, r0
   25a90:	cmp	r6, #0
   25a94:	beq	252d8 <main@@Base+0xf420>
   25a98:	ldr	r0, [r5]
   25a9c:	mov	r1, #1
   25aa0:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   25aa4:	cmp	r0, #0
   25aa8:	beq	252d8 <main@@Base+0xf420>
   25aac:	str	r6, [r0]
   25ab0:	b	25ac8 <main@@Base+0xfc10>
   25ab4:	mov	r0, r5
   25ab8:	mov	r1, r9
   25abc:	mov	r2, r8
   25ac0:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   25ac4:	mov	r4, r0
   25ac8:	sub	r0, r8, r4
   25acc:	cmp	r0, #2
   25ad0:	blt	25b04 <main@@Base+0xfc4c>
   25ad4:	ldrb	r0, [r4]
   25ad8:	cmp	r0, #32
   25adc:	bls	25af0 <main@@Base+0xfc38>
   25ae0:	mov	r2, r4
   25ae4:	cmp	r2, r8
   25ae8:	bne	25b20 <main@@Base+0xfc68>
   25aec:	b	25b90 <main@@Base+0xfcd8>
   25af0:	bne	25b04 <main@@Base+0xfc4c>
   25af4:	mov	r2, r4
   25af8:	ldrb	r0, [r2, #1]!
   25afc:	cmp	r0, #32
   25b00:	bhi	25b18 <main@@Base+0xfc60>
   25b04:	mov	r0, r5
   25b08:	mov	r1, r4
   25b0c:	mov	r2, r8
   25b10:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   25b14:	mov	r2, r0
   25b18:	cmp	r2, r8
   25b1c:	beq	25b90 <main@@Base+0xfcd8>
   25b20:	ldrb	r0, [r2]
   25b24:	cmp	r0, #44	; 0x2c
   25b28:	bne	25b98 <main@@Base+0xfce0>
   25b2c:	add	r1, r2, #1
   25b30:	sub	r0, r8, r1
   25b34:	cmp	r0, #2
   25b38:	blt	25b68 <main@@Base+0xfcb0>
   25b3c:	ldrb	r0, [r1]
   25b40:	cmp	r0, #32
   25b44:	bls	25b58 <main@@Base+0xfca0>
   25b48:	mov	r2, r1
   25b4c:	cmp	r2, r8
   25b50:	bne	25b80 <main@@Base+0xfcc8>
   25b54:	b	25bc4 <main@@Base+0xfd0c>
   25b58:	bne	25b68 <main@@Base+0xfcb0>
   25b5c:	ldrb	r0, [r2, #2]!
   25b60:	cmp	r0, #32
   25b64:	bhi	25b78 <main@@Base+0xfcc0>
   25b68:	mov	r0, r5
   25b6c:	mov	r2, r8
   25b70:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   25b74:	mov	r2, r0
   25b78:	cmp	r2, r8
   25b7c:	beq	25bc4 <main@@Base+0xfd0c>
   25b80:	ldrb	r0, [r2]
   25b84:	cmp	r0, #125	; 0x7d
   25b88:	bne	2541c <main@@Base+0xf564>
   25b8c:	b	25ba0 <main@@Base+0xfce8>
   25b90:	mov	r4, r8
   25b94:	b	25370 <main@@Base+0xf4b8>
   25b98:	cmp	r0, #125	; 0x7d
   25b9c:	bne	25bd0 <main@@Base+0xfd18>
   25ba0:	add	r1, r2, #1
   25ba4:	sub	r0, r8, r1
   25ba8:	cmp	r0, #2
   25bac:	blt	25bf8 <main@@Base+0xfd40>
   25bb0:	ldrb	r0, [r1]
   25bb4:	cmp	r0, #32
   25bb8:	bls	25be4 <main@@Base+0xfd2c>
   25bbc:	mov	r4, r1
   25bc0:	b	25370 <main@@Base+0xf4b8>
   25bc4:	mov	r0, r5
   25bc8:	mov	r1, r8
   25bcc:	b	25bd8 <main@@Base+0xfd20>
   25bd0:	mov	r0, r5
   25bd4:	mov	r1, r2
   25bd8:	mov	r2, r8
   25bdc:	mov	r3, #10
   25be0:	b	25368 <main@@Base+0xf4b0>
   25be4:	bne	25bf8 <main@@Base+0xfd40>
   25be8:	ldrb	r0, [r2, #2]!
   25bec:	mov	r4, r2
   25bf0:	cmp	r0, #32
   25bf4:	bhi	25370 <main@@Base+0xf4b8>
   25bf8:	mov	r0, r5
   25bfc:	mov	r2, r8
   25c00:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   25c04:	b	2536c <main@@Base+0xf4b4>
   25c08:	andeq	r6, r3, ip, asr r8
   25c0c:			; <UNDEFINED> instruction: 0xffffce5c
   25c10:	andeq	r0, r0, r0, lsr r2
   25c14:			; <UNDEFINED> instruction: 0xffffcec8
   25c18:	cmp	r0, #5
   25c1c:	mov	r1, #0
   25c20:	movwcc	r1, #1
   25c24:	mov	r0, r1
   25c28:	bx	lr
   25c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c30:	add	fp, sp, #28
   25c34:	sub	sp, sp, #60	; 0x3c
   25c38:	mov	r6, r0
   25c3c:	mov	r0, #0
   25c40:	mov	sl, r1
   25c44:	mov	r1, #3
   25c48:	mov	r4, r3
   25c4c:	mov	r8, r2
   25c50:	str	r0, [r3]
   25c54:	ldr	r0, [r6]
   25c58:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   25c5c:	cmp	r0, #0
   25c60:	bne	25cc0 <main@@Base+0xfe08>
   25c64:	cmp	sl, r8
   25c68:	beq	25c9c <main@@Base+0xfde4>
   25c6c:	ldrb	r0, [sl]
   25c70:	cmp	r0, #123	; 0x7b
   25c74:	bne	25c9c <main@@Base+0xfde4>
   25c78:	add	r1, sl, #1
   25c7c:	sub	r0, r8, r1
   25c80:	cmp	r0, #2
   25c84:	blt	25d0c <main@@Base+0xfe54>
   25c88:	ldrb	r0, [r1]
   25c8c:	cmp	r0, #32
   25c90:	bls	25cfc <main@@Base+0xfe44>
   25c94:	mov	sl, r1
   25c98:	b	25d1c <main@@Base+0xfe64>
   25c9c:	mov	r0, r6
   25ca0:	mov	r1, sl
   25ca4:	mov	r2, r8
   25ca8:	mov	r3, #21
   25cac:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   25cb0:	mov	sl, r0
   25cb4:	ldr	r0, [r6, #20]
   25cb8:	cmp	r0, #0
   25cbc:	beq	25ce4 <main@@Base+0xfe2c>
   25cc0:	mov	r0, r6
   25cc4:	mov	r1, sl
   25cc8:	mov	r2, r8
   25ccc:	mov	r3, #33	; 0x21
   25cd0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   25cd4:	mov	sl, r0
   25cd8:	mov	r0, sl
   25cdc:	sub	sp, fp, #28
   25ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ce4:	ldr	r0, [r6]
   25ce8:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   25cec:	cmp	r0, #0
   25cf0:	str	r0, [r4]
   25cf4:	bne	25cd8 <main@@Base+0xfe20>
   25cf8:	b	25cc0 <main@@Base+0xfe08>
   25cfc:	bne	25d0c <main@@Base+0xfe54>
   25d00:	ldrb	r0, [sl, #2]!
   25d04:	cmp	r0, #32
   25d08:	bhi	25d1c <main@@Base+0xfe64>
   25d0c:	mov	r0, r6
   25d10:	mov	r2, r8
   25d14:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   25d18:	mov	sl, r0
   25d1c:	cmp	sl, r8
   25d20:	mov	r2, r8
   25d24:	beq	25d68 <main@@Base+0xfeb0>
   25d28:	ldrb	r0, [sl]
   25d2c:	cmp	r0, #125	; 0x7d
   25d30:	bne	25d64 <main@@Base+0xfeac>
   25d34:	add	r1, sl, #1
   25d38:	sub	r0, r8, r1
   25d3c:	cmp	r0, #2
   25d40:	blt	28e00 <main@@Base+0x12f48>
   25d44:	ldrb	r0, [r1]
   25d48:	cmp	r0, #32
   25d4c:	bhi	28dc4 <main@@Base+0x12f0c>
   25d50:	bne	28e00 <main@@Base+0x12f48>
   25d54:	ldrb	r0, [sl, #2]!
   25d58:	cmp	r0, #32
   25d5c:	bhi	25cb4 <main@@Base+0xfdfc>
   25d60:	b	28e00 <main@@Base+0x12f48>
   25d64:	mov	r2, sl
   25d68:	movw	r1, #25186	; 0x6262
   25d6c:	movw	r0, #257	; 0x101
   25d70:	movw	sl, #0
   25d74:	str	r8, [sp, #16]
   25d78:	str	r6, [sp, #24]
   25d7c:	str	r4, [sp, #20]
   25d80:	movt	r1, #25186	; 0x6262
   25d84:	movt	r0, #257	; 0x101
   25d88:	movt	sl, #26418	; 0x6732
   25d8c:	add	r0, r1, r0
   25d90:	str	r0, [sp, #12]
   25d94:	movw	r0, #514	; 0x202
   25d98:	movt	r0, #514	; 0x202
   25d9c:	add	r0, r1, r0
   25da0:	str	r0, [sp, #8]
   25da4:	cmp	r2, r8
   25da8:	mov	r9, r8
   25dac:	beq	25ddc <main@@Base+0xff24>
   25db0:	ldrb	r0, [r2]
   25db4:	cmp	r0, #34	; 0x22
   25db8:	bne	25dc4 <main@@Base+0xff0c>
   25dbc:	add	r9, r2, #1
   25dc0:	b	25ddc <main@@Base+0xff24>
   25dc4:	mov	r1, r2
   25dc8:	mov	r0, r6
   25dcc:	mov	r2, r8
   25dd0:	mov	r3, #5
   25dd4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   25dd8:	mov	r9, r0
   25ddc:	sub	r0, r8, r9
   25de0:	mov	r1, #8
   25de4:	cmp	r0, #8
   25de8:	movcs	r0, r1
   25dec:	sub	r1, r0, #1
   25df0:	cmp	r1, #7
   25df4:	bhi	26090 <main@@Base+0x101d8>
   25df8:	add	r6, pc, #36	; 0x24
   25dfc:	mov	r0, #0
   25e00:	mov	ip, #0
   25e04:	mov	lr, #0
   25e08:	mov	r2, #0
   25e0c:	mov	r3, #0
   25e10:	mov	r7, #0
   25e14:	mov	r5, #0
   25e18:	mov	r4, #0
   25e1c:	ldr	r1, [r6, r1, lsl #2]
   25e20:	add	pc, r6, r1
   25e24:	andeq	r0, r0, r4, rrx
   25e28:	andeq	r0, r0, ip, asr r0
   25e2c:	andeq	r0, r0, r4, asr r0
   25e30:	andeq	r0, r0, ip, asr #32
   25e34:	andeq	r0, r0, r0, asr #32
   25e38:	andeq	r0, r0, r4, lsr r0
   25e3c:	andeq	r0, r0, r4, lsr #32
   25e40:	andeq	r0, r0, r0, lsr #32
   25e44:	ldrb	ip, [r9, #7]
   25e48:	ldrb	r1, [r9, #6]
   25e4c:	mov	lr, r0
   25e50:	orr	r1, ip, r1, lsl #8
   25e54:	mov	r0, r1
   25e58:	ldrb	r1, [r9, #5]
   25e5c:	mov	r2, lr
   25e60:	orr	r0, r0, r1, lsl #16
   25e64:	ldrb	r1, [r9, #4]
   25e68:	mov	r3, r2
   25e6c:	orr	r0, r0, r1, lsl #24
   25e70:	ldrb	r1, [r9, #3]
   25e74:	orr	r7, r1, r3
   25e78:	ldrb	r1, [r9, #2]
   25e7c:	orr	r5, r7, r1, lsl #8
   25e80:	ldrb	r1, [r9, #1]
   25e84:	orr	r4, r5, r1, lsl #16
   25e88:	movw	r1, #28526	; 0x6f6e
   25e8c:	movw	r2, #29556	; 0x7374
   25e90:	ldr	r6, [sp, #24]
   25e94:	movt	r1, #27251	; 0x6a73
   25e98:	movt	r2, #29797	; 0x7465
   25e9c:	eor	r0, r0, r1
   25ea0:	ldrb	r1, [r9]
   25ea4:	orr	r1, r4, r1, lsl #24
   25ea8:	eor	r1, r1, r2
   25eac:	orrs	r0, r0, r1
   25eb0:	bne	26090 <main@@Base+0x101d8>
   25eb4:	add	r1, r9, #8
   25eb8:	mov	r2, #8
   25ebc:	sub	r0, r8, r1
   25ec0:	cmp	r0, #8
   25ec4:	movcs	r0, r2
   25ec8:	sub	r2, r0, #1
   25ecc:	cmp	r2, #7
   25ed0:	bhi	2609c <main@@Base+0x101e4>
   25ed4:	add	r5, pc, #36	; 0x24
   25ed8:	mov	r8, #0
   25edc:	mov	ip, #0
   25ee0:	mov	lr, #0
   25ee4:	mov	r7, #0
   25ee8:	mov	r3, #0
   25eec:	mov	r6, #0
   25ef0:	mov	r4, #0
   25ef4:	ldr	r0, [r5, r2, lsl #2]
   25ef8:	mov	r2, #0
   25efc:	add	pc, r5, r0
   25f00:	andeq	r0, r0, r4, rrx
   25f04:	andeq	r0, r0, ip, asr r0
   25f08:	andeq	r0, r0, r4, asr r0
   25f0c:	andeq	r0, r0, ip, asr #32
   25f10:	andeq	r0, r0, r0, asr #32
   25f14:	andeq	r0, r0, r4, lsr r0
   25f18:	andeq	r0, r0, r4, lsr #32
   25f1c:	andeq	r0, r0, r0, lsr #32
   25f20:	ldrb	ip, [r9, #15]
   25f24:	ldrb	r0, [r9, #14]
   25f28:	mov	lr, r8
   25f2c:	orr	r0, ip, r0, lsl #8
   25f30:	mov	r8, r0
   25f34:	ldrb	r0, [r9, #13]
   25f38:	mov	r7, lr
   25f3c:	orr	r8, r8, r0, lsl #16
   25f40:	ldrb	r0, [r9, #12]
   25f44:	mov	r3, r7
   25f48:	orr	r8, r8, r0, lsl #24
   25f4c:	ldrb	r0, [r9, #11]
   25f50:	orr	r6, r0, r3
   25f54:	ldrb	r0, [r9, #10]
   25f58:	orr	r4, r6, r0, lsl #8
   25f5c:	ldrb	r0, [r9, #9]
   25f60:	orr	r2, r4, r0, lsl #16
   25f64:	ldrb	r3, [r1]
   25f68:	movw	r0, #28769	; 0x7061
   25f6c:	ldr	r6, [sp, #24]
   25f70:	movt	r0, #27000	; 0x6978
   25f74:	eor	r0, r8, r0
   25f78:	ldr	r8, [sp, #16]
   25f7c:	orr	r2, r2, r3, lsl #24
   25f80:	movw	r3, #25958	; 0x6566
   25f84:	movt	r3, #28786	; 0x7072
   25f88:	eor	r2, r2, r3
   25f8c:	orrs	r0, r0, r2
   25f90:	bne	2609c <main@@Base+0x101e4>
   25f94:	add	ip, r9, #16
   25f98:	mov	r0, #8
   25f9c:	sub	lr, r8, ip
   25fa0:	cmp	lr, #8
   25fa4:	movcc	r0, lr
   25fa8:	sub	r1, r0, #1
   25fac:	cmp	r1, #7
   25fb0:	bhi	281d8 <main@@Base+0x12320>
   25fb4:	add	r7, pc, #28
   25fb8:	mov	r0, #0
   25fbc:	mov	r2, #0
   25fc0:	mov	r3, #0
   25fc4:	mov	r4, #0
   25fc8:	mov	r5, #0
   25fcc:	ldr	r6, [r7, r1, lsl #2]
   25fd0:	mov	r1, #0
   25fd4:	add	pc, r7, r6
   25fd8:	andeq	r0, r0, r0, asr r0
   25fdc:	andeq	r0, r0, r8, asr #32
   25fe0:	andeq	r0, r0, r0, asr #32
   25fe4:	andeq	r0, r0, r8, lsr r0
   25fe8:	andeq	r0, r0, r8, lsr #32
   25fec:	andeq	r0, r0, r0, lsr #32
   25ff0:	andeq	r0, r0, r0, lsr #32
   25ff4:	andeq	r0, r0, r0, lsr #32
   25ff8:	ldrb	r1, [r9, #21]
   25ffc:	lsl	r1, r1, #16
   26000:	ldrb	r2, [r9, #20]
   26004:	orr	r1, r1, r2, lsl #24
   26008:	mov	r2, r0
   2600c:	mov	r0, r1
   26010:	ldrb	r1, [r9, #19]
   26014:	orr	r3, r1, r2
   26018:	ldrb	r1, [r9, #18]
   2601c:	orr	r4, r3, r1, lsl #8
   26020:	ldrb	r1, [r9, #17]
   26024:	orr	r5, r4, r1, lsl #16
   26028:	ldrb	r1, [ip]
   2602c:	mov	r8, r0
   26030:	movw	r3, #26990	; 0x696e
   26034:	bfc	r8, #0, #16
   26038:	movt	r3, #29299	; 0x7273
   2603c:	eor	r2, r8, sl
   26040:	orr	r1, r5, r1, lsl #24
   26044:	eor	r5, r1, r3
   26048:	orrs	r2, r2, r5
   2604c:	bne	260a4 <main@@Base+0x101ec>
   26050:	ldr	r8, [sp, #16]
   26054:	ldr	r6, [sp, #24]
   26058:	cmp	lr, #7
   2605c:	blt	281d8 <main@@Base+0x12320>
   26060:	ldrb	r0, [r9, #22]
   26064:	cmp	r0, #34	; 0x22
   26068:	bne	281d8 <main@@Base+0x12320>
   2606c:	add	r1, r9, #23
   26070:	sub	r0, r8, r1
   26074:	cmp	r0, #2
   26078:	blt	26118 <main@@Base+0x10260>
   2607c:	ldrb	r0, [r1]
   26080:	cmp	r0, #32
   26084:	bls	26108 <main@@Base+0x10250>
   26088:	mov	r9, r1
   2608c:	b	26130 <main@@Base+0x10278>
   26090:	mov	r0, r6
   26094:	mov	r1, r9
   26098:	b	281e0 <main@@Base+0x12328>
   2609c:	mov	r0, r6
   260a0:	b	281e0 <main@@Base+0x12328>
   260a4:	ldr	r6, [sp, #24]
   260a8:	cmp	lr, #6
   260ac:	blt	2634c <main@@Base+0x10494>
   260b0:	movw	r2, #26990	; 0x696e
   260b4:	and	r0, r0, #-16777216	; 0xff000000
   260b8:	movt	r2, #29299	; 0x7273
   260bc:	eor	r0, r0, #1728053248	; 0x67000000
   260c0:	eor	r1, r1, r2
   260c4:	orrs	r0, r0, r1
   260c8:	bne	2634c <main@@Base+0x10494>
   260cc:	ldrb	r0, [r9, #21]
   260d0:	cmp	r0, #34	; 0x22
   260d4:	bne	2634c <main@@Base+0x10494>
   260d8:	ldr	r4, [sp, #16]
   260dc:	add	r1, r9, #22
   260e0:	str	lr, [sp, #4]
   260e4:	sub	r0, r4, r1
   260e8:	cmp	r0, #2
   260ec:	blt	2619c <main@@Base+0x102e4>
   260f0:	ldrb	r0, [r1]
   260f4:	cmp	r0, #32
   260f8:	bls	26184 <main@@Base+0x102cc>
   260fc:	ldr	r4, [sp, #16]
   26100:	mov	sl, r1
   26104:	b	261b8 <main@@Base+0x10300>
   26108:	bne	26118 <main@@Base+0x10260>
   2610c:	ldrb	r0, [r9, #24]!
   26110:	cmp	r0, #32
   26114:	bhi	26130 <main@@Base+0x10278>
   26118:	mov	r0, r6
   2611c:	mov	r2, r8
   26120:	mov	r4, ip
   26124:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26128:	mov	ip, r4
   2612c:	mov	r9, r0
   26130:	mov	r4, ip
   26134:	cmp	r9, r8
   26138:	beq	2616c <main@@Base+0x102b4>
   2613c:	ldrb	r0, [r9]
   26140:	cmp	r0, #58	; 0x3a
   26144:	bne	2616c <main@@Base+0x102b4>
   26148:	add	r1, r9, #1
   2614c:	sub	r0, r8, r1
   26150:	cmp	r0, #2
   26154:	blt	26220 <main@@Base+0x10368>
   26158:	ldrb	r0, [r1]
   2615c:	cmp	r0, #32
   26160:	bls	26210 <main@@Base+0x10358>
   26164:	mov	r9, r1
   26168:	b	26230 <main@@Base+0x10378>
   2616c:	mov	r0, r6
   26170:	mov	r1, r9
   26174:	mov	r2, r8
   26178:	mov	r3, #4
   2617c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   26180:	b	2622c <main@@Base+0x10374>
   26184:	ldr	r4, [sp, #16]
   26188:	bne	2619c <main@@Base+0x102e4>
   2618c:	mov	sl, r9
   26190:	ldrb	r0, [sl, #23]!
   26194:	cmp	r0, #32
   26198:	bhi	261b8 <main@@Base+0x10300>
   2619c:	mov	r0, r6
   261a0:	mov	r2, r4
   261a4:	mov	r7, ip
   261a8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   261ac:	ldr	lr, [sp, #4]
   261b0:	mov	ip, r7
   261b4:	mov	sl, r0
   261b8:	mov	r7, ip
   261bc:	cmp	sl, r4
   261c0:	beq	261f8 <main@@Base+0x10340>
   261c4:	ldrb	r0, [sl]
   261c8:	cmp	r0, #58	; 0x3a
   261cc:	bne	261f8 <main@@Base+0x10340>
   261d0:	ldr	r0, [sp, #16]
   261d4:	add	r1, sl, #1
   261d8:	sub	r0, r0, r1
   261dc:	cmp	r0, #2
   261e0:	blt	262dc <main@@Base+0x10424>
   261e4:	ldrb	r0, [r1]
   261e8:	cmp	r0, #32
   261ec:	bls	262cc <main@@Base+0x10414>
   261f0:	mov	sl, r1
   261f4:	b	262f0 <main@@Base+0x10438>
   261f8:	ldr	r2, [sp, #16]
   261fc:	mov	r0, r6
   26200:	mov	r1, sl
   26204:	mov	r3, #4
   26208:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2620c:	b	262e8 <main@@Base+0x10430>
   26210:	bne	26220 <main@@Base+0x10368>
   26214:	ldrb	r0, [r9, #2]!
   26218:	cmp	r0, #32
   2621c:	bhi	26230 <main@@Base+0x10378>
   26220:	mov	r0, r6
   26224:	mov	r2, r8
   26228:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2622c:	mov	r9, r0
   26230:	mov	ip, r4
   26234:	cmp	r4, r9
   26238:	beq	281d8 <main@@Base+0x12320>
   2623c:	ldr	r0, [r6]
   26240:	mov	r1, #2
   26244:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   26248:	cmp	r0, #0
   2624c:	bne	28e3c <main@@Base+0x12f84>
   26250:	cmp	r9, r8
   26254:	beq	26288 <main@@Base+0x103d0>
   26258:	ldrb	r0, [r9]
   2625c:	cmp	r0, #123	; 0x7b
   26260:	bne	26288 <main@@Base+0x103d0>
   26264:	add	r1, r9, #1
   26268:	sub	r0, r8, r1
   2626c:	cmp	r0, #2
   26270:	blt	2648c <main@@Base+0x105d4>
   26274:	ldrb	r0, [r1]
   26278:	cmp	r0, #32
   2627c:	bls	2647c <main@@Base+0x105c4>
   26280:	mov	r9, r1
   26284:	b	2649c <main@@Base+0x105e4>
   26288:	mov	r0, r6
   2628c:	mov	r1, r9
   26290:	mov	r2, r8
   26294:	mov	r3, #21
   26298:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2629c:	mov	r9, r0
   262a0:	ldr	r0, [r6, #20]
   262a4:	cmp	r0, #0
   262a8:	bne	28e3c <main@@Base+0x12f84>
   262ac:	ldr	r0, [r6]
   262b0:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   262b4:	cmp	r0, #0
   262b8:	beq	28e3c <main@@Base+0x12f84>
   262bc:	mov	r7, r0
   262c0:	ldr	r0, [r6]
   262c4:	mov	r1, #1
   262c8:	b	282f8 <main@@Base+0x12440>
   262cc:	bne	262dc <main@@Base+0x10424>
   262d0:	ldrb	r0, [sl, #2]!
   262d4:	cmp	r0, #32
   262d8:	bhi	262f0 <main@@Base+0x10438>
   262dc:	ldr	r2, [sp, #16]
   262e0:	mov	r0, r6
   262e4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   262e8:	ldr	lr, [sp, #4]
   262ec:	mov	sl, r0
   262f0:	mov	ip, r7
   262f4:	cmp	r7, sl
   262f8:	beq	2634c <main@@Base+0x10494>
   262fc:	ldr	r0, [r6]
   26300:	mov	r1, #9
   26304:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   26308:	cmp	r0, #0
   2630c:	bne	28e18 <main@@Base+0x12f60>
   26310:	ldr	r8, [sp, #16]
   26314:	cmp	sl, r8
   26318:	beq	263a0 <main@@Base+0x104e8>
   2631c:	ldrb	r0, [sl]
   26320:	cmp	r0, #123	; 0x7b
   26324:	bne	263a0 <main@@Base+0x104e8>
   26328:	add	r1, sl, #1
   2632c:	sub	r0, r8, r1
   26330:	cmp	r0, #2
   26334:	blt	26cb0 <main@@Base+0x10df8>
   26338:	ldrb	r0, [r1]
   2633c:	cmp	r0, #32
   26340:	bls	26ca0 <main@@Base+0x10de8>
   26344:	mov	sl, r1
   26348:	b	26cc0 <main@@Base+0x10e08>
   2634c:	movw	sl, #0
   26350:	movt	sl, #26418	; 0x6732
   26354:	add	r0, sl, #65536	; 0x10000
   26358:	eor	r0, r8, r0
   2635c:	ldr	r8, [sp, #16]
   26360:	orrs	r0, r0, r5
   26364:	bne	281d8 <main@@Base+0x12320>
   26368:	cmp	lr, #7
   2636c:	blt	281d8 <main@@Base+0x12320>
   26370:	ldrb	r0, [r9, #22]
   26374:	cmp	r0, #34	; 0x22
   26378:	bne	281d8 <main@@Base+0x12320>
   2637c:	add	r1, r9, #23
   26380:	sub	r0, r8, r1
   26384:	cmp	r0, #2
   26388:	blt	26410 <main@@Base+0x10558>
   2638c:	ldrb	r0, [r1]
   26390:	cmp	r0, #32
   26394:	bls	26400 <main@@Base+0x10548>
   26398:	mov	r9, r1
   2639c:	b	26428 <main@@Base+0x10570>
   263a0:	mov	r0, r6
   263a4:	mov	r1, sl
   263a8:	mov	r2, r8
   263ac:	mov	r3, #21
   263b0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   263b4:	mov	sl, r0
   263b8:	ldr	r0, [r6, #20]
   263bc:	cmp	r0, #0
   263c0:	bne	28e28 <main@@Base+0x12f70>
   263c4:	ldr	r0, [r6]
   263c8:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   263cc:	cmp	r0, #0
   263d0:	beq	28e28 <main@@Base+0x12f70>
   263d4:	mov	r4, r0
   263d8:	ldr	r0, [r6]
   263dc:	mov	r1, #0
   263e0:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   263e4:	cmp	r0, #0
   263e8:	beq	25cc0 <main@@Base+0xfe08>
   263ec:	mov	r9, sl
   263f0:	movw	sl, #0
   263f4:	str	r4, [r0]
   263f8:	movt	sl, #26418	; 0x6732
   263fc:	b	281ec <main@@Base+0x12334>
   26400:	bne	26410 <main@@Base+0x10558>
   26404:	ldrb	r0, [r9, #24]!
   26408:	cmp	r0, #32
   2640c:	bhi	26428 <main@@Base+0x10570>
   26410:	mov	r0, r6
   26414:	mov	r2, r8
   26418:	mov	r4, ip
   2641c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26420:	mov	ip, r4
   26424:	mov	r9, r0
   26428:	mov	r4, ip
   2642c:	cmp	r9, r8
   26430:	beq	26464 <main@@Base+0x105ac>
   26434:	ldrb	r0, [r9]
   26438:	cmp	r0, #58	; 0x3a
   2643c:	bne	26464 <main@@Base+0x105ac>
   26440:	add	r1, r9, #1
   26444:	sub	r0, r8, r1
   26448:	cmp	r0, #2
   2644c:	blt	28170 <main@@Base+0x122b8>
   26450:	ldrb	r0, [r1]
   26454:	cmp	r0, #32
   26458:	bls	28160 <main@@Base+0x122a8>
   2645c:	mov	r9, r1
   26460:	b	28180 <main@@Base+0x122c8>
   26464:	mov	r0, r6
   26468:	mov	r1, r9
   2646c:	mov	r2, r8
   26470:	mov	r3, #4
   26474:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   26478:	b	2817c <main@@Base+0x122c4>
   2647c:	bne	2648c <main@@Base+0x105d4>
   26480:	ldrb	r0, [r9, #2]!
   26484:	cmp	r0, #32
   26488:	bhi	2649c <main@@Base+0x105e4>
   2648c:	mov	r0, r6
   26490:	mov	r2, r8
   26494:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26498:	mov	r9, r0
   2649c:	cmp	r9, r8
   264a0:	mov	r2, r8
   264a4:	beq	264e8 <main@@Base+0x10630>
   264a8:	ldrb	r0, [r9]
   264ac:	cmp	r0, #125	; 0x7d
   264b0:	bne	264e4 <main@@Base+0x1062c>
   264b4:	add	r1, r9, #1
   264b8:	sub	r0, r8, r1
   264bc:	cmp	r0, #2
   264c0:	blt	28cfc <main@@Base+0x12e44>
   264c4:	ldrb	r0, [r1]
   264c8:	cmp	r0, #32
   264cc:	bhi	28338 <main@@Base+0x12480>
   264d0:	bne	28cfc <main@@Base+0x12e44>
   264d4:	ldrb	r0, [r9, #2]!
   264d8:	cmp	r0, #32
   264dc:	bhi	262a0 <main@@Base+0x103e8>
   264e0:	b	28cfc <main@@Base+0x12e44>
   264e4:	mov	r2, r9
   264e8:	cmp	r2, r8
   264ec:	mov	sl, r8
   264f0:	beq	26520 <main@@Base+0x10668>
   264f4:	ldrb	r0, [r2]
   264f8:	cmp	r0, #34	; 0x22
   264fc:	bne	26508 <main@@Base+0x10650>
   26500:	add	sl, r2, #1
   26504:	b	26520 <main@@Base+0x10668>
   26508:	mov	r1, r2
   2650c:	mov	r0, r6
   26510:	mov	r2, r8
   26514:	mov	r3, #5
   26518:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2651c:	mov	sl, r0
   26520:	sub	r0, r8, sl
   26524:	mov	r1, #8
   26528:	cmp	r0, #8
   2652c:	movcs	r0, r1
   26530:	sub	r1, r0, #1
   26534:	cmp	r1, #7
   26538:	bhi	26724 <main@@Base+0x1086c>
   2653c:	add	r5, pc, #36	; 0x24
   26540:	mov	r0, #0
   26544:	mov	ip, #0
   26548:	mov	lr, #0
   2654c:	mov	r2, #0
   26550:	mov	r3, #0
   26554:	mov	r6, #0
   26558:	mov	r4, #0
   2655c:	mov	r7, #0
   26560:	ldr	r1, [r5, r1, lsl #2]
   26564:	add	pc, r5, r1
   26568:	andeq	r0, r0, r4, rrx
   2656c:	andeq	r0, r0, ip, asr r0
   26570:	andeq	r0, r0, r4, asr r0
   26574:	andeq	r0, r0, ip, asr #32
   26578:	andeq	r0, r0, r0, asr #32
   2657c:	andeq	r0, r0, r4, lsr r0
   26580:	andeq	r0, r0, r4, lsr #32
   26584:	andeq	r0, r0, r0, lsr #32
   26588:	ldrb	ip, [sl, #7]
   2658c:	ldrb	r1, [sl, #6]
   26590:	mov	lr, r0
   26594:	orr	r1, ip, r1, lsl #8
   26598:	mov	r0, r1
   2659c:	ldrb	r1, [sl, #5]
   265a0:	mov	r2, lr
   265a4:	orr	r0, r0, r1, lsl #16
   265a8:	ldrb	r1, [sl, #4]
   265ac:	mov	r3, r2
   265b0:	orr	r0, r0, r1, lsl #24
   265b4:	ldrb	r1, [sl, #3]
   265b8:	orr	r6, r1, r3
   265bc:	ldrb	r1, [sl, #2]
   265c0:	orr	r4, r6, r1, lsl #8
   265c4:	ldrb	r1, [sl, #1]
   265c8:	orr	r7, r4, r1, lsl #16
   265cc:	movw	r1, #25186	; 0x6262
   265d0:	movw	r2, #24929	; 0x6161
   265d4:	ldr	r6, [sp, #24]
   265d8:	movt	r1, #24418	; 0x5f62
   265dc:	movt	r2, #24929	; 0x6161
   265e0:	eor	r0, r0, r1
   265e4:	ldrb	r1, [sl]
   265e8:	orr	r1, r7, r1, lsl #24
   265ec:	eor	r1, r1, r2
   265f0:	orrs	r0, r0, r1
   265f4:	bne	26724 <main@@Base+0x1086c>
   265f8:	mov	r0, r8
   265fc:	add	r8, sl, #8
   26600:	sub	lr, r0, r8
   26604:	mov	r0, #8
   26608:	cmp	lr, #8
   2660c:	movcc	r0, lr
   26610:	sub	r0, r0, #1
   26614:	cmp	r0, #7
   26618:	bhi	26ad0 <main@@Base+0x10c18>
   2661c:	add	r7, pc, #36	; 0x24
   26620:	mov	r1, #0
   26624:	mov	ip, #0
   26628:	mov	r9, #0
   2662c:	mov	r6, #0
   26630:	mov	r3, #0
   26634:	mov	r5, #0
   26638:	mov	r2, #0
   2663c:	ldr	r4, [r7, r0, lsl #2]
   26640:	mov	r0, #0
   26644:	add	pc, r7, r4
   26648:	andeq	r0, r0, r4, rrx
   2664c:	andeq	r0, r0, ip, asr r0
   26650:	andeq	r0, r0, r4, asr r0
   26654:	andeq	r0, r0, ip, asr #32
   26658:	andeq	r0, r0, r0, asr #32
   2665c:	andeq	r0, r0, r4, lsr r0
   26660:	andeq	r0, r0, r4, lsr #32
   26664:	andeq	r0, r0, r0, lsr #32
   26668:	ldrb	ip, [sl, #15]
   2666c:	ldrb	r0, [sl, #14]
   26670:	mov	r9, r1
   26674:	orr	r0, ip, r0, lsl #8
   26678:	mov	r1, r0
   2667c:	ldrb	r0, [sl, #13]
   26680:	mov	r6, r9
   26684:	orr	r1, r1, r0, lsl #16
   26688:	ldrb	r0, [sl, #12]
   2668c:	mov	r3, r6
   26690:	orr	r1, r1, r0, lsl #24
   26694:	ldrb	r0, [sl, #11]
   26698:	orr	r5, r0, r3
   2669c:	ldrb	r0, [sl, #10]
   266a0:	orr	r2, r5, r0, lsl #8
   266a4:	ldrb	r0, [sl, #9]
   266a8:	orr	r0, r2, r0, lsl #16
   266ac:	movw	r3, #29440	; 0x7300
   266b0:	bic	r2, r1, #255	; 0xff
   266b4:	movt	r3, #25968	; 0x6570
   266b8:	eor	r2, r2, r3
   266bc:	ldrb	r3, [r8]
   266c0:	orr	r0, r0, r3, lsl #24
   266c4:	movw	r3, #29556	; 0x7374
   266c8:	movt	r3, #25183	; 0x625f
   266cc:	eor	r0, r0, r3
   266d0:	orrs	r2, r2, r0
   266d4:	bne	26730 <main@@Base+0x10878>
   266d8:	ldr	r6, [sp, #24]
   266dc:	cmp	lr, #8
   266e0:	blt	26ad0 <main@@Base+0x10c18>
   266e4:	ldrb	r0, [sl, #15]
   266e8:	cmp	r0, #34	; 0x22
   266ec:	bne	26ad0 <main@@Base+0x10c18>
   266f0:	ldr	r4, [sp, #16]
   266f4:	add	r1, sl, #16
   266f8:	sub	r0, r4, r1
   266fc:	cmp	r0, #2
   26700:	blt	267a4 <main@@Base+0x108ec>
   26704:	ldrb	r0, [r1]
   26708:	cmp	r0, #32
   2670c:	bls	26790 <main@@Base+0x108d8>
   26710:	ldr	r4, [sp, #16]
   26714:	mov	sl, r1
   26718:	cmp	sl, r4
   2671c:	bne	267bc <main@@Base+0x10904>
   26720:	b	267f8 <main@@Base+0x10940>
   26724:	mov	r0, r6
   26728:	mov	r1, sl
   2672c:	b	26adc <main@@Base+0x10c24>
   26730:	movw	r2, #29791	; 0x745f
   26734:	ldr	r6, [sp, #24]
   26738:	movt	r2, #24946	; 0x6172
   2673c:	eor	r1, r1, r2
   26740:	orrs	r0, r1, r0
   26744:	bne	26ad0 <main@@Base+0x10c18>
   26748:	cmp	lr, #9
   2674c:	blt	26ad0 <main@@Base+0x10c18>
   26750:	ldrb	r0, [sl, #16]
   26754:	cmp	r0, #34	; 0x22
   26758:	bne	26ad0 <main@@Base+0x10c18>
   2675c:	ldr	r4, [sp, #16]
   26760:	add	r1, sl, #17
   26764:	sub	r0, r4, r1
   26768:	cmp	r0, #2
   2676c:	blt	26824 <main@@Base+0x1096c>
   26770:	ldrb	r0, [r1]
   26774:	cmp	r0, #32
   26778:	bls	26810 <main@@Base+0x10958>
   2677c:	ldr	r4, [sp, #16]
   26780:	mov	sl, r1
   26784:	cmp	sl, r4
   26788:	bne	2683c <main@@Base+0x10984>
   2678c:	b	2687c <main@@Base+0x109c4>
   26790:	ldr	r4, [sp, #16]
   26794:	bne	267a4 <main@@Base+0x108ec>
   26798:	ldrb	r0, [sl, #17]!
   2679c:	cmp	r0, #32
   267a0:	bhi	267b4 <main@@Base+0x108fc>
   267a4:	mov	r0, r6
   267a8:	mov	r2, r4
   267ac:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   267b0:	mov	sl, r0
   267b4:	cmp	sl, r4
   267b8:	beq	267f8 <main@@Base+0x10940>
   267bc:	ldrb	r0, [sl]
   267c0:	cmp	r0, #58	; 0x3a
   267c4:	bne	267f8 <main@@Base+0x10940>
   267c8:	ldr	r0, [sp, #16]
   267cc:	add	r1, sl, #1
   267d0:	sub	r0, r0, r1
   267d4:	cmp	r0, #2
   267d8:	blt	268a4 <main@@Base+0x109ec>
   267dc:	ldrb	r0, [r1]
   267e0:	cmp	r0, #32
   267e4:	bls	26894 <main@@Base+0x109dc>
   267e8:	mov	sl, r1
   267ec:	cmp	r8, sl
   267f0:	bne	268bc <main@@Base+0x10a04>
   267f4:	b	26ad0 <main@@Base+0x10c18>
   267f8:	ldr	r2, [sp, #16]
   267fc:	mov	r0, r6
   26800:	mov	r1, sl
   26804:	mov	r3, #4
   26808:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2680c:	b	268b0 <main@@Base+0x109f8>
   26810:	ldr	r4, [sp, #16]
   26814:	bne	26824 <main@@Base+0x1096c>
   26818:	ldrb	r0, [sl, #18]!
   2681c:	cmp	r0, #32
   26820:	bhi	26834 <main@@Base+0x1097c>
   26824:	mov	r0, r6
   26828:	mov	r2, r4
   2682c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26830:	mov	sl, r0
   26834:	cmp	sl, r4
   26838:	beq	2687c <main@@Base+0x109c4>
   2683c:	ldrb	r0, [sl]
   26840:	cmp	r0, #58	; 0x3a
   26844:	bne	2687c <main@@Base+0x109c4>
   26848:	ldr	r0, [sp, #16]
   2684c:	add	r1, sl, #1
   26850:	sub	r0, r0, r1
   26854:	cmp	r0, #2
   26858:	blt	26a50 <main@@Base+0x10b98>
   2685c:	ldrb	r0, [r1]
   26860:	cmp	r0, #32
   26864:	bls	26a3c <main@@Base+0x10b84>
   26868:	ldr	r6, [sp, #24]
   2686c:	mov	sl, r1
   26870:	cmp	r8, sl
   26874:	bne	26a68 <main@@Base+0x10bb0>
   26878:	b	26ad0 <main@@Base+0x10c18>
   2687c:	ldr	r2, [sp, #16]
   26880:	mov	r0, r6
   26884:	mov	r1, sl
   26888:	mov	r3, #4
   2688c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   26890:	b	26a5c <main@@Base+0x10ba4>
   26894:	bne	268a4 <main@@Base+0x109ec>
   26898:	ldrb	r0, [sl, #2]!
   2689c:	cmp	r0, #32
   268a0:	bhi	268b4 <main@@Base+0x109fc>
   268a4:	ldr	r2, [sp, #16]
   268a8:	mov	r0, r6
   268ac:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   268b0:	mov	sl, r0
   268b4:	cmp	r8, sl
   268b8:	beq	26ad0 <main@@Base+0x10c18>
   268bc:	ldr	r8, [sp, #16]
   268c0:	mov	r6, #0
   268c4:	str	r6, [fp, #-36]	; 0xffffffdc
   268c8:	str	r6, [fp, #-40]	; 0xffffffd8
   268cc:	str	r6, [sp, #36]	; 0x24
   268d0:	str	r6, [sp, #32]
   268d4:	str	r6, [sp, #44]	; 0x2c
   268d8:	cmp	sl, r8
   268dc:	beq	2693c <main@@Base+0x10a84>
   268e0:	sub	r0, fp, #40	; 0x28
   268e4:	mov	r1, sl
   268e8:	mov	r2, r8
   268ec:	add	r3, sp, #44	; 0x2c
   268f0:	str	r0, [sp]
   268f4:	ldr	r0, [sp, #24]
   268f8:	bl	362a4 <flatcc_json_parser_integer@@Base>
   268fc:	cmp	r0, sl
   26900:	beq	26950 <main@@Base+0x10a98>
   26904:	mov	r9, r0
   26908:	ldr	r0, [sp, #44]	; 0x2c
   2690c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   26910:	ldr	r5, [fp, #-36]	; 0xffffffdc
   26914:	cmp	r0, #0
   26918:	beq	26968 <main@@Base+0x10ab0>
   2691c:	subs	r0, r6, #1
   26920:	sbcs	r0, r5, #-2147483648	; 0x80000000
   26924:	bcc	2699c <main@@Base+0x10ae4>
   26928:	ldr	r0, [sp, #24]
   2692c:	mov	r1, r9
   26930:	mov	r2, r8
   26934:	mov	r3, #8
   26938:	b	26980 <main@@Base+0x10ac8>
   2693c:	mov	r5, #0
   26940:	mov	r9, r8
   26944:	cmp	sl, r9
   26948:	bne	269ec <main@@Base+0x10b34>
   2694c:	b	269b4 <main@@Base+0x10afc>
   26950:	mov	r6, #0
   26954:	mov	r5, #0
   26958:	mov	r9, sl
   2695c:	cmp	sl, r9
   26960:	bne	269ec <main@@Base+0x10b34>
   26964:	b	269b4 <main@@Base+0x10afc>
   26968:	cmn	r5, #1
   2696c:	bgt	269a4 <main@@Base+0x10aec>
   26970:	ldr	r0, [sp, #24]
   26974:	mov	r1, r9
   26978:	mov	r2, r8
   2697c:	mov	r3, #7
   26980:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   26984:	mov	r9, r0
   26988:	mov	r6, #0
   2698c:	mov	r5, #0
   26990:	cmp	sl, r9
   26994:	bne	269ec <main@@Base+0x10b34>
   26998:	b	269b4 <main@@Base+0x10afc>
   2699c:	rsbs	r6, r6, #0
   269a0:	rsc	r5, r5, #0
   269a4:	str	r6, [sp, #32]
   269a8:	str	r5, [sp, #36]	; 0x24
   269ac:	cmp	sl, r9
   269b0:	bne	269ec <main@@Base+0x10b34>
   269b4:	add	r0, sp, #32
   269b8:	mov	r1, sl
   269bc:	mov	r2, r8
   269c0:	str	r0, [sp]
   269c4:	ldr	r0, [sp, #24]
   269c8:	ldr	r3, [pc, #3944]	; 27938 <main@@Base+0x11a80>
   269cc:	add	r3, pc, r3
   269d0:	bl	24138 <main@@Base+0xe280>
   269d4:	mov	r9, r0
   269d8:	cmp	r0, sl
   269dc:	cmpne	r9, r8
   269e0:	beq	28e34 <main@@Base+0x12f7c>
   269e4:	ldr	r6, [sp, #32]
   269e8:	ldr	r5, [sp, #36]	; 0x24
   269ec:	movw	sl, #0
   269f0:	orrs	r0, r6, r5
   269f4:	movt	sl, #26418	; 0x6732
   269f8:	bne	26a0c <main@@Base+0x10b54>
   269fc:	ldr	r0, [sp, #24]
   26a00:	ldrb	r0, [r0, #8]
   26a04:	tst	r0, #2
   26a08:	beq	26a34 <main@@Base+0x10b7c>
   26a0c:	ldr	r0, [sp, #24]
   26a10:	mov	r1, #0
   26a14:	mov	r2, #8
   26a18:	mov	r3, #8
   26a1c:	ldr	r0, [r0]
   26a20:	bl	3063c <flatcc_builder_table_add@@Base>
   26a24:	cmp	r0, #0
   26a28:	beq	28e34 <main@@Base+0x12f7c>
   26a2c:	str	r6, [r0]
   26a30:	str	r5, [r0, #4]
   26a34:	ldr	r6, [sp, #24]
   26a38:	b	26af0 <main@@Base+0x10c38>
   26a3c:	ldr	r6, [sp, #24]
   26a40:	bne	26a50 <main@@Base+0x10b98>
   26a44:	ldrb	r0, [sl, #2]!
   26a48:	cmp	r0, #32
   26a4c:	bhi	26a60 <main@@Base+0x10ba8>
   26a50:	ldr	r2, [sp, #16]
   26a54:	mov	r0, r6
   26a58:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26a5c:	mov	sl, r0
   26a60:	cmp	r8, sl
   26a64:	beq	26ad0 <main@@Base+0x10c18>
   26a68:	ldr	r8, [sp, #16]
   26a6c:	mov	r5, #0
   26a70:	str	r5, [fp, #-36]	; 0xffffffdc
   26a74:	str	r5, [fp, #-40]	; 0xffffffd8
   26a78:	str	r5, [sp, #44]	; 0x2c
   26a7c:	str	r5, [sp, #32]
   26a80:	cmp	sl, r8
   26a84:	beq	26bb8 <main@@Base+0x10d00>
   26a88:	sub	r0, fp, #40	; 0x28
   26a8c:	mov	r1, sl
   26a90:	mov	r2, r8
   26a94:	add	r3, sp, #32
   26a98:	str	r0, [sp]
   26a9c:	mov	r0, r6
   26aa0:	bl	362a4 <flatcc_json_parser_integer@@Base>
   26aa4:	cmp	r0, sl
   26aa8:	beq	26bc8 <main@@Base+0x10d10>
   26aac:	mov	r9, r0
   26ab0:	ldr	r0, [sp, #32]
   26ab4:	cmp	r0, #0
   26ab8:	beq	26bd8 <main@@Base+0x10d20>
   26abc:	mov	r0, r6
   26ac0:	mov	r1, r9
   26ac4:	mov	r2, r8
   26ac8:	mov	r3, #8
   26acc:	b	26bfc <main@@Base+0x10d44>
   26ad0:	mov	r1, r8
   26ad4:	ldr	r8, [sp, #16]
   26ad8:	mov	r0, r6
   26adc:	mov	r2, r8
   26ae0:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   26ae4:	movw	sl, #0
   26ae8:	mov	r9, r0
   26aec:	movt	sl, #26418	; 0x6732
   26af0:	sub	r0, r8, r9
   26af4:	cmp	r0, #2
   26af8:	blt	26b2c <main@@Base+0x10c74>
   26afc:	ldrb	r0, [r9]
   26b00:	cmp	r0, #32
   26b04:	bls	26b18 <main@@Base+0x10c60>
   26b08:	mov	r2, r9
   26b0c:	cmp	r2, r8
   26b10:	bne	26b48 <main@@Base+0x10c90>
   26b14:	b	2830c <main@@Base+0x12454>
   26b18:	bne	26b2c <main@@Base+0x10c74>
   26b1c:	mov	r2, r9
   26b20:	ldrb	r0, [r2, #1]!
   26b24:	cmp	r0, #32
   26b28:	bhi	26b40 <main@@Base+0x10c88>
   26b2c:	mov	r0, r6
   26b30:	mov	r1, r9
   26b34:	mov	r2, r8
   26b38:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26b3c:	mov	r2, r0
   26b40:	cmp	r2, r8
   26b44:	beq	2830c <main@@Base+0x12454>
   26b48:	ldrb	r0, [r2]
   26b4c:	cmp	r0, #44	; 0x2c
   26b50:	bne	28314 <main@@Base+0x1245c>
   26b54:	add	r1, r2, #1
   26b58:	sub	r0, r8, r1
   26b5c:	cmp	r0, #2
   26b60:	blt	26b90 <main@@Base+0x10cd8>
   26b64:	ldrb	r0, [r1]
   26b68:	cmp	r0, #32
   26b6c:	bls	26b80 <main@@Base+0x10cc8>
   26b70:	mov	r2, r1
   26b74:	cmp	r2, r8
   26b78:	bne	26ba8 <main@@Base+0x10cf0>
   26b7c:	b	28340 <main@@Base+0x12488>
   26b80:	bne	26b90 <main@@Base+0x10cd8>
   26b84:	ldrb	r0, [r2, #2]!
   26b88:	cmp	r0, #32
   26b8c:	bhi	26ba0 <main@@Base+0x10ce8>
   26b90:	mov	r0, r6
   26b94:	mov	r2, r8
   26b98:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26b9c:	mov	r2, r0
   26ba0:	cmp	r2, r8
   26ba4:	beq	28340 <main@@Base+0x12488>
   26ba8:	ldrb	r0, [r2]
   26bac:	cmp	r0, #125	; 0x7d
   26bb0:	bne	264e8 <main@@Base+0x10630>
   26bb4:	b	2831c <main@@Base+0x12464>
   26bb8:	mov	r9, r8
   26bbc:	cmp	sl, r9
   26bc0:	bne	26c44 <main@@Base+0x10d8c>
   26bc4:	b	26c0c <main@@Base+0x10d54>
   26bc8:	mov	r9, sl
   26bcc:	cmp	sl, r9
   26bd0:	bne	26c44 <main@@Base+0x10d8c>
   26bd4:	b	26c0c <main@@Base+0x10d54>
   26bd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26bdc:	cmp	r0, #0
   26be0:	beq	26c84 <main@@Base+0x10dcc>
   26be4:	ldr	r6, [sp, #24]
   26be8:	ldr	r8, [sp, #16]
   26bec:	mov	r1, r9
   26bf0:	mov	r3, #7
   26bf4:	mov	r0, r6
   26bf8:	mov	r2, r8
   26bfc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   26c00:	mov	r9, r0
   26c04:	cmp	sl, r9
   26c08:	bne	26c44 <main@@Base+0x10d8c>
   26c0c:	add	r0, sp, #44	; 0x2c
   26c10:	mov	r1, sl
   26c14:	mov	r2, r8
   26c18:	str	r0, [sp]
   26c1c:	mov	r0, r6
   26c20:	ldr	r3, [pc, #4056]	; 27c00 <main@@Base+0x11d48>
   26c24:	add	r3, pc, r3
   26c28:	bl	24330 <main@@Base+0xe478>
   26c2c:	mov	r9, r0
   26c30:	cmp	r0, sl
   26c34:	cmpne	r9, r8
   26c38:	beq	28e34 <main@@Base+0x12f7c>
   26c3c:	ldr	r5, [sp, #44]	; 0x2c
   26c40:	ldr	r6, [sp, #24]
   26c44:	movw	sl, #0
   26c48:	cmp	r5, #0
   26c4c:	movt	sl, #26418	; 0x6732
   26c50:	bne	26c60 <main@@Base+0x10da8>
   26c54:	ldrb	r0, [r6, #8]
   26c58:	tst	r0, #2
   26c5c:	beq	26af0 <main@@Base+0x10c38>
   26c60:	ldr	r0, [r6]
   26c64:	mov	r1, #1
   26c68:	mov	r2, #4
   26c6c:	mov	r3, #4
   26c70:	bl	3063c <flatcc_builder_table_add@@Base>
   26c74:	cmp	r0, #0
   26c78:	beq	28e34 <main@@Base+0x12f7c>
   26c7c:	str	r5, [r0]
   26c80:	b	26af0 <main@@Base+0x10c38>
   26c84:	ldr	r5, [fp, #-40]	; 0xffffffd8
   26c88:	ldr	r8, [sp, #16]
   26c8c:	ldr	r6, [sp, #24]
   26c90:	str	r5, [sp, #44]	; 0x2c
   26c94:	cmp	sl, r9
   26c98:	bne	26c44 <main@@Base+0x10d8c>
   26c9c:	b	26c0c <main@@Base+0x10d54>
   26ca0:	bne	26cb0 <main@@Base+0x10df8>
   26ca4:	ldrb	r0, [sl, #2]!
   26ca8:	cmp	r0, #32
   26cac:	bhi	26cc0 <main@@Base+0x10e08>
   26cb0:	mov	r0, r6
   26cb4:	mov	r2, r8
   26cb8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26cbc:	mov	sl, r0
   26cc0:	cmp	sl, r8
   26cc4:	mov	r2, r8
   26cc8:	beq	26d0c <main@@Base+0x10e54>
   26ccc:	ldrb	r0, [sl]
   26cd0:	cmp	r0, #125	; 0x7d
   26cd4:	bne	26d08 <main@@Base+0x10e50>
   26cd8:	add	r1, sl, #1
   26cdc:	sub	r0, r8, r1
   26ce0:	cmp	r0, #2
   26ce4:	blt	28d34 <main@@Base+0x12e7c>
   26ce8:	ldrb	r0, [r1]
   26cec:	cmp	r0, #32
   26cf0:	bhi	28378 <main@@Base+0x124c0>
   26cf4:	bne	28d34 <main@@Base+0x12e7c>
   26cf8:	ldrb	r0, [sl, #2]!
   26cfc:	cmp	r0, #32
   26d00:	bhi	263b8 <main@@Base+0x10500>
   26d04:	b	28d34 <main@@Base+0x12e7c>
   26d08:	mov	r2, sl
   26d0c:	cmp	r2, r8
   26d10:	mov	r4, r8
   26d14:	beq	26d4c <main@@Base+0x10e94>
   26d18:	ldrb	r0, [r2]
   26d1c:	cmp	r0, #34	; 0x22
   26d20:	bne	26d30 <main@@Base+0x10e78>
   26d24:	ldr	r4, [sp, #16]
   26d28:	add	r8, r2, #1
   26d2c:	b	26d4c <main@@Base+0x10e94>
   26d30:	ldr	r4, [sp, #16]
   26d34:	mov	r1, r2
   26d38:	mov	r0, r6
   26d3c:	mov	r3, #5
   26d40:	mov	r2, r4
   26d44:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   26d48:	mov	r8, r0
   26d4c:	sub	r9, r4, r8
   26d50:	mov	r0, #8
   26d54:	cmp	r9, #8
   26d58:	movcc	r0, r9
   26d5c:	sub	r1, r0, #1
   26d60:	cmp	r1, #7
   26d64:	bhi	27cac <main@@Base+0x11df4>
   26d68:	add	r4, pc, #36	; 0x24
   26d6c:	mov	r0, #0
   26d70:	mov	ip, #0
   26d74:	mov	lr, #0
   26d78:	mov	r2, #0
   26d7c:	mov	r3, #0
   26d80:	mov	r5, #0
   26d84:	mov	r6, #0
   26d88:	mov	r7, #0
   26d8c:	ldr	r1, [r4, r1, lsl #2]
   26d90:	add	pc, r4, r1
   26d94:	andeq	r0, r0, r4, rrx
   26d98:	andeq	r0, r0, ip, asr r0
   26d9c:	andeq	r0, r0, r4, asr r0
   26da0:	andeq	r0, r0, ip, asr #32
   26da4:	andeq	r0, r0, r0, asr #32
   26da8:	andeq	r0, r0, r4, lsr r0
   26dac:	andeq	r0, r0, r4, lsr #32
   26db0:	andeq	r0, r0, r0, lsr #32
   26db4:	ldrb	ip, [r8, #7]
   26db8:	ldrb	r1, [r8, #6]
   26dbc:	mov	lr, r0
   26dc0:	orr	r1, ip, r1, lsl #8
   26dc4:	mov	r0, r1
   26dc8:	ldrb	r1, [r8, #5]
   26dcc:	mov	r2, lr
   26dd0:	orr	r0, r0, r1, lsl #16
   26dd4:	ldrb	r1, [r8, #4]
   26dd8:	mov	r3, r2
   26ddc:	orr	r0, r0, r1, lsl #24
   26de0:	ldrb	r1, [r8, #3]
   26de4:	orr	r5, r1, r3
   26de8:	ldrb	r1, [r8, #2]
   26dec:	orr	r6, r5, r1, lsl #8
   26df0:	ldrb	r1, [r8, #1]
   26df4:	orr	r7, r6, r1, lsl #16
   26df8:	ldrb	r1, [r8]
   26dfc:	orr	r4, r7, r1, lsl #24
   26e00:	movw	r1, #25442	; 0x6362
   26e04:	movt	r1, #25443	; 0x6363
   26e08:	cmp	r4, r1
   26e0c:	bhi	26eac <main@@Base+0x10ff4>
   26e10:	movw	r1, #13108	; 0x3334
   26e14:	ldr	r6, [sp, #24]
   26e18:	movt	r1, #12594	; 0x3132
   26e1c:	eor	r5, r0, r1
   26e20:	movw	r1, #24929	; 0x6161
   26e24:	movt	r1, #24929	; 0x6161
   26e28:	eor	r0, r4, r1
   26e2c:	orrs	r0, r5, r0
   26e30:	bne	26f1c <main@@Base+0x11064>
   26e34:	ldr	r0, [sp, #16]
   26e38:	add	r7, r8, #8
   26e3c:	mov	r1, #8
   26e40:	sub	r0, r0, r7
   26e44:	cmp	r0, #8
   26e48:	movcc	r1, r0
   26e4c:	sub	r1, r1, #1
   26e50:	cmp	r1, #7
   26e54:	bhi	27fa0 <main@@Base+0x120e8>
   26e58:	ldrb	r1, [r7]
   26e5c:	cmp	r1, #53	; 0x35
   26e60:	bne	27fa0 <main@@Base+0x120e8>
   26e64:	cmp	r0, #2
   26e68:	blt	27fa0 <main@@Base+0x120e8>
   26e6c:	ldrb	r0, [r8, #9]
   26e70:	cmp	r0, #34	; 0x22
   26e74:	bne	27fa0 <main@@Base+0x120e8>
   26e78:	ldr	r4, [sp, #16]
   26e7c:	add	r1, r8, #10
   26e80:	sub	r0, r4, r1
   26e84:	cmp	r0, #2
   26e88:	blt	27604 <main@@Base+0x1174c>
   26e8c:	ldrb	r0, [r1]
   26e90:	cmp	r0, #32
   26e94:	bls	275f0 <main@@Base+0x11738>
   26e98:	ldr	r4, [sp, #16]
   26e9c:	mov	r8, r1
   26ea0:	cmp	r8, r4
   26ea4:	bne	2761c <main@@Base+0x11764>
   26ea8:	b	2765c <main@@Base+0x117a4>
   26eac:	movw	r1, #13108	; 0x3334
   26eb0:	ldr	r6, [sp, #24]
   26eb4:	movt	r1, #12594	; 0x3132
   26eb8:	eor	r5, r0, r1
   26ebc:	ldr	r0, [sp, #12]
   26ec0:	eor	r0, r4, r0
   26ec4:	orrs	r0, r5, r0
   26ec8:	bne	26f74 <main@@Base+0x110bc>
   26ecc:	cmp	r9, #9
   26ed0:	mov	r7, r8
   26ed4:	blt	27484 <main@@Base+0x115cc>
   26ed8:	ldrb	r0, [r8, #8]
   26edc:	mov	r7, r8
   26ee0:	cmp	r0, #34	; 0x22
   26ee4:	bne	27484 <main@@Base+0x115cc>
   26ee8:	ldr	r4, [sp, #16]
   26eec:	add	r1, r8, #9
   26ef0:	sub	r0, r4, r1
   26ef4:	cmp	r0, #2
   26ef8:	blt	26fec <main@@Base+0x11134>
   26efc:	ldrb	r0, [r1]
   26f00:	cmp	r0, #32
   26f04:	bls	26fd4 <main@@Base+0x1111c>
   26f08:	ldr	r4, [sp, #16]
   26f0c:	mov	r7, r1
   26f10:	cmp	r7, r4
   26f14:	bne	27004 <main@@Base+0x1114c>
   26f18:	b	270ac <main@@Base+0x111f4>
   26f1c:	teq	r4, r1
   26f20:	bne	27138 <main@@Base+0x11280>
   26f24:	cmp	r9, #5
   26f28:	mov	r1, r8
   26f2c:	blt	27724 <main@@Base+0x1186c>
   26f30:	ldrb	r0, [r8, #4]
   26f34:	mov	r1, r8
   26f38:	cmp	r0, #34	; 0x22
   26f3c:	bne	27724 <main@@Base+0x1186c>
   26f40:	ldr	r6, [sp, #16]
   26f44:	add	r2, r8, #5
   26f48:	sub	r0, r6, r2
   26f4c:	cmp	r0, #2
   26f50:	blt	270dc <main@@Base+0x11224>
   26f54:	ldrb	r0, [r2]
   26f58:	cmp	r0, #32
   26f5c:	bls	270c4 <main@@Base+0x1120c>
   26f60:	ldr	r6, [sp, #16]
   26f64:	mov	r1, r2
   26f68:	cmp	r1, r6
   26f6c:	bne	270f8 <main@@Base+0x11240>
   26f70:	b	271e8 <main@@Base+0x11330>
   26f74:	movw	r0, #25443	; 0x6363
   26f78:	movt	r0, #25443	; 0x6363
   26f7c:	teq	r4, r0
   26f80:	bne	27274 <main@@Base+0x113bc>
   26f84:	cmp	r9, #5
   26f88:	mov	r1, r8
   26f8c:	blt	27784 <main@@Base+0x118cc>
   26f90:	ldrb	r0, [r8, #4]
   26f94:	mov	r1, r8
   26f98:	cmp	r0, #34	; 0x22
   26f9c:	bne	27784 <main@@Base+0x118cc>
   26fa0:	ldr	r6, [sp, #16]
   26fa4:	add	r2, r8, #5
   26fa8:	sub	r0, r6, r2
   26fac:	cmp	r0, #2
   26fb0:	blt	27218 <main@@Base+0x11360>
   26fb4:	ldrb	r0, [r2]
   26fb8:	cmp	r0, #32
   26fbc:	bls	27200 <main@@Base+0x11348>
   26fc0:	ldr	r6, [sp, #16]
   26fc4:	mov	r1, r2
   26fc8:	cmp	r1, r6
   26fcc:	bne	27234 <main@@Base+0x1137c>
   26fd0:	b	272d4 <main@@Base+0x1141c>
   26fd4:	ldr	r4, [sp, #16]
   26fd8:	bne	26fec <main@@Base+0x11134>
   26fdc:	mov	r7, r8
   26fe0:	ldrb	r0, [r7, #10]!
   26fe4:	cmp	r0, #32
   26fe8:	bhi	26ffc <main@@Base+0x11144>
   26fec:	mov	r0, r6
   26ff0:	mov	r2, r4
   26ff4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   26ff8:	mov	r7, r0
   26ffc:	cmp	r7, r4
   27000:	beq	270ac <main@@Base+0x111f4>
   27004:	ldrb	r0, [r7]
   27008:	cmp	r0, #58	; 0x3a
   2700c:	bne	270ac <main@@Base+0x111f4>
   27010:	ldr	r0, [sp, #16]
   27014:	add	r1, r7, #1
   27018:	sub	r0, r0, r1
   2701c:	cmp	r0, #2
   27020:	blt	27474 <main@@Base+0x115bc>
   27024:	ldrb	r0, [r1]
   27028:	cmp	r0, #32
   2702c:	bls	27464 <main@@Base+0x115ac>
   27030:	mov	r7, r1
   27034:	cmp	r8, r7
   27038:	bne	2748c <main@@Base+0x115d4>
   2703c:	ldr	r0, [sp, #16]
   27040:	add	r7, r8, #8
   27044:	mov	r1, #8
   27048:	sub	r0, r0, r7
   2704c:	cmp	r0, #8
   27050:	movcc	r1, r0
   27054:	sub	r1, r1, #1
   27058:	cmp	r1, #7
   2705c:	bhi	27fa0 <main@@Base+0x120e8>
   27060:	ldrb	r1, [r7]
   27064:	cmp	r1, #53	; 0x35
   27068:	bne	27fa0 <main@@Base+0x120e8>
   2706c:	cmp	r0, #2
   27070:	blt	27fa0 <main@@Base+0x120e8>
   27074:	ldrb	r0, [r8, #9]
   27078:	cmp	r0, #34	; 0x22
   2707c:	bne	27fa0 <main@@Base+0x120e8>
   27080:	ldr	r0, [sp, #16]
   27084:	add	r1, r8, #10
   27088:	sub	r0, r0, r1
   2708c:	cmp	r0, #2
   27090:	blt	27ae4 <main@@Base+0x11c2c>
   27094:	ldrb	r0, [r1]
   27098:	cmp	r0, #32
   2709c:	bls	27ad0 <main@@Base+0x11c18>
   270a0:	ldr	r6, [sp, #24]
   270a4:	mov	r8, r1
   270a8:	b	27af4 <main@@Base+0x11c3c>
   270ac:	ldr	r2, [sp, #16]
   270b0:	mov	r0, r6
   270b4:	mov	r1, r7
   270b8:	mov	r3, #4
   270bc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   270c0:	b	27480 <main@@Base+0x115c8>
   270c4:	ldr	r6, [sp, #16]
   270c8:	bne	270dc <main@@Base+0x11224>
   270cc:	mov	r1, r8
   270d0:	ldrb	r0, [r1, #6]!
   270d4:	cmp	r0, #32
   270d8:	bhi	270f0 <main@@Base+0x11238>
   270dc:	ldr	r0, [sp, #24]
   270e0:	mov	r1, r2
   270e4:	mov	r2, r6
   270e8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   270ec:	mov	r1, r0
   270f0:	cmp	r1, r6
   270f4:	beq	271e8 <main@@Base+0x11330>
   270f8:	ldrb	r0, [r1]
   270fc:	cmp	r0, #58	; 0x3a
   27100:	bne	271e8 <main@@Base+0x11330>
   27104:	ldr	r0, [sp, #16]
   27108:	ldr	r6, [sp, #24]
   2710c:	add	r2, r1, #1
   27110:	sub	r0, r0, r2
   27114:	cmp	r0, #2
   27118:	blt	27710 <main@@Base+0x11858>
   2711c:	ldrb	r0, [r2]
   27120:	cmp	r0, #32
   27124:	bls	276fc <main@@Base+0x11844>
   27128:	ldr	r6, [sp, #24]
   2712c:	mov	r1, r2
   27130:	cmp	r8, r1
   27134:	bne	2772c <main@@Base+0x11874>
   27138:	movw	r1, #25186	; 0x6262
   2713c:	movt	r1, #25186	; 0x6262
   27140:	eor	r0, r4, r1
   27144:	orrs	r0, r5, r0
   27148:	bne	2719c <main@@Base+0x112e4>
   2714c:	cmp	r9, #9
   27150:	mov	r7, r8
   27154:	blt	277e0 <main@@Base+0x11928>
   27158:	ldrb	r0, [r8, #8]
   2715c:	mov	r7, r8
   27160:	cmp	r0, #34	; 0x22
   27164:	bne	277e0 <main@@Base+0x11928>
   27168:	ldr	r4, [sp, #16]
   2716c:	add	r1, r8, #9
   27170:	sub	r0, r4, r1
   27174:	cmp	r0, #2
   27178:	blt	27304 <main@@Base+0x1144c>
   2717c:	ldrb	r0, [r1]
   27180:	cmp	r0, #32
   27184:	bls	272ec <main@@Base+0x11434>
   27188:	ldr	r4, [sp, #16]
   2718c:	mov	r7, r1
   27190:	cmp	r7, r4
   27194:	bne	2731c <main@@Base+0x11464>
   27198:	b	2735c <main@@Base+0x114a4>
   2719c:	teq	r4, r1
   271a0:	bne	27cac <main@@Base+0x11df4>
   271a4:	cmp	r9, #5
   271a8:	mov	r1, r8
   271ac:	blt	27c60 <main@@Base+0x11da8>
   271b0:	ldrb	r0, [r8, #4]
   271b4:	mov	r1, r8
   271b8:	cmp	r0, #34	; 0x22
   271bc:	bne	27c60 <main@@Base+0x11da8>
   271c0:	ldr	r0, [sp, #16]
   271c4:	add	r2, r8, #5
   271c8:	sub	r0, r0, r2
   271cc:	cmp	r0, #2
   271d0:	blt	27688 <main@@Base+0x117d0>
   271d4:	ldrb	r0, [r2]
   271d8:	cmp	r0, #32
   271dc:	bls	27674 <main@@Base+0x117bc>
   271e0:	mov	r1, r2
   271e4:	b	2769c <main@@Base+0x117e4>
   271e8:	ldr	r6, [sp, #24]
   271ec:	ldr	r2, [sp, #16]
   271f0:	mov	r3, #4
   271f4:	mov	r0, r6
   271f8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   271fc:	b	27720 <main@@Base+0x11868>
   27200:	ldr	r6, [sp, #16]
   27204:	bne	27218 <main@@Base+0x11360>
   27208:	mov	r1, r8
   2720c:	ldrb	r0, [r1, #6]!
   27210:	cmp	r0, #32
   27214:	bhi	2722c <main@@Base+0x11374>
   27218:	ldr	r0, [sp, #24]
   2721c:	mov	r1, r2
   27220:	mov	r2, r6
   27224:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27228:	mov	r1, r0
   2722c:	cmp	r1, r6
   27230:	beq	272d4 <main@@Base+0x1141c>
   27234:	ldrb	r0, [r1]
   27238:	cmp	r0, #58	; 0x3a
   2723c:	bne	272d4 <main@@Base+0x1141c>
   27240:	ldr	r0, [sp, #16]
   27244:	ldr	r6, [sp, #24]
   27248:	add	r2, r1, #1
   2724c:	sub	r0, r0, r2
   27250:	cmp	r0, #2
   27254:	blt	27770 <main@@Base+0x118b8>
   27258:	ldrb	r0, [r2]
   2725c:	cmp	r0, #32
   27260:	bls	2775c <main@@Base+0x118a4>
   27264:	ldr	r6, [sp, #24]
   27268:	mov	r1, r2
   2726c:	cmp	r8, r1
   27270:	bne	2778c <main@@Base+0x118d4>
   27274:	ldr	r0, [sp, #8]
   27278:	eor	r0, r4, r0
   2727c:	orrs	r0, r5, r0
   27280:	bne	27cac <main@@Base+0x11df4>
   27284:	cmp	r9, #9
   27288:	mov	r7, r8
   2728c:	blt	27960 <main@@Base+0x11aa8>
   27290:	ldrb	r0, [r8, #8]
   27294:	mov	r7, r8
   27298:	cmp	r0, #34	; 0x22
   2729c:	bne	27960 <main@@Base+0x11aa8>
   272a0:	ldr	r4, [sp, #16]
   272a4:	add	r1, r8, #9
   272a8:	sub	r0, r4, r1
   272ac:	cmp	r0, #2
   272b0:	blt	2738c <main@@Base+0x114d4>
   272b4:	ldrb	r0, [r1]
   272b8:	cmp	r0, #32
   272bc:	bls	27374 <main@@Base+0x114bc>
   272c0:	ldr	r4, [sp, #16]
   272c4:	mov	r7, r1
   272c8:	cmp	r7, r4
   272cc:	bne	273a4 <main@@Base+0x114ec>
   272d0:	b	2744c <main@@Base+0x11594>
   272d4:	ldr	r6, [sp, #24]
   272d8:	ldr	r2, [sp, #16]
   272dc:	mov	r3, #4
   272e0:	mov	r0, r6
   272e4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   272e8:	b	27780 <main@@Base+0x118c8>
   272ec:	ldr	r4, [sp, #16]
   272f0:	bne	27304 <main@@Base+0x1144c>
   272f4:	mov	r7, r8
   272f8:	ldrb	r0, [r7, #10]!
   272fc:	cmp	r0, #32
   27300:	bhi	27314 <main@@Base+0x1145c>
   27304:	mov	r0, r6
   27308:	mov	r2, r4
   2730c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27310:	mov	r7, r0
   27314:	cmp	r7, r4
   27318:	beq	2735c <main@@Base+0x114a4>
   2731c:	ldrb	r0, [r7]
   27320:	cmp	r0, #58	; 0x3a
   27324:	bne	2735c <main@@Base+0x114a4>
   27328:	ldr	r0, [sp, #16]
   2732c:	add	r1, r7, #1
   27330:	sub	r0, r0, r1
   27334:	cmp	r0, #2
   27338:	blt	277d0 <main@@Base+0x11918>
   2733c:	ldrb	r0, [r1]
   27340:	cmp	r0, #32
   27344:	bls	277bc <main@@Base+0x11904>
   27348:	ldr	r6, [sp, #24]
   2734c:	mov	r7, r1
   27350:	cmp	r8, r7
   27354:	bne	277e8 <main@@Base+0x11930>
   27358:	b	27cac <main@@Base+0x11df4>
   2735c:	ldr	r2, [sp, #16]
   27360:	mov	r0, r6
   27364:	mov	r1, r7
   27368:	mov	r3, #4
   2736c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27370:	b	277dc <main@@Base+0x11924>
   27374:	ldr	r4, [sp, #16]
   27378:	bne	2738c <main@@Base+0x114d4>
   2737c:	mov	r7, r8
   27380:	ldrb	r0, [r7, #10]!
   27384:	cmp	r0, #32
   27388:	bhi	2739c <main@@Base+0x114e4>
   2738c:	mov	r0, r6
   27390:	mov	r2, r4
   27394:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27398:	mov	r7, r0
   2739c:	cmp	r7, r4
   273a0:	beq	2744c <main@@Base+0x11594>
   273a4:	ldrb	r0, [r7]
   273a8:	cmp	r0, #58	; 0x3a
   273ac:	bne	2744c <main@@Base+0x11594>
   273b0:	ldr	r0, [sp, #16]
   273b4:	add	r1, r7, #1
   273b8:	sub	r0, r0, r1
   273bc:	cmp	r0, #2
   273c0:	blt	27950 <main@@Base+0x11a98>
   273c4:	ldrb	r0, [r1]
   273c8:	cmp	r0, #32
   273cc:	bls	2793c <main@@Base+0x11a84>
   273d0:	ldr	r6, [sp, #24]
   273d4:	mov	r7, r1
   273d8:	cmp	r8, r7
   273dc:	bne	27968 <main@@Base+0x11ab0>
   273e0:	ldr	r0, [sp, #16]
   273e4:	add	r7, r8, #8
   273e8:	mov	r1, #8
   273ec:	sub	r0, r0, r7
   273f0:	cmp	r0, #8
   273f4:	movcc	r1, r0
   273f8:	sub	r1, r1, #1
   273fc:	cmp	r1, #7
   27400:	bhi	27fa0 <main@@Base+0x120e8>
   27404:	ldrb	r1, [r7]
   27408:	cmp	r1, #53	; 0x35
   2740c:	bne	27fa0 <main@@Base+0x120e8>
   27410:	cmp	r0, #2
   27414:	blt	27fa0 <main@@Base+0x120e8>
   27418:	ldrb	r0, [r8, #9]
   2741c:	cmp	r0, #34	; 0x22
   27420:	bne	27fa0 <main@@Base+0x120e8>
   27424:	ldr	r0, [sp, #16]
   27428:	add	r1, r8, #10
   2742c:	sub	r0, r0, r1
   27430:	cmp	r0, #2
   27434:	blt	27d54 <main@@Base+0x11e9c>
   27438:	ldrb	r0, [r1]
   2743c:	cmp	r0, #32
   27440:	bls	27d44 <main@@Base+0x11e8c>
   27444:	mov	r8, r1
   27448:	b	27d64 <main@@Base+0x11eac>
   2744c:	ldr	r2, [sp, #16]
   27450:	mov	r0, r6
   27454:	mov	r1, r7
   27458:	mov	r3, #4
   2745c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27460:	b	2795c <main@@Base+0x11aa4>
   27464:	bne	27474 <main@@Base+0x115bc>
   27468:	ldrb	r0, [r7, #2]!
   2746c:	cmp	r0, #32
   27470:	bhi	27484 <main@@Base+0x115cc>
   27474:	ldr	r2, [sp, #16]
   27478:	mov	r0, r6
   2747c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27480:	mov	r7, r0
   27484:	cmp	r8, r7
   27488:	beq	2703c <main@@Base+0x11184>
   2748c:	ldr	r8, [sp, #16]
   27490:	mov	r4, #0
   27494:	str	r4, [fp, #-36]	; 0xffffffdc
   27498:	str	r4, [fp, #-40]	; 0xffffffd8
   2749c:	str	r4, [sp, #36]	; 0x24
   274a0:	str	r4, [sp, #32]
   274a4:	str	r4, [sp, #44]	; 0x2c
   274a8:	cmp	r7, r8
   274ac:	beq	2750c <main@@Base+0x11654>
   274b0:	sub	r0, fp, #40	; 0x28
   274b4:	mov	r1, r7
   274b8:	mov	r2, r8
   274bc:	add	r3, sp, #44	; 0x2c
   274c0:	str	r0, [sp]
   274c4:	mov	r0, r6
   274c8:	bl	362a4 <flatcc_json_parser_integer@@Base>
   274cc:	cmp	r0, r7
   274d0:	beq	27520 <main@@Base+0x11668>
   274d4:	mov	sl, r0
   274d8:	ldr	r0, [sp, #44]	; 0x2c
   274dc:	ldr	r4, [fp, #-40]	; 0xffffffd8
   274e0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   274e4:	cmp	r0, #0
   274e8:	beq	27538 <main@@Base+0x11680>
   274ec:	subs	r0, r4, #1
   274f0:	sbcs	r0, r5, #-2147483648	; 0x80000000
   274f4:	bcc	2756c <main@@Base+0x116b4>
   274f8:	mov	r0, r6
   274fc:	mov	r1, sl
   27500:	mov	r2, r8
   27504:	mov	r3, #8
   27508:	b	27550 <main@@Base+0x11698>
   2750c:	mov	r5, #0
   27510:	mov	sl, r8
   27514:	cmp	r7, sl
   27518:	bne	275bc <main@@Base+0x11704>
   2751c:	b	27584 <main@@Base+0x116cc>
   27520:	mov	r4, #0
   27524:	mov	r5, #0
   27528:	mov	sl, r7
   2752c:	cmp	r7, sl
   27530:	bne	275bc <main@@Base+0x11704>
   27534:	b	27584 <main@@Base+0x116cc>
   27538:	cmn	r5, #1
   2753c:	bgt	27574 <main@@Base+0x116bc>
   27540:	mov	r0, r6
   27544:	mov	r1, sl
   27548:	mov	r2, r8
   2754c:	mov	r3, #7
   27550:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27554:	mov	sl, r0
   27558:	mov	r4, #0
   2755c:	mov	r5, #0
   27560:	cmp	r7, sl
   27564:	bne	275bc <main@@Base+0x11704>
   27568:	b	27584 <main@@Base+0x116cc>
   2756c:	rsbs	r4, r4, #0
   27570:	rsc	r5, r5, #0
   27574:	str	r4, [sp, #32]
   27578:	str	r5, [sp, #36]	; 0x24
   2757c:	cmp	r7, sl
   27580:	bne	275bc <main@@Base+0x11704>
   27584:	add	r0, sp, #32
   27588:	mov	r1, r7
   2758c:	mov	r2, r8
   27590:	str	r0, [sp]
   27594:	mov	r0, r6
   27598:	ldr	r3, [pc, #4056]	; 28578 <main@@Base+0x126c0>
   2759c:	add	r3, pc, r3
   275a0:	bl	24138 <main@@Base+0xe280>
   275a4:	mov	sl, r0
   275a8:	cmp	r0, r7
   275ac:	cmpne	sl, r8
   275b0:	beq	28e28 <main@@Base+0x12f70>
   275b4:	ldr	r4, [sp, #32]
   275b8:	ldr	r5, [sp, #36]	; 0x24
   275bc:	orrs	r0, r4, r5
   275c0:	bne	275d0 <main@@Base+0x11718>
   275c4:	ldrb	r0, [r6, #8]
   275c8:	tst	r0, #2
   275cc:	beq	27fb8 <main@@Base+0x12100>
   275d0:	ldr	r0, [r6]
   275d4:	mov	r1, #5
   275d8:	mov	r2, #8
   275dc:	mov	r3, #8
   275e0:	bl	3063c <flatcc_builder_table_add@@Base>
   275e4:	cmp	r0, #0
   275e8:	bne	27ac8 <main@@Base+0x11c10>
   275ec:	b	28e28 <main@@Base+0x12f70>
   275f0:	ldr	r4, [sp, #16]
   275f4:	bne	27604 <main@@Base+0x1174c>
   275f8:	ldrb	r0, [r8, #11]!
   275fc:	cmp	r0, #32
   27600:	bhi	27614 <main@@Base+0x1175c>
   27604:	mov	r0, r6
   27608:	mov	r2, r4
   2760c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27610:	mov	r8, r0
   27614:	cmp	r8, r4
   27618:	beq	2765c <main@@Base+0x117a4>
   2761c:	ldrb	r0, [r8]
   27620:	cmp	r0, #58	; 0x3a
   27624:	bne	2765c <main@@Base+0x117a4>
   27628:	ldr	r0, [sp, #16]
   2762c:	add	r1, r8, #1
   27630:	sub	r0, r0, r1
   27634:	cmp	r0, #2
   27638:	blt	27b6c <main@@Base+0x11cb4>
   2763c:	ldrb	r0, [r1]
   27640:	cmp	r0, #32
   27644:	bls	27b58 <main@@Base+0x11ca0>
   27648:	ldr	r6, [sp, #24]
   2764c:	mov	r8, r1
   27650:	cmp	r7, r8
   27654:	bne	27b84 <main@@Base+0x11ccc>
   27658:	b	27fa0 <main@@Base+0x120e8>
   2765c:	ldr	r2, [sp, #16]
   27660:	mov	r0, r6
   27664:	mov	r1, r8
   27668:	mov	r3, #4
   2766c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27670:	b	27b78 <main@@Base+0x11cc0>
   27674:	bne	27688 <main@@Base+0x117d0>
   27678:	mov	r1, r8
   2767c:	ldrb	r0, [r1, #6]!
   27680:	cmp	r0, #32
   27684:	bhi	2769c <main@@Base+0x117e4>
   27688:	mov	r1, r2
   2768c:	ldr	r2, [sp, #16]
   27690:	mov	r0, r6
   27694:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27698:	mov	r1, r0
   2769c:	ldr	r0, [sp, #16]
   276a0:	cmp	r1, r0
   276a4:	beq	276e8 <main@@Base+0x11830>
   276a8:	ldrb	r0, [r1]
   276ac:	cmp	r0, #58	; 0x3a
   276b0:	bne	276e8 <main@@Base+0x11830>
   276b4:	ldr	r0, [sp, #16]
   276b8:	add	r2, r1, #1
   276bc:	sub	r0, r0, r2
   276c0:	cmp	r0, #2
   276c4:	blt	27c4c <main@@Base+0x11d94>
   276c8:	ldrb	r0, [r2]
   276cc:	cmp	r0, #32
   276d0:	bls	27c38 <main@@Base+0x11d80>
   276d4:	ldr	r6, [sp, #24]
   276d8:	mov	r1, r2
   276dc:	cmp	r8, r1
   276e0:	bne	27c68 <main@@Base+0x11db0>
   276e4:	b	27cac <main@@Base+0x11df4>
   276e8:	ldr	r2, [sp, #16]
   276ec:	mov	r0, r6
   276f0:	mov	r3, #4
   276f4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   276f8:	b	27c5c <main@@Base+0x11da4>
   276fc:	ldr	r6, [sp, #24]
   27700:	bne	27710 <main@@Base+0x11858>
   27704:	ldrb	r0, [r1, #2]!
   27708:	cmp	r0, #32
   2770c:	bhi	27724 <main@@Base+0x1186c>
   27710:	mov	r1, r2
   27714:	ldr	r2, [sp, #16]
   27718:	mov	r0, r6
   2771c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27720:	mov	r1, r0
   27724:	cmp	r8, r1
   27728:	beq	27138 <main@@Base+0x11280>
   2772c:	ldr	r8, [sp, #16]
   27730:	mov	r0, r6
   27734:	add	r3, sp, #28
   27738:	mov	r2, r8
   2773c:	bl	36850 <flatcc_json_parser_build_string@@Base>
   27740:	mov	sl, r0
   27744:	ldr	r0, [sp, #28]
   27748:	cmp	r0, #0
   2774c:	beq	28e28 <main@@Base+0x12f70>
   27750:	ldr	r0, [r6]
   27754:	mov	r1, #0
   27758:	b	27c94 <main@@Base+0x11ddc>
   2775c:	ldr	r6, [sp, #24]
   27760:	bne	27770 <main@@Base+0x118b8>
   27764:	ldrb	r0, [r1, #2]!
   27768:	cmp	r0, #32
   2776c:	bhi	27784 <main@@Base+0x118cc>
   27770:	mov	r1, r2
   27774:	ldr	r2, [sp, #16]
   27778:	mov	r0, r6
   2777c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27780:	mov	r1, r0
   27784:	cmp	r8, r1
   27788:	beq	27274 <main@@Base+0x113bc>
   2778c:	ldr	r8, [sp, #16]
   27790:	mov	r0, r6
   27794:	add	r3, sp, #28
   27798:	mov	r2, r8
   2779c:	bl	36850 <flatcc_json_parser_build_string@@Base>
   277a0:	mov	sl, r0
   277a4:	ldr	r0, [sp, #28]
   277a8:	cmp	r0, #0
   277ac:	beq	28e28 <main@@Base+0x12f70>
   277b0:	ldr	r0, [r6]
   277b4:	mov	r1, #4
   277b8:	b	27c94 <main@@Base+0x11ddc>
   277bc:	ldr	r6, [sp, #24]
   277c0:	bne	277d0 <main@@Base+0x11918>
   277c4:	ldrb	r0, [r7, #2]!
   277c8:	cmp	r0, #32
   277cc:	bhi	277e0 <main@@Base+0x11928>
   277d0:	ldr	r2, [sp, #16]
   277d4:	mov	r0, r6
   277d8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   277dc:	mov	r7, r0
   277e0:	cmp	r8, r7
   277e4:	beq	27cac <main@@Base+0x11df4>
   277e8:	ldr	r8, [sp, #16]
   277ec:	mov	r4, #0
   277f0:	str	r4, [fp, #-36]	; 0xffffffdc
   277f4:	str	r4, [fp, #-40]	; 0xffffffd8
   277f8:	str	r4, [sp, #36]	; 0x24
   277fc:	str	r4, [sp, #32]
   27800:	str	r4, [sp, #44]	; 0x2c
   27804:	cmp	r7, r8
   27808:	beq	27868 <main@@Base+0x119b0>
   2780c:	sub	r0, fp, #40	; 0x28
   27810:	mov	r1, r7
   27814:	mov	r2, r8
   27818:	add	r3, sp, #44	; 0x2c
   2781c:	str	r0, [sp]
   27820:	mov	r0, r6
   27824:	bl	362a4 <flatcc_json_parser_integer@@Base>
   27828:	cmp	r0, r7
   2782c:	beq	2787c <main@@Base+0x119c4>
   27830:	mov	sl, r0
   27834:	ldr	r0, [sp, #44]	; 0x2c
   27838:	ldr	r4, [fp, #-40]	; 0xffffffd8
   2783c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   27840:	cmp	r0, #0
   27844:	beq	27894 <main@@Base+0x119dc>
   27848:	subs	r0, r4, #1
   2784c:	sbcs	r0, r5, #-2147483648	; 0x80000000
   27850:	bcc	278c8 <main@@Base+0x11a10>
   27854:	mov	r0, r6
   27858:	mov	r1, sl
   2785c:	mov	r2, r8
   27860:	mov	r3, #8
   27864:	b	278ac <main@@Base+0x119f4>
   27868:	mov	r5, #0
   2786c:	mov	sl, r8
   27870:	cmp	r7, sl
   27874:	bne	27918 <main@@Base+0x11a60>
   27878:	b	278e0 <main@@Base+0x11a28>
   2787c:	mov	r4, #0
   27880:	mov	r5, #0
   27884:	mov	sl, r7
   27888:	cmp	r7, sl
   2788c:	bne	27918 <main@@Base+0x11a60>
   27890:	b	278e0 <main@@Base+0x11a28>
   27894:	cmn	r5, #1
   27898:	bgt	278d0 <main@@Base+0x11a18>
   2789c:	mov	r0, r6
   278a0:	mov	r1, sl
   278a4:	mov	r2, r8
   278a8:	mov	r3, #7
   278ac:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   278b0:	mov	sl, r0
   278b4:	mov	r4, #0
   278b8:	mov	r5, #0
   278bc:	cmp	r7, sl
   278c0:	bne	27918 <main@@Base+0x11a60>
   278c4:	b	278e0 <main@@Base+0x11a28>
   278c8:	rsbs	r4, r4, #0
   278cc:	rsc	r5, r5, #0
   278d0:	str	r4, [sp, #32]
   278d4:	str	r5, [sp, #36]	; 0x24
   278d8:	cmp	r7, sl
   278dc:	bne	27918 <main@@Base+0x11a60>
   278e0:	add	r0, sp, #32
   278e4:	mov	r1, r7
   278e8:	mov	r2, r8
   278ec:	str	r0, [sp]
   278f0:	mov	r0, r6
   278f4:	ldr	r3, [pc, #4036]	; 288c0 <main@@Base+0x12a08>
   278f8:	add	r3, pc, r3
   278fc:	bl	24138 <main@@Base+0xe280>
   27900:	mov	sl, r0
   27904:	cmp	r0, r7
   27908:	cmpne	sl, r8
   2790c:	beq	28e20 <main@@Base+0x12f68>
   27910:	ldr	r4, [sp, #32]
   27914:	ldr	r5, [sp, #36]	; 0x24
   27918:	orrs	r0, r4, r5
   2791c:	bne	2792c <main@@Base+0x11a74>
   27920:	ldrb	r0, [r6, #8]
   27924:	tst	r0, #2
   27928:	beq	27fb8 <main@@Base+0x12100>
   2792c:	ldr	r0, [r6]
   27930:	mov	r1, #3
   27934:	b	27ab4 <main@@Base+0x11bfc>
   27938:	andeq	r5, r3, r8, ror #16
   2793c:	ldr	r6, [sp, #24]
   27940:	bne	27950 <main@@Base+0x11a98>
   27944:	ldrb	r0, [r7, #2]!
   27948:	cmp	r0, #32
   2794c:	bhi	27960 <main@@Base+0x11aa8>
   27950:	ldr	r2, [sp, #16]
   27954:	mov	r0, r6
   27958:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2795c:	mov	r7, r0
   27960:	cmp	r8, r7
   27964:	beq	273e0 <main@@Base+0x11528>
   27968:	ldr	r8, [sp, #16]
   2796c:	mov	r4, #0
   27970:	str	r4, [fp, #-36]	; 0xffffffdc
   27974:	str	r4, [fp, #-40]	; 0xffffffd8
   27978:	str	r4, [sp, #36]	; 0x24
   2797c:	str	r4, [sp, #32]
   27980:	str	r4, [sp, #44]	; 0x2c
   27984:	cmp	r7, r8
   27988:	beq	279e8 <main@@Base+0x11b30>
   2798c:	sub	r0, fp, #40	; 0x28
   27990:	mov	r1, r7
   27994:	mov	r2, r8
   27998:	add	r3, sp, #44	; 0x2c
   2799c:	str	r0, [sp]
   279a0:	mov	r0, r6
   279a4:	bl	362a4 <flatcc_json_parser_integer@@Base>
   279a8:	cmp	r0, r7
   279ac:	beq	279fc <main@@Base+0x11b44>
   279b0:	mov	sl, r0
   279b4:	ldr	r0, [sp, #44]	; 0x2c
   279b8:	ldr	r4, [fp, #-40]	; 0xffffffd8
   279bc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   279c0:	cmp	r0, #0
   279c4:	beq	27a14 <main@@Base+0x11b5c>
   279c8:	subs	r0, r4, #1
   279cc:	sbcs	r0, r5, #-2147483648	; 0x80000000
   279d0:	bcc	27a48 <main@@Base+0x11b90>
   279d4:	mov	r0, r6
   279d8:	mov	r1, sl
   279dc:	mov	r2, r8
   279e0:	mov	r3, #8
   279e4:	b	27a2c <main@@Base+0x11b74>
   279e8:	mov	r5, #0
   279ec:	mov	sl, r8
   279f0:	cmp	r7, sl
   279f4:	bne	27a98 <main@@Base+0x11be0>
   279f8:	b	27a60 <main@@Base+0x11ba8>
   279fc:	mov	r4, #0
   27a00:	mov	r5, #0
   27a04:	mov	sl, r7
   27a08:	cmp	r7, sl
   27a0c:	bne	27a98 <main@@Base+0x11be0>
   27a10:	b	27a60 <main@@Base+0x11ba8>
   27a14:	cmn	r5, #1
   27a18:	bgt	27a50 <main@@Base+0x11b98>
   27a1c:	mov	r0, r6
   27a20:	mov	r1, sl
   27a24:	mov	r2, r8
   27a28:	mov	r3, #7
   27a2c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27a30:	mov	sl, r0
   27a34:	mov	r4, #0
   27a38:	mov	r5, #0
   27a3c:	cmp	r7, sl
   27a40:	bne	27a98 <main@@Base+0x11be0>
   27a44:	b	27a60 <main@@Base+0x11ba8>
   27a48:	rsbs	r4, r4, #0
   27a4c:	rsc	r5, r5, #0
   27a50:	str	r4, [sp, #32]
   27a54:	str	r5, [sp, #36]	; 0x24
   27a58:	cmp	r7, sl
   27a5c:	bne	27a98 <main@@Base+0x11be0>
   27a60:	add	r0, sp, #32
   27a64:	mov	r1, r7
   27a68:	mov	r2, r8
   27a6c:	str	r0, [sp]
   27a70:	mov	r0, r6
   27a74:	ldr	r3, [pc, #4052]	; 28a50 <main@@Base+0x12b98>
   27a78:	add	r3, pc, r3
   27a7c:	bl	24138 <main@@Base+0xe280>
   27a80:	mov	sl, r0
   27a84:	cmp	r0, r7
   27a88:	cmpne	sl, r8
   27a8c:	beq	28e20 <main@@Base+0x12f68>
   27a90:	ldr	r4, [sp, #32]
   27a94:	ldr	r5, [sp, #36]	; 0x24
   27a98:	orrs	r0, r4, r5
   27a9c:	bne	27aac <main@@Base+0x11bf4>
   27aa0:	ldrb	r0, [r6, #8]
   27aa4:	tst	r0, #2
   27aa8:	beq	27fb8 <main@@Base+0x12100>
   27aac:	ldr	r0, [r6]
   27ab0:	mov	r1, #7
   27ab4:	mov	r2, #8
   27ab8:	mov	r3, #8
   27abc:	bl	3063c <flatcc_builder_table_add@@Base>
   27ac0:	cmp	r0, #0
   27ac4:	beq	28e20 <main@@Base+0x12f68>
   27ac8:	strd	r4, [r0]
   27acc:	b	27fb8 <main@@Base+0x12100>
   27ad0:	ldr	r6, [sp, #24]
   27ad4:	bne	27ae4 <main@@Base+0x11c2c>
   27ad8:	ldrb	r0, [r8, #11]!
   27adc:	cmp	r0, #32
   27ae0:	bhi	27af4 <main@@Base+0x11c3c>
   27ae4:	ldr	r2, [sp, #16]
   27ae8:	mov	r0, r6
   27aec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27af0:	mov	r8, r0
   27af4:	ldr	r0, [sp, #16]
   27af8:	cmp	r8, r0
   27afc:	beq	27b40 <main@@Base+0x11c88>
   27b00:	ldrb	r0, [r8]
   27b04:	cmp	r0, #58	; 0x3a
   27b08:	bne	27b40 <main@@Base+0x11c88>
   27b0c:	ldr	r0, [sp, #16]
   27b10:	add	r1, r8, #1
   27b14:	sub	r0, r0, r1
   27b18:	cmp	r0, #2
   27b1c:	blt	27dd0 <main@@Base+0x11f18>
   27b20:	ldrb	r0, [r1]
   27b24:	cmp	r0, #32
   27b28:	bls	27dbc <main@@Base+0x11f04>
   27b2c:	ldr	r6, [sp, #24]
   27b30:	mov	r8, r1
   27b34:	cmp	r7, r8
   27b38:	bne	27de8 <main@@Base+0x11f30>
   27b3c:	b	27fa0 <main@@Base+0x120e8>
   27b40:	ldr	r2, [sp, #16]
   27b44:	mov	r0, r6
   27b48:	mov	r1, r8
   27b4c:	mov	r3, #4
   27b50:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27b54:	b	27ddc <main@@Base+0x11f24>
   27b58:	ldr	r6, [sp, #24]
   27b5c:	bne	27b6c <main@@Base+0x11cb4>
   27b60:	ldrb	r0, [r8, #2]!
   27b64:	cmp	r0, #32
   27b68:	bhi	27b7c <main@@Base+0x11cc4>
   27b6c:	ldr	r2, [sp, #16]
   27b70:	mov	r0, r6
   27b74:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27b78:	mov	r8, r0
   27b7c:	cmp	r7, r8
   27b80:	beq	27fa0 <main@@Base+0x120e8>
   27b84:	ldr	r2, [sp, #16]
   27b88:	mov	r4, #0
   27b8c:	str	r4, [fp, #-36]	; 0xffffffdc
   27b90:	str	r4, [fp, #-40]	; 0xffffffd8
   27b94:	str	r4, [sp, #44]	; 0x2c
   27b98:	str	r4, [sp, #32]
   27b9c:	cmp	r8, r2
   27ba0:	beq	27be8 <main@@Base+0x11d30>
   27ba4:	sub	r0, fp, #40	; 0x28
   27ba8:	mov	r1, r8
   27bac:	add	r3, sp, #32
   27bb0:	str	r0, [sp]
   27bb4:	mov	r0, r6
   27bb8:	bl	362a4 <flatcc_json_parser_integer@@Base>
   27bbc:	cmp	r0, r8
   27bc0:	beq	27bf8 <main@@Base+0x11d40>
   27bc4:	mov	sl, r0
   27bc8:	ldr	r0, [sp, #32]
   27bcc:	cmp	r0, #0
   27bd0:	beq	27c04 <main@@Base+0x11d4c>
   27bd4:	ldr	r6, [sp, #24]
   27bd8:	ldr	r2, [sp, #16]
   27bdc:	mov	r1, sl
   27be0:	mov	r3, #8
   27be4:	b	27c20 <main@@Base+0x11d68>
   27be8:	mov	sl, r2
   27bec:	cmp	r8, sl
   27bf0:	bne	27d08 <main@@Base+0x11e50>
   27bf4:	b	27ccc <main@@Base+0x11e14>
   27bf8:	mov	sl, r8
   27bfc:	b	27cc0 <main@@Base+0x11e08>
   27c00:	andeq	r5, r3, ip, lsl r6
   27c04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27c08:	cmp	r0, #0
   27c0c:	beq	27cb8 <main@@Base+0x11e00>
   27c10:	ldr	r6, [sp, #24]
   27c14:	ldr	r2, [sp, #16]
   27c18:	mov	r1, sl
   27c1c:	mov	r3, #7
   27c20:	mov	r0, r6
   27c24:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27c28:	mov	sl, r0
   27c2c:	cmp	r8, sl
   27c30:	bne	27d08 <main@@Base+0x11e50>
   27c34:	b	27ccc <main@@Base+0x11e14>
   27c38:	ldr	r6, [sp, #24]
   27c3c:	bne	27c4c <main@@Base+0x11d94>
   27c40:	ldrb	r0, [r1, #2]!
   27c44:	cmp	r0, #32
   27c48:	bhi	27c60 <main@@Base+0x11da8>
   27c4c:	mov	r1, r2
   27c50:	ldr	r2, [sp, #16]
   27c54:	mov	r0, r6
   27c58:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27c5c:	mov	r1, r0
   27c60:	cmp	r8, r1
   27c64:	beq	27cac <main@@Base+0x11df4>
   27c68:	ldr	r8, [sp, #16]
   27c6c:	mov	r0, r6
   27c70:	add	r3, sp, #28
   27c74:	mov	r2, r8
   27c78:	bl	36850 <flatcc_json_parser_build_string@@Base>
   27c7c:	mov	sl, r0
   27c80:	ldr	r0, [sp, #28]
   27c84:	cmp	r0, #0
   27c88:	beq	28e28 <main@@Base+0x12f70>
   27c8c:	ldr	r0, [r6]
   27c90:	mov	r1, #2
   27c94:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   27c98:	cmp	r0, #0
   27c9c:	beq	28e28 <main@@Base+0x12f70>
   27ca0:	ldr	r1, [sp, #28]
   27ca4:	str	r1, [r0]
   27ca8:	b	27fb8 <main@@Base+0x12100>
   27cac:	mov	r0, r6
   27cb0:	mov	r1, r8
   27cb4:	b	27fa8 <main@@Base+0x120f0>
   27cb8:	ldr	r4, [fp, #-40]	; 0xffffffd8
   27cbc:	str	r4, [sp, #44]	; 0x2c
   27cc0:	ldr	r6, [sp, #24]
   27cc4:	cmp	r8, sl
   27cc8:	bne	27d08 <main@@Base+0x11e50>
   27ccc:	add	r0, sp, #44	; 0x2c
   27cd0:	ldr	r2, [sp, #16]
   27cd4:	mov	r1, r8
   27cd8:	str	r0, [sp]
   27cdc:	mov	r0, r6
   27ce0:	ldr	r3, [pc, #4092]	; 28ce4 <main@@Base+0x12e2c>
   27ce4:	add	r3, pc, r3
   27ce8:	bl	24330 <main@@Base+0xe478>
   27cec:	cmp	r0, r8
   27cf0:	mov	sl, r0
   27cf4:	ldrne	r0, [sp, #16]
   27cf8:	cmpne	sl, r0
   27cfc:	beq	28e20 <main@@Base+0x12f68>
   27d00:	ldr	r4, [sp, #44]	; 0x2c
   27d04:	ldr	r6, [sp, #24]
   27d08:	cmp	r4, #0
   27d0c:	bne	27d1c <main@@Base+0x11e64>
   27d10:	ldrb	r0, [r6, #8]
   27d14:	tst	r0, #2
   27d18:	beq	27d3c <main@@Base+0x11e84>
   27d1c:	ldr	r0, [r6]
   27d20:	mov	r1, #1
   27d24:	mov	r2, #4
   27d28:	mov	r3, #4
   27d2c:	bl	3063c <flatcc_builder_table_add@@Base>
   27d30:	cmp	r0, #0
   27d34:	beq	28e20 <main@@Base+0x12f68>
   27d38:	str	r4, [r0]
   27d3c:	ldr	r8, [sp, #16]
   27d40:	b	27fb8 <main@@Base+0x12100>
   27d44:	bne	27d54 <main@@Base+0x11e9c>
   27d48:	ldrb	r0, [r8, #11]!
   27d4c:	cmp	r0, #32
   27d50:	bhi	27d64 <main@@Base+0x11eac>
   27d54:	ldr	r0, [sp, #24]
   27d58:	ldr	r2, [sp, #16]
   27d5c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27d60:	mov	r8, r0
   27d64:	ldr	r0, [sp, #16]
   27d68:	cmp	r8, r0
   27d6c:	beq	27da4 <main@@Base+0x11eec>
   27d70:	ldrb	r0, [r8]
   27d74:	cmp	r0, #58	; 0x3a
   27d78:	bne	27da4 <main@@Base+0x11eec>
   27d7c:	ldr	r0, [sp, #16]
   27d80:	add	r1, r8, #1
   27d84:	sub	r0, r0, r1
   27d88:	cmp	r0, #2
   27d8c:	blt	27f1c <main@@Base+0x12064>
   27d90:	ldrb	r0, [r1]
   27d94:	cmp	r0, #32
   27d98:	bls	27f0c <main@@Base+0x12054>
   27d9c:	mov	r8, r1
   27da0:	b	27f2c <main@@Base+0x12074>
   27da4:	ldr	r0, [sp, #24]
   27da8:	ldr	r2, [sp, #16]
   27dac:	mov	r1, r8
   27db0:	mov	r3, #4
   27db4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27db8:	b	27f28 <main@@Base+0x12070>
   27dbc:	ldr	r6, [sp, #24]
   27dc0:	bne	27dd0 <main@@Base+0x11f18>
   27dc4:	ldrb	r0, [r8, #2]!
   27dc8:	cmp	r0, #32
   27dcc:	bhi	27de0 <main@@Base+0x11f28>
   27dd0:	ldr	r2, [sp, #16]
   27dd4:	mov	r0, r6
   27dd8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27ddc:	mov	r8, r0
   27de0:	cmp	r7, r8
   27de4:	beq	27fa0 <main@@Base+0x120e8>
   27de8:	ldr	r0, [sp, #16]
   27dec:	mov	r4, #0
   27df0:	str	r4, [fp, #-36]	; 0xffffffdc
   27df4:	str	r4, [fp, #-40]	; 0xffffffd8
   27df8:	str	r4, [sp, #44]	; 0x2c
   27dfc:	str	r4, [sp, #32]
   27e00:	cmp	r8, r0
   27e04:	beq	27e50 <main@@Base+0x11f98>
   27e08:	sub	r0, fp, #40	; 0x28
   27e0c:	ldr	r2, [sp, #16]
   27e10:	mov	r1, r8
   27e14:	add	r3, sp, #32
   27e18:	str	r0, [sp]
   27e1c:	ldr	r0, [sp, #24]
   27e20:	bl	362a4 <flatcc_json_parser_integer@@Base>
   27e24:	cmp	r0, r8
   27e28:	beq	27e60 <main@@Base+0x11fa8>
   27e2c:	mov	sl, r0
   27e30:	ldr	r0, [sp, #32]
   27e34:	cmp	r0, #0
   27e38:	beq	27e70 <main@@Base+0x11fb8>
   27e3c:	ldr	r0, [sp, #24]
   27e40:	ldr	r2, [sp, #16]
   27e44:	mov	r1, sl
   27e48:	mov	r3, #8
   27e4c:	b	27e8c <main@@Base+0x11fd4>
   27e50:	ldr	sl, [sp, #16]
   27e54:	cmp	r8, sl
   27e58:	bne	27ed4 <main@@Base+0x1201c>
   27e5c:	b	27e9c <main@@Base+0x11fe4>
   27e60:	mov	sl, r8
   27e64:	cmp	r8, sl
   27e68:	bne	27ed4 <main@@Base+0x1201c>
   27e6c:	b	27e9c <main@@Base+0x11fe4>
   27e70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27e74:	cmp	r0, #0
   27e78:	beq	27ef8 <main@@Base+0x12040>
   27e7c:	ldr	r0, [sp, #24]
   27e80:	ldr	r2, [sp, #16]
   27e84:	mov	r1, sl
   27e88:	mov	r3, #7
   27e8c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   27e90:	mov	sl, r0
   27e94:	cmp	r8, sl
   27e98:	bne	27ed4 <main@@Base+0x1201c>
   27e9c:	add	r0, sp, #44	; 0x2c
   27ea0:	ldr	r2, [sp, #16]
   27ea4:	mov	r1, r8
   27ea8:	str	r0, [sp]
   27eac:	ldr	r0, [sp, #24]
   27eb0:	ldr	r3, [pc, #4000]	; 28e58 <main@@Base+0x12fa0>
   27eb4:	add	r3, pc, r3
   27eb8:	bl	24330 <main@@Base+0xe478>
   27ebc:	cmp	r0, r8
   27ec0:	mov	sl, r0
   27ec4:	ldrne	r0, [sp, #16]
   27ec8:	cmpne	sl, r0
   27ecc:	beq	28e20 <main@@Base+0x12f68>
   27ed0:	ldr	r4, [sp, #44]	; 0x2c
   27ed4:	cmp	r4, #0
   27ed8:	bne	27eec <main@@Base+0x12034>
   27edc:	ldr	r0, [sp, #24]
   27ee0:	ldrb	r0, [r0, #8]
   27ee4:	tst	r0, #2
   27ee8:	beq	28140 <main@@Base+0x12288>
   27eec:	ldr	r0, [sp, #24]
   27ef0:	mov	r1, #6
   27ef4:	b	28124 <main@@Base+0x1226c>
   27ef8:	ldr	r4, [fp, #-40]	; 0xffffffd8
   27efc:	str	r4, [sp, #44]	; 0x2c
   27f00:	cmp	r8, sl
   27f04:	bne	27ed4 <main@@Base+0x1201c>
   27f08:	b	27e9c <main@@Base+0x11fe4>
   27f0c:	bne	27f1c <main@@Base+0x12064>
   27f10:	ldrb	r0, [r8, #2]!
   27f14:	cmp	r0, #32
   27f18:	bhi	27f2c <main@@Base+0x12074>
   27f1c:	ldr	r0, [sp, #24]
   27f20:	ldr	r2, [sp, #16]
   27f24:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   27f28:	mov	r8, r0
   27f2c:	ldr	r6, [sp, #24]
   27f30:	cmp	r7, r8
   27f34:	beq	27fa0 <main@@Base+0x120e8>
   27f38:	ldr	r0, [sp, #16]
   27f3c:	mov	r4, #0
   27f40:	str	r4, [fp, #-36]	; 0xffffffdc
   27f44:	str	r4, [fp, #-40]	; 0xffffffd8
   27f48:	str	r4, [sp, #44]	; 0x2c
   27f4c:	str	r4, [sp, #32]
   27f50:	cmp	r8, r0
   27f54:	beq	28080 <main@@Base+0x121c8>
   27f58:	sub	r0, fp, #40	; 0x28
   27f5c:	ldr	r2, [sp, #16]
   27f60:	mov	r1, r8
   27f64:	add	r3, sp, #32
   27f68:	str	r0, [sp]
   27f6c:	ldr	r0, [sp, #24]
   27f70:	bl	362a4 <flatcc_json_parser_integer@@Base>
   27f74:	cmp	r0, r8
   27f78:	beq	28090 <main@@Base+0x121d8>
   27f7c:	mov	sl, r0
   27f80:	ldr	r0, [sp, #32]
   27f84:	cmp	r0, #0
   27f88:	beq	280a0 <main@@Base+0x121e8>
   27f8c:	ldr	r0, [sp, #24]
   27f90:	ldr	r2, [sp, #16]
   27f94:	mov	r1, sl
   27f98:	mov	r3, #8
   27f9c:	b	280bc <main@@Base+0x12204>
   27fa0:	mov	r0, r6
   27fa4:	mov	r1, r7
   27fa8:	ldr	r8, [sp, #16]
   27fac:	mov	r2, r8
   27fb0:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   27fb4:	mov	sl, r0
   27fb8:	sub	r0, r8, sl
   27fbc:	cmp	r0, #2
   27fc0:	blt	27ff4 <main@@Base+0x1213c>
   27fc4:	ldrb	r0, [sl]
   27fc8:	cmp	r0, #32
   27fcc:	bls	27fe0 <main@@Base+0x12128>
   27fd0:	mov	r2, sl
   27fd4:	cmp	r2, r8
   27fd8:	bne	28010 <main@@Base+0x12158>
   27fdc:	b	2834c <main@@Base+0x12494>
   27fe0:	bne	27ff4 <main@@Base+0x1213c>
   27fe4:	mov	r2, sl
   27fe8:	ldrb	r0, [r2, #1]!
   27fec:	cmp	r0, #32
   27ff0:	bhi	28008 <main@@Base+0x12150>
   27ff4:	mov	r0, r6
   27ff8:	mov	r1, sl
   27ffc:	mov	r2, r8
   28000:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28004:	mov	r2, r0
   28008:	cmp	r2, r8
   2800c:	beq	2834c <main@@Base+0x12494>
   28010:	ldrb	r0, [r2]
   28014:	cmp	r0, #44	; 0x2c
   28018:	bne	28354 <main@@Base+0x1249c>
   2801c:	add	r1, r2, #1
   28020:	sub	r0, r8, r1
   28024:	cmp	r0, #2
   28028:	blt	28058 <main@@Base+0x121a0>
   2802c:	ldrb	r0, [r1]
   28030:	cmp	r0, #32
   28034:	bls	28048 <main@@Base+0x12190>
   28038:	mov	r2, r1
   2803c:	cmp	r2, r8
   28040:	bne	28070 <main@@Base+0x121b8>
   28044:	b	28380 <main@@Base+0x124c8>
   28048:	bne	28058 <main@@Base+0x121a0>
   2804c:	ldrb	r0, [r2, #2]!
   28050:	cmp	r0, #32
   28054:	bhi	28068 <main@@Base+0x121b0>
   28058:	mov	r0, r6
   2805c:	mov	r2, r8
   28060:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28064:	mov	r2, r0
   28068:	cmp	r2, r8
   2806c:	beq	28380 <main@@Base+0x124c8>
   28070:	ldrb	r0, [r2]
   28074:	cmp	r0, #125	; 0x7d
   28078:	bne	26d0c <main@@Base+0x10e54>
   2807c:	b	2835c <main@@Base+0x124a4>
   28080:	ldr	sl, [sp, #16]
   28084:	cmp	r8, sl
   28088:	bne	28104 <main@@Base+0x1224c>
   2808c:	b	280cc <main@@Base+0x12214>
   28090:	mov	sl, r8
   28094:	cmp	r8, sl
   28098:	bne	28104 <main@@Base+0x1224c>
   2809c:	b	280cc <main@@Base+0x12214>
   280a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   280a4:	cmp	r0, #0
   280a8:	beq	2814c <main@@Base+0x12294>
   280ac:	ldr	r0, [sp, #24]
   280b0:	ldr	r2, [sp, #16]
   280b4:	mov	r1, sl
   280b8:	mov	r3, #7
   280bc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   280c0:	mov	sl, r0
   280c4:	cmp	r8, sl
   280c8:	bne	28104 <main@@Base+0x1224c>
   280cc:	add	r0, sp, #44	; 0x2c
   280d0:	ldr	r2, [sp, #16]
   280d4:	mov	r1, r8
   280d8:	str	r0, [sp]
   280dc:	ldr	r0, [sp, #24]
   280e0:	ldr	r3, [pc, #3444]	; 28e5c <main@@Base+0x12fa4>
   280e4:	add	r3, pc, r3
   280e8:	bl	24330 <main@@Base+0xe478>
   280ec:	cmp	r0, r8
   280f0:	mov	sl, r0
   280f4:	ldrne	r0, [sp, #16]
   280f8:	cmpne	sl, r0
   280fc:	beq	28e20 <main@@Base+0x12f68>
   28100:	ldr	r4, [sp, #44]	; 0x2c
   28104:	cmp	r4, #0
   28108:	bne	2811c <main@@Base+0x12264>
   2810c:	ldr	r0, [sp, #24]
   28110:	ldrb	r0, [r0, #8]
   28114:	tst	r0, #2
   28118:	beq	28140 <main@@Base+0x12288>
   2811c:	ldr	r0, [sp, #24]
   28120:	mov	r1, #8
   28124:	ldr	r0, [r0]
   28128:	mov	r2, #4
   2812c:	mov	r3, #4
   28130:	bl	3063c <flatcc_builder_table_add@@Base>
   28134:	cmp	r0, #0
   28138:	beq	28e20 <main@@Base+0x12f68>
   2813c:	str	r4, [r0]
   28140:	ldr	r8, [sp, #16]
   28144:	ldr	r6, [sp, #24]
   28148:	b	27fb8 <main@@Base+0x12100>
   2814c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   28150:	str	r4, [sp, #44]	; 0x2c
   28154:	cmp	r8, sl
   28158:	bne	28104 <main@@Base+0x1224c>
   2815c:	b	280cc <main@@Base+0x12214>
   28160:	bne	28170 <main@@Base+0x122b8>
   28164:	ldrb	r0, [r9, #2]!
   28168:	cmp	r0, #32
   2816c:	bhi	28180 <main@@Base+0x122c8>
   28170:	mov	r0, r6
   28174:	mov	r2, r8
   28178:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2817c:	mov	r9, r0
   28180:	mov	ip, r4
   28184:	cmp	r4, r9
   28188:	beq	281d8 <main@@Base+0x12320>
   2818c:	ldr	r0, [r6]
   28190:	mov	r1, #2
   28194:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   28198:	cmp	r0, #0
   2819c:	bne	28e3c <main@@Base+0x12f84>
   281a0:	cmp	r9, r8
   281a4:	beq	282b8 <main@@Base+0x12400>
   281a8:	ldrb	r0, [r9]
   281ac:	cmp	r0, #123	; 0x7b
   281b0:	bne	282b8 <main@@Base+0x12400>
   281b4:	add	r1, r9, #1
   281b8:	sub	r0, r8, r1
   281bc:	cmp	r0, #2
   281c0:	blt	2839c <main@@Base+0x124e4>
   281c4:	ldrb	r0, [r1]
   281c8:	cmp	r0, #32
   281cc:	bls	2838c <main@@Base+0x124d4>
   281d0:	mov	r9, r1
   281d4:	b	283ac <main@@Base+0x124f4>
   281d8:	mov	r0, r6
   281dc:	mov	r1, ip
   281e0:	mov	r2, r8
   281e4:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   281e8:	mov	r9, r0
   281ec:	sub	r0, r8, r9
   281f0:	cmp	r0, #2
   281f4:	blt	28228 <main@@Base+0x12370>
   281f8:	ldrb	r0, [r9]
   281fc:	cmp	r0, #32
   28200:	bls	28214 <main@@Base+0x1235c>
   28204:	mov	r2, r9
   28208:	cmp	r2, r8
   2820c:	bne	28244 <main@@Base+0x1238c>
   28210:	b	28d94 <main@@Base+0x12edc>
   28214:	bne	28228 <main@@Base+0x12370>
   28218:	mov	r2, r9
   2821c:	ldrb	r0, [r2, #1]!
   28220:	cmp	r0, #32
   28224:	bhi	2823c <main@@Base+0x12384>
   28228:	mov	r0, r6
   2822c:	mov	r1, r9
   28230:	mov	r2, r8
   28234:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28238:	mov	r2, r0
   2823c:	cmp	r2, r8
   28240:	beq	28d94 <main@@Base+0x12edc>
   28244:	ldrb	r0, [r2]
   28248:	ldr	r4, [sp, #20]
   2824c:	cmp	r0, #44	; 0x2c
   28250:	bne	28da0 <main@@Base+0x12ee8>
   28254:	add	r1, r2, #1
   28258:	sub	r0, r8, r1
   2825c:	cmp	r0, #2
   28260:	blt	28290 <main@@Base+0x123d8>
   28264:	ldrb	r0, [r1]
   28268:	cmp	r0, #32
   2826c:	bls	28280 <main@@Base+0x123c8>
   28270:	mov	r2, r1
   28274:	cmp	r2, r8
   28278:	bne	282a8 <main@@Base+0x123f0>
   2827c:	b	28dcc <main@@Base+0x12f14>
   28280:	bne	28290 <main@@Base+0x123d8>
   28284:	ldrb	r0, [r2, #2]!
   28288:	cmp	r0, #32
   2828c:	bhi	282a0 <main@@Base+0x123e8>
   28290:	mov	r0, r6
   28294:	mov	r2, r8
   28298:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2829c:	mov	r2, r0
   282a0:	cmp	r2, r8
   282a4:	beq	28dcc <main@@Base+0x12f14>
   282a8:	ldrb	r0, [r2]
   282ac:	cmp	r0, #125	; 0x7d
   282b0:	bne	25da4 <main@@Base+0xfeec>
   282b4:	b	28da8 <main@@Base+0x12ef0>
   282b8:	mov	r0, r6
   282bc:	mov	r1, r9
   282c0:	mov	r2, r8
   282c4:	mov	r3, #21
   282c8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   282cc:	mov	r9, r0
   282d0:	ldr	r0, [r6, #20]
   282d4:	cmp	r0, #0
   282d8:	bne	28e3c <main@@Base+0x12f84>
   282dc:	ldr	r0, [r6]
   282e0:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   282e4:	cmp	r0, #0
   282e8:	beq	28e3c <main@@Base+0x12f84>
   282ec:	mov	r7, r0
   282f0:	ldr	r0, [r6]
   282f4:	mov	r1, #2
   282f8:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   282fc:	cmp	r0, #0
   28300:	beq	28e10 <main@@Base+0x12f58>
   28304:	str	r7, [r0]
   28308:	b	281ec <main@@Base+0x12334>
   2830c:	mov	r9, r8
   28310:	b	262a0 <main@@Base+0x103e8>
   28314:	cmp	r0, #125	; 0x7d
   28318:	bne	28c5c <main@@Base+0x12da4>
   2831c:	add	r1, r2, #1
   28320:	sub	r0, r8, r1
   28324:	cmp	r0, #2
   28328:	blt	28cfc <main@@Base+0x12e44>
   2832c:	ldrb	r0, [r1]
   28330:	cmp	r0, #32
   28334:	bls	28ce8 <main@@Base+0x12e30>
   28338:	mov	r9, r1
   2833c:	b	262a0 <main@@Base+0x103e8>
   28340:	mov	r0, r6
   28344:	mov	r1, r8
   28348:	b	28c64 <main@@Base+0x12dac>
   2834c:	mov	sl, r8
   28350:	b	263b8 <main@@Base+0x10500>
   28354:	cmp	r0, #125	; 0x7d
   28358:	bne	28d0c <main@@Base+0x12e54>
   2835c:	add	r1, r2, #1
   28360:	sub	r0, r8, r1
   28364:	cmp	r0, #2
   28368:	blt	28d34 <main@@Base+0x12e7c>
   2836c:	ldrb	r0, [r1]
   28370:	cmp	r0, #32
   28374:	bls	28d20 <main@@Base+0x12e68>
   28378:	mov	sl, r1
   2837c:	b	263b8 <main@@Base+0x10500>
   28380:	mov	r0, r6
   28384:	mov	r1, r8
   28388:	b	28d14 <main@@Base+0x12e5c>
   2838c:	bne	2839c <main@@Base+0x124e4>
   28390:	ldrb	r0, [r9, #2]!
   28394:	cmp	r0, #32
   28398:	bhi	283ac <main@@Base+0x124f4>
   2839c:	mov	r0, r6
   283a0:	mov	r2, r8
   283a4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   283a8:	mov	r9, r0
   283ac:	cmp	r9, r8
   283b0:	mov	r2, r8
   283b4:	beq	283f8 <main@@Base+0x12540>
   283b8:	ldrb	r0, [r9]
   283bc:	cmp	r0, #125	; 0x7d
   283c0:	bne	283f4 <main@@Base+0x1253c>
   283c4:	add	r1, r9, #1
   283c8:	sub	r0, r8, r1
   283cc:	cmp	r0, #2
   283d0:	blt	28d84 <main@@Base+0x12ecc>
   283d4:	ldrb	r0, [r1]
   283d8:	cmp	r0, #32
   283dc:	bhi	28cdc <main@@Base+0x12e24>
   283e0:	bne	28d84 <main@@Base+0x12ecc>
   283e4:	ldrb	r0, [r9, #2]!
   283e8:	cmp	r0, #32
   283ec:	bhi	282d0 <main@@Base+0x12418>
   283f0:	b	28d84 <main@@Base+0x12ecc>
   283f4:	mov	r2, r9
   283f8:	cmp	r2, r8
   283fc:	mov	sl, r8
   28400:	beq	28430 <main@@Base+0x12578>
   28404:	ldrb	r0, [r2]
   28408:	cmp	r0, #34	; 0x22
   2840c:	bne	28418 <main@@Base+0x12560>
   28410:	add	sl, r2, #1
   28414:	b	28430 <main@@Base+0x12578>
   28418:	mov	r1, r2
   2841c:	mov	r0, r6
   28420:	mov	r2, r8
   28424:	mov	r3, #5
   28428:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2842c:	mov	sl, r0
   28430:	sub	r0, r8, sl
   28434:	mov	r1, #8
   28438:	cmp	r0, #8
   2843c:	movcs	r0, r1
   28440:	sub	r1, r0, #1
   28444:	cmp	r1, #7
   28448:	bhi	286e0 <main@@Base+0x12828>
   2844c:	add	r5, pc, #36	; 0x24
   28450:	mov	r0, #0
   28454:	mov	ip, #0
   28458:	mov	lr, #0
   2845c:	mov	r2, #0
   28460:	mov	r3, #0
   28464:	mov	r6, #0
   28468:	mov	r4, #0
   2846c:	mov	r7, #0
   28470:	ldr	r1, [r5, r1, lsl #2]
   28474:	add	pc, r5, r1
   28478:	andeq	r0, r0, r4, rrx
   2847c:	andeq	r0, r0, ip, asr r0
   28480:	andeq	r0, r0, r4, asr r0
   28484:	andeq	r0, r0, ip, asr #32
   28488:	andeq	r0, r0, r0, asr #32
   2848c:	andeq	r0, r0, r4, lsr r0
   28490:	andeq	r0, r0, r4, lsr #32
   28494:	andeq	r0, r0, r0, lsr #32
   28498:	ldrb	ip, [sl, #7]
   2849c:	ldrb	r1, [sl, #6]
   284a0:	mov	lr, r0
   284a4:	orr	r1, ip, r1, lsl #8
   284a8:	mov	r0, r1
   284ac:	ldrb	r1, [sl, #5]
   284b0:	mov	r2, lr
   284b4:	orr	r0, r0, r1, lsl #16
   284b8:	ldrb	r1, [sl, #4]
   284bc:	mov	r3, r2
   284c0:	orr	r0, r0, r1, lsl #24
   284c4:	ldrb	r1, [sl, #3]
   284c8:	orr	r6, r1, r3
   284cc:	ldrb	r1, [sl, #2]
   284d0:	orr	r4, r6, r1, lsl #8
   284d4:	ldrb	r1, [sl, #1]
   284d8:	orr	r7, r4, r1, lsl #16
   284dc:	movw	r1, #25186	; 0x6262
   284e0:	movw	r2, #24929	; 0x6161
   284e4:	ldr	r6, [sp, #24]
   284e8:	movt	r1, #24418	; 0x5f62
   284ec:	movt	r2, #24929	; 0x6161
   284f0:	eor	r0, r0, r1
   284f4:	ldrb	r1, [sl]
   284f8:	orr	r1, r7, r1, lsl #24
   284fc:	eor	r1, r1, r2
   28500:	orrs	r0, r0, r1
   28504:	bne	286e0 <main@@Base+0x12828>
   28508:	mov	r0, r8
   2850c:	add	r8, sl, #8
   28510:	mov	r1, #8
   28514:	sub	lr, r0, r8
   28518:	cmp	lr, #8
   2851c:	movcc	r1, lr
   28520:	sub	r2, r1, #1
   28524:	cmp	r2, #7
   28528:	bhi	28754 <main@@Base+0x1289c>
   2852c:	add	r0, pc, #36	; 0x24
   28530:	mov	r1, #0
   28534:	mov	ip, #0
   28538:	mov	r9, #0
   2853c:	mov	r6, #0
   28540:	mov	r3, #0
   28544:	mov	r5, #0
   28548:	mov	r7, #0
   2854c:	ldr	r4, [r0, r2, lsl #2]
   28550:	mov	r2, #0
   28554:	add	pc, r0, r4
   28558:	andeq	r0, r0, r8, rrx
   2855c:	andeq	r0, r0, r0, rrx
   28560:	andeq	r0, r0, r8, asr r0
   28564:	andeq	r0, r0, r0, asr r0
   28568:	andeq	r0, r0, r4, asr #32
   2856c:	andeq	r0, r0, r8, lsr r0
   28570:	andeq	r0, r0, r8, lsr #32
   28574:	andeq	r0, r0, r4, lsr #32
   28578:	andeq	r4, r3, r8, asr #25
   2857c:	ldrb	ip, [sl, #15]
   28580:	ldrb	r0, [sl, #14]
   28584:	mov	r9, r1
   28588:	orr	r0, ip, r0, lsl #8
   2858c:	mov	r1, r0
   28590:	ldrb	r0, [sl, #13]
   28594:	mov	r6, r9
   28598:	orr	r1, r1, r0, lsl #16
   2859c:	ldrb	r0, [sl, #12]
   285a0:	mov	r3, r6
   285a4:	orr	r1, r1, r0, lsl #24
   285a8:	ldrb	r0, [sl, #11]
   285ac:	orr	r5, r0, r3
   285b0:	ldrb	r0, [sl, #10]
   285b4:	orr	r2, r5, r0, lsl #8
   285b8:	ldrb	r0, [sl, #9]
   285bc:	orr	r7, r2, r0, lsl #16
   285c0:	ldrb	r2, [r8]
   285c4:	movw	r0, #29791	; 0x745f
   285c8:	movw	r3, #29556	; 0x7374
   285cc:	movt	r0, #24946	; 0x6172
   285d0:	movt	r3, #25183	; 0x625f
   285d4:	eor	r0, r1, r0
   285d8:	orr	r2, r7, r2, lsl #24
   285dc:	eor	r2, r2, r3
   285e0:	orrs	r0, r0, r2
   285e4:	bne	286ec <main@@Base+0x12834>
   285e8:	ldr	r0, [sp, #16]
   285ec:	add	r8, sl, #16
   285f0:	mov	r1, #8
   285f4:	sub	r0, r0, r8
   285f8:	cmp	r0, #8
   285fc:	movcc	r1, r0
   28600:	sub	r2, r1, #1
   28604:	cmp	r2, #7
   28608:	bhi	28750 <main@@Base+0x12898>
   2860c:	add	r5, pc, #24
   28610:	mov	r1, #0
   28614:	mov	r3, #0
   28618:	mov	r6, #0
   2861c:	mov	r7, #0
   28620:	ldr	r4, [r5, r2, lsl #2]
   28624:	mov	r2, #0
   28628:	add	pc, r5, r4
   2862c:	andeq	r0, r0, r4, asr #32
   28630:	andeq	r0, r0, ip, lsr r0
   28634:	andeq	r0, r0, r4, lsr r0
   28638:	andeq	r0, r0, r8, lsr #32
   2863c:	andeq	r0, r0, r0, lsr #32
   28640:	andeq	r0, r0, r0, lsr #32
   28644:	andeq	r0, r0, r0, lsr #32
   28648:	andeq	r0, r0, r0, lsr #32
   2864c:	ldrb	r2, [sl, #20]
   28650:	lsl	r2, r2, #24
   28654:	ldrb	r3, [sl, #19]
   28658:	orr	r3, r3, r1
   2865c:	mov	r1, r2
   28660:	ldrb	r2, [sl, #18]
   28664:	orr	r6, r3, r2, lsl #8
   28668:	ldrb	r2, [sl, #17]
   2866c:	orr	r7, r6, r2, lsl #16
   28670:	ldrb	r2, [r8]
   28674:	movw	r3, #25968	; 0x6570
   28678:	and	r1, r1, #-16777216	; 0xff000000
   2867c:	movt	r3, #29556	; 0x7374
   28680:	eor	r1, r1, #1929379840	; 0x73000000
   28684:	orr	r2, r7, r2, lsl #24
   28688:	eor	r2, r2, r3
   2868c:	orrs	r1, r1, r2
   28690:	bne	28750 <main@@Base+0x12898>
   28694:	ldr	r6, [sp, #24]
   28698:	cmp	r0, #6
   2869c:	blt	28754 <main@@Base+0x1289c>
   286a0:	ldrb	r0, [sl, #21]
   286a4:	cmp	r0, #34	; 0x22
   286a8:	bne	28754 <main@@Base+0x1289c>
   286ac:	ldr	r4, [sp, #16]
   286b0:	add	r1, sl, #22
   286b4:	sub	r0, r4, r1
   286b8:	cmp	r0, #2
   286bc:	blt	288d8 <main@@Base+0x12a20>
   286c0:	ldrb	r0, [r1]
   286c4:	cmp	r0, #32
   286c8:	bls	288c4 <main@@Base+0x12a0c>
   286cc:	ldr	r4, [sp, #16]
   286d0:	mov	sl, r1
   286d4:	cmp	sl, r4
   286d8:	bne	288f0 <main@@Base+0x12a38>
   286dc:	b	28930 <main@@Base+0x12a78>
   286e0:	mov	r0, r6
   286e4:	mov	r1, sl
   286e8:	b	28760 <main@@Base+0x128a8>
   286ec:	bic	r0, r1, #255	; 0xff
   286f0:	movw	r1, #29440	; 0x7300
   286f4:	ldr	r6, [sp, #24]
   286f8:	movt	r1, #25968	; 0x6570
   286fc:	eor	r0, r0, r1
   28700:	orrs	r0, r0, r2
   28704:	bne	28754 <main@@Base+0x1289c>
   28708:	cmp	lr, #8
   2870c:	blt	28754 <main@@Base+0x1289c>
   28710:	ldrb	r0, [sl, #15]
   28714:	cmp	r0, #34	; 0x22
   28718:	bne	28754 <main@@Base+0x1289c>
   2871c:	ldr	r4, [sp, #16]
   28720:	add	r1, sl, #16
   28724:	sub	r0, r4, r1
   28728:	cmp	r0, #2
   2872c:	blt	28850 <main@@Base+0x12998>
   28730:	ldrb	r0, [r1]
   28734:	cmp	r0, #32
   28738:	bls	2883c <main@@Base+0x12984>
   2873c:	ldr	r4, [sp, #16]
   28740:	mov	sl, r1
   28744:	cmp	sl, r4
   28748:	bne	28868 <main@@Base+0x129b0>
   2874c:	b	288a8 <main@@Base+0x129f0>
   28750:	ldr	r6, [sp, #24]
   28754:	mov	r1, r8
   28758:	ldr	r8, [sp, #16]
   2875c:	mov	r0, r6
   28760:	mov	r2, r8
   28764:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   28768:	mov	r9, r0
   2876c:	movw	sl, #0
   28770:	sub	r0, r8, r9
   28774:	movt	sl, #26418	; 0x6732
   28778:	cmp	r0, #2
   2877c:	blt	287b0 <main@@Base+0x128f8>
   28780:	ldrb	r0, [r9]
   28784:	cmp	r0, #32
   28788:	bls	2879c <main@@Base+0x128e4>
   2878c:	mov	r2, r9
   28790:	cmp	r2, r8
   28794:	bne	287cc <main@@Base+0x12914>
   28798:	b	28c70 <main@@Base+0x12db8>
   2879c:	bne	287b0 <main@@Base+0x128f8>
   287a0:	mov	r2, r9
   287a4:	ldrb	r0, [r2, #1]!
   287a8:	cmp	r0, #32
   287ac:	bhi	287c4 <main@@Base+0x1290c>
   287b0:	mov	r0, r6
   287b4:	mov	r1, r9
   287b8:	mov	r2, r8
   287bc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   287c0:	mov	r2, r0
   287c4:	cmp	r2, r8
   287c8:	beq	28c70 <main@@Base+0x12db8>
   287cc:	ldrb	r0, [r2]
   287d0:	cmp	r0, #44	; 0x2c
   287d4:	bne	28c78 <main@@Base+0x12dc0>
   287d8:	add	r1, r2, #1
   287dc:	sub	r0, r8, r1
   287e0:	cmp	r0, #2
   287e4:	blt	28814 <main@@Base+0x1295c>
   287e8:	ldrb	r0, [r1]
   287ec:	cmp	r0, #32
   287f0:	bls	28804 <main@@Base+0x1294c>
   287f4:	mov	r2, r1
   287f8:	cmp	r2, r8
   287fc:	bne	2882c <main@@Base+0x12974>
   28800:	b	28cb4 <main@@Base+0x12dfc>
   28804:	bne	28814 <main@@Base+0x1295c>
   28808:	ldrb	r0, [r2, #2]!
   2880c:	cmp	r0, #32
   28810:	bhi	28824 <main@@Base+0x1296c>
   28814:	mov	r0, r6
   28818:	mov	r2, r8
   2881c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28820:	mov	r2, r0
   28824:	cmp	r2, r8
   28828:	beq	28cb4 <main@@Base+0x12dfc>
   2882c:	ldrb	r0, [r2]
   28830:	cmp	r0, #125	; 0x7d
   28834:	bne	283f8 <main@@Base+0x12540>
   28838:	b	28cc0 <main@@Base+0x12e08>
   2883c:	ldr	r4, [sp, #16]
   28840:	bne	28850 <main@@Base+0x12998>
   28844:	ldrb	r0, [sl, #17]!
   28848:	cmp	r0, #32
   2884c:	bhi	28860 <main@@Base+0x129a8>
   28850:	mov	r0, r6
   28854:	mov	r2, r4
   28858:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2885c:	mov	sl, r0
   28860:	cmp	sl, r4
   28864:	beq	288a8 <main@@Base+0x129f0>
   28868:	ldrb	r0, [sl]
   2886c:	cmp	r0, #58	; 0x3a
   28870:	bne	288a8 <main@@Base+0x129f0>
   28874:	ldr	r0, [sp, #16]
   28878:	add	r1, sl, #1
   2887c:	sub	r0, r0, r1
   28880:	cmp	r0, #2
   28884:	blt	2895c <main@@Base+0x12aa4>
   28888:	ldrb	r0, [r1]
   2888c:	cmp	r0, #32
   28890:	bls	28948 <main@@Base+0x12a90>
   28894:	ldr	r6, [sp, #24]
   28898:	mov	sl, r1
   2889c:	cmp	r8, sl
   288a0:	bne	28974 <main@@Base+0x12abc>
   288a4:	b	28754 <main@@Base+0x1289c>
   288a8:	ldr	r2, [sp, #16]
   288ac:	mov	r0, r6
   288b0:	mov	r1, sl
   288b4:	mov	r3, #4
   288b8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   288bc:	b	28968 <main@@Base+0x12ab0>
   288c0:	andeq	r4, r3, r0, ror #18
   288c4:	ldr	r4, [sp, #16]
   288c8:	bne	288d8 <main@@Base+0x12a20>
   288cc:	ldrb	r0, [sl, #23]!
   288d0:	cmp	r0, #32
   288d4:	bhi	288e8 <main@@Base+0x12a30>
   288d8:	mov	r0, r6
   288dc:	mov	r2, r4
   288e0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   288e4:	mov	sl, r0
   288e8:	cmp	sl, r4
   288ec:	beq	28930 <main@@Base+0x12a78>
   288f0:	ldrb	r0, [sl]
   288f4:	cmp	r0, #58	; 0x3a
   288f8:	bne	28930 <main@@Base+0x12a78>
   288fc:	ldr	r0, [sp, #16]
   28900:	add	r1, sl, #1
   28904:	sub	r0, r0, r1
   28908:	cmp	r0, #2
   2890c:	blt	28b08 <main@@Base+0x12c50>
   28910:	ldrb	r0, [r1]
   28914:	cmp	r0, #32
   28918:	bls	28af4 <main@@Base+0x12c3c>
   2891c:	ldr	r6, [sp, #24]
   28920:	mov	sl, r1
   28924:	cmp	r8, sl
   28928:	bne	28b20 <main@@Base+0x12c68>
   2892c:	b	28754 <main@@Base+0x1289c>
   28930:	ldr	r2, [sp, #16]
   28934:	mov	r0, r6
   28938:	mov	r1, sl
   2893c:	mov	r3, #4
   28940:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   28944:	b	28b14 <main@@Base+0x12c5c>
   28948:	ldr	r6, [sp, #24]
   2894c:	bne	2895c <main@@Base+0x12aa4>
   28950:	ldrb	r0, [sl, #2]!
   28954:	cmp	r0, #32
   28958:	bhi	2896c <main@@Base+0x12ab4>
   2895c:	ldr	r2, [sp, #16]
   28960:	mov	r0, r6
   28964:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28968:	mov	sl, r0
   2896c:	cmp	r8, sl
   28970:	beq	28754 <main@@Base+0x1289c>
   28974:	ldr	r2, [sp, #16]
   28978:	mov	r6, #0
   2897c:	str	r6, [fp, #-36]	; 0xffffffdc
   28980:	str	r6, [fp, #-40]	; 0xffffffd8
   28984:	str	r6, [sp, #36]	; 0x24
   28988:	str	r6, [sp, #32]
   2898c:	str	r6, [sp, #44]	; 0x2c
   28990:	cmp	sl, r2
   28994:	beq	289f0 <main@@Base+0x12b38>
   28998:	sub	r0, fp, #40	; 0x28
   2899c:	mov	r1, sl
   289a0:	add	r3, sp, #44	; 0x2c
   289a4:	str	r0, [sp]
   289a8:	ldr	r0, [sp, #24]
   289ac:	bl	362a4 <flatcc_json_parser_integer@@Base>
   289b0:	cmp	r0, sl
   289b4:	beq	28a04 <main@@Base+0x12b4c>
   289b8:	mov	r9, r0
   289bc:	ldr	r0, [sp, #44]	; 0x2c
   289c0:	ldr	r6, [fp, #-40]	; 0xffffffd8
   289c4:	ldr	r5, [fp, #-36]	; 0xffffffdc
   289c8:	cmp	r0, #0
   289cc:	beq	28a1c <main@@Base+0x12b64>
   289d0:	subs	r0, r6, #1
   289d4:	sbcs	r0, r5, #-2147483648	; 0x80000000
   289d8:	bcc	28a54 <main@@Base+0x12b9c>
   289dc:	ldr	r0, [sp, #24]
   289e0:	ldr	r2, [sp, #16]
   289e4:	mov	r1, r9
   289e8:	mov	r3, #8
   289ec:	b	28a34 <main@@Base+0x12b7c>
   289f0:	mov	r5, #0
   289f4:	mov	r9, r2
   289f8:	cmp	sl, r9
   289fc:	bne	28aa8 <main@@Base+0x12bf0>
   28a00:	b	28a6c <main@@Base+0x12bb4>
   28a04:	mov	r6, #0
   28a08:	mov	r5, #0
   28a0c:	mov	r9, sl
   28a10:	cmp	sl, r9
   28a14:	bne	28aa8 <main@@Base+0x12bf0>
   28a18:	b	28a6c <main@@Base+0x12bb4>
   28a1c:	cmn	r5, #1
   28a20:	bgt	28a5c <main@@Base+0x12ba4>
   28a24:	ldr	r0, [sp, #24]
   28a28:	ldr	r2, [sp, #16]
   28a2c:	mov	r1, r9
   28a30:	mov	r3, #7
   28a34:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   28a38:	mov	r9, r0
   28a3c:	mov	r6, #0
   28a40:	mov	r5, #0
   28a44:	cmp	sl, r9
   28a48:	bne	28aa8 <main@@Base+0x12bf0>
   28a4c:	b	28a6c <main@@Base+0x12bb4>
   28a50:	andeq	r4, r3, r4, lsl #16
   28a54:	rsbs	r6, r6, #0
   28a58:	rsc	r5, r5, #0
   28a5c:	str	r6, [sp, #32]
   28a60:	str	r5, [sp, #36]	; 0x24
   28a64:	cmp	sl, r9
   28a68:	bne	28aa8 <main@@Base+0x12bf0>
   28a6c:	add	r0, sp, #32
   28a70:	ldr	r2, [sp, #16]
   28a74:	mov	r1, sl
   28a78:	str	r0, [sp]
   28a7c:	ldr	r0, [sp, #24]
   28a80:	ldr	r3, [pc, #988]	; 28e64 <main@@Base+0x12fac>
   28a84:	add	r3, pc, r3
   28a88:	bl	24138 <main@@Base+0xe280>
   28a8c:	cmp	r0, sl
   28a90:	mov	r9, r0
   28a94:	ldrne	r0, [sp, #16]
   28a98:	cmpne	r9, r0
   28a9c:	beq	28e34 <main@@Base+0x12f7c>
   28aa0:	ldr	r6, [sp, #32]
   28aa4:	ldr	r5, [sp, #36]	; 0x24
   28aa8:	orrs	r0, r6, r5
   28aac:	bne	28ac0 <main@@Base+0x12c08>
   28ab0:	ldr	r0, [sp, #24]
   28ab4:	ldrb	r0, [r0, #8]
   28ab8:	tst	r0, #2
   28abc:	beq	28ae8 <main@@Base+0x12c30>
   28ac0:	ldr	r0, [sp, #24]
   28ac4:	mov	r1, #0
   28ac8:	mov	r2, #8
   28acc:	mov	r3, #8
   28ad0:	ldr	r0, [r0]
   28ad4:	bl	3063c <flatcc_builder_table_add@@Base>
   28ad8:	cmp	r0, #0
   28adc:	beq	28e34 <main@@Base+0x12f7c>
   28ae0:	str	r6, [r0]
   28ae4:	str	r5, [r0, #4]
   28ae8:	ldr	r8, [sp, #16]
   28aec:	ldr	r6, [sp, #24]
   28af0:	b	2876c <main@@Base+0x128b4>
   28af4:	ldr	r6, [sp, #24]
   28af8:	bne	28b08 <main@@Base+0x12c50>
   28afc:	ldrb	r0, [sl, #2]!
   28b00:	cmp	r0, #32
   28b04:	bhi	28b18 <main@@Base+0x12c60>
   28b08:	ldr	r2, [sp, #16]
   28b0c:	mov	r0, r6
   28b10:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28b14:	mov	sl, r0
   28b18:	cmp	r8, sl
   28b1c:	beq	28754 <main@@Base+0x1289c>
   28b20:	ldr	r2, [sp, #16]
   28b24:	mov	r5, #0
   28b28:	str	r5, [fp, #-36]	; 0xffffffdc
   28b2c:	str	r5, [fp, #-40]	; 0xffffffd8
   28b30:	str	r5, [sp, #44]	; 0x2c
   28b34:	str	r5, [sp, #32]
   28b38:	cmp	sl, r2
   28b3c:	beq	28b84 <main@@Base+0x12ccc>
   28b40:	sub	r0, fp, #40	; 0x28
   28b44:	mov	r1, sl
   28b48:	add	r3, sp, #32
   28b4c:	str	r0, [sp]
   28b50:	mov	r0, r6
   28b54:	bl	362a4 <flatcc_json_parser_integer@@Base>
   28b58:	cmp	r0, sl
   28b5c:	beq	28b94 <main@@Base+0x12cdc>
   28b60:	mov	r9, r0
   28b64:	ldr	r0, [sp, #32]
   28b68:	cmp	r0, #0
   28b6c:	beq	28b9c <main@@Base+0x12ce4>
   28b70:	ldr	r6, [sp, #24]
   28b74:	ldr	r2, [sp, #16]
   28b78:	mov	r1, r9
   28b7c:	mov	r3, #8
   28b80:	b	28bb8 <main@@Base+0x12d00>
   28b84:	mov	r9, r2
   28b88:	cmp	sl, r9
   28b8c:	bne	28c20 <main@@Base+0x12d68>
   28b90:	b	28be4 <main@@Base+0x12d2c>
   28b94:	mov	r9, sl
   28b98:	b	28bd8 <main@@Base+0x12d20>
   28b9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   28ba0:	cmp	r0, #0
   28ba4:	beq	28bd0 <main@@Base+0x12d18>
   28ba8:	ldr	r6, [sp, #24]
   28bac:	ldr	r2, [sp, #16]
   28bb0:	mov	r1, r9
   28bb4:	mov	r3, #7
   28bb8:	mov	r0, r6
   28bbc:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   28bc0:	mov	r9, r0
   28bc4:	cmp	sl, r9
   28bc8:	bne	28c20 <main@@Base+0x12d68>
   28bcc:	b	28be4 <main@@Base+0x12d2c>
   28bd0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   28bd4:	str	r5, [sp, #44]	; 0x2c
   28bd8:	ldr	r6, [sp, #24]
   28bdc:	cmp	sl, r9
   28be0:	bne	28c20 <main@@Base+0x12d68>
   28be4:	add	r0, sp, #44	; 0x2c
   28be8:	ldr	r2, [sp, #16]
   28bec:	mov	r1, sl
   28bf0:	str	r0, [sp]
   28bf4:	mov	r0, r6
   28bf8:	ldr	r3, [pc, #608]	; 28e60 <main@@Base+0x12fa8>
   28bfc:	add	r3, pc, r3
   28c00:	bl	24330 <main@@Base+0xe478>
   28c04:	cmp	r0, sl
   28c08:	mov	r9, r0
   28c0c:	ldrne	r0, [sp, #16]
   28c10:	cmpne	r9, r0
   28c14:	beq	28e34 <main@@Base+0x12f7c>
   28c18:	ldr	r5, [sp, #44]	; 0x2c
   28c1c:	ldr	r6, [sp, #24]
   28c20:	cmp	r5, #0
   28c24:	bne	28c34 <main@@Base+0x12d7c>
   28c28:	ldrb	r0, [r6, #8]
   28c2c:	tst	r0, #2
   28c30:	beq	28c54 <main@@Base+0x12d9c>
   28c34:	ldr	r0, [r6]
   28c38:	mov	r1, #1
   28c3c:	mov	r2, #4
   28c40:	mov	r3, #4
   28c44:	bl	3063c <flatcc_builder_table_add@@Base>
   28c48:	cmp	r0, #0
   28c4c:	beq	28e34 <main@@Base+0x12f7c>
   28c50:	str	r5, [r0]
   28c54:	ldr	r8, [sp, #16]
   28c58:	b	2876c <main@@Base+0x128b4>
   28c5c:	mov	r0, r6
   28c60:	mov	r1, r2
   28c64:	mov	r2, r8
   28c68:	mov	r3, #10
   28c6c:	b	26298 <main@@Base+0x103e0>
   28c70:	mov	r9, r8
   28c74:	b	282d0 <main@@Base+0x12418>
   28c78:	cmp	r0, #125	; 0x7d
   28c7c:	bne	28d44 <main@@Base+0x12e8c>
   28c80:	add	r1, r2, #1
   28c84:	sub	r0, r8, r1
   28c88:	cmp	r0, #2
   28c8c:	blt	28d84 <main@@Base+0x12ecc>
   28c90:	ldrb	r0, [r1]
   28c94:	cmp	r0, #32
   28c98:	bls	28d60 <main@@Base+0x12ea8>
   28c9c:	ldr	r8, [sp, #16]
   28ca0:	ldr	r6, [sp, #24]
   28ca4:	movw	sl, #0
   28ca8:	mov	r9, r1
   28cac:	movt	sl, #26418	; 0x6732
   28cb0:	b	282d0 <main@@Base+0x12418>
   28cb4:	mov	r0, r6
   28cb8:	mov	r1, r8
   28cbc:	b	28d4c <main@@Base+0x12e94>
   28cc0:	add	r1, r2, #1
   28cc4:	sub	r0, r8, r1
   28cc8:	cmp	r0, #2
   28ccc:	blt	28d84 <main@@Base+0x12ecc>
   28cd0:	ldrb	r0, [r1]
   28cd4:	cmp	r0, #32
   28cd8:	bls	28d58 <main@@Base+0x12ea0>
   28cdc:	mov	r9, r1
   28ce0:	b	282d0 <main@@Base+0x12418>
   28ce4:	andeq	r4, r3, r8, ror #10
   28ce8:	bne	28cfc <main@@Base+0x12e44>
   28cec:	ldrb	r0, [r2, #2]!
   28cf0:	mov	r9, r2
   28cf4:	cmp	r0, #32
   28cf8:	bhi	262a0 <main@@Base+0x103e8>
   28cfc:	mov	r0, r6
   28d00:	mov	r2, r8
   28d04:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28d08:	b	2629c <main@@Base+0x103e4>
   28d0c:	mov	r0, r6
   28d10:	mov	r1, r2
   28d14:	mov	r2, r8
   28d18:	mov	r3, #10
   28d1c:	b	263b0 <main@@Base+0x104f8>
   28d20:	bne	28d34 <main@@Base+0x12e7c>
   28d24:	ldrb	r0, [r2, #2]!
   28d28:	mov	sl, r2
   28d2c:	cmp	r0, #32
   28d30:	bhi	263b8 <main@@Base+0x10500>
   28d34:	mov	r0, r6
   28d38:	mov	r2, r8
   28d3c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28d40:	b	263b4 <main@@Base+0x104fc>
   28d44:	mov	r0, r6
   28d48:	mov	r1, r2
   28d4c:	mov	r2, r8
   28d50:	mov	r3, #10
   28d54:	b	282c8 <main@@Base+0x12410>
   28d58:	beq	28d74 <main@@Base+0x12ebc>
   28d5c:	b	28d84 <main@@Base+0x12ecc>
   28d60:	ldr	r8, [sp, #16]
   28d64:	ldr	r6, [sp, #24]
   28d68:	movw	sl, #0
   28d6c:	movt	sl, #26418	; 0x6732
   28d70:	bne	28d84 <main@@Base+0x12ecc>
   28d74:	ldrb	r0, [r2, #2]!
   28d78:	mov	r9, r2
   28d7c:	cmp	r0, #32
   28d80:	bhi	282d0 <main@@Base+0x12418>
   28d84:	mov	r0, r6
   28d88:	mov	r2, r8
   28d8c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28d90:	b	282cc <main@@Base+0x12414>
   28d94:	ldr	r4, [sp, #20]
   28d98:	mov	sl, r8
   28d9c:	b	25cb4 <main@@Base+0xfdfc>
   28da0:	cmp	r0, #125	; 0x7d
   28da4:	bne	28dd8 <main@@Base+0x12f20>
   28da8:	add	r1, r2, #1
   28dac:	sub	r0, r8, r1
   28db0:	cmp	r0, #2
   28db4:	blt	28e00 <main@@Base+0x12f48>
   28db8:	ldrb	r0, [r1]
   28dbc:	cmp	r0, #32
   28dc0:	bls	28dec <main@@Base+0x12f34>
   28dc4:	mov	sl, r1
   28dc8:	b	25cb4 <main@@Base+0xfdfc>
   28dcc:	mov	r0, r6
   28dd0:	mov	r1, r8
   28dd4:	b	28de0 <main@@Base+0x12f28>
   28dd8:	mov	r0, r6
   28ddc:	mov	r1, r2
   28de0:	mov	r2, r8
   28de4:	mov	r3, #10
   28de8:	b	25cac <main@@Base+0xfdf4>
   28dec:	bne	28e00 <main@@Base+0x12f48>
   28df0:	ldrb	r0, [r2, #2]!
   28df4:	mov	sl, r2
   28df8:	cmp	r0, #32
   28dfc:	bhi	25cb4 <main@@Base+0xfdfc>
   28e00:	mov	r0, r6
   28e04:	mov	r2, r8
   28e08:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28e0c:	b	25cb0 <main@@Base+0xfdf8>
   28e10:	mov	sl, r9
   28e14:	b	25cc0 <main@@Base+0xfe08>
   28e18:	ldr	r8, [sp, #16]
   28e1c:	b	28e28 <main@@Base+0x12f70>
   28e20:	ldr	r8, [sp, #16]
   28e24:	ldr	r6, [sp, #24]
   28e28:	mov	r0, r6
   28e2c:	mov	r1, sl
   28e30:	b	28e44 <main@@Base+0x12f8c>
   28e34:	ldr	r8, [sp, #16]
   28e38:	ldr	r6, [sp, #24]
   28e3c:	mov	r0, r6
   28e40:	mov	r1, r9
   28e44:	mov	r2, r8
   28e48:	mov	r3, #33	; 0x21
   28e4c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   28e50:	mov	sl, r0
   28e54:	b	25cc0 <main@@Base+0xfe08>
   28e58:			; <UNDEFINED> instruction: 0x000343bc
   28e5c:	andeq	r4, r3, r4, lsr #3
   28e60:	muleq	r3, r8, r6
   28e64:	andeq	r3, r3, ip, lsl r8
   28e68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28e6c:	add	fp, sp, #28
   28e70:	sub	sp, sp, #44	; 0x2c
   28e74:	mov	sl, r0
   28e78:	mov	r0, #0
   28e7c:	mov	r7, r1
   28e80:	mov	r1, #10
   28e84:	mov	r4, r3
   28e88:	mov	r8, r2
   28e8c:	str	r0, [r3]
   28e90:	ldr	r0, [sl]
   28e94:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   28e98:	cmp	r0, #0
   28e9c:	beq	28ec4 <main@@Base+0x1300c>
   28ea0:	mov	r0, sl
   28ea4:	mov	r1, r7
   28ea8:	mov	r2, r8
   28eac:	mov	r3, #33	; 0x21
   28eb0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   28eb4:	mov	r7, r0
   28eb8:	mov	r0, r7
   28ebc:	sub	sp, fp, #28
   28ec0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28ec4:	sub	r0, fp, #32
   28ec8:	mov	r1, r7
   28ecc:	mov	r2, r8
   28ed0:	mov	r3, #5
   28ed4:	str	r0, [sp]
   28ed8:	mov	r0, sl
   28edc:	bl	36b24 <flatcc_json_parser_prepare_unions@@Base>
   28ee0:	cmp	r0, r8
   28ee4:	beq	28ea0 <main@@Base+0x12fe8>
   28ee8:	cmp	r7, r8
   28eec:	beq	28f20 <main@@Base+0x13068>
   28ef0:	ldrb	r0, [r7]
   28ef4:	cmp	r0, #123	; 0x7b
   28ef8:	bne	28f20 <main@@Base+0x13068>
   28efc:	add	r1, r7, #1
   28f00:	sub	r0, r8, r1
   28f04:	cmp	r0, #2
   28f08:	blt	28f84 <main@@Base+0x130cc>
   28f0c:	ldrb	r0, [r1]
   28f10:	cmp	r0, #32
   28f14:	bls	28f74 <main@@Base+0x130bc>
   28f18:	mov	r7, r1
   28f1c:	b	28f94 <main@@Base+0x130dc>
   28f20:	mov	r0, sl
   28f24:	mov	r1, r7
   28f28:	mov	r2, r8
   28f2c:	mov	r3, #21
   28f30:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   28f34:	mov	r7, r0
   28f38:	ldr	r0, [sl, #20]
   28f3c:	cmp	r0, #0
   28f40:	bne	28ea0 <main@@Base+0x12fe8>
   28f44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28f48:	mov	r0, sl
   28f4c:	mov	r1, r7
   28f50:	mov	r2, r8
   28f54:	bl	36bb4 <flatcc_json_parser_finalize_unions@@Base>
   28f58:	mov	r7, r0
   28f5c:	ldr	r0, [sl]
   28f60:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   28f64:	cmp	r0, #0
   28f68:	str	r0, [r4]
   28f6c:	bne	28eb8 <main@@Base+0x13000>
   28f70:	b	28ea0 <main@@Base+0x12fe8>
   28f74:	bne	28f84 <main@@Base+0x130cc>
   28f78:	ldrb	r0, [r7, #2]!
   28f7c:	cmp	r0, #32
   28f80:	bhi	28f94 <main@@Base+0x130dc>
   28f84:	mov	r0, sl
   28f88:	mov	r2, r8
   28f8c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   28f90:	mov	r7, r0
   28f94:	cmp	r7, r8
   28f98:	mov	r3, r8
   28f9c:	beq	28fe0 <main@@Base+0x13128>
   28fa0:	ldrb	r0, [r7]
   28fa4:	cmp	r0, #125	; 0x7d
   28fa8:	bne	28fdc <main@@Base+0x13124>
   28fac:	add	r1, r7, #1
   28fb0:	sub	r0, r8, r1
   28fb4:	cmp	r0, #2
   28fb8:	blt	2a290 <main@@Base+0x143d8>
   28fbc:	ldrb	r0, [r1]
   28fc0:	cmp	r0, #32
   28fc4:	bhi	2a254 <main@@Base+0x1439c>
   28fc8:	bne	2a290 <main@@Base+0x143d8>
   28fcc:	ldrb	r0, [r7, #2]!
   28fd0:	cmp	r0, #32
   28fd4:	bhi	28f38 <main@@Base+0x13080>
   28fd8:	b	2a290 <main@@Base+0x143d8>
   28fdc:	mov	r3, r7
   28fe0:	movw	r0, #24436	; 0x5f74
   28fe4:	str	sl, [sp, #36]	; 0x24
   28fe8:	str	r4, [sp, #32]
   28fec:	movt	r0, #29299	; 0x7273
   28ff0:	add	r0, r0, #65536	; 0x10000
   28ff4:	add	r0, r0, #16777216	; 0x1000000
   28ff8:	str	r0, [sp, #24]
   28ffc:	cmp	r3, r8
   29000:	mov	r9, r8
   29004:	beq	29034 <main@@Base+0x1317c>
   29008:	ldrb	r0, [r3]
   2900c:	cmp	r0, #34	; 0x22
   29010:	bne	2901c <main@@Base+0x13164>
   29014:	add	r9, r3, #1
   29018:	b	29034 <main@@Base+0x1317c>
   2901c:	mov	r1, r3
   29020:	mov	r0, sl
   29024:	mov	r2, r8
   29028:	mov	r3, #5
   2902c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29030:	mov	r9, r0
   29034:	sub	ip, r8, r9
   29038:	mov	r0, #8
   2903c:	cmp	ip, #8
   29040:	movcc	r0, ip
   29044:	sub	r0, r0, #1
   29048:	cmp	r0, #7
   2904c:	bhi	29930 <main@@Base+0x13a78>
   29050:	add	r2, pc, #36	; 0x24
   29054:	mov	r1, #0
   29058:	mov	lr, #0
   2905c:	mov	r7, #0
   29060:	mov	r6, #0
   29064:	mov	r3, #0
   29068:	mov	r5, #0
   2906c:	mov	r4, #0
   29070:	ldr	sl, [r2, r0, lsl #2]
   29074:	mov	r0, #0
   29078:	add	pc, r2, sl
   2907c:	andeq	r0, r0, r4, rrx
   29080:	andeq	r0, r0, ip, asr r0
   29084:	andeq	r0, r0, r4, asr r0
   29088:	andeq	r0, r0, ip, asr #32
   2908c:	andeq	r0, r0, r0, asr #32
   29090:	andeq	r0, r0, r4, lsr r0
   29094:	andeq	r0, r0, r4, lsr #32
   29098:	andeq	r0, r0, r0, lsr #32
   2909c:	ldrb	lr, [r9, #7]
   290a0:	ldrb	r0, [r9, #6]
   290a4:	mov	r7, r1
   290a8:	orr	r0, lr, r0, lsl #8
   290ac:	mov	r1, r0
   290b0:	ldrb	r0, [r9, #5]
   290b4:	mov	r6, r7
   290b8:	orr	r1, r1, r0, lsl #16
   290bc:	ldrb	r0, [r9, #4]
   290c0:	mov	r3, r6
   290c4:	orr	r1, r1, r0, lsl #24
   290c8:	ldrb	r0, [r9, #3]
   290cc:	orr	r5, r0, r3
   290d0:	ldrb	r0, [r9, #2]
   290d4:	orr	r4, r5, r0, lsl #8
   290d8:	ldrb	r0, [r9, #1]
   290dc:	orr	r0, r4, r0, lsl #16
   290e0:	ldrb	r2, [r9]
   290e4:	orr	r2, r0, r2, lsl #24
   290e8:	movw	r0, #29797	; 0x7465
   290ec:	movt	r0, #24931	; 0x6163
   290f0:	subs	r0, r1, r0
   290f4:	movw	r0, #24946	; 0x6172
   290f8:	movt	r0, #25448	; 0x6368
   290fc:	sbcs	r0, r2, r0
   29100:	bcs	2925c <main@@Base+0x133a4>
   29104:	movw	r0, #29817	; 0x7479
   29108:	movw	r3, #28005	; 0x6d65
   2910c:	ldr	sl, [sp, #36]	; 0x24
   29110:	movt	r0, #28511	; 0x6f5f
   29114:	movt	r3, #25441	; 0x6361
   29118:	eor	r0, r1, r0
   2911c:	eor	r3, r2, r3
   29120:	orrs	r0, r0, r3
   29124:	beq	29564 <main@@Base+0x136ac>
   29128:	movw	r0, #28265	; 0x6e69
   2912c:	movw	r7, #29793	; 0x7461
   29130:	movt	r0, #26479	; 0x676f
   29134:	movt	r7, #24942	; 0x616e
   29138:	eor	r0, r1, r0
   2913c:	eor	r2, r2, r7
   29140:	orrs	r0, r0, r2
   29144:	bne	295ec <main@@Base+0x13734>
   29148:	add	r4, r9, #8
   2914c:	mov	r1, #8
   29150:	sub	ip, r8, r4
   29154:	cmp	ip, #8
   29158:	movcc	r1, ip
   2915c:	sub	r1, r1, #1
   29160:	cmp	r1, #7
   29164:	bhi	2a07c <main@@Base+0x141c4>
   29168:	str	r4, [sp, #28]
   2916c:	add	r0, pc, #32
   29170:	mov	r7, #0
   29174:	mov	lr, #0
   29178:	mov	r3, #0
   2917c:	mov	r6, #0
   29180:	mov	r4, #0
   29184:	mov	r5, #0
   29188:	ldr	r2, [r0, r1, lsl #2]
   2918c:	mov	r1, #0
   29190:	add	pc, r0, r2
   29194:	andeq	r0, r0, ip, asr r0
   29198:	andeq	r0, r0, r4, asr r0
   2919c:	andeq	r0, r0, ip, asr #32
   291a0:	andeq	r0, r0, r4, asr #32
   291a4:	andeq	r0, r0, r8, lsr r0
   291a8:	andeq	r0, r0, r8, lsr #32
   291ac:	andeq	r0, r0, r0, lsr #32
   291b0:	andeq	r0, r0, r0, lsr #32
   291b4:	ldrb	r0, [r9, #14]
   291b8:	lsl	lr, r0, #8
   291bc:	ldrb	r0, [r9, #13]
   291c0:	mov	r1, r7
   291c4:	orr	r0, lr, r0, lsl #16
   291c8:	mov	r7, r0
   291cc:	ldrb	r0, [r9, #12]
   291d0:	mov	r3, r1
   291d4:	orr	r7, r7, r0, lsl #24
   291d8:	ldrb	r0, [r9, #11]
   291dc:	orr	r6, r0, r3
   291e0:	ldrb	r0, [r9, #10]
   291e4:	orr	r4, r6, r0, lsl #8
   291e8:	ldrb	r0, [r9, #9]
   291ec:	orr	r5, r4, r0, lsl #16
   291f0:	ldr	r4, [sp, #28]
   291f4:	movw	r3, #25856	; 0x6500
   291f8:	bic	r2, r7, #255	; 0xff
   291fc:	movt	r3, #31088	; 0x7970
   29200:	eor	r2, r2, r3
   29204:	ldrb	r0, [r4]
   29208:	orr	r1, r5, r0, lsl #24
   2920c:	ldr	r0, [sp, #24]
   29210:	eor	r0, r1, r0
   29214:	orrs	r0, r2, r0
   29218:	bne	29744 <main@@Base+0x1388c>
   2921c:	cmp	ip, #8
   29220:	blt	2a07c <main@@Base+0x141c4>
   29224:	ldrb	r0, [r9, #15]
   29228:	cmp	r0, #34	; 0x22
   2922c:	bne	2a07c <main@@Base+0x141c4>
   29230:	add	r1, r9, #16
   29234:	sub	r0, r8, r1
   29238:	cmp	r0, #2
   2923c:	blt	29960 <main@@Base+0x13aa8>
   29240:	ldrb	r0, [r1]
   29244:	cmp	r0, #32
   29248:	bls	29950 <main@@Base+0x13a98>
   2924c:	mov	r9, r1
   29250:	cmp	r9, r8
   29254:	bne	29978 <main@@Base+0x13ac0>
   29258:	b	299b0 <main@@Base+0x13af8>
   2925c:	movw	r0, #26720	; 0x6860
   29260:	ldr	sl, [sp, #36]	; 0x24
   29264:	movt	r0, #24419	; 0x5f63
   29268:	subs	r0, r0, r1
   2926c:	movw	r0, #26990	; 0x696e
   29270:	movt	r0, #28001	; 0x6d61
   29274:	sbcs	r0, r0, r2
   29278:	bcc	293b4 <main@@Base+0x134fc>
   2927c:	movw	r0, #29797	; 0x7465
   29280:	movt	r0, #24931	; 0x6163
   29284:	eor	r0, r1, r0
   29288:	movw	r1, #24946	; 0x6172
   2928c:	movt	r1, #25448	; 0x6368
   29290:	eor	r1, r2, r1
   29294:	orrs	r0, r0, r1
   29298:	bne	29930 <main@@Base+0x13a78>
   2929c:	add	r4, r9, #8
   292a0:	mov	r1, #8
   292a4:	sub	ip, r8, r4
   292a8:	cmp	ip, #8
   292ac:	movcc	r1, ip
   292b0:	sub	r2, r1, #1
   292b4:	cmp	r2, #7
   292b8:	bhi	2a07c <main@@Base+0x141c4>
   292bc:	str	r4, [sp, #28]
   292c0:	add	r0, pc, #32
   292c4:	mov	r1, #0
   292c8:	mov	lr, #0
   292cc:	mov	r7, #0
   292d0:	mov	r3, #0
   292d4:	mov	r6, #0
   292d8:	mov	r4, #0
   292dc:	mov	r5, #0
   292e0:	ldr	r2, [r0, r2, lsl #2]
   292e4:	add	pc, r0, r2
   292e8:	andeq	r0, r0, ip, asr r0
   292ec:	andeq	r0, r0, r4, asr r0
   292f0:	andeq	r0, r0, ip, asr #32
   292f4:	andeq	r0, r0, r4, asr #32
   292f8:	andeq	r0, r0, r8, lsr r0
   292fc:	andeq	r0, r0, r8, lsr #32
   29300:	andeq	r0, r0, r0, lsr #32
   29304:	andeq	r0, r0, r0, lsr #32
   29308:	ldrb	r0, [r9, #14]
   2930c:	lsl	lr, r0, #8
   29310:	ldrb	r0, [r9, #13]
   29314:	mov	r7, r1
   29318:	orr	r0, lr, r0, lsl #16
   2931c:	mov	r1, r0
   29320:	ldrb	r0, [r9, #12]
   29324:	mov	r3, r7
   29328:	orr	r1, r1, r0, lsl #24
   2932c:	ldrb	r0, [r9, #11]
   29330:	orr	r6, r0, r3
   29334:	ldrb	r0, [r9, #10]
   29338:	orr	r4, r6, r0, lsl #8
   2933c:	ldrb	r0, [r9, #9]
   29340:	orr	r5, r4, r0, lsl #16
   29344:	ldr	r4, [sp, #28]
   29348:	bic	r0, r1, #255	; 0xff
   2934c:	movw	r1, #25856	; 0x6500
   29350:	movw	r2, #24436	; 0x5f74
   29354:	movt	r1, #31088	; 0x7970
   29358:	movt	r2, #29299	; 0x7273
   2935c:	eor	r0, r0, r1
   29360:	ldrb	r1, [r4]
   29364:	orr	r1, r5, r1, lsl #24
   29368:	eor	r2, r1, r2
   2936c:	orrs	r0, r0, r2
   29370:	bne	29798 <main@@Base+0x138e0>
   29374:	cmp	ip, #8
   29378:	blt	2a07c <main@@Base+0x141c4>
   2937c:	ldrb	r0, [r9, #15]
   29380:	cmp	r0, #34	; 0x22
   29384:	bne	2a07c <main@@Base+0x141c4>
   29388:	add	r1, r9, #16
   2938c:	sub	r0, r8, r1
   29390:	cmp	r0, #2
   29394:	blt	29a58 <main@@Base+0x13ba0>
   29398:	ldrb	r0, [r1]
   2939c:	cmp	r0, #32
   293a0:	bls	29a48 <main@@Base+0x13b90>
   293a4:	mov	r9, r1
   293a8:	cmp	r9, r8
   293ac:	bne	29a70 <main@@Base+0x13bb8>
   293b0:	b	29aa8 <main@@Base+0x13bf0>
   293b4:	movw	r0, #26979	; 0x6963
   293b8:	movw	r3, #25701	; 0x6465
   293bc:	movt	r0, #24427	; 0x5f6b
   293c0:	movt	r3, #29545	; 0x7369
   293c4:	eor	r0, r1, r0
   293c8:	eor	r3, r2, r3
   293cc:	orrs	r0, r0, r3
   293d0:	beq	29644 <main@@Base+0x1378c>
   293d4:	movw	r0, #26721	; 0x6861
   293d8:	movt	r0, #24419	; 0x5f63
   293dc:	eor	r0, r1, r0
   293e0:	movw	r1, #26990	; 0x696e
   293e4:	movt	r1, #28001	; 0x6d61
   293e8:	eor	r1, r2, r1
   293ec:	orrs	r0, r0, r1
   293f0:	bne	29930 <main@@Base+0x13a78>
   293f4:	add	r4, r9, #8
   293f8:	mov	r1, #8
   293fc:	sub	lr, r8, r4
   29400:	cmp	lr, #8
   29404:	movcc	r1, lr
   29408:	sub	r2, r1, #1
   2940c:	cmp	r2, #7
   29410:	bhi	2a07c <main@@Base+0x141c4>
   29414:	str	r4, [sp, #28]
   29418:	add	r0, pc, #36	; 0x24
   2941c:	mov	r1, #0
   29420:	mov	ip, #0
   29424:	mov	sl, #0
   29428:	mov	r6, #0
   2942c:	mov	r3, #0
   29430:	mov	r5, #0
   29434:	mov	r4, #0
   29438:	ldr	r7, [r0, r2, lsl #2]
   2943c:	mov	r2, #0
   29440:	add	pc, r0, r7
   29444:	andeq	r0, r0, r4, rrx
   29448:	andeq	r0, r0, ip, asr r0
   2944c:	andeq	r0, r0, r4, asr r0
   29450:	andeq	r0, r0, ip, asr #32
   29454:	andeq	r0, r0, r0, asr #32
   29458:	andeq	r0, r0, r4, lsr r0
   2945c:	andeq	r0, r0, r4, lsr #32
   29460:	andeq	r0, r0, r0, lsr #32
   29464:	ldrb	ip, [r9, #15]
   29468:	ldrb	r0, [r9, #14]
   2946c:	mov	sl, r1
   29470:	orr	r0, ip, r0, lsl #8
   29474:	mov	r1, r0
   29478:	ldrb	r0, [r9, #13]
   2947c:	mov	r6, sl
   29480:	orr	r1, r1, r0, lsl #16
   29484:	ldrb	r0, [r9, #12]
   29488:	mov	r3, r6
   2948c:	orr	r1, r1, r0, lsl #24
   29490:	ldrb	r0, [r9, #11]
   29494:	orr	r5, r0, r3
   29498:	ldrb	r0, [r9, #10]
   2949c:	orr	r4, r5, r0, lsl #8
   294a0:	ldrb	r0, [r9, #9]
   294a4:	orr	r2, r4, r0, lsl #16
   294a8:	ldr	r4, [sp, #28]
   294ac:	movw	r0, #24436	; 0x5f74
   294b0:	movt	r0, #25970	; 0x6572
   294b4:	eor	r0, r1, r0
   294b8:	ldrb	r3, [r4]
   294bc:	orr	r2, r2, r3, lsl #24
   294c0:	movw	r3, #25460	; 0x6374
   294c4:	movt	r3, #29281	; 0x7261
   294c8:	eor	r3, r2, r3
   294cc:	orrs	r0, r0, r3
   294d0:	bne	297ec <main@@Base+0x13934>
   294d4:	add	r5, r9, #16
   294d8:	ldr	sl, [sp, #36]	; 0x24
   294dc:	mov	r2, #8
   294e0:	sub	r0, r8, r5
   294e4:	cmp	r0, #8
   294e8:	movcc	r2, r0
   294ec:	sub	r1, r2, #3
   294f0:	cmp	r1, #6
   294f4:	bcs	298b4 <main@@Base+0x139fc>
   294f8:	ldrb	r1, [r9, #18]
   294fc:	lsl	r1, r1, #8
   29500:	ldrb	r2, [r9, #17]
   29504:	orr	r1, r1, r2, lsl #16
   29508:	ldrb	r2, [r5]
   2950c:	bic	r1, r1, #255	; 0xff
   29510:	orr	r1, r1, r2, lsl #24
   29514:	movw	r2, #25856	; 0x6500
   29518:	movt	r2, #31088	; 0x7970
   2951c:	teq	r1, r2
   29520:	bne	29efc <main@@Base+0x14044>
   29524:	cmp	r0, #4
   29528:	blt	29efc <main@@Base+0x14044>
   2952c:	ldrb	r0, [r9, #19]
   29530:	cmp	r0, #34	; 0x22
   29534:	bne	29efc <main@@Base+0x14044>
   29538:	add	r1, r9, #20
   2953c:	sub	r0, r8, r1
   29540:	cmp	r0, #2
   29544:	blt	29eb0 <main@@Base+0x13ff8>
   29548:	ldrb	r0, [r1]
   2954c:	cmp	r0, #32
   29550:	bls	29ea0 <main@@Base+0x13fe8>
   29554:	mov	r9, r1
   29558:	cmp	r9, r8
   2955c:	bne	29ec8 <main@@Base+0x14010>
   29560:	b	29f08 <main@@Base+0x14050>
   29564:	add	r6, r9, #8
   29568:	mov	r2, #8
   2956c:	sub	r0, r8, r6
   29570:	cmp	r0, #8
   29574:	movcc	r2, r0
   29578:	sub	r1, r2, #2
   2957c:	cmp	r1, #7
   29580:	bcs	29854 <main@@Base+0x1399c>
   29584:	ldrb	r1, [r9, #9]
   29588:	lsl	r2, r1, #16
   2958c:	mov	r1, #0
   29590:	ldrb	r3, [r6]
   29594:	orr	r2, r2, r3, lsl #24
   29598:	movw	r3, #0
   2959c:	movt	r3, #28773	; 0x7065
   295a0:	eor	r2, r2, r3
   295a4:	orrs	r1, r1, r2
   295a8:	bne	29a24 <main@@Base+0x13b6c>
   295ac:	cmp	r0, #3
   295b0:	blt	29a24 <main@@Base+0x13b6c>
   295b4:	ldrb	r0, [r9, #10]
   295b8:	cmp	r0, #34	; 0x22
   295bc:	bne	29a24 <main@@Base+0x13b6c>
   295c0:	add	r1, r9, #11
   295c4:	sub	r0, r8, r1
   295c8:	cmp	r0, #2
   295cc:	blt	299d8 <main@@Base+0x13b20>
   295d0:	ldrb	r0, [r1]
   295d4:	cmp	r0, #32
   295d8:	bls	299c8 <main@@Base+0x13b10>
   295dc:	mov	r9, r1
   295e0:	cmp	r9, r8
   295e4:	bne	299f0 <main@@Base+0x13b38>
   295e8:	b	29a30 <main@@Base+0x13b78>
   295ec:	and	r0, r1, #-16777216	; 0xff000000
   295f0:	eor	r0, r0, #1862270976	; 0x6f000000
   295f4:	orrs	r0, r0, r3
   295f8:	bne	29930 <main@@Base+0x13a78>
   295fc:	cmp	ip, #6
   29600:	mov	r1, r9
   29604:	blt	29c4c <main@@Base+0x13d94>
   29608:	ldrb	r0, [r9, #5]
   2960c:	mov	r1, r9
   29610:	cmp	r0, #34	; 0x22
   29614:	bne	29c4c <main@@Base+0x13d94>
   29618:	add	r2, r9, #6
   2961c:	sub	r0, r8, r2
   29620:	cmp	r0, #2
   29624:	blt	298e0 <main@@Base+0x13a28>
   29628:	ldrb	r0, [r2]
   2962c:	cmp	r0, #32
   29630:	bls	298cc <main@@Base+0x13a14>
   29634:	mov	r1, r2
   29638:	cmp	r1, r8
   2963c:	bne	298fc <main@@Base+0x13a44>
   29640:	b	2993c <main@@Base+0x13a84>
   29644:	add	sl, r9, #8
   29648:	mov	r1, #8
   2964c:	sub	r0, r8, sl
   29650:	cmp	r0, #8
   29654:	movcc	r1, r0
   29658:	sub	r2, r1, #1
   2965c:	cmp	r2, #7
   29660:	bhi	2a1b0 <main@@Base+0x142f8>
   29664:	add	r5, pc, #28
   29668:	mov	ip, #0
   2966c:	mov	r3, #0
   29670:	mov	r6, #0
   29674:	mov	r7, #0
   29678:	mov	r4, #0
   2967c:	ldr	r1, [r5, r2, lsl #2]
   29680:	mov	r2, #0
   29684:	add	pc, r5, r1
   29688:	andeq	r0, r0, r0, asr r0
   2968c:	andeq	r0, r0, r8, asr #32
   29690:	andeq	r0, r0, r0, asr #32
   29694:	andeq	r0, r0, r8, lsr r0
   29698:	andeq	r0, r0, r8, lsr #32
   2969c:	andeq	r0, r0, r0, lsr #32
   296a0:	andeq	r0, r0, r0, lsr #32
   296a4:	andeq	r0, r0, r0, lsr #32
   296a8:	ldrb	r1, [r9, #13]
   296ac:	lsl	r2, r1, #16
   296b0:	ldrb	r1, [r9, #12]
   296b4:	mov	r3, ip
   296b8:	orr	r1, r2, r1, lsl #24
   296bc:	mov	ip, r1
   296c0:	ldrb	r1, [r9, #11]
   296c4:	orr	r6, r1, r3
   296c8:	ldrb	r1, [r9, #10]
   296cc:	orr	r7, r6, r1, lsl #8
   296d0:	ldrb	r1, [r9, #9]
   296d4:	orr	r4, r7, r1, lsl #16
   296d8:	ldrb	r1, [sl]
   296dc:	movw	r7, #28773	; 0x7065
   296e0:	lsr	r3, ip, #16
   296e4:	movt	r7, #29817	; 0x7479
   296e8:	orr	r2, r4, r1, lsl #24
   296ec:	movw	r1, #27487	; 0x6b5f
   296f0:	orr	r3, r3, r2, lsl #16
   296f4:	eor	r1, r1, r2, lsr #16
   296f8:	eor	r3, r3, r7
   296fc:	orrs	r1, r3, r1
   29700:	bne	29868 <main@@Base+0x139b0>
   29704:	cmp	r0, #7
   29708:	blt	2a1b0 <main@@Base+0x142f8>
   2970c:	ldrb	r0, [r9, #14]
   29710:	cmp	r0, #34	; 0x22
   29714:	bne	2a1b0 <main@@Base+0x142f8>
   29718:	add	r1, r9, #15
   2971c:	sub	r0, r8, r1
   29720:	cmp	r0, #2
   29724:	blt	29ad0 <main@@Base+0x13c18>
   29728:	ldrb	r0, [r1]
   2972c:	cmp	r0, #32
   29730:	bls	29ac0 <main@@Base+0x13c08>
   29734:	mov	r9, r1
   29738:	cmp	r9, r8
   2973c:	bne	29ae8 <main@@Base+0x13c30>
   29740:	b	29b20 <main@@Base+0x13c68>
   29744:	movw	r0, #0
   29748:	bfc	r1, #0, #16
   2974c:	movt	r0, #29556	; 0x7374
   29750:	teq	r1, r0
   29754:	bne	2a07c <main@@Base+0x141c4>
   29758:	cmp	ip, #3
   2975c:	blt	2a07c <main@@Base+0x141c4>
   29760:	ldrb	r0, [r9, #10]
   29764:	cmp	r0, #34	; 0x22
   29768:	bne	2a07c <main@@Base+0x141c4>
   2976c:	add	r1, r9, #11
   29770:	sub	r0, r8, r1
   29774:	cmp	r0, #2
   29778:	blt	29b48 <main@@Base+0x13c90>
   2977c:	ldrb	r0, [r1]
   29780:	cmp	r0, #32
   29784:	bls	29b38 <main@@Base+0x13c80>
   29788:	mov	r9, r1
   2978c:	cmp	r9, r8
   29790:	bne	29b60 <main@@Base+0x13ca8>
   29794:	b	29b98 <main@@Base+0x13ce0>
   29798:	movw	r0, #0
   2979c:	bfc	r1, #0, #16
   297a0:	movt	r0, #29299	; 0x7273
   297a4:	teq	r1, r0
   297a8:	bne	2a07c <main@@Base+0x141c4>
   297ac:	cmp	ip, #3
   297b0:	blt	2a07c <main@@Base+0x141c4>
   297b4:	ldrb	r0, [r9, #10]
   297b8:	cmp	r0, #34	; 0x22
   297bc:	bne	2a07c <main@@Base+0x141c4>
   297c0:	add	r1, r9, #11
   297c4:	sub	r0, r8, r1
   297c8:	cmp	r0, #2
   297cc:	blt	29bc0 <main@@Base+0x13d08>
   297d0:	ldrb	r0, [r1]
   297d4:	cmp	r0, #32
   297d8:	bls	29bb0 <main@@Base+0x13cf8>
   297dc:	mov	r9, r1
   297e0:	cmp	r9, r8
   297e4:	bne	29bd8 <main@@Base+0x13d20>
   297e8:	b	29c10 <main@@Base+0x13d58>
   297ec:	movw	r0, #29281	; 0x7261
   297f0:	lsr	r1, r1, #16
   297f4:	ldr	sl, [sp, #36]	; 0x24
   297f8:	eor	r0, r0, r2, lsr #16
   297fc:	orr	r1, r1, r2, lsl #16
   29800:	movw	r2, #25970	; 0x6572
   29804:	movt	r2, #25460	; 0x6374
   29808:	eor	r1, r1, r2
   2980c:	orrs	r0, r1, r0
   29810:	bne	2a07c <main@@Base+0x141c4>
   29814:	cmp	lr, #7
   29818:	blt	2a07c <main@@Base+0x141c4>
   2981c:	ldrb	r0, [r9, #14]
   29820:	cmp	r0, #34	; 0x22
   29824:	bne	2a07c <main@@Base+0x141c4>
   29828:	add	r1, r9, #15
   2982c:	sub	r0, r8, r1
   29830:	cmp	r0, #2
   29834:	blt	29d4c <main@@Base+0x13e94>
   29838:	ldrb	r0, [r1]
   2983c:	cmp	r0, #32
   29840:	bls	29d3c <main@@Base+0x13e84>
   29844:	mov	r9, r1
   29848:	cmp	r9, r8
   2984c:	bne	29d64 <main@@Base+0x13eac>
   29850:	b	29d9c <main@@Base+0x13ee4>
   29854:	cmp	r2, #1
   29858:	mov	r1, #0
   2985c:	mov	r2, #0
   29860:	beq	29590 <main@@Base+0x136d8>
   29864:	b	29a24 <main@@Base+0x13b6c>
   29868:	and	r1, r2, #-16777216	; 0xff000000
   2986c:	teq	r1, #1795162112	; 0x6b000000
   29870:	bne	2a1b0 <main@@Base+0x142f8>
   29874:	cmp	r0, #2
   29878:	blt	2a1b0 <main@@Base+0x142f8>
   2987c:	ldrb	r0, [r9, #9]
   29880:	cmp	r0, #34	; 0x22
   29884:	bne	2a1b0 <main@@Base+0x142f8>
   29888:	add	r1, r9, #10
   2988c:	sub	r0, r8, r1
   29890:	cmp	r0, #2
   29894:	blt	29dc4 <main@@Base+0x13f0c>
   29898:	ldrb	r0, [r1]
   2989c:	cmp	r0, #32
   298a0:	bls	29db4 <main@@Base+0x13efc>
   298a4:	mov	r9, r1
   298a8:	cmp	r9, r8
   298ac:	bne	29ddc <main@@Base+0x13f24>
   298b0:	b	29e14 <main@@Base+0x13f5c>
   298b4:	mov	r1, #0
   298b8:	cmp	r2, #1
   298bc:	beq	29508 <main@@Base+0x13650>
   298c0:	cmp	r2, #2
   298c4:	beq	29500 <main@@Base+0x13648>
   298c8:	b	29efc <main@@Base+0x14044>
   298cc:	bne	298e0 <main@@Base+0x13a28>
   298d0:	mov	r1, r9
   298d4:	ldrb	r0, [r1, #7]!
   298d8:	cmp	r0, #32
   298dc:	bhi	298f4 <main@@Base+0x13a3c>
   298e0:	mov	r1, r2
   298e4:	mov	r0, sl
   298e8:	mov	r2, r8
   298ec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   298f0:	mov	r1, r0
   298f4:	cmp	r1, r8
   298f8:	beq	2993c <main@@Base+0x13a84>
   298fc:	ldrb	r0, [r1]
   29900:	cmp	r0, #58	; 0x3a
   29904:	bne	2993c <main@@Base+0x13a84>
   29908:	add	r2, r1, #1
   2990c:	sub	r0, r8, r2
   29910:	cmp	r0, #2
   29914:	blt	29c38 <main@@Base+0x13d80>
   29918:	ldrb	r0, [r2]
   2991c:	cmp	r0, #32
   29920:	bls	29c28 <main@@Base+0x13d70>
   29924:	mov	r1, r2
   29928:	cmp	r9, r1
   2992c:	bne	29c54 <main@@Base+0x13d9c>
   29930:	mov	r0, sl
   29934:	mov	r1, r9
   29938:	b	2a084 <main@@Base+0x141cc>
   2993c:	mov	r0, sl
   29940:	mov	r2, r8
   29944:	mov	r3, #4
   29948:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2994c:	b	29c48 <main@@Base+0x13d90>
   29950:	bne	29960 <main@@Base+0x13aa8>
   29954:	ldrb	r0, [r9, #17]!
   29958:	cmp	r0, #32
   2995c:	bhi	29970 <main@@Base+0x13ab8>
   29960:	mov	r0, sl
   29964:	mov	r2, r8
   29968:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2996c:	mov	r9, r0
   29970:	cmp	r9, r8
   29974:	beq	299b0 <main@@Base+0x13af8>
   29978:	ldrb	r0, [r9]
   2997c:	cmp	r0, #58	; 0x3a
   29980:	bne	299b0 <main@@Base+0x13af8>
   29984:	add	r1, r9, #1
   29988:	sub	r0, r8, r1
   2998c:	cmp	r0, #2
   29990:	blt	29c94 <main@@Base+0x13ddc>
   29994:	ldrb	r0, [r1]
   29998:	cmp	r0, #32
   2999c:	bls	29c84 <main@@Base+0x13dcc>
   299a0:	mov	r9, r1
   299a4:	cmp	r4, r9
   299a8:	bne	29cac <main@@Base+0x13df4>
   299ac:	b	2a07c <main@@Base+0x141c4>
   299b0:	mov	r0, sl
   299b4:	mov	r1, r9
   299b8:	mov	r2, r8
   299bc:	mov	r3, #4
   299c0:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   299c4:	b	29ca0 <main@@Base+0x13de8>
   299c8:	bne	299d8 <main@@Base+0x13b20>
   299cc:	ldrb	r0, [r9, #12]!
   299d0:	cmp	r0, #32
   299d4:	bhi	299e8 <main@@Base+0x13b30>
   299d8:	mov	r0, sl
   299dc:	mov	r2, r8
   299e0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   299e4:	mov	r9, r0
   299e8:	cmp	r9, r8
   299ec:	beq	29a30 <main@@Base+0x13b78>
   299f0:	ldrb	r0, [r9]
   299f4:	cmp	r0, #58	; 0x3a
   299f8:	bne	29a30 <main@@Base+0x13b78>
   299fc:	add	r1, r9, #1
   29a00:	sub	r0, r8, r1
   29a04:	cmp	r0, #2
   29a08:	blt	29cf0 <main@@Base+0x13e38>
   29a0c:	ldrb	r0, [r1]
   29a10:	cmp	r0, #32
   29a14:	bls	29ce0 <main@@Base+0x13e28>
   29a18:	mov	r9, r1
   29a1c:	cmp	r6, r9
   29a20:	bne	29d08 <main@@Base+0x13e50>
   29a24:	mov	r0, sl
   29a28:	mov	r1, r6
   29a2c:	b	2a084 <main@@Base+0x141cc>
   29a30:	mov	r0, sl
   29a34:	mov	r1, r9
   29a38:	mov	r2, r8
   29a3c:	mov	r3, #4
   29a40:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29a44:	b	29cfc <main@@Base+0x13e44>
   29a48:	bne	29a58 <main@@Base+0x13ba0>
   29a4c:	ldrb	r0, [r9, #17]!
   29a50:	cmp	r0, #32
   29a54:	bhi	29a68 <main@@Base+0x13bb0>
   29a58:	mov	r0, sl
   29a5c:	mov	r2, r8
   29a60:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29a64:	mov	r9, r0
   29a68:	cmp	r9, r8
   29a6c:	beq	29aa8 <main@@Base+0x13bf0>
   29a70:	ldrb	r0, [r9]
   29a74:	cmp	r0, #58	; 0x3a
   29a78:	bne	29aa8 <main@@Base+0x13bf0>
   29a7c:	add	r1, r9, #1
   29a80:	sub	r0, r8, r1
   29a84:	cmp	r0, #2
   29a88:	blt	29e3c <main@@Base+0x13f84>
   29a8c:	ldrb	r0, [r1]
   29a90:	cmp	r0, #32
   29a94:	bls	29e2c <main@@Base+0x13f74>
   29a98:	mov	r9, r1
   29a9c:	cmp	r4, r9
   29aa0:	bne	29e54 <main@@Base+0x13f9c>
   29aa4:	b	2a07c <main@@Base+0x141c4>
   29aa8:	mov	r0, sl
   29aac:	mov	r1, r9
   29ab0:	mov	r2, r8
   29ab4:	mov	r3, #4
   29ab8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29abc:	b	29e48 <main@@Base+0x13f90>
   29ac0:	bne	29ad0 <main@@Base+0x13c18>
   29ac4:	ldrb	r0, [r9, #16]!
   29ac8:	cmp	r0, #32
   29acc:	bhi	29ae0 <main@@Base+0x13c28>
   29ad0:	ldr	r0, [sp, #36]	; 0x24
   29ad4:	mov	r2, r8
   29ad8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29adc:	mov	r9, r0
   29ae0:	cmp	r9, r8
   29ae4:	beq	29b20 <main@@Base+0x13c68>
   29ae8:	ldrb	r0, [r9]
   29aec:	cmp	r0, #58	; 0x3a
   29af0:	bne	29b20 <main@@Base+0x13c68>
   29af4:	add	r1, r9, #1
   29af8:	sub	r0, r8, r1
   29afc:	cmp	r0, #2
   29b00:	blt	29f80 <main@@Base+0x140c8>
   29b04:	ldrb	r0, [r1]
   29b08:	cmp	r0, #32
   29b0c:	bls	29f70 <main@@Base+0x140b8>
   29b10:	mov	r9, r1
   29b14:	cmp	sl, r9
   29b18:	bne	29f98 <main@@Base+0x140e0>
   29b1c:	b	2a1b0 <main@@Base+0x142f8>
   29b20:	ldr	r0, [sp, #36]	; 0x24
   29b24:	mov	r1, r9
   29b28:	mov	r2, r8
   29b2c:	mov	r3, #4
   29b30:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29b34:	b	29f8c <main@@Base+0x140d4>
   29b38:	bne	29b48 <main@@Base+0x13c90>
   29b3c:	ldrb	r0, [r9, #12]!
   29b40:	cmp	r0, #32
   29b44:	bhi	29b58 <main@@Base+0x13ca0>
   29b48:	mov	r0, sl
   29b4c:	mov	r2, r8
   29b50:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29b54:	mov	r9, r0
   29b58:	cmp	r9, r8
   29b5c:	beq	29b98 <main@@Base+0x13ce0>
   29b60:	ldrb	r0, [r9]
   29b64:	cmp	r0, #58	; 0x3a
   29b68:	bne	29b98 <main@@Base+0x13ce0>
   29b6c:	add	r1, r9, #1
   29b70:	sub	r0, r8, r1
   29b74:	cmp	r0, #2
   29b78:	blt	29f30 <main@@Base+0x14078>
   29b7c:	ldrb	r0, [r1]
   29b80:	cmp	r0, #32
   29b84:	bls	29f20 <main@@Base+0x14068>
   29b88:	mov	r9, r1
   29b8c:	cmp	r4, r9
   29b90:	bne	29f48 <main@@Base+0x14090>
   29b94:	b	2a07c <main@@Base+0x141c4>
   29b98:	mov	r0, sl
   29b9c:	mov	r1, r9
   29ba0:	mov	r2, r8
   29ba4:	mov	r3, #4
   29ba8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29bac:	b	29f3c <main@@Base+0x14084>
   29bb0:	bne	29bc0 <main@@Base+0x13d08>
   29bb4:	ldrb	r0, [r9, #12]!
   29bb8:	cmp	r0, #32
   29bbc:	bhi	29bd0 <main@@Base+0x13d18>
   29bc0:	mov	r0, sl
   29bc4:	mov	r2, r8
   29bc8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29bcc:	mov	r9, r0
   29bd0:	cmp	r9, r8
   29bd4:	beq	29c10 <main@@Base+0x13d58>
   29bd8:	ldrb	r0, [r9]
   29bdc:	cmp	r0, #58	; 0x3a
   29be0:	bne	29c10 <main@@Base+0x13d58>
   29be4:	add	r1, r9, #1
   29be8:	sub	r0, r8, r1
   29bec:	cmp	r0, #2
   29bf0:	blt	29fe0 <main@@Base+0x14128>
   29bf4:	ldrb	r0, [r1]
   29bf8:	cmp	r0, #32
   29bfc:	bls	29fd0 <main@@Base+0x14118>
   29c00:	mov	r9, r1
   29c04:	cmp	r4, r9
   29c08:	bne	29ff8 <main@@Base+0x14140>
   29c0c:	b	2a07c <main@@Base+0x141c4>
   29c10:	mov	r0, sl
   29c14:	mov	r1, r9
   29c18:	mov	r2, r8
   29c1c:	mov	r3, #4
   29c20:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29c24:	b	29fec <main@@Base+0x14134>
   29c28:	bne	29c38 <main@@Base+0x13d80>
   29c2c:	ldrb	r0, [r1, #2]!
   29c30:	cmp	r0, #32
   29c34:	bhi	29c4c <main@@Base+0x13d94>
   29c38:	mov	r1, r2
   29c3c:	mov	r0, sl
   29c40:	mov	r2, r8
   29c44:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29c48:	mov	r1, r0
   29c4c:	cmp	r9, r1
   29c50:	beq	29930 <main@@Base+0x13a78>
   29c54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29c58:	mov	r2, #7
   29c5c:	mov	r3, #3
   29c60:	str	r2, [sp]
   29c64:	mov	r2, r8
   29c68:	str	r0, [sp, #4]
   29c6c:	ldr	r0, [pc, #1600]	; 2a2b4 <main@@Base+0x143fc>
   29c70:	add	r0, pc, r0
   29c74:	str	r0, [sp, #8]
   29c78:	mov	r0, sl
   29c7c:	bl	36c28 <flatcc_json_parser_union@@Base>
   29c80:	b	2a08c <main@@Base+0x141d4>
   29c84:	bne	29c94 <main@@Base+0x13ddc>
   29c88:	ldrb	r0, [r9, #2]!
   29c8c:	cmp	r0, #32
   29c90:	bhi	29ca4 <main@@Base+0x13dec>
   29c94:	mov	r0, sl
   29c98:	mov	r2, r8
   29c9c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29ca0:	mov	r9, r0
   29ca4:	cmp	r4, r9
   29ca8:	beq	2a07c <main@@Base+0x141c4>
   29cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29cb0:	mov	r1, #3
   29cb4:	mov	r2, r8
   29cb8:	mov	r3, #1
   29cbc:	str	r1, [sp]
   29cc0:	mov	r1, r9
   29cc4:	str	r0, [sp, #4]
   29cc8:	ldr	r0, [pc, #1488]	; 2a2a0 <main@@Base+0x143e8>
   29ccc:	add	r0, pc, r0
   29cd0:	str	r0, [sp, #8]
   29cd4:	ldr	r0, [pc, #1480]	; 2a2a4 <main@@Base+0x143ec>
   29cd8:	add	r0, pc, r0
   29cdc:	b	2a218 <main@@Base+0x14360>
   29ce0:	bne	29cf0 <main@@Base+0x13e38>
   29ce4:	ldrb	r0, [r9, #2]!
   29ce8:	cmp	r0, #32
   29cec:	bhi	29d00 <main@@Base+0x13e48>
   29cf0:	mov	r0, sl
   29cf4:	mov	r2, r8
   29cf8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29cfc:	mov	r9, r0
   29d00:	cmp	r6, r9
   29d04:	beq	29a24 <main@@Base+0x13b6c>
   29d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29d0c:	mov	r1, #7
   29d10:	mov	r2, r8
   29d14:	mov	r3, #3
   29d18:	str	r1, [sp]
   29d1c:	mov	r1, r9
   29d20:	str	r0, [sp, #4]
   29d24:	ldr	r0, [pc, #1408]	; 2a2ac <main@@Base+0x143f4>
   29d28:	add	r0, pc, r0
   29d2c:	str	r0, [sp, #8]
   29d30:	ldr	r0, [pc, #1400]	; 2a2b0 <main@@Base+0x143f8>
   29d34:	add	r0, pc, r0
   29d38:	b	2a218 <main@@Base+0x14360>
   29d3c:	bne	29d4c <main@@Base+0x13e94>
   29d40:	ldrb	r0, [r9, #16]!
   29d44:	cmp	r0, #32
   29d48:	bhi	29d5c <main@@Base+0x13ea4>
   29d4c:	mov	r0, sl
   29d50:	mov	r2, r8
   29d54:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29d58:	mov	r9, r0
   29d5c:	cmp	r9, r8
   29d60:	beq	29d9c <main@@Base+0x13ee4>
   29d64:	ldrb	r0, [r9]
   29d68:	cmp	r0, #58	; 0x3a
   29d6c:	bne	29d9c <main@@Base+0x13ee4>
   29d70:	add	r1, r9, #1
   29d74:	sub	r0, r8, r1
   29d78:	cmp	r0, #2
   29d7c:	blt	2a03c <main@@Base+0x14184>
   29d80:	ldrb	r0, [r1]
   29d84:	cmp	r0, #32
   29d88:	bls	2a02c <main@@Base+0x14174>
   29d8c:	mov	r9, r1
   29d90:	cmp	r4, r9
   29d94:	bne	2a054 <main@@Base+0x1419c>
   29d98:	b	2a07c <main@@Base+0x141c4>
   29d9c:	mov	r0, sl
   29da0:	mov	r1, r9
   29da4:	mov	r2, r8
   29da8:	mov	r3, #4
   29dac:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29db0:	b	2a048 <main@@Base+0x14190>
   29db4:	bne	29dc4 <main@@Base+0x13f0c>
   29db8:	ldrb	r0, [r9, #11]!
   29dbc:	cmp	r0, #32
   29dc0:	bhi	29dd4 <main@@Base+0x13f1c>
   29dc4:	ldr	r0, [sp, #36]	; 0x24
   29dc8:	mov	r2, r8
   29dcc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29dd0:	mov	r9, r0
   29dd4:	cmp	r9, r8
   29dd8:	beq	29e14 <main@@Base+0x13f5c>
   29ddc:	ldrb	r0, [r9]
   29de0:	cmp	r0, #58	; 0x3a
   29de4:	bne	29e14 <main@@Base+0x13f5c>
   29de8:	add	r1, r9, #1
   29dec:	sub	r0, r8, r1
   29df0:	cmp	r0, #2
   29df4:	blt	2a16c <main@@Base+0x142b4>
   29df8:	ldrb	r0, [r1]
   29dfc:	cmp	r0, #32
   29e00:	bls	2a15c <main@@Base+0x142a4>
   29e04:	mov	r9, r1
   29e08:	cmp	sl, r9
   29e0c:	bne	2a184 <main@@Base+0x142cc>
   29e10:	b	2a1b0 <main@@Base+0x142f8>
   29e14:	ldr	r0, [sp, #36]	; 0x24
   29e18:	mov	r1, r9
   29e1c:	mov	r2, r8
   29e20:	mov	r3, #4
   29e24:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29e28:	b	2a178 <main@@Base+0x142c0>
   29e2c:	bne	29e3c <main@@Base+0x13f84>
   29e30:	ldrb	r0, [r9, #2]!
   29e34:	cmp	r0, #32
   29e38:	bhi	29e4c <main@@Base+0x13f94>
   29e3c:	mov	r0, sl
   29e40:	mov	r2, r8
   29e44:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29e48:	mov	r9, r0
   29e4c:	cmp	r4, r9
   29e50:	beq	2a07c <main@@Base+0x141c4>
   29e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29e58:	mov	r1, #9
   29e5c:	mov	r2, r8
   29e60:	mov	r3, #4
   29e64:	str	r1, [sp]
   29e68:	mov	r1, r9
   29e6c:	str	r0, [sp, #4]
   29e70:	ldr	r0, [pc, #1088]	; 2a2b8 <main@@Base+0x14400>
   29e74:	add	r0, pc, r0
   29e78:	str	r0, [sp, #8]
   29e7c:	ldr	r0, [pc, #1080]	; 2a2bc <main@@Base+0x14404>
   29e80:	add	r0, pc, r0
   29e84:	str	r0, [sp, #12]
   29e88:	ldr	r0, [pc, #1072]	; 2a2c0 <main@@Base+0x14408>
   29e8c:	add	r0, pc, r0
   29e90:	str	r0, [sp, #16]
   29e94:	mov	r0, sl
   29e98:	bl	377dc <flatcc_json_parser_union_type_vector@@Base>
   29e9c:	b	2a08c <main@@Base+0x141d4>
   29ea0:	bne	29eb0 <main@@Base+0x13ff8>
   29ea4:	ldrb	r0, [r9, #21]!
   29ea8:	cmp	r0, #32
   29eac:	bhi	29ec0 <main@@Base+0x14008>
   29eb0:	mov	r0, sl
   29eb4:	mov	r2, r8
   29eb8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29ebc:	mov	r9, r0
   29ec0:	cmp	r9, r8
   29ec4:	beq	29f08 <main@@Base+0x14050>
   29ec8:	ldrb	r0, [r9]
   29ecc:	cmp	r0, #58	; 0x3a
   29ed0:	bne	29f08 <main@@Base+0x14050>
   29ed4:	add	r1, r9, #1
   29ed8:	sub	r0, r8, r1
   29edc:	cmp	r0, #2
   29ee0:	blt	2a1d0 <main@@Base+0x14318>
   29ee4:	ldrb	r0, [r1]
   29ee8:	cmp	r0, #32
   29eec:	bls	2a1c0 <main@@Base+0x14308>
   29ef0:	mov	r9, r1
   29ef4:	cmp	r5, r9
   29ef8:	bne	2a1e8 <main@@Base+0x14330>
   29efc:	mov	r0, sl
   29f00:	mov	r1, r5
   29f04:	b	2a084 <main@@Base+0x141cc>
   29f08:	mov	r0, sl
   29f0c:	mov	r1, r9
   29f10:	mov	r2, r8
   29f14:	mov	r3, #4
   29f18:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   29f1c:	b	2a1dc <main@@Base+0x14324>
   29f20:	bne	29f30 <main@@Base+0x14078>
   29f24:	ldrb	r0, [r9, #2]!
   29f28:	cmp	r0, #32
   29f2c:	bhi	29f40 <main@@Base+0x14088>
   29f30:	mov	r0, sl
   29f34:	mov	r2, r8
   29f38:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29f3c:	mov	r9, r0
   29f40:	cmp	r4, r9
   29f44:	beq	2a07c <main@@Base+0x141c4>
   29f48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29f4c:	mov	r1, #3
   29f50:	mov	r2, r8
   29f54:	mov	r3, #1
   29f58:	str	r1, [sp]
   29f5c:	mov	r1, r9
   29f60:	str	r0, [sp, #4]
   29f64:	ldr	r0, [pc, #828]	; 2a2a8 <main@@Base+0x143f0>
   29f68:	add	r0, pc, r0
   29f6c:	b	29c74 <main@@Base+0x13dbc>
   29f70:	bne	29f80 <main@@Base+0x140c8>
   29f74:	ldrb	r0, [r9, #2]!
   29f78:	cmp	r0, #32
   29f7c:	bhi	29f90 <main@@Base+0x140d8>
   29f80:	ldr	r0, [sp, #36]	; 0x24
   29f84:	mov	r2, r8
   29f88:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29f8c:	mov	r9, r0
   29f90:	cmp	sl, r9
   29f94:	beq	2a1b0 <main@@Base+0x142f8>
   29f98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29f9c:	mov	r1, #5
   29fa0:	mov	r2, r8
   29fa4:	mov	r3, #2
   29fa8:	str	r1, [sp]
   29fac:	mov	r1, r9
   29fb0:	str	r0, [sp, #4]
   29fb4:	ldr	r0, [pc, #792]	; 2a2d4 <main@@Base+0x1441c>
   29fb8:	add	r0, pc, r0
   29fbc:	str	r0, [sp, #8]
   29fc0:	ldr	r0, [pc, #784]	; 2a2d8 <main@@Base+0x14420>
   29fc4:	ldr	sl, [sp, #36]	; 0x24
   29fc8:	add	r0, pc, r0
   29fcc:	b	2a218 <main@@Base+0x14360>
   29fd0:	bne	29fe0 <main@@Base+0x14128>
   29fd4:	ldrb	r0, [r9, #2]!
   29fd8:	cmp	r0, #32
   29fdc:	bhi	29ff0 <main@@Base+0x14138>
   29fe0:	mov	r0, sl
   29fe4:	mov	r2, r8
   29fe8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   29fec:	mov	r9, r0
   29ff0:	cmp	r4, r9
   29ff4:	beq	2a07c <main@@Base+0x141c4>
   29ff8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29ffc:	mov	r1, #9
   2a000:	mov	r2, r8
   2a004:	mov	r3, #4
   2a008:	str	r1, [sp]
   2a00c:	mov	r1, r9
   2a010:	str	r0, [sp, #4]
   2a014:	ldr	r0, [pc, #680]	; 2a2c4 <main@@Base+0x1440c>
   2a018:	add	r0, pc, r0
   2a01c:	str	r0, [sp, #8]
   2a020:	mov	r0, sl
   2a024:	bl	372e0 <flatcc_json_parser_union_vector@@Base>
   2a028:	b	2a08c <main@@Base+0x141d4>
   2a02c:	bne	2a03c <main@@Base+0x14184>
   2a030:	ldrb	r0, [r9, #2]!
   2a034:	cmp	r0, #32
   2a038:	bhi	2a04c <main@@Base+0x14194>
   2a03c:	mov	r0, sl
   2a040:	mov	r2, r8
   2a044:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a048:	mov	r9, r0
   2a04c:	cmp	r4, r9
   2a050:	beq	2a07c <main@@Base+0x141c4>
   2a054:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a058:	mov	r1, #1
   2a05c:	mov	r2, r8
   2a060:	mov	r3, #0
   2a064:	str	r1, [sp]
   2a068:	mov	r1, r9
   2a06c:	str	r0, [sp, #4]
   2a070:	ldr	r0, [pc, #600]	; 2a2d0 <main@@Base+0x14418>
   2a074:	add	r0, pc, r0
   2a078:	b	29c74 <main@@Base+0x13dbc>
   2a07c:	mov	r0, sl
   2a080:	mov	r1, r4
   2a084:	mov	r2, r8
   2a088:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   2a08c:	ldr	r4, [sp, #32]
   2a090:	mov	r2, r0
   2a094:	sub	r0, r8, r0
   2a098:	cmp	r0, #2
   2a09c:	blt	2a0d0 <main@@Base+0x14218>
   2a0a0:	ldrb	r0, [r2]
   2a0a4:	cmp	r0, #32
   2a0a8:	bls	2a0bc <main@@Base+0x14204>
   2a0ac:	mov	r3, r2
   2a0b0:	cmp	r3, r8
   2a0b4:	bne	2a0ec <main@@Base+0x14234>
   2a0b8:	b	2a228 <main@@Base+0x14370>
   2a0bc:	bne	2a0d0 <main@@Base+0x14218>
   2a0c0:	mov	r3, r2
   2a0c4:	ldrb	r0, [r3, #1]!
   2a0c8:	cmp	r0, #32
   2a0cc:	bhi	2a0e4 <main@@Base+0x1422c>
   2a0d0:	mov	r1, r2
   2a0d4:	mov	r0, sl
   2a0d8:	mov	r2, r8
   2a0dc:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a0e0:	mov	r3, r0
   2a0e4:	cmp	r3, r8
   2a0e8:	beq	2a228 <main@@Base+0x14370>
   2a0ec:	ldrb	r0, [r3]
   2a0f0:	cmp	r0, #44	; 0x2c
   2a0f4:	bne	2a230 <main@@Base+0x14378>
   2a0f8:	add	r1, r3, #1
   2a0fc:	sub	r0, r8, r1
   2a100:	cmp	r0, #2
   2a104:	blt	2a134 <main@@Base+0x1427c>
   2a108:	ldrb	r0, [r1]
   2a10c:	cmp	r0, #32
   2a110:	bls	2a124 <main@@Base+0x1426c>
   2a114:	mov	r3, r1
   2a118:	cmp	r3, r8
   2a11c:	bne	2a14c <main@@Base+0x14294>
   2a120:	b	2a25c <main@@Base+0x143a4>
   2a124:	bne	2a134 <main@@Base+0x1427c>
   2a128:	ldrb	r0, [r3, #2]!
   2a12c:	cmp	r0, #32
   2a130:	bhi	2a144 <main@@Base+0x1428c>
   2a134:	mov	r0, sl
   2a138:	mov	r2, r8
   2a13c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a140:	mov	r3, r0
   2a144:	cmp	r3, r8
   2a148:	beq	2a25c <main@@Base+0x143a4>
   2a14c:	ldrb	r0, [r3]
   2a150:	cmp	r0, #125	; 0x7d
   2a154:	bne	28ffc <main@@Base+0x13144>
   2a158:	b	2a238 <main@@Base+0x14380>
   2a15c:	bne	2a16c <main@@Base+0x142b4>
   2a160:	ldrb	r0, [r9, #2]!
   2a164:	cmp	r0, #32
   2a168:	bhi	2a17c <main@@Base+0x142c4>
   2a16c:	ldr	r0, [sp, #36]	; 0x24
   2a170:	mov	r2, r8
   2a174:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a178:	mov	r9, r0
   2a17c:	cmp	sl, r9
   2a180:	beq	2a1b0 <main@@Base+0x142f8>
   2a184:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a188:	mov	r1, #5
   2a18c:	mov	r2, r8
   2a190:	mov	r3, #2
   2a194:	str	r1, [sp]
   2a198:	mov	r1, r9
   2a19c:	str	r0, [sp, #4]
   2a1a0:	ldr	r0, [pc, #308]	; 2a2dc <main@@Base+0x14424>
   2a1a4:	ldr	sl, [sp, #36]	; 0x24
   2a1a8:	add	r0, pc, r0
   2a1ac:	b	29c74 <main@@Base+0x13dbc>
   2a1b0:	ldr	r0, [sp, #36]	; 0x24
   2a1b4:	mov	r1, sl
   2a1b8:	mov	sl, r0
   2a1bc:	b	2a084 <main@@Base+0x141cc>
   2a1c0:	bne	2a1d0 <main@@Base+0x14318>
   2a1c4:	ldrb	r0, [r9, #2]!
   2a1c8:	cmp	r0, #32
   2a1cc:	bhi	2a1e0 <main@@Base+0x14328>
   2a1d0:	mov	r0, sl
   2a1d4:	mov	r2, r8
   2a1d8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a1dc:	mov	r9, r0
   2a1e0:	cmp	r5, r9
   2a1e4:	beq	29efc <main@@Base+0x14044>
   2a1e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a1ec:	mov	r1, #1
   2a1f0:	mov	r2, r8
   2a1f4:	mov	r3, #0
   2a1f8:	str	r1, [sp]
   2a1fc:	mov	r1, r9
   2a200:	str	r0, [sp, #4]
   2a204:	ldr	r0, [pc, #188]	; 2a2c8 <main@@Base+0x14410>
   2a208:	add	r0, pc, r0
   2a20c:	str	r0, [sp, #8]
   2a210:	ldr	r0, [pc, #180]	; 2a2cc <main@@Base+0x14414>
   2a214:	add	r0, pc, r0
   2a218:	str	r0, [sp, #12]
   2a21c:	mov	r0, sl
   2a220:	bl	36d68 <flatcc_json_parser_union_type@@Base>
   2a224:	b	2a08c <main@@Base+0x141d4>
   2a228:	mov	r7, r8
   2a22c:	b	28f38 <main@@Base+0x13080>
   2a230:	cmp	r0, #125	; 0x7d
   2a234:	bne	2a268 <main@@Base+0x143b0>
   2a238:	add	r1, r3, #1
   2a23c:	sub	r0, r8, r1
   2a240:	cmp	r0, #2
   2a244:	blt	2a290 <main@@Base+0x143d8>
   2a248:	ldrb	r0, [r1]
   2a24c:	cmp	r0, #32
   2a250:	bls	2a27c <main@@Base+0x143c4>
   2a254:	mov	r7, r1
   2a258:	b	28f38 <main@@Base+0x13080>
   2a25c:	mov	r0, sl
   2a260:	mov	r1, r8
   2a264:	b	2a270 <main@@Base+0x143b8>
   2a268:	mov	r0, sl
   2a26c:	mov	r1, r3
   2a270:	mov	r2, r8
   2a274:	mov	r3, #10
   2a278:	b	28f30 <main@@Base+0x13078>
   2a27c:	bne	2a290 <main@@Base+0x143d8>
   2a280:	ldrb	r0, [r3, #2]!
   2a284:	mov	r7, r3
   2a288:	cmp	r0, #32
   2a28c:	bhi	28f38 <main@@Base+0x13080>
   2a290:	mov	r0, sl
   2a294:	mov	r2, r8
   2a298:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a29c:	b	28f34 <main@@Base+0x1307c>
   2a2a0:	andeq	r2, r3, r0, ror #11
   2a2a4:	andeq	r0, r0, r8, asr #14
   2a2a8:			; <UNDEFINED> instruction: 0x000004b8
   2a2ac:	muleq	r3, r4, r5
   2a2b0:	andeq	r0, r0, ip, ror #13
   2a2b4:			; <UNDEFINED> instruction: 0x000007b0
   2a2b8:	andeq	r2, r3, r8, asr r4
   2a2bc:	andeq	r0, r0, r0, lsr #11
   2a2c0:	andeq	r1, r0, r8, ror #7
   2a2c4:	andeq	r0, r0, r8, lsl #8
   2a2c8:	ldrdeq	r2, [r3], -r4
   2a2cc:	andeq	r0, r0, ip, lsl #4
   2a2d0:	andeq	r0, r0, ip, lsr #7
   2a2d4:	andeq	r2, r3, r4, lsr r3
   2a2d8:	andeq	r0, r0, r8, asr r4
   2a2dc:	andeq	r0, r0, r8, ror r2
   2a2e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a2e4:	add	fp, sp, #28
   2a2e8:	push	{r3}		; (str r3, [sp, #-4]!)
   2a2ec:	sub	r7, r2, r1
   2a2f0:	cmp	r7, #8
   2a2f4:	movcs	r7, #8
   2a2f8:	sub	r7, r7, #1
   2a2fc:	cmp	r7, #7
   2a300:	bhi	2a41c <main@@Base+0x14564>
   2a304:	add	r6, pc, #36	; 0x24
   2a308:	mov	ip, #0
   2a30c:	mov	r3, #0
   2a310:	mov	r8, #0
   2a314:	mov	r9, #0
   2a318:	mov	sl, #0
   2a31c:	mov	r4, #0
   2a320:	mov	r5, #0
   2a324:	ldr	lr, [r6, r7, lsl #2]
   2a328:	mov	r7, #0
   2a32c:	add	pc, r6, lr
   2a330:	andeq	r0, r0, r4, rrx
   2a334:	andeq	r0, r0, ip, asr r0
   2a338:	andeq	r0, r0, r4, asr r0
   2a33c:	andeq	r0, r0, ip, asr #32
   2a340:	andeq	r0, r0, r0, asr #32
   2a344:	andeq	r0, r0, r4, lsr r0
   2a348:	andeq	r0, r0, r4, lsr #32
   2a34c:	andeq	r0, r0, r0, lsr #32
   2a350:	ldrb	r3, [r1, #7]
   2a354:	ldrb	r7, [r1, #6]
   2a358:	mov	r8, ip
   2a35c:	orr	r3, r3, r7, lsl #8
   2a360:	mov	ip, r3
   2a364:	ldrb	r3, [r1, #5]
   2a368:	mov	r9, r8
   2a36c:	orr	ip, ip, r3, lsl #16
   2a370:	ldrb	r3, [r1, #4]
   2a374:	mov	sl, r9
   2a378:	orr	ip, ip, r3, lsl #24
   2a37c:	ldrb	r3, [r1, #3]
   2a380:	orr	r7, r3, sl
   2a384:	ldrb	r3, [r1, #2]
   2a388:	orr	r4, r7, r3, lsl #8
   2a38c:	ldrb	r3, [r1, #1]
   2a390:	orr	r5, r4, r3, lsl #16
   2a394:	ldrb	r7, [r1]
   2a398:	movw	r3, #29797	; 0x7465
   2a39c:	movw	r6, #24946	; 0x6172
   2a3a0:	movt	r3, #24931	; 0x6163
   2a3a4:	movt	r6, #17256	; 0x4368
   2a3a8:	eor	r3, ip, r3
   2a3ac:	orr	r7, r5, r7, lsl #24
   2a3b0:	eor	r7, r7, r6
   2a3b4:	orrs	r3, r3, r7
   2a3b8:	bne	2a41c <main@@Base+0x14564>
   2a3bc:	add	lr, r1, #8
   2a3c0:	sub	r7, r2, lr
   2a3c4:	cmp	r7, #8
   2a3c8:	mov	r3, r7
   2a3cc:	movcs	r3, #8
   2a3d0:	sub	r3, r3, #1
   2a3d4:	cmp	r3, #7
   2a3d8:	bhi	2a41c <main@@Base+0x14564>
   2a3dc:	cmp	r7, #2
   2a3e0:	blt	2a41c <main@@Base+0x14564>
   2a3e4:	ldrb	r3, [lr]
   2a3e8:	cmp	r3, #114	; 0x72
   2a3ec:	bne	2a41c <main@@Base+0x14564>
   2a3f0:	ldrb	r3, [r1, #9]
   2a3f4:	mov	ip, lr
   2a3f8:	cmp	r3, #46	; 0x2e
   2a3fc:	addeq	ip, r1, #10
   2a400:	cmp	ip, lr
   2a404:	beq	2a41c <main@@Base+0x14564>
   2a408:	ldr	r3, [sp]
   2a40c:	mov	r1, ip
   2a410:	sub	sp, fp, #28
   2a414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a418:	b	24fb8 <main@@Base+0xf100>
   2a41c:	mov	r0, r1
   2a420:	sub	sp, fp, #28
   2a424:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a428:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a42c:	add	fp, sp, #28
   2a430:	sub	sp, sp, #36	; 0x24
   2a434:	ldr	r5, [fp, #8]
   2a438:	mov	r8, r0
   2a43c:	mov	r0, #0
   2a440:	mov	r9, r2
   2a444:	mov	r4, r1
   2a448:	cmp	r3, #11
   2a44c:	str	r0, [r5]
   2a450:	bhi	2a4a8 <main@@Base+0x145f0>
   2a454:	add	r0, pc, #4
   2a458:	ldr	r1, [r0, r3, lsl #2]
   2a45c:	add	pc, r0, r1
   2a460:	andeq	r0, r0, r8, lsl #1
   2a464:	andeq	r0, r0, r8, rrx
   2a468:	andeq	r0, r0, ip, asr #1
   2a46c:	andeq	r0, r0, r8, rrx
   2a470:	andeq	r0, r0, r8, rrx
   2a474:	andeq	r0, r0, r8, rrx
   2a478:	andeq	r0, r0, r8, rrx
   2a47c:	andeq	r0, r0, r8, rrx
   2a480:	andeq	r0, r0, r0, lsr #2
   2a484:	andeq	r0, r0, r0, lsr r0
   2a488:	andeq	r0, r0, r0, lsr r0
   2a48c:	andeq	r0, r0, r0, asr r0
   2a490:	mov	r0, r8
   2a494:	mov	r1, r4
   2a498:	mov	r2, r9
   2a49c:	mov	r3, r5
   2a4a0:	bl	2b2a8 <main@@Base+0x153f0>
   2a4a4:	b	2a678 <main@@Base+0x147c0>
   2a4a8:	cmp	r3, #255	; 0xff
   2a4ac:	bne	2a4c8 <main@@Base+0x14610>
   2a4b0:	mov	r0, r8
   2a4b4:	mov	r1, r4
   2a4b8:	mov	r2, r9
   2a4bc:	mov	r3, r5
   2a4c0:	bl	36850 <flatcc_json_parser_build_string@@Base>
   2a4c4:	b	2a678 <main@@Base+0x147c0>
   2a4c8:	ldrb	r0, [r8, #8]
   2a4cc:	tst	r0, #1
   2a4d0:	bne	2a5dc <main@@Base+0x14724>
   2a4d4:	mov	r0, r8
   2a4d8:	mov	r1, r4
   2a4dc:	mov	r2, r9
   2a4e0:	mov	r3, #15
   2a4e4:	b	2a520 <main@@Base+0x14668>
   2a4e8:	sub	r0, r9, r4
   2a4ec:	cmp	r0, #4
   2a4f0:	blt	2a510 <main@@Base+0x14658>
   2a4f4:	ldr	r1, [pc, #3444]	; 2b270 <main@@Base+0x153b8>
   2a4f8:	mov	r0, r4
   2a4fc:	mov	r2, #4
   2a500:	add	r1, pc, r1
   2a504:	bl	14eb4 <bcmp@plt>
   2a508:	cmp	r0, #0
   2a50c:	beq	2a6b8 <main@@Base+0x14800>
   2a510:	mov	r0, r8
   2a514:	mov	r1, r4
   2a518:	mov	r2, r9
   2a51c:	mov	r3, #26
   2a520:	sub	sp, fp, #28
   2a524:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a528:	b	33dd8 <flatcc_json_parser_set_error@@Base>
   2a52c:	mov	r0, #0
   2a530:	mov	r1, #1
   2a534:	str	r0, [r5]
   2a538:	ldr	r0, [r8]
   2a53c:	bl	2f1a0 <flatcc_builder_start_table@@Base>
   2a540:	cmp	r0, #0
   2a544:	bne	2a664 <main@@Base+0x147ac>
   2a548:	cmp	r4, r9
   2a54c:	beq	2a640 <main@@Base+0x14788>
   2a550:	ldrb	r0, [r4]
   2a554:	cmp	r0, #123	; 0x7b
   2a558:	bne	2a640 <main@@Base+0x14788>
   2a55c:	add	r1, r4, #1
   2a560:	sub	r0, r9, r1
   2a564:	cmp	r0, #2
   2a568:	blt	2abc8 <main@@Base+0x14d10>
   2a56c:	ldrb	r0, [r1]
   2a570:	cmp	r0, #32
   2a574:	bls	2abb8 <main@@Base+0x14d00>
   2a578:	mov	r4, r1
   2a57c:	b	2abd8 <main@@Base+0x14d20>
   2a580:	mov	r0, #0
   2a584:	mov	r1, #2
   2a588:	mov	r2, #2
   2a58c:	str	r0, [r5]
   2a590:	ldr	r0, [r8]
   2a594:	bl	2df00 <flatcc_builder_start_struct@@Base>
   2a598:	cmp	r0, #0
   2a59c:	beq	2a634 <main@@Base+0x1477c>
   2a5a0:	cmp	r4, r9
   2a5a4:	beq	2a5f4 <main@@Base+0x1473c>
   2a5a8:	ldrb	r1, [r4]
   2a5ac:	cmp	r1, #123	; 0x7b
   2a5b0:	bne	2a5f4 <main@@Base+0x1473c>
   2a5b4:	add	r1, r4, #1
   2a5b8:	str	r0, [sp, #8]
   2a5bc:	sub	r0, r9, r1
   2a5c0:	cmp	r0, #2
   2a5c4:	blt	2a6e8 <main@@Base+0x14830>
   2a5c8:	ldrb	r0, [r1]
   2a5cc:	cmp	r0, #32
   2a5d0:	bls	2a6d8 <main@@Base+0x14820>
   2a5d4:	mov	r4, r1
   2a5d8:	b	2a6f8 <main@@Base+0x14840>
   2a5dc:	mov	r0, r8
   2a5e0:	mov	r1, r4
   2a5e4:	mov	r2, r9
   2a5e8:	sub	sp, fp, #28
   2a5ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a5f0:	b	34774 <flatcc_json_parser_generic_json@@Base>
   2a5f4:	mov	r0, r8
   2a5f8:	mov	r1, r4
   2a5fc:	mov	r2, r9
   2a600:	mov	r3, #21
   2a604:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2a608:	mov	r4, r0
   2a60c:	cmp	r4, r9
   2a610:	mov	r1, r9
   2a614:	beq	2a638 <main@@Base+0x14780>
   2a618:	ldr	r0, [r8]
   2a61c:	bl	2dfe8 <flatcc_builder_end_struct@@Base>
   2a620:	cmp	r0, #0
   2a624:	mov	r1, r4
   2a628:	str	r0, [r5]
   2a62c:	bne	2a67c <main@@Base+0x147c4>
   2a630:	b	2a638 <main@@Base+0x14780>
   2a634:	mov	r1, r4
   2a638:	mov	r0, r8
   2a63c:	b	2a66c <main@@Base+0x147b4>
   2a640:	mov	r0, r8
   2a644:	mov	r1, r4
   2a648:	mov	r2, r9
   2a64c:	mov	r3, #21
   2a650:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2a654:	mov	r4, r0
   2a658:	ldr	r0, [r8, #20]
   2a65c:	cmp	r0, #0
   2a660:	beq	2a6c0 <main@@Base+0x14808>
   2a664:	mov	r0, r8
   2a668:	mov	r1, r4
   2a66c:	mov	r2, r9
   2a670:	mov	r3, #33	; 0x21
   2a674:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2a678:	mov	r4, r0
   2a67c:	ldr	r0, [r8, #20]
   2a680:	cmp	r0, #0
   2a684:	bne	2a6ac <main@@Base+0x147f4>
   2a688:	ldr	r0, [r5]
   2a68c:	cmp	r0, #0
   2a690:	bne	2a6ac <main@@Base+0x147f4>
   2a694:	mov	r0, r8
   2a698:	mov	r1, r4
   2a69c:	mov	r2, r9
   2a6a0:	mov	r3, #33	; 0x21
   2a6a4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2a6a8:	mov	r4, r0
   2a6ac:	mov	r0, r4
   2a6b0:	sub	sp, fp, #28
   2a6b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a6b8:	add	r4, r4, #4
   2a6bc:	b	2a6ac <main@@Base+0x147f4>
   2a6c0:	ldr	r0, [r8]
   2a6c4:	bl	2fbc8 <flatcc_builder_end_table@@Base>
   2a6c8:	cmp	r0, #0
   2a6cc:	str	r0, [r5]
   2a6d0:	bne	2a67c <main@@Base+0x147c4>
   2a6d4:	b	2a664 <main@@Base+0x147ac>
   2a6d8:	bne	2a6e8 <main@@Base+0x14830>
   2a6dc:	ldrb	r0, [r4, #2]!
   2a6e0:	cmp	r0, #32
   2a6e4:	bhi	2a6f8 <main@@Base+0x14840>
   2a6e8:	mov	r0, r8
   2a6ec:	mov	r2, r9
   2a6f0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a6f4:	mov	r4, r0
   2a6f8:	cmp	r4, r9
   2a6fc:	mov	r3, r9
   2a700:	beq	2a744 <main@@Base+0x1488c>
   2a704:	ldrb	r0, [r4]
   2a708:	cmp	r0, #125	; 0x7d
   2a70c:	bne	2a740 <main@@Base+0x14888>
   2a710:	add	r1, r4, #1
   2a714:	sub	r0, r9, r1
   2a718:	cmp	r0, #2
   2a71c:	blt	2b204 <main@@Base+0x1534c>
   2a720:	ldrb	r0, [r1]
   2a724:	cmp	r0, #32
   2a728:	bhi	2aba4 <main@@Base+0x14cec>
   2a72c:	bne	2b204 <main@@Base+0x1534c>
   2a730:	ldrb	r0, [r4, #2]!
   2a734:	cmp	r0, #32
   2a738:	bhi	2a60c <main@@Base+0x14754>
   2a73c:	b	2b204 <main@@Base+0x1534c>
   2a740:	mov	r3, r4
   2a744:	str	r5, [sp, #12]
   2a748:	cmp	r3, r9
   2a74c:	mov	sl, r9
   2a750:	beq	2a780 <main@@Base+0x148c8>
   2a754:	ldrb	r0, [r3]
   2a758:	cmp	r0, #34	; 0x22
   2a75c:	bne	2a768 <main@@Base+0x148b0>
   2a760:	add	sl, r3, #1
   2a764:	b	2a780 <main@@Base+0x148c8>
   2a768:	mov	r1, r3
   2a76c:	mov	r0, r8
   2a770:	mov	r2, r9
   2a774:	mov	r3, #5
   2a778:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2a77c:	mov	sl, r0
   2a780:	sub	r0, r9, sl
   2a784:	mov	r1, #8
   2a788:	cmp	r0, #8
   2a78c:	movcs	r0, r1
   2a790:	sub	r1, r0, #1
   2a794:	cmp	r1, #7
   2a798:	bhi	2a8e0 <main@@Base+0x14a28>
   2a79c:	add	r6, pc, #36	; 0x24
   2a7a0:	mov	r0, #0
   2a7a4:	mov	ip, #0
   2a7a8:	mov	lr, #0
   2a7ac:	mov	r2, #0
   2a7b0:	mov	r3, #0
   2a7b4:	mov	r4, #0
   2a7b8:	mov	r7, #0
   2a7bc:	ldr	r5, [r6, r1, lsl #2]
   2a7c0:	mov	r1, #0
   2a7c4:	add	pc, r6, r5
   2a7c8:	andeq	r0, r0, r4, rrx
   2a7cc:	andeq	r0, r0, ip, asr r0
   2a7d0:	andeq	r0, r0, r4, asr r0
   2a7d4:	andeq	r0, r0, ip, asr #32
   2a7d8:	andeq	r0, r0, r0, asr #32
   2a7dc:	andeq	r0, r0, r4, lsr r0
   2a7e0:	andeq	r0, r0, r4, lsr #32
   2a7e4:	andeq	r0, r0, r0, lsr #32
   2a7e8:	ldrb	ip, [sl, #7]
   2a7ec:	ldrb	r1, [sl, #6]
   2a7f0:	mov	lr, r0
   2a7f4:	orr	r1, ip, r1, lsl #8
   2a7f8:	mov	r0, r1
   2a7fc:	ldrb	r1, [sl, #5]
   2a800:	mov	r2, lr
   2a804:	orr	r0, r0, r1, lsl #16
   2a808:	ldrb	r1, [sl, #4]
   2a80c:	mov	r3, r2
   2a810:	orr	r0, r0, r1, lsl #24
   2a814:	ldrb	r1, [sl, #3]
   2a818:	orr	r4, r1, r3
   2a81c:	ldrb	r1, [sl, #2]
   2a820:	orr	r7, r4, r1, lsl #8
   2a824:	ldrb	r1, [sl, #1]
   2a828:	orr	r1, r7, r1, lsl #16
   2a82c:	movw	r2, #25966	; 0x656e
   2a830:	movt	r2, #24428	; 0x5f6c
   2a834:	eor	r0, r0, r2
   2a838:	ldrb	r2, [sl]
   2a83c:	orr	r1, r1, r2, lsl #24
   2a840:	movw	r2, #26994	; 0x6972
   2a844:	movt	r2, #26721	; 0x6861
   2a848:	eor	r1, r1, r2
   2a84c:	orrs	r0, r0, r1
   2a850:	bne	2a8e0 <main@@Base+0x14a28>
   2a854:	add	r4, sl, #8
   2a858:	mov	r2, #8
   2a85c:	sub	r0, r9, r4
   2a860:	cmp	r0, #8
   2a864:	movcc	r2, r0
   2a868:	sub	r1, r2, #3
   2a86c:	cmp	r1, #6
   2a870:	bcs	2a8ec <main@@Base+0x14a34>
   2a874:	ldrb	r1, [sl, #10]
   2a878:	lsl	r1, r1, #8
   2a87c:	ldrb	r2, [sl, #9]
   2a880:	orr	r1, r1, r2, lsl #16
   2a884:	ldrb	r2, [r4]
   2a888:	bic	r1, r1, #255	; 0xff
   2a88c:	orr	r1, r1, r2, lsl #24
   2a890:	movw	r2, #26624	; 0x6800
   2a894:	movt	r2, #26484	; 0x6774
   2a898:	teq	r1, r2
   2a89c:	bne	2a960 <main@@Base+0x14aa8>
   2a8a0:	cmp	r0, #4
   2a8a4:	blt	2a960 <main@@Base+0x14aa8>
   2a8a8:	ldrb	r0, [sl, #11]
   2a8ac:	cmp	r0, #34	; 0x22
   2a8b0:	bne	2a960 <main@@Base+0x14aa8>
   2a8b4:	add	r1, sl, #12
   2a8b8:	sub	r0, r9, r1
   2a8bc:	cmp	r0, #2
   2a8c0:	blt	2a914 <main@@Base+0x14a5c>
   2a8c4:	ldrb	r0, [r1]
   2a8c8:	cmp	r0, #32
   2a8cc:	bls	2a904 <main@@Base+0x14a4c>
   2a8d0:	mov	sl, r1
   2a8d4:	cmp	sl, r9
   2a8d8:	bne	2a92c <main@@Base+0x14a74>
   2a8dc:	b	2aa40 <main@@Base+0x14b88>
   2a8e0:	mov	r0, r8
   2a8e4:	mov	r1, sl
   2a8e8:	b	2a968 <main@@Base+0x14ab0>
   2a8ec:	mov	r1, #0
   2a8f0:	cmp	r2, #1
   2a8f4:	beq	2a884 <main@@Base+0x149cc>
   2a8f8:	cmp	r2, #2
   2a8fc:	beq	2a87c <main@@Base+0x149c4>
   2a900:	b	2a960 <main@@Base+0x14aa8>
   2a904:	bne	2a914 <main@@Base+0x14a5c>
   2a908:	ldrb	r0, [sl, #13]!
   2a90c:	cmp	r0, #32
   2a910:	bhi	2a924 <main@@Base+0x14a6c>
   2a914:	mov	r0, r8
   2a918:	mov	r2, r9
   2a91c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a920:	mov	sl, r0
   2a924:	cmp	sl, r9
   2a928:	beq	2aa40 <main@@Base+0x14b88>
   2a92c:	ldrb	r0, [sl]
   2a930:	cmp	r0, #58	; 0x3a
   2a934:	bne	2aa40 <main@@Base+0x14b88>
   2a938:	add	r1, sl, #1
   2a93c:	sub	r0, r9, r1
   2a940:	cmp	r0, #2
   2a944:	blt	2aa68 <main@@Base+0x14bb0>
   2a948:	ldrb	r0, [r1]
   2a94c:	cmp	r0, #32
   2a950:	bls	2aa58 <main@@Base+0x14ba0>
   2a954:	mov	sl, r1
   2a958:	cmp	r4, sl
   2a95c:	bne	2aa80 <main@@Base+0x14bc8>
   2a960:	mov	r0, r8
   2a964:	mov	r1, r4
   2a968:	mov	r2, r9
   2a96c:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   2a970:	mov	r2, r0
   2a974:	ldr	r5, [sp, #12]
   2a978:	sub	r0, r9, r2
   2a97c:	cmp	r0, #2
   2a980:	blt	2a9b4 <main@@Base+0x14afc>
   2a984:	ldrb	r0, [r2]
   2a988:	cmp	r0, #32
   2a98c:	bls	2a9a0 <main@@Base+0x14ae8>
   2a990:	mov	r3, r2
   2a994:	cmp	r3, r9
   2a998:	bne	2a9d0 <main@@Base+0x14b18>
   2a99c:	b	2ab78 <main@@Base+0x14cc0>
   2a9a0:	bne	2a9b4 <main@@Base+0x14afc>
   2a9a4:	mov	r3, r2
   2a9a8:	ldrb	r0, [r3, #1]!
   2a9ac:	cmp	r0, #32
   2a9b0:	bhi	2a9c8 <main@@Base+0x14b10>
   2a9b4:	mov	r1, r2
   2a9b8:	mov	r0, r8
   2a9bc:	mov	r2, r9
   2a9c0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2a9c4:	mov	r3, r0
   2a9c8:	cmp	r3, r9
   2a9cc:	beq	2ab78 <main@@Base+0x14cc0>
   2a9d0:	ldrb	r0, [r3]
   2a9d4:	cmp	r0, #44	; 0x2c
   2a9d8:	bne	2ab80 <main@@Base+0x14cc8>
   2a9dc:	add	r1, r3, #1
   2a9e0:	sub	r0, r9, r1
   2a9e4:	cmp	r0, #2
   2a9e8:	blt	2aa18 <main@@Base+0x14b60>
   2a9ec:	ldrb	r0, [r1]
   2a9f0:	cmp	r0, #32
   2a9f4:	bls	2aa08 <main@@Base+0x14b50>
   2a9f8:	mov	r3, r1
   2a9fc:	cmp	r3, r9
   2aa00:	bne	2aa30 <main@@Base+0x14b78>
   2aa04:	b	2abac <main@@Base+0x14cf4>
   2aa08:	bne	2aa18 <main@@Base+0x14b60>
   2aa0c:	ldrb	r0, [r3, #2]!
   2aa10:	cmp	r0, #32
   2aa14:	bhi	2aa28 <main@@Base+0x14b70>
   2aa18:	mov	r0, r8
   2aa1c:	mov	r2, r9
   2aa20:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2aa24:	mov	r3, r0
   2aa28:	cmp	r3, r9
   2aa2c:	beq	2abac <main@@Base+0x14cf4>
   2aa30:	ldrb	r0, [r3]
   2aa34:	cmp	r0, #125	; 0x7d
   2aa38:	bne	2a748 <main@@Base+0x14890>
   2aa3c:	b	2ab88 <main@@Base+0x14cd0>
   2aa40:	mov	r0, r8
   2aa44:	mov	r1, sl
   2aa48:	mov	r2, r9
   2aa4c:	mov	r3, #4
   2aa50:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2aa54:	b	2aa74 <main@@Base+0x14bbc>
   2aa58:	bne	2aa68 <main@@Base+0x14bb0>
   2aa5c:	ldrb	r0, [sl, #2]!
   2aa60:	cmp	r0, #32
   2aa64:	bhi	2aa78 <main@@Base+0x14bc0>
   2aa68:	mov	r0, r8
   2aa6c:	mov	r2, r9
   2aa70:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2aa74:	mov	sl, r0
   2aa78:	cmp	r4, sl
   2aa7c:	beq	2a960 <main@@Base+0x14aa8>
   2aa80:	mov	r4, #0
   2aa84:	cmp	sl, r9
   2aa88:	str	r4, [sp, #28]
   2aa8c:	str	r4, [sp, #24]
   2aa90:	strh	r4, [sp, #16]
   2aa94:	str	r4, [sp, #20]
   2aa98:	beq	2aae4 <main@@Base+0x14c2c>
   2aa9c:	add	r0, sp, #24
   2aaa0:	mov	r1, sl
   2aaa4:	mov	r2, r9
   2aaa8:	add	r3, sp, #20
   2aaac:	str	r0, [sp]
   2aab0:	mov	r0, r8
   2aab4:	bl	362a4 <flatcc_json_parser_integer@@Base>
   2aab8:	cmp	r0, sl
   2aabc:	beq	2aaec <main@@Base+0x14c34>
   2aac0:	mov	r2, r0
   2aac4:	ldr	r0, [sp, #20]
   2aac8:	cmp	r0, #0
   2aacc:	beq	2aaf4 <main@@Base+0x14c3c>
   2aad0:	mov	r1, r2
   2aad4:	mov	r0, r8
   2aad8:	mov	r2, r9
   2aadc:	mov	r3, #8
   2aae0:	b	2ab18 <main@@Base+0x14c60>
   2aae4:	mov	r2, r9
   2aae8:	b	2ab20 <main@@Base+0x14c68>
   2aaec:	mov	r2, sl
   2aaf0:	b	2ab20 <main@@Base+0x14c68>
   2aaf4:	ldr	r0, [sp, #24]
   2aaf8:	ldr	r1, [sp, #28]
   2aafc:	subs	r3, r0, #65536	; 0x10000
   2ab00:	sbcs	r1, r1, #0
   2ab04:	bcc	2ab6c <main@@Base+0x14cb4>
   2ab08:	mov	r1, r2
   2ab0c:	mov	r0, r8
   2ab10:	mov	r2, r9
   2ab14:	mov	r3, #7
   2ab18:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2ab1c:	mov	r2, r0
   2ab20:	ldr	r0, [sp, #8]
   2ab24:	cmp	sl, r2
   2ab28:	bne	2ab64 <main@@Base+0x14cac>
   2ab2c:	add	r0, sp, #16
   2ab30:	mov	r1, sl
   2ab34:	mov	r2, r9
   2ab38:	str	r0, [sp]
   2ab3c:	mov	r0, r8
   2ab40:	ldr	r3, [pc, #1840]	; 2b278 <main@@Base+0x153c0>
   2ab44:	add	r3, pc, r3
   2ab48:	bl	2b8e8 <main@@Base+0x15a30>
   2ab4c:	mov	r2, r0
   2ab50:	cmp	r0, sl
   2ab54:	cmpne	r2, r9
   2ab58:	beq	2b24c <main@@Base+0x15394>
   2ab5c:	ldrh	r4, [sp, #16]
   2ab60:	ldr	r0, [sp, #8]
   2ab64:	strh	r4, [r0]
   2ab68:	b	2a974 <main@@Base+0x14abc>
   2ab6c:	mov	r4, r0
   2ab70:	strh	r0, [sp, #16]
   2ab74:	b	2ab20 <main@@Base+0x14c68>
   2ab78:	mov	r1, r9
   2ab7c:	b	2a638 <main@@Base+0x14780>
   2ab80:	cmp	r0, #125	; 0x7d
   2ab84:	bne	2b1dc <main@@Base+0x15324>
   2ab88:	add	r1, r3, #1
   2ab8c:	sub	r0, r9, r1
   2ab90:	cmp	r0, #2
   2ab94:	blt	2b204 <main@@Base+0x1534c>
   2ab98:	ldrb	r0, [r1]
   2ab9c:	cmp	r0, #32
   2aba0:	bls	2b1f0 <main@@Base+0x15338>
   2aba4:	mov	r4, r1
   2aba8:	b	2a60c <main@@Base+0x14754>
   2abac:	mov	r0, r8
   2abb0:	mov	r1, r9
   2abb4:	b	2b1e4 <main@@Base+0x1532c>
   2abb8:	bne	2abc8 <main@@Base+0x14d10>
   2abbc:	ldrb	r0, [r4, #2]!
   2abc0:	cmp	r0, #32
   2abc4:	bhi	2abd8 <main@@Base+0x14d20>
   2abc8:	mov	r0, r8
   2abcc:	mov	r2, r9
   2abd0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2abd4:	mov	r4, r0
   2abd8:	cmp	r4, r9
   2abdc:	mov	r2, r9
   2abe0:	beq	2ac24 <main@@Base+0x14d6c>
   2abe4:	ldrb	r0, [r4]
   2abe8:	cmp	r0, #125	; 0x7d
   2abec:	bne	2ac20 <main@@Base+0x14d68>
   2abf0:	add	r1, r4, #1
   2abf4:	sub	r0, r9, r1
   2abf8:	cmp	r0, #2
   2abfc:	blt	2b23c <main@@Base+0x15384>
   2ac00:	ldrb	r0, [r1]
   2ac04:	cmp	r0, #32
   2ac08:	bhi	2b1c8 <main@@Base+0x15310>
   2ac0c:	bne	2b23c <main@@Base+0x15384>
   2ac10:	ldrb	r0, [r4, #2]!
   2ac14:	cmp	r0, #32
   2ac18:	bhi	2a658 <main@@Base+0x147a0>
   2ac1c:	b	2b23c <main@@Base+0x15384>
   2ac20:	mov	r2, r4
   2ac24:	str	r5, [sp, #12]
   2ac28:	cmp	r2, r9
   2ac2c:	mov	sl, r9
   2ac30:	beq	2ac60 <main@@Base+0x14da8>
   2ac34:	ldrb	r0, [r2]
   2ac38:	cmp	r0, #34	; 0x22
   2ac3c:	bne	2ac48 <main@@Base+0x14d90>
   2ac40:	add	sl, r2, #1
   2ac44:	b	2ac60 <main@@Base+0x14da8>
   2ac48:	mov	r1, r2
   2ac4c:	mov	r0, r8
   2ac50:	mov	r2, r9
   2ac54:	mov	r3, #5
   2ac58:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2ac5c:	mov	sl, r0
   2ac60:	sub	r0, r9, sl
   2ac64:	mov	r1, #8
   2ac68:	cmp	r0, #8
   2ac6c:	movcs	r0, r1
   2ac70:	sub	r1, r0, #1
   2ac74:	cmp	r1, #7
   2ac78:	bhi	2aea4 <main@@Base+0x14fec>
   2ac7c:	add	r6, pc, #36	; 0x24
   2ac80:	mov	r0, #0
   2ac84:	mov	ip, #0
   2ac88:	mov	lr, #0
   2ac8c:	mov	r2, #0
   2ac90:	mov	r3, #0
   2ac94:	mov	r4, #0
   2ac98:	mov	r5, #0
   2ac9c:	mov	r7, #0
   2aca0:	ldr	r1, [r6, r1, lsl #2]
   2aca4:	add	pc, r6, r1
   2aca8:	andeq	r0, r0, r4, rrx
   2acac:	andeq	r0, r0, ip, asr r0
   2acb0:	andeq	r0, r0, r4, asr r0
   2acb4:	andeq	r0, r0, ip, asr #32
   2acb8:	andeq	r0, r0, r0, asr #32
   2acbc:	andeq	r0, r0, r4, lsr r0
   2acc0:	andeq	r0, r0, r4, lsr #32
   2acc4:	andeq	r0, r0, r0, lsr #32
   2acc8:	ldrb	ip, [sl, #7]
   2accc:	ldrb	r1, [sl, #6]
   2acd0:	mov	lr, r0
   2acd4:	orr	r1, ip, r1, lsl #8
   2acd8:	mov	r0, r1
   2acdc:	ldrb	r1, [sl, #5]
   2ace0:	mov	r2, lr
   2ace4:	orr	r0, r0, r1, lsl #16
   2ace8:	ldrb	r1, [sl, #4]
   2acec:	mov	r3, r2
   2acf0:	orr	r0, r0, r1, lsl #24
   2acf4:	ldrb	r1, [sl, #3]
   2acf8:	orr	r4, r1, r3
   2acfc:	ldrb	r1, [sl, #2]
   2ad00:	orr	r5, r4, r1, lsl #8
   2ad04:	ldrb	r1, [sl, #1]
   2ad08:	orr	r7, r5, r1, lsl #16
   2ad0c:	movw	r1, #24948	; 0x6174
   2ad10:	movw	r2, #28530	; 0x6f72
   2ad14:	movt	r1, #25695	; 0x645f
   2ad18:	movt	r2, #29559	; 0x7377
   2ad1c:	eor	r0, r0, r1
   2ad20:	ldrb	r1, [sl]
   2ad24:	orr	r1, r7, r1, lsl #24
   2ad28:	eor	r1, r1, r2
   2ad2c:	orrs	r0, r0, r1
   2ad30:	bne	2aea4 <main@@Base+0x14fec>
   2ad34:	add	r1, sl, #8
   2ad38:	mov	r2, #8
   2ad3c:	sub	r0, r9, r1
   2ad40:	cmp	r0, #8
   2ad44:	movcs	r0, r2
   2ad48:	sub	r2, r0, #1
   2ad4c:	cmp	r2, #7
   2ad50:	bhi	2aeb0 <main@@Base+0x14ff8>
   2ad54:	add	r6, pc, #40	; 0x28
   2ad58:	mov	r0, #0
   2ad5c:	mov	lr, #0
   2ad60:	mov	r4, #0
   2ad64:	mov	r3, #0
   2ad68:	mov	r5, #0
   2ad6c:	mov	r7, #0
   2ad70:	ldr	ip, [r6, r2, lsl #2]
   2ad74:	mov	r2, #0
   2ad78:	str	r2, [sp, #8]
   2ad7c:	mov	r2, #0
   2ad80:	add	pc, r6, ip
   2ad84:	andeq	r0, r0, ip, rrx
   2ad88:	andeq	r0, r0, r4, rrx
   2ad8c:	andeq	r0, r0, ip, asr r0
   2ad90:	andeq	r0, r0, r4, asr r0
   2ad94:	andeq	r0, r0, r8, asr #32
   2ad98:	andeq	r0, r0, ip, lsr r0
   2ad9c:	andeq	r0, r0, r8, lsr #32
   2ada0:	andeq	r0, r0, r0, lsr #32
   2ada4:	ldrb	r2, [sl, #15]
   2ada8:	str	r2, [sp, #8]
   2adac:	ldrb	r2, [sl, #14]
   2adb0:	ldr	r3, [sp, #8]
   2adb4:	mov	lr, r0
   2adb8:	orr	r2, r3, r2, lsl #8
   2adbc:	mov	r0, r2
   2adc0:	ldrb	r2, [sl, #13]
   2adc4:	mov	r4, lr
   2adc8:	orr	r0, r0, r2, lsl #16
   2adcc:	ldrb	r2, [sl, #12]
   2add0:	mov	r3, r4
   2add4:	orr	r0, r0, r2, lsl #24
   2add8:	ldrb	r2, [sl, #11]
   2addc:	orr	r2, r2, r3
   2ade0:	ldrb	r3, [sl, #10]
   2ade4:	orr	r5, r2, r3, lsl #8
   2ade8:	ldrb	r2, [sl, #9]
   2adec:	orr	r7, r5, r2, lsl #16
   2adf0:	movw	r2, #24941	; 0x616d
   2adf4:	movw	r3, #25451	; 0x636b
   2adf8:	movt	r2, #24420	; 0x5f64
   2adfc:	movt	r3, #29793	; 0x7461
   2ae00:	eor	r0, r0, r2
   2ae04:	ldrb	r2, [r1]
   2ae08:	orr	r2, r7, r2, lsl #24
   2ae0c:	eor	r2, r2, r3
   2ae10:	orrs	r0, r0, r2
   2ae14:	bne	2aeb0 <main@@Base+0x14ff8>
   2ae18:	add	r4, sl, #16
   2ae1c:	mov	r2, #8
   2ae20:	sub	r0, r9, r4
   2ae24:	cmp	r0, #8
   2ae28:	movcc	r2, r0
   2ae2c:	sub	r1, r2, #3
   2ae30:	cmp	r1, #6
   2ae34:	bcs	2aeb8 <main@@Base+0x15000>
   2ae38:	ldrb	r1, [sl, #18]
   2ae3c:	lsl	r1, r1, #8
   2ae40:	ldrb	r2, [sl, #17]
   2ae44:	orr	r1, r1, r2, lsl #16
   2ae48:	ldrb	r2, [r4]
   2ae4c:	bic	r1, r1, #255	; 0xff
   2ae50:	orr	r1, r1, r2, lsl #24
   2ae54:	movw	r2, #25856	; 0x6500
   2ae58:	movt	r2, #24935	; 0x6167
   2ae5c:	teq	r1, r2
   2ae60:	bne	2af2c <main@@Base+0x15074>
   2ae64:	cmp	r0, #4
   2ae68:	blt	2af2c <main@@Base+0x15074>
   2ae6c:	ldrb	r0, [sl, #19]
   2ae70:	cmp	r0, #34	; 0x22
   2ae74:	bne	2af2c <main@@Base+0x15074>
   2ae78:	add	r1, sl, #20
   2ae7c:	sub	r0, r9, r1
   2ae80:	cmp	r0, #2
   2ae84:	blt	2aee0 <main@@Base+0x15028>
   2ae88:	ldrb	r0, [r1]
   2ae8c:	cmp	r0, #32
   2ae90:	bls	2aed0 <main@@Base+0x15018>
   2ae94:	mov	sl, r1
   2ae98:	cmp	sl, r9
   2ae9c:	bne	2aef8 <main@@Base+0x15040>
   2aea0:	b	2b00c <main@@Base+0x15154>
   2aea4:	mov	r0, r8
   2aea8:	mov	r1, sl
   2aeac:	b	2af34 <main@@Base+0x1507c>
   2aeb0:	mov	r0, r8
   2aeb4:	b	2af34 <main@@Base+0x1507c>
   2aeb8:	mov	r1, #0
   2aebc:	cmp	r2, #1
   2aec0:	beq	2ae48 <main@@Base+0x14f90>
   2aec4:	cmp	r2, #2
   2aec8:	beq	2ae40 <main@@Base+0x14f88>
   2aecc:	b	2af2c <main@@Base+0x15074>
   2aed0:	bne	2aee0 <main@@Base+0x15028>
   2aed4:	ldrb	r0, [sl, #21]!
   2aed8:	cmp	r0, #32
   2aedc:	bhi	2aef0 <main@@Base+0x15038>
   2aee0:	mov	r0, r8
   2aee4:	mov	r2, r9
   2aee8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2aeec:	mov	sl, r0
   2aef0:	cmp	sl, r9
   2aef4:	beq	2b00c <main@@Base+0x15154>
   2aef8:	ldrb	r0, [sl]
   2aefc:	cmp	r0, #58	; 0x3a
   2af00:	bne	2b00c <main@@Base+0x15154>
   2af04:	add	r1, sl, #1
   2af08:	sub	r0, r9, r1
   2af0c:	cmp	r0, #2
   2af10:	blt	2b034 <main@@Base+0x1517c>
   2af14:	ldrb	r0, [r1]
   2af18:	cmp	r0, #32
   2af1c:	bls	2b024 <main@@Base+0x1516c>
   2af20:	mov	sl, r1
   2af24:	cmp	r4, sl
   2af28:	bne	2b04c <main@@Base+0x15194>
   2af2c:	mov	r0, r8
   2af30:	mov	r1, r4
   2af34:	mov	r2, r9
   2af38:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   2af3c:	ldr	r5, [sp, #12]
   2af40:	mov	r4, r0
   2af44:	sub	r0, r9, r4
   2af48:	cmp	r0, #2
   2af4c:	blt	2af80 <main@@Base+0x150c8>
   2af50:	ldrb	r0, [r4]
   2af54:	cmp	r0, #32
   2af58:	bls	2af6c <main@@Base+0x150b4>
   2af5c:	mov	r2, r4
   2af60:	cmp	r2, r9
   2af64:	bne	2af9c <main@@Base+0x150e4>
   2af68:	b	2b19c <main@@Base+0x152e4>
   2af6c:	bne	2af80 <main@@Base+0x150c8>
   2af70:	mov	r2, r4
   2af74:	ldrb	r0, [r2, #1]!
   2af78:	cmp	r0, #32
   2af7c:	bhi	2af94 <main@@Base+0x150dc>
   2af80:	mov	r0, r8
   2af84:	mov	r1, r4
   2af88:	mov	r2, r9
   2af8c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2af90:	mov	r2, r0
   2af94:	cmp	r2, r9
   2af98:	beq	2b19c <main@@Base+0x152e4>
   2af9c:	ldrb	r0, [r2]
   2afa0:	cmp	r0, #44	; 0x2c
   2afa4:	bne	2b1a4 <main@@Base+0x152ec>
   2afa8:	add	r1, r2, #1
   2afac:	sub	r0, r9, r1
   2afb0:	cmp	r0, #2
   2afb4:	blt	2afe4 <main@@Base+0x1512c>
   2afb8:	ldrb	r0, [r1]
   2afbc:	cmp	r0, #32
   2afc0:	bls	2afd4 <main@@Base+0x1511c>
   2afc4:	mov	r2, r1
   2afc8:	cmp	r2, r9
   2afcc:	bne	2affc <main@@Base+0x15144>
   2afd0:	b	2b1d0 <main@@Base+0x15318>
   2afd4:	bne	2afe4 <main@@Base+0x1512c>
   2afd8:	ldrb	r0, [r2, #2]!
   2afdc:	cmp	r0, #32
   2afe0:	bhi	2aff4 <main@@Base+0x1513c>
   2afe4:	mov	r0, r8
   2afe8:	mov	r2, r9
   2afec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2aff0:	mov	r2, r0
   2aff4:	cmp	r2, r9
   2aff8:	beq	2b1d0 <main@@Base+0x15318>
   2affc:	ldrb	r0, [r2]
   2b000:	cmp	r0, #125	; 0x7d
   2b004:	bne	2ac28 <main@@Base+0x14d70>
   2b008:	b	2b1ac <main@@Base+0x152f4>
   2b00c:	mov	r0, r8
   2b010:	mov	r1, sl
   2b014:	mov	r2, r9
   2b018:	mov	r3, #4
   2b01c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b020:	b	2b040 <main@@Base+0x15188>
   2b024:	bne	2b034 <main@@Base+0x1517c>
   2b028:	ldrb	r0, [sl, #2]!
   2b02c:	cmp	r0, #32
   2b030:	bhi	2b044 <main@@Base+0x1518c>
   2b034:	mov	r0, r8
   2b038:	mov	r2, r9
   2b03c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b040:	mov	sl, r0
   2b044:	cmp	r4, sl
   2b048:	beq	2af2c <main@@Base+0x15074>
   2b04c:	mov	r6, #0
   2b050:	cmp	sl, r9
   2b054:	str	r6, [sp, #28]
   2b058:	str	r6, [sp, #24]
   2b05c:	str	r6, [sp, #16]
   2b060:	str	r6, [sp, #20]
   2b064:	beq	2b0c4 <main@@Base+0x1520c>
   2b068:	add	r0, sp, #24
   2b06c:	mov	r1, sl
   2b070:	mov	r2, r9
   2b074:	add	r3, sp, #20
   2b078:	str	r0, [sp]
   2b07c:	mov	r0, r8
   2b080:	bl	362a4 <flatcc_json_parser_integer@@Base>
   2b084:	cmp	r0, sl
   2b088:	beq	2b0d4 <main@@Base+0x1521c>
   2b08c:	ldr	r2, [sp, #20]
   2b090:	mov	r4, r0
   2b094:	ldr	r0, [sp, #24]
   2b098:	ldr	r1, [sp, #28]
   2b09c:	cmp	r2, #0
   2b0a0:	beq	2b0e4 <main@@Base+0x1522c>
   2b0a4:	subs	r2, r0, #-2147483647	; 0x80000001
   2b0a8:	sbcs	r1, r1, #0
   2b0ac:	bcc	2b114 <main@@Base+0x1525c>
   2b0b0:	mov	r0, r8
   2b0b4:	mov	r1, r4
   2b0b8:	mov	r2, r9
   2b0bc:	mov	r3, #8
   2b0c0:	b	2b100 <main@@Base+0x15248>
   2b0c4:	mov	r4, r9
   2b0c8:	cmp	sl, r4
   2b0cc:	bne	2b160 <main@@Base+0x152a8>
   2b0d0:	b	2b12c <main@@Base+0x15274>
   2b0d4:	mov	r4, sl
   2b0d8:	cmp	sl, r4
   2b0dc:	bne	2b160 <main@@Base+0x152a8>
   2b0e0:	b	2b12c <main@@Base+0x15274>
   2b0e4:	subs	r2, r0, #-2147483648	; 0x80000000
   2b0e8:	sbcs	r1, r1, #0
   2b0ec:	bcc	2b11c <main@@Base+0x15264>
   2b0f0:	mov	r0, r8
   2b0f4:	mov	r1, r4
   2b0f8:	mov	r2, r9
   2b0fc:	mov	r3, #7
   2b100:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b104:	mov	r4, r0
   2b108:	cmp	sl, r4
   2b10c:	bne	2b160 <main@@Base+0x152a8>
   2b110:	b	2b12c <main@@Base+0x15274>
   2b114:	rsb	r6, r0, #0
   2b118:	b	2b120 <main@@Base+0x15268>
   2b11c:	mov	r6, r0
   2b120:	str	r6, [sp, #16]
   2b124:	cmp	sl, r4
   2b128:	bne	2b160 <main@@Base+0x152a8>
   2b12c:	add	r0, sp, #16
   2b130:	mov	r1, sl
   2b134:	mov	r2, r9
   2b138:	str	r0, [sp]
   2b13c:	mov	r0, r8
   2b140:	ldr	r3, [pc, #300]	; 2b274 <main@@Base+0x153bc>
   2b144:	add	r3, pc, r3
   2b148:	bl	23f4c <main@@Base+0xe094>
   2b14c:	mov	r4, r0
   2b150:	cmp	r0, sl
   2b154:	cmpne	r4, r9
   2b158:	beq	2b268 <main@@Base+0x153b0>
   2b15c:	ldr	r6, [sp, #16]
   2b160:	ldr	r5, [sp, #12]
   2b164:	cmp	r6, #0
   2b168:	bne	2b178 <main@@Base+0x152c0>
   2b16c:	ldrb	r0, [r8, #8]
   2b170:	tst	r0, #2
   2b174:	beq	2af44 <main@@Base+0x1508c>
   2b178:	ldr	r0, [r8]
   2b17c:	mov	r1, #0
   2b180:	mov	r2, #4
   2b184:	mov	r3, #4
   2b188:	bl	3063c <flatcc_builder_table_add@@Base>
   2b18c:	cmp	r0, #0
   2b190:	beq	2b268 <main@@Base+0x153b0>
   2b194:	str	r6, [r0]
   2b198:	b	2af44 <main@@Base+0x1508c>
   2b19c:	mov	r4, r9
   2b1a0:	b	2a658 <main@@Base+0x147a0>
   2b1a4:	cmp	r0, #125	; 0x7d
   2b1a8:	bne	2b214 <main@@Base+0x1535c>
   2b1ac:	add	r1, r2, #1
   2b1b0:	sub	r0, r9, r1
   2b1b4:	cmp	r0, #2
   2b1b8:	blt	2b23c <main@@Base+0x15384>
   2b1bc:	ldrb	r0, [r1]
   2b1c0:	cmp	r0, #32
   2b1c4:	bls	2b228 <main@@Base+0x15370>
   2b1c8:	mov	r4, r1
   2b1cc:	b	2a658 <main@@Base+0x147a0>
   2b1d0:	mov	r0, r8
   2b1d4:	mov	r1, r9
   2b1d8:	b	2b21c <main@@Base+0x15364>
   2b1dc:	mov	r0, r8
   2b1e0:	mov	r1, r3
   2b1e4:	mov	r2, r9
   2b1e8:	mov	r3, #10
   2b1ec:	b	2a604 <main@@Base+0x1474c>
   2b1f0:	bne	2b204 <main@@Base+0x1534c>
   2b1f4:	ldrb	r0, [r3, #2]!
   2b1f8:	mov	r4, r3
   2b1fc:	cmp	r0, #32
   2b200:	bhi	2a60c <main@@Base+0x14754>
   2b204:	mov	r0, r8
   2b208:	mov	r2, r9
   2b20c:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b210:	b	2a608 <main@@Base+0x14750>
   2b214:	mov	r0, r8
   2b218:	mov	r1, r2
   2b21c:	mov	r2, r9
   2b220:	mov	r3, #10
   2b224:	b	2a650 <main@@Base+0x14798>
   2b228:	bne	2b23c <main@@Base+0x15384>
   2b22c:	ldrb	r0, [r2, #2]!
   2b230:	mov	r4, r2
   2b234:	cmp	r0, #32
   2b238:	bhi	2a658 <main@@Base+0x147a0>
   2b23c:	mov	r0, r8
   2b240:	mov	r2, r9
   2b244:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b248:	b	2a654 <main@@Base+0x1479c>
   2b24c:	mov	r1, r2
   2b250:	mov	r0, r8
   2b254:	mov	r2, r9
   2b258:	mov	r3, #33	; 0x21
   2b25c:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b260:	ldr	r5, [sp, #12]
   2b264:	b	2a608 <main@@Base+0x14750>
   2b268:	ldr	r5, [sp, #12]
   2b26c:	b	2a664 <main@@Base+0x147ac>
   2b270:	muleq	r2, r1, r5
   2b274:			; <UNDEFINED> instruction: 0x000311b8
   2b278:	andeq	r1, r3, r4, asr #15
   2b27c:	add	r0, r0, #1
   2b280:	uxtb	r1, r0
   2b284:	cmp	r1, #12
   2b288:	movhi	r0, #0
   2b28c:	bxhi	lr
   2b290:	ldr	r1, [pc, #12]	; 2b2a4 <main@@Base+0x153ec>
   2b294:	sxtb	r0, r0
   2b298:	add	r1, pc, r1
   2b29c:	ldr	r0, [r1, r0, lsl #2]
   2b2a0:	bx	lr
   2b2a4:	andeq	sp, r1, r4, asr #9
   2b2a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b2ac:	add	fp, sp, #28
   2b2b0:	sub	sp, sp, #36	; 0x24
   2b2b4:	mov	r5, r0
   2b2b8:	mov	r0, #0
   2b2bc:	mov	sl, r2
   2b2c0:	mov	r4, r1
   2b2c4:	mov	r1, #4
   2b2c8:	mov	r2, #4
   2b2cc:	str	r3, [sp, #12]
   2b2d0:	str	r0, [r3]
   2b2d4:	ldr	r0, [r5]
   2b2d8:	bl	2df00 <flatcc_builder_start_struct@@Base>
   2b2dc:	cmp	r0, #0
   2b2e0:	beq	2b364 <main@@Base+0x154ac>
   2b2e4:	cmp	r4, sl
   2b2e8:	beq	2b320 <main@@Base+0x15468>
   2b2ec:	ldrb	r1, [r4]
   2b2f0:	cmp	r1, #123	; 0x7b
   2b2f4:	bne	2b320 <main@@Base+0x15468>
   2b2f8:	add	r1, r4, #1
   2b2fc:	str	r0, [sp, #8]
   2b300:	sub	r0, sl, r1
   2b304:	cmp	r0, #2
   2b308:	blt	2b398 <main@@Base+0x154e0>
   2b30c:	ldrb	r0, [r1]
   2b310:	cmp	r0, #32
   2b314:	bls	2b388 <main@@Base+0x154d0>
   2b318:	mov	r4, r1
   2b31c:	b	2b3a8 <main@@Base+0x154f0>
   2b320:	mov	r0, r5
   2b324:	mov	r1, r4
   2b328:	mov	r2, sl
   2b32c:	mov	r3, #21
   2b330:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b334:	mov	r4, r0
   2b338:	cmp	r4, sl
   2b33c:	mov	r1, sl
   2b340:	beq	2b368 <main@@Base+0x154b0>
   2b344:	ldr	r0, [r5]
   2b348:	bl	2dfe8 <flatcc_builder_end_struct@@Base>
   2b34c:	ldr	r1, [sp, #12]
   2b350:	cmp	r0, #0
   2b354:	str	r0, [r1]
   2b358:	mov	r1, r4
   2b35c:	bne	2b37c <main@@Base+0x154c4>
   2b360:	b	2b368 <main@@Base+0x154b0>
   2b364:	mov	r1, r4
   2b368:	mov	r0, r5
   2b36c:	mov	r2, sl
   2b370:	mov	r3, #33	; 0x21
   2b374:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b378:	mov	r4, r0
   2b37c:	mov	r0, r4
   2b380:	sub	sp, fp, #28
   2b384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b388:	bne	2b398 <main@@Base+0x154e0>
   2b38c:	ldrb	r0, [r4, #2]!
   2b390:	cmp	r0, #32
   2b394:	bhi	2b3a8 <main@@Base+0x154f0>
   2b398:	mov	r0, r5
   2b39c:	mov	r2, sl
   2b3a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b3a4:	mov	r4, r0
   2b3a8:	cmp	r4, sl
   2b3ac:	mov	r3, sl
   2b3b0:	beq	2b3f4 <main@@Base+0x1553c>
   2b3b4:	ldrb	r0, [r4]
   2b3b8:	cmp	r0, #125	; 0x7d
   2b3bc:	bne	2b3f0 <main@@Base+0x15538>
   2b3c0:	add	r1, r4, #1
   2b3c4:	sub	r0, sl, r1
   2b3c8:	cmp	r0, #2
   2b3cc:	blt	2b8c0 <main@@Base+0x15a08>
   2b3d0:	ldrb	r0, [r1]
   2b3d4:	cmp	r0, #32
   2b3d8:	bhi	2b884 <main@@Base+0x159cc>
   2b3dc:	bne	2b8c0 <main@@Base+0x15a08>
   2b3e0:	ldrb	r0, [r4, #2]!
   2b3e4:	cmp	r0, #32
   2b3e8:	bhi	2b338 <main@@Base+0x15480>
   2b3ec:	b	2b8c0 <main@@Base+0x15a08>
   2b3f0:	mov	r3, r4
   2b3f4:	cmp	r3, sl
   2b3f8:	mov	r9, sl
   2b3fc:	beq	2b42c <main@@Base+0x15574>
   2b400:	ldrb	r0, [r3]
   2b404:	cmp	r0, #34	; 0x22
   2b408:	bne	2b414 <main@@Base+0x1555c>
   2b40c:	add	r9, r3, #1
   2b410:	b	2b42c <main@@Base+0x15574>
   2b414:	mov	r1, r3
   2b418:	mov	r0, r5
   2b41c:	mov	r2, sl
   2b420:	mov	r3, #5
   2b424:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b428:	mov	r9, r0
   2b42c:	sub	r0, sl, r9
   2b430:	mov	r1, #8
   2b434:	cmp	r0, #8
   2b438:	movcs	r0, r1
   2b43c:	sub	r1, r0, #1
   2b440:	cmp	r1, #7
   2b444:	bhi	2b590 <main@@Base+0x156d8>
   2b448:	mov	r8, r5
   2b44c:	add	r5, pc, #36	; 0x24
   2b450:	mov	r0, #0
   2b454:	mov	ip, #0
   2b458:	mov	lr, #0
   2b45c:	mov	r2, #0
   2b460:	mov	r3, #0
   2b464:	mov	r7, #0
   2b468:	mov	r6, #0
   2b46c:	mov	r4, #0
   2b470:	ldr	r1, [r5, r1, lsl #2]
   2b474:	add	pc, r5, r1
   2b478:	andeq	r0, r0, r4, rrx
   2b47c:	andeq	r0, r0, ip, asr r0
   2b480:	andeq	r0, r0, r4, asr r0
   2b484:	andeq	r0, r0, ip, asr #32
   2b488:	andeq	r0, r0, r0, asr #32
   2b48c:	andeq	r0, r0, r4, lsr r0
   2b490:	andeq	r0, r0, r4, lsr #32
   2b494:	andeq	r0, r0, r0, lsr #32
   2b498:	ldrb	ip, [r9, #7]
   2b49c:	ldrb	r1, [r9, #6]
   2b4a0:	mov	lr, r0
   2b4a4:	orr	r1, ip, r1, lsl #8
   2b4a8:	mov	r0, r1
   2b4ac:	ldrb	r1, [r9, #5]
   2b4b0:	mov	r2, lr
   2b4b4:	orr	r0, r0, r1, lsl #16
   2b4b8:	ldrb	r1, [r9, #4]
   2b4bc:	mov	r3, r2
   2b4c0:	orr	r0, r0, r1, lsl #24
   2b4c4:	ldrb	r1, [r9, #3]
   2b4c8:	orr	r7, r1, r3
   2b4cc:	ldrb	r1, [r9, #2]
   2b4d0:	orr	r6, r7, r1, lsl #8
   2b4d4:	ldrb	r1, [r9, #1]
   2b4d8:	orr	r4, r6, r1, lsl #16
   2b4dc:	movw	r1, #29285	; 0x7265
   2b4e0:	movw	r2, #28523	; 0x6f6b
   2b4e4:	mov	r5, r8
   2b4e8:	movt	r1, #29535	; 0x735f
   2b4ec:	movt	r2, #25199	; 0x626f
   2b4f0:	eor	r0, r0, r1
   2b4f4:	ldrb	r1, [r9]
   2b4f8:	orr	r1, r4, r1, lsl #24
   2b4fc:	eor	r1, r1, r2
   2b500:	orrs	r0, r0, r1
   2b504:	bne	2b590 <main@@Base+0x156d8>
   2b508:	add	r8, r9, #8
   2b50c:	mov	r2, #8
   2b510:	sub	r0, sl, r8
   2b514:	cmp	r0, #8
   2b518:	movcc	r2, r0
   2b51c:	sub	r1, r2, #2
   2b520:	cmp	r1, #7
   2b524:	bcs	2b59c <main@@Base+0x156e4>
   2b528:	ldrb	r1, [r9, #9]
   2b52c:	lsl	r2, r1, #16
   2b530:	mov	r1, #0
   2b534:	ldrb	r3, [r8]
   2b538:	orr	r2, r2, r3, lsl #24
   2b53c:	movw	r3, #0
   2b540:	movt	r3, #24932	; 0x6164
   2b544:	eor	r2, r2, r3
   2b548:	orrs	r1, r1, r2
   2b54c:	bne	2b60c <main@@Base+0x15754>
   2b550:	cmp	r0, #3
   2b554:	blt	2b60c <main@@Base+0x15754>
   2b558:	ldrb	r0, [r9, #10]
   2b55c:	cmp	r0, #34	; 0x22
   2b560:	bne	2b60c <main@@Base+0x15754>
   2b564:	add	r1, r9, #11
   2b568:	sub	r0, sl, r1
   2b56c:	cmp	r0, #2
   2b570:	blt	2b5c0 <main@@Base+0x15708>
   2b574:	ldrb	r0, [r1]
   2b578:	cmp	r0, #32
   2b57c:	bls	2b5b0 <main@@Base+0x156f8>
   2b580:	mov	r9, r1
   2b584:	cmp	r9, sl
   2b588:	bne	2b5d8 <main@@Base+0x15720>
   2b58c:	b	2b6e8 <main@@Base+0x15830>
   2b590:	mov	r0, r5
   2b594:	mov	r1, r9
   2b598:	b	2b614 <main@@Base+0x1575c>
   2b59c:	cmp	r2, #1
   2b5a0:	mov	r1, #0
   2b5a4:	mov	r2, #0
   2b5a8:	beq	2b534 <main@@Base+0x1567c>
   2b5ac:	b	2b60c <main@@Base+0x15754>
   2b5b0:	bne	2b5c0 <main@@Base+0x15708>
   2b5b4:	ldrb	r0, [r9, #12]!
   2b5b8:	cmp	r0, #32
   2b5bc:	bhi	2b5d0 <main@@Base+0x15718>
   2b5c0:	mov	r0, r5
   2b5c4:	mov	r2, sl
   2b5c8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b5cc:	mov	r9, r0
   2b5d0:	cmp	r9, sl
   2b5d4:	beq	2b6e8 <main@@Base+0x15830>
   2b5d8:	ldrb	r0, [r9]
   2b5dc:	cmp	r0, #58	; 0x3a
   2b5e0:	bne	2b6e8 <main@@Base+0x15830>
   2b5e4:	add	r1, r9, #1
   2b5e8:	sub	r0, sl, r1
   2b5ec:	cmp	r0, #2
   2b5f0:	blt	2b710 <main@@Base+0x15858>
   2b5f4:	ldrb	r0, [r1]
   2b5f8:	cmp	r0, #32
   2b5fc:	bls	2b700 <main@@Base+0x15848>
   2b600:	mov	r9, r1
   2b604:	cmp	r8, r9
   2b608:	bne	2b728 <main@@Base+0x15870>
   2b60c:	mov	r0, r5
   2b610:	mov	r1, r8
   2b614:	mov	r2, sl
   2b618:	bl	345c8 <flatcc_json_parser_unmatched_symbol@@Base>
   2b61c:	mov	r2, r0
   2b620:	sub	r0, sl, r2
   2b624:	cmp	r0, #2
   2b628:	blt	2b65c <main@@Base+0x157a4>
   2b62c:	ldrb	r0, [r2]
   2b630:	cmp	r0, #32
   2b634:	bls	2b648 <main@@Base+0x15790>
   2b638:	mov	r3, r2
   2b63c:	cmp	r3, sl
   2b640:	bne	2b678 <main@@Base+0x157c0>
   2b644:	b	2b858 <main@@Base+0x159a0>
   2b648:	bne	2b65c <main@@Base+0x157a4>
   2b64c:	mov	r3, r2
   2b650:	ldrb	r0, [r3, #1]!
   2b654:	cmp	r0, #32
   2b658:	bhi	2b670 <main@@Base+0x157b8>
   2b65c:	mov	r1, r2
   2b660:	mov	r0, r5
   2b664:	mov	r2, sl
   2b668:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b66c:	mov	r3, r0
   2b670:	cmp	r3, sl
   2b674:	beq	2b858 <main@@Base+0x159a0>
   2b678:	ldrb	r0, [r3]
   2b67c:	cmp	r0, #44	; 0x2c
   2b680:	bne	2b860 <main@@Base+0x159a8>
   2b684:	add	r1, r3, #1
   2b688:	sub	r0, sl, r1
   2b68c:	cmp	r0, #2
   2b690:	blt	2b6c0 <main@@Base+0x15808>
   2b694:	ldrb	r0, [r1]
   2b698:	cmp	r0, #32
   2b69c:	bls	2b6b0 <main@@Base+0x157f8>
   2b6a0:	mov	r3, r1
   2b6a4:	cmp	r3, sl
   2b6a8:	bne	2b6d8 <main@@Base+0x15820>
   2b6ac:	b	2b88c <main@@Base+0x159d4>
   2b6b0:	bne	2b6c0 <main@@Base+0x15808>
   2b6b4:	ldrb	r0, [r3, #2]!
   2b6b8:	cmp	r0, #32
   2b6bc:	bhi	2b6d0 <main@@Base+0x15818>
   2b6c0:	mov	r0, r5
   2b6c4:	mov	r2, sl
   2b6c8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b6cc:	mov	r3, r0
   2b6d0:	cmp	r3, sl
   2b6d4:	beq	2b88c <main@@Base+0x159d4>
   2b6d8:	ldrb	r0, [r3]
   2b6dc:	cmp	r0, #125	; 0x7d
   2b6e0:	bne	2b3f4 <main@@Base+0x1553c>
   2b6e4:	b	2b868 <main@@Base+0x159b0>
   2b6e8:	mov	r0, r5
   2b6ec:	mov	r1, r9
   2b6f0:	mov	r2, sl
   2b6f4:	mov	r3, #4
   2b6f8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b6fc:	b	2b71c <main@@Base+0x15864>
   2b700:	bne	2b710 <main@@Base+0x15858>
   2b704:	ldrb	r0, [r9, #2]!
   2b708:	cmp	r0, #32
   2b70c:	bhi	2b720 <main@@Base+0x15868>
   2b710:	mov	r0, r5
   2b714:	mov	r2, sl
   2b718:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b71c:	mov	r9, r0
   2b720:	cmp	r8, r9
   2b724:	beq	2b60c <main@@Base+0x15754>
   2b728:	mov	r8, #0
   2b72c:	cmp	r9, sl
   2b730:	str	r8, [sp, #28]
   2b734:	str	r8, [sp, #24]
   2b738:	str	r8, [sp, #16]
   2b73c:	str	r8, [sp, #20]
   2b740:	beq	2b7a0 <main@@Base+0x158e8>
   2b744:	add	r0, sp, #24
   2b748:	mov	r1, r9
   2b74c:	mov	r2, sl
   2b750:	add	r3, sp, #20
   2b754:	str	r0, [sp]
   2b758:	mov	r0, r5
   2b75c:	bl	362a4 <flatcc_json_parser_integer@@Base>
   2b760:	cmp	r0, r9
   2b764:	beq	2b7b4 <main@@Base+0x158fc>
   2b768:	ldr	r3, [sp, #20]
   2b76c:	mov	r2, r0
   2b770:	ldr	r0, [sp, #24]
   2b774:	ldr	r1, [sp, #28]
   2b778:	cmp	r3, #0
   2b77c:	beq	2b7c8 <main@@Base+0x15910>
   2b780:	subs	r3, r0, #-2147483647	; 0x80000001
   2b784:	sbcs	r1, r1, #0
   2b788:	bcc	2b7fc <main@@Base+0x15944>
   2b78c:	mov	r1, r2
   2b790:	mov	r0, r5
   2b794:	mov	r2, sl
   2b798:	mov	r3, #8
   2b79c:	b	2b7e4 <main@@Base+0x1592c>
   2b7a0:	ldr	r0, [sp, #8]
   2b7a4:	mov	r2, sl
   2b7a8:	cmp	r9, r2
   2b7ac:	bne	2b850 <main@@Base+0x15998>
   2b7b0:	b	2b818 <main@@Base+0x15960>
   2b7b4:	ldr	r0, [sp, #8]
   2b7b8:	mov	r2, r9
   2b7bc:	cmp	r9, r2
   2b7c0:	bne	2b850 <main@@Base+0x15998>
   2b7c4:	b	2b818 <main@@Base+0x15960>
   2b7c8:	subs	r3, r0, #-2147483648	; 0x80000000
   2b7cc:	sbcs	r1, r1, #0
   2b7d0:	bcc	2b804 <main@@Base+0x1594c>
   2b7d4:	mov	r1, r2
   2b7d8:	mov	r0, r5
   2b7dc:	mov	r2, sl
   2b7e0:	mov	r3, #7
   2b7e4:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b7e8:	mov	r2, r0
   2b7ec:	ldr	r0, [sp, #8]
   2b7f0:	cmp	r9, r2
   2b7f4:	bne	2b850 <main@@Base+0x15998>
   2b7f8:	b	2b818 <main@@Base+0x15960>
   2b7fc:	rsb	r8, r0, #0
   2b800:	b	2b808 <main@@Base+0x15950>
   2b804:	mov	r8, r0
   2b808:	ldr	r0, [sp, #8]
   2b80c:	str	r8, [sp, #16]
   2b810:	cmp	r9, r2
   2b814:	bne	2b850 <main@@Base+0x15998>
   2b818:	add	r0, sp, #16
   2b81c:	mov	r1, r9
   2b820:	mov	r2, sl
   2b824:	str	r0, [sp]
   2b828:	mov	r0, r5
   2b82c:	ldr	r3, [pc, #176]	; 2b8e4 <main@@Base+0x15a2c>
   2b830:	add	r3, pc, r3
   2b834:	bl	23f4c <main@@Base+0xe094>
   2b838:	mov	r2, r0
   2b83c:	cmp	r0, r9
   2b840:	cmpne	r2, sl
   2b844:	beq	2b8d0 <main@@Base+0x15a18>
   2b848:	ldr	r8, [sp, #16]
   2b84c:	ldr	r0, [sp, #8]
   2b850:	str	r8, [r0]
   2b854:	b	2b620 <main@@Base+0x15768>
   2b858:	mov	r1, sl
   2b85c:	b	2b368 <main@@Base+0x154b0>
   2b860:	cmp	r0, #125	; 0x7d
   2b864:	bne	2b898 <main@@Base+0x159e0>
   2b868:	add	r1, r3, #1
   2b86c:	sub	r0, sl, r1
   2b870:	cmp	r0, #2
   2b874:	blt	2b8c0 <main@@Base+0x15a08>
   2b878:	ldrb	r0, [r1]
   2b87c:	cmp	r0, #32
   2b880:	bls	2b8ac <main@@Base+0x159f4>
   2b884:	mov	r4, r1
   2b888:	b	2b338 <main@@Base+0x15480>
   2b88c:	mov	r0, r5
   2b890:	mov	r1, sl
   2b894:	b	2b8a0 <main@@Base+0x159e8>
   2b898:	mov	r0, r5
   2b89c:	mov	r1, r3
   2b8a0:	mov	r2, sl
   2b8a4:	mov	r3, #10
   2b8a8:	b	2b330 <main@@Base+0x15478>
   2b8ac:	bne	2b8c0 <main@@Base+0x15a08>
   2b8b0:	ldrb	r0, [r3, #2]!
   2b8b4:	mov	r4, r3
   2b8b8:	cmp	r0, #32
   2b8bc:	bhi	2b338 <main@@Base+0x15480>
   2b8c0:	mov	r0, r5
   2b8c4:	mov	r2, sl
   2b8c8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b8cc:	b	2b334 <main@@Base+0x1547c>
   2b8d0:	mov	r1, r2
   2b8d4:	mov	r0, r5
   2b8d8:	mov	r2, sl
   2b8dc:	mov	r3, #33	; 0x21
   2b8e0:	b	2b330 <main@@Base+0x15478>
   2b8e4:	andeq	r0, r3, r4, ror #21
   2b8e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b8ec:	add	fp, sp, #28
   2b8f0:	sub	sp, sp, #44	; 0x2c
   2b8f4:	mov	r6, r2
   2b8f8:	ldr	r2, [fp, #8]
   2b8fc:	mov	r5, r0
   2b900:	mov	r0, #0
   2b904:	mov	sl, r3
   2b908:	cmp	r1, r6
   2b90c:	strh	r0, [r2]
   2b910:	beq	2b93c <main@@Base+0x15a84>
   2b914:	ldrb	r0, [r1]
   2b918:	cmp	r0, #34	; 0x22
   2b91c:	bne	2b928 <main@@Base+0x15a70>
   2b920:	add	r1, r1, #1
   2b924:	b	2b93c <main@@Base+0x15a84>
   2b928:	mov	r0, r5
   2b92c:	mov	r2, r6
   2b930:	mov	r3, #5
   2b934:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2b938:	mov	r1, r0
   2b93c:	sub	r0, r6, r1
   2b940:	cmp	r0, #2
   2b944:	blt	2b978 <main@@Base+0x15ac0>
   2b948:	ldrb	r0, [r1]
   2b94c:	cmp	r0, #32
   2b950:	bls	2b964 <main@@Base+0x15aac>
   2b954:	mov	r7, r1
   2b958:	cmp	r7, r6
   2b95c:	bne	2b990 <main@@Base+0x15ad8>
   2b960:	b	2baa0 <main@@Base+0x15be8>
   2b964:	bne	2b978 <main@@Base+0x15ac0>
   2b968:	mov	r7, r1
   2b96c:	ldrb	r0, [r7, #1]!
   2b970:	cmp	r0, #32
   2b974:	bhi	2b988 <main@@Base+0x15ad0>
   2b978:	mov	r0, r5
   2b97c:	mov	r2, r6
   2b980:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   2b984:	mov	r7, r0
   2b988:	cmp	r7, r6
   2b98c:	beq	2baa0 <main@@Base+0x15be8>
   2b990:	add	r0, sl, #4
   2b994:	mov	r1, #0
   2b998:	add	r8, sp, #32
   2b99c:	add	r9, sp, #28
   2b9a0:	str	sl, [sp, #16]
   2b9a4:	str	r1, [sp, #20]
   2b9a8:	str	r0, [sp, #12]
   2b9ac:	ldr	r4, [sl]
   2b9b0:	mov	sl, r0
   2b9b4:	add	r0, sp, #24
   2b9b8:	mov	r1, r7
   2b9bc:	mov	r2, r6
   2b9c0:	mov	r3, r9
   2b9c4:	str	r8, [sp]
   2b9c8:	str	r0, [sp, #4]
   2b9cc:	mov	r0, r5
   2b9d0:	blx	r4
   2b9d4:	cmp	r0, r6
   2b9d8:	beq	2baa0 <main@@Base+0x15be8>
   2b9dc:	mov	r4, r0
   2b9e0:	cmp	r0, r7
   2b9e4:	bne	2b9f8 <main@@Base+0x15b40>
   2b9e8:	ldr	r4, [sl], #4
   2b9ec:	cmp	r4, #0
   2b9f0:	bne	2b9b4 <main@@Base+0x15afc>
   2b9f4:	b	2baa8 <main@@Base+0x15bf0>
   2b9f8:	ldr	r0, [sp, #28]
   2b9fc:	cmp	r0, #0
   2ba00:	beq	2ba28 <main@@Base+0x15b70>
   2ba04:	mov	r0, r5
   2ba08:	mov	r1, r4
   2ba0c:	mov	r2, r6
   2ba10:	mov	r3, #8
   2ba14:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2ba18:	ldr	sl, [sp, #16]
   2ba1c:	cmp	r0, r6
   2ba20:	bne	2ba70 <main@@Base+0x15bb8>
   2ba24:	b	2baa0 <main@@Base+0x15be8>
   2ba28:	ldr	r0, [sp, #32]
   2ba2c:	ldr	r1, [sp, #36]	; 0x24
   2ba30:	ldr	sl, [sp, #16]
   2ba34:	subs	r2, r0, #65536	; 0x10000
   2ba38:	sbcs	r1, r1, #0
   2ba3c:	bcc	2ba60 <main@@Base+0x15ba8>
   2ba40:	mov	r0, r5
   2ba44:	mov	r1, r4
   2ba48:	mov	r2, r6
   2ba4c:	mov	r3, #7
   2ba50:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2ba54:	cmp	r0, r6
   2ba58:	bne	2ba70 <main@@Base+0x15bb8>
   2ba5c:	b	2baa0 <main@@Base+0x15be8>
   2ba60:	str	r0, [sp, #20]
   2ba64:	mov	r0, r4
   2ba68:	cmp	r0, r6
   2ba6c:	beq	2baa0 <main@@Base+0x15be8>
   2ba70:	ldr	r0, [fp, #8]
   2ba74:	ldr	r2, [sp, #20]
   2ba78:	mov	r7, r4
   2ba7c:	mov	r1, r0
   2ba80:	ldrh	r0, [r0]
   2ba84:	add	r0, r0, r2
   2ba88:	strh	r0, [r1]
   2ba8c:	ldr	r0, [sp, #24]
   2ba90:	cmp	r0, #0
   2ba94:	ldr	r0, [sp, #12]
   2ba98:	bne	2b9ac <main@@Base+0x15af4>
   2ba9c:	b	2bac0 <main@@Base+0x15c08>
   2baa0:	mov	r4, r6
   2baa4:	b	2bac0 <main@@Base+0x15c08>
   2baa8:	mov	r0, r5
   2baac:	mov	r1, r7
   2bab0:	mov	r2, r6
   2bab4:	mov	r3, #23
   2bab8:	bl	33dd8 <flatcc_json_parser_set_error@@Base>
   2babc:	mov	r4, r0
   2bac0:	mov	r0, r4
   2bac4:	sub	sp, fp, #28
   2bac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bacc:	push	{r4, r5, r6, sl, fp, lr}
   2bad0:	add	fp, sp, #16
   2bad4:	sub	sp, sp, #16
   2bad8:	mov	r5, r0
   2badc:	ldr	r0, [pc, #228]	; 2bbc8 <main@@Base+0x15d10>
   2bae0:	mov	r4, r1
   2bae4:	mov	r6, #1
   2bae8:	mov	r1, #0
   2baec:	mov	r3, #0
   2baf0:	mov	r2, r4
   2baf4:	add	r0, pc, r0
   2baf8:	stm	sp, {r0, r6}
   2bafc:	mov	r0, r5
   2bb00:	bl	3c31c <flatcc_json_printer_float_struct_field@@Base>
   2bb04:	ldr	r0, [pc, #192]	; 2bbcc <main@@Base+0x15d14>
   2bb08:	mov	r1, #1
   2bb0c:	mov	r2, r4
   2bb10:	mov	r3, #4
   2bb14:	add	r0, pc, r0
   2bb18:	stm	sp, {r0, r6}
   2bb1c:	mov	r0, r5
   2bb20:	bl	3c31c <flatcc_json_printer_float_struct_field@@Base>
   2bb24:	ldr	r0, [pc, #164]	; 2bbd0 <main@@Base+0x15d18>
   2bb28:	mov	r1, #2
   2bb2c:	mov	r2, r4
   2bb30:	mov	r3, #8
   2bb34:	add	r0, pc, r0
   2bb38:	stm	sp, {r0, r6}
   2bb3c:	mov	r0, r5
   2bb40:	bl	3c31c <flatcc_json_printer_float_struct_field@@Base>
   2bb44:	ldr	r0, [pc, #136]	; 2bbd4 <main@@Base+0x15d1c>
   2bb48:	mov	r6, #5
   2bb4c:	mov	r1, #3
   2bb50:	mov	r2, r4
   2bb54:	mov	r3, #16
   2bb58:	add	r0, pc, r0
   2bb5c:	stm	sp, {r0, r6}
   2bb60:	mov	r0, r5
   2bb64:	bl	3c384 <flatcc_json_printer_double_struct_field@@Base>
   2bb68:	ldr	r0, [pc, #104]	; 2bbd8 <main@@Base+0x15d20>
   2bb6c:	ldr	r1, [pc, #104]	; 2bbdc <main@@Base+0x15d24>
   2bb70:	mov	r2, r4
   2bb74:	mov	r3, #24
   2bb78:	add	r1, pc, r1
   2bb7c:	add	r0, pc, r0
   2bb80:	stm	sp, {r1, r6}
   2bb84:	str	r0, [sp, #8]
   2bb88:	mov	r0, r5
   2bb8c:	mov	r1, #4
   2bb90:	bl	3c690 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2bb94:	ldr	r0, [pc, #68]	; 2bbe0 <main@@Base+0x15d28>
   2bb98:	ldr	r1, [pc, #68]	; 2bbe4 <main@@Base+0x15d2c>
   2bb9c:	mov	r2, r4
   2bba0:	mov	r3, #26
   2bba4:	add	r1, pc, r1
   2bba8:	add	r0, pc, r0
   2bbac:	stm	sp, {r1, r6}
   2bbb0:	str	r0, [sp, #8]
   2bbb4:	mov	r0, r5
   2bbb8:	mov	r1, #5
   2bbbc:	bl	43e2c <flatcc_json_printer_embedded_struct_field@@Base>
   2bbc0:	sub	sp, fp, #16
   2bbc4:	pop	{r4, r5, r6, sl, fp, pc}
   2bbc8:	andeq	ip, r1, r4, asr #17
   2bbcc:	andeq	lr, r1, lr, lsr #28
   2bbd0:	andeq	ip, r1, sp, lsr sl
   2bbd4:	andeq	ip, r1, fp, lsl sl
   2bbd8:	andeq	r0, r0, r4, rrx
   2bbdc:	andeq	ip, r1, r1, lsl #20
   2bbe0:	ldrdeq	r0, [r0], -r4
   2bbe4:	ldrdeq	ip, [r1], -fp
   2bbe8:	push	{r4, r5, r6, r7, fp, lr}
   2bbec:	add	fp, sp, #16
   2bbf0:	mov	r4, r0
   2bbf4:	mvn	r0, #0
   2bbf8:	uxtb	r7, r1
   2bbfc:	uxtab	r0, r0, r1
   2bc00:	ands	r5, r0, r7
   2bc04:	movwne	r5, #1
   2bc08:	cmp	r1, #0
   2bc0c:	beq	2bc68 <main@@Base+0x15db0>
   2bc10:	ands	r0, r1, #244	; 0xf4
   2bc14:	bne	2bc68 <main@@Base+0x15db0>
   2bc18:	mov	r0, r4
   2bc1c:	mov	r1, r5
   2bc20:	bl	3a304 <flatcc_json_printer_delimit_enum_flags@@Base>
   2bc24:	mov	r6, #0
   2bc28:	tst	r7, #1
   2bc2c:	bne	2bc74 <main@@Base+0x15dbc>
   2bc30:	tst	r7, #2
   2bc34:	bne	2bc98 <main@@Base+0x15de0>
   2bc38:	tst	r7, #8
   2bc3c:	beq	2bc58 <main@@Base+0x15da0>
   2bc40:	ldr	r2, [pc, #128]	; 2bcc8 <main@@Base+0x15e10>
   2bc44:	mov	r0, r4
   2bc48:	mov	r1, r6
   2bc4c:	mov	r3, #4
   2bc50:	add	r2, pc, r2
   2bc54:	bl	3a338 <flatcc_json_printer_enum_flag@@Base>
   2bc58:	mov	r0, r4
   2bc5c:	mov	r1, r5
   2bc60:	pop	{r4, r5, r6, r7, fp, lr}
   2bc64:	b	3a304 <flatcc_json_printer_delimit_enum_flags@@Base>
   2bc68:	mov	r0, r4
   2bc6c:	pop	{r4, r5, r6, r7, fp, lr}
   2bc70:	b	3a000 <flatcc_json_printer_int8@@Base>
   2bc74:	ldr	r2, [pc, #68]	; 2bcc0 <main@@Base+0x15e08>
   2bc78:	mov	r0, r4
   2bc7c:	mov	r1, #0
   2bc80:	mov	r3, #3
   2bc84:	add	r2, pc, r2
   2bc88:	bl	3a338 <flatcc_json_printer_enum_flag@@Base>
   2bc8c:	mov	r6, #1
   2bc90:	tst	r7, #2
   2bc94:	beq	2bc38 <main@@Base+0x15d80>
   2bc98:	ldr	r2, [pc, #36]	; 2bcc4 <main@@Base+0x15e0c>
   2bc9c:	mov	r0, r4
   2bca0:	mov	r1, r6
   2bca4:	mov	r3, #5
   2bca8:	add	r2, pc, r2
   2bcac:	bl	3a338 <flatcc_json_printer_enum_flag@@Base>
   2bcb0:	add	r6, r6, #1
   2bcb4:	tst	r7, #8
   2bcb8:	bne	2bc40 <main@@Base+0x15d88>
   2bcbc:	b	2bc58 <main@@Base+0x15da0>
   2bcc0:	andeq	ip, r1, r1, lsl #18
   2bcc4:	andeq	ip, r1, r1, ror #17
   2bcc8:	andeq	ip, r1, pc, lsr r9
   2bccc:	sub	r1, r1, #1
   2bcd0:	cmp	r1, #3
   2bcd4:	bhi	2bd04 <main@@Base+0x15e4c>
   2bcd8:	add	r2, pc, #4
   2bcdc:	ldr	r1, [r2, r1, lsl #2]
   2bce0:	add	pc, r2, r1
   2bce4:	andeq	r0, r0, r0, lsl r0
   2bce8:	andeq	r0, r0, r0, lsr r0
   2bcec:	andeq	r0, r0, r0, asr #32
   2bcf0:	andeq	r0, r0, r0, asr r0
   2bcf4:	ldr	r1, [pc, #72]	; 2bd44 <main@@Base+0x15e8c>
   2bcf8:	mov	r2, #7
   2bcfc:	add	r1, pc, r1
   2bd00:	b	3a218 <flatcc_json_printer_enum@@Base>
   2bd04:	ldr	r1, [pc, #72]	; 2bd54 <main@@Base+0x15e9c>
   2bd08:	mov	r2, #4
   2bd0c:	add	r1, pc, r1
   2bd10:	b	3a218 <flatcc_json_printer_enum@@Base>
   2bd14:	ldr	r1, [pc, #44]	; 2bd48 <main@@Base+0x15e90>
   2bd18:	mov	r2, #23
   2bd1c:	add	r1, pc, r1
   2bd20:	b	3a218 <flatcc_json_printer_enum@@Base>
   2bd24:	ldr	r1, [pc, #32]	; 2bd4c <main@@Base+0x15e94>
   2bd28:	mov	r2, #8
   2bd2c:	add	r1, pc, r1
   2bd30:	b	3a218 <flatcc_json_printer_enum@@Base>
   2bd34:	ldr	r1, [pc, #20]	; 2bd50 <main@@Base+0x15e98>
   2bd38:	mov	r2, #3
   2bd3c:	add	r1, pc, r1
   2bd40:	b	3a218 <flatcc_json_printer_enum@@Base>
   2bd44:	muleq	r1, r8, r8
   2bd48:	andeq	ip, r1, r0, lsl #17
   2bd4c:	andeq	ip, r1, r8, lsl #17
   2bd50:	andeq	ip, r1, r1, lsl #17
   2bd54:	andeq	lr, r1, fp, lsl #3
   2bd58:	ldrb	r2, [r1, #8]
   2bd5c:	sub	r2, r2, #1
   2bd60:	uxtb	r3, r2
   2bd64:	cmp	r3, #3
   2bd68:	bxhi	lr
   2bd6c:	ldr	r3, [pc, #12]	; 2bd80 <main@@Base+0x15ec8>
   2bd70:	sxtb	r2, r2
   2bd74:	add	r3, pc, r3
   2bd78:	ldr	r2, [r3, r2, lsl #2]
   2bd7c:	b	43b78 <flatcc_json_printer_union_table@@Base>
   2bd80:	andeq	r0, r3, r4, asr #32
   2bd84:	push	{r4, r5, r6, sl, fp, lr}
   2bd88:	add	fp, sp, #16
   2bd8c:	sub	sp, sp, #8
   2bd90:	mov	r5, r0
   2bd94:	ldr	r0, [pc, #72]	; 2bde4 <main@@Base+0x15f2c>
   2bd98:	mov	r4, r1
   2bd9c:	mov	r6, #1
   2bda0:	mov	r1, #0
   2bda4:	mov	r3, #0
   2bda8:	mov	r2, r4
   2bdac:	add	r0, pc, r0
   2bdb0:	stm	sp, {r0, r6}
   2bdb4:	mov	r0, r5
   2bdb8:	bl	3c118 <flatcc_json_printer_int16_struct_field@@Base>
   2bdbc:	ldr	r0, [pc, #36]	; 2bde8 <main@@Base+0x15f30>
   2bdc0:	mov	r1, #1
   2bdc4:	mov	r2, r4
   2bdc8:	mov	r3, #2
   2bdcc:	add	r0, pc, r0
   2bdd0:	stm	sp, {r0, r6}
   2bdd4:	mov	r0, r5
   2bdd8:	bl	3bfec <flatcc_json_printer_int8_struct_field@@Base>
   2bddc:	sub	sp, fp, #16
   2bde0:	pop	{r4, r5, r6, sl, fp, pc}
   2bde4:	andeq	ip, r1, pc, ror #13
   2bde8:	andeq	ip, r1, lr, ror #16
   2bdec:	push	{r4, r5, r6, sl, fp, lr}
   2bdf0:	add	fp, sp, #16
   2bdf4:	sub	sp, sp, #16
   2bdf8:	mov	r5, r0
   2bdfc:	mov	r0, #2
   2be00:	mov	r2, #0
   2be04:	mov	r4, r1
   2be08:	mov	r6, #0
   2be0c:	str	r0, [sp]
   2be10:	mov	r0, r5
   2be14:	ldr	r3, [pc, #84]	; 2be70 <main@@Base+0x15fb8>
   2be18:	add	r3, pc, r3
   2be1c:	bl	3a404 <flatcc_json_printer_string_field@@Base>
   2be20:	mov	r0, #3
   2be24:	str	r6, [sp, #8]
   2be28:	str	r6, [sp, #12]
   2be2c:	mov	r1, r4
   2be30:	mov	r2, #1
   2be34:	str	r0, [sp]
   2be38:	mov	r0, r5
   2be3c:	ldr	r3, [pc, #48]	; 2be74 <main@@Base+0x15fbc>
   2be40:	add	r3, pc, r3
   2be44:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   2be48:	mov	r0, #5
   2be4c:	mov	r1, r4
   2be50:	mov	r2, #2
   2be54:	stm	sp, {r0, r6}
   2be58:	mov	r0, r5
   2be5c:	ldr	r3, [pc, #20]	; 2be78 <main@@Base+0x15fc0>
   2be60:	add	r3, pc, r3
   2be64:	bl	3a9ec <flatcc_json_printer_uint16_field@@Base>
   2be68:	sub	sp, fp, #16
   2be6c:	pop	{r4, r5, r6, sl, fp, pc}
   2be70:	andeq	ip, r1, r9, lsl r9
   2be74:	strdeq	ip, [r1], -r4
   2be78:	muleq	r1, r3, r1
   2be7c:	push	{r4, r5, fp, lr}
   2be80:	add	fp, sp, #8
   2be84:	sub	sp, sp, #8
   2be88:	mov	r4, r1
   2be8c:	ldr	r1, [pc, #84]	; 2bee8 <main@@Base+0x16030>
   2be90:	mov	r5, r0
   2be94:	mov	r0, #2
   2be98:	mov	r3, #0
   2be9c:	str	r0, [sp, #4]
   2bea0:	mov	r0, r5
   2bea4:	mov	r2, r4
   2bea8:	add	r1, pc, r1
   2beac:	str	r1, [sp]
   2beb0:	mov	r1, #0
   2beb4:	bl	3bf2c <flatcc_json_printer_uint32_struct_field@@Base>
   2beb8:	ldr	r1, [pc, #44]	; 2beec <main@@Base+0x16034>
   2bebc:	mov	r0, #8
   2bec0:	mov	r2, r4
   2bec4:	mov	r3, #4
   2bec8:	str	r0, [sp, #4]
   2becc:	mov	r0, r5
   2bed0:	add	r1, pc, r1
   2bed4:	str	r1, [sp]
   2bed8:	mov	r1, #1
   2bedc:	bl	3bf2c <flatcc_json_printer_uint32_struct_field@@Base>
   2bee0:	sub	sp, fp, #8
   2bee4:	pop	{r4, r5, fp, pc}
   2bee8:	andeq	ip, r1, r9, lsl #17
   2beec:	andeq	ip, r1, r8, ror #16
   2bef0:	bx	lr
   2bef4:	push	{r4, r5, r6, sl, fp, lr}
   2bef8:	add	fp, sp, #16
   2befc:	sub	sp, sp, #8
   2bf00:	mov	r5, r0
   2bf04:	mov	r0, #4
   2bf08:	mov	r6, #0
   2bf0c:	mov	r2, #0
   2bf10:	mov	r4, r1
   2bf14:	stm	sp, {r0, r6}
   2bf18:	mov	r0, r5
   2bf1c:	ldr	r3, [pc, #84]	; 2bf78 <main@@Base+0x160c0>
   2bf20:	add	r3, pc, r3
   2bf24:	bl	3a690 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2bf28:	mov	r0, #1
   2bf2c:	mov	r1, #7
   2bf30:	mov	r2, #1
   2bf34:	str	r1, [sp]
   2bf38:	str	r0, [sp, #4]
   2bf3c:	mov	r0, r5
   2bf40:	mov	r1, r4
   2bf44:	ldr	r3, [pc, #48]	; 2bf7c <main@@Base+0x160c4>
   2bf48:	add	r3, pc, r3
   2bf4c:	bl	3a690 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2bf50:	mov	r0, #6
   2bf54:	mov	r1, r4
   2bf58:	mov	r2, #2
   2bf5c:	stm	sp, {r0, r6}
   2bf60:	mov	r0, r5
   2bf64:	ldr	r3, [pc, #20]	; 2bf80 <main@@Base+0x160c8>
   2bf68:	add	r3, pc, r3
   2bf6c:	bl	3a690 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2bf70:	sub	sp, fp, #16
   2bf74:	pop	{r4, r5, r6, sl, fp, pc}
   2bf78:	andeq	ip, r1, r4, lsr #16
   2bf7c:	strdeq	ip, [r1], -r9
   2bf80:	andeq	ip, r1, r1, ror #15
   2bf84:	push	{r4, r5, r6, r7, fp, lr}
   2bf88:	add	fp, sp, #16
   2bf8c:	sub	sp, sp, #16
   2bf90:	ldr	r7, [pc, #144]	; 2c028 <main@@Base+0x16170>
   2bf94:	mov	r5, r0
   2bf98:	mov	r0, #5
   2bf9c:	mov	r6, #2
   2bfa0:	mov	r2, #0
   2bfa4:	mov	r4, r1
   2bfa8:	add	r7, pc, r7
   2bfac:	stm	sp, {r0, r6, r7}
   2bfb0:	mov	r0, r5
   2bfb4:	ldr	r3, [pc, #112]	; 2c02c <main@@Base+0x16174>
   2bfb8:	add	r3, pc, r3
   2bfbc:	bl	3b7b4 <flatcc_json_printer_int8_enum_field@@Base>
   2bfc0:	mov	r0, #6
   2bfc4:	mov	r1, r4
   2bfc8:	mov	r2, #1
   2bfcc:	stm	sp, {r0, r6, r7}
   2bfd0:	mov	r0, r5
   2bfd4:	ldr	r3, [pc, #84]	; 2c030 <main@@Base+0x16178>
   2bfd8:	add	r3, pc, r3
   2bfdc:	bl	3b7b4 <flatcc_json_printer_int8_enum_field@@Base>
   2bfe0:	str	r6, [sp]
   2bfe4:	str	r6, [sp, #4]
   2bfe8:	mov	r0, r5
   2bfec:	mov	r1, r4
   2bff0:	mov	r2, #2
   2bff4:	ldr	r3, [pc, #56]	; 2c034 <main@@Base+0x1617c>
   2bff8:	add	r3, pc, r3
   2bffc:	bl	3a884 <flatcc_json_printer_uint8_field@@Base>
   2c000:	mov	r0, #3
   2c004:	mov	r1, r4
   2c008:	mov	r2, #3
   2c00c:	stm	sp, {r0, r6}
   2c010:	mov	r0, r5
   2c014:	ldr	r3, [pc, #28]	; 2c038 <main@@Base+0x16180>
   2c018:	add	r3, pc, r3
   2c01c:	bl	3a884 <flatcc_json_printer_uint8_field@@Base>
   2c020:	sub	sp, fp, #16
   2c024:	pop	{r4, r5, r6, r7, fp, pc}
   2c028:			; <UNDEFINED> instruction: 0xfffffc38
   2c02c:	andeq	ip, r1, r1, lsr r4
   2c030:	andeq	ip, r1, r9, ror #11
   2c034:	ldrdeq	ip, [r1], -r0
   2c038:			; <UNDEFINED> instruction: 0x0001c5b3
   2c03c:	bx	lr
   2c040:	push	{r4, r5, fp, lr}
   2c044:	add	fp, sp, #8
   2c048:	sub	sp, sp, #16
   2c04c:	mov	r5, r0
   2c050:	ldr	r0, [pc, #148]	; 2c0ec <main@@Base+0x16234>
   2c054:	mov	r4, r1
   2c058:	mov	r1, #6
   2c05c:	mov	r2, #0
   2c060:	str	r1, [sp]
   2c064:	mov	r1, r4
   2c068:	add	r0, pc, r0
   2c06c:	str	r0, [sp, #4]
   2c070:	mov	r0, r5
   2c074:	ldr	r3, [pc, #116]	; 2c0f0 <main@@Base+0x16238>
   2c078:	add	r3, pc, r3
   2c07c:	bl	43484 <flatcc_json_printer_table_field@@Base>
   2c080:	ldr	r0, [pc, #108]	; 2c0f4 <main@@Base+0x1623c>
   2c084:	mov	r1, #5
   2c088:	mov	r2, #1
   2c08c:	str	r1, [sp]
   2c090:	mov	r1, r4
   2c094:	add	r0, pc, r0
   2c098:	str	r0, [sp, #4]
   2c09c:	mov	r0, r5
   2c0a0:	ldr	r3, [pc, #80]	; 2c0f8 <main@@Base+0x16240>
   2c0a4:	add	r3, pc, r3
   2c0a8:	bl	43484 <flatcc_json_printer_table_field@@Base>
   2c0ac:	ldr	r0, [pc, #72]	; 2c0fc <main@@Base+0x16244>
   2c0b0:	ldr	r1, [pc, #72]	; 2c100 <main@@Base+0x16248>
   2c0b4:	mov	r2, #7
   2c0b8:	str	r2, [sp]
   2c0bc:	mov	r2, #3
   2c0c0:	add	r0, pc, r0
   2c0c4:	add	r1, pc, r1
   2c0c8:	str	r1, [sp, #4]
   2c0cc:	str	r0, [sp, #8]
   2c0d0:	mov	r0, r5
   2c0d4:	mov	r1, r4
   2c0d8:	ldr	r3, [pc, #36]	; 2c104 <main@@Base+0x1624c>
   2c0dc:	add	r3, pc, r3
   2c0e0:	bl	430b4 <flatcc_json_printer_union_vector_field@@Base>
   2c0e4:	sub	sp, fp, #8
   2c0e8:	pop	{r4, r5, fp, pc}
   2c0ec:	muleq	r0, r8, r0
   2c0f0:	andeq	ip, r1, r7, asr r5
   2c0f4:	andeq	r0, r0, r0, lsr #2
   2c0f8:	andeq	ip, r1, r2, lsr r5
   2c0fc:			; <UNDEFINED> instruction: 0xfffffc90
   2c100:			; <UNDEFINED> instruction: 0xfffffc00
   2c104:	andeq	ip, r1, r0, lsl #10
   2c108:	push	{r4, r5, r6, sl, fp, lr}
   2c10c:	add	fp, sp, #16
   2c110:	sub	sp, sp, #8
   2c114:	mov	r5, r0
   2c118:	ldr	r0, [pc, #132]	; 2c1a4 <main@@Base+0x162ec>
   2c11c:	mov	r4, r1
   2c120:	mov	r1, #21
   2c124:	mov	r2, #0
   2c128:	str	r1, [sp]
   2c12c:	mov	r1, r4
   2c130:	add	r0, pc, r0
   2c134:	str	r0, [sp, #4]
   2c138:	mov	r0, r5
   2c13c:	ldr	r3, [pc, #100]	; 2c1a8 <main@@Base+0x162f0>
   2c140:	add	r3, pc, r3
   2c144:	bl	43484 <flatcc_json_printer_table_field@@Base>
   2c148:	ldr	r0, [pc, #92]	; 2c1ac <main@@Base+0x162f4>
   2c14c:	mov	r6, #22
   2c150:	mov	r1, r4
   2c154:	mov	r2, #1
   2c158:	str	r6, [sp]
   2c15c:	add	r0, pc, r0
   2c160:	str	r0, [sp, #4]
   2c164:	mov	r0, r5
   2c168:	ldr	r3, [pc, #64]	; 2c1b0 <main@@Base+0x162f8>
   2c16c:	add	r3, pc, r3
   2c170:	bl	43484 <flatcc_json_printer_table_field@@Base>
   2c174:	ldr	r0, [pc, #56]	; 2c1b4 <main@@Base+0x162fc>
   2c178:	str	r6, [sp]
   2c17c:	mov	r1, r4
   2c180:	mov	r2, #2
   2c184:	add	r0, pc, r0
   2c188:	str	r0, [sp, #4]
   2c18c:	mov	r0, r5
   2c190:	ldr	r3, [pc, #32]	; 2c1b8 <main@@Base+0x16300>
   2c194:	add	r3, pc, r3
   2c198:	bl	43484 <flatcc_json_printer_table_field@@Base>
   2c19c:	sub	sp, fp, #16
   2c1a0:	pop	{r4, r5, r6, sl, fp, pc}
   2c1a4:	andeq	r0, r0, r4, lsl #3
   2c1a8:	andeq	ip, r1, r4, lsr #9
   2c1ac:	andeq	r0, r0, r0, asr #5
   2c1b0:	andeq	ip, r1, lr, lsl #9
   2c1b4:	andeq	r0, r0, r4, lsl #6
   2c1b8:	andeq	ip, r1, sp, ror r4
   2c1bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c1c0:	add	fp, sp, #24
   2c1c4:	sub	sp, sp, #16
   2c1c8:	ldr	r6, [pc, #208]	; 2c2a0 <main@@Base+0x163e8>
   2c1cc:	ldr	r7, [pc, #208]	; 2c2a4 <main@@Base+0x163ec>
   2c1d0:	mov	r5, r0
   2c1d4:	mov	r0, #14
   2c1d8:	mov	r2, #1
   2c1dc:	mov	r4, r1
   2c1e0:	add	r6, pc, r6
   2c1e4:	add	r7, pc, r7
   2c1e8:	stm	sp, {r0, r7}
   2c1ec:	mov	r0, r5
   2c1f0:	str	r6, [sp, #8]
   2c1f4:	ldr	r3, [pc, #172]	; 2c2a8 <main@@Base+0x163f0>
   2c1f8:	add	r3, pc, r3
   2c1fc:	bl	43670 <flatcc_json_printer_union_field@@Base>
   2c200:	mov	r8, #10
   2c204:	str	r7, [sp, #4]
   2c208:	str	r6, [sp, #8]
   2c20c:	mov	r0, r5
   2c210:	mov	r1, r4
   2c214:	mov	r2, #3
   2c218:	str	r8, [sp]
   2c21c:	ldr	r3, [pc, #136]	; 2c2ac <main@@Base+0x163f4>
   2c220:	add	r3, pc, r3
   2c224:	bl	43670 <flatcc_json_printer_union_field@@Base>
   2c228:	mov	r0, #9
   2c22c:	mov	r1, r4
   2c230:	mov	r2, #5
   2c234:	mov	r9, #5
   2c238:	stm	sp, {r0, r7}
   2c23c:	str	r6, [sp, #8]
   2c240:	mov	r0, r5
   2c244:	ldr	r3, [pc, #100]	; 2c2b0 <main@@Base+0x163f8>
   2c248:	add	r3, pc, r3
   2c24c:	bl	43670 <flatcc_json_printer_union_field@@Base>
   2c250:	str	r9, [sp]
   2c254:	str	r7, [sp, #4]
   2c258:	str	r6, [sp, #8]
   2c25c:	mov	r0, r5
   2c260:	mov	r1, r4
   2c264:	mov	r2, #7
   2c268:	ldr	r3, [pc, #68]	; 2c2b4 <main@@Base+0x163fc>
   2c26c:	add	r3, pc, r3
   2c270:	bl	43670 <flatcc_json_printer_union_field@@Base>
   2c274:	str	r8, [sp]
   2c278:	str	r7, [sp, #4]
   2c27c:	str	r6, [sp, #8]
   2c280:	mov	r0, r5
   2c284:	mov	r1, r4
   2c288:	mov	r2, #9
   2c28c:	ldr	r3, [pc, #36]	; 2c2b8 <main@@Base+0x16400>
   2c290:	add	r3, pc, r3
   2c294:	bl	430b4 <flatcc_json_printer_union_vector_field@@Base>
   2c298:	sub	sp, fp, #24
   2c29c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c2a0:	andeq	r0, r0, r8, ror #7
   2c2a4:	andeq	r0, r0, r0, lsl r3
   2c2a8:	andeq	ip, r1, pc, lsr #9
   2c2ac:	muleq	r1, r6, r4
   2c2b0:	andeq	ip, r1, r9, ror r4
   2c2b4:	andeq	ip, r1, pc, asr r4
   2c2b8:	andeq	ip, r1, r1, asr #8
   2c2bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2c2c0:	add	fp, sp, #24
   2c2c4:	sub	sp, sp, #16
   2c2c8:	mov	r9, #4
   2c2cc:	mov	r2, #0
   2c2d0:	mov	r4, r1
   2c2d4:	mov	r5, r0
   2c2d8:	mov	r6, #0
   2c2dc:	str	r9, [sp]
   2c2e0:	ldr	r3, [pc, #280]	; 2c400 <main@@Base+0x16548>
   2c2e4:	add	r3, pc, r3
   2c2e8:	bl	3a404 <flatcc_json_printer_string_field@@Base>
   2c2ec:	mov	r8, #9
   2c2f0:	str	r6, [sp, #4]
   2c2f4:	mov	r0, r5
   2c2f8:	mov	r1, r4
   2c2fc:	mov	r2, #1
   2c300:	str	r8, [sp]
   2c304:	ldr	r3, [pc, #248]	; 2c404 <main@@Base+0x1654c>
   2c308:	add	r3, pc, r3
   2c30c:	bl	3aab0 <flatcc_json_printer_uint32_field@@Base>
   2c310:	str	r9, [sp]
   2c314:	mov	r0, r5
   2c318:	mov	r1, r4
   2c31c:	mov	r2, #2
   2c320:	ldr	r3, [pc, #224]	; 2c408 <main@@Base+0x16550>
   2c324:	add	r3, pc, r3
   2c328:	bl	3a404 <flatcc_json_printer_string_field@@Base>
   2c32c:	mov	r7, #8
   2c330:	str	r6, [sp, #8]
   2c334:	str	r6, [sp, #12]
   2c338:	mov	r0, r5
   2c33c:	mov	r1, r4
   2c340:	mov	r2, #3
   2c344:	str	r7, [sp]
   2c348:	ldr	r3, [pc, #188]	; 2c40c <main@@Base+0x16554>
   2c34c:	add	r3, pc, r3
   2c350:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   2c354:	str	r9, [sp]
   2c358:	mov	r0, r5
   2c35c:	mov	r1, r4
   2c360:	mov	r2, #4
   2c364:	ldr	r3, [pc, #164]	; 2c410 <main@@Base+0x16558>
   2c368:	add	r3, pc, r3
   2c36c:	bl	3a404 <flatcc_json_printer_string_field@@Base>
   2c370:	str	r6, [sp, #8]
   2c374:	str	r6, [sp, #12]
   2c378:	str	r7, [sp]
   2c37c:	mov	r0, r5
   2c380:	mov	r1, r4
   2c384:	mov	r2, #5
   2c388:	ldr	r3, [pc, #132]	; 2c414 <main@@Base+0x1655c>
   2c38c:	add	r3, pc, r3
   2c390:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   2c394:	str	r8, [sp]
   2c398:	str	r6, [sp, #4]
   2c39c:	mov	r0, r5
   2c3a0:	mov	r1, r4
   2c3a4:	mov	r2, #6
   2c3a8:	ldr	r3, [pc, #104]	; 2c418 <main@@Base+0x16560>
   2c3ac:	add	r3, pc, r3
   2c3b0:	bl	3aab0 <flatcc_json_printer_uint32_field@@Base>
   2c3b4:	str	r6, [sp, #8]
   2c3b8:	str	r6, [sp, #12]
   2c3bc:	str	r7, [sp]
   2c3c0:	mov	r0, r5
   2c3c4:	mov	r1, r4
   2c3c8:	mov	r2, #7
   2c3cc:	ldr	r3, [pc, #72]	; 2c41c <main@@Base+0x16564>
   2c3d0:	add	r3, pc, r3
   2c3d4:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   2c3d8:	str	r8, [sp]
   2c3dc:	str	r6, [sp, #4]
   2c3e0:	mov	r0, r5
   2c3e4:	mov	r1, r4
   2c3e8:	mov	r2, #8
   2c3ec:	ldr	r3, [pc, #44]	; 2c420 <main@@Base+0x16568>
   2c3f0:	add	r3, pc, r3
   2c3f4:	bl	3aab0 <flatcc_json_printer_uint32_field@@Base>
   2c3f8:	sub	sp, fp, #24
   2c3fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2c400:	andeq	ip, r1, r4, asr #6
   2c404:	andeq	ip, r1, r5, lsr #6
   2c408:	andeq	ip, r1, r3, lsl r3
   2c40c:	strdeq	ip, [r1], -r0
   2c410:	ldrdeq	ip, [r1], -sp
   2c414:			; <UNDEFINED> instruction: 0x0001c2be
   2c418:	andeq	ip, r1, r7, lsr #5
   2c41c:	andeq	ip, r1, sp, lsl #5
   2c420:	andeq	ip, r1, r6, ror r2
   2c424:	push	{r4, r5, r6, sl, fp, lr}
   2c428:	add	fp, sp, #16
   2c42c:	sub	sp, sp, #16
   2c430:	mov	r6, #0
   2c434:	mov	r5, r0
   2c438:	mov	r0, #15
   2c43c:	mov	r2, #0
   2c440:	mov	r4, r1
   2c444:	str	r0, [sp]
   2c448:	str	r6, [sp, #8]
   2c44c:	str	r6, [sp, #12]
   2c450:	mov	r0, r5
   2c454:	ldr	r3, [pc, #44]	; 2c488 <main@@Base+0x165d0>
   2c458:	add	r3, pc, r3
   2c45c:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   2c460:	mov	r0, #16
   2c464:	mov	r1, r4
   2c468:	mov	r2, #1
   2c46c:	stm	sp, {r0, r6}
   2c470:	mov	r0, r5
   2c474:	ldr	r3, [pc, #16]	; 2c48c <main@@Base+0x165d4>
   2c478:	add	r3, pc, r3
   2c47c:	bl	3aab0 <flatcc_json_printer_uint32_field@@Base>
   2c480:	sub	sp, fp, #16
   2c484:	pop	{r4, r5, r6, sl, fp, pc}
   2c488:	andeq	ip, r1, r8, lsl r2
   2c48c:	andeq	ip, r1, r8, lsl #4
   2c490:	push	{r4, r5, r6, sl, fp, lr}
   2c494:	add	fp, sp, #16
   2c498:	sub	sp, sp, #16
   2c49c:	mov	r6, #0
   2c4a0:	mov	r5, r0
   2c4a4:	mov	r0, #15
   2c4a8:	mov	r2, #0
   2c4ac:	mov	r4, r1
   2c4b0:	str	r0, [sp]
   2c4b4:	str	r6, [sp, #8]
   2c4b8:	str	r6, [sp, #12]
   2c4bc:	mov	r0, r5
   2c4c0:	ldr	r3, [pc, #44]	; 2c4f4 <main@@Base+0x1663c>
   2c4c4:	add	r3, pc, r3
   2c4c8:	bl	3afb0 <flatcc_json_printer_int64_field@@Base>
   2c4cc:	mov	r0, #21
   2c4d0:	mov	r1, r4
   2c4d4:	mov	r2, #1
   2c4d8:	stm	sp, {r0, r6}
   2c4dc:	mov	r0, r5
   2c4e0:	ldr	r3, [pc, #16]	; 2c4f8 <main@@Base+0x16640>
   2c4e4:	add	r3, pc, r3
   2c4e8:	bl	3aab0 <flatcc_json_printer_uint32_field@@Base>
   2c4ec:	sub	sp, fp, #16
   2c4f0:	pop	{r4, r5, r6, sl, fp, pc}
   2c4f4:	andeq	ip, r1, ip, lsr #3
   2c4f8:	andeq	ip, r1, sp, lsr #3
   2c4fc:	sub	r2, r1, #2
   2c500:	cmp	r2, #9
   2c504:	bhi	2c54c <main@@Base+0x16694>
   2c508:	add	r1, pc, #4
   2c50c:	ldr	r2, [r1, r2, lsl #2]
   2c510:	add	pc, r1, r2
   2c514:	andeq	r0, r0, r8, lsr #32
   2c518:	andeq	r0, r0, r0, asr r0
   2c51c:	andeq	r0, r0, r0, asr r0
   2c520:	andeq	r0, r0, r0, asr r0
   2c524:	andeq	r0, r0, r0, asr r0
   2c528:	andeq	r0, r0, r0, asr r0
   2c52c:	andeq	r0, r0, r0, rrx
   2c530:	andeq	r0, r0, r0, ror r0
   2c534:	andeq	r0, r0, r0, lsl #1
   2c538:	muleq	r0, r0, r0
   2c53c:	ldr	r1, [pc, #116]	; 2c5b8 <main@@Base+0x16700>
   2c540:	mov	r2, #5
   2c544:	add	r1, pc, r1
   2c548:	b	3a218 <flatcc_json_printer_enum@@Base>
   2c54c:	cmp	r1, #255	; 0xff
   2c550:	bne	2c564 <main@@Base+0x166ac>
   2c554:	ldr	r1, [pc, #88]	; 2c5b4 <main@@Base+0x166fc>
   2c558:	mov	r2, #6
   2c55c:	add	r1, pc, r1
   2c560:	b	3a218 <flatcc_json_printer_enum@@Base>
   2c564:	ldr	r1, [pc, #96]	; 2c5cc <main@@Base+0x16714>
   2c568:	mov	r2, #4
   2c56c:	add	r1, pc, r1
   2c570:	b	3a218 <flatcc_json_printer_enum@@Base>
   2c574:	ldr	r1, [pc, #64]	; 2c5bc <main@@Base+0x16704>
   2c578:	mov	r2, #8
   2c57c:	add	r1, pc, r1
   2c580:	b	3a218 <flatcc_json_printer_enum@@Base>
   2c584:	ldr	r1, [pc, #52]	; 2c5c0 <main@@Base+0x16708>
   2c588:	mov	r2, #5
   2c58c:	add	r1, pc, r1
   2c590:	b	3a218 <flatcc_json_printer_enum@@Base>
   2c594:	ldr	r1, [pc, #40]	; 2c5c4 <main@@Base+0x1670c>
   2c598:	mov	r2, #7
   2c59c:	add	r1, pc, r1
   2c5a0:	b	3a218 <flatcc_json_printer_enum@@Base>
   2c5a4:	ldr	r1, [pc, #28]	; 2c5c8 <main@@Base+0x16710>
   2c5a8:	mov	r2, #5
   2c5ac:	add	r1, pc, r1
   2c5b0:	b	3a218 <flatcc_json_printer_enum@@Base>
   2c5b4:	andeq	ip, r1, r3, lsr #3
   2c5b8:	muleq	r1, r8, r1
   2c5bc:	andeq	ip, r1, r6, ror #2
   2c5c0:	andeq	ip, r1, pc, asr r1
   2c5c4:	andeq	ip, r1, r5, asr r1
   2c5c8:	andeq	ip, r1, sp, asr #2
   2c5cc:	andeq	sp, r1, fp, lsr #18
   2c5d0:	ldrb	r3, [r1, #8]
   2c5d4:	sub	r2, r3, #2
   2c5d8:	cmp	r2, #9
   2c5dc:	bhi	2c620 <main@@Base+0x16768>
   2c5e0:	add	r3, pc, #4
   2c5e4:	ldr	r2, [r3, r2, lsl #2]
   2c5e8:	add	pc, r3, r2
   2c5ec:	andeq	r0, r0, r0, asr #32
   2c5f0:	andeq	r0, r0, r8, asr r0
   2c5f4:	andeq	r0, r0, r8, asr r0
   2c5f8:	andeq	r0, r0, r8, asr r0
   2c5fc:	andeq	r0, r0, r8, asr r0
   2c600:	andeq	r0, r0, r8, asr r0
   2c604:	andeq	r0, r0, ip, asr #32
   2c608:	andeq	r0, r0, r8, lsr #32
   2c60c:	andeq	r0, r0, r8, lsr #32
   2c610:	andeq	r0, r0, ip, lsr r0
   2c614:	ldr	r2, [pc, #52]	; 2c650 <main@@Base+0x16798>
   2c618:	add	r2, pc, r2
   2c61c:	b	43cf8 <flatcc_json_printer_union_struct@@Base>
   2c620:	cmp	r3, #255	; 0xff
   2c624:	bxne	lr
   2c628:	b	43e18 <flatcc_json_printer_union_string@@Base>
   2c62c:	ldr	r2, [pc, #20]	; 2c648 <main@@Base+0x16790>
   2c630:	add	r2, pc, r2
   2c634:	b	43b78 <flatcc_json_printer_union_table@@Base>
   2c638:	ldr	r2, [pc, #12]	; 2c64c <main@@Base+0x16794>
   2c63c:	add	r2, pc, r2
   2c640:	b	43cf8 <flatcc_json_printer_union_struct@@Base>
   2c644:	bx	lr
   2c648:	andeq	r0, r0, ip, lsl r0
   2c64c:	andeq	r0, r0, r8, asr #32
   2c650:	andeq	r0, r0, r8, lsr #1
   2c654:	push	{fp, lr}
   2c658:	mov	fp, sp
   2c65c:	sub	sp, sp, #8
   2c660:	mov	r2, #0
   2c664:	mov	r3, #19
   2c668:	str	r2, [sp, #4]
   2c66c:	str	r3, [sp]
   2c670:	mov	r2, #0
   2c674:	ldr	r3, [pc, #12]	; 2c688 <main@@Base+0x167d0>
   2c678:	add	r3, pc, r3
   2c67c:	bl	3aed4 <flatcc_json_printer_int32_field@@Base>
   2c680:	mov	sp, fp
   2c684:	pop	{fp, pc}
   2c688:	andeq	ip, r1, lr, lsl #1
   2c68c:	push	{fp, lr}
   2c690:	mov	fp, sp
   2c694:	sub	sp, sp, #8
   2c698:	ldr	r3, [pc, #36]	; 2c6c4 <main@@Base+0x1680c>
   2c69c:	mov	r2, r1
   2c6a0:	mov	r1, #11
   2c6a4:	str	r1, [sp, #4]
   2c6a8:	mov	r1, #0
   2c6ac:	add	r3, pc, r3
   2c6b0:	str	r3, [sp]
   2c6b4:	mov	r3, #0
   2c6b8:	bl	3becc <flatcc_json_printer_uint16_struct_field@@Base>
   2c6bc:	mov	sp, fp
   2c6c0:	pop	{fp, pc}
   2c6c4:	andeq	ip, r1, lr, rrx
   2c6c8:	push	{fp, lr}
   2c6cc:	mov	fp, sp
   2c6d0:	sub	sp, sp, #8
   2c6d4:	ldr	r3, [pc, #36]	; 2c700 <main@@Base+0x16848>
   2c6d8:	mov	r2, r1
   2c6dc:	mov	r1, #10
   2c6e0:	str	r1, [sp, #4]
   2c6e4:	mov	r1, #0
   2c6e8:	add	r3, pc, r3
   2c6ec:	str	r3, [sp]
   2c6f0:	mov	r3, #0
   2c6f4:	bl	3c194 <flatcc_json_printer_int32_struct_field@@Base>
   2c6f8:	mov	sp, fp
   2c6fc:	pop	{fp, pc}
   2c700:	andeq	ip, r1, lr, lsr r0
   2c704:	ldrb	r1, [r0, #12]
   2c708:	sub	r1, r1, #1
   2c70c:	uxtb	r2, r1
   2c710:	cmp	r2, #3
   2c714:	movhi	r0, #0
   2c718:	bxhi	lr
   2c71c:	ldr	r2, [pc, #12]	; 2c730 <main@@Base+0x16878>
   2c720:	sxtb	r1, r1
   2c724:	add	r2, pc, r2
   2c728:	ldr	r1, [r2, r1, lsl #2]
   2c72c:	b	32894 <flatcc_verify_union_table@@Base>
   2c730:	andeq	pc, r2, r4, lsr #13
   2c734:	push	{r4, sl, fp, lr}
   2c738:	add	fp, sp, #8
   2c73c:	mov	r1, #0
   2c740:	mov	r2, #0
   2c744:	mov	r4, r0
   2c748:	bl	320f4 <flatcc_verify_string_field@@Base>
   2c74c:	cmp	r0, #0
   2c750:	popne	{r4, sl, fp, pc}
   2c754:	mov	r0, r4
   2c758:	mov	r1, #1
   2c75c:	mov	r2, #8
   2c760:	mov	r3, #8
   2c764:	bl	32070 <flatcc_verify_field@@Base>
   2c768:	cmp	r0, #0
   2c76c:	beq	2c774 <main@@Base+0x168bc>
   2c770:	pop	{r4, sl, fp, pc}
   2c774:	mov	r0, r4
   2c778:	mov	r1, #2
   2c77c:	mov	r2, #2
   2c780:	mov	r3, #2
   2c784:	pop	{r4, sl, fp, lr}
   2c788:	b	32070 <flatcc_verify_field@@Base>
   2c78c:	mov	r0, #0
   2c790:	bx	lr
   2c794:	push	{r4, r5, r6, sl, fp, lr}
   2c798:	add	fp, sp, #16
   2c79c:	sub	sp, sp, #8
   2c7a0:	mvn	r5, #0
   2c7a4:	mov	r6, #1
   2c7a8:	mov	r1, #0
   2c7ac:	mov	r2, #0
   2c7b0:	mov	r3, #1
   2c7b4:	mov	r4, r0
   2c7b8:	str	r6, [sp]
   2c7bc:	str	r5, [sp, #4]
   2c7c0:	bl	321d4 <flatcc_verify_vector_field@@Base>
   2c7c4:	cmp	r0, #0
   2c7c8:	bne	2c7f0 <main@@Base+0x16938>
   2c7cc:	mov	r0, r4
   2c7d0:	mov	r1, #1
   2c7d4:	mov	r2, #0
   2c7d8:	mov	r3, #1
   2c7dc:	str	r6, [sp]
   2c7e0:	str	r5, [sp, #4]
   2c7e4:	bl	321d4 <flatcc_verify_vector_field@@Base>
   2c7e8:	cmp	r0, #0
   2c7ec:	beq	2c7f8 <main@@Base+0x16940>
   2c7f0:	sub	sp, fp, #16
   2c7f4:	pop	{r4, r5, r6, sl, fp, pc}
   2c7f8:	ldr	r0, [pc, #40]	; 2c828 <main@@Base+0x16970>
   2c7fc:	mov	r1, #1
   2c800:	mov	r2, #0
   2c804:	mov	r3, #0
   2c808:	str	r1, [sp]
   2c80c:	mov	r1, #2
   2c810:	add	r0, pc, r0
   2c814:	str	r0, [sp, #4]
   2c818:	mov	r0, r4
   2c81c:	bl	330c4 <flatcc_verify_table_as_nested_root@@Base>
   2c820:	sub	sp, fp, #16
   2c824:	pop	{r4, r5, r6, sl, fp, pc}
   2c828:			; <UNDEFINED> instruction: 0xffff3a5c
   2c82c:	push	{r4, sl, fp, lr}
   2c830:	add	fp, sp, #8
   2c834:	mov	r1, #0
   2c838:	mov	r2, #1
   2c83c:	mov	r3, #1
   2c840:	mov	r4, r0
   2c844:	bl	32070 <flatcc_verify_field@@Base>
   2c848:	cmp	r0, #0
   2c84c:	bne	2c888 <main@@Base+0x169d0>
   2c850:	mov	r0, r4
   2c854:	mov	r1, #1
   2c858:	mov	r2, #1
   2c85c:	mov	r3, #1
   2c860:	bl	32070 <flatcc_verify_field@@Base>
   2c864:	cmp	r0, #0
   2c868:	popne	{r4, sl, fp, pc}
   2c86c:	mov	r0, r4
   2c870:	mov	r1, #2
   2c874:	mov	r2, #1
   2c878:	mov	r3, #1
   2c87c:	bl	32070 <flatcc_verify_field@@Base>
   2c880:	cmp	r0, #0
   2c884:	beq	2c88c <main@@Base+0x169d4>
   2c888:	pop	{r4, sl, fp, pc}
   2c88c:	mov	r0, r4
   2c890:	mov	r1, #3
   2c894:	mov	r2, #1
   2c898:	mov	r3, #1
   2c89c:	pop	{r4, sl, fp, lr}
   2c8a0:	b	32070 <flatcc_verify_field@@Base>
   2c8a4:	mov	r0, #0
   2c8a8:	bx	lr
   2c8ac:	push	{r4, sl, fp, lr}
   2c8b0:	add	fp, sp, #8
   2c8b4:	ldr	r3, [pc, #88]	; 2c914 <main@@Base+0x16a5c>
   2c8b8:	mov	r1, #0
   2c8bc:	mov	r2, #0
   2c8c0:	mov	r4, r0
   2c8c4:	add	r3, pc, r3
   2c8c8:	bl	32454 <flatcc_verify_table_field@@Base>
   2c8cc:	cmp	r0, #0
   2c8d0:	popne	{r4, sl, fp, pc}
   2c8d4:	ldr	r3, [pc, #60]	; 2c918 <main@@Base+0x16a60>
   2c8d8:	mov	r0, r4
   2c8dc:	mov	r1, #1
   2c8e0:	mov	r2, #0
   2c8e4:	add	r3, pc, r3
   2c8e8:	bl	32454 <flatcc_verify_table_field@@Base>
   2c8ec:	cmp	r0, #0
   2c8f0:	beq	2c8f8 <main@@Base+0x16a40>
   2c8f4:	pop	{r4, sl, fp, pc}
   2c8f8:	ldr	r3, [pc, #28]	; 2c91c <main@@Base+0x16a64>
   2c8fc:	mov	r0, r4
   2c900:	mov	r1, #3
   2c904:	mov	r2, #0
   2c908:	add	r3, pc, r3
   2c90c:	pop	{r4, sl, fp, lr}
   2c910:	b	33550 <flatcc_verify_union_vector_field@@Base>
   2c914:	andeq	r0, r0, r4, asr r0
   2c918:	andeq	r0, r0, r8, lsr #1
   2c91c:			; <UNDEFINED> instruction: 0xfffffdf4
   2c920:	push	{r4, sl, fp, lr}
   2c924:	add	fp, sp, #8
   2c928:	ldr	r3, [pc, #88]	; 2c988 <main@@Base+0x16ad0>
   2c92c:	mov	r1, #0
   2c930:	mov	r2, #0
   2c934:	mov	r4, r0
   2c938:	add	r3, pc, r3
   2c93c:	bl	32454 <flatcc_verify_table_field@@Base>
   2c940:	cmp	r0, #0
   2c944:	popne	{r4, sl, fp, pc}
   2c948:	ldr	r3, [pc, #60]	; 2c98c <main@@Base+0x16ad4>
   2c94c:	mov	r0, r4
   2c950:	mov	r1, #1
   2c954:	mov	r2, #0
   2c958:	add	r3, pc, r3
   2c95c:	bl	32454 <flatcc_verify_table_field@@Base>
   2c960:	cmp	r0, #0
   2c964:	beq	2c96c <main@@Base+0x16ab4>
   2c968:	pop	{r4, sl, fp, pc}
   2c96c:	ldr	r3, [pc, #28]	; 2c990 <main@@Base+0x16ad8>
   2c970:	mov	r0, r4
   2c974:	mov	r1, #2
   2c978:	mov	r2, #0
   2c97c:	add	r3, pc, r3
   2c980:	pop	{r4, sl, fp, lr}
   2c984:	b	32454 <flatcc_verify_table_field@@Base>
   2c988:	andeq	r0, r0, r0, lsl r1
   2c98c:	andeq	r0, r0, r8, ror #3
   2c990:	andeq	r0, r0, r0, lsl #4
   2c994:	push	{r4, sl, fp, lr}
   2c998:	add	fp, sp, #8
   2c99c:	ldr	r3, [pc, #152]	; 2ca3c <main@@Base+0x16b84>
   2c9a0:	mov	r1, #1
   2c9a4:	mov	r2, #0
   2c9a8:	mov	r4, r0
   2c9ac:	add	r3, pc, r3
   2c9b0:	bl	333e4 <flatcc_verify_union_field@@Base>
   2c9b4:	cmp	r0, #0
   2c9b8:	bne	2ca1c <main@@Base+0x16b64>
   2c9bc:	ldr	r3, [pc, #124]	; 2ca40 <main@@Base+0x16b88>
   2c9c0:	mov	r0, r4
   2c9c4:	mov	r1, #3
   2c9c8:	mov	r2, #0
   2c9cc:	add	r3, pc, r3
   2c9d0:	bl	333e4 <flatcc_verify_union_field@@Base>
   2c9d4:	cmp	r0, #0
   2c9d8:	bne	2ca1c <main@@Base+0x16b64>
   2c9dc:	ldr	r3, [pc, #96]	; 2ca44 <main@@Base+0x16b8c>
   2c9e0:	mov	r0, r4
   2c9e4:	mov	r1, #5
   2c9e8:	mov	r2, #0
   2c9ec:	add	r3, pc, r3
   2c9f0:	bl	333e4 <flatcc_verify_union_field@@Base>
   2c9f4:	cmp	r0, #0
   2c9f8:	popne	{r4, sl, fp, pc}
   2c9fc:	ldr	r3, [pc, #68]	; 2ca48 <main@@Base+0x16b90>
   2ca00:	mov	r0, r4
   2ca04:	mov	r1, #7
   2ca08:	mov	r2, #0
   2ca0c:	add	r3, pc, r3
   2ca10:	bl	333e4 <flatcc_verify_union_field@@Base>
   2ca14:	cmp	r0, #0
   2ca18:	beq	2ca20 <main@@Base+0x16b68>
   2ca1c:	pop	{r4, sl, fp, pc}
   2ca20:	ldr	r3, [pc, #36]	; 2ca4c <main@@Base+0x16b94>
   2ca24:	mov	r0, r4
   2ca28:	mov	r1, #9
   2ca2c:	mov	r2, #0
   2ca30:	add	r3, pc, r3
   2ca34:	pop	{r4, sl, fp, lr}
   2ca38:	b	33550 <flatcc_verify_union_vector_field@@Base>
   2ca3c:	andeq	r0, r0, ip, lsl #4
   2ca40:	andeq	r0, r0, ip, ror #3
   2ca44:	andeq	r0, r0, ip, asr #3
   2ca48:	andeq	r0, r0, ip, lsr #3
   2ca4c:	andeq	r0, r0, r8, lsl #3
   2ca50:	push	{r4, sl, fp, lr}
   2ca54:	add	fp, sp, #8
   2ca58:	mov	r1, #0
   2ca5c:	mov	r2, #0
   2ca60:	mov	r4, r0
   2ca64:	bl	320f4 <flatcc_verify_string_field@@Base>
   2ca68:	cmp	r0, #0
   2ca6c:	bne	2cb2c <main@@Base+0x16c74>
   2ca70:	mov	r0, r4
   2ca74:	mov	r1, #1
   2ca78:	mov	r2, #4
   2ca7c:	mov	r3, #4
   2ca80:	bl	32070 <flatcc_verify_field@@Base>
   2ca84:	cmp	r0, #0
   2ca88:	bne	2cb2c <main@@Base+0x16c74>
   2ca8c:	mov	r0, r4
   2ca90:	mov	r1, #2
   2ca94:	mov	r2, #0
   2ca98:	bl	320f4 <flatcc_verify_string_field@@Base>
   2ca9c:	cmp	r0, #0
   2caa0:	bne	2cb2c <main@@Base+0x16c74>
   2caa4:	mov	r0, r4
   2caa8:	mov	r1, #3
   2caac:	mov	r2, #8
   2cab0:	mov	r3, #8
   2cab4:	bl	32070 <flatcc_verify_field@@Base>
   2cab8:	cmp	r0, #0
   2cabc:	bne	2cb2c <main@@Base+0x16c74>
   2cac0:	mov	r0, r4
   2cac4:	mov	r1, #4
   2cac8:	mov	r2, #0
   2cacc:	bl	320f4 <flatcc_verify_string_field@@Base>
   2cad0:	cmp	r0, #0
   2cad4:	bne	2cb2c <main@@Base+0x16c74>
   2cad8:	mov	r0, r4
   2cadc:	mov	r1, #5
   2cae0:	mov	r2, #8
   2cae4:	mov	r3, #8
   2cae8:	bl	32070 <flatcc_verify_field@@Base>
   2caec:	cmp	r0, #0
   2caf0:	bne	2cb2c <main@@Base+0x16c74>
   2caf4:	mov	r0, r4
   2caf8:	mov	r1, #6
   2cafc:	mov	r2, #4
   2cb00:	mov	r3, #4
   2cb04:	bl	32070 <flatcc_verify_field@@Base>
   2cb08:	cmp	r0, #0
   2cb0c:	popne	{r4, sl, fp, pc}
   2cb10:	mov	r0, r4
   2cb14:	mov	r1, #7
   2cb18:	mov	r2, #8
   2cb1c:	mov	r3, #8
   2cb20:	bl	32070 <flatcc_verify_field@@Base>
   2cb24:	cmp	r0, #0
   2cb28:	beq	2cb30 <main@@Base+0x16c78>
   2cb2c:	pop	{r4, sl, fp, pc}
   2cb30:	mov	r0, r4
   2cb34:	mov	r1, #8
   2cb38:	mov	r2, #4
   2cb3c:	mov	r3, #4
   2cb40:	pop	{r4, sl, fp, lr}
   2cb44:	b	32070 <flatcc_verify_field@@Base>
   2cb48:	push	{r4, sl, fp, lr}
   2cb4c:	add	fp, sp, #8
   2cb50:	mov	r1, #0
   2cb54:	mov	r2, #8
   2cb58:	mov	r3, #8
   2cb5c:	mov	r4, r0
   2cb60:	bl	32070 <flatcc_verify_field@@Base>
   2cb64:	cmp	r0, #0
   2cb68:	popne	{r4, sl, fp, pc}
   2cb6c:	mov	r0, r4
   2cb70:	mov	r1, #1
   2cb74:	mov	r2, #4
   2cb78:	mov	r3, #4
   2cb7c:	pop	{r4, sl, fp, lr}
   2cb80:	b	32070 <flatcc_verify_field@@Base>
   2cb84:	push	{r4, sl, fp, lr}
   2cb88:	add	fp, sp, #8
   2cb8c:	mov	r1, #0
   2cb90:	mov	r2, #8
   2cb94:	mov	r3, #8
   2cb98:	mov	r4, r0
   2cb9c:	bl	32070 <flatcc_verify_field@@Base>
   2cba0:	cmp	r0, #0
   2cba4:	popne	{r4, sl, fp, pc}
   2cba8:	mov	r0, r4
   2cbac:	mov	r1, #1
   2cbb0:	mov	r2, #4
   2cbb4:	mov	r3, #4
   2cbb8:	pop	{r4, sl, fp, lr}
   2cbbc:	b	32070 <flatcc_verify_field@@Base>
   2cbc0:	ldrb	r2, [r0, #12]
   2cbc4:	sub	r1, r2, #2
   2cbc8:	cmp	r1, #9
   2cbcc:	bhi	2cc10 <main@@Base+0x16d58>
   2cbd0:	add	r2, pc, #4
   2cbd4:	ldr	r1, [r2, r1, lsl #2]
   2cbd8:	add	pc, r2, r1
   2cbdc:	andeq	r0, r0, r8, asr #32
   2cbe0:	andeq	r0, r0, r0, asr #32
   2cbe4:	andeq	r0, r0, r0, asr #32
   2cbe8:	andeq	r0, r0, r0, asr #32
   2cbec:	andeq	r0, r0, r0, asr #32
   2cbf0:	andeq	r0, r0, r0, asr #32
   2cbf4:	andeq	r0, r0, r4, asr r0
   2cbf8:	andeq	r0, r0, r8, lsr #32
   2cbfc:	andeq	r0, r0, r8, lsr #32
   2cc00:	andeq	r0, r0, ip, lsr r0
   2cc04:	mov	r1, #4
   2cc08:	mov	r2, #4
   2cc0c:	b	32980 <flatcc_verify_union_struct@@Base>
   2cc10:	cmp	r2, #255	; 0xff
   2cc14:	bne	2cc1c <main@@Base+0x16d64>
   2cc18:	b	329d8 <flatcc_verify_union_string@@Base>
   2cc1c:	mov	r0, #0
   2cc20:	bx	lr
   2cc24:	ldr	r1, [pc, #16]	; 2cc3c <main@@Base+0x16d84>
   2cc28:	add	r1, pc, r1
   2cc2c:	b	32894 <flatcc_verify_union_table@@Base>
   2cc30:	mov	r1, #2
   2cc34:	mov	r2, #2
   2cc38:	b	32980 <flatcc_verify_union_struct@@Base>
   2cc3c:	andeq	r0, r0, r0, lsl r0
   2cc40:	mov	r1, #0
   2cc44:	mov	r2, #4
   2cc48:	mov	r3, #4
   2cc4c:	b	32070 <flatcc_verify_field@@Base>

0002cc50 <flatcc_builder_default_alloc@@Base>:
   2cc50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2cc54:	add	fp, sp, #24
   2cc58:	mov	r4, r1
   2cc5c:	cmp	r2, #0
   2cc60:	beq	2ccac <flatcc_builder_default_alloc@@Base+0x5c>
   2cc64:	ldr	r0, [fp, #8]
   2cc68:	mov	r8, r3
   2cc6c:	sub	r1, r0, #1
   2cc70:	cmp	r1, #6
   2cc74:	bhi	2ccdc <flatcc_builder_default_alloc@@Base+0x8c>
   2cc78:	add	r3, pc, #8
   2cc7c:	mov	r0, #256	; 0x100
   2cc80:	ldr	r1, [r3, r1, lsl #2]
   2cc84:	add	pc, r3, r1
   2cc88:	andeq	r0, r0, r8, rrx
   2cc8c:	andeq	r0, r0, r4, asr r0
   2cc90:	andeq	r0, r0, r4, asr r0
   2cc94:	andeq	r0, r0, ip, lsl r0
   2cc98:	andeq	r0, r0, ip, asr r0
   2cc9c:	andeq	r0, r0, r4, asr r0
   2cca0:	andeq	r0, r0, r4, rrx
   2cca4:	mov	r0, #288	; 0x120
   2cca8:	b	2ccf0 <flatcc_builder_default_alloc@@Base+0xa0>
   2ccac:	ldr	r0, [r4]
   2ccb0:	cmp	r0, #0
   2ccb4:	beq	2ccd0 <flatcc_builder_default_alloc@@Base+0x80>
   2ccb8:	bl	14e48 <free@plt>
   2ccbc:	mov	r6, #0
   2ccc0:	mov	r0, r6
   2ccc4:	str	r6, [r4]
   2ccc8:	str	r6, [r4, #4]
   2cccc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ccd0:	mov	r6, #0
   2ccd4:	mov	r0, r6
   2ccd8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ccdc:	mov	r0, #32
   2cce0:	b	2ccf0 <flatcc_builder_default_alloc@@Base+0xa0>
   2cce4:	mov	r0, r2
   2cce8:	b	2ccf0 <flatcc_builder_default_alloc@@Base+0xa0>
   2ccec:	mov	r0, #64	; 0x40
   2ccf0:	mov	r7, r0
   2ccf4:	lsl	r0, r0, #1
   2ccf8:	cmp	r7, r2
   2ccfc:	bcc	2ccf0 <flatcc_builder_default_alloc@@Base+0xa0>
   2cd00:	ldr	r0, [r4, #4]
   2cd04:	mov	r6, #0
   2cd08:	cmp	r0, r2
   2cd0c:	lsrcs	r0, r0, #1
   2cd10:	cmpcs	r0, r7
   2cd14:	bcs	2cd58 <flatcc_builder_default_alloc@@Base+0x108>
   2cd18:	ldr	r0, [r4]
   2cd1c:	mov	r1, r7
   2cd20:	bl	14e78 <realloc@plt>
   2cd24:	cmp	r0, #0
   2cd28:	beq	2cd60 <flatcc_builder_default_alloc@@Base+0x110>
   2cd2c:	mov	r5, r0
   2cd30:	cmp	r8, #0
   2cd34:	beq	2cd54 <flatcc_builder_default_alloc@@Base+0x104>
   2cd38:	ldr	r1, [r4, #4]
   2cd3c:	cmp	r7, r1
   2cd40:	bls	2cd54 <flatcc_builder_default_alloc@@Base+0x104>
   2cd44:	add	r0, r5, r1
   2cd48:	sub	r2, r7, r1
   2cd4c:	mov	r1, #0
   2cd50:	bl	14ee4 <memset@plt>
   2cd54:	stm	r4, {r5, r7}
   2cd58:	mov	r0, r6
   2cd5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2cd60:	mvn	r6, #0
   2cd64:	mov	r0, r6
   2cd68:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002cd6c <flatcc_builder_flush_vtable_cache@@Base>:
   2cd6c:	push	{r4, r5, fp, lr}
   2cd70:	add	fp, sp, #8
   2cd74:	mov	r4, r0
   2cd78:	ldr	r0, [r0, #116]	; 0x74
   2cd7c:	cmp	r0, #0
   2cd80:	popeq	{r4, r5, fp, pc}
   2cd84:	ldr	r0, [r4, #92]	; 0x5c
   2cd88:	ldr	r2, [r4, #96]	; 0x60
   2cd8c:	mov	r1, #0
   2cd90:	mov	r5, #0
   2cd94:	bl	14ee4 <memset@plt>
   2cd98:	mov	r0, #16
   2cd9c:	str	r5, [r4, #120]	; 0x78
   2cda0:	str	r0, [r4, #124]	; 0x7c
   2cda4:	pop	{r4, r5, fp, pc}

0002cda8 <flatcc_builder_custom_init@@Base>:
   2cda8:	push	{r4, r5, r6, r7, fp, lr}
   2cdac:	add	fp, sp, #16
   2cdb0:	mov	r6, r2
   2cdb4:	mov	r7, r1
   2cdb8:	mov	r1, #0
   2cdbc:	mov	r2, #232	; 0xe8
   2cdc0:	mov	r5, r3
   2cdc4:	mov	r4, r0
   2cdc8:	bl	14ee4 <memset@plt>
   2cdcc:	ldr	r0, [fp, #8]
   2cdd0:	cmp	r7, #0
   2cdd4:	bne	2cdec <flatcc_builder_custom_init@@Base+0x44>
   2cdd8:	mov	r1, #1
   2cddc:	add	r6, r4, #188	; 0xbc
   2cde0:	str	r1, [r4, #184]	; 0xb8
   2cde4:	ldr	r7, [pc, #40]	; 2ce14 <flatcc_builder_custom_init@@Base+0x6c>
   2cde8:	ldr	r7, [pc, r7]
   2cdec:	ldr	r1, [pc, #36]	; 2ce18 <flatcc_builder_custom_init@@Base+0x70>
   2cdf0:	cmp	r5, #0
   2cdf4:	ldr	r1, [pc, r1]
   2cdf8:	str	r6, [r4, #36]	; 0x24
   2cdfc:	str	r0, [r4, #40]	; 0x28
   2ce00:	mov	r0, #0
   2ce04:	movne	r1, r5
   2ce08:	str	r7, [r4, #44]	; 0x2c
   2ce0c:	str	r1, [r4, #48]	; 0x30
   2ce10:	pop	{r4, r5, r6, r7, fp, pc}
   2ce14:	muleq	r2, r0, r2
   2ce18:	andeq	pc, r2, ip, ror r2	; <UNPREDICTABLE>

0002ce1c <flatcc_builder_init@@Base>:
   2ce1c:	push	{r4, r5, fp, lr}
   2ce20:	add	fp, sp, #8
   2ce24:	mov	r1, #0
   2ce28:	mov	r2, #232	; 0xe8
   2ce2c:	mov	r4, r0
   2ce30:	mov	r5, #0
   2ce34:	bl	14ee4 <memset@plt>
   2ce38:	mov	r0, #1
   2ce3c:	str	r0, [r4, #184]	; 0xb8
   2ce40:	add	r0, r4, #188	; 0xbc
   2ce44:	ldr	r1, [pc, #32]	; 2ce6c <flatcc_builder_init@@Base+0x50>
   2ce48:	ldr	r1, [pc, r1]
   2ce4c:	ldr	r2, [pc, #28]	; 2ce70 <flatcc_builder_init@@Base+0x54>
   2ce50:	ldr	r2, [pc, r2]
   2ce54:	str	r0, [r4, #36]	; 0x24
   2ce58:	mov	r0, #0
   2ce5c:	str	r5, [r4, #40]	; 0x28
   2ce60:	str	r2, [r4, #44]	; 0x2c
   2ce64:	str	r1, [r4, #48]	; 0x30
   2ce68:	pop	{r4, r5, fp, pc}
   2ce6c:	andeq	pc, r2, r8, lsr #4
   2ce70:	andeq	pc, r2, r8, lsr #4

0002ce74 <flatcc_builder_custom_reset@@Base>:
   2ce74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ce78:	add	fp, sp, #28
   2ce7c:	sub	sp, sp, #4
   2ce80:	mov	r9, r2
   2ce84:	mov	r8, r1
   2ce88:	mov	sl, r0
   2ce8c:	add	r7, r0, #52	; 0x34
   2ce90:	mov	r5, #0
   2ce94:	b	2ceb4 <flatcc_builder_custom_reset@@Base+0x40>
   2ce98:	ldr	r0, [r6, #56]	; 0x38
   2ce9c:	cmp	r0, #0
   2cea0:	bne	2cf9c <flatcc_builder_custom_reset@@Base+0x128>
   2cea4:	add	r5, r5, #1
   2cea8:	add	r7, r7, #8
   2ceac:	cmp	r5, #8
   2ceb0:	beq	2cf08 <flatcc_builder_custom_reset@@Base+0x94>
   2ceb4:	add	r6, sl, r5, lsl #3
   2ceb8:	ldr	r0, [r6, #52]	; 0x34
   2cebc:	cmp	r0, #0
   2cec0:	beq	2ce98 <flatcc_builder_custom_reset@@Base+0x24>
   2cec4:	cmp	r9, #0
   2cec8:	cmpne	r5, #5
   2cecc:	beq	2cef8 <flatcc_builder_custom_reset@@Base+0x84>
   2ced0:	ldr	r0, [sl, #40]	; 0x28
   2ced4:	ldr	r4, [sl, #48]	; 0x30
   2ced8:	mov	r1, r7
   2cedc:	mov	r2, #1
   2cee0:	mov	r3, #1
   2cee4:	str	r5, [sp]
   2cee8:	blx	r4
   2ceec:	cmp	r0, #0
   2cef0:	bne	2cf8c <flatcc_builder_custom_reset@@Base+0x118>
   2cef4:	ldr	r0, [r6, #52]	; 0x34
   2cef8:	ldr	r2, [r6, #56]	; 0x38
   2cefc:	mov	r1, #0
   2cf00:	bl	14ee4 <memset@plt>
   2cf04:	b	2cea4 <flatcc_builder_custom_reset@@Base+0x30>
   2cf08:	mov	r0, #0
   2cf0c:	vmov.i32	q8, #0	; 0x00000000
   2cf10:	mov	r5, #0
   2cf14:	str	r0, [sl, #120]	; 0x78
   2cf18:	ldr	r1, [sl, #124]	; 0x7c
   2cf1c:	cmp	r1, #0
   2cf20:	movne	r1, #16
   2cf24:	strne	r1, [sl, #124]	; 0x7c
   2cf28:	add	r1, sl, #148	; 0x94
   2cf2c:	str	r0, [sl, #136]	; 0x88
   2cf30:	str	r0, [sl, #140]	; 0x8c
   2cf34:	strh	r0, [sl, #128]	; 0x80
   2cf38:	str	r0, [sl, #32]
   2cf3c:	cmp	r8, #0
   2cf40:	vst1.32	{d16-d17}, [r1]
   2cf44:	ldr	r2, [sl, #60]	; 0x3c
   2cf48:	ldr	r1, [sl, #52]	; 0x34
   2cf4c:	ldr	r3, [sl, #76]	; 0x4c
   2cf50:	str	r2, [sl, #16]
   2cf54:	str	r0, [sl, #20]
   2cf58:	str	r0, [sl, #24]
   2cf5c:	movne	r0, #0
   2cf60:	str	r3, [sl]
   2cf64:	str	r1, [sl, #4]
   2cf68:	strne	r0, [sl, #172]	; 0xac
   2cf6c:	strne	r0, [sl, #176]	; 0xb0
   2cf70:	strne	r0, [sl, #180]	; 0xb4
   2cf74:	ldr	r0, [sl, #184]	; 0xb8
   2cf78:	cmp	r0, #0
   2cf7c:	beq	2cf90 <flatcc_builder_custom_reset@@Base+0x11c>
   2cf80:	add	r0, sl, #188	; 0xbc
   2cf84:	bl	31b10 <flatcc_emitter_reset@@Base>
   2cf88:	b	2cf90 <flatcc_builder_custom_reset@@Base+0x11c>
   2cf8c:	mvn	r5, #0
   2cf90:	mov	r0, r5
   2cf94:	sub	sp, fp, #28
   2cf98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2cf9c:	ldr	r0, [pc, #24]	; 2cfbc <flatcc_builder_custom_reset@@Base+0x148>
   2cfa0:	ldr	r1, [pc, #24]	; 2cfc0 <flatcc_builder_custom_reset@@Base+0x14c>
   2cfa4:	ldr	r3, [pc, #24]	; 2cfc4 <flatcc_builder_custom_reset@@Base+0x150>
   2cfa8:	movw	r2, #434	; 0x1b2
   2cfac:	add	r0, pc, r0
   2cfb0:	add	r1, pc, r1
   2cfb4:	add	r3, pc, r3
   2cfb8:	bl	14f38 <__assert_fail@plt>
   2cfbc:	andeq	fp, r1, r4, ror #19
   2cfc0:	strdeq	fp, [r1], -r2
   2cfc4:	andeq	fp, r1, fp, asr #20

0002cfc8 <flatcc_builder_reset@@Base>:
   2cfc8:	push	{r4, sl, fp, lr}
   2cfcc:	add	fp, sp, #8
   2cfd0:	mov	r4, r0
   2cfd4:	ldr	r0, [r0, #52]	; 0x34
   2cfd8:	ldr	r2, [r4, #56]	; 0x38
   2cfdc:	cmp	r0, #0
   2cfe0:	beq	2cff0 <flatcc_builder_reset@@Base+0x28>
   2cfe4:	mov	r1, #0
   2cfe8:	bl	14ee4 <memset@plt>
   2cfec:	b	2cff8 <flatcc_builder_reset@@Base+0x30>
   2cff0:	cmp	r2, #0
   2cff4:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2cff8:	ldr	r0, [r4, #60]	; 0x3c
   2cffc:	ldr	r2, [r4, #64]	; 0x40
   2d000:	cmp	r0, #0
   2d004:	beq	2d014 <flatcc_builder_reset@@Base+0x4c>
   2d008:	mov	r1, #0
   2d00c:	bl	14ee4 <memset@plt>
   2d010:	b	2d01c <flatcc_builder_reset@@Base+0x54>
   2d014:	cmp	r2, #0
   2d018:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2d01c:	ldr	r0, [r4, #68]	; 0x44
   2d020:	ldr	r2, [r4, #72]	; 0x48
   2d024:	cmp	r0, #0
   2d028:	beq	2d038 <flatcc_builder_reset@@Base+0x70>
   2d02c:	mov	r1, #0
   2d030:	bl	14ee4 <memset@plt>
   2d034:	b	2d040 <flatcc_builder_reset@@Base+0x78>
   2d038:	cmp	r2, #0
   2d03c:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2d040:	ldr	r0, [r4, #76]	; 0x4c
   2d044:	ldr	r2, [r4, #80]	; 0x50
   2d048:	cmp	r0, #0
   2d04c:	beq	2d05c <flatcc_builder_reset@@Base+0x94>
   2d050:	mov	r1, #0
   2d054:	bl	14ee4 <memset@plt>
   2d058:	b	2d064 <flatcc_builder_reset@@Base+0x9c>
   2d05c:	cmp	r2, #0
   2d060:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2d064:	ldr	r0, [r4, #84]	; 0x54
   2d068:	ldr	r2, [r4, #88]	; 0x58
   2d06c:	cmp	r0, #0
   2d070:	beq	2d080 <flatcc_builder_reset@@Base+0xb8>
   2d074:	mov	r1, #0
   2d078:	bl	14ee4 <memset@plt>
   2d07c:	b	2d088 <flatcc_builder_reset@@Base+0xc0>
   2d080:	cmp	r2, #0
   2d084:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2d088:	ldr	r0, [r4, #92]	; 0x5c
   2d08c:	ldr	r2, [r4, #96]	; 0x60
   2d090:	cmp	r0, #0
   2d094:	beq	2d0a4 <flatcc_builder_reset@@Base+0xdc>
   2d098:	mov	r1, #0
   2d09c:	bl	14ee4 <memset@plt>
   2d0a0:	b	2d0ac <flatcc_builder_reset@@Base+0xe4>
   2d0a4:	cmp	r2, #0
   2d0a8:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2d0ac:	ldr	r0, [r4, #100]	; 0x64
   2d0b0:	ldr	r2, [r4, #104]	; 0x68
   2d0b4:	cmp	r0, #0
   2d0b8:	beq	2d0c8 <flatcc_builder_reset@@Base+0x100>
   2d0bc:	mov	r1, #0
   2d0c0:	bl	14ee4 <memset@plt>
   2d0c4:	b	2d0d0 <flatcc_builder_reset@@Base+0x108>
   2d0c8:	cmp	r2, #0
   2d0cc:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2d0d0:	ldr	r0, [r4, #108]	; 0x6c
   2d0d4:	ldr	r2, [r4, #112]	; 0x70
   2d0d8:	cmp	r0, #0
   2d0dc:	beq	2d0ec <flatcc_builder_reset@@Base+0x124>
   2d0e0:	mov	r1, #0
   2d0e4:	bl	14ee4 <memset@plt>
   2d0e8:	b	2d0f4 <flatcc_builder_reset@@Base+0x12c>
   2d0ec:	cmp	r2, #0
   2d0f0:	bne	2d160 <flatcc_builder_reset@@Base+0x198>
   2d0f4:	mov	r0, #0
   2d0f8:	str	r0, [r4, #120]	; 0x78
   2d0fc:	ldr	r1, [r4, #124]	; 0x7c
   2d100:	cmp	r1, #0
   2d104:	movne	r1, #16
   2d108:	strne	r1, [r4, #124]	; 0x7c
   2d10c:	vmov.i32	q8, #0	; 0x00000000
   2d110:	add	r1, r4, #148	; 0x94
   2d114:	str	r0, [r4, #136]	; 0x88
   2d118:	str	r0, [r4, #140]	; 0x8c
   2d11c:	strh	r0, [r4, #128]	; 0x80
   2d120:	str	r0, [r4, #32]
   2d124:	vst1.32	{d16-d17}, [r1]
   2d128:	ldr	r1, [r4, #184]	; 0xb8
   2d12c:	ldr	r2, [r4, #60]	; 0x3c
   2d130:	ldr	r3, [r4, #76]	; 0x4c
   2d134:	ldr	ip, [r4, #52]	; 0x34
   2d138:	cmp	r1, #0
   2d13c:	str	r2, [r4, #16]
   2d140:	str	r0, [r4, #20]
   2d144:	str	r0, [r4, #24]
   2d148:	stm	r4, {r3, ip}
   2d14c:	beq	2d158 <flatcc_builder_reset@@Base+0x190>
   2d150:	add	r0, r4, #188	; 0xbc
   2d154:	bl	31b10 <flatcc_emitter_reset@@Base>
   2d158:	mov	r0, #0
   2d15c:	pop	{r4, sl, fp, pc}
   2d160:	ldr	r0, [pc, #24]	; 2d180 <flatcc_builder_reset@@Base+0x1b8>
   2d164:	ldr	r1, [pc, #24]	; 2d184 <flatcc_builder_reset@@Base+0x1bc>
   2d168:	ldr	r3, [pc, #24]	; 2d188 <flatcc_builder_reset@@Base+0x1c0>
   2d16c:	movw	r2, #434	; 0x1b2
   2d170:	add	r0, pc, r0
   2d174:	add	r1, pc, r1
   2d178:	add	r3, pc, r3
   2d17c:	bl	14f38 <__assert_fail@plt>
   2d180:	andeq	fp, r1, r0, lsr #16
   2d184:	andeq	fp, r1, lr, lsr #16
   2d188:	andeq	fp, r1, r7, lsl #17

0002d18c <flatcc_builder_clear@@Base>:
   2d18c:	push	{r4, sl, fp, lr}
   2d190:	add	fp, sp, #8
   2d194:	sub	sp, sp, #8
   2d198:	mov	r4, r0
   2d19c:	ldr	r0, [r0, #40]	; 0x28
   2d1a0:	mov	r1, #0
   2d1a4:	mov	r2, #0
   2d1a8:	mov	r3, #0
   2d1ac:	ldr	ip, [r4, #48]	; 0x30
   2d1b0:	str	r1, [sp]
   2d1b4:	add	r1, r4, #52	; 0x34
   2d1b8:	blx	ip
   2d1bc:	ldr	r0, [r4, #40]	; 0x28
   2d1c0:	ldr	ip, [r4, #48]	; 0x30
   2d1c4:	mov	r1, #1
   2d1c8:	mov	r2, #0
   2d1cc:	mov	r3, #0
   2d1d0:	str	r1, [sp]
   2d1d4:	add	r1, r4, #60	; 0x3c
   2d1d8:	blx	ip
   2d1dc:	ldr	r0, [r4, #40]	; 0x28
   2d1e0:	ldr	ip, [r4, #48]	; 0x30
   2d1e4:	mov	r1, #2
   2d1e8:	mov	r2, #0
   2d1ec:	mov	r3, #0
   2d1f0:	str	r1, [sp]
   2d1f4:	add	r1, r4, #68	; 0x44
   2d1f8:	blx	ip
   2d1fc:	ldr	r0, [r4, #40]	; 0x28
   2d200:	ldr	ip, [r4, #48]	; 0x30
   2d204:	mov	r1, #3
   2d208:	mov	r2, #0
   2d20c:	mov	r3, #0
   2d210:	str	r1, [sp]
   2d214:	add	r1, r4, #76	; 0x4c
   2d218:	blx	ip
   2d21c:	ldr	r0, [r4, #40]	; 0x28
   2d220:	ldr	ip, [r4, #48]	; 0x30
   2d224:	mov	r1, #4
   2d228:	mov	r2, #0
   2d22c:	mov	r3, #0
   2d230:	str	r1, [sp]
   2d234:	add	r1, r4, #84	; 0x54
   2d238:	blx	ip
   2d23c:	ldr	r0, [r4, #40]	; 0x28
   2d240:	ldr	ip, [r4, #48]	; 0x30
   2d244:	mov	r1, #5
   2d248:	mov	r2, #0
   2d24c:	mov	r3, #0
   2d250:	str	r1, [sp]
   2d254:	add	r1, r4, #92	; 0x5c
   2d258:	blx	ip
   2d25c:	ldr	r0, [r4, #40]	; 0x28
   2d260:	ldr	ip, [r4, #48]	; 0x30
   2d264:	mov	r1, #6
   2d268:	mov	r2, #0
   2d26c:	mov	r3, #0
   2d270:	str	r1, [sp]
   2d274:	add	r1, r4, #100	; 0x64
   2d278:	blx	ip
   2d27c:	ldr	r0, [r4, #40]	; 0x28
   2d280:	ldr	ip, [r4, #48]	; 0x30
   2d284:	mov	r1, #7
   2d288:	mov	r2, #0
   2d28c:	mov	r3, #0
   2d290:	str	r1, [sp]
   2d294:	add	r1, r4, #108	; 0x6c
   2d298:	blx	ip
   2d29c:	ldr	r0, [r4, #184]	; 0xb8
   2d2a0:	cmp	r0, #0
   2d2a4:	beq	2d2b0 <flatcc_builder_clear@@Base+0x124>
   2d2a8:	add	r0, r4, #188	; 0xbc
   2d2ac:	bl	31bdc <flatcc_emitter_clear@@Base>
   2d2b0:	mov	r0, r4
   2d2b4:	mov	r1, #0
   2d2b8:	mov	r2, #232	; 0xe8
   2d2bc:	sub	sp, fp, #8
   2d2c0:	pop	{r4, sl, fp, lr}
   2d2c4:	b	14ee4 <memset@plt>

0002d2c8 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2d2c8:	push	{r4, r5, r6, r7, fp, lr}
   2d2cc:	add	fp, sp, #16
   2d2d0:	sub	sp, sp, #8
   2d2d4:	mov	r4, r0
   2d2d8:	ldr	r0, [r0, #112]	; 0x70
   2d2dc:	add	r1, r1, #7
   2d2e0:	ldr	r7, [r4, #228]	; 0xe4
   2d2e4:	bic	r5, r1, #3
   2d2e8:	add	r6, r4, #108	; 0x6c
   2d2ec:	add	r2, r7, r5
   2d2f0:	cmp	r2, r0
   2d2f4:	bls	2d31c <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   2d2f8:	ldr	r0, [r4, #40]	; 0x28
   2d2fc:	ldr	ip, [r4, #48]	; 0x30
   2d300:	mov	r1, #7
   2d304:	mov	r3, #0
   2d308:	str	r1, [sp]
   2d30c:	mov	r1, r6
   2d310:	blx	ip
   2d314:	cmp	r0, #0
   2d318:	bne	2d368 <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   2d31c:	ldr	r0, [r6]
   2d320:	adds	r6, r0, r7
   2d324:	beq	2d358 <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   2d328:	mov	r0, r6
   2d32c:	mov	r1, #0
   2d330:	mov	r2, r5
   2d334:	bl	14ee4 <memset@plt>
   2d338:	ldr	r0, [r4, #224]	; 0xe0
   2d33c:	str	r0, [r6], #4
   2d340:	ldr	r0, [r4, #228]	; 0xe4
   2d344:	add	r1, r0, #4
   2d348:	add	r0, r0, r5
   2d34c:	str	r1, [r4, #224]	; 0xe0
   2d350:	str	r0, [r4, #228]	; 0xe4
   2d354:	b	2d35c <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   2d358:	mov	r6, #0
   2d35c:	mov	r0, r6
   2d360:	sub	sp, fp, #16
   2d364:	pop	{r4, r5, r6, r7, fp, pc}
   2d368:	ldr	r0, [pc, #24]	; 2d388 <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   2d36c:	ldr	r1, [pc, #24]	; 2d38c <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   2d370:	ldr	r3, [pc, #24]	; 2d390 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   2d374:	mov	r2, #308	; 0x134
   2d378:	add	r0, pc, r0
   2d37c:	add	r1, pc, r1
   2d380:	add	r3, pc, r3
   2d384:	bl	14f38 <__assert_fail@plt>
   2d388:	andeq	ip, r1, r7, ror #15
   2d38c:	andeq	fp, r1, r6, lsr #12
   2d390:	andeq	ip, r1, r9, lsl r6

0002d394 <flatcc_builder_enter_user_frame@@Base>:
   2d394:	push	{r4, r5, r6, r7, fp, lr}
   2d398:	add	fp, sp, #16
   2d39c:	sub	sp, sp, #8
   2d3a0:	mov	r4, r0
   2d3a4:	ldr	r0, [r0, #112]	; 0x70
   2d3a8:	add	r1, r1, #7
   2d3ac:	ldr	r7, [r4, #228]	; 0xe4
   2d3b0:	bic	r5, r1, #3
   2d3b4:	add	r6, r4, #108	; 0x6c
   2d3b8:	add	r2, r7, r5
   2d3bc:	cmp	r2, r0
   2d3c0:	bls	2d3e8 <flatcc_builder_enter_user_frame@@Base+0x54>
   2d3c4:	ldr	r0, [r4, #40]	; 0x28
   2d3c8:	ldr	ip, [r4, #48]	; 0x30
   2d3cc:	mov	r1, #7
   2d3d0:	mov	r3, #0
   2d3d4:	str	r1, [sp]
   2d3d8:	mov	r1, r6
   2d3dc:	blx	ip
   2d3e0:	cmp	r0, #0
   2d3e4:	bne	2d434 <flatcc_builder_enter_user_frame@@Base+0xa0>
   2d3e8:	ldr	r0, [r6]
   2d3ec:	adds	r6, r0, r7
   2d3f0:	beq	2d428 <flatcc_builder_enter_user_frame@@Base+0x94>
   2d3f4:	mov	r0, r6
   2d3f8:	mov	r1, #0
   2d3fc:	mov	r2, r5
   2d400:	bl	14ee4 <memset@plt>
   2d404:	ldr	r0, [r4, #224]	; 0xe0
   2d408:	str	r0, [r6]
   2d40c:	ldr	r1, [r4, #228]	; 0xe4
   2d410:	add	r0, r1, #4
   2d414:	add	r1, r1, r5
   2d418:	str	r0, [r4, #224]	; 0xe0
   2d41c:	str	r1, [r4, #228]	; 0xe4
   2d420:	sub	sp, fp, #16
   2d424:	pop	{r4, r5, r6, r7, fp, pc}
   2d428:	mov	r0, #0
   2d42c:	sub	sp, fp, #16
   2d430:	pop	{r4, r5, r6, r7, fp, pc}
   2d434:	ldr	r0, [pc, #24]	; 2d454 <flatcc_builder_enter_user_frame@@Base+0xc0>
   2d438:	ldr	r1, [pc, #24]	; 2d458 <flatcc_builder_enter_user_frame@@Base+0xc4>
   2d43c:	ldr	r3, [pc, #24]	; 2d45c <flatcc_builder_enter_user_frame@@Base+0xc8>
   2d440:	mov	r2, #308	; 0x134
   2d444:	add	r0, pc, r0
   2d448:	add	r1, pc, r1
   2d44c:	add	r3, pc, r3
   2d450:	bl	14f38 <__assert_fail@plt>
   2d454:	andeq	ip, r1, fp, lsl r7
   2d458:	andeq	fp, r1, sl, asr r5
   2d45c:	andeq	ip, r1, sp, asr #10

0002d460 <flatcc_builder_exit_user_frame@@Base>:
   2d460:	push	{fp, lr}
   2d464:	mov	fp, sp
   2d468:	ldr	r1, [r0, #224]	; 0xe0
   2d46c:	cmp	r1, #0
   2d470:	subne	r2, r1, #4
   2d474:	strne	r2, [r0, #228]	; 0xe4
   2d478:	ldrne	r2, [r0, #108]	; 0x6c
   2d47c:	addne	r1, r2, r1
   2d480:	ldrne	r1, [r1, #-4]
   2d484:	strne	r1, [r0, #224]	; 0xe0
   2d488:	movne	r0, r1
   2d48c:	popne	{fp, pc}
   2d490:	ldr	r0, [pc, #24]	; 2d4b0 <flatcc_builder_exit_user_frame@@Base+0x50>
   2d494:	ldr	r1, [pc, #24]	; 2d4b4 <flatcc_builder_exit_user_frame@@Base+0x54>
   2d498:	ldr	r3, [pc, #24]	; 2d4b8 <flatcc_builder_exit_user_frame@@Base+0x58>
   2d49c:	movw	r2, #542	; 0x21e
   2d4a0:	add	r0, pc, r0
   2d4a4:	add	r1, pc, r1
   2d4a8:	add	r3, pc, r3
   2d4ac:	bl	14f38 <__assert_fail@plt>
   2d4b0:	muleq	r1, sp, r5
   2d4b4:	strdeq	fp, [r1], -lr
   2d4b8:	andeq	fp, r1, lr, lsr #11

0002d4bc <flatcc_builder_exit_user_frame_at@@Base>:
   2d4bc:	push	{fp, lr}
   2d4c0:	mov	fp, sp
   2d4c4:	ldr	r2, [r0, #224]	; 0xe0
   2d4c8:	cmp	r2, r1
   2d4cc:	bcc	2d518 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   2d4d0:	cmp	r1, #0
   2d4d4:	str	r1, [r0, #224]	; 0xe0
   2d4d8:	subne	r2, r1, #4
   2d4dc:	strne	r2, [r0, #228]	; 0xe4
   2d4e0:	ldrne	r2, [r0, #108]	; 0x6c
   2d4e4:	addne	r1, r2, r1
   2d4e8:	ldrne	r1, [r1, #-4]
   2d4ec:	strne	r1, [r0, #224]	; 0xe0
   2d4f0:	movne	r0, r1
   2d4f4:	popne	{fp, pc}
   2d4f8:	ldr	r0, [pc, #68]	; 2d544 <flatcc_builder_exit_user_frame_at@@Base+0x88>
   2d4fc:	ldr	r1, [pc, #68]	; 2d548 <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   2d500:	ldr	r3, [pc, #68]	; 2d54c <flatcc_builder_exit_user_frame_at@@Base+0x90>
   2d504:	movw	r2, #542	; 0x21e
   2d508:	add	r0, pc, r0
   2d50c:	add	r1, pc, r1
   2d510:	add	r3, pc, r3
   2d514:	bl	14f38 <__assert_fail@plt>
   2d518:	ldr	r0, [pc, #24]	; 2d538 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   2d51c:	ldr	r1, [pc, #24]	; 2d53c <flatcc_builder_exit_user_frame_at@@Base+0x80>
   2d520:	ldr	r3, [pc, #24]	; 2d540 <flatcc_builder_exit_user_frame_at@@Base+0x84>
   2d524:	movw	r2, #551	; 0x227
   2d528:	add	r0, pc, r0
   2d52c:	add	r1, pc, r1
   2d530:	add	r3, pc, r3
   2d534:	bl	14f38 <__assert_fail@plt>
   2d538:	andeq	fp, r1, r8, ror #10
   2d53c:	andeq	fp, r1, r6, ror r4
   2d540:	andeq	fp, r1, pc, ror r5
   2d544:	andeq	fp, r1, r5, lsr r5
   2d548:	muleq	r1, r6, r4
   2d54c:	andeq	fp, r1, r6, asr #10

0002d550 <flatcc_builder_get_current_user_frame@@Base>:
   2d550:	ldr	r0, [r0, #224]	; 0xe0
   2d554:	bx	lr

0002d558 <flatcc_builder_get_user_frame_ptr@@Base>:
   2d558:	ldr	r0, [r0, #108]	; 0x6c
   2d55c:	add	r0, r0, r1
   2d560:	bx	lr

0002d564 <flatcc_builder_embed_buffer@@Base>:
   2d564:	push	{r4, r5, r6, r7, fp, lr}
   2d568:	add	fp, sp, #16
   2d56c:	sub	sp, sp, #88	; 0x58
   2d570:	mov	r4, r0
   2d574:	ldr	r0, [fp, #8]
   2d578:	mov	r5, r3
   2d57c:	mov	r7, r2
   2d580:	mov	r2, r1
   2d584:	sub	r1, fp, #18
   2d588:	strh	r0, [fp, #-18]	; 0xffffffee
   2d58c:	mov	r0, r4
   2d590:	ldr	r3, [r4, #152]	; 0x98
   2d594:	cmp	r3, #0
   2d598:	movwne	r3, #1
   2d59c:	bl	2d6f0 <flatcc_builder_embed_buffer@@Base+0x18c>
   2d5a0:	ldr	r1, [fp, #12]
   2d5a4:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2d5a8:	ldr	r0, [r4, #136]	; 0x88
   2d5ac:	mov	r2, #0
   2d5b0:	str	r2, [sp, #12]
   2d5b4:	str	r2, [sp, #8]
   2d5b8:	and	r1, r1, #2
   2d5bc:	sub	r3, r3, #1
   2d5c0:	add	r1, r5, r1, lsl #1
   2d5c4:	sub	r1, r0, r1
   2d5c8:	and	r3, r1, r3
   2d5cc:	add	r1, r3, r5
   2d5d0:	str	r1, [fp, #-24]	; 0xffffffe8
   2d5d4:	ldr	r1, [r4, #152]	; 0x98
   2d5d8:	cmp	r1, #0
   2d5dc:	mov	r1, #0
   2d5e0:	beq	2d600 <flatcc_builder_embed_buffer@@Base+0x9c>
   2d5e4:	mov	r1, #4
   2d5e8:	sub	r2, fp, #24
   2d5ec:	str	r1, [sp, #20]
   2d5f0:	str	r2, [sp, #16]
   2d5f4:	mov	r2, #1
   2d5f8:	str	r1, [sp, #8]
   2d5fc:	str	r2, [sp, #12]
   2d600:	cmp	r5, #0
   2d604:	beq	2d628 <flatcc_builder_embed_buffer@@Base+0xc4>
   2d608:	add	r6, sp, #8
   2d60c:	add	r1, r1, r5
   2d610:	add	r6, r6, r2, lsl #3
   2d614:	add	r2, r2, #1
   2d618:	str	r1, [sp, #8]
   2d61c:	str	r7, [r6, #8]
   2d620:	str	r5, [r6, #12]
   2d624:	str	r2, [sp, #12]
   2d628:	cmp	r3, #0
   2d62c:	beq	2d658 <flatcc_builder_embed_buffer@@Base+0xf4>
   2d630:	add	r1, r1, r3
   2d634:	add	r7, sp, #8
   2d638:	str	r1, [sp, #8]
   2d63c:	add	r7, r7, r2, lsl #3
   2d640:	add	r2, r2, #1
   2d644:	ldr	r6, [pc, #136]	; 2d6d4 <flatcc_builder_embed_buffer@@Base+0x170>
   2d648:	ldr	r6, [pc, r6]
   2d64c:	str	r6, [r7, #8]
   2d650:	str	r3, [r7, #12]
   2d654:	str	r2, [sp, #12]
   2d658:	cmp	r1, #0
   2d65c:	ble	2d6b4 <flatcc_builder_embed_buffer@@Base+0x150>
   2d660:	sub	r5, r0, r1
   2d664:	ldr	r0, [r4, #36]	; 0x24
   2d668:	ldr	r7, [r4, #44]	; 0x2c
   2d66c:	str	r1, [sp]
   2d670:	add	r1, sp, #8
   2d674:	add	r1, r1, #8
   2d678:	mov	r3, r5
   2d67c:	blx	r7
   2d680:	cmp	r0, #0
   2d684:	streq	r5, [r4, #136]	; 0x88
   2d688:	moveq	r0, r5
   2d68c:	subeq	sp, fp, #16
   2d690:	popeq	{r4, r5, r6, r7, fp, pc}
   2d694:	ldr	r0, [pc, #72]	; 2d6e4 <flatcc_builder_embed_buffer@@Base+0x180>
   2d698:	ldr	r1, [pc, #72]	; 2d6e8 <flatcc_builder_embed_buffer@@Base+0x184>
   2d69c:	ldr	r3, [pc, #72]	; 2d6ec <flatcc_builder_embed_buffer@@Base+0x188>
   2d6a0:	movw	r2, #651	; 0x28b
   2d6a4:	add	r0, pc, r0
   2d6a8:	add	r1, pc, r1
   2d6ac:	add	r3, pc, r3
   2d6b0:	bl	14f38 <__assert_fail@plt>
   2d6b4:	ldr	r0, [pc, #28]	; 2d6d8 <flatcc_builder_embed_buffer@@Base+0x174>
   2d6b8:	ldr	r1, [pc, #28]	; 2d6dc <flatcc_builder_embed_buffer@@Base+0x178>
   2d6bc:	ldr	r3, [pc, #28]	; 2d6e0 <flatcc_builder_embed_buffer@@Base+0x17c>
   2d6c0:	movw	r2, #647	; 0x287
   2d6c4:	add	r0, pc, r0
   2d6c8:	add	r1, pc, r1
   2d6cc:	add	r3, pc, r3
   2d6d0:	bl	14f38 <__assert_fail@plt>
   2d6d4:	andeq	lr, r2, ip, lsl sl
   2d6d8:	muleq	r1, fp, r4
   2d6dc:	ldrdeq	fp, [r1], -sl
   2d6e0:	andeq	ip, r1, r2, asr r3
   2d6e4:			; <UNDEFINED> instruction: 0x0001c4bb
   2d6e8:	strdeq	fp, [r1], -sl
   2d6ec:	andeq	ip, r1, r2, ror r3
   2d6f0:	push	{r4, sl, fp, lr}
   2d6f4:	add	fp, sp, #8
   2d6f8:	sub	sp, sp, #80	; 0x50
   2d6fc:	cmp	r2, #0
   2d700:	bne	2d710 <flatcc_builder_embed_buffer@@Base+0x1ac>
   2d704:	ldrh	r2, [r0, #132]	; 0x84
   2d708:	cmp	r2, #0
   2d70c:	movweq	r2, #1
   2d710:	ldrh	r4, [r1]
   2d714:	cmp	r4, #4
   2d718:	movwcc	r4, #4
   2d71c:	cmpcs	r4, r2
   2d720:	bcs	2d730 <flatcc_builder_embed_buffer@@Base+0x1cc>
   2d724:	cmp	r4, r2
   2d728:	movcc	r4, r2
   2d72c:	strh	r4, [r1]
   2d730:	cmp	r3, #0
   2d734:	bne	2d7a8 <flatcc_builder_embed_buffer@@Base+0x244>
   2d738:	ldr	r4, [r0, #140]	; 0x8c
   2d73c:	sub	r1, r2, #1
   2d740:	ands	r1, r4, r1
   2d744:	beq	2d7a8 <flatcc_builder_embed_buffer@@Base+0x244>
   2d748:	mov	r2, #1
   2d74c:	str	r1, [sp, #20]
   2d750:	str	r1, [sp, #8]
   2d754:	cmn	r1, #1
   2d758:	str	r2, [sp, #12]
   2d75c:	ldr	r2, [pc, #172]	; 2d810 <flatcc_builder_embed_buffer@@Base+0x2ac>
   2d760:	ldr	r2, [pc, r2]
   2d764:	str	r2, [sp, #16]
   2d768:	add	r2, r1, r4
   2d76c:	str	r2, [r0, #140]	; 0x8c
   2d770:	ble	2d7b0 <flatcc_builder_embed_buffer@@Base+0x24c>
   2d774:	ldr	r2, [r0, #36]	; 0x24
   2d778:	ldr	ip, [r0, #44]	; 0x2c
   2d77c:	add	r0, sp, #8
   2d780:	str	r1, [sp]
   2d784:	mov	r3, r4
   2d788:	add	r1, r0, #8
   2d78c:	mov	r0, r2
   2d790:	mov	r2, #1
   2d794:	blx	ip
   2d798:	cmp	r0, #0
   2d79c:	bne	2d7d0 <flatcc_builder_embed_buffer@@Base+0x26c>
   2d7a0:	cmn	r4, #1
   2d7a4:	beq	2d7f0 <flatcc_builder_embed_buffer@@Base+0x28c>
   2d7a8:	sub	sp, fp, #8
   2d7ac:	pop	{r4, sl, fp, pc}
   2d7b0:	ldr	r0, [pc, #92]	; 2d814 <flatcc_builder_embed_buffer@@Base+0x2b0>
   2d7b4:	ldr	r1, [pc, #92]	; 2d818 <flatcc_builder_embed_buffer@@Base+0x2b4>
   2d7b8:	ldr	r3, [pc, #92]	; 2d81c <flatcc_builder_embed_buffer@@Base+0x2b8>
   2d7bc:	movw	r2, #673	; 0x2a1
   2d7c0:	add	r0, pc, r0
   2d7c4:	add	r1, pc, r1
   2d7c8:	add	r3, pc, r3
   2d7cc:	bl	14f38 <__assert_fail@plt>
   2d7d0:	ldr	r0, [pc, #72]	; 2d820 <flatcc_builder_embed_buffer@@Base+0x2bc>
   2d7d4:	ldr	r1, [pc, #72]	; 2d824 <flatcc_builder_embed_buffer@@Base+0x2c0>
   2d7d8:	ldr	r3, [pc, #72]	; 2d828 <flatcc_builder_embed_buffer@@Base+0x2c4>
   2d7dc:	movw	r2, #677	; 0x2a5
   2d7e0:	add	r0, pc, r0
   2d7e4:	add	r1, pc, r1
   2d7e8:	add	r3, pc, r3
   2d7ec:	bl	14f38 <__assert_fail@plt>
   2d7f0:	ldr	r0, [pc, #52]	; 2d82c <flatcc_builder_embed_buffer@@Base+0x2c8>
   2d7f4:	ldr	r1, [pc, #52]	; 2d830 <flatcc_builder_embed_buffer@@Base+0x2cc>
   2d7f8:	ldr	r3, [pc, #52]	; 2d834 <flatcc_builder_embed_buffer@@Base+0x2d0>
   2d7fc:	movw	r2, #702	; 0x2be
   2d800:	add	r0, pc, r0
   2d804:	add	r1, pc, r1
   2d808:	add	r3, pc, r3
   2d80c:	bl	14f38 <__assert_fail@plt>
   2d810:	andeq	lr, r2, r4, lsl #18
   2d814:	muleq	r1, pc, r3	; <UNPREDICTABLE>
   2d818:	ldrdeq	fp, [r1], -lr
   2d81c:	andeq	ip, r1, r2, lsl r3
   2d820:	andeq	ip, r1, pc, ror r3
   2d824:			; <UNDEFINED> instruction: 0x0001b1be
   2d828:	strdeq	ip, [r1], -r2
   2d82c:	andeq	ip, r1, pc, asr r3
   2d830:	muleq	r1, lr, r1
   2d834:	ldrdeq	ip, [r1], -r4

0002d838 <flatcc_builder_create_buffer@@Base>:
   2d838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d83c:	add	fp, sp, #28
   2d840:	sub	sp, sp, #100	; 0x64
   2d844:	ldr	sl, [fp, #12]
   2d848:	mov	r4, r0
   2d84c:	ldr	r0, [fp, #8]
   2d850:	mov	r7, r1
   2d854:	mov	r5, #0
   2d858:	mov	r6, r3
   2d85c:	sub	r1, fp, #30
   2d860:	str	r5, [sp, #12]
   2d864:	and	r9, sl, #1
   2d868:	strh	r0, [fp, #-30]	; 0xffffffe2
   2d86c:	mov	r0, r4
   2d870:	mov	r3, r9
   2d874:	bl	2d6f0 <flatcc_builder_embed_buffer@@Base+0x18c>
   2d878:	ldrh	r0, [r4, #128]	; 0x80
   2d87c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2d880:	str	r6, [sp, #8]
   2d884:	cmp	r0, r1
   2d888:	strhcc	r1, [r4, #128]	; 0x80
   2d88c:	cmp	r7, #0
   2d890:	beq	2d8ac <flatcc_builder_create_buffer@@Base+0x74>
   2d894:	ldr	r5, [r7]
   2d898:	cmp	r5, #0
   2d89c:	str	r5, [sp, #12]
   2d8a0:	movwne	r5, #1
   2d8a4:	lsl	r7, r5, #2
   2d8a8:	b	2d8b0 <flatcc_builder_create_buffer@@Base+0x78>
   2d8ac:	mov	r7, #0
   2d8b0:	ldr	r0, [r4, #136]	; 0x88
   2d8b4:	and	r2, sl, #2
   2d8b8:	mov	r3, #0
   2d8bc:	sub	r6, r1, #1
   2d8c0:	ands	ip, sl, #3
   2d8c4:	mov	sl, #4
   2d8c8:	mov	r1, #4
   2d8cc:	str	r3, [sp, #20]
   2d8d0:	str	r3, [sp, #16]
   2d8d4:	sub	r2, r0, r2, lsl #1
   2d8d8:	sub	r2, r2, r7
   2d8dc:	sub	r2, r2, #4
   2d8e0:	beq	2d904 <flatcc_builder_create_buffer@@Base+0xcc>
   2d8e4:	mov	r1, #4
   2d8e8:	sub	r3, fp, #40	; 0x28
   2d8ec:	str	r1, [sp, #28]
   2d8f0:	str	r3, [sp, #24]
   2d8f4:	str	r1, [sp, #16]
   2d8f8:	mov	r3, #1
   2d8fc:	mov	r1, #8
   2d900:	str	r3, [sp, #20]
   2d904:	add	lr, sp, #16
   2d908:	and	r6, r2, r6
   2d90c:	sub	r8, fp, #36	; 0x24
   2d910:	str	r1, [sp, #16]
   2d914:	cmp	r5, #0
   2d918:	add	r2, lr, r3, lsl #3
   2d91c:	str	r8, [r2, #8]
   2d920:	str	sl, [r2, #12]
   2d924:	add	r2, r3, #1
   2d928:	str	r2, [sp, #20]
   2d92c:	beq	2d950 <flatcc_builder_create_buffer@@Base+0x118>
   2d930:	add	r2, lr, r2, lsl #3
   2d934:	add	r1, r1, r7
   2d938:	add	r5, sp, #12
   2d93c:	str	r1, [sp, #16]
   2d940:	str	r5, [r2, #8]
   2d944:	str	r7, [r2, #12]
   2d948:	orr	r2, r3, #2
   2d94c:	str	r2, [sp, #20]
   2d950:	cmp	r6, #0
   2d954:	beq	2d97c <flatcc_builder_create_buffer@@Base+0x144>
   2d958:	add	r1, r1, r6
   2d95c:	add	r3, lr, r2, lsl #3
   2d960:	add	r2, r2, #1
   2d964:	str	r1, [sp, #16]
   2d968:	ldr	r5, [pc, #220]	; 2da4c <flatcc_builder_create_buffer@@Base+0x214>
   2d96c:	ldr	r5, [pc, r5]
   2d970:	str	r5, [r3, #8]
   2d974:	str	r6, [r3, #12]
   2d978:	str	r2, [sp, #20]
   2d97c:	sub	r7, r0, r1
   2d980:	cmp	ip, #0
   2d984:	mov	r6, #144	; 0x90
   2d988:	ldr	r3, [sp, #8]
   2d98c:	mov	r0, r7
   2d990:	addne	r0, r0, #4
   2d994:	cmp	r9, #0
   2d998:	movweq	r6, #140	; 0x8c
   2d99c:	cmp	r1, #0
   2d9a0:	ldr	r6, [r4, r6]
   2d9a4:	sub	r3, r3, r0
   2d9a8:	str	r3, [fp, #-36]	; 0xffffffdc
   2d9ac:	sub	r0, r6, r0
   2d9b0:	str	r0, [fp, #-40]	; 0xffffffd8
   2d9b4:	ble	2da0c <flatcc_builder_create_buffer@@Base+0x1d4>
   2d9b8:	ldr	r0, [r4, #36]	; 0x24
   2d9bc:	ldr	r6, [r4, #44]	; 0x2c
   2d9c0:	str	r1, [sp]
   2d9c4:	add	r1, lr, #8
   2d9c8:	mov	r3, r7
   2d9cc:	blx	r6
   2d9d0:	cmp	r0, #0
   2d9d4:	bne	2da2c <flatcc_builder_create_buffer@@Base+0x1f4>
   2d9d8:	cmp	r7, #0
   2d9dc:	str	r7, [r4, #136]	; 0x88
   2d9e0:	movne	r0, r7
   2d9e4:	subne	sp, fp, #28
   2d9e8:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d9ec:	ldr	r0, [pc, #116]	; 2da68 <flatcc_builder_create_buffer@@Base+0x230>
   2d9f0:	ldr	r1, [pc, #116]	; 2da6c <flatcc_builder_create_buffer@@Base+0x234>
   2d9f4:	ldr	r3, [pc, #116]	; 2da70 <flatcc_builder_create_buffer@@Base+0x238>
   2d9f8:	mov	r2, #772	; 0x304
   2d9fc:	add	r0, pc, r0
   2da00:	add	r1, pc, r1
   2da04:	add	r3, pc, r3
   2da08:	bl	14f38 <__assert_fail@plt>
   2da0c:	ldr	r0, [pc, #60]	; 2da50 <flatcc_builder_create_buffer@@Base+0x218>
   2da10:	ldr	r1, [pc, #60]	; 2da54 <flatcc_builder_create_buffer@@Base+0x21c>
   2da14:	ldr	r3, [pc, #60]	; 2da58 <flatcc_builder_create_buffer@@Base+0x220>
   2da18:	movw	r2, #647	; 0x287
   2da1c:	add	r0, pc, r0
   2da20:	add	r1, pc, r1
   2da24:	add	r3, pc, r3
   2da28:	bl	14f38 <__assert_fail@plt>
   2da2c:	ldr	r0, [pc, #40]	; 2da5c <flatcc_builder_create_buffer@@Base+0x224>
   2da30:	ldr	r1, [pc, #40]	; 2da60 <flatcc_builder_create_buffer@@Base+0x228>
   2da34:	ldr	r3, [pc, #40]	; 2da64 <flatcc_builder_create_buffer@@Base+0x22c>
   2da38:	movw	r2, #651	; 0x28b
   2da3c:	add	r0, pc, r0
   2da40:	add	r1, pc, r1
   2da44:	add	r3, pc, r3
   2da48:	bl	14f38 <__assert_fail@plt>
   2da4c:	strdeq	lr, [r2], -r8
   2da50:	andeq	ip, r1, r3, asr #2
   2da54:	andeq	sl, r1, r2, lsl #31
   2da58:	strdeq	fp, [r1], -sl
   2da5c:	andeq	ip, r1, r3, lsr #2
   2da60:	andeq	sl, r1, r2, ror #30
   2da64:	ldrdeq	fp, [r1], -sl
   2da68:	andeq	ip, r1, r3, ror #2
   2da6c:	andeq	sl, r1, r2, lsr #31
   2da70:	strdeq	fp, [r1], -r0

0002da74 <flatcc_builder_create_struct@@Base>:
   2da74:	push	{r4, r5, r6, sl, fp, lr}
   2da78:	add	fp, sp, #16
   2da7c:	sub	sp, sp, #80	; 0x50
   2da80:	cmp	r3, #0
   2da84:	beq	2db5c <flatcc_builder_create_struct@@Base+0xe8>
   2da88:	mov	r5, r0
   2da8c:	ldrh	r0, [r0, #128]	; 0x80
   2da90:	mov	r4, #0
   2da94:	cmp	r0, r3
   2da98:	strhcc	r3, [r5, #128]	; 0x80
   2da9c:	sub	r3, r3, #1
   2daa0:	cmp	r2, #0
   2daa4:	ldr	r0, [r5, #136]	; 0x88
   2daa8:	str	r4, [sp, #12]
   2daac:	str	r4, [sp, #8]
   2dab0:	movne	r4, #1
   2dab4:	strne	r2, [sp, #20]
   2dab8:	strne	r1, [sp, #16]
   2dabc:	strne	r2, [sp, #8]
   2dac0:	strne	r4, [sp, #12]
   2dac4:	sub	r6, r0, r2
   2dac8:	and	r3, r6, r3
   2dacc:	cmp	r3, #0
   2dad0:	beq	2dafc <flatcc_builder_create_struct@@Base+0x88>
   2dad4:	add	r2, r3, r2
   2dad8:	add	r1, sp, #8
   2dadc:	str	r2, [sp, #8]
   2dae0:	add	r1, r1, r4, lsl #3
   2dae4:	add	r4, r4, #1
   2dae8:	ldr	r6, [pc, #172]	; 2db9c <flatcc_builder_create_struct@@Base+0x128>
   2daec:	ldr	r6, [pc, r6]
   2daf0:	str	r6, [r1, #8]
   2daf4:	str	r3, [r1, #12]
   2daf8:	str	r4, [sp, #12]
   2dafc:	cmp	r2, #0
   2db00:	ble	2db7c <flatcc_builder_create_struct@@Base+0x108>
   2db04:	sub	r6, r0, r2
   2db08:	ldr	r0, [r5, #36]	; 0x24
   2db0c:	ldr	ip, [r5, #44]	; 0x2c
   2db10:	add	r1, sp, #8
   2db14:	str	r2, [sp]
   2db18:	mov	r2, r4
   2db1c:	add	r1, r1, #8
   2db20:	mov	r3, r6
   2db24:	blx	ip
   2db28:	cmp	r0, #0
   2db2c:	streq	r6, [r5, #136]	; 0x88
   2db30:	moveq	r0, r6
   2db34:	subeq	sp, fp, #16
   2db38:	popeq	{r4, r5, r6, sl, fp, pc}
   2db3c:	ldr	r0, [pc, #116]	; 2dbb8 <flatcc_builder_create_struct@@Base+0x144>
   2db40:	ldr	r1, [pc, #116]	; 2dbbc <flatcc_builder_create_struct@@Base+0x148>
   2db44:	ldr	r3, [pc, #116]	; 2dbc0 <flatcc_builder_create_struct@@Base+0x14c>
   2db48:	movw	r2, #651	; 0x28b
   2db4c:	add	r0, pc, r0
   2db50:	add	r1, pc, r1
   2db54:	add	r3, pc, r3
   2db58:	bl	14f38 <__assert_fail@plt>
   2db5c:	ldr	r0, [pc, #60]	; 2dba0 <flatcc_builder_create_struct@@Base+0x12c>
   2db60:	ldr	r1, [pc, #60]	; 2dba4 <flatcc_builder_create_struct@@Base+0x130>
   2db64:	ldr	r3, [pc, #60]	; 2dba8 <flatcc_builder_create_struct@@Base+0x134>
   2db68:	movw	r2, #783	; 0x30f
   2db6c:	add	r0, pc, r0
   2db70:	add	r1, pc, r1
   2db74:	add	r3, pc, r3
   2db78:	bl	14f38 <__assert_fail@plt>
   2db7c:	ldr	r0, [pc, #40]	; 2dbac <flatcc_builder_create_struct@@Base+0x138>
   2db80:	ldr	r1, [pc, #40]	; 2dbb0 <flatcc_builder_create_struct@@Base+0x13c>
   2db84:	ldr	r3, [pc, #40]	; 2dbb4 <flatcc_builder_create_struct@@Base+0x140>
   2db88:	movw	r2, #647	; 0x287
   2db8c:	add	r0, pc, r0
   2db90:	add	r1, pc, r1
   2db94:	add	r3, pc, r3
   2db98:	bl	14f38 <__assert_fail@plt>
   2db9c:	andeq	lr, r2, r8, ror r5
   2dba0:	andeq	fp, r1, fp
   2dba4:	andeq	sl, r1, r2, lsr lr
   2dba8:	andeq	fp, r1, lr
   2dbac:	ldrdeq	fp, [r1], -r3
   2dbb0:	andeq	sl, r1, r2, lsl lr
   2dbb4:	andeq	fp, r1, sl, lsl #29
   2dbb8:	andeq	ip, r1, r3, lsl r0
   2dbbc:	andeq	sl, r1, r2, asr lr
   2dbc0:	andeq	fp, r1, sl, asr #29

0002dbc4 <flatcc_builder_start_buffer@@Base>:
   2dbc4:	push	{r4, r5, r6, r7, fp, lr}
   2dbc8:	add	fp, sp, #16
   2dbcc:	mov	r5, r1
   2dbd0:	ldrh	r1, [r0, #128]	; 0x80
   2dbd4:	mov	r6, r3
   2dbd8:	mov	r7, r2
   2dbdc:	mov	r4, r0
   2dbe0:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   2dbe4:	mov	r1, r0
   2dbe8:	mvn	r0, #0
   2dbec:	cmp	r1, #0
   2dbf0:	popne	{r4, r5, r6, r7, fp, pc}
   2dbf4:	mov	r0, #1
   2dbf8:	cmp	r5, #0
   2dbfc:	strh	r0, [r4, #128]	; 0x80
   2dc00:	ldrh	r1, [r4, #132]	; 0x84
   2dc04:	ldr	r2, [r4, #32]
   2dc08:	strh	r1, [r2, #34]	; 0x22
   2dc0c:	strh	r7, [r4, #132]	; 0x84
   2dc10:	ldrh	r1, [r4, #164]	; 0xa4
   2dc14:	ldr	r2, [r4, #32]
   2dc18:	strh	r1, [r2, #32]
   2dc1c:	strh	r6, [r4, #164]	; 0xa4
   2dc20:	ldr	r1, [r4, #32]
   2dc24:	ldr	r2, [r4, #144]	; 0x90
   2dc28:	str	r2, [r1, #20]
   2dc2c:	ldr	r1, [r4, #32]
   2dc30:	ldr	r2, [r4, #152]	; 0x98
   2dc34:	str	r2, [r1, #28]
   2dc38:	ldr	r3, [r4, #148]	; 0x94
   2dc3c:	ldr	r1, [r4, #32]
   2dc40:	ldr	r2, [r4, #136]	; 0x88
   2dc44:	ldr	r7, [r4, #168]	; 0xa8
   2dc48:	add	r6, r3, #1
   2dc4c:	str	r2, [r4, #144]	; 0x90
   2dc50:	str	r6, [r4, #148]	; 0x94
   2dc54:	str	r3, [r4, #152]	; 0x98
   2dc58:	str	r7, [r1, #16]
   2dc5c:	ldr	r1, [pc, #28]	; 2dc80 <flatcc_builder_start_buffer@@Base+0xbc>
   2dc60:	ldr	r1, [pc, r1]
   2dc64:	movne	r1, r5
   2dc68:	ldr	r1, [r1]
   2dc6c:	str	r1, [r4, #168]	; 0xa8
   2dc70:	ldr	r1, [r4, #32]
   2dc74:	strh	r0, [r1, #14]
   2dc78:	mov	r0, #0
   2dc7c:	pop	{r4, r5, r6, r7, fp, pc}
   2dc80:	andeq	lr, r2, r4, lsl #8
   2dc84:	push	{r4, r5, r6, r7, fp, lr}
   2dc88:	add	fp, sp, #16
   2dc8c:	sub	sp, sp, #8
   2dc90:	mov	r5, r1
   2dc94:	ldr	r1, [r0, #156]	; 0x9c
   2dc98:	ldr	r2, [r0, #160]	; 0xa0
   2dc9c:	mov	r4, r0
   2dca0:	add	r0, r1, #1
   2dca4:	cmp	r1, r2
   2dca8:	str	r0, [r4, #156]	; 0x9c
   2dcac:	bge	2dcc0 <flatcc_builder_start_buffer@@Base+0xfc>
   2dcb0:	ldr	r0, [r4, #32]
   2dcb4:	add	r0, r0, #36	; 0x24
   2dcb8:	str	r0, [r4, #32]
   2dcbc:	b	2dd54 <flatcc_builder_start_buffer@@Base+0x190>
   2dcc0:	ldr	r2, [r4, #176]	; 0xb0
   2dcc4:	mvn	r6, #0
   2dcc8:	cmp	r2, #1
   2dccc:	cmpge	r1, r2
   2dcd0:	bge	2dd8c <flatcc_builder_start_buffer@@Base+0x1c8>
   2dcd4:	add	r7, r0, r0, lsl #3
   2dcd8:	ldr	r0, [r4, #88]	; 0x58
   2dcdc:	lsl	r2, r7, #2
   2dce0:	cmp	r2, r0
   2dce4:	bls	2dd0c <flatcc_builder_start_buffer@@Base+0x148>
   2dce8:	ldr	r0, [r4, #40]	; 0x28
   2dcec:	ldr	ip, [r4, #48]	; 0x30
   2dcf0:	mov	r3, #4
   2dcf4:	add	r1, r4, #84	; 0x54
   2dcf8:	str	r3, [sp]
   2dcfc:	mov	r3, #0
   2dd00:	blx	ip
   2dd04:	cmp	r0, #0
   2dd08:	bne	2dd98 <flatcc_builder_start_buffer@@Base+0x1d4>
   2dd0c:	ldr	r1, [r4, #84]	; 0x54
   2dd10:	mvn	r0, #35	; 0x23
   2dd14:	add	r0, r0, r7, lsl #2
   2dd18:	adds	r0, r0, r1
   2dd1c:	str	r0, [r4, #32]
   2dd20:	beq	2dd8c <flatcc_builder_start_buffer@@Base+0x1c8>
   2dd24:	ldr	r1, [r4, #88]	; 0x58
   2dd28:	movw	r3, #36409	; 0x8e39
   2dd2c:	ldr	r2, [r4, #176]	; 0xb0
   2dd30:	movt	r3, #14563	; 0x38e3
   2dd34:	umull	r1, r3, r1, r3
   2dd38:	cmp	r2, r3, lsr #3
   2dd3c:	lsr	r1, r3, #3
   2dd40:	mov	r3, r1
   2dd44:	movlt	r3, r2
   2dd48:	cmp	r2, #0
   2dd4c:	movle	r3, r1
   2dd50:	str	r3, [r4, #160]	; 0xa0
   2dd54:	ldr	r1, [r4, #20]
   2dd58:	mvn	r3, #3
   2dd5c:	mov	r6, #0
   2dd60:	str	r1, [r0, #8]
   2dd64:	ldrh	r2, [r4, #130]	; 0x82
   2dd68:	strh	r2, [r0, #12]
   2dd6c:	strh	r5, [r4, #130]	; 0x82
   2dd70:	ldr	r2, [r4, #28]
   2dd74:	stm	r0, {r2, r3}
   2dd78:	add	r0, r1, r2
   2dd7c:	str	r6, [r4, #20]
   2dd80:	add	r0, r0, #7
   2dd84:	bic	r0, r0, #7
   2dd88:	str	r0, [r4, #28]
   2dd8c:	mov	r0, r6
   2dd90:	sub	sp, fp, #16
   2dd94:	pop	{r4, r5, r6, r7, fp, pc}
   2dd98:	ldr	r0, [pc, #24]	; 2ddb8 <flatcc_builder_start_buffer@@Base+0x1f4>
   2dd9c:	ldr	r1, [pc, #24]	; 2ddbc <flatcc_builder_start_buffer@@Base+0x1f8>
   2dda0:	ldr	r3, [pc, #24]	; 2ddc0 <flatcc_builder_start_buffer@@Base+0x1fc>
   2dda4:	mov	r2, #308	; 0x134
   2dda8:	add	r0, pc, r0
   2ddac:	add	r1, pc, r1
   2ddb0:	add	r3, pc, r3
   2ddb4:	bl	14f38 <__assert_fail@plt>
   2ddb8:			; <UNDEFINED> instruction: 0x0001bdb7
   2ddbc:	strdeq	sl, [r1], -r6
   2ddc0:	andeq	fp, r1, r9, ror #23

0002ddc4 <flatcc_builder_end_buffer@@Base>:
   2ddc4:	push	{r4, r5, r6, sl, fp, lr}
   2ddc8:	add	fp, sp, #16
   2ddcc:	sub	sp, sp, #8
   2ddd0:	mov	r4, r0
   2ddd4:	ldr	r0, [r0, #32]
   2ddd8:	ldrh	r0, [r0, #14]
   2dddc:	cmp	r0, #1
   2dde0:	bne	2ded4 <flatcc_builder_end_buffer@@Base+0x110>
   2dde4:	mov	r3, r1
   2dde8:	ldr	r1, [r4, #152]	; 0x98
   2ddec:	ldrh	r0, [r4, #164]	; 0xa4
   2ddf0:	ldrh	r2, [r4, #132]	; 0x84
   2ddf4:	cmp	r1, #0
   2ddf8:	ldrh	r1, [r4, #128]	; 0x80
   2ddfc:	and	r0, r0, #2
   2de00:	orrne	r0, r0, #1
   2de04:	cmp	r1, r2
   2de08:	movcc	r1, r2
   2de0c:	strhcc	r2, [r4, #128]	; 0x80
   2de10:	str	r0, [sp, #4]
   2de14:	mov	r0, r4
   2de18:	str	r1, [sp]
   2de1c:	add	r1, r4, #168	; 0xa8
   2de20:	bl	2d838 <flatcc_builder_create_buffer@@Base>
   2de24:	mov	r6, r0
   2de28:	cmp	r0, #0
   2de2c:	beq	2dec8 <flatcc_builder_end_buffer@@Base+0x104>
   2de30:	ldr	r1, [r4, #32]
   2de34:	ldr	r0, [r4, #16]
   2de38:	ldr	r2, [r4, #20]
   2de3c:	ldr	r3, [r1, #20]
   2de40:	str	r3, [r4, #144]	; 0x90
   2de44:	ldr	r3, [r1, #28]
   2de48:	str	r3, [r4, #152]	; 0x98
   2de4c:	ldr	r3, [r1, #16]
   2de50:	str	r3, [r4, #168]	; 0xa8
   2de54:	ldrh	r1, [r1, #32]
   2de58:	strh	r1, [r4, #164]	; 0xa4
   2de5c:	mov	r1, #0
   2de60:	bl	14ee4 <memset@plt>
   2de64:	ldr	r0, [r4, #32]
   2de68:	ldr	r1, [r4, #60]	; 0x3c
   2de6c:	ldr	r2, [r4, #64]	; 0x40
   2de70:	ldr	r3, [r0, #8]
   2de74:	str	r3, [r4, #20]
   2de78:	ldr	r3, [r0]
   2de7c:	str	r3, [r4, #28]
   2de80:	add	r1, r1, r3
   2de84:	ldr	r5, [r0, #4]
   2de88:	str	r1, [r4, #16]
   2de8c:	sub	r1, r2, r3
   2de90:	cmp	r1, r5
   2de94:	movhi	r1, r5
   2de98:	str	r1, [r4, #24]
   2de9c:	ldrh	r1, [r4, #130]	; 0x82
   2dea0:	ldrh	r2, [r4, #128]	; 0x80
   2dea4:	cmp	r2, r1
   2dea8:	strhcc	r1, [r4, #128]	; 0x80
   2deac:	ldrh	r1, [r0, #12]
   2deb0:	sub	r0, r0, #36	; 0x24
   2deb4:	str	r0, [r4, #32]
   2deb8:	strh	r1, [r4, #130]	; 0x82
   2debc:	ldr	r0, [r4, #156]	; 0x9c
   2dec0:	sub	r0, r0, #1
   2dec4:	str	r0, [r4, #156]	; 0x9c
   2dec8:	mov	r0, r6
   2decc:	sub	sp, fp, #16
   2ded0:	pop	{r4, r5, r6, sl, fp, pc}
   2ded4:	ldr	r0, [pc, #24]	; 2def4 <flatcc_builder_end_buffer@@Base+0x130>
   2ded8:	ldr	r1, [pc, #24]	; 2def8 <flatcc_builder_end_buffer@@Base+0x134>
   2dedc:	ldr	r3, [pc, #24]	; 2defc <flatcc_builder_end_buffer@@Base+0x138>
   2dee0:	movw	r2, #838	; 0x346
   2dee4:	add	r0, pc, r0
   2dee8:	add	r1, pc, r1
   2deec:	add	r3, pc, r3
   2def0:	bl	14f38 <__assert_fail@plt>
   2def4:	andeq	sl, r1, r4, lsl #26
   2def8:			; <UNDEFINED> instruction: 0x0001aaba
   2defc:	andeq	sl, r1, r8, lsr #26

0002df00 <flatcc_builder_start_struct@@Base>:
   2df00:	push	{r4, r5, r6, r7, fp, lr}
   2df04:	add	fp, sp, #16
   2df08:	sub	sp, sp, #8
   2df0c:	mov	r6, r1
   2df10:	mov	r1, r2
   2df14:	mov	r4, r0
   2df18:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   2df1c:	mov	r5, #0
   2df20:	cmp	r0, #0
   2df24:	bne	2dfd4 <flatcc_builder_start_struct@@Base+0xd4>
   2df28:	ldr	r2, [r4, #32]
   2df2c:	mov	r0, #2
   2df30:	mvn	r7, #3
   2df34:	strh	r0, [r2, #14]
   2df38:	ldr	r1, [r4, #28]
   2df3c:	ldr	r3, [r4, #64]	; 0x40
   2df40:	ldr	r0, [r4, #60]	; 0x3c
   2df44:	sub	r3, r3, r1
   2df48:	add	r0, r0, r1
   2df4c:	cmn	r3, #4
   2df50:	str	r0, [r4, #16]
   2df54:	movcs	r3, r7
   2df58:	str	r3, [r4, #24]
   2df5c:	str	r7, [r2, #4]
   2df60:	ldr	r7, [r4, #20]
   2df64:	add	r2, r7, r6
   2df68:	cmp	r2, r3
   2df6c:	str	r2, [r4, #20]
   2df70:	bcc	2dfd0 <flatcc_builder_start_struct@@Base+0xd0>
   2df74:	ldr	r0, [r4, #40]	; 0x28
   2df78:	ldr	r6, [r4, #48]	; 0x30
   2df7c:	add	r1, r1, r2
   2df80:	mov	r3, #1
   2df84:	str	r3, [sp]
   2df88:	add	r2, r1, #1
   2df8c:	add	r1, r4, #60	; 0x3c
   2df90:	mov	r3, #1
   2df94:	blx	r6
   2df98:	cmp	r0, #0
   2df9c:	bne	2dfd4 <flatcc_builder_start_struct@@Base+0xd4>
   2dfa0:	ldr	r1, [r4, #28]
   2dfa4:	ldr	r0, [r4, #60]	; 0x3c
   2dfa8:	ldr	r3, [r4, #64]	; 0x40
   2dfac:	ldr	r2, [r4, #32]
   2dfb0:	add	r0, r0, r1
   2dfb4:	sub	r1, r3, r1
   2dfb8:	mvn	r3, #3
   2dfbc:	cmn	r1, #4
   2dfc0:	str	r0, [r4, #16]
   2dfc4:	movcs	r1, r3
   2dfc8:	str	r1, [r4, #24]
   2dfcc:	str	r3, [r2, #4]
   2dfd0:	add	r5, r0, r7
   2dfd4:	mov	r0, r5
   2dfd8:	sub	sp, fp, #16
   2dfdc:	pop	{r4, r5, r6, r7, fp, pc}

0002dfe0 <flatcc_builder_struct_edit@@Base>:
   2dfe0:	ldr	r0, [r0, #16]
   2dfe4:	bx	lr

0002dfe8 <flatcc_builder_end_struct@@Base>:
   2dfe8:	push	{r4, r5, fp, lr}
   2dfec:	add	fp, sp, #8
   2dff0:	mov	r4, r0
   2dff4:	ldr	r0, [r0, #32]
   2dff8:	ldrh	r0, [r0, #14]
   2dffc:	cmp	r0, #2
   2e000:	bne	2e0a0 <flatcc_builder_end_struct@@Base+0xb8>
   2e004:	ldrh	r3, [r4, #130]	; 0x82
   2e008:	ldr	r1, [r4, #16]
   2e00c:	ldr	r2, [r4, #20]
   2e010:	mov	r0, r4
   2e014:	bl	2da74 <flatcc_builder_create_struct@@Base>
   2e018:	mov	r5, r0
   2e01c:	cmp	r0, #0
   2e020:	beq	2e098 <flatcc_builder_end_struct@@Base+0xb0>
   2e024:	ldr	r0, [r4, #16]
   2e028:	ldr	r2, [r4, #20]
   2e02c:	mov	r1, #0
   2e030:	bl	14ee4 <memset@plt>
   2e034:	ldr	r0, [r4, #32]
   2e038:	ldr	r1, [r4, #60]	; 0x3c
   2e03c:	ldr	ip, [r4, #64]	; 0x40
   2e040:	ldr	r3, [r0, #8]
   2e044:	str	r3, [r4, #20]
   2e048:	ldr	r3, [r0]
   2e04c:	str	r3, [r4, #28]
   2e050:	add	r1, r1, r3
   2e054:	ldr	r2, [r0, #4]
   2e058:	str	r1, [r4, #16]
   2e05c:	sub	r1, ip, r3
   2e060:	cmp	r1, r2
   2e064:	movhi	r1, r2
   2e068:	str	r1, [r4, #24]
   2e06c:	ldrh	r1, [r4, #130]	; 0x82
   2e070:	ldrh	r2, [r4, #128]	; 0x80
   2e074:	cmp	r2, r1
   2e078:	strhcc	r1, [r4, #128]	; 0x80
   2e07c:	ldrh	r1, [r0, #12]
   2e080:	sub	r0, r0, #36	; 0x24
   2e084:	str	r0, [r4, #32]
   2e088:	strh	r1, [r4, #130]	; 0x82
   2e08c:	ldr	r0, [r4, #156]	; 0x9c
   2e090:	sub	r0, r0, #1
   2e094:	str	r0, [r4, #156]	; 0x9c
   2e098:	mov	r0, r5
   2e09c:	pop	{r4, r5, fp, pc}
   2e0a0:	ldr	r0, [pc, #24]	; 2e0c0 <flatcc_builder_end_struct@@Base+0xd8>
   2e0a4:	ldr	r1, [pc, #24]	; 2e0c4 <flatcc_builder_end_struct@@Base+0xdc>
   2e0a8:	ldr	r3, [pc, #24]	; 2e0c8 <flatcc_builder_end_struct@@Base+0xe0>
   2e0ac:	mov	r2, #872	; 0x368
   2e0b0:	add	r0, pc, r0
   2e0b4:	add	r1, pc, r1
   2e0b8:	add	r3, pc, r3
   2e0bc:	bl	14f38 <__assert_fail@plt>
   2e0c0:			; <UNDEFINED> instruction: 0x0001abbd
   2e0c4:	andeq	sl, r1, lr, ror #17
   2e0c8:	andeq	sl, r1, r1, ror #23

0002e0cc <flatcc_builder_extend_vector@@Base>:
   2e0cc:	push	{r4, r5, fp, lr}
   2e0d0:	add	fp, sp, #8
   2e0d4:	sub	sp, sp, #8
   2e0d8:	mov	r4, r0
   2e0dc:	ldr	r0, [r0, #32]
   2e0e0:	ldr	r2, [r0, #20]
   2e0e4:	adds	r2, r2, r1
   2e0e8:	bcs	2e1a0 <flatcc_builder_extend_vector@@Base+0xd4>
   2e0ec:	ldr	r3, [r0, #24]
   2e0f0:	cmp	r2, r3
   2e0f4:	bhi	2e1a0 <flatcc_builder_extend_vector@@Base+0xd4>
   2e0f8:	str	r2, [r0, #20]
   2e0fc:	ldr	r2, [r4, #32]
   2e100:	ldr	r5, [r4, #20]
   2e104:	ldr	r0, [r4, #24]
   2e108:	ldr	r2, [r2, #16]
   2e10c:	mla	r1, r2, r1, r5
   2e110:	cmp	r1, r0
   2e114:	str	r1, [r4, #20]
   2e118:	bcs	2e124 <flatcc_builder_extend_vector@@Base+0x58>
   2e11c:	ldr	r0, [r4, #16]
   2e120:	b	2e194 <flatcc_builder_extend_vector@@Base+0xc8>
   2e124:	ldr	r2, [r4, #28]
   2e128:	ldr	r0, [r4, #40]	; 0x28
   2e12c:	ldr	ip, [r4, #48]	; 0x30
   2e130:	mov	r3, #1
   2e134:	str	r3, [sp]
   2e138:	mov	r3, #1
   2e13c:	add	r1, r1, r2
   2e140:	add	r2, r1, #1
   2e144:	add	r1, r4, #60	; 0x3c
   2e148:	blx	ip
   2e14c:	mov	r1, r0
   2e150:	mov	r0, #0
   2e154:	cmp	r1, #0
   2e158:	beq	2e164 <flatcc_builder_extend_vector@@Base+0x98>
   2e15c:	sub	sp, fp, #8
   2e160:	pop	{r4, r5, fp, pc}
   2e164:	ldr	r1, [r4, #28]
   2e168:	ldr	r0, [r4, #60]	; 0x3c
   2e16c:	ldr	r3, [r4, #64]	; 0x40
   2e170:	ldr	r2, [r4, #32]
   2e174:	add	r0, r0, r1
   2e178:	sub	r1, r3, r1
   2e17c:	mvn	r3, #3
   2e180:	cmn	r1, #4
   2e184:	str	r0, [r4, #16]
   2e188:	movcs	r1, r3
   2e18c:	str	r1, [r4, #24]
   2e190:	str	r3, [r2, #4]
   2e194:	add	r0, r0, r5
   2e198:	sub	sp, fp, #8
   2e19c:	pop	{r4, r5, fp, pc}
   2e1a0:	ldr	r0, [pc, #24]	; 2e1c0 <flatcc_builder_extend_vector@@Base+0xf4>
   2e1a4:	ldr	r1, [pc, #24]	; 2e1c4 <flatcc_builder_extend_vector@@Base+0xf8>
   2e1a8:	ldr	r3, [pc, #24]	; 2e1c8 <flatcc_builder_extend_vector@@Base+0xfc>
   2e1ac:	mov	r2, #892	; 0x37c
   2e1b0:	add	r0, pc, r0
   2e1b4:	add	r1, pc, r1
   2e1b8:	add	r3, pc, r3
   2e1bc:	bl	14f38 <__assert_fail@plt>
   2e1c0:			; <UNDEFINED> instruction: 0x0001b8b8
   2e1c4:	andeq	sl, r1, lr, ror #15
   2e1c8:	andeq	fp, r1, fp, asr #17

0002e1cc <flatcc_builder_vector_push@@Base>:
   2e1cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e1d0:	add	fp, sp, #24
   2e1d4:	sub	sp, sp, #8
   2e1d8:	mov	r5, r0
   2e1dc:	ldr	r0, [r0, #32]
   2e1e0:	mov	r8, r1
   2e1e4:	ldrh	r1, [r0, #14]
   2e1e8:	cmp	r1, #4
   2e1ec:	bne	2e2c4 <flatcc_builder_vector_push@@Base+0xf8>
   2e1f0:	ldr	r1, [r0, #20]
   2e1f4:	ldr	r2, [r0, #24]
   2e1f8:	cmp	r1, r2
   2e1fc:	bhi	2e2e4 <flatcc_builder_vector_push@@Base+0x118>
   2e200:	add	r1, r1, #1
   2e204:	str	r1, [r0, #20]
   2e208:	ldr	r1, [r5, #32]
   2e20c:	ldr	r4, [r5, #20]
   2e210:	ldr	r0, [r5, #24]
   2e214:	ldr	r6, [r1, #16]
   2e218:	add	r1, r4, r6
   2e21c:	cmp	r1, r0
   2e220:	str	r1, [r5, #20]
   2e224:	bcs	2e248 <flatcc_builder_vector_push@@Base+0x7c>
   2e228:	ldr	r0, [r5, #16]
   2e22c:	adds	r7, r0, r4
   2e230:	beq	2e2b4 <flatcc_builder_vector_push@@Base+0xe8>
   2e234:	mov	r0, r7
   2e238:	mov	r1, r8
   2e23c:	mov	r2, r6
   2e240:	bl	14e54 <memcpy@plt>
   2e244:	b	2e2b8 <flatcc_builder_vector_push@@Base+0xec>
   2e248:	ldr	r2, [r5, #28]
   2e24c:	ldr	r0, [r5, #40]	; 0x28
   2e250:	ldr	r7, [r5, #48]	; 0x30
   2e254:	mov	r3, #1
   2e258:	str	r3, [sp]
   2e25c:	mov	r3, #1
   2e260:	add	r1, r1, r2
   2e264:	add	r2, r1, #1
   2e268:	add	r1, r5, #60	; 0x3c
   2e26c:	blx	r7
   2e270:	mov	r7, #0
   2e274:	cmp	r0, #0
   2e278:	bne	2e2b8 <flatcc_builder_vector_push@@Base+0xec>
   2e27c:	ldr	r1, [r5, #28]
   2e280:	ldr	r0, [r5, #60]	; 0x3c
   2e284:	ldr	r3, [r5, #64]	; 0x40
   2e288:	ldr	r2, [r5, #32]
   2e28c:	add	r0, r0, r1
   2e290:	sub	r1, r3, r1
   2e294:	mvn	r3, #3
   2e298:	cmn	r1, #4
   2e29c:	str	r0, [r5, #16]
   2e2a0:	movcs	r1, r3
   2e2a4:	str	r1, [r5, #24]
   2e2a8:	str	r3, [r2, #4]
   2e2ac:	adds	r7, r0, r4
   2e2b0:	bne	2e234 <flatcc_builder_vector_push@@Base+0x68>
   2e2b4:	mov	r7, #0
   2e2b8:	mov	r0, r7
   2e2bc:	sub	sp, fp, #24
   2e2c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e2c4:	ldr	r0, [pc, #56]	; 2e304 <flatcc_builder_vector_push@@Base+0x138>
   2e2c8:	ldr	r1, [pc, #56]	; 2e308 <flatcc_builder_vector_push@@Base+0x13c>
   2e2cc:	ldr	r3, [pc, #56]	; 2e30c <flatcc_builder_vector_push@@Base+0x140>
   2e2d0:	movw	r2, #907	; 0x38b
   2e2d4:	add	r0, pc, r0
   2e2d8:	add	r1, pc, r1
   2e2dc:	add	r3, pc, r3
   2e2e0:	bl	14f38 <__assert_fail@plt>
   2e2e4:	ldr	r0, [pc, #36]	; 2e310 <flatcc_builder_vector_push@@Base+0x144>
   2e2e8:	ldr	r1, [pc, #36]	; 2e314 <flatcc_builder_vector_push@@Base+0x148>
   2e2ec:	ldr	r3, [pc, #36]	; 2e318 <flatcc_builder_vector_push@@Base+0x14c>
   2e2f0:	mov	r2, #908	; 0x38c
   2e2f4:	add	r0, pc, r0
   2e2f8:	add	r1, pc, r1
   2e2fc:	add	r3, pc, r3
   2e300:	bl	14f38 <__assert_fail@plt>
   2e304:	andeq	sl, r1, r8, lsl #20
   2e308:	andeq	sl, r1, sl, asr #13
   2e30c:	andeq	sl, r1, ip, lsr #20
   2e310:	andeq	sl, r1, r7, asr sl
   2e314:	andeq	sl, r1, sl, lsr #13
   2e318:	andeq	sl, r1, ip, lsl #20

0002e31c <flatcc_builder_append_vector@@Base>:
   2e31c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2e320:	add	fp, sp, #24
   2e324:	sub	sp, sp, #8
   2e328:	mov	r6, r0
   2e32c:	ldr	r0, [r0, #32]
   2e330:	mov	r8, r1
   2e334:	ldrh	r1, [r0, #14]
   2e338:	cmp	r1, #4
   2e33c:	bne	2e43c <flatcc_builder_append_vector@@Base+0x120>
   2e340:	ldr	r1, [r0, #20]
   2e344:	mov	r5, r2
   2e348:	adds	r1, r1, r2
   2e34c:	bcs	2e41c <flatcc_builder_append_vector@@Base+0x100>
   2e350:	ldr	r2, [r0, #24]
   2e354:	cmp	r1, r2
   2e358:	bhi	2e41c <flatcc_builder_append_vector@@Base+0x100>
   2e35c:	str	r1, [r0, #20]
   2e360:	ldr	r1, [r6, #32]
   2e364:	ldr	r4, [r6, #20]
   2e368:	ldr	r0, [r6, #24]
   2e36c:	ldr	r9, [r1, #16]
   2e370:	mla	r1, r9, r5, r4
   2e374:	cmp	r1, r0
   2e378:	str	r1, [r6, #20]
   2e37c:	bcs	2e3a0 <flatcc_builder_append_vector@@Base+0x84>
   2e380:	ldr	r0, [r6, #16]
   2e384:	adds	r7, r0, r4
   2e388:	beq	2e40c <flatcc_builder_append_vector@@Base+0xf0>
   2e38c:	mul	r2, r9, r5
   2e390:	mov	r0, r7
   2e394:	mov	r1, r8
   2e398:	bl	14e54 <memcpy@plt>
   2e39c:	b	2e410 <flatcc_builder_append_vector@@Base+0xf4>
   2e3a0:	ldr	r2, [r6, #28]
   2e3a4:	ldr	r0, [r6, #40]	; 0x28
   2e3a8:	ldr	r7, [r6, #48]	; 0x30
   2e3ac:	mov	r3, #1
   2e3b0:	str	r3, [sp]
   2e3b4:	mov	r3, #1
   2e3b8:	add	r1, r1, r2
   2e3bc:	add	r2, r1, #1
   2e3c0:	add	r1, r6, #60	; 0x3c
   2e3c4:	blx	r7
   2e3c8:	mov	r7, #0
   2e3cc:	cmp	r0, #0
   2e3d0:	bne	2e410 <flatcc_builder_append_vector@@Base+0xf4>
   2e3d4:	ldr	r1, [r6, #28]
   2e3d8:	ldr	r0, [r6, #60]	; 0x3c
   2e3dc:	ldr	r3, [r6, #64]	; 0x40
   2e3e0:	ldr	r2, [r6, #32]
   2e3e4:	add	r0, r0, r1
   2e3e8:	sub	r1, r3, r1
   2e3ec:	mvn	r3, #3
   2e3f0:	cmn	r1, #4
   2e3f4:	str	r0, [r6, #16]
   2e3f8:	movcs	r1, r3
   2e3fc:	str	r1, [r6, #24]
   2e400:	str	r3, [r2, #4]
   2e404:	adds	r7, r0, r4
   2e408:	bne	2e38c <flatcc_builder_append_vector@@Base+0x70>
   2e40c:	mov	r7, #0
   2e410:	mov	r0, r7
   2e414:	sub	sp, fp, #24
   2e418:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2e41c:	ldr	r0, [pc, #68]	; 2e468 <flatcc_builder_append_vector@@Base+0x14c>
   2e420:	ldr	r1, [pc, #68]	; 2e46c <flatcc_builder_append_vector@@Base+0x150>
   2e424:	ldr	r3, [pc, #68]	; 2e470 <flatcc_builder_append_vector@@Base+0x154>
   2e428:	mov	r2, #892	; 0x37c
   2e42c:	add	r0, pc, r0
   2e430:	add	r1, pc, r1
   2e434:	add	r3, pc, r3
   2e438:	bl	14f38 <__assert_fail@plt>
   2e43c:	ldr	r0, [pc, #24]	; 2e45c <flatcc_builder_append_vector@@Base+0x140>
   2e440:	ldr	r1, [pc, #24]	; 2e460 <flatcc_builder_append_vector@@Base+0x144>
   2e444:	ldr	r3, [pc, #24]	; 2e464 <flatcc_builder_append_vector@@Base+0x148>
   2e448:	movw	r2, #915	; 0x393
   2e44c:	add	r0, pc, r0
   2e450:	add	r1, pc, r1
   2e454:	add	r3, pc, r3
   2e458:	bl	14f38 <__assert_fail@plt>
   2e45c:	muleq	r1, r0, r8
   2e460:	andeq	sl, r1, r2, asr r5
   2e464:	andeq	sl, r1, r4, lsr r9
   2e468:	andeq	fp, r1, ip, lsr r6
   2e46c:	andeq	sl, r1, r2, ror r5
   2e470:	andeq	fp, r1, pc, asr #12

0002e474 <flatcc_builder_extend_offset_vector@@Base>:
   2e474:	push	{r4, r5, fp, lr}
   2e478:	add	fp, sp, #8
   2e47c:	sub	sp, sp, #8
   2e480:	mov	r4, r0
   2e484:	ldr	r0, [r0, #32]
   2e488:	ldr	r2, [r0, #20]
   2e48c:	adds	r2, r2, r1
   2e490:	cmpcc	r2, #1073741824	; 0x40000000
   2e494:	bcc	2e4b8 <flatcc_builder_extend_offset_vector@@Base+0x44>
   2e498:	ldr	r0, [pc, #184]	; 2e558 <flatcc_builder_extend_offset_vector@@Base+0xe4>
   2e49c:	ldr	r1, [pc, #184]	; 2e55c <flatcc_builder_extend_offset_vector@@Base+0xe8>
   2e4a0:	ldr	r3, [pc, #184]	; 2e560 <flatcc_builder_extend_offset_vector@@Base+0xec>
   2e4a4:	mov	r2, #892	; 0x37c
   2e4a8:	add	r0, pc, r0
   2e4ac:	add	r1, pc, r1
   2e4b0:	add	r3, pc, r3
   2e4b4:	bl	14f38 <__assert_fail@plt>
   2e4b8:	str	r2, [r0, #20]
   2e4bc:	ldr	r5, [r4, #20]
   2e4c0:	ldr	r0, [r4, #24]
   2e4c4:	add	r1, r5, r1, lsl #2
   2e4c8:	cmp	r1, r0
   2e4cc:	str	r1, [r4, #20]
   2e4d0:	bcs	2e4dc <flatcc_builder_extend_offset_vector@@Base+0x68>
   2e4d4:	ldr	r0, [r4, #16]
   2e4d8:	b	2e54c <flatcc_builder_extend_offset_vector@@Base+0xd8>
   2e4dc:	ldr	r2, [r4, #28]
   2e4e0:	ldr	r0, [r4, #40]	; 0x28
   2e4e4:	ldr	ip, [r4, #48]	; 0x30
   2e4e8:	mov	r3, #1
   2e4ec:	str	r3, [sp]
   2e4f0:	mov	r3, #1
   2e4f4:	add	r1, r1, r2
   2e4f8:	add	r2, r1, #1
   2e4fc:	add	r1, r4, #60	; 0x3c
   2e500:	blx	ip
   2e504:	mov	r1, r0
   2e508:	mov	r0, #0
   2e50c:	cmp	r1, #0
   2e510:	beq	2e51c <flatcc_builder_extend_offset_vector@@Base+0xa8>
   2e514:	sub	sp, fp, #8
   2e518:	pop	{r4, r5, fp, pc}
   2e51c:	ldr	r1, [r4, #28]
   2e520:	ldr	r0, [r4, #60]	; 0x3c
   2e524:	ldr	r3, [r4, #64]	; 0x40
   2e528:	ldr	r2, [r4, #32]
   2e52c:	add	r0, r0, r1
   2e530:	sub	r1, r3, r1
   2e534:	mvn	r3, #3
   2e538:	cmn	r1, #4
   2e53c:	str	r0, [r4, #16]
   2e540:	movcs	r1, r3
   2e544:	str	r1, [r4, #24]
   2e548:	str	r3, [r2, #4]
   2e54c:	add	r0, r0, r5
   2e550:	sub	sp, fp, #8
   2e554:	pop	{r4, r5, fp, pc}
   2e558:	andeq	fp, r1, r0, asr #11
   2e55c:	strdeq	sl, [r1], -r6
   2e560:	ldrdeq	fp, [r1], -r3

0002e564 <flatcc_builder_offset_vector_push@@Base>:
   2e564:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e568:	add	fp, sp, #24
   2e56c:	sub	sp, sp, #8
   2e570:	mov	r6, r0
   2e574:	ldr	r0, [r0, #32]
   2e578:	mov	r8, r1
   2e57c:	ldrh	r1, [r0, #14]
   2e580:	cmp	r1, #5
   2e584:	bne	2e638 <flatcc_builder_offset_vector_push@@Base+0xd4>
   2e588:	ldr	r1, [r0, #20]
   2e58c:	mov	r5, #0
   2e590:	cmn	r1, #-1073741823	; 0xc0000001
   2e594:	beq	2e62c <flatcc_builder_offset_vector_push@@Base+0xc8>
   2e598:	add	r1, r1, #1
   2e59c:	str	r1, [r0, #20]
   2e5a0:	ldr	r7, [r6, #20]
   2e5a4:	ldr	r0, [r6, #24]
   2e5a8:	add	r1, r7, #4
   2e5ac:	cmp	r1, r0
   2e5b0:	str	r1, [r6, #20]
   2e5b4:	bcs	2e5c0 <flatcc_builder_offset_vector_push@@Base+0x5c>
   2e5b8:	ldr	r0, [r6, #16]
   2e5bc:	b	2e620 <flatcc_builder_offset_vector_push@@Base+0xbc>
   2e5c0:	ldr	r1, [r6, #28]
   2e5c4:	ldr	r0, [r6, #40]	; 0x28
   2e5c8:	ldr	r4, [r6, #48]	; 0x30
   2e5cc:	mov	r2, #1
   2e5d0:	mov	r3, #1
   2e5d4:	str	r2, [sp]
   2e5d8:	add	r1, r7, r1
   2e5dc:	add	r2, r1, #5
   2e5e0:	add	r1, r6, #60	; 0x3c
   2e5e4:	blx	r4
   2e5e8:	cmp	r0, #0
   2e5ec:	bne	2e62c <flatcc_builder_offset_vector_push@@Base+0xc8>
   2e5f0:	ldr	r1, [r6, #28]
   2e5f4:	ldr	r0, [r6, #60]	; 0x3c
   2e5f8:	ldr	r3, [r6, #64]	; 0x40
   2e5fc:	ldr	r2, [r6, #32]
   2e600:	add	r0, r0, r1
   2e604:	sub	r1, r3, r1
   2e608:	mvn	r3, #3
   2e60c:	cmn	r1, #4
   2e610:	str	r0, [r6, #16]
   2e614:	movcs	r1, r3
   2e618:	str	r1, [r6, #24]
   2e61c:	str	r3, [r2, #4]
   2e620:	adds	r0, r0, r7
   2e624:	movne	r5, r0
   2e628:	strne	r8, [r0]
   2e62c:	mov	r0, r5
   2e630:	sub	sp, fp, #24
   2e634:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e638:	ldr	r0, [pc, #24]	; 2e658 <flatcc_builder_offset_vector_push@@Base+0xf4>
   2e63c:	ldr	r1, [pc, #24]	; 2e65c <flatcc_builder_offset_vector_push@@Base+0xf8>
   2e640:	ldr	r3, [pc, #24]	; 2e660 <flatcc_builder_offset_vector_push@@Base+0xfc>
   2e644:	movw	r2, #934	; 0x3a6
   2e648:	add	r0, pc, r0
   2e64c:	add	r1, pc, r1
   2e650:	add	r3, pc, r3
   2e654:	bl	14f38 <__assert_fail@plt>
   2e658:	andeq	sl, r1, sp, lsl #15
   2e65c:	andeq	sl, r1, r6, asr r3
   2e660:			; <UNDEFINED> instruction: 0x0001a7b8

0002e664 <flatcc_builder_append_offset_vector@@Base>:
   2e664:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e668:	add	fp, sp, #24
   2e66c:	sub	sp, sp, #8
   2e670:	mov	r6, r0
   2e674:	ldr	r0, [r0, #32]
   2e678:	mov	r8, r1
   2e67c:	ldrh	r1, [r0, #14]
   2e680:	cmp	r1, #5
   2e684:	bne	2e774 <flatcc_builder_append_offset_vector@@Base+0x110>
   2e688:	ldr	r1, [r0, #20]
   2e68c:	mov	r5, r2
   2e690:	adds	r1, r1, r2
   2e694:	cmpcc	r1, #1073741824	; 0x40000000
   2e698:	bcc	2e6bc <flatcc_builder_append_offset_vector@@Base+0x58>
   2e69c:	ldr	r0, [pc, #252]	; 2e7a0 <flatcc_builder_append_offset_vector@@Base+0x13c>
   2e6a0:	ldr	r1, [pc, #252]	; 2e7a4 <flatcc_builder_append_offset_vector@@Base+0x140>
   2e6a4:	ldr	r3, [pc, #252]	; 2e7a8 <flatcc_builder_append_offset_vector@@Base+0x144>
   2e6a8:	mov	r2, #892	; 0x37c
   2e6ac:	add	r0, pc, r0
   2e6b0:	add	r1, pc, r1
   2e6b4:	add	r3, pc, r3
   2e6b8:	bl	14f38 <__assert_fail@plt>
   2e6bc:	str	r1, [r0, #20]
   2e6c0:	ldr	r4, [r6, #20]
   2e6c4:	ldr	r0, [r6, #24]
   2e6c8:	add	r1, r4, r5, lsl #2
   2e6cc:	cmp	r1, r0
   2e6d0:	str	r1, [r6, #20]
   2e6d4:	bcs	2e6f8 <flatcc_builder_append_offset_vector@@Base+0x94>
   2e6d8:	ldr	r0, [r6, #16]
   2e6dc:	adds	r7, r0, r4
   2e6e0:	beq	2e764 <flatcc_builder_append_offset_vector@@Base+0x100>
   2e6e4:	lsl	r2, r5, #2
   2e6e8:	mov	r0, r7
   2e6ec:	mov	r1, r8
   2e6f0:	bl	14e54 <memcpy@plt>
   2e6f4:	b	2e768 <flatcc_builder_append_offset_vector@@Base+0x104>
   2e6f8:	ldr	r2, [r6, #28]
   2e6fc:	ldr	r0, [r6, #40]	; 0x28
   2e700:	ldr	r7, [r6, #48]	; 0x30
   2e704:	mov	r3, #1
   2e708:	str	r3, [sp]
   2e70c:	mov	r3, #1
   2e710:	add	r1, r1, r2
   2e714:	add	r2, r1, #1
   2e718:	add	r1, r6, #60	; 0x3c
   2e71c:	blx	r7
   2e720:	mov	r7, #0
   2e724:	cmp	r0, #0
   2e728:	bne	2e768 <flatcc_builder_append_offset_vector@@Base+0x104>
   2e72c:	ldr	r1, [r6, #28]
   2e730:	ldr	r0, [r6, #60]	; 0x3c
   2e734:	ldr	r3, [r6, #64]	; 0x40
   2e738:	ldr	r2, [r6, #32]
   2e73c:	add	r0, r0, r1
   2e740:	sub	r1, r3, r1
   2e744:	mvn	r3, #3
   2e748:	cmn	r1, #4
   2e74c:	str	r0, [r6, #16]
   2e750:	movcs	r1, r3
   2e754:	str	r1, [r6, #24]
   2e758:	str	r3, [r2, #4]
   2e75c:	adds	r7, r0, r4
   2e760:	bne	2e6e4 <flatcc_builder_append_offset_vector@@Base+0x80>
   2e764:	mov	r7, #0
   2e768:	mov	r0, r7
   2e76c:	sub	sp, fp, #24
   2e770:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e774:	ldr	r0, [pc, #24]	; 2e794 <flatcc_builder_append_offset_vector@@Base+0x130>
   2e778:	ldr	r1, [pc, #24]	; 2e798 <flatcc_builder_append_offset_vector@@Base+0x134>
   2e77c:	ldr	r3, [pc, #24]	; 2e79c <flatcc_builder_append_offset_vector@@Base+0x138>
   2e780:	mov	r2, #948	; 0x3b4
   2e784:	add	r0, pc, r0
   2e788:	add	r1, pc, r1
   2e78c:	add	r3, pc, r3
   2e790:	bl	14f38 <__assert_fail@plt>
   2e794:	andeq	sl, r1, r1, asr r6
   2e798:	andeq	sl, r1, sl, lsl r2
   2e79c:	ldrdeq	sl, [r1], -lr
   2e7a0:			; <UNDEFINED> instruction: 0x0001b3bc
   2e7a4:	strdeq	sl, [r1], -r2
   2e7a8:	andeq	fp, r1, pc, asr #7

0002e7ac <flatcc_builder_extend_string@@Base>:
   2e7ac:	push	{r4, r5, fp, lr}
   2e7b0:	add	fp, sp, #8
   2e7b4:	sub	sp, sp, #8
   2e7b8:	mov	r4, r0
   2e7bc:	ldr	r0, [r0, #32]
   2e7c0:	ldrh	r2, [r0, #14]
   2e7c4:	cmp	r2, #6
   2e7c8:	bne	2e878 <flatcc_builder_extend_string@@Base+0xcc>
   2e7cc:	ldr	r2, [r0, #20]
   2e7d0:	adds	r2, r2, r1
   2e7d4:	bcs	2e898 <flatcc_builder_extend_string@@Base+0xec>
   2e7d8:	str	r2, [r0, #20]
   2e7dc:	ldr	r5, [r4, #20]
   2e7e0:	ldr	r0, [r4, #24]
   2e7e4:	add	r1, r5, r1
   2e7e8:	cmp	r1, r0
   2e7ec:	str	r1, [r4, #20]
   2e7f0:	bcs	2e7fc <flatcc_builder_extend_string@@Base+0x50>
   2e7f4:	ldr	r0, [r4, #16]
   2e7f8:	b	2e86c <flatcc_builder_extend_string@@Base+0xc0>
   2e7fc:	ldr	r2, [r4, #28]
   2e800:	ldr	r0, [r4, #40]	; 0x28
   2e804:	ldr	ip, [r4, #48]	; 0x30
   2e808:	mov	r3, #1
   2e80c:	str	r3, [sp]
   2e810:	mov	r3, #1
   2e814:	add	r1, r1, r2
   2e818:	add	r2, r1, #1
   2e81c:	add	r1, r4, #60	; 0x3c
   2e820:	blx	ip
   2e824:	mov	r1, r0
   2e828:	mov	r0, #0
   2e82c:	cmp	r1, #0
   2e830:	beq	2e83c <flatcc_builder_extend_string@@Base+0x90>
   2e834:	sub	sp, fp, #8
   2e838:	pop	{r4, r5, fp, pc}
   2e83c:	ldr	r1, [r4, #28]
   2e840:	ldr	r0, [r4, #60]	; 0x3c
   2e844:	ldr	r3, [r4, #64]	; 0x40
   2e848:	ldr	r2, [r4, #32]
   2e84c:	add	r0, r0, r1
   2e850:	sub	r1, r3, r1
   2e854:	mvn	r3, #3
   2e858:	cmn	r1, #4
   2e85c:	str	r0, [r4, #16]
   2e860:	movcs	r1, r3
   2e864:	str	r1, [r4, #24]
   2e868:	str	r3, [r2, #4]
   2e86c:	add	r0, r0, r5
   2e870:	sub	sp, fp, #8
   2e874:	pop	{r4, r5, fp, pc}
   2e878:	ldr	r0, [pc, #56]	; 2e8b8 <flatcc_builder_extend_string@@Base+0x10c>
   2e87c:	ldr	r1, [pc, #56]	; 2e8bc <flatcc_builder_extend_string@@Base+0x110>
   2e880:	ldr	r3, [pc, #56]	; 2e8c0 <flatcc_builder_extend_string@@Base+0x114>
   2e884:	movw	r2, #957	; 0x3bd
   2e888:	add	r0, pc, r0
   2e88c:	add	r1, pc, r1
   2e890:	add	r3, pc, r3
   2e894:	bl	14f38 <__assert_fail@plt>
   2e898:	ldr	r0, [pc, #36]	; 2e8c4 <flatcc_builder_extend_string@@Base+0x118>
   2e89c:	ldr	r1, [pc, #36]	; 2e8c8 <flatcc_builder_extend_string@@Base+0x11c>
   2e8a0:	ldr	r3, [pc, #36]	; 2e8cc <flatcc_builder_extend_string@@Base+0x120>
   2e8a4:	mov	r2, #892	; 0x37c
   2e8a8:	add	r0, pc, r0
   2e8ac:	add	r1, pc, r1
   2e8b0:	add	r3, pc, r3
   2e8b4:	bl	14f38 <__assert_fail@plt>
   2e8b8:	andeq	sl, r1, r6, asr r6
   2e8bc:	andeq	sl, r1, r6, lsl r1
   2e8c0:	andeq	sl, r1, sl, ror r6
   2e8c4:	andeq	fp, r1, r0, asr #3
   2e8c8:	strdeq	sl, [r1], -r6
   2e8cc:	ldrdeq	fp, [r1], -r3

0002e8d0 <flatcc_builder_append_string@@Base>:
   2e8d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2e8d4:	add	fp, sp, #24
   2e8d8:	sub	sp, sp, #8
   2e8dc:	mov	r6, r0
   2e8e0:	ldr	r0, [r0, #32]
   2e8e4:	mov	r8, r1
   2e8e8:	ldrh	r1, [r0, #14]
   2e8ec:	cmp	r1, #6
   2e8f0:	bne	2e9bc <flatcc_builder_append_string@@Base+0xec>
   2e8f4:	ldr	r1, [r0, #20]
   2e8f8:	mov	r4, r2
   2e8fc:	adds	r1, r1, r2
   2e900:	bcs	2e9dc <flatcc_builder_append_string@@Base+0x10c>
   2e904:	str	r1, [r0, #20]
   2e908:	ldr	r5, [r6, #20]
   2e90c:	ldr	r0, [r6, #24]
   2e910:	add	r1, r5, r4
   2e914:	cmp	r1, r0
   2e918:	str	r1, [r6, #20]
   2e91c:	bcs	2e940 <flatcc_builder_append_string@@Base+0x70>
   2e920:	ldr	r0, [r6, #16]
   2e924:	adds	r7, r0, r5
   2e928:	beq	2e9ac <flatcc_builder_append_string@@Base+0xdc>
   2e92c:	mov	r0, r7
   2e930:	mov	r1, r8
   2e934:	mov	r2, r4
   2e938:	bl	14e54 <memcpy@plt>
   2e93c:	b	2e9b0 <flatcc_builder_append_string@@Base+0xe0>
   2e940:	ldr	r2, [r6, #28]
   2e944:	ldr	r0, [r6, #40]	; 0x28
   2e948:	ldr	r7, [r6, #48]	; 0x30
   2e94c:	mov	r3, #1
   2e950:	str	r3, [sp]
   2e954:	mov	r3, #1
   2e958:	add	r1, r1, r2
   2e95c:	add	r2, r1, #1
   2e960:	add	r1, r6, #60	; 0x3c
   2e964:	blx	r7
   2e968:	mov	r7, #0
   2e96c:	cmp	r0, #0
   2e970:	bne	2e9b0 <flatcc_builder_append_string@@Base+0xe0>
   2e974:	ldr	r1, [r6, #28]
   2e978:	ldr	r0, [r6, #60]	; 0x3c
   2e97c:	ldr	r3, [r6, #64]	; 0x40
   2e980:	ldr	r2, [r6, #32]
   2e984:	add	r0, r0, r1
   2e988:	sub	r1, r3, r1
   2e98c:	mvn	r3, #3
   2e990:	cmn	r1, #4
   2e994:	str	r0, [r6, #16]
   2e998:	movcs	r1, r3
   2e99c:	str	r1, [r6, #24]
   2e9a0:	str	r3, [r2, #4]
   2e9a4:	adds	r7, r0, r5
   2e9a8:	bne	2e92c <flatcc_builder_append_string@@Base+0x5c>
   2e9ac:	mov	r7, #0
   2e9b0:	mov	r0, r7
   2e9b4:	sub	sp, fp, #24
   2e9b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2e9bc:	ldr	r0, [pc, #56]	; 2e9fc <flatcc_builder_append_string@@Base+0x12c>
   2e9c0:	ldr	r1, [pc, #56]	; 2ea00 <flatcc_builder_append_string@@Base+0x130>
   2e9c4:	ldr	r3, [pc, #56]	; 2ea04 <flatcc_builder_append_string@@Base+0x134>
   2e9c8:	movw	r2, #966	; 0x3c6
   2e9cc:	add	r0, pc, r0
   2e9d0:	add	r1, pc, r1
   2e9d4:	add	r3, pc, r3
   2e9d8:	bl	14f38 <__assert_fail@plt>
   2e9dc:	ldr	r0, [pc, #36]	; 2ea08 <flatcc_builder_append_string@@Base+0x138>
   2e9e0:	ldr	r1, [pc, #36]	; 2ea0c <flatcc_builder_append_string@@Base+0x13c>
   2e9e4:	ldr	r3, [pc, #36]	; 2ea10 <flatcc_builder_append_string@@Base+0x140>
   2e9e8:	mov	r2, #892	; 0x37c
   2e9ec:	add	r0, pc, r0
   2e9f0:	add	r1, pc, r1
   2e9f4:	add	r3, pc, r3
   2e9f8:	bl	14f38 <__assert_fail@plt>
   2e9fc:	andeq	sl, r1, r2, lsl r5
   2ea00:	ldrdeq	r9, [r1], -r2
   2ea04:	andeq	sl, r1, r5, ror r5
   2ea08:	andeq	fp, r1, ip, ror r0
   2ea0c:			; <UNDEFINED> instruction: 0x00019fb2
   2ea10:	andeq	fp, r1, pc, lsl #1

0002ea14 <flatcc_builder_append_string_str@@Base>:
   2ea14:	push	{r4, r5, fp, lr}
   2ea18:	add	fp, sp, #8
   2ea1c:	mov	r5, r0
   2ea20:	mov	r0, r1
   2ea24:	mov	r4, r1
   2ea28:	bl	14ec0 <strlen@plt>
   2ea2c:	mov	r2, r0
   2ea30:	mov	r0, r5
   2ea34:	mov	r1, r4
   2ea38:	pop	{r4, r5, fp, lr}
   2ea3c:	b	2e8d0 <flatcc_builder_append_string@@Base>

0002ea40 <flatcc_builder_append_string_strn@@Base>:
   2ea40:	push	{r4, r5, r6, sl, fp, lr}
   2ea44:	add	fp, sp, #16
   2ea48:	mov	r6, r0
   2ea4c:	mov	r5, r1
   2ea50:	mov	r0, r1
   2ea54:	mov	r1, #0
   2ea58:	mov	r4, r2
   2ea5c:	bl	14f08 <memchr@plt>
   2ea60:	cmp	r0, #0
   2ea64:	mov	r1, r5
   2ea68:	subne	r4, r0, r5
   2ea6c:	mov	r0, r6
   2ea70:	mov	r2, r4
   2ea74:	pop	{r4, r5, r6, sl, fp, lr}
   2ea78:	b	2e8d0 <flatcc_builder_append_string@@Base>

0002ea7c <flatcc_builder_truncate_vector@@Base>:
   2ea7c:	push	{fp, lr}
   2ea80:	mov	fp, sp
   2ea84:	ldr	r2, [r0, #32]
   2ea88:	ldrh	r3, [r2, #14]
   2ea8c:	cmp	r3, #4
   2ea90:	bne	2ead8 <flatcc_builder_truncate_vector@@Base+0x5c>
   2ea94:	ldr	r3, [r2, #20]
   2ea98:	cmp	r3, r1
   2ea9c:	bcc	2eaf8 <flatcc_builder_truncate_vector@@Base+0x7c>
   2eaa0:	sub	r3, r3, r1
   2eaa4:	str	r3, [r2, #20]
   2eaa8:	ldr	r2, [r0, #32]
   2eaac:	ldr	r3, [r0, #20]
   2eab0:	ldr	ip, [r0, #16]
   2eab4:	ldr	r2, [r2, #16]
   2eab8:	mls	r3, r2, r1, r3
   2eabc:	mul	r2, r2, r1
   2eac0:	mov	r1, #0
   2eac4:	str	r3, [r0, #20]
   2eac8:	add	r0, ip, r3
   2eacc:	bl	14ee4 <memset@plt>
   2ead0:	mov	r0, #0
   2ead4:	pop	{fp, pc}
   2ead8:	ldr	r0, [pc, #56]	; 2eb18 <flatcc_builder_truncate_vector@@Base+0x9c>
   2eadc:	ldr	r1, [pc, #56]	; 2eb1c <flatcc_builder_truncate_vector@@Base+0xa0>
   2eae0:	ldr	r3, [pc, #56]	; 2eb20 <flatcc_builder_truncate_vector@@Base+0xa4>
   2eae4:	movw	r2, #985	; 0x3d9
   2eae8:	add	r0, pc, r0
   2eaec:	add	r1, pc, r1
   2eaf0:	add	r3, pc, r3
   2eaf4:	bl	14f38 <__assert_fail@plt>
   2eaf8:	ldr	r0, [pc, #36]	; 2eb24 <flatcc_builder_truncate_vector@@Base+0xa8>
   2eafc:	ldr	r1, [pc, #36]	; 2eb28 <flatcc_builder_truncate_vector@@Base+0xac>
   2eb00:	ldr	r3, [pc, #36]	; 2eb2c <flatcc_builder_truncate_vector@@Base+0xb0>
   2eb04:	movw	r2, #986	; 0x3da
   2eb08:	add	r0, pc, r0
   2eb0c:	add	r1, pc, r1
   2eb10:	add	r3, pc, r3
   2eb14:	bl	14f38 <__assert_fail@plt>
   2eb18:	strdeq	sl, [r1], -r4
   2eb1c:			; <UNDEFINED> instruction: 0x00019eb6
   2eb20:	andeq	sl, r1, r6, lsr #9
   2eb24:	andeq	sl, r1, sp, asr #9
   2eb28:	muleq	r1, r6, lr
   2eb2c:	andeq	sl, r1, r6, lsl #9

0002eb30 <flatcc_builder_truncate_offset_vector@@Base>:
   2eb30:	push	{fp, lr}
   2eb34:	mov	fp, sp
   2eb38:	ldr	r2, [r0, #32]
   2eb3c:	ldrh	r3, [r2, #14]
   2eb40:	cmp	r3, #5
   2eb44:	bne	2eb8c <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   2eb48:	ldr	r3, [r2, #20]
   2eb4c:	cmp	r3, r1
   2eb50:	bcc	2ebac <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   2eb54:	sub	r3, r3, r1
   2eb58:	str	r3, [r2, #20]
   2eb5c:	ldr	r2, [r0, #32]
   2eb60:	ldr	r3, [r0, #20]
   2eb64:	ldr	ip, [r0, #16]
   2eb68:	ldr	r2, [r2, #16]
   2eb6c:	mls	r3, r2, r1, r3
   2eb70:	mul	r2, r2, r1
   2eb74:	mov	r1, #0
   2eb78:	str	r3, [r0, #20]
   2eb7c:	add	r0, ip, r3
   2eb80:	bl	14ee4 <memset@plt>
   2eb84:	mov	r0, #0
   2eb88:	pop	{fp, pc}
   2eb8c:	ldr	r0, [pc, #56]	; 2ebcc <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   2eb90:	ldr	r1, [pc, #56]	; 2ebd0 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2eb94:	ldr	r3, [pc, #56]	; 2ebd4 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   2eb98:	movw	r2, #994	; 0x3e2
   2eb9c:	add	r0, pc, r0
   2eba0:	add	r1, pc, r1
   2eba4:	add	r3, pc, r3
   2eba8:	bl	14f38 <__assert_fail@plt>
   2ebac:	ldr	r0, [pc, #36]	; 2ebd8 <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   2ebb0:	ldr	r1, [pc, #36]	; 2ebdc <flatcc_builder_truncate_offset_vector@@Base+0xac>
   2ebb4:	ldr	r3, [pc, #36]	; 2ebe0 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   2ebb8:	movw	r2, #995	; 0x3e3
   2ebbc:	add	r0, pc, r0
   2ebc0:	add	r1, pc, r1
   2ebc4:	add	r3, pc, r3
   2ebc8:	bl	14f38 <__assert_fail@plt>
   2ebcc:	andeq	sl, r1, r9, lsr r2
   2ebd0:	andeq	r9, r1, r2, lsl #28
   2ebd4:	andeq	sl, r1, r5, asr r4
   2ebd8:	andeq	sl, r1, r3, lsl #9
   2ebdc:	andeq	r9, r1, r2, ror #27
   2ebe0:	andeq	sl, r1, r5, lsr r4

0002ebe4 <flatcc_builder_truncate_string@@Base>:
   2ebe4:	push	{fp, lr}
   2ebe8:	mov	fp, sp
   2ebec:	mov	r2, r1
   2ebf0:	ldr	r1, [r0, #32]
   2ebf4:	ldrh	r3, [r1, #14]
   2ebf8:	cmp	r3, #6
   2ebfc:	bne	2ec38 <flatcc_builder_truncate_string@@Base+0x54>
   2ec00:	ldr	r3, [r1, #20]
   2ec04:	cmp	r3, r2
   2ec08:	bcc	2ec58 <flatcc_builder_truncate_string@@Base+0x74>
   2ec0c:	sub	r3, r3, r2
   2ec10:	str	r3, [r1, #20]
   2ec14:	ldr	r3, [r0, #20]
   2ec18:	ldr	r1, [r0, #16]
   2ec1c:	sub	r3, r3, r2
   2ec20:	str	r3, [r0, #20]
   2ec24:	add	r0, r1, r3
   2ec28:	mov	r1, #0
   2ec2c:	bl	14ee4 <memset@plt>
   2ec30:	mov	r0, #0
   2ec34:	pop	{fp, pc}
   2ec38:	ldr	r0, [pc, #56]	; 2ec78 <flatcc_builder_truncate_string@@Base+0x94>
   2ec3c:	ldr	r1, [pc, #56]	; 2ec7c <flatcc_builder_truncate_string@@Base+0x98>
   2ec40:	ldr	r3, [pc, #56]	; 2ec80 <flatcc_builder_truncate_string@@Base+0x9c>
   2ec44:	movw	r2, #1003	; 0x3eb
   2ec48:	add	r0, pc, r0
   2ec4c:	add	r1, pc, r1
   2ec50:	add	r3, pc, r3
   2ec54:	bl	14f38 <__assert_fail@plt>
   2ec58:	ldr	r0, [pc, #36]	; 2ec84 <flatcc_builder_truncate_string@@Base+0xa0>
   2ec5c:	ldr	r1, [pc, #36]	; 2ec88 <flatcc_builder_truncate_string@@Base+0xa4>
   2ec60:	ldr	r3, [pc, #36]	; 2ec8c <flatcc_builder_truncate_string@@Base+0xa8>
   2ec64:	mov	r2, #1004	; 0x3ec
   2ec68:	add	r0, pc, r0
   2ec6c:	add	r1, pc, r1
   2ec70:	add	r3, pc, r3
   2ec74:	bl	14f38 <__assert_fail@plt>
   2ec78:	muleq	r1, r6, r2
   2ec7c:	andeq	r9, r1, r6, asr sp
   2ec80:	andeq	sl, r1, sl, lsr #8
   2ec84:	andeq	sl, r1, r1, asr r4
   2ec88:	andeq	r9, r1, r6, lsr sp
   2ec8c:	andeq	sl, r1, sl, lsl #8

0002ec90 <flatcc_builder_start_vector@@Base>:
   2ec90:	push	{r4, r5, r6, r7, fp, lr}
   2ec94:	add	fp, sp, #16
   2ec98:	mov	r7, #4
   2ec9c:	cmp	r2, #4
   2eca0:	mov	r6, r1
   2eca4:	mov	r5, r3
   2eca8:	mov	r4, r0
   2ecac:	movls	r2, r7
   2ecb0:	mov	r1, r2
   2ecb4:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   2ecb8:	mov	r1, r0
   2ecbc:	mvn	r0, #0
   2ecc0:	cmp	r1, #0
   2ecc4:	popne	{r4, r5, r6, r7, fp, pc}
   2ecc8:	ldr	r0, [r4, #32]
   2eccc:	str	r6, [r0, #16]
   2ecd0:	mov	r0, #0
   2ecd4:	ldr	r1, [r4, #32]
   2ecd8:	str	r0, [r1, #20]
   2ecdc:	ldr	r1, [r4, #32]
   2ece0:	str	r5, [r1, #24]
   2ece4:	ldr	r1, [r4, #32]
   2ece8:	strh	r7, [r1, #14]
   2ecec:	ldr	r2, [r4, #28]
   2ecf0:	ldr	r3, [r4, #60]	; 0x3c
   2ecf4:	ldr	r7, [r4, #64]	; 0x40
   2ecf8:	add	r3, r3, r2
   2ecfc:	sub	r2, r7, r2
   2ed00:	str	r3, [r4, #16]
   2ed04:	mvn	r3, #3
   2ed08:	cmn	r2, #4
   2ed0c:	movcs	r2, r3
   2ed10:	str	r2, [r4, #24]
   2ed14:	str	r3, [r1, #4]
   2ed18:	pop	{r4, r5, r6, r7, fp, pc}

0002ed1c <flatcc_builder_start_offset_vector@@Base>:
   2ed1c:	push	{r4, r5, fp, lr}
   2ed20:	add	fp, sp, #8
   2ed24:	mov	r1, #4
   2ed28:	mov	r4, r0
   2ed2c:	mov	r5, #4
   2ed30:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   2ed34:	mov	r1, r0
   2ed38:	mvn	r0, #0
   2ed3c:	cmp	r1, #0
   2ed40:	popne	{r4, r5, fp, pc}
   2ed44:	ldr	r0, [r4, #32]
   2ed48:	mov	r2, #5
   2ed4c:	str	r5, [r0, #16]
   2ed50:	mov	r0, #0
   2ed54:	ldr	r1, [r4, #32]
   2ed58:	str	r0, [r1, #20]
   2ed5c:	ldr	r1, [r4, #32]
   2ed60:	strh	r2, [r1, #14]
   2ed64:	ldr	r2, [r4, #28]
   2ed68:	ldr	r3, [r4, #60]	; 0x3c
   2ed6c:	ldr	r5, [r4, #64]	; 0x40
   2ed70:	add	r3, r3, r2
   2ed74:	sub	r2, r5, r2
   2ed78:	str	r3, [r4, #16]
   2ed7c:	mvn	r3, #3
   2ed80:	cmn	r2, #4
   2ed84:	movcs	r2, r3
   2ed88:	str	r2, [r4, #24]
   2ed8c:	str	r3, [r1, #4]
   2ed90:	pop	{r4, r5, fp, pc}

0002ed94 <flatcc_builder_create_offset_vector@@Base>:
   2ed94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2ed98:	add	fp, sp, #24
   2ed9c:	sub	sp, sp, #8
   2eda0:	mov	r8, r1
   2eda4:	mov	r1, #4
   2eda8:	mov	r6, r2
   2edac:	mov	r4, r0
   2edb0:	mov	r7, #4
   2edb4:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   2edb8:	cmp	r0, #0
   2edbc:	beq	2edcc <flatcc_builder_create_offset_vector@@Base+0x38>
   2edc0:	mov	r0, #0
   2edc4:	sub	sp, fp, #24
   2edc8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2edcc:	ldr	r0, [r4, #32]
   2edd0:	mov	r1, #0
   2edd4:	str	r7, [r0, #16]
   2edd8:	ldr	r0, [r4, #32]
   2eddc:	str	r1, [r0, #20]
   2ede0:	mov	r1, #5
   2ede4:	ldr	r0, [r4, #32]
   2ede8:	strh	r1, [r0, #14]
   2edec:	ldr	r1, [r4, #28]
   2edf0:	ldr	r2, [r4, #60]	; 0x3c
   2edf4:	ldr	r3, [r4, #64]	; 0x40
   2edf8:	add	r2, r2, r1
   2edfc:	sub	r1, r3, r1
   2ee00:	str	r2, [r4, #16]
   2ee04:	mvn	r2, #3
   2ee08:	cmn	r1, #4
   2ee0c:	movcs	r1, r2
   2ee10:	str	r1, [r4, #24]
   2ee14:	str	r2, [r0, #4]
   2ee18:	ldr	r1, [r0, #20]
   2ee1c:	adds	r1, r1, r6
   2ee20:	cmpcc	r1, #1073741824	; 0x40000000
   2ee24:	bcc	2ee48 <flatcc_builder_create_offset_vector@@Base+0xb4>
   2ee28:	ldr	r0, [pc, #200]	; 2eef8 <flatcc_builder_create_offset_vector@@Base+0x164>
   2ee2c:	ldr	r1, [pc, #200]	; 2eefc <flatcc_builder_create_offset_vector@@Base+0x168>
   2ee30:	ldr	r3, [pc, #200]	; 2ef00 <flatcc_builder_create_offset_vector@@Base+0x16c>
   2ee34:	mov	r2, #892	; 0x37c
   2ee38:	add	r0, pc, r0
   2ee3c:	add	r1, pc, r1
   2ee40:	add	r3, pc, r3
   2ee44:	bl	14f38 <__assert_fail@plt>
   2ee48:	str	r1, [r0, #20]
   2ee4c:	ldr	r7, [r4, #20]
   2ee50:	ldr	r0, [r4, #24]
   2ee54:	add	r1, r7, r6, lsl #2
   2ee58:	cmp	r1, r0
   2ee5c:	str	r1, [r4, #20]
   2ee60:	bcs	2ee74 <flatcc_builder_create_offset_vector@@Base+0xe0>
   2ee64:	ldr	r0, [r4, #16]
   2ee68:	adds	r0, r0, r7
   2ee6c:	bne	2eedc <flatcc_builder_create_offset_vector@@Base+0x148>
   2ee70:	b	2edc0 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2ee74:	ldr	r2, [r4, #28]
   2ee78:	ldr	r0, [r4, #40]	; 0x28
   2ee7c:	ldr	r5, [r4, #48]	; 0x30
   2ee80:	mov	r3, #1
   2ee84:	str	r3, [sp]
   2ee88:	mov	r3, #1
   2ee8c:	add	r1, r1, r2
   2ee90:	add	r2, r1, #1
   2ee94:	add	r1, r4, #60	; 0x3c
   2ee98:	blx	r5
   2ee9c:	cmp	r0, #0
   2eea0:	bne	2edc0 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2eea4:	ldr	r1, [r4, #28]
   2eea8:	ldr	r0, [r4, #60]	; 0x3c
   2eeac:	ldr	r3, [r4, #64]	; 0x40
   2eeb0:	ldr	r2, [r4, #32]
   2eeb4:	add	r0, r0, r1
   2eeb8:	sub	r1, r3, r1
   2eebc:	mvn	r3, #3
   2eec0:	cmn	r1, #4
   2eec4:	str	r0, [r4, #16]
   2eec8:	movcs	r1, r3
   2eecc:	str	r1, [r4, #24]
   2eed0:	str	r3, [r2, #4]
   2eed4:	adds	r0, r0, r7
   2eed8:	beq	2edc0 <flatcc_builder_create_offset_vector@@Base+0x2c>
   2eedc:	lsl	r2, r6, #2
   2eee0:	mov	r1, r8
   2eee4:	bl	14e54 <memcpy@plt>
   2eee8:	mov	r0, r4
   2eeec:	sub	sp, fp, #24
   2eef0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   2eef4:	b	2ef04 <flatcc_builder_end_offset_vector@@Base>
   2eef8:	andeq	sl, r1, r0, lsr ip
   2eefc:	andeq	r9, r1, r6, ror #22
   2ef00:	andeq	sl, r1, r3, asr #24

0002ef04 <flatcc_builder_end_offset_vector@@Base>:
   2ef04:	push	{r4, r5, fp, lr}
   2ef08:	add	fp, sp, #8
   2ef0c:	mov	r4, r0
   2ef10:	ldr	r0, [r0, #32]
   2ef14:	ldrh	r1, [r0, #14]
   2ef18:	cmp	r1, #5
   2ef1c:	bne	2efbc <flatcc_builder_end_offset_vector@@Base+0xb8>
   2ef20:	ldr	r2, [r0, #20]
   2ef24:	ldr	r1, [r4, #16]
   2ef28:	mov	r0, r4
   2ef2c:	mov	r3, #0
   2ef30:	bl	30020 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   2ef34:	mov	r5, r0
   2ef38:	cmp	r0, #0
   2ef3c:	beq	2efb4 <flatcc_builder_end_offset_vector@@Base+0xb0>
   2ef40:	ldr	r0, [r4, #16]
   2ef44:	ldr	r2, [r4, #20]
   2ef48:	mov	r1, #0
   2ef4c:	bl	14ee4 <memset@plt>
   2ef50:	ldr	r0, [r4, #32]
   2ef54:	ldr	r1, [r4, #60]	; 0x3c
   2ef58:	ldr	ip, [r4, #64]	; 0x40
   2ef5c:	ldr	r3, [r0, #8]
   2ef60:	str	r3, [r4, #20]
   2ef64:	ldr	r3, [r0]
   2ef68:	str	r3, [r4, #28]
   2ef6c:	add	r1, r1, r3
   2ef70:	ldr	r2, [r0, #4]
   2ef74:	str	r1, [r4, #16]
   2ef78:	sub	r1, ip, r3
   2ef7c:	cmp	r1, r2
   2ef80:	movhi	r1, r2
   2ef84:	str	r1, [r4, #24]
   2ef88:	ldrh	r1, [r4, #130]	; 0x82
   2ef8c:	ldrh	r2, [r4, #128]	; 0x80
   2ef90:	cmp	r2, r1
   2ef94:	strhcc	r1, [r4, #128]	; 0x80
   2ef98:	ldrh	r1, [r0, #12]
   2ef9c:	sub	r0, r0, #36	; 0x24
   2efa0:	str	r0, [r4, #32]
   2efa4:	strh	r1, [r4, #130]	; 0x82
   2efa8:	ldr	r0, [r4, #156]	; 0x9c
   2efac:	sub	r0, r0, #1
   2efb0:	str	r0, [r4, #156]	; 0x9c
   2efb4:	mov	r0, r5
   2efb8:	pop	{r4, r5, fp, pc}
   2efbc:	ldr	r0, [pc, #24]	; 2efdc <flatcc_builder_end_offset_vector@@Base+0xd8>
   2efc0:	ldr	r1, [pc, #24]	; 2efe0 <flatcc_builder_end_offset_vector@@Base+0xdc>
   2efc4:	ldr	r3, [pc, #24]	; 2efe4 <flatcc_builder_end_offset_vector@@Base+0xe0>
   2efc8:	movw	r2, #1480	; 0x5c8
   2efcc:	add	r0, pc, r0
   2efd0:	add	r1, pc, r1
   2efd4:	add	r3, pc, r3
   2efd8:	bl	14f38 <__assert_fail@plt>
   2efdc:	andeq	r9, r1, r9, lsl #28
   2efe0:	ldrdeq	r9, [r1], -r2
   2efe4:	andeq	sl, r1, r0, lsr r4

0002efe8 <flatcc_builder_start_string@@Base>:
   2efe8:	push	{r4, r5, fp, lr}
   2efec:	add	fp, sp, #8
   2eff0:	mov	r1, #1
   2eff4:	mov	r4, r0
   2eff8:	mov	r5, #1
   2effc:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   2f000:	mov	r1, r0
   2f004:	mvn	r0, #0
   2f008:	cmp	r1, #0
   2f00c:	popne	{r4, r5, fp, pc}
   2f010:	ldr	r0, [r4, #32]
   2f014:	mov	r2, #6
   2f018:	str	r5, [r0, #16]
   2f01c:	mov	r0, #0
   2f020:	ldr	r1, [r4, #32]
   2f024:	str	r0, [r1, #20]
   2f028:	ldr	r1, [r4, #32]
   2f02c:	strh	r2, [r1, #14]
   2f030:	ldr	r2, [r4, #28]
   2f034:	ldr	r3, [r4, #60]	; 0x3c
   2f038:	ldr	r5, [r4, #64]	; 0x40
   2f03c:	add	r3, r3, r2
   2f040:	sub	r2, r5, r2
   2f044:	str	r3, [r4, #16]
   2f048:	mvn	r3, #3
   2f04c:	cmn	r2, #4
   2f050:	movcs	r2, r3
   2f054:	str	r2, [r4, #24]
   2f058:	str	r3, [r1, #4]
   2f05c:	pop	{r4, r5, fp, pc}

0002f060 <flatcc_builder_reserve_table@@Base>:
   2f060:	push	{r4, r5, r6, sl, fp, lr}
   2f064:	add	fp, sp, #16
   2f068:	sub	sp, sp, #8
   2f06c:	cmn	r1, #1
   2f070:	ble	2f148 <flatcc_builder_reserve_table@@Base+0xe8>
   2f074:	mov	r4, r0
   2f078:	ldr	r0, [r0, #32]
   2f07c:	mov	r5, r1
   2f080:	ldr	r1, [r4, #56]	; 0x38
   2f084:	ldrh	r2, [r0, #28]
   2f088:	ldr	r0, [r0, #16]
   2f08c:	add	r6, r0, r2, lsl #1
   2f090:	add	r0, r6, r5, lsl #1
   2f094:	add	r2, r0, #4
   2f098:	cmp	r2, r1
   2f09c:	bls	2f0c4 <flatcc_builder_reserve_table@@Base+0x64>
   2f0a0:	ldr	r0, [r4, #40]	; 0x28
   2f0a4:	ldr	ip, [r4, #48]	; 0x30
   2f0a8:	mov	r3, #0
   2f0ac:	add	r1, r4, #52	; 0x34
   2f0b0:	str	r3, [sp]
   2f0b4:	mov	r3, #1
   2f0b8:	blx	ip
   2f0bc:	cmp	r0, #0
   2f0c0:	bne	2f168 <flatcc_builder_reserve_table@@Base+0x108>
   2f0c4:	ldr	r0, [r4, #52]	; 0x34
   2f0c8:	adds	r0, r0, r6
   2f0cc:	str	r0, [r4, #4]
   2f0d0:	beq	2f13c <flatcc_builder_reserve_table@@Base+0xdc>
   2f0d4:	add	r0, r0, #4
   2f0d8:	lsl	r1, r5, #1
   2f0dc:	str	r0, [r4, #4]
   2f0e0:	ldr	r0, [r4, #32]
   2f0e4:	ldr	r3, [r4, #80]	; 0x50
   2f0e8:	ldr	r5, [r0, #20]
   2f0ec:	orr	r0, r1, #1
   2f0f0:	add	r2, r5, r0
   2f0f4:	cmp	r2, r3
   2f0f8:	bls	2f120 <flatcc_builder_reserve_table@@Base+0xc0>
   2f0fc:	ldr	r0, [r4, #40]	; 0x28
   2f100:	ldr	r6, [r4, #48]	; 0x30
   2f104:	mov	r3, #3
   2f108:	add	r1, r4, #76	; 0x4c
   2f10c:	str	r3, [sp]
   2f110:	mov	r3, #0
   2f114:	blx	r6
   2f118:	cmp	r0, #0
   2f11c:	bne	2f168 <flatcc_builder_reserve_table@@Base+0x108>
   2f120:	ldr	r0, [r4, #76]	; 0x4c
   2f124:	adds	r0, r0, r5
   2f128:	str	r0, [r4]
   2f12c:	mov	r0, #0
   2f130:	mvneq	r0, #0
   2f134:	sub	sp, fp, #16
   2f138:	pop	{r4, r5, r6, sl, fp, pc}
   2f13c:	mvn	r0, #0
   2f140:	sub	sp, fp, #16
   2f144:	pop	{r4, r5, r6, sl, fp, pc}
   2f148:	ldr	r0, [pc, #56]	; 2f188 <flatcc_builder_reserve_table@@Base+0x128>
   2f14c:	ldr	r1, [pc, #56]	; 2f18c <flatcc_builder_reserve_table@@Base+0x12c>
   2f150:	ldr	r3, [pc, #56]	; 2f190 <flatcc_builder_reserve_table@@Base+0x130>
   2f154:	movw	r2, #1065	; 0x429
   2f158:	add	r0, pc, r0
   2f15c:	add	r1, pc, r1
   2f160:	add	r3, pc, r3
   2f164:	bl	14f38 <__assert_fail@plt>
   2f168:	ldr	r0, [pc, #36]	; 2f194 <flatcc_builder_reserve_table@@Base+0x134>
   2f16c:	ldr	r1, [pc, #36]	; 2f198 <flatcc_builder_reserve_table@@Base+0x138>
   2f170:	ldr	r3, [pc, #36]	; 2f19c <flatcc_builder_reserve_table@@Base+0x13c>
   2f174:	mov	r2, #308	; 0x134
   2f178:	add	r0, pc, r0
   2f17c:	add	r1, pc, r1
   2f180:	add	r3, pc, r3
   2f184:	bl	14f38 <__assert_fail@plt>
   2f188:	andeq	r9, r1, r4, asr #31
   2f18c:	andeq	r9, r1, r6, asr #16
   2f190:	andeq	r9, r1, fp, ror pc
   2f194:	andeq	sl, r1, r7, ror #19
   2f198:	andeq	r9, r1, r6, lsr #16
   2f19c:	andeq	sl, r1, r9, lsl r8

0002f1a0 <flatcc_builder_start_table@@Base>:
   2f1a0:	push	{r4, r5, r6, r7, fp, lr}
   2f1a4:	add	fp, sp, #16
   2f1a8:	sub	sp, sp, #8
   2f1ac:	mov	r6, r1
   2f1b0:	mov	r1, #4
   2f1b4:	mov	r4, r0
   2f1b8:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   2f1bc:	mvn	r5, #0
   2f1c0:	cmp	r0, #0
   2f1c4:	beq	2f1d4 <flatcc_builder_start_table@@Base+0x34>
   2f1c8:	mov	r0, r5
   2f1cc:	sub	sp, fp, #16
   2f1d0:	pop	{r4, r5, r6, r7, fp, pc}
   2f1d4:	mov	r1, r4
   2f1d8:	ldr	r2, [r4, #4]
   2f1dc:	ldr	r3, [r4, #32]
   2f1e0:	ldr	r0, [r1, #52]!	; 0x34
   2f1e4:	sub	r0, r2, r0
   2f1e8:	str	r0, [r3, #16]
   2f1ec:	ldr	r0, [r4]
   2f1f0:	ldr	r3, [r4, #76]	; 0x4c
   2f1f4:	ldr	r2, [r4, #32]
   2f1f8:	sub	r0, r0, r3
   2f1fc:	mov	r3, #0
   2f200:	str	r0, [r2, #20]
   2f204:	ldr	r0, [r4, #12]
   2f208:	ldr	r2, [r4, #32]
   2f20c:	str	r0, [r2, #24]
   2f210:	ldr	r0, [r4, #32]
   2f214:	ldrh	r2, [r4, #8]
   2f218:	strh	r2, [r0, #28]
   2f21c:	movw	r0, #15186	; 0x3b52
   2f220:	strh	r3, [r4, #8]
   2f224:	mov	r2, #3
   2f228:	movt	r0, #12137	; 0x2f69
   2f22c:	str	r0, [r4, #12]
   2f230:	ldr	r0, [r4, #32]
   2f234:	strh	r2, [r0, #14]
   2f238:	ldrh	r2, [r0, #28]
   2f23c:	ldr	r0, [r0, #16]
   2f240:	add	r7, r0, r2, lsl #1
   2f244:	add	r0, r7, r6, lsl #1
   2f248:	add	r2, r0, #4
   2f24c:	ldr	r0, [r4, #56]	; 0x38
   2f250:	cmp	r2, r0
   2f254:	bls	2f274 <flatcc_builder_start_table@@Base+0xd4>
   2f258:	ldr	r0, [r4, #40]	; 0x28
   2f25c:	ldr	ip, [r4, #48]	; 0x30
   2f260:	str	r3, [sp]
   2f264:	mov	r3, #1
   2f268:	blx	ip
   2f26c:	cmp	r0, #0
   2f270:	bne	2f318 <flatcc_builder_start_table@@Base+0x178>
   2f274:	ldr	r0, [r4, #52]	; 0x34
   2f278:	adds	r0, r0, r7
   2f27c:	str	r0, [r4, #4]
   2f280:	beq	2f1c8 <flatcc_builder_start_table@@Base+0x28>
   2f284:	add	r0, r0, #4
   2f288:	lsl	r1, r6, #1
   2f28c:	str	r0, [r4, #4]
   2f290:	ldr	r0, [r4, #32]
   2f294:	ldr	r3, [r4, #80]	; 0x50
   2f298:	ldr	r6, [r0, #20]
   2f29c:	orr	r0, r1, #1
   2f2a0:	add	r2, r6, r0
   2f2a4:	cmp	r2, r3
   2f2a8:	bls	2f2d0 <flatcc_builder_start_table@@Base+0x130>
   2f2ac:	ldr	r0, [r4, #40]	; 0x28
   2f2b0:	ldr	r7, [r4, #48]	; 0x30
   2f2b4:	mov	r3, #3
   2f2b8:	add	r1, r4, #76	; 0x4c
   2f2bc:	str	r3, [sp]
   2f2c0:	mov	r3, #0
   2f2c4:	blx	r7
   2f2c8:	cmp	r0, #0
   2f2cc:	bne	2f318 <flatcc_builder_start_table@@Base+0x178>
   2f2d0:	ldr	r0, [r4, #76]	; 0x4c
   2f2d4:	adds	r0, r0, r6
   2f2d8:	str	r0, [r4]
   2f2dc:	beq	2f1c8 <flatcc_builder_start_table@@Base+0x28>
   2f2e0:	ldr	r0, [r4, #28]
   2f2e4:	ldr	r2, [r4, #60]	; 0x3c
   2f2e8:	ldr	r3, [r4, #64]	; 0x40
   2f2ec:	ldr	r1, [r4, #32]
   2f2f0:	mov	r5, #0
   2f2f4:	add	r2, r2, r0
   2f2f8:	sub	r0, r3, r0
   2f2fc:	str	r2, [r4, #16]
   2f300:	movw	r2, #65532	; 0xfffc
   2f304:	cmp	r0, r2
   2f308:	movcs	r0, r2
   2f30c:	str	r0, [r4, #24]
   2f310:	str	r2, [r1, #4]
   2f314:	b	2f1c8 <flatcc_builder_start_table@@Base+0x28>
   2f318:	ldr	r0, [pc, #24]	; 2f338 <flatcc_builder_start_table@@Base+0x198>
   2f31c:	ldr	r1, [pc, #24]	; 2f33c <flatcc_builder_start_table@@Base+0x19c>
   2f320:	ldr	r3, [pc, #24]	; 2f340 <flatcc_builder_start_table@@Base+0x1a0>
   2f324:	mov	r2, #308	; 0x134
   2f328:	add	r0, pc, r0
   2f32c:	add	r1, pc, r1
   2f330:	add	r3, pc, r3
   2f334:	bl	14f38 <__assert_fail@plt>
   2f338:	andeq	sl, r1, r7, lsr r8
   2f33c:	andeq	r9, r1, r6, ror r6
   2f340:	andeq	sl, r1, r9, ror #12

0002f344 <flatcc_builder_create_vtable@@Base>:
   2f344:	push	{r4, r5, fp, lr}
   2f348:	add	fp, sp, #8
   2f34c:	sub	sp, sp, #80	; 0x50
   2f350:	mov	r3, r2
   2f354:	mov	r2, #0
   2f358:	mov	r4, r0
   2f35c:	cmp	r3, #0
   2f360:	str	r2, [sp, #12]
   2f364:	str	r2, [sp, #8]
   2f368:	movne	r2, #1
   2f36c:	strne	r3, [sp, #20]
   2f370:	strne	r1, [sp, #16]
   2f374:	strne	r3, [sp, #8]
   2f378:	strne	r2, [sp, #12]
   2f37c:	ldr	r0, [r4, #152]	; 0x98
   2f380:	cmp	r0, #0
   2f384:	bne	2f394 <flatcc_builder_create_vtable@@Base+0x50>
   2f388:	ldr	r0, [r4, #180]	; 0xb4
   2f38c:	cmp	r0, #0
   2f390:	beq	2f3f0 <flatcc_builder_create_vtable@@Base+0xac>
   2f394:	cmp	r3, #0
   2f398:	beq	2f434 <flatcc_builder_create_vtable@@Base+0xf0>
   2f39c:	ldr	r0, [r4, #136]	; 0x88
   2f3a0:	ldr	ip, [r4, #44]	; 0x2c
   2f3a4:	add	r1, sp, #8
   2f3a8:	add	r1, r1, #8
   2f3ac:	sub	r5, r0, r3
   2f3b0:	ldr	r0, [r4, #36]	; 0x24
   2f3b4:	str	r3, [sp]
   2f3b8:	mov	r3, r5
   2f3bc:	blx	ip
   2f3c0:	cmp	r0, #0
   2f3c4:	bne	2f454 <flatcc_builder_create_vtable@@Base+0x110>
   2f3c8:	cmp	r5, #0
   2f3cc:	str	r5, [r4, #136]	; 0x88
   2f3d0:	beq	2f3e4 <flatcc_builder_create_vtable@@Base+0xa0>
   2f3d4:	add	r1, r5, #1
   2f3d8:	mov	r0, r1
   2f3dc:	sub	sp, fp, #8
   2f3e0:	pop	{r4, r5, fp, pc}
   2f3e4:	mov	r0, #0
   2f3e8:	sub	sp, fp, #8
   2f3ec:	pop	{r4, r5, fp, pc}
   2f3f0:	ldr	r5, [r4, #140]	; 0x8c
   2f3f4:	ldr	r0, [r4, #36]	; 0x24
   2f3f8:	ldr	ip, [r4, #44]	; 0x2c
   2f3fc:	add	r1, r5, r3
   2f400:	str	r1, [r4, #140]	; 0x8c
   2f404:	add	r1, sp, #8
   2f408:	str	r3, [sp]
   2f40c:	mov	r3, r5
   2f410:	add	r1, r1, #8
   2f414:	blx	ip
   2f418:	cmp	r0, #0
   2f41c:	bne	2f474 <flatcc_builder_create_vtable@@Base+0x130>
   2f420:	adds	r1, r5, #1
   2f424:	mov	r0, #0
   2f428:	movcc	r0, r1
   2f42c:	sub	sp, fp, #8
   2f430:	pop	{r4, r5, fp, pc}
   2f434:	ldr	r0, [pc, #100]	; 2f4a0 <flatcc_builder_create_vtable@@Base+0x15c>
   2f438:	ldr	r1, [pc, #100]	; 2f4a4 <flatcc_builder_create_vtable@@Base+0x160>
   2f43c:	ldr	r3, [pc, #100]	; 2f4a8 <flatcc_builder_create_vtable@@Base+0x164>
   2f440:	movw	r2, #647	; 0x287
   2f444:	add	r0, pc, r0
   2f448:	add	r1, pc, r1
   2f44c:	add	r3, pc, r3
   2f450:	bl	14f38 <__assert_fail@plt>
   2f454:	ldr	r0, [pc, #80]	; 2f4ac <flatcc_builder_create_vtable@@Base+0x168>
   2f458:	ldr	r1, [pc, #80]	; 2f4b0 <flatcc_builder_create_vtable@@Base+0x16c>
   2f45c:	ldr	r3, [pc, #80]	; 2f4b4 <flatcc_builder_create_vtable@@Base+0x170>
   2f460:	movw	r2, #651	; 0x28b
   2f464:	add	r0, pc, r0
   2f468:	add	r1, pc, r1
   2f46c:	add	r3, pc, r3
   2f470:	bl	14f38 <__assert_fail@plt>
   2f474:	ldr	r0, [pc, #24]	; 2f494 <flatcc_builder_create_vtable@@Base+0x150>
   2f478:	ldr	r1, [pc, #24]	; 2f498 <flatcc_builder_create_vtable@@Base+0x154>
   2f47c:	ldr	r3, [pc, #24]	; 2f49c <flatcc_builder_create_vtable@@Base+0x158>
   2f480:	movw	r2, #677	; 0x2a5
   2f484:	add	r0, pc, r0
   2f488:	add	r1, pc, r1
   2f48c:	add	r3, pc, r3
   2f490:	bl	14f38 <__assert_fail@plt>
   2f494:	ldrdeq	sl, [r1], -fp
   2f498:	andeq	r9, r1, sl, lsl r5
   2f49c:	andeq	sl, r1, lr, asr #12
   2f4a0:	andeq	sl, r1, fp, lsl r7
   2f4a4:	andeq	r9, r1, sl, asr r5
   2f4a8:	ldrdeq	sl, [r1], -r2
   2f4ac:	strdeq	sl, [r1], -fp
   2f4b0:	andeq	r9, r1, sl, lsr r5
   2f4b4:			; <UNDEFINED> instruction: 0x0001a5b2

0002f4b8 <flatcc_builder_create_cached_vtable@@Base>:
   2f4b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2f4bc:	add	fp, sp, #28
   2f4c0:	sub	sp, sp, #20
   2f4c4:	mov	sl, r0
   2f4c8:	ldr	r0, [r0, #116]	; 0x74
   2f4cc:	mov	r8, r3
   2f4d0:	mov	r5, r2
   2f4d4:	str	r1, [sp, #16]
   2f4d8:	cmp	r0, #0
   2f4dc:	beq	2f580 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   2f4e0:	ldr	r1, [sl, #92]	; 0x5c
   2f4e4:	rsb	r0, r0, #32
   2f4e8:	lsr	r0, r8, r0
   2f4ec:	add	r6, r1, r0, lsl #2
   2f4f0:	cmp	r6, #0
   2f4f4:	beq	2f644 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   2f4f8:	ldr	r7, [r6]
   2f4fc:	str	r6, [sp, #12]
   2f500:	cmp	r7, #0
   2f504:	beq	2f64c <flatcc_builder_create_cached_vtable@@Base+0x194>
   2f508:	ldr	r4, [sl, #68]	; 0x44
   2f50c:	ldr	r8, [sl, #100]	; 0x64
   2f510:	mov	r0, #0
   2f514:	str	r0, [sp, #8]
   2f518:	b	2f52c <flatcc_builder_create_cached_vtable@@Base+0x74>
   2f51c:	ldr	r7, [r9, #12]!
   2f520:	mov	r6, r9
   2f524:	cmp	r7, #0
   2f528:	beq	2f63c <flatcc_builder_create_cached_vtable@@Base+0x184>
   2f52c:	add	r9, r8, r7
   2f530:	mov	r1, r4
   2f534:	ldr	r0, [r9, #8]
   2f538:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   2f53c:	cmp	r0, r5
   2f540:	bne	2f51c <flatcc_builder_create_cached_vtable@@Base+0x64>
   2f544:	ldr	r0, [sp, #16]
   2f548:	mov	r2, r5
   2f54c:	bl	14eb4 <bcmp@plt>
   2f550:	cmp	r0, #0
   2f554:	bne	2f51c <flatcc_builder_create_cached_vtable@@Base+0x64>
   2f558:	ldr	r0, [sl, #152]	; 0x98
   2f55c:	ldr	r1, [r9, #4]
   2f560:	cmp	r1, r0
   2f564:	beq	2f7b0 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   2f568:	mov	r6, r9
   2f56c:	mov	r0, r9
   2f570:	ldr	r7, [r6, #12]!
   2f574:	cmp	r7, #0
   2f578:	bne	2f514 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   2f57c:	b	2f650 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2f580:	ldr	r0, [sl, #124]	; 0x7c
   2f584:	cmp	r0, #0
   2f588:	bne	2f7fc <flatcc_builder_create_cached_vtable@@Base+0x344>
   2f58c:	ldr	r0, [sl, #104]	; 0x68
   2f590:	add	r7, sl, #100	; 0x64
   2f594:	cmp	r0, #15
   2f598:	bhi	2f5c4 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   2f59c:	ldr	r0, [sl, #40]	; 0x28
   2f5a0:	ldr	r6, [sl, #48]	; 0x30
   2f5a4:	mov	r1, #6
   2f5a8:	mov	r2, #16
   2f5ac:	mov	r3, #0
   2f5b0:	str	r1, [sp]
   2f5b4:	mov	r1, r7
   2f5b8:	blx	r6
   2f5bc:	cmp	r0, #0
   2f5c0:	bne	2f7dc <flatcc_builder_create_cached_vtable@@Base+0x324>
   2f5c4:	ldr	r0, [r7]
   2f5c8:	mov	r7, #0
   2f5cc:	cmp	r0, #0
   2f5d0:	beq	2f6f0 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f5d4:	mov	r0, #16
   2f5d8:	mov	r2, #5
   2f5dc:	add	r1, sl, #92	; 0x5c
   2f5e0:	mov	r3, #1
   2f5e4:	mov	r4, #256	; 0x100
   2f5e8:	str	r0, [sl, #124]	; 0x7c
   2f5ec:	ldr	r0, [sl, #40]	; 0x28
   2f5f0:	ldr	r6, [sl, #48]	; 0x30
   2f5f4:	str	r2, [sp]
   2f5f8:	mov	r2, #256	; 0x100
   2f5fc:	blx	r6
   2f600:	cmp	r0, #0
   2f604:	bne	2f6f0 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f608:	ldr	r0, [sl, #96]	; 0x60
   2f60c:	mov	r1, r4
   2f610:	lsl	r4, r4, #1
   2f614:	cmp	r0, r1, lsl #1
   2f618:	bcs	2f60c <flatcc_builder_create_cached_vtable@@Base+0x154>
   2f61c:	lsr	r1, r1, #2
   2f620:	mvn	r0, #0
   2f624:	mov	r2, #1
   2f628:	add	r0, r0, #1
   2f62c:	cmp	r1, r2, lsl r0
   2f630:	bhi	2f628 <flatcc_builder_create_cached_vtable@@Base+0x170>
   2f634:	str	r0, [sl, #116]	; 0x74
   2f638:	b	2f4e0 <flatcc_builder_create_cached_vtable@@Base+0x28>
   2f63c:	ldr	r9, [sp, #8]
   2f640:	b	2f650 <flatcc_builder_create_cached_vtable@@Base+0x198>
   2f644:	mov	r7, #0
   2f648:	b	2f6f0 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f64c:	mov	r9, #0
   2f650:	ldr	r4, [sl, #124]	; 0x7c
   2f654:	ldr	r0, [sl, #104]	; 0x68
   2f658:	add	r7, sl, #100	; 0x64
   2f65c:	add	r2, r4, #16
   2f660:	cmp	r2, r0
   2f664:	bls	2f68c <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   2f668:	ldr	r0, [sl, #40]	; 0x28
   2f66c:	ldr	r6, [sl, #48]	; 0x30
   2f670:	mov	r1, #6
   2f674:	mov	r3, #0
   2f678:	str	r1, [sp]
   2f67c:	mov	r1, r7
   2f680:	blx	r6
   2f684:	cmp	r0, #0
   2f688:	bne	2f7dc <flatcc_builder_create_cached_vtable@@Base+0x324>
   2f68c:	ldr	r0, [r7]
   2f690:	mov	r7, #0
   2f694:	adds	r4, r0, r4
   2f698:	beq	2f6f0 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f69c:	ldr	r0, [sl, #124]	; 0x7c
   2f6a0:	ldr	r1, [sl, #152]	; 0x98
   2f6a4:	add	r2, r0, #16
   2f6a8:	str	r2, [sl, #124]	; 0x7c
   2f6ac:	ldr	r2, [sp, #12]
   2f6b0:	str	r1, [r4, #4]
   2f6b4:	ldr	r1, [r2]
   2f6b8:	str	r1, [r4, #12]
   2f6bc:	ldr	r1, [sp, #16]
   2f6c0:	str	r0, [r2]
   2f6c4:	mov	r0, sl
   2f6c8:	mov	r2, r5
   2f6cc:	bl	2f344 <flatcc_builder_create_vtable@@Base>
   2f6d0:	cmp	r0, #0
   2f6d4:	str	r0, [r4]
   2f6d8:	beq	2f6f0 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f6dc:	cmp	r9, #0
   2f6e0:	beq	2f6fc <flatcc_builder_create_cached_vtable@@Base+0x244>
   2f6e4:	ldr	r0, [r9, #8]
   2f6e8:	str	r0, [r4, #8]
   2f6ec:	ldr	r7, [r4]
   2f6f0:	mov	r0, r7
   2f6f4:	sub	sp, fp, #28
   2f6f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2f6fc:	ldr	r6, [sl, #120]	; 0x78
   2f700:	ldr	r0, [sl, #172]	; 0xac
   2f704:	add	r2, r6, r5
   2f708:	cmp	r0, #0
   2f70c:	beq	2f748 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2f710:	cmp	r0, r2
   2f714:	bcs	2f748 <flatcc_builder_create_cached_vtable@@Base+0x290>
   2f718:	ldr	r0, [sl, #116]	; 0x74
   2f71c:	cmp	r0, #0
   2f720:	beq	2f6ec <flatcc_builder_create_cached_vtable@@Base+0x234>
   2f724:	ldr	r0, [sl, #92]	; 0x5c
   2f728:	ldr	r2, [sl, #96]	; 0x60
   2f72c:	mov	r1, #0
   2f730:	mov	r5, #0
   2f734:	bl	14ee4 <memset@plt>
   2f738:	mov	r0, #16
   2f73c:	str	r5, [sl, #120]	; 0x78
   2f740:	str	r0, [sl, #124]	; 0x7c
   2f744:	b	2f6ec <flatcc_builder_create_cached_vtable@@Base+0x234>
   2f748:	ldr	r0, [sl, #72]	; 0x48
   2f74c:	add	r7, sl, #68	; 0x44
   2f750:	cmp	r2, r0
   2f754:	bls	2f77c <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   2f758:	ldr	r0, [sl, #40]	; 0x28
   2f75c:	ldr	ip, [sl, #48]	; 0x30
   2f760:	mov	r1, #2
   2f764:	mov	r3, #0
   2f768:	str	r1, [sp]
   2f76c:	mov	r1, r7
   2f770:	blx	ip
   2f774:	cmp	r0, #0
   2f778:	bne	2f7dc <flatcc_builder_create_cached_vtable@@Base+0x324>
   2f77c:	ldr	r0, [r7]
   2f780:	adds	r0, r0, r6
   2f784:	beq	2f7a8 <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2f788:	ldr	r1, [sl, #120]	; 0x78
   2f78c:	mov	r2, r5
   2f790:	str	r1, [r4, #8]
   2f794:	add	r1, r1, r5
   2f798:	str	r1, [sl, #120]	; 0x78
   2f79c:	ldr	r1, [sp, #16]
   2f7a0:	bl	14e54 <memcpy@plt>
   2f7a4:	b	2f6ec <flatcc_builder_create_cached_vtable@@Base+0x234>
   2f7a8:	mvn	r7, #0
   2f7ac:	b	2f6f0 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f7b0:	ldr	r0, [sp, #12]
   2f7b4:	cmp	r6, r0
   2f7b8:	beq	2f7d4 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   2f7bc:	mov	r1, r0
   2f7c0:	ldr	r0, [r9, #12]
   2f7c4:	str	r0, [r6]
   2f7c8:	ldr	r0, [r1]
   2f7cc:	str	r0, [r9, #12]
   2f7d0:	str	r7, [r1]
   2f7d4:	ldr	r7, [r9]
   2f7d8:	b	2f6f0 <flatcc_builder_create_cached_vtable@@Base+0x238>
   2f7dc:	ldr	r0, [pc, #68]	; 2f828 <flatcc_builder_create_cached_vtable@@Base+0x370>
   2f7e0:	ldr	r1, [pc, #68]	; 2f82c <flatcc_builder_create_cached_vtable@@Base+0x374>
   2f7e4:	ldr	r3, [pc, #68]	; 2f830 <flatcc_builder_create_cached_vtable@@Base+0x378>
   2f7e8:	mov	r2, #308	; 0x134
   2f7ec:	add	r0, pc, r0
   2f7f0:	add	r1, pc, r1
   2f7f4:	add	r3, pc, r3
   2f7f8:	bl	14f38 <__assert_fail@plt>
   2f7fc:	ldr	r0, [pc, #24]	; 2f81c <flatcc_builder_create_cached_vtable@@Base+0x364>
   2f800:	ldr	r1, [pc, #24]	; 2f820 <flatcc_builder_create_cached_vtable@@Base+0x368>
   2f804:	ldr	r3, [pc, #24]	; 2f824 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   2f808:	movw	r2, #342	; 0x156
   2f80c:	add	r0, pc, r0
   2f810:	add	r1, pc, r1
   2f814:	add	r3, pc, r3
   2f818:	bl	14f38 <__assert_fail@plt>
   2f81c:	andeq	sl, r1, r7, lsl r3
   2f820:	muleq	r1, r2, r1
   2f824:	andeq	sl, r1, lr, lsl r3
   2f828:	andeq	sl, r1, r3, ror r3
   2f82c:			; <UNDEFINED> instruction: 0x000191b2
   2f830:	andeq	sl, r1, r5, lsr #3

0002f834 <flatcc_builder_create_table@@Base>:
   2f834:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f838:	add	fp, sp, #24
   2f83c:	sub	sp, sp, #80	; 0x50
   2f840:	ldr	r5, [fp, #12]
   2f844:	cmn	r5, #1
   2f848:	ble	2f994 <flatcc_builder_create_table@@Base+0x160>
   2f84c:	ldr	ip, [fp, #16]
   2f850:	tst	ip, #1
   2f854:	beq	2f9b4 <flatcc_builder_create_table@@Base+0x180>
   2f858:	mov	r8, r0
   2f85c:	ldrh	r0, [r0, #128]	; 0x80
   2f860:	cmp	r3, #4
   2f864:	movls	r3, #4
   2f868:	cmp	r0, r3
   2f86c:	strhcc	r3, [r8, #128]	; 0x80
   2f870:	cmp	r5, #1
   2f874:	ldr	r0, [r8, #136]	; 0x88
   2f878:	sub	r4, r0, r2
   2f87c:	sub	r0, r3, #1
   2f880:	and	r0, r4, r0
   2f884:	sub	r4, r4, #4
   2f888:	add	r3, ip, r0
   2f88c:	sub	r3, r4, r3
   2f890:	add	r3, r3, #1
   2f894:	str	r3, [fp, #-28]	; 0xffffffe4
   2f898:	blt	2f8c8 <flatcc_builder_create_table@@Base+0x94>
   2f89c:	ldr	r3, [fp, #8]
   2f8a0:	sub	ip, r4, r0
   2f8a4:	mvn	r4, #3
   2f8a8:	sub	r4, r4, ip
   2f8ac:	ldrh	r6, [r3], #2
   2f8b0:	subs	r5, r5, #1
   2f8b4:	ldr	r7, [r6, r1]
   2f8b8:	add	r7, r4, r7
   2f8bc:	sub	r7, r7, r6
   2f8c0:	str	r7, [r6, r1]
   2f8c4:	bne	2f8ac <flatcc_builder_create_table@@Base+0x78>
   2f8c8:	mov	r4, #4
   2f8cc:	sub	r3, fp, #28
   2f8d0:	cmp	r2, #0
   2f8d4:	str	r4, [sp, #16]
   2f8d8:	str	r3, [sp, #12]
   2f8dc:	mov	r3, #1
   2f8e0:	str	r4, [sp, #4]
   2f8e4:	addne	r4, r2, #4
   2f8e8:	str	r3, [sp, #8]
   2f8ec:	movne	r3, #2
   2f8f0:	strne	r2, [sp, #24]
   2f8f4:	strne	r1, [sp, #20]
   2f8f8:	strne	r3, [sp, #8]
   2f8fc:	strne	r4, [sp, #4]
   2f900:	cmp	r0, #0
   2f904:	beq	2f930 <flatcc_builder_create_table@@Base+0xfc>
   2f908:	add	r4, r4, r0
   2f90c:	add	r1, sp, #4
   2f910:	str	r4, [sp, #4]
   2f914:	add	r1, r1, r3, lsl #3
   2f918:	add	r3, r3, #1
   2f91c:	ldr	r2, [pc, #208]	; 2f9f4 <flatcc_builder_create_table@@Base+0x1c0>
   2f920:	ldr	r2, [pc, r2]
   2f924:	str	r2, [r1, #8]
   2f928:	str	r0, [r1, #12]
   2f92c:	str	r3, [sp, #8]
   2f930:	cmp	r4, #0
   2f934:	ble	2f9d4 <flatcc_builder_create_table@@Base+0x1a0>
   2f938:	ldr	r0, [r8, #136]	; 0x88
   2f93c:	ldr	r7, [r8, #44]	; 0x2c
   2f940:	add	r1, sp, #4
   2f944:	mov	r2, r3
   2f948:	add	r1, r1, #8
   2f94c:	sub	r5, r0, r4
   2f950:	ldr	r0, [r8, #36]	; 0x24
   2f954:	str	r4, [sp]
   2f958:	mov	r3, r5
   2f95c:	blx	r7
   2f960:	cmp	r0, #0
   2f964:	streq	r5, [r8, #136]	; 0x88
   2f968:	moveq	r0, r5
   2f96c:	subeq	sp, fp, #24
   2f970:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f974:	ldr	r0, [pc, #160]	; 2fa1c <flatcc_builder_create_table@@Base+0x1e8>
   2f978:	ldr	r1, [pc, #160]	; 2fa20 <flatcc_builder_create_table@@Base+0x1ec>
   2f97c:	ldr	r3, [pc, #160]	; 2fa24 <flatcc_builder_create_table@@Base+0x1f0>
   2f980:	movw	r2, #651	; 0x28b
   2f984:	add	r0, pc, r0
   2f988:	add	r1, pc, r1
   2f98c:	add	r3, pc, r3
   2f990:	bl	14f38 <__assert_fail@plt>
   2f994:	ldr	r0, [pc, #92]	; 2f9f8 <flatcc_builder_create_table@@Base+0x1c4>
   2f998:	ldr	r1, [pc, #92]	; 2f9fc <flatcc_builder_create_table@@Base+0x1c8>
   2f99c:	ldr	r3, [pc, #92]	; 2fa00 <flatcc_builder_create_table@@Base+0x1cc>
   2f9a0:	movw	r2, #1237	; 0x4d5
   2f9a4:	add	r0, pc, r0
   2f9a8:	add	r1, pc, r1
   2f9ac:	add	r3, pc, r3
   2f9b0:	bl	14f38 <__assert_fail@plt>
   2f9b4:	ldr	r0, [pc, #72]	; 2fa04 <flatcc_builder_create_table@@Base+0x1d0>
   2f9b8:	ldr	r1, [pc, #72]	; 2fa08 <flatcc_builder_create_table@@Base+0x1d4>
   2f9bc:	ldr	r3, [pc, #72]	; 2fa0c <flatcc_builder_create_table@@Base+0x1d8>
   2f9c0:	movw	r2, #1243	; 0x4db
   2f9c4:	add	r0, pc, r0
   2f9c8:	add	r1, pc, r1
   2f9cc:	add	r3, pc, r3
   2f9d0:	bl	14f38 <__assert_fail@plt>
   2f9d4:	ldr	r0, [pc, #52]	; 2fa10 <flatcc_builder_create_table@@Base+0x1dc>
   2f9d8:	ldr	r1, [pc, #52]	; 2fa14 <flatcc_builder_create_table@@Base+0x1e0>
   2f9dc:	ldr	r3, [pc, #52]	; 2fa18 <flatcc_builder_create_table@@Base+0x1e4>
   2f9e0:	movw	r2, #647	; 0x287
   2f9e4:	add	r0, pc, r0
   2f9e8:	add	r1, pc, r1
   2f9ec:	add	r3, pc, r3
   2f9f0:	bl	14f38 <__assert_fail@plt>
   2f9f4:	andeq	ip, r2, r4, asr #14
   2f9f8:	andeq	r9, r1, r1, ror r7
   2f9fc:	strdeq	r8, [r1], -sl
   2fa00:	andeq	r9, r1, fp, ror r7
   2fa04:	strdeq	r9, [r1], -pc	; <UNPREDICTABLE>
   2fa08:	ldrdeq	r8, [r1], -sl
   2fa0c:	andeq	r9, r1, fp, asr r7
   2fa10:	andeq	sl, r1, fp, ror r1
   2fa14:			; <UNDEFINED> instruction: 0x00018fba
   2fa18:	andeq	sl, r1, r2, lsr r0
   2fa1c:	ldrdeq	sl, [r1], -fp
   2fa20:	andeq	r9, r1, sl, lsl r0
   2fa24:	muleq	r1, r2, r0

0002fa28 <flatcc_builder_check_required_field@@Base>:
   2fa28:	push	{fp, lr}
   2fa2c:	mov	fp, sp
   2fa30:	ldr	r2, [r0, #32]
   2fa34:	ldrh	r2, [r2, #14]
   2fa38:	cmp	r2, #3
   2fa3c:	bne	2fa6c <flatcc_builder_check_required_field@@Base+0x44>
   2fa40:	ldrh	r3, [r0, #8]
   2fa44:	mov	r2, #0
   2fa48:	cmp	r3, r1
   2fa4c:	bls	2fa64 <flatcc_builder_check_required_field@@Base+0x3c>
   2fa50:	ldr	r0, [r0, #4]
   2fa54:	add	r0, r0, r1, lsl #1
   2fa58:	ldrh	r2, [r0]
   2fa5c:	cmp	r2, #0
   2fa60:	movwne	r2, #1
   2fa64:	mov	r0, r2
   2fa68:	pop	{fp, pc}
   2fa6c:	ldr	r0, [pc, #24]	; 2fa8c <flatcc_builder_check_required_field@@Base+0x64>
   2fa70:	ldr	r1, [pc, #24]	; 2fa90 <flatcc_builder_check_required_field@@Base+0x68>
   2fa74:	ldr	r3, [pc, #24]	; 2fa94 <flatcc_builder_check_required_field@@Base+0x6c>
   2fa78:	movw	r2, #1272	; 0x4f8
   2fa7c:	add	r0, pc, r0
   2fa80:	add	r1, pc, r1
   2fa84:	add	r3, pc, r3
   2fa88:	bl	14f38 <__assert_fail@plt>
   2fa8c:	andeq	r9, r1, r2, asr r7
   2fa90:	andeq	r8, r1, r2, lsr #30
   2fa94:	andeq	r9, r1, r5, ror r7

0002fa98 <flatcc_builder_check_union_field@@Base>:
   2fa98:	push	{fp, lr}
   2fa9c:	mov	fp, sp
   2faa0:	mov	r2, r0
   2faa4:	ldr	r0, [r0, #32]
   2faa8:	ldrh	r0, [r0, #14]
   2faac:	cmp	r0, #3
   2fab0:	bne	2fb10 <flatcc_builder_check_union_field@@Base+0x78>
   2fab4:	mov	r0, #0
   2fab8:	cmp	r1, #0
   2fabc:	beq	2fafc <flatcc_builder_check_union_field@@Base+0x64>
   2fac0:	ldrh	r3, [r2, #8]
   2fac4:	cmp	r3, r1
   2fac8:	popls	{fp, pc}
   2facc:	ldr	r0, [r2, #4]
   2fad0:	add	r0, r0, r1, lsl #1
   2fad4:	ldrh	r1, [r0, #-2]
   2fad8:	cmp	r1, #0
   2fadc:	beq	2fb00 <flatcc_builder_check_union_field@@Base+0x68>
   2fae0:	ldr	r2, [r2, #16]
   2fae4:	ldrh	r0, [r0]
   2fae8:	ldrb	r1, [r2, r1]
   2faec:	cmp	r1, #0
   2faf0:	beq	2fb04 <flatcc_builder_check_union_field@@Base+0x6c>
   2faf4:	cmp	r0, #0
   2faf8:	movwne	r0, #1
   2fafc:	pop	{fp, pc}
   2fb00:	ldrh	r0, [r0]
   2fb04:	clz	r0, r0
   2fb08:	lsr	r0, r0, #5
   2fb0c:	pop	{fp, pc}
   2fb10:	ldr	r0, [pc, #24]	; 2fb30 <flatcc_builder_check_union_field@@Base+0x98>
   2fb14:	ldr	r1, [pc, #24]	; 2fb34 <flatcc_builder_check_union_field@@Base+0x9c>
   2fb18:	ldr	r3, [pc, #24]	; 2fb38 <flatcc_builder_check_union_field@@Base+0xa0>
   2fb1c:	movw	r2, #1279	; 0x4ff
   2fb20:	add	r0, pc, r0
   2fb24:	add	r1, pc, r1
   2fb28:	add	r3, pc, r3
   2fb2c:	bl	14f38 <__assert_fail@plt>
   2fb30:	andeq	r9, r1, lr, lsr #13
   2fb34:	andeq	r8, r1, lr, ror lr
   2fb38:	andeq	r9, r1, r4, lsr #14

0002fb3c <flatcc_builder_check_required@@Base>:
   2fb3c:	push	{fp, lr}
   2fb40:	mov	fp, sp
   2fb44:	mov	r3, r0
   2fb48:	ldr	r0, [r0, #32]
   2fb4c:	ldrh	r0, [r0, #14]
   2fb50:	cmp	r0, #3
   2fb54:	bne	2fb9c <flatcc_builder_check_required@@Base+0x60>
   2fb58:	ldrh	ip, [r3, #8]
   2fb5c:	mov	r0, #0
   2fb60:	cmp	ip, r2
   2fb64:	poplt	{fp, pc}
   2fb68:	cmp	r2, #1
   2fb6c:	blt	2fb94 <flatcc_builder_check_required@@Base+0x58>
   2fb70:	ldr	ip, [r3, #4]
   2fb74:	ldrh	r3, [r1]
   2fb78:	add	r3, ip, r3, lsl #1
   2fb7c:	ldrh	r3, [r3]
   2fb80:	cmp	r3, #0
   2fb84:	beq	2fb98 <flatcc_builder_check_required@@Base+0x5c>
   2fb88:	add	r1, r1, #2
   2fb8c:	subs	r2, r2, #1
   2fb90:	bne	2fb74 <flatcc_builder_check_required@@Base+0x38>
   2fb94:	mov	r0, #1
   2fb98:	pop	{fp, pc}
   2fb9c:	ldr	r0, [pc, #24]	; 2fbbc <flatcc_builder_check_required@@Base+0x80>
   2fba0:	ldr	r1, [pc, #24]	; 2fbc0 <flatcc_builder_check_required@@Base+0x84>
   2fba4:	ldr	r3, [pc, #24]	; 2fbc4 <flatcc_builder_check_required@@Base+0x88>
   2fba8:	movw	r2, #1297	; 0x511
   2fbac:	add	r0, pc, r0
   2fbb0:	add	r1, pc, r1
   2fbb4:	add	r3, pc, r3
   2fbb8:	bl	14f38 <__assert_fail@plt>
   2fbbc:	andeq	r9, r1, r2, lsr #12
   2fbc0:	strdeq	r8, [r1], -r2
   2fbc4:	andeq	r9, r1, r8, ror #13

0002fbc8 <flatcc_builder_end_table@@Base>:
   2fbc8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2fbcc:	add	fp, sp, #24
   2fbd0:	sub	sp, sp, #16
   2fbd4:	mov	r4, r0
   2fbd8:	ldr	r0, [r0, #32]
   2fbdc:	ldrh	r0, [r0, #14]
   2fbe0:	cmp	r0, #3
   2fbe4:	bne	2fd60 <flatcc_builder_end_table@@Base+0x198>
   2fbe8:	ldrh	r0, [r4, #8]
   2fbec:	ldr	r5, [r4, #4]
   2fbf0:	mov	r1, #4
   2fbf4:	movw	r2, #31153	; 0x79b1
   2fbf8:	movt	r2, #40503	; 0x9e37
   2fbfc:	add	r0, r1, r0, lsl #1
   2fc00:	strh	r0, [r5, #-4]!
   2fc04:	ldrh	r1, [r4, #20]
   2fc08:	uxth	r6, r0
   2fc0c:	add	r1, r1, #4
   2fc10:	strh	r1, [r5, #2]
   2fc14:	uxth	r1, r1
   2fc18:	ldr	r0, [r4, #12]
   2fc1c:	eor	r0, r0, r6
   2fc20:	mul	r0, r0, r2
   2fc24:	eor	r0, r0, r1
   2fc28:	mov	r1, r5
   2fc2c:	mul	r3, r0, r2
   2fc30:	mov	r0, r4
   2fc34:	mov	r2, r6
   2fc38:	str	r3, [r4, #12]
   2fc3c:	bl	2f4b8 <flatcc_builder_create_cached_vtable@@Base>
   2fc40:	cmp	r0, #0
   2fc44:	beq	2fd50 <flatcc_builder_end_table@@Base+0x188>
   2fc48:	mov	r7, r0
   2fc4c:	mov	r0, r5
   2fc50:	mov	r1, #0
   2fc54:	mov	r2, r6
   2fc58:	mov	r8, #0
   2fc5c:	bl	14ee4 <memset@plt>
   2fc60:	ldr	r5, [r4, #32]
   2fc64:	ldr	r0, [r4, #76]	; 0x4c
   2fc68:	ldr	r6, [r4]
   2fc6c:	ldrh	r3, [r4, #130]	; 0x82
   2fc70:	ldr	r1, [r4, #16]
   2fc74:	ldr	r2, [r4, #20]
   2fc78:	ldr	r5, [r5, #20]
   2fc7c:	add	r0, r0, r5
   2fc80:	sub	r6, r6, r0
   2fc84:	asr	r6, r6, #1
   2fc88:	stm	sp, {r0, r6, r7}
   2fc8c:	mov	r0, r4
   2fc90:	bl	2f834 <flatcc_builder_create_table@@Base>
   2fc94:	cmp	r0, #0
   2fc98:	beq	2fd54 <flatcc_builder_end_table@@Base+0x18c>
   2fc9c:	ldr	r1, [r4, #32]
   2fca0:	mov	r5, r0
   2fca4:	ldr	r0, [r4, #16]
   2fca8:	ldr	r2, [r4, #20]
   2fcac:	ldr	r3, [r4, #52]	; 0x34
   2fcb0:	ldr	r7, [r1, #24]
   2fcb4:	str	r7, [r4, #12]
   2fcb8:	ldrh	r7, [r1, #28]
   2fcbc:	strh	r7, [r4, #8]
   2fcc0:	ldr	r7, [r1, #16]
   2fcc4:	add	r3, r3, r7
   2fcc8:	str	r3, [r4, #4]
   2fccc:	ldr	r3, [r4, #76]	; 0x4c
   2fcd0:	ldr	r1, [r1, #20]
   2fcd4:	add	r1, r3, r1
   2fcd8:	str	r1, [r4]
   2fcdc:	mov	r1, #0
   2fce0:	bl	14ee4 <memset@plt>
   2fce4:	ldr	r0, [r4, #32]
   2fce8:	ldr	r1, [r4, #60]	; 0x3c
   2fcec:	ldr	r2, [r4, #64]	; 0x40
   2fcf0:	mov	r8, r5
   2fcf4:	ldr	r3, [r0, #8]
   2fcf8:	str	r3, [r4, #20]
   2fcfc:	ldr	r3, [r0]
   2fd00:	str	r3, [r4, #28]
   2fd04:	add	r1, r1, r3
   2fd08:	ldr	r7, [r0, #4]
   2fd0c:	str	r1, [r4, #16]
   2fd10:	sub	r1, r2, r3
   2fd14:	cmp	r1, r7
   2fd18:	movhi	r1, r7
   2fd1c:	str	r1, [r4, #24]
   2fd20:	ldrh	r1, [r4, #130]	; 0x82
   2fd24:	ldrh	r2, [r4, #128]	; 0x80
   2fd28:	cmp	r2, r1
   2fd2c:	strhcc	r1, [r4, #128]	; 0x80
   2fd30:	ldrh	r1, [r0, #12]
   2fd34:	sub	r0, r0, #36	; 0x24
   2fd38:	str	r0, [r4, #32]
   2fd3c:	strh	r1, [r4, #130]	; 0x82
   2fd40:	ldr	r0, [r4, #156]	; 0x9c
   2fd44:	sub	r0, r0, #1
   2fd48:	str	r0, [r4, #156]	; 0x9c
   2fd4c:	b	2fd54 <flatcc_builder_end_table@@Base+0x18c>
   2fd50:	mov	r8, #0
   2fd54:	mov	r0, r8
   2fd58:	sub	sp, fp, #24
   2fd5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2fd60:	ldr	r0, [pc, #24]	; 2fd80 <flatcc_builder_end_table@@Base+0x1b8>
   2fd64:	ldr	r1, [pc, #24]	; 2fd84 <flatcc_builder_end_table@@Base+0x1bc>
   2fd68:	ldr	r3, [pc, #24]	; 2fd88 <flatcc_builder_end_table@@Base+0x1c0>
   2fd6c:	movw	r2, #1317	; 0x525
   2fd70:	add	r0, pc, r0
   2fd74:	add	r1, pc, r1
   2fd78:	add	r3, pc, r3
   2fd7c:	bl	14f38 <__assert_fail@plt>
   2fd80:	andeq	r9, r1, lr, asr r4
   2fd84:	andeq	r8, r1, lr, lsr #24
   2fd88:	andeq	r9, r1, lr, ror r5

0002fd8c <flatcc_builder_create_vector@@Base>:
   2fd8c:	push	{r4, r5, r6, r7, fp, lr}
   2fd90:	add	fp, sp, #16
   2fd94:	sub	sp, sp, #80	; 0x50
   2fd98:	mov	r7, r0
   2fd9c:	ldr	r0, [fp, #12]
   2fda0:	cmp	r2, r0
   2fda4:	bhi	2fea0 <flatcc_builder_create_vector@@Base+0x114>
   2fda8:	ldr	r0, [fp, #8]
   2fdac:	mov	r4, r2
   2fdb0:	ldrh	r2, [r7, #128]	; 0x80
   2fdb4:	mov	r5, #4
   2fdb8:	cmp	r0, #4
   2fdbc:	movls	r0, r5
   2fdc0:	cmp	r2, r0
   2fdc4:	sub	r2, fp, #20
   2fdc8:	strhcc	r0, [r7, #128]	; 0x80
   2fdcc:	str	r4, [fp, #-20]	; 0xffffffec
   2fdd0:	sub	r0, r0, #1
   2fdd4:	ldr	ip, [r7, #136]	; 0x88
   2fdd8:	str	r5, [sp, #16]
   2fddc:	str	r2, [sp, #12]
   2fde0:	mov	r2, #1
   2fde4:	str	r5, [sp, #4]
   2fde8:	str	r2, [sp, #8]
   2fdec:	mls	r6, r3, r4, ip
   2fdf0:	mul	r3, r3, r4
   2fdf4:	cmp	r3, #0
   2fdf8:	and	r0, r6, r0
   2fdfc:	movne	r2, #2
   2fe00:	addne	r5, r3, #4
   2fe04:	strne	r3, [sp, #24]
   2fe08:	strne	r1, [sp, #20]
   2fe0c:	strne	r2, [sp, #8]
   2fe10:	strne	r5, [sp, #4]
   2fe14:	cmp	r0, #0
   2fe18:	beq	2fe44 <flatcc_builder_create_vector@@Base+0xb8>
   2fe1c:	add	r5, r5, r0
   2fe20:	add	r1, sp, #4
   2fe24:	str	r5, [sp, #4]
   2fe28:	add	r1, r1, r2, lsl #3
   2fe2c:	add	r2, r2, #1
   2fe30:	ldr	r3, [pc, #168]	; 2fee0 <flatcc_builder_create_vector@@Base+0x154>
   2fe34:	ldr	r3, [pc, r3]
   2fe38:	str	r3, [r1, #8]
   2fe3c:	str	r0, [r1, #12]
   2fe40:	str	r2, [sp, #8]
   2fe44:	cmp	r5, #0
   2fe48:	ble	2fec0 <flatcc_builder_create_vector@@Base+0x134>
   2fe4c:	ldr	r0, [r7, #36]	; 0x24
   2fe50:	ldr	r6, [r7, #44]	; 0x2c
   2fe54:	add	r1, sp, #4
   2fe58:	sub	r4, ip, r5
   2fe5c:	str	r5, [sp]
   2fe60:	add	r1, r1, #8
   2fe64:	mov	r3, r4
   2fe68:	blx	r6
   2fe6c:	cmp	r0, #0
   2fe70:	streq	r4, [r7, #136]	; 0x88
   2fe74:	moveq	r0, r4
   2fe78:	subeq	sp, fp, #16
   2fe7c:	popeq	{r4, r5, r6, r7, fp, pc}
   2fe80:	ldr	r0, [pc, #116]	; 2fefc <flatcc_builder_create_vector@@Base+0x170>
   2fe84:	ldr	r1, [pc, #116]	; 2ff00 <flatcc_builder_create_vector@@Base+0x174>
   2fe88:	ldr	r3, [pc, #116]	; 2ff04 <flatcc_builder_create_vector@@Base+0x178>
   2fe8c:	movw	r2, #651	; 0x28b
   2fe90:	add	r0, pc, r0
   2fe94:	add	r1, pc, r1
   2fe98:	add	r3, pc, r3
   2fe9c:	bl	14f38 <__assert_fail@plt>
   2fea0:	ldr	r0, [pc, #60]	; 2fee4 <flatcc_builder_create_vector@@Base+0x158>
   2fea4:	ldr	r1, [pc, #60]	; 2fee8 <flatcc_builder_create_vector@@Base+0x15c>
   2fea8:	ldr	r3, [pc, #60]	; 2feec <flatcc_builder_create_vector@@Base+0x160>
   2feac:	movw	r2, #1365	; 0x555
   2feb0:	add	r0, pc, r0
   2feb4:	add	r1, pc, r1
   2feb8:	add	r3, pc, r3
   2febc:	bl	14f38 <__assert_fail@plt>
   2fec0:	ldr	r0, [pc, #40]	; 2fef0 <flatcc_builder_create_vector@@Base+0x164>
   2fec4:	ldr	r1, [pc, #40]	; 2fef4 <flatcc_builder_create_vector@@Base+0x168>
   2fec8:	ldr	r3, [pc, #40]	; 2fef8 <flatcc_builder_create_vector@@Base+0x16c>
   2fecc:	movw	r2, #647	; 0x287
   2fed0:	add	r0, pc, r0
   2fed4:	add	r1, pc, r1
   2fed8:	add	r3, pc, r3
   2fedc:	bl	14f38 <__assert_fail@plt>
   2fee0:	andeq	ip, r2, r0, lsr r2
   2fee4:	andeq	r9, r1, r8, lsl #9
   2fee8:	andeq	r8, r1, lr, ror #21
   2feec:	muleq	r1, r3, r4
   2fef0:	andeq	r9, r1, pc, lsl #25
   2fef4:	andeq	r8, r1, lr, asr #21
   2fef8:	andeq	r9, r1, r6, asr #22
   2fefc:	andeq	r9, r1, pc, asr #25
   2ff00:	andeq	r8, r1, lr, lsl #22
   2ff04:	andeq	r9, r1, r6, lsl #23

0002ff08 <flatcc_builder_end_vector@@Base>:
   2ff08:	push	{r4, r5, fp, lr}
   2ff0c:	add	fp, sp, #8
   2ff10:	sub	sp, sp, #8
   2ff14:	mov	r4, r0
   2ff18:	ldr	r0, [r0, #32]
   2ff1c:	ldrh	r1, [r0, #14]
   2ff20:	cmp	r1, #4
   2ff24:	bne	2ffd8 <flatcc_builder_end_vector@@Base+0xd0>
   2ff28:	ldr	r3, [r0, #16]
   2ff2c:	ldr	r2, [r0, #20]
   2ff30:	ldr	r0, [r0, #24]
   2ff34:	ldr	r1, [r4, #16]
   2ff38:	ldrh	r5, [r4, #130]	; 0x82
   2ff3c:	str	r0, [sp, #4]
   2ff40:	mov	r0, r4
   2ff44:	str	r5, [sp]
   2ff48:	bl	2fd8c <flatcc_builder_create_vector@@Base>
   2ff4c:	mov	r5, r0
   2ff50:	cmp	r0, #0
   2ff54:	beq	2ffcc <flatcc_builder_end_vector@@Base+0xc4>
   2ff58:	ldr	r0, [r4, #16]
   2ff5c:	ldr	r2, [r4, #20]
   2ff60:	mov	r1, #0
   2ff64:	bl	14ee4 <memset@plt>
   2ff68:	ldr	r0, [r4, #32]
   2ff6c:	ldr	r1, [r4, #60]	; 0x3c
   2ff70:	ldr	ip, [r4, #64]	; 0x40
   2ff74:	ldr	r3, [r0, #8]
   2ff78:	str	r3, [r4, #20]
   2ff7c:	ldr	r3, [r0]
   2ff80:	str	r3, [r4, #28]
   2ff84:	add	r1, r1, r3
   2ff88:	ldr	r2, [r0, #4]
   2ff8c:	str	r1, [r4, #16]
   2ff90:	sub	r1, ip, r3
   2ff94:	cmp	r1, r2
   2ff98:	movhi	r1, r2
   2ff9c:	str	r1, [r4, #24]
   2ffa0:	ldrh	r1, [r4, #130]	; 0x82
   2ffa4:	ldrh	r2, [r4, #128]	; 0x80
   2ffa8:	cmp	r2, r1
   2ffac:	strhcc	r1, [r4, #128]	; 0x80
   2ffb0:	ldrh	r1, [r0, #12]
   2ffb4:	sub	r0, r0, #36	; 0x24
   2ffb8:	str	r0, [r4, #32]
   2ffbc:	strh	r1, [r4, #130]	; 0x82
   2ffc0:	ldr	r0, [r4, #156]	; 0x9c
   2ffc4:	sub	r0, r0, #1
   2ffc8:	str	r0, [r4, #156]	; 0x9c
   2ffcc:	mov	r0, r5
   2ffd0:	sub	sp, fp, #8
   2ffd4:	pop	{r4, r5, fp, pc}
   2ffd8:	ldr	r0, [pc, #24]	; 2fff8 <flatcc_builder_end_vector@@Base+0xf0>
   2ffdc:	ldr	r1, [pc, #24]	; 2fffc <flatcc_builder_end_vector@@Base+0xf4>
   2ffe0:	ldr	r3, [pc, #24]	; 30000 <flatcc_builder_end_vector@@Base+0xf8>
   2ffe4:	movw	r2, #1400	; 0x578
   2ffe8:	add	r0, pc, r0
   2ffec:	add	r1, pc, r1
   2fff0:	add	r3, pc, r3
   2fff4:	bl	14f38 <__assert_fail@plt>
   2fff8:	strdeq	r8, [r1], -r4
   2fffc:			; <UNDEFINED> instruction: 0x000189b6
   30000:	ldrdeq	r9, [r1], -r1

00030004 <flatcc_builder_vector_count@@Base>:
   30004:	ldr	r0, [r0, #32]
   30008:	ldr	r0, [r0, #20]
   3000c:	bx	lr

00030010 <flatcc_builder_vector_edit@@Base>:
   30010:	ldr	r0, [r0, #16]
   30014:	bx	lr

00030018 <flatcc_builder_create_offset_vector_direct@@Base>:
   30018:	mov	r3, #0
   3001c:	b	30020 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30020:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30024:	add	fp, sp, #24
   30028:	sub	sp, sp, #80	; 0x50
   3002c:	mov	r6, #0
   30030:	cmn	r2, #-1073741823	; 0xc0000001
   30034:	bhi	30194 <flatcc_builder_create_offset_vector_direct@@Base+0x17c>
   30038:	mov	r8, r0
   3003c:	ldrh	r0, [r0, #128]	; 0x80
   30040:	mov	r5, #4
   30044:	sub	r7, fp, #28
   30048:	mov	r4, #1
   3004c:	cmp	r0, #3
   30050:	movls	r0, #4
   30054:	strhls	r0, [r8, #128]	; 0x80
   30058:	str	r2, [fp, #-28]	; 0xffffffe4
   3005c:	ldr	ip, [r8, #136]	; 0x88
   30060:	str	r5, [sp, #16]
   30064:	str	r7, [sp, #12]
   30068:	mov	r7, #0
   3006c:	str	r5, [sp, #4]
   30070:	str	r4, [sp, #8]
   30074:	cmp	r7, r2, lsl #2
   30078:	and	r6, ip, #3
   3007c:	beq	3009c <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   30080:	lsl	r7, r2, #2
   30084:	mov	r4, #2
   30088:	add	r5, r7, #4
   3008c:	str	r7, [sp, #24]
   30090:	str	r1, [sp, #20]
   30094:	str	r4, [sp, #8]
   30098:	str	r5, [sp, #4]
   3009c:	cmp	r6, #0
   300a0:	beq	300cc <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   300a4:	add	r5, r5, r6
   300a8:	add	r7, sp, #4
   300ac:	str	r5, [sp, #4]
   300b0:	add	r7, r7, r4, lsl #3
   300b4:	add	r4, r4, #1
   300b8:	ldr	r0, [pc, #352]	; 30220 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   300bc:	ldr	r0, [pc, r0]
   300c0:	str	r0, [r7, #8]
   300c4:	str	r6, [r7, #12]
   300c8:	str	r4, [sp, #8]
   300cc:	cmp	r2, #0
   300d0:	beq	3015c <flatcc_builder_create_offset_vector_direct@@Base+0x144>
   300d4:	sub	r0, r5, ip
   300d8:	mov	r6, r3
   300dc:	sub	r0, r0, #4
   300e0:	b	300f8 <flatcc_builder_create_offset_vector_direct@@Base+0xe0>
   300e4:	sub	r0, r0, #4
   300e8:	add	r1, r1, #4
   300ec:	add	r6, r6, #1
   300f0:	subs	r2, r2, #1
   300f4:	beq	30158 <flatcc_builder_create_offset_vector_direct@@Base+0x140>
   300f8:	ldr	r7, [r1]
   300fc:	cmp	r7, #0
   30100:	beq	30124 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   30104:	add	r7, r0, r7
   30108:	cmp	r3, #0
   3010c:	str	r7, [r1]
   30110:	beq	300e4 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   30114:	ldrb	r7, [r6]
   30118:	cmp	r7, #0
   3011c:	bne	300e4 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   30120:	b	301a0 <flatcc_builder_create_offset_vector_direct@@Base+0x188>
   30124:	cmp	r3, #0
   30128:	beq	301c0 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   3012c:	ldrb	r7, [r6]
   30130:	cmp	r7, #0
   30134:	beq	300e4 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   30138:	ldr	r0, [pc, #240]	; 30230 <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   3013c:	ldr	r1, [pc, #240]	; 30234 <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   30140:	ldr	r3, [pc, #240]	; 30238 <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   30144:	movw	r2, #1461	; 0x5b5
   30148:	add	r0, pc, r0
   3014c:	add	r1, pc, r1
   30150:	add	r3, pc, r3
   30154:	bl	14f38 <__assert_fail@plt>
   30158:	ldr	ip, [r8, #136]	; 0x88
   3015c:	cmp	r5, #0
   30160:	ble	301e0 <flatcc_builder_create_offset_vector_direct@@Base+0x1c8>
   30164:	ldr	r0, [r8, #36]	; 0x24
   30168:	ldr	r7, [r8, #44]	; 0x2c
   3016c:	add	r1, sp, #4
   30170:	sub	r6, ip, r5
   30174:	mov	r2, r4
   30178:	str	r5, [sp]
   3017c:	add	r1, r1, #8
   30180:	mov	r3, r6
   30184:	blx	r7
   30188:	cmp	r0, #0
   3018c:	bne	30200 <flatcc_builder_create_offset_vector_direct@@Base+0x1e8>
   30190:	str	r6, [r8, #136]	; 0x88
   30194:	mov	r0, r6
   30198:	sub	sp, fp, #24
   3019c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   301a0:	ldr	r0, [pc, #124]	; 30224 <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   301a4:	ldr	r1, [pc, #124]	; 30228 <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   301a8:	ldr	r3, [pc, #124]	; 3022c <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   301ac:	movw	r2, #1457	; 0x5b1
   301b0:	add	r0, pc, r0
   301b4:	add	r1, pc, r1
   301b8:	add	r3, pc, r3
   301bc:	bl	14f38 <__assert_fail@plt>
   301c0:	ldr	r0, [pc, #116]	; 3023c <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   301c4:	ldr	r1, [pc, #116]	; 30240 <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   301c8:	ldr	r3, [pc, #116]	; 30244 <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   301cc:	movw	r2, #1463	; 0x5b7
   301d0:	add	r0, pc, r0
   301d4:	add	r1, pc, r1
   301d8:	add	r3, pc, r3
   301dc:	bl	14f38 <__assert_fail@plt>
   301e0:	ldr	r0, [pc, #96]	; 30248 <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   301e4:	ldr	r1, [pc, #96]	; 3024c <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   301e8:	ldr	r3, [pc, #96]	; 30250 <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   301ec:	movw	r2, #647	; 0x287
   301f0:	add	r0, pc, r0
   301f4:	add	r1, pc, r1
   301f8:	add	r3, pc, r3
   301fc:	bl	14f38 <__assert_fail@plt>
   30200:	ldr	r0, [pc, #76]	; 30254 <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   30204:	ldr	r1, [pc, #76]	; 30258 <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   30208:	ldr	r3, [pc, #76]	; 3025c <flatcc_builder_create_offset_vector_direct@@Base+0x244>
   3020c:	movw	r2, #651	; 0x28b
   30210:	add	r0, pc, r0
   30214:	add	r1, pc, r1
   30218:	add	r3, pc, r3
   3021c:	bl	14f38 <__assert_fail@plt>
   30220:	andeq	fp, r2, r8, lsr #31
   30224:	andeq	r9, r1, r3, lsr #19
   30228:	andeq	r8, r1, lr, ror #15
   3022c:	andeq	r9, r1, r9, lsr #19
   30230:	muleq	r1, ip, sl
   30234:	andeq	r8, r1, r6, asr r8
   30238:	andeq	r9, r1, r1, lsl sl
   3023c:	andeq	r9, r1, pc, lsl #19
   30240:	andeq	r8, r1, lr, asr #15
   30244:	andeq	r9, r1, r9, lsl #19
   30248:	andeq	r9, r1, pc, ror #18
   3024c:	andeq	r8, r1, lr, lsr #15
   30250:	andeq	r9, r1, r6, lsr #16
   30254:	andeq	r9, r1, pc, asr #18
   30258:	andeq	r8, r1, lr, lsl #15
   3025c:	andeq	r9, r1, r6, lsl #16

00030260 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   30260:	push	{r4, r5, fp, lr}
   30264:	add	fp, sp, #8
   30268:	mov	r4, r0
   3026c:	ldr	r0, [r0, #32]
   30270:	mov	r3, r1
   30274:	ldrh	r1, [r0, #14]
   30278:	cmp	r1, #5
   3027c:	bne	30318 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   30280:	ldr	r2, [r0, #20]
   30284:	ldr	r1, [r4, #16]
   30288:	mov	r0, r4
   3028c:	bl	30020 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30290:	mov	r5, r0
   30294:	cmp	r0, #0
   30298:	beq	30310 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   3029c:	ldr	r0, [r4, #16]
   302a0:	ldr	r2, [r4, #20]
   302a4:	mov	r1, #0
   302a8:	bl	14ee4 <memset@plt>
   302ac:	ldr	r0, [r4, #32]
   302b0:	ldr	r1, [r4, #60]	; 0x3c
   302b4:	ldr	ip, [r4, #64]	; 0x40
   302b8:	ldr	r3, [r0, #8]
   302bc:	str	r3, [r4, #20]
   302c0:	ldr	r3, [r0]
   302c4:	str	r3, [r4, #28]
   302c8:	add	r1, r1, r3
   302cc:	ldr	r2, [r0, #4]
   302d0:	str	r1, [r4, #16]
   302d4:	sub	r1, ip, r3
   302d8:	cmp	r1, r2
   302dc:	movhi	r1, r2
   302e0:	str	r1, [r4, #24]
   302e4:	ldrh	r1, [r4, #130]	; 0x82
   302e8:	ldrh	r2, [r4, #128]	; 0x80
   302ec:	cmp	r2, r1
   302f0:	strhcc	r1, [r4, #128]	; 0x80
   302f4:	ldrh	r1, [r0, #12]
   302f8:	sub	r0, r0, #36	; 0x24
   302fc:	str	r0, [r4, #32]
   30300:	strh	r1, [r4, #130]	; 0x82
   30304:	ldr	r0, [r4, #156]	; 0x9c
   30308:	sub	r0, r0, #1
   3030c:	str	r0, [r4, #156]	; 0x9c
   30310:	mov	r0, r5
   30314:	pop	{r4, r5, fp, pc}
   30318:	ldr	r0, [pc, #24]	; 30338 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   3031c:	ldr	r1, [pc, #24]	; 3033c <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   30320:	ldr	r3, [pc, #24]	; 30340 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   30324:	movw	r2, #1493	; 0x5d5
   30328:	add	r0, pc, r0
   3032c:	add	r1, pc, r1
   30330:	add	r3, pc, r3
   30334:	bl	14f38 <__assert_fail@plt>
   30338:	andeq	r8, r1, sp, lsr #21
   3033c:	andeq	r8, r1, r6, ror r6
   30340:	andeq	r9, r1, lr, lsl r1

00030344 <flatcc_builder_offset_vector_edit@@Base>:
   30344:	ldr	r0, [r0, #16]
   30348:	bx	lr

0003034c <flatcc_builder_offset_vector_count@@Base>:
   3034c:	ldr	r0, [r0, #32]
   30350:	ldr	r0, [r0, #20]
   30354:	bx	lr

00030358 <flatcc_builder_table_add_union@@Base>:
   30358:	push	{r4, r5, r6, r7, fp, lr}
   3035c:	add	fp, sp, #16
   30360:	mov	r5, r0
   30364:	ldr	r0, [r0, #32]
   30368:	ldrh	r0, [r0, #14]
   3036c:	cmp	r0, #3
   30370:	bne	303f8 <flatcc_builder_table_add_union@@Base+0xa0>
   30374:	mov	r7, r3
   30378:	mov	r4, r2
   3037c:	mov	r6, r1
   30380:	cmp	r3, #0
   30384:	beq	30394 <flatcc_builder_table_add_union@@Base+0x3c>
   30388:	uxtb	r0, r4
   3038c:	cmp	r0, #0
   30390:	beq	30418 <flatcc_builder_table_add_union@@Base+0xc0>
   30394:	cmp	r7, #0
   30398:	beq	303b4 <flatcc_builder_table_add_union@@Base+0x5c>
   3039c:	mov	r0, r5
   303a0:	mov	r1, r6
   303a4:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   303a8:	cmp	r0, #0
   303ac:	beq	30438 <flatcc_builder_table_add_union@@Base+0xe0>
   303b0:	str	r7, [r0]
   303b4:	sub	r1, r6, #1
   303b8:	mov	r0, r5
   303bc:	mov	r2, #1
   303c0:	mov	r3, #1
   303c4:	bl	3063c <flatcc_builder_table_add@@Base>
   303c8:	cmp	r0, #0
   303cc:	strbne	r4, [r0]
   303d0:	movne	r0, #0
   303d4:	popne	{r4, r5, r6, r7, fp, pc}
   303d8:	ldr	r0, [pc, #156]	; 3047c <flatcc_builder_table_add_union@@Base+0x124>
   303dc:	ldr	r1, [pc, #156]	; 30480 <flatcc_builder_table_add_union@@Base+0x128>
   303e0:	ldr	r3, [pc, #156]	; 30484 <flatcc_builder_table_add_union@@Base+0x12c>
   303e4:	movw	r2, #1526	; 0x5f6
   303e8:	add	r0, pc, r0
   303ec:	add	r1, pc, r1
   303f0:	add	r3, pc, r3
   303f4:	bl	14f38 <__assert_fail@plt>
   303f8:	ldr	r0, [pc, #88]	; 30458 <flatcc_builder_table_add_union@@Base+0x100>
   303fc:	ldr	r1, [pc, #88]	; 3045c <flatcc_builder_table_add_union@@Base+0x104>
   30400:	ldr	r3, [pc, #88]	; 30460 <flatcc_builder_table_add_union@@Base+0x108>
   30404:	movw	r2, #1518	; 0x5ee
   30408:	add	r0, pc, r0
   3040c:	add	r1, pc, r1
   30410:	add	r3, pc, r3
   30414:	bl	14f38 <__assert_fail@plt>
   30418:	ldr	r0, [pc, #68]	; 30464 <flatcc_builder_table_add_union@@Base+0x10c>
   3041c:	ldr	r1, [pc, #68]	; 30468 <flatcc_builder_table_add_union@@Base+0x110>
   30420:	ldr	r3, [pc, #68]	; 3046c <flatcc_builder_table_add_union@@Base+0x114>
   30424:	movw	r2, #1519	; 0x5ef
   30428:	add	r0, pc, r0
   3042c:	add	r1, pc, r1
   30430:	add	r3, pc, r3
   30434:	bl	14f38 <__assert_fail@plt>
   30438:	ldr	r0, [pc, #48]	; 30470 <flatcc_builder_table_add_union@@Base+0x118>
   3043c:	ldr	r1, [pc, #48]	; 30474 <flatcc_builder_table_add_union@@Base+0x11c>
   30440:	ldr	r3, [pc, #48]	; 30478 <flatcc_builder_table_add_union@@Base+0x120>
   30444:	movw	r2, #1522	; 0x5f2
   30448:	add	r0, pc, r0
   3044c:	add	r1, pc, r1
   30450:	add	r3, pc, r3
   30454:	bl	14f38 <__assert_fail@plt>
   30458:	andeq	r8, r1, r6, asr #27
   3045c:	muleq	r1, r6, r5
   30460:	strheq	r9, [r1], -r0
   30464:	strdeq	r9, [r1], -r0
   30468:	andeq	r8, r1, r6, ror r5
   3046c:	muleq	r1, r0, r0
   30470:	strdeq	r9, [r1], -r2
   30474:	andeq	r8, r1, r6, asr r5
   30478:	andeq	r9, r1, r0, ror r0
   3047c:	andeq	r9, r1, ip, asr r1
   30480:			; <UNDEFINED> instruction: 0x000185b6
   30484:	ldrdeq	r9, [r1], -r0

00030488 <flatcc_builder_table_add_offset@@Base>:
   30488:	push	{r4, r5, r6, r7, fp, lr}
   3048c:	add	fp, sp, #16
   30490:	sub	sp, sp, #8
   30494:	mov	r4, r0
   30498:	ldr	r0, [r0, #32]
   3049c:	ldrh	r0, [r0, #14]
   304a0:	cmp	r0, #3
   304a4:	bne	305b8 <flatcc_builder_table_add_offset@@Base+0x130>
   304a8:	movw	r0, #32765	; 0x7ffd
   304ac:	mov	r5, r1
   304b0:	cmp	r1, r0
   304b4:	bcs	305d8 <flatcc_builder_table_add_offset@@Base+0x150>
   304b8:	ldr	r0, [r4, #4]
   304bc:	add	r1, r0, r5, lsl #1
   304c0:	ldrh	r1, [r1]
   304c4:	cmp	r1, #0
   304c8:	bne	305f8 <flatcc_builder_table_add_offset@@Base+0x170>
   304cc:	ldr	r2, [r4, #20]
   304d0:	ldr	r1, [r4, #12]
   304d4:	ldr	r3, [r4, #24]
   304d8:	add	r2, r2, #3
   304dc:	eor	r1, r1, r5
   304e0:	bic	r6, r2, #3
   304e4:	movw	r2, #31153	; 0x79b1
   304e8:	movt	r2, #40503	; 0x9e37
   304ec:	add	r7, r6, #4
   304f0:	cmp	r7, r3
   304f4:	str	r7, [r4, #20]
   304f8:	mul	r1, r1, r2
   304fc:	eor	r1, r1, #4
   30500:	mul	r1, r1, r2
   30504:	str	r1, [r4, #12]
   30508:	bls	3057c <flatcc_builder_table_add_offset@@Base+0xf4>
   3050c:	ldr	r1, [r4, #28]
   30510:	ldr	r0, [r4, #40]	; 0x28
   30514:	ldr	ip, [r4, #48]	; 0x30
   30518:	mov	r2, #1
   3051c:	mov	r3, #1
   30520:	str	r2, [sp]
   30524:	add	r2, r1, r7
   30528:	add	r1, r4, #60	; 0x3c
   3052c:	blx	ip
   30530:	mov	r1, r0
   30534:	mov	r0, #0
   30538:	cmp	r1, #0
   3053c:	beq	30548 <flatcc_builder_table_add_offset@@Base+0xc0>
   30540:	sub	sp, fp, #16
   30544:	pop	{r4, r5, r6, r7, fp, pc}
   30548:	ldr	r0, [r4, #28]
   3054c:	ldr	r2, [r4, #60]	; 0x3c
   30550:	ldr	r3, [r4, #64]	; 0x40
   30554:	ldr	r1, [r4, #32]
   30558:	add	r2, r2, r0
   3055c:	sub	r0, r3, r0
   30560:	str	r2, [r4, #16]
   30564:	movw	r2, #65532	; 0xfffc
   30568:	cmp	r0, r2
   3056c:	movcs	r0, r2
   30570:	str	r0, [r4, #24]
   30574:	str	r2, [r1, #4]
   30578:	ldr	r0, [r4, #4]
   3057c:	uxth	r1, r5
   30580:	add	r0, r0, r1, lsl #1
   30584:	strh	r7, [r0]
   30588:	ldrh	r0, [r4, #8]
   3058c:	cmp	r0, r1
   30590:	addls	r0, r5, #1
   30594:	strhls	r0, [r4, #8]
   30598:	ldr	r0, [r4]
   3059c:	add	r1, r0, #2
   305a0:	str	r1, [r4]
   305a4:	strh	r6, [r0]
   305a8:	ldr	r0, [r4, #16]
   305ac:	add	r0, r0, r6
   305b0:	sub	sp, fp, #16
   305b4:	pop	{r4, r5, r6, r7, fp, pc}
   305b8:	ldr	r0, [pc, #88]	; 30618 <flatcc_builder_table_add_offset@@Base+0x190>
   305bc:	ldr	r1, [pc, #88]	; 3061c <flatcc_builder_table_add_offset@@Base+0x194>
   305c0:	ldr	r3, [pc, #88]	; 30620 <flatcc_builder_table_add_offset@@Base+0x198>
   305c4:	movw	r2, #1811	; 0x713
   305c8:	add	r0, pc, r0
   305cc:	add	r1, pc, r1
   305d0:	add	r3, pc, r3
   305d4:	bl	14f38 <__assert_fail@plt>
   305d8:	ldr	r0, [pc, #68]	; 30624 <flatcc_builder_table_add_offset@@Base+0x19c>
   305dc:	ldr	r1, [pc, #68]	; 30628 <flatcc_builder_table_add_offset@@Base+0x1a0>
   305e0:	ldr	r3, [pc, #68]	; 3062c <flatcc_builder_table_add_offset@@Base+0x1a4>
   305e4:	movw	r2, #1812	; 0x714
   305e8:	add	r0, pc, r0
   305ec:	add	r1, pc, r1
   305f0:	add	r3, pc, r3
   305f4:	bl	14f38 <__assert_fail@plt>
   305f8:	ldr	r0, [pc, #48]	; 30630 <flatcc_builder_table_add_offset@@Base+0x1a8>
   305fc:	ldr	r1, [pc, #48]	; 30634 <flatcc_builder_table_add_offset@@Base+0x1ac>
   30600:	ldr	r3, [pc, #48]	; 30638 <flatcc_builder_table_add_offset@@Base+0x1b0>
   30604:	movw	r2, #1819	; 0x71b
   30608:	add	r0, pc, r0
   3060c:	add	r1, pc, r1
   30610:	add	r3, pc, r3
   30614:	bl	14f38 <__assert_fail@plt>
   30618:	andeq	r8, r1, r6, lsl #24
   3061c:	ldrdeq	r8, [r1], -r6
   30620:	strdeq	r9, [r1], -r2
   30624:	andeq	r9, r1, sl, asr r2
   30628:			; <UNDEFINED> instruction: 0x000183b6
   3062c:	ldrdeq	r9, [r1], -r2
   30630:	andeq	r9, r1, r7, asr r5
   30634:	muleq	r1, r6, r3
   30638:			; <UNDEFINED> instruction: 0x000192b2

0003063c <flatcc_builder_table_add@@Base>:
   3063c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30640:	add	fp, sp, #24
   30644:	sub	sp, sp, #8
   30648:	mov	r4, r0
   3064c:	ldr	r0, [r0, #32]
   30650:	ldrh	r0, [r0, #14]
   30654:	cmp	r0, #3
   30658:	bne	30778 <flatcc_builder_table_add@@Base+0x13c>
   3065c:	movw	r0, #32765	; 0x7ffd
   30660:	mov	r8, r1
   30664:	cmp	r1, r0
   30668:	bcs	30798 <flatcc_builder_table_add@@Base+0x15c>
   3066c:	ldrh	r0, [r4, #130]	; 0x82
   30670:	cmp	r0, r3
   30674:	strhcc	r3, [r4, #130]	; 0x82
   30678:	ldr	r0, [r4, #4]
   3067c:	add	r1, r0, r8, lsl #1
   30680:	ldrh	r1, [r1]
   30684:	cmp	r1, #0
   30688:	bne	307b8 <flatcc_builder_table_add@@Base+0x17c>
   3068c:	ldr	r1, [r4, #12]
   30690:	movw	r7, #31153	; 0x79b1
   30694:	ldr	r6, [r4, #20]
   30698:	ldr	r5, [r4, #24]
   3069c:	movt	r7, #40503	; 0x9e37
   306a0:	eor	r1, r1, r8
   306a4:	mul	r1, r1, r7
   306a8:	eor	r1, r1, r2
   306ac:	mul	r1, r1, r7
   306b0:	str	r1, [r4, #12]
   306b4:	add	r1, r3, r6
   306b8:	rsb	r3, r3, #0
   306bc:	sub	r1, r1, #1
   306c0:	and	r6, r1, r3
   306c4:	add	r1, r6, r2
   306c8:	cmp	r1, r5
   306cc:	str	r1, [r4, #20]
   306d0:	bcc	30748 <flatcc_builder_table_add@@Base+0x10c>
   306d4:	ldr	r2, [r4, #28]
   306d8:	ldr	r0, [r4, #40]	; 0x28
   306dc:	ldr	r7, [r4, #48]	; 0x30
   306e0:	mov	r3, #1
   306e4:	str	r3, [sp]
   306e8:	mov	r3, #1
   306ec:	add	r1, r1, r2
   306f0:	add	r2, r1, #1
   306f4:	add	r1, r4, #60	; 0x3c
   306f8:	blx	r7
   306fc:	mov	r1, r0
   30700:	mov	r0, #0
   30704:	cmp	r1, #0
   30708:	beq	30714 <flatcc_builder_table_add@@Base+0xd8>
   3070c:	sub	sp, fp, #24
   30710:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30714:	ldr	r0, [r4, #28]
   30718:	ldr	r2, [r4, #60]	; 0x3c
   3071c:	ldr	r3, [r4, #64]	; 0x40
   30720:	ldr	r1, [r4, #32]
   30724:	add	r2, r2, r0
   30728:	sub	r0, r3, r0
   3072c:	str	r2, [r4, #16]
   30730:	movw	r2, #65532	; 0xfffc
   30734:	cmp	r0, r2
   30738:	movcs	r0, r2
   3073c:	str	r0, [r4, #24]
   30740:	str	r2, [r1, #4]
   30744:	ldr	r0, [r4, #4]
   30748:	uxth	r1, r8
   3074c:	add	r2, r6, #4
   30750:	add	r0, r0, r1, lsl #1
   30754:	strh	r2, [r0]
   30758:	ldrh	r0, [r4, #8]
   3075c:	cmp	r0, r1
   30760:	addls	r0, r8, #1
   30764:	strhls	r0, [r4, #8]
   30768:	ldr	r0, [r4, #16]
   3076c:	add	r0, r0, r6
   30770:	sub	sp, fp, #24
   30774:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   30778:	ldr	r0, [pc, #88]	; 307d8 <flatcc_builder_table_add@@Base+0x19c>
   3077c:	ldr	r1, [pc, #88]	; 307dc <flatcc_builder_table_add@@Base+0x1a0>
   30780:	ldr	r3, [pc, #88]	; 307e0 <flatcc_builder_table_add@@Base+0x1a4>
   30784:	movw	r2, #1773	; 0x6ed
   30788:	add	r0, pc, r0
   3078c:	add	r1, pc, r1
   30790:	add	r3, pc, r3
   30794:	bl	14f38 <__assert_fail@plt>
   30798:	ldr	r0, [pc, #68]	; 307e4 <flatcc_builder_table_add@@Base+0x1a8>
   3079c:	ldr	r1, [pc, #68]	; 307e8 <flatcc_builder_table_add@@Base+0x1ac>
   307a0:	ldr	r3, [pc, #68]	; 307ec <flatcc_builder_table_add@@Base+0x1b0>
   307a4:	movw	r2, #1774	; 0x6ee
   307a8:	add	r0, pc, r0
   307ac:	add	r1, pc, r1
   307b0:	add	r3, pc, r3
   307b4:	bl	14f38 <__assert_fail@plt>
   307b8:	ldr	r0, [pc, #48]	; 307f0 <flatcc_builder_table_add@@Base+0x1b4>
   307bc:	ldr	r1, [pc, #48]	; 307f4 <flatcc_builder_table_add@@Base+0x1b8>
   307c0:	ldr	r3, [pc, #48]	; 307f8 <flatcc_builder_table_add@@Base+0x1bc>
   307c4:	movw	r2, #1784	; 0x6f8
   307c8:	add	r0, pc, r0
   307cc:	add	r1, pc, r1
   307d0:	add	r3, pc, r3
   307d4:	bl	14f38 <__assert_fail@plt>
   307d8:	andeq	r8, r1, r6, asr #20
   307dc:	andeq	r8, r1, r6, lsl r2
   307e0:	andeq	r9, r1, r8, rrx
   307e4:	muleq	r1, sl, r0
   307e8:	strdeq	r8, [r1], -r6
   307ec:	andeq	r9, r1, r8, asr #32
   307f0:	muleq	r1, r7, r3
   307f4:	ldrdeq	r8, [r1], -r6
   307f8:	andeq	r9, r1, r8, lsr #32

000307fc <flatcc_builder_table_add_union_vector@@Base>:
   307fc:	push	{r4, r5, r6, r7, fp, lr}
   30800:	add	fp, sp, #16
   30804:	mov	r6, r0
   30808:	ldr	r0, [r0, #32]
   3080c:	ldrh	r0, [r0, #14]
   30810:	cmp	r0, #3
   30814:	bne	30880 <flatcc_builder_table_add_union_vector@@Base+0x84>
   30818:	mov	r5, r1
   3081c:	clz	r1, r3
   30820:	cmp	r2, #0
   30824:	mov	r0, r2
   30828:	mov	r4, r3
   3082c:	mov	r7, r2
   30830:	movwne	r0, #1
   30834:	lsr	r1, r1, #5
   30838:	teq	r1, r0
   3083c:	beq	308a0 <flatcc_builder_table_add_union_vector@@Base+0xa4>
   30840:	cmp	r7, #0
   30844:	beq	30878 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   30848:	sub	r1, r5, #1
   3084c:	mov	r0, r6
   30850:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   30854:	cmp	r0, #0
   30858:	beq	308c0 <flatcc_builder_table_add_union_vector@@Base+0xc4>
   3085c:	str	r7, [r0]
   30860:	mov	r0, r6
   30864:	mov	r1, r5
   30868:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   3086c:	cmp	r0, #0
   30870:	beq	308e0 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   30874:	str	r4, [r0]
   30878:	mov	r0, #0
   3087c:	pop	{r4, r5, r6, r7, fp, pc}
   30880:	ldr	r0, [pc, #120]	; 30900 <flatcc_builder_table_add_union_vector@@Base+0x104>
   30884:	ldr	r1, [pc, #120]	; 30904 <flatcc_builder_table_add_union_vector@@Base+0x108>
   30888:	ldr	r3, [pc, #120]	; 30908 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   3088c:	mov	r2, #1536	; 0x600
   30890:	add	r0, pc, r0
   30894:	add	r1, pc, r1
   30898:	add	r3, pc, r3
   3089c:	bl	14f38 <__assert_fail@plt>
   308a0:	ldr	r0, [pc, #100]	; 3090c <flatcc_builder_table_add_union_vector@@Base+0x110>
   308a4:	ldr	r1, [pc, #100]	; 30910 <flatcc_builder_table_add_union_vector@@Base+0x114>
   308a8:	ldr	r3, [pc, #100]	; 30914 <flatcc_builder_table_add_union_vector@@Base+0x118>
   308ac:	movw	r2, #1537	; 0x601
   308b0:	add	r0, pc, r0
   308b4:	add	r1, pc, r1
   308b8:	add	r3, pc, r3
   308bc:	bl	14f38 <__assert_fail@plt>
   308c0:	ldr	r0, [pc, #80]	; 30918 <flatcc_builder_table_add_union_vector@@Base+0x11c>
   308c4:	ldr	r1, [pc, #80]	; 3091c <flatcc_builder_table_add_union_vector@@Base+0x120>
   308c8:	ldr	r3, [pc, #80]	; 30920 <flatcc_builder_table_add_union_vector@@Base+0x124>
   308cc:	movw	r2, #1540	; 0x604
   308d0:	add	r0, pc, r0
   308d4:	add	r1, pc, r1
   308d8:	add	r3, pc, r3
   308dc:	bl	14f38 <__assert_fail@plt>
   308e0:	ldr	r0, [pc, #60]	; 30924 <flatcc_builder_table_add_union_vector@@Base+0x128>
   308e4:	ldr	r1, [pc, #60]	; 30928 <flatcc_builder_table_add_union_vector@@Base+0x12c>
   308e8:	ldr	r3, [pc, #60]	; 3092c <flatcc_builder_table_add_union_vector@@Base+0x130>
   308ec:	movw	r2, #1544	; 0x608
   308f0:	add	r0, pc, r0
   308f4:	add	r1, pc, r1
   308f8:	add	r3, pc, r3
   308fc:	bl	14f38 <__assert_fail@plt>
   30900:	andeq	r8, r1, lr, lsr r9
   30904:	andeq	r8, r1, lr, lsl #2
   30908:			; <UNDEFINED> instruction: 0x00018cb8
   3090c:	andeq	r8, r1, r3, lsl #26
   30910:	andeq	r8, r1, lr, ror #1
   30914:	muleq	r1, r8, ip
   30918:	andeq	r8, r1, sl, ror #24
   3091c:	andeq	r8, r1, lr, asr #1
   30920:	andeq	r8, r1, r8, ror ip
   30924:	andeq	r8, r1, sl, asr #24
   30928:	andeq	r8, r1, lr, lsr #1
   3092c:	andeq	r8, r1, r8, asr ip

00030930 <flatcc_builder_create_union_vector@@Base>:
   30930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30934:	add	fp, sp, #28
   30938:	sub	sp, sp, #12
   3093c:	mov	r6, #0
   30940:	mov	r4, r1
   30944:	mov	r8, r0
   30948:	mov	sl, r3
   3094c:	mov	r9, r2
   30950:	mov	r7, #4
   30954:	str	r6, [r0]
   30958:	str	r6, [r0, #4]
   3095c:	mov	r0, r1
   30960:	mov	r1, #4
   30964:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   30968:	cmp	r0, #0
   3096c:	beq	30978 <flatcc_builder_create_union_vector@@Base+0x48>
   30970:	sub	sp, fp, #28
   30974:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30978:	ldr	r0, [r4, #32]
   3097c:	mov	r1, #5
   30980:	str	r7, [r0, #16]
   30984:	ldr	r0, [r4, #32]
   30988:	str	r6, [r0, #20]
   3098c:	ldr	r0, [r4, #32]
   30990:	strh	r1, [r0, #14]
   30994:	ldr	r1, [r4, #28]
   30998:	ldr	r2, [r4, #60]	; 0x3c
   3099c:	ldr	r3, [r4, #64]	; 0x40
   309a0:	add	r2, r2, r1
   309a4:	sub	r1, r3, r1
   309a8:	str	r2, [r4, #16]
   309ac:	mvn	r2, #3
   309b0:	cmn	r1, #4
   309b4:	movcs	r1, r2
   309b8:	str	r1, [r4, #24]
   309bc:	str	r2, [r0, #4]
   309c0:	ldr	r1, [r0, #20]
   309c4:	adds	r1, r1, sl
   309c8:	cmpcc	r1, #1073741824	; 0x40000000
   309cc:	bcc	309f0 <flatcc_builder_create_union_vector@@Base+0xc0>
   309d0:	ldr	r0, [pc, #644]	; 30c5c <flatcc_builder_create_union_vector@@Base+0x32c>
   309d4:	ldr	r1, [pc, #644]	; 30c60 <flatcc_builder_create_union_vector@@Base+0x330>
   309d8:	ldr	r3, [pc, #644]	; 30c64 <flatcc_builder_create_union_vector@@Base+0x334>
   309dc:	mov	r2, #892	; 0x37c
   309e0:	add	r0, pc, r0
   309e4:	add	r1, pc, r1
   309e8:	add	r3, pc, r3
   309ec:	bl	14f38 <__assert_fail@plt>
   309f0:	str	r1, [r0, #20]
   309f4:	ldr	r7, [r4, #20]
   309f8:	ldr	r0, [r4, #24]
   309fc:	add	r1, r7, sl, lsl #2
   30a00:	cmp	r1, r0
   30a04:	str	r1, [r4, #20]
   30a08:	bcs	30a1c <flatcc_builder_create_union_vector@@Base+0xec>
   30a0c:	ldr	r1, [r4, #16]
   30a10:	adds	r2, r1, r7
   30a14:	bne	30a84 <flatcc_builder_create_union_vector@@Base+0x154>
   30a18:	b	30970 <flatcc_builder_create_union_vector@@Base+0x40>
   30a1c:	ldr	r2, [r4, #28]
   30a20:	ldr	r0, [r4, #40]	; 0x28
   30a24:	ldr	r6, [r4, #48]	; 0x30
   30a28:	mov	r3, #1
   30a2c:	str	r3, [sp]
   30a30:	mov	r3, #1
   30a34:	add	r1, r1, r2
   30a38:	add	r2, r1, #1
   30a3c:	add	r1, r4, #60	; 0x3c
   30a40:	blx	r6
   30a44:	cmp	r0, #0
   30a48:	bne	30970 <flatcc_builder_create_union_vector@@Base+0x40>
   30a4c:	ldr	r0, [r4, #28]
   30a50:	ldr	r1, [r4, #60]	; 0x3c
   30a54:	ldr	r3, [r4, #64]	; 0x40
   30a58:	ldr	r2, [r4, #32]
   30a5c:	add	r1, r1, r0
   30a60:	sub	r0, r3, r0
   30a64:	mvn	r3, #3
   30a68:	cmn	r0, #4
   30a6c:	str	r1, [r4, #16]
   30a70:	movcs	r0, r3
   30a74:	str	r0, [r4, #24]
   30a78:	str	r3, [r2, #4]
   30a7c:	adds	r2, r1, r7
   30a80:	beq	30970 <flatcc_builder_create_union_vector@@Base+0x40>
   30a84:	ldr	r7, [r4, #20]
   30a88:	add	r2, r7, sl
   30a8c:	cmp	r2, r0
   30a90:	str	r2, [r4, #20]
   30a94:	bcc	30af8 <flatcc_builder_create_union_vector@@Base+0x1c8>
   30a98:	ldr	r1, [r4, #28]
   30a9c:	ldr	r0, [r4, #40]	; 0x28
   30aa0:	ldr	r6, [r4, #48]	; 0x30
   30aa4:	mov	r3, #1
   30aa8:	str	r3, [sp]
   30aac:	mov	r3, #1
   30ab0:	add	r1, r2, r1
   30ab4:	add	r2, r1, #1
   30ab8:	add	r1, r4, #60	; 0x3c
   30abc:	blx	r6
   30ac0:	cmp	r0, #0
   30ac4:	bne	30970 <flatcc_builder_create_union_vector@@Base+0x40>
   30ac8:	ldr	r0, [r4, #28]
   30acc:	ldr	r1, [r4, #60]	; 0x3c
   30ad0:	ldr	r3, [r4, #64]	; 0x40
   30ad4:	ldr	r2, [r4, #32]
   30ad8:	add	r1, r1, r0
   30adc:	sub	r0, r3, r0
   30ae0:	mvn	r3, #3
   30ae4:	cmn	r0, #4
   30ae8:	str	r1, [r4, #16]
   30aec:	movcs	r0, r3
   30af0:	str	r0, [r4, #24]
   30af4:	str	r3, [r2, #4]
   30af8:	adds	r5, r1, r7
   30afc:	beq	30970 <flatcc_builder_create_union_vector@@Base+0x40>
   30b00:	cmp	sl, #0
   30b04:	beq	30b8c <flatcc_builder_create_union_vector@@Base+0x25c>
   30b08:	and	ip, sl, #1
   30b0c:	mov	r0, #0
   30b10:	cmp	sl, #1
   30b14:	str	r5, [sp, #8]
   30b18:	beq	30b70 <flatcc_builder_create_union_vector@@Base+0x240>
   30b1c:	ldr	r0, [sp, #8]
   30b20:	sub	lr, sl, ip
   30b24:	add	r2, r1, #4
   30b28:	add	r6, r9, #8
   30b2c:	add	r7, r0, #1
   30b30:	mov	r0, #0
   30b34:	ldrb	r3, [r6, #-8]
   30b38:	add	r5, r7, r0
   30b3c:	strb	r3, [r5, #-1]
   30b40:	add	r3, r9, r0, lsl #3
   30b44:	ldr	r5, [r3, #4]
   30b48:	str	r5, [r2, #-4]
   30b4c:	ldrb	r5, [r6]
   30b50:	add	r6, r6, #16
   30b54:	strb	r5, [r7, r0]
   30b58:	add	r0, r0, #2
   30b5c:	ldr	r3, [r3, #12]
   30b60:	cmp	lr, r0
   30b64:	str	r3, [r2]
   30b68:	add	r2, r2, #8
   30b6c:	bne	30b34 <flatcc_builder_create_union_vector@@Base+0x204>
   30b70:	ldr	r5, [sp, #8]
   30b74:	cmp	ip, #0
   30b78:	beq	30b8c <flatcc_builder_create_union_vector@@Base+0x25c>
   30b7c:	ldrb	r2, [r9, r0, lsl #3]!
   30b80:	strb	r2, [r5, r0]
   30b84:	ldr	r2, [r9, #4]
   30b88:	str	r2, [r1, r0, lsl #2]
   30b8c:	mov	r0, r4
   30b90:	mov	r2, sl
   30b94:	mov	r3, r5
   30b98:	bl	30020 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30b9c:	mov	r7, r0
   30ba0:	mov	r6, #0
   30ba4:	cmp	r0, #0
   30ba8:	beq	30bd4 <flatcc_builder_create_union_vector@@Base+0x2a4>
   30bac:	mvn	r0, #0
   30bb0:	mov	r1, #1
   30bb4:	mov	r2, sl
   30bb8:	mov	r3, #1
   30bbc:	str	r1, [sp]
   30bc0:	str	r0, [sp, #4]
   30bc4:	mov	r0, r4
   30bc8:	mov	r1, r5
   30bcc:	bl	2fd8c <flatcc_builder_create_vector@@Base>
   30bd0:	b	30bd8 <flatcc_builder_create_union_vector@@Base+0x2a8>
   30bd4:	mov	r0, #0
   30bd8:	orr	r1, r6, r7
   30bdc:	stm	r8, {r0, r1}
   30be0:	mov	r1, #0
   30be4:	ldr	r0, [r4, #16]
   30be8:	ldr	r2, [r4, #20]
   30bec:	bl	14ee4 <memset@plt>
   30bf0:	ldr	r0, [r4, #32]
   30bf4:	ldr	r1, [r4, #60]	; 0x3c
   30bf8:	ldr	r2, [r4, #64]	; 0x40
   30bfc:	ldr	r3, [r0, #8]
   30c00:	str	r3, [r4, #20]
   30c04:	ldr	r3, [r0]
   30c08:	str	r3, [r4, #28]
   30c0c:	add	r1, r1, r3
   30c10:	ldr	r7, [r0, #4]
   30c14:	str	r1, [r4, #16]
   30c18:	sub	r1, r2, r3
   30c1c:	cmp	r1, r7
   30c20:	movhi	r1, r7
   30c24:	str	r1, [r4, #24]
   30c28:	ldrh	r1, [r4, #130]	; 0x82
   30c2c:	ldrh	r2, [r4, #128]	; 0x80
   30c30:	cmp	r2, r1
   30c34:	strhcc	r1, [r4, #128]	; 0x80
   30c38:	ldrh	r1, [r0, #12]
   30c3c:	sub	r0, r0, #36	; 0x24
   30c40:	str	r0, [r4, #32]
   30c44:	strh	r1, [r4, #130]	; 0x82
   30c48:	ldr	r0, [r4, #156]	; 0x9c
   30c4c:	sub	r0, r0, #1
   30c50:	str	r0, [r4, #156]	; 0x9c
   30c54:	sub	sp, fp, #28
   30c58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30c5c:	andeq	r9, r1, r8, lsl #1
   30c60:			; <UNDEFINED> instruction: 0x00017fbe
   30c64:	muleq	r1, fp, r0

00030c68 <flatcc_builder_create_union_vector_direct@@Base>:
   30c68:	push	{r4, r5, r6, r7, fp, lr}
   30c6c:	add	fp, sp, #16
   30c70:	sub	sp, sp, #8
   30c74:	ldr	r7, [fp, #8]
   30c78:	mov	r5, r2
   30c7c:	mov	r4, r0
   30c80:	mov	r0, #0
   30c84:	mov	r6, r1
   30c88:	str	r0, [r4]
   30c8c:	str	r0, [r4, #4]
   30c90:	mov	r0, r1
   30c94:	mov	r1, r3
   30c98:	mov	r3, r5
   30c9c:	mov	r2, r7
   30ca0:	bl	30020 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30ca4:	cmp	r0, #0
   30ca8:	str	r0, [r4, #4]
   30cac:	beq	30cd8 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   30cb0:	mvn	r0, #0
   30cb4:	mov	r1, #1
   30cb8:	mov	r2, r7
   30cbc:	mov	r3, #1
   30cc0:	str	r1, [sp]
   30cc4:	str	r0, [sp, #4]
   30cc8:	mov	r0, r6
   30ccc:	mov	r1, r5
   30cd0:	bl	2fd8c <flatcc_builder_create_vector@@Base>
   30cd4:	str	r0, [r4]
   30cd8:	sub	sp, fp, #16
   30cdc:	pop	{r4, r5, r6, r7, fp, pc}

00030ce0 <flatcc_builder_start_union_vector@@Base>:
   30ce0:	push	{r4, sl, fp, lr}
   30ce4:	add	fp, sp, #8
   30ce8:	mov	r1, #4
   30cec:	mov	r4, r0
   30cf0:	bl	2dc84 <flatcc_builder_start_buffer@@Base+0xc0>
   30cf4:	mov	r1, r0
   30cf8:	mvn	r0, #0
   30cfc:	cmp	r1, #0
   30d00:	popne	{r4, sl, fp, pc}
   30d04:	ldr	r0, [r4, #32]
   30d08:	mov	r1, #8
   30d0c:	mov	r2, #7
   30d10:	str	r1, [r0, #16]
   30d14:	mov	r0, #0
   30d18:	ldr	r1, [r4, #32]
   30d1c:	str	r0, [r1, #20]
   30d20:	ldr	r1, [r4, #32]
   30d24:	strh	r2, [r1, #14]
   30d28:	ldr	r2, [r4, #28]
   30d2c:	ldr	r3, [r4, #60]	; 0x3c
   30d30:	ldr	ip, [r4, #64]	; 0x40
   30d34:	add	r3, r3, r2
   30d38:	sub	r2, ip, r2
   30d3c:	str	r3, [r4, #16]
   30d40:	mvn	r3, #3
   30d44:	cmn	r2, #4
   30d48:	movcs	r2, r3
   30d4c:	str	r2, [r4, #24]
   30d50:	str	r3, [r1, #4]
   30d54:	pop	{r4, sl, fp, pc}

00030d58 <flatcc_builder_end_union_vector@@Base>:
   30d58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30d5c:	add	fp, sp, #28
   30d60:	sub	sp, sp, #20
   30d64:	mov	r4, r0
   30d68:	mov	r0, #0
   30d6c:	mov	r8, r1
   30d70:	str	r0, [r4]
   30d74:	str	r0, [r4, #4]
   30d78:	ldr	r0, [r1, #32]
   30d7c:	ldrh	r1, [r0, #14]
   30d80:	cmp	r1, #7
   30d84:	bne	30f88 <flatcc_builder_end_union_vector@@Base+0x230>
   30d88:	ldr	r9, [r0, #20]
   30d8c:	ldr	r5, [r8, #20]
   30d90:	ldr	r2, [r8, #24]
   30d94:	add	r0, r9, r9, lsl #2
   30d98:	add	r1, r5, r0
   30d9c:	cmp	r1, r2
   30da0:	str	r1, [r8, #20]
   30da4:	bcs	30db8 <flatcc_builder_end_union_vector@@Base+0x60>
   30da8:	ldr	r0, [r8, #16]
   30dac:	adds	r1, r0, r5
   30db0:	bne	30e20 <flatcc_builder_end_union_vector@@Base+0xc8>
   30db4:	b	30f80 <flatcc_builder_end_union_vector@@Base+0x228>
   30db8:	ldr	r2, [r8, #28]
   30dbc:	ldr	r0, [r8, #40]	; 0x28
   30dc0:	ldr	r7, [r8, #48]	; 0x30
   30dc4:	mov	r3, #1
   30dc8:	str	r3, [sp]
   30dcc:	mov	r3, #1
   30dd0:	add	r1, r1, r2
   30dd4:	add	r2, r1, #1
   30dd8:	add	r1, r8, #60	; 0x3c
   30ddc:	blx	r7
   30de0:	cmp	r0, #0
   30de4:	bne	30f80 <flatcc_builder_end_union_vector@@Base+0x228>
   30de8:	ldr	r1, [r8, #28]
   30dec:	ldr	r0, [r8, #60]	; 0x3c
   30df0:	ldr	r3, [r8, #64]	; 0x40
   30df4:	ldr	r2, [r8, #32]
   30df8:	add	r0, r0, r1
   30dfc:	sub	r1, r3, r1
   30e00:	mvn	r3, #3
   30e04:	cmn	r1, #4
   30e08:	str	r0, [r8, #16]
   30e0c:	movcs	r1, r3
   30e10:	str	r1, [r8, #24]
   30e14:	str	r3, [r2, #4]
   30e18:	adds	r1, r0, r5
   30e1c:	beq	30f80 <flatcc_builder_end_union_vector@@Base+0x228>
   30e20:	add	sl, r1, r9, lsl #2
   30e24:	cmp	r9, #0
   30e28:	beq	30eb8 <flatcc_builder_end_union_vector@@Base+0x160>
   30e2c:	and	r2, r9, #1
   30e30:	cmp	r9, #1
   30e34:	str	r4, [sp, #12]
   30e38:	str	r2, [sp, #16]
   30e3c:	mov	r2, #0
   30e40:	beq	30e98 <flatcc_builder_end_union_vector@@Base+0x140>
   30e44:	ldr	r2, [sp, #16]
   30e48:	add	r5, r5, #4
   30e4c:	add	r6, r0, #8
   30e50:	sub	lr, r9, r2
   30e54:	mov	r2, #0
   30e58:	ldrb	r7, [r6, #-8]
   30e5c:	mov	r4, sl
   30e60:	add	r3, r0, r2, lsl #3
   30e64:	strb	r7, [r4, r2]!
   30e68:	add	r7, r0, r5
   30e6c:	add	r2, r2, #2
   30e70:	ldr	ip, [r3, #4]
   30e74:	cmp	lr, r2
   30e78:	str	ip, [r7, #-4]
   30e7c:	ldrb	r7, [r6]
   30e80:	add	r6, r6, #16
   30e84:	strb	r7, [r4, #1]
   30e88:	ldr	r3, [r3, #12]
   30e8c:	str	r3, [r0, r5]
   30e90:	add	r5, r5, #8
   30e94:	bne	30e58 <flatcc_builder_end_union_vector@@Base+0x100>
   30e98:	ldr	r3, [sp, #16]
   30e9c:	ldr	r4, [sp, #12]
   30ea0:	cmp	r3, #0
   30ea4:	beq	30eb8 <flatcc_builder_end_union_vector@@Base+0x160>
   30ea8:	ldrb	r3, [r0, r2, lsl #3]!
   30eac:	strb	r3, [sl, r2]
   30eb0:	ldr	r0, [r0, #4]
   30eb4:	str	r0, [r1, r2, lsl #2]
   30eb8:	mov	r0, r8
   30ebc:	mov	r2, r9
   30ec0:	mov	r3, sl
   30ec4:	bl	30020 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   30ec8:	mov	r5, r0
   30ecc:	mov	r6, #0
   30ed0:	cmp	r0, #0
   30ed4:	beq	30f00 <flatcc_builder_end_union_vector@@Base+0x1a8>
   30ed8:	mvn	r0, #0
   30edc:	mov	r1, #1
   30ee0:	mov	r2, r9
   30ee4:	mov	r3, #1
   30ee8:	str	r1, [sp]
   30eec:	str	r0, [sp, #4]
   30ef0:	mov	r0, r8
   30ef4:	mov	r1, sl
   30ef8:	bl	2fd8c <flatcc_builder_create_vector@@Base>
   30efc:	b	30f04 <flatcc_builder_end_union_vector@@Base+0x1ac>
   30f00:	mov	r0, #0
   30f04:	orr	r1, r6, r5
   30f08:	stm	r4, {r0, r1}
   30f0c:	mov	r1, #0
   30f10:	ldr	r0, [r8, #16]
   30f14:	ldr	r2, [r8, #20]
   30f18:	bl	14ee4 <memset@plt>
   30f1c:	ldr	r0, [r8, #32]
   30f20:	ldr	r1, [r8, #60]	; 0x3c
   30f24:	ldr	r2, [r8, #64]	; 0x40
   30f28:	ldr	r3, [r0, #8]
   30f2c:	str	r3, [r8, #20]
   30f30:	ldr	r3, [r0]
   30f34:	str	r3, [r8, #28]
   30f38:	add	r1, r1, r3
   30f3c:	ldr	r7, [r0, #4]
   30f40:	str	r1, [r8, #16]
   30f44:	sub	r1, r2, r3
   30f48:	cmp	r1, r7
   30f4c:	movhi	r1, r7
   30f50:	str	r1, [r8, #24]
   30f54:	ldrh	r1, [r8, #130]	; 0x82
   30f58:	ldrh	r2, [r8, #128]	; 0x80
   30f5c:	cmp	r2, r1
   30f60:	strhcc	r1, [r8, #128]	; 0x80
   30f64:	ldrh	r1, [r0, #12]
   30f68:	sub	r0, r0, #36	; 0x24
   30f6c:	str	r0, [r8, #32]
   30f70:	strh	r1, [r8, #130]	; 0x82
   30f74:	ldr	r0, [r8, #156]	; 0x9c
   30f78:	sub	r0, r0, #1
   30f7c:	str	r0, [r8, #156]	; 0x9c
   30f80:	sub	sp, fp, #28
   30f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30f88:	ldr	r0, [pc, #24]	; 30fa8 <flatcc_builder_end_union_vector@@Base+0x250>
   30f8c:	ldr	r1, [pc, #24]	; 30fac <flatcc_builder_end_union_vector@@Base+0x254>
   30f90:	ldr	r3, [pc, #24]	; 30fb0 <flatcc_builder_end_union_vector@@Base+0x258>
   30f94:	movw	r2, #1617	; 0x651
   30f98:	add	r0, pc, r0
   30f9c:	add	r1, pc, r1
   30fa0:	add	r3, pc, r3
   30fa4:	bl	14f38 <__assert_fail@plt>
   30fa8:	andeq	r8, r1, r3, asr #12
   30fac:	andeq	r7, r1, r6, lsl #20
   30fb0:	andeq	r8, r1, sp, ror #12

00030fb4 <flatcc_builder_union_vector_count@@Base>:
   30fb4:	ldr	r0, [r0, #32]
   30fb8:	ldr	r0, [r0, #20]
   30fbc:	bx	lr

00030fc0 <flatcc_builder_union_vector_edit@@Base>:
   30fc0:	ldr	r0, [r0, #16]
   30fc4:	bx	lr

00030fc8 <flatcc_builder_extend_union_vector@@Base>:
   30fc8:	push	{r4, r5, fp, lr}
   30fcc:	add	fp, sp, #8
   30fd0:	sub	sp, sp, #8
   30fd4:	mov	r4, r0
   30fd8:	ldr	r0, [r0, #32]
   30fdc:	ldr	r2, [r0, #20]
   30fe0:	adds	r2, r2, r1
   30fe4:	cmpcc	r2, #536870912	; 0x20000000
   30fe8:	bcc	3100c <flatcc_builder_extend_union_vector@@Base+0x44>
   30fec:	ldr	r0, [pc, #184]	; 310ac <flatcc_builder_extend_union_vector@@Base+0xe4>
   30ff0:	ldr	r1, [pc, #184]	; 310b0 <flatcc_builder_extend_union_vector@@Base+0xe8>
   30ff4:	ldr	r3, [pc, #184]	; 310b4 <flatcc_builder_extend_union_vector@@Base+0xec>
   30ff8:	mov	r2, #892	; 0x37c
   30ffc:	add	r0, pc, r0
   31000:	add	r1, pc, r1
   31004:	add	r3, pc, r3
   31008:	bl	14f38 <__assert_fail@plt>
   3100c:	str	r2, [r0, #20]
   31010:	ldr	r5, [r4, #20]
   31014:	ldr	r0, [r4, #24]
   31018:	add	r1, r5, r1, lsl #3
   3101c:	cmp	r1, r0
   31020:	str	r1, [r4, #20]
   31024:	bcs	31030 <flatcc_builder_extend_union_vector@@Base+0x68>
   31028:	ldr	r0, [r4, #16]
   3102c:	b	310a0 <flatcc_builder_extend_union_vector@@Base+0xd8>
   31030:	ldr	r2, [r4, #28]
   31034:	ldr	r0, [r4, #40]	; 0x28
   31038:	ldr	ip, [r4, #48]	; 0x30
   3103c:	mov	r3, #1
   31040:	str	r3, [sp]
   31044:	mov	r3, #1
   31048:	add	r1, r1, r2
   3104c:	add	r2, r1, #1
   31050:	add	r1, r4, #60	; 0x3c
   31054:	blx	ip
   31058:	mov	r1, r0
   3105c:	mov	r0, #0
   31060:	cmp	r1, #0
   31064:	beq	31070 <flatcc_builder_extend_union_vector@@Base+0xa8>
   31068:	sub	sp, fp, #8
   3106c:	pop	{r4, r5, fp, pc}
   31070:	ldr	r1, [r4, #28]
   31074:	ldr	r0, [r4, #60]	; 0x3c
   31078:	ldr	r3, [r4, #64]	; 0x40
   3107c:	ldr	r2, [r4, #32]
   31080:	add	r0, r0, r1
   31084:	sub	r1, r3, r1
   31088:	mvn	r3, #3
   3108c:	cmn	r1, #4
   31090:	str	r0, [r4, #16]
   31094:	movcs	r1, r3
   31098:	str	r1, [r4, #24]
   3109c:	str	r3, [r2, #4]
   310a0:	add	r0, r0, r5
   310a4:	sub	sp, fp, #8
   310a8:	pop	{r4, r5, fp, pc}
   310ac:	andeq	r8, r1, ip, ror #20
   310b0:	andeq	r7, r1, r2, lsr #19
   310b4:	andeq	r8, r1, pc, ror sl

000310b8 <flatcc_builder_truncate_union_vector@@Base>:
   310b8:	push	{fp, lr}
   310bc:	mov	fp, sp
   310c0:	ldr	r2, [r0, #32]
   310c4:	ldrh	r3, [r2, #14]
   310c8:	cmp	r3, #7
   310cc:	bne	31114 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   310d0:	ldr	r3, [r2, #20]
   310d4:	cmp	r3, r1
   310d8:	bcc	31134 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   310dc:	sub	r3, r3, r1
   310e0:	str	r3, [r2, #20]
   310e4:	ldr	r2, [r0, #32]
   310e8:	ldr	r3, [r0, #20]
   310ec:	ldr	ip, [r0, #16]
   310f0:	ldr	r2, [r2, #16]
   310f4:	mls	r3, r2, r1, r3
   310f8:	mul	r2, r2, r1
   310fc:	mov	r1, #0
   31100:	str	r3, [r0, #20]
   31104:	add	r0, ip, r3
   31108:	bl	14ee4 <memset@plt>
   3110c:	mov	r0, #0
   31110:	pop	{fp, pc}
   31114:	ldr	r0, [pc, #56]	; 31154 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   31118:	ldr	r1, [pc, #56]	; 31158 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   3111c:	ldr	r3, [pc, #56]	; 3115c <flatcc_builder_truncate_union_vector@@Base+0xa4>
   31120:	movw	r2, #1665	; 0x681
   31124:	add	r0, pc, r0
   31128:	add	r1, pc, r1
   3112c:	add	r3, pc, r3
   31130:	bl	14f38 <__assert_fail@plt>
   31134:	ldr	r0, [pc, #36]	; 31160 <flatcc_builder_truncate_union_vector@@Base+0xa8>
   31138:	ldr	r1, [pc, #36]	; 31164 <flatcc_builder_truncate_union_vector@@Base+0xac>
   3113c:	ldr	r3, [pc, #36]	; 31168 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   31140:	movw	r2, #1666	; 0x682
   31144:	add	r0, pc, r0
   31148:	add	r1, pc, r1
   3114c:	add	r3, pc, r3
   31150:	bl	14f38 <__assert_fail@plt>
   31154:			; <UNDEFINED> instruction: 0x000184b7
   31158:	andeq	r7, r1, sl, ror r8
   3115c:	andeq	r8, r1, r4, lsr r5
   31160:	strdeq	r7, [r1], -fp
   31164:	andeq	r7, r1, sl, asr r8
   31168:	andeq	r8, r1, r4, lsl r5

0003116c <flatcc_builder_union_vector_push@@Base>:
   3116c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   31170:	add	fp, sp, #24
   31174:	sub	sp, sp, #8
   31178:	mov	r7, r0
   3117c:	ldr	r0, [r0, #32]
   31180:	mov	r9, r1
   31184:	ldrh	r1, [r0, #14]
   31188:	cmp	r1, #7
   3118c:	bne	31248 <flatcc_builder_union_vector_push@@Base+0xdc>
   31190:	ldr	r1, [r0, #20]
   31194:	mov	r6, #0
   31198:	cmn	r1, #-536870911	; 0xe0000001
   3119c:	beq	3123c <flatcc_builder_union_vector_push@@Base+0xd0>
   311a0:	add	r1, r1, #1
   311a4:	mov	r8, r2
   311a8:	str	r1, [r0, #20]
   311ac:	ldr	r4, [r7, #20]
   311b0:	ldr	r0, [r7, #24]
   311b4:	add	r1, r4, #8
   311b8:	cmp	r1, r0
   311bc:	str	r1, [r7, #20]
   311c0:	bcs	311cc <flatcc_builder_union_vector_push@@Base+0x60>
   311c4:	ldr	r0, [r7, #16]
   311c8:	b	3122c <flatcc_builder_union_vector_push@@Base+0xc0>
   311cc:	ldr	r1, [r7, #28]
   311d0:	ldr	r0, [r7, #40]	; 0x28
   311d4:	ldr	r5, [r7, #48]	; 0x30
   311d8:	mov	r2, #1
   311dc:	mov	r3, #1
   311e0:	str	r2, [sp]
   311e4:	add	r1, r4, r1
   311e8:	add	r2, r1, #9
   311ec:	add	r1, r7, #60	; 0x3c
   311f0:	blx	r5
   311f4:	cmp	r0, #0
   311f8:	bne	3123c <flatcc_builder_union_vector_push@@Base+0xd0>
   311fc:	ldr	r1, [r7, #28]
   31200:	ldr	r0, [r7, #60]	; 0x3c
   31204:	ldr	r3, [r7, #64]	; 0x40
   31208:	ldr	r2, [r7, #32]
   3120c:	add	r0, r0, r1
   31210:	sub	r1, r3, r1
   31214:	mvn	r3, #3
   31218:	cmn	r1, #4
   3121c:	str	r0, [r7, #16]
   31220:	movcs	r1, r3
   31224:	str	r1, [r7, #24]
   31228:	str	r3, [r2, #4]
   3122c:	adds	r0, r0, r4
   31230:	movne	r6, r0
   31234:	strne	r9, [r0]
   31238:	strne	r8, [r0, #4]
   3123c:	mov	r0, r6
   31240:	sub	sp, fp, #24
   31244:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   31248:	ldr	r0, [pc, #24]	; 31268 <flatcc_builder_union_vector_push@@Base+0xfc>
   3124c:	ldr	r1, [pc, #24]	; 3126c <flatcc_builder_union_vector_push@@Base+0x100>
   31250:	ldr	r3, [pc, #24]	; 31270 <flatcc_builder_union_vector_push@@Base+0x104>
   31254:	movw	r2, #1677	; 0x68d
   31258:	add	r0, pc, r0
   3125c:	add	r1, pc, r1
   31260:	add	r3, pc, r3
   31264:	bl	14f38 <__assert_fail@plt>
   31268:	andeq	r8, r1, r3, lsl #7
   3126c:	andeq	r7, r1, r6, asr #14
   31270:	andeq	r8, r1, r5, asr #8

00031274 <flatcc_builder_append_union_vector@@Base>:
   31274:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31278:	add	fp, sp, #24
   3127c:	sub	sp, sp, #8
   31280:	mov	r6, r0
   31284:	ldr	r0, [r0, #32]
   31288:	mov	r8, r1
   3128c:	ldrh	r1, [r0, #14]
   31290:	cmp	r1, #7
   31294:	bne	31384 <flatcc_builder_append_union_vector@@Base+0x110>
   31298:	ldr	r1, [r0, #20]
   3129c:	mov	r5, r2
   312a0:	adds	r1, r1, r2
   312a4:	cmpcc	r1, #536870912	; 0x20000000
   312a8:	bcc	312cc <flatcc_builder_append_union_vector@@Base+0x58>
   312ac:	ldr	r0, [pc, #252]	; 313b0 <flatcc_builder_append_union_vector@@Base+0x13c>
   312b0:	ldr	r1, [pc, #252]	; 313b4 <flatcc_builder_append_union_vector@@Base+0x140>
   312b4:	ldr	r3, [pc, #252]	; 313b8 <flatcc_builder_append_union_vector@@Base+0x144>
   312b8:	mov	r2, #892	; 0x37c
   312bc:	add	r0, pc, r0
   312c0:	add	r1, pc, r1
   312c4:	add	r3, pc, r3
   312c8:	bl	14f38 <__assert_fail@plt>
   312cc:	str	r1, [r0, #20]
   312d0:	ldr	r4, [r6, #20]
   312d4:	ldr	r0, [r6, #24]
   312d8:	add	r1, r4, r5, lsl #3
   312dc:	cmp	r1, r0
   312e0:	str	r1, [r6, #20]
   312e4:	bcs	31308 <flatcc_builder_append_union_vector@@Base+0x94>
   312e8:	ldr	r0, [r6, #16]
   312ec:	adds	r7, r0, r4
   312f0:	beq	31374 <flatcc_builder_append_union_vector@@Base+0x100>
   312f4:	lsl	r2, r5, #3
   312f8:	mov	r0, r7
   312fc:	mov	r1, r8
   31300:	bl	14e54 <memcpy@plt>
   31304:	b	31378 <flatcc_builder_append_union_vector@@Base+0x104>
   31308:	ldr	r2, [r6, #28]
   3130c:	ldr	r0, [r6, #40]	; 0x28
   31310:	ldr	r7, [r6, #48]	; 0x30
   31314:	mov	r3, #1
   31318:	str	r3, [sp]
   3131c:	mov	r3, #1
   31320:	add	r1, r1, r2
   31324:	add	r2, r1, #1
   31328:	add	r1, r6, #60	; 0x3c
   3132c:	blx	r7
   31330:	mov	r7, #0
   31334:	cmp	r0, #0
   31338:	bne	31378 <flatcc_builder_append_union_vector@@Base+0x104>
   3133c:	ldr	r1, [r6, #28]
   31340:	ldr	r0, [r6, #60]	; 0x3c
   31344:	ldr	r3, [r6, #64]	; 0x40
   31348:	ldr	r2, [r6, #32]
   3134c:	add	r0, r0, r1
   31350:	sub	r1, r3, r1
   31354:	mvn	r3, #3
   31358:	cmn	r1, #4
   3135c:	str	r0, [r6, #16]
   31360:	movcs	r1, r3
   31364:	str	r1, [r6, #24]
   31368:	str	r3, [r2, #4]
   3136c:	adds	r7, r0, r4
   31370:	bne	312f4 <flatcc_builder_append_union_vector@@Base+0x80>
   31374:	mov	r7, #0
   31378:	mov	r0, r7
   3137c:	sub	sp, fp, #24
   31380:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31384:	ldr	r0, [pc, #24]	; 313a4 <flatcc_builder_append_union_vector@@Base+0x130>
   31388:	ldr	r1, [pc, #24]	; 313a8 <flatcc_builder_append_union_vector@@Base+0x134>
   3138c:	ldr	r3, [pc, #24]	; 313ac <flatcc_builder_append_union_vector@@Base+0x138>
   31390:	movw	r2, #1692	; 0x69c
   31394:	add	r0, pc, r0
   31398:	add	r1, pc, r1
   3139c:	add	r3, pc, r3
   313a0:	bl	14f38 <__assert_fail@plt>
   313a4:	andeq	r8, r1, r7, asr #4
   313a8:	andeq	r7, r1, sl, lsl #12
   313ac:	andeq	r8, r1, r6, ror r3
   313b0:	andeq	r8, r1, ip, lsr #15
   313b4:	andeq	r7, r1, r2, ror #13
   313b8:			; <UNDEFINED> instruction: 0x000187bf

000313bc <flatcc_builder_create_string@@Base>:
   313bc:	push	{r4, r5, r6, sl, fp, lr}
   313c0:	add	fp, sp, #16
   313c4:	sub	sp, sp, #80	; 0x50
   313c8:	str	r2, [fp, #-20]	; 0xffffffec
   313cc:	mvn	r5, r2
   313d0:	mov	r6, r0
   313d4:	sub	r3, fp, #20
   313d8:	cmp	r2, #0
   313dc:	add	lr, sp, #4
   313e0:	ldr	ip, [r0, #136]	; 0x88
   313e4:	mov	r0, #4
   313e8:	str	r0, [sp, #16]
   313ec:	str	r3, [sp, #12]
   313f0:	str	r0, [sp, #4]
   313f4:	mov	r3, #1
   313f8:	addne	r0, r2, #4
   313fc:	str	r3, [sp, #8]
   31400:	strne	r2, [sp, #24]
   31404:	strne	r1, [sp, #20]
   31408:	movne	r3, #2
   3140c:	strne	r3, [sp, #8]
   31410:	strne	r0, [sp, #4]
   31414:	add	r5, ip, r5
   31418:	and	r5, r5, #3
   3141c:	add	r5, r5, #1
   31420:	add	r1, r0, r5
   31424:	add	r0, lr, r3, lsl #3
   31428:	str	r1, [sp, #4]
   3142c:	cmp	r1, #0
   31430:	ldr	r2, [pc, #132]	; 314bc <flatcc_builder_create_string@@Base+0x100>
   31434:	ldr	r2, [pc, r2]
   31438:	str	r2, [r0, #8]
   3143c:	add	r2, r3, #1
   31440:	str	r5, [r0, #12]
   31444:	str	r2, [sp, #8]
   31448:	ble	3149c <flatcc_builder_create_string@@Base+0xe0>
   3144c:	ldr	r0, [r6, #36]	; 0x24
   31450:	ldr	r4, [r6, #44]	; 0x2c
   31454:	sub	r5, ip, r1
   31458:	str	r1, [sp]
   3145c:	add	r1, lr, #8
   31460:	mov	r3, r5
   31464:	blx	r4
   31468:	cmp	r0, #0
   3146c:	streq	r5, [r6, #136]	; 0x88
   31470:	moveq	r0, r5
   31474:	subeq	sp, fp, #16
   31478:	popeq	{r4, r5, r6, sl, fp, pc}
   3147c:	ldr	r0, [pc, #72]	; 314cc <flatcc_builder_create_string@@Base+0x110>
   31480:	ldr	r1, [pc, #72]	; 314d0 <flatcc_builder_create_string@@Base+0x114>
   31484:	ldr	r3, [pc, #72]	; 314d4 <flatcc_builder_create_string@@Base+0x118>
   31488:	movw	r2, #651	; 0x28b
   3148c:	add	r0, pc, r0
   31490:	add	r1, pc, r1
   31494:	add	r3, pc, r3
   31498:	bl	14f38 <__assert_fail@plt>
   3149c:	ldr	r0, [pc, #28]	; 314c0 <flatcc_builder_create_string@@Base+0x104>
   314a0:	ldr	r1, [pc, #28]	; 314c4 <flatcc_builder_create_string@@Base+0x108>
   314a4:	ldr	r3, [pc, #28]	; 314c8 <flatcc_builder_create_string@@Base+0x10c>
   314a8:	movw	r2, #647	; 0x287
   314ac:	add	r0, pc, r0
   314b0:	add	r1, pc, r1
   314b4:	add	r3, pc, r3
   314b8:	bl	14f38 <__assert_fail@plt>
   314bc:	andeq	sl, r2, r0, lsr ip
   314c0:			; <UNDEFINED> instruction: 0x000186b3
   314c4:	strdeq	r7, [r1], -r2
   314c8:	andeq	r8, r1, sl, ror #10
   314cc:	ldrdeq	r8, [r1], -r3
   314d0:	andeq	r7, r1, r2, lsl r5
   314d4:	andeq	r8, r1, sl, lsl #11

000314d8 <flatcc_builder_create_string_str@@Base>:
   314d8:	push	{r4, r5, fp, lr}
   314dc:	add	fp, sp, #8
   314e0:	mov	r5, r0
   314e4:	mov	r0, r1
   314e8:	mov	r4, r1
   314ec:	bl	14ec0 <strlen@plt>
   314f0:	mov	r2, r0
   314f4:	mov	r0, r5
   314f8:	mov	r1, r4
   314fc:	pop	{r4, r5, fp, lr}
   31500:	b	313bc <flatcc_builder_create_string@@Base>

00031504 <flatcc_builder_create_string_strn@@Base>:
   31504:	push	{r4, r5, r6, sl, fp, lr}
   31508:	add	fp, sp, #16
   3150c:	mov	r6, r0
   31510:	mov	r5, r1
   31514:	mov	r0, r1
   31518:	mov	r1, #0
   3151c:	mov	r4, r2
   31520:	bl	14f08 <memchr@plt>
   31524:	cmp	r0, #0
   31528:	mov	r1, r5
   3152c:	subne	r4, r0, r5
   31530:	mov	r0, r6
   31534:	mov	r2, r4
   31538:	pop	{r4, r5, r6, sl, fp, lr}
   3153c:	b	313bc <flatcc_builder_create_string@@Base>

00031540 <flatcc_builder_end_string@@Base>:
   31540:	push	{r4, r5, fp, lr}
   31544:	add	fp, sp, #8
   31548:	mov	r4, r0
   3154c:	ldr	r0, [r0, #32]
   31550:	ldrh	r1, [r0, #14]
   31554:	cmp	r1, #6
   31558:	bne	31600 <flatcc_builder_end_string@@Base+0xc0>
   3155c:	ldr	r2, [r0, #20]
   31560:	ldr	r0, [r4, #20]
   31564:	cmp	r2, r0
   31568:	bne	31620 <flatcc_builder_end_string@@Base+0xe0>
   3156c:	ldr	r1, [r4, #16]
   31570:	mov	r0, r4
   31574:	bl	313bc <flatcc_builder_create_string@@Base>
   31578:	mov	r5, r0
   3157c:	cmp	r0, #0
   31580:	beq	315f8 <flatcc_builder_end_string@@Base+0xb8>
   31584:	ldr	r0, [r4, #16]
   31588:	ldr	r2, [r4, #20]
   3158c:	mov	r1, #0
   31590:	bl	14ee4 <memset@plt>
   31594:	ldr	r0, [r4, #32]
   31598:	ldr	r1, [r4, #60]	; 0x3c
   3159c:	ldr	ip, [r4, #64]	; 0x40
   315a0:	ldr	r3, [r0, #8]
   315a4:	str	r3, [r4, #20]
   315a8:	ldr	r3, [r0]
   315ac:	str	r3, [r4, #28]
   315b0:	add	r1, r1, r3
   315b4:	ldr	r2, [r0, #4]
   315b8:	str	r1, [r4, #16]
   315bc:	sub	r1, ip, r3
   315c0:	cmp	r1, r2
   315c4:	movhi	r1, r2
   315c8:	str	r1, [r4, #24]
   315cc:	ldrh	r1, [r4, #130]	; 0x82
   315d0:	ldrh	r2, [r4, #128]	; 0x80
   315d4:	cmp	r2, r1
   315d8:	strhcc	r1, [r4, #128]	; 0x80
   315dc:	ldrh	r1, [r0, #12]
   315e0:	sub	r0, r0, #36	; 0x24
   315e4:	str	r0, [r4, #32]
   315e8:	strh	r1, [r4, #130]	; 0x82
   315ec:	ldr	r0, [r4, #156]	; 0x9c
   315f0:	sub	r0, r0, #1
   315f4:	str	r0, [r4, #156]	; 0x9c
   315f8:	mov	r0, r5
   315fc:	pop	{r4, r5, fp, pc}
   31600:	ldr	r0, [pc, #56]	; 31640 <flatcc_builder_end_string@@Base+0x100>
   31604:	ldr	r1, [pc, #56]	; 31644 <flatcc_builder_end_string@@Base+0x104>
   31608:	ldr	r3, [pc, #56]	; 31648 <flatcc_builder_end_string@@Base+0x108>
   3160c:	movw	r2, #1732	; 0x6c4
   31610:	add	r0, pc, r0
   31614:	add	r1, pc, r1
   31618:	add	r3, pc, r3
   3161c:	bl	14f38 <__assert_fail@plt>
   31620:	ldr	r0, [pc, #36]	; 3164c <flatcc_builder_end_string@@Base+0x10c>
   31624:	ldr	r1, [pc, #36]	; 31650 <flatcc_builder_end_string@@Base+0x110>
   31628:	ldr	r3, [pc, #36]	; 31654 <flatcc_builder_end_string@@Base+0x114>
   3162c:	movw	r2, #1733	; 0x6c5
   31630:	add	r0, pc, r0
   31634:	add	r1, pc, r1
   31638:	add	r3, pc, r3
   3163c:	bl	14f38 <__assert_fail@plt>
   31640:	andeq	r7, r1, lr, asr #17
   31644:	andeq	r7, r1, lr, lsl #7
   31648:	andeq	r8, r1, r9, ror r1
   3164c:	andeq	r8, r1, r4, lsr #3
   31650:	andeq	r7, r1, lr, ror #6
   31654:	andeq	r8, r1, r9, asr r1

00031658 <flatcc_builder_string_edit@@Base>:
   31658:	ldr	r0, [r0, #16]
   3165c:	bx	lr

00031660 <flatcc_builder_string_len@@Base>:
   31660:	ldr	r0, [r0, #32]
   31664:	ldr	r0, [r0, #20]
   31668:	bx	lr

0003166c <flatcc_builder_table_edit@@Base>:
   3166c:	push	{fp, lr}
   31670:	mov	fp, sp
   31674:	ldr	r2, [r0, #32]
   31678:	ldrh	r2, [r2, #14]
   3167c:	cmp	r2, #3
   31680:	ldreq	r2, [r0, #16]
   31684:	ldreq	r0, [r0, #20]
   31688:	addeq	r0, r2, r0
   3168c:	subeq	r0, r0, r1
   31690:	popeq	{fp, pc}
   31694:	ldr	r0, [pc, #24]	; 316b4 <flatcc_builder_table_edit@@Base+0x48>
   31698:	ldr	r1, [pc, #24]	; 316b8 <flatcc_builder_table_edit@@Base+0x4c>
   3169c:	ldr	r3, [pc, #24]	; 316bc <flatcc_builder_table_edit@@Base+0x50>
   316a0:	movw	r2, #1794	; 0x702
   316a4:	add	r0, pc, r0
   316a8:	add	r1, pc, r1
   316ac:	add	r3, pc, r3
   316b0:	bl	14f38 <__assert_fail@plt>
   316b4:	andeq	r7, r1, sl, lsr #22
   316b8:	strdeq	r7, [r1], -sl
   316bc:	ldrdeq	r8, [r1], -sl

000316c0 <flatcc_builder_table_add_copy@@Base>:
   316c0:	push	{r4, r5, r6, sl, fp, lr}
   316c4:	add	fp, sp, #16
   316c8:	mov	r4, r3
   316cc:	ldr	r3, [fp, #8]
   316d0:	mov	r5, r2
   316d4:	mov	r2, r4
   316d8:	bl	3063c <flatcc_builder_table_add@@Base>
   316dc:	mov	r6, r0
   316e0:	cmp	r0, #0
   316e4:	beq	316f8 <flatcc_builder_table_add_copy@@Base+0x38>
   316e8:	mov	r0, r6
   316ec:	mov	r1, r5
   316f0:	mov	r2, r4
   316f4:	bl	14e54 <memcpy@plt>
   316f8:	mov	r0, r6
   316fc:	pop	{r4, r5, r6, sl, fp, pc}

00031700 <flatcc_builder_push_buffer_alignment@@Base>:
   31700:	ldrh	r1, [r0, #128]	; 0x80
   31704:	mov	r2, #4
   31708:	strh	r2, [r0, #128]	; 0x80
   3170c:	mov	r0, r1
   31710:	bx	lr

00031714 <flatcc_builder_pop_buffer_alignment@@Base>:
   31714:	ldrh	r2, [r0, #128]	; 0x80
   31718:	cmp	r2, r1
   3171c:	strhcc	r1, [r0, #128]	; 0x80
   31720:	bx	lr

00031724 <flatcc_builder_get_buffer_alignment@@Base>:
   31724:	ldrh	r0, [r0, #128]	; 0x80
   31728:	bx	lr

0003172c <flatcc_builder_set_vtable_clustering@@Base>:
   3172c:	clz	r1, r1
   31730:	lsr	r1, r1, #5
   31734:	str	r1, [r0, #180]	; 0xb4
   31738:	bx	lr

0003173c <flatcc_builder_set_block_align@@Base>:
   3173c:	strh	r1, [r0, #132]	; 0x84
   31740:	bx	lr

00031744 <flatcc_builder_get_level@@Base>:
   31744:	ldr	r0, [r0, #156]	; 0x9c
   31748:	bx	lr

0003174c <flatcc_builder_set_max_level@@Base>:
   3174c:	str	r1, [r0, #176]	; 0xb0
   31750:	ldr	r2, [r0, #160]	; 0xa0
   31754:	cmp	r2, r1
   31758:	strlt	r1, [r0, #160]	; 0xa0
   3175c:	bx	lr

00031760 <flatcc_builder_get_buffer_size@@Base>:
   31760:	ldr	r1, [r0, #136]	; 0x88
   31764:	ldr	r0, [r0, #140]	; 0x8c
   31768:	sub	r0, r0, r1
   3176c:	bx	lr

00031770 <flatcc_builder_get_buffer_start@@Base>:
   31770:	ldr	r0, [r0, #136]	; 0x88
   31774:	bx	lr

00031778 <flatcc_builder_get_buffer_end@@Base>:
   31778:	ldr	r0, [r0, #140]	; 0x8c
   3177c:	bx	lr

00031780 <flatcc_builder_set_vtable_cache_limit@@Base>:
   31780:	str	r1, [r0, #172]	; 0xac
   31784:	bx	lr

00031788 <flatcc_builder_set_identifier@@Base>:
   31788:	ldr	r2, [pc, #20]	; 317a4 <flatcc_builder_set_identifier@@Base+0x1c>
   3178c:	cmp	r1, #0
   31790:	ldr	r2, [pc, r2]
   31794:	movne	r2, r1
   31798:	ldr	r1, [r2]
   3179c:	str	r1, [r0, #168]	; 0xa8
   317a0:	bx	lr
   317a4:	ldrdeq	sl, [r2], -r4

000317a8 <flatcc_builder_get_type@@Base>:
   317a8:	ldr	r0, [r0, #32]
   317ac:	cmp	r0, #0
   317b0:	ldrhne	r0, [r0, #14]
   317b4:	moveq	r0, #0
   317b8:	bx	lr

000317bc <flatcc_builder_get_type_at@@Base>:
   317bc:	mov	r2, r0
   317c0:	mov	r0, #0
   317c4:	cmp	r1, #1
   317c8:	blt	317ec <flatcc_builder_get_type_at@@Base+0x30>
   317cc:	ldr	r3, [r2, #156]	; 0x9c
   317d0:	cmp	r3, r1
   317d4:	bxlt	lr
   317d8:	sub	r0, r1, r3
   317dc:	ldr	r1, [r2, #32]
   317e0:	add	r0, r0, r0, lsl #3
   317e4:	add	r0, r1, r0, lsl #2
   317e8:	ldrh	r0, [r0, #14]
   317ec:	bx	lr

000317f0 <flatcc_builder_get_direct_buffer@@Base>:
   317f0:	ldr	r2, [r0, #184]	; 0xb8
   317f4:	cmp	r2, #0
   317f8:	beq	3180c <flatcc_builder_get_direct_buffer@@Base+0x1c>
   317fc:	ldr	r2, [r0, #188]	; 0xbc
   31800:	ldr	r3, [r0, #192]	; 0xc0
   31804:	cmp	r2, r3
   31808:	beq	31824 <flatcc_builder_get_direct_buffer@@Base+0x34>
   3180c:	cmp	r1, #0
   31810:	moveq	r0, #0
   31814:	bxeq	lr
   31818:	mov	r0, #0
   3181c:	str	r0, [r1]
   31820:	bx	lr
   31824:	cmp	r1, #0
   31828:	ldrne	r2, [r0, #212]	; 0xd4
   3182c:	strne	r2, [r1]
   31830:	ldr	r0, [r0, #196]	; 0xc4
   31834:	bx	lr

00031838 <flatcc_builder_copy_buffer@@Base>:
   31838:	push	{fp, lr}
   3183c:	mov	fp, sp
   31840:	ldr	r3, [r0, #184]	; 0xb8
   31844:	cmp	r3, #0
   31848:	beq	3187c <flatcc_builder_copy_buffer@@Base+0x44>
   3184c:	add	r0, r0, #188	; 0xbc
   31850:	bl	31f88 <flatcc_emitter_copy_buffer@@Base>
   31854:	cmp	r0, #0
   31858:	popne	{fp, pc}
   3185c:	ldr	r0, [pc, #32]	; 31884 <flatcc_builder_copy_buffer@@Base+0x4c>
   31860:	ldr	r1, [pc, #32]	; 31888 <flatcc_builder_copy_buffer@@Base+0x50>
   31864:	ldr	r3, [pc, #32]	; 3188c <flatcc_builder_copy_buffer@@Base+0x54>
   31868:	movw	r2, #1926	; 0x786
   3186c:	add	r0, pc, r0
   31870:	add	r1, pc, r1
   31874:	add	r3, pc, r3
   31878:	bl	14f38 <__assert_fail@plt>
   3187c:	mov	r0, #0
   31880:	pop	{fp, pc}
   31884:	andeq	r4, r1, sl, lsr r1
   31888:	andeq	r7, r1, r2, lsr r1
   3188c:	muleq	r1, sp, r0

00031890 <flatcc_builder_finalize_buffer@@Base>:
   31890:	push	{r4, r5, r6, sl, fp, lr}
   31894:	add	fp, sp, #16
   31898:	mov	r5, r0
   3189c:	ldr	r0, [r0, #136]	; 0x88
   318a0:	cmp	r1, #0
   318a4:	ldr	r2, [r5, #140]	; 0x8c
   318a8:	sub	r4, r2, r0
   318ac:	mov	r0, r4
   318b0:	strne	r4, [r1]
   318b4:	bl	14e90 <malloc@plt>
   318b8:	cmp	r0, #0
   318bc:	beq	3190c <flatcc_builder_finalize_buffer@@Base+0x7c>
   318c0:	mov	r6, r0
   318c4:	ldr	r0, [r5, #184]	; 0xb8
   318c8:	cmp	r0, #0
   318cc:	beq	3192c <flatcc_builder_finalize_buffer@@Base+0x9c>
   318d0:	add	r0, r5, #188	; 0xbc
   318d4:	mov	r1, r6
   318d8:	mov	r2, r4
   318dc:	bl	31f88 <flatcc_emitter_copy_buffer@@Base>
   318e0:	cmp	r0, #0
   318e4:	movne	r0, r6
   318e8:	popne	{r4, r5, r6, sl, fp, pc}
   318ec:	ldr	r0, [pc, #88]	; 3194c <flatcc_builder_finalize_buffer@@Base+0xbc>
   318f0:	ldr	r1, [pc, #88]	; 31950 <flatcc_builder_finalize_buffer@@Base+0xc0>
   318f4:	ldr	r3, [pc, #88]	; 31954 <flatcc_builder_finalize_buffer@@Base+0xc4>
   318f8:	movw	r2, #1926	; 0x786
   318fc:	add	r0, pc, r0
   31900:	add	r1, pc, r1
   31904:	add	r3, pc, r3
   31908:	bl	14f38 <__assert_fail@plt>
   3190c:	ldr	r0, [pc, #80]	; 31964 <flatcc_builder_finalize_buffer@@Base+0xd4>
   31910:	ldr	r1, [pc, #80]	; 31968 <flatcc_builder_finalize_buffer@@Base+0xd8>
   31914:	ldr	r3, [pc, #80]	; 3196c <flatcc_builder_finalize_buffer@@Base+0xdc>
   31918:	movw	r2, #1944	; 0x798
   3191c:	add	r0, pc, r0
   31920:	add	r1, pc, r1
   31924:	add	r3, pc, r3
   31928:	bl	14f38 <__assert_fail@plt>
   3192c:	ldr	r0, [pc, #36]	; 31958 <flatcc_builder_finalize_buffer@@Base+0xc8>
   31930:	ldr	r1, [pc, #36]	; 3195c <flatcc_builder_finalize_buffer@@Base+0xcc>
   31934:	ldr	r3, [pc, #36]	; 31960 <flatcc_builder_finalize_buffer@@Base+0xd0>
   31938:	movw	r2, #1948	; 0x79c
   3193c:	add	r0, pc, r0
   31940:	add	r1, pc, r1
   31944:	add	r3, pc, r3
   31948:	bl	14f38 <__assert_fail@plt>
   3194c:	andeq	r4, r1, sl, lsr #1
   31950:	andeq	r7, r1, r2, lsr #1
   31954:	andeq	r8, r1, sp
   31958:	andeq	r8, r1, r3, lsr #4
   3195c:	andeq	r7, r1, r2, rrx
   31960:	andeq	r8, r1, r2, lsl r0
   31964:	andeq	r8, r1, r3, asr #4
   31968:	andeq	r7, r1, r2, lsl #1
   3196c:	andeq	r8, r1, r2, lsr r0

00031970 <flatcc_builder_finalize_aligned_buffer@@Base>:
   31970:	push	{r4, r5, r6, r7, fp, lr}
   31974:	add	fp, sp, #16
   31978:	sub	sp, sp, #8
   3197c:	mov	r5, r0
   31980:	mov	r4, r1
   31984:	ldr	r0, [r0, #136]	; 0x88
   31988:	ldr	r1, [r5, #140]	; 0x8c
   3198c:	cmp	r4, #0
   31990:	sub	r0, r1, r0
   31994:	mov	r1, #0
   31998:	strne	r0, [r4]
   3199c:	ldrh	r2, [r5, #128]	; 0x80
   319a0:	str	r1, [sp, #4]
   319a4:	add	r0, r0, r2
   319a8:	cmp	r2, #4
   319ac:	mov	r1, r2
   319b0:	rsb	r2, r2, #0
   319b4:	sub	r0, r0, #1
   319b8:	movls	r1, #4
   319bc:	and	r7, r0, r2
   319c0:	add	r0, sp, #4
   319c4:	mov	r2, r7
   319c8:	bl	14ed8 <posix_memalign@plt>
   319cc:	ldr	r6, [sp, #4]
   319d0:	cmp	r0, #0
   319d4:	cmpne	r6, #0
   319d8:	bne	31a28 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   319dc:	cmp	r6, #0
   319e0:	beq	31a30 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   319e4:	ldr	r0, [r5, #184]	; 0xb8
   319e8:	cmp	r0, #0
   319ec:	beq	31a28 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   319f0:	add	r0, r5, #188	; 0xbc
   319f4:	mov	r1, r6
   319f8:	mov	r2, r7
   319fc:	bl	31f88 <flatcc_emitter_copy_buffer@@Base>
   31a00:	cmp	r0, #0
   31a04:	bne	31a3c <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   31a08:	ldr	r0, [pc, #56]	; 31a48 <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   31a0c:	ldr	r1, [pc, #56]	; 31a4c <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   31a10:	ldr	r3, [pc, #56]	; 31a50 <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   31a14:	movw	r2, #1926	; 0x786
   31a18:	add	r0, pc, r0
   31a1c:	add	r1, pc, r1
   31a20:	add	r3, pc, r3
   31a24:	bl	14f38 <__assert_fail@plt>
   31a28:	mov	r0, r6
   31a2c:	bl	14e48 <free@plt>
   31a30:	mov	r6, #0
   31a34:	cmp	r4, #0
   31a38:	strne	r6, [r4]
   31a3c:	mov	r0, r6
   31a40:	sub	sp, fp, #16
   31a44:	pop	{r4, r5, r6, r7, fp, pc}
   31a48:	andeq	r3, r1, lr, lsl #31
   31a4c:	andeq	r6, r1, r6, lsl #31
   31a50:	strdeq	r7, [r1], -r1

00031a54 <flatcc_builder_aligned_alloc@@Base>:
   31a54:	push	{fp, lr}
   31a58:	mov	fp, sp
   31a5c:	sub	sp, sp, #8
   31a60:	mov	r2, r1
   31a64:	mov	r1, r0
   31a68:	mov	r0, #0
   31a6c:	cmp	r1, #4
   31a70:	str	r0, [sp, #4]
   31a74:	add	r0, sp, #4
   31a78:	movls	r1, #4
   31a7c:	bl	14ed8 <posix_memalign@plt>
   31a80:	mov	r1, r0
   31a84:	ldr	r0, [sp, #4]
   31a88:	cmp	r1, #0
   31a8c:	cmpne	r0, #0
   31a90:	bne	31a9c <flatcc_builder_aligned_alloc@@Base+0x48>
   31a94:	mov	sp, fp
   31a98:	pop	{fp, pc}
   31a9c:	bl	14e48 <free@plt>
   31aa0:	mov	r0, #0
   31aa4:	str	r0, [sp, #4]
   31aa8:	mov	sp, fp
   31aac:	pop	{fp, pc}

00031ab0 <flatcc_builder_aligned_free@@Base>:
   31ab0:	b	14e48 <free@plt>

00031ab4 <flatcc_builder_get_emit_context@@Base>:
   31ab4:	ldr	r0, [r0, #36]	; 0x24
   31ab8:	bx	lr

00031abc <flatcc_emitter_recycle_page@@Base>:
   31abc:	ldr	r3, [r0]
   31ac0:	mov	r2, r0
   31ac4:	mvn	r0, #0
   31ac8:	cmp	r3, r1
   31acc:	beq	31b0c <flatcc_emitter_recycle_page@@Base+0x50>
   31ad0:	ldr	r2, [r2, #4]
   31ad4:	cmp	r2, r1
   31ad8:	bxeq	lr
   31adc:	ldr	r0, [r1, #2944]	; 0xb80
   31ae0:	ldr	r2, [r1, #2948]	; 0xb84
   31ae4:	str	r2, [r0, #2948]	; 0xb84
   31ae8:	ldr	r2, [r1, #2948]	; 0xb84
   31aec:	str	r0, [r2, #2944]	; 0xb80
   31af0:	ldr	r0, [r3, #2948]	; 0xb84
   31af4:	str	r3, [r1, #2944]	; 0xb80
   31af8:	str	r0, [r1, #2948]	; 0xb84
   31afc:	str	r1, [r0, #2944]	; 0xb80
   31b00:	ldr	r0, [r1, #2944]	; 0xb80
   31b04:	str	r1, [r0, #2948]	; 0xb84
   31b08:	mov	r0, #0
   31b0c:	bx	lr

00031b10 <flatcc_emitter_reset@@Base>:
   31b10:	push	{r4, sl, fp, lr}
   31b14:	add	fp, sp, #8
   31b18:	ldr	r1, [r0]
   31b1c:	cmp	r1, #0
   31b20:	beq	31bd8 <flatcc_emitter_reset@@Base+0xc8>
   31b24:	mov	r4, r0
   31b28:	add	r2, r1, #1472	; 0x5c0
   31b2c:	mov	r0, #1472	; 0x5c0
   31b30:	mov	r3, #0
   31b34:	stmib	r4, {r1, r2}
   31b38:	str	r0, [r4, #12]
   31b3c:	str	r2, [r4, #16]
   31b40:	str	r0, [r4, #20]
   31b44:	movw	r0, #64064	; 0xfa40
   31b48:	movt	r0, #65535	; 0xffff
   31b4c:	str	r0, [r1, #2952]	; 0xb88
   31b50:	ldr	r2, [r4, #32]
   31b54:	ldr	r0, [r4, #24]
   31b58:	cmp	r2, #0
   31b5c:	moveq	r2, r0
   31b60:	streq	r0, [r4, #32]
   31b64:	str	r3, [r4, #24]
   31b68:	add	r2, r2, r2, lsl #1
   31b6c:	lsr	r2, r2, #2
   31b70:	add	r0, r2, r0, lsr #2
   31b74:	str	r0, [r4, #32]
   31b78:	ldr	r2, [r4, #28]
   31b7c:	cmp	r2, r0, lsl #1
   31b80:	bls	31bd8 <flatcc_emitter_reset@@Base+0xc8>
   31b84:	mov	r2, r1
   31b88:	ldr	r0, [r2, #2944]!	; 0xb80
   31b8c:	cmp	r0, r1
   31b90:	popeq	{r4, sl, fp, pc}
   31b94:	ldr	r3, [r0, #2944]	; 0xb80
   31b98:	str	r3, [r2]
   31b9c:	ldr	r2, [r0, #2944]	; 0xb80
   31ba0:	str	r1, [r2, #2948]	; 0xb84
   31ba4:	bl	14e48 <free@plt>
   31ba8:	ldr	r0, [r4, #28]
   31bac:	ldr	r1, [r4, #32]
   31bb0:	sub	r0, r0, #2944	; 0xb80
   31bb4:	cmp	r0, r1, lsl #1
   31bb8:	str	r0, [r4, #28]
   31bbc:	bls	31bd8 <flatcc_emitter_reset@@Base+0xc8>
   31bc0:	ldr	r1, [r4, #4]
   31bc4:	ldr	r3, [r4]
   31bc8:	mov	r2, r1
   31bcc:	ldr	r0, [r2, #2944]!	; 0xb80
   31bd0:	cmp	r0, r3
   31bd4:	bne	31b94 <flatcc_emitter_reset@@Base+0x84>
   31bd8:	pop	{r4, sl, fp, pc}

00031bdc <flatcc_emitter_clear@@Base>:
   31bdc:	push	{r4, r5, r6, sl, fp, lr}
   31be0:	add	fp, sp, #16
   31be4:	ldr	r5, [r0]
   31be8:	cmp	r5, #0
   31bec:	beq	31c3c <flatcc_emitter_clear@@Base+0x60>
   31bf0:	mov	r4, r0
   31bf4:	ldr	r0, [r5, #2948]	; 0xb84
   31bf8:	mov	r6, #0
   31bfc:	str	r6, [r0, #2944]	; 0xb80
   31c00:	ldr	r0, [r5, #2944]	; 0xb80
   31c04:	cmp	r0, #0
   31c08:	beq	31c1c <flatcc_emitter_clear@@Base+0x40>
   31c0c:	mov	r5, r0
   31c10:	ldr	r0, [r0, #2948]	; 0xb84
   31c14:	bl	14e48 <free@plt>
   31c18:	b	31c00 <flatcc_emitter_clear@@Base+0x24>
   31c1c:	mov	r0, r5
   31c20:	bl	14e48 <free@plt>
   31c24:	vmov.i32	q8, #0	; 0x00000000
   31c28:	add	r0, r4, #16
   31c2c:	vst1.32	{d16-d17}, [r0]
   31c30:	mov	r0, #32
   31c34:	vst1.32	{d16-d17}, [r4], r0
   31c38:	str	r6, [r4]
   31c3c:	pop	{r4, r5, r6, sl, fp, pc}

00031c40 <flatcc_emitter@@Base>:
   31c40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31c44:	add	fp, sp, #28
   31c48:	sub	sp, sp, #4
   31c4c:	mov	r6, r0
   31c50:	mov	r7, r1
   31c54:	ldr	r0, [r0, #24]
   31c58:	ldr	r1, [fp, #8]
   31c5c:	mov	r4, r2
   31c60:	cmn	r3, #1
   31c64:	mov	r9, r6
   31c68:	add	r0, r0, r1
   31c6c:	str	r0, [r6, #24]
   31c70:	ble	31dc4 <flatcc_emitter@@Base+0x184>
   31c74:	ldr	r0, [r9, #20]!
   31c78:	cmp	r0, r1
   31c7c:	bcs	31f24 <flatcc_emitter@@Base+0x2e4>
   31c80:	mov	r8, #0
   31c84:	cmp	r4, #0
   31c88:	beq	31f7c <flatcc_emitter@@Base+0x33c>
   31c8c:	movw	sl, #64064	; 0xfa40
   31c90:	movt	sl, #65535	; 0xffff
   31c94:	ldr	r8, [r7, #4]
   31c98:	cmp	r8, #0
   31c9c:	beq	31db0 <flatcc_emitter@@Base+0x170>
   31ca0:	ldr	r9, [r7]
   31ca4:	b	31ce0 <flatcc_emitter@@Base+0xa0>
   31ca8:	mov	r5, r8
   31cac:	ldr	r0, [r6, #16]
   31cb0:	mov	r1, r9
   31cb4:	mov	r2, r5
   31cb8:	bl	14e54 <memcpy@plt>
   31cbc:	ldr	r0, [r6, #16]
   31cc0:	ldr	r1, [r6, #20]
   31cc4:	add	r9, r9, r5
   31cc8:	subs	r8, r8, r5
   31ccc:	add	r2, r0, r5
   31cd0:	sub	r0, r1, r5
   31cd4:	str	r2, [r6, #16]
   31cd8:	str	r0, [r6, #20]
   31cdc:	beq	31db0 <flatcc_emitter@@Base+0x170>
   31ce0:	cmp	r8, r0
   31ce4:	mov	r5, r8
   31ce8:	bls	31cac <flatcc_emitter@@Base+0x6c>
   31cec:	mov	r5, r0
   31cf0:	cmp	r5, #0
   31cf4:	beq	31d40 <flatcc_emitter@@Base+0x100>
   31cf8:	b	31cac <flatcc_emitter@@Base+0x6c>
   31cfc:	ldr	r1, [r6]
   31d00:	str	r1, [r0, #2944]	; 0xb80
   31d04:	str	r5, [r0, #2948]	; 0xb84
   31d08:	str	r0, [r1, #2948]	; 0xb84
   31d0c:	str	r0, [r5, #2944]	; 0xb80
   31d10:	mov	r5, #2944	; 0xb80
   31d14:	str	r0, [r6, #4]
   31d18:	str	r0, [r6, #16]
   31d1c:	str	r5, [r6, #20]
   31d20:	ldr	r1, [r0, #2948]	; 0xb84
   31d24:	ldr	r1, [r1, #2952]	; 0xb88
   31d28:	add	r1, r1, #2944	; 0xb80
   31d2c:	str	r1, [r0, #2952]	; 0xb88
   31d30:	cmp	r8, r5
   31d34:	bls	31ca8 <flatcc_emitter@@Base+0x68>
   31d38:	cmp	r5, #0
   31d3c:	bne	31cac <flatcc_emitter@@Base+0x6c>
   31d40:	ldr	r5, [r6, #4]
   31d44:	cmp	r5, #0
   31d48:	beq	31d5c <flatcc_emitter@@Base+0x11c>
   31d4c:	ldr	r0, [r5, #2944]	; 0xb80
   31d50:	ldr	r1, [r6]
   31d54:	cmp	r0, r1
   31d58:	bne	31d10 <flatcc_emitter@@Base+0xd0>
   31d5c:	movw	r0, #2956	; 0xb8c
   31d60:	bl	14e90 <malloc@plt>
   31d64:	cmp	r0, #0
   31d68:	beq	31f34 <flatcc_emitter@@Base+0x2f4>
   31d6c:	ldr	r1, [r6, #28]
   31d70:	cmp	r5, #0
   31d74:	add	r1, r1, #2944	; 0xb80
   31d78:	str	r1, [r6, #28]
   31d7c:	bne	31cfc <flatcc_emitter@@Base+0xbc>
   31d80:	add	r1, r0, #1472	; 0x5c0
   31d84:	mov	r5, #1472	; 0x5c0
   31d88:	str	r0, [r6]
   31d8c:	stmib	r6, {r0, r1, r5}
   31d90:	str	r1, [r6, #16]
   31d94:	str	r5, [r6, #20]
   31d98:	str	r0, [r0, #2944]	; 0xb80
   31d9c:	str	r0, [r0, #2948]	; 0xb84
   31da0:	str	sl, [r0, #2952]	; 0xb88
   31da4:	cmp	r8, r5
   31da8:	bhi	31d38 <flatcc_emitter@@Base+0xf8>
   31dac:	b	31ca8 <flatcc_emitter@@Base+0x68>
   31db0:	subs	r4, r4, #1
   31db4:	add	r7, r7, #8
   31db8:	bne	31c94 <flatcc_emitter@@Base+0x54>
   31dbc:	mov	r8, #0
   31dc0:	b	31f7c <flatcc_emitter@@Base+0x33c>
   31dc4:	ldr	r0, [r9, #12]!
   31dc8:	cmp	r0, r1
   31dcc:	bcs	31f3c <flatcc_emitter@@Base+0x2fc>
   31dd0:	mov	r8, #0
   31dd4:	cmp	r4, #0
   31dd8:	beq	31f7c <flatcc_emitter@@Base+0x33c>
   31ddc:	add	r0, r7, r4, lsl #3
   31de0:	ldr	sl, [r0, #-4]
   31de4:	sub	r1, r0, #8
   31de8:	str	r1, [sp]
   31dec:	cmp	sl, #0
   31df0:	beq	31f14 <flatcc_emitter@@Base+0x2d4>
   31df4:	ldr	r0, [sp]
   31df8:	ldr	r0, [r0]
   31dfc:	add	r7, r0, sl
   31e00:	ldr	r1, [r9]
   31e04:	cmp	sl, r1
   31e08:	bhi	31e48 <flatcc_emitter@@Base+0x208>
   31e0c:	b	31ee4 <flatcc_emitter@@Base+0x2a4>
   31e10:	ldr	r1, [r5, #2952]	; 0xb88
   31e14:	sub	r1, r1, #2944	; 0xb80
   31e18:	str	r1, [r0, #2952]	; 0xb88
   31e1c:	mov	r1, #2944	; 0xb80
   31e20:	add	r2, r0, #2944	; 0xb80
   31e24:	str	r0, [r6]
   31e28:	str	r2, [r6, #8]
   31e2c:	str	r1, [r6, #12]
   31e30:	ldr	r2, [r0, #2944]	; 0xb80
   31e34:	ldr	r2, [r2, #2952]	; 0xb88
   31e38:	sub	r2, r2, #2944	; 0xb80
   31e3c:	str	r2, [r0, #2952]	; 0xb88
   31e40:	cmp	sl, r1
   31e44:	bls	31ee4 <flatcc_emitter@@Base+0x2a4>
   31e48:	cmp	r1, #0
   31e4c:	mov	r5, r1
   31e50:	bne	31ee8 <flatcc_emitter@@Base+0x2a8>
   31e54:	ldr	r5, [r6]
   31e58:	cmp	r5, #0
   31e5c:	beq	31e70 <flatcc_emitter@@Base+0x230>
   31e60:	ldr	r0, [r5, #2948]	; 0xb84
   31e64:	ldr	r1, [r6, #4]
   31e68:	cmp	r0, r1
   31e6c:	bne	31e10 <flatcc_emitter@@Base+0x1d0>
   31e70:	movw	r0, #2956	; 0xb8c
   31e74:	bl	14e90 <malloc@plt>
   31e78:	cmp	r0, #0
   31e7c:	beq	31f34 <flatcc_emitter@@Base+0x2f4>
   31e80:	ldr	r1, [r6, #28]
   31e84:	cmp	r5, #0
   31e88:	add	r1, r1, #2944	; 0xb80
   31e8c:	str	r1, [r6, #28]
   31e90:	beq	31eac <flatcc_emitter@@Base+0x26c>
   31e94:	ldr	r1, [r6, #4]
   31e98:	str	r5, [r0, #2944]	; 0xb80
   31e9c:	str	r1, [r0, #2948]	; 0xb84
   31ea0:	str	r0, [r5, #2948]	; 0xb84
   31ea4:	str	r0, [r1, #2944]	; 0xb80
   31ea8:	b	31e1c <flatcc_emitter@@Base+0x1dc>
   31eac:	add	r2, r0, #1472	; 0x5c0
   31eb0:	mov	r1, #1472	; 0x5c0
   31eb4:	str	r0, [r6]
   31eb8:	stmib	r6, {r0, r2}
   31ebc:	str	r1, [r6, #12]
   31ec0:	str	r2, [r6, #16]
   31ec4:	movw	r2, #64064	; 0xfa40
   31ec8:	str	r1, [r6, #20]
   31ecc:	str	r0, [r0, #2944]	; 0xb80
   31ed0:	str	r0, [r0, #2948]	; 0xb84
   31ed4:	movt	r2, #65535	; 0xffff
   31ed8:	str	r2, [r0, #2952]	; 0xb88
   31edc:	cmp	sl, r1
   31ee0:	bhi	31e48 <flatcc_emitter@@Base+0x208>
   31ee4:	mov	r5, sl
   31ee8:	sub	r0, r1, r5
   31eec:	sub	r7, r7, r5
   31ef0:	mov	r2, r5
   31ef4:	str	r0, [r6, #12]
   31ef8:	mov	r1, r7
   31efc:	ldr	r0, [r6, #8]
   31f00:	sub	r0, r0, r5
   31f04:	str	r0, [r6, #8]
   31f08:	bl	14e54 <memcpy@plt>
   31f0c:	subs	sl, sl, r5
   31f10:	bne	31e00 <flatcc_emitter@@Base+0x1c0>
   31f14:	ldr	r0, [sp]
   31f18:	subs	r4, r4, #1
   31f1c:	bne	31de0 <flatcc_emitter@@Base+0x1a0>
   31f20:	b	31f7c <flatcc_emitter@@Base+0x33c>
   31f24:	ldr	r5, [r6, #16]
   31f28:	add	r2, r5, r1
   31f2c:	str	r2, [r6, #16]
   31f30:	b	31f48 <flatcc_emitter@@Base+0x308>
   31f34:	mvn	r8, #0
   31f38:	b	31f7c <flatcc_emitter@@Base+0x33c>
   31f3c:	ldr	r2, [r6, #8]
   31f40:	sub	r5, r2, r1
   31f44:	str	r5, [r6, #8]
   31f48:	sub	r0, r0, r1
   31f4c:	mov	r8, #0
   31f50:	cmp	r4, #0
   31f54:	str	r0, [r9]
   31f58:	beq	31f7c <flatcc_emitter@@Base+0x33c>
   31f5c:	ldm	r7, {r1, r2}
   31f60:	mov	r0, r5
   31f64:	bl	14e54 <memcpy@plt>
   31f68:	ldr	r0, [r7, #4]
   31f6c:	add	r7, r7, #8
   31f70:	subs	r4, r4, #1
   31f74:	add	r5, r5, r0
   31f78:	bne	31f5c <flatcc_emitter@@Base+0x31c>
   31f7c:	mov	r0, r8
   31f80:	sub	sp, fp, #28
   31f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00031f88 <flatcc_emitter_copy_buffer@@Base>:
   31f88:	push	{r4, r5, r6, sl, fp, lr}
   31f8c:	add	fp, sp, #16
   31f90:	mov	r3, r2
   31f94:	ldr	r2, [r0, #24]
   31f98:	mov	r5, #0
   31f9c:	cmp	r2, r3
   31fa0:	bhi	32028 <flatcc_emitter_copy_buffer@@Base+0xa0>
   31fa4:	mov	r4, r0
   31fa8:	ldr	r0, [r0]
   31fac:	cmp	r0, #0
   31fb0:	beq	32028 <flatcc_emitter_copy_buffer@@Base+0xa0>
   31fb4:	mov	r6, r1
   31fb8:	ldr	r1, [r4, #4]
   31fbc:	cmp	r0, r1
   31fc0:	beq	32030 <flatcc_emitter_copy_buffer@@Base+0xa8>
   31fc4:	ldr	r0, [r4, #12]
   31fc8:	ldr	r1, [r4, #8]
   31fcc:	rsb	r5, r0, #2944	; 0xb80
   31fd0:	mov	r0, r6
   31fd4:	mov	r2, r5
   31fd8:	bl	14e54 <memcpy@plt>
   31fdc:	ldm	r4, {r0, r1}
   31fe0:	add	r5, r6, r5
   31fe4:	ldr	r6, [r0, #2944]	; 0xb80
   31fe8:	cmp	r6, r1
   31fec:	beq	32014 <flatcc_emitter_copy_buffer@@Base+0x8c>
   31ff0:	mov	r0, r5
   31ff4:	mov	r1, r6
   31ff8:	mov	r2, #2944	; 0xb80
   31ffc:	bl	14e54 <memcpy@plt>
   32000:	ldr	r6, [r6, #2944]	; 0xb80
   32004:	ldr	r0, [r4, #4]
   32008:	add	r5, r5, #2944	; 0xb80
   3200c:	cmp	r6, r0
   32010:	bne	31ff0 <flatcc_emitter_copy_buffer@@Base+0x68>
   32014:	ldr	r0, [r4, #20]
   32018:	mov	r1, r6
   3201c:	rsb	r2, r0, #2944	; 0xb80
   32020:	mov	r0, r5
   32024:	bl	14e54 <memcpy@plt>
   32028:	mov	r0, r5
   3202c:	pop	{r4, r5, r6, sl, fp, pc}
   32030:	ldr	r1, [r4, #8]
   32034:	mov	r0, r6
   32038:	bl	14e54 <memcpy@plt>
   3203c:	mov	r0, r6
   32040:	pop	{r4, r5, r6, sl, fp, pc}

00032044 <flatcc_verify_error_string@@Base>:
   32044:	cmp	r0, #36	; 0x24
   32048:	bhi	3205c <flatcc_verify_error_string@@Base+0x18>
   3204c:	ldr	r1, [pc, #20]	; 32068 <flatcc_verify_error_string@@Base+0x24>
   32050:	add	r1, pc, r1
   32054:	ldr	r0, [r1, r0, lsl #2]
   32058:	bx	lr
   3205c:	ldr	r0, [pc, #8]	; 3206c <flatcc_verify_error_string@@Base+0x28>
   32060:	add	r0, pc, r0
   32064:	bx	lr
   32068:	andeq	r9, r2, r8, lsl #27
   3206c:			; <UNDEFINED> instruction: 0x00017fbd

00032070 <flatcc_verify_field@@Base>:
   32070:	push	{r4, sl, fp, lr}
   32074:	add	fp, sp, #8
   32078:	mov	ip, #4
   3207c:	ldrh	r4, [r0, #22]
   32080:	mov	lr, #0
   32084:	add	r1, ip, r1, lsl #1
   32088:	uxth	ip, r1
   3208c:	cmp	ip, r4
   32090:	bcs	320ec <flatcc_verify_field@@Base+0x7c>
   32094:	ldr	r4, [r0, #12]
   32098:	uxtah	r1, r4, r1
   3209c:	ldrh	ip, [r1]
   320a0:	cmp	ip, #0
   320a4:	beq	320ec <flatcc_verify_field@@Base+0x7c>
   320a8:	add	r1, ip, r2
   320ac:	ldrh	r2, [r0, #20]
   320b0:	mov	lr, #13
   320b4:	cmp	r1, r2
   320b8:	bhi	320ec <flatcc_verify_field@@Base+0x7c>
   320bc:	ldr	r1, [r0]
   320c0:	mov	lr, #0
   320c4:	add	r2, r1, ip
   320c8:	ldr	r1, [r0, #16]
   320cc:	add	r4, r2, r1
   320d0:	sub	r1, r3, #1
   320d4:	tst	r4, r1
   320d8:	beq	320ec <flatcc_verify_field@@Base+0x7c>
   320dc:	ldr	r0, [r0, #16]
   320e0:	add	r0, r2, r0
   320e4:	ands	lr, r0, r1
   320e8:	movwne	lr, #12
   320ec:	mov	r0, lr
   320f0:	pop	{r4, sl, fp, pc}

000320f4 <flatcc_verify_string_field@@Base>:
   320f4:	push	{fp, lr}
   320f8:	mov	fp, sp
   320fc:	mov	lr, r0
   32100:	mov	r0, #4
   32104:	add	r0, r0, r1, lsl #1
   32108:	ldrh	r3, [lr, #22]
   3210c:	uxth	r1, r0
   32110:	cmp	r1, r3
   32114:	bcs	32158 <flatcc_verify_string_field@@Base+0x64>
   32118:	ldr	r1, [lr, #12]
   3211c:	uxtah	r0, r1, r0
   32120:	ldrh	r1, [r0]
   32124:	cmp	r1, #0
   32128:	beq	32158 <flatcc_verify_string_field@@Base+0x64>
   3212c:	ldrh	r2, [lr, #20]
   32130:	add	r3, r1, #4
   32134:	mov	r0, #13
   32138:	cmp	r3, r2
   3213c:	bhi	32154 <flatcc_verify_string_field@@Base+0x60>
   32140:	ldr	r0, [lr, #16]
   32144:	add	r2, r0, r1
   32148:	mov	r0, #12
   3214c:	tst	r2, #3
   32150:	beq	32168 <flatcc_verify_string_field@@Base+0x74>
   32154:	pop	{fp, pc}
   32158:	cmp	r2, #0
   3215c:	movwne	r2, #1
   32160:	lsl	r0, r2, #2
   32164:	pop	{fp, pc}
   32168:	cmp	r2, #0
   3216c:	beq	321cc <flatcc_verify_string_field@@Base+0xd8>
   32170:	ldr	ip, [lr]
   32174:	ldr	r0, [ip, r2]
   32178:	add	r1, r0, r2
   3217c:	mov	r0, #17
   32180:	tst	r1, #3
   32184:	bne	32154 <flatcc_verify_string_field@@Base+0x60>
   32188:	cmp	r1, r2
   3218c:	bls	32154 <flatcc_verify_string_field@@Base+0x60>
   32190:	ldr	r3, [lr, #4]
   32194:	add	r2, r1, #4
   32198:	cmp	r3, r2
   3219c:	bcc	32154 <flatcc_verify_string_field@@Base+0x60>
   321a0:	ldr	r1, [ip, r1]
   321a4:	sub	lr, r3, r2
   321a8:	mov	r0, #8
   321ac:	add	r3, r1, #1
   321b0:	cmp	lr, r3
   321b4:	popcc	{fp, pc}
   321b8:	add	r0, ip, r2
   321bc:	ldrb	r0, [r0, r1]
   321c0:	cmp	r0, #0
   321c4:	movwne	r0, #7
   321c8:	pop	{fp, pc}
   321cc:	mov	r0, #0
   321d0:	pop	{fp, pc}

000321d4 <flatcc_verify_vector_field@@Base>:
   321d4:	push	{r4, sl, fp, lr}
   321d8:	add	fp, sp, #8
   321dc:	mov	ip, r0
   321e0:	mov	r0, #4
   321e4:	add	r0, r0, r1, lsl #1
   321e8:	ldrh	r4, [ip, #22]
   321ec:	uxth	r1, r0
   321f0:	cmp	r1, r4
   321f4:	bcs	32238 <flatcc_verify_vector_field@@Base+0x64>
   321f8:	ldr	r1, [ip, #12]
   321fc:	uxtah	r0, r1, r0
   32200:	ldrh	r1, [r0]
   32204:	cmp	r1, #0
   32208:	beq	32238 <flatcc_verify_vector_field@@Base+0x64>
   3220c:	ldrh	r2, [ip, #20]
   32210:	add	r4, r1, #4
   32214:	mov	r0, #13
   32218:	cmp	r4, r2
   3221c:	bhi	32234 <flatcc_verify_vector_field@@Base+0x60>
   32220:	ldr	r0, [ip, #16]
   32224:	add	r2, r0, r1
   32228:	mov	r0, #12
   3222c:	tst	r2, #3
   32230:	beq	32248 <flatcc_verify_vector_field@@Base+0x74>
   32234:	pop	{r4, sl, fp, pc}
   32238:	cmp	r2, #0
   3223c:	movwne	r2, #1
   32240:	lsl	r0, r2, #2
   32244:	pop	{r4, sl, fp, pc}
   32248:	cmp	r2, #0
   3224c:	beq	322c4 <flatcc_verify_vector_field@@Base+0xf0>
   32250:	ldr	lr, [ip]
   32254:	ldr	r4, [fp, #8]
   32258:	ldr	r0, [lr, r2]
   3225c:	cmp	r4, #4
   32260:	movls	r4, #4
   32264:	add	r1, r0, r2
   32268:	mov	r0, #16
   3226c:	cmp	r1, r2
   32270:	bls	32234 <flatcc_verify_vector_field@@Base+0x60>
   32274:	ldr	ip, [ip, #4]
   32278:	add	r2, r1, #4
   3227c:	cmp	r2, ip
   32280:	bhi	32234 <flatcc_verify_vector_field@@Base+0x60>
   32284:	sub	r4, r4, #1
   32288:	orr	r4, r4, #3
   3228c:	tst	r2, r4
   32290:	bne	32234 <flatcc_verify_vector_field@@Base+0x60>
   32294:	ldr	r4, [fp, #12]
   32298:	ldr	r2, [lr, r1]
   3229c:	mov	r0, #25
   322a0:	cmp	r2, r4
   322a4:	pophi	{r4, sl, fp, pc}
   322a8:	mul	r2, r2, r3
   322ac:	sub	r0, ip, r1
   322b0:	sub	r1, r0, #4
   322b4:	mov	r0, #0
   322b8:	cmp	r1, r2
   322bc:	movwcc	r0, #26
   322c0:	pop	{r4, sl, fp, pc}
   322c4:	mov	r0, #0
   322c8:	pop	{r4, sl, fp, pc}

000322cc <flatcc_verify_string_vector_field@@Base>:
   322cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   322d0:	add	fp, sp, #24
   322d4:	mov	r3, r0
   322d8:	mov	r0, #4
   322dc:	add	r0, r0, r1, lsl #1
   322e0:	ldrh	r7, [r3, #22]
   322e4:	uxth	r1, r0
   322e8:	cmp	r1, r7
   322ec:	bcs	32330 <flatcc_verify_string_vector_field@@Base+0x64>
   322f0:	ldr	r1, [r3, #12]
   322f4:	uxtah	r0, r1, r0
   322f8:	ldrh	r1, [r0]
   322fc:	cmp	r1, #0
   32300:	beq	32330 <flatcc_verify_string_vector_field@@Base+0x64>
   32304:	ldrh	r2, [r3, #20]
   32308:	add	r7, r1, #4
   3230c:	mov	r0, #13
   32310:	cmp	r7, r2
   32314:	bhi	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   32318:	ldr	r4, [r3, #16]
   3231c:	mov	r0, #12
   32320:	add	r6, r4, r1
   32324:	tst	r6, #3
   32328:	beq	32340 <flatcc_verify_string_vector_field@@Base+0x74>
   3232c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32330:	cmp	r2, #0
   32334:	movwne	r2, #1
   32338:	lsl	r0, r2, #2
   3233c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32340:	cmp	r6, #0
   32344:	beq	3243c <flatcc_verify_string_vector_field@@Base+0x170>
   32348:	ldr	r5, [r3]
   3234c:	mov	r0, #16
   32350:	ldr	r7, [r5, r6]
   32354:	add	r2, r7, r6
   32358:	cmp	r2, r6
   3235c:	bls	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   32360:	ldr	ip, [r3, #4]
   32364:	add	r3, r2, #4
   32368:	cmp	r3, ip
   3236c:	bhi	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   32370:	ands	r3, r3, #3
   32374:	bne	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   32378:	ldr	lr, [r5, r2]
   3237c:	mov	r0, #25
   32380:	cmn	lr, #-1073741823	; 0xc0000001
   32384:	bhi	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   32388:	sub	r0, ip, r2
   3238c:	sub	r2, r0, #4
   32390:	mov	r0, #26
   32394:	cmp	r2, lr, lsl #2
   32398:	bcc	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   3239c:	cmp	lr, #0
   323a0:	beq	3243c <flatcc_verify_string_vector_field@@Base+0x170>
   323a4:	sub	r0, ip, r7
   323a8:	add	r8, r7, r4
   323ac:	sub	r0, r0, r4
   323b0:	add	r3, r5, r8
   323b4:	sub	r0, r0, r1
   323b8:	sub	r4, r0, #8
   323bc:	add	r0, r3, r1
   323c0:	add	r7, r1, r8
   323c4:	ldr	r5, [r0, #4]
   323c8:	mov	r0, #17
   323cc:	add	r6, r7, r5
   323d0:	add	r2, r6, #4
   323d4:	tst	r2, #3
   323d8:	bne	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   323dc:	add	r7, r7, #4
   323e0:	cmp	r2, r7
   323e4:	bls	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   323e8:	add	r2, r6, #8
   323ec:	cmp	ip, r2
   323f0:	bcc	3232c <flatcc_verify_string_vector_field@@Base+0x60>
   323f4:	add	r0, r1, r5
   323f8:	sub	r2, r4, r5
   323fc:	add	r0, r3, r0
   32400:	ldr	r0, [r0, #4]
   32404:	add	r6, r0, #1
   32408:	cmp	r2, r6
   3240c:	bcc	32444 <flatcc_verify_string_vector_field@@Base+0x178>
   32410:	add	r0, r5, r0
   32414:	add	r0, r1, r0
   32418:	add	r0, r3, r0
   3241c:	ldrb	r0, [r0, #8]
   32420:	cmp	r0, #0
   32424:	bne	3244c <flatcc_verify_string_vector_field@@Base+0x180>
   32428:	subs	lr, lr, #1
   3242c:	sub	r4, r4, #4
   32430:	add	r8, r8, #4
   32434:	add	r3, r3, #4
   32438:	bne	323bc <flatcc_verify_string_vector_field@@Base+0xf0>
   3243c:	mov	r0, #0
   32440:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32444:	mov	r0, #8
   32448:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3244c:	mov	r0, #7
   32450:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00032454 <flatcc_verify_table_field@@Base>:
   32454:	push	{r4, r5, r6, sl, fp, lr}
   32458:	add	fp, sp, #16
   3245c:	sub	sp, sp, #24
   32460:	mov	ip, r0
   32464:	mov	r0, #4
   32468:	add	r0, r0, r1, lsl #1
   3246c:	ldrh	r6, [ip, #22]
   32470:	uxth	r1, r0
   32474:	cmp	r1, r6
   32478:	bcs	324c0 <flatcc_verify_table_field@@Base+0x6c>
   3247c:	ldr	r1, [ip, #12]
   32480:	uxtah	r0, r1, r0
   32484:	ldrh	r1, [r0]
   32488:	cmp	r1, #0
   3248c:	beq	324c0 <flatcc_verify_table_field@@Base+0x6c>
   32490:	ldrh	r2, [ip, #20]
   32494:	add	r6, r1, #4
   32498:	mov	r0, #13
   3249c:	cmp	r6, r2
   324a0:	bhi	324b8 <flatcc_verify_table_field@@Base+0x64>
   324a4:	ldr	r0, [ip, #16]
   324a8:	add	r4, r0, r1
   324ac:	mov	r0, #12
   324b0:	tst	r4, #3
   324b4:	beq	324d4 <flatcc_verify_table_field@@Base+0x80>
   324b8:	sub	sp, fp, #16
   324bc:	pop	{r4, r5, r6, sl, fp, pc}
   324c0:	cmp	r2, #0
   324c4:	movwne	r2, #1
   324c8:	lsl	r0, r2, #2
   324cc:	sub	sp, fp, #16
   324d0:	pop	{r4, r5, r6, sl, fp, pc}
   324d4:	cmp	r4, #0
   324d8:	beq	325a4 <flatcc_verify_table_field@@Base+0x150>
   324dc:	ldm	ip, {r1, lr}
   324e0:	ldr	r2, [ip, #8]
   324e4:	ldr	r0, [r1, r4]
   324e8:	subs	r2, r2, #1
   324ec:	str	r2, [sp, #8]
   324f0:	beq	325b0 <flatcc_verify_table_field@@Base+0x15c>
   324f4:	add	r2, r0, r4
   324f8:	mov	r0, #15
   324fc:	tst	r2, #3
   32500:	bne	324b8 <flatcc_verify_table_field@@Base+0x64>
   32504:	cmp	r2, r4
   32508:	bls	324b8 <flatcc_verify_table_field@@Base+0x64>
   3250c:	add	r6, r2, #4
   32510:	cmp	r6, lr
   32514:	bhi	324b8 <flatcc_verify_table_field@@Base+0x64>
   32518:	str	r2, [sp, #16]
   3251c:	ldr	r0, [r1, r2]
   32520:	sub	r5, r2, r0
   32524:	mov	r0, #29
   32528:	tst	r5, #-2147483647	; 0x80000001
   3252c:	bne	324b8 <flatcc_verify_table_field@@Base+0x64>
   32530:	add	r4, r5, #2
   32534:	mov	r0, #27
   32538:	cmp	r4, lr
   3253c:	bhi	324b8 <flatcc_verify_table_field@@Base+0x64>
   32540:	mov	ip, r1
   32544:	mov	r0, #30
   32548:	ldrh	r6, [ip, r5]!
   3254c:	tst	r6, #1
   32550:	strh	r6, [sp, #22]
   32554:	bne	324b8 <flatcc_verify_table_field@@Base+0x64>
   32558:	add	r5, r5, r6
   3255c:	cmp	r5, lr
   32560:	bhi	324b8 <flatcc_verify_table_field@@Base+0x64>
   32564:	mov	r0, #28
   32568:	cmp	r6, #4
   3256c:	bcc	324b8 <flatcc_verify_table_field@@Base+0x64>
   32570:	add	r0, r1, r4
   32574:	sub	r2, lr, r2
   32578:	ldrh	r4, [r0]
   3257c:	mov	r0, #20
   32580:	cmp	r2, r4
   32584:	strh	r4, [sp, #20]
   32588:	bcc	324b8 <flatcc_verify_table_field@@Base+0x64>
   3258c:	mov	r0, sp
   32590:	stm	sp, {r1, lr}
   32594:	str	ip, [sp, #12]
   32598:	blx	r3
   3259c:	sub	sp, fp, #16
   325a0:	pop	{r4, r5, r6, sl, fp, pc}
   325a4:	mov	r0, #0
   325a8:	sub	sp, fp, #16
   325ac:	pop	{r4, r5, r6, sl, fp, pc}
   325b0:	mov	r0, #3
   325b4:	sub	sp, fp, #16
   325b8:	pop	{r4, r5, r6, sl, fp, pc}

000325bc <flatcc_verify_table_vector_field@@Base>:
   325bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   325c0:	add	fp, sp, #28
   325c4:	sub	sp, sp, #28
   325c8:	mov	r4, r3
   325cc:	mov	r3, r0
   325d0:	mov	r0, #4
   325d4:	add	r0, r0, r1, lsl #1
   325d8:	ldrh	r7, [r3, #22]
   325dc:	uxth	r1, r0
   325e0:	cmp	r1, r7
   325e4:	bcs	3262c <flatcc_verify_table_vector_field@@Base+0x70>
   325e8:	ldr	r1, [r3, #12]
   325ec:	uxtah	r0, r1, r0
   325f0:	ldrh	r1, [r0]
   325f4:	cmp	r1, #0
   325f8:	beq	3262c <flatcc_verify_table_vector_field@@Base+0x70>
   325fc:	ldrh	r2, [r3, #20]
   32600:	add	r7, r1, #4
   32604:	mov	r0, #13
   32608:	cmp	r7, r2
   3260c:	bhi	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   32610:	ldr	r2, [r3, #16]
   32614:	mov	r0, #12
   32618:	add	r6, r2, r1
   3261c:	tst	r6, #3
   32620:	beq	32640 <flatcc_verify_table_vector_field@@Base+0x84>
   32624:	sub	sp, fp, #28
   32628:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3262c:	cmp	r2, #0
   32630:	movwne	r2, #1
   32634:	lsl	r0, r2, #2
   32638:	sub	sp, fp, #28
   3263c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32640:	cmp	r6, #0
   32644:	beq	327a0 <flatcc_verify_table_vector_field@@Base+0x1e4>
   32648:	ldr	r7, [r3, #8]
   3264c:	cmp	r7, #1
   32650:	blt	3286c <flatcc_verify_table_vector_field@@Base+0x2b0>
   32654:	ldr	r9, [r3]
   32658:	mov	r0, #16
   3265c:	ldr	ip, [r9, r6]
   32660:	add	r5, ip, r6
   32664:	cmp	r5, r6
   32668:	bls	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   3266c:	ldr	lr, [r3, #4]
   32670:	add	r8, r5, #4
   32674:	cmp	r8, lr
   32678:	bhi	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   3267c:	ands	r3, r8, #3
   32680:	bne	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   32684:	ldr	sl, [r9, r5]
   32688:	mov	r0, #25
   3268c:	cmn	sl, #-1073741823	; 0xc0000001
   32690:	bhi	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   32694:	sub	r0, lr, r5
   32698:	sub	r3, r0, #4
   3269c:	mov	r0, #26
   326a0:	cmp	r3, sl, lsl #2
   326a4:	bcc	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   326a8:	cmp	sl, #0
   326ac:	beq	327a0 <flatcc_verify_table_vector_field@@Base+0x1e4>
   326b0:	sub	r0, lr, ip
   326b4:	sub	r0, r0, r2
   326b8:	sub	r0, r0, r1
   326bc:	sub	r5, r0, #4
   326c0:	sub	r0, r7, #2
   326c4:	str	r0, [sp]
   326c8:	ldr	r1, [sp]
   326cc:	ldr	r0, [r9, r8]
   326d0:	cmp	r1, #0
   326d4:	str	r1, [sp, #12]
   326d8:	beq	32864 <flatcc_verify_table_vector_field@@Base+0x2a8>
   326dc:	add	r1, r8, r0
   326e0:	add	ip, r1, #4
   326e4:	tst	r1, #3
   326e8:	bne	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   326ec:	cmp	r1, r8
   326f0:	bls	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   326f4:	cmp	ip, lr
   326f8:	bhi	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   326fc:	str	r1, [sp, #20]
   32700:	add	r3, r9, r0
   32704:	ldr	r6, [r3, r8]
   32708:	sub	r7, r0, r6
   3270c:	add	r3, r8, r7
   32710:	tst	r3, #-2147483647	; 0x80000001
   32714:	bne	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   32718:	add	r2, r3, #2
   3271c:	cmp	r2, lr
   32720:	bhi	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   32724:	add	r2, r9, r7
   32728:	add	r2, r2, r8
   3272c:	ldrh	r7, [r2]
   32730:	cmp	r7, #4
   32734:	strh	r7, [sp, #26]
   32738:	bcc	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   3273c:	ands	r2, r7, #1
   32740:	bne	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   32744:	add	r2, r0, r7
   32748:	sub	r2, r2, r6
   3274c:	add	r2, r8, r2
   32750:	cmp	r2, lr
   32754:	bhi	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   32758:	add	r3, r9, r3
   3275c:	sub	r0, r5, r0
   32760:	ldrh	r2, [r3, #2]
   32764:	cmp	r0, r2
   32768:	strh	r2, [sp, #24]
   3276c:	bcc	327ac <flatcc_verify_table_vector_field@@Base+0x1f0>
   32770:	add	r0, sp, #4
   32774:	stmib	sp, {r9, lr}
   32778:	mov	r6, lr
   3277c:	str	r3, [sp, #16]
   32780:	blx	r4
   32784:	cmp	r0, #0
   32788:	bne	32878 <flatcc_verify_table_vector_field@@Base+0x2bc>
   3278c:	subs	sl, sl, #1
   32790:	sub	r5, r5, #4
   32794:	add	r8, r8, #4
   32798:	mov	lr, r6
   3279c:	bne	326c8 <flatcc_verify_table_vector_field@@Base+0x10c>
   327a0:	mov	r0, #0
   327a4:	sub	sp, fp, #28
   327a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   327ac:	ldr	r0, [sp]
   327b0:	str	r0, [sp, #12]
   327b4:	mov	r0, #15
   327b8:	tst	r1, #3
   327bc:	bne	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   327c0:	cmp	r1, r8
   327c4:	bls	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   327c8:	cmp	ip, lr
   327cc:	bhi	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   327d0:	str	r1, [sp, #20]
   327d4:	ldr	r0, [r9, r1]
   327d8:	sub	r7, r1, r0
   327dc:	mov	r0, #29
   327e0:	tst	r7, #-2147483647	; 0x80000001
   327e4:	bne	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   327e8:	add	r3, r7, #2
   327ec:	mov	r0, #27
   327f0:	cmp	r3, lr
   327f4:	bhi	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   327f8:	mov	r2, r9
   327fc:	mov	r0, #30
   32800:	ldrh	r6, [r2, r7]!
   32804:	tst	r6, #1
   32808:	strh	r6, [sp, #26]
   3280c:	bne	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   32810:	add	r7, r7, r6
   32814:	cmp	r7, lr
   32818:	bhi	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   3281c:	mov	r0, #28
   32820:	cmp	r6, #4
   32824:	bcc	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   32828:	add	r0, r9, r3
   3282c:	sub	r1, lr, r1
   32830:	mov	r5, lr
   32834:	ldrh	r3, [r0]
   32838:	mov	r0, #20
   3283c:	cmp	r1, r3
   32840:	strh	r3, [sp, #24]
   32844:	bcc	32624 <flatcc_verify_table_vector_field@@Base+0x68>
   32848:	add	r0, sp, #4
   3284c:	str	r5, [sp, #8]
   32850:	str	r9, [sp, #4]
   32854:	str	r2, [sp, #16]
   32858:	blx	r4
   3285c:	sub	sp, fp, #28
   32860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32864:	mov	r0, #0
   32868:	str	r0, [sp, #12]
   3286c:	mov	r0, #3
   32870:	sub	sp, fp, #28
   32874:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32878:	ldr	r0, [r9, r8]
   3287c:	ldr	r1, [sp]
   32880:	mov	lr, r6
   32884:	str	r1, [sp, #12]
   32888:	add	r1, r0, r8
   3288c:	add	ip, r1, #4
   32890:	b	327b4 <flatcc_verify_table_vector_field@@Base+0x1f8>

00032894 <flatcc_verify_union_table@@Base>:
   32894:	push	{r4, r5, r6, sl, fp, lr}
   32898:	add	fp, sp, #16
   3289c:	sub	sp, sp, #24
   328a0:	ldr	r5, [r0, #16]
   328a4:	ldr	r2, [r0, #20]
   328a8:	ldr	ip, [r0]
   328ac:	ldr	r3, [r0, #4]
   328b0:	ldr	r0, [r0, #8]
   328b4:	subs	r0, r0, #1
   328b8:	str	r0, [sp, #8]
   328bc:	beq	32974 <flatcc_verify_union_table@@Base+0xe0>
   328c0:	add	r2, r2, r5
   328c4:	mov	r0, #15
   328c8:	tst	r2, #3
   328cc:	bne	3296c <flatcc_verify_union_table@@Base+0xd8>
   328d0:	cmp	r2, r5
   328d4:	bls	3296c <flatcc_verify_union_table@@Base+0xd8>
   328d8:	add	r6, r2, #4
   328dc:	cmp	r6, r3
   328e0:	bhi	3296c <flatcc_verify_union_table@@Base+0xd8>
   328e4:	str	r2, [sp, #16]
   328e8:	ldr	r0, [ip, r2]
   328ec:	sub	r5, r2, r0
   328f0:	mov	r0, #29
   328f4:	tst	r5, #-2147483647	; 0x80000001
   328f8:	bne	3296c <flatcc_verify_union_table@@Base+0xd8>
   328fc:	add	r4, r5, #2
   32900:	mov	r0, #27
   32904:	cmp	r4, r3
   32908:	bhi	3296c <flatcc_verify_union_table@@Base+0xd8>
   3290c:	mov	lr, ip
   32910:	mov	r0, #30
   32914:	ldrh	r6, [lr, r5]!
   32918:	tst	r6, #1
   3291c:	strh	r6, [sp, #22]
   32920:	bne	3296c <flatcc_verify_union_table@@Base+0xd8>
   32924:	add	r5, r5, r6
   32928:	cmp	r5, r3
   3292c:	bhi	3296c <flatcc_verify_union_table@@Base+0xd8>
   32930:	mov	r0, #28
   32934:	cmp	r6, #4
   32938:	bcc	3296c <flatcc_verify_union_table@@Base+0xd8>
   3293c:	add	r0, ip, r4
   32940:	sub	r2, r3, r2
   32944:	ldrh	r4, [r0]
   32948:	mov	r0, #20
   3294c:	cmp	r2, r4
   32950:	strh	r4, [sp, #20]
   32954:	bcc	3296c <flatcc_verify_union_table@@Base+0xd8>
   32958:	mov	r0, sp
   3295c:	str	r3, [sp, #4]
   32960:	str	ip, [sp]
   32964:	str	lr, [sp, #12]
   32968:	blx	r1
   3296c:	sub	sp, fp, #16
   32970:	pop	{r4, r5, r6, sl, fp, pc}
   32974:	mov	r0, #3
   32978:	sub	sp, fp, #16
   3297c:	pop	{r4, r5, r6, sl, fp, pc}

00032980 <flatcc_verify_union_struct@@Base>:
   32980:	push	{fp, lr}
   32984:	mov	fp, sp
   32988:	ldr	lr, [r0, #20]
   3298c:	mov	r3, r0
   32990:	mov	r0, #18
   32994:	cmp	lr, #0
   32998:	beq	329d4 <flatcc_verify_union_struct@@Base+0x54>
   3299c:	ldr	ip, [r3, #4]
   329a0:	ldr	r3, [r3, #16]
   329a4:	add	r3, r3, lr
   329a8:	cmp	r3, ip
   329ac:	bhi	329d4 <flatcc_verify_union_struct@@Base+0x54>
   329b0:	adds	r1, r3, r1
   329b4:	mov	r0, #10
   329b8:	bcs	329d4 <flatcc_verify_union_struct@@Base+0x54>
   329bc:	mov	r0, #9
   329c0:	cmp	r1, ip
   329c4:	pophi	{fp, pc}
   329c8:	sub	r0, r2, #1
   329cc:	ands	r0, r3, r0
   329d0:	movwne	r0, #11
   329d4:	pop	{fp, pc}

000329d8 <flatcc_verify_union_string@@Base>:
   329d8:	push	{fp, lr}
   329dc:	mov	fp, sp
   329e0:	mov	r1, r0
   329e4:	ldr	r3, [r0, #16]
   329e8:	ldr	r0, [r0, #20]
   329ec:	add	r2, r0, r3
   329f0:	mov	r0, #17
   329f4:	tst	r2, #3
   329f8:	bne	32a40 <flatcc_verify_union_string@@Base+0x68>
   329fc:	cmp	r2, r3
   32a00:	bls	32a40 <flatcc_verify_union_string@@Base+0x68>
   32a04:	ldr	r3, [r1, #4]
   32a08:	add	ip, r2, #4
   32a0c:	cmp	r3, ip
   32a10:	bcc	32a40 <flatcc_verify_union_string@@Base+0x68>
   32a14:	ldr	r1, [r1]
   32a18:	sub	lr, r3, ip
   32a1c:	mov	r0, #8
   32a20:	ldr	r2, [r1, r2]
   32a24:	add	r3, r2, #1
   32a28:	cmp	lr, r3
   32a2c:	popcc	{fp, pc}
   32a30:	add	r0, r1, ip
   32a34:	ldrb	r0, [r0, r2]
   32a38:	cmp	r0, #0
   32a3c:	movwne	r0, #7
   32a40:	pop	{fp, pc}

00032a44 <flatcc_verify_buffer_header@@Base>:
   32a44:	push	{r4, sl, fp, lr}
   32a48:	add	fp, sp, #8
   32a4c:	sub	sp, sp, #8
   32a50:	mov	r4, r0
   32a54:	mov	r0, #5
   32a58:	tst	r4, #3
   32a5c:	bne	32ab0 <flatcc_verify_buffer_header@@Base+0x6c>
   32a60:	mov	r0, #6
   32a64:	cmn	r1, #9
   32a68:	bhi	32ab0 <flatcc_verify_buffer_header@@Base+0x6c>
   32a6c:	mov	r0, #1
   32a70:	cmp	r1, #8
   32a74:	bcc	32ab0 <flatcc_verify_buffer_header@@Base+0x6c>
   32a78:	cmp	r2, #0
   32a7c:	beq	32ab8 <flatcc_verify_buffer_header@@Base+0x74>
   32a80:	mov	r0, #0
   32a84:	mov	r1, r2
   32a88:	mov	r2, #4
   32a8c:	str	r0, [sp, #4]
   32a90:	add	r0, sp, #4
   32a94:	bl	14ef0 <strncpy@plt>
   32a98:	ldr	r1, [sp, #4]
   32a9c:	cmp	r1, #0
   32aa0:	ldrne	r2, [r4, #4]
   32aa4:	movne	r0, #2
   32aa8:	cmpne	r2, r1
   32aac:	moveq	r0, #0
   32ab0:	sub	sp, fp, #8
   32ab4:	pop	{r4, sl, fp, pc}
   32ab8:	mov	r0, #0
   32abc:	sub	sp, fp, #8
   32ac0:	pop	{r4, sl, fp, pc}

00032ac4 <flatcc_verify_typed_buffer_header@@Base>:
   32ac4:	mov	r3, r0
   32ac8:	mov	r0, #5
   32acc:	tst	r3, #3
   32ad0:	bne	32b04 <flatcc_verify_typed_buffer_header@@Base+0x40>
   32ad4:	mov	r0, #6
   32ad8:	cmn	r1, #9
   32adc:	bhi	32b04 <flatcc_verify_typed_buffer_header@@Base+0x40>
   32ae0:	mov	r0, #1
   32ae4:	cmp	r1, #8
   32ae8:	bxcc	lr
   32aec:	cmp	r2, #0
   32af0:	beq	32b08 <flatcc_verify_typed_buffer_header@@Base+0x44>
   32af4:	ldr	r1, [r3, #4]
   32af8:	mov	r0, #2
   32afc:	cmp	r1, r2
   32b00:	moveq	r0, #0
   32b04:	bx	lr
   32b08:	mov	r0, #0
   32b0c:	bx	lr

00032b10 <flatcc_verify_struct_as_root@@Base>:
   32b10:	push	{r4, r5, r6, r7, fp, lr}
   32b14:	add	fp, sp, #16
   32b18:	sub	sp, sp, #8
   32b1c:	mov	r5, r0
   32b20:	mov	r0, #5
   32b24:	tst	r5, #3
   32b28:	bne	32bc0 <flatcc_verify_struct_as_root@@Base+0xb0>
   32b2c:	mov	r4, r1
   32b30:	mov	r0, #6
   32b34:	cmn	r1, #9
   32b38:	bhi	32bc0 <flatcc_verify_struct_as_root@@Base+0xb0>
   32b3c:	mov	r0, #1
   32b40:	cmp	r4, #8
   32b44:	bcc	32bc0 <flatcc_verify_struct_as_root@@Base+0xb0>
   32b48:	mov	r6, r3
   32b4c:	mov	r7, r2
   32b50:	cmp	r2, #0
   32b54:	beq	32b84 <flatcc_verify_struct_as_root@@Base+0x74>
   32b58:	mov	r0, #0
   32b5c:	mov	r1, r7
   32b60:	mov	r2, #4
   32b64:	str	r0, [sp]
   32b68:	mov	r0, sp
   32b6c:	bl	14ef0 <strncpy@plt>
   32b70:	ldr	r0, [sp]
   32b74:	cmp	r0, #0
   32b78:	ldrne	r1, [r5, #4]
   32b7c:	cmpne	r1, r0
   32b80:	bne	32bc8 <flatcc_verify_struct_as_root@@Base+0xb8>
   32b84:	ldr	r1, [r5]
   32b88:	mov	r0, #18
   32b8c:	sub	r2, r1, #1
   32b90:	cmp	r2, r4
   32b94:	bcs	32bc0 <flatcc_verify_struct_as_root@@Base+0xb0>
   32b98:	adds	r2, r1, r6
   32b9c:	mov	r0, #10
   32ba0:	bcs	32bc0 <flatcc_verify_struct_as_root@@Base+0xb0>
   32ba4:	mov	r0, #9
   32ba8:	cmp	r2, r4
   32bac:	bhi	32bc0 <flatcc_verify_struct_as_root@@Base+0xb0>
   32bb0:	ldr	r0, [fp, #8]
   32bb4:	sub	r0, r0, #1
   32bb8:	ands	r0, r1, r0
   32bbc:	movwne	r0, #11
   32bc0:	sub	sp, fp, #16
   32bc4:	pop	{r4, r5, r6, r7, fp, pc}
   32bc8:	mov	r0, #0
   32bcc:	mov	r1, r7
   32bd0:	mov	r2, #4
   32bd4:	str	r0, [sp, #4]
   32bd8:	add	r0, sp, #4
   32bdc:	bl	14ef0 <strncpy@plt>
   32be0:	ldr	r0, [sp, #4]
   32be4:	ldr	r1, [r5, #4]
   32be8:	subs	r1, r1, r0
   32bec:	movwne	r1, #1
   32bf0:	cmp	r0, #0
   32bf4:	lslne	r0, r1, #1
   32bf8:	sub	sp, fp, #16
   32bfc:	pop	{r4, r5, r6, r7, fp, pc}

00032c00 <flatcc_verify_struct_as_typed_root@@Base>:
   32c00:	push	{fp, lr}
   32c04:	mov	fp, sp
   32c08:	mov	ip, r0
   32c0c:	mov	r0, #5
   32c10:	tst	ip, #3
   32c14:	bne	32c84 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32c18:	mov	r0, #6
   32c1c:	cmn	r1, #9
   32c20:	bhi	32c84 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32c24:	mov	r0, #1
   32c28:	cmp	r1, #8
   32c2c:	bcc	32c84 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32c30:	cmp	r2, #0
   32c34:	beq	32c48 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   32c38:	ldr	lr, [ip, #4]
   32c3c:	mov	r0, #2
   32c40:	cmp	lr, r2
   32c44:	bne	32c84 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32c48:	ldr	ip, [ip]
   32c4c:	mov	r0, #18
   32c50:	sub	r2, ip, #1
   32c54:	cmp	r2, r1
   32c58:	bcs	32c84 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32c5c:	adds	r3, ip, r3
   32c60:	mov	r0, #10
   32c64:	bcs	32c84 <flatcc_verify_struct_as_typed_root@@Base+0x84>
   32c68:	mov	r0, #9
   32c6c:	cmp	r3, r1
   32c70:	pophi	{fp, pc}
   32c74:	ldr	r0, [fp, #8]
   32c78:	sub	r0, r0, #1
   32c7c:	ands	r0, ip, r0
   32c80:	movwne	r0, #11
   32c84:	pop	{fp, pc}

00032c88 <flatcc_verify_table_as_root@@Base>:
   32c88:	push	{r4, r5, r6, r7, fp, lr}
   32c8c:	add	fp, sp, #16
   32c90:	sub	sp, sp, #24
   32c94:	mov	r4, r0
   32c98:	mov	r0, #5
   32c9c:	tst	r4, #3
   32ca0:	bne	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32ca4:	mov	r6, r1
   32ca8:	mov	r0, #6
   32cac:	cmn	r1, #9
   32cb0:	bhi	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32cb4:	mov	r0, #1
   32cb8:	cmp	r6, #8
   32cbc:	bcc	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32cc0:	mov	r5, r3
   32cc4:	mov	r7, r2
   32cc8:	cmp	r2, #0
   32ccc:	beq	32cfc <flatcc_verify_table_as_root@@Base+0x74>
   32cd0:	mov	r0, #0
   32cd4:	mov	r1, r7
   32cd8:	mov	r2, #4
   32cdc:	str	r0, [sp]
   32ce0:	mov	r0, sp
   32ce4:	bl	14ef0 <strncpy@plt>
   32ce8:	ldr	r0, [sp]
   32cec:	cmp	r0, #0
   32cf0:	ldrne	r1, [r4, #4]
   32cf4:	cmpne	r1, r0
   32cf8:	bne	32db4 <flatcc_verify_table_as_root@@Base+0x12c>
   32cfc:	ldr	r1, [r4]
   32d00:	mov	r0, #99	; 0x63
   32d04:	str	r0, [sp, #8]
   32d08:	mov	r0, #15
   32d0c:	tst	r1, #3
   32d10:	bne	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d14:	cmp	r1, #0
   32d18:	beq	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d1c:	add	r2, r1, #4
   32d20:	cmp	r2, r6
   32d24:	bhi	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d28:	str	r1, [sp, #16]
   32d2c:	ldr	r0, [r4, r1]
   32d30:	sub	r7, r1, r0
   32d34:	mov	r0, #29
   32d38:	tst	r7, #-2147483647	; 0x80000001
   32d3c:	bne	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d40:	add	r3, r7, #2
   32d44:	mov	r0, #27
   32d48:	cmp	r3, r6
   32d4c:	bhi	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d50:	mov	ip, r4
   32d54:	mov	r0, #30
   32d58:	ldrh	r2, [ip, r7]!
   32d5c:	tst	r2, #1
   32d60:	strh	r2, [sp, #22]
   32d64:	bne	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d68:	add	r7, r7, r2
   32d6c:	cmp	r7, r6
   32d70:	bhi	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d74:	mov	r0, #28
   32d78:	cmp	r2, #4
   32d7c:	bcc	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d80:	add	r0, r4, r3
   32d84:	sub	r1, r6, r1
   32d88:	ldrh	r2, [r0]
   32d8c:	mov	r0, #20
   32d90:	cmp	r1, r2
   32d94:	strh	r2, [sp, #20]
   32d98:	bcc	32dac <flatcc_verify_table_as_root@@Base+0x124>
   32d9c:	mov	r0, sp
   32da0:	stm	sp, {r4, r6}
   32da4:	str	ip, [sp, #12]
   32da8:	blx	r5
   32dac:	sub	sp, fp, #16
   32db0:	pop	{r4, r5, r6, r7, fp, pc}
   32db4:	mov	r0, #0
   32db8:	mov	r1, r7
   32dbc:	mov	r2, #4
   32dc0:	str	r0, [sp]
   32dc4:	mov	r0, sp
   32dc8:	bl	14ef0 <strncpy@plt>
   32dcc:	ldr	r0, [sp]
   32dd0:	ldr	r1, [r4, #4]
   32dd4:	subs	r1, r1, r0
   32dd8:	movwne	r1, #1
   32ddc:	cmp	r0, #0
   32de0:	lslne	r0, r1, #1
   32de4:	sub	sp, fp, #16
   32de8:	pop	{r4, r5, r6, r7, fp, pc}

00032dec <flatcc_verify_table_as_typed_root@@Base>:
   32dec:	push	{r4, r5, r6, sl, fp, lr}
   32df0:	add	fp, sp, #16
   32df4:	sub	sp, sp, #24
   32df8:	mov	ip, #5
   32dfc:	tst	r0, #3
   32e00:	bne	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e04:	mov	ip, #6
   32e08:	cmn	r1, #9
   32e0c:	bhi	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e10:	mov	ip, #1
   32e14:	cmp	r1, #8
   32e18:	bcc	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e1c:	cmp	r2, #0
   32e20:	beq	32e34 <flatcc_verify_table_as_typed_root@@Base+0x48>
   32e24:	ldr	r6, [r0, #4]
   32e28:	mov	ip, #2
   32e2c:	cmp	r6, r2
   32e30:	bne	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e34:	ldr	r2, [r0]
   32e38:	mov	r6, #99	; 0x63
   32e3c:	mov	ip, #15
   32e40:	str	r6, [sp, #8]
   32e44:	tst	r2, #3
   32e48:	bne	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e4c:	cmp	r2, #0
   32e50:	beq	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e54:	add	r6, r2, #4
   32e58:	cmp	r6, r1
   32e5c:	bhi	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e60:	str	r2, [sp, #16]
   32e64:	mov	ip, #29
   32e68:	ldr	r6, [r0, r2]
   32e6c:	sub	r5, r2, r6
   32e70:	tst	r5, #-2147483647	; 0x80000001
   32e74:	bne	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e78:	add	r4, r5, #2
   32e7c:	mov	ip, #27
   32e80:	cmp	r4, r1
   32e84:	bhi	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32e88:	mov	lr, r0
   32e8c:	mov	ip, #30
   32e90:	ldrh	r6, [lr, r5]!
   32e94:	tst	r6, #1
   32e98:	strh	r6, [sp, #22]
   32e9c:	bne	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32ea0:	add	r5, r5, r6
   32ea4:	cmp	r5, r1
   32ea8:	bhi	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32eac:	mov	ip, #28
   32eb0:	cmp	r6, #4
   32eb4:	bcc	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32eb8:	add	r6, r0, r4
   32ebc:	sub	r2, r1, r2
   32ec0:	mov	ip, #20
   32ec4:	ldrh	r4, [r6]
   32ec8:	cmp	r2, r4
   32ecc:	strh	r4, [sp, #20]
   32ed0:	bcc	32ee8 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   32ed4:	stm	sp, {r0, r1}
   32ed8:	mov	r0, sp
   32edc:	str	lr, [sp, #12]
   32ee0:	blx	r3
   32ee4:	mov	ip, r0
   32ee8:	mov	r0, ip
   32eec:	sub	sp, fp, #16
   32ef0:	pop	{r4, r5, r6, sl, fp, pc}

00032ef4 <flatcc_verify_struct_as_nested_root@@Base>:
   32ef4:	push	{r4, r5, r6, r7, fp, lr}
   32ef8:	add	fp, sp, #16
   32efc:	sub	sp, sp, #8
   32f00:	mov	r7, #4
   32f04:	ldrh	r4, [r0, #22]
   32f08:	ldr	lr, [fp, #12]
   32f0c:	add	r5, r7, r1, lsl #1
   32f10:	uxth	ip, r5
   32f14:	cmp	ip, r4
   32f18:	bcs	32fa0 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   32f1c:	ldr	r1, [r0, #12]
   32f20:	uxtah	r5, r1, r5
   32f24:	ldrh	r5, [r5]
   32f28:	cmp	r5, #0
   32f2c:	beq	32fa0 <flatcc_verify_struct_as_nested_root@@Base+0xac>
   32f30:	ldrh	r4, [r0, #20]
   32f34:	add	r6, r5, #4
   32f38:	cmp	r6, r4
   32f3c:	bhi	32fb4 <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   32f40:	ldr	r4, [r0, #16]
   32f44:	add	r6, r4, r5
   32f48:	tst	r6, #3
   32f4c:	bne	32fb4 <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   32f50:	cmp	r6, #0
   32f54:	beq	33064 <flatcc_verify_struct_as_nested_root@@Base+0x170>
   32f58:	ldr	r4, [r0]
   32f5c:	ldr	r5, [r4, r6]
   32f60:	add	r5, r5, r6
   32f64:	cmp	r5, r6
   32f68:	bls	32fb4 <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   32f6c:	ldr	r6, [r0, #4]
   32f70:	add	r7, r5, #4
   32f74:	cmp	r7, r6
   32f78:	bhi	32fb4 <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   32f7c:	ands	r7, r7, #3
   32f80:	bne	32fb4 <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   32f84:	ldr	r4, [r4, r5]
   32f88:	sub	r5, r6, r5
   32f8c:	sub	r5, r5, #4
   32f90:	mul	r4, r4, lr
   32f94:	cmp	r5, r4
   32f98:	bcc	32fb4 <flatcc_verify_struct_as_nested_root@@Base+0xc0>
   32f9c:	b	33064 <flatcc_verify_struct_as_nested_root@@Base+0x170>
   32fa0:	cmp	r2, #0
   32fa4:	beq	33054 <flatcc_verify_struct_as_nested_root@@Base+0x160>
   32fa8:	cmp	ip, r4
   32fac:	bcs	33044 <flatcc_verify_struct_as_nested_root@@Base+0x150>
   32fb0:	ldr	r1, [r0, #12]
   32fb4:	add	r1, r1, ip
   32fb8:	ldrh	r3, [r1]
   32fbc:	cmp	r3, #0
   32fc0:	beq	33044 <flatcc_verify_struct_as_nested_root@@Base+0x150>
   32fc4:	ldrh	r2, [r0, #20]
   32fc8:	add	r7, r3, #4
   32fcc:	mov	r1, #13
   32fd0:	cmp	r7, r2
   32fd4:	bhi	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   32fd8:	ldr	r1, [r0, #16]
   32fdc:	add	r5, r1, r3
   32fe0:	mov	r1, #12
   32fe4:	tst	r5, #3
   32fe8:	bne	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   32fec:	cmp	r5, #0
   32ff0:	beq	330b4 <flatcc_verify_struct_as_nested_root@@Base+0x1c0>
   32ff4:	ldr	r2, [r0]
   32ff8:	ldr	r1, [r2, r5]
   32ffc:	add	r3, r1, r5
   33000:	mov	r1, #16
   33004:	cmp	r3, r5
   33008:	bls	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   3300c:	ldr	r0, [r0, #4]
   33010:	add	r7, r3, #4
   33014:	cmp	r7, r0
   33018:	bhi	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   3301c:	ands	r7, r7, #3
   33020:	bne	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   33024:	ldr	r1, [r2, r3]
   33028:	sub	r0, r0, r3
   3302c:	sub	r0, r0, #4
   33030:	mul	r2, r1, lr
   33034:	mov	r1, #0
   33038:	cmp	r0, r2
   3303c:	movwcc	r1, #26
   33040:	b	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   33044:	cmp	r2, #0
   33048:	movwne	r2, #1
   3304c:	lsl	r1, r2, #2
   33050:	b	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   33054:	mov	r1, #0
   33058:	cmp	ip, r4
   3305c:	bcs	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   33060:	ldr	r1, [r0, #12]
   33064:	add	r1, r1, ip
   33068:	ldrh	r2, [r1]
   3306c:	mov	r1, #0
   33070:	cmp	r2, #0
   33074:	beq	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   33078:	ldr	r7, [r0]
   3307c:	ldr	r0, [r0, #16]
   33080:	add	r0, r7, r0
   33084:	adds	r0, r0, r2
   33088:	beq	330b8 <flatcc_verify_struct_as_nested_root@@Base+0x1c4>
   3308c:	ldr	r2, [r0]
   33090:	ldr	ip, [fp, #8]
   33094:	ldr	r1, [r2, r0]!
   33098:	str	lr, [sp]
   3309c:	add	r0, r2, #4
   330a0:	mov	r2, r3
   330a4:	mov	r3, ip
   330a8:	bl	32b10 <flatcc_verify_struct_as_root@@Base>
   330ac:	sub	sp, fp, #16
   330b0:	pop	{r4, r5, r6, r7, fp, pc}
   330b4:	mov	r1, #0
   330b8:	mov	r0, r1
   330bc:	sub	sp, fp, #16
   330c0:	pop	{r4, r5, r6, r7, fp, pc}

000330c4 <flatcc_verify_table_as_nested_root@@Base>:
   330c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   330c8:	add	fp, sp, #24
   330cc:	sub	sp, sp, #24
   330d0:	mov	r4, r0
   330d4:	mov	r0, #4
   330d8:	ldr	r8, [fp, #8]
   330dc:	mov	r5, r3
   330e0:	add	r6, r0, r1, lsl #1
   330e4:	ldrh	r7, [r4, #22]
   330e8:	uxth	r3, r6
   330ec:	cmp	r3, r7
   330f0:	bcs	33178 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   330f4:	ldr	r0, [r4, #12]
   330f8:	uxtah	r6, r0, r6
   330fc:	ldrh	r6, [r6]
   33100:	cmp	r6, #0
   33104:	beq	33178 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   33108:	ldrh	r7, [r4, #20]
   3310c:	add	r1, r6, #4
   33110:	cmp	r1, r7
   33114:	bhi	3318c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33118:	ldr	r1, [r4, #16]
   3311c:	add	r7, r1, r6
   33120:	tst	r7, #3
   33124:	bne	3318c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33128:	cmp	r7, #0
   3312c:	beq	33244 <flatcc_verify_table_as_nested_root@@Base+0x180>
   33130:	ldr	ip, [r4]
   33134:	ldr	r1, [ip, r7]
   33138:	add	r6, r1, r7
   3313c:	cmp	r6, r7
   33140:	bls	3318c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33144:	ldr	lr, [r4, #4]
   33148:	add	r7, r6, #4
   3314c:	cmp	r7, lr
   33150:	bhi	3318c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33154:	ands	r1, r7, #3
   33158:	bne	3318c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   3315c:	ldr	r1, [ip, r6]
   33160:	sub	r7, lr, r6
   33164:	sub	r7, r7, #4
   33168:	mul	r1, r1, r8
   3316c:	cmp	r7, r1
   33170:	bcc	3318c <flatcc_verify_table_as_nested_root@@Base+0xc8>
   33174:	b	33244 <flatcc_verify_table_as_nested_root@@Base+0x180>
   33178:	cmp	r2, #0
   3317c:	beq	33234 <flatcc_verify_table_as_nested_root@@Base+0x170>
   33180:	cmp	r3, r7
   33184:	bcs	33220 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   33188:	ldr	r0, [r4, #12]
   3318c:	add	r0, r0, r3
   33190:	ldrh	r3, [r0]
   33194:	cmp	r3, #0
   33198:	beq	33220 <flatcc_verify_table_as_nested_root@@Base+0x15c>
   3319c:	ldrh	r1, [r4, #20]
   331a0:	add	r2, r3, #4
   331a4:	mov	r0, #13
   331a8:	cmp	r2, r1
   331ac:	bhi	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   331b0:	ldr	r0, [r4, #16]
   331b4:	add	r7, r0, r3
   331b8:	mov	r0, #12
   331bc:	tst	r7, #3
   331c0:	bne	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   331c4:	cmp	r7, #0
   331c8:	beq	33394 <flatcc_verify_table_as_nested_root@@Base+0x2d0>
   331cc:	ldr	r2, [r4]
   331d0:	ldr	r0, [r2, r7]
   331d4:	add	r3, r0, r7
   331d8:	mov	r0, #16
   331dc:	cmp	r3, r7
   331e0:	bls	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   331e4:	ldr	r7, [r4, #4]
   331e8:	add	r6, r3, #4
   331ec:	cmp	r6, r7
   331f0:	bhi	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   331f4:	ands	r1, r6, #3
   331f8:	bne	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   331fc:	ldr	r0, [r2, r3]
   33200:	mul	r1, r0, r8
   33204:	sub	r0, r7, r3
   33208:	sub	r2, r0, #4
   3320c:	mov	r0, #0
   33210:	cmp	r2, r1
   33214:	movwcc	r0, #26
   33218:	sub	sp, fp, #24
   3321c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33220:	cmp	r2, #0
   33224:	movwne	r2, #1
   33228:	lsl	r0, r2, #2
   3322c:	sub	sp, fp, #24
   33230:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33234:	mov	r0, #0
   33238:	cmp	r3, r7
   3323c:	bcs	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33240:	ldr	r0, [r4, #12]
   33244:	add	r0, r0, r3
   33248:	ldrh	r1, [r0]
   3324c:	mov	r0, #0
   33250:	cmp	r1, #0
   33254:	beq	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33258:	ldr	r2, [r4]
   3325c:	ldr	r3, [r4, #16]
   33260:	add	r2, r2, r3
   33264:	adds	r1, r2, r1
   33268:	beq	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3326c:	ldr	r6, [r1]
   33270:	mov	r0, #5
   33274:	ldr	r8, [r6, r1]!
   33278:	add	r7, r6, #4
   3327c:	tst	r7, #3
   33280:	bne	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33284:	mov	r0, #6
   33288:	cmn	r8, #9
   3328c:	bhi	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33290:	mov	r0, #1
   33294:	cmp	r8, #8
   33298:	bcc	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3329c:	cmp	r5, #0
   332a0:	beq	332d0 <flatcc_verify_table_as_nested_root@@Base+0x20c>
   332a4:	mov	r0, #0
   332a8:	mov	r1, r5
   332ac:	mov	r2, #4
   332b0:	str	r0, [sp]
   332b4:	mov	r0, sp
   332b8:	bl	14ef0 <strncpy@plt>
   332bc:	ldr	r0, [sp]
   332c0:	cmp	r0, #0
   332c4:	ldrne	r1, [r6, #8]
   332c8:	cmpne	r1, r0
   332cc:	bne	333a0 <flatcc_verify_table_as_nested_root@@Base+0x2dc>
   332d0:	ldr	r0, [r4, #8]
   332d4:	ldr	r1, [r7]
   332d8:	subs	r0, r0, #1
   332dc:	str	r0, [sp, #8]
   332e0:	beq	333d8 <flatcc_verify_table_as_nested_root@@Base+0x314>
   332e4:	mov	r0, #15
   332e8:	tst	r1, #3
   332ec:	bne	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   332f0:	cmp	r1, #0
   332f4:	beq	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   332f8:	add	r2, r1, #4
   332fc:	cmp	r2, r8
   33300:	bhi	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33304:	str	r1, [sp, #16]
   33308:	ldr	r0, [r7, r1]
   3330c:	sub	r6, r1, r0
   33310:	mov	r0, #29
   33314:	tst	r6, #-2147483647	; 0x80000001
   33318:	bne	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3331c:	add	r3, r6, #2
   33320:	mov	r0, #27
   33324:	cmp	r3, r8
   33328:	bhi	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3332c:	mov	r2, r7
   33330:	mov	r0, #30
   33334:	ldrh	r5, [r2, r6]!
   33338:	tst	r5, #1
   3333c:	strh	r5, [sp, #22]
   33340:	bne	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33344:	add	r6, r6, r5
   33348:	cmp	r6, r8
   3334c:	bhi	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33350:	mov	r0, #28
   33354:	cmp	r5, #4
   33358:	bcc	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3335c:	add	r0, r7, r3
   33360:	sub	r1, r8, r1
   33364:	ldrh	r3, [r0]
   33368:	mov	r0, #20
   3336c:	cmp	r1, r3
   33370:	strh	r3, [sp, #20]
   33374:	bcc	3338c <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   33378:	ldr	r1, [fp, #12]
   3337c:	mov	r0, sp
   33380:	stm	sp, {r7, r8}
   33384:	str	r2, [sp, #12]
   33388:	blx	r1
   3338c:	sub	sp, fp, #24
   33390:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33394:	mov	r0, #0
   33398:	sub	sp, fp, #24
   3339c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   333a0:	mov	r0, #0
   333a4:	mov	r1, r5
   333a8:	mov	r2, #4
   333ac:	str	r0, [sp]
   333b0:	mov	r0, sp
   333b4:	bl	14ef0 <strncpy@plt>
   333b8:	ldr	r0, [sp]
   333bc:	ldr	r1, [r6, #8]
   333c0:	subs	r1, r1, r0
   333c4:	movwne	r1, #1
   333c8:	cmp	r0, #0
   333cc:	lslne	r0, r1, #1
   333d0:	sub	sp, fp, #24
   333d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   333d8:	mov	r0, #3
   333dc:	sub	sp, fp, #24
   333e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000333e4 <flatcc_verify_union_field@@Base>:
   333e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   333e8:	add	fp, sp, #28
   333ec:	sub	sp, sp, #28
   333f0:	mov	r7, #2
   333f4:	ldrh	r4, [r0, #22]
   333f8:	lsl	r5, r1, #1
   333fc:	add	r7, r7, r1, lsl #1
   33400:	uxth	r6, r7
   33404:	cmp	r6, r4
   33408:	bcs	33500 <flatcc_verify_union_field@@Base+0x11c>
   3340c:	ldr	r6, [r0, #12]
   33410:	uxtah	r1, r6, r7
   33414:	ldrh	ip, [r1]
   33418:	cmp	ip, #0
   3341c:	beq	33500 <flatcc_verify_union_field@@Base+0x11c>
   33420:	ldrh	r7, [r0, #20]
   33424:	mov	r1, #13
   33428:	cmp	ip, r7
   3342c:	bcs	33534 <flatcc_verify_union_field@@Base+0x150>
   33430:	add	r7, r5, #4
   33434:	ldr	lr, [r0]
   33438:	mov	r1, #1
   3343c:	uxth	sl, r7
   33440:	cmp	sl, r4
   33444:	bcs	33458 <flatcc_verify_union_field@@Base+0x74>
   33448:	uxtah	r1, r6, r7
   3344c:	ldrh	r1, [r1]
   33450:	clz	r1, r1
   33454:	lsr	r1, r1, #5
   33458:	ldr	r9, [r0, #16]
   3345c:	cmp	r1, #0
   33460:	moveq	r1, #24
   33464:	add	r8, lr, r9
   33468:	ldrb	r5, [r8, ip]
   3346c:	cmpeq	r5, #0
   33470:	beq	33534 <flatcc_verify_union_field@@Base+0x150>
   33474:	mov	r1, #0
   33478:	cmp	r5, #0
   3347c:	beq	33534 <flatcc_verify_union_field@@Base+0x150>
   33480:	cmp	sl, r4
   33484:	bcs	33540 <flatcc_verify_union_field@@Base+0x15c>
   33488:	uxtah	r1, r6, r7
   3348c:	ldrh	r4, [r1]
   33490:	cmp	r4, #0
   33494:	beq	33540 <flatcc_verify_union_field@@Base+0x15c>
   33498:	ldrh	r1, [r0, #20]
   3349c:	add	r2, r4, #4
   334a0:	cmp	r2, r1
   334a4:	mov	r1, #13
   334a8:	bhi	33534 <flatcc_verify_union_field@@Base+0x150>
   334ac:	add	r2, r9, r4
   334b0:	mov	r1, #12
   334b4:	tst	r2, #3
   334b8:	bne	33534 <flatcc_verify_union_field@@Base+0x150>
   334bc:	cmp	r2, #0
   334c0:	mov	r1, #0
   334c4:	beq	33534 <flatcc_verify_union_field@@Base+0x150>
   334c8:	str	lr, [sp, #4]
   334cc:	ldr	r1, [r0, #4]
   334d0:	ldr	r0, [r0, #8]
   334d4:	str	r1, [sp, #8]
   334d8:	str	r2, [sp, #20]
   334dc:	str	r0, [sp, #12]
   334e0:	ldr	r0, [lr, r2]
   334e4:	str	r0, [sp, #24]
   334e8:	ldrb	r0, [r8, ip]
   334ec:	strb	r0, [sp, #16]
   334f0:	add	r0, sp, #4
   334f4:	blx	r3
   334f8:	mov	r1, r0
   334fc:	b	33534 <flatcc_verify_union_field@@Base+0x150>
   33500:	add	r1, r5, #4
   33504:	uxth	r3, r1
   33508:	cmp	r3, r4
   3350c:	bcs	33528 <flatcc_verify_union_field@@Base+0x144>
   33510:	ldr	r0, [r0, #12]
   33514:	uxtah	r0, r0, r1
   33518:	mov	r1, #23
   3351c:	ldrh	r0, [r0]
   33520:	cmp	r0, #0
   33524:	bne	33534 <flatcc_verify_union_field@@Base+0x150>
   33528:	cmp	r2, #0
   3352c:	movwne	r2, #21
   33530:	mov	r1, r2
   33534:	mov	r0, r1
   33538:	sub	sp, fp, #28
   3353c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33540:	cmp	r2, #0
   33544:	movwne	r2, #1
   33548:	lsl	r1, r2, #2
   3354c:	b	33534 <flatcc_verify_union_field@@Base+0x150>

00033550 <flatcc_verify_union_vector_field@@Base>:
   33550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33554:	add	fp, sp, #28
   33558:	sub	sp, sp, #28
   3355c:	mov	r9, r3
   33560:	mov	r3, #2
   33564:	lsl	sl, r1, #1
   33568:	add	r5, r3, r1, lsl #1
   3356c:	ldrh	r1, [r0, #22]
   33570:	uxth	r3, r5
   33574:	cmp	r3, r1
   33578:	bcs	33590 <flatcc_verify_union_vector_field@@Base+0x40>
   3357c:	ldr	r7, [r0, #12]
   33580:	uxtah	r5, r7, r5
   33584:	ldrh	r5, [r5]
   33588:	cmp	r5, #0
   3358c:	bne	335cc <flatcc_verify_union_vector_field@@Base+0x7c>
   33590:	add	r7, sl, #4
   33594:	uxth	r5, r7
   33598:	cmp	r5, r1
   3359c:	bcs	33648 <flatcc_verify_union_vector_field@@Base+0xf8>
   335a0:	cmp	r2, #0
   335a4:	beq	335c0 <flatcc_verify_union_vector_field@@Base+0x70>
   335a8:	ldr	r5, [r0, #12]
   335ac:	uxtah	r7, r5, r7
   335b0:	mov	r5, #22
   335b4:	ldrh	r7, [r7]
   335b8:	cmp	r7, #0
   335bc:	beq	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   335c0:	cmp	r3, r1
   335c4:	bcs	33658 <flatcc_verify_union_vector_field@@Base+0x108>
   335c8:	ldr	r7, [r0, #12]
   335cc:	add	r5, r7, r3
   335d0:	ldrh	r5, [r5]
   335d4:	cmp	r5, #0
   335d8:	beq	33658 <flatcc_verify_union_vector_field@@Base+0x108>
   335dc:	ldrh	r4, [r0, #20]
   335e0:	add	r6, r5, #4
   335e4:	cmp	r6, r4
   335e8:	bhi	3366c <flatcc_verify_union_vector_field@@Base+0x11c>
   335ec:	ldr	r6, [r0, #16]
   335f0:	add	r5, r6, r5
   335f4:	tst	r5, #3
   335f8:	bne	3366c <flatcc_verify_union_vector_field@@Base+0x11c>
   335fc:	cmp	r5, #0
   33600:	beq	33708 <flatcc_verify_union_vector_field@@Base+0x1b8>
   33604:	ldr	ip, [r0]
   33608:	ldr	r6, [ip, r5]
   3360c:	add	lr, r6, r5
   33610:	cmp	lr, r5
   33614:	bls	3366c <flatcc_verify_union_vector_field@@Base+0x11c>
   33618:	ldr	r8, [r0, #4]
   3361c:	add	r5, lr, #4
   33620:	cmp	r5, r8
   33624:	bhi	3366c <flatcc_verify_union_vector_field@@Base+0x11c>
   33628:	ands	r4, r5, #3
   3362c:	bne	3366c <flatcc_verify_union_vector_field@@Base+0x11c>
   33630:	ldr	r6, [ip, lr]
   33634:	sub	r5, r8, lr
   33638:	sub	r5, r5, #4
   3363c:	cmp	r5, r6
   33640:	bcc	3366c <flatcc_verify_union_vector_field@@Base+0x11c>
   33644:	b	33708 <flatcc_verify_union_vector_field@@Base+0x1b8>
   33648:	mov	r5, #22
   3364c:	cmp	r2, #0
   33650:	bne	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33654:	b	335c0 <flatcc_verify_union_vector_field@@Base+0x70>
   33658:	cmp	r2, #0
   3365c:	beq	336f8 <flatcc_verify_union_vector_field@@Base+0x1a8>
   33660:	cmp	r3, r1
   33664:	bcs	33818 <flatcc_verify_union_vector_field@@Base+0x2c8>
   33668:	ldr	r7, [r0, #12]
   3366c:	add	r1, r7, r3
   33670:	ldrh	r1, [r1]
   33674:	cmp	r1, #0
   33678:	beq	33818 <flatcc_verify_union_vector_field@@Base+0x2c8>
   3367c:	ldrh	r2, [r0, #20]
   33680:	add	r3, r1, #4
   33684:	mov	r5, #13
   33688:	cmp	r3, r2
   3368c:	bhi	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33690:	ldr	r2, [r0, #16]
   33694:	mov	r5, #12
   33698:	add	r3, r2, r1
   3369c:	tst	r3, #3
   336a0:	bne	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   336a4:	cmp	r3, #0
   336a8:	beq	33830 <flatcc_verify_union_vector_field@@Base+0x2e0>
   336ac:	ldr	r1, [r0]
   336b0:	mov	r5, #16
   336b4:	ldr	r2, [r1, r3]
   336b8:	add	r2, r2, r3
   336bc:	cmp	r2, r3
   336c0:	bls	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   336c4:	ldr	r0, [r0, #4]
   336c8:	add	r3, r2, #4
   336cc:	cmp	r3, r0
   336d0:	bhi	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   336d4:	ands	r3, r3, #3
   336d8:	bne	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   336dc:	ldr	r1, [r1, r2]
   336e0:	sub	r0, r0, r2
   336e4:	mov	r5, #0
   336e8:	sub	r0, r0, #4
   336ec:	cmp	r0, r1
   336f0:	movwcc	r5, #26
   336f4:	b	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   336f8:	mov	r5, #0
   336fc:	cmp	r3, r1
   33700:	bcs	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33704:	ldr	r7, [r0, #12]
   33708:	add	r3, r7, r3
   3370c:	mov	r5, #0
   33710:	ldrh	r3, [r3]
   33714:	cmp	r3, #0
   33718:	beq	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   3371c:	ldr	r8, [r0]
   33720:	ldr	lr, [r0, #16]
   33724:	add	r6, r8, lr
   33728:	adds	ip, r6, r3
   3372c:	beq	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33730:	add	r3, sl, #4
   33734:	uxth	r4, r3
   33738:	cmp	r4, r1
   3373c:	bcs	33818 <flatcc_verify_union_vector_field@@Base+0x2c8>
   33740:	uxtah	r1, r7, r3
   33744:	ldrh	r1, [r1]
   33748:	cmp	r1, #0
   3374c:	beq	33818 <flatcc_verify_union_vector_field@@Base+0x2c8>
   33750:	ldrh	r2, [r0, #20]
   33754:	add	r3, r1, #4
   33758:	mov	r5, #13
   3375c:	cmp	r3, r2
   33760:	bhi	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33764:	add	r3, lr, r1
   33768:	mov	r5, #12
   3376c:	tst	r3, #3
   33770:	bne	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33774:	cmp	r3, #0
   33778:	mov	r5, #0
   3377c:	beq	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33780:	ldr	r1, [r0, #8]
   33784:	cmp	r1, #1
   33788:	blt	33838 <flatcc_verify_union_vector_field@@Base+0x2e8>
   3378c:	ldr	r2, [r8, r3]
   33790:	mov	r5, #16
   33794:	add	r2, r2, r3
   33798:	cmp	r2, r3
   3379c:	bls	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   337a0:	ldr	r0, [r0, #4]
   337a4:	add	r7, r2, #4
   337a8:	cmp	r7, r0
   337ac:	bhi	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   337b0:	ands	r3, r7, #3
   337b4:	bne	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   337b8:	ldr	r3, [r8, r2]
   337bc:	mov	r5, #25
   337c0:	cmn	r3, #-1073741823	; 0xc0000001
   337c4:	bhi	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   337c8:	sub	r2, r0, r2
   337cc:	mov	r5, #26
   337d0:	sub	r2, r2, #4
   337d4:	cmp	r2, r3, lsl #2
   337d8:	bcc	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   337dc:	ldr	r2, [ip]
   337e0:	mov	r5, #34	; 0x22
   337e4:	ldr	sl, [r2, ip]!
   337e8:	cmp	r3, sl
   337ec:	bne	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   337f0:	sub	r1, r1, #1
   337f4:	mov	r5, #0
   337f8:	cmp	sl, #0
   337fc:	str	r1, [sp, #12]
   33800:	str	r0, [sp, #8]
   33804:	str	r8, [sp, #4]
   33808:	beq	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   3380c:	add	r6, r2, #4
   33810:	add	r4, sp, #4
   33814:	b	33858 <flatcc_verify_union_vector_field@@Base+0x308>
   33818:	cmp	r2, #0
   3381c:	movwne	r2, #1
   33820:	lsl	r5, r2, #2
   33824:	mov	r0, r5
   33828:	sub	sp, fp, #28
   3382c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33830:	mov	r5, #0
   33834:	b	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33838:	mov	r5, #3
   3383c:	b	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33840:	cmp	r0, #0
   33844:	bne	338a4 <flatcc_verify_union_vector_field@@Base+0x354>
   33848:	add	r6, r6, #1
   3384c:	subs	sl, sl, #1
   33850:	add	r7, r7, #4
   33854:	beq	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   33858:	ldr	r1, [r8, r7]
   3385c:	ldrb	r0, [r6]
   33860:	cmp	r1, #0
   33864:	beq	33840 <flatcc_verify_union_vector_field@@Base+0x2f0>
   33868:	cmp	r0, #0
   3386c:	beq	3389c <flatcc_verify_union_vector_field@@Base+0x34c>
   33870:	str	r1, [sp, #24]
   33874:	str	r7, [sp, #20]
   33878:	strb	r0, [sp, #16]
   3387c:	mov	r0, r4
   33880:	blx	r9
   33884:	cmp	r0, #0
   33888:	beq	33848 <flatcc_verify_union_vector_field@@Base+0x2f8>
   3388c:	add	r0, sp, #4
   33890:	blx	r9
   33894:	mov	r5, r0
   33898:	b	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   3389c:	mov	r5, #33	; 0x21
   338a0:	b	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   338a4:	mov	r5, #32
   338a8:	b	33824 <flatcc_verify_union_vector_field@@Base+0x2d4>
   338ac:	andeq	r0, r0, r0

000338b0 <grisu3_diy_fp_encode_double@@Base>:
   338b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   338b4:	add	fp, sp, #28
   338b8:	sub	sp, sp, #12
   338bc:	ldr	lr, [fp, #8]
   338c0:	orr	r7, r0, r1
   338c4:	cmp	lr, #0
   338c8:	movwne	lr, #1
   338cc:	cmp	r7, #0
   338d0:	beq	33cbc <grisu3_diy_fp_encode_double@@Base+0x40c>
   338d4:	mov	ip, #0
   338d8:	cmp	ip, r1, lsr #22
   338dc:	bne	338fc <grisu3_diy_fp_encode_double@@Base+0x4c>
   338e0:	mov	ip, #0
   338e4:	lsl	r1, r1, #10
   338e8:	sub	ip, ip, #10
   338ec:	orr	r1, r1, r0, lsr #22
   338f0:	lsl	r0, r0, #10
   338f4:	cmp	r1, #4194304	; 0x400000
   338f8:	bcc	338e4 <grisu3_diy_fp_encode_double@@Base+0x34>
   338fc:	sub	r5, r2, r3
   33900:	mvn	r2, #0
   33904:	cmp	r1, #0
   33908:	bmi	33abc <grisu3_diy_fp_encode_double@@Base+0x20c>
   3390c:	lsl	r1, r1, #1
   33910:	lsl	r4, r0, #1
   33914:	sub	ip, ip, #1
   33918:	orr	r1, r1, r0, lsr #31
   3391c:	subs	r0, r2, r0, lsl #1
   33920:	sbcs	r0, r2, r1
   33924:	mov	r0, r4
   33928:	blt	3390c <grisu3_diy_fp_encode_double@@Base+0x5c>
   3392c:	cmn	r5, #348	; 0x15c
   33930:	blt	33ac8 <grisu3_diy_fp_encode_double@@Base+0x218>
   33934:	cmp	r5, #348	; 0x15c
   33938:	bge	33cdc <grisu3_diy_fp_encode_double@@Base+0x42c>
   3393c:	add	r0, r5, #348	; 0x15c
   33940:	ldr	r9, [pc, #1044]	; 33d5c <grisu3_diy_fp_encode_double@@Base+0x4ac>
   33944:	asr	r6, r0, #31
   33948:	add	r0, r0, r6, lsr #29
   3394c:	mvn	r6, #14
   33950:	and	r6, r6, r0, lsl #1
   33954:	add	r9, pc, r9
   33958:	ldr	r8, [r9, r6]!
   3395c:	ldrsh	r7, [r9, #10]
   33960:	cmp	r5, r7
   33964:	blt	33cfc <grisu3_diy_fp_encode_double@@Base+0x44c>
   33968:	add	r6, r7, #8
   3396c:	cmp	r6, r5
   33970:	ble	33d1c <grisu3_diy_fp_encode_double@@Base+0x46c>
   33974:	lsl	r6, lr, #2
   33978:	rsb	r0, ip, #0
   3397c:	cmp	r5, r7
   33980:	lsl	sl, r6, r0
   33984:	beq	33a0c <grisu3_diy_fp_encode_double@@Base+0x15c>
   33988:	mvn	r0, r7
   3398c:	str	sl, [sp, #4]
   33990:	str	r3, [sp, #8]
   33994:	add	r5, r5, r0
   33998:	cmp	r5, #7
   3399c:	bcs	33d3c <grisu3_diy_fp_encode_double@@Base+0x48c>
   339a0:	ldr	r0, [pc, #952]	; 33d60 <grisu3_diy_fp_encode_double@@Base+0x4b0>
   339a4:	add	r0, pc, r0
   339a8:	ldr	r6, [r0, r5, lsl #4]!
   339ac:	ldr	lr, [r0, #4]
   339b0:	ldr	r0, [r0, #8]
   339b4:	umull	sl, r7, r6, r1
   339b8:	str	r0, [sp]
   339bc:	umull	r3, r0, lr, r4
   339c0:	umaal	r7, r0, lr, r1
   339c4:	umull	r1, r6, r6, r4
   339c8:	mov	r1, #0
   339cc:	adds	r6, sl, r6
   339d0:	ldr	sl, [sp, #4]
   339d4:	adc	r1, r1, #0
   339d8:	adds	r3, r6, r3
   339dc:	adc	r1, r1, #0
   339e0:	adds	r3, r3, #-2147483648	; 0x80000000
   339e4:	adcs	r4, r7, r1
   339e8:	adc	r1, r0, #0
   339ec:	ldr	r0, [sp, #8]
   339f0:	add	r0, r0, r5
   339f4:	add	r0, r0, #1
   339f8:	cmp	r0, #19
   339fc:	ldr	r0, [sp]
   33a00:	addgt	sl, sl, #4
   33a04:	add	r0, ip, r0
   33a08:	add	ip, r0, #64	; 0x40
   33a0c:	ldr	r0, [r9, #4]
   33a10:	umull	r3, r7, r4, r8
   33a14:	umull	r3, r5, r1, r8
   33a18:	mov	lr, #0
   33a1c:	umull	r4, r6, r4, r0
   33a20:	adds	r3, r3, r7
   33a24:	adc	r7, lr, #0
   33a28:	umaal	r5, r6, r1, r0
   33a2c:	mov	r1, #9
   33a30:	adds	r3, r3, r4
   33a34:	adc	r4, r7, #0
   33a38:	adds	r0, r3, #-2147483648	; 0x80000000
   33a3c:	adcs	r4, r5, r4
   33a40:	adc	r3, r6, #0
   33a44:	cmp	sl, #0
   33a48:	orr	r0, r4, r3
   33a4c:	movweq	r1, #8
   33a50:	cmp	r0, #0
   33a54:	beq	33cbc <grisu3_diy_fp_encode_double@@Base+0x40c>
   33a58:	ldrsh	r0, [r9, #8]
   33a5c:	cmp	lr, r3, lsr #22
   33a60:	add	r0, r0, ip
   33a64:	add	r5, r0, #64	; 0x40
   33a68:	mov	r0, r5
   33a6c:	bne	33a88 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   33a70:	lsl	r3, r3, #10
   33a74:	sub	r0, r0, #10
   33a78:	orr	r3, r3, r4, lsr #22
   33a7c:	lsl	r4, r4, #10
   33a80:	cmp	r3, #4194304	; 0x400000
   33a84:	bcc	33a70 <grisu3_diy_fp_encode_double@@Base+0x1c0>
   33a88:	add	r7, r1, sl
   33a8c:	subs	r1, r2, r4
   33a90:	sbcs	r1, r2, r3
   33a94:	bge	33ae8 <grisu3_diy_fp_encode_double@@Base+0x238>
   33a98:	lsl	r1, r3, #1
   33a9c:	subs	r6, r2, r4, lsl #1
   33aa0:	sub	r0, r0, #1
   33aa4:	orr	r3, r1, r4, lsr #31
   33aa8:	lsl	r1, r4, #1
   33aac:	mov	r4, r1
   33ab0:	sbcs	r6, r2, r3
   33ab4:	blt	33a98 <grisu3_diy_fp_encode_double@@Base+0x1e8>
   33ab8:	b	33aec <grisu3_diy_fp_encode_double@@Base+0x23c>
   33abc:	mov	r4, r0
   33ac0:	cmn	r5, #348	; 0x15c
   33ac4:	bge	33934 <grisu3_diy_fp_encode_double@@Base+0x84>
   33ac8:	ldr	r0, [pc, #660]	; 33d64 <grisu3_diy_fp_encode_double@@Base+0x4b4>
   33acc:	ldr	r1, [pc, #660]	; 33d68 <grisu3_diy_fp_encode_double@@Base+0x4b8>
   33ad0:	ldr	r3, [pc, #660]	; 33d6c <grisu3_diy_fp_encode_double@@Base+0x4bc>
   33ad4:	mov	r2, #80	; 0x50
   33ad8:	add	r0, pc, r0
   33adc:	add	r1, pc, r1
   33ae0:	add	r3, pc, r3
   33ae4:	bl	14f38 <__assert_fail@plt>
   33ae8:	mov	r1, r4
   33aec:	movw	lr, #64462	; 0xfbce
   33af0:	sub	r2, r5, r0
   33af4:	mov	r5, #0
   33af8:	movt	lr, #65535	; 0xffff
   33afc:	lsl	ip, r7, r2
   33b00:	add	r2, r0, #64	; 0x40
   33b04:	add	r4, lr, #63	; 0x3f
   33b08:	cmp	r2, r4
   33b0c:	bgt	33b5c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   33b10:	mvn	r4, #1072	; 0x430
   33b14:	mov	r5, #64	; 0x40
   33b18:	cmp	r2, r4
   33b1c:	blt	33b2c <grisu3_diy_fp_encode_double@@Base+0x27c>
   33b20:	sub	r5, lr, r0
   33b24:	cmp	r5, #61	; 0x3d
   33b28:	blt	33b5c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   33b2c:	sub	r2, r5, #62	; 0x3e
   33b30:	mov	r4, #9
   33b34:	add	ip, r4, ip, asr r2
   33b38:	lsr	r1, r1, r2
   33b3c:	rsb	r4, r5, #94	; 0x5e
   33b40:	add	r0, r2, r0
   33b44:	orr	r1, r1, r3, lsl r4
   33b48:	subs	r4, r5, #94	; 0x5e
   33b4c:	mov	r5, #62	; 0x3e
   33b50:	lsrpl	r1, r3, r4
   33b54:	lsr	r3, r3, r2
   33b58:	movwpl	r3, #0
   33b5c:	lsr	r2, r1, r5
   33b60:	rsb	r4, r5, #32
   33b64:	lsr	r6, r3, r5
   33b68:	add	r0, r0, r5
   33b6c:	orr	r2, r2, r3, lsl r4
   33b70:	subs	r4, r5, #32
   33b74:	lsrpl	r2, r3, r4
   33b78:	sub	r3, r5, #1
   33b7c:	mov	r4, #1
   33b80:	movwpl	r6, #0
   33b84:	lsl	r4, r4, r3
   33b88:	subs	r3, r5, #33	; 0x21
   33b8c:	movwpl	r4, #0
   33b90:	add	r3, ip, r4, lsl #3
   33b94:	cmp	r5, r3
   33b98:	blt	33bb8 <grisu3_diy_fp_encode_double@@Base+0x308>
   33b9c:	adds	r2, r2, #1
   33ba0:	adc	r6, r6, #0
   33ba4:	tst	r6, #2097152	; 0x200000
   33ba8:	beq	33bb8 <grisu3_diy_fp_encode_double@@Base+0x308>
   33bac:	lsrs	r6, r6, #1
   33bb0:	rrx	r2, r2
   33bb4:	add	r0, r0, #1
   33bb8:	and	r1, r4, r1
   33bbc:	cmp	r6, #2097152	; 0x200000
   33bc0:	bcc	33be4 <grisu3_diy_fp_encode_double@@Base+0x334>
   33bc4:	mov	r5, #0
   33bc8:	lsrs	r7, r6, #1
   33bcc:	rrx	r2, r2
   33bd0:	cmp	r5, r6, lsr #22
   33bd4:	add	r0, r0, #1
   33bd8:	mov	r6, r7
   33bdc:	bne	33bc8 <grisu3_diy_fp_encode_double@@Base+0x318>
   33be0:	b	33be8 <grisu3_diy_fp_encode_double@@Base+0x338>
   33be4:	mov	r7, r6
   33be8:	ldr	r8, [fp, #12]
   33bec:	vmov.i32	d16, #0	; 0x00000000
   33bf0:	lsl	r9, r4, #3
   33bf4:	lsl	r1, r1, #3
   33bf8:	cmp	r0, lr
   33bfc:	blt	33c90 <grisu3_diy_fp_encode_double@@Base+0x3e0>
   33c00:	and	r4, r7, #1048576	; 0x100000
   33c04:	mov	r5, #1
   33c08:	cmp	r0, lr
   33c0c:	eor	r5, r5, r4, lsr #20
   33c10:	beq	33c54 <grisu3_diy_fp_encode_double@@Base+0x3a4>
   33c14:	cmp	r4, #0
   33c18:	bne	33c54 <grisu3_diy_fp_encode_double@@Base+0x3a4>
   33c1c:	mov	r4, #1
   33c20:	lsl	r5, r7, #1
   33c24:	sub	r0, r0, #1
   33c28:	orr	r6, r5, r2, lsr #31
   33c2c:	ands	r5, r7, #524288	; 0x80000
   33c30:	lsl	r2, r2, #1
   33c34:	eor	r5, r4, r5, lsr #19
   33c38:	bne	33c48 <grisu3_diy_fp_encode_double@@Base+0x398>
   33c3c:	cmp	r0, lr
   33c40:	mov	r7, r6
   33c44:	bgt	33c20 <grisu3_diy_fp_encode_double@@Base+0x370>
   33c48:	cmp	r0, lr
   33c4c:	beq	33c60 <grisu3_diy_fp_encode_double@@Base+0x3b0>
   33c50:	b	33c70 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   33c54:	mov	r6, r7
   33c58:	cmp	r0, lr
   33c5c:	bne	33c70 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   33c60:	cmp	r5, #0
   33c64:	mov	r7, #0
   33c68:	mov	r5, #0
   33c6c:	bne	33c80 <grisu3_diy_fp_encode_double@@Base+0x3d0>
   33c70:	movw	r7, #1075	; 0x433
   33c74:	add	r0, r0, r7
   33c78:	mov	r7, #0
   33c7c:	lsl	r5, r0, #20
   33c80:	bfc	r6, #20, #12
   33c84:	orr	r0, r7, r2
   33c88:	orr	r2, r5, r6
   33c8c:	vmov	d16, r0, r2
   33c90:	cmp	r1, r3
   33c94:	sub	r3, r9, ip
   33c98:	mov	r2, #0
   33c9c:	mov	r0, #0
   33ca0:	vstr	d16, [r8]
   33ca4:	movwge	r2, #1
   33ca8:	cmp	r3, r1
   33cac:	movwge	r0, #1
   33cb0:	orr	r0, r2, r0
   33cb4:	sub	sp, fp, #28
   33cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33cbc:	ldr	r0, [pc, #220]	; 33da0 <grisu3_diy_fp_encode_double@@Base+0x4f0>
   33cc0:	ldr	r1, [pc, #220]	; 33da4 <grisu3_diy_fp_encode_double@@Base+0x4f4>
   33cc4:	ldr	r3, [pc, #220]	; 33da8 <grisu3_diy_fp_encode_double@@Base+0x4f8>
   33cc8:	mov	r2, #260	; 0x104
   33ccc:	add	r0, pc, r0
   33cd0:	add	r1, pc, r1
   33cd4:	add	r3, pc, r3
   33cd8:	bl	14f38 <__assert_fail@plt>
   33cdc:	ldr	r0, [pc, #140]	; 33d70 <grisu3_diy_fp_encode_double@@Base+0x4c0>
   33ce0:	ldr	r1, [pc, #140]	; 33d74 <grisu3_diy_fp_encode_double@@Base+0x4c4>
   33ce4:	ldr	r3, [pc, #140]	; 33d78 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   33ce8:	mov	r2, #81	; 0x51
   33cec:	add	r0, pc, r0
   33cf0:	add	r1, pc, r1
   33cf4:	add	r3, pc, r3
   33cf8:	bl	14f38 <__assert_fail@plt>
   33cfc:	ldr	r0, [pc, #120]	; 33d7c <grisu3_diy_fp_encode_double@@Base+0x4cc>
   33d00:	ldr	r1, [pc, #120]	; 33d80 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   33d04:	ldr	r3, [pc, #120]	; 33d84 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   33d08:	mov	r2, #88	; 0x58
   33d0c:	add	r0, pc, r0
   33d10:	add	r1, pc, r1
   33d14:	add	r3, pc, r3
   33d18:	bl	14f38 <__assert_fail@plt>
   33d1c:	ldr	r0, [pc, #100]	; 33d88 <grisu3_diy_fp_encode_double@@Base+0x4d8>
   33d20:	ldr	r1, [pc, #100]	; 33d8c <grisu3_diy_fp_encode_double@@Base+0x4dc>
   33d24:	ldr	r3, [pc, #100]	; 33d90 <grisu3_diy_fp_encode_double@@Base+0x4e0>
   33d28:	mov	r2, #89	; 0x59
   33d2c:	add	r0, pc, r0
   33d30:	add	r1, pc, r1
   33d34:	add	r3, pc, r3
   33d38:	bl	14f38 <__assert_fail@plt>
   33d3c:	ldr	r0, [pc, #80]	; 33d94 <grisu3_diy_fp_encode_double@@Base+0x4e4>
   33d40:	ldr	r1, [pc, #80]	; 33d98 <grisu3_diy_fp_encode_double@@Base+0x4e8>
   33d44:	ldr	r3, [pc, #80]	; 33d9c <grisu3_diy_fp_encode_double@@Base+0x4ec>
   33d48:	mov	r2, #185	; 0xb9
   33d4c:	add	r0, pc, r0
   33d50:	add	r1, pc, r1
   33d54:	add	r3, pc, r3
   33d58:	bl	14f38 <__assert_fail@plt>
   33d5c:	andeq	r6, r1, r4, asr #14
   33d60:	andeq	r6, r1, r4, lsl #13
   33d64:	andeq	r7, r1, r3, lsr r3
   33d68:	andeq	r6, r1, r8, asr #26
   33d6c:	andeq	r7, r1, sl, asr #6
   33d70:	andeq	r7, r1, r7, ror r1
   33d74:	andeq	r6, r1, r4, lsr fp
   33d78:	andeq	r7, r1, r6, lsr r1
   33d7c:	andeq	r7, r1, r2, lsl #3
   33d80:	andeq	r6, r1, r4, lsl fp
   33d84:	andeq	r7, r1, r6, lsl r1
   33d88:	andeq	r7, r1, r1, ror r1
   33d8c:	strdeq	r6, [r1], -r4
   33d90:	strdeq	r7, [r1], -r6
   33d94:			; <UNDEFINED> instruction: 0x00016abc
   33d98:	ldrdeq	r6, [r1], -r4
   33d9c:	andeq	r6, r1, lr, lsr fp
   33da0:	muleq	r1, r0, r0
   33da4:	muleq	r1, r5, r0
   33da8:	strdeq	r7, [r1], -lr

00033dac <flatcc_json_parser_error_string@@Base>:
   33dac:	cmp	r0, #34	; 0x22
   33db0:	bhi	33dc4 <flatcc_json_parser_error_string@@Base+0x18>
   33db4:	ldr	r1, [pc, #20]	; 33dd0 <flatcc_json_parser_error_string@@Base+0x24>
   33db8:	add	r1, pc, r1
   33dbc:	ldr	r0, [r1, r0, lsl #2]
   33dc0:	bx	lr
   33dc4:	ldr	r0, [pc, #8]	; 33dd4 <flatcc_json_parser_error_string@@Base+0x28>
   33dc8:	add	r0, pc, r0
   33dcc:	bx	lr
   33dd0:	strheq	r8, [r2], -r4
   33dd4:	andeq	r6, r1, r5, asr r2

00033dd8 <flatcc_json_parser_set_error@@Base>:
   33dd8:	mov	ip, r2
   33ddc:	ldr	r2, [r0, #20]
   33de0:	cmp	r2, #0
   33de4:	beq	33df0 <flatcc_json_parser_set_error@@Base+0x18>
   33de8:	mov	r0, ip
   33dec:	bx	lr
   33df0:	str	r1, [r0, #32]
   33df4:	ldr	r2, [r0, #4]
   33df8:	sub	r1, r1, r2
   33dfc:	add	r1, r1, #1
   33e00:	str	r1, [r0, #16]
   33e04:	str	r3, [r0, #20]
   33e08:	mov	r0, ip
   33e0c:	bx	lr

00033e10 <flatcc_json_parser_string_part@@Base>:
   33e10:	cmp	r1, r2
   33e14:	beq	33e40 <flatcc_json_parser_string_part@@Base+0x30>
   33e18:	ldrb	r3, [r1]
   33e1c:	cmp	r3, #32
   33e20:	bcc	33e74 <flatcc_json_parser_string_part@@Base+0x64>
   33e24:	cmp	r3, #34	; 0x22
   33e28:	cmpne	r3, #92	; 0x5c
   33e2c:	beq	33e6c <flatcc_json_parser_string_part@@Base+0x5c>
   33e30:	add	r1, r1, #1
   33e34:	cmp	r2, r1
   33e38:	bne	33e18 <flatcc_json_parser_string_part@@Base+0x8>
   33e3c:	mov	r1, r2
   33e40:	ldr	r3, [r0, #20]
   33e44:	cmp	r3, #0
   33e48:	bne	33e68 <flatcc_json_parser_string_part@@Base+0x58>
   33e4c:	mov	ip, #20
   33e50:	str	r1, [r0, #32]
   33e54:	ldr	r3, [r0, #4]
   33e58:	sub	r1, r1, r3
   33e5c:	add	r1, r1, #1
   33e60:	str	r1, [r0, #16]
   33e64:	str	ip, [r0, #20]
   33e68:	mov	r1, r2
   33e6c:	mov	r0, r1
   33e70:	bx	lr
   33e74:	ldr	r3, [r0, #20]
   33e78:	cmp	r3, #0
   33e7c:	bne	33e68 <flatcc_json_parser_string_part@@Base+0x58>
   33e80:	mov	ip, #17
   33e84:	b	33e50 <flatcc_json_parser_string_part@@Base+0x40>

00033e88 <flatcc_json_parser_space_ext@@Base>:
   33e88:	mov	ip, r2
   33e8c:	cmp	r1, r2
   33e90:	beq	33f98 <flatcc_json_parser_space_ext@@Base+0x110>
   33e94:	ldrb	r3, [r1]
   33e98:	cmp	r3, #32
   33e9c:	bne	33ec8 <flatcc_json_parser_space_ext@@Base+0x40>
   33ea0:	add	r1, r1, #1
   33ea4:	cmp	r1, ip
   33ea8:	bne	33e94 <flatcc_json_parser_space_ext@@Base+0xc>
   33eac:	b	33f98 <flatcc_json_parser_space_ext@@Base+0x110>
   33eb0:	add	r1, r1, r3
   33eb4:	add	r1, r1, #1
   33eb8:	str	r1, [r0, #4]
   33ebc:	ldr	r2, [r0, #12]
   33ec0:	add	r2, r2, #1
   33ec4:	str	r2, [r0, #12]
   33ec8:	cmp	r1, ip
   33ecc:	bne	33ee0 <flatcc_json_parser_space_ext@@Base+0x58>
   33ed0:	b	33f98 <flatcc_json_parser_space_ext@@Base+0x110>
   33ed4:	add	r1, r1, #1
   33ed8:	cmp	r1, ip
   33edc:	beq	33f98 <flatcc_json_parser_space_ext@@Base+0x110>
   33ee0:	ldrb	r3, [r1]
   33ee4:	cmp	r3, #32
   33ee8:	movhi	r0, r1
   33eec:	bxhi	lr
   33ef0:	sub	r3, r3, #9
   33ef4:	cmp	r3, #23
   33ef8:	bhi	33f8c <flatcc_json_parser_space_ext@@Base+0x104>
   33efc:	add	r2, pc, #4
   33f00:	ldr	r3, [r2, r3, lsl #2]
   33f04:	add	pc, r2, r3
   33f08:			; <UNDEFINED> instruction: 0xffffffcc
   33f0c:			; <UNDEFINED> instruction: 0xffffffac
   33f10:	andeq	r0, r0, r4, lsl #1
   33f14:	andeq	r0, r0, r4, lsl #1
   33f18:	andeq	r0, r0, r0, rrx
   33f1c:	andeq	r0, r0, r4, lsl #1
   33f20:	andeq	r0, r0, r4, lsl #1
   33f24:	andeq	r0, r0, r4, lsl #1
   33f28:	andeq	r0, r0, r4, lsl #1
   33f2c:	andeq	r0, r0, r4, lsl #1
   33f30:	andeq	r0, r0, r4, lsl #1
   33f34:	andeq	r0, r0, r4, lsl #1
   33f38:	andeq	r0, r0, r4, lsl #1
   33f3c:	andeq	r0, r0, r4, lsl #1
   33f40:	andeq	r0, r0, r4, lsl #1
   33f44:	andeq	r0, r0, r4, lsl #1
   33f48:	andeq	r0, r0, r4, lsl #1
   33f4c:	andeq	r0, r0, r4, lsl #1
   33f50:	andeq	r0, r0, r4, lsl #1
   33f54:	andeq	r0, r0, r4, lsl #1
   33f58:	andeq	r0, r0, r4, lsl #1
   33f5c:	andeq	r0, r0, r4, lsl #1
   33f60:	andeq	r0, r0, r4, lsl #1
   33f64:			; <UNDEFINED> instruction: 0xffffff9c
   33f68:	sub	r2, ip, r1
   33f6c:	mov	r3, #0
   33f70:	cmp	r2, #2
   33f74:	blt	33eb0 <flatcc_json_parser_space_ext@@Base+0x28>
   33f78:	ldrb	r2, [r1, #1]
   33f7c:	sub	r2, r2, #10
   33f80:	clz	r2, r2
   33f84:	lsr	r3, r2, #5
   33f88:	b	33eb0 <flatcc_json_parser_space_ext@@Base+0x28>
   33f8c:	ldr	r2, [r0, #20]
   33f90:	cmp	r2, #0
   33f94:	beq	33fa0 <flatcc_json_parser_space_ext@@Base+0x118>
   33f98:	mov	r0, ip
   33f9c:	bx	lr
   33fa0:	str	r1, [r0, #32]
   33fa4:	mov	r2, #5
   33fa8:	ldr	r3, [r0, #4]
   33fac:	sub	r1, r1, r3
   33fb0:	add	r1, r1, #1
   33fb4:	str	r1, [r0, #16]
   33fb8:	str	r2, [r0, #20]
   33fbc:	mov	r0, ip
   33fc0:	bx	lr

00033fc4 <flatcc_json_parser_string_escape@@Base>:
   33fc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33fc8:	add	fp, sp, #24
   33fcc:	sub	r7, r2, r1
   33fd0:	cmp	r7, #2
   33fd4:	blt	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   33fd8:	ldrb	r6, [r1]
   33fdc:	cmp	r6, #92	; 0x5c
   33fe0:	bne	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   33fe4:	ldrb	r6, [r1, #1]
   33fe8:	sub	r6, r6, #34	; 0x22
   33fec:	cmp	r6, #86	; 0x56
   33ff0:	bhi	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   33ff4:	add	r5, pc, #4
   33ff8:	ldr	r6, [r5, r6, lsl #2]
   33ffc:	add	pc, r5, r6
   34000:	andeq	r0, r0, ip, asr r1
   34004:	ldrdeq	r0, [r0], -ip
   34008:	ldrdeq	r0, [r0], -ip
   3400c:	ldrdeq	r0, [r0], -ip
   34010:	ldrdeq	r0, [r0], -ip
   34014:	ldrdeq	r0, [r0], -ip
   34018:	ldrdeq	r0, [r0], -ip
   3401c:	ldrdeq	r0, [r0], -ip
   34020:	ldrdeq	r0, [r0], -ip
   34024:	ldrdeq	r0, [r0], -ip
   34028:	ldrdeq	r0, [r0], -ip
   3402c:	ldrdeq	r0, [r0], -ip
   34030:	ldrdeq	r0, [r0], -ip
   34034:	andeq	r0, r0, r4, ror #2
   34038:	ldrdeq	r0, [r0], -ip
   3403c:	ldrdeq	r0, [r0], -ip
   34040:	ldrdeq	r0, [r0], -ip
   34044:	ldrdeq	r0, [r0], -ip
   34048:	ldrdeq	r0, [r0], -ip
   3404c:	ldrdeq	r0, [r0], -ip
   34050:	ldrdeq	r0, [r0], -ip
   34054:	ldrdeq	r0, [r0], -ip
   34058:	ldrdeq	r0, [r0], -ip
   3405c:	ldrdeq	r0, [r0], -ip
   34060:	ldrdeq	r0, [r0], -ip
   34064:	ldrdeq	r0, [r0], -ip
   34068:	ldrdeq	r0, [r0], -ip
   3406c:	ldrdeq	r0, [r0], -ip
   34070:	ldrdeq	r0, [r0], -ip
   34074:	ldrdeq	r0, [r0], -ip
   34078:	ldrdeq	r0, [r0], -ip
   3407c:	ldrdeq	r0, [r0], -ip
   34080:	ldrdeq	r0, [r0], -ip
   34084:	ldrdeq	r0, [r0], -ip
   34088:	ldrdeq	r0, [r0], -ip
   3408c:	ldrdeq	r0, [r0], -ip
   34090:	ldrdeq	r0, [r0], -ip
   34094:	ldrdeq	r0, [r0], -ip
   34098:	ldrdeq	r0, [r0], -ip
   3409c:	ldrdeq	r0, [r0], -ip
   340a0:	ldrdeq	r0, [r0], -ip
   340a4:	ldrdeq	r0, [r0], -ip
   340a8:	ldrdeq	r0, [r0], -ip
   340ac:	ldrdeq	r0, [r0], -ip
   340b0:	ldrdeq	r0, [r0], -ip
   340b4:	ldrdeq	r0, [r0], -ip
   340b8:	ldrdeq	r0, [r0], -ip
   340bc:	ldrdeq	r0, [r0], -ip
   340c0:	ldrdeq	r0, [r0], -ip
   340c4:	ldrdeq	r0, [r0], -ip
   340c8:	ldrdeq	r0, [r0], -ip
   340cc:	ldrdeq	r0, [r0], -ip
   340d0:	ldrdeq	r0, [r0], -ip
   340d4:	ldrdeq	r0, [r0], -ip
   340d8:	ldrdeq	r0, [r0], -ip
   340dc:	ldrdeq	r0, [r0], -ip
   340e0:	ldrdeq	r0, [r0], -ip
   340e4:	ldrdeq	r0, [r0], -ip
   340e8:	andeq	r0, r0, ip, ror #2
   340ec:	ldrdeq	r0, [r0], -ip
   340f0:	ldrdeq	r0, [r0], -ip
   340f4:	ldrdeq	r0, [r0], -ip
   340f8:	ldrdeq	r0, [r0], -ip
   340fc:	ldrdeq	r0, [r0], -ip
   34100:	andeq	r0, r0, r4, ror r1
   34104:	ldrdeq	r0, [r0], -ip
   34108:	ldrdeq	r0, [r0], -ip
   3410c:	ldrdeq	r0, [r0], -ip
   34110:	andeq	r0, r0, ip, ror r1
   34114:	ldrdeq	r0, [r0], -ip
   34118:	ldrdeq	r0, [r0], -ip
   3411c:	ldrdeq	r0, [r0], -ip
   34120:	ldrdeq	r0, [r0], -ip
   34124:	ldrdeq	r0, [r0], -ip
   34128:	ldrdeq	r0, [r0], -ip
   3412c:	ldrdeq	r0, [r0], -ip
   34130:	andeq	r0, r0, r4, lsl #3
   34134:	ldrdeq	r0, [r0], -ip
   34138:	ldrdeq	r0, [r0], -ip
   3413c:	ldrdeq	r0, [r0], -ip
   34140:	andeq	r0, r0, ip, lsl #3
   34144:	ldrdeq	r0, [r0], -ip
   34148:	muleq	r0, r4, r1
   3414c:	andeq	r0, r0, r8, lsr #3
   34150:	ldrdeq	r0, [r0], -ip
   34154:	ldrdeq	r0, [r0], -ip
   34158:	andeq	r0, r0, ip, asr #3
   3415c:	movw	r0, #8705	; 0x2201
   34160:	b	34198 <flatcc_json_parser_string_escape@@Base+0x1d4>
   34164:	movw	r0, #12033	; 0x2f01
   34168:	b	34198 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3416c:	movw	r0, #23553	; 0x5c01
   34170:	b	34198 <flatcc_json_parser_string_escape@@Base+0x1d4>
   34174:	movw	r0, #2049	; 0x801
   34178:	b	34198 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3417c:	movw	r0, #3073	; 0xc01
   34180:	b	34198 <flatcc_json_parser_string_escape@@Base+0x1d4>
   34184:	movw	r0, #2561	; 0xa01
   34188:	b	34198 <flatcc_json_parser_string_escape@@Base+0x1d4>
   3418c:	movw	r0, #3329	; 0xd01
   34190:	b	34198 <flatcc_json_parser_string_escape@@Base+0x1d4>
   34194:	movw	r0, #2305	; 0x901
   34198:	add	r2, r1, #2
   3419c:	strh	r0, [r3]
   341a0:	mov	r0, r2
   341a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   341a8:	cmp	r7, #5
   341ac:	ble	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   341b0:	ldrb	r7, [r1, #2]
   341b4:	sub	r6, r7, #48	; 0x30
   341b8:	uxtb	r6, r6
   341bc:	cmp	r6, #9
   341c0:	bhi	34238 <flatcc_json_parser_string_escape@@Base+0x274>
   341c4:	lsl	ip, r7, #12
   341c8:	b	34258 <flatcc_json_parser_string_escape@@Base+0x294>
   341cc:	mov	r6, #1
   341d0:	cmp	r7, #3
   341d4:	strb	r6, [r3]
   341d8:	bgt	3421c <flatcc_json_parser_string_escape@@Base+0x258>
   341dc:	mov	r7, #0
   341e0:	strb	r7, [r3]
   341e4:	ldr	r3, [r0, #20]
   341e8:	cmp	r3, #0
   341ec:	beq	341f8 <flatcc_json_parser_string_escape@@Base+0x234>
   341f0:	mov	r0, r2
   341f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   341f8:	str	r1, [r0, #32]
   341fc:	mov	r3, #18
   34200:	ldr	r7, [r0, #4]
   34204:	sub	r1, r1, r7
   34208:	add	r1, r1, #1
   3420c:	str	r1, [r0, #16]
   34210:	str	r3, [r0, #20]
   34214:	mov	r0, r2
   34218:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3421c:	ldrb	r7, [r1, #2]
   34220:	sub	r6, r7, #48	; 0x30
   34224:	uxtb	r6, r6
   34228:	cmp	r6, #9
   3422c:	bhi	34274 <flatcc_json_parser_string_escape@@Base+0x2b0>
   34230:	lsl	r7, r7, #4
   34234:	b	34290 <flatcc_json_parser_string_escape@@Base+0x2cc>
   34238:	orr	r6, r7, #32
   3423c:	sub	r6, r6, #97	; 0x61
   34240:	uxtb	r6, r6
   34244:	cmp	r6, #5
   34248:	bhi	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   3424c:	movw	r6, #36864	; 0x9000
   34250:	movt	r6, #65535	; 0xffff
   34254:	add	ip, r6, r7, lsl #12
   34258:	ldrb	lr, [r1, #3]
   3425c:	sub	r4, lr, #48	; 0x30
   34260:	uxtb	r4, r4
   34264:	cmp	r4, #10
   34268:	bcs	342d0 <flatcc_json_parser_string_escape@@Base+0x30c>
   3426c:	mov	r8, #53248	; 0xd000
   34270:	b	342e8 <flatcc_json_parser_string_escape@@Base+0x324>
   34274:	orr	r6, r7, #32
   34278:	sub	r6, r6, #97	; 0x61
   3427c:	uxtb	r6, r6
   34280:	cmp	r6, #5
   34284:	bhi	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   34288:	mvn	r6, #111	; 0x6f
   3428c:	add	r7, r6, r7, lsl #4
   34290:	ldrb	r5, [r1, #3]
   34294:	sub	r6, r5, #48	; 0x30
   34298:	uxtb	r4, r6
   3429c:	cmp	r4, #10
   342a0:	bcc	342bc <flatcc_json_parser_string_escape@@Base+0x2f8>
   342a4:	orr	r6, r5, #32
   342a8:	sub	r5, r6, #97	; 0x61
   342ac:	uxtb	r5, r5
   342b0:	cmp	r5, #5
   342b4:	bhi	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   342b8:	sub	r6, r6, #87	; 0x57
   342bc:	orr	r0, r6, r7
   342c0:	add	r2, r1, #4
   342c4:	strb	r0, [r3, #1]
   342c8:	mov	r0, r2
   342cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   342d0:	orr	lr, lr, #32
   342d4:	mov	r8, #43264	; 0xa900
   342d8:	sub	r4, lr, #97	; 0x61
   342dc:	uxtb	r4, r4
   342e0:	cmp	r4, #6
   342e4:	bcs	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   342e8:	ldrb	r5, [r1, #4]
   342ec:	sub	r4, r5, #48	; 0x30
   342f0:	uxtb	r4, r4
   342f4:	cmp	r4, #10
   342f8:	bcs	34304 <flatcc_json_parser_string_escape@@Base+0x340>
   342fc:	mov	r9, #64768	; 0xfd00
   34300:	b	3431c <flatcc_json_parser_string_escape@@Base+0x358>
   34304:	orr	r5, r5, #32
   34308:	movw	r9, #64144	; 0xfa90
   3430c:	sub	r4, r5, #97	; 0x61
   34310:	uxtb	r4, r4
   34314:	cmp	r4, #6
   34318:	bcs	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   3431c:	ldrb	r7, [r1, #5]
   34320:	sub	r4, r7, #48	; 0x30
   34324:	uxtb	r4, r4
   34328:	cmp	r4, #10
   3432c:	bcs	3433c <flatcc_json_parser_string_escape@@Base+0x378>
   34330:	mvn	r0, #86	; 0x56
   34334:	add	r4, r0, #39	; 0x27
   34338:	b	34354 <flatcc_json_parser_string_escape@@Base+0x390>
   3433c:	orr	r7, r7, #32
   34340:	movw	r4, #65449	; 0xffa9
   34344:	sub	r6, r7, #97	; 0x61
   34348:	uxtb	r6, r6
   3434c:	cmp	r6, #6
   34350:	bcs	341dc <flatcc_json_parser_string_escape@@Base+0x218>
   34354:	add	r0, r8, lr, lsl #8
   34358:	add	r2, r9, r5, lsl #4
   3435c:	orr	r0, r0, ip
   34360:	orr	r0, r0, r2
   34364:	add	r2, r4, r7
   34368:	orr	r0, r0, r2
   3436c:	uxth	r7, r0
   34370:	cmp	r7, #127	; 0x7f
   34374:	bhi	34384 <flatcc_json_parser_string_escape@@Base+0x3c0>
   34378:	mov	r2, #1
   3437c:	strb	r2, [r3]
   34380:	b	343d4 <flatcc_json_parser_string_escape@@Base+0x410>
   34384:	mov	r2, #0
   34388:	cmp	r2, r7, lsr #11
   3438c:	bne	343a8 <flatcc_json_parser_string_escape@@Base+0x3e4>
   34390:	mov	r7, #192	; 0xc0
   34394:	mov	r2, #2
   34398:	orr	r7, r7, r0, lsr #6
   3439c:	strb	r2, [r3]
   343a0:	strb	r7, [r3, #1]
   343a4:	b	343cc <flatcc_json_parser_string_escape@@Base+0x408>
   343a8:	mov	r6, #224	; 0xe0
   343ac:	mov	r2, #3
   343b0:	orr	r6, r6, r7, lsr #12
   343b4:	strb	r2, [r3]
   343b8:	lsr	r7, r7, #6
   343bc:	strb	r6, [r3, #1]
   343c0:	mov	r6, #2
   343c4:	bfi	r7, r6, #6, #26
   343c8:	strb	r7, [r3, #2]
   343cc:	mvn	r7, #-67108863	; 0xfc000001
   343d0:	bfi	r0, r7, #6, #26
   343d4:	strb	r0, [r3, r2]
   343d8:	add	r2, r1, #6
   343dc:	mov	r0, r2
   343e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000343e4 <flatcc_json_parser_skip_constant@@Base>:
   343e4:	push	{r4, r5, r6, sl, fp, lr}
   343e8:	add	fp, sp, #16
   343ec:	cmp	r1, r2
   343f0:	beq	344a4 <flatcc_json_parser_skip_constant@@Base+0xc0>
   343f4:	mov	r4, r2
   343f8:	mov	r5, r0
   343fc:	ldrsb	r0, [r1]
   34400:	mov	r6, r1
   34404:	cmp	r0, #0
   34408:	bmi	3441c <flatcc_json_parser_skip_constant@@Base+0x38>
   3440c:	uxtb	r0, r0
   34410:	cmp	r0, #95	; 0x5f
   34414:	cmpne	r0, #46	; 0x2e
   34418:	bne	3442c <flatcc_json_parser_skip_constant@@Base+0x48>
   3441c:	add	r1, r6, #1
   34420:	cmp	r1, r4
   34424:	bne	343fc <flatcc_json_parser_skip_constant@@Base+0x18>
   34428:	b	3449c <flatcc_json_parser_skip_constant@@Base+0xb8>
   3442c:	sub	r1, r0, #48	; 0x30
   34430:	uxtb	r1, r1
   34434:	cmp	r1, #9
   34438:	bls	3441c <flatcc_json_parser_skip_constant@@Base+0x38>
   3443c:	orr	r1, r0, #32
   34440:	sub	r1, r1, #97	; 0x61
   34444:	uxtb	r1, r1
   34448:	cmp	r1, #25
   3444c:	bls	3441c <flatcc_json_parser_skip_constant@@Base+0x38>
   34450:	sub	r1, r4, r6
   34454:	cmp	r1, #2
   34458:	blt	34478 <flatcc_json_parser_skip_constant@@Base+0x94>
   3445c:	cmp	r0, #32
   34460:	bhi	34494 <flatcc_json_parser_skip_constant@@Base+0xb0>
   34464:	bne	34478 <flatcc_json_parser_skip_constant@@Base+0x94>
   34468:	mov	r1, r6
   3446c:	ldrb	r0, [r1, #1]!
   34470:	cmp	r0, #32
   34474:	bhi	34420 <flatcc_json_parser_skip_constant@@Base+0x3c>
   34478:	mov	r0, r5
   3447c:	mov	r1, r6
   34480:	mov	r2, r4
   34484:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   34488:	mov	r1, r0
   3448c:	cmp	r0, r6
   34490:	bne	34420 <flatcc_json_parser_skip_constant@@Base+0x3c>
   34494:	mov	r0, r6
   34498:	pop	{r4, r5, r6, sl, fp, pc}
   3449c:	mov	r0, r4
   344a0:	pop	{r4, r5, r6, sl, fp, pc}
   344a4:	mov	r0, r1
   344a8:	pop	{r4, r5, r6, sl, fp, pc}

000344ac <flatcc_json_parser_match_constant@@Base>:
   344ac:	push	{r4, r5, fp, lr}
   344b0:	add	fp, sp, #8
   344b4:	ldr	r5, [fp, #8]
   344b8:	sub	r4, r2, r1
   344bc:	cmp	r4, r3
   344c0:	ble	34530 <flatcc_json_parser_match_constant@@Base+0x84>
   344c4:	add	ip, r1, r3
   344c8:	ldrb	r4, [ip]
   344cc:	cmp	r4, #92	; 0x5c
   344d0:	beq	34540 <flatcc_json_parser_match_constant@@Base+0x94>
   344d4:	cmp	r4, #34	; 0x22
   344d8:	beq	3450c <flatcc_json_parser_match_constant@@Base+0x60>
   344dc:	cmp	r4, #32
   344e0:	bne	34530 <flatcc_json_parser_match_constant@@Base+0x84>
   344e4:	add	r1, r1, r3
   344e8:	add	r1, r1, #1
   344ec:	cmp	r2, r1
   344f0:	beq	3455c <flatcc_json_parser_match_constant@@Base+0xb0>
   344f4:	ldrb	r3, [r1], #1
   344f8:	cmp	r3, #32
   344fc:	beq	344ec <flatcc_json_parser_match_constant@@Base+0x40>
   34500:	cmp	r3, #34	; 0x22
   34504:	bne	345bc <flatcc_json_parser_match_constant@@Base+0x110>
   34508:	sub	ip, r1, #1
   3450c:	mvn	r2, ip
   34510:	add	r1, ip, #1
   34514:	cmp	r2, #2
   34518:	blt	345a0 <flatcc_json_parser_match_constant@@Base+0xf4>
   3451c:	ldrb	r2, [r1]
   34520:	cmp	r2, #32
   34524:	bls	34590 <flatcc_json_parser_match_constant@@Base+0xe4>
   34528:	mov	ip, r1
   3452c:	b	345ac <flatcc_json_parser_match_constant@@Base+0x100>
   34530:	mov	r0, #0
   34534:	str	r0, [r5]
   34538:	mov	r0, r1
   3453c:	pop	{r4, r5, fp, pc}
   34540:	mov	r1, #0
   34544:	str	r1, [r5]
   34548:	ldr	r1, [r0, #20]
   3454c:	cmp	r1, #0
   34550:	beq	3456c <flatcc_json_parser_match_constant@@Base+0xc0>
   34554:	mov	r0, r2
   34558:	pop	{r4, r5, fp, pc}
   3455c:	mov	r0, #0
   34560:	str	r0, [r5]
   34564:	mov	r0, r2
   34568:	pop	{r4, r5, fp, pc}
   3456c:	str	ip, [r0, #32]
   34570:	mov	r1, #18
   34574:	ldr	r3, [r0, #4]
   34578:	sub	r3, ip, r3
   3457c:	add	r3, r3, #1
   34580:	str	r3, [r0, #16]
   34584:	str	r1, [r0, #20]
   34588:	mov	r0, r2
   3458c:	pop	{r4, r5, fp, pc}
   34590:	bne	345a0 <flatcc_json_parser_match_constant@@Base+0xf4>
   34594:	ldrb	r2, [ip, #2]!
   34598:	cmp	r2, #32
   3459c:	bhi	345ac <flatcc_json_parser_match_constant@@Base+0x100>
   345a0:	mov	r2, #0
   345a4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   345a8:	mov	ip, r0
   345ac:	mov	r0, #0
   345b0:	str	r0, [r5]
   345b4:	mov	r0, ip
   345b8:	pop	{r4, r5, fp, pc}
   345bc:	mov	r0, #1
   345c0:	sub	ip, r1, #1
   345c4:	b	345b0 <flatcc_json_parser_match_constant@@Base+0x104>

000345c8 <flatcc_json_parser_unmatched_symbol@@Base>:
   345c8:	push	{r4, r5, fp, lr}
   345cc:	add	fp, sp, #8
   345d0:	mov	r5, r0
   345d4:	ldrb	r0, [r0, #8]
   345d8:	mov	r4, r2
   345dc:	tst	r0, #1
   345e0:	bne	34604 <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   345e4:	ldr	r0, [r5, #20]
   345e8:	cmp	r0, #0
   345ec:	bne	34714 <flatcc_json_parser_unmatched_symbol@@Base+0x14c>
   345f0:	str	r1, [r5, #32]
   345f4:	mov	r0, #13
   345f8:	ldr	r2, [r5, #4]
   345fc:	sub	r1, r1, r2
   34600:	b	3472c <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   34604:	cmp	r1, r4
   34608:	bne	34624 <flatcc_json_parser_unmatched_symbol@@Base+0x5c>
   3460c:	b	34650 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   34610:	cmp	r0, #34	; 0x22
   34614:	beq	34644 <flatcc_json_parser_unmatched_symbol@@Base+0x7c>
   34618:	add	r1, r1, #1
   3461c:	cmp	r1, r4
   34620:	beq	3464c <flatcc_json_parser_unmatched_symbol@@Base+0x84>
   34624:	ldrb	r0, [r1]
   34628:	cmp	r0, #92	; 0x5c
   3462c:	bne	34610 <flatcc_json_parser_unmatched_symbol@@Base+0x48>
   34630:	sub	r0, r4, r1
   34634:	cmp	r0, #2
   34638:	blt	34650 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   3463c:	add	r1, r1, #1
   34640:	b	34618 <flatcc_json_parser_unmatched_symbol@@Base+0x50>
   34644:	add	r2, r1, #1
   34648:	b	34680 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   3464c:	mov	r1, r4
   34650:	ldr	r0, [r5, #20]
   34654:	mov	r2, r4
   34658:	cmp	r0, #0
   3465c:	bne	34680 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   34660:	str	r1, [r5, #32]
   34664:	mov	r0, #20
   34668:	ldr	r2, [r5, #4]
   3466c:	sub	r1, r1, r2
   34670:	mov	r2, r4
   34674:	add	r1, r1, #1
   34678:	str	r1, [r5, #16]
   3467c:	str	r0, [r5, #20]
   34680:	sub	r0, r4, r2
   34684:	cmp	r0, #2
   34688:	blt	346bc <flatcc_json_parser_unmatched_symbol@@Base+0xf4>
   3468c:	ldrb	r0, [r2]
   34690:	cmp	r0, #32
   34694:	bls	346a8 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   34698:	mov	r3, r2
   3469c:	cmp	r3, r4
   346a0:	bne	346d8 <flatcc_json_parser_unmatched_symbol@@Base+0x110>
   346a4:	b	34708 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   346a8:	bne	346bc <flatcc_json_parser_unmatched_symbol@@Base+0xf4>
   346ac:	mov	r3, r2
   346b0:	ldrb	r0, [r3, #1]!
   346b4:	cmp	r0, #32
   346b8:	bhi	346d0 <flatcc_json_parser_unmatched_symbol@@Base+0x108>
   346bc:	mov	r1, r2
   346c0:	mov	r0, r5
   346c4:	mov	r2, r4
   346c8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   346cc:	mov	r3, r0
   346d0:	cmp	r3, r4
   346d4:	beq	34708 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   346d8:	ldrb	r0, [r3]
   346dc:	cmp	r0, #58	; 0x3a
   346e0:	bne	34708 <flatcc_json_parser_unmatched_symbol@@Base+0x140>
   346e4:	add	r1, r3, #1
   346e8:	sub	r0, r4, r1
   346ec:	cmp	r0, #2
   346f0:	blt	34750 <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   346f4:	ldrb	r0, [r1]
   346f8:	cmp	r0, #32
   346fc:	bls	34740 <flatcc_json_parser_unmatched_symbol@@Base+0x178>
   34700:	mov	r3, r1
   34704:	b	34760 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   34708:	ldr	r0, [r5, #20]
   3470c:	cmp	r0, #0
   34710:	beq	3471c <flatcc_json_parser_unmatched_symbol@@Base+0x154>
   34714:	mov	r0, r4
   34718:	pop	{r4, r5, fp, pc}
   3471c:	str	r3, [r5, #32]
   34720:	mov	r0, #4
   34724:	ldr	r1, [r5, #4]
   34728:	sub	r1, r3, r1
   3472c:	add	r1, r1, #1
   34730:	str	r1, [r5, #16]
   34734:	str	r0, [r5, #20]
   34738:	mov	r0, r4
   3473c:	pop	{r4, r5, fp, pc}
   34740:	bne	34750 <flatcc_json_parser_unmatched_symbol@@Base+0x188>
   34744:	ldrb	r0, [r3, #2]!
   34748:	cmp	r0, #32
   3474c:	bhi	34760 <flatcc_json_parser_unmatched_symbol@@Base+0x198>
   34750:	mov	r0, r5
   34754:	mov	r2, r4
   34758:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   3475c:	mov	r3, r0
   34760:	mov	r0, r5
   34764:	mov	r1, r3
   34768:	mov	r2, r4
   3476c:	pop	{r4, r5, fp, lr}
   34770:	b	34774 <flatcc_json_parser_generic_json@@Base>

00034774 <flatcc_json_parser_generic_json@@Base>:
   34774:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34778:	add	fp, sp, #28
   3477c:	sub	sp, sp, #548	; 0x224
   34780:	mov	r7, r1
   34784:	cmp	r1, r2
   34788:	beq	35660 <flatcc_json_parser_generic_json@@Base+0xeec>
   3478c:	add	r1, sp, #32
   34790:	mov	r8, r0
   34794:	mov	r4, r2
   34798:	mov	r9, #0
   3479c:	sub	r0, r1, #1
   347a0:	add	r5, r8, #16
   347a4:	add	sl, r8, #4
   347a8:	add	r6, r8, #20
   347ac:	str	r0, [sp, #24]
   347b0:	add	r0, r2, #1
   347b4:	str	r5, [sp, #8]
   347b8:	str	sl, [sp, #12]
   347bc:	str	r6, [sp, #16]
   347c0:	str	r0, [sp, #4]
   347c4:	add	r0, r8, #32
   347c8:	str	r0, [sp, #20]
   347cc:	mov	r0, r1
   347d0:	cmp	r9, #0
   347d4:	beq	3494c <flatcc_json_parser_generic_json@@Base+0x1d8>
   347d8:	ldrb	r0, [r0, #-1]
   347dc:	cmp	r0, #125	; 0x7d
   347e0:	bne	3494c <flatcc_json_parser_generic_json@@Base+0x1d8>
   347e4:	ldrb	r0, [r7]
   347e8:	cmp	r0, #34	; 0x22
   347ec:	bne	34838 <flatcc_json_parser_generic_json@@Base+0xc4>
   347f0:	add	r0, r7, #1
   347f4:	mov	r2, r4
   347f8:	cmp	r0, r4
   347fc:	bne	34818 <flatcc_json_parser_generic_json@@Base+0xa4>
   34800:	b	3486c <flatcc_json_parser_generic_json@@Base+0xf8>
   34804:	cmp	r1, #34	; 0x22
   34808:	beq	348a4 <flatcc_json_parser_generic_json@@Base+0x130>
   3480c:	add	r0, r0, #1
   34810:	cmp	r0, r4
   34814:	beq	34868 <flatcc_json_parser_generic_json@@Base+0xf4>
   34818:	ldrb	r1, [r0]
   3481c:	cmp	r1, #92	; 0x5c
   34820:	bne	34804 <flatcc_json_parser_generic_json@@Base+0x90>
   34824:	sub	r1, r4, r0
   34828:	cmp	r1, #2
   3482c:	blt	35114 <flatcc_json_parser_generic_json@@Base+0x9a0>
   34830:	add	r0, r0, #1
   34834:	b	3480c <flatcc_json_parser_generic_json@@Base+0x98>
   34838:	ldr	r0, [r6]
   3483c:	mov	r1, r4
   34840:	cmp	r0, #0
   34844:	bne	348a8 <flatcc_json_parser_generic_json@@Base+0x134>
   34848:	mov	r0, #5
   3484c:	str	r0, [r6]
   34850:	ldr	r0, [sl]
   34854:	sub	r0, r7, r0
   34858:	add	r0, r0, #1
   3485c:	str	r0, [r5]
   34860:	ldr	r0, [sp, #20]
   34864:	str	r7, [r0]
   34868:	mov	r2, r4
   3486c:	ldr	r0, [r6]
   34870:	mov	r1, r4
   34874:	cmp	r0, #0
   34878:	bne	348a8 <flatcc_json_parser_generic_json@@Base+0x134>
   3487c:	mov	r0, #20
   34880:	mov	r1, r4
   34884:	str	r0, [r6]
   34888:	ldr	r0, [sl]
   3488c:	sub	r0, r2, r0
   34890:	add	r0, r0, #1
   34894:	str	r0, [r5]
   34898:	ldr	r0, [sp, #20]
   3489c:	str	r2, [r0]
   348a0:	b	348a8 <flatcc_json_parser_generic_json@@Base+0x134>
   348a4:	add	r1, r0, #1
   348a8:	sub	r0, r4, r1
   348ac:	cmp	r0, #2
   348b0:	blt	348e4 <flatcc_json_parser_generic_json@@Base+0x170>
   348b4:	ldrb	r0, [r1]
   348b8:	cmp	r0, #32
   348bc:	bls	348d0 <flatcc_json_parser_generic_json@@Base+0x15c>
   348c0:	mov	r7, r1
   348c4:	cmp	r7, r4
   348c8:	bne	348fc <flatcc_json_parser_generic_json@@Base+0x188>
   348cc:	b	35710 <flatcc_json_parser_generic_json@@Base+0xf9c>
   348d0:	bne	348e4 <flatcc_json_parser_generic_json@@Base+0x170>
   348d4:	mov	r7, r1
   348d8:	ldrb	r0, [r7, #1]!
   348dc:	cmp	r0, #32
   348e0:	bhi	348f4 <flatcc_json_parser_generic_json@@Base+0x180>
   348e4:	mov	r0, r8
   348e8:	mov	r2, r4
   348ec:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   348f0:	mov	r7, r0
   348f4:	cmp	r7, r4
   348f8:	beq	35710 <flatcc_json_parser_generic_json@@Base+0xf9c>
   348fc:	ldrb	r0, [r7]
   34900:	cmp	r0, #58	; 0x3a
   34904:	bne	35728 <flatcc_json_parser_generic_json@@Base+0xfb4>
   34908:	add	r1, r7, #1
   3490c:	sub	r0, r4, r1
   34910:	cmp	r0, #2
   34914:	blt	3493c <flatcc_json_parser_generic_json@@Base+0x1c8>
   34918:	ldrb	sl, [r1]
   3491c:	cmp	sl, #32
   34920:	bls	3492c <flatcc_json_parser_generic_json@@Base+0x1b8>
   34924:	mov	r7, r1
   34928:	b	34950 <flatcc_json_parser_generic_json@@Base+0x1dc>
   3492c:	bne	3493c <flatcc_json_parser_generic_json@@Base+0x1c8>
   34930:	ldrb	sl, [r7, #2]!
   34934:	cmp	sl, #32
   34938:	bhi	34950 <flatcc_json_parser_generic_json@@Base+0x1dc>
   3493c:	mov	r0, r8
   34940:	mov	r2, r4
   34944:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   34948:	mov	r7, r0
   3494c:	ldrb	sl, [r7]
   34950:	sub	r0, sl, #34	; 0x22
   34954:	cmp	r0, #89	; 0x59
   34958:	bhi	35668 <flatcc_json_parser_generic_json@@Base+0xef4>
   3495c:	add	r1, pc, #4
   34960:	ldr	r0, [r1, r0, lsl #2]
   34964:	add	pc, r1, r0
   34968:	andeq	r0, r0, r8, lsl #7
   3496c:	andeq	r0, r0, r0, lsl #26
   34970:	andeq	r0, r0, r0, lsl #26
   34974:	andeq	r0, r0, r0, lsl #26
   34978:	andeq	r0, r0, r0, lsl #26
   3497c:	andeq	r0, r0, r0, lsl #26
   34980:	andeq	r0, r0, r0, lsl #26
   34984:	andeq	r0, r0, r0, lsl #26
   34988:	andeq	r0, r0, r0, lsl #26
   3498c:	andeq	r0, r0, r0, lsl #26
   34990:	andeq	r0, r0, r0, lsl #26
   34994:	andeq	r0, r0, r8, ror #2
   34998:	andeq	r0, r0, r0, lsl #26
   3499c:	andeq	r0, r0, r0, lsl #26
   349a0:	andeq	r0, r0, r8, ror #2
   349a4:	andeq	r0, r0, r8, ror #2
   349a8:	andeq	r0, r0, r8, ror #2
   349ac:	andeq	r0, r0, r8, ror #2
   349b0:	andeq	r0, r0, r8, ror #2
   349b4:	andeq	r0, r0, r8, ror #2
   349b8:	andeq	r0, r0, r8, ror #2
   349bc:	andeq	r0, r0, r8, ror #2
   349c0:	andeq	r0, r0, r8, ror #2
   349c4:	andeq	r0, r0, r8, ror #2
   349c8:	andeq	r0, r0, r0, lsl #26
   349cc:	andeq	r0, r0, r0, lsl #26
   349d0:	andeq	r0, r0, r0, lsl #26
   349d4:	andeq	r0, r0, r0, lsl #26
   349d8:	andeq	r0, r0, r0, lsl #26
   349dc:	andeq	r0, r0, r0, lsl #26
   349e0:	andeq	r0, r0, r0, lsl #26
   349e4:	andeq	r0, r0, r0, lsl #26
   349e8:	andeq	r0, r0, r0, lsl #26
   349ec:	andeq	r0, r0, r0, lsl #26
   349f0:	andeq	r0, r0, r0, lsl #26
   349f4:	andeq	r0, r0, r0, lsl #26
   349f8:	andeq	r0, r0, r0, lsl #26
   349fc:	andeq	r0, r0, r0, lsl #26
   34a00:	andeq	r0, r0, r0, lsl #26
   34a04:	andeq	r0, r0, r0, lsl #26
   34a08:	andeq	r0, r0, r0, lsl #26
   34a0c:	andeq	r0, r0, r0, lsl #26
   34a10:	andeq	r0, r0, r0, lsl #26
   34a14:	andeq	r0, r0, r0, lsl #26
   34a18:	andeq	r0, r0, r0, lsl #26
   34a1c:	andeq	r0, r0, r0, lsl #26
   34a20:	andeq	r0, r0, r0, lsl #26
   34a24:	andeq	r0, r0, r0, lsl #26
   34a28:	andeq	r0, r0, r0, lsl #26
   34a2c:	andeq	r0, r0, r0, lsl #26
   34a30:	andeq	r0, r0, r0, lsl #26
   34a34:	andeq	r0, r0, r0, lsl #26
   34a38:	andeq	r0, r0, r0, lsl #26
   34a3c:	andeq	r0, r0, r0, lsl #26
   34a40:	andeq	r0, r0, r0, lsl #26
   34a44:	andeq	r0, r0, r0, lsl #26
   34a48:	andeq	r0, r0, r0, lsl #26
   34a4c:	andeq	r0, r0, r8, lsr #9
   34a50:	andeq	r0, r0, r0, lsl #26
   34a54:	andeq	r0, r0, r0, lsl #26
   34a58:	andeq	r0, r0, r0, lsl #26
   34a5c:	andeq	r0, r0, r0, lsl #26
   34a60:	andeq	r0, r0, r0, lsl #26
   34a64:	andeq	r0, r0, r0, lsl #26
   34a68:	andeq	r0, r0, r0, lsl #26
   34a6c:	andeq	r0, r0, r0, lsl #26
   34a70:	andeq	r0, r0, r0, lsl #26
   34a74:	andeq	r0, r0, r0, lsl #26
   34a78:	andeq	r0, r0, r8, ror #4
   34a7c:	andeq	r0, r0, r0, lsl #26
   34a80:	andeq	r0, r0, r0, lsl #26
   34a84:	andeq	r0, r0, r0, lsl #26
   34a88:	andeq	r0, r0, r0, lsl #26
   34a8c:	andeq	r0, r0, r0, lsl #26
   34a90:	andeq	r0, r0, r0, lsl #26
   34a94:	andeq	r0, r0, r0, lsl #26
   34a98:	strdeq	r0, [r0], -r4
   34a9c:	andeq	r0, r0, r0, lsl #26
   34aa0:	andeq	r0, r0, r0, lsl #26
   34aa4:	andeq	r0, r0, r0, lsl #26
   34aa8:	andeq	r0, r0, r0, lsl #26
   34aac:	andeq	r0, r0, r0, lsl #26
   34ab0:	andeq	r0, r0, r8, ror #4
   34ab4:	andeq	r0, r0, r0, lsl #26
   34ab8:	andeq	r0, r0, r0, lsl #26
   34abc:	andeq	r0, r0, r0, lsl #26
   34ac0:	andeq	r0, r0, r0, lsl #26
   34ac4:	andeq	r0, r0, r0, lsl #26
   34ac8:	andeq	r0, r0, r0, lsl #26
   34acc:	andeq	r0, r0, r8, lsr #10
   34ad0:	cmp	r7, r4
   34ad4:	beq	34b6c <flatcc_json_parser_generic_json@@Base+0x3f8>
   34ad8:	cmp	sl, #45	; 0x2d
   34adc:	bne	34af0 <flatcc_json_parser_generic_json@@Base+0x37c>
   34ae0:	add	r7, r7, #1
   34ae4:	cmp	r7, r4
   34ae8:	beq	34cd8 <flatcc_json_parser_generic_json@@Base+0x564>
   34aec:	ldrb	sl, [r7]
   34af0:	cmp	sl, #48	; 0x30
   34af4:	bne	34b80 <flatcc_json_parser_generic_json@@Base+0x40c>
   34af8:	ldr	sl, [sp, #12]
   34afc:	ldr	r6, [sp, #16]
   34b00:	ldr	r5, [sp, #8]
   34b04:	add	r1, r7, #1
   34b08:	cmp	r1, r4
   34b0c:	mov	r2, r4
   34b10:	beq	35078 <flatcc_json_parser_generic_json@@Base+0x904>
   34b14:	ldrb	r0, [r1]
   34b18:	cmp	r0, #46	; 0x2e
   34b1c:	bne	34f10 <flatcc_json_parser_generic_json@@Base+0x79c>
   34b20:	mov	r0, r1
   34b24:	ldrb	r2, [r0, #1]!
   34b28:	sub	r2, r2, #48	; 0x30
   34b2c:	uxtb	r2, r2
   34b30:	cmp	r2, #10
   34b34:	bcc	34edc <flatcc_json_parser_generic_json@@Base+0x768>
   34b38:	ldr	r1, [r6]
   34b3c:	cmp	r1, #0
   34b40:	bne	35084 <flatcc_json_parser_generic_json@@Base+0x910>
   34b44:	mov	r1, #6
   34b48:	str	r1, [r6]
   34b4c:	ldr	r1, [sl]
   34b50:	sub	r1, r0, r1
   34b54:	add	r1, r1, #1
   34b58:	str	r1, [r5]
   34b5c:	ldr	r1, [sp, #20]
   34b60:	str	r0, [r1]
   34b64:	mov	r1, r4
   34b68:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   34b6c:	ldr	sl, [sp, #12]
   34b70:	ldr	r6, [sp, #16]
   34b74:	ldr	r5, [sp, #8]
   34b78:	mov	r1, r4
   34b7c:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   34b80:	sub	r0, sl, #49	; 0x31
   34b84:	uxtb	r0, r0
   34b88:	cmp	r0, #8
   34b8c:	bls	34ca4 <flatcc_json_parser_generic_json@@Base+0x530>
   34b90:	ldr	r6, [sp, #16]
   34b94:	ldr	sl, [sp, #12]
   34b98:	ldr	r0, [r6]
   34b9c:	cmp	r0, #0
   34ba0:	bne	34b74 <flatcc_json_parser_generic_json@@Base+0x400>
   34ba4:	mov	r0, #6
   34ba8:	ldr	r5, [sp, #8]
   34bac:	mov	r1, r4
   34bb0:	str	r0, [r6]
   34bb4:	ldr	r0, [sl]
   34bb8:	sub	r0, r7, r0
   34bbc:	add	r0, r0, #1
   34bc0:	str	r0, [r5]
   34bc4:	ldr	r0, [sp, #20]
   34bc8:	str	r7, [r0]
   34bcc:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   34bd0:	sub	r5, r4, r7
   34bd4:	cmp	r5, #4
   34bd8:	blt	34c1c <flatcc_json_parser_generic_json@@Base+0x4a8>
   34bdc:	ldr	r1, [pc, #2988]	; 35790 <flatcc_json_parser_generic_json@@Base+0x101c>
   34be0:	mov	r0, r7
   34be4:	mov	r2, #4
   34be8:	add	r1, pc, r1
   34bec:	bl	14eb4 <bcmp@plt>
   34bf0:	cmp	r0, #0
   34bf4:	beq	350cc <flatcc_json_parser_generic_json@@Base+0x958>
   34bf8:	cmp	r5, #5
   34bfc:	blt	34c1c <flatcc_json_parser_generic_json@@Base+0x4a8>
   34c00:	ldr	r1, [pc, #2956]	; 35794 <flatcc_json_parser_generic_json@@Base+0x1020>
   34c04:	mov	r0, r7
   34c08:	mov	r2, #5
   34c0c:	add	r1, pc, r1
   34c10:	bl	14eb4 <bcmp@plt>
   34c14:	cmp	r0, #0
   34c18:	beq	35350 <flatcc_json_parser_generic_json@@Base+0xbdc>
   34c1c:	cmp	r7, r4
   34c20:	mov	r1, r4
   34c24:	beq	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   34c28:	sub	r0, sl, #48	; 0x30
   34c2c:	mov	r2, #1
   34c30:	uxtb	r1, r0
   34c34:	mov	r0, #0
   34c38:	cmp	r1, #9
   34c3c:	bhi	350c0 <flatcc_json_parser_generic_json@@Base+0x94c>
   34c40:	add	r1, r7, #1
   34c44:	mov	r3, #0
   34c48:	mov	r2, #0
   34c4c:	add	r6, r2, r2, lsl #2
   34c50:	uxtb	r0, sl
   34c54:	mov	r5, #10
   34c58:	lsl	r6, r6, #1
   34c5c:	umlal	r0, r6, r3, r5
   34c60:	subs	r0, r0, #48	; 0x30
   34c64:	sbc	ip, r6, #0
   34c68:	subs	r3, r0, r3
   34c6c:	sbcs	r2, ip, r2
   34c70:	bcc	35210 <flatcc_json_parser_generic_json@@Base+0xa9c>
   34c74:	cmp	r4, r1
   34c78:	beq	3525c <flatcc_json_parser_generic_json@@Base+0xae8>
   34c7c:	ldrb	sl, [r1], #1
   34c80:	mov	r3, r0
   34c84:	sub	r2, sl, #48	; 0x30
   34c88:	uxtb	r2, r2
   34c8c:	cmp	r2, #10
   34c90:	mov	r2, ip
   34c94:	bcc	34c4c <flatcc_json_parser_generic_json@@Base+0x4d8>
   34c98:	sub	lr, r1, #1
   34c9c:	mov	r2, #1
   34ca0:	b	35264 <flatcc_json_parser_generic_json@@Base+0xaf0>
   34ca4:	ldr	sl, [sp, #12]
   34ca8:	ldr	r6, [sp, #16]
   34cac:	ldr	r5, [sp, #8]
   34cb0:	add	r0, r7, #1
   34cb4:	cmp	r4, r0
   34cb8:	beq	35074 <flatcc_json_parser_generic_json@@Base+0x900>
   34cbc:	ldrb	r1, [r0], #1
   34cc0:	sub	r1, r1, #48	; 0x30
   34cc4:	uxtb	r1, r1
   34cc8:	cmp	r1, #10
   34ccc:	bcc	34cb4 <flatcc_json_parser_generic_json@@Base+0x540>
   34cd0:	sub	r1, r0, #1
   34cd4:	b	34b08 <flatcc_json_parser_generic_json@@Base+0x394>
   34cd8:	ldr	r6, [sp, #16]
   34cdc:	ldr	r0, [r6]
   34ce0:	cmp	r0, #0
   34ce4:	beq	350b4 <flatcc_json_parser_generic_json@@Base+0x940>
   34ce8:	ldr	sl, [sp, #12]
   34cec:	b	34b74 <flatcc_json_parser_generic_json@@Base+0x400>
   34cf0:	cmp	r7, r4
   34cf4:	beq	350d4 <flatcc_json_parser_generic_json@@Base+0x960>
   34cf8:	ldr	sl, [sp, #12]
   34cfc:	ldr	r6, [sp, #16]
   34d00:	ldr	r5, [sp, #8]
   34d04:	add	r0, r7, #1
   34d08:	mov	r1, r4
   34d0c:	add	r7, sp, #28
   34d10:	cmp	r0, r4
   34d14:	bne	34d44 <flatcc_json_parser_generic_json@@Base+0x5d0>
   34d18:	b	351e0 <flatcc_json_parser_generic_json@@Base+0xa6c>
   34d1c:	ldr	r1, [r6]
   34d20:	cmp	r1, #0
   34d24:	mov	r1, r4
   34d28:	beq	34db0 <flatcc_json_parser_generic_json@@Base+0x63c>
   34d2c:	mov	r0, r8
   34d30:	mov	r2, r4
   34d34:	mov	r3, r7
   34d38:	bl	33fc4 <flatcc_json_parser_string_escape@@Base>
   34d3c:	cmp	r0, r4
   34d40:	beq	351dc <flatcc_json_parser_generic_json@@Base+0xa68>
   34d44:	ldrb	r1, [r0]
   34d48:	cmp	r1, #34	; 0x22
   34d4c:	beq	351bc <flatcc_json_parser_generic_json@@Base+0xa48>
   34d50:	cmp	r1, #32
   34d54:	bcc	34d1c <flatcc_json_parser_generic_json@@Base+0x5a8>
   34d58:	rsb	r0, r0, #0
   34d5c:	uxtb	r2, r1
   34d60:	cmp	r2, #34	; 0x22
   34d64:	cmpne	r2, #92	; 0x5c
   34d68:	beq	34d94 <flatcc_json_parser_generic_json@@Base+0x620>
   34d6c:	add	r1, r4, r0
   34d70:	cmp	r1, #1
   34d74:	beq	34dd8 <flatcc_json_parser_generic_json@@Base+0x664>
   34d78:	rsb	r1, r0, #0
   34d7c:	sub	r0, r0, #1
   34d80:	ldrb	r1, [r1, #1]
   34d84:	cmp	r1, #32
   34d88:	bcs	34d5c <flatcc_json_parser_generic_json@@Base+0x5e8>
   34d8c:	rsb	r0, r0, #0
   34d90:	b	34d1c <flatcc_json_parser_generic_json@@Base+0x5a8>
   34d94:	adds	r1, r4, r0
   34d98:	mov	r1, r4
   34d9c:	beq	34d2c <flatcc_json_parser_generic_json@@Base+0x5b8>
   34da0:	rsb	r1, r0, #0
   34da4:	cmp	r2, #34	; 0x22
   34da8:	bne	34d2c <flatcc_json_parser_generic_json@@Base+0x5b8>
   34dac:	b	351c0 <flatcc_json_parser_generic_json@@Base+0xa4c>
   34db0:	mov	r1, #17
   34db4:	str	r1, [r6]
   34db8:	ldr	r1, [sl]
   34dbc:	sub	r1, r0, r1
   34dc0:	add	r1, r1, #1
   34dc4:	str	r1, [r5]
   34dc8:	ldr	r1, [sp, #20]
   34dcc:	str	r0, [r1]
   34dd0:	mov	r1, r4
   34dd4:	b	34d2c <flatcc_json_parser_generic_json@@Base+0x5b8>
   34dd8:	ldr	r0, [r6]
   34ddc:	mov	r1, r4
   34de0:	cmp	r0, #0
   34de4:	bne	34d2c <flatcc_json_parser_generic_json@@Base+0x5b8>
   34de8:	mov	r0, #20
   34dec:	ldr	r1, [sp, #4]
   34df0:	str	r0, [r6]
   34df4:	ldr	r0, [sl]
   34df8:	sub	r0, r1, r0
   34dfc:	mov	r1, r4
   34e00:	str	r0, [r5]
   34e04:	ldr	r0, [sp, #20]
   34e08:	str	r4, [r0]
   34e0c:	b	34d2c <flatcc_json_parser_generic_json@@Base+0x5b8>
   34e10:	cmp	r9, #512	; 0x200
   34e14:	beq	3576c <flatcc_json_parser_generic_json@@Base+0xff8>
   34e18:	add	r0, sp, #32
   34e1c:	mov	r1, #93	; 0x5d
   34e20:	ldr	sl, [sp, #12]
   34e24:	ldr	r6, [sp, #16]
   34e28:	ldr	r5, [sp, #8]
   34e2c:	strb	r1, [r0, r9]
   34e30:	add	r1, r7, #1
   34e34:	sub	r0, r4, r1
   34e38:	cmp	r0, #2
   34e3c:	blt	3512c <flatcc_json_parser_generic_json@@Base+0x9b8>
   34e40:	ldrb	r0, [r1]
   34e44:	cmp	r0, #32
   34e48:	bls	3511c <flatcc_json_parser_generic_json@@Base+0x9a8>
   34e4c:	mov	r7, r1
   34e50:	cmp	r7, r4
   34e54:	bne	35144 <flatcc_json_parser_generic_json@@Base+0x9d0>
   34e58:	b	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   34e5c:	sub	r0, r4, r7
   34e60:	mov	r1, r7
   34e64:	cmp	r0, #4
   34e68:	blt	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   34e6c:	ldr	r1, [pc, #2340]	; 35798 <flatcc_json_parser_generic_json@@Base+0x1024>
   34e70:	mov	r0, r7
   34e74:	mov	r2, #4
   34e78:	add	r1, pc, r1
   34e7c:	bl	14eb4 <bcmp@plt>
   34e80:	cmp	r0, #0
   34e84:	mov	r1, r7
   34e88:	addeq	r1, r1, #4
   34e8c:	b	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   34e90:	cmp	r9, #512	; 0x200
   34e94:	beq	3576c <flatcc_json_parser_generic_json@@Base+0xff8>
   34e98:	add	r0, sp, #32
   34e9c:	mov	r1, #125	; 0x7d
   34ea0:	ldr	sl, [sp, #12]
   34ea4:	ldr	r6, [sp, #16]
   34ea8:	ldr	r5, [sp, #8]
   34eac:	strb	r1, [r0, r9]
   34eb0:	add	r1, r7, #1
   34eb4:	sub	r0, r4, r1
   34eb8:	cmp	r0, #2
   34ebc:	blt	3516c <flatcc_json_parser_generic_json@@Base+0x9f8>
   34ec0:	ldrb	r0, [r1]
   34ec4:	cmp	r0, #32
   34ec8:	bls	3515c <flatcc_json_parser_generic_json@@Base+0x9e8>
   34ecc:	mov	r7, r1
   34ed0:	cmp	r7, r4
   34ed4:	bne	35184 <flatcc_json_parser_generic_json@@Base+0xa10>
   34ed8:	b	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   34edc:	add	r1, r1, #2
   34ee0:	mov	r2, r4
   34ee4:	cmp	r1, r4
   34ee8:	beq	35078 <flatcc_json_parser_generic_json@@Base+0x904>
   34eec:	ldrb	r0, [r1]
   34ef0:	sub	r2, r0, #48	; 0x30
   34ef4:	uxtb	r2, r2
   34ef8:	cmp	r2, #9
   34efc:	bhi	34f10 <flatcc_json_parser_generic_json@@Base+0x79c>
   34f00:	add	r1, r1, #1
   34f04:	cmp	r4, r1
   34f08:	bne	34eec <flatcc_json_parser_generic_json@@Base+0x778>
   34f0c:	b	35074 <flatcc_json_parser_generic_json@@Base+0x900>
   34f10:	cmp	r1, r4
   34f14:	mov	r2, r4
   34f18:	beq	35078 <flatcc_json_parser_generic_json@@Base+0x904>
   34f1c:	orr	r2, r0, #32
   34f20:	cmp	r2, #101	; 0x65
   34f24:	bne	34f84 <flatcc_json_parser_generic_json@@Base+0x810>
   34f28:	add	r0, r1, #1
   34f2c:	cmp	r0, r4
   34f30:	beq	3519c <flatcc_json_parser_generic_json@@Base+0xa28>
   34f34:	ldrb	r2, [r0]
   34f38:	cmp	r2, #45	; 0x2d
   34f3c:	cmpne	r2, #43	; 0x2b
   34f40:	addeq	r0, r1, #2
   34f44:	cmp	r0, r4
   34f48:	beq	34b38 <flatcc_json_parser_generic_json@@Base+0x3c4>
   34f4c:	ldrb	r1, [r0]
   34f50:	sub	r1, r1, #48	; 0x30
   34f54:	uxtb	r1, r1
   34f58:	cmp	r1, #9
   34f5c:	bhi	34b38 <flatcc_json_parser_generic_json@@Base+0x3c4>
   34f60:	add	r1, r0, #1
   34f64:	cmp	r4, r1
   34f68:	beq	35074 <flatcc_json_parser_generic_json@@Base+0x900>
   34f6c:	ldrb	r0, [r1], #1
   34f70:	sub	r2, r0, #48	; 0x30
   34f74:	uxtb	r2, r2
   34f78:	cmp	r2, #10
   34f7c:	bcc	34f64 <flatcc_json_parser_generic_json@@Base+0x7f0>
   34f80:	sub	r1, r1, #1
   34f84:	cmp	r1, r4
   34f88:	mov	r2, r4
   34f8c:	beq	35078 <flatcc_json_parser_generic_json@@Base+0x904>
   34f90:	sub	r2, r0, #9
   34f94:	cmp	r2, #49	; 0x31
   34f98:	bhi	35648 <flatcc_json_parser_generic_json@@Base+0xed4>
   34f9c:	add	r0, pc, #8
   34fa0:	ldr	r3, [r0, r2, lsl #2]
   34fa4:	mov	r2, r1
   34fa8:	add	pc, r0, r3
   34fac:			; <UNDEFINED> instruction: 0x000003bc
   34fb0:			; <UNDEFINED> instruction: 0x000003bc
   34fb4:			; <UNDEFINED> instruction: 0x000003bc
   34fb8:	andeq	r0, r0, ip, asr #1
   34fbc:			; <UNDEFINED> instruction: 0x000003bc
   34fc0:	andeq	r0, r0, ip, asr #1
   34fc4:	andeq	r0, r0, ip, asr #1
   34fc8:	andeq	r0, r0, ip, asr #1
   34fcc:	andeq	r0, r0, ip, asr #1
   34fd0:	andeq	r0, r0, ip, asr #1
   34fd4:	andeq	r0, r0, ip, asr #1
   34fd8:	andeq	r0, r0, ip, asr #1
   34fdc:	andeq	r0, r0, ip, asr #1
   34fe0:	andeq	r0, r0, ip, asr #1
   34fe4:	andeq	r0, r0, ip, asr #1
   34fe8:	andeq	r0, r0, ip, asr #1
   34fec:	andeq	r0, r0, ip, asr #1
   34ff0:	andeq	r0, r0, ip, asr #1
   34ff4:	andeq	r0, r0, ip, asr #1
   34ff8:	andeq	r0, r0, ip, asr #1
   34ffc:	andeq	r0, r0, ip, asr #1
   35000:	andeq	r0, r0, ip, asr #1
   35004:	andeq	r0, r0, ip, asr #1
   35008:			; <UNDEFINED> instruction: 0x000003bc
   3500c:	andeq	r0, r0, ip, asr #1
   35010:	andeq	r0, r0, ip, asr #1
   35014:	andeq	r0, r0, ip, asr #1
   35018:	andeq	r0, r0, ip, asr #1
   3501c:	andeq	r0, r0, ip, asr #1
   35020:	andeq	r0, r0, ip, asr #1
   35024:	andeq	r0, r0, ip, asr #1
   35028:	andeq	r0, r0, ip, asr #1
   3502c:	andeq	r0, r0, ip, asr #1
   35030:	andeq	r0, r0, ip, asr #1
   35034:	andeq	r0, r0, ip, asr #1
   35038:			; <UNDEFINED> instruction: 0x000003bc
   3503c:	andeq	r0, r0, ip, asr #1
   35040:	andeq	r0, r0, ip, asr #1
   35044:	andeq	r0, r0, ip, asr #1
   35048:	andeq	r0, r0, ip, asr #1
   3504c:	andeq	r0, r0, ip, asr #1
   35050:	andeq	r0, r0, ip, asr #1
   35054:	andeq	r0, r0, ip, asr #1
   35058:	andeq	r0, r0, ip, asr #1
   3505c:	andeq	r0, r0, ip, asr #1
   35060:	andeq	r0, r0, ip, asr #1
   35064:	andeq	r0, r0, ip, asr #1
   35068:	andeq	r0, r0, ip, asr #1
   3506c:	andeq	r0, r0, ip, asr #1
   35070:			; <UNDEFINED> instruction: 0x000003bc
   35074:	mov	r2, r4
   35078:	ldr	r0, [r6]
   3507c:	cmp	r0, #0
   35080:	beq	3508c <flatcc_json_parser_generic_json@@Base+0x918>
   35084:	mov	r1, r4
   35088:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   3508c:	mov	r0, #6
   35090:	mov	r1, r4
   35094:	str	r0, [r6]
   35098:	ldr	r0, [sl]
   3509c:	sub	r0, r2, r0
   350a0:	add	r0, r0, #1
   350a4:	str	r0, [r5]
   350a8:	ldr	r0, [sp, #20]
   350ac:	str	r2, [r0]
   350b0:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   350b4:	ldr	sl, [sp, #12]
   350b8:	mov	r0, #6
   350bc:	b	350ec <flatcc_json_parser_generic_json@@Base+0x978>
   350c0:	mov	lr, r7
   350c4:	mov	ip, #0
   350c8:	b	35264 <flatcc_json_parser_generic_json@@Base+0xaf0>
   350cc:	add	r1, r7, #4
   350d0:	b	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   350d4:	ldr	r6, [sp, #16]
   350d8:	ldr	sl, [sp, #12]
   350dc:	ldr	r0, [r6]
   350e0:	cmp	r0, #0
   350e4:	bne	34b74 <flatcc_json_parser_generic_json@@Base+0x400>
   350e8:	mov	r0, #16
   350ec:	str	r0, [r6]
   350f0:	ldr	r0, [sl]
   350f4:	ldr	r1, [sp, #4]
   350f8:	ldr	r5, [sp, #8]
   350fc:	sub	r0, r1, r0
   35100:	str	r0, [r5]
   35104:	ldr	r0, [sp, #20]
   35108:	mov	r1, r4
   3510c:	str	r4, [r0]
   35110:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   35114:	mov	r2, r0
   35118:	b	3486c <flatcc_json_parser_generic_json@@Base+0xf8>
   3511c:	bne	3512c <flatcc_json_parser_generic_json@@Base+0x9b8>
   35120:	ldrb	r0, [r7, #2]!
   35124:	cmp	r0, #32
   35128:	bhi	3513c <flatcc_json_parser_generic_json@@Base+0x9c8>
   3512c:	mov	r0, r8
   35130:	mov	r2, r4
   35134:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   35138:	mov	r7, r0
   3513c:	cmp	r7, r4
   35140:	beq	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   35144:	ldrb	r0, [r7]
   35148:	add	r9, r9, #1
   3514c:	cmp	r0, #93	; 0x5d
   35150:	mov	r1, r7
   35154:	bne	35634 <flatcc_json_parser_generic_json@@Base+0xec0>
   35158:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   3515c:	bne	3516c <flatcc_json_parser_generic_json@@Base+0x9f8>
   35160:	ldrb	r0, [r7, #2]!
   35164:	cmp	r0, #32
   35168:	bhi	3517c <flatcc_json_parser_generic_json@@Base+0xa08>
   3516c:	mov	r0, r8
   35170:	mov	r2, r4
   35174:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   35178:	mov	r7, r0
   3517c:	cmp	r7, r4
   35180:	beq	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   35184:	ldrb	r0, [r7]
   35188:	add	r9, r9, #1
   3518c:	cmp	r0, #125	; 0x7d
   35190:	mov	r1, r7
   35194:	beq	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   35198:	b	35634 <flatcc_json_parser_generic_json@@Base+0xec0>
   3519c:	ldr	r0, [r6]
   351a0:	cmp	r0, #0
   351a4:	bne	35084 <flatcc_json_parser_generic_json@@Base+0x910>
   351a8:	mov	r0, #6
   351ac:	ldr	r1, [sp, #4]
   351b0:	str	r0, [r6]
   351b4:	ldr	r0, [sl]
   351b8:	b	350fc <flatcc_json_parser_generic_json@@Base+0x988>
   351bc:	mov	r1, r0
   351c0:	cmp	r1, r4
   351c4:	beq	351e0 <flatcc_json_parser_generic_json@@Base+0xa6c>
   351c8:	ldrb	r0, [r1]
   351cc:	cmp	r0, #34	; 0x22
   351d0:	bne	351e0 <flatcc_json_parser_generic_json@@Base+0xa6c>
   351d4:	add	r1, r1, #1
   351d8:	b	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   351dc:	mov	r1, r4
   351e0:	ldr	r0, [r6]
   351e4:	cmp	r0, #0
   351e8:	bne	35084 <flatcc_json_parser_generic_json@@Base+0x910>
   351ec:	mov	r0, #20
   351f0:	str	r0, [r6]
   351f4:	ldr	r0, [sl]
   351f8:	sub	r0, r1, r0
   351fc:	add	r0, r0, #1
   35200:	str	r0, [r5]
   35204:	ldr	r0, [sp, #20]
   35208:	str	r1, [r0]
   3520c:	b	35084 <flatcc_json_parser_generic_json@@Base+0x910>
   35210:	ldr	r5, [sp, #16]
   35214:	mov	r0, #0
   35218:	mov	ip, #0
   3521c:	mov	r3, r4
   35220:	ldr	r2, [r5]
   35224:	cmp	r2, #0
   35228:	bne	352e8 <flatcc_json_parser_generic_json@@Base+0xb74>
   3522c:	sub	r0, r1, #1
   35230:	mov	r1, #8
   35234:	ldr	r2, [sp, #8]
   35238:	str	r1, [r5]
   3523c:	ldr	r1, [sp, #12]
   35240:	ldr	r1, [r1]
   35244:	sub	r1, r0, r1
   35248:	add	r1, r1, #1
   3524c:	str	r1, [r2]
   35250:	ldr	r1, [sp, #20]
   35254:	str	r0, [r1]
   35258:	b	352d4 <flatcc_json_parser_generic_json@@Base+0xb60>
   3525c:	mov	r2, #0
   35260:	mov	lr, r4
   35264:	cmp	lr, r7
   35268:	mov	r1, r7
   3526c:	beq	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   35270:	cmp	r2, #0
   35274:	beq	352e4 <flatcc_json_parser_generic_json@@Base+0xb70>
   35278:	ldrb	r1, [lr]
   3527c:	ldr	r5, [sp, #16]
   35280:	cmp	r1, #46	; 0x2e
   35284:	beq	35294 <flatcc_json_parser_generic_json@@Base+0xb20>
   35288:	cmp	r1, #101	; 0x65
   3528c:	cmpne	r1, #69	; 0x45
   35290:	bne	352e4 <flatcc_json_parser_generic_json@@Base+0xb70>
   35294:	ldr	r1, [r5]
   35298:	mov	r0, #0
   3529c:	mov	ip, #0
   352a0:	mov	r3, r4
   352a4:	cmp	r1, #0
   352a8:	bne	352e8 <flatcc_json_parser_generic_json@@Base+0xb74>
   352ac:	mov	r0, #12
   352b0:	ldr	r1, [sp, #8]
   352b4:	str	r0, [r5]
   352b8:	ldr	r0, [sp, #12]
   352bc:	ldr	r0, [r0]
   352c0:	sub	r0, lr, r0
   352c4:	add	r0, r0, #1
   352c8:	str	r0, [r1]
   352cc:	ldr	r0, [sp, #20]
   352d0:	str	lr, [r0]
   352d4:	mov	r0, #0
   352d8:	mov	ip, #0
   352dc:	mov	r3, r4
   352e0:	b	352e8 <flatcc_json_parser_generic_json@@Base+0xb74>
   352e4:	mov	r3, lr
   352e8:	cmp	r3, r7
   352ec:	mov	r1, r7
   352f0:	beq	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   352f4:	subs	r0, r0, #256	; 0x100
   352f8:	sbcs	r0, ip, #0
   352fc:	bcc	35348 <flatcc_json_parser_generic_json@@Base+0xbd4>
   35300:	ldr	r0, [sp, #16]
   35304:	mov	r1, r4
   35308:	ldr	r0, [r0]
   3530c:	cmp	r0, #0
   35310:	bne	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   35314:	ldr	r0, [sp, #16]
   35318:	mov	r1, #7
   3531c:	str	r1, [r0]
   35320:	ldr	r0, [sp, #12]
   35324:	ldr	r1, [sp, #8]
   35328:	ldr	r0, [r0]
   3532c:	sub	r0, r3, r0
   35330:	add	r0, r0, #1
   35334:	str	r0, [r1]
   35338:	ldr	r0, [sp, #20]
   3533c:	mov	r1, r4
   35340:	str	r3, [r0]
   35344:	b	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   35348:	mov	r1, r3
   3534c:	b	35354 <flatcc_json_parser_generic_json@@Base+0xbe0>
   35350:	add	r1, r7, #5
   35354:	ldr	sl, [sp, #12]
   35358:	ldr	r6, [sp, #16]
   3535c:	ldr	r5, [sp, #8]
   35360:	cmp	r7, r1
   35364:	beq	3573c <flatcc_json_parser_generic_json@@Base+0xfc8>
   35368:	subs	r0, r1, r4
   3536c:	mov	r3, r9
   35370:	movwne	r0, #1
   35374:	cmp	r9, #0
   35378:	movwne	r3, #1
   3537c:	cmp	r1, r4
   35380:	beq	3569c <flatcc_json_parser_generic_json@@Base+0xf28>
   35384:	cmp	r9, #0
   35388:	beq	356ac <flatcc_json_parser_generic_json@@Base+0xf38>
   3538c:	ldr	r2, [sp, #24]
   35390:	sub	r0, r4, r1
   35394:	ldrb	r2, [r2, r9]
   35398:	cmp	r2, #93	; 0x5d
   3539c:	bne	353bc <flatcc_json_parser_generic_json@@Base+0xc48>
   353a0:	cmp	r0, #2
   353a4:	blt	353ec <flatcc_json_parser_generic_json@@Base+0xc78>
   353a8:	ldrb	r0, [r1]
   353ac:	cmp	r0, #32
   353b0:	bls	353d8 <flatcc_json_parser_generic_json@@Base+0xc64>
   353b4:	mov	r7, r1
   353b8:	b	353fc <flatcc_json_parser_generic_json@@Base+0xc88>
   353bc:	cmp	r0, #2
   353c0:	blt	35448 <flatcc_json_parser_generic_json@@Base+0xcd4>
   353c4:	ldrb	r0, [r1]
   353c8:	cmp	r0, #32
   353cc:	bls	35434 <flatcc_json_parser_generic_json@@Base+0xcc0>
   353d0:	mov	r7, r1
   353d4:	b	35458 <flatcc_json_parser_generic_json@@Base+0xce4>
   353d8:	bne	353ec <flatcc_json_parser_generic_json@@Base+0xc78>
   353dc:	mov	r7, r1
   353e0:	ldrb	r0, [r7, #1]!
   353e4:	cmp	r0, #32
   353e8:	bhi	353fc <flatcc_json_parser_generic_json@@Base+0xc88>
   353ec:	mov	r0, r8
   353f0:	mov	r2, r4
   353f4:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   353f8:	mov	r7, r0
   353fc:	cmp	r7, r4
   35400:	mov	r1, r4
   35404:	beq	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   35408:	ldrb	r0, [r7]
   3540c:	cmp	r0, #44	; 0x2c
   35410:	beq	354b0 <flatcc_json_parser_generic_json@@Base+0xd3c>
   35414:	cmp	r0, #93	; 0x5d
   35418:	beq	355bc <flatcc_json_parser_generic_json@@Base+0xe48>
   3541c:	ldr	r0, [r6]
   35420:	mov	r1, r4
   35424:	cmp	r0, #0
   35428:	bne	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   3542c:	mov	r0, #9
   35430:	b	3548c <flatcc_json_parser_generic_json@@Base+0xd18>
   35434:	bne	35448 <flatcc_json_parser_generic_json@@Base+0xcd4>
   35438:	mov	r7, r1
   3543c:	ldrb	r0, [r7, #1]!
   35440:	cmp	r0, #32
   35444:	bhi	35458 <flatcc_json_parser_generic_json@@Base+0xce4>
   35448:	mov	r0, r8
   3544c:	mov	r2, r4
   35450:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   35454:	mov	r7, r0
   35458:	cmp	r7, r4
   3545c:	mov	r1, r4
   35460:	beq	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   35464:	ldrb	r0, [r7]
   35468:	cmp	r0, #44	; 0x2c
   3546c:	beq	354f0 <flatcc_json_parser_generic_json@@Base+0xd7c>
   35470:	cmp	r0, #125	; 0x7d
   35474:	beq	355bc <flatcc_json_parser_generic_json@@Base+0xe48>
   35478:	ldr	r0, [r6]
   3547c:	mov	r1, r4
   35480:	cmp	r0, #0
   35484:	bne	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   35488:	mov	r0, #10
   3548c:	str	r0, [r6]
   35490:	mov	r1, r4
   35494:	ldr	r0, [sl]
   35498:	sub	r0, r7, r0
   3549c:	add	r0, r0, #1
   354a0:	str	r0, [r5]
   354a4:	ldr	r0, [sp, #20]
   354a8:	str	r7, [r0]
   354ac:	b	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   354b0:	add	r1, r7, #1
   354b4:	sub	r0, r4, r1
   354b8:	cmp	r0, #2
   354bc:	blt	35560 <flatcc_json_parser_generic_json@@Base+0xdec>
   354c0:	ldrb	r0, [r1]
   354c4:	cmp	r0, #32
   354c8:	bls	35550 <flatcc_json_parser_generic_json@@Base+0xddc>
   354cc:	mov	r7, r1
   354d0:	cmp	r7, r4
   354d4:	bne	35578 <flatcc_json_parser_generic_json@@Base+0xe04>
   354d8:	ldr	r0, [r6]
   354dc:	mov	r1, r4
   354e0:	cmp	r0, #0
   354e4:	bne	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   354e8:	mov	r0, #9
   354ec:	b	3552c <flatcc_json_parser_generic_json@@Base+0xdb8>
   354f0:	add	r1, r7, #1
   354f4:	sub	r0, r4, r1
   354f8:	cmp	r0, #2
   354fc:	blt	35598 <flatcc_json_parser_generic_json@@Base+0xe24>
   35500:	ldrb	r0, [r1]
   35504:	cmp	r0, #32
   35508:	bls	35588 <flatcc_json_parser_generic_json@@Base+0xe14>
   3550c:	mov	r7, r1
   35510:	cmp	r7, r4
   35514:	bne	355b0 <flatcc_json_parser_generic_json@@Base+0xe3c>
   35518:	ldr	r0, [r6]
   3551c:	mov	r1, r4
   35520:	cmp	r0, #0
   35524:	bne	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   35528:	mov	r0, #10
   3552c:	str	r0, [r6]
   35530:	ldr	r1, [sp, #4]
   35534:	ldr	r0, [sl]
   35538:	sub	r0, r1, r0
   3553c:	mov	r1, r4
   35540:	str	r0, [r5]
   35544:	ldr	r0, [sp, #20]
   35548:	str	r4, [r0]
   3554c:	b	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   35550:	bne	35560 <flatcc_json_parser_generic_json@@Base+0xdec>
   35554:	ldrb	r0, [r7, #2]!
   35558:	cmp	r0, #32
   3555c:	bhi	35570 <flatcc_json_parser_generic_json@@Base+0xdfc>
   35560:	mov	r0, r8
   35564:	mov	r2, r4
   35568:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   3556c:	mov	r7, r0
   35570:	cmp	r7, r4
   35574:	beq	354d8 <flatcc_json_parser_generic_json@@Base+0xd64>
   35578:	ldrb	r0, [r7]
   3557c:	cmp	r0, #93	; 0x5d
   35580:	beq	355bc <flatcc_json_parser_generic_json@@Base+0xe48>
   35584:	b	35634 <flatcc_json_parser_generic_json@@Base+0xec0>
   35588:	bne	35598 <flatcc_json_parser_generic_json@@Base+0xe24>
   3558c:	ldrb	r0, [r7, #2]!
   35590:	cmp	r0, #32
   35594:	bhi	355a8 <flatcc_json_parser_generic_json@@Base+0xe34>
   35598:	mov	r0, r8
   3559c:	mov	r2, r4
   355a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   355a4:	mov	r7, r0
   355a8:	cmp	r7, r4
   355ac:	beq	35518 <flatcc_json_parser_generic_json@@Base+0xda4>
   355b0:	ldrb	r0, [r7]
   355b4:	cmp	r0, #125	; 0x7d
   355b8:	bne	35634 <flatcc_json_parser_generic_json@@Base+0xec0>
   355bc:	add	r2, r7, #1
   355c0:	sub	r0, r4, r2
   355c4:	cmp	r0, #2
   355c8:	blt	355f4 <flatcc_json_parser_generic_json@@Base+0xe80>
   355cc:	ldrb	r0, [r2]
   355d0:	cmp	r0, #32
   355d4:	bls	355e0 <flatcc_json_parser_generic_json@@Base+0xe6c>
   355d8:	mov	r1, r2
   355dc:	b	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   355e0:	bne	355f4 <flatcc_json_parser_generic_json@@Base+0xe80>
   355e4:	ldrb	r0, [r7, #2]!
   355e8:	mov	r1, r7
   355ec:	cmp	r0, #32
   355f0:	bhi	35608 <flatcc_json_parser_generic_json@@Base+0xe94>
   355f4:	mov	r1, r2
   355f8:	mov	r0, r8
   355fc:	mov	r2, r4
   35600:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   35604:	mov	r1, r0
   35608:	subs	r0, r1, r4
   3560c:	sub	r2, r9, #1
   35610:	movwne	r0, #1
   35614:	subs	r3, r9, #1
   35618:	movwne	r3, #1
   3561c:	cmp	r1, r4
   35620:	beq	356b0 <flatcc_json_parser_generic_json@@Base+0xf3c>
   35624:	cmp	r9, #1
   35628:	mov	r9, r2
   3562c:	bne	3538c <flatcc_json_parser_generic_json@@Base+0xc18>
   35630:	b	356b0 <flatcc_json_parser_generic_json@@Base+0xf3c>
   35634:	add	r0, sp, #32
   35638:	cmp	r7, r4
   3563c:	add	r0, r0, r9
   35640:	bne	347d0 <flatcc_json_parser_generic_json@@Base+0x5c>
   35644:	b	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   35648:	cmp	r0, #93	; 0x5d
   3564c:	beq	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   35650:	cmp	r0, #125	; 0x7d
   35654:	mov	r2, r1
   35658:	beq	35368 <flatcc_json_parser_generic_json@@Base+0xbf4>
   3565c:	b	35078 <flatcc_json_parser_generic_json@@Base+0x904>
   35660:	mov	r1, r7
   35664:	b	35704 <flatcc_json_parser_generic_json@@Base+0xf90>
   35668:	ldr	r5, [sp, #16]
   3566c:	ldr	r0, [r5]
   35670:	cmp	r0, #0
   35674:	bne	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   35678:	mov	r0, #5
   3567c:	str	r0, [r5]
   35680:	ldr	r0, [sp, #12]
   35684:	ldr	r0, [r0]
   35688:	ldr	r1, [sp, #8]
   3568c:	sub	r0, r7, r0
   35690:	add	r0, r0, #1
   35694:	str	r0, [r1]
   35698:	b	35760 <flatcc_json_parser_generic_json@@Base+0xfec>
   3569c:	mov	r2, r9
   356a0:	cmp	r0, #0
   356a4:	beq	356b8 <flatcc_json_parser_generic_json@@Base+0xf44>
   356a8:	b	35704 <flatcc_json_parser_generic_json@@Base+0xf90>
   356ac:	mov	r2, r9
   356b0:	cmp	r0, #0
   356b4:	bne	35704 <flatcc_json_parser_generic_json@@Base+0xf90>
   356b8:	cmp	r3, #0
   356bc:	beq	35704 <flatcc_json_parser_generic_json@@Base+0xf90>
   356c0:	ldr	r0, [r6]
   356c4:	cmp	r0, #0
   356c8:	bne	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   356cc:	add	r0, sp, #32
   356d0:	mov	r1, #10
   356d4:	add	r0, r0, r2
   356d8:	ldrb	r0, [r0, #-1]
   356dc:	cmp	r0, #93	; 0x5d
   356e0:	movweq	r1, #9
   356e4:	str	r1, [r6]
   356e8:	ldr	r0, [sl]
   356ec:	ldr	r1, [sp, #4]
   356f0:	sub	r0, r1, r0
   356f4:	str	r0, [r5]
   356f8:	ldr	r0, [sp, #20]
   356fc:	str	r4, [r0]
   35700:	mov	r1, r4
   35704:	mov	r0, r1
   35708:	sub	sp, fp, #28
   3570c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35710:	ldr	r0, [r6]
   35714:	cmp	r0, #0
   35718:	bne	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   3571c:	mov	r0, #10
   35720:	str	r0, [r6]
   35724:	b	356e8 <flatcc_json_parser_generic_json@@Base+0xf74>
   35728:	ldr	r0, [r6]
   3572c:	cmp	r0, #0
   35730:	bne	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   35734:	mov	r0, #4
   35738:	b	3574c <flatcc_json_parser_generic_json@@Base+0xfd8>
   3573c:	ldr	r0, [r6]
   35740:	cmp	r0, #0
   35744:	bne	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   35748:	mov	r0, #5
   3574c:	str	r0, [r6]
   35750:	ldr	r0, [sl]
   35754:	sub	r0, r7, r0
   35758:	add	r0, r0, #1
   3575c:	str	r0, [r5]
   35760:	ldr	r0, [sp, #20]
   35764:	str	r7, [r0]
   35768:	b	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   3576c:	ldr	r5, [sp, #16]
   35770:	ldr	r1, [sp, #12]
   35774:	ldr	r0, [r5]
   35778:	cmp	r0, #0
   3577c:	bne	35700 <flatcc_json_parser_generic_json@@Base+0xf8c>
   35780:	mov	r0, #2
   35784:	str	r0, [r5]
   35788:	ldr	r0, [r1]
   3578c:	b	35688 <flatcc_json_parser_generic_json@@Base+0xf14>
   35790:	ldrdeq	r3, [r1], -fp
   35794:			; <UNDEFINED> instruction: 0x000137bc
   35798:	andeq	r5, r1, r9, lsl ip

0003579c <flatcc_json_parser_double@@Base>:
   3579c:	push	{r4, r5, r6, r7, fp, lr}
   357a0:	add	fp, sp, #16
   357a4:	mov	r5, r0
   357a8:	mov	r0, #0
   357ac:	mov	r6, r1
   357b0:	cmp	r1, r2
   357b4:	str	r0, [r3]
   357b8:	str	r0, [r3, #4]
   357bc:	beq	35860 <flatcc_json_parser_double@@Base+0xc4>
   357c0:	mov	r0, r6
   357c4:	mov	r4, r2
   357c8:	mov	r7, r3
   357cc:	ldrb	r1, [r0], #1
   357d0:	cmp	r1, #45	; 0x2d
   357d4:	movne	r0, r6
   357d8:	sub	r2, r2, r0
   357dc:	cmp	r2, #2
   357e0:	blt	35820 <flatcc_json_parser_double@@Base+0x84>
   357e4:	sub	r1, r1, #45	; 0x2d
   357e8:	clz	r1, r1
   357ec:	lsr	r1, r1, #5
   357f0:	ldrb	r1, [r6, r1]
   357f4:	cmp	r1, #46	; 0x2e
   357f8:	beq	35810 <flatcc_json_parser_double@@Base+0x74>
   357fc:	cmp	r1, #48	; 0x30
   35800:	bne	35820 <flatcc_json_parser_double@@Base+0x84>
   35804:	ldrb	r0, [r0, #1]
   35808:	cmp	r0, #48	; 0x30
   3580c:	bne	35820 <flatcc_json_parser_double@@Base+0x84>
   35810:	ldr	r0, [r5, #20]
   35814:	cmp	r0, #0
   35818:	bne	3588c <flatcc_json_parser_double@@Base+0xf0>
   3581c:	b	35870 <flatcc_json_parser_double@@Base+0xd4>
   35820:	sub	r1, r4, r6
   35824:	mov	r0, r6
   35828:	mov	r2, r7
   3582c:	bl	35898 <flatcc_json_parser_double@@Base+0xfc>
   35830:	cmp	r0, #0
   35834:	cmpne	r0, r6
   35838:	bne	35890 <flatcc_json_parser_double@@Base+0xf4>
   3583c:	vldr	d0, [r7]
   35840:	bl	14e6c <__isinf@plt>
   35844:	ldr	r1, [r5, #20]
   35848:	cmp	r0, #0
   3584c:	beq	35868 <flatcc_json_parser_double@@Base+0xcc>
   35850:	cmp	r1, #0
   35854:	bne	3588c <flatcc_json_parser_double@@Base+0xf0>
   35858:	mov	r0, #7
   3585c:	b	35874 <flatcc_json_parser_double@@Base+0xd8>
   35860:	mov	r0, r6
   35864:	pop	{r4, r5, r6, r7, fp, pc}
   35868:	cmp	r1, #0
   3586c:	bne	3588c <flatcc_json_parser_double@@Base+0xf0>
   35870:	mov	r0, #6
   35874:	str	r6, [r5, #32]
   35878:	ldr	r1, [r5, #4]
   3587c:	sub	r1, r6, r1
   35880:	add	r1, r1, #1
   35884:	str	r1, [r5, #16]
   35888:	str	r0, [r5, #20]
   3588c:	mov	r0, r4
   35890:	pop	{r4, r5, r6, r7, fp, pc}
   35894:	nop	{0}
   35898:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3589c:	add	fp, sp, #28
   358a0:	sub	sp, sp, #36	; 0x24
   358a4:	cmp	r1, #1000	; 0x3e8
   358a8:	mov	r3, r1
   358ac:	mov	r5, #0
   358b0:	mov	r9, r0
   358b4:	movge	r3, #1000	; 0x3e8
   358b8:	str	r5, [r2]
   358bc:	str	r5, [r2, #4]
   358c0:	add	ip, r0, r3
   358c4:	add	lr, ip, #1
   358c8:	cmp	lr, r0
   358cc:	beq	35940 <flatcc_json_parser_double@@Base+0x1a4>
   358d0:	ldrb	r0, [r9]
   358d4:	mov	r4, r9
   358d8:	cmp	r0, #45	; 0x2d
   358dc:	bne	358f4 <flatcc_json_parser_double@@Base+0x158>
   358e0:	cmp	r3, #0
   358e4:	beq	35c90 <flatcc_json_parser_double@@Base+0x4f4>
   358e8:	add	r4, r9, #1
   358ec:	mov	r5, #1
   358f0:	ldrb	r0, [r4]
   358f4:	cmp	r0, #48	; 0x30
   358f8:	bne	35928 <flatcc_json_parser_double@@Base+0x18c>
   358fc:	add	r6, r4, #1
   35900:	cmp	r4, ip
   35904:	beq	35994 <flatcc_json_parser_double@@Base+0x1f8>
   35908:	ldrb	r1, [r6]
   3590c:	orr	r0, r1, #32
   35910:	cmp	r0, #120	; 0x78
   35914:	bne	35960 <flatcc_json_parser_double@@Base+0x1c4>
   35918:	mov	r0, #0
   3591c:	str	r0, [r2]
   35920:	str	r0, [r2, #4]
   35924:	b	35940 <flatcc_json_parser_double@@Base+0x1a4>
   35928:	sub	r1, r0, #49	; 0x31
   3592c:	uxtb	r1, r1
   35930:	cmp	r1, #9
   35934:	bcc	35948 <flatcc_json_parser_double@@Base+0x1ac>
   35938:	cmp	r5, #0
   3593c:	movne	r9, #0
   35940:	mov	r2, r9
   35944:	b	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35948:	sub	r0, r0, #48	; 0x30
   3594c:	add	r6, r4, #1
   35950:	asr	r1, r0, #31
   35954:	cmp	r6, lr
   35958:	bne	359a4 <flatcc_json_parser_double@@Base+0x208>
   3595c:	b	35c90 <flatcc_json_parser_double@@Base+0x4f4>
   35960:	cmp	r1, #48	; 0x30
   35964:	mov	r0, #0
   35968:	mov	r1, #0
   3596c:	bne	3599c <flatcc_json_parser_double@@Base+0x200>
   35970:	sub	r0, ip, #1
   35974:	mov	r1, r4
   35978:	cmp	r0, r4
   3597c:	beq	35990 <flatcc_json_parser_double@@Base+0x1f4>
   35980:	ldrb	r7, [r1, #2]
   35984:	add	r4, r1, #1
   35988:	cmp	r7, #48	; 0x30
   3598c:	beq	35974 <flatcc_json_parser_double@@Base+0x1d8>
   35990:	add	r6, r1, #2
   35994:	mov	r0, #0
   35998:	mov	r1, #0
   3599c:	cmp	r6, lr
   359a0:	beq	35c90 <flatcc_json_parser_double@@Base+0x4f4>
   359a4:	mov	sl, #10
   359a8:	mov	r7, r6
   359ac:	str	r2, [sp, #20]
   359b0:	ldrb	r8, [r7]
   359b4:	sub	r2, r8, #48	; 0x30
   359b8:	uxtb	r4, r2
   359bc:	mov	r2, #0
   359c0:	cmp	r4, #9
   359c4:	bhi	35a04 <flatcc_json_parser_double@@Base+0x268>
   359c8:	movw	r4, #39320	; 0x9998
   359cc:	movt	r4, #39321	; 0x9999
   359d0:	subs	r4, r4, r0
   359d4:	movw	r4, #39321	; 0x9999
   359d8:	movt	r4, #6553	; 0x1999
   359dc:	sbcs	r4, r4, r1
   359e0:	bcc	35a14 <flatcc_json_parser_double@@Base+0x278>
   359e4:	add	r1, r1, r1, lsl #2
   359e8:	add	r7, r7, #1
   359ec:	lsl	r1, r1, #1
   359f0:	umlal	r8, r1, r0, sl
   359f4:	subs	r0, r8, #48	; 0x30
   359f8:	sbc	r1, r1, #0
   359fc:	cmp	lr, r7
   35a00:	bne	359b0 <flatcc_json_parser_double@@Base+0x214>
   35a04:	mov	r8, r0
   35a08:	mov	sl, r1
   35a0c:	mov	r0, #0
   35a10:	b	35a30 <flatcc_json_parser_double@@Base+0x294>
   35a14:	adds	r4, r0, #1
   35a18:	adc	sl, r1, #0
   35a1c:	cmp	r8, #52	; 0x34
   35a20:	mov	r8, r4
   35a24:	movls	r8, r0
   35a28:	movls	sl, r1
   35a2c:	mov	r0, #1
   35a30:	cmp	r7, lr
   35a34:	str	r0, [sp, #24]
   35a38:	beq	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35a3c:	sub	r0, r7, r6
   35a40:	mov	r6, #0
   35a44:	str	r0, [sp, #16]
   35a48:	sub	r0, r3, r7
   35a4c:	add	r0, r9, r0
   35a50:	ldrb	r1, [r7]
   35a54:	cmp	r1, #48	; 0x30
   35a58:	bne	35a7c <flatcc_json_parser_double@@Base+0x2e0>
   35a5c:	add	r1, r7, #1
   35a60:	cmp	r7, ip
   35a64:	sub	r0, r0, #1
   35a68:	add	r6, r6, #1
   35a6c:	mov	r7, r1
   35a70:	bne	35a50 <flatcc_json_parser_double@@Base+0x2b4>
   35a74:	mov	r7, r1
   35a78:	b	35ac8 <flatcc_json_parser_double@@Base+0x32c>
   35a7c:	sub	r1, r1, #49	; 0x31
   35a80:	uxtb	r1, r1
   35a84:	cmp	r1, #8
   35a88:	bhi	35ac8 <flatcc_json_parser_double@@Base+0x32c>
   35a8c:	mvn	r2, #0
   35a90:	mov	r1, r2
   35a94:	cmp	r0, #0
   35a98:	beq	35ab8 <flatcc_json_parser_double@@Base+0x31c>
   35a9c:	ldrb	r2, [r7, -r1]
   35aa0:	sub	r0, r0, #1
   35aa4:	sub	r2, r2, #48	; 0x30
   35aa8:	uxtb	r4, r2
   35aac:	sub	r2, r1, #1
   35ab0:	cmp	r4, #10
   35ab4:	bcc	35a90 <flatcc_json_parser_double@@Base+0x2f4>
   35ab8:	mov	r0, #1
   35abc:	sub	r6, r6, r1
   35ac0:	sub	r7, r7, r1
   35ac4:	str	r0, [sp, #24]
   35ac8:	mov	r2, #0
   35acc:	cmp	r7, lr
   35ad0:	beq	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35ad4:	ldrb	r0, [r7]
   35ad8:	cmp	r0, #46	; 0x2e
   35adc:	bne	35c68 <flatcc_json_parser_double@@Base+0x4cc>
   35ae0:	mov	r4, r7
   35ae4:	ldrb	r0, [r4, #1]!
   35ae8:	sub	r1, r0, #48	; 0x30
   35aec:	uxtb	r1, r1
   35af0:	cmp	r1, #9
   35af4:	bhi	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35af8:	cmp	r7, ip
   35afc:	beq	35ba4 <flatcc_json_parser_double@@Base+0x408>
   35b00:	sub	r1, r3, r7
   35b04:	str	r4, [sp, #8]
   35b08:	add	r1, r1, r9
   35b0c:	sub	r1, r1, #1
   35b10:	str	r1, [sp, #12]
   35b14:	mov	r1, #0
   35b18:	mov	r3, r1
   35b1c:	movw	r1, #39320	; 0x9998
   35b20:	movt	r1, #39321	; 0x9999
   35b24:	subs	r1, r1, r8
   35b28:	movw	r1, #39321	; 0x9999
   35b2c:	movt	r1, #6553	; 0x1999
   35b30:	sbcs	r1, r1, sl
   35b34:	bcc	35bb4 <flatcc_json_parser_double@@Base+0x418>
   35b38:	add	r1, sl, sl, lsl #2
   35b3c:	uxtb	r0, r0
   35b40:	mov	r4, #10
   35b44:	lsl	r1, r1, #1
   35b48:	umlal	r0, r1, r8, r4
   35b4c:	add	r4, r7, r3
   35b50:	subs	r8, r0, #48	; 0x30
   35b54:	ldr	r0, [sp, #12]
   35b58:	sbc	sl, r1, #0
   35b5c:	cmp	r0, r3
   35b60:	beq	35b94 <flatcc_json_parser_double@@Base+0x3f8>
   35b64:	ldrb	r0, [r4, #2]
   35b68:	str	sl, [sp, #28]
   35b6c:	mov	sl, r8
   35b70:	mov	r8, r5
   35b74:	add	r1, r3, #1
   35b78:	sub	r5, r0, #48	; 0x30
   35b7c:	uxtb	r5, r5
   35b80:	cmp	r5, #10
   35b84:	mov	r5, r8
   35b88:	mov	r8, sl
   35b8c:	ldr	sl, [sp, #28]
   35b90:	bcc	35b18 <flatcc_json_parser_double@@Base+0x37c>
   35b94:	mvn	r0, r3
   35b98:	add	r7, r4, #2
   35b9c:	add	r6, r0, r6
   35ba0:	b	35bec <flatcc_json_parser_double@@Base+0x450>
   35ba4:	mov	r7, r4
   35ba8:	cmp	r7, lr
   35bac:	bne	35bf8 <flatcc_json_parser_double@@Base+0x45c>
   35bb0:	b	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35bb4:	add	r1, r7, r3
   35bb8:	sub	r6, r6, r3
   35bbc:	add	r7, r1, #1
   35bc0:	ldr	r1, [sp, #24]
   35bc4:	cmp	r1, #0
   35bc8:	bne	35bec <flatcc_json_parser_double@@Base+0x450>
   35bcc:	uxtb	r0, r0
   35bd0:	adds	r1, r8, #1
   35bd4:	adc	r3, sl, #0
   35bd8:	cmp	r0, #52	; 0x34
   35bdc:	mov	r0, #1
   35be0:	movhi	r8, r1
   35be4:	movhi	sl, r3
   35be8:	str	r0, [sp, #24]
   35bec:	ldr	r4, [sp, #8]
   35bf0:	cmp	r7, lr
   35bf4:	beq	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35bf8:	ldr	r1, [sp, #16]
   35bfc:	sub	r0, r7, r4
   35c00:	add	r1, r0, r1
   35c04:	str	r1, [sp, #16]
   35c08:	ldrb	r0, [r7]
   35c0c:	cmp	r0, #48	; 0x30
   35c10:	bne	35c28 <flatcc_json_parser_double@@Base+0x48c>
   35c14:	add	r7, r7, #1
   35c18:	add	r6, r6, #1
   35c1c:	cmp	lr, r7
   35c20:	bne	35c08 <flatcc_json_parser_double@@Base+0x46c>
   35c24:	b	35c68 <flatcc_json_parser_double@@Base+0x4cc>
   35c28:	sub	r0, r0, #49	; 0x31
   35c2c:	uxtb	r0, r0
   35c30:	cmp	r0, #8
   35c34:	bhi	35c68 <flatcc_json_parser_double@@Base+0x4cc>
   35c38:	mov	r0, r7
   35c3c:	cmp	ip, r7
   35c40:	beq	35c5c <flatcc_json_parser_double@@Base+0x4c0>
   35c44:	ldrb	r1, [r0, #1]
   35c48:	add	r7, r0, #1
   35c4c:	sub	r1, r1, #48	; 0x30
   35c50:	uxtb	r1, r1
   35c54:	cmp	r1, #10
   35c58:	bcc	35c38 <flatcc_json_parser_double@@Base+0x49c>
   35c5c:	add	r7, r0, #1
   35c60:	mov	r0, #1
   35c64:	str	r0, [sp, #24]
   35c68:	cmp	r7, lr
   35c6c:	beq	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35c70:	ldrb	r0, [r7]
   35c74:	mov	r4, #0
   35c78:	orr	r0, r0, #32
   35c7c:	cmp	r0, #101	; 0x65
   35c80:	bne	35ca0 <flatcc_json_parser_double@@Base+0x504>
   35c84:	sub	r0, lr, r7
   35c88:	cmp	r0, #2
   35c8c:	bge	35d0c <flatcc_json_parser_double@@Base+0x570>
   35c90:	mov	r2, #0
   35c94:	mov	r0, r2
   35c98:	sub	sp, fp, #28
   35c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35ca0:	mov	r0, #0
   35ca4:	cmp	r7, lr
   35ca8:	mov	r2, #0
   35cac:	beq	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35cb0:	vmov.i32	d16, #0	; 0x00000000
   35cb4:	cmp	r4, #0
   35cb8:	rsbne	r0, r0, #0
   35cbc:	orrs	r1, r8, sl
   35cc0:	beq	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35cc4:	ldr	r2, [sp, #16]
   35cc8:	add	r1, r2, r6
   35ccc:	add	r4, r1, r0
   35cd0:	cmn	r4, #324	; 0x144
   35cd4:	blt	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35cd8:	movw	r0, #310	; 0x136
   35cdc:	cmp	r4, r0
   35ce0:	ble	35d40 <flatcc_json_parser_double@@Base+0x5a4>
   35ce4:	vldr	d16, [pc, #964]	; 360b0 <flatcc_json_parser_double@@Base+0x914>
   35ce8:	ldr	r4, [sp, #20]
   35cec:	vstr	d16, [r4]
   35cf0:	cmp	r5, #0
   35cf4:	beq	35d04 <flatcc_json_parser_double@@Base+0x568>
   35cf8:	vldr	d16, [r4]
   35cfc:	vneg.f64	d16, d16
   35d00:	vstr	d16, [r4]
   35d04:	mov	r2, r7
   35d08:	b	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35d0c:	mov	r3, r7
   35d10:	ldrb	r0, [r3, #1]!
   35d14:	cmp	r0, #45	; 0x2d
   35d18:	beq	35e40 <flatcc_json_parser_double@@Base+0x6a4>
   35d1c:	mov	r4, #0
   35d20:	cmp	r0, #43	; 0x2b
   35d24:	bne	35e50 <flatcc_json_parser_double@@Base+0x6b4>
   35d28:	add	r3, r7, #2
   35d2c:	mov	r2, #0
   35d30:	cmp	r3, lr
   35d34:	beq	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35d38:	mov	r4, #0
   35d3c:	b	35e50 <flatcc_json_parser_double@@Base+0x6b4>
   35d40:	mov	r0, #0
   35d44:	mov	r6, r2
   35d48:	cmp	r0, sl, lsr #21
   35d4c:	bne	35ea8 <flatcc_json_parser_double@@Base+0x70c>
   35d50:	cmp	r4, #22
   35d54:	bhi	35ea8 <flatcc_json_parser_double@@Base+0x70c>
   35d58:	mov	r0, r8
   35d5c:	mov	r1, sl
   35d60:	bl	453a8 <flatcc_json_printer_clear@@Base+0x4e4>
   35d64:	vmov	d16, r0, r1
   35d68:	sub	r2, r4, r6
   35d6c:	add	r0, r2, #22
   35d70:	cmp	r0, #44	; 0x2c
   35d74:	bhi	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35d78:	add	r1, pc, #4
   35d7c:	ldr	r0, [r1, r0, lsl #2]
   35d80:	add	pc, r1, r0
   35d84:	strheq	r0, [r0], -r4
   35d88:	andeq	r0, r0, r4, ror r1
   35d8c:	andeq	r0, r0, ip, ror r1
   35d90:	andeq	r0, r0, r4, lsl #3
   35d94:	andeq	r0, r0, ip, lsl #3
   35d98:	muleq	r0, r4, r1
   35d9c:	muleq	r0, ip, r1
   35da0:	andeq	r0, r0, r4, lsr #3
   35da4:	andeq	r0, r0, ip, lsr #3
   35da8:			; <UNDEFINED> instruction: 0x000001b4
   35dac:			; <UNDEFINED> instruction: 0x000001bc
   35db0:	andeq	r0, r0, r4, asr #3
   35db4:	andeq	r0, r0, ip, asr #3
   35db8:	ldrdeq	r0, [r0], -r4
   35dbc:	ldrdeq	r0, [r0], -ip
   35dc0:	andeq	r0, r0, r4, ror #3
   35dc4:	andeq	r0, r0, ip, ror #3
   35dc8:	strdeq	r0, [r0], -r4
   35dcc:	strdeq	r0, [r0], -ip
   35dd0:	andeq	r0, r0, r4, lsl #4
   35dd4:	andeq	r0, r0, ip, lsl #4
   35dd8:	andeq	r0, r0, r4, lsl r2
   35ddc:			; <UNDEFINED> instruction: 0xffffff64
   35de0:	andeq	r0, r0, r0, lsr #4
   35de4:	andeq	r0, r0, ip, lsr #4
   35de8:	andeq	r0, r0, r8, lsr r2
   35dec:	andeq	r0, r0, r4, asr #4
   35df0:	andeq	r0, r0, r0, asr r2
   35df4:	andeq	r0, r0, ip, asr r2
   35df8:	andeq	r0, r0, r8, ror #4
   35dfc:	andeq	r0, r0, r4, ror r2
   35e00:	andeq	r0, r0, r0, lsl #5
   35e04:	andeq	r0, r0, ip, lsl #5
   35e08:	muleq	r0, r8, r2
   35e0c:	andeq	r0, r0, r4, lsr #5
   35e10:			; <UNDEFINED> instruction: 0x000002b0
   35e14:			; <UNDEFINED> instruction: 0x000002bc
   35e18:	andeq	r0, r0, r8, asr #5
   35e1c:	ldrdeq	r0, [r0], -r4
   35e20:	andeq	r0, r0, r0, ror #5
   35e24:	andeq	r0, r0, ip, ror #5
   35e28:	strdeq	r0, [r0], -r8
   35e2c:	andeq	r0, r0, r4, lsl #6
   35e30:	andeq	r0, r0, r0, lsl r3
   35e34:	andeq	r0, r0, ip, lsl r3
   35e38:	vldr	d17, [pc, #792]	; 36158 <flatcc_json_parser_double@@Base+0x9bc>
   35e3c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35e40:	add	r3, r7, #2
   35e44:	mov	r4, #1
   35e48:	cmp	r3, lr
   35e4c:	beq	35c90 <flatcc_json_parser_double@@Base+0x4f4>
   35e50:	ldrb	r0, [r3]
   35e54:	mov	r2, #0
   35e58:	sub	r0, r0, #48	; 0x30
   35e5c:	uxtb	r1, r0
   35e60:	cmp	r1, #9
   35e64:	bhi	35c94 <flatcc_json_parser_double@@Base+0x4f8>
   35e68:	cmp	r3, ip
   35e6c:	beq	35ea0 <flatcc_json_parser_double@@Base+0x704>
   35e70:	ldrb	r1, [r3, #1]
   35e74:	sub	r2, r1, #48	; 0x30
   35e78:	uxtb	r2, r2
   35e7c:	cmp	r2, #9
   35e80:	bhi	35ea0 <flatcc_json_parser_double@@Base+0x704>
   35e84:	cmp	r0, #32768	; 0x8000
   35e88:	add	r3, r3, #1
   35e8c:	addlt	r0, r0, r0, lsl #2
   35e90:	addlt	r0, r1, r0, lsl #1
   35e94:	sublt	r0, r0, #48	; 0x30
   35e98:	cmp	ip, r3
   35e9c:	bne	35e70 <flatcc_json_parser_double@@Base+0x6d4>
   35ea0:	add	r7, r3, #1
   35ea4:	b	35ca4 <flatcc_json_parser_double@@Base+0x508>
   35ea8:	ldr	r0, [sp, #24]
   35eac:	ldr	r3, [sp, #20]
   35eb0:	mov	r2, r4
   35eb4:	mov	r1, sl
   35eb8:	str	r0, [sp]
   35ebc:	str	r3, [sp, #4]
   35ec0:	mov	r4, r3
   35ec4:	mov	r0, r8
   35ec8:	mov	r3, r6
   35ecc:	bl	338b0 <grisu3_diy_fp_encode_double@@Base>
   35ed0:	cmp	r0, #0
   35ed4:	bne	35cf0 <flatcc_json_parser_double@@Base+0x554>
   35ed8:	add	r1, sp, #32
   35edc:	mov	r0, r9
   35ee0:	bl	14efc <strtod@plt>
   35ee4:	vstr	d0, [r4]
   35ee8:	ldr	r0, [sp, #32]
   35eec:	cmp	r0, r7
   35ef0:	movcc	r7, r0
   35ef4:	b	35d04 <flatcc_json_parser_double@@Base+0x568>
   35ef8:	vldr	d17, [pc, #440]	; 360b8 <flatcc_json_parser_double@@Base+0x91c>
   35efc:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f00:	vldr	d17, [pc, #440]	; 360c0 <flatcc_json_parser_double@@Base+0x924>
   35f04:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f08:	vldr	d17, [pc, #440]	; 360c8 <flatcc_json_parser_double@@Base+0x92c>
   35f0c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f10:	vldr	d17, [pc, #440]	; 360d0 <flatcc_json_parser_double@@Base+0x934>
   35f14:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f18:	vldr	d17, [pc, #440]	; 360d8 <flatcc_json_parser_double@@Base+0x93c>
   35f1c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f20:	vldr	d17, [pc, #440]	; 360e0 <flatcc_json_parser_double@@Base+0x944>
   35f24:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f28:	vldr	d17, [pc, #440]	; 360e8 <flatcc_json_parser_double@@Base+0x94c>
   35f2c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f30:	vldr	d17, [pc, #440]	; 360f0 <flatcc_json_parser_double@@Base+0x954>
   35f34:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f38:	vldr	d17, [pc, #440]	; 360f8 <flatcc_json_parser_double@@Base+0x95c>
   35f3c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f40:	vldr	d17, [pc, #440]	; 36100 <flatcc_json_parser_double@@Base+0x964>
   35f44:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f48:	vldr	d17, [pc, #440]	; 36108 <flatcc_json_parser_double@@Base+0x96c>
   35f4c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f50:	vldr	d17, [pc, #440]	; 36110 <flatcc_json_parser_double@@Base+0x974>
   35f54:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f58:	vldr	d17, [pc, #440]	; 36118 <flatcc_json_parser_double@@Base+0x97c>
   35f5c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f60:	vldr	d17, [pc, #440]	; 36120 <flatcc_json_parser_double@@Base+0x984>
   35f64:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f68:	vldr	d17, [pc, #440]	; 36128 <flatcc_json_parser_double@@Base+0x98c>
   35f6c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f70:	vldr	d17, [pc, #440]	; 36130 <flatcc_json_parser_double@@Base+0x994>
   35f74:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f78:	vldr	d17, [pc, #440]	; 36138 <flatcc_json_parser_double@@Base+0x99c>
   35f7c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f80:	vldr	d17, [pc, #440]	; 36140 <flatcc_json_parser_double@@Base+0x9a4>
   35f84:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f88:	vldr	d17, [pc, #440]	; 36148 <flatcc_json_parser_double@@Base+0x9ac>
   35f8c:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f90:	vldr	d17, [pc, #440]	; 36150 <flatcc_json_parser_double@@Base+0x9b4>
   35f94:	b	35f9c <flatcc_json_parser_double@@Base+0x800>
   35f98:	vmov.f64	d17, #36	; 0x41200000  10.0
   35f9c:	vdiv.f64	d16, d16, d17
   35fa0:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35fa4:	vmov.f64	d17, #36	; 0x41200000  10.0
   35fa8:	vmul.f64	d16, d16, d17
   35fac:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35fb0:	vldr	d17, [pc, #408]	; 36150 <flatcc_json_parser_double@@Base+0x9b4>
   35fb4:	vmul.f64	d16, d16, d17
   35fb8:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35fbc:	vldr	d17, [pc, #388]	; 36148 <flatcc_json_parser_double@@Base+0x9ac>
   35fc0:	vmul.f64	d16, d16, d17
   35fc4:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35fc8:	vldr	d17, [pc, #368]	; 36140 <flatcc_json_parser_double@@Base+0x9a4>
   35fcc:	vmul.f64	d16, d16, d17
   35fd0:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35fd4:	vldr	d17, [pc, #348]	; 36138 <flatcc_json_parser_double@@Base+0x99c>
   35fd8:	vmul.f64	d16, d16, d17
   35fdc:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35fe0:	vldr	d17, [pc, #328]	; 36130 <flatcc_json_parser_double@@Base+0x994>
   35fe4:	vmul.f64	d16, d16, d17
   35fe8:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35fec:	vldr	d17, [pc, #308]	; 36128 <flatcc_json_parser_double@@Base+0x98c>
   35ff0:	vmul.f64	d16, d16, d17
   35ff4:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   35ff8:	vldr	d17, [pc, #288]	; 36120 <flatcc_json_parser_double@@Base+0x984>
   35ffc:	vmul.f64	d16, d16, d17
   36000:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36004:	vldr	d17, [pc, #268]	; 36118 <flatcc_json_parser_double@@Base+0x97c>
   36008:	vmul.f64	d16, d16, d17
   3600c:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36010:	vldr	d17, [pc, #248]	; 36110 <flatcc_json_parser_double@@Base+0x974>
   36014:	vmul.f64	d16, d16, d17
   36018:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   3601c:	vldr	d17, [pc, #228]	; 36108 <flatcc_json_parser_double@@Base+0x96c>
   36020:	vmul.f64	d16, d16, d17
   36024:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36028:	vldr	d17, [pc, #208]	; 36100 <flatcc_json_parser_double@@Base+0x964>
   3602c:	vmul.f64	d16, d16, d17
   36030:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36034:	vldr	d17, [pc, #188]	; 360f8 <flatcc_json_parser_double@@Base+0x95c>
   36038:	vmul.f64	d16, d16, d17
   3603c:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36040:	vldr	d17, [pc, #168]	; 360f0 <flatcc_json_parser_double@@Base+0x954>
   36044:	vmul.f64	d16, d16, d17
   36048:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   3604c:	vldr	d17, [pc, #148]	; 360e8 <flatcc_json_parser_double@@Base+0x94c>
   36050:	vmul.f64	d16, d16, d17
   36054:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36058:	vldr	d17, [pc, #128]	; 360e0 <flatcc_json_parser_double@@Base+0x944>
   3605c:	vmul.f64	d16, d16, d17
   36060:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36064:	vldr	d17, [pc, #108]	; 360d8 <flatcc_json_parser_double@@Base+0x93c>
   36068:	vmul.f64	d16, d16, d17
   3606c:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36070:	vldr	d17, [pc, #88]	; 360d0 <flatcc_json_parser_double@@Base+0x934>
   36074:	vmul.f64	d16, d16, d17
   36078:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   3607c:	vldr	d17, [pc, #68]	; 360c8 <flatcc_json_parser_double@@Base+0x92c>
   36080:	vmul.f64	d16, d16, d17
   36084:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36088:	vldr	d17, [pc, #48]	; 360c0 <flatcc_json_parser_double@@Base+0x924>
   3608c:	vmul.f64	d16, d16, d17
   36090:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   36094:	vldr	d17, [pc, #28]	; 360b8 <flatcc_json_parser_double@@Base+0x91c>
   36098:	vmul.f64	d16, d16, d17
   3609c:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   360a0:	vldr	d17, [pc, #176]	; 36158 <flatcc_json_parser_double@@Base+0x9bc>
   360a4:	vmul.f64	d16, d16, d17
   360a8:	b	35ce8 <flatcc_json_parser_double@@Base+0x54c>
   360ac:	nop	{0}
   360b0:	andeq	r0, r0, r0
   360b4:	svcvc	0x00f00000	; IMB
   360b8:	usatle	lr, #2, r0, asr #30
   360bc:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   360c0:	ldmvc	r5!, {r6, sl, fp, pc}
   360c4:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   360c8:	addsvs	r3, r1, r0, lsl #26
   360cc:	mvnmi	r5, #228, 16	; 0xe40000
   360d0:	strbvs	ip, [lr, -r0, lsl #16]
   360d4:			; <UNDEFINED> instruction: 0x43abc16d
   360d8:	ldrbhi	sl, [r8]
   360dc:	cmnmi	r6, #1459617792	; 0x57000000
   360e0:	strbcc	r8, [r0, r0]!
   360e4:	movtmi	ip, #4985	; 0x1379
   360e8:	ldrtcs	r0, [r4], -r0
   360ec:	movwmi	r6, #52213	; 0xcbf5
   360f0:	cdpne	0, 9, cr0, cr0, cr0, {0}
   360f4:	sbcsmi	fp, r6, #196, 24	; 0xc400
   360f8:	strb	r0, [r0, #-0]
   360fc:	adcmi	r3, r2, #156	; 0x9c
   36100:	andge	r0, r0, #0
   36104:	rsbmi	r1, sp, #148, 20	; 0x94000
   36108:	stmda	r0, {}	; <UNPREDICTABLE>
   3610c:	eorsmi	r4, r7, #7733248	; 0x760000
   36110:	andcs	r0, r0, r0
   36114:	andmi	sl, r2, #95	; 0x5f
   36118:	andeq	r0, r0, r0
   3611c:	bicmi	ip, sp, r5, ror #26
   36120:	andeq	r0, r0, r0
   36124:	orrsmi	sp, r7, r4, lsl #15
   36128:	andeq	r0, r0, r0
   3612c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   36130:	andeq	r0, r0, r0
   36134:	smlawbmi	lr, r0, r4, r8
   36138:	andeq	r0, r0, r0
   3613c:	rscsmi	r6, r8, r0, lsl #20
   36140:	andeq	r0, r0, r0
   36144:	sbcmi	r8, r3, r0, lsl #16
   36148:	andeq	r0, r0, r0
   3614c:	addmi	r4, pc, r0
   36150:	andeq	r0, r0, r0
   36154:	subsmi	r0, r9, r0
   36158:			; <UNDEFINED> instruction: 0x064dd592
   3615c:	strmi	pc, [r0], #207	; 0xcf

00036160 <flatcc_json_parser_float@@Base>:
   36160:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   36164:	add	fp, sp, #24
   36168:	vpush	{d8-d9}
   3616c:	sub	sp, sp, #8
   36170:	mov	r8, r0
   36174:	mov	r0, #0
   36178:	mov	r6, r1
   3617c:	cmp	r1, r2
   36180:	str	r0, [r3]
   36184:	beq	3625c <flatcc_json_parser_float@@Base+0xfc>
   36188:	mov	r0, r6
   3618c:	mov	r5, r2
   36190:	mov	r7, r3
   36194:	ldrb	r1, [r0], #1
   36198:	cmp	r1, #45	; 0x2d
   3619c:	movne	r0, r6
   361a0:	sub	r2, r2, r0
   361a4:	cmp	r2, #2
   361a8:	blt	361e8 <flatcc_json_parser_float@@Base+0x88>
   361ac:	sub	r1, r1, #45	; 0x2d
   361b0:	clz	r1, r1
   361b4:	lsr	r1, r1, #5
   361b8:	ldrb	r1, [r6, r1]
   361bc:	cmp	r1, #46	; 0x2e
   361c0:	beq	361d8 <flatcc_json_parser_float@@Base+0x78>
   361c4:	cmp	r1, #48	; 0x30
   361c8:	bne	361e8 <flatcc_json_parser_float@@Base+0x88>
   361cc:	ldrb	r0, [r0, #1]
   361d0:	cmp	r0, #48	; 0x30
   361d4:	bne	361e8 <flatcc_json_parser_float@@Base+0x88>
   361d8:	ldr	r0, [r8, #20]
   361dc:	cmp	r0, #0
   361e0:	bne	36288 <flatcc_json_parser_float@@Base+0x128>
   361e4:	b	3626c <flatcc_json_parser_float@@Base+0x10c>
   361e8:	sub	r1, r5, r6
   361ec:	mov	r2, sp
   361f0:	mov	r0, r6
   361f4:	bl	35898 <flatcc_json_parser_double@@Base+0xfc>
   361f8:	vldr	d16, [sp]
   361fc:	mov	r4, r0
   36200:	add	r0, pc, #148	; 0x94
   36204:	vcmpe.f64	d16, #0.0
   36208:	vcvt.f32.f64	s16, d16
   3620c:	vmrs	APSR_nzcv, fpscr
   36210:	addmi	r0, r0, #4
   36214:	vldr	s18, [r0]
   36218:	vmov.f32	s0, s16
   3621c:	bl	14e60 <__isinff@plt>
   36220:	cmp	r0, #0
   36224:	vseleq.f32	s0, s16, s18
   36228:	movne	r4, r6
   3622c:	cmp	r4, #0
   36230:	cmpne	r4, r6
   36234:	vstr	s0, [r7]
   36238:	bne	3628c <flatcc_json_parser_float@@Base+0x12c>
   3623c:	bl	14e60 <__isinff@plt>
   36240:	ldr	r1, [r8, #20]
   36244:	cmp	r0, #0
   36248:	beq	36264 <flatcc_json_parser_float@@Base+0x104>
   3624c:	cmp	r1, #0
   36250:	bne	36288 <flatcc_json_parser_float@@Base+0x128>
   36254:	mov	r0, #7
   36258:	b	36270 <flatcc_json_parser_float@@Base+0x110>
   3625c:	mov	r4, r6
   36260:	b	3628c <flatcc_json_parser_float@@Base+0x12c>
   36264:	cmp	r1, #0
   36268:	bne	36288 <flatcc_json_parser_float@@Base+0x128>
   3626c:	mov	r0, #6
   36270:	str	r6, [r8, #32]
   36274:	ldr	r1, [r8, #4]
   36278:	sub	r1, r6, r1
   3627c:	add	r1, r1, #1
   36280:	str	r1, [r8, #16]
   36284:	str	r0, [r8, #20]
   36288:	mov	r4, r5
   3628c:	mov	r0, r4
   36290:	sub	sp, fp, #40	; 0x28
   36294:	vpop	{d8-d9}
   36298:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3629c:	svcvc	0x00800000
   362a0:			; <UNDEFINED> instruction: 0xff800000

000362a4 <flatcc_json_parser_integer@@Base>:
   362a4:	push	{r4, r5, r6, r7, fp, lr}
   362a8:	add	fp, sp, #16
   362ac:	mov	ip, r1
   362b0:	cmp	r1, r2
   362b4:	beq	363a0 <flatcc_json_parser_integer@@Base+0xfc>
   362b8:	ldrb	r1, [ip]
   362bc:	mov	r4, #0
   362c0:	sub	r1, r1, #45	; 0x2d
   362c4:	clz	r1, r1
   362c8:	lsr	r1, r1, #5
   362cc:	str	r1, [r3]
   362d0:	add	r1, ip, r1
   362d4:	cmp	r1, r2
   362d8:	beq	3638c <flatcc_json_parser_integer@@Base+0xe8>
   362dc:	mov	lr, #10
   362e0:	mov	r5, #0
   362e4:	ldrb	r6, [r1]
   362e8:	sub	r7, r6, #48	; 0x30
   362ec:	uxtb	r7, r7
   362f0:	cmp	r7, #9
   362f4:	bhi	363a8 <flatcc_json_parser_integer@@Base+0x104>
   362f8:	add	r7, r5, r5, lsl #2
   362fc:	lsl	r7, r7, #1
   36300:	umlal	r6, r7, r4, lr
   36304:	subs	r6, r6, #48	; 0x30
   36308:	sbc	r7, r7, #0
   3630c:	subs	r4, r6, r4
   36310:	sbcs	r4, r7, r5
   36314:	bcc	363b8 <flatcc_json_parser_integer@@Base+0x114>
   36318:	add	r1, r1, #1
   3631c:	mov	r4, r6
   36320:	mov	r5, r7
   36324:	cmp	r2, r1
   36328:	bne	362e4 <flatcc_json_parser_integer@@Base+0x40>
   3632c:	mov	r3, #0
   36330:	mov	r1, r2
   36334:	mov	r4, r6
   36338:	mov	r5, r7
   3633c:	cmp	r1, ip
   36340:	beq	363a0 <flatcc_json_parser_integer@@Base+0xfc>
   36344:	cmp	r3, #0
   36348:	beq	363d4 <flatcc_json_parser_integer@@Base+0x130>
   3634c:	ldrb	r3, [r1]
   36350:	cmp	r3, #46	; 0x2e
   36354:	cmpne	r3, #101	; 0x65
   36358:	bne	363cc <flatcc_json_parser_integer@@Base+0x128>
   3635c:	ldr	r3, [r0, #20]
   36360:	cmp	r3, #0
   36364:	bne	363c4 <flatcc_json_parser_integer@@Base+0x120>
   36368:	str	r1, [r0, #32]
   3636c:	mov	r3, #12
   36370:	ldr	r7, [r0, #4]
   36374:	sub	r1, r1, r7
   36378:	add	r1, r1, #1
   3637c:	str	r1, [r0, #16]
   36380:	str	r3, [r0, #20]
   36384:	mov	r0, r2
   36388:	pop	{r4, r5, r6, r7, fp, pc}
   3638c:	mov	r1, r2
   36390:	mov	r5, #0
   36394:	mov	r3, #0
   36398:	cmp	r1, ip
   3639c:	bne	36344 <flatcc_json_parser_integer@@Base+0xa0>
   363a0:	mov	r0, ip
   363a4:	pop	{r4, r5, r6, r7, fp, pc}
   363a8:	mov	r3, #1
   363ac:	cmp	r1, ip
   363b0:	bne	36344 <flatcc_json_parser_integer@@Base+0xa0>
   363b4:	b	363a0 <flatcc_json_parser_integer@@Base+0xfc>
   363b8:	ldr	r7, [r0, #20]
   363bc:	cmp	r7, #0
   363c0:	beq	363e8 <flatcc_json_parser_integer@@Base+0x144>
   363c4:	mov	r0, r2
   363c8:	pop	{r4, r5, r6, r7, fp, pc}
   363cc:	cmp	r3, #69	; 0x45
   363d0:	beq	3635c <flatcc_json_parser_integer@@Base+0xb8>
   363d4:	ldr	r0, [fp, #8]
   363d8:	mov	ip, r1
   363dc:	strd	r4, [r0]
   363e0:	mov	r0, ip
   363e4:	pop	{r4, r5, r6, r7, fp, pc}
   363e8:	str	r1, [r0, #32]
   363ec:	cmp	r3, #0
   363f0:	mov	r7, #8
   363f4:	ldr	r3, [r0, #4]
   363f8:	movweq	r7, #7
   363fc:	sub	r1, r1, r3
   36400:	add	r1, r1, #1
   36404:	str	r1, [r0, #16]
   36408:	str	r7, [r0, #20]
   3640c:	mov	r0, r2
   36410:	pop	{r4, r5, r6, r7, fp, pc}

00036414 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   36414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36418:	add	fp, sp, #28
   3641c:	sub	sp, sp, #28
   36420:	ldr	r9, [fp, #8]
   36424:	mov	r6, r3
   36428:	mov	r4, r2
   3642c:	mov	r5, r0
   36430:	cmp	r1, r2
   36434:	beq	3647c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   36438:	ldrb	r0, [r1]
   3643c:	cmp	r0, #34	; 0x22
   36440:	bne	3647c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   36444:	add	sl, r1, #1
   36448:	cmp	sl, r4
   3644c:	beq	364a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   36450:	mov	r7, sl
   36454:	ldrb	r1, [r7]
   36458:	cmp	r1, #32
   3645c:	bcc	366c0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ac>
   36460:	cmp	r1, #34	; 0x22
   36464:	cmpne	r1, #92	; 0x5c
   36468:	beq	36518 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x104>
   3646c:	add	r7, r7, #1
   36470:	cmp	r4, r7
   36474:	bne	36454 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   36478:	b	364a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   3647c:	ldr	r0, [r5, #20]
   36480:	cmp	r0, #0
   36484:	bne	364a4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   36488:	str	r1, [r5, #32]
   3648c:	mov	r0, #16
   36490:	ldr	r2, [r5, #4]
   36494:	sub	r1, r1, r2
   36498:	add	r1, r1, #1
   3649c:	str	r1, [r5, #16]
   364a0:	str	r0, [r5, #20]
   364a4:	ldr	r0, [r5, #20]
   364a8:	cmp	r0, #0
   364ac:	mov	r0, r4
   364b0:	bne	364d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   364b4:	str	r4, [r5, #32]
   364b8:	mov	r0, #20
   364bc:	ldr	r1, [r5, #4]
   364c0:	sub	r1, r4, r1
   364c4:	add	r1, r1, #1
   364c8:	str	r1, [r5, #16]
   364cc:	str	r0, [r5, #20]
   364d0:	mov	r0, r4
   364d4:	mov	r1, #0
   364d8:	str	r1, [r6]
   364dc:	ldr	r1, [r5, #20]
   364e0:	cmp	r1, #0
   364e4:	bne	3650c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   364e8:	str	r0, [r5, #32]
   364ec:	cmp	r9, #0
   364f0:	mov	r1, #31
   364f4:	ldr	r2, [r5, #4]
   364f8:	movwne	r1, #32
   364fc:	sub	r0, r0, r2
   36500:	add	r0, r0, #1
   36504:	str	r0, [r5, #16]
   36508:	str	r1, [r5, #20]
   3650c:	mov	r0, r4
   36510:	sub	sp, fp, #28
   36514:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36518:	cmp	r4, r7
   3651c:	mov	r0, r4
   36520:	beq	364d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   36524:	cmp	r1, #34	; 0x22
   36528:	bne	36554 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   3652c:	sub	r1, r7, sl
   36530:	and	r0, r1, #3
   36534:	str	r1, [sp, #20]
   36538:	lsr	r1, r1, #2
   3653c:	add	r8, r1, r1, lsl #1
   36540:	cmp	r0, #2
   36544:	beq	3655c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x148>
   36548:	cmp	r0, #3
   3654c:	addeq	r8, r8, #2
   36550:	b	36560 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x14c>
   36554:	mov	r0, r7
   36558:	b	364d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   3655c:	add	r8, r8, #1
   36560:	ldr	r0, [r5]
   36564:	mov	r1, #1
   36568:	mov	r2, #1
   3656c:	mvn	r3, #0
   36570:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   36574:	cmp	r0, #0
   36578:	beq	365b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x19c>
   3657c:	mov	r0, #0
   36580:	str	r0, [r6]
   36584:	ldr	r0, [r5, #20]
   36588:	cmp	r0, #0
   3658c:	bne	3650c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   36590:	mov	r0, #33	; 0x21
   36594:	str	r7, [r5, #32]
   36598:	ldr	r1, [r5, #4]
   3659c:	sub	r1, r7, r1
   365a0:	add	r1, r1, #1
   365a4:	str	r1, [r5, #16]
   365a8:	str	r0, [r5, #20]
   365ac:	b	3650c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   365b0:	ldr	r0, [r5]
   365b4:	mov	r1, r8
   365b8:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   365bc:	cmp	r0, #0
   365c0:	beq	3657c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   365c4:	ldr	r2, [pc, #636]	; 36848 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x434>
   365c8:	mov	r1, r8
   365cc:	ldr	r8, [pc, #632]	; 3684c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x438>
   365d0:	str	r0, [sp]
   365d4:	str	r0, [sp, #12]
   365d8:	ldr	r0, [sp, #20]
   365dc:	cmp	r9, #0
   365e0:	add	lr, sp, #24
   365e4:	mov	ip, sl
   365e8:	str	r1, [sp, #4]
   365ec:	add	r2, pc, r2
   365f0:	add	r8, pc, r8
   365f4:	movne	r8, r2
   365f8:	cmp	r1, #0
   365fc:	mvneq	r1, #0
   36600:	str	r1, [sp, #16]
   36604:	mov	r1, #0
   36608:	str	r0, [sp, #8]
   3660c:	cmp	r0, r1
   36610:	bne	3662c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   36614:	b	366e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
   36618:	add	r1, r1, #1
   3661c:	cmp	r1, #4
   36620:	bcs	36658 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x244>
   36624:	cmp	r0, r1
   36628:	beq	366e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d0>
   3662c:	ldrb	r2, [ip, r1]
   36630:	ldrb	r3, [r8, r2]
   36634:	cmp	r3, #64	; 0x40
   36638:	strb	r3, [lr, r1]
   3663c:	bcc	36618 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   36640:	cmp	r3, #65	; 0x41
   36644:	bne	36730 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x31c>
   36648:	sub	r1, r1, #1
   3664c:	sub	r0, r0, #1
   36650:	add	ip, ip, #1
   36654:	b	36618 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   36658:	ldr	lr, [sp, #16]
   3665c:	cmp	lr, #3
   36660:	bcc	367c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   36664:	ldrb	r2, [sp, #25]
   36668:	ldrb	r1, [sp, #24]
   3666c:	subs	lr, lr, #3
   36670:	sub	r0, r0, #4
   36674:	add	ip, ip, #4
   36678:	str	lr, [sp, #16]
   3667c:	add	lr, sp, #24
   36680:	lsr	r3, r2, #4
   36684:	orr	r1, r3, r1, lsl #2
   36688:	ldr	r3, [sp, #12]
   3668c:	strb	r1, [r3]
   36690:	ldrb	r1, [sp, #26]
   36694:	lsr	r1, r1, #2
   36698:	orr	r1, r1, r2, lsl #4
   3669c:	strb	r1, [r3, #1]
   366a0:	ldrb	r1, [sp, #26]
   366a4:	ldrb	r2, [sp, #27]
   366a8:	orr	r1, r2, r1, lsl #6
   366ac:	strb	r1, [r3, #2]
   366b0:	add	r3, r3, #3
   366b4:	str	r3, [sp, #12]
   366b8:	bne	36604 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   366bc:	b	367b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   366c0:	ldr	r0, [r5, #20]
   366c4:	cmp	r0, #0
   366c8:	mov	r0, r4
   366cc:	bne	364d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   366d0:	str	r7, [r5, #32]
   366d4:	mov	r0, #17
   366d8:	ldr	r1, [r5, #4]
   366dc:	sub	r1, r7, r1
   366e0:	b	364c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb0>
   366e4:	mov	r1, r0
   366e8:	mov	r3, r0
   366ec:	ldr	r2, [sp, #16]
   366f0:	sub	r0, r0, r3
   366f4:	cmp	r1, #0
   366f8:	beq	367b0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x39c>
   366fc:	cmp	r1, #3
   36700:	beq	36770 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x35c>
   36704:	cmp	r1, #2
   36708:	bne	367c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   3670c:	ldrb	r1, [sp, #25]
   36710:	tst	r1, #15
   36714:	bne	367c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   36718:	ldrb	r2, [sp, #24]
   3671c:	lsl	r2, r2, #2
   36720:	orr	r1, r2, r1, lsr #4
   36724:	ldr	r2, [sp, #12]
   36728:	strb	r1, [r2], #1
   3672c:	b	367ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   36730:	cmp	r3, #66	; 0x42
   36734:	bne	3682c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x418>
   36738:	add	r2, r1, #1
   3673c:	mov	r3, r2
   36740:	cmp	r2, r0
   36744:	bcs	366ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   36748:	cmp	r3, #7
   3674c:	bhi	366ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   36750:	ldrb	r2, [ip, r3]
   36754:	ldrb	r2, [r8, r2]
   36758:	sub	r2, r2, #65	; 0x41
   3675c:	uxtb	lr, r2
   36760:	add	r2, r3, #1
   36764:	cmp	lr, #2
   36768:	bcc	3673c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x328>
   3676c:	b	366ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   36770:	cmp	r2, #2
   36774:	bcc	367c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   36778:	ldrb	r1, [sp, #26]
   3677c:	ands	r2, r1, #3
   36780:	bne	367c4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b0>
   36784:	ldrb	r3, [sp, #25]
   36788:	ldrb	ip, [sp, #24]
   3678c:	lsl	r2, r3, #4
   36790:	orr	r1, r2, r1, lsr #2
   36794:	ldr	r2, [sp, #12]
   36798:	strb	r1, [r2, #1]
   3679c:	lsr	r1, r3, #4
   367a0:	orr	r1, r1, ip, lsl #2
   367a4:	strb	r1, [r2]
   367a8:	add	r2, r2, #2
   367ac:	str	r2, [sp, #12]
   367b0:	cmp	r0, #0
   367b4:	beq	367d8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c4>
   367b8:	mov	r1, r0
   367bc:	ldr	r0, [sp, #20]
   367c0:	b	367cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   367c4:	ldr	r0, [sp, #20]
   367c8:	ldr	r1, [sp, #8]
   367cc:	sub	r0, r0, r1
   367d0:	add	r0, sl, r0
   367d4:	b	364d4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc0>
   367d8:	ldr	r0, [sp]
   367dc:	ldr	r1, [sp, #12]
   367e0:	sub	r0, r1, r0
   367e4:	ldr	r1, [sp, #4]
   367e8:	cmp	r1, r0
   367ec:	bls	36804 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f0>
   367f0:	sub	r1, r1, r0
   367f4:	ldr	r0, [r5]
   367f8:	bl	2ea7c <flatcc_builder_truncate_vector@@Base>
   367fc:	cmp	r0, #0
   36800:	bne	3657c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   36804:	ldr	r0, [r5]
   36808:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   3680c:	cmp	r0, #0
   36810:	str	r0, [r6]
   36814:	beq	3657c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x168>
   36818:	ldrb	r0, [r7]
   3681c:	cmp	r0, #34	; 0x22
   36820:	bne	36834 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x420>
   36824:	add	r4, r7, #1
   36828:	b	3650c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   3682c:	mov	r3, r1
   36830:	b	366ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   36834:	ldr	r0, [r5, #20]
   36838:	cmp	r0, #0
   3683c:	bne	3650c <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf8>
   36840:	mov	r0, #20
   36844:	b	36594 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   36848:	andeq	r4, r1, ip, lsl r1
   3684c:	andeq	r4, r1, r8, lsl r0

00036850 <flatcc_json_parser_build_string@@Base>:
   36850:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36854:	add	fp, sp, #28
   36858:	sub	sp, sp, #4
   3685c:	mov	sl, r3
   36860:	mov	r4, r2
   36864:	mov	r5, r0
   36868:	cmp	r1, r2
   3686c:	beq	368bc <flatcc_json_parser_build_string@@Base+0x6c>
   36870:	ldrb	r0, [r1]
   36874:	cmp	r0, #34	; 0x22
   36878:	bne	368bc <flatcc_json_parser_build_string@@Base+0x6c>
   3687c:	add	r1, r1, #1
   36880:	mov	r6, r4
   36884:	cmp	r1, r4
   36888:	beq	368ec <flatcc_json_parser_build_string@@Base+0x9c>
   3688c:	mov	r6, r1
   36890:	ldrb	r0, [r6]
   36894:	cmp	r0, #32
   36898:	bcc	36ae8 <flatcc_json_parser_build_string@@Base+0x298>
   3689c:	cmp	r0, #34	; 0x22
   368a0:	cmpne	r0, #92	; 0x5c
   368a4:	beq	36a08 <flatcc_json_parser_build_string@@Base+0x1b8>
   368a8:	add	r6, r6, #1
   368ac:	cmp	r4, r6
   368b0:	bne	36890 <flatcc_json_parser_build_string@@Base+0x40>
   368b4:	mov	r6, r1
   368b8:	b	368ec <flatcc_json_parser_build_string@@Base+0x9c>
   368bc:	ldr	r0, [r5, #20]
   368c0:	mov	r6, r4
   368c4:	cmp	r0, #0
   368c8:	bne	368ec <flatcc_json_parser_build_string@@Base+0x9c>
   368cc:	str	r1, [r5, #32]
   368d0:	mov	r0, #16
   368d4:	mov	r6, r4
   368d8:	ldr	r2, [r5, #4]
   368dc:	sub	r1, r1, r2
   368e0:	add	r1, r1, #1
   368e4:	str	r1, [r5, #16]
   368e8:	str	r0, [r5, #20]
   368ec:	ldr	r0, [r5, #20]
   368f0:	cmp	r0, #0
   368f4:	bne	36914 <flatcc_json_parser_build_string@@Base+0xc4>
   368f8:	str	r4, [r5, #32]
   368fc:	mov	r0, #20
   36900:	ldr	r1, [r5, #4]
   36904:	sub	r1, r4, r1
   36908:	add	r1, r1, #1
   3690c:	str	r1, [r5, #16]
   36910:	str	r0, [r5, #20]
   36914:	mov	r7, r4
   36918:	ldr	r0, [r5]
   3691c:	bl	2efe8 <flatcc_builder_start_string@@Base>
   36920:	cmp	r0, #0
   36924:	beq	36940 <flatcc_json_parser_build_string@@Base+0xf0>
   36928:	mov	r4, r7
   3692c:	mov	r0, #0
   36930:	str	r0, [sl]
   36934:	mov	r0, r4
   36938:	sub	sp, fp, #28
   3693c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36940:	ldr	r0, [r5]
   36944:	sub	r2, r7, r6
   36948:	mov	r1, r6
   3694c:	bl	2e8d0 <flatcc_builder_append_string@@Base>
   36950:	cmp	r0, #0
   36954:	beq	36928 <flatcc_json_parser_build_string@@Base+0xd8>
   36958:	cmp	r7, r4
   3695c:	mov	r6, r4
   36960:	beq	36a8c <flatcc_json_parser_build_string@@Base+0x23c>
   36964:	mov	r8, sp
   36968:	add	r9, r8, #1
   3696c:	ldrb	r0, [r7]
   36970:	cmp	r0, #34	; 0x22
   36974:	beq	36a88 <flatcc_json_parser_build_string@@Base+0x238>
   36978:	mov	r0, r5
   3697c:	mov	r1, r7
   36980:	mov	r2, r4
   36984:	mov	r3, r8
   36988:	bl	33fc4 <flatcc_json_parser_string_escape@@Base>
   3698c:	mov	r6, r0
   36990:	ldr	r0, [r5]
   36994:	ldrb	r2, [sp]
   36998:	mov	r1, r9
   3699c:	bl	2e8d0 <flatcc_builder_append_string@@Base>
   369a0:	cmp	r0, #0
   369a4:	beq	36ae0 <flatcc_json_parser_build_string@@Base+0x290>
   369a8:	cmp	r6, r4
   369ac:	beq	36a30 <flatcc_json_parser_build_string@@Base+0x1e0>
   369b0:	mov	r7, r6
   369b4:	ldrb	r0, [r7]
   369b8:	cmp	r0, #32
   369bc:	bcc	36a54 <flatcc_json_parser_build_string@@Base+0x204>
   369c0:	cmp	r0, #34	; 0x22
   369c4:	cmpne	r0, #92	; 0x5c
   369c8:	beq	369dc <flatcc_json_parser_build_string@@Base+0x18c>
   369cc:	add	r7, r7, #1
   369d0:	cmp	r4, r7
   369d4:	bne	369b4 <flatcc_json_parser_build_string@@Base+0x164>
   369d8:	b	36a30 <flatcc_json_parser_build_string@@Base+0x1e0>
   369dc:	cmp	r4, r7
   369e0:	beq	36a80 <flatcc_json_parser_build_string@@Base+0x230>
   369e4:	ldr	r0, [r5]
   369e8:	sub	r2, r7, r6
   369ec:	mov	r1, r6
   369f0:	bl	2e8d0 <flatcc_builder_append_string@@Base>
   369f4:	cmp	r0, #0
   369f8:	beq	36928 <flatcc_json_parser_build_string@@Base+0xd8>
   369fc:	cmp	r4, r7
   36a00:	bne	3696c <flatcc_json_parser_build_string@@Base+0x11c>
   36a04:	b	36a80 <flatcc_json_parser_build_string@@Base+0x230>
   36a08:	cmp	r4, r6
   36a0c:	beq	36af4 <flatcc_json_parser_build_string@@Base+0x2a4>
   36a10:	cmp	r0, #34	; 0x22
   36a14:	bne	36a28 <flatcc_json_parser_build_string@@Base+0x1d8>
   36a18:	ldr	r0, [r5]
   36a1c:	sub	r2, r6, r1
   36a20:	bl	313bc <flatcc_builder_create_string@@Base>
   36a24:	b	36a94 <flatcc_json_parser_build_string@@Base+0x244>
   36a28:	mov	r7, r6
   36a2c:	b	36af8 <flatcc_json_parser_build_string@@Base+0x2a8>
   36a30:	ldr	r0, [r5, #20]
   36a34:	mov	r6, r4
   36a38:	cmp	r0, #0
   36a3c:	bne	36a8c <flatcc_json_parser_build_string@@Base+0x23c>
   36a40:	str	r4, [r5, #32]
   36a44:	mov	r0, #20
   36a48:	ldr	r1, [r5, #4]
   36a4c:	sub	r1, r4, r1
   36a50:	b	36a74 <flatcc_json_parser_build_string@@Base+0x224>
   36a54:	ldr	r0, [r5, #20]
   36a58:	mov	r6, r4
   36a5c:	cmp	r0, #0
   36a60:	bne	36a8c <flatcc_json_parser_build_string@@Base+0x23c>
   36a64:	str	r7, [r5, #32]
   36a68:	mov	r0, #17
   36a6c:	ldr	r1, [r5, #4]
   36a70:	sub	r1, r7, r1
   36a74:	add	r1, r1, #1
   36a78:	str	r1, [r5, #16]
   36a7c:	str	r0, [r5, #20]
   36a80:	mov	r6, r4
   36a84:	b	36a8c <flatcc_json_parser_build_string@@Base+0x23c>
   36a88:	mov	r6, r7
   36a8c:	ldr	r0, [r5]
   36a90:	bl	31540 <flatcc_builder_end_string@@Base>
   36a94:	cmp	r6, r4
   36a98:	str	r0, [sl]
   36a9c:	beq	36ab4 <flatcc_json_parser_build_string@@Base+0x264>
   36aa0:	ldrb	r0, [r6]
   36aa4:	cmp	r0, #34	; 0x22
   36aa8:	bne	36ab4 <flatcc_json_parser_build_string@@Base+0x264>
   36aac:	add	r4, r6, #1
   36ab0:	b	36934 <flatcc_json_parser_build_string@@Base+0xe4>
   36ab4:	ldr	r0, [r5, #20]
   36ab8:	cmp	r0, #0
   36abc:	bne	36934 <flatcc_json_parser_build_string@@Base+0xe4>
   36ac0:	str	r6, [r5, #32]
   36ac4:	mov	r0, #20
   36ac8:	ldr	r1, [r5, #4]
   36acc:	sub	r1, r6, r1
   36ad0:	add	r1, r1, #1
   36ad4:	str	r1, [r5, #16]
   36ad8:	str	r0, [r5, #20]
   36adc:	b	36934 <flatcc_json_parser_build_string@@Base+0xe4>
   36ae0:	mov	r4, r6
   36ae4:	b	3692c <flatcc_json_parser_build_string@@Base+0xdc>
   36ae8:	ldr	r0, [r5, #20]
   36aec:	cmp	r0, #0
   36af0:	beq	36b00 <flatcc_json_parser_build_string@@Base+0x2b0>
   36af4:	mov	r7, r4
   36af8:	mov	r6, r1
   36afc:	b	36918 <flatcc_json_parser_build_string@@Base+0xc8>
   36b00:	str	r6, [r5, #32]
   36b04:	mov	r0, #17
   36b08:	mov	r7, r4
   36b0c:	ldr	r2, [r5, #4]
   36b10:	sub	r2, r6, r2
   36b14:	add	r2, r2, #1
   36b18:	str	r2, [r5, #16]
   36b1c:	str	r0, [r5, #20]
   36b20:	b	36af8 <flatcc_json_parser_build_string@@Base+0x2a8>

00036b24 <flatcc_json_parser_prepare_unions@@Base>:
   36b24:	push	{r4, r5, r6, r7, fp, lr}
   36b28:	add	fp, sp, #16
   36b2c:	mov	r6, r0
   36b30:	add	r0, r3, r3, lsl #1
   36b34:	mov	r5, r1
   36b38:	mov	r1, #8
   36b3c:	mov	r7, r3
   36b40:	mov	r4, r2
   36b44:	add	r1, r1, r0, lsl #3
   36b48:	ldr	r0, [r6]
   36b4c:	bl	2d394 <flatcc_builder_enter_user_frame@@Base>
   36b50:	mov	r1, r0
   36b54:	ldr	r0, [fp, #8]
   36b58:	cmp	r1, #0
   36b5c:	str	r1, [r0]
   36b60:	beq	36b7c <flatcc_json_parser_prepare_unions@@Base+0x58>
   36b64:	ldr	r0, [r6]
   36b68:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   36b6c:	mov	r4, r5
   36b70:	str	r7, [r0]
   36b74:	mov	r0, r4
   36b78:	pop	{r4, r5, r6, r7, fp, pc}
   36b7c:	ldr	r0, [r6, #20]
   36b80:	cmp	r0, #0
   36b84:	beq	36b90 <flatcc_json_parser_prepare_unions@@Base+0x6c>
   36b88:	mov	r0, r4
   36b8c:	pop	{r4, r5, r6, r7, fp, pc}
   36b90:	str	r5, [r6, #32]
   36b94:	mov	r0, #33	; 0x21
   36b98:	ldr	r1, [r6, #4]
   36b9c:	sub	r1, r5, r1
   36ba0:	add	r1, r1, #1
   36ba4:	str	r1, [r6, #16]
   36ba8:	str	r0, [r6, #20]
   36bac:	mov	r0, r4
   36bb0:	pop	{r4, r5, r6, r7, fp, pc}

00036bb4 <flatcc_json_parser_finalize_unions@@Base>:
   36bb4:	push	{r4, r5, r6, r7, fp, lr}
   36bb8:	add	fp, sp, #16
   36bbc:	mov	r6, r0
   36bc0:	ldr	r0, [r0]
   36bc4:	mov	r7, r1
   36bc8:	mov	r1, r3
   36bcc:	mov	r5, r3
   36bd0:	mov	r4, r2
   36bd4:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   36bd8:	ldr	r0, [r0, #4]
   36bdc:	cmp	r0, #0
   36be0:	beq	36c10 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   36be4:	ldr	r0, [r6, #20]
   36be8:	cmp	r0, #0
   36bec:	bne	36c14 <flatcc_json_parser_finalize_unions@@Base+0x60>
   36bf0:	str	r7, [r6, #32]
   36bf4:	mov	r0, #27
   36bf8:	ldr	r1, [r6, #4]
   36bfc:	sub	r1, r7, r1
   36c00:	add	r1, r1, #1
   36c04:	str	r1, [r6, #16]
   36c08:	str	r0, [r6, #20]
   36c0c:	b	36c14 <flatcc_json_parser_finalize_unions@@Base+0x60>
   36c10:	mov	r4, r7
   36c14:	ldr	r0, [r6]
   36c18:	mov	r1, r5
   36c1c:	bl	2d4bc <flatcc_builder_exit_user_frame_at@@Base>
   36c20:	mov	r0, r4
   36c24:	pop	{r4, r5, r6, r7, fp, pc}

00036c28 <flatcc_json_parser_union@@Base>:
   36c28:	push	{r4, r5, r6, r7, fp, lr}
   36c2c:	add	fp, sp, #16
   36c30:	sub	sp, sp, #16
   36c34:	mov	r6, r1
   36c38:	mov	r5, r0
   36c3c:	ldr	r0, [r0]
   36c40:	ldr	r1, [fp, #12]
   36c44:	mov	r7, r3
   36c48:	mov	r4, r2
   36c4c:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   36c50:	add	r2, r0, #8
   36c54:	add	r3, r7, r7, lsl #1
   36c58:	mov	r1, r2
   36c5c:	ldr	r7, [r1, r3, lsl #3]!
   36c60:	cmp	r7, #0
   36c64:	beq	36c94 <flatcc_json_parser_union@@Base+0x6c>
   36c68:	ldr	r0, [r5, #20]
   36c6c:	cmp	r0, #0
   36c70:	bne	36d54 <flatcc_json_parser_union@@Base+0x12c>
   36c74:	mov	r0, #28
   36c78:	str	r6, [r5, #32]
   36c7c:	ldr	r1, [r5, #4]
   36c80:	sub	r1, r6, r1
   36c84:	add	r1, r1, #1
   36c88:	str	r1, [r5, #16]
   36c8c:	str	r0, [r5, #20]
   36c90:	b	36d54 <flatcc_json_parser_union@@Base+0x12c>
   36c94:	add	r2, r2, r3, lsl #3
   36c98:	ldrb	r3, [r2, #12]
   36c9c:	cmp	r3, #0
   36ca0:	beq	36d10 <flatcc_json_parser_union@@Base+0xe8>
   36ca4:	ldrb	r3, [r2, #13]
   36ca8:	cmp	r3, #0
   36cac:	strb	r3, [sp, #8]
   36cb0:	beq	36d48 <flatcc_json_parser_union@@Base+0x120>
   36cb4:	ldr	r1, [r0, #4]
   36cb8:	ldr	r7, [fp, #16]
   36cbc:	mov	r2, r4
   36cc0:	sub	r1, r1, #1
   36cc4:	str	r1, [r0, #4]
   36cc8:	add	r0, sp, #8
   36ccc:	mov	r1, r6
   36cd0:	add	r0, r0, #4
   36cd4:	str	r0, [sp]
   36cd8:	mov	r0, r5
   36cdc:	blx	r7
   36ce0:	cmp	r0, r4
   36ce4:	beq	36d54 <flatcc_json_parser_union@@Base+0x12c>
   36ce8:	mov	r6, r0
   36cec:	ldr	r1, [fp, #8]
   36cf0:	ldr	r0, [r5]
   36cf4:	ldr	r2, [sp, #8]
   36cf8:	ldr	r3, [sp, #12]
   36cfc:	bl	30358 <flatcc_builder_table_add_union@@Base>
   36d00:	cmp	r0, #0
   36d04:	bne	36c68 <flatcc_json_parser_union@@Base+0x40>
   36d08:	mov	r4, r6
   36d0c:	b	36d54 <flatcc_json_parser_union@@Base+0x12c>
   36d10:	ldr	r3, [r0, #4]
   36d14:	add	r3, r3, #1
   36d18:	str	r3, [r0, #4]
   36d1c:	ldr	r0, [r5, #12]
   36d20:	str	r0, [r2, #8]
   36d24:	ldr	r0, [r5, #4]
   36d28:	str	r0, [r2, #4]
   36d2c:	str	r6, [r1]
   36d30:	mov	r0, r5
   36d34:	mov	r1, r6
   36d38:	mov	r2, r4
   36d3c:	bl	34774 <flatcc_json_parser_generic_json@@Base>
   36d40:	mov	r4, r0
   36d44:	b	36d54 <flatcc_json_parser_union@@Base+0x12c>
   36d48:	ldr	r0, [r5, #20]
   36d4c:	cmp	r0, #0
   36d50:	beq	36d60 <flatcc_json_parser_union@@Base+0x138>
   36d54:	mov	r0, r4
   36d58:	sub	sp, fp, #16
   36d5c:	pop	{r4, r5, r6, r7, fp, pc}
   36d60:	mov	r0, #25
   36d64:	b	36c78 <flatcc_json_parser_union@@Base+0x50>

00036d68 <flatcc_json_parser_union_type@@Base>:
   36d68:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36d6c:	add	fp, sp, #28
   36d70:	sub	sp, sp, #20
   36d74:	mov	r8, r1
   36d78:	mov	r5, r0
   36d7c:	ldr	r0, [r0]
   36d80:	ldr	r1, [fp, #12]
   36d84:	mov	r6, r3
   36d88:	mov	r4, r2
   36d8c:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   36d90:	add	r3, r6, r6, lsl #1
   36d94:	add	r2, r0, #8
   36d98:	mov	r9, r0
   36d9c:	add	sl, r2, r3, lsl #3
   36da0:	mov	r0, sl
   36da4:	ldrb	r1, [r0, #12]!
   36da8:	cmp	r1, #0
   36dac:	beq	36ddc <flatcc_json_parser_union_type@@Base+0x74>
   36db0:	ldr	r0, [r5, #20]
   36db4:	cmp	r0, #0
   36db8:	bne	370b8 <flatcc_json_parser_union_type@@Base+0x350>
   36dbc:	str	r8, [r5, #32]
   36dc0:	mov	r0, #28
   36dc4:	ldr	r1, [r5, #4]
   36dc8:	sub	r1, r8, r1
   36dcc:	add	r1, r1, #1
   36dd0:	str	r1, [r5, #16]
   36dd4:	str	r0, [r5, #20]
   36dd8:	b	370b8 <flatcc_json_parser_union_type@@Base+0x350>
   36ddc:	mov	r1, #1
   36de0:	mov	r6, #0
   36de4:	mov	lr, sl
   36de8:	cmp	r8, r4
   36dec:	str	r3, [sp, #4]
   36df0:	str	r2, [sp, #8]
   36df4:	strb	r1, [r0]
   36df8:	strb	r6, [lr, #13]!
   36dfc:	beq	36fbc <flatcc_json_parser_union_type@@Base+0x254>
   36e00:	mov	r2, r8
   36e04:	ldrb	ip, [r2], #1
   36e08:	cmp	ip, #45	; 0x2d
   36e0c:	movne	r2, r8
   36e10:	cmp	r2, r4
   36e14:	beq	36ec4 <flatcc_json_parser_union_type@@Base+0x15c>
   36e18:	mov	r6, #0
   36e1c:	mov	r0, #10
   36e20:	mov	r7, #0
   36e24:	ldrb	r1, [r2]
   36e28:	sub	r3, r1, #48	; 0x30
   36e2c:	uxtb	r3, r3
   36e30:	cmp	r3, #9
   36e34:	bhi	36f50 <flatcc_json_parser_union_type@@Base+0x1e8>
   36e38:	add	r3, r7, r7, lsl #2
   36e3c:	lsl	r3, r3, #1
   36e40:	umlal	r1, r3, r6, r0
   36e44:	subs	r1, r1, #48	; 0x30
   36e48:	sbc	r3, r3, #0
   36e4c:	subs	r6, r1, r6
   36e50:	sbcs	r7, r3, r7
   36e54:	bcc	36f60 <flatcc_json_parser_union_type@@Base+0x1f8>
   36e58:	add	r2, r2, #1
   36e5c:	mov	r6, r1
   36e60:	mov	r7, r3
   36e64:	cmp	r4, r2
   36e68:	bne	36e24 <flatcc_json_parser_union_type@@Base+0xbc>
   36e6c:	mov	r0, #0
   36e70:	mov	r2, r4
   36e74:	mov	r6, r1
   36e78:	mov	r7, r3
   36e7c:	cmp	r2, r8
   36e80:	beq	36fbc <flatcc_json_parser_union_type@@Base+0x254>
   36e84:	cmp	r0, #0
   36e88:	beq	36edc <flatcc_json_parser_union_type@@Base+0x174>
   36e8c:	ldrb	r0, [r2]
   36e90:	cmp	r0, #46	; 0x2e
   36e94:	beq	36ea4 <flatcc_json_parser_union_type@@Base+0x13c>
   36e98:	cmp	r0, #101	; 0x65
   36e9c:	cmpne	r0, #69	; 0x45
   36ea0:	bne	36edc <flatcc_json_parser_union_type@@Base+0x174>
   36ea4:	ldr	r0, [r5, #20]
   36ea8:	mov	r6, #0
   36eac:	mov	r7, #0
   36eb0:	cmp	r0, #0
   36eb4:	mov	r0, r4
   36eb8:	bne	36fa0 <flatcc_json_parser_union_type@@Base+0x238>
   36ebc:	mov	r0, #12
   36ec0:	b	36f7c <flatcc_json_parser_union_type@@Base+0x214>
   36ec4:	mov	r2, r4
   36ec8:	mov	r7, #0
   36ecc:	mov	r0, #0
   36ed0:	cmp	r2, r8
   36ed4:	bne	36e84 <flatcc_json_parser_union_type@@Base+0x11c>
   36ed8:	b	36fbc <flatcc_json_parser_union_type@@Base+0x254>
   36edc:	mov	r0, r2
   36ee0:	cmp	r0, r8
   36ee4:	beq	36fbc <flatcc_json_parser_union_type@@Base+0x254>
   36ee8:	cmp	ip, #45	; 0x2d
   36eec:	bne	36f08 <flatcc_json_parser_union_type@@Base+0x1a0>
   36ef0:	ldr	r1, [r5, #20]
   36ef4:	mov	r2, r4
   36ef8:	cmp	r1, #0
   36efc:	bne	36fb4 <flatcc_json_parser_union_type@@Base+0x24c>
   36f00:	mov	r1, #8
   36f04:	b	36f28 <flatcc_json_parser_union_type@@Base+0x1c0>
   36f08:	subs	r1, r6, #256	; 0x100
   36f0c:	sbcs	r1, r7, #0
   36f10:	bcc	36fac <flatcc_json_parser_union_type@@Base+0x244>
   36f14:	ldr	r1, [r5, #20]
   36f18:	mov	r2, r4
   36f1c:	cmp	r1, #0
   36f20:	bne	36fb4 <flatcc_json_parser_union_type@@Base+0x24c>
   36f24:	mov	r1, #7
   36f28:	str	r0, [r5, #32]
   36f2c:	ldr	r2, [r5, #4]
   36f30:	sub	r0, r0, r2
   36f34:	mov	r2, r4
   36f38:	add	r0, r0, #1
   36f3c:	str	r0, [r5, #16]
   36f40:	str	r1, [r5, #20]
   36f44:	cmp	r2, r8
   36f48:	bne	36fe0 <flatcc_json_parser_union_type@@Base+0x278>
   36f4c:	b	36fbc <flatcc_json_parser_union_type@@Base+0x254>
   36f50:	mov	r0, #1
   36f54:	cmp	r2, r8
   36f58:	bne	36e84 <flatcc_json_parser_union_type@@Base+0x11c>
   36f5c:	b	36fbc <flatcc_json_parser_union_type@@Base+0x254>
   36f60:	ldr	r0, [r5, #20]
   36f64:	mov	r6, #0
   36f68:	mov	r7, #0
   36f6c:	cmp	r0, #0
   36f70:	mov	r0, r4
   36f74:	bne	36fa0 <flatcc_json_parser_union_type@@Base+0x238>
   36f78:	mov	r0, #8
   36f7c:	str	r2, [r5, #32]
   36f80:	mov	r6, #0
   36f84:	mov	r7, #0
   36f88:	ldr	r1, [r5, #4]
   36f8c:	sub	r1, r2, r1
   36f90:	add	r1, r1, #1
   36f94:	str	r1, [r5, #16]
   36f98:	str	r0, [r5, #20]
   36f9c:	mov	r0, r4
   36fa0:	cmp	r0, r8
   36fa4:	bne	36ee8 <flatcc_json_parser_union_type@@Base+0x180>
   36fa8:	b	36fbc <flatcc_json_parser_union_type@@Base+0x254>
   36fac:	mov	r2, r0
   36fb0:	strb	r6, [lr]
   36fb4:	cmp	r2, r8
   36fb8:	bne	36fe0 <flatcc_json_parser_union_type@@Base+0x278>
   36fbc:	ldr	r3, [fp, #16]
   36fc0:	mov	r0, r5
   36fc4:	mov	r1, r8
   36fc8:	mov	r2, r4
   36fcc:	str	lr, [sp]
   36fd0:	mov	r6, lr
   36fd4:	bl	370f0 <flatcc_json_parser_union_type@@Base+0x388>
   36fd8:	mov	lr, r6
   36fdc:	mov	r2, r0
   36fe0:	ldr	r0, [sp, #8]
   36fe4:	ldr	r1, [sp, #4]
   36fe8:	ldr	r1, [r0, r1, lsl #3]
   36fec:	cmp	r1, #0
   36ff0:	beq	37090 <flatcc_json_parser_union_type@@Base+0x328>
   36ff4:	ldr	r0, [r9, #4]
   36ff8:	str	r2, [sp, #8]
   36ffc:	cmp	r0, #0
   37000:	beq	370c4 <flatcc_json_parser_union_type@@Base+0x35c>
   37004:	sub	r0, r0, #1
   37008:	ldr	r6, [fp, #20]
   3700c:	mov	r2, r4
   37010:	str	r0, [r9, #4]
   37014:	ldr	r0, [sl, #8]
   37018:	ldr	r8, [r5, #4]
   3701c:	ldr	r7, [r5, #12]
   37020:	str	r0, [r5, #12]
   37024:	ldr	r0, [sl, #4]
   37028:	str	r0, [r5, #4]
   3702c:	add	r0, sp, #12
   37030:	ldrb	r3, [lr]
   37034:	add	r0, r0, #4
   37038:	str	r0, [sp]
   3703c:	mov	r0, r5
   37040:	strb	r3, [sp, #12]
   37044:	blx	r6
   37048:	cmp	r0, r4
   3704c:	beq	370b8 <flatcc_json_parser_union_type@@Base+0x350>
   37050:	ldr	r1, [fp, #8]
   37054:	ldr	r0, [r5]
   37058:	ldr	r2, [sp, #12]
   3705c:	ldr	r3, [sp, #16]
   37060:	bl	30358 <flatcc_builder_table_add_union@@Base>
   37064:	cmp	r0, #0
   37068:	beq	370ac <flatcc_json_parser_union_type@@Base+0x344>
   3706c:	ldr	r0, [r5, #20]
   37070:	cmp	r0, #0
   37074:	bne	370b8 <flatcc_json_parser_union_type@@Base+0x350>
   37078:	ldr	r2, [sp, #8]
   3707c:	mov	r0, #28
   37080:	str	r2, [r5, #32]
   37084:	ldr	r1, [r5, #4]
   37088:	sub	r1, r2, r1
   3708c:	b	36dcc <flatcc_json_parser_union_type@@Base+0x64>
   37090:	ldrb	r0, [lr]
   37094:	ldr	r1, [r9, #4]
   37098:	mov	r4, r2
   3709c:	cmp	r0, #0
   370a0:	addne	r1, r1, #1
   370a4:	str	r1, [r9, #4]
   370a8:	b	370b8 <flatcc_json_parser_union_type@@Base+0x350>
   370ac:	ldr	r4, [sp, #8]
   370b0:	str	r8, [r5, #4]
   370b4:	str	r7, [r5, #12]
   370b8:	mov	r0, r4
   370bc:	sub	sp, fp, #28
   370c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   370c4:	ldr	r0, [pc, #24]	; 370e4 <flatcc_json_parser_union_type@@Base+0x37c>
   370c8:	ldr	r1, [pc, #24]	; 370e8 <flatcc_json_parser_union_type@@Base+0x380>
   370cc:	ldr	r3, [pc, #24]	; 370ec <flatcc_json_parser_union_type@@Base+0x384>
   370d0:	movw	r2, #965	; 0x3c5
   370d4:	add	r0, pc, r0
   370d8:	add	r1, pc, r1
   370dc:	add	r3, pc, r3
   370e0:	bl	14f38 <__assert_fail@plt>
   370e4:	andeq	r3, r1, r3, asr sl
   370e8:	andeq	r3, r1, lr, asr sl
   370ec:			; <UNDEFINED> instruction: 0x00013abb
   370f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   370f4:	add	fp, sp, #28
   370f8:	sub	sp, sp, #36	; 0x24
   370fc:	mov	r4, r2
   37100:	mov	r2, r1
   37104:	ldr	r1, [fp, #8]
   37108:	mov	r5, r0
   3710c:	mov	r0, #0
   37110:	mov	r6, r3
   37114:	cmp	r2, r4
   37118:	strb	r0, [r1]
   3711c:	beq	37134 <flatcc_json_parser_union_type@@Base+0x3cc>
   37120:	ldrb	r0, [r2]
   37124:	cmp	r0, #34	; 0x22
   37128:	bne	3713c <flatcc_json_parser_union_type@@Base+0x3d4>
   3712c:	add	r1, r2, #1
   37130:	b	3716c <flatcc_json_parser_union_type@@Base+0x404>
   37134:	mov	r1, r2
   37138:	b	3716c <flatcc_json_parser_union_type@@Base+0x404>
   3713c:	ldr	r0, [r5, #20]
   37140:	mov	r1, r4
   37144:	cmp	r0, #0
   37148:	bne	3716c <flatcc_json_parser_union_type@@Base+0x404>
   3714c:	str	r2, [r5, #32]
   37150:	mov	r0, #5
   37154:	ldr	r1, [r5, #4]
   37158:	sub	r1, r2, r1
   3715c:	add	r1, r1, #1
   37160:	str	r1, [r5, #16]
   37164:	mov	r1, r4
   37168:	str	r0, [r5, #20]
   3716c:	sub	r0, r4, r1
   37170:	cmp	r0, #2
   37174:	blt	371a8 <flatcc_json_parser_union_type@@Base+0x440>
   37178:	ldrb	r0, [r1]
   3717c:	cmp	r0, #32
   37180:	bls	37194 <flatcc_json_parser_union_type@@Base+0x42c>
   37184:	mov	r7, r1
   37188:	cmp	r7, r4
   3718c:	bne	371c0 <flatcc_json_parser_union_type@@Base+0x458>
   37190:	b	37294 <flatcc_json_parser_union_type@@Base+0x52c>
   37194:	bne	371a8 <flatcc_json_parser_union_type@@Base+0x440>
   37198:	mov	r7, r1
   3719c:	ldrb	r0, [r7, #1]!
   371a0:	cmp	r0, #32
   371a4:	bhi	371b8 <flatcc_json_parser_union_type@@Base+0x450>
   371a8:	mov	r0, r5
   371ac:	mov	r2, r4
   371b0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   371b4:	mov	r7, r0
   371b8:	cmp	r7, r4
   371bc:	beq	37294 <flatcc_json_parser_union_type@@Base+0x52c>
   371c0:	add	sl, r6, #4
   371c4:	add	r8, sp, #24
   371c8:	add	r9, sp, #20
   371cc:	str	r6, [sp, #12]
   371d0:	str	sl, [sp, #8]
   371d4:	ldr	r6, [r6]
   371d8:	add	r0, sp, #16
   371dc:	mov	r1, r7
   371e0:	mov	r2, r4
   371e4:	mov	r3, r9
   371e8:	str	r8, [sp]
   371ec:	str	r0, [sp, #4]
   371f0:	mov	r0, r5
   371f4:	blx	r6
   371f8:	cmp	r0, r4
   371fc:	beq	37294 <flatcc_json_parser_union_type@@Base+0x52c>
   37200:	cmp	r0, r7
   37204:	bne	37218 <flatcc_json_parser_union_type@@Base+0x4b0>
   37208:	ldr	r6, [sl], #4
   3720c:	cmp	r6, #0
   37210:	bne	371d8 <flatcc_json_parser_union_type@@Base+0x470>
   37214:	b	3726c <flatcc_json_parser_union_type@@Base+0x504>
   37218:	ldr	r1, [sp, #20]
   3721c:	cmp	r1, #0
   37220:	bne	372a0 <flatcc_json_parser_union_type@@Base+0x538>
   37224:	ldr	r1, [sp, #24]
   37228:	ldr	r2, [sp, #28]
   3722c:	subs	r3, r1, #256	; 0x100
   37230:	sbcs	r2, r2, #0
   37234:	bcs	372b4 <flatcc_json_parser_union_type@@Base+0x54c>
   37238:	ldr	r2, [fp, #8]
   3723c:	ldr	r6, [sp, #12]
   37240:	ldr	sl, [sp, #8]
   37244:	mov	r7, r0
   37248:	mov	r3, r2
   3724c:	ldrb	r2, [r2]
   37250:	add	r1, r2, r1
   37254:	strb	r1, [r3]
   37258:	ldr	r1, [sp, #16]
   3725c:	cmp	r1, #0
   37260:	bne	371d4 <flatcc_json_parser_union_type@@Base+0x46c>
   37264:	sub	sp, fp, #28
   37268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3726c:	ldr	r0, [r5, #20]
   37270:	cmp	r0, #0
   37274:	bne	37294 <flatcc_json_parser_union_type@@Base+0x52c>
   37278:	str	r7, [r5, #32]
   3727c:	mov	r0, #23
   37280:	ldr	r1, [r5, #4]
   37284:	sub	r1, r7, r1
   37288:	add	r1, r1, #1
   3728c:	str	r1, [r5, #16]
   37290:	str	r0, [r5, #20]
   37294:	mov	r0, r4
   37298:	sub	sp, fp, #28
   3729c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   372a0:	ldr	r1, [r5, #20]
   372a4:	cmp	r1, #0
   372a8:	bne	37294 <flatcc_json_parser_union_type@@Base+0x52c>
   372ac:	mov	r1, #8
   372b0:	b	372c4 <flatcc_json_parser_union_type@@Base+0x55c>
   372b4:	ldr	r1, [r5, #20]
   372b8:	cmp	r1, #0
   372bc:	bne	37294 <flatcc_json_parser_union_type@@Base+0x52c>
   372c0:	mov	r1, #7
   372c4:	str	r0, [r5, #32]
   372c8:	ldr	r2, [r5, #4]
   372cc:	sub	r0, r0, r2
   372d0:	add	r0, r0, #1
   372d4:	str	r0, [r5, #16]
   372d8:	str	r1, [r5, #20]
   372dc:	b	37294 <flatcc_json_parser_union_type@@Base+0x52c>

000372e0 <flatcc_json_parser_union_vector@@Base>:
   372e0:	push	{r4, r5, r6, r7, fp, lr}
   372e4:	add	fp, sp, #16
   372e8:	sub	sp, sp, #16
   372ec:	mov	r6, r1
   372f0:	mov	r5, r0
   372f4:	ldr	r0, [r0]
   372f8:	ldr	r1, [fp, #12]
   372fc:	mov	r7, r3
   37300:	mov	r4, r2
   37304:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   37308:	add	r2, r0, #8
   3730c:	add	r3, r7, r7, lsl #1
   37310:	mov	r1, r2
   37314:	ldr	r7, [r1, r3, lsl #3]!
   37318:	cmp	r7, #0
   3731c:	beq	37354 <flatcc_json_parser_union_vector@@Base+0x74>
   37320:	ldr	r0, [r5, #20]
   37324:	cmp	r0, #0
   37328:	bne	37348 <flatcc_json_parser_union_vector@@Base+0x68>
   3732c:	str	r6, [r5, #32]
   37330:	mov	r0, #28
   37334:	ldr	r1, [r5, #4]
   37338:	sub	r1, r6, r1
   3733c:	add	r1, r1, #1
   37340:	str	r1, [r5, #16]
   37344:	str	r0, [r5, #20]
   37348:	mov	r0, r4
   3734c:	sub	sp, fp, #16
   37350:	pop	{r4, r5, r6, r7, fp, pc}
   37354:	add	r2, r2, r3, lsl #3
   37358:	ldr	r3, [r0, #4]
   3735c:	ldrb	r7, [r2, #12]
   37360:	cmp	r7, #0
   37364:	beq	373a0 <flatcc_json_parser_union_vector@@Base+0xc0>
   37368:	sub	r3, r3, #1
   3736c:	ldr	r1, [fp, #16]
   37370:	ldr	r7, [fp, #8]
   37374:	str	r3, [r0, #4]
   37378:	ldr	r0, [r2, #16]
   3737c:	ldr	r3, [r2, #20]
   37380:	mov	r2, r4
   37384:	stm	sp, {r0, r7}
   37388:	str	r1, [sp, #8]
   3738c:	mov	r0, r5
   37390:	mov	r1, r6
   37394:	bl	373d4 <flatcc_json_parser_union_vector@@Base+0xf4>
   37398:	sub	sp, fp, #16
   3739c:	pop	{r4, r5, r6, r7, fp, pc}
   373a0:	add	r3, r3, #1
   373a4:	str	r3, [r0, #4]
   373a8:	ldr	r0, [r5, #12]
   373ac:	str	r0, [r2, #8]
   373b0:	ldr	r0, [r5, #4]
   373b4:	str	r0, [r2, #4]
   373b8:	str	r6, [r1]
   373bc:	mov	r0, r5
   373c0:	mov	r1, r6
   373c4:	mov	r2, r4
   373c8:	sub	sp, fp, #16
   373cc:	pop	{r4, r5, r6, r7, fp, lr}
   373d0:	b	34774 <flatcc_json_parser_generic_json@@Base>
   373d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   373d8:	add	fp, sp, #28
   373dc:	sub	sp, sp, #12
   373e0:	mov	r5, r0
   373e4:	mov	r0, #0
   373e8:	mov	r8, r3
   373ec:	mov	r6, r2
   373f0:	mov	r7, r1
   373f4:	str	r0, [sp, #8]
   373f8:	ldr	r0, [r5]
   373fc:	bl	2ed1c <flatcc_builder_start_offset_vector@@Base>
   37400:	cmp	r0, #0
   37404:	beq	37428 <flatcc_json_parser_union_vector@@Base+0x148>
   37408:	ldr	r0, [r5, #20]
   3740c:	cmp	r0, #0
   37410:	bne	374a4 <flatcc_json_parser_union_vector@@Base+0x1c4>
   37414:	str	r7, [r5, #32]
   37418:	mov	r0, #33	; 0x21
   3741c:	ldr	r1, [r5, #4]
   37420:	sub	r1, r7, r1
   37424:	b	37498 <flatcc_json_parser_union_vector@@Base+0x1b8>
   37428:	ldr	sl, [fp, #8]
   3742c:	cmp	r7, r6
   37430:	beq	37464 <flatcc_json_parser_union_vector@@Base+0x184>
   37434:	ldrb	r0, [r7]
   37438:	cmp	r0, #91	; 0x5b
   3743c:	bne	37464 <flatcc_json_parser_union_vector@@Base+0x184>
   37440:	add	r1, r7, #1
   37444:	sub	r0, r6, r1
   37448:	cmp	r0, #2
   3744c:	blt	37538 <flatcc_json_parser_union_vector@@Base+0x258>
   37450:	ldrb	r0, [r1]
   37454:	cmp	r0, #32
   37458:	bls	37528 <flatcc_json_parser_union_vector@@Base+0x248>
   3745c:	mov	r7, r1
   37460:	b	37548 <flatcc_json_parser_union_vector@@Base+0x268>
   37464:	ldr	r0, [r5, #20]
   37468:	mov	r9, r6
   3746c:	cmp	r0, #0
   37470:	beq	374b0 <flatcc_json_parser_union_vector@@Base+0x1d0>
   37474:	cmp	sl, #0
   37478:	beq	374d8 <flatcc_json_parser_union_vector@@Base+0x1f8>
   3747c:	ldr	r0, [r5, #20]
   37480:	cmp	r0, #0
   37484:	bne	374a4 <flatcc_json_parser_union_vector@@Base+0x1c4>
   37488:	str	r9, [r5, #32]
   3748c:	mov	r0, #30
   37490:	ldr	r1, [r5, #4]
   37494:	sub	r1, r9, r1
   37498:	add	r1, r1, #1
   3749c:	str	r1, [r5, #16]
   374a0:	str	r0, [r5, #20]
   374a4:	mov	r0, r6
   374a8:	sub	sp, fp, #28
   374ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   374b0:	str	r7, [r5, #32]
   374b4:	mov	r0, #22
   374b8:	mov	r9, r6
   374bc:	ldr	r1, [r5, #4]
   374c0:	sub	r1, r7, r1
   374c4:	add	r1, r1, #1
   374c8:	str	r1, [r5, #16]
   374cc:	str	r0, [r5, #20]
   374d0:	cmp	sl, #0
   374d4:	bne	3747c <flatcc_json_parser_union_vector@@Base+0x19c>
   374d8:	ldr	r0, [r5]
   374dc:	mov	r1, r8
   374e0:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   374e4:	mov	r1, r0
   374e8:	ldr	r0, [r5]
   374ec:	bl	30260 <flatcc_builder_end_offset_vector_for_unions@@Base>
   374f0:	cmp	r0, #0
   374f4:	str	r0, [sp, #8]
   374f8:	beq	37520 <flatcc_json_parser_union_vector@@Base+0x240>
   374fc:	ldr	r1, [fp, #12]
   37500:	ldr	r0, [r5]
   37504:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   37508:	cmp	r0, #0
   3750c:	beq	37520 <flatcc_json_parser_union_vector@@Base+0x240>
   37510:	ldr	r1, [sp, #8]
   37514:	mov	r6, r9
   37518:	str	r1, [r0]
   3751c:	b	374a4 <flatcc_json_parser_union_vector@@Base+0x1c4>
   37520:	mov	r7, r9
   37524:	b	37408 <flatcc_json_parser_union_vector@@Base+0x128>
   37528:	bne	37538 <flatcc_json_parser_union_vector@@Base+0x258>
   3752c:	ldrb	r0, [r7, #2]!
   37530:	cmp	r0, #32
   37534:	bhi	37548 <flatcc_json_parser_union_vector@@Base+0x268>
   37538:	mov	r0, r5
   3753c:	mov	r2, r6
   37540:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   37544:	mov	r7, r0
   37548:	cmp	r7, r6
   3754c:	mov	r4, r6
   37550:	beq	37590 <flatcc_json_parser_union_vector@@Base+0x2b0>
   37554:	ldrb	r0, [r7]
   37558:	cmp	r0, #93	; 0x5d
   3755c:	bne	3758c <flatcc_json_parser_union_vector@@Base+0x2ac>
   37560:	add	r1, r7, #1
   37564:	sub	r0, r6, r1
   37568:	cmp	r0, #2
   3756c:	blt	37700 <flatcc_json_parser_union_vector@@Base+0x420>
   37570:	ldrb	r0, [r1]
   37574:	cmp	r0, #32
   37578:	bls	376ec <flatcc_json_parser_union_vector@@Base+0x40c>
   3757c:	mov	r9, r1
   37580:	cmp	sl, #0
   37584:	bne	3747c <flatcc_json_parser_union_vector@@Base+0x19c>
   37588:	b	374d8 <flatcc_json_parser_union_vector@@Base+0x1f8>
   3758c:	mov	r4, r7
   37590:	cmp	sl, #0
   37594:	beq	376cc <flatcc_json_parser_union_vector@@Base+0x3ec>
   37598:	add	r0, r6, #1
   3759c:	mov	sl, #0
   375a0:	add	r9, sp, #8
   375a4:	str	r0, [sp, #4]
   375a8:	ldr	r0, [r5]
   375ac:	mov	r1, r8
   375b0:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   375b4:	ldrb	r3, [r0, -sl]
   375b8:	ldr	r7, [fp, #16]
   375bc:	mov	r0, r5
   375c0:	mov	r1, r4
   375c4:	mov	r2, r6
   375c8:	str	r9, [sp]
   375cc:	blx	r7
   375d0:	cmp	r0, r6
   375d4:	beq	374a4 <flatcc_json_parser_union_vector@@Base+0x1c4>
   375d8:	mov	r7, r0
   375dc:	ldr	r0, [r5]
   375e0:	mov	r1, #1
   375e4:	bl	2e474 <flatcc_builder_extend_offset_vector@@Base>
   375e8:	cmp	r0, #0
   375ec:	beq	37408 <flatcc_json_parser_union_vector@@Base+0x128>
   375f0:	ldr	r1, [sp, #8]
   375f4:	str	r1, [r0]
   375f8:	sub	r0, r6, r7
   375fc:	cmp	r0, #2
   37600:	blt	37634 <flatcc_json_parser_union_vector@@Base+0x354>
   37604:	ldrb	r0, [r7]
   37608:	cmp	r0, #32
   3760c:	bls	37620 <flatcc_json_parser_union_vector@@Base+0x340>
   37610:	mov	r4, r7
   37614:	cmp	r4, r6
   37618:	bne	37650 <flatcc_json_parser_union_vector@@Base+0x370>
   3761c:	b	3779c <flatcc_json_parser_union_vector@@Base+0x4bc>
   37620:	bne	37634 <flatcc_json_parser_union_vector@@Base+0x354>
   37624:	mov	r4, r7
   37628:	ldrb	r0, [r4, #1]!
   3762c:	cmp	r0, #32
   37630:	bhi	37648 <flatcc_json_parser_union_vector@@Base+0x368>
   37634:	mov	r0, r5
   37638:	mov	r1, r7
   3763c:	mov	r2, r6
   37640:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   37644:	mov	r4, r0
   37648:	cmp	r4, r6
   3764c:	beq	3779c <flatcc_json_parser_union_vector@@Base+0x4bc>
   37650:	ldrb	r0, [r4]
   37654:	cmp	r0, #44	; 0x2c
   37658:	bne	3771c <flatcc_json_parser_union_vector@@Base+0x43c>
   3765c:	add	r1, r4, #1
   37660:	sub	r0, r6, r1
   37664:	cmp	r0, #2
   37668:	blt	37698 <flatcc_json_parser_union_vector@@Base+0x3b8>
   3766c:	ldrb	r0, [r1]
   37670:	cmp	r0, #32
   37674:	bls	37688 <flatcc_json_parser_union_vector@@Base+0x3a8>
   37678:	mov	r4, r1
   3767c:	cmp	r4, r6
   37680:	bne	376b0 <flatcc_json_parser_union_vector@@Base+0x3d0>
   37684:	b	37748 <flatcc_json_parser_union_vector@@Base+0x468>
   37688:	bne	37698 <flatcc_json_parser_union_vector@@Base+0x3b8>
   3768c:	ldrb	r0, [r4, #2]!
   37690:	cmp	r0, #32
   37694:	bhi	376a8 <flatcc_json_parser_union_vector@@Base+0x3c8>
   37698:	mov	r0, r5
   3769c:	mov	r2, r6
   376a0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   376a4:	mov	r4, r0
   376a8:	cmp	r4, r6
   376ac:	beq	37748 <flatcc_json_parser_union_vector@@Base+0x468>
   376b0:	ldrb	r0, [r4]
   376b4:	cmp	r0, #93	; 0x5d
   376b8:	beq	37724 <flatcc_json_parser_union_vector@@Base+0x444>
   376bc:	ldr	r0, [fp, #8]
   376c0:	sub	sl, sl, #1
   376c4:	adds	r0, r0, sl
   376c8:	bne	375a8 <flatcc_json_parser_union_vector@@Base+0x2c8>
   376cc:	ldr	r0, [r5, #20]
   376d0:	cmp	r0, #0
   376d4:	bne	374a4 <flatcc_json_parser_union_vector@@Base+0x1c4>
   376d8:	str	r4, [r5, #32]
   376dc:	mov	r0, #30
   376e0:	ldr	r1, [r5, #4]
   376e4:	sub	r1, r4, r1
   376e8:	b	37498 <flatcc_json_parser_union_vector@@Base+0x1b8>
   376ec:	bne	37700 <flatcc_json_parser_union_vector@@Base+0x420>
   376f0:	ldrb	r0, [r7, #2]!
   376f4:	mov	r9, r7
   376f8:	cmp	r0, #32
   376fc:	bhi	37474 <flatcc_json_parser_union_vector@@Base+0x194>
   37700:	mov	r0, r5
   37704:	mov	r2, r6
   37708:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   3770c:	mov	r9, r0
   37710:	cmp	sl, #0
   37714:	bne	3747c <flatcc_json_parser_union_vector@@Base+0x19c>
   37718:	b	374d8 <flatcc_json_parser_union_vector@@Base+0x1f8>
   3771c:	cmp	r0, #93	; 0x5d
   37720:	bne	37770 <flatcc_json_parser_union_vector@@Base+0x490>
   37724:	add	r1, r4, #1
   37728:	sub	r0, r6, r1
   3772c:	cmp	r0, #2
   37730:	blt	377b8 <flatcc_json_parser_union_vector@@Base+0x4d8>
   37734:	ldrb	r0, [r1]
   37738:	cmp	r0, #32
   3773c:	bls	377a4 <flatcc_json_parser_union_vector@@Base+0x4c4>
   37740:	mov	r9, r1
   37744:	b	377c8 <flatcc_json_parser_union_vector@@Base+0x4e8>
   37748:	ldr	r0, [r5, #20]
   3774c:	mov	r9, r6
   37750:	cmp	r0, #0
   37754:	bne	377c8 <flatcc_json_parser_union_vector@@Base+0x4e8>
   37758:	str	r6, [r5, #32]
   3775c:	ldr	r2, [sp, #4]
   37760:	mov	r0, #9
   37764:	ldr	r1, [r5, #4]
   37768:	sub	r1, r2, r1
   3776c:	b	37794 <flatcc_json_parser_union_vector@@Base+0x4b4>
   37770:	ldr	r0, [r5, #20]
   37774:	mov	r9, r6
   37778:	cmp	r0, #0
   3777c:	bne	377c8 <flatcc_json_parser_union_vector@@Base+0x4e8>
   37780:	str	r4, [r5, #32]
   37784:	mov	r0, #9
   37788:	ldr	r1, [r5, #4]
   3778c:	sub	r1, r4, r1
   37790:	add	r1, r1, #1
   37794:	str	r1, [r5, #16]
   37798:	str	r0, [r5, #20]
   3779c:	mov	r9, r6
   377a0:	b	377c8 <flatcc_json_parser_union_vector@@Base+0x4e8>
   377a4:	bne	377b8 <flatcc_json_parser_union_vector@@Base+0x4d8>
   377a8:	ldrb	r0, [r4, #2]!
   377ac:	mov	r9, r4
   377b0:	cmp	r0, #32
   377b4:	bhi	377c8 <flatcc_json_parser_union_vector@@Base+0x4e8>
   377b8:	mov	r0, r5
   377bc:	mov	r2, r6
   377c0:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   377c4:	mov	r9, r0
   377c8:	ldr	r0, [fp, #8]
   377cc:	add	r0, r0, sl
   377d0:	cmp	r0, #1
   377d4:	bne	3747c <flatcc_json_parser_union_vector@@Base+0x19c>
   377d8:	b	374d8 <flatcc_json_parser_union_vector@@Base+0x1f8>

000377dc <flatcc_json_parser_union_type_vector@@Base>:
   377dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   377e0:	add	fp, sp, #28
   377e4:	sub	sp, sp, #28
   377e8:	mov	r7, r1
   377ec:	mov	r5, r0
   377f0:	ldr	r0, [r0]
   377f4:	ldr	r1, [fp, #12]
   377f8:	mov	r4, r3
   377fc:	mov	r8, r2
   37800:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   37804:	add	r6, r4, r4, lsl #1
   37808:	add	r0, r0, #8
   3780c:	add	r4, r0, r6, lsl #3
   37810:	mov	r0, r4
   37814:	ldrb	r1, [r0, #12]!
   37818:	cmp	r1, #0
   3781c:	beq	37840 <flatcc_json_parser_union_type_vector@@Base+0x64>
   37820:	ldr	r0, [r5, #20]
   37824:	cmp	r0, #0
   37828:	bne	37890 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3782c:	str	r7, [r5, #32]
   37830:	mov	r0, #28
   37834:	ldr	r1, [r5, #4]
   37838:	sub	r1, r7, r1
   3783c:	b	37884 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   37840:	mov	r1, #1
   37844:	mov	r2, #1
   37848:	mvn	r3, #0
   3784c:	strb	r1, [r0]
   37850:	mov	r1, #1
   37854:	ldr	r0, [r5]
   37858:	bl	2ec90 <flatcc_builder_start_vector@@Base>
   3785c:	cmp	r0, #0
   37860:	beq	3789c <flatcc_json_parser_union_type_vector@@Base+0xc0>
   37864:	mov	sl, r7
   37868:	ldr	r0, [r5, #20]
   3786c:	cmp	r0, #0
   37870:	bne	37890 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   37874:	str	sl, [r5, #32]
   37878:	mov	r0, #33	; 0x21
   3787c:	ldr	r1, [r5, #4]
   37880:	sub	r1, sl, r1
   37884:	add	r1, r1, #1
   37888:	str	r1, [r5, #16]
   3788c:	str	r0, [r5, #20]
   37890:	mov	r0, r8
   37894:	sub	sp, fp, #28
   37898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3789c:	cmp	r7, r8
   378a0:	beq	378d4 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   378a4:	ldrb	r0, [r7]
   378a8:	cmp	r0, #91	; 0x5b
   378ac:	bne	378d4 <flatcc_json_parser_union_type_vector@@Base+0xf8>
   378b0:	add	r1, r7, #1
   378b4:	sub	r0, r8, r1
   378b8:	cmp	r0, #2
   378bc:	blt	37918 <flatcc_json_parser_union_type_vector@@Base+0x13c>
   378c0:	ldrb	r0, [r1]
   378c4:	cmp	r0, #32
   378c8:	bls	37908 <flatcc_json_parser_union_type_vector@@Base+0x12c>
   378cc:	mov	r7, r1
   378d0:	b	37928 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   378d4:	ldr	r0, [r5, #20]
   378d8:	cmp	r0, #0
   378dc:	mov	r0, r8
   378e0:	bne	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   378e4:	str	r7, [r5, #32]
   378e8:	mov	r0, #22
   378ec:	ldr	r1, [r5, #4]
   378f0:	sub	r1, r7, r1
   378f4:	add	r1, r1, #1
   378f8:	str	r1, [r5, #16]
   378fc:	str	r0, [r5, #20]
   37900:	mov	r0, r8
   37904:	b	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   37908:	bne	37918 <flatcc_json_parser_union_type_vector@@Base+0x13c>
   3790c:	ldrb	r0, [r7, #2]!
   37910:	cmp	r0, #32
   37914:	bhi	37928 <flatcc_json_parser_union_type_vector@@Base+0x14c>
   37918:	mov	r0, r5
   3791c:	mov	r2, r8
   37920:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   37924:	mov	r7, r0
   37928:	cmp	r7, r8
   3792c:	mov	sl, r8
   37930:	beq	37978 <flatcc_json_parser_union_type_vector@@Base+0x19c>
   37934:	ldrb	r0, [r7]
   37938:	cmp	r0, #93	; 0x5d
   3793c:	bne	37974 <flatcc_json_parser_union_type_vector@@Base+0x198>
   37940:	add	r1, r7, #1
   37944:	sub	r0, r8, r1
   37948:	cmp	r0, #2
   3794c:	blt	37db0 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   37950:	ldrb	r0, [r1]
   37954:	cmp	r0, #32
   37958:	bhi	37d20 <flatcc_json_parser_union_type_vector@@Base+0x544>
   3795c:	bne	37db0 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   37960:	ldrb	r0, [r7, #2]!
   37964:	cmp	r0, #32
   37968:	mov	r0, r7
   3796c:	bls	37db0 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   37970:	b	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   37974:	mov	sl, r7
   37978:	ldr	r0, [r5]
   3797c:	mov	r1, #1
   37980:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   37984:	cmp	r0, #0
   37988:	beq	37868 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   3798c:	mov	r1, r0
   37990:	add	r0, r8, #1
   37994:	str	r4, [sp, #16]
   37998:	str	r0, [sp, #12]
   3799c:	mov	r9, #0
   379a0:	cmp	sl, r8
   379a4:	mov	r4, r8
   379a8:	str	r1, [sp, #20]
   379ac:	strb	r9, [sp, #27]
   379b0:	beq	37ba0 <flatcc_json_parser_union_type_vector@@Base+0x3c4>
   379b4:	mov	r2, sl
   379b8:	mov	r9, #0
   379bc:	ldrb	ip, [r2], #1
   379c0:	cmp	ip, #45	; 0x2d
   379c4:	movne	r2, sl
   379c8:	cmp	r2, r8
   379cc:	beq	37a38 <flatcc_json_parser_union_type_vector@@Base+0x25c>
   379d0:	mov	r7, #0
   379d4:	mov	r0, #0
   379d8:	mov	r4, #10
   379dc:	ldrb	r1, [r2]
   379e0:	sub	r3, r1, #48	; 0x30
   379e4:	uxtb	r3, r3
   379e8:	cmp	r3, #9
   379ec:	bhi	37a4c <flatcc_json_parser_union_type_vector@@Base+0x270>
   379f0:	add	r3, r0, r0, lsl #2
   379f4:	lsl	r3, r3, #1
   379f8:	umlal	r1, r3, r7, r4
   379fc:	subs	r1, r1, #48	; 0x30
   37a00:	sbc	r3, r3, #0
   37a04:	subs	r7, r1, r7
   37a08:	sbcs	r0, r3, r0
   37a0c:	bcc	37ab8 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   37a10:	add	r2, r2, #1
   37a14:	mov	r7, r1
   37a18:	mov	r0, r3
   37a1c:	cmp	r8, r2
   37a20:	bne	379dc <flatcc_json_parser_union_type_vector@@Base+0x200>
   37a24:	mov	lr, #0
   37a28:	mov	r2, r8
   37a2c:	mov	r7, r1
   37a30:	mov	r0, r3
   37a34:	b	37a50 <flatcc_json_parser_union_type_vector@@Base+0x274>
   37a38:	mov	r2, r8
   37a3c:	mov	r7, #0
   37a40:	mov	r0, #0
   37a44:	mov	lr, #0
   37a48:	b	37a50 <flatcc_json_parser_union_type_vector@@Base+0x274>
   37a4c:	mov	lr, #1
   37a50:	cmp	r2, sl
   37a54:	mov	r4, sl
   37a58:	beq	37ba0 <flatcc_json_parser_union_type_vector@@Base+0x3c4>
   37a5c:	cmp	lr, #0
   37a60:	beq	37ab0 <flatcc_json_parser_union_type_vector@@Base+0x2d4>
   37a64:	ldrb	r1, [r2]
   37a68:	cmp	r1, #46	; 0x2e
   37a6c:	beq	37a7c <flatcc_json_parser_union_type_vector@@Base+0x2a0>
   37a70:	cmp	r1, #101	; 0x65
   37a74:	cmpne	r1, #69	; 0x45
   37a78:	bne	37ab0 <flatcc_json_parser_union_type_vector@@Base+0x2d4>
   37a7c:	ldr	r0, [r5, #20]
   37a80:	mov	r7, #0
   37a84:	mov	r4, r8
   37a88:	cmp	r0, #0
   37a8c:	mov	r0, #0
   37a90:	bne	37af8 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   37a94:	str	r2, [r5, #32]
   37a98:	ldr	r0, [r5, #4]
   37a9c:	sub	r0, r2, r0
   37aa0:	add	r0, r0, #1
   37aa4:	str	r0, [r5, #16]
   37aa8:	mov	r0, #12
   37aac:	b	37ae8 <flatcc_json_parser_union_type_vector@@Base+0x30c>
   37ab0:	mov	r4, r2
   37ab4:	b	37af8 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   37ab8:	ldr	r0, [r5, #20]
   37abc:	mov	r7, #0
   37ac0:	mov	r4, r8
   37ac4:	cmp	r0, #0
   37ac8:	mov	r0, #0
   37acc:	bne	37af8 <flatcc_json_parser_union_type_vector@@Base+0x31c>
   37ad0:	str	r2, [r5, #32]
   37ad4:	ldr	r0, [r5, #4]
   37ad8:	sub	r0, r2, r0
   37adc:	add	r0, r0, #1
   37ae0:	str	r0, [r5, #16]
   37ae4:	mov	r0, #8
   37ae8:	str	r0, [r5, #20]
   37aec:	mov	r7, #0
   37af0:	mov	r0, #0
   37af4:	mov	r4, r8
   37af8:	mov	r9, #0
   37afc:	cmp	r4, sl
   37b00:	beq	37b34 <flatcc_json_parser_union_type_vector@@Base+0x358>
   37b04:	cmp	ip, #45	; 0x2d
   37b08:	bne	37b44 <flatcc_json_parser_union_type_vector@@Base+0x368>
   37b0c:	ldr	r0, [r5, #20]
   37b10:	cmp	r0, #0
   37b14:	bne	37b5c <flatcc_json_parser_union_type_vector@@Base+0x380>
   37b18:	str	r4, [r5, #32]
   37b1c:	ldr	r0, [r5, #4]
   37b20:	sub	r0, r4, r0
   37b24:	add	r0, r0, #1
   37b28:	str	r0, [r5, #16]
   37b2c:	mov	r0, #8
   37b30:	b	37b98 <flatcc_json_parser_union_type_vector@@Base+0x3bc>
   37b34:	mov	r4, sl
   37b38:	cmp	sl, r4
   37b3c:	bne	37bdc <flatcc_json_parser_union_type_vector@@Base+0x400>
   37b40:	b	37ba8 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   37b44:	subs	r1, r7, #256	; 0x100
   37b48:	sbcs	r0, r0, #0
   37b4c:	bcc	37b6c <flatcc_json_parser_union_type_vector@@Base+0x390>
   37b50:	ldr	r0, [r5, #20]
   37b54:	cmp	r0, #0
   37b58:	beq	37b80 <flatcc_json_parser_union_type_vector@@Base+0x3a4>
   37b5c:	mov	r4, r8
   37b60:	cmp	sl, r4
   37b64:	bne	37bdc <flatcc_json_parser_union_type_vector@@Base+0x400>
   37b68:	b	37ba8 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   37b6c:	mov	r9, r7
   37b70:	strb	r7, [sp, #27]
   37b74:	cmp	sl, r4
   37b78:	bne	37bdc <flatcc_json_parser_union_type_vector@@Base+0x400>
   37b7c:	b	37ba8 <flatcc_json_parser_union_type_vector@@Base+0x3cc>
   37b80:	str	r4, [r5, #32]
   37b84:	ldr	r0, [r5, #4]
   37b88:	sub	r0, r4, r0
   37b8c:	add	r0, r0, #1
   37b90:	str	r0, [r5, #16]
   37b94:	mov	r0, #7
   37b98:	str	r0, [r5, #20]
   37b9c:	mov	r4, r8
   37ba0:	cmp	sl, r4
   37ba4:	bne	37bdc <flatcc_json_parser_union_type_vector@@Base+0x400>
   37ba8:	ldr	r3, [fp, #16]
   37bac:	add	r0, sp, #27
   37bb0:	mov	r1, sl
   37bb4:	mov	r2, r8
   37bb8:	str	r0, [sp]
   37bbc:	mov	r0, r5
   37bc0:	bl	370f0 <flatcc_json_parser_union_type@@Base+0x388>
   37bc4:	mov	r4, r0
   37bc8:	cmp	r0, sl
   37bcc:	beq	37d74 <flatcc_json_parser_union_type_vector@@Base+0x598>
   37bd0:	cmp	r4, r8
   37bd4:	beq	37d74 <flatcc_json_parser_union_type_vector@@Base+0x598>
   37bd8:	ldrb	r9, [sp, #27]
   37bdc:	ldr	r1, [fp, #24]
   37be0:	uxtb	r0, r9
   37be4:	blx	r1
   37be8:	cmp	r0, #0
   37bec:	bne	37c04 <flatcc_json_parser_union_type_vector@@Base+0x428>
   37bf0:	ldrb	r0, [r5, #8]
   37bf4:	tst	r0, #1
   37bf8:	beq	37d7c <flatcc_json_parser_union_type_vector@@Base+0x5a0>
   37bfc:	mov	r9, #0
   37c00:	strb	r9, [sp, #27]
   37c04:	ldr	r0, [sp, #20]
   37c08:	strb	r9, [r0]
   37c0c:	sub	r0, r8, r4
   37c10:	cmp	r0, #2
   37c14:	blt	37c48 <flatcc_json_parser_union_type_vector@@Base+0x46c>
   37c18:	ldrb	r0, [r4]
   37c1c:	cmp	r0, #32
   37c20:	bls	37c34 <flatcc_json_parser_union_type_vector@@Base+0x458>
   37c24:	mov	sl, r4
   37c28:	cmp	sl, r8
   37c2c:	bne	37c64 <flatcc_json_parser_union_type_vector@@Base+0x488>
   37c30:	b	37cf0 <flatcc_json_parser_union_type_vector@@Base+0x514>
   37c34:	bne	37c48 <flatcc_json_parser_union_type_vector@@Base+0x46c>
   37c38:	mov	sl, r4
   37c3c:	ldrb	r0, [sl, #1]!
   37c40:	cmp	r0, #32
   37c44:	bhi	37c5c <flatcc_json_parser_union_type_vector@@Base+0x480>
   37c48:	mov	r0, r5
   37c4c:	mov	r1, r4
   37c50:	mov	r2, r8
   37c54:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   37c58:	mov	sl, r0
   37c5c:	cmp	sl, r8
   37c60:	beq	37cf0 <flatcc_json_parser_union_type_vector@@Base+0x514>
   37c64:	ldrb	r0, [sl]
   37c68:	ldr	r4, [sp, #16]
   37c6c:	cmp	r0, #44	; 0x2c
   37c70:	bne	37cfc <flatcc_json_parser_union_type_vector@@Base+0x520>
   37c74:	add	r1, sl, #1
   37c78:	sub	r0, r8, r1
   37c7c:	cmp	r0, #2
   37c80:	blt	37cb0 <flatcc_json_parser_union_type_vector@@Base+0x4d4>
   37c84:	ldrb	r0, [r1]
   37c88:	cmp	r0, #32
   37c8c:	bls	37ca0 <flatcc_json_parser_union_type_vector@@Base+0x4c4>
   37c90:	mov	sl, r1
   37c94:	cmp	sl, r8
   37c98:	bne	37cc8 <flatcc_json_parser_union_type_vector@@Base+0x4ec>
   37c9c:	b	37d28 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   37ca0:	bne	37cb0 <flatcc_json_parser_union_type_vector@@Base+0x4d4>
   37ca4:	ldrb	r0, [sl, #2]!
   37ca8:	cmp	r0, #32
   37cac:	bhi	37cc0 <flatcc_json_parser_union_type_vector@@Base+0x4e4>
   37cb0:	mov	r0, r5
   37cb4:	mov	r2, r8
   37cb8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   37cbc:	mov	sl, r0
   37cc0:	cmp	sl, r8
   37cc4:	beq	37d28 <flatcc_json_parser_union_type_vector@@Base+0x54c>
   37cc8:	ldrb	r0, [sl]
   37ccc:	cmp	r0, #93	; 0x5d
   37cd0:	beq	37d04 <flatcc_json_parser_union_type_vector@@Base+0x528>
   37cd4:	ldr	r0, [r5]
   37cd8:	mov	r1, #1
   37cdc:	bl	2e0cc <flatcc_builder_extend_vector@@Base>
   37ce0:	mov	r1, r0
   37ce4:	cmp	r0, #0
   37ce8:	bne	3799c <flatcc_json_parser_union_type_vector@@Base+0x1c0>
   37cec:	b	37868 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   37cf0:	ldr	r4, [sp, #16]
   37cf4:	mov	r0, r8
   37cf8:	b	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   37cfc:	cmp	r0, #93	; 0x5d
   37d00:	bne	37d50 <flatcc_json_parser_union_type_vector@@Base+0x574>
   37d04:	add	r1, sl, #1
   37d08:	sub	r0, r8, r1
   37d0c:	cmp	r0, #2
   37d10:	blt	37db0 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   37d14:	ldrb	r0, [r1]
   37d18:	cmp	r0, #32
   37d1c:	bls	37d9c <flatcc_json_parser_union_type_vector@@Base+0x5c0>
   37d20:	mov	r0, r1
   37d24:	b	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   37d28:	ldr	r0, [r5, #20]
   37d2c:	cmp	r0, #0
   37d30:	mov	r0, r8
   37d34:	bne	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   37d38:	str	r8, [r5, #32]
   37d3c:	ldr	r2, [sp, #12]
   37d40:	mov	r0, #9
   37d44:	ldr	r1, [r5, #4]
   37d48:	sub	r1, r2, r1
   37d4c:	b	378f8 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   37d50:	ldr	r0, [r5, #20]
   37d54:	cmp	r0, #0
   37d58:	mov	r0, r8
   37d5c:	bne	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   37d60:	str	sl, [r5, #32]
   37d64:	mov	r0, #9
   37d68:	ldr	r1, [r5, #4]
   37d6c:	sub	r1, sl, r1
   37d70:	b	378f4 <flatcc_json_parser_union_type_vector@@Base+0x118>
   37d74:	mov	sl, r4
   37d78:	b	37868 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   37d7c:	ldr	r0, [r5, #20]
   37d80:	cmp	r0, #0
   37d84:	bne	37890 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   37d88:	str	r4, [r5, #32]
   37d8c:	mov	r0, #15
   37d90:	ldr	r1, [r5, #4]
   37d94:	sub	r1, r4, r1
   37d98:	b	37884 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   37d9c:	bne	37db0 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   37da0:	ldrb	r0, [sl, #2]!
   37da4:	cmp	r0, #32
   37da8:	mov	r0, sl
   37dac:	bhi	37dbc <flatcc_json_parser_union_type_vector@@Base+0x5e0>
   37db0:	mov	r0, r5
   37db4:	mov	r2, r8
   37db8:	bl	33e88 <flatcc_json_parser_space_ext@@Base>
   37dbc:	mov	sl, r0
   37dc0:	ldr	r0, [r5]
   37dc4:	bl	30004 <flatcc_builder_vector_count@@Base>
   37dc8:	str	r0, [r4, #16]
   37dcc:	mov	r7, r0
   37dd0:	ldr	r0, [r5]
   37dd4:	mov	r1, r7
   37dd8:	bl	2d394 <flatcc_builder_enter_user_frame@@Base>
   37ddc:	mov	r9, r0
   37de0:	ldr	r0, [r5]
   37de4:	mov	r1, r9
   37de8:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   37dec:	mov	r4, r0
   37df0:	ldr	r0, [r5]
   37df4:	bl	30010 <flatcc_builder_vector_edit@@Base>
   37df8:	mov	r1, r0
   37dfc:	mov	r0, r4
   37e00:	mov	r2, r7
   37e04:	bl	14e54 <memcpy@plt>
   37e08:	ldr	r0, [r5]
   37e0c:	bl	2ff08 <flatcc_builder_end_vector@@Base>
   37e10:	cmp	r0, #0
   37e14:	beq	37868 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   37e18:	ldr	r1, [fp, #8]
   37e1c:	mov	r4, r0
   37e20:	ldr	r0, [r5]
   37e24:	sub	r1, r1, #1
   37e28:	bl	30488 <flatcc_builder_table_add_offset@@Base>
   37e2c:	cmp	r0, #0
   37e30:	beq	37868 <flatcc_json_parser_union_type_vector@@Base+0x8c>
   37e34:	str	r4, [r0]
   37e38:	ldr	r1, [fp, #12]
   37e3c:	ldr	r0, [r5]
   37e40:	bl	2d558 <flatcc_builder_get_user_frame_ptr@@Base>
   37e44:	add	r2, r0, #8
   37e48:	mov	r3, r2
   37e4c:	ldr	r1, [r3, r6, lsl #3]!
   37e50:	str	r9, [r3, #20]
   37e54:	ldr	r3, [r0, #4]
   37e58:	cmp	r1, #0
   37e5c:	beq	37ec0 <flatcc_json_parser_union_type_vector@@Base+0x6e4>
   37e60:	cmp	r3, #0
   37e64:	beq	37ed0 <flatcc_json_parser_union_type_vector@@Base+0x6f4>
   37e68:	sub	r3, r3, #1
   37e6c:	ldr	ip, [fp, #20]
   37e70:	str	r3, [r0, #4]
   37e74:	add	r0, r2, r6, lsl #3
   37e78:	mov	r3, r9
   37e7c:	ldr	r6, [r5, #4]
   37e80:	ldr	r4, [r5, #12]
   37e84:	ldr	r2, [r0, #8]
   37e88:	str	r2, [r5, #12]
   37e8c:	mov	r2, r8
   37e90:	ldr	r0, [r0, #4]
   37e94:	str	r0, [r5, #4]
   37e98:	ldr	r0, [fp, #8]
   37e9c:	str	r7, [sp]
   37ea0:	stmib	sp, {r0, ip}
   37ea4:	mov	r0, r5
   37ea8:	bl	373d4 <flatcc_json_parser_union_vector@@Base+0xf4>
   37eac:	cmp	r0, r8
   37eb0:	beq	37890 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   37eb4:	str	r6, [r5, #4]
   37eb8:	str	r4, [r5, #12]
   37ebc:	b	37ec8 <flatcc_json_parser_union_type_vector@@Base+0x6ec>
   37ec0:	add	r1, r3, #1
   37ec4:	str	r1, [r0, #4]
   37ec8:	mov	r8, sl
   37ecc:	b	37890 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   37ed0:	ldr	r0, [pc, #24]	; 37ef0 <flatcc_json_parser_union_type_vector@@Base+0x714>
   37ed4:	ldr	r1, [pc, #24]	; 37ef4 <flatcc_json_parser_union_type_vector@@Base+0x718>
   37ed8:	ldr	r3, [pc, #24]	; 37ef8 <flatcc_json_parser_union_type_vector@@Base+0x71c>
   37edc:	movw	r2, #1122	; 0x462
   37ee0:	add	r0, pc, r0
   37ee4:	add	r1, pc, r1
   37ee8:	add	r3, pc, r3
   37eec:	bl	14f38 <__assert_fail@plt>
   37ef0:	andeq	r2, r1, r7, asr #24
   37ef4:	andeq	r2, r1, r2, asr ip
   37ef8:	andeq	r2, r1, fp, ror sp

00037efc <flatcc_json_parser_table_as_root@@Base>:
   37efc:	push	{r4, r5, r6, r7, fp, lr}
   37f00:	add	fp, sp, #16
   37f04:	sub	sp, sp, #48	; 0x30
   37f08:	cmp	r1, #0
   37f0c:	vmov.i32	q8, #0	; 0x00000000
   37f10:	add	r5, sp, #8
   37f14:	mov	r6, r0
   37f18:	add	r7, r2, r3
   37f1c:	mov	r4, r2
   37f20:	movne	r5, r1
   37f24:	mov	r1, #2
   37f28:	add	r0, r5, #16
   37f2c:	vst1.32	{d16-d17}, [r0]
   37f30:	mov	r0, #0
   37f34:	str	r0, [r5, #36]	; 0x24
   37f38:	mov	r0, #1
   37f3c:	str	r2, [r5, #32]
   37f40:	str	r0, [r5, #12]
   37f44:	ldr	r0, [fp, #8]
   37f48:	str	r2, [r5, #4]
   37f4c:	str	r6, [r5]
   37f50:	and	r3, r1, r0, lsr #1
   37f54:	ldr	r1, [fp, #12]
   37f58:	str	r0, [r5, #8]
   37f5c:	str	r7, [r5, #28]
   37f60:	str	r2, [r5, #24]
   37f64:	mov	r0, r6
   37f68:	mov	r2, #0
   37f6c:	bl	2dbc4 <flatcc_builder_start_buffer@@Base>
   37f70:	mov	r1, r0
   37f74:	mvn	r0, #0
   37f78:	cmp	r1, #0
   37f7c:	bne	37fa4 <flatcc_json_parser_table_as_root@@Base+0xa8>
   37f80:	ldr	ip, [fp, #16]
   37f84:	add	r3, sp, #4
   37f88:	mov	r0, r5
   37f8c:	mov	r1, r4
   37f90:	mov	r2, r7
   37f94:	blx	ip
   37f98:	ldr	r0, [r5, #20]
   37f9c:	cmp	r0, #0
   37fa0:	beq	37fac <flatcc_json_parser_table_as_root@@Base+0xb0>
   37fa4:	sub	sp, fp, #16
   37fa8:	pop	{r4, r5, r6, r7, fp, pc}
   37fac:	ldr	r1, [sp, #4]
   37fb0:	mov	r0, r6
   37fb4:	bl	2ddc4 <flatcc_builder_end_buffer@@Base>
   37fb8:	cmp	r0, #0
   37fbc:	mvn	r0, #0
   37fc0:	movne	r0, #0
   37fc4:	strne	r4, [r5, #36]	; 0x24
   37fc8:	sub	sp, fp, #16
   37fcc:	pop	{r4, r5, r6, r7, fp, pc}

00037fd0 <flatcc_json_parser_struct_as_root@@Base>:
   37fd0:	push	{r4, r5, r6, r7, fp, lr}
   37fd4:	add	fp, sp, #16
   37fd8:	sub	sp, sp, #48	; 0x30
   37fdc:	cmp	r1, #0
   37fe0:	vmov.i32	q8, #0	; 0x00000000
   37fe4:	add	r5, sp, #8
   37fe8:	mov	r6, r0
   37fec:	add	r7, r2, r3
   37ff0:	mov	r4, r2
   37ff4:	movne	r5, r1
   37ff8:	mov	r1, #2
   37ffc:	add	r0, r5, #16
   38000:	vst1.32	{d16-d17}, [r0]
   38004:	mov	r0, #0
   38008:	str	r0, [r5, #36]	; 0x24
   3800c:	mov	r0, #1
   38010:	str	r2, [r5, #32]
   38014:	str	r0, [r5, #12]
   38018:	ldr	r0, [fp, #8]
   3801c:	str	r2, [r5, #4]
   38020:	str	r6, [r5]
   38024:	and	r3, r1, r0, lsr #1
   38028:	ldr	r1, [fp, #12]
   3802c:	str	r0, [r5, #8]
   38030:	str	r7, [r5, #28]
   38034:	str	r2, [r5, #24]
   38038:	mov	r0, r6
   3803c:	mov	r2, #0
   38040:	bl	2dbc4 <flatcc_builder_start_buffer@@Base>
   38044:	mov	r1, r0
   38048:	mvn	r0, #0
   3804c:	cmp	r1, #0
   38050:	bne	38078 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   38054:	ldr	ip, [fp, #16]
   38058:	add	r3, sp, #4
   3805c:	mov	r0, r5
   38060:	mov	r1, r4
   38064:	mov	r2, r7
   38068:	blx	ip
   3806c:	ldr	r0, [r5, #20]
   38070:	cmp	r0, #0
   38074:	beq	38080 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   38078:	sub	sp, fp, #16
   3807c:	pop	{r4, r5, r6, r7, fp, pc}
   38080:	ldr	r1, [sp, #4]
   38084:	mov	r0, r6
   38088:	bl	2ddc4 <flatcc_builder_end_buffer@@Base>
   3808c:	cmp	r0, #0
   38090:	mvn	r0, #0
   38094:	movne	r0, #0
   38098:	strne	r4, [r5, #36]	; 0x24
   3809c:	sub	sp, fp, #16
   380a0:	pop	{r4, r5, r6, r7, fp, pc}
   380a4:	andeq	r0, r0, r0

000380a8 <flatcc_json_printer_error_string@@Base>:
   380a8:	cmp	r0, #3
   380ac:	bhi	380c0 <flatcc_json_printer_error_string@@Base+0x18>
   380b0:	ldr	r1, [pc, #20]	; 380cc <flatcc_json_printer_error_string@@Base+0x24>
   380b4:	add	r1, pc, r1
   380b8:	ldr	r0, [r1, r0, lsl #2]
   380bc:	bx	lr
   380c0:	ldr	r0, [pc, #8]	; 380d0 <flatcc_json_printer_error_string@@Base+0x28>
   380c4:	add	r0, pc, r0
   380c8:	bx	lr
   380cc:	andeq	r3, r2, r4, asr #28
   380d0:	andeq	r1, r1, r9, asr pc

000380d4 <flatcc_json_printer_fmt_float@@Base>:
   380d4:	vcvt.f64.f32	d0, s0
   380d8:	b	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   380dc:	nop	{0}
   380e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   380e4:	add	fp, sp, #28
   380e8:	sub	sp, sp, #92	; 0x5c
   380ec:	cmp	r0, #0
   380f0:	beq	38f64 <flatcc_json_printer_fmt_float@@Base+0xe90>
   380f4:	vmov	r3, r2, d0
   380f8:	mov	ip, r0
   380fc:	mov	r0, #-2147483648	; 0x80000000
   38100:	mov	r6, #0
   38104:	orr	r1, r0, #266338304	; 0xfe00000
   38108:	orr	r1, r1, #1879048192	; 0x70000000
   3810c:	lsl	r7, r2, #1
   38110:	subs	r6, r6, r3, lsl #1
   38114:	orr	r7, r7, r3, lsr #31
   38118:	sbcs	r1, r1, r7
   3811c:	bcs	38138 <flatcc_json_printer_fmt_float@@Base+0x64>
   38120:	ldr	r1, [pc, #3796]	; 38ffc <flatcc_json_printer_fmt_float@@Base+0xf28>
   38124:	mov	r0, ip
   38128:	add	r1, pc, r1
   3812c:	sub	sp, fp, #28
   38130:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38134:	b	14f20 <sprintf@plt>
   38138:	cmn	r2, #1
   3813c:	ble	38148 <flatcc_json_printer_fmt_float@@Base+0x74>
   38140:	mov	r5, ip
   38144:	b	3815c <flatcc_json_printer_fmt_float@@Base+0x88>
   38148:	vneg.f64	d0, d0
   3814c:	mov	r1, #45	; 0x2d
   38150:	mov	r5, ip
   38154:	eor	r2, r2, r0
   38158:	strb	r1, [r5], #1
   3815c:	movw	r0, #0
   38160:	movt	r0, #32752	; 0x7ff0
   38164:	eor	r1, r2, r0
   38168:	orrs	r1, r3, r1
   3816c:	beq	3818c <flatcc_json_printer_fmt_float@@Base+0xb8>
   38170:	orrs	r1, r3, r2
   38174:	bne	381a4 <flatcc_json_printer_fmt_float@@Base+0xd0>
   38178:	mov	r0, #48	; 0x30
   3817c:	strh	r0, [r5], -ip
   38180:	add	r0, r5, #1
   38184:	sub	sp, fp, #28
   38188:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3818c:	movw	r0, #28265	; 0x6e69
   38190:	movt	r0, #102	; 0x66
   38194:	str	r0, [r5], -ip
   38198:	add	r0, r5, #3
   3819c:	sub	sp, fp, #28
   381a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   381a4:	vmov	lr, r9, d0
   381a8:	str	r5, [fp, #-32]	; 0xffffffe0
   381ac:	ands	r1, r9, r0
   381b0:	bfc	r9, #20, #12
   381b4:	str	r1, [fp, #-40]	; 0xffffffd8
   381b8:	beq	381d0 <flatcc_json_printer_fmt_float@@Base+0xfc>
   381bc:	movw	r0, #64461	; 0xfbcd
   381c0:	orr	r4, r9, #1048576	; 0x100000
   381c4:	movt	r0, #65535	; 0xffff
   381c8:	add	r3, r0, r1, lsr #20
   381cc:	b	381e4 <flatcc_json_printer_fmt_float@@Base+0x110>
   381d0:	orrs	r0, lr, r9
   381d4:	beq	38fc4 <flatcc_json_printer_fmt_float@@Base+0xef0>
   381d8:	movw	r3, #64462	; 0xfbce
   381dc:	mov	r4, r9
   381e0:	movt	r3, #65535	; 0xffff
   381e4:	mov	r0, lr
   381e8:	mov	r2, r4
   381ec:	mov	r7, r3
   381f0:	lsl	r1, r2, #10
   381f4:	sub	r7, r7, #10
   381f8:	orr	r2, r1, r0, lsr #22
   381fc:	lsl	r0, r0, #10
   38200:	cmp	r2, #4194304	; 0x400000
   38204:	bcc	381f0 <flatcc_json_printer_fmt_float@@Base+0x11c>
   38208:	mvn	r5, #0
   3820c:	cmp	r2, #0
   38210:	bmi	38238 <flatcc_json_printer_fmt_float@@Base+0x164>
   38214:	lsl	r1, r2, #1
   38218:	sub	r7, r7, #1
   3821c:	orr	r2, r1, r0, lsr #31
   38220:	lsl	r1, r0, #1
   38224:	subs	r0, r5, r0, lsl #1
   38228:	sbcs	r0, r5, r2
   3822c:	mov	r0, r1
   38230:	blt	38214 <flatcc_json_printer_fmt_float@@Base+0x140>
   38234:	b	3823c <flatcc_json_printer_fmt_float@@Base+0x168>
   38238:	mov	r1, r0
   3823c:	lsl	r6, r4, #1
   38240:	mov	r0, #1
   38244:	sub	sl, r3, #1
   38248:	str	r4, [fp, #-44]	; 0xffffffd4
   3824c:	str	r3, [fp, #-36]	; 0xffffffdc
   38250:	orr	r8, r6, lr, lsr #31
   38254:	mov	r6, #0
   38258:	orr	r0, r0, lr, lsl #1
   3825c:	cmp	r6, r8, lsr #22
   38260:	bne	38288 <flatcc_json_printer_fmt_float@@Base+0x1b4>
   38264:	mov	r6, r8
   38268:	mov	r4, sl
   3826c:	lsl	r3, r6, #10
   38270:	sub	r4, r4, #10
   38274:	orr	r6, r3, r0, lsr #22
   38278:	lsl	r0, r0, #10
   3827c:	cmp	r6, #4194304	; 0x400000
   38280:	bcc	3826c <flatcc_json_printer_fmt_float@@Base+0x198>
   38284:	b	38290 <flatcc_json_printer_fmt_float@@Base+0x1bc>
   38288:	mov	r4, sl
   3828c:	mov	r6, r8
   38290:	subs	r3, r5, r0
   38294:	str	ip, [sp, #44]	; 0x2c
   38298:	sbcs	r3, r5, r6
   3829c:	bge	382c4 <flatcc_json_printer_fmt_float@@Base+0x1f0>
   382a0:	lsl	r3, r6, #1
   382a4:	lsl	ip, r0, #1
   382a8:	sub	r4, r4, #1
   382ac:	orr	r6, r3, r0, lsr #31
   382b0:	subs	r0, r5, r0, lsl #1
   382b4:	sbcs	r0, r5, r6
   382b8:	mov	r0, ip
   382bc:	blt	382a0 <flatcc_json_printer_fmt_float@@Base+0x1cc>
   382c0:	b	382c8 <flatcc_json_printer_fmt_float@@Base+0x1f4>
   382c4:	mov	ip, r0
   382c8:	vcmpe.f64	d0, #0.0
   382cc:	vmrs	APSR_nzcv, fpscr
   382d0:	ble	38fa4 <flatcc_json_printer_fmt_float@@Base+0xed0>
   382d4:	vldr	d16, [pc, #748]	; 385c8 <flatcc_json_printer_fmt_float@@Base+0x4f4>
   382d8:	vcmpe.f64	d0, d16
   382dc:	vmrs	APSR_nzcv, fpscr
   382e0:	bhi	38fa4 <flatcc_json_printer_fmt_float@@Base+0xed0>
   382e4:	ldr	r5, [fp, #-40]	; 0xffffffd8
   382e8:	orrs	r3, lr, r9
   382ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   382f0:	vldr	d16, [pc, #728]	; 385d0 <flatcc_json_printer_fmt_float@@Base+0x4fc>
   382f4:	movwne	r3, #1
   382f8:	clz	r5, r5
   382fc:	lsl	r0, r0, #2
   38300:	lsr	r5, r5, #5
   38304:	orrs	r3, r3, r5
   38308:	mvn	r5, #60	; 0x3c
   3830c:	sub	r5, r5, r7
   38310:	orreq	r8, r0, lr, lsr #30
   38314:	lsl	r0, lr, #2
   38318:	lslne	r0, lr, #1
   3831c:	vmov	s2, r5
   38320:	subs	r5, r0, #1
   38324:	sbc	lr, r8, #0
   38328:	cmp	r3, #0
   3832c:	vcvt.f64.s32	d17, s2
   38330:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38334:	subeq	sl, r0, #2
   38338:	vmul.f64	d16, d17, d16
   3833c:	sub	r3, sl, r4
   38340:	rsb	r0, r3, #32
   38344:	lsl	sl, r5, r3
   38348:	lsr	r0, r5, r0
   3834c:	orr	r0, r0, lr, lsl r3
   38350:	subs	lr, r3, #32
   38354:	lslpl	r0, r5, lr
   38358:	movwpl	sl, #0
   3835c:	vcvt.s32.f64	s2, d16
   38360:	vcmpe.f64	d16, #0.0
   38364:	str	r0, [fp, #-36]	; 0xffffffdc
   38368:	vmrs	APSR_nzcv, fpscr
   3836c:	vmov	r5, s2
   38370:	bmi	38388 <flatcc_json_printer_fmt_float@@Base+0x2b4>
   38374:	vcvt.f64.s32	d17, s2
   38378:	vsub.f64	d16, d16, d17
   3837c:	vcmp.f64	d16, #0.0
   38380:	vmrs	APSR_nzcv, fpscr
   38384:	addne	r5, r5, #1
   38388:	movw	r0, #347	; 0x15b
   3838c:	bic	r1, r1, #1
   38390:	add	r0, r5, r0
   38394:	asr	r5, r0, #31
   38398:	add	r0, r0, r5, lsr #29
   3839c:	mvn	r5, #14
   383a0:	and	r0, r5, r0, lsl #1
   383a4:	ldr	r5, [pc, #3128]	; 38fe4 <flatcc_json_printer_fmt_float@@Base+0xf10>
   383a8:	add	r5, pc, r5
   383ac:	add	r0, r0, r5
   383b0:	ldrd	r8, [r0, #16]
   383b4:	str	r0, [sp, #48]	; 0x30
   383b8:	umull	r0, r5, r9, ip
   383bc:	str	r0, [fp, #-40]	; 0xffffffd8
   383c0:	umull	r0, lr, r8, r6
   383c4:	umaal	lr, r5, r9, r6
   383c8:	umull	r6, r3, r8, ip
   383cc:	ldr	r6, [fp, #-40]	; 0xffffffd8
   383d0:	adds	r0, r0, r3
   383d4:	mov	r3, #0
   383d8:	adc	r3, r3, #0
   383dc:	adds	r0, r0, r6
   383e0:	adc	r3, r3, #0
   383e4:	adds	r0, r0, #-2147483648	; 0x80000000
   383e8:	adcs	r0, lr, r3
   383ec:	adc	r3, r5, #0
   383f0:	adds	r0, r0, #1
   383f4:	str	r0, [sp, #52]	; 0x34
   383f8:	adc	ip, r3, #0
   383fc:	umull	r0, r3, r9, sl
   38400:	str	r0, [fp, #-40]	; 0xffffffd8
   38404:	ldr	r0, [fp, #-36]	; 0xffffffdc
   38408:	umull	lr, r5, r8, r0
   3840c:	umaal	r5, r3, r9, r0
   38410:	umull	r0, r6, r8, sl
   38414:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38418:	adds	sl, lr, r6
   3841c:	mov	r6, #0
   38420:	mov	lr, ip
   38424:	adc	r6, r6, #0
   38428:	adds	r0, sl, r0
   3842c:	adc	r6, r6, #0
   38430:	adds	r0, r0, #-2147483648	; 0x80000000
   38434:	adcs	r0, r5, r6
   38438:	umull	r6, r5, r9, r1
   3843c:	adc	r3, r3, #0
   38440:	subs	ip, r0, #1
   38444:	sbc	sl, r3, #0
   38448:	umull	r0, r3, r8, r2
   3844c:	umaal	r3, r5, r9, r2
   38450:	umull	r1, r2, r8, r1
   38454:	mov	r1, #0
   38458:	ldr	r8, [sp, #52]	; 0x34
   3845c:	str	r1, [sp, #56]	; 0x38
   38460:	mov	r1, #0
   38464:	adds	r0, r0, r2
   38468:	bic	r2, r6, #1
   3846c:	adc	r1, r1, #0
   38470:	adds	r0, r0, r2
   38474:	adc	r1, r1, #0
   38478:	adds	r0, r0, #-2147483648	; 0x80000000
   3847c:	adcs	r0, r3, r1
   38480:	str	r0, [sp, #32]
   38484:	adc	r0, r5, #0
   38488:	subs	r9, r8, ip
   3848c:	str	r0, [sp, #36]	; 0x24
   38490:	sbcs	r0, lr, sl
   38494:	str	r0, [fp, #-36]	; 0xffffffdc
   38498:	bcc	38f84 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   3849c:	ldr	r0, [sp, #48]	; 0x30
   384a0:	ldrsh	r0, [r0, #24]
   384a4:	add	r0, r0, #64	; 0x40
   384a8:	add	r1, r0, r4
   384ac:	add	r2, r0, r7
   384b0:	movw	r7, #1233	; 0x4d1
   384b4:	str	r1, [sp, #28]
   384b8:	mvn	r1, #31
   384bc:	str	r2, [sp, #24]
   384c0:	rsb	ip, r2, #0
   384c4:	add	r3, r2, #32
   384c8:	subs	r5, r1, r2
   384cc:	movw	r1, #14609	; 0x3911
   384d0:	lsr	r0, r8, ip
   384d4:	movt	r1, #1
   384d8:	orr	r0, r0, lr, lsl r3
   384dc:	lsrpl	r0, lr, r5
   384e0:	mla	r6, r2, r7, r1
   384e4:	mov	r1, #1
   384e8:	mov	r2, #1
   384ec:	lsr	r3, r2, r3
   384f0:	add	r4, r1, r6, asr #12
   384f4:	ldr	r1, [pc, #2796]	; 38fe8 <flatcc_json_printer_fmt_float@@Base+0xf14>
   384f8:	add	r1, pc, r1
   384fc:	ldr	r7, [r1, r4, lsl #2]
   38500:	cmp	r7, r0
   38504:	lsl	r7, r2, ip
   38508:	asrhi	r4, r6, #12
   3850c:	cmp	r5, #0
   38510:	movwpl	r7, #0
   38514:	lslpl	r3, r2, r5
   38518:	subs	r5, r7, #1
   3851c:	str	r7, [sp, #60]	; 0x3c
   38520:	sbc	r6, r3, #0
   38524:	and	r8, r8, r5
   38528:	cmp	r4, #0
   3852c:	str	r3, [sp, #20]
   38530:	str	lr, [sp, #40]	; 0x28
   38534:	str	ip, [fp, #-40]	; 0xffffffd8
   38538:	str	r5, [fp, #-44]	; 0xffffffd4
   3853c:	and	r2, lr, r6
   38540:	str	r6, [fp, #-48]	; 0xffffffd0
   38544:	ble	385c0 <flatcc_json_printer_fmt_float@@Base+0x4ec>
   38548:	ldr	sl, [r1, r4, lsl #2]
   3854c:	sub	r1, r4, #1
   38550:	mov	lr, #0
   38554:	str	r1, [fp, #-52]	; 0xffffffcc
   38558:	udiv	r1, r0, sl
   3855c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38560:	subs	r4, ip, #32
   38564:	mls	r0, r1, sl, r0
   38568:	add	r6, r1, #48	; 0x30
   3856c:	rsb	r1, ip, #32
   38570:	strb	r6, [r3, lr]
   38574:	lsr	r3, r0, r1
   38578:	lsl	r7, r0, ip
   3857c:	lslpl	r3, r0, r4
   38580:	movwpl	r7, #0
   38584:	adds	r7, r7, r8
   38588:	adc	r3, r3, r2
   3858c:	subs	r5, r7, r9
   38590:	ldr	r5, [fp, #-36]	; 0xffffffdc
   38594:	sbcs	r5, r3, r5
   38598:	bcc	385d8 <flatcc_json_printer_fmt_float@@Base+0x504>
   3859c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   385a0:	cmp	r1, lr
   385a4:	beq	38724 <flatcc_json_printer_fmt_float@@Base+0x650>
   385a8:	movw	r1, #52429	; 0xcccd
   385ac:	add	lr, lr, #1
   385b0:	movt	r1, #52428	; 0xcccc
   385b4:	umull	r1, r3, sl, r1
   385b8:	lsr	sl, r3, #3
   385bc:	b	38558 <flatcc_json_printer_fmt_float@@Base+0x484>
   385c0:	mov	r1, r2
   385c4:	b	38738 <flatcc_json_printer_fmt_float@@Base+0x664>
   385c8:			; <UNDEFINED> instruction: 0xffffffff
   385cc:	svcvc	0x00efffff
   385d0:			; <UNDEFINED> instruction: 0x509f79fe
   385d4:	svccc	0x00d34413
   385d8:	str	lr, [fp, #-44]	; 0xffffffd4
   385dc:	ldr	r8, [sp, #52]	; 0x34
   385e0:	ldr	r0, [sp, #32]
   385e4:	subs	r2, r8, r0
   385e8:	str	r2, [sp, #60]	; 0x3c
   385ec:	ldr	lr, [sp, #40]	; 0x28
   385f0:	ldr	r5, [sp, #36]	; 0x24
   385f4:	sbc	r2, lr, r5
   385f8:	str	r2, [sp, #56]	; 0x38
   385fc:	ldr	r2, [sp, #28]
   38600:	ldr	ip, [sp, #24]
   38604:	cmp	r2, ip
   38608:	bne	38f84 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   3860c:	subs	r0, r8, r0
   38610:	sbcs	r0, lr, r5
   38614:	bcc	38f84 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   38618:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3861c:	lsr	lr, sl, r1
   38620:	ldr	r1, [fp, #-40]	; 0xffffffd8
   38624:	subs	r0, r9, r7
   38628:	sbc	r2, r5, r3
   3862c:	cmp	r4, #0
   38630:	lsl	r8, sl, r1
   38634:	mov	r1, #0
   38638:	lslpl	lr, sl, r4
   3863c:	movwpl	r8, #0
   38640:	str	r2, [fp, #-40]	; 0xffffffd8
   38644:	subs	r5, r0, r8
   38648:	sbcs	r5, r2, lr
   3864c:	ldr	r5, [sp, #60]	; 0x3c
   38650:	movwcc	r1, #1
   38654:	adds	r2, r5, #1
   38658:	str	r2, [fp, #-48]	; 0xffffffd0
   3865c:	ldr	r4, [sp, #56]	; 0x38
   38660:	adc	r2, r4, #0
   38664:	subs	sl, r5, #1
   38668:	sbc	ip, r4, #0
   3866c:	subs	r4, r7, sl
   38670:	str	r2, [fp, #-56]	; 0xffffffc8
   38674:	sbcs	r4, r3, ip
   38678:	bcs	38a18 <flatcc_json_printer_fmt_float@@Base+0x944>
   3867c:	subs	r0, r0, r8
   38680:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38684:	sbcs	r0, r0, lr
   38688:	bcc	38a18 <flatcc_json_printer_fmt_float@@Base+0x944>
   3868c:	adds	r0, r7, r8
   38690:	adc	r4, r3, lr
   38694:	subs	r1, r0, sl
   38698:	sbcs	r1, r4, ip
   3869c:	bcc	386d4 <flatcc_json_printer_fmt_float@@Base+0x600>
   386a0:	subs	r1, r0, sl
   386a4:	mov	r5, lr
   386a8:	mov	lr, r8
   386ac:	sbc	r2, r4, ip
   386b0:	str	r2, [fp, #-40]	; 0xffffffd8
   386b4:	subs	r2, sl, r7
   386b8:	sbc	r8, ip, r3
   386bc:	subs	r1, r2, r1
   386c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   386c4:	sbcs	r1, r8, r1
   386c8:	mov	r8, lr
   386cc:	mov	lr, r5
   386d0:	bcc	38a14 <flatcc_json_printer_fmt_float@@Base+0x940>
   386d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   386d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   386dc:	sub	r6, r6, #1
   386e0:	subs	r3, r9, r0
   386e4:	strb	r6, [r2, r1]
   386e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   386ec:	sbc	r7, r1, r4
   386f0:	subs	r1, r3, r8
   386f4:	sbcs	r1, r7, lr
   386f8:	mov	r1, #0
   386fc:	movwcc	r1, #1
   38700:	subs	r5, r0, sl
   38704:	sbcs	r5, r4, ip
   38708:	bcs	38a20 <flatcc_json_printer_fmt_float@@Base+0x94c>
   3870c:	subs	r3, r3, r8
   38710:	sbcs	r3, r7, lr
   38714:	mov	r7, r0
   38718:	mov	r3, r4
   3871c:	bcs	3868c <flatcc_json_printer_fmt_float@@Base+0x5b8>
   38720:	b	38a20 <flatcc_json_printer_fmt_float@@Base+0x94c>
   38724:	ldr	r0, [fp, #-52]	; 0xffffffcc
   38728:	mov	r1, r2
   3872c:	sub	r4, r0, lr
   38730:	add	r0, lr, #1
   38734:	str	r0, [sp, #56]	; 0x38
   38738:	rsb	r0, ip, #32
   3873c:	mov	r3, r1
   38740:	mov	r5, #0
   38744:	mov	r1, r8
   38748:	str	r0, [fp, #-52]	; 0xffffffcc
   3874c:	sub	r0, ip, #32
   38750:	mov	ip, #1
   38754:	str	r0, [fp, #-56]	; 0xffffffc8
   38758:	mov	r0, r9
   3875c:	ldr	lr, [sp, #56]	; 0x38
   38760:	ldr	r6, [fp, #-36]	; 0xffffffdc
   38764:	mov	r2, #10
   38768:	mov	sl, r5
   3876c:	mov	r8, ip
   38770:	add	r6, r6, r6, lsl #2
   38774:	umull	r2, r7, r1, r2
   38778:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3877c:	add	r9, sl, sl, lsl #2
   38780:	lsr	r5, r2, r1
   38784:	mov	r1, r4
   38788:	add	r4, r3, r3, lsl #2
   3878c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38790:	add	r4, r7, r4, lsl #1
   38794:	orr	r7, r5, r4, lsl r3
   38798:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3879c:	cmp	r3, #0
   387a0:	lsrpl	r7, r4, r3
   387a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   387a8:	add	r7, r7, #48	; 0x30
   387ac:	strb	r7, [r3, lr]
   387b0:	mov	r3, #10
   387b4:	add	lr, lr, #1
   387b8:	umull	ip, r5, ip, r3
   387bc:	umull	r0, r3, r0, r3
   387c0:	add	r6, r3, r6, lsl #1
   387c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   387c8:	add	r5, r5, r9, lsl #1
   387cc:	and	r3, r4, r3
   387d0:	mov	r4, r1
   387d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   387d8:	sub	r4, r4, #1
   387dc:	and	r1, r2, r1
   387e0:	subs	r2, r1, r0
   387e4:	sbcs	r2, r3, r6
   387e8:	bcs	38764 <flatcc_json_printer_fmt_float@@Base+0x690>
   387ec:	str	r1, [fp, #-52]	; 0xffffffcc
   387f0:	str	r3, [sp, #16]
   387f4:	str	r9, [sp, #12]
   387f8:	str	r8, [fp, #-56]	; 0xffffffc8
   387fc:	stmib	sp, {r4, sl}
   38800:	str	r0, [fp, #-40]	; 0xffffffd8
   38804:	str	lr, [sp, #56]	; 0x38
   38808:	ldr	r0, [sp, #28]
   3880c:	ldr	r1, [sp, #24]
   38810:	ldr	r2, [sp, #52]	; 0x34
   38814:	ldr	r3, [sp, #36]	; 0x24
   38818:	ldr	r4, [sp, #32]
   3881c:	cmp	r0, r1
   38820:	ldr	r0, [sp, #40]	; 0x28
   38824:	bne	38f84 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   38828:	subs	r1, r2, r4
   3882c:	sbcs	r1, r0, r3
   38830:	bcc	38f84 <flatcc_json_printer_fmt_float@@Base+0xeb0>
   38834:	subs	r1, r2, r4
   38838:	sbc	r2, r0, r3
   3883c:	umull	r3, r4, ip, r1
   38840:	mla	r2, ip, r2, r4
   38844:	mla	r1, r5, r1, r2
   38848:	adds	r8, r3, ip
   3884c:	adc	r0, r1, r5
   38850:	subs	r4, r3, ip
   38854:	mov	ip, #0
   38858:	str	r0, [sp, #52]	; 0x34
   3885c:	sbc	r3, r1, r5
   38860:	ldr	r0, [fp, #-40]	; 0xffffffd8
   38864:	ldr	r9, [fp, #-52]	; 0xffffffcc
   38868:	ldr	sl, [sp, #16]
   3886c:	ldr	lr, [sp, #20]
   38870:	subs	r1, r0, r9
   38874:	ldr	r0, [sp, #60]	; 0x3c
   38878:	str	r6, [fp, #-36]	; 0xffffffdc
   3887c:	str	r8, [sp, #40]	; 0x28
   38880:	sbc	r2, r6, sl
   38884:	subs	r1, r1, r0
   38888:	sbcs	r1, r2, lr
   3888c:	movwcc	ip, #1
   38890:	cmp	ip, #0
   38894:	bne	3895c <flatcc_json_printer_fmt_float@@Base+0x888>
   38898:	subs	r1, r9, r4
   3889c:	sbcs	r1, sl, r3
   388a0:	bcs	3894c <flatcc_json_printer_fmt_float@@Base+0x878>
   388a4:	str	r4, [fp, #-44]	; 0xffffffd4
   388a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   388ac:	ldr	r2, [sp, #56]	; 0x38
   388b0:	add	r1, r1, r2
   388b4:	str	r1, [fp, #-48]	; 0xffffffd0
   388b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   388bc:	ldr	r8, [fp, #-44]	; 0xffffffd4
   388c0:	adds	r9, r1, r0
   388c4:	mov	r4, r1
   388c8:	adc	r2, sl, lr
   388cc:	subs	r1, r9, r8
   388d0:	sbcs	r1, r2, r3
   388d4:	bcc	388f8 <flatcc_json_printer_fmt_float@@Base+0x824>
   388d8:	subs	r1, r9, r8
   388dc:	sbc	ip, r2, r3
   388e0:	subs	r5, r8, r4
   388e4:	sbc	r6, r3, sl
   388e8:	subs	r1, r5, r1
   388ec:	sbcs	r1, r6, ip
   388f0:	ldr	r6, [fp, #-36]	; 0xffffffdc
   388f4:	bcc	38954 <flatcc_json_printer_fmt_float@@Base+0x880>
   388f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   388fc:	sub	r7, r7, #1
   38900:	mov	ip, #0
   38904:	strb	r7, [r0, #-1]
   38908:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3890c:	subs	r5, r0, r9
   38910:	ldr	r0, [sp, #60]	; 0x3c
   38914:	sbc	r1, r6, r2
   38918:	subs	r6, r5, r0
   3891c:	sbcs	r6, r1, lr
   38920:	movwcc	ip, #1
   38924:	subs	r4, r9, r8
   38928:	sbcs	r4, r2, r3
   3892c:	bcs	38960 <flatcc_json_printer_fmt_float@@Base+0x88c>
   38930:	ldr	r6, [fp, #-36]	; 0xffffffdc
   38934:	subs	r4, r5, r0
   38938:	mov	sl, r2
   3893c:	sbcs	r1, r1, lr
   38940:	mov	r1, r9
   38944:	bcs	388c0 <flatcc_json_printer_fmt_float@@Base+0x7ec>
   38948:	b	38960 <flatcc_json_printer_fmt_float@@Base+0x88c>
   3894c:	ldr	r9, [fp, #-52]	; 0xffffffcc
   38950:	b	3895c <flatcc_json_printer_fmt_float@@Base+0x888>
   38954:	mov	ip, #0
   38958:	mov	r9, r4
   3895c:	mov	r2, sl
   38960:	ldr	r5, [sp, #40]	; 0x28
   38964:	ldr	r3, [sp, #52]	; 0x34
   38968:	ldr	r4, [fp, #-56]	; 0xffffffc8
   3896c:	subs	r1, r9, r5
   38970:	sbcs	r1, r2, r3
   38974:	bcs	389b0 <flatcc_json_printer_fmt_float@@Base+0x8dc>
   38978:	cmp	ip, #0
   3897c:	bne	389b0 <flatcc_json_printer_fmt_float@@Base+0x8dc>
   38980:	adds	r1, r9, r0
   38984:	adc	r7, r2, lr
   38988:	subs	r6, r1, r5
   3898c:	sbcs	r6, r7, r3
   38990:	bcc	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   38994:	subs	r6, r5, r9
   38998:	sbc	r0, r3, r2
   3899c:	subs	r1, r1, r5
   389a0:	sbc	r7, r7, r3
   389a4:	subs	r1, r1, r6
   389a8:	sbcs	r1, r7, r0
   389ac:	bcc	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   389b0:	mov	r1, #20
   389b4:	ldr	r0, [sp, #12]
   389b8:	umull	r1, r7, r4, r1
   389bc:	add	r7, r7, r0, lsl #2
   389c0:	subs	r1, r9, r1
   389c4:	sbcs	r1, r2, r7
   389c8:	bcc	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   389cc:	mvn	r5, #0
   389d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   389d4:	subs	r1, r5, #39	; 0x27
   389d8:	umull	r7, r6, r4, r1
   389dc:	sbc	r5, r5, #0
   389e0:	mla	r0, r4, r5, r6
   389e4:	ldr	r6, [sp, #8]
   389e8:	mla	r0, r6, r1, r0
   389ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   389f0:	adds	r1, r7, r1
   389f4:	adc	r0, r0, r3
   389f8:	subs	r1, r1, r9
   389fc:	sbcs	r0, r0, r2
   38a00:	bcc	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   38a04:	ldr	r4, [sp, #56]	; 0x38
   38a08:	ldr	r5, [sp, #4]
   38a0c:	sub	r2, r4, #1
   38a10:	b	38adc <flatcc_json_printer_fmt_float@@Base+0xa08>
   38a14:	mov	r1, #0
   38a18:	mov	r0, r7
   38a1c:	mov	r4, r3
   38a20:	ldr	r6, [fp, #-48]	; 0xffffffd0
   38a24:	ldr	r5, [fp, #-56]	; 0xffffffc8
   38a28:	subs	r3, r0, r6
   38a2c:	sbcs	r3, r4, r5
   38a30:	bcs	38a7c <flatcc_json_printer_fmt_float@@Base+0x9a8>
   38a34:	cmp	r1, #0
   38a38:	bne	38a7c <flatcc_json_printer_fmt_float@@Base+0x9a8>
   38a3c:	adds	r1, r0, r8
   38a40:	adc	r3, r4, lr
   38a44:	subs	r7, r1, r6
   38a48:	sbcs	r7, r3, r5
   38a4c:	bcc	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   38a50:	subs	r1, r1, r6
   38a54:	sbc	r3, r3, r5
   38a58:	subs	r7, r6, r0
   38a5c:	sbc	r6, r5, r4
   38a60:	subs	r5, r0, #2
   38a64:	sbcs	r5, r4, #0
   38a68:	bcc	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   38a6c:	subs	r1, r1, r7
   38a70:	sbcs	r1, r3, r6
   38a74:	bcs	38a88 <flatcc_json_printer_fmt_float@@Base+0x9b4>
   38a78:	b	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   38a7c:	subs	r1, r0, #2
   38a80:	sbcs	r1, r4, #0
   38a84:	bcc	38aa0 <flatcc_json_printer_fmt_float@@Base+0x9cc>
   38a88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38a8c:	subs	r1, r9, #4
   38a90:	sbc	r2, r2, #0
   38a94:	subs	r0, r1, r0
   38a98:	sbcs	r0, r2, r4
   38a9c:	bcs	38acc <flatcc_json_printer_fmt_float@@Base+0x9f8>
   38aa0:	ldr	r1, [pc, #1348]	; 38fec <flatcc_json_printer_fmt_float@@Base+0xf18>
   38aa4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   38aa8:	vmov	r2, r3, d0
   38aac:	add	r1, pc, r1
   38ab0:	mov	r0, r4
   38ab4:	bl	14f20 <sprintf@plt>
   38ab8:	ldr	r1, [sp, #44]	; 0x2c
   38abc:	sub	r1, r4, r1
   38ac0:	add	r0, r1, r0
   38ac4:	sub	sp, fp, #28
   38ac8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38acc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   38ad0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   38ad4:	sub	r5, r0, r2
   38ad8:	add	r4, r2, #1
   38adc:	ldr	r0, [sp, #48]	; 0x30
   38ae0:	cmp	r4, #3
   38ae4:	ldrsh	r9, [r0, #26]
   38ae8:	sub	r0, r4, #1
   38aec:	movwlt	r0, #1
   38af0:	sub	r8, r5, r9
   38af4:	rsb	r3, r8, #0
   38af8:	cmp	r0, r3
   38afc:	movge	r0, r3
   38b00:	cmn	r8, #1
   38b04:	ble	38b2c <flatcc_json_printer_fmt_float@@Base+0xa58>
   38b08:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38b0c:	cmp	r8, #3
   38b10:	bcc	38be8 <flatcc_json_printer_fmt_float@@Base+0xb14>
   38b14:	add	lr, r4, #1
   38b18:	mov	r0, #101	; 0x65
   38b1c:	add	r9, r1, lr
   38b20:	strb	r0, [r1, r4]
   38b24:	mov	sl, r9
   38b28:	b	38d14 <flatcc_json_printer_fmt_float@@Base+0xc40>
   38b2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38b30:	cmp	r4, r3
   38b34:	bgt	38c14 <flatcc_json_printer_fmt_float@@Base+0xb40>
   38b38:	add	r6, r8, r4
   38b3c:	cmn	r6, #2
   38b40:	blt	38c14 <flatcc_json_printer_fmt_float@@Base+0xb40>
   38b44:	add	r7, r1, #2
   38b48:	mvn	r0, r2
   38b4c:	add	r2, r7, r3
   38b50:	add	r0, r2, r0
   38b54:	mov	r2, r4
   38b58:	bl	14e3c <memmove@plt>
   38b5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38b60:	movw	r0, #11824	; 0x2e30
   38b64:	rsb	r6, r6, #2
   38b68:	cmp	r6, #3
   38b6c:	strh	r0, [r1]
   38b70:	mov	r0, #2
   38b74:	blt	38bdc <flatcc_json_printer_fmt_float@@Base+0xb08>
   38b78:	sub	r0, r9, r5
   38b7c:	mov	r1, #48	; 0x30
   38b80:	sub	r8, r0, r4
   38b84:	mov	r0, r7
   38b88:	mov	r2, r8
   38b8c:	bl	14ee4 <memset@plt>
   38b90:	mvn	r0, r5
   38b94:	mov	r2, r4
   38b98:	add	r0, r0, r9
   38b9c:	sub	r1, r0, r4
   38ba0:	and	r0, r8, #7
   38ba4:	cmp	r1, #7
   38ba8:	bcc	38bc0 <flatcc_json_printer_fmt_float@@Base+0xaec>
   38bac:	add	r1, r5, r2
   38bb0:	add	r1, r1, r0
   38bb4:	sub	r1, r1, r9
   38bb8:	adds	r1, r1, #8
   38bbc:	bne	38bb8 <flatcc_json_printer_fmt_float@@Base+0xae4>
   38bc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38bc4:	cmp	r0, #0
   38bc8:	beq	38bd4 <flatcc_json_printer_fmt_float@@Base+0xb00>
   38bcc:	subs	r0, r0, #1
   38bd0:	bne	38bcc <flatcc_json_printer_fmt_float@@Base+0xaf8>
   38bd4:	mov	r0, r6
   38bd8:	mov	r4, r2
   38bdc:	ldr	ip, [sp, #44]	; 0x2c
   38be0:	add	r4, r0, r4
   38be4:	b	38e5c <flatcc_json_printer_fmt_float@@Base+0xd88>
   38be8:	cmp	r8, #0
   38bec:	beq	38cb4 <flatcc_json_printer_fmt_float@@Base+0xbe0>
   38bf0:	add	r0, r1, r4
   38bf4:	mov	r1, #48	; 0x30
   38bf8:	mov	r2, r8
   38bfc:	bl	14ee4 <memset@plt>
   38c00:	cmp	r8, #4
   38c04:	bcs	38cbc <flatcc_json_printer_fmt_float@@Base+0xbe8>
   38c08:	ldr	ip, [sp, #44]	; 0x2c
   38c0c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38c10:	b	38e4c <flatcc_json_printer_fmt_float@@Base+0xd78>
   38c14:	cmp	r4, #2
   38c18:	blt	38cf8 <flatcc_json_printer_fmt_float@@Base+0xc24>
   38c1c:	ldr	ip, [sp, #44]	; 0x2c
   38c20:	cmp	r0, #1
   38c24:	blt	38c7c <flatcc_json_printer_fmt_float@@Base+0xba8>
   38c28:	and	r7, r0, #1
   38c2c:	mov	r2, #0
   38c30:	beq	38c64 <flatcc_json_printer_fmt_float@@Base+0xb90>
   38c34:	mov	lr, r4
   38c38:	add	r2, r1, r4
   38c3c:	sub	r6, r7, r0
   38c40:	mov	r3, #0
   38c44:	add	r5, r2, r3
   38c48:	sub	r3, r3, #2
   38c4c:	ldrh	r4, [r5, #-2]
   38c50:	cmp	r6, r3
   38c54:	strh	r4, [r5, #-1]
   38c58:	bne	38c44 <flatcc_json_printer_fmt_float@@Base+0xb70>
   38c5c:	rsb	r2, r3, #0
   38c60:	mov	r4, lr
   38c64:	cmp	r7, #0
   38c68:	beq	38c7c <flatcc_json_printer_fmt_float@@Base+0xba8>
   38c6c:	sub	r3, r4, r2
   38c70:	add	r2, r1, r3
   38c74:	ldrb	r2, [r2, #-1]
   38c78:	strb	r2, [r1, r3]
   38c7c:	sub	r3, r4, r0
   38c80:	mov	r2, #46	; 0x2e
   38c84:	adds	r7, r0, r8
   38c88:	add	r0, r4, #1
   38c8c:	strb	r2, [r1, r3]
   38c90:	beq	38e70 <flatcc_json_printer_fmt_float@@Base+0xd9c>
   38c94:	add	lr, r4, #2
   38c98:	mov	r2, #101	; 0x65
   38c9c:	cmn	r7, #1
   38ca0:	add	r8, r1, lr
   38ca4:	strb	r2, [r1, r0]
   38ca8:	ble	38e78 <flatcc_json_printer_fmt_float@@Base+0xda4>
   38cac:	mov	r9, r8
   38cb0:	b	38e88 <flatcc_json_printer_fmt_float@@Base+0xdb4>
   38cb4:	ldr	ip, [sp, #44]	; 0x2c
   38cb8:	b	38e5c <flatcc_json_printer_fmt_float@@Base+0xd88>
   38cbc:	mov	r0, #0
   38cc0:	mov	r1, #1
   38cc4:	vdup.32	q8, r0
   38cc8:	bic	r0, r8, #3
   38ccc:	sub	r3, r0, #4
   38cd0:	add	r2, r1, r3, lsr #2
   38cd4:	cmp	r3, #12
   38cd8:	and	r7, r2, #3
   38cdc:	vmov.32	d16[0], r4
   38ce0:	bcs	38df4 <flatcc_json_printer_fmt_float@@Base+0xd20>
   38ce4:	ldr	ip, [sp, #44]	; 0x2c
   38ce8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38cec:	cmp	r7, #0
   38cf0:	bne	38e18 <flatcc_json_printer_fmt_float@@Base+0xd44>
   38cf4:	b	38e2c <flatcc_json_printer_fmt_float@@Base+0xd58>
   38cf8:	add	lr, r4, #1
   38cfc:	add	r0, r1, r4
   38d00:	movw	r2, #11621	; 0x2d65
   38d04:	mov	r8, r3
   38d08:	add	r9, r1, lr
   38d0c:	strh	r2, [r0]
   38d10:	add	sl, r9, #1
   38d14:	movw	r0, #26215	; 0x6667
   38d18:	mov	r3, sl
   38d1c:	movt	r0, #26214	; 0x6666
   38d20:	smmul	r6, r8, r0
   38d24:	asr	r5, r6, #2
   38d28:	add	r7, r5, r6, lsr #31
   38d2c:	add	r6, r7, r7, lsl #2
   38d30:	sub	r6, r8, r6, lsl #1
   38d34:	add	r6, r6, #48	; 0x30
   38d38:	strb	r6, [r3], #1
   38d3c:	add	r6, r8, #9
   38d40:	mov	r8, r7
   38d44:	cmp	r6, #18
   38d48:	bhi	38d20 <flatcc_json_printer_fmt_float@@Base+0xc4c>
   38d4c:	mov	r5, #0
   38d50:	mov	r8, r3
   38d54:	strb	r5, [r8], -sl
   38d58:	cmp	r8, #2
   38d5c:	blt	38de0 <flatcc_json_printer_fmt_float@@Base+0xd0c>
   38d60:	add	r0, r8, r8, lsr #31
   38d64:	bic	r4, r8, #1
   38d68:	cmp	r4, #2
   38d6c:	asr	r0, r0, #1
   38d70:	and	ip, r0, #1
   38d74:	beq	38dc0 <flatcc_json_printer_fmt_float@@Base+0xcec>
   38d78:	sub	r5, ip, r0
   38d7c:	sub	r4, r3, #2
   38d80:	add	r0, sl, #1
   38d84:	mov	r6, #0
   38d88:	add	r1, r4, r6
   38d8c:	ldrb	r7, [r0, #-1]
   38d90:	ldrb	r2, [r1, #1]
   38d94:	strb	r2, [r0, #-1]
   38d98:	strb	r7, [r1, #1]
   38d9c:	ldrb	r1, [r4, r6]
   38da0:	ldrb	r2, [r0]
   38da4:	strb	r1, [r0]
   38da8:	strb	r2, [r4, r6]
   38dac:	sub	r6, r6, #2
   38db0:	add	r0, r0, #2
   38db4:	cmp	r5, r6
   38db8:	bne	38d88 <flatcc_json_printer_fmt_float@@Base+0xcb4>
   38dbc:	rsb	r5, r6, #0
   38dc0:	cmp	ip, #0
   38dc4:	beq	38de0 <flatcc_json_printer_fmt_float@@Base+0xd0c>
   38dc8:	mvn	r1, r5
   38dcc:	ldrb	r0, [sl, r5]
   38dd0:	add	r1, r8, r1
   38dd4:	ldrb	r2, [sl, r1]
   38dd8:	strb	r2, [sl, r5]
   38ddc:	strb	r0, [sl, r1]
   38de0:	ldr	ip, [sp, #44]	; 0x2c
   38de4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38de8:	sub	r0, lr, r9
   38dec:	add	r4, r0, r3
   38df0:	b	38e5c <flatcc_json_printer_fmt_float@@Base+0xd88>
   38df4:	ldr	ip, [sp, #44]	; 0x2c
   38df8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38dfc:	vmov.i32	q9, #4	; 0x00000004
   38e00:	sub	r2, r7, r2
   38e04:	vadd.i32	q8, q8, q9
   38e08:	adds	r2, r2, #4
   38e0c:	bne	38e04 <flatcc_json_printer_fmt_float@@Base+0xd30>
   38e10:	cmp	r7, #0
   38e14:	beq	38e2c <flatcc_json_printer_fmt_float@@Base+0xd58>
   38e18:	vmov.i32	q9, #1	; 0x00000001
   38e1c:	rsb	r2, r7, #0
   38e20:	vadd.i32	q8, q8, q9
   38e24:	adds	r2, r2, #1
   38e28:	bcc	38e20 <flatcc_json_printer_fmt_float@@Base+0xd4c>
   38e2c:	vext.8	q9, q8, q8, #8
   38e30:	cmp	r8, r0
   38e34:	vadd.i32	q8, q8, q9
   38e38:	vdup.32	q9, d16[1]
   38e3c:	vadd.i32	q8, q8, q9
   38e40:	vmov.32	r4, d16[0]
   38e44:	beq	38e5c <flatcc_json_printer_fmt_float@@Base+0xd88>
   38e48:	sub	r8, r8, r0
   38e4c:	sub	r8, r8, #1
   38e50:	add	r4, r4, #1
   38e54:	cmp	r8, #0
   38e58:	bgt	38e4c <flatcc_json_printer_fmt_float@@Base+0xd78>
   38e5c:	mov	r0, #0
   38e60:	strb	r0, [r1, r4]!
   38e64:	sub	r0, r1, ip
   38e68:	sub	sp, fp, #28
   38e6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38e70:	mov	r4, r0
   38e74:	b	38e5c <flatcc_json_printer_fmt_float@@Base+0xd88>
   38e78:	mov	r0, #45	; 0x2d
   38e7c:	mov	r9, r8
   38e80:	rsb	r7, r7, #0
   38e84:	strb	r0, [r9], #1
   38e88:	movw	r0, #26215	; 0x6667
   38e8c:	mov	r3, r9
   38e90:	movt	r0, #26214	; 0x6666
   38e94:	smmul	r6, r7, r0
   38e98:	asr	r5, r6, #2
   38e9c:	add	r6, r5, r6, lsr #31
   38ea0:	add	r5, r6, r6, lsl #2
   38ea4:	sub	r5, r7, r5, lsl #1
   38ea8:	add	r7, r7, #9
   38eac:	cmp	r7, #18
   38eb0:	mov	r7, r6
   38eb4:	add	r5, r5, #48	; 0x30
   38eb8:	strb	r5, [r3], #1
   38ebc:	bhi	38e94 <flatcc_json_printer_fmt_float@@Base+0xdc0>
   38ec0:	mov	r5, #0
   38ec4:	mov	sl, r3
   38ec8:	strb	r5, [sl], -r9
   38ecc:	cmp	sl, #2
   38ed0:	blt	38f58 <flatcc_json_printer_fmt_float@@Base+0xe84>
   38ed4:	add	r0, sl, sl, lsr #31
   38ed8:	bic	r4, sl, #1
   38edc:	cmp	r4, #2
   38ee0:	asr	r0, r0, #1
   38ee4:	and	ip, r0, #1
   38ee8:	beq	38f34 <flatcc_json_printer_fmt_float@@Base+0xe60>
   38eec:	sub	r5, ip, r0
   38ef0:	sub	r4, r3, #2
   38ef4:	add	r0, r9, #1
   38ef8:	mov	r6, #0
   38efc:	add	r1, r4, r6
   38f00:	ldrb	r7, [r0, #-1]
   38f04:	ldrb	r2, [r1, #1]
   38f08:	strb	r2, [r0, #-1]
   38f0c:	strb	r7, [r1, #1]
   38f10:	ldrb	r1, [r4, r6]
   38f14:	ldrb	r2, [r0]
   38f18:	strb	r1, [r0]
   38f1c:	strb	r2, [r4, r6]
   38f20:	sub	r6, r6, #2
   38f24:	add	r0, r0, #2
   38f28:	cmp	r5, r6
   38f2c:	bne	38efc <flatcc_json_printer_fmt_float@@Base+0xe28>
   38f30:	rsb	r5, r6, #0
   38f34:	cmp	ip, #0
   38f38:	ldr	ip, [sp, #44]	; 0x2c
   38f3c:	beq	38f58 <flatcc_json_printer_fmt_float@@Base+0xe84>
   38f40:	mvn	r1, r5
   38f44:	ldrb	r0, [r9, r5]
   38f48:	add	r1, sl, r1
   38f4c:	ldrb	r2, [r9, r1]
   38f50:	strb	r2, [r9, r5]
   38f54:	strb	r0, [r9, r1]
   38f58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   38f5c:	sub	r0, lr, r8
   38f60:	b	38dec <flatcc_json_printer_fmt_float@@Base+0xd18>
   38f64:	ldr	r0, [pc, #132]	; 38ff0 <flatcc_json_printer_fmt_float@@Base+0xf1c>
   38f68:	ldr	r1, [pc, #132]	; 38ff4 <flatcc_json_printer_fmt_float@@Base+0xf20>
   38f6c:	ldr	r3, [pc, #132]	; 38ff8 <flatcc_json_printer_fmt_float@@Base+0xf24>
   38f70:	mov	r2, #189	; 0xbd
   38f74:	add	r0, pc, r0
   38f78:	add	r1, pc, r1
   38f7c:	add	r3, pc, r3
   38f80:	bl	14f38 <__assert_fail@plt>
   38f84:	ldr	r0, [pc, #128]	; 3900c <flatcc_json_printer_fmt_float@@Base+0xf38>
   38f88:	ldr	r1, [pc, #128]	; 39010 <flatcc_json_printer_fmt_float@@Base+0xf3c>
   38f8c:	ldr	r3, [pc, #128]	; 39014 <flatcc_json_printer_fmt_float@@Base+0xf40>
   38f90:	mov	r2, #239	; 0xef
   38f94:	add	r0, pc, r0
   38f98:	add	r1, pc, r1
   38f9c:	add	r3, pc, r3
   38fa0:	bl	14f38 <__assert_fail@plt>
   38fa4:	ldr	r0, [pc, #84]	; 39000 <flatcc_json_printer_fmt_float@@Base+0xf2c>
   38fa8:	ldr	r1, [pc, #84]	; 39004 <flatcc_json_printer_fmt_float@@Base+0xf30>
   38fac:	ldr	r3, [pc, #84]	; 39008 <flatcc_json_printer_fmt_float@@Base+0xf34>
   38fb0:	mov	r2, #138	; 0x8a
   38fb4:	add	r0, pc, r0
   38fb8:	add	r1, pc, r1
   38fbc:	add	r3, pc, r3
   38fc0:	bl	14f38 <__assert_fail@plt>
   38fc4:	ldr	r0, [pc, #76]	; 39018 <flatcc_json_printer_fmt_float@@Base+0xf44>
   38fc8:	ldr	r1, [pc, #76]	; 3901c <flatcc_json_printer_fmt_float@@Base+0xf48>
   38fcc:	ldr	r3, [pc, #76]	; 39020 <flatcc_json_printer_fmt_float@@Base+0xf4c>
   38fd0:	mov	r2, #260	; 0x104
   38fd4:	add	r0, pc, r0
   38fd8:	add	r1, pc, r1
   38fdc:	add	r3, pc, r3
   38fe0:	bl	14f38 <__assert_fail@plt>
   38fe4:	andeq	r3, r1, r8, ror r0
   38fe8:	muleq	r1, r8, r4
   38fec:	muleq	r1, r0, r6
   38ff0:	andeq	r2, r1, r0, lsr #2
   38ff4:	andeq	r2, r1, r0, lsr #2
   38ff8:	andeq	r2, r1, sl, lsl #3
   38ffc:	andeq	r3, r1, r6
   39000:	andeq	r2, r1, lr, lsl #3
   39004:	andeq	r2, r1, r0, ror #1
   39008:	andeq	r2, r1, fp, lsr #3
   3900c:	strdeq	r2, [r1], -ip
   39010:	andeq	r1, r1, sp, asr #27
   39014:	andeq	r2, r1, sp, lsl #4
   39018:	andeq	r1, r1, r8, lsl #27
   3901c:	andeq	r1, r1, sp, lsl #27
   39020:	strdeq	r1, [r1], -r6

00039024 <flatcc_json_printer_fmt_double@@Base>:
   39024:	b	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>

00039028 <flatcc_json_printer_fmt_bool@@Base>:
   39028:	cmp	r1, #0
   3902c:	movwne	r1, #29300	; 0x7274
   39030:	movtne	r1, #25973	; 0x6575
   39034:	strne	r1, [r0]
   39038:	movne	r0, #4
   3903c:	bxne	lr
   39040:	mov	r1, #101	; 0x65
   39044:	strb	r1, [r0, #4]
   39048:	movw	r1, #24934	; 0x6166
   3904c:	movt	r1, #29548	; 0x736c
   39050:	str	r1, [r0]
   39054:	mov	r0, #5
   39058:	bx	lr

0003905c <flatcc_json_printer_string@@Base>:
   3905c:	b	39060 <flatcc_json_printer_string@@Base+0x4>
   39060:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39064:	add	fp, sp, #28
   39068:	sub	sp, sp, #12
   3906c:	mov	r5, r0
   39070:	mov	r4, r0
   39074:	mov	r6, r1
   39078:	mov	r3, r2
   3907c:	ldr	r0, [r5, #20]!
   39080:	str	r5, [sp, #4]
   39084:	add	r1, r0, #1
   39088:	str	r1, [r5]
   3908c:	mov	r1, #34	; 0x22
   39090:	strb	r1, [r0]
   39094:	b	3911c <flatcc_json_printer_string@@Base+0xc0>
   39098:	ldr	r2, [r5]
   3909c:	mov	r7, #48	; 0x30
   390a0:	cmp	r1, #160	; 0xa0
   390a4:	add	r3, r2, #1
   390a8:	str	r3, [r5]
   390ac:	mov	r3, #117	; 0x75
   390b0:	strb	r3, [r2]
   390b4:	ldr	r2, [r5]
   390b8:	add	r3, r2, #1
   390bc:	str	r3, [r5]
   390c0:	strb	r7, [r2]
   390c4:	ldr	r2, [r5]
   390c8:	add	r3, r2, #1
   390cc:	str	r3, [r5]
   390d0:	strb	r7, [r2]
   390d4:	ldr	r2, [r5]
   390d8:	add	r3, r2, #1
   390dc:	str	r3, [r5]
   390e0:	mov	r3, #87	; 0x57
   390e4:	movwcc	r3, #48	; 0x30
   390e8:	add	r1, r3, r1, lsr #4
   390ec:	mov	r3, #87	; 0x57
   390f0:	strb	r1, [r2]
   390f4:	ldr	r1, [r5]
   390f8:	add	r2, r1, #1
   390fc:	str	r2, [r5]
   39100:	and	r2, sl, #15
   39104:	cmp	r2, #10
   39108:	movwcc	r3, #48	; 0x30
   3910c:	add	r2, r3, r2
   39110:	strb	r2, [r1]
   39114:	sub	r3, r0, #1
   39118:	add	r6, r8, #1
   3911c:	ldrb	sl, [r6]
   39120:	mov	r8, r6
   39124:	cmp	sl, #32
   39128:	bcc	39148 <flatcc_json_printer_string@@Base+0xec>
   3912c:	uxtb	r0, sl
   39130:	cmp	r0, #34	; 0x22
   39134:	cmpne	r0, #92	; 0x5c
   39138:	beq	39148 <flatcc_json_printer_string@@Base+0xec>
   3913c:	ldrb	sl, [r8, #1]!
   39140:	cmp	sl, #31
   39144:	bhi	3912c <flatcc_json_printer_string@@Base+0xd0>
   39148:	ldr	r0, [r4, #20]
   3914c:	ldr	r1, [r4, #16]
   39150:	sub	r9, r8, r6
   39154:	add	r2, r0, r9
   39158:	cmp	r2, r1
   3915c:	bcs	3917c <flatcc_json_printer_string@@Base+0x120>
   39160:	mov	r1, r6
   39164:	mov	r2, r9
   39168:	mov	r6, r3
   3916c:	bl	14e54 <memcpy@plt>
   39170:	mov	r2, r6
   39174:	mov	r7, r9
   39178:	b	39208 <flatcc_json_printer_string@@Base+0x1ac>
   3917c:	cmp	r0, r1
   39180:	str	r3, [sp, #8]
   39184:	bcc	391a0 <flatcc_json_printer_string@@Base+0x144>
   39188:	ldr	r2, [r4, #44]	; 0x2c
   3918c:	mov	r0, r4
   39190:	mov	r1, #0
   39194:	blx	r2
   39198:	ldr	r1, [r4, #16]
   3919c:	ldr	r0, [r4, #20]
   391a0:	sub	r5, r1, r0
   391a4:	mov	r7, r9
   391a8:	cmp	r5, r9
   391ac:	bcs	391f4 <flatcc_json_printer_string@@Base+0x198>
   391b0:	mov	r1, r6
   391b4:	mov	r2, r5
   391b8:	bl	14e54 <memcpy@plt>
   391bc:	ldr	r0, [r4, #20]
   391c0:	ldr	r2, [r4, #44]	; 0x2c
   391c4:	mov	r1, #0
   391c8:	add	r0, r0, r5
   391cc:	str	r0, [r4, #20]
   391d0:	mov	r0, r4
   391d4:	blx	r2
   391d8:	ldr	r1, [r4, #16]
   391dc:	ldr	r0, [r4, #20]
   391e0:	sub	r7, r7, r5
   391e4:	add	r6, r6, r5
   391e8:	sub	r5, r1, r0
   391ec:	cmp	r7, r5
   391f0:	bhi	391b0 <flatcc_json_printer_string@@Base+0x154>
   391f4:	ldr	r5, [sp, #4]
   391f8:	mov	r1, r6
   391fc:	mov	r2, r7
   39200:	bl	14e54 <memcpy@plt>
   39204:	ldr	r2, [sp, #8]
   39208:	ldr	r0, [r5]
   3920c:	add	r1, r0, r7
   39210:	add	r0, r1, #1
   39214:	str	r0, [r5]
   39218:	subs	r0, r2, r9
   3921c:	beq	39348 <flatcc_json_printer_string@@Base+0x2ec>
   39220:	mov	r2, #92	; 0x5c
   39224:	strb	r2, [r1]
   39228:	mvn	r1, #7
   3922c:	uxtab	r2, r1, sl
   39230:	uxtb	r1, sl
   39234:	cmp	r2, #26
   39238:	bhi	392c8 <flatcc_json_printer_string@@Base+0x26c>
   3923c:	add	r3, pc, #4
   39240:	ldr	r2, [r3, r2, lsl #2]
   39244:	add	pc, r3, r2
   39248:	andeq	r0, r0, ip, rrx
   3924c:	muleq	r0, ip, r0
   39250:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   39254:			; <UNDEFINED> instruction: 0xfffffe50
   39258:	andeq	r0, r0, r4, asr #1
   3925c:	ldrdeq	r0, [r0], -r8
   39260:			; <UNDEFINED> instruction: 0xfffffe50
   39264:			; <UNDEFINED> instruction: 0xfffffe50
   39268:			; <UNDEFINED> instruction: 0xfffffe50
   3926c:			; <UNDEFINED> instruction: 0xfffffe50
   39270:			; <UNDEFINED> instruction: 0xfffffe50
   39274:			; <UNDEFINED> instruction: 0xfffffe50
   39278:			; <UNDEFINED> instruction: 0xfffffe50
   3927c:			; <UNDEFINED> instruction: 0xfffffe50
   39280:			; <UNDEFINED> instruction: 0xfffffe50
   39284:			; <UNDEFINED> instruction: 0xfffffe50
   39288:			; <UNDEFINED> instruction: 0xfffffe50
   3928c:			; <UNDEFINED> instruction: 0xfffffe50
   39290:			; <UNDEFINED> instruction: 0xfffffe50
   39294:			; <UNDEFINED> instruction: 0xfffffe50
   39298:			; <UNDEFINED> instruction: 0xfffffe50
   3929c:			; <UNDEFINED> instruction: 0xfffffe50
   392a0:			; <UNDEFINED> instruction: 0xfffffe50
   392a4:			; <UNDEFINED> instruction: 0xfffffe50
   392a8:			; <UNDEFINED> instruction: 0xfffffe50
   392ac:			; <UNDEFINED> instruction: 0xfffffe50
   392b0:	andeq	r0, r0, ip, ror #1
   392b4:	ldr	r1, [r5]
   392b8:	add	r2, r1, #1
   392bc:	str	r2, [r5]
   392c0:	mov	r2, #98	; 0x62
   392c4:	b	39110 <flatcc_json_printer_string@@Base+0xb4>
   392c8:	cmp	r1, #92	; 0x5c
   392cc:	bne	39098 <flatcc_json_printer_string@@Base+0x3c>
   392d0:	ldr	r1, [r5]
   392d4:	add	r2, r1, #1
   392d8:	str	r2, [r5]
   392dc:	mov	r2, #92	; 0x5c
   392e0:	b	39110 <flatcc_json_printer_string@@Base+0xb4>
   392e4:	ldr	r1, [r5]
   392e8:	add	r2, r1, #1
   392ec:	str	r2, [r5]
   392f0:	mov	r2, #116	; 0x74
   392f4:	b	39110 <flatcc_json_printer_string@@Base+0xb4>
   392f8:	ldr	r1, [r5]
   392fc:	add	r2, r1, #1
   39300:	str	r2, [r5]
   39304:	mov	r2, #110	; 0x6e
   39308:	b	39110 <flatcc_json_printer_string@@Base+0xb4>
   3930c:	ldr	r1, [r5]
   39310:	add	r2, r1, #1
   39314:	str	r2, [r5]
   39318:	mov	r2, #102	; 0x66
   3931c:	b	39110 <flatcc_json_printer_string@@Base+0xb4>
   39320:	ldr	r1, [r5]
   39324:	add	r2, r1, #1
   39328:	str	r2, [r5]
   3932c:	mov	r2, #114	; 0x72
   39330:	b	39110 <flatcc_json_printer_string@@Base+0xb4>
   39334:	ldr	r1, [r5]
   39338:	add	r2, r1, #1
   3933c:	str	r2, [r5]
   39340:	mov	r2, #34	; 0x22
   39344:	b	39110 <flatcc_json_printer_string@@Base+0xb4>
   39348:	mov	r0, #34	; 0x22
   3934c:	strb	r0, [r1]
   39350:	sub	sp, fp, #28
   39354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00039358 <flatcc_json_printer_write@@Base>:
   39358:	push	{r4, r5, r6, r7, fp, lr}
   3935c:	add	fp, sp, #16
   39360:	mov	r6, r1
   39364:	mov	r5, r0
   39368:	ldr	r1, [r0, #16]
   3936c:	ldr	r0, [r0, #20]
   39370:	mov	r4, r2
   39374:	add	r2, r0, r2
   39378:	cmp	r2, r1
   3937c:	bcc	393f0 <flatcc_json_printer_write@@Base+0x98>
   39380:	cmp	r0, r1
   39384:	bcc	393a0 <flatcc_json_printer_write@@Base+0x48>
   39388:	ldr	r2, [r5, #44]	; 0x2c
   3938c:	mov	r0, r5
   39390:	mov	r1, #0
   39394:	blx	r2
   39398:	ldr	r1, [r5, #16]
   3939c:	ldr	r0, [r5, #20]
   393a0:	sub	r7, r1, r0
   393a4:	cmp	r7, r4
   393a8:	bcs	393f0 <flatcc_json_printer_write@@Base+0x98>
   393ac:	mov	r1, r6
   393b0:	mov	r2, r7
   393b4:	bl	14e54 <memcpy@plt>
   393b8:	ldr	r0, [r5, #20]
   393bc:	ldr	r2, [r5, #44]	; 0x2c
   393c0:	mov	r1, #0
   393c4:	add	r0, r0, r7
   393c8:	str	r0, [r5, #20]
   393cc:	mov	r0, r5
   393d0:	blx	r2
   393d4:	ldr	r1, [r5, #16]
   393d8:	ldr	r0, [r5, #20]
   393dc:	sub	r4, r4, r7
   393e0:	add	r6, r6, r7
   393e4:	sub	r7, r1, r0
   393e8:	cmp	r4, r7
   393ec:	bhi	393ac <flatcc_json_printer_write@@Base+0x54>
   393f0:	mov	r1, r6
   393f4:	mov	r2, r4
   393f8:	bl	14e54 <memcpy@plt>
   393fc:	ldr	r0, [r5, #20]
   39400:	add	r0, r0, r4
   39404:	str	r0, [r5, #20]
   39408:	pop	{r4, r5, r6, r7, fp, pc}

0003940c <flatcc_json_printer_nl@@Base>:
   3940c:	ldr	r1, [r0, #20]
   39410:	add	r2, r1, #1
   39414:	str	r2, [r0, #20]
   39418:	mov	r2, #10
   3941c:	strb	r2, [r1]
   39420:	ldr	r1, [r0, #16]
   39424:	ldr	r2, [r0, #20]
   39428:	cmp	r2, r1
   3942c:	bxcc	lr
   39430:	ldr	r2, [r0, #44]	; 0x2c
   39434:	mov	r1, #0
   39438:	bx	r2

0003943c <flatcc_json_printer_char@@Base>:
   3943c:	ldr	r2, [r0, #20]
   39440:	add	r3, r2, #1
   39444:	str	r3, [r0, #20]
   39448:	strb	r1, [r2]
   3944c:	bx	lr

00039450 <flatcc_json_printer_indent@@Base>:
   39450:	push	{r4, r5, r6, sl, fp, lr}
   39454:	add	fp, sp, #16
   39458:	mov	r4, r0
   3945c:	ldr	r1, [r0, #16]
   39460:	ldr	r0, [r0, #20]
   39464:	ldrb	r2, [r4, #25]
   39468:	ldr	r3, [r4, #32]
   3946c:	mla	r6, r3, r2, r0
   39470:	mul	r5, r3, r2
   39474:	cmp	r6, r1
   39478:	bls	394e8 <flatcc_json_printer_indent@@Base+0x98>
   3947c:	cmp	r0, r1
   39480:	bcc	3949c <flatcc_json_printer_indent@@Base+0x4c>
   39484:	ldr	r2, [r4, #44]	; 0x2c
   39488:	mov	r0, r4
   3948c:	mov	r1, #0
   39490:	blx	r2
   39494:	ldr	r1, [r4, #16]
   39498:	ldr	r0, [r4, #20]
   3949c:	sub	r6, r1, r0
   394a0:	cmp	r6, r5
   394a4:	bcs	394e8 <flatcc_json_printer_indent@@Base+0x98>
   394a8:	mov	r1, #32
   394ac:	mov	r2, r6
   394b0:	bl	14ee4 <memset@plt>
   394b4:	ldr	r0, [r4, #20]
   394b8:	ldr	r2, [r4, #44]	; 0x2c
   394bc:	mov	r1, #0
   394c0:	add	r0, r0, r6
   394c4:	str	r0, [r4, #20]
   394c8:	mov	r0, r4
   394cc:	blx	r2
   394d0:	ldr	r1, [r4, #16]
   394d4:	ldr	r0, [r4, #20]
   394d8:	sub	r5, r5, r6
   394dc:	sub	r6, r1, r0
   394e0:	cmp	r5, r6
   394e4:	bhi	394a8 <flatcc_json_printer_indent@@Base+0x58>
   394e8:	mov	r1, #32
   394ec:	mov	r2, r5
   394f0:	bl	14ee4 <memset@plt>
   394f4:	ldr	r0, [r4, #20]
   394f8:	add	r0, r0, r5
   394fc:	str	r0, [r4, #20]
   39500:	pop	{r4, r5, r6, sl, fp, pc}

00039504 <flatcc_json_printer_add_level@@Base>:
   39504:	ldr	r2, [r0, #32]
   39508:	add	r1, r2, r1
   3950c:	str	r1, [r0, #32]
   39510:	bx	lr

00039514 <flatcc_json_printer_get_level@@Base>:
   39514:	ldr	r0, [r0, #32]
   39518:	bx	lr

0003951c <flatcc_json_printer_uint8@@Base>:
   3951c:	push	{fp, lr}
   39520:	mov	fp, sp
   39524:	ldr	lr, [r0, #20]
   39528:	cmp	r1, #100	; 0x64
   3952c:	bcc	3957c <flatcc_json_printer_uint8@@Base+0x60>
   39530:	mov	r3, #0
   39534:	strb	r3, [lr, #3]
   39538:	movw	r3, #34079	; 0x851f
   3953c:	movt	r3, #20971	; 0x51eb
   39540:	umull	r3, ip, r1, r3
   39544:	mov	r3, #48	; 0x30
   39548:	orr	r3, r3, ip, lsr #5
   3954c:	lsr	ip, ip, #5
   39550:	strb	r3, [lr]
   39554:	mov	r3, #100	; 0x64
   39558:	mls	r1, ip, r3, r1
   3955c:	ldr	r3, [pc, #128]	; 395e4 <flatcc_json_printer_uint8@@Base+0xc8>
   39560:	uxtb	r1, r1
   39564:	add	r3, pc, r3
   39568:	add	r1, r3, r1, lsl #1
   3956c:	ldrh	r1, [r1]
   39570:	strh	r1, [lr, #1]
   39574:	mov	r1, #3
   39578:	b	395d4 <flatcc_json_printer_uint8@@Base+0xb8>
   3957c:	cmp	r1, #10
   39580:	bcc	395c0 <flatcc_json_printer_uint8@@Base+0xa4>
   39584:	mov	r3, #0
   39588:	strb	r3, [lr, #2]
   3958c:	movw	r3, #34079	; 0x851f
   39590:	movt	r3, #20971	; 0x51eb
   39594:	umull	r3, r2, r1, r3
   39598:	mov	r3, #100	; 0x64
   3959c:	lsr	r2, r2, #5
   395a0:	mls	r1, r2, r3, r1
   395a4:	ldr	r2, [pc, #60]	; 395e8 <flatcc_json_printer_uint8@@Base+0xcc>
   395a8:	add	r2, pc, r2
   395ac:	add	r1, r2, r1, lsl #1
   395b0:	ldrh	r1, [r1]
   395b4:	strh	r1, [lr]
   395b8:	mov	r1, #2
   395bc:	b	395d4 <flatcc_json_printer_uint8@@Base+0xb8>
   395c0:	mov	r2, #0
   395c4:	add	r1, r1, #48	; 0x30
   395c8:	strb	r2, [lr, #1]
   395cc:	strb	r1, [lr]
   395d0:	mov	r1, #1
   395d4:	ldr	r2, [r0, #20]
   395d8:	add	r1, r2, r1
   395dc:	str	r1, [r0, #20]
   395e0:	pop	{fp, pc}
   395e4:	andeq	r1, r1, fp, lsl #25
   395e8:	andeq	r1, r1, r7, asr #24

000395ec <flatcc_json_printer_uint16@@Base>:
   395ec:	push	{r4, sl, fp, lr}
   395f0:	add	fp, sp, #8
   395f4:	mov	r2, r1
   395f8:	ldr	r1, [r0, #20]
   395fc:	mov	r4, r0
   39600:	mov	r0, r2
   39604:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   39608:	ldr	r1, [r4, #20]
   3960c:	add	r0, r1, r0
   39610:	str	r0, [r4, #20]
   39614:	pop	{r4, sl, fp, pc}
   39618:	push	{fp, lr}
   3961c:	mov	fp, sp
   39620:	mov	lr, r0
   39624:	cmp	r0, #1000	; 0x3e8
   39628:	bcc	39640 <flatcc_json_printer_uint16@@Base+0x54>
   3962c:	movw	r3, #9999	; 0x270f
   39630:	mov	r0, #4
   39634:	cmp	lr, r3
   39638:	movwhi	r0, #5
   3963c:	b	39664 <flatcc_json_printer_uint16@@Base+0x78>
   39640:	cmp	lr, #100	; 0x64
   39644:	bcc	39658 <flatcc_json_printer_uint16@@Base+0x6c>
   39648:	mov	r0, #0
   3964c:	strb	r0, [r1, #3]!
   39650:	mov	r0, #3
   39654:	b	39708 <flatcc_json_printer_uint16@@Base+0x11c>
   39658:	cmp	lr, #9
   3965c:	mov	r0, #1
   39660:	movwhi	r0, #2
   39664:	mov	r3, #0
   39668:	tst	r0, #1
   3966c:	strb	r3, [r1, r0]!
   39670:	bne	396b8 <flatcc_json_printer_uint16@@Base+0xcc>
   39674:	cmp	r0, #2
   39678:	beq	39748 <flatcc_json_printer_uint16@@Base+0x15c>
   3967c:	cmp	r0, #4
   39680:	popne	{fp, pc}
   39684:	movw	r2, #34079	; 0x851f
   39688:	movt	r2, #20971	; 0x51eb
   3968c:	umull	r2, r3, lr, r2
   39690:	mov	r2, #100	; 0x64
   39694:	lsr	r3, r3, #5
   39698:	mls	r2, r3, r2, lr
   3969c:	uxth	ip, r2
   396a0:	ldr	r2, [pc, #232]	; 39790 <flatcc_json_printer_uint16@@Base+0x1a4>
   396a4:	add	r2, pc, r2
   396a8:	add	r2, r2, ip, lsl #1
   396ac:	ldrh	r2, [r2]
   396b0:	strh	r2, [r1, #-2]!
   396b4:	b	3974c <flatcc_json_printer_uint16@@Base+0x160>
   396b8:	cmp	r0, #1
   396bc:	beq	39780 <flatcc_json_printer_uint16@@Base+0x194>
   396c0:	cmp	r0, #3
   396c4:	beq	39708 <flatcc_json_printer_uint16@@Base+0x11c>
   396c8:	cmp	r0, #5
   396cc:	bne	3977c <flatcc_json_printer_uint16@@Base+0x190>
   396d0:	movw	r0, #34079	; 0x851f
   396d4:	ldr	r2, [pc, #172]	; 39788 <flatcc_json_printer_uint16@@Base+0x19c>
   396d8:	movt	r0, #20971	; 0x51eb
   396dc:	umull	r0, r3, lr, r0
   396e0:	mov	r0, #100	; 0x64
   396e4:	add	r2, pc, r2
   396e8:	lsr	r3, r3, #5
   396ec:	mls	r0, r3, r0, lr
   396f0:	mov	lr, r3
   396f4:	uxth	r0, r0
   396f8:	add	r0, r2, r0, lsl #1
   396fc:	ldrh	r0, [r0]
   39700:	strh	r0, [r1, #-2]!
   39704:	mov	r0, #5
   39708:	movw	r3, #34079	; 0x851f
   3970c:	uxth	ip, lr
   39710:	movt	r3, #20971	; 0x51eb
   39714:	umull	r3, r2, ip, r3
   39718:	lsr	r3, r2, #5
   3971c:	mov	r2, #100	; 0x64
   39720:	mls	r2, r3, r2, lr
   39724:	uxth	ip, r2
   39728:	ldr	r2, [pc, #92]	; 3978c <flatcc_json_printer_uint16@@Base+0x1a0>
   3972c:	add	r2, pc, r2
   39730:	add	r2, r2, ip, lsl #1
   39734:	ldrh	r2, [r2]
   39738:	strh	r2, [r1, #-2]!
   3973c:	add	r2, r3, #48	; 0x30
   39740:	strb	r2, [r1, #-1]
   39744:	pop	{fp, pc}
   39748:	mov	r3, lr
   3974c:	uxth	ip, r3
   39750:	movw	r3, #34079	; 0x851f
   39754:	movt	r3, #20971	; 0x51eb
   39758:	umull	r3, r2, ip, r3
   3975c:	mov	r3, #100	; 0x64
   39760:	lsr	r2, r2, #5
   39764:	mls	r2, r2, r3, ip
   39768:	ldr	r3, [pc, #36]	; 39794 <flatcc_json_printer_uint16@@Base+0x1a8>
   3976c:	add	r3, pc, r3
   39770:	add	r2, r3, r2, lsl #1
   39774:	ldrh	r2, [r2]
   39778:	strh	r2, [r1, #-2]
   3977c:	pop	{fp, pc}
   39780:	mov	r3, lr
   39784:	b	3973c <flatcc_json_printer_uint16@@Base+0x150>
   39788:	andeq	r1, r1, fp, lsl #22
   3978c:	andeq	r1, r1, r3, asr #21
   39790:	andeq	r1, r1, fp, asr #22
   39794:	andeq	r1, r1, r3, lsl #21

00039798 <flatcc_json_printer_uint32@@Base>:
   39798:	push	{r4, sl, fp, lr}
   3979c:	add	fp, sp, #8
   397a0:	mov	r2, r1
   397a4:	ldr	r1, [r0, #20]
   397a8:	mov	r4, r0
   397ac:	mov	r0, r2
   397b0:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   397b4:	ldr	r1, [r4, #20]
   397b8:	add	r0, r1, r0
   397bc:	str	r0, [r4, #20]
   397c0:	pop	{r4, sl, fp, pc}
   397c4:	push	{fp, lr}
   397c8:	mov	fp, sp
   397cc:	mov	lr, r0
   397d0:	movw	r0, #10000	; 0x2710
   397d4:	cmp	lr, r0
   397d8:	bcc	3983c <flatcc_json_printer_uint32@@Base+0xa4>
   397dc:	movw	r0, #38528	; 0x9680
   397e0:	movt	r0, #152	; 0x98
   397e4:	cmp	lr, r0
   397e8:	bcc	39858 <flatcc_json_printer_uint32@@Base+0xc0>
   397ec:	movw	r0, #51712	; 0xca00
   397f0:	movt	r0, #15258	; 0x3b9a
   397f4:	cmp	lr, r0
   397f8:	bcc	39888 <flatcc_json_printer_uint32@@Base+0xf0>
   397fc:	movw	r0, #34079	; 0x851f
   39800:	ldr	r2, [pc, #700]	; 39ac4 <flatcc_json_printer_uint32@@Base+0x32c>
   39804:	movt	r0, #20971	; 0x51eb
   39808:	umull	r0, r3, lr, r0
   3980c:	mov	r0, #100	; 0x64
   39810:	add	r2, pc, r2
   39814:	lsr	r3, r3, #5
   39818:	mls	r0, r3, r0, lr
   3981c:	mov	lr, r3
   39820:	add	r0, r2, r0, lsl #1
   39824:	ldrh	r0, [r0]
   39828:	strh	r0, [r1, #8]!
   3982c:	mov	r0, #0
   39830:	strb	r0, [r1, #2]
   39834:	mov	r0, #10
   39838:	b	398f8 <flatcc_json_printer_uint32@@Base+0x160>
   3983c:	cmp	lr, #100	; 0x64
   39840:	bcc	39878 <flatcc_json_printer_uint32@@Base+0xe0>
   39844:	lsr	r3, lr, #3
   39848:	mov	r0, #3
   3984c:	cmp	r3, #124	; 0x7c
   39850:	movwhi	r0, #4
   39854:	b	398b4 <flatcc_json_printer_uint32@@Base+0x11c>
   39858:	movw	r0, #16960	; 0x4240
   3985c:	movt	r0, #15
   39860:	cmp	lr, r0
   39864:	bcc	398a0 <flatcc_json_printer_uint32@@Base+0x108>
   39868:	mov	r0, #0
   3986c:	strb	r0, [r1, #7]!
   39870:	mov	r0, #7
   39874:	b	39a28 <flatcc_json_printer_uint32@@Base+0x290>
   39878:	cmp	lr, #9
   3987c:	mov	r0, #1
   39880:	movwhi	r0, #2
   39884:	b	398b4 <flatcc_json_printer_uint32@@Base+0x11c>
   39888:	movw	r3, #57599	; 0xe0ff
   3988c:	mov	r0, #8
   39890:	movt	r3, #1525	; 0x5f5
   39894:	cmp	lr, r3
   39898:	movwhi	r0, #9
   3989c:	b	398b4 <flatcc_json_printer_uint32@@Base+0x11c>
   398a0:	movw	r3, #34463	; 0x869f
   398a4:	mov	r0, #5
   398a8:	movt	r3, #1
   398ac:	cmp	lr, r3
   398b0:	movwhi	r0, #6
   398b4:	mov	r3, #0
   398b8:	tst	r0, #1
   398bc:	strb	r3, [r1, r0]!
   398c0:	bne	399b8 <flatcc_json_printer_uint32@@Base+0x220>
   398c4:	sub	r3, r0, #2
   398c8:	cmp	r3, #6
   398cc:	bhi	39ac0 <flatcc_json_printer_uint32@@Base+0x328>
   398d0:	add	r2, pc, #4
   398d4:	ldr	r3, [r2, r3, lsl #2]
   398d8:	add	pc, r2, r3
   398dc:	andeq	r0, r0, ip, lsr #1
   398e0:	andeq	r0, r0, r4, ror #3
   398e4:	andeq	r0, r0, ip, ror r0
   398e8:	andeq	r0, r0, r4, ror #3
   398ec:	andeq	r0, r0, ip, asr #32
   398f0:	andeq	r0, r0, r4, ror #3
   398f4:	andeq	r0, r0, ip, lsl r0
   398f8:	movw	r2, #34079	; 0x851f
   398fc:	movt	r2, #20971	; 0x51eb
   39900:	umull	r2, r3, lr, r2
   39904:	lsr	r2, r3, #5
   39908:	mov	r3, #100	; 0x64
   3990c:	mls	ip, r2, r3, lr
   39910:	ldr	r3, [pc, #432]	; 39ac8 <flatcc_json_printer_uint32@@Base+0x330>
   39914:	mov	lr, r2
   39918:	add	r3, pc, r3
   3991c:	add	r3, r3, ip, lsl #1
   39920:	ldrh	r3, [r3]
   39924:	strh	r3, [r1, #-2]!
   39928:	movw	r2, #34079	; 0x851f
   3992c:	movt	r2, #20971	; 0x51eb
   39930:	umull	r2, r3, lr, r2
   39934:	lsr	r2, r3, #5
   39938:	mov	r3, #100	; 0x64
   3993c:	mls	ip, r2, r3, lr
   39940:	ldr	r3, [pc, #388]	; 39acc <flatcc_json_printer_uint32@@Base+0x334>
   39944:	mov	lr, r2
   39948:	add	r3, pc, r3
   3994c:	add	r3, r3, ip, lsl #1
   39950:	ldrh	r3, [r3]
   39954:	strh	r3, [r1, #-2]!
   39958:	movw	r2, #34079	; 0x851f
   3995c:	movt	r2, #20971	; 0x51eb
   39960:	umull	r2, r3, lr, r2
   39964:	lsr	r2, r3, #5
   39968:	mov	r3, #100	; 0x64
   3996c:	mls	ip, r2, r3, lr
   39970:	ldr	r3, [pc, #344]	; 39ad0 <flatcc_json_printer_uint32@@Base+0x338>
   39974:	mov	lr, r2
   39978:	add	r3, pc, r3
   3997c:	add	r3, r3, ip, lsl #1
   39980:	ldrh	r3, [r3]
   39984:	strh	r3, [r1, #-2]!
   39988:	movw	r2, #34079	; 0x851f
   3998c:	movt	r2, #20971	; 0x51eb
   39990:	umull	r2, r3, lr, r2
   39994:	lsr	r2, r3, #5
   39998:	mov	r3, #100	; 0x64
   3999c:	mls	r2, r2, r3, lr
   399a0:	ldr	r3, [pc, #300]	; 39ad4 <flatcc_json_printer_uint32@@Base+0x33c>
   399a4:	add	r3, pc, r3
   399a8:	add	r2, r3, r2, lsl #1
   399ac:	ldrh	r2, [r2]
   399b0:	strh	r2, [r1, #-2]
   399b4:	pop	{fp, pc}
   399b8:	sub	r3, r0, #1
   399bc:	cmp	r3, #8
   399c0:	bhi	39ac0 <flatcc_json_printer_uint32@@Base+0x328>
   399c4:	add	ip, pc, #4
   399c8:	ldr	r3, [ip, r3, lsl #2]
   399cc:	add	pc, ip, r3
   399d0:	andeq	r0, r0, r8, ror #1
   399d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   399d8:	strheq	r0, [r0], -r8
   399dc:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   399e0:	andeq	r0, r0, r8, lsl #1
   399e4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   399e8:	andeq	r0, r0, r8, asr r0
   399ec:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   399f0:	andeq	r0, r0, r4, lsr #32
   399f4:	movw	r0, #34079	; 0x851f
   399f8:	ldr	r2, [pc, #216]	; 39ad8 <flatcc_json_printer_uint32@@Base+0x340>
   399fc:	movt	r0, #20971	; 0x51eb
   39a00:	umull	r0, r3, lr, r0
   39a04:	mov	r0, #100	; 0x64
   39a08:	add	r2, pc, r2
   39a0c:	lsr	r3, r3, #5
   39a10:	mls	r0, r3, r0, lr
   39a14:	mov	lr, r3
   39a18:	add	r0, r2, r0, lsl #1
   39a1c:	ldrh	r0, [r0]
   39a20:	strh	r0, [r1, #-2]!
   39a24:	mov	r0, #9
   39a28:	movw	r3, #34079	; 0x851f
   39a2c:	movt	r3, #20971	; 0x51eb
   39a30:	umull	r3, r2, lr, r3
   39a34:	mov	r3, #100	; 0x64
   39a38:	lsr	r2, r2, #5
   39a3c:	mls	ip, r2, r3, lr
   39a40:	ldr	r3, [pc, #148]	; 39adc <flatcc_json_printer_uint32@@Base+0x344>
   39a44:	mov	lr, r2
   39a48:	add	r3, pc, r3
   39a4c:	add	r3, r3, ip, lsl #1
   39a50:	ldrh	r3, [r3]
   39a54:	strh	r3, [r1, #-2]!
   39a58:	movw	r2, #34079	; 0x851f
   39a5c:	movt	r2, #20971	; 0x51eb
   39a60:	umull	r2, r3, lr, r2
   39a64:	lsr	r2, r3, #5
   39a68:	mov	r3, #100	; 0x64
   39a6c:	mls	ip, r2, r3, lr
   39a70:	ldr	r3, [pc, #104]	; 39ae0 <flatcc_json_printer_uint32@@Base+0x348>
   39a74:	mov	lr, r2
   39a78:	add	r3, pc, r3
   39a7c:	add	r3, r3, ip, lsl #1
   39a80:	ldrh	r3, [r3]
   39a84:	strh	r3, [r1, #-2]!
   39a88:	movw	r2, #34079	; 0x851f
   39a8c:	movt	r2, #20971	; 0x51eb
   39a90:	umull	r2, r3, lr, r2
   39a94:	lsr	r2, r3, #5
   39a98:	mov	r3, #100	; 0x64
   39a9c:	mls	ip, r2, r3, lr
   39aa0:	ldr	r3, [pc, #60]	; 39ae4 <flatcc_json_printer_uint32@@Base+0x34c>
   39aa4:	mov	lr, r2
   39aa8:	add	r3, pc, r3
   39aac:	add	r3, r3, ip, lsl #1
   39ab0:	ldrh	r3, [r3]
   39ab4:	strh	r3, [r1, #-2]!
   39ab8:	add	r2, lr, #48	; 0x30
   39abc:	strb	r2, [r1, #-1]
   39ac0:	pop	{fp, pc}
   39ac4:	ldrdeq	r1, [r1], -pc	; <UNPREDICTABLE>
   39ac8:	ldrdeq	r1, [r1], -r7
   39acc:	andeq	r1, r1, r7, lsr #17
   39ad0:	andeq	r1, r1, r7, ror r8
   39ad4:	andeq	r1, r1, fp, asr #16
   39ad8:	andeq	r1, r1, r7, ror #15
   39adc:	andeq	r1, r1, r7, lsr #15
   39ae0:	andeq	r1, r1, r7, ror r7
   39ae4:	andeq	r1, r1, r7, asr #14

00039ae8 <flatcc_json_printer_uint64@@Base>:
   39ae8:	push	{r4, sl, fp, lr}
   39aec:	add	fp, sp, #8
   39af0:	mov	r1, r3
   39af4:	mov	r3, r2
   39af8:	ldr	r2, [r0, #20]
   39afc:	mov	r4, r0
   39b00:	mov	r0, r3
   39b04:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   39b08:	ldr	r1, [r4, #20]
   39b0c:	add	r0, r1, r0
   39b10:	str	r0, [r4, #20]
   39b14:	pop	{r4, sl, fp, pc}
   39b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39b1c:	add	fp, sp, #28
   39b20:	sub	sp, sp, #4
   39b24:	mov	r7, r0
   39b28:	movw	r0, #51711	; 0xc9ff
   39b2c:	mov	r4, r2
   39b30:	movt	r0, #15258	; 0x3b9a
   39b34:	subs	r0, r0, r7
   39b38:	rscs	r0, r1, #0
   39b3c:	bcc	39b54 <flatcc_json_printer_uint64@@Base+0x6c>
   39b40:	mov	r0, r7
   39b44:	mov	r1, r4
   39b48:	sub	sp, fp, #28
   39b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39b50:	b	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   39b54:	ldr	r9, [pc, #1184]	; 39ffc <flatcc_json_printer_uint64@@Base+0x514>
   39b58:	mov	r6, r1
   39b5c:	movw	r1, #40960	; 0xa000
   39b60:	movw	r0, #2328	; 0x918
   39b64:	movt	r1, #20082	; 0x4e72
   39b68:	subs	r1, r7, r1
   39b6c:	sbcs	r0, r6, r0
   39b70:	add	r9, pc, r9
   39b74:	bcc	39bd4 <flatcc_json_printer_uint64@@Base+0xec>
   39b78:	movw	r1, #0
   39b7c:	movw	r0, #34546	; 0x86f2
   39b80:	movt	r1, #28609	; 0x6fc1
   39b84:	movt	r0, #35	; 0x23
   39b88:	subs	r1, r7, r1
   39b8c:	sbcs	r0, r6, r0
   39b90:	bcc	39c04 <flatcc_json_printer_uint64@@Base+0x11c>
   39b94:	movw	r1, #0
   39b98:	movw	r0, #46771	; 0xb6b3
   39b9c:	movt	r1, #42852	; 0xa764
   39ba0:	movt	r0, #3552	; 0xde0
   39ba4:	subs	r1, r7, r1
   39ba8:	sbcs	r0, r6, r0
   39bac:	bcc	39c4c <flatcc_json_printer_uint64@@Base+0x164>
   39bb0:	movw	r1, #65535	; 0xffff
   39bb4:	movw	r0, #8964	; 0x2304
   39bb8:	mov	r8, #19
   39bbc:	movt	r1, #35303	; 0x89e7
   39bc0:	movt	r0, #35527	; 0x8ac7
   39bc4:	subs	r1, r1, r7
   39bc8:	sbcs	r0, r0, r6
   39bcc:	movwcc	r8, #20
   39bd0:	b	39c8c <flatcc_json_printer_uint64@@Base+0x1a4>
   39bd4:	movw	r0, #59392	; 0xe800
   39bd8:	movt	r0, #18550	; 0x4876
   39bdc:	subs	r0, r7, r0
   39be0:	sbcs	r0, r6, #23
   39be4:	bcc	39c30 <flatcc_json_printer_uint64@@Base+0x148>
   39be8:	movw	r0, #4095	; 0xfff
   39bec:	mov	r8, #12
   39bf0:	movt	r0, #54437	; 0xd4a5
   39bf4:	subs	r0, r0, r7
   39bf8:	rscs	r0, r6, #232	; 0xe8
   39bfc:	movwcc	r8, #13
   39c00:	b	39c8c <flatcc_json_printer_uint64@@Base+0x1a4>
   39c04:	movw	r1, #32768	; 0x8000
   39c08:	movw	r0, #36222	; 0x8d7e
   39c0c:	movt	r1, #42182	; 0xa4c6
   39c10:	movt	r0, #3
   39c14:	subs	r1, r7, r1
   39c18:	sbcs	r0, r6, r0
   39c1c:	bcc	39c70 <flatcc_json_printer_uint64@@Base+0x188>
   39c20:	mov	r0, #0
   39c24:	mov	r8, #16
   39c28:	strb	r0, [r4, #16]!
   39c2c:	b	39d40 <flatcc_json_printer_uint64@@Base+0x258>
   39c30:	movw	r0, #58367	; 0xe3ff
   39c34:	mov	r8, #10
   39c38:	movt	r0, #21515	; 0x540b
   39c3c:	subs	r0, r0, r7
   39c40:	rscs	r0, r6, #2
   39c44:	movwcc	r8, #11
   39c48:	b	39c8c <flatcc_json_printer_uint64@@Base+0x1a4>
   39c4c:	movw	r1, #65535	; 0xffff
   39c50:	movw	r0, #17784	; 0x4578
   39c54:	mov	r8, #17
   39c58:	movt	r1, #23945	; 0x5d89
   39c5c:	movt	r0, #355	; 0x163
   39c60:	subs	r1, r1, r7
   39c64:	sbcs	r0, r0, r6
   39c68:	movwcc	r8, #18
   39c6c:	b	39c8c <flatcc_json_printer_uint64@@Base+0x1a4>
   39c70:	movw	r1, #16383	; 0x3fff
   39c74:	movw	r0, #23283	; 0x5af3
   39c78:	mov	r8, #14
   39c7c:	movt	r1, #4218	; 0x107a
   39c80:	subs	r1, r1, r7
   39c84:	sbcs	r0, r0, r6
   39c88:	movwcc	r8, #15
   39c8c:	mov	r0, #0
   39c90:	tst	r8, #1
   39c94:	strb	r0, [r4, r8]!
   39c98:	bne	39e04 <flatcc_json_printer_uint64@@Base+0x31c>
   39c9c:	sub	r0, r8, #10
   39ca0:	cmp	r0, #10
   39ca4:	bhi	39f54 <flatcc_json_printer_uint64@@Base+0x46c>
   39ca8:	add	r1, pc, #4
   39cac:	ldr	r0, [r1, r0, lsl #2]
   39cb0:	add	pc, r1, r0
   39cb4:	andeq	r0, r0, ip, lsl r1
   39cb8:	andeq	r0, r0, r0, lsr #5
   39cbc:	andeq	r0, r0, ip, ror #1
   39cc0:	andeq	r0, r0, r0, lsr #5
   39cc4:	strheq	r0, [r0], -ip
   39cc8:	andeq	r0, r0, r0, lsr #5
   39ccc:	andeq	r0, r0, ip, lsl #1
   39cd0:	andeq	r0, r0, r0, lsr #5
   39cd4:	andeq	r0, r0, ip, asr r0
   39cd8:	andeq	r0, r0, r0, lsr #5
   39cdc:	andeq	r0, r0, ip, lsr #32
   39ce0:	mov	r0, r7
   39ce4:	mov	r1, r6
   39ce8:	mov	r2, #100	; 0x64
   39cec:	mov	r3, #0
   39cf0:	mov	r5, #100	; 0x64
   39cf4:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39cf8:	mov	r6, r1
   39cfc:	mls	r1, r0, r5, r7
   39d00:	mov	r7, r0
   39d04:	add	r1, r9, r1, lsl #1
   39d08:	ldrh	r1, [r1]
   39d0c:	strh	r1, [r4, #-2]!
   39d10:	mov	r0, r7
   39d14:	mov	r1, r6
   39d18:	mov	r2, #100	; 0x64
   39d1c:	mov	r3, #0
   39d20:	mov	r5, #100	; 0x64
   39d24:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39d28:	mov	r6, r1
   39d2c:	mls	r1, r0, r5, r7
   39d30:	mov	r7, r0
   39d34:	add	r1, r9, r1, lsl #1
   39d38:	ldrh	r1, [r1]
   39d3c:	strh	r1, [r4, #-2]!
   39d40:	mov	r0, r7
   39d44:	mov	r1, r6
   39d48:	mov	r2, #100	; 0x64
   39d4c:	mov	r3, #0
   39d50:	mov	r5, #100	; 0x64
   39d54:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39d58:	mov	r6, r1
   39d5c:	mls	r1, r0, r5, r7
   39d60:	mov	r7, r0
   39d64:	add	r1, r9, r1, lsl #1
   39d68:	ldrh	r1, [r1]
   39d6c:	strh	r1, [r4, #-2]!
   39d70:	mov	r0, r7
   39d74:	mov	r1, r6
   39d78:	mov	r2, #100	; 0x64
   39d7c:	mov	r3, #0
   39d80:	mov	r5, #100	; 0x64
   39d84:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39d88:	mov	r6, r1
   39d8c:	mls	r1, r0, r5, r7
   39d90:	mov	r7, r0
   39d94:	add	r1, r9, r1, lsl #1
   39d98:	ldrh	r1, [r1]
   39d9c:	strh	r1, [r4, #-2]!
   39da0:	mov	r0, r7
   39da4:	mov	r1, r6
   39da8:	mov	r2, #100	; 0x64
   39dac:	mov	r3, #0
   39db0:	mov	r5, #100	; 0x64
   39db4:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39db8:	mov	r6, r1
   39dbc:	mls	r1, r0, r5, r7
   39dc0:	mov	r7, r0
   39dc4:	add	r1, r9, r1, lsl #1
   39dc8:	ldrh	r1, [r1]
   39dcc:	strh	r1, [r4, #-2]!
   39dd0:	mov	r0, r7
   39dd4:	mov	r1, r6
   39dd8:	mov	r2, #100	; 0x64
   39ddc:	mov	r3, #0
   39de0:	mov	r5, #100	; 0x64
   39de4:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39de8:	mov	r6, r1
   39dec:	mls	r1, r0, r5, r7
   39df0:	mov	r7, r0
   39df4:	add	r1, r9, r1, lsl #1
   39df8:	ldrh	r1, [r1]
   39dfc:	strh	r1, [r4, #-2]!
   39e00:	b	39f54 <flatcc_json_printer_uint64@@Base+0x46c>
   39e04:	sub	r0, r8, #11
   39e08:	cmp	r0, #8
   39e0c:	bhi	39f54 <flatcc_json_printer_uint64@@Base+0x46c>
   39e10:	add	r1, pc, #4
   39e14:	ldr	r0, [r1, r0, lsl #2]
   39e18:	add	pc, r1, r0
   39e1c:	ldrdeq	r0, [r0], -ip
   39e20:	andeq	r0, r0, r8, lsr r1
   39e24:	andeq	r0, r0, ip, lsr #1
   39e28:	andeq	r0, r0, r8, lsr r1
   39e2c:	andeq	r0, r0, ip, ror r0
   39e30:	andeq	r0, r0, r8, lsr r1
   39e34:	andeq	r0, r0, ip, asr #32
   39e38:	andeq	r0, r0, r8, lsr r1
   39e3c:	andeq	r0, r0, r4, lsr #32
   39e40:	mov	r0, r7
   39e44:	mov	r1, r6
   39e48:	mov	r2, #100	; 0x64
   39e4c:	mov	r3, #0
   39e50:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39e54:	mov	r7, r0
   39e58:	add	r0, r9, r2, lsl #1
   39e5c:	mov	r6, r1
   39e60:	ldrh	r0, [r0]
   39e64:	strh	r0, [r4, #-2]!
   39e68:	mov	r0, r7
   39e6c:	mov	r1, r6
   39e70:	mov	r2, #100	; 0x64
   39e74:	mov	r3, #0
   39e78:	mov	r5, #100	; 0x64
   39e7c:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39e80:	mov	r6, r1
   39e84:	mls	r1, r0, r5, r7
   39e88:	mov	r7, r0
   39e8c:	add	r1, r9, r1, lsl #1
   39e90:	ldrh	r1, [r1]
   39e94:	strh	r1, [r4, #-2]!
   39e98:	mov	r0, r7
   39e9c:	mov	r1, r6
   39ea0:	mov	r2, #100	; 0x64
   39ea4:	mov	r3, #0
   39ea8:	mov	r5, #100	; 0x64
   39eac:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39eb0:	mov	r6, r1
   39eb4:	mls	r1, r0, r5, r7
   39eb8:	mov	r7, r0
   39ebc:	add	r1, r9, r1, lsl #1
   39ec0:	ldrh	r1, [r1]
   39ec4:	strh	r1, [r4, #-2]!
   39ec8:	mov	r0, r7
   39ecc:	mov	r1, r6
   39ed0:	mov	r2, #100	; 0x64
   39ed4:	mov	r3, #0
   39ed8:	mov	r5, #100	; 0x64
   39edc:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39ee0:	mov	r6, r1
   39ee4:	mls	r1, r0, r5, r7
   39ee8:	mov	r7, r0
   39eec:	add	r1, r9, r1, lsl #1
   39ef0:	ldrh	r1, [r1]
   39ef4:	strh	r1, [r4, #-2]!
   39ef8:	mov	r0, r7
   39efc:	mov	r1, r6
   39f00:	mov	r2, #100	; 0x64
   39f04:	mov	r3, #0
   39f08:	mov	sl, #100	; 0x64
   39f0c:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39f10:	mov	r2, #10
   39f14:	mov	r3, #0
   39f18:	mov	r5, r0
   39f1c:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39f20:	orr	r0, r2, #48	; 0x30
   39f24:	mov	r1, r6
   39f28:	mov	r2, #1000	; 0x3e8
   39f2c:	mov	r3, #0
   39f30:	strb	r0, [r4, #-3]!
   39f34:	mls	r0, r5, sl, r7
   39f38:	add	r0, r9, r0, lsl #1
   39f3c:	ldrh	r0, [r0]
   39f40:	strh	r0, [r4, #1]
   39f44:	mov	r0, r7
   39f48:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39f4c:	mov	r7, r0
   39f50:	mov	r6, r1
   39f54:	mov	r0, r7
   39f58:	mov	r1, r6
   39f5c:	mov	r2, #100	; 0x64
   39f60:	mov	r3, #0
   39f64:	mov	r5, #100	; 0x64
   39f68:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39f6c:	mls	r2, r0, r5, r7
   39f70:	mov	r3, #0
   39f74:	add	r2, r9, r2, lsl #1
   39f78:	ldrh	r2, [r2]
   39f7c:	strh	r2, [r4, #-2]
   39f80:	mov	r2, #100	; 0x64
   39f84:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39f88:	add	r0, r9, r2, lsl #1
   39f8c:	mov	r1, r6
   39f90:	movw	r2, #10000	; 0x2710
   39f94:	mov	r3, #0
   39f98:	ldrh	r0, [r0]
   39f9c:	strh	r0, [r4, #-4]
   39fa0:	mov	r0, r7
   39fa4:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39fa8:	mov	r2, #100	; 0x64
   39fac:	mov	r3, #0
   39fb0:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39fb4:	add	r0, r9, r2, lsl #1
   39fb8:	movw	r2, #16960	; 0x4240
   39fbc:	mov	r1, r6
   39fc0:	mov	r3, #0
   39fc4:	movt	r2, #15
   39fc8:	ldrh	r0, [r0]
   39fcc:	strh	r0, [r4, #-6]
   39fd0:	mov	r0, r7
   39fd4:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39fd8:	mov	r2, #100	; 0x64
   39fdc:	mov	r3, #0
   39fe0:	bl	4566c <flatcc_json_printer_clear@@Base+0x7a8>
   39fe4:	add	r0, r9, r2, lsl #1
   39fe8:	ldrh	r0, [r0]
   39fec:	strh	r0, [r4, #-8]
   39ff0:	mov	r0, r8
   39ff4:	sub	sp, fp, #28
   39ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39ffc:	andeq	r1, r1, pc, ror r6

0003a000 <flatcc_json_printer_int8@@Base>:
   3a000:	push	{fp, lr}
   3a004:	mov	fp, sp
   3a008:	ldr	lr, [r0, #20]
   3a00c:	cmn	r1, #1
   3a010:	uxtb	ip, r1
   3a014:	movle	r3, #45	; 0x2d
   3a018:	rsble	r1, r1, #0
   3a01c:	lsr	ip, ip, #7
   3a020:	strble	r3, [lr], #1
   3a024:	uxtb	r3, r1
   3a028:	cmp	r3, #100	; 0x64
   3a02c:	bcc	3a07c <flatcc_json_printer_int8@@Base+0x7c>
   3a030:	mov	r1, #0
   3a034:	strb	r1, [lr, #3]
   3a038:	movw	r1, #34079	; 0x851f
   3a03c:	movt	r1, #20971	; 0x51eb
   3a040:	umull	r1, r2, r3, r1
   3a044:	mov	r1, #48	; 0x30
   3a048:	orr	r1, r1, r2, lsr #5
   3a04c:	strb	r1, [lr]
   3a050:	lsr	r1, r2, #5
   3a054:	mov	r2, #100	; 0x64
   3a058:	mls	r1, r1, r2, r3
   3a05c:	ldr	r2, [pc, #132]	; 3a0e8 <flatcc_json_printer_int8@@Base+0xe8>
   3a060:	uxtb	r1, r1
   3a064:	add	r2, pc, r2
   3a068:	add	r1, r2, r1, lsl #1
   3a06c:	ldrh	r1, [r1]
   3a070:	strh	r1, [lr, #1]
   3a074:	mov	r1, #3
   3a078:	b	3a0d4 <flatcc_json_printer_int8@@Base+0xd4>
   3a07c:	cmp	r3, #10
   3a080:	bcc	3a0c0 <flatcc_json_printer_int8@@Base+0xc0>
   3a084:	mov	r1, #0
   3a088:	strb	r1, [lr, #2]
   3a08c:	movw	r1, #34079	; 0x851f
   3a090:	movt	r1, #20971	; 0x51eb
   3a094:	umull	r1, r2, r3, r1
   3a098:	lsr	r1, r2, #5
   3a09c:	mov	r2, #100	; 0x64
   3a0a0:	mls	r1, r1, r2, r3
   3a0a4:	ldr	r2, [pc, #64]	; 3a0ec <flatcc_json_printer_int8@@Base+0xec>
   3a0a8:	add	r2, pc, r2
   3a0ac:	add	r1, r2, r1, lsl #1
   3a0b0:	ldrh	r1, [r1]
   3a0b4:	strh	r1, [lr]
   3a0b8:	mov	r1, #2
   3a0bc:	b	3a0d4 <flatcc_json_printer_int8@@Base+0xd4>
   3a0c0:	mov	r2, #0
   3a0c4:	add	r1, r1, #48	; 0x30
   3a0c8:	strb	r2, [lr, #1]
   3a0cc:	strb	r1, [lr]
   3a0d0:	mov	r1, #1
   3a0d4:	ldr	r2, [r0, #20]
   3a0d8:	add	r1, r1, ip
   3a0dc:	add	r1, r2, r1
   3a0e0:	str	r1, [r0, #20]
   3a0e4:	pop	{fp, pc}
   3a0e8:	andeq	r1, r1, fp, lsl #3
   3a0ec:	andeq	r1, r1, r7, asr #2

0003a0f0 <flatcc_json_printer_int16@@Base>:
   3a0f0:	push	{r4, r5, fp, lr}
   3a0f4:	add	fp, sp, #8
   3a0f8:	mov	r2, r1
   3a0fc:	ldr	r1, [r0, #20]
   3a100:	mov	r4, r0
   3a104:	uxth	r0, r2
   3a108:	cmn	r2, #1
   3a10c:	rsble	r2, r2, #0
   3a110:	lsr	r5, r0, #15
   3a114:	movle	r0, #45	; 0x2d
   3a118:	strble	r0, [r1], #1
   3a11c:	uxth	r0, r2
   3a120:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3a124:	ldr	r1, [r4, #20]
   3a128:	add	r0, r0, r5
   3a12c:	add	r0, r1, r0
   3a130:	str	r0, [r4, #20]
   3a134:	pop	{r4, r5, fp, pc}

0003a138 <flatcc_json_printer_int32@@Base>:
   3a138:	push	{r4, r5, fp, lr}
   3a13c:	add	fp, sp, #8
   3a140:	mov	r2, r1
   3a144:	lsr	r5, r1, #31
   3a148:	ldr	r1, [r0, #20]
   3a14c:	mov	r4, r0
   3a150:	cmn	r2, #1
   3a154:	movle	r0, #45	; 0x2d
   3a158:	rsble	r2, r2, #0
   3a15c:	strble	r0, [r1], #1
   3a160:	mov	r0, r2
   3a164:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3a168:	ldr	r1, [r4, #20]
   3a16c:	add	r0, r0, r5
   3a170:	add	r0, r1, r0
   3a174:	str	r0, [r4, #20]
   3a178:	pop	{r4, r5, fp, pc}

0003a17c <flatcc_json_printer_int64@@Base>:
   3a17c:	push	{r4, r5, fp, lr}
   3a180:	add	fp, sp, #8
   3a184:	mov	r1, r3
   3a188:	mov	r3, r2
   3a18c:	ldr	r2, [r0, #20]
   3a190:	mov	r4, r0
   3a194:	lsr	r5, r1, #31
   3a198:	cmn	r1, #1
   3a19c:	bgt	3a1b0 <flatcc_json_printer_int64@@Base+0x34>
   3a1a0:	mov	r0, #45	; 0x2d
   3a1a4:	rsbs	r3, r3, #0
   3a1a8:	strb	r0, [r2], #1
   3a1ac:	rsc	r1, r1, #0
   3a1b0:	mov	r0, r3
   3a1b4:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3a1b8:	ldr	r1, [r4, #20]
   3a1bc:	add	r0, r0, r5
   3a1c0:	add	r0, r1, r0
   3a1c4:	str	r0, [r4, #20]
   3a1c8:	pop	{r4, r5, fp, pc}

0003a1cc <flatcc_json_printer_float@@Base>:
   3a1cc:	push	{r4, sl, fp, lr}
   3a1d0:	add	fp, sp, #8
   3a1d4:	vcvt.f64.f32	d0, s0
   3a1d8:	mov	r4, r0
   3a1dc:	ldr	r0, [r0, #20]
   3a1e0:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3a1e4:	ldr	r1, [r4, #20]
   3a1e8:	add	r0, r1, r0
   3a1ec:	str	r0, [r4, #20]
   3a1f0:	pop	{r4, sl, fp, pc}

0003a1f4 <flatcc_json_printer_double@@Base>:
   3a1f4:	push	{r4, sl, fp, lr}
   3a1f8:	add	fp, sp, #8
   3a1fc:	mov	r4, r0
   3a200:	ldr	r0, [r0, #20]
   3a204:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3a208:	ldr	r1, [r4, #20]
   3a20c:	add	r0, r1, r0
   3a210:	str	r0, [r4, #20]
   3a214:	pop	{r4, sl, fp, pc}

0003a218 <flatcc_json_printer_enum@@Base>:
   3a218:	push	{r4, r5, r6, r7, fp, lr}
   3a21c:	add	fp, sp, #16
   3a220:	mov	r4, r0
   3a224:	ldr	r0, [r0, #20]
   3a228:	mov	r6, r1
   3a22c:	mov	r1, #34	; 0x22
   3a230:	mov	r5, r2
   3a234:	strb	r1, [r0]
   3a238:	ldrb	r2, [r4, #26]
   3a23c:	ldr	r0, [r4, #20]
   3a240:	ldr	r1, [r4, #16]
   3a244:	cmp	r2, #0
   3a248:	addeq	r0, r0, #1
   3a24c:	add	r2, r0, r5
   3a250:	str	r0, [r4, #20]
   3a254:	cmp	r2, r1
   3a258:	bcc	3a2cc <flatcc_json_printer_enum@@Base+0xb4>
   3a25c:	cmp	r0, r1
   3a260:	bcc	3a27c <flatcc_json_printer_enum@@Base+0x64>
   3a264:	ldr	r2, [r4, #44]	; 0x2c
   3a268:	mov	r0, r4
   3a26c:	mov	r1, #0
   3a270:	blx	r2
   3a274:	ldr	r1, [r4, #16]
   3a278:	ldr	r0, [r4, #20]
   3a27c:	sub	r7, r1, r0
   3a280:	cmp	r7, r5
   3a284:	bcs	3a2cc <flatcc_json_printer_enum@@Base+0xb4>
   3a288:	mov	r1, r6
   3a28c:	mov	r2, r7
   3a290:	bl	14e54 <memcpy@plt>
   3a294:	ldr	r0, [r4, #20]
   3a298:	ldr	r2, [r4, #44]	; 0x2c
   3a29c:	mov	r1, #0
   3a2a0:	add	r0, r0, r7
   3a2a4:	str	r0, [r4, #20]
   3a2a8:	mov	r0, r4
   3a2ac:	blx	r2
   3a2b0:	ldr	r1, [r4, #16]
   3a2b4:	ldr	r0, [r4, #20]
   3a2b8:	sub	r5, r5, r7
   3a2bc:	add	r6, r6, r7
   3a2c0:	sub	r7, r1, r0
   3a2c4:	cmp	r5, r7
   3a2c8:	bhi	3a288 <flatcc_json_printer_enum@@Base+0x70>
   3a2cc:	mov	r1, r6
   3a2d0:	mov	r2, r5
   3a2d4:	bl	14e54 <memcpy@plt>
   3a2d8:	ldr	r0, [r4, #20]
   3a2dc:	add	r1, r0, r5
   3a2e0:	str	r1, [r4, #20]
   3a2e4:	mov	r1, #34	; 0x22
   3a2e8:	strb	r1, [r0, r5]
   3a2ec:	ldrb	r0, [r4, #26]
   3a2f0:	ldr	r1, [r4, #20]
   3a2f4:	cmp	r0, #0
   3a2f8:	addeq	r1, r1, #1
   3a2fc:	str	r1, [r4, #20]
   3a300:	pop	{r4, r5, r6, r7, fp, pc}

0003a304 <flatcc_json_printer_delimit_enum_flags@@Base>:
   3a304:	ldrb	ip, [r0, #26]
   3a308:	ldr	r3, [r0, #20]
   3a30c:	mov	r2, #34	; 0x22
   3a310:	cmp	r1, #0
   3a314:	movwne	r1, #1
   3a318:	strb	r2, [r3]
   3a31c:	clz	r2, ip
   3a320:	lsr	r2, r2, #5
   3a324:	orr	r1, r1, r2
   3a328:	ldr	r2, [r0, #20]
   3a32c:	add	r1, r2, r1
   3a330:	str	r1, [r0, #20]
   3a334:	bx	lr

0003a338 <flatcc_json_printer_enum_flag@@Base>:
   3a338:	push	{r4, r5, r6, r7, fp, lr}
   3a33c:	add	fp, sp, #16
   3a340:	mov	r5, r0
   3a344:	ldr	r0, [r0, #20]
   3a348:	mov	r6, r2
   3a34c:	mov	r2, #32
   3a350:	cmp	r1, #0
   3a354:	mov	r4, r3
   3a358:	strb	r2, [r0]
   3a35c:	ldr	r0, [r5, #20]
   3a360:	ldr	r2, [r5, #16]
   3a364:	addgt	r0, r0, #1
   3a368:	add	r1, r0, r3
   3a36c:	str	r0, [r5, #20]
   3a370:	cmp	r1, r2
   3a374:	bcc	3a3e8 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3a378:	cmp	r0, r2
   3a37c:	bcc	3a398 <flatcc_json_printer_enum_flag@@Base+0x60>
   3a380:	ldr	r2, [r5, #44]	; 0x2c
   3a384:	mov	r0, r5
   3a388:	mov	r1, #0
   3a38c:	blx	r2
   3a390:	ldr	r2, [r5, #16]
   3a394:	ldr	r0, [r5, #20]
   3a398:	sub	r7, r2, r0
   3a39c:	cmp	r7, r4
   3a3a0:	bcs	3a3e8 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3a3a4:	mov	r1, r6
   3a3a8:	mov	r2, r7
   3a3ac:	bl	14e54 <memcpy@plt>
   3a3b0:	ldr	r0, [r5, #20]
   3a3b4:	ldr	r2, [r5, #44]	; 0x2c
   3a3b8:	mov	r1, #0
   3a3bc:	add	r0, r0, r7
   3a3c0:	str	r0, [r5, #20]
   3a3c4:	mov	r0, r5
   3a3c8:	blx	r2
   3a3cc:	ldr	r1, [r5, #16]
   3a3d0:	ldr	r0, [r5, #20]
   3a3d4:	sub	r4, r4, r7
   3a3d8:	add	r6, r6, r7
   3a3dc:	sub	r7, r1, r0
   3a3e0:	cmp	r4, r7
   3a3e4:	bhi	3a3a4 <flatcc_json_printer_enum_flag@@Base+0x6c>
   3a3e8:	mov	r1, r6
   3a3ec:	mov	r2, r4
   3a3f0:	bl	14e54 <memcpy@plt>
   3a3f4:	ldr	r0, [r5, #20]
   3a3f8:	add	r0, r0, r4
   3a3fc:	str	r0, [r5, #20]
   3a400:	pop	{r4, r5, r6, r7, fp, pc}

0003a404 <flatcc_json_printer_string_field@@Base>:
   3a404:	push	{r4, r5, fp, lr}
   3a408:	add	fp, sp, #8
   3a40c:	mov	r4, r0
   3a410:	mov	r0, #4
   3a414:	add	r0, r0, r2, lsl #1
   3a418:	ldr	r2, [r1, #8]
   3a41c:	cmp	r0, r2
   3a420:	popge	{r4, r5, fp, pc}
   3a424:	ldr	r2, [r1, #4]
   3a428:	add	r0, r2, r0
   3a42c:	ldrh	r0, [r0]
   3a430:	cmp	r0, #0
   3a434:	ldrne	r2, [r1]
   3a438:	addsne	r5, r2, r0
   3a43c:	bne	3a444 <flatcc_json_printer_string_field@@Base+0x40>
   3a440:	pop	{r4, r5, fp, pc}
   3a444:	ldr	ip, [r1, #16]
   3a448:	ldr	r2, [fp, #8]
   3a44c:	add	r0, ip, #1
   3a450:	cmp	ip, #0
   3a454:	str	r0, [r1, #16]
   3a458:	beq	3a470 <flatcc_json_printer_string_field@@Base+0x6c>
   3a45c:	ldr	r0, [r4, #20]
   3a460:	add	r1, r0, #1
   3a464:	str	r1, [r4, #20]
   3a468:	mov	r1, #44	; 0x2c
   3a46c:	strb	r1, [r0]
   3a470:	mov	r0, r4
   3a474:	mov	r1, r3
   3a478:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3a47c:	ldr	r0, [r5]
   3a480:	ldr	r2, [r5, r0]!
   3a484:	mov	r0, r4
   3a488:	add	r1, r5, #4
   3a48c:	pop	{r4, r5, fp, lr}
   3a490:	b	39060 <flatcc_json_printer_string@@Base+0x4>
   3a494:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a498:	add	fp, sp, #24
   3a49c:	mov	r4, r0
   3a4a0:	mov	r6, r1
   3a4a4:	ldr	r0, [r0, #20]
   3a4a8:	mov	r8, r2
   3a4ac:	ldrb	r1, [r4, #25]
   3a4b0:	cmp	r1, #0
   3a4b4:	beq	3a570 <flatcc_json_printer_string_field@@Base+0x16c>
   3a4b8:	add	r1, r0, #1
   3a4bc:	str	r1, [r4, #20]
   3a4c0:	mov	r1, #10
   3a4c4:	strb	r1, [r0]
   3a4c8:	ldr	r0, [r4, #20]
   3a4cc:	ldrb	r2, [r4, #25]
   3a4d0:	ldr	r3, [r4, #32]
   3a4d4:	ldr	r1, [r4, #16]
   3a4d8:	mla	r5, r3, r2, r0
   3a4dc:	mul	r7, r3, r2
   3a4e0:	cmp	r5, r1
   3a4e4:	bls	3a554 <flatcc_json_printer_string_field@@Base+0x150>
   3a4e8:	cmp	r0, r1
   3a4ec:	bcc	3a508 <flatcc_json_printer_string_field@@Base+0x104>
   3a4f0:	ldr	r2, [r4, #44]	; 0x2c
   3a4f4:	mov	r0, r4
   3a4f8:	mov	r1, #0
   3a4fc:	blx	r2
   3a500:	ldr	r1, [r4, #16]
   3a504:	ldr	r0, [r4, #20]
   3a508:	sub	r5, r1, r0
   3a50c:	cmp	r5, r7
   3a510:	bcs	3a554 <flatcc_json_printer_string_field@@Base+0x150>
   3a514:	mov	r1, #32
   3a518:	mov	r2, r5
   3a51c:	bl	14ee4 <memset@plt>
   3a520:	ldr	r0, [r4, #20]
   3a524:	ldr	r2, [r4, #44]	; 0x2c
   3a528:	mov	r1, #0
   3a52c:	add	r0, r0, r5
   3a530:	str	r0, [r4, #20]
   3a534:	mov	r0, r4
   3a538:	blx	r2
   3a53c:	ldr	r1, [r4, #16]
   3a540:	ldr	r0, [r4, #20]
   3a544:	sub	r7, r7, r5
   3a548:	sub	r5, r1, r0
   3a54c:	cmp	r7, r5
   3a550:	bhi	3a514 <flatcc_json_printer_string_field@@Base+0x110>
   3a554:	mov	r1, #32
   3a558:	mov	r2, r7
   3a55c:	bl	14ee4 <memset@plt>
   3a560:	ldr	r0, [r4, #20]
   3a564:	add	r0, r0, r7
   3a568:	str	r0, [r4, #20]
   3a56c:	b	3a590 <flatcc_json_printer_string_field@@Base+0x18c>
   3a570:	ldr	r1, [r4, #16]
   3a574:	cmp	r0, r1
   3a578:	bcc	3a590 <flatcc_json_printer_string_field@@Base+0x18c>
   3a57c:	ldr	r2, [r4, #44]	; 0x2c
   3a580:	mov	r0, r4
   3a584:	mov	r1, #0
   3a588:	blx	r2
   3a58c:	ldr	r0, [r4, #20]
   3a590:	mov	r1, #34	; 0x22
   3a594:	strb	r1, [r0]
   3a598:	ldrb	r2, [r4, #26]
   3a59c:	ldr	r0, [r4, #20]
   3a5a0:	ldr	r1, [r4, #16]
   3a5a4:	cmp	r2, #0
   3a5a8:	addeq	r0, r0, #1
   3a5ac:	add	r2, r0, r8
   3a5b0:	str	r0, [r4, #20]
   3a5b4:	cmp	r2, r1
   3a5b8:	bcc	3a62c <flatcc_json_printer_string_field@@Base+0x228>
   3a5bc:	cmp	r0, r1
   3a5c0:	bcc	3a5dc <flatcc_json_printer_string_field@@Base+0x1d8>
   3a5c4:	ldr	r2, [r4, #44]	; 0x2c
   3a5c8:	mov	r0, r4
   3a5cc:	mov	r1, #0
   3a5d0:	blx	r2
   3a5d4:	ldr	r1, [r4, #16]
   3a5d8:	ldr	r0, [r4, #20]
   3a5dc:	sub	r7, r1, r0
   3a5e0:	cmp	r7, r8
   3a5e4:	bcs	3a62c <flatcc_json_printer_string_field@@Base+0x228>
   3a5e8:	mov	r1, r6
   3a5ec:	mov	r2, r7
   3a5f0:	bl	14e54 <memcpy@plt>
   3a5f4:	ldr	r0, [r4, #20]
   3a5f8:	ldr	r2, [r4, #44]	; 0x2c
   3a5fc:	mov	r1, #0
   3a600:	add	r0, r0, r7
   3a604:	str	r0, [r4, #20]
   3a608:	mov	r0, r4
   3a60c:	blx	r2
   3a610:	ldr	r1, [r4, #16]
   3a614:	ldr	r0, [r4, #20]
   3a618:	sub	r8, r8, r7
   3a61c:	add	r6, r6, r7
   3a620:	sub	r7, r1, r0
   3a624:	cmp	r8, r7
   3a628:	bhi	3a5e8 <flatcc_json_printer_string_field@@Base+0x1e4>
   3a62c:	mov	r1, r6
   3a630:	mov	r2, r8
   3a634:	bl	14e54 <memcpy@plt>
   3a638:	ldr	r0, [r4, #20]
   3a63c:	add	r1, r0, r8
   3a640:	str	r1, [r4, #20]
   3a644:	mov	r1, #34	; 0x22
   3a648:	strb	r1, [r0, r8]
   3a64c:	ldrb	r0, [r4, #26]
   3a650:	ldr	r1, [r4, #20]
   3a654:	cmp	r0, #0
   3a658:	addeq	r1, r1, #1
   3a65c:	add	r0, r1, #1
   3a660:	str	r0, [r4, #20]
   3a664:	mov	r0, #58	; 0x3a
   3a668:	strb	r0, [r1]
   3a66c:	mov	r1, #32
   3a670:	ldr	r0, [r4, #20]
   3a674:	strb	r1, [r0]
   3a678:	ldrb	r0, [r4, #25]
   3a67c:	ldr	r1, [r4, #20]
   3a680:	cmp	r0, #0
   3a684:	addne	r1, r1, #1
   3a688:	str	r1, [r4, #20]
   3a68c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003a690 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3a690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a694:	add	fp, sp, #28
   3a698:	sub	sp, sp, #12
   3a69c:	mov	r4, r0
   3a6a0:	mov	r0, #4
   3a6a4:	add	r0, r0, r2, lsl #1
   3a6a8:	ldr	r2, [r1, #8]
   3a6ac:	cmp	r0, r2
   3a6b0:	bge	3a850 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3a6b4:	ldr	r2, [r1, #4]
   3a6b8:	add	r0, r2, r0
   3a6bc:	ldrh	r0, [r0]
   3a6c0:	cmp	r0, #0
   3a6c4:	beq	3a850 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3a6c8:	ldr	r5, [fp, #12]
   3a6cc:	ldr	r2, [r1]
   3a6d0:	cmp	r5, #0
   3a6d4:	add	r6, r2, r0
   3a6d8:	movwne	r5, #1
   3a6dc:	cmp	r6, #0
   3a6e0:	beq	3a850 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3a6e4:	ldr	r0, [r1, #16]
   3a6e8:	ldr	r2, [fp, #8]
   3a6ec:	add	r7, r0, #1
   3a6f0:	cmp	r0, #0
   3a6f4:	str	r7, [r1, #16]
   3a6f8:	beq	3a710 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   3a6fc:	ldr	r0, [r4, #20]
   3a700:	add	r1, r0, #1
   3a704:	str	r1, [r4, #20]
   3a708:	mov	r1, #44	; 0x2c
   3a70c:	strb	r1, [r0]
   3a710:	mov	r0, r4
   3a714:	mov	r1, r3
   3a718:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3a71c:	ldr	r0, [r6]
   3a720:	ldr	r0, [r6, r0]!
   3a724:	str	r0, [sp, #8]
   3a728:	ldr	r0, [r4, #20]
   3a72c:	add	r1, r0, #1
   3a730:	str	r1, [r4, #20]
   3a734:	mov	r1, #34	; 0x22
   3a738:	strb	r1, [r0]
   3a73c:	movw	r1, #43691	; 0xaaab
   3a740:	ldr	r0, [sp, #8]
   3a744:	movt	r1, #43690	; 0xaaaa
   3a748:	lsl	r0, r0, #2
   3a74c:	umull	r0, r1, r0, r1
   3a750:	mov	r0, #3
   3a754:	add	r0, r0, r1, lsr #1
   3a758:	ldr	r1, [r4, #16]
   3a75c:	bic	r7, r0, #3
   3a760:	ldr	r0, [r4, #20]
   3a764:	add	r2, r0, r7
   3a768:	cmp	r2, r1
   3a76c:	bcc	3a788 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   3a770:	ldr	r2, [r4, #44]	; 0x2c
   3a774:	mov	r0, r4
   3a778:	mov	r1, #0
   3a77c:	blx	r2
   3a780:	ldr	r1, [r4, #16]
   3a784:	ldr	r0, [r4, #20]
   3a788:	add	r2, r0, r7
   3a78c:	add	r6, r6, #4
   3a790:	cmp	r2, r1
   3a794:	bls	3a828 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3a798:	add	r9, sp, #4
   3a79c:	mov	sl, #3
   3a7a0:	sub	r1, r1, r0
   3a7a4:	bic	r7, r1, #3
   3a7a8:	add	r1, r7, r7, lsl #1
   3a7ac:	cmp	r1, #0
   3a7b0:	beq	3a858 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   3a7b4:	lsr	r8, r1, #2
   3a7b8:	mov	r1, r6
   3a7bc:	mov	r2, r9
   3a7c0:	mov	r3, r5
   3a7c4:	str	r8, [sp, #4]
   3a7c8:	bl	44f08 <flatcc_json_printer_clear@@Base+0x44>
   3a7cc:	ldr	r0, [r4, #20]
   3a7d0:	mov	r1, #0
   3a7d4:	add	r0, r0, r7
   3a7d8:	str	r0, [r4, #20]
   3a7dc:	ldr	r0, [sp, #8]
   3a7e0:	sub	r0, r0, r8
   3a7e4:	str	r0, [sp, #8]
   3a7e8:	mov	r0, r4
   3a7ec:	ldr	r2, [r4, #44]	; 0x2c
   3a7f0:	blx	r2
   3a7f4:	ldr	r0, [sp, #8]
   3a7f8:	movw	r1, #43691	; 0xaaab
   3a7fc:	add	r6, r6, r8
   3a800:	movt	r1, #43690	; 0xaaaa
   3a804:	lsl	r0, r0, #2
   3a808:	umull	r0, r1, r0, r1
   3a80c:	add	r0, sl, r1, lsr #1
   3a810:	ldr	r1, [r4, #16]
   3a814:	bic	r7, r0, #3
   3a818:	ldr	r0, [r4, #20]
   3a81c:	add	r2, r0, r7
   3a820:	cmp	r2, r1
   3a824:	bhi	3a7a0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   3a828:	orr	r3, r5, #128	; 0x80
   3a82c:	add	r2, sp, #8
   3a830:	mov	r1, r6
   3a834:	bl	44f08 <flatcc_json_printer_clear@@Base+0x44>
   3a838:	ldr	r0, [r4, #20]
   3a83c:	add	r1, r0, r7
   3a840:	add	r1, r1, #1
   3a844:	str	r1, [r4, #20]
   3a848:	mov	r1, #34	; 0x22
   3a84c:	strb	r1, [r0, r7]
   3a850:	sub	sp, fp, #28
   3a854:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a858:	ldr	r0, [pc, #24]	; 3a878 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1e8>
   3a85c:	ldr	r1, [pc, #24]	; 3a87c <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1ec>
   3a860:	ldr	r3, [pc, #24]	; 3a880 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1f0>
   3a864:	movw	r2, #277	; 0x115
   3a868:	add	r0, pc, r0
   3a86c:	add	r1, pc, r1
   3a870:	add	r3, pc, r3
   3a874:	bl	14f38 <__assert_fail@plt>
   3a878:	andeq	r0, r1, r0, asr sl
   3a87c:	andeq	r0, r1, r0, lsl #13
   3a880:	andeq	r0, r1, lr, asr #20

0003a884 <flatcc_json_printer_uint8_field@@Base>:
   3a884:	push	{r4, r5, r6, sl, fp, lr}
   3a888:	add	fp, sp, #16
   3a88c:	mov	r6, r0
   3a890:	mov	r0, #4
   3a894:	ldr	r5, [r1, #8]
   3a898:	add	r2, r0, r2, lsl #1
   3a89c:	ldr	r0, [fp, #12]
   3a8a0:	cmp	r2, r5
   3a8a4:	bge	3a8c4 <flatcc_json_printer_uint8_field@@Base+0x40>
   3a8a8:	ldr	r5, [r1, #4]
   3a8ac:	add	r2, r5, r2
   3a8b0:	ldrh	r2, [r2]
   3a8b4:	cmp	r2, #0
   3a8b8:	ldrne	r5, [r1]
   3a8bc:	addsne	r2, r5, r2
   3a8c0:	bne	3a9c4 <flatcc_json_printer_uint8_field@@Base+0x140>
   3a8c4:	ldrb	r2, [r6, #29]
   3a8c8:	mov	r5, r0
   3a8cc:	cmp	r2, #0
   3a8d0:	beq	3a9c0 <flatcc_json_printer_uint8_field@@Base+0x13c>
   3a8d4:	ldr	r0, [r1, #16]
   3a8d8:	ldr	r2, [fp, #8]
   3a8dc:	add	r4, r0, #1
   3a8e0:	cmp	r0, #0
   3a8e4:	str	r4, [r1, #16]
   3a8e8:	beq	3a900 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3a8ec:	ldr	r0, [r6, #20]
   3a8f0:	add	r1, r0, #1
   3a8f4:	str	r1, [r6, #20]
   3a8f8:	mov	r1, #44	; 0x2c
   3a8fc:	strb	r1, [r0]
   3a900:	mov	r0, r6
   3a904:	mov	r1, r3
   3a908:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3a90c:	ldr	r0, [r6, #20]
   3a910:	mov	r1, #0
   3a914:	cmp	r5, #100	; 0x64
   3a918:	bcc	3a964 <flatcc_json_printer_uint8_field@@Base+0xe0>
   3a91c:	strb	r1, [r0, #3]
   3a920:	movw	r1, #34079	; 0x851f
   3a924:	movt	r1, #20971	; 0x51eb
   3a928:	umull	r1, r2, r5, r1
   3a92c:	mov	r1, #48	; 0x30
   3a930:	orr	r1, r1, r2, lsr #5
   3a934:	strb	r1, [r0]
   3a938:	lsr	r1, r2, #5
   3a93c:	mov	r2, #100	; 0x64
   3a940:	mls	r1, r1, r2, r5
   3a944:	ldr	r2, [pc, #152]	; 3a9e4 <flatcc_json_printer_uint8_field@@Base+0x160>
   3a948:	uxtb	r1, r1
   3a94c:	add	r2, pc, r2
   3a950:	add	r1, r2, r1, lsl #1
   3a954:	ldrh	r1, [r1]
   3a958:	strh	r1, [r0, #1]
   3a95c:	mov	r0, #3
   3a960:	b	3a9b4 <flatcc_json_printer_uint8_field@@Base+0x130>
   3a964:	cmp	r5, #10
   3a968:	bcc	3a9a4 <flatcc_json_printer_uint8_field@@Base+0x120>
   3a96c:	strb	r1, [r0, #2]
   3a970:	movw	r1, #34079	; 0x851f
   3a974:	movt	r1, #20971	; 0x51eb
   3a978:	umull	r1, r2, r5, r1
   3a97c:	lsr	r1, r2, #5
   3a980:	mov	r2, #100	; 0x64
   3a984:	mls	r1, r1, r2, r5
   3a988:	ldr	r2, [pc, #88]	; 3a9e8 <flatcc_json_printer_uint8_field@@Base+0x164>
   3a98c:	add	r2, pc, r2
   3a990:	add	r1, r2, r1, lsl #1
   3a994:	ldrh	r1, [r1]
   3a998:	strh	r1, [r0]
   3a99c:	mov	r0, #2
   3a9a0:	b	3a9b4 <flatcc_json_printer_uint8_field@@Base+0x130>
   3a9a4:	strb	r1, [r0, #1]
   3a9a8:	add	r1, r5, #48	; 0x30
   3a9ac:	strb	r1, [r0]
   3a9b0:	mov	r0, #1
   3a9b4:	ldr	r1, [r6, #20]
   3a9b8:	add	r0, r1, r0
   3a9bc:	str	r0, [r6, #20]
   3a9c0:	pop	{r4, r5, r6, sl, fp, pc}
   3a9c4:	ldrb	r5, [r2]
   3a9c8:	cmp	r5, r0
   3a9cc:	bne	3a8d4 <flatcc_json_printer_uint8_field@@Base+0x50>
   3a9d0:	ldrb	r2, [r6, #28]
   3a9d4:	mov	r5, r0
   3a9d8:	cmp	r2, #0
   3a9dc:	popne	{r4, r5, r6, sl, fp, pc}
   3a9e0:	b	3a8d4 <flatcc_json_printer_uint8_field@@Base+0x50>
   3a9e4:	andeq	r0, r1, r3, lsr #17
   3a9e8:	andeq	r0, r1, r3, ror #16

0003a9ec <flatcc_json_printer_uint16_field@@Base>:
   3a9ec:	push	{r4, r5, r6, sl, fp, lr}
   3a9f0:	add	fp, sp, #16
   3a9f4:	mov	r4, r0
   3a9f8:	mov	r0, #4
   3a9fc:	ldr	r5, [r1, #8]
   3aa00:	add	r2, r0, r2, lsl #1
   3aa04:	ldr	r0, [fp, #12]
   3aa08:	cmp	r2, r5
   3aa0c:	bge	3aa2c <flatcc_json_printer_uint16_field@@Base+0x40>
   3aa10:	ldr	r5, [r1, #4]
   3aa14:	add	r2, r5, r2
   3aa18:	ldrh	r2, [r2]
   3aa1c:	cmp	r2, #0
   3aa20:	ldrne	r5, [r1]
   3aa24:	addsne	r2, r5, r2
   3aa28:	bne	3aa90 <flatcc_json_printer_uint16_field@@Base+0xa4>
   3aa2c:	ldrb	r2, [r4, #29]
   3aa30:	mov	r6, r0
   3aa34:	cmp	r2, #0
   3aa38:	beq	3aa8c <flatcc_json_printer_uint16_field@@Base+0xa0>
   3aa3c:	ldr	r0, [r1, #16]
   3aa40:	ldr	r2, [fp, #8]
   3aa44:	add	r5, r0, #1
   3aa48:	cmp	r0, #0
   3aa4c:	str	r5, [r1, #16]
   3aa50:	beq	3aa68 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3aa54:	ldr	r0, [r4, #20]
   3aa58:	add	r1, r0, #1
   3aa5c:	str	r1, [r4, #20]
   3aa60:	mov	r1, #44	; 0x2c
   3aa64:	strb	r1, [r0]
   3aa68:	mov	r0, r4
   3aa6c:	mov	r1, r3
   3aa70:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3aa74:	ldr	r1, [r4, #20]
   3aa78:	mov	r0, r6
   3aa7c:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3aa80:	ldr	r1, [r4, #20]
   3aa84:	add	r0, r1, r0
   3aa88:	str	r0, [r4, #20]
   3aa8c:	pop	{r4, r5, r6, sl, fp, pc}
   3aa90:	ldrh	r6, [r2]
   3aa94:	cmp	r6, r0
   3aa98:	bne	3aa3c <flatcc_json_printer_uint16_field@@Base+0x50>
   3aa9c:	ldrb	r2, [r4, #28]
   3aaa0:	mov	r6, r0
   3aaa4:	cmp	r2, #0
   3aaa8:	popne	{r4, r5, r6, sl, fp, pc}
   3aaac:	b	3aa3c <flatcc_json_printer_uint16_field@@Base+0x50>

0003aab0 <flatcc_json_printer_uint32_field@@Base>:
   3aab0:	push	{r4, r5, r6, sl, fp, lr}
   3aab4:	add	fp, sp, #16
   3aab8:	mov	r4, r0
   3aabc:	mov	r0, #4
   3aac0:	ldr	r5, [r1, #8]
   3aac4:	add	r2, r0, r2, lsl #1
   3aac8:	ldr	r0, [fp, #12]
   3aacc:	cmp	r2, r5
   3aad0:	bge	3aaf0 <flatcc_json_printer_uint32_field@@Base+0x40>
   3aad4:	ldr	r5, [r1, #4]
   3aad8:	add	r2, r5, r2
   3aadc:	ldrh	r2, [r2]
   3aae0:	cmp	r2, #0
   3aae4:	ldrne	r5, [r1]
   3aae8:	addsne	r2, r5, r2
   3aaec:	bne	3ab54 <flatcc_json_printer_uint32_field@@Base+0xa4>
   3aaf0:	ldrb	r2, [r4, #29]
   3aaf4:	mov	r6, r0
   3aaf8:	cmp	r2, #0
   3aafc:	beq	3ab50 <flatcc_json_printer_uint32_field@@Base+0xa0>
   3ab00:	ldr	r0, [r1, #16]
   3ab04:	ldr	r2, [fp, #8]
   3ab08:	add	r5, r0, #1
   3ab0c:	cmp	r0, #0
   3ab10:	str	r5, [r1, #16]
   3ab14:	beq	3ab2c <flatcc_json_printer_uint32_field@@Base+0x7c>
   3ab18:	ldr	r0, [r4, #20]
   3ab1c:	add	r1, r0, #1
   3ab20:	str	r1, [r4, #20]
   3ab24:	mov	r1, #44	; 0x2c
   3ab28:	strb	r1, [r0]
   3ab2c:	mov	r0, r4
   3ab30:	mov	r1, r3
   3ab34:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3ab38:	ldr	r1, [r4, #20]
   3ab3c:	mov	r0, r6
   3ab40:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3ab44:	ldr	r1, [r4, #20]
   3ab48:	add	r0, r1, r0
   3ab4c:	str	r0, [r4, #20]
   3ab50:	pop	{r4, r5, r6, sl, fp, pc}
   3ab54:	ldr	r6, [r2]
   3ab58:	cmp	r6, r0
   3ab5c:	bne	3ab00 <flatcc_json_printer_uint32_field@@Base+0x50>
   3ab60:	ldrb	r2, [r4, #28]
   3ab64:	mov	r6, r0
   3ab68:	cmp	r2, #0
   3ab6c:	popne	{r4, r5, r6, sl, fp, pc}
   3ab70:	b	3ab00 <flatcc_json_printer_uint32_field@@Base+0x50>

0003ab74 <flatcc_json_printer_uint64_field@@Base>:
   3ab74:	push	{r4, r6, r7, r8, fp, lr}
   3ab78:	add	fp, sp, #16
   3ab7c:	mov	r4, r0
   3ab80:	mov	r0, #4
   3ab84:	ldr	r6, [r1, #8]
   3ab88:	ldr	lr, [fp, #20]
   3ab8c:	add	r7, r0, r2, lsl #1
   3ab90:	ldr	r2, [fp, #16]
   3ab94:	cmp	r7, r6
   3ab98:	bge	3abb8 <flatcc_json_printer_uint64_field@@Base+0x44>
   3ab9c:	ldr	r6, [r1, #4]
   3aba0:	add	r7, r6, r7
   3aba4:	ldrh	r7, [r7]
   3aba8:	cmp	r7, #0
   3abac:	ldrne	r6, [r1]
   3abb0:	addsne	r7, r6, r7
   3abb4:	bne	3ac24 <flatcc_json_printer_uint64_field@@Base+0xb0>
   3abb8:	ldrb	r0, [r4, #29]
   3abbc:	mov	r8, r2
   3abc0:	mov	r7, lr
   3abc4:	cmp	r0, #0
   3abc8:	beq	3ac20 <flatcc_json_printer_uint64_field@@Base+0xac>
   3abcc:	ldr	r0, [r1, #16]
   3abd0:	ldr	r2, [fp, #8]
   3abd4:	add	r6, r0, #1
   3abd8:	cmp	r0, #0
   3abdc:	str	r6, [r1, #16]
   3abe0:	beq	3abf8 <flatcc_json_printer_uint64_field@@Base+0x84>
   3abe4:	ldr	r0, [r4, #20]
   3abe8:	add	r1, r0, #1
   3abec:	str	r1, [r4, #20]
   3abf0:	mov	r1, #44	; 0x2c
   3abf4:	strb	r1, [r0]
   3abf8:	mov	r0, r4
   3abfc:	mov	r1, r3
   3ac00:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3ac04:	ldr	r2, [r4, #20]
   3ac08:	mov	r0, r8
   3ac0c:	mov	r1, r7
   3ac10:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3ac14:	ldr	r1, [r4, #20]
   3ac18:	add	r0, r1, r0
   3ac1c:	str	r0, [r4, #20]
   3ac20:	pop	{r4, r6, r7, r8, fp, pc}
   3ac24:	ldr	r8, [r7]
   3ac28:	ldr	r7, [r7, #4]
   3ac2c:	eor	ip, r7, lr
   3ac30:	eor	r0, r8, r2
   3ac34:	orrs	r0, r0, ip
   3ac38:	bne	3abcc <flatcc_json_printer_uint64_field@@Base+0x58>
   3ac3c:	ldrb	r0, [r4, #28]
   3ac40:	mov	r8, r2
   3ac44:	mov	r7, lr
   3ac48:	cmp	r0, #0
   3ac4c:	popne	{r4, r6, r7, r8, fp, pc}
   3ac50:	b	3abcc <flatcc_json_printer_uint64_field@@Base+0x58>

0003ac54 <flatcc_json_printer_int8_field@@Base>:
   3ac54:	push	{r4, r5, r6, sl, fp, lr}
   3ac58:	add	fp, sp, #16
   3ac5c:	mov	r6, r0
   3ac60:	mov	r0, #4
   3ac64:	ldr	r5, [r1, #8]
   3ac68:	add	r2, r0, r2, lsl #1
   3ac6c:	ldr	r0, [fp, #12]
   3ac70:	cmp	r2, r5
   3ac74:	bge	3ac94 <flatcc_json_printer_int8_field@@Base+0x40>
   3ac78:	ldr	r5, [r1, #4]
   3ac7c:	add	r2, r5, r2
   3ac80:	ldrh	r2, [r2]
   3ac84:	cmp	r2, #0
   3ac88:	ldrne	r5, [r1]
   3ac8c:	addsne	r2, r5, r2
   3ac90:	bne	3adc0 <flatcc_json_printer_int8_field@@Base+0x16c>
   3ac94:	ldrb	r2, [r6, #29]
   3ac98:	mov	r5, r0
   3ac9c:	cmp	r2, #0
   3aca0:	beq	3adbc <flatcc_json_printer_int8_field@@Base+0x168>
   3aca4:	ldr	r0, [r1, #16]
   3aca8:	ldr	r2, [fp, #8]
   3acac:	add	r4, r0, #1
   3acb0:	cmp	r0, #0
   3acb4:	str	r4, [r1, #16]
   3acb8:	beq	3acd0 <flatcc_json_printer_int8_field@@Base+0x7c>
   3acbc:	ldr	r0, [r6, #20]
   3acc0:	add	r1, r0, #1
   3acc4:	str	r1, [r6, #20]
   3acc8:	mov	r1, #44	; 0x2c
   3accc:	strb	r1, [r0]
   3acd0:	mov	r0, r6
   3acd4:	mov	r1, r3
   3acd8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3acdc:	sxtb	r2, r5
   3ace0:	ldr	r0, [r6, #20]
   3ace4:	uxtb	r1, r5
   3ace8:	cmn	r2, #1
   3acec:	lsr	r1, r1, #7
   3acf0:	movle	r2, #45	; 0x2d
   3acf4:	rsble	r5, r5, #0
   3acf8:	strble	r2, [r0], #1
   3acfc:	uxtb	r2, r5
   3ad00:	cmp	r2, #100	; 0x64
   3ad04:	bcc	3ad54 <flatcc_json_printer_int8_field@@Base+0x100>
   3ad08:	mov	r3, #0
   3ad0c:	strb	r3, [r0, #3]
   3ad10:	movw	r3, #34079	; 0x851f
   3ad14:	movt	r3, #20971	; 0x51eb
   3ad18:	umull	r3, r5, r2, r3
   3ad1c:	mov	r3, #48	; 0x30
   3ad20:	orr	r3, r3, r5, lsr #5
   3ad24:	strb	r3, [r0]
   3ad28:	lsr	r3, r5, #5
   3ad2c:	mov	r5, #100	; 0x64
   3ad30:	mls	r2, r3, r5, r2
   3ad34:	ldr	r3, [pc, #168]	; 3ade4 <flatcc_json_printer_int8_field@@Base+0x190>
   3ad38:	uxtb	r2, r2
   3ad3c:	add	r3, pc, r3
   3ad40:	add	r2, r3, r2, lsl #1
   3ad44:	ldrh	r2, [r2]
   3ad48:	strh	r2, [r0, #1]
   3ad4c:	mov	r0, #3
   3ad50:	b	3adac <flatcc_json_printer_int8_field@@Base+0x158>
   3ad54:	cmp	r2, #10
   3ad58:	bcc	3ad98 <flatcc_json_printer_int8_field@@Base+0x144>
   3ad5c:	mov	r3, #0
   3ad60:	strb	r3, [r0, #2]
   3ad64:	movw	r3, #34079	; 0x851f
   3ad68:	movt	r3, #20971	; 0x51eb
   3ad6c:	umull	r3, r5, r2, r3
   3ad70:	lsr	r3, r5, #5
   3ad74:	mov	r5, #100	; 0x64
   3ad78:	mls	r2, r3, r5, r2
   3ad7c:	ldr	r3, [pc, #100]	; 3ade8 <flatcc_json_printer_int8_field@@Base+0x194>
   3ad80:	add	r3, pc, r3
   3ad84:	add	r2, r3, r2, lsl #1
   3ad88:	ldrh	r2, [r2]
   3ad8c:	strh	r2, [r0]
   3ad90:	mov	r0, #2
   3ad94:	b	3adac <flatcc_json_printer_int8_field@@Base+0x158>
   3ad98:	mov	r2, #0
   3ad9c:	strb	r2, [r0, #1]
   3ada0:	add	r2, r5, #48	; 0x30
   3ada4:	strb	r2, [r0]
   3ada8:	mov	r0, #1
   3adac:	add	r0, r0, r1
   3adb0:	ldr	r1, [r6, #20]
   3adb4:	add	r0, r1, r0
   3adb8:	str	r0, [r6, #20]
   3adbc:	pop	{r4, r5, r6, sl, fp, pc}
   3adc0:	ldrb	r5, [r2]
   3adc4:	uxtb	r2, r0
   3adc8:	cmp	r5, r2
   3adcc:	bne	3aca4 <flatcc_json_printer_int8_field@@Base+0x50>
   3add0:	ldrb	r2, [r6, #28]
   3add4:	mov	r5, r0
   3add8:	cmp	r2, #0
   3addc:	popne	{r4, r5, r6, sl, fp, pc}
   3ade0:	b	3aca4 <flatcc_json_printer_int8_field@@Base+0x50>
   3ade4:			; <UNDEFINED> instruction: 0x000104b3
   3ade8:	andeq	r0, r1, pc, ror #8

0003adec <flatcc_json_printer_int16_field@@Base>:
   3adec:	push	{r4, r5, r6, sl, fp, lr}
   3adf0:	add	fp, sp, #16
   3adf4:	mov	r4, r0
   3adf8:	mov	r0, #4
   3adfc:	ldr	r6, [r1, #8]
   3ae00:	add	r2, r0, r2, lsl #1
   3ae04:	ldr	r0, [fp, #12]
   3ae08:	cmp	r2, r6
   3ae0c:	bge	3ae2c <flatcc_json_printer_int16_field@@Base+0x40>
   3ae10:	ldr	r6, [r1, #4]
   3ae14:	add	r2, r6, r2
   3ae18:	ldrh	r2, [r2]
   3ae1c:	cmp	r2, #0
   3ae20:	ldrne	r6, [r1]
   3ae24:	addsne	r2, r6, r2
   3ae28:	bne	3aeb0 <flatcc_json_printer_int16_field@@Base+0xc4>
   3ae2c:	ldrb	r2, [r4, #29]
   3ae30:	mov	r5, r0
   3ae34:	cmp	r2, #0
   3ae38:	beq	3aeac <flatcc_json_printer_int16_field@@Base+0xc0>
   3ae3c:	ldr	r0, [r1, #16]
   3ae40:	ldr	r2, [fp, #8]
   3ae44:	add	r6, r0, #1
   3ae48:	cmp	r0, #0
   3ae4c:	str	r6, [r1, #16]
   3ae50:	beq	3ae68 <flatcc_json_printer_int16_field@@Base+0x7c>
   3ae54:	ldr	r0, [r4, #20]
   3ae58:	add	r1, r0, #1
   3ae5c:	str	r1, [r4, #20]
   3ae60:	mov	r1, #44	; 0x2c
   3ae64:	strb	r1, [r0]
   3ae68:	mov	r0, r4
   3ae6c:	mov	r1, r3
   3ae70:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3ae74:	uxth	r0, r5
   3ae78:	ldr	r1, [r4, #20]
   3ae7c:	lsr	r6, r0, #15
   3ae80:	sxth	r0, r5
   3ae84:	cmn	r0, #1
   3ae88:	movle	r0, #45	; 0x2d
   3ae8c:	rsble	r5, r5, #0
   3ae90:	strble	r0, [r1], #1
   3ae94:	uxth	r0, r5
   3ae98:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3ae9c:	ldr	r1, [r4, #20]
   3aea0:	add	r0, r0, r6
   3aea4:	add	r0, r1, r0
   3aea8:	str	r0, [r4, #20]
   3aeac:	pop	{r4, r5, r6, sl, fp, pc}
   3aeb0:	ldrh	r5, [r2]
   3aeb4:	uxth	r2, r0
   3aeb8:	cmp	r5, r2
   3aebc:	bne	3ae3c <flatcc_json_printer_int16_field@@Base+0x50>
   3aec0:	ldrb	r2, [r4, #28]
   3aec4:	mov	r5, r0
   3aec8:	cmp	r2, #0
   3aecc:	popne	{r4, r5, r6, sl, fp, pc}
   3aed0:	b	3ae3c <flatcc_json_printer_int16_field@@Base+0x50>

0003aed4 <flatcc_json_printer_int32_field@@Base>:
   3aed4:	push	{r4, r5, r6, sl, fp, lr}
   3aed8:	add	fp, sp, #16
   3aedc:	mov	r4, r0
   3aee0:	mov	r0, #4
   3aee4:	ldr	r6, [r1, #8]
   3aee8:	add	r2, r0, r2, lsl #1
   3aeec:	ldr	r0, [fp, #12]
   3aef0:	cmp	r2, r6
   3aef4:	bge	3af14 <flatcc_json_printer_int32_field@@Base+0x40>
   3aef8:	ldr	r6, [r1, #4]
   3aefc:	add	r2, r6, r2
   3af00:	ldrh	r2, [r2]
   3af04:	cmp	r2, #0
   3af08:	ldrne	r6, [r1]
   3af0c:	addsne	r2, r6, r2
   3af10:	bne	3af90 <flatcc_json_printer_int32_field@@Base+0xbc>
   3af14:	ldrb	r2, [r4, #29]
   3af18:	mov	r5, r0
   3af1c:	cmp	r2, #0
   3af20:	beq	3af8c <flatcc_json_printer_int32_field@@Base+0xb8>
   3af24:	ldr	r0, [r1, #16]
   3af28:	ldr	r2, [fp, #8]
   3af2c:	add	r6, r0, #1
   3af30:	cmp	r0, #0
   3af34:	str	r6, [r1, #16]
   3af38:	beq	3af50 <flatcc_json_printer_int32_field@@Base+0x7c>
   3af3c:	ldr	r0, [r4, #20]
   3af40:	add	r1, r0, #1
   3af44:	str	r1, [r4, #20]
   3af48:	mov	r1, #44	; 0x2c
   3af4c:	strb	r1, [r0]
   3af50:	mov	r0, r4
   3af54:	mov	r1, r3
   3af58:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3af5c:	ldr	r1, [r4, #20]
   3af60:	cmn	r5, #1
   3af64:	lsr	r6, r5, #31
   3af68:	movle	r0, #45	; 0x2d
   3af6c:	rsble	r5, r5, #0
   3af70:	strble	r0, [r1], #1
   3af74:	mov	r0, r5
   3af78:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3af7c:	ldr	r1, [r4, #20]
   3af80:	add	r0, r0, r6
   3af84:	add	r0, r1, r0
   3af88:	str	r0, [r4, #20]
   3af8c:	pop	{r4, r5, r6, sl, fp, pc}
   3af90:	ldr	r5, [r2]
   3af94:	cmp	r5, r0
   3af98:	bne	3af24 <flatcc_json_printer_int32_field@@Base+0x50>
   3af9c:	ldrb	r2, [r4, #28]
   3afa0:	mov	r5, r0
   3afa4:	cmp	r2, #0
   3afa8:	popne	{r4, r5, r6, sl, fp, pc}
   3afac:	b	3af24 <flatcc_json_printer_int32_field@@Base+0x50>

0003afb0 <flatcc_json_printer_int64_field@@Base>:
   3afb0:	push	{r4, r5, r6, r7, fp, lr}
   3afb4:	add	fp, sp, #16
   3afb8:	mov	r4, r0
   3afbc:	mov	r0, #4
   3afc0:	ldr	r6, [r1, #8]
   3afc4:	add	r7, r0, r2, lsl #1
   3afc8:	ldr	r0, [fp, #20]
   3afcc:	ldr	r2, [fp, #16]
   3afd0:	cmp	r7, r6
   3afd4:	bge	3aff4 <flatcc_json_printer_int64_field@@Base+0x44>
   3afd8:	ldr	r6, [r1, #4]
   3afdc:	add	r7, r6, r7
   3afe0:	ldrh	r7, [r7]
   3afe4:	cmp	r7, #0
   3afe8:	ldrne	r6, [r1]
   3afec:	addsne	r7, r6, r7
   3aff0:	bne	3b080 <flatcc_json_printer_int64_field@@Base+0xd0>
   3aff4:	ldrb	r7, [r4, #29]
   3aff8:	mov	r6, r2
   3affc:	cmp	r7, #0
   3b000:	mov	r7, r0
   3b004:	beq	3b07c <flatcc_json_printer_int64_field@@Base+0xcc>
   3b008:	ldr	r0, [r1, #16]
   3b00c:	ldr	r2, [fp, #8]
   3b010:	add	r5, r0, #1
   3b014:	cmp	r0, #0
   3b018:	str	r5, [r1, #16]
   3b01c:	beq	3b034 <flatcc_json_printer_int64_field@@Base+0x84>
   3b020:	ldr	r0, [r4, #20]
   3b024:	add	r1, r0, #1
   3b028:	str	r1, [r4, #20]
   3b02c:	mov	r1, #44	; 0x2c
   3b030:	strb	r1, [r0]
   3b034:	mov	r0, r4
   3b038:	mov	r1, r3
   3b03c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b040:	ldr	r2, [r4, #20]
   3b044:	lsr	r5, r7, #31
   3b048:	cmn	r7, #1
   3b04c:	bgt	3b060 <flatcc_json_printer_int64_field@@Base+0xb0>
   3b050:	mov	r0, #45	; 0x2d
   3b054:	rsbs	r6, r6, #0
   3b058:	strb	r0, [r2], #1
   3b05c:	rsc	r7, r7, #0
   3b060:	mov	r0, r6
   3b064:	mov	r1, r7
   3b068:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3b06c:	ldr	r1, [r4, #20]
   3b070:	add	r0, r0, r5
   3b074:	add	r0, r1, r0
   3b078:	str	r0, [r4, #20]
   3b07c:	pop	{r4, r5, r6, r7, fp, pc}
   3b080:	ldrd	r6, [r7]
   3b084:	eor	ip, r7, r0
   3b088:	eor	r5, r6, r2
   3b08c:	orrs	r5, r5, ip
   3b090:	bne	3b008 <flatcc_json_printer_int64_field@@Base+0x58>
   3b094:	ldrb	r7, [r4, #28]
   3b098:	mov	r6, r2
   3b09c:	cmp	r7, #0
   3b0a0:	mov	r7, r0
   3b0a4:	popne	{r4, r5, r6, r7, fp, pc}
   3b0a8:	b	3b008 <flatcc_json_printer_int64_field@@Base+0x58>

0003b0ac <flatcc_json_printer_bool_field@@Base>:
   3b0ac:	push	{r4, r5, r6, sl, fp, lr}
   3b0b0:	add	fp, sp, #16
   3b0b4:	mov	r4, r0
   3b0b8:	mov	r0, #4
   3b0bc:	ldr	r5, [r1, #8]
   3b0c0:	add	r2, r0, r2, lsl #1
   3b0c4:	ldr	r0, [fp, #12]
   3b0c8:	cmp	r2, r5
   3b0cc:	bge	3b0ec <flatcc_json_printer_bool_field@@Base+0x40>
   3b0d0:	ldr	r5, [r1, #4]
   3b0d4:	add	r2, r5, r2
   3b0d8:	ldrh	r2, [r2]
   3b0dc:	cmp	r2, #0
   3b0e0:	ldrne	r5, [r1]
   3b0e4:	addsne	r2, r5, r2
   3b0e8:	bne	3b184 <flatcc_json_printer_bool_field@@Base+0xd8>
   3b0ec:	ldrb	r2, [r4, #29]
   3b0f0:	mov	r6, r0
   3b0f4:	cmp	r2, #0
   3b0f8:	beq	3b180 <flatcc_json_printer_bool_field@@Base+0xd4>
   3b0fc:	ldr	r0, [r1, #16]
   3b100:	ldr	r2, [fp, #8]
   3b104:	add	r5, r0, #1
   3b108:	cmp	r0, #0
   3b10c:	str	r5, [r1, #16]
   3b110:	beq	3b128 <flatcc_json_printer_bool_field@@Base+0x7c>
   3b114:	ldr	r0, [r4, #20]
   3b118:	add	r1, r0, #1
   3b11c:	str	r1, [r4, #20]
   3b120:	mov	r1, #44	; 0x2c
   3b124:	strb	r1, [r0]
   3b128:	mov	r0, r4
   3b12c:	mov	r1, r3
   3b130:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b134:	ldr	r0, [r4, #20]
   3b138:	cmp	r6, #0
   3b13c:	beq	3b15c <flatcc_json_printer_bool_field@@Base+0xb0>
   3b140:	mov	r1, #0
   3b144:	strb	r1, [r0, #4]
   3b148:	movw	r1, #29300	; 0x7274
   3b14c:	movt	r1, #25973	; 0x6575
   3b150:	str	r1, [r0]
   3b154:	mov	r0, #4
   3b158:	b	3b174 <flatcc_json_printer_bool_field@@Base+0xc8>
   3b15c:	mov	r1, #101	; 0x65
   3b160:	strh	r1, [r0, #4]
   3b164:	movw	r1, #24934	; 0x6166
   3b168:	movt	r1, #29548	; 0x736c
   3b16c:	str	r1, [r0]
   3b170:	mov	r0, #5
   3b174:	ldr	r1, [r4, #20]
   3b178:	add	r0, r1, r0
   3b17c:	str	r0, [r4, #20]
   3b180:	pop	{r4, r5, r6, sl, fp, pc}
   3b184:	ldrb	r6, [r2]
   3b188:	cmp	r6, r0
   3b18c:	bne	3b0fc <flatcc_json_printer_bool_field@@Base+0x50>
   3b190:	ldrb	r2, [r4, #28]
   3b194:	mov	r6, r0
   3b198:	cmp	r2, #0
   3b19c:	popne	{r4, r5, r6, sl, fp, pc}
   3b1a0:	b	3b0fc <flatcc_json_printer_bool_field@@Base+0x50>

0003b1a4 <flatcc_json_printer_float_field@@Base>:
   3b1a4:	push	{r4, r5, fp, lr}
   3b1a8:	add	fp, sp, #8
   3b1ac:	vpush	{d8}
   3b1b0:	mov	r5, r0
   3b1b4:	mov	r0, #4
   3b1b8:	vmov.f32	s16, s0
   3b1bc:	add	r0, r0, r2, lsl #1
   3b1c0:	ldr	r2, [r1, #8]
   3b1c4:	cmp	r0, r2
   3b1c8:	bge	3b1e8 <flatcc_json_printer_float_field@@Base+0x44>
   3b1cc:	ldr	r2, [r1, #4]
   3b1d0:	add	r0, r2, r0
   3b1d4:	ldrh	r0, [r0]
   3b1d8:	cmp	r0, #0
   3b1dc:	ldrne	r2, [r1]
   3b1e0:	addsne	r0, r2, r0
   3b1e4:	bne	3b24c <flatcc_json_printer_float_field@@Base+0xa8>
   3b1e8:	ldrb	r0, [r5, #29]
   3b1ec:	cmp	r0, #0
   3b1f0:	beq	3b244 <flatcc_json_printer_float_field@@Base+0xa0>
   3b1f4:	ldr	r0, [r1, #16]
   3b1f8:	ldr	r2, [fp, #8]
   3b1fc:	add	r4, r0, #1
   3b200:	cmp	r0, #0
   3b204:	str	r4, [r1, #16]
   3b208:	beq	3b220 <flatcc_json_printer_float_field@@Base+0x7c>
   3b20c:	ldr	r0, [r5, #20]
   3b210:	add	r1, r0, #1
   3b214:	str	r1, [r5, #20]
   3b218:	mov	r1, #44	; 0x2c
   3b21c:	strb	r1, [r0]
   3b220:	mov	r0, r5
   3b224:	mov	r1, r3
   3b228:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b22c:	vcvt.f64.f32	d0, s16
   3b230:	ldr	r0, [r5, #20]
   3b234:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3b238:	ldr	r1, [r5, #20]
   3b23c:	add	r0, r1, r0
   3b240:	str	r0, [r5, #20]
   3b244:	vpop	{d8}
   3b248:	pop	{r4, r5, fp, pc}
   3b24c:	vldr	s0, [r0]
   3b250:	vcmp.f32	s0, s16
   3b254:	vmrs	APSR_nzcv, fpscr
   3b258:	bne	3b270 <flatcc_json_printer_float_field@@Base+0xcc>
   3b25c:	ldrb	r0, [r5, #28]
   3b260:	vmov.f32	s16, s0
   3b264:	cmp	r0, #0
   3b268:	bne	3b244 <flatcc_json_printer_float_field@@Base+0xa0>
   3b26c:	b	3b1f4 <flatcc_json_printer_float_field@@Base+0x50>
   3b270:	vmov.f32	s16, s0
   3b274:	b	3b1f4 <flatcc_json_printer_float_field@@Base+0x50>

0003b278 <flatcc_json_printer_double_field@@Base>:
   3b278:	push	{r4, r5, fp, lr}
   3b27c:	add	fp, sp, #8
   3b280:	vpush	{d8}
   3b284:	mov	r5, r0
   3b288:	mov	r0, #4
   3b28c:	vmov.f64	d8, d0
   3b290:	add	r0, r0, r2, lsl #1
   3b294:	ldr	r2, [r1, #8]
   3b298:	cmp	r0, r2
   3b29c:	bge	3b2bc <flatcc_json_printer_double_field@@Base+0x44>
   3b2a0:	ldr	r2, [r1, #4]
   3b2a4:	add	r0, r2, r0
   3b2a8:	ldrh	r0, [r0]
   3b2ac:	cmp	r0, #0
   3b2b0:	ldrne	r2, [r1]
   3b2b4:	addsne	r0, r2, r0
   3b2b8:	bne	3b320 <flatcc_json_printer_double_field@@Base+0xa8>
   3b2bc:	ldrb	r0, [r5, #29]
   3b2c0:	cmp	r0, #0
   3b2c4:	beq	3b318 <flatcc_json_printer_double_field@@Base+0xa0>
   3b2c8:	ldr	r0, [r1, #16]
   3b2cc:	ldr	r2, [fp, #8]
   3b2d0:	add	r4, r0, #1
   3b2d4:	cmp	r0, #0
   3b2d8:	str	r4, [r1, #16]
   3b2dc:	beq	3b2f4 <flatcc_json_printer_double_field@@Base+0x7c>
   3b2e0:	ldr	r0, [r5, #20]
   3b2e4:	add	r1, r0, #1
   3b2e8:	str	r1, [r5, #20]
   3b2ec:	mov	r1, #44	; 0x2c
   3b2f0:	strb	r1, [r0]
   3b2f4:	mov	r0, r5
   3b2f8:	mov	r1, r3
   3b2fc:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b300:	ldr	r0, [r5, #20]
   3b304:	vmov.f64	d0, d8
   3b308:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3b30c:	ldr	r1, [r5, #20]
   3b310:	add	r0, r1, r0
   3b314:	str	r0, [r5, #20]
   3b318:	vpop	{d8}
   3b31c:	pop	{r4, r5, fp, pc}
   3b320:	vldr	d16, [r0]
   3b324:	vcmp.f64	d16, d8
   3b328:	vmrs	APSR_nzcv, fpscr
   3b32c:	bne	3b344 <flatcc_json_printer_double_field@@Base+0xcc>
   3b330:	ldrb	r0, [r5, #28]
   3b334:	vmov.f64	d8, d16
   3b338:	cmp	r0, #0
   3b33c:	bne	3b318 <flatcc_json_printer_double_field@@Base+0xa0>
   3b340:	b	3b2c8 <flatcc_json_printer_double_field@@Base+0x50>
   3b344:	vmov.f64	d8, d16
   3b348:	b	3b2c8 <flatcc_json_printer_double_field@@Base+0x50>

0003b34c <flatcc_json_printer_uint8_enum_field@@Base>:
   3b34c:	push	{r4, r5, r6, r7, fp, lr}
   3b350:	add	fp, sp, #16
   3b354:	mov	r6, r0
   3b358:	mov	r0, #4
   3b35c:	ldr	r4, [r1, #8]
   3b360:	ldr	ip, [fp, #16]
   3b364:	add	r5, r0, r2, lsl #1
   3b368:	ldr	r0, [fp, #12]
   3b36c:	ldr	r2, [fp, #8]
   3b370:	cmp	r5, r4
   3b374:	bge	3b394 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3b378:	ldr	r4, [r1, #4]
   3b37c:	add	r5, r4, r5
   3b380:	ldrh	r5, [r5]
   3b384:	cmp	r5, #0
   3b388:	ldrne	r4, [r1]
   3b38c:	addsne	r5, r4, r5
   3b390:	bne	3b494 <flatcc_json_printer_uint8_enum_field@@Base+0x148>
   3b394:	ldrb	r5, [r6, #29]
   3b398:	cmp	r5, #0
   3b39c:	mov	r5, r0
   3b3a0:	beq	3b4d0 <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   3b3a4:	ldr	r0, [r1, #16]
   3b3a8:	mov	r7, ip
   3b3ac:	add	r4, r0, #1
   3b3b0:	cmp	r0, #0
   3b3b4:	str	r4, [r1, #16]
   3b3b8:	beq	3b3d0 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3b3bc:	ldr	r0, [r6, #20]
   3b3c0:	add	r1, r0, #1
   3b3c4:	str	r1, [r6, #20]
   3b3c8:	mov	r1, #44	; 0x2c
   3b3cc:	strb	r1, [r0]
   3b3d0:	mov	r0, r6
   3b3d4:	mov	r1, r3
   3b3d8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b3dc:	ldrb	r0, [r6, #27]
   3b3e0:	cmp	r0, #0
   3b3e4:	beq	3b440 <flatcc_json_printer_uint8_enum_field@@Base+0xf4>
   3b3e8:	ldr	r0, [r6, #20]
   3b3ec:	mov	r1, #0
   3b3f0:	cmp	r5, #100	; 0x64
   3b3f4:	bcc	3b454 <flatcc_json_printer_uint8_enum_field@@Base+0x108>
   3b3f8:	strb	r1, [r0, #3]
   3b3fc:	movw	r1, #34079	; 0x851f
   3b400:	movt	r1, #20971	; 0x51eb
   3b404:	umull	r1, r2, r5, r1
   3b408:	mov	r1, #48	; 0x30
   3b40c:	orr	r1, r1, r2, lsr #5
   3b410:	strb	r1, [r0]
   3b414:	lsr	r1, r2, #5
   3b418:	mov	r2, #100	; 0x64
   3b41c:	mls	r1, r1, r2, r5
   3b420:	ldr	r2, [pc, #172]	; 3b4d4 <flatcc_json_printer_uint8_enum_field@@Base+0x188>
   3b424:	uxtb	r1, r1
   3b428:	add	r2, pc, r2
   3b42c:	add	r1, r2, r1, lsl #1
   3b430:	ldrh	r1, [r1]
   3b434:	strh	r1, [r0, #1]
   3b438:	mov	r0, #3
   3b43c:	b	3b4c4 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3b440:	mov	r0, r6
   3b444:	mov	r1, r5
   3b448:	mov	r2, r7
   3b44c:	pop	{r4, r5, r6, r7, fp, lr}
   3b450:	bx	r2
   3b454:	cmp	r5, #10
   3b458:	bcc	3b4b4 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
   3b45c:	strb	r1, [r0, #2]
   3b460:	movw	r1, #34079	; 0x851f
   3b464:	movt	r1, #20971	; 0x51eb
   3b468:	umull	r1, r2, r5, r1
   3b46c:	lsr	r1, r2, #5
   3b470:	mov	r2, #100	; 0x64
   3b474:	mls	r1, r1, r2, r5
   3b478:	ldr	r2, [pc, #88]	; 3b4d8 <flatcc_json_printer_uint8_enum_field@@Base+0x18c>
   3b47c:	add	r2, pc, r2
   3b480:	add	r1, r2, r1, lsl #1
   3b484:	ldrh	r1, [r1]
   3b488:	strh	r1, [r0]
   3b48c:	mov	r0, #2
   3b490:	b	3b4c4 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3b494:	ldrb	r5, [r5]
   3b498:	cmp	r5, r0
   3b49c:	bne	3b3a4 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3b4a0:	ldrb	r5, [r6, #28]
   3b4a4:	cmp	r5, #0
   3b4a8:	mov	r5, r0
   3b4ac:	popne	{r4, r5, r6, r7, fp, pc}
   3b4b0:	b	3b3a4 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3b4b4:	strb	r1, [r0, #1]
   3b4b8:	add	r1, r5, #48	; 0x30
   3b4bc:	strb	r1, [r0]
   3b4c0:	mov	r0, #1
   3b4c4:	ldr	r1, [r6, #20]
   3b4c8:	add	r0, r1, r0
   3b4cc:	str	r0, [r6, #20]
   3b4d0:	pop	{r4, r5, r6, r7, fp, pc}
   3b4d4:	andeq	pc, r0, r7, asr #27
   3b4d8:	andeq	pc, r0, r3, ror sp	; <UNPREDICTABLE>

0003b4dc <flatcc_json_printer_uint16_enum_field@@Base>:
   3b4dc:	push	{r4, r5, r6, r7, fp, lr}
   3b4e0:	add	fp, sp, #16
   3b4e4:	mov	r4, r0
   3b4e8:	mov	r0, #4
   3b4ec:	ldr	r7, [fp, #16]
   3b4f0:	ldr	ip, [fp, #12]
   3b4f4:	add	r5, r0, r2, lsl #1
   3b4f8:	ldr	r0, [r1, #8]
   3b4fc:	ldr	r2, [fp, #8]
   3b500:	cmp	r5, r0
   3b504:	bge	3b524 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3b508:	ldr	r0, [r1, #4]
   3b50c:	add	r0, r0, r5
   3b510:	ldrh	r5, [r0]
   3b514:	cmp	r5, #0
   3b518:	ldrne	r0, [r1]
   3b51c:	addsne	r5, r0, r5
   3b520:	bne	3b5a4 <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   3b524:	ldrb	r0, [r4, #29]
   3b528:	mov	r6, ip
   3b52c:	cmp	r0, #0
   3b530:	beq	3b58c <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3b534:	ldr	r0, [r1, #16]
   3b538:	add	r5, r0, #1
   3b53c:	cmp	r0, #0
   3b540:	str	r5, [r1, #16]
   3b544:	beq	3b55c <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   3b548:	ldr	r0, [r4, #20]
   3b54c:	add	r1, r0, #1
   3b550:	str	r1, [r4, #20]
   3b554:	mov	r1, #44	; 0x2c
   3b558:	strb	r1, [r0]
   3b55c:	mov	r0, r4
   3b560:	mov	r1, r3
   3b564:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b568:	ldrb	r0, [r4, #27]
   3b56c:	cmp	r0, #0
   3b570:	beq	3b590 <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   3b574:	ldr	r1, [r4, #20]
   3b578:	mov	r0, r6
   3b57c:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3b580:	ldr	r1, [r4, #20]
   3b584:	add	r0, r1, r0
   3b588:	str	r0, [r4, #20]
   3b58c:	pop	{r4, r5, r6, r7, fp, pc}
   3b590:	mov	r0, r4
   3b594:	mov	r1, r6
   3b598:	mov	r2, r7
   3b59c:	pop	{r4, r5, r6, r7, fp, lr}
   3b5a0:	bx	r2
   3b5a4:	ldrh	r6, [r5]
   3b5a8:	cmp	r6, ip
   3b5ac:	bne	3b534 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3b5b0:	ldrb	r0, [r4, #28]
   3b5b4:	mov	r6, ip
   3b5b8:	cmp	r0, #0
   3b5bc:	popne	{r4, r5, r6, r7, fp, pc}
   3b5c0:	b	3b534 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003b5c4 <flatcc_json_printer_uint32_enum_field@@Base>:
   3b5c4:	push	{r4, r5, r6, r7, fp, lr}
   3b5c8:	add	fp, sp, #16
   3b5cc:	mov	r4, r0
   3b5d0:	mov	r0, #4
   3b5d4:	ldr	r7, [fp, #16]
   3b5d8:	ldr	ip, [fp, #12]
   3b5dc:	add	r5, r0, r2, lsl #1
   3b5e0:	ldr	r0, [r1, #8]
   3b5e4:	ldr	r2, [fp, #8]
   3b5e8:	cmp	r5, r0
   3b5ec:	bge	3b60c <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3b5f0:	ldr	r0, [r1, #4]
   3b5f4:	add	r0, r0, r5
   3b5f8:	ldrh	r5, [r0]
   3b5fc:	cmp	r5, #0
   3b600:	ldrne	r0, [r1]
   3b604:	addsne	r5, r0, r5
   3b608:	bne	3b68c <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   3b60c:	ldrb	r0, [r4, #29]
   3b610:	mov	r6, ip
   3b614:	cmp	r0, #0
   3b618:	beq	3b674 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3b61c:	ldr	r0, [r1, #16]
   3b620:	add	r5, r0, #1
   3b624:	cmp	r0, #0
   3b628:	str	r5, [r1, #16]
   3b62c:	beq	3b644 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   3b630:	ldr	r0, [r4, #20]
   3b634:	add	r1, r0, #1
   3b638:	str	r1, [r4, #20]
   3b63c:	mov	r1, #44	; 0x2c
   3b640:	strb	r1, [r0]
   3b644:	mov	r0, r4
   3b648:	mov	r1, r3
   3b64c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b650:	ldrb	r0, [r4, #27]
   3b654:	cmp	r0, #0
   3b658:	beq	3b678 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   3b65c:	ldr	r1, [r4, #20]
   3b660:	mov	r0, r6
   3b664:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3b668:	ldr	r1, [r4, #20]
   3b66c:	add	r0, r1, r0
   3b670:	str	r0, [r4, #20]
   3b674:	pop	{r4, r5, r6, r7, fp, pc}
   3b678:	mov	r0, r4
   3b67c:	mov	r1, r6
   3b680:	mov	r2, r7
   3b684:	pop	{r4, r5, r6, r7, fp, lr}
   3b688:	bx	r2
   3b68c:	ldr	r6, [r5]
   3b690:	cmp	r6, ip
   3b694:	bne	3b61c <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3b698:	ldrb	r0, [r4, #28]
   3b69c:	mov	r6, ip
   3b6a0:	cmp	r0, #0
   3b6a4:	popne	{r4, r5, r6, r7, fp, pc}
   3b6a8:	b	3b61c <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003b6ac <flatcc_json_printer_uint64_enum_field@@Base>:
   3b6ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b6b0:	add	fp, sp, #24
   3b6b4:	mov	r4, r0
   3b6b8:	mov	r0, #4
   3b6bc:	ldr	ip, [fp, #20]
   3b6c0:	ldr	r6, [fp, #16]
   3b6c4:	ldr	r5, [fp, #24]
   3b6c8:	add	r7, r0, r2, lsl #1
   3b6cc:	ldr	r0, [r1, #8]
   3b6d0:	ldr	r2, [fp, #8]
   3b6d4:	cmp	r7, r0
   3b6d8:	bge	3b6f8 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3b6dc:	ldr	r0, [r1, #4]
   3b6e0:	add	r0, r0, r7
   3b6e4:	ldrh	r7, [r0]
   3b6e8:	cmp	r7, #0
   3b6ec:	ldrne	r0, [r1]
   3b6f0:	addsne	r7, r0, r7
   3b6f4:	bne	3b784 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   3b6f8:	ldrb	r0, [r4, #29]
   3b6fc:	mov	r8, r6
   3b700:	mov	r7, ip
   3b704:	cmp	r0, #0
   3b708:	beq	3b768 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3b70c:	ldr	r0, [r1, #16]
   3b710:	add	r6, r0, #1
   3b714:	cmp	r0, #0
   3b718:	str	r6, [r1, #16]
   3b71c:	beq	3b734 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   3b720:	ldr	r0, [r4, #20]
   3b724:	add	r1, r0, #1
   3b728:	str	r1, [r4, #20]
   3b72c:	mov	r1, #44	; 0x2c
   3b730:	strb	r1, [r0]
   3b734:	mov	r0, r4
   3b738:	mov	r1, r3
   3b73c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b740:	ldrb	r0, [r4, #27]
   3b744:	cmp	r0, #0
   3b748:	beq	3b76c <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3b74c:	ldr	r2, [r4, #20]
   3b750:	mov	r0, r8
   3b754:	mov	r1, r7
   3b758:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3b75c:	ldr	r1, [r4, #20]
   3b760:	add	r0, r1, r0
   3b764:	str	r0, [r4, #20]
   3b768:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b76c:	mov	r0, r4
   3b770:	mov	r2, r8
   3b774:	mov	r3, r7
   3b778:	mov	r1, r5
   3b77c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3b780:	bx	r1
   3b784:	ldr	r8, [r7]
   3b788:	ldr	r7, [r7, #4]
   3b78c:	eor	lr, r7, ip
   3b790:	eor	r0, r8, r6
   3b794:	orrs	r0, r0, lr
   3b798:	bne	3b70c <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3b79c:	ldrb	r0, [r4, #28]
   3b7a0:	mov	r8, r6
   3b7a4:	mov	r7, ip
   3b7a8:	cmp	r0, #0
   3b7ac:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b7b0:	b	3b70c <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003b7b4 <flatcc_json_printer_int8_enum_field@@Base>:
   3b7b4:	push	{r4, r5, r6, r7, fp, lr}
   3b7b8:	add	fp, sp, #16
   3b7bc:	mov	r6, r0
   3b7c0:	mov	r0, #4
   3b7c4:	ldr	r4, [r1, #8]
   3b7c8:	ldr	ip, [fp, #16]
   3b7cc:	add	r5, r0, r2, lsl #1
   3b7d0:	ldr	r0, [fp, #12]
   3b7d4:	ldr	r2, [fp, #8]
   3b7d8:	cmp	r5, r4
   3b7dc:	bge	3b7fc <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3b7e0:	ldr	r4, [r1, #4]
   3b7e4:	add	r5, r4, r5
   3b7e8:	ldrh	r5, [r5]
   3b7ec:	cmp	r5, #0
   3b7f0:	ldrne	r4, [r1]
   3b7f4:	addsne	r5, r4, r5
   3b7f8:	bne	3b920 <flatcc_json_printer_int8_enum_field@@Base+0x16c>
   3b7fc:	ldrb	r5, [r6, #29]
   3b800:	cmp	r5, #0
   3b804:	mov	r5, r0
   3b808:	beq	3b968 <flatcc_json_printer_int8_enum_field@@Base+0x1b4>
   3b80c:	ldr	r0, [r1, #16]
   3b810:	mov	r7, ip
   3b814:	add	r4, r0, #1
   3b818:	cmp	r0, #0
   3b81c:	str	r4, [r1, #16]
   3b820:	beq	3b838 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3b824:	ldr	r0, [r6, #20]
   3b828:	add	r1, r0, #1
   3b82c:	str	r1, [r6, #20]
   3b830:	mov	r1, #44	; 0x2c
   3b834:	strb	r1, [r0]
   3b838:	mov	r0, r6
   3b83c:	mov	r1, r3
   3b840:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3b844:	ldrb	r0, [r6, #27]
   3b848:	cmp	r0, #0
   3b84c:	beq	3b8c8 <flatcc_json_printer_int8_enum_field@@Base+0x114>
   3b850:	sxtb	r2, r5
   3b854:	ldr	r0, [r6, #20]
   3b858:	uxtb	r1, r5
   3b85c:	cmn	r2, #1
   3b860:	lsr	r1, r1, #7
   3b864:	movle	r2, #45	; 0x2d
   3b868:	rsble	r5, r5, #0
   3b86c:	strble	r2, [r0], #1
   3b870:	uxtb	r2, r5
   3b874:	cmp	r2, #100	; 0x64
   3b878:	bcc	3b8dc <flatcc_json_printer_int8_enum_field@@Base+0x128>
   3b87c:	mov	r3, #0
   3b880:	strb	r3, [r0, #3]
   3b884:	movw	r3, #34079	; 0x851f
   3b888:	movt	r3, #20971	; 0x51eb
   3b88c:	umull	r3, r5, r2, r3
   3b890:	mov	r3, #48	; 0x30
   3b894:	orr	r3, r3, r5, lsr #5
   3b898:	strb	r3, [r0]
   3b89c:	lsr	r3, r5, #5
   3b8a0:	mov	r5, #100	; 0x64
   3b8a4:	mls	r2, r3, r5, r2
   3b8a8:	ldr	r3, [pc, #188]	; 3b96c <flatcc_json_printer_int8_enum_field@@Base+0x1b8>
   3b8ac:	uxtb	r2, r2
   3b8b0:	add	r3, pc, r3
   3b8b4:	add	r2, r3, r2, lsl #1
   3b8b8:	ldrh	r2, [r2]
   3b8bc:	strh	r2, [r0, #1]
   3b8c0:	mov	r0, #3
   3b8c4:	b	3b958 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3b8c8:	sxtb	r1, r5
   3b8cc:	mov	r0, r6
   3b8d0:	mov	r2, r7
   3b8d4:	pop	{r4, r5, r6, r7, fp, lr}
   3b8d8:	bx	r2
   3b8dc:	cmp	r2, #10
   3b8e0:	bcc	3b944 <flatcc_json_printer_int8_enum_field@@Base+0x190>
   3b8e4:	mov	r3, #0
   3b8e8:	strb	r3, [r0, #2]
   3b8ec:	movw	r3, #34079	; 0x851f
   3b8f0:	movt	r3, #20971	; 0x51eb
   3b8f4:	umull	r3, r5, r2, r3
   3b8f8:	lsr	r3, r5, #5
   3b8fc:	mov	r5, #100	; 0x64
   3b900:	mls	r2, r3, r5, r2
   3b904:	ldr	r3, [pc, #100]	; 3b970 <flatcc_json_printer_int8_enum_field@@Base+0x1bc>
   3b908:	add	r3, pc, r3
   3b90c:	add	r2, r3, r2, lsl #1
   3b910:	ldrh	r2, [r2]
   3b914:	strh	r2, [r0]
   3b918:	mov	r0, #2
   3b91c:	b	3b958 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3b920:	ldrb	r5, [r5]
   3b924:	uxtb	r4, r0
   3b928:	cmp	r5, r4
   3b92c:	bne	3b80c <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3b930:	ldrb	r5, [r6, #28]
   3b934:	cmp	r5, #0
   3b938:	mov	r5, r0
   3b93c:	popne	{r4, r5, r6, r7, fp, pc}
   3b940:	b	3b80c <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3b944:	mov	r2, #0
   3b948:	strb	r2, [r0, #1]
   3b94c:	add	r2, r5, #48	; 0x30
   3b950:	strb	r2, [r0]
   3b954:	mov	r0, #1
   3b958:	add	r0, r0, r1
   3b95c:	ldr	r1, [r6, #20]
   3b960:	add	r0, r1, r0
   3b964:	str	r0, [r6, #20]
   3b968:	pop	{r4, r5, r6, r7, fp, pc}
   3b96c:	andeq	pc, r0, pc, lsr r9	; <UNPREDICTABLE>
   3b970:	andeq	pc, r0, r7, ror #17

0003b974 <flatcc_json_printer_int16_enum_field@@Base>:
   3b974:	push	{r4, r5, r6, r7, fp, lr}
   3b978:	add	fp, sp, #16
   3b97c:	mov	r4, r0
   3b980:	mov	r0, #4
   3b984:	ldr	r5, [r1, #8]
   3b988:	ldr	ip, [fp, #16]
   3b98c:	add	r6, r0, r2, lsl #1
   3b990:	ldr	r0, [fp, #12]
   3b994:	ldr	r2, [fp, #8]
   3b998:	cmp	r6, r5
   3b99c:	bge	3b9bc <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3b9a0:	ldr	r5, [r1, #4]
   3b9a4:	add	r6, r5, r6
   3b9a8:	ldrh	r6, [r6]
   3b9ac:	cmp	r6, #0
   3b9b0:	ldrne	r5, [r1]
   3b9b4:	addsne	r6, r5, r6
   3b9b8:	bne	3ba60 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   3b9bc:	ldrb	r6, [r4, #29]
   3b9c0:	mov	r5, r0
   3b9c4:	cmp	r6, #0
   3b9c8:	beq	3ba48 <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   3b9cc:	ldr	r0, [r1, #16]
   3b9d0:	mov	r7, ip
   3b9d4:	add	r6, r0, #1
   3b9d8:	cmp	r0, #0
   3b9dc:	str	r6, [r1, #16]
   3b9e0:	beq	3b9f8 <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3b9e4:	ldr	r0, [r4, #20]
   3b9e8:	add	r1, r0, #1
   3b9ec:	str	r1, [r4, #20]
   3b9f0:	mov	r1, #44	; 0x2c
   3b9f4:	strb	r1, [r0]
   3b9f8:	mov	r0, r4
   3b9fc:	mov	r1, r3
   3ba00:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3ba04:	ldrb	r0, [r4, #27]
   3ba08:	cmp	r0, #0
   3ba0c:	beq	3ba4c <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   3ba10:	uxth	r0, r5
   3ba14:	ldr	r1, [r4, #20]
   3ba18:	lsr	r6, r0, #15
   3ba1c:	sxth	r0, r5
   3ba20:	cmn	r0, #1
   3ba24:	movle	r0, #45	; 0x2d
   3ba28:	rsble	r5, r5, #0
   3ba2c:	strble	r0, [r1], #1
   3ba30:	uxth	r0, r5
   3ba34:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3ba38:	ldr	r1, [r4, #20]
   3ba3c:	add	r0, r0, r6
   3ba40:	add	r0, r1, r0
   3ba44:	str	r0, [r4, #20]
   3ba48:	pop	{r4, r5, r6, r7, fp, pc}
   3ba4c:	sxth	r1, r5
   3ba50:	mov	r0, r4
   3ba54:	mov	r2, r7
   3ba58:	pop	{r4, r5, r6, r7, fp, lr}
   3ba5c:	bx	r2
   3ba60:	ldrh	r5, [r6]
   3ba64:	uxth	r6, r0
   3ba68:	cmp	r5, r6
   3ba6c:	bne	3b9cc <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3ba70:	ldrb	r6, [r4, #28]
   3ba74:	mov	r5, r0
   3ba78:	cmp	r6, #0
   3ba7c:	popne	{r4, r5, r6, r7, fp, pc}
   3ba80:	b	3b9cc <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003ba84 <flatcc_json_printer_int32_enum_field@@Base>:
   3ba84:	push	{r4, r5, r6, r7, fp, lr}
   3ba88:	add	fp, sp, #16
   3ba8c:	mov	r4, r0
   3ba90:	mov	r0, #4
   3ba94:	ldr	r5, [r1, #8]
   3ba98:	ldr	ip, [fp, #16]
   3ba9c:	add	r6, r0, r2, lsl #1
   3baa0:	ldr	r0, [fp, #12]
   3baa4:	ldr	r2, [fp, #8]
   3baa8:	cmp	r6, r5
   3baac:	bge	3bacc <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3bab0:	ldr	r5, [r1, #4]
   3bab4:	add	r6, r5, r6
   3bab8:	ldrh	r6, [r6]
   3babc:	cmp	r6, #0
   3bac0:	ldrne	r5, [r1]
   3bac4:	addsne	r6, r5, r6
   3bac8:	bne	3bb68 <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   3bacc:	ldrb	r6, [r4, #29]
   3bad0:	mov	r5, r0
   3bad4:	cmp	r6, #0
   3bad8:	beq	3bb50 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3badc:	ldr	r0, [r1, #16]
   3bae0:	mov	r7, ip
   3bae4:	add	r6, r0, #1
   3bae8:	cmp	r0, #0
   3baec:	str	r6, [r1, #16]
   3baf0:	beq	3bb08 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3baf4:	ldr	r0, [r4, #20]
   3baf8:	add	r1, r0, #1
   3bafc:	str	r1, [r4, #20]
   3bb00:	mov	r1, #44	; 0x2c
   3bb04:	strb	r1, [r0]
   3bb08:	mov	r0, r4
   3bb0c:	mov	r1, r3
   3bb10:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3bb14:	ldrb	r0, [r4, #27]
   3bb18:	cmp	r0, #0
   3bb1c:	beq	3bb54 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   3bb20:	ldr	r1, [r4, #20]
   3bb24:	cmn	r5, #1
   3bb28:	lsr	r6, r5, #31
   3bb2c:	movle	r0, #45	; 0x2d
   3bb30:	rsble	r5, r5, #0
   3bb34:	strble	r0, [r1], #1
   3bb38:	mov	r0, r5
   3bb3c:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3bb40:	ldr	r1, [r4, #20]
   3bb44:	add	r0, r0, r6
   3bb48:	add	r0, r1, r0
   3bb4c:	str	r0, [r4, #20]
   3bb50:	pop	{r4, r5, r6, r7, fp, pc}
   3bb54:	mov	r0, r4
   3bb58:	mov	r1, r5
   3bb5c:	mov	r2, r7
   3bb60:	pop	{r4, r5, r6, r7, fp, lr}
   3bb64:	bx	r2
   3bb68:	ldr	r5, [r6]
   3bb6c:	cmp	r5, r0
   3bb70:	bne	3badc <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3bb74:	ldrb	r6, [r4, #28]
   3bb78:	mov	r5, r0
   3bb7c:	cmp	r6, #0
   3bb80:	popne	{r4, r5, r6, r7, fp, pc}
   3bb84:	b	3badc <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003bb88 <flatcc_json_printer_int64_enum_field@@Base>:
   3bb88:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3bb8c:	add	fp, sp, #24
   3bb90:	mov	r4, r0
   3bb94:	mov	r0, #4
   3bb98:	ldr	r5, [r1, #8]
   3bb9c:	ldr	r6, [fp, #16]
   3bba0:	ldr	r9, [fp, #24]
   3bba4:	add	r7, r0, r2, lsl #1
   3bba8:	ldr	r0, [fp, #20]
   3bbac:	ldr	r2, [fp, #8]
   3bbb0:	cmp	r7, r5
   3bbb4:	bge	3bbd4 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3bbb8:	ldr	r5, [r1, #4]
   3bbbc:	add	r7, r5, r7
   3bbc0:	ldrh	r7, [r7]
   3bbc4:	cmp	r7, #0
   3bbc8:	ldrne	r5, [r1]
   3bbcc:	addsne	r7, r5, r7
   3bbd0:	bne	3bc80 <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   3bbd4:	ldrb	r7, [r4, #29]
   3bbd8:	mov	r8, r6
   3bbdc:	cmp	r7, #0
   3bbe0:	mov	r7, r0
   3bbe4:	beq	3bc64 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3bbe8:	ldr	r0, [r1, #16]
   3bbec:	add	r6, r0, #1
   3bbf0:	cmp	r0, #0
   3bbf4:	str	r6, [r1, #16]
   3bbf8:	beq	3bc10 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   3bbfc:	ldr	r0, [r4, #20]
   3bc00:	add	r1, r0, #1
   3bc04:	str	r1, [r4, #20]
   3bc08:	mov	r1, #44	; 0x2c
   3bc0c:	strb	r1, [r0]
   3bc10:	mov	r0, r4
   3bc14:	mov	r1, r3
   3bc18:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3bc1c:	ldrb	r0, [r4, #27]
   3bc20:	cmp	r0, #0
   3bc24:	beq	3bc68 <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   3bc28:	ldr	r2, [r4, #20]
   3bc2c:	lsr	r5, r7, #31
   3bc30:	cmn	r7, #1
   3bc34:	bgt	3bc48 <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   3bc38:	mov	r0, #45	; 0x2d
   3bc3c:	rsbs	r8, r8, #0
   3bc40:	strb	r0, [r2], #1
   3bc44:	rsc	r7, r7, #0
   3bc48:	mov	r0, r8
   3bc4c:	mov	r1, r7
   3bc50:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3bc54:	ldr	r1, [r4, #20]
   3bc58:	add	r0, r0, r5
   3bc5c:	add	r0, r1, r0
   3bc60:	str	r0, [r4, #20]
   3bc64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3bc68:	mov	r0, r4
   3bc6c:	mov	r2, r8
   3bc70:	mov	r3, r7
   3bc74:	mov	r1, r9
   3bc78:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3bc7c:	bx	r1
   3bc80:	ldr	r8, [r7]
   3bc84:	ldr	r7, [r7, #4]
   3bc88:	eor	ip, r7, r0
   3bc8c:	eor	r5, r8, r6
   3bc90:	orrs	r5, r5, ip
   3bc94:	bne	3bbe8 <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3bc98:	ldrb	r7, [r4, #28]
   3bc9c:	mov	r8, r6
   3bca0:	cmp	r7, #0
   3bca4:	mov	r7, r0
   3bca8:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   3bcac:	b	3bbe8 <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003bcb0 <flatcc_json_printer_bool_enum_field@@Base>:
   3bcb0:	push	{r4, r5, r6, r7, fp, lr}
   3bcb4:	add	fp, sp, #16
   3bcb8:	mov	r4, r0
   3bcbc:	mov	r0, #4
   3bcc0:	ldr	r7, [fp, #16]
   3bcc4:	ldr	ip, [fp, #12]
   3bcc8:	add	r5, r0, r2, lsl #1
   3bccc:	ldr	r0, [r1, #8]
   3bcd0:	ldr	r2, [fp, #8]
   3bcd4:	cmp	r5, r0
   3bcd8:	bge	3bcf8 <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3bcdc:	ldr	r0, [r1, #4]
   3bce0:	add	r0, r0, r5
   3bce4:	ldrh	r5, [r0]
   3bce8:	cmp	r5, #0
   3bcec:	ldrne	r0, [r1]
   3bcf0:	addsne	r5, r0, r5
   3bcf4:	bne	3bdac <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   3bcf8:	ldrb	r0, [r4, #29]
   3bcfc:	mov	r6, ip
   3bd00:	cmp	r0, #0
   3bd04:	beq	3bda8 <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3bd08:	ldr	r0, [r1, #16]
   3bd0c:	add	r5, r0, #1
   3bd10:	cmp	r0, #0
   3bd14:	str	r5, [r1, #16]
   3bd18:	beq	3bd30 <flatcc_json_printer_bool_enum_field@@Base+0x80>
   3bd1c:	ldr	r0, [r4, #20]
   3bd20:	add	r1, r0, #1
   3bd24:	str	r1, [r4, #20]
   3bd28:	mov	r1, #44	; 0x2c
   3bd2c:	strb	r1, [r0]
   3bd30:	mov	r0, r4
   3bd34:	mov	r1, r3
   3bd38:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3bd3c:	ldrb	r0, [r4, #27]
   3bd40:	cmp	r0, #0
   3bd44:	beq	3bd70 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   3bd48:	ldr	r0, [r4, #20]
   3bd4c:	cmp	r6, #0
   3bd50:	beq	3bd84 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   3bd54:	mov	r1, #0
   3bd58:	strb	r1, [r0, #4]
   3bd5c:	movw	r1, #29300	; 0x7274
   3bd60:	movt	r1, #25973	; 0x6575
   3bd64:	str	r1, [r0]
   3bd68:	mov	r0, #4
   3bd6c:	b	3bd9c <flatcc_json_printer_bool_enum_field@@Base+0xec>
   3bd70:	mov	r0, r4
   3bd74:	mov	r1, r6
   3bd78:	mov	r2, r7
   3bd7c:	pop	{r4, r5, r6, r7, fp, lr}
   3bd80:	bx	r2
   3bd84:	mov	r1, #101	; 0x65
   3bd88:	strh	r1, [r0, #4]
   3bd8c:	movw	r1, #24934	; 0x6166
   3bd90:	movt	r1, #29548	; 0x736c
   3bd94:	str	r1, [r0]
   3bd98:	mov	r0, #5
   3bd9c:	ldr	r1, [r4, #20]
   3bda0:	add	r0, r1, r0
   3bda4:	str	r0, [r4, #20]
   3bda8:	pop	{r4, r5, r6, r7, fp, pc}
   3bdac:	ldrb	r6, [r5]
   3bdb0:	cmp	r6, ip
   3bdb4:	bne	3bd08 <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3bdb8:	ldrb	r0, [r4, #28]
   3bdbc:	mov	r6, ip
   3bdc0:	cmp	r0, #0
   3bdc4:	popne	{r4, r5, r6, r7, fp, pc}
   3bdc8:	b	3bd08 <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003bdcc <flatcc_json_printer_uint8_struct_field@@Base>:
   3bdcc:	push	{r4, r5, r6, sl, fp, lr}
   3bdd0:	add	fp, sp, #16
   3bdd4:	mov	r4, r1
   3bdd8:	ldrb	r6, [r2, r3]
   3bddc:	ldr	r2, [fp, #12]
   3bde0:	ldr	r1, [fp, #8]
   3bde4:	mov	r5, r0
   3bde8:	cmp	r4, #0
   3bdec:	beq	3be04 <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   3bdf0:	ldr	r0, [r5, #20]
   3bdf4:	add	r3, r0, #1
   3bdf8:	str	r3, [r5, #20]
   3bdfc:	mov	r3, #44	; 0x2c
   3be00:	strb	r3, [r0]
   3be04:	mov	r0, r5
   3be08:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3be0c:	ldr	r0, [r5, #20]
   3be10:	mov	r1, #0
   3be14:	cmp	r6, #100	; 0x64
   3be18:	bcc	3be64 <flatcc_json_printer_uint8_struct_field@@Base+0x98>
   3be1c:	strb	r1, [r0, #3]
   3be20:	movw	r1, #34079	; 0x851f
   3be24:	movt	r1, #20971	; 0x51eb
   3be28:	umull	r1, r2, r6, r1
   3be2c:	mov	r1, #48	; 0x30
   3be30:	orr	r1, r1, r2, lsr #5
   3be34:	strb	r1, [r0]
   3be38:	lsr	r1, r2, #5
   3be3c:	mov	r2, #100	; 0x64
   3be40:	mls	r1, r1, r2, r6
   3be44:	ldr	r2, [pc, #120]	; 3bec4 <flatcc_json_printer_uint8_struct_field@@Base+0xf8>
   3be48:	uxtb	r1, r1
   3be4c:	add	r2, pc, r2
   3be50:	add	r1, r2, r1, lsl #1
   3be54:	ldrh	r1, [r1]
   3be58:	strh	r1, [r0, #1]
   3be5c:	mov	r0, #3
   3be60:	b	3beb4 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   3be64:	cmp	r6, #10
   3be68:	bcc	3bea4 <flatcc_json_printer_uint8_struct_field@@Base+0xd8>
   3be6c:	strb	r1, [r0, #2]
   3be70:	movw	r1, #34079	; 0x851f
   3be74:	movt	r1, #20971	; 0x51eb
   3be78:	umull	r1, r2, r6, r1
   3be7c:	lsr	r1, r2, #5
   3be80:	mov	r2, #100	; 0x64
   3be84:	mls	r1, r1, r2, r6
   3be88:	ldr	r2, [pc, #56]	; 3bec8 <flatcc_json_printer_uint8_struct_field@@Base+0xfc>
   3be8c:	add	r2, pc, r2
   3be90:	add	r1, r2, r1, lsl #1
   3be94:	ldrh	r1, [r1]
   3be98:	strh	r1, [r0]
   3be9c:	mov	r0, #2
   3bea0:	b	3beb4 <flatcc_json_printer_uint8_struct_field@@Base+0xe8>
   3bea4:	strb	r1, [r0, #1]
   3bea8:	add	r1, r6, #48	; 0x30
   3beac:	strb	r1, [r0]
   3beb0:	mov	r0, #1
   3beb4:	ldr	r1, [r5, #20]
   3beb8:	add	r0, r1, r0
   3bebc:	str	r0, [r5, #20]
   3bec0:	pop	{r4, r5, r6, sl, fp, pc}
   3bec4:	andeq	pc, r0, r3, lsr #7
   3bec8:	andeq	pc, r0, r3, ror #6

0003becc <flatcc_json_printer_uint16_struct_field@@Base>:
   3becc:	push	{r4, r5, r6, sl, fp, lr}
   3bed0:	add	fp, sp, #16
   3bed4:	mov	r4, r0
   3bed8:	add	r0, r2, r3
   3bedc:	mov	r5, r1
   3bee0:	ldr	r2, [fp, #12]
   3bee4:	ldr	r1, [fp, #8]
   3bee8:	ldrh	r6, [r0]
   3beec:	cmp	r5, #0
   3bef0:	beq	3bf08 <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   3bef4:	ldr	r0, [r4, #20]
   3bef8:	add	r3, r0, #1
   3befc:	str	r3, [r4, #20]
   3bf00:	mov	r3, #44	; 0x2c
   3bf04:	strb	r3, [r0]
   3bf08:	mov	r0, r4
   3bf0c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3bf10:	ldr	r1, [r4, #20]
   3bf14:	mov	r0, r6
   3bf18:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3bf1c:	ldr	r1, [r4, #20]
   3bf20:	add	r0, r1, r0
   3bf24:	str	r0, [r4, #20]
   3bf28:	pop	{r4, r5, r6, sl, fp, pc}

0003bf2c <flatcc_json_printer_uint32_struct_field@@Base>:
   3bf2c:	push	{r4, r5, r6, sl, fp, lr}
   3bf30:	add	fp, sp, #16
   3bf34:	mov	r5, r1
   3bf38:	ldr	r6, [r2, r3]
   3bf3c:	ldr	r2, [fp, #12]
   3bf40:	ldr	r1, [fp, #8]
   3bf44:	mov	r4, r0
   3bf48:	cmp	r5, #0
   3bf4c:	beq	3bf64 <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   3bf50:	ldr	r0, [r4, #20]
   3bf54:	add	r3, r0, #1
   3bf58:	str	r3, [r4, #20]
   3bf5c:	mov	r3, #44	; 0x2c
   3bf60:	strb	r3, [r0]
   3bf64:	mov	r0, r4
   3bf68:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3bf6c:	ldr	r1, [r4, #20]
   3bf70:	mov	r0, r6
   3bf74:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3bf78:	ldr	r1, [r4, #20]
   3bf7c:	add	r0, r1, r0
   3bf80:	str	r0, [r4, #20]
   3bf84:	pop	{r4, r5, r6, sl, fp, pc}

0003bf88 <flatcc_json_printer_uint64_struct_field@@Base>:
   3bf88:	push	{r4, r5, r6, r7, fp, lr}
   3bf8c:	add	fp, sp, #16
   3bf90:	ldr	r7, [r2, r3]!
   3bf94:	mov	r5, r1
   3bf98:	ldr	r1, [fp, #8]
   3bf9c:	mov	r4, r0
   3bfa0:	cmp	r5, #0
   3bfa4:	ldr	r6, [r2, #4]
   3bfa8:	ldr	r2, [fp, #12]
   3bfac:	beq	3bfc4 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   3bfb0:	ldr	r0, [r4, #20]
   3bfb4:	add	r3, r0, #1
   3bfb8:	str	r3, [r4, #20]
   3bfbc:	mov	r3, #44	; 0x2c
   3bfc0:	strb	r3, [r0]
   3bfc4:	mov	r0, r4
   3bfc8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3bfcc:	ldr	r2, [r4, #20]
   3bfd0:	mov	r0, r7
   3bfd4:	mov	r1, r6
   3bfd8:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3bfdc:	ldr	r1, [r4, #20]
   3bfe0:	add	r0, r1, r0
   3bfe4:	str	r0, [r4, #20]
   3bfe8:	pop	{r4, r5, r6, r7, fp, pc}

0003bfec <flatcc_json_printer_int8_struct_field@@Base>:
   3bfec:	push	{r4, r5, r6, sl, fp, lr}
   3bff0:	add	fp, sp, #16
   3bff4:	mov	r5, r0
   3bff8:	add	r0, r2, r3
   3bffc:	mov	r4, r1
   3c000:	ldr	r2, [fp, #12]
   3c004:	ldr	r1, [fp, #8]
   3c008:	ldrsb	r6, [r0]
   3c00c:	cmp	r4, #0
   3c010:	beq	3c028 <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   3c014:	ldr	r0, [r5, #20]
   3c018:	add	r3, r0, #1
   3c01c:	str	r3, [r5, #20]
   3c020:	mov	r3, #44	; 0x2c
   3c024:	strb	r3, [r0]
   3c028:	mov	r0, r5
   3c02c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c030:	ldr	r0, [r5, #20]
   3c034:	cmn	r6, #1
   3c038:	uxtb	r1, r6
   3c03c:	movle	r2, #45	; 0x2d
   3c040:	rsble	r6, r6, #0
   3c044:	lsr	r1, r1, #7
   3c048:	strble	r2, [r0], #1
   3c04c:	uxtb	r2, r6
   3c050:	cmp	r2, #100	; 0x64
   3c054:	bcc	3c0a4 <flatcc_json_printer_int8_struct_field@@Base+0xb8>
   3c058:	mov	r3, #0
   3c05c:	strb	r3, [r0, #3]
   3c060:	movw	r3, #34079	; 0x851f
   3c064:	movt	r3, #20971	; 0x51eb
   3c068:	umull	r3, r6, r2, r3
   3c06c:	mov	r3, #48	; 0x30
   3c070:	orr	r3, r3, r6, lsr #5
   3c074:	strb	r3, [r0]
   3c078:	lsr	r3, r6, #5
   3c07c:	mov	r6, #100	; 0x64
   3c080:	mls	r2, r3, r6, r2
   3c084:	ldr	r3, [pc, #132]	; 3c110 <flatcc_json_printer_int8_struct_field@@Base+0x124>
   3c088:	uxtb	r2, r2
   3c08c:	add	r3, pc, r3
   3c090:	add	r2, r3, r2, lsl #1
   3c094:	ldrh	r2, [r2]
   3c098:	strh	r2, [r0, #1]
   3c09c:	mov	r0, #3
   3c0a0:	b	3c0fc <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3c0a4:	cmp	r2, #10
   3c0a8:	bcc	3c0e8 <flatcc_json_printer_int8_struct_field@@Base+0xfc>
   3c0ac:	mov	r3, #0
   3c0b0:	strb	r3, [r0, #2]
   3c0b4:	movw	r3, #34079	; 0x851f
   3c0b8:	movt	r3, #20971	; 0x51eb
   3c0bc:	umull	r3, r6, r2, r3
   3c0c0:	lsr	r3, r6, #5
   3c0c4:	mov	r6, #100	; 0x64
   3c0c8:	mls	r2, r3, r6, r2
   3c0cc:	ldr	r3, [pc, #64]	; 3c114 <flatcc_json_printer_int8_struct_field@@Base+0x128>
   3c0d0:	add	r3, pc, r3
   3c0d4:	add	r2, r3, r2, lsl #1
   3c0d8:	ldrh	r2, [r2]
   3c0dc:	strh	r2, [r0]
   3c0e0:	mov	r0, #2
   3c0e4:	b	3c0fc <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3c0e8:	mov	r2, #0
   3c0ec:	strb	r2, [r0, #1]
   3c0f0:	add	r2, r6, #48	; 0x30
   3c0f4:	strb	r2, [r0]
   3c0f8:	mov	r0, #1
   3c0fc:	add	r0, r0, r1
   3c100:	ldr	r1, [r5, #20]
   3c104:	add	r0, r1, r0
   3c108:	str	r0, [r5, #20]
   3c10c:	pop	{r4, r5, r6, sl, fp, pc}
   3c110:	andeq	pc, r0, r3, ror #2
   3c114:	andeq	pc, r0, pc, lsl r1	; <UNPREDICTABLE>

0003c118 <flatcc_json_printer_int16_struct_field@@Base>:
   3c118:	push	{r4, r5, r6, sl, fp, lr}
   3c11c:	add	fp, sp, #16
   3c120:	mov	r4, r0
   3c124:	add	r0, r2, r3
   3c128:	mov	ip, r1
   3c12c:	ldr	r2, [fp, #12]
   3c130:	ldr	r1, [fp, #8]
   3c134:	ldrsh	r5, [r0]
   3c138:	cmp	ip, #0
   3c13c:	beq	3c154 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   3c140:	ldr	r0, [r4, #20]
   3c144:	add	r3, r0, #1
   3c148:	str	r3, [r4, #20]
   3c14c:	mov	r3, #44	; 0x2c
   3c150:	strb	r3, [r0]
   3c154:	mov	r0, r4
   3c158:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c15c:	ldr	r1, [r4, #20]
   3c160:	uxth	r0, r5
   3c164:	cmn	r5, #1
   3c168:	rsble	r5, r5, #0
   3c16c:	lsr	r6, r0, #15
   3c170:	movle	r0, #45	; 0x2d
   3c174:	strble	r0, [r1], #1
   3c178:	uxth	r0, r5
   3c17c:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3c180:	ldr	r1, [r4, #20]
   3c184:	add	r0, r0, r6
   3c188:	add	r0, r1, r0
   3c18c:	str	r0, [r4, #20]
   3c190:	pop	{r4, r5, r6, sl, fp, pc}

0003c194 <flatcc_json_printer_int32_struct_field@@Base>:
   3c194:	push	{r4, r5, r6, sl, fp, lr}
   3c198:	add	fp, sp, #16
   3c19c:	mov	ip, r1
   3c1a0:	ldr	r5, [r2, r3]
   3c1a4:	ldr	r2, [fp, #12]
   3c1a8:	ldr	r1, [fp, #8]
   3c1ac:	mov	r4, r0
   3c1b0:	cmp	ip, #0
   3c1b4:	beq	3c1cc <flatcc_json_printer_int32_struct_field@@Base+0x38>
   3c1b8:	ldr	r0, [r4, #20]
   3c1bc:	add	r3, r0, #1
   3c1c0:	str	r3, [r4, #20]
   3c1c4:	mov	r3, #44	; 0x2c
   3c1c8:	strb	r3, [r0]
   3c1cc:	mov	r0, r4
   3c1d0:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c1d4:	ldr	r1, [r4, #20]
   3c1d8:	cmn	r5, #1
   3c1dc:	lsr	r6, r5, #31
   3c1e0:	movle	r0, #45	; 0x2d
   3c1e4:	rsble	r5, r5, #0
   3c1e8:	strble	r0, [r1], #1
   3c1ec:	mov	r0, r5
   3c1f0:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3c1f4:	ldr	r1, [r4, #20]
   3c1f8:	add	r0, r0, r6
   3c1fc:	add	r0, r1, r0
   3c200:	str	r0, [r4, #20]
   3c204:	pop	{r4, r5, r6, sl, fp, pc}

0003c208 <flatcc_json_printer_int64_struct_field@@Base>:
   3c208:	push	{r4, r5, r6, r7, fp, lr}
   3c20c:	add	fp, sp, #16
   3c210:	ldr	r7, [r2, r3]!
   3c214:	mov	r5, r1
   3c218:	ldr	r1, [fp, #8]
   3c21c:	mov	r4, r0
   3c220:	cmp	r5, #0
   3c224:	ldr	r6, [r2, #4]
   3c228:	ldr	r2, [fp, #12]
   3c22c:	beq	3c244 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   3c230:	ldr	r0, [r4, #20]
   3c234:	add	r3, r0, #1
   3c238:	str	r3, [r4, #20]
   3c23c:	mov	r3, #44	; 0x2c
   3c240:	strb	r3, [r0]
   3c244:	mov	r0, r4
   3c248:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c24c:	ldr	r2, [r4, #20]
   3c250:	lsr	r5, r6, #31
   3c254:	cmn	r6, #1
   3c258:	bgt	3c26c <flatcc_json_printer_int64_struct_field@@Base+0x64>
   3c25c:	mov	r0, #45	; 0x2d
   3c260:	rsbs	r7, r7, #0
   3c264:	strb	r0, [r2], #1
   3c268:	rsc	r6, r6, #0
   3c26c:	mov	r0, r7
   3c270:	mov	r1, r6
   3c274:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3c278:	ldr	r1, [r4, #20]
   3c27c:	add	r0, r0, r5
   3c280:	add	r0, r1, r0
   3c284:	str	r0, [r4, #20]
   3c288:	pop	{r4, r5, r6, r7, fp, pc}

0003c28c <flatcc_json_printer_bool_struct_field@@Base>:
   3c28c:	push	{r4, r5, fp, lr}
   3c290:	add	fp, sp, #8
   3c294:	mov	ip, r1
   3c298:	ldrb	r5, [r2, r3]
   3c29c:	ldr	r2, [fp, #12]
   3c2a0:	ldr	r1, [fp, #8]
   3c2a4:	mov	r4, r0
   3c2a8:	cmp	ip, #0
   3c2ac:	beq	3c2c4 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   3c2b0:	ldr	r0, [r4, #20]
   3c2b4:	add	r3, r0, #1
   3c2b8:	str	r3, [r4, #20]
   3c2bc:	mov	r3, #44	; 0x2c
   3c2c0:	strb	r3, [r0]
   3c2c4:	mov	r0, r4
   3c2c8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c2cc:	ldr	r0, [r4, #20]
   3c2d0:	cmp	r5, #0
   3c2d4:	beq	3c2f4 <flatcc_json_printer_bool_struct_field@@Base+0x68>
   3c2d8:	mov	r1, #0
   3c2dc:	strb	r1, [r0, #4]
   3c2e0:	movw	r1, #29300	; 0x7274
   3c2e4:	movt	r1, #25973	; 0x6575
   3c2e8:	str	r1, [r0]
   3c2ec:	mov	r0, #4
   3c2f0:	b	3c30c <flatcc_json_printer_bool_struct_field@@Base+0x80>
   3c2f4:	mov	r1, #101	; 0x65
   3c2f8:	strh	r1, [r0, #4]
   3c2fc:	movw	r1, #24934	; 0x6166
   3c300:	movt	r1, #29548	; 0x736c
   3c304:	str	r1, [r0]
   3c308:	mov	r0, #5
   3c30c:	ldr	r1, [r4, #20]
   3c310:	add	r0, r1, r0
   3c314:	str	r0, [r4, #20]
   3c318:	pop	{r4, r5, fp, pc}

0003c31c <flatcc_json_printer_float_struct_field@@Base>:
   3c31c:	push	{r4, sl, fp, lr}
   3c320:	add	fp, sp, #8
   3c324:	vpush	{d8}
   3c328:	mov	r4, r0
   3c32c:	add	r0, r2, r3
   3c330:	mov	ip, r1
   3c334:	ldr	r2, [fp, #12]
   3c338:	ldr	r1, [fp, #8]
   3c33c:	vldr	s16, [r0]
   3c340:	cmp	ip, #0
   3c344:	beq	3c35c <flatcc_json_printer_float_struct_field@@Base+0x40>
   3c348:	ldr	r0, [r4, #20]
   3c34c:	add	r3, r0, #1
   3c350:	str	r3, [r4, #20]
   3c354:	mov	r3, #44	; 0x2c
   3c358:	strb	r3, [r0]
   3c35c:	mov	r0, r4
   3c360:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c364:	vcvt.f64.f32	d0, s16
   3c368:	ldr	r0, [r4, #20]
   3c36c:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3c370:	ldr	r1, [r4, #20]
   3c374:	add	r0, r1, r0
   3c378:	str	r0, [r4, #20]
   3c37c:	vpop	{d8}
   3c380:	pop	{r4, sl, fp, pc}

0003c384 <flatcc_json_printer_double_struct_field@@Base>:
   3c384:	push	{r4, sl, fp, lr}
   3c388:	add	fp, sp, #8
   3c38c:	vpush	{d8}
   3c390:	mov	r4, r0
   3c394:	add	r0, r2, r3
   3c398:	mov	ip, r1
   3c39c:	ldr	r2, [fp, #12]
   3c3a0:	ldr	r1, [fp, #8]
   3c3a4:	vldr	d8, [r0]
   3c3a8:	cmp	ip, #0
   3c3ac:	beq	3c3c4 <flatcc_json_printer_double_struct_field@@Base+0x40>
   3c3b0:	ldr	r0, [r4, #20]
   3c3b4:	add	r3, r0, #1
   3c3b8:	str	r3, [r4, #20]
   3c3bc:	mov	r3, #44	; 0x2c
   3c3c0:	strb	r3, [r0]
   3c3c4:	mov	r0, r4
   3c3c8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c3cc:	ldr	r0, [r4, #20]
   3c3d0:	vorr	d0, d8, d8
   3c3d4:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3c3d8:	ldr	r1, [r4, #20]
   3c3dc:	add	r0, r1, r0
   3c3e0:	str	r0, [r4, #20]
   3c3e4:	vpop	{d8}
   3c3e8:	pop	{r4, sl, fp, pc}

0003c3ec <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3c3ec:	push	{r4, r5, r6, r7, fp, lr}
   3c3f0:	add	fp, sp, #16
   3c3f4:	add	r7, fp, #8
   3c3f8:	mov	r5, r1
   3c3fc:	ldrb	r6, [r2, r3]
   3c400:	mov	r4, r0
   3c404:	ldm	r7, {r1, r2, r7}
   3c408:	cmp	r5, #0
   3c40c:	beq	3c424 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   3c410:	ldr	r0, [r4, #20]
   3c414:	add	r3, r0, #1
   3c418:	str	r3, [r4, #20]
   3c41c:	mov	r3, #44	; 0x2c
   3c420:	strb	r3, [r0]
   3c424:	mov	r0, r4
   3c428:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c42c:	ldrb	r0, [r4, #27]
   3c430:	cmp	r0, #0
   3c434:	beq	3c490 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xa4>
   3c438:	ldr	r0, [r4, #20]
   3c43c:	mov	r1, #0
   3c440:	cmp	r6, #100	; 0x64
   3c444:	bcc	3c4a4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb8>
   3c448:	strb	r1, [r0, #3]
   3c44c:	movw	r1, #34079	; 0x851f
   3c450:	movt	r1, #20971	; 0x51eb
   3c454:	umull	r1, r2, r6, r1
   3c458:	mov	r1, #48	; 0x30
   3c45c:	orr	r1, r1, r2, lsr #5
   3c460:	strb	r1, [r0]
   3c464:	lsr	r1, r2, #5
   3c468:	mov	r2, #100	; 0x64
   3c46c:	mls	r1, r1, r2, r6
   3c470:	ldr	r2, [pc, #140]	; 3c504 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x118>
   3c474:	uxtb	r1, r1
   3c478:	add	r2, pc, r2
   3c47c:	add	r1, r2, r1, lsl #1
   3c480:	ldrh	r1, [r1]
   3c484:	strh	r1, [r0, #1]
   3c488:	mov	r0, #3
   3c48c:	b	3c4f4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   3c490:	mov	r0, r4
   3c494:	mov	r1, r6
   3c498:	mov	r2, r7
   3c49c:	pop	{r4, r5, r6, r7, fp, lr}
   3c4a0:	bx	r2
   3c4a4:	cmp	r6, #10
   3c4a8:	bcc	3c4e4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xf8>
   3c4ac:	strb	r1, [r0, #2]
   3c4b0:	movw	r1, #34079	; 0x851f
   3c4b4:	movt	r1, #20971	; 0x51eb
   3c4b8:	umull	r1, r2, r6, r1
   3c4bc:	lsr	r1, r2, #5
   3c4c0:	mov	r2, #100	; 0x64
   3c4c4:	mls	r1, r1, r2, r6
   3c4c8:	ldr	r2, [pc, #56]	; 3c508 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x11c>
   3c4cc:	add	r2, pc, r2
   3c4d0:	add	r1, r2, r1, lsl #1
   3c4d4:	ldrh	r1, [r1]
   3c4d8:	strh	r1, [r0]
   3c4dc:	mov	r0, #2
   3c4e0:	b	3c4f4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x108>
   3c4e4:	strb	r1, [r0, #1]
   3c4e8:	add	r1, r6, #48	; 0x30
   3c4ec:	strb	r1, [r0]
   3c4f0:	mov	r0, #1
   3c4f4:	ldr	r1, [r4, #20]
   3c4f8:	add	r0, r1, r0
   3c4fc:	str	r0, [r4, #20]
   3c500:	pop	{r4, r5, r6, r7, fp, pc}
   3c504:	andeq	lr, r0, r7, ror sp
   3c508:	andeq	lr, r0, r3, lsr #26

0003c50c <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3c50c:	push	{r4, r5, r6, r7, fp, lr}
   3c510:	add	fp, sp, #16
   3c514:	mov	r4, r0
   3c518:	add	r0, r2, r3
   3c51c:	add	r7, fp, #8
   3c520:	mov	r5, r1
   3c524:	ldrh	r6, [r0]
   3c528:	ldm	r7, {r1, r2, r7}
   3c52c:	cmp	r5, #0
   3c530:	beq	3c548 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   3c534:	ldr	r0, [r4, #20]
   3c538:	add	r3, r0, #1
   3c53c:	str	r3, [r4, #20]
   3c540:	mov	r3, #44	; 0x2c
   3c544:	strb	r3, [r0]
   3c548:	mov	r0, r4
   3c54c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c550:	ldrb	r0, [r4, #27]
   3c554:	cmp	r0, #0
   3c558:	beq	3c578 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3c55c:	ldr	r1, [r4, #20]
   3c560:	mov	r0, r6
   3c564:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3c568:	ldr	r1, [r4, #20]
   3c56c:	add	r0, r1, r0
   3c570:	str	r0, [r4, #20]
   3c574:	pop	{r4, r5, r6, r7, fp, pc}
   3c578:	mov	r0, r4
   3c57c:	mov	r1, r6
   3c580:	mov	r2, r7
   3c584:	pop	{r4, r5, r6, r7, fp, lr}
   3c588:	bx	r2

0003c58c <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3c58c:	push	{r4, r5, r6, r7, fp, lr}
   3c590:	add	fp, sp, #16
   3c594:	add	r7, fp, #8
   3c598:	mov	r5, r1
   3c59c:	ldr	r6, [r2, r3]
   3c5a0:	mov	r4, r0
   3c5a4:	ldm	r7, {r1, r2, r7}
   3c5a8:	cmp	r5, #0
   3c5ac:	beq	3c5c4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   3c5b0:	ldr	r0, [r4, #20]
   3c5b4:	add	r3, r0, #1
   3c5b8:	str	r3, [r4, #20]
   3c5bc:	mov	r3, #44	; 0x2c
   3c5c0:	strb	r3, [r0]
   3c5c4:	mov	r0, r4
   3c5c8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c5cc:	ldrb	r0, [r4, #27]
   3c5d0:	cmp	r0, #0
   3c5d4:	beq	3c5f4 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   3c5d8:	ldr	r1, [r4, #20]
   3c5dc:	mov	r0, r6
   3c5e0:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3c5e4:	ldr	r1, [r4, #20]
   3c5e8:	add	r0, r1, r0
   3c5ec:	str	r0, [r4, #20]
   3c5f0:	pop	{r4, r5, r6, r7, fp, pc}
   3c5f4:	mov	r0, r4
   3c5f8:	mov	r1, r6
   3c5fc:	mov	r2, r7
   3c600:	pop	{r4, r5, r6, r7, fp, lr}
   3c604:	bx	r2

0003c608 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3c608:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c60c:	add	fp, sp, #24
   3c610:	ldr	r6, [r2, r3]!
   3c614:	add	r8, fp, #8
   3c618:	mov	r5, r1
   3c61c:	mov	r4, r0
   3c620:	cmp	r5, #0
   3c624:	ldr	r7, [r2, #4]
   3c628:	ldm	r8, {r1, r2, r8}
   3c62c:	beq	3c644 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   3c630:	ldr	r0, [r4, #20]
   3c634:	add	r3, r0, #1
   3c638:	str	r3, [r4, #20]
   3c63c:	mov	r3, #44	; 0x2c
   3c640:	strb	r3, [r0]
   3c644:	mov	r0, r4
   3c648:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c64c:	ldrb	r0, [r4, #27]
   3c650:	cmp	r0, #0
   3c654:	beq	3c678 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3c658:	ldr	r2, [r4, #20]
   3c65c:	mov	r0, r6
   3c660:	mov	r1, r7
   3c664:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3c668:	ldr	r1, [r4, #20]
   3c66c:	add	r0, r1, r0
   3c670:	str	r0, [r4, #20]
   3c674:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c678:	mov	r0, r4
   3c67c:	mov	r2, r6
   3c680:	mov	r3, r7
   3c684:	mov	r1, r8
   3c688:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c68c:	bx	r1

0003c690 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3c690:	push	{r4, r5, r6, r7, fp, lr}
   3c694:	add	fp, sp, #16
   3c698:	mov	r4, r0
   3c69c:	add	r0, r2, r3
   3c6a0:	add	r7, fp, #8
   3c6a4:	mov	r5, r1
   3c6a8:	ldrsb	r6, [r0]
   3c6ac:	ldm	r7, {r1, r2, r7}
   3c6b0:	cmp	r5, #0
   3c6b4:	beq	3c6cc <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   3c6b8:	ldr	r0, [r4, #20]
   3c6bc:	add	r3, r0, #1
   3c6c0:	str	r3, [r4, #20]
   3c6c4:	mov	r3, #44	; 0x2c
   3c6c8:	strb	r3, [r0]
   3c6cc:	mov	r0, r4
   3c6d0:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c6d4:	ldrb	r0, [r4, #27]
   3c6d8:	cmp	r0, #0
   3c6dc:	beq	3c754 <flatcc_json_printer_int8_enum_struct_field@@Base+0xc4>
   3c6e0:	ldr	r0, [r4, #20]
   3c6e4:	cmn	r6, #1
   3c6e8:	uxtb	r1, r6
   3c6ec:	movle	r2, #45	; 0x2d
   3c6f0:	rsble	r6, r6, #0
   3c6f4:	lsr	r1, r1, #7
   3c6f8:	strble	r2, [r0], #1
   3c6fc:	uxtb	r2, r6
   3c700:	cmp	r2, #100	; 0x64
   3c704:	bcc	3c768 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
   3c708:	mov	r3, #0
   3c70c:	strb	r3, [r0, #3]
   3c710:	movw	r3, #34079	; 0x851f
   3c714:	movt	r3, #20971	; 0x51eb
   3c718:	umull	r3, r6, r2, r3
   3c71c:	mov	r3, #48	; 0x30
   3c720:	orr	r3, r3, r6, lsr #5
   3c724:	strb	r3, [r0]
   3c728:	lsr	r3, r6, #5
   3c72c:	mov	r6, #100	; 0x64
   3c730:	mls	r2, r3, r6, r2
   3c734:	ldr	r3, [pc, #152]	; 3c7d4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x144>
   3c738:	uxtb	r2, r2
   3c73c:	add	r3, pc, r3
   3c740:	add	r2, r3, r2, lsl #1
   3c744:	ldrh	r2, [r2]
   3c748:	strh	r2, [r0, #1]
   3c74c:	mov	r0, #3
   3c750:	b	3c7c0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3c754:	mov	r0, r4
   3c758:	mov	r1, r6
   3c75c:	mov	r2, r7
   3c760:	pop	{r4, r5, r6, r7, fp, lr}
   3c764:	bx	r2
   3c768:	cmp	r2, #10
   3c76c:	bcc	3c7ac <flatcc_json_printer_int8_enum_struct_field@@Base+0x11c>
   3c770:	mov	r3, #0
   3c774:	strb	r3, [r0, #2]
   3c778:	movw	r3, #34079	; 0x851f
   3c77c:	movt	r3, #20971	; 0x51eb
   3c780:	umull	r3, r6, r2, r3
   3c784:	lsr	r3, r6, #5
   3c788:	mov	r6, #100	; 0x64
   3c78c:	mls	r2, r3, r6, r2
   3c790:	ldr	r3, [pc, #64]	; 3c7d8 <flatcc_json_printer_int8_enum_struct_field@@Base+0x148>
   3c794:	add	r3, pc, r3
   3c798:	add	r2, r3, r2, lsl #1
   3c79c:	ldrh	r2, [r2]
   3c7a0:	strh	r2, [r0]
   3c7a4:	mov	r0, #2
   3c7a8:	b	3c7c0 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3c7ac:	mov	r2, #0
   3c7b0:	strb	r2, [r0, #1]
   3c7b4:	add	r2, r6, #48	; 0x30
   3c7b8:	strb	r2, [r0]
   3c7bc:	mov	r0, #1
   3c7c0:	add	r0, r0, r1
   3c7c4:	ldr	r1, [r4, #20]
   3c7c8:	add	r0, r1, r0
   3c7cc:	str	r0, [r4, #20]
   3c7d0:	pop	{r4, r5, r6, r7, fp, pc}
   3c7d4:			; <UNDEFINED> instruction: 0x0000eab3
   3c7d8:	andeq	lr, r0, fp, asr sl

0003c7dc <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3c7dc:	push	{r4, r5, r6, r7, fp, lr}
   3c7e0:	add	fp, sp, #16
   3c7e4:	mov	r4, r0
   3c7e8:	add	r0, r2, r3
   3c7ec:	add	r7, fp, #8
   3c7f0:	mov	r5, r1
   3c7f4:	ldrsh	r6, [r0]
   3c7f8:	ldm	r7, {r1, r2, r7}
   3c7fc:	cmp	r5, #0
   3c800:	beq	3c818 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   3c804:	ldr	r0, [r4, #20]
   3c808:	add	r3, r0, #1
   3c80c:	str	r3, [r4, #20]
   3c810:	mov	r3, #44	; 0x2c
   3c814:	strb	r3, [r0]
   3c818:	mov	r0, r4
   3c81c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c820:	ldrb	r0, [r4, #27]
   3c824:	cmp	r0, #0
   3c828:	beq	3c864 <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   3c82c:	ldr	r1, [r4, #20]
   3c830:	uxth	r0, r6
   3c834:	cmn	r6, #1
   3c838:	rsble	r6, r6, #0
   3c83c:	lsr	r5, r0, #15
   3c840:	movle	r0, #45	; 0x2d
   3c844:	strble	r0, [r1], #1
   3c848:	uxth	r0, r6
   3c84c:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3c850:	ldr	r1, [r4, #20]
   3c854:	add	r0, r0, r5
   3c858:	add	r0, r1, r0
   3c85c:	str	r0, [r4, #20]
   3c860:	pop	{r4, r5, r6, r7, fp, pc}
   3c864:	mov	r0, r4
   3c868:	mov	r1, r6
   3c86c:	mov	r2, r7
   3c870:	pop	{r4, r5, r6, r7, fp, lr}
   3c874:	bx	r2

0003c878 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3c878:	push	{r4, r5, r6, r7, fp, lr}
   3c87c:	add	fp, sp, #16
   3c880:	add	r7, fp, #8
   3c884:	mov	r5, r1
   3c888:	ldr	r6, [r2, r3]
   3c88c:	mov	r4, r0
   3c890:	ldm	r7, {r1, r2, r7}
   3c894:	cmp	r5, #0
   3c898:	beq	3c8b0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   3c89c:	ldr	r0, [r4, #20]
   3c8a0:	add	r3, r0, #1
   3c8a4:	str	r3, [r4, #20]
   3c8a8:	mov	r3, #44	; 0x2c
   3c8ac:	strb	r3, [r0]
   3c8b0:	mov	r0, r4
   3c8b4:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c8b8:	ldrb	r0, [r4, #27]
   3c8bc:	cmp	r0, #0
   3c8c0:	beq	3c8f8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   3c8c4:	ldr	r1, [r4, #20]
   3c8c8:	cmn	r6, #1
   3c8cc:	lsr	r5, r6, #31
   3c8d0:	movle	r0, #45	; 0x2d
   3c8d4:	rsble	r6, r6, #0
   3c8d8:	strble	r0, [r1], #1
   3c8dc:	mov	r0, r6
   3c8e0:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3c8e4:	ldr	r1, [r4, #20]
   3c8e8:	add	r0, r0, r5
   3c8ec:	add	r0, r1, r0
   3c8f0:	str	r0, [r4, #20]
   3c8f4:	pop	{r4, r5, r6, r7, fp, pc}
   3c8f8:	mov	r0, r4
   3c8fc:	mov	r1, r6
   3c900:	mov	r2, r7
   3c904:	pop	{r4, r5, r6, r7, fp, lr}
   3c908:	bx	r2

0003c90c <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3c90c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c910:	add	fp, sp, #24
   3c914:	ldr	r7, [r2, r3]!
   3c918:	add	r8, fp, #8
   3c91c:	mov	r6, r1
   3c920:	mov	r4, r0
   3c924:	cmp	r6, #0
   3c928:	ldr	r5, [r2, #4]
   3c92c:	ldm	r8, {r1, r2, r8}
   3c930:	beq	3c948 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   3c934:	ldr	r0, [r4, #20]
   3c938:	add	r3, r0, #1
   3c93c:	str	r3, [r4, #20]
   3c940:	mov	r3, #44	; 0x2c
   3c944:	strb	r3, [r0]
   3c948:	mov	r0, r4
   3c94c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c950:	ldrb	r0, [r4, #27]
   3c954:	cmp	r0, #0
   3c958:	beq	3c99c <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   3c95c:	ldr	r2, [r4, #20]
   3c960:	lsr	r6, r5, #31
   3c964:	cmn	r5, #1
   3c968:	bgt	3c97c <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3c96c:	mov	r0, #45	; 0x2d
   3c970:	rsbs	r7, r7, #0
   3c974:	strb	r0, [r2], #1
   3c978:	rsc	r5, r5, #0
   3c97c:	mov	r0, r7
   3c980:	mov	r1, r5
   3c984:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3c988:	ldr	r1, [r4, #20]
   3c98c:	add	r0, r0, r6
   3c990:	add	r0, r1, r0
   3c994:	str	r0, [r4, #20]
   3c998:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3c99c:	mov	r0, r4
   3c9a0:	mov	r2, r7
   3c9a4:	mov	r3, r5
   3c9a8:	mov	r1, r8
   3c9ac:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3c9b0:	bx	r1

0003c9b4 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3c9b4:	push	{r4, r5, r6, r7, fp, lr}
   3c9b8:	add	fp, sp, #16
   3c9bc:	add	r7, fp, #8
   3c9c0:	mov	r5, r1
   3c9c4:	ldrb	r6, [r2, r3]
   3c9c8:	mov	r4, r0
   3c9cc:	ldm	r7, {r1, r2, r7}
   3c9d0:	cmp	r5, #0
   3c9d4:	beq	3c9ec <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   3c9d8:	ldr	r0, [r4, #20]
   3c9dc:	add	r3, r0, #1
   3c9e0:	str	r3, [r4, #20]
   3c9e4:	mov	r3, #44	; 0x2c
   3c9e8:	strb	r3, [r0]
   3c9ec:	mov	r0, r4
   3c9f0:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3c9f4:	ldrb	r0, [r4, #27]
   3c9f8:	cmp	r0, #0
   3c9fc:	beq	3ca28 <flatcc_json_printer_bool_enum_struct_field@@Base+0x74>
   3ca00:	ldr	r0, [r4, #20]
   3ca04:	cmp	r6, #0
   3ca08:	beq	3ca3c <flatcc_json_printer_bool_enum_struct_field@@Base+0x88>
   3ca0c:	mov	r1, #0
   3ca10:	strb	r1, [r0, #4]
   3ca14:	movw	r1, #29300	; 0x7274
   3ca18:	movt	r1, #25973	; 0x6575
   3ca1c:	str	r1, [r0]
   3ca20:	mov	r0, #4
   3ca24:	b	3ca54 <flatcc_json_printer_bool_enum_struct_field@@Base+0xa0>
   3ca28:	mov	r0, r4
   3ca2c:	mov	r1, r6
   3ca30:	mov	r2, r7
   3ca34:	pop	{r4, r5, r6, r7, fp, lr}
   3ca38:	bx	r2
   3ca3c:	mov	r1, #101	; 0x65
   3ca40:	strh	r1, [r0, #4]
   3ca44:	movw	r1, #24934	; 0x6166
   3ca48:	movt	r1, #29548	; 0x736c
   3ca4c:	str	r1, [r0]
   3ca50:	mov	r0, #5
   3ca54:	ldr	r1, [r4, #20]
   3ca58:	add	r0, r1, r0
   3ca5c:	str	r0, [r4, #20]
   3ca60:	pop	{r4, r5, r6, r7, fp, pc}

0003ca64 <flatcc_json_printer_utype_vector_field@@Base>:
   3ca64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ca68:	add	fp, sp, #28
   3ca6c:	sub	sp, sp, #4
   3ca70:	mov	r4, r0
   3ca74:	mov	r0, #4
   3ca78:	add	r0, r0, r2, lsl #1
   3ca7c:	ldr	r2, [r1, #8]
   3ca80:	cmp	r0, r2
   3ca84:	bge	3caa4 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3ca88:	ldr	r2, [r1, #4]
   3ca8c:	add	r0, r2, r0
   3ca90:	ldrh	r0, [r0]
   3ca94:	cmp	r0, #0
   3ca98:	ldrne	r2, [r1]
   3ca9c:	addsne	r9, r2, r0
   3caa0:	bne	3caac <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3caa4:	sub	sp, fp, #28
   3caa8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3caac:	ldr	r0, [r1, #16]
   3cab0:	ldr	r2, [fp, #8]
   3cab4:	add	r7, r0, #1
   3cab8:	cmp	r0, #0
   3cabc:	str	r7, [r1, #16]
   3cac0:	beq	3cad8 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   3cac4:	ldr	r0, [r4, #20]
   3cac8:	add	r1, r0, #1
   3cacc:	str	r1, [r4, #20]
   3cad0:	mov	r1, #44	; 0x2c
   3cad4:	strb	r1, [r0]
   3cad8:	ldr	r0, [r9]
   3cadc:	mov	r1, r3
   3cae0:	ldr	r8, [r9, r0]!
   3cae4:	mov	r0, r4
   3cae8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3caec:	ldr	r1, [r4, #32]
   3caf0:	ldr	r0, [r4, #20]
   3caf4:	cmp	r8, #0
   3caf8:	add	r1, r1, #1
   3cafc:	str	r1, [r4, #32]
   3cb00:	add	r1, r0, #1
   3cb04:	str	r1, [r4, #20]
   3cb08:	mov	r1, #91	; 0x5b
   3cb0c:	strb	r1, [r0]
   3cb10:	beq	3ce80 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   3cb14:	ldrb	r1, [r4, #25]
   3cb18:	ldr	r0, [r4, #20]
   3cb1c:	cmp	r1, #0
   3cb20:	beq	3cbdc <flatcc_json_printer_utype_vector_field@@Base+0x178>
   3cb24:	add	r1, r0, #1
   3cb28:	str	r1, [r4, #20]
   3cb2c:	mov	r1, #10
   3cb30:	strb	r1, [r0]
   3cb34:	ldr	r0, [r4, #20]
   3cb38:	ldrb	r2, [r4, #25]
   3cb3c:	ldr	r3, [r4, #32]
   3cb40:	ldr	r1, [r4, #16]
   3cb44:	mla	r7, r3, r2, r0
   3cb48:	mul	r5, r3, r2
   3cb4c:	cmp	r7, r1
   3cb50:	bls	3cbc0 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3cb54:	cmp	r0, r1
   3cb58:	bcc	3cb74 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   3cb5c:	ldr	r2, [r4, #44]	; 0x2c
   3cb60:	mov	r0, r4
   3cb64:	mov	r1, #0
   3cb68:	blx	r2
   3cb6c:	ldr	r1, [r4, #16]
   3cb70:	ldr	r0, [r4, #20]
   3cb74:	sub	r6, r1, r0
   3cb78:	cmp	r6, r5
   3cb7c:	bcs	3cbc0 <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3cb80:	mov	r1, #32
   3cb84:	mov	r2, r6
   3cb88:	bl	14ee4 <memset@plt>
   3cb8c:	ldr	r0, [r4, #20]
   3cb90:	ldr	r2, [r4, #44]	; 0x2c
   3cb94:	mov	r1, #0
   3cb98:	add	r0, r0, r6
   3cb9c:	str	r0, [r4, #20]
   3cba0:	mov	r0, r4
   3cba4:	blx	r2
   3cba8:	ldr	r1, [r4, #16]
   3cbac:	ldr	r0, [r4, #20]
   3cbb0:	sub	r5, r5, r6
   3cbb4:	sub	r6, r1, r0
   3cbb8:	cmp	r5, r6
   3cbbc:	bhi	3cb80 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   3cbc0:	mov	r1, #32
   3cbc4:	mov	r2, r5
   3cbc8:	bl	14ee4 <memset@plt>
   3cbcc:	ldr	r0, [r4, #20]
   3cbd0:	add	r0, r0, r5
   3cbd4:	str	r0, [r4, #20]
   3cbd8:	b	3cbfc <flatcc_json_printer_utype_vector_field@@Base+0x198>
   3cbdc:	ldr	r1, [r4, #16]
   3cbe0:	cmp	r0, r1
   3cbe4:	bcc	3cbfc <flatcc_json_printer_utype_vector_field@@Base+0x198>
   3cbe8:	ldr	r2, [r4, #44]	; 0x2c
   3cbec:	mov	r0, r4
   3cbf0:	mov	r1, #0
   3cbf4:	blx	r2
   3cbf8:	ldr	r0, [r4, #20]
   3cbfc:	ldrb	r1, [r9, #4]
   3cc00:	mov	r2, #0
   3cc04:	cmp	r1, #100	; 0x64
   3cc08:	bcc	3cc54 <flatcc_json_printer_utype_vector_field@@Base+0x1f0>
   3cc0c:	strb	r2, [r0, #3]
   3cc10:	movw	r2, #34079	; 0x851f
   3cc14:	movt	r2, #20971	; 0x51eb
   3cc18:	umull	r2, r3, r1, r2
   3cc1c:	mov	r2, #48	; 0x30
   3cc20:	orr	r2, r2, r3, lsr #5
   3cc24:	strb	r2, [r0]
   3cc28:	lsr	r2, r3, #5
   3cc2c:	mov	r3, #100	; 0x64
   3cc30:	mls	r1, r2, r3, r1
   3cc34:	ldr	r2, [pc, #808]	; 3cf64 <flatcc_json_printer_utype_vector_field@@Base+0x500>
   3cc38:	uxtb	r1, r1
   3cc3c:	add	r2, pc, r2
   3cc40:	add	r1, r2, r1, lsl #1
   3cc44:	ldrh	r1, [r1]
   3cc48:	strh	r1, [r0, #1]
   3cc4c:	mov	r0, #3
   3cc50:	b	3cca4 <flatcc_json_printer_utype_vector_field@@Base+0x240>
   3cc54:	cmp	r1, #10
   3cc58:	bcc	3cc94 <flatcc_json_printer_utype_vector_field@@Base+0x230>
   3cc5c:	strb	r2, [r0, #2]
   3cc60:	movw	r2, #34079	; 0x851f
   3cc64:	movt	r2, #20971	; 0x51eb
   3cc68:	umull	r2, r3, r1, r2
   3cc6c:	lsr	r2, r3, #5
   3cc70:	mov	r3, #100	; 0x64
   3cc74:	mls	r1, r2, r3, r1
   3cc78:	ldr	r2, [pc, #744]	; 3cf68 <flatcc_json_printer_utype_vector_field@@Base+0x504>
   3cc7c:	add	r2, pc, r2
   3cc80:	add	r1, r2, r1, lsl #1
   3cc84:	ldrh	r1, [r1]
   3cc88:	strh	r1, [r0]
   3cc8c:	mov	r0, #2
   3cc90:	b	3cca4 <flatcc_json_printer_utype_vector_field@@Base+0x240>
   3cc94:	add	r1, r1, #48	; 0x30
   3cc98:	strb	r2, [r0, #1]
   3cc9c:	strb	r1, [r0]
   3cca0:	mov	r0, #1
   3cca4:	ldr	r1, [r4, #20]
   3cca8:	subs	r8, r8, #1
   3ccac:	add	r0, r1, r0
   3ccb0:	str	r0, [r4, #20]
   3ccb4:	beq	3ce80 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   3ccb8:	ldr	r0, [r4, #20]
   3ccbc:	add	r7, r9, #5
   3ccc0:	mov	r9, #44	; 0x2c
   3ccc4:	mov	sl, #0
   3ccc8:	b	3cd28 <flatcc_json_printer_utype_vector_field@@Base+0x2c4>
   3cccc:	movw	r2, #34079	; 0x851f
   3ccd0:	strb	sl, [r0, #3]
   3ccd4:	movt	r2, #20971	; 0x51eb
   3ccd8:	umull	r2, r3, r1, r2
   3ccdc:	mov	r2, #48	; 0x30
   3cce0:	orr	r2, r2, r3, lsr #5
   3cce4:	strb	r2, [r0]
   3cce8:	lsr	r2, r3, #5
   3ccec:	mov	r3, #100	; 0x64
   3ccf0:	mls	r1, r2, r3, r1
   3ccf4:	ldr	r2, [pc, #624]	; 3cf6c <flatcc_json_printer_utype_vector_field@@Base+0x508>
   3ccf8:	uxtb	r1, r1
   3ccfc:	add	r2, pc, r2
   3cd00:	add	r1, r2, r1, lsl #1
   3cd04:	ldrh	r1, [r1]
   3cd08:	strh	r1, [r0, #1]
   3cd0c:	mov	r0, #3
   3cd10:	ldr	r1, [r4, #20]
   3cd14:	add	r7, r7, #1
   3cd18:	cmp	r8, #0
   3cd1c:	add	r0, r1, r0
   3cd20:	str	r0, [r4, #20]
   3cd24:	beq	3ce80 <flatcc_json_printer_utype_vector_field@@Base+0x41c>
   3cd28:	add	r1, r0, #1
   3cd2c:	str	r1, [r4, #20]
   3cd30:	strb	r9, [r0]
   3cd34:	ldrb	r1, [r4, #25]
   3cd38:	ldr	r0, [r4, #20]
   3cd3c:	cmp	r1, #0
   3cd40:	beq	3cdfc <flatcc_json_printer_utype_vector_field@@Base+0x398>
   3cd44:	add	r1, r0, #1
   3cd48:	str	r1, [r4, #20]
   3cd4c:	mov	r1, #10
   3cd50:	strb	r1, [r0]
   3cd54:	ldr	r0, [r4, #20]
   3cd58:	ldrb	r2, [r4, #25]
   3cd5c:	ldr	r3, [r4, #32]
   3cd60:	ldr	r1, [r4, #16]
   3cd64:	mla	r6, r3, r2, r0
   3cd68:	mul	r5, r3, r2
   3cd6c:	cmp	r6, r1
   3cd70:	bls	3cde0 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   3cd74:	cmp	r0, r1
   3cd78:	bcc	3cd94 <flatcc_json_printer_utype_vector_field@@Base+0x330>
   3cd7c:	ldr	r2, [r4, #44]	; 0x2c
   3cd80:	mov	r0, r4
   3cd84:	mov	r1, #0
   3cd88:	blx	r2
   3cd8c:	ldr	r1, [r4, #16]
   3cd90:	ldr	r0, [r4, #20]
   3cd94:	sub	r6, r1, r0
   3cd98:	cmp	r6, r5
   3cd9c:	bcs	3cde0 <flatcc_json_printer_utype_vector_field@@Base+0x37c>
   3cda0:	mov	r1, #32
   3cda4:	mov	r2, r6
   3cda8:	bl	14ee4 <memset@plt>
   3cdac:	ldr	r0, [r4, #20]
   3cdb0:	ldr	r2, [r4, #44]	; 0x2c
   3cdb4:	mov	r1, #0
   3cdb8:	add	r0, r0, r6
   3cdbc:	str	r0, [r4, #20]
   3cdc0:	mov	r0, r4
   3cdc4:	blx	r2
   3cdc8:	ldr	r1, [r4, #16]
   3cdcc:	ldr	r0, [r4, #20]
   3cdd0:	sub	r5, r5, r6
   3cdd4:	sub	r6, r1, r0
   3cdd8:	cmp	r5, r6
   3cddc:	bhi	3cda0 <flatcc_json_printer_utype_vector_field@@Base+0x33c>
   3cde0:	mov	r1, #32
   3cde4:	mov	r2, r5
   3cde8:	bl	14ee4 <memset@plt>
   3cdec:	ldr	r0, [r4, #20]
   3cdf0:	add	r0, r0, r5
   3cdf4:	str	r0, [r4, #20]
   3cdf8:	b	3ce1c <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   3cdfc:	ldr	r1, [r4, #16]
   3ce00:	cmp	r0, r1
   3ce04:	bcc	3ce1c <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   3ce08:	ldr	r2, [r4, #44]	; 0x2c
   3ce0c:	mov	r0, r4
   3ce10:	mov	r1, #0
   3ce14:	blx	r2
   3ce18:	ldr	r0, [r4, #20]
   3ce1c:	ldrb	r1, [r7]
   3ce20:	sub	r8, r8, #1
   3ce24:	cmp	r1, #100	; 0x64
   3ce28:	bcs	3cccc <flatcc_json_printer_utype_vector_field@@Base+0x268>
   3ce2c:	cmp	r1, #10
   3ce30:	bcc	3ce6c <flatcc_json_printer_utype_vector_field@@Base+0x408>
   3ce34:	movw	r2, #34079	; 0x851f
   3ce38:	strb	sl, [r0, #2]
   3ce3c:	movt	r2, #20971	; 0x51eb
   3ce40:	umull	r2, r3, r1, r2
   3ce44:	lsr	r2, r3, #5
   3ce48:	mov	r3, #100	; 0x64
   3ce4c:	mls	r1, r2, r3, r1
   3ce50:	ldr	r2, [pc, #280]	; 3cf70 <flatcc_json_printer_utype_vector_field@@Base+0x50c>
   3ce54:	add	r2, pc, r2
   3ce58:	add	r1, r2, r1, lsl #1
   3ce5c:	ldrh	r1, [r1]
   3ce60:	strh	r1, [r0]
   3ce64:	mov	r0, #2
   3ce68:	b	3cd10 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   3ce6c:	add	r1, r1, #48	; 0x30
   3ce70:	strb	sl, [r0, #1]
   3ce74:	strb	r1, [r0]
   3ce78:	mov	r0, #1
   3ce7c:	b	3cd10 <flatcc_json_printer_utype_vector_field@@Base+0x2ac>
   3ce80:	ldrb	r1, [r4, #25]
   3ce84:	ldr	r0, [r4, #20]
   3ce88:	cmp	r1, #0
   3ce8c:	beq	3cf4c <flatcc_json_printer_utype_vector_field@@Base+0x4e8>
   3ce90:	add	r1, r0, #1
   3ce94:	str	r1, [r4, #20]
   3ce98:	mov	r1, #10
   3ce9c:	strb	r1, [r0]
   3cea0:	ldr	r0, [r4, #32]
   3cea4:	sub	r2, r0, #1
   3cea8:	str	r2, [r4, #32]
   3ceac:	ldrb	r3, [r4, #25]
   3ceb0:	ldr	r0, [r4, #20]
   3ceb4:	ldr	r1, [r4, #16]
   3ceb8:	mla	r7, r2, r3, r0
   3cebc:	mul	r5, r2, r3
   3cec0:	cmp	r7, r1
   3cec4:	bls	3cf34 <flatcc_json_printer_utype_vector_field@@Base+0x4d0>
   3cec8:	cmp	r0, r1
   3cecc:	bcc	3cee8 <flatcc_json_printer_utype_vector_field@@Base+0x484>
   3ced0:	ldr	r2, [r4, #44]	; 0x2c
   3ced4:	mov	r0, r4
   3ced8:	mov	r1, #0
   3cedc:	blx	r2
   3cee0:	ldr	r1, [r4, #16]
   3cee4:	ldr	r0, [r4, #20]
   3cee8:	sub	r6, r1, r0
   3ceec:	cmp	r6, r5
   3cef0:	bcs	3cf34 <flatcc_json_printer_utype_vector_field@@Base+0x4d0>
   3cef4:	mov	r1, #32
   3cef8:	mov	r2, r6
   3cefc:	bl	14ee4 <memset@plt>
   3cf00:	ldr	r0, [r4, #20]
   3cf04:	ldr	r2, [r4, #44]	; 0x2c
   3cf08:	mov	r1, #0
   3cf0c:	add	r0, r0, r6
   3cf10:	str	r0, [r4, #20]
   3cf14:	mov	r0, r4
   3cf18:	blx	r2
   3cf1c:	ldr	r1, [r4, #16]
   3cf20:	ldr	r0, [r4, #20]
   3cf24:	sub	r5, r5, r6
   3cf28:	sub	r6, r1, r0
   3cf2c:	cmp	r5, r6
   3cf30:	bhi	3cef4 <flatcc_json_printer_utype_vector_field@@Base+0x490>
   3cf34:	mov	r1, #32
   3cf38:	mov	r2, r5
   3cf3c:	bl	14ee4 <memset@plt>
   3cf40:	ldr	r0, [r4, #20]
   3cf44:	add	r0, r0, r5
   3cf48:	str	r0, [r4, #20]
   3cf4c:	add	r1, r0, #1
   3cf50:	str	r1, [r4, #20]
   3cf54:	mov	r1, #93	; 0x5d
   3cf58:	strb	r1, [r0]
   3cf5c:	sub	sp, fp, #28
   3cf60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cf64:			; <UNDEFINED> instruction: 0x0000e5b3
   3cf68:	andeq	lr, r0, r3, ror r5
   3cf6c:	strdeq	lr, [r0], -r3
   3cf70:	muleq	r0, fp, r3

0003cf74 <flatcc_json_printer_uint8_vector_field@@Base>:
   3cf74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cf78:	add	fp, sp, #28
   3cf7c:	sub	sp, sp, #4
   3cf80:	mov	r4, r0
   3cf84:	mov	r0, #4
   3cf88:	add	r0, r0, r2, lsl #1
   3cf8c:	ldr	r2, [r1, #8]
   3cf90:	cmp	r0, r2
   3cf94:	bge	3cfb4 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   3cf98:	ldr	r2, [r1, #4]
   3cf9c:	add	r0, r2, r0
   3cfa0:	ldrh	r0, [r0]
   3cfa4:	cmp	r0, #0
   3cfa8:	ldrne	r2, [r1]
   3cfac:	addsne	r9, r2, r0
   3cfb0:	bne	3cfbc <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   3cfb4:	sub	sp, fp, #28
   3cfb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cfbc:	ldr	r0, [r1, #16]
   3cfc0:	ldr	r2, [fp, #8]
   3cfc4:	add	r7, r0, #1
   3cfc8:	cmp	r0, #0
   3cfcc:	str	r7, [r1, #16]
   3cfd0:	beq	3cfe8 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   3cfd4:	ldr	r0, [r4, #20]
   3cfd8:	add	r1, r0, #1
   3cfdc:	str	r1, [r4, #20]
   3cfe0:	mov	r1, #44	; 0x2c
   3cfe4:	strb	r1, [r0]
   3cfe8:	ldr	r0, [r9]
   3cfec:	mov	r1, r3
   3cff0:	ldr	r8, [r9, r0]!
   3cff4:	mov	r0, r4
   3cff8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3cffc:	ldr	r1, [r4, #32]
   3d000:	ldr	r0, [r4, #20]
   3d004:	cmp	r8, #0
   3d008:	add	r1, r1, #1
   3d00c:	str	r1, [r4, #32]
   3d010:	add	r1, r0, #1
   3d014:	str	r1, [r4, #20]
   3d018:	mov	r1, #91	; 0x5b
   3d01c:	strb	r1, [r0]
   3d020:	beq	3d390 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   3d024:	ldrb	r1, [r4, #25]
   3d028:	ldr	r0, [r4, #20]
   3d02c:	cmp	r1, #0
   3d030:	beq	3d0ec <flatcc_json_printer_uint8_vector_field@@Base+0x178>
   3d034:	add	r1, r0, #1
   3d038:	str	r1, [r4, #20]
   3d03c:	mov	r1, #10
   3d040:	strb	r1, [r0]
   3d044:	ldr	r0, [r4, #20]
   3d048:	ldrb	r2, [r4, #25]
   3d04c:	ldr	r3, [r4, #32]
   3d050:	ldr	r1, [r4, #16]
   3d054:	mla	r7, r3, r2, r0
   3d058:	mul	r5, r3, r2
   3d05c:	cmp	r7, r1
   3d060:	bls	3d0d0 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3d064:	cmp	r0, r1
   3d068:	bcc	3d084 <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   3d06c:	ldr	r2, [r4, #44]	; 0x2c
   3d070:	mov	r0, r4
   3d074:	mov	r1, #0
   3d078:	blx	r2
   3d07c:	ldr	r1, [r4, #16]
   3d080:	ldr	r0, [r4, #20]
   3d084:	sub	r6, r1, r0
   3d088:	cmp	r6, r5
   3d08c:	bcs	3d0d0 <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3d090:	mov	r1, #32
   3d094:	mov	r2, r6
   3d098:	bl	14ee4 <memset@plt>
   3d09c:	ldr	r0, [r4, #20]
   3d0a0:	ldr	r2, [r4, #44]	; 0x2c
   3d0a4:	mov	r1, #0
   3d0a8:	add	r0, r0, r6
   3d0ac:	str	r0, [r4, #20]
   3d0b0:	mov	r0, r4
   3d0b4:	blx	r2
   3d0b8:	ldr	r1, [r4, #16]
   3d0bc:	ldr	r0, [r4, #20]
   3d0c0:	sub	r5, r5, r6
   3d0c4:	sub	r6, r1, r0
   3d0c8:	cmp	r5, r6
   3d0cc:	bhi	3d090 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   3d0d0:	mov	r1, #32
   3d0d4:	mov	r2, r5
   3d0d8:	bl	14ee4 <memset@plt>
   3d0dc:	ldr	r0, [r4, #20]
   3d0e0:	add	r0, r0, r5
   3d0e4:	str	r0, [r4, #20]
   3d0e8:	b	3d10c <flatcc_json_printer_uint8_vector_field@@Base+0x198>
   3d0ec:	ldr	r1, [r4, #16]
   3d0f0:	cmp	r0, r1
   3d0f4:	bcc	3d10c <flatcc_json_printer_uint8_vector_field@@Base+0x198>
   3d0f8:	ldr	r2, [r4, #44]	; 0x2c
   3d0fc:	mov	r0, r4
   3d100:	mov	r1, #0
   3d104:	blx	r2
   3d108:	ldr	r0, [r4, #20]
   3d10c:	ldrb	r1, [r9, #4]
   3d110:	mov	r2, #0
   3d114:	cmp	r1, #100	; 0x64
   3d118:	bcc	3d164 <flatcc_json_printer_uint8_vector_field@@Base+0x1f0>
   3d11c:	strb	r2, [r0, #3]
   3d120:	movw	r2, #34079	; 0x851f
   3d124:	movt	r2, #20971	; 0x51eb
   3d128:	umull	r2, r3, r1, r2
   3d12c:	mov	r2, #48	; 0x30
   3d130:	orr	r2, r2, r3, lsr #5
   3d134:	strb	r2, [r0]
   3d138:	lsr	r2, r3, #5
   3d13c:	mov	r3, #100	; 0x64
   3d140:	mls	r1, r2, r3, r1
   3d144:	ldr	r2, [pc, #808]	; 3d474 <flatcc_json_printer_uint8_vector_field@@Base+0x500>
   3d148:	uxtb	r1, r1
   3d14c:	add	r2, pc, r2
   3d150:	add	r1, r2, r1, lsl #1
   3d154:	ldrh	r1, [r1]
   3d158:	strh	r1, [r0, #1]
   3d15c:	mov	r0, #3
   3d160:	b	3d1b4 <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   3d164:	cmp	r1, #10
   3d168:	bcc	3d1a4 <flatcc_json_printer_uint8_vector_field@@Base+0x230>
   3d16c:	strb	r2, [r0, #2]
   3d170:	movw	r2, #34079	; 0x851f
   3d174:	movt	r2, #20971	; 0x51eb
   3d178:	umull	r2, r3, r1, r2
   3d17c:	lsr	r2, r3, #5
   3d180:	mov	r3, #100	; 0x64
   3d184:	mls	r1, r2, r3, r1
   3d188:	ldr	r2, [pc, #744]	; 3d478 <flatcc_json_printer_uint8_vector_field@@Base+0x504>
   3d18c:	add	r2, pc, r2
   3d190:	add	r1, r2, r1, lsl #1
   3d194:	ldrh	r1, [r1]
   3d198:	strh	r1, [r0]
   3d19c:	mov	r0, #2
   3d1a0:	b	3d1b4 <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   3d1a4:	add	r1, r1, #48	; 0x30
   3d1a8:	strb	r2, [r0, #1]
   3d1ac:	strb	r1, [r0]
   3d1b0:	mov	r0, #1
   3d1b4:	ldr	r1, [r4, #20]
   3d1b8:	subs	r8, r8, #1
   3d1bc:	add	r0, r1, r0
   3d1c0:	str	r0, [r4, #20]
   3d1c4:	beq	3d390 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   3d1c8:	ldr	r0, [r4, #20]
   3d1cc:	add	r7, r9, #5
   3d1d0:	mov	r9, #44	; 0x2c
   3d1d4:	mov	sl, #0
   3d1d8:	b	3d238 <flatcc_json_printer_uint8_vector_field@@Base+0x2c4>
   3d1dc:	movw	r2, #34079	; 0x851f
   3d1e0:	strb	sl, [r0, #3]
   3d1e4:	movt	r2, #20971	; 0x51eb
   3d1e8:	umull	r2, r3, r1, r2
   3d1ec:	mov	r2, #48	; 0x30
   3d1f0:	orr	r2, r2, r3, lsr #5
   3d1f4:	strb	r2, [r0]
   3d1f8:	lsr	r2, r3, #5
   3d1fc:	mov	r3, #100	; 0x64
   3d200:	mls	r1, r2, r3, r1
   3d204:	ldr	r2, [pc, #624]	; 3d47c <flatcc_json_printer_uint8_vector_field@@Base+0x508>
   3d208:	uxtb	r1, r1
   3d20c:	add	r2, pc, r2
   3d210:	add	r1, r2, r1, lsl #1
   3d214:	ldrh	r1, [r1]
   3d218:	strh	r1, [r0, #1]
   3d21c:	mov	r0, #3
   3d220:	ldr	r1, [r4, #20]
   3d224:	add	r7, r7, #1
   3d228:	cmp	r8, #0
   3d22c:	add	r0, r1, r0
   3d230:	str	r0, [r4, #20]
   3d234:	beq	3d390 <flatcc_json_printer_uint8_vector_field@@Base+0x41c>
   3d238:	add	r1, r0, #1
   3d23c:	str	r1, [r4, #20]
   3d240:	strb	r9, [r0]
   3d244:	ldrb	r1, [r4, #25]
   3d248:	ldr	r0, [r4, #20]
   3d24c:	cmp	r1, #0
   3d250:	beq	3d30c <flatcc_json_printer_uint8_vector_field@@Base+0x398>
   3d254:	add	r1, r0, #1
   3d258:	str	r1, [r4, #20]
   3d25c:	mov	r1, #10
   3d260:	strb	r1, [r0]
   3d264:	ldr	r0, [r4, #20]
   3d268:	ldrb	r2, [r4, #25]
   3d26c:	ldr	r3, [r4, #32]
   3d270:	ldr	r1, [r4, #16]
   3d274:	mla	r6, r3, r2, r0
   3d278:	mul	r5, r3, r2
   3d27c:	cmp	r6, r1
   3d280:	bls	3d2f0 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   3d284:	cmp	r0, r1
   3d288:	bcc	3d2a4 <flatcc_json_printer_uint8_vector_field@@Base+0x330>
   3d28c:	ldr	r2, [r4, #44]	; 0x2c
   3d290:	mov	r0, r4
   3d294:	mov	r1, #0
   3d298:	blx	r2
   3d29c:	ldr	r1, [r4, #16]
   3d2a0:	ldr	r0, [r4, #20]
   3d2a4:	sub	r6, r1, r0
   3d2a8:	cmp	r6, r5
   3d2ac:	bcs	3d2f0 <flatcc_json_printer_uint8_vector_field@@Base+0x37c>
   3d2b0:	mov	r1, #32
   3d2b4:	mov	r2, r6
   3d2b8:	bl	14ee4 <memset@plt>
   3d2bc:	ldr	r0, [r4, #20]
   3d2c0:	ldr	r2, [r4, #44]	; 0x2c
   3d2c4:	mov	r1, #0
   3d2c8:	add	r0, r0, r6
   3d2cc:	str	r0, [r4, #20]
   3d2d0:	mov	r0, r4
   3d2d4:	blx	r2
   3d2d8:	ldr	r1, [r4, #16]
   3d2dc:	ldr	r0, [r4, #20]
   3d2e0:	sub	r5, r5, r6
   3d2e4:	sub	r6, r1, r0
   3d2e8:	cmp	r5, r6
   3d2ec:	bhi	3d2b0 <flatcc_json_printer_uint8_vector_field@@Base+0x33c>
   3d2f0:	mov	r1, #32
   3d2f4:	mov	r2, r5
   3d2f8:	bl	14ee4 <memset@plt>
   3d2fc:	ldr	r0, [r4, #20]
   3d300:	add	r0, r0, r5
   3d304:	str	r0, [r4, #20]
   3d308:	b	3d32c <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   3d30c:	ldr	r1, [r4, #16]
   3d310:	cmp	r0, r1
   3d314:	bcc	3d32c <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   3d318:	ldr	r2, [r4, #44]	; 0x2c
   3d31c:	mov	r0, r4
   3d320:	mov	r1, #0
   3d324:	blx	r2
   3d328:	ldr	r0, [r4, #20]
   3d32c:	ldrb	r1, [r7]
   3d330:	sub	r8, r8, #1
   3d334:	cmp	r1, #100	; 0x64
   3d338:	bcs	3d1dc <flatcc_json_printer_uint8_vector_field@@Base+0x268>
   3d33c:	cmp	r1, #10
   3d340:	bcc	3d37c <flatcc_json_printer_uint8_vector_field@@Base+0x408>
   3d344:	movw	r2, #34079	; 0x851f
   3d348:	strb	sl, [r0, #2]
   3d34c:	movt	r2, #20971	; 0x51eb
   3d350:	umull	r2, r3, r1, r2
   3d354:	lsr	r2, r3, #5
   3d358:	mov	r3, #100	; 0x64
   3d35c:	mls	r1, r2, r3, r1
   3d360:	ldr	r2, [pc, #280]	; 3d480 <flatcc_json_printer_uint8_vector_field@@Base+0x50c>
   3d364:	add	r2, pc, r2
   3d368:	add	r1, r2, r1, lsl #1
   3d36c:	ldrh	r1, [r1]
   3d370:	strh	r1, [r0]
   3d374:	mov	r0, #2
   3d378:	b	3d220 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   3d37c:	add	r1, r1, #48	; 0x30
   3d380:	strb	sl, [r0, #1]
   3d384:	strb	r1, [r0]
   3d388:	mov	r0, #1
   3d38c:	b	3d220 <flatcc_json_printer_uint8_vector_field@@Base+0x2ac>
   3d390:	ldrb	r1, [r4, #25]
   3d394:	ldr	r0, [r4, #20]
   3d398:	cmp	r1, #0
   3d39c:	beq	3d45c <flatcc_json_printer_uint8_vector_field@@Base+0x4e8>
   3d3a0:	add	r1, r0, #1
   3d3a4:	str	r1, [r4, #20]
   3d3a8:	mov	r1, #10
   3d3ac:	strb	r1, [r0]
   3d3b0:	ldr	r0, [r4, #32]
   3d3b4:	sub	r2, r0, #1
   3d3b8:	str	r2, [r4, #32]
   3d3bc:	ldrb	r3, [r4, #25]
   3d3c0:	ldr	r0, [r4, #20]
   3d3c4:	ldr	r1, [r4, #16]
   3d3c8:	mla	r7, r2, r3, r0
   3d3cc:	mul	r5, r2, r3
   3d3d0:	cmp	r7, r1
   3d3d4:	bls	3d444 <flatcc_json_printer_uint8_vector_field@@Base+0x4d0>
   3d3d8:	cmp	r0, r1
   3d3dc:	bcc	3d3f8 <flatcc_json_printer_uint8_vector_field@@Base+0x484>
   3d3e0:	ldr	r2, [r4, #44]	; 0x2c
   3d3e4:	mov	r0, r4
   3d3e8:	mov	r1, #0
   3d3ec:	blx	r2
   3d3f0:	ldr	r1, [r4, #16]
   3d3f4:	ldr	r0, [r4, #20]
   3d3f8:	sub	r6, r1, r0
   3d3fc:	cmp	r6, r5
   3d400:	bcs	3d444 <flatcc_json_printer_uint8_vector_field@@Base+0x4d0>
   3d404:	mov	r1, #32
   3d408:	mov	r2, r6
   3d40c:	bl	14ee4 <memset@plt>
   3d410:	ldr	r0, [r4, #20]
   3d414:	ldr	r2, [r4, #44]	; 0x2c
   3d418:	mov	r1, #0
   3d41c:	add	r0, r0, r6
   3d420:	str	r0, [r4, #20]
   3d424:	mov	r0, r4
   3d428:	blx	r2
   3d42c:	ldr	r1, [r4, #16]
   3d430:	ldr	r0, [r4, #20]
   3d434:	sub	r5, r5, r6
   3d438:	sub	r6, r1, r0
   3d43c:	cmp	r5, r6
   3d440:	bhi	3d404 <flatcc_json_printer_uint8_vector_field@@Base+0x490>
   3d444:	mov	r1, #32
   3d448:	mov	r2, r5
   3d44c:	bl	14ee4 <memset@plt>
   3d450:	ldr	r0, [r4, #20]
   3d454:	add	r0, r0, r5
   3d458:	str	r0, [r4, #20]
   3d45c:	add	r1, r0, #1
   3d460:	str	r1, [r4, #20]
   3d464:	mov	r1, #93	; 0x5d
   3d468:	strb	r1, [r0]
   3d46c:	sub	sp, fp, #28
   3d470:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d474:	andeq	lr, r0, r3, lsr #1
   3d478:	andeq	lr, r0, r3, rrx
   3d47c:	andeq	sp, r0, r3, ror #31
   3d480:	andeq	sp, r0, fp, lsl #29

0003d484 <flatcc_json_printer_uint16_vector_field@@Base>:
   3d484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d488:	add	fp, sp, #28
   3d48c:	sub	sp, sp, #4
   3d490:	mov	r4, r0
   3d494:	mov	r0, #4
   3d498:	add	r0, r0, r2, lsl #1
   3d49c:	ldr	r2, [r1, #8]
   3d4a0:	cmp	r0, r2
   3d4a4:	bge	3d4c4 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   3d4a8:	ldr	r2, [r1, #4]
   3d4ac:	add	r0, r2, r0
   3d4b0:	ldrh	r0, [r0]
   3d4b4:	cmp	r0, #0
   3d4b8:	ldrne	r2, [r1]
   3d4bc:	addsne	r8, r2, r0
   3d4c0:	bne	3d4cc <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   3d4c4:	sub	sp, fp, #28
   3d4c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d4cc:	ldr	r0, [r1, #16]
   3d4d0:	ldr	r2, [fp, #8]
   3d4d4:	add	r7, r0, #1
   3d4d8:	cmp	r0, #0
   3d4dc:	str	r7, [r1, #16]
   3d4e0:	beq	3d4f8 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   3d4e4:	ldr	r0, [r4, #20]
   3d4e8:	add	r1, r0, #1
   3d4ec:	str	r1, [r4, #20]
   3d4f0:	mov	r1, #44	; 0x2c
   3d4f4:	strb	r1, [r0]
   3d4f8:	ldr	r0, [r8]
   3d4fc:	mov	r1, r3
   3d500:	ldr	r7, [r8, r0]!
   3d504:	mov	r0, r4
   3d508:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3d50c:	ldr	r1, [r4, #32]
   3d510:	ldr	r0, [r4, #20]
   3d514:	cmp	r7, #0
   3d518:	add	r1, r1, #1
   3d51c:	str	r1, [r4, #32]
   3d520:	add	r1, r0, #1
   3d524:	str	r1, [r4, #20]
   3d528:	mov	r1, #91	; 0x5b
   3d52c:	strb	r1, [r0]
   3d530:	beq	3d760 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3d534:	ldrb	r0, [r4, #25]
   3d538:	ldr	r1, [r4, #20]
   3d53c:	cmp	r0, #0
   3d540:	beq	3d5fc <flatcc_json_printer_uint16_vector_field@@Base+0x178>
   3d544:	add	r0, r1, #1
   3d548:	str	r0, [r4, #20]
   3d54c:	mov	r0, #10
   3d550:	strb	r0, [r1]
   3d554:	ldr	r0, [r4, #20]
   3d558:	ldrb	r2, [r4, #25]
   3d55c:	ldr	r3, [r4, #32]
   3d560:	ldr	r1, [r4, #16]
   3d564:	mla	r6, r3, r2, r0
   3d568:	mul	r5, r3, r2
   3d56c:	cmp	r6, r1
   3d570:	bls	3d5e0 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   3d574:	cmp	r0, r1
   3d578:	bcc	3d594 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   3d57c:	ldr	r2, [r4, #44]	; 0x2c
   3d580:	mov	r0, r4
   3d584:	mov	r1, #0
   3d588:	blx	r2
   3d58c:	ldr	r1, [r4, #16]
   3d590:	ldr	r0, [r4, #20]
   3d594:	sub	r6, r1, r0
   3d598:	cmp	r6, r5
   3d59c:	bcs	3d5e0 <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   3d5a0:	mov	r1, #32
   3d5a4:	mov	r2, r6
   3d5a8:	bl	14ee4 <memset@plt>
   3d5ac:	ldr	r0, [r4, #20]
   3d5b0:	ldr	r2, [r4, #44]	; 0x2c
   3d5b4:	mov	r1, #0
   3d5b8:	add	r0, r0, r6
   3d5bc:	str	r0, [r4, #20]
   3d5c0:	mov	r0, r4
   3d5c4:	blx	r2
   3d5c8:	ldr	r1, [r4, #16]
   3d5cc:	ldr	r0, [r4, #20]
   3d5d0:	sub	r5, r5, r6
   3d5d4:	sub	r6, r1, r0
   3d5d8:	cmp	r5, r6
   3d5dc:	bhi	3d5a0 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   3d5e0:	mov	r1, #32
   3d5e4:	mov	r2, r5
   3d5e8:	bl	14ee4 <memset@plt>
   3d5ec:	ldr	r0, [r4, #20]
   3d5f0:	add	r1, r0, r5
   3d5f4:	str	r1, [r4, #20]
   3d5f8:	b	3d61c <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   3d5fc:	ldr	r0, [r4, #16]
   3d600:	cmp	r1, r0
   3d604:	bcc	3d61c <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   3d608:	ldr	r2, [r4, #44]	; 0x2c
   3d60c:	mov	r0, r4
   3d610:	mov	r1, #0
   3d614:	blx	r2
   3d618:	ldr	r1, [r4, #20]
   3d61c:	ldrh	r0, [r8, #4]
   3d620:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3d624:	ldr	r1, [r4, #20]
   3d628:	subs	r9, r7, #1
   3d62c:	add	r0, r1, r0
   3d630:	str	r0, [r4, #20]
   3d634:	beq	3d760 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3d638:	ldr	r0, [r4, #20]
   3d63c:	add	r7, r8, #6
   3d640:	mov	r8, #44	; 0x2c
   3d644:	mov	sl, #10
   3d648:	b	3d680 <flatcc_json_printer_uint16_vector_field@@Base+0x1fc>
   3d64c:	mov	r1, #32
   3d650:	mov	r2, r5
   3d654:	bl	14ee4 <memset@plt>
   3d658:	ldr	r0, [r4, #20]
   3d65c:	add	r1, r0, r5
   3d660:	str	r1, [r4, #20]
   3d664:	ldrh	r0, [r7], #2
   3d668:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3d66c:	ldr	r1, [r4, #20]
   3d670:	cmp	r9, #0
   3d674:	add	r0, r1, r0
   3d678:	str	r0, [r4, #20]
   3d67c:	beq	3d760 <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   3d680:	add	r1, r0, #1
   3d684:	sub	r9, r9, #1
   3d688:	str	r1, [r4, #20]
   3d68c:	strb	r8, [r0]
   3d690:	ldrb	r0, [r4, #25]
   3d694:	ldr	r1, [r4, #20]
   3d698:	cmp	r0, #0
   3d69c:	beq	3d73c <flatcc_json_printer_uint16_vector_field@@Base+0x2b8>
   3d6a0:	add	r0, r1, #1
   3d6a4:	str	r0, [r4, #20]
   3d6a8:	strb	sl, [r1]
   3d6ac:	ldr	r0, [r4, #20]
   3d6b0:	ldrb	r2, [r4, #25]
   3d6b4:	ldr	r3, [r4, #32]
   3d6b8:	ldr	r1, [r4, #16]
   3d6bc:	mla	r6, r3, r2, r0
   3d6c0:	mul	r5, r3, r2
   3d6c4:	cmp	r6, r1
   3d6c8:	bls	3d64c <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3d6cc:	cmp	r0, r1
   3d6d0:	bcc	3d6ec <flatcc_json_printer_uint16_vector_field@@Base+0x268>
   3d6d4:	ldr	r2, [r4, #44]	; 0x2c
   3d6d8:	mov	r0, r4
   3d6dc:	mov	r1, #0
   3d6e0:	blx	r2
   3d6e4:	ldr	r1, [r4, #16]
   3d6e8:	ldr	r0, [r4, #20]
   3d6ec:	sub	r6, r1, r0
   3d6f0:	cmp	r6, r5
   3d6f4:	bcs	3d64c <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3d6f8:	mov	r1, #32
   3d6fc:	mov	r2, r6
   3d700:	bl	14ee4 <memset@plt>
   3d704:	ldr	r0, [r4, #20]
   3d708:	ldr	r2, [r4, #44]	; 0x2c
   3d70c:	mov	r1, #0
   3d710:	add	r0, r0, r6
   3d714:	str	r0, [r4, #20]
   3d718:	mov	r0, r4
   3d71c:	blx	r2
   3d720:	ldr	r1, [r4, #16]
   3d724:	ldr	r0, [r4, #20]
   3d728:	sub	r5, r5, r6
   3d72c:	sub	r6, r1, r0
   3d730:	cmp	r5, r6
   3d734:	bhi	3d6f8 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   3d738:	b	3d64c <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   3d73c:	ldr	r0, [r4, #16]
   3d740:	cmp	r1, r0
   3d744:	bcc	3d664 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   3d748:	ldr	r2, [r4, #44]	; 0x2c
   3d74c:	mov	r0, r4
   3d750:	mov	r1, #0
   3d754:	blx	r2
   3d758:	ldr	r1, [r4, #20]
   3d75c:	b	3d664 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   3d760:	ldrb	r1, [r4, #25]
   3d764:	ldr	r0, [r4, #20]
   3d768:	cmp	r1, #0
   3d76c:	beq	3d82c <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   3d770:	add	r1, r0, #1
   3d774:	str	r1, [r4, #20]
   3d778:	mov	r1, #10
   3d77c:	strb	r1, [r0]
   3d780:	ldr	r0, [r4, #32]
   3d784:	sub	r2, r0, #1
   3d788:	str	r2, [r4, #32]
   3d78c:	ldrb	r3, [r4, #25]
   3d790:	ldr	r0, [r4, #20]
   3d794:	ldr	r1, [r4, #16]
   3d798:	mla	r7, r2, r3, r0
   3d79c:	mul	r5, r2, r3
   3d7a0:	cmp	r7, r1
   3d7a4:	bls	3d814 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   3d7a8:	cmp	r0, r1
   3d7ac:	bcc	3d7c8 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   3d7b0:	ldr	r2, [r4, #44]	; 0x2c
   3d7b4:	mov	r0, r4
   3d7b8:	mov	r1, #0
   3d7bc:	blx	r2
   3d7c0:	ldr	r1, [r4, #16]
   3d7c4:	ldr	r0, [r4, #20]
   3d7c8:	sub	r6, r1, r0
   3d7cc:	cmp	r6, r5
   3d7d0:	bcs	3d814 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   3d7d4:	mov	r1, #32
   3d7d8:	mov	r2, r6
   3d7dc:	bl	14ee4 <memset@plt>
   3d7e0:	ldr	r0, [r4, #20]
   3d7e4:	ldr	r2, [r4, #44]	; 0x2c
   3d7e8:	mov	r1, #0
   3d7ec:	add	r0, r0, r6
   3d7f0:	str	r0, [r4, #20]
   3d7f4:	mov	r0, r4
   3d7f8:	blx	r2
   3d7fc:	ldr	r1, [r4, #16]
   3d800:	ldr	r0, [r4, #20]
   3d804:	sub	r5, r5, r6
   3d808:	sub	r6, r1, r0
   3d80c:	cmp	r5, r6
   3d810:	bhi	3d7d4 <flatcc_json_printer_uint16_vector_field@@Base+0x350>
   3d814:	mov	r1, #32
   3d818:	mov	r2, r5
   3d81c:	bl	14ee4 <memset@plt>
   3d820:	ldr	r0, [r4, #20]
   3d824:	add	r0, r0, r5
   3d828:	str	r0, [r4, #20]
   3d82c:	add	r1, r0, #1
   3d830:	str	r1, [r4, #20]
   3d834:	mov	r1, #93	; 0x5d
   3d838:	strb	r1, [r0]
   3d83c:	sub	sp, fp, #28
   3d840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d844 <flatcc_json_printer_uint32_vector_field@@Base>:
   3d844:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d848:	add	fp, sp, #28
   3d84c:	sub	sp, sp, #4
   3d850:	mov	r4, r0
   3d854:	mov	r0, #4
   3d858:	add	r0, r0, r2, lsl #1
   3d85c:	ldr	r2, [r1, #8]
   3d860:	cmp	r0, r2
   3d864:	bge	3d884 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   3d868:	ldr	r2, [r1, #4]
   3d86c:	add	r0, r2, r0
   3d870:	ldrh	r0, [r0]
   3d874:	cmp	r0, #0
   3d878:	ldrne	r2, [r1]
   3d87c:	addsne	r8, r2, r0
   3d880:	bne	3d88c <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   3d884:	sub	sp, fp, #28
   3d888:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d88c:	ldr	r0, [r1, #16]
   3d890:	ldr	r2, [fp, #8]
   3d894:	add	r7, r0, #1
   3d898:	cmp	r0, #0
   3d89c:	str	r7, [r1, #16]
   3d8a0:	beq	3d8b8 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   3d8a4:	ldr	r0, [r4, #20]
   3d8a8:	add	r1, r0, #1
   3d8ac:	str	r1, [r4, #20]
   3d8b0:	mov	r1, #44	; 0x2c
   3d8b4:	strb	r1, [r0]
   3d8b8:	ldr	r0, [r8]
   3d8bc:	mov	r1, r3
   3d8c0:	ldr	r7, [r8, r0]!
   3d8c4:	mov	r0, r4
   3d8c8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3d8cc:	ldr	r1, [r4, #32]
   3d8d0:	ldr	r0, [r4, #20]
   3d8d4:	cmp	r7, #0
   3d8d8:	add	r1, r1, #1
   3d8dc:	str	r1, [r4, #32]
   3d8e0:	add	r1, r0, #1
   3d8e4:	str	r1, [r4, #20]
   3d8e8:	mov	r1, #91	; 0x5b
   3d8ec:	strb	r1, [r0]
   3d8f0:	beq	3db20 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3d8f4:	ldrb	r0, [r4, #25]
   3d8f8:	ldr	r1, [r4, #20]
   3d8fc:	cmp	r0, #0
   3d900:	beq	3d9bc <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   3d904:	add	r0, r1, #1
   3d908:	str	r0, [r4, #20]
   3d90c:	mov	r0, #10
   3d910:	strb	r0, [r1]
   3d914:	ldr	r0, [r4, #20]
   3d918:	ldrb	r2, [r4, #25]
   3d91c:	ldr	r3, [r4, #32]
   3d920:	ldr	r1, [r4, #16]
   3d924:	mla	r6, r3, r2, r0
   3d928:	mul	r5, r3, r2
   3d92c:	cmp	r6, r1
   3d930:	bls	3d9a0 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   3d934:	cmp	r0, r1
   3d938:	bcc	3d954 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   3d93c:	ldr	r2, [r4, #44]	; 0x2c
   3d940:	mov	r0, r4
   3d944:	mov	r1, #0
   3d948:	blx	r2
   3d94c:	ldr	r1, [r4, #16]
   3d950:	ldr	r0, [r4, #20]
   3d954:	sub	r6, r1, r0
   3d958:	cmp	r6, r5
   3d95c:	bcs	3d9a0 <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   3d960:	mov	r1, #32
   3d964:	mov	r2, r6
   3d968:	bl	14ee4 <memset@plt>
   3d96c:	ldr	r0, [r4, #20]
   3d970:	ldr	r2, [r4, #44]	; 0x2c
   3d974:	mov	r1, #0
   3d978:	add	r0, r0, r6
   3d97c:	str	r0, [r4, #20]
   3d980:	mov	r0, r4
   3d984:	blx	r2
   3d988:	ldr	r1, [r4, #16]
   3d98c:	ldr	r0, [r4, #20]
   3d990:	sub	r5, r5, r6
   3d994:	sub	r6, r1, r0
   3d998:	cmp	r5, r6
   3d99c:	bhi	3d960 <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   3d9a0:	mov	r1, #32
   3d9a4:	mov	r2, r5
   3d9a8:	bl	14ee4 <memset@plt>
   3d9ac:	ldr	r0, [r4, #20]
   3d9b0:	add	r1, r0, r5
   3d9b4:	str	r1, [r4, #20]
   3d9b8:	b	3d9dc <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   3d9bc:	ldr	r0, [r4, #16]
   3d9c0:	cmp	r1, r0
   3d9c4:	bcc	3d9dc <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   3d9c8:	ldr	r2, [r4, #44]	; 0x2c
   3d9cc:	mov	r0, r4
   3d9d0:	mov	r1, #0
   3d9d4:	blx	r2
   3d9d8:	ldr	r1, [r4, #20]
   3d9dc:	ldr	r0, [r8, #4]
   3d9e0:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3d9e4:	ldr	r1, [r4, #20]
   3d9e8:	subs	r9, r7, #1
   3d9ec:	add	r0, r1, r0
   3d9f0:	str	r0, [r4, #20]
   3d9f4:	beq	3db20 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3d9f8:	ldr	r0, [r4, #20]
   3d9fc:	add	r7, r8, #8
   3da00:	mov	r8, #44	; 0x2c
   3da04:	mov	sl, #10
   3da08:	b	3da40 <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
   3da0c:	mov	r1, #32
   3da10:	mov	r2, r5
   3da14:	bl	14ee4 <memset@plt>
   3da18:	ldr	r0, [r4, #20]
   3da1c:	add	r1, r0, r5
   3da20:	str	r1, [r4, #20]
   3da24:	ldr	r0, [r7], #4
   3da28:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3da2c:	ldr	r1, [r4, #20]
   3da30:	cmp	r9, #0
   3da34:	add	r0, r1, r0
   3da38:	str	r0, [r4, #20]
   3da3c:	beq	3db20 <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   3da40:	add	r1, r0, #1
   3da44:	sub	r9, r9, #1
   3da48:	str	r1, [r4, #20]
   3da4c:	strb	r8, [r0]
   3da50:	ldrb	r0, [r4, #25]
   3da54:	ldr	r1, [r4, #20]
   3da58:	cmp	r0, #0
   3da5c:	beq	3dafc <flatcc_json_printer_uint32_vector_field@@Base+0x2b8>
   3da60:	add	r0, r1, #1
   3da64:	str	r0, [r4, #20]
   3da68:	strb	sl, [r1]
   3da6c:	ldr	r0, [r4, #20]
   3da70:	ldrb	r2, [r4, #25]
   3da74:	ldr	r3, [r4, #32]
   3da78:	ldr	r1, [r4, #16]
   3da7c:	mla	r6, r3, r2, r0
   3da80:	mul	r5, r3, r2
   3da84:	cmp	r6, r1
   3da88:	bls	3da0c <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3da8c:	cmp	r0, r1
   3da90:	bcc	3daac <flatcc_json_printer_uint32_vector_field@@Base+0x268>
   3da94:	ldr	r2, [r4, #44]	; 0x2c
   3da98:	mov	r0, r4
   3da9c:	mov	r1, #0
   3daa0:	blx	r2
   3daa4:	ldr	r1, [r4, #16]
   3daa8:	ldr	r0, [r4, #20]
   3daac:	sub	r6, r1, r0
   3dab0:	cmp	r6, r5
   3dab4:	bcs	3da0c <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3dab8:	mov	r1, #32
   3dabc:	mov	r2, r6
   3dac0:	bl	14ee4 <memset@plt>
   3dac4:	ldr	r0, [r4, #20]
   3dac8:	ldr	r2, [r4, #44]	; 0x2c
   3dacc:	mov	r1, #0
   3dad0:	add	r0, r0, r6
   3dad4:	str	r0, [r4, #20]
   3dad8:	mov	r0, r4
   3dadc:	blx	r2
   3dae0:	ldr	r1, [r4, #16]
   3dae4:	ldr	r0, [r4, #20]
   3dae8:	sub	r5, r5, r6
   3daec:	sub	r6, r1, r0
   3daf0:	cmp	r5, r6
   3daf4:	bhi	3dab8 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   3daf8:	b	3da0c <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   3dafc:	ldr	r0, [r4, #16]
   3db00:	cmp	r1, r0
   3db04:	bcc	3da24 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   3db08:	ldr	r2, [r4, #44]	; 0x2c
   3db0c:	mov	r0, r4
   3db10:	mov	r1, #0
   3db14:	blx	r2
   3db18:	ldr	r1, [r4, #20]
   3db1c:	b	3da24 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   3db20:	ldrb	r1, [r4, #25]
   3db24:	ldr	r0, [r4, #20]
   3db28:	cmp	r1, #0
   3db2c:	beq	3dbec <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   3db30:	add	r1, r0, #1
   3db34:	str	r1, [r4, #20]
   3db38:	mov	r1, #10
   3db3c:	strb	r1, [r0]
   3db40:	ldr	r0, [r4, #32]
   3db44:	sub	r2, r0, #1
   3db48:	str	r2, [r4, #32]
   3db4c:	ldrb	r3, [r4, #25]
   3db50:	ldr	r0, [r4, #20]
   3db54:	ldr	r1, [r4, #16]
   3db58:	mla	r7, r2, r3, r0
   3db5c:	mul	r5, r2, r3
   3db60:	cmp	r7, r1
   3db64:	bls	3dbd4 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   3db68:	cmp	r0, r1
   3db6c:	bcc	3db88 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   3db70:	ldr	r2, [r4, #44]	; 0x2c
   3db74:	mov	r0, r4
   3db78:	mov	r1, #0
   3db7c:	blx	r2
   3db80:	ldr	r1, [r4, #16]
   3db84:	ldr	r0, [r4, #20]
   3db88:	sub	r6, r1, r0
   3db8c:	cmp	r6, r5
   3db90:	bcs	3dbd4 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   3db94:	mov	r1, #32
   3db98:	mov	r2, r6
   3db9c:	bl	14ee4 <memset@plt>
   3dba0:	ldr	r0, [r4, #20]
   3dba4:	ldr	r2, [r4, #44]	; 0x2c
   3dba8:	mov	r1, #0
   3dbac:	add	r0, r0, r6
   3dbb0:	str	r0, [r4, #20]
   3dbb4:	mov	r0, r4
   3dbb8:	blx	r2
   3dbbc:	ldr	r1, [r4, #16]
   3dbc0:	ldr	r0, [r4, #20]
   3dbc4:	sub	r5, r5, r6
   3dbc8:	sub	r6, r1, r0
   3dbcc:	cmp	r5, r6
   3dbd0:	bhi	3db94 <flatcc_json_printer_uint32_vector_field@@Base+0x350>
   3dbd4:	mov	r1, #32
   3dbd8:	mov	r2, r5
   3dbdc:	bl	14ee4 <memset@plt>
   3dbe0:	ldr	r0, [r4, #20]
   3dbe4:	add	r0, r0, r5
   3dbe8:	str	r0, [r4, #20]
   3dbec:	add	r1, r0, #1
   3dbf0:	str	r1, [r4, #20]
   3dbf4:	mov	r1, #93	; 0x5d
   3dbf8:	strb	r1, [r0]
   3dbfc:	sub	sp, fp, #28
   3dc00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003dc04 <flatcc_json_printer_uint64_vector_field@@Base>:
   3dc04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dc08:	add	fp, sp, #28
   3dc0c:	sub	sp, sp, #4
   3dc10:	mov	r4, r0
   3dc14:	mov	r0, #4
   3dc18:	add	r0, r0, r2, lsl #1
   3dc1c:	ldr	r2, [r1, #8]
   3dc20:	cmp	r0, r2
   3dc24:	bge	3dc44 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   3dc28:	ldr	r2, [r1, #4]
   3dc2c:	add	r0, r2, r0
   3dc30:	ldrh	r0, [r0]
   3dc34:	cmp	r0, #0
   3dc38:	ldrne	r2, [r1]
   3dc3c:	addsne	r8, r2, r0
   3dc40:	bne	3dc4c <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   3dc44:	sub	sp, fp, #28
   3dc48:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3dc4c:	ldr	r0, [r1, #16]
   3dc50:	ldr	r2, [fp, #8]
   3dc54:	add	r7, r0, #1
   3dc58:	cmp	r0, #0
   3dc5c:	str	r7, [r1, #16]
   3dc60:	beq	3dc78 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   3dc64:	ldr	r0, [r4, #20]
   3dc68:	add	r1, r0, #1
   3dc6c:	str	r1, [r4, #20]
   3dc70:	mov	r1, #44	; 0x2c
   3dc74:	strb	r1, [r0]
   3dc78:	ldr	r0, [r8]
   3dc7c:	mov	r1, r3
   3dc80:	ldr	r7, [r8, r0]!
   3dc84:	mov	r0, r4
   3dc88:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3dc8c:	ldr	r1, [r4, #32]
   3dc90:	ldr	r0, [r4, #20]
   3dc94:	cmp	r7, #0
   3dc98:	add	r1, r1, #1
   3dc9c:	str	r1, [r4, #32]
   3dca0:	add	r1, r0, #1
   3dca4:	str	r1, [r4, #20]
   3dca8:	mov	r1, #91	; 0x5b
   3dcac:	strb	r1, [r0]
   3dcb0:	beq	3dee4 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3dcb4:	ldrb	r0, [r4, #25]
   3dcb8:	ldr	r2, [r4, #20]
   3dcbc:	cmp	r0, #0
   3dcc0:	beq	3dd7c <flatcc_json_printer_uint64_vector_field@@Base+0x178>
   3dcc4:	add	r0, r2, #1
   3dcc8:	str	r0, [r4, #20]
   3dccc:	mov	r0, #10
   3dcd0:	strb	r0, [r2]
   3dcd4:	ldr	r0, [r4, #20]
   3dcd8:	ldrb	r2, [r4, #25]
   3dcdc:	ldr	r3, [r4, #32]
   3dce0:	ldr	r1, [r4, #16]
   3dce4:	mla	r6, r3, r2, r0
   3dce8:	mul	r5, r3, r2
   3dcec:	cmp	r6, r1
   3dcf0:	bls	3dd60 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   3dcf4:	cmp	r0, r1
   3dcf8:	bcc	3dd14 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   3dcfc:	ldr	r2, [r4, #44]	; 0x2c
   3dd00:	mov	r0, r4
   3dd04:	mov	r1, #0
   3dd08:	blx	r2
   3dd0c:	ldr	r1, [r4, #16]
   3dd10:	ldr	r0, [r4, #20]
   3dd14:	sub	r6, r1, r0
   3dd18:	cmp	r6, r5
   3dd1c:	bcs	3dd60 <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   3dd20:	mov	r1, #32
   3dd24:	mov	r2, r6
   3dd28:	bl	14ee4 <memset@plt>
   3dd2c:	ldr	r0, [r4, #20]
   3dd30:	ldr	r2, [r4, #44]	; 0x2c
   3dd34:	mov	r1, #0
   3dd38:	add	r0, r0, r6
   3dd3c:	str	r0, [r4, #20]
   3dd40:	mov	r0, r4
   3dd44:	blx	r2
   3dd48:	ldr	r1, [r4, #16]
   3dd4c:	ldr	r0, [r4, #20]
   3dd50:	sub	r5, r5, r6
   3dd54:	sub	r6, r1, r0
   3dd58:	cmp	r5, r6
   3dd5c:	bhi	3dd20 <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   3dd60:	mov	r1, #32
   3dd64:	mov	r2, r5
   3dd68:	bl	14ee4 <memset@plt>
   3dd6c:	ldr	r0, [r4, #20]
   3dd70:	add	r2, r0, r5
   3dd74:	str	r2, [r4, #20]
   3dd78:	b	3dd9c <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   3dd7c:	ldr	r0, [r4, #16]
   3dd80:	cmp	r2, r0
   3dd84:	bcc	3dd9c <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   3dd88:	ldr	r2, [r4, #44]	; 0x2c
   3dd8c:	mov	r0, r4
   3dd90:	mov	r1, #0
   3dd94:	blx	r2
   3dd98:	ldr	r2, [r4, #20]
   3dd9c:	ldrd	r0, [r8, #4]
   3dda0:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3dda4:	ldr	r1, [r4, #20]
   3dda8:	subs	r9, r7, #1
   3ddac:	add	r0, r1, r0
   3ddb0:	str	r0, [r4, #20]
   3ddb4:	beq	3dee4 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3ddb8:	ldr	r0, [r4, #20]
   3ddbc:	add	r7, r8, #12
   3ddc0:	mov	r8, #44	; 0x2c
   3ddc4:	mov	sl, #10
   3ddc8:	b	3de04 <flatcc_json_printer_uint64_vector_field@@Base+0x200>
   3ddcc:	mov	r1, #32
   3ddd0:	mov	r2, r5
   3ddd4:	bl	14ee4 <memset@plt>
   3ddd8:	ldr	r0, [r4, #20]
   3dddc:	add	r2, r0, r5
   3dde0:	str	r2, [r4, #20]
   3dde4:	ldrd	r0, [r7]
   3dde8:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3ddec:	ldr	r1, [r4, #20]
   3ddf0:	add	r7, r7, #8
   3ddf4:	cmp	r9, #0
   3ddf8:	add	r0, r1, r0
   3ddfc:	str	r0, [r4, #20]
   3de00:	beq	3dee4 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   3de04:	add	r1, r0, #1
   3de08:	sub	r9, r9, #1
   3de0c:	str	r1, [r4, #20]
   3de10:	strb	r8, [r0]
   3de14:	ldrb	r0, [r4, #25]
   3de18:	ldr	r2, [r4, #20]
   3de1c:	cmp	r0, #0
   3de20:	beq	3dec0 <flatcc_json_printer_uint64_vector_field@@Base+0x2bc>
   3de24:	add	r0, r2, #1
   3de28:	str	r0, [r4, #20]
   3de2c:	strb	sl, [r2]
   3de30:	ldr	r0, [r4, #20]
   3de34:	ldrb	r2, [r4, #25]
   3de38:	ldr	r3, [r4, #32]
   3de3c:	ldr	r1, [r4, #16]
   3de40:	mla	r6, r3, r2, r0
   3de44:	mul	r5, r3, r2
   3de48:	cmp	r6, r1
   3de4c:	bls	3ddcc <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3de50:	cmp	r0, r1
   3de54:	bcc	3de70 <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   3de58:	ldr	r2, [r4, #44]	; 0x2c
   3de5c:	mov	r0, r4
   3de60:	mov	r1, #0
   3de64:	blx	r2
   3de68:	ldr	r1, [r4, #16]
   3de6c:	ldr	r0, [r4, #20]
   3de70:	sub	r6, r1, r0
   3de74:	cmp	r6, r5
   3de78:	bcs	3ddcc <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3de7c:	mov	r1, #32
   3de80:	mov	r2, r6
   3de84:	bl	14ee4 <memset@plt>
   3de88:	ldr	r0, [r4, #20]
   3de8c:	ldr	r2, [r4, #44]	; 0x2c
   3de90:	mov	r1, #0
   3de94:	add	r0, r0, r6
   3de98:	str	r0, [r4, #20]
   3de9c:	mov	r0, r4
   3dea0:	blx	r2
   3dea4:	ldr	r1, [r4, #16]
   3dea8:	ldr	r0, [r4, #20]
   3deac:	sub	r5, r5, r6
   3deb0:	sub	r6, r1, r0
   3deb4:	cmp	r5, r6
   3deb8:	bhi	3de7c <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   3debc:	b	3ddcc <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   3dec0:	ldr	r0, [r4, #16]
   3dec4:	cmp	r2, r0
   3dec8:	bcc	3dde4 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   3decc:	ldr	r2, [r4, #44]	; 0x2c
   3ded0:	mov	r0, r4
   3ded4:	mov	r1, #0
   3ded8:	blx	r2
   3dedc:	ldr	r2, [r4, #20]
   3dee0:	b	3dde4 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   3dee4:	ldrb	r1, [r4, #25]
   3dee8:	ldr	r0, [r4, #20]
   3deec:	cmp	r1, #0
   3def0:	beq	3dfb0 <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   3def4:	add	r1, r0, #1
   3def8:	str	r1, [r4, #20]
   3defc:	mov	r1, #10
   3df00:	strb	r1, [r0]
   3df04:	ldr	r0, [r4, #32]
   3df08:	sub	r2, r0, #1
   3df0c:	str	r2, [r4, #32]
   3df10:	ldrb	r3, [r4, #25]
   3df14:	ldr	r0, [r4, #20]
   3df18:	ldr	r1, [r4, #16]
   3df1c:	mla	r7, r2, r3, r0
   3df20:	mul	r5, r2, r3
   3df24:	cmp	r7, r1
   3df28:	bls	3df98 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   3df2c:	cmp	r0, r1
   3df30:	bcc	3df4c <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   3df34:	ldr	r2, [r4, #44]	; 0x2c
   3df38:	mov	r0, r4
   3df3c:	mov	r1, #0
   3df40:	blx	r2
   3df44:	ldr	r1, [r4, #16]
   3df48:	ldr	r0, [r4, #20]
   3df4c:	sub	r6, r1, r0
   3df50:	cmp	r6, r5
   3df54:	bcs	3df98 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   3df58:	mov	r1, #32
   3df5c:	mov	r2, r6
   3df60:	bl	14ee4 <memset@plt>
   3df64:	ldr	r0, [r4, #20]
   3df68:	ldr	r2, [r4, #44]	; 0x2c
   3df6c:	mov	r1, #0
   3df70:	add	r0, r0, r6
   3df74:	str	r0, [r4, #20]
   3df78:	mov	r0, r4
   3df7c:	blx	r2
   3df80:	ldr	r1, [r4, #16]
   3df84:	ldr	r0, [r4, #20]
   3df88:	sub	r5, r5, r6
   3df8c:	sub	r6, r1, r0
   3df90:	cmp	r5, r6
   3df94:	bhi	3df58 <flatcc_json_printer_uint64_vector_field@@Base+0x354>
   3df98:	mov	r1, #32
   3df9c:	mov	r2, r5
   3dfa0:	bl	14ee4 <memset@plt>
   3dfa4:	ldr	r0, [r4, #20]
   3dfa8:	add	r0, r0, r5
   3dfac:	str	r0, [r4, #20]
   3dfb0:	add	r1, r0, #1
   3dfb4:	str	r1, [r4, #20]
   3dfb8:	mov	r1, #93	; 0x5d
   3dfbc:	strb	r1, [r0]
   3dfc0:	sub	sp, fp, #28
   3dfc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003dfc8 <flatcc_json_printer_int8_vector_field@@Base>:
   3dfc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dfcc:	add	fp, sp, #28
   3dfd0:	sub	sp, sp, #4
   3dfd4:	mov	r4, r0
   3dfd8:	mov	r0, #4
   3dfdc:	add	r0, r0, r2, lsl #1
   3dfe0:	ldr	r2, [r1, #8]
   3dfe4:	cmp	r0, r2
   3dfe8:	bge	3e008 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   3dfec:	ldr	r2, [r1, #4]
   3dff0:	add	r0, r2, r0
   3dff4:	ldrh	r0, [r0]
   3dff8:	cmp	r0, #0
   3dffc:	ldrne	r2, [r1]
   3e000:	addsne	r9, r2, r0
   3e004:	bne	3e010 <flatcc_json_printer_int8_vector_field@@Base+0x48>
   3e008:	sub	sp, fp, #28
   3e00c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e010:	ldr	r0, [r1, #16]
   3e014:	ldr	r2, [fp, #8]
   3e018:	add	r7, r0, #1
   3e01c:	cmp	r0, #0
   3e020:	str	r7, [r1, #16]
   3e024:	beq	3e03c <flatcc_json_printer_int8_vector_field@@Base+0x74>
   3e028:	ldr	r0, [r4, #20]
   3e02c:	add	r1, r0, #1
   3e030:	str	r1, [r4, #20]
   3e034:	mov	r1, #44	; 0x2c
   3e038:	strb	r1, [r0]
   3e03c:	ldr	r0, [r9]
   3e040:	mov	r1, r3
   3e044:	ldr	r8, [r9, r0]!
   3e048:	mov	r0, r4
   3e04c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3e050:	ldr	r1, [r4, #32]
   3e054:	ldr	r0, [r4, #20]
   3e058:	cmp	r8, #0
   3e05c:	add	r1, r1, #1
   3e060:	str	r1, [r4, #32]
   3e064:	add	r1, r0, #1
   3e068:	str	r1, [r4, #20]
   3e06c:	mov	r1, #91	; 0x5b
   3e070:	strb	r1, [r0]
   3e074:	beq	3e42c <flatcc_json_printer_int8_vector_field@@Base+0x464>
   3e078:	ldrb	r1, [r4, #25]
   3e07c:	ldr	r0, [r4, #20]
   3e080:	cmp	r1, #0
   3e084:	beq	3e140 <flatcc_json_printer_int8_vector_field@@Base+0x178>
   3e088:	add	r1, r0, #1
   3e08c:	str	r1, [r4, #20]
   3e090:	mov	r1, #10
   3e094:	strb	r1, [r0]
   3e098:	ldr	r0, [r4, #20]
   3e09c:	ldrb	r2, [r4, #25]
   3e0a0:	ldr	r3, [r4, #32]
   3e0a4:	ldr	r1, [r4, #16]
   3e0a8:	mla	r7, r3, r2, r0
   3e0ac:	mul	r5, r3, r2
   3e0b0:	cmp	r7, r1
   3e0b4:	bls	3e124 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   3e0b8:	cmp	r0, r1
   3e0bc:	bcc	3e0d8 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   3e0c0:	ldr	r2, [r4, #44]	; 0x2c
   3e0c4:	mov	r0, r4
   3e0c8:	mov	r1, #0
   3e0cc:	blx	r2
   3e0d0:	ldr	r1, [r4, #16]
   3e0d4:	ldr	r0, [r4, #20]
   3e0d8:	sub	r6, r1, r0
   3e0dc:	cmp	r6, r5
   3e0e0:	bcs	3e124 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   3e0e4:	mov	r1, #32
   3e0e8:	mov	r2, r6
   3e0ec:	bl	14ee4 <memset@plt>
   3e0f0:	ldr	r0, [r4, #20]
   3e0f4:	ldr	r2, [r4, #44]	; 0x2c
   3e0f8:	mov	r1, #0
   3e0fc:	add	r0, r0, r6
   3e100:	str	r0, [r4, #20]
   3e104:	mov	r0, r4
   3e108:	blx	r2
   3e10c:	ldr	r1, [r4, #16]
   3e110:	ldr	r0, [r4, #20]
   3e114:	sub	r5, r5, r6
   3e118:	sub	r6, r1, r0
   3e11c:	cmp	r5, r6
   3e120:	bhi	3e0e4 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   3e124:	mov	r1, #32
   3e128:	mov	r2, r5
   3e12c:	bl	14ee4 <memset@plt>
   3e130:	ldr	r0, [r4, #20]
   3e134:	add	r0, r0, r5
   3e138:	str	r0, [r4, #20]
   3e13c:	b	3e160 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   3e140:	ldr	r1, [r4, #16]
   3e144:	cmp	r0, r1
   3e148:	bcc	3e160 <flatcc_json_printer_int8_vector_field@@Base+0x198>
   3e14c:	ldr	r2, [r4, #44]	; 0x2c
   3e150:	mov	r0, r4
   3e154:	mov	r1, #0
   3e158:	blx	r2
   3e15c:	ldr	r0, [r4, #20]
   3e160:	ldrb	r1, [r9, #4]
   3e164:	sxtb	r2, r1
   3e168:	lsr	r1, r1, #7
   3e16c:	cmn	r2, #1
   3e170:	movle	r3, #45	; 0x2d
   3e174:	rsble	r2, r2, #0
   3e178:	strble	r3, [r0], #1
   3e17c:	uxtb	r3, r2
   3e180:	cmp	r3, #100	; 0x64
   3e184:	bcc	3e1d4 <flatcc_json_printer_int8_vector_field@@Base+0x20c>
   3e188:	mov	r2, #0
   3e18c:	strb	r2, [r0, #3]
   3e190:	movw	r2, #34079	; 0x851f
   3e194:	movt	r2, #20971	; 0x51eb
   3e198:	umull	r2, r7, r3, r2
   3e19c:	mov	r2, #48	; 0x30
   3e1a0:	orr	r2, r2, r7, lsr #5
   3e1a4:	strb	r2, [r0]
   3e1a8:	lsr	r2, r7, #5
   3e1ac:	mov	r7, #100	; 0x64
   3e1b0:	mls	r2, r2, r7, r3
   3e1b4:	ldr	r3, [pc, #852]	; 3e510 <flatcc_json_printer_int8_vector_field@@Base+0x548>
   3e1b8:	uxtb	r2, r2
   3e1bc:	add	r3, pc, r3
   3e1c0:	add	r2, r3, r2, lsl #1
   3e1c4:	ldrh	r2, [r2]
   3e1c8:	strh	r2, [r0, #1]
   3e1cc:	mov	r0, #3
   3e1d0:	b	3e22c <flatcc_json_printer_int8_vector_field@@Base+0x264>
   3e1d4:	cmp	r3, #10
   3e1d8:	bcc	3e218 <flatcc_json_printer_int8_vector_field@@Base+0x250>
   3e1dc:	mov	r2, #0
   3e1e0:	strb	r2, [r0, #2]
   3e1e4:	movw	r2, #34079	; 0x851f
   3e1e8:	movt	r2, #20971	; 0x51eb
   3e1ec:	umull	r2, r7, r3, r2
   3e1f0:	lsr	r2, r7, #5
   3e1f4:	mov	r7, #100	; 0x64
   3e1f8:	mls	r2, r2, r7, r3
   3e1fc:	ldr	r3, [pc, #784]	; 3e514 <flatcc_json_printer_int8_vector_field@@Base+0x54c>
   3e200:	add	r3, pc, r3
   3e204:	add	r2, r3, r2, lsl #1
   3e208:	ldrh	r2, [r2]
   3e20c:	strh	r2, [r0]
   3e210:	mov	r0, #2
   3e214:	b	3e22c <flatcc_json_printer_int8_vector_field@@Base+0x264>
   3e218:	mov	r3, #0
   3e21c:	add	r2, r2, #48	; 0x30
   3e220:	strb	r3, [r0, #1]
   3e224:	strb	r2, [r0]
   3e228:	mov	r0, #1
   3e22c:	add	r0, r0, r1
   3e230:	ldr	r1, [r4, #20]
   3e234:	subs	r8, r8, #1
   3e238:	add	r0, r1, r0
   3e23c:	str	r0, [r4, #20]
   3e240:	beq	3e42c <flatcc_json_printer_int8_vector_field@@Base+0x464>
   3e244:	ldr	r0, [r4, #20]
   3e248:	add	r7, r9, #5
   3e24c:	mov	r9, #44	; 0x2c
   3e250:	mov	sl, #0
   3e254:	b	3e2b8 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   3e258:	movw	r2, #34079	; 0x851f
   3e25c:	strb	sl, [r0, #3]
   3e260:	movt	r2, #20971	; 0x51eb
   3e264:	umull	r2, r6, r3, r2
   3e268:	mov	r2, #48	; 0x30
   3e26c:	orr	r2, r2, r6, lsr #5
   3e270:	strb	r2, [r0]
   3e274:	lsr	r2, r6, #5
   3e278:	mov	r6, #100	; 0x64
   3e27c:	mls	r2, r2, r6, r3
   3e280:	ldr	r3, [pc, #656]	; 3e518 <flatcc_json_printer_int8_vector_field@@Base+0x550>
   3e284:	uxtb	r2, r2
   3e288:	add	r3, pc, r3
   3e28c:	add	r2, r3, r2, lsl #1
   3e290:	ldrh	r2, [r2]
   3e294:	strh	r2, [r0, #1]
   3e298:	mov	r0, #3
   3e29c:	add	r0, r0, r1
   3e2a0:	ldr	r1, [r4, #20]
   3e2a4:	add	r7, r7, #1
   3e2a8:	cmp	r8, #0
   3e2ac:	add	r0, r1, r0
   3e2b0:	str	r0, [r4, #20]
   3e2b4:	beq	3e42c <flatcc_json_printer_int8_vector_field@@Base+0x464>
   3e2b8:	add	r1, r0, #1
   3e2bc:	str	r1, [r4, #20]
   3e2c0:	strb	r9, [r0]
   3e2c4:	ldrb	r1, [r4, #25]
   3e2c8:	ldr	r0, [r4, #20]
   3e2cc:	cmp	r1, #0
   3e2d0:	beq	3e38c <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   3e2d4:	add	r1, r0, #1
   3e2d8:	str	r1, [r4, #20]
   3e2dc:	mov	r1, #10
   3e2e0:	strb	r1, [r0]
   3e2e4:	ldr	r0, [r4, #20]
   3e2e8:	ldrb	r2, [r4, #25]
   3e2ec:	ldr	r3, [r4, #32]
   3e2f0:	ldr	r1, [r4, #16]
   3e2f4:	mla	r6, r3, r2, r0
   3e2f8:	mul	r5, r3, r2
   3e2fc:	cmp	r6, r1
   3e300:	bls	3e370 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   3e304:	cmp	r0, r1
   3e308:	bcc	3e324 <flatcc_json_printer_int8_vector_field@@Base+0x35c>
   3e30c:	ldr	r2, [r4, #44]	; 0x2c
   3e310:	mov	r0, r4
   3e314:	mov	r1, #0
   3e318:	blx	r2
   3e31c:	ldr	r1, [r4, #16]
   3e320:	ldr	r0, [r4, #20]
   3e324:	sub	r6, r1, r0
   3e328:	cmp	r6, r5
   3e32c:	bcs	3e370 <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   3e330:	mov	r1, #32
   3e334:	mov	r2, r6
   3e338:	bl	14ee4 <memset@plt>
   3e33c:	ldr	r0, [r4, #20]
   3e340:	ldr	r2, [r4, #44]	; 0x2c
   3e344:	mov	r1, #0
   3e348:	add	r0, r0, r6
   3e34c:	str	r0, [r4, #20]
   3e350:	mov	r0, r4
   3e354:	blx	r2
   3e358:	ldr	r1, [r4, #16]
   3e35c:	ldr	r0, [r4, #20]
   3e360:	sub	r5, r5, r6
   3e364:	sub	r6, r1, r0
   3e368:	cmp	r5, r6
   3e36c:	bhi	3e330 <flatcc_json_printer_int8_vector_field@@Base+0x368>
   3e370:	mov	r1, #32
   3e374:	mov	r2, r5
   3e378:	bl	14ee4 <memset@plt>
   3e37c:	ldr	r0, [r4, #20]
   3e380:	add	r0, r0, r5
   3e384:	str	r0, [r4, #20]
   3e388:	b	3e3ac <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   3e38c:	ldr	r1, [r4, #16]
   3e390:	cmp	r0, r1
   3e394:	bcc	3e3ac <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   3e398:	ldr	r2, [r4, #44]	; 0x2c
   3e39c:	mov	r0, r4
   3e3a0:	mov	r1, #0
   3e3a4:	blx	r2
   3e3a8:	ldr	r0, [r4, #20]
   3e3ac:	ldrb	r1, [r7]
   3e3b0:	sub	r8, r8, #1
   3e3b4:	sxtb	r2, r1
   3e3b8:	lsr	r1, r1, #7
   3e3bc:	cmn	r2, #1
   3e3c0:	movle	r3, #45	; 0x2d
   3e3c4:	rsble	r2, r2, #0
   3e3c8:	strble	r3, [r0], #1
   3e3cc:	uxtb	r3, r2
   3e3d0:	cmp	r3, #100	; 0x64
   3e3d4:	bcs	3e258 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   3e3d8:	cmp	r3, #10
   3e3dc:	bcc	3e418 <flatcc_json_printer_int8_vector_field@@Base+0x450>
   3e3e0:	movw	r2, #34079	; 0x851f
   3e3e4:	strb	sl, [r0, #2]
   3e3e8:	movt	r2, #20971	; 0x51eb
   3e3ec:	umull	r2, r6, r3, r2
   3e3f0:	lsr	r2, r6, #5
   3e3f4:	mov	r6, #100	; 0x64
   3e3f8:	mls	r2, r2, r6, r3
   3e3fc:	ldr	r3, [pc, #280]	; 3e51c <flatcc_json_printer_int8_vector_field@@Base+0x554>
   3e400:	add	r3, pc, r3
   3e404:	add	r2, r3, r2, lsl #1
   3e408:	ldrh	r2, [r2]
   3e40c:	strh	r2, [r0]
   3e410:	mov	r0, #2
   3e414:	b	3e29c <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   3e418:	add	r2, r2, #48	; 0x30
   3e41c:	strb	sl, [r0, #1]
   3e420:	strb	r2, [r0]
   3e424:	mov	r0, #1
   3e428:	b	3e29c <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   3e42c:	ldrb	r1, [r4, #25]
   3e430:	ldr	r0, [r4, #20]
   3e434:	cmp	r1, #0
   3e438:	beq	3e4f8 <flatcc_json_printer_int8_vector_field@@Base+0x530>
   3e43c:	add	r1, r0, #1
   3e440:	str	r1, [r4, #20]
   3e444:	mov	r1, #10
   3e448:	strb	r1, [r0]
   3e44c:	ldr	r0, [r4, #32]
   3e450:	sub	r2, r0, #1
   3e454:	str	r2, [r4, #32]
   3e458:	ldrb	r3, [r4, #25]
   3e45c:	ldr	r0, [r4, #20]
   3e460:	ldr	r1, [r4, #16]
   3e464:	mla	r7, r2, r3, r0
   3e468:	mul	r5, r2, r3
   3e46c:	cmp	r7, r1
   3e470:	bls	3e4e0 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   3e474:	cmp	r0, r1
   3e478:	bcc	3e494 <flatcc_json_printer_int8_vector_field@@Base+0x4cc>
   3e47c:	ldr	r2, [r4, #44]	; 0x2c
   3e480:	mov	r0, r4
   3e484:	mov	r1, #0
   3e488:	blx	r2
   3e48c:	ldr	r1, [r4, #16]
   3e490:	ldr	r0, [r4, #20]
   3e494:	sub	r6, r1, r0
   3e498:	cmp	r6, r5
   3e49c:	bcs	3e4e0 <flatcc_json_printer_int8_vector_field@@Base+0x518>
   3e4a0:	mov	r1, #32
   3e4a4:	mov	r2, r6
   3e4a8:	bl	14ee4 <memset@plt>
   3e4ac:	ldr	r0, [r4, #20]
   3e4b0:	ldr	r2, [r4, #44]	; 0x2c
   3e4b4:	mov	r1, #0
   3e4b8:	add	r0, r0, r6
   3e4bc:	str	r0, [r4, #20]
   3e4c0:	mov	r0, r4
   3e4c4:	blx	r2
   3e4c8:	ldr	r1, [r4, #16]
   3e4cc:	ldr	r0, [r4, #20]
   3e4d0:	sub	r5, r5, r6
   3e4d4:	sub	r6, r1, r0
   3e4d8:	cmp	r5, r6
   3e4dc:	bhi	3e4a0 <flatcc_json_printer_int8_vector_field@@Base+0x4d8>
   3e4e0:	mov	r1, #32
   3e4e4:	mov	r2, r5
   3e4e8:	bl	14ee4 <memset@plt>
   3e4ec:	ldr	r0, [r4, #20]
   3e4f0:	add	r0, r0, r5
   3e4f4:	str	r0, [r4, #20]
   3e4f8:	add	r1, r0, #1
   3e4fc:	str	r1, [r4, #20]
   3e500:	mov	r1, #93	; 0x5d
   3e504:	strb	r1, [r0]
   3e508:	sub	sp, fp, #28
   3e50c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e510:	andeq	sp, r0, r3, lsr r0
   3e514:	andeq	ip, r0, pc, ror #31
   3e518:	andeq	ip, r0, r7, ror #30
   3e51c:	andeq	ip, r0, pc, ror #27

0003e520 <flatcc_json_printer_int16_vector_field@@Base>:
   3e520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e524:	add	fp, sp, #28
   3e528:	sub	sp, sp, #4
   3e52c:	mov	r4, r0
   3e530:	mov	r0, #4
   3e534:	add	r0, r0, r2, lsl #1
   3e538:	ldr	r2, [r1, #8]
   3e53c:	cmp	r0, r2
   3e540:	bge	3e560 <flatcc_json_printer_int16_vector_field@@Base+0x40>
   3e544:	ldr	r2, [r1, #4]
   3e548:	add	r0, r2, r0
   3e54c:	ldrh	r0, [r0]
   3e550:	cmp	r0, #0
   3e554:	ldrne	r2, [r1]
   3e558:	addsne	r8, r2, r0
   3e55c:	bne	3e568 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   3e560:	sub	sp, fp, #28
   3e564:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e568:	ldr	r0, [r1, #16]
   3e56c:	ldr	r2, [fp, #8]
   3e570:	add	r7, r0, #1
   3e574:	cmp	r0, #0
   3e578:	str	r7, [r1, #16]
   3e57c:	beq	3e594 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   3e580:	ldr	r0, [r4, #20]
   3e584:	add	r1, r0, #1
   3e588:	str	r1, [r4, #20]
   3e58c:	mov	r1, #44	; 0x2c
   3e590:	strb	r1, [r0]
   3e594:	ldr	r0, [r8]
   3e598:	mov	r1, r3
   3e59c:	ldr	r7, [r8, r0]!
   3e5a0:	mov	r0, r4
   3e5a4:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3e5a8:	ldr	r1, [r4, #32]
   3e5ac:	ldr	r0, [r4, #20]
   3e5b0:	cmp	r7, #0
   3e5b4:	add	r1, r1, #1
   3e5b8:	str	r1, [r4, #32]
   3e5bc:	add	r1, r0, #1
   3e5c0:	str	r1, [r4, #20]
   3e5c4:	mov	r1, #91	; 0x5b
   3e5c8:	strb	r1, [r0]
   3e5cc:	beq	3e840 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   3e5d0:	ldrb	r0, [r4, #25]
   3e5d4:	ldr	r1, [r4, #20]
   3e5d8:	cmp	r0, #0
   3e5dc:	beq	3e698 <flatcc_json_printer_int16_vector_field@@Base+0x178>
   3e5e0:	add	r0, r1, #1
   3e5e4:	str	r0, [r4, #20]
   3e5e8:	mov	r0, #10
   3e5ec:	strb	r0, [r1]
   3e5f0:	ldr	r0, [r4, #20]
   3e5f4:	ldrb	r2, [r4, #25]
   3e5f8:	ldr	r3, [r4, #32]
   3e5fc:	ldr	r1, [r4, #16]
   3e600:	mla	r6, r3, r2, r0
   3e604:	mul	r5, r3, r2
   3e608:	cmp	r6, r1
   3e60c:	bls	3e67c <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   3e610:	cmp	r0, r1
   3e614:	bcc	3e630 <flatcc_json_printer_int16_vector_field@@Base+0x110>
   3e618:	ldr	r2, [r4, #44]	; 0x2c
   3e61c:	mov	r0, r4
   3e620:	mov	r1, #0
   3e624:	blx	r2
   3e628:	ldr	r1, [r4, #16]
   3e62c:	ldr	r0, [r4, #20]
   3e630:	sub	r6, r1, r0
   3e634:	cmp	r6, r5
   3e638:	bcs	3e67c <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   3e63c:	mov	r1, #32
   3e640:	mov	r2, r6
   3e644:	bl	14ee4 <memset@plt>
   3e648:	ldr	r0, [r4, #20]
   3e64c:	ldr	r2, [r4, #44]	; 0x2c
   3e650:	mov	r1, #0
   3e654:	add	r0, r0, r6
   3e658:	str	r0, [r4, #20]
   3e65c:	mov	r0, r4
   3e660:	blx	r2
   3e664:	ldr	r1, [r4, #16]
   3e668:	ldr	r0, [r4, #20]
   3e66c:	sub	r5, r5, r6
   3e670:	sub	r6, r1, r0
   3e674:	cmp	r5, r6
   3e678:	bhi	3e63c <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   3e67c:	mov	r1, #32
   3e680:	mov	r2, r5
   3e684:	bl	14ee4 <memset@plt>
   3e688:	ldr	r0, [r4, #20]
   3e68c:	add	r1, r0, r5
   3e690:	str	r1, [r4, #20]
   3e694:	b	3e6b8 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   3e698:	ldr	r0, [r4, #16]
   3e69c:	cmp	r1, r0
   3e6a0:	bcc	3e6b8 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   3e6a4:	ldr	r2, [r4, #44]	; 0x2c
   3e6a8:	mov	r0, r4
   3e6ac:	mov	r1, #0
   3e6b0:	blx	r2
   3e6b4:	ldr	r1, [r4, #20]
   3e6b8:	ldrh	r0, [r8, #4]
   3e6bc:	lsr	r5, r0, #15
   3e6c0:	sxth	r0, r0
   3e6c4:	cmn	r0, #1
   3e6c8:	rsble	r0, r0, #0
   3e6cc:	movle	r2, #45	; 0x2d
   3e6d0:	uxth	r0, r0
   3e6d4:	strble	r2, [r1], #1
   3e6d8:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3e6dc:	ldr	r1, [r4, #20]
   3e6e0:	add	r0, r0, r5
   3e6e4:	subs	r9, r7, #1
   3e6e8:	add	r0, r1, r0
   3e6ec:	str	r0, [r4, #20]
   3e6f0:	beq	3e840 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   3e6f4:	ldr	r0, [r4, #20]
   3e6f8:	add	r7, r8, #6
   3e6fc:	mov	r8, #44	; 0x2c
   3e700:	mov	sl, #10
   3e704:	b	3e764 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   3e708:	mov	r1, #32
   3e70c:	mov	r2, r5
   3e710:	bl	14ee4 <memset@plt>
   3e714:	ldr	r0, [r4, #20]
   3e718:	add	r1, r0, r5
   3e71c:	str	r1, [r4, #20]
   3e720:	ldrh	r0, [r7]
   3e724:	sub	r9, r9, #1
   3e728:	lsr	r5, r0, #15
   3e72c:	sxth	r0, r0
   3e730:	cmn	r0, #1
   3e734:	rsble	r0, r0, #0
   3e738:	movle	r2, #45	; 0x2d
   3e73c:	uxth	r0, r0
   3e740:	strble	r2, [r1], #1
   3e744:	bl	39618 <flatcc_json_printer_uint16@@Base+0x2c>
   3e748:	ldr	r1, [r4, #20]
   3e74c:	add	r0, r0, r5
   3e750:	add	r7, r7, #2
   3e754:	cmp	r9, #0
   3e758:	add	r0, r1, r0
   3e75c:	str	r0, [r4, #20]
   3e760:	beq	3e840 <flatcc_json_printer_int16_vector_field@@Base+0x320>
   3e764:	add	r1, r0, #1
   3e768:	str	r1, [r4, #20]
   3e76c:	strb	r8, [r0]
   3e770:	ldrb	r0, [r4, #25]
   3e774:	ldr	r1, [r4, #20]
   3e778:	cmp	r0, #0
   3e77c:	beq	3e81c <flatcc_json_printer_int16_vector_field@@Base+0x2fc>
   3e780:	add	r0, r1, #1
   3e784:	str	r0, [r4, #20]
   3e788:	strb	sl, [r1]
   3e78c:	ldr	r0, [r4, #20]
   3e790:	ldrb	r2, [r4, #25]
   3e794:	ldr	r3, [r4, #32]
   3e798:	ldr	r1, [r4, #16]
   3e79c:	mla	r6, r3, r2, r0
   3e7a0:	mul	r5, r3, r2
   3e7a4:	cmp	r6, r1
   3e7a8:	bls	3e708 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   3e7ac:	cmp	r0, r1
   3e7b0:	bcc	3e7cc <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   3e7b4:	ldr	r2, [r4, #44]	; 0x2c
   3e7b8:	mov	r0, r4
   3e7bc:	mov	r1, #0
   3e7c0:	blx	r2
   3e7c4:	ldr	r1, [r4, #16]
   3e7c8:	ldr	r0, [r4, #20]
   3e7cc:	sub	r6, r1, r0
   3e7d0:	cmp	r6, r5
   3e7d4:	bcs	3e708 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   3e7d8:	mov	r1, #32
   3e7dc:	mov	r2, r6
   3e7e0:	bl	14ee4 <memset@plt>
   3e7e4:	ldr	r0, [r4, #20]
   3e7e8:	ldr	r2, [r4, #44]	; 0x2c
   3e7ec:	mov	r1, #0
   3e7f0:	add	r0, r0, r6
   3e7f4:	str	r0, [r4, #20]
   3e7f8:	mov	r0, r4
   3e7fc:	blx	r2
   3e800:	ldr	r1, [r4, #16]
   3e804:	ldr	r0, [r4, #20]
   3e808:	sub	r5, r5, r6
   3e80c:	sub	r6, r1, r0
   3e810:	cmp	r5, r6
   3e814:	bhi	3e7d8 <flatcc_json_printer_int16_vector_field@@Base+0x2b8>
   3e818:	b	3e708 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   3e81c:	ldr	r0, [r4, #16]
   3e820:	cmp	r1, r0
   3e824:	bcc	3e720 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   3e828:	ldr	r2, [r4, #44]	; 0x2c
   3e82c:	mov	r0, r4
   3e830:	mov	r1, #0
   3e834:	blx	r2
   3e838:	ldr	r1, [r4, #20]
   3e83c:	b	3e720 <flatcc_json_printer_int16_vector_field@@Base+0x200>
   3e840:	ldrb	r1, [r4, #25]
   3e844:	ldr	r0, [r4, #20]
   3e848:	cmp	r1, #0
   3e84c:	beq	3e90c <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   3e850:	add	r1, r0, #1
   3e854:	str	r1, [r4, #20]
   3e858:	mov	r1, #10
   3e85c:	strb	r1, [r0]
   3e860:	ldr	r0, [r4, #32]
   3e864:	sub	r2, r0, #1
   3e868:	str	r2, [r4, #32]
   3e86c:	ldrb	r3, [r4, #25]
   3e870:	ldr	r0, [r4, #20]
   3e874:	ldr	r1, [r4, #16]
   3e878:	mla	r7, r2, r3, r0
   3e87c:	mul	r5, r2, r3
   3e880:	cmp	r7, r1
   3e884:	bls	3e8f4 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   3e888:	cmp	r0, r1
   3e88c:	bcc	3e8a8 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   3e890:	ldr	r2, [r4, #44]	; 0x2c
   3e894:	mov	r0, r4
   3e898:	mov	r1, #0
   3e89c:	blx	r2
   3e8a0:	ldr	r1, [r4, #16]
   3e8a4:	ldr	r0, [r4, #20]
   3e8a8:	sub	r6, r1, r0
   3e8ac:	cmp	r6, r5
   3e8b0:	bcs	3e8f4 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   3e8b4:	mov	r1, #32
   3e8b8:	mov	r2, r6
   3e8bc:	bl	14ee4 <memset@plt>
   3e8c0:	ldr	r0, [r4, #20]
   3e8c4:	ldr	r2, [r4, #44]	; 0x2c
   3e8c8:	mov	r1, #0
   3e8cc:	add	r0, r0, r6
   3e8d0:	str	r0, [r4, #20]
   3e8d4:	mov	r0, r4
   3e8d8:	blx	r2
   3e8dc:	ldr	r1, [r4, #16]
   3e8e0:	ldr	r0, [r4, #20]
   3e8e4:	sub	r5, r5, r6
   3e8e8:	sub	r6, r1, r0
   3e8ec:	cmp	r5, r6
   3e8f0:	bhi	3e8b4 <flatcc_json_printer_int16_vector_field@@Base+0x394>
   3e8f4:	mov	r1, #32
   3e8f8:	mov	r2, r5
   3e8fc:	bl	14ee4 <memset@plt>
   3e900:	ldr	r0, [r4, #20]
   3e904:	add	r0, r0, r5
   3e908:	str	r0, [r4, #20]
   3e90c:	add	r1, r0, #1
   3e910:	str	r1, [r4, #20]
   3e914:	mov	r1, #93	; 0x5d
   3e918:	strb	r1, [r0]
   3e91c:	sub	sp, fp, #28
   3e920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003e924 <flatcc_json_printer_int32_vector_field@@Base>:
   3e924:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3e928:	add	fp, sp, #28
   3e92c:	sub	sp, sp, #4
   3e930:	mov	r4, r0
   3e934:	mov	r0, #4
   3e938:	add	r0, r0, r2, lsl #1
   3e93c:	ldr	r2, [r1, #8]
   3e940:	cmp	r0, r2
   3e944:	bge	3e964 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   3e948:	ldr	r2, [r1, #4]
   3e94c:	add	r0, r2, r0
   3e950:	ldrh	r0, [r0]
   3e954:	cmp	r0, #0
   3e958:	ldrne	r2, [r1]
   3e95c:	addsne	r8, r2, r0
   3e960:	bne	3e96c <flatcc_json_printer_int32_vector_field@@Base+0x48>
   3e964:	sub	sp, fp, #28
   3e968:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3e96c:	ldr	r0, [r1, #16]
   3e970:	ldr	r2, [fp, #8]
   3e974:	add	r7, r0, #1
   3e978:	cmp	r0, #0
   3e97c:	str	r7, [r1, #16]
   3e980:	beq	3e998 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   3e984:	ldr	r0, [r4, #20]
   3e988:	add	r1, r0, #1
   3e98c:	str	r1, [r4, #20]
   3e990:	mov	r1, #44	; 0x2c
   3e994:	strb	r1, [r0]
   3e998:	ldr	r0, [r8]
   3e99c:	mov	r1, r3
   3e9a0:	ldr	r7, [r8, r0]!
   3e9a4:	mov	r0, r4
   3e9a8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3e9ac:	ldr	r1, [r4, #32]
   3e9b0:	ldr	r0, [r4, #20]
   3e9b4:	cmp	r7, #0
   3e9b8:	add	r1, r1, #1
   3e9bc:	str	r1, [r4, #32]
   3e9c0:	add	r1, r0, #1
   3e9c4:	str	r1, [r4, #20]
   3e9c8:	mov	r1, #91	; 0x5b
   3e9cc:	strb	r1, [r0]
   3e9d0:	beq	3ec34 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   3e9d4:	ldrb	r0, [r4, #25]
   3e9d8:	ldr	r1, [r4, #20]
   3e9dc:	cmp	r0, #0
   3e9e0:	beq	3ea9c <flatcc_json_printer_int32_vector_field@@Base+0x178>
   3e9e4:	add	r0, r1, #1
   3e9e8:	str	r0, [r4, #20]
   3e9ec:	mov	r0, #10
   3e9f0:	strb	r0, [r1]
   3e9f4:	ldr	r0, [r4, #20]
   3e9f8:	ldrb	r2, [r4, #25]
   3e9fc:	ldr	r3, [r4, #32]
   3ea00:	ldr	r1, [r4, #16]
   3ea04:	mla	r6, r3, r2, r0
   3ea08:	mul	r5, r3, r2
   3ea0c:	cmp	r6, r1
   3ea10:	bls	3ea80 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   3ea14:	cmp	r0, r1
   3ea18:	bcc	3ea34 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   3ea1c:	ldr	r2, [r4, #44]	; 0x2c
   3ea20:	mov	r0, r4
   3ea24:	mov	r1, #0
   3ea28:	blx	r2
   3ea2c:	ldr	r1, [r4, #16]
   3ea30:	ldr	r0, [r4, #20]
   3ea34:	sub	r6, r1, r0
   3ea38:	cmp	r6, r5
   3ea3c:	bcs	3ea80 <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   3ea40:	mov	r1, #32
   3ea44:	mov	r2, r6
   3ea48:	bl	14ee4 <memset@plt>
   3ea4c:	ldr	r0, [r4, #20]
   3ea50:	ldr	r2, [r4, #44]	; 0x2c
   3ea54:	mov	r1, #0
   3ea58:	add	r0, r0, r6
   3ea5c:	str	r0, [r4, #20]
   3ea60:	mov	r0, r4
   3ea64:	blx	r2
   3ea68:	ldr	r1, [r4, #16]
   3ea6c:	ldr	r0, [r4, #20]
   3ea70:	sub	r5, r5, r6
   3ea74:	sub	r6, r1, r0
   3ea78:	cmp	r5, r6
   3ea7c:	bhi	3ea40 <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   3ea80:	mov	r1, #32
   3ea84:	mov	r2, r5
   3ea88:	bl	14ee4 <memset@plt>
   3ea8c:	ldr	r0, [r4, #20]
   3ea90:	add	r1, r0, r5
   3ea94:	str	r1, [r4, #20]
   3ea98:	b	3eabc <flatcc_json_printer_int32_vector_field@@Base+0x198>
   3ea9c:	ldr	r0, [r4, #16]
   3eaa0:	cmp	r1, r0
   3eaa4:	bcc	3eabc <flatcc_json_printer_int32_vector_field@@Base+0x198>
   3eaa8:	ldr	r2, [r4, #44]	; 0x2c
   3eaac:	mov	r0, r4
   3eab0:	mov	r1, #0
   3eab4:	blx	r2
   3eab8:	ldr	r1, [r4, #20]
   3eabc:	ldr	r0, [r8, #4]
   3eac0:	cmn	r0, #1
   3eac4:	lsr	r5, r0, #31
   3eac8:	movle	r2, #45	; 0x2d
   3eacc:	rsble	r0, r0, #0
   3ead0:	strble	r2, [r1], #1
   3ead4:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3ead8:	ldr	r1, [r4, #20]
   3eadc:	add	r0, r0, r5
   3eae0:	subs	r9, r7, #1
   3eae4:	add	r0, r1, r0
   3eae8:	str	r0, [r4, #20]
   3eaec:	beq	3ec34 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   3eaf0:	ldr	r0, [r4, #20]
   3eaf4:	add	r7, r8, #8
   3eaf8:	mov	r8, #44	; 0x2c
   3eafc:	mov	sl, #10
   3eb00:	b	3eb58 <flatcc_json_printer_int32_vector_field@@Base+0x234>
   3eb04:	mov	r1, #32
   3eb08:	mov	r2, r5
   3eb0c:	bl	14ee4 <memset@plt>
   3eb10:	ldr	r0, [r4, #20]
   3eb14:	add	r1, r0, r5
   3eb18:	str	r1, [r4, #20]
   3eb1c:	ldr	r0, [r7]
   3eb20:	sub	r9, r9, #1
   3eb24:	cmn	r0, #1
   3eb28:	lsr	r5, r0, #31
   3eb2c:	movle	r2, #45	; 0x2d
   3eb30:	rsble	r0, r0, #0
   3eb34:	strble	r2, [r1], #1
   3eb38:	bl	397c4 <flatcc_json_printer_uint32@@Base+0x2c>
   3eb3c:	ldr	r1, [r4, #20]
   3eb40:	add	r0, r0, r5
   3eb44:	add	r7, r7, #4
   3eb48:	cmp	r9, #0
   3eb4c:	add	r0, r1, r0
   3eb50:	str	r0, [r4, #20]
   3eb54:	beq	3ec34 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   3eb58:	add	r1, r0, #1
   3eb5c:	str	r1, [r4, #20]
   3eb60:	strb	r8, [r0]
   3eb64:	ldrb	r0, [r4, #25]
   3eb68:	ldr	r1, [r4, #20]
   3eb6c:	cmp	r0, #0
   3eb70:	beq	3ec10 <flatcc_json_printer_int32_vector_field@@Base+0x2ec>
   3eb74:	add	r0, r1, #1
   3eb78:	str	r0, [r4, #20]
   3eb7c:	strb	sl, [r1]
   3eb80:	ldr	r0, [r4, #20]
   3eb84:	ldrb	r2, [r4, #25]
   3eb88:	ldr	r3, [r4, #32]
   3eb8c:	ldr	r1, [r4, #16]
   3eb90:	mla	r6, r3, r2, r0
   3eb94:	mul	r5, r3, r2
   3eb98:	cmp	r6, r1
   3eb9c:	bls	3eb04 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   3eba0:	cmp	r0, r1
   3eba4:	bcc	3ebc0 <flatcc_json_printer_int32_vector_field@@Base+0x29c>
   3eba8:	ldr	r2, [r4, #44]	; 0x2c
   3ebac:	mov	r0, r4
   3ebb0:	mov	r1, #0
   3ebb4:	blx	r2
   3ebb8:	ldr	r1, [r4, #16]
   3ebbc:	ldr	r0, [r4, #20]
   3ebc0:	sub	r6, r1, r0
   3ebc4:	cmp	r6, r5
   3ebc8:	bcs	3eb04 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   3ebcc:	mov	r1, #32
   3ebd0:	mov	r2, r6
   3ebd4:	bl	14ee4 <memset@plt>
   3ebd8:	ldr	r0, [r4, #20]
   3ebdc:	ldr	r2, [r4, #44]	; 0x2c
   3ebe0:	mov	r1, #0
   3ebe4:	add	r0, r0, r6
   3ebe8:	str	r0, [r4, #20]
   3ebec:	mov	r0, r4
   3ebf0:	blx	r2
   3ebf4:	ldr	r1, [r4, #16]
   3ebf8:	ldr	r0, [r4, #20]
   3ebfc:	sub	r5, r5, r6
   3ec00:	sub	r6, r1, r0
   3ec04:	cmp	r5, r6
   3ec08:	bhi	3ebcc <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   3ec0c:	b	3eb04 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   3ec10:	ldr	r0, [r4, #16]
   3ec14:	cmp	r1, r0
   3ec18:	bcc	3eb1c <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   3ec1c:	ldr	r2, [r4, #44]	; 0x2c
   3ec20:	mov	r0, r4
   3ec24:	mov	r1, #0
   3ec28:	blx	r2
   3ec2c:	ldr	r1, [r4, #20]
   3ec30:	b	3eb1c <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   3ec34:	ldrb	r1, [r4, #25]
   3ec38:	ldr	r0, [r4, #20]
   3ec3c:	cmp	r1, #0
   3ec40:	beq	3ed00 <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   3ec44:	add	r1, r0, #1
   3ec48:	str	r1, [r4, #20]
   3ec4c:	mov	r1, #10
   3ec50:	strb	r1, [r0]
   3ec54:	ldr	r0, [r4, #32]
   3ec58:	sub	r2, r0, #1
   3ec5c:	str	r2, [r4, #32]
   3ec60:	ldrb	r3, [r4, #25]
   3ec64:	ldr	r0, [r4, #20]
   3ec68:	ldr	r1, [r4, #16]
   3ec6c:	mla	r7, r2, r3, r0
   3ec70:	mul	r5, r2, r3
   3ec74:	cmp	r7, r1
   3ec78:	bls	3ece8 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   3ec7c:	cmp	r0, r1
   3ec80:	bcc	3ec9c <flatcc_json_printer_int32_vector_field@@Base+0x378>
   3ec84:	ldr	r2, [r4, #44]	; 0x2c
   3ec88:	mov	r0, r4
   3ec8c:	mov	r1, #0
   3ec90:	blx	r2
   3ec94:	ldr	r1, [r4, #16]
   3ec98:	ldr	r0, [r4, #20]
   3ec9c:	sub	r6, r1, r0
   3eca0:	cmp	r6, r5
   3eca4:	bcs	3ece8 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   3eca8:	mov	r1, #32
   3ecac:	mov	r2, r6
   3ecb0:	bl	14ee4 <memset@plt>
   3ecb4:	ldr	r0, [r4, #20]
   3ecb8:	ldr	r2, [r4, #44]	; 0x2c
   3ecbc:	mov	r1, #0
   3ecc0:	add	r0, r0, r6
   3ecc4:	str	r0, [r4, #20]
   3ecc8:	mov	r0, r4
   3eccc:	blx	r2
   3ecd0:	ldr	r1, [r4, #16]
   3ecd4:	ldr	r0, [r4, #20]
   3ecd8:	sub	r5, r5, r6
   3ecdc:	sub	r6, r1, r0
   3ece0:	cmp	r5, r6
   3ece4:	bhi	3eca8 <flatcc_json_printer_int32_vector_field@@Base+0x384>
   3ece8:	mov	r1, #32
   3ecec:	mov	r2, r5
   3ecf0:	bl	14ee4 <memset@plt>
   3ecf4:	ldr	r0, [r4, #20]
   3ecf8:	add	r0, r0, r5
   3ecfc:	str	r0, [r4, #20]
   3ed00:	add	r1, r0, #1
   3ed04:	str	r1, [r4, #20]
   3ed08:	mov	r1, #93	; 0x5d
   3ed0c:	strb	r1, [r0]
   3ed10:	sub	sp, fp, #28
   3ed14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ed18 <flatcc_json_printer_int64_vector_field@@Base>:
   3ed18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ed1c:	add	fp, sp, #28
   3ed20:	sub	sp, sp, #4
   3ed24:	mov	r4, r0
   3ed28:	mov	r0, #4
   3ed2c:	add	r0, r0, r2, lsl #1
   3ed30:	ldr	r2, [r1, #8]
   3ed34:	cmp	r0, r2
   3ed38:	bge	3ed58 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   3ed3c:	ldr	r2, [r1, #4]
   3ed40:	add	r0, r2, r0
   3ed44:	ldrh	r0, [r0]
   3ed48:	cmp	r0, #0
   3ed4c:	ldrne	r2, [r1]
   3ed50:	addsne	r8, r2, r0
   3ed54:	bne	3ed60 <flatcc_json_printer_int64_vector_field@@Base+0x48>
   3ed58:	sub	sp, fp, #28
   3ed5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ed60:	ldr	r0, [r1, #16]
   3ed64:	ldr	r2, [fp, #8]
   3ed68:	add	r7, r0, #1
   3ed6c:	cmp	r0, #0
   3ed70:	str	r7, [r1, #16]
   3ed74:	beq	3ed8c <flatcc_json_printer_int64_vector_field@@Base+0x74>
   3ed78:	ldr	r0, [r4, #20]
   3ed7c:	add	r1, r0, #1
   3ed80:	str	r1, [r4, #20]
   3ed84:	mov	r1, #44	; 0x2c
   3ed88:	strb	r1, [r0]
   3ed8c:	ldr	r0, [r8]
   3ed90:	mov	r1, r3
   3ed94:	ldr	r7, [r8, r0]!
   3ed98:	mov	r0, r4
   3ed9c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3eda0:	ldr	r1, [r4, #32]
   3eda4:	ldr	r0, [r4, #20]
   3eda8:	cmp	r7, #0
   3edac:	add	r1, r1, #1
   3edb0:	str	r1, [r4, #32]
   3edb4:	add	r1, r0, #1
   3edb8:	str	r1, [r4, #20]
   3edbc:	mov	r1, #91	; 0x5b
   3edc0:	strb	r1, [r0]
   3edc4:	beq	3f038 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   3edc8:	ldrb	r0, [r4, #25]
   3edcc:	ldr	r2, [r4, #20]
   3edd0:	cmp	r0, #0
   3edd4:	beq	3ee90 <flatcc_json_printer_int64_vector_field@@Base+0x178>
   3edd8:	add	r0, r2, #1
   3eddc:	str	r0, [r4, #20]
   3ede0:	mov	r0, #10
   3ede4:	strb	r0, [r2]
   3ede8:	ldr	r0, [r4, #20]
   3edec:	ldrb	r2, [r4, #25]
   3edf0:	ldr	r3, [r4, #32]
   3edf4:	ldr	r1, [r4, #16]
   3edf8:	mla	r6, r3, r2, r0
   3edfc:	mul	r5, r3, r2
   3ee00:	cmp	r6, r1
   3ee04:	bls	3ee74 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   3ee08:	cmp	r0, r1
   3ee0c:	bcc	3ee28 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   3ee10:	ldr	r2, [r4, #44]	; 0x2c
   3ee14:	mov	r0, r4
   3ee18:	mov	r1, #0
   3ee1c:	blx	r2
   3ee20:	ldr	r1, [r4, #16]
   3ee24:	ldr	r0, [r4, #20]
   3ee28:	sub	r6, r1, r0
   3ee2c:	cmp	r6, r5
   3ee30:	bcs	3ee74 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   3ee34:	mov	r1, #32
   3ee38:	mov	r2, r6
   3ee3c:	bl	14ee4 <memset@plt>
   3ee40:	ldr	r0, [r4, #20]
   3ee44:	ldr	r2, [r4, #44]	; 0x2c
   3ee48:	mov	r1, #0
   3ee4c:	add	r0, r0, r6
   3ee50:	str	r0, [r4, #20]
   3ee54:	mov	r0, r4
   3ee58:	blx	r2
   3ee5c:	ldr	r1, [r4, #16]
   3ee60:	ldr	r0, [r4, #20]
   3ee64:	sub	r5, r5, r6
   3ee68:	sub	r6, r1, r0
   3ee6c:	cmp	r5, r6
   3ee70:	bhi	3ee34 <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   3ee74:	mov	r1, #32
   3ee78:	mov	r2, r5
   3ee7c:	bl	14ee4 <memset@plt>
   3ee80:	ldr	r0, [r4, #20]
   3ee84:	add	r2, r0, r5
   3ee88:	str	r2, [r4, #20]
   3ee8c:	b	3eeb0 <flatcc_json_printer_int64_vector_field@@Base+0x198>
   3ee90:	ldr	r0, [r4, #16]
   3ee94:	cmp	r2, r0
   3ee98:	bcc	3eeb0 <flatcc_json_printer_int64_vector_field@@Base+0x198>
   3ee9c:	ldr	r2, [r4, #44]	; 0x2c
   3eea0:	mov	r0, r4
   3eea4:	mov	r1, #0
   3eea8:	blx	r2
   3eeac:	ldr	r2, [r4, #20]
   3eeb0:	ldrd	r0, [r8, #4]
   3eeb4:	lsr	r5, r1, #31
   3eeb8:	cmn	r1, #1
   3eebc:	bgt	3eed0 <flatcc_json_printer_int64_vector_field@@Base+0x1b8>
   3eec0:	mov	r3, #45	; 0x2d
   3eec4:	rsbs	r0, r0, #0
   3eec8:	strb	r3, [r2], #1
   3eecc:	rsc	r1, r1, #0
   3eed0:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3eed4:	ldr	r1, [r4, #20]
   3eed8:	add	r0, r0, r5
   3eedc:	subs	r9, r7, #1
   3eee0:	add	r0, r1, r0
   3eee4:	str	r0, [r4, #20]
   3eee8:	beq	3f038 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   3eeec:	ldr	r0, [r4, #20]
   3eef0:	add	r7, r8, #12
   3eef4:	mov	r8, #44	; 0x2c
   3eef8:	mov	sl, #10
   3eefc:	b	3ef20 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   3ef00:	bl	39b18 <flatcc_json_printer_uint64@@Base+0x30>
   3ef04:	ldr	r1, [r4, #20]
   3ef08:	add	r0, r0, r5
   3ef0c:	add	r7, r7, #8
   3ef10:	cmp	r9, #0
   3ef14:	add	r0, r1, r0
   3ef18:	str	r0, [r4, #20]
   3ef1c:	beq	3f038 <flatcc_json_printer_int64_vector_field@@Base+0x320>
   3ef20:	add	r1, r0, #1
   3ef24:	str	r1, [r4, #20]
   3ef28:	strb	r8, [r0]
   3ef2c:	ldrb	r0, [r4, #25]
   3ef30:	ldr	r2, [r4, #20]
   3ef34:	cmp	r0, #0
   3ef38:	beq	3eff0 <flatcc_json_printer_int64_vector_field@@Base+0x2d8>
   3ef3c:	add	r0, r2, #1
   3ef40:	str	r0, [r4, #20]
   3ef44:	strb	sl, [r2]
   3ef48:	ldr	r0, [r4, #20]
   3ef4c:	ldrb	r2, [r4, #25]
   3ef50:	ldr	r3, [r4, #32]
   3ef54:	ldr	r1, [r4, #16]
   3ef58:	mla	r6, r3, r2, r0
   3ef5c:	mul	r5, r3, r2
   3ef60:	cmp	r6, r1
   3ef64:	bls	3efd4 <flatcc_json_printer_int64_vector_field@@Base+0x2bc>
   3ef68:	cmp	r0, r1
   3ef6c:	bcc	3ef88 <flatcc_json_printer_int64_vector_field@@Base+0x270>
   3ef70:	ldr	r2, [r4, #44]	; 0x2c
   3ef74:	mov	r0, r4
   3ef78:	mov	r1, #0
   3ef7c:	blx	r2
   3ef80:	ldr	r1, [r4, #16]
   3ef84:	ldr	r0, [r4, #20]
   3ef88:	sub	r6, r1, r0
   3ef8c:	cmp	r6, r5
   3ef90:	bcs	3efd4 <flatcc_json_printer_int64_vector_field@@Base+0x2bc>
   3ef94:	mov	r1, #32
   3ef98:	mov	r2, r6
   3ef9c:	bl	14ee4 <memset@plt>
   3efa0:	ldr	r0, [r4, #20]
   3efa4:	ldr	r2, [r4, #44]	; 0x2c
   3efa8:	mov	r1, #0
   3efac:	add	r0, r0, r6
   3efb0:	str	r0, [r4, #20]
   3efb4:	mov	r0, r4
   3efb8:	blx	r2
   3efbc:	ldr	r1, [r4, #16]
   3efc0:	ldr	r0, [r4, #20]
   3efc4:	sub	r5, r5, r6
   3efc8:	sub	r6, r1, r0
   3efcc:	cmp	r5, r6
   3efd0:	bhi	3ef94 <flatcc_json_printer_int64_vector_field@@Base+0x27c>
   3efd4:	mov	r1, #32
   3efd8:	mov	r2, r5
   3efdc:	bl	14ee4 <memset@plt>
   3efe0:	ldr	r0, [r4, #20]
   3efe4:	add	r2, r0, r5
   3efe8:	str	r2, [r4, #20]
   3efec:	b	3f010 <flatcc_json_printer_int64_vector_field@@Base+0x2f8>
   3eff0:	ldr	r0, [r4, #16]
   3eff4:	cmp	r2, r0
   3eff8:	bcc	3f010 <flatcc_json_printer_int64_vector_field@@Base+0x2f8>
   3effc:	ldr	r2, [r4, #44]	; 0x2c
   3f000:	mov	r0, r4
   3f004:	mov	r1, #0
   3f008:	blx	r2
   3f00c:	ldr	r2, [r4, #20]
   3f010:	ldrd	r0, [r7]
   3f014:	sub	r9, r9, #1
   3f018:	lsr	r5, r1, #31
   3f01c:	cmn	r1, #1
   3f020:	bgt	3ef00 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   3f024:	mov	r3, #45	; 0x2d
   3f028:	rsbs	r0, r0, #0
   3f02c:	strb	r3, [r2], #1
   3f030:	rsc	r1, r1, #0
   3f034:	b	3ef00 <flatcc_json_printer_int64_vector_field@@Base+0x1e8>
   3f038:	ldrb	r1, [r4, #25]
   3f03c:	ldr	r0, [r4, #20]
   3f040:	cmp	r1, #0
   3f044:	beq	3f104 <flatcc_json_printer_int64_vector_field@@Base+0x3ec>
   3f048:	add	r1, r0, #1
   3f04c:	str	r1, [r4, #20]
   3f050:	mov	r1, #10
   3f054:	strb	r1, [r0]
   3f058:	ldr	r0, [r4, #32]
   3f05c:	sub	r2, r0, #1
   3f060:	str	r2, [r4, #32]
   3f064:	ldrb	r3, [r4, #25]
   3f068:	ldr	r0, [r4, #20]
   3f06c:	ldr	r1, [r4, #16]
   3f070:	mla	r7, r2, r3, r0
   3f074:	mul	r5, r2, r3
   3f078:	cmp	r7, r1
   3f07c:	bls	3f0ec <flatcc_json_printer_int64_vector_field@@Base+0x3d4>
   3f080:	cmp	r0, r1
   3f084:	bcc	3f0a0 <flatcc_json_printer_int64_vector_field@@Base+0x388>
   3f088:	ldr	r2, [r4, #44]	; 0x2c
   3f08c:	mov	r0, r4
   3f090:	mov	r1, #0
   3f094:	blx	r2
   3f098:	ldr	r1, [r4, #16]
   3f09c:	ldr	r0, [r4, #20]
   3f0a0:	sub	r6, r1, r0
   3f0a4:	cmp	r6, r5
   3f0a8:	bcs	3f0ec <flatcc_json_printer_int64_vector_field@@Base+0x3d4>
   3f0ac:	mov	r1, #32
   3f0b0:	mov	r2, r6
   3f0b4:	bl	14ee4 <memset@plt>
   3f0b8:	ldr	r0, [r4, #20]
   3f0bc:	ldr	r2, [r4, #44]	; 0x2c
   3f0c0:	mov	r1, #0
   3f0c4:	add	r0, r0, r6
   3f0c8:	str	r0, [r4, #20]
   3f0cc:	mov	r0, r4
   3f0d0:	blx	r2
   3f0d4:	ldr	r1, [r4, #16]
   3f0d8:	ldr	r0, [r4, #20]
   3f0dc:	sub	r5, r5, r6
   3f0e0:	sub	r6, r1, r0
   3f0e4:	cmp	r5, r6
   3f0e8:	bhi	3f0ac <flatcc_json_printer_int64_vector_field@@Base+0x394>
   3f0ec:	mov	r1, #32
   3f0f0:	mov	r2, r5
   3f0f4:	bl	14ee4 <memset@plt>
   3f0f8:	ldr	r0, [r4, #20]
   3f0fc:	add	r0, r0, r5
   3f100:	str	r0, [r4, #20]
   3f104:	add	r1, r0, #1
   3f108:	str	r1, [r4, #20]
   3f10c:	mov	r1, #93	; 0x5d
   3f110:	strb	r1, [r0]
   3f114:	sub	sp, fp, #28
   3f118:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f11c <flatcc_json_printer_bool_vector_field@@Base>:
   3f11c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f120:	add	fp, sp, #28
   3f124:	sub	sp, sp, #4
   3f128:	mov	r4, r0
   3f12c:	mov	r0, #4
   3f130:	add	r0, r0, r2, lsl #1
   3f134:	ldr	r2, [r1, #8]
   3f138:	cmp	r0, r2
   3f13c:	bge	3f15c <flatcc_json_printer_bool_vector_field@@Base+0x40>
   3f140:	ldr	r2, [r1, #4]
   3f144:	add	r0, r2, r0
   3f148:	ldrh	r0, [r0]
   3f14c:	cmp	r0, #0
   3f150:	ldrne	r2, [r1]
   3f154:	addsne	sl, r2, r0
   3f158:	bne	3f164 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   3f15c:	sub	sp, fp, #28
   3f160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f164:	ldr	r0, [r1, #16]
   3f168:	ldr	r2, [fp, #8]
   3f16c:	add	r7, r0, #1
   3f170:	cmp	r0, #0
   3f174:	str	r7, [r1, #16]
   3f178:	beq	3f190 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   3f17c:	ldr	r0, [r4, #20]
   3f180:	add	r1, r0, #1
   3f184:	str	r1, [r4, #20]
   3f188:	mov	r1, #44	; 0x2c
   3f18c:	strb	r1, [r0]
   3f190:	ldr	r0, [sl]
   3f194:	mov	r1, r3
   3f198:	ldr	r9, [sl, r0]!
   3f19c:	mov	r0, r4
   3f1a0:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3f1a4:	ldr	r1, [r4, #32]
   3f1a8:	ldr	r0, [r4, #20]
   3f1ac:	cmp	r9, #0
   3f1b0:	add	r1, r1, #1
   3f1b4:	str	r1, [r4, #32]
   3f1b8:	add	r1, r0, #1
   3f1bc:	str	r1, [r4, #20]
   3f1c0:	mov	r1, #91	; 0x5b
   3f1c4:	strb	r1, [r0]
   3f1c8:	beq	3f460 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   3f1cc:	ldrb	r1, [r4, #25]
   3f1d0:	ldr	r0, [r4, #20]
   3f1d4:	cmp	r1, #0
   3f1d8:	beq	3f294 <flatcc_json_printer_bool_vector_field@@Base+0x178>
   3f1dc:	add	r1, r0, #1
   3f1e0:	str	r1, [r4, #20]
   3f1e4:	mov	r1, #10
   3f1e8:	strb	r1, [r0]
   3f1ec:	ldr	r0, [r4, #20]
   3f1f0:	ldrb	r2, [r4, #25]
   3f1f4:	ldr	r3, [r4, #32]
   3f1f8:	ldr	r1, [r4, #16]
   3f1fc:	mla	r7, r3, r2, r0
   3f200:	mul	r5, r3, r2
   3f204:	cmp	r7, r1
   3f208:	bls	3f278 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   3f20c:	cmp	r0, r1
   3f210:	bcc	3f22c <flatcc_json_printer_bool_vector_field@@Base+0x110>
   3f214:	ldr	r2, [r4, #44]	; 0x2c
   3f218:	mov	r0, r4
   3f21c:	mov	r1, #0
   3f220:	blx	r2
   3f224:	ldr	r1, [r4, #16]
   3f228:	ldr	r0, [r4, #20]
   3f22c:	sub	r6, r1, r0
   3f230:	cmp	r6, r5
   3f234:	bcs	3f278 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   3f238:	mov	r1, #32
   3f23c:	mov	r2, r6
   3f240:	bl	14ee4 <memset@plt>
   3f244:	ldr	r0, [r4, #20]
   3f248:	ldr	r2, [r4, #44]	; 0x2c
   3f24c:	mov	r1, #0
   3f250:	add	r0, r0, r6
   3f254:	str	r0, [r4, #20]
   3f258:	mov	r0, r4
   3f25c:	blx	r2
   3f260:	ldr	r1, [r4, #16]
   3f264:	ldr	r0, [r4, #20]
   3f268:	sub	r5, r5, r6
   3f26c:	sub	r6, r1, r0
   3f270:	cmp	r5, r6
   3f274:	bhi	3f238 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   3f278:	mov	r1, #32
   3f27c:	mov	r2, r5
   3f280:	bl	14ee4 <memset@plt>
   3f284:	ldr	r0, [r4, #20]
   3f288:	add	r0, r0, r5
   3f28c:	str	r0, [r4, #20]
   3f290:	b	3f2b4 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   3f294:	ldr	r1, [r4, #16]
   3f298:	cmp	r0, r1
   3f29c:	bcc	3f2b4 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   3f2a0:	ldr	r2, [r4, #44]	; 0x2c
   3f2a4:	mov	r0, r4
   3f2a8:	mov	r1, #0
   3f2ac:	blx	r2
   3f2b0:	ldr	r0, [r4, #20]
   3f2b4:	ldrb	r1, [sl, #4]
   3f2b8:	movw	r8, #29300	; 0x7274
   3f2bc:	movt	r8, #25973	; 0x6575
   3f2c0:	cmp	r1, #0
   3f2c4:	beq	3f2dc <flatcc_json_printer_bool_vector_field@@Base+0x1c0>
   3f2c8:	mov	r1, #0
   3f2cc:	str	r8, [r0]
   3f2d0:	strb	r1, [r0, #4]
   3f2d4:	mov	r0, #4
   3f2d8:	b	3f2f4 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   3f2dc:	mov	r1, #101	; 0x65
   3f2e0:	strh	r1, [r0, #4]
   3f2e4:	movw	r1, #24934	; 0x6166
   3f2e8:	movt	r1, #29548	; 0x736c
   3f2ec:	str	r1, [r0]
   3f2f0:	mov	r0, #5
   3f2f4:	ldr	r1, [r4, #20]
   3f2f8:	subs	r9, r9, #1
   3f2fc:	add	r0, r1, r0
   3f300:	str	r0, [r4, #20]
   3f304:	beq	3f460 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   3f308:	ldr	r0, [r4, #20]
   3f30c:	add	r7, sl, #5
   3f310:	mov	sl, #44	; 0x2c
   3f314:	b	3f348 <flatcc_json_printer_bool_vector_field@@Base+0x22c>
   3f318:	mov	r1, #101	; 0x65
   3f31c:	strh	r1, [r0, #4]
   3f320:	movw	r1, #24934	; 0x6166
   3f324:	movt	r1, #29548	; 0x736c
   3f328:	str	r1, [r0]
   3f32c:	mov	r0, #5
   3f330:	ldr	r1, [r4, #20]
   3f334:	add	r7, r7, #1
   3f338:	cmp	r9, #0
   3f33c:	add	r0, r1, r0
   3f340:	str	r0, [r4, #20]
   3f344:	beq	3f460 <flatcc_json_printer_bool_vector_field@@Base+0x344>
   3f348:	add	r1, r0, #1
   3f34c:	str	r1, [r4, #20]
   3f350:	strb	sl, [r0]
   3f354:	ldrb	r1, [r4, #25]
   3f358:	ldr	r0, [r4, #20]
   3f35c:	cmp	r1, #0
   3f360:	beq	3f41c <flatcc_json_printer_bool_vector_field@@Base+0x300>
   3f364:	add	r1, r0, #1
   3f368:	str	r1, [r4, #20]
   3f36c:	mov	r1, #10
   3f370:	strb	r1, [r0]
   3f374:	ldr	r0, [r4, #20]
   3f378:	ldrb	r2, [r4, #25]
   3f37c:	ldr	r3, [r4, #32]
   3f380:	ldr	r1, [r4, #16]
   3f384:	mla	r6, r3, r2, r0
   3f388:	mul	r5, r3, r2
   3f38c:	cmp	r6, r1
   3f390:	bls	3f400 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3f394:	cmp	r0, r1
   3f398:	bcc	3f3b4 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   3f39c:	ldr	r2, [r4, #44]	; 0x2c
   3f3a0:	mov	r0, r4
   3f3a4:	mov	r1, #0
   3f3a8:	blx	r2
   3f3ac:	ldr	r1, [r4, #16]
   3f3b0:	ldr	r0, [r4, #20]
   3f3b4:	sub	r6, r1, r0
   3f3b8:	cmp	r6, r5
   3f3bc:	bcs	3f400 <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   3f3c0:	mov	r1, #32
   3f3c4:	mov	r2, r6
   3f3c8:	bl	14ee4 <memset@plt>
   3f3cc:	ldr	r0, [r4, #20]
   3f3d0:	ldr	r2, [r4, #44]	; 0x2c
   3f3d4:	mov	r1, #0
   3f3d8:	add	r0, r0, r6
   3f3dc:	str	r0, [r4, #20]
   3f3e0:	mov	r0, r4
   3f3e4:	blx	r2
   3f3e8:	ldr	r1, [r4, #16]
   3f3ec:	ldr	r0, [r4, #20]
   3f3f0:	sub	r5, r5, r6
   3f3f4:	sub	r6, r1, r0
   3f3f8:	cmp	r5, r6
   3f3fc:	bhi	3f3c0 <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   3f400:	mov	r1, #32
   3f404:	mov	r2, r5
   3f408:	bl	14ee4 <memset@plt>
   3f40c:	ldr	r0, [r4, #20]
   3f410:	add	r0, r0, r5
   3f414:	str	r0, [r4, #20]
   3f418:	b	3f43c <flatcc_json_printer_bool_vector_field@@Base+0x320>
   3f41c:	ldr	r1, [r4, #16]
   3f420:	cmp	r0, r1
   3f424:	bcc	3f43c <flatcc_json_printer_bool_vector_field@@Base+0x320>
   3f428:	ldr	r2, [r4, #44]	; 0x2c
   3f42c:	mov	r0, r4
   3f430:	mov	r1, #0
   3f434:	blx	r2
   3f438:	ldr	r0, [r4, #20]
   3f43c:	ldrb	r1, [r7]
   3f440:	sub	r9, r9, #1
   3f444:	cmp	r1, #0
   3f448:	beq	3f318 <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   3f44c:	mov	r1, #0
   3f450:	str	r8, [r0]
   3f454:	strb	r1, [r0, #4]
   3f458:	mov	r0, #4
   3f45c:	b	3f330 <flatcc_json_printer_bool_vector_field@@Base+0x214>
   3f460:	ldrb	r1, [r4, #25]
   3f464:	ldr	r0, [r4, #20]
   3f468:	cmp	r1, #0
   3f46c:	beq	3f52c <flatcc_json_printer_bool_vector_field@@Base+0x410>
   3f470:	add	r1, r0, #1
   3f474:	str	r1, [r4, #20]
   3f478:	mov	r1, #10
   3f47c:	strb	r1, [r0]
   3f480:	ldr	r0, [r4, #32]
   3f484:	sub	r2, r0, #1
   3f488:	str	r2, [r4, #32]
   3f48c:	ldrb	r3, [r4, #25]
   3f490:	ldr	r0, [r4, #20]
   3f494:	ldr	r1, [r4, #16]
   3f498:	mla	r7, r2, r3, r0
   3f49c:	mul	r5, r2, r3
   3f4a0:	cmp	r7, r1
   3f4a4:	bls	3f514 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   3f4a8:	cmp	r0, r1
   3f4ac:	bcc	3f4c8 <flatcc_json_printer_bool_vector_field@@Base+0x3ac>
   3f4b0:	ldr	r2, [r4, #44]	; 0x2c
   3f4b4:	mov	r0, r4
   3f4b8:	mov	r1, #0
   3f4bc:	blx	r2
   3f4c0:	ldr	r1, [r4, #16]
   3f4c4:	ldr	r0, [r4, #20]
   3f4c8:	sub	r6, r1, r0
   3f4cc:	cmp	r6, r5
   3f4d0:	bcs	3f514 <flatcc_json_printer_bool_vector_field@@Base+0x3f8>
   3f4d4:	mov	r1, #32
   3f4d8:	mov	r2, r6
   3f4dc:	bl	14ee4 <memset@plt>
   3f4e0:	ldr	r0, [r4, #20]
   3f4e4:	ldr	r2, [r4, #44]	; 0x2c
   3f4e8:	mov	r1, #0
   3f4ec:	add	r0, r0, r6
   3f4f0:	str	r0, [r4, #20]
   3f4f4:	mov	r0, r4
   3f4f8:	blx	r2
   3f4fc:	ldr	r1, [r4, #16]
   3f500:	ldr	r0, [r4, #20]
   3f504:	sub	r5, r5, r6
   3f508:	sub	r6, r1, r0
   3f50c:	cmp	r5, r6
   3f510:	bhi	3f4d4 <flatcc_json_printer_bool_vector_field@@Base+0x3b8>
   3f514:	mov	r1, #32
   3f518:	mov	r2, r5
   3f51c:	bl	14ee4 <memset@plt>
   3f520:	ldr	r0, [r4, #20]
   3f524:	add	r0, r0, r5
   3f528:	str	r0, [r4, #20]
   3f52c:	add	r1, r0, #1
   3f530:	str	r1, [r4, #20]
   3f534:	mov	r1, #93	; 0x5d
   3f538:	strb	r1, [r0]
   3f53c:	sub	sp, fp, #28
   3f540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f544 <flatcc_json_printer_float_vector_field@@Base>:
   3f544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f548:	add	fp, sp, #28
   3f54c:	sub	sp, sp, #4
   3f550:	mov	r4, r0
   3f554:	mov	r0, #4
   3f558:	add	r0, r0, r2, lsl #1
   3f55c:	ldr	r2, [r1, #8]
   3f560:	cmp	r0, r2
   3f564:	bge	3f584 <flatcc_json_printer_float_vector_field@@Base+0x40>
   3f568:	ldr	r2, [r1, #4]
   3f56c:	add	r0, r2, r0
   3f570:	ldrh	r0, [r0]
   3f574:	cmp	r0, #0
   3f578:	ldrne	r2, [r1]
   3f57c:	addsne	r8, r2, r0
   3f580:	bne	3f58c <flatcc_json_printer_float_vector_field@@Base+0x48>
   3f584:	sub	sp, fp, #28
   3f588:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f58c:	ldr	r0, [r1, #16]
   3f590:	ldr	r2, [fp, #8]
   3f594:	add	r7, r0, #1
   3f598:	cmp	r0, #0
   3f59c:	str	r7, [r1, #16]
   3f5a0:	beq	3f5b8 <flatcc_json_printer_float_vector_field@@Base+0x74>
   3f5a4:	ldr	r0, [r4, #20]
   3f5a8:	add	r1, r0, #1
   3f5ac:	str	r1, [r4, #20]
   3f5b0:	mov	r1, #44	; 0x2c
   3f5b4:	strb	r1, [r0]
   3f5b8:	ldr	r0, [r8]
   3f5bc:	mov	r1, r3
   3f5c0:	ldr	r7, [r8, r0]!
   3f5c4:	mov	r0, r4
   3f5c8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3f5cc:	ldr	r1, [r4, #32]
   3f5d0:	ldr	r0, [r4, #20]
   3f5d4:	cmp	r7, #0
   3f5d8:	add	r1, r1, #1
   3f5dc:	str	r1, [r4, #32]
   3f5e0:	add	r1, r0, #1
   3f5e4:	str	r1, [r4, #20]
   3f5e8:	mov	r1, #91	; 0x5b
   3f5ec:	strb	r1, [r0]
   3f5f0:	beq	3f82c <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   3f5f4:	ldrb	r1, [r4, #25]
   3f5f8:	ldr	r0, [r4, #20]
   3f5fc:	cmp	r1, #0
   3f600:	beq	3f6bc <flatcc_json_printer_float_vector_field@@Base+0x178>
   3f604:	add	r1, r0, #1
   3f608:	str	r1, [r4, #20]
   3f60c:	mov	r1, #10
   3f610:	strb	r1, [r0]
   3f614:	ldr	r0, [r4, #20]
   3f618:	ldrb	r2, [r4, #25]
   3f61c:	ldr	r3, [r4, #32]
   3f620:	ldr	r1, [r4, #16]
   3f624:	mla	r6, r3, r2, r0
   3f628:	mul	r5, r3, r2
   3f62c:	cmp	r6, r1
   3f630:	bls	3f6a0 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   3f634:	cmp	r0, r1
   3f638:	bcc	3f654 <flatcc_json_printer_float_vector_field@@Base+0x110>
   3f63c:	ldr	r2, [r4, #44]	; 0x2c
   3f640:	mov	r0, r4
   3f644:	mov	r1, #0
   3f648:	blx	r2
   3f64c:	ldr	r1, [r4, #16]
   3f650:	ldr	r0, [r4, #20]
   3f654:	sub	r6, r1, r0
   3f658:	cmp	r6, r5
   3f65c:	bcs	3f6a0 <flatcc_json_printer_float_vector_field@@Base+0x15c>
   3f660:	mov	r1, #32
   3f664:	mov	r2, r6
   3f668:	bl	14ee4 <memset@plt>
   3f66c:	ldr	r0, [r4, #20]
   3f670:	ldr	r2, [r4, #44]	; 0x2c
   3f674:	mov	r1, #0
   3f678:	add	r0, r0, r6
   3f67c:	str	r0, [r4, #20]
   3f680:	mov	r0, r4
   3f684:	blx	r2
   3f688:	ldr	r1, [r4, #16]
   3f68c:	ldr	r0, [r4, #20]
   3f690:	sub	r5, r5, r6
   3f694:	sub	r6, r1, r0
   3f698:	cmp	r5, r6
   3f69c:	bhi	3f660 <flatcc_json_printer_float_vector_field@@Base+0x11c>
   3f6a0:	mov	r1, #32
   3f6a4:	mov	r2, r5
   3f6a8:	bl	14ee4 <memset@plt>
   3f6ac:	ldr	r0, [r4, #20]
   3f6b0:	add	r0, r0, r5
   3f6b4:	str	r0, [r4, #20]
   3f6b8:	b	3f6dc <flatcc_json_printer_float_vector_field@@Base+0x198>
   3f6bc:	ldr	r1, [r4, #16]
   3f6c0:	cmp	r0, r1
   3f6c4:	bcc	3f6dc <flatcc_json_printer_float_vector_field@@Base+0x198>
   3f6c8:	ldr	r2, [r4, #44]	; 0x2c
   3f6cc:	mov	r0, r4
   3f6d0:	mov	r1, #0
   3f6d4:	blx	r2
   3f6d8:	ldr	r0, [r4, #20]
   3f6dc:	vldr	s0, [r8, #4]
   3f6e0:	vcvt.f64.f32	d0, s0
   3f6e4:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3f6e8:	ldr	r1, [r4, #20]
   3f6ec:	subs	r9, r7, #1
   3f6f0:	add	r0, r1, r0
   3f6f4:	str	r0, [r4, #20]
   3f6f8:	beq	3f82c <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   3f6fc:	ldr	r0, [r4, #20]
   3f700:	add	r7, r8, #8
   3f704:	mov	r8, #44	; 0x2c
   3f708:	mov	sl, #10
   3f70c:	b	3f74c <flatcc_json_printer_float_vector_field@@Base+0x208>
   3f710:	mov	r1, #32
   3f714:	mov	r2, r5
   3f718:	bl	14ee4 <memset@plt>
   3f71c:	ldr	r0, [r4, #20]
   3f720:	add	r0, r0, r5
   3f724:	str	r0, [r4, #20]
   3f728:	vldr	s0, [r7]
   3f72c:	vcvt.f64.f32	d0, s0
   3f730:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3f734:	ldr	r1, [r4, #20]
   3f738:	add	r7, r7, #4
   3f73c:	cmp	r9, #0
   3f740:	add	r0, r1, r0
   3f744:	str	r0, [r4, #20]
   3f748:	beq	3f82c <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   3f74c:	add	r1, r0, #1
   3f750:	sub	r9, r9, #1
   3f754:	str	r1, [r4, #20]
   3f758:	strb	r8, [r0]
   3f75c:	ldrb	r1, [r4, #25]
   3f760:	ldr	r0, [r4, #20]
   3f764:	cmp	r1, #0
   3f768:	beq	3f808 <flatcc_json_printer_float_vector_field@@Base+0x2c4>
   3f76c:	add	r1, r0, #1
   3f770:	str	r1, [r4, #20]
   3f774:	strb	sl, [r0]
   3f778:	ldr	r0, [r4, #20]
   3f77c:	ldrb	r2, [r4, #25]
   3f780:	ldr	r3, [r4, #32]
   3f784:	ldr	r1, [r4, #16]
   3f788:	mla	r6, r3, r2, r0
   3f78c:	mul	r5, r3, r2
   3f790:	cmp	r6, r1
   3f794:	bls	3f710 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   3f798:	cmp	r0, r1
   3f79c:	bcc	3f7b8 <flatcc_json_printer_float_vector_field@@Base+0x274>
   3f7a0:	ldr	r2, [r4, #44]	; 0x2c
   3f7a4:	mov	r0, r4
   3f7a8:	mov	r1, #0
   3f7ac:	blx	r2
   3f7b0:	ldr	r1, [r4, #16]
   3f7b4:	ldr	r0, [r4, #20]
   3f7b8:	sub	r6, r1, r0
   3f7bc:	cmp	r6, r5
   3f7c0:	bcs	3f710 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   3f7c4:	mov	r1, #32
   3f7c8:	mov	r2, r6
   3f7cc:	bl	14ee4 <memset@plt>
   3f7d0:	ldr	r0, [r4, #20]
   3f7d4:	ldr	r2, [r4, #44]	; 0x2c
   3f7d8:	mov	r1, #0
   3f7dc:	add	r0, r0, r6
   3f7e0:	str	r0, [r4, #20]
   3f7e4:	mov	r0, r4
   3f7e8:	blx	r2
   3f7ec:	ldr	r1, [r4, #16]
   3f7f0:	ldr	r0, [r4, #20]
   3f7f4:	sub	r5, r5, r6
   3f7f8:	sub	r6, r1, r0
   3f7fc:	cmp	r5, r6
   3f800:	bhi	3f7c4 <flatcc_json_printer_float_vector_field@@Base+0x280>
   3f804:	b	3f710 <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   3f808:	ldr	r1, [r4, #16]
   3f80c:	cmp	r0, r1
   3f810:	bcc	3f728 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   3f814:	ldr	r2, [r4, #44]	; 0x2c
   3f818:	mov	r0, r4
   3f81c:	mov	r1, #0
   3f820:	blx	r2
   3f824:	ldr	r0, [r4, #20]
   3f828:	b	3f728 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   3f82c:	ldrb	r1, [r4, #25]
   3f830:	ldr	r0, [r4, #20]
   3f834:	cmp	r1, #0
   3f838:	beq	3f8f8 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   3f83c:	add	r1, r0, #1
   3f840:	str	r1, [r4, #20]
   3f844:	mov	r1, #10
   3f848:	strb	r1, [r0]
   3f84c:	ldr	r0, [r4, #32]
   3f850:	sub	r2, r0, #1
   3f854:	str	r2, [r4, #32]
   3f858:	ldrb	r3, [r4, #25]
   3f85c:	ldr	r0, [r4, #20]
   3f860:	ldr	r1, [r4, #16]
   3f864:	mla	r7, r2, r3, r0
   3f868:	mul	r5, r2, r3
   3f86c:	cmp	r7, r1
   3f870:	bls	3f8e0 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   3f874:	cmp	r0, r1
   3f878:	bcc	3f894 <flatcc_json_printer_float_vector_field@@Base+0x350>
   3f87c:	ldr	r2, [r4, #44]	; 0x2c
   3f880:	mov	r0, r4
   3f884:	mov	r1, #0
   3f888:	blx	r2
   3f88c:	ldr	r1, [r4, #16]
   3f890:	ldr	r0, [r4, #20]
   3f894:	sub	r6, r1, r0
   3f898:	cmp	r6, r5
   3f89c:	bcs	3f8e0 <flatcc_json_printer_float_vector_field@@Base+0x39c>
   3f8a0:	mov	r1, #32
   3f8a4:	mov	r2, r6
   3f8a8:	bl	14ee4 <memset@plt>
   3f8ac:	ldr	r0, [r4, #20]
   3f8b0:	ldr	r2, [r4, #44]	; 0x2c
   3f8b4:	mov	r1, #0
   3f8b8:	add	r0, r0, r6
   3f8bc:	str	r0, [r4, #20]
   3f8c0:	mov	r0, r4
   3f8c4:	blx	r2
   3f8c8:	ldr	r1, [r4, #16]
   3f8cc:	ldr	r0, [r4, #20]
   3f8d0:	sub	r5, r5, r6
   3f8d4:	sub	r6, r1, r0
   3f8d8:	cmp	r5, r6
   3f8dc:	bhi	3f8a0 <flatcc_json_printer_float_vector_field@@Base+0x35c>
   3f8e0:	mov	r1, #32
   3f8e4:	mov	r2, r5
   3f8e8:	bl	14ee4 <memset@plt>
   3f8ec:	ldr	r0, [r4, #20]
   3f8f0:	add	r0, r0, r5
   3f8f4:	str	r0, [r4, #20]
   3f8f8:	add	r1, r0, #1
   3f8fc:	str	r1, [r4, #20]
   3f900:	mov	r1, #93	; 0x5d
   3f904:	strb	r1, [r0]
   3f908:	sub	sp, fp, #28
   3f90c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003f910 <flatcc_json_printer_double_vector_field@@Base>:
   3f910:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f914:	add	fp, sp, #28
   3f918:	sub	sp, sp, #4
   3f91c:	mov	r4, r0
   3f920:	mov	r0, #4
   3f924:	add	r0, r0, r2, lsl #1
   3f928:	ldr	r2, [r1, #8]
   3f92c:	cmp	r0, r2
   3f930:	bge	3f950 <flatcc_json_printer_double_vector_field@@Base+0x40>
   3f934:	ldr	r2, [r1, #4]
   3f938:	add	r0, r2, r0
   3f93c:	ldrh	r0, [r0]
   3f940:	cmp	r0, #0
   3f944:	ldrne	r2, [r1]
   3f948:	addsne	r8, r2, r0
   3f94c:	bne	3f958 <flatcc_json_printer_double_vector_field@@Base+0x48>
   3f950:	sub	sp, fp, #28
   3f954:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f958:	ldr	r0, [r1, #16]
   3f95c:	ldr	r2, [fp, #8]
   3f960:	add	r7, r0, #1
   3f964:	cmp	r0, #0
   3f968:	str	r7, [r1, #16]
   3f96c:	beq	3f984 <flatcc_json_printer_double_vector_field@@Base+0x74>
   3f970:	ldr	r0, [r4, #20]
   3f974:	add	r1, r0, #1
   3f978:	str	r1, [r4, #20]
   3f97c:	mov	r1, #44	; 0x2c
   3f980:	strb	r1, [r0]
   3f984:	ldr	r0, [r8]
   3f988:	mov	r1, r3
   3f98c:	ldr	r7, [r8, r0]!
   3f990:	mov	r0, r4
   3f994:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3f998:	ldr	r1, [r4, #32]
   3f99c:	ldr	r0, [r4, #20]
   3f9a0:	cmp	r7, #0
   3f9a4:	add	r1, r1, #1
   3f9a8:	str	r1, [r4, #32]
   3f9ac:	add	r1, r0, #1
   3f9b0:	str	r1, [r4, #20]
   3f9b4:	mov	r1, #91	; 0x5b
   3f9b8:	strb	r1, [r0]
   3f9bc:	beq	3fbf0 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   3f9c0:	ldrb	r1, [r4, #25]
   3f9c4:	ldr	r0, [r4, #20]
   3f9c8:	cmp	r1, #0
   3f9cc:	beq	3fa88 <flatcc_json_printer_double_vector_field@@Base+0x178>
   3f9d0:	add	r1, r0, #1
   3f9d4:	str	r1, [r4, #20]
   3f9d8:	mov	r1, #10
   3f9dc:	strb	r1, [r0]
   3f9e0:	ldr	r0, [r4, #20]
   3f9e4:	ldrb	r2, [r4, #25]
   3f9e8:	ldr	r3, [r4, #32]
   3f9ec:	ldr	r1, [r4, #16]
   3f9f0:	mla	r6, r3, r2, r0
   3f9f4:	mul	r5, r3, r2
   3f9f8:	cmp	r6, r1
   3f9fc:	bls	3fa6c <flatcc_json_printer_double_vector_field@@Base+0x15c>
   3fa00:	cmp	r0, r1
   3fa04:	bcc	3fa20 <flatcc_json_printer_double_vector_field@@Base+0x110>
   3fa08:	ldr	r2, [r4, #44]	; 0x2c
   3fa0c:	mov	r0, r4
   3fa10:	mov	r1, #0
   3fa14:	blx	r2
   3fa18:	ldr	r1, [r4, #16]
   3fa1c:	ldr	r0, [r4, #20]
   3fa20:	sub	r6, r1, r0
   3fa24:	cmp	r6, r5
   3fa28:	bcs	3fa6c <flatcc_json_printer_double_vector_field@@Base+0x15c>
   3fa2c:	mov	r1, #32
   3fa30:	mov	r2, r6
   3fa34:	bl	14ee4 <memset@plt>
   3fa38:	ldr	r0, [r4, #20]
   3fa3c:	ldr	r2, [r4, #44]	; 0x2c
   3fa40:	mov	r1, #0
   3fa44:	add	r0, r0, r6
   3fa48:	str	r0, [r4, #20]
   3fa4c:	mov	r0, r4
   3fa50:	blx	r2
   3fa54:	ldr	r1, [r4, #16]
   3fa58:	ldr	r0, [r4, #20]
   3fa5c:	sub	r5, r5, r6
   3fa60:	sub	r6, r1, r0
   3fa64:	cmp	r5, r6
   3fa68:	bhi	3fa2c <flatcc_json_printer_double_vector_field@@Base+0x11c>
   3fa6c:	mov	r1, #32
   3fa70:	mov	r2, r5
   3fa74:	bl	14ee4 <memset@plt>
   3fa78:	ldr	r0, [r4, #20]
   3fa7c:	add	r0, r0, r5
   3fa80:	str	r0, [r4, #20]
   3fa84:	b	3faa8 <flatcc_json_printer_double_vector_field@@Base+0x198>
   3fa88:	ldr	r1, [r4, #16]
   3fa8c:	cmp	r0, r1
   3fa90:	bcc	3faa8 <flatcc_json_printer_double_vector_field@@Base+0x198>
   3fa94:	ldr	r2, [r4, #44]	; 0x2c
   3fa98:	mov	r0, r4
   3fa9c:	mov	r1, #0
   3faa0:	blx	r2
   3faa4:	ldr	r0, [r4, #20]
   3faa8:	vldr	d0, [r8, #4]
   3faac:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3fab0:	ldr	r1, [r4, #20]
   3fab4:	subs	r9, r7, #1
   3fab8:	add	r0, r1, r0
   3fabc:	str	r0, [r4, #20]
   3fac0:	beq	3fbf0 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   3fac4:	ldr	r0, [r4, #20]
   3fac8:	add	r7, r8, #12
   3facc:	mov	r8, #44	; 0x2c
   3fad0:	mov	sl, #10
   3fad4:	b	3fb10 <flatcc_json_printer_double_vector_field@@Base+0x200>
   3fad8:	mov	r1, #32
   3fadc:	mov	r2, r5
   3fae0:	bl	14ee4 <memset@plt>
   3fae4:	ldr	r0, [r4, #20]
   3fae8:	add	r0, r0, r5
   3faec:	str	r0, [r4, #20]
   3faf0:	vldr	d0, [r7]
   3faf4:	bl	380e0 <flatcc_json_printer_fmt_float@@Base+0xc>
   3faf8:	ldr	r1, [r4, #20]
   3fafc:	add	r7, r7, #8
   3fb00:	cmp	r9, #0
   3fb04:	add	r0, r1, r0
   3fb08:	str	r0, [r4, #20]
   3fb0c:	beq	3fbf0 <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   3fb10:	add	r1, r0, #1
   3fb14:	sub	r9, r9, #1
   3fb18:	str	r1, [r4, #20]
   3fb1c:	strb	r8, [r0]
   3fb20:	ldrb	r1, [r4, #25]
   3fb24:	ldr	r0, [r4, #20]
   3fb28:	cmp	r1, #0
   3fb2c:	beq	3fbcc <flatcc_json_printer_double_vector_field@@Base+0x2bc>
   3fb30:	add	r1, r0, #1
   3fb34:	str	r1, [r4, #20]
   3fb38:	strb	sl, [r0]
   3fb3c:	ldr	r0, [r4, #20]
   3fb40:	ldrb	r2, [r4, #25]
   3fb44:	ldr	r3, [r4, #32]
   3fb48:	ldr	r1, [r4, #16]
   3fb4c:	mla	r6, r3, r2, r0
   3fb50:	mul	r5, r3, r2
   3fb54:	cmp	r6, r1
   3fb58:	bls	3fad8 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   3fb5c:	cmp	r0, r1
   3fb60:	bcc	3fb7c <flatcc_json_printer_double_vector_field@@Base+0x26c>
   3fb64:	ldr	r2, [r4, #44]	; 0x2c
   3fb68:	mov	r0, r4
   3fb6c:	mov	r1, #0
   3fb70:	blx	r2
   3fb74:	ldr	r1, [r4, #16]
   3fb78:	ldr	r0, [r4, #20]
   3fb7c:	sub	r6, r1, r0
   3fb80:	cmp	r6, r5
   3fb84:	bcs	3fad8 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   3fb88:	mov	r1, #32
   3fb8c:	mov	r2, r6
   3fb90:	bl	14ee4 <memset@plt>
   3fb94:	ldr	r0, [r4, #20]
   3fb98:	ldr	r2, [r4, #44]	; 0x2c
   3fb9c:	mov	r1, #0
   3fba0:	add	r0, r0, r6
   3fba4:	str	r0, [r4, #20]
   3fba8:	mov	r0, r4
   3fbac:	blx	r2
   3fbb0:	ldr	r1, [r4, #16]
   3fbb4:	ldr	r0, [r4, #20]
   3fbb8:	sub	r5, r5, r6
   3fbbc:	sub	r6, r1, r0
   3fbc0:	cmp	r5, r6
   3fbc4:	bhi	3fb88 <flatcc_json_printer_double_vector_field@@Base+0x278>
   3fbc8:	b	3fad8 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   3fbcc:	ldr	r1, [r4, #16]
   3fbd0:	cmp	r0, r1
   3fbd4:	bcc	3faf0 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   3fbd8:	ldr	r2, [r4, #44]	; 0x2c
   3fbdc:	mov	r0, r4
   3fbe0:	mov	r1, #0
   3fbe4:	blx	r2
   3fbe8:	ldr	r0, [r4, #20]
   3fbec:	b	3faf0 <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   3fbf0:	ldrb	r1, [r4, #25]
   3fbf4:	ldr	r0, [r4, #20]
   3fbf8:	cmp	r1, #0
   3fbfc:	beq	3fcbc <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   3fc00:	add	r1, r0, #1
   3fc04:	str	r1, [r4, #20]
   3fc08:	mov	r1, #10
   3fc0c:	strb	r1, [r0]
   3fc10:	ldr	r0, [r4, #32]
   3fc14:	sub	r2, r0, #1
   3fc18:	str	r2, [r4, #32]
   3fc1c:	ldrb	r3, [r4, #25]
   3fc20:	ldr	r0, [r4, #20]
   3fc24:	ldr	r1, [r4, #16]
   3fc28:	mla	r7, r2, r3, r0
   3fc2c:	mul	r5, r2, r3
   3fc30:	cmp	r7, r1
   3fc34:	bls	3fca4 <flatcc_json_printer_double_vector_field@@Base+0x394>
   3fc38:	cmp	r0, r1
   3fc3c:	bcc	3fc58 <flatcc_json_printer_double_vector_field@@Base+0x348>
   3fc40:	ldr	r2, [r4, #44]	; 0x2c
   3fc44:	mov	r0, r4
   3fc48:	mov	r1, #0
   3fc4c:	blx	r2
   3fc50:	ldr	r1, [r4, #16]
   3fc54:	ldr	r0, [r4, #20]
   3fc58:	sub	r6, r1, r0
   3fc5c:	cmp	r6, r5
   3fc60:	bcs	3fca4 <flatcc_json_printer_double_vector_field@@Base+0x394>
   3fc64:	mov	r1, #32
   3fc68:	mov	r2, r6
   3fc6c:	bl	14ee4 <memset@plt>
   3fc70:	ldr	r0, [r4, #20]
   3fc74:	ldr	r2, [r4, #44]	; 0x2c
   3fc78:	mov	r1, #0
   3fc7c:	add	r0, r0, r6
   3fc80:	str	r0, [r4, #20]
   3fc84:	mov	r0, r4
   3fc88:	blx	r2
   3fc8c:	ldr	r1, [r4, #16]
   3fc90:	ldr	r0, [r4, #20]
   3fc94:	sub	r5, r5, r6
   3fc98:	sub	r6, r1, r0
   3fc9c:	cmp	r5, r6
   3fca0:	bhi	3fc64 <flatcc_json_printer_double_vector_field@@Base+0x354>
   3fca4:	mov	r1, #32
   3fca8:	mov	r2, r5
   3fcac:	bl	14ee4 <memset@plt>
   3fcb0:	ldr	r0, [r4, #20]
   3fcb4:	add	r0, r0, r5
   3fcb8:	str	r0, [r4, #20]
   3fcbc:	add	r1, r0, #1
   3fcc0:	str	r1, [r4, #20]
   3fcc4:	mov	r1, #93	; 0x5d
   3fcc8:	strb	r1, [r0]
   3fccc:	sub	sp, fp, #28
   3fcd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fcd4 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   3fcd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fcd8:	add	fp, sp, #28
   3fcdc:	sub	sp, sp, #4
   3fce0:	mov	r4, r0
   3fce4:	ldrb	r0, [r0, #27]
   3fce8:	cmp	r0, #0
   3fcec:	beq	3fd00 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   3fcf0:	mov	r0, r4
   3fcf4:	sub	sp, fp, #28
   3fcf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fcfc:	b	3ca64 <flatcc_json_printer_utype_vector_field@@Base>
   3fd00:	mov	r0, #4
   3fd04:	add	r0, r0, r2, lsl #1
   3fd08:	ldr	r2, [r1, #8]
   3fd0c:	cmp	r0, r2
   3fd10:	bge	3fd30 <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   3fd14:	ldr	r2, [r1, #4]
   3fd18:	add	r0, r2, r0
   3fd1c:	ldrh	r0, [r0]
   3fd20:	cmp	r0, #0
   3fd24:	ldrne	r2, [r1]
   3fd28:	addsne	r8, r2, r0
   3fd2c:	bne	3fd38 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   3fd30:	sub	sp, fp, #28
   3fd34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fd38:	ldr	r0, [r1, #16]
   3fd3c:	ldr	sl, [fp, #12]
   3fd40:	ldr	r2, [fp, #8]
   3fd44:	add	r7, r0, #1
   3fd48:	cmp	r0, #0
   3fd4c:	str	r7, [r1, #16]
   3fd50:	beq	3fd68 <flatcc_json_printer_utype_enum_vector_field@@Base+0x94>
   3fd54:	ldr	r0, [r4, #20]
   3fd58:	add	r1, r0, #1
   3fd5c:	str	r1, [r4, #20]
   3fd60:	mov	r1, #44	; 0x2c
   3fd64:	strb	r1, [r0]
   3fd68:	ldr	r0, [r8]
   3fd6c:	mov	r1, r3
   3fd70:	ldr	r9, [r8, r0]!
   3fd74:	mov	r0, r4
   3fd78:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   3fd7c:	ldr	r1, [r4, #32]
   3fd80:	ldr	r0, [r4, #20]
   3fd84:	cmp	r9, #0
   3fd88:	add	r1, r1, #1
   3fd8c:	str	r1, [r4, #32]
   3fd90:	add	r1, r0, #1
   3fd94:	str	r1, [r4, #20]
   3fd98:	mov	r1, #91	; 0x5b
   3fd9c:	strb	r1, [r0]
   3fda0:	beq	3ffb8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   3fda4:	ldrb	r1, [r4, #25]
   3fda8:	ldr	r0, [r4, #20]
   3fdac:	cmp	r1, #0
   3fdb0:	beq	3fe6c <flatcc_json_printer_utype_enum_vector_field@@Base+0x198>
   3fdb4:	add	r1, r0, #1
   3fdb8:	str	r1, [r4, #20]
   3fdbc:	mov	r1, #10
   3fdc0:	strb	r1, [r0]
   3fdc4:	ldr	r0, [r4, #20]
   3fdc8:	ldrb	r2, [r4, #25]
   3fdcc:	ldr	r3, [r4, #32]
   3fdd0:	ldr	r1, [r4, #16]
   3fdd4:	mla	r7, r3, r2, r0
   3fdd8:	mul	r5, r3, r2
   3fddc:	cmp	r7, r1
   3fde0:	bls	3fe50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   3fde4:	cmp	r0, r1
   3fde8:	bcc	3fe04 <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   3fdec:	ldr	r2, [r4, #44]	; 0x2c
   3fdf0:	mov	r0, r4
   3fdf4:	mov	r1, #0
   3fdf8:	blx	r2
   3fdfc:	ldr	r1, [r4, #16]
   3fe00:	ldr	r0, [r4, #20]
   3fe04:	sub	r6, r1, r0
   3fe08:	cmp	r6, r5
   3fe0c:	bcs	3fe50 <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   3fe10:	mov	r1, #32
   3fe14:	mov	r2, r6
   3fe18:	bl	14ee4 <memset@plt>
   3fe1c:	ldr	r0, [r4, #20]
   3fe20:	ldr	r2, [r4, #44]	; 0x2c
   3fe24:	mov	r1, #0
   3fe28:	add	r0, r0, r6
   3fe2c:	str	r0, [r4, #20]
   3fe30:	mov	r0, r4
   3fe34:	blx	r2
   3fe38:	ldr	r1, [r4, #16]
   3fe3c:	ldr	r0, [r4, #20]
   3fe40:	sub	r5, r5, r6
   3fe44:	sub	r6, r1, r0
   3fe48:	cmp	r5, r6
   3fe4c:	bhi	3fe10 <flatcc_json_printer_utype_enum_vector_field@@Base+0x13c>
   3fe50:	mov	r1, #32
   3fe54:	mov	r2, r5
   3fe58:	bl	14ee4 <memset@plt>
   3fe5c:	ldr	r0, [r4, #20]
   3fe60:	add	r0, r0, r5
   3fe64:	str	r0, [r4, #20]
   3fe68:	b	3fe88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   3fe6c:	ldr	r1, [r4, #16]
   3fe70:	cmp	r0, r1
   3fe74:	bcc	3fe88 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   3fe78:	ldr	r2, [r4, #44]	; 0x2c
   3fe7c:	mov	r0, r4
   3fe80:	mov	r1, #0
   3fe84:	blx	r2
   3fe88:	ldrb	r1, [r8, #4]
   3fe8c:	mov	r0, r4
   3fe90:	blx	sl
   3fe94:	subs	r9, r9, #1
   3fe98:	beq	3ffb8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   3fe9c:	add	r7, r8, #5
   3fea0:	mov	r8, #44	; 0x2c
   3fea4:	b	3fed4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x200>
   3fea8:	mov	r1, #32
   3feac:	mov	r2, r5
   3feb0:	bl	14ee4 <memset@plt>
   3feb4:	ldr	r0, [r4, #20]
   3feb8:	add	r0, r0, r5
   3febc:	str	r0, [r4, #20]
   3fec0:	ldrb	r1, [r7], #1
   3fec4:	mov	r0, r4
   3fec8:	blx	sl
   3fecc:	cmp	r9, #0
   3fed0:	beq	3ffb8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   3fed4:	ldr	r0, [r4, #20]
   3fed8:	sub	r9, r9, #1
   3fedc:	add	r1, r0, #1
   3fee0:	str	r1, [r4, #20]
   3fee4:	strb	r8, [r0]
   3fee8:	ldrb	r1, [r4, #25]
   3feec:	ldr	r0, [r4, #20]
   3fef0:	cmp	r1, #0
   3fef4:	beq	3ff98 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   3fef8:	add	r1, r0, #1
   3fefc:	str	r1, [r4, #20]
   3ff00:	mov	r1, #10
   3ff04:	strb	r1, [r0]
   3ff08:	ldr	r0, [r4, #20]
   3ff0c:	ldrb	r2, [r4, #25]
   3ff10:	ldr	r3, [r4, #32]
   3ff14:	ldr	r1, [r4, #16]
   3ff18:	mla	r6, r3, r2, r0
   3ff1c:	mul	r5, r3, r2
   3ff20:	cmp	r6, r1
   3ff24:	bls	3fea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   3ff28:	cmp	r0, r1
   3ff2c:	bcc	3ff48 <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   3ff30:	ldr	r2, [r4, #44]	; 0x2c
   3ff34:	mov	r0, r4
   3ff38:	mov	r1, #0
   3ff3c:	blx	r2
   3ff40:	ldr	r1, [r4, #16]
   3ff44:	ldr	r0, [r4, #20]
   3ff48:	sub	r6, r1, r0
   3ff4c:	cmp	r6, r5
   3ff50:	bcs	3fea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   3ff54:	mov	r1, #32
   3ff58:	mov	r2, r6
   3ff5c:	bl	14ee4 <memset@plt>
   3ff60:	ldr	r0, [r4, #20]
   3ff64:	ldr	r2, [r4, #44]	; 0x2c
   3ff68:	mov	r1, #0
   3ff6c:	add	r0, r0, r6
   3ff70:	str	r0, [r4, #20]
   3ff74:	mov	r0, r4
   3ff78:	blx	r2
   3ff7c:	ldr	r1, [r4, #16]
   3ff80:	ldr	r0, [r4, #20]
   3ff84:	sub	r5, r5, r6
   3ff88:	sub	r6, r1, r0
   3ff8c:	cmp	r5, r6
   3ff90:	bhi	3ff54 <flatcc_json_printer_utype_enum_vector_field@@Base+0x280>
   3ff94:	b	3fea8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   3ff98:	ldr	r1, [r4, #16]
   3ff9c:	cmp	r0, r1
   3ffa0:	bcc	3fec0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   3ffa4:	ldr	r2, [r4, #44]	; 0x2c
   3ffa8:	mov	r0, r4
   3ffac:	mov	r1, #0
   3ffb0:	blx	r2
   3ffb4:	b	3fec0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   3ffb8:	ldrb	r1, [r4, #25]
   3ffbc:	ldr	r0, [r4, #20]
   3ffc0:	cmp	r1, #0
   3ffc4:	beq	40084 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   3ffc8:	add	r1, r0, #1
   3ffcc:	str	r1, [r4, #20]
   3ffd0:	mov	r1, #10
   3ffd4:	strb	r1, [r0]
   3ffd8:	ldr	r0, [r4, #32]
   3ffdc:	sub	r2, r0, #1
   3ffe0:	str	r2, [r4, #32]
   3ffe4:	ldrb	r3, [r4, #25]
   3ffe8:	ldr	r0, [r4, #20]
   3ffec:	ldr	r1, [r4, #16]
   3fff0:	mla	r7, r2, r3, r0
   3fff4:	mul	r5, r2, r3
   3fff8:	cmp	r7, r1
   3fffc:	bls	4006c <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   40000:	cmp	r0, r1
   40004:	bcc	40020 <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   40008:	ldr	r2, [r4, #44]	; 0x2c
   4000c:	mov	r0, r4
   40010:	mov	r1, #0
   40014:	blx	r2
   40018:	ldr	r1, [r4, #16]
   4001c:	ldr	r0, [r4, #20]
   40020:	sub	r6, r1, r0
   40024:	cmp	r6, r5
   40028:	bcs	4006c <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   4002c:	mov	r1, #32
   40030:	mov	r2, r6
   40034:	bl	14ee4 <memset@plt>
   40038:	ldr	r0, [r4, #20]
   4003c:	ldr	r2, [r4, #44]	; 0x2c
   40040:	mov	r1, #0
   40044:	add	r0, r0, r6
   40048:	str	r0, [r4, #20]
   4004c:	mov	r0, r4
   40050:	blx	r2
   40054:	ldr	r1, [r4, #16]
   40058:	ldr	r0, [r4, #20]
   4005c:	sub	r5, r5, r6
   40060:	sub	r6, r1, r0
   40064:	cmp	r5, r6
   40068:	bhi	4002c <flatcc_json_printer_utype_enum_vector_field@@Base+0x358>
   4006c:	mov	r1, #32
   40070:	mov	r2, r5
   40074:	bl	14ee4 <memset@plt>
   40078:	ldr	r0, [r4, #20]
   4007c:	add	r0, r0, r5
   40080:	str	r0, [r4, #20]
   40084:	add	r1, r0, #1
   40088:	str	r1, [r4, #20]
   4008c:	mov	r1, #93	; 0x5d
   40090:	strb	r1, [r0]
   40094:	sub	sp, fp, #28
   40098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004009c <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   4009c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   400a0:	add	fp, sp, #28
   400a4:	sub	sp, sp, #4
   400a8:	mov	r4, r0
   400ac:	ldrb	r0, [r0, #27]
   400b0:	cmp	r0, #0
   400b4:	beq	400c8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   400b8:	mov	r0, r4
   400bc:	sub	sp, fp, #28
   400c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   400c4:	b	3cf74 <flatcc_json_printer_uint8_vector_field@@Base>
   400c8:	mov	r0, #4
   400cc:	add	r0, r0, r2, lsl #1
   400d0:	ldr	r2, [r1, #8]
   400d4:	cmp	r0, r2
   400d8:	bge	400f8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   400dc:	ldr	r2, [r1, #4]
   400e0:	add	r0, r2, r0
   400e4:	ldrh	r0, [r0]
   400e8:	cmp	r0, #0
   400ec:	ldrne	r2, [r1]
   400f0:	addsne	r8, r2, r0
   400f4:	bne	40100 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   400f8:	sub	sp, fp, #28
   400fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40100:	ldr	r0, [r1, #16]
   40104:	ldr	sl, [fp, #12]
   40108:	ldr	r2, [fp, #8]
   4010c:	add	r7, r0, #1
   40110:	cmp	r0, #0
   40114:	str	r7, [r1, #16]
   40118:	beq	40130 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x94>
   4011c:	ldr	r0, [r4, #20]
   40120:	add	r1, r0, #1
   40124:	str	r1, [r4, #20]
   40128:	mov	r1, #44	; 0x2c
   4012c:	strb	r1, [r0]
   40130:	ldr	r0, [r8]
   40134:	mov	r1, r3
   40138:	ldr	r9, [r8, r0]!
   4013c:	mov	r0, r4
   40140:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   40144:	ldr	r1, [r4, #32]
   40148:	ldr	r0, [r4, #20]
   4014c:	cmp	r9, #0
   40150:	add	r1, r1, #1
   40154:	str	r1, [r4, #32]
   40158:	add	r1, r0, #1
   4015c:	str	r1, [r4, #20]
   40160:	mov	r1, #91	; 0x5b
   40164:	strb	r1, [r0]
   40168:	beq	40380 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   4016c:	ldrb	r1, [r4, #25]
   40170:	ldr	r0, [r4, #20]
   40174:	cmp	r1, #0
   40178:	beq	40234 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x198>
   4017c:	add	r1, r0, #1
   40180:	str	r1, [r4, #20]
   40184:	mov	r1, #10
   40188:	strb	r1, [r0]
   4018c:	ldr	r0, [r4, #20]
   40190:	ldrb	r2, [r4, #25]
   40194:	ldr	r3, [r4, #32]
   40198:	ldr	r1, [r4, #16]
   4019c:	mla	r7, r3, r2, r0
   401a0:	mul	r5, r3, r2
   401a4:	cmp	r7, r1
   401a8:	bls	40218 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   401ac:	cmp	r0, r1
   401b0:	bcc	401cc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   401b4:	ldr	r2, [r4, #44]	; 0x2c
   401b8:	mov	r0, r4
   401bc:	mov	r1, #0
   401c0:	blx	r2
   401c4:	ldr	r1, [r4, #16]
   401c8:	ldr	r0, [r4, #20]
   401cc:	sub	r6, r1, r0
   401d0:	cmp	r6, r5
   401d4:	bcs	40218 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   401d8:	mov	r1, #32
   401dc:	mov	r2, r6
   401e0:	bl	14ee4 <memset@plt>
   401e4:	ldr	r0, [r4, #20]
   401e8:	ldr	r2, [r4, #44]	; 0x2c
   401ec:	mov	r1, #0
   401f0:	add	r0, r0, r6
   401f4:	str	r0, [r4, #20]
   401f8:	mov	r0, r4
   401fc:	blx	r2
   40200:	ldr	r1, [r4, #16]
   40204:	ldr	r0, [r4, #20]
   40208:	sub	r5, r5, r6
   4020c:	sub	r6, r1, r0
   40210:	cmp	r5, r6
   40214:	bhi	401d8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x13c>
   40218:	mov	r1, #32
   4021c:	mov	r2, r5
   40220:	bl	14ee4 <memset@plt>
   40224:	ldr	r0, [r4, #20]
   40228:	add	r0, r0, r5
   4022c:	str	r0, [r4, #20]
   40230:	b	40250 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   40234:	ldr	r1, [r4, #16]
   40238:	cmp	r0, r1
   4023c:	bcc	40250 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   40240:	ldr	r2, [r4, #44]	; 0x2c
   40244:	mov	r0, r4
   40248:	mov	r1, #0
   4024c:	blx	r2
   40250:	ldrb	r1, [r8, #4]
   40254:	mov	r0, r4
   40258:	blx	sl
   4025c:	subs	r9, r9, #1
   40260:	beq	40380 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   40264:	add	r7, r8, #5
   40268:	mov	r8, #44	; 0x2c
   4026c:	b	4029c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x200>
   40270:	mov	r1, #32
   40274:	mov	r2, r5
   40278:	bl	14ee4 <memset@plt>
   4027c:	ldr	r0, [r4, #20]
   40280:	add	r0, r0, r5
   40284:	str	r0, [r4, #20]
   40288:	ldrb	r1, [r7], #1
   4028c:	mov	r0, r4
   40290:	blx	sl
   40294:	cmp	r9, #0
   40298:	beq	40380 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   4029c:	ldr	r0, [r4, #20]
   402a0:	sub	r9, r9, #1
   402a4:	add	r1, r0, #1
   402a8:	str	r1, [r4, #20]
   402ac:	strb	r8, [r0]
   402b0:	ldrb	r1, [r4, #25]
   402b4:	ldr	r0, [r4, #20]
   402b8:	cmp	r1, #0
   402bc:	beq	40360 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   402c0:	add	r1, r0, #1
   402c4:	str	r1, [r4, #20]
   402c8:	mov	r1, #10
   402cc:	strb	r1, [r0]
   402d0:	ldr	r0, [r4, #20]
   402d4:	ldrb	r2, [r4, #25]
   402d8:	ldr	r3, [r4, #32]
   402dc:	ldr	r1, [r4, #16]
   402e0:	mla	r6, r3, r2, r0
   402e4:	mul	r5, r3, r2
   402e8:	cmp	r6, r1
   402ec:	bls	40270 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   402f0:	cmp	r0, r1
   402f4:	bcc	40310 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   402f8:	ldr	r2, [r4, #44]	; 0x2c
   402fc:	mov	r0, r4
   40300:	mov	r1, #0
   40304:	blx	r2
   40308:	ldr	r1, [r4, #16]
   4030c:	ldr	r0, [r4, #20]
   40310:	sub	r6, r1, r0
   40314:	cmp	r6, r5
   40318:	bcs	40270 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   4031c:	mov	r1, #32
   40320:	mov	r2, r6
   40324:	bl	14ee4 <memset@plt>
   40328:	ldr	r0, [r4, #20]
   4032c:	ldr	r2, [r4, #44]	; 0x2c
   40330:	mov	r1, #0
   40334:	add	r0, r0, r6
   40338:	str	r0, [r4, #20]
   4033c:	mov	r0, r4
   40340:	blx	r2
   40344:	ldr	r1, [r4, #16]
   40348:	ldr	r0, [r4, #20]
   4034c:	sub	r5, r5, r6
   40350:	sub	r6, r1, r0
   40354:	cmp	r5, r6
   40358:	bhi	4031c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x280>
   4035c:	b	40270 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   40360:	ldr	r1, [r4, #16]
   40364:	cmp	r0, r1
   40368:	bcc	40288 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   4036c:	ldr	r2, [r4, #44]	; 0x2c
   40370:	mov	r0, r4
   40374:	mov	r1, #0
   40378:	blx	r2
   4037c:	b	40288 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   40380:	ldrb	r1, [r4, #25]
   40384:	ldr	r0, [r4, #20]
   40388:	cmp	r1, #0
   4038c:	beq	4044c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   40390:	add	r1, r0, #1
   40394:	str	r1, [r4, #20]
   40398:	mov	r1, #10
   4039c:	strb	r1, [r0]
   403a0:	ldr	r0, [r4, #32]
   403a4:	sub	r2, r0, #1
   403a8:	str	r2, [r4, #32]
   403ac:	ldrb	r3, [r4, #25]
   403b0:	ldr	r0, [r4, #20]
   403b4:	ldr	r1, [r4, #16]
   403b8:	mla	r7, r2, r3, r0
   403bc:	mul	r5, r2, r3
   403c0:	cmp	r7, r1
   403c4:	bls	40434 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   403c8:	cmp	r0, r1
   403cc:	bcc	403e8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   403d0:	ldr	r2, [r4, #44]	; 0x2c
   403d4:	mov	r0, r4
   403d8:	mov	r1, #0
   403dc:	blx	r2
   403e0:	ldr	r1, [r4, #16]
   403e4:	ldr	r0, [r4, #20]
   403e8:	sub	r6, r1, r0
   403ec:	cmp	r6, r5
   403f0:	bcs	40434 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   403f4:	mov	r1, #32
   403f8:	mov	r2, r6
   403fc:	bl	14ee4 <memset@plt>
   40400:	ldr	r0, [r4, #20]
   40404:	ldr	r2, [r4, #44]	; 0x2c
   40408:	mov	r1, #0
   4040c:	add	r0, r0, r6
   40410:	str	r0, [r4, #20]
   40414:	mov	r0, r4
   40418:	blx	r2
   4041c:	ldr	r1, [r4, #16]
   40420:	ldr	r0, [r4, #20]
   40424:	sub	r5, r5, r6
   40428:	sub	r6, r1, r0
   4042c:	cmp	r5, r6
   40430:	bhi	403f4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x358>
   40434:	mov	r1, #32
   40438:	mov	r2, r5
   4043c:	bl	14ee4 <memset@plt>
   40440:	ldr	r0, [r4, #20]
   40444:	add	r0, r0, r5
   40448:	str	r0, [r4, #20]
   4044c:	add	r1, r0, #1
   40450:	str	r1, [r4, #20]
   40454:	mov	r1, #93	; 0x5d
   40458:	strb	r1, [r0]
   4045c:	sub	sp, fp, #28
   40460:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040464 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   40464:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40468:	add	fp, sp, #28
   4046c:	sub	sp, sp, #4
   40470:	mov	r4, r0
   40474:	ldrb	r0, [r0, #27]
   40478:	cmp	r0, #0
   4047c:	beq	40490 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   40480:	mov	r0, r4
   40484:	sub	sp, fp, #28
   40488:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4048c:	b	3d484 <flatcc_json_printer_uint16_vector_field@@Base>
   40490:	mov	r0, #4
   40494:	add	r0, r0, r2, lsl #1
   40498:	ldr	r2, [r1, #8]
   4049c:	cmp	r0, r2
   404a0:	bge	404c0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   404a4:	ldr	r2, [r1, #4]
   404a8:	add	r0, r2, r0
   404ac:	ldrh	r0, [r0]
   404b0:	cmp	r0, #0
   404b4:	ldrne	r2, [r1]
   404b8:	addsne	r8, r2, r0
   404bc:	bne	404c8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   404c0:	sub	sp, fp, #28
   404c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   404c8:	ldr	r0, [r1, #16]
   404cc:	ldr	sl, [fp, #12]
   404d0:	ldr	r2, [fp, #8]
   404d4:	add	r7, r0, #1
   404d8:	cmp	r0, #0
   404dc:	str	r7, [r1, #16]
   404e0:	beq	404f8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x94>
   404e4:	ldr	r0, [r4, #20]
   404e8:	add	r1, r0, #1
   404ec:	str	r1, [r4, #20]
   404f0:	mov	r1, #44	; 0x2c
   404f4:	strb	r1, [r0]
   404f8:	ldr	r0, [r8]
   404fc:	mov	r1, r3
   40500:	ldr	r9, [r8, r0]!
   40504:	mov	r0, r4
   40508:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   4050c:	ldr	r1, [r4, #32]
   40510:	ldr	r0, [r4, #20]
   40514:	cmp	r9, #0
   40518:	add	r1, r1, #1
   4051c:	str	r1, [r4, #32]
   40520:	add	r1, r0, #1
   40524:	str	r1, [r4, #20]
   40528:	mov	r1, #91	; 0x5b
   4052c:	strb	r1, [r0]
   40530:	beq	40748 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   40534:	ldrb	r1, [r4, #25]
   40538:	ldr	r0, [r4, #20]
   4053c:	cmp	r1, #0
   40540:	beq	405fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x198>
   40544:	add	r1, r0, #1
   40548:	str	r1, [r4, #20]
   4054c:	mov	r1, #10
   40550:	strb	r1, [r0]
   40554:	ldr	r0, [r4, #20]
   40558:	ldrb	r2, [r4, #25]
   4055c:	ldr	r3, [r4, #32]
   40560:	ldr	r1, [r4, #16]
   40564:	mla	r7, r3, r2, r0
   40568:	mul	r5, r3, r2
   4056c:	cmp	r7, r1
   40570:	bls	405e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   40574:	cmp	r0, r1
   40578:	bcc	40594 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   4057c:	ldr	r2, [r4, #44]	; 0x2c
   40580:	mov	r0, r4
   40584:	mov	r1, #0
   40588:	blx	r2
   4058c:	ldr	r1, [r4, #16]
   40590:	ldr	r0, [r4, #20]
   40594:	sub	r6, r1, r0
   40598:	cmp	r6, r5
   4059c:	bcs	405e0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   405a0:	mov	r1, #32
   405a4:	mov	r2, r6
   405a8:	bl	14ee4 <memset@plt>
   405ac:	ldr	r0, [r4, #20]
   405b0:	ldr	r2, [r4, #44]	; 0x2c
   405b4:	mov	r1, #0
   405b8:	add	r0, r0, r6
   405bc:	str	r0, [r4, #20]
   405c0:	mov	r0, r4
   405c4:	blx	r2
   405c8:	ldr	r1, [r4, #16]
   405cc:	ldr	r0, [r4, #20]
   405d0:	sub	r5, r5, r6
   405d4:	sub	r6, r1, r0
   405d8:	cmp	r5, r6
   405dc:	bhi	405a0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x13c>
   405e0:	mov	r1, #32
   405e4:	mov	r2, r5
   405e8:	bl	14ee4 <memset@plt>
   405ec:	ldr	r0, [r4, #20]
   405f0:	add	r0, r0, r5
   405f4:	str	r0, [r4, #20]
   405f8:	b	40618 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   405fc:	ldr	r1, [r4, #16]
   40600:	cmp	r0, r1
   40604:	bcc	40618 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   40608:	ldr	r2, [r4, #44]	; 0x2c
   4060c:	mov	r0, r4
   40610:	mov	r1, #0
   40614:	blx	r2
   40618:	ldrh	r1, [r8, #4]
   4061c:	mov	r0, r4
   40620:	blx	sl
   40624:	subs	r9, r9, #1
   40628:	beq	40748 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   4062c:	add	r7, r8, #6
   40630:	mov	r8, #44	; 0x2c
   40634:	b	40664 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
   40638:	mov	r1, #32
   4063c:	mov	r2, r5
   40640:	bl	14ee4 <memset@plt>
   40644:	ldr	r0, [r4, #20]
   40648:	add	r0, r0, r5
   4064c:	str	r0, [r4, #20]
   40650:	ldrh	r1, [r7], #2
   40654:	mov	r0, r4
   40658:	blx	sl
   4065c:	cmp	r9, #0
   40660:	beq	40748 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   40664:	ldr	r0, [r4, #20]
   40668:	sub	r9, r9, #1
   4066c:	add	r1, r0, #1
   40670:	str	r1, [r4, #20]
   40674:	strb	r8, [r0]
   40678:	ldrb	r1, [r4, #25]
   4067c:	ldr	r0, [r4, #20]
   40680:	cmp	r1, #0
   40684:	beq	40728 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   40688:	add	r1, r0, #1
   4068c:	str	r1, [r4, #20]
   40690:	mov	r1, #10
   40694:	strb	r1, [r0]
   40698:	ldr	r0, [r4, #20]
   4069c:	ldrb	r2, [r4, #25]
   406a0:	ldr	r3, [r4, #32]
   406a4:	ldr	r1, [r4, #16]
   406a8:	mla	r6, r3, r2, r0
   406ac:	mul	r5, r3, r2
   406b0:	cmp	r6, r1
   406b4:	bls	40638 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   406b8:	cmp	r0, r1
   406bc:	bcc	406d8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   406c0:	ldr	r2, [r4, #44]	; 0x2c
   406c4:	mov	r0, r4
   406c8:	mov	r1, #0
   406cc:	blx	r2
   406d0:	ldr	r1, [r4, #16]
   406d4:	ldr	r0, [r4, #20]
   406d8:	sub	r6, r1, r0
   406dc:	cmp	r6, r5
   406e0:	bcs	40638 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   406e4:	mov	r1, #32
   406e8:	mov	r2, r6
   406ec:	bl	14ee4 <memset@plt>
   406f0:	ldr	r0, [r4, #20]
   406f4:	ldr	r2, [r4, #44]	; 0x2c
   406f8:	mov	r1, #0
   406fc:	add	r0, r0, r6
   40700:	str	r0, [r4, #20]
   40704:	mov	r0, r4
   40708:	blx	r2
   4070c:	ldr	r1, [r4, #16]
   40710:	ldr	r0, [r4, #20]
   40714:	sub	r5, r5, r6
   40718:	sub	r6, r1, r0
   4071c:	cmp	r5, r6
   40720:	bhi	406e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x280>
   40724:	b	40638 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   40728:	ldr	r1, [r4, #16]
   4072c:	cmp	r0, r1
   40730:	bcc	40650 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   40734:	ldr	r2, [r4, #44]	; 0x2c
   40738:	mov	r0, r4
   4073c:	mov	r1, #0
   40740:	blx	r2
   40744:	b	40650 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   40748:	ldrb	r1, [r4, #25]
   4074c:	ldr	r0, [r4, #20]
   40750:	cmp	r1, #0
   40754:	beq	40814 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   40758:	add	r1, r0, #1
   4075c:	str	r1, [r4, #20]
   40760:	mov	r1, #10
   40764:	strb	r1, [r0]
   40768:	ldr	r0, [r4, #32]
   4076c:	sub	r2, r0, #1
   40770:	str	r2, [r4, #32]
   40774:	ldrb	r3, [r4, #25]
   40778:	ldr	r0, [r4, #20]
   4077c:	ldr	r1, [r4, #16]
   40780:	mla	r7, r2, r3, r0
   40784:	mul	r5, r2, r3
   40788:	cmp	r7, r1
   4078c:	bls	407fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   40790:	cmp	r0, r1
   40794:	bcc	407b0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   40798:	ldr	r2, [r4, #44]	; 0x2c
   4079c:	mov	r0, r4
   407a0:	mov	r1, #0
   407a4:	blx	r2
   407a8:	ldr	r1, [r4, #16]
   407ac:	ldr	r0, [r4, #20]
   407b0:	sub	r6, r1, r0
   407b4:	cmp	r6, r5
   407b8:	bcs	407fc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   407bc:	mov	r1, #32
   407c0:	mov	r2, r6
   407c4:	bl	14ee4 <memset@plt>
   407c8:	ldr	r0, [r4, #20]
   407cc:	ldr	r2, [r4, #44]	; 0x2c
   407d0:	mov	r1, #0
   407d4:	add	r0, r0, r6
   407d8:	str	r0, [r4, #20]
   407dc:	mov	r0, r4
   407e0:	blx	r2
   407e4:	ldr	r1, [r4, #16]
   407e8:	ldr	r0, [r4, #20]
   407ec:	sub	r5, r5, r6
   407f0:	sub	r6, r1, r0
   407f4:	cmp	r5, r6
   407f8:	bhi	407bc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x358>
   407fc:	mov	r1, #32
   40800:	mov	r2, r5
   40804:	bl	14ee4 <memset@plt>
   40808:	ldr	r0, [r4, #20]
   4080c:	add	r0, r0, r5
   40810:	str	r0, [r4, #20]
   40814:	add	r1, r0, #1
   40818:	str	r1, [r4, #20]
   4081c:	mov	r1, #93	; 0x5d
   40820:	strb	r1, [r0]
   40824:	sub	sp, fp, #28
   40828:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004082c <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   4082c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40830:	add	fp, sp, #28
   40834:	sub	sp, sp, #4
   40838:	mov	r4, r0
   4083c:	ldrb	r0, [r0, #27]
   40840:	cmp	r0, #0
   40844:	beq	40858 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   40848:	mov	r0, r4
   4084c:	sub	sp, fp, #28
   40850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40854:	b	3d844 <flatcc_json_printer_uint32_vector_field@@Base>
   40858:	mov	r0, #4
   4085c:	add	r0, r0, r2, lsl #1
   40860:	ldr	r2, [r1, #8]
   40864:	cmp	r0, r2
   40868:	bge	40888 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   4086c:	ldr	r2, [r1, #4]
   40870:	add	r0, r2, r0
   40874:	ldrh	r0, [r0]
   40878:	cmp	r0, #0
   4087c:	ldrne	r2, [r1]
   40880:	addsne	r8, r2, r0
   40884:	bne	40890 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   40888:	sub	sp, fp, #28
   4088c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40890:	ldr	r0, [r1, #16]
   40894:	ldr	sl, [fp, #12]
   40898:	ldr	r2, [fp, #8]
   4089c:	add	r7, r0, #1
   408a0:	cmp	r0, #0
   408a4:	str	r7, [r1, #16]
   408a8:	beq	408c0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x94>
   408ac:	ldr	r0, [r4, #20]
   408b0:	add	r1, r0, #1
   408b4:	str	r1, [r4, #20]
   408b8:	mov	r1, #44	; 0x2c
   408bc:	strb	r1, [r0]
   408c0:	ldr	r0, [r8]
   408c4:	mov	r1, r3
   408c8:	ldr	r9, [r8, r0]!
   408cc:	mov	r0, r4
   408d0:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   408d4:	ldr	r1, [r4, #32]
   408d8:	ldr	r0, [r4, #20]
   408dc:	cmp	r9, #0
   408e0:	add	r1, r1, #1
   408e4:	str	r1, [r4, #32]
   408e8:	add	r1, r0, #1
   408ec:	str	r1, [r4, #20]
   408f0:	mov	r1, #91	; 0x5b
   408f4:	strb	r1, [r0]
   408f8:	beq	40b10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   408fc:	ldrb	r1, [r4, #25]
   40900:	ldr	r0, [r4, #20]
   40904:	cmp	r1, #0
   40908:	beq	409c4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x198>
   4090c:	add	r1, r0, #1
   40910:	str	r1, [r4, #20]
   40914:	mov	r1, #10
   40918:	strb	r1, [r0]
   4091c:	ldr	r0, [r4, #20]
   40920:	ldrb	r2, [r4, #25]
   40924:	ldr	r3, [r4, #32]
   40928:	ldr	r1, [r4, #16]
   4092c:	mla	r7, r3, r2, r0
   40930:	mul	r5, r3, r2
   40934:	cmp	r7, r1
   40938:	bls	409a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   4093c:	cmp	r0, r1
   40940:	bcc	4095c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   40944:	ldr	r2, [r4, #44]	; 0x2c
   40948:	mov	r0, r4
   4094c:	mov	r1, #0
   40950:	blx	r2
   40954:	ldr	r1, [r4, #16]
   40958:	ldr	r0, [r4, #20]
   4095c:	sub	r6, r1, r0
   40960:	cmp	r6, r5
   40964:	bcs	409a8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   40968:	mov	r1, #32
   4096c:	mov	r2, r6
   40970:	bl	14ee4 <memset@plt>
   40974:	ldr	r0, [r4, #20]
   40978:	ldr	r2, [r4, #44]	; 0x2c
   4097c:	mov	r1, #0
   40980:	add	r0, r0, r6
   40984:	str	r0, [r4, #20]
   40988:	mov	r0, r4
   4098c:	blx	r2
   40990:	ldr	r1, [r4, #16]
   40994:	ldr	r0, [r4, #20]
   40998:	sub	r5, r5, r6
   4099c:	sub	r6, r1, r0
   409a0:	cmp	r5, r6
   409a4:	bhi	40968 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x13c>
   409a8:	mov	r1, #32
   409ac:	mov	r2, r5
   409b0:	bl	14ee4 <memset@plt>
   409b4:	ldr	r0, [r4, #20]
   409b8:	add	r0, r0, r5
   409bc:	str	r0, [r4, #20]
   409c0:	b	409e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   409c4:	ldr	r1, [r4, #16]
   409c8:	cmp	r0, r1
   409cc:	bcc	409e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   409d0:	ldr	r2, [r4, #44]	; 0x2c
   409d4:	mov	r0, r4
   409d8:	mov	r1, #0
   409dc:	blx	r2
   409e0:	ldr	r1, [r8, #4]
   409e4:	mov	r0, r4
   409e8:	blx	sl
   409ec:	subs	r9, r9, #1
   409f0:	beq	40b10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   409f4:	add	r7, r8, #8
   409f8:	mov	r8, #44	; 0x2c
   409fc:	b	40a2c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x200>
   40a00:	mov	r1, #32
   40a04:	mov	r2, r5
   40a08:	bl	14ee4 <memset@plt>
   40a0c:	ldr	r0, [r4, #20]
   40a10:	add	r0, r0, r5
   40a14:	str	r0, [r4, #20]
   40a18:	ldr	r1, [r7], #4
   40a1c:	mov	r0, r4
   40a20:	blx	sl
   40a24:	cmp	r9, #0
   40a28:	beq	40b10 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   40a2c:	ldr	r0, [r4, #20]
   40a30:	sub	r9, r9, #1
   40a34:	add	r1, r0, #1
   40a38:	str	r1, [r4, #20]
   40a3c:	strb	r8, [r0]
   40a40:	ldrb	r1, [r4, #25]
   40a44:	ldr	r0, [r4, #20]
   40a48:	cmp	r1, #0
   40a4c:	beq	40af0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   40a50:	add	r1, r0, #1
   40a54:	str	r1, [r4, #20]
   40a58:	mov	r1, #10
   40a5c:	strb	r1, [r0]
   40a60:	ldr	r0, [r4, #20]
   40a64:	ldrb	r2, [r4, #25]
   40a68:	ldr	r3, [r4, #32]
   40a6c:	ldr	r1, [r4, #16]
   40a70:	mla	r6, r3, r2, r0
   40a74:	mul	r5, r3, r2
   40a78:	cmp	r6, r1
   40a7c:	bls	40a00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   40a80:	cmp	r0, r1
   40a84:	bcc	40aa0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x274>
   40a88:	ldr	r2, [r4, #44]	; 0x2c
   40a8c:	mov	r0, r4
   40a90:	mov	r1, #0
   40a94:	blx	r2
   40a98:	ldr	r1, [r4, #16]
   40a9c:	ldr	r0, [r4, #20]
   40aa0:	sub	r6, r1, r0
   40aa4:	cmp	r6, r5
   40aa8:	bcs	40a00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   40aac:	mov	r1, #32
   40ab0:	mov	r2, r6
   40ab4:	bl	14ee4 <memset@plt>
   40ab8:	ldr	r0, [r4, #20]
   40abc:	ldr	r2, [r4, #44]	; 0x2c
   40ac0:	mov	r1, #0
   40ac4:	add	r0, r0, r6
   40ac8:	str	r0, [r4, #20]
   40acc:	mov	r0, r4
   40ad0:	blx	r2
   40ad4:	ldr	r1, [r4, #16]
   40ad8:	ldr	r0, [r4, #20]
   40adc:	sub	r5, r5, r6
   40ae0:	sub	r6, r1, r0
   40ae4:	cmp	r5, r6
   40ae8:	bhi	40aac <flatcc_json_printer_uint32_enum_vector_field@@Base+0x280>
   40aec:	b	40a00 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   40af0:	ldr	r1, [r4, #16]
   40af4:	cmp	r0, r1
   40af8:	bcc	40a18 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   40afc:	ldr	r2, [r4, #44]	; 0x2c
   40b00:	mov	r0, r4
   40b04:	mov	r1, #0
   40b08:	blx	r2
   40b0c:	b	40a18 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   40b10:	ldrb	r1, [r4, #25]
   40b14:	ldr	r0, [r4, #20]
   40b18:	cmp	r1, #0
   40b1c:	beq	40bdc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   40b20:	add	r1, r0, #1
   40b24:	str	r1, [r4, #20]
   40b28:	mov	r1, #10
   40b2c:	strb	r1, [r0]
   40b30:	ldr	r0, [r4, #32]
   40b34:	sub	r2, r0, #1
   40b38:	str	r2, [r4, #32]
   40b3c:	ldrb	r3, [r4, #25]
   40b40:	ldr	r0, [r4, #20]
   40b44:	ldr	r1, [r4, #16]
   40b48:	mla	r7, r2, r3, r0
   40b4c:	mul	r5, r2, r3
   40b50:	cmp	r7, r1
   40b54:	bls	40bc4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   40b58:	cmp	r0, r1
   40b5c:	bcc	40b78 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   40b60:	ldr	r2, [r4, #44]	; 0x2c
   40b64:	mov	r0, r4
   40b68:	mov	r1, #0
   40b6c:	blx	r2
   40b70:	ldr	r1, [r4, #16]
   40b74:	ldr	r0, [r4, #20]
   40b78:	sub	r6, r1, r0
   40b7c:	cmp	r6, r5
   40b80:	bcs	40bc4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   40b84:	mov	r1, #32
   40b88:	mov	r2, r6
   40b8c:	bl	14ee4 <memset@plt>
   40b90:	ldr	r0, [r4, #20]
   40b94:	ldr	r2, [r4, #44]	; 0x2c
   40b98:	mov	r1, #0
   40b9c:	add	r0, r0, r6
   40ba0:	str	r0, [r4, #20]
   40ba4:	mov	r0, r4
   40ba8:	blx	r2
   40bac:	ldr	r1, [r4, #16]
   40bb0:	ldr	r0, [r4, #20]
   40bb4:	sub	r5, r5, r6
   40bb8:	sub	r6, r1, r0
   40bbc:	cmp	r5, r6
   40bc0:	bhi	40b84 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x358>
   40bc4:	mov	r1, #32
   40bc8:	mov	r2, r5
   40bcc:	bl	14ee4 <memset@plt>
   40bd0:	ldr	r0, [r4, #20]
   40bd4:	add	r0, r0, r5
   40bd8:	str	r0, [r4, #20]
   40bdc:	add	r1, r0, #1
   40be0:	str	r1, [r4, #20]
   40be4:	mov	r1, #93	; 0x5d
   40be8:	strb	r1, [r0]
   40bec:	sub	sp, fp, #28
   40bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040bf4 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   40bf4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40bf8:	add	fp, sp, #28
   40bfc:	sub	sp, sp, #4
   40c00:	mov	r4, r0
   40c04:	ldrb	r0, [r0, #27]
   40c08:	cmp	r0, #0
   40c0c:	beq	40c20 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   40c10:	mov	r0, r4
   40c14:	sub	sp, fp, #28
   40c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40c1c:	b	3dc04 <flatcc_json_printer_uint64_vector_field@@Base>
   40c20:	mov	r0, #4
   40c24:	add	r0, r0, r2, lsl #1
   40c28:	ldr	r2, [r1, #8]
   40c2c:	cmp	r0, r2
   40c30:	bge	40c50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   40c34:	ldr	r2, [r1, #4]
   40c38:	add	r0, r2, r0
   40c3c:	ldrh	r0, [r0]
   40c40:	cmp	r0, #0
   40c44:	ldrne	r2, [r1]
   40c48:	addsne	r8, r2, r0
   40c4c:	bne	40c58 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   40c50:	sub	sp, fp, #28
   40c54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40c58:	ldr	r0, [r1, #16]
   40c5c:	ldr	sl, [fp, #12]
   40c60:	ldr	r2, [fp, #8]
   40c64:	add	r7, r0, #1
   40c68:	cmp	r0, #0
   40c6c:	str	r7, [r1, #16]
   40c70:	beq	40c88 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x94>
   40c74:	ldr	r0, [r4, #20]
   40c78:	add	r1, r0, #1
   40c7c:	str	r1, [r4, #20]
   40c80:	mov	r1, #44	; 0x2c
   40c84:	strb	r1, [r0]
   40c88:	ldr	r0, [r8]
   40c8c:	mov	r1, r3
   40c90:	ldr	r9, [r8, r0]!
   40c94:	mov	r0, r4
   40c98:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   40c9c:	ldr	r1, [r4, #32]
   40ca0:	ldr	r0, [r4, #20]
   40ca4:	cmp	r9, #0
   40ca8:	add	r1, r1, #1
   40cac:	str	r1, [r4, #32]
   40cb0:	add	r1, r0, #1
   40cb4:	str	r1, [r4, #20]
   40cb8:	mov	r1, #91	; 0x5b
   40cbc:	strb	r1, [r0]
   40cc0:	beq	40edc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   40cc4:	ldrb	r1, [r4, #25]
   40cc8:	ldr	r0, [r4, #20]
   40ccc:	cmp	r1, #0
   40cd0:	beq	40d8c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x198>
   40cd4:	add	r1, r0, #1
   40cd8:	str	r1, [r4, #20]
   40cdc:	mov	r1, #10
   40ce0:	strb	r1, [r0]
   40ce4:	ldr	r0, [r4, #20]
   40ce8:	ldrb	r2, [r4, #25]
   40cec:	ldr	r3, [r4, #32]
   40cf0:	ldr	r1, [r4, #16]
   40cf4:	mla	r7, r3, r2, r0
   40cf8:	mul	r5, r3, r2
   40cfc:	cmp	r7, r1
   40d00:	bls	40d70 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   40d04:	cmp	r0, r1
   40d08:	bcc	40d24 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   40d0c:	ldr	r2, [r4, #44]	; 0x2c
   40d10:	mov	r0, r4
   40d14:	mov	r1, #0
   40d18:	blx	r2
   40d1c:	ldr	r1, [r4, #16]
   40d20:	ldr	r0, [r4, #20]
   40d24:	sub	r6, r1, r0
   40d28:	cmp	r6, r5
   40d2c:	bcs	40d70 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   40d30:	mov	r1, #32
   40d34:	mov	r2, r6
   40d38:	bl	14ee4 <memset@plt>
   40d3c:	ldr	r0, [r4, #20]
   40d40:	ldr	r2, [r4, #44]	; 0x2c
   40d44:	mov	r1, #0
   40d48:	add	r0, r0, r6
   40d4c:	str	r0, [r4, #20]
   40d50:	mov	r0, r4
   40d54:	blx	r2
   40d58:	ldr	r1, [r4, #16]
   40d5c:	ldr	r0, [r4, #20]
   40d60:	sub	r5, r5, r6
   40d64:	sub	r6, r1, r0
   40d68:	cmp	r5, r6
   40d6c:	bhi	40d30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x13c>
   40d70:	mov	r1, #32
   40d74:	mov	r2, r5
   40d78:	bl	14ee4 <memset@plt>
   40d7c:	ldr	r0, [r4, #20]
   40d80:	add	r0, r0, r5
   40d84:	str	r0, [r4, #20]
   40d88:	b	40da8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   40d8c:	ldr	r1, [r4, #16]
   40d90:	cmp	r0, r1
   40d94:	bcc	40da8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   40d98:	ldr	r2, [r4, #44]	; 0x2c
   40d9c:	mov	r0, r4
   40da0:	mov	r1, #0
   40da4:	blx	r2
   40da8:	ldrd	r2, [r8, #4]
   40dac:	mov	r0, r4
   40db0:	blx	sl
   40db4:	subs	r9, r9, #1
   40db8:	beq	40edc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   40dbc:	add	r7, r8, #12
   40dc0:	mov	r8, #44	; 0x2c
   40dc4:	b	40df8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   40dc8:	mov	r1, #32
   40dcc:	mov	r2, r5
   40dd0:	bl	14ee4 <memset@plt>
   40dd4:	ldr	r0, [r4, #20]
   40dd8:	add	r0, r0, r5
   40ddc:	str	r0, [r4, #20]
   40de0:	ldrd	r2, [r7]
   40de4:	mov	r0, r4
   40de8:	blx	sl
   40dec:	add	r7, r7, #8
   40df0:	cmp	r9, #0
   40df4:	beq	40edc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   40df8:	ldr	r0, [r4, #20]
   40dfc:	sub	r9, r9, #1
   40e00:	add	r1, r0, #1
   40e04:	str	r1, [r4, #20]
   40e08:	strb	r8, [r0]
   40e0c:	ldrb	r1, [r4, #25]
   40e10:	ldr	r0, [r4, #20]
   40e14:	cmp	r1, #0
   40e18:	beq	40ebc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c8>
   40e1c:	add	r1, r0, #1
   40e20:	str	r1, [r4, #20]
   40e24:	mov	r1, #10
   40e28:	strb	r1, [r0]
   40e2c:	ldr	r0, [r4, #20]
   40e30:	ldrb	r2, [r4, #25]
   40e34:	ldr	r3, [r4, #32]
   40e38:	ldr	r1, [r4, #16]
   40e3c:	mla	r6, r3, r2, r0
   40e40:	mul	r5, r3, r2
   40e44:	cmp	r6, r1
   40e48:	bls	40dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   40e4c:	cmp	r0, r1
   40e50:	bcc	40e6c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x278>
   40e54:	ldr	r2, [r4, #44]	; 0x2c
   40e58:	mov	r0, r4
   40e5c:	mov	r1, #0
   40e60:	blx	r2
   40e64:	ldr	r1, [r4, #16]
   40e68:	ldr	r0, [r4, #20]
   40e6c:	sub	r6, r1, r0
   40e70:	cmp	r6, r5
   40e74:	bcs	40dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   40e78:	mov	r1, #32
   40e7c:	mov	r2, r6
   40e80:	bl	14ee4 <memset@plt>
   40e84:	ldr	r0, [r4, #20]
   40e88:	ldr	r2, [r4, #44]	; 0x2c
   40e8c:	mov	r1, #0
   40e90:	add	r0, r0, r6
   40e94:	str	r0, [r4, #20]
   40e98:	mov	r0, r4
   40e9c:	blx	r2
   40ea0:	ldr	r1, [r4, #16]
   40ea4:	ldr	r0, [r4, #20]
   40ea8:	sub	r5, r5, r6
   40eac:	sub	r6, r1, r0
   40eb0:	cmp	r5, r6
   40eb4:	bhi	40e78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   40eb8:	b	40dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   40ebc:	ldr	r1, [r4, #16]
   40ec0:	cmp	r0, r1
   40ec4:	bcc	40de0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   40ec8:	ldr	r2, [r4, #44]	; 0x2c
   40ecc:	mov	r0, r4
   40ed0:	mov	r1, #0
   40ed4:	blx	r2
   40ed8:	b	40de0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   40edc:	ldrb	r1, [r4, #25]
   40ee0:	ldr	r0, [r4, #20]
   40ee4:	cmp	r1, #0
   40ee8:	beq	40fa8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   40eec:	add	r1, r0, #1
   40ef0:	str	r1, [r4, #20]
   40ef4:	mov	r1, #10
   40ef8:	strb	r1, [r0]
   40efc:	ldr	r0, [r4, #32]
   40f00:	sub	r2, r0, #1
   40f04:	str	r2, [r4, #32]
   40f08:	ldrb	r3, [r4, #25]
   40f0c:	ldr	r0, [r4, #20]
   40f10:	ldr	r1, [r4, #16]
   40f14:	mla	r7, r2, r3, r0
   40f18:	mul	r5, r2, r3
   40f1c:	cmp	r7, r1
   40f20:	bls	40f90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   40f24:	cmp	r0, r1
   40f28:	bcc	40f44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   40f2c:	ldr	r2, [r4, #44]	; 0x2c
   40f30:	mov	r0, r4
   40f34:	mov	r1, #0
   40f38:	blx	r2
   40f3c:	ldr	r1, [r4, #16]
   40f40:	ldr	r0, [r4, #20]
   40f44:	sub	r6, r1, r0
   40f48:	cmp	r6, r5
   40f4c:	bcs	40f90 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   40f50:	mov	r1, #32
   40f54:	mov	r2, r6
   40f58:	bl	14ee4 <memset@plt>
   40f5c:	ldr	r0, [r4, #20]
   40f60:	ldr	r2, [r4, #44]	; 0x2c
   40f64:	mov	r1, #0
   40f68:	add	r0, r0, r6
   40f6c:	str	r0, [r4, #20]
   40f70:	mov	r0, r4
   40f74:	blx	r2
   40f78:	ldr	r1, [r4, #16]
   40f7c:	ldr	r0, [r4, #20]
   40f80:	sub	r5, r5, r6
   40f84:	sub	r6, r1, r0
   40f88:	cmp	r5, r6
   40f8c:	bhi	40f50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x35c>
   40f90:	mov	r1, #32
   40f94:	mov	r2, r5
   40f98:	bl	14ee4 <memset@plt>
   40f9c:	ldr	r0, [r4, #20]
   40fa0:	add	r0, r0, r5
   40fa4:	str	r0, [r4, #20]
   40fa8:	add	r1, r0, #1
   40fac:	str	r1, [r4, #20]
   40fb0:	mov	r1, #93	; 0x5d
   40fb4:	strb	r1, [r0]
   40fb8:	sub	sp, fp, #28
   40fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040fc0 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   40fc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40fc4:	add	fp, sp, #28
   40fc8:	sub	sp, sp, #4
   40fcc:	mov	r4, r0
   40fd0:	ldrb	r0, [r0, #27]
   40fd4:	cmp	r0, #0
   40fd8:	beq	40fec <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   40fdc:	mov	r0, r4
   40fe0:	sub	sp, fp, #28
   40fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40fe8:	b	3dfc8 <flatcc_json_printer_int8_vector_field@@Base>
   40fec:	mov	r0, #4
   40ff0:	add	r0, r0, r2, lsl #1
   40ff4:	ldr	r2, [r1, #8]
   40ff8:	cmp	r0, r2
   40ffc:	bge	4101c <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   41000:	ldr	r2, [r1, #4]
   41004:	add	r0, r2, r0
   41008:	ldrh	r0, [r0]
   4100c:	cmp	r0, #0
   41010:	ldrne	r2, [r1]
   41014:	addsne	r8, r2, r0
   41018:	bne	41024 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   4101c:	sub	sp, fp, #28
   41020:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41024:	ldr	r0, [r1, #16]
   41028:	ldr	sl, [fp, #12]
   4102c:	ldr	r2, [fp, #8]
   41030:	add	r7, r0, #1
   41034:	cmp	r0, #0
   41038:	str	r7, [r1, #16]
   4103c:	beq	41054 <flatcc_json_printer_int8_enum_vector_field@@Base+0x94>
   41040:	ldr	r0, [r4, #20]
   41044:	add	r1, r0, #1
   41048:	str	r1, [r4, #20]
   4104c:	mov	r1, #44	; 0x2c
   41050:	strb	r1, [r0]
   41054:	ldr	r0, [r8]
   41058:	mov	r1, r3
   4105c:	ldr	r9, [r8, r0]!
   41060:	mov	r0, r4
   41064:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   41068:	ldr	r1, [r4, #32]
   4106c:	ldr	r0, [r4, #20]
   41070:	cmp	r9, #0
   41074:	add	r1, r1, #1
   41078:	str	r1, [r4, #32]
   4107c:	add	r1, r0, #1
   41080:	str	r1, [r4, #20]
   41084:	mov	r1, #91	; 0x5b
   41088:	strb	r1, [r0]
   4108c:	beq	412a4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   41090:	ldrb	r1, [r4, #25]
   41094:	ldr	r0, [r4, #20]
   41098:	cmp	r1, #0
   4109c:	beq	41158 <flatcc_json_printer_int8_enum_vector_field@@Base+0x198>
   410a0:	add	r1, r0, #1
   410a4:	str	r1, [r4, #20]
   410a8:	mov	r1, #10
   410ac:	strb	r1, [r0]
   410b0:	ldr	r0, [r4, #20]
   410b4:	ldrb	r2, [r4, #25]
   410b8:	ldr	r3, [r4, #32]
   410bc:	ldr	r1, [r4, #16]
   410c0:	mla	r7, r3, r2, r0
   410c4:	mul	r5, r3, r2
   410c8:	cmp	r7, r1
   410cc:	bls	4113c <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   410d0:	cmp	r0, r1
   410d4:	bcc	410f0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   410d8:	ldr	r2, [r4, #44]	; 0x2c
   410dc:	mov	r0, r4
   410e0:	mov	r1, #0
   410e4:	blx	r2
   410e8:	ldr	r1, [r4, #16]
   410ec:	ldr	r0, [r4, #20]
   410f0:	sub	r6, r1, r0
   410f4:	cmp	r6, r5
   410f8:	bcs	4113c <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   410fc:	mov	r1, #32
   41100:	mov	r2, r6
   41104:	bl	14ee4 <memset@plt>
   41108:	ldr	r0, [r4, #20]
   4110c:	ldr	r2, [r4, #44]	; 0x2c
   41110:	mov	r1, #0
   41114:	add	r0, r0, r6
   41118:	str	r0, [r4, #20]
   4111c:	mov	r0, r4
   41120:	blx	r2
   41124:	ldr	r1, [r4, #16]
   41128:	ldr	r0, [r4, #20]
   4112c:	sub	r5, r5, r6
   41130:	sub	r6, r1, r0
   41134:	cmp	r5, r6
   41138:	bhi	410fc <flatcc_json_printer_int8_enum_vector_field@@Base+0x13c>
   4113c:	mov	r1, #32
   41140:	mov	r2, r5
   41144:	bl	14ee4 <memset@plt>
   41148:	ldr	r0, [r4, #20]
   4114c:	add	r0, r0, r5
   41150:	str	r0, [r4, #20]
   41154:	b	41174 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   41158:	ldr	r1, [r4, #16]
   4115c:	cmp	r0, r1
   41160:	bcc	41174 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   41164:	ldr	r2, [r4, #44]	; 0x2c
   41168:	mov	r0, r4
   4116c:	mov	r1, #0
   41170:	blx	r2
   41174:	ldrsb	r1, [r8, #4]
   41178:	mov	r0, r4
   4117c:	blx	sl
   41180:	subs	r9, r9, #1
   41184:	beq	412a4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   41188:	add	r7, r8, #5
   4118c:	mov	r8, #44	; 0x2c
   41190:	b	411c0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x200>
   41194:	mov	r1, #32
   41198:	mov	r2, r5
   4119c:	bl	14ee4 <memset@plt>
   411a0:	ldr	r0, [r4, #20]
   411a4:	add	r0, r0, r5
   411a8:	str	r0, [r4, #20]
   411ac:	ldrsb	r1, [r7], #1
   411b0:	mov	r0, r4
   411b4:	blx	sl
   411b8:	cmp	r9, #0
   411bc:	beq	412a4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   411c0:	ldr	r0, [r4, #20]
   411c4:	sub	r9, r9, #1
   411c8:	add	r1, r0, #1
   411cc:	str	r1, [r4, #20]
   411d0:	strb	r8, [r0]
   411d4:	ldrb	r1, [r4, #25]
   411d8:	ldr	r0, [r4, #20]
   411dc:	cmp	r1, #0
   411e0:	beq	41284 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   411e4:	add	r1, r0, #1
   411e8:	str	r1, [r4, #20]
   411ec:	mov	r1, #10
   411f0:	strb	r1, [r0]
   411f4:	ldr	r0, [r4, #20]
   411f8:	ldrb	r2, [r4, #25]
   411fc:	ldr	r3, [r4, #32]
   41200:	ldr	r1, [r4, #16]
   41204:	mla	r6, r3, r2, r0
   41208:	mul	r5, r3, r2
   4120c:	cmp	r6, r1
   41210:	bls	41194 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   41214:	cmp	r0, r1
   41218:	bcc	41234 <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   4121c:	ldr	r2, [r4, #44]	; 0x2c
   41220:	mov	r0, r4
   41224:	mov	r1, #0
   41228:	blx	r2
   4122c:	ldr	r1, [r4, #16]
   41230:	ldr	r0, [r4, #20]
   41234:	sub	r6, r1, r0
   41238:	cmp	r6, r5
   4123c:	bcs	41194 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   41240:	mov	r1, #32
   41244:	mov	r2, r6
   41248:	bl	14ee4 <memset@plt>
   4124c:	ldr	r0, [r4, #20]
   41250:	ldr	r2, [r4, #44]	; 0x2c
   41254:	mov	r1, #0
   41258:	add	r0, r0, r6
   4125c:	str	r0, [r4, #20]
   41260:	mov	r0, r4
   41264:	blx	r2
   41268:	ldr	r1, [r4, #16]
   4126c:	ldr	r0, [r4, #20]
   41270:	sub	r5, r5, r6
   41274:	sub	r6, r1, r0
   41278:	cmp	r5, r6
   4127c:	bhi	41240 <flatcc_json_printer_int8_enum_vector_field@@Base+0x280>
   41280:	b	41194 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   41284:	ldr	r1, [r4, #16]
   41288:	cmp	r0, r1
   4128c:	bcc	411ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   41290:	ldr	r2, [r4, #44]	; 0x2c
   41294:	mov	r0, r4
   41298:	mov	r1, #0
   4129c:	blx	r2
   412a0:	b	411ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   412a4:	ldrb	r1, [r4, #25]
   412a8:	ldr	r0, [r4, #20]
   412ac:	cmp	r1, #0
   412b0:	beq	41370 <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   412b4:	add	r1, r0, #1
   412b8:	str	r1, [r4, #20]
   412bc:	mov	r1, #10
   412c0:	strb	r1, [r0]
   412c4:	ldr	r0, [r4, #32]
   412c8:	sub	r2, r0, #1
   412cc:	str	r2, [r4, #32]
   412d0:	ldrb	r3, [r4, #25]
   412d4:	ldr	r0, [r4, #20]
   412d8:	ldr	r1, [r4, #16]
   412dc:	mla	r7, r2, r3, r0
   412e0:	mul	r5, r2, r3
   412e4:	cmp	r7, r1
   412e8:	bls	41358 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   412ec:	cmp	r0, r1
   412f0:	bcc	4130c <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   412f4:	ldr	r2, [r4, #44]	; 0x2c
   412f8:	mov	r0, r4
   412fc:	mov	r1, #0
   41300:	blx	r2
   41304:	ldr	r1, [r4, #16]
   41308:	ldr	r0, [r4, #20]
   4130c:	sub	r6, r1, r0
   41310:	cmp	r6, r5
   41314:	bcs	41358 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   41318:	mov	r1, #32
   4131c:	mov	r2, r6
   41320:	bl	14ee4 <memset@plt>
   41324:	ldr	r0, [r4, #20]
   41328:	ldr	r2, [r4, #44]	; 0x2c
   4132c:	mov	r1, #0
   41330:	add	r0, r0, r6
   41334:	str	r0, [r4, #20]
   41338:	mov	r0, r4
   4133c:	blx	r2
   41340:	ldr	r1, [r4, #16]
   41344:	ldr	r0, [r4, #20]
   41348:	sub	r5, r5, r6
   4134c:	sub	r6, r1, r0
   41350:	cmp	r5, r6
   41354:	bhi	41318 <flatcc_json_printer_int8_enum_vector_field@@Base+0x358>
   41358:	mov	r1, #32
   4135c:	mov	r2, r5
   41360:	bl	14ee4 <memset@plt>
   41364:	ldr	r0, [r4, #20]
   41368:	add	r0, r0, r5
   4136c:	str	r0, [r4, #20]
   41370:	add	r1, r0, #1
   41374:	str	r1, [r4, #20]
   41378:	mov	r1, #93	; 0x5d
   4137c:	strb	r1, [r0]
   41380:	sub	sp, fp, #28
   41384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041388 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   41388:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4138c:	add	fp, sp, #28
   41390:	sub	sp, sp, #4
   41394:	mov	r4, r0
   41398:	ldrb	r0, [r0, #27]
   4139c:	cmp	r0, #0
   413a0:	beq	413b4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   413a4:	mov	r0, r4
   413a8:	sub	sp, fp, #28
   413ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   413b0:	b	3e520 <flatcc_json_printer_int16_vector_field@@Base>
   413b4:	mov	r0, #4
   413b8:	add	r0, r0, r2, lsl #1
   413bc:	ldr	r2, [r1, #8]
   413c0:	cmp	r0, r2
   413c4:	bge	413e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   413c8:	ldr	r2, [r1, #4]
   413cc:	add	r0, r2, r0
   413d0:	ldrh	r0, [r0]
   413d4:	cmp	r0, #0
   413d8:	ldrne	r2, [r1]
   413dc:	addsne	r8, r2, r0
   413e0:	bne	413ec <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   413e4:	sub	sp, fp, #28
   413e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   413ec:	ldr	r0, [r1, #16]
   413f0:	ldr	sl, [fp, #12]
   413f4:	ldr	r2, [fp, #8]
   413f8:	add	r7, r0, #1
   413fc:	cmp	r0, #0
   41400:	str	r7, [r1, #16]
   41404:	beq	4141c <flatcc_json_printer_int16_enum_vector_field@@Base+0x94>
   41408:	ldr	r0, [r4, #20]
   4140c:	add	r1, r0, #1
   41410:	str	r1, [r4, #20]
   41414:	mov	r1, #44	; 0x2c
   41418:	strb	r1, [r0]
   4141c:	ldr	r0, [r8]
   41420:	mov	r1, r3
   41424:	ldr	r9, [r8, r0]!
   41428:	mov	r0, r4
   4142c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   41430:	ldr	r1, [r4, #32]
   41434:	ldr	r0, [r4, #20]
   41438:	cmp	r9, #0
   4143c:	add	r1, r1, #1
   41440:	str	r1, [r4, #32]
   41444:	add	r1, r0, #1
   41448:	str	r1, [r4, #20]
   4144c:	mov	r1, #91	; 0x5b
   41450:	strb	r1, [r0]
   41454:	beq	4166c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   41458:	ldrb	r1, [r4, #25]
   4145c:	ldr	r0, [r4, #20]
   41460:	cmp	r1, #0
   41464:	beq	41520 <flatcc_json_printer_int16_enum_vector_field@@Base+0x198>
   41468:	add	r1, r0, #1
   4146c:	str	r1, [r4, #20]
   41470:	mov	r1, #10
   41474:	strb	r1, [r0]
   41478:	ldr	r0, [r4, #20]
   4147c:	ldrb	r2, [r4, #25]
   41480:	ldr	r3, [r4, #32]
   41484:	ldr	r1, [r4, #16]
   41488:	mla	r7, r3, r2, r0
   4148c:	mul	r5, r3, r2
   41490:	cmp	r7, r1
   41494:	bls	41504 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   41498:	cmp	r0, r1
   4149c:	bcc	414b8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   414a0:	ldr	r2, [r4, #44]	; 0x2c
   414a4:	mov	r0, r4
   414a8:	mov	r1, #0
   414ac:	blx	r2
   414b0:	ldr	r1, [r4, #16]
   414b4:	ldr	r0, [r4, #20]
   414b8:	sub	r6, r1, r0
   414bc:	cmp	r6, r5
   414c0:	bcs	41504 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   414c4:	mov	r1, #32
   414c8:	mov	r2, r6
   414cc:	bl	14ee4 <memset@plt>
   414d0:	ldr	r0, [r4, #20]
   414d4:	ldr	r2, [r4, #44]	; 0x2c
   414d8:	mov	r1, #0
   414dc:	add	r0, r0, r6
   414e0:	str	r0, [r4, #20]
   414e4:	mov	r0, r4
   414e8:	blx	r2
   414ec:	ldr	r1, [r4, #16]
   414f0:	ldr	r0, [r4, #20]
   414f4:	sub	r5, r5, r6
   414f8:	sub	r6, r1, r0
   414fc:	cmp	r5, r6
   41500:	bhi	414c4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x13c>
   41504:	mov	r1, #32
   41508:	mov	r2, r5
   4150c:	bl	14ee4 <memset@plt>
   41510:	ldr	r0, [r4, #20]
   41514:	add	r0, r0, r5
   41518:	str	r0, [r4, #20]
   4151c:	b	4153c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   41520:	ldr	r1, [r4, #16]
   41524:	cmp	r0, r1
   41528:	bcc	4153c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   4152c:	ldr	r2, [r4, #44]	; 0x2c
   41530:	mov	r0, r4
   41534:	mov	r1, #0
   41538:	blx	r2
   4153c:	ldrsh	r1, [r8, #4]
   41540:	mov	r0, r4
   41544:	blx	sl
   41548:	subs	r9, r9, #1
   4154c:	beq	4166c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   41550:	add	r7, r8, #6
   41554:	mov	r8, #44	; 0x2c
   41558:	b	41588 <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
   4155c:	mov	r1, #32
   41560:	mov	r2, r5
   41564:	bl	14ee4 <memset@plt>
   41568:	ldr	r0, [r4, #20]
   4156c:	add	r0, r0, r5
   41570:	str	r0, [r4, #20]
   41574:	ldrsh	r1, [r7], #2
   41578:	mov	r0, r4
   4157c:	blx	sl
   41580:	cmp	r9, #0
   41584:	beq	4166c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   41588:	ldr	r0, [r4, #20]
   4158c:	sub	r9, r9, #1
   41590:	add	r1, r0, #1
   41594:	str	r1, [r4, #20]
   41598:	strb	r8, [r0]
   4159c:	ldrb	r1, [r4, #25]
   415a0:	ldr	r0, [r4, #20]
   415a4:	cmp	r1, #0
   415a8:	beq	4164c <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   415ac:	add	r1, r0, #1
   415b0:	str	r1, [r4, #20]
   415b4:	mov	r1, #10
   415b8:	strb	r1, [r0]
   415bc:	ldr	r0, [r4, #20]
   415c0:	ldrb	r2, [r4, #25]
   415c4:	ldr	r3, [r4, #32]
   415c8:	ldr	r1, [r4, #16]
   415cc:	mla	r6, r3, r2, r0
   415d0:	mul	r5, r3, r2
   415d4:	cmp	r6, r1
   415d8:	bls	4155c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   415dc:	cmp	r0, r1
   415e0:	bcc	415fc <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   415e4:	ldr	r2, [r4, #44]	; 0x2c
   415e8:	mov	r0, r4
   415ec:	mov	r1, #0
   415f0:	blx	r2
   415f4:	ldr	r1, [r4, #16]
   415f8:	ldr	r0, [r4, #20]
   415fc:	sub	r6, r1, r0
   41600:	cmp	r6, r5
   41604:	bcs	4155c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   41608:	mov	r1, #32
   4160c:	mov	r2, r6
   41610:	bl	14ee4 <memset@plt>
   41614:	ldr	r0, [r4, #20]
   41618:	ldr	r2, [r4, #44]	; 0x2c
   4161c:	mov	r1, #0
   41620:	add	r0, r0, r6
   41624:	str	r0, [r4, #20]
   41628:	mov	r0, r4
   4162c:	blx	r2
   41630:	ldr	r1, [r4, #16]
   41634:	ldr	r0, [r4, #20]
   41638:	sub	r5, r5, r6
   4163c:	sub	r6, r1, r0
   41640:	cmp	r5, r6
   41644:	bhi	41608 <flatcc_json_printer_int16_enum_vector_field@@Base+0x280>
   41648:	b	4155c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   4164c:	ldr	r1, [r4, #16]
   41650:	cmp	r0, r1
   41654:	bcc	41574 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   41658:	ldr	r2, [r4, #44]	; 0x2c
   4165c:	mov	r0, r4
   41660:	mov	r1, #0
   41664:	blx	r2
   41668:	b	41574 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   4166c:	ldrb	r1, [r4, #25]
   41670:	ldr	r0, [r4, #20]
   41674:	cmp	r1, #0
   41678:	beq	41738 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   4167c:	add	r1, r0, #1
   41680:	str	r1, [r4, #20]
   41684:	mov	r1, #10
   41688:	strb	r1, [r0]
   4168c:	ldr	r0, [r4, #32]
   41690:	sub	r2, r0, #1
   41694:	str	r2, [r4, #32]
   41698:	ldrb	r3, [r4, #25]
   4169c:	ldr	r0, [r4, #20]
   416a0:	ldr	r1, [r4, #16]
   416a4:	mla	r7, r2, r3, r0
   416a8:	mul	r5, r2, r3
   416ac:	cmp	r7, r1
   416b0:	bls	41720 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   416b4:	cmp	r0, r1
   416b8:	bcc	416d4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   416bc:	ldr	r2, [r4, #44]	; 0x2c
   416c0:	mov	r0, r4
   416c4:	mov	r1, #0
   416c8:	blx	r2
   416cc:	ldr	r1, [r4, #16]
   416d0:	ldr	r0, [r4, #20]
   416d4:	sub	r6, r1, r0
   416d8:	cmp	r6, r5
   416dc:	bcs	41720 <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   416e0:	mov	r1, #32
   416e4:	mov	r2, r6
   416e8:	bl	14ee4 <memset@plt>
   416ec:	ldr	r0, [r4, #20]
   416f0:	ldr	r2, [r4, #44]	; 0x2c
   416f4:	mov	r1, #0
   416f8:	add	r0, r0, r6
   416fc:	str	r0, [r4, #20]
   41700:	mov	r0, r4
   41704:	blx	r2
   41708:	ldr	r1, [r4, #16]
   4170c:	ldr	r0, [r4, #20]
   41710:	sub	r5, r5, r6
   41714:	sub	r6, r1, r0
   41718:	cmp	r5, r6
   4171c:	bhi	416e0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x358>
   41720:	mov	r1, #32
   41724:	mov	r2, r5
   41728:	bl	14ee4 <memset@plt>
   4172c:	ldr	r0, [r4, #20]
   41730:	add	r0, r0, r5
   41734:	str	r0, [r4, #20]
   41738:	add	r1, r0, #1
   4173c:	str	r1, [r4, #20]
   41740:	mov	r1, #93	; 0x5d
   41744:	strb	r1, [r0]
   41748:	sub	sp, fp, #28
   4174c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041750 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   41750:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41754:	add	fp, sp, #28
   41758:	sub	sp, sp, #4
   4175c:	mov	r4, r0
   41760:	ldrb	r0, [r0, #27]
   41764:	cmp	r0, #0
   41768:	beq	4177c <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   4176c:	mov	r0, r4
   41770:	sub	sp, fp, #28
   41774:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41778:	b	3e924 <flatcc_json_printer_int32_vector_field@@Base>
   4177c:	mov	r0, #4
   41780:	add	r0, r0, r2, lsl #1
   41784:	ldr	r2, [r1, #8]
   41788:	cmp	r0, r2
   4178c:	bge	417ac <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   41790:	ldr	r2, [r1, #4]
   41794:	add	r0, r2, r0
   41798:	ldrh	r0, [r0]
   4179c:	cmp	r0, #0
   417a0:	ldrne	r2, [r1]
   417a4:	addsne	r8, r2, r0
   417a8:	bne	417b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   417ac:	sub	sp, fp, #28
   417b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   417b4:	ldr	r0, [r1, #16]
   417b8:	ldr	sl, [fp, #12]
   417bc:	ldr	r2, [fp, #8]
   417c0:	add	r7, r0, #1
   417c4:	cmp	r0, #0
   417c8:	str	r7, [r1, #16]
   417cc:	beq	417e4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x94>
   417d0:	ldr	r0, [r4, #20]
   417d4:	add	r1, r0, #1
   417d8:	str	r1, [r4, #20]
   417dc:	mov	r1, #44	; 0x2c
   417e0:	strb	r1, [r0]
   417e4:	ldr	r0, [r8]
   417e8:	mov	r1, r3
   417ec:	ldr	r9, [r8, r0]!
   417f0:	mov	r0, r4
   417f4:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   417f8:	ldr	r1, [r4, #32]
   417fc:	ldr	r0, [r4, #20]
   41800:	cmp	r9, #0
   41804:	add	r1, r1, #1
   41808:	str	r1, [r4, #32]
   4180c:	add	r1, r0, #1
   41810:	str	r1, [r4, #20]
   41814:	mov	r1, #91	; 0x5b
   41818:	strb	r1, [r0]
   4181c:	beq	41a34 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   41820:	ldrb	r1, [r4, #25]
   41824:	ldr	r0, [r4, #20]
   41828:	cmp	r1, #0
   4182c:	beq	418e8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x198>
   41830:	add	r1, r0, #1
   41834:	str	r1, [r4, #20]
   41838:	mov	r1, #10
   4183c:	strb	r1, [r0]
   41840:	ldr	r0, [r4, #20]
   41844:	ldrb	r2, [r4, #25]
   41848:	ldr	r3, [r4, #32]
   4184c:	ldr	r1, [r4, #16]
   41850:	mla	r7, r3, r2, r0
   41854:	mul	r5, r3, r2
   41858:	cmp	r7, r1
   4185c:	bls	418cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   41860:	cmp	r0, r1
   41864:	bcc	41880 <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   41868:	ldr	r2, [r4, #44]	; 0x2c
   4186c:	mov	r0, r4
   41870:	mov	r1, #0
   41874:	blx	r2
   41878:	ldr	r1, [r4, #16]
   4187c:	ldr	r0, [r4, #20]
   41880:	sub	r6, r1, r0
   41884:	cmp	r6, r5
   41888:	bcs	418cc <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   4188c:	mov	r1, #32
   41890:	mov	r2, r6
   41894:	bl	14ee4 <memset@plt>
   41898:	ldr	r0, [r4, #20]
   4189c:	ldr	r2, [r4, #44]	; 0x2c
   418a0:	mov	r1, #0
   418a4:	add	r0, r0, r6
   418a8:	str	r0, [r4, #20]
   418ac:	mov	r0, r4
   418b0:	blx	r2
   418b4:	ldr	r1, [r4, #16]
   418b8:	ldr	r0, [r4, #20]
   418bc:	sub	r5, r5, r6
   418c0:	sub	r6, r1, r0
   418c4:	cmp	r5, r6
   418c8:	bhi	4188c <flatcc_json_printer_int32_enum_vector_field@@Base+0x13c>
   418cc:	mov	r1, #32
   418d0:	mov	r2, r5
   418d4:	bl	14ee4 <memset@plt>
   418d8:	ldr	r0, [r4, #20]
   418dc:	add	r0, r0, r5
   418e0:	str	r0, [r4, #20]
   418e4:	b	41904 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   418e8:	ldr	r1, [r4, #16]
   418ec:	cmp	r0, r1
   418f0:	bcc	41904 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   418f4:	ldr	r2, [r4, #44]	; 0x2c
   418f8:	mov	r0, r4
   418fc:	mov	r1, #0
   41900:	blx	r2
   41904:	ldr	r1, [r8, #4]
   41908:	mov	r0, r4
   4190c:	blx	sl
   41910:	subs	r9, r9, #1
   41914:	beq	41a34 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   41918:	add	r7, r8, #8
   4191c:	mov	r8, #44	; 0x2c
   41920:	b	41950 <flatcc_json_printer_int32_enum_vector_field@@Base+0x200>
   41924:	mov	r1, #32
   41928:	mov	r2, r5
   4192c:	bl	14ee4 <memset@plt>
   41930:	ldr	r0, [r4, #20]
   41934:	add	r0, r0, r5
   41938:	str	r0, [r4, #20]
   4193c:	ldr	r1, [r7], #4
   41940:	mov	r0, r4
   41944:	blx	sl
   41948:	cmp	r9, #0
   4194c:	beq	41a34 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   41950:	ldr	r0, [r4, #20]
   41954:	sub	r9, r9, #1
   41958:	add	r1, r0, #1
   4195c:	str	r1, [r4, #20]
   41960:	strb	r8, [r0]
   41964:	ldrb	r1, [r4, #25]
   41968:	ldr	r0, [r4, #20]
   4196c:	cmp	r1, #0
   41970:	beq	41a14 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   41974:	add	r1, r0, #1
   41978:	str	r1, [r4, #20]
   4197c:	mov	r1, #10
   41980:	strb	r1, [r0]
   41984:	ldr	r0, [r4, #20]
   41988:	ldrb	r2, [r4, #25]
   4198c:	ldr	r3, [r4, #32]
   41990:	ldr	r1, [r4, #16]
   41994:	mla	r6, r3, r2, r0
   41998:	mul	r5, r3, r2
   4199c:	cmp	r6, r1
   419a0:	bls	41924 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   419a4:	cmp	r0, r1
   419a8:	bcc	419c4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x274>
   419ac:	ldr	r2, [r4, #44]	; 0x2c
   419b0:	mov	r0, r4
   419b4:	mov	r1, #0
   419b8:	blx	r2
   419bc:	ldr	r1, [r4, #16]
   419c0:	ldr	r0, [r4, #20]
   419c4:	sub	r6, r1, r0
   419c8:	cmp	r6, r5
   419cc:	bcs	41924 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   419d0:	mov	r1, #32
   419d4:	mov	r2, r6
   419d8:	bl	14ee4 <memset@plt>
   419dc:	ldr	r0, [r4, #20]
   419e0:	ldr	r2, [r4, #44]	; 0x2c
   419e4:	mov	r1, #0
   419e8:	add	r0, r0, r6
   419ec:	str	r0, [r4, #20]
   419f0:	mov	r0, r4
   419f4:	blx	r2
   419f8:	ldr	r1, [r4, #16]
   419fc:	ldr	r0, [r4, #20]
   41a00:	sub	r5, r5, r6
   41a04:	sub	r6, r1, r0
   41a08:	cmp	r5, r6
   41a0c:	bhi	419d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x280>
   41a10:	b	41924 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   41a14:	ldr	r1, [r4, #16]
   41a18:	cmp	r0, r1
   41a1c:	bcc	4193c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   41a20:	ldr	r2, [r4, #44]	; 0x2c
   41a24:	mov	r0, r4
   41a28:	mov	r1, #0
   41a2c:	blx	r2
   41a30:	b	4193c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   41a34:	ldrb	r1, [r4, #25]
   41a38:	ldr	r0, [r4, #20]
   41a3c:	cmp	r1, #0
   41a40:	beq	41b00 <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   41a44:	add	r1, r0, #1
   41a48:	str	r1, [r4, #20]
   41a4c:	mov	r1, #10
   41a50:	strb	r1, [r0]
   41a54:	ldr	r0, [r4, #32]
   41a58:	sub	r2, r0, #1
   41a5c:	str	r2, [r4, #32]
   41a60:	ldrb	r3, [r4, #25]
   41a64:	ldr	r0, [r4, #20]
   41a68:	ldr	r1, [r4, #16]
   41a6c:	mla	r7, r2, r3, r0
   41a70:	mul	r5, r2, r3
   41a74:	cmp	r7, r1
   41a78:	bls	41ae8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   41a7c:	cmp	r0, r1
   41a80:	bcc	41a9c <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   41a84:	ldr	r2, [r4, #44]	; 0x2c
   41a88:	mov	r0, r4
   41a8c:	mov	r1, #0
   41a90:	blx	r2
   41a94:	ldr	r1, [r4, #16]
   41a98:	ldr	r0, [r4, #20]
   41a9c:	sub	r6, r1, r0
   41aa0:	cmp	r6, r5
   41aa4:	bcs	41ae8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   41aa8:	mov	r1, #32
   41aac:	mov	r2, r6
   41ab0:	bl	14ee4 <memset@plt>
   41ab4:	ldr	r0, [r4, #20]
   41ab8:	ldr	r2, [r4, #44]	; 0x2c
   41abc:	mov	r1, #0
   41ac0:	add	r0, r0, r6
   41ac4:	str	r0, [r4, #20]
   41ac8:	mov	r0, r4
   41acc:	blx	r2
   41ad0:	ldr	r1, [r4, #16]
   41ad4:	ldr	r0, [r4, #20]
   41ad8:	sub	r5, r5, r6
   41adc:	sub	r6, r1, r0
   41ae0:	cmp	r5, r6
   41ae4:	bhi	41aa8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x358>
   41ae8:	mov	r1, #32
   41aec:	mov	r2, r5
   41af0:	bl	14ee4 <memset@plt>
   41af4:	ldr	r0, [r4, #20]
   41af8:	add	r0, r0, r5
   41afc:	str	r0, [r4, #20]
   41b00:	add	r1, r0, #1
   41b04:	str	r1, [r4, #20]
   41b08:	mov	r1, #93	; 0x5d
   41b0c:	strb	r1, [r0]
   41b10:	sub	sp, fp, #28
   41b14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041b18 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   41b18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41b1c:	add	fp, sp, #28
   41b20:	sub	sp, sp, #4
   41b24:	mov	r4, r0
   41b28:	ldrb	r0, [r0, #27]
   41b2c:	cmp	r0, #0
   41b30:	beq	41b44 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   41b34:	mov	r0, r4
   41b38:	sub	sp, fp, #28
   41b3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41b40:	b	3ed18 <flatcc_json_printer_int64_vector_field@@Base>
   41b44:	mov	r0, #4
   41b48:	add	r0, r0, r2, lsl #1
   41b4c:	ldr	r2, [r1, #8]
   41b50:	cmp	r0, r2
   41b54:	bge	41b74 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   41b58:	ldr	r2, [r1, #4]
   41b5c:	add	r0, r2, r0
   41b60:	ldrh	r0, [r0]
   41b64:	cmp	r0, #0
   41b68:	ldrne	r2, [r1]
   41b6c:	addsne	r8, r2, r0
   41b70:	bne	41b7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   41b74:	sub	sp, fp, #28
   41b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41b7c:	ldr	r0, [r1, #16]
   41b80:	ldr	sl, [fp, #12]
   41b84:	ldr	r2, [fp, #8]
   41b88:	add	r7, r0, #1
   41b8c:	cmp	r0, #0
   41b90:	str	r7, [r1, #16]
   41b94:	beq	41bac <flatcc_json_printer_int64_enum_vector_field@@Base+0x94>
   41b98:	ldr	r0, [r4, #20]
   41b9c:	add	r1, r0, #1
   41ba0:	str	r1, [r4, #20]
   41ba4:	mov	r1, #44	; 0x2c
   41ba8:	strb	r1, [r0]
   41bac:	ldr	r0, [r8]
   41bb0:	mov	r1, r3
   41bb4:	ldr	r9, [r8, r0]!
   41bb8:	mov	r0, r4
   41bbc:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   41bc0:	ldr	r1, [r4, #32]
   41bc4:	ldr	r0, [r4, #20]
   41bc8:	cmp	r9, #0
   41bcc:	add	r1, r1, #1
   41bd0:	str	r1, [r4, #32]
   41bd4:	add	r1, r0, #1
   41bd8:	str	r1, [r4, #20]
   41bdc:	mov	r1, #91	; 0x5b
   41be0:	strb	r1, [r0]
   41be4:	beq	41e00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   41be8:	ldrb	r1, [r4, #25]
   41bec:	ldr	r0, [r4, #20]
   41bf0:	cmp	r1, #0
   41bf4:	beq	41cb0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x198>
   41bf8:	add	r1, r0, #1
   41bfc:	str	r1, [r4, #20]
   41c00:	mov	r1, #10
   41c04:	strb	r1, [r0]
   41c08:	ldr	r0, [r4, #20]
   41c0c:	ldrb	r2, [r4, #25]
   41c10:	ldr	r3, [r4, #32]
   41c14:	ldr	r1, [r4, #16]
   41c18:	mla	r7, r3, r2, r0
   41c1c:	mul	r5, r3, r2
   41c20:	cmp	r7, r1
   41c24:	bls	41c94 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   41c28:	cmp	r0, r1
   41c2c:	bcc	41c48 <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   41c30:	ldr	r2, [r4, #44]	; 0x2c
   41c34:	mov	r0, r4
   41c38:	mov	r1, #0
   41c3c:	blx	r2
   41c40:	ldr	r1, [r4, #16]
   41c44:	ldr	r0, [r4, #20]
   41c48:	sub	r6, r1, r0
   41c4c:	cmp	r6, r5
   41c50:	bcs	41c94 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   41c54:	mov	r1, #32
   41c58:	mov	r2, r6
   41c5c:	bl	14ee4 <memset@plt>
   41c60:	ldr	r0, [r4, #20]
   41c64:	ldr	r2, [r4, #44]	; 0x2c
   41c68:	mov	r1, #0
   41c6c:	add	r0, r0, r6
   41c70:	str	r0, [r4, #20]
   41c74:	mov	r0, r4
   41c78:	blx	r2
   41c7c:	ldr	r1, [r4, #16]
   41c80:	ldr	r0, [r4, #20]
   41c84:	sub	r5, r5, r6
   41c88:	sub	r6, r1, r0
   41c8c:	cmp	r5, r6
   41c90:	bhi	41c54 <flatcc_json_printer_int64_enum_vector_field@@Base+0x13c>
   41c94:	mov	r1, #32
   41c98:	mov	r2, r5
   41c9c:	bl	14ee4 <memset@plt>
   41ca0:	ldr	r0, [r4, #20]
   41ca4:	add	r0, r0, r5
   41ca8:	str	r0, [r4, #20]
   41cac:	b	41ccc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   41cb0:	ldr	r1, [r4, #16]
   41cb4:	cmp	r0, r1
   41cb8:	bcc	41ccc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   41cbc:	ldr	r2, [r4, #44]	; 0x2c
   41cc0:	mov	r0, r4
   41cc4:	mov	r1, #0
   41cc8:	blx	r2
   41ccc:	ldrd	r2, [r8, #4]
   41cd0:	mov	r0, r4
   41cd4:	blx	sl
   41cd8:	subs	r9, r9, #1
   41cdc:	beq	41e00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   41ce0:	add	r7, r8, #12
   41ce4:	mov	r8, #44	; 0x2c
   41ce8:	b	41d1c <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   41cec:	mov	r1, #32
   41cf0:	mov	r2, r5
   41cf4:	bl	14ee4 <memset@plt>
   41cf8:	ldr	r0, [r4, #20]
   41cfc:	add	r0, r0, r5
   41d00:	str	r0, [r4, #20]
   41d04:	ldrd	r2, [r7]
   41d08:	mov	r0, r4
   41d0c:	blx	sl
   41d10:	add	r7, r7, #8
   41d14:	cmp	r9, #0
   41d18:	beq	41e00 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   41d1c:	ldr	r0, [r4, #20]
   41d20:	sub	r9, r9, #1
   41d24:	add	r1, r0, #1
   41d28:	str	r1, [r4, #20]
   41d2c:	strb	r8, [r0]
   41d30:	ldrb	r1, [r4, #25]
   41d34:	ldr	r0, [r4, #20]
   41d38:	cmp	r1, #0
   41d3c:	beq	41de0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c8>
   41d40:	add	r1, r0, #1
   41d44:	str	r1, [r4, #20]
   41d48:	mov	r1, #10
   41d4c:	strb	r1, [r0]
   41d50:	ldr	r0, [r4, #20]
   41d54:	ldrb	r2, [r4, #25]
   41d58:	ldr	r3, [r4, #32]
   41d5c:	ldr	r1, [r4, #16]
   41d60:	mla	r6, r3, r2, r0
   41d64:	mul	r5, r3, r2
   41d68:	cmp	r6, r1
   41d6c:	bls	41cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   41d70:	cmp	r0, r1
   41d74:	bcc	41d90 <flatcc_json_printer_int64_enum_vector_field@@Base+0x278>
   41d78:	ldr	r2, [r4, #44]	; 0x2c
   41d7c:	mov	r0, r4
   41d80:	mov	r1, #0
   41d84:	blx	r2
   41d88:	ldr	r1, [r4, #16]
   41d8c:	ldr	r0, [r4, #20]
   41d90:	sub	r6, r1, r0
   41d94:	cmp	r6, r5
   41d98:	bcs	41cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   41d9c:	mov	r1, #32
   41da0:	mov	r2, r6
   41da4:	bl	14ee4 <memset@plt>
   41da8:	ldr	r0, [r4, #20]
   41dac:	ldr	r2, [r4, #44]	; 0x2c
   41db0:	mov	r1, #0
   41db4:	add	r0, r0, r6
   41db8:	str	r0, [r4, #20]
   41dbc:	mov	r0, r4
   41dc0:	blx	r2
   41dc4:	ldr	r1, [r4, #16]
   41dc8:	ldr	r0, [r4, #20]
   41dcc:	sub	r5, r5, r6
   41dd0:	sub	r6, r1, r0
   41dd4:	cmp	r5, r6
   41dd8:	bhi	41d9c <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   41ddc:	b	41cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   41de0:	ldr	r1, [r4, #16]
   41de4:	cmp	r0, r1
   41de8:	bcc	41d04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   41dec:	ldr	r2, [r4, #44]	; 0x2c
   41df0:	mov	r0, r4
   41df4:	mov	r1, #0
   41df8:	blx	r2
   41dfc:	b	41d04 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   41e00:	ldrb	r1, [r4, #25]
   41e04:	ldr	r0, [r4, #20]
   41e08:	cmp	r1, #0
   41e0c:	beq	41ecc <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   41e10:	add	r1, r0, #1
   41e14:	str	r1, [r4, #20]
   41e18:	mov	r1, #10
   41e1c:	strb	r1, [r0]
   41e20:	ldr	r0, [r4, #32]
   41e24:	sub	r2, r0, #1
   41e28:	str	r2, [r4, #32]
   41e2c:	ldrb	r3, [r4, #25]
   41e30:	ldr	r0, [r4, #20]
   41e34:	ldr	r1, [r4, #16]
   41e38:	mla	r7, r2, r3, r0
   41e3c:	mul	r5, r2, r3
   41e40:	cmp	r7, r1
   41e44:	bls	41eb4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   41e48:	cmp	r0, r1
   41e4c:	bcc	41e68 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   41e50:	ldr	r2, [r4, #44]	; 0x2c
   41e54:	mov	r0, r4
   41e58:	mov	r1, #0
   41e5c:	blx	r2
   41e60:	ldr	r1, [r4, #16]
   41e64:	ldr	r0, [r4, #20]
   41e68:	sub	r6, r1, r0
   41e6c:	cmp	r6, r5
   41e70:	bcs	41eb4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   41e74:	mov	r1, #32
   41e78:	mov	r2, r6
   41e7c:	bl	14ee4 <memset@plt>
   41e80:	ldr	r0, [r4, #20]
   41e84:	ldr	r2, [r4, #44]	; 0x2c
   41e88:	mov	r1, #0
   41e8c:	add	r0, r0, r6
   41e90:	str	r0, [r4, #20]
   41e94:	mov	r0, r4
   41e98:	blx	r2
   41e9c:	ldr	r1, [r4, #16]
   41ea0:	ldr	r0, [r4, #20]
   41ea4:	sub	r5, r5, r6
   41ea8:	sub	r6, r1, r0
   41eac:	cmp	r5, r6
   41eb0:	bhi	41e74 <flatcc_json_printer_int64_enum_vector_field@@Base+0x35c>
   41eb4:	mov	r1, #32
   41eb8:	mov	r2, r5
   41ebc:	bl	14ee4 <memset@plt>
   41ec0:	ldr	r0, [r4, #20]
   41ec4:	add	r0, r0, r5
   41ec8:	str	r0, [r4, #20]
   41ecc:	add	r1, r0, #1
   41ed0:	str	r1, [r4, #20]
   41ed4:	mov	r1, #93	; 0x5d
   41ed8:	strb	r1, [r0]
   41edc:	sub	sp, fp, #28
   41ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041ee4 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   41ee4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41ee8:	add	fp, sp, #28
   41eec:	sub	sp, sp, #4
   41ef0:	mov	r4, r0
   41ef4:	ldrb	r0, [r0, #27]
   41ef8:	cmp	r0, #0
   41efc:	beq	41f10 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   41f00:	mov	r0, r4
   41f04:	sub	sp, fp, #28
   41f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41f0c:	b	3f11c <flatcc_json_printer_bool_vector_field@@Base>
   41f10:	mov	r0, #4
   41f14:	add	r0, r0, r2, lsl #1
   41f18:	ldr	r2, [r1, #8]
   41f1c:	cmp	r0, r2
   41f20:	bge	41f40 <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   41f24:	ldr	r2, [r1, #4]
   41f28:	add	r0, r2, r0
   41f2c:	ldrh	r0, [r0]
   41f30:	cmp	r0, #0
   41f34:	ldrne	r2, [r1]
   41f38:	addsne	r8, r2, r0
   41f3c:	bne	41f48 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   41f40:	sub	sp, fp, #28
   41f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41f48:	ldr	r0, [r1, #16]
   41f4c:	ldr	sl, [fp, #12]
   41f50:	ldr	r2, [fp, #8]
   41f54:	add	r7, r0, #1
   41f58:	cmp	r0, #0
   41f5c:	str	r7, [r1, #16]
   41f60:	beq	41f78 <flatcc_json_printer_bool_enum_vector_field@@Base+0x94>
   41f64:	ldr	r0, [r4, #20]
   41f68:	add	r1, r0, #1
   41f6c:	str	r1, [r4, #20]
   41f70:	mov	r1, #44	; 0x2c
   41f74:	strb	r1, [r0]
   41f78:	ldr	r0, [r8]
   41f7c:	mov	r1, r3
   41f80:	ldr	r9, [r8, r0]!
   41f84:	mov	r0, r4
   41f88:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   41f8c:	ldr	r1, [r4, #32]
   41f90:	ldr	r0, [r4, #20]
   41f94:	cmp	r9, #0
   41f98:	add	r1, r1, #1
   41f9c:	str	r1, [r4, #32]
   41fa0:	add	r1, r0, #1
   41fa4:	str	r1, [r4, #20]
   41fa8:	mov	r1, #91	; 0x5b
   41fac:	strb	r1, [r0]
   41fb0:	beq	421c8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   41fb4:	ldrb	r1, [r4, #25]
   41fb8:	ldr	r0, [r4, #20]
   41fbc:	cmp	r1, #0
   41fc0:	beq	4207c <flatcc_json_printer_bool_enum_vector_field@@Base+0x198>
   41fc4:	add	r1, r0, #1
   41fc8:	str	r1, [r4, #20]
   41fcc:	mov	r1, #10
   41fd0:	strb	r1, [r0]
   41fd4:	ldr	r0, [r4, #20]
   41fd8:	ldrb	r2, [r4, #25]
   41fdc:	ldr	r3, [r4, #32]
   41fe0:	ldr	r1, [r4, #16]
   41fe4:	mla	r7, r3, r2, r0
   41fe8:	mul	r5, r3, r2
   41fec:	cmp	r7, r1
   41ff0:	bls	42060 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   41ff4:	cmp	r0, r1
   41ff8:	bcc	42014 <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   41ffc:	ldr	r2, [r4, #44]	; 0x2c
   42000:	mov	r0, r4
   42004:	mov	r1, #0
   42008:	blx	r2
   4200c:	ldr	r1, [r4, #16]
   42010:	ldr	r0, [r4, #20]
   42014:	sub	r6, r1, r0
   42018:	cmp	r6, r5
   4201c:	bcs	42060 <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   42020:	mov	r1, #32
   42024:	mov	r2, r6
   42028:	bl	14ee4 <memset@plt>
   4202c:	ldr	r0, [r4, #20]
   42030:	ldr	r2, [r4, #44]	; 0x2c
   42034:	mov	r1, #0
   42038:	add	r0, r0, r6
   4203c:	str	r0, [r4, #20]
   42040:	mov	r0, r4
   42044:	blx	r2
   42048:	ldr	r1, [r4, #16]
   4204c:	ldr	r0, [r4, #20]
   42050:	sub	r5, r5, r6
   42054:	sub	r6, r1, r0
   42058:	cmp	r5, r6
   4205c:	bhi	42020 <flatcc_json_printer_bool_enum_vector_field@@Base+0x13c>
   42060:	mov	r1, #32
   42064:	mov	r2, r5
   42068:	bl	14ee4 <memset@plt>
   4206c:	ldr	r0, [r4, #20]
   42070:	add	r0, r0, r5
   42074:	str	r0, [r4, #20]
   42078:	b	42098 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   4207c:	ldr	r1, [r4, #16]
   42080:	cmp	r0, r1
   42084:	bcc	42098 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   42088:	ldr	r2, [r4, #44]	; 0x2c
   4208c:	mov	r0, r4
   42090:	mov	r1, #0
   42094:	blx	r2
   42098:	ldrb	r1, [r8, #4]
   4209c:	mov	r0, r4
   420a0:	blx	sl
   420a4:	subs	r9, r9, #1
   420a8:	beq	421c8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   420ac:	add	r7, r8, #5
   420b0:	mov	r8, #44	; 0x2c
   420b4:	b	420e4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x200>
   420b8:	mov	r1, #32
   420bc:	mov	r2, r5
   420c0:	bl	14ee4 <memset@plt>
   420c4:	ldr	r0, [r4, #20]
   420c8:	add	r0, r0, r5
   420cc:	str	r0, [r4, #20]
   420d0:	ldrb	r1, [r7], #1
   420d4:	mov	r0, r4
   420d8:	blx	sl
   420dc:	cmp	r9, #0
   420e0:	beq	421c8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   420e4:	ldr	r0, [r4, #20]
   420e8:	sub	r9, r9, #1
   420ec:	add	r1, r0, #1
   420f0:	str	r1, [r4, #20]
   420f4:	strb	r8, [r0]
   420f8:	ldrb	r1, [r4, #25]
   420fc:	ldr	r0, [r4, #20]
   42100:	cmp	r1, #0
   42104:	beq	421a8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   42108:	add	r1, r0, #1
   4210c:	str	r1, [r4, #20]
   42110:	mov	r1, #10
   42114:	strb	r1, [r0]
   42118:	ldr	r0, [r4, #20]
   4211c:	ldrb	r2, [r4, #25]
   42120:	ldr	r3, [r4, #32]
   42124:	ldr	r1, [r4, #16]
   42128:	mla	r6, r3, r2, r0
   4212c:	mul	r5, r3, r2
   42130:	cmp	r6, r1
   42134:	bls	420b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   42138:	cmp	r0, r1
   4213c:	bcc	42158 <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   42140:	ldr	r2, [r4, #44]	; 0x2c
   42144:	mov	r0, r4
   42148:	mov	r1, #0
   4214c:	blx	r2
   42150:	ldr	r1, [r4, #16]
   42154:	ldr	r0, [r4, #20]
   42158:	sub	r6, r1, r0
   4215c:	cmp	r6, r5
   42160:	bcs	420b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   42164:	mov	r1, #32
   42168:	mov	r2, r6
   4216c:	bl	14ee4 <memset@plt>
   42170:	ldr	r0, [r4, #20]
   42174:	ldr	r2, [r4, #44]	; 0x2c
   42178:	mov	r1, #0
   4217c:	add	r0, r0, r6
   42180:	str	r0, [r4, #20]
   42184:	mov	r0, r4
   42188:	blx	r2
   4218c:	ldr	r1, [r4, #16]
   42190:	ldr	r0, [r4, #20]
   42194:	sub	r5, r5, r6
   42198:	sub	r6, r1, r0
   4219c:	cmp	r5, r6
   421a0:	bhi	42164 <flatcc_json_printer_bool_enum_vector_field@@Base+0x280>
   421a4:	b	420b8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   421a8:	ldr	r1, [r4, #16]
   421ac:	cmp	r0, r1
   421b0:	bcc	420d0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   421b4:	ldr	r2, [r4, #44]	; 0x2c
   421b8:	mov	r0, r4
   421bc:	mov	r1, #0
   421c0:	blx	r2
   421c4:	b	420d0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   421c8:	ldrb	r1, [r4, #25]
   421cc:	ldr	r0, [r4, #20]
   421d0:	cmp	r1, #0
   421d4:	beq	42294 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   421d8:	add	r1, r0, #1
   421dc:	str	r1, [r4, #20]
   421e0:	mov	r1, #10
   421e4:	strb	r1, [r0]
   421e8:	ldr	r0, [r4, #32]
   421ec:	sub	r2, r0, #1
   421f0:	str	r2, [r4, #32]
   421f4:	ldrb	r3, [r4, #25]
   421f8:	ldr	r0, [r4, #20]
   421fc:	ldr	r1, [r4, #16]
   42200:	mla	r7, r2, r3, r0
   42204:	mul	r5, r2, r3
   42208:	cmp	r7, r1
   4220c:	bls	4227c <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   42210:	cmp	r0, r1
   42214:	bcc	42230 <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   42218:	ldr	r2, [r4, #44]	; 0x2c
   4221c:	mov	r0, r4
   42220:	mov	r1, #0
   42224:	blx	r2
   42228:	ldr	r1, [r4, #16]
   4222c:	ldr	r0, [r4, #20]
   42230:	sub	r6, r1, r0
   42234:	cmp	r6, r5
   42238:	bcs	4227c <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   4223c:	mov	r1, #32
   42240:	mov	r2, r6
   42244:	bl	14ee4 <memset@plt>
   42248:	ldr	r0, [r4, #20]
   4224c:	ldr	r2, [r4, #44]	; 0x2c
   42250:	mov	r1, #0
   42254:	add	r0, r0, r6
   42258:	str	r0, [r4, #20]
   4225c:	mov	r0, r4
   42260:	blx	r2
   42264:	ldr	r1, [r4, #16]
   42268:	ldr	r0, [r4, #20]
   4226c:	sub	r5, r5, r6
   42270:	sub	r6, r1, r0
   42274:	cmp	r5, r6
   42278:	bhi	4223c <flatcc_json_printer_bool_enum_vector_field@@Base+0x358>
   4227c:	mov	r1, #32
   42280:	mov	r2, r5
   42284:	bl	14ee4 <memset@plt>
   42288:	ldr	r0, [r4, #20]
   4228c:	add	r0, r0, r5
   42290:	str	r0, [r4, #20]
   42294:	add	r1, r0, #1
   42298:	str	r1, [r4, #20]
   4229c:	mov	r1, #93	; 0x5d
   422a0:	strb	r1, [r0]
   422a4:	sub	sp, fp, #28
   422a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000422ac <flatcc_json_printer_struct_vector_field@@Base>:
   422ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   422b0:	add	fp, sp, #28
   422b4:	sub	sp, sp, #4
   422b8:	mov	r4, r0
   422bc:	mov	r0, #4
   422c0:	add	r0, r0, r2, lsl #1
   422c4:	ldr	r2, [r1, #8]
   422c8:	cmp	r0, r2
   422cc:	bge	422ec <flatcc_json_printer_struct_vector_field@@Base+0x40>
   422d0:	ldr	r2, [r1, #4]
   422d4:	add	r0, r2, r0
   422d8:	ldrh	r0, [r0]
   422dc:	cmp	r0, #0
   422e0:	ldrne	r2, [r1]
   422e4:	addsne	r6, r2, r0
   422e8:	bne	422f4 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   422ec:	sub	sp, fp, #28
   422f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   422f4:	ldr	r0, [r1, #16]
   422f8:	ldr	r2, [fp, #8]
   422fc:	add	r7, r0, #1
   42300:	cmp	r0, #0
   42304:	str	r7, [r1, #16]
   42308:	beq	42320 <flatcc_json_printer_struct_vector_field@@Base+0x74>
   4230c:	ldr	r0, [r4, #20]
   42310:	add	r1, r0, #1
   42314:	str	r1, [r4, #20]
   42318:	mov	r1, #44	; 0x2c
   4231c:	strb	r1, [r0]
   42320:	ldr	r0, [r6]
   42324:	mov	r1, r3
   42328:	ldr	r5, [r6, r0]!
   4232c:	mov	r0, r4
   42330:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   42334:	ldr	r1, [r4, #32]
   42338:	ldr	r0, [r4, #20]
   4233c:	cmp	r5, #0
   42340:	add	r1, r1, #1
   42344:	str	r1, [r4, #32]
   42348:	add	r1, r0, #1
   4234c:	str	r1, [r4, #20]
   42350:	mov	r1, #91	; 0x5b
   42354:	strb	r1, [r0]
   42358:	beq	42770 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   4235c:	ldrb	r1, [r4, #25]
   42360:	ldr	r0, [r4, #20]
   42364:	add	r9, r6, #4
   42368:	cmp	r1, #0
   4236c:	beq	42428 <flatcc_json_printer_struct_vector_field@@Base+0x17c>
   42370:	add	r1, r0, #1
   42374:	str	r1, [r4, #20]
   42378:	mov	r1, #10
   4237c:	strb	r1, [r0]
   42380:	ldr	r0, [r4, #20]
   42384:	ldrb	r2, [r4, #25]
   42388:	ldr	r3, [r4, #32]
   4238c:	ldr	r1, [r4, #16]
   42390:	mla	r7, r3, r2, r0
   42394:	mul	r6, r3, r2
   42398:	cmp	r7, r1
   4239c:	bls	4240c <flatcc_json_printer_struct_vector_field@@Base+0x160>
   423a0:	cmp	r0, r1
   423a4:	bcc	423c0 <flatcc_json_printer_struct_vector_field@@Base+0x114>
   423a8:	ldr	r2, [r4, #44]	; 0x2c
   423ac:	mov	r0, r4
   423b0:	mov	r1, #0
   423b4:	blx	r2
   423b8:	ldr	r1, [r4, #16]
   423bc:	ldr	r0, [r4, #20]
   423c0:	sub	r7, r1, r0
   423c4:	cmp	r7, r6
   423c8:	bcs	4240c <flatcc_json_printer_struct_vector_field@@Base+0x160>
   423cc:	mov	r1, #32
   423d0:	mov	r2, r7
   423d4:	bl	14ee4 <memset@plt>
   423d8:	ldr	r0, [r4, #20]
   423dc:	ldr	r2, [r4, #44]	; 0x2c
   423e0:	mov	r1, #0
   423e4:	add	r0, r0, r7
   423e8:	str	r0, [r4, #20]
   423ec:	mov	r0, r4
   423f0:	blx	r2
   423f4:	ldr	r1, [r4, #16]
   423f8:	ldr	r0, [r4, #20]
   423fc:	sub	r6, r6, r7
   42400:	sub	r7, r1, r0
   42404:	cmp	r6, r7
   42408:	bhi	423cc <flatcc_json_printer_struct_vector_field@@Base+0x120>
   4240c:	mov	r1, #32
   42410:	mov	r2, r6
   42414:	bl	14ee4 <memset@plt>
   42418:	ldr	r0, [r4, #20]
   4241c:	add	r0, r0, r6
   42420:	str	r0, [r4, #20]
   42424:	b	42448 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   42428:	ldr	r1, [r4, #16]
   4242c:	cmp	r0, r1
   42430:	bcc	42448 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   42434:	ldr	r2, [r4, #44]	; 0x2c
   42438:	mov	r0, r4
   4243c:	mov	r1, #0
   42440:	blx	r2
   42444:	ldr	r0, [r4, #20]
   42448:	add	r1, r0, #1
   4244c:	ldr	r2, [fp, #16]
   42450:	str	r1, [r4, #20]
   42454:	ldr	r1, [r4, #32]
   42458:	add	r1, r1, #1
   4245c:	str	r1, [r4, #32]
   42460:	mov	r1, #123	; 0x7b
   42464:	strb	r1, [r0]
   42468:	mov	r0, r4
   4246c:	mov	r1, r9
   42470:	blx	r2
   42474:	ldrb	r1, [r4, #25]
   42478:	ldr	r0, [r4, #20]
   4247c:	cmp	r1, #0
   42480:	beq	42540 <flatcc_json_printer_struct_vector_field@@Base+0x294>
   42484:	add	r1, r0, #1
   42488:	str	r1, [r4, #20]
   4248c:	mov	r1, #10
   42490:	strb	r1, [r0]
   42494:	ldr	r0, [r4, #32]
   42498:	sub	r2, r0, #1
   4249c:	str	r2, [r4, #32]
   424a0:	ldrb	r3, [r4, #25]
   424a4:	ldr	r0, [r4, #20]
   424a8:	ldr	r1, [r4, #16]
   424ac:	mla	r7, r2, r3, r0
   424b0:	mul	r6, r2, r3
   424b4:	cmp	r7, r1
   424b8:	bls	42528 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   424bc:	cmp	r0, r1
   424c0:	bcc	424dc <flatcc_json_printer_struct_vector_field@@Base+0x230>
   424c4:	ldr	r2, [r4, #44]	; 0x2c
   424c8:	mov	r0, r4
   424cc:	mov	r1, #0
   424d0:	blx	r2
   424d4:	ldr	r1, [r4, #16]
   424d8:	ldr	r0, [r4, #20]
   424dc:	sub	r7, r1, r0
   424e0:	cmp	r7, r6
   424e4:	bcs	42528 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   424e8:	mov	r1, #32
   424ec:	mov	r2, r7
   424f0:	bl	14ee4 <memset@plt>
   424f4:	ldr	r0, [r4, #20]
   424f8:	ldr	r2, [r4, #44]	; 0x2c
   424fc:	mov	r1, #0
   42500:	add	r0, r0, r7
   42504:	str	r0, [r4, #20]
   42508:	mov	r0, r4
   4250c:	blx	r2
   42510:	ldr	r1, [r4, #16]
   42514:	ldr	r0, [r4, #20]
   42518:	sub	r6, r6, r7
   4251c:	sub	r7, r1, r0
   42520:	cmp	r6, r7
   42524:	bhi	424e8 <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   42528:	mov	r1, #32
   4252c:	mov	r2, r6
   42530:	bl	14ee4 <memset@plt>
   42534:	ldr	r0, [r4, #20]
   42538:	add	r0, r0, r6
   4253c:	str	r0, [r4, #20]
   42540:	add	r1, r0, #1
   42544:	mov	sl, #125	; 0x7d
   42548:	subs	r5, r5, #1
   4254c:	str	r1, [r4, #20]
   42550:	strb	sl, [r0]
   42554:	beq	42770 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   42558:	mov	r8, #10
   4255c:	b	4258c <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
   42560:	mov	r1, #32
   42564:	mov	r2, r6
   42568:	bl	14ee4 <memset@plt>
   4256c:	ldr	r0, [r4, #20]
   42570:	add	r0, r0, r6
   42574:	str	r0, [r4, #20]
   42578:	add	r1, r0, #1
   4257c:	cmp	r5, #0
   42580:	str	r1, [r4, #20]
   42584:	strb	sl, [r0]
   42588:	beq	42770 <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   4258c:	ldr	r0, [r4, #20]
   42590:	add	r1, r0, #1
   42594:	str	r1, [r4, #20]
   42598:	mov	r1, #44	; 0x2c
   4259c:	strb	r1, [r0]
   425a0:	ldr	r0, [fp, #12]
   425a4:	ldrb	r1, [r4, #25]
   425a8:	add	r9, r9, r0
   425ac:	ldr	r0, [r4, #20]
   425b0:	cmp	r1, #0
   425b4:	beq	4266c <flatcc_json_printer_struct_vector_field@@Base+0x3c0>
   425b8:	add	r1, r0, #1
   425bc:	str	r1, [r4, #20]
   425c0:	strb	r8, [r0]
   425c4:	ldr	r0, [r4, #20]
   425c8:	ldrb	r2, [r4, #25]
   425cc:	ldr	r3, [r4, #32]
   425d0:	ldr	r1, [r4, #16]
   425d4:	mla	r7, r3, r2, r0
   425d8:	mul	r6, r3, r2
   425dc:	cmp	r7, r1
   425e0:	bls	42650 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   425e4:	cmp	r0, r1
   425e8:	bcc	42604 <flatcc_json_printer_struct_vector_field@@Base+0x358>
   425ec:	ldr	r2, [r4, #44]	; 0x2c
   425f0:	mov	r0, r4
   425f4:	mov	r1, #0
   425f8:	blx	r2
   425fc:	ldr	r1, [r4, #16]
   42600:	ldr	r0, [r4, #20]
   42604:	sub	r7, r1, r0
   42608:	cmp	r7, r6
   4260c:	bcs	42650 <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   42610:	mov	r1, #32
   42614:	mov	r2, r7
   42618:	bl	14ee4 <memset@plt>
   4261c:	ldr	r0, [r4, #20]
   42620:	ldr	r2, [r4, #44]	; 0x2c
   42624:	mov	r1, #0
   42628:	add	r0, r0, r7
   4262c:	str	r0, [r4, #20]
   42630:	mov	r0, r4
   42634:	blx	r2
   42638:	ldr	r1, [r4, #16]
   4263c:	ldr	r0, [r4, #20]
   42640:	sub	r6, r6, r7
   42644:	sub	r7, r1, r0
   42648:	cmp	r6, r7
   4264c:	bhi	42610 <flatcc_json_printer_struct_vector_field@@Base+0x364>
   42650:	mov	r1, #32
   42654:	mov	r2, r6
   42658:	bl	14ee4 <memset@plt>
   4265c:	ldr	r0, [r4, #20]
   42660:	add	r0, r0, r6
   42664:	str	r0, [r4, #20]
   42668:	b	4268c <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   4266c:	ldr	r1, [r4, #16]
   42670:	cmp	r0, r1
   42674:	bcc	4268c <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   42678:	ldr	r2, [r4, #44]	; 0x2c
   4267c:	mov	r0, r4
   42680:	mov	r1, #0
   42684:	blx	r2
   42688:	ldr	r0, [r4, #20]
   4268c:	add	r1, r0, #1
   42690:	ldr	r2, [fp, #16]
   42694:	sub	r5, r5, #1
   42698:	str	r1, [r4, #20]
   4269c:	ldr	r1, [r4, #32]
   426a0:	add	r1, r1, #1
   426a4:	str	r1, [r4, #32]
   426a8:	mov	r1, #123	; 0x7b
   426ac:	strb	r1, [r0]
   426b0:	mov	r0, r4
   426b4:	mov	r1, r9
   426b8:	blx	r2
   426bc:	ldrb	r1, [r4, #25]
   426c0:	ldr	r0, [r4, #20]
   426c4:	cmp	r1, #0
   426c8:	beq	42578 <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   426cc:	add	r1, r0, #1
   426d0:	str	r1, [r4, #20]
   426d4:	strb	r8, [r0]
   426d8:	ldr	r0, [r4, #32]
   426dc:	sub	r2, r0, #1
   426e0:	str	r2, [r4, #32]
   426e4:	ldrb	r3, [r4, #25]
   426e8:	ldr	r0, [r4, #20]
   426ec:	ldr	r1, [r4, #16]
   426f0:	mla	r7, r2, r3, r0
   426f4:	mul	r6, r2, r3
   426f8:	cmp	r7, r1
   426fc:	bls	42560 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   42700:	cmp	r0, r1
   42704:	bcc	42720 <flatcc_json_printer_struct_vector_field@@Base+0x474>
   42708:	ldr	r2, [r4, #44]	; 0x2c
   4270c:	mov	r0, r4
   42710:	mov	r1, #0
   42714:	blx	r2
   42718:	ldr	r1, [r4, #16]
   4271c:	ldr	r0, [r4, #20]
   42720:	sub	r7, r1, r0
   42724:	cmp	r7, r6
   42728:	bcs	42560 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   4272c:	mov	r1, #32
   42730:	mov	r2, r7
   42734:	bl	14ee4 <memset@plt>
   42738:	ldr	r0, [r4, #20]
   4273c:	ldr	r2, [r4, #44]	; 0x2c
   42740:	mov	r1, #0
   42744:	add	r0, r0, r7
   42748:	str	r0, [r4, #20]
   4274c:	mov	r0, r4
   42750:	blx	r2
   42754:	ldr	r1, [r4, #16]
   42758:	ldr	r0, [r4, #20]
   4275c:	sub	r6, r6, r7
   42760:	sub	r7, r1, r0
   42764:	cmp	r6, r7
   42768:	bhi	4272c <flatcc_json_printer_struct_vector_field@@Base+0x480>
   4276c:	b	42560 <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   42770:	ldrb	r1, [r4, #25]
   42774:	ldr	r0, [r4, #20]
   42778:	cmp	r1, #0
   4277c:	beq	4283c <flatcc_json_printer_struct_vector_field@@Base+0x590>
   42780:	add	r1, r0, #1
   42784:	str	r1, [r4, #20]
   42788:	mov	r1, #10
   4278c:	strb	r1, [r0]
   42790:	ldr	r0, [r4, #32]
   42794:	sub	r2, r0, #1
   42798:	str	r2, [r4, #32]
   4279c:	ldrb	r3, [r4, #25]
   427a0:	ldr	r0, [r4, #20]
   427a4:	ldr	r1, [r4, #16]
   427a8:	mla	r7, r2, r3, r0
   427ac:	mul	r5, r2, r3
   427b0:	cmp	r7, r1
   427b4:	bls	42824 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   427b8:	cmp	r0, r1
   427bc:	bcc	427d8 <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   427c0:	ldr	r2, [r4, #44]	; 0x2c
   427c4:	mov	r0, r4
   427c8:	mov	r1, #0
   427cc:	blx	r2
   427d0:	ldr	r1, [r4, #16]
   427d4:	ldr	r0, [r4, #20]
   427d8:	sub	r6, r1, r0
   427dc:	cmp	r6, r5
   427e0:	bcs	42824 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   427e4:	mov	r1, #32
   427e8:	mov	r2, r6
   427ec:	bl	14ee4 <memset@plt>
   427f0:	ldr	r0, [r4, #20]
   427f4:	ldr	r2, [r4, #44]	; 0x2c
   427f8:	mov	r1, #0
   427fc:	add	r0, r0, r6
   42800:	str	r0, [r4, #20]
   42804:	mov	r0, r4
   42808:	blx	r2
   4280c:	ldr	r1, [r4, #16]
   42810:	ldr	r0, [r4, #20]
   42814:	sub	r5, r5, r6
   42818:	sub	r6, r1, r0
   4281c:	cmp	r5, r6
   42820:	bhi	427e4 <flatcc_json_printer_struct_vector_field@@Base+0x538>
   42824:	mov	r1, #32
   42828:	mov	r2, r5
   4282c:	bl	14ee4 <memset@plt>
   42830:	ldr	r0, [r4, #20]
   42834:	add	r0, r0, r5
   42838:	str	r0, [r4, #20]
   4283c:	add	r1, r0, #1
   42840:	str	r1, [r4, #20]
   42844:	mov	r1, #93	; 0x5d
   42848:	strb	r1, [r0]
   4284c:	sub	sp, fp, #28
   42850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042854 <flatcc_json_printer_string_vector_field@@Base>:
   42854:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42858:	add	fp, sp, #28
   4285c:	sub	sp, sp, #4
   42860:	mov	r4, r0
   42864:	mov	r0, #4
   42868:	add	r0, r0, r2, lsl #1
   4286c:	ldr	r2, [r1, #8]
   42870:	cmp	r0, r2
   42874:	bge	42894 <flatcc_json_printer_string_vector_field@@Base+0x40>
   42878:	ldr	r2, [r1, #4]
   4287c:	add	r0, r2, r0
   42880:	ldrh	r0, [r0]
   42884:	cmp	r0, #0
   42888:	ldrne	r2, [r1]
   4288c:	addsne	r5, r2, r0
   42890:	bne	4289c <flatcc_json_printer_string_vector_field@@Base+0x48>
   42894:	sub	sp, fp, #28
   42898:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4289c:	ldr	r0, [r1, #16]
   428a0:	ldr	r2, [fp, #8]
   428a4:	add	r7, r0, #1
   428a8:	cmp	r0, #0
   428ac:	str	r7, [r1, #16]
   428b0:	beq	428c8 <flatcc_json_printer_string_vector_field@@Base+0x74>
   428b4:	ldr	r0, [r4, #20]
   428b8:	add	r1, r0, #1
   428bc:	str	r1, [r4, #20]
   428c0:	mov	r1, #44	; 0x2c
   428c4:	strb	r1, [r0]
   428c8:	ldr	r0, [r5]
   428cc:	mov	r1, r3
   428d0:	ldr	r8, [r5, r0]!
   428d4:	mov	r0, r4
   428d8:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   428dc:	ldr	r1, [r4, #32]
   428e0:	ldr	r0, [r4, #20]
   428e4:	cmp	r8, #0
   428e8:	add	r1, r1, #1
   428ec:	str	r1, [r4, #32]
   428f0:	add	r1, r0, #1
   428f4:	str	r1, [r4, #20]
   428f8:	mov	r1, #91	; 0x5b
   428fc:	strb	r1, [r0]
   42900:	beq	42b34 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   42904:	ldrb	r1, [r4, #25]
   42908:	ldr	r0, [r4, #20]
   4290c:	add	r9, r5, #4
   42910:	cmp	r1, #0
   42914:	beq	429d0 <flatcc_json_printer_string_vector_field@@Base+0x17c>
   42918:	add	r1, r0, #1
   4291c:	str	r1, [r4, #20]
   42920:	mov	r1, #10
   42924:	strb	r1, [r0]
   42928:	ldr	r0, [r4, #20]
   4292c:	ldrb	r2, [r4, #25]
   42930:	ldr	r3, [r4, #32]
   42934:	ldr	r1, [r4, #16]
   42938:	mla	r7, r3, r2, r0
   4293c:	mul	r5, r3, r2
   42940:	cmp	r7, r1
   42944:	bls	429b4 <flatcc_json_printer_string_vector_field@@Base+0x160>
   42948:	cmp	r0, r1
   4294c:	bcc	42968 <flatcc_json_printer_string_vector_field@@Base+0x114>
   42950:	ldr	r2, [r4, #44]	; 0x2c
   42954:	mov	r0, r4
   42958:	mov	r1, #0
   4295c:	blx	r2
   42960:	ldr	r1, [r4, #16]
   42964:	ldr	r0, [r4, #20]
   42968:	sub	r6, r1, r0
   4296c:	cmp	r6, r5
   42970:	bcs	429b4 <flatcc_json_printer_string_vector_field@@Base+0x160>
   42974:	mov	r1, #32
   42978:	mov	r2, r6
   4297c:	bl	14ee4 <memset@plt>
   42980:	ldr	r0, [r4, #20]
   42984:	ldr	r2, [r4, #44]	; 0x2c
   42988:	mov	r1, #0
   4298c:	add	r0, r0, r6
   42990:	str	r0, [r4, #20]
   42994:	mov	r0, r4
   42998:	blx	r2
   4299c:	ldr	r1, [r4, #16]
   429a0:	ldr	r0, [r4, #20]
   429a4:	sub	r5, r5, r6
   429a8:	sub	r6, r1, r0
   429ac:	cmp	r5, r6
   429b0:	bhi	42974 <flatcc_json_printer_string_vector_field@@Base+0x120>
   429b4:	mov	r1, #32
   429b8:	mov	r2, r5
   429bc:	bl	14ee4 <memset@plt>
   429c0:	ldr	r0, [r4, #20]
   429c4:	add	r0, r0, r5
   429c8:	str	r0, [r4, #20]
   429cc:	b	429ec <flatcc_json_printer_string_vector_field@@Base+0x198>
   429d0:	ldr	r1, [r4, #16]
   429d4:	cmp	r0, r1
   429d8:	bcc	429ec <flatcc_json_printer_string_vector_field@@Base+0x198>
   429dc:	ldr	r2, [r4, #44]	; 0x2c
   429e0:	mov	r0, r4
   429e4:	mov	r1, #0
   429e8:	blx	r2
   429ec:	ldr	r0, [r9]
   429f0:	mov	r1, r9
   429f4:	ldr	r2, [r1, r0]!
   429f8:	mov	r0, r4
   429fc:	add	r1, r1, #4
   42a00:	bl	39060 <flatcc_json_printer_string@@Base+0x4>
   42a04:	subs	r7, r8, #1
   42a08:	beq	42b34 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   42a0c:	mov	r8, #44	; 0x2c
   42a10:	mov	sl, #10
   42a14:	b	42a50 <flatcc_json_printer_string_vector_field@@Base+0x1fc>
   42a18:	mov	r1, #32
   42a1c:	mov	r2, r5
   42a20:	bl	14ee4 <memset@plt>
   42a24:	ldr	r0, [r4, #20]
   42a28:	add	r0, r0, r5
   42a2c:	str	r0, [r4, #20]
   42a30:	ldr	r0, [r9]
   42a34:	mov	r1, r9
   42a38:	ldr	r2, [r1, r0]!
   42a3c:	mov	r0, r4
   42a40:	add	r1, r1, #4
   42a44:	bl	39060 <flatcc_json_printer_string@@Base+0x4>
   42a48:	cmp	r7, #0
   42a4c:	beq	42b34 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   42a50:	ldr	r0, [r4, #20]
   42a54:	add	r9, r9, #4
   42a58:	sub	r7, r7, #1
   42a5c:	add	r1, r0, #1
   42a60:	str	r1, [r4, #20]
   42a64:	strb	r8, [r0]
   42a68:	ldrb	r1, [r4, #25]
   42a6c:	ldr	r0, [r4, #20]
   42a70:	cmp	r1, #0
   42a74:	beq	42b14 <flatcc_json_printer_string_vector_field@@Base+0x2c0>
   42a78:	add	r1, r0, #1
   42a7c:	str	r1, [r4, #20]
   42a80:	strb	sl, [r0]
   42a84:	ldr	r0, [r4, #20]
   42a88:	ldrb	r2, [r4, #25]
   42a8c:	ldr	r3, [r4, #32]
   42a90:	ldr	r1, [r4, #16]
   42a94:	mla	r6, r3, r2, r0
   42a98:	mul	r5, r3, r2
   42a9c:	cmp	r6, r1
   42aa0:	bls	42a18 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   42aa4:	cmp	r0, r1
   42aa8:	bcc	42ac4 <flatcc_json_printer_string_vector_field@@Base+0x270>
   42aac:	ldr	r2, [r4, #44]	; 0x2c
   42ab0:	mov	r0, r4
   42ab4:	mov	r1, #0
   42ab8:	blx	r2
   42abc:	ldr	r1, [r4, #16]
   42ac0:	ldr	r0, [r4, #20]
   42ac4:	sub	r6, r1, r0
   42ac8:	cmp	r6, r5
   42acc:	bcs	42a18 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   42ad0:	mov	r1, #32
   42ad4:	mov	r2, r6
   42ad8:	bl	14ee4 <memset@plt>
   42adc:	ldr	r0, [r4, #20]
   42ae0:	ldr	r2, [r4, #44]	; 0x2c
   42ae4:	mov	r1, #0
   42ae8:	add	r0, r0, r6
   42aec:	str	r0, [r4, #20]
   42af0:	mov	r0, r4
   42af4:	blx	r2
   42af8:	ldr	r1, [r4, #16]
   42afc:	ldr	r0, [r4, #20]
   42b00:	sub	r5, r5, r6
   42b04:	sub	r6, r1, r0
   42b08:	cmp	r5, r6
   42b0c:	bhi	42ad0 <flatcc_json_printer_string_vector_field@@Base+0x27c>
   42b10:	b	42a18 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   42b14:	ldr	r1, [r4, #16]
   42b18:	cmp	r0, r1
   42b1c:	bcc	42a30 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   42b20:	ldr	r2, [r4, #44]	; 0x2c
   42b24:	mov	r0, r4
   42b28:	mov	r1, #0
   42b2c:	blx	r2
   42b30:	b	42a30 <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   42b34:	ldrb	r1, [r4, #25]
   42b38:	ldr	r0, [r4, #20]
   42b3c:	cmp	r1, #0
   42b40:	beq	42c00 <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   42b44:	add	r1, r0, #1
   42b48:	str	r1, [r4, #20]
   42b4c:	mov	r1, #10
   42b50:	strb	r1, [r0]
   42b54:	ldr	r0, [r4, #32]
   42b58:	sub	r2, r0, #1
   42b5c:	str	r2, [r4, #32]
   42b60:	ldrb	r3, [r4, #25]
   42b64:	ldr	r0, [r4, #20]
   42b68:	ldr	r1, [r4, #16]
   42b6c:	mla	r7, r2, r3, r0
   42b70:	mul	r5, r2, r3
   42b74:	cmp	r7, r1
   42b78:	bls	42be8 <flatcc_json_printer_string_vector_field@@Base+0x394>
   42b7c:	cmp	r0, r1
   42b80:	bcc	42b9c <flatcc_json_printer_string_vector_field@@Base+0x348>
   42b84:	ldr	r2, [r4, #44]	; 0x2c
   42b88:	mov	r0, r4
   42b8c:	mov	r1, #0
   42b90:	blx	r2
   42b94:	ldr	r1, [r4, #16]
   42b98:	ldr	r0, [r4, #20]
   42b9c:	sub	r6, r1, r0
   42ba0:	cmp	r6, r5
   42ba4:	bcs	42be8 <flatcc_json_printer_string_vector_field@@Base+0x394>
   42ba8:	mov	r1, #32
   42bac:	mov	r2, r6
   42bb0:	bl	14ee4 <memset@plt>
   42bb4:	ldr	r0, [r4, #20]
   42bb8:	ldr	r2, [r4, #44]	; 0x2c
   42bbc:	mov	r1, #0
   42bc0:	add	r0, r0, r6
   42bc4:	str	r0, [r4, #20]
   42bc8:	mov	r0, r4
   42bcc:	blx	r2
   42bd0:	ldr	r1, [r4, #16]
   42bd4:	ldr	r0, [r4, #20]
   42bd8:	sub	r5, r5, r6
   42bdc:	sub	r6, r1, r0
   42be0:	cmp	r5, r6
   42be4:	bhi	42ba8 <flatcc_json_printer_string_vector_field@@Base+0x354>
   42be8:	mov	r1, #32
   42bec:	mov	r2, r5
   42bf0:	bl	14ee4 <memset@plt>
   42bf4:	ldr	r0, [r4, #20]
   42bf8:	add	r0, r0, r5
   42bfc:	str	r0, [r4, #20]
   42c00:	add	r1, r0, #1
   42c04:	str	r1, [r4, #20]
   42c08:	mov	r1, #93	; 0x5d
   42c0c:	strb	r1, [r0]
   42c10:	sub	sp, fp, #28
   42c14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042c18 <flatcc_json_printer_table_vector_field@@Base>:
   42c18:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42c1c:	add	fp, sp, #28
   42c20:	sub	sp, sp, #20
   42c24:	mov	sl, r1
   42c28:	ldr	r1, [r1, #8]
   42c2c:	mov	r4, r0
   42c30:	mov	r0, #4
   42c34:	add	r0, r0, r2, lsl #1
   42c38:	cmp	r0, r1
   42c3c:	bge	42c5c <flatcc_json_printer_table_vector_field@@Base+0x44>
   42c40:	ldr	r1, [sl, #4]
   42c44:	add	r0, r1, r0
   42c48:	ldrh	r0, [r0]
   42c4c:	cmp	r0, #0
   42c50:	ldrne	r1, [sl]
   42c54:	addsne	r5, r1, r0
   42c58:	bne	42c64 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   42c5c:	sub	sp, fp, #28
   42c60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42c64:	ldr	r0, [sl, #16]
   42c68:	ldr	r2, [fp, #8]
   42c6c:	add	r1, r0, #1
   42c70:	cmp	r0, #0
   42c74:	str	r1, [sl, #16]
   42c78:	beq	42c90 <flatcc_json_printer_table_vector_field@@Base+0x78>
   42c7c:	ldr	r0, [r4, #20]
   42c80:	add	r1, r0, #1
   42c84:	str	r1, [r4, #20]
   42c88:	mov	r1, #44	; 0x2c
   42c8c:	strb	r1, [r0]
   42c90:	ldr	r0, [r5]
   42c94:	mov	r1, r3
   42c98:	ldr	r8, [r5, r0]!
   42c9c:	mov	r0, r4
   42ca0:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   42ca4:	ldr	r1, [r4, #32]
   42ca8:	ldr	r0, [r4, #20]
   42cac:	cmp	r8, #0
   42cb0:	add	r1, r1, #1
   42cb4:	str	r1, [r4, #32]
   42cb8:	add	r1, r0, #1
   42cbc:	str	r1, [r4, #20]
   42cc0:	mov	r1, #91	; 0x5b
   42cc4:	strb	r1, [r0]
   42cc8:	beq	42fd0 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   42ccc:	ldr	r0, [sl, #12]
   42cd0:	ldr	r6, [fp, #12]
   42cd4:	add	r5, r5, #4
   42cd8:	subs	r0, r0, #1
   42cdc:	beq	42e24 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   42ce0:	ldr	r3, [r4, #32]
   42ce4:	ldr	r2, [r4, #20]
   42ce8:	ldr	r1, [r5]
   42cec:	add	r3, r3, #1
   42cf0:	add	r1, r5, r1
   42cf4:	str	r3, [r4, #32]
   42cf8:	add	r3, r2, #1
   42cfc:	str	r3, [r4, #20]
   42d00:	mov	r3, #123	; 0x7b
   42d04:	strb	r3, [r2]
   42d08:	str	r0, [sp, #12]
   42d0c:	mov	r0, #0
   42d10:	str	r0, [sp, #16]
   42d14:	str	r1, [sp]
   42d18:	ldr	r0, [r1]
   42d1c:	sub	r2, r1, r0
   42d20:	str	r2, [sp, #4]
   42d24:	ldrh	r0, [r1, -r0]
   42d28:	mov	r1, sp
   42d2c:	str	r0, [sp, #8]
   42d30:	mov	r0, r4
   42d34:	blx	r6
   42d38:	ldrb	r1, [r4, #25]
   42d3c:	ldr	r0, [r4, #20]
   42d40:	cmp	r1, #0
   42d44:	beq	42e08 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
   42d48:	add	r1, r0, #1
   42d4c:	str	r1, [r4, #20]
   42d50:	mov	r1, #10
   42d54:	strb	r1, [r0]
   42d58:	ldr	r0, [r4, #32]
   42d5c:	sub	r2, r0, #1
   42d60:	str	r2, [r4, #32]
   42d64:	ldrb	r3, [r4, #25]
   42d68:	ldr	r0, [r4, #20]
   42d6c:	ldr	r1, [r4, #16]
   42d70:	mla	r7, r2, r3, r0
   42d74:	mul	r6, r2, r3
   42d78:	cmp	r7, r1
   42d7c:	bls	42dec <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   42d80:	cmp	r0, r1
   42d84:	bcc	42da0 <flatcc_json_printer_table_vector_field@@Base+0x188>
   42d88:	ldr	r2, [r4, #44]	; 0x2c
   42d8c:	mov	r0, r4
   42d90:	mov	r1, #0
   42d94:	blx	r2
   42d98:	ldr	r1, [r4, #16]
   42d9c:	ldr	r0, [r4, #20]
   42da0:	sub	r7, r1, r0
   42da4:	cmp	r7, r6
   42da8:	bcs	42dec <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   42dac:	mov	r1, #32
   42db0:	mov	r2, r7
   42db4:	bl	14ee4 <memset@plt>
   42db8:	ldr	r0, [r4, #20]
   42dbc:	ldr	r2, [r4, #44]	; 0x2c
   42dc0:	mov	r1, #0
   42dc4:	add	r0, r0, r7
   42dc8:	str	r0, [r4, #20]
   42dcc:	mov	r0, r4
   42dd0:	blx	r2
   42dd4:	ldr	r1, [r4, #16]
   42dd8:	ldr	r0, [r4, #20]
   42ddc:	sub	r6, r6, r7
   42de0:	sub	r7, r1, r0
   42de4:	cmp	r6, r7
   42de8:	bhi	42dac <flatcc_json_printer_table_vector_field@@Base+0x194>
   42dec:	mov	r1, #32
   42df0:	mov	r2, r6
   42df4:	bl	14ee4 <memset@plt>
   42df8:	ldr	r0, [r4, #20]
   42dfc:	add	r0, r0, r6
   42e00:	ldr	r6, [fp, #12]
   42e04:	str	r0, [r4, #20]
   42e08:	add	r1, r0, #1
   42e0c:	str	r1, [r4, #20]
   42e10:	mov	r1, #125	; 0x7d
   42e14:	strb	r1, [r0]
   42e18:	subs	r9, r8, #1
   42e1c:	bne	42e3c <flatcc_json_printer_table_vector_field@@Base+0x224>
   42e20:	b	42fd0 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   42e24:	ldr	r0, [r4, #36]	; 0x24
   42e28:	cmp	r0, #0
   42e2c:	moveq	r0, #2
   42e30:	streq	r0, [r4, #36]	; 0x24
   42e34:	subs	r9, r8, #1
   42e38:	beq	42fd0 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   42e3c:	mov	r8, #44	; 0x2c
   42e40:	b	42e5c <flatcc_json_printer_table_vector_field@@Base+0x244>
   42e44:	ldr	r0, [r4, #36]	; 0x24
   42e48:	cmp	r0, #0
   42e4c:	moveq	r0, #2
   42e50:	streq	r0, [r4, #36]	; 0x24
   42e54:	cmp	r9, #0
   42e58:	beq	42fd0 <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   42e5c:	ldr	r0, [r4, #20]
   42e60:	sub	r9, r9, #1
   42e64:	add	r1, r0, #1
   42e68:	str	r1, [r4, #20]
   42e6c:	strb	r8, [r0]
   42e70:	ldr	r0, [sl, #12]
   42e74:	ldr	r1, [r5, #4]!
   42e78:	subs	r0, r0, #1
   42e7c:	beq	42e44 <flatcc_json_printer_table_vector_field@@Base+0x22c>
   42e80:	ldr	r3, [r4, #32]
   42e84:	ldr	r2, [r4, #20]
   42e88:	add	r1, r5, r1
   42e8c:	add	r3, r3, #1
   42e90:	str	r3, [r4, #32]
   42e94:	add	r3, r2, #1
   42e98:	str	r3, [r4, #20]
   42e9c:	mov	r3, #123	; 0x7b
   42ea0:	strb	r3, [r2]
   42ea4:	str	r0, [sp, #12]
   42ea8:	mov	r0, #0
   42eac:	str	r0, [sp, #16]
   42eb0:	str	r1, [sp]
   42eb4:	ldr	r0, [r1]
   42eb8:	sub	r2, r1, r0
   42ebc:	str	r2, [sp, #4]
   42ec0:	ldrh	r0, [r1, -r0]
   42ec4:	mov	r1, sp
   42ec8:	str	r0, [sp, #8]
   42ecc:	mov	r0, r4
   42ed0:	blx	r6
   42ed4:	ldrb	r1, [r4, #25]
   42ed8:	ldr	r0, [r4, #20]
   42edc:	cmp	r1, #0
   42ee0:	beq	42fb8 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   42ee4:	add	r1, r0, #1
   42ee8:	str	r1, [r4, #20]
   42eec:	mov	r1, #10
   42ef0:	strb	r1, [r0]
   42ef4:	ldr	r0, [r4, #32]
   42ef8:	sub	r2, r0, #1
   42efc:	str	r2, [r4, #32]
   42f00:	ldrb	r3, [r4, #25]
   42f04:	ldr	r0, [r4, #20]
   42f08:	ldr	r1, [r4, #16]
   42f0c:	mla	r6, r2, r3, r0
   42f10:	mul	r7, r2, r3
   42f14:	cmp	r6, r1
   42f18:	bls	42f9c <flatcc_json_printer_table_vector_field@@Base+0x384>
   42f1c:	cmp	r0, r1
   42f20:	bcc	42f3c <flatcc_json_printer_table_vector_field@@Base+0x324>
   42f24:	ldr	r2, [r4, #44]	; 0x2c
   42f28:	mov	r0, r4
   42f2c:	mov	r1, #0
   42f30:	blx	r2
   42f34:	ldr	r1, [r4, #16]
   42f38:	ldr	r0, [r4, #20]
   42f3c:	sub	r6, r1, r0
   42f40:	cmp	r6, r7
   42f44:	bcs	42f88 <flatcc_json_printer_table_vector_field@@Base+0x370>
   42f48:	mov	r1, #32
   42f4c:	mov	r2, r6
   42f50:	bl	14ee4 <memset@plt>
   42f54:	ldr	r0, [r4, #20]
   42f58:	ldr	r2, [r4, #44]	; 0x2c
   42f5c:	mov	r1, #0
   42f60:	add	r0, r0, r6
   42f64:	str	r0, [r4, #20]
   42f68:	mov	r0, r4
   42f6c:	blx	r2
   42f70:	ldr	r1, [r4, #16]
   42f74:	ldr	r0, [r4, #20]
   42f78:	sub	r7, r7, r6
   42f7c:	sub	r6, r1, r0
   42f80:	cmp	r7, r6
   42f84:	bhi	42f48 <flatcc_json_printer_table_vector_field@@Base+0x330>
   42f88:	ldr	r6, [fp, #12]
   42f8c:	mov	r1, #32
   42f90:	mov	r2, r7
   42f94:	bl	14ee4 <memset@plt>
   42f98:	b	42fac <flatcc_json_printer_table_vector_field@@Base+0x394>
   42f9c:	mov	r1, #32
   42fa0:	mov	r2, r7
   42fa4:	bl	14ee4 <memset@plt>
   42fa8:	ldr	r6, [fp, #12]
   42fac:	ldr	r0, [r4, #20]
   42fb0:	add	r0, r0, r7
   42fb4:	str	r0, [r4, #20]
   42fb8:	add	r1, r0, #1
   42fbc:	str	r1, [r4, #20]
   42fc0:	mov	r1, #125	; 0x7d
   42fc4:	strb	r1, [r0]
   42fc8:	cmp	r9, #0
   42fcc:	bne	42e5c <flatcc_json_printer_table_vector_field@@Base+0x244>
   42fd0:	ldrb	r1, [r4, #25]
   42fd4:	ldr	r0, [r4, #20]
   42fd8:	cmp	r1, #0
   42fdc:	beq	4309c <flatcc_json_printer_table_vector_field@@Base+0x484>
   42fe0:	add	r1, r0, #1
   42fe4:	str	r1, [r4, #20]
   42fe8:	mov	r1, #10
   42fec:	strb	r1, [r0]
   42ff0:	ldr	r0, [r4, #32]
   42ff4:	sub	r2, r0, #1
   42ff8:	str	r2, [r4, #32]
   42ffc:	ldrb	r3, [r4, #25]
   43000:	ldr	r0, [r4, #20]
   43004:	ldr	r1, [r4, #16]
   43008:	mla	r7, r2, r3, r0
   4300c:	mul	r5, r2, r3
   43010:	cmp	r7, r1
   43014:	bls	43084 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   43018:	cmp	r0, r1
   4301c:	bcc	43038 <flatcc_json_printer_table_vector_field@@Base+0x420>
   43020:	ldr	r2, [r4, #44]	; 0x2c
   43024:	mov	r0, r4
   43028:	mov	r1, #0
   4302c:	blx	r2
   43030:	ldr	r1, [r4, #16]
   43034:	ldr	r0, [r4, #20]
   43038:	sub	r6, r1, r0
   4303c:	cmp	r6, r5
   43040:	bcs	43084 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   43044:	mov	r1, #32
   43048:	mov	r2, r6
   4304c:	bl	14ee4 <memset@plt>
   43050:	ldr	r0, [r4, #20]
   43054:	ldr	r2, [r4, #44]	; 0x2c
   43058:	mov	r1, #0
   4305c:	add	r0, r0, r6
   43060:	str	r0, [r4, #20]
   43064:	mov	r0, r4
   43068:	blx	r2
   4306c:	ldr	r1, [r4, #16]
   43070:	ldr	r0, [r4, #20]
   43074:	sub	r5, r5, r6
   43078:	sub	r6, r1, r0
   4307c:	cmp	r5, r6
   43080:	bhi	43044 <flatcc_json_printer_table_vector_field@@Base+0x42c>
   43084:	mov	r1, #32
   43088:	mov	r2, r5
   4308c:	bl	14ee4 <memset@plt>
   43090:	ldr	r0, [r4, #20]
   43094:	add	r0, r0, r5
   43098:	str	r0, [r4, #20]
   4309c:	add	r1, r0, #1
   430a0:	str	r1, [r4, #20]
   430a4:	mov	r1, #93	; 0x5d
   430a8:	strb	r1, [r0]
   430ac:	sub	sp, fp, #28
   430b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000430b4 <flatcc_json_printer_union_vector_field@@Base>:
   430b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   430b8:	add	fp, sp, #28
   430bc:	sub	sp, sp, #140	; 0x8c
   430c0:	mov	r6, r1
   430c4:	ldr	r1, [r1, #8]
   430c8:	mov	r8, r0
   430cc:	sub	r9, r2, #1
   430d0:	mov	r0, #4
   430d4:	mov	r4, r3
   430d8:	mov	r5, #0
   430dc:	mov	sl, #0
   430e0:	add	r3, r0, r9, lsl #1
   430e4:	cmp	r3, r1
   430e8:	bge	43108 <flatcc_json_printer_union_vector_field@@Base+0x54>
   430ec:	ldr	r7, [r6, #4]
   430f0:	mov	sl, #0
   430f4:	add	r3, r7, r3
   430f8:	ldrh	r3, [r3]
   430fc:	cmp	r3, #0
   43100:	ldrne	r7, [r6]
   43104:	addne	sl, r7, r3
   43108:	ldr	r7, [fp, #8]
   4310c:	add	r0, r0, r2, lsl #1
   43110:	cmp	r0, r1
   43114:	bge	43130 <flatcc_json_printer_union_vector_field@@Base+0x7c>
   43118:	ldr	r1, [r6, #4]
   4311c:	add	r0, r1, r0
   43120:	ldrh	r0, [r0]
   43124:	cmp	r0, #0
   43128:	ldrne	r1, [r6]
   4312c:	addne	r5, r1, r0
   43130:	ldr	r0, [r6, #12]
   43134:	cmp	r7, #101	; 0x65
   43138:	str	r5, [sp, #16]
   4313c:	str	r0, [sp, #24]
   43140:	bge	43448 <flatcc_json_printer_union_vector_field@@Base+0x394>
   43144:	add	r5, sp, #32
   43148:	mov	r1, r4
   4314c:	mov	r2, r7
   43150:	mov	r0, r5
   43154:	bl	14e54 <memcpy@plt>
   43158:	movw	r0, #29791	; 0x745f
   4315c:	cmp	sl, #0
   43160:	mov	r1, #101	; 0x65
   43164:	movt	r0, #28793	; 0x7079
   43168:	str	r0, [r5, r7]
   4316c:	add	r0, r5, r7
   43170:	ldr	r5, [sp, #16]
   43174:	strb	r1, [r0, #4]
   43178:	cmpne	r5, #0
   4317c:	bne	43188 <flatcc_json_printer_union_vector_field@@Base+0xd4>
   43180:	sub	sp, fp, #28
   43184:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43188:	ldr	r0, [fp, #12]
   4318c:	add	r1, r7, #5
   43190:	add	r3, sp, #32
   43194:	mov	r2, r9
   43198:	str	r1, [sp]
   4319c:	mov	r1, r6
   431a0:	str	r0, [sp, #4]
   431a4:	mov	r0, r8
   431a8:	bl	3fcd4 <flatcc_json_printer_utype_enum_vector_field@@Base>
   431ac:	ldr	r0, [r6, #16]
   431b0:	add	r1, r0, #1
   431b4:	cmp	r0, #0
   431b8:	str	r1, [r6, #16]
   431bc:	beq	431d4 <flatcc_json_printer_union_vector_field@@Base+0x120>
   431c0:	ldr	r0, [r8, #20]
   431c4:	add	r1, r0, #1
   431c8:	str	r1, [r8, #20]
   431cc:	mov	r1, #44	; 0x2c
   431d0:	strb	r1, [r0]
   431d4:	ldr	r0, [r5]
   431d8:	ldr	r9, [sl]
   431dc:	mov	r1, r4
   431e0:	mov	r2, r7
   431e4:	ldr	r6, [r5, r0]!
   431e8:	str	r0, [sp, #12]
   431ec:	mov	r0, r8
   431f0:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   431f4:	mov	r7, r8
   431f8:	cmp	r6, #0
   431fc:	ldr	r0, [r7, #20]!
   43200:	add	r1, r0, #1
   43204:	str	r1, [r7]
   43208:	ldr	r1, [r7, #12]
   4320c:	add	r1, r1, #1
   43210:	str	r1, [r7, #12]
   43214:	mov	r1, #91	; 0x5b
   43218:	strb	r1, [r0]
   4321c:	beq	43364 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   43220:	add	r4, sl, r9
   43224:	ldr	r2, [fp, #16]
   43228:	ldrb	r0, [r4, #4]
   4322c:	cmp	r0, #0
   43230:	beq	4325c <flatcc_json_printer_union_vector_field@@Base+0x1a8>
   43234:	add	r1, r5, #4
   43238:	mov	r9, r2
   4323c:	str	r1, [sp, #20]
   43240:	strb	r0, [sp, #28]
   43244:	add	r1, sp, #20
   43248:	mov	r0, r8
   4324c:	blx	r2
   43250:	subs	r6, r6, #1
   43254:	bne	432b4 <flatcc_json_printer_union_vector_field@@Base+0x200>
   43258:	b	43364 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   4325c:	ldr	r0, [r7]
   43260:	mov	r9, r2
   43264:	add	r1, r0, #1
   43268:	str	r1, [r7]
   4326c:	mov	r1, #110	; 0x6e
   43270:	strb	r1, [r0]
   43274:	ldr	r0, [r7]
   43278:	add	r1, r0, #1
   4327c:	str	r1, [r7]
   43280:	mov	r1, #117	; 0x75
   43284:	strb	r1, [r0]
   43288:	ldr	r0, [r7]
   4328c:	add	r1, r0, #1
   43290:	str	r1, [r7]
   43294:	mov	r1, #108	; 0x6c
   43298:	strb	r1, [r0]
   4329c:	ldr	r0, [r7]
   432a0:	add	r2, r0, #1
   432a4:	str	r2, [r7]
   432a8:	strb	r1, [r0]
   432ac:	subs	r6, r6, #1
   432b0:	beq	43364 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   432b4:	ldr	r0, [sp, #16]
   432b8:	ldr	r1, [sp, #12]
   432bc:	add	r4, r4, #5
   432c0:	mov	sl, #44	; 0x2c
   432c4:	add	r0, r1, r0
   432c8:	add	r5, r0, #8
   432cc:	b	4332c <flatcc_json_printer_union_vector_field@@Base+0x278>
   432d0:	ldr	r0, [r7]
   432d4:	mov	r2, #108	; 0x6c
   432d8:	add	r1, r0, #1
   432dc:	str	r1, [r7]
   432e0:	mov	r1, #110	; 0x6e
   432e4:	strb	r1, [r0]
   432e8:	ldr	r0, [r7]
   432ec:	add	r1, r0, #1
   432f0:	str	r1, [r7]
   432f4:	mov	r1, #117	; 0x75
   432f8:	strb	r1, [r0]
   432fc:	ldr	r0, [r7]
   43300:	add	r1, r0, #1
   43304:	str	r1, [r7]
   43308:	strb	r2, [r0]
   4330c:	ldr	r0, [r7]
   43310:	add	r1, r0, #1
   43314:	str	r1, [r7]
   43318:	strb	r2, [r0]
   4331c:	add	r5, r5, #4
   43320:	add	r4, r4, #1
   43324:	cmp	r6, #0
   43328:	beq	43364 <flatcc_json_printer_union_vector_field@@Base+0x2b0>
   4332c:	ldrb	r0, [r4]
   43330:	ldr	r1, [r7]
   43334:	sub	r6, r6, #1
   43338:	add	r2, r1, #1
   4333c:	cmp	r0, #0
   43340:	str	r2, [r7]
   43344:	strb	sl, [r1]
   43348:	beq	432d0 <flatcc_json_printer_union_vector_field@@Base+0x21c>
   4334c:	str	r5, [sp, #20]
   43350:	strb	r0, [sp, #28]
   43354:	mov	r0, r8
   43358:	add	r1, sp, #20
   4335c:	blx	r9
   43360:	b	4331c <flatcc_json_printer_union_vector_field@@Base+0x268>
   43364:	ldrb	r1, [r8, #25]
   43368:	ldr	r0, [r8, #20]
   4336c:	cmp	r1, #0
   43370:	beq	43430 <flatcc_json_printer_union_vector_field@@Base+0x37c>
   43374:	add	r1, r0, #1
   43378:	str	r1, [r8, #20]
   4337c:	mov	r1, #10
   43380:	strb	r1, [r0]
   43384:	ldr	r0, [r8, #32]
   43388:	sub	r2, r0, #1
   4338c:	str	r2, [r8, #32]
   43390:	ldrb	r3, [r8, #25]
   43394:	ldr	r0, [r8, #20]
   43398:	ldr	r1, [r8, #16]
   4339c:	mla	r6, r2, r3, r0
   433a0:	mul	r5, r2, r3
   433a4:	cmp	r6, r1
   433a8:	bls	43418 <flatcc_json_printer_union_vector_field@@Base+0x364>
   433ac:	cmp	r0, r1
   433b0:	bcc	433cc <flatcc_json_printer_union_vector_field@@Base+0x318>
   433b4:	ldr	r2, [r8, #44]	; 0x2c
   433b8:	mov	r0, r8
   433bc:	mov	r1, #0
   433c0:	blx	r2
   433c4:	ldr	r1, [r8, #16]
   433c8:	ldr	r0, [r8, #20]
   433cc:	sub	r6, r1, r0
   433d0:	cmp	r6, r5
   433d4:	bcs	43418 <flatcc_json_printer_union_vector_field@@Base+0x364>
   433d8:	mov	r1, #32
   433dc:	mov	r2, r6
   433e0:	bl	14ee4 <memset@plt>
   433e4:	ldr	r0, [r8, #20]
   433e8:	ldr	r2, [r8, #44]	; 0x2c
   433ec:	mov	r1, #0
   433f0:	add	r0, r0, r6
   433f4:	str	r0, [r8, #20]
   433f8:	mov	r0, r8
   433fc:	blx	r2
   43400:	ldr	r1, [r8, #16]
   43404:	ldr	r0, [r8, #20]
   43408:	sub	r5, r5, r6
   4340c:	sub	r6, r1, r0
   43410:	cmp	r5, r6
   43414:	bhi	433d8 <flatcc_json_printer_union_vector_field@@Base+0x324>
   43418:	mov	r1, #32
   4341c:	mov	r2, r5
   43420:	bl	14ee4 <memset@plt>
   43424:	ldr	r0, [r7]
   43428:	add	r0, r0, r5
   4342c:	str	r0, [r7]
   43430:	add	r1, r0, #1
   43434:	str	r1, [r7]
   43438:	mov	r1, #93	; 0x5d
   4343c:	strb	r1, [r0]
   43440:	sub	sp, fp, #28
   43444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43448:	ldr	r0, [r8, #36]	; 0x24
   4344c:	movw	r2, #843	; 0x34b
   43450:	cmp	r0, #0
   43454:	moveq	r0, #1
   43458:	streq	r0, [r8, #36]	; 0x24
   4345c:	ldr	r0, [pc, #20]	; 43478 <flatcc_json_printer_union_vector_field@@Base+0x3c4>
   43460:	ldr	r1, [pc, #20]	; 4347c <flatcc_json_printer_union_vector_field@@Base+0x3c8>
   43464:	ldr	r3, [pc, #20]	; 43480 <flatcc_json_printer_union_vector_field@@Base+0x3cc>
   43468:	add	r0, pc, r0
   4346c:	add	r1, pc, r1
   43470:	add	r3, pc, r3
   43474:	bl	14f38 <__assert_fail@plt>
   43478:	andeq	r7, r0, r9, ror #20
   4347c:	andeq	r7, r0, r0, lsl #21
   43480:	ldrdeq	r7, [r0], -lr

00043484 <flatcc_json_printer_table_field@@Base>:
   43484:	push	{r4, r5, r6, sl, fp, lr}
   43488:	add	fp, sp, #16
   4348c:	sub	sp, sp, #24
   43490:	mov	r5, r1
   43494:	ldr	r1, [r1, #8]
   43498:	mov	r4, r0
   4349c:	mov	r0, #4
   434a0:	add	r0, r0, r2, lsl #1
   434a4:	cmp	r0, r1
   434a8:	bge	434c8 <flatcc_json_printer_table_field@@Base+0x44>
   434ac:	ldr	r1, [r5, #4]
   434b0:	add	r0, r1, r0
   434b4:	ldrh	r0, [r0]
   434b8:	cmp	r0, #0
   434bc:	ldrne	r1, [r5]
   434c0:	addsne	r6, r1, r0
   434c4:	bne	434d0 <flatcc_json_printer_table_field@@Base+0x4c>
   434c8:	sub	sp, fp, #16
   434cc:	pop	{r4, r5, r6, sl, fp, pc}
   434d0:	ldr	r0, [r5, #16]
   434d4:	ldr	r2, [fp, #8]
   434d8:	add	r1, r0, #1
   434dc:	cmp	r0, #0
   434e0:	str	r1, [r5, #16]
   434e4:	beq	434fc <flatcc_json_printer_table_field@@Base+0x78>
   434e8:	ldr	r0, [r4, #20]
   434ec:	add	r1, r0, #1
   434f0:	str	r1, [r4, #20]
   434f4:	mov	r1, #44	; 0x2c
   434f8:	strb	r1, [r0]
   434fc:	mov	r0, r4
   43500:	mov	r1, r3
   43504:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   43508:	ldr	r0, [r5, #12]
   4350c:	subs	r0, r0, #1
   43510:	beq	43654 <flatcc_json_printer_table_field@@Base+0x1d0>
   43514:	ldr	r1, [r6]
   43518:	ldr	r3, [r4, #20]
   4351c:	ldr	r2, [fp, #12]
   43520:	add	r1, r6, r1
   43524:	ldr	r6, [r4, #32]
   43528:	add	r6, r6, #1
   4352c:	str	r6, [r4, #32]
   43530:	add	r6, r3, #1
   43534:	str	r6, [r4, #20]
   43538:	mov	r6, #123	; 0x7b
   4353c:	strb	r6, [r3]
   43540:	str	r0, [sp, #16]
   43544:	mov	r0, #0
   43548:	str	r0, [sp, #20]
   4354c:	str	r1, [sp, #4]
   43550:	ldr	r0, [r1]
   43554:	sub	r3, r1, r0
   43558:	str	r3, [sp, #8]
   4355c:	ldrh	r0, [r1, -r0]
   43560:	add	r1, sp, #4
   43564:	str	r0, [sp, #12]
   43568:	mov	r0, r4
   4356c:	blx	r2
   43570:	ldrb	r1, [r4, #25]
   43574:	ldr	r0, [r4, #20]
   43578:	cmp	r1, #0
   4357c:	beq	4363c <flatcc_json_printer_table_field@@Base+0x1b8>
   43580:	add	r1, r0, #1
   43584:	str	r1, [r4, #20]
   43588:	mov	r1, #10
   4358c:	strb	r1, [r0]
   43590:	ldr	r0, [r4, #32]
   43594:	sub	r2, r0, #1
   43598:	str	r2, [r4, #32]
   4359c:	ldrb	r3, [r4, #25]
   435a0:	ldr	r0, [r4, #20]
   435a4:	ldr	r1, [r4, #16]
   435a8:	mla	r6, r2, r3, r0
   435ac:	mul	r5, r2, r3
   435b0:	cmp	r6, r1
   435b4:	bls	43624 <flatcc_json_printer_table_field@@Base+0x1a0>
   435b8:	cmp	r0, r1
   435bc:	bcc	435d8 <flatcc_json_printer_table_field@@Base+0x154>
   435c0:	ldr	r2, [r4, #44]	; 0x2c
   435c4:	mov	r0, r4
   435c8:	mov	r1, #0
   435cc:	blx	r2
   435d0:	ldr	r1, [r4, #16]
   435d4:	ldr	r0, [r4, #20]
   435d8:	sub	r6, r1, r0
   435dc:	cmp	r6, r5
   435e0:	bcs	43624 <flatcc_json_printer_table_field@@Base+0x1a0>
   435e4:	mov	r1, #32
   435e8:	mov	r2, r6
   435ec:	bl	14ee4 <memset@plt>
   435f0:	ldr	r0, [r4, #20]
   435f4:	ldr	r2, [r4, #44]	; 0x2c
   435f8:	mov	r1, #0
   435fc:	add	r0, r0, r6
   43600:	str	r0, [r4, #20]
   43604:	mov	r0, r4
   43608:	blx	r2
   4360c:	ldr	r1, [r4, #16]
   43610:	ldr	r0, [r4, #20]
   43614:	sub	r5, r5, r6
   43618:	sub	r6, r1, r0
   4361c:	cmp	r5, r6
   43620:	bhi	435e4 <flatcc_json_printer_table_field@@Base+0x160>
   43624:	mov	r1, #32
   43628:	mov	r2, r5
   4362c:	bl	14ee4 <memset@plt>
   43630:	ldr	r0, [r4, #20]
   43634:	add	r0, r0, r5
   43638:	str	r0, [r4, #20]
   4363c:	add	r1, r0, #1
   43640:	str	r1, [r4, #20]
   43644:	mov	r1, #125	; 0x7d
   43648:	strb	r1, [r0]
   4364c:	sub	sp, fp, #16
   43650:	pop	{r4, r5, r6, sl, fp, pc}
   43654:	ldr	r0, [r4, #36]	; 0x24
   43658:	cmp	r0, #0
   4365c:	bne	434c8 <flatcc_json_printer_table_field@@Base+0x44>
   43660:	mov	r0, #2
   43664:	str	r0, [r4, #36]	; 0x24
   43668:	sub	sp, fp, #16
   4366c:	pop	{r4, r5, r6, sl, fp, pc}

00043670 <flatcc_json_printer_union_field@@Base>:
   43670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43674:	add	fp, sp, #28
   43678:	sub	sp, sp, #20
   4367c:	mov	r9, r1
   43680:	mov	r4, r0
   43684:	mov	r0, #2
   43688:	mov	sl, r3
   4368c:	lsl	r1, r2, #1
   43690:	add	r3, r0, r2, lsl #1
   43694:	ldr	r2, [r9, #8]
   43698:	mov	r0, #0
   4369c:	cmp	r3, r2
   436a0:	bge	436bc <flatcc_json_printer_union_field@@Base+0x4c>
   436a4:	ldr	r7, [r9, #4]
   436a8:	add	r3, r7, r3
   436ac:	ldrh	r3, [r3]
   436b0:	cmp	r3, #0
   436b4:	ldrne	r0, [r9]
   436b8:	addne	r0, r0, r3
   436bc:	add	r1, r1, #4
   436c0:	cmp	r1, r2
   436c4:	bge	436e0 <flatcc_json_printer_union_field@@Base+0x70>
   436c8:	ldr	r2, [r9, #4]
   436cc:	add	r1, r2, r1
   436d0:	ldrh	r1, [r1]
   436d4:	cmp	r1, #0
   436d8:	cmpne	r0, #0
   436dc:	bne	436e8 <flatcc_json_printer_union_field@@Base+0x78>
   436e0:	sub	sp, fp, #28
   436e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   436e8:	ldr	r2, [r9]
   436ec:	adds	r1, r2, r1
   436f0:	str	r1, [sp, #4]
   436f4:	beq	436e0 <flatcc_json_printer_union_field@@Base+0x70>
   436f8:	ldrb	r6, [r0]
   436fc:	ldr	r0, [r9, #16]
   43700:	add	r1, r0, #1
   43704:	cmp	r0, #0
   43708:	str	r1, [r9, #16]
   4370c:	beq	43724 <flatcc_json_printer_union_field@@Base+0xb4>
   43710:	ldr	r0, [r4, #20]
   43714:	add	r1, r0, #1
   43718:	str	r1, [r4, #20]
   4371c:	mov	r1, #44	; 0x2c
   43720:	strb	r1, [r0]
   43724:	ldrb	r1, [r4, #25]
   43728:	ldr	r8, [fp, #8]
   4372c:	ldr	r0, [r4, #20]
   43730:	cmp	r1, #0
   43734:	beq	437ec <flatcc_json_printer_union_field@@Base+0x17c>
   43738:	add	r1, r0, #1
   4373c:	mov	r5, r6
   43740:	str	r1, [r4, #20]
   43744:	mov	r1, #10
   43748:	strb	r1, [r0]
   4374c:	ldr	r0, [r4, #20]
   43750:	ldrb	r2, [r4, #25]
   43754:	ldr	r3, [r4, #32]
   43758:	ldr	r1, [r4, #16]
   4375c:	mla	r6, r3, r2, r0
   43760:	mul	r7, r3, r2
   43764:	cmp	r6, r1
   43768:	bls	43810 <flatcc_json_printer_union_field@@Base+0x1a0>
   4376c:	cmp	r0, r1
   43770:	bcc	4378c <flatcc_json_printer_union_field@@Base+0x11c>
   43774:	ldr	r2, [r4, #44]	; 0x2c
   43778:	mov	r0, r4
   4377c:	mov	r1, #0
   43780:	blx	r2
   43784:	ldr	r1, [r4, #16]
   43788:	ldr	r0, [r4, #20]
   4378c:	mov	r6, r5
   43790:	sub	r5, r1, r0
   43794:	cmp	r5, r7
   43798:	bcs	437dc <flatcc_json_printer_union_field@@Base+0x16c>
   4379c:	mov	r1, #32
   437a0:	mov	r2, r5
   437a4:	bl	14ee4 <memset@plt>
   437a8:	ldr	r0, [r4, #20]
   437ac:	ldr	r2, [r4, #44]	; 0x2c
   437b0:	mov	r1, #0
   437b4:	add	r0, r0, r5
   437b8:	str	r0, [r4, #20]
   437bc:	mov	r0, r4
   437c0:	blx	r2
   437c4:	ldr	r1, [r4, #16]
   437c8:	ldr	r0, [r4, #20]
   437cc:	sub	r7, r7, r5
   437d0:	sub	r5, r1, r0
   437d4:	cmp	r7, r5
   437d8:	bhi	4379c <flatcc_json_printer_union_field@@Base+0x12c>
   437dc:	mov	r1, #32
   437e0:	mov	r2, r7
   437e4:	bl	14ee4 <memset@plt>
   437e8:	b	43820 <flatcc_json_printer_union_field@@Base+0x1b0>
   437ec:	ldr	r1, [r4, #16]
   437f0:	cmp	r0, r1
   437f4:	bcc	4382c <flatcc_json_printer_union_field@@Base+0x1bc>
   437f8:	ldr	r2, [r4, #44]	; 0x2c
   437fc:	mov	r0, r4
   43800:	mov	r1, #0
   43804:	blx	r2
   43808:	ldr	r0, [r4, #20]
   4380c:	b	4382c <flatcc_json_printer_union_field@@Base+0x1bc>
   43810:	mov	r1, #32
   43814:	mov	r2, r7
   43818:	bl	14ee4 <memset@plt>
   4381c:	mov	r6, r5
   43820:	ldr	r0, [r4, #20]
   43824:	add	r0, r0, r7
   43828:	str	r0, [r4, #20]
   4382c:	mov	r1, #34	; 0x22
   43830:	strb	r1, [r0]
   43834:	ldrb	r2, [r4, #26]
   43838:	ldr	r0, [r4, #20]
   4383c:	ldr	r1, [r4, #16]
   43840:	cmp	r2, #0
   43844:	addeq	r0, r0, #1
   43848:	add	r2, r0, r8
   4384c:	str	r0, [r4, #20]
   43850:	cmp	r2, r1
   43854:	bcs	4386c <flatcc_json_printer_union_field@@Base+0x1fc>
   43858:	mov	r1, sl
   4385c:	mov	r2, r8
   43860:	bl	14e54 <memcpy@plt>
   43864:	mov	r7, r8
   43868:	b	43908 <flatcc_json_printer_union_field@@Base+0x298>
   4386c:	cmp	r0, r1
   43870:	mov	r7, r8
   43874:	str	r6, [sp]
   43878:	bcc	43894 <flatcc_json_printer_union_field@@Base+0x224>
   4387c:	ldr	r2, [r4, #44]	; 0x2c
   43880:	mov	r0, r4
   43884:	mov	r1, #0
   43888:	blx	r2
   4388c:	ldr	r1, [r4, #16]
   43890:	ldr	r0, [r4, #20]
   43894:	sub	r8, r1, r0
   43898:	mov	r6, sl
   4389c:	mov	r5, r7
   438a0:	cmp	r8, r7
   438a4:	bcs	438f4 <flatcc_json_printer_union_field@@Base+0x284>
   438a8:	mov	r7, r5
   438ac:	mov	r6, sl
   438b0:	mov	r1, r6
   438b4:	mov	r2, r8
   438b8:	bl	14e54 <memcpy@plt>
   438bc:	ldr	r0, [r4, #20]
   438c0:	ldr	r2, [r4, #44]	; 0x2c
   438c4:	mov	r1, #0
   438c8:	add	r0, r0, r8
   438cc:	str	r0, [r4, #20]
   438d0:	mov	r0, r4
   438d4:	blx	r2
   438d8:	ldr	r1, [r4, #16]
   438dc:	ldr	r0, [r4, #20]
   438e0:	sub	r7, r7, r8
   438e4:	add	r6, r6, r8
   438e8:	sub	r8, r1, r0
   438ec:	cmp	r7, r8
   438f0:	bhi	438b0 <flatcc_json_printer_union_field@@Base+0x240>
   438f4:	mov	r1, r6
   438f8:	mov	r2, r7
   438fc:	bl	14e54 <memcpy@plt>
   43900:	ldr	r6, [sp]
   43904:	mov	r8, r5
   43908:	ldr	r0, [r4, #20]
   4390c:	ldr	r1, [r4, #16]
   43910:	add	r0, r0, r7
   43914:	add	r2, r0, #5
   43918:	str	r0, [r4, #20]
   4391c:	cmp	r2, r1
   43920:	bcs	43940 <flatcc_json_printer_union_field@@Base+0x2d0>
   43924:	mov	r1, #101	; 0x65
   43928:	mov	r7, #5
   4392c:	strb	r1, [r0, #4]
   43930:	movw	r1, #29791	; 0x745f
   43934:	movt	r1, #28793	; 0x7079
   43938:	str	r1, [r0]
   4393c:	b	439e4 <flatcc_json_printer_union_field@@Base+0x374>
   43940:	cmp	r0, r1
   43944:	bcc	43960 <flatcc_json_printer_union_field@@Base+0x2f0>
   43948:	ldr	r2, [r4, #44]	; 0x2c
   4394c:	mov	r0, r4
   43950:	mov	r1, #0
   43954:	blx	r2
   43958:	ldr	r1, [r4, #16]
   4395c:	ldr	r0, [r4, #20]
   43960:	sub	r5, r1, r0
   43964:	mov	r8, r6
   43968:	cmp	r5, #4
   4396c:	bhi	439c4 <flatcc_json_printer_union_field@@Base+0x354>
   43970:	ldr	r6, [pc, #500]	; 43b6c <flatcc_json_printer_union_field@@Base+0x4fc>
   43974:	mov	r7, #5
   43978:	add	r6, pc, r6
   4397c:	mov	r1, r6
   43980:	mov	r2, r5
   43984:	bl	14e54 <memcpy@plt>
   43988:	ldr	r0, [r4, #20]
   4398c:	ldr	r2, [r4, #44]	; 0x2c
   43990:	mov	r1, #0
   43994:	add	r0, r0, r5
   43998:	str	r0, [r4, #20]
   4399c:	mov	r0, r4
   439a0:	blx	r2
   439a4:	ldr	r1, [r4, #16]
   439a8:	ldr	r0, [r4, #20]
   439ac:	sub	r7, r7, r5
   439b0:	add	r6, r6, r5
   439b4:	sub	r5, r1, r0
   439b8:	cmp	r7, r5
   439bc:	bhi	4397c <flatcc_json_printer_union_field@@Base+0x30c>
   439c0:	b	439d0 <flatcc_json_printer_union_field@@Base+0x360>
   439c4:	ldr	r6, [pc, #412]	; 43b68 <flatcc_json_printer_union_field@@Base+0x4f8>
   439c8:	mov	r7, #5
   439cc:	add	r6, pc, r6
   439d0:	mov	r1, r6
   439d4:	mov	r2, r7
   439d8:	bl	14e54 <memcpy@plt>
   439dc:	mov	r6, r8
   439e0:	ldr	r8, [fp, #8]
   439e4:	ldr	r0, [r4, #20]
   439e8:	add	r1, r0, r7
   439ec:	str	r1, [r4, #20]
   439f0:	mov	r1, #34	; 0x22
   439f4:	strb	r1, [r0, r7]
   439f8:	ldrb	r0, [r4, #26]
   439fc:	ldr	r1, [r4, #20]
   43a00:	cmp	r0, #0
   43a04:	addeq	r1, r1, #1
   43a08:	add	r0, r1, #1
   43a0c:	str	r0, [r4, #20]
   43a10:	mov	r0, #58	; 0x3a
   43a14:	strb	r0, [r1]
   43a18:	mov	r1, #32
   43a1c:	ldr	r0, [r4, #20]
   43a20:	strb	r1, [r0]
   43a24:	ldrb	r1, [r4, #25]
   43a28:	ldr	r0, [r4, #20]
   43a2c:	cmp	r1, #0
   43a30:	addne	r0, r0, #1
   43a34:	str	r0, [r4, #20]
   43a38:	ldrb	r1, [r4, #27]
   43a3c:	cmp	r1, #0
   43a40:	beq	43a98 <flatcc_json_printer_union_field@@Base+0x428>
   43a44:	mov	r1, #0
   43a48:	cmp	r6, #100	; 0x64
   43a4c:	bcc	43ab4 <flatcc_json_printer_union_field@@Base+0x444>
   43a50:	strb	r1, [r0, #3]
   43a54:	movw	r1, #34079	; 0x851f
   43a58:	movt	r1, #20971	; 0x51eb
   43a5c:	umull	r1, r2, r6, r1
   43a60:	mov	r1, #48	; 0x30
   43a64:	orr	r1, r1, r2, lsr #5
   43a68:	strb	r1, [r0]
   43a6c:	lsr	r1, r2, #5
   43a70:	mov	r2, #100	; 0x64
   43a74:	mls	r1, r1, r2, r6
   43a78:	ldr	r2, [pc, #240]	; 43b70 <flatcc_json_printer_union_field@@Base+0x500>
   43a7c:	uxtb	r1, r1
   43a80:	add	r2, pc, r2
   43a84:	add	r1, r2, r1, lsl #1
   43a88:	ldrh	r1, [r1]
   43a8c:	strh	r1, [r0, #1]
   43a90:	mov	r0, #3
   43a94:	b	43b04 <flatcc_json_printer_union_field@@Base+0x494>
   43a98:	ldr	r2, [fp, #12]
   43a9c:	mov	r0, r4
   43aa0:	mov	r1, r6
   43aa4:	blx	r2
   43aa8:	cmp	r6, #0
   43aac:	bne	43b18 <flatcc_json_printer_union_field@@Base+0x4a8>
   43ab0:	b	436e0 <flatcc_json_printer_union_field@@Base+0x70>
   43ab4:	cmp	r6, #10
   43ab8:	bcc	43af4 <flatcc_json_printer_union_field@@Base+0x484>
   43abc:	strb	r1, [r0, #2]
   43ac0:	movw	r1, #34079	; 0x851f
   43ac4:	movt	r1, #20971	; 0x51eb
   43ac8:	umull	r1, r2, r6, r1
   43acc:	lsr	r1, r2, #5
   43ad0:	mov	r2, #100	; 0x64
   43ad4:	mls	r1, r1, r2, r6
   43ad8:	ldr	r2, [pc, #148]	; 43b74 <flatcc_json_printer_union_field@@Base+0x504>
   43adc:	add	r2, pc, r2
   43ae0:	add	r1, r2, r1, lsl #1
   43ae4:	ldrh	r1, [r1]
   43ae8:	strh	r1, [r0]
   43aec:	mov	r0, #2
   43af0:	b	43b04 <flatcc_json_printer_union_field@@Base+0x494>
   43af4:	strb	r1, [r0, #1]
   43af8:	add	r1, r6, #48	; 0x30
   43afc:	strb	r1, [r0]
   43b00:	mov	r0, #1
   43b04:	ldr	r1, [r4, #20]
   43b08:	add	r0, r1, r0
   43b0c:	str	r0, [r4, #20]
   43b10:	cmp	r6, #0
   43b14:	beq	436e0 <flatcc_json_printer_union_field@@Base+0x70>
   43b18:	ldr	r0, [r4, #20]
   43b1c:	ldr	r5, [fp, #16]
   43b20:	mov	r2, r8
   43b24:	add	r1, r0, #1
   43b28:	str	r1, [r4, #20]
   43b2c:	mov	r1, #44	; 0x2c
   43b30:	strb	r1, [r0]
   43b34:	mov	r0, r4
   43b38:	mov	r1, sl
   43b3c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   43b40:	ldr	r0, [r9, #12]
   43b44:	ldr	r1, [sp, #4]
   43b48:	strb	r6, [sp, #16]
   43b4c:	str	r1, [sp, #8]
   43b50:	str	r0, [sp, #12]
   43b54:	add	r1, sp, #8
   43b58:	mov	r0, r4
   43b5c:	blx	r5
   43b60:	sub	sp, fp, #28
   43b64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43b68:	andeq	r7, r0, ip, asr #12
   43b6c:	andeq	r7, r0, r0, lsr #13
   43b70:	andeq	r7, r0, pc, ror #14
   43b74:	andeq	r7, r0, r3, lsl r7

00043b78 <flatcc_json_printer_union_table@@Base>:
   43b78:	push	{r4, r5, r6, sl, fp, lr}
   43b7c:	add	fp, sp, #16
   43b80:	sub	sp, sp, #24
   43b84:	mov	r4, r0
   43b88:	ldr	r0, [r1, #4]
   43b8c:	subs	r0, r0, #1
   43b90:	beq	43cd4 <flatcc_json_printer_union_table@@Base+0x15c>
   43b94:	ldr	r1, [r1]
   43b98:	ldr	r6, [r4, #32]
   43b9c:	ldr	r3, [r1]
   43ba0:	add	r6, r6, #1
   43ba4:	add	r1, r1, r3
   43ba8:	ldr	r3, [r4, #20]
   43bac:	str	r6, [r4, #32]
   43bb0:	add	r6, r3, #1
   43bb4:	str	r6, [r4, #20]
   43bb8:	mov	r6, #123	; 0x7b
   43bbc:	strb	r6, [r3]
   43bc0:	str	r0, [sp, #16]
   43bc4:	mov	r0, #0
   43bc8:	str	r0, [sp, #20]
   43bcc:	str	r1, [sp, #4]
   43bd0:	ldr	r0, [r1]
   43bd4:	sub	r3, r1, r0
   43bd8:	str	r3, [sp, #8]
   43bdc:	ldrh	r0, [r1, -r0]
   43be0:	add	r1, sp, #4
   43be4:	str	r0, [sp, #12]
   43be8:	mov	r0, r4
   43bec:	blx	r2
   43bf0:	ldrb	r1, [r4, #25]
   43bf4:	ldr	r0, [r4, #20]
   43bf8:	cmp	r1, #0
   43bfc:	beq	43cbc <flatcc_json_printer_union_table@@Base+0x144>
   43c00:	add	r1, r0, #1
   43c04:	str	r1, [r4, #20]
   43c08:	mov	r1, #10
   43c0c:	strb	r1, [r0]
   43c10:	ldr	r0, [r4, #32]
   43c14:	sub	r2, r0, #1
   43c18:	str	r2, [r4, #32]
   43c1c:	ldrb	r3, [r4, #25]
   43c20:	ldr	r0, [r4, #20]
   43c24:	ldr	r1, [r4, #16]
   43c28:	mla	r6, r2, r3, r0
   43c2c:	mul	r5, r2, r3
   43c30:	cmp	r6, r1
   43c34:	bls	43ca4 <flatcc_json_printer_union_table@@Base+0x12c>
   43c38:	cmp	r0, r1
   43c3c:	bcc	43c58 <flatcc_json_printer_union_table@@Base+0xe0>
   43c40:	ldr	r2, [r4, #44]	; 0x2c
   43c44:	mov	r0, r4
   43c48:	mov	r1, #0
   43c4c:	blx	r2
   43c50:	ldr	r1, [r4, #16]
   43c54:	ldr	r0, [r4, #20]
   43c58:	sub	r6, r1, r0
   43c5c:	cmp	r6, r5
   43c60:	bcs	43ca4 <flatcc_json_printer_union_table@@Base+0x12c>
   43c64:	mov	r1, #32
   43c68:	mov	r2, r6
   43c6c:	bl	14ee4 <memset@plt>
   43c70:	ldr	r0, [r4, #20]
   43c74:	ldr	r2, [r4, #44]	; 0x2c
   43c78:	mov	r1, #0
   43c7c:	add	r0, r0, r6
   43c80:	str	r0, [r4, #20]
   43c84:	mov	r0, r4
   43c88:	blx	r2
   43c8c:	ldr	r1, [r4, #16]
   43c90:	ldr	r0, [r4, #20]
   43c94:	sub	r5, r5, r6
   43c98:	sub	r6, r1, r0
   43c9c:	cmp	r5, r6
   43ca0:	bhi	43c64 <flatcc_json_printer_union_table@@Base+0xec>
   43ca4:	mov	r1, #32
   43ca8:	mov	r2, r5
   43cac:	bl	14ee4 <memset@plt>
   43cb0:	ldr	r0, [r4, #20]
   43cb4:	add	r0, r0, r5
   43cb8:	str	r0, [r4, #20]
   43cbc:	add	r1, r0, #1
   43cc0:	str	r1, [r4, #20]
   43cc4:	mov	r1, #125	; 0x7d
   43cc8:	strb	r1, [r0]
   43ccc:	sub	sp, fp, #16
   43cd0:	pop	{r4, r5, r6, sl, fp, pc}
   43cd4:	ldr	r0, [r4, #36]	; 0x24
   43cd8:	cmp	r0, #0
   43cdc:	beq	43ce8 <flatcc_json_printer_union_table@@Base+0x170>
   43ce0:	sub	sp, fp, #16
   43ce4:	pop	{r4, r5, r6, sl, fp, pc}
   43ce8:	mov	r0, #2
   43cec:	str	r0, [r4, #36]	; 0x24
   43cf0:	sub	sp, fp, #16
   43cf4:	pop	{r4, r5, r6, sl, fp, pc}

00043cf8 <flatcc_json_printer_union_struct@@Base>:
   43cf8:	push	{r4, r5, r6, sl, fp, lr}
   43cfc:	add	fp, sp, #16
   43d00:	mov	r4, r0
   43d04:	ldr	r0, [r0, #20]
   43d08:	ldr	r3, [r4, #32]
   43d0c:	add	r3, r3, #1
   43d10:	str	r3, [r4, #32]
   43d14:	add	r3, r0, #1
   43d18:	str	r3, [r4, #20]
   43d1c:	mov	r3, #123	; 0x7b
   43d20:	strb	r3, [r0]
   43d24:	ldr	r0, [r1]
   43d28:	ldr	r1, [r0]
   43d2c:	add	r1, r0, r1
   43d30:	mov	r0, r4
   43d34:	blx	r2
   43d38:	ldrb	r1, [r4, #25]
   43d3c:	ldr	r0, [r4, #20]
   43d40:	cmp	r1, #0
   43d44:	beq	43e04 <flatcc_json_printer_union_struct@@Base+0x10c>
   43d48:	add	r1, r0, #1
   43d4c:	str	r1, [r4, #20]
   43d50:	mov	r1, #10
   43d54:	strb	r1, [r0]
   43d58:	ldr	r0, [r4, #32]
   43d5c:	sub	r2, r0, #1
   43d60:	str	r2, [r4, #32]
   43d64:	ldrb	r3, [r4, #25]
   43d68:	ldr	r0, [r4, #20]
   43d6c:	ldr	r1, [r4, #16]
   43d70:	mla	r6, r2, r3, r0
   43d74:	mul	r5, r2, r3
   43d78:	cmp	r6, r1
   43d7c:	bls	43dec <flatcc_json_printer_union_struct@@Base+0xf4>
   43d80:	cmp	r0, r1
   43d84:	bcc	43da0 <flatcc_json_printer_union_struct@@Base+0xa8>
   43d88:	ldr	r2, [r4, #44]	; 0x2c
   43d8c:	mov	r0, r4
   43d90:	mov	r1, #0
   43d94:	blx	r2
   43d98:	ldr	r1, [r4, #16]
   43d9c:	ldr	r0, [r4, #20]
   43da0:	sub	r6, r1, r0
   43da4:	cmp	r6, r5
   43da8:	bcs	43dec <flatcc_json_printer_union_struct@@Base+0xf4>
   43dac:	mov	r1, #32
   43db0:	mov	r2, r6
   43db4:	bl	14ee4 <memset@plt>
   43db8:	ldr	r0, [r4, #20]
   43dbc:	ldr	r2, [r4, #44]	; 0x2c
   43dc0:	mov	r1, #0
   43dc4:	add	r0, r0, r6
   43dc8:	str	r0, [r4, #20]
   43dcc:	mov	r0, r4
   43dd0:	blx	r2
   43dd4:	ldr	r1, [r4, #16]
   43dd8:	ldr	r0, [r4, #20]
   43ddc:	sub	r5, r5, r6
   43de0:	sub	r6, r1, r0
   43de4:	cmp	r5, r6
   43de8:	bhi	43dac <flatcc_json_printer_union_struct@@Base+0xb4>
   43dec:	mov	r1, #32
   43df0:	mov	r2, r5
   43df4:	bl	14ee4 <memset@plt>
   43df8:	ldr	r0, [r4, #20]
   43dfc:	add	r0, r0, r5
   43e00:	str	r0, [r4, #20]
   43e04:	add	r1, r0, #1
   43e08:	str	r1, [r4, #20]
   43e0c:	mov	r1, #125	; 0x7d
   43e10:	strb	r1, [r0]
   43e14:	pop	{r4, r5, r6, sl, fp, pc}

00043e18 <flatcc_json_printer_union_string@@Base>:
   43e18:	ldr	r1, [r1]
   43e1c:	ldr	r2, [r1]
   43e20:	ldr	r2, [r1, r2]!
   43e24:	add	r1, r1, #4
   43e28:	b	39060 <flatcc_json_printer_string@@Base+0x4>

00043e2c <flatcc_json_printer_embedded_struct_field@@Base>:
   43e2c:	push	{r4, r5, r6, r7, fp, lr}
   43e30:	add	fp, sp, #16
   43e34:	add	r7, fp, #8
   43e38:	mov	r5, r3
   43e3c:	mov	r3, r1
   43e40:	mov	r6, r2
   43e44:	mov	r4, r0
   43e48:	ldm	r7, {r1, r2, r7}
   43e4c:	cmp	r3, #0
   43e50:	beq	43e68 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   43e54:	ldr	r0, [r4, #20]
   43e58:	add	r3, r0, #1
   43e5c:	str	r3, [r4, #20]
   43e60:	mov	r3, #44	; 0x2c
   43e64:	strb	r3, [r0]
   43e68:	mov	r0, r4
   43e6c:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   43e70:	ldr	r1, [r4, #32]
   43e74:	ldr	r0, [r4, #20]
   43e78:	add	r1, r1, #1
   43e7c:	str	r1, [r4, #32]
   43e80:	add	r1, r0, #1
   43e84:	str	r1, [r4, #20]
   43e88:	mov	r1, #123	; 0x7b
   43e8c:	strb	r1, [r0]
   43e90:	add	r1, r6, r5
   43e94:	mov	r0, r4
   43e98:	blx	r7
   43e9c:	ldrb	r1, [r4, #25]
   43ea0:	ldr	r0, [r4, #20]
   43ea4:	cmp	r1, #0
   43ea8:	beq	43f68 <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   43eac:	add	r1, r0, #1
   43eb0:	str	r1, [r4, #20]
   43eb4:	mov	r1, #10
   43eb8:	strb	r1, [r0]
   43ebc:	ldr	r0, [r4, #32]
   43ec0:	sub	r2, r0, #1
   43ec4:	str	r2, [r4, #32]
   43ec8:	ldrb	r3, [r4, #25]
   43ecc:	ldr	r0, [r4, #20]
   43ed0:	ldr	r1, [r4, #16]
   43ed4:	mla	r7, r2, r3, r0
   43ed8:	mul	r5, r2, r3
   43edc:	cmp	r7, r1
   43ee0:	bls	43f50 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   43ee4:	cmp	r0, r1
   43ee8:	bcc	43f04 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   43eec:	ldr	r2, [r4, #44]	; 0x2c
   43ef0:	mov	r0, r4
   43ef4:	mov	r1, #0
   43ef8:	blx	r2
   43efc:	ldr	r1, [r4, #16]
   43f00:	ldr	r0, [r4, #20]
   43f04:	sub	r6, r1, r0
   43f08:	cmp	r6, r5
   43f0c:	bcs	43f50 <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   43f10:	mov	r1, #32
   43f14:	mov	r2, r6
   43f18:	bl	14ee4 <memset@plt>
   43f1c:	ldr	r0, [r4, #20]
   43f20:	ldr	r2, [r4, #44]	; 0x2c
   43f24:	mov	r1, #0
   43f28:	add	r0, r0, r6
   43f2c:	str	r0, [r4, #20]
   43f30:	mov	r0, r4
   43f34:	blx	r2
   43f38:	ldr	r1, [r4, #16]
   43f3c:	ldr	r0, [r4, #20]
   43f40:	sub	r5, r5, r6
   43f44:	sub	r6, r1, r0
   43f48:	cmp	r5, r6
   43f4c:	bhi	43f10 <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   43f50:	mov	r1, #32
   43f54:	mov	r2, r5
   43f58:	bl	14ee4 <memset@plt>
   43f5c:	ldr	r0, [r4, #20]
   43f60:	add	r0, r0, r5
   43f64:	str	r0, [r4, #20]
   43f68:	add	r1, r0, #1
   43f6c:	str	r1, [r4, #20]
   43f70:	mov	r1, #125	; 0x7d
   43f74:	strb	r1, [r0]
   43f78:	pop	{r4, r5, r6, r7, fp, pc}

00043f7c <flatcc_json_printer_struct_field@@Base>:
   43f7c:	push	{r4, r5, r6, r7, fp, lr}
   43f80:	add	fp, sp, #16
   43f84:	mov	r4, r0
   43f88:	mov	r0, #4
   43f8c:	add	r0, r0, r2, lsl #1
   43f90:	ldr	r2, [r1, #8]
   43f94:	cmp	r0, r2
   43f98:	popge	{r4, r5, r6, r7, fp, pc}
   43f9c:	ldr	r2, [r1, #4]
   43fa0:	add	r0, r2, r0
   43fa4:	ldrh	r0, [r0]
   43fa8:	cmp	r0, #0
   43fac:	ldrne	r2, [r1]
   43fb0:	addsne	r5, r2, r0
   43fb4:	bne	43fbc <flatcc_json_printer_struct_field@@Base+0x40>
   43fb8:	pop	{r4, r5, r6, r7, fp, pc}
   43fbc:	ldr	r0, [r1, #16]
   43fc0:	ldr	r7, [fp, #12]
   43fc4:	ldr	r2, [fp, #8]
   43fc8:	add	r6, r0, #1
   43fcc:	cmp	r0, #0
   43fd0:	str	r6, [r1, #16]
   43fd4:	beq	43fec <flatcc_json_printer_struct_field@@Base+0x70>
   43fd8:	ldr	r0, [r4, #20]
   43fdc:	add	r1, r0, #1
   43fe0:	str	r1, [r4, #20]
   43fe4:	mov	r1, #44	; 0x2c
   43fe8:	strb	r1, [r0]
   43fec:	mov	r0, r4
   43ff0:	mov	r1, r3
   43ff4:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   43ff8:	ldr	r1, [r4, #32]
   43ffc:	ldr	r0, [r4, #20]
   44000:	add	r1, r1, #1
   44004:	str	r1, [r4, #32]
   44008:	add	r1, r0, #1
   4400c:	str	r1, [r4, #20]
   44010:	mov	r1, #123	; 0x7b
   44014:	strb	r1, [r0]
   44018:	mov	r0, r4
   4401c:	mov	r1, r5
   44020:	blx	r7
   44024:	ldrb	r1, [r4, #25]
   44028:	ldr	r0, [r4, #20]
   4402c:	cmp	r1, #0
   44030:	beq	440f0 <flatcc_json_printer_struct_field@@Base+0x174>
   44034:	add	r1, r0, #1
   44038:	str	r1, [r4, #20]
   4403c:	mov	r1, #10
   44040:	strb	r1, [r0]
   44044:	ldr	r0, [r4, #32]
   44048:	sub	r2, r0, #1
   4404c:	str	r2, [r4, #32]
   44050:	ldrb	r3, [r4, #25]
   44054:	ldr	r0, [r4, #20]
   44058:	ldr	r1, [r4, #16]
   4405c:	mla	r7, r2, r3, r0
   44060:	mul	r5, r2, r3
   44064:	cmp	r7, r1
   44068:	bls	440d8 <flatcc_json_printer_struct_field@@Base+0x15c>
   4406c:	cmp	r0, r1
   44070:	bcc	4408c <flatcc_json_printer_struct_field@@Base+0x110>
   44074:	ldr	r2, [r4, #44]	; 0x2c
   44078:	mov	r0, r4
   4407c:	mov	r1, #0
   44080:	blx	r2
   44084:	ldr	r1, [r4, #16]
   44088:	ldr	r0, [r4, #20]
   4408c:	sub	r6, r1, r0
   44090:	cmp	r6, r5
   44094:	bcs	440d8 <flatcc_json_printer_struct_field@@Base+0x15c>
   44098:	mov	r1, #32
   4409c:	mov	r2, r6
   440a0:	bl	14ee4 <memset@plt>
   440a4:	ldr	r0, [r4, #20]
   440a8:	ldr	r2, [r4, #44]	; 0x2c
   440ac:	mov	r1, #0
   440b0:	add	r0, r0, r6
   440b4:	str	r0, [r4, #20]
   440b8:	mov	r0, r4
   440bc:	blx	r2
   440c0:	ldr	r1, [r4, #16]
   440c4:	ldr	r0, [r4, #20]
   440c8:	sub	r5, r5, r6
   440cc:	sub	r6, r1, r0
   440d0:	cmp	r5, r6
   440d4:	bhi	44098 <flatcc_json_printer_struct_field@@Base+0x11c>
   440d8:	mov	r1, #32
   440dc:	mov	r2, r5
   440e0:	bl	14ee4 <memset@plt>
   440e4:	ldr	r0, [r4, #20]
   440e8:	add	r0, r0, r5
   440ec:	str	r0, [r4, #20]
   440f0:	add	r1, r0, #1
   440f4:	str	r1, [r4, #20]
   440f8:	mov	r1, #125	; 0x7d
   440fc:	strb	r1, [r0]
   44100:	pop	{r4, r5, r6, r7, fp, pc}

00044104 <flatcc_json_printer_struct_as_root@@Base>:
   44104:	push	{r4, r5, r6, sl, fp, lr}
   44108:	add	fp, sp, #16
   4410c:	sub	sp, sp, #8
   44110:	cmp	r1, #0
   44114:	mov	r4, r0
   44118:	mov	r0, #0
   4411c:	cmpne	r2, #7
   44120:	str	r0, [sp, #4]
   44124:	bls	442dc <flatcc_json_printer_struct_as_root@@Base+0x1d8>
   44128:	mov	r5, r1
   4412c:	cmp	r3, #0
   44130:	beq	4415c <flatcc_json_printer_struct_as_root@@Base+0x58>
   44134:	add	r0, sp, #4
   44138:	mov	r1, r3
   4413c:	mov	r2, #4
   44140:	bl	14ef0 <strncpy@plt>
   44144:	ldr	r0, [sp, #4]
   44148:	cmp	r0, #0
   4414c:	beq	4415c <flatcc_json_printer_struct_as_root@@Base+0x58>
   44150:	ldr	r1, [r5, #4]
   44154:	cmp	r1, r0
   44158:	bne	4430c <flatcc_json_printer_struct_as_root@@Base+0x208>
   4415c:	ldr	r1, [r4, #32]
   44160:	ldr	r0, [r4, #20]
   44164:	ldr	r2, [fp, #8]
   44168:	add	r1, r1, #1
   4416c:	str	r1, [r4, #32]
   44170:	add	r1, r0, #1
   44174:	str	r1, [r4, #20]
   44178:	mov	r1, #123	; 0x7b
   4417c:	strb	r1, [r0]
   44180:	ldr	r0, [r5]
   44184:	add	r1, r5, r0
   44188:	mov	r0, r4
   4418c:	blx	r2
   44190:	ldrb	r1, [r4, #25]
   44194:	ldr	r0, [r4, #20]
   44198:	cmp	r1, #0
   4419c:	beq	4425c <flatcc_json_printer_struct_as_root@@Base+0x158>
   441a0:	add	r1, r0, #1
   441a4:	str	r1, [r4, #20]
   441a8:	mov	r1, #10
   441ac:	strb	r1, [r0]
   441b0:	ldr	r0, [r4, #32]
   441b4:	sub	r2, r0, #1
   441b8:	str	r2, [r4, #32]
   441bc:	ldrb	r3, [r4, #25]
   441c0:	ldr	r0, [r4, #20]
   441c4:	ldr	r1, [r4, #16]
   441c8:	mla	r6, r2, r3, r0
   441cc:	mul	r5, r2, r3
   441d0:	cmp	r6, r1
   441d4:	bls	44244 <flatcc_json_printer_struct_as_root@@Base+0x140>
   441d8:	cmp	r0, r1
   441dc:	bcc	441f8 <flatcc_json_printer_struct_as_root@@Base+0xf4>
   441e0:	ldr	r2, [r4, #44]	; 0x2c
   441e4:	mov	r0, r4
   441e8:	mov	r1, #0
   441ec:	blx	r2
   441f0:	ldr	r1, [r4, #16]
   441f4:	ldr	r0, [r4, #20]
   441f8:	sub	r6, r1, r0
   441fc:	cmp	r6, r5
   44200:	bcs	44244 <flatcc_json_printer_struct_as_root@@Base+0x140>
   44204:	mov	r1, #32
   44208:	mov	r2, r6
   4420c:	bl	14ee4 <memset@plt>
   44210:	ldr	r0, [r4, #20]
   44214:	ldr	r2, [r4, #44]	; 0x2c
   44218:	mov	r1, #0
   4421c:	add	r0, r0, r6
   44220:	str	r0, [r4, #20]
   44224:	mov	r0, r4
   44228:	blx	r2
   4422c:	ldr	r1, [r4, #16]
   44230:	ldr	r0, [r4, #20]
   44234:	sub	r5, r5, r6
   44238:	sub	r6, r1, r0
   4423c:	cmp	r5, r6
   44240:	bhi	44204 <flatcc_json_printer_struct_as_root@@Base+0x100>
   44244:	mov	r1, #32
   44248:	mov	r2, r5
   4424c:	bl	14ee4 <memset@plt>
   44250:	ldr	r0, [r4, #20]
   44254:	add	r0, r0, r5
   44258:	str	r0, [r4, #20]
   4425c:	add	r1, r0, #1
   44260:	str	r1, [r4, #20]
   44264:	mov	r1, #125	; 0x7d
   44268:	strb	r1, [r0]
   4426c:	ldrb	r0, [r4, #25]
   44270:	cmp	r0, #0
   44274:	beq	44298 <flatcc_json_printer_struct_as_root@@Base+0x194>
   44278:	ldr	r0, [r4, #32]
   4427c:	cmp	r0, #0
   44280:	bne	44298 <flatcc_json_printer_struct_as_root@@Base+0x194>
   44284:	ldr	r0, [r4, #20]
   44288:	add	r1, r0, #1
   4428c:	str	r1, [r4, #20]
   44290:	mov	r1, #10
   44294:	strb	r1, [r0]
   44298:	ldr	r2, [r4, #44]	; 0x2c
   4429c:	mov	r0, r4
   442a0:	mov	r1, #1
   442a4:	blx	r2
   442a8:	ldr	r1, [r4, #36]	; 0x24
   442ac:	mvn	r0, #0
   442b0:	cmp	r1, #0
   442b4:	beq	442c0 <flatcc_json_printer_struct_as_root@@Base+0x1bc>
   442b8:	sub	sp, fp, #16
   442bc:	pop	{r4, r5, r6, sl, fp, pc}
   442c0:	ldr	r1, [r4, #12]
   442c4:	ldr	r2, [r4, #20]
   442c8:	ldr	r0, [r4]
   442cc:	add	r1, r2, r1
   442d0:	sub	r0, r1, r0
   442d4:	sub	sp, fp, #16
   442d8:	pop	{r4, r5, r6, sl, fp, pc}
   442dc:	ldr	r0, [r4, #36]	; 0x24
   442e0:	movw	r2, #1019	; 0x3fb
   442e4:	cmp	r0, #0
   442e8:	moveq	r0, #1
   442ec:	streq	r0, [r4, #36]	; 0x24
   442f0:	ldr	r0, [pc, #68]	; 4433c <flatcc_json_printer_struct_as_root@@Base+0x238>
   442f4:	ldr	r1, [pc, #68]	; 44340 <flatcc_json_printer_struct_as_root@@Base+0x23c>
   442f8:	ldr	r3, [pc, #68]	; 44344 <flatcc_json_printer_struct_as_root@@Base+0x240>
   442fc:	add	r0, pc, r0
   44300:	add	r1, pc, r1
   44304:	add	r3, pc, r3
   44308:	bl	14f38 <__assert_fail@plt>
   4430c:	ldr	r0, [r4, #36]	; 0x24
   44310:	movw	r2, #1028	; 0x404
   44314:	cmp	r0, #0
   44318:	moveq	r0, #1
   4431c:	streq	r0, [r4, #36]	; 0x24
   44320:	ldr	r0, [pc, #32]	; 44348 <flatcc_json_printer_struct_as_root@@Base+0x244>
   44324:	ldr	r1, [pc, #32]	; 4434c <flatcc_json_printer_struct_as_root@@Base+0x248>
   44328:	ldr	r3, [pc, #32]	; 44350 <flatcc_json_printer_struct_as_root@@Base+0x24c>
   4432c:	add	r0, pc, r0
   44330:	add	r1, pc, r1
   44334:	add	r3, pc, r3
   44338:	bl	14f38 <__assert_fail@plt>
   4433c:	muleq	r0, r6, r0
   44340:	andeq	r6, r0, ip, ror #23
   44344:	andeq	r7, r0, sp, lsr #1
   44348:	ldrdeq	r7, [r0], -r4
   4434c:			; <UNDEFINED> instruction: 0x00006bbc
   44350:	andeq	r7, r0, sp, ror r0

00044354 <flatcc_json_printer_table_as_root@@Base>:
   44354:	push	{r4, r5, r6, sl, fp, lr}
   44358:	add	fp, sp, #16
   4435c:	sub	sp, sp, #24
   44360:	cmp	r1, #0
   44364:	mov	r4, r0
   44368:	mov	r0, #0
   4436c:	cmpne	r2, #7
   44370:	str	r0, [sp, #4]
   44374:	bls	44558 <flatcc_json_printer_table_as_root@@Base+0x204>
   44378:	mov	r5, r1
   4437c:	cmp	r3, #0
   44380:	beq	443ac <flatcc_json_printer_table_as_root@@Base+0x58>
   44384:	add	r0, sp, #4
   44388:	mov	r1, r3
   4438c:	mov	r2, #4
   44390:	bl	14ef0 <strncpy@plt>
   44394:	ldr	r0, [sp, #4]
   44398:	cmp	r0, #0
   4439c:	beq	443ac <flatcc_json_printer_table_as_root@@Base+0x58>
   443a0:	ldr	r1, [r5, #4]
   443a4:	cmp	r1, r0
   443a8:	bne	44588 <flatcc_json_printer_table_as_root@@Base+0x234>
   443ac:	ldr	r3, [r4, #32]
   443b0:	ldr	r1, [r4, #20]
   443b4:	ldr	r0, [r5]
   443b8:	ldr	r2, [fp, #8]
   443bc:	add	r3, r3, #1
   443c0:	str	r3, [r4, #32]
   443c4:	add	r3, r1, #1
   443c8:	str	r3, [r4, #20]
   443cc:	mov	r3, #123	; 0x7b
   443d0:	strb	r3, [r1]
   443d4:	mov	r1, #99	; 0x63
   443d8:	str	r1, [sp, #16]
   443dc:	mov	r1, #0
   443e0:	str	r1, [sp, #20]
   443e4:	add	r1, r5, r0
   443e8:	str	r1, [sp, #4]
   443ec:	ldr	r0, [r5, r0]
   443f0:	sub	r3, r1, r0
   443f4:	str	r3, [sp, #8]
   443f8:	ldrh	r0, [r1, -r0]
   443fc:	add	r1, sp, #4
   44400:	str	r0, [sp, #12]
   44404:	mov	r0, r4
   44408:	blx	r2
   4440c:	ldrb	r1, [r4, #25]
   44410:	ldr	r0, [r4, #20]
   44414:	cmp	r1, #0
   44418:	beq	444d8 <flatcc_json_printer_table_as_root@@Base+0x184>
   4441c:	add	r1, r0, #1
   44420:	str	r1, [r4, #20]
   44424:	mov	r1, #10
   44428:	strb	r1, [r0]
   4442c:	ldr	r0, [r4, #32]
   44430:	sub	r2, r0, #1
   44434:	str	r2, [r4, #32]
   44438:	ldrb	r3, [r4, #25]
   4443c:	ldr	r0, [r4, #20]
   44440:	ldr	r1, [r4, #16]
   44444:	mla	r6, r2, r3, r0
   44448:	mul	r5, r2, r3
   4444c:	cmp	r6, r1
   44450:	bls	444c0 <flatcc_json_printer_table_as_root@@Base+0x16c>
   44454:	cmp	r0, r1
   44458:	bcc	44474 <flatcc_json_printer_table_as_root@@Base+0x120>
   4445c:	ldr	r2, [r4, #44]	; 0x2c
   44460:	mov	r0, r4
   44464:	mov	r1, #0
   44468:	blx	r2
   4446c:	ldr	r1, [r4, #16]
   44470:	ldr	r0, [r4, #20]
   44474:	sub	r6, r1, r0
   44478:	cmp	r6, r5
   4447c:	bcs	444c0 <flatcc_json_printer_table_as_root@@Base+0x16c>
   44480:	mov	r1, #32
   44484:	mov	r2, r6
   44488:	bl	14ee4 <memset@plt>
   4448c:	ldr	r0, [r4, #20]
   44490:	ldr	r2, [r4, #44]	; 0x2c
   44494:	mov	r1, #0
   44498:	add	r0, r0, r6
   4449c:	str	r0, [r4, #20]
   444a0:	mov	r0, r4
   444a4:	blx	r2
   444a8:	ldr	r1, [r4, #16]
   444ac:	ldr	r0, [r4, #20]
   444b0:	sub	r5, r5, r6
   444b4:	sub	r6, r1, r0
   444b8:	cmp	r5, r6
   444bc:	bhi	44480 <flatcc_json_printer_table_as_root@@Base+0x12c>
   444c0:	mov	r1, #32
   444c4:	mov	r2, r5
   444c8:	bl	14ee4 <memset@plt>
   444cc:	ldr	r0, [r4, #20]
   444d0:	add	r0, r0, r5
   444d4:	str	r0, [r4, #20]
   444d8:	add	r1, r0, #1
   444dc:	str	r1, [r4, #20]
   444e0:	mov	r1, #125	; 0x7d
   444e4:	strb	r1, [r0]
   444e8:	ldrb	r0, [r4, #25]
   444ec:	cmp	r0, #0
   444f0:	beq	44514 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   444f4:	ldr	r0, [r4, #32]
   444f8:	cmp	r0, #0
   444fc:	bne	44514 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   44500:	ldr	r0, [r4, #20]
   44504:	add	r1, r0, #1
   44508:	str	r1, [r4, #20]
   4450c:	mov	r1, #10
   44510:	strb	r1, [r0]
   44514:	ldr	r2, [r4, #44]	; 0x2c
   44518:	mov	r0, r4
   4451c:	mov	r1, #1
   44520:	blx	r2
   44524:	ldr	r1, [r4, #36]	; 0x24
   44528:	mvn	r0, #0
   4452c:	cmp	r1, #0
   44530:	beq	4453c <flatcc_json_printer_table_as_root@@Base+0x1e8>
   44534:	sub	sp, fp, #16
   44538:	pop	{r4, r5, r6, sl, fp, pc}
   4453c:	ldr	r1, [r4, #12]
   44540:	ldr	r2, [r4, #20]
   44544:	ldr	r0, [r4]
   44548:	add	r1, r2, r1
   4454c:	sub	r0, r1, r0
   44550:	sub	sp, fp, #16
   44554:	pop	{r4, r5, r6, sl, fp, pc}
   44558:	ldr	r0, [r4, #36]	; 0x24
   4455c:	movw	r2, #1019	; 0x3fb
   44560:	cmp	r0, #0
   44564:	moveq	r0, #1
   44568:	streq	r0, [r4, #36]	; 0x24
   4456c:	ldr	r0, [pc, #68]	; 445b8 <flatcc_json_printer_table_as_root@@Base+0x264>
   44570:	ldr	r1, [pc, #68]	; 445bc <flatcc_json_printer_table_as_root@@Base+0x268>
   44574:	ldr	r3, [pc, #68]	; 445c0 <flatcc_json_printer_table_as_root@@Base+0x26c>
   44578:	add	r0, pc, r0
   4457c:	add	r1, pc, r1
   44580:	add	r3, pc, r3
   44584:	bl	14f38 <__assert_fail@plt>
   44588:	ldr	r0, [r4, #36]	; 0x24
   4458c:	movw	r2, #1028	; 0x404
   44590:	cmp	r0, #0
   44594:	moveq	r0, #1
   44598:	streq	r0, [r4, #36]	; 0x24
   4459c:	ldr	r0, [pc, #32]	; 445c4 <flatcc_json_printer_table_as_root@@Base+0x270>
   445a0:	ldr	r1, [pc, #32]	; 445c8 <flatcc_json_printer_table_as_root@@Base+0x274>
   445a4:	ldr	r3, [pc, #32]	; 445cc <flatcc_json_printer_table_as_root@@Base+0x278>
   445a8:	add	r0, pc, r0
   445ac:	add	r1, pc, r1
   445b0:	add	r3, pc, r3
   445b4:	bl	14f38 <__assert_fail@plt>
   445b8:	andeq	r6, r0, sl, lsl lr
   445bc:	andeq	r6, r0, r0, ror r9
   445c0:	andeq	r6, r0, r1, lsr lr
   445c4:	andeq	r6, r0, r8, asr lr
   445c8:	andeq	r6, r0, r0, asr #18
   445cc:	andeq	r6, r0, r1, lsl #28

000445d0 <flatcc_json_printer_struct_as_nested_root@@Base>:
   445d0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   445d4:	add	fp, sp, #24
   445d8:	sub	sp, sp, #8
   445dc:	mov	r6, r1
   445e0:	ldr	r1, [r1, #8]
   445e4:	mov	r4, r0
   445e8:	mov	r0, #4
   445ec:	add	r0, r0, r2, lsl #1
   445f0:	cmp	r0, r1
   445f4:	bge	44614 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   445f8:	ldr	r1, [r6, #4]
   445fc:	add	r0, r1, r0
   44600:	ldrh	r0, [r0]
   44604:	cmp	r0, #0
   44608:	ldrne	r1, [r6]
   4460c:	addsne	r0, r1, r0
   44610:	bne	4461c <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   44614:	sub	sp, fp, #24
   44618:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   4461c:	ldr	r7, [r0]
   44620:	mov	r1, #0
   44624:	ldr	r0, [r7, r0]!
   44628:	str	r1, [sp, #4]
   4462c:	cmp	r7, #0
   44630:	cmpne	r0, #7
   44634:	bls	447bc <flatcc_json_printer_struct_as_nested_root@@Base+0x1ec>
   44638:	ldr	r1, [fp, #12]
   4463c:	mov	r5, r3
   44640:	cmp	r1, #0
   44644:	beq	4466c <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   44648:	add	r0, sp, #4
   4464c:	mov	r2, #4
   44650:	bl	14ef0 <strncpy@plt>
   44654:	ldr	r0, [sp, #4]
   44658:	cmp	r0, #0
   4465c:	beq	4466c <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   44660:	ldr	r1, [r7, #4]
   44664:	cmp	r1, r0
   44668:	bne	447ec <flatcc_json_printer_struct_as_nested_root@@Base+0x21c>
   4466c:	ldr	r0, [r6, #16]
   44670:	ldr	r8, [fp, #16]
   44674:	ldr	r2, [fp, #8]
   44678:	add	r1, r0, #1
   4467c:	cmp	r0, #0
   44680:	str	r1, [r6, #16]
   44684:	beq	4469c <flatcc_json_printer_struct_as_nested_root@@Base+0xcc>
   44688:	ldr	r0, [r4, #20]
   4468c:	add	r1, r0, #1
   44690:	str	r1, [r4, #20]
   44694:	mov	r1, #44	; 0x2c
   44698:	strb	r1, [r0]
   4469c:	mov	r0, r4
   446a0:	mov	r1, r5
   446a4:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   446a8:	ldr	r1, [r4, #32]
   446ac:	ldr	r0, [r4, #20]
   446b0:	add	r1, r1, #1
   446b4:	str	r1, [r4, #32]
   446b8:	add	r1, r0, #1
   446bc:	str	r1, [r4, #20]
   446c0:	mov	r1, #123	; 0x7b
   446c4:	strb	r1, [r0]
   446c8:	ldr	r0, [r7]
   446cc:	add	r1, r7, r0
   446d0:	mov	r0, r4
   446d4:	blx	r8
   446d8:	ldrb	r1, [r4, #25]
   446dc:	ldr	r0, [r4, #20]
   446e0:	cmp	r1, #0
   446e4:	beq	447a4 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d4>
   446e8:	add	r1, r0, #1
   446ec:	str	r1, [r4, #20]
   446f0:	mov	r1, #10
   446f4:	strb	r1, [r0]
   446f8:	ldr	r0, [r4, #32]
   446fc:	sub	r2, r0, #1
   44700:	str	r2, [r4, #32]
   44704:	ldrb	r3, [r4, #25]
   44708:	ldr	r0, [r4, #20]
   4470c:	ldr	r1, [r4, #16]
   44710:	mla	r7, r2, r3, r0
   44714:	mul	r5, r2, r3
   44718:	cmp	r7, r1
   4471c:	bls	4478c <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   44720:	cmp	r0, r1
   44724:	bcc	44740 <flatcc_json_printer_struct_as_nested_root@@Base+0x170>
   44728:	ldr	r2, [r4, #44]	; 0x2c
   4472c:	mov	r0, r4
   44730:	mov	r1, #0
   44734:	blx	r2
   44738:	ldr	r1, [r4, #16]
   4473c:	ldr	r0, [r4, #20]
   44740:	sub	r6, r1, r0
   44744:	cmp	r6, r5
   44748:	bcs	4478c <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   4474c:	mov	r1, #32
   44750:	mov	r2, r6
   44754:	bl	14ee4 <memset@plt>
   44758:	ldr	r0, [r4, #20]
   4475c:	ldr	r2, [r4, #44]	; 0x2c
   44760:	mov	r1, #0
   44764:	add	r0, r0, r6
   44768:	str	r0, [r4, #20]
   4476c:	mov	r0, r4
   44770:	blx	r2
   44774:	ldr	r1, [r4, #16]
   44778:	ldr	r0, [r4, #20]
   4477c:	sub	r5, r5, r6
   44780:	sub	r6, r1, r0
   44784:	cmp	r5, r6
   44788:	bhi	4474c <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   4478c:	mov	r1, #32
   44790:	mov	r2, r5
   44794:	bl	14ee4 <memset@plt>
   44798:	ldr	r0, [r4, #20]
   4479c:	add	r0, r0, r5
   447a0:	str	r0, [r4, #20]
   447a4:	add	r1, r0, #1
   447a8:	str	r1, [r4, #20]
   447ac:	mov	r1, #125	; 0x7d
   447b0:	strb	r1, [r0]
   447b4:	sub	sp, fp, #24
   447b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   447bc:	ldr	r0, [r4, #36]	; 0x24
   447c0:	movw	r2, #1019	; 0x3fb
   447c4:	cmp	r0, #0
   447c8:	moveq	r0, #1
   447cc:	streq	r0, [r4, #36]	; 0x24
   447d0:	ldr	r0, [pc, #68]	; 4481c <flatcc_json_printer_struct_as_nested_root@@Base+0x24c>
   447d4:	ldr	r1, [pc, #68]	; 44820 <flatcc_json_printer_struct_as_nested_root@@Base+0x250>
   447d8:	ldr	r3, [pc, #68]	; 44824 <flatcc_json_printer_struct_as_nested_root@@Base+0x254>
   447dc:	add	r0, pc, r0
   447e0:	add	r1, pc, r1
   447e4:	add	r3, pc, r3
   447e8:	bl	14f38 <__assert_fail@plt>
   447ec:	ldr	r0, [r4, #36]	; 0x24
   447f0:	movw	r2, #1028	; 0x404
   447f4:	cmp	r0, #0
   447f8:	moveq	r0, #1
   447fc:	streq	r0, [r4, #36]	; 0x24
   44800:	ldr	r0, [pc, #32]	; 44828 <flatcc_json_printer_struct_as_nested_root@@Base+0x258>
   44804:	ldr	r1, [pc, #32]	; 4482c <flatcc_json_printer_struct_as_nested_root@@Base+0x25c>
   44808:	ldr	r3, [pc, #32]	; 44830 <flatcc_json_printer_struct_as_nested_root@@Base+0x260>
   4480c:	add	r0, pc, r0
   44810:	add	r1, pc, r1
   44814:	add	r3, pc, r3
   44818:	bl	14f38 <__assert_fail@plt>
   4481c:			; <UNDEFINED> instruction: 0x00006bb6
   44820:	andeq	r6, r0, ip, lsl #14
   44824:	andeq	r6, r0, sp, asr #23
   44828:	strdeq	r6, [r0], -r4
   4482c:	ldrdeq	r6, [r0], -ip
   44830:	muleq	r0, sp, fp

00044834 <flatcc_json_printer_table_as_nested_root@@Base>:
   44834:	push	{r4, r5, r6, r7, fp, lr}
   44838:	add	fp, sp, #16
   4483c:	sub	sp, sp, #24
   44840:	mov	r5, r1
   44844:	ldr	r1, [r1, #8]
   44848:	mov	r4, r0
   4484c:	mov	r0, #4
   44850:	add	r0, r0, r2, lsl #1
   44854:	cmp	r0, r1
   44858:	bge	44878 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   4485c:	ldr	r1, [r5, #4]
   44860:	add	r0, r1, r0
   44864:	ldrh	r0, [r0]
   44868:	cmp	r0, #0
   4486c:	ldrne	r1, [r5]
   44870:	addsne	r0, r1, r0
   44874:	bne	44880 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   44878:	sub	sp, fp, #16
   4487c:	pop	{r4, r5, r6, r7, fp, pc}
   44880:	ldr	r7, [r0]
   44884:	mov	r1, #0
   44888:	ldr	r0, [r7, r0]!
   4488c:	str	r1, [sp, #4]
   44890:	cmp	r0, #7
   44894:	bls	44a70 <flatcc_json_printer_table_as_nested_root@@Base+0x23c>
   44898:	ldr	r1, [fp, #12]
   4489c:	mov	r6, r3
   448a0:	cmp	r1, #0
   448a4:	beq	448cc <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   448a8:	add	r0, sp, #4
   448ac:	mov	r2, #4
   448b0:	bl	14ef0 <strncpy@plt>
   448b4:	ldr	r0, [sp, #4]
   448b8:	cmp	r0, #0
   448bc:	beq	448cc <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   448c0:	ldr	r1, [r7, #8]
   448c4:	cmp	r1, r0
   448c8:	bne	44aa0 <flatcc_json_printer_table_as_nested_root@@Base+0x26c>
   448cc:	ldr	r0, [r5, #16]
   448d0:	ldr	r2, [fp, #8]
   448d4:	add	r1, r0, #1
   448d8:	cmp	r0, #0
   448dc:	str	r1, [r5, #16]
   448e0:	beq	448f8 <flatcc_json_printer_table_as_nested_root@@Base+0xc4>
   448e4:	ldr	r0, [r4, #20]
   448e8:	add	r1, r0, #1
   448ec:	str	r1, [r4, #20]
   448f0:	mov	r1, #44	; 0x2c
   448f4:	strb	r1, [r0]
   448f8:	mov	r0, r4
   448fc:	mov	r1, r6
   44900:	bl	3a494 <flatcc_json_printer_string_field@@Base+0x90>
   44904:	ldr	r0, [r5, #12]
   44908:	subs	r0, r0, #1
   4490c:	beq	44a54 <flatcc_json_printer_table_as_nested_root@@Base+0x220>
   44910:	add	r1, r7, #4
   44914:	ldr	r7, [r4, #32]
   44918:	ldr	r2, [fp, #16]
   4491c:	ldr	r3, [r1]
   44920:	add	r7, r7, #1
   44924:	add	r1, r1, r3
   44928:	ldr	r3, [r4, #20]
   4492c:	str	r7, [r4, #32]
   44930:	add	r7, r3, #1
   44934:	str	r7, [r4, #20]
   44938:	mov	r7, #123	; 0x7b
   4493c:	strb	r7, [r3]
   44940:	str	r0, [sp, #16]
   44944:	mov	r0, #0
   44948:	str	r0, [sp, #20]
   4494c:	str	r1, [sp, #4]
   44950:	ldr	r0, [r1]
   44954:	sub	r3, r1, r0
   44958:	str	r3, [sp, #8]
   4495c:	ldrh	r0, [r1, -r0]
   44960:	add	r1, sp, #4
   44964:	str	r0, [sp, #12]
   44968:	mov	r0, r4
   4496c:	blx	r2
   44970:	ldrb	r1, [r4, #25]
   44974:	ldr	r0, [r4, #20]
   44978:	cmp	r1, #0
   4497c:	beq	44a3c <flatcc_json_printer_table_as_nested_root@@Base+0x208>
   44980:	add	r1, r0, #1
   44984:	str	r1, [r4, #20]
   44988:	mov	r1, #10
   4498c:	strb	r1, [r0]
   44990:	ldr	r0, [r4, #32]
   44994:	sub	r2, r0, #1
   44998:	str	r2, [r4, #32]
   4499c:	ldrb	r3, [r4, #25]
   449a0:	ldr	r0, [r4, #20]
   449a4:	ldr	r1, [r4, #16]
   449a8:	mla	r7, r2, r3, r0
   449ac:	mul	r5, r2, r3
   449b0:	cmp	r7, r1
   449b4:	bls	44a24 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   449b8:	cmp	r0, r1
   449bc:	bcc	449d8 <flatcc_json_printer_table_as_nested_root@@Base+0x1a4>
   449c0:	ldr	r2, [r4, #44]	; 0x2c
   449c4:	mov	r0, r4
   449c8:	mov	r1, #0
   449cc:	blx	r2
   449d0:	ldr	r1, [r4, #16]
   449d4:	ldr	r0, [r4, #20]
   449d8:	sub	r6, r1, r0
   449dc:	cmp	r6, r5
   449e0:	bcs	44a24 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   449e4:	mov	r1, #32
   449e8:	mov	r2, r6
   449ec:	bl	14ee4 <memset@plt>
   449f0:	ldr	r0, [r4, #20]
   449f4:	ldr	r2, [r4, #44]	; 0x2c
   449f8:	mov	r1, #0
   449fc:	add	r0, r0, r6
   44a00:	str	r0, [r4, #20]
   44a04:	mov	r0, r4
   44a08:	blx	r2
   44a0c:	ldr	r1, [r4, #16]
   44a10:	ldr	r0, [r4, #20]
   44a14:	sub	r5, r5, r6
   44a18:	sub	r6, r1, r0
   44a1c:	cmp	r5, r6
   44a20:	bhi	449e4 <flatcc_json_printer_table_as_nested_root@@Base+0x1b0>
   44a24:	mov	r1, #32
   44a28:	mov	r2, r5
   44a2c:	bl	14ee4 <memset@plt>
   44a30:	ldr	r0, [r4, #20]
   44a34:	add	r0, r0, r5
   44a38:	str	r0, [r4, #20]
   44a3c:	add	r1, r0, #1
   44a40:	str	r1, [r4, #20]
   44a44:	mov	r1, #125	; 0x7d
   44a48:	strb	r1, [r0]
   44a4c:	sub	sp, fp, #16
   44a50:	pop	{r4, r5, r6, r7, fp, pc}
   44a54:	ldr	r0, [r4, #36]	; 0x24
   44a58:	cmp	r0, #0
   44a5c:	bne	44878 <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   44a60:	mov	r0, #2
   44a64:	str	r0, [r4, #36]	; 0x24
   44a68:	sub	sp, fp, #16
   44a6c:	pop	{r4, r5, r6, r7, fp, pc}
   44a70:	ldr	r0, [r4, #36]	; 0x24
   44a74:	movw	r2, #1019	; 0x3fb
   44a78:	cmp	r0, #0
   44a7c:	moveq	r0, #1
   44a80:	streq	r0, [r4, #36]	; 0x24
   44a84:	ldr	r0, [pc, #68]	; 44ad0 <flatcc_json_printer_table_as_nested_root@@Base+0x29c>
   44a88:	ldr	r1, [pc, #68]	; 44ad4 <flatcc_json_printer_table_as_nested_root@@Base+0x2a0>
   44a8c:	ldr	r3, [pc, #68]	; 44ad8 <flatcc_json_printer_table_as_nested_root@@Base+0x2a4>
   44a90:	add	r0, pc, r0
   44a94:	add	r1, pc, r1
   44a98:	add	r3, pc, r3
   44a9c:	bl	14f38 <__assert_fail@plt>
   44aa0:	ldr	r0, [r4, #36]	; 0x24
   44aa4:	movw	r2, #1028	; 0x404
   44aa8:	cmp	r0, #0
   44aac:	moveq	r0, #1
   44ab0:	streq	r0, [r4, #36]	; 0x24
   44ab4:	ldr	r0, [pc, #32]	; 44adc <flatcc_json_printer_table_as_nested_root@@Base+0x2a8>
   44ab8:	ldr	r1, [pc, #32]	; 44ae0 <flatcc_json_printer_table_as_nested_root@@Base+0x2ac>
   44abc:	ldr	r3, [pc, #32]	; 44ae4 <flatcc_json_printer_table_as_nested_root@@Base+0x2b0>
   44ac0:	add	r0, pc, r0
   44ac4:	add	r1, pc, r1
   44ac8:	add	r3, pc, r3
   44acc:	bl	14f38 <__assert_fail@plt>
   44ad0:	andeq	r6, r0, r2, lsl #18
   44ad4:	andeq	r6, r0, r8, asr r4
   44ad8:	andeq	r6, r0, r9, lsl r9
   44adc:	andeq	r6, r0, r0, asr #18
   44ae0:	andeq	r6, r0, r8, lsr #8
   44ae4:	andeq	r6, r0, r9, ror #17

00044ae8 <flatcc_json_printer_init@@Base>:
   44ae8:	push	{r4, r5, r6, sl, fp, lr}
   44aec:	add	fp, sp, #16
   44af0:	vmov.i32	q8, #0	; 0x00000000
   44af4:	mov	r5, r0
   44af8:	mov	r4, #0
   44afc:	cmp	r1, #0
   44b00:	movw	r6, #16448	; 0x4040
   44b04:	str	r4, [r0, #32]
   44b08:	mov	r0, #36	; 0x24
   44b0c:	mov	r2, r5
   44b10:	vst1.32	{d16-d17}, [r2], r0
   44b14:	add	r0, r5, #16
   44b18:	str	r4, [r2]
   44b1c:	vst1.32	{d16-d17}, [r0]
   44b20:	ldr	r0, [pc, #96]	; 44b88 <flatcc_json_printer_init@@Base+0xa0>
   44b24:	ldr	r0, [pc, r0]
   44b28:	ldr	r0, [r0]
   44b2c:	ldr	r2, [pc, #88]	; 44b8c <flatcc_json_printer_init@@Base+0xa4>
   44b30:	movne	r0, r1
   44b34:	str	r0, [r5, #40]	; 0x28
   44b38:	movw	r0, #16448	; 0x4040
   44b3c:	add	r2, pc, r2
   44b40:	str	r2, [r5, #44]	; 0x2c
   44b44:	bl	14e90 <malloc@plt>
   44b48:	cmp	r0, #0
   44b4c:	str	r0, [r5]
   44b50:	beq	44b7c <flatcc_json_printer_init@@Base+0x94>
   44b54:	mov	r1, #16384	; 0x4000
   44b58:	str	r6, [r5, #4]
   44b5c:	str	r1, [r5, #8]
   44b60:	mov	r1, #1
   44b64:	strb	r1, [r5, #24]
   44b68:	add	r1, r0, #16384	; 0x4000
   44b6c:	str	r1, [r5, #16]
   44b70:	str	r0, [r5, #20]
   44b74:	mov	r0, r4
   44b78:	pop	{r4, r5, r6, sl, fp, pc}
   44b7c:	mvn	r4, #0
   44b80:	mov	r0, r4
   44b84:	pop	{r4, r5, r6, sl, fp, pc}
   44b88:	andeq	r7, r1, r0, asr r5
   44b8c:	andeq	r0, r0, ip, asr #32
   44b90:	push	{r4, r5, r6, sl, fp, lr}
   44b94:	add	fp, sp, #16
   44b98:	mov	r4, r0
   44b9c:	cmp	r1, #0
   44ba0:	beq	44bac <flatcc_json_printer_init@@Base+0xc4>
   44ba4:	ldr	r5, [r4, #20]
   44ba8:	b	44bbc <flatcc_json_printer_init@@Base+0xd4>
   44bac:	ldr	r6, [r4, #16]
   44bb0:	ldr	r5, [r4, #20]
   44bb4:	cmp	r5, r6
   44bb8:	bcs	44be8 <flatcc_json_printer_init@@Base+0x100>
   44bbc:	ldr	r0, [r4]
   44bc0:	ldr	r3, [r4, #40]	; 0x28
   44bc4:	mov	r2, #1
   44bc8:	sub	r5, r5, r0
   44bcc:	mov	r1, r5
   44bd0:	bl	14e84 <fwrite@plt>
   44bd4:	ldr	r1, [r4, #12]
   44bd8:	ldr	r0, [r4]
   44bdc:	str	r0, [r4, #20]
   44be0:	add	r1, r1, r5
   44be4:	b	44c2c <flatcc_json_printer_init@@Base+0x144>
   44be8:	ldr	r0, [r4]
   44bec:	ldr	r1, [r4, #8]
   44bf0:	ldr	r3, [r4, #40]	; 0x28
   44bf4:	mov	r2, #1
   44bf8:	bl	14e84 <fwrite@plt>
   44bfc:	ldr	r0, [r4]
   44c00:	ldr	r1, [r4, #8]
   44c04:	sub	r5, r5, r6
   44c08:	mov	r2, r5
   44c0c:	add	r1, r0, r1
   44c10:	bl	14e54 <memcpy@plt>
   44c14:	ldr	r0, [r4]
   44c18:	ldr	r1, [r4, #8]
   44c1c:	ldr	r2, [r4, #12]
   44c20:	add	r0, r0, r5
   44c24:	add	r1, r2, r1
   44c28:	str	r0, [r4, #20]
   44c2c:	str	r1, [r4, #12]
   44c30:	mov	r1, #0
   44c34:	strb	r1, [r0]
   44c38:	pop	{r4, r5, r6, sl, fp, pc}

00044c3c <flatcc_json_printer_init_buffer@@Base>:
   44c3c:	push	{fp, lr}
   44c40:	mov	fp, sp
   44c44:	cmp	r2, #63	; 0x3f
   44c48:	bls	44c88 <flatcc_json_printer_init_buffer@@Base+0x4c>
   44c4c:	vmov.i32	q8, #0	; 0x00000000
   44c50:	add	r3, r0, #12
   44c54:	vst1.32	{d16-d17}, [r3]
   44c58:	ldr	r3, [pc, #72]	; 44ca8 <flatcc_json_printer_init_buffer@@Base+0x6c>
   44c5c:	add	r3, pc, r3
   44c60:	str	r3, [r0, #44]	; 0x2c
   44c64:	add	r3, r0, #28
   44c68:	vst1.32	{d16-d17}, [r3]
   44c6c:	sub	r3, r2, #64	; 0x40
   44c70:	stm	r0, {r1, r2, r3}
   44c74:	add	r2, r1, r3
   44c78:	str	r2, [r0, #16]
   44c7c:	str	r1, [r0, #20]
   44c80:	mov	r0, #0
   44c84:	pop	{fp, pc}
   44c88:	ldr	r0, [pc, #28]	; 44cac <flatcc_json_printer_init_buffer@@Base+0x70>
   44c8c:	ldr	r1, [pc, #28]	; 44cb0 <flatcc_json_printer_init_buffer@@Base+0x74>
   44c90:	ldr	r3, [pc, #28]	; 44cb4 <flatcc_json_printer_init_buffer@@Base+0x78>
   44c94:	movw	r2, #1165	; 0x48d
   44c98:	add	r0, pc, r0
   44c9c:	add	r1, pc, r1
   44ca0:	add	r3, pc, r3
   44ca4:	bl	14f38 <__assert_fail@plt>
   44ca8:	andeq	r0, r0, r4, asr r0
   44cac:	andeq	r6, r0, r6, lsl #7
   44cb0:	andeq	r6, r0, r0, asr r2
   44cb4:	andeq	r6, r0, r7, lsr #7
   44cb8:	ldr	r2, [r0, #16]
   44cbc:	ldr	r1, [r0, #20]
   44cc0:	cmp	r1, r2
   44cc4:	bcs	44cd0 <flatcc_json_printer_init_buffer@@Base+0x94>
   44cc8:	mov	r2, r1
   44ccc:	b	44cf8 <flatcc_json_printer_init_buffer@@Base+0xbc>
   44cd0:	ldr	r2, [r0, #36]	; 0x24
   44cd4:	cmp	r2, #0
   44cd8:	moveq	r2, #3
   44cdc:	streq	r2, [r0, #36]	; 0x24
   44ce0:	ldr	r2, [r0]
   44ce4:	ldr	r3, [r0, #12]
   44ce8:	sub	r1, r1, r2
   44cec:	str	r2, [r0, #20]
   44cf0:	add	r1, r1, r3
   44cf4:	str	r1, [r0, #12]
   44cf8:	mov	r0, #0
   44cfc:	strb	r0, [r2]
   44d00:	bx	lr

00044d04 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   44d04:	push	{r4, r5, fp, lr}
   44d08:	add	fp, sp, #8
   44d0c:	vmov.i32	q8, #0	; 0x00000000
   44d10:	cmp	r1, #0
   44d14:	mov	r5, r1
   44d18:	mov	r4, r0
   44d1c:	add	r0, r0, #28
   44d20:	movweq	r5, #4096	; 0x1000
   44d24:	cmp	r5, #64	; 0x40
   44d28:	vst1.32	{d16-d17}, [r0]
   44d2c:	add	r0, r4, #12
   44d30:	movls	r5, #64	; 0x40
   44d34:	vst1.32	{d16-d17}, [r0]
   44d38:	mov	r0, r5
   44d3c:	bl	14e90 <malloc@plt>
   44d40:	mov	r1, r0
   44d44:	mov	r0, #1
   44d48:	strb	r0, [r4, #24]
   44d4c:	sub	r0, r5, #64	; 0x40
   44d50:	stm	r4, {r1, r5}
   44d54:	cmp	r1, #0
   44d58:	str	r0, [r4, #8]
   44d5c:	add	r0, r1, r0
   44d60:	ldr	r2, [pc, #32]	; 44d88 <flatcc_json_printer_init_dynamic_buffer@@Base+0x84>
   44d64:	add	r2, pc, r2
   44d68:	str	r2, [r4, #44]	; 0x2c
   44d6c:	str	r0, [r4, #16]
   44d70:	mov	r0, #0
   44d74:	moveq	r0, #3
   44d78:	str	r1, [r4, #20]
   44d7c:	streq	r0, [r4, #36]	; 0x24
   44d80:	mvneq	r0, #0
   44d84:	pop	{r4, r5, fp, pc}
   44d88:	andeq	r0, r0, r0, lsr #32
   44d8c:	push	{r4, r5, fp, lr}
   44d90:	add	fp, sp, #8
   44d94:	mov	r4, r0
   44d98:	ldr	r0, [r0]
   44d9c:	mov	r1, #0
   44da0:	ldr	r5, [r4, #20]
   44da4:	strb	r1, [r5], -r0
   44da8:	ldr	r0, [r4, #16]
   44dac:	ldr	r1, [r4, #20]
   44db0:	cmp	r1, r0
   44db4:	popcc	{r4, r5, fp, pc}
   44db8:	ldm	r4, {r0, r1}
   44dbc:	lsl	r1, r1, #1
   44dc0:	bl	14e78 <realloc@plt>
   44dc4:	cmp	r0, #0
   44dc8:	beq	44dfc <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   44dcc:	str	r0, [r4]
   44dd0:	mvn	r3, #63	; 0x3f
   44dd4:	add	r1, r0, r5
   44dd8:	ldr	r2, [r4, #4]
   44ddc:	add	r3, r3, r2, lsl #1
   44de0:	lsl	r2, r2, #1
   44de4:	add	r0, r0, r3
   44de8:	str	r3, [r4, #8]
   44dec:	str	r2, [r4, #4]
   44df0:	str	r0, [r4, #16]
   44df4:	str	r1, [r4, #20]
   44df8:	b	44e20 <flatcc_json_printer_init_dynamic_buffer@@Base+0x11c>
   44dfc:	ldr	r0, [r4, #36]	; 0x24
   44e00:	cmp	r0, #0
   44e04:	moveq	r0, #3
   44e08:	streq	r0, [r4, #36]	; 0x24
   44e0c:	ldr	r0, [r4, #12]
   44e10:	ldr	r1, [r4]
   44e14:	add	r0, r0, r5
   44e18:	str	r1, [r4, #20]
   44e1c:	str	r0, [r4, #12]
   44e20:	mov	r0, #0
   44e24:	strb	r0, [r1]
   44e28:	pop	{r4, r5, fp, pc}

00044e2c <flatcc_json_printer_get_buffer@@Base>:
   44e2c:	push	{r4, r5, fp, lr}
   44e30:	add	fp, sp, #8
   44e34:	ldr	r2, [r0, #44]	; 0x2c
   44e38:	mov	r4, r1
   44e3c:	mov	r1, #0
   44e40:	mov	r5, r0
   44e44:	blx	r2
   44e48:	cmp	r4, #0
   44e4c:	beq	44e64 <flatcc_json_printer_get_buffer@@Base+0x38>
   44e50:	ldr	r0, [r5]
   44e54:	ldr	r1, [r5, #20]
   44e58:	sub	r1, r1, r0
   44e5c:	str	r1, [r4]
   44e60:	pop	{r4, r5, fp, pc}
   44e64:	ldr	r0, [r5]
   44e68:	pop	{r4, r5, fp, pc}

00044e6c <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   44e6c:	push	{r4, r5, fp, lr}
   44e70:	add	fp, sp, #8
   44e74:	ldr	r2, [r0, #44]	; 0x2c
   44e78:	mov	r5, r1
   44e7c:	mov	r1, #0
   44e80:	mov	r4, r0
   44e84:	blx	r2
   44e88:	cmp	r5, #0
   44e8c:	beq	44ea4 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   44e90:	ldr	r0, [r4]
   44e94:	ldr	r1, [r4, #20]
   44e98:	sub	r1, r1, r0
   44e9c:	str	r1, [r5]
   44ea0:	b	44ea8 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   44ea4:	ldr	r0, [r4]
   44ea8:	vmov.i32	q8, #0	; 0x00000000
   44eac:	mov	r1, #32
   44eb0:	add	r2, r4, #16
   44eb4:	vst1.32	{d16-d17}, [r4], r1
   44eb8:	vst1.32	{d16-d17}, [r2]
   44ebc:	vst1.32	{d16-d17}, [r4]
   44ec0:	pop	{r4, r5, fp, pc}

00044ec4 <flatcc_json_printer_clear@@Base>:
   44ec4:	push	{r4, sl, fp, lr}
   44ec8:	add	fp, sp, #8
   44ecc:	mov	r4, r0
   44ed0:	ldrb	r0, [r0, #24]
   44ed4:	cmp	r0, #0
   44ed8:	beq	44eec <flatcc_json_printer_clear@@Base+0x28>
   44edc:	ldr	r0, [r4]
   44ee0:	cmp	r0, #0
   44ee4:	beq	44eec <flatcc_json_printer_clear@@Base+0x28>
   44ee8:	bl	14e48 <free@plt>
   44eec:	vmov.i32	q8, #0	; 0x00000000
   44ef0:	mov	r0, #32
   44ef4:	add	r1, r4, #16
   44ef8:	vst1.32	{d16-d17}, [r4], r0
   44efc:	vst1.32	{d16-d17}, [r1]
   44f00:	vst1.32	{d16-d17}, [r4]
   44f04:	pop	{r4, sl, fp, pc}
   44f08:	cmp	r2, #0
   44f0c:	bxeq	lr
   44f10:	push	{r4, r5, fp, lr}
   44f14:	add	fp, sp, #8
   44f18:	ldr	lr, [r2]
   44f1c:	bic	ip, r3, #224	; 0xe0
   44f20:	cmp	ip, #0
   44f24:	beq	44f44 <flatcc_json_printer_clear@@Base+0x80>
   44f28:	cmp	ip, #1
   44f2c:	bne	4500c <flatcc_json_printer_clear@@Base+0x148>
   44f30:	ldr	ip, [pc, #288]	; 45058 <flatcc_json_printer_clear@@Base+0x194>
   44f34:	add	ip, pc, ip
   44f38:	cmp	lr, #3
   44f3c:	bcs	44f54 <flatcc_json_printer_clear@@Base+0x90>
   44f40:	b	44fb4 <flatcc_json_printer_clear@@Base+0xf0>
   44f44:	ldr	ip, [pc, #264]	; 45054 <flatcc_json_printer_clear@@Base+0x190>
   44f48:	add	ip, pc, ip
   44f4c:	cmp	lr, #3
   44f50:	bcc	44fb4 <flatcc_json_printer_clear@@Base+0xf0>
   44f54:	ldrb	r4, [r1]
   44f58:	sub	lr, lr, #3
   44f5c:	cmp	lr, #2
   44f60:	ldrb	r4, [ip, r4, lsr #2]
   44f64:	strb	r4, [r0]
   44f68:	ldrb	r5, [r1, #1]
   44f6c:	ldrb	r4, [r1]
   44f70:	lsr	r5, r5, #4
   44f74:	bfi	r5, r4, #4, #2
   44f78:	ldrb	r4, [ip, r5]
   44f7c:	strb	r4, [r0, #1]
   44f80:	ldrb	r5, [r1, #2]
   44f84:	ldrb	r4, [r1, #1]
   44f88:	lsr	r5, r5, #6
   44f8c:	bfi	r5, r4, #2, #4
   44f90:	ldrb	r4, [ip, r5]
   44f94:	strb	r4, [r0, #2]
   44f98:	ldrb	r4, [r1, #2]
   44f9c:	add	r1, r1, #3
   44fa0:	and	r4, r4, #63	; 0x3f
   44fa4:	ldrb	r4, [ip, r4]
   44fa8:	strb	r4, [r0, #3]
   44fac:	add	r0, r0, #4
   44fb0:	bhi	44f54 <flatcc_json_printer_clear@@Base+0x90>
   44fb4:	and	r3, r3, #128	; 0x80
   44fb8:	cmp	lr, #1
   44fbc:	beq	45014 <flatcc_json_printer_clear@@Base+0x150>
   44fc0:	cmp	lr, #2
   44fc4:	bne	4503c <flatcc_json_printer_clear@@Base+0x178>
   44fc8:	ldrb	r5, [r1]
   44fcc:	cmp	r3, #0
   44fd0:	ldrb	r5, [ip, r5, lsr #2]
   44fd4:	strb	r5, [r0]
   44fd8:	ldrb	r4, [r1, #1]
   44fdc:	ldrb	r5, [r1]
   44fe0:	lsr	r4, r4, #4
   44fe4:	bfi	r4, r5, #4, #2
   44fe8:	ldrb	r5, [ip, r4]
   44fec:	strb	r5, [r0, #1]
   44ff0:	ldrb	r1, [r1, #1]
   44ff4:	and	r1, r1, #15
   44ff8:	ldrb	r1, [ip, r1, lsl #2]
   44ffc:	strb	r1, [r0, #2]
   45000:	movne	r1, #61	; 0x3d
   45004:	strbne	r1, [r0, #3]
   45008:	b	4503c <flatcc_json_printer_clear@@Base+0x178>
   4500c:	mov	r0, lr
   45010:	b	45044 <flatcc_json_printer_clear@@Base+0x180>
   45014:	ldrb	r5, [r1]
   45018:	cmp	r3, #0
   4501c:	ldrb	r5, [ip, r5, lsr #2]
   45020:	strb	r5, [r0]
   45024:	ldrb	r1, [r1]
   45028:	and	r1, r1, #3
   4502c:	ldrb	r1, [ip, r1, lsl #4]
   45030:	strb	r1, [r0, #1]
   45034:	movwne	r1, #15677	; 0x3d3d
   45038:	strhne	r1, [r0, #2]
   4503c:	ldr	lr, [r2]
   45040:	mov	r0, #0
   45044:	sub	r0, lr, r0
   45048:	str	r0, [r2]
   4504c:	pop	{r4, r5, fp, lr}
   45050:	bx	lr
   45054:	andeq	r6, r0, r8, asr #7
   45058:	andeq	r6, r0, sp, lsl r4
   4505c:	eor	r1, r1, #-2147483648	; 0x80000000
   45060:	b	45068 <flatcc_json_printer_clear@@Base+0x1a4>
   45064:	eor	r3, r3, #-2147483648	; 0x80000000
   45068:	push	{r4, r5, lr}
   4506c:	lsl	r4, r1, #1
   45070:	lsl	r5, r3, #1
   45074:	teq	r4, r5
   45078:	teqeq	r0, r2
   4507c:	orrsne	ip, r4, r0
   45080:	orrsne	ip, r5, r2
   45084:	mvnsne	ip, r4, asr #21
   45088:	mvnsne	ip, r5, asr #21
   4508c:	beq	45278 <flatcc_json_printer_clear@@Base+0x3b4>
   45090:	lsr	r4, r4, #21
   45094:	rsbs	r5, r4, r5, lsr #21
   45098:	rsblt	r5, r5, #0
   4509c:	ble	450bc <flatcc_json_printer_clear@@Base+0x1f8>
   450a0:	add	r4, r4, r5
   450a4:	eor	r2, r0, r2
   450a8:	eor	r3, r1, r3
   450ac:	eor	r0, r2, r0
   450b0:	eor	r1, r3, r1
   450b4:	eor	r2, r0, r2
   450b8:	eor	r3, r1, r3
   450bc:	cmp	r5, #54	; 0x36
   450c0:	pophi	{r4, r5, pc}
   450c4:	tst	r1, #-2147483648	; 0x80000000
   450c8:	lsl	r1, r1, #12
   450cc:	mov	ip, #1048576	; 0x100000
   450d0:	orr	r1, ip, r1, lsr #12
   450d4:	beq	450e0 <flatcc_json_printer_clear@@Base+0x21c>
   450d8:	rsbs	r0, r0, #0
   450dc:	rsc	r1, r1, #0
   450e0:	tst	r3, #-2147483648	; 0x80000000
   450e4:	lsl	r3, r3, #12
   450e8:	orr	r3, ip, r3, lsr #12
   450ec:	beq	450f8 <flatcc_json_printer_clear@@Base+0x234>
   450f0:	rsbs	r2, r2, #0
   450f4:	rsc	r3, r3, #0
   450f8:	teq	r4, r5
   450fc:	beq	45260 <flatcc_json_printer_clear@@Base+0x39c>
   45100:	sub	r4, r4, #1
   45104:	rsbs	lr, r5, #32
   45108:	blt	45124 <flatcc_json_printer_clear@@Base+0x260>
   4510c:	lsl	ip, r2, lr
   45110:	adds	r0, r0, r2, lsr r5
   45114:	adc	r1, r1, #0
   45118:	adds	r0, r0, r3, lsl lr
   4511c:	adcs	r1, r1, r3, asr r5
   45120:	b	45140 <flatcc_json_printer_clear@@Base+0x27c>
   45124:	sub	r5, r5, #32
   45128:	add	lr, lr, #32
   4512c:	cmp	r2, #1
   45130:	lsl	ip, r3, lr
   45134:	orrcs	ip, ip, #2
   45138:	adds	r0, r0, r3, asr r5
   4513c:	adcs	r1, r1, r3, asr #31
   45140:	and	r5, r1, #-2147483648	; 0x80000000
   45144:	bpl	45154 <flatcc_json_printer_clear@@Base+0x290>
   45148:	rsbs	ip, ip, #0
   4514c:	rscs	r0, r0, #0
   45150:	rsc	r1, r1, #0
   45154:	cmp	r1, #1048576	; 0x100000
   45158:	bcc	45198 <flatcc_json_printer_clear@@Base+0x2d4>
   4515c:	cmp	r1, #2097152	; 0x200000
   45160:	bcc	45180 <flatcc_json_printer_clear@@Base+0x2bc>
   45164:	lsrs	r1, r1, #1
   45168:	rrxs	r0, r0
   4516c:	rrx	ip, ip
   45170:	add	r4, r4, #1
   45174:	lsl	r2, r4, #21
   45178:	cmn	r2, #4194304	; 0x400000
   4517c:	bcs	452d8 <flatcc_json_printer_clear@@Base+0x414>
   45180:	cmp	ip, #-2147483648	; 0x80000000
   45184:	lsrseq	ip, r0, #1
   45188:	adcs	r0, r0, #0
   4518c:	adc	r1, r1, r4, lsl #20
   45190:	orr	r1, r1, r5
   45194:	pop	{r4, r5, pc}
   45198:	lsls	ip, ip, #1
   4519c:	adcs	r0, r0, r0
   451a0:	adc	r1, r1, r1
   451a4:	tst	r1, #1048576	; 0x100000
   451a8:	sub	r4, r4, #1
   451ac:	bne	45180 <flatcc_json_printer_clear@@Base+0x2bc>
   451b0:	teq	r1, #0
   451b4:	moveq	r1, r0
   451b8:	moveq	r0, #0
   451bc:	clz	r3, r1
   451c0:	addeq	r3, r3, #32
   451c4:	sub	r3, r3, #11
   451c8:	subs	r2, r3, #32
   451cc:	bge	451f0 <flatcc_json_printer_clear@@Base+0x32c>
   451d0:	adds	r2, r2, #12
   451d4:	ble	451ec <flatcc_json_printer_clear@@Base+0x328>
   451d8:	add	ip, r2, #20
   451dc:	rsb	r2, r2, #12
   451e0:	lsl	r0, r1, ip
   451e4:	lsr	r1, r1, r2
   451e8:	b	45200 <flatcc_json_printer_clear@@Base+0x33c>
   451ec:	add	r2, r2, #20
   451f0:	rsble	ip, r2, #32
   451f4:	lsl	r1, r1, r2
   451f8:	orrle	r1, r1, r0, lsr ip
   451fc:	lslle	r0, r0, r2
   45200:	subs	r4, r4, r3
   45204:	addge	r1, r1, r4, lsl #20
   45208:	orrge	r1, r1, r5
   4520c:	popge	{r4, r5, pc}
   45210:	mvn	r4, r4
   45214:	subs	r4, r4, #31
   45218:	bge	45254 <flatcc_json_printer_clear@@Base+0x390>
   4521c:	adds	r4, r4, #12
   45220:	bgt	4523c <flatcc_json_printer_clear@@Base+0x378>
   45224:	add	r4, r4, #20
   45228:	rsb	r2, r4, #32
   4522c:	lsr	r0, r0, r4
   45230:	orr	r0, r0, r1, lsl r2
   45234:	orr	r1, r5, r1, lsr r4
   45238:	pop	{r4, r5, pc}
   4523c:	rsb	r4, r4, #12
   45240:	rsb	r2, r4, #32
   45244:	lsr	r0, r0, r2
   45248:	orr	r0, r0, r1, lsl r4
   4524c:	mov	r1, r5
   45250:	pop	{r4, r5, pc}
   45254:	lsr	r0, r1, r4
   45258:	mov	r1, r5
   4525c:	pop	{r4, r5, pc}
   45260:	teq	r4, #0
   45264:	eor	r3, r3, #1048576	; 0x100000
   45268:	eoreq	r1, r1, #1048576	; 0x100000
   4526c:	addeq	r4, r4, #1
   45270:	subne	r5, r5, #1
   45274:	b	45100 <flatcc_json_printer_clear@@Base+0x23c>
   45278:	mvns	ip, r4, asr #21
   4527c:	mvnsne	ip, r5, asr #21
   45280:	beq	452e8 <flatcc_json_printer_clear@@Base+0x424>
   45284:	teq	r4, r5
   45288:	teqeq	r0, r2
   4528c:	beq	452a0 <flatcc_json_printer_clear@@Base+0x3dc>
   45290:	orrs	ip, r4, r0
   45294:	moveq	r1, r3
   45298:	moveq	r0, r2
   4529c:	pop	{r4, r5, pc}
   452a0:	teq	r1, r3
   452a4:	movne	r1, #0
   452a8:	movne	r0, #0
   452ac:	popne	{r4, r5, pc}
   452b0:	lsrs	ip, r4, #21
   452b4:	bne	452c8 <flatcc_json_printer_clear@@Base+0x404>
   452b8:	lsls	r0, r0, #1
   452bc:	adcs	r1, r1, r1
   452c0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   452c4:	pop	{r4, r5, pc}
   452c8:	adds	r4, r4, #4194304	; 0x400000
   452cc:	addcc	r1, r1, #1048576	; 0x100000
   452d0:	popcc	{r4, r5, pc}
   452d4:	and	r5, r1, #-2147483648	; 0x80000000
   452d8:	orr	r1, r5, #2130706432	; 0x7f000000
   452dc:	orr	r1, r1, #15728640	; 0xf00000
   452e0:	mov	r0, #0
   452e4:	pop	{r4, r5, pc}
   452e8:	mvns	ip, r4, asr #21
   452ec:	movne	r1, r3
   452f0:	movne	r0, r2
   452f4:	mvnseq	ip, r5, asr #21
   452f8:	movne	r3, r1
   452fc:	movne	r2, r0
   45300:	orrs	r4, r0, r1, lsl #12
   45304:	orrseq	r5, r2, r3, lsl #12
   45308:	teqeq	r1, r3
   4530c:	orrne	r1, r1, #524288	; 0x80000
   45310:	pop	{r4, r5, pc}
   45314:	teq	r0, #0
   45318:	moveq	r1, #0
   4531c:	bxeq	lr
   45320:	push	{r4, r5, lr}
   45324:	mov	r4, #1024	; 0x400
   45328:	add	r4, r4, #50	; 0x32
   4532c:	mov	r5, #0
   45330:	mov	r1, #0
   45334:	b	451b0 <flatcc_json_printer_clear@@Base+0x2ec>
   45338:	teq	r0, #0
   4533c:	moveq	r1, #0
   45340:	bxeq	lr
   45344:	push	{r4, r5, lr}
   45348:	mov	r4, #1024	; 0x400
   4534c:	add	r4, r4, #50	; 0x32
   45350:	ands	r5, r0, #-2147483648	; 0x80000000
   45354:	rsbmi	r0, r0, #0
   45358:	mov	r1, #0
   4535c:	b	451b0 <flatcc_json_printer_clear@@Base+0x2ec>
   45360:	lsls	r2, r0, #1
   45364:	asr	r1, r2, #3
   45368:	rrx	r1, r1
   4536c:	lsl	r0, r2, #28
   45370:	andsne	r3, r2, #-16777216	; 0xff000000
   45374:	teqne	r3, #-16777216	; 0xff000000
   45378:	eorne	r1, r1, #939524096	; 0x38000000
   4537c:	bxne	lr
   45380:	bics	r2, r2, #-16777216	; 0xff000000
   45384:	bxeq	lr
   45388:	teq	r3, #-16777216	; 0xff000000
   4538c:	orreq	r1, r1, #524288	; 0x80000
   45390:	bxeq	lr
   45394:	push	{r4, r5, lr}
   45398:	mov	r4, #896	; 0x380
   4539c:	and	r5, r1, #-2147483648	; 0x80000000
   453a0:	bic	r1, r1, #-2147483648	; 0x80000000
   453a4:	b	451b0 <flatcc_json_printer_clear@@Base+0x2ec>
   453a8:	orrs	r2, r0, r1
   453ac:	bxeq	lr
   453b0:	push	{r4, r5, lr}
   453b4:	mov	r5, #0
   453b8:	b	453d8 <flatcc_json_printer_clear@@Base+0x514>
   453bc:	orrs	r2, r0, r1
   453c0:	bxeq	lr
   453c4:	push	{r4, r5, lr}
   453c8:	ands	r5, r1, #-2147483648	; 0x80000000
   453cc:	bpl	453d8 <flatcc_json_printer_clear@@Base+0x514>
   453d0:	rsbs	r0, r0, #0
   453d4:	rsc	r1, r1, #0
   453d8:	mov	r4, #1024	; 0x400
   453dc:	add	r4, r4, #50	; 0x32
   453e0:	lsrs	ip, r1, #22
   453e4:	beq	45154 <flatcc_json_printer_clear@@Base+0x290>
   453e8:	mov	r2, #3
   453ec:	lsrs	ip, ip, #3
   453f0:	addne	r2, r2, #3
   453f4:	lsrs	ip, ip, #3
   453f8:	addne	r2, r2, #3
   453fc:	add	r2, r2, ip, lsr #3
   45400:	rsb	r3, r2, #32
   45404:	lsl	ip, r0, r3
   45408:	lsr	r0, r0, r2
   4540c:	orr	r0, r0, r1, lsl r3
   45410:	lsr	r1, r1, r2
   45414:	add	r4, r4, r2
   45418:	b	45154 <flatcc_json_printer_clear@@Base+0x290>
   4541c:	eor	r0, r0, #-2147483648	; 0x80000000
   45420:	b	45428 <flatcc_json_printer_clear@@Base+0x564>
   45424:	eor	r1, r1, #-2147483648	; 0x80000000
   45428:	lsls	r2, r0, #1
   4542c:	lslsne	r3, r1, #1
   45430:	teqne	r2, r3
   45434:	mvnsne	ip, r2, asr #24
   45438:	mvnsne	ip, r3, asr #24
   4543c:	beq	45534 <flatcc_json_printer_clear@@Base+0x670>
   45440:	lsr	r2, r2, #24
   45444:	rsbs	r3, r2, r3, lsr #24
   45448:	addgt	r2, r2, r3
   4544c:	eorgt	r1, r0, r1
   45450:	eorgt	r0, r1, r0
   45454:	eorgt	r1, r0, r1
   45458:	rsblt	r3, r3, #0
   4545c:	cmp	r3, #25
   45460:	bxhi	lr
   45464:	tst	r0, #-2147483648	; 0x80000000
   45468:	orr	r0, r0, #8388608	; 0x800000
   4546c:	bic	r0, r0, #-16777216	; 0xff000000
   45470:	rsbne	r0, r0, #0
   45474:	tst	r1, #-2147483648	; 0x80000000
   45478:	orr	r1, r1, #8388608	; 0x800000
   4547c:	bic	r1, r1, #-16777216	; 0xff000000
   45480:	rsbne	r1, r1, #0
   45484:	teq	r2, r3
   45488:	beq	4551c <flatcc_json_printer_clear@@Base+0x658>
   4548c:	sub	r2, r2, #1
   45490:	adds	r0, r0, r1, asr r3
   45494:	rsb	r3, r3, #32
   45498:	lsl	r1, r1, r3
   4549c:	and	r3, r0, #-2147483648	; 0x80000000
   454a0:	bpl	454ac <flatcc_json_printer_clear@@Base+0x5e8>
   454a4:	rsbs	r1, r1, #0
   454a8:	rsc	r0, r0, #0
   454ac:	cmp	r0, #8388608	; 0x800000
   454b0:	bcc	454e4 <flatcc_json_printer_clear@@Base+0x620>
   454b4:	cmp	r0, #16777216	; 0x1000000
   454b8:	bcc	454d0 <flatcc_json_printer_clear@@Base+0x60c>
   454bc:	lsrs	r0, r0, #1
   454c0:	rrx	r1, r1
   454c4:	add	r2, r2, #1
   454c8:	cmp	r2, #254	; 0xfe
   454cc:	bcs	45588 <flatcc_json_printer_clear@@Base+0x6c4>
   454d0:	cmp	r1, #-2147483648	; 0x80000000
   454d4:	adc	r0, r0, r2, lsl #23
   454d8:	biceq	r0, r0, #1
   454dc:	orr	r0, r0, r3
   454e0:	bx	lr
   454e4:	lsls	r1, r1, #1
   454e8:	adc	r0, r0, r0
   454ec:	tst	r0, #8388608	; 0x800000
   454f0:	sub	r2, r2, #1
   454f4:	bne	454d0 <flatcc_json_printer_clear@@Base+0x60c>
   454f8:	clz	ip, r0
   454fc:	sub	ip, ip, #8
   45500:	subs	r2, r2, ip
   45504:	lsl	r0, r0, ip
   45508:	addge	r0, r0, r2, lsl #23
   4550c:	rsblt	r2, r2, #0
   45510:	orrge	r0, r0, r3
   45514:	orrlt	r0, r3, r0, lsr r2
   45518:	bx	lr
   4551c:	teq	r2, #0
   45520:	eor	r1, r1, #8388608	; 0x800000
   45524:	eoreq	r0, r0, #8388608	; 0x800000
   45528:	addeq	r2, r2, #1
   4552c:	subne	r3, r3, #1
   45530:	b	4548c <flatcc_json_printer_clear@@Base+0x5c8>
   45534:	lsl	r3, r1, #1
   45538:	mvns	ip, r2, asr #24
   4553c:	mvnsne	ip, r3, asr #24
   45540:	beq	45594 <flatcc_json_printer_clear@@Base+0x6d0>
   45544:	teq	r2, r3
   45548:	beq	45558 <flatcc_json_printer_clear@@Base+0x694>
   4554c:	teq	r2, #0
   45550:	moveq	r0, r1
   45554:	bx	lr
   45558:	teq	r0, r1
   4555c:	movne	r0, #0
   45560:	bxne	lr
   45564:	tst	r2, #-16777216	; 0xff000000
   45568:	bne	45578 <flatcc_json_printer_clear@@Base+0x6b4>
   4556c:	lsls	r0, r0, #1
   45570:	orrcs	r0, r0, #-2147483648	; 0x80000000
   45574:	bx	lr
   45578:	adds	r2, r2, #33554432	; 0x2000000
   4557c:	addcc	r0, r0, #8388608	; 0x800000
   45580:	bxcc	lr
   45584:	and	r3, r0, #-2147483648	; 0x80000000
   45588:	orr	r0, r3, #2130706432	; 0x7f000000
   4558c:	orr	r0, r0, #8388608	; 0x800000
   45590:	bx	lr
   45594:	mvns	r2, r2, asr #24
   45598:	movne	r0, r1
   4559c:	mvnseq	r3, r3, asr #24
   455a0:	movne	r1, r0
   455a4:	lsls	r2, r0, #9
   455a8:	lslseq	r3, r1, #9
   455ac:	teqeq	r0, r1
   455b0:	orrne	r0, r0, #4194304	; 0x400000
   455b4:	bx	lr
   455b8:	mov	r3, #0
   455bc:	b	455c8 <flatcc_json_printer_clear@@Base+0x704>
   455c0:	ands	r3, r0, #-2147483648	; 0x80000000
   455c4:	rsbmi	r0, r0, #0
   455c8:	movs	ip, r0
   455cc:	bxeq	lr
   455d0:	orr	r3, r3, #1258291200	; 0x4b000000
   455d4:	mov	r1, r0
   455d8:	mov	r0, #0
   455dc:	b	45620 <flatcc_json_printer_clear@@Base+0x75c>
   455e0:	orrs	r2, r0, r1
   455e4:	bxeq	lr
   455e8:	mov	r3, #0
   455ec:	b	45608 <flatcc_json_printer_clear@@Base+0x744>
   455f0:	orrs	r2, r0, r1
   455f4:	bxeq	lr
   455f8:	ands	r3, r1, #-2147483648	; 0x80000000
   455fc:	bpl	45608 <flatcc_json_printer_clear@@Base+0x744>
   45600:	rsbs	r0, r0, #0
   45604:	rsc	r1, r1, #0
   45608:	movs	ip, r1
   4560c:	moveq	ip, r0
   45610:	moveq	r1, r0
   45614:	moveq	r0, #0
   45618:	orr	r3, r3, #1526726656	; 0x5b000000
   4561c:	subeq	r3, r3, #268435456	; 0x10000000
   45620:	sub	r3, r3, #8388608	; 0x800000
   45624:	clz	r2, ip
   45628:	subs	r2, r2, #8
   4562c:	sub	r3, r3, r2, lsl #23
   45630:	blt	45650 <flatcc_json_printer_clear@@Base+0x78c>
   45634:	add	r3, r3, r1, lsl r2
   45638:	lsl	ip, r0, r2
   4563c:	rsb	r2, r2, #32
   45640:	cmp	ip, #-2147483648	; 0x80000000
   45644:	adc	r0, r3, r0, lsr r2
   45648:	biceq	r0, r0, #1
   4564c:	bx	lr
   45650:	add	r2, r2, #32
   45654:	lsl	ip, r1, r2
   45658:	rsb	r2, r2, #32
   4565c:	orrs	r0, r0, ip, lsl #1
   45660:	adc	r0, r3, r1, lsr r2
   45664:	biceq	r0, r0, ip, lsr #31
   45668:	bx	lr
   4566c:	cmp	r3, #0
   45670:	cmpeq	r2, #0
   45674:	bne	4568c <flatcc_json_printer_clear@@Base+0x7c8>
   45678:	cmp	r1, #0
   4567c:	cmpeq	r0, #0
   45680:	mvnne	r1, #0
   45684:	mvnne	r0, #0
   45688:	b	456a8 <flatcc_json_printer_clear@@Base+0x7e4>
   4568c:	sub	sp, sp, #8
   45690:	push	{sp, lr}
   45694:	bl	456b8 <flatcc_json_printer_clear@@Base+0x7f4>
   45698:	ldr	lr, [sp, #4]
   4569c:	add	sp, sp, #8
   456a0:	pop	{r2, r3}
   456a4:	bx	lr
   456a8:	push	{r1, lr}
   456ac:	mov	r0, #8
   456b0:	bl	14e24 <raise@plt>
   456b4:	pop	{r1, pc}
   456b8:	cmp	r1, r3
   456bc:	cmpeq	r0, r2
   456c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   456c4:	mov	r4, r0
   456c8:	movcc	r0, #0
   456cc:	mov	r5, r1
   456d0:	ldr	lr, [sp, #36]	; 0x24
   456d4:	movcc	r1, r0
   456d8:	bcc	457d4 <flatcc_json_printer_clear@@Base+0x910>
   456dc:	cmp	r3, #0
   456e0:	clzeq	ip, r2
   456e4:	clzne	ip, r3
   456e8:	addeq	ip, ip, #32
   456ec:	cmp	r5, #0
   456f0:	clzeq	r1, r4
   456f4:	addeq	r1, r1, #32
   456f8:	clzne	r1, r5
   456fc:	sub	ip, ip, r1
   45700:	sub	sl, ip, #32
   45704:	lsl	r9, r3, ip
   45708:	rsb	fp, ip, #32
   4570c:	orr	r9, r9, r2, lsl sl
   45710:	orr	r9, r9, r2, lsr fp
   45714:	lsl	r8, r2, ip
   45718:	cmp	r5, r9
   4571c:	cmpeq	r4, r8
   45720:	movcc	r0, #0
   45724:	movcc	r1, r0
   45728:	bcc	45744 <flatcc_json_printer_clear@@Base+0x880>
   4572c:	mov	r0, #1
   45730:	subs	r4, r4, r8
   45734:	lsl	r1, r0, sl
   45738:	orr	r1, r1, r0, lsr fp
   4573c:	lsl	r0, r0, ip
   45740:	sbc	r5, r5, r9
   45744:	cmp	ip, #0
   45748:	beq	457d4 <flatcc_json_printer_clear@@Base+0x910>
   4574c:	lsr	r6, r8, #1
   45750:	orr	r6, r6, r9, lsl #31
   45754:	lsr	r7, r9, #1
   45758:	mov	r2, ip
   4575c:	b	45780 <flatcc_json_printer_clear@@Base+0x8bc>
   45760:	subs	r3, r4, r6
   45764:	sbc	r8, r5, r7
   45768:	adds	r3, r3, r3
   4576c:	adc	r8, r8, r8
   45770:	adds	r4, r3, #1
   45774:	adc	r5, r8, #0
   45778:	subs	r2, r2, #1
   4577c:	beq	4579c <flatcc_json_printer_clear@@Base+0x8d8>
   45780:	cmp	r5, r7
   45784:	cmpeq	r4, r6
   45788:	bcs	45760 <flatcc_json_printer_clear@@Base+0x89c>
   4578c:	adds	r4, r4, r4
   45790:	adc	r5, r5, r5
   45794:	subs	r2, r2, #1
   45798:	bne	45780 <flatcc_json_printer_clear@@Base+0x8bc>
   4579c:	lsr	r3, r4, ip
   457a0:	orr	r3, r3, r5, lsl fp
   457a4:	lsr	r2, r5, ip
   457a8:	orr	r3, r3, r5, lsr sl
   457ac:	adds	r0, r0, r4
   457b0:	mov	r4, r3
   457b4:	lsl	r3, r2, ip
   457b8:	orr	r3, r3, r4, lsl sl
   457bc:	lsl	ip, r4, ip
   457c0:	orr	r3, r3, r4, lsr fp
   457c4:	adc	r1, r1, r5
   457c8:	subs	r0, r0, ip
   457cc:	mov	r5, r2
   457d0:	sbc	r1, r1, r3
   457d4:	cmp	lr, #0
   457d8:	strdne	r4, [lr]
   457dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000457e0 <__libc_csu_init@@Base>:
   457e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   457e4:	mov	r7, r0
   457e8:	ldr	r6, [pc, #72]	; 45838 <__libc_csu_init@@Base+0x58>
   457ec:	ldr	r5, [pc, #72]	; 4583c <__libc_csu_init@@Base+0x5c>
   457f0:	add	r6, pc, r6
   457f4:	add	r5, pc, r5
   457f8:	sub	r6, r6, r5
   457fc:	mov	r8, r1
   45800:	mov	r9, r2
   45804:	bl	14e04 <raise@plt-0x20>
   45808:	asrs	r6, r6, #2
   4580c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   45810:	mov	r4, #0
   45814:	add	r4, r4, #1
   45818:	ldr	r3, [r5], #4
   4581c:	mov	r2, r9
   45820:	mov	r1, r8
   45824:	mov	r0, r7
   45828:	blx	r3
   4582c:	cmp	r6, r4
   45830:	bne	45814 <__libc_csu_init@@Base+0x34>
   45834:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   45838:	muleq	r1, r4, r5
   4583c:	andeq	r6, r1, ip, lsl #11

00045840 <__libc_csu_fini@@Base>:
   45840:	bx	lr

Disassembly of section .fini:

00045844 <.fini>:
   45844:	push	{r3, lr}
   45848:	pop	{r3, pc}
