
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010784 <.init>:
   10784:	push	{r3, lr}
   10788:	bl	10a54 <_start@@Base+0x3c>
   1078c:	pop	{r3, pc}

Disassembly of section .plt:

00010790 <strcmp@plt-0x14>:
   10790:	push	{lr}		; (str lr, [sp, #-4]!)
   10794:	ldr	lr, [pc, #4]	; 107a0 <strcmp@plt-0x4>
   10798:	add	lr, pc, lr
   1079c:	ldr	pc, [lr, #8]!
   107a0:	andeq	r1, r1, r0, ror #16

000107a4 <strcmp@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2144]!	; 0x860

000107b0 <printf@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2136]!	; 0x858

000107bc <fopen@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2128]!	; 0x850

000107c8 <free@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2120]!	; 0x848

000107d4 <ftell@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2112]!	; 0x840

000107e0 <rewind@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2104]!	; 0x838

000107ec <fwrite@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2096]!	; 0x830

000107f8 <fread@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2088]!	; 0x828

00010804 <puts@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2080]!	; 0x820

00010810 <malloc@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2072]!	; 0x818

0001081c <__libc_start_main@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2064]!	; 0x810

00010828 <__gmon_start__@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2056]!	; 0x808

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2048]!	; 0x800

00010840 <fclose@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2040]!	; 0x7f8

0001084c <fseek@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2032]!	; 0x7f0

00010858 <abort@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2024]!	; 0x7e8

00010864 <__assert_fail@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2016]!	; 0x7e0

Disassembly of section .text:

00010870 <main@@Base-0x138>:
   10870:	ldr	r3, [pc, #32]	; 10898 <__assert_fail@plt+0x34>
   10874:	ldr	r1, [pc, #32]	; 1089c <__assert_fail@plt+0x38>
   10878:	ldr	r0, [pc, #32]	; 108a0 <__assert_fail@plt+0x3c>
   1087c:	add	r3, pc, r3
   10880:	push	{r4, lr}
   10884:	mov	r2, #218	; 0xda
   10888:	add	r3, r3, #28
   1088c:	add	r1, pc, r1
   10890:	add	r0, pc, r0
   10894:	bl	10864 <__assert_fail@plt>
   10898:	andeq	r0, r0, r0, lsl #31
   1089c:	andeq	r1, r0, ip, ror r0
   108a0:	andeq	r1, r0, r8, lsr #2
   108a4:	ldr	r3, [pc, #32]	; 108cc <__assert_fail@plt+0x68>
   108a8:	ldr	r1, [pc, #32]	; 108d0 <__assert_fail@plt+0x6c>
   108ac:	ldr	r0, [pc, #32]	; 108d4 <__assert_fail@plt+0x70>
   108b0:	add	r3, pc, r3
   108b4:	push	{r4, lr}
   108b8:	mov	r2, #195	; 0xc3
   108bc:	add	r3, r3, #52	; 0x34
   108c0:	add	r1, pc, r1
   108c4:	add	r0, pc, r0
   108c8:	bl	10864 <__assert_fail@plt>
   108cc:	andeq	r0, r0, ip, asr #30
   108d0:	andeq	r1, r0, r8, asr #32
   108d4:	strdeq	r1, [r0], -r4
   108d8:	ldr	r3, [pc, #32]	; 10900 <__assert_fail@plt+0x9c>
   108dc:	ldr	r1, [pc, #32]	; 10904 <__assert_fail@plt+0xa0>
   108e0:	ldr	r0, [pc, #32]	; 10908 <__assert_fail@plt+0xa4>
   108e4:	add	r3, pc, r3
   108e8:	push	{r4, lr}
   108ec:	mov	r2, #204	; 0xcc
   108f0:	add	r3, r3, #76	; 0x4c
   108f4:	add	r1, pc, r1
   108f8:	add	r0, pc, r0
   108fc:	bl	10864 <__assert_fail@plt>
   10900:	andeq	r0, r0, r8, lsl pc
   10904:	andeq	r1, r0, r4, lsl r0
   10908:	andeq	r1, r0, r0, asr #1
   1090c:	ldr	r3, [pc, #32]	; 10934 <__assert_fail@plt+0xd0>
   10910:	ldr	r1, [pc, #32]	; 10938 <__assert_fail@plt+0xd4>
   10914:	ldr	r0, [pc, #32]	; 1093c <__assert_fail@plt+0xd8>
   10918:	add	r3, pc, r3
   1091c:	push	{r4, lr}
   10920:	mov	r2, #201	; 0xc9
   10924:	add	r3, r3, #136	; 0x88
   10928:	add	r1, pc, r1
   1092c:	add	r0, pc, r0
   10930:	bl	10864 <__assert_fail@plt>
   10934:	andeq	r0, r0, r4, ror #29
   10938:	andeq	r0, r0, r0, ror #31
   1093c:	andeq	r1, r0, ip, lsl #1
   10940:	ldr	r3, [pc, #32]	; 10968 <__assert_fail@plt+0x104>
   10944:	ldr	r1, [pc, #32]	; 1096c <__assert_fail@plt+0x108>
   10948:	ldr	r0, [pc, #32]	; 10970 <__assert_fail@plt+0x10c>
   1094c:	add	r3, pc, r3
   10950:	push	{r4, lr}
   10954:	mov	r2, #147	; 0x93
   10958:	add	r3, r3, #160	; 0xa0
   1095c:	add	r1, pc, r1
   10960:	add	r0, pc, r0
   10964:	bl	10864 <__assert_fail@plt>
   10968:			; <UNDEFINED> instruction: 0x00000eb0
   1096c:	andeq	r0, r0, ip, lsr #31
   10970:	andeq	r1, r0, r8, asr r0
   10974:	ldr	r3, [pc, #32]	; 1099c <__assert_fail@plt+0x138>
   10978:	ldr	r1, [pc, #32]	; 109a0 <__assert_fail@plt+0x13c>
   1097c:	ldr	r0, [pc, #32]	; 109a4 <__assert_fail@plt+0x140>
   10980:	add	r3, pc, r3
   10984:	push	{r4, lr}
   10988:	mov	r2, #149	; 0x95
   1098c:	add	r3, r3, #188	; 0xbc
   10990:	add	r1, pc, r1
   10994:	add	r0, pc, r0
   10998:	bl	10864 <__assert_fail@plt>
   1099c:	andeq	r0, r0, ip, ror lr
   109a0:	andeq	r0, r0, r8, ror pc
   109a4:	andeq	r1, r0, r4, lsr #32

000109a8 <main@@Base>:
   109a8:	sub	r3, r0, #1
   109ac:	cmp	r3, #1
   109b0:	ldr	r3, [pc, #80]	; 10a08 <main@@Base+0x60>
   109b4:	add	r3, pc, r3
   109b8:	bhi	109dc <main@@Base+0x34>
   109bc:	ldr	r2, [pc, #72]	; 10a0c <main@@Base+0x64>
   109c0:	cmp	r0, #2
   109c4:	ldreq	r3, [r3, r2]
   109c8:	ldrne	r3, [r3, r2]
   109cc:	ldreq	r1, [r1, #4]
   109d0:	streq	r1, [r3]
   109d4:	ldr	r0, [r3]
   109d8:	b	10ba4 <test_schema@@Base>
   109dc:	ldr	r0, [pc, #44]	; 10a10 <main@@Base+0x68>
   109e0:	push	{r4, lr}
   109e4:	mov	r2, #64	; 0x40
   109e8:	ldr	r3, [r3, r0]
   109ec:	ldr	r0, [pc, #32]	; 10a14 <main@@Base+0x6c>
   109f0:	mov	r1, #1
   109f4:	add	r0, pc, r0
   109f8:	ldr	r3, [r3]
   109fc:	bl	107ec <fwrite@plt>
   10a00:	mov	r0, #1
   10a04:	bl	10834 <exit@plt>
   10a08:	andeq	r1, r1, r4, asr #12
   10a0c:	andeq	r0, r0, r8, asr r0
   10a10:	andeq	r0, r0, r0, asr r0
   10a14:	andeq	r1, r0, r0, lsl r2

00010a18 <_start@@Base>:
   10a18:	mov	fp, #0
   10a1c:	mov	lr, #0
   10a20:	pop	{r1}		; (ldr r1, [sp], #4)
   10a24:	mov	r2, sp
   10a28:	push	{r2}		; (str r2, [sp, #-4]!)
   10a2c:	push	{r0}		; (str r0, [sp, #-4]!)
   10a30:	ldr	ip, [pc, #16]	; 10a48 <_start@@Base+0x30>
   10a34:	push	{ip}		; (str ip, [sp, #-4]!)
   10a38:	ldr	r0, [pc, #12]	; 10a4c <_start@@Base+0x34>
   10a3c:	ldr	r3, [pc, #12]	; 10a50 <_start@@Base+0x38>
   10a40:	bl	1081c <__libc_start_main@plt>
   10a44:	bl	10858 <abort@plt>
   10a48:	strdeq	r1, [r1], -r4
   10a4c:	andeq	r0, r1, r8, lsr #19
   10a50:	muleq	r1, r4, r7
   10a54:	ldr	r3, [pc, #20]	; 10a70 <_start@@Base+0x58>
   10a58:	ldr	r2, [pc, #20]	; 10a74 <_start@@Base+0x5c>
   10a5c:	add	r3, pc, r3
   10a60:	ldr	r2, [r3, r2]
   10a64:	cmp	r2, #0
   10a68:	bxeq	lr
   10a6c:	b	10828 <__gmon_start__@plt>
   10a70:	muleq	r1, ip, r5
   10a74:	andeq	r0, r0, r4, asr r0
   10a78:	ldr	r3, [pc, #28]	; 10a9c <_start@@Base+0x84>
   10a7c:	ldr	r0, [pc, #28]	; 10aa0 <_start@@Base+0x88>
   10a80:	sub	r3, r3, r0
   10a84:	cmp	r3, #6
   10a88:	bxls	lr
   10a8c:	ldr	r3, [pc, #16]	; 10aa4 <_start@@Base+0x8c>
   10a90:	cmp	r3, #0
   10a94:	bxeq	lr
   10a98:	bx	r3
   10a9c:	andeq	r2, r2, fp, rrx
   10aa0:	andeq	r2, r2, r8, rrx
   10aa4:	andeq	r0, r0, r0
   10aa8:	ldr	r1, [pc, #36]	; 10ad4 <_start@@Base+0xbc>
   10aac:	ldr	r0, [pc, #36]	; 10ad8 <_start@@Base+0xc0>
   10ab0:	sub	r1, r1, r0
   10ab4:	asr	r1, r1, #2
   10ab8:	add	r1, r1, r1, lsr #31
   10abc:	asrs	r1, r1, #1
   10ac0:	bxeq	lr
   10ac4:	ldr	r3, [pc, #16]	; 10adc <_start@@Base+0xc4>
   10ac8:	cmp	r3, #0
   10acc:	bxeq	lr
   10ad0:	bx	r3
   10ad4:	andeq	r2, r2, r8, rrx
   10ad8:	andeq	r2, r2, r8, rrx
   10adc:	andeq	r0, r0, r0
   10ae0:	push	{r4, lr}
   10ae4:	ldr	r4, [pc, #24]	; 10b04 <_start@@Base+0xec>
   10ae8:	ldrb	r3, [r4]
   10aec:	cmp	r3, #0
   10af0:	popne	{r4, pc}
   10af4:	bl	10a78 <_start@@Base+0x60>
   10af8:	mov	r3, #1
   10afc:	strb	r3, [r4]
   10b00:	pop	{r4, pc}
   10b04:	andeq	r2, r2, r8, rrx
   10b08:	ldr	r0, [pc, #40]	; 10b38 <_start@@Base+0x120>
   10b0c:	ldr	r3, [r0]
   10b10:	cmp	r3, #0
   10b14:	bne	10b1c <_start@@Base+0x104>
   10b18:	b	10aa8 <_start@@Base+0x90>
   10b1c:	ldr	r3, [pc, #24]	; 10b3c <_start@@Base+0x124>
   10b20:	cmp	r3, #0
   10b24:	beq	10b18 <_start@@Base+0x100>
   10b28:	push	{r4, lr}
   10b2c:	blx	r3
   10b30:	pop	{r4, lr}
   10b34:	b	10aa8 <_start@@Base+0x90>
   10b38:	andeq	r1, r2, r4, lsl pc
   10b3c:	andeq	r0, r0, r0
   10b40:	ldr	r3, [pc, #28]	; 10b64 <_start@@Base+0x14c>
   10b44:	ldr	r1, [pc, #28]	; 10b68 <_start@@Base+0x150>
   10b48:	ldr	r0, [pc, #28]	; 10b6c <_start@@Base+0x154>
   10b4c:	push	{r4, lr}
   10b50:	add	r3, pc, r3
   10b54:	mov	r2, #215	; 0xd7
   10b58:	add	r1, pc, r1
   10b5c:	add	r0, pc, r0
   10b60:	bl	10864 <__assert_fail@plt>
   10b64:	andeq	r0, r0, ip, lsr #25
   10b68:			; <UNDEFINED> instruction: 0x00000db0
   10b6c:	andeq	r0, r0, r4, lsr #28
   10b70:	ldr	r3, [pc, #32]	; 10b98 <_start@@Base+0x180>
   10b74:	ldr	r1, [pc, #32]	; 10b9c <_start@@Base+0x184>
   10b78:	ldr	r0, [pc, #32]	; 10ba0 <_start@@Base+0x188>
   10b7c:	add	r3, pc, r3
   10b80:	push	{r4, lr}
   10b84:	mov	r2, #192	; 0xc0
   10b88:	add	r3, r3, #112	; 0x70
   10b8c:	add	r1, pc, r1
   10b90:	add	r0, pc, r0
   10b94:	bl	10864 <__assert_fail@plt>
   10b98:	andeq	r0, r0, r0, lsl #25
   10b9c:	andeq	r0, r0, ip, ror sp
   10ba0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00010ba4 <test_schema@@Base>:
   10ba4:	ldr	r1, [pc, #2848]	; 116cc <test_schema@@Base+0xb28>
   10ba8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bac:	add	r1, pc, r1
   10bb0:	sub	sp, sp, #20
   10bb4:	bl	107bc <fopen@plt>
   10bb8:	subs	r5, r0, #0
   10bbc:	beq	10c80 <test_schema@@Base+0xdc>
   10bc0:	mov	r2, #2
   10bc4:	mov	r1, #0
   10bc8:	bl	1084c <fseek@plt>
   10bcc:	mov	r0, r5
   10bd0:	bl	107d4 <ftell@plt>
   10bd4:	ldr	r3, [pc, #2804]	; 116d0 <test_schema@@Base+0xb2c>
   10bd8:	cmp	r0, r3
   10bdc:	mov	r7, r0
   10be0:	bhi	10c78 <test_schema@@Base+0xd4>
   10be4:	mov	r0, r5
   10be8:	bl	107e0 <rewind@plt>
   10bec:	cmp	r7, #0
   10bf0:	movne	r0, r7
   10bf4:	moveq	r0, #1
   10bf8:	bl	10810 <malloc@plt>
   10bfc:	subs	r8, r0, #0
   10c00:	beq	10c78 <test_schema@@Base+0xd4>
   10c04:	mov	r4, #0
   10c08:	mov	r9, #1
   10c0c:	b	10c14 <test_schema@@Base+0x70>
   10c10:	add	r4, r4, r0
   10c14:	mov	r3, r5
   10c18:	sub	r2, r7, r4
   10c1c:	mov	r1, r9
   10c20:	add	r0, r8, r4
   10c24:	bl	107f8 <fread@plt>
   10c28:	cmp	r0, #0
   10c2c:	bne	10c10 <test_schema@@Base+0x6c>
   10c30:	cmp	r7, r4
   10c34:	mov	r6, r0
   10c38:	mov	r0, r5
   10c3c:	bne	10c9c <test_schema@@Base+0xf8>
   10c40:	bl	10840 <fclose@plt>
   10c44:	ldr	r3, [pc, #2696]	; 116d4 <test_schema@@Base+0xb30>
   10c48:	ldr	r2, [r8, #4]
   10c4c:	cmp	r2, r3
   10c50:	beq	10cac <test_schema@@Base+0x108>
   10c54:	ldr	r3, [pc, #2684]	; 116d8 <test_schema@@Base+0xb34>
   10c58:	ldr	r1, [pc, #2684]	; 116dc <test_schema@@Base+0xb38>
   10c5c:	ldr	r0, [pc, #2684]	; 116e0 <test_schema@@Base+0xb3c>
   10c60:	add	r3, pc, r3
   10c64:	mov	r2, #237	; 0xed
   10c68:	add	r3, r3, #212	; 0xd4
   10c6c:	add	r1, pc, r1
   10c70:	add	r0, pc, r0
   10c74:	bl	10864 <__assert_fail@plt>
   10c78:	mov	r0, r5
   10c7c:	bl	10840 <fclose@plt>
   10c80:	ldr	r0, [pc, #2652]	; 116e4 <test_schema@@Base+0xb40>
   10c84:	mvn	r6, #0
   10c88:	add	r0, pc, r0
   10c8c:	bl	10804 <puts@plt>
   10c90:	mov	r0, r6
   10c94:	add	sp, sp, #20
   10c98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10c9c:	bl	10840 <fclose@plt>
   10ca0:	mov	r0, r8
   10ca4:	bl	107c8 <free@plt>
   10ca8:	b	10c80 <test_schema@@Base+0xdc>
   10cac:	ldr	r2, [r8]
   10cb0:	adds	r3, r8, r2
   10cb4:	beq	10c54 <test_schema@@Base+0xb0>
   10cb8:	ldr	r2, [r8, r2]
   10cbc:	sub	r2, r3, r2
   10cc0:	ldrh	r1, [r2]
   10cc4:	cmp	r1, #5
   10cc8:	bhi	10cf0 <test_schema@@Base+0x14c>
   10ccc:	ldr	r3, [pc, #2580]	; 116e8 <test_schema@@Base+0xb44>
   10cd0:	ldr	r1, [pc, #2580]	; 116ec <test_schema@@Base+0xb48>
   10cd4:	ldr	r0, [pc, #2580]	; 116f0 <test_schema@@Base+0xb4c>
   10cd8:	add	r3, pc, r3
   10cdc:	mov	r2, #237	; 0xed
   10ce0:	add	r3, r3, #212	; 0xd4
   10ce4:	add	r1, pc, r1
   10ce8:	add	r0, pc, r0
   10cec:	bl	10864 <__assert_fail@plt>
   10cf0:	ldrh	r1, [r2, #4]
   10cf4:	cmp	r1, #0
   10cf8:	beq	10ccc <test_schema@@Base+0x128>
   10cfc:	ldr	r2, [r3, r1]
   10d00:	add	r3, r3, r1
   10d04:	add	r2, r2, #4
   10d08:	adds	r4, r3, r2
   10d0c:	beq	10dec <test_schema@@Base+0x248>
   10d10:	ldr	r1, [r4, #-4]
   10d14:	cmp	r1, #0
   10d18:	beq	10dec <test_schema@@Base+0x248>
   10d1c:	ldr	r3, [r3, r2]
   10d20:	adds	r0, r4, r3
   10d24:	beq	1169c <test_schema@@Base+0xaf8>
   10d28:	ldr	r3, [r4, r3]
   10d2c:	sub	r3, r0, r3
   10d30:	ldrh	r2, [r3]
   10d34:	cmp	r2, #5
   10d38:	bls	10dbc <test_schema@@Base+0x218>
   10d3c:	ldrh	r2, [r3, #4]
   10d40:	cmp	r2, #0
   10d44:	beq	10dbc <test_schema@@Base+0x218>
   10d48:	ldr	r7, [pc, #2468]	; 116f4 <test_schema@@Base+0xb50>
   10d4c:	add	r9, r4, #4
   10d50:	mov	r5, r6
   10d54:	add	r7, pc, r7
   10d58:	mov	r3, r2
   10d5c:	ldr	r2, [r0, r3]
   10d60:	add	r0, r0, r3
   10d64:	add	r2, r2, #4
   10d68:	add	r2, r0, r2
   10d6c:	mov	r1, r5
   10d70:	mov	r0, r7
   10d74:	bl	107b0 <printf@plt>
   10d78:	ldr	fp, [r4, #-4]
   10d7c:	add	r5, r5, #1
   10d80:	cmp	r5, fp
   10d84:	bcs	10e10 <test_schema@@Base+0x26c>
   10d88:	mov	r3, r9
   10d8c:	add	r9, r9, #4
   10d90:	ldr	r2, [r3]
   10d94:	adds	r0, r3, r2
   10d98:	beq	1169c <test_schema@@Base+0xaf8>
   10d9c:	ldr	r3, [r3, r2]
   10da0:	sub	r3, r0, r3
   10da4:	ldrh	r2, [r3]
   10da8:	cmp	r2, #5
   10dac:	bls	10dbc <test_schema@@Base+0x218>
   10db0:	ldrh	r3, [r3, #4]
   10db4:	cmp	r3, #0
   10db8:	bne	10d5c <test_schema@@Base+0x1b8>
   10dbc:	ldr	r3, [pc, #2356]	; 116f8 <test_schema@@Base+0xb54>
   10dc0:	ldr	r1, [pc, #2356]	; 116fc <test_schema@@Base+0xb58>
   10dc4:	ldr	r0, [pc, #2356]	; 11700 <test_schema@@Base+0xb5c>
   10dc8:	add	r3, pc, r3
   10dcc:	mov	r2, #218	; 0xda
   10dd0:	add	r3, r3, #28
   10dd4:	add	r1, pc, r1
   10dd8:	add	r0, pc, r0
   10ddc:	bl	10864 <__assert_fail@plt>
   10de0:	mov	sl, r9
   10de4:	cmp	r5, sl
   10de8:	beq	10ee4 <test_schema@@Base+0x340>
   10dec:	ldr	r0, [pc, #2320]	; 11704 <test_schema@@Base+0xb60>
   10df0:	mvn	r6, #0
   10df4:	add	r0, pc, r0
   10df8:	bl	10804 <puts@plt>
   10dfc:	mov	r0, r8
   10e00:	bl	107c8 <free@plt>
   10e04:	mov	r0, r6
   10e08:	add	sp, sp, #20
   10e0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e10:	cmp	fp, #0
   10e14:	beq	10dec <test_schema@@Base+0x248>
   10e18:	ldr	r7, [pc, #2280]	; 11708 <test_schema@@Base+0xb64>
   10e1c:	sub	r9, fp, #1
   10e20:	mov	r5, r6
   10e24:	add	r7, pc, r7
   10e28:	cmp	r5, r9
   10e2c:	bcs	10de0 <test_schema@@Base+0x23c>
   10e30:	sub	sl, r9, r5
   10e34:	add	sl, r5, sl, lsr #1
   10e38:	cmp	fp, sl
   10e3c:	add	r2, r4, sl, lsl #2
   10e40:	bls	116a0 <test_schema@@Base+0xafc>
   10e44:	ldr	r3, [r4, sl, lsl #2]
   10e48:	adds	r1, r2, r3
   10e4c:	beq	1169c <test_schema@@Base+0xaf8>
   10e50:	ldr	r2, [r2, r3]
   10e54:	sub	r2, r1, r2
   10e58:	ldrh	r3, [r2]
   10e5c:	cmp	r3, #5
   10e60:	bhi	10e70 <test_schema@@Base+0x2cc>
   10e64:	b	10dbc <test_schema@@Base+0x218>
   10e68:	mov	r9, sl
   10e6c:	mov	sl, r3
   10e70:	ldrh	r0, [r2, #4]
   10e74:	cmp	r0, #0
   10e78:	beq	10dbc <test_schema@@Base+0x218>
   10e7c:	ldr	r3, [r1, r0]
   10e80:	add	r0, r1, r0
   10e84:	add	r3, r3, #4
   10e88:	add	r0, r0, r3
   10e8c:	mov	r1, r7
   10e90:	bl	107a4 <strcmp@plt>
   10e94:	cmp	r0, #0
   10e98:	blt	10edc <test_schema@@Base+0x338>
   10e9c:	cmp	r5, sl
   10ea0:	bcs	10de4 <test_schema@@Base+0x240>
   10ea4:	sub	r3, sl, r5
   10ea8:	add	r3, r5, r3, lsr #1
   10eac:	cmp	fp, r3
   10eb0:	add	r0, r4, r3, lsl #2
   10eb4:	bls	116a0 <test_schema@@Base+0xafc>
   10eb8:	ldr	r2, [r4, r3, lsl #2]
   10ebc:	adds	r1, r0, r2
   10ec0:	beq	1169c <test_schema@@Base+0xaf8>
   10ec4:	ldr	r2, [r0, r2]
   10ec8:	sub	r2, r1, r2
   10ecc:	ldrh	r0, [r2]
   10ed0:	cmp	r0, #5
   10ed4:	bls	10dbc <test_schema@@Base+0x218>
   10ed8:	b	10e68 <test_schema@@Base+0x2c4>
   10edc:	add	r5, sl, #1
   10ee0:	b	10e28 <test_schema@@Base+0x284>
   10ee4:	cmp	fp, r5
   10ee8:	add	r2, r4, r5, lsl #2
   10eec:	bls	116c4 <test_schema@@Base+0xb20>
   10ef0:	ldr	r3, [r4, r5, lsl #2]
   10ef4:	adds	r7, r2, r3
   10ef8:	beq	1169c <test_schema@@Base+0xaf8>
   10efc:	ldr	r9, [r2, r3]
   10f00:	sub	r9, r7, r9
   10f04:	ldrh	r4, [r9]
   10f08:	cmp	r4, #5
   10f0c:	bls	10dbc <test_schema@@Base+0x218>
   10f10:	ldrh	r3, [r9, #4]
   10f14:	cmp	r3, #0
   10f18:	beq	10dbc <test_schema@@Base+0x218>
   10f1c:	ldr	r0, [r7, r3]
   10f20:	ldr	r1, [pc, #2020]	; 1170c <test_schema@@Base+0xb68>
   10f24:	add	r3, r7, r3
   10f28:	add	r0, r0, #4
   10f2c:	add	r0, r3, r0
   10f30:	add	r1, pc, r1
   10f34:	bl	107a4 <strcmp@plt>
   10f38:	cmp	r0, #0
   10f3c:	bne	10dec <test_schema@@Base+0x248>
   10f40:	cmp	r4, #7
   10f44:	bhi	10f6c <test_schema@@Base+0x3c8>
   10f48:	ldr	r3, [pc, #1984]	; 11710 <test_schema@@Base+0xb6c>
   10f4c:	ldr	r1, [pc, #1984]	; 11714 <test_schema@@Base+0xb70>
   10f50:	ldr	r0, [pc, #1984]	; 11718 <test_schema@@Base+0xb74>
   10f54:	add	r3, pc, r3
   10f58:	mov	r2, #224	; 0xe0
   10f5c:	add	r3, r3, #240	; 0xf0
   10f60:	add	r1, pc, r1
   10f64:	add	r0, pc, r0
   10f68:	bl	10864 <__assert_fail@plt>
   10f6c:	ldrh	r4, [r9, #6]
   10f70:	cmp	r4, #0
   10f74:	beq	10f48 <test_schema@@Base+0x3a4>
   10f78:	ldr	r3, [r7, r4]
   10f7c:	add	r4, r7, r4
   10f80:	add	r3, r3, #4
   10f84:	adds	r4, r4, r3
   10f88:	beq	110a0 <test_schema@@Base+0x4fc>
   10f8c:	ldr	r7, [r4, #-4]
   10f90:	cmp	r7, #0
   10f94:	beq	110a0 <test_schema@@Base+0x4fc>
   10f98:	ldr	sl, [pc, #1916]	; 1171c <test_schema@@Base+0xb78>
   10f9c:	sub	r3, r7, #1
   10fa0:	str	r5, [sp, #8]
   10fa4:	mov	fp, r6
   10fa8:	mov	r5, r4
   10fac:	add	sl, pc, sl
   10fb0:	mov	r4, r3
   10fb4:	str	r3, [sp, #4]
   10fb8:	cmp	fp, r4
   10fbc:	bcs	1108c <test_schema@@Base+0x4e8>
   10fc0:	sub	r9, r4, fp
   10fc4:	add	r9, fp, r9, lsr #1
   10fc8:	cmp	r7, r9
   10fcc:	add	r1, r5, r9, lsl #2
   10fd0:	bls	11678 <test_schema@@Base+0xad4>
   10fd4:	ldr	r3, [r5, r9, lsl #2]
   10fd8:	adds	ip, r1, r3
   10fdc:	beq	11674 <test_schema@@Base+0xad0>
   10fe0:	ldr	r1, [r1, r3]
   10fe4:	sub	r1, ip, r1
   10fe8:	ldrh	r3, [r1]
   10fec:	cmp	r3, #5
   10ff0:	bhi	11000 <test_schema@@Base+0x45c>
   10ff4:	b	11068 <test_schema@@Base+0x4c4>
   10ff8:	mov	r4, r9
   10ffc:	mov	r9, r3
   11000:	ldrh	r0, [r1, #4]
   11004:	cmp	r0, #0
   11008:	beq	11068 <test_schema@@Base+0x4c4>
   1100c:	ldr	r3, [ip, r0]
   11010:	add	r0, ip, r0
   11014:	add	r3, r3, #4
   11018:	add	r0, r0, r3
   1101c:	mov	r1, sl
   11020:	bl	107a4 <strcmp@plt>
   11024:	cmp	r0, #0
   11028:	blt	110b4 <test_schema@@Base+0x510>
   1102c:	cmp	fp, r9
   11030:	bcs	11090 <test_schema@@Base+0x4ec>
   11034:	sub	r3, r9, fp
   11038:	add	r3, fp, r3, lsr #1
   1103c:	cmp	r7, r3
   11040:	add	r0, r5, r3, lsl #2
   11044:	bls	11678 <test_schema@@Base+0xad4>
   11048:	ldr	r1, [r5, r3, lsl #2]
   1104c:	adds	ip, r0, r1
   11050:	beq	11674 <test_schema@@Base+0xad0>
   11054:	ldr	r1, [r0, r1]
   11058:	sub	r1, ip, r1
   1105c:	ldrh	r0, [r1]
   11060:	cmp	r0, #5
   11064:	bhi	10ff8 <test_schema@@Base+0x454>
   11068:	ldr	r3, [pc, #1712]	; 11720 <test_schema@@Base+0xb7c>
   1106c:	ldr	r1, [pc, #1712]	; 11724 <test_schema@@Base+0xb80>
   11070:	ldr	r0, [pc, #1712]	; 11728 <test_schema@@Base+0xb84>
   11074:	add	r3, pc, r3
   11078:	mov	r2, #195	; 0xc3
   1107c:	add	r3, r3, #52	; 0x34
   11080:	add	r1, pc, r1
   11084:	add	r0, pc, r0
   11088:	bl	10864 <__assert_fail@plt>
   1108c:	mov	r9, r4
   11090:	cmp	r9, fp
   11094:	mov	r4, r5
   11098:	ldr	r5, [sp, #8]
   1109c:	beq	110bc <test_schema@@Base+0x518>
   110a0:	ldr	r0, [pc, #1668]	; 1172c <test_schema@@Base+0xb88>
   110a4:	mvn	r6, #0
   110a8:	add	r0, pc, r0
   110ac:	bl	10804 <puts@plt>
   110b0:	b	10dfc <test_schema@@Base+0x258>
   110b4:	add	fp, r9, #1
   110b8:	b	10fb8 <test_schema@@Base+0x414>
   110bc:	cmp	r7, r9
   110c0:	add	r2, r4, r9, lsl #2
   110c4:	bls	116c0 <test_schema@@Base+0xb1c>
   110c8:	ldr	r9, [r4, r9, lsl #2]
   110cc:	adds	sl, r2, r9
   110d0:	beq	11674 <test_schema@@Base+0xad0>
   110d4:	ldr	fp, [r2, r9]
   110d8:	str	r2, [sp, #12]
   110dc:	sub	fp, sl, fp
   110e0:	ldrh	r3, [fp]
   110e4:	cmp	r3, #5
   110e8:	str	r3, [sp, #8]
   110ec:	bls	11068 <test_schema@@Base+0x4c4>
   110f0:	ldrh	r1, [fp, #4]
   110f4:	cmp	r1, #0
   110f8:	beq	11068 <test_schema@@Base+0x4c4>
   110fc:	ldr	r0, [sl, r1]
   11100:	add	r1, sl, r1
   11104:	add	r0, r0, #4
   11108:	add	r0, r1, r0
   1110c:	ldr	r1, [pc, #1564]	; 11730 <test_schema@@Base+0xb8c>
   11110:	add	r1, pc, r1
   11114:	bl	107a4 <strcmp@plt>
   11118:	ldr	r3, [sp, #8]
   1111c:	ldr	r2, [sp, #12]
   11120:	cmp	r0, #0
   11124:	bne	110a0 <test_schema@@Base+0x4fc>
   11128:	cmp	r3, #13
   1112c:	bhi	111bc <test_schema@@Base+0x618>
   11130:	ldr	r0, [pc, #1532]	; 11734 <test_schema@@Base+0xb90>
   11134:	str	r2, [sp, #4]
   11138:	add	r0, pc, r0
   1113c:	bl	10804 <puts@plt>
   11140:	ldr	r2, [sp, #4]
   11144:	ldr	r3, [r2, r9]
   11148:	sub	r3, sl, r3
   1114c:	ldrh	r1, [r3]
   11150:	cmp	r1, #5
   11154:	bls	11068 <test_schema@@Base+0x4c4>
   11158:	ldrh	r3, [r3, #4]
   1115c:	cmp	r3, #0
   11160:	beq	11068 <test_schema@@Base+0x4c4>
   11164:	ldr	r1, [sl, r3]
   11168:	ldr	r0, [pc, #1480]	; 11738 <test_schema@@Base+0xb94>
   1116c:	add	r3, sl, r3
   11170:	add	r1, r1, #4
   11174:	add	r1, r3, r1
   11178:	add	r0, pc, r0
   1117c:	bl	107b0 <printf@plt>
   11180:	ldr	r2, [sp, #4]
   11184:	ldr	r3, [r2, r9]
   11188:	sub	r3, sl, r3
   1118c:	ldrh	r2, [r3]
   11190:	cmp	r2, #13
   11194:	bls	11668 <test_schema@@Base+0xac4>
   11198:	ldrh	r3, [r3, #12]
   1119c:	cmp	r3, #0
   111a0:	beq	11668 <test_schema@@Base+0xac4>
   111a4:	ldrd	r2, [r3, sl]
   111a8:	ldr	r0, [pc, #1420]	; 1173c <test_schema@@Base+0xb98>
   111ac:	mvn	r6, #0
   111b0:	add	r0, pc, r0
   111b4:	bl	107b0 <printf@plt>
   111b8:	b	10dfc <test_schema@@Base+0x258>
   111bc:	ldrh	r3, [fp, #12]
   111c0:	cmp	r3, #0
   111c4:	beq	11130 <test_schema@@Base+0x58c>
   111c8:	ldrd	r0, [sl, r3]
   111cc:	cmp	r1, #0
   111d0:	cmpeq	r0, #150	; 0x96
   111d4:	bne	11130 <test_schema@@Base+0x58c>
   111d8:	ldrh	r2, [fp, #6]
   111dc:	cmp	r2, #0
   111e0:	beq	113a0 <test_schema@@Base+0x7fc>
   111e4:	ldr	r3, [sl, r2]
   111e8:	add	sl, sl, r2
   111ec:	adds	r2, sl, r3
   111f0:	beq	116c8 <test_schema@@Base+0xb24>
   111f4:	ldr	r3, [sl, r3]
   111f8:	sub	r3, r2, r3
   111fc:	ldrh	r1, [r3]
   11200:	cmp	r1, #5
   11204:	bhi	1121c <test_schema@@Base+0x678>
   11208:	ldr	r0, [pc, #1328]	; 11740 <test_schema@@Base+0xb9c>
   1120c:	mvn	r6, #0
   11210:	add	r0, pc, r0
   11214:	bl	10804 <puts@plt>
   11218:	b	10dfc <test_schema@@Base+0x258>
   1121c:	ldrh	r3, [r3, #4]
   11220:	cmp	r3, #0
   11224:	beq	11208 <test_schema@@Base+0x664>
   11228:	ldrsb	r3, [r2, r3]
   1122c:	cmp	r3, #5
   11230:	bne	11208 <test_schema@@Base+0x664>
   11234:	ldr	r3, [sp, #4]
   11238:	ldr	sl, [pc, #1284]	; 11744 <test_schema@@Base+0xba0>
   1123c:	str	r5, [sp, #8]
   11240:	mov	r9, r6
   11244:	mov	r5, r4
   11248:	add	sl, pc, sl
   1124c:	mov	r4, r3
   11250:	cmp	r9, r4
   11254:	bcs	11304 <test_schema@@Base+0x760>
   11258:	sub	fp, r4, r9
   1125c:	add	fp, r9, fp, lsr #1
   11260:	cmp	r7, fp
   11264:	add	r1, r5, fp, lsl #2
   11268:	bls	11678 <test_schema@@Base+0xad4>
   1126c:	ldr	r3, [r5, fp, lsl #2]
   11270:	adds	ip, r1, r3
   11274:	beq	11674 <test_schema@@Base+0xad0>
   11278:	ldr	r1, [r1, r3]
   1127c:	sub	r1, ip, r1
   11280:	ldrh	r3, [r1]
   11284:	cmp	r3, #5
   11288:	bhi	11298 <test_schema@@Base+0x6f4>
   1128c:	b	11068 <test_schema@@Base+0x4c4>
   11290:	mov	r4, fp
   11294:	mov	fp, r3
   11298:	ldrh	r0, [r1, #4]
   1129c:	cmp	r0, #0
   112a0:	beq	11068 <test_schema@@Base+0x4c4>
   112a4:	ldr	r3, [ip, r0]
   112a8:	add	r0, ip, r0
   112ac:	add	r3, r3, #4
   112b0:	add	r0, r0, r3
   112b4:	mov	r1, sl
   112b8:	bl	107a4 <strcmp@plt>
   112bc:	cmp	r0, #0
   112c0:	blt	1132c <test_schema@@Base+0x788>
   112c4:	cmp	fp, r9
   112c8:	bls	11308 <test_schema@@Base+0x764>
   112cc:	sub	r3, fp, r9
   112d0:	add	r3, r9, r3, lsr #1
   112d4:	cmp	r7, r3
   112d8:	add	r1, r5, r3, lsl #2
   112dc:	bls	11678 <test_schema@@Base+0xad4>
   112e0:	ldr	r0, [r5, r3, lsl #2]
   112e4:	adds	ip, r1, r0
   112e8:	beq	11674 <test_schema@@Base+0xad0>
   112ec:	ldr	r1, [r1, r0]
   112f0:	sub	r1, ip, r1
   112f4:	ldrh	r0, [r1]
   112f8:	cmp	r0, #5
   112fc:	bls	11068 <test_schema@@Base+0x4c4>
   11300:	b	11290 <test_schema@@Base+0x6ec>
   11304:	mov	fp, r4
   11308:	cmp	r9, fp
   1130c:	mov	r4, r5
   11310:	ldr	r5, [sp, #8]
   11314:	beq	11334 <test_schema@@Base+0x790>
   11318:	ldr	r0, [pc, #1064]	; 11748 <test_schema@@Base+0xba4>
   1131c:	mvn	r6, #0
   11320:	add	r0, pc, r0
   11324:	bl	10804 <puts@plt>
   11328:	b	10dfc <test_schema@@Base+0x258>
   1132c:	add	r9, fp, #1
   11330:	b	11250 <test_schema@@Base+0x6ac>
   11334:	cmp	r7, r9
   11338:	add	r1, r4, r9, lsl #2
   1133c:	bls	116c0 <test_schema@@Base+0xb1c>
   11340:	ldr	r3, [r4, r9, lsl #2]
   11344:	adds	sl, r1, r3
   11348:	beq	11674 <test_schema@@Base+0xad0>
   1134c:	ldr	r3, [r1, r3]
   11350:	sub	r3, sl, r3
   11354:	ldrh	fp, [r3]
   11358:	cmp	fp, #5
   1135c:	bls	11068 <test_schema@@Base+0x4c4>
   11360:	ldrh	r2, [r3, #4]
   11364:	str	r3, [sp, #8]
   11368:	cmp	r2, #0
   1136c:	beq	11068 <test_schema@@Base+0x4c4>
   11370:	ldr	r0, [sl, r2]
   11374:	ldr	r1, [pc, #976]	; 1174c <test_schema@@Base+0xba8>
   11378:	add	r2, sl, r2
   1137c:	add	r0, r0, #4
   11380:	add	r0, r2, r0
   11384:	add	r1, pc, r1
   11388:	bl	107a4 <strcmp@plt>
   1138c:	ldr	r3, [sp, #8]
   11390:	cmp	r0, #0
   11394:	bne	11318 <test_schema@@Base+0x774>
   11398:	cmp	fp, #7
   1139c:	bhi	113c4 <test_schema@@Base+0x820>
   113a0:	ldr	r3, [pc, #936]	; 11750 <test_schema@@Base+0xbac>
   113a4:	ldr	r1, [pc, #936]	; 11754 <test_schema@@Base+0xbb0>
   113a8:	ldr	r0, [pc, #936]	; 11758 <test_schema@@Base+0xbb4>
   113ac:	add	r3, pc, r3
   113b0:	mov	r2, #201	; 0xc9
   113b4:	add	r3, r3, #136	; 0x88
   113b8:	add	r1, pc, r1
   113bc:	add	r0, pc, r0
   113c0:	bl	10864 <__assert_fail@plt>
   113c4:	ldrh	r3, [r3, #6]
   113c8:	cmp	r3, #0
   113cc:	beq	113a0 <test_schema@@Base+0x7fc>
   113d0:	ldr	r2, [sl, r3]
   113d4:	add	r3, sl, r3
   113d8:	adds	r1, r3, r2
   113dc:	beq	116c8 <test_schema@@Base+0xb24>
   113e0:	ldr	r3, [r3, r2]
   113e4:	sub	r3, r1, r3
   113e8:	ldrh	r2, [r3]
   113ec:	cmp	r2, #5
   113f0:	bhi	11408 <test_schema@@Base+0x864>
   113f4:	ldr	r0, [pc, #864]	; 1175c <test_schema@@Base+0xbb8>
   113f8:	mvn	r6, #0
   113fc:	add	r0, pc, r0
   11400:	bl	10804 <puts@plt>
   11404:	b	10dfc <test_schema@@Base+0x258>
   11408:	ldrh	r0, [r3, #4]
   1140c:	cmp	r0, #0
   11410:	beq	113f4 <test_schema@@Base+0x850>
   11414:	ldrsb	r0, [r1, r0]
   11418:	cmp	r0, #15
   1141c:	bne	113f4 <test_schema@@Base+0x850>
   11420:	cmp	r2, #9
   11424:	bhi	1143c <test_schema@@Base+0x898>
   11428:	ldr	r0, [pc, #816]	; 11760 <test_schema@@Base+0xbbc>
   1142c:	mvn	r6, #0
   11430:	add	r0, pc, r0
   11434:	bl	10804 <puts@plt>
   11438:	b	10dfc <test_schema@@Base+0x258>
   1143c:	ldrh	r3, [r3, #8]
   11440:	cmp	r3, #0
   11444:	beq	11428 <test_schema@@Base+0x884>
   11448:	ldr	r3, [r1, r3]
   1144c:	cmp	r5, r3
   11450:	bne	11428 <test_schema@@Base+0x884>
   11454:	ldr	sl, [pc, #776]	; 11764 <test_schema@@Base+0xbc0>
   11458:	ldr	r9, [sp, #4]
   1145c:	add	sl, pc, sl
   11460:	cmp	r6, r9
   11464:	bcs	11514 <test_schema@@Base+0x970>
   11468:	sub	fp, r9, r6
   1146c:	add	fp, r6, fp, lsr #1
   11470:	cmp	r7, fp
   11474:	add	r2, r4, fp, lsl #2
   11478:	bls	11678 <test_schema@@Base+0xad4>
   1147c:	ldr	r3, [r4, fp, lsl #2]
   11480:	adds	r1, r2, r3
   11484:	beq	11674 <test_schema@@Base+0xad0>
   11488:	ldr	r2, [r2, r3]
   1148c:	sub	r2, r1, r2
   11490:	ldrh	r3, [r2]
   11494:	cmp	r3, #5
   11498:	bhi	114a8 <test_schema@@Base+0x904>
   1149c:	b	11068 <test_schema@@Base+0x4c4>
   114a0:	mov	r9, fp
   114a4:	mov	fp, r3
   114a8:	ldrh	r0, [r2, #4]
   114ac:	cmp	r0, #0
   114b0:	beq	11068 <test_schema@@Base+0x4c4>
   114b4:	ldr	r3, [r1, r0]
   114b8:	add	r0, r1, r0
   114bc:	add	r3, r3, #4
   114c0:	add	r0, r0, r3
   114c4:	mov	r1, sl
   114c8:	bl	107a4 <strcmp@plt>
   114cc:	cmp	r0, #0
   114d0:	blt	11534 <test_schema@@Base+0x990>
   114d4:	cmp	r6, fp
   114d8:	bcs	11518 <test_schema@@Base+0x974>
   114dc:	sub	r3, fp, r6
   114e0:	add	r3, r6, r3, lsr #1
   114e4:	cmp	r7, r3
   114e8:	add	r0, r4, r3, lsl #2
   114ec:	bls	11678 <test_schema@@Base+0xad4>
   114f0:	ldr	r2, [r4, r3, lsl #2]
   114f4:	adds	r1, r0, r2
   114f8:	beq	11674 <test_schema@@Base+0xad0>
   114fc:	ldr	r2, [r0, r2]
   11500:	sub	r2, r1, r2
   11504:	ldrh	r0, [r2]
   11508:	cmp	r0, #5
   1150c:	bls	11068 <test_schema@@Base+0x4c4>
   11510:	b	114a0 <test_schema@@Base+0x8fc>
   11514:	mov	fp, r9
   11518:	cmp	fp, r6
   1151c:	beq	1153c <test_schema@@Base+0x998>
   11520:	ldr	r0, [pc, #576]	; 11768 <test_schema@@Base+0xbc4>
   11524:	mvn	r6, #0
   11528:	add	r0, pc, r0
   1152c:	bl	10804 <puts@plt>
   11530:	b	10dfc <test_schema@@Base+0x258>
   11534:	add	r6, fp, #1
   11538:	b	11460 <test_schema@@Base+0x8bc>
   1153c:	cmp	r7, fp
   11540:	add	r2, r4, fp, lsl #2
   11544:	bls	116c0 <test_schema@@Base+0xb1c>
   11548:	ldr	r3, [r4, fp, lsl #2]
   1154c:	adds	r4, r2, r3
   11550:	beq	11674 <test_schema@@Base+0xad0>
   11554:	ldr	r9, [r2, r3]
   11558:	sub	r9, r4, r9
   1155c:	ldrh	r7, [r9]
   11560:	cmp	r7, #5
   11564:	bls	11068 <test_schema@@Base+0x4c4>
   11568:	ldrh	r3, [r9, #4]
   1156c:	cmp	r3, #0
   11570:	beq	11068 <test_schema@@Base+0x4c4>
   11574:	ldr	r0, [r4, r3]
   11578:	ldr	r1, [pc, #492]	; 1176c <test_schema@@Base+0xbc8>
   1157c:	add	r3, r4, r3
   11580:	add	r0, r0, #4
   11584:	add	r0, r3, r0
   11588:	add	r1, pc, r1
   1158c:	bl	107a4 <strcmp@plt>
   11590:	subs	r6, r0, #0
   11594:	bne	11520 <test_schema@@Base+0x97c>
   11598:	cmp	r7, #7
   1159c:	bls	113a0 <test_schema@@Base+0x7fc>
   115a0:	ldrh	r3, [r9, #6]
   115a4:	cmp	r3, #0
   115a8:	beq	113a0 <test_schema@@Base+0x7fc>
   115ac:	ldr	r2, [r4, r3]
   115b0:	add	r3, r4, r3
   115b4:	adds	r1, r3, r2
   115b8:	beq	116c8 <test_schema@@Base+0xb24>
   115bc:	ldr	r3, [r3, r2]
   115c0:	sub	r3, r1, r3
   115c4:	ldrh	r2, [r3]
   115c8:	cmp	r2, #5
   115cc:	bhi	115e4 <test_schema@@Base+0xa40>
   115d0:	ldr	r0, [pc, #408]	; 11770 <test_schema@@Base+0xbcc>
   115d4:	mvn	r6, #0
   115d8:	add	r0, pc, r0
   115dc:	bl	10804 <puts@plt>
   115e0:	b	10dfc <test_schema@@Base+0x258>
   115e4:	ldrh	r0, [r3, #4]
   115e8:	cmp	r0, #0
   115ec:	beq	115d0 <test_schema@@Base+0xa2c>
   115f0:	ldrsb	r0, [r1, r0]
   115f4:	cmp	r0, #14
   115f8:	bne	115d0 <test_schema@@Base+0xa2c>
   115fc:	cmp	r2, #7
   11600:	bhi	11618 <test_schema@@Base+0xa74>
   11604:	ldr	r0, [pc, #360]	; 11774 <test_schema@@Base+0xbd0>
   11608:	mvn	r6, #0
   1160c:	add	r0, pc, r0
   11610:	bl	10804 <puts@plt>
   11614:	b	10dfc <test_schema@@Base+0x258>
   11618:	ldrh	r0, [r3, #6]
   1161c:	cmp	r0, #0
   11620:	beq	11604 <test_schema@@Base+0xa60>
   11624:	ldrsb	r0, [r1, r0]
   11628:	cmp	r0, #15
   1162c:	bne	11604 <test_schema@@Base+0xa60>
   11630:	cmp	r2, #9
   11634:	bhi	1164c <test_schema@@Base+0xaa8>
   11638:	ldr	r0, [pc, #312]	; 11778 <test_schema@@Base+0xbd4>
   1163c:	mvn	r6, #0
   11640:	add	r0, pc, r0
   11644:	bl	10804 <puts@plt>
   11648:	b	10dfc <test_schema@@Base+0x258>
   1164c:	ldrh	r3, [r3, #8]
   11650:	cmp	r3, #0
   11654:	beq	11638 <test_schema@@Base+0xa94>
   11658:	ldr	r3, [r1, r3]
   1165c:	cmp	r5, r3
   11660:	beq	10dfc <test_schema@@Base+0x258>
   11664:	b	11638 <test_schema@@Base+0xa94>
   11668:	mov	r2, #0
   1166c:	mov	r3, #0
   11670:	b	111a8 <test_schema@@Base+0x604>
   11674:	bl	108a4 <__assert_fail@plt+0x40>
   11678:	ldr	r3, [pc, #252]	; 1177c <test_schema@@Base+0xbd8>
   1167c:	ldr	r1, [pc, #252]	; 11780 <test_schema@@Base+0xbdc>
   11680:	ldr	r0, [pc, #252]	; 11784 <test_schema@@Base+0xbe0>
   11684:	add	r3, pc, r3
   11688:	mov	r2, #192	; 0xc0
   1168c:	add	r3, r3, #112	; 0x70
   11690:	add	r1, pc, r1
   11694:	add	r0, pc, r0
   11698:	bl	10864 <__assert_fail@plt>
   1169c:	bl	10870 <__assert_fail@plt+0xc>
   116a0:	ldr	r3, [pc, #224]	; 11788 <test_schema@@Base+0xbe4>
   116a4:	ldr	r1, [pc, #224]	; 1178c <test_schema@@Base+0xbe8>
   116a8:	ldr	r0, [pc, #224]	; 11790 <test_schema@@Base+0xbec>
   116ac:	add	r3, pc, r3
   116b0:	mov	r2, #215	; 0xd7
   116b4:	add	r1, pc, r1
   116b8:	add	r0, pc, r0
   116bc:	bl	10864 <__assert_fail@plt>
   116c0:	bl	10b70 <_start@@Base+0x158>
   116c4:	bl	10b40 <_start@@Base+0x128>
   116c8:	bl	10940 <__assert_fail@plt+0xdc>
   116cc:	andeq	r0, r0, r4, lsr lr
   116d0:	andeq	r2, r0, r0, lsl r7
   116d4:	movtpl	r4, #9794	; 0x2642
   116d8:	muleq	r0, ip, fp
   116dc:	muleq	r0, ip, ip
   116e0:	andeq	r0, r0, r8, asr #26
   116e4:	andeq	r0, r0, r8, lsr pc
   116e8:	andeq	r0, r0, r4, lsr #22
   116ec:	andeq	r0, r0, r4, lsr #24
   116f0:	strdeq	r0, [r0], -ip
   116f4:			; <UNDEFINED> instruction: 0x00000cb4
   116f8:	andeq	r0, r0, r4, lsr sl
   116fc:	andeq	r0, r0, r4, lsr fp
   11700:	andeq	r0, r0, ip, lsl #24
   11704:	andeq	r0, r0, ip, ror #27
   11708:	strdeq	r0, [r0], -r8
   1170c:	andeq	r0, r0, ip, ror #21
   11710:	andeq	r0, r0, r8, lsr #17
   11714:	andeq	r0, r0, r8, lsr #19
   11718:	andeq	r0, r0, r0, lsl #21
   1171c:	andeq	r0, r0, r8, lsl #21
   11720:	andeq	r0, r0, r8, lsl #15
   11724:	andeq	r0, r0, r8, lsl #17
   11728:	andeq	r0, r0, r0, ror #18
   1172c:	muleq	r0, r4, r9
   11730:	andeq	r0, r0, r4, lsr #18
   11734:	andeq	r0, r0, r0, lsr r9
   11738:	andeq	r0, r0, r4, lsl r9
   1173c:	andeq	r0, r0, ip, ror #17
   11740:	muleq	r0, r4, r8
   11744:	andeq	r0, r0, r8, ror r8
   11748:	andeq	r0, r0, r8, lsr #15
   1174c:	andeq	r0, r0, ip, lsr r7
   11750:	andeq	r0, r0, r0, asr r4
   11754:	andeq	r0, r0, r0, asr r5
   11758:	andeq	r0, r0, r8, lsr #12
   1175c:	andeq	r0, r0, r4, ror #13
   11760:	andeq	r0, r0, r8, asr #13
   11764:			; <UNDEFINED> instruction: 0x000006b4
   11768:	strdeq	r0, [r0], -ip
   1176c:	andeq	r0, r0, r8, lsl #11
   11770:	andeq	r0, r0, r8, ror #10
   11774:	andeq	r0, r0, ip, asr r5
   11778:	andeq	r0, r0, r8, asr r5
   1177c:	andeq	r0, r0, r8, ror r1
   11780:	andeq	r0, r0, r8, ror r2
   11784:	andeq	r0, r0, ip, ror #5
   11788:	andeq	r0, r0, r0, asr r1
   1178c:	andeq	r0, r0, r4, asr r2
   11790:	andeq	r0, r0, r8, asr #5

00011794 <__libc_csu_init@@Base>:
   11794:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11798:	mov	r7, r0
   1179c:	ldr	r6, [pc, #72]	; 117ec <__libc_csu_init@@Base+0x58>
   117a0:	ldr	r5, [pc, #72]	; 117f0 <__libc_csu_init@@Base+0x5c>
   117a4:	add	r6, pc, r6
   117a8:	add	r5, pc, r5
   117ac:	sub	r6, r6, r5
   117b0:	mov	r8, r1
   117b4:	mov	r9, r2
   117b8:	bl	10784 <strcmp@plt-0x20>
   117bc:	asrs	r6, r6, #2
   117c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   117c4:	mov	r4, #0
   117c8:	add	r4, r4, #1
   117cc:	ldr	r3, [r5], #4
   117d0:	mov	r2, r9
   117d4:	mov	r1, r8
   117d8:	mov	r0, r7
   117dc:	blx	r3
   117e0:	cmp	r6, r4
   117e4:	bne	117c8 <__libc_csu_init@@Base+0x34>
   117e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117ec:	andeq	r0, r1, r4, ror #14
   117f0:	andeq	r0, r1, ip, asr r7

000117f4 <__libc_csu_fini@@Base>:
   117f4:	bx	lr

Disassembly of section .fini:

000117f8 <.fini>:
   117f8:	push	{r3, lr}
   117fc:	pop	{r3, pc}
