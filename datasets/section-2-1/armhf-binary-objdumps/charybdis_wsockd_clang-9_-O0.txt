
../repos/charybdis/wsockd/.libs/wsockd:     file format elf32-littlearm


Disassembly of section .init:

00010e2c <.init>:
   10e2c:	push	{r3, lr}
   10e30:	bl	11128 <rb_base64_encode@plt+0x48>
   10e34:	pop	{r3, pc}

Disassembly of section .plt:

00010e38 <open@plt-0x14>:
   10e38:	push	{lr}		; (str lr, [sp, #-4]!)
   10e3c:	ldr	lr, [pc, #4]	; 10e48 <open@plt-0x4>
   10e40:	add	lr, pc, lr
   10e44:	ldr	pc, [lr, #8]!
   10e48:			; <UNDEFINED> instruction: 0x000171b8

00010e4c <open@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #94208	; 0x17000
   10e54:	ldr	pc, [ip, #440]!	; 0x1b8

00010e58 <sigemptyset@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #94208	; 0x17000
   10e60:	ldr	pc, [ip, #432]!	; 0x1b0

00010e64 <strerror@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #94208	; 0x17000
   10e6c:	ldr	pc, [ip, #424]!	; 0x1a8

00010e70 <rb_get_type@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #94208	; 0x17000
   10e78:	ldr	pc, [ip, #416]!	; 0x1a0

00010e7c <abort@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #94208	; 0x17000
   10e84:	ldr	pc, [ip, #408]!	; 0x198

00010e88 <rb_event_addish@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #94208	; 0x17000
   10e90:	ldr	pc, [ip, #400]!	; 0x190

00010e94 <rb_ignore_errno@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #94208	; 0x17000
   10e9c:	ldr	pc, [ip, #392]!	; 0x188

00010ea0 <__libc_start_main@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #94208	; 0x17000
   10ea8:	ldr	pc, [ip, #384]!	; 0x180

00010eac <rb_setselect@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #94208	; 0x17000
   10eb4:	ldr	pc, [ip, #376]!	; 0x178

00010eb8 <__gmon_start__@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #94208	; 0x17000
   10ec0:	ldr	pc, [ip, #368]!	; 0x170

00010ec4 <rb_send_fd_buf@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #94208	; 0x17000
   10ecc:	ldr	pc, [ip, #360]!	; 0x168

00010ed0 <vsnprintf@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #94208	; 0x17000
   10ed8:	ldr	pc, [ip, #352]!	; 0x160

00010edc <getenv@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #94208	; 0x17000
   10ee4:	ldr	pc, [ip, #344]!	; 0x158

00010ee8 <calloc@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #94208	; 0x17000
   10ef0:	ldr	pc, [ip, #336]!	; 0x150

00010ef4 <htons@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #94208	; 0x17000
   10efc:	ldr	pc, [ip, #328]!	; 0x148

00010f00 <rb_set_nb@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #94208	; 0x17000
   10f08:	ldr	pc, [ip, #320]!	; 0x140

00010f0c <memset@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #94208	; 0x17000
   10f14:	ldr	pc, [ip, #312]!	; 0x138

00010f18 <__assert_fail@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #94208	; 0x17000
   10f20:	ldr	pc, [ip, #304]!	; 0x130

00010f24 <rb_linebuf_parse@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #94208	; 0x17000
   10f2c:	ldr	pc, [ip, #296]!	; 0x128

00010f30 <rb_strlcpy@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #94208	; 0x17000
   10f38:	ldr	pc, [ip, #288]!	; 0x120

00010f3c <rb_init_rawbuffers@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #94208	; 0x17000
   10f44:	ldr	pc, [ip, #280]!	; 0x118

00010f48 <free@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #94208	; 0x17000
   10f50:	ldr	pc, [ip, #272]!	; 0x110

00010f54 <rb_lib_loop@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #94208	; 0x17000
   10f5c:	ldr	pc, [ip, #264]!	; 0x108

00010f60 <rb_read@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #94208	; 0x17000
   10f68:	ldr	pc, [ip, #256]!	; 0x100

00010f6c <rb_set_type@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #94208	; 0x17000
   10f74:	ldr	pc, [ip, #248]!	; 0xf8

00010f78 <rb_linebuf_get@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #94208	; 0x17000
   10f80:	ldr	pc, [ip, #240]!	; 0xf0

00010f84 <ntohs@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #94208	; 0x17000
   10f8c:	ldr	pc, [ip, #232]!	; 0xe8

00010f90 <rb_linebuf_flush@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #94208	; 0x17000
   10f98:	ldr	pc, [ip, #224]!	; 0xe0

00010f9c <strlen@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #94208	; 0x17000
   10fa4:	ldr	pc, [ip, #216]!	; 0xd8

00010fa8 <memcpy@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #94208	; 0x17000
   10fb0:	ldr	pc, [ip, #208]!	; 0xd0

00010fb4 <rb_linebuf_donebuf@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #94208	; 0x17000
   10fbc:	ldr	pc, [ip, #200]!	; 0xc8

00010fc0 <rb_strcasestr@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #94208	; 0x17000
   10fc8:	ldr	pc, [ip, #192]!	; 0xc0

00010fcc <rb_close@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #94208	; 0x17000
   10fd4:	ldr	pc, [ip, #184]!	; 0xb8

00010fd8 <sigaddset@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #94208	; 0x17000
   10fe0:	ldr	pc, [ip, #176]!	; 0xb0

00010fe4 <atoi@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #94208	; 0x17000
   10fec:	ldr	pc, [ip, #168]!	; 0xa8

00010ff0 <rb_rawbuf_length@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #94208	; 0x17000
   10ff8:	ldr	pc, [ip, #160]!	; 0xa0

00010ffc <rb_free_rawbuffer@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #94208	; 0x17000
   11004:	ldr	pc, [ip, #152]!	; 0x98

00011008 <close@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #94208	; 0x17000
   11010:	ldr	pc, [ip, #144]!	; 0x90

00011014 <rb_outofmemory@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #94208	; 0x17000
   1101c:	ldr	pc, [ip, #136]!	; 0x88

00011020 <fprintf@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #94208	; 0x17000
   11028:	ldr	pc, [ip, #128]!	; 0x80

0001102c <rb_rawbuf_get@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #94208	; 0x17000
   11034:	ldr	pc, [ip, #120]!	; 0x78

00011038 <sigaction@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #94208	; 0x17000
   11040:	ldr	pc, [ip, #112]!	; 0x70

00011044 <rb_lib_init@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #94208	; 0x17000
   1104c:	ldr	pc, [ip, #104]!	; 0x68

00011050 <rb_new_rawbuffer@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #94208	; 0x17000
   11058:	ldr	pc, [ip, #96]!	; 0x60

0001105c <rb_open@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #94208	; 0x17000
   11064:	ldr	pc, [ip, #88]!	; 0x58

00011068 <rb_recv_fd_buf@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #94208	; 0x17000
   11070:	ldr	pc, [ip, #80]!	; 0x50

00011074 <dup2@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #94208	; 0x17000
   1107c:	ldr	pc, [ip, #72]!	; 0x48

00011080 <rb_linebuf_newbuf@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #94208	; 0x17000
   11088:	ldr	pc, [ip, #64]!	; 0x40

0001108c <htonl@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #94208	; 0x17000
   11094:	ldr	pc, [ip, #56]!	; 0x38

00011098 <rb_linebuf_init@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #94208	; 0x17000
   110a0:	ldr	pc, [ip, #48]!	; 0x30

000110a4 <getrlimit@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #94208	; 0x17000
   110ac:	ldr	pc, [ip, #40]!	; 0x28

000110b0 <rb_rawbuf_append@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #94208	; 0x17000
   110b8:	ldr	pc, [ip, #32]!

000110bc <rb_rawbuf_flush@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #94208	; 0x17000
   110c4:	ldr	pc, [ip, #24]!

000110c8 <exit@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #94208	; 0x17000
   110d0:	ldr	pc, [ip, #16]!

000110d4 <__errno_location@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #94208	; 0x17000
   110dc:	ldr	pc, [ip, #8]!

000110e0 <rb_base64_encode@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #94208	; 0x17000
   110e8:	ldr	pc, [ip, #0]!

Disassembly of section .text:

000110ec <.text>:
   110ec:	mov	fp, #0
   110f0:	mov	lr, #0
   110f4:	pop	{r1}		; (ldr r1, [sp], #4)
   110f8:	mov	r2, sp
   110fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11100:	push	{r0}		; (str r0, [sp, #-4]!)
   11104:	ldr	ip, [pc, #16]	; 1111c <rb_base64_encode@plt+0x3c>
   11108:	push	{ip}		; (str ip, [sp, #-4]!)
   1110c:	ldr	r0, [pc, #12]	; 11120 <rb_base64_encode@plt+0x40>
   11110:	ldr	r3, [pc, #12]	; 11124 <rb_base64_encode@plt+0x44>
   11114:	bl	10ea0 <__libc_start_main@plt>
   11118:	bl	10e7c <abort@plt>
   1111c:	andeq	r6, r1, ip, ror lr
   11120:	ldrdeq	r1, [r1], -ip
   11124:	andeq	r6, r1, ip, lsl lr
   11128:	ldr	r3, [pc, #20]	; 11144 <rb_base64_encode@plt+0x64>
   1112c:	ldr	r2, [pc, #20]	; 11148 <rb_base64_encode@plt+0x68>
   11130:	add	r3, pc, r3
   11134:	ldr	r2, [r3, r2]
   11138:	cmp	r2, #0
   1113c:	bxeq	lr
   11140:	b	10eb8 <__gmon_start__@plt>
   11144:	andeq	r6, r1, r8, asr #29
   11148:	andeq	r0, r0, ip, ror #1
   1114c:	ldr	r0, [pc, #24]	; 1116c <rb_base64_encode@plt+0x8c>
   11150:	ldr	r3, [pc, #24]	; 11170 <rb_base64_encode@plt+0x90>
   11154:	cmp	r3, r0
   11158:	bxeq	lr
   1115c:	ldr	r3, [pc, #16]	; 11174 <rb_base64_encode@plt+0x94>
   11160:	cmp	r3, #0
   11164:	bxeq	lr
   11168:	bx	r3
   1116c:	andeq	r8, r2, r0, lsl #2
   11170:	andeq	r8, r2, r0, lsl #2
   11174:	andeq	r0, r0, r0
   11178:	ldr	r0, [pc, #36]	; 111a4 <rb_base64_encode@plt+0xc4>
   1117c:	ldr	r1, [pc, #36]	; 111a8 <rb_base64_encode@plt+0xc8>
   11180:	sub	r1, r1, r0
   11184:	asr	r1, r1, #2
   11188:	add	r1, r1, r1, lsr #31
   1118c:	asrs	r1, r1, #1
   11190:	bxeq	lr
   11194:	ldr	r3, [pc, #16]	; 111ac <rb_base64_encode@plt+0xcc>
   11198:	cmp	r3, #0
   1119c:	bxeq	lr
   111a0:	bx	r3
   111a4:	andeq	r8, r2, r0, lsl #2
   111a8:	andeq	r8, r2, r0, lsl #2
   111ac:	andeq	r0, r0, r0
   111b0:	push	{r4, lr}
   111b4:	ldr	r4, [pc, #24]	; 111d4 <rb_base64_encode@plt+0xf4>
   111b8:	ldrb	r3, [r4]
   111bc:	cmp	r3, #0
   111c0:	popne	{r4, pc}
   111c4:	bl	1114c <rb_base64_encode@plt+0x6c>
   111c8:	mov	r3, #1
   111cc:	strb	r3, [r4]
   111d0:	pop	{r4, pc}
   111d4:	andeq	r8, r2, r0, lsl #2
   111d8:	b	11178 <rb_base64_encode@plt+0x98>
   111dc:	push	{fp, lr}
   111e0:	mov	fp, sp
   111e4:	sub	sp, sp, #88	; 0x58
   111e8:	movw	r2, #0
   111ec:	str	r2, [fp, #-4]
   111f0:	str	r0, [fp, #-8]
   111f4:	str	r1, [fp, #-12]
   111f8:	bl	11580 <rb_base64_encode@plt+0x4a0>
   111fc:	ldr	r1, [pc, #824]	; 1153c <rb_base64_encode@plt+0x45c>
   11200:	add	r1, pc, r1
   11204:	str	r0, [fp, #-36]	; 0xffffffdc
   11208:	mov	r0, r1
   1120c:	bl	10edc <getenv@plt>
   11210:	ldr	r1, [pc, #800]	; 11538 <rb_base64_encode@plt+0x458>
   11214:	add	r1, pc, r1
   11218:	str	r0, [fp, #-16]
   1121c:	mov	r0, r1
   11220:	bl	10edc <getenv@plt>
   11224:	ldr	r1, [pc, #776]	; 11534 <rb_base64_encode@plt+0x454>
   11228:	add	r1, pc, r1
   1122c:	str	r0, [fp, #-20]	; 0xffffffec
   11230:	mov	r0, r1
   11234:	bl	10edc <getenv@plt>
   11238:	str	r0, [fp, #-24]	; 0xffffffe8
   1123c:	ldr	r0, [fp, #-16]
   11240:	movw	r1, #0
   11244:	cmp	r0, r1
   11248:	beq	1126c <rb_base64_encode@plt+0x18c>
   1124c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11250:	movw	r1, #0
   11254:	cmp	r0, r1
   11258:	beq	1126c <rb_base64_encode@plt+0x18c>
   1125c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11260:	movw	r1, #0
   11264:	cmp	r0, r1
   11268:	bne	112b4 <rb_base64_encode@plt+0x1d4>
   1126c:	ldr	r0, [pc, #772]	; 11578 <rb_base64_encode@plt+0x498>
   11270:	add	r1, pc, r0
   11274:	ldr	r0, [pc, #768]	; 1157c <rb_base64_encode@plt+0x49c>
   11278:	ldr	r0, [pc, r0]
   1127c:	ldr	r0, [r0]
   11280:	bl	11020 <fprintf@plt>
   11284:	ldr	r1, [pc, #740]	; 11570 <rb_base64_encode@plt+0x490>
   11288:	add	r1, pc, r1
   1128c:	ldr	r2, [pc, #736]	; 11574 <rb_base64_encode@plt+0x494>
   11290:	ldr	r2, [pc, r2]
   11294:	ldr	r2, [r2]
   11298:	str	r0, [sp, #44]	; 0x2c
   1129c:	mov	r0, r2
   112a0:	bl	11020 <fprintf@plt>
   112a4:	movw	r1, #1
   112a8:	str	r0, [sp, #40]	; 0x28
   112ac:	mov	r0, r1
   112b0:	bl	110c8 <exit@plt>
   112b4:	ldr	r0, [fp, #-16]
   112b8:	bl	10fe4 <atoi@plt>
   112bc:	str	r0, [fp, #-28]	; 0xffffffe4
   112c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   112c4:	bl	10fe4 <atoi@plt>
   112c8:	str	r0, [fp, #-32]	; 0xffffffe0
   112cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   112d0:	bl	10fe4 <atoi@plt>
   112d4:	ldr	r1, [pc, #612]	; 11540 <rb_base64_encode@plt+0x460>
   112d8:	add	r1, pc, r1
   112dc:	str	r0, [r1]
   112e0:	movw	r0, #0
   112e4:	str	r0, [fp, #-40]	; 0xffffffd8
   112e8:	str	r0, [fp, #-40]	; 0xffffffd8
   112ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   112f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   112f4:	cmp	r0, r1
   112f8:	bge	11344 <rb_base64_encode@plt+0x264>
   112fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11300:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11304:	cmp	r0, r1
   11308:	beq	11330 <rb_base64_encode@plt+0x250>
   1130c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11310:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11314:	cmp	r0, r1
   11318:	beq	11330 <rb_base64_encode@plt+0x250>
   1131c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11320:	cmp	r0, #2
   11324:	ble	11330 <rb_base64_encode@plt+0x250>
   11328:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1132c:	bl	11008 <close@plt>
   11330:	b	11334 <rb_base64_encode@plt+0x254>
   11334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11338:	add	r0, r0, #1
   1133c:	str	r0, [fp, #-40]	; 0xffffffd8
   11340:	b	112ec <rb_base64_encode@plt+0x20c>
   11344:	ldr	r0, [pc, #504]	; 11544 <rb_base64_encode@plt+0x464>
   11348:	add	r0, pc, r0
   1134c:	movw	r1, #2
   11350:	bl	10e4c <open@plt>
   11354:	str	r0, [fp, #-40]	; 0xffffffd8
   11358:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1135c:	cmp	r0, #0
   11360:	blt	113e8 <rb_base64_encode@plt+0x308>
   11364:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11368:	cmp	r0, #0
   1136c:	beq	11388 <rb_base64_encode@plt+0x2a8>
   11370:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11374:	cmp	r0, #0
   11378:	beq	11388 <rb_base64_encode@plt+0x2a8>
   1137c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11380:	movw	r1, #0
   11384:	bl	11074 <dup2@plt>
   11388:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1138c:	cmp	r0, #1
   11390:	beq	113ac <rb_base64_encode@plt+0x2cc>
   11394:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11398:	cmp	r0, #1
   1139c:	beq	113ac <rb_base64_encode@plt+0x2cc>
   113a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   113a4:	movw	r1, #1
   113a8:	bl	11074 <dup2@plt>
   113ac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   113b0:	cmp	r0, #2
   113b4:	beq	113d0 <rb_base64_encode@plt+0x2f0>
   113b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   113bc:	cmp	r0, #2
   113c0:	beq	113d0 <rb_base64_encode@plt+0x2f0>
   113c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   113c8:	movw	r1, #2
   113cc:	bl	11074 <dup2@plt>
   113d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   113d4:	cmp	r0, #2
   113d8:	ble	113e4 <rb_base64_encode@plt+0x304>
   113dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   113e0:	bl	11008 <close@plt>
   113e4:	b	113e8 <rb_base64_encode@plt+0x308>
   113e8:	bl	115c0 <rb_base64_encode@plt+0x4e0>
   113ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   113f0:	movw	r1, #0
   113f4:	str	r0, [sp, #36]	; 0x24
   113f8:	mov	r0, r1
   113fc:	str	r1, [sp, #32]
   11400:	ldr	r2, [sp, #32]
   11404:	ldr	r3, [sp, #32]
   11408:	ldr	ip, [sp, #36]	; 0x24
   1140c:	str	ip, [sp]
   11410:	movw	lr, #1024	; 0x400
   11414:	str	lr, [sp, #4]
   11418:	movw	lr, #4096	; 0x1000
   1141c:	str	lr, [sp, #8]
   11420:	bl	11044 <rb_lib_init@plt>
   11424:	movw	r0, #4096	; 0x1000
   11428:	bl	11098 <rb_linebuf_init@plt>
   1142c:	movw	r0, #4096	; 0x1000
   11430:	bl	10f3c <rb_init_rawbuffers@plt>
   11434:	movw	r0, #48	; 0x30
   11438:	bl	116c0 <rb_base64_encode@plt+0x5e0>
   1143c:	ldr	r1, [pc, #292]	; 11568 <rb_base64_encode@plt+0x488>
   11440:	add	r2, pc, r1
   11444:	ldr	r1, [pc, #288]	; 1156c <rb_base64_encode@plt+0x48c>
   11448:	add	r1, pc, r1
   1144c:	str	r0, [r1]
   11450:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11454:	movw	r1, #4
   11458:	and	r1, r1, #255	; 0xff
   1145c:	bl	1105c <rb_open@plt>
   11460:	ldr	r1, [pc, #248]	; 11560 <rb_base64_encode@plt+0x480>
   11464:	add	r2, pc, r1
   11468:	ldr	r1, [pc, #244]	; 11564 <rb_base64_encode@plt+0x484>
   1146c:	add	r1, pc, r1
   11470:	ldr	r1, [r1]
   11474:	str	r0, [r1, #16]
   11478:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1147c:	movw	r1, #8
   11480:	and	r1, r1, #255	; 0xff
   11484:	bl	1105c <rb_open@plt>
   11488:	ldr	r1, [pc, #204]	; 1155c <rb_base64_encode@plt+0x47c>
   1148c:	add	r1, pc, r1
   11490:	ldr	r2, [r1]
   11494:	str	r0, [r2, #20]
   11498:	ldr	r0, [r1]
   1149c:	ldr	r0, [r0, #16]
   114a0:	bl	10f00 <rb_set_nb@plt>
   114a4:	ldr	r1, [pc, #172]	; 11558 <rb_base64_encode@plt+0x478>
   114a8:	add	r1, pc, r1
   114ac:	ldr	r1, [r1]
   114b0:	ldr	r1, [r1, #20]
   114b4:	str	r0, [sp, #28]
   114b8:	mov	r0, r1
   114bc:	bl	10f00 <rb_set_nb@plt>
   114c0:	ldr	r1, [pc, #136]	; 11550 <rb_base64_encode@plt+0x470>
   114c4:	add	r1, pc, r1
   114c8:	ldr	r2, [pc, #132]	; 11554 <rb_base64_encode@plt+0x474>
   114cc:	add	r2, pc, r2
   114d0:	str	r0, [sp, #24]
   114d4:	mov	r0, r1
   114d8:	mov	r1, r2
   114dc:	movw	r2, #0
   114e0:	movw	r3, #10
   114e4:	bl	10e88 <rb_event_addish@plt>
   114e8:	ldr	r1, [pc, #92]	; 1154c <rb_base64_encode@plt+0x46c>
   114ec:	add	r1, pc, r1
   114f0:	ldr	r1, [r1]
   114f4:	ldr	r1, [r1, #20]
   114f8:	str	r0, [sp, #20]
   114fc:	mov	r0, r1
   11500:	movw	r1, #0
   11504:	bl	117f4 <rb_base64_encode@plt+0x714>
   11508:	ldr	r0, [pc, #56]	; 11548 <rb_base64_encode@plt+0x468>
   1150c:	add	r0, pc, r0
   11510:	ldr	r1, [r0]
   11514:	ldr	r1, [r1, #16]
   11518:	ldr	r0, [r0]
   1151c:	str	r0, [sp, #16]
   11520:	mov	r0, r1
   11524:	ldr	r1, [sp, #16]
   11528:	bl	11884 <rb_base64_encode@plt+0x7a4>
   1152c:	movw	r0, #0
   11530:	bl	10f54 <rb_lib_loop@plt>
   11534:	andeq	r5, r0, ip, ror #24
   11538:	andeq	r5, r0, r7, ror ip
   1153c:	andeq	r5, r0, r4, lsl #25
   11540:	andeq	r6, r1, r4, lsr #28
   11544:			; <UNDEFINED> instruction: 0x00005bbc
   11548:	strdeq	r6, [r1], -r4
   1154c:	andeq	r6, r1, r4, lsl ip
   11550:	andeq	r5, r0, r8, ror #20
   11554:	andeq	r0, r0, r4, asr #4
   11558:	andeq	r6, r1, r8, asr ip
   1155c:	andeq	r6, r1, r4, ror ip
   11560:			; <UNDEFINED> instruction: 0x00005abe
   11564:	muleq	r1, r4, ip
   11568:	andeq	r5, r0, lr, asr #21
   1156c:			; <UNDEFINED> instruction: 0x00016cb8
   11570:	andeq	r5, r0, sl, asr #24
   11574:	andeq	r6, r1, r8, asr lr
   11578:	andeq	r5, r0, sp, lsr #24
   1157c:	andeq	r6, r1, r0, ror lr
   11580:	push	{fp, lr}
   11584:	mov	fp, sp
   11588:	sub	sp, sp, #16
   1158c:	movw	r0, #7
   11590:	add	r1, sp, #4
   11594:	bl	110a4 <getrlimit@plt>
   11598:	cmp	r0, #0
   1159c:	bne	115ac <rb_base64_encode@plt+0x4cc>
   115a0:	ldr	r0, [sp, #4]
   115a4:	str	r0, [fp, #-4]
   115a8:	b	115b4 <rb_base64_encode@plt+0x4d4>
   115ac:	movw	r0, #65535	; 0xffff
   115b0:	str	r0, [fp, #-4]
   115b4:	ldr	r0, [fp, #-4]
   115b8:	mov	sp, fp
   115bc:	pop	{fp, pc}
   115c0:	push	{fp, lr}
   115c4:	mov	fp, sp
   115c8:	sub	sp, sp, #176	; 0xb0
   115cc:	movw	r0, #0
   115d0:	str	r0, [sp, #168]	; 0xa8
   115d4:	movw	r0, #1
   115d8:	str	r0, [sp, #36]	; 0x24
   115dc:	add	r0, sp, #36	; 0x24
   115e0:	add	r0, r0, #4
   115e4:	bl	10e58 <sigemptyset@plt>
   115e8:	add	r1, sp, #36	; 0x24
   115ec:	add	r1, r1, #4
   115f0:	str	r0, [sp, #32]
   115f4:	mov	r0, r1
   115f8:	movw	r1, #13
   115fc:	bl	10fd8 <sigaddset@plt>
   11600:	add	r1, sp, #36	; 0x24
   11604:	add	r1, r1, #4
   11608:	str	r0, [sp, #28]
   1160c:	mov	r0, r1
   11610:	movw	r1, #14
   11614:	bl	10fd8 <sigaddset@plt>
   11618:	add	r1, sp, #36	; 0x24
   1161c:	add	r1, r1, #4
   11620:	str	r0, [sp, #24]
   11624:	mov	r0, r1
   11628:	movw	r1, #5
   1162c:	bl	10fd8 <sigaddset@plt>
   11630:	add	r1, sp, #36	; 0x24
   11634:	add	r1, r1, #4
   11638:	str	r0, [sp, #20]
   1163c:	mov	r0, r1
   11640:	movw	r1, #28
   11644:	bl	10fd8 <sigaddset@plt>
   11648:	movw	r1, #28
   1164c:	str	r0, [sp, #16]
   11650:	mov	r0, r1
   11654:	add	r1, sp, #36	; 0x24
   11658:	movw	r2, #0
   1165c:	bl	11038 <sigaction@plt>
   11660:	movw	r1, #13
   11664:	str	r0, [sp, #12]
   11668:	mov	r0, r1
   1166c:	add	r1, sp, #36	; 0x24
   11670:	movw	r2, #0
   11674:	bl	11038 <sigaction@plt>
   11678:	movw	r1, #5
   1167c:	str	r0, [sp, #8]
   11680:	mov	r0, r1
   11684:	add	r1, sp, #36	; 0x24
   11688:	movw	r2, #0
   1168c:	bl	11038 <sigaction@plt>
   11690:	ldr	r1, [pc, #36]	; 116bc <rb_base64_encode@plt+0x5dc>
   11694:	add	r1, pc, r1
   11698:	str	r1, [sp, #36]	; 0x24
   1169c:	movw	r1, #14
   116a0:	str	r0, [sp, #4]
   116a4:	mov	r0, r1
   116a8:	add	r1, sp, #36	; 0x24
   116ac:	movw	r2, #0
   116b0:	bl	11038 <sigaction@plt>
   116b4:	mov	sp, fp
   116b8:	pop	{fp, pc}
   116bc:	muleq	r0, r0, r3
   116c0:	push	{fp, lr}
   116c4:	mov	fp, sp
   116c8:	sub	sp, sp, #8
   116cc:	str	r0, [sp, #4]
   116d0:	ldr	r1, [sp, #4]
   116d4:	movw	r0, #1
   116d8:	bl	10ee8 <calloc@plt>
   116dc:	str	r0, [sp]
   116e0:	ldr	r0, [sp]
   116e4:	movw	r1, #0
   116e8:	cmp	r0, r1
   116ec:	movw	r0, #0
   116f0:	moveq	r0, #1
   116f4:	mvn	r1, #0
   116f8:	eor	r0, r0, r1
   116fc:	eor	r0, r0, r1
   11700:	tst	r0, #1
   11704:	beq	1170c <rb_base64_encode@plt+0x62c>
   11708:	bl	11014 <rb_outofmemory@plt>
   1170c:	ldr	r0, [sp]
   11710:	mov	sp, fp
   11714:	pop	{fp, pc}
   11718:	push	{fp, lr}
   1171c:	mov	fp, sp
   11720:	sub	sp, sp, #24
   11724:	ldr	r1, [pc, #192]	; 117ec <rb_base64_encode@plt+0x70c>
   11728:	add	r1, pc, r1
   1172c:	str	r0, [fp, #-4]
   11730:	ldr	r0, [r1]
   11734:	str	r0, [sp, #12]
   11738:	ldr	r0, [sp, #12]
   1173c:	movw	r1, #0
   11740:	cmp	r0, r1
   11744:	beq	11758 <rb_base64_encode@plt+0x678>
   11748:	ldr	r0, [sp, #12]
   1174c:	ldr	r0, [r0, #8]
   11750:	str	r0, [sp, #4]
   11754:	b	11764 <rb_base64_encode@plt+0x684>
   11758:	movw	r0, #0
   1175c:	str	r0, [sp, #4]
   11760:	b	11764 <rb_base64_encode@plt+0x684>
   11764:	ldr	r0, [sp, #4]
   11768:	str	r0, [sp, #8]
   1176c:	ldr	r0, [sp, #12]
   11770:	movw	r1, #0
   11774:	cmp	r0, r1
   11778:	beq	117d0 <rb_base64_encode@plt+0x6f0>
   1177c:	ldr	r0, [sp, #12]
   11780:	ldr	r0, [r0]
   11784:	str	r0, [fp, #-8]
   11788:	ldr	r0, [fp, #-8]
   1178c:	bl	11a3c <rb_base64_encode@plt+0x95c>
   11790:	ldr	r0, [sp, #8]
   11794:	str	r0, [sp, #12]
   11798:	ldr	r0, [sp, #12]
   1179c:	movw	r1, #0
   117a0:	cmp	r0, r1
   117a4:	beq	117b8 <rb_base64_encode@plt+0x6d8>
   117a8:	ldr	r0, [sp, #12]
   117ac:	ldr	r0, [r0, #8]
   117b0:	str	r0, [sp]
   117b4:	b	117c4 <rb_base64_encode@plt+0x6e4>
   117b8:	movw	r0, #0
   117bc:	str	r0, [sp]
   117c0:	b	117c4 <rb_base64_encode@plt+0x6e4>
   117c4:	ldr	r0, [sp]
   117c8:	str	r0, [sp, #8]
   117cc:	b	1176c <rb_base64_encode@plt+0x68c>
   117d0:	ldr	r0, [pc, #24]	; 117f0 <rb_base64_encode@plt+0x710>
   117d4:	add	r0, pc, r0
   117d8:	movw	r1, #0
   117dc:	str	r1, [r0]
   117e0:	str	r1, [r0, #4]
   117e4:	mov	sp, fp
   117e8:	pop	{fp, pc}
   117ec:	ldrdeq	r6, [r1], -ip
   117f0:	andeq	r6, r1, r0, lsr r9
   117f4:	push	{r4, r5, fp, lr}
   117f8:	add	fp, sp, #8
   117fc:	sub	sp, sp, #16
   11800:	sub	sp, sp, #16384	; 0x4000
   11804:	str	r0, [fp, #-12]
   11808:	str	r1, [fp, #-16]
   1180c:	add	r1, sp, #8
   11810:	ldr	r0, [fp, #-12]
   11814:	movw	r2, #16384	; 0x4000
   11818:	bl	10f60 <rb_read@plt>
   1181c:	str	r0, [sp, #4]
   11820:	cmp	r0, #0
   11824:	ble	1182c <rb_base64_encode@plt+0x74c>
   11828:	b	1180c <rb_base64_encode@plt+0x72c>
   1182c:	ldr	r0, [sp, #4]
   11830:	cmp	r0, #0
   11834:	beq	11858 <rb_base64_encode@plt+0x778>
   11838:	ldr	r0, [sp, #4]
   1183c:	cmp	r0, #0
   11840:	bge	11860 <rb_base64_encode@plt+0x780>
   11844:	bl	110d4 <__errno_location@plt>
   11848:	ldr	r0, [r0]
   1184c:	bl	10e94 <rb_ignore_errno@plt>
   11850:	cmp	r0, #0
   11854:	bne	11860 <rb_base64_encode@plt+0x780>
   11858:	movw	r0, #0
   1185c:	bl	110c8 <exit@plt>
   11860:	ldr	r0, [pc, #24]	; 11880 <rb_base64_encode@plt+0x7a0>
   11864:	add	r2, pc, r0
   11868:	ldr	r0, [fp, #-12]
   1186c:	movw	r1, #1
   11870:	movw	r3, #0
   11874:	bl	10eac <rb_setselect@plt>
   11878:	sub	sp, fp, #8
   1187c:	pop	{r4, r5, fp, pc}
   11880:			; <UNDEFINED> instruction: 0xffffff88
   11884:	push	{fp, lr}
   11888:	mov	fp, sp
   1188c:	sub	sp, sp, #40	; 0x28
   11890:	str	r0, [fp, #-4]
   11894:	str	r1, [fp, #-8]
   11898:	ldr	r0, [fp, #-8]
   1189c:	str	r0, [fp, #-16]
   118a0:	movw	r0, #40	; 0x28
   118a4:	bl	116c0 <rb_base64_encode@plt+0x5e0>
   118a8:	str	r0, [fp, #-12]
   118ac:	movw	r0, #16384	; 0x4000
   118b0:	bl	116c0 <rb_base64_encode@plt+0x5e0>
   118b4:	ldr	r1, [fp, #-12]
   118b8:	str	r0, [r1, #12]
   118bc:	ldr	r0, [fp, #-12]
   118c0:	movw	r1, #16384	; 0x4000
   118c4:	str	r1, [r0, #16]
   118c8:	ldr	r0, [fp, #-16]
   118cc:	ldr	r0, [r0, #16]
   118d0:	ldr	r1, [fp, #-12]
   118d4:	ldr	r1, [r1, #12]
   118d8:	ldr	r2, [fp, #-12]
   118dc:	ldr	r2, [r2, #16]
   118e0:	ldr	r3, [fp, #-12]
   118e4:	add	r3, r3, #20
   118e8:	movw	ip, #4
   118ec:	str	ip, [sp]
   118f0:	bl	11068 <rb_recv_fd_buf@plt>
   118f4:	str	r0, [sp, #20]
   118f8:	ldr	r0, [sp, #20]
   118fc:	cmp	r0, #0
   11900:	bgt	1191c <rb_base64_encode@plt+0x83c>
   11904:	ldr	r0, [fp, #-12]
   11908:	ldr	r0, [r0, #12]
   1190c:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   11910:	ldr	r0, [fp, #-12]
   11914:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   11918:	b	119ac <rb_base64_encode@plt+0x8cc>
   1191c:	ldr	r0, [sp, #20]
   11920:	ldr	r1, [fp, #-12]
   11924:	str	r0, [r1, #16]
   11928:	ldr	r0, [fp, #-12]
   1192c:	ldr	r1, [fp, #-12]
   11930:	ldr	r2, [fp, #-16]
   11934:	add	r2, r2, #24
   11938:	bl	11ad4 <rb_base64_encode@plt+0x9f4>
   1193c:	movw	r0, #0
   11940:	str	r0, [sp, #16]
   11944:	ldr	r0, [sp, #16]
   11948:	cmp	r0, #4
   1194c:	movw	r0, #0
   11950:	str	r0, [sp, #12]
   11954:	bge	11980 <rb_base64_encode@plt+0x8a0>
   11958:	ldr	r0, [fp, #-12]
   1195c:	add	r0, r0, #20
   11960:	ldr	r1, [sp, #16]
   11964:	add	r0, r0, r1, lsl #2
   11968:	ldr	r0, [r0]
   1196c:	movw	r1, #0
   11970:	cmp	r0, r1
   11974:	movw	r0, #0
   11978:	movne	r0, #1
   1197c:	str	r0, [sp, #12]
   11980:	ldr	r0, [sp, #12]
   11984:	tst	r0, #1
   11988:	beq	119a0 <rb_base64_encode@plt+0x8c0>
   1198c:	b	11990 <rb_base64_encode@plt+0x8b0>
   11990:	ldr	r0, [sp, #16]
   11994:	add	r0, r0, #1
   11998:	str	r0, [sp, #16]
   1199c:	b	11944 <rb_base64_encode@plt+0x864>
   119a0:	ldr	r0, [sp, #16]
   119a4:	ldr	r1, [fp, #-12]
   119a8:	str	r0, [r1, #36]	; 0x24
   119ac:	b	119b0 <rb_base64_encode@plt+0x8d0>
   119b0:	ldr	r0, [sp, #20]
   119b4:	cmp	r0, #0
   119b8:	bgt	118a0 <rb_base64_encode@plt+0x7c0>
   119bc:	ldr	r0, [sp, #20]
   119c0:	cmp	r0, #0
   119c4:	beq	119e8 <rb_base64_encode@plt+0x908>
   119c8:	ldr	r0, [sp, #20]
   119cc:	cmp	r0, #0
   119d0:	bge	119f0 <rb_base64_encode@plt+0x910>
   119d4:	bl	110d4 <__errno_location@plt>
   119d8:	ldr	r0, [r0]
   119dc:	bl	10e94 <rb_ignore_errno@plt>
   119e0:	cmp	r0, #0
   119e4:	bne	119f0 <rb_base64_encode@plt+0x910>
   119e8:	movw	r0, #0
   119ec:	bl	110c8 <exit@plt>
   119f0:	ldr	r0, [fp, #-16]
   119f4:	bl	11c40 <rb_base64_encode@plt+0xb60>
   119f8:	ldr	r0, [pc, #40]	; 11a28 <rb_base64_encode@plt+0x948>
   119fc:	add	r2, pc, r0
   11a00:	ldr	r0, [fp, #-16]
   11a04:	ldr	r0, [r0, #16]
   11a08:	ldr	r1, [fp, #-16]
   11a0c:	movw	r3, #1
   11a10:	str	r1, [sp, #8]
   11a14:	mov	r1, r3
   11a18:	ldr	r3, [sp, #8]
   11a1c:	bl	10eac <rb_setselect@plt>
   11a20:	mov	sp, fp
   11a24:	pop	{fp, pc}
   11a28:			; <UNDEFINED> instruction: 0xfffffe80
   11a2c:	sub	sp, sp, #4
   11a30:	str	r0, [sp]
   11a34:	add	sp, sp, #4
   11a38:	bx	lr
   11a3c:	push	{fp, lr}
   11a40:	mov	fp, sp
   11a44:	sub	sp, sp, #8
   11a48:	str	r0, [sp, #4]
   11a4c:	ldr	r0, [sp, #4]
   11a50:	add	r0, r0, #52	; 0x34
   11a54:	bl	10fb4 <rb_linebuf_donebuf@plt>
   11a58:	ldr	r0, [sp, #4]
   11a5c:	add	r0, r0, #24
   11a60:	bl	10fb4 <rb_linebuf_donebuf@plt>
   11a64:	ldr	r0, [sp, #4]
   11a68:	ldr	r0, [r0, #20]
   11a6c:	bl	10ffc <rb_free_rawbuffer@plt>
   11a70:	ldr	r0, [sp, #4]
   11a74:	ldr	r0, [r0, #16]
   11a78:	bl	10ffc <rb_free_rawbuffer@plt>
   11a7c:	ldr	r0, [sp, #4]
   11a80:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   11a84:	mov	sp, fp
   11a88:	pop	{fp, pc}
   11a8c:	push	{fp, lr}
   11a90:	mov	fp, sp
   11a94:	sub	sp, sp, #8
   11a98:	str	r0, [sp, #4]
   11a9c:	ldr	r0, [sp, #4]
   11aa0:	movw	r1, #0
   11aa4:	cmp	r0, r1
   11aa8:	movw	r0, #0
   11aac:	movne	r0, #1
   11ab0:	mvn	r1, #0
   11ab4:	eor	r0, r0, r1
   11ab8:	eor	r0, r0, r1
   11abc:	tst	r0, #1
   11ac0:	beq	11acc <rb_base64_encode@plt+0x9ec>
   11ac4:	ldr	r0, [sp, #4]
   11ac8:	bl	10f48 <free@plt>
   11acc:	mov	sp, fp
   11ad0:	pop	{fp, pc}
   11ad4:	push	{fp, lr}
   11ad8:	mov	fp, sp
   11adc:	sub	sp, sp, #16
   11ae0:	str	r0, [fp, #-4]
   11ae4:	str	r1, [sp, #8]
   11ae8:	str	r2, [sp, #4]
   11aec:	ldr	r0, [sp, #8]
   11af0:	movw	r1, #0
   11af4:	cmp	r0, r1
   11af8:	beq	11b00 <rb_base64_encode@plt+0xa20>
   11afc:	b	11b20 <rb_base64_encode@plt+0xa40>
   11b00:	ldr	r0, [pc, #276]	; 11c1c <rb_base64_encode@plt+0xb3c>
   11b04:	add	r0, pc, r0
   11b08:	ldr	r1, [pc, #272]	; 11c20 <rb_base64_encode@plt+0xb40>
   11b0c:	add	r1, pc, r1
   11b10:	ldr	r2, [pc, #268]	; 11c24 <rb_base64_encode@plt+0xb44>
   11b14:	add	r3, pc, r2
   11b18:	movw	r2, #211	; 0xd3
   11b1c:	bl	10f18 <__assert_fail@plt>
   11b20:	ldr	r0, [sp, #4]
   11b24:	movw	r1, #0
   11b28:	cmp	r0, r1
   11b2c:	beq	11b34 <rb_base64_encode@plt+0xa54>
   11b30:	b	11b54 <rb_base64_encode@plt+0xa74>
   11b34:	ldr	r0, [pc, #236]	; 11c28 <rb_base64_encode@plt+0xb48>
   11b38:	add	r0, pc, r0
   11b3c:	ldr	r1, [pc, #232]	; 11c2c <rb_base64_encode@plt+0xb4c>
   11b40:	add	r1, pc, r1
   11b44:	ldr	r2, [pc, #228]	; 11c30 <rb_base64_encode@plt+0xb50>
   11b48:	add	r3, pc, r2
   11b4c:	movw	r2, #212	; 0xd4
   11b50:	bl	10f18 <__assert_fail@plt>
   11b54:	ldr	r0, [fp, #-4]
   11b58:	movw	r1, #0
   11b5c:	cmp	r0, r1
   11b60:	beq	11b68 <rb_base64_encode@plt+0xa88>
   11b64:	b	11b88 <rb_base64_encode@plt+0xaa8>
   11b68:	ldr	r0, [pc, #196]	; 11c34 <rb_base64_encode@plt+0xb54>
   11b6c:	add	r0, pc, r0
   11b70:	ldr	r1, [pc, #192]	; 11c38 <rb_base64_encode@plt+0xb58>
   11b74:	add	r1, pc, r1
   11b78:	ldr	r2, [pc, #188]	; 11c3c <rb_base64_encode@plt+0xb5c>
   11b7c:	add	r3, pc, r2
   11b80:	movw	r2, #213	; 0xd5
   11b84:	bl	10f18 <__assert_fail@plt>
   11b88:	ldr	r0, [fp, #-4]
   11b8c:	ldr	r1, [sp, #8]
   11b90:	str	r0, [r1]
   11b94:	ldr	r0, [sp, #8]
   11b98:	movw	r1, #0
   11b9c:	str	r1, [r0, #8]
   11ba0:	ldr	r0, [sp, #4]
   11ba4:	ldr	r0, [r0, #4]
   11ba8:	ldr	r2, [sp, #8]
   11bac:	str	r0, [r2, #4]
   11bb0:	ldr	r0, [sp, #4]
   11bb4:	ldr	r0, [r0, #4]
   11bb8:	cmp	r0, r1
   11bbc:	beq	11bd4 <rb_base64_encode@plt+0xaf4>
   11bc0:	ldr	r0, [sp, #8]
   11bc4:	ldr	r1, [sp, #4]
   11bc8:	ldr	r1, [r1, #4]
   11bcc:	str	r0, [r1, #8]
   11bd0:	b	11bf8 <rb_base64_encode@plt+0xb18>
   11bd4:	ldr	r0, [sp, #4]
   11bd8:	ldr	r0, [r0]
   11bdc:	movw	r1, #0
   11be0:	cmp	r0, r1
   11be4:	bne	11bf4 <rb_base64_encode@plt+0xb14>
   11be8:	ldr	r0, [sp, #8]
   11bec:	ldr	r1, [sp, #4]
   11bf0:	str	r0, [r1]
   11bf4:	b	11bf8 <rb_base64_encode@plt+0xb18>
   11bf8:	ldr	r0, [sp, #8]
   11bfc:	ldr	r1, [sp, #4]
   11c00:	str	r0, [r1, #4]
   11c04:	ldr	r0, [sp, #4]
   11c08:	ldr	r1, [r0, #8]
   11c0c:	add	r1, r1, #1
   11c10:	str	r1, [r0, #8]
   11c14:	mov	sp, fp
   11c18:	pop	{fp, pc}
   11c1c:	andeq	r5, r0, r9, lsr r4
   11c20:	andeq	r5, r0, fp, lsr r4
   11c24:	andeq	r5, r0, pc, asr #8
   11c28:	andeq	r5, r0, sl, ror #8
   11c2c:	andeq	r5, r0, r7, lsl #8
   11c30:	andeq	r5, r0, fp, lsl r4
   11c34:	andeq	r5, r0, r3, asr #8
   11c38:	ldrdeq	r5, [r0], -r3
   11c3c:	andeq	r5, r0, r7, ror #7
   11c40:	push	{fp, lr}
   11c44:	mov	fp, sp
   11c48:	sub	sp, sp, #24
   11c4c:	str	r0, [fp, #-4]
   11c50:	ldr	r0, [fp, #-4]
   11c54:	ldr	r0, [r0, #24]
   11c58:	str	r0, [fp, #-8]
   11c5c:	ldr	r0, [fp, #-8]
   11c60:	movw	r1, #0
   11c64:	cmp	r0, r1
   11c68:	beq	11c7c <rb_base64_encode@plt+0xb9c>
   11c6c:	ldr	r0, [fp, #-8]
   11c70:	ldr	r0, [r0, #8]
   11c74:	str	r0, [sp, #4]
   11c78:	b	11c88 <rb_base64_encode@plt+0xba8>
   11c7c:	movw	r0, #0
   11c80:	str	r0, [sp, #4]
   11c84:	b	11c88 <rb_base64_encode@plt+0xba8>
   11c88:	ldr	r0, [sp, #4]
   11c8c:	str	r0, [sp, #12]
   11c90:	ldr	r0, [fp, #-8]
   11c94:	movw	r1, #0
   11c98:	cmp	r0, r1
   11c9c:	beq	11d6c <rb_base64_encode@plt+0xc8c>
   11ca0:	ldr	r0, [fp, #-8]
   11ca4:	ldr	r0, [r0]
   11ca8:	str	r0, [sp, #8]
   11cac:	ldr	r0, [sp, #8]
   11cb0:	ldr	r0, [r0, #12]
   11cb4:	ldrb	r0, [r0]
   11cb8:	cmp	r0, #65	; 0x41
   11cbc:	bne	11d04 <rb_base64_encode@plt+0xc24>
   11cc0:	b	11cc4 <rb_base64_encode@plt+0xbe4>
   11cc4:	ldr	r0, [sp, #8]
   11cc8:	ldr	r0, [r0, #36]	; 0x24
   11ccc:	cmp	r0, #2
   11cd0:	bne	11ce4 <rb_base64_encode@plt+0xc04>
   11cd4:	ldr	r0, [sp, #8]
   11cd8:	ldr	r0, [r0, #16]
   11cdc:	cmp	r0, #5
   11ce0:	beq	11cf4 <rb_base64_encode@plt+0xc14>
   11ce4:	ldr	r0, [fp, #-4]
   11ce8:	ldr	r1, [sp, #8]
   11cec:	bl	11d74 <rb_base64_encode@plt+0xc94>
   11cf0:	b	11d08 <rb_base64_encode@plt+0xc28>
   11cf4:	ldr	r0, [fp, #-4]
   11cf8:	ldr	r1, [sp, #8]
   11cfc:	bl	11dd4 <rb_base64_encode@plt+0xcf4>
   11d00:	b	11d08 <rb_base64_encode@plt+0xc28>
   11d04:	b	11d08 <rb_base64_encode@plt+0xc28>
   11d08:	ldr	r0, [fp, #-8]
   11d0c:	ldr	r1, [fp, #-4]
   11d10:	add	r1, r1, #24
   11d14:	bl	11eb8 <rb_base64_encode@plt+0xdd8>
   11d18:	ldr	r0, [sp, #8]
   11d1c:	ldr	r0, [r0, #12]
   11d20:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   11d24:	ldr	r0, [sp, #8]
   11d28:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   11d2c:	ldr	r0, [sp, #12]
   11d30:	str	r0, [fp, #-8]
   11d34:	ldr	r0, [fp, #-8]
   11d38:	movw	r1, #0
   11d3c:	cmp	r0, r1
   11d40:	beq	11d54 <rb_base64_encode@plt+0xc74>
   11d44:	ldr	r0, [fp, #-8]
   11d48:	ldr	r0, [r0, #8]
   11d4c:	str	r0, [sp]
   11d50:	b	11d60 <rb_base64_encode@plt+0xc80>
   11d54:	movw	r0, #0
   11d58:	str	r0, [sp]
   11d5c:	b	11d60 <rb_base64_encode@plt+0xc80>
   11d60:	ldr	r0, [sp]
   11d64:	str	r0, [sp, #12]
   11d68:	b	11c90 <rb_base64_encode@plt+0xbb0>
   11d6c:	mov	sp, fp
   11d70:	pop	{fp, pc}
   11d74:	push	{fp, lr}
   11d78:	mov	fp, sp
   11d7c:	sub	sp, sp, #16
   11d80:	str	r0, [fp, #-4]
   11d84:	str	r1, [sp, #8]
   11d88:	movw	r0, #0
   11d8c:	str	r0, [sp, #4]
   11d90:	ldr	r0, [sp, #4]
   11d94:	ldr	r1, [sp, #8]
   11d98:	ldr	r1, [r1, #36]	; 0x24
   11d9c:	cmp	r0, r1
   11da0:	bge	11dcc <rb_base64_encode@plt+0xcec>
   11da4:	ldr	r0, [sp, #8]
   11da8:	add	r0, r0, #20
   11dac:	ldr	r1, [sp, #4]
   11db0:	add	r0, r0, r1, lsl #2
   11db4:	ldr	r0, [r0]
   11db8:	bl	10fcc <rb_close@plt>
   11dbc:	ldr	r0, [sp, #4]
   11dc0:	add	r0, r0, #1
   11dc4:	str	r0, [sp, #4]
   11dc8:	b	11d90 <rb_base64_encode@plt+0xcb0>
   11dcc:	mov	sp, fp
   11dd0:	pop	{fp, pc}
   11dd4:	push	{fp, lr}
   11dd8:	mov	fp, sp
   11ddc:	sub	sp, sp, #16
   11de0:	str	r0, [fp, #-4]
   11de4:	str	r1, [sp, #8]
   11de8:	ldr	r0, [fp, #-4]
   11dec:	ldr	r1, [sp, #8]
   11df0:	ldr	r1, [r1, #20]
   11df4:	ldr	r2, [sp, #8]
   11df8:	ldr	r2, [r2, #24]
   11dfc:	bl	11ff4 <rb_base64_encode@plt+0xf14>
   11e00:	str	r0, [sp, #4]
   11e04:	ldr	r0, [sp, #8]
   11e08:	ldr	r0, [r0, #12]
   11e0c:	add	r0, r0, #1
   11e10:	bl	120a4 <rb_base64_encode@plt+0xfc4>
   11e14:	str	r0, [sp]
   11e18:	ldr	r0, [sp, #4]
   11e1c:	ldr	r1, [sp]
   11e20:	bl	120dc <rb_base64_encode@plt+0xffc>
   11e24:	ldr	r0, [sp, #4]
   11e28:	ldrb	r1, [r0, #128]	; 0x80
   11e2c:	orr	r1, r1, #4
   11e30:	strb	r1, [r0, #128]	; 0x80
   11e34:	ldr	r0, [sp, #4]
   11e38:	ldr	r0, [r0, #84]	; 0x54
   11e3c:	bl	10e70 <rb_get_type@plt>
   11e40:	and	r0, r0, #255	; 0xff
   11e44:	and	r0, r0, #64	; 0x40
   11e48:	cmp	r0, #0
   11e4c:	beq	11e64 <rb_base64_encode@plt+0xd84>
   11e50:	ldr	r0, [sp, #4]
   11e54:	ldr	r0, [r0, #84]	; 0x54
   11e58:	movw	r1, #4
   11e5c:	and	r1, r1, #255	; 0xff
   11e60:	bl	10f6c <rb_set_type@plt>
   11e64:	ldr	r0, [sp, #4]
   11e68:	ldr	r0, [r0, #88]	; 0x58
   11e6c:	bl	10e70 <rb_get_type@plt>
   11e70:	and	r0, r0, #255	; 0xff
   11e74:	cmp	r0, #64	; 0x40
   11e78:	bne	11e90 <rb_base64_encode@plt+0xdb0>
   11e7c:	ldr	r0, [sp, #4]
   11e80:	ldr	r0, [r0, #88]	; 0x58
   11e84:	movw	r1, #4
   11e88:	and	r1, r1, #255	; 0xff
   11e8c:	bl	10f6c <rb_set_type@plt>
   11e90:	ldr	r0, [sp, #4]
   11e94:	ldr	r0, [r0, #84]	; 0x54
   11e98:	ldr	r1, [sp, #4]
   11e9c:	bl	12154 <rb_base64_encode@plt+0x1074>
   11ea0:	ldr	r0, [sp, #4]
   11ea4:	ldr	r0, [r0, #88]	; 0x58
   11ea8:	ldr	r1, [sp, #4]
   11eac:	bl	12310 <rb_base64_encode@plt+0x1230>
   11eb0:	mov	sp, fp
   11eb4:	pop	{fp, pc}
   11eb8:	push	{fp, lr}
   11ebc:	mov	fp, sp
   11ec0:	sub	sp, sp, #8
   11ec4:	str	r0, [sp, #4]
   11ec8:	str	r1, [sp]
   11ecc:	ldr	r0, [sp, #4]
   11ed0:	movw	r1, #0
   11ed4:	cmp	r0, r1
   11ed8:	beq	11ee0 <rb_base64_encode@plt+0xe00>
   11edc:	b	11f00 <rb_base64_encode@plt+0xe20>
   11ee0:	ldr	r0, [pc, #244]	; 11fdc <rb_base64_encode@plt+0xefc>
   11ee4:	add	r0, pc, r0
   11ee8:	ldr	r1, [pc, #240]	; 11fe0 <rb_base64_encode@plt+0xf00>
   11eec:	add	r1, pc, r1
   11ef0:	ldr	r2, [pc, #236]	; 11fe4 <rb_base64_encode@plt+0xf04>
   11ef4:	add	r3, pc, r2
   11ef8:	movw	r2, #235	; 0xeb
   11efc:	bl	10f18 <__assert_fail@plt>
   11f00:	ldr	r0, [sp]
   11f04:	movw	r1, #0
   11f08:	cmp	r0, r1
   11f0c:	beq	11f14 <rb_base64_encode@plt+0xe34>
   11f10:	b	11f34 <rb_base64_encode@plt+0xe54>
   11f14:	ldr	r0, [pc, #204]	; 11fe8 <rb_base64_encode@plt+0xf08>
   11f18:	add	r0, pc, r0
   11f1c:	ldr	r1, [pc, #200]	; 11fec <rb_base64_encode@plt+0xf0c>
   11f20:	add	r1, pc, r1
   11f24:	ldr	r2, [pc, #196]	; 11ff0 <rb_base64_encode@plt+0xf10>
   11f28:	add	r3, pc, r2
   11f2c:	movw	r2, #236	; 0xec
   11f30:	bl	10f18 <__assert_fail@plt>
   11f34:	ldr	r0, [sp, #4]
   11f38:	ldr	r0, [r0, #8]
   11f3c:	movw	r1, #0
   11f40:	cmp	r0, r1
   11f44:	beq	11f60 <rb_base64_encode@plt+0xe80>
   11f48:	ldr	r0, [sp, #4]
   11f4c:	ldr	r0, [r0, #4]
   11f50:	ldr	r1, [sp, #4]
   11f54:	ldr	r1, [r1, #8]
   11f58:	str	r0, [r1, #4]
   11f5c:	b	11f70 <rb_base64_encode@plt+0xe90>
   11f60:	ldr	r0, [sp, #4]
   11f64:	ldr	r0, [r0, #4]
   11f68:	ldr	r1, [sp]
   11f6c:	str	r0, [r1, #4]
   11f70:	ldr	r0, [sp, #4]
   11f74:	ldr	r0, [r0, #4]
   11f78:	movw	r1, #0
   11f7c:	cmp	r0, r1
   11f80:	beq	11f9c <rb_base64_encode@plt+0xebc>
   11f84:	ldr	r0, [sp, #4]
   11f88:	ldr	r0, [r0, #8]
   11f8c:	ldr	r1, [sp, #4]
   11f90:	ldr	r1, [r1, #4]
   11f94:	str	r0, [r1, #8]
   11f98:	b	11fac <rb_base64_encode@plt+0xecc>
   11f9c:	ldr	r0, [sp, #4]
   11fa0:	ldr	r0, [r0, #8]
   11fa4:	ldr	r1, [sp]
   11fa8:	str	r0, [r1]
   11fac:	ldr	r0, [sp, #4]
   11fb0:	movw	r1, #0
   11fb4:	str	r1, [r0, #4]
   11fb8:	ldr	r0, [sp, #4]
   11fbc:	str	r1, [r0, #8]
   11fc0:	ldr	r0, [sp]
   11fc4:	ldr	r1, [r0, #8]
   11fc8:	mvn	r2, #0
   11fcc:	add	r1, r1, r2
   11fd0:	str	r1, [r0, #8]
   11fd4:	mov	sp, fp
   11fd8:	pop	{fp, pc}
   11fdc:	andeq	r5, r0, r9, asr r0
   11fe0:	andeq	r5, r0, fp, asr r0
   11fe4:	andeq	r5, r0, r9, lsl #5
   11fe8:	andeq	r5, r0, sl, lsl #1
   11fec:	andeq	r5, r0, r7, lsr #32
   11ff0:	andeq	r5, r0, r5, asr r2
   11ff4:	push	{fp, lr}
   11ff8:	mov	fp, sp
   11ffc:	sub	sp, sp, #24
   12000:	str	r0, [fp, #-4]
   12004:	str	r1, [fp, #-8]
   12008:	str	r2, [sp, #12]
   1200c:	movw	r0, #168	; 0xa8
   12010:	bl	116c0 <rb_base64_encode@plt+0x5e0>
   12014:	str	r0, [sp, #8]
   12018:	ldr	r0, [fp, #-4]
   1201c:	ldr	r1, [sp, #8]
   12020:	str	r0, [r1, #12]
   12024:	ldr	r0, [fp, #-8]
   12028:	ldr	r1, [sp, #8]
   1202c:	str	r0, [r1, #84]	; 0x54
   12030:	ldr	r0, [sp, #12]
   12034:	ldr	r1, [sp, #8]
   12038:	str	r0, [r1, #88]	; 0x58
   1203c:	ldr	r0, [sp, #8]
   12040:	mvn	r1, #0
   12044:	str	r1, [r0, #80]	; 0x50
   12048:	ldr	r0, [fp, #-8]
   1204c:	bl	10f00 <rb_set_nb@plt>
   12050:	ldr	r1, [sp, #12]
   12054:	str	r0, [sp, #4]
   12058:	mov	r0, r1
   1205c:	bl	10f00 <rb_set_nb@plt>
   12060:	ldr	r1, [sp, #8]
   12064:	add	r1, r1, #52	; 0x34
   12068:	str	r0, [sp]
   1206c:	mov	r0, r1
   12070:	bl	11080 <rb_linebuf_newbuf@plt>
   12074:	ldr	r0, [sp, #8]
   12078:	add	r0, r0, #24
   1207c:	bl	11080 <rb_linebuf_newbuf@plt>
   12080:	bl	11050 <rb_new_rawbuffer@plt>
   12084:	ldr	r1, [sp, #8]
   12088:	str	r0, [r1, #20]
   1208c:	bl	11050 <rb_new_rawbuffer@plt>
   12090:	ldr	r1, [sp, #8]
   12094:	str	r0, [r1, #16]
   12098:	ldr	r0, [sp, #8]
   1209c:	mov	sp, fp
   120a0:	pop	{fp, pc}
   120a4:	sub	sp, sp, #8
   120a8:	str	r0, [sp, #4]
   120ac:	ldr	r0, [sp, #4]
   120b0:	ldrb	r1, [r0]
   120b4:	strb	r1, [sp]
   120b8:	ldrb	r1, [r0, #1]
   120bc:	strb	r1, [sp, #1]
   120c0:	ldrb	r1, [r0, #2]
   120c4:	strb	r1, [sp, #2]
   120c8:	ldrb	r0, [r0, #3]
   120cc:	strb	r0, [sp, #3]
   120d0:	ldr	r0, [sp]
   120d4:	add	sp, sp, #8
   120d8:	bx	lr
   120dc:	push	{r4, sl, fp, lr}
   120e0:	add	fp, sp, #8
   120e4:	sub	sp, sp, #16
   120e8:	ldr	r2, [pc, #96]	; 12150 <rb_base64_encode@plt+0x1070>
   120ec:	add	r2, pc, r2
   120f0:	str	r0, [sp, #12]
   120f4:	str	r1, [sp, #8]
   120f8:	ldr	r0, [sp, #8]
   120fc:	ldr	r1, [sp, #12]
   12100:	str	r0, [r1, #80]	; 0x50
   12104:	ldr	r0, [sp, #12]
   12108:	mov	r1, r0
   1210c:	ldr	r3, [sp, #8]
   12110:	movw	ip, #19923	; 0x4dd3
   12114:	movt	ip, #4194	; 0x1062
   12118:	umull	ip, lr, r3, ip
   1211c:	lsr	lr, lr, #7
   12120:	mov	r4, #2000	; 0x7d0
   12124:	mls	r3, lr, r4, r3
   12128:	movw	lr, #12
   1212c:	mul	r3, r3, lr
   12130:	add	r2, r2, r3
   12134:	str	r0, [sp, #4]
   12138:	mov	r0, r1
   1213c:	ldr	r1, [sp, #4]
   12140:	str	ip, [sp]
   12144:	bl	124cc <rb_base64_encode@plt+0x13ec>
   12148:	sub	sp, fp, #8
   1214c:	pop	{r4, sl, fp, pc}
   12150:	andeq	r6, r1, r4, lsr #32
   12154:	push	{r4, r5, fp, lr}
   12158:	add	fp, sp, #8
   1215c:	sub	sp, sp, #24
   12160:	sub	sp, sp, #16384	; 0x4000
   12164:	add	r2, sp, #16
   12168:	str	r0, [fp, #-12]
   1216c:	str	r1, [fp, #-16]
   12170:	mov	r0, r2
   12174:	movw	r1, #0
   12178:	and	r1, r1, #255	; 0xff
   1217c:	movw	r2, #16384	; 0x4000
   12180:	bl	10f0c <memset@plt>
   12184:	ldr	r0, [fp, #-16]
   12188:	str	r0, [sp, #12]
   1218c:	movw	r0, #0
   12190:	str	r0, [sp, #8]
   12194:	ldr	r1, [sp, #12]
   12198:	cmp	r1, r0
   1219c:	bne	121a4 <rb_base64_encode@plt+0x10c4>
   121a0:	b	122f8 <rb_base64_encode@plt+0x1218>
   121a4:	ldr	r0, [sp, #12]
   121a8:	ldrb	r0, [r0, #128]	; 0x80
   121ac:	and	r0, r0, #2
   121b0:	cmp	r0, #0
   121b4:	beq	121bc <rb_base64_encode@plt+0x10dc>
   121b8:	b	122f8 <rb_base64_encode@plt+0x1218>
   121bc:	b	121c0 <rb_base64_encode@plt+0x10e0>
   121c0:	ldr	r0, [sp, #12]
   121c4:	ldrb	r0, [r0, #128]	; 0x80
   121c8:	and	r0, r0, #2
   121cc:	cmp	r0, #0
   121d0:	beq	121d8 <rb_base64_encode@plt+0x10f8>
   121d4:	b	122f8 <rb_base64_encode@plt+0x1218>
   121d8:	add	r1, sp, #16
   121dc:	ldr	r0, [fp, #-12]
   121e0:	movw	r2, #16384	; 0x4000
   121e4:	bl	10f60 <rb_read@plt>
   121e8:	str	r0, [sp, #8]
   121ec:	ldr	r0, [sp, #8]
   121f0:	cmp	r0, #0
   121f4:	bge	1225c <rb_base64_encode@plt+0x117c>
   121f8:	bl	110d4 <__errno_location@plt>
   121fc:	ldr	r0, [r0]
   12200:	bl	10e94 <rb_ignore_errno@plt>
   12204:	cmp	r0, #0
   12208:	beq	12244 <rb_base64_encode@plt+0x1164>
   1220c:	ldr	r0, [pc, #248]	; 1230c <rb_base64_encode@plt+0x122c>
   12210:	add	r2, pc, r0
   12214:	ldr	r0, [fp, #-12]
   12218:	ldr	r1, [sp, #12]
   1221c:	movw	r3, #1
   12220:	str	r1, [sp, #4]
   12224:	mov	r1, r3
   12228:	ldr	r3, [sp, #4]
   1222c:	bl	10eac <rb_setselect@plt>
   12230:	ldr	r0, [sp, #12]
   12234:	ldr	r0, [r0, #88]	; 0x58
   12238:	ldr	r1, [sp, #12]
   1223c:	bl	12638 <rb_base64_encode@plt+0x1558>
   12240:	b	12258 <rb_base64_encode@plt+0x1178>
   12244:	ldr	r0, [pc, #188]	; 12308 <rb_base64_encode@plt+0x1228>
   12248:	add	r2, pc, r0
   1224c:	ldr	r0, [sp, #12]
   12250:	movw	r1, #0
   12254:	bl	12758 <rb_base64_encode@plt+0x1678>
   12258:	b	122f8 <rb_base64_encode@plt+0x1218>
   1225c:	ldr	r0, [sp, #8]
   12260:	cmp	r0, #0
   12264:	bne	12280 <rb_base64_encode@plt+0x11a0>
   12268:	ldr	r0, [pc, #148]	; 12304 <rb_base64_encode@plt+0x1224>
   1226c:	add	r2, pc, r0
   12270:	ldr	r0, [sp, #12]
   12274:	movw	r1, #0
   12278:	bl	12758 <rb_base64_encode@plt+0x1678>
   1227c:	b	122f8 <rb_base64_encode@plt+0x1218>
   12280:	b	12284 <rb_base64_encode@plt+0x11a4>
   12284:	add	r1, sp, #16
   12288:	ldr	r0, [sp, #12]
   1228c:	ldr	r0, [r0, #20]
   12290:	ldr	r2, [sp, #8]
   12294:	bl	110b0 <rb_rawbuf_append@plt>
   12298:	ldr	r0, [sp, #12]
   1229c:	ldrb	r0, [r0, #128]	; 0x80
   122a0:	and	r0, r0, #8
   122a4:	cmp	r0, #0
   122a8:	bne	122b8 <rb_base64_encode@plt+0x11d8>
   122ac:	ldr	r0, [sp, #12]
   122b0:	bl	12978 <rb_base64_encode@plt+0x1898>
   122b4:	b	122c0 <rb_base64_encode@plt+0x11e0>
   122b8:	ldr	r0, [sp, #12]
   122bc:	bl	12c34 <rb_base64_encode@plt+0x1b54>
   122c0:	ldr	r0, [sp, #8]
   122c4:	cmp	r0, #16384	; 0x4000
   122c8:	bcs	122f4 <rb_base64_encode@plt+0x1214>
   122cc:	ldr	r0, [pc, #44]	; 12300 <rb_base64_encode@plt+0x1220>
   122d0:	add	r2, pc, r0
   122d4:	ldr	r0, [fp, #-12]
   122d8:	ldr	r1, [sp, #12]
   122dc:	movw	r3, #1
   122e0:	str	r1, [sp]
   122e4:	mov	r1, r3
   122e8:	ldr	r3, [sp]
   122ec:	bl	10eac <rb_setselect@plt>
   122f0:	b	122f8 <rb_base64_encode@plt+0x1218>
   122f4:	b	121c0 <rb_base64_encode@plt+0x10e0>
   122f8:	sub	sp, fp, #8
   122fc:	pop	{r4, r5, fp, pc}
   12300:			; <UNDEFINED> instruction: 0xfffffe7c
   12304:	andeq	r4, r0, fp, lsl #27
   12308:	andeq	r4, r0, pc, lsr #27
   1230c:			; <UNDEFINED> instruction: 0xffffff3c
   12310:	push	{r4, r5, fp, lr}
   12314:	add	fp, sp, #8
   12318:	sub	sp, sp, #24
   1231c:	sub	sp, sp, #16384	; 0x4000
   12320:	add	r2, sp, #16
   12324:	str	r0, [fp, #-12]
   12328:	str	r1, [fp, #-16]
   1232c:	mov	r0, r2
   12330:	movw	r1, #0
   12334:	and	r1, r1, #255	; 0xff
   12338:	movw	r2, #16384	; 0x4000
   1233c:	bl	10f0c <memset@plt>
   12340:	ldr	r0, [fp, #-16]
   12344:	str	r0, [sp, #12]
   12348:	movw	r0, #0
   1234c:	str	r0, [sp, #8]
   12350:	ldr	r1, [sp, #12]
   12354:	cmp	r1, r0
   12358:	bne	12360 <rb_base64_encode@plt+0x1280>
   1235c:	b	124c0 <rb_base64_encode@plt+0x13e0>
   12360:	ldr	r0, [sp, #12]
   12364:	ldrb	r0, [r0, #128]	; 0x80
   12368:	and	r0, r0, #2
   1236c:	cmp	r0, #0
   12370:	beq	12378 <rb_base64_encode@plt+0x1298>
   12374:	b	124c0 <rb_base64_encode@plt+0x13e0>
   12378:	ldr	r0, [sp, #12]
   1237c:	bl	13874 <rb_base64_encode@plt+0x2794>
   12380:	tst	r0, #1
   12384:	beq	1238c <rb_base64_encode@plt+0x12ac>
   12388:	b	124c0 <rb_base64_encode@plt+0x13e0>
   1238c:	b	12390 <rb_base64_encode@plt+0x12b0>
   12390:	ldr	r0, [sp, #12]
   12394:	ldrb	r0, [r0, #128]	; 0x80
   12398:	and	r0, r0, #2
   1239c:	cmp	r0, #0
   123a0:	beq	123a8 <rb_base64_encode@plt+0x12c8>
   123a4:	b	124c0 <rb_base64_encode@plt+0x13e0>
   123a8:	add	r1, sp, #16
   123ac:	ldr	r0, [sp, #12]
   123b0:	ldr	r0, [r0, #88]	; 0x58
   123b4:	movw	r2, #16384	; 0x4000
   123b8:	bl	10f60 <rb_read@plt>
   123bc:	str	r0, [sp, #8]
   123c0:	ldr	r0, [sp, #8]
   123c4:	cmp	r0, #0
   123c8:	beq	123ec <rb_base64_encode@plt+0x130c>
   123cc:	ldr	r0, [sp, #8]
   123d0:	cmp	r0, #0
   123d4:	bge	12404 <rb_base64_encode@plt+0x1324>
   123d8:	bl	110d4 <__errno_location@plt>
   123dc:	ldr	r0, [r0]
   123e0:	bl	10e94 <rb_ignore_errno@plt>
   123e4:	cmp	r0, #0
   123e8:	bne	12404 <rb_base64_encode@plt+0x1324>
   123ec:	ldr	r0, [sp, #12]
   123f0:	movw	r1, #0
   123f4:	str	r1, [sp, #4]
   123f8:	ldr	r2, [sp, #4]
   123fc:	bl	12758 <rb_base64_encode@plt+0x1678>
   12400:	b	124c0 <rb_base64_encode@plt+0x13e0>
   12404:	ldr	r0, [sp, #8]
   12408:	cmp	r0, #0
   1240c:	bge	12458 <rb_base64_encode@plt+0x1378>
   12410:	ldr	r0, [pc, #176]	; 124c8 <rb_base64_encode@plt+0x13e8>
   12414:	add	r2, pc, r0
   12418:	ldr	r0, [sp, #12]
   1241c:	ldr	r0, [r0, #88]	; 0x58
   12420:	ldr	r1, [sp, #12]
   12424:	movw	r3, #1
   12428:	str	r1, [sp]
   1242c:	mov	r1, r3
   12430:	ldr	r3, [sp]
   12434:	bl	10eac <rb_setselect@plt>
   12438:	ldr	r0, [sp, #12]
   1243c:	ldrb	r0, [r0, #128]	; 0x80
   12440:	and	r0, r0, #8
   12444:	cmp	r0, #0
   12448:	beq	12454 <rb_base64_encode@plt+0x1374>
   1244c:	ldr	r0, [sp, #12]
   12450:	bl	12d0c <rb_base64_encode@plt+0x1c2c>
   12454:	b	124c0 <rb_base64_encode@plt+0x13e0>
   12458:	add	r1, sp, #16
   1245c:	ldr	r0, [sp, #8]
   12460:	ldr	r2, [sp, #12]
   12464:	ldr	r3, [r2, #112]	; 0x70
   12468:	ldr	ip, [r2, #116]	; 0x74
   1246c:	adds	r3, r3, r0
   12470:	adc	r0, ip, r0, asr #31
   12474:	str	r3, [r2, #112]	; 0x70
   12478:	str	r0, [r2, #116]	; 0x74
   1247c:	ldr	r0, [sp, #12]
   12480:	add	r0, r0, #52	; 0x34
   12484:	ldr	r2, [sp, #8]
   12488:	movw	r3, #0
   1248c:	bl	10f24 <rb_linebuf_parse@plt>
   12490:	ldr	r1, [sp, #12]
   12494:	ldrb	r1, [r1, #128]	; 0x80
   12498:	and	r1, r1, #2
   1249c:	cmp	r1, #0
   124a0:	beq	124a8 <rb_base64_encode@plt+0x13c8>
   124a4:	b	124c0 <rb_base64_encode@plt+0x13e0>
   124a8:	ldr	r0, [sp, #12]
   124ac:	bl	13874 <rb_base64_encode@plt+0x2794>
   124b0:	tst	r0, #1
   124b4:	beq	124bc <rb_base64_encode@plt+0x13dc>
   124b8:	b	124c0 <rb_base64_encode@plt+0x13e0>
   124bc:	b	12390 <rb_base64_encode@plt+0x12b0>
   124c0:	sub	sp, fp, #8
   124c4:	pop	{r4, r5, fp, pc}
   124c8:			; <UNDEFINED> instruction: 0xfffffef4
   124cc:	push	{fp, lr}
   124d0:	mov	fp, sp
   124d4:	sub	sp, sp, #16
   124d8:	str	r0, [fp, #-4]
   124dc:	str	r1, [sp, #8]
   124e0:	str	r2, [sp, #4]
   124e4:	ldr	r0, [fp, #-4]
   124e8:	movw	r1, #0
   124ec:	cmp	r0, r1
   124f0:	beq	124f8 <rb_base64_encode@plt+0x1418>
   124f4:	b	12518 <rb_base64_encode@plt+0x1438>
   124f8:	ldr	r0, [pc, #276]	; 12614 <rb_base64_encode@plt+0x1534>
   124fc:	add	r0, pc, r0
   12500:	ldr	r1, [pc, #272]	; 12618 <rb_base64_encode@plt+0x1538>
   12504:	add	r1, pc, r1
   12508:	ldr	r2, [pc, #268]	; 1261c <rb_base64_encode@plt+0x153c>
   1250c:	add	r3, pc, r2
   12510:	movw	r2, #143	; 0x8f
   12514:	bl	10f18 <__assert_fail@plt>
   12518:	ldr	r0, [sp, #8]
   1251c:	movw	r1, #0
   12520:	cmp	r0, r1
   12524:	beq	1252c <rb_base64_encode@plt+0x144c>
   12528:	b	1254c <rb_base64_encode@plt+0x146c>
   1252c:	ldr	r0, [pc, #236]	; 12620 <rb_base64_encode@plt+0x1540>
   12530:	add	r0, pc, r0
   12534:	ldr	r1, [pc, #232]	; 12624 <rb_base64_encode@plt+0x1544>
   12538:	add	r1, pc, r1
   1253c:	ldr	r2, [pc, #228]	; 12628 <rb_base64_encode@plt+0x1548>
   12540:	add	r3, pc, r2
   12544:	movw	r2, #144	; 0x90
   12548:	bl	10f18 <__assert_fail@plt>
   1254c:	ldr	r0, [sp, #4]
   12550:	movw	r1, #0
   12554:	cmp	r0, r1
   12558:	beq	12560 <rb_base64_encode@plt+0x1480>
   1255c:	b	12580 <rb_base64_encode@plt+0x14a0>
   12560:	ldr	r0, [pc, #196]	; 1262c <rb_base64_encode@plt+0x154c>
   12564:	add	r0, pc, r0
   12568:	ldr	r1, [pc, #192]	; 12630 <rb_base64_encode@plt+0x1550>
   1256c:	add	r1, pc, r1
   12570:	ldr	r2, [pc, #188]	; 12634 <rb_base64_encode@plt+0x1554>
   12574:	add	r3, pc, r2
   12578:	movw	r2, #145	; 0x91
   1257c:	bl	10f18 <__assert_fail@plt>
   12580:	ldr	r0, [fp, #-4]
   12584:	ldr	r1, [sp, #8]
   12588:	str	r0, [r1]
   1258c:	ldr	r0, [sp, #8]
   12590:	movw	r1, #0
   12594:	str	r1, [r0, #4]
   12598:	ldr	r0, [sp, #4]
   1259c:	ldr	r0, [r0]
   125a0:	ldr	r2, [sp, #8]
   125a4:	str	r0, [r2, #8]
   125a8:	ldr	r0, [sp, #4]
   125ac:	ldr	r0, [r0]
   125b0:	cmp	r0, r1
   125b4:	beq	125cc <rb_base64_encode@plt+0x14ec>
   125b8:	ldr	r0, [sp, #8]
   125bc:	ldr	r1, [sp, #4]
   125c0:	ldr	r1, [r1]
   125c4:	str	r0, [r1, #4]
   125c8:	b	125f0 <rb_base64_encode@plt+0x1510>
   125cc:	ldr	r0, [sp, #4]
   125d0:	ldr	r0, [r0, #4]
   125d4:	movw	r1, #0
   125d8:	cmp	r0, r1
   125dc:	bne	125ec <rb_base64_encode@plt+0x150c>
   125e0:	ldr	r0, [sp, #8]
   125e4:	ldr	r1, [sp, #4]
   125e8:	str	r0, [r1, #4]
   125ec:	b	125f0 <rb_base64_encode@plt+0x1510>
   125f0:	ldr	r0, [sp, #8]
   125f4:	ldr	r1, [sp, #4]
   125f8:	str	r0, [r1]
   125fc:	ldr	r0, [sp, #4]
   12600:	ldr	r1, [r0, #8]
   12604:	add	r1, r1, #1
   12608:	str	r1, [r0, #8]
   1260c:	mov	sp, fp
   12610:	pop	{fp, pc}
   12614:			; <UNDEFINED> instruction: 0x00004ab3
   12618:	andeq	r4, r0, r3, asr #20
   1261c:			; <UNDEFINED> instruction: 0x00004ab0
   12620:	andeq	r4, r0, sp, lsl #20
   12624:	andeq	r4, r0, pc, lsl #20
   12628:	andeq	r4, r0, ip, ror sl
   1262c:	andeq	r4, r0, lr, lsr sl
   12630:	ldrdeq	r4, [r0], -fp
   12634:	andeq	r4, r0, r8, asr #20
   12638:	push	{fp, lr}
   1263c:	mov	fp, sp
   12640:	sub	sp, sp, #32
   12644:	str	r0, [fp, #-4]
   12648:	str	r1, [fp, #-8]
   1264c:	ldr	r0, [fp, #-8]
   12650:	str	r0, [fp, #-12]
   12654:	ldr	r0, [fp, #-12]
   12658:	ldrb	r0, [r0, #128]	; 0x80
   1265c:	and	r0, r0, #2
   12660:	cmp	r0, #0
   12664:	beq	1266c <rb_base64_encode@plt+0x158c>
   12668:	b	1274c <rb_base64_encode@plt+0x166c>
   1266c:	b	12670 <rb_base64_encode@plt+0x1590>
   12670:	ldr	r0, [fp, #-4]
   12674:	ldr	r1, [fp, #-12]
   12678:	add	r1, r1, #24
   1267c:	bl	10f90 <rb_linebuf_flush@plt>
   12680:	str	r0, [sp, #16]
   12684:	cmp	r0, #0
   12688:	ble	126b0 <rb_base64_encode@plt+0x15d0>
   1268c:	ldr	r0, [sp, #16]
   12690:	ldr	r1, [fp, #-12]
   12694:	ldr	r2, [r1, #120]	; 0x78
   12698:	ldr	r3, [r1, #124]	; 0x7c
   1269c:	adds	r2, r2, r0
   126a0:	adc	r0, r3, r0, asr #31
   126a4:	str	r2, [r1, #120]	; 0x78
   126a8:	str	r0, [r1, #124]	; 0x7c
   126ac:	b	12670 <rb_base64_encode@plt+0x1590>
   126b0:	ldr	r0, [sp, #16]
   126b4:	cmp	r0, #0
   126b8:	beq	126dc <rb_base64_encode@plt+0x15fc>
   126bc:	ldr	r0, [sp, #16]
   126c0:	cmp	r0, #0
   126c4:	bge	126f4 <rb_base64_encode@plt+0x1614>
   126c8:	bl	110d4 <__errno_location@plt>
   126cc:	ldr	r0, [r0]
   126d0:	bl	10e94 <rb_ignore_errno@plt>
   126d4:	cmp	r0, #0
   126d8:	bne	126f4 <rb_base64_encode@plt+0x1614>
   126dc:	ldr	r0, [fp, #-8]
   126e0:	movw	r1, #0
   126e4:	str	r1, [sp, #12]
   126e8:	ldr	r2, [sp, #12]
   126ec:	bl	12758 <rb_base64_encode@plt+0x1678>
   126f0:	b	1274c <rb_base64_encode@plt+0x166c>
   126f4:	ldr	r0, [fp, #-12]
   126f8:	ldr	r0, [r0, #40]	; 0x28
   126fc:	cmp	r0, #0
   12700:	ble	12730 <rb_base64_encode@plt+0x1650>
   12704:	ldr	r0, [pc, #72]	; 12754 <rb_base64_encode@plt+0x1674>
   12708:	add	r2, pc, r0
   1270c:	ldr	r0, [fp, #-12]
   12710:	ldr	r0, [r0, #88]	; 0x58
   12714:	ldr	r1, [fp, #-12]
   12718:	movw	r3, #2
   1271c:	str	r1, [sp, #8]
   12720:	mov	r1, r3
   12724:	ldr	r3, [sp, #8]
   12728:	bl	10eac <rb_setselect@plt>
   1272c:	b	1274c <rb_base64_encode@plt+0x166c>
   12730:	ldr	r0, [fp, #-12]
   12734:	ldr	r0, [r0, #88]	; 0x58
   12738:	movw	r1, #2
   1273c:	movw	r2, #0
   12740:	str	r2, [sp, #4]
   12744:	ldr	r3, [sp, #4]
   12748:	bl	10eac <rb_setselect@plt>
   1274c:	mov	sp, fp
   12750:	pop	{fp, pc}
   12754:			; <UNDEFINED> instruction: 0xffffff28
   12758:	sub	sp, sp, #4
   1275c:	push	{r4, r5, fp, lr}
   12760:	add	fp, sp, #8
   12764:	sub	sp, sp, #444	; 0x1bc
   12768:	str	r3, [fp, #8]
   1276c:	str	r0, [fp, #-12]
   12770:	str	r1, [fp, #-16]
   12774:	str	r2, [fp, #-20]	; 0xffffffec
   12778:	ldr	r0, [fp, #-12]
   1277c:	ldrb	r0, [r0, #128]	; 0x80
   12780:	and	r0, r0, #2
   12784:	cmp	r0, #0
   12788:	beq	12790 <rb_base64_encode@plt+0x16b0>
   1278c:	b	1295c <rb_base64_encode@plt+0x187c>
   12790:	ldr	r0, [fp, #-12]
   12794:	ldrb	r0, [r0, #128]	; 0x80
   12798:	and	r0, r0, #8
   1279c:	cmp	r0, #0
   127a0:	beq	127ac <rb_base64_encode@plt+0x16cc>
   127a4:	ldr	r0, [fp, #-12]
   127a8:	bl	12d0c <rb_base64_encode@plt+0x1c2c>
   127ac:	ldr	r0, [pc, #440]	; 1296c <rb_base64_encode@plt+0x188c>
   127b0:	add	r0, pc, r0
   127b4:	ldr	r1, [fp, #-12]
   127b8:	ldr	r2, [r1, #16]
   127bc:	ldr	r1, [r1, #84]	; 0x54
   127c0:	str	r0, [sp, #36]	; 0x24
   127c4:	mov	r0, r2
   127c8:	bl	110bc <rb_rawbuf_flush@plt>
   127cc:	ldr	r1, [fp, #-12]
   127d0:	ldr	r2, [r1, #88]	; 0x58
   127d4:	add	r1, r1, #24
   127d8:	str	r0, [sp, #32]
   127dc:	mov	r0, r2
   127e0:	bl	10f90 <rb_linebuf_flush@plt>
   127e4:	ldr	r1, [fp, #-12]
   127e8:	ldr	r1, [r1, #84]	; 0x54
   127ec:	str	r0, [sp, #28]
   127f0:	mov	r0, r1
   127f4:	bl	10fcc <rb_close@plt>
   127f8:	ldr	r0, [fp, #-12]
   127fc:	ldrb	r1, [r0, #128]	; 0x80
   12800:	orr	r1, r1, #2
   12804:	strb	r1, [r0, #128]	; 0x80
   12808:	ldr	r0, [fp, #-12]
   1280c:	ldr	r1, [r0, #80]	; 0x50
   12810:	movw	r2, #19923	; 0x4dd3
   12814:	movt	r2, #4194	; 0x1062
   12818:	umull	r2, r3, r1, r2
   1281c:	lsr	r3, r3, #7
   12820:	mov	ip, #2000	; 0x7d0
   12824:	mls	r1, r3, ip, r1
   12828:	movw	r3, #12
   1282c:	mul	r1, r1, r3
   12830:	ldr	r3, [sp, #36]	; 0x24
   12834:	add	r1, r3, r1
   12838:	str	r2, [sp, #24]
   1283c:	bl	11eb8 <rb_base64_encode@plt+0xdd8>
   12840:	ldr	r0, [fp, #-16]
   12844:	cmp	r0, #0
   12848:	beq	1285c <rb_base64_encode@plt+0x177c>
   1284c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12850:	movw	r1, #0
   12854:	cmp	r0, r1
   12858:	bne	12880 <rb_base64_encode@plt+0x17a0>
   1285c:	ldr	r0, [fp, #-12]
   12860:	ldr	r0, [r0, #88]	; 0x58
   12864:	bl	10fcc <rb_close@plt>
   12868:	ldr	r0, [pc, #256]	; 12970 <rb_base64_encode@plt+0x1890>
   1286c:	add	r2, pc, r0
   12870:	ldr	r0, [fp, #-12]
   12874:	ldr	r1, [fp, #-12]
   12878:	bl	124cc <rb_base64_encode@plt+0x13ec>
   1287c:	b	1295c <rb_base64_encode@plt+0x187c>
   12880:	ldr	r0, [fp, #-12]
   12884:	ldr	r1, [r0, #88]	; 0x58
   12888:	ldr	r2, [pc, #228]	; 12974 <rb_base64_encode@plt+0x1894>
   1288c:	add	r2, pc, r2
   12890:	mov	r3, #1
   12894:	str	r0, [sp, #20]
   12898:	mov	r0, r1
   1289c:	mov	r1, r3
   128a0:	ldr	r3, [sp, #20]
   128a4:	bl	10eac <rb_setselect@plt>
   128a8:	ldr	r0, [fp, #-12]
   128ac:	ldr	r0, [r0, #88]	; 0x58
   128b0:	mov	r1, #2
   128b4:	mov	r2, #0
   128b8:	str	r2, [sp, #16]
   128bc:	ldr	r3, [sp, #16]
   128c0:	bl	10eac <rb_setselect@plt>
   128c4:	add	r0, fp, #8
   128c8:	str	r0, [fp, #-24]	; 0xffffffe8
   128cc:	sub	r0, fp, #152	; 0x98
   128d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   128d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   128d8:	mov	r1, #128	; 0x80
   128dc:	bl	10ed0 <vsnprintf@plt>
   128e0:	sub	r1, fp, #24
   128e4:	movw	r2, #68	; 0x44
   128e8:	strb	r2, [sp, #44]	; 0x2c
   128ec:	add	r2, sp, #44	; 0x2c
   128f0:	add	r2, r2, #1
   128f4:	ldr	r3, [fp, #-12]
   128f8:	ldr	r3, [r3, #80]	; 0x50
   128fc:	str	r0, [sp, #12]
   12900:	mov	r0, r2
   12904:	str	r1, [sp, #8]
   12908:	mov	r1, r3
   1290c:	bl	12ea0 <rb_base64_encode@plt+0x1dc0>
   12910:	sub	r1, fp, #152	; 0x98
   12914:	add	r0, sp, #44	; 0x2c
   12918:	add	r0, r0, #5
   1291c:	movw	r2, #251	; 0xfb
   12920:	bl	10f30 <rb_strlcpy@plt>
   12924:	add	r1, sp, #44	; 0x2c
   12928:	sub	r2, fp, #152	; 0x98
   1292c:	str	r0, [sp, #4]
   12930:	mov	r0, r2
   12934:	str	r1, [sp]
   12938:	bl	10f9c <strlen@plt>
   1293c:	add	r0, r0, #1
   12940:	add	r0, r0, #5
   12944:	str	r0, [sp, #40]	; 0x28
   12948:	ldr	r0, [fp, #-12]
   1294c:	ldr	r0, [r0, #12]
   12950:	ldr	r2, [sp, #40]	; 0x28
   12954:	ldr	r1, [sp]
   12958:	bl	12ed8 <rb_base64_encode@plt+0x1df8>
   1295c:	sub	sp, fp, #8
   12960:	pop	{r4, r5, fp, lr}
   12964:	add	sp, sp, #4
   12968:	bx	lr
   1296c:	andeq	r5, r1, r0, ror #18
   12970:	muleq	r1, r8, r8
   12974:	andeq	r0, r0, ip, lsl r5
   12978:	push	{r4, r5, fp, lr}
   1297c:	add	fp, sp, #8
   12980:	sub	sp, sp, #176	; 0xb0
   12984:	sub	sp, sp, #16384	; 0x4000
   12988:	add	r1, sp, #172	; 0xac
   1298c:	str	r0, [fp, #-12]
   12990:	mov	r0, r1
   12994:	movw	r1, #0
   12998:	and	r1, r1, #255	; 0xff
   1299c:	movw	r2, #16384	; 0x4000
   129a0:	bl	10f0c <memset@plt>
   129a4:	add	r1, sp, #172	; 0xac
   129a8:	movw	r0, #0
   129ac:	str	r0, [sp, #168]	; 0xa8
   129b0:	ldr	r0, [fp, #-12]
   129b4:	ldr	r0, [r0, #20]
   129b8:	movw	r2, #16384	; 0x4000
   129bc:	bl	1102c <rb_rawbuf_get@plt>
   129c0:	str	r0, [sp, #164]	; 0xa4
   129c4:	ldr	r0, [sp, #164]	; 0xa4
   129c8:	cmp	r0, #0
   129cc:	bne	129d4 <rb_base64_encode@plt+0x18f4>
   129d0:	b	12b2c <rb_base64_encode@plt+0x1a4c>
   129d4:	ldr	r0, [pc, #596]	; 12c30 <rb_base64_encode@plt+0x1b50>
   129d8:	add	r1, pc, r0
   129dc:	add	r0, sp, #172	; 0xac
   129e0:	bl	10fc0 <rb_strcasestr@plt>
   129e4:	str	r0, [sp, #168]	; 0xa8
   129e8:	movw	r1, #0
   129ec:	cmp	r0, r1
   129f0:	beq	12b28 <rb_base64_encode@plt+0x1a48>
   129f4:	ldr	r0, [sp, #168]	; 0xa8
   129f8:	add	r0, r0, #18
   129fc:	str	r0, [sp, #160]	; 0xa0
   12a00:	add	r0, sp, #172	; 0xac
   12a04:	ldr	r1, [sp, #160]	; 0xa0
   12a08:	add	r0, r0, #16384	; 0x4000
   12a0c:	cmp	r1, r0
   12a10:	movw	r0, #0
   12a14:	str	r0, [sp, #28]
   12a18:	bcs	12a34 <rb_base64_encode@plt+0x1954>
   12a1c:	ldr	r0, [sp, #160]	; 0xa0
   12a20:	ldrb	r0, [r0]
   12a24:	cmp	r0, #0
   12a28:	movw	r0, #0
   12a2c:	movne	r0, #1
   12a30:	str	r0, [sp, #28]
   12a34:	ldr	r0, [sp, #28]
   12a38:	tst	r0, #1
   12a3c:	beq	12a78 <rb_base64_encode@plt+0x1998>
   12a40:	ldr	r0, [sp, #160]	; 0xa0
   12a44:	ldrb	r0, [r0]
   12a48:	cmp	r0, #32
   12a4c:	beq	12a64 <rb_base64_encode@plt+0x1984>
   12a50:	ldr	r0, [sp, #160]	; 0xa0
   12a54:	ldrb	r0, [r0]
   12a58:	cmp	r0, #9
   12a5c:	beq	12a64 <rb_base64_encode@plt+0x1984>
   12a60:	b	12a78 <rb_base64_encode@plt+0x1998>
   12a64:	b	12a68 <rb_base64_encode@plt+0x1988>
   12a68:	ldr	r0, [sp, #160]	; 0xa0
   12a6c:	add	r0, r0, #1
   12a70:	str	r0, [sp, #160]	; 0xa0
   12a74:	b	12a00 <rb_base64_encode@plt+0x1920>
   12a78:	ldr	r0, [sp, #160]	; 0xa0
   12a7c:	str	r0, [sp, #156]	; 0x9c
   12a80:	add	r0, sp, #172	; 0xac
   12a84:	ldr	r1, [sp, #156]	; 0x9c
   12a88:	add	r0, r0, #16384	; 0x4000
   12a8c:	cmp	r1, r0
   12a90:	movw	r0, #0
   12a94:	str	r0, [sp, #24]
   12a98:	bcs	12ab4 <rb_base64_encode@plt+0x19d4>
   12a9c:	ldr	r0, [sp, #156]	; 0x9c
   12aa0:	ldrb	r0, [r0]
   12aa4:	cmp	r0, #0
   12aa8:	movw	r0, #0
   12aac:	movne	r0, #1
   12ab0:	str	r0, [sp, #24]
   12ab4:	ldr	r0, [sp, #24]
   12ab8:	tst	r0, #1
   12abc:	beq	12b04 <rb_base64_encode@plt+0x1a24>
   12ac0:	ldr	r0, [sp, #156]	; 0x9c
   12ac4:	ldrb	r0, [r0]
   12ac8:	cmp	r0, #13
   12acc:	beq	12ae0 <rb_base64_encode@plt+0x1a00>
   12ad0:	ldr	r0, [sp, #156]	; 0x9c
   12ad4:	ldrb	r0, [r0]
   12ad8:	cmp	r0, #10
   12adc:	bne	12af0 <rb_base64_encode@plt+0x1a10>
   12ae0:	ldr	r0, [sp, #156]	; 0x9c
   12ae4:	movw	r1, #0
   12ae8:	strb	r1, [r0]
   12aec:	b	12b04 <rb_base64_encode@plt+0x1a24>
   12af0:	b	12af4 <rb_base64_encode@plt+0x1a14>
   12af4:	ldr	r0, [sp, #156]	; 0x9c
   12af8:	add	r0, r0, #1
   12afc:	str	r0, [sp, #156]	; 0x9c
   12b00:	b	12a80 <rb_base64_encode@plt+0x19a0>
   12b04:	ldr	r0, [fp, #-12]
   12b08:	add	r0, r0, #129	; 0x81
   12b0c:	ldr	r1, [sp, #160]	; 0xa0
   12b10:	movw	r2, #37	; 0x25
   12b14:	bl	10f30 <rb_strlcpy@plt>
   12b18:	ldr	r1, [fp, #-12]
   12b1c:	ldrb	r2, [r1, #128]	; 0x80
   12b20:	orr	r2, r2, #8
   12b24:	strb	r2, [r1, #128]	; 0x80
   12b28:	b	129a4 <rb_base64_encode@plt+0x18c4>
   12b2c:	ldr	r0, [fp, #-12]
   12b30:	ldrb	r0, [r0, #128]	; 0x80
   12b34:	and	r0, r0, #8
   12b38:	cmp	r0, #0
   12b3c:	beq	12c0c <rb_base64_encode@plt+0x1b2c>
   12b40:	add	r0, sp, #56	; 0x38
   12b44:	bl	13914 <rb_base64_encode@plt+0x2834>
   12b48:	ldr	r0, [fp, #-12]
   12b4c:	add	r1, r0, #129	; 0x81
   12b50:	ldr	r0, [fp, #-12]
   12b54:	add	r0, r0, #129	; 0x81
   12b58:	str	r1, [sp, #20]
   12b5c:	bl	10f9c <strlen@plt>
   12b60:	add	r1, sp, #56	; 0x38
   12b64:	str	r0, [sp, #16]
   12b68:	mov	r0, r1
   12b6c:	ldr	r1, [sp, #20]
   12b70:	ldr	r2, [sp, #16]
   12b74:	bl	13984 <rb_base64_encode@plt+0x28a4>
   12b78:	ldr	r0, [pc, #172]	; 12c2c <rb_base64_encode@plt+0x1b4c>
   12b7c:	add	r1, pc, r0
   12b80:	add	r0, sp, #56	; 0x38
   12b84:	movw	r2, #36	; 0x24
   12b88:	bl	13984 <rb_base64_encode@plt+0x28a4>
   12b8c:	add	r1, sp, #36	; 0x24
   12b90:	add	r0, sp, #56	; 0x38
   12b94:	bl	16cc4 <rb_base64_encode@plt+0x5be4>
   12b98:	add	r0, sp, #36	; 0x24
   12b9c:	movw	r1, #20
   12ba0:	bl	110e0 <rb_base64_encode@plt>
   12ba4:	ldr	r1, [pc, #124]	; 12c28 <rb_base64_encode@plt+0x1b48>
   12ba8:	add	r1, pc, r1
   12bac:	str	r0, [sp, #32]
   12bb0:	ldr	r0, [fp, #-12]
   12bb4:	movw	r2, #129	; 0x81
   12bb8:	bl	13358 <rb_base64_encode@plt+0x2278>
   12bbc:	ldr	r0, [fp, #-12]
   12bc0:	ldr	r1, [sp, #32]
   12bc4:	ldr	r2, [sp, #32]
   12bc8:	str	r0, [sp, #12]
   12bcc:	mov	r0, r2
   12bd0:	str	r1, [sp, #8]
   12bd4:	bl	10f9c <strlen@plt>
   12bd8:	ldr	r1, [sp, #12]
   12bdc:	str	r0, [sp, #4]
   12be0:	mov	r0, r1
   12be4:	ldr	r1, [sp, #8]
   12be8:	ldr	r2, [sp, #4]
   12bec:	bl	13358 <rb_base64_encode@plt+0x2278>
   12bf0:	ldr	r0, [pc, #44]	; 12c24 <rb_base64_encode@plt+0x1b44>
   12bf4:	add	r1, pc, r0
   12bf8:	ldr	r0, [fp, #-12]
   12bfc:	movw	r2, #4
   12c00:	bl	13358 <rb_base64_encode@plt+0x2278>
   12c04:	ldr	r0, [sp, #32]
   12c08:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   12c0c:	ldr	r0, [fp, #-12]
   12c10:	ldr	r0, [r0, #84]	; 0x54
   12c14:	ldr	r1, [fp, #-12]
   12c18:	bl	12fcc <rb_base64_encode@plt+0x1eec>
   12c1c:	sub	sp, fp, #8
   12c20:	pop	{r4, r5, fp, pc}
   12c24:	andeq	r4, r0, r1, lsl #10
   12c28:	andeq	r4, r0, fp, asr #9
   12c2c:	ldrdeq	r4, [r0], -r2
   12c30:	andeq	r4, r0, r3, ror #12
   12c34:	push	{fp, lr}
   12c38:	mov	fp, sp
   12c3c:	sub	sp, sp, #24
   12c40:	str	r0, [fp, #-4]
   12c44:	ldr	r0, [fp, #-4]
   12c48:	ldr	r0, [r0, #20]
   12c4c:	sub	r1, fp, #8
   12c50:	movw	r2, #2
   12c54:	bl	1102c <rb_rawbuf_get@plt>
   12c58:	str	r0, [sp, #8]
   12c5c:	ldr	r0, [sp, #8]
   12c60:	cmp	r0, #2
   12c64:	beq	12c6c <rb_base64_encode@plt+0x1b8c>
   12c68:	b	12cf4 <rb_base64_encode@plt+0x1c14>
   12c6c:	ldrb	r0, [fp, #-7]
   12c70:	mvn	r1, #0
   12c74:	add	r0, r1, r0, lsr #7
   12c78:	clz	r0, r0
   12c7c:	lsr	r0, r0, #5
   12c80:	str	r0, [sp, #12]
   12c84:	ldrb	r0, [fp, #-7]
   12c88:	and	r0, r0, #127	; 0x7f
   12c8c:	strb	r0, [fp, #-7]
   12c90:	ldrb	r0, [fp, #-7]
   12c94:	mov	r1, r0
   12c98:	cmp	r0, #126	; 0x7e
   12c9c:	str	r1, [sp, #4]
   12ca0:	beq	12cb8 <rb_base64_encode@plt+0x1bd8>
   12ca4:	b	12ca8 <rb_base64_encode@plt+0x1bc8>
   12ca8:	ldr	r0, [sp, #4]
   12cac:	cmp	r0, #127	; 0x7f
   12cb0:	beq	12ccc <rb_base64_encode@plt+0x1bec>
   12cb4:	b	12ce0 <rb_base64_encode@plt+0x1c00>
   12cb8:	ldr	r0, [fp, #-4]
   12cbc:	ldr	r2, [sp, #12]
   12cc0:	sub	r1, fp, #8
   12cc4:	bl	135ac <rb_base64_encode@plt+0x24cc>
   12cc8:	b	12cf0 <rb_base64_encode@plt+0x1c10>
   12ccc:	ldr	r0, [fp, #-4]
   12cd0:	ldr	r2, [sp, #12]
   12cd4:	sub	r1, fp, #8
   12cd8:	bl	136f8 <rb_base64_encode@plt+0x2618>
   12cdc:	b	12cf0 <rb_base64_encode@plt+0x1c10>
   12ce0:	ldr	r0, [fp, #-4]
   12ce4:	ldr	r2, [sp, #12]
   12ce8:	sub	r1, fp, #8
   12cec:	bl	13710 <rb_base64_encode@plt+0x2630>
   12cf0:	b	12c44 <rb_base64_encode@plt+0x1b64>
   12cf4:	ldr	r0, [fp, #-4]
   12cf8:	ldr	r0, [r0, #88]	; 0x58
   12cfc:	ldr	r1, [fp, #-4]
   12d00:	bl	12638 <rb_base64_encode@plt+0x1558>
   12d04:	mov	sp, fp
   12d08:	pop	{fp, pc}
   12d0c:	push	{r4, r5, fp, lr}
   12d10:	add	fp, sp, #8
   12d14:	sub	sp, sp, #16
   12d18:	sub	sp, sp, #16384	; 0x4000
   12d1c:	add	r1, sp, #12
   12d20:	str	r0, [fp, #-12]
   12d24:	mov	r0, r1
   12d28:	movw	r1, #0
   12d2c:	and	r1, r1, #255	; 0xff
   12d30:	movw	r2, #16384	; 0x4000
   12d34:	bl	10f0c <memset@plt>
   12d38:	add	r1, sp, #12
   12d3c:	ldr	r0, [fp, #-12]
   12d40:	add	r0, r0, #52	; 0x34
   12d44:	movw	r2, #16384	; 0x4000
   12d48:	movw	r3, #0
   12d4c:	str	r3, [sp, #4]
   12d50:	ldr	ip, [sp, #4]
   12d54:	str	ip, [sp]
   12d58:	bl	10f78 <rb_linebuf_get@plt>
   12d5c:	str	r0, [sp, #8]
   12d60:	ldr	r0, [sp, #8]
   12d64:	cmp	r0, #0
   12d68:	bne	12d70 <rb_base64_encode@plt+0x1c90>
   12d6c:	b	12d84 <rb_base64_encode@plt+0x1ca4>
   12d70:	add	r1, sp, #12
   12d74:	ldr	r0, [fp, #-12]
   12d78:	ldr	r2, [sp, #8]
   12d7c:	bl	12f64 <rb_base64_encode@plt+0x1e84>
   12d80:	b	12d38 <rb_base64_encode@plt+0x1c58>
   12d84:	ldr	r0, [fp, #-12]
   12d88:	ldrb	r0, [r0, #128]	; 0x80
   12d8c:	and	r0, r0, #8
   12d90:	cmp	r0, #0
   12d94:	beq	12da8 <rb_base64_encode@plt+0x1cc8>
   12d98:	ldr	r0, [fp, #-12]
   12d9c:	ldr	r0, [r0, #84]	; 0x54
   12da0:	ldr	r1, [fp, #-12]
   12da4:	bl	12fcc <rb_base64_encode@plt+0x1eec>
   12da8:	sub	sp, fp, #8
   12dac:	pop	{r4, r5, fp, pc}
   12db0:	push	{r4, r5, fp, lr}
   12db4:	add	fp, sp, #8
   12db8:	sub	sp, sp, #24
   12dbc:	sub	sp, sp, #16384	; 0x4000
   12dc0:	str	r0, [fp, #-12]
   12dc4:	str	r1, [fp, #-16]
   12dc8:	ldr	r0, [fp, #-16]
   12dcc:	str	r0, [sp, #12]
   12dd0:	movw	r0, #0
   12dd4:	str	r0, [sp, #8]
   12dd8:	ldr	r1, [sp, #12]
   12ddc:	cmp	r1, r0
   12de0:	bne	12de8 <rb_base64_encode@plt+0x1d08>
   12de4:	b	12e90 <rb_base64_encode@plt+0x1db0>
   12de8:	b	12dec <rb_base64_encode@plt+0x1d0c>
   12dec:	add	r1, sp, #16
   12df0:	ldr	r0, [sp, #12]
   12df4:	ldr	r0, [r0, #88]	; 0x58
   12df8:	movw	r2, #16384	; 0x4000
   12dfc:	bl	10f60 <rb_read@plt>
   12e00:	str	r0, [sp, #8]
   12e04:	ldr	r0, [sp, #8]
   12e08:	cmp	r0, #0
   12e0c:	beq	12e30 <rb_base64_encode@plt+0x1d50>
   12e10:	ldr	r0, [sp, #8]
   12e14:	cmp	r0, #0
   12e18:	bge	12e54 <rb_base64_encode@plt+0x1d74>
   12e1c:	bl	110d4 <__errno_location@plt>
   12e20:	ldr	r0, [r0]
   12e24:	bl	10e94 <rb_ignore_errno@plt>
   12e28:	cmp	r0, #0
   12e2c:	bne	12e54 <rb_base64_encode@plt+0x1d74>
   12e30:	ldr	r0, [sp, #12]
   12e34:	ldr	r0, [r0, #88]	; 0x58
   12e38:	bl	10fcc <rb_close@plt>
   12e3c:	ldr	r0, [pc, #88]	; 12e9c <rb_base64_encode@plt+0x1dbc>
   12e40:	add	r2, pc, r0
   12e44:	ldr	r0, [sp, #12]
   12e48:	ldr	r1, [sp, #12]
   12e4c:	bl	124cc <rb_base64_encode@plt+0x13ec>
   12e50:	b	12e90 <rb_base64_encode@plt+0x1db0>
   12e54:	ldr	r0, [sp, #8]
   12e58:	cmp	r0, #0
   12e5c:	bge	12e8c <rb_base64_encode@plt+0x1dac>
   12e60:	ldr	r0, [pc, #48]	; 12e98 <rb_base64_encode@plt+0x1db8>
   12e64:	add	r2, pc, r0
   12e68:	ldr	r0, [sp, #12]
   12e6c:	ldr	r0, [r0, #88]	; 0x58
   12e70:	ldr	r1, [sp, #12]
   12e74:	movw	r3, #1
   12e78:	str	r1, [sp, #4]
   12e7c:	mov	r1, r3
   12e80:	ldr	r3, [sp, #4]
   12e84:	bl	10eac <rb_setselect@plt>
   12e88:	b	12e90 <rb_base64_encode@plt+0x1db0>
   12e8c:	b	12dec <rb_base64_encode@plt+0x1d0c>
   12e90:	sub	sp, fp, #8
   12e94:	pop	{r4, r5, fp, pc}
   12e98:			; <UNDEFINED> instruction: 0xffffff44
   12e9c:	andeq	r5, r1, r4, asr #5
   12ea0:	sub	sp, sp, #8
   12ea4:	str	r0, [sp, #4]
   12ea8:	str	r1, [sp]
   12eac:	ldr	r0, [sp, #4]
   12eb0:	ldrb	r1, [sp]
   12eb4:	strb	r1, [r0]
   12eb8:	ldrb	r1, [sp, #1]
   12ebc:	strb	r1, [r0, #1]
   12ec0:	ldrb	r1, [sp, #2]
   12ec4:	strb	r1, [r0, #2]
   12ec8:	ldrb	r1, [sp, #3]
   12ecc:	strb	r1, [r0, #3]
   12ed0:	add	sp, sp, #8
   12ed4:	bx	lr
   12ed8:	push	{fp, lr}
   12edc:	mov	fp, sp
   12ee0:	sub	sp, sp, #16
   12ee4:	str	r0, [fp, #-4]
   12ee8:	str	r1, [sp, #8]
   12eec:	str	r2, [sp, #4]
   12ef0:	movw	r0, #40	; 0x28
   12ef4:	bl	116c0 <rb_base64_encode@plt+0x5e0>
   12ef8:	str	r0, [sp]
   12efc:	ldr	r0, [sp, #4]
   12f00:	bl	116c0 <rb_base64_encode@plt+0x5e0>
   12f04:	ldr	r1, [sp]
   12f08:	str	r0, [r1, #12]
   12f0c:	ldr	r0, [sp, #4]
   12f10:	ldr	r1, [sp]
   12f14:	str	r0, [r1, #16]
   12f18:	ldr	r0, [sp]
   12f1c:	ldr	r0, [r0, #12]
   12f20:	ldr	r1, [sp, #8]
   12f24:	ldr	r2, [sp, #4]
   12f28:	bl	10fa8 <memcpy@plt>
   12f2c:	ldr	r0, [sp]
   12f30:	movw	r1, #0
   12f34:	str	r1, [r0, #36]	; 0x24
   12f38:	ldr	r0, [sp]
   12f3c:	ldr	r1, [sp]
   12f40:	ldr	r2, [fp, #-4]
   12f44:	add	r2, r2, #36	; 0x24
   12f48:	bl	11ad4 <rb_base64_encode@plt+0x9f4>
   12f4c:	ldr	r0, [fp, #-4]
   12f50:	ldr	r0, [r0, #16]
   12f54:	ldr	r1, [fp, #-4]
   12f58:	bl	133a4 <rb_base64_encode@plt+0x22c4>
   12f5c:	mov	sp, fp
   12f60:	pop	{fp, pc}
   12f64:	push	{fp, lr}
   12f68:	mov	fp, sp
   12f6c:	sub	sp, sp, #16
   12f70:	str	r0, [fp, #-4]
   12f74:	str	r1, [sp, #8]
   12f78:	str	r2, [sp, #4]
   12f7c:	ldr	r0, [fp, #-4]
   12f80:	ldrb	r0, [r0, #128]	; 0x80
   12f84:	and	r0, r0, #2
   12f88:	cmp	r0, #0
   12f8c:	beq	12f94 <rb_base64_encode@plt+0x1eb4>
   12f90:	b	12fc4 <rb_base64_encode@plt+0x1ee4>
   12f94:	ldr	r0, [sp, #4]
   12f98:	cmp	r0, #123	; 0x7b
   12f9c:	bge	12fb4 <rb_base64_encode@plt+0x1ed4>
   12fa0:	ldr	r0, [fp, #-4]
   12fa4:	ldr	r1, [sp, #8]
   12fa8:	ldr	r2, [sp, #4]
   12fac:	bl	1318c <rb_base64_encode@plt+0x20ac>
   12fb0:	b	12fc4 <rb_base64_encode@plt+0x1ee4>
   12fb4:	ldr	r0, [fp, #-4]
   12fb8:	ldr	r1, [sp, #8]
   12fbc:	ldr	r2, [sp, #4]
   12fc0:	bl	1322c <rb_base64_encode@plt+0x214c>
   12fc4:	mov	sp, fp
   12fc8:	pop	{fp, pc}
   12fcc:	push	{fp, lr}
   12fd0:	mov	fp, sp
   12fd4:	sub	sp, sp, #32
   12fd8:	str	r0, [fp, #-4]
   12fdc:	str	r1, [fp, #-8]
   12fe0:	ldr	r0, [fp, #-8]
   12fe4:	str	r0, [fp, #-12]
   12fe8:	ldr	r0, [fp, #-12]
   12fec:	ldrb	r0, [r0, #128]	; 0x80
   12ff0:	and	r0, r0, #2
   12ff4:	cmp	r0, #0
   12ff8:	beq	13000 <rb_base64_encode@plt+0x1f20>
   12ffc:	b	13174 <rb_base64_encode@plt+0x2094>
   13000:	b	13004 <rb_base64_encode@plt+0x1f24>
   13004:	ldr	r0, [fp, #-12]
   13008:	ldr	r0, [r0, #16]
   1300c:	ldr	r1, [fp, #-4]
   13010:	bl	110bc <rb_rawbuf_flush@plt>
   13014:	str	r0, [sp, #12]
   13018:	cmp	r0, #0
   1301c:	ble	13044 <rb_base64_encode@plt+0x1f64>
   13020:	ldr	r0, [sp, #12]
   13024:	ldr	r1, [fp, #-12]
   13028:	ldr	r2, [r1, #96]	; 0x60
   1302c:	ldr	r3, [r1, #100]	; 0x64
   13030:	adds	r2, r2, r0
   13034:	adc	r0, r3, r0, asr #31
   13038:	str	r2, [r1, #96]	; 0x60
   1303c:	str	r0, [r1, #100]	; 0x64
   13040:	b	13004 <rb_base64_encode@plt+0x1f24>
   13044:	ldr	r0, [sp, #12]
   13048:	cmp	r0, #0
   1304c:	beq	13070 <rb_base64_encode@plt+0x1f90>
   13050:	ldr	r0, [sp, #12]
   13054:	cmp	r0, #0
   13058:	bge	130cc <rb_base64_encode@plt+0x1fec>
   1305c:	bl	110d4 <__errno_location@plt>
   13060:	ldr	r0, [r0]
   13064:	bl	10e94 <rb_ignore_errno@plt>
   13068:	cmp	r0, #0
   1306c:	bne	130cc <rb_base64_encode@plt+0x1fec>
   13070:	ldr	r0, [sp, #12]
   13074:	cmp	r0, #0
   13078:	bne	130a0 <rb_base64_encode@plt+0x1fc0>
   1307c:	ldr	r0, [pc, #252]	; 13180 <rb_base64_encode@plt+0x20a0>
   13080:	add	r2, pc, r0
   13084:	ldr	r0, [pc, #248]	; 13184 <rb_base64_encode@plt+0x20a4>
   13088:	add	r0, pc, r0
   1308c:	ldr	r1, [fp, #-12]
   13090:	ldr	r3, [r0]
   13094:	mov	r0, r1
   13098:	movw	r1, #1
   1309c:	bl	12758 <rb_base64_encode@plt+0x1678>
   130a0:	bl	110d4 <__errno_location@plt>
   130a4:	ldr	r0, [r0]
   130a8:	bl	10e64 <strerror@plt>
   130ac:	ldr	r1, [pc, #212]	; 13188 <rb_base64_encode@plt+0x20a8>
   130b0:	add	r2, pc, r1
   130b4:	str	r0, [sp, #16]
   130b8:	ldr	r0, [fp, #-12]
   130bc:	ldr	r3, [sp, #16]
   130c0:	movw	r1, #1
   130c4:	bl	12758 <rb_base64_encode@plt+0x1678>
   130c8:	b	13174 <rb_base64_encode@plt+0x2094>
   130cc:	ldr	r0, [fp, #-12]
   130d0:	ldr	r0, [r0, #16]
   130d4:	bl	10ff0 <rb_rawbuf_length@plt>
   130d8:	cmp	r0, #0
   130dc:	ble	1310c <rb_base64_encode@plt+0x202c>
   130e0:	ldr	r0, [pc, #148]	; 1317c <rb_base64_encode@plt+0x209c>
   130e4:	add	r2, pc, r0
   130e8:	ldr	r0, [fp, #-12]
   130ec:	ldr	r0, [r0, #84]	; 0x54
   130f0:	ldr	r1, [fp, #-12]
   130f4:	movw	r3, #2
   130f8:	str	r1, [sp, #8]
   130fc:	mov	r1, r3
   13100:	ldr	r3, [sp, #8]
   13104:	bl	10eac <rb_setselect@plt>
   13108:	b	13128 <rb_base64_encode@plt+0x2048>
   1310c:	ldr	r0, [fp, #-12]
   13110:	ldr	r0, [r0, #84]	; 0x54
   13114:	movw	r1, #2
   13118:	movw	r2, #0
   1311c:	str	r2, [sp, #4]
   13120:	ldr	r3, [sp, #4]
   13124:	bl	10eac <rb_setselect@plt>
   13128:	ldr	r0, [fp, #-12]
   1312c:	ldrb	r0, [r0, #128]	; 0x80
   13130:	and	r0, r0, #1
   13134:	cmp	r0, #0
   13138:	beq	13174 <rb_base64_encode@plt+0x2094>
   1313c:	ldr	r0, [fp, #-12]
   13140:	ldr	r0, [r0, #16]
   13144:	bl	10ff0 <rb_rawbuf_length@plt>
   13148:	cmp	r0, #0
   1314c:	bne	13174 <rb_base64_encode@plt+0x2094>
   13150:	ldr	r0, [fp, #-12]
   13154:	ldrb	r1, [r0, #128]	; 0x80
   13158:	mvn	r2, #1
   1315c:	and	r1, r1, r2
   13160:	strb	r1, [r0, #128]	; 0x80
   13164:	ldr	r0, [fp, #-12]
   13168:	ldr	r0, [r0, #88]	; 0x58
   1316c:	ldr	r1, [fp, #-12]
   13170:	bl	12310 <rb_base64_encode@plt+0x1230>
   13174:	mov	sp, fp
   13178:	pop	{fp, pc}
   1317c:			; <UNDEFINED> instruction: 0xfffffee0
   13180:	muleq	r0, r6, pc	; <UNPREDICTABLE>
   13184:	andeq	r5, r1, ip, rrx
   13188:	andeq	r3, r0, r9, asr pc
   1318c:	push	{fp, lr}
   13190:	mov	fp, sp
   13194:	sub	sp, sp, #24
   13198:	str	r0, [fp, #-4]
   1319c:	str	r1, [fp, #-8]
   131a0:	str	r2, [sp, #12]
   131a4:	add	r0, sp, #8
   131a8:	mov	r1, r0
   131ac:	str	r0, [sp, #4]
   131b0:	mov	r0, r1
   131b4:	movw	r1, #0
   131b8:	and	r1, r1, #255	; 0xff
   131bc:	movw	r2, #2
   131c0:	bl	10f0c <memset@plt>
   131c4:	ldr	r0, [sp, #4]
   131c8:	movw	r1, #1
   131cc:	bl	132d4 <rb_base64_encode@plt+0x21f4>
   131d0:	add	r0, sp, #8
   131d4:	movw	r1, #1
   131d8:	bl	13314 <rb_base64_encode@plt+0x2234>
   131dc:	ldr	r0, [sp, #12]
   131e0:	add	r0, r0, #2
   131e4:	and	r0, r0, #127	; 0x7f
   131e8:	strb	r0, [sp, #9]
   131ec:	ldr	r0, [fp, #-4]
   131f0:	add	r1, sp, #8
   131f4:	movw	r2, #2
   131f8:	bl	13358 <rb_base64_encode@plt+0x2278>
   131fc:	ldr	r0, [fp, #-4]
   13200:	ldr	r1, [fp, #-8]
   13204:	ldr	r2, [sp, #12]
   13208:	bl	13358 <rb_base64_encode@plt+0x2278>
   1320c:	ldr	r0, [pc, #20]	; 13228 <rb_base64_encode@plt+0x2148>
   13210:	add	r1, pc, r0
   13214:	ldr	r0, [fp, #-4]
   13218:	movw	r2, #2
   1321c:	bl	13358 <rb_base64_encode@plt+0x2278>
   13220:	mov	sp, fp
   13224:	pop	{fp, pc}
   13228:	andeq	r3, r0, r7, ror #29
   1322c:	push	{fp, lr}
   13230:	mov	fp, sp
   13234:	sub	sp, sp, #24
   13238:	add	r3, sp, #8
   1323c:	str	r0, [fp, #-4]
   13240:	str	r1, [fp, #-8]
   13244:	str	r2, [sp, #12]
   13248:	mov	r0, r3
   1324c:	movw	r1, #0
   13250:	and	r1, r1, #255	; 0xff
   13254:	movw	r2, #4
   13258:	str	r3, [sp, #4]
   1325c:	bl	10f0c <memset@plt>
   13260:	ldr	r0, [sp, #4]
   13264:	movw	r1, #1
   13268:	bl	132d4 <rb_base64_encode@plt+0x21f4>
   1326c:	add	r0, sp, #8
   13270:	movw	r1, #1
   13274:	bl	13314 <rb_base64_encode@plt+0x2234>
   13278:	movw	r0, #126	; 0x7e
   1327c:	strb	r0, [sp, #9]
   13280:	ldr	r0, [sp, #12]
   13284:	add	r0, r0, #2
   13288:	uxth	r0, r0
   1328c:	bl	10ef4 <htons@plt>
   13290:	strh	r0, [sp, #10]
   13294:	ldr	r0, [fp, #-4]
   13298:	add	r1, sp, #8
   1329c:	movw	r2, #4
   132a0:	bl	13358 <rb_base64_encode@plt+0x2278>
   132a4:	ldr	r0, [fp, #-4]
   132a8:	ldr	r1, [fp, #-8]
   132ac:	ldr	r2, [sp, #12]
   132b0:	bl	13358 <rb_base64_encode@plt+0x2278>
   132b4:	ldr	r0, [pc, #20]	; 132d0 <rb_base64_encode@plt+0x21f0>
   132b8:	add	r1, pc, r0
   132bc:	ldr	r0, [fp, #-4]
   132c0:	movw	r2, #2
   132c4:	bl	13358 <rb_base64_encode@plt+0x2278>
   132c8:	mov	sp, fp
   132cc:	pop	{fp, pc}
   132d0:	andeq	r3, r0, pc, lsr lr
   132d4:	sub	sp, sp, #8
   132d8:	str	r0, [sp, #4]
   132dc:	str	r1, [sp]
   132e0:	ldr	r0, [sp, #4]
   132e4:	ldrb	r1, [r0]
   132e8:	mvn	r2, #15
   132ec:	and	r1, r1, r2
   132f0:	strb	r1, [r0]
   132f4:	ldr	r0, [sp]
   132f8:	and	r0, r0, #15
   132fc:	ldr	r1, [sp, #4]
   13300:	ldrb	r2, [r1]
   13304:	orr	r0, r2, r0
   13308:	strb	r0, [r1]
   1330c:	add	sp, sp, #8
   13310:	bx	lr
   13314:	sub	sp, sp, #8
   13318:	str	r0, [sp, #4]
   1331c:	str	r1, [sp]
   13320:	ldr	r0, [sp, #4]
   13324:	ldrb	r1, [r0]
   13328:	mvn	r2, #128	; 0x80
   1332c:	and	r1, r1, r2
   13330:	strb	r1, [r0]
   13334:	ldr	r0, [sp]
   13338:	lsl	r0, r0, #7
   1333c:	and	r0, r0, #128	; 0x80
   13340:	ldr	r1, [sp, #4]
   13344:	ldrb	r2, [r1]
   13348:	orr	r0, r2, r0
   1334c:	strb	r0, [r1]
   13350:	add	sp, sp, #8
   13354:	bx	lr
   13358:	push	{fp, lr}
   1335c:	mov	fp, sp
   13360:	sub	sp, sp, #16
   13364:	str	r0, [fp, #-4]
   13368:	str	r1, [sp, #8]
   1336c:	str	r2, [sp, #4]
   13370:	ldr	r0, [fp, #-4]
   13374:	ldrb	r0, [r0, #128]	; 0x80
   13378:	and	r0, r0, #2
   1337c:	cmp	r0, #0
   13380:	beq	13388 <rb_base64_encode@plt+0x22a8>
   13384:	b	1339c <rb_base64_encode@plt+0x22bc>
   13388:	ldr	r0, [fp, #-4]
   1338c:	ldr	r0, [r0, #16]
   13390:	ldr	r1, [sp, #8]
   13394:	ldr	r2, [sp, #4]
   13398:	bl	110b0 <rb_rawbuf_append@plt>
   1339c:	mov	sp, fp
   133a0:	pop	{fp, pc}
   133a4:	push	{fp, lr}
   133a8:	mov	fp, sp
   133ac:	sub	sp, sp, #56	; 0x38
   133b0:	str	r0, [fp, #-4]
   133b4:	str	r1, [fp, #-8]
   133b8:	ldr	r0, [fp, #-8]
   133bc:	str	r0, [fp, #-12]
   133c0:	ldr	r0, [fp, #-12]
   133c4:	ldr	r0, [r0, #36]	; 0x24
   133c8:	str	r0, [fp, #-20]	; 0xffffffec
   133cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   133d0:	movw	r1, #0
   133d4:	cmp	r0, r1
   133d8:	beq	133ec <rb_base64_encode@plt+0x230c>
   133dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   133e0:	ldr	r0, [r0, #8]
   133e4:	str	r0, [sp, #20]
   133e8:	b	133f8 <rb_base64_encode@plt+0x2318>
   133ec:	movw	r0, #0
   133f0:	str	r0, [sp, #20]
   133f4:	b	133f8 <rb_base64_encode@plt+0x2318>
   133f8:	ldr	r0, [sp, #20]
   133fc:	str	r0, [fp, #-24]	; 0xffffffe8
   13400:	ldr	r0, [fp, #-20]	; 0xffffffec
   13404:	movw	r1, #0
   13408:	cmp	r0, r1
   1340c:	beq	13564 <rb_base64_encode@plt+0x2484>
   13410:	ldr	r0, [pc, #400]	; 135a8 <rb_base64_encode@plt+0x24c8>
   13414:	add	r0, pc, r0
   13418:	ldr	r1, [fp, #-20]	; 0xffffffec
   1341c:	ldr	r1, [r1]
   13420:	str	r1, [fp, #-16]
   13424:	ldr	r1, [fp, #-12]
   13428:	ldr	r1, [r1, #16]
   1342c:	ldr	r2, [fp, #-16]
   13430:	add	r2, r2, #20
   13434:	ldr	r3, [fp, #-16]
   13438:	ldr	r3, [r3, #36]	; 0x24
   1343c:	ldr	ip, [fp, #-16]
   13440:	ldr	ip, [ip, #12]
   13444:	ldr	lr, [fp, #-16]
   13448:	ldr	lr, [lr, #16]
   1344c:	ldr	r0, [r0]
   13450:	str	r0, [sp, #16]
   13454:	mov	r0, r1
   13458:	mov	r1, r2
   1345c:	mov	r2, r3
   13460:	mov	r3, ip
   13464:	str	lr, [sp]
   13468:	ldr	ip, [sp, #16]
   1346c:	str	ip, [sp, #4]
   13470:	bl	10ec4 <rb_send_fd_buf@plt>
   13474:	str	r0, [sp, #28]
   13478:	ldr	r0, [sp, #28]
   1347c:	cmp	r0, #0
   13480:	ble	134ec <rb_base64_encode@plt+0x240c>
   13484:	ldr	r0, [fp, #-20]	; 0xffffffec
   13488:	ldr	r1, [fp, #-12]
   1348c:	add	r1, r1, #36	; 0x24
   13490:	bl	11eb8 <rb_base64_encode@plt+0xdd8>
   13494:	movw	r0, #0
   13498:	str	r0, [sp, #24]
   1349c:	ldr	r0, [sp, #24]
   134a0:	ldr	r1, [fp, #-16]
   134a4:	ldr	r1, [r1, #36]	; 0x24
   134a8:	cmp	r0, r1
   134ac:	bge	134d8 <rb_base64_encode@plt+0x23f8>
   134b0:	ldr	r0, [fp, #-16]
   134b4:	add	r0, r0, #20
   134b8:	ldr	r1, [sp, #24]
   134bc:	add	r0, r0, r1, lsl #2
   134c0:	ldr	r0, [r0]
   134c4:	bl	10fcc <rb_close@plt>
   134c8:	ldr	r0, [sp, #24]
   134cc:	add	r0, r0, #1
   134d0:	str	r0, [sp, #24]
   134d4:	b	1349c <rb_base64_encode@plt+0x23bc>
   134d8:	ldr	r0, [fp, #-16]
   134dc:	ldr	r0, [r0, #12]
   134e0:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   134e4:	ldr	r0, [fp, #-16]
   134e8:	bl	11a8c <rb_base64_encode@plt+0x9ac>
   134ec:	ldr	r0, [sp, #28]
   134f0:	cmp	r0, #0
   134f4:	beq	13518 <rb_base64_encode@plt+0x2438>
   134f8:	ldr	r0, [sp, #28]
   134fc:	cmp	r0, #0
   13500:	bge	13520 <rb_base64_encode@plt+0x2440>
   13504:	bl	110d4 <__errno_location@plt>
   13508:	ldr	r0, [r0]
   1350c:	bl	10e94 <rb_ignore_errno@plt>
   13510:	cmp	r0, #0
   13514:	bne	13520 <rb_base64_encode@plt+0x2440>
   13518:	movw	r0, #0
   1351c:	bl	110c8 <exit@plt>
   13520:	b	13524 <rb_base64_encode@plt+0x2444>
   13524:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13528:	str	r0, [fp, #-20]	; 0xffffffec
   1352c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13530:	movw	r1, #0
   13534:	cmp	r0, r1
   13538:	beq	1354c <rb_base64_encode@plt+0x246c>
   1353c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13540:	ldr	r0, [r0, #8]
   13544:	str	r0, [sp, #12]
   13548:	b	13558 <rb_base64_encode@plt+0x2478>
   1354c:	movw	r0, #0
   13550:	str	r0, [sp, #12]
   13554:	b	13558 <rb_base64_encode@plt+0x2478>
   13558:	ldr	r0, [sp, #12]
   1355c:	str	r0, [fp, #-24]	; 0xffffffe8
   13560:	b	13400 <rb_base64_encode@plt+0x2320>
   13564:	ldr	r0, [fp, #-12]
   13568:	ldr	r0, [r0, #44]	; 0x2c
   1356c:	cmp	r0, #0
   13570:	bls	1359c <rb_base64_encode@plt+0x24bc>
   13574:	ldr	r0, [pc, #40]	; 135a4 <rb_base64_encode@plt+0x24c4>
   13578:	add	r2, pc, r0
   1357c:	ldr	r0, [fp, #-12]
   13580:	ldr	r0, [r0, #16]
   13584:	ldr	r1, [fp, #-12]
   13588:	movw	r3, #2
   1358c:	str	r1, [sp, #8]
   13590:	mov	r1, r3
   13594:	ldr	r3, [sp, #8]
   13598:	bl	10eac <rb_setselect@plt>
   1359c:	mov	sp, fp
   135a0:	pop	{fp, pc}
   135a4:			; <UNDEFINED> instruction: 0xfffffe24
   135a8:	andeq	r4, r1, r8, ror #25
   135ac:	push	{r4, r5, fp, lr}
   135b0:	add	fp, sp, #8
   135b4:	sub	sp, sp, #24
   135b8:	sub	sp, sp, #16384	; 0x4000
   135bc:	add	r3, sp, #12
   135c0:	str	r0, [fp, #-12]
   135c4:	str	r1, [fp, #-16]
   135c8:	str	r2, [fp, #-20]	; 0xffffffec
   135cc:	mov	r0, r3
   135d0:	movw	r1, #0
   135d4:	and	r1, r1, #255	; 0xff
   135d8:	movw	r2, #16384	; 0x4000
   135dc:	bl	10f0c <memset@plt>
   135e0:	ldr	r0, [fp, #-12]
   135e4:	ldr	r0, [r0, #20]
   135e8:	add	r1, sp, #10
   135ec:	movw	r2, #2
   135f0:	bl	1102c <rb_rawbuf_get@plt>
   135f4:	str	r0, [sp]
   135f8:	ldr	r0, [sp]
   135fc:	cmp	r0, #0
   13600:	bne	1361c <rb_base64_encode@plt+0x253c>
   13604:	ldr	r0, [pc, #224]	; 136ec <rb_base64_encode@plt+0x260c>
   13608:	add	r2, pc, r0
   1360c:	ldr	r0, [fp, #-12]
   13610:	movw	r1, #1
   13614:	bl	12758 <rb_base64_encode@plt+0x1678>
   13618:	b	136e4 <rb_base64_encode@plt+0x2604>
   1361c:	ldrh	r0, [sp, #10]
   13620:	bl	10f84 <ntohs@plt>
   13624:	strh	r0, [sp, #10]
   13628:	ldr	r0, [fp, #-20]	; 0xffffffec
   1362c:	cmp	r0, #0
   13630:	beq	13674 <rb_base64_encode@plt+0x2594>
   13634:	add	r1, sp, #6
   13638:	ldr	r0, [fp, #-12]
   1363c:	ldr	r0, [r0, #20]
   13640:	movw	r2, #4
   13644:	bl	1102c <rb_rawbuf_get@plt>
   13648:	str	r0, [sp]
   1364c:	ldr	r0, [sp]
   13650:	cmp	r0, #0
   13654:	bne	13670 <rb_base64_encode@plt+0x2590>
   13658:	ldr	r0, [pc, #144]	; 136f0 <rb_base64_encode@plt+0x2610>
   1365c:	add	r2, pc, r0
   13660:	ldr	r0, [fp, #-12]
   13664:	movw	r1, #1
   13668:	bl	12758 <rb_base64_encode@plt+0x1678>
   1366c:	b	136e4 <rb_base64_encode@plt+0x2604>
   13670:	b	13674 <rb_base64_encode@plt+0x2594>
   13674:	add	r1, sp, #12
   13678:	ldr	r0, [fp, #-12]
   1367c:	ldr	r0, [r0, #20]
   13680:	ldrh	r2, [sp, #10]
   13684:	bl	1102c <rb_rawbuf_get@plt>
   13688:	str	r0, [sp]
   1368c:	ldr	r0, [sp]
   13690:	cmp	r0, #0
   13694:	bne	136b0 <rb_base64_encode@plt+0x25d0>
   13698:	ldr	r0, [pc, #84]	; 136f4 <rb_base64_encode@plt+0x2614>
   1369c:	add	r2, pc, r0
   136a0:	ldr	r0, [fp, #-12]
   136a4:	movw	r1, #1
   136a8:	bl	12758 <rb_base64_encode@plt+0x1678>
   136ac:	b	136e4 <rb_base64_encode@plt+0x2604>
   136b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   136b4:	cmp	r0, #0
   136b8:	beq	136cc <rb_base64_encode@plt+0x25ec>
   136bc:	add	r2, sp, #6
   136c0:	add	r0, sp, #12
   136c4:	ldr	r1, [sp]
   136c8:	bl	137f8 <rb_base64_encode@plt+0x2718>
   136cc:	add	r1, sp, #12
   136d0:	ldr	r0, [fp, #-12]
   136d4:	add	r0, r0, #24
   136d8:	ldr	r2, [sp]
   136dc:	movw	r3, #1
   136e0:	bl	10f24 <rb_linebuf_parse@plt>
   136e4:	sub	sp, fp, #8
   136e8:	pop	{r4, r5, fp, pc}
   136ec:	strdeq	r3, [r0], -r2
   136f0:	andeq	r3, r0, ip, asr #21
   136f4:			; <UNDEFINED> instruction: 0x00003ab8
   136f8:	sub	sp, sp, #12
   136fc:	str	r0, [sp, #8]
   13700:	str	r1, [sp, #4]
   13704:	str	r2, [sp]
   13708:	add	sp, sp, #12
   1370c:	bx	lr
   13710:	push	{fp, lr}
   13714:	mov	fp, sp
   13718:	sub	sp, sp, #152	; 0x98
   1371c:	str	r0, [fp, #-4]
   13720:	str	r1, [fp, #-8]
   13724:	str	r2, [fp, #-12]
   13728:	ldr	r0, [fp, #-12]
   1372c:	cmp	r0, #0
   13730:	beq	13774 <rb_base64_encode@plt+0x2694>
   13734:	add	r1, sp, #11
   13738:	ldr	r0, [fp, #-4]
   1373c:	ldr	r0, [r0, #20]
   13740:	movw	r2, #4
   13744:	bl	1102c <rb_rawbuf_get@plt>
   13748:	str	r0, [sp, #4]
   1374c:	ldr	r0, [sp, #4]
   13750:	cmp	r0, #0
   13754:	bne	13770 <rb_base64_encode@plt+0x2690>
   13758:	ldr	r0, [pc, #144]	; 137f0 <rb_base64_encode@plt+0x2710>
   1375c:	add	r2, pc, r0
   13760:	ldr	r0, [fp, #-4]
   13764:	movw	r1, #1
   13768:	bl	12758 <rb_base64_encode@plt+0x1678>
   1376c:	b	137e8 <rb_base64_encode@plt+0x2708>
   13770:	b	13774 <rb_base64_encode@plt+0x2694>
   13774:	add	r1, sp, #15
   13778:	ldr	r0, [fp, #-4]
   1377c:	ldr	r0, [r0, #20]
   13780:	ldr	r2, [fp, #-8]
   13784:	ldrb	r2, [r2, #1]
   13788:	bl	1102c <rb_rawbuf_get@plt>
   1378c:	str	r0, [sp, #4]
   13790:	ldr	r0, [sp, #4]
   13794:	cmp	r0, #0
   13798:	bne	137b4 <rb_base64_encode@plt+0x26d4>
   1379c:	ldr	r0, [pc, #80]	; 137f4 <rb_base64_encode@plt+0x2714>
   137a0:	add	r2, pc, r0
   137a4:	ldr	r0, [fp, #-4]
   137a8:	movw	r1, #1
   137ac:	bl	12758 <rb_base64_encode@plt+0x1678>
   137b0:	b	137e8 <rb_base64_encode@plt+0x2708>
   137b4:	ldr	r0, [fp, #-12]
   137b8:	cmp	r0, #0
   137bc:	beq	137d0 <rb_base64_encode@plt+0x26f0>
   137c0:	add	r2, sp, #11
   137c4:	add	r0, sp, #15
   137c8:	ldr	r1, [sp, #4]
   137cc:	bl	137f8 <rb_base64_encode@plt+0x2718>
   137d0:	add	r1, sp, #15
   137d4:	ldr	r0, [fp, #-4]
   137d8:	add	r0, r0, #24
   137dc:	ldr	r2, [sp, #4]
   137e0:	movw	r3, #1
   137e4:	bl	10f24 <rb_linebuf_parse@plt>
   137e8:	mov	sp, fp
   137ec:	pop	{fp, pc}
   137f0:	andeq	r3, r0, ip, asr #19
   137f4:			; <UNDEFINED> instruction: 0x000039b4
   137f8:	sub	sp, sp, #16
   137fc:	str	r0, [sp, #12]
   13800:	str	r1, [sp, #8]
   13804:	str	r2, [sp, #4]
   13808:	movw	r0, #0
   1380c:	str	r0, [sp]
   13810:	ldr	r0, [sp]
   13814:	ldr	r1, [sp, #8]
   13818:	cmp	r0, r1
   1381c:	bge	1386c <rb_base64_encode@plt+0x278c>
   13820:	ldr	r0, [sp, #12]
   13824:	ldr	r1, [sp]
   13828:	ldrb	r0, [r0, r1]
   1382c:	ldr	r2, [sp, #4]
   13830:	asr	r3, r1, #31
   13834:	add	r3, r1, r3, lsr #30
   13838:	bic	r3, r3, #3
   1383c:	sub	r1, r1, r3
   13840:	add	r1, r2, r1
   13844:	ldrb	r1, [r1]
   13848:	eor	r0, r0, r1
   1384c:	ldr	r1, [sp, #12]
   13850:	ldr	r2, [sp]
   13854:	add	r1, r1, r2
   13858:	strb	r0, [r1]
   1385c:	ldr	r0, [sp]
   13860:	add	r0, r0, #1
   13864:	str	r0, [sp]
   13868:	b	13810 <rb_base64_encode@plt+0x2730>
   1386c:	add	sp, sp, #16
   13870:	bx	lr
   13874:	push	{fp, lr}
   13878:	mov	fp, sp
   1387c:	sub	sp, sp, #16
   13880:	str	r0, [sp, #8]
   13884:	ldr	r0, [sp, #8]
   13888:	ldr	r0, [r0, #16]
   1388c:	bl	10ff0 <rb_rawbuf_length@plt>
   13890:	cmp	r0, #4096	; 0x1000
   13894:	blt	138f8 <rb_base64_encode@plt+0x2818>
   13898:	ldr	r0, [sp, #8]
   1389c:	ldrb	r1, [r0, #128]	; 0x80
   138a0:	orr	r1, r1, #1
   138a4:	strb	r1, [r0, #128]	; 0x80
   138a8:	ldr	r0, [sp, #8]
   138ac:	ldr	r0, [r0, #88]	; 0x58
   138b0:	movw	r1, #1
   138b4:	movw	r2, #0
   138b8:	str	r2, [sp, #4]
   138bc:	ldr	r3, [sp, #4]
   138c0:	bl	10eac <rb_setselect@plt>
   138c4:	ldr	r0, [sp, #8]
   138c8:	ldrb	r0, [r0, #128]	; 0x80
   138cc:	and	r0, r0, #8
   138d0:	cmp	r0, #0
   138d4:	beq	138e8 <rb_base64_encode@plt+0x2808>
   138d8:	ldr	r0, [sp, #8]
   138dc:	ldr	r0, [r0, #84]	; 0x54
   138e0:	ldr	r1, [sp, #8]
   138e4:	bl	12fcc <rb_base64_encode@plt+0x1eec>
   138e8:	movw	r0, #1
   138ec:	and	r0, r0, #1
   138f0:	strb	r0, [fp, #-1]
   138f4:	b	13904 <rb_base64_encode@plt+0x2824>
   138f8:	movw	r0, #0
   138fc:	and	r0, r0, #1
   13900:	strb	r0, [fp, #-1]
   13904:	ldrb	r0, [fp, #-1]
   13908:	and	r0, r0, #1
   1390c:	mov	sp, fp
   13910:	pop	{fp, pc}
   13914:	sub	sp, sp, #4
   13918:	str	r0, [sp]
   1391c:	ldr	r0, [sp]
   13920:	movw	r1, #8961	; 0x2301
   13924:	movt	r1, #26437	; 0x6745
   13928:	str	r1, [r0]
   1392c:	ldr	r0, [sp]
   13930:	movw	r1, #43913	; 0xab89
   13934:	movt	r1, #61389	; 0xefcd
   13938:	str	r1, [r0, #4]
   1393c:	ldr	r0, [sp]
   13940:	movw	r1, #56574	; 0xdcfe
   13944:	movt	r1, #39098	; 0x98ba
   13948:	str	r1, [r0, #8]
   1394c:	ldr	r0, [sp]
   13950:	movw	r1, #21622	; 0x5476
   13954:	movt	r1, #4146	; 0x1032
   13958:	str	r1, [r0, #12]
   1395c:	ldr	r0, [sp]
   13960:	movw	r1, #57840	; 0xe1f0
   13964:	movt	r1, #50130	; 0xc3d2
   13968:	str	r1, [r0, #16]
   1396c:	ldr	r0, [sp]
   13970:	mov	r1, #0
   13974:	str	r1, [r0, #28]
   13978:	str	r1, [r0, #24]
   1397c:	add	sp, sp, #4
   13980:	bx	lr
   13984:	push	{fp, lr}
   13988:	mov	fp, sp
   1398c:	sub	sp, sp, #24
   13990:	str	r0, [fp, #-4]
   13994:	str	r1, [fp, #-8]
   13998:	str	r2, [sp, #12]
   1399c:	ldr	r0, [fp, #-4]
   139a0:	ldr	r0, [r0, #24]
   139a4:	ubfx	r0, r0, #3, #6
   139a8:	str	r0, [sp, #4]
   139ac:	ldr	r0, [sp, #12]
   139b0:	ldr	r1, [fp, #-4]
   139b4:	ldr	r2, [r1, #24]
   139b8:	ldr	r3, [r1, #28]
   139bc:	adds	r0, r2, r0, lsl #3
   139c0:	adc	r2, r3, #0
   139c4:	str	r0, [r1, #24]
   139c8:	str	r2, [r1, #28]
   139cc:	ldr	r0, [sp, #4]
   139d0:	ldr	r1, [sp, #12]
   139d4:	add	r0, r0, r1
   139d8:	cmp	r0, #63	; 0x3f
   139dc:	bls	13a60 <rb_base64_encode@plt+0x2980>
   139e0:	ldr	r0, [sp, #4]
   139e4:	movw	r1, #64	; 0x40
   139e8:	sub	r0, r1, r0
   139ec:	str	r0, [sp, #8]
   139f0:	ldr	r0, [fp, #-4]
   139f4:	add	r0, r0, #32
   139f8:	ldr	r1, [sp, #4]
   139fc:	add	r0, r0, r1
   13a00:	ldr	r1, [fp, #-8]
   13a04:	ldr	r2, [sp, #8]
   13a08:	bl	10fa8 <memcpy@plt>
   13a0c:	ldr	r0, [fp, #-4]
   13a10:	ldr	r1, [fp, #-4]
   13a14:	add	r1, r1, #32
   13a18:	bl	13a9c <rb_base64_encode@plt+0x29bc>
   13a1c:	ldr	r0, [sp, #8]
   13a20:	add	r0, r0, #63	; 0x3f
   13a24:	ldr	r1, [sp, #12]
   13a28:	cmp	r0, r1
   13a2c:	bcs	13a54 <rb_base64_encode@plt+0x2974>
   13a30:	ldr	r0, [fp, #-4]
   13a34:	ldr	r1, [fp, #-8]
   13a38:	ldr	r2, [sp, #8]
   13a3c:	add	r1, r1, r2
   13a40:	bl	13a9c <rb_base64_encode@plt+0x29bc>
   13a44:	ldr	r0, [sp, #8]
   13a48:	add	r0, r0, #64	; 0x40
   13a4c:	str	r0, [sp, #8]
   13a50:	b	13a1c <rb_base64_encode@plt+0x293c>
   13a54:	movw	r0, #0
   13a58:	str	r0, [sp, #4]
   13a5c:	b	13a68 <rb_base64_encode@plt+0x2988>
   13a60:	movw	r0, #0
   13a64:	str	r0, [sp, #8]
   13a68:	ldr	r0, [fp, #-4]
   13a6c:	add	r0, r0, #32
   13a70:	ldr	r1, [sp, #4]
   13a74:	add	r0, r0, r1
   13a78:	ldr	r1, [fp, #-8]
   13a7c:	ldr	r2, [sp, #8]
   13a80:	add	r1, r1, r2
   13a84:	ldr	r2, [sp, #12]
   13a88:	ldr	r3, [sp, #8]
   13a8c:	sub	r2, r2, r3
   13a90:	bl	10fa8 <memcpy@plt>
   13a94:	mov	sp, fp
   13a98:	pop	{fp, pc}
   13a9c:	push	{r4, r5, fp, lr}
   13aa0:	add	fp, sp, #8
   13aa4:	sub	sp, sp, #160	; 0xa0
   13aa8:	str	r0, [fp, #-12]
   13aac:	str	r1, [fp, #-16]
   13ab0:	add	r0, sp, #68	; 0x44
   13ab4:	ldr	r1, [fp, #-16]
   13ab8:	movw	r2, #64	; 0x40
   13abc:	bl	10fa8 <memcpy@plt>
   13ac0:	ldr	r0, [fp, #-12]
   13ac4:	ldr	r0, [r0]
   13ac8:	str	r0, [fp, #-20]	; 0xffffffec
   13acc:	ldr	r0, [fp, #-12]
   13ad0:	ldr	r0, [r0, #4]
   13ad4:	str	r0, [fp, #-24]	; 0xffffffe8
   13ad8:	ldr	r0, [fp, #-12]
   13adc:	ldr	r0, [r0, #8]
   13ae0:	str	r0, [fp, #-28]	; 0xffffffe4
   13ae4:	ldr	r0, [fp, #-12]
   13ae8:	ldr	r0, [r0, #12]
   13aec:	str	r0, [fp, #-32]	; 0xffffffe0
   13af0:	ldr	r0, [fp, #-12]
   13af4:	ldr	r0, [r0, #16]
   13af8:	str	r0, [fp, #-36]	; 0xffffffdc
   13afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b08:	eor	r1, r1, r2
   13b0c:	and	r0, r0, r1
   13b10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13b14:	eor	r0, r0, r1
   13b18:	ldr	r1, [sp, #68]	; 0x44
   13b1c:	str	r0, [sp, #64]	; 0x40
   13b20:	mov	r0, r1
   13b24:	bl	1108c <htonl@plt>
   13b28:	ldr	r1, [pc, #4084]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13b2c:	str	r0, [sp, #68]	; 0x44
   13b30:	ldr	r2, [sp, #64]	; 0x40
   13b34:	add	r0, r2, r0
   13b38:	add	r0, r0, r1
   13b3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b40:	lsl	r1, r1, #5
   13b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   13b48:	lsr	r2, r2, #27
   13b4c:	orr	r1, r1, r2
   13b50:	add	r0, r0, r1
   13b54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13b58:	add	r0, r1, r0
   13b5c:	str	r0, [fp, #-36]	; 0xffffffdc
   13b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b64:	lsl	r0, r0, #30
   13b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b6c:	lsr	r1, r1, #2
   13b70:	orr	r0, r0, r1
   13b74:	str	r0, [fp, #-24]	; 0xffffffe8
   13b78:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13b80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13b84:	eor	r1, r1, r2
   13b88:	and	r0, r0, r1
   13b8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13b90:	eor	r0, r0, r1
   13b94:	ldr	r1, [sp, #72]	; 0x48
   13b98:	str	r0, [sp, #60]	; 0x3c
   13b9c:	mov	r0, r1
   13ba0:	bl	1108c <htonl@plt>
   13ba4:	ldr	r1, [pc, #3960]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13ba8:	str	r0, [sp, #72]	; 0x48
   13bac:	ldr	r2, [sp, #60]	; 0x3c
   13bb0:	add	r0, r2, r0
   13bb4:	add	r0, r0, r1
   13bb8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13bbc:	lsl	r1, r1, #5
   13bc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13bc4:	lsr	r2, r2, #27
   13bc8:	orr	r1, r1, r2
   13bcc:	add	r0, r0, r1
   13bd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13bd4:	add	r0, r1, r0
   13bd8:	str	r0, [fp, #-32]	; 0xffffffe0
   13bdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13be0:	lsl	r0, r0, #30
   13be4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13be8:	lsr	r1, r1, #2
   13bec:	orr	r0, r0, r1
   13bf0:	str	r0, [fp, #-20]	; 0xffffffec
   13bf4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13bf8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13bfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13c00:	eor	r1, r1, r2
   13c04:	and	r0, r0, r1
   13c08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c0c:	eor	r0, r0, r1
   13c10:	ldr	r1, [sp, #76]	; 0x4c
   13c14:	str	r0, [sp, #56]	; 0x38
   13c18:	mov	r0, r1
   13c1c:	bl	1108c <htonl@plt>
   13c20:	ldr	r1, [pc, #3836]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13c24:	str	r0, [sp, #76]	; 0x4c
   13c28:	ldr	r2, [sp, #56]	; 0x38
   13c2c:	add	r0, r2, r0
   13c30:	add	r0, r0, r1
   13c34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13c38:	lsl	r1, r1, #5
   13c3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13c40:	lsr	r2, r2, #27
   13c44:	orr	r1, r1, r2
   13c48:	add	r0, r0, r1
   13c4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c50:	add	r0, r1, r0
   13c54:	str	r0, [fp, #-28]	; 0xffffffe4
   13c58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13c5c:	lsl	r0, r0, #30
   13c60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13c64:	lsr	r1, r1, #2
   13c68:	orr	r0, r0, r1
   13c6c:	str	r0, [fp, #-36]	; 0xffffffdc
   13c70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13c74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13c78:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c7c:	eor	r1, r1, r2
   13c80:	and	r0, r0, r1
   13c84:	ldr	r1, [fp, #-20]	; 0xffffffec
   13c88:	eor	r0, r0, r1
   13c8c:	ldr	r1, [sp, #80]	; 0x50
   13c90:	str	r0, [sp, #52]	; 0x34
   13c94:	mov	r0, r1
   13c98:	bl	1108c <htonl@plt>
   13c9c:	ldr	r1, [pc, #3712]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13ca0:	str	r0, [sp, #80]	; 0x50
   13ca4:	ldr	r2, [sp, #52]	; 0x34
   13ca8:	add	r0, r2, r0
   13cac:	add	r0, r0, r1
   13cb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13cb4:	lsl	r1, r1, #5
   13cb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13cbc:	lsr	r2, r2, #27
   13cc0:	orr	r1, r1, r2
   13cc4:	add	r0, r0, r1
   13cc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13ccc:	add	r0, r1, r0
   13cd0:	str	r0, [fp, #-24]	; 0xffffffe8
   13cd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cd8:	lsl	r0, r0, #30
   13cdc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13ce0:	lsr	r1, r1, #2
   13ce4:	orr	r0, r0, r1
   13ce8:	str	r0, [fp, #-32]	; 0xffffffe0
   13cec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13cf0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13cf4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13cf8:	eor	r1, r1, r2
   13cfc:	and	r0, r0, r1
   13d00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13d04:	eor	r0, r0, r1
   13d08:	ldr	r1, [sp, #84]	; 0x54
   13d0c:	str	r0, [sp, #48]	; 0x30
   13d10:	mov	r0, r1
   13d14:	bl	1108c <htonl@plt>
   13d18:	ldr	r1, [pc, #3588]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13d1c:	str	r0, [sp, #84]	; 0x54
   13d20:	ldr	r2, [sp, #48]	; 0x30
   13d24:	add	r0, r2, r0
   13d28:	add	r0, r0, r1
   13d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13d30:	lsl	r1, r1, #5
   13d34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13d38:	lsr	r2, r2, #27
   13d3c:	orr	r1, r1, r2
   13d40:	add	r0, r0, r1
   13d44:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d48:	add	r0, r1, r0
   13d4c:	str	r0, [fp, #-20]	; 0xffffffec
   13d50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d54:	lsl	r0, r0, #30
   13d58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d5c:	lsr	r1, r1, #2
   13d60:	orr	r0, r0, r1
   13d64:	str	r0, [fp, #-28]	; 0xffffffe4
   13d68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13d74:	eor	r1, r1, r2
   13d78:	and	r0, r0, r1
   13d7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13d80:	eor	r0, r0, r1
   13d84:	ldr	r1, [sp, #88]	; 0x58
   13d88:	str	r0, [sp, #44]	; 0x2c
   13d8c:	mov	r0, r1
   13d90:	bl	1108c <htonl@plt>
   13d94:	ldr	r1, [pc, #3464]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13d98:	str	r0, [sp, #88]	; 0x58
   13d9c:	ldr	r2, [sp, #44]	; 0x2c
   13da0:	add	r0, r2, r0
   13da4:	add	r0, r0, r1
   13da8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13dac:	lsl	r1, r1, #5
   13db0:	ldr	r2, [fp, #-20]	; 0xffffffec
   13db4:	lsr	r2, r2, #27
   13db8:	orr	r1, r1, r2
   13dbc:	add	r0, r0, r1
   13dc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13dc4:	add	r0, r1, r0
   13dc8:	str	r0, [fp, #-36]	; 0xffffffdc
   13dcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13dd0:	lsl	r0, r0, #30
   13dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13dd8:	lsr	r1, r1, #2
   13ddc:	orr	r0, r0, r1
   13de0:	str	r0, [fp, #-24]	; 0xffffffe8
   13de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13dec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13df0:	eor	r1, r1, r2
   13df4:	and	r0, r0, r1
   13df8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13dfc:	eor	r0, r0, r1
   13e00:	ldr	r1, [sp, #92]	; 0x5c
   13e04:	str	r0, [sp, #40]	; 0x28
   13e08:	mov	r0, r1
   13e0c:	bl	1108c <htonl@plt>
   13e10:	ldr	r1, [pc, #3340]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13e14:	str	r0, [sp, #92]	; 0x5c
   13e18:	ldr	r2, [sp, #40]	; 0x28
   13e1c:	add	r0, r2, r0
   13e20:	add	r0, r0, r1
   13e24:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13e28:	lsl	r1, r1, #5
   13e2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13e30:	lsr	r2, r2, #27
   13e34:	orr	r1, r1, r2
   13e38:	add	r0, r0, r1
   13e3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13e40:	add	r0, r1, r0
   13e44:	str	r0, [fp, #-32]	; 0xffffffe0
   13e48:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e4c:	lsl	r0, r0, #30
   13e50:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e54:	lsr	r1, r1, #2
   13e58:	orr	r0, r0, r1
   13e5c:	str	r0, [fp, #-20]	; 0xffffffec
   13e60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e64:	ldr	r1, [fp, #-20]	; 0xffffffec
   13e68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e6c:	eor	r1, r1, r2
   13e70:	and	r0, r0, r1
   13e74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13e78:	eor	r0, r0, r1
   13e7c:	ldr	r1, [sp, #96]	; 0x60
   13e80:	str	r0, [sp, #36]	; 0x24
   13e84:	mov	r0, r1
   13e88:	bl	1108c <htonl@plt>
   13e8c:	ldr	r1, [pc, #3216]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13e90:	str	r0, [sp, #96]	; 0x60
   13e94:	ldr	r2, [sp, #36]	; 0x24
   13e98:	add	r0, r2, r0
   13e9c:	add	r0, r0, r1
   13ea0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13ea4:	lsl	r1, r1, #5
   13ea8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13eac:	lsr	r2, r2, #27
   13eb0:	orr	r1, r1, r2
   13eb4:	add	r0, r0, r1
   13eb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ebc:	add	r0, r1, r0
   13ec0:	str	r0, [fp, #-28]	; 0xffffffe4
   13ec4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13ec8:	lsl	r0, r0, #30
   13ecc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ed0:	lsr	r1, r1, #2
   13ed4:	orr	r0, r0, r1
   13ed8:	str	r0, [fp, #-36]	; 0xffffffdc
   13edc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13ee4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ee8:	eor	r1, r1, r2
   13eec:	and	r0, r0, r1
   13ef0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ef4:	eor	r0, r0, r1
   13ef8:	ldr	r1, [sp, #100]	; 0x64
   13efc:	str	r0, [sp, #32]
   13f00:	mov	r0, r1
   13f04:	bl	1108c <htonl@plt>
   13f08:	ldr	r1, [pc, #3092]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13f0c:	str	r0, [sp, #100]	; 0x64
   13f10:	ldr	r2, [sp, #32]
   13f14:	add	r0, r2, r0
   13f18:	add	r0, r0, r1
   13f1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f20:	lsl	r1, r1, #5
   13f24:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f28:	lsr	r2, r2, #27
   13f2c:	orr	r1, r1, r2
   13f30:	add	r0, r0, r1
   13f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f38:	add	r0, r1, r0
   13f3c:	str	r0, [fp, #-24]	; 0xffffffe8
   13f40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f44:	lsl	r0, r0, #30
   13f48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13f4c:	lsr	r1, r1, #2
   13f50:	orr	r0, r0, r1
   13f54:	str	r0, [fp, #-32]	; 0xffffffe0
   13f58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13f5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13f60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13f64:	eor	r1, r1, r2
   13f68:	and	r0, r0, r1
   13f6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13f70:	eor	r0, r0, r1
   13f74:	ldr	r1, [sp, #104]	; 0x68
   13f78:	str	r0, [sp, #28]
   13f7c:	mov	r0, r1
   13f80:	bl	1108c <htonl@plt>
   13f84:	ldr	r1, [pc, #2968]	; 14b24 <rb_base64_encode@plt+0x3a44>
   13f88:	str	r0, [sp, #104]	; 0x68
   13f8c:	ldr	r2, [sp, #28]
   13f90:	add	r0, r2, r0
   13f94:	add	r0, r0, r1
   13f98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13f9c:	lsl	r1, r1, #5
   13fa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13fa4:	lsr	r2, r2, #27
   13fa8:	orr	r1, r1, r2
   13fac:	add	r0, r0, r1
   13fb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   13fb4:	add	r0, r1, r0
   13fb8:	str	r0, [fp, #-20]	; 0xffffffec
   13fbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13fc0:	lsl	r0, r0, #30
   13fc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fc8:	lsr	r1, r1, #2
   13fcc:	orr	r0, r0, r1
   13fd0:	str	r0, [fp, #-28]	; 0xffffffe4
   13fd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fe0:	eor	r1, r1, r2
   13fe4:	and	r0, r0, r1
   13fe8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13fec:	eor	r0, r0, r1
   13ff0:	ldr	r1, [sp, #108]	; 0x6c
   13ff4:	str	r0, [sp, #24]
   13ff8:	mov	r0, r1
   13ffc:	bl	1108c <htonl@plt>
   14000:	ldr	r1, [pc, #2844]	; 14b24 <rb_base64_encode@plt+0x3a44>
   14004:	str	r0, [sp, #108]	; 0x6c
   14008:	ldr	r2, [sp, #24]
   1400c:	add	r0, r2, r0
   14010:	add	r0, r0, r1
   14014:	ldr	r1, [fp, #-20]	; 0xffffffec
   14018:	lsl	r1, r1, #5
   1401c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14020:	lsr	r2, r2, #27
   14024:	orr	r1, r1, r2
   14028:	add	r0, r0, r1
   1402c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14030:	add	r0, r1, r0
   14034:	str	r0, [fp, #-36]	; 0xffffffdc
   14038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1403c:	lsl	r0, r0, #30
   14040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14044:	lsr	r1, r1, #2
   14048:	orr	r0, r0, r1
   1404c:	str	r0, [fp, #-24]	; 0xffffffe8
   14050:	ldr	r0, [fp, #-20]	; 0xffffffec
   14054:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14058:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1405c:	eor	r1, r1, r2
   14060:	and	r0, r0, r1
   14064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14068:	eor	r0, r0, r1
   1406c:	ldr	r1, [sp, #112]	; 0x70
   14070:	str	r0, [sp, #20]
   14074:	mov	r0, r1
   14078:	bl	1108c <htonl@plt>
   1407c:	ldr	r1, [pc, #2720]	; 14b24 <rb_base64_encode@plt+0x3a44>
   14080:	str	r0, [sp, #112]	; 0x70
   14084:	ldr	r2, [sp, #20]
   14088:	add	r0, r2, r0
   1408c:	add	r0, r0, r1
   14090:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14094:	lsl	r1, r1, #5
   14098:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1409c:	lsr	r2, r2, #27
   140a0:	orr	r1, r1, r2
   140a4:	add	r0, r0, r1
   140a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   140ac:	add	r0, r1, r0
   140b0:	str	r0, [fp, #-32]	; 0xffffffe0
   140b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   140b8:	lsl	r0, r0, #30
   140bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   140c0:	lsr	r1, r1, #2
   140c4:	orr	r0, r0, r1
   140c8:	str	r0, [fp, #-20]	; 0xffffffec
   140cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   140d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   140d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   140d8:	eor	r1, r1, r2
   140dc:	and	r0, r0, r1
   140e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   140e4:	eor	r0, r0, r1
   140e8:	ldr	r1, [sp, #116]	; 0x74
   140ec:	str	r0, [sp, #16]
   140f0:	mov	r0, r1
   140f4:	bl	1108c <htonl@plt>
   140f8:	ldr	r1, [pc, #2596]	; 14b24 <rb_base64_encode@plt+0x3a44>
   140fc:	str	r0, [sp, #116]	; 0x74
   14100:	ldr	r2, [sp, #16]
   14104:	add	r0, r2, r0
   14108:	add	r0, r0, r1
   1410c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14110:	lsl	r1, r1, #5
   14114:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14118:	lsr	r2, r2, #27
   1411c:	orr	r1, r1, r2
   14120:	add	r0, r0, r1
   14124:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14128:	add	r0, r1, r0
   1412c:	str	r0, [fp, #-28]	; 0xffffffe4
   14130:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14134:	lsl	r0, r0, #30
   14138:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1413c:	lsr	r1, r1, #2
   14140:	orr	r0, r0, r1
   14144:	str	r0, [fp, #-36]	; 0xffffffdc
   14148:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1414c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14150:	ldr	r2, [fp, #-20]	; 0xffffffec
   14154:	eor	r1, r1, r2
   14158:	and	r0, r0, r1
   1415c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14160:	eor	r0, r0, r1
   14164:	ldr	r1, [sp, #120]	; 0x78
   14168:	str	r0, [sp, #12]
   1416c:	mov	r0, r1
   14170:	bl	1108c <htonl@plt>
   14174:	ldr	r1, [pc, #2472]	; 14b24 <rb_base64_encode@plt+0x3a44>
   14178:	str	r0, [sp, #120]	; 0x78
   1417c:	ldr	r2, [sp, #12]
   14180:	add	r0, r2, r0
   14184:	add	r0, r0, r1
   14188:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1418c:	lsl	r1, r1, #5
   14190:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14194:	lsr	r2, r2, #27
   14198:	orr	r1, r1, r2
   1419c:	add	r0, r0, r1
   141a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   141a4:	add	r0, r1, r0
   141a8:	str	r0, [fp, #-24]	; 0xffffffe8
   141ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   141b0:	lsl	r0, r0, #30
   141b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   141b8:	lsr	r1, r1, #2
   141bc:	orr	r0, r0, r1
   141c0:	str	r0, [fp, #-32]	; 0xffffffe0
   141c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   141c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   141cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   141d0:	eor	r1, r1, r2
   141d4:	and	r0, r0, r1
   141d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   141dc:	eor	r0, r0, r1
   141e0:	ldr	r1, [sp, #124]	; 0x7c
   141e4:	str	r0, [sp, #8]
   141e8:	mov	r0, r1
   141ec:	bl	1108c <htonl@plt>
   141f0:	ldr	r1, [pc, #2348]	; 14b24 <rb_base64_encode@plt+0x3a44>
   141f4:	str	r0, [sp, #124]	; 0x7c
   141f8:	ldr	r2, [sp, #8]
   141fc:	add	r0, r2, r0
   14200:	add	r0, r0, r1
   14204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14208:	lsl	r1, r1, #5
   1420c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14210:	lsr	r2, r2, #27
   14214:	orr	r1, r1, r2
   14218:	add	r0, r0, r1
   1421c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14220:	add	r0, r1, r0
   14224:	str	r0, [fp, #-20]	; 0xffffffec
   14228:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1422c:	lsl	r0, r0, #30
   14230:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14234:	lsr	r1, r1, #2
   14238:	orr	r0, r0, r1
   1423c:	str	r0, [fp, #-28]	; 0xffffffe4
   14240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14244:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14248:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1424c:	eor	r1, r1, r2
   14250:	and	r0, r0, r1
   14254:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14258:	eor	r0, r0, r1
   1425c:	ldr	r1, [sp, #128]	; 0x80
   14260:	str	r0, [sp, #4]
   14264:	mov	r0, r1
   14268:	bl	1108c <htonl@plt>
   1426c:	ldr	r1, [pc, #2228]	; 14b28 <rb_base64_encode@plt+0x3a48>
   14270:	ldr	r2, [pc, #2228]	; 14b2c <rb_base64_encode@plt+0x3a4c>
   14274:	ldr	r3, [pc, #2228]	; 14b30 <rb_base64_encode@plt+0x3a50>
   14278:	ldr	ip, [pc, #2212]	; 14b24 <rb_base64_encode@plt+0x3a44>
   1427c:	str	r0, [sp, #128]	; 0x80
   14280:	ldr	lr, [sp, #4]
   14284:	add	r0, lr, r0
   14288:	add	r0, r0, ip
   1428c:	ldr	lr, [fp, #-20]	; 0xffffffec
   14290:	lsl	lr, lr, #5
   14294:	ldr	r4, [fp, #-20]	; 0xffffffec
   14298:	lsr	r4, r4, #27
   1429c:	orr	lr, lr, r4
   142a0:	add	r0, r0, lr
   142a4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   142a8:	add	r0, lr, r0
   142ac:	str	r0, [fp, #-36]	; 0xffffffdc
   142b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142b4:	lsl	r0, r0, #30
   142b8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   142bc:	lsr	lr, lr, #2
   142c0:	orr	r0, r0, lr
   142c4:	str	r0, [fp, #-24]	; 0xffffffe8
   142c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   142cc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   142d0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   142d4:	eor	lr, lr, r4
   142d8:	and	r0, r0, lr
   142dc:	ldr	lr, [fp, #-28]	; 0xffffffe4
   142e0:	eor	r0, r0, lr
   142e4:	ldr	lr, [sp, #120]	; 0x78
   142e8:	ldr	r4, [sp, #100]	; 0x64
   142ec:	eor	lr, lr, r4
   142f0:	ldr	r4, [sp, #76]	; 0x4c
   142f4:	eor	lr, lr, r4
   142f8:	ldr	r4, [sp, #68]	; 0x44
   142fc:	eor	lr, lr, r4
   14300:	lsl	lr, lr, #1
   14304:	ldr	r4, [sp, #120]	; 0x78
   14308:	ldr	r5, [sp, #100]	; 0x64
   1430c:	eor	r4, r4, r5
   14310:	ldr	r5, [sp, #76]	; 0x4c
   14314:	eor	r4, r4, r5
   14318:	ldr	r5, [sp, #68]	; 0x44
   1431c:	eor	r4, r4, r5
   14320:	lsr	r4, r4, #31
   14324:	orr	lr, lr, r4
   14328:	str	lr, [sp, #68]	; 0x44
   1432c:	add	r0, r0, lr
   14330:	add	r0, r0, ip
   14334:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14338:	lsl	lr, lr, #5
   1433c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14340:	lsr	r4, r4, #27
   14344:	orr	lr, lr, r4
   14348:	add	r0, r0, lr
   1434c:	ldr	lr, [fp, #-32]	; 0xffffffe0
   14350:	add	r0, lr, r0
   14354:	str	r0, [fp, #-32]	; 0xffffffe0
   14358:	ldr	r0, [fp, #-20]	; 0xffffffec
   1435c:	lsl	r0, r0, #30
   14360:	ldr	lr, [fp, #-20]	; 0xffffffec
   14364:	lsr	lr, lr, #2
   14368:	orr	r0, r0, lr
   1436c:	str	r0, [fp, #-20]	; 0xffffffec
   14370:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14374:	ldr	lr, [fp, #-20]	; 0xffffffec
   14378:	ldr	r4, [fp, #-24]	; 0xffffffe8
   1437c:	eor	lr, lr, r4
   14380:	and	r0, r0, lr
   14384:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14388:	eor	r0, r0, lr
   1438c:	ldr	lr, [sp, #124]	; 0x7c
   14390:	ldr	r4, [sp, #104]	; 0x68
   14394:	eor	lr, lr, r4
   14398:	ldr	r4, [sp, #80]	; 0x50
   1439c:	eor	lr, lr, r4
   143a0:	ldr	r4, [sp, #72]	; 0x48
   143a4:	eor	lr, lr, r4
   143a8:	lsl	lr, lr, #1
   143ac:	ldr	r4, [sp, #124]	; 0x7c
   143b0:	ldr	r5, [sp, #104]	; 0x68
   143b4:	eor	r4, r4, r5
   143b8:	ldr	r5, [sp, #80]	; 0x50
   143bc:	eor	r4, r4, r5
   143c0:	ldr	r5, [sp, #72]	; 0x48
   143c4:	eor	r4, r4, r5
   143c8:	lsr	r4, r4, #31
   143cc:	orr	lr, lr, r4
   143d0:	str	lr, [sp, #72]	; 0x48
   143d4:	add	r0, r0, lr
   143d8:	add	r0, r0, ip
   143dc:	ldr	lr, [fp, #-32]	; 0xffffffe0
   143e0:	lsl	lr, lr, #5
   143e4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   143e8:	lsr	r4, r4, #27
   143ec:	orr	lr, lr, r4
   143f0:	add	r0, r0, lr
   143f4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   143f8:	add	r0, lr, r0
   143fc:	str	r0, [fp, #-28]	; 0xffffffe4
   14400:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14404:	lsl	r0, r0, #30
   14408:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1440c:	lsr	lr, lr, #2
   14410:	orr	r0, r0, lr
   14414:	str	r0, [fp, #-36]	; 0xffffffdc
   14418:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1441c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14420:	ldr	r4, [fp, #-20]	; 0xffffffec
   14424:	eor	lr, lr, r4
   14428:	and	r0, r0, lr
   1442c:	ldr	lr, [fp, #-20]	; 0xffffffec
   14430:	eor	r0, r0, lr
   14434:	ldr	lr, [sp, #128]	; 0x80
   14438:	ldr	r4, [sp, #108]	; 0x6c
   1443c:	eor	lr, lr, r4
   14440:	ldr	r4, [sp, #84]	; 0x54
   14444:	eor	lr, lr, r4
   14448:	ldr	r4, [sp, #76]	; 0x4c
   1444c:	eor	lr, lr, r4
   14450:	lsl	lr, lr, #1
   14454:	ldr	r4, [sp, #128]	; 0x80
   14458:	ldr	r5, [sp, #108]	; 0x6c
   1445c:	eor	r4, r4, r5
   14460:	ldr	r5, [sp, #84]	; 0x54
   14464:	eor	r4, r4, r5
   14468:	ldr	r5, [sp, #76]	; 0x4c
   1446c:	eor	r4, r4, r5
   14470:	lsr	r4, r4, #31
   14474:	orr	lr, lr, r4
   14478:	str	lr, [sp, #76]	; 0x4c
   1447c:	add	r0, r0, lr
   14480:	add	r0, r0, ip
   14484:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14488:	lsl	lr, lr, #5
   1448c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   14490:	lsr	r4, r4, #27
   14494:	orr	lr, lr, r4
   14498:	add	r0, r0, lr
   1449c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   144a0:	add	r0, lr, r0
   144a4:	str	r0, [fp, #-24]	; 0xffffffe8
   144a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144ac:	lsl	r0, r0, #30
   144b0:	ldr	lr, [fp, #-32]	; 0xffffffe0
   144b4:	lsr	lr, lr, #2
   144b8:	orr	r0, r0, lr
   144bc:	str	r0, [fp, #-32]	; 0xffffffe0
   144c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   144c4:	ldr	lr, [fp, #-32]	; 0xffffffe0
   144c8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   144cc:	eor	lr, lr, r4
   144d0:	and	r0, r0, lr
   144d4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   144d8:	eor	r0, r0, lr
   144dc:	ldr	lr, [sp, #68]	; 0x44
   144e0:	ldr	r4, [sp, #112]	; 0x70
   144e4:	eor	lr, lr, r4
   144e8:	ldr	r4, [sp, #88]	; 0x58
   144ec:	eor	lr, lr, r4
   144f0:	ldr	r4, [sp, #80]	; 0x50
   144f4:	eor	lr, lr, r4
   144f8:	lsl	lr, lr, #1
   144fc:	ldr	r4, [sp, #68]	; 0x44
   14500:	ldr	r5, [sp, #112]	; 0x70
   14504:	eor	r4, r4, r5
   14508:	ldr	r5, [sp, #88]	; 0x58
   1450c:	eor	r4, r4, r5
   14510:	ldr	r5, [sp, #80]	; 0x50
   14514:	eor	r4, r4, r5
   14518:	lsr	r4, r4, #31
   1451c:	orr	lr, lr, r4
   14520:	str	lr, [sp, #80]	; 0x50
   14524:	add	r0, r0, lr
   14528:	add	r0, r0, ip
   1452c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14530:	lsl	ip, ip, #5
   14534:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14538:	lsr	lr, lr, #27
   1453c:	orr	ip, ip, lr
   14540:	add	r0, r0, ip
   14544:	ldr	ip, [fp, #-20]	; 0xffffffec
   14548:	add	r0, ip, r0
   1454c:	str	r0, [fp, #-20]	; 0xffffffec
   14550:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14554:	lsl	r0, r0, #30
   14558:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1455c:	lsr	ip, ip, #2
   14560:	orr	r0, r0, ip
   14564:	str	r0, [fp, #-28]	; 0xffffffe4
   14568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1456c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14570:	eor	r0, r0, ip
   14574:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14578:	eor	r0, r0, ip
   1457c:	ldr	ip, [sp, #72]	; 0x48
   14580:	ldr	lr, [sp, #116]	; 0x74
   14584:	eor	ip, ip, lr
   14588:	ldr	lr, [sp, #92]	; 0x5c
   1458c:	eor	ip, ip, lr
   14590:	ldr	lr, [sp, #84]	; 0x54
   14594:	eor	ip, ip, lr
   14598:	lsl	ip, ip, #1
   1459c:	ldr	lr, [sp, #72]	; 0x48
   145a0:	ldr	r4, [sp, #116]	; 0x74
   145a4:	eor	lr, lr, r4
   145a8:	ldr	r4, [sp, #92]	; 0x5c
   145ac:	eor	lr, lr, r4
   145b0:	ldr	r4, [sp, #84]	; 0x54
   145b4:	eor	lr, lr, r4
   145b8:	lsr	lr, lr, #31
   145bc:	orr	ip, ip, lr
   145c0:	str	ip, [sp, #84]	; 0x54
   145c4:	add	r0, r0, ip
   145c8:	add	r0, r0, r3
   145cc:	ldr	ip, [fp, #-20]	; 0xffffffec
   145d0:	lsl	ip, ip, #5
   145d4:	ldr	lr, [fp, #-20]	; 0xffffffec
   145d8:	lsr	lr, lr, #27
   145dc:	orr	ip, ip, lr
   145e0:	add	r0, r0, ip
   145e4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   145e8:	add	r0, ip, r0
   145ec:	str	r0, [fp, #-36]	; 0xffffffdc
   145f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145f4:	lsl	r0, r0, #30
   145f8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   145fc:	lsr	ip, ip, #2
   14600:	orr	r0, r0, ip
   14604:	str	r0, [fp, #-24]	; 0xffffffe8
   14608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1460c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14610:	eor	r0, r0, ip
   14614:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14618:	eor	r0, r0, ip
   1461c:	ldr	ip, [sp, #76]	; 0x4c
   14620:	ldr	lr, [sp, #120]	; 0x78
   14624:	eor	ip, ip, lr
   14628:	ldr	lr, [sp, #96]	; 0x60
   1462c:	eor	ip, ip, lr
   14630:	ldr	lr, [sp, #88]	; 0x58
   14634:	eor	ip, ip, lr
   14638:	lsl	ip, ip, #1
   1463c:	ldr	lr, [sp, #76]	; 0x4c
   14640:	ldr	r4, [sp, #120]	; 0x78
   14644:	eor	lr, lr, r4
   14648:	ldr	r4, [sp, #96]	; 0x60
   1464c:	eor	lr, lr, r4
   14650:	ldr	r4, [sp, #88]	; 0x58
   14654:	eor	lr, lr, r4
   14658:	lsr	lr, lr, #31
   1465c:	orr	ip, ip, lr
   14660:	str	ip, [sp, #88]	; 0x58
   14664:	add	r0, r0, ip
   14668:	add	r0, r0, r3
   1466c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14670:	lsl	ip, ip, #5
   14674:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14678:	lsr	lr, lr, #27
   1467c:	orr	ip, ip, lr
   14680:	add	r0, r0, ip
   14684:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14688:	add	r0, ip, r0
   1468c:	str	r0, [fp, #-32]	; 0xffffffe0
   14690:	ldr	r0, [fp, #-20]	; 0xffffffec
   14694:	lsl	r0, r0, #30
   14698:	ldr	ip, [fp, #-20]	; 0xffffffec
   1469c:	lsr	ip, ip, #2
   146a0:	orr	r0, r0, ip
   146a4:	str	r0, [fp, #-20]	; 0xffffffec
   146a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   146ac:	ldr	ip, [fp, #-20]	; 0xffffffec
   146b0:	eor	r0, r0, ip
   146b4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   146b8:	eor	r0, r0, ip
   146bc:	ldr	ip, [sp, #80]	; 0x50
   146c0:	ldr	lr, [sp, #124]	; 0x7c
   146c4:	eor	ip, ip, lr
   146c8:	ldr	lr, [sp, #100]	; 0x64
   146cc:	eor	ip, ip, lr
   146d0:	ldr	lr, [sp, #92]	; 0x5c
   146d4:	eor	ip, ip, lr
   146d8:	lsl	ip, ip, #1
   146dc:	ldr	lr, [sp, #80]	; 0x50
   146e0:	ldr	r4, [sp, #124]	; 0x7c
   146e4:	eor	lr, lr, r4
   146e8:	ldr	r4, [sp, #100]	; 0x64
   146ec:	eor	lr, lr, r4
   146f0:	ldr	r4, [sp, #92]	; 0x5c
   146f4:	eor	lr, lr, r4
   146f8:	lsr	lr, lr, #31
   146fc:	orr	ip, ip, lr
   14700:	str	ip, [sp, #92]	; 0x5c
   14704:	add	r0, r0, ip
   14708:	add	r0, r0, r3
   1470c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14710:	lsl	ip, ip, #5
   14714:	ldr	lr, [fp, #-32]	; 0xffffffe0
   14718:	lsr	lr, lr, #27
   1471c:	orr	ip, ip, lr
   14720:	add	r0, r0, ip
   14724:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14728:	add	r0, ip, r0
   1472c:	str	r0, [fp, #-28]	; 0xffffffe4
   14730:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14734:	lsl	r0, r0, #30
   14738:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1473c:	lsr	ip, ip, #2
   14740:	orr	r0, r0, ip
   14744:	str	r0, [fp, #-36]	; 0xffffffdc
   14748:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1474c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14750:	eor	r0, r0, ip
   14754:	ldr	ip, [fp, #-20]	; 0xffffffec
   14758:	eor	r0, r0, ip
   1475c:	ldr	ip, [sp, #84]	; 0x54
   14760:	ldr	lr, [sp, #128]	; 0x80
   14764:	eor	ip, ip, lr
   14768:	ldr	lr, [sp, #104]	; 0x68
   1476c:	eor	ip, ip, lr
   14770:	ldr	lr, [sp, #96]	; 0x60
   14774:	eor	ip, ip, lr
   14778:	lsl	ip, ip, #1
   1477c:	ldr	lr, [sp, #84]	; 0x54
   14780:	ldr	r4, [sp, #128]	; 0x80
   14784:	eor	lr, lr, r4
   14788:	ldr	r4, [sp, #104]	; 0x68
   1478c:	eor	lr, lr, r4
   14790:	ldr	r4, [sp, #96]	; 0x60
   14794:	eor	lr, lr, r4
   14798:	lsr	lr, lr, #31
   1479c:	orr	ip, ip, lr
   147a0:	str	ip, [sp, #96]	; 0x60
   147a4:	add	r0, r0, ip
   147a8:	add	r0, r0, r3
   147ac:	ldr	ip, [fp, #-28]	; 0xffffffe4
   147b0:	lsl	ip, ip, #5
   147b4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   147b8:	lsr	lr, lr, #27
   147bc:	orr	ip, ip, lr
   147c0:	add	r0, r0, ip
   147c4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   147c8:	add	r0, ip, r0
   147cc:	str	r0, [fp, #-24]	; 0xffffffe8
   147d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   147d4:	lsl	r0, r0, #30
   147d8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   147dc:	lsr	ip, ip, #2
   147e0:	orr	r0, r0, ip
   147e4:	str	r0, [fp, #-32]	; 0xffffffe0
   147e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   147ec:	ldr	ip, [fp, #-32]	; 0xffffffe0
   147f0:	eor	r0, r0, ip
   147f4:	ldr	ip, [fp, #-36]	; 0xffffffdc
   147f8:	eor	r0, r0, ip
   147fc:	ldr	ip, [sp, #88]	; 0x58
   14800:	ldr	lr, [sp, #68]	; 0x44
   14804:	eor	ip, ip, lr
   14808:	ldr	lr, [sp, #108]	; 0x6c
   1480c:	eor	ip, ip, lr
   14810:	ldr	lr, [sp, #100]	; 0x64
   14814:	eor	ip, ip, lr
   14818:	lsl	ip, ip, #1
   1481c:	ldr	lr, [sp, #88]	; 0x58
   14820:	ldr	r4, [sp, #68]	; 0x44
   14824:	eor	lr, lr, r4
   14828:	ldr	r4, [sp, #108]	; 0x6c
   1482c:	eor	lr, lr, r4
   14830:	ldr	r4, [sp, #100]	; 0x64
   14834:	eor	lr, lr, r4
   14838:	lsr	lr, lr, #31
   1483c:	orr	ip, ip, lr
   14840:	str	ip, [sp, #100]	; 0x64
   14844:	add	r0, r0, ip
   14848:	add	r0, r0, r3
   1484c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14850:	lsl	ip, ip, #5
   14854:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14858:	lsr	lr, lr, #27
   1485c:	orr	ip, ip, lr
   14860:	add	r0, r0, ip
   14864:	ldr	ip, [fp, #-20]	; 0xffffffec
   14868:	add	r0, ip, r0
   1486c:	str	r0, [fp, #-20]	; 0xffffffec
   14870:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14874:	lsl	r0, r0, #30
   14878:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1487c:	lsr	ip, ip, #2
   14880:	orr	r0, r0, ip
   14884:	str	r0, [fp, #-28]	; 0xffffffe4
   14888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1488c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14890:	eor	r0, r0, ip
   14894:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14898:	eor	r0, r0, ip
   1489c:	ldr	ip, [sp, #92]	; 0x5c
   148a0:	ldr	lr, [sp, #72]	; 0x48
   148a4:	eor	ip, ip, lr
   148a8:	ldr	lr, [sp, #112]	; 0x70
   148ac:	eor	ip, ip, lr
   148b0:	ldr	lr, [sp, #104]	; 0x68
   148b4:	eor	ip, ip, lr
   148b8:	lsl	ip, ip, #1
   148bc:	ldr	lr, [sp, #92]	; 0x5c
   148c0:	ldr	r4, [sp, #72]	; 0x48
   148c4:	eor	lr, lr, r4
   148c8:	ldr	r4, [sp, #112]	; 0x70
   148cc:	eor	lr, lr, r4
   148d0:	ldr	r4, [sp, #104]	; 0x68
   148d4:	eor	lr, lr, r4
   148d8:	lsr	lr, lr, #31
   148dc:	orr	ip, ip, lr
   148e0:	str	ip, [sp, #104]	; 0x68
   148e4:	add	r0, r0, ip
   148e8:	add	r0, r0, r3
   148ec:	ldr	ip, [fp, #-20]	; 0xffffffec
   148f0:	lsl	ip, ip, #5
   148f4:	ldr	lr, [fp, #-20]	; 0xffffffec
   148f8:	lsr	lr, lr, #27
   148fc:	orr	ip, ip, lr
   14900:	add	r0, r0, ip
   14904:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14908:	add	r0, ip, r0
   1490c:	str	r0, [fp, #-36]	; 0xffffffdc
   14910:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14914:	lsl	r0, r0, #30
   14918:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1491c:	lsr	ip, ip, #2
   14920:	orr	r0, r0, ip
   14924:	str	r0, [fp, #-24]	; 0xffffffe8
   14928:	ldr	r0, [fp, #-20]	; 0xffffffec
   1492c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14930:	eor	r0, r0, ip
   14934:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14938:	eor	r0, r0, ip
   1493c:	ldr	ip, [sp, #96]	; 0x60
   14940:	ldr	lr, [sp, #76]	; 0x4c
   14944:	eor	ip, ip, lr
   14948:	ldr	lr, [sp, #116]	; 0x74
   1494c:	eor	ip, ip, lr
   14950:	ldr	lr, [sp, #108]	; 0x6c
   14954:	eor	ip, ip, lr
   14958:	lsl	ip, ip, #1
   1495c:	ldr	lr, [sp, #96]	; 0x60
   14960:	ldr	r4, [sp, #76]	; 0x4c
   14964:	eor	lr, lr, r4
   14968:	ldr	r4, [sp, #116]	; 0x74
   1496c:	eor	lr, lr, r4
   14970:	ldr	r4, [sp, #108]	; 0x6c
   14974:	eor	lr, lr, r4
   14978:	lsr	lr, lr, #31
   1497c:	orr	ip, ip, lr
   14980:	str	ip, [sp, #108]	; 0x6c
   14984:	add	r0, r0, ip
   14988:	add	r0, r0, r3
   1498c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14990:	lsl	ip, ip, #5
   14994:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14998:	lsr	lr, lr, #27
   1499c:	orr	ip, ip, lr
   149a0:	add	r0, r0, ip
   149a4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   149a8:	add	r0, ip, r0
   149ac:	str	r0, [fp, #-32]	; 0xffffffe0
   149b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   149b4:	lsl	r0, r0, #30
   149b8:	ldr	ip, [fp, #-20]	; 0xffffffec
   149bc:	lsr	ip, ip, #2
   149c0:	orr	r0, r0, ip
   149c4:	str	r0, [fp, #-20]	; 0xffffffec
   149c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   149cc:	ldr	ip, [fp, #-20]	; 0xffffffec
   149d0:	eor	r0, r0, ip
   149d4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   149d8:	eor	r0, r0, ip
   149dc:	ldr	ip, [sp, #100]	; 0x64
   149e0:	ldr	lr, [sp, #80]	; 0x50
   149e4:	eor	ip, ip, lr
   149e8:	ldr	lr, [sp, #120]	; 0x78
   149ec:	eor	ip, ip, lr
   149f0:	ldr	lr, [sp, #112]	; 0x70
   149f4:	eor	ip, ip, lr
   149f8:	lsl	ip, ip, #1
   149fc:	ldr	lr, [sp, #100]	; 0x64
   14a00:	ldr	r4, [sp, #80]	; 0x50
   14a04:	eor	lr, lr, r4
   14a08:	ldr	r4, [sp, #120]	; 0x78
   14a0c:	eor	lr, lr, r4
   14a10:	ldr	r4, [sp, #112]	; 0x70
   14a14:	eor	lr, lr, r4
   14a18:	lsr	lr, lr, #31
   14a1c:	orr	ip, ip, lr
   14a20:	str	ip, [sp, #112]	; 0x70
   14a24:	add	r0, r0, ip
   14a28:	add	r0, r0, r3
   14a2c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14a30:	lsl	ip, ip, #5
   14a34:	ldr	lr, [fp, #-32]	; 0xffffffe0
   14a38:	lsr	lr, lr, #27
   14a3c:	orr	ip, ip, lr
   14a40:	add	r0, r0, ip
   14a44:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14a48:	add	r0, ip, r0
   14a4c:	str	r0, [fp, #-28]	; 0xffffffe4
   14a50:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14a54:	lsl	r0, r0, #30
   14a58:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14a5c:	lsr	ip, ip, #2
   14a60:	orr	r0, r0, ip
   14a64:	str	r0, [fp, #-36]	; 0xffffffdc
   14a68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14a6c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14a70:	eor	r0, r0, ip
   14a74:	ldr	ip, [fp, #-20]	; 0xffffffec
   14a78:	eor	r0, r0, ip
   14a7c:	ldr	ip, [sp, #104]	; 0x68
   14a80:	ldr	lr, [sp, #84]	; 0x54
   14a84:	eor	ip, ip, lr
   14a88:	ldr	lr, [sp, #124]	; 0x7c
   14a8c:	eor	ip, ip, lr
   14a90:	ldr	lr, [sp, #116]	; 0x74
   14a94:	eor	ip, ip, lr
   14a98:	lsl	ip, ip, #1
   14a9c:	ldr	lr, [sp, #104]	; 0x68
   14aa0:	ldr	r4, [sp, #84]	; 0x54
   14aa4:	eor	lr, lr, r4
   14aa8:	ldr	r4, [sp, #124]	; 0x7c
   14aac:	eor	lr, lr, r4
   14ab0:	ldr	r4, [sp, #116]	; 0x74
   14ab4:	eor	lr, lr, r4
   14ab8:	lsr	lr, lr, #31
   14abc:	orr	ip, ip, lr
   14ac0:	str	ip, [sp, #116]	; 0x74
   14ac4:	add	r0, r0, ip
   14ac8:	add	r0, r0, r3
   14acc:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14ad0:	lsl	ip, ip, #5
   14ad4:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14ad8:	lsr	lr, lr, #27
   14adc:	orr	ip, ip, lr
   14ae0:	add	r0, r0, ip
   14ae4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14ae8:	add	r0, ip, r0
   14aec:	str	r0, [fp, #-24]	; 0xffffffe8
   14af0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14af4:	lsl	r0, r0, #30
   14af8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14afc:	lsr	ip, ip, #2
   14b00:	orr	r0, r0, ip
   14b04:	str	r0, [fp, #-32]	; 0xffffffe0
   14b08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14b0c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14b10:	eor	r0, r0, ip
   14b14:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14b18:	eor	r0, r0, ip
   14b1c:	ldr	ip, [sp, #108]	; 0x6c
   14b20:	b	14b34 <rb_base64_encode@plt+0x3a54>
   14b24:	bpl	fe0b3190 <rb_base64_encode@plt+0xfe0a20b0>
   14b28:	bgt	18c5288 <rb_base64_encode@plt+0x18b41a8>
   14b2c:	svchi	0x001bbcdc
   14b30:	vfnmsvs.f64	d30, d25, d17
   14b34:	ldr	lr, [sp, #88]	; 0x58
   14b38:	eor	ip, ip, lr
   14b3c:	ldr	lr, [sp, #128]	; 0x80
   14b40:	eor	ip, ip, lr
   14b44:	ldr	lr, [sp, #120]	; 0x78
   14b48:	eor	ip, ip, lr
   14b4c:	lsl	ip, ip, #1
   14b50:	ldr	lr, [sp, #108]	; 0x6c
   14b54:	ldr	r4, [sp, #88]	; 0x58
   14b58:	eor	lr, lr, r4
   14b5c:	ldr	r4, [sp, #128]	; 0x80
   14b60:	eor	lr, lr, r4
   14b64:	ldr	r4, [sp, #120]	; 0x78
   14b68:	eor	lr, lr, r4
   14b6c:	lsr	lr, lr, #31
   14b70:	orr	ip, ip, lr
   14b74:	str	ip, [sp, #120]	; 0x78
   14b78:	add	r0, r0, ip
   14b7c:	add	r0, r0, r3
   14b80:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14b84:	lsl	ip, ip, #5
   14b88:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14b8c:	lsr	lr, lr, #27
   14b90:	orr	ip, ip, lr
   14b94:	add	r0, r0, ip
   14b98:	ldr	ip, [fp, #-20]	; 0xffffffec
   14b9c:	add	r0, ip, r0
   14ba0:	str	r0, [fp, #-20]	; 0xffffffec
   14ba4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14ba8:	lsl	r0, r0, #30
   14bac:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14bb0:	lsr	ip, ip, #2
   14bb4:	orr	r0, r0, ip
   14bb8:	str	r0, [fp, #-28]	; 0xffffffe4
   14bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14bc0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14bc4:	eor	r0, r0, ip
   14bc8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14bcc:	eor	r0, r0, ip
   14bd0:	ldr	ip, [sp, #112]	; 0x70
   14bd4:	ldr	lr, [sp, #92]	; 0x5c
   14bd8:	eor	ip, ip, lr
   14bdc:	ldr	lr, [sp, #68]	; 0x44
   14be0:	eor	ip, ip, lr
   14be4:	ldr	lr, [sp, #124]	; 0x7c
   14be8:	eor	ip, ip, lr
   14bec:	lsl	ip, ip, #1
   14bf0:	ldr	lr, [sp, #112]	; 0x70
   14bf4:	ldr	r4, [sp, #92]	; 0x5c
   14bf8:	eor	lr, lr, r4
   14bfc:	ldr	r4, [sp, #68]	; 0x44
   14c00:	eor	lr, lr, r4
   14c04:	ldr	r4, [sp, #124]	; 0x7c
   14c08:	eor	lr, lr, r4
   14c0c:	lsr	lr, lr, #31
   14c10:	orr	ip, ip, lr
   14c14:	str	ip, [sp, #124]	; 0x7c
   14c18:	add	r0, r0, ip
   14c1c:	add	r0, r0, r3
   14c20:	ldr	ip, [fp, #-20]	; 0xffffffec
   14c24:	lsl	ip, ip, #5
   14c28:	ldr	lr, [fp, #-20]	; 0xffffffec
   14c2c:	lsr	lr, lr, #27
   14c30:	orr	ip, ip, lr
   14c34:	add	r0, r0, ip
   14c38:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14c3c:	add	r0, ip, r0
   14c40:	str	r0, [fp, #-36]	; 0xffffffdc
   14c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c48:	lsl	r0, r0, #30
   14c4c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14c50:	lsr	ip, ip, #2
   14c54:	orr	r0, r0, ip
   14c58:	str	r0, [fp, #-24]	; 0xffffffe8
   14c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c60:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14c64:	eor	r0, r0, ip
   14c68:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14c6c:	eor	r0, r0, ip
   14c70:	ldr	ip, [sp, #116]	; 0x74
   14c74:	ldr	lr, [sp, #96]	; 0x60
   14c78:	eor	ip, ip, lr
   14c7c:	ldr	lr, [sp, #72]	; 0x48
   14c80:	eor	ip, ip, lr
   14c84:	ldr	lr, [sp, #128]	; 0x80
   14c88:	eor	ip, ip, lr
   14c8c:	lsl	ip, ip, #1
   14c90:	ldr	lr, [sp, #116]	; 0x74
   14c94:	ldr	r4, [sp, #96]	; 0x60
   14c98:	eor	lr, lr, r4
   14c9c:	ldr	r4, [sp, #72]	; 0x48
   14ca0:	eor	lr, lr, r4
   14ca4:	ldr	r4, [sp, #128]	; 0x80
   14ca8:	eor	lr, lr, r4
   14cac:	lsr	lr, lr, #31
   14cb0:	orr	ip, ip, lr
   14cb4:	str	ip, [sp, #128]	; 0x80
   14cb8:	add	r0, r0, ip
   14cbc:	add	r0, r0, r3
   14cc0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14cc4:	lsl	ip, ip, #5
   14cc8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14ccc:	lsr	lr, lr, #27
   14cd0:	orr	ip, ip, lr
   14cd4:	add	r0, r0, ip
   14cd8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14cdc:	add	r0, ip, r0
   14ce0:	str	r0, [fp, #-32]	; 0xffffffe0
   14ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ce8:	lsl	r0, r0, #30
   14cec:	ldr	ip, [fp, #-20]	; 0xffffffec
   14cf0:	lsr	ip, ip, #2
   14cf4:	orr	r0, r0, ip
   14cf8:	str	r0, [fp, #-20]	; 0xffffffec
   14cfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d00:	ldr	ip, [fp, #-20]	; 0xffffffec
   14d04:	eor	r0, r0, ip
   14d08:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14d0c:	eor	r0, r0, ip
   14d10:	ldr	ip, [sp, #120]	; 0x78
   14d14:	ldr	lr, [sp, #100]	; 0x64
   14d18:	eor	ip, ip, lr
   14d1c:	ldr	lr, [sp, #76]	; 0x4c
   14d20:	eor	ip, ip, lr
   14d24:	ldr	lr, [sp, #68]	; 0x44
   14d28:	eor	ip, ip, lr
   14d2c:	lsl	ip, ip, #1
   14d30:	ldr	lr, [sp, #120]	; 0x78
   14d34:	ldr	r4, [sp, #100]	; 0x64
   14d38:	eor	lr, lr, r4
   14d3c:	ldr	r4, [sp, #76]	; 0x4c
   14d40:	eor	lr, lr, r4
   14d44:	ldr	r4, [sp, #68]	; 0x44
   14d48:	eor	lr, lr, r4
   14d4c:	lsr	lr, lr, #31
   14d50:	orr	ip, ip, lr
   14d54:	str	ip, [sp, #68]	; 0x44
   14d58:	add	r0, r0, ip
   14d5c:	add	r0, r0, r3
   14d60:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14d64:	lsl	ip, ip, #5
   14d68:	ldr	lr, [fp, #-32]	; 0xffffffe0
   14d6c:	lsr	lr, lr, #27
   14d70:	orr	ip, ip, lr
   14d74:	add	r0, r0, ip
   14d78:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14d7c:	add	r0, ip, r0
   14d80:	str	r0, [fp, #-28]	; 0xffffffe4
   14d84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d88:	lsl	r0, r0, #30
   14d8c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14d90:	lsr	ip, ip, #2
   14d94:	orr	r0, r0, ip
   14d98:	str	r0, [fp, #-36]	; 0xffffffdc
   14d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14da0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14da4:	eor	r0, r0, ip
   14da8:	ldr	ip, [fp, #-20]	; 0xffffffec
   14dac:	eor	r0, r0, ip
   14db0:	ldr	ip, [sp, #124]	; 0x7c
   14db4:	ldr	lr, [sp, #104]	; 0x68
   14db8:	eor	ip, ip, lr
   14dbc:	ldr	lr, [sp, #80]	; 0x50
   14dc0:	eor	ip, ip, lr
   14dc4:	ldr	lr, [sp, #72]	; 0x48
   14dc8:	eor	ip, ip, lr
   14dcc:	lsl	ip, ip, #1
   14dd0:	ldr	lr, [sp, #124]	; 0x7c
   14dd4:	ldr	r4, [sp, #104]	; 0x68
   14dd8:	eor	lr, lr, r4
   14ddc:	ldr	r4, [sp, #80]	; 0x50
   14de0:	eor	lr, lr, r4
   14de4:	ldr	r4, [sp, #72]	; 0x48
   14de8:	eor	lr, lr, r4
   14dec:	lsr	lr, lr, #31
   14df0:	orr	ip, ip, lr
   14df4:	str	ip, [sp, #72]	; 0x48
   14df8:	add	r0, r0, ip
   14dfc:	add	r0, r0, r3
   14e00:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14e04:	lsl	ip, ip, #5
   14e08:	ldr	lr, [fp, #-28]	; 0xffffffe4
   14e0c:	lsr	lr, lr, #27
   14e10:	orr	ip, ip, lr
   14e14:	add	r0, r0, ip
   14e18:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14e1c:	add	r0, ip, r0
   14e20:	str	r0, [fp, #-24]	; 0xffffffe8
   14e24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14e28:	lsl	r0, r0, #30
   14e2c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14e30:	lsr	ip, ip, #2
   14e34:	orr	r0, r0, ip
   14e38:	str	r0, [fp, #-32]	; 0xffffffe0
   14e3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14e40:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14e44:	eor	r0, r0, ip
   14e48:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14e4c:	eor	r0, r0, ip
   14e50:	ldr	ip, [sp, #128]	; 0x80
   14e54:	ldr	lr, [sp, #108]	; 0x6c
   14e58:	eor	ip, ip, lr
   14e5c:	ldr	lr, [sp, #84]	; 0x54
   14e60:	eor	ip, ip, lr
   14e64:	ldr	lr, [sp, #76]	; 0x4c
   14e68:	eor	ip, ip, lr
   14e6c:	lsl	ip, ip, #1
   14e70:	ldr	lr, [sp, #128]	; 0x80
   14e74:	ldr	r4, [sp, #108]	; 0x6c
   14e78:	eor	lr, lr, r4
   14e7c:	ldr	r4, [sp, #84]	; 0x54
   14e80:	eor	lr, lr, r4
   14e84:	ldr	r4, [sp, #76]	; 0x4c
   14e88:	eor	lr, lr, r4
   14e8c:	lsr	lr, lr, #31
   14e90:	orr	ip, ip, lr
   14e94:	str	ip, [sp, #76]	; 0x4c
   14e98:	add	r0, r0, ip
   14e9c:	add	r0, r0, r3
   14ea0:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14ea4:	lsl	ip, ip, #5
   14ea8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14eac:	lsr	lr, lr, #27
   14eb0:	orr	ip, ip, lr
   14eb4:	add	r0, r0, ip
   14eb8:	ldr	ip, [fp, #-20]	; 0xffffffec
   14ebc:	add	r0, ip, r0
   14ec0:	str	r0, [fp, #-20]	; 0xffffffec
   14ec4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14ec8:	lsl	r0, r0, #30
   14ecc:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14ed0:	lsr	ip, ip, #2
   14ed4:	orr	r0, r0, ip
   14ed8:	str	r0, [fp, #-28]	; 0xffffffe4
   14edc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ee0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14ee4:	eor	r0, r0, ip
   14ee8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14eec:	eor	r0, r0, ip
   14ef0:	ldr	ip, [sp, #68]	; 0x44
   14ef4:	ldr	lr, [sp, #112]	; 0x70
   14ef8:	eor	ip, ip, lr
   14efc:	ldr	lr, [sp, #88]	; 0x58
   14f00:	eor	ip, ip, lr
   14f04:	ldr	lr, [sp, #80]	; 0x50
   14f08:	eor	ip, ip, lr
   14f0c:	lsl	ip, ip, #1
   14f10:	ldr	lr, [sp, #68]	; 0x44
   14f14:	ldr	r4, [sp, #112]	; 0x70
   14f18:	eor	lr, lr, r4
   14f1c:	ldr	r4, [sp, #88]	; 0x58
   14f20:	eor	lr, lr, r4
   14f24:	ldr	r4, [sp, #80]	; 0x50
   14f28:	eor	lr, lr, r4
   14f2c:	lsr	lr, lr, #31
   14f30:	orr	ip, ip, lr
   14f34:	str	ip, [sp, #80]	; 0x50
   14f38:	add	r0, r0, ip
   14f3c:	add	r0, r0, r3
   14f40:	ldr	ip, [fp, #-20]	; 0xffffffec
   14f44:	lsl	ip, ip, #5
   14f48:	ldr	lr, [fp, #-20]	; 0xffffffec
   14f4c:	lsr	lr, lr, #27
   14f50:	orr	ip, ip, lr
   14f54:	add	r0, r0, ip
   14f58:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14f5c:	add	r0, ip, r0
   14f60:	str	r0, [fp, #-36]	; 0xffffffdc
   14f64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f68:	lsl	r0, r0, #30
   14f6c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14f70:	lsr	ip, ip, #2
   14f74:	orr	r0, r0, ip
   14f78:	str	r0, [fp, #-24]	; 0xffffffe8
   14f7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14f80:	ldr	ip, [fp, #-24]	; 0xffffffe8
   14f84:	eor	r0, r0, ip
   14f88:	ldr	ip, [fp, #-28]	; 0xffffffe4
   14f8c:	eor	r0, r0, ip
   14f90:	ldr	ip, [sp, #72]	; 0x48
   14f94:	ldr	lr, [sp, #116]	; 0x74
   14f98:	eor	ip, ip, lr
   14f9c:	ldr	lr, [sp, #92]	; 0x5c
   14fa0:	eor	ip, ip, lr
   14fa4:	ldr	lr, [sp, #84]	; 0x54
   14fa8:	eor	ip, ip, lr
   14fac:	lsl	ip, ip, #1
   14fb0:	ldr	lr, [sp, #72]	; 0x48
   14fb4:	ldr	r4, [sp, #116]	; 0x74
   14fb8:	eor	lr, lr, r4
   14fbc:	ldr	r4, [sp, #92]	; 0x5c
   14fc0:	eor	lr, lr, r4
   14fc4:	ldr	r4, [sp, #84]	; 0x54
   14fc8:	eor	lr, lr, r4
   14fcc:	lsr	lr, lr, #31
   14fd0:	orr	ip, ip, lr
   14fd4:	str	ip, [sp, #84]	; 0x54
   14fd8:	add	r0, r0, ip
   14fdc:	add	r0, r0, r3
   14fe0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14fe4:	lsl	ip, ip, #5
   14fe8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14fec:	lsr	lr, lr, #27
   14ff0:	orr	ip, ip, lr
   14ff4:	add	r0, r0, ip
   14ff8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   14ffc:	add	r0, ip, r0
   15000:	str	r0, [fp, #-32]	; 0xffffffe0
   15004:	ldr	r0, [fp, #-20]	; 0xffffffec
   15008:	lsl	r0, r0, #30
   1500c:	ldr	ip, [fp, #-20]	; 0xffffffec
   15010:	lsr	ip, ip, #2
   15014:	orr	r0, r0, ip
   15018:	str	r0, [fp, #-20]	; 0xffffffec
   1501c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15020:	ldr	ip, [fp, #-20]	; 0xffffffec
   15024:	eor	r0, r0, ip
   15028:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1502c:	eor	r0, r0, ip
   15030:	ldr	ip, [sp, #76]	; 0x4c
   15034:	ldr	lr, [sp, #120]	; 0x78
   15038:	eor	ip, ip, lr
   1503c:	ldr	lr, [sp, #96]	; 0x60
   15040:	eor	ip, ip, lr
   15044:	ldr	lr, [sp, #88]	; 0x58
   15048:	eor	ip, ip, lr
   1504c:	lsl	ip, ip, #1
   15050:	ldr	lr, [sp, #76]	; 0x4c
   15054:	ldr	r4, [sp, #120]	; 0x78
   15058:	eor	lr, lr, r4
   1505c:	ldr	r4, [sp, #96]	; 0x60
   15060:	eor	lr, lr, r4
   15064:	ldr	r4, [sp, #88]	; 0x58
   15068:	eor	lr, lr, r4
   1506c:	lsr	lr, lr, #31
   15070:	orr	ip, ip, lr
   15074:	str	ip, [sp, #88]	; 0x58
   15078:	add	r0, r0, ip
   1507c:	add	r0, r0, r3
   15080:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15084:	lsl	ip, ip, #5
   15088:	ldr	lr, [fp, #-32]	; 0xffffffe0
   1508c:	lsr	lr, lr, #27
   15090:	orr	ip, ip, lr
   15094:	add	r0, r0, ip
   15098:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1509c:	add	r0, ip, r0
   150a0:	str	r0, [fp, #-28]	; 0xffffffe4
   150a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   150a8:	lsl	r0, r0, #30
   150ac:	ldr	ip, [fp, #-36]	; 0xffffffdc
   150b0:	lsr	ip, ip, #2
   150b4:	orr	r0, r0, ip
   150b8:	str	r0, [fp, #-36]	; 0xffffffdc
   150bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   150c0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   150c4:	eor	r0, r0, ip
   150c8:	ldr	ip, [fp, #-20]	; 0xffffffec
   150cc:	eor	r0, r0, ip
   150d0:	ldr	ip, [sp, #80]	; 0x50
   150d4:	ldr	lr, [sp, #124]	; 0x7c
   150d8:	eor	ip, ip, lr
   150dc:	ldr	lr, [sp, #100]	; 0x64
   150e0:	eor	ip, ip, lr
   150e4:	ldr	lr, [sp, #92]	; 0x5c
   150e8:	eor	ip, ip, lr
   150ec:	lsl	ip, ip, #1
   150f0:	ldr	lr, [sp, #80]	; 0x50
   150f4:	ldr	r4, [sp, #124]	; 0x7c
   150f8:	eor	lr, lr, r4
   150fc:	ldr	r4, [sp, #100]	; 0x64
   15100:	eor	lr, lr, r4
   15104:	ldr	r4, [sp, #92]	; 0x5c
   15108:	eor	lr, lr, r4
   1510c:	lsr	lr, lr, #31
   15110:	orr	ip, ip, lr
   15114:	str	ip, [sp, #92]	; 0x5c
   15118:	add	r0, r0, ip
   1511c:	add	r0, r0, r3
   15120:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15124:	lsl	ip, ip, #5
   15128:	ldr	lr, [fp, #-28]	; 0xffffffe4
   1512c:	lsr	lr, lr, #27
   15130:	orr	ip, ip, lr
   15134:	add	r0, r0, ip
   15138:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1513c:	add	r0, ip, r0
   15140:	str	r0, [fp, #-24]	; 0xffffffe8
   15144:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15148:	lsl	r0, r0, #30
   1514c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15150:	lsr	ip, ip, #2
   15154:	orr	r0, r0, ip
   15158:	str	r0, [fp, #-32]	; 0xffffffe0
   1515c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15160:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15164:	eor	r0, r0, ip
   15168:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1516c:	eor	r0, r0, ip
   15170:	ldr	ip, [sp, #84]	; 0x54
   15174:	ldr	lr, [sp, #128]	; 0x80
   15178:	eor	ip, ip, lr
   1517c:	ldr	lr, [sp, #104]	; 0x68
   15180:	eor	ip, ip, lr
   15184:	ldr	lr, [sp, #96]	; 0x60
   15188:	eor	ip, ip, lr
   1518c:	lsl	ip, ip, #1
   15190:	ldr	lr, [sp, #84]	; 0x54
   15194:	ldr	r4, [sp, #128]	; 0x80
   15198:	eor	lr, lr, r4
   1519c:	ldr	r4, [sp, #104]	; 0x68
   151a0:	eor	lr, lr, r4
   151a4:	ldr	r4, [sp, #96]	; 0x60
   151a8:	eor	lr, lr, r4
   151ac:	lsr	lr, lr, #31
   151b0:	orr	ip, ip, lr
   151b4:	str	ip, [sp, #96]	; 0x60
   151b8:	add	r0, r0, ip
   151bc:	add	r0, r0, r3
   151c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151c4:	lsl	r3, r3, #5
   151c8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   151cc:	lsr	ip, ip, #27
   151d0:	orr	r3, r3, ip
   151d4:	add	r0, r0, r3
   151d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   151dc:	add	r0, r3, r0
   151e0:	str	r0, [fp, #-20]	; 0xffffffec
   151e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   151e8:	lsl	r0, r0, #30
   151ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   151f0:	lsr	r3, r3, #2
   151f4:	orr	r0, r0, r3
   151f8:	str	r0, [fp, #-28]	; 0xffffffe4
   151fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15200:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15204:	orr	r0, r0, r3
   15208:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1520c:	and	r0, r0, r3
   15210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15214:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15218:	and	r3, r3, ip
   1521c:	orr	r0, r0, r3
   15220:	ldr	r3, [sp, #88]	; 0x58
   15224:	ldr	ip, [sp, #68]	; 0x44
   15228:	eor	r3, r3, ip
   1522c:	ldr	ip, [sp, #108]	; 0x6c
   15230:	eor	r3, r3, ip
   15234:	ldr	ip, [sp, #100]	; 0x64
   15238:	eor	r3, r3, ip
   1523c:	lsl	r3, r3, #1
   15240:	ldr	ip, [sp, #88]	; 0x58
   15244:	ldr	lr, [sp, #68]	; 0x44
   15248:	eor	ip, ip, lr
   1524c:	ldr	lr, [sp, #108]	; 0x6c
   15250:	eor	ip, ip, lr
   15254:	ldr	lr, [sp, #100]	; 0x64
   15258:	eor	ip, ip, lr
   1525c:	lsr	ip, ip, #31
   15260:	orr	r3, r3, ip
   15264:	str	r3, [sp, #100]	; 0x64
   15268:	add	r0, r0, r3
   1526c:	add	r0, r0, r2
   15270:	ldr	r3, [fp, #-20]	; 0xffffffec
   15274:	lsl	r3, r3, #5
   15278:	ldr	ip, [fp, #-20]	; 0xffffffec
   1527c:	lsr	ip, ip, #27
   15280:	orr	r3, r3, ip
   15284:	add	r0, r0, r3
   15288:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1528c:	add	r0, r3, r0
   15290:	str	r0, [fp, #-36]	; 0xffffffdc
   15294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15298:	lsl	r0, r0, #30
   1529c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152a0:	lsr	r3, r3, #2
   152a4:	orr	r0, r0, r3
   152a8:	str	r0, [fp, #-24]	; 0xffffffe8
   152ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   152b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152b4:	orr	r0, r0, r3
   152b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   152bc:	and	r0, r0, r3
   152c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   152c4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   152c8:	and	r3, r3, ip
   152cc:	orr	r0, r0, r3
   152d0:	ldr	r3, [sp, #92]	; 0x5c
   152d4:	ldr	ip, [sp, #72]	; 0x48
   152d8:	eor	r3, r3, ip
   152dc:	ldr	ip, [sp, #112]	; 0x70
   152e0:	eor	r3, r3, ip
   152e4:	ldr	ip, [sp, #104]	; 0x68
   152e8:	eor	r3, r3, ip
   152ec:	lsl	r3, r3, #1
   152f0:	ldr	ip, [sp, #92]	; 0x5c
   152f4:	ldr	lr, [sp, #72]	; 0x48
   152f8:	eor	ip, ip, lr
   152fc:	ldr	lr, [sp, #112]	; 0x70
   15300:	eor	ip, ip, lr
   15304:	ldr	lr, [sp, #104]	; 0x68
   15308:	eor	ip, ip, lr
   1530c:	lsr	ip, ip, #31
   15310:	orr	r3, r3, ip
   15314:	str	r3, [sp, #104]	; 0x68
   15318:	add	r0, r0, r3
   1531c:	add	r0, r0, r2
   15320:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15324:	lsl	r3, r3, #5
   15328:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1532c:	lsr	ip, ip, #27
   15330:	orr	r3, r3, ip
   15334:	add	r0, r0, r3
   15338:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1533c:	add	r0, r3, r0
   15340:	str	r0, [fp, #-32]	; 0xffffffe0
   15344:	ldr	r0, [fp, #-20]	; 0xffffffec
   15348:	lsl	r0, r0, #30
   1534c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15350:	lsr	r3, r3, #2
   15354:	orr	r0, r0, r3
   15358:	str	r0, [fp, #-20]	; 0xffffffec
   1535c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15360:	ldr	r3, [fp, #-20]	; 0xffffffec
   15364:	orr	r0, r0, r3
   15368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1536c:	and	r0, r0, r3
   15370:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15374:	ldr	ip, [fp, #-20]	; 0xffffffec
   15378:	and	r3, r3, ip
   1537c:	orr	r0, r0, r3
   15380:	ldr	r3, [sp, #96]	; 0x60
   15384:	ldr	ip, [sp, #76]	; 0x4c
   15388:	eor	r3, r3, ip
   1538c:	ldr	ip, [sp, #116]	; 0x74
   15390:	eor	r3, r3, ip
   15394:	ldr	ip, [sp, #108]	; 0x6c
   15398:	eor	r3, r3, ip
   1539c:	lsl	r3, r3, #1
   153a0:	ldr	ip, [sp, #96]	; 0x60
   153a4:	ldr	lr, [sp, #76]	; 0x4c
   153a8:	eor	ip, ip, lr
   153ac:	ldr	lr, [sp, #116]	; 0x74
   153b0:	eor	ip, ip, lr
   153b4:	ldr	lr, [sp, #108]	; 0x6c
   153b8:	eor	ip, ip, lr
   153bc:	lsr	ip, ip, #31
   153c0:	orr	r3, r3, ip
   153c4:	str	r3, [sp, #108]	; 0x6c
   153c8:	add	r0, r0, r3
   153cc:	add	r0, r0, r2
   153d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   153d4:	lsl	r3, r3, #5
   153d8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   153dc:	lsr	ip, ip, #27
   153e0:	orr	r3, r3, ip
   153e4:	add	r0, r0, r3
   153e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153ec:	add	r0, r3, r0
   153f0:	str	r0, [fp, #-28]	; 0xffffffe4
   153f4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153f8:	lsl	r0, r0, #30
   153fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15400:	lsr	r3, r3, #2
   15404:	orr	r0, r0, r3
   15408:	str	r0, [fp, #-36]	; 0xffffffdc
   1540c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15414:	orr	r0, r0, r3
   15418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1541c:	and	r0, r0, r3
   15420:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15424:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15428:	and	r3, r3, ip
   1542c:	orr	r0, r0, r3
   15430:	ldr	r3, [sp, #100]	; 0x64
   15434:	ldr	ip, [sp, #80]	; 0x50
   15438:	eor	r3, r3, ip
   1543c:	ldr	ip, [sp, #120]	; 0x78
   15440:	eor	r3, r3, ip
   15444:	ldr	ip, [sp, #112]	; 0x70
   15448:	eor	r3, r3, ip
   1544c:	lsl	r3, r3, #1
   15450:	ldr	ip, [sp, #100]	; 0x64
   15454:	ldr	lr, [sp, #80]	; 0x50
   15458:	eor	ip, ip, lr
   1545c:	ldr	lr, [sp, #120]	; 0x78
   15460:	eor	ip, ip, lr
   15464:	ldr	lr, [sp, #112]	; 0x70
   15468:	eor	ip, ip, lr
   1546c:	lsr	ip, ip, #31
   15470:	orr	r3, r3, ip
   15474:	str	r3, [sp, #112]	; 0x70
   15478:	add	r0, r0, r3
   1547c:	add	r0, r0, r2
   15480:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15484:	lsl	r3, r3, #5
   15488:	ldr	ip, [fp, #-28]	; 0xffffffe4
   1548c:	lsr	ip, ip, #27
   15490:	orr	r3, r3, ip
   15494:	add	r0, r0, r3
   15498:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1549c:	add	r0, r3, r0
   154a0:	str	r0, [fp, #-24]	; 0xffffffe8
   154a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154a8:	lsl	r0, r0, #30
   154ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154b0:	lsr	r3, r3, #2
   154b4:	orr	r0, r0, r3
   154b8:	str	r0, [fp, #-32]	; 0xffffffe0
   154bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   154c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   154c4:	orr	r0, r0, r3
   154c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   154cc:	and	r0, r0, r3
   154d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   154d4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   154d8:	and	r3, r3, ip
   154dc:	orr	r0, r0, r3
   154e0:	ldr	r3, [sp, #104]	; 0x68
   154e4:	ldr	ip, [sp, #84]	; 0x54
   154e8:	eor	r3, r3, ip
   154ec:	ldr	ip, [sp, #124]	; 0x7c
   154f0:	eor	r3, r3, ip
   154f4:	ldr	ip, [sp, #116]	; 0x74
   154f8:	eor	r3, r3, ip
   154fc:	lsl	r3, r3, #1
   15500:	ldr	ip, [sp, #104]	; 0x68
   15504:	ldr	lr, [sp, #84]	; 0x54
   15508:	eor	ip, ip, lr
   1550c:	ldr	lr, [sp, #124]	; 0x7c
   15510:	eor	ip, ip, lr
   15514:	ldr	lr, [sp, #116]	; 0x74
   15518:	eor	ip, ip, lr
   1551c:	lsr	ip, ip, #31
   15520:	orr	r3, r3, ip
   15524:	str	r3, [sp, #116]	; 0x74
   15528:	add	r0, r0, r3
   1552c:	add	r0, r0, r2
   15530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15534:	lsl	r3, r3, #5
   15538:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1553c:	lsr	ip, ip, #27
   15540:	orr	r3, r3, ip
   15544:	add	r0, r0, r3
   15548:	ldr	r3, [fp, #-20]	; 0xffffffec
   1554c:	add	r0, r3, r0
   15550:	str	r0, [fp, #-20]	; 0xffffffec
   15554:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15558:	lsl	r0, r0, #30
   1555c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15560:	lsr	r3, r3, #2
   15564:	orr	r0, r0, r3
   15568:	str	r0, [fp, #-28]	; 0xffffffe4
   1556c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15574:	orr	r0, r0, r3
   15578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1557c:	and	r0, r0, r3
   15580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15584:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15588:	and	r3, r3, ip
   1558c:	orr	r0, r0, r3
   15590:	ldr	r3, [sp, #108]	; 0x6c
   15594:	ldr	ip, [sp, #88]	; 0x58
   15598:	eor	r3, r3, ip
   1559c:	ldr	ip, [sp, #128]	; 0x80
   155a0:	eor	r3, r3, ip
   155a4:	ldr	ip, [sp, #120]	; 0x78
   155a8:	eor	r3, r3, ip
   155ac:	lsl	r3, r3, #1
   155b0:	ldr	ip, [sp, #108]	; 0x6c
   155b4:	ldr	lr, [sp, #88]	; 0x58
   155b8:	eor	ip, ip, lr
   155bc:	ldr	lr, [sp, #128]	; 0x80
   155c0:	eor	ip, ip, lr
   155c4:	ldr	lr, [sp, #120]	; 0x78
   155c8:	eor	ip, ip, lr
   155cc:	lsr	ip, ip, #31
   155d0:	orr	r3, r3, ip
   155d4:	str	r3, [sp, #120]	; 0x78
   155d8:	add	r0, r0, r3
   155dc:	add	r0, r0, r2
   155e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   155e4:	lsl	r3, r3, #5
   155e8:	ldr	ip, [fp, #-20]	; 0xffffffec
   155ec:	lsr	ip, ip, #27
   155f0:	orr	r3, r3, ip
   155f4:	add	r0, r0, r3
   155f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155fc:	add	r0, r3, r0
   15600:	str	r0, [fp, #-36]	; 0xffffffdc
   15604:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15608:	lsl	r0, r0, #30
   1560c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15610:	lsr	r3, r3, #2
   15614:	orr	r0, r0, r3
   15618:	str	r0, [fp, #-24]	; 0xffffffe8
   1561c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15624:	orr	r0, r0, r3
   15628:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1562c:	and	r0, r0, r3
   15630:	ldr	r3, [fp, #-20]	; 0xffffffec
   15634:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15638:	and	r3, r3, ip
   1563c:	orr	r0, r0, r3
   15640:	ldr	r3, [sp, #112]	; 0x70
   15644:	ldr	ip, [sp, #92]	; 0x5c
   15648:	eor	r3, r3, ip
   1564c:	ldr	ip, [sp, #68]	; 0x44
   15650:	eor	r3, r3, ip
   15654:	ldr	ip, [sp, #124]	; 0x7c
   15658:	eor	r3, r3, ip
   1565c:	lsl	r3, r3, #1
   15660:	ldr	ip, [sp, #112]	; 0x70
   15664:	ldr	lr, [sp, #92]	; 0x5c
   15668:	eor	ip, ip, lr
   1566c:	ldr	lr, [sp, #68]	; 0x44
   15670:	eor	ip, ip, lr
   15674:	ldr	lr, [sp, #124]	; 0x7c
   15678:	eor	ip, ip, lr
   1567c:	lsr	ip, ip, #31
   15680:	orr	r3, r3, ip
   15684:	str	r3, [sp, #124]	; 0x7c
   15688:	add	r0, r0, r3
   1568c:	add	r0, r0, r2
   15690:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15694:	lsl	r3, r3, #5
   15698:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1569c:	lsr	ip, ip, #27
   156a0:	orr	r3, r3, ip
   156a4:	add	r0, r0, r3
   156a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   156ac:	add	r0, r3, r0
   156b0:	str	r0, [fp, #-32]	; 0xffffffe0
   156b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   156b8:	lsl	r0, r0, #30
   156bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   156c0:	lsr	r3, r3, #2
   156c4:	orr	r0, r0, r3
   156c8:	str	r0, [fp, #-20]	; 0xffffffec
   156cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   156d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   156d4:	orr	r0, r0, r3
   156d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   156dc:	and	r0, r0, r3
   156e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   156e4:	ldr	ip, [fp, #-20]	; 0xffffffec
   156e8:	and	r3, r3, ip
   156ec:	orr	r0, r0, r3
   156f0:	ldr	r3, [sp, #116]	; 0x74
   156f4:	ldr	ip, [sp, #96]	; 0x60
   156f8:	eor	r3, r3, ip
   156fc:	ldr	ip, [sp, #72]	; 0x48
   15700:	eor	r3, r3, ip
   15704:	ldr	ip, [sp, #128]	; 0x80
   15708:	eor	r3, r3, ip
   1570c:	lsl	r3, r3, #1
   15710:	ldr	ip, [sp, #116]	; 0x74
   15714:	ldr	lr, [sp, #96]	; 0x60
   15718:	eor	ip, ip, lr
   1571c:	ldr	lr, [sp, #72]	; 0x48
   15720:	eor	ip, ip, lr
   15724:	ldr	lr, [sp, #128]	; 0x80
   15728:	eor	ip, ip, lr
   1572c:	lsr	ip, ip, #31
   15730:	orr	r3, r3, ip
   15734:	str	r3, [sp, #128]	; 0x80
   15738:	add	r0, r0, r3
   1573c:	add	r0, r0, r2
   15740:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15744:	lsl	r3, r3, #5
   15748:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1574c:	lsr	ip, ip, #27
   15750:	orr	r3, r3, ip
   15754:	add	r0, r0, r3
   15758:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1575c:	add	r0, r3, r0
   15760:	str	r0, [fp, #-28]	; 0xffffffe4
   15764:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15768:	lsl	r0, r0, #30
   1576c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15770:	lsr	r3, r3, #2
   15774:	orr	r0, r0, r3
   15778:	str	r0, [fp, #-36]	; 0xffffffdc
   1577c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15784:	orr	r0, r0, r3
   15788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1578c:	and	r0, r0, r3
   15790:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15794:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15798:	and	r3, r3, ip
   1579c:	orr	r0, r0, r3
   157a0:	ldr	r3, [sp, #120]	; 0x78
   157a4:	ldr	ip, [sp, #100]	; 0x64
   157a8:	eor	r3, r3, ip
   157ac:	ldr	ip, [sp, #76]	; 0x4c
   157b0:	eor	r3, r3, ip
   157b4:	ldr	ip, [sp, #68]	; 0x44
   157b8:	eor	r3, r3, ip
   157bc:	lsl	r3, r3, #1
   157c0:	ldr	ip, [sp, #120]	; 0x78
   157c4:	ldr	lr, [sp, #100]	; 0x64
   157c8:	eor	ip, ip, lr
   157cc:	ldr	lr, [sp, #76]	; 0x4c
   157d0:	eor	ip, ip, lr
   157d4:	ldr	lr, [sp, #68]	; 0x44
   157d8:	eor	ip, ip, lr
   157dc:	lsr	ip, ip, #31
   157e0:	orr	r3, r3, ip
   157e4:	str	r3, [sp, #68]	; 0x44
   157e8:	add	r0, r0, r3
   157ec:	add	r0, r0, r2
   157f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   157f4:	lsl	r3, r3, #5
   157f8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   157fc:	lsr	ip, ip, #27
   15800:	orr	r3, r3, ip
   15804:	add	r0, r0, r3
   15808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1580c:	add	r0, r3, r0
   15810:	str	r0, [fp, #-24]	; 0xffffffe8
   15814:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15818:	lsl	r0, r0, #30
   1581c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15820:	lsr	r3, r3, #2
   15824:	orr	r0, r0, r3
   15828:	str	r0, [fp, #-32]	; 0xffffffe0
   1582c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15834:	orr	r0, r0, r3
   15838:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1583c:	and	r0, r0, r3
   15840:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15844:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15848:	and	r3, r3, ip
   1584c:	orr	r0, r0, r3
   15850:	ldr	r3, [sp, #124]	; 0x7c
   15854:	ldr	ip, [sp, #104]	; 0x68
   15858:	eor	r3, r3, ip
   1585c:	ldr	ip, [sp, #80]	; 0x50
   15860:	eor	r3, r3, ip
   15864:	ldr	ip, [sp, #72]	; 0x48
   15868:	eor	r3, r3, ip
   1586c:	lsl	r3, r3, #1
   15870:	ldr	ip, [sp, #124]	; 0x7c
   15874:	ldr	lr, [sp, #104]	; 0x68
   15878:	eor	ip, ip, lr
   1587c:	ldr	lr, [sp, #80]	; 0x50
   15880:	eor	ip, ip, lr
   15884:	ldr	lr, [sp, #72]	; 0x48
   15888:	eor	ip, ip, lr
   1588c:	lsr	ip, ip, #31
   15890:	orr	r3, r3, ip
   15894:	str	r3, [sp, #72]	; 0x48
   15898:	add	r0, r0, r3
   1589c:	add	r0, r0, r2
   158a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158a4:	lsl	r3, r3, #5
   158a8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   158ac:	lsr	ip, ip, #27
   158b0:	orr	r3, r3, ip
   158b4:	add	r0, r0, r3
   158b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158bc:	add	r0, r3, r0
   158c0:	str	r0, [fp, #-20]	; 0xffffffec
   158c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   158c8:	lsl	r0, r0, #30
   158cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   158d0:	lsr	r3, r3, #2
   158d4:	orr	r0, r0, r3
   158d8:	str	r0, [fp, #-28]	; 0xffffffe4
   158dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   158e4:	orr	r0, r0, r3
   158e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   158ec:	and	r0, r0, r3
   158f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158f4:	ldr	ip, [fp, #-28]	; 0xffffffe4
   158f8:	and	r3, r3, ip
   158fc:	orr	r0, r0, r3
   15900:	ldr	r3, [sp, #128]	; 0x80
   15904:	ldr	ip, [sp, #108]	; 0x6c
   15908:	eor	r3, r3, ip
   1590c:	ldr	ip, [sp, #84]	; 0x54
   15910:	eor	r3, r3, ip
   15914:	ldr	ip, [sp, #76]	; 0x4c
   15918:	eor	r3, r3, ip
   1591c:	lsl	r3, r3, #1
   15920:	ldr	ip, [sp, #128]	; 0x80
   15924:	ldr	lr, [sp, #108]	; 0x6c
   15928:	eor	ip, ip, lr
   1592c:	ldr	lr, [sp, #84]	; 0x54
   15930:	eor	ip, ip, lr
   15934:	ldr	lr, [sp, #76]	; 0x4c
   15938:	eor	ip, ip, lr
   1593c:	lsr	ip, ip, #31
   15940:	orr	r3, r3, ip
   15944:	str	r3, [sp, #76]	; 0x4c
   15948:	add	r0, r0, r3
   1594c:	add	r0, r0, r2
   15950:	ldr	r3, [fp, #-20]	; 0xffffffec
   15954:	lsl	r3, r3, #5
   15958:	ldr	ip, [fp, #-20]	; 0xffffffec
   1595c:	lsr	ip, ip, #27
   15960:	orr	r3, r3, ip
   15964:	add	r0, r0, r3
   15968:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1596c:	add	r0, r3, r0
   15970:	str	r0, [fp, #-36]	; 0xffffffdc
   15974:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15978:	lsl	r0, r0, #30
   1597c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15980:	lsr	r3, r3, #2
   15984:	orr	r0, r0, r3
   15988:	str	r0, [fp, #-24]	; 0xffffffe8
   1598c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15994:	orr	r0, r0, r3
   15998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1599c:	and	r0, r0, r3
   159a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   159a4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   159a8:	and	r3, r3, ip
   159ac:	orr	r0, r0, r3
   159b0:	ldr	r3, [sp, #68]	; 0x44
   159b4:	ldr	ip, [sp, #112]	; 0x70
   159b8:	eor	r3, r3, ip
   159bc:	ldr	ip, [sp, #88]	; 0x58
   159c0:	eor	r3, r3, ip
   159c4:	ldr	ip, [sp, #80]	; 0x50
   159c8:	eor	r3, r3, ip
   159cc:	lsl	r3, r3, #1
   159d0:	ldr	ip, [sp, #68]	; 0x44
   159d4:	ldr	lr, [sp, #112]	; 0x70
   159d8:	eor	ip, ip, lr
   159dc:	ldr	lr, [sp, #88]	; 0x58
   159e0:	eor	ip, ip, lr
   159e4:	ldr	lr, [sp, #80]	; 0x50
   159e8:	eor	ip, ip, lr
   159ec:	lsr	ip, ip, #31
   159f0:	orr	r3, r3, ip
   159f4:	str	r3, [sp, #80]	; 0x50
   159f8:	add	r0, r0, r3
   159fc:	add	r0, r0, r2
   15a00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15a04:	lsl	r3, r3, #5
   15a08:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15a0c:	lsr	ip, ip, #27
   15a10:	orr	r3, r3, ip
   15a14:	add	r0, r0, r3
   15a18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15a1c:	add	r0, r3, r0
   15a20:	str	r0, [fp, #-32]	; 0xffffffe0
   15a24:	ldr	r0, [fp, #-20]	; 0xffffffec
   15a28:	lsl	r0, r0, #30
   15a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a30:	lsr	r3, r3, #2
   15a34:	orr	r0, r0, r3
   15a38:	str	r0, [fp, #-20]	; 0xffffffec
   15a3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a44:	orr	r0, r0, r3
   15a48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15a4c:	and	r0, r0, r3
   15a50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15a54:	ldr	ip, [fp, #-20]	; 0xffffffec
   15a58:	and	r3, r3, ip
   15a5c:	orr	r0, r0, r3
   15a60:	ldr	r3, [sp, #72]	; 0x48
   15a64:	ldr	ip, [sp, #116]	; 0x74
   15a68:	eor	r3, r3, ip
   15a6c:	ldr	ip, [sp, #92]	; 0x5c
   15a70:	eor	r3, r3, ip
   15a74:	ldr	ip, [sp, #84]	; 0x54
   15a78:	eor	r3, r3, ip
   15a7c:	lsl	r3, r3, #1
   15a80:	ldr	ip, [sp, #72]	; 0x48
   15a84:	ldr	lr, [sp, #116]	; 0x74
   15a88:	eor	ip, ip, lr
   15a8c:	ldr	lr, [sp, #92]	; 0x5c
   15a90:	eor	ip, ip, lr
   15a94:	ldr	lr, [sp, #84]	; 0x54
   15a98:	eor	ip, ip, lr
   15a9c:	lsr	ip, ip, #31
   15aa0:	orr	r3, r3, ip
   15aa4:	str	r3, [sp, #84]	; 0x54
   15aa8:	add	r0, r0, r3
   15aac:	add	r0, r0, r2
   15ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ab4:	lsl	r3, r3, #5
   15ab8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15abc:	lsr	ip, ip, #27
   15ac0:	orr	r3, r3, ip
   15ac4:	add	r0, r0, r3
   15ac8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15acc:	add	r0, r3, r0
   15ad0:	str	r0, [fp, #-28]	; 0xffffffe4
   15ad4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15ad8:	lsl	r0, r0, #30
   15adc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ae0:	lsr	r3, r3, #2
   15ae4:	orr	r0, r0, r3
   15ae8:	str	r0, [fp, #-36]	; 0xffffffdc
   15aec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15af0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15af4:	orr	r0, r0, r3
   15af8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15afc:	and	r0, r0, r3
   15b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b04:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15b08:	and	r3, r3, ip
   15b0c:	orr	r0, r0, r3
   15b10:	ldr	r3, [sp, #76]	; 0x4c
   15b14:	ldr	ip, [sp, #120]	; 0x78
   15b18:	eor	r3, r3, ip
   15b1c:	ldr	ip, [sp, #96]	; 0x60
   15b20:	eor	r3, r3, ip
   15b24:	ldr	ip, [sp, #88]	; 0x58
   15b28:	eor	r3, r3, ip
   15b2c:	lsl	r3, r3, #1
   15b30:	ldr	ip, [sp, #76]	; 0x4c
   15b34:	ldr	lr, [sp, #120]	; 0x78
   15b38:	eor	ip, ip, lr
   15b3c:	ldr	lr, [sp, #96]	; 0x60
   15b40:	eor	ip, ip, lr
   15b44:	ldr	lr, [sp, #88]	; 0x58
   15b48:	eor	ip, ip, lr
   15b4c:	lsr	ip, ip, #31
   15b50:	orr	r3, r3, ip
   15b54:	str	r3, [sp, #88]	; 0x58
   15b58:	add	r0, r0, r3
   15b5c:	add	r0, r0, r2
   15b60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b64:	lsl	r3, r3, #5
   15b68:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15b6c:	lsr	ip, ip, #27
   15b70:	orr	r3, r3, ip
   15b74:	add	r0, r0, r3
   15b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15b7c:	add	r0, r3, r0
   15b80:	str	r0, [fp, #-24]	; 0xffffffe8
   15b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b88:	lsl	r0, r0, #30
   15b8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b90:	lsr	r3, r3, #2
   15b94:	orr	r0, r0, r3
   15b98:	str	r0, [fp, #-32]	; 0xffffffe0
   15b9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15ba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ba4:	orr	r0, r0, r3
   15ba8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15bac:	and	r0, r0, r3
   15bb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15bb4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15bb8:	and	r3, r3, ip
   15bbc:	orr	r0, r0, r3
   15bc0:	ldr	r3, [sp, #80]	; 0x50
   15bc4:	ldr	ip, [sp, #124]	; 0x7c
   15bc8:	eor	r3, r3, ip
   15bcc:	ldr	ip, [sp, #100]	; 0x64
   15bd0:	eor	r3, r3, ip
   15bd4:	ldr	ip, [sp, #92]	; 0x5c
   15bd8:	eor	r3, r3, ip
   15bdc:	lsl	r3, r3, #1
   15be0:	ldr	ip, [sp, #80]	; 0x50
   15be4:	ldr	lr, [sp, #124]	; 0x7c
   15be8:	eor	ip, ip, lr
   15bec:	ldr	lr, [sp, #100]	; 0x64
   15bf0:	eor	ip, ip, lr
   15bf4:	ldr	lr, [sp, #92]	; 0x5c
   15bf8:	eor	ip, ip, lr
   15bfc:	lsr	ip, ip, #31
   15c00:	orr	r3, r3, ip
   15c04:	str	r3, [sp, #92]	; 0x5c
   15c08:	add	r0, r0, r3
   15c0c:	add	r0, r0, r2
   15c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c14:	lsl	r3, r3, #5
   15c18:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15c1c:	lsr	ip, ip, #27
   15c20:	orr	r3, r3, ip
   15c24:	add	r0, r0, r3
   15c28:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c2c:	add	r0, r3, r0
   15c30:	str	r0, [fp, #-20]	; 0xffffffec
   15c34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15c38:	lsl	r0, r0, #30
   15c3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c40:	lsr	r3, r3, #2
   15c44:	orr	r0, r0, r3
   15c48:	str	r0, [fp, #-28]	; 0xffffffe4
   15c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15c54:	orr	r0, r0, r3
   15c58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c5c:	and	r0, r0, r3
   15c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c64:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15c68:	and	r3, r3, ip
   15c6c:	orr	r0, r0, r3
   15c70:	ldr	r3, [sp, #84]	; 0x54
   15c74:	ldr	ip, [sp, #128]	; 0x80
   15c78:	eor	r3, r3, ip
   15c7c:	ldr	ip, [sp, #104]	; 0x68
   15c80:	eor	r3, r3, ip
   15c84:	ldr	ip, [sp, #96]	; 0x60
   15c88:	eor	r3, r3, ip
   15c8c:	lsl	r3, r3, #1
   15c90:	ldr	ip, [sp, #84]	; 0x54
   15c94:	ldr	lr, [sp, #128]	; 0x80
   15c98:	eor	ip, ip, lr
   15c9c:	ldr	lr, [sp, #104]	; 0x68
   15ca0:	eor	ip, ip, lr
   15ca4:	ldr	lr, [sp, #96]	; 0x60
   15ca8:	eor	ip, ip, lr
   15cac:	lsr	ip, ip, #31
   15cb0:	orr	r3, r3, ip
   15cb4:	str	r3, [sp, #96]	; 0x60
   15cb8:	add	r0, r0, r3
   15cbc:	add	r0, r0, r2
   15cc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cc4:	lsl	r3, r3, #5
   15cc8:	ldr	ip, [fp, #-20]	; 0xffffffec
   15ccc:	lsr	ip, ip, #27
   15cd0:	orr	r3, r3, ip
   15cd4:	add	r0, r0, r3
   15cd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15cdc:	add	r0, r3, r0
   15ce0:	str	r0, [fp, #-36]	; 0xffffffdc
   15ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ce8:	lsl	r0, r0, #30
   15cec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15cf0:	lsr	r3, r3, #2
   15cf4:	orr	r0, r0, r3
   15cf8:	str	r0, [fp, #-24]	; 0xffffffe8
   15cfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15d04:	orr	r0, r0, r3
   15d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15d0c:	and	r0, r0, r3
   15d10:	ldr	r3, [fp, #-20]	; 0xffffffec
   15d14:	ldr	ip, [fp, #-24]	; 0xffffffe8
   15d18:	and	r3, r3, ip
   15d1c:	orr	r0, r0, r3
   15d20:	ldr	r3, [sp, #88]	; 0x58
   15d24:	ldr	ip, [sp, #68]	; 0x44
   15d28:	eor	r3, r3, ip
   15d2c:	ldr	ip, [sp, #108]	; 0x6c
   15d30:	eor	r3, r3, ip
   15d34:	ldr	ip, [sp, #100]	; 0x64
   15d38:	eor	r3, r3, ip
   15d3c:	lsl	r3, r3, #1
   15d40:	ldr	ip, [sp, #88]	; 0x58
   15d44:	ldr	lr, [sp, #68]	; 0x44
   15d48:	eor	ip, ip, lr
   15d4c:	ldr	lr, [sp, #108]	; 0x6c
   15d50:	eor	ip, ip, lr
   15d54:	ldr	lr, [sp, #100]	; 0x64
   15d58:	eor	ip, ip, lr
   15d5c:	lsr	ip, ip, #31
   15d60:	orr	r3, r3, ip
   15d64:	str	r3, [sp, #100]	; 0x64
   15d68:	add	r0, r0, r3
   15d6c:	add	r0, r0, r2
   15d70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d74:	lsl	r3, r3, #5
   15d78:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15d7c:	lsr	ip, ip, #27
   15d80:	orr	r3, r3, ip
   15d84:	add	r0, r0, r3
   15d88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d8c:	add	r0, r3, r0
   15d90:	str	r0, [fp, #-32]	; 0xffffffe0
   15d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d98:	lsl	r0, r0, #30
   15d9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15da0:	lsr	r3, r3, #2
   15da4:	orr	r0, r0, r3
   15da8:	str	r0, [fp, #-20]	; 0xffffffec
   15dac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15db4:	orr	r0, r0, r3
   15db8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15dbc:	and	r0, r0, r3
   15dc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15dc4:	ldr	ip, [fp, #-20]	; 0xffffffec
   15dc8:	and	r3, r3, ip
   15dcc:	orr	r0, r0, r3
   15dd0:	ldr	r3, [sp, #92]	; 0x5c
   15dd4:	ldr	ip, [sp, #72]	; 0x48
   15dd8:	eor	r3, r3, ip
   15ddc:	ldr	ip, [sp, #112]	; 0x70
   15de0:	eor	r3, r3, ip
   15de4:	ldr	ip, [sp, #104]	; 0x68
   15de8:	eor	r3, r3, ip
   15dec:	lsl	r3, r3, #1
   15df0:	ldr	ip, [sp, #92]	; 0x5c
   15df4:	ldr	lr, [sp, #72]	; 0x48
   15df8:	eor	ip, ip, lr
   15dfc:	ldr	lr, [sp, #112]	; 0x70
   15e00:	eor	ip, ip, lr
   15e04:	ldr	lr, [sp, #104]	; 0x68
   15e08:	eor	ip, ip, lr
   15e0c:	lsr	ip, ip, #31
   15e10:	orr	r3, r3, ip
   15e14:	str	r3, [sp, #104]	; 0x68
   15e18:	add	r0, r0, r3
   15e1c:	add	r0, r0, r2
   15e20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e24:	lsl	r3, r3, #5
   15e28:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15e2c:	lsr	ip, ip, #27
   15e30:	orr	r3, r3, ip
   15e34:	add	r0, r0, r3
   15e38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15e3c:	add	r0, r3, r0
   15e40:	str	r0, [fp, #-28]	; 0xffffffe4
   15e44:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15e48:	lsl	r0, r0, #30
   15e4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e50:	lsr	r3, r3, #2
   15e54:	orr	r0, r0, r3
   15e58:	str	r0, [fp, #-36]	; 0xffffffdc
   15e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e64:	orr	r0, r0, r3
   15e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e6c:	and	r0, r0, r3
   15e70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e74:	ldr	ip, [fp, #-36]	; 0xffffffdc
   15e78:	and	r3, r3, ip
   15e7c:	orr	r0, r0, r3
   15e80:	ldr	r3, [sp, #96]	; 0x60
   15e84:	ldr	ip, [sp, #76]	; 0x4c
   15e88:	eor	r3, r3, ip
   15e8c:	ldr	ip, [sp, #116]	; 0x74
   15e90:	eor	r3, r3, ip
   15e94:	ldr	ip, [sp, #108]	; 0x6c
   15e98:	eor	r3, r3, ip
   15e9c:	lsl	r3, r3, #1
   15ea0:	ldr	ip, [sp, #96]	; 0x60
   15ea4:	ldr	lr, [sp, #76]	; 0x4c
   15ea8:	eor	ip, ip, lr
   15eac:	ldr	lr, [sp, #116]	; 0x74
   15eb0:	eor	ip, ip, lr
   15eb4:	ldr	lr, [sp, #108]	; 0x6c
   15eb8:	eor	ip, ip, lr
   15ebc:	lsr	ip, ip, #31
   15ec0:	orr	r3, r3, ip
   15ec4:	str	r3, [sp, #108]	; 0x6c
   15ec8:	add	r0, r0, r3
   15ecc:	add	r0, r0, r2
   15ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15ed4:	lsl	r3, r3, #5
   15ed8:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15edc:	lsr	ip, ip, #27
   15ee0:	orr	r3, r3, ip
   15ee4:	add	r0, r0, r3
   15ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15eec:	add	r0, r3, r0
   15ef0:	str	r0, [fp, #-24]	; 0xffffffe8
   15ef4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ef8:	lsl	r0, r0, #30
   15efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f00:	lsr	r3, r3, #2
   15f04:	orr	r0, r0, r3
   15f08:	str	r0, [fp, #-32]	; 0xffffffe0
   15f0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15f10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f14:	orr	r0, r0, r3
   15f18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f1c:	and	r0, r0, r3
   15f20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15f24:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15f28:	and	r3, r3, ip
   15f2c:	orr	r0, r0, r3
   15f30:	ldr	r3, [sp, #100]	; 0x64
   15f34:	ldr	ip, [sp, #80]	; 0x50
   15f38:	eor	r3, r3, ip
   15f3c:	ldr	ip, [sp, #120]	; 0x78
   15f40:	eor	r3, r3, ip
   15f44:	ldr	ip, [sp, #112]	; 0x70
   15f48:	eor	r3, r3, ip
   15f4c:	lsl	r3, r3, #1
   15f50:	ldr	ip, [sp, #100]	; 0x64
   15f54:	ldr	lr, [sp, #80]	; 0x50
   15f58:	eor	ip, ip, lr
   15f5c:	ldr	lr, [sp, #120]	; 0x78
   15f60:	eor	ip, ip, lr
   15f64:	ldr	lr, [sp, #112]	; 0x70
   15f68:	eor	ip, ip, lr
   15f6c:	lsr	ip, ip, #31
   15f70:	orr	r3, r3, ip
   15f74:	str	r3, [sp, #112]	; 0x70
   15f78:	add	r0, r0, r3
   15f7c:	add	r0, r0, r2
   15f80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f84:	lsl	r2, r2, #5
   15f88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f8c:	lsr	r3, r3, #27
   15f90:	orr	r2, r2, r3
   15f94:	add	r0, r0, r2
   15f98:	ldr	r2, [fp, #-20]	; 0xffffffec
   15f9c:	add	r0, r2, r0
   15fa0:	str	r0, [fp, #-20]	; 0xffffffec
   15fa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15fa8:	lsl	r0, r0, #30
   15fac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15fb0:	lsr	r2, r2, #2
   15fb4:	orr	r0, r0, r2
   15fb8:	str	r0, [fp, #-28]	; 0xffffffe4
   15fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fc0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15fc4:	eor	r0, r0, r2
   15fc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15fcc:	eor	r0, r0, r2
   15fd0:	ldr	r2, [sp, #104]	; 0x68
   15fd4:	ldr	r3, [sp, #84]	; 0x54
   15fd8:	eor	r2, r2, r3
   15fdc:	ldr	r3, [sp, #124]	; 0x7c
   15fe0:	eor	r2, r2, r3
   15fe4:	ldr	r3, [sp, #116]	; 0x74
   15fe8:	eor	r2, r2, r3
   15fec:	lsl	r2, r2, #1
   15ff0:	ldr	r3, [sp, #104]	; 0x68
   15ff4:	ldr	ip, [sp, #84]	; 0x54
   15ff8:	eor	r3, r3, ip
   15ffc:	ldr	ip, [sp, #124]	; 0x7c
   16000:	eor	r3, r3, ip
   16004:	ldr	ip, [sp, #116]	; 0x74
   16008:	eor	r3, r3, ip
   1600c:	lsr	r3, r3, #31
   16010:	orr	r2, r2, r3
   16014:	str	r2, [sp, #116]	; 0x74
   16018:	add	r0, r0, r2
   1601c:	add	r0, r0, r1
   16020:	ldr	r2, [fp, #-20]	; 0xffffffec
   16024:	lsl	r2, r2, #5
   16028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1602c:	lsr	r3, r3, #27
   16030:	orr	r2, r2, r3
   16034:	add	r0, r0, r2
   16038:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1603c:	add	r0, r2, r0
   16040:	str	r0, [fp, #-36]	; 0xffffffdc
   16044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16048:	lsl	r0, r0, #30
   1604c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16050:	lsr	r2, r2, #2
   16054:	orr	r0, r0, r2
   16058:	str	r0, [fp, #-24]	; 0xffffffe8
   1605c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16060:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16064:	eor	r0, r0, r2
   16068:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1606c:	eor	r0, r0, r2
   16070:	ldr	r2, [sp, #108]	; 0x6c
   16074:	ldr	r3, [sp, #88]	; 0x58
   16078:	eor	r2, r2, r3
   1607c:	ldr	r3, [sp, #128]	; 0x80
   16080:	eor	r2, r2, r3
   16084:	ldr	r3, [sp, #120]	; 0x78
   16088:	eor	r2, r2, r3
   1608c:	lsl	r2, r2, #1
   16090:	ldr	r3, [sp, #108]	; 0x6c
   16094:	ldr	ip, [sp, #88]	; 0x58
   16098:	eor	r3, r3, ip
   1609c:	ldr	ip, [sp, #128]	; 0x80
   160a0:	eor	r3, r3, ip
   160a4:	ldr	ip, [sp, #120]	; 0x78
   160a8:	eor	r3, r3, ip
   160ac:	lsr	r3, r3, #31
   160b0:	orr	r2, r2, r3
   160b4:	str	r2, [sp, #120]	; 0x78
   160b8:	add	r0, r0, r2
   160bc:	add	r0, r0, r1
   160c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   160c4:	lsl	r2, r2, #5
   160c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160cc:	lsr	r3, r3, #27
   160d0:	orr	r2, r2, r3
   160d4:	add	r0, r0, r2
   160d8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   160dc:	add	r0, r2, r0
   160e0:	str	r0, [fp, #-32]	; 0xffffffe0
   160e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   160e8:	lsl	r0, r0, #30
   160ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   160f0:	lsr	r2, r2, #2
   160f4:	orr	r0, r0, r2
   160f8:	str	r0, [fp, #-20]	; 0xffffffec
   160fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16100:	ldr	r2, [fp, #-20]	; 0xffffffec
   16104:	eor	r0, r0, r2
   16108:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1610c:	eor	r0, r0, r2
   16110:	ldr	r2, [sp, #112]	; 0x70
   16114:	ldr	r3, [sp, #92]	; 0x5c
   16118:	eor	r2, r2, r3
   1611c:	ldr	r3, [sp, #68]	; 0x44
   16120:	eor	r2, r2, r3
   16124:	ldr	r3, [sp, #124]	; 0x7c
   16128:	eor	r2, r2, r3
   1612c:	lsl	r2, r2, #1
   16130:	ldr	r3, [sp, #112]	; 0x70
   16134:	ldr	ip, [sp, #92]	; 0x5c
   16138:	eor	r3, r3, ip
   1613c:	ldr	ip, [sp, #68]	; 0x44
   16140:	eor	r3, r3, ip
   16144:	ldr	ip, [sp, #124]	; 0x7c
   16148:	eor	r3, r3, ip
   1614c:	lsr	r3, r3, #31
   16150:	orr	r2, r2, r3
   16154:	str	r2, [sp, #124]	; 0x7c
   16158:	add	r0, r0, r2
   1615c:	add	r0, r0, r1
   16160:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16164:	lsl	r2, r2, #5
   16168:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1616c:	lsr	r3, r3, #27
   16170:	orr	r2, r2, r3
   16174:	add	r0, r0, r2
   16178:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1617c:	add	r0, r2, r0
   16180:	str	r0, [fp, #-28]	; 0xffffffe4
   16184:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16188:	lsl	r0, r0, #30
   1618c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16190:	lsr	r2, r2, #2
   16194:	orr	r0, r0, r2
   16198:	str	r0, [fp, #-36]	; 0xffffffdc
   1619c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161a0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   161a4:	eor	r0, r0, r2
   161a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   161ac:	eor	r0, r0, r2
   161b0:	ldr	r2, [sp, #116]	; 0x74
   161b4:	ldr	r3, [sp, #96]	; 0x60
   161b8:	eor	r2, r2, r3
   161bc:	ldr	r3, [sp, #72]	; 0x48
   161c0:	eor	r2, r2, r3
   161c4:	ldr	r3, [sp, #128]	; 0x80
   161c8:	eor	r2, r2, r3
   161cc:	lsl	r2, r2, #1
   161d0:	ldr	r3, [sp, #116]	; 0x74
   161d4:	ldr	ip, [sp, #96]	; 0x60
   161d8:	eor	r3, r3, ip
   161dc:	ldr	ip, [sp, #72]	; 0x48
   161e0:	eor	r3, r3, ip
   161e4:	ldr	ip, [sp, #128]	; 0x80
   161e8:	eor	r3, r3, ip
   161ec:	lsr	r3, r3, #31
   161f0:	orr	r2, r2, r3
   161f4:	str	r2, [sp, #128]	; 0x80
   161f8:	add	r0, r0, r2
   161fc:	add	r0, r0, r1
   16200:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16204:	lsl	r2, r2, #5
   16208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1620c:	lsr	r3, r3, #27
   16210:	orr	r2, r2, r3
   16214:	add	r0, r0, r2
   16218:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1621c:	add	r0, r2, r0
   16220:	str	r0, [fp, #-24]	; 0xffffffe8
   16224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16228:	lsl	r0, r0, #30
   1622c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16230:	lsr	r2, r2, #2
   16234:	orr	r0, r0, r2
   16238:	str	r0, [fp, #-32]	; 0xffffffe0
   1623c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16240:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16244:	eor	r0, r0, r2
   16248:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1624c:	eor	r0, r0, r2
   16250:	ldr	r2, [sp, #120]	; 0x78
   16254:	ldr	r3, [sp, #100]	; 0x64
   16258:	eor	r2, r2, r3
   1625c:	ldr	r3, [sp, #76]	; 0x4c
   16260:	eor	r2, r2, r3
   16264:	ldr	r3, [sp, #68]	; 0x44
   16268:	eor	r2, r2, r3
   1626c:	lsl	r2, r2, #1
   16270:	ldr	r3, [sp, #120]	; 0x78
   16274:	ldr	ip, [sp, #100]	; 0x64
   16278:	eor	r3, r3, ip
   1627c:	ldr	ip, [sp, #76]	; 0x4c
   16280:	eor	r3, r3, ip
   16284:	ldr	ip, [sp, #68]	; 0x44
   16288:	eor	r3, r3, ip
   1628c:	lsr	r3, r3, #31
   16290:	orr	r2, r2, r3
   16294:	str	r2, [sp, #68]	; 0x44
   16298:	add	r0, r0, r2
   1629c:	add	r0, r0, r1
   162a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162a4:	lsl	r2, r2, #5
   162a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   162ac:	lsr	r3, r3, #27
   162b0:	orr	r2, r2, r3
   162b4:	add	r0, r0, r2
   162b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   162bc:	add	r0, r2, r0
   162c0:	str	r0, [fp, #-20]	; 0xffffffec
   162c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   162c8:	lsl	r0, r0, #30
   162cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   162d0:	lsr	r2, r2, #2
   162d4:	orr	r0, r0, r2
   162d8:	str	r0, [fp, #-28]	; 0xffffffe4
   162dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   162e4:	eor	r0, r0, r2
   162e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   162ec:	eor	r0, r0, r2
   162f0:	ldr	r2, [sp, #124]	; 0x7c
   162f4:	ldr	r3, [sp, #104]	; 0x68
   162f8:	eor	r2, r2, r3
   162fc:	ldr	r3, [sp, #80]	; 0x50
   16300:	eor	r2, r2, r3
   16304:	ldr	r3, [sp, #72]	; 0x48
   16308:	eor	r2, r2, r3
   1630c:	lsl	r2, r2, #1
   16310:	ldr	r3, [sp, #124]	; 0x7c
   16314:	ldr	ip, [sp, #104]	; 0x68
   16318:	eor	r3, r3, ip
   1631c:	ldr	ip, [sp, #80]	; 0x50
   16320:	eor	r3, r3, ip
   16324:	ldr	ip, [sp, #72]	; 0x48
   16328:	eor	r3, r3, ip
   1632c:	lsr	r3, r3, #31
   16330:	orr	r2, r2, r3
   16334:	str	r2, [sp, #72]	; 0x48
   16338:	add	r0, r0, r2
   1633c:	add	r0, r0, r1
   16340:	ldr	r2, [fp, #-20]	; 0xffffffec
   16344:	lsl	r2, r2, #5
   16348:	ldr	r3, [fp, #-20]	; 0xffffffec
   1634c:	lsr	r3, r3, #27
   16350:	orr	r2, r2, r3
   16354:	add	r0, r0, r2
   16358:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1635c:	add	r0, r2, r0
   16360:	str	r0, [fp, #-36]	; 0xffffffdc
   16364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16368:	lsl	r0, r0, #30
   1636c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16370:	lsr	r2, r2, #2
   16374:	orr	r0, r0, r2
   16378:	str	r0, [fp, #-24]	; 0xffffffe8
   1637c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16380:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16384:	eor	r0, r0, r2
   16388:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1638c:	eor	r0, r0, r2
   16390:	ldr	r2, [sp, #128]	; 0x80
   16394:	ldr	r3, [sp, #108]	; 0x6c
   16398:	eor	r2, r2, r3
   1639c:	ldr	r3, [sp, #84]	; 0x54
   163a0:	eor	r2, r2, r3
   163a4:	ldr	r3, [sp, #76]	; 0x4c
   163a8:	eor	r2, r2, r3
   163ac:	lsl	r2, r2, #1
   163b0:	ldr	r3, [sp, #128]	; 0x80
   163b4:	ldr	ip, [sp, #108]	; 0x6c
   163b8:	eor	r3, r3, ip
   163bc:	ldr	ip, [sp, #84]	; 0x54
   163c0:	eor	r3, r3, ip
   163c4:	ldr	ip, [sp, #76]	; 0x4c
   163c8:	eor	r3, r3, ip
   163cc:	lsr	r3, r3, #31
   163d0:	orr	r2, r2, r3
   163d4:	str	r2, [sp, #76]	; 0x4c
   163d8:	add	r0, r0, r2
   163dc:	add	r0, r0, r1
   163e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   163e4:	lsl	r2, r2, #5
   163e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   163ec:	lsr	r3, r3, #27
   163f0:	orr	r2, r2, r3
   163f4:	add	r0, r0, r2
   163f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   163fc:	add	r0, r2, r0
   16400:	str	r0, [fp, #-32]	; 0xffffffe0
   16404:	ldr	r0, [fp, #-20]	; 0xffffffec
   16408:	lsl	r0, r0, #30
   1640c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16410:	lsr	r2, r2, #2
   16414:	orr	r0, r0, r2
   16418:	str	r0, [fp, #-20]	; 0xffffffec
   1641c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16420:	ldr	r2, [fp, #-20]	; 0xffffffec
   16424:	eor	r0, r0, r2
   16428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1642c:	eor	r0, r0, r2
   16430:	ldr	r2, [sp, #68]	; 0x44
   16434:	ldr	r3, [sp, #112]	; 0x70
   16438:	eor	r2, r2, r3
   1643c:	ldr	r3, [sp, #88]	; 0x58
   16440:	eor	r2, r2, r3
   16444:	ldr	r3, [sp, #80]	; 0x50
   16448:	eor	r2, r2, r3
   1644c:	lsl	r2, r2, #1
   16450:	ldr	r3, [sp, #68]	; 0x44
   16454:	ldr	ip, [sp, #112]	; 0x70
   16458:	eor	r3, r3, ip
   1645c:	ldr	ip, [sp, #88]	; 0x58
   16460:	eor	r3, r3, ip
   16464:	ldr	ip, [sp, #80]	; 0x50
   16468:	eor	r3, r3, ip
   1646c:	lsr	r3, r3, #31
   16470:	orr	r2, r2, r3
   16474:	str	r2, [sp, #80]	; 0x50
   16478:	add	r0, r0, r2
   1647c:	add	r0, r0, r1
   16480:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16484:	lsl	r2, r2, #5
   16488:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1648c:	lsr	r3, r3, #27
   16490:	orr	r2, r2, r3
   16494:	add	r0, r0, r2
   16498:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1649c:	add	r0, r2, r0
   164a0:	str	r0, [fp, #-28]	; 0xffffffe4
   164a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   164a8:	lsl	r0, r0, #30
   164ac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   164b0:	lsr	r2, r2, #2
   164b4:	orr	r0, r0, r2
   164b8:	str	r0, [fp, #-36]	; 0xffffffdc
   164bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   164c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   164c4:	eor	r0, r0, r2
   164c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   164cc:	eor	r0, r0, r2
   164d0:	ldr	r2, [sp, #72]	; 0x48
   164d4:	ldr	r3, [sp, #116]	; 0x74
   164d8:	eor	r2, r2, r3
   164dc:	ldr	r3, [sp, #92]	; 0x5c
   164e0:	eor	r2, r2, r3
   164e4:	ldr	r3, [sp, #84]	; 0x54
   164e8:	eor	r2, r2, r3
   164ec:	lsl	r2, r2, #1
   164f0:	ldr	r3, [sp, #72]	; 0x48
   164f4:	ldr	ip, [sp, #116]	; 0x74
   164f8:	eor	r3, r3, ip
   164fc:	ldr	ip, [sp, #92]	; 0x5c
   16500:	eor	r3, r3, ip
   16504:	ldr	ip, [sp, #84]	; 0x54
   16508:	eor	r3, r3, ip
   1650c:	lsr	r3, r3, #31
   16510:	orr	r2, r2, r3
   16514:	str	r2, [sp, #84]	; 0x54
   16518:	add	r0, r0, r2
   1651c:	add	r0, r0, r1
   16520:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16524:	lsl	r2, r2, #5
   16528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1652c:	lsr	r3, r3, #27
   16530:	orr	r2, r2, r3
   16534:	add	r0, r0, r2
   16538:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1653c:	add	r0, r2, r0
   16540:	str	r0, [fp, #-24]	; 0xffffffe8
   16544:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16548:	lsl	r0, r0, #30
   1654c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16550:	lsr	r2, r2, #2
   16554:	orr	r0, r0, r2
   16558:	str	r0, [fp, #-32]	; 0xffffffe0
   1655c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16560:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16564:	eor	r0, r0, r2
   16568:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1656c:	eor	r0, r0, r2
   16570:	ldr	r2, [sp, #76]	; 0x4c
   16574:	ldr	r3, [sp, #120]	; 0x78
   16578:	eor	r2, r2, r3
   1657c:	ldr	r3, [sp, #96]	; 0x60
   16580:	eor	r2, r2, r3
   16584:	ldr	r3, [sp, #88]	; 0x58
   16588:	eor	r2, r2, r3
   1658c:	lsl	r2, r2, #1
   16590:	ldr	r3, [sp, #76]	; 0x4c
   16594:	ldr	ip, [sp, #120]	; 0x78
   16598:	eor	r3, r3, ip
   1659c:	ldr	ip, [sp, #96]	; 0x60
   165a0:	eor	r3, r3, ip
   165a4:	ldr	ip, [sp, #88]	; 0x58
   165a8:	eor	r3, r3, ip
   165ac:	lsr	r3, r3, #31
   165b0:	orr	r2, r2, r3
   165b4:	str	r2, [sp, #88]	; 0x58
   165b8:	add	r0, r0, r2
   165bc:	add	r0, r0, r1
   165c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   165c4:	lsl	r2, r2, #5
   165c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   165cc:	lsr	r3, r3, #27
   165d0:	orr	r2, r2, r3
   165d4:	add	r0, r0, r2
   165d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   165dc:	add	r0, r2, r0
   165e0:	str	r0, [fp, #-20]	; 0xffffffec
   165e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   165e8:	lsl	r0, r0, #30
   165ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   165f0:	lsr	r2, r2, #2
   165f4:	orr	r0, r0, r2
   165f8:	str	r0, [fp, #-28]	; 0xffffffe4
   165fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16600:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16604:	eor	r0, r0, r2
   16608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1660c:	eor	r0, r0, r2
   16610:	ldr	r2, [sp, #80]	; 0x50
   16614:	ldr	r3, [sp, #124]	; 0x7c
   16618:	eor	r2, r2, r3
   1661c:	ldr	r3, [sp, #100]	; 0x64
   16620:	eor	r2, r2, r3
   16624:	ldr	r3, [sp, #92]	; 0x5c
   16628:	eor	r2, r2, r3
   1662c:	lsl	r2, r2, #1
   16630:	ldr	r3, [sp, #80]	; 0x50
   16634:	ldr	ip, [sp, #124]	; 0x7c
   16638:	eor	r3, r3, ip
   1663c:	ldr	ip, [sp, #100]	; 0x64
   16640:	eor	r3, r3, ip
   16644:	ldr	ip, [sp, #92]	; 0x5c
   16648:	eor	r3, r3, ip
   1664c:	lsr	r3, r3, #31
   16650:	orr	r2, r2, r3
   16654:	str	r2, [sp, #92]	; 0x5c
   16658:	add	r0, r0, r2
   1665c:	add	r0, r0, r1
   16660:	ldr	r2, [fp, #-20]	; 0xffffffec
   16664:	lsl	r2, r2, #5
   16668:	ldr	r3, [fp, #-20]	; 0xffffffec
   1666c:	lsr	r3, r3, #27
   16670:	orr	r2, r2, r3
   16674:	add	r0, r0, r2
   16678:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1667c:	add	r0, r2, r0
   16680:	str	r0, [fp, #-36]	; 0xffffffdc
   16684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16688:	lsl	r0, r0, #30
   1668c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16690:	lsr	r2, r2, #2
   16694:	orr	r0, r0, r2
   16698:	str	r0, [fp, #-24]	; 0xffffffe8
   1669c:	ldr	r0, [fp, #-20]	; 0xffffffec
   166a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166a4:	eor	r0, r0, r2
   166a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   166ac:	eor	r0, r0, r2
   166b0:	ldr	r2, [sp, #84]	; 0x54
   166b4:	ldr	r3, [sp, #128]	; 0x80
   166b8:	eor	r2, r2, r3
   166bc:	ldr	r3, [sp, #104]	; 0x68
   166c0:	eor	r2, r2, r3
   166c4:	ldr	r3, [sp, #96]	; 0x60
   166c8:	eor	r2, r2, r3
   166cc:	lsl	r2, r2, #1
   166d0:	ldr	r3, [sp, #84]	; 0x54
   166d4:	ldr	ip, [sp, #128]	; 0x80
   166d8:	eor	r3, r3, ip
   166dc:	ldr	ip, [sp, #104]	; 0x68
   166e0:	eor	r3, r3, ip
   166e4:	ldr	ip, [sp, #96]	; 0x60
   166e8:	eor	r3, r3, ip
   166ec:	lsr	r3, r3, #31
   166f0:	orr	r2, r2, r3
   166f4:	str	r2, [sp, #96]	; 0x60
   166f8:	add	r0, r0, r2
   166fc:	add	r0, r0, r1
   16700:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16704:	lsl	r2, r2, #5
   16708:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1670c:	lsr	r3, r3, #27
   16710:	orr	r2, r2, r3
   16714:	add	r0, r0, r2
   16718:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1671c:	add	r0, r2, r0
   16720:	str	r0, [fp, #-32]	; 0xffffffe0
   16724:	ldr	r0, [fp, #-20]	; 0xffffffec
   16728:	lsl	r0, r0, #30
   1672c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16730:	lsr	r2, r2, #2
   16734:	orr	r0, r0, r2
   16738:	str	r0, [fp, #-20]	; 0xffffffec
   1673c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16740:	ldr	r2, [fp, #-20]	; 0xffffffec
   16744:	eor	r0, r0, r2
   16748:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1674c:	eor	r0, r0, r2
   16750:	ldr	r2, [sp, #88]	; 0x58
   16754:	ldr	r3, [sp, #68]	; 0x44
   16758:	eor	r2, r2, r3
   1675c:	ldr	r3, [sp, #108]	; 0x6c
   16760:	eor	r2, r2, r3
   16764:	ldr	r3, [sp, #100]	; 0x64
   16768:	eor	r2, r2, r3
   1676c:	lsl	r2, r2, #1
   16770:	ldr	r3, [sp, #88]	; 0x58
   16774:	ldr	ip, [sp, #68]	; 0x44
   16778:	eor	r3, r3, ip
   1677c:	ldr	ip, [sp, #108]	; 0x6c
   16780:	eor	r3, r3, ip
   16784:	ldr	ip, [sp, #100]	; 0x64
   16788:	eor	r3, r3, ip
   1678c:	lsr	r3, r3, #31
   16790:	orr	r2, r2, r3
   16794:	str	r2, [sp, #100]	; 0x64
   16798:	add	r0, r0, r2
   1679c:	add	r0, r0, r1
   167a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   167a4:	lsl	r2, r2, #5
   167a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   167ac:	lsr	r3, r3, #27
   167b0:	orr	r2, r2, r3
   167b4:	add	r0, r0, r2
   167b8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   167bc:	add	r0, r2, r0
   167c0:	str	r0, [fp, #-28]	; 0xffffffe4
   167c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   167c8:	lsl	r0, r0, #30
   167cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   167d0:	lsr	r2, r2, #2
   167d4:	orr	r0, r0, r2
   167d8:	str	r0, [fp, #-36]	; 0xffffffdc
   167dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   167e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   167e4:	eor	r0, r0, r2
   167e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   167ec:	eor	r0, r0, r2
   167f0:	ldr	r2, [sp, #92]	; 0x5c
   167f4:	ldr	r3, [sp, #72]	; 0x48
   167f8:	eor	r2, r2, r3
   167fc:	ldr	r3, [sp, #112]	; 0x70
   16800:	eor	r2, r2, r3
   16804:	ldr	r3, [sp, #104]	; 0x68
   16808:	eor	r2, r2, r3
   1680c:	lsl	r2, r2, #1
   16810:	ldr	r3, [sp, #92]	; 0x5c
   16814:	ldr	ip, [sp, #72]	; 0x48
   16818:	eor	r3, r3, ip
   1681c:	ldr	ip, [sp, #112]	; 0x70
   16820:	eor	r3, r3, ip
   16824:	ldr	ip, [sp, #104]	; 0x68
   16828:	eor	r3, r3, ip
   1682c:	lsr	r3, r3, #31
   16830:	orr	r2, r2, r3
   16834:	str	r2, [sp, #104]	; 0x68
   16838:	add	r0, r0, r2
   1683c:	add	r0, r0, r1
   16840:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16844:	lsl	r2, r2, #5
   16848:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1684c:	lsr	r3, r3, #27
   16850:	orr	r2, r2, r3
   16854:	add	r0, r0, r2
   16858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1685c:	add	r0, r2, r0
   16860:	str	r0, [fp, #-24]	; 0xffffffe8
   16864:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16868:	lsl	r0, r0, #30
   1686c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16870:	lsr	r2, r2, #2
   16874:	orr	r0, r0, r2
   16878:	str	r0, [fp, #-32]	; 0xffffffe0
   1687c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16880:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16884:	eor	r0, r0, r2
   16888:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1688c:	eor	r0, r0, r2
   16890:	ldr	r2, [sp, #96]	; 0x60
   16894:	ldr	r3, [sp, #76]	; 0x4c
   16898:	eor	r2, r2, r3
   1689c:	ldr	r3, [sp, #116]	; 0x74
   168a0:	eor	r2, r2, r3
   168a4:	ldr	r3, [sp, #108]	; 0x6c
   168a8:	eor	r2, r2, r3
   168ac:	lsl	r2, r2, #1
   168b0:	ldr	r3, [sp, #96]	; 0x60
   168b4:	ldr	ip, [sp, #76]	; 0x4c
   168b8:	eor	r3, r3, ip
   168bc:	ldr	ip, [sp, #116]	; 0x74
   168c0:	eor	r3, r3, ip
   168c4:	ldr	ip, [sp, #108]	; 0x6c
   168c8:	eor	r3, r3, ip
   168cc:	lsr	r3, r3, #31
   168d0:	orr	r2, r2, r3
   168d4:	str	r2, [sp, #108]	; 0x6c
   168d8:	add	r0, r0, r2
   168dc:	add	r0, r0, r1
   168e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168e4:	lsl	r2, r2, #5
   168e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168ec:	lsr	r3, r3, #27
   168f0:	orr	r2, r2, r3
   168f4:	add	r0, r0, r2
   168f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   168fc:	add	r0, r2, r0
   16900:	str	r0, [fp, #-20]	; 0xffffffec
   16904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16908:	lsl	r0, r0, #30
   1690c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16910:	lsr	r2, r2, #2
   16914:	orr	r0, r0, r2
   16918:	str	r0, [fp, #-28]	; 0xffffffe4
   1691c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16920:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16924:	eor	r0, r0, r2
   16928:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1692c:	eor	r0, r0, r2
   16930:	ldr	r2, [sp, #100]	; 0x64
   16934:	ldr	r3, [sp, #80]	; 0x50
   16938:	eor	r2, r2, r3
   1693c:	ldr	r3, [sp, #120]	; 0x78
   16940:	eor	r2, r2, r3
   16944:	ldr	r3, [sp, #112]	; 0x70
   16948:	eor	r2, r2, r3
   1694c:	lsl	r2, r2, #1
   16950:	ldr	r3, [sp, #100]	; 0x64
   16954:	ldr	ip, [sp, #80]	; 0x50
   16958:	eor	r3, r3, ip
   1695c:	ldr	ip, [sp, #120]	; 0x78
   16960:	eor	r3, r3, ip
   16964:	ldr	ip, [sp, #112]	; 0x70
   16968:	eor	r3, r3, ip
   1696c:	lsr	r3, r3, #31
   16970:	orr	r2, r2, r3
   16974:	str	r2, [sp, #112]	; 0x70
   16978:	add	r0, r0, r2
   1697c:	add	r0, r0, r1
   16980:	ldr	r2, [fp, #-20]	; 0xffffffec
   16984:	lsl	r2, r2, #5
   16988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1698c:	lsr	r3, r3, #27
   16990:	orr	r2, r2, r3
   16994:	add	r0, r0, r2
   16998:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1699c:	add	r0, r2, r0
   169a0:	str	r0, [fp, #-36]	; 0xffffffdc
   169a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169a8:	lsl	r0, r0, #30
   169ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   169b0:	lsr	r2, r2, #2
   169b4:	orr	r0, r0, r2
   169b8:	str	r0, [fp, #-24]	; 0xffffffe8
   169bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   169c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   169c4:	eor	r0, r0, r2
   169c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   169cc:	eor	r0, r0, r2
   169d0:	ldr	r2, [sp, #104]	; 0x68
   169d4:	ldr	r3, [sp, #84]	; 0x54
   169d8:	eor	r2, r2, r3
   169dc:	ldr	r3, [sp, #124]	; 0x7c
   169e0:	eor	r2, r2, r3
   169e4:	ldr	r3, [sp, #116]	; 0x74
   169e8:	eor	r2, r2, r3
   169ec:	lsl	r2, r2, #1
   169f0:	ldr	r3, [sp, #104]	; 0x68
   169f4:	ldr	ip, [sp, #84]	; 0x54
   169f8:	eor	r3, r3, ip
   169fc:	ldr	ip, [sp, #124]	; 0x7c
   16a00:	eor	r3, r3, ip
   16a04:	ldr	ip, [sp, #116]	; 0x74
   16a08:	eor	r3, r3, ip
   16a0c:	lsr	r3, r3, #31
   16a10:	orr	r2, r2, r3
   16a14:	str	r2, [sp, #116]	; 0x74
   16a18:	add	r0, r0, r2
   16a1c:	add	r0, r0, r1
   16a20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16a24:	lsl	r2, r2, #5
   16a28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16a2c:	lsr	r3, r3, #27
   16a30:	orr	r2, r2, r3
   16a34:	add	r0, r0, r2
   16a38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16a3c:	add	r0, r2, r0
   16a40:	str	r0, [fp, #-32]	; 0xffffffe0
   16a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a48:	lsl	r0, r0, #30
   16a4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a50:	lsr	r2, r2, #2
   16a54:	orr	r0, r0, r2
   16a58:	str	r0, [fp, #-20]	; 0xffffffec
   16a5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a60:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a64:	eor	r0, r0, r2
   16a68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16a6c:	eor	r0, r0, r2
   16a70:	ldr	r2, [sp, #108]	; 0x6c
   16a74:	ldr	r3, [sp, #88]	; 0x58
   16a78:	eor	r2, r2, r3
   16a7c:	ldr	r3, [sp, #128]	; 0x80
   16a80:	eor	r2, r2, r3
   16a84:	ldr	r3, [sp, #120]	; 0x78
   16a88:	eor	r2, r2, r3
   16a8c:	lsl	r2, r2, #1
   16a90:	ldr	r3, [sp, #108]	; 0x6c
   16a94:	ldr	ip, [sp, #88]	; 0x58
   16a98:	eor	r3, r3, ip
   16a9c:	ldr	ip, [sp, #128]	; 0x80
   16aa0:	eor	r3, r3, ip
   16aa4:	ldr	ip, [sp, #120]	; 0x78
   16aa8:	eor	r3, r3, ip
   16aac:	lsr	r3, r3, #31
   16ab0:	orr	r2, r2, r3
   16ab4:	str	r2, [sp, #120]	; 0x78
   16ab8:	add	r0, r0, r2
   16abc:	add	r0, r0, r1
   16ac0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16ac4:	lsl	r2, r2, #5
   16ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16acc:	lsr	r3, r3, #27
   16ad0:	orr	r2, r2, r3
   16ad4:	add	r0, r0, r2
   16ad8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16adc:	add	r0, r2, r0
   16ae0:	str	r0, [fp, #-28]	; 0xffffffe4
   16ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16ae8:	lsl	r0, r0, #30
   16aec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16af0:	lsr	r2, r2, #2
   16af4:	orr	r0, r0, r2
   16af8:	str	r0, [fp, #-36]	; 0xffffffdc
   16afc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b00:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16b04:	eor	r0, r0, r2
   16b08:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b0c:	eor	r0, r0, r2
   16b10:	ldr	r2, [sp, #112]	; 0x70
   16b14:	ldr	r3, [sp, #92]	; 0x5c
   16b18:	eor	r2, r2, r3
   16b1c:	ldr	r3, [sp, #68]	; 0x44
   16b20:	eor	r2, r2, r3
   16b24:	ldr	r3, [sp, #124]	; 0x7c
   16b28:	eor	r2, r2, r3
   16b2c:	lsl	r2, r2, #1
   16b30:	ldr	r3, [sp, #112]	; 0x70
   16b34:	ldr	ip, [sp, #92]	; 0x5c
   16b38:	eor	r3, r3, ip
   16b3c:	ldr	ip, [sp, #68]	; 0x44
   16b40:	eor	r3, r3, ip
   16b44:	ldr	ip, [sp, #124]	; 0x7c
   16b48:	eor	r3, r3, ip
   16b4c:	lsr	r3, r3, #31
   16b50:	orr	r2, r2, r3
   16b54:	str	r2, [sp, #124]	; 0x7c
   16b58:	add	r0, r0, r2
   16b5c:	add	r0, r0, r1
   16b60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16b64:	lsl	r2, r2, #5
   16b68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b6c:	lsr	r3, r3, #27
   16b70:	orr	r2, r2, r3
   16b74:	add	r0, r0, r2
   16b78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b7c:	add	r0, r2, r0
   16b80:	str	r0, [fp, #-24]	; 0xffffffe8
   16b84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16b88:	lsl	r0, r0, #30
   16b8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16b90:	lsr	r2, r2, #2
   16b94:	orr	r0, r0, r2
   16b98:	str	r0, [fp, #-32]	; 0xffffffe0
   16b9c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16ba0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16ba4:	eor	r0, r0, r2
   16ba8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16bac:	eor	r0, r0, r2
   16bb0:	ldr	r2, [sp, #116]	; 0x74
   16bb4:	ldr	r3, [sp, #96]	; 0x60
   16bb8:	eor	r2, r2, r3
   16bbc:	ldr	r3, [sp, #72]	; 0x48
   16bc0:	eor	r2, r2, r3
   16bc4:	ldr	r3, [sp, #128]	; 0x80
   16bc8:	eor	r2, r2, r3
   16bcc:	lsl	r2, r2, #1
   16bd0:	ldr	r3, [sp, #116]	; 0x74
   16bd4:	ldr	ip, [sp, #96]	; 0x60
   16bd8:	eor	r3, r3, ip
   16bdc:	ldr	ip, [sp, #72]	; 0x48
   16be0:	eor	r3, r3, ip
   16be4:	ldr	ip, [sp, #128]	; 0x80
   16be8:	eor	r3, r3, ip
   16bec:	lsr	r3, r3, #31
   16bf0:	orr	r2, r2, r3
   16bf4:	str	r2, [sp, #128]	; 0x80
   16bf8:	add	r0, r0, r2
   16bfc:	add	r0, r0, r1
   16c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c04:	lsl	r1, r1, #5
   16c08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c0c:	lsr	r2, r2, #27
   16c10:	orr	r1, r1, r2
   16c14:	add	r0, r0, r1
   16c18:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c1c:	add	r0, r1, r0
   16c20:	str	r0, [fp, #-20]	; 0xffffffec
   16c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c28:	lsl	r0, r0, #30
   16c2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16c30:	lsr	r1, r1, #2
   16c34:	orr	r0, r0, r1
   16c38:	str	r0, [fp, #-28]	; 0xffffffe4
   16c3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16c40:	ldr	r1, [fp, #-12]
   16c44:	ldr	r2, [r1]
   16c48:	add	r0, r2, r0
   16c4c:	str	r0, [r1]
   16c50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c54:	ldr	r1, [fp, #-12]
   16c58:	ldr	r2, [r1, #4]
   16c5c:	add	r0, r2, r0
   16c60:	str	r0, [r1, #4]
   16c64:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16c68:	ldr	r1, [fp, #-12]
   16c6c:	ldr	r2, [r1, #8]
   16c70:	add	r0, r2, r0
   16c74:	str	r0, [r1, #8]
   16c78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c7c:	ldr	r1, [fp, #-12]
   16c80:	ldr	r2, [r1, #12]
   16c84:	add	r0, r2, r0
   16c88:	str	r0, [r1, #12]
   16c8c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c90:	ldr	r1, [fp, #-12]
   16c94:	ldr	r2, [r1, #16]
   16c98:	add	r0, r2, r0
   16c9c:	str	r0, [r1, #16]
   16ca0:	movw	r0, #0
   16ca4:	str	r0, [fp, #-36]	; 0xffffffdc
   16ca8:	str	r0, [fp, #-32]	; 0xffffffe0
   16cac:	str	r0, [fp, #-28]	; 0xffffffe4
   16cb0:	str	r0, [fp, #-24]	; 0xffffffe8
   16cb4:	str	r0, [fp, #-20]	; 0xffffffec
   16cb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cbc:	sub	sp, fp, #8
   16cc0:	pop	{r4, r5, fp, pc}
   16cc4:	push	{fp, lr}
   16cc8:	mov	fp, sp
   16ccc:	sub	sp, sp, #24
   16cd0:	str	r0, [fp, #-4]
   16cd4:	str	r1, [fp, #-8]
   16cd8:	movw	r0, #0
   16cdc:	str	r0, [sp, #12]
   16ce0:	ldr	r0, [sp, #12]
   16ce4:	cmp	r0, #8
   16ce8:	bcs	16d4c <rb_base64_encode@plt+0x5c6c>
   16cec:	ldr	r0, [fp, #-4]
   16cf0:	ldr	r1, [r0, #24]
   16cf4:	ldr	r0, [r0, #28]
   16cf8:	ldr	r2, [sp, #12]
   16cfc:	and	r2, r2, #7
   16d00:	rsb	r2, r2, #7
   16d04:	lsl	r3, r2, #3
   16d08:	mov	ip, #32
   16d0c:	sub	ip, ip, r2, lsl #3
   16d10:	lsr	r1, r1, r3
   16d14:	orr	r1, r1, r0, lsl ip
   16d18:	mvn	r3, #31
   16d1c:	add	r2, r3, r2, lsl #3
   16d20:	cmp	r2, #0
   16d24:	lsrpl	r1, r0, r2
   16d28:	uxtb	r0, r1
   16d2c:	ldr	r1, [sp, #12]
   16d30:	add	r2, sp, #4
   16d34:	add	r1, r2, r1
   16d38:	strb	r0, [r1]
   16d3c:	ldr	r0, [sp, #12]
   16d40:	add	r0, r0, #1
   16d44:	str	r0, [sp, #12]
   16d48:	b	16ce0 <rb_base64_encode@plt+0x5c00>
   16d4c:	ldr	r0, [pc, #192]	; 16e14 <rb_base64_encode@plt+0x5d34>
   16d50:	add	r1, pc, r0
   16d54:	ldr	r0, [fp, #-4]
   16d58:	movw	r2, #1
   16d5c:	bl	13984 <rb_base64_encode@plt+0x28a4>
   16d60:	ldr	r0, [fp, #-4]
   16d64:	ldr	r0, [r0, #24]
   16d68:	and	r0, r0, #504	; 0x1f8
   16d6c:	teq	r0, #448	; 0x1c0
   16d70:	beq	16d90 <rb_base64_encode@plt+0x5cb0>
   16d74:	b	16d78 <rb_base64_encode@plt+0x5c98>
   16d78:	ldr	r0, [pc, #152]	; 16e18 <rb_base64_encode@plt+0x5d38>
   16d7c:	add	r1, pc, r0
   16d80:	ldr	r0, [fp, #-4]
   16d84:	movw	r2, #1
   16d88:	bl	13984 <rb_base64_encode@plt+0x28a4>
   16d8c:	b	16d60 <rb_base64_encode@plt+0x5c80>
   16d90:	add	r1, sp, #4
   16d94:	ldr	r0, [fp, #-4]
   16d98:	movw	r2, #8
   16d9c:	bl	13984 <rb_base64_encode@plt+0x28a4>
   16da0:	movw	r0, #0
   16da4:	str	r0, [sp, #12]
   16da8:	ldr	r0, [sp, #12]
   16dac:	cmp	r0, #20
   16db0:	bcs	16df8 <rb_base64_encode@plt+0x5d18>
   16db4:	ldr	r0, [fp, #-4]
   16db8:	ldr	r1, [sp, #12]
   16dbc:	bic	r2, r1, #3
   16dc0:	ldr	r0, [r0, r2]
   16dc4:	and	r1, r1, #3
   16dc8:	rsb	r1, r1, #3
   16dcc:	lsl	r1, r1, #3
   16dd0:	lsr	r0, r0, r1
   16dd4:	and	r0, r0, #255	; 0xff
   16dd8:	ldr	r1, [fp, #-8]
   16ddc:	ldr	r2, [sp, #12]
   16de0:	add	r1, r1, r2
   16de4:	strb	r0, [r1]
   16de8:	ldr	r0, [sp, #12]
   16dec:	add	r0, r0, #1
   16df0:	str	r0, [sp, #12]
   16df4:	b	16da8 <rb_base64_encode@plt+0x5cc8>
   16df8:	ldr	r0, [fp, #-4]
   16dfc:	movw	r1, #0
   16e00:	and	r1, r1, #255	; 0xff
   16e04:	movw	r2, #96	; 0x60
   16e08:	bl	10f0c <memset@plt>
   16e0c:	mov	sp, fp
   16e10:	pop	{fp, pc}
   16e14:	andeq	r0, r0, r3, ror #8
   16e18:	andeq	r0, r0, r9, lsr r4
   16e1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   16e20:	mov	r7, r0
   16e24:	ldr	r6, [pc, #72]	; 16e74 <rb_base64_encode@plt+0x5d94>
   16e28:	ldr	r5, [pc, #72]	; 16e78 <rb_base64_encode@plt+0x5d98>
   16e2c:	add	r6, pc, r6
   16e30:	add	r5, pc, r5
   16e34:	sub	r6, r6, r5
   16e38:	mov	r8, r1
   16e3c:	mov	r9, r2
   16e40:	bl	10e2c <open@plt-0x20>
   16e44:	asrs	r6, r6, #2
   16e48:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e4c:	mov	r4, #0
   16e50:	add	r4, r4, #1
   16e54:	ldr	r3, [r5], #4
   16e58:	mov	r2, r9
   16e5c:	mov	r1, r8
   16e60:	mov	r0, r7
   16e64:	blx	r3
   16e68:	cmp	r6, r4
   16e6c:	bne	16e50 <rb_base64_encode@plt+0x5d70>
   16e70:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16e74:	andeq	r1, r1, r0, asr #1
   16e78:	strheq	r1, [r1], -r8
   16e7c:	bx	lr

Disassembly of section .fini:

00016e80 <.fini>:
   16e80:	push	{r3, lr}
   16e84:	pop	{r3, pc}
