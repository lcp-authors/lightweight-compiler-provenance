
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf32-littlearm


Disassembly of section .init:

000111c4 <.init>:
   111c4:	push	{r3, lr}
   111c8:	bl	11328 <_start@@Base+0x3c>
   111cc:	pop	{r3, pc}

Disassembly of section .plt:

000111d0 <strstr@plt-0x14>:
   111d0:	push	{lr}		; (str lr, [sp, #-4]!)
   111d4:	ldr	lr, [pc, #4]	; 111e0 <strstr@plt-0x4>
   111d8:	add	lr, pc, lr
   111dc:	ldr	pc, [lr, #8]!
   111e0:	andeq	r5, r1, r0, lsr #28

000111e4 <strstr@plt>:
   111e4:	add	ip, pc, #0, 12
   111e8:	add	ip, ip, #86016	; 0x15000
   111ec:	ldr	pc, [ip, #3616]!	; 0xe20

000111f0 <strcmp@plt>:
   111f0:	add	ip, pc, #0, 12
   111f4:	add	ip, ip, #86016	; 0x15000
   111f8:	ldr	pc, [ip, #3608]!	; 0xe18

000111fc <mprotect@plt>:
   111fc:	add	ip, pc, #0, 12
   11200:	add	ip, ip, #86016	; 0x15000
   11204:	ldr	pc, [ip, #3600]!	; 0xe10

00011208 <free@plt>:
   11208:	add	ip, pc, #0, 12
   1120c:	add	ip, ip, #86016	; 0x15000
   11210:	ldr	pc, [ip, #3592]!	; 0xe08

00011214 <memcpy@plt>:
   11214:	add	ip, pc, #0, 12
   11218:	add	ip, ip, #86016	; 0x15000
   1121c:	ldr	pc, [ip, #3584]!	; 0xe00

00011220 <fn_vv@plt>:
   11220:	add	ip, pc, #0, 12
   11224:	add	ip, ip, #86016	; 0x15000
   11228:	ldr	pc, [ip, #3576]!	; 0xdf8

0001122c <realloc@plt>:
   1122c:	add	ip, pc, #0, 12
   11230:	add	ip, ip, #86016	; 0x15000
   11234:	ldr	pc, [ip, #3568]!	; 0xdf0

00011238 <fn_ii@plt>:
   11238:	add	ip, pc, #0, 12
   1123c:	add	ip, ip, #86016	; 0x15000
   11240:	ldr	pc, [ip, #3560]!	; 0xde8

00011244 <fn_ii_va@plt>:
   11244:	add	ip, pc, #0, 12
   11248:	add	ip, ip, #86016	; 0x15000
   1124c:	ldr	pc, [ip, #3552]!	; 0xde0

00011250 <malloc@plt>:
   11250:	add	ip, pc, #0, 12
   11254:	add	ip, ip, #86016	; 0x15000
   11258:	ldr	pc, [ip, #3544]!	; 0xdd8

0001125c <__libc_start_main@plt>:
   1125c:	add	ip, pc, #0, 12
   11260:	add	ip, ip, #86016	; 0x15000
   11264:	ldr	pc, [ip, #3536]!	; 0xdd0

00011268 <__gmon_start__@plt>:
   11268:	add	ip, pc, #0, 12
   1126c:	add	ip, ip, #86016	; 0x15000
   11270:	ldr	pc, [ip, #3528]!	; 0xdc8

00011274 <strlen@plt>:
   11274:	add	ip, pc, #0, 12
   11278:	add	ip, ip, #86016	; 0x15000
   1127c:	ldr	pc, [ip, #3520]!	; 0xdc0

00011280 <mmap@plt>:
   11280:	add	ip, pc, #0, 12
   11284:	add	ip, ip, #86016	; 0x15000
   11288:	ldr	pc, [ip, #3512]!	; 0xdb8

0001128c <strchr@plt>:
   1128c:	add	ip, pc, #0, 12
   11290:	add	ip, ip, #86016	; 0x15000
   11294:	ldr	pc, [ip, #3504]!	; 0xdb0

00011298 <fprintf@plt>:
   11298:	add	ip, pc, #0, 12
   1129c:	add	ip, ip, #86016	; 0x15000
   112a0:	ldr	pc, [ip, #3496]!	; 0xda8

000112a4 <__errno_location@plt>:
   112a4:	add	ip, pc, #0, 12
   112a8:	add	ip, ip, #86016	; 0x15000
   112ac:	ldr	pc, [ip, #3488]!	; 0xda0

000112b0 <snprintf@plt>:
   112b0:	add	ip, pc, #0, 12
   112b4:	add	ip, ip, #86016	; 0x15000
   112b8:	ldr	pc, [ip, #3480]!	; 0xd98

000112bc <munmap@plt>:
   112bc:	add	ip, pc, #0, 12
   112c0:	add	ip, ip, #86016	; 0x15000
   112c4:	ldr	pc, [ip, #3472]!	; 0xd90

000112c8 <__tls_get_addr@plt>:
   112c8:	add	ip, pc, #0, 12
   112cc:	add	ip, ip, #86016	; 0x15000
   112d0:	ldr	pc, [ip, #3464]!	; 0xd88

000112d4 <strncmp@plt>:
   112d4:	add	ip, pc, #0, 12
   112d8:	add	ip, ip, #86016	; 0x15000
   112dc:	ldr	pc, [ip, #3456]!	; 0xd80

000112e0 <abort@plt>:
   112e0:	add	ip, pc, #0, 12
   112e4:	add	ip, ip, #86016	; 0x15000
   112e8:	ldr	pc, [ip, #3448]!	; 0xd78

Disassembly of section .text:

000112ec <_start@@Base>:
   112ec:	mov	fp, #0
   112f0:	mov	lr, #0
   112f4:	pop	{r1}		; (ldr r1, [sp], #4)
   112f8:	mov	r2, sp
   112fc:	push	{r2}		; (str r2, [sp, #-4]!)
   11300:	push	{r0}		; (str r0, [sp, #-4]!)
   11304:	ldr	ip, [pc, #16]	; 1131c <_start@@Base+0x30>
   11308:	push	{ip}		; (str ip, [sp, #-4]!)
   1130c:	ldr	r0, [pc, #12]	; 11320 <_start@@Base+0x34>
   11310:	ldr	r3, [pc, #12]	; 11324 <_start@@Base+0x38>
   11314:	bl	1125c <__libc_start_main@plt>
   11318:	bl	112e0 <abort@plt>
   1131c:	muleq	r1, ip, r9
   11320:	andeq	r2, r1, ip, ror #10
   11324:	andeq	r5, r1, ip, lsr r9
   11328:	ldr	r3, [pc, #20]	; 11344 <_start@@Base+0x58>
   1132c:	ldr	r2, [pc, #20]	; 11348 <_start@@Base+0x5c>
   11330:	add	r3, pc, r3
   11334:	ldr	r2, [r3, r2]
   11338:	cmp	r2, #0
   1133c:	bxeq	lr
   11340:	b	11268 <__gmon_start__@plt>
   11344:	andeq	r5, r1, r8, asr #25
   11348:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1134c:	ldr	r0, [pc, #24]	; 1136c <_start@@Base+0x80>
   11350:	ldr	r3, [pc, #24]	; 11370 <_start@@Base+0x84>
   11354:	cmp	r3, r0
   11358:	bxeq	lr
   1135c:	ldr	r3, [pc, #16]	; 11374 <_start@@Base+0x88>
   11360:	cmp	r3, #0
   11364:	bxeq	lr
   11368:	bx	r3
   1136c:	ldrdeq	r7, [r2], -r8
   11370:	ldrdeq	r7, [r2], -r8
   11374:	andeq	r0, r0, r0
   11378:	ldr	r0, [pc, #36]	; 113a4 <_start@@Base+0xb8>
   1137c:	ldr	r1, [pc, #36]	; 113a8 <_start@@Base+0xbc>
   11380:	sub	r1, r1, r0
   11384:	asr	r1, r1, #2
   11388:	add	r1, r1, r1, lsr #31
   1138c:	asrs	r1, r1, #1
   11390:	bxeq	lr
   11394:	ldr	r3, [pc, #16]	; 113ac <_start@@Base+0xc0>
   11398:	cmp	r3, #0
   1139c:	bxeq	lr
   113a0:	bx	r3
   113a4:	ldrdeq	r7, [r2], -r8
   113a8:	ldrdeq	r7, [r2], -r8
   113ac:	andeq	r0, r0, r0
   113b0:	push	{r4, lr}
   113b4:	ldr	r4, [pc, #24]	; 113d4 <_start@@Base+0xe8>
   113b8:	ldrb	r3, [r4]
   113bc:	cmp	r3, #0
   113c0:	popne	{r4, pc}
   113c4:	bl	1134c <_start@@Base+0x60>
   113c8:	mov	r3, #1
   113cc:	strb	r3, [r4]
   113d0:	pop	{r4, pc}
   113d4:	ldrdeq	r7, [r2], -r8
   113d8:	b	11378 <_start@@Base+0x8c>
   113dc:	str	fp, [sp, #-8]!
   113e0:	str	lr, [sp, #4]
   113e4:	add	fp, sp, #4
   113e8:	sub	sp, sp, #96	; 0x60
   113ec:	str	r0, [fp, #-96]	; 0xffffffa0
   113f0:	bl	13460 <mmk_matcher_ctx@@Base>
   113f4:	str	r0, [fp, #-24]	; 0xffffffe8
   113f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113fc:	cmp	r3, #0
   11400:	beq	1165c <_start@@Base+0x370>
   11404:	bl	14a58 <mmk_ctx@@Base>
   11408:	mov	r3, r0
   1140c:	mov	r0, r3
   11410:	bl	145f0 <mmk_stub_context@@Base>
   11414:	str	r0, [fp, #-28]	; 0xffffffe4
   11418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1141c:	ldr	r3, [r3]
   11420:	cmp	r3, #0
   11424:	bne	11478 <_start@@Base+0x18c>
   11428:	mov	r0, #44	; 0x2c
   1142c:	bl	15520 <mmk_malloc@@Base>
   11430:	str	r0, [fp, #-32]	; 0xffffffe0
   11434:	bl	15840 <mmk_when_get_result@@Base>
   11438:	mov	r2, r0
   1143c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11440:	add	r3, r3, #8
   11444:	ldrd	r0, [r2]
   11448:	strd	r0, [r3]
   1144c:	ldrd	r0, [r2, #8]
   11450:	strd	r0, [r3, #8]
   11454:	ldr	r2, [r2, #16]
   11458:	str	r2, [r3, #16]
   1145c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11460:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11464:	str	r2, [r3, #40]	; 0x28
   11468:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1146c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11470:	bl	1587c <mmk_when_impl@@Base>
   11474:	b	1164c <_start@@Base+0x360>
   11478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1147c:	ldr	r3, [r3]
   11480:	cmp	r3, #1
   11484:	bne	1164c <_start@@Base+0x360>
   11488:	mov	r3, #0
   1148c:	str	r3, [fp, #-8]
   11490:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11494:	bl	138c4 <mmk_mock_params_begin@@Base>
   11498:	str	r0, [fp, #-12]
   1149c:	b	11604 <_start@@Base+0x318>
   114a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114a4:	str	r3, [fp, #-36]	; 0xffffffdc
   114a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114ac:	ldr	r3, [r3, #8]
   114b0:	cmp	r3, #0
   114b4:	beq	115a4 <_start@@Base+0x2b8>
   114b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114bc:	ldr	r3, [r3, #8]
   114c0:	str	r3, [fp, #-36]	; 0xffffffdc
   114c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114c8:	ldr	r3, [r3]
   114cc:	cmp	r3, #0
   114d0:	beq	115c8 <_start@@Base+0x2dc>
   114d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114d8:	ldr	r3, [r3]
   114dc:	cmp	r3, #0
   114e0:	bge	11564 <_start@@Base+0x278>
   114e4:	ldr	r3, [fp, #-12]
   114e8:	add	r3, r3, #12
   114ec:	sub	r1, fp, #96	; 0x60
   114f0:	mov	r2, #4
   114f4:	mov	r0, r3
   114f8:	bl	15114 <mmk_memcmp@@Base>
   114fc:	str	r0, [fp, #-40]	; 0xffffffd8
   11500:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11504:	cmp	r3, #0
   11508:	bne	11520 <_start@@Base+0x234>
   1150c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11510:	ldr	r3, [r3]
   11514:	and	r3, r3, #2
   11518:	cmp	r3, #0
   1151c:	beq	115e0 <_start@@Base+0x2f4>
   11520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11524:	cmp	r3, #0
   11528:	bge	11540 <_start@@Base+0x254>
   1152c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11530:	ldr	r3, [r3]
   11534:	and	r3, r3, #4
   11538:	cmp	r3, #0
   1153c:	beq	115e8 <_start@@Base+0x2fc>
   11540:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11544:	cmp	r3, #0
   11548:	ble	115c8 <_start@@Base+0x2dc>
   1154c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11550:	ldr	r3, [r3]
   11554:	and	r3, r3, #8
   11558:	cmp	r3, #0
   1155c:	bne	115c8 <_start@@Base+0x2dc>
   11560:	b	115f4 <_start@@Base+0x308>
   11564:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11568:	ldr	r3, [r3]
   1156c:	cmp	r3, #1
   11570:	bne	115c8 <_start@@Base+0x2dc>
   11574:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11578:	bl	135a4 <mmk_matcher_get_predicate@@Base>
   1157c:	str	r0, [fp, #-44]	; 0xffffffd4
   11580:	ldr	r3, [fp, #-12]
   11584:	ldr	r2, [r3, #12]
   11588:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1158c:	mov	r0, r2
   11590:	blx	r3
   11594:	mov	r3, r0
   11598:	cmp	r3, #0
   1159c:	bne	115c8 <_start@@Base+0x2dc>
   115a0:	b	115f4 <_start@@Base+0x308>
   115a4:	ldr	r3, [fp, #-12]
   115a8:	add	r3, r3, #12
   115ac:	sub	r1, fp, #96	; 0x60
   115b0:	mov	r2, #4
   115b4:	mov	r0, r3
   115b8:	bl	15114 <mmk_memcmp@@Base>
   115bc:	mov	r3, r0
   115c0:	cmp	r3, #0
   115c4:	bne	115f0 <_start@@Base+0x304>
   115c8:	ldr	r3, [fp, #-12]
   115cc:	ldr	r3, [r3]
   115d0:	ldr	r2, [fp, #-8]
   115d4:	add	r3, r2, r3
   115d8:	str	r3, [fp, #-8]
   115dc:	b	115f4 <_start@@Base+0x308>
   115e0:	nop	{0}
   115e4:	b	115f4 <_start@@Base+0x308>
   115e8:	nop	{0}
   115ec:	b	115f4 <_start@@Base+0x308>
   115f0:	nop	{0}
   115f4:	ldr	r1, [fp, #-12]
   115f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   115fc:	bl	13918 <mmk_mock_params_next@@Base>
   11600:	str	r0, [fp, #-12]
   11604:	ldr	r3, [fp, #-12]
   11608:	cmp	r3, #0
   1160c:	bne	114a0 <_start@@Base+0x1b4>
   11610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11614:	str	r3, [fp, #-16]
   11618:	b	11638 <_start@@Base+0x34c>
   1161c:	ldr	r3, [fp, #-16]
   11620:	ldr	r3, [r3, #8]
   11624:	str	r3, [fp, #-48]	; 0xffffffd0
   11628:	ldr	r0, [fp, #-16]
   1162c:	bl	155c8 <mmk_free@@Base>
   11630:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11634:	str	r3, [fp, #-16]
   11638:	ldr	r3, [fp, #-16]
   1163c:	cmp	r3, #0
   11640:	bne	1161c <_start@@Base+0x330>
   11644:	ldr	r0, [fp, #-8]
   11648:	bl	14c90 <mmk_verify_set_times@@Base>
   1164c:	ldr	r3, [pc, #652]	; 118e0 <_start@@Base+0x5f4>
   11650:	add	r3, pc, r3
   11654:	ldr	r3, [r3]
   11658:	b	118cc <_start@@Base+0x5e0>
   1165c:	sub	r1, fp, #88	; 0x58
   11660:	mov	r2, #0
   11664:	mov	r3, #0
   11668:	strd	r2, [r1]
   1166c:	strd	r2, [r1, #8]
   11670:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11674:	str	r3, [fp, #-76]	; 0xffffffb4
   11678:	sub	r3, fp, #88	; 0x58
   1167c:	str	r3, [fp, #-52]	; 0xffffffcc
   11680:	mov	r1, #16
   11684:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11688:	bl	14ec8 <mmk_verify_register_call@@Base>
   1168c:	bl	13990 <mmk_mock_get_params@@Base>
   11690:	str	r0, [fp, #-20]	; 0xffffffec
   11694:	b	118b4 <_start@@Base+0x5c8>
   11698:	ldr	r3, [fp, #-20]	; 0xffffffec
   1169c:	str	r3, [fp, #-56]	; 0xffffffc8
   116a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   116a4:	ldr	r3, [r3]
   116a8:	str	r3, [fp, #-60]	; 0xffffffc4
   116ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116b0:	ldr	r3, [r3, #8]
   116b4:	cmp	r3, #0
   116b8:	beq	117a0 <_start@@Base+0x4b4>
   116bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116c0:	ldr	r3, [r3, #8]
   116c4:	str	r3, [fp, #-60]	; 0xffffffc4
   116c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116cc:	ldr	r3, [r3]
   116d0:	cmp	r3, #0
   116d4:	beq	117c4 <_start@@Base+0x4d8>
   116d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116dc:	ldr	r3, [r3]
   116e0:	cmp	r3, #0
   116e4:	bge	11764 <_start@@Base+0x478>
   116e8:	sub	r1, fp, #96	; 0x60
   116ec:	sub	r3, fp, #96	; 0x60
   116f0:	mov	r2, #4
   116f4:	mov	r0, r3
   116f8:	bl	15114 <mmk_memcmp@@Base>
   116fc:	str	r0, [fp, #-64]	; 0xffffffc0
   11700:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11704:	cmp	r3, #0
   11708:	bne	11720 <_start@@Base+0x434>
   1170c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11710:	ldr	r3, [r3]
   11714:	and	r3, r3, #2
   11718:	cmp	r3, #0
   1171c:	beq	1189c <_start@@Base+0x5b0>
   11720:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11724:	cmp	r3, #0
   11728:	bge	11740 <_start@@Base+0x454>
   1172c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11730:	ldr	r3, [r3]
   11734:	and	r3, r3, #4
   11738:	cmp	r3, #0
   1173c:	beq	1189c <_start@@Base+0x5b0>
   11740:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11744:	cmp	r3, #0
   11748:	ble	117c4 <_start@@Base+0x4d8>
   1174c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11750:	ldr	r3, [r3]
   11754:	and	r3, r3, #8
   11758:	cmp	r3, #0
   1175c:	bne	117c4 <_start@@Base+0x4d8>
   11760:	b	1189c <_start@@Base+0x5b0>
   11764:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11768:	ldr	r3, [r3]
   1176c:	cmp	r3, #1
   11770:	bne	117c4 <_start@@Base+0x4d8>
   11774:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11778:	bl	135a4 <mmk_matcher_get_predicate@@Base>
   1177c:	str	r0, [fp, #-68]	; 0xffffffbc
   11780:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11784:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11788:	mov	r0, r2
   1178c:	blx	r3
   11790:	mov	r3, r0
   11794:	cmp	r3, #0
   11798:	bne	117c4 <_start@@Base+0x4d8>
   1179c:	b	118a8 <_start@@Base+0x5bc>
   117a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117a4:	add	r1, r3, #40	; 0x28
   117a8:	sub	r3, fp, #96	; 0x60
   117ac:	mov	r2, #4
   117b0:	mov	r0, r3
   117b4:	bl	15114 <mmk_memcmp@@Base>
   117b8:	mov	r3, r0
   117bc:	cmp	r3, #0
   117c0:	bne	118a4 <_start@@Base+0x5b8>
   117c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117c8:	ldr	r3, [r3, #12]
   117cc:	cmp	r3, #0
   117d0:	beq	117e8 <_start@@Base+0x4fc>
   117d4:	bl	112a4 <__errno_location@plt>
   117d8:	mov	r2, r0
   117dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117e0:	ldr	r3, [r3, #12]
   117e4:	str	r3, [r2]
   117e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117ec:	ldr	r3, [r3, #20]
   117f0:	cmp	r3, #0
   117f4:	beq	11828 <_start@@Base+0x53c>
   117f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   117fc:	ldr	r3, [r3, #16]
   11800:	cmp	r3, #0
   11804:	bne	11828 <_start@@Base+0x53c>
   11808:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1180c:	ldr	r3, [r3, #20]
   11810:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11814:	mov	r0, r2
   11818:	blx	r3
   1181c:	str	r0, [fp, #-72]	; 0xffffffb8
   11820:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11824:	b	118cc <_start@@Base+0x5e0>
   11828:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1182c:	ldr	r3, [r3, #20]
   11830:	cmp	r3, #0
   11834:	beq	1186c <_start@@Base+0x580>
   11838:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1183c:	ldr	r3, [r3, #16]
   11840:	cmp	r3, #0
   11844:	beq	1186c <_start@@Base+0x580>
   11848:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1184c:	ldr	r3, [r3, #20]
   11850:	ldr	r2, [fp, #-96]	; 0xffffffa0
   11854:	mov	r0, r2
   11858:	blx	r3
   1185c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11860:	ldr	r3, [r3, #16]
   11864:	ldr	r3, [r3]
   11868:	b	118cc <_start@@Base+0x5e0>
   1186c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11870:	ldr	r3, [r3, #16]
   11874:	cmp	r3, #0
   11878:	beq	1188c <_start@@Base+0x5a0>
   1187c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11880:	ldr	r3, [r3, #16]
   11884:	ldr	r3, [r3]
   11888:	b	118cc <_start@@Base+0x5e0>
   1188c:	ldr	r3, [pc, #80]	; 118e4 <_start@@Base+0x5f8>
   11890:	add	r3, pc, r3
   11894:	ldr	r3, [r3]
   11898:	b	118cc <_start@@Base+0x5e0>
   1189c:	nop	{0}
   118a0:	b	118a8 <_start@@Base+0x5bc>
   118a4:	nop	{0}
   118a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   118ac:	ldr	r3, [r3, #4]
   118b0:	str	r3, [fp, #-20]	; 0xffffffec
   118b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   118b8:	cmp	r3, #0
   118bc:	bne	11698 <_start@@Base+0x3ac>
   118c0:	ldr	r3, [pc, #32]	; 118e8 <_start@@Base+0x5fc>
   118c4:	add	r3, pc, r3
   118c8:	ldr	r3, [r3]
   118cc:	mov	r0, r3
   118d0:	sub	sp, fp, #4
   118d4:	ldr	fp, [sp]
   118d8:	add	sp, sp, #4
   118dc:	pop	{pc}		; (ldr pc, [sp], #4)
   118e0:	andeq	r5, r1, r8, lsl #21
   118e4:	andeq	r5, r1, r8, asr #16
   118e8:	andeq	r5, r1, r4, lsl r8
   118ec:	str	fp, [sp, #-8]!
   118f0:	str	lr, [sp, #4]
   118f4:	add	fp, sp, #4
   118f8:	sub	sp, sp, #8
   118fc:	str	r0, [fp, #-8]
   11900:	ldr	r3, [pc, #36]	; 1192c <_start@@Base+0x640>
   11904:	add	r3, pc, r3
   11908:	mov	r1, r3
   1190c:	ldr	r0, [fp, #-8]
   11910:	bl	135cc <mmk_mock_create_internal@@Base>
   11914:	mov	r3, r0
   11918:	mov	r0, r3
   1191c:	sub	sp, fp, #4
   11920:	ldr	fp, [sp]
   11924:	add	sp, sp, #4
   11928:	pop	{pc}		; (ldr pc, [sp], #4)
   1192c:			; <UNDEFINED> instruction: 0xfffffad0
   11930:	str	fp, [sp, #-8]!
   11934:	str	lr, [sp, #4]
   11938:	add	fp, sp, #4
   1193c:	sub	sp, sp, #64	; 0x40
   11940:	bl	13460 <mmk_matcher_ctx@@Base>
   11944:	str	r0, [fp, #-20]	; 0xffffffec
   11948:	ldr	r3, [fp, #-20]	; 0xffffffec
   1194c:	cmp	r3, #0
   11950:	beq	11a60 <_start@@Base+0x774>
   11954:	bl	14a58 <mmk_ctx@@Base>
   11958:	mov	r3, r0
   1195c:	mov	r0, r3
   11960:	bl	145f0 <mmk_stub_context@@Base>
   11964:	str	r0, [fp, #-24]	; 0xffffffe8
   11968:	ldr	r3, [fp, #-20]	; 0xffffffec
   1196c:	ldr	r3, [r3]
   11970:	cmp	r3, #0
   11974:	bne	119bc <_start@@Base+0x6d0>
   11978:	mov	r0, #40	; 0x28
   1197c:	bl	15520 <mmk_malloc@@Base>
   11980:	str	r0, [fp, #-28]	; 0xffffffe4
   11984:	bl	15840 <mmk_when_get_result@@Base>
   11988:	mov	r2, r0
   1198c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11990:	add	r3, r3, #8
   11994:	ldrd	r0, [r2]
   11998:	strd	r0, [r3]
   1199c:	ldrd	r0, [r2, #8]
   119a0:	strd	r0, [r3, #8]
   119a4:	ldr	r2, [r2, #16]
   119a8:	str	r2, [r3, #16]
   119ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   119b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119b4:	bl	1587c <mmk_when_impl@@Base>
   119b8:	b	11b48 <_start@@Base+0x85c>
   119bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   119c0:	ldr	r3, [r3]
   119c4:	cmp	r3, #1
   119c8:	bne	11b48 <_start@@Base+0x85c>
   119cc:	mov	r3, #0
   119d0:	str	r3, [fp, #-8]
   119d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119d8:	bl	138c4 <mmk_mock_params_begin@@Base>
   119dc:	str	r0, [fp, #-12]
   119e0:	b	11a14 <_start@@Base+0x728>
   119e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   119e8:	str	r3, [fp, #-32]	; 0xffffffe0
   119ec:	ldr	r3, [fp, #-12]
   119f0:	ldr	r3, [r3]
   119f4:	ldr	r2, [fp, #-8]
   119f8:	add	r3, r2, r3
   119fc:	str	r3, [fp, #-8]
   11a00:	nop	{0}
   11a04:	ldr	r1, [fp, #-12]
   11a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a0c:	bl	13918 <mmk_mock_params_next@@Base>
   11a10:	str	r0, [fp, #-12]
   11a14:	ldr	r3, [fp, #-12]
   11a18:	cmp	r3, #0
   11a1c:	bne	119e4 <_start@@Base+0x6f8>
   11a20:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a24:	str	r3, [fp, #-16]
   11a28:	b	11a48 <_start@@Base+0x75c>
   11a2c:	ldr	r3, [fp, #-16]
   11a30:	ldr	r3, [r3, #8]
   11a34:	str	r3, [fp, #-36]	; 0xffffffdc
   11a38:	ldr	r0, [fp, #-16]
   11a3c:	bl	155c8 <mmk_free@@Base>
   11a40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11a44:	str	r3, [fp, #-16]
   11a48:	ldr	r3, [fp, #-16]
   11a4c:	cmp	r3, #0
   11a50:	bne	11a2c <_start@@Base+0x740>
   11a54:	ldr	r0, [fp, #-8]
   11a58:	bl	14c90 <mmk_verify_set_times@@Base>
   11a5c:	b	11b48 <_start@@Base+0x85c>
   11a60:	sub	r1, fp, #64	; 0x40
   11a64:	mov	r2, #0
   11a68:	mov	r3, #0
   11a6c:	strd	r2, [r1]
   11a70:	mov	r3, r2
   11a74:	str	r3, [r1, #8]
   11a78:	sub	r3, fp, #64	; 0x40
   11a7c:	str	r3, [fp, #-40]	; 0xffffffd8
   11a80:	mov	r1, #12
   11a84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11a88:	bl	14ec8 <mmk_verify_register_call@@Base>
   11a8c:	bl	13990 <mmk_mock_get_params@@Base>
   11a90:	str	r0, [fp, #-44]	; 0xffffffd4
   11a94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11a98:	cmp	r3, #0
   11a9c:	beq	11b50 <_start@@Base+0x864>
   11aa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11aa4:	str	r3, [fp, #-48]	; 0xffffffd0
   11aa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11aac:	ldr	r3, [r3]
   11ab0:	str	r3, [fp, #-52]	; 0xffffffcc
   11ab4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11ab8:	ldr	r3, [r3, #12]
   11abc:	cmp	r3, #0
   11ac0:	beq	11ad8 <_start@@Base+0x7ec>
   11ac4:	bl	112a4 <__errno_location@plt>
   11ac8:	mov	r2, r0
   11acc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11ad0:	ldr	r3, [r3, #12]
   11ad4:	str	r3, [r2]
   11ad8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11adc:	ldr	r3, [r3, #20]
   11ae0:	cmp	r3, #0
   11ae4:	beq	11b08 <_start@@Base+0x81c>
   11ae8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11aec:	ldr	r3, [r3, #16]
   11af0:	cmp	r3, #0
   11af4:	bne	11b08 <_start@@Base+0x81c>
   11af8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11afc:	ldr	r3, [r3, #20]
   11b00:	blx	r3
   11b04:	b	11b54 <_start@@Base+0x868>
   11b08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b0c:	ldr	r3, [r3, #20]
   11b10:	cmp	r3, #0
   11b14:	beq	11b38 <_start@@Base+0x84c>
   11b18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b1c:	ldr	r3, [r3, #16]
   11b20:	cmp	r3, #0
   11b24:	beq	11b38 <_start@@Base+0x84c>
   11b28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b2c:	ldr	r3, [r3, #20]
   11b30:	blx	r3
   11b34:	b	11b54 <_start@@Base+0x868>
   11b38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11b3c:	ldr	r3, [r3, #16]
   11b40:	cmp	r3, #0
   11b44:	b	11b54 <_start@@Base+0x868>
   11b48:	nop	{0}
   11b4c:	b	11b54 <_start@@Base+0x868>
   11b50:	nop	{0}
   11b54:	sub	sp, fp, #4
   11b58:	ldr	fp, [sp]
   11b5c:	add	sp, sp, #4
   11b60:	pop	{pc}		; (ldr pc, [sp], #4)
   11b64:	str	fp, [sp, #-8]!
   11b68:	str	lr, [sp, #4]
   11b6c:	add	fp, sp, #4
   11b70:	sub	sp, sp, #8
   11b74:	str	r0, [fp, #-8]
   11b78:	ldr	r3, [pc, #36]	; 11ba4 <_start@@Base+0x8b8>
   11b7c:	add	r3, pc, r3
   11b80:	mov	r1, r3
   11b84:	ldr	r0, [fp, #-8]
   11b88:	bl	135cc <mmk_mock_create_internal@@Base>
   11b8c:	mov	r3, r0
   11b90:	mov	r0, r3
   11b94:	sub	sp, fp, #4
   11b98:	ldr	fp, [sp]
   11b9c:	add	sp, sp, #4
   11ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ba4:			; <UNDEFINED> instruction: 0xfffffdac
   11ba8:	str	r4, [sp, #-12]!
   11bac:	str	fp, [sp, #4]
   11bb0:	str	lr, [sp, #8]
   11bb4:	add	fp, sp, #8
   11bb8:	sub	sp, sp, #36	; 0x24
   11bbc:	str	r0, [fp, #-32]	; 0xffffffe0
   11bc0:	str	r1, [fp, #-36]	; 0xffffffdc
   11bc4:	str	r2, [fp, #-40]	; 0xffffffd8
   11bc8:	str	r3, [fp, #-44]	; 0xffffffd4
   11bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bd0:	cmp	r3, #0
   11bd4:	bgt	11be0 <_start@@Base+0x8f4>
   11bd8:	mov	r3, #0
   11bdc:	b	11cb0 <_start@@Base+0x9c4>
   11be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11be4:	lsl	r3, r3, #2
   11be8:	mov	r0, r3
   11bec:	bl	15520 <mmk_malloc@@Base>
   11bf0:	str	r0, [fp, #-20]	; 0xffffffec
   11bf4:	mov	r3, #0
   11bf8:	str	r3, [fp, #-16]
   11bfc:	b	11c84 <_start@@Base+0x998>
   11c00:	ldr	r3, [fp, #-16]
   11c04:	lsl	r3, r3, #2
   11c08:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c0c:	add	r4, r2, r3
   11c10:	mov	r0, #8
   11c14:	bl	15520 <mmk_malloc@@Base>
   11c18:	mov	r3, r0
   11c1c:	str	r3, [r4]
   11c20:	ldr	r3, [fp, #-16]
   11c24:	lsl	r3, r3, #2
   11c28:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c2c:	add	r3, r2, r3
   11c30:	ldr	r3, [r3]
   11c34:	mov	r2, #4
   11c38:	str	r2, [r3]
   11c3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c40:	add	r2, r3, #4
   11c44:	str	r2, [fp, #-36]	; 0xffffffdc
   11c48:	ldr	r3, [r3]
   11c4c:	str	r3, [fp, #-24]	; 0xffffffe8
   11c50:	ldr	r3, [fp, #-16]
   11c54:	lsl	r3, r3, #2
   11c58:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c5c:	add	r3, r2, r3
   11c60:	ldr	r3, [r3]
   11c64:	add	r3, r3, #4
   11c68:	sub	r1, fp, #24
   11c6c:	mov	r2, #4
   11c70:	mov	r0, r3
   11c74:	bl	151c4 <mmk_memcpy@@Base>
   11c78:	ldr	r3, [fp, #-16]
   11c7c:	add	r3, r3, #1
   11c80:	str	r3, [fp, #-16]
   11c84:	ldr	r2, [fp, #-16]
   11c88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c8c:	cmp	r2, r3
   11c90:	blt	11c00 <_start@@Base+0x914>
   11c94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   11c98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11c9c:	str	r2, [r3]
   11ca0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11ca4:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ca8:	str	r2, [r3]
   11cac:	mov	r3, #1
   11cb0:	mov	r0, r3
   11cb4:	sub	sp, fp, #8
   11cb8:	ldr	r4, [sp]
   11cbc:	ldr	fp, [sp, #4]
   11cc0:	add	sp, sp, #8
   11cc4:	pop	{pc}		; (ldr pc, [sp], #4)
   11cc8:	push	{r0, r1, r2, r3}
   11ccc:	str	r4, [sp, #-12]!
   11cd0:	str	fp, [sp, #4]
   11cd4:	str	lr, [sp, #8]
   11cd8:	add	fp, sp, #8
   11cdc:	sub	sp, sp, #156	; 0x9c
   11ce0:	ldr	r3, [pc, #2052]	; 124ec <_start@@Base+0x1200>
   11ce4:	add	r3, pc, r3
   11ce8:	str	r3, [fp, #-40]	; 0xffffffd8
   11cec:	add	r3, fp, #8
   11cf0:	str	r3, [fp, #-136]	; 0xffffff78
   11cf4:	bl	13460 <mmk_matcher_ctx@@Base>
   11cf8:	str	r0, [fp, #-44]	; 0xffffffd4
   11cfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11d00:	cmp	r3, #0
   11d04:	beq	121e4 <_start@@Base+0xef8>
   11d08:	bl	14a58 <mmk_ctx@@Base>
   11d0c:	mov	r3, r0
   11d10:	mov	r0, r3
   11d14:	bl	145f0 <mmk_stub_context@@Base>
   11d18:	str	r0, [fp, #-48]	; 0xffffffd0
   11d1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11d20:	ldr	r3, [r3]
   11d24:	cmp	r3, #0
   11d28:	bne	11dd4 <_start@@Base+0xae8>
   11d2c:	mov	r0, #44	; 0x2c
   11d30:	bl	15520 <mmk_malloc@@Base>
   11d34:	str	r0, [fp, #-52]	; 0xffffffcc
   11d38:	bl	15840 <mmk_when_get_result@@Base>
   11d3c:	mov	r2, r0
   11d40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11d44:	add	r3, r3, #8
   11d48:	ldrd	r0, [r2]
   11d4c:	strd	r0, [r3]
   11d50:	ldrd	r0, [r2, #8]
   11d54:	strd	r0, [r3, #8]
   11d58:	ldr	r2, [r2, #16]
   11d5c:	str	r2, [r3, #16]
   11d60:	ldr	r2, [fp, #4]
   11d64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11d68:	str	r2, [r3, #40]	; 0x28
   11d6c:	mov	r3, #0
   11d70:	str	r3, [fp, #-144]	; 0xffffff70
   11d74:	mov	r3, #0
   11d78:	str	r3, [fp, #-148]	; 0xffffff6c
   11d7c:	ldr	r3, [fp, #-136]	; 0xffffff78
   11d80:	str	r3, [fp, #-140]	; 0xffffff74
   11d84:	ldr	r0, [fp, #4]
   11d88:	sub	r3, fp, #148	; 0x94
   11d8c:	sub	r2, fp, #144	; 0x90
   11d90:	ldr	r4, [fp, #-40]	; 0xffffffd8
   11d94:	ldr	r1, [fp, #-140]	; 0xffffff74
   11d98:	blx	r4
   11d9c:	str	r0, [fp, #-56]	; 0xffffffc8
   11da0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11da4:	cmp	r3, #0
   11da8:	beq	11dc4 <_start@@Base+0xad8>
   11dac:	ldr	r2, [fp, #-144]	; 0xffffff70
   11db0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11db4:	str	r2, [r3, #32]
   11db8:	ldr	r2, [fp, #-148]	; 0xffffff6c
   11dbc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11dc0:	str	r2, [r3, #36]	; 0x24
   11dc4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   11dc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11dcc:	bl	1587c <mmk_when_impl@@Base>
   11dd0:	b	121d4 <_start@@Base+0xee8>
   11dd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11dd8:	ldr	r3, [r3]
   11ddc:	cmp	r3, #1
   11de0:	bne	121d4 <_start@@Base+0xee8>
   11de4:	mov	r3, #0
   11de8:	str	r3, [fp, #-16]
   11dec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11df0:	bl	138c4 <mmk_mock_params_begin@@Base>
   11df4:	str	r0, [fp, #-20]	; 0xffffffec
   11df8:	b	1218c <_start@@Base+0xea0>
   11dfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11e00:	str	r3, [fp, #-24]	; 0xffffffe8
   11e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e08:	ldr	r3, [r3, #8]
   11e0c:	cmp	r3, #0
   11e10:	beq	11f00 <_start@@Base+0xc14>
   11e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e18:	ldr	r3, [r3, #8]
   11e1c:	str	r3, [fp, #-24]	; 0xffffffe8
   11e20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e24:	ldr	r3, [r3]
   11e28:	cmp	r3, #0
   11e2c:	beq	11f24 <_start@@Base+0xc38>
   11e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e34:	ldr	r3, [r3]
   11e38:	cmp	r3, #0
   11e3c:	bge	11ec0 <_start@@Base+0xbd4>
   11e40:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e44:	add	r3, r3, #12
   11e48:	mov	r2, #4
   11e4c:	add	r1, fp, #4
   11e50:	mov	r0, r3
   11e54:	bl	15114 <mmk_memcmp@@Base>
   11e58:	str	r0, [fp, #-60]	; 0xffffffc4
   11e5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11e60:	cmp	r3, #0
   11e64:	bne	11e7c <_start@@Base+0xb90>
   11e68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e6c:	ldr	r3, [r3]
   11e70:	and	r3, r3, #2
   11e74:	cmp	r3, #0
   11e78:	beq	12140 <_start@@Base+0xe54>
   11e7c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11e80:	cmp	r3, #0
   11e84:	bge	11e9c <_start@@Base+0xbb0>
   11e88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e8c:	ldr	r3, [r3]
   11e90:	and	r3, r3, #4
   11e94:	cmp	r3, #0
   11e98:	beq	12148 <_start@@Base+0xe5c>
   11e9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11ea0:	cmp	r3, #0
   11ea4:	ble	11f24 <_start@@Base+0xc38>
   11ea8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11eac:	ldr	r3, [r3]
   11eb0:	and	r3, r3, #8
   11eb4:	cmp	r3, #0
   11eb8:	bne	11f24 <_start@@Base+0xc38>
   11ebc:	b	1217c <_start@@Base+0xe90>
   11ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ec4:	ldr	r3, [r3]
   11ec8:	cmp	r3, #1
   11ecc:	bne	11f24 <_start@@Base+0xc38>
   11ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ed4:	bl	135a4 <mmk_matcher_get_predicate@@Base>
   11ed8:	str	r0, [fp, #-64]	; 0xffffffc0
   11edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ee0:	ldr	r2, [r3, #12]
   11ee4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11ee8:	mov	r0, r2
   11eec:	blx	r3
   11ef0:	mov	r3, r0
   11ef4:	cmp	r3, #0
   11ef8:	bne	11f24 <_start@@Base+0xc38>
   11efc:	b	1217c <_start@@Base+0xe90>
   11f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f04:	add	r3, r3, #12
   11f08:	mov	r2, #4
   11f0c:	add	r1, fp, #4
   11f10:	mov	r0, r3
   11f14:	bl	15114 <mmk_memcmp@@Base>
   11f18:	mov	r3, r0
   11f1c:	cmp	r3, #0
   11f20:	bne	12150 <_start@@Base+0xe64>
   11f24:	mov	r3, #0
   11f28:	str	r3, [fp, #-152]	; 0xffffff68
   11f2c:	mov	r3, #0
   11f30:	str	r3, [fp, #-156]	; 0xffffff64
   11f34:	ldr	r3, [fp, #-136]	; 0xffffff78
   11f38:	str	r3, [fp, #-140]	; 0xffffff74
   11f3c:	ldr	r0, [fp, #4]
   11f40:	sub	r3, fp, #156	; 0x9c
   11f44:	sub	r2, fp, #152	; 0x98
   11f48:	ldr	r4, [fp, #-40]	; 0xffffffd8
   11f4c:	ldr	r1, [fp, #-140]	; 0xffffff74
   11f50:	blx	r4
   11f54:	str	r0, [fp, #-68]	; 0xffffffbc
   11f58:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11f5c:	cmp	r3, #0
   11f60:	beq	12158 <_start@@Base+0xe6c>
   11f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f68:	ldr	r2, [r3, #4]
   11f6c:	ldr	r3, [fp, #-152]	; 0xffffff68
   11f70:	cmp	r2, r3
   11f74:	bne	12158 <_start@@Base+0xe6c>
   11f78:	mov	r3, #0
   11f7c:	str	r3, [fp, #-28]	; 0xffffffe4
   11f80:	b	1210c <_start@@Base+0xe20>
   11f84:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f88:	ldr	r2, [r3, #8]
   11f8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f90:	lsl	r3, r3, #2
   11f94:	add	r3, r2, r3
   11f98:	ldr	r3, [r3]
   11f9c:	str	r3, [fp, #-72]	; 0xffffffb8
   11fa0:	ldr	r2, [fp, #-156]	; 0xffffff64
   11fa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11fa8:	lsl	r3, r3, #2
   11fac:	add	r3, r2, r3
   11fb0:	ldr	r3, [r3]
   11fb4:	str	r3, [fp, #-76]	; 0xffffffb4
   11fb8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11fbc:	ldr	r2, [r3]
   11fc0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11fc4:	ldr	r3, [r3]
   11fc8:	cmp	r2, r3
   11fcc:	bne	12160 <_start@@Base+0xe74>
   11fd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fd4:	ldr	r3, [r3, #8]
   11fd8:	cmp	r3, #0
   11fdc:	beq	120cc <_start@@Base+0xde0>
   11fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fe4:	ldr	r3, [r3, #8]
   11fe8:	str	r3, [fp, #-24]	; 0xffffffe8
   11fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ff0:	ldr	r3, [r3]
   11ff4:	cmp	r3, #0
   11ff8:	beq	120f8 <_start@@Base+0xe0c>
   11ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12000:	ldr	r3, [r3]
   12004:	cmp	r3, #0
   12008:	bge	12094 <_start@@Base+0xda8>
   1200c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12010:	add	r0, r3, #4
   12014:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12018:	add	r1, r3, #4
   1201c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12020:	ldr	r3, [r3]
   12024:	mov	r2, r3
   12028:	bl	15114 <mmk_memcmp@@Base>
   1202c:	str	r0, [fp, #-80]	; 0xffffffb0
   12030:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12034:	cmp	r3, #0
   12038:	bne	12050 <_start@@Base+0xd64>
   1203c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12040:	ldr	r3, [r3]
   12044:	and	r3, r3, #2
   12048:	cmp	r3, #0
   1204c:	beq	12168 <_start@@Base+0xe7c>
   12050:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12054:	cmp	r3, #0
   12058:	bge	12070 <_start@@Base+0xd84>
   1205c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12060:	ldr	r3, [r3]
   12064:	and	r3, r3, #4
   12068:	cmp	r3, #0
   1206c:	beq	12170 <_start@@Base+0xe84>
   12070:	ldr	r3, [fp, #-80]	; 0xffffffb0
   12074:	cmp	r3, #0
   12078:	ble	120f8 <_start@@Base+0xe0c>
   1207c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12080:	ldr	r3, [r3]
   12084:	and	r3, r3, #8
   12088:	cmp	r3, #0
   1208c:	bne	120f8 <_start@@Base+0xe0c>
   12090:	b	1217c <_start@@Base+0xe90>
   12094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12098:	ldr	r3, [r3]
   1209c:	cmp	r3, #1
   120a0:	bne	120f8 <_start@@Base+0xe0c>
   120a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120a8:	bl	135a4 <mmk_matcher_get_predicate@@Base>
   120ac:	str	r0, [fp, #-84]	; 0xffffffac
   120b0:	ldr	r3, [fp, #-84]	; 0xffffffac
   120b4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   120b8:	blx	r3
   120bc:	mov	r3, r0
   120c0:	cmp	r3, #0
   120c4:	bne	120f8 <_start@@Base+0xe0c>
   120c8:	b	1217c <_start@@Base+0xe90>
   120cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   120d0:	add	r0, r3, #4
   120d4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   120d8:	add	r1, r3, #4
   120dc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   120e0:	ldr	r3, [r3]
   120e4:	mov	r2, r3
   120e8:	bl	15114 <mmk_memcmp@@Base>
   120ec:	mov	r3, r0
   120f0:	cmp	r3, #0
   120f4:	bne	12178 <_start@@Base+0xe8c>
   120f8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   120fc:	bl	155c8 <mmk_free@@Base>
   12100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12104:	add	r3, r3, #1
   12108:	str	r3, [fp, #-28]	; 0xffffffe4
   1210c:	ldr	r3, [fp, #-152]	; 0xffffff68
   12110:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12114:	cmp	r2, r3
   12118:	bcc	11f84 <_start@@Base+0xc98>
   1211c:	ldr	r3, [fp, #-156]	; 0xffffff64
   12120:	mov	r0, r3
   12124:	bl	155c8 <mmk_free@@Base>
   12128:	ldr	r3, [fp, #-20]	; 0xffffffec
   1212c:	ldr	r3, [r3]
   12130:	ldr	r2, [fp, #-16]
   12134:	add	r3, r2, r3
   12138:	str	r3, [fp, #-16]
   1213c:	b	1217c <_start@@Base+0xe90>
   12140:	nop	{0}
   12144:	b	1217c <_start@@Base+0xe90>
   12148:	nop	{0}
   1214c:	b	1217c <_start@@Base+0xe90>
   12150:	nop	{0}
   12154:	b	1217c <_start@@Base+0xe90>
   12158:	nop	{0}
   1215c:	b	1217c <_start@@Base+0xe90>
   12160:	nop	{0}
   12164:	b	1217c <_start@@Base+0xe90>
   12168:	nop	{0}
   1216c:	b	1217c <_start@@Base+0xe90>
   12170:	nop	{0}
   12174:	b	1217c <_start@@Base+0xe90>
   12178:	nop	{0}
   1217c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12180:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12184:	bl	13918 <mmk_mock_params_next@@Base>
   12188:	str	r0, [fp, #-20]	; 0xffffffec
   1218c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12190:	cmp	r3, #0
   12194:	bne	11dfc <_start@@Base+0xb10>
   12198:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1219c:	str	r3, [fp, #-32]	; 0xffffffe0
   121a0:	b	121c0 <_start@@Base+0xed4>
   121a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121a8:	ldr	r3, [r3, #8]
   121ac:	str	r3, [fp, #-88]	; 0xffffffa8
   121b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   121b4:	bl	155c8 <mmk_free@@Base>
   121b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   121bc:	str	r3, [fp, #-32]	; 0xffffffe0
   121c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   121c4:	cmp	r3, #0
   121c8:	bne	121a4 <_start@@Base+0xeb8>
   121cc:	ldr	r0, [fp, #-16]
   121d0:	bl	14c90 <mmk_verify_set_times@@Base>
   121d4:	ldr	r3, [pc, #788]	; 124f0 <_start@@Base+0x1204>
   121d8:	add	r3, pc, r3
   121dc:	ldr	r3, [r3]
   121e0:	b	124cc <_start@@Base+0x11e0>
   121e4:	sub	r1, fp, #132	; 0x84
   121e8:	mov	r2, #0
   121ec:	mov	r3, #0
   121f0:	strd	r2, [r1]
   121f4:	strd	r2, [r1, #8]
   121f8:	ldr	r3, [fp, #4]
   121fc:	str	r3, [fp, #-120]	; 0xffffff88
   12200:	sub	r3, fp, #132	; 0x84
   12204:	str	r3, [fp, #-92]	; 0xffffffa4
   12208:	mov	r3, #0
   1220c:	str	r3, [fp, #-160]	; 0xffffff60
   12210:	mov	r3, #0
   12214:	str	r3, [fp, #-164]	; 0xffffff5c
   12218:	ldr	r3, [fp, #-136]	; 0xffffff78
   1221c:	str	r3, [fp, #-140]	; 0xffffff74
   12220:	ldr	r0, [fp, #4]
   12224:	sub	r3, fp, #164	; 0xa4
   12228:	sub	r2, fp, #160	; 0xa0
   1222c:	ldr	r4, [fp, #-40]	; 0xffffffd8
   12230:	ldr	r1, [fp, #-140]	; 0xffffff74
   12234:	blx	r4
   12238:	str	r0, [fp, #-96]	; 0xffffffa0
   1223c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   12240:	cmp	r3, #0
   12244:	beq	12260 <_start@@Base+0xf74>
   12248:	ldr	r2, [fp, #-160]	; 0xffffff60
   1224c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   12250:	str	r2, [r3, #4]
   12254:	ldr	r2, [fp, #-164]	; 0xffffff5c
   12258:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1225c:	str	r2, [r3, #8]
   12260:	mov	r1, #16
   12264:	ldr	r0, [fp, #-92]	; 0xffffffa4
   12268:	bl	14ec8 <mmk_verify_register_call@@Base>
   1226c:	bl	13990 <mmk_mock_get_params@@Base>
   12270:	str	r0, [fp, #-36]	; 0xffffffdc
   12274:	b	124b4 <_start@@Base+0x11c8>
   12278:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1227c:	str	r3, [fp, #-100]	; 0xffffff9c
   12280:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12284:	ldr	r3, [r3]
   12288:	str	r3, [fp, #-104]	; 0xffffff98
   1228c:	ldr	r3, [fp, #-104]	; 0xffffff98
   12290:	ldr	r3, [r3, #8]
   12294:	cmp	r3, #0
   12298:	beq	12384 <_start@@Base+0x1098>
   1229c:	ldr	r3, [fp, #-104]	; 0xffffff98
   122a0:	ldr	r3, [r3, #8]
   122a4:	str	r3, [fp, #-104]	; 0xffffff98
   122a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   122ac:	ldr	r3, [r3]
   122b0:	cmp	r3, #0
   122b4:	beq	123ac <_start@@Base+0x10c0>
   122b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   122bc:	ldr	r3, [r3]
   122c0:	cmp	r3, #0
   122c4:	bge	12348 <_start@@Base+0x105c>
   122c8:	mov	r2, #4
   122cc:	add	r3, fp, #4
   122d0:	mov	r1, r3
   122d4:	add	r3, fp, #4
   122d8:	mov	r0, r3
   122dc:	bl	15114 <mmk_memcmp@@Base>
   122e0:	str	r0, [fp, #-108]	; 0xffffff94
   122e4:	ldr	r3, [fp, #-108]	; 0xffffff94
   122e8:	cmp	r3, #0
   122ec:	bne	12304 <_start@@Base+0x1018>
   122f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   122f4:	ldr	r3, [r3]
   122f8:	and	r3, r3, #2
   122fc:	cmp	r3, #0
   12300:	beq	1249c <_start@@Base+0x11b0>
   12304:	ldr	r3, [fp, #-108]	; 0xffffff94
   12308:	cmp	r3, #0
   1230c:	bge	12324 <_start@@Base+0x1038>
   12310:	ldr	r3, [fp, #-104]	; 0xffffff98
   12314:	ldr	r3, [r3]
   12318:	and	r3, r3, #4
   1231c:	cmp	r3, #0
   12320:	beq	1249c <_start@@Base+0x11b0>
   12324:	ldr	r3, [fp, #-108]	; 0xffffff94
   12328:	cmp	r3, #0
   1232c:	ble	123ac <_start@@Base+0x10c0>
   12330:	ldr	r3, [fp, #-104]	; 0xffffff98
   12334:	ldr	r3, [r3]
   12338:	and	r3, r3, #8
   1233c:	cmp	r3, #0
   12340:	bne	123ac <_start@@Base+0x10c0>
   12344:	b	1249c <_start@@Base+0x11b0>
   12348:	ldr	r3, [fp, #-104]	; 0xffffff98
   1234c:	ldr	r3, [r3]
   12350:	cmp	r3, #1
   12354:	bne	123ac <_start@@Base+0x10c0>
   12358:	ldr	r0, [fp, #-104]	; 0xffffff98
   1235c:	bl	135a4 <mmk_matcher_get_predicate@@Base>
   12360:	str	r0, [fp, #-112]	; 0xffffff90
   12364:	ldr	r2, [fp, #4]
   12368:	ldr	r3, [fp, #-112]	; 0xffffff90
   1236c:	mov	r0, r2
   12370:	blx	r3
   12374:	mov	r3, r0
   12378:	cmp	r3, #0
   1237c:	bne	123ac <_start@@Base+0x10c0>
   12380:	b	124a8 <_start@@Base+0x11bc>
   12384:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12388:	add	r3, r3, #40	; 0x28
   1238c:	mov	r2, #4
   12390:	mov	r1, r3
   12394:	add	r3, fp, #4
   12398:	mov	r0, r3
   1239c:	bl	15114 <mmk_memcmp@@Base>
   123a0:	mov	r3, r0
   123a4:	cmp	r3, #0
   123a8:	bne	124a4 <_start@@Base+0x11b8>
   123ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123b0:	ldr	r3, [r3, #12]
   123b4:	cmp	r3, #0
   123b8:	beq	123d0 <_start@@Base+0x10e4>
   123bc:	bl	112a4 <__errno_location@plt>
   123c0:	mov	r2, r0
   123c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123c8:	ldr	r3, [r3, #12]
   123cc:	str	r3, [r2]
   123d0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123d4:	ldr	r3, [r3, #20]
   123d8:	cmp	r3, #0
   123dc:	beq	1241c <_start@@Base+0x1130>
   123e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123e4:	ldr	r3, [r3, #16]
   123e8:	cmp	r3, #0
   123ec:	bne	1241c <_start@@Base+0x1130>
   123f0:	ldr	r3, [fp, #-136]	; 0xffffff78
   123f4:	str	r3, [fp, #-140]	; 0xffffff74
   123f8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   123fc:	ldr	r3, [r3, #20]
   12400:	ldr	r2, [fp, #4]
   12404:	ldr	r1, [fp, #-140]	; 0xffffff74
   12408:	mov	r0, r2
   1240c:	blx	r3
   12410:	str	r0, [fp, #-116]	; 0xffffff8c
   12414:	ldr	r3, [fp, #-116]	; 0xffffff8c
   12418:	b	124cc <_start@@Base+0x11e0>
   1241c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12420:	ldr	r3, [r3, #20]
   12424:	cmp	r3, #0
   12428:	beq	1246c <_start@@Base+0x1180>
   1242c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12430:	ldr	r3, [r3, #16]
   12434:	cmp	r3, #0
   12438:	beq	1246c <_start@@Base+0x1180>
   1243c:	ldr	r3, [fp, #-136]	; 0xffffff78
   12440:	str	r3, [fp, #-140]	; 0xffffff74
   12444:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12448:	ldr	r3, [r3, #20]
   1244c:	ldr	r2, [fp, #4]
   12450:	ldr	r1, [fp, #-140]	; 0xffffff74
   12454:	mov	r0, r2
   12458:	blx	r3
   1245c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12460:	ldr	r3, [r3, #16]
   12464:	ldr	r3, [r3]
   12468:	b	124cc <_start@@Base+0x11e0>
   1246c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12470:	ldr	r3, [r3, #16]
   12474:	cmp	r3, #0
   12478:	beq	1248c <_start@@Base+0x11a0>
   1247c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   12480:	ldr	r3, [r3, #16]
   12484:	ldr	r3, [r3]
   12488:	b	124cc <_start@@Base+0x11e0>
   1248c:	ldr	r3, [pc, #96]	; 124f4 <_start@@Base+0x1208>
   12490:	add	r3, pc, r3
   12494:	ldr	r3, [r3]
   12498:	b	124cc <_start@@Base+0x11e0>
   1249c:	nop	{0}
   124a0:	b	124a8 <_start@@Base+0x11bc>
   124a4:	nop	{0}
   124a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   124ac:	ldr	r3, [r3, #4]
   124b0:	str	r3, [fp, #-36]	; 0xffffffdc
   124b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   124b8:	cmp	r3, #0
   124bc:	bne	12278 <_start@@Base+0xf8c>
   124c0:	ldr	r3, [pc, #48]	; 124f8 <_start@@Base+0x120c>
   124c4:	add	r3, pc, r3
   124c8:	ldr	r3, [r3]
   124cc:	mov	r0, r3
   124d0:	sub	sp, fp, #8
   124d4:	ldr	r4, [sp]
   124d8:	ldr	fp, [sp, #4]
   124dc:	ldr	lr, [sp, #8]
   124e0:	add	sp, sp, #12
   124e4:	add	sp, sp, #16
   124e8:	bx	lr
   124ec:			; <UNDEFINED> instruction: 0xfffffebc
   124f0:	andeq	r4, r1, r4, lsl #30
   124f4:	andeq	r4, r1, ip, asr #24
   124f8:	andeq	r4, r1, r8, lsl ip
   124fc:	str	fp, [sp, #-8]!
   12500:	str	lr, [sp, #4]
   12504:	add	fp, sp, #4
   12508:	sub	sp, sp, #8
   1250c:	str	r0, [fp, #-8]
   12510:	ldr	r3, [pc, #36]	; 1253c <_start@@Base+0x1250>
   12514:	add	r3, pc, r3
   12518:	mov	r1, r3
   1251c:	ldr	r0, [fp, #-8]
   12520:	bl	135cc <mmk_mock_create_internal@@Base>
   12524:	mov	r3, r0
   12528:	mov	r0, r3
   1252c:	sub	sp, fp, #4
   12530:	ldr	fp, [sp]
   12534:	add	sp, sp, #4
   12538:	pop	{pc}		; (ldr pc, [sp], #4)
   1253c:			; <UNDEFINED> instruction: 0xfffff7ac

00012540 <set_valid@@Base>:
   12540:	push	{fp}		; (str fp, [sp, #-4]!)
   12544:	add	fp, sp, #0
   12548:	ldr	r3, [pc, #24]	; 12568 <set_valid@@Base+0x28>
   1254c:	add	r3, pc, r3
   12550:	mov	r2, #1
   12554:	str	r2, [r3]
   12558:	nop	{0}
   1255c:	add	sp, fp, #0
   12560:	pop	{fp}		; (ldr fp, [sp], #4)
   12564:	bx	lr
   12568:	andeq	r4, r1, r8, lsl #23

0001256c <main@@Base>:
   1256c:	str	r4, [sp, #-12]!
   12570:	str	fp, [sp, #4]
   12574:	str	lr, [sp, #8]
   12578:	add	fp, sp, #8
   1257c:	sub	sp, sp, #468	; 0x1d4
   12580:	ldr	r4, [pc, #2844]	; 130a4 <main@@Base+0xb38>
   12584:	add	r4, pc, r4
   12588:	ldr	r3, [pc, #2840]	; 130a8 <main@@Base+0xb3c>
   1258c:	add	r3, pc, r3
   12590:	mov	r0, r3
   12594:	bl	11b64 <_start@@Base+0x878>
   12598:	mov	r0, #0
   1259c:	bl	133a4 <mmk_matcher_init@@Base>
   125a0:	sub	r1, fp, #468	; 0x1d4
   125a4:	mov	r2, #0
   125a8:	mov	r3, #0
   125ac:	strd	r2, [r1]
   125b0:	strd	r2, [r1, #8]
   125b4:	mov	r3, r2
   125b8:	str	r3, [r1, #16]
   125bc:	ldr	r3, [pc, #2792]	; 130ac <main@@Base+0xb40>
   125c0:	ldr	r3, [r4, r3]
   125c4:	str	r3, [fp, #-456]	; 0xfffffe38
   125c8:	sub	r3, fp, #468	; 0x1d4
   125cc:	mov	r0, r3
   125d0:	bl	157f8 <mmk_when_init@@Base>
   125d4:	bl	11220 <fn_vv@plt>
   125d8:	bl	13420 <mmk_matcher_term@@Base>
   125dc:	mov	r0, #1
   125e0:	bl	133a4 <mmk_matcher_init@@Base>
   125e4:	bl	11220 <fn_vv@plt>
   125e8:	bl	13420 <mmk_matcher_term@@Base>
   125ec:	sub	r1, fp, #448	; 0x1c0
   125f0:	mov	r2, #0
   125f4:	mov	r3, #0
   125f8:	strd	r2, [r1]
   125fc:	strd	r2, [r1, #8]
   12600:	strd	r2, [r1, #16]
   12604:	mov	r3, #1
   12608:	str	r3, [fp, #-448]	; 0xfffffe40
   1260c:	mov	r3, #1
   12610:	str	r3, [fp, #-444]	; 0xfffffe44
   12614:	sub	r3, fp, #448	; 0x1c0
   12618:	mov	r0, r3
   1261c:	bl	14cd8 <mmk_verify_times@@Base>
   12620:	mov	r3, r0
   12624:	cmp	r3, #0
   12628:	bne	12660 <main@@Base+0xf4>
   1262c:	ldr	r3, [pc, #2684]	; 130b0 <main@@Base+0xb44>
   12630:	ldr	r3, [r4, r3]
   12634:	ldr	r0, [r3]
   12638:	ldr	r3, [pc, #2676]	; 130b4 <main@@Base+0xb48>
   1263c:	add	r3, pc, r3
   12640:	str	r3, [sp]
   12644:	mov	r3, #42	; 0x2a
   12648:	ldr	r2, [pc, #2664]	; 130b8 <main@@Base+0xb4c>
   1264c:	add	r2, pc, r2
   12650:	ldr	r1, [pc, #2660]	; 130bc <main@@Base+0xb50>
   12654:	add	r1, pc, r1
   12658:	bl	11298 <fprintf@plt>
   1265c:	bl	112e0 <abort@plt>
   12660:	mov	r0, #1
   12664:	bl	133a4 <mmk_matcher_init@@Base>
   12668:	bl	11220 <fn_vv@plt>
   1266c:	bl	13420 <mmk_matcher_term@@Base>
   12670:	sub	r1, fp, #424	; 0x1a8
   12674:	mov	r2, #0
   12678:	mov	r3, #0
   1267c:	strd	r2, [r1]
   12680:	strd	r2, [r1, #8]
   12684:	strd	r2, [r1, #16]
   12688:	mov	r3, #1
   1268c:	str	r3, [fp, #-424]	; 0xfffffe58
   12690:	mov	r3, #1
   12694:	str	r3, [fp, #-412]	; 0xfffffe64
   12698:	sub	r3, fp, #424	; 0x1a8
   1269c:	mov	r0, r3
   126a0:	bl	14cd8 <mmk_verify_times@@Base>
   126a4:	mov	r3, r0
   126a8:	cmp	r3, #0
   126ac:	bne	126e4 <main@@Base+0x178>
   126b0:	ldr	r3, [pc, #2552]	; 130b0 <main@@Base+0xb44>
   126b4:	ldr	r3, [r4, r3]
   126b8:	ldr	r0, [r3]
   126bc:	ldr	r3, [pc, #2556]	; 130c0 <main@@Base+0xb54>
   126c0:	add	r3, pc, r3
   126c4:	str	r3, [sp]
   126c8:	mov	r3, #43	; 0x2b
   126cc:	ldr	r2, [pc, #2544]	; 130c4 <main@@Base+0xb58>
   126d0:	add	r2, pc, r2
   126d4:	ldr	r1, [pc, #2540]	; 130c8 <main@@Base+0xb5c>
   126d8:	add	r1, pc, r1
   126dc:	bl	11298 <fprintf@plt>
   126e0:	bl	112e0 <abort@plt>
   126e4:	mov	r0, #1
   126e8:	bl	133a4 <mmk_matcher_init@@Base>
   126ec:	bl	11220 <fn_vv@plt>
   126f0:	bl	13420 <mmk_matcher_term@@Base>
   126f4:	sub	r1, fp, #400	; 0x190
   126f8:	mov	r2, #0
   126fc:	mov	r3, #0
   12700:	strd	r2, [r1]
   12704:	strd	r2, [r1, #8]
   12708:	strd	r2, [r1, #16]
   1270c:	mov	r3, #1
   12710:	str	r3, [fp, #-400]	; 0xfffffe70
   12714:	mov	r3, #1
   12718:	str	r3, [fp, #-384]	; 0xfffffe80
   1271c:	sub	r3, fp, #400	; 0x190
   12720:	mov	r0, r3
   12724:	bl	14cd8 <mmk_verify_times@@Base>
   12728:	mov	r3, r0
   1272c:	cmp	r3, #0
   12730:	beq	12768 <main@@Base+0x1fc>
   12734:	ldr	r3, [pc, #2420]	; 130b0 <main@@Base+0xb44>
   12738:	ldr	r3, [r4, r3]
   1273c:	ldr	r0, [r3]
   12740:	ldr	r3, [pc, #2436]	; 130cc <main@@Base+0xb60>
   12744:	add	r3, pc, r3
   12748:	str	r3, [sp]
   1274c:	mov	r3, #45	; 0x2d
   12750:	ldr	r2, [pc, #2424]	; 130d0 <main@@Base+0xb64>
   12754:	add	r2, pc, r2
   12758:	ldr	r1, [pc, #2420]	; 130d4 <main@@Base+0xb68>
   1275c:	add	r1, pc, r1
   12760:	bl	11298 <fprintf@plt>
   12764:	bl	112e0 <abort@plt>
   12768:	mov	r0, #1
   1276c:	bl	133a4 <mmk_matcher_init@@Base>
   12770:	bl	11220 <fn_vv@plt>
   12774:	bl	13420 <mmk_matcher_term@@Base>
   12778:	sub	r1, fp, #376	; 0x178
   1277c:	mov	r2, #0
   12780:	mov	r3, #0
   12784:	strd	r2, [r1]
   12788:	strd	r2, [r1, #8]
   1278c:	strd	r2, [r1, #16]
   12790:	mov	r3, #1
   12794:	str	r3, [fp, #-376]	; 0xfffffe88
   12798:	mov	r3, #1
   1279c:	str	r3, [fp, #-368]	; 0xfffffe90
   127a0:	sub	r3, fp, #376	; 0x178
   127a4:	mov	r0, r3
   127a8:	bl	14cd8 <mmk_verify_times@@Base>
   127ac:	mov	r3, r0
   127b0:	cmp	r3, #0
   127b4:	beq	127ec <main@@Base+0x280>
   127b8:	ldr	r3, [pc, #2288]	; 130b0 <main@@Base+0xb44>
   127bc:	ldr	r3, [r4, r3]
   127c0:	ldr	r0, [r3]
   127c4:	ldr	r3, [pc, #2316]	; 130d8 <main@@Base+0xb6c>
   127c8:	add	r3, pc, r3
   127cc:	str	r3, [sp]
   127d0:	mov	r3, #46	; 0x2e
   127d4:	ldr	r2, [pc, #2304]	; 130dc <main@@Base+0xb70>
   127d8:	add	r2, pc, r2
   127dc:	ldr	r1, [pc, #2300]	; 130e0 <main@@Base+0xb74>
   127e0:	add	r1, pc, r1
   127e4:	bl	11298 <fprintf@plt>
   127e8:	bl	112e0 <abort@plt>
   127ec:	mov	r0, #1
   127f0:	bl	133a4 <mmk_matcher_init@@Base>
   127f4:	bl	11220 <fn_vv@plt>
   127f8:	bl	13420 <mmk_matcher_term@@Base>
   127fc:	sub	r1, fp, #352	; 0x160
   12800:	mov	r2, #0
   12804:	mov	r3, #0
   12808:	strd	r2, [r1]
   1280c:	strd	r2, [r1, #8]
   12810:	strd	r2, [r1, #16]
   12814:	mov	r3, #1
   12818:	str	r3, [fp, #-352]	; 0xfffffea0
   1281c:	mov	r3, #1
   12820:	str	r3, [fp, #-344]	; 0xfffffea8
   12824:	mov	r3, #1
   12828:	str	r3, [fp, #-340]	; 0xfffffeac
   1282c:	sub	r3, fp, #352	; 0x160
   12830:	mov	r0, r3
   12834:	bl	14cd8 <mmk_verify_times@@Base>
   12838:	mov	r3, r0
   1283c:	cmp	r3, #0
   12840:	beq	12878 <main@@Base+0x30c>
   12844:	ldr	r3, [pc, #2148]	; 130b0 <main@@Base+0xb44>
   12848:	ldr	r3, [r4, r3]
   1284c:	ldr	r0, [r3]
   12850:	ldr	r3, [pc, #2188]	; 130e4 <main@@Base+0xb78>
   12854:	add	r3, pc, r3
   12858:	str	r3, [sp]
   1285c:	mov	r3, #47	; 0x2f
   12860:	ldr	r2, [pc, #2176]	; 130e8 <main@@Base+0xb7c>
   12864:	add	r2, pc, r2
   12868:	ldr	r1, [pc, #2172]	; 130ec <main@@Base+0xb80>
   1286c:	add	r1, pc, r1
   12870:	bl	11298 <fprintf@plt>
   12874:	bl	112e0 <abort@plt>
   12878:	bl	11220 <fn_vv@plt>
   1287c:	ldr	r3, [pc, #2156]	; 130f0 <main@@Base+0xb84>
   12880:	add	r3, pc, r3
   12884:	ldr	r3, [r3]
   12888:	cmp	r3, #0
   1288c:	bne	128c4 <main@@Base+0x358>
   12890:	ldr	r3, [pc, #2072]	; 130b0 <main@@Base+0xb44>
   12894:	ldr	r3, [r4, r3]
   12898:	ldr	r0, [r3]
   1289c:	ldr	r3, [pc, #2128]	; 130f4 <main@@Base+0xb88>
   128a0:	add	r3, pc, r3
   128a4:	str	r3, [sp]
   128a8:	mov	r3, #50	; 0x32
   128ac:	ldr	r2, [pc, #2116]	; 130f8 <main@@Base+0xb8c>
   128b0:	add	r2, pc, r2
   128b4:	ldr	r1, [pc, #2112]	; 130fc <main@@Base+0xb90>
   128b8:	add	r1, pc, r1
   128bc:	bl	11298 <fprintf@plt>
   128c0:	bl	112e0 <abort@plt>
   128c4:	mov	r0, #1
   128c8:	bl	133a4 <mmk_matcher_init@@Base>
   128cc:	bl	11220 <fn_vv@plt>
   128d0:	bl	13420 <mmk_matcher_term@@Base>
   128d4:	sub	r1, fp, #328	; 0x148
   128d8:	mov	r2, #0
   128dc:	mov	r3, #0
   128e0:	strd	r2, [r1]
   128e4:	strd	r2, [r1, #8]
   128e8:	strd	r2, [r1, #16]
   128ec:	mov	r3, #1
   128f0:	str	r3, [fp, #-328]	; 0xfffffeb8
   128f4:	mov	r3, #1
   128f8:	str	r3, [fp, #-312]	; 0xfffffec8
   128fc:	sub	r3, fp, #328	; 0x148
   12900:	mov	r0, r3
   12904:	bl	14cd8 <mmk_verify_times@@Base>
   12908:	mov	r3, r0
   1290c:	cmp	r3, #0
   12910:	bne	12948 <main@@Base+0x3dc>
   12914:	ldr	r3, [pc, #1940]	; 130b0 <main@@Base+0xb44>
   12918:	ldr	r3, [r4, r3]
   1291c:	ldr	r0, [r3]
   12920:	ldr	r3, [pc, #2008]	; 13100 <main@@Base+0xb94>
   12924:	add	r3, pc, r3
   12928:	str	r3, [sp]
   1292c:	mov	r3, #51	; 0x33
   12930:	ldr	r2, [pc, #1996]	; 13104 <main@@Base+0xb98>
   12934:	add	r2, pc, r2
   12938:	ldr	r1, [pc, #1992]	; 13108 <main@@Base+0xb9c>
   1293c:	add	r1, pc, r1
   12940:	bl	11298 <fprintf@plt>
   12944:	bl	112e0 <abort@plt>
   12948:	mov	r0, #1
   1294c:	bl	133a4 <mmk_matcher_init@@Base>
   12950:	bl	11220 <fn_vv@plt>
   12954:	bl	13420 <mmk_matcher_term@@Base>
   12958:	sub	r1, fp, #304	; 0x130
   1295c:	mov	r2, #0
   12960:	mov	r3, #0
   12964:	strd	r2, [r1]
   12968:	strd	r2, [r1, #8]
   1296c:	strd	r2, [r1, #16]
   12970:	mov	r3, #1
   12974:	str	r3, [fp, #-304]	; 0xfffffed0
   12978:	mov	r3, #1
   1297c:	str	r3, [fp, #-296]	; 0xfffffed8
   12980:	sub	r3, fp, #304	; 0x130
   12984:	mov	r0, r3
   12988:	bl	14cd8 <mmk_verify_times@@Base>
   1298c:	mov	r3, r0
   12990:	cmp	r3, #0
   12994:	bne	129cc <main@@Base+0x460>
   12998:	ldr	r3, [pc, #1808]	; 130b0 <main@@Base+0xb44>
   1299c:	ldr	r3, [r4, r3]
   129a0:	ldr	r0, [r3]
   129a4:	ldr	r3, [pc, #1888]	; 1310c <main@@Base+0xba0>
   129a8:	add	r3, pc, r3
   129ac:	str	r3, [sp]
   129b0:	mov	r3, #52	; 0x34
   129b4:	ldr	r2, [pc, #1876]	; 13110 <main@@Base+0xba4>
   129b8:	add	r2, pc, r2
   129bc:	ldr	r1, [pc, #1872]	; 13114 <main@@Base+0xba8>
   129c0:	add	r1, pc, r1
   129c4:	bl	11298 <fprintf@plt>
   129c8:	bl	112e0 <abort@plt>
   129cc:	mov	r0, #1
   129d0:	bl	133a4 <mmk_matcher_init@@Base>
   129d4:	bl	11220 <fn_vv@plt>
   129d8:	bl	13420 <mmk_matcher_term@@Base>
   129dc:	sub	r1, fp, #280	; 0x118
   129e0:	mov	r2, #0
   129e4:	mov	r3, #0
   129e8:	strd	r2, [r1]
   129ec:	strd	r2, [r1, #8]
   129f0:	strd	r2, [r1, #16]
   129f4:	mov	r3, #1
   129f8:	str	r3, [fp, #-280]	; 0xfffffee8
   129fc:	mov	r3, #1
   12a00:	str	r3, [fp, #-268]	; 0xfffffef4
   12a04:	sub	r3, fp, #280	; 0x118
   12a08:	mov	r0, r3
   12a0c:	bl	14cd8 <mmk_verify_times@@Base>
   12a10:	mov	r3, r0
   12a14:	cmp	r3, #0
   12a18:	bne	12a50 <main@@Base+0x4e4>
   12a1c:	ldr	r3, [pc, #1676]	; 130b0 <main@@Base+0xb44>
   12a20:	ldr	r3, [r4, r3]
   12a24:	ldr	r0, [r3]
   12a28:	ldr	r3, [pc, #1768]	; 13118 <main@@Base+0xbac>
   12a2c:	add	r3, pc, r3
   12a30:	str	r3, [sp]
   12a34:	mov	r3, #53	; 0x35
   12a38:	ldr	r2, [pc, #1756]	; 1311c <main@@Base+0xbb0>
   12a3c:	add	r2, pc, r2
   12a40:	ldr	r1, [pc, #1752]	; 13120 <main@@Base+0xbb4>
   12a44:	add	r1, pc, r1
   12a48:	bl	11298 <fprintf@plt>
   12a4c:	bl	112e0 <abort@plt>
   12a50:	mov	r0, #1
   12a54:	bl	133a4 <mmk_matcher_init@@Base>
   12a58:	bl	11220 <fn_vv@plt>
   12a5c:	bl	13420 <mmk_matcher_term@@Base>
   12a60:	sub	r1, fp, #256	; 0x100
   12a64:	mov	r2, #0
   12a68:	mov	r3, #0
   12a6c:	strd	r2, [r1]
   12a70:	strd	r2, [r1, #8]
   12a74:	strd	r2, [r1, #16]
   12a78:	mov	r3, #1
   12a7c:	str	r3, [fp, #-256]	; 0xffffff00
   12a80:	mov	r3, #1
   12a84:	str	r3, [fp, #-248]	; 0xffffff08
   12a88:	mov	r3, #1
   12a8c:	str	r3, [fp, #-244]	; 0xffffff0c
   12a90:	sub	r3, fp, #256	; 0x100
   12a94:	mov	r0, r3
   12a98:	bl	14cd8 <mmk_verify_times@@Base>
   12a9c:	mov	r3, r0
   12aa0:	cmp	r3, #0
   12aa4:	bne	12adc <main@@Base+0x570>
   12aa8:	ldr	r3, [pc, #1536]	; 130b0 <main@@Base+0xb44>
   12aac:	ldr	r3, [r4, r3]
   12ab0:	ldr	r0, [r3]
   12ab4:	ldr	r3, [pc, #1640]	; 13124 <main@@Base+0xbb8>
   12ab8:	add	r3, pc, r3
   12abc:	str	r3, [sp]
   12ac0:	mov	r3, #54	; 0x36
   12ac4:	ldr	r2, [pc, #1628]	; 13128 <main@@Base+0xbbc>
   12ac8:	add	r2, pc, r2
   12acc:	ldr	r1, [pc, #1624]	; 1312c <main@@Base+0xbc0>
   12ad0:	add	r1, pc, r1
   12ad4:	bl	11298 <fprintf@plt>
   12ad8:	bl	112e0 <abort@plt>
   12adc:	mov	r0, #1
   12ae0:	bl	133a4 <mmk_matcher_init@@Base>
   12ae4:	bl	11220 <fn_vv@plt>
   12ae8:	bl	13420 <mmk_matcher_term@@Base>
   12aec:	sub	r1, fp, #232	; 0xe8
   12af0:	mov	r2, #0
   12af4:	mov	r3, #0
   12af8:	strd	r2, [r1]
   12afc:	strd	r2, [r1, #8]
   12b00:	strd	r2, [r1, #16]
   12b04:	mov	r3, #1
   12b08:	str	r3, [fp, #-232]	; 0xffffff18
   12b0c:	mov	r3, #1
   12b10:	str	r3, [fp, #-228]	; 0xffffff1c
   12b14:	sub	r3, fp, #232	; 0xe8
   12b18:	mov	r0, r3
   12b1c:	bl	14cd8 <mmk_verify_times@@Base>
   12b20:	mov	r3, r0
   12b24:	cmp	r3, #0
   12b28:	beq	12b60 <main@@Base+0x5f4>
   12b2c:	ldr	r3, [pc, #1404]	; 130b0 <main@@Base+0xb44>
   12b30:	ldr	r3, [r4, r3]
   12b34:	ldr	r0, [r3]
   12b38:	ldr	r3, [pc, #1520]	; 13130 <main@@Base+0xbc4>
   12b3c:	add	r3, pc, r3
   12b40:	str	r3, [sp]
   12b44:	mov	r3, #55	; 0x37
   12b48:	ldr	r2, [pc, #1508]	; 13134 <main@@Base+0xbc8>
   12b4c:	add	r2, pc, r2
   12b50:	ldr	r1, [pc, #1504]	; 13138 <main@@Base+0xbcc>
   12b54:	add	r1, pc, r1
   12b58:	bl	11298 <fprintf@plt>
   12b5c:	bl	112e0 <abort@plt>
   12b60:	mov	r0, #1
   12b64:	bl	133a4 <mmk_matcher_init@@Base>
   12b68:	bl	11220 <fn_vv@plt>
   12b6c:	bl	13420 <mmk_matcher_term@@Base>
   12b70:	sub	r1, fp, #208	; 0xd0
   12b74:	mov	r2, #0
   12b78:	mov	r3, #0
   12b7c:	strd	r2, [r1]
   12b80:	strd	r2, [r1, #8]
   12b84:	strd	r2, [r1, #16]
   12b88:	mov	r3, #1
   12b8c:	str	r3, [fp, #-208]	; 0xffffff30
   12b90:	mov	r3, #2
   12b94:	str	r3, [fp, #-192]	; 0xffffff40
   12b98:	sub	r3, fp, #208	; 0xd0
   12b9c:	mov	r0, r3
   12ba0:	bl	14cd8 <mmk_verify_times@@Base>
   12ba4:	mov	r3, r0
   12ba8:	cmp	r3, #0
   12bac:	beq	12be4 <main@@Base+0x678>
   12bb0:	ldr	r3, [pc, #1272]	; 130b0 <main@@Base+0xb44>
   12bb4:	ldr	r3, [r4, r3]
   12bb8:	ldr	r0, [r3]
   12bbc:	ldr	r3, [pc, #1400]	; 1313c <main@@Base+0xbd0>
   12bc0:	add	r3, pc, r3
   12bc4:	str	r3, [sp]
   12bc8:	mov	r3, #56	; 0x38
   12bcc:	ldr	r2, [pc, #1388]	; 13140 <main@@Base+0xbd4>
   12bd0:	add	r2, pc, r2
   12bd4:	ldr	r1, [pc, #1384]	; 13144 <main@@Base+0xbd8>
   12bd8:	add	r1, pc, r1
   12bdc:	bl	11298 <fprintf@plt>
   12be0:	bl	112e0 <abort@plt>
   12be4:	mov	r0, #1
   12be8:	bl	133a4 <mmk_matcher_init@@Base>
   12bec:	bl	11220 <fn_vv@plt>
   12bf0:	bl	13420 <mmk_matcher_term@@Base>
   12bf4:	sub	r1, fp, #184	; 0xb8
   12bf8:	mov	r2, #0
   12bfc:	mov	r3, #0
   12c00:	strd	r2, [r1]
   12c04:	strd	r2, [r1, #8]
   12c08:	strd	r2, [r1, #16]
   12c0c:	mov	r3, #1
   12c10:	str	r3, [fp, #-184]	; 0xffffff48
   12c14:	mov	r3, #2
   12c18:	str	r3, [fp, #-176]	; 0xffffff50
   12c1c:	sub	r3, fp, #184	; 0xb8
   12c20:	mov	r0, r3
   12c24:	bl	14cd8 <mmk_verify_times@@Base>
   12c28:	mov	r3, r0
   12c2c:	cmp	r3, #0
   12c30:	beq	12c68 <main@@Base+0x6fc>
   12c34:	ldr	r3, [pc, #1140]	; 130b0 <main@@Base+0xb44>
   12c38:	ldr	r3, [r4, r3]
   12c3c:	ldr	r0, [r3]
   12c40:	ldr	r3, [pc, #1280]	; 13148 <main@@Base+0xbdc>
   12c44:	add	r3, pc, r3
   12c48:	str	r3, [sp]
   12c4c:	mov	r3, #57	; 0x39
   12c50:	ldr	r2, [pc, #1268]	; 1314c <main@@Base+0xbe0>
   12c54:	add	r2, pc, r2
   12c58:	ldr	r1, [pc, #1264]	; 13150 <main@@Base+0xbe4>
   12c5c:	add	r1, pc, r1
   12c60:	bl	11298 <fprintf@plt>
   12c64:	bl	112e0 <abort@plt>
   12c68:	ldr	r3, [pc, #1252]	; 13154 <main@@Base+0xbe8>
   12c6c:	ldr	r3, [r4, r3]
   12c70:	mov	r0, r3
   12c74:	bl	1334c <mmk_reset@@Base>
   12c78:	movw	r3, #65278	; 0xfefe
   12c7c:	movt	r3, #65278	; 0xfefe
   12c80:	str	r3, [fp, #-16]
   12c84:	ldr	r3, [pc, #1228]	; 13158 <main@@Base+0xbec>
   12c88:	add	r3, pc, r3
   12c8c:	mov	r0, r3
   12c90:	bl	118ec <_start@@Base+0x600>
   12c94:	mov	r0, #0
   12c98:	bl	133a4 <mmk_matcher_init@@Base>
   12c9c:	sub	r1, fp, #160	; 0xa0
   12ca0:	mov	r2, #0
   12ca4:	mov	r3, #0
   12ca8:	strd	r2, [r1]
   12cac:	strd	r2, [r1, #8]
   12cb0:	mov	r3, r2
   12cb4:	str	r3, [r1, #16]
   12cb8:	ldr	r3, [fp, #-16]
   12cbc:	str	r3, [fp, #-156]	; 0xffffff64
   12cc0:	mov	r3, #1
   12cc4:	str	r3, [fp, #-140]	; 0xffffff74
   12cc8:	sub	r3, fp, #140	; 0x8c
   12ccc:	str	r3, [fp, #-152]	; 0xffffff68
   12cd0:	sub	r3, fp, #160	; 0xa0
   12cd4:	mov	r0, r3
   12cd8:	bl	157f8 <mmk_when_init@@Base>
   12cdc:	mov	r0, #1
   12ce0:	bl	11238 <fn_ii@plt>
   12ce4:	bl	13420 <mmk_matcher_term@@Base>
   12ce8:	mov	r0, #1
   12cec:	bl	11238 <fn_ii@plt>
   12cf0:	mov	r3, r0
   12cf4:	cmp	r3, #1
   12cf8:	bne	12d14 <main@@Base+0x7a8>
   12cfc:	bl	112a4 <__errno_location@plt>
   12d00:	mov	r3, r0
   12d04:	ldr	r3, [r3]
   12d08:	ldr	r2, [fp, #-16]
   12d0c:	cmp	r2, r3
   12d10:	beq	12d48 <main@@Base+0x7dc>
   12d14:	ldr	r3, [pc, #916]	; 130b0 <main@@Base+0xb44>
   12d18:	ldr	r3, [r4, r3]
   12d1c:	ldr	r0, [r3]
   12d20:	ldr	r3, [pc, #1076]	; 1315c <main@@Base+0xbf0>
   12d24:	add	r3, pc, r3
   12d28:	str	r3, [sp]
   12d2c:	mov	r3, #64	; 0x40
   12d30:	ldr	r2, [pc, #1064]	; 13160 <main@@Base+0xbf4>
   12d34:	add	r2, pc, r2
   12d38:	ldr	r1, [pc, #1060]	; 13164 <main@@Base+0xbf8>
   12d3c:	add	r1, pc, r1
   12d40:	bl	11298 <fprintf@plt>
   12d44:	bl	112e0 <abort@plt>
   12d48:	mov	r0, #42	; 0x2a
   12d4c:	bl	11238 <fn_ii@plt>
   12d50:	mov	r3, r0
   12d54:	cmp	r3, #0
   12d58:	beq	12d90 <main@@Base+0x824>
   12d5c:	ldr	r3, [pc, #844]	; 130b0 <main@@Base+0xb44>
   12d60:	ldr	r3, [r4, r3]
   12d64:	ldr	r0, [r3]
   12d68:	ldr	r3, [pc, #1016]	; 13168 <main@@Base+0xbfc>
   12d6c:	add	r3, pc, r3
   12d70:	str	r3, [sp]
   12d74:	mov	r3, #65	; 0x41
   12d78:	ldr	r2, [pc, #1004]	; 1316c <main@@Base+0xc00>
   12d7c:	add	r2, pc, r2
   12d80:	ldr	r1, [pc, #1000]	; 13170 <main@@Base+0xc04>
   12d84:	add	r1, pc, r1
   12d88:	bl	11298 <fprintf@plt>
   12d8c:	bl	112e0 <abort@plt>
   12d90:	mov	r0, #1
   12d94:	bl	133a4 <mmk_matcher_init@@Base>
   12d98:	mov	r1, #0
   12d9c:	mov	r0, #0
   12da0:	bl	1349c <mmk_matcher_add@@Base>
   12da4:	mov	r0, #0
   12da8:	bl	11238 <fn_ii@plt>
   12dac:	bl	13420 <mmk_matcher_term@@Base>
   12db0:	sub	r1, fp, #136	; 0x88
   12db4:	mov	r2, #0
   12db8:	mov	r3, #0
   12dbc:	strd	r2, [r1]
   12dc0:	strd	r2, [r1, #8]
   12dc4:	strd	r2, [r1, #16]
   12dc8:	mov	r3, #1
   12dcc:	str	r3, [fp, #-136]	; 0xffffff78
   12dd0:	mov	r3, #2
   12dd4:	str	r3, [fp, #-120]	; 0xffffff88
   12dd8:	sub	r3, fp, #136	; 0x88
   12ddc:	mov	r0, r3
   12de0:	bl	14cd8 <mmk_verify_times@@Base>
   12de4:	mov	r3, r0
   12de8:	cmp	r3, #0
   12dec:	bne	12e24 <main@@Base+0x8b8>
   12df0:	ldr	r3, [pc, #696]	; 130b0 <main@@Base+0xb44>
   12df4:	ldr	r3, [r4, r3]
   12df8:	ldr	r0, [r3]
   12dfc:	ldr	r3, [pc, #880]	; 13174 <main@@Base+0xc08>
   12e00:	add	r3, pc, r3
   12e04:	str	r3, [sp]
   12e08:	mov	r3, #67	; 0x43
   12e0c:	ldr	r2, [pc, #868]	; 13178 <main@@Base+0xc0c>
   12e10:	add	r2, pc, r2
   12e14:	ldr	r1, [pc, #864]	; 1317c <main@@Base+0xc10>
   12e18:	add	r1, pc, r1
   12e1c:	bl	11298 <fprintf@plt>
   12e20:	bl	112e0 <abort@plt>
   12e24:	mov	r0, #1
   12e28:	bl	133a4 <mmk_matcher_init@@Base>
   12e2c:	mov	r0, #1
   12e30:	bl	11238 <fn_ii@plt>
   12e34:	bl	13420 <mmk_matcher_term@@Base>
   12e38:	sub	r1, fp, #112	; 0x70
   12e3c:	mov	r2, #0
   12e40:	mov	r3, #0
   12e44:	strd	r2, [r1]
   12e48:	strd	r2, [r1, #8]
   12e4c:	strd	r2, [r1, #16]
   12e50:	mov	r3, #1
   12e54:	str	r3, [fp, #-112]	; 0xffffff90
   12e58:	mov	r3, #1
   12e5c:	str	r3, [fp, #-96]	; 0xffffffa0
   12e60:	sub	r3, fp, #112	; 0x70
   12e64:	mov	r0, r3
   12e68:	bl	14cd8 <mmk_verify_times@@Base>
   12e6c:	mov	r3, r0
   12e70:	cmp	r3, #0
   12e74:	bne	12eac <main@@Base+0x940>
   12e78:	ldr	r3, [pc, #560]	; 130b0 <main@@Base+0xb44>
   12e7c:	ldr	r3, [r4, r3]
   12e80:	ldr	r0, [r3]
   12e84:	ldr	r3, [pc, #756]	; 13180 <main@@Base+0xc14>
   12e88:	add	r3, pc, r3
   12e8c:	str	r3, [sp]
   12e90:	mov	r3, #68	; 0x44
   12e94:	ldr	r2, [pc, #744]	; 13184 <main@@Base+0xc18>
   12e98:	add	r2, pc, r2
   12e9c:	ldr	r1, [pc, #740]	; 13188 <main@@Base+0xc1c>
   12ea0:	add	r1, pc, r1
   12ea4:	bl	11298 <fprintf@plt>
   12ea8:	bl	112e0 <abort@plt>
   12eac:	mov	r0, #1
   12eb0:	bl	133a4 <mmk_matcher_init@@Base>
   12eb4:	mov	r0, #42	; 0x2a
   12eb8:	bl	11238 <fn_ii@plt>
   12ebc:	bl	13420 <mmk_matcher_term@@Base>
   12ec0:	sub	r1, fp, #88	; 0x58
   12ec4:	mov	r2, #0
   12ec8:	mov	r3, #0
   12ecc:	strd	r2, [r1]
   12ed0:	strd	r2, [r1, #8]
   12ed4:	strd	r2, [r1, #16]
   12ed8:	mov	r3, #1
   12edc:	str	r3, [fp, #-88]	; 0xffffffa8
   12ee0:	mov	r3, #1
   12ee4:	str	r3, [fp, #-72]	; 0xffffffb8
   12ee8:	sub	r3, fp, #88	; 0x58
   12eec:	mov	r0, r3
   12ef0:	bl	14cd8 <mmk_verify_times@@Base>
   12ef4:	mov	r3, r0
   12ef8:	cmp	r3, #0
   12efc:	bne	12f34 <main@@Base+0x9c8>
   12f00:	ldr	r3, [pc, #424]	; 130b0 <main@@Base+0xb44>
   12f04:	ldr	r3, [r4, r3]
   12f08:	ldr	r0, [r3]
   12f0c:	ldr	r3, [pc, #632]	; 1318c <main@@Base+0xc20>
   12f10:	add	r3, pc, r3
   12f14:	str	r3, [sp]
   12f18:	mov	r3, #69	; 0x45
   12f1c:	ldr	r2, [pc, #620]	; 13190 <main@@Base+0xc24>
   12f20:	add	r2, pc, r2
   12f24:	ldr	r1, [pc, #616]	; 13194 <main@@Base+0xc28>
   12f28:	add	r1, pc, r1
   12f2c:	bl	11298 <fprintf@plt>
   12f30:	bl	112e0 <abort@plt>
   12f34:	mov	r0, #1
   12f38:	bl	133a4 <mmk_matcher_init@@Base>
   12f3c:	mov	r0, #12
   12f40:	bl	11238 <fn_ii@plt>
   12f44:	bl	13420 <mmk_matcher_term@@Base>
   12f48:	sub	r1, fp, #64	; 0x40
   12f4c:	mov	r2, #0
   12f50:	mov	r3, #0
   12f54:	strd	r2, [r1]
   12f58:	strd	r2, [r1, #8]
   12f5c:	strd	r2, [r1, #16]
   12f60:	mov	r3, #1
   12f64:	str	r3, [fp, #-64]	; 0xffffffc0
   12f68:	mov	r3, #1
   12f6c:	str	r3, [fp, #-60]	; 0xffffffc4
   12f70:	sub	r3, fp, #64	; 0x40
   12f74:	mov	r0, r3
   12f78:	bl	14cd8 <mmk_verify_times@@Base>
   12f7c:	mov	r3, r0
   12f80:	cmp	r3, #0
   12f84:	bne	12fbc <main@@Base+0xa50>
   12f88:	ldr	r3, [pc, #288]	; 130b0 <main@@Base+0xb44>
   12f8c:	ldr	r3, [r4, r3]
   12f90:	ldr	r0, [r3]
   12f94:	ldr	r3, [pc, #508]	; 13198 <main@@Base+0xc2c>
   12f98:	add	r3, pc, r3
   12f9c:	str	r3, [sp]
   12fa0:	mov	r3, #70	; 0x46
   12fa4:	ldr	r2, [pc, #496]	; 1319c <main@@Base+0xc30>
   12fa8:	add	r2, pc, r2
   12fac:	ldr	r1, [pc, #492]	; 131a0 <main@@Base+0xc34>
   12fb0:	add	r1, pc, r1
   12fb4:	bl	11298 <fprintf@plt>
   12fb8:	bl	112e0 <abort@plt>
   12fbc:	ldr	r3, [pc, #480]	; 131a4 <main@@Base+0xc38>
   12fc0:	ldr	r3, [r4, r3]
   12fc4:	mov	r0, r3
   12fc8:	bl	1334c <mmk_reset@@Base>
   12fcc:	ldr	r3, [pc, #468]	; 131a8 <main@@Base+0xc3c>
   12fd0:	add	r3, pc, r3
   12fd4:	mov	r0, r3
   12fd8:	bl	124fc <_start@@Base+0x1210>
   12fdc:	mov	r0, #0
   12fe0:	bl	133a4 <mmk_matcher_init@@Base>
   12fe4:	sub	r1, fp, #40	; 0x28
   12fe8:	mov	r2, #0
   12fec:	mov	r3, #0
   12ff0:	strd	r2, [r1]
   12ff4:	strd	r2, [r1, #8]
   12ff8:	mov	r3, r2
   12ffc:	str	r3, [r1, #16]
   13000:	mov	r3, #1
   13004:	str	r3, [fp, #-20]	; 0xffffffec
   13008:	sub	r3, fp, #20
   1300c:	str	r3, [fp, #-32]	; 0xffffffe0
   13010:	sub	r3, fp, #40	; 0x28
   13014:	mov	r0, r3
   13018:	bl	157f8 <mmk_when_init@@Base>
   1301c:	mov	r1, #42	; 0x2a
   13020:	mov	r0, #1
   13024:	bl	11244 <fn_ii_va@plt>
   13028:	bl	13420 <mmk_matcher_term@@Base>
   1302c:	mov	r1, #42	; 0x2a
   13030:	mov	r0, #1
   13034:	bl	11244 <fn_ii_va@plt>
   13038:	mov	r3, r0
   1303c:	cmp	r3, #1
   13040:	beq	13078 <main@@Base+0xb0c>
   13044:	ldr	r3, [pc, #100]	; 130b0 <main@@Base+0xb44>
   13048:	ldr	r3, [r4, r3]
   1304c:	ldr	r0, [r3]
   13050:	ldr	r3, [pc, #340]	; 131ac <main@@Base+0xc40>
   13054:	add	r3, pc, r3
   13058:	str	r3, [sp]
   1305c:	mov	r3, #77	; 0x4d
   13060:	ldr	r2, [pc, #328]	; 131b0 <main@@Base+0xc44>
   13064:	add	r2, pc, r2
   13068:	ldr	r1, [pc, #324]	; 131b4 <main@@Base+0xc48>
   1306c:	add	r1, pc, r1
   13070:	bl	11298 <fprintf@plt>
   13074:	bl	112e0 <abort@plt>
   13078:	ldr	r3, [pc, #312]	; 131b8 <main@@Base+0xc4c>
   1307c:	ldr	r3, [r4, r3]
   13080:	mov	r0, r3
   13084:	bl	1334c <mmk_reset@@Base>
   13088:	mov	r3, #0
   1308c:	mov	r0, r3
   13090:	sub	sp, fp, #8
   13094:	ldr	r4, [sp]
   13098:	ldr	fp, [sp, #4]
   1309c:	add	sp, sp, #8
   130a0:	pop	{pc}		; (ldr pc, [sp], #4)
   130a4:	andeq	r4, r1, r4, ror sl
   130a8:	andeq	r3, r0, r8, lsl r4
   130ac:	muleq	r0, r4, r0
   130b0:	muleq	r0, ip, r0
   130b4:	andeq	r3, r0, r0, ror #7
   130b8:	andeq	r3, r0, r0, ror #6
   130bc:	andeq	r3, r0, r8, lsr #7
   130c0:	andeq	r3, r0, ip, ror r3
   130c4:	ldrdeq	r3, [r0], -ip
   130c8:	andeq	r3, r0, r4, lsr #6
   130cc:	andeq	r3, r0, ip, lsl r3
   130d0:	andeq	r3, r0, r8, asr r2
   130d4:	andeq	r3, r0, r0, lsr #5
   130d8:			; <UNDEFINED> instruction: 0x000032bc
   130dc:	ldrdeq	r3, [r0], -r4
   130e0:	andeq	r3, r0, ip, lsl r2
   130e4:	andeq	r3, r0, r4, asr r2
   130e8:	andeq	r3, r0, r8, asr #2
   130ec:	muleq	r0, r0, r1
   130f0:	andeq	r4, r1, r4, asr r8
   130f4:	andeq	r3, r0, ip, lsr r2
   130f8:	strdeq	r3, [r0], -ip
   130fc:	andeq	r3, r0, r4, asr #2
   13100:	andeq	r3, r0, r0, asr #3
   13104:	andeq	r3, r0, r8, ror r0
   13108:	andeq	r3, r0, r0, asr #1
   1310c:	andeq	r3, r0, ip, asr r1
   13110:	strdeq	r2, [r0], -r4
   13114:	andeq	r3, r0, ip, lsr r0
   13118:	andeq	r3, r0, r0, lsl r0
   1311c:	andeq	r2, r0, r0, ror pc
   13120:			; <UNDEFINED> instruction: 0x00002fb8
   13124:	andeq	r3, r0, r0, ror r0
   13128:	andeq	r2, r0, r4, ror #29
   1312c:	andeq	r2, r0, ip, lsr #30
   13130:	andeq	r3, r0, r0, lsr #32
   13134:	andeq	r2, r0, r0, ror #28
   13138:	andeq	r2, r0, r8, lsr #29
   1313c:	andeq	r2, r0, r0, asr #31
   13140:	ldrdeq	r2, [r0], -ip
   13144:	andeq	r2, r0, r4, lsr #28
   13148:	andeq	r2, r0, r0, ror #30
   1314c:	andeq	r2, r0, r8, asr sp
   13150:	andeq	r2, r0, r0, lsr #27
   13154:	andeq	r0, r0, ip, lsl #1
   13158:	andeq	r2, r0, r0, asr #30
   1315c:	andeq	r2, r0, ip, lsr #29
   13160:	andeq	r2, r0, r8, ror ip
   13164:	andeq	r2, r0, r0, asr #25
   13168:	andeq	r2, r0, r4, lsl #29
   1316c:	andeq	r2, r0, r0, lsr ip
   13170:	andeq	r2, r0, r8, ror ip
   13174:	andeq	r2, r0, r0, lsl #28
   13178:	muleq	r0, ip, fp
   1317c:	andeq	r2, r0, r4, ror #23
   13180:	andeq	r2, r0, r4, lsr #27
   13184:	andeq	r2, r0, r4, lsl fp
   13188:	andeq	r2, r0, ip, asr fp
   1318c:	andeq	r2, r0, r0, asr #26
   13190:	andeq	r2, r0, ip, lsl #21
   13194:	ldrdeq	r2, [r0], -r4
   13198:	ldrdeq	r2, [r0], -ip
   1319c:	andeq	r2, r0, r4, lsl #20
   131a0:	andeq	r2, r0, ip, asr #20
   131a4:	muleq	r0, r8, r0
   131a8:	andeq	r2, r0, r8, asr #25
   131ac:	andeq	r2, r0, r0, asr ip
   131b0:	andeq	r2, r0, r8, asr #18
   131b4:	muleq	r0, r0, r9
   131b8:	andeq	r0, r0, r0, lsr #1

000131bc <mmk_init@@Base>:
   131bc:	str	r4, [sp, #-12]!
   131c0:	str	fp, [sp, #4]
   131c4:	str	lr, [sp, #8]
   131c8:	add	fp, sp, #8
   131cc:	sub	sp, sp, #12
   131d0:	ldr	r4, [pc, #176]	; 13288 <mmk_init@@Base+0xcc>
   131d4:	add	r4, pc, r4
   131d8:	ldr	r3, [pc, #172]	; 1328c <mmk_init@@Base+0xd0>
   131dc:	add	r3, pc, r3
   131e0:	ldr	r3, [r3]
   131e4:	cmp	r3, #0
   131e8:	bne	13270 <mmk_init@@Base+0xb4>
   131ec:	bl	13d2c <plt_init_ctx@@Base>
   131f0:	mov	r2, r0
   131f4:	ldr	r3, [pc, #148]	; 13290 <mmk_init@@Base+0xd4>
   131f8:	add	r3, pc, r3
   131fc:	str	r2, [r3, #4]
   13200:	ldr	r3, [pc, #140]	; 13294 <mmk_init@@Base+0xd8>
   13204:	add	r3, pc, r3
   13208:	ldr	r3, [r3, #4]
   1320c:	cmn	r3, #1
   13210:	bne	13248 <mmk_init@@Base+0x8c>
   13214:	ldr	r3, [pc, #124]	; 13298 <mmk_init@@Base+0xdc>
   13218:	ldr	r3, [r4, r3]
   1321c:	ldr	r0, [r3]
   13220:	ldr	r3, [pc, #116]	; 1329c <mmk_init@@Base+0xe0>
   13224:	add	r3, pc, r3
   13228:	str	r3, [sp]
   1322c:	mov	r3, #45	; 0x2d
   13230:	ldr	r2, [pc, #104]	; 132a0 <mmk_init@@Base+0xe4>
   13234:	add	r2, pc, r2
   13238:	ldr	r1, [pc, #100]	; 132a4 <mmk_init@@Base+0xe8>
   1323c:	add	r1, pc, r1
   13240:	bl	11298 <fprintf@plt>
   13244:	bl	112e0 <abort@plt>
   13248:	ldr	r3, [pc, #88]	; 132a8 <mmk_init@@Base+0xec>
   1324c:	add	r3, pc, r3
   13250:	ldr	r3, [r3, #4]
   13254:	mov	r0, r3
   13258:	bl	15614 <mmk_init_vital_functions@@Base>
   1325c:	ldr	r3, [pc, #72]	; 132ac <mmk_init@@Base+0xf0>
   13260:	add	r3, pc, r3
   13264:	mov	r2, #1
   13268:	str	r2, [r3]
   1326c:	b	13274 <mmk_init@@Base+0xb8>
   13270:	nop	{0}
   13274:	sub	sp, fp, #8
   13278:	ldr	r4, [sp]
   1327c:	ldr	fp, [sp, #4]
   13280:	add	sp, sp, #8
   13284:	pop	{pc}		; (ldr pc, [sp], #4)
   13288:	andeq	r3, r1, r4, lsr #28
   1328c:	andeq	r3, r1, r4, lsl #30
   13290:	andeq	r3, r1, r8, ror #29
   13294:	ldrdeq	r3, [r1], -ip
   13298:	muleq	r0, ip, r0
   1329c:	andeq	r2, r0, r8, lsl #22
   132a0:	andeq	r2, r0, r8, lsl #21
   132a4:	ldrdeq	r2, [r0], -r0
   132a8:	muleq	r1, r4, lr
   132ac:	andeq	r3, r1, r0, lsl #29

000132b0 <mmk_plt_ctx@@Base>:
   132b0:	str	fp, [sp, #-8]!
   132b4:	str	lr, [sp, #4]
   132b8:	add	fp, sp, #4
   132bc:	sub	sp, sp, #8
   132c0:	ldr	r2, [pc, #104]	; 13330 <mmk_plt_ctx@@Base+0x80>
   132c4:	add	r2, pc, r2
   132c8:	ldr	r3, [pc, #100]	; 13334 <mmk_plt_ctx@@Base+0x84>
   132cc:	add	r3, pc, r3
   132d0:	ldr	r3, [r3]
   132d4:	cmp	r3, #0
   132d8:	bne	13310 <mmk_plt_ctx@@Base+0x60>
   132dc:	ldr	r3, [pc, #84]	; 13338 <mmk_plt_ctx@@Base+0x88>
   132e0:	ldr	r3, [r2, r3]
   132e4:	ldr	r0, [r3]
   132e8:	ldr	r3, [pc, #76]	; 1333c <mmk_plt_ctx@@Base+0x8c>
   132ec:	add	r3, pc, r3
   132f0:	str	r3, [sp]
   132f4:	mov	r3, #54	; 0x36
   132f8:	ldr	r2, [pc, #64]	; 13340 <mmk_plt_ctx@@Base+0x90>
   132fc:	add	r2, pc, r2
   13300:	ldr	r1, [pc, #60]	; 13344 <mmk_plt_ctx@@Base+0x94>
   13304:	add	r1, pc, r1
   13308:	bl	11298 <fprintf@plt>
   1330c:	bl	112e0 <abort@plt>
   13310:	ldr	r3, [pc, #48]	; 13348 <mmk_plt_ctx@@Base+0x98>
   13314:	add	r3, pc, r3
   13318:	ldr	r3, [r3, #4]
   1331c:	mov	r0, r3
   13320:	sub	sp, fp, #4
   13324:	ldr	fp, [sp]
   13328:	add	sp, sp, #4
   1332c:	pop	{pc}		; (ldr pc, [sp], #4)
   13330:	andeq	r3, r1, r4, lsr sp
   13334:	andeq	r3, r1, r4, lsl lr
   13338:	muleq	r0, ip, r0
   1333c:	andeq	r2, r0, r8, asr sl
   13340:	andeq	r2, r0, r0, asr #19
   13344:	andeq	r2, r0, r8, lsl #20
   13348:	andeq	r3, r1, ip, asr #27

0001334c <mmk_reset@@Base>:
   1334c:	str	fp, [sp, #-8]!
   13350:	str	lr, [sp, #4]
   13354:	add	fp, sp, #4
   13358:	sub	sp, sp, #16
   1335c:	str	r0, [fp, #-16]
   13360:	ldr	r3, [fp, #-16]
   13364:	cmp	r3, #0
   13368:	beq	13390 <mmk_reset@@Base+0x44>
   1336c:	ldr	r0, [fp, #-16]
   13370:	bl	1499c <mmk_ask_ctx@@Base>
   13374:	str	r0, [fp, #-8]
   13378:	ldr	r0, [fp, #-8]
   1337c:	bl	145f0 <mmk_stub_context@@Base>
   13380:	str	r0, [fp, #-12]
   13384:	ldr	r0, [fp, #-12]
   13388:	bl	137dc <mmk_mock_destroy_internal@@Base>
   1338c:	b	13394 <mmk_reset@@Base+0x48>
   13390:	nop	{0}
   13394:	sub	sp, fp, #4
   13398:	ldr	fp, [sp]
   1339c:	add	sp, sp, #4
   133a0:	pop	{pc}		; (ldr pc, [sp], #4)

000133a4 <mmk_matcher_init@@Base>:
   133a4:	str	fp, [sp, #-8]!
   133a8:	str	lr, [sp, #4]
   133ac:	add	fp, sp, #4
   133b0:	sub	sp, sp, #16
   133b4:	str	r0, [fp, #-16]
   133b8:	mov	r0, #12
   133bc:	bl	15520 <mmk_malloc@@Base>
   133c0:	str	r0, [fp, #-8]
   133c4:	ldr	r3, [fp, #-8]
   133c8:	mov	r1, r3
   133cc:	mov	r2, #0
   133d0:	mov	r3, #0
   133d4:	strd	r2, [r1]
   133d8:	mov	r3, r2
   133dc:	str	r3, [r1, #8]
   133e0:	ldr	r3, [fp, #-8]
   133e4:	ldr	r2, [fp, #-16]
   133e8:	str	r2, [r3]
   133ec:	ldr	r3, [pc, #40]	; 1341c <mmk_matcher_init@@Base+0x78>
   133f0:	add	r3, pc, r3
   133f4:	mov	r0, r3
   133f8:	bl	112c8 <__tls_get_addr@plt>
   133fc:	mov	r2, r0
   13400:	ldr	r3, [fp, #-8]
   13404:	str	r3, [r2]
   13408:	nop	{0}
   1340c:	sub	sp, fp, #4
   13410:	ldr	fp, [sp]
   13414:	add	sp, sp, #4
   13418:	pop	{pc}		; (ldr pc, [sp], #4)
   1341c:	andeq	r3, r1, ip, ror #24

00013420 <mmk_matcher_term@@Base>:
   13420:	str	fp, [sp, #-8]!
   13424:	str	lr, [sp, #4]
   13428:	add	fp, sp, #4
   1342c:	ldr	r3, [pc, #40]	; 1345c <mmk_matcher_term@@Base+0x3c>
   13430:	add	r3, pc, r3
   13434:	mov	r0, r3
   13438:	bl	112c8 <__tls_get_addr@plt>
   1343c:	mov	r2, r0
   13440:	mov	r3, #0
   13444:	str	r3, [r2]
   13448:	nop	{0}
   1344c:	sub	sp, fp, #4
   13450:	ldr	fp, [sp]
   13454:	add	sp, sp, #4
   13458:	pop	{pc}		; (ldr pc, [sp], #4)
   1345c:	andeq	r3, r1, ip, lsr #24

00013460 <mmk_matcher_ctx@@Base>:
   13460:	str	fp, [sp, #-8]!
   13464:	str	lr, [sp, #4]
   13468:	add	fp, sp, #4
   1346c:	ldr	r3, [pc, #36]	; 13498 <mmk_matcher_ctx@@Base+0x38>
   13470:	add	r3, pc, r3
   13474:	mov	r0, r3
   13478:	bl	112c8 <__tls_get_addr@plt>
   1347c:	mov	r3, r0
   13480:	ldr	r3, [r3]
   13484:	mov	r0, r3
   13488:	sub	sp, fp, #4
   1348c:	ldr	fp, [sp]
   13490:	add	sp, sp, #4
   13494:	pop	{pc}		; (ldr pc, [sp], #4)
   13498:	andeq	r3, r1, ip, ror #23

0001349c <mmk_matcher_add@@Base>:
   1349c:	str	fp, [sp, #-8]!
   134a0:	str	lr, [sp, #4]
   134a4:	add	fp, sp, #4
   134a8:	sub	sp, sp, #24
   134ac:	str	r0, [fp, #-24]	; 0xffffffe8
   134b0:	str	r1, [fp, #-28]	; 0xffffffe4
   134b4:	mov	r0, #12
   134b8:	bl	15520 <mmk_malloc@@Base>
   134bc:	str	r0, [fp, #-16]
   134c0:	ldr	r3, [pc, #212]	; 1359c <mmk_matcher_add@@Base+0x100>
   134c4:	add	r3, pc, r3
   134c8:	mov	r0, r3
   134cc:	bl	112c8 <__tls_get_addr@plt>
   134d0:	mov	r3, r0
   134d4:	ldr	r3, [r3]
   134d8:	str	r3, [fp, #-8]
   134dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134e0:	ldr	r3, [fp, #-16]
   134e4:	mov	r1, r3
   134e8:	mov	r2, #0
   134ec:	mov	r3, #0
   134f0:	strd	r2, [r1]
   134f4:	mov	r3, r2
   134f8:	str	r3, [r1, #8]
   134fc:	ldr	r3, [fp, #-16]
   13500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13504:	str	r2, [r3]
   13508:	ldr	r3, [fp, #-16]
   1350c:	str	r0, [r3, #4]
   13510:	ldr	r3, [pc, #136]	; 135a0 <mmk_matcher_add@@Base+0x104>
   13514:	add	r3, pc, r3
   13518:	mov	r0, r3
   1351c:	bl	112c8 <__tls_get_addr@plt>
   13520:	mov	r3, r0
   13524:	ldr	r3, [r3]
   13528:	ldr	r3, [r3, #8]
   1352c:	str	r3, [fp, #-12]
   13530:	b	13548 <mmk_matcher_add@@Base+0xac>
   13534:	ldr	r3, [fp, #-12]
   13538:	str	r3, [fp, #-8]
   1353c:	ldr	r3, [fp, #-12]
   13540:	ldr	r3, [r3, #8]
   13544:	str	r3, [fp, #-12]
   13548:	ldr	r3, [fp, #-12]
   1354c:	cmp	r3, #0
   13550:	beq	1356c <mmk_matcher_add@@Base+0xd0>
   13554:	ldr	r3, [fp, #-12]
   13558:	ldr	r2, [r3, #4]
   1355c:	ldr	r3, [fp, #-16]
   13560:	ldr	r3, [r3, #4]
   13564:	cmp	r2, r3
   13568:	bcc	13534 <mmk_matcher_add@@Base+0x98>
   1356c:	ldr	r3, [fp, #-8]
   13570:	ldr	r2, [r3, #8]
   13574:	ldr	r3, [fp, #-16]
   13578:	str	r2, [r3, #8]
   1357c:	ldr	r3, [fp, #-8]
   13580:	ldr	r2, [fp, #-16]
   13584:	str	r2, [r3, #8]
   13588:	nop	{0}
   1358c:	sub	sp, fp, #4
   13590:	ldr	fp, [sp]
   13594:	add	sp, sp, #4
   13598:	pop	{pc}		; (ldr pc, [sp], #4)
   1359c:	muleq	r1, r8, fp
   135a0:	andeq	r3, r1, r8, asr #22

000135a4 <mmk_matcher_get_predicate@@Base>:
   135a4:	push	{fp}		; (str fp, [sp, #-4]!)
   135a8:	add	fp, sp, #0
   135ac:	sub	sp, sp, #12
   135b0:	str	r0, [fp, #-8]
   135b4:	ldr	r3, [fp, #-8]
   135b8:	add	r3, r3, #12
   135bc:	mov	r0, r3
   135c0:	add	sp, fp, #0
   135c4:	pop	{fp}		; (ldr fp, [sp], #4)
   135c8:	bx	lr

000135cc <mmk_mock_create_internal@@Base>:
   135cc:	str	r4, [sp, #-12]!
   135d0:	str	fp, [sp, #4]
   135d4:	str	lr, [sp, #8]
   135d8:	add	fp, sp, #8
   135dc:	sub	sp, sp, #44	; 0x2c
   135e0:	str	r0, [fp, #-40]	; 0xffffffd8
   135e4:	str	r1, [fp, #-44]	; 0xffffffd4
   135e8:	ldr	r4, [pc, #464]	; 137c0 <mmk_mock_create_internal@@Base+0x1f4>
   135ec:	add	r4, pc, r4
   135f0:	bl	131bc <mmk_init@@Base>
   135f4:	mov	r0, #20
   135f8:	bl	15520 <mmk_malloc@@Base>
   135fc:	str	r0, [fp, #-20]	; 0xffffffec
   13600:	ldr	r3, [fp, #-20]	; 0xffffffec
   13604:	cmp	r3, #0
   13608:	bne	13640 <mmk_mock_create_internal@@Base+0x74>
   1360c:	ldr	r3, [pc, #432]	; 137c4 <mmk_mock_create_internal@@Base+0x1f8>
   13610:	ldr	r3, [r4, r3]
   13614:	ldr	r0, [r3]
   13618:	ldr	r3, [pc, #424]	; 137c8 <mmk_mock_create_internal@@Base+0x1fc>
   1361c:	add	r3, pc, r3
   13620:	str	r3, [sp]
   13624:	mov	r3, #36	; 0x24
   13628:	ldr	r2, [pc, #412]	; 137cc <mmk_mock_create_internal@@Base+0x200>
   1362c:	add	r2, pc, r2
   13630:	ldr	r1, [pc, #408]	; 137d0 <mmk_mock_create_internal@@Base+0x204>
   13634:	add	r1, pc, r1
   13638:	bl	11298 <fprintf@plt>
   1363c:	bl	112e0 <abort@plt>
   13640:	ldr	r3, [fp, #-20]	; 0xffffffec
   13644:	mov	r1, r3
   13648:	mov	r2, #0
   1364c:	mov	r3, #0
   13650:	strd	r2, [r1]
   13654:	strd	r2, [r1, #8]
   13658:	mov	r3, r2
   1365c:	str	r3, [r1, #16]
   13660:	mov	r1, #64	; 0x40
   13664:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13668:	bl	15308 <mmk_strchr@@Base>
   1366c:	str	r0, [fp, #-24]	; 0xffffffe8
   13670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13674:	cmp	r3, #0
   13678:	bne	1368c <mmk_mock_create_internal@@Base+0xc0>
   1367c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13680:	bl	1546c <mmk_strlen@@Base>
   13684:	str	r0, [fp, #-16]
   13688:	b	1369c <mmk_mock_create_internal@@Base+0xd0>
   1368c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13690:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13694:	sub	r3, r2, r3
   13698:	str	r3, [fp, #-16]
   1369c:	ldr	r3, [fp, #-16]
   136a0:	add	r3, r3, #1
   136a4:	mov	r0, r3
   136a8:	bl	15520 <mmk_malloc@@Base>
   136ac:	str	r0, [fp, #-28]	; 0xffffffe4
   136b0:	ldr	r2, [fp, #-16]
   136b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   136b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   136bc:	bl	153e0 <mmk_strncpy@@Base>
   136c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   136c4:	ldr	r3, [fp, #-16]
   136c8:	add	r3, r2, r3
   136cc:	mov	r2, #0
   136d0:	strb	r2, [r3]
   136d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136d8:	cmp	r3, #0
   136dc:	beq	13708 <mmk_mock_create_internal@@Base+0x13c>
   136e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136e4:	add	r3, r3, #1
   136e8:	mov	r2, #4
   136ec:	ldr	r1, [pc, #224]	; 137d4 <mmk_mock_create_internal@@Base+0x208>
   136f0:	add	r1, pc, r1
   136f4:	mov	r0, r3
   136f8:	bl	15244 <mmk_strneq@@Base>
   136fc:	mov	r3, r0
   13700:	cmp	r3, #0
   13704:	beq	13710 <mmk_mock_create_internal@@Base+0x144>
   13708:	mov	r3, #1
   1370c:	b	13714 <mmk_mock_create_internal@@Base+0x148>
   13710:	mov	r3, #0
   13714:	str	r3, [fp, #-32]	; 0xffffffe0
   13718:	ldr	r2, [fp, #-20]	; 0xffffffec
   1371c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13720:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13724:	bl	14868 <mmk_stub_create@@Base>
   13728:	mov	r2, r0
   1372c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13730:	str	r2, [r3, #4]
   13734:	ldr	r3, [fp, #-20]	; 0xffffffec
   13738:	ldr	r3, [r3, #4]
   1373c:	cmp	r3, #0
   13740:	bne	13768 <mmk_mock_create_internal@@Base+0x19c>
   13744:	ldr	r3, [pc, #120]	; 137c4 <mmk_mock_create_internal@@Base+0x1f8>
   13748:	ldr	r3, [r4, r3]
   1374c:	ldr	r3, [r3]
   13750:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13754:	ldr	r1, [pc, #124]	; 137d8 <mmk_mock_create_internal@@Base+0x20c>
   13758:	add	r1, pc, r1
   1375c:	mov	r0, r3
   13760:	bl	11298 <fprintf@plt>
   13764:	bl	112e0 <abort@plt>
   13768:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1376c:	cmp	r3, #0
   13770:	bne	13794 <mmk_mock_create_internal@@Base+0x1c8>
   13774:	ldr	r3, [fp, #-20]	; 0xffffffec
   13778:	ldr	r4, [r3, #4]
   1377c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13780:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13784:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13788:	bl	14868 <mmk_stub_create@@Base>
   1378c:	mov	r3, r0
   13790:	str	r3, [r4, #36]	; 0x24
   13794:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13798:	bl	155c8 <mmk_free@@Base>
   1379c:	ldr	r3, [fp, #-20]	; 0xffffffec
   137a0:	ldr	r3, [r3, #4]
   137a4:	ldr	r3, [r3, #32]
   137a8:	mov	r0, r3
   137ac:	sub	sp, fp, #8
   137b0:	ldr	r4, [sp]
   137b4:	ldr	fp, [sp, #4]
   137b8:	add	sp, sp, #8
   137bc:	pop	{pc}		; (ldr pc, [sp], #4)
   137c0:	andeq	r3, r1, ip, lsl #20
   137c4:	muleq	r0, ip, r0
   137c8:	andeq	r2, r0, ip, lsr #15
   137cc:	andeq	r2, r0, ip, lsr #14
   137d0:	andeq	r2, r0, r4, ror r7
   137d4:	ldrdeq	r2, [r0], -ip
   137d8:	andeq	r2, r0, ip, ror r6

000137dc <mmk_mock_destroy_internal@@Base>:
   137dc:	str	fp, [sp, #-8]!
   137e0:	str	lr, [sp, #4]
   137e4:	add	fp, sp, #4
   137e8:	sub	sp, sp, #32
   137ec:	str	r0, [fp, #-32]	; 0xffffffe0
   137f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   137f4:	ldr	r3, [r3, #4]
   137f8:	str	r3, [fp, #-8]
   137fc:	b	1381c <mmk_mock_destroy_internal@@Base+0x40>
   13800:	ldr	r3, [fp, #-8]
   13804:	ldr	r3, [r3, #36]	; 0x24
   13808:	str	r3, [fp, #-20]	; 0xffffffec
   1380c:	ldr	r0, [fp, #-8]
   13810:	bl	14964 <mmk_stub_destroy@@Base>
   13814:	ldr	r3, [fp, #-20]	; 0xffffffec
   13818:	str	r3, [fp, #-8]
   1381c:	ldr	r3, [fp, #-8]
   13820:	cmp	r3, #0
   13824:	bne	13800 <mmk_mock_destroy_internal@@Base+0x24>
   13828:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1382c:	ldr	r3, [r3, #8]
   13830:	mov	r0, r3
   13834:	bl	155c8 <mmk_free@@Base>
   13838:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1383c:	ldr	r3, [r3]
   13840:	str	r3, [fp, #-12]
   13844:	b	1389c <mmk_mock_destroy_internal@@Base+0xc0>
   13848:	ldr	r3, [fp, #-12]
   1384c:	ldr	r3, [r3, #4]
   13850:	str	r3, [fp, #-24]	; 0xffffffe8
   13854:	ldr	r3, [fp, #-12]
   13858:	ldr	r3, [r3]
   1385c:	str	r3, [fp, #-16]
   13860:	b	13880 <mmk_mock_destroy_internal@@Base+0xa4>
   13864:	ldr	r3, [fp, #-16]
   13868:	ldr	r3, [r3, #8]
   1386c:	str	r3, [fp, #-28]	; 0xffffffe4
   13870:	ldr	r0, [fp, #-16]
   13874:	bl	155c8 <mmk_free@@Base>
   13878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1387c:	str	r3, [fp, #-16]
   13880:	ldr	r3, [fp, #-16]
   13884:	cmp	r3, #0
   13888:	bne	13864 <mmk_mock_destroy_internal@@Base+0x88>
   1388c:	ldr	r0, [fp, #-12]
   13890:	bl	155c8 <mmk_free@@Base>
   13894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13898:	str	r3, [fp, #-12]
   1389c:	ldr	r3, [fp, #-12]
   138a0:	cmp	r3, #0
   138a4:	bne	13848 <mmk_mock_destroy_internal@@Base+0x6c>
   138a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   138ac:	bl	155c8 <mmk_free@@Base>
   138b0:	nop	{0}
   138b4:	sub	sp, fp, #4
   138b8:	ldr	fp, [sp]
   138bc:	add	sp, sp, #4
   138c0:	pop	{pc}		; (ldr pc, [sp], #4)

000138c4 <mmk_mock_params_begin@@Base>:
   138c4:	push	{fp}		; (str fp, [sp, #-4]!)
   138c8:	add	fp, sp, #0
   138cc:	sub	sp, sp, #12
   138d0:	str	r0, [fp, #-8]
   138d4:	ldr	r3, [fp, #-8]
   138d8:	ldr	r3, [r3, #8]
   138dc:	cmp	r3, #0
   138e0:	beq	138f4 <mmk_mock_params_begin@@Base+0x30>
   138e4:	ldr	r3, [fp, #-8]
   138e8:	ldr	r3, [r3, #12]
   138ec:	cmp	r3, #0
   138f0:	bne	138fc <mmk_mock_params_begin@@Base+0x38>
   138f4:	mov	r3, #0
   138f8:	b	13908 <mmk_mock_params_begin@@Base+0x44>
   138fc:	ldr	r3, [fp, #-8]
   13900:	ldr	r3, [r3, #8]
   13904:	add	r3, r3, #4
   13908:	mov	r0, r3
   1390c:	add	sp, fp, #0
   13910:	pop	{fp}		; (ldr fp, [sp], #4)
   13914:	bx	lr

00013918 <mmk_mock_params_next@@Base>:
   13918:	push	{fp}		; (str fp, [sp, #-4]!)
   1391c:	add	fp, sp, #0
   13920:	sub	sp, sp, #20
   13924:	str	r0, [fp, #-16]
   13928:	str	r1, [fp, #-20]	; 0xffffffec
   1392c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13930:	str	r3, [fp, #-8]
   13934:	ldr	r3, [fp, #-8]
   13938:	ldr	r3, [r3, #-4]
   1393c:	str	r3, [fp, #-12]
   13940:	ldr	r3, [fp, #-12]
   13944:	add	r3, r3, #4
   13948:	ldr	r2, [fp, #-8]
   1394c:	add	r3, r2, r3
   13950:	str	r3, [fp, #-8]
   13954:	ldr	r3, [fp, #-16]
   13958:	ldr	r2, [r3, #8]
   1395c:	ldr	r3, [fp, #-16]
   13960:	ldr	r3, [r3, #12]
   13964:	add	r3, r2, r3
   13968:	ldr	r2, [fp, #-8]
   1396c:	cmp	r2, r3
   13970:	bcc	1397c <mmk_mock_params_next@@Base+0x64>
   13974:	mov	r3, #0
   13978:	b	13980 <mmk_mock_params_next@@Base+0x68>
   1397c:	ldr	r3, [fp, #-8]
   13980:	mov	r0, r3
   13984:	add	sp, fp, #0
   13988:	pop	{fp}		; (ldr fp, [sp], #4)
   1398c:	bx	lr

00013990 <mmk_mock_get_params@@Base>:
   13990:	str	fp, [sp, #-8]!
   13994:	str	lr, [sp, #4]
   13998:	add	fp, sp, #4
   1399c:	sub	sp, sp, #8
   139a0:	bl	14a58 <mmk_ctx@@Base>
   139a4:	mov	r3, r0
   139a8:	mov	r0, r3
   139ac:	bl	145f0 <mmk_stub_context@@Base>
   139b0:	str	r0, [fp, #-8]
   139b4:	ldr	r3, [fp, #-8]
   139b8:	ldr	r3, [r3]
   139bc:	mov	r0, r3
   139c0:	sub	sp, fp, #4
   139c4:	ldr	fp, [sp]
   139c8:	add	sp, sp, #4
   139cc:	pop	{pc}		; (ldr pc, [sp], #4)
   139d0:	push	{fp}		; (str fp, [sp, #-4]!)
   139d4:	add	fp, sp, #0
   139d8:	sub	sp, sp, #20
   139dc:	str	r0, [fp, #-16]
   139e0:	str	r1, [fp, #-20]	; 0xffffffec
   139e4:	ldr	r3, [fp, #-16]
   139e8:	ldr	r3, [r3]
   139ec:	str	r3, [fp, #-12]
   139f0:	ldr	r3, [fp, #-16]
   139f4:	ldr	r3, [r3, #8]
   139f8:	str	r3, [fp, #-8]
   139fc:	b	13a54 <mmk_mock_get_params@@Base+0xc4>
   13a00:	ldr	r3, [fp, #-8]
   13a04:	ldr	r3, [r3]
   13a08:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a0c:	cmp	r2, r3
   13a10:	bne	13a48 <mmk_mock_get_params@@Base+0xb8>
   13a14:	ldr	r3, [fp, #-8]
   13a18:	ldr	r3, [r3, #4]
   13a1c:	ldr	r2, [fp, #-12]
   13a20:	cmp	r2, r3
   13a24:	bhi	13a34 <mmk_mock_get_params@@Base+0xa4>
   13a28:	ldr	r3, [fp, #-8]
   13a2c:	ldr	r3, [r3, #4]
   13a30:	b	13a68 <mmk_mock_get_params@@Base+0xd8>
   13a34:	ldr	r3, [fp, #-8]
   13a38:	ldr	r2, [r3, #4]
   13a3c:	ldr	r3, [fp, #-12]
   13a40:	add	r3, r2, r3
   13a44:	b	13a68 <mmk_mock_get_params@@Base+0xd8>
   13a48:	ldr	r3, [fp, #-8]
   13a4c:	add	r3, r3, #8
   13a50:	str	r3, [fp, #-8]
   13a54:	ldr	r3, [fp, #-8]
   13a58:	ldr	r3, [r3]
   13a5c:	cmp	r3, #0
   13a60:	bne	13a00 <mmk_mock_get_params@@Base+0x70>
   13a64:	mov	r3, #0
   13a68:	mov	r0, r3
   13a6c:	add	sp, fp, #0
   13a70:	pop	{fp}		; (ldr fp, [sp], #4)
   13a74:	bx	lr
   13a78:	push	{fp}		; (str fp, [sp, #-4]!)
   13a7c:	add	fp, sp, #0
   13a80:	sub	sp, sp, #20
   13a84:	str	r0, [fp, #-16]
   13a88:	str	r1, [fp, #-20]	; 0xffffffec
   13a8c:	ldr	r3, [fp, #-16]
   13a90:	ldr	r3, [r3, #8]
   13a94:	str	r3, [fp, #-8]
   13a98:	b	13ac8 <mmk_mock_get_params@@Base+0x138>
   13a9c:	ldr	r3, [fp, #-8]
   13aa0:	ldr	r3, [r3]
   13aa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13aa8:	cmp	r2, r3
   13aac:	bne	13abc <mmk_mock_get_params@@Base+0x12c>
   13ab0:	ldr	r3, [fp, #-8]
   13ab4:	ldr	r3, [r3, #4]
   13ab8:	b	13adc <mmk_mock_get_params@@Base+0x14c>
   13abc:	ldr	r3, [fp, #-8]
   13ac0:	add	r3, r3, #8
   13ac4:	str	r3, [fp, #-8]
   13ac8:	ldr	r3, [fp, #-8]
   13acc:	ldr	r3, [r3]
   13ad0:	cmp	r3, #0
   13ad4:	bne	13a9c <mmk_mock_get_params@@Base+0x10c>
   13ad8:	mov	r3, #0
   13adc:	mov	r0, r3
   13ae0:	add	sp, fp, #0
   13ae4:	pop	{fp}		; (ldr fp, [sp], #4)
   13ae8:	bx	lr
   13aec:	push	{fp}		; (str fp, [sp, #-4]!)
   13af0:	add	fp, sp, #0
   13af4:	sub	sp, sp, #12
   13af8:	str	r0, [fp, #-8]
   13afc:	str	r1, [fp, #-12]
   13b00:	b	13b30 <mmk_mock_get_params@@Base+0x1a0>
   13b04:	ldr	r3, [fp, #-8]
   13b08:	ldr	r3, [r3]
   13b0c:	ldr	r2, [fp, #-12]
   13b10:	cmp	r2, r3
   13b14:	bne	13b24 <mmk_mock_get_params@@Base+0x194>
   13b18:	ldr	r3, [fp, #-8]
   13b1c:	ldr	r3, [r3, #4]
   13b20:	b	13b44 <mmk_mock_get_params@@Base+0x1b4>
   13b24:	ldr	r3, [fp, #-8]
   13b28:	add	r3, r3, #8
   13b2c:	str	r3, [fp, #-8]
   13b30:	ldr	r3, [fp, #-8]
   13b34:	ldr	r3, [r3]
   13b38:	cmp	r3, #0
   13b3c:	bne	13b04 <mmk_mock_get_params@@Base+0x174>
   13b40:	mvn	r3, #0
   13b44:	mov	r0, r3
   13b48:	add	sp, fp, #0
   13b4c:	pop	{fp}		; (ldr fp, [sp], #4)
   13b50:	bx	lr
   13b54:	push	{fp}		; (str fp, [sp, #-4]!)
   13b58:	add	fp, sp, #0
   13b5c:	sub	sp, sp, #20
   13b60:	str	r0, [fp, #-16]
   13b64:	str	r1, [fp, #-20]	; 0xffffffec
   13b68:	mov	r3, #0
   13b6c:	str	r3, [fp, #-8]
   13b70:	b	13bb4 <mmk_mock_get_params@@Base+0x224>
   13b74:	ldr	r3, [fp, #-8]
   13b78:	lsl	r3, r3, #5
   13b7c:	ldr	r2, [fp, #-16]
   13b80:	add	r3, r2, r3
   13b84:	ldr	r3, [r3]
   13b88:	cmp	r3, #2
   13b8c:	bne	13ba8 <mmk_mock_get_params@@Base+0x218>
   13b90:	ldr	r3, [fp, #-8]
   13b94:	lsl	r3, r3, #5
   13b98:	ldr	r2, [fp, #-16]
   13b9c:	add	r3, r2, r3
   13ba0:	ldr	r3, [r3, #8]
   13ba4:	b	13bc8 <mmk_mock_get_params@@Base+0x238>
   13ba8:	ldr	r3, [fp, #-8]
   13bac:	add	r3, r3, #1
   13bb0:	str	r3, [fp, #-8]
   13bb4:	ldr	r2, [fp, #-8]
   13bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bbc:	cmp	r2, r3
   13bc0:	bcc	13b74 <mmk_mock_get_params@@Base+0x1e4>
   13bc4:	mov	r3, #0
   13bc8:	mov	r0, r3
   13bcc:	add	sp, fp, #0
   13bd0:	pop	{fp}		; (ldr fp, [sp], #4)
   13bd4:	bx	lr
   13bd8:	push	{fp}		; (str fp, [sp, #-4]!)
   13bdc:	add	fp, sp, #0
   13be0:	sub	sp, sp, #20
   13be4:	str	r0, [fp, #-16]
   13be8:	ldr	r3, [fp, #-16]
   13bec:	str	r3, [fp, #-8]
   13bf0:	b	13c1c <mmk_mock_get_params@@Base+0x28c>
   13bf4:	ldr	r3, [fp, #-8]
   13bf8:	ldr	r3, [r3]
   13bfc:	cmp	r3, #21
   13c00:	bne	13c10 <mmk_mock_get_params@@Base+0x280>
   13c04:	ldr	r3, [fp, #-8]
   13c08:	ldr	r3, [r3, #4]
   13c0c:	b	13c30 <mmk_mock_get_params@@Base+0x2a0>
   13c10:	ldr	r3, [fp, #-8]
   13c14:	add	r3, r3, #8
   13c18:	str	r3, [fp, #-8]
   13c1c:	ldr	r3, [fp, #-8]
   13c20:	ldr	r3, [r3]
   13c24:	cmp	r3, #0
   13c28:	bne	13bf4 <mmk_mock_get_params@@Base+0x264>
   13c2c:	mov	r3, #0
   13c30:	mov	r0, r3
   13c34:	add	sp, fp, #0
   13c38:	pop	{fp}		; (ldr fp, [sp], #4)
   13c3c:	bx	lr
   13c40:	str	fp, [sp, #-8]!
   13c44:	str	lr, [sp, #4]
   13c48:	add	fp, sp, #4
   13c4c:	sub	sp, sp, #24
   13c50:	ldr	r3, [pc, #200]	; 13d20 <mmk_mock_get_params@@Base+0x390>
   13c54:	add	r3, pc, r3
   13c58:	mov	r2, #0
   13c5c:	str	r2, [fp, #-8]
   13c60:	ldr	r2, [pc, #188]	; 13d24 <mmk_mock_get_params@@Base+0x394>
   13c64:	ldr	r2, [r3, r2]
   13c68:	str	r2, [fp, #-8]
   13c6c:	ldr	r2, [fp, #-8]
   13c70:	cmp	r2, #0
   13c74:	bne	13d08 <mmk_mock_get_params@@Base+0x378>
   13c78:	ldr	r2, [pc, #168]	; 13d28 <mmk_mock_get_params@@Base+0x398>
   13c7c:	ldr	r3, [r3, r2]
   13c80:	ldr	r3, [r3]
   13c84:	str	r3, [fp, #-12]
   13c88:	nop	{0}
   13c8c:	ldr	r3, [fp, #-12]
   13c90:	add	r2, r3, #4
   13c94:	str	r2, [fp, #-12]
   13c98:	ldr	r3, [r3]
   13c9c:	cmp	r3, #0
   13ca0:	bne	13c8c <mmk_mock_get_params@@Base+0x2fc>
   13ca4:	ldr	r3, [fp, #-12]
   13ca8:	str	r3, [fp, #-16]
   13cac:	mov	r1, #3
   13cb0:	ldr	r0, [fp, #-16]
   13cb4:	bl	13aec <mmk_mock_get_params@@Base+0x15c>
   13cb8:	str	r0, [fp, #-20]	; 0xffffffec
   13cbc:	mov	r1, #4
   13cc0:	ldr	r0, [fp, #-16]
   13cc4:	bl	13aec <mmk_mock_get_params@@Base+0x15c>
   13cc8:	str	r0, [fp, #-24]	; 0xffffffe8
   13ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cd0:	cmn	r3, #1
   13cd4:	beq	13d08 <mmk_mock_get_params@@Base+0x378>
   13cd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13cdc:	cmn	r3, #1
   13ce0:	beq	13d08 <mmk_mock_get_params@@Base+0x378>
   13ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ce8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13cec:	mov	r0, r3
   13cf0:	bl	13b54 <mmk_mock_get_params@@Base+0x1c4>
   13cf4:	str	r0, [fp, #-28]	; 0xffffffe4
   13cf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13cfc:	mov	r0, r3
   13d00:	bl	13bd8 <mmk_mock_get_params@@Base+0x248>
   13d04:	str	r0, [fp, #-8]
   13d08:	ldr	r3, [fp, #-8]
   13d0c:	mov	r0, r3
   13d10:	sub	sp, fp, #4
   13d14:	ldr	fp, [sp]
   13d18:	add	sp, sp, #4
   13d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d20:	andeq	r3, r1, r4, lsr #7
   13d24:	andeq	r0, r0, r0, asr #1
   13d28:	andeq	r0, r0, r8, asr #1

00013d2c <plt_init_ctx@@Base>:
   13d2c:	str	fp, [sp, #-8]!
   13d30:	str	lr, [sp, #4]
   13d34:	add	fp, sp, #4
   13d38:	ldr	r3, [pc, #64]	; 13d80 <plt_init_ctx@@Base+0x54>
   13d3c:	add	r3, pc, r3
   13d40:	ldr	r3, [r3]
   13d44:	cmn	r3, #1
   13d48:	bne	13d60 <plt_init_ctx@@Base+0x34>
   13d4c:	bl	13c40 <mmk_mock_get_params@@Base+0x2b0>
   13d50:	mov	r2, r0
   13d54:	ldr	r3, [pc, #40]	; 13d84 <plt_init_ctx@@Base+0x58>
   13d58:	add	r3, pc, r3
   13d5c:	str	r2, [r3]
   13d60:	ldr	r3, [pc, #32]	; 13d88 <plt_init_ctx@@Base+0x5c>
   13d64:	add	r3, pc, r3
   13d68:	ldr	r3, [r3]
   13d6c:	mov	r0, r3
   13d70:	sub	sp, fp, #4
   13d74:	ldr	fp, [sp]
   13d78:	add	sp, sp, #4
   13d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d80:	muleq	r1, r0, r3
   13d84:	andeq	r3, r1, r4, ror r3
   13d88:	andeq	r3, r1, r8, ror #6

00013d8c <plt_get_lib@@Base>:
   13d8c:	str	r4, [sp, #-12]!
   13d90:	str	fp, [sp, #4]
   13d94:	str	lr, [sp, #8]
   13d98:	add	fp, sp, #8
   13d9c:	sub	sp, sp, #60	; 0x3c
   13da0:	str	r0, [fp, #-64]	; 0xffffffc0
   13da4:	str	r1, [fp, #-68]	; 0xffffffbc
   13da8:	ldr	r4, [pc, #936]	; 14158 <plt_get_lib@@Base+0x3cc>
   13dac:	add	r4, pc, r4
   13db0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13db4:	cmp	r3, #0
   13db8:	bne	13dc8 <plt_get_lib@@Base+0x3c>
   13dbc:	ldr	r3, [pc, #920]	; 1415c <plt_get_lib@@Base+0x3d0>
   13dc0:	add	r3, pc, r3
   13dc4:	str	r3, [fp, #-68]	; 0xffffffbc
   13dc8:	mov	r3, #0
   13dcc:	str	r3, [fp, #-16]
   13dd0:	mov	r2, #4
   13dd4:	ldr	r3, [pc, #900]	; 14160 <plt_get_lib@@Base+0x3d4>
   13dd8:	add	r3, pc, r3
   13ddc:	mov	r1, r3
   13de0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13de4:	bl	112d4 <strncmp@plt>
   13de8:	mov	r3, r0
   13dec:	cmp	r3, #0
   13df0:	bne	13e00 <plt_get_lib@@Base+0x74>
   13df4:	mov	r3, #1
   13df8:	str	r3, [fp, #-16]
   13dfc:	b	13f08 <plt_get_lib@@Base+0x17c>
   13e00:	mov	r2, #5
   13e04:	ldr	r3, [pc, #856]	; 14164 <plt_get_lib@@Base+0x3d8>
   13e08:	add	r3, pc, r3
   13e0c:	mov	r1, r3
   13e10:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13e14:	bl	112d4 <strncmp@plt>
   13e18:	mov	r3, r0
   13e1c:	cmp	r3, #0
   13e20:	bne	13e30 <plt_get_lib@@Base+0xa4>
   13e24:	mov	r3, #2
   13e28:	str	r3, [fp, #-16]
   13e2c:	b	13f08 <plt_get_lib@@Base+0x17c>
   13e30:	mov	r2, #4
   13e34:	ldr	r3, [pc, #812]	; 14168 <plt_get_lib@@Base+0x3dc>
   13e38:	add	r3, pc, r3
   13e3c:	mov	r1, r3
   13e40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13e44:	bl	112d4 <strncmp@plt>
   13e48:	mov	r3, r0
   13e4c:	cmp	r3, #0
   13e50:	bne	13e60 <plt_get_lib@@Base+0xd4>
   13e54:	mov	r3, #3
   13e58:	str	r3, [fp, #-16]
   13e5c:	b	13f08 <plt_get_lib@@Base+0x17c>
   13e60:	ldr	r3, [pc, #772]	; 1416c <plt_get_lib@@Base+0x3e0>
   13e64:	add	r3, pc, r3
   13e68:	mov	r1, r3
   13e6c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13e70:	bl	111f0 <strcmp@plt>
   13e74:	mov	r3, r0
   13e78:	cmp	r3, #0
   13e7c:	bne	13e90 <plt_get_lib@@Base+0x104>
   13e80:	ldr	r3, [pc, #744]	; 14170 <plt_get_lib@@Base+0x3e4>
   13e84:	add	r3, pc, r3
   13e88:	str	r3, [fp, #-68]	; 0xffffffbc
   13e8c:	b	13f08 <plt_get_lib@@Base+0x17c>
   13e90:	mov	r1, #58	; 0x3a
   13e94:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13e98:	bl	1128c <strchr@plt>
   13e9c:	str	r0, [fp, #-24]	; 0xffffffe8
   13ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ea4:	cmp	r3, #0
   13ea8:	beq	13ee4 <plt_get_lib@@Base+0x158>
   13eac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13eb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13eb4:	sub	r3, r2, r3
   13eb8:	add	r3, r3, #1
   13ebc:	str	r3, [fp, #-28]	; 0xffffffe4
   13ec0:	ldr	r3, [pc, #684]	; 14174 <plt_get_lib@@Base+0x3e8>
   13ec4:	ldr	r3, [r4, r3]
   13ec8:	ldr	r0, [r3]
   13ecc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13ed0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13ed4:	ldr	r1, [pc, #668]	; 14178 <plt_get_lib@@Base+0x3ec>
   13ed8:	add	r1, pc, r1
   13edc:	bl	11298 <fprintf@plt>
   13ee0:	b	13f04 <plt_get_lib@@Base+0x178>
   13ee4:	ldr	r3, [pc, #648]	; 14174 <plt_get_lib@@Base+0x3e8>
   13ee8:	ldr	r3, [r4, r3]
   13eec:	ldr	r3, [r3]
   13ef0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13ef4:	ldr	r1, [pc, #640]	; 1417c <plt_get_lib@@Base+0x3f0>
   13ef8:	add	r1, pc, r1
   13efc:	mov	r0, r3
   13f00:	bl	11298 <fprintf@plt>
   13f04:	bl	112e0 <abort@plt>
   13f08:	ldr	r3, [fp, #-16]
   13f0c:	cmp	r3, #0
   13f10:	beq	13f2c <plt_get_lib@@Base+0x1a0>
   13f14:	mov	r1, #58	; 0x3a
   13f18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13f1c:	bl	1128c <strchr@plt>
   13f20:	mov	r3, r0
   13f24:	add	r3, r3, #1
   13f28:	b	13f30 <plt_get_lib@@Base+0x1a4>
   13f2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13f30:	str	r3, [fp, #-32]	; 0xffffffe0
   13f34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f38:	bl	11274 <strlen@plt>
   13f3c:	str	r0, [fp, #-36]	; 0xffffffdc
   13f40:	ldr	r3, [pc, #568]	; 14180 <plt_get_lib@@Base+0x3f4>
   13f44:	add	r3, pc, r3
   13f48:	mov	r1, r3
   13f4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f50:	bl	111f0 <strcmp@plt>
   13f54:	mov	r3, r0
   13f58:	cmp	r3, #0
   13f5c:	moveq	r3, #1
   13f60:	movne	r3, #0
   13f64:	uxtb	r3, r3
   13f68:	str	r3, [fp, #-40]	; 0xffffffd8
   13f6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13f70:	ldr	r3, [r3, #4]
   13f74:	str	r3, [fp, #-20]	; 0xffffffec
   13f78:	b	14130 <plt_get_lib@@Base+0x3a4>
   13f7c:	ldr	r3, [fp, #-16]
   13f80:	cmp	r3, #1
   13f84:	bne	140b4 <plt_get_lib@@Base+0x328>
   13f88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13f8c:	cmp	r3, #0
   13f90:	beq	13fec <plt_get_lib@@Base+0x260>
   13f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f98:	ldr	r3, [r3, #4]
   13f9c:	ldr	r2, [pc, #480]	; 14184 <plt_get_lib@@Base+0x3f8>
   13fa0:	add	r2, pc, r2
   13fa4:	mov	r1, r2
   13fa8:	mov	r0, r3
   13fac:	bl	111e4 <strstr@plt>
   13fb0:	mov	r3, r0
   13fb4:	cmp	r3, #0
   13fb8:	bne	13fe4 <plt_get_lib@@Base+0x258>
   13fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fc0:	ldr	r3, [r3, #4]
   13fc4:	ldr	r2, [pc, #444]	; 14188 <plt_get_lib@@Base+0x3fc>
   13fc8:	add	r2, pc, r2
   13fcc:	mov	r1, r2
   13fd0:	mov	r0, r3
   13fd4:	bl	111e4 <strstr@plt>
   13fd8:	mov	r3, r0
   13fdc:	cmp	r3, #0
   13fe0:	beq	14124 <plt_get_lib@@Base+0x398>
   13fe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13fe8:	b	14140 <plt_get_lib@@Base+0x3b4>
   13fec:	mov	r3, sp
   13ff0:	mov	r4, r3
   13ff4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ff8:	add	r3, r3, #8
   13ffc:	str	r3, [fp, #-44]	; 0xffffffd4
   14000:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14004:	mov	r3, ip
   14008:	sub	r3, r3, #1
   1400c:	str	r3, [fp, #-48]	; 0xffffffd0
   14010:	mov	r0, ip
   14014:	mov	r1, #0
   14018:	mov	r2, #0
   1401c:	mov	r3, #0
   14020:	lsl	r3, r1, #3
   14024:	orr	r3, r3, r0, lsr #29
   14028:	lsl	r2, r0, #3
   1402c:	mov	r0, ip
   14030:	mov	r1, #0
   14034:	mov	r2, #0
   14038:	mov	r3, #0
   1403c:	lsl	r3, r1, #3
   14040:	orr	r3, r3, r0, lsr #29
   14044:	lsl	r2, r0, #3
   14048:	add	r3, ip, #7
   1404c:	lsr	r3, r3, #3
   14050:	lsl	r3, r3, #3
   14054:	sub	sp, sp, r3
   14058:	mov	r3, sp
   1405c:	add	r3, r3, #0
   14060:	str	r3, [fp, #-52]	; 0xffffffcc
   14064:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14068:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1406c:	ldr	r2, [pc, #280]	; 1418c <plt_get_lib@@Base+0x400>
   14070:	add	r2, pc, r2
   14074:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14078:	bl	112b0 <snprintf@plt>
   1407c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14080:	ldr	r3, [r3, #4]
   14084:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14088:	mov	r1, r2
   1408c:	mov	r0, r3
   14090:	bl	111e4 <strstr@plt>
   14094:	mov	r3, r0
   14098:	cmp	r3, #0
   1409c:	beq	140ac <plt_get_lib@@Base+0x320>
   140a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   140a4:	mov	sp, r4
   140a8:	b	14140 <plt_get_lib@@Base+0x3b4>
   140ac:	mov	sp, r4
   140b0:	b	14124 <plt_get_lib@@Base+0x398>
   140b4:	ldr	r3, [fp, #-16]
   140b8:	cmp	r3, #0
   140bc:	beq	140cc <plt_get_lib@@Base+0x340>
   140c0:	ldr	r3, [fp, #-16]
   140c4:	cmp	r3, #2
   140c8:	bne	140f4 <plt_get_lib@@Base+0x368>
   140cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   140d0:	ldr	r3, [r3, #4]
   140d4:	mov	r1, r3
   140d8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   140dc:	bl	111f0 <strcmp@plt>
   140e0:	mov	r3, r0
   140e4:	cmp	r3, #0
   140e8:	bne	14124 <plt_get_lib@@Base+0x398>
   140ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   140f0:	b	14140 <plt_get_lib@@Base+0x3b4>
   140f4:	ldr	r3, [fp, #-16]
   140f8:	cmp	r3, #3
   140fc:	bne	14124 <plt_get_lib@@Base+0x398>
   14100:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14104:	ldr	r0, [fp, #-20]	; 0xffffffec
   14108:	bl	14270 <plt_get_lib@@Base+0x4e4>
   1410c:	str	r0, [fp, #-56]	; 0xffffffc8
   14110:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14114:	cmp	r3, #0
   14118:	beq	14124 <plt_get_lib@@Base+0x398>
   1411c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14120:	b	14140 <plt_get_lib@@Base+0x3b4>
   14124:	ldr	r3, [fp, #-20]	; 0xffffffec
   14128:	ldr	r3, [r3, #12]
   1412c:	str	r3, [fp, #-20]	; 0xffffffec
   14130:	ldr	r3, [fp, #-20]	; 0xffffffec
   14134:	cmp	r3, #0
   14138:	bne	13f7c <plt_get_lib@@Base+0x1f0>
   1413c:	mov	r3, #0
   14140:	mov	r0, r3
   14144:	sub	sp, fp, #8
   14148:	ldr	r4, [sp]
   1414c:	ldr	fp, [sp, #4]
   14150:	add	sp, sp, #8
   14154:	pop	{pc}		; (ldr pc, [sp], #4)
   14158:	andeq	r3, r1, ip, asr #4
   1415c:	andeq	r2, r0, r8, asr #32
   14160:	andeq	r2, r0, r8, lsr r0
   14164:	andeq	r2, r0, r0, lsl r0
   14168:	andeq	r1, r0, r8, ror #31
   1416c:	andeq	r1, r0, r4, lsr #31
   14170:	andeq	r1, r0, r4, lsr #31
   14174:	muleq	r0, ip, r0
   14178:	andeq	r1, r0, r4, asr pc
   1417c:	andeq	r1, r0, r8, asr pc
   14180:	andeq	r1, r0, r0, lsr pc
   14184:	ldrdeq	r1, [r0], -r8
   14188:			; <UNDEFINED> instruction: 0x00001ebc
   1418c:	andeq	r1, r0, r0, lsr #28
   14190:	str	fp, [sp, #-8]!
   14194:	str	lr, [sp, #4]
   14198:	add	fp, sp, #4
   1419c:	sub	sp, sp, #32
   141a0:	str	r0, [fp, #-24]	; 0xffffffe8
   141a4:	str	r1, [fp, #-28]	; 0xffffffe4
   141a8:	str	r2, [fp, #-32]	; 0xffffffe0
   141ac:	str	r3, [fp, #-36]	; 0xffffffdc
   141b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   141b4:	ldr	r3, [r3]
   141b8:	str	r3, [fp, #-8]
   141bc:	mov	r3, #0
   141c0:	str	r3, [fp, #-12]
   141c4:	b	14238 <plt_get_lib@@Base+0x4ac>
   141c8:	ldr	r3, [fp, #-8]
   141cc:	ldr	r3, [r3, #4]
   141d0:	lsr	r3, r3, #8
   141d4:	lsl	r3, r3, #4
   141d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   141dc:	add	r3, r2, r3
   141e0:	str	r3, [fp, #-16]
   141e4:	ldr	r3, [fp, #-16]
   141e8:	ldr	r3, [r3]
   141ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   141f0:	add	r3, r2, r3
   141f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   141f8:	mov	r0, r3
   141fc:	bl	111f0 <strcmp@plt>
   14200:	mov	r3, r0
   14204:	cmp	r3, #0
   14208:	bne	14218 <plt_get_lib@@Base+0x48c>
   1420c:	ldr	r3, [fp, #-8]
   14210:	ldr	r3, [r3]
   14214:	b	1425c <plt_get_lib@@Base+0x4d0>
   14218:	ldr	r3, [fp, #-12]
   1421c:	add	r3, r3, #1
   14220:	str	r3, [fp, #-12]
   14224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14228:	ldr	r3, [r3, #8]
   1422c:	ldr	r2, [fp, #-8]
   14230:	add	r3, r2, r3
   14234:	str	r3, [fp, #-8]
   14238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1423c:	ldr	r2, [r3, #4]
   14240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14244:	ldr	r3, [r3, #8]
   14248:	udiv	r3, r2, r3
   1424c:	ldr	r2, [fp, #-12]
   14250:	cmp	r2, r3
   14254:	bcc	141c8 <plt_get_lib@@Base+0x43c>
   14258:	mov	r3, #0
   1425c:	mov	r0, r3
   14260:	sub	sp, fp, #4
   14264:	ldr	fp, [sp]
   14268:	add	sp, sp, #4
   1426c:	pop	{pc}		; (ldr pc, [sp], #4)
   14270:	str	fp, [sp, #-8]!
   14274:	str	lr, [sp, #4]
   14278:	add	fp, sp, #4
   1427c:	sub	sp, sp, #56	; 0x38
   14280:	str	r0, [fp, #-56]	; 0xffffffc8
   14284:	str	r1, [fp, #-60]	; 0xffffffc4
   14288:	mov	r1, #6
   1428c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14290:	bl	139d0 <mmk_mock_get_params@@Base+0x40>
   14294:	str	r0, [fp, #-8]
   14298:	mov	r1, #5
   1429c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142a0:	bl	139d0 <mmk_mock_get_params@@Base+0x40>
   142a4:	str	r0, [fp, #-12]
   142a8:	mov	r1, #20
   142ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142b0:	bl	13a78 <mmk_mock_get_params@@Base+0xe8>
   142b4:	mov	r3, r0
   142b8:	str	r3, [fp, #-16]
   142bc:	mov	r1, #23
   142c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142c4:	bl	139d0 <mmk_mock_get_params@@Base+0x40>
   142c8:	str	r0, [fp, #-20]	; 0xffffffec
   142cc:	mov	r1, #2
   142d0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142d4:	bl	13a78 <mmk_mock_get_params@@Base+0xe8>
   142d8:	str	r0, [fp, #-24]	; 0xffffffe8
   142dc:	ldr	r3, [fp, #-16]
   142e0:	add	r3, r3, #2
   142e4:	mov	r1, r3
   142e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142ec:	bl	13a78 <mmk_mock_get_params@@Base+0xe8>
   142f0:	str	r0, [fp, #-28]	; 0xffffffe4
   142f4:	ldr	r3, [fp, #-8]
   142f8:	cmp	r3, #0
   142fc:	beq	1433c <plt_get_lib@@Base+0x5b0>
   14300:	ldr	r3, [fp, #-12]
   14304:	cmp	r3, #0
   14308:	beq	1433c <plt_get_lib@@Base+0x5b0>
   1430c:	ldr	r3, [fp, #-16]
   14310:	cmp	r3, #0
   14314:	beq	1433c <plt_get_lib@@Base+0x5b0>
   14318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1431c:	cmp	r3, #0
   14320:	beq	1433c <plt_get_lib@@Base+0x5b0>
   14324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14328:	cmp	r3, #0
   1432c:	beq	1433c <plt_get_lib@@Base+0x5b0>
   14330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14334:	cmp	r3, #0
   14338:	bne	14344 <plt_get_lib@@Base+0x5b8>
   1433c:	mov	r3, #0
   14340:	b	143a0 <plt_get_lib@@Base+0x614>
   14344:	ldr	r3, [fp, #-20]	; 0xffffffec
   14348:	str	r3, [fp, #-48]	; 0xffffffd0
   1434c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14350:	str	r3, [fp, #-44]	; 0xffffffd4
   14354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14358:	str	r3, [fp, #-40]	; 0xffffffd8
   1435c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14360:	ldr	r3, [r3]
   14364:	str	r3, [fp, #-32]	; 0xffffffe0
   14368:	sub	r0, fp, #48	; 0x30
   1436c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14370:	ldr	r2, [fp, #-12]
   14374:	ldr	r1, [fp, #-8]
   14378:	bl	14190 <plt_get_lib@@Base+0x404>
   1437c:	str	r0, [fp, #-36]	; 0xffffffdc
   14380:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14384:	cmp	r3, #0
   14388:	beq	1439c <plt_get_lib@@Base+0x610>
   1438c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14390:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14394:	add	r3, r2, r3
   14398:	b	143a0 <plt_get_lib@@Base+0x614>
   1439c:	mov	r3, #0
   143a0:	mov	r0, r3
   143a4:	sub	sp, fp, #4
   143a8:	ldr	fp, [sp]
   143ac:	add	sp, sp, #4
   143b0:	pop	{pc}		; (ldr pc, [sp], #4)

000143b4 <plt_get_offsets@@Base>:
   143b4:	str	fp, [sp, #-8]!
   143b8:	str	lr, [sp, #4]
   143bc:	add	fp, sp, #4
   143c0:	sub	sp, sp, #24
   143c4:	str	r0, [fp, #-16]
   143c8:	str	r1, [fp, #-20]	; 0xffffffec
   143cc:	str	r2, [fp, #-24]	; 0xffffffe8
   143d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   143d4:	ldr	r0, [fp, #-16]
   143d8:	bl	14270 <plt_get_lib@@Base+0x4e4>
   143dc:	str	r0, [fp, #-8]
   143e0:	ldr	r3, [fp, #-8]
   143e4:	cmp	r3, #0
   143e8:	beq	1442c <plt_get_offsets@@Base+0x78>
   143ec:	mov	r0, #8
   143f0:	bl	15520 <mmk_malloc@@Base>
   143f4:	str	r0, [fp, #-12]
   143f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   143fc:	mov	r2, #1
   14400:	str	r2, [r3]
   14404:	ldr	r3, [fp, #-12]
   14408:	mov	r1, r3
   1440c:	mov	r2, #0
   14410:	mov	r3, #0
   14414:	strd	r2, [r1]
   14418:	ldr	r3, [fp, #-12]
   1441c:	ldr	r2, [fp, #-8]
   14420:	str	r2, [r3]
   14424:	ldr	r3, [fp, #-12]
   14428:	b	14430 <plt_get_offsets@@Base+0x7c>
   1442c:	mov	r3, #0
   14430:	mov	r0, r3
   14434:	sub	sp, fp, #4
   14438:	ldr	fp, [sp]
   1443c:	add	sp, sp, #4
   14440:	pop	{pc}		; (ldr pc, [sp], #4)

00014444 <plt_set_offsets@@Base>:
   14444:	push	{fp}		; (str fp, [sp, #-4]!)
   14448:	add	fp, sp, #0
   1444c:	sub	sp, sp, #28
   14450:	str	r0, [fp, #-16]
   14454:	str	r1, [fp, #-20]	; 0xffffffec
   14458:	str	r2, [fp, #-24]	; 0xffffffe8
   1445c:	mov	r3, #0
   14460:	str	r3, [fp, #-8]
   14464:	b	144d8 <plt_set_offsets@@Base+0x94>
   14468:	ldr	r3, [fp, #-8]
   1446c:	lsl	r3, r3, #3
   14470:	ldr	r2, [fp, #-16]
   14474:	add	r3, r2, r3
   14478:	ldr	r3, [r3, #4]
   1447c:	cmp	r3, #0
   14480:	bne	144b0 <plt_set_offsets@@Base+0x6c>
   14484:	ldr	r3, [fp, #-8]
   14488:	lsl	r3, r3, #3
   1448c:	ldr	r2, [fp, #-16]
   14490:	add	r3, r2, r3
   14494:	ldr	r2, [r3]
   14498:	ldr	r3, [fp, #-8]
   1449c:	lsl	r3, r3, #3
   144a0:	ldr	r1, [fp, #-16]
   144a4:	add	r3, r1, r3
   144a8:	ldr	r2, [r2]
   144ac:	str	r2, [r3, #4]
   144b0:	ldr	r3, [fp, #-8]
   144b4:	lsl	r3, r3, #3
   144b8:	ldr	r2, [fp, #-16]
   144bc:	add	r3, r2, r3
   144c0:	ldr	r3, [r3]
   144c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144c8:	str	r2, [r3]
   144cc:	ldr	r3, [fp, #-8]
   144d0:	add	r3, r3, #1
   144d4:	str	r3, [fp, #-8]
   144d8:	ldr	r2, [fp, #-8]
   144dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   144e0:	cmp	r2, r3
   144e4:	bcc	14468 <plt_set_offsets@@Base+0x24>
   144e8:	nop	{0}
   144ec:	add	sp, fp, #0
   144f0:	pop	{fp}		; (ldr fp, [sp], #4)
   144f4:	bx	lr

000144f8 <plt_reset_offsets@@Base>:
   144f8:	push	{fp}		; (str fp, [sp, #-4]!)
   144fc:	add	fp, sp, #0
   14500:	sub	sp, sp, #20
   14504:	str	r0, [fp, #-16]
   14508:	str	r1, [fp, #-20]	; 0xffffffec
   1450c:	mov	r3, #0
   14510:	str	r3, [fp, #-8]
   14514:	b	14550 <plt_reset_offsets@@Base+0x58>
   14518:	ldr	r3, [fp, #-8]
   1451c:	lsl	r3, r3, #3
   14520:	ldr	r2, [fp, #-16]
   14524:	add	r2, r2, r3
   14528:	ldr	r3, [fp, #-8]
   1452c:	lsl	r3, r3, #3
   14530:	ldr	r1, [fp, #-16]
   14534:	add	r3, r1, r3
   14538:	ldr	r3, [r3]
   1453c:	ldr	r2, [r2, #4]
   14540:	str	r2, [r3]
   14544:	ldr	r3, [fp, #-8]
   14548:	add	r3, r3, #1
   1454c:	str	r3, [fp, #-8]
   14550:	ldr	r2, [fp, #-8]
   14554:	ldr	r3, [fp, #-20]	; 0xffffffec
   14558:	cmp	r2, r3
   1455c:	bcc	14518 <plt_reset_offsets@@Base+0x20>
   14560:	nop	{0}
   14564:	add	sp, fp, #0
   14568:	pop	{fp}		; (ldr fp, [sp], #4)
   1456c:	bx	lr

00014570 <plt_get_real_fn@@Base>:
   14570:	str	fp, [sp, #-8]!
   14574:	str	lr, [sp, #4]
   14578:	add	fp, sp, #4
   1457c:	sub	sp, sp, #16
   14580:	str	r0, [fp, #-16]
   14584:	str	r1, [fp, #-20]	; 0xffffffec
   14588:	ldr	r3, [fp, #-16]
   1458c:	ldr	r3, [r3, #4]
   14590:	str	r3, [fp, #-8]
   14594:	b	145cc <plt_get_real_fn@@Base+0x5c>
   14598:	ldr	r1, [fp, #-20]	; 0xffffffec
   1459c:	ldr	r0, [fp, #-8]
   145a0:	bl	14270 <plt_get_lib@@Base+0x4e4>
   145a4:	str	r0, [fp, #-12]
   145a8:	ldr	r3, [fp, #-12]
   145ac:	cmp	r3, #0
   145b0:	beq	145c0 <plt_get_real_fn@@Base+0x50>
   145b4:	ldr	r3, [fp, #-12]
   145b8:	ldr	r3, [r3]
   145bc:	b	145dc <plt_get_real_fn@@Base+0x6c>
   145c0:	ldr	r3, [fp, #-8]
   145c4:	ldr	r3, [r3, #12]
   145c8:	str	r3, [fp, #-8]
   145cc:	ldr	r3, [fp, #-8]
   145d0:	cmp	r3, #0
   145d4:	bne	14598 <plt_get_real_fn@@Base+0x28>
   145d8:	mov	r3, #0
   145dc:	mov	r0, r3
   145e0:	sub	sp, fp, #4
   145e4:	ldr	fp, [sp]
   145e8:	add	sp, sp, #4
   145ec:	pop	{pc}		; (ldr pc, [sp], #4)

000145f0 <mmk_stub_context@@Base>:
   145f0:	push	{fp}		; (str fp, [sp, #-4]!)
   145f4:	add	fp, sp, #0
   145f8:	sub	sp, sp, #12
   145fc:	str	r0, [fp, #-8]
   14600:	ldr	r3, [fp, #-8]
   14604:	cmp	r3, #0
   14608:	bne	14614 <mmk_stub_context@@Base+0x24>
   1460c:	mov	r3, #0
   14610:	b	1461c <mmk_stub_context@@Base+0x2c>
   14614:	ldr	r3, [fp, #-8]
   14618:	ldr	r3, [r3, #12]
   1461c:	mov	r0, r3
   14620:	add	sp, fp, #0
   14624:	pop	{fp}		; (ldr fp, [sp], #4)
   14628:	bx	lr

0001462c <mmk_stub_create_static@@Base>:
   1462c:	str	r4, [sp, #-12]!
   14630:	str	fp, [sp, #4]
   14634:	str	lr, [sp, #8]
   14638:	add	fp, sp, #8
   1463c:	sub	sp, sp, #44	; 0x2c
   14640:	str	r0, [fp, #-40]	; 0xffffffd8
   14644:	str	r1, [fp, #-44]	; 0xffffffd4
   14648:	str	r2, [fp, #-48]	; 0xffffffd0
   1464c:	str	r3, [fp, #-52]	; 0xffffffcc
   14650:	ldr	r4, [pc, #504]	; 14850 <mmk_stub_create_static@@Base+0x224>
   14654:	add	r4, pc, r4
   14658:	ldr	r3, [pc, #500]	; 14854 <mmk_stub_create_static@@Base+0x228>
   1465c:	add	r3, pc, r3
   14660:	mov	r0, r3
   14664:	bl	112c8 <__tls_get_addr@plt>
   14668:	mov	r2, r0
   1466c:	mov	r3, #0
   14670:	str	r3, [r2]
   14674:	ldr	r3, [pc, #476]	; 14858 <mmk_stub_create_static@@Base+0x22c>
   14678:	add	r3, pc, r3
   1467c:	mov	r0, r3
   14680:	bl	112c8 <__tls_get_addr@plt>
   14684:	mov	r2, r0
   14688:	mov	r3, #0
   1468c:	str	r3, [r2]
   14690:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14694:	bl	1546c <mmk_strlen@@Base>
   14698:	mov	r3, r0
   1469c:	add	r3, r3, #1
   146a0:	mov	r0, r3
   146a4:	bl	15520 <mmk_malloc@@Base>
   146a8:	str	r0, [fp, #-20]	; 0xffffffec
   146ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   146b0:	cmp	r3, #0
   146b4:	bne	146c0 <mmk_stub_create_static@@Base+0x94>
   146b8:	mvn	r3, #11
   146bc:	b	14838 <mmk_stub_create_static@@Base+0x20c>
   146c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   146c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146c8:	bl	15370 <mmk_strcpy@@Base>
   146cc:	mov	r3, #0
   146d0:	str	r3, [fp, #-16]
   146d4:	mov	r1, #64	; 0x40
   146d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   146dc:	bl	15308 <mmk_strchr@@Base>
   146e0:	str	r0, [fp, #-24]	; 0xffffffe8
   146e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146e8:	cmp	r3, #0
   146ec:	beq	14708 <mmk_stub_create_static@@Base+0xdc>
   146f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   146f4:	mov	r2, #0
   146f8:	strb	r2, [r3]
   146fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14700:	add	r3, r3, #1
   14704:	str	r3, [fp, #-16]
   14708:	bl	132b0 <mmk_plt_ctx@@Base>
   1470c:	mov	r3, r0
   14710:	ldr	r1, [fp, #-16]
   14714:	mov	r0, r3
   14718:	bl	13d8c <plt_get_lib@@Base>
   1471c:	str	r0, [fp, #-28]	; 0xffffffe4
   14720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14724:	cmp	r3, #0
   14728:	bne	14734 <mmk_stub_create_static@@Base+0x108>
   1472c:	mvn	r3, #1
   14730:	b	14838 <mmk_stub_create_static@@Base+0x20c>
   14734:	mov	r3, #0
   14738:	str	r3, [fp, #-36]	; 0xffffffdc
   1473c:	sub	r3, fp, #36	; 0x24
   14740:	mov	r2, r3
   14744:	ldr	r1, [fp, #-20]	; 0xffffffec
   14748:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1474c:	bl	143b4 <plt_get_offsets@@Base>
   14750:	str	r0, [fp, #-32]	; 0xffffffe0
   14754:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14758:	cmp	r3, #0
   1475c:	beq	1476c <mmk_stub_create_static@@Base+0x140>
   14760:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14764:	cmp	r3, #0
   14768:	bne	14774 <mmk_stub_create_static@@Base+0x148>
   1476c:	mvn	r3, #1
   14770:	b	14838 <mmk_stub_create_static@@Base+0x20c>
   14774:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14778:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1477c:	mov	r1, r3
   14780:	mov	r2, #0
   14784:	mov	r3, #0
   14788:	strd	r2, [r1]
   1478c:	strd	r2, [r1, #8]
   14790:	strd	r2, [r1, #16]
   14794:	strd	r2, [r1, #24]
   14798:	strd	r2, [r1, #32]
   1479c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147a0:	ldr	r2, [pc, #180]	; 1485c <mmk_stub_create_static@@Base+0x230>
   147a4:	ldr	r2, [r4, r2]
   147a8:	str	r2, [r3]
   147ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147b0:	ldr	r2, [pc, #168]	; 14860 <mmk_stub_create_static@@Base+0x234>
   147b4:	ldr	r2, [r4, r2]
   147b8:	str	r2, [r3, #4]
   147bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147c0:	ldr	r2, [pc, #156]	; 14864 <mmk_stub_create_static@@Base+0x238>
   147c4:	ldr	r2, [r4, r2]
   147c8:	str	r2, [r3, #8]
   147cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   147d4:	str	r2, [r3, #12]
   147d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   147e0:	str	r2, [r3, #16]
   147e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147e8:	ldr	r2, [fp, #-16]
   147ec:	str	r2, [r3, #20]
   147f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   147f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   147f8:	str	r2, [r3, #24]
   147fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14800:	str	r0, [r3, #28]
   14804:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14808:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1480c:	bl	14adc <create_trampoline@@Base>
   14810:	mov	r2, r0
   14814:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14818:	str	r2, [r3, #32]
   1481c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14820:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14824:	ldr	r3, [r3, #32]
   14828:	mov	r2, r3
   1482c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14830:	bl	14444 <plt_set_offsets@@Base>
   14834:	mov	r3, #0
   14838:	mov	r0, r3
   1483c:	sub	sp, fp, #8
   14840:	ldr	r4, [sp]
   14844:	ldr	fp, [sp, #4]
   14848:	add	sp, sp, #8
   1484c:	pop	{pc}		; (ldr pc, [sp], #4)
   14850:	andeq	r2, r1, r4, lsr #19
   14854:	andeq	r2, r1, r8, lsl #20
   14858:	strdeq	r2, [r1], -r4
   1485c:	andeq	r0, r0, r4, asr #1
   14860:	andeq	r0, r0, r8, lsr #1
   14864:	strheq	r0, [r0], -r4

00014868 <mmk_stub_create@@Base>:
   14868:	str	fp, [sp, #-8]!
   1486c:	str	lr, [sp, #4]
   14870:	add	fp, sp, #4
   14874:	sub	sp, sp, #24
   14878:	str	r0, [fp, #-16]
   1487c:	str	r1, [fp, #-20]	; 0xffffffec
   14880:	str	r2, [fp, #-24]	; 0xffffffe8
   14884:	bl	131bc <mmk_init@@Base>
   14888:	mov	r0, #40	; 0x28
   1488c:	bl	15520 <mmk_malloc@@Base>
   14890:	str	r0, [fp, #-8]
   14894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14898:	ldr	r2, [fp, #-20]	; 0xffffffec
   1489c:	ldr	r1, [fp, #-16]
   148a0:	ldr	r0, [fp, #-8]
   148a4:	bl	1462c <mmk_stub_create_static@@Base>
   148a8:	str	r0, [fp, #-12]
   148ac:	ldr	r3, [fp, #-12]
   148b0:	cmp	r3, #0
   148b4:	bge	148d8 <mmk_stub_create@@Base+0x70>
   148b8:	ldr	r0, [fp, #-8]
   148bc:	bl	155c8 <mmk_free@@Base>
   148c0:	bl	112a4 <__errno_location@plt>
   148c4:	mov	r2, r0
   148c8:	ldr	r3, [fp, #-12]
   148cc:	str	r3, [r2]
   148d0:	mov	r3, #0
   148d4:	str	r3, [fp, #-8]
   148d8:	ldr	r3, [fp, #-8]
   148dc:	mov	r0, r3
   148e0:	sub	sp, fp, #4
   148e4:	ldr	fp, [sp]
   148e8:	add	sp, sp, #4
   148ec:	pop	{pc}		; (ldr pc, [sp], #4)

000148f0 <mmk_stub_destroy_static@@Base>:
   148f0:	str	fp, [sp, #-8]!
   148f4:	str	lr, [sp, #4]
   148f8:	add	fp, sp, #4
   148fc:	sub	sp, sp, #8
   14900:	str	r0, [fp, #-8]
   14904:	ldr	r3, [fp, #-8]
   14908:	ldr	r2, [r3, #24]
   1490c:	ldr	r3, [fp, #-8]
   14910:	ldr	r3, [r3, #28]
   14914:	mov	r1, r3
   14918:	mov	r0, r2
   1491c:	bl	144f8 <plt_reset_offsets@@Base>
   14920:	ldr	r3, [fp, #-8]
   14924:	ldr	r3, [r3, #24]
   14928:	mov	r0, r3
   1492c:	bl	155c8 <mmk_free@@Base>
   14930:	ldr	r3, [fp, #-8]
   14934:	ldr	r3, [r3, #32]
   14938:	mov	r0, r3
   1493c:	bl	14c54 <destroy_trampoline@@Base>
   14940:	ldr	r3, [fp, #-8]
   14944:	ldr	r3, [r3, #16]
   14948:	mov	r0, r3
   1494c:	bl	155c8 <mmk_free@@Base>
   14950:	nop	{0}
   14954:	sub	sp, fp, #4
   14958:	ldr	fp, [sp]
   1495c:	add	sp, sp, #4
   14960:	pop	{pc}		; (ldr pc, [sp], #4)

00014964 <mmk_stub_destroy@@Base>:
   14964:	str	fp, [sp, #-8]!
   14968:	str	lr, [sp, #4]
   1496c:	add	fp, sp, #4
   14970:	sub	sp, sp, #8
   14974:	str	r0, [fp, #-8]
   14978:	ldr	r0, [fp, #-8]
   1497c:	bl	148f0 <mmk_stub_destroy_static@@Base>
   14980:	ldr	r0, [fp, #-8]
   14984:	bl	155c8 <mmk_free@@Base>
   14988:	nop	{0}
   1498c:	sub	sp, fp, #4
   14990:	ldr	fp, [sp]
   14994:	add	sp, sp, #4
   14998:	pop	{pc}		; (ldr pc, [sp], #4)

0001499c <mmk_ask_ctx@@Base>:
   1499c:	str	fp, [sp, #-8]!
   149a0:	str	lr, [sp, #4]
   149a4:	add	fp, sp, #4
   149a8:	sub	sp, sp, #8
   149ac:	str	r0, [fp, #-8]
   149b0:	ldr	r3, [pc, #52]	; 149ec <mmk_ask_ctx@@Base+0x50>
   149b4:	add	r3, pc, r3
   149b8:	mov	r0, r3
   149bc:	bl	112c8 <__tls_get_addr@plt>
   149c0:	mov	r2, r0
   149c4:	mov	r3, #1
   149c8:	str	r3, [r2]
   149cc:	ldr	r3, [fp, #-8]
   149d0:	blx	r3
   149d4:	mov	r3, r0
   149d8:	mov	r0, r3
   149dc:	sub	sp, fp, #4
   149e0:	ldr	fp, [sp]
   149e4:	add	sp, sp, #4
   149e8:	pop	{pc}		; (ldr pc, [sp], #4)
   149ec:			; <UNDEFINED> instruction: 0x000126b0

000149f0 <mmk_ctx_asked@@Base>:
   149f0:	str	fp, [sp, #-8]!
   149f4:	str	lr, [sp, #4]
   149f8:	add	fp, sp, #4
   149fc:	sub	sp, sp, #8
   14a00:	ldr	r3, [pc, #72]	; 14a50 <mmk_ctx_asked@@Base+0x60>
   14a04:	add	r3, pc, r3
   14a08:	mov	r0, r3
   14a0c:	bl	112c8 <__tls_get_addr@plt>
   14a10:	mov	r3, r0
   14a14:	ldr	r3, [r3]
   14a18:	str	r3, [fp, #-8]
   14a1c:	ldr	r3, [pc, #48]	; 14a54 <mmk_ctx_asked@@Base+0x64>
   14a20:	add	r3, pc, r3
   14a24:	mov	r0, r3
   14a28:	bl	112c8 <__tls_get_addr@plt>
   14a2c:	mov	r2, r0
   14a30:	mov	r3, #0
   14a34:	str	r3, [r2]
   14a38:	ldr	r3, [fp, #-8]
   14a3c:	mov	r0, r3
   14a40:	sub	sp, fp, #4
   14a44:	ldr	fp, [sp]
   14a48:	add	sp, sp, #4
   14a4c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a50:	andeq	r2, r1, r0, ror #12
   14a54:	andeq	r2, r1, r4, asr #12

00014a58 <mmk_ctx@@Base>:
   14a58:	str	fp, [sp, #-8]!
   14a5c:	str	lr, [sp, #4]
   14a60:	add	fp, sp, #4
   14a64:	ldr	r3, [pc, #36]	; 14a90 <mmk_ctx@@Base+0x38>
   14a68:	add	r3, pc, r3
   14a6c:	mov	r0, r3
   14a70:	bl	112c8 <__tls_get_addr@plt>
   14a74:	mov	r3, r0
   14a78:	ldr	r3, [r3]
   14a7c:	mov	r0, r3
   14a80:	sub	sp, fp, #4
   14a84:	ldr	fp, [sp]
   14a88:	add	sp, sp, #4
   14a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14a90:	andeq	r2, r1, r4, lsl #12

00014a94 <mmk_set_ctx@@Base>:
   14a94:	str	fp, [sp, #-8]!
   14a98:	str	lr, [sp, #4]
   14a9c:	add	fp, sp, #4
   14aa0:	sub	sp, sp, #8
   14aa4:	str	r0, [fp, #-8]
   14aa8:	ldr	r3, [pc, #40]	; 14ad8 <mmk_set_ctx@@Base+0x44>
   14aac:	add	r3, pc, r3
   14ab0:	mov	r0, r3
   14ab4:	bl	112c8 <__tls_get_addr@plt>
   14ab8:	mov	r2, r0
   14abc:	ldr	r3, [fp, #-8]
   14ac0:	str	r3, [r2]
   14ac4:	nop	{0}
   14ac8:	sub	sp, fp, #4
   14acc:	ldr	fp, [sp]
   14ad0:	add	sp, sp, #4
   14ad4:	pop	{pc}		; (ldr pc, [sp], #4)
   14ad8:	andeq	r2, r1, r0, asr #11

00014adc <create_trampoline@@Base>:
   14adc:	str	r4, [sp, #-12]!
   14ae0:	str	fp, [sp, #4]
   14ae4:	str	lr, [sp, #8]
   14ae8:	add	fp, sp, #8
   14aec:	sub	sp, sp, #28
   14af0:	str	r0, [fp, #-24]	; 0xffffffe8
   14af4:	str	r1, [fp, #-28]	; 0xffffffe4
   14af8:	ldr	r4, [pc, #300]	; 14c2c <create_trampoline@@Base+0x150>
   14afc:	add	r4, pc, r4
   14b00:	ldr	r3, [pc, #296]	; 14c30 <create_trampoline@@Base+0x154>
   14b04:	ldr	r3, [r4, r3]
   14b08:	mov	r2, r3
   14b0c:	ldr	r3, [pc, #288]	; 14c34 <create_trampoline@@Base+0x158>
   14b10:	ldr	r3, [r4, r3]
   14b14:	sub	r3, r2, r3
   14b18:	str	r3, [fp, #-16]
   14b1c:	ldr	r3, [fp, #-16]
   14b20:	cmp	r3, #4096	; 0x1000
   14b24:	bcc	14b5c <create_trampoline@@Base+0x80>
   14b28:	ldr	r3, [pc, #264]	; 14c38 <create_trampoline@@Base+0x15c>
   14b2c:	ldr	r3, [r4, r3]
   14b30:	ldr	r0, [r3]
   14b34:	ldr	r3, [pc, #256]	; 14c3c <create_trampoline@@Base+0x160>
   14b38:	add	r3, pc, r3
   14b3c:	str	r3, [sp]
   14b40:	mov	r3, #45	; 0x2d
   14b44:	ldr	r2, [pc, #244]	; 14c40 <create_trampoline@@Base+0x164>
   14b48:	add	r2, pc, r2
   14b4c:	ldr	r1, [pc, #240]	; 14c44 <create_trampoline@@Base+0x168>
   14b50:	add	r1, pc, r1
   14b54:	bl	11298 <fprintf@plt>
   14b58:	bl	112e0 <abort@plt>
   14b5c:	mov	r3, #0
   14b60:	str	r3, [sp, #4]
   14b64:	mvn	r3, #0
   14b68:	str	r3, [sp]
   14b6c:	mov	r3, #34	; 0x22
   14b70:	mov	r2, #7
   14b74:	mov	r1, #4096	; 0x1000
   14b78:	mov	r0, #0
   14b7c:	bl	11280 <mmap@plt>
   14b80:	str	r0, [fp, #-20]	; 0xffffffec
   14b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b88:	cmn	r3, #1
   14b8c:	bne	14bc4 <create_trampoline@@Base+0xe8>
   14b90:	ldr	r3, [pc, #160]	; 14c38 <create_trampoline@@Base+0x15c>
   14b94:	ldr	r3, [r4, r3]
   14b98:	ldr	r0, [r3]
   14b9c:	ldr	r3, [pc, #164]	; 14c48 <create_trampoline@@Base+0x16c>
   14ba0:	add	r3, pc, r3
   14ba4:	str	r3, [sp]
   14ba8:	mov	r3, #69	; 0x45
   14bac:	ldr	r2, [pc, #152]	; 14c4c <create_trampoline@@Base+0x170>
   14bb0:	add	r2, pc, r2
   14bb4:	ldr	r1, [pc, #148]	; 14c50 <create_trampoline@@Base+0x174>
   14bb8:	add	r1, pc, r1
   14bbc:	bl	11298 <fprintf@plt>
   14bc0:	bl	112e0 <abort@plt>
   14bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14bcc:	str	r2, [r3]
   14bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14bd4:	add	r3, r3, #4
   14bd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14bdc:	str	r2, [r3]
   14be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14be4:	add	r0, r3, #8
   14be8:	ldr	r2, [fp, #-16]
   14bec:	ldr	r3, [pc, #64]	; 14c34 <create_trampoline@@Base+0x158>
   14bf0:	ldr	r3, [r4, r3]
   14bf4:	mov	r1, r3
   14bf8:	bl	11214 <memcpy@plt>
   14bfc:	mov	r2, #5
   14c00:	mov	r1, #4096	; 0x1000
   14c04:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c08:	bl	111fc <mprotect@plt>
   14c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c10:	add	r3, r3, #8
   14c14:	mov	r0, r3
   14c18:	sub	sp, fp, #8
   14c1c:	ldr	r4, [sp]
   14c20:	ldr	fp, [sp, #4]
   14c24:	add	sp, sp, #8
   14c28:	pop	{pc}		; (ldr pc, [sp], #4)
   14c2c:	strdeq	r2, [r1], -ip
   14c30:	muleq	r0, r0, r0
   14c34:	andeq	r0, r0, r4, lsr #1
   14c38:	muleq	r0, ip, r0
   14c3c:	ldrdeq	r1, [r0], -ip
   14c40:	andeq	r1, r0, r4, asr r3
   14c44:	andeq	r1, r0, r4, lsr #7
   14c48:	muleq	r0, r0, r3
   14c4c:	andeq	r1, r0, ip, ror #5
   14c50:	andeq	r1, r0, ip, lsr r3

00014c54 <destroy_trampoline@@Base>:
   14c54:	str	fp, [sp, #-8]!
   14c58:	str	lr, [sp, #4]
   14c5c:	add	fp, sp, #4
   14c60:	sub	sp, sp, #8
   14c64:	str	r0, [fp, #-8]
   14c68:	ldr	r3, [fp, #-8]
   14c6c:	sub	r3, r3, #8
   14c70:	mov	r1, #4096	; 0x1000
   14c74:	mov	r0, r3
   14c78:	bl	112bc <munmap@plt>
   14c7c:	nop	{0}
   14c80:	sub	sp, fp, #4
   14c84:	ldr	fp, [sp]
   14c88:	add	sp, sp, #4
   14c8c:	pop	{pc}		; (ldr pc, [sp], #4)

00014c90 <mmk_verify_set_times@@Base>:
   14c90:	str	fp, [sp, #-8]!
   14c94:	str	lr, [sp, #4]
   14c98:	add	fp, sp, #4
   14c9c:	sub	sp, sp, #8
   14ca0:	str	r0, [fp, #-8]
   14ca4:	ldr	r3, [pc, #40]	; 14cd4 <mmk_verify_set_times@@Base+0x44>
   14ca8:	add	r3, pc, r3
   14cac:	mov	r0, r3
   14cb0:	bl	112c8 <__tls_get_addr@plt>
   14cb4:	mov	r2, r0
   14cb8:	ldr	r3, [fp, #-8]
   14cbc:	str	r3, [r2]
   14cc0:	nop	{0}
   14cc4:	sub	sp, fp, #4
   14cc8:	ldr	fp, [sp]
   14ccc:	add	sp, sp, #4
   14cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   14cd4:	andeq	r2, r1, ip, asr #7

00014cd8 <mmk_verify_times@@Base>:
   14cd8:	str	fp, [sp, #-8]!
   14cdc:	str	lr, [sp, #4]
   14ce0:	add	fp, sp, #4
   14ce4:	sub	sp, sp, #16
   14ce8:	str	r0, [fp, #-16]
   14cec:	ldr	r3, [pc, #268]	; 14e00 <mmk_verify_times@@Base+0x128>
   14cf0:	add	r3, pc, r3
   14cf4:	mov	r0, r3
   14cf8:	bl	112c8 <__tls_get_addr@plt>
   14cfc:	mov	r3, r0
   14d00:	ldr	r3, [r3]
   14d04:	str	r3, [fp, #-8]
   14d08:	ldr	r3, [fp, #-16]
   14d0c:	ldr	r3, [r3, #4]
   14d10:	cmp	r3, #0
   14d14:	beq	14d30 <mmk_verify_times@@Base+0x58>
   14d18:	ldr	r3, [fp, #-8]
   14d1c:	cmp	r3, #0
   14d20:	moveq	r3, #1
   14d24:	movne	r3, #0
   14d28:	uxtb	r3, r3
   14d2c:	b	14dec <mmk_verify_times@@Base+0x114>
   14d30:	ldr	r3, [fp, #-16]
   14d34:	ldr	r3, [r3, #8]
   14d38:	cmp	r3, #0
   14d3c:	bne	14d50 <mmk_verify_times@@Base+0x78>
   14d40:	ldr	r3, [fp, #-16]
   14d44:	ldr	r3, [r3, #12]
   14d48:	cmp	r3, #0
   14d4c:	beq	14da8 <mmk_verify_times@@Base+0xd0>
   14d50:	ldr	r3, [fp, #-16]
   14d54:	ldr	r3, [r3, #12]
   14d58:	cmp	r3, #0
   14d5c:	beq	14d6c <mmk_verify_times@@Base+0x94>
   14d60:	ldr	r3, [fp, #-16]
   14d64:	ldr	r3, [r3, #12]
   14d68:	b	14d70 <mmk_verify_times@@Base+0x98>
   14d6c:	ldr	r3, [fp, #-8]
   14d70:	str	r3, [fp, #-12]
   14d74:	ldr	r3, [fp, #-16]
   14d78:	ldr	r3, [r3, #8]
   14d7c:	ldr	r2, [fp, #-8]
   14d80:	cmp	r2, r3
   14d84:	bcc	14da0 <mmk_verify_times@@Base+0xc8>
   14d88:	ldr	r2, [fp, #-8]
   14d8c:	ldr	r3, [fp, #-12]
   14d90:	cmp	r2, r3
   14d94:	bhi	14da0 <mmk_verify_times@@Base+0xc8>
   14d98:	mov	r3, #1
   14d9c:	b	14dec <mmk_verify_times@@Base+0x114>
   14da0:	mov	r3, #0
   14da4:	b	14dec <mmk_verify_times@@Base+0x114>
   14da8:	ldr	r3, [fp, #-16]
   14dac:	ldr	r3, [r3, #20]
   14db0:	cmp	r3, #0
   14db4:	beq	14dd0 <mmk_verify_times@@Base+0xf8>
   14db8:	ldr	r3, [fp, #-16]
   14dbc:	ldr	r3, [r3, #20]
   14dc0:	ldr	r0, [fp, #-8]
   14dc4:	blx	r3
   14dc8:	mov	r3, r0
   14dcc:	b	14dec <mmk_verify_times@@Base+0x114>
   14dd0:	ldr	r3, [fp, #-16]
   14dd4:	ldr	r3, [r3, #16]
   14dd8:	ldr	r2, [fp, #-8]
   14ddc:	cmp	r2, r3
   14de0:	moveq	r3, #1
   14de4:	movne	r3, #0
   14de8:	uxtb	r3, r3
   14dec:	mov	r0, r3
   14df0:	sub	sp, fp, #4
   14df4:	ldr	fp, [sp]
   14df8:	add	sp, sp, #4
   14dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   14e00:	andeq	r2, r1, r4, lsl #7
   14e04:	str	fp, [sp, #-8]!
   14e08:	str	lr, [sp, #4]
   14e0c:	add	fp, sp, #4
   14e10:	sub	sp, sp, #32
   14e14:	str	r0, [fp, #-24]	; 0xffffffe8
   14e18:	str	r1, [fp, #-28]	; 0xffffffe4
   14e1c:	str	r2, [fp, #-32]	; 0xffffffe0
   14e20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e24:	add	r3, r3, #4
   14e28:	str	r3, [fp, #-28]	; 0xffffffe4
   14e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e30:	sub	r3, r3, #4
   14e34:	str	r3, [fp, #-32]	; 0xffffffe0
   14e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e3c:	bl	138c4 <mmk_mock_params_begin@@Base>
   14e40:	str	r0, [fp, #-8]
   14e44:	b	14ea4 <mmk_verify_times@@Base+0x1cc>
   14e48:	ldr	r3, [fp, #-8]
   14e4c:	add	r3, r3, #4
   14e50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e58:	mov	r0, r3
   14e5c:	bl	15114 <mmk_memcmp@@Base>
   14e60:	str	r0, [fp, #-12]
   14e64:	ldr	r3, [fp, #-12]
   14e68:	cmp	r3, #0
   14e6c:	bne	14e94 <mmk_verify_times@@Base+0x1bc>
   14e70:	ldr	r3, [fp, #-8]
   14e74:	str	r3, [fp, #-16]
   14e78:	ldr	r3, [fp, #-16]
   14e7c:	ldr	r3, [r3]
   14e80:	add	r2, r3, #1
   14e84:	ldr	r3, [fp, #-16]
   14e88:	str	r2, [r3]
   14e8c:	mov	r3, #1
   14e90:	b	14eb4 <mmk_verify_times@@Base+0x1dc>
   14e94:	ldr	r1, [fp, #-8]
   14e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e9c:	bl	13918 <mmk_mock_params_next@@Base>
   14ea0:	str	r0, [fp, #-8]
   14ea4:	ldr	r3, [fp, #-8]
   14ea8:	cmp	r3, #0
   14eac:	bne	14e48 <mmk_verify_times@@Base+0x170>
   14eb0:	mov	r3, #0
   14eb4:	mov	r0, r3
   14eb8:	sub	sp, fp, #4
   14ebc:	ldr	fp, [sp]
   14ec0:	add	sp, sp, #4
   14ec4:	pop	{pc}		; (ldr pc, [sp], #4)

00014ec8 <mmk_verify_register_call@@Base>:
   14ec8:	str	r4, [sp, #-12]!
   14ecc:	str	fp, [sp, #4]
   14ed0:	str	lr, [sp, #8]
   14ed4:	add	fp, sp, #8
   14ed8:	sub	sp, sp, #28
   14edc:	str	r0, [fp, #-24]	; 0xffffffe8
   14ee0:	str	r1, [fp, #-28]	; 0xffffffe4
   14ee4:	ldr	r4, [pc, #520]	; 150f4 <mmk_verify_register_call@@Base+0x22c>
   14ee8:	add	r4, pc, r4
   14eec:	bl	14a58 <mmk_ctx@@Base>
   14ef0:	mov	r3, r0
   14ef4:	mov	r0, r3
   14ef8:	bl	145f0 <mmk_stub_context@@Base>
   14efc:	str	r0, [fp, #-16]
   14f00:	ldr	r3, [fp, #-16]
   14f04:	ldr	r3, [r3, #8]
   14f08:	cmp	r3, #0
   14f0c:	bne	14f74 <mmk_verify_register_call@@Base+0xac>
   14f10:	mov	r0, #4096	; 0x1000
   14f14:	bl	15520 <mmk_malloc@@Base>
   14f18:	mov	r2, r0
   14f1c:	ldr	r3, [fp, #-16]
   14f20:	str	r2, [r3, #8]
   14f24:	ldr	r3, [fp, #-16]
   14f28:	ldr	r3, [r3, #8]
   14f2c:	cmp	r3, #0
   14f30:	bne	14f68 <mmk_verify_register_call@@Base+0xa0>
   14f34:	ldr	r3, [pc, #444]	; 150f8 <mmk_verify_register_call@@Base+0x230>
   14f38:	ldr	r3, [r4, r3]
   14f3c:	ldr	r0, [r3]
   14f40:	ldr	r3, [pc, #436]	; 150fc <mmk_verify_register_call@@Base+0x234>
   14f44:	add	r3, pc, r3
   14f48:	str	r3, [sp]
   14f4c:	mov	r3, #79	; 0x4f
   14f50:	ldr	r2, [pc, #424]	; 15100 <mmk_verify_register_call@@Base+0x238>
   14f54:	add	r2, pc, r2
   14f58:	ldr	r1, [pc, #420]	; 15104 <mmk_verify_register_call@@Base+0x23c>
   14f5c:	add	r1, pc, r1
   14f60:	bl	11298 <fprintf@plt>
   14f64:	bl	112e0 <abort@plt>
   14f68:	ldr	r3, [fp, #-16]
   14f6c:	mov	r2, #4096	; 0x1000
   14f70:	str	r2, [r3, #16]
   14f74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f78:	mov	r2, r3
   14f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14f80:	ldr	r0, [fp, #-16]
   14f84:	bl	14e04 <mmk_verify_times@@Base+0x12c>
   14f88:	mov	r3, r0
   14f8c:	cmp	r3, #0
   14f90:	bne	150dc <mmk_verify_register_call@@Base+0x214>
   14f94:	ldr	r3, [fp, #-16]
   14f98:	ldr	r2, [r3, #12]
   14f9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fa0:	add	r3, r2, r3
   14fa4:	add	r2, r3, #4
   14fa8:	ldr	r3, [fp, #-16]
   14fac:	ldr	r3, [r3, #16]
   14fb0:	cmp	r2, r3
   14fb4:	bcc	15060 <mmk_verify_register_call@@Base+0x198>
   14fb8:	b	14fd0 <mmk_verify_register_call@@Base+0x108>
   14fbc:	ldr	r3, [fp, #-16]
   14fc0:	ldr	r3, [r3, #16]
   14fc4:	add	r2, r3, #4096	; 0x1000
   14fc8:	ldr	r3, [fp, #-16]
   14fcc:	str	r2, [r3, #16]
   14fd0:	ldr	r3, [fp, #-16]
   14fd4:	ldr	r2, [r3, #12]
   14fd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fdc:	add	r3, r2, r3
   14fe0:	add	r2, r3, #4
   14fe4:	ldr	r3, [fp, #-16]
   14fe8:	ldr	r3, [r3, #16]
   14fec:	cmp	r2, r3
   14ff0:	bcs	14fbc <mmk_verify_register_call@@Base+0xf4>
   14ff4:	ldr	r3, [fp, #-16]
   14ff8:	ldr	r2, [r3, #8]
   14ffc:	ldr	r3, [fp, #-16]
   15000:	ldr	r3, [r3, #16]
   15004:	mov	r1, r3
   15008:	mov	r0, r2
   1500c:	bl	15570 <mmk_realloc@@Base>
   15010:	mov	r2, r0
   15014:	ldr	r3, [fp, #-16]
   15018:	str	r2, [r3, #8]
   1501c:	ldr	r3, [fp, #-16]
   15020:	ldr	r3, [r3, #8]
   15024:	cmp	r3, #0
   15028:	bne	15060 <mmk_verify_register_call@@Base+0x198>
   1502c:	ldr	r3, [pc, #196]	; 150f8 <mmk_verify_register_call@@Base+0x230>
   15030:	ldr	r3, [r4, r3]
   15034:	ldr	r0, [r3]
   15038:	ldr	r3, [pc, #200]	; 15108 <mmk_verify_register_call@@Base+0x240>
   1503c:	add	r3, pc, r3
   15040:	str	r3, [sp]
   15044:	mov	r3, #91	; 0x5b
   15048:	ldr	r2, [pc, #188]	; 1510c <mmk_verify_register_call@@Base+0x244>
   1504c:	add	r2, pc, r2
   15050:	ldr	r1, [pc, #184]	; 15110 <mmk_verify_register_call@@Base+0x248>
   15054:	add	r1, pc, r1
   15058:	bl	11298 <fprintf@plt>
   1505c:	bl	112e0 <abort@plt>
   15060:	ldr	r3, [fp, #-16]
   15064:	ldr	r2, [r3, #8]
   15068:	ldr	r3, [fp, #-16]
   1506c:	ldr	r3, [r3, #12]
   15070:	add	r3, r2, r3
   15074:	sub	r1, fp, #28
   15078:	mov	r2, #4
   1507c:	mov	r0, r3
   15080:	bl	151c4 <mmk_memcpy@@Base>
   15084:	ldr	r3, [fp, #-16]
   15088:	ldr	r2, [r3, #8]
   1508c:	ldr	r3, [fp, #-16]
   15090:	ldr	r3, [r3, #12]
   15094:	add	r3, r3, #4
   15098:	add	r3, r2, r3
   1509c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   150a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   150a4:	mov	r0, r3
   150a8:	bl	151c4 <mmk_memcpy@@Base>
   150ac:	str	r0, [fp, #-20]	; 0xffffffec
   150b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   150b4:	mov	r2, #1
   150b8:	str	r2, [r3]
   150bc:	ldr	r3, [fp, #-16]
   150c0:	ldr	r2, [r3, #12]
   150c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   150c8:	add	r3, r2, r3
   150cc:	add	r2, r3, #4
   150d0:	ldr	r3, [fp, #-16]
   150d4:	str	r2, [r3, #12]
   150d8:	b	150e0 <mmk_verify_register_call@@Base+0x218>
   150dc:	nop	{0}
   150e0:	sub	sp, fp, #8
   150e4:	ldr	r4, [sp]
   150e8:	ldr	fp, [sp, #4]
   150ec:	add	sp, sp, #8
   150f0:	pop	{pc}		; (ldr pc, [sp], #4)
   150f4:	andeq	r2, r1, r0, lsl r1
   150f8:	muleq	r0, ip, r0
   150fc:	andeq	r1, r0, r4, ror r0
   15100:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15104:	andeq	r1, r0, ip, lsr r0
   15108:	andeq	r0, r0, ip, ror pc
   1510c:	strdeq	r0, [r0], -r8
   15110:	andeq	r0, r0, r4, asr #30

00015114 <mmk_memcmp@@Base>:
   15114:	push	{fp}		; (str fp, [sp, #-4]!)
   15118:	add	fp, sp, #0
   1511c:	sub	sp, sp, #28
   15120:	str	r0, [fp, #-16]
   15124:	str	r1, [fp, #-20]	; 0xffffffec
   15128:	str	r2, [fp, #-24]	; 0xffffffe8
   1512c:	ldr	r3, [fp, #-16]
   15130:	str	r3, [fp, #-8]
   15134:	ldr	r3, [fp, #-20]	; 0xffffffec
   15138:	str	r3, [fp, #-12]
   1513c:	b	151a4 <mmk_memcmp@@Base+0x90>
   15140:	ldr	r3, [fp, #-8]
   15144:	ldrb	r2, [r3]
   15148:	ldr	r3, [fp, #-12]
   1514c:	ldrb	r3, [r3]
   15150:	cmp	r2, r3
   15154:	beq	15180 <mmk_memcmp@@Base+0x6c>
   15158:	ldr	r3, [fp, #-8]
   1515c:	ldrb	r2, [r3]
   15160:	ldr	r3, [fp, #-12]
   15164:	ldrb	r3, [r3]
   15168:	cmp	r2, r3
   1516c:	bcs	15178 <mmk_memcmp@@Base+0x64>
   15170:	mvn	r3, #0
   15174:	b	151b4 <mmk_memcmp@@Base+0xa0>
   15178:	mov	r3, #1
   1517c:	b	151b4 <mmk_memcmp@@Base+0xa0>
   15180:	ldr	r3, [fp, #-8]
   15184:	add	r3, r3, #1
   15188:	str	r3, [fp, #-8]
   1518c:	ldr	r3, [fp, #-12]
   15190:	add	r3, r3, #1
   15194:	str	r3, [fp, #-12]
   15198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1519c:	sub	r3, r3, #1
   151a0:	str	r3, [fp, #-24]	; 0xffffffe8
   151a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151a8:	cmp	r3, #0
   151ac:	bne	15140 <mmk_memcmp@@Base+0x2c>
   151b0:	mov	r3, #0
   151b4:	mov	r0, r3
   151b8:	add	sp, fp, #0
   151bc:	pop	{fp}		; (ldr fp, [sp], #4)
   151c0:	bx	lr

000151c4 <mmk_memcpy@@Base>:
   151c4:	push	{fp}		; (str fp, [sp, #-4]!)
   151c8:	add	fp, sp, #0
   151cc:	sub	sp, sp, #28
   151d0:	str	r0, [fp, #-16]
   151d4:	str	r1, [fp, #-20]	; 0xffffffec
   151d8:	str	r2, [fp, #-24]	; 0xffffffe8
   151dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   151e0:	str	r3, [fp, #-8]
   151e4:	ldr	r3, [fp, #-16]
   151e8:	str	r3, [fp, #-12]
   151ec:	b	15224 <mmk_memcpy@@Base+0x60>
   151f0:	ldr	r3, [fp, #-8]
   151f4:	ldrb	r2, [r3]
   151f8:	ldr	r3, [fp, #-12]
   151fc:	strb	r2, [r3]
   15200:	ldr	r3, [fp, #-12]
   15204:	add	r3, r3, #1
   15208:	str	r3, [fp, #-12]
   1520c:	ldr	r3, [fp, #-8]
   15210:	add	r3, r3, #1
   15214:	str	r3, [fp, #-8]
   15218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1521c:	sub	r3, r3, #1
   15220:	str	r3, [fp, #-24]	; 0xffffffe8
   15224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15228:	cmp	r3, #0
   1522c:	bne	151f0 <mmk_memcpy@@Base+0x2c>
   15230:	ldr	r3, [fp, #-16]
   15234:	mov	r0, r3
   15238:	add	sp, fp, #0
   1523c:	pop	{fp}		; (ldr fp, [sp], #4)
   15240:	bx	lr

00015244 <mmk_strneq@@Base>:
   15244:	push	{fp}		; (str fp, [sp, #-4]!)
   15248:	add	fp, sp, #0
   1524c:	sub	sp, sp, #20
   15250:	str	r0, [fp, #-8]
   15254:	str	r1, [fp, #-12]
   15258:	str	r2, [fp, #-16]
   1525c:	b	152a4 <mmk_strneq@@Base+0x60>
   15260:	ldr	r3, [fp, #-8]
   15264:	ldrb	r2, [r3]
   15268:	ldr	r3, [fp, #-12]
   1526c:	ldrb	r3, [r3]
   15270:	cmp	r2, r3
   15274:	beq	15280 <mmk_strneq@@Base+0x3c>
   15278:	mov	r3, #0
   1527c:	b	152f8 <mmk_strneq@@Base+0xb4>
   15280:	ldr	r3, [fp, #-8]
   15284:	add	r3, r3, #1
   15288:	str	r3, [fp, #-8]
   1528c:	ldr	r3, [fp, #-12]
   15290:	add	r3, r3, #1
   15294:	str	r3, [fp, #-12]
   15298:	ldr	r3, [fp, #-16]
   1529c:	sub	r3, r3, #1
   152a0:	str	r3, [fp, #-16]
   152a4:	ldr	r3, [fp, #-8]
   152a8:	ldrb	r3, [r3]
   152ac:	cmp	r3, #0
   152b0:	beq	152d0 <mmk_strneq@@Base+0x8c>
   152b4:	ldr	r3, [fp, #-12]
   152b8:	ldrb	r3, [r3]
   152bc:	cmp	r3, #0
   152c0:	beq	152d0 <mmk_strneq@@Base+0x8c>
   152c4:	ldr	r3, [fp, #-16]
   152c8:	cmp	r3, #0
   152cc:	bne	15260 <mmk_strneq@@Base+0x1c>
   152d0:	ldr	r3, [fp, #-16]
   152d4:	cmp	r3, #0
   152d8:	beq	152ec <mmk_strneq@@Base+0xa8>
   152dc:	ldr	r3, [fp, #-12]
   152e0:	ldrb	r3, [r3]
   152e4:	cmp	r3, #0
   152e8:	bne	152f4 <mmk_strneq@@Base+0xb0>
   152ec:	mov	r3, #1
   152f0:	b	152f8 <mmk_strneq@@Base+0xb4>
   152f4:	mov	r3, #0
   152f8:	mov	r0, r3
   152fc:	add	sp, fp, #0
   15300:	pop	{fp}		; (ldr fp, [sp], #4)
   15304:	bx	lr

00015308 <mmk_strchr@@Base>:
   15308:	push	{fp}		; (str fp, [sp, #-4]!)
   1530c:	add	fp, sp, #0
   15310:	sub	sp, sp, #12
   15314:	str	r0, [fp, #-8]
   15318:	str	r1, [fp, #-12]
   1531c:	b	1534c <mmk_strchr@@Base+0x44>
   15320:	ldr	r3, [fp, #-8]
   15324:	ldrb	r3, [r3]
   15328:	mov	r2, r3
   1532c:	ldr	r3, [fp, #-12]
   15330:	cmp	r3, r2
   15334:	bne	15340 <mmk_strchr@@Base+0x38>
   15338:	ldr	r3, [fp, #-8]
   1533c:	b	15360 <mmk_strchr@@Base+0x58>
   15340:	ldr	r3, [fp, #-8]
   15344:	add	r3, r3, #1
   15348:	str	r3, [fp, #-8]
   1534c:	ldr	r3, [fp, #-8]
   15350:	ldrb	r3, [r3]
   15354:	cmp	r3, #0
   15358:	bne	15320 <mmk_strchr@@Base+0x18>
   1535c:	mov	r3, #0
   15360:	mov	r0, r3
   15364:	add	sp, fp, #0
   15368:	pop	{fp}		; (ldr fp, [sp], #4)
   1536c:	bx	lr

00015370 <mmk_strcpy@@Base>:
   15370:	push	{fp}		; (str fp, [sp, #-4]!)
   15374:	add	fp, sp, #0
   15378:	sub	sp, sp, #12
   1537c:	str	r0, [fp, #-8]
   15380:	str	r1, [fp, #-12]
   15384:	b	153b0 <mmk_strcpy@@Base+0x40>
   15388:	ldr	r3, [fp, #-12]
   1538c:	ldrb	r2, [r3]
   15390:	ldr	r3, [fp, #-8]
   15394:	strb	r2, [r3]
   15398:	ldr	r3, [fp, #-8]
   1539c:	add	r3, r3, #1
   153a0:	str	r3, [fp, #-8]
   153a4:	ldr	r3, [fp, #-12]
   153a8:	add	r3, r3, #1
   153ac:	str	r3, [fp, #-12]
   153b0:	ldr	r3, [fp, #-12]
   153b4:	ldrb	r3, [r3]
   153b8:	cmp	r3, #0
   153bc:	bne	15388 <mmk_strcpy@@Base+0x18>
   153c0:	ldr	r3, [fp, #-8]
   153c4:	mov	r2, #0
   153c8:	strb	r2, [r3]
   153cc:	ldr	r3, [fp, #-8]
   153d0:	mov	r0, r3
   153d4:	add	sp, fp, #0
   153d8:	pop	{fp}		; (ldr fp, [sp], #4)
   153dc:	bx	lr

000153e0 <mmk_strncpy@@Base>:
   153e0:	push	{fp}		; (str fp, [sp, #-4]!)
   153e4:	add	fp, sp, #0
   153e8:	sub	sp, sp, #20
   153ec:	str	r0, [fp, #-8]
   153f0:	str	r1, [fp, #-12]
   153f4:	str	r2, [fp, #-16]
   153f8:	b	15430 <mmk_strncpy@@Base+0x50>
   153fc:	ldr	r3, [fp, #-12]
   15400:	ldrb	r2, [r3]
   15404:	ldr	r3, [fp, #-8]
   15408:	strb	r2, [r3]
   1540c:	ldr	r3, [fp, #-8]
   15410:	add	r3, r3, #1
   15414:	str	r3, [fp, #-8]
   15418:	ldr	r3, [fp, #-12]
   1541c:	add	r3, r3, #1
   15420:	str	r3, [fp, #-12]
   15424:	ldr	r3, [fp, #-16]
   15428:	sub	r3, r3, #1
   1542c:	str	r3, [fp, #-16]
   15430:	ldr	r3, [fp, #-12]
   15434:	ldrb	r3, [r3]
   15438:	cmp	r3, #0
   1543c:	beq	1544c <mmk_strncpy@@Base+0x6c>
   15440:	ldr	r3, [fp, #-16]
   15444:	cmp	r3, #0
   15448:	bne	153fc <mmk_strncpy@@Base+0x1c>
   1544c:	ldr	r3, [fp, #-8]
   15450:	mov	r2, #0
   15454:	strb	r2, [r3]
   15458:	ldr	r3, [fp, #-8]
   1545c:	mov	r0, r3
   15460:	add	sp, fp, #0
   15464:	pop	{fp}		; (ldr fp, [sp], #4)
   15468:	bx	lr

0001546c <mmk_strlen@@Base>:
   1546c:	push	{fp}		; (str fp, [sp, #-4]!)
   15470:	add	fp, sp, #0
   15474:	sub	sp, sp, #20
   15478:	str	r0, [fp, #-16]
   1547c:	mov	r3, #0
   15480:	str	r3, [fp, #-8]
   15484:	b	154a0 <mmk_strlen@@Base+0x34>
   15488:	ldr	r3, [fp, #-8]
   1548c:	add	r3, r3, #1
   15490:	str	r3, [fp, #-8]
   15494:	ldr	r3, [fp, #-16]
   15498:	add	r3, r3, #1
   1549c:	str	r3, [fp, #-16]
   154a0:	ldr	r3, [fp, #-16]
   154a4:	ldrb	r3, [r3]
   154a8:	cmp	r3, #0
   154ac:	bne	15488 <mmk_strlen@@Base+0x1c>
   154b0:	ldr	r3, [fp, #-8]
   154b4:	mov	r0, r3
   154b8:	add	sp, fp, #0
   154bc:	pop	{fp}		; (ldr fp, [sp], #4)
   154c0:	bx	lr

000154c4 <mmk_isspace@@Base>:
   154c4:	push	{fp}		; (str fp, [sp, #-4]!)
   154c8:	add	fp, sp, #0
   154cc:	sub	sp, sp, #12
   154d0:	str	r0, [fp, #-8]
   154d4:	ldr	r3, [fp, #-8]
   154d8:	cmp	r3, #32
   154dc:	beq	15504 <mmk_isspace@@Base+0x40>
   154e0:	ldr	r3, [fp, #-8]
   154e4:	cmp	r3, #9
   154e8:	beq	15504 <mmk_isspace@@Base+0x40>
   154ec:	ldr	r3, [fp, #-8]
   154f0:	cmp	r3, #13
   154f4:	beq	15504 <mmk_isspace@@Base+0x40>
   154f8:	ldr	r3, [fp, #-8]
   154fc:	cmp	r3, #10
   15500:	bne	1550c <mmk_isspace@@Base+0x48>
   15504:	mov	r3, #1
   15508:	b	15510 <mmk_isspace@@Base+0x4c>
   1550c:	mov	r3, #0
   15510:	mov	r0, r3
   15514:	add	sp, fp, #0
   15518:	pop	{fp}		; (ldr fp, [sp], #4)
   1551c:	bx	lr

00015520 <mmk_malloc@@Base>:
   15520:	str	fp, [sp, #-8]!
   15524:	str	lr, [sp, #4]
   15528:	add	fp, sp, #4
   1552c:	sub	sp, sp, #8
   15530:	str	r0, [fp, #-8]
   15534:	ldr	r2, [pc, #44]	; 15568 <mmk_malloc@@Base+0x48>
   15538:	add	r2, pc, r2
   1553c:	ldr	r3, [pc, #40]	; 1556c <mmk_malloc@@Base+0x4c>
   15540:	ldr	r3, [r2, r3]
   15544:	ldr	r3, [r3]
   15548:	ldr	r0, [fp, #-8]
   1554c:	blx	r3
   15550:	mov	r3, r0
   15554:	mov	r0, r3
   15558:	sub	sp, fp, #4
   1555c:	ldr	fp, [sp]
   15560:	add	sp, sp, #4
   15564:	pop	{pc}		; (ldr pc, [sp], #4)
   15568:	andeq	r1, r1, r0, asr #21
   1556c:	strheq	r0, [r0], -ip

00015570 <mmk_realloc@@Base>:
   15570:	str	fp, [sp, #-8]!
   15574:	str	lr, [sp, #4]
   15578:	add	fp, sp, #4
   1557c:	sub	sp, sp, #8
   15580:	str	r0, [fp, #-8]
   15584:	str	r1, [fp, #-12]
   15588:	ldr	r2, [pc, #48]	; 155c0 <mmk_realloc@@Base+0x50>
   1558c:	add	r2, pc, r2
   15590:	ldr	r3, [pc, #44]	; 155c4 <mmk_realloc@@Base+0x54>
   15594:	ldr	r3, [r2, r3]
   15598:	ldr	r3, [r3]
   1559c:	ldr	r1, [fp, #-12]
   155a0:	ldr	r0, [fp, #-8]
   155a4:	blx	r3
   155a8:	mov	r3, r0
   155ac:	mov	r0, r3
   155b0:	sub	sp, fp, #4
   155b4:	ldr	fp, [sp]
   155b8:	add	sp, sp, #4
   155bc:	pop	{pc}		; (ldr pc, [sp], #4)
   155c0:	andeq	r1, r1, ip, ror #20
   155c4:	andeq	r0, r0, ip, lsr #1

000155c8 <mmk_free@@Base>:
   155c8:	str	fp, [sp, #-8]!
   155cc:	str	lr, [sp, #4]
   155d0:	add	fp, sp, #4
   155d4:	sub	sp, sp, #8
   155d8:	str	r0, [fp, #-8]
   155dc:	ldr	r2, [pc, #40]	; 1560c <mmk_free@@Base+0x44>
   155e0:	add	r2, pc, r2
   155e4:	ldr	r3, [pc, #36]	; 15610 <mmk_free@@Base+0x48>
   155e8:	ldr	r3, [r2, r3]
   155ec:	ldr	r3, [r3]
   155f0:	ldr	r0, [fp, #-8]
   155f4:	blx	r3
   155f8:	nop	{0}
   155fc:	sub	sp, fp, #4
   15600:	ldr	fp, [sp]
   15604:	add	sp, sp, #4
   15608:	pop	{pc}		; (ldr pc, [sp], #4)
   1560c:	andeq	r1, r1, r8, lsl sl
   15610:	strheq	r0, [r0], -r8

00015614 <mmk_init_vital_functions@@Base>:
   15614:	str	r4, [sp, #-12]!
   15618:	str	fp, [sp, #4]
   1561c:	str	lr, [sp, #8]
   15620:	add	fp, sp, #8
   15624:	sub	sp, sp, #20
   15628:	str	r0, [fp, #-16]
   1562c:	ldr	r4, [pc, #384]	; 157b4 <mmk_init_vital_functions@@Base+0x1a0>
   15630:	add	r4, pc, r4
   15634:	mov	r0, #0
   15638:	bl	11250 <malloc@plt>
   1563c:	mov	r3, r0
   15640:	mov	r1, #0
   15644:	mov	r0, r3
   15648:	bl	1122c <realloc@plt>
   1564c:	mov	r3, r0
   15650:	mov	r0, r3
   15654:	bl	11208 <free@plt>
   15658:	ldr	r3, [pc, #344]	; 157b8 <mmk_init_vital_functions@@Base+0x1a4>
   1565c:	add	r3, pc, r3
   15660:	mov	r1, r3
   15664:	ldr	r0, [fp, #-16]
   15668:	bl	14570 <plt_get_real_fn@@Base>
   1566c:	mov	r2, r0
   15670:	ldr	r3, [pc, #324]	; 157bc <mmk_init_vital_functions@@Base+0x1a8>
   15674:	ldr	r3, [r4, r3]
   15678:	str	r2, [r3]
   1567c:	ldr	r3, [pc, #312]	; 157bc <mmk_init_vital_functions@@Base+0x1a8>
   15680:	ldr	r3, [r4, r3]
   15684:	ldr	r3, [r3]
   15688:	cmp	r3, #0
   1568c:	bne	156c4 <mmk_init_vital_functions@@Base+0xb0>
   15690:	ldr	r3, [pc, #296]	; 157c0 <mmk_init_vital_functions@@Base+0x1ac>
   15694:	ldr	r3, [r4, r3]
   15698:	ldr	r0, [r3]
   1569c:	ldr	r3, [pc, #288]	; 157c4 <mmk_init_vital_functions@@Base+0x1b0>
   156a0:	add	r3, pc, r3
   156a4:	str	r3, [sp]
   156a8:	mov	r3, #88	; 0x58
   156ac:	ldr	r2, [pc, #276]	; 157c8 <mmk_init_vital_functions@@Base+0x1b4>
   156b0:	add	r2, pc, r2
   156b4:	ldr	r1, [pc, #272]	; 157cc <mmk_init_vital_functions@@Base+0x1b8>
   156b8:	add	r1, pc, r1
   156bc:	bl	11298 <fprintf@plt>
   156c0:	bl	112e0 <abort@plt>
   156c4:	ldr	r3, [pc, #260]	; 157d0 <mmk_init_vital_functions@@Base+0x1bc>
   156c8:	add	r3, pc, r3
   156cc:	mov	r1, r3
   156d0:	ldr	r0, [fp, #-16]
   156d4:	bl	14570 <plt_get_real_fn@@Base>
   156d8:	mov	r2, r0
   156dc:	ldr	r3, [pc, #240]	; 157d4 <mmk_init_vital_functions@@Base+0x1c0>
   156e0:	ldr	r3, [r4, r3]
   156e4:	str	r2, [r3]
   156e8:	ldr	r3, [pc, #228]	; 157d4 <mmk_init_vital_functions@@Base+0x1c0>
   156ec:	ldr	r3, [r4, r3]
   156f0:	ldr	r3, [r3]
   156f4:	cmp	r3, #0
   156f8:	bne	15730 <mmk_init_vital_functions@@Base+0x11c>
   156fc:	ldr	r3, [pc, #188]	; 157c0 <mmk_init_vital_functions@@Base+0x1ac>
   15700:	ldr	r3, [r4, r3]
   15704:	ldr	r0, [r3]
   15708:	ldr	r3, [pc, #200]	; 157d8 <mmk_init_vital_functions@@Base+0x1c4>
   1570c:	add	r3, pc, r3
   15710:	str	r3, [sp]
   15714:	mov	r3, #89	; 0x59
   15718:	ldr	r2, [pc, #188]	; 157dc <mmk_init_vital_functions@@Base+0x1c8>
   1571c:	add	r2, pc, r2
   15720:	ldr	r1, [pc, #184]	; 157e0 <mmk_init_vital_functions@@Base+0x1cc>
   15724:	add	r1, pc, r1
   15728:	bl	11298 <fprintf@plt>
   1572c:	bl	112e0 <abort@plt>
   15730:	ldr	r3, [pc, #172]	; 157e4 <mmk_init_vital_functions@@Base+0x1d0>
   15734:	add	r3, pc, r3
   15738:	mov	r1, r3
   1573c:	ldr	r0, [fp, #-16]
   15740:	bl	14570 <plt_get_real_fn@@Base>
   15744:	mov	r2, r0
   15748:	ldr	r3, [pc, #152]	; 157e8 <mmk_init_vital_functions@@Base+0x1d4>
   1574c:	ldr	r3, [r4, r3]
   15750:	str	r2, [r3]
   15754:	ldr	r3, [pc, #140]	; 157e8 <mmk_init_vital_functions@@Base+0x1d4>
   15758:	ldr	r3, [r4, r3]
   1575c:	ldr	r3, [r3]
   15760:	cmp	r3, #0
   15764:	bne	1579c <mmk_init_vital_functions@@Base+0x188>
   15768:	ldr	r3, [pc, #80]	; 157c0 <mmk_init_vital_functions@@Base+0x1ac>
   1576c:	ldr	r3, [r4, r3]
   15770:	ldr	r0, [r3]
   15774:	ldr	r3, [pc, #112]	; 157ec <mmk_init_vital_functions@@Base+0x1d8>
   15778:	add	r3, pc, r3
   1577c:	str	r3, [sp]
   15780:	mov	r3, #90	; 0x5a
   15784:	ldr	r2, [pc, #100]	; 157f0 <mmk_init_vital_functions@@Base+0x1dc>
   15788:	add	r2, pc, r2
   1578c:	ldr	r1, [pc, #96]	; 157f4 <mmk_init_vital_functions@@Base+0x1e0>
   15790:	add	r1, pc, r1
   15794:	bl	11298 <fprintf@plt>
   15798:	bl	112e0 <abort@plt>
   1579c:	nop	{0}
   157a0:	sub	sp, fp, #8
   157a4:	ldr	r4, [sp]
   157a8:	ldr	fp, [sp, #4]
   157ac:	add	sp, sp, #8
   157b0:	pop	{pc}		; (ldr pc, [sp], #4)
   157b4:	andeq	r1, r1, r8, asr #19
   157b8:	andeq	r0, r0, ip, ror #18
   157bc:	strheq	r0, [r0], -ip
   157c0:	muleq	r0, ip, r0
   157c4:	andeq	r0, r0, r4, lsr #19
   157c8:	andeq	r0, r0, r0, lsr #18
   157cc:	andeq	r0, r0, ip, ror #18
   157d0:			; <UNDEFINED> instruction: 0x000009b4
   157d4:	andeq	r0, r0, ip, lsr #1
   157d8:	andeq	r0, r0, r8, ror r9
   157dc:			; <UNDEFINED> instruction: 0x000008b4
   157e0:	andeq	r0, r0, r0, lsl #18
   157e4:	andeq	r0, r0, r8, lsl #19
   157e8:	strheq	r0, [r0], -r8
   157ec:	andeq	r0, r0, ip, asr #18
   157f0:	andeq	r0, r0, r8, asr #16
   157f4:	muleq	r0, r4, r8

000157f8 <mmk_when_init@@Base>:
   157f8:	str	fp, [sp, #-8]!
   157fc:	str	lr, [sp, #4]
   15800:	add	fp, sp, #4
   15804:	sub	sp, sp, #8
   15808:	str	r0, [fp, #-8]
   1580c:	ldr	r3, [pc, #40]	; 1583c <mmk_when_init@@Base+0x44>
   15810:	add	r3, pc, r3
   15814:	mov	r0, r3
   15818:	bl	112c8 <__tls_get_addr@plt>
   1581c:	mov	r2, r0
   15820:	ldr	r3, [fp, #-8]
   15824:	str	r3, [r2]
   15828:	nop	{0}
   1582c:	sub	sp, fp, #4
   15830:	ldr	fp, [sp]
   15834:	add	sp, sp, #4
   15838:	pop	{pc}		; (ldr pc, [sp], #4)
   1583c:	andeq	r1, r1, ip, ror #16

00015840 <mmk_when_get_result@@Base>:
   15840:	str	fp, [sp, #-8]!
   15844:	str	lr, [sp, #4]
   15848:	add	fp, sp, #4
   1584c:	ldr	r3, [pc, #36]	; 15878 <mmk_when_get_result@@Base+0x38>
   15850:	add	r3, pc, r3
   15854:	mov	r0, r3
   15858:	bl	112c8 <__tls_get_addr@plt>
   1585c:	mov	r3, r0
   15860:	ldr	r3, [r3]
   15864:	mov	r0, r3
   15868:	sub	sp, fp, #4
   1586c:	ldr	fp, [sp]
   15870:	add	sp, sp, #4
   15874:	pop	{pc}		; (ldr pc, [sp], #4)
   15878:	andeq	r1, r1, ip, lsr #16

0001587c <mmk_when_impl@@Base>:
   1587c:	str	fp, [sp, #-8]!
   15880:	str	lr, [sp, #4]
   15884:	add	fp, sp, #4
   15888:	sub	sp, sp, #16
   1588c:	str	r0, [fp, #-16]
   15890:	str	r1, [fp, #-20]	; 0xffffffec
   15894:	ldr	r3, [fp, #-20]	; 0xffffffec
   15898:	str	r3, [fp, #-8]
   1589c:	bl	13460 <mmk_matcher_ctx@@Base>
   158a0:	mov	r2, r0
   158a4:	ldr	r3, [fp, #-8]
   158a8:	str	r2, [r3]
   158ac:	ldr	r3, [fp, #-16]
   158b0:	ldr	r2, [r3]
   158b4:	ldr	r3, [fp, #-8]
   158b8:	str	r2, [r3, #4]
   158bc:	ldr	r3, [fp, #-16]
   158c0:	ldr	r2, [fp, #-8]
   158c4:	str	r2, [r3]
   158c8:	nop	{0}
   158cc:	sub	sp, fp, #4
   158d0:	ldr	fp, [sp]
   158d4:	add	sp, sp, #4
   158d8:	pop	{pc}		; (ldr pc, [sp], #4)

000158dc <mmk_trampoline@@Base>:
   158dc:	sub	ip, pc, #8
   158e0:	push	{r0, r1, r2, r3}
   158e4:	push	{ip, lr}
   158e8:	ldr	r0, [ip, #-8]
   158ec:	ldr	ip, [r0, #4]
   158f0:	blx	ip
   158f4:	pop	{ip, lr}
   158f8:	push	{ip, lr}
   158fc:	ldr	ip, [ip, #-8]
   15900:	ldr	ip, [ip]
   15904:	blx	ip
   15908:	cmp	r0, #0
   1590c:	bne	1591c <mmk_trampoline@@Base+0x40>
   15910:	pop	{ip, lr}
   15914:	pop	{r0, r1, r2, r3}
   15918:	ldr	pc, [ip, #-4]
   1591c:	pop	{ip, lr}
   15920:	pop	{r0, r1, r2, r3}
   15924:	push	{ip, lr}
   15928:	ldr	ip, [ip, #-8]
   1592c:	ldr	ip, [ip, #8]
   15930:	blx	ip
   15934:	pop	{ip, pc}

00015938 <mmk_trampoline_end@@Base>:
   15938:	nop			; (mov r0, r0)

0001593c <__libc_csu_init@@Base>:
   1593c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15940:	mov	r7, r0
   15944:	ldr	r6, [pc, #72]	; 15994 <__libc_csu_init@@Base+0x58>
   15948:	ldr	r5, [pc, #72]	; 15998 <__libc_csu_init@@Base+0x5c>
   1594c:	add	r6, pc, r6
   15950:	add	r5, pc, r5
   15954:	sub	r6, r6, r5
   15958:	mov	r8, r1
   1595c:	mov	r9, r2
   15960:	bl	111c4 <strstr@plt-0x20>
   15964:	asrs	r6, r6, #2
   15968:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1596c:	mov	r4, #0
   15970:	add	r4, r4, #1
   15974:	ldr	r3, [r5], #4
   15978:	mov	r2, r9
   1597c:	mov	r1, r8
   15980:	mov	r0, r7
   15984:	blx	r3
   15988:	cmp	r6, r4
   1598c:	bne	15970 <__libc_csu_init@@Base+0x34>
   15990:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15994:	andeq	r1, r1, r8, lsr #11
   15998:	andeq	r1, r1, r0, lsr #11

0001599c <__libc_csu_fini@@Base>:
   1599c:	bx	lr

Disassembly of section .fini:

000159a0 <.fini>:
   159a0:	push	{r3, lr}
   159a4:	pop	{r3, pc}
