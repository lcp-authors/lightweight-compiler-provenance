
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011e98 <.init>:
   11e98:	push	{r3, lr}
   11e9c:	bl	11f90 <_start@@Base+0x3c>
   11ea0:	pop	{r3, pc}

Disassembly of section .plt:

00011ea4 <strcmp@plt-0x14>:
   11ea4:	push	{lr}		; (str lr, [sp, #-4]!)
   11ea8:	ldr	lr, [pc, #4]	; 11eb4 <strcmp@plt-0x4>
   11eac:	add	lr, pc, lr
   11eb0:	ldr	pc, [lr, #8]!
   11eb4:	andeq	r4, r1, ip, asr #2

00011eb8 <strcmp@plt>:
   11eb8:	add	ip, pc, #0, 12
   11ebc:	add	ip, ip, #20, 20	; 0x14000
   11ec0:	ldr	pc, [ip, #332]!	; 0x14c

00011ec4 <printf@plt>:
   11ec4:	add	ip, pc, #0, 12
   11ec8:	add	ip, ip, #20, 20	; 0x14000
   11ecc:	ldr	pc, [ip, #324]!	; 0x144

00011ed0 <free@plt>:
   11ed0:	add	ip, pc, #0, 12
   11ed4:	add	ip, ip, #20, 20	; 0x14000
   11ed8:	ldr	pc, [ip, #316]!	; 0x13c

00011edc <realloc@plt>:
   11edc:	add	ip, pc, #0, 12
   11ee0:	add	ip, ip, #20, 20	; 0x14000
   11ee4:	ldr	pc, [ip, #308]!	; 0x134

00011ee8 <strcpy@plt>:
   11ee8:	add	ip, pc, #0, 12
   11eec:	add	ip, ip, #20, 20	; 0x14000
   11ef0:	ldr	pc, [ip, #300]!	; 0x12c

00011ef4 <puts@plt>:
   11ef4:	add	ip, pc, #0, 12
   11ef8:	add	ip, ip, #20, 20	; 0x14000
   11efc:	ldr	pc, [ip, #292]!	; 0x124

00011f00 <malloc@plt>:
   11f00:	add	ip, pc, #0, 12
   11f04:	add	ip, ip, #20, 20	; 0x14000
   11f08:	ldr	pc, [ip, #284]!	; 0x11c

00011f0c <__libc_start_main@plt>:
   11f0c:	add	ip, pc, #0, 12
   11f10:	add	ip, ip, #20, 20	; 0x14000
   11f14:	ldr	pc, [ip, #276]!	; 0x114

00011f18 <__gmon_start__@plt>:
   11f18:	add	ip, pc, #0, 12
   11f1c:	add	ip, ip, #20, 20	; 0x14000
   11f20:	ldr	pc, [ip, #268]!	; 0x10c

00011f24 <strlen@plt>:
   11f24:	add	ip, pc, #0, 12
   11f28:	add	ip, ip, #20, 20	; 0x14000
   11f2c:	ldr	pc, [ip, #260]!	; 0x104

00011f30 <snprintf@plt>:
   11f30:	add	ip, pc, #0, 12
   11f34:	add	ip, ip, #20, 20	; 0x14000
   11f38:	ldr	pc, [ip, #252]!	; 0xfc

00011f3c <__isoc99_sscanf@plt>:
   11f3c:	add	ip, pc, #0, 12
   11f40:	add	ip, ip, #20, 20	; 0x14000
   11f44:	ldr	pc, [ip, #244]!	; 0xf4

00011f48 <abort@plt>:
   11f48:	add	ip, pc, #0, 12
   11f4c:	add	ip, ip, #20, 20	; 0x14000
   11f50:	ldr	pc, [ip, #236]!	; 0xec

Disassembly of section .text:

00011f54 <_start@@Base>:
   11f54:	mov	fp, #0
   11f58:	mov	lr, #0
   11f5c:	pop	{r1}		; (ldr r1, [sp], #4)
   11f60:	mov	r2, sp
   11f64:	push	{r2}		; (str r2, [sp, #-4]!)
   11f68:	push	{r0}		; (str r0, [sp, #-4]!)
   11f6c:	ldr	ip, [pc, #16]	; 11f84 <_start@@Base+0x30>
   11f70:	push	{ip}		; (str ip, [sp, #-4]!)
   11f74:	ldr	r0, [pc, #12]	; 11f88 <_start@@Base+0x34>
   11f78:	ldr	r3, [pc, #12]	; 11f8c <_start@@Base+0x38>
   11f7c:	bl	11f0c <__libc_start_main@plt>
   11f80:	bl	11f48 <abort@plt>
   11f84:	andeq	r5, r1, r0, ror #9
   11f88:	andeq	r2, r1, r4, asr #32
   11f8c:	andeq	r5, r1, r0, lsl #9
   11f90:	ldr	r3, [pc, #20]	; 11fac <_start@@Base+0x58>
   11f94:	ldr	r2, [pc, #20]	; 11fb0 <_start@@Base+0x5c>
   11f98:	add	r3, pc, r3
   11f9c:	ldr	r2, [r3, r2]
   11fa0:	cmp	r2, #0
   11fa4:	bxeq	lr
   11fa8:	b	11f18 <__gmon_start__@plt>
   11fac:	andeq	r4, r1, r0, rrx
   11fb0:	andeq	r0, r0, r0, asr #32
   11fb4:	ldr	r0, [pc, #24]	; 11fd4 <_start@@Base+0x80>
   11fb8:	ldr	r3, [pc, #24]	; 11fd8 <_start@@Base+0x84>
   11fbc:	cmp	r3, r0
   11fc0:	bxeq	lr
   11fc4:	ldr	r3, [pc, #16]	; 11fdc <_start@@Base+0x88>
   11fc8:	cmp	r3, #0
   11fcc:	bxeq	lr
   11fd0:	bx	r3
   11fd4:	andeq	r6, r2, ip, asr #32
   11fd8:	andeq	r6, r2, ip, asr #32
   11fdc:	andeq	r0, r0, r0
   11fe0:	ldr	r0, [pc, #36]	; 1200c <_start@@Base+0xb8>
   11fe4:	ldr	r1, [pc, #36]	; 12010 <_start@@Base+0xbc>
   11fe8:	sub	r1, r1, r0
   11fec:	asr	r1, r1, #2
   11ff0:	add	r1, r1, r1, lsr #31
   11ff4:	asrs	r1, r1, #1
   11ff8:	bxeq	lr
   11ffc:	ldr	r3, [pc, #16]	; 12014 <_start@@Base+0xc0>
   12000:	cmp	r3, #0
   12004:	bxeq	lr
   12008:	bx	r3
   1200c:	andeq	r6, r2, ip, asr #32
   12010:	andeq	r6, r2, ip, asr #32
   12014:	andeq	r0, r0, r0
   12018:	push	{r4, lr}
   1201c:	ldr	r4, [pc, #24]	; 1203c <_start@@Base+0xe8>
   12020:	ldrb	r3, [r4]
   12024:	cmp	r3, #0
   12028:	popne	{r4, pc}
   1202c:	bl	11fb4 <_start@@Base+0x60>
   12030:	mov	r3, #1
   12034:	strb	r3, [r4]
   12038:	pop	{r4, pc}
   1203c:	andeq	r6, r2, ip, asr #32
   12040:	b	11fe0 <_start@@Base+0x8c>

00012044 <main@@Base>:
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	sub	sp, sp, #64	; 0x40
   12050:	add	r5, sp, #8
   12054:	mov	r4, #0
   12058:	mov	r0, r5
   1205c:	str	r4, [sp, #4]
   12060:	bl	1220c <table_init@@Base>
   12064:	ldr	r1, [pc, #284]	; 12188 <main@@Base+0x144>
   12068:	add	r2, sp, #4
   1206c:	mov	r0, r5
   12070:	mvn	r3, #0
   12074:	add	r1, pc, r1
   12078:	bl	128a0 <table_register_callback@@Base>
   1207c:	mov	r0, r5
   12080:	bl	13924 <table_add_row@@Base>
   12084:	mov	r5, r0
   12088:	ldrb	r0, [sp, #4]
   1208c:	tst	r0, #2
   12090:	bne	120a4 <main@@Base+0x60>
   12094:	ldr	r0, [pc, #240]	; 1218c <main@@Base+0x148>
   12098:	add	r0, pc, r0
   1209c:	bl	11ef4 <puts@plt>
   120a0:	mvn	r4, #0
   120a4:	ldr	r1, [pc, #228]	; 12190 <main@@Base+0x14c>
   120a8:	add	r0, sp, #8
   120ac:	mov	r2, #0
   120b0:	add	r1, pc, r1
   120b4:	bl	12c80 <table_add_column@@Base>
   120b8:	mov	r6, r0
   120bc:	ldrb	r0, [sp, #4]
   120c0:	tst	r0, #8
   120c4:	bne	120d8 <main@@Base+0x94>
   120c8:	ldr	r0, [pc, #196]	; 12194 <main@@Base+0x150>
   120cc:	add	r0, pc, r0
   120d0:	bl	11ef4 <puts@plt>
   120d4:	mvn	r4, #0
   120d8:	add	r0, sp, #8
   120dc:	mov	r1, r5
   120e0:	mov	r2, r6
   120e4:	mov	r3, #42	; 0x2a
   120e8:	bl	13e80 <table_set_int@@Base>
   120ec:	ldrb	r0, [sp, #4]
   120f0:	tst	r0, #1
   120f4:	bne	12108 <main@@Base+0xc4>
   120f8:	ldr	r0, [pc, #152]	; 12198 <main@@Base+0x154>
   120fc:	add	r0, pc, r0
   12100:	bl	11ec4 <printf@plt>
   12104:	mvn	r4, #0
   12108:	add	r0, sp, #8
   1210c:	mov	r1, r5
   12110:	bl	139d4 <table_remove_row@@Base>
   12114:	ldrb	r0, [sp, #4]
   12118:	tst	r0, #4
   1211c:	bne	12130 <main@@Base+0xec>
   12120:	ldr	r0, [pc, #116]	; 1219c <main@@Base+0x158>
   12124:	add	r0, pc, r0
   12128:	bl	11ec4 <printf@plt>
   1212c:	mvn	r4, #0
   12130:	add	r0, sp, #8
   12134:	mov	r1, r6
   12138:	bl	12db8 <table_remove_column@@Base>
   1213c:	ldrb	r0, [sp, #4]
   12140:	tst	r0, #16
   12144:	bne	12158 <main@@Base+0x114>
   12148:	ldr	r0, [pc, #80]	; 121a0 <main@@Base+0x15c>
   1214c:	add	r0, pc, r0
   12150:	bl	11ec4 <printf@plt>
   12154:	mvn	r4, #0
   12158:	add	r0, sp, #8
   1215c:	bl	12268 <table_destroy@@Base>
   12160:	ldrb	r0, [sp, #4]
   12164:	tst	r0, #64	; 0x40
   12168:	bne	1217c <main@@Base+0x138>
   1216c:	ldr	r0, [pc, #48]	; 121a4 <main@@Base+0x160>
   12170:	add	r0, pc, r0
   12174:	bl	11ec4 <printf@plt>
   12178:	mvn	r4, #0
   1217c:	mov	r0, r4
   12180:	sub	sp, fp, #16
   12184:	pop	{r4, r5, r6, sl, fp, pc}
   12188:	andeq	r0, r0, ip, lsr #2
   1218c:	andeq	r3, r0, r0, lsl r5
   12190:	andeq	r3, r0, ip, lsr r4
   12194:	andeq	r3, r0, ip, lsl #10
   12198:	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
   1219c:	strdeq	r3, [r0], -r7
   121a0:	strdeq	r3, [r0], -r9
   121a4:	andeq	r3, r0, r2, lsl #8
   121a8:	ldr	r0, [sp]
   121ac:	ldr	r1, [r0]
   121b0:	orr	r1, r1, r3
   121b4:	str	r1, [r0]
   121b8:	bx	lr

000121bc <table_new@@Base>:
   121bc:	push	{fp, lr}
   121c0:	mov	fp, sp
   121c4:	mov	r0, #56	; 0x38
   121c8:	bl	11f00 <malloc@plt>
   121cc:	mov	r1, #0
   121d0:	mov	r2, #10
   121d4:	mov	r3, #20
   121d8:	vmov.i32	q8, #0	; 0x00000000
   121dc:	str	r1, [r0]
   121e0:	stmib	r0, {r1, r2}
   121e4:	str	r1, [r0, #12]
   121e8:	str	r1, [r0, #16]
   121ec:	str	r1, [r0, #20]
   121f0:	str	r3, [r0, #24]
   121f4:	str	r1, [r0, #28]
   121f8:	str	r2, [r0, #48]	; 0x30
   121fc:	str	r1, [r0, #52]	; 0x34
   12200:	add	r1, r0, #32
   12204:	vst1.32	{d16-d17}, [r1]
   12208:	pop	{fp, pc}

0001220c <table_init@@Base>:
   1220c:	mov	r1, #0
   12210:	mov	r2, #10
   12214:	mov	r3, #20
   12218:	vmov.i32	q8, #0	; 0x00000000
   1221c:	str	r1, [r0]
   12220:	stmib	r0, {r1, r2}
   12224:	str	r1, [r0, #12]
   12228:	str	r1, [r0, #16]
   1222c:	str	r1, [r0, #20]
   12230:	str	r3, [r0, #24]
   12234:	str	r1, [r0, #28]
   12238:	str	r2, [r0, #48]	; 0x30
   1223c:	str	r1, [r0, #52]	; 0x34
   12240:	add	r0, r0, #32
   12244:	vst1.32	{d16-d17}, [r0]
   12248:	bx	lr

0001224c <table_delete@@Base>:
   1224c:	push	{r4, sl, fp, lr}
   12250:	add	fp, sp, #8
   12254:	mov	r4, r0
   12258:	bl	12268 <table_destroy@@Base>
   1225c:	mov	r0, r4
   12260:	pop	{r4, sl, fp, lr}
   12264:	b	11ed0 <free@plt>

00012268 <table_destroy@@Base>:
   12268:	cmp	r0, #0
   1226c:	bxeq	lr
   12270:	push	{r4, r5, r6, sl, fp, lr}
   12274:	add	fp, sp, #16
   12278:	mvn	r1, #0
   1227c:	mvn	r2, #0
   12280:	mov	r3, #64	; 0x40
   12284:	mov	r4, r0
   12288:	bl	12b04 <table_notify@@Base>
   1228c:	mov	r0, r4
   12290:	bl	1391c <table_get_row_length@@Base>
   12294:	cmp	r0, #1
   12298:	blt	122bc <table_destroy@@Base+0x54>
   1229c:	mov	r5, r0
   122a0:	mov	r6, #0
   122a4:	mov	r0, r4
   122a8:	mov	r1, r6
   122ac:	bl	138c4 <table_row_destroy@@Base>
   122b0:	add	r6, r6, #1
   122b4:	cmp	r5, r6
   122b8:	bne	122a4 <table_destroy@@Base+0x3c>
   122bc:	ldr	r0, [r4, #16]
   122c0:	cmp	r0, #0
   122c4:	beq	122cc <table_destroy@@Base+0x64>
   122c8:	bl	11ed0 <free@plt>
   122cc:	mov	r0, r4
   122d0:	bl	12bf8 <table_get_column_length@@Base>
   122d4:	cmp	r0, #1
   122d8:	blt	122fc <table_destroy@@Base+0x94>
   122dc:	mov	r5, r0
   122e0:	mov	r6, #0
   122e4:	mov	r0, r4
   122e8:	mov	r1, r6
   122ec:	bl	12be0 <table_column_destroy@@Base>
   122f0:	add	r6, r6, #1
   122f4:	cmp	r5, r6
   122f8:	bne	122e4 <table_destroy@@Base+0x7c>
   122fc:	ldr	r0, [r4]
   12300:	cmp	r0, #0
   12304:	beq	1230c <table_destroy@@Base+0xa4>
   12308:	bl	11ed0 <free@plt>
   1230c:	ldr	r0, [r4, #36]	; 0x24
   12310:	cmp	r0, #0
   12314:	beq	1231c <table_destroy@@Base+0xb4>
   12318:	bl	11ed0 <free@plt>
   1231c:	ldr	r0, [r4, #40]	; 0x28
   12320:	cmp	r0, #0
   12324:	beq	1232c <table_destroy@@Base+0xc4>
   12328:	bl	11ed0 <free@plt>
   1232c:	ldr	r0, [r4, #44]	; 0x2c
   12330:	cmp	r0, #0
   12334:	pop	{r4, r5, r6, sl, fp, lr}
   12338:	beq	12340 <table_destroy@@Base+0xd8>
   1233c:	b	11ed0 <free@plt>
   12340:	bx	lr

00012344 <table_dupe@@Base>:
   12344:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12348:	add	fp, sp, #28
   1234c:	sub	sp, sp, #12
   12350:	mov	r4, r0
   12354:	bl	1391c <table_get_row_length@@Base>
   12358:	mov	r8, r0
   1235c:	mov	r0, r4
   12360:	bl	12bf8 <table_get_column_length@@Base>
   12364:	mov	r6, r0
   12368:	mov	r0, #56	; 0x38
   1236c:	bl	11f00 <malloc@plt>
   12370:	mov	sl, r0
   12374:	mov	r5, #0
   12378:	mov	r0, #10
   1237c:	mov	r1, #20
   12380:	cmp	r6, #1
   12384:	vmov.i32	q8, #0	; 0x00000000
   12388:	str	r5, [sl]
   1238c:	str	r5, [sl, #4]
   12390:	str	r0, [sl, #8]
   12394:	str	r5, [sl, #12]
   12398:	str	r5, [sl, #16]
   1239c:	str	r5, [sl, #20]
   123a0:	str	r1, [sl, #24]
   123a4:	str	r5, [sl, #28]
   123a8:	str	r0, [sl, #48]	; 0x30
   123ac:	add	r0, sl, #32
   123b0:	str	r5, [sl, #52]	; 0x34
   123b4:	vst1.32	{d16-d17}, [r0]
   123b8:	blt	123f4 <table_dupe@@Base+0xb0>
   123bc:	mov	r0, r4
   123c0:	mov	r1, r5
   123c4:	bl	12c5c <table_get_column_name@@Base>
   123c8:	mov	r7, r0
   123cc:	mov	r0, r4
   123d0:	mov	r1, r5
   123d4:	bl	12c6c <table_get_column_data_type@@Base>
   123d8:	mov	r2, r0
   123dc:	mov	r0, sl
   123e0:	mov	r1, r7
   123e4:	bl	12c80 <table_add_column@@Base>
   123e8:	add	r5, r5, #1
   123ec:	cmp	r6, r5
   123f0:	bne	123bc <table_dupe@@Base+0x78>
   123f4:	cmp	r8, #1
   123f8:	blt	12864 <table_dupe@@Base+0x520>
   123fc:	mov	r5, #0
   12400:	add	r9, sp, #8
   12404:	mov	r0, sl
   12408:	bl	13924 <table_add_row@@Base>
   1240c:	cmp	r6, #1
   12410:	blt	12858 <table_dupe@@Base+0x514>
   12414:	mov	r7, #0
   12418:	mov	r0, r4
   1241c:	mov	r1, r7
   12420:	bl	12c6c <table_get_column_data_type@@Base>
   12424:	cmp	r0, #23
   12428:	bhi	1284c <table_dupe@@Base+0x508>
   1242c:	add	r1, pc, #4
   12430:	ldr	r0, [r1, r0, lsl #2]
   12434:	add	pc, r1, r0
   12438:	andeq	r0, r0, r0, rrx
   1243c:	andeq	r0, r0, r8, lsl #1
   12440:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12444:	ldrdeq	r0, [r0], -r8
   12448:	andeq	r0, r0, r0, lsl #2
   1244c:	andeq	r0, r0, r8, lsr #2
   12450:	andeq	r0, r0, r0, asr r1
   12454:	andeq	r0, r0, r8, ror r1
   12458:	andeq	r0, r0, r0, lsr #3
   1245c:	andeq	r0, r0, r8, asr #3
   12460:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12464:	andeq	r0, r0, r8, lsl r2
   12468:	andeq	r0, r0, r0, asr #4
   1246c:	andeq	r0, r0, r8, ror #4
   12470:	muleq	r0, r0, r2
   12474:			; <UNDEFINED> instruction: 0x000002b8
   12478:	andeq	r0, r0, r0, ror #5
   1247c:	andeq	r0, r0, r4, lsl #6
   12480:	andeq	r0, r0, r8, lsr #6
   12484:	andeq	r0, r0, ip, asr #6
   12488:	andeq	r0, r0, r4, ror r3
   1248c:	muleq	r0, ip, r3
   12490:	andeq	r0, r0, r4, asr #7
   12494:	andeq	r0, r0, ip, ror #7
   12498:	mov	r0, r4
   1249c:	mov	r1, r5
   124a0:	mov	r2, r7
   124a4:	bl	13674 <table_get_int@@Base>
   124a8:	mov	r3, r0
   124ac:	mov	r0, sl
   124b0:	mov	r1, r5
   124b4:	mov	r2, r7
   124b8:	bl	13e80 <table_set_int@@Base>
   124bc:	b	1284c <table_dupe@@Base+0x508>
   124c0:	mov	r0, r4
   124c4:	mov	r1, r5
   124c8:	mov	r2, r7
   124cc:	bl	1368c <table_get_uint@@Base>
   124d0:	mov	r3, r0
   124d4:	mov	r0, sl
   124d8:	mov	r1, r5
   124dc:	mov	r2, r7
   124e0:	bl	13f00 <table_set_uint@@Base>
   124e4:	b	1284c <table_dupe@@Base+0x508>
   124e8:	mov	r0, r4
   124ec:	mov	r1, r5
   124f0:	mov	r2, r7
   124f4:	bl	136a4 <table_get_int8@@Base>
   124f8:	mov	r3, r0
   124fc:	mov	r0, sl
   12500:	mov	r1, r5
   12504:	mov	r2, r7
   12508:	bl	13f80 <table_set_int8@@Base>
   1250c:	b	1284c <table_dupe@@Base+0x508>
   12510:	mov	r0, r4
   12514:	mov	r1, r5
   12518:	mov	r2, r7
   1251c:	bl	136bc <table_get_uint8@@Base>
   12520:	mov	r3, r0
   12524:	mov	r0, sl
   12528:	mov	r1, r5
   1252c:	mov	r2, r7
   12530:	bl	14000 <table_set_uint8@@Base>
   12534:	b	1284c <table_dupe@@Base+0x508>
   12538:	mov	r0, r4
   1253c:	mov	r1, r5
   12540:	mov	r2, r7
   12544:	bl	136d4 <table_get_int16@@Base>
   12548:	mov	r3, r0
   1254c:	mov	r0, sl
   12550:	mov	r1, r5
   12554:	mov	r2, r7
   12558:	bl	14080 <table_set_int16@@Base>
   1255c:	b	1284c <table_dupe@@Base+0x508>
   12560:	mov	r0, r4
   12564:	mov	r1, r5
   12568:	mov	r2, r7
   1256c:	bl	136ec <table_get_uint16@@Base>
   12570:	mov	r3, r0
   12574:	mov	r0, sl
   12578:	mov	r1, r5
   1257c:	mov	r2, r7
   12580:	bl	14100 <table_set_uint16@@Base>
   12584:	b	1284c <table_dupe@@Base+0x508>
   12588:	mov	r0, r4
   1258c:	mov	r1, r5
   12590:	mov	r2, r7
   12594:	bl	13704 <table_get_int32@@Base>
   12598:	mov	r3, r0
   1259c:	mov	r0, sl
   125a0:	mov	r1, r5
   125a4:	mov	r2, r7
   125a8:	bl	14180 <table_set_int32@@Base>
   125ac:	b	1284c <table_dupe@@Base+0x508>
   125b0:	mov	r0, r4
   125b4:	mov	r1, r5
   125b8:	mov	r2, r7
   125bc:	bl	1371c <table_get_uint32@@Base>
   125c0:	mov	r3, r0
   125c4:	mov	r0, sl
   125c8:	mov	r1, r5
   125cc:	mov	r2, r7
   125d0:	bl	14200 <table_set_uint32@@Base>
   125d4:	b	1284c <table_dupe@@Base+0x508>
   125d8:	mov	r0, r4
   125dc:	mov	r1, r5
   125e0:	mov	r2, r7
   125e4:	bl	13734 <table_get_int64@@Base>
   125e8:	stm	sp, {r0, r1}
   125ec:	mov	r0, sl
   125f0:	mov	r1, r5
   125f4:	mov	r2, r7
   125f8:	bl	14280 <table_set_int64@@Base>
   125fc:	b	1284c <table_dupe@@Base+0x508>
   12600:	mov	r0, r4
   12604:	mov	r1, r5
   12608:	mov	r2, r7
   1260c:	bl	1374c <table_get_uint64@@Base>
   12610:	stm	sp, {r0, r1}
   12614:	mov	r0, sl
   12618:	mov	r1, r5
   1261c:	mov	r2, r7
   12620:	bl	14308 <table_set_uint64@@Base>
   12624:	b	1284c <table_dupe@@Base+0x508>
   12628:	mov	r0, r4
   1262c:	mov	r1, r5
   12630:	mov	r2, r7
   12634:	bl	13764 <table_get_short@@Base>
   12638:	mov	r3, r0
   1263c:	mov	r0, sl
   12640:	mov	r1, r5
   12644:	mov	r2, r7
   12648:	bl	14390 <table_set_short@@Base>
   1264c:	b	1284c <table_dupe@@Base+0x508>
   12650:	mov	r0, r4
   12654:	mov	r1, r5
   12658:	mov	r2, r7
   1265c:	bl	1377c <table_get_ushort@@Base>
   12660:	mov	r3, r0
   12664:	mov	r0, sl
   12668:	mov	r1, r5
   1266c:	mov	r2, r7
   12670:	bl	14410 <table_set_ushort@@Base>
   12674:	b	1284c <table_dupe@@Base+0x508>
   12678:	mov	r0, r4
   1267c:	mov	r1, r5
   12680:	mov	r2, r7
   12684:	bl	13794 <table_get_long@@Base>
   12688:	mov	r3, r0
   1268c:	mov	r0, sl
   12690:	mov	r1, r5
   12694:	mov	r2, r7
   12698:	bl	14490 <table_set_long@@Base>
   1269c:	b	1284c <table_dupe@@Base+0x508>
   126a0:	mov	r0, r4
   126a4:	mov	r1, r5
   126a8:	mov	r2, r7
   126ac:	bl	137ac <table_get_ulong@@Base>
   126b0:	mov	r3, r0
   126b4:	mov	r0, sl
   126b8:	mov	r1, r5
   126bc:	mov	r2, r7
   126c0:	bl	14510 <table_set_ulong@@Base>
   126c4:	b	1284c <table_dupe@@Base+0x508>
   126c8:	mov	r0, r4
   126cc:	mov	r1, r5
   126d0:	mov	r2, r7
   126d4:	bl	137c4 <table_get_llong@@Base>
   126d8:	stm	sp, {r0, r1}
   126dc:	mov	r0, sl
   126e0:	mov	r1, r5
   126e4:	mov	r2, r7
   126e8:	bl	14590 <table_set_llong@@Base>
   126ec:	b	1284c <table_dupe@@Base+0x508>
   126f0:	mov	r0, r4
   126f4:	mov	r1, r5
   126f8:	mov	r2, r7
   126fc:	bl	137dc <table_get_ullong@@Base>
   12700:	stm	sp, {r0, r1}
   12704:	mov	r0, sl
   12708:	mov	r1, r5
   1270c:	mov	r2, r7
   12710:	bl	14618 <table_set_ullong@@Base>
   12714:	b	1284c <table_dupe@@Base+0x508>
   12718:	mov	r0, r4
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	137f4 <table_get_float@@Base>
   12728:	mov	r0, sl
   1272c:	mov	r1, r5
   12730:	mov	r2, r7
   12734:	bl	146a0 <table_set_float@@Base>
   12738:	b	1284c <table_dupe@@Base+0x508>
   1273c:	mov	r0, r4
   12740:	mov	r1, r5
   12744:	mov	r2, r7
   12748:	bl	1380c <table_get_double@@Base>
   1274c:	mov	r0, sl
   12750:	mov	r1, r5
   12754:	mov	r2, r7
   12758:	bl	1472c <table_set_double@@Base>
   1275c:	b	1284c <table_dupe@@Base+0x508>
   12760:	mov	r0, r4
   12764:	mov	r1, r5
   12768:	mov	r2, r7
   1276c:	bl	13824 <table_get_ldouble@@Base>
   12770:	mov	r0, sl
   12774:	mov	r1, r5
   12778:	mov	r2, r7
   1277c:	bl	147b4 <table_set_ldouble@@Base>
   12780:	b	1284c <table_dupe@@Base+0x508>
   12784:	mov	r0, r4
   12788:	mov	r1, r5
   1278c:	mov	r2, r7
   12790:	bl	1383c <table_get_char@@Base>
   12794:	mov	r3, r0
   12798:	mov	r0, sl
   1279c:	mov	r1, r5
   127a0:	mov	r2, r7
   127a4:	bl	1485c <table_set_char@@Base>
   127a8:	b	1284c <table_dupe@@Base+0x508>
   127ac:	mov	r0, r4
   127b0:	mov	r1, r5
   127b4:	mov	r2, r7
   127b8:	bl	13854 <table_get_uchar@@Base>
   127bc:	mov	r3, r0
   127c0:	mov	r0, sl
   127c4:	mov	r1, r5
   127c8:	mov	r2, r7
   127cc:	bl	148dc <table_set_uchar@@Base>
   127d0:	b	1284c <table_dupe@@Base+0x508>
   127d4:	mov	r0, r4
   127d8:	mov	r1, r5
   127dc:	mov	r2, r7
   127e0:	bl	1386c <table_get_string@@Base>
   127e4:	mov	r3, r0
   127e8:	mov	r0, sl
   127ec:	mov	r1, r5
   127f0:	mov	r2, r7
   127f4:	bl	1483c <table_set_string@@Base>
   127f8:	b	1284c <table_dupe@@Base+0x508>
   127fc:	mov	r0, r4
   12800:	mov	r1, r5
   12804:	mov	r2, r7
   12808:	bl	1365c <table_get_bool@@Base>
   1280c:	mov	r3, r0
   12810:	mov	r0, sl
   12814:	mov	r1, r5
   12818:	mov	r2, r7
   1281c:	bl	13e00 <table_set_bool@@Base>
   12820:	b	1284c <table_dupe@@Base+0x508>
   12824:	mov	r0, r4
   12828:	mov	r1, r5
   1282c:	mov	r2, r7
   12830:	bl	13880 <table_get_ptr@@Base>
   12834:	str	r0, [sp, #8]
   12838:	mov	r0, sl
   1283c:	mov	r1, r5
   12840:	mov	r2, r7
   12844:	mov	r3, r9
   12848:	bl	1495c <table_set_ptr@@Base>
   1284c:	add	r7, r7, #1
   12850:	cmp	r6, r7
   12854:	bne	12418 <table_dupe@@Base+0xd4>
   12858:	add	r5, r5, #1
   1285c:	cmp	r5, r8
   12860:	bne	12404 <table_dupe@@Base+0xc0>
   12864:	mov	r0, sl
   12868:	sub	sp, fp, #28
   1286c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012870 <table_get_major_version@@Base>:
   12870:	mov	r0, #0
   12874:	bx	lr

00012878 <table_get_minor_version@@Base>:
   12878:	mov	r0, #0
   1287c:	bx	lr

00012880 <table_get_patch_version@@Base>:
   12880:	mov	r0, #0
   12884:	bx	lr

00012888 <table_get_version@@Base>:
   12888:	ldr	r0, [pc, #4]	; 12894 <table_get_version@@Base+0xc>
   1288c:	add	r0, pc, r0
   12890:	bx	lr
   12894:	andeq	r2, r0, ip, lsr #27

00012898 <table_get_callback_length@@Base>:
   12898:	ldr	r0, [r0, #32]
   1289c:	bx	lr

000128a0 <table_register_callback@@Base>:
   128a0:	push	{r4, r5, r6, r7, fp, lr}
   128a4:	add	fp, sp, #16
   128a8:	mov	r5, r0
   128ac:	ldr	r0, [r0, #32]
   128b0:	mov	r4, r3
   128b4:	mov	r6, r2
   128b8:	mov	r7, r1
   128bc:	cmp	r0, #1
   128c0:	blt	128f4 <table_register_callback@@Base+0x54>
   128c4:	ldr	r2, [r5, #36]	; 0x24
   128c8:	mov	r1, #0
   128cc:	ldr	r3, [r2, r1, lsl #2]
   128d0:	cmp	r3, r7
   128d4:	bne	128e8 <table_register_callback@@Base+0x48>
   128d8:	ldr	r3, [r5, #40]	; 0x28
   128dc:	ldr	r3, [r3, r1, lsl #2]
   128e0:	cmp	r3, r6
   128e4:	beq	12978 <table_register_callback@@Base+0xd8>
   128e8:	add	r1, r1, #1
   128ec:	cmp	r1, r0
   128f0:	blt	128cc <table_register_callback@@Base+0x2c>
   128f4:	ldr	r1, [r5, #48]	; 0x30
   128f8:	udiv	r2, r0, r1
   128fc:	mls	r2, r2, r1, r0
   12900:	cmp	r2, #0
   12904:	bne	12950 <table_register_callback@@Base+0xb0>
   12908:	ldr	r2, [r5, #52]	; 0x34
   1290c:	ldr	r0, [r5, #36]	; 0x24
   12910:	add	r1, r2, r1
   12914:	str	r1, [r5, #52]	; 0x34
   12918:	lsl	r1, r1, #2
   1291c:	bl	11edc <realloc@plt>
   12920:	str	r0, [r5, #36]	; 0x24
   12924:	ldr	r1, [r5, #52]	; 0x34
   12928:	ldr	r0, [r5, #40]	; 0x28
   1292c:	lsl	r1, r1, #2
   12930:	bl	11edc <realloc@plt>
   12934:	str	r0, [r5, #40]	; 0x28
   12938:	ldr	r1, [r5, #52]	; 0x34
   1293c:	ldr	r0, [r5, #44]	; 0x2c
   12940:	lsl	r1, r1, #2
   12944:	bl	11edc <realloc@plt>
   12948:	str	r0, [r5, #44]	; 0x2c
   1294c:	ldr	r0, [r5, #32]
   12950:	ldr	r1, [r5, #36]	; 0x24
   12954:	str	r7, [r1, r0, lsl #2]
   12958:	ldr	r1, [r5, #40]	; 0x28
   1295c:	str	r6, [r1, r0, lsl #2]
   12960:	ldr	r1, [r5, #44]	; 0x2c
   12964:	str	r4, [r1, r0, lsl #2]
   12968:	ldr	r0, [r5, #32]
   1296c:	add	r0, r0, #1
   12970:	str	r0, [r5, #32]
   12974:	pop	{r4, r5, r6, r7, fp, pc}
   12978:	cmp	r1, #0
   1297c:	ldrne	r0, [r5, #44]	; 0x2c
   12980:	ldrne	r2, [r0, r1, lsl #2]
   12984:	orrne	r2, r2, r4
   12988:	strne	r2, [r0, r1, lsl #2]
   1298c:	popne	{r4, r5, r6, r7, fp, pc}
   12990:	b	128f4 <table_register_callback@@Base+0x54>

00012994 <table_unregister_callback@@Base>:
   12994:	push	{r4, r5, r6, sl, fp, lr}
   12998:	add	fp, sp, #16
   1299c:	ldr	r4, [r0, #32]
   129a0:	cmp	r4, #1
   129a4:	blt	129dc <table_unregister_callback@@Base+0x48>
   129a8:	ldr	r3, [r0, #36]	; 0x24
   129ac:	mov	r6, r0
   129b0:	mov	r0, #0
   129b4:	ldr	r5, [r3, r0, lsl #2]
   129b8:	cmp	r5, r1
   129bc:	bne	129d0 <table_unregister_callback@@Base+0x3c>
   129c0:	ldr	r5, [r6, #40]	; 0x28
   129c4:	ldr	r5, [r5, r0, lsl #2]
   129c8:	cmp	r5, r2
   129cc:	beq	129e0 <table_unregister_callback@@Base+0x4c>
   129d0:	add	r0, r0, #1
   129d4:	cmp	r0, r4
   129d8:	blt	129b4 <table_unregister_callback@@Base+0x20>
   129dc:	pop	{r4, r5, r6, sl, fp, pc}
   129e0:	sub	r1, r4, #1
   129e4:	cmp	r0, r1
   129e8:	bge	12a78 <table_unregister_callback@@Base+0xe4>
   129ec:	add	r1, r3, r0, lsl #2
   129f0:	ldr	r1, [r1, #4]
   129f4:	str	r1, [r3, r0, lsl #2]
   129f8:	ldr	r1, [r6, #40]	; 0x28
   129fc:	add	r2, r1, r0, lsl #2
   12a00:	ldr	r2, [r2, #4]
   12a04:	str	r2, [r1, r0, lsl #2]
   12a08:	ldr	r1, [r6, #44]	; 0x2c
   12a0c:	add	r2, r1, r0, lsl #2
   12a10:	ldr	r2, [r2, #4]
   12a14:	str	r2, [r1, r0, lsl #2]
   12a18:	add	r2, r0, #1
   12a1c:	ldr	r1, [r6, #32]
   12a20:	sub	r1, r1, #1
   12a24:	cmp	r2, r1
   12a28:	bge	12a78 <table_unregister_callback@@Base+0xe4>
   12a2c:	ldr	r1, [r6, #36]	; 0x24
   12a30:	add	r1, r1, r0, lsl #2
   12a34:	ldr	r2, [r1, #8]
   12a38:	str	r2, [r1, #4]
   12a3c:	ldr	r1, [r6, #40]	; 0x28
   12a40:	add	r1, r1, r0, lsl #2
   12a44:	ldr	r2, [r1, #8]
   12a48:	str	r2, [r1, #4]
   12a4c:	ldr	r1, [r6, #44]	; 0x2c
   12a50:	add	r1, r1, r0, lsl #2
   12a54:	ldr	r2, [r1, #8]
   12a58:	str	r2, [r1, #4]
   12a5c:	add	r2, r0, #1
   12a60:	add	r0, r0, #2
   12a64:	ldr	r1, [r6, #32]
   12a68:	sub	r1, r1, #1
   12a6c:	cmp	r0, r1
   12a70:	mov	r0, r2
   12a74:	blt	12a2c <table_unregister_callback@@Base+0x98>
   12a78:	str	r1, [r6, #32]
   12a7c:	ldr	r2, [r6, #48]	; 0x30
   12a80:	udiv	r0, r1, r2
   12a84:	mls	r0, r0, r2, r1
   12a88:	cmp	r0, #0
   12a8c:	popne	{r4, r5, r6, sl, fp, pc}
   12a90:	ldr	r1, [r6, #52]	; 0x34
   12a94:	ldr	r0, [r6, #36]	; 0x24
   12a98:	subs	r1, r1, r2
   12a9c:	str	r1, [r6, #52]	; 0x34
   12aa0:	beq	12adc <table_unregister_callback@@Base+0x148>
   12aa4:	lsl	r1, r1, #2
   12aa8:	bl	11edc <realloc@plt>
   12aac:	str	r0, [r6, #36]	; 0x24
   12ab0:	ldr	r1, [r6, #52]	; 0x34
   12ab4:	ldr	r0, [r6, #40]	; 0x28
   12ab8:	lsl	r1, r1, #2
   12abc:	bl	11edc <realloc@plt>
   12ac0:	str	r0, [r6, #40]	; 0x28
   12ac4:	ldr	r1, [r6, #52]	; 0x34
   12ac8:	ldr	r0, [r6, #44]	; 0x2c
   12acc:	lsl	r1, r1, #2
   12ad0:	bl	11edc <realloc@plt>
   12ad4:	str	r0, [r6, #44]	; 0x2c
   12ad8:	pop	{r4, r5, r6, sl, fp, pc}
   12adc:	bl	11ed0 <free@plt>
   12ae0:	ldr	r0, [r6, #40]	; 0x28
   12ae4:	bl	11ed0 <free@plt>
   12ae8:	ldr	r0, [r6, #44]	; 0x2c
   12aec:	bl	11ed0 <free@plt>
   12af0:	mov	r0, #0
   12af4:	str	r0, [r6, #36]	; 0x24
   12af8:	str	r0, [r6, #40]	; 0x28
   12afc:	str	r0, [r6, #44]	; 0x2c
   12b00:	pop	{r4, r5, r6, sl, fp, pc}

00012b04 <table_notify@@Base>:
   12b04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b08:	add	fp, sp, #24
   12b0c:	sub	sp, sp, #8
   12b10:	mov	r7, r0
   12b14:	ldr	r0, [r0, #32]
   12b18:	cmp	r0, #1
   12b1c:	blt	12b78 <table_notify@@Base+0x74>
   12b20:	mov	r4, r3
   12b24:	mov	r8, r2
   12b28:	mov	r9, r1
   12b2c:	mov	r5, #0
   12b30:	ldr	r1, [r7, #44]	; 0x2c
   12b34:	ldr	r1, [r1, r5, lsl #2]
   12b38:	tst	r1, r4
   12b3c:	beq	12b6c <table_notify@@Base+0x68>
   12b40:	ldr	r0, [r7, #36]	; 0x24
   12b44:	ldr	r1, [r7, #40]	; 0x28
   12b48:	mov	r2, r8
   12b4c:	mov	r3, r4
   12b50:	ldr	r6, [r0, r5, lsl #2]
   12b54:	ldr	r0, [r1, r5, lsl #2]
   12b58:	mov	r1, r9
   12b5c:	str	r0, [sp]
   12b60:	mov	r0, r7
   12b64:	blx	r6
   12b68:	ldr	r0, [r7, #32]
   12b6c:	add	r5, r5, #1
   12b70:	cmp	r5, r0
   12b74:	blt	12b30 <table_notify@@Base+0x2c>
   12b78:	sub	sp, fp, #24
   12b7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b80 <table_column_init@@Base>:
   12b80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b84:	add	fp, sp, #24
   12b88:	ldr	r7, [r0]
   12b8c:	mov	r0, r2
   12b90:	mov	r4, r3
   12b94:	mov	r5, r2
   12b98:	mov	r6, r1
   12b9c:	bl	11f24 <strlen@plt>
   12ba0:	add	r0, r0, #1
   12ba4:	bl	11f00 <malloc@plt>
   12ba8:	ldr	r8, [fp, #8]
   12bac:	add	r6, r6, r6, lsl #1
   12bb0:	cmp	r0, #0
   12bb4:	str	r0, [r7, r6, lsl #2]
   12bb8:	beq	12bc4 <table_column_init@@Base+0x44>
   12bbc:	mov	r1, r5
   12bc0:	bl	11ee8 <strcpy@plt>
   12bc4:	add	r0, r7, r6, lsl #2
   12bc8:	stmib	r0, {r4, r8}
   12bcc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012bd0 <table_get_col_ptr@@Base>:
   12bd0:	ldr	r0, [r0]
   12bd4:	add	r1, r1, r1, lsl #1
   12bd8:	add	r0, r0, r1, lsl #2
   12bdc:	bx	lr

00012be0 <table_column_destroy@@Base>:
   12be0:	ldr	r0, [r0]
   12be4:	add	r1, r1, r1, lsl #1
   12be8:	ldr	r0, [r0, r1, lsl #2]
   12bec:	cmp	r0, #0
   12bf0:	bxeq	lr
   12bf4:	b	11ed0 <free@plt>

00012bf8 <table_get_column_length@@Base>:
   12bf8:	ldr	r0, [r0, #4]
   12bfc:	bx	lr

00012c00 <table_get_column@@Base>:
   12c00:	push	{r4, r5, r6, r7, fp, lr}
   12c04:	add	fp, sp, #16
   12c08:	ldr	r6, [r0, #4]
   12c0c:	cmp	r6, #1
   12c10:	blt	12c48 <table_get_column@@Base+0x48>
   12c14:	ldr	r7, [r0]
   12c18:	mov	r5, r1
   12c1c:	mov	r4, #0
   12c20:	ldr	r0, [r7]
   12c24:	mov	r1, r5
   12c28:	bl	11eb8 <strcmp@plt>
   12c2c:	cmp	r0, #0
   12c30:	beq	12c4c <table_get_column@@Base+0x4c>
   12c34:	add	r4, r4, #1
   12c38:	add	r7, r7, #12
   12c3c:	cmp	r4, r6
   12c40:	blt	12c20 <table_get_column@@Base+0x20>
   12c44:	b	12c4c <table_get_column@@Base+0x4c>
   12c48:	mov	r4, #0
   12c4c:	cmp	r4, r6
   12c50:	mvneq	r4, #0
   12c54:	mov	r0, r4
   12c58:	pop	{r4, r5, r6, r7, fp, pc}

00012c5c <table_get_column_name@@Base>:
   12c5c:	ldr	r0, [r0]
   12c60:	add	r1, r1, r1, lsl #1
   12c64:	ldr	r0, [r0, r1, lsl #2]
   12c68:	bx	lr

00012c6c <table_get_column_data_type@@Base>:
   12c6c:	ldr	r0, [r0]
   12c70:	add	r1, r1, r1, lsl #1
   12c74:	add	r0, r0, r1, lsl #2
   12c78:	ldr	r0, [r0, #4]
   12c7c:	bx	lr

00012c80 <table_add_column@@Base>:
   12c80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c84:	add	fp, sp, #28
   12c88:	sub	sp, sp, #4
   12c8c:	mov	r4, r0
   12c90:	mov	r8, r1
   12c94:	ldr	r0, [r0, #4]
   12c98:	mov	r9, r2
   12c9c:	ldr	r1, [r4, #8]
   12ca0:	udiv	r2, r0, r1
   12ca4:	mls	r0, r2, r1, r0
   12ca8:	cmp	r0, #0
   12cac:	bne	12d18 <table_add_column@@Base+0x98>
   12cb0:	ldr	r2, [r4, #12]
   12cb4:	ldr	r0, [r4]
   12cb8:	add	r1, r2, r1
   12cbc:	str	r1, [r4, #12]
   12cc0:	add	r1, r1, r1, lsl #1
   12cc4:	lsl	r1, r1, #2
   12cc8:	bl	11edc <realloc@plt>
   12ccc:	str	r0, [r4]
   12cd0:	mov	r0, r4
   12cd4:	bl	1391c <table_get_row_length@@Base>
   12cd8:	cmp	r0, #1
   12cdc:	blt	12d18 <table_add_column@@Base+0x98>
   12ce0:	mov	r6, r0
   12ce4:	mov	r5, #0
   12ce8:	mov	r0, r4
   12cec:	mov	r1, r5
   12cf0:	bl	138b8 <table_get_row_ptr@@Base>
   12cf4:	ldr	r1, [r4, #12]
   12cf8:	mov	r7, r0
   12cfc:	ldr	r0, [r0]
   12d00:	lsl	r1, r1, #2
   12d04:	bl	11edc <realloc@plt>
   12d08:	add	r5, r5, #1
   12d0c:	str	r0, [r7]
   12d10:	cmp	r6, r5
   12d14:	bne	12ce8 <table_add_column@@Base+0x68>
   12d18:	mov	r0, r4
   12d1c:	bl	1391c <table_get_row_length@@Base>
   12d20:	ldr	r6, [r4, #4]
   12d24:	mov	r7, r0
   12d28:	mov	r0, r9
   12d2c:	bl	1362c <table_get_default_compare_function_for_data_type@@Base>
   12d30:	ldr	r5, [r4]
   12d34:	mov	sl, r0
   12d38:	mov	r0, r8
   12d3c:	bl	11f24 <strlen@plt>
   12d40:	add	r0, r0, #1
   12d44:	bl	11f00 <malloc@plt>
   12d48:	mov	r1, r8
   12d4c:	add	r8, r6, r6, lsl #1
   12d50:	cmp	r0, #0
   12d54:	str	r0, [r5, r8, lsl #2]
   12d58:	beq	12d60 <table_add_column@@Base+0xe0>
   12d5c:	bl	11ee8 <strcpy@plt>
   12d60:	add	r0, r5, r8, lsl #2
   12d64:	cmp	r7, #1
   12d68:	stmib	r0, {r9, sl}
   12d6c:	blt	12d90 <table_add_column@@Base+0x110>
   12d70:	mov	r5, #0
   12d74:	mov	r0, r4
   12d78:	mov	r1, r5
   12d7c:	mov	r2, r6
   12d80:	bl	149b8 <table_cell_init@@Base>
   12d84:	add	r5, r5, #1
   12d88:	cmp	r7, r5
   12d8c:	bne	12d74 <table_add_column@@Base+0xf4>
   12d90:	ldr	r2, [r4, #4]
   12d94:	mov	r0, r4
   12d98:	mvn	r1, #0
   12d9c:	mov	r3, #8
   12da0:	bl	12b04 <table_notify@@Base>
   12da4:	ldr	r0, [r4, #4]
   12da8:	add	r1, r0, #1
   12dac:	str	r1, [r4, #4]
   12db0:	sub	sp, fp, #28
   12db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012db8 <table_remove_column@@Base>:
   12db8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12dbc:	add	fp, sp, #24
   12dc0:	mov	r5, r0
   12dc4:	ldr	r0, [r0]
   12dc8:	add	r6, r1, r1, lsl #1
   12dcc:	mov	r9, r1
   12dd0:	ldr	r0, [r0, r6, lsl #2]
   12dd4:	cmp	r0, #0
   12dd8:	beq	12de0 <table_remove_column@@Base+0x28>
   12ddc:	bl	11ed0 <free@plt>
   12de0:	ldr	r0, [r5, #4]
   12de4:	sub	r4, r0, #1
   12de8:	cmp	r4, r9
   12dec:	ble	12e1c <table_remove_column@@Base+0x64>
   12df0:	sub	r0, r4, r9
   12df4:	lsl	r1, r6, #2
   12df8:	ldr	r2, [r5]
   12dfc:	subs	r0, r0, #1
   12e00:	add	r2, r2, r1
   12e04:	add	r1, r1, #12
   12e08:	vldr	d16, [r2, #12]
   12e0c:	ldr	r3, [r2, #20]
   12e10:	str	r3, [r2, #8]
   12e14:	vstr	d16, [r2]
   12e18:	bne	12df8 <table_remove_column@@Base+0x40>
   12e1c:	mov	r0, r5
   12e20:	bl	1391c <table_get_row_length@@Base>
   12e24:	cmp	r0, #1
   12e28:	blt	12e84 <table_remove_column@@Base+0xcc>
   12e2c:	mov	r6, r0
   12e30:	mov	r7, #0
   12e34:	mov	r0, r5
   12e38:	mov	r1, r7
   12e3c:	mov	r2, r9
   12e40:	bl	149f4 <table_cell_destroy@@Base>
   12e44:	mov	r0, r5
   12e48:	mov	r1, r7
   12e4c:	bl	138b8 <table_get_row_ptr@@Base>
   12e50:	cmp	r4, r9
   12e54:	ble	12e78 <table_remove_column@@Base+0xc0>
   12e58:	mov	r1, r9
   12e5c:	ldr	r2, [r0]
   12e60:	add	r3, r2, r1, lsl #2
   12e64:	ldr	r3, [r3, #4]
   12e68:	str	r3, [r2, r1, lsl #2]
   12e6c:	add	r1, r1, #1
   12e70:	cmp	r4, r1
   12e74:	bne	12e5c <table_remove_column@@Base+0xa4>
   12e78:	add	r7, r7, #1
   12e7c:	cmp	r7, r6
   12e80:	bne	12e34 <table_remove_column@@Base+0x7c>
   12e84:	ldmib	r5, {r0, r1}
   12e88:	sub	r0, r0, #1
   12e8c:	udiv	r2, r0, r1
   12e90:	str	r0, [r5, #4]
   12e94:	mls	r0, r2, r1, r0
   12e98:	cmp	r0, #0
   12e9c:	bne	12f08 <table_remove_column@@Base+0x150>
   12ea0:	ldr	r2, [r5, #12]
   12ea4:	ldr	r0, [r5]
   12ea8:	sub	r1, r2, r1
   12eac:	str	r1, [r5, #12]
   12eb0:	add	r1, r1, r1, lsl #1
   12eb4:	lsl	r1, r1, #2
   12eb8:	bl	11edc <realloc@plt>
   12ebc:	str	r0, [r5]
   12ec0:	mov	r0, r5
   12ec4:	bl	1391c <table_get_row_length@@Base>
   12ec8:	cmp	r0, #1
   12ecc:	blt	12f08 <table_remove_column@@Base+0x150>
   12ed0:	mov	r8, r0
   12ed4:	mov	r7, #0
   12ed8:	mov	r0, r5
   12edc:	mov	r1, r7
   12ee0:	bl	138b8 <table_get_row_ptr@@Base>
   12ee4:	ldr	r1, [r5, #12]
   12ee8:	mov	r6, r0
   12eec:	ldr	r0, [r0]
   12ef0:	lsl	r1, r1, #2
   12ef4:	bl	11edc <realloc@plt>
   12ef8:	add	r7, r7, #1
   12efc:	str	r0, [r6]
   12f00:	cmp	r8, r7
   12f04:	bne	12ed8 <table_remove_column@@Base+0x120>
   12f08:	mov	r0, r5
   12f0c:	mvn	r1, #0
   12f10:	mov	r2, r9
   12f14:	mov	r3, #16
   12f18:	bl	12b04 <table_notify@@Base>
   12f1c:	mov	r0, #0
   12f20:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f24 <table_get_column_compare_function@@Base>:
   12f24:	ldr	r0, [r0]
   12f28:	add	r1, r1, r1, lsl #1
   12f2c:	add	r0, r0, r1, lsl #2
   12f30:	ldr	r0, [r0, #8]
   12f34:	bx	lr

00012f38 <table_set_column_compare_function@@Base>:
   12f38:	ldr	r0, [r0]
   12f3c:	add	r1, r1, r1, lsl #1
   12f40:	add	r0, r0, r1, lsl #2
   12f44:	str	r2, [r0, #8]
   12f48:	bx	lr

00012f4c <table_compare_bool@@Base>:
   12f4c:	cmp	r0, #0
   12f50:	beq	12f84 <table_compare_bool@@Base+0x38>
   12f54:	cmp	r1, #0
   12f58:	moveq	r1, #1
   12f5c:	moveq	r0, r1
   12f60:	bxeq	lr
   12f64:	ldrb	r2, [r1]
   12f68:	ldrb	r0, [r0]
   12f6c:	mov	r1, #0
   12f70:	cmp	r0, r2
   12f74:	mvncc	r1, #0
   12f78:	movwhi	r1, #1
   12f7c:	mov	r0, r1
   12f80:	bx	lr
   12f84:	cmp	r1, #0
   12f88:	mvnne	r1, #0
   12f8c:	mov	r0, r1
   12f90:	bx	lr

00012f94 <table_compare_int@@Base>:
   12f94:	cmp	r0, #0
   12f98:	beq	12fcc <table_compare_int@@Base+0x38>
   12f9c:	cmp	r1, #0
   12fa0:	moveq	r1, #1
   12fa4:	moveq	r0, r1
   12fa8:	bxeq	lr
   12fac:	ldr	r2, [r1]
   12fb0:	ldr	r0, [r0]
   12fb4:	mov	r1, #0
   12fb8:	cmp	r0, r2
   12fbc:	mvnlt	r1, #0
   12fc0:	movwgt	r1, #1
   12fc4:	mov	r0, r1
   12fc8:	bx	lr
   12fcc:	cmp	r1, #0
   12fd0:	mvnne	r1, #0
   12fd4:	mov	r0, r1
   12fd8:	bx	lr

00012fdc <table_compare_uint@@Base>:
   12fdc:	cmp	r0, #0
   12fe0:	beq	13014 <table_compare_uint@@Base+0x38>
   12fe4:	cmp	r1, #0
   12fe8:	moveq	r1, #1
   12fec:	moveq	r0, r1
   12ff0:	bxeq	lr
   12ff4:	ldr	r2, [r1]
   12ff8:	ldr	r0, [r0]
   12ffc:	mov	r1, #0
   13000:	cmp	r0, r2
   13004:	mvncc	r1, #0
   13008:	movwhi	r1, #1
   1300c:	mov	r0, r1
   13010:	bx	lr
   13014:	cmp	r1, #0
   13018:	mvnne	r1, #0
   1301c:	mov	r0, r1
   13020:	bx	lr

00013024 <table_compare_int8@@Base>:
   13024:	cmp	r0, #0
   13028:	beq	1305c <table_compare_int8@@Base+0x38>
   1302c:	cmp	r1, #0
   13030:	moveq	r1, #1
   13034:	moveq	r0, r1
   13038:	bxeq	lr
   1303c:	ldrsb	r2, [r1]
   13040:	ldrsb	r0, [r0]
   13044:	mov	r1, #0
   13048:	cmp	r0, r2
   1304c:	mvnlt	r1, #0
   13050:	movwgt	r1, #1
   13054:	mov	r0, r1
   13058:	bx	lr
   1305c:	cmp	r1, #0
   13060:	mvnne	r1, #0
   13064:	mov	r0, r1
   13068:	bx	lr

0001306c <table_compare_uint8@@Base>:
   1306c:	cmp	r0, #0
   13070:	beq	130a4 <table_compare_uint8@@Base+0x38>
   13074:	cmp	r1, #0
   13078:	moveq	r1, #1
   1307c:	moveq	r0, r1
   13080:	bxeq	lr
   13084:	ldrb	r2, [r1]
   13088:	ldrb	r0, [r0]
   1308c:	mov	r1, #0
   13090:	cmp	r0, r2
   13094:	mvncc	r1, #0
   13098:	movwhi	r1, #1
   1309c:	mov	r0, r1
   130a0:	bx	lr
   130a4:	cmp	r1, #0
   130a8:	mvnne	r1, #0
   130ac:	mov	r0, r1
   130b0:	bx	lr

000130b4 <table_compare_int16@@Base>:
   130b4:	cmp	r0, #0
   130b8:	beq	130ec <table_compare_int16@@Base+0x38>
   130bc:	cmp	r1, #0
   130c0:	moveq	r1, #1
   130c4:	moveq	r0, r1
   130c8:	bxeq	lr
   130cc:	ldrsh	r2, [r1]
   130d0:	ldrsh	r0, [r0]
   130d4:	mov	r1, #0
   130d8:	cmp	r0, r2
   130dc:	mvnlt	r1, #0
   130e0:	movwgt	r1, #1
   130e4:	mov	r0, r1
   130e8:	bx	lr
   130ec:	cmp	r1, #0
   130f0:	mvnne	r1, #0
   130f4:	mov	r0, r1
   130f8:	bx	lr

000130fc <table_compare_uint16@@Base>:
   130fc:	cmp	r0, #0
   13100:	beq	13134 <table_compare_uint16@@Base+0x38>
   13104:	cmp	r1, #0
   13108:	moveq	r1, #1
   1310c:	moveq	r0, r1
   13110:	bxeq	lr
   13114:	ldrh	r2, [r1]
   13118:	ldrh	r0, [r0]
   1311c:	mov	r1, #0
   13120:	cmp	r0, r2
   13124:	mvncc	r1, #0
   13128:	movwhi	r1, #1
   1312c:	mov	r0, r1
   13130:	bx	lr
   13134:	cmp	r1, #0
   13138:	mvnne	r1, #0
   1313c:	mov	r0, r1
   13140:	bx	lr

00013144 <table_compare_int32@@Base>:
   13144:	cmp	r0, #0
   13148:	beq	1317c <table_compare_int32@@Base+0x38>
   1314c:	cmp	r1, #0
   13150:	moveq	r1, #1
   13154:	moveq	r0, r1
   13158:	bxeq	lr
   1315c:	ldr	r2, [r1]
   13160:	ldr	r0, [r0]
   13164:	mov	r1, #0
   13168:	cmp	r0, r2
   1316c:	mvnlt	r1, #0
   13170:	movwgt	r1, #1
   13174:	mov	r0, r1
   13178:	bx	lr
   1317c:	cmp	r1, #0
   13180:	mvnne	r1, #0
   13184:	mov	r0, r1
   13188:	bx	lr

0001318c <table_compare_uint32@@Base>:
   1318c:	cmp	r0, #0
   13190:	beq	131c4 <table_compare_uint32@@Base+0x38>
   13194:	cmp	r1, #0
   13198:	moveq	r1, #1
   1319c:	moveq	r0, r1
   131a0:	bxeq	lr
   131a4:	ldr	r2, [r1]
   131a8:	ldr	r0, [r0]
   131ac:	mov	r1, #0
   131b0:	cmp	r0, r2
   131b4:	mvncc	r1, #0
   131b8:	movwhi	r1, #1
   131bc:	mov	r0, r1
   131c0:	bx	lr
   131c4:	cmp	r1, #0
   131c8:	mvnne	r1, #0
   131cc:	mov	r0, r1
   131d0:	bx	lr

000131d4 <table_compare_int64@@Base>:
   131d4:	cmp	r0, #0
   131d8:	beq	1322c <table_compare_int64@@Base+0x58>
   131dc:	cmp	r1, #0
   131e0:	moveq	r1, #1
   131e4:	moveq	r0, r1
   131e8:	bxeq	lr
   131ec:	push	{r5, r7, fp, lr}
   131f0:	add	fp, sp, #8
   131f4:	ldm	r1, {r2, r7}
   131f8:	ldm	r0, {r0, r5}
   131fc:	mov	r1, #0
   13200:	subs	r3, r0, r2
   13204:	sbcs	r3, r5, r7
   13208:	movwlt	r1, #1
   1320c:	cmp	r1, #0
   13210:	mvnne	r1, #0
   13214:	subs	r0, r2, r0
   13218:	sbcs	r0, r7, r5
   1321c:	movwlt	r1, #1
   13220:	pop	{r5, r7, fp, lr}
   13224:	mov	r0, r1
   13228:	bx	lr
   1322c:	cmp	r1, #0
   13230:	mvnne	r1, #0
   13234:	mov	r0, r1
   13238:	bx	lr

0001323c <table_compare_uint64@@Base>:
   1323c:	cmp	r0, #0
   13240:	beq	13294 <table_compare_uint64@@Base+0x58>
   13244:	cmp	r1, #0
   13248:	moveq	r1, #1
   1324c:	moveq	r0, r1
   13250:	bxeq	lr
   13254:	push	{r5, r7, fp, lr}
   13258:	add	fp, sp, #8
   1325c:	ldm	r1, {r2, r7}
   13260:	ldm	r0, {r0, r5}
   13264:	mov	r1, #0
   13268:	subs	r3, r0, r2
   1326c:	sbcs	r3, r5, r7
   13270:	movwcc	r1, #1
   13274:	cmp	r1, #0
   13278:	mvnne	r1, #0
   1327c:	subs	r0, r2, r0
   13280:	sbcs	r0, r7, r5
   13284:	movwcc	r1, #1
   13288:	pop	{r5, r7, fp, lr}
   1328c:	mov	r0, r1
   13290:	bx	lr
   13294:	cmp	r1, #0
   13298:	mvnne	r1, #0
   1329c:	mov	r0, r1
   132a0:	bx	lr

000132a4 <table_compare_short@@Base>:
   132a4:	cmp	r0, #0
   132a8:	beq	132dc <table_compare_short@@Base+0x38>
   132ac:	cmp	r1, #0
   132b0:	moveq	r1, #1
   132b4:	moveq	r0, r1
   132b8:	bxeq	lr
   132bc:	ldrsh	r2, [r1]
   132c0:	ldrsh	r0, [r0]
   132c4:	mov	r1, #0
   132c8:	cmp	r0, r2
   132cc:	mvnlt	r1, #0
   132d0:	movwgt	r1, #1
   132d4:	mov	r0, r1
   132d8:	bx	lr
   132dc:	cmp	r1, #0
   132e0:	mvnne	r1, #0
   132e4:	mov	r0, r1
   132e8:	bx	lr

000132ec <table_compare_ushort@@Base>:
   132ec:	cmp	r0, #0
   132f0:	beq	13324 <table_compare_ushort@@Base+0x38>
   132f4:	cmp	r1, #0
   132f8:	moveq	r1, #1
   132fc:	moveq	r0, r1
   13300:	bxeq	lr
   13304:	ldrh	r2, [r1]
   13308:	ldrh	r0, [r0]
   1330c:	mov	r1, #0
   13310:	cmp	r0, r2
   13314:	mvncc	r1, #0
   13318:	movwhi	r1, #1
   1331c:	mov	r0, r1
   13320:	bx	lr
   13324:	cmp	r1, #0
   13328:	mvnne	r1, #0
   1332c:	mov	r0, r1
   13330:	bx	lr

00013334 <table_compare_long@@Base>:
   13334:	cmp	r0, #0
   13338:	beq	1336c <table_compare_long@@Base+0x38>
   1333c:	cmp	r1, #0
   13340:	moveq	r1, #1
   13344:	moveq	r0, r1
   13348:	bxeq	lr
   1334c:	ldr	r2, [r1]
   13350:	ldr	r0, [r0]
   13354:	mov	r1, #0
   13358:	cmp	r0, r2
   1335c:	mvnlt	r1, #0
   13360:	movwgt	r1, #1
   13364:	mov	r0, r1
   13368:	bx	lr
   1336c:	cmp	r1, #0
   13370:	mvnne	r1, #0
   13374:	mov	r0, r1
   13378:	bx	lr

0001337c <table_compare_ulong@@Base>:
   1337c:	cmp	r0, #0
   13380:	beq	133b4 <table_compare_ulong@@Base+0x38>
   13384:	cmp	r1, #0
   13388:	moveq	r1, #1
   1338c:	moveq	r0, r1
   13390:	bxeq	lr
   13394:	ldr	r2, [r1]
   13398:	ldr	r0, [r0]
   1339c:	mov	r1, #0
   133a0:	cmp	r0, r2
   133a4:	mvncc	r1, #0
   133a8:	movwhi	r1, #1
   133ac:	mov	r0, r1
   133b0:	bx	lr
   133b4:	cmp	r1, #0
   133b8:	mvnne	r1, #0
   133bc:	mov	r0, r1
   133c0:	bx	lr

000133c4 <table_compare_llong@@Base>:
   133c4:	cmp	r0, #0
   133c8:	beq	1341c <table_compare_llong@@Base+0x58>
   133cc:	cmp	r1, #0
   133d0:	moveq	r1, #1
   133d4:	moveq	r0, r1
   133d8:	bxeq	lr
   133dc:	push	{r5, r7, fp, lr}
   133e0:	add	fp, sp, #8
   133e4:	ldm	r1, {r2, r7}
   133e8:	ldm	r0, {r0, r5}
   133ec:	mov	r1, #0
   133f0:	subs	r3, r0, r2
   133f4:	sbcs	r3, r5, r7
   133f8:	movwlt	r1, #1
   133fc:	cmp	r1, #0
   13400:	mvnne	r1, #0
   13404:	subs	r0, r2, r0
   13408:	sbcs	r0, r7, r5
   1340c:	movwlt	r1, #1
   13410:	pop	{r5, r7, fp, lr}
   13414:	mov	r0, r1
   13418:	bx	lr
   1341c:	cmp	r1, #0
   13420:	mvnne	r1, #0
   13424:	mov	r0, r1
   13428:	bx	lr

0001342c <table_compare_ullong@@Base>:
   1342c:	cmp	r0, #0
   13430:	beq	13464 <table_compare_ullong@@Base+0x38>
   13434:	cmp	r1, #0
   13438:	moveq	r1, #1
   1343c:	moveq	r0, r1
   13440:	bxeq	lr
   13444:	ldr	r2, [r1]
   13448:	ldr	r0, [r0]
   1344c:	mov	r1, #0
   13450:	cmp	r0, r2
   13454:	mvncc	r1, #0
   13458:	movwhi	r1, #1
   1345c:	mov	r0, r1
   13460:	bx	lr
   13464:	cmp	r1, #0
   13468:	mvnne	r1, #0
   1346c:	mov	r0, r1
   13470:	bx	lr

00013474 <table_compare_float@@Base>:
   13474:	cmp	r0, #0
   13478:	beq	134b0 <table_compare_float@@Base+0x3c>
   1347c:	cmp	r1, #0
   13480:	moveq	r1, #1
   13484:	moveq	r0, r1
   13488:	bxeq	lr
   1348c:	vldr	s0, [r1]
   13490:	vldr	s2, [r0]
   13494:	mov	r1, #0
   13498:	vcmpe.f32	s2, s0
   1349c:	vmrs	APSR_nzcv, fpscr
   134a0:	mvnmi	r1, #0
   134a4:	movwgt	r1, #1
   134a8:	mov	r0, r1
   134ac:	bx	lr
   134b0:	cmp	r1, #0
   134b4:	mvnne	r1, #0
   134b8:	mov	r0, r1
   134bc:	bx	lr

000134c0 <table_compare_double@@Base>:
   134c0:	cmp	r0, #0
   134c4:	beq	134fc <table_compare_double@@Base+0x3c>
   134c8:	cmp	r1, #0
   134cc:	moveq	r1, #1
   134d0:	moveq	r0, r1
   134d4:	bxeq	lr
   134d8:	vldr	d16, [r1]
   134dc:	vldr	d17, [r0]
   134e0:	mov	r1, #0
   134e4:	vcmpe.f64	d17, d16
   134e8:	vmrs	APSR_nzcv, fpscr
   134ec:	mvnmi	r1, #0
   134f0:	movwgt	r1, #1
   134f4:	mov	r0, r1
   134f8:	bx	lr
   134fc:	cmp	r1, #0
   13500:	mvnne	r1, #0
   13504:	mov	r0, r1
   13508:	bx	lr

0001350c <table_compare_ldouble@@Base>:
   1350c:	cmp	r0, #0
   13510:	beq	13548 <table_compare_ldouble@@Base+0x3c>
   13514:	cmp	r1, #0
   13518:	moveq	r1, #1
   1351c:	moveq	r0, r1
   13520:	bxeq	lr
   13524:	vldr	d16, [r1]
   13528:	vldr	d17, [r0]
   1352c:	mov	r1, #0
   13530:	vcmpe.f64	d17, d16
   13534:	vmrs	APSR_nzcv, fpscr
   13538:	mvnmi	r1, #0
   1353c:	movwgt	r1, #1
   13540:	mov	r0, r1
   13544:	bx	lr
   13548:	cmp	r1, #0
   1354c:	mvnne	r1, #0
   13550:	mov	r0, r1
   13554:	bx	lr

00013558 <table_compare_char@@Base>:
   13558:	cmp	r0, #0
   1355c:	beq	13590 <table_compare_char@@Base+0x38>
   13560:	cmp	r1, #0
   13564:	moveq	r1, #1
   13568:	moveq	r0, r1
   1356c:	bxeq	lr
   13570:	ldrb	r2, [r1]
   13574:	ldrb	r0, [r0]
   13578:	mov	r1, #0
   1357c:	cmp	r0, r2
   13580:	mvncc	r1, #0
   13584:	movwhi	r1, #1
   13588:	mov	r0, r1
   1358c:	bx	lr
   13590:	cmp	r1, #0
   13594:	mvnne	r1, #0
   13598:	mov	r0, r1
   1359c:	bx	lr

000135a0 <table_compare_uchar@@Base>:
   135a0:	cmp	r0, #0
   135a4:	beq	135d8 <table_compare_uchar@@Base+0x38>
   135a8:	cmp	r1, #0
   135ac:	moveq	r1, #1
   135b0:	moveq	r0, r1
   135b4:	bxeq	lr
   135b8:	ldrb	r2, [r1]
   135bc:	ldrb	r0, [r0]
   135c0:	mov	r1, #0
   135c4:	cmp	r0, r2
   135c8:	mvncc	r1, #0
   135cc:	movwhi	r1, #1
   135d0:	mov	r0, r1
   135d4:	bx	lr
   135d8:	cmp	r1, #0
   135dc:	mvnne	r1, #0
   135e0:	mov	r0, r1
   135e4:	bx	lr

000135e8 <table_compare_string@@Base>:
   135e8:	cmp	r0, #0
   135ec:	beq	13604 <table_compare_string@@Base+0x1c>
   135f0:	cmp	r1, #0
   135f4:	moveq	r1, #1
   135f8:	moveq	r0, r1
   135fc:	bxeq	lr
   13600:	b	11eb8 <strcmp@plt>
   13604:	cmp	r1, #0
   13608:	mvnne	r1, #0
   1360c:	mov	r0, r1
   13610:	bx	lr

00013614 <table_compare_ptr@@Base>:
   13614:	mov	r2, #0
   13618:	cmp	r0, r1
   1361c:	mvncc	r2, #0
   13620:	movwhi	r2, #1
   13624:	mov	r0, r2
   13628:	bx	lr

0001362c <table_get_default_compare_function_for_data_type@@Base>:
   1362c:	cmp	r0, #23
   13630:	ldrls	r1, [pc, #12]	; 13644 <table_get_default_compare_function_for_data_type@@Base+0x18>
   13634:	movhi	r0, #0
   13638:	addls	r1, pc, r1
   1363c:	ldrls	r0, [r1, r0, lsl #2]
   13640:	bx	lr
   13644:	andeq	r2, r1, r0, ror r8

00013648 <table_get@@Base>:
   13648:	push	{fp, lr}
   1364c:	mov	fp, sp
   13650:	bl	149d8 <table_get_cell_ptr@@Base>
   13654:	ldr	r0, [r0]
   13658:	pop	{fp, pc}

0001365c <table_get_bool@@Base>:
   1365c:	push	{fp, lr}
   13660:	mov	fp, sp
   13664:	bl	149d8 <table_get_cell_ptr@@Base>
   13668:	ldr	r0, [r0]
   1366c:	ldrb	r0, [r0]
   13670:	pop	{fp, pc}

00013674 <table_get_int@@Base>:
   13674:	push	{fp, lr}
   13678:	mov	fp, sp
   1367c:	bl	149d8 <table_get_cell_ptr@@Base>
   13680:	ldr	r0, [r0]
   13684:	ldr	r0, [r0]
   13688:	pop	{fp, pc}

0001368c <table_get_uint@@Base>:
   1368c:	push	{fp, lr}
   13690:	mov	fp, sp
   13694:	bl	149d8 <table_get_cell_ptr@@Base>
   13698:	ldr	r0, [r0]
   1369c:	ldr	r0, [r0]
   136a0:	pop	{fp, pc}

000136a4 <table_get_int8@@Base>:
   136a4:	push	{fp, lr}
   136a8:	mov	fp, sp
   136ac:	bl	149d8 <table_get_cell_ptr@@Base>
   136b0:	ldr	r0, [r0]
   136b4:	ldrsb	r0, [r0]
   136b8:	pop	{fp, pc}

000136bc <table_get_uint8@@Base>:
   136bc:	push	{fp, lr}
   136c0:	mov	fp, sp
   136c4:	bl	149d8 <table_get_cell_ptr@@Base>
   136c8:	ldr	r0, [r0]
   136cc:	ldrb	r0, [r0]
   136d0:	pop	{fp, pc}

000136d4 <table_get_int16@@Base>:
   136d4:	push	{fp, lr}
   136d8:	mov	fp, sp
   136dc:	bl	149d8 <table_get_cell_ptr@@Base>
   136e0:	ldr	r0, [r0]
   136e4:	ldrsh	r0, [r0]
   136e8:	pop	{fp, pc}

000136ec <table_get_uint16@@Base>:
   136ec:	push	{fp, lr}
   136f0:	mov	fp, sp
   136f4:	bl	149d8 <table_get_cell_ptr@@Base>
   136f8:	ldr	r0, [r0]
   136fc:	ldrh	r0, [r0]
   13700:	pop	{fp, pc}

00013704 <table_get_int32@@Base>:
   13704:	push	{fp, lr}
   13708:	mov	fp, sp
   1370c:	bl	149d8 <table_get_cell_ptr@@Base>
   13710:	ldr	r0, [r0]
   13714:	ldr	r0, [r0]
   13718:	pop	{fp, pc}

0001371c <table_get_uint32@@Base>:
   1371c:	push	{fp, lr}
   13720:	mov	fp, sp
   13724:	bl	149d8 <table_get_cell_ptr@@Base>
   13728:	ldr	r0, [r0]
   1372c:	ldr	r0, [r0]
   13730:	pop	{fp, pc}

00013734 <table_get_int64@@Base>:
   13734:	push	{fp, lr}
   13738:	mov	fp, sp
   1373c:	bl	149d8 <table_get_cell_ptr@@Base>
   13740:	ldr	r0, [r0]
   13744:	ldrd	r0, [r0]
   13748:	pop	{fp, pc}

0001374c <table_get_uint64@@Base>:
   1374c:	push	{fp, lr}
   13750:	mov	fp, sp
   13754:	bl	149d8 <table_get_cell_ptr@@Base>
   13758:	ldr	r0, [r0]
   1375c:	ldrd	r0, [r0]
   13760:	pop	{fp, pc}

00013764 <table_get_short@@Base>:
   13764:	push	{fp, lr}
   13768:	mov	fp, sp
   1376c:	bl	149d8 <table_get_cell_ptr@@Base>
   13770:	ldr	r0, [r0]
   13774:	ldrsh	r0, [r0]
   13778:	pop	{fp, pc}

0001377c <table_get_ushort@@Base>:
   1377c:	push	{fp, lr}
   13780:	mov	fp, sp
   13784:	bl	149d8 <table_get_cell_ptr@@Base>
   13788:	ldr	r0, [r0]
   1378c:	ldrh	r0, [r0]
   13790:	pop	{fp, pc}

00013794 <table_get_long@@Base>:
   13794:	push	{fp, lr}
   13798:	mov	fp, sp
   1379c:	bl	149d8 <table_get_cell_ptr@@Base>
   137a0:	ldr	r0, [r0]
   137a4:	ldr	r0, [r0]
   137a8:	pop	{fp, pc}

000137ac <table_get_ulong@@Base>:
   137ac:	push	{fp, lr}
   137b0:	mov	fp, sp
   137b4:	bl	149d8 <table_get_cell_ptr@@Base>
   137b8:	ldr	r0, [r0]
   137bc:	ldr	r0, [r0]
   137c0:	pop	{fp, pc}

000137c4 <table_get_llong@@Base>:
   137c4:	push	{fp, lr}
   137c8:	mov	fp, sp
   137cc:	bl	149d8 <table_get_cell_ptr@@Base>
   137d0:	ldr	r0, [r0]
   137d4:	ldrd	r0, [r0]
   137d8:	pop	{fp, pc}

000137dc <table_get_ullong@@Base>:
   137dc:	push	{fp, lr}
   137e0:	mov	fp, sp
   137e4:	bl	149d8 <table_get_cell_ptr@@Base>
   137e8:	ldr	r0, [r0]
   137ec:	ldrd	r0, [r0]
   137f0:	pop	{fp, pc}

000137f4 <table_get_float@@Base>:
   137f4:	push	{fp, lr}
   137f8:	mov	fp, sp
   137fc:	bl	149d8 <table_get_cell_ptr@@Base>
   13800:	ldr	r0, [r0]
   13804:	vldr	s0, [r0]
   13808:	pop	{fp, pc}

0001380c <table_get_double@@Base>:
   1380c:	push	{fp, lr}
   13810:	mov	fp, sp
   13814:	bl	149d8 <table_get_cell_ptr@@Base>
   13818:	ldr	r0, [r0]
   1381c:	vldr	d0, [r0]
   13820:	pop	{fp, pc}

00013824 <table_get_ldouble@@Base>:
   13824:	push	{fp, lr}
   13828:	mov	fp, sp
   1382c:	bl	149d8 <table_get_cell_ptr@@Base>
   13830:	ldr	r0, [r0]
   13834:	vldr	d0, [r0]
   13838:	pop	{fp, pc}

0001383c <table_get_char@@Base>:
   1383c:	push	{fp, lr}
   13840:	mov	fp, sp
   13844:	bl	149d8 <table_get_cell_ptr@@Base>
   13848:	ldr	r0, [r0]
   1384c:	ldrb	r0, [r0]
   13850:	pop	{fp, pc}

00013854 <table_get_uchar@@Base>:
   13854:	push	{fp, lr}
   13858:	mov	fp, sp
   1385c:	bl	149d8 <table_get_cell_ptr@@Base>
   13860:	ldr	r0, [r0]
   13864:	ldrb	r0, [r0]
   13868:	pop	{fp, pc}

0001386c <table_get_string@@Base>:
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	bl	149d8 <table_get_cell_ptr@@Base>
   13878:	ldr	r0, [r0]
   1387c:	pop	{fp, pc}

00013880 <table_get_ptr@@Base>:
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	bl	149d8 <table_get_cell_ptr@@Base>
   1388c:	ldr	r0, [r0]
   13890:	pop	{fp, pc}

00013894 <table_row_init@@Base>:
   13894:	push	{r4, r5, fp, lr}
   13898:	add	fp, sp, #8
   1389c:	mov	r4, r1
   138a0:	ldr	r1, [r0, #12]
   138a4:	ldr	r5, [r0, #16]
   138a8:	lsl	r0, r1, #2
   138ac:	bl	11f00 <malloc@plt>
   138b0:	str	r0, [r5, r4, lsl #2]
   138b4:	pop	{r4, r5, fp, pc}

000138b8 <table_get_row_ptr@@Base>:
   138b8:	ldr	r0, [r0, #16]
   138bc:	add	r0, r0, r1, lsl #2
   138c0:	bx	lr

000138c4 <table_row_destroy@@Base>:
   138c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138c8:	add	fp, sp, #24
   138cc:	mov	r4, r1
   138d0:	mov	r5, r0
   138d4:	bl	12bf8 <table_get_column_length@@Base>
   138d8:	ldr	r8, [r5, #16]
   138dc:	cmp	r0, #1
   138e0:	blt	13908 <table_row_destroy@@Base+0x44>
   138e4:	mov	r6, r0
   138e8:	mov	r7, #0
   138ec:	mov	r0, r5
   138f0:	mov	r1, r4
   138f4:	mov	r2, r7
   138f8:	bl	149f4 <table_cell_destroy@@Base>
   138fc:	add	r7, r7, #1
   13900:	cmp	r6, r7
   13904:	bne	138ec <table_row_destroy@@Base+0x28>
   13908:	ldr	r0, [r8, r4, lsl #2]
   1390c:	cmp	r0, #0
   13910:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   13914:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13918:	b	11ed0 <free@plt>

0001391c <table_get_row_length@@Base>:
   1391c:	ldr	r0, [r0, #20]
   13920:	bx	lr

00013924 <table_add_row@@Base>:
   13924:	push	{r4, r5, r6, r7, fp, lr}
   13928:	add	fp, sp, #16
   1392c:	ldr	r5, [r0, #20]
   13930:	ldr	r1, [r0, #24]
   13934:	mov	r4, r0
   13938:	udiv	r0, r5, r1
   1393c:	mls	r0, r0, r1, r5
   13940:	cmp	r0, #0
   13944:	bne	13968 <table_add_row@@Base+0x44>
   13948:	ldr	r2, [r4, #28]
   1394c:	ldr	r0, [r4, #16]
   13950:	add	r1, r2, r1
   13954:	str	r1, [r4, #28]
   13958:	lsl	r1, r1, #2
   1395c:	bl	11edc <realloc@plt>
   13960:	str	r0, [r4, #16]
   13964:	ldr	r5, [r4, #20]
   13968:	mov	r0, r4
   1396c:	bl	12bf8 <table_get_column_length@@Base>
   13970:	mov	r6, r0
   13974:	ldr	r0, [r4, #12]
   13978:	ldr	r7, [r4, #16]
   1397c:	lsl	r0, r0, #2
   13980:	bl	11f00 <malloc@plt>
   13984:	cmp	r6, #1
   13988:	str	r0, [r7, r5, lsl #2]
   1398c:	blt	139b0 <table_add_row@@Base+0x8c>
   13990:	mov	r7, #0
   13994:	mov	r0, r4
   13998:	mov	r1, r5
   1399c:	mov	r2, r7
   139a0:	bl	149b8 <table_cell_init@@Base>
   139a4:	add	r7, r7, #1
   139a8:	cmp	r6, r7
   139ac:	bne	13994 <table_add_row@@Base+0x70>
   139b0:	ldr	r1, [r4, #20]
   139b4:	mov	r0, r4
   139b8:	mvn	r2, #0
   139bc:	mov	r3, #2
   139c0:	bl	12b04 <table_notify@@Base>
   139c4:	ldr	r0, [r4, #20]
   139c8:	add	r1, r0, #1
   139cc:	str	r1, [r4, #20]
   139d0:	pop	{r4, r5, r6, r7, fp, pc}

000139d4 <table_remove_row@@Base>:
   139d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139d8:	add	fp, sp, #24
   139dc:	ldr	r8, [r0, #20]
   139e0:	mov	r4, r1
   139e4:	mov	r5, r0
   139e8:	bl	12bf8 <table_get_column_length@@Base>
   139ec:	cmp	r0, #1
   139f0:	blt	13a3c <table_remove_row@@Base+0x68>
   139f4:	mov	r6, r0
   139f8:	mov	r7, #0
   139fc:	mov	r0, r5
   13a00:	mov	r1, r7
   13a04:	bl	12c6c <table_get_column_data_type@@Base>
   13a08:	cmp	r0, #23
   13a0c:	beq	13a30 <table_remove_row@@Base+0x5c>
   13a10:	mov	r0, r5
   13a14:	mov	r1, r4
   13a18:	mov	r2, r7
   13a1c:	bl	149d8 <table_get_cell_ptr@@Base>
   13a20:	ldr	r0, [r0]
   13a24:	cmp	r0, #0
   13a28:	beq	13a30 <table_remove_row@@Base+0x5c>
   13a2c:	bl	11ed0 <free@plt>
   13a30:	add	r7, r7, #1
   13a34:	cmp	r6, r7
   13a38:	bne	139fc <table_remove_row@@Base+0x28>
   13a3c:	ldr	r0, [r5, #16]
   13a40:	ldr	r0, [r0, r4, lsl #2]
   13a44:	cmp	r0, #0
   13a48:	beq	13a50 <table_remove_row@@Base+0x7c>
   13a4c:	bl	11ed0 <free@plt>
   13a50:	sub	r0, r8, #1
   13a54:	cmp	r0, r4
   13a58:	ble	13a7c <table_remove_row@@Base+0xa8>
   13a5c:	mov	r1, r4
   13a60:	ldr	r2, [r5, #16]
   13a64:	add	r3, r2, r1, lsl #2
   13a68:	ldr	r3, [r3, #4]
   13a6c:	str	r3, [r2, r1, lsl #2]
   13a70:	add	r1, r1, #1
   13a74:	cmp	r0, r1
   13a78:	bne	13a60 <table_remove_row@@Base+0x8c>
   13a7c:	ldr	r0, [r5, #20]
   13a80:	ldr	r1, [r5, #24]
   13a84:	sub	r0, r0, #1
   13a88:	udiv	r2, r0, r1
   13a8c:	str	r0, [r5, #20]
   13a90:	mls	r0, r2, r1, r0
   13a94:	cmp	r0, #0
   13a98:	bne	13ab8 <table_remove_row@@Base+0xe4>
   13a9c:	ldr	r2, [r5, #28]
   13aa0:	ldr	r0, [r5, #16]
   13aa4:	sub	r1, r2, r1
   13aa8:	str	r1, [r5, #28]
   13aac:	lsl	r1, r1, #2
   13ab0:	bl	11edc <realloc@plt>
   13ab4:	str	r0, [r5, #16]
   13ab8:	mov	r0, r5
   13abc:	mov	r1, r4
   13ac0:	mvn	r2, #0
   13ac4:	mov	r3, #4
   13ac8:	bl	12b04 <table_notify@@Base>
   13acc:	mov	r0, #0
   13ad0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013ad4 <table_set_row_ptr@@Base>:
   13ad4:	ldr	r2, [r2]
   13ad8:	ldr	r0, [r0, #16]
   13adc:	str	r2, [r0, r1, lsl #2]
   13ae0:	bx	lr

00013ae4 <table_set@@Base>:
   13ae4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ae8:	add	fp, sp, #24
   13aec:	mov	r8, r3
   13af0:	mov	r4, r2
   13af4:	mov	r9, r1
   13af8:	mov	r6, r0
   13afc:	bl	149d8 <table_get_cell_ptr@@Base>
   13b00:	mov	r5, r0
   13b04:	mov	r0, r6
   13b08:	mov	r1, r4
   13b0c:	bl	12bd0 <table_get_col_ptr@@Base>
   13b10:	ldr	r1, [fp, #8]
   13b14:	mvn	r7, #0
   13b18:	cmp	r1, #23
   13b1c:	bhi	13de4 <table_set@@Base+0x300>
   13b20:	add	r2, pc, #4
   13b24:	ldr	r1, [r2, r1, lsl #2]
   13b28:	add	pc, r2, r1
   13b2c:	andeq	r0, r0, r0, rrx
   13b30:	andeq	r0, r0, r0, ror r0
   13b34:	andeq	r0, r0, r0, lsl #1
   13b38:	muleq	r0, r0, r0
   13b3c:	andeq	r0, r0, r0, lsr #1
   13b40:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b44:	andeq	r0, r0, r0, asr #1
   13b48:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b4c:	andeq	r0, r0, r0, ror #1
   13b50:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b54:	andeq	r0, r0, r0, lsl #2
   13b58:	andeq	r0, r0, r0, lsl r1
   13b5c:	andeq	r0, r0, r8, asr #2
   13b60:	andeq	r0, r0, r8, asr r1
   13b64:	andeq	r0, r0, r8, ror #2
   13b68:	andeq	r0, r0, r8, ror r1
   13b6c:	andeq	r0, r0, r8, lsl #3
   13b70:	andeq	r0, r0, r0, asr #3
   13b74:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b78:	andeq	r0, r0, r0, lsl r2
   13b7c:	andeq	r0, r0, r0, lsr #4
   13b80:	andeq	r0, r0, r0, lsr r2
   13b84:	andeq	r0, r0, ip, ror #4
   13b88:	andeq	r0, r0, r0, asr #5
   13b8c:	ldr	r0, [r0, #4]
   13b90:	cmp	r0, #0
   13b94:	bne	13de4 <table_set@@Base+0x300>
   13b98:	b	13cc0 <table_set@@Base+0x1dc>
   13b9c:	ldr	r0, [r0, #4]
   13ba0:	cmp	r0, #1
   13ba4:	beq	13cc0 <table_set@@Base+0x1dc>
   13ba8:	b	13de4 <table_set@@Base+0x300>
   13bac:	ldr	r0, [r0, #4]
   13bb0:	cmp	r0, #2
   13bb4:	beq	13da4 <table_set@@Base+0x2c0>
   13bb8:	b	13de4 <table_set@@Base+0x300>
   13bbc:	ldr	r0, [r0, #4]
   13bc0:	cmp	r0, #3
   13bc4:	beq	13da4 <table_set@@Base+0x2c0>
   13bc8:	b	13de4 <table_set@@Base+0x300>
   13bcc:	ldr	r0, [r0, #4]
   13bd0:	cmp	r0, #4
   13bd4:	beq	13c48 <table_set@@Base+0x164>
   13bd8:	b	13de4 <table_set@@Base+0x300>
   13bdc:	ldr	r0, [r0, #4]
   13be0:	cmp	r0, #5
   13be4:	beq	13c48 <table_set@@Base+0x164>
   13be8:	b	13de4 <table_set@@Base+0x300>
   13bec:	ldr	r0, [r0, #4]
   13bf0:	cmp	r0, #6
   13bf4:	beq	13cc0 <table_set@@Base+0x1dc>
   13bf8:	b	13de4 <table_set@@Base+0x300>
   13bfc:	ldr	r0, [r0, #4]
   13c00:	cmp	r0, #7
   13c04:	beq	13cc0 <table_set@@Base+0x1dc>
   13c08:	b	13de4 <table_set@@Base+0x300>
   13c0c:	ldr	r0, [r0, #4]
   13c10:	cmp	r0, #8
   13c14:	beq	13d08 <table_set@@Base+0x224>
   13c18:	b	13de4 <table_set@@Base+0x300>
   13c1c:	ldr	r0, [r0, #4]
   13c20:	cmp	r0, #9
   13c24:	beq	13d08 <table_set@@Base+0x224>
   13c28:	b	13de4 <table_set@@Base+0x300>
   13c2c:	ldr	r0, [r0, #4]
   13c30:	cmp	r0, #10
   13c34:	beq	13c48 <table_set@@Base+0x164>
   13c38:	b	13de4 <table_set@@Base+0x300>
   13c3c:	ldr	r0, [r0, #4]
   13c40:	cmp	r0, #11
   13c44:	bne	13de4 <table_set@@Base+0x300>
   13c48:	ldr	r0, [r5]
   13c4c:	cmp	r0, #0
   13c50:	bne	13c68 <table_set@@Base+0x184>
   13c54:	mov	r0, #2
   13c58:	bl	11f00 <malloc@plt>
   13c5c:	cmp	r0, #0
   13c60:	str	r0, [r5]
   13c64:	beq	13de4 <table_set@@Base+0x300>
   13c68:	ldrh	r1, [r8]
   13c6c:	strh	r1, [r0]
   13c70:	b	13dcc <table_set@@Base+0x2e8>
   13c74:	ldr	r0, [r0, #4]
   13c78:	cmp	r0, #12
   13c7c:	beq	13cc0 <table_set@@Base+0x1dc>
   13c80:	b	13de4 <table_set@@Base+0x300>
   13c84:	ldr	r0, [r0, #4]
   13c88:	cmp	r0, #13
   13c8c:	beq	13cc0 <table_set@@Base+0x1dc>
   13c90:	b	13de4 <table_set@@Base+0x300>
   13c94:	ldr	r0, [r0, #4]
   13c98:	cmp	r0, #14
   13c9c:	beq	13d08 <table_set@@Base+0x224>
   13ca0:	b	13de4 <table_set@@Base+0x300>
   13ca4:	ldr	r0, [r0, #4]
   13ca8:	cmp	r0, #15
   13cac:	beq	13d08 <table_set@@Base+0x224>
   13cb0:	b	13de4 <table_set@@Base+0x300>
   13cb4:	ldr	r0, [r0, #4]
   13cb8:	cmp	r0, #16
   13cbc:	bne	13de4 <table_set@@Base+0x300>
   13cc0:	ldr	r0, [r5]
   13cc4:	cmp	r0, #0
   13cc8:	bne	13ce0 <table_set@@Base+0x1fc>
   13ccc:	mov	r0, #4
   13cd0:	bl	11f00 <malloc@plt>
   13cd4:	cmp	r0, #0
   13cd8:	str	r0, [r5]
   13cdc:	beq	13de4 <table_set@@Base+0x300>
   13ce0:	ldr	r1, [r8]
   13ce4:	str	r1, [r0]
   13ce8:	b	13dcc <table_set@@Base+0x2e8>
   13cec:	ldr	r0, [r0, #4]
   13cf0:	cmp	r0, #17
   13cf4:	beq	13d08 <table_set@@Base+0x224>
   13cf8:	b	13de4 <table_set@@Base+0x300>
   13cfc:	ldr	r0, [r0, #4]
   13d00:	cmp	r0, #18
   13d04:	bne	13de4 <table_set@@Base+0x300>
   13d08:	ldr	r0, [r5]
   13d0c:	cmp	r0, #0
   13d10:	bne	13d28 <table_set@@Base+0x244>
   13d14:	mov	r0, #8
   13d18:	bl	11f00 <malloc@plt>
   13d1c:	cmp	r0, #0
   13d20:	str	r0, [r5]
   13d24:	beq	13de4 <table_set@@Base+0x300>
   13d28:	ldr	r1, [r8]
   13d2c:	ldr	r2, [r8, #4]
   13d30:	str	r2, [r0, #4]
   13d34:	str	r1, [r0]
   13d38:	b	13dcc <table_set@@Base+0x2e8>
   13d3c:	ldr	r0, [r0, #4]
   13d40:	cmp	r0, #19
   13d44:	beq	13da4 <table_set@@Base+0x2c0>
   13d48:	b	13de4 <table_set@@Base+0x300>
   13d4c:	ldr	r0, [r0, #4]
   13d50:	cmp	r0, #20
   13d54:	beq	13da4 <table_set@@Base+0x2c0>
   13d58:	b	13de4 <table_set@@Base+0x300>
   13d5c:	ldr	r0, [r0, #4]
   13d60:	cmp	r0, #21
   13d64:	bne	13de4 <table_set@@Base+0x300>
   13d68:	mov	r0, r8
   13d6c:	bl	11f24 <strlen@plt>
   13d70:	ldr	r2, [r5]
   13d74:	add	r1, r0, #1
   13d78:	mov	r0, r2
   13d7c:	bl	11edc <realloc@plt>
   13d80:	cmp	r0, #0
   13d84:	str	r0, [r5]
   13d88:	beq	13de4 <table_set@@Base+0x300>
   13d8c:	mov	r1, r8
   13d90:	bl	11ee8 <strcpy@plt>
   13d94:	b	13dcc <table_set@@Base+0x2e8>
   13d98:	ldr	r0, [r0, #4]
   13d9c:	cmp	r0, #22
   13da0:	bne	13de4 <table_set@@Base+0x300>
   13da4:	ldr	r0, [r5]
   13da8:	cmp	r0, #0
   13dac:	bne	13dc4 <table_set@@Base+0x2e0>
   13db0:	mov	r0, #1
   13db4:	bl	11f00 <malloc@plt>
   13db8:	cmp	r0, #0
   13dbc:	str	r0, [r5]
   13dc0:	beq	13de4 <table_set@@Base+0x300>
   13dc4:	ldrb	r1, [r8]
   13dc8:	strb	r1, [r0]
   13dcc:	mov	r0, r6
   13dd0:	mov	r1, r9
   13dd4:	mov	r2, r4
   13dd8:	mov	r3, #1
   13ddc:	bl	12b04 <table_notify@@Base>
   13de0:	mov	r7, #0
   13de4:	mov	r0, r7
   13de8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13dec:	ldr	r0, [r0, #4]
   13df0:	cmp	r0, #23
   13df4:	bne	13de4 <table_set@@Base+0x300>
   13df8:	str	r8, [r5]
   13dfc:	b	13dcc <table_set@@Base+0x2e8>

00013e00 <table_set_bool@@Base>:
   13e00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e04:	add	fp, sp, #24
   13e08:	mov	r8, r3
   13e0c:	mov	r4, r2
   13e10:	mov	r9, r1
   13e14:	mov	r6, r0
   13e18:	bl	149d8 <table_get_cell_ptr@@Base>
   13e1c:	mov	r5, r0
   13e20:	mov	r0, r6
   13e24:	mov	r1, r4
   13e28:	bl	12bd0 <table_get_col_ptr@@Base>
   13e2c:	ldr	r0, [r0, #4]
   13e30:	mvn	r7, #0
   13e34:	cmp	r0, #22
   13e38:	bne	13e78 <table_set_bool@@Base+0x78>
   13e3c:	ldr	r0, [r5]
   13e40:	cmp	r0, #0
   13e44:	bne	13e5c <table_set_bool@@Base+0x5c>
   13e48:	mov	r0, #1
   13e4c:	bl	11f00 <malloc@plt>
   13e50:	cmp	r0, #0
   13e54:	str	r0, [r5]
   13e58:	beq	13e78 <table_set_bool@@Base+0x78>
   13e5c:	strb	r8, [r0]
   13e60:	mov	r0, r6
   13e64:	mov	r1, r9
   13e68:	mov	r2, r4
   13e6c:	mov	r3, #1
   13e70:	bl	12b04 <table_notify@@Base>
   13e74:	mov	r7, #0
   13e78:	mov	r0, r7
   13e7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e80 <table_set_int@@Base>:
   13e80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e84:	add	fp, sp, #24
   13e88:	mov	r8, r3
   13e8c:	mov	r4, r2
   13e90:	mov	r5, r1
   13e94:	mov	r6, r0
   13e98:	bl	149d8 <table_get_cell_ptr@@Base>
   13e9c:	mov	r9, r0
   13ea0:	mov	r0, r6
   13ea4:	mov	r1, r4
   13ea8:	bl	12bd0 <table_get_col_ptr@@Base>
   13eac:	ldr	r0, [r0, #4]
   13eb0:	mvn	r7, #0
   13eb4:	cmp	r0, #0
   13eb8:	bne	13ef8 <table_set_int@@Base+0x78>
   13ebc:	ldr	r0, [r9]
   13ec0:	cmp	r0, #0
   13ec4:	bne	13edc <table_set_int@@Base+0x5c>
   13ec8:	mov	r0, #4
   13ecc:	bl	11f00 <malloc@plt>
   13ed0:	cmp	r0, #0
   13ed4:	str	r0, [r9]
   13ed8:	beq	13ef8 <table_set_int@@Base+0x78>
   13edc:	str	r8, [r0]
   13ee0:	mov	r0, r6
   13ee4:	mov	r1, r5
   13ee8:	mov	r2, r4
   13eec:	mov	r3, #1
   13ef0:	bl	12b04 <table_notify@@Base>
   13ef4:	mov	r7, #0
   13ef8:	mov	r0, r7
   13efc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f00 <table_set_uint@@Base>:
   13f00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f04:	add	fp, sp, #24
   13f08:	mov	r8, r3
   13f0c:	mov	r4, r2
   13f10:	mov	r5, r1
   13f14:	mov	r6, r0
   13f18:	bl	149d8 <table_get_cell_ptr@@Base>
   13f1c:	mov	r9, r0
   13f20:	mov	r0, r6
   13f24:	mov	r1, r4
   13f28:	bl	12bd0 <table_get_col_ptr@@Base>
   13f2c:	ldr	r0, [r0, #4]
   13f30:	mvn	r7, #0
   13f34:	cmp	r0, #1
   13f38:	bne	13f78 <table_set_uint@@Base+0x78>
   13f3c:	ldr	r0, [r9]
   13f40:	cmp	r0, #0
   13f44:	bne	13f5c <table_set_uint@@Base+0x5c>
   13f48:	mov	r0, #4
   13f4c:	bl	11f00 <malloc@plt>
   13f50:	cmp	r0, #0
   13f54:	str	r0, [r9]
   13f58:	beq	13f78 <table_set_uint@@Base+0x78>
   13f5c:	str	r8, [r0]
   13f60:	mov	r0, r6
   13f64:	mov	r1, r5
   13f68:	mov	r2, r4
   13f6c:	mov	r3, #1
   13f70:	bl	12b04 <table_notify@@Base>
   13f74:	mov	r7, #0
   13f78:	mov	r0, r7
   13f7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f80 <table_set_int8@@Base>:
   13f80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f84:	add	fp, sp, #24
   13f88:	mov	r8, r3
   13f8c:	mov	r4, r2
   13f90:	mov	r9, r1
   13f94:	mov	r6, r0
   13f98:	bl	149d8 <table_get_cell_ptr@@Base>
   13f9c:	mov	r5, r0
   13fa0:	mov	r0, r6
   13fa4:	mov	r1, r4
   13fa8:	bl	12bd0 <table_get_col_ptr@@Base>
   13fac:	ldr	r0, [r0, #4]
   13fb0:	mvn	r7, #0
   13fb4:	cmp	r0, #2
   13fb8:	bne	13ff8 <table_set_int8@@Base+0x78>
   13fbc:	ldr	r0, [r5]
   13fc0:	cmp	r0, #0
   13fc4:	bne	13fdc <table_set_int8@@Base+0x5c>
   13fc8:	mov	r0, #1
   13fcc:	bl	11f00 <malloc@plt>
   13fd0:	cmp	r0, #0
   13fd4:	str	r0, [r5]
   13fd8:	beq	13ff8 <table_set_int8@@Base+0x78>
   13fdc:	strb	r8, [r0]
   13fe0:	mov	r0, r6
   13fe4:	mov	r1, r9
   13fe8:	mov	r2, r4
   13fec:	mov	r3, #1
   13ff0:	bl	12b04 <table_notify@@Base>
   13ff4:	mov	r7, #0
   13ff8:	mov	r0, r7
   13ffc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014000 <table_set_uint8@@Base>:
   14000:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14004:	add	fp, sp, #24
   14008:	mov	r8, r3
   1400c:	mov	r4, r2
   14010:	mov	r9, r1
   14014:	mov	r6, r0
   14018:	bl	149d8 <table_get_cell_ptr@@Base>
   1401c:	mov	r5, r0
   14020:	mov	r0, r6
   14024:	mov	r1, r4
   14028:	bl	12bd0 <table_get_col_ptr@@Base>
   1402c:	ldr	r0, [r0, #4]
   14030:	mvn	r7, #0
   14034:	cmp	r0, #3
   14038:	bne	14078 <table_set_uint8@@Base+0x78>
   1403c:	ldr	r0, [r5]
   14040:	cmp	r0, #0
   14044:	bne	1405c <table_set_uint8@@Base+0x5c>
   14048:	mov	r0, #1
   1404c:	bl	11f00 <malloc@plt>
   14050:	cmp	r0, #0
   14054:	str	r0, [r5]
   14058:	beq	14078 <table_set_uint8@@Base+0x78>
   1405c:	strb	r8, [r0]
   14060:	mov	r0, r6
   14064:	mov	r1, r9
   14068:	mov	r2, r4
   1406c:	mov	r3, #1
   14070:	bl	12b04 <table_notify@@Base>
   14074:	mov	r7, #0
   14078:	mov	r0, r7
   1407c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014080 <table_set_int16@@Base>:
   14080:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14084:	add	fp, sp, #24
   14088:	mov	r8, r3
   1408c:	mov	r4, r2
   14090:	mov	r9, r1
   14094:	mov	r6, r0
   14098:	bl	149d8 <table_get_cell_ptr@@Base>
   1409c:	mov	r5, r0
   140a0:	mov	r0, r6
   140a4:	mov	r1, r4
   140a8:	bl	12bd0 <table_get_col_ptr@@Base>
   140ac:	ldr	r0, [r0, #4]
   140b0:	mvn	r7, #0
   140b4:	cmp	r0, #4
   140b8:	bne	140f8 <table_set_int16@@Base+0x78>
   140bc:	ldr	r0, [r5]
   140c0:	cmp	r0, #0
   140c4:	bne	140dc <table_set_int16@@Base+0x5c>
   140c8:	mov	r0, #2
   140cc:	bl	11f00 <malloc@plt>
   140d0:	cmp	r0, #0
   140d4:	str	r0, [r5]
   140d8:	beq	140f8 <table_set_int16@@Base+0x78>
   140dc:	strh	r8, [r0]
   140e0:	mov	r0, r6
   140e4:	mov	r1, r9
   140e8:	mov	r2, r4
   140ec:	mov	r3, #1
   140f0:	bl	12b04 <table_notify@@Base>
   140f4:	mov	r7, #0
   140f8:	mov	r0, r7
   140fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014100 <table_set_uint16@@Base>:
   14100:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14104:	add	fp, sp, #24
   14108:	mov	r8, r3
   1410c:	mov	r4, r2
   14110:	mov	r9, r1
   14114:	mov	r6, r0
   14118:	bl	149d8 <table_get_cell_ptr@@Base>
   1411c:	mov	r5, r0
   14120:	mov	r0, r6
   14124:	mov	r1, r4
   14128:	bl	12bd0 <table_get_col_ptr@@Base>
   1412c:	ldr	r0, [r0, #4]
   14130:	mvn	r7, #0
   14134:	cmp	r0, #5
   14138:	bne	14178 <table_set_uint16@@Base+0x78>
   1413c:	ldr	r0, [r5]
   14140:	cmp	r0, #0
   14144:	bne	1415c <table_set_uint16@@Base+0x5c>
   14148:	mov	r0, #2
   1414c:	bl	11f00 <malloc@plt>
   14150:	cmp	r0, #0
   14154:	str	r0, [r5]
   14158:	beq	14178 <table_set_uint16@@Base+0x78>
   1415c:	strh	r8, [r0]
   14160:	mov	r0, r6
   14164:	mov	r1, r9
   14168:	mov	r2, r4
   1416c:	mov	r3, #1
   14170:	bl	12b04 <table_notify@@Base>
   14174:	mov	r7, #0
   14178:	mov	r0, r7
   1417c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014180 <table_set_int32@@Base>:
   14180:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14184:	add	fp, sp, #24
   14188:	mov	r8, r3
   1418c:	mov	r4, r2
   14190:	mov	r5, r1
   14194:	mov	r6, r0
   14198:	bl	149d8 <table_get_cell_ptr@@Base>
   1419c:	mov	r9, r0
   141a0:	mov	r0, r6
   141a4:	mov	r1, r4
   141a8:	bl	12bd0 <table_get_col_ptr@@Base>
   141ac:	ldr	r0, [r0, #4]
   141b0:	mvn	r7, #0
   141b4:	cmp	r0, #6
   141b8:	bne	141f8 <table_set_int32@@Base+0x78>
   141bc:	ldr	r0, [r9]
   141c0:	cmp	r0, #0
   141c4:	bne	141dc <table_set_int32@@Base+0x5c>
   141c8:	mov	r0, #4
   141cc:	bl	11f00 <malloc@plt>
   141d0:	cmp	r0, #0
   141d4:	str	r0, [r9]
   141d8:	beq	141f8 <table_set_int32@@Base+0x78>
   141dc:	str	r8, [r0]
   141e0:	mov	r0, r6
   141e4:	mov	r1, r5
   141e8:	mov	r2, r4
   141ec:	mov	r3, #1
   141f0:	bl	12b04 <table_notify@@Base>
   141f4:	mov	r7, #0
   141f8:	mov	r0, r7
   141fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014200 <table_set_uint32@@Base>:
   14200:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14204:	add	fp, sp, #24
   14208:	mov	r8, r3
   1420c:	mov	r4, r2
   14210:	mov	r5, r1
   14214:	mov	r6, r0
   14218:	bl	149d8 <table_get_cell_ptr@@Base>
   1421c:	mov	r9, r0
   14220:	mov	r0, r6
   14224:	mov	r1, r4
   14228:	bl	12bd0 <table_get_col_ptr@@Base>
   1422c:	ldr	r0, [r0, #4]
   14230:	mvn	r7, #0
   14234:	cmp	r0, #7
   14238:	bne	14278 <table_set_uint32@@Base+0x78>
   1423c:	ldr	r0, [r9]
   14240:	cmp	r0, #0
   14244:	bne	1425c <table_set_uint32@@Base+0x5c>
   14248:	mov	r0, #4
   1424c:	bl	11f00 <malloc@plt>
   14250:	cmp	r0, #0
   14254:	str	r0, [r9]
   14258:	beq	14278 <table_set_uint32@@Base+0x78>
   1425c:	str	r8, [r0]
   14260:	mov	r0, r6
   14264:	mov	r1, r5
   14268:	mov	r2, r4
   1426c:	mov	r3, #1
   14270:	bl	12b04 <table_notify@@Base>
   14274:	mov	r7, #0
   14278:	mov	r0, r7
   1427c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014280 <table_set_int64@@Base>:
   14280:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14284:	add	fp, sp, #24
   14288:	mov	r4, r2
   1428c:	mov	r8, r1
   14290:	mov	r6, r0
   14294:	bl	149d8 <table_get_cell_ptr@@Base>
   14298:	mov	r5, r0
   1429c:	mov	r0, r6
   142a0:	mov	r1, r4
   142a4:	bl	12bd0 <table_get_col_ptr@@Base>
   142a8:	ldr	r0, [r0, #4]
   142ac:	mvn	r7, #0
   142b0:	cmp	r0, #8
   142b4:	bne	14300 <table_set_int64@@Base+0x80>
   142b8:	ldr	r0, [r5]
   142bc:	cmp	r0, #0
   142c0:	bne	142d8 <table_set_int64@@Base+0x58>
   142c4:	mov	r0, #8
   142c8:	bl	11f00 <malloc@plt>
   142cc:	cmp	r0, #0
   142d0:	str	r0, [r5]
   142d4:	beq	14300 <table_set_int64@@Base+0x80>
   142d8:	ldr	r1, [fp, #12]
   142dc:	ldr	r2, [fp, #8]
   142e0:	mov	r3, #1
   142e4:	str	r2, [r0]
   142e8:	str	r1, [r0, #4]
   142ec:	mov	r0, r6
   142f0:	mov	r1, r8
   142f4:	mov	r2, r4
   142f8:	bl	12b04 <table_notify@@Base>
   142fc:	mov	r7, #0
   14300:	mov	r0, r7
   14304:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014308 <table_set_uint64@@Base>:
   14308:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1430c:	add	fp, sp, #24
   14310:	mov	r4, r2
   14314:	mov	r8, r1
   14318:	mov	r6, r0
   1431c:	bl	149d8 <table_get_cell_ptr@@Base>
   14320:	mov	r5, r0
   14324:	mov	r0, r6
   14328:	mov	r1, r4
   1432c:	bl	12bd0 <table_get_col_ptr@@Base>
   14330:	ldr	r0, [r0, #4]
   14334:	mvn	r7, #0
   14338:	cmp	r0, #9
   1433c:	bne	14388 <table_set_uint64@@Base+0x80>
   14340:	ldr	r0, [r5]
   14344:	cmp	r0, #0
   14348:	bne	14360 <table_set_uint64@@Base+0x58>
   1434c:	mov	r0, #8
   14350:	bl	11f00 <malloc@plt>
   14354:	cmp	r0, #0
   14358:	str	r0, [r5]
   1435c:	beq	14388 <table_set_uint64@@Base+0x80>
   14360:	ldr	r1, [fp, #12]
   14364:	ldr	r2, [fp, #8]
   14368:	mov	r3, #1
   1436c:	str	r2, [r0]
   14370:	str	r1, [r0, #4]
   14374:	mov	r0, r6
   14378:	mov	r1, r8
   1437c:	mov	r2, r4
   14380:	bl	12b04 <table_notify@@Base>
   14384:	mov	r7, #0
   14388:	mov	r0, r7
   1438c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014390 <table_set_short@@Base>:
   14390:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14394:	add	fp, sp, #24
   14398:	mov	r8, r3
   1439c:	mov	r4, r2
   143a0:	mov	r9, r1
   143a4:	mov	r6, r0
   143a8:	bl	149d8 <table_get_cell_ptr@@Base>
   143ac:	mov	r5, r0
   143b0:	mov	r0, r6
   143b4:	mov	r1, r4
   143b8:	bl	12bd0 <table_get_col_ptr@@Base>
   143bc:	ldr	r0, [r0, #4]
   143c0:	mvn	r7, #0
   143c4:	cmp	r0, #10
   143c8:	bne	14408 <table_set_short@@Base+0x78>
   143cc:	ldr	r0, [r5]
   143d0:	cmp	r0, #0
   143d4:	bne	143ec <table_set_short@@Base+0x5c>
   143d8:	mov	r0, #2
   143dc:	bl	11f00 <malloc@plt>
   143e0:	cmp	r0, #0
   143e4:	str	r0, [r5]
   143e8:	beq	14408 <table_set_short@@Base+0x78>
   143ec:	strh	r8, [r0]
   143f0:	mov	r0, r6
   143f4:	mov	r1, r9
   143f8:	mov	r2, r4
   143fc:	mov	r3, #1
   14400:	bl	12b04 <table_notify@@Base>
   14404:	mov	r7, #0
   14408:	mov	r0, r7
   1440c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014410 <table_set_ushort@@Base>:
   14410:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14414:	add	fp, sp, #24
   14418:	mov	r8, r3
   1441c:	mov	r4, r2
   14420:	mov	r9, r1
   14424:	mov	r6, r0
   14428:	bl	149d8 <table_get_cell_ptr@@Base>
   1442c:	mov	r5, r0
   14430:	mov	r0, r6
   14434:	mov	r1, r4
   14438:	bl	12bd0 <table_get_col_ptr@@Base>
   1443c:	ldr	r0, [r0, #4]
   14440:	mvn	r7, #0
   14444:	cmp	r0, #11
   14448:	bne	14488 <table_set_ushort@@Base+0x78>
   1444c:	ldr	r0, [r5]
   14450:	cmp	r0, #0
   14454:	bne	1446c <table_set_ushort@@Base+0x5c>
   14458:	mov	r0, #2
   1445c:	bl	11f00 <malloc@plt>
   14460:	cmp	r0, #0
   14464:	str	r0, [r5]
   14468:	beq	14488 <table_set_ushort@@Base+0x78>
   1446c:	strh	r8, [r0]
   14470:	mov	r0, r6
   14474:	mov	r1, r9
   14478:	mov	r2, r4
   1447c:	mov	r3, #1
   14480:	bl	12b04 <table_notify@@Base>
   14484:	mov	r7, #0
   14488:	mov	r0, r7
   1448c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014490 <table_set_long@@Base>:
   14490:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14494:	add	fp, sp, #24
   14498:	mov	r8, r3
   1449c:	mov	r4, r2
   144a0:	mov	r5, r1
   144a4:	mov	r6, r0
   144a8:	bl	149d8 <table_get_cell_ptr@@Base>
   144ac:	mov	r9, r0
   144b0:	mov	r0, r6
   144b4:	mov	r1, r4
   144b8:	bl	12bd0 <table_get_col_ptr@@Base>
   144bc:	ldr	r0, [r0, #4]
   144c0:	mvn	r7, #0
   144c4:	cmp	r0, #12
   144c8:	bne	14508 <table_set_long@@Base+0x78>
   144cc:	ldr	r0, [r9]
   144d0:	cmp	r0, #0
   144d4:	bne	144ec <table_set_long@@Base+0x5c>
   144d8:	mov	r0, #4
   144dc:	bl	11f00 <malloc@plt>
   144e0:	cmp	r0, #0
   144e4:	str	r0, [r9]
   144e8:	beq	14508 <table_set_long@@Base+0x78>
   144ec:	str	r8, [r0]
   144f0:	mov	r0, r6
   144f4:	mov	r1, r5
   144f8:	mov	r2, r4
   144fc:	mov	r3, #1
   14500:	bl	12b04 <table_notify@@Base>
   14504:	mov	r7, #0
   14508:	mov	r0, r7
   1450c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014510 <table_set_ulong@@Base>:
   14510:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14514:	add	fp, sp, #24
   14518:	mov	r8, r3
   1451c:	mov	r4, r2
   14520:	mov	r5, r1
   14524:	mov	r6, r0
   14528:	bl	149d8 <table_get_cell_ptr@@Base>
   1452c:	mov	r9, r0
   14530:	mov	r0, r6
   14534:	mov	r1, r4
   14538:	bl	12bd0 <table_get_col_ptr@@Base>
   1453c:	ldr	r0, [r0, #4]
   14540:	mvn	r7, #0
   14544:	cmp	r0, #13
   14548:	bne	14588 <table_set_ulong@@Base+0x78>
   1454c:	ldr	r0, [r9]
   14550:	cmp	r0, #0
   14554:	bne	1456c <table_set_ulong@@Base+0x5c>
   14558:	mov	r0, #4
   1455c:	bl	11f00 <malloc@plt>
   14560:	cmp	r0, #0
   14564:	str	r0, [r9]
   14568:	beq	14588 <table_set_ulong@@Base+0x78>
   1456c:	str	r8, [r0]
   14570:	mov	r0, r6
   14574:	mov	r1, r5
   14578:	mov	r2, r4
   1457c:	mov	r3, #1
   14580:	bl	12b04 <table_notify@@Base>
   14584:	mov	r7, #0
   14588:	mov	r0, r7
   1458c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014590 <table_set_llong@@Base>:
   14590:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14594:	add	fp, sp, #24
   14598:	mov	r4, r2
   1459c:	mov	r8, r1
   145a0:	mov	r6, r0
   145a4:	bl	149d8 <table_get_cell_ptr@@Base>
   145a8:	mov	r5, r0
   145ac:	mov	r0, r6
   145b0:	mov	r1, r4
   145b4:	bl	12bd0 <table_get_col_ptr@@Base>
   145b8:	ldr	r0, [r0, #4]
   145bc:	mvn	r7, #0
   145c0:	cmp	r0, #14
   145c4:	bne	14610 <table_set_llong@@Base+0x80>
   145c8:	ldr	r0, [r5]
   145cc:	cmp	r0, #0
   145d0:	bne	145e8 <table_set_llong@@Base+0x58>
   145d4:	mov	r0, #8
   145d8:	bl	11f00 <malloc@plt>
   145dc:	cmp	r0, #0
   145e0:	str	r0, [r5]
   145e4:	beq	14610 <table_set_llong@@Base+0x80>
   145e8:	ldr	r1, [fp, #12]
   145ec:	ldr	r2, [fp, #8]
   145f0:	mov	r3, #1
   145f4:	str	r2, [r0]
   145f8:	str	r1, [r0, #4]
   145fc:	mov	r0, r6
   14600:	mov	r1, r8
   14604:	mov	r2, r4
   14608:	bl	12b04 <table_notify@@Base>
   1460c:	mov	r7, #0
   14610:	mov	r0, r7
   14614:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014618 <table_set_ullong@@Base>:
   14618:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1461c:	add	fp, sp, #24
   14620:	mov	r4, r2
   14624:	mov	r8, r1
   14628:	mov	r6, r0
   1462c:	bl	149d8 <table_get_cell_ptr@@Base>
   14630:	mov	r5, r0
   14634:	mov	r0, r6
   14638:	mov	r1, r4
   1463c:	bl	12bd0 <table_get_col_ptr@@Base>
   14640:	ldr	r0, [r0, #4]
   14644:	mvn	r7, #0
   14648:	cmp	r0, #15
   1464c:	bne	14698 <table_set_ullong@@Base+0x80>
   14650:	ldr	r0, [r5]
   14654:	cmp	r0, #0
   14658:	bne	14670 <table_set_ullong@@Base+0x58>
   1465c:	mov	r0, #8
   14660:	bl	11f00 <malloc@plt>
   14664:	cmp	r0, #0
   14668:	str	r0, [r5]
   1466c:	beq	14698 <table_set_ullong@@Base+0x80>
   14670:	ldr	r1, [fp, #12]
   14674:	ldr	r2, [fp, #8]
   14678:	mov	r3, #1
   1467c:	str	r2, [r0]
   14680:	str	r1, [r0, #4]
   14684:	mov	r0, r6
   14688:	mov	r1, r8
   1468c:	mov	r2, r4
   14690:	bl	12b04 <table_notify@@Base>
   14694:	mov	r7, #0
   14698:	mov	r0, r7
   1469c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000146a0 <table_set_float@@Base>:
   146a0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   146a4:	add	fp, sp, #24
   146a8:	vpush	{d8}
   146ac:	vmov.f32	s16, s0
   146b0:	mov	r4, r2
   146b4:	mov	r8, r1
   146b8:	mov	r6, r0
   146bc:	bl	149d8 <table_get_cell_ptr@@Base>
   146c0:	mov	r5, r0
   146c4:	mov	r0, r6
   146c8:	mov	r1, r4
   146cc:	bl	12bd0 <table_get_col_ptr@@Base>
   146d0:	ldr	r0, [r0, #4]
   146d4:	mvn	r7, #0
   146d8:	cmp	r0, #16
   146dc:	bne	14720 <table_set_float@@Base+0x80>
   146e0:	ldr	r0, [r5]
   146e4:	cmp	r0, #0
   146e8:	bne	14700 <table_set_float@@Base+0x60>
   146ec:	mov	r0, #4
   146f0:	bl	11f00 <malloc@plt>
   146f4:	cmp	r0, #0
   146f8:	str	r0, [r5]
   146fc:	beq	14720 <table_set_float@@Base+0x80>
   14700:	vmov	r1, s16
   14704:	mov	r2, r4
   14708:	mov	r3, #1
   1470c:	str	r1, [r0]
   14710:	mov	r0, r6
   14714:	mov	r1, r8
   14718:	bl	12b04 <table_notify@@Base>
   1471c:	mov	r7, #0
   14720:	mov	r0, r7
   14724:	vpop	{d8}
   14728:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001472c <table_set_double@@Base>:
   1472c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14730:	add	fp, sp, #24
   14734:	vpush	{d8}
   14738:	vorr	d8, d0, d0
   1473c:	mov	r4, r2
   14740:	mov	r5, r1
   14744:	mov	r6, r0
   14748:	bl	149d8 <table_get_cell_ptr@@Base>
   1474c:	mov	r8, r0
   14750:	mov	r0, r6
   14754:	mov	r1, r4
   14758:	bl	12bd0 <table_get_col_ptr@@Base>
   1475c:	ldr	r0, [r0, #4]
   14760:	mvn	r7, #0
   14764:	cmp	r0, #17
   14768:	bne	147a8 <table_set_double@@Base+0x7c>
   1476c:	ldr	r0, [r8]
   14770:	cmp	r0, #0
   14774:	bne	1478c <table_set_double@@Base+0x60>
   14778:	mov	r0, #8
   1477c:	bl	11f00 <malloc@plt>
   14780:	cmp	r0, #0
   14784:	str	r0, [r8]
   14788:	beq	147a8 <table_set_double@@Base+0x7c>
   1478c:	vst1.8	{d8}, [r0]
   14790:	mov	r0, r6
   14794:	mov	r1, r5
   14798:	mov	r2, r4
   1479c:	mov	r3, #1
   147a0:	bl	12b04 <table_notify@@Base>
   147a4:	mov	r7, #0
   147a8:	mov	r0, r7
   147ac:	vpop	{d8}
   147b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147b4 <table_set_ldouble@@Base>:
   147b4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147b8:	add	fp, sp, #24
   147bc:	vpush	{d8}
   147c0:	vorr	d8, d0, d0
   147c4:	mov	r4, r2
   147c8:	mov	r5, r1
   147cc:	mov	r6, r0
   147d0:	bl	149d8 <table_get_cell_ptr@@Base>
   147d4:	mov	r8, r0
   147d8:	mov	r0, r6
   147dc:	mov	r1, r4
   147e0:	bl	12bd0 <table_get_col_ptr@@Base>
   147e4:	ldr	r0, [r0, #4]
   147e8:	mvn	r7, #0
   147ec:	cmp	r0, #18
   147f0:	bne	14830 <table_set_ldouble@@Base+0x7c>
   147f4:	ldr	r0, [r8]
   147f8:	cmp	r0, #0
   147fc:	bne	14814 <table_set_ldouble@@Base+0x60>
   14800:	mov	r0, #8
   14804:	bl	11f00 <malloc@plt>
   14808:	cmp	r0, #0
   1480c:	str	r0, [r8]
   14810:	beq	14830 <table_set_ldouble@@Base+0x7c>
   14814:	vst1.8	{d8}, [r0]
   14818:	mov	r0, r6
   1481c:	mov	r1, r5
   14820:	mov	r2, r4
   14824:	mov	r3, #1
   14828:	bl	12b04 <table_notify@@Base>
   1482c:	mov	r7, #0
   14830:	mov	r0, r7
   14834:	vpop	{d8}
   14838:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001483c <table_set_string@@Base>:
   1483c:	push	{fp, lr}
   14840:	mov	fp, sp
   14844:	sub	sp, sp, #8
   14848:	mov	ip, #21
   1484c:	str	ip, [sp]
   14850:	bl	13ae4 <table_set@@Base>
   14854:	mov	sp, fp
   14858:	pop	{fp, pc}

0001485c <table_set_char@@Base>:
   1485c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14860:	add	fp, sp, #24
   14864:	mov	r8, r3
   14868:	mov	r4, r2
   1486c:	mov	r9, r1
   14870:	mov	r6, r0
   14874:	bl	149d8 <table_get_cell_ptr@@Base>
   14878:	mov	r5, r0
   1487c:	mov	r0, r6
   14880:	mov	r1, r4
   14884:	bl	12bd0 <table_get_col_ptr@@Base>
   14888:	ldr	r0, [r0, #4]
   1488c:	mvn	r7, #0
   14890:	cmp	r0, #19
   14894:	bne	148d4 <table_set_char@@Base+0x78>
   14898:	ldr	r0, [r5]
   1489c:	cmp	r0, #0
   148a0:	bne	148b8 <table_set_char@@Base+0x5c>
   148a4:	mov	r0, #1
   148a8:	bl	11f00 <malloc@plt>
   148ac:	cmp	r0, #0
   148b0:	str	r0, [r5]
   148b4:	beq	148d4 <table_set_char@@Base+0x78>
   148b8:	strb	r8, [r0]
   148bc:	mov	r0, r6
   148c0:	mov	r1, r9
   148c4:	mov	r2, r4
   148c8:	mov	r3, #1
   148cc:	bl	12b04 <table_notify@@Base>
   148d0:	mov	r7, #0
   148d4:	mov	r0, r7
   148d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148dc <table_set_uchar@@Base>:
   148dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148e0:	add	fp, sp, #24
   148e4:	mov	r8, r3
   148e8:	mov	r4, r2
   148ec:	mov	r9, r1
   148f0:	mov	r6, r0
   148f4:	bl	149d8 <table_get_cell_ptr@@Base>
   148f8:	mov	r5, r0
   148fc:	mov	r0, r6
   14900:	mov	r1, r4
   14904:	bl	12bd0 <table_get_col_ptr@@Base>
   14908:	ldr	r0, [r0, #4]
   1490c:	mvn	r7, #0
   14910:	cmp	r0, #20
   14914:	bne	14954 <table_set_uchar@@Base+0x78>
   14918:	ldr	r0, [r5]
   1491c:	cmp	r0, #0
   14920:	bne	14938 <table_set_uchar@@Base+0x5c>
   14924:	mov	r0, #1
   14928:	bl	11f00 <malloc@plt>
   1492c:	cmp	r0, #0
   14930:	str	r0, [r5]
   14934:	beq	14954 <table_set_uchar@@Base+0x78>
   14938:	strb	r8, [r0]
   1493c:	mov	r0, r6
   14940:	mov	r1, r9
   14944:	mov	r2, r4
   14948:	mov	r3, #1
   1494c:	bl	12b04 <table_notify@@Base>
   14950:	mov	r7, #0
   14954:	mov	r0, r7
   14958:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0001495c <table_set_ptr@@Base>:
   1495c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14960:	add	fp, sp, #24
   14964:	mov	r8, r3
   14968:	mov	r4, r2
   1496c:	mov	r5, r1
   14970:	mov	r6, r0
   14974:	bl	149d8 <table_get_cell_ptr@@Base>
   14978:	mov	r7, r0
   1497c:	mov	r0, r6
   14980:	mov	r1, r4
   14984:	bl	12bd0 <table_get_col_ptr@@Base>
   14988:	ldr	r1, [r0, #4]
   1498c:	mvn	r0, #0
   14990:	cmp	r1, #23
   14994:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14998:	mov	r0, r6
   1499c:	mov	r1, r5
   149a0:	mov	r2, r4
   149a4:	mov	r3, #1
   149a8:	str	r8, [r7]
   149ac:	bl	12b04 <table_notify@@Base>
   149b0:	mov	r0, #0
   149b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149b8 <table_cell_init@@Base>:
   149b8:	push	{r4, sl, fp, lr}
   149bc:	add	fp, sp, #8
   149c0:	mov	r4, r2
   149c4:	bl	138b8 <table_get_row_ptr@@Base>
   149c8:	ldr	r0, [r0]
   149cc:	mov	r1, #0
   149d0:	str	r1, [r0, r4, lsl #2]
   149d4:	pop	{r4, sl, fp, pc}

000149d8 <table_get_cell_ptr@@Base>:
   149d8:	push	{r4, sl, fp, lr}
   149dc:	add	fp, sp, #8
   149e0:	mov	r4, r2
   149e4:	bl	138b8 <table_get_row_ptr@@Base>
   149e8:	ldr	r0, [r0]
   149ec:	add	r0, r0, r4, lsl #2
   149f0:	pop	{r4, sl, fp, pc}

000149f4 <table_cell_destroy@@Base>:
   149f4:	push	{r4, r5, r6, sl, fp, lr}
   149f8:	add	fp, sp, #16
   149fc:	mov	r5, r1
   14a00:	mov	r1, r2
   14a04:	mov	r4, r2
   14a08:	mov	r6, r0
   14a0c:	bl	12c6c <table_get_column_data_type@@Base>
   14a10:	cmp	r0, #23
   14a14:	popeq	{r4, r5, r6, sl, fp, pc}
   14a18:	mov	r0, r6
   14a1c:	mov	r1, r5
   14a20:	bl	138b8 <table_get_row_ptr@@Base>
   14a24:	ldr	r0, [r0]
   14a28:	ldr	r0, [r0, r4, lsl #2]
   14a2c:	cmp	r0, #0
   14a30:	beq	14a3c <table_cell_destroy@@Base+0x48>
   14a34:	pop	{r4, r5, r6, sl, fp, lr}
   14a38:	b	11ed0 <free@plt>
   14a3c:	pop	{r4, r5, r6, sl, fp, pc}

00014a40 <table_cell_to_buffer@@Base>:
   14a40:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a44:	add	fp, sp, #24
   14a48:	sub	sp, sp, #8
   14a4c:	mov	r7, r1
   14a50:	mov	r1, r2
   14a54:	mov	r5, r3
   14a58:	mov	r6, r2
   14a5c:	mov	r4, r0
   14a60:	bl	12c6c <table_get_column_data_type@@Base>
   14a64:	cmp	r0, #23
   14a68:	bhi	14d5c <table_cell_to_buffer@@Base+0x31c>
   14a6c:	add	r1, pc, #8
   14a70:	ldr	r8, [fp, #8]
   14a74:	ldr	r0, [r1, r0, lsl #2]
   14a78:	add	pc, r1, r0
   14a7c:	andeq	r0, r0, r0, rrx
   14a80:	andeq	r0, r0, r4, ror r0
   14a84:	andeq	r0, r0, r8, lsl #1
   14a88:	muleq	r0, ip, r0
   14a8c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14a90:	andeq	r0, r0, r4, asr #1
   14a94:	ldrdeq	r0, [r0], -r8
   14a98:	andeq	r0, r0, ip, ror #1
   14a9c:	andeq	r0, r0, ip, lsl #2
   14aa0:	andeq	r0, r0, r0, lsr #2
   14aa4:	andeq	r0, r0, r4, lsr r1
   14aa8:	andeq	r0, r0, r4, asr r1
   14aac:	andeq	r0, r0, r4, ror r1
   14ab0:	muleq	r0, r4, r1
   14ab4:			; <UNDEFINED> instruction: 0x000001b4
   14ab8:	ldrdeq	r0, [r0], -r4
   14abc:	strdeq	r0, [r0], -r4
   14ac0:	andeq	r0, r0, r8, lsl r2
   14ac4:	andeq	r0, r0, r8, lsr r2
   14ac8:	andeq	r0, r0, r4, ror #4
   14acc:	andeq	r0, r0, r8, ror r2
   14ad0:	muleq	r0, r8, r2
   14ad4:			; <UNDEFINED> instruction: 0x000002b8
   14ad8:	andeq	r0, r0, ip, ror #5
   14adc:	mov	r0, r4
   14ae0:	mov	r1, r7
   14ae4:	mov	r2, r6
   14ae8:	bl	13674 <table_get_int@@Base>
   14aec:	b	14d44 <table_cell_to_buffer@@Base+0x304>
   14af0:	mov	r0, r4
   14af4:	mov	r1, r7
   14af8:	mov	r2, r6
   14afc:	bl	1368c <table_get_uint@@Base>
   14b00:	b	14b78 <table_cell_to_buffer@@Base+0x138>
   14b04:	mov	r0, r4
   14b08:	mov	r1, r7
   14b0c:	mov	r2, r6
   14b10:	bl	136a4 <table_get_int8@@Base>
   14b14:	b	14d44 <table_cell_to_buffer@@Base+0x304>
   14b18:	mov	r0, r4
   14b1c:	mov	r1, r7
   14b20:	mov	r2, r6
   14b24:	bl	136bc <table_get_uint8@@Base>
   14b28:	b	14b78 <table_cell_to_buffer@@Base+0x138>
   14b2c:	mov	r0, r4
   14b30:	mov	r1, r7
   14b34:	mov	r2, r6
   14b38:	bl	136d4 <table_get_int16@@Base>
   14b3c:	b	14d44 <table_cell_to_buffer@@Base+0x304>
   14b40:	mov	r0, r4
   14b44:	mov	r1, r7
   14b48:	mov	r2, r6
   14b4c:	bl	136ec <table_get_uint16@@Base>
   14b50:	b	14b78 <table_cell_to_buffer@@Base+0x138>
   14b54:	mov	r0, r4
   14b58:	mov	r1, r7
   14b5c:	mov	r2, r6
   14b60:	bl	13704 <table_get_int32@@Base>
   14b64:	b	14d44 <table_cell_to_buffer@@Base+0x304>
   14b68:	mov	r0, r4
   14b6c:	mov	r1, r7
   14b70:	mov	r2, r6
   14b74:	bl	1371c <table_get_uint32@@Base>
   14b78:	ldr	r2, [pc, #524]	; 14d8c <table_cell_to_buffer@@Base+0x34c>
   14b7c:	mov	r3, r0
   14b80:	add	r2, pc, r2
   14b84:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14b88:	mov	r0, r4
   14b8c:	mov	r1, r7
   14b90:	mov	r2, r6
   14b94:	bl	13734 <table_get_int64@@Base>
   14b98:	b	14c40 <table_cell_to_buffer@@Base+0x200>
   14b9c:	mov	r0, r4
   14ba0:	mov	r1, r7
   14ba4:	mov	r2, r6
   14ba8:	bl	1374c <table_get_uint64@@Base>
   14bac:	b	14c60 <table_cell_to_buffer@@Base+0x220>
   14bb0:	mov	r0, r4
   14bb4:	mov	r1, r7
   14bb8:	mov	r2, r6
   14bbc:	bl	13764 <table_get_short@@Base>
   14bc0:	ldr	r2, [pc, #464]	; 14d98 <table_cell_to_buffer@@Base+0x358>
   14bc4:	mov	r3, r0
   14bc8:	add	r2, pc, r2
   14bcc:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14bd0:	mov	r0, r4
   14bd4:	mov	r1, r7
   14bd8:	mov	r2, r6
   14bdc:	bl	1377c <table_get_ushort@@Base>
   14be0:	ldr	r2, [pc, #436]	; 14d9c <table_cell_to_buffer@@Base+0x35c>
   14be4:	mov	r3, r0
   14be8:	add	r2, pc, r2
   14bec:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14bf0:	mov	r0, r4
   14bf4:	mov	r1, r7
   14bf8:	mov	r2, r6
   14bfc:	bl	13794 <table_get_long@@Base>
   14c00:	ldr	r2, [pc, #408]	; 14da0 <table_cell_to_buffer@@Base+0x360>
   14c04:	mov	r3, r0
   14c08:	add	r2, pc, r2
   14c0c:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14c10:	mov	r0, r4
   14c14:	mov	r1, r7
   14c18:	mov	r2, r6
   14c1c:	bl	137ac <table_get_ulong@@Base>
   14c20:	ldr	r2, [pc, #380]	; 14da4 <table_cell_to_buffer@@Base+0x364>
   14c24:	mov	r3, r0
   14c28:	add	r2, pc, r2
   14c2c:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14c30:	mov	r0, r4
   14c34:	mov	r1, r7
   14c38:	mov	r2, r6
   14c3c:	bl	137c4 <table_get_llong@@Base>
   14c40:	stm	sp, {r0, r1}
   14c44:	ldr	r2, [pc, #324]	; 14d90 <table_cell_to_buffer@@Base+0x350>
   14c48:	add	r2, pc, r2
   14c4c:	b	14cd0 <table_cell_to_buffer@@Base+0x290>
   14c50:	mov	r0, r4
   14c54:	mov	r1, r7
   14c58:	mov	r2, r6
   14c5c:	bl	137dc <table_get_ullong@@Base>
   14c60:	stm	sp, {r0, r1}
   14c64:	ldr	r2, [pc, #296]	; 14d94 <table_cell_to_buffer@@Base+0x354>
   14c68:	add	r2, pc, r2
   14c6c:	b	14cd0 <table_cell_to_buffer@@Base+0x290>
   14c70:	mov	r0, r4
   14c74:	mov	r1, r7
   14c78:	mov	r2, r6
   14c7c:	bl	137f4 <table_get_float@@Base>
   14c80:	vcvt.f64.f32	d16, s0
   14c84:	vstr	d16, [sp]
   14c88:	ldr	r2, [pc, #284]	; 14dac <table_cell_to_buffer@@Base+0x36c>
   14c8c:	add	r2, pc, r2
   14c90:	b	14cd0 <table_cell_to_buffer@@Base+0x290>
   14c94:	mov	r0, r4
   14c98:	mov	r1, r7
   14c9c:	mov	r2, r6
   14ca0:	bl	1380c <table_get_double@@Base>
   14ca4:	vstr	d0, [sp]
   14ca8:	ldr	r2, [pc, #256]	; 14db0 <table_cell_to_buffer@@Base+0x370>
   14cac:	add	r2, pc, r2
   14cb0:	b	14cd0 <table_cell_to_buffer@@Base+0x290>
   14cb4:	mov	r0, r4
   14cb8:	mov	r1, r7
   14cbc:	mov	r2, r6
   14cc0:	bl	13824 <table_get_ldouble@@Base>
   14cc4:	vstr	d0, [sp]
   14cc8:	ldr	r2, [pc, #228]	; 14db4 <table_cell_to_buffer@@Base+0x374>
   14ccc:	add	r2, pc, r2
   14cd0:	mov	r0, r5
   14cd4:	mov	r1, r8
   14cd8:	bl	11f30 <snprintf@plt>
   14cdc:	b	14d5c <table_cell_to_buffer@@Base+0x31c>
   14ce0:	mov	r0, r4
   14ce4:	mov	r1, r7
   14ce8:	mov	r2, r6
   14cec:	bl	1383c <table_get_char@@Base>
   14cf0:	b	14d04 <table_cell_to_buffer@@Base+0x2c4>
   14cf4:	mov	r0, r4
   14cf8:	mov	r1, r7
   14cfc:	mov	r2, r6
   14d00:	bl	13854 <table_get_uchar@@Base>
   14d04:	ldr	r2, [pc, #172]	; 14db8 <table_cell_to_buffer@@Base+0x378>
   14d08:	mov	r3, r0
   14d0c:	add	r2, pc, r2
   14d10:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14d14:	mov	r0, r4
   14d18:	mov	r1, r7
   14d1c:	mov	r2, r6
   14d20:	bl	1386c <table_get_string@@Base>
   14d24:	ldr	r2, [pc, #124]	; 14da8 <table_cell_to_buffer@@Base+0x368>
   14d28:	mov	r3, r0
   14d2c:	add	r2, pc, r2
   14d30:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14d34:	mov	r0, r4
   14d38:	mov	r1, r7
   14d3c:	mov	r2, r6
   14d40:	bl	1365c <table_get_bool@@Base>
   14d44:	ldr	r2, [pc, #60]	; 14d88 <table_cell_to_buffer@@Base+0x348>
   14d48:	mov	r3, r0
   14d4c:	add	r2, pc, r2
   14d50:	mov	r0, r5
   14d54:	mov	r1, r8
   14d58:	bl	11f30 <snprintf@plt>
   14d5c:	mov	r0, #0
   14d60:	sub	sp, fp, #24
   14d64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d68:	mov	r0, r4
   14d6c:	mov	r1, r7
   14d70:	mov	r2, r6
   14d74:	bl	13880 <table_get_ptr@@Base>
   14d78:	ldr	r2, [pc, #60]	; 14dbc <table_cell_to_buffer@@Base+0x37c>
   14d7c:	mov	r3, r0
   14d80:	add	r2, pc, r2
   14d84:	b	14d50 <table_cell_to_buffer@@Base+0x310>
   14d88:			; <UNDEFINED> instruction: 0x000008bc
   14d8c:	andeq	r0, r0, fp, lsl #21
   14d90:	andeq	r0, r0, r6, asr #19
   14d94:	andeq	r0, r0, fp, lsr #19
   14d98:	andeq	r0, r0, r0, asr sl
   14d9c:	andeq	r0, r0, r4, lsr sl
   14da0:	andeq	r0, r0, r8, lsl sl
   14da4:	strdeq	r0, [r0], -ip
   14da8:	strdeq	r0, [r0], -ip
   14dac:	muleq	r0, pc, r9	; <UNPREDICTABLE>
   14db0:	andeq	r0, r0, r2, lsl #19
   14db4:	andeq	r0, r0, r6, ror #18
   14db8:	andeq	r0, r0, sl, lsr #18
   14dbc:			; <UNDEFINED> instruction: 0x000008b9

00014dc0 <table_cell_from_buffer@@Base>:
   14dc0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14dc4:	add	fp, sp, #24
   14dc8:	sub	sp, sp, #264	; 0x108
   14dcc:	mov	r5, r1
   14dd0:	mov	r1, r2
   14dd4:	mov	r7, r3
   14dd8:	mov	r4, r2
   14ddc:	mov	r6, r0
   14de0:	bl	12c6c <table_get_column_data_type@@Base>
   14de4:	cmp	r0, #23
   14de8:	bhi	153c0 <table_cell_from_buffer@@Base+0x600>
   14dec:	add	r1, pc, #4
   14df0:	ldr	r0, [r1, r0, lsl #2]
   14df4:	add	pc, r1, r0
   14df8:	andeq	r0, r0, r0, rrx
   14dfc:	muleq	r0, r8, r0
   14e00:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14e04:	andeq	r0, r0, r8, lsl #2
   14e08:	andeq	r0, r0, r0, asr #2
   14e0c:	andeq	r0, r0, r8, ror r1
   14e10:			; <UNDEFINED> instruction: 0x000001b0
   14e14:	andeq	r0, r0, r8, ror #3
   14e18:	andeq	r0, r0, r0, lsr #4
   14e1c:	andeq	r0, r0, r0, ror #4
   14e20:	andeq	r0, r0, r0, lsr #5
   14e24:	ldrdeq	r0, [r0], -r8
   14e28:	andeq	r0, r0, r0, lsl r3
   14e2c:	andeq	r0, r0, r8, asr #6
   14e30:	andeq	r0, r0, r0, lsl #7
   14e34:	andeq	r0, r0, r0, asr #7
   14e38:	andeq	r0, r0, r0, lsl #8
   14e3c:	andeq	r0, r0, r8, lsr r4
   14e40:	andeq	r0, r0, r0, ror r4
   14e44:	andeq	r0, r0, r8, lsr #9
   14e48:	andeq	r0, r0, r0, ror #9
   14e4c:	andeq	r0, r0, r8, lsl r5
   14e50:	andeq	r0, r0, r0, asr r5
   14e54:	muleq	r0, r4, r5
   14e58:	ldr	r1, [pc, #1420]	; 153ec <table_cell_from_buffer@@Base+0x62c>
   14e5c:	add	r2, sp, #8
   14e60:	mov	r0, r7
   14e64:	add	r1, pc, r1
   14e68:	bl	11f3c <__isoc99_sscanf@plt>
   14e6c:	mvn	r7, #0
   14e70:	cmp	r0, #1
   14e74:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   14e78:	ldr	r3, [sp, #8]
   14e7c:	mov	r0, r6
   14e80:	mov	r1, r5
   14e84:	mov	r2, r4
   14e88:	bl	13e80 <table_set_int@@Base>
   14e8c:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   14e90:	ldr	r1, [pc, #1368]	; 153f0 <table_cell_from_buffer@@Base+0x630>
   14e94:	add	r2, sp, #8
   14e98:	mov	r0, r7
   14e9c:	add	r1, pc, r1
   14ea0:	bl	11f3c <__isoc99_sscanf@plt>
   14ea4:	mvn	r7, #0
   14ea8:	cmp	r0, #1
   14eac:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   14eb0:	ldr	r3, [sp, #8]
   14eb4:	mov	r0, r6
   14eb8:	mov	r1, r5
   14ebc:	mov	r2, r4
   14ec0:	bl	13f00 <table_set_uint@@Base>
   14ec4:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   14ec8:	ldr	r1, [pc, #1316]	; 153f4 <table_cell_from_buffer@@Base+0x634>
   14ecc:	add	r2, sp, #8
   14ed0:	mov	r0, r7
   14ed4:	add	r1, pc, r1
   14ed8:	bl	11f3c <__isoc99_sscanf@plt>
   14edc:	mvn	r7, #0
   14ee0:	cmp	r0, #1
   14ee4:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   14ee8:	ldrsb	r3, [sp, #8]
   14eec:	mov	r0, r6
   14ef0:	mov	r1, r5
   14ef4:	mov	r2, r4
   14ef8:	bl	13f80 <table_set_int8@@Base>
   14efc:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   14f00:	ldr	r1, [pc, #1264]	; 153f8 <table_cell_from_buffer@@Base+0x638>
   14f04:	add	r2, sp, #8
   14f08:	mov	r0, r7
   14f0c:	add	r1, pc, r1
   14f10:	bl	11f3c <__isoc99_sscanf@plt>
   14f14:	mvn	r7, #0
   14f18:	cmp	r0, #1
   14f1c:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   14f20:	ldrb	r3, [sp, #8]
   14f24:	mov	r0, r6
   14f28:	mov	r1, r5
   14f2c:	mov	r2, r4
   14f30:	bl	14000 <table_set_uint8@@Base>
   14f34:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   14f38:	ldr	r1, [pc, #1212]	; 153fc <table_cell_from_buffer@@Base+0x63c>
   14f3c:	add	r2, sp, #8
   14f40:	mov	r0, r7
   14f44:	add	r1, pc, r1
   14f48:	bl	11f3c <__isoc99_sscanf@plt>
   14f4c:	mvn	r7, #0
   14f50:	cmp	r0, #1
   14f54:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   14f58:	ldrsh	r3, [sp, #8]
   14f5c:	mov	r0, r6
   14f60:	mov	r1, r5
   14f64:	mov	r2, r4
   14f68:	bl	14080 <table_set_int16@@Base>
   14f6c:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   14f70:	ldr	r1, [pc, #1160]	; 15400 <table_cell_from_buffer@@Base+0x640>
   14f74:	add	r2, sp, #8
   14f78:	mov	r0, r7
   14f7c:	add	r1, pc, r1
   14f80:	bl	11f3c <__isoc99_sscanf@plt>
   14f84:	mvn	r7, #0
   14f88:	cmp	r0, #1
   14f8c:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   14f90:	ldrh	r3, [sp, #8]
   14f94:	mov	r0, r6
   14f98:	mov	r1, r5
   14f9c:	mov	r2, r4
   14fa0:	bl	14100 <table_set_uint16@@Base>
   14fa4:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   14fa8:	ldr	r1, [pc, #1108]	; 15404 <table_cell_from_buffer@@Base+0x644>
   14fac:	add	r2, sp, #8
   14fb0:	mov	r0, r7
   14fb4:	add	r1, pc, r1
   14fb8:	bl	11f3c <__isoc99_sscanf@plt>
   14fbc:	mvn	r7, #0
   14fc0:	cmp	r0, #1
   14fc4:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   14fc8:	ldr	r3, [sp, #8]
   14fcc:	mov	r0, r6
   14fd0:	mov	r1, r5
   14fd4:	mov	r2, r4
   14fd8:	bl	14180 <table_set_int32@@Base>
   14fdc:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   14fe0:	ldr	r1, [pc, #1056]	; 15408 <table_cell_from_buffer@@Base+0x648>
   14fe4:	add	r2, sp, #8
   14fe8:	mov	r0, r7
   14fec:	add	r1, pc, r1
   14ff0:	bl	11f3c <__isoc99_sscanf@plt>
   14ff4:	mvn	r7, #0
   14ff8:	cmp	r0, #1
   14ffc:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15000:	ldr	r3, [sp, #8]
   15004:	mov	r0, r6
   15008:	mov	r1, r5
   1500c:	mov	r2, r4
   15010:	bl	14200 <table_set_uint32@@Base>
   15014:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15018:	ldr	r1, [pc, #1004]	; 1540c <table_cell_from_buffer@@Base+0x64c>
   1501c:	add	r2, sp, #8
   15020:	mov	r0, r7
   15024:	add	r1, pc, r1
   15028:	bl	11f3c <__isoc99_sscanf@plt>
   1502c:	mvn	r7, #0
   15030:	cmp	r0, #1
   15034:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15038:	ldr	r0, [sp, #8]
   1503c:	ldr	r1, [sp, #12]
   15040:	mov	r2, r4
   15044:	stm	sp, {r0, r1}
   15048:	mov	r0, r6
   1504c:	mov	r1, r5
   15050:	bl	14280 <table_set_int64@@Base>
   15054:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15058:	ldr	r1, [pc, #944]	; 15410 <table_cell_from_buffer@@Base+0x650>
   1505c:	add	r2, sp, #8
   15060:	mov	r0, r7
   15064:	add	r1, pc, r1
   15068:	bl	11f3c <__isoc99_sscanf@plt>
   1506c:	mvn	r7, #0
   15070:	cmp	r0, #1
   15074:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15078:	ldr	r0, [sp, #8]
   1507c:	ldr	r1, [sp, #12]
   15080:	mov	r2, r4
   15084:	stm	sp, {r0, r1}
   15088:	mov	r0, r6
   1508c:	mov	r1, r5
   15090:	bl	14308 <table_set_uint64@@Base>
   15094:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15098:	ldr	r1, [pc, #884]	; 15414 <table_cell_from_buffer@@Base+0x654>
   1509c:	add	r2, sp, #8
   150a0:	mov	r0, r7
   150a4:	add	r1, pc, r1
   150a8:	bl	11f3c <__isoc99_sscanf@plt>
   150ac:	mvn	r7, #0
   150b0:	cmp	r0, #1
   150b4:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   150b8:	ldrsh	r3, [sp, #8]
   150bc:	mov	r0, r6
   150c0:	mov	r1, r5
   150c4:	mov	r2, r4
   150c8:	bl	14390 <table_set_short@@Base>
   150cc:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   150d0:	ldr	r1, [pc, #832]	; 15418 <table_cell_from_buffer@@Base+0x658>
   150d4:	add	r2, sp, #8
   150d8:	mov	r0, r7
   150dc:	add	r1, pc, r1
   150e0:	bl	11f3c <__isoc99_sscanf@plt>
   150e4:	mvn	r7, #0
   150e8:	cmp	r0, #1
   150ec:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   150f0:	ldrh	r3, [sp, #8]
   150f4:	mov	r0, r6
   150f8:	mov	r1, r5
   150fc:	mov	r2, r4
   15100:	bl	14410 <table_set_ushort@@Base>
   15104:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15108:	ldr	r1, [pc, #780]	; 1541c <table_cell_from_buffer@@Base+0x65c>
   1510c:	add	r2, sp, #8
   15110:	mov	r0, r7
   15114:	add	r1, pc, r1
   15118:	bl	11f3c <__isoc99_sscanf@plt>
   1511c:	mvn	r7, #0
   15120:	cmp	r0, #1
   15124:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15128:	ldr	r3, [sp, #8]
   1512c:	mov	r0, r6
   15130:	mov	r1, r5
   15134:	mov	r2, r4
   15138:	bl	14490 <table_set_long@@Base>
   1513c:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15140:	ldr	r1, [pc, #728]	; 15420 <table_cell_from_buffer@@Base+0x660>
   15144:	add	r2, sp, #8
   15148:	mov	r0, r7
   1514c:	add	r1, pc, r1
   15150:	bl	11f3c <__isoc99_sscanf@plt>
   15154:	mvn	r7, #0
   15158:	cmp	r0, #1
   1515c:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15160:	ldr	r3, [sp, #8]
   15164:	mov	r0, r6
   15168:	mov	r1, r5
   1516c:	mov	r2, r4
   15170:	bl	14510 <table_set_ulong@@Base>
   15174:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15178:	ldr	r1, [pc, #676]	; 15424 <table_cell_from_buffer@@Base+0x664>
   1517c:	add	r2, sp, #8
   15180:	mov	r0, r7
   15184:	add	r1, pc, r1
   15188:	bl	11f3c <__isoc99_sscanf@plt>
   1518c:	mvn	r7, #0
   15190:	cmp	r0, #1
   15194:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15198:	ldr	r0, [sp, #8]
   1519c:	ldr	r1, [sp, #12]
   151a0:	mov	r2, r4
   151a4:	stm	sp, {r0, r1}
   151a8:	mov	r0, r6
   151ac:	mov	r1, r5
   151b0:	bl	14590 <table_set_llong@@Base>
   151b4:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   151b8:	ldr	r1, [pc, #616]	; 15428 <table_cell_from_buffer@@Base+0x668>
   151bc:	add	r2, sp, #8
   151c0:	mov	r0, r7
   151c4:	add	r1, pc, r1
   151c8:	bl	11f3c <__isoc99_sscanf@plt>
   151cc:	mvn	r7, #0
   151d0:	cmp	r0, #1
   151d4:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   151d8:	ldr	r0, [sp, #8]
   151dc:	ldr	r1, [sp, #12]
   151e0:	mov	r2, r4
   151e4:	stm	sp, {r0, r1}
   151e8:	mov	r0, r6
   151ec:	mov	r1, r5
   151f0:	bl	14618 <table_set_ullong@@Base>
   151f4:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   151f8:	ldr	r1, [pc, #560]	; 15430 <table_cell_from_buffer@@Base+0x670>
   151fc:	add	r2, sp, #8
   15200:	mov	r0, r7
   15204:	add	r1, pc, r1
   15208:	bl	11f3c <__isoc99_sscanf@plt>
   1520c:	mvn	r7, #0
   15210:	cmp	r0, #1
   15214:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15218:	vldr	s0, [sp, #8]
   1521c:	mov	r0, r6
   15220:	mov	r1, r5
   15224:	mov	r2, r4
   15228:	bl	146a0 <table_set_float@@Base>
   1522c:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15230:	ldr	r1, [pc, #508]	; 15434 <table_cell_from_buffer@@Base+0x674>
   15234:	add	r2, sp, #8
   15238:	mov	r0, r7
   1523c:	add	r1, pc, r1
   15240:	bl	11f3c <__isoc99_sscanf@plt>
   15244:	mvn	r7, #0
   15248:	cmp	r0, #1
   1524c:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15250:	vldr	d0, [sp, #8]
   15254:	mov	r0, r6
   15258:	mov	r1, r5
   1525c:	mov	r2, r4
   15260:	bl	1472c <table_set_double@@Base>
   15264:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15268:	ldr	r1, [pc, #456]	; 15438 <table_cell_from_buffer@@Base+0x678>
   1526c:	add	r2, sp, #8
   15270:	mov	r0, r7
   15274:	add	r1, pc, r1
   15278:	bl	11f3c <__isoc99_sscanf@plt>
   1527c:	mvn	r7, #0
   15280:	cmp	r0, #1
   15284:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15288:	vldr	d0, [sp, #8]
   1528c:	mov	r0, r6
   15290:	mov	r1, r5
   15294:	mov	r2, r4
   15298:	bl	147b4 <table_set_ldouble@@Base>
   1529c:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   152a0:	ldr	r1, [pc, #408]	; 15440 <table_cell_from_buffer@@Base+0x680>
   152a4:	add	r2, sp, #8
   152a8:	mov	r0, r7
   152ac:	add	r1, pc, r1
   152b0:	bl	11f3c <__isoc99_sscanf@plt>
   152b4:	mvn	r7, #0
   152b8:	cmp	r0, #1
   152bc:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   152c0:	ldrb	r3, [sp, #8]
   152c4:	mov	r0, r6
   152c8:	mov	r1, r5
   152cc:	mov	r2, r4
   152d0:	bl	1485c <table_set_char@@Base>
   152d4:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   152d8:	ldr	r1, [pc, #356]	; 15444 <table_cell_from_buffer@@Base+0x684>
   152dc:	add	r2, sp, #8
   152e0:	mov	r0, r7
   152e4:	add	r1, pc, r1
   152e8:	bl	11f3c <__isoc99_sscanf@plt>
   152ec:	mvn	r7, #0
   152f0:	cmp	r0, #1
   152f4:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   152f8:	ldrb	r3, [sp, #8]
   152fc:	mov	r0, r6
   15300:	mov	r1, r5
   15304:	mov	r2, r4
   15308:	bl	148dc <table_set_uchar@@Base>
   1530c:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15310:	ldr	r1, [pc, #276]	; 1542c <table_cell_from_buffer@@Base+0x66c>
   15314:	add	r2, sp, #8
   15318:	mov	r0, r7
   1531c:	add	r1, pc, r1
   15320:	bl	11f3c <__isoc99_sscanf@plt>
   15324:	mvn	r7, #0
   15328:	cmp	r0, #1
   1532c:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15330:	add	r3, sp, #8
   15334:	mov	r0, r6
   15338:	mov	r1, r5
   1533c:	mov	r2, r4
   15340:	bl	1483c <table_set_string@@Base>
   15344:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   15348:	ldr	r1, [pc, #236]	; 1543c <table_cell_from_buffer@@Base+0x67c>
   1534c:	add	r2, sp, #8
   15350:	mov	r0, r7
   15354:	add	r1, pc, r1
   15358:	bl	11f3c <__isoc99_sscanf@plt>
   1535c:	mvn	r7, #0
   15360:	cmp	r0, #1
   15364:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   15368:	ldr	r0, [sp, #8]
   1536c:	cmp	r0, #0
   15370:	beq	153d0 <table_cell_from_buffer@@Base+0x610>
   15374:	mov	r0, r6
   15378:	mov	r1, r5
   1537c:	mov	r2, r4
   15380:	mov	r3, #1
   15384:	bl	13e00 <table_set_bool@@Base>
   15388:	b	153c0 <table_cell_from_buffer@@Base+0x600>
   1538c:	ldr	r1, [pc, #180]	; 15448 <table_cell_from_buffer@@Base+0x688>
   15390:	add	r2, sp, #8
   15394:	mov	r0, r7
   15398:	add	r1, pc, r1
   1539c:	bl	11f3c <__isoc99_sscanf@plt>
   153a0:	mvn	r7, #0
   153a4:	cmp	r0, #1
   153a8:	bne	153c4 <table_cell_from_buffer@@Base+0x604>
   153ac:	ldr	r3, [sp, #8]
   153b0:	mov	r0, r6
   153b4:	mov	r1, r5
   153b8:	mov	r2, r4
   153bc:	bl	1495c <table_set_ptr@@Base>
   153c0:	mov	r7, #0
   153c4:	mov	r0, r7
   153c8:	sub	sp, fp, #24
   153cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   153d0:	mov	r0, r6
   153d4:	mov	r1, r5
   153d8:	mov	r2, r4
   153dc:	mov	r3, #0
   153e0:	mov	r7, #0
   153e4:	bl	13e00 <table_set_bool@@Base>
   153e8:	b	153c4 <table_cell_from_buffer@@Base+0x604>
   153ec:	andeq	r0, r0, r4, lsr #15
   153f0:	andeq	r0, r0, pc, ror #14
   153f4:	andeq	r0, r0, r8, ror #14
   153f8:	andeq	r0, r0, r5, lsr r7
   153fc:	ldrdeq	r0, [r0], -r4
   15400:	andeq	r0, r0, r0, lsr #13
   15404:	andeq	r0, r0, r4, asr r6
   15408:	andeq	r0, r0, pc, lsl r6
   1540c:	andeq	r0, r0, sl, ror #11
   15410:	andeq	r0, r0, pc, lsr #11
   15414:	andeq	r0, r0, r4, ror r5
   15418:	andeq	r0, r0, r0, asr #10
   1541c:	andeq	r0, r0, ip, lsl #10
   15420:	ldrdeq	r0, [r0], -r8
   15424:	andeq	r0, r0, sl, lsl #9
   15428:	andeq	r0, r0, pc, asr #8
   1542c:	andeq	r0, r0, ip, lsl #6
   15430:	andeq	r0, r0, r7, lsr #8
   15434:	strdeq	r0, [r0], -r2
   15438:			; <UNDEFINED> instruction: 0x000003be
   1543c:			; <UNDEFINED> instruction: 0x000002b4
   15440:	andeq	r0, r0, sl, lsl #7
   15444:	andeq	r0, r0, r2, asr r3
   15448:	andeq	r0, r0, r1, lsr #5

0001544c <table_cell_nullify@@Base>:
   1544c:	push	{r4, r5, fp, lr}
   15450:	add	fp, sp, #8
   15454:	mov	r4, r2
   15458:	bl	138b8 <table_get_row_ptr@@Base>
   1545c:	ldr	r5, [r0]
   15460:	ldr	r0, [r5, r4, lsl #2]
   15464:	cmp	r0, #0
   15468:	beq	15478 <table_cell_nullify@@Base+0x2c>
   1546c:	bl	11ed0 <free@plt>
   15470:	mov	r0, #0
   15474:	str	r0, [r5, r4, lsl #2]
   15478:	mov	r0, #0
   1547c:	pop	{r4, r5, fp, pc}

00015480 <__libc_csu_init@@Base>:
   15480:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15484:	mov	r7, r0
   15488:	ldr	r6, [pc, #72]	; 154d8 <__libc_csu_init@@Base+0x58>
   1548c:	ldr	r5, [pc, #72]	; 154dc <__libc_csu_init@@Base+0x5c>
   15490:	add	r6, pc, r6
   15494:	add	r5, pc, r5
   15498:	sub	r6, r6, r5
   1549c:	mov	r8, r1
   154a0:	mov	r9, r2
   154a4:	bl	11e98 <strcmp@plt-0x20>
   154a8:	asrs	r6, r6, #2
   154ac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   154b0:	mov	r4, #0
   154b4:	add	r4, r4, #1
   154b8:	ldr	r3, [r5], #4
   154bc:	mov	r2, r9
   154c0:	mov	r1, r8
   154c4:	mov	r0, r7
   154c8:	blx	r3
   154cc:	cmp	r6, r4
   154d0:	bne	154b4 <__libc_csu_init@@Base+0x34>
   154d4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154d8:	andeq	r0, r1, r4, lsl sl
   154dc:	andeq	r0, r1, ip, lsl #20

000154e0 <__libc_csu_fini@@Base>:
   154e0:	bx	lr

Disassembly of section .fini:

000154e4 <.fini>:
   154e4:	push	{r3, lr}
   154e8:	pop	{r3, pc}
