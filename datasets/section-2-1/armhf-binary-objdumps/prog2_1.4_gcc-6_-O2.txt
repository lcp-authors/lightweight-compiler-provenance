
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	10adc <_start@@Base+0x3c>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <printf@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <printf@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r0, r1, r0, lsl #19

00010684 <printf@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #16, 20	; 0x10000
   1068c:	ldr	pc, [ip, #2432]!	; 0x980

00010690 <fopen@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #16, 20	; 0x10000
   10698:	ldr	pc, [ip, #2424]!	; 0x978

0001069c <free@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #16, 20	; 0x10000
   106a4:	ldr	pc, [ip, #2416]!	; 0x970

000106a8 <malloc@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #16, 20	; 0x10000
   106b0:	ldr	pc, [ip, #2408]!	; 0x968

000106b4 <__libc_start_main@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #16, 20	; 0x10000
   106bc:	ldr	pc, [ip, #2400]!	; 0x960

000106c0 <__gmon_start__@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #16, 20	; 0x10000
   106c8:	ldr	pc, [ip, #2392]!	; 0x958

000106cc <exit@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #16, 20	; 0x10000
   106d4:	ldr	pc, [ip, #2384]!	; 0x950

000106d8 <fclose@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #16, 20	; 0x10000
   106e0:	ldr	pc, [ip, #2376]!	; 0x948

000106e4 <fseek@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #16, 20	; 0x10000
   106ec:	ldr	pc, [ip, #2368]!	; 0x940

000106f0 <abort@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #16, 20	; 0x10000
   106f8:	ldr	pc, [ip, #2360]!	; 0x938

000106fc <getc@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #16, 20	; 0x10000
   10704:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010708 <main@@Base>:
   10708:	ldr	r1, [pc, #872]	; 10a78 <main@@Base+0x370>
   1070c:	ldr	r0, [pc, #872]	; 10a7c <main@@Base+0x374>
   10710:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10714:	add	r1, pc, r1
   10718:	sub	sp, sp, #12
   1071c:	add	r0, pc, r0
   10720:	bl	10690 <fopen@plt>
   10724:	mov	r4, r0
   10728:	bl	106fc <getc@plt>
   1072c:	cmp	r0, #66	; 0x42
   10730:	bne	10a3c <main@@Base+0x334>
   10734:	mov	r0, r4
   10738:	bl	106fc <getc@plt>
   1073c:	cmp	r0, #77	; 0x4d
   10740:	bne	10a3c <main@@Base+0x334>
   10744:	mov	r0, r4
   10748:	bl	106fc <getc@plt>
   1074c:	mov	r6, r0
   10750:	mov	r0, r4
   10754:	bl	106fc <getc@plt>
   10758:	mov	r7, r0
   1075c:	mov	r0, r4
   10760:	bl	106fc <getc@plt>
   10764:	lsl	r5, r0, #16
   10768:	mov	r0, r4
   1076c:	bl	106fc <getc@plt>
   10770:	orr	r5, r5, r7, lsl #8
   10774:	orr	r5, r5, r6
   10778:	orr	r1, r5, r0, lsl #24
   1077c:	ldr	r0, [pc, #764]	; 10a80 <main@@Base+0x378>
   10780:	add	r0, pc, r0
   10784:	bl	10684 <printf@plt>
   10788:	mov	r2, #1
   1078c:	mov	r1, #4
   10790:	mov	r0, r4
   10794:	bl	106e4 <fseek@plt>
   10798:	mov	r0, r4
   1079c:	bl	106fc <getc@plt>
   107a0:	mov	r6, r0
   107a4:	mov	r0, r4
   107a8:	bl	106fc <getc@plt>
   107ac:	mov	r7, r0
   107b0:	mov	r0, r4
   107b4:	bl	106fc <getc@plt>
   107b8:	lsl	r5, r0, #16
   107bc:	mov	r0, r4
   107c0:	bl	106fc <getc@plt>
   107c4:	orr	r5, r5, r7, lsl #8
   107c8:	orr	r5, r5, r6
   107cc:	mov	r2, #1
   107d0:	mov	r1, #4
   107d4:	orr	r5, r5, r0, lsl #24
   107d8:	mov	r0, r4
   107dc:	bl	106e4 <fseek@plt>
   107e0:	mov	r0, r4
   107e4:	bl	106fc <getc@plt>
   107e8:	mov	r6, r0
   107ec:	mov	r0, r4
   107f0:	bl	106fc <getc@plt>
   107f4:	mov	r7, r0
   107f8:	mov	r0, r4
   107fc:	bl	106fc <getc@plt>
   10800:	lsl	sl, r0, #16
   10804:	mov	r0, r4
   10808:	bl	106fc <getc@plt>
   1080c:	orr	sl, sl, r7, lsl #8
   10810:	orr	sl, sl, r6
   10814:	orr	sl, sl, r0, lsl #24
   10818:	ldr	r0, [pc, #612]	; 10a84 <main@@Base+0x37c>
   1081c:	mov	r1, sl
   10820:	add	r0, pc, r0
   10824:	bl	10684 <printf@plt>
   10828:	mov	r0, r4
   1082c:	bl	106fc <getc@plt>
   10830:	mov	r6, r0
   10834:	mov	r0, r4
   10838:	bl	106fc <getc@plt>
   1083c:	mov	r7, r0
   10840:	mov	r0, r4
   10844:	bl	106fc <getc@plt>
   10848:	lsl	r8, r0, #16
   1084c:	mov	r0, r4
   10850:	bl	106fc <getc@plt>
   10854:	orr	r8, r8, r7, lsl #8
   10858:	orr	r8, r8, r6
   1085c:	orr	r8, r8, r0, lsl #24
   10860:	ldr	r0, [pc, #544]	; 10a88 <main@@Base+0x380>
   10864:	mov	r1, r8
   10868:	add	r0, pc, r0
   1086c:	bl	10684 <printf@plt>
   10870:	mov	r0, r4
   10874:	bl	106fc <getc@plt>
   10878:	mov	r6, r0
   1087c:	mov	r0, r4
   10880:	bl	106fc <getc@plt>
   10884:	orr	r0, r6, r0, lsl #8
   10888:	cmp	r0, #1
   1088c:	bne	10a64 <main@@Base+0x35c>
   10890:	mov	r0, r4
   10894:	bl	106fc <getc@plt>
   10898:	mov	r6, r0
   1089c:	mov	r0, r4
   108a0:	bl	106fc <getc@plt>
   108a4:	orr	r6, r6, r0, lsl #8
   108a8:	ldr	r0, [pc, #476]	; 10a8c <main@@Base+0x384>
   108ac:	mov	r1, r6
   108b0:	add	r0, pc, r0
   108b4:	bl	10684 <printf@plt>
   108b8:	cmp	r6, #24
   108bc:	bne	10a50 <main@@Base+0x348>
   108c0:	mov	r1, r5
   108c4:	mov	r2, #0
   108c8:	mov	r0, r4
   108cc:	bl	106e4 <fseek@plt>
   108d0:	lsl	r0, r8, #2
   108d4:	bl	106a8 <malloc@plt>
   108d8:	cmp	r8, #0
   108dc:	str	r0, [sp]
   108e0:	ble	109fc <main@@Base+0x2f4>
   108e4:	sub	r3, r0, #4
   108e8:	lsl	r9, sl, #1
   108ec:	str	r3, [sp, #4]
   108f0:	add	r5, r9, sl
   108f4:	mov	r6, r3
   108f8:	mov	r7, #0
   108fc:	b	10904 <main@@Base+0x1fc>
   10900:	mov	r7, r3
   10904:	mov	r0, r5
   10908:	bl	106a8 <malloc@plt>
   1090c:	add	r3, r7, #1
   10910:	cmp	r8, r3
   10914:	str	r0, [r6, #4]!
   10918:	bne	10900 <main@@Base+0x1f8>
   1091c:	ldr	r3, [sp]
   10920:	add	r6, r9, sl
   10924:	add	r5, r3, r7, lsl #2
   10928:	cmp	sl, #0
   1092c:	movgt	r9, #0
   10930:	ble	10978 <main@@Base+0x270>
   10934:	ldr	r2, [r5]
   10938:	mov	r0, r4
   1093c:	add	fp, r2, r9
   10940:	bl	106fc <getc@plt>
   10944:	strb	r0, [fp, #2]
   10948:	ldr	r2, [r5]
   1094c:	mov	r0, r4
   10950:	add	fp, r2, r9
   10954:	bl	106fc <getc@plt>
   10958:	strb	r0, [fp, #1]
   1095c:	mov	r0, r4
   10960:	ldr	fp, [r5]
   10964:	bl	106fc <getc@plt>
   10968:	strb	r0, [fp, r9]
   1096c:	add	r9, r9, #3
   10970:	cmp	r6, r9
   10974:	bne	10934 <main@@Base+0x22c>
   10978:	sub	r7, r7, #1
   1097c:	cmn	r7, #1
   10980:	sub	r5, r5, #4
   10984:	bne	10928 <main@@Base+0x220>
   10988:	mov	r0, r4
   1098c:	bl	106d8 <fclose@plt>
   10990:	ldr	r4, [sp]
   10994:	mov	r2, #0
   10998:	mov	r1, r2
   1099c:	mov	r0, r4
   109a0:	bl	10bc8 <print_pixelinfo@@Base>
   109a4:	mov	r2, #0
   109a8:	mov	r1, #532	; 0x214
   109ac:	mov	r0, r4
   109b0:	bl	10bc8 <print_pixelinfo@@Base>
   109b4:	ldr	r2, [pc, #212]	; 10a90 <main@@Base+0x388>
   109b8:	mov	r1, #408	; 0x198
   109bc:	mov	r0, r4
   109c0:	bl	10bc8 <print_pixelinfo@@Base>
   109c4:	cmp	r8, #0
   109c8:	ble	109e8 <main@@Base+0x2e0>
   109cc:	ldr	r9, [sp, #4]
   109d0:	mov	r4, #0
   109d4:	add	r4, r4, #1
   109d8:	ldr	r0, [r9, #4]!
   109dc:	bl	1069c <free@plt>
   109e0:	cmp	r8, r4
   109e4:	bgt	109d4 <main@@Base+0x2cc>
   109e8:	ldr	r0, [sp]
   109ec:	bl	1069c <free@plt>
   109f0:	mov	r0, #0
   109f4:	add	sp, sp, #12
   109f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   109fc:	mov	r0, r4
   10a00:	bl	106d8 <fclose@plt>
   10a04:	ldr	r4, [sp]
   10a08:	mov	r2, #0
   10a0c:	mov	r1, r2
   10a10:	mov	r0, r4
   10a14:	bl	10bc8 <print_pixelinfo@@Base>
   10a18:	mov	r0, r4
   10a1c:	mov	r2, #0
   10a20:	mov	r1, #532	; 0x214
   10a24:	bl	10bc8 <print_pixelinfo@@Base>
   10a28:	ldr	r2, [pc, #96]	; 10a90 <main@@Base+0x388>
   10a2c:	mov	r1, #408	; 0x198
   10a30:	mov	r0, r4
   10a34:	bl	10bc8 <print_pixelinfo@@Base>
   10a38:	b	109e8 <main@@Base+0x2e0>
   10a3c:	ldr	r0, [pc, #80]	; 10a94 <main@@Base+0x38c>
   10a40:	add	r0, pc, r0
   10a44:	bl	10684 <printf@plt>
   10a48:	mov	r0, #1
   10a4c:	bl	106cc <exit@plt>
   10a50:	ldr	r0, [pc, #64]	; 10a98 <main@@Base+0x390>
   10a54:	add	r0, pc, r0
   10a58:	bl	10684 <printf@plt>
   10a5c:	mov	r0, #3
   10a60:	bl	106cc <exit@plt>
   10a64:	ldr	r0, [pc, #48]	; 10a9c <main@@Base+0x394>
   10a68:	add	r0, pc, r0
   10a6c:	bl	10684 <printf@plt>
   10a70:	mov	r0, #2
   10a74:	bl	106cc <exit@plt>
   10a78:	andeq	r0, r0, r4, lsl #11
   10a7c:	andeq	r0, r0, r0, lsl #11
   10a80:	andeq	r0, r0, r0, ror r5
   10a84:	strdeq	r0, [r0], -r4
   10a88:	andeq	r0, r0, r4, asr #9
   10a8c:	strdeq	r0, [r0], -r4
   10a90:			; <UNDEFINED> instruction: 0x000001bb
   10a94:	andeq	r0, r0, r4, ror r2
   10a98:	andeq	r0, r0, r4, ror #6
   10a9c:	ldrdeq	r0, [r0], -ip

00010aa0 <_start@@Base>:
   10aa0:	mov	fp, #0
   10aa4:	mov	lr, #0
   10aa8:	pop	{r1}		; (ldr r1, [sp], #4)
   10aac:	mov	r2, sp
   10ab0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ab4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ab8:	ldr	ip, [pc, #16]	; 10ad0 <_start@@Base+0x30>
   10abc:	push	{ip}		; (str ip, [sp, #-4]!)
   10ac0:	ldr	r0, [pc, #12]	; 10ad4 <_start@@Base+0x34>
   10ac4:	ldr	r3, [pc, #12]	; 10ad8 <_start@@Base+0x38>
   10ac8:	bl	106b4 <__libc_start_main@plt>
   10acc:	bl	106f0 <abort@plt>
   10ad0:	andeq	r0, r1, r8, ror #24
   10ad4:	andeq	r0, r1, r8, lsl #14
   10ad8:	andeq	r0, r1, r8, lsl #24
   10adc:	ldr	r3, [pc, #20]	; 10af8 <_start@@Base+0x58>
   10ae0:	ldr	r2, [pc, #20]	; 10afc <_start@@Base+0x5c>
   10ae4:	add	r3, pc, r3
   10ae8:	ldr	r2, [r3, r2]
   10aec:	cmp	r2, #0
   10af0:	bxeq	lr
   10af4:	b	106c0 <__gmon_start__@plt>
   10af8:	andeq	r0, r1, r4, lsl r5
   10afc:	andeq	r0, r0, r8, lsr r0
   10b00:	ldr	r3, [pc, #28]	; 10b24 <_start@@Base+0x84>
   10b04:	ldr	r0, [pc, #28]	; 10b28 <_start@@Base+0x88>
   10b08:	sub	r3, r3, r0
   10b0c:	cmp	r3, #6
   10b10:	bxls	lr
   10b14:	ldr	r3, [pc, #16]	; 10b2c <_start@@Base+0x8c>
   10b18:	cmp	r3, #0
   10b1c:	bxeq	lr
   10b20:	bx	r3
   10b24:	andeq	r1, r2, r7, asr #32
   10b28:	andeq	r1, r2, r4, asr #32
   10b2c:	andeq	r0, r0, r0
   10b30:	ldr	r1, [pc, #36]	; 10b5c <_start@@Base+0xbc>
   10b34:	ldr	r0, [pc, #36]	; 10b60 <_start@@Base+0xc0>
   10b38:	sub	r1, r1, r0
   10b3c:	asr	r1, r1, #2
   10b40:	add	r1, r1, r1, lsr #31
   10b44:	asrs	r1, r1, #1
   10b48:	bxeq	lr
   10b4c:	ldr	r3, [pc, #16]	; 10b64 <_start@@Base+0xc4>
   10b50:	cmp	r3, #0
   10b54:	bxeq	lr
   10b58:	bx	r3
   10b5c:	andeq	r1, r2, r4, asr #32
   10b60:	andeq	r1, r2, r4, asr #32
   10b64:	andeq	r0, r0, r0
   10b68:	push	{r4, lr}
   10b6c:	ldr	r4, [pc, #24]	; 10b8c <_start@@Base+0xec>
   10b70:	ldrb	r3, [r4]
   10b74:	cmp	r3, #0
   10b78:	popne	{r4, pc}
   10b7c:	bl	10b00 <_start@@Base+0x60>
   10b80:	mov	r3, #1
   10b84:	strb	r3, [r4]
   10b88:	pop	{r4, pc}
   10b8c:	andeq	r1, r2, r4, asr #32
   10b90:	ldr	r0, [pc, #40]	; 10bc0 <_start@@Base+0x120>
   10b94:	ldr	r3, [r0]
   10b98:	cmp	r3, #0
   10b9c:	bne	10ba4 <_start@@Base+0x104>
   10ba0:	b	10b30 <_start@@Base+0x90>
   10ba4:	ldr	r3, [pc, #24]	; 10bc4 <_start@@Base+0x124>
   10ba8:	cmp	r3, #0
   10bac:	beq	10ba0 <_start@@Base+0x100>
   10bb0:	push	{r4, lr}
   10bb4:	blx	r3
   10bb8:	pop	{r4, lr}
   10bbc:	b	10b30 <_start@@Base+0x90>
   10bc0:	andeq	r0, r2, r4, lsl pc
   10bc4:	andeq	r0, r0, r0

00010bc8 <print_pixelinfo@@Base>:
   10bc8:	ldr	r0, [r0, r1, lsl #2]
   10bcc:	add	r3, r2, r2, lsl #1
   10bd0:	add	ip, r0, r3
   10bd4:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd8:	sub	sp, sp, #12
   10bdc:	ldrb	lr, [ip, #2]
   10be0:	ldrb	r3, [r0, r3]
   10be4:	ldr	r0, [pc, #24]	; 10c04 <print_pixelinfo@@Base+0x3c>
   10be8:	str	lr, [sp, #4]
   10bec:	ldrb	ip, [ip, #1]
   10bf0:	add	r0, pc, r0
   10bf4:	str	ip, [sp]
   10bf8:	bl	10684 <printf@plt>
   10bfc:	add	sp, sp, #12
   10c00:	pop	{pc}		; (ldr pc, [sp], #4)
   10c04:	andeq	r0, r0, r0, lsl #1

00010c08 <__libc_csu_init@@Base>:
   10c08:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c0c:	mov	r7, r0
   10c10:	ldr	r6, [pc, #72]	; 10c60 <__libc_csu_init@@Base+0x58>
   10c14:	ldr	r5, [pc, #72]	; 10c64 <__libc_csu_init@@Base+0x5c>
   10c18:	add	r6, pc, r6
   10c1c:	add	r5, pc, r5
   10c20:	sub	r6, r6, r5
   10c24:	mov	r8, r1
   10c28:	mov	r9, r2
   10c2c:	bl	10664 <printf@plt-0x20>
   10c30:	asrs	r6, r6, #2
   10c34:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c38:	mov	r4, #0
   10c3c:	add	r4, r4, #1
   10c40:	ldr	r3, [r5], #4
   10c44:	mov	r2, r9
   10c48:	mov	r1, r8
   10c4c:	mov	r0, r7
   10c50:	blx	r3
   10c54:	cmp	r6, r4
   10c58:	bne	10c3c <__libc_csu_init@@Base+0x34>
   10c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c60:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10c64:	andeq	r0, r1, r8, ror #5

00010c68 <__libc_csu_fini@@Base>:
   10c68:	bx	lr

Disassembly of section .fini:

00010c6c <.fini>:
   10c6c:	push	{r3, lr}
   10c70:	pop	{r3, pc}
