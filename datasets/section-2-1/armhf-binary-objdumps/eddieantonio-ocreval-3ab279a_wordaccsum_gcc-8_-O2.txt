
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

000106e4 <.init>:
   106e4:	push	{r3, lr}
   106e8:	bl	108ec <abort@plt+0xe0>
   106ec:	pop	{r3, pc}

Disassembly of section .plt:

000106f0 <calloc@plt-0x14>:
   106f0:	push	{lr}		; (str lr, [sp, #-4]!)
   106f4:	ldr	lr, [pc, #4]	; 10700 <calloc@plt-0x4>
   106f8:	add	lr, pc, lr
   106fc:	ldr	pc, [lr, #8]!
   10700:	andeq	r2, r1, r0, lsl #18

00010704 <calloc@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #73728	; 0x12000
   1070c:	ldr	pc, [ip, #2304]!	; 0x900

00010710 <strcmp@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #73728	; 0x12000
   10718:	ldr	pc, [ip, #2296]!	; 0x8f8

0001071c <strtol@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #73728	; 0x12000
   10724:	ldr	pc, [ip, #2288]!	; 0x8f0

00010728 <fopen@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #73728	; 0x12000
   10730:	ldr	pc, [ip, #2280]!	; 0x8e8

00010734 <free@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #73728	; 0x12000
   1073c:	ldr	pc, [ip, #2272]!	; 0x8e0

00010740 <fgets@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #73728	; 0x12000
   10748:	ldr	pc, [ip, #2264]!	; 0x8d8

0001074c <strdup@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #73728	; 0x12000
   10754:	ldr	pc, [ip, #2256]!	; 0x8d0

00010758 <unlink@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #73728	; 0x12000
   10760:	ldr	pc, [ip, #2248]!	; 0x8c8

00010764 <__xstat@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #73728	; 0x12000
   1076c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010770 <fwrite@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #73728	; 0x12000
   10778:	ldr	pc, [ip, #2232]!	; 0x8b8

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #73728	; 0x12000
   10784:	ldr	pc, [ip, #2224]!	; 0x8b0

00010788 <__sysv_signal@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #73728	; 0x12000
   10790:	ldr	pc, [ip, #2216]!	; 0x8a8

00010794 <__gmon_start__@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #73728	; 0x12000
   1079c:	ldr	pc, [ip, #2208]!	; 0x8a0

000107a0 <getpid@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #73728	; 0x12000
   107a8:	ldr	pc, [ip, #2200]!	; 0x898

000107ac <exit@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #73728	; 0x12000
   107b4:	ldr	pc, [ip, #2192]!	; 0x890

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #73728	; 0x12000
   107c0:	ldr	pc, [ip, #2184]!	; 0x888

000107c4 <fprintf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #73728	; 0x12000
   107cc:	ldr	pc, [ip, #2176]!	; 0x880

000107d0 <__isoc99_sscanf@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #73728	; 0x12000
   107d8:	ldr	pc, [ip, #2168]!	; 0x878

000107dc <fclose@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #73728	; 0x12000
   107e4:	ldr	pc, [ip, #2160]!	; 0x870

000107e8 <fputc@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #73728	; 0x12000
   107f0:	ldr	pc, [ip, #2152]!	; 0x868

000107f4 <sprintf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #73728	; 0x12000
   107fc:	ldr	pc, [ip, #2144]!	; 0x860

00010800 <strncmp@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2136]!	; 0x858

0001080c <abort@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2128]!	; 0x850

Disassembly of section .text:

00010818 <error@@Base-0x47c>:
   10818:	ldr	r2, [pc, #128]	; 108a0 <abort@plt+0x94>
   1081c:	mov	r3, #0
   10820:	strd	r4, [sp, #-16]!
   10824:	mov	r5, r1
   10828:	str	r6, [sp, #8]
   1082c:	str	lr, [sp, #12]
   10830:	sub	sp, sp, #8
   10834:	add	r2, pc, r2
   10838:	str	r0, [sp, #4]
   1083c:	add	r0, sp, #4
   10840:	bl	10e78 <error@@Base+0x1e4>
   10844:	ldr	r3, [sp, #4]
   10848:	ldr	r2, [pc, #84]	; 108a4 <abort@plt+0x98>
   1084c:	cmp	r3, #1
   10850:	add	r2, pc, r2
   10854:	ble	10894 <abort@plt+0x88>
   10858:	ldr	r3, [pc, #72]	; 108a8 <abort@plt+0x9c>
   1085c:	sub	r5, r5, #4
   10860:	mov	r4, #0
   10864:	ldr	r6, [r2, r3]
   10868:	mov	r0, r6
   1086c:	add	r4, r4, #1
   10870:	ldr	r1, [r5, #4]!
   10874:	bl	11810 <error@@Base+0xb7c>
   10878:	ldr	r3, [sp, #4]
   1087c:	cmp	r3, r4
   10880:	bgt	10868 <abort@plt+0x5c>
   10884:	mov	r0, r6
   10888:	mov	r1, #0
   1088c:	bl	119d8 <error@@Base+0xd44>
   10890:	bl	10c18 <abort@plt+0x40c>
   10894:	ldr	r0, [pc, #16]	; 108ac <abort@plt+0xa0>
   10898:	add	r0, pc, r0
   1089c:	bl	10c94 <error@@Base>
   108a0:	andeq	r1, r0, r4, lsr fp
   108a4:	andeq	r2, r1, r8, lsr #15
   108a8:	andeq	r0, r0, ip, ror r0
   108ac:	andeq	r1, r0, r4, lsl #22
   108b0:	mov	fp, #0
   108b4:	mov	lr, #0
   108b8:	pop	{r1}		; (ldr r1, [sp], #4)
   108bc:	mov	r2, sp
   108c0:	push	{r2}		; (str r2, [sp, #-4]!)
   108c4:	push	{r0}		; (str r0, [sp, #-4]!)
   108c8:	ldr	ip, [pc, #16]	; 108e0 <abort@plt+0xd4>
   108cc:	push	{ip}		; (str ip, [sp, #-4]!)
   108d0:	ldr	r0, [pc, #12]	; 108e4 <abort@plt+0xd8>
   108d4:	ldr	r3, [pc, #12]	; 108e8 <abort@plt+0xdc>
   108d8:	bl	1077c <__libc_start_main@plt>
   108dc:	bl	1080c <abort@plt>
   108e0:	andeq	r2, r1, r0, ror #6
   108e4:	andeq	r0, r1, r8, lsl r8
   108e8:	andeq	r2, r1, r0, lsl #6
   108ec:	ldr	r3, [pc, #20]	; 10908 <abort@plt+0xfc>
   108f0:	ldr	r2, [pc, #20]	; 1090c <abort@plt+0x100>
   108f4:	add	r3, pc, r3
   108f8:	ldr	r2, [r3, r2]
   108fc:	cmp	r2, #0
   10900:	bxeq	lr
   10904:	b	10794 <__gmon_start__@plt>
   10908:	andeq	r2, r1, r4, lsl #14
   1090c:	andeq	r0, r0, r4, ror r0
   10910:	ldr	r0, [pc, #24]	; 10930 <abort@plt+0x124>
   10914:	ldr	r3, [pc, #24]	; 10934 <abort@plt+0x128>
   10918:	cmp	r3, r0
   1091c:	bxeq	lr
   10920:	ldr	r3, [pc, #16]	; 10938 <abort@plt+0x12c>
   10924:	cmp	r3, #0
   10928:	bxeq	lr
   1092c:	bx	r3
   10930:	andeq	r3, r2, r0, lsr #1
   10934:	andeq	r3, r2, r0, lsr #1
   10938:	andeq	r0, r0, r0
   1093c:	ldr	r0, [pc, #36]	; 10968 <abort@plt+0x15c>
   10940:	ldr	r1, [pc, #36]	; 1096c <abort@plt+0x160>
   10944:	sub	r1, r1, r0
   10948:	asr	r1, r1, #2
   1094c:	add	r1, r1, r1, lsr #31
   10950:	asrs	r1, r1, #1
   10954:	bxeq	lr
   10958:	ldr	r3, [pc, #16]	; 10970 <abort@plt+0x164>
   1095c:	cmp	r3, #0
   10960:	bxeq	lr
   10964:	bx	r3
   10968:	andeq	r3, r2, r0, lsr #1
   1096c:	andeq	r3, r2, r0, lsr #1
   10970:	andeq	r0, r0, r0
   10974:	push	{r4, lr}
   10978:	ldr	r4, [pc, #24]	; 10998 <abort@plt+0x18c>
   1097c:	ldrb	r3, [r4]
   10980:	cmp	r3, #0
   10984:	popne	{r4, pc}
   10988:	bl	10910 <abort@plt+0x104>
   1098c:	mov	r3, #1
   10990:	strb	r3, [r4]
   10994:	pop	{r4, pc}
   10998:	andeq	r3, r2, r0, lsr #1
   1099c:	b	1093c <abort@plt+0x130>
   109a0:	ldr	r3, [pc, #96]	; 10a08 <abort@plt+0x1fc>
   109a4:	strd	r4, [sp, #-16]!
   109a8:	ldr	r2, [pc, #92]	; 10a0c <abort@plt+0x200>
   109ac:	str	r6, [sp, #8]
   109b0:	mov	r6, r0
   109b4:	str	lr, [sp, #12]
   109b8:	sub	sp, sp, #112	; 0x70
   109bc:	add	r3, pc, r3
   109c0:	add	r4, sp, #12
   109c4:	ldr	r3, [r3, r2]
   109c8:	ldr	r5, [r3]
   109cc:	bl	107a0 <getpid@plt>
   109d0:	ldr	r1, [pc, #56]	; 10a10 <abort@plt+0x204>
   109d4:	mov	r3, r0
   109d8:	mov	r0, r4
   109dc:	str	r6, [sp]
   109e0:	mov	r2, r5
   109e4:	add	r1, pc, r1
   109e8:	bl	107f4 <sprintf@plt>
   109ec:	mov	r0, r4
   109f0:	bl	1074c <strdup@plt>
   109f4:	add	sp, sp, #112	; 0x70
   109f8:	ldrd	r4, [sp]
   109fc:	ldr	r6, [sp, #8]
   10a00:	add	sp, sp, #12
   10a04:	pop	{pc}		; (ldr pc, [sp], #4)
   10a08:	andeq	r2, r1, ip, lsr r6
   10a0c:	andeq	r0, r0, r8, ror r0
   10a10:	ldrdeq	r1, [r0], -r0
   10a14:	ldr	r3, [pc, #116]	; 10a90 <abort@plt+0x284>
   10a18:	mov	r6, r0
   10a1c:	str	r7, [sp, #-8]!
   10a20:	ldr	r2, [pc, #108]	; 10a94 <abort@plt+0x288>
   10a24:	str	lr, [sp, #4]
   10a28:	add	r3, pc, r3
   10a2c:	ldr	r3, [r3, r2]
   10a30:	ldr	r3, [r3]
   10a34:	cmp	r3, #0
   10a38:	beq	10a40 <abort@plt+0x234>
   10a3c:	blx	r3
   10a40:	ldr	r3, [pc, #80]	; 10a98 <abort@plt+0x28c>
   10a44:	add	r3, pc, r3
   10a48:	ldrsh	r2, [r3]
   10a4c:	cmp	r2, #0
   10a50:	ble	10a88 <abort@plt+0x27c>
   10a54:	mov	r5, r3
   10a58:	mov	r4, #1
   10a5c:	mov	r0, r4
   10a60:	add	r4, r4, #1
   10a64:	bl	109a0 <abort@plt+0x194>
   10a68:	mov	r7, r0
   10a6c:	sxth	r4, r4
   10a70:	bl	10758 <unlink@plt>
   10a74:	mov	r0, r7
   10a78:	bl	10734 <free@plt>
   10a7c:	ldrsh	r3, [r5]
   10a80:	cmp	r3, r4
   10a84:	bge	10a5c <abort@plt+0x250>
   10a88:	mov	r0, r6
   10a8c:	bl	107ac <exit@plt>
   10a90:	ldrdeq	r2, [r1], -r0
   10a94:	andeq	r0, r0, r0, lsl #1
   10a98:	andeq	r2, r1, r6, asr r6
   10a9c:	ldrb	r3, [r0]
   10aa0:	ldrb	r2, [r1]
   10aa4:	cmp	r3, #0
   10aa8:	beq	10ad0 <abort@plt+0x2c4>
   10aac:	cmp	r2, r3
   10ab0:	beq	10ac0 <abort@plt+0x2b4>
   10ab4:	b	10adc <abort@plt+0x2d0>
   10ab8:	cmp	r3, r2
   10abc:	bne	10adc <abort@plt+0x2d0>
   10ac0:	ldrb	r3, [r0, #1]!
   10ac4:	ldrb	r2, [r1, #1]!
   10ac8:	cmp	r3, #0
   10acc:	bne	10ab8 <abort@plt+0x2ac>
   10ad0:	cmp	r2, #0
   10ad4:	beq	10aec <abort@plt+0x2e0>
   10ad8:	mov	r3, #0
   10adc:	cmp	r3, r2
   10ae0:	mvncc	r0, #0
   10ae4:	movcs	r0, #1
   10ae8:	bx	lr
   10aec:	mov	r0, r2
   10af0:	bx	lr
   10af4:	ldr	r3, [pc, #48]	; 10b2c <abort@plt+0x320>
   10af8:	ldr	r1, [pc, #48]	; 10b30 <abort@plt+0x324>
   10afc:	add	r3, pc, r3
   10b00:	ldr	r1, [r3, r1]
   10b04:	ldr	r1, [r1]
   10b08:	cmp	r1, r0
   10b0c:	beq	10b28 <abort@plt+0x31c>
   10b10:	ldr	r1, [pc, #28]	; 10b34 <abort@plt+0x328>
   10b14:	ldr	r3, [r3, r1]
   10b18:	ldr	r3, [r3]
   10b1c:	cmp	r3, r0
   10b20:	beq	10b28 <abort@plt+0x31c>
   10b24:	b	107dc <fclose@plt>
   10b28:	bx	lr
   10b2c:	strdeq	r2, [r1], -ip
   10b30:	andeq	r0, r0, r4, lsl #1
   10b34:	andeq	r0, r0, r8, lsl #1
   10b38:	push	{lr}		; (str lr, [sp, #-4]!)
   10b3c:	sub	sp, sp, #92	; 0x5c
   10b40:	mov	r1, r0
   10b44:	mov	r2, sp
   10b48:	mov	r0, #3
   10b4c:	bl	10764 <__xstat@plt>
   10b50:	clz	r0, r0
   10b54:	lsr	r0, r0, #5
   10b58:	add	sp, sp, #92	; 0x5c
   10b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   10b60:	ldr	r2, [pc, #56]	; 10ba0 <abort@plt+0x394>
   10b64:	str	r4, [sp, #-8]!
   10b68:	add	r2, pc, r2
   10b6c:	ldrh	r3, [r2]
   10b70:	str	lr, [sp, #4]
   10b74:	add	r3, r3, #1
   10b78:	sxth	r3, r3
   10b7c:	mov	r0, r3
   10b80:	strh	r3, [r2]
   10b84:	bl	109a0 <abort@plt+0x194>
   10b88:	mov	r4, r0
   10b8c:	bl	10758 <unlink@plt>
   10b90:	mov	r0, r4
   10b94:	ldr	r4, [sp]
   10b98:	add	sp, sp, #4
   10b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   10ba0:	andeq	r2, r1, r2, lsr r5
   10ba4:	str	r4, [sp, #-8]!
   10ba8:	mov	r4, r0
   10bac:	str	lr, [sp, #4]
   10bb0:	bl	107b8 <strlen@plt>
   10bb4:	uxth	r0, r0
   10bb8:	sub	r3, r0, #1
   10bbc:	sxth	r3, r3
   10bc0:	cmp	r3, #0
   10bc4:	blt	10c04 <abort@plt+0x3f8>
   10bc8:	ldrb	r2, [r4, r3]
   10bcc:	cmp	r2, #47	; 0x2f
   10bd0:	beq	10c04 <abort@plt+0x3f8>
   10bd4:	sub	r0, r0, #2
   10bd8:	sxth	r3, r0
   10bdc:	add	r2, r3, #1
   10be0:	add	r2, r4, r2
   10be4:	b	10bf8 <abort@plt+0x3ec>
   10be8:	ldrb	r0, [r2, #-1]!
   10bec:	cmp	r0, #47	; 0x2f
   10bf0:	beq	10c04 <abort@plt+0x3f8>
   10bf4:	mov	r3, r1
   10bf8:	tst	r3, #32768	; 0x8000
   10bfc:	sub	r1, r3, #1
   10c00:	beq	10be8 <abort@plt+0x3dc>
   10c04:	add	r0, r3, #1
   10c08:	add	r0, r4, r0
   10c0c:	ldr	r4, [sp]
   10c10:	add	sp, sp, #4
   10c14:	pop	{pc}		; (ldr pc, [sp], #4)
   10c18:	mov	r0, #0
   10c1c:	str	r4, [sp, #-8]!
   10c20:	str	lr, [sp, #4]
   10c24:	bl	10a14 <abort@plt+0x208>
   10c28:	ldr	r2, [pc, #80]	; 10c80 <abort@plt+0x474>
   10c2c:	str	r4, [sp, #-8]!
   10c30:	ldr	r1, [pc, #76]	; 10c84 <abort@plt+0x478>
   10c34:	str	lr, [sp, #4]
   10c38:	add	r2, pc, r2
   10c3c:	ldr	r1, [r2, r1]
   10c40:	ldr	r1, [r1]
   10c44:	cmp	r1, #0
   10c48:	beq	10c54 <abort@plt+0x448>
   10c4c:	blx	r1
   10c50:	bl	10c18 <abort@plt+0x40c>
   10c54:	mov	r3, r0
   10c58:	ldr	ip, [pc, #40]	; 10c88 <abort@plt+0x47c>
   10c5c:	ldr	r0, [pc, #40]	; 10c8c <abort@plt+0x480>
   10c60:	ldr	r1, [pc, #40]	; 10c90 <abort@plt+0x484>
   10c64:	ldr	ip, [r2, ip]
   10c68:	ldr	r0, [r2, r0]
   10c6c:	add	r1, pc, r1
   10c70:	ldr	r2, [ip]
   10c74:	ldr	r0, [r0]
   10c78:	bl	107c4 <fprintf@plt>
   10c7c:	b	10c50 <abort@plt+0x444>
   10c80:	andeq	r2, r1, r0, asr #7
   10c84:	andeq	r0, r0, ip, rrx
   10c88:	andeq	r0, r0, r8, ror r0
   10c8c:	andeq	r0, r0, r0, ror r0
   10c90:	andeq	r1, r0, r8, asr r7

00010c94 <error@@Base>:
   10c94:	str	r4, [sp, #-8]!
   10c98:	mov	r3, r0
   10c9c:	ldr	r4, [pc, #56]	; 10cdc <error@@Base+0x48>
   10ca0:	str	lr, [sp, #4]
   10ca4:	ldr	r0, [pc, #52]	; 10ce0 <error@@Base+0x4c>
   10ca8:	ldr	r2, [pc, #52]	; 10ce4 <error@@Base+0x50>
   10cac:	add	r4, pc, r4
   10cb0:	ldr	r1, [pc, #48]	; 10ce8 <error@@Base+0x54>
   10cb4:	ldr	ip, [r4, r0]
   10cb8:	ldr	r0, [r4, r2]
   10cbc:	add	r1, pc, r1
   10cc0:	ldr	r2, [ip]
   10cc4:	ldr	r0, [r0]
   10cc8:	bl	107c4 <fprintf@plt>
   10ccc:	ldr	r3, [pc, #24]	; 10cec <error@@Base+0x58>
   10cd0:	ldr	r3, [r4, r3]
   10cd4:	ldr	r0, [r3]
   10cd8:	bl	10a14 <abort@plt+0x208>
   10cdc:	andeq	r2, r1, ip, asr #6
   10ce0:	andeq	r0, r0, r8, ror r0
   10ce4:	andeq	r0, r0, r0, ror r0
   10ce8:	andeq	r1, r0, r8, lsl r7
   10cec:	andeq	r0, r0, ip, lsl #1
   10cf0:	str	r4, [sp, #-8]!
   10cf4:	str	lr, [sp, #4]
   10cf8:	bl	10704 <calloc@plt>
   10cfc:	cmp	r0, #0
   10d00:	beq	10d10 <error@@Base+0x7c>
   10d04:	ldr	r4, [sp]
   10d08:	add	sp, sp, #4
   10d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   10d10:	ldr	r0, [pc, #4]	; 10d1c <error@@Base+0x88>
   10d14:	add	r0, pc, r0
   10d18:	bl	10c94 <error@@Base>
   10d1c:	andeq	r1, r0, r8, asr #13
   10d20:	ldr	r3, [pc, #40]	; 10d50 <error@@Base+0xbc>
   10d24:	add	r3, pc, r3
   10d28:	ldrb	r2, [r3, #2]
   10d2c:	cmp	r2, #0
   10d30:	bxne	lr
   10d34:	ldr	r0, [pc, #24]	; 10d54 <error@@Base+0xc0>
   10d38:	mov	r2, #1
   10d3c:	str	r4, [sp, #-8]!
   10d40:	str	lr, [sp, #4]
   10d44:	strb	r2, [r3, #2]
   10d48:	add	r0, pc, r0
   10d4c:	bl	10c94 <error@@Base>
   10d50:	andeq	r2, r1, r6, ror r3
   10d54:			; <UNDEFINED> instruction: 0x000016b0
   10d58:	ldr	r4, [pc, #68]	; 10da4 <error@@Base+0x110>
   10d5c:	mov	r3, r0
   10d60:	push	{lr}		; (str lr, [sp, #-4]!)
   10d64:	sub	sp, sp, #12
   10d68:	ldr	r0, [pc, #56]	; 10da8 <error@@Base+0x114>
   10d6c:	ldr	r2, [pc, #56]	; 10dac <error@@Base+0x118>
   10d70:	add	r4, pc, r4
   10d74:	ldr	ip, [r4, r0]
   10d78:	ldr	r0, [r4, r2]
   10d7c:	str	r1, [sp]
   10d80:	ldr	r1, [pc, #40]	; 10db0 <error@@Base+0x11c>
   10d84:	ldr	r2, [ip]
   10d88:	ldr	r0, [r0]
   10d8c:	add	r1, pc, r1
   10d90:	bl	107c4 <fprintf@plt>
   10d94:	ldr	r3, [pc, #24]	; 10db4 <error@@Base+0x120>
   10d98:	ldr	r3, [r4, r3]
   10d9c:	ldr	r0, [r3]
   10da0:	bl	10a14 <abort@plt+0x208>
   10da4:	andeq	r2, r1, r8, lsl #5
   10da8:	andeq	r0, r0, r8, ror r0
   10dac:	andeq	r0, r0, r0, ror r0
   10db0:	andeq	r1, r0, ip, ror r6
   10db4:	andeq	r0, r0, ip, lsl #1
   10db8:	ldr	ip, [pc, #164]	; 10e64 <error@@Base+0x1d0>
   10dbc:	subs	r2, r0, #0
   10dc0:	strd	r4, [sp, #-16]!
   10dc4:	mov	r4, r1
   10dc8:	str	r6, [sp, #8]
   10dcc:	str	lr, [sp, #12]
   10dd0:	add	ip, pc, ip
   10dd4:	beq	10e14 <error@@Base+0x180>
   10dd8:	mov	r5, r2
   10ddc:	bl	10728 <fopen@plt>
   10de0:	cmp	r0, #0
   10de4:	beq	10df8 <error@@Base+0x164>
   10de8:	ldrd	r4, [sp]
   10dec:	ldr	r6, [sp, #8]
   10df0:	add	sp, sp, #12
   10df4:	pop	{pc}		; (ldr pc, [sp], #4)
   10df8:	ldrb	r3, [r4]
   10dfc:	mov	r1, r5
   10e00:	cmp	r3, #119	; 0x77
   10e04:	beq	10e3c <error@@Base+0x1a8>
   10e08:	ldr	r0, [pc, #88]	; 10e68 <error@@Base+0x1d4>
   10e0c:	add	r0, pc, r0
   10e10:	bl	10d58 <error@@Base+0xc4>
   10e14:	ldrb	r3, [r1]
   10e18:	cmp	r3, #114	; 0x72
   10e1c:	beq	10e48 <error@@Base+0x1b4>
   10e20:	ldr	r3, [pc, #68]	; 10e6c <error@@Base+0x1d8>
   10e24:	ldrd	r4, [sp]
   10e28:	ldr	r6, [sp, #8]
   10e2c:	add	sp, sp, #12
   10e30:	ldr	r3, [ip, r3]
   10e34:	ldr	r0, [r3]
   10e38:	pop	{pc}		; (ldr pc, [sp], #4)
   10e3c:	ldr	r0, [pc, #44]	; 10e70 <error@@Base+0x1dc>
   10e40:	add	r0, pc, r0
   10e44:	bl	10d58 <error@@Base+0xc4>
   10e48:	ldr	r3, [pc, #36]	; 10e74 <error@@Base+0x1e0>
   10e4c:	ldrd	r4, [sp]
   10e50:	ldr	r6, [sp, #8]
   10e54:	add	sp, sp, #12
   10e58:	ldr	r3, [ip, r3]
   10e5c:	ldr	r0, [r3]
   10e60:	pop	{pc}		; (ldr pc, [sp], #4)
   10e64:	andeq	r2, r1, r8, lsr #4
   10e68:	andeq	r1, r0, r4, lsr #12
   10e6c:	andeq	r0, r0, r8, lsl #1
   10e70:	ldrdeq	r1, [r0], -r8
   10e74:	andeq	r0, r0, r4, lsl #1
   10e78:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10e7c:	strd	r6, [sp, #8]
   10e80:	mov	r6, r0
   10e84:	strd	r8, [sp, #16]
   10e88:	mov	r9, r1
   10e8c:	mov	r8, r3
   10e90:	strd	sl, [sp, #24]
   10e94:	str	lr, [sp, #32]
   10e98:	sub	sp, sp, #20
   10e9c:	ldr	r5, [pc, #600]	; 110fc <error@@Base+0x468>
   10ea0:	str	r0, [sp]
   10ea4:	ldr	r0, [r1]
   10ea8:	str	r2, [sp, #12]
   10eac:	bl	10ba4 <abort@plt+0x398>
   10eb0:	ldr	r3, [pc, #584]	; 11100 <error@@Base+0x46c>
   10eb4:	add	r5, pc, r5
   10eb8:	ldr	r4, [pc, #580]	; 11104 <error@@Base+0x470>
   10ebc:	ldr	r3, [r5, r3]
   10ec0:	add	r4, pc, r4
   10ec4:	mov	r1, r4
   10ec8:	str	r0, [r3]
   10ecc:	mov	r0, #2
   10ed0:	bl	10788 <__sysv_signal@plt>
   10ed4:	mov	r1, r4
   10ed8:	mov	r0, #15
   10edc:	bl	10788 <__sysv_signal@plt>
   10ee0:	ldr	sl, [r6]
   10ee4:	cmp	sl, #1
   10ee8:	beq	110c0 <error@@Base+0x42c>
   10eec:	movle	r6, #0
   10ef0:	ble	11048 <error@@Base+0x3b4>
   10ef4:	ldr	r3, [pc, #524]	; 11108 <error@@Base+0x474>
   10ef8:	mov	r7, #1
   10efc:	mov	r6, #0
   10f00:	mov	r4, r7
   10f04:	add	r3, pc, r3
   10f08:	str	r3, [sp, #8]
   10f0c:	mov	r3, sl
   10f10:	mov	sl, r9
   10f14:	b	10f38 <error@@Base+0x2a4>
   10f18:	add	r4, r4, #1
   10f1c:	add	r2, r6, #1
   10f20:	str	r5, [sl, r6, lsl #2]
   10f24:	sxth	r4, r4
   10f28:	sxth	r6, r2
   10f2c:	cmp	r4, r3
   10f30:	mov	r7, r4
   10f34:	bge	11048 <error@@Base+0x3b4>
   10f38:	ldr	r5, [sl, r4, lsl #2]
   10f3c:	lsl	r9, r4, #2
   10f40:	ldrb	r2, [r5]
   10f44:	cmp	r2, #45	; 0x2d
   10f48:	bne	10f18 <error@@Base+0x284>
   10f4c:	ldrb	fp, [r5, #1]
   10f50:	cmp	fp, #0
   10f54:	beq	10f18 <error@@Base+0x284>
   10f58:	mov	r0, r5
   10f5c:	str	r3, [sp, #4]
   10f60:	bl	107b8 <strlen@plt>
   10f64:	mov	r2, r0
   10f68:	mov	r1, r5
   10f6c:	ldr	r0, [sp, #8]
   10f70:	bl	10800 <strncmp@plt>
   10f74:	cmp	r0, #0
   10f78:	beq	110d4 <error@@Base+0x440>
   10f7c:	ldr	r3, [sp, #4]
   10f80:	add	r7, r7, #1
   10f84:	cmp	r7, r3
   10f88:	addlt	r9, sl, r9
   10f8c:	movge	r0, #0
   10f90:	ldrlt	r0, [r9, #4]
   10f94:	cmp	r8, #0
   10f98:	beq	10fdc <error@@Base+0x348>
   10f9c:	ldrb	r2, [r8]
   10fa0:	cmp	r2, #0
   10fa4:	beq	10fdc <error@@Base+0x348>
   10fa8:	cmp	fp, r2
   10fac:	beq	10fec <error@@Base+0x358>
   10fb0:	mov	r2, #0
   10fb4:	b	10fc0 <error@@Base+0x32c>
   10fb8:	cmp	fp, ip
   10fbc:	beq	10ff0 <error@@Base+0x35c>
   10fc0:	add	r2, r2, #1
   10fc4:	sxth	r2, r2
   10fc8:	add	r1, r2, r2, lsl #1
   10fcc:	ldrb	ip, [r8, r1, lsl #2]
   10fd0:	add	r1, r8, r1, lsl #2
   10fd4:	cmp	ip, #0
   10fd8:	bne	10fb8 <error@@Base+0x324>
   10fdc:	ldr	r0, [pc, #296]	; 1110c <error@@Base+0x478>
   10fe0:	mov	r1, r5
   10fe4:	add	r0, pc, r0
   10fe8:	bl	10d58 <error@@Base+0xc4>
   10fec:	mov	r1, r8
   10ff0:	ldr	r2, [r1, #4]
   10ff4:	cmp	r2, #0
   10ff8:	beq	11080 <error@@Base+0x3ec>
   10ffc:	ldrb	ip, [r5, #2]
   11000:	cmp	ip, #0
   11004:	bne	1106c <error@@Base+0x3d8>
   11008:	cmp	r0, #0
   1100c:	beq	110dc <error@@Base+0x448>
   11010:	ldr	r1, [r2]
   11014:	cmp	r1, #0
   11018:	bne	110ec <error@@Base+0x458>
   1101c:	str	r0, [r2]
   11020:	uxth	r2, r4
   11024:	ldrb	r1, [r5, #2]
   11028:	add	r4, r2, #1
   1102c:	sxth	r4, r4
   11030:	cmp	r1, #0
   11034:	addeq	r4, r2, #2
   11038:	sxtheq	r4, r4
   1103c:	cmp	r4, r3
   11040:	mov	r7, r4
   11044:	blt	10f38 <error@@Base+0x2a4>
   11048:	ldr	r3, [sp]
   1104c:	str	r6, [r3]
   11050:	add	sp, sp, #20
   11054:	ldrd	r4, [sp]
   11058:	ldrd	r6, [sp, #8]
   1105c:	ldrd	r8, [sp, #16]
   11060:	ldrd	sl, [sp, #24]
   11064:	add	sp, sp, #32
   11068:	pop	{pc}		; (ldr pc, [sp], #4)
   1106c:	ldr	r1, [r2]
   11070:	cmp	r1, #0
   11074:	bne	110ec <error@@Base+0x458>
   11078:	add	r0, r5, #2
   1107c:	b	1101c <error@@Base+0x388>
   11080:	ldr	r3, [r1, #8]
   11084:	cmp	r3, #0
   11088:	beq	10fdc <error@@Base+0x348>
   1108c:	ldrb	r2, [r5, #2]
   11090:	cmp	r2, #0
   11094:	bne	10fdc <error@@Base+0x348>
   11098:	ldrb	r2, [r3]
   1109c:	cmp	r2, #0
   110a0:	bne	110ec <error@@Base+0x458>
   110a4:	mov	r2, #1
   110a8:	add	r4, r4, #1
   110ac:	sxth	r4, r4
   110b0:	strb	r2, [r3]
   110b4:	ldr	r3, [sp]
   110b8:	ldr	r3, [r3]
   110bc:	b	10f2c <error@@Base+0x298>
   110c0:	ldr	r3, [pc, #72]	; 11110 <error@@Base+0x47c>
   110c4:	ldr	r3, [r5, r3]
   110c8:	ldrb	r6, [r3]
   110cc:	cmp	r6, #0
   110d0:	beq	11048 <error@@Base+0x3b4>
   110d4:	ldr	r0, [sp, #12]
   110d8:	bl	10c28 <abort@plt+0x41c>
   110dc:	ldr	r3, [r1, #8]
   110e0:	cmp	r3, #0
   110e4:	bne	11098 <error@@Base+0x404>
   110e8:	b	10fdc <error@@Base+0x348>
   110ec:	ldr	r0, [pc, #32]	; 11114 <error@@Base+0x480>
   110f0:	mov	r1, r5
   110f4:	add	r0, pc, r0
   110f8:	bl	10d58 <error@@Base+0xc4>
   110fc:	andeq	r2, r1, r4, asr #2
   11100:	andeq	r0, r0, r8, ror r0
   11104:			; <UNDEFINED> instruction: 0xfffffe58
   11108:	andeq	r1, r0, r0, asr #10
   1110c:	andeq	r1, r0, r8, ror #8
   11110:	andeq	r0, r0, r8, rrx
   11114:	andeq	r1, r0, r8, ror #6
   11118:	ldr	r2, [pc, #60]	; 1115c <error@@Base+0x4c8>
   1111c:	mov	r3, r0
   11120:	push	{lr}		; (str lr, [sp, #-4]!)
   11124:	sub	sp, sp, #12
   11128:	ldr	ip, [pc, #48]	; 11160 <error@@Base+0x4cc>
   1112c:	ldr	r0, [pc, #48]	; 11164 <error@@Base+0x4d0>
   11130:	add	r2, pc, r2
   11134:	ldr	ip, [r2, ip]
   11138:	ldr	r0, [r2, r0]
   1113c:	str	r1, [sp]
   11140:	ldr	r1, [pc, #32]	; 11168 <error@@Base+0x4d4>
   11144:	ldr	r2, [ip]
   11148:	ldr	r0, [r0]
   1114c:	add	r1, pc, r1
   11150:	bl	107c4 <fprintf@plt>
   11154:	add	sp, sp, #12
   11158:	pop	{pc}		; (ldr pc, [sp], #4)
   1115c:	andeq	r1, r1, r8, asr #29
   11160:	andeq	r0, r0, r8, ror r0
   11164:	andeq	r0, r0, r0, ror r0
   11168:			; <UNDEFINED> instruction: 0x000012bc
   1116c:	andeq	r0, r0, r0
   11170:	strd	r4, [sp, #-16]!
   11174:	mov	r2, r0
   11178:	mov	r5, r1
   1117c:	ldr	r4, [pc, #76]	; 111d0 <error@@Base+0x53c>
   11180:	mov	r1, #99	; 0x63
   11184:	str	r6, [sp, #8]
   11188:	str	lr, [sp, #12]
   1118c:	add	r4, pc, r4
   11190:	mov	r0, r4
   11194:	bl	10740 <fgets@plt>
   11198:	cmp	r0, #0
   1119c:	beq	111c0 <error@@Base+0x52c>
   111a0:	ldr	r1, [pc, #44]	; 111d4 <error@@Base+0x540>
   111a4:	mov	r2, r5
   111a8:	mov	r0, r4
   111ac:	add	r1, pc, r1
   111b0:	bl	107d0 <__isoc99_sscanf@plt>
   111b4:	sub	r0, r0, #1
   111b8:	clz	r0, r0
   111bc:	lsr	r0, r0, #5
   111c0:	ldrd	r4, [sp]
   111c4:	ldr	r6, [sp, #8]
   111c8:	add	sp, sp, #12
   111cc:	pop	{pc}		; (ldr pc, [sp], #4)
   111d0:	andeq	r1, r1, r4, lsl pc
   111d4:	andeq	r1, r0, r8, asr #5
   111d8:	strd	r4, [sp, #-16]!
   111dc:	mov	r5, r1
   111e0:	mov	r1, #99	; 0x63
   111e4:	ldr	r4, [pc, #84]	; 11240 <error@@Base+0x5ac>
   111e8:	str	r6, [sp, #8]
   111ec:	mov	r6, r2
   111f0:	mov	r2, r0
   111f4:	str	lr, [sp, #12]
   111f8:	add	r4, pc, r4
   111fc:	mov	r0, r4
   11200:	bl	10740 <fgets@plt>
   11204:	cmp	r0, #0
   11208:	beq	11230 <error@@Base+0x59c>
   1120c:	ldr	r1, [pc, #48]	; 11244 <error@@Base+0x5b0>
   11210:	mov	r3, r6
   11214:	mov	r2, r5
   11218:	mov	r0, r4
   1121c:	add	r1, pc, r1
   11220:	bl	107d0 <__isoc99_sscanf@plt>
   11224:	sub	r0, r0, #2
   11228:	clz	r0, r0
   1122c:	lsr	r0, r0, #5
   11230:	ldrd	r4, [sp]
   11234:	ldr	r6, [sp, #8]
   11238:	add	sp, sp, #12
   1123c:	pop	{pc}		; (ldr pc, [sp], #4)
   11240:	andeq	r1, r1, r8, lsr #29
   11244:	andeq	r1, r0, r4, asr r2
   11248:	ldr	r0, [r0, #8]
   1124c:	ldr	r1, [r1, #8]
   11250:	b	10a9c <abort@plt+0x290>
   11254:	subs	ip, r1, #0
   11258:	mov	r3, r0
   1125c:	bne	11274 <error@@Base+0x5e0>
   11260:	ldr	r0, [pc, #72]	; 112b0 <error@@Base+0x61c>
   11264:	mov	r2, #8
   11268:	mov	r1, #1
   1126c:	add	r0, pc, r0
   11270:	b	10770 <fwrite@plt>
   11274:	ldr	r3, [r2]
   11278:	vmov	s15, ip
   1127c:	vldr	d5, [pc, #36]	; 112a8 <error@@Base+0x614>
   11280:	ldr	r1, [pc, #44]	; 112b4 <error@@Base+0x620>
   11284:	sub	r3, ip, r3
   11288:	vmov	s14, r3
   1128c:	add	r1, pc, r1
   11290:	vcvt.f64.s32	d6, s15
   11294:	vcvt.f64.s32	d7, s14
   11298:	vmul.f64	d7, d7, d5
   1129c:	vdiv.f64	d7, d7, d6
   112a0:	vmov	r2, r3, d7
   112a4:	b	107c4 <fprintf@plt>
   112a8:	andeq	r0, r0, r0
   112ac:	subsmi	r0, r9, r0
   112b0:	andeq	r1, r0, ip, lsl #4
   112b4:	strdeq	r1, [r0], -r8
   112b8:	strd	r4, [sp, #-16]!
   112bc:	subs	r4, r1, #0
   112c0:	mov	r5, r0
   112c4:	str	r6, [sp, #8]
   112c8:	str	lr, [sp, #12]
   112cc:	beq	11318 <error@@Base+0x684>
   112d0:	ldr	r1, [pc, #92]	; 11334 <error@@Base+0x6a0>
   112d4:	ldrd	r2, [r4]
   112d8:	add	r1, pc, r1
   112dc:	bl	107c4 <fprintf@plt>
   112e0:	mov	r2, r4
   112e4:	mov	r0, r5
   112e8:	ldr	r1, [r2], #4
   112ec:	bl	11254 <error@@Base+0x5c0>
   112f0:	ldr	r0, [pc, #64]	; 11338 <error@@Base+0x6a4>
   112f4:	mov	r3, r5
   112f8:	mov	r2, #3
   112fc:	mov	r1, #1
   11300:	ldrd	r4, [sp]
   11304:	ldr	r6, [sp, #8]
   11308:	add	r0, pc, r0
   1130c:	ldr	lr, [sp, #12]
   11310:	add	sp, sp, #16
   11314:	b	10770 <fwrite@plt>
   11318:	mov	r3, r0
   1131c:	ldr	r0, [pc, #24]	; 1133c <error@@Base+0x6a8>
   11320:	mov	r2, #26
   11324:	mov	r1, #1
   11328:	add	r0, pc, r0
   1132c:	bl	10770 <fwrite@plt>
   11330:	b	112f0 <error@@Base+0x65c>
   11334:			; <UNDEFINED> instruction: 0x000011b4
   11338:	andeq	r1, r0, ip, lsr #3
   1133c:	andeq	r1, r0, r0, ror r1
   11340:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11344:	mov	r5, r1
   11348:	ldr	r1, [pc, #340]	; 114a4 <error@@Base+0x810>
   1134c:	strd	r6, [sp, #8]
   11350:	mov	r6, r0
   11354:	strd	r8, [sp, #16]
   11358:	mov	r9, r2
   1135c:	mov	r2, r3
   11360:	strd	sl, [sp, #24]
   11364:	str	lr, [sp, #32]
   11368:	sub	sp, sp, #4
   1136c:	ldrb	r8, [sp, #40]	; 0x28
   11370:	add	r1, pc, r1
   11374:	ldrb	sl, [sp, #44]	; 0x2c
   11378:	bl	107c4 <fprintf@plt>
   1137c:	mov	r0, r6
   11380:	mov	r1, #0
   11384:	bl	112b8 <error@@Base+0x624>
   11388:	cmp	r8, #0
   1138c:	bne	11434 <error@@Base+0x7a0>
   11390:	ldr	r2, [pc, #272]	; 114a8 <error@@Base+0x814>
   11394:	add	r2, pc, r2
   11398:	ldr	r1, [pc, #268]	; 114ac <error@@Base+0x818>
   1139c:	sub	fp, r9, #1
   113a0:	mov	r0, r6
   113a4:	uxth	fp, fp
   113a8:	mov	r4, #1
   113ac:	ldr	r7, [pc, #252]	; 114b0 <error@@Base+0x81c>
   113b0:	add	fp, fp, #2
   113b4:	add	r1, pc, r1
   113b8:	bl	107c4 <fprintf@plt>
   113bc:	add	r7, pc, r7
   113c0:	ldr	r3, [r5, r4, lsl #3]
   113c4:	mov	r0, r6
   113c8:	add	r1, r5, r4, lsl #3
   113cc:	cmp	r3, #0
   113d0:	ble	113e8 <error@@Base+0x754>
   113d4:	bl	112b8 <error@@Base+0x624>
   113d8:	mov	r2, r4
   113dc:	mov	r1, r7
   113e0:	mov	r0, r6
   113e4:	bl	107c4 <fprintf@plt>
   113e8:	add	r4, r4, #1
   113ec:	cmp	fp, r4
   113f0:	bne	113c0 <error@@Base+0x72c>
   113f4:	cmp	r8, #0
   113f8:	beq	11410 <error@@Base+0x77c>
   113fc:	add	r1, r9, #1
   11400:	ldr	r3, [r5, r1, lsl #3]
   11404:	add	r1, r5, r1, lsl #3
   11408:	cmp	r3, #0
   1140c:	bgt	11440 <error@@Base+0x7ac>
   11410:	cmp	sl, #0
   11414:	bne	11464 <error@@Base+0x7d0>
   11418:	add	sp, sp, #4
   1141c:	ldrd	r4, [sp]
   11420:	ldrd	r6, [sp, #8]
   11424:	ldrd	r8, [sp, #16]
   11428:	ldrd	sl, [sp, #24]
   1142c:	add	sp, sp, #32
   11430:	pop	{pc}		; (ldr pc, [sp], #4)
   11434:	ldr	r2, [pc, #120]	; 114b4 <error@@Base+0x820>
   11438:	add	r2, pc, r2
   1143c:	b	11398 <error@@Base+0x704>
   11440:	mov	r0, r6
   11444:	bl	112b8 <error@@Base+0x624>
   11448:	ldr	r1, [pc, #104]	; 114b8 <error@@Base+0x824>
   1144c:	mov	r2, r9
   11450:	mov	r0, r6
   11454:	add	r1, pc, r1
   11458:	bl	107c4 <fprintf@plt>
   1145c:	cmp	sl, #0
   11460:	beq	11418 <error@@Base+0x784>
   11464:	mov	r1, r5
   11468:	mov	r0, r6
   1146c:	bl	112b8 <error@@Base+0x624>
   11470:	ldr	r0, [pc, #68]	; 114bc <error@@Base+0x828>
   11474:	mov	r3, r6
   11478:	mov	r2, #7
   1147c:	mov	r1, #1
   11480:	add	r0, pc, r0
   11484:	add	sp, sp, #4
   11488:	ldrd	r4, [sp]
   1148c:	ldrd	r6, [sp, #8]
   11490:	ldrd	r8, [sp, #16]
   11494:	ldrd	sl, [sp, #24]
   11498:	ldr	lr, [sp, #32]
   1149c:	add	sp, sp, #36	; 0x24
   114a0:	b	10770 <fwrite@plt>
   114a4:	andeq	r1, r0, r8, asr r1
   114a8:	andeq	r1, r0, ip, lsr #2
   114ac:	andeq	r1, r0, r4, lsr #32
   114b0:	andeq	r1, r0, r4, lsl r1
   114b4:	andeq	r1, r0, r0, lsl #1
   114b8:	andeq	r1, r0, r8, lsl #1
   114bc:	andeq	r1, r0, r8, rrx
   114c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   114c4:	add	r5, r1, #4096	; 0x1000
   114c8:	mov	r4, r2
   114cc:	strd	r6, [sp, #8]
   114d0:	mov	r6, r0
   114d4:	mov	r0, r1
   114d8:	str	r8, [sp, #16]
   114dc:	str	lr, [sp, #20]
   114e0:	bl	11f60 <error@@Base+0x12cc>
   114e4:	ldr	r2, [pc, #160]	; 1158c <error@@Base+0x8f8>
   114e8:	ldr	r1, [r5, #3952]	; 0xf70
   114ec:	ldr	r0, [r5, #3956]	; 0xf74
   114f0:	add	r2, pc, r2
   114f4:	bl	11d4c <error@@Base+0x10b8>
   114f8:	ldr	r1, [pc, #144]	; 11590 <error@@Base+0x8fc>
   114fc:	mov	r2, r4
   11500:	mov	r0, r6
   11504:	add	r1, pc, r1
   11508:	bl	107c4 <fprintf@plt>
   1150c:	mov	r0, r6
   11510:	mov	r1, #0
   11514:	bl	112b8 <error@@Base+0x624>
   11518:	mov	r1, r6
   1151c:	mov	r0, #10
   11520:	bl	107e8 <fputc@plt>
   11524:	ldr	r3, [r5, #3956]	; 0xf74
   11528:	cmp	r3, #0
   1152c:	ble	11578 <error@@Base+0x8e4>
   11530:	ldr	r7, [pc, #92]	; 11594 <error@@Base+0x900>
   11534:	mov	r4, #0
   11538:	add	r7, pc, r7
   1153c:	ldr	r3, [r5, #3952]	; 0xf70
   11540:	mov	r0, r6
   11544:	ldr	r1, [r3, r4, lsl #2]
   11548:	add	r1, r1, #12
   1154c:	bl	112b8 <error@@Base+0x624>
   11550:	ldr	r3, [r5, #3952]	; 0xf70
   11554:	mov	r1, r7
   11558:	mov	r0, r6
   1155c:	ldr	r3, [r3, r4, lsl #2]
   11560:	add	r4, r4, #1
   11564:	ldr	r2, [r3, #8]
   11568:	bl	107c4 <fprintf@plt>
   1156c:	ldr	r3, [r5, #3956]	; 0xf74
   11570:	cmp	r3, r4
   11574:	bgt	1153c <error@@Base+0x8a8>
   11578:	ldrd	r4, [sp]
   1157c:	ldrd	r6, [sp, #8]
   11580:	ldr	r8, [sp, #16]
   11584:	add	sp, sp, #20
   11588:	pop	{pc}		; (ldr pc, [sp], #4)
   1158c:			; <UNDEFINED> instruction: 0xfffffd50
   11590:	andeq	r0, r0, r4, asr #31
   11594:	andeq	r0, r0, r0, lsr #29
   11598:	ldr	ip, [r0]
   1159c:	ldr	r3, [r0, #4]
   115a0:	add	r1, ip, r1
   115a4:	add	r2, r3, r2
   115a8:	stm	r0, {r1, r2}
   115ac:	bx	lr
   115b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   115b4:	mov	r2, r0
   115b8:	mov	r5, r0
   115bc:	ldr	r4, [pc, #244]	; 116b8 <error@@Base+0xa24>
   115c0:	strd	r6, [sp, #8]
   115c4:	mov	r6, r1
   115c8:	mov	r1, #99	; 0x63
   115cc:	strd	r8, [sp, #16]
   115d0:	str	sl, [sp, #24]
   115d4:	str	lr, [sp, #28]
   115d8:	sub	sp, sp, #8
   115dc:	add	r4, pc, r4
   115e0:	mov	r0, r4
   115e4:	bl	10740 <fgets@plt>
   115e8:	cmp	r0, #0
   115ec:	beq	11694 <error@@Base+0xa00>
   115f0:	mov	r0, r4
   115f4:	mov	r2, r5
   115f8:	mov	r1, #99	; 0x63
   115fc:	bl	10740 <fgets@plt>
   11600:	cmp	r0, #0
   11604:	beq	11694 <error@@Base+0xa00>
   11608:	ldr	r4, [pc, #172]	; 116bc <error@@Base+0xa28>
   1160c:	mov	sl, #0
   11610:	add	r8, sp, #4
   11614:	mov	r7, sp
   11618:	ldr	r9, [pc, #160]	; 116c0 <error@@Base+0xa2c>
   1161c:	add	r4, pc, r4
   11620:	add	r4, r4, #29
   11624:	add	r9, pc, r9
   11628:	b	11640 <error@@Base+0x9ac>
   1162c:	ldr	r1, [sp]
   11630:	add	r3, r6, r3, lsl #3
   11634:	mov	r0, r3
   11638:	ldr	r2, [sp, #4]
   1163c:	bl	11598 <error@@Base+0x904>
   11640:	mov	r2, r8
   11644:	mov	r1, r7
   11648:	mov	r0, r5
   1164c:	bl	111d8 <error@@Base+0x544>
   11650:	mov	r1, #0
   11654:	mov	r2, #10
   11658:	cmp	r0, r1
   1165c:	mov	r0, r4
   11660:	beq	11698 <error@@Base+0xa04>
   11664:	bl	1071c <strtol@plt>
   11668:	subs	r3, r0, #0
   1166c:	mov	r1, r9
   11670:	mov	r0, r4
   11674:	bne	1162c <error@@Base+0x998>
   11678:	bl	10710 <strcmp@plt>
   1167c:	ldr	r1, [sp]
   11680:	cmp	r0, #0
   11684:	mov	r3, r6
   11688:	addne	r3, r6, #88	; 0x58
   1168c:	moveq	sl, r1
   11690:	b	11634 <error@@Base+0x9a0>
   11694:	mov	sl, #0
   11698:	mov	r0, sl
   1169c:	add	sp, sp, #8
   116a0:	ldrd	r4, [sp]
   116a4:	ldrd	r6, [sp, #8]
   116a8:	ldrd	r8, [sp, #16]
   116ac:	ldr	sl, [sp, #24]
   116b0:	add	sp, sp, #28
   116b4:	pop	{pc}		; (ldr pc, [sp], #4)
   116b8:	andeq	r1, r1, r4, asr #21
   116bc:	andeq	r1, r1, r4, lsl #21
   116c0:	andeq	r0, r0, r4, asr #29
   116c4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   116c8:	mov	r5, r2
   116cc:	strd	r6, [sp, #8]
   116d0:	mov	r6, r3
   116d4:	mov	r7, r0
   116d8:	str	r8, [sp, #16]
   116dc:	mov	r8, r1
   116e0:	str	lr, [sp, #20]
   116e4:	bl	11dcc <error@@Base+0x1138>
   116e8:	subs	r4, r0, #0
   116ec:	beq	11714 <error@@Base+0xa80>
   116f0:	mov	r2, r6
   116f4:	mov	r1, r5
   116f8:	ldrd	r6, [sp, #8]
   116fc:	add	r0, r4, #12
   11700:	ldrd	r4, [sp]
   11704:	ldr	r8, [sp, #16]
   11708:	ldr	lr, [sp, #20]
   1170c:	add	sp, sp, #24
   11710:	b	11598 <error@@Base+0x904>
   11714:	mov	r1, #20
   11718:	mov	r0, #1
   1171c:	bl	10cf0 <error@@Base+0x5c>
   11720:	mov	r4, r0
   11724:	mov	r0, r8
   11728:	bl	1074c <strdup@plt>
   1172c:	mov	r1, r4
   11730:	str	r0, [r4, #8]
   11734:	mov	r0, r7
   11738:	bl	11e58 <error@@Base+0x11c4>
   1173c:	b	116f0 <error@@Base+0xa5c>
   11740:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11744:	mov	r2, r0
   11748:	mov	r5, r0
   1174c:	ldr	r4, [pc, #180]	; 11808 <error@@Base+0xb74>
   11750:	strd	r6, [sp, #8]
   11754:	mov	r6, r1
   11758:	mov	r1, #99	; 0x63
   1175c:	strd	r8, [sp, #16]
   11760:	str	sl, [sp, #24]
   11764:	str	lr, [sp, #28]
   11768:	sub	sp, sp, #8
   1176c:	add	r4, pc, r4
   11770:	mov	r0, r4
   11774:	bl	10740 <fgets@plt>
   11778:	cmp	r0, #0
   1177c:	beq	117ec <error@@Base+0xb58>
   11780:	mov	r0, r4
   11784:	mov	r2, r5
   11788:	mov	r1, #99	; 0x63
   1178c:	bl	10740 <fgets@plt>
   11790:	cmp	r0, #0
   11794:	beq	117ec <error@@Base+0xb58>
   11798:	ldr	r4, [pc, #108]	; 1180c <error@@Base+0xb78>
   1179c:	add	r8, sp, #4
   117a0:	mov	r7, sp
   117a4:	mov	sl, #0
   117a8:	add	r4, pc, r4
   117ac:	add	r9, r4, #29
   117b0:	b	117d0 <error@@Base+0xb3c>
   117b4:	bl	107b8 <strlen@plt>
   117b8:	add	ip, r4, r0
   117bc:	mov	r1, r9
   117c0:	ldrd	r2, [sp]
   117c4:	mov	r0, r6
   117c8:	strb	sl, [ip, #-1]
   117cc:	bl	116c4 <error@@Base+0xa30>
   117d0:	mov	r2, r8
   117d4:	mov	r1, r7
   117d8:	mov	r0, r5
   117dc:	bl	111d8 <error@@Base+0x544>
   117e0:	cmp	r0, #0
   117e4:	mov	r0, r4
   117e8:	bne	117b4 <error@@Base+0xb20>
   117ec:	add	sp, sp, #8
   117f0:	ldrd	r4, [sp]
   117f4:	ldrd	r6, [sp, #8]
   117f8:	ldrd	r8, [sp, #16]
   117fc:	ldr	sl, [sp, #24]
   11800:	add	sp, sp, #28
   11804:	pop	{pc}		; (ldr pc, [sp], #4)
   11808:	andeq	r1, r1, r4, lsr r9
   1180c:	strdeq	r1, [r1], -r8
   11810:	strd	r4, [sp, #-20]!	; 0xffffffec
   11814:	strd	r6, [sp, #8]
   11818:	mov	r7, r1
   1181c:	mov	r6, r0
   11820:	mov	r0, r1
   11824:	ldr	r1, [pc, #404]	; 119c0 <error@@Base+0xd2c>
   11828:	str	lr, [sp, #16]
   1182c:	sub	sp, sp, #12
   11830:	ldr	r5, [pc, #396]	; 119c4 <error@@Base+0xd30>
   11834:	add	r1, pc, r1
   11838:	bl	10db8 <error@@Base+0x124>
   1183c:	add	r5, pc, r5
   11840:	mov	r2, r0
   11844:	mov	r4, r0
   11848:	mov	r1, #99	; 0x63
   1184c:	mov	r0, r5
   11850:	bl	10740 <fgets@plt>
   11854:	cmp	r0, #0
   11858:	beq	1199c <error@@Base+0xd08>
   1185c:	ldr	r1, [pc, #356]	; 119c8 <error@@Base+0xd34>
   11860:	mov	r2, #45	; 0x2d
   11864:	mov	r0, r5
   11868:	add	r1, pc, r1
   1186c:	bl	10800 <strncmp@plt>
   11870:	cmp	r0, #0
   11874:	bne	1199c <error@@Base+0xd08>
   11878:	mov	r2, r4
   1187c:	mov	r1, #99	; 0x63
   11880:	mov	r0, r5
   11884:	bl	10740 <fgets@plt>
   11888:	cmp	r0, #0
   1188c:	beq	1199c <error@@Base+0xd08>
   11890:	ldr	r1, [pc, #308]	; 119cc <error@@Base+0xd38>
   11894:	mov	r0, r5
   11898:	add	r1, pc, r1
   1189c:	bl	10710 <strcmp@plt>
   118a0:	cmp	r0, #0
   118a4:	bne	1199c <error@@Base+0xd08>
   118a8:	mov	r1, sp
   118ac:	mov	r0, r4
   118b0:	bl	11170 <error@@Base+0x4dc>
   118b4:	cmp	r0, #0
   118b8:	beq	1199c <error@@Base+0xd08>
   118bc:	add	r1, sp, #4
   118c0:	mov	r0, r4
   118c4:	bl	11170 <error@@Base+0x4dc>
   118c8:	cmp	r0, #0
   118cc:	beq	1199c <error@@Base+0xd08>
   118d0:	mov	r2, r4
   118d4:	mov	r1, #99	; 0x63
   118d8:	mov	r0, r5
   118dc:	bl	10740 <fgets@plt>
   118e0:	cmp	r0, #0
   118e4:	beq	1199c <error@@Base+0xd08>
   118e8:	mov	r0, r5
   118ec:	mov	r2, r4
   118f0:	mov	r1, #99	; 0x63
   118f4:	bl	10740 <fgets@plt>
   118f8:	cmp	r0, #0
   118fc:	beq	1199c <error@@Base+0xd08>
   11900:	mov	r0, r6
   11904:	ldm	sp, {r1, r2}
   11908:	bl	11598 <error@@Base+0x904>
   1190c:	add	r1, r6, #8
   11910:	mov	r0, r4
   11914:	bl	115b0 <error@@Base+0x91c>
   11918:	mov	r7, r0
   1191c:	add	r1, r6, #416	; 0x1a0
   11920:	mov	r0, r4
   11924:	bl	115b0 <error@@Base+0x91c>
   11928:	mov	r5, r0
   1192c:	add	r1, r6, #824	; 0x338
   11930:	mov	r0, r4
   11934:	bl	115b0 <error@@Base+0x91c>
   11938:	ldr	r3, [sp]
   1193c:	cmp	r3, #0
   11940:	bgt	11960 <error@@Base+0xccc>
   11944:	mov	r0, r4
   11948:	bl	10af4 <abort@plt+0x2e8>
   1194c:	add	sp, sp, #12
   11950:	ldrd	r4, [sp]
   11954:	ldrd	r6, [sp, #8]
   11958:	add	sp, sp, #16
   1195c:	pop	{pc}		; (ldr pc, [sp], #4)
   11960:	add	r1, r6, #920	; 0x398
   11964:	mov	r0, r4
   11968:	bl	115b0 <error@@Base+0x91c>
   1196c:	cmp	r7, #0
   11970:	ble	11980 <error@@Base+0xcec>
   11974:	add	r1, r6, #992	; 0x3e0
   11978:	mov	r0, r4
   1197c:	bl	11740 <error@@Base+0xaac>
   11980:	cmp	r5, #0
   11984:	ble	11944 <error@@Base+0xcb0>
   11988:	add	r1, r6, #9024	; 0x2340
   1198c:	mov	r0, r4
   11990:	add	r1, r1, #24
   11994:	bl	11740 <error@@Base+0xaac>
   11998:	b	11944 <error@@Base+0xcb0>
   1199c:	cmp	r7, #0
   119a0:	beq	119b4 <error@@Base+0xd20>
   119a4:	ldr	r0, [pc, #36]	; 119d0 <error@@Base+0xd3c>
   119a8:	mov	r1, r7
   119ac:	add	r0, pc, r0
   119b0:	bl	10d58 <error@@Base+0xc4>
   119b4:	ldr	r7, [pc, #24]	; 119d4 <error@@Base+0xd40>
   119b8:	add	r7, pc, r7
   119bc:	b	119a4 <error@@Base+0xd10>
   119c0:	andeq	r0, r0, r4, asr #25
   119c4:	andeq	r1, r1, r4, ror #16
   119c8:	muleq	r0, r4, ip
   119cc:	muleq	r0, r4, ip
   119d0:			; <UNDEFINED> instruction: 0x00000bb0
   119d4:	andeq	r0, r0, r8, lsr fp
   119d8:	mov	r3, r1
   119dc:	ldr	r1, [pc, #404]	; 11b78 <error@@Base+0xee4>
   119e0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   119e4:	mov	r5, r0
   119e8:	mov	r0, r3
   119ec:	strd	r6, [sp, #8]
   119f0:	mov	r7, r5
   119f4:	mov	r6, #1
   119f8:	strd	r8, [sp, #16]
   119fc:	mov	r8, r5
   11a00:	mov	r9, #0
   11a04:	str	lr, [sp, #24]
   11a08:	sub	sp, sp, #12
   11a0c:	add	r1, pc, r1
   11a10:	bl	10db8 <error@@Base+0x124>
   11a14:	ldr	r3, [pc, #352]	; 11b7c <error@@Base+0xee8>
   11a18:	mov	r4, r0
   11a1c:	ldr	r2, [pc, #348]	; 11b80 <error@@Base+0xeec>
   11a20:	ldr	r1, [pc, #348]	; 11b84 <error@@Base+0xef0>
   11a24:	add	r3, pc, r3
   11a28:	add	r2, pc, r2
   11a2c:	add	r1, pc, r1
   11a30:	bl	107c4 <fprintf@plt>
   11a34:	ldr	r1, [pc, #332]	; 11b88 <error@@Base+0xef4>
   11a38:	mov	r0, r4
   11a3c:	ldr	r2, [r5]
   11a40:	add	r1, pc, r1
   11a44:	bl	107c4 <fprintf@plt>
   11a48:	ldr	r1, [pc, #316]	; 11b8c <error@@Base+0xef8>
   11a4c:	mov	r0, r4
   11a50:	ldr	r2, [r8, #4]!
   11a54:	add	r1, pc, r1
   11a58:	bl	107c4 <fprintf@plt>
   11a5c:	mov	r2, r8
   11a60:	mov	r0, r4
   11a64:	ldr	r1, [r7], #8
   11a68:	bl	11254 <error@@Base+0x5c0>
   11a6c:	ldr	r8, [pc, #284]	; 11b90 <error@@Base+0xefc>
   11a70:	mov	r3, r4
   11a74:	mov	r2, #12
   11a78:	mov	r1, r6
   11a7c:	ldr	r0, [pc, #272]	; 11b94 <error@@Base+0xf00>
   11a80:	add	r8, pc, r8
   11a84:	add	r0, pc, r0
   11a88:	bl	10770 <fwrite@plt>
   11a8c:	mov	r1, r7
   11a90:	mov	r0, r4
   11a94:	str	r9, [sp]
   11a98:	mov	r3, r8
   11a9c:	mov	r2, #50	; 0x32
   11aa0:	str	r6, [sp, #4]
   11aa4:	bl	11340 <error@@Base+0x6ac>
   11aa8:	ldr	r3, [pc, #232]	; 11b98 <error@@Base+0xf04>
   11aac:	add	r1, r5, #416	; 0x1a0
   11ab0:	mov	r0, r4
   11ab4:	mov	r2, #50	; 0x32
   11ab8:	str	r9, [sp]
   11abc:	str	r6, [sp, #4]
   11ac0:	add	r3, pc, r3
   11ac4:	bl	11340 <error@@Base+0x6ac>
   11ac8:	ldr	r3, [pc, #204]	; 11b9c <error@@Base+0xf08>
   11acc:	add	r1, r5, #824	; 0x338
   11ad0:	mov	r0, r4
   11ad4:	mov	r2, #10
   11ad8:	str	r6, [sp]
   11adc:	str	r6, [sp, #4]
   11ae0:	add	r3, pc, r3
   11ae4:	bl	11340 <error@@Base+0x6ac>
   11ae8:	ldr	r3, [r5]
   11aec:	cmp	r3, r9
   11af0:	bgt	11b14 <error@@Base+0xe80>
   11af4:	mov	r0, r4
   11af8:	add	sp, sp, #12
   11afc:	ldrd	r4, [sp]
   11b00:	ldrd	r6, [sp, #8]
   11b04:	ldrd	r8, [sp, #16]
   11b08:	ldr	lr, [sp, #24]
   11b0c:	add	sp, sp, #28
   11b10:	b	10af4 <abort@plt+0x2e8>
   11b14:	ldr	r3, [pc, #132]	; 11ba0 <error@@Base+0xf0c>
   11b18:	mov	r2, #8
   11b1c:	add	r1, r5, #920	; 0x398
   11b20:	mov	r0, r4
   11b24:	str	r9, [sp]
   11b28:	str	r9, [sp, #4]
   11b2c:	add	r3, pc, r3
   11b30:	bl	11340 <error@@Base+0x6ac>
   11b34:	ldr	r3, [r5, #8]
   11b38:	cmp	r3, r9
   11b3c:	ble	11b50 <error@@Base+0xebc>
   11b40:	mov	r2, r8
   11b44:	add	r1, r5, #992	; 0x3e0
   11b48:	mov	r0, r4
   11b4c:	bl	114c0 <error@@Base+0x82c>
   11b50:	ldr	r3, [r5, #416]	; 0x1a0
   11b54:	cmp	r3, #0
   11b58:	ble	11af4 <error@@Base+0xe60>
   11b5c:	ldr	r2, [pc, #64]	; 11ba4 <error@@Base+0xf10>
   11b60:	add	r1, r5, #9024	; 0x2340
   11b64:	mov	r0, r4
   11b68:	add	r1, r1, #24
   11b6c:	add	r2, pc, r2
   11b70:	bl	114c0 <error@@Base+0x82c>
   11b74:	b	11af4 <error@@Base+0xe60>
   11b78:	andeq	r0, r0, r4, ror #22
   11b7c:	andeq	r0, r0, r8, lsl #22
   11b80:	ldrdeq	r0, [r0], -r4
   11b84:	andeq	r0, r0, r8, asr #22
   11b88:	andeq	r0, r0, ip, lsr fp
   11b8c:	andeq	r0, r0, r8, lsr fp
   11b90:	andeq	r0, r0, r4, lsr fp
   11b94:	andeq	r0, r0, r0, lsr #22
   11b98:	andeq	r0, r0, r0, lsl #22
   11b9c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11ba0:			; <UNDEFINED> instruction: 0x00000abc
   11ba4:	andeq	r0, r0, r4, asr sl
   11ba8:	ldr	r3, [pc, #400]	; 11d40 <error@@Base+0x10ac>
   11bac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11bb0:	strd	r6, [sp, #8]
   11bb4:	ldr	r6, [pc, #392]	; 11d44 <error@@Base+0x10b0>
   11bb8:	strd	r8, [sp, #16]
   11bbc:	add	r3, pc, r3
   11bc0:	strd	sl, [sp, #24]
   11bc4:	str	lr, [sp, #32]
   11bc8:	sub	sp, sp, #20
   11bcc:	add	r6, pc, r6
   11bd0:	str	r0, [sp]
   11bd4:	str	r3, [sp, #8]
   11bd8:	lsl	r3, r1, #2
   11bdc:	str	r1, [sp, #4]
   11be0:	str	r3, [sp, #12]
   11be4:	ldr	r3, [sp]
   11be8:	ldr	r2, [sp, #4]
   11bec:	cmp	r3, r2
   11bf0:	ldr	r2, [sp, #8]
   11bf4:	ldr	r1, [r2]
   11bf8:	ldr	r4, [r1, r3, lsl #2]
   11bfc:	bge	11d30 <error@@Base+0x109c>
   11c00:	ldr	r5, [pc, #320]	; 11d48 <error@@Base+0x10b4>
   11c04:	ldm	sp, {r8, fp}
   11c08:	add	r5, pc, r5
   11c0c:	mov	r0, r4
   11c10:	ldr	r1, [r1, fp, lsl #2]
   11c14:	lsl	r9, fp, #2
   11c18:	ldr	r3, [r5, #4]
   11c1c:	blx	r3
   11c20:	cmp	r0, #0
   11c24:	bge	11cb8 <error@@Base+0x1024>
   11c28:	sub	fp, fp, #1
   11c2c:	ldr	r1, [r5]
   11c30:	cmp	r8, fp
   11c34:	lslge	r9, fp, #2
   11c38:	blt	11c0c <error@@Base+0xf78>
   11c3c:	cmp	fp, r8
   11c40:	add	r7, r1, r9
   11c44:	beq	11cc8 <error@@Base+0x1034>
   11c48:	ldr	r3, [r1, r9]
   11c4c:	add	sl, r8, #1
   11c50:	lsl	r7, r8, #2
   11c54:	cmp	fp, sl
   11c58:	str	r3, [r1, r8, lsl #2]
   11c5c:	bgt	11c74 <error@@Base+0xfe0>
   11c60:	b	11d10 <error@@Base+0x107c>
   11c64:	add	sl, sl, #1
   11c68:	ldr	r1, [r6]
   11c6c:	cmp	fp, sl
   11c70:	beq	11cc0 <error@@Base+0x102c>
   11c74:	mov	r0, r4
   11c78:	ldr	r1, [r1, sl, lsl #2]
   11c7c:	lsl	r7, sl, #2
   11c80:	ldr	r3, [r6, #4]
   11c84:	blx	r3
   11c88:	cmp	r0, #0
   11c8c:	bgt	11c64 <error@@Base+0xfd0>
   11c90:	ldr	r1, [r6]
   11c94:	mov	r8, sl
   11c98:	add	r7, r1, r7
   11c9c:	ldr	r3, [r7]
   11ca0:	sub	fp, fp, #1
   11ca4:	cmp	fp, sl
   11ca8:	str	r3, [r1, r9]
   11cac:	bgt	11c0c <error@@Base+0xf78>
   11cb0:	add	r7, r1, fp, lsl #2
   11cb4:	b	11ccc <error@@Base+0x1038>
   11cb8:	ldr	r1, [r5]
   11cbc:	b	11c3c <error@@Base+0xfa8>
   11cc0:	add	r7, r1, r9
   11cc4:	mov	r8, fp
   11cc8:	mov	fp, r8
   11ccc:	ldr	r3, [sp]
   11cd0:	sub	r1, fp, #1
   11cd4:	str	r4, [r7]
   11cd8:	cmp	r3, r1
   11cdc:	blt	11d24 <error@@Base+0x1090>
   11ce0:	ldr	r2, [sp, #4]
   11ce4:	add	r3, r8, #1
   11ce8:	str	r3, [sp]
   11cec:	cmp	r3, r2
   11cf0:	blt	11be4 <error@@Base+0xf50>
   11cf4:	add	sp, sp, #20
   11cf8:	ldrd	r4, [sp]
   11cfc:	ldrd	r6, [sp, #8]
   11d00:	ldrd	r8, [sp, #16]
   11d04:	ldrd	sl, [sp, #24]
   11d08:	add	sp, sp, #32
   11d0c:	pop	{pc}		; (ldr pc, [sp], #4)
   11d10:	add	r7, r7, #4
   11d14:	add	r7, r1, r7
   11d18:	beq	11cc4 <error@@Base+0x1030>
   11d1c:	mov	r8, sl
   11d20:	b	11c9c <error@@Base+0x1008>
   11d24:	mov	r0, r3
   11d28:	bl	11ba8 <error@@Base+0xf14>
   11d2c:	b	11ce0 <error@@Base+0x104c>
   11d30:	ldm	sp, {r8, fp}
   11d34:	ldr	r3, [sp, #12]
   11d38:	add	r7, r1, r3
   11d3c:	b	11ccc <error@@Base+0x1038>
   11d40:	andeq	r1, r1, r8, asr #10
   11d44:	andeq	r1, r1, r8, lsr r5
   11d48:	strdeq	r1, [r1], -ip
   11d4c:	cmp	r0, #1
   11d50:	mov	ip, r1
   11d54:	ble	11d74 <error@@Base+0x10e0>
   11d58:	ldr	r3, [pc, #24]	; 11d78 <error@@Base+0x10e4>
   11d5c:	sub	r1, r0, #1
   11d60:	mov	r0, #0
   11d64:	add	r3, pc, r3
   11d68:	str	ip, [r3]
   11d6c:	str	r2, [r3, #4]
   11d70:	b	11ba8 <error@@Base+0xf14>
   11d74:	bx	lr
   11d78:	andeq	r1, r1, r0, lsr #7
   11d7c:	strd	r4, [sp, #-16]!
   11d80:	add	r5, r0, #8000	; 0x1f40
   11d84:	mov	r4, r0
   11d88:	add	r5, r5, #48	; 0x30
   11d8c:	str	r6, [sp, #8]
   11d90:	mov	r6, r0
   11d94:	str	lr, [sp, #12]
   11d98:	mov	r0, r4
   11d9c:	add	r4, r4, #16
   11da0:	bl	1206c <error@@Base+0x13d8>
   11da4:	cmp	r4, r5
   11da8:	bne	11d98 <error@@Base+0x1104>
   11dac:	add	r6, r6, #4096	; 0x1000
   11db0:	mov	r3, #0
   11db4:	ldrd	r4, [sp]
   11db8:	str	r3, [r6, #3952]	; 0xf70
   11dbc:	str	r3, [r6, #3956]	; 0xf74
   11dc0:	ldr	r6, [sp, #8]
   11dc4:	add	sp, sp, #12
   11dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   11dcc:	strd	r4, [sp, #-16]!
   11dd0:	mov	r5, r1
   11dd4:	str	r6, [sp, #8]
   11dd8:	str	lr, [sp, #12]
   11ddc:	ldrb	r3, [r1]
   11de0:	cmp	r3, #0
   11de4:	beq	11e14 <error@@Base+0x1180>
   11de8:	mov	r2, #0
   11dec:	add	r2, r2, r3
   11df0:	ldrb	r3, [r1, #1]!
   11df4:	cmp	r3, #0
   11df8:	bne	11dec <error@@Base+0x1158>
   11dfc:	movw	r3, #20065	; 0x4e61
   11e00:	movt	r3, #33354	; 0x824a
   11e04:	movw	r1, #503	; 0x1f7
   11e08:	umull	ip, r3, r3, r2
   11e0c:	lsr	r3, r3, #8
   11e10:	mls	r3, r1, r3, r2
   11e14:	ldr	r4, [r0, r3, lsl #4]
   11e18:	cmp	r4, #0
   11e1c:	bne	11e30 <error@@Base+0x119c>
   11e20:	b	11e44 <error@@Base+0x11b0>
   11e24:	ldr	r4, [r4, #4]
   11e28:	cmp	r4, #0
   11e2c:	beq	11e44 <error@@Base+0x11b0>
   11e30:	mov	r0, r5
   11e34:	ldr	r1, [r4, #8]
   11e38:	bl	10710 <strcmp@plt>
   11e3c:	cmp	r0, #0
   11e40:	bne	11e24 <error@@Base+0x1190>
   11e44:	mov	r0, r4
   11e48:	ldrd	r4, [sp]
   11e4c:	ldr	r6, [sp, #8]
   11e50:	add	sp, sp, #12
   11e54:	pop	{pc}		; (ldr pc, [sp], #4)
   11e58:	ldr	r2, [r1, #8]
   11e5c:	str	r4, [sp, #-8]!
   11e60:	mov	r4, r0
   11e64:	str	lr, [sp, #4]
   11e68:	ldrb	r3, [r2]
   11e6c:	cmp	r3, #0
   11e70:	beq	11ea4 <error@@Base+0x1210>
   11e74:	mov	r0, #0
   11e78:	add	r0, r0, r3
   11e7c:	ldrb	r3, [r2, #1]!
   11e80:	cmp	r3, #0
   11e84:	bne	11e78 <error@@Base+0x11e4>
   11e88:	movw	r3, #20065	; 0x4e61
   11e8c:	movt	r3, #33354	; 0x824a
   11e90:	movw	r2, #503	; 0x1f7
   11e94:	umull	ip, r3, r3, r0
   11e98:	lsr	r3, r3, #8
   11e9c:	mls	r0, r2, r3, r0
   11ea0:	add	r0, r4, r0, lsl #4
   11ea4:	add	r4, r4, #4096	; 0x1000
   11ea8:	bl	12084 <error@@Base+0x13f0>
   11eac:	ldr	r0, [r4, #3952]	; 0xf70
   11eb0:	cmp	r0, #0
   11eb4:	beq	11ec4 <error@@Base+0x1230>
   11eb8:	bl	10734 <free@plt>
   11ebc:	mov	r3, #0
   11ec0:	str	r3, [r4, #3952]	; 0xf70
   11ec4:	ldr	r3, [r4, #3956]	; 0xf74
   11ec8:	add	r3, r3, #1
   11ecc:	str	r3, [r4, #3956]	; 0xf74
   11ed0:	ldr	r4, [sp]
   11ed4:	add	sp, sp, #4
   11ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   11edc:	ldr	r2, [r1, #8]
   11ee0:	str	r4, [sp, #-8]!
   11ee4:	mov	r4, r0
   11ee8:	str	lr, [sp, #4]
   11eec:	ldrb	r3, [r2]
   11ef0:	cmp	r3, #0
   11ef4:	beq	11f28 <error@@Base+0x1294>
   11ef8:	mov	r0, #0
   11efc:	add	r0, r0, r3
   11f00:	ldrb	r3, [r2, #1]!
   11f04:	cmp	r3, #0
   11f08:	bne	11efc <error@@Base+0x1268>
   11f0c:	movw	r3, #20065	; 0x4e61
   11f10:	movt	r3, #33354	; 0x824a
   11f14:	movw	r2, #503	; 0x1f7
   11f18:	umull	ip, r3, r3, r0
   11f1c:	lsr	r3, r3, #8
   11f20:	mls	r0, r2, r3, r0
   11f24:	add	r0, r4, r0, lsl #4
   11f28:	add	r4, r4, #4096	; 0x1000
   11f2c:	bl	121e4 <error@@Base+0x1550>
   11f30:	ldr	r0, [r4, #3952]	; 0xf70
   11f34:	cmp	r0, #0
   11f38:	beq	11f48 <error@@Base+0x12b4>
   11f3c:	bl	10734 <free@plt>
   11f40:	mov	r3, #0
   11f44:	str	r3, [r4, #3952]	; 0xf70
   11f48:	ldr	r3, [r4, #3956]	; 0xf74
   11f4c:	sub	r3, r3, #1
   11f50:	str	r3, [r4, #3956]	; 0xf74
   11f54:	ldr	r4, [sp]
   11f58:	add	sp, sp, #4
   11f5c:	pop	{pc}		; (ldr pc, [sp], #4)
   11f60:	strd	r4, [sp, #-16]!
   11f64:	str	r6, [sp, #8]
   11f68:	add	r6, r0, #4096	; 0x1000
   11f6c:	ldr	r4, [r6, #3952]	; 0xf70
   11f70:	str	lr, [sp, #12]
   11f74:	cmp	r4, #0
   11f78:	beq	11f8c <error@@Base+0x12f8>
   11f7c:	ldrd	r4, [sp]
   11f80:	ldr	r6, [sp, #8]
   11f84:	add	sp, sp, #12
   11f88:	pop	{pc}		; (ldr pc, [sp], #4)
   11f8c:	ldr	r3, [r6, #3956]	; 0xf74
   11f90:	cmp	r3, #0
   11f94:	beq	11f7c <error@@Base+0x12e8>
   11f98:	mov	r5, r0
   11f9c:	mov	r1, #4
   11fa0:	mov	r0, r3
   11fa4:	bl	10cf0 <error@@Base+0x5c>
   11fa8:	mov	r2, r4
   11fac:	mov	ip, r4
   11fb0:	str	r0, [r6, #3952]	; 0xf70
   11fb4:	movw	lr, #503	; 0x1f7
   11fb8:	ldr	r3, [r5, ip, lsl #4]
   11fbc:	cmp	r3, #0
   11fc0:	beq	11fdc <error@@Base+0x1348>
   11fc4:	add	r1, r0, r2, lsl #2
   11fc8:	str	r3, [r1], #4
   11fcc:	add	r2, r2, #1
   11fd0:	ldr	r3, [r3, #4]
   11fd4:	cmp	r3, #0
   11fd8:	bne	11fc8 <error@@Base+0x1334>
   11fdc:	add	ip, ip, #1
   11fe0:	cmp	ip, lr
   11fe4:	bne	11fb8 <error@@Base+0x1324>
   11fe8:	ldrd	r4, [sp]
   11fec:	ldr	r6, [sp, #8]
   11ff0:	add	sp, sp, #12
   11ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ff8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ffc:	add	r5, r0, #8000	; 0x1f40
   12000:	mov	r4, r0
   12004:	add	r5, r5, #48	; 0x30
   12008:	strd	r6, [sp, #8]
   1200c:	mov	r7, r0
   12010:	mov	r6, r1
   12014:	str	r8, [sp, #16]
   12018:	str	lr, [sp, #20]
   1201c:	mov	r0, r4
   12020:	mov	r1, r6
   12024:	add	r4, r4, #16
   12028:	bl	122b0 <error@@Base+0x161c>
   1202c:	cmp	r4, r5
   12030:	bne	1201c <error@@Base+0x1388>
   12034:	add	r7, r7, #4096	; 0x1000
   12038:	ldr	r0, [r7, #3952]	; 0xf70
   1203c:	cmp	r0, #0
   12040:	beq	12050 <error@@Base+0x13bc>
   12044:	bl	10734 <free@plt>
   12048:	mov	r3, #0
   1204c:	str	r3, [r7, #3952]	; 0xf70
   12050:	mov	r3, #0
   12054:	ldrd	r4, [sp]
   12058:	ldr	r8, [sp, #16]
   1205c:	str	r3, [r7, #3956]	; 0xf74
   12060:	ldrd	r6, [sp, #8]
   12064:	add	sp, sp, #20
   12068:	pop	{pc}		; (ldr pc, [sp], #4)
   1206c:	mov	r3, #0
   12070:	str	r3, [r0]
   12074:	str	r3, [r0, #4]
   12078:	str	r3, [r0, #8]
   1207c:	str	r3, [r0, #12]
   12080:	bx	lr
   12084:	ldr	r3, [r0]
   12088:	mov	r2, #0
   1208c:	str	r4, [sp, #-8]!
   12090:	mov	r4, r0
   12094:	str	lr, [sp, #4]
   12098:	cmp	r3, r2
   1209c:	strd	r2, [r1]
   120a0:	str	r1, [r0]
   120a4:	streq	r1, [r0, #4]
   120a8:	ldr	r0, [r0, #8]
   120ac:	strne	r1, [r3]
   120b0:	cmp	r0, #0
   120b4:	beq	120c4 <error@@Base+0x1430>
   120b8:	bl	10734 <free@plt>
   120bc:	mov	r3, #0
   120c0:	str	r3, [r4, #8]
   120c4:	ldr	r3, [r4, #12]
   120c8:	add	r3, r3, #1
   120cc:	str	r3, [r4, #12]
   120d0:	ldr	r4, [sp]
   120d4:	add	sp, sp, #4
   120d8:	pop	{pc}		; (ldr pc, [sp], #4)
   120dc:	ldr	r3, [r0, #4]
   120e0:	mov	r2, #0
   120e4:	str	r4, [sp, #-8]!
   120e8:	mov	r4, r0
   120ec:	str	lr, [sp, #4]
   120f0:	cmp	r3, r2
   120f4:	str	r3, [r1]
   120f8:	str	r2, [r1, #4]
   120fc:	streq	r1, [r0]
   12100:	ldr	r0, [r0, #8]
   12104:	strne	r1, [r3, #4]
   12108:	str	r1, [r4, #4]
   1210c:	cmp	r0, #0
   12110:	beq	12120 <error@@Base+0x148c>
   12114:	bl	10734 <free@plt>
   12118:	mov	r3, #0
   1211c:	str	r3, [r4, #8]
   12120:	ldr	r3, [r4, #12]
   12124:	add	r3, r3, #1
   12128:	str	r3, [r4, #12]
   1212c:	ldr	r4, [sp]
   12130:	add	sp, sp, #4
   12134:	pop	{pc}		; (ldr pc, [sp], #4)
   12138:	ldr	r3, [r2]
   1213c:	str	r4, [sp, #-8]!
   12140:	mov	r4, r0
   12144:	str	lr, [sp, #4]
   12148:	cmp	r3, #0
   1214c:	str	r3, [r1]
   12150:	str	r2, [r1, #4]
   12154:	streq	r1, [r0]
   12158:	ldr	r0, [r0, #8]
   1215c:	strne	r1, [r3, #4]
   12160:	str	r1, [r2]
   12164:	cmp	r0, #0
   12168:	beq	12178 <error@@Base+0x14e4>
   1216c:	bl	10734 <free@plt>
   12170:	mov	r3, #0
   12174:	str	r3, [r4, #8]
   12178:	ldr	r3, [r4, #12]
   1217c:	add	r3, r3, #1
   12180:	str	r3, [r4, #12]
   12184:	ldr	r4, [sp]
   12188:	add	sp, sp, #4
   1218c:	pop	{pc}		; (ldr pc, [sp], #4)
   12190:	ldr	r3, [r1, #4]
   12194:	str	r4, [sp, #-8]!
   12198:	mov	r4, r0
   1219c:	str	lr, [sp, #4]
   121a0:	cmp	r3, #0
   121a4:	stm	r2, {r1, r3}
   121a8:	str	r2, [r1, #4]
   121ac:	streq	r2, [r0, #4]
   121b0:	ldr	r0, [r0, #8]
   121b4:	strne	r2, [r3]
   121b8:	cmp	r0, #0
   121bc:	beq	121cc <error@@Base+0x1538>
   121c0:	bl	10734 <free@plt>
   121c4:	mov	r3, #0
   121c8:	str	r3, [r4, #8]
   121cc:	ldr	r3, [r4, #12]
   121d0:	add	r3, r3, #1
   121d4:	str	r3, [r4, #12]
   121d8:	ldr	r4, [sp]
   121dc:	add	sp, sp, #4
   121e0:	pop	{pc}		; (ldr pc, [sp], #4)
   121e4:	ldrd	r2, [r1]
   121e8:	strd	r4, [sp, #-16]!
   121ec:	mov	r4, r0
   121f0:	mov	r5, #0
   121f4:	str	r6, [sp, #8]
   121f8:	str	lr, [sp, #12]
   121fc:	cmp	r2, #0
   12200:	strne	r3, [r2, #4]
   12204:	ldrne	r3, [r1, #4]
   12208:	streq	r3, [r0]
   1220c:	cmp	r3, #0
   12210:	streq	r2, [r0, #4]
   12214:	ldr	r0, [r0, #8]
   12218:	strne	r2, [r3]
   1221c:	str	r5, [r1]
   12220:	str	r5, [r1, #4]
   12224:	cmp	r0, r5
   12228:	beq	12234 <error@@Base+0x15a0>
   1222c:	bl	10734 <free@plt>
   12230:	str	r5, [r4, #8]
   12234:	ldr	r3, [r4, #12]
   12238:	ldr	r6, [sp, #8]
   1223c:	sub	r3, r3, #1
   12240:	str	r3, [r4, #12]
   12244:	ldrd	r4, [sp]
   12248:	add	sp, sp, #12
   1224c:	pop	{pc}		; (ldr pc, [sp], #4)
   12250:	ldr	r3, [r0, #8]
   12254:	cmp	r3, #0
   12258:	bxne	lr
   1225c:	ldr	r3, [r0, #12]
   12260:	cmp	r3, #0
   12264:	bxeq	lr
   12268:	mov	r1, #4
   1226c:	str	r4, [sp, #-8]!
   12270:	mov	r4, r0
   12274:	mov	r0, r3
   12278:	str	lr, [sp, #4]
   1227c:	bl	10cf0 <error@@Base+0x5c>
   12280:	ldr	r3, [r4]
   12284:	str	r0, [r4, #8]
   12288:	cmp	r3, #0
   1228c:	beq	122a4 <error@@Base+0x1610>
   12290:	sub	r0, r0, #4
   12294:	str	r3, [r0, #4]!
   12298:	ldr	r3, [r3, #4]
   1229c:	cmp	r3, #0
   122a0:	bne	12294 <error@@Base+0x1600>
   122a4:	ldr	r4, [sp]
   122a8:	add	sp, sp, #4
   122ac:	pop	{pc}		; (ldr pc, [sp], #4)
   122b0:	strd	r4, [sp, #-16]!
   122b4:	ldr	r4, [r0]
   122b8:	str	r6, [sp, #8]
   122bc:	str	lr, [sp, #12]
   122c0:	cmp	r4, #0
   122c4:	beq	122f0 <error@@Base+0x165c>
   122c8:	mov	r5, r0
   122cc:	mov	r6, r1
   122d0:	mov	r1, r4
   122d4:	mov	r0, r5
   122d8:	bl	121e4 <error@@Base+0x1550>
   122dc:	mov	r0, r4
   122e0:	blx	r6
   122e4:	ldr	r4, [r5]
   122e8:	cmp	r4, #0
   122ec:	bne	122d0 <error@@Base+0x163c>
   122f0:	ldrd	r4, [sp]
   122f4:	ldr	r6, [sp, #8]
   122f8:	add	sp, sp, #12
   122fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12300:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12304:	mov	r7, r0
   12308:	ldr	r6, [pc, #72]	; 12358 <error@@Base+0x16c4>
   1230c:	ldr	r5, [pc, #72]	; 1235c <error@@Base+0x16c8>
   12310:	add	r6, pc, r6
   12314:	add	r5, pc, r5
   12318:	sub	r6, r6, r5
   1231c:	mov	r8, r1
   12320:	mov	r9, r2
   12324:	bl	106e4 <calloc@plt-0x20>
   12328:	asrs	r6, r6, #2
   1232c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12330:	mov	r4, #0
   12334:	add	r4, r4, #1
   12338:	ldr	r3, [r5], #4
   1233c:	mov	r2, r9
   12340:	mov	r1, r8
   12344:	mov	r0, r7
   12348:	blx	r3
   1234c:	cmp	r6, r4
   12350:	bne	12334 <error@@Base+0x16a0>
   12354:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12358:	andeq	r0, r1, ip, ror #23
   1235c:	andeq	r0, r1, r4, ror #23
   12360:	bx	lr

Disassembly of section .fini:

00012364 <.fini>:
   12364:	push	{r3, lr}
   12368:	pop	{r3, pc}
