
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

00010754 <.init>:
   10754:	push	{r3, lr}
   10758:	bl	108ac <abort@plt+0x48>
   1075c:	pop	{r3, pc}

Disassembly of section .plt:

00010760 <calloc@plt-0x14>:
   10760:	push	{lr}		; (str lr, [sp, #-4]!)
   10764:	ldr	lr, [pc, #4]	; 10770 <calloc@plt-0x4>
   10768:	add	lr, pc, lr
   1076c:	ldr	pc, [lr, #8]!
   10770:	muleq	r1, r0, r8

00010774 <calloc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #69632	; 0x11000
   1077c:	ldr	pc, [ip, #2192]!	; 0x890

00010780 <fopen@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #69632	; 0x11000
   10788:	ldr	pc, [ip, #2184]!	; 0x888

0001078c <free@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #69632	; 0x11000
   10794:	ldr	pc, [ip, #2176]!	; 0x880

00010798 <fgets@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #69632	; 0x11000
   107a0:	ldr	pc, [ip, #2168]!	; 0x878

000107a4 <strdup@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #69632	; 0x11000
   107ac:	ldr	pc, [ip, #2160]!	; 0x870

000107b0 <unlink@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #69632	; 0x11000
   107b8:	ldr	pc, [ip, #2152]!	; 0x868

000107bc <__xstat@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #69632	; 0x11000
   107c4:	ldr	pc, [ip, #2144]!	; 0x860

000107c8 <fwrite@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #69632	; 0x11000
   107d0:	ldr	pc, [ip, #2136]!	; 0x858

000107d4 <__libc_start_main@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #69632	; 0x11000
   107dc:	ldr	pc, [ip, #2128]!	; 0x850

000107e0 <__sysv_signal@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #69632	; 0x11000
   107e8:	ldr	pc, [ip, #2120]!	; 0x848

000107ec <__gmon_start__@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #69632	; 0x11000
   107f4:	ldr	pc, [ip, #2112]!	; 0x840

000107f8 <getpid@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #69632	; 0x11000
   10800:	ldr	pc, [ip, #2104]!	; 0x838

00010804 <exit@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #69632	; 0x11000
   1080c:	ldr	pc, [ip, #2096]!	; 0x830

00010810 <bcmp@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #69632	; 0x11000
   10818:	ldr	pc, [ip, #2088]!	; 0x828

0001081c <strlen@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #69632	; 0x11000
   10824:	ldr	pc, [ip, #2080]!	; 0x820

00010828 <fprintf@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #69632	; 0x11000
   10830:	ldr	pc, [ip, #2072]!	; 0x818

00010834 <__isoc99_sscanf@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #69632	; 0x11000
   1083c:	ldr	pc, [ip, #2064]!	; 0x810

00010840 <fclose@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #69632	; 0x11000
   10848:	ldr	pc, [ip, #2056]!	; 0x808

0001084c <sprintf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #69632	; 0x11000
   10854:	ldr	pc, [ip, #2048]!	; 0x800

00010858 <strncmp@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #69632	; 0x11000
   10860:	ldr	pc, [ip, #2040]!	; 0x7f8

00010864 <abort@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #69632	; 0x11000
   1086c:	ldr	pc, [ip, #2032]!	; 0x7f0

Disassembly of section .text:

00010870 <error@@Base-0xa5c>:
   10870:	mov	fp, #0
   10874:	mov	lr, #0
   10878:	pop	{r1}		; (ldr r1, [sp], #4)
   1087c:	mov	r2, sp
   10880:	push	{r2}		; (str r2, [sp, #-4]!)
   10884:	push	{r0}		; (str r0, [sp, #-4]!)
   10888:	ldr	ip, [pc, #16]	; 108a0 <abort@plt+0x3c>
   1088c:	push	{ip}		; (str ip, [sp, #-4]!)
   10890:	ldr	r0, [pc, #12]	; 108a4 <abort@plt+0x40>
   10894:	ldr	r3, [pc, #12]	; 108a8 <abort@plt+0x44>
   10898:	bl	107d4 <__libc_start_main@plt>
   1089c:	bl	10864 <abort@plt>
   108a0:	andeq	r1, r1, r4, asr r5
   108a4:	andeq	r0, r1, r0, ror #18
   108a8:	strdeq	r1, [r1], -r4
   108ac:	ldr	r3, [pc, #20]	; 108c8 <abort@plt+0x64>
   108b0:	ldr	r2, [pc, #20]	; 108cc <abort@plt+0x68>
   108b4:	add	r3, pc, r3
   108b8:	ldr	r2, [r3, r2]
   108bc:	cmp	r2, #0
   108c0:	bxeq	lr
   108c4:	b	107ec <__gmon_start__@plt>
   108c8:	andeq	r1, r1, r4, asr #14
   108cc:	andeq	r0, r0, ip, rrx
   108d0:	ldr	r0, [pc, #24]	; 108f0 <abort@plt+0x8c>
   108d4:	ldr	r3, [pc, #24]	; 108f4 <abort@plt+0x90>
   108d8:	cmp	r3, r0
   108dc:	bxeq	lr
   108e0:	ldr	r3, [pc, #16]	; 108f8 <abort@plt+0x94>
   108e4:	cmp	r3, #0
   108e8:	bxeq	lr
   108ec:	bx	r3
   108f0:	muleq	r2, r8, r0
   108f4:	muleq	r2, r8, r0
   108f8:	andeq	r0, r0, r0
   108fc:	ldr	r0, [pc, #36]	; 10928 <abort@plt+0xc4>
   10900:	ldr	r1, [pc, #36]	; 1092c <abort@plt+0xc8>
   10904:	sub	r1, r1, r0
   10908:	asr	r1, r1, #2
   1090c:	add	r1, r1, r1, lsr #31
   10910:	asrs	r1, r1, #1
   10914:	bxeq	lr
   10918:	ldr	r3, [pc, #16]	; 10930 <abort@plt+0xcc>
   1091c:	cmp	r3, #0
   10920:	bxeq	lr
   10924:	bx	r3
   10928:	muleq	r2, r8, r0
   1092c:	muleq	r2, r8, r0
   10930:	andeq	r0, r0, r0
   10934:	push	{r4, lr}
   10938:	ldr	r4, [pc, #24]	; 10958 <abort@plt+0xf4>
   1093c:	ldrb	r3, [r4]
   10940:	cmp	r3, #0
   10944:	popne	{r4, pc}
   10948:	bl	108d0 <abort@plt+0x6c>
   1094c:	mov	r3, #1
   10950:	strb	r3, [r4]
   10954:	pop	{r4, pc}
   10958:	muleq	r2, r8, r0
   1095c:	b	108fc <abort@plt+0x98>
   10960:	push	{fp, lr}
   10964:	mov	fp, sp
   10968:	sub	sp, sp, #8
   1096c:	str	r0, [sp, #4]
   10970:	add	r0, sp, #4
   10974:	mov	r3, #0
   10978:	mov	r4, r1
   1097c:	mov	r6, #0
   10980:	ldr	r2, [pc, #84]	; 109dc <abort@plt+0x178>
   10984:	add	r2, pc, r2
   10988:	bl	11044 <abort@plt+0x7e0>
   1098c:	ldr	r0, [sp, #4]
   10990:	cmp	r0, #2
   10994:	blt	109d0 <abort@plt+0x16c>
   10998:	ldr	r5, [pc, #64]	; 109e0 <abort@plt+0x17c>
   1099c:	ldr	r5, [pc, r5]
   109a0:	ldr	r1, [r4, r6, lsl #2]
   109a4:	mov	r0, r5
   109a8:	bl	109ec <abort@plt+0x188>
   109ac:	ldr	r0, [sp, #4]
   109b0:	add	r6, r6, #1
   109b4:	cmp	r6, r0
   109b8:	blt	109a0 <abort@plt+0x13c>
   109bc:	ldr	r0, [pc, #32]	; 109e4 <abort@plt+0x180>
   109c0:	mov	r1, #0
   109c4:	ldr	r0, [pc, r0]
   109c8:	bl	10cd8 <abort@plt+0x474>
   109cc:	bl	11288 <abort@plt+0xa24>
   109d0:	ldr	r0, [pc, #16]	; 109e8 <abort@plt+0x184>
   109d4:	add	r0, pc, r0
   109d8:	bl	112cc <error@@Base>
   109dc:	ldrdeq	r0, [r0], -r8
   109e0:	ldrdeq	r1, [r1], -r8
   109e4:			; <UNDEFINED> instruction: 0x000116b0
   109e8:			; <UNDEFINED> instruction: 0x00000bb9
   109ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   109f0:	add	fp, sp, #24
   109f4:	sub	sp, sp, #16
   109f8:	mov	r6, r1
   109fc:	ldr	r1, [pc, #628]	; 10c78 <abort@plt+0x414>
   10a00:	mov	r4, r0
   10a04:	mov	r0, r6
   10a08:	add	r1, pc, r1
   10a0c:	bl	10ea4 <abort@plt+0x640>
   10a10:	mov	r5, r0
   10a14:	ldr	r0, [pc, #608]	; 10c7c <abort@plt+0x418>
   10a18:	mov	r1, #99	; 0x63
   10a1c:	mov	r2, r5
   10a20:	add	r0, pc, r0
   10a24:	bl	10798 <fgets@plt>
   10a28:	cmp	r0, #0
   10a2c:	beq	10c5c <abort@plt+0x3f8>
   10a30:	ldr	r0, [pc, #584]	; 10c80 <abort@plt+0x41c>
   10a34:	ldr	r1, [pc, #584]	; 10c84 <abort@plt+0x420>
   10a38:	mov	r2, #42	; 0x2a
   10a3c:	add	r0, pc, r0
   10a40:	add	r1, pc, r1
   10a44:	bl	10810 <bcmp@plt>
   10a48:	cmp	r0, #0
   10a4c:	bne	10c5c <abort@plt+0x3f8>
   10a50:	ldr	r0, [pc, #560]	; 10c88 <abort@plt+0x424>
   10a54:	mov	r1, #99	; 0x63
   10a58:	mov	r2, r5
   10a5c:	add	r0, pc, r0
   10a60:	bl	10798 <fgets@plt>
   10a64:	cmp	r0, #0
   10a68:	beq	10c5c <abort@plt+0x3f8>
   10a6c:	ldr	r0, [pc, #536]	; 10c8c <abort@plt+0x428>
   10a70:	ldr	r1, [pc, #536]	; 10c90 <abort@plt+0x42c>
   10a74:	mov	r2, #45	; 0x2d
   10a78:	add	r0, pc, r0
   10a7c:	add	r1, pc, r1
   10a80:	bl	10810 <bcmp@plt>
   10a84:	cmp	r0, #0
   10a88:	bne	10c5c <abort@plt+0x3f8>
   10a8c:	ldr	r0, [pc, #512]	; 10c94 <abort@plt+0x430>
   10a90:	mov	r1, #99	; 0x63
   10a94:	mov	r2, r5
   10a98:	add	r0, pc, r0
   10a9c:	bl	10798 <fgets@plt>
   10aa0:	cmp	r0, #0
   10aa4:	beq	10c5c <abort@plt+0x3f8>
   10aa8:	ldr	r0, [pc, #488]	; 10c98 <abort@plt+0x434>
   10aac:	ldr	r1, [pc, #488]	; 10c9c <abort@plt+0x438>
   10ab0:	add	r2, sp, #8
   10ab4:	add	r0, pc, r0
   10ab8:	add	r1, pc, r1
   10abc:	bl	10834 <__isoc99_sscanf@plt>
   10ac0:	cmp	r0, #1
   10ac4:	bne	10c5c <abort@plt+0x3f8>
   10ac8:	ldr	r0, [r4]
   10acc:	ldr	r1, [sp, #8]
   10ad0:	mov	r2, r5
   10ad4:	add	r0, r0, r1
   10ad8:	mov	r1, #99	; 0x63
   10adc:	str	r0, [r4]
   10ae0:	ldr	r0, [pc, #440]	; 10ca0 <abort@plt+0x43c>
   10ae4:	add	r0, pc, r0
   10ae8:	bl	10798 <fgets@plt>
   10aec:	cmp	r0, #0
   10af0:	beq	10c5c <abort@plt+0x3f8>
   10af4:	ldr	r0, [pc, #424]	; 10ca4 <abort@plt+0x440>
   10af8:	ldr	r1, [pc, #424]	; 10ca8 <abort@plt+0x444>
   10afc:	add	r2, sp, #8
   10b00:	add	r0, pc, r0
   10b04:	add	r1, pc, r1
   10b08:	bl	10834 <__isoc99_sscanf@plt>
   10b0c:	cmp	r0, #1
   10b10:	bne	10c5c <abort@plt+0x3f8>
   10b14:	ldr	r0, [r4, #4]
   10b18:	ldr	r1, [sp, #8]
   10b1c:	mov	r2, r5
   10b20:	add	r0, r0, r1
   10b24:	mov	r1, #99	; 0x63
   10b28:	str	r0, [r4, #4]
   10b2c:	ldr	r0, [pc, #376]	; 10cac <abort@plt+0x448>
   10b30:	add	r0, pc, r0
   10b34:	bl	10798 <fgets@plt>
   10b38:	cmp	r0, #0
   10b3c:	beq	10c5c <abort@plt+0x3f8>
   10b40:	ldr	r0, [pc, #360]	; 10cb0 <abort@plt+0x44c>
   10b44:	ldr	r1, [pc, #360]	; 10cb4 <abort@plt+0x450>
   10b48:	add	r2, sp, #12
   10b4c:	add	r0, pc, r0
   10b50:	add	r1, pc, r1
   10b54:	bl	10834 <__isoc99_sscanf@plt>
   10b58:	cmp	r0, #1
   10b5c:	bne	10c5c <abort@plt+0x3f8>
   10b60:	ldr	r1, [sp, #12]
   10b64:	ldr	r0, [r4, #8]
   10b68:	add	r0, r0, r1
   10b6c:	cmp	r1, #1
   10b70:	str	r0, [r4, #8]
   10b74:	blt	10c4c <abort@plt+0x3e8>
   10b78:	ldr	r0, [pc, #312]	; 10cb8 <abort@plt+0x454>
   10b7c:	mov	r1, #99	; 0x63
   10b80:	mov	r2, r5
   10b84:	add	r0, pc, r0
   10b88:	bl	10798 <fgets@plt>
   10b8c:	cmp	r0, #0
   10b90:	beq	10c4c <abort@plt+0x3e8>
   10b94:	ldr	r0, [pc, #288]	; 10cbc <abort@plt+0x458>
   10b98:	mov	r1, #99	; 0x63
   10b9c:	mov	r2, r5
   10ba0:	add	r0, pc, r0
   10ba4:	bl	10798 <fgets@plt>
   10ba8:	cmp	r0, #0
   10bac:	beq	10c4c <abort@plt+0x3e8>
   10bb0:	ldr	r0, [pc, #264]	; 10cc0 <abort@plt+0x45c>
   10bb4:	mov	r1, #99	; 0x63
   10bb8:	mov	r2, r5
   10bbc:	add	r0, pc, r0
   10bc0:	bl	10798 <fgets@plt>
   10bc4:	cmp	r0, #0
   10bc8:	beq	10c4c <abort@plt+0x3e8>
   10bcc:	ldr	r0, [pc, #240]	; 10cc4 <abort@plt+0x460>
   10bd0:	mov	r1, #99	; 0x63
   10bd4:	mov	r2, r5
   10bd8:	add	r0, pc, r0
   10bdc:	bl	10798 <fgets@plt>
   10be0:	cmp	r0, #0
   10be4:	beq	10c4c <abort@plt+0x3e8>
   10be8:	ldr	r6, [pc, #216]	; 10cc8 <abort@plt+0x464>
   10bec:	ldr	r8, [pc, #216]	; 10ccc <abort@plt+0x468>
   10bf0:	add	r9, sp, #8
   10bf4:	add	r7, sp, #4
   10bf8:	add	r6, pc, r6
   10bfc:	add	r8, pc, r8
   10c00:	mov	r0, r6
   10c04:	mov	r1, r8
   10c08:	mov	r2, r9
   10c0c:	mov	r3, r7
   10c10:	bl	10834 <__isoc99_sscanf@plt>
   10c14:	cmp	r0, #2
   10c18:	bne	10c4c <abort@plt+0x3e8>
   10c1c:	ldr	r0, [sp, #4]
   10c20:	ldr	r2, [sp, #8]
   10c24:	add	r0, r4, r0, lsl #2
   10c28:	ldr	r1, [r0, #12]
   10c2c:	add	r1, r1, r2
   10c30:	mov	r2, r5
   10c34:	str	r1, [r0, #12]
   10c38:	mov	r0, r6
   10c3c:	mov	r1, #99	; 0x63
   10c40:	bl	10798 <fgets@plt>
   10c44:	cmp	r0, #0
   10c48:	bne	10c00 <abort@plt+0x39c>
   10c4c:	mov	r0, r5
   10c50:	bl	10f2c <abort@plt+0x6c8>
   10c54:	sub	sp, fp, #24
   10c58:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10c5c:	ldr	r1, [pc, #108]	; 10cd0 <abort@plt+0x46c>
   10c60:	ldr	r0, [pc, #108]	; 10cd4 <abort@plt+0x470>
   10c64:	cmp	r6, #0
   10c68:	add	r1, pc, r1
   10c6c:	movne	r1, r6
   10c70:	add	r0, pc, r0
   10c74:	bl	1131c <error@@Base+0x50>
   10c78:	muleq	r0, ip, fp
   10c7c:	andeq	r1, r1, r1, ror r6
   10c80:	andeq	r1, r1, r5, asr r6
   10c84:	andeq	r0, r0, r6, ror #22
   10c88:	andeq	r1, r1, r5, lsr r6
   10c8c:	andeq	r1, r1, r9, lsl r6
   10c90:	andeq	r0, r0, r7, asr fp
   10c94:	strdeq	r1, [r1], -r9
   10c98:	ldrdeq	r1, [r1], -sp
   10c9c:	andeq	r0, r0, r0, lsr #23
   10ca0:	andeq	r1, r1, sp, lsr #11
   10ca4:	muleq	r1, r1, r5
   10ca8:	andeq	r0, r0, r4, asr fp
   10cac:	andeq	r1, r1, r1, ror #10
   10cb0:	andeq	r1, r1, r5, asr #10
   10cb4:	andeq	r0, r0, r8, lsl #22
   10cb8:	andeq	r1, r1, sp, lsl #10
   10cbc:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   10cc0:	ldrdeq	r1, [r1], -r5
   10cc4:			; <UNDEFINED> instruction: 0x000114b9
   10cc8:	muleq	r1, r9, r4
   10ccc:	andeq	r0, r0, r8, asr sl
   10cd0:	andeq	r0, r0, sl, lsr #19
   10cd4:	muleq	r0, r0, r9
   10cd8:	push	{r4, r5, r6, r7, fp, lr}
   10cdc:	add	fp, sp, #16
   10ce0:	mov	r2, r1
   10ce4:	ldr	r1, [pc, #232]	; 10dd4 <abort@plt+0x570>
   10ce8:	mov	r4, r0
   10cec:	mov	r0, r2
   10cf0:	add	r1, pc, r1
   10cf4:	bl	10ea4 <abort@plt+0x640>
   10cf8:	ldr	r1, [pc, #216]	; 10dd8 <abort@plt+0x574>
   10cfc:	ldr	r2, [pc, #216]	; 10ddc <abort@plt+0x578>
   10d00:	ldr	r3, [pc, #216]	; 10de0 <abort@plt+0x57c>
   10d04:	mov	r5, r0
   10d08:	add	r1, pc, r1
   10d0c:	add	r2, pc, r2
   10d10:	add	r3, pc, r3
   10d14:	bl	10828 <fprintf@plt>
   10d18:	ldr	r2, [r4]
   10d1c:	ldr	r6, [pc, #192]	; 10de4 <abort@plt+0x580>
   10d20:	ldr	r3, [pc, #192]	; 10de8 <abort@plt+0x584>
   10d24:	mov	r0, r5
   10d28:	add	r6, pc, r6
   10d2c:	add	r3, pc, r3
   10d30:	mov	r1, r6
   10d34:	bl	10828 <fprintf@plt>
   10d38:	ldr	r2, [r4, #4]
   10d3c:	ldr	r3, [pc, #168]	; 10dec <abort@plt+0x588>
   10d40:	mov	r0, r5
   10d44:	mov	r1, r6
   10d48:	add	r3, pc, r3
   10d4c:	bl	10828 <fprintf@plt>
   10d50:	ldr	r2, [r4, #8]
   10d54:	ldr	r3, [pc, #148]	; 10df0 <abort@plt+0x58c>
   10d58:	mov	r0, r5
   10d5c:	mov	r1, r6
   10d60:	add	r3, pc, r3
   10d64:	bl	10828 <fprintf@plt>
   10d68:	ldr	r0, [r4, #8]
   10d6c:	cmp	r0, #1
   10d70:	blt	10dc8 <abort@plt+0x564>
   10d74:	ldr	r0, [pc, #120]	; 10df4 <abort@plt+0x590>
   10d78:	mov	r1, #25
   10d7c:	mov	r2, #1
   10d80:	mov	r3, r5
   10d84:	add	r0, pc, r0
   10d88:	bl	107c8 <fwrite@plt>
   10d8c:	ldr	r6, [pc, #100]	; 10df8 <abort@plt+0x594>
   10d90:	mov	r7, #4
   10d94:	add	r6, pc, r6
   10d98:	b	10da8 <abort@plt+0x544>
   10d9c:	add	r7, r7, #1
   10da0:	cmp	r7, #104	; 0x68
   10da4:	beq	10dc8 <abort@plt+0x564>
   10da8:	ldr	r2, [r4, r7, lsl #2]
   10dac:	cmp	r2, #1
   10db0:	blt	10d9c <abort@plt+0x538>
   10db4:	sub	r3, r7, #3
   10db8:	mov	r0, r5
   10dbc:	mov	r1, r6
   10dc0:	bl	10828 <fprintf@plt>
   10dc4:	b	10d9c <abort@plt+0x538>
   10dc8:	mov	r0, r5
   10dcc:	pop	{r4, r5, r6, r7, fp, lr}
   10dd0:	b	10f2c <abort@plt+0x6c8>
   10dd4:	andeq	r0, r0, r8, lsr #18
   10dd8:	andeq	r0, r0, r2, lsl r9
   10ddc:	muleq	r0, sl, r8
   10de0:	andeq	r0, r0, r3, asr #17
   10de4:	andeq	r0, r0, r4, lsr r9
   10de8:	strdeq	r0, [r0], -r3
   10dec:	andeq	r0, r0, r2, ror #17
   10df0:	ldrdeq	r0, [r0], -r4
   10df4:			; <UNDEFINED> instruction: 0x000008b6
   10df8:	ldrdeq	r0, [r0], -r3
   10dfc:	push	{fp, lr}
   10e00:	mov	fp, sp
   10e04:	bl	10774 <calloc@plt>
   10e08:	cmp	r0, #0
   10e0c:	popne	{fp, pc}
   10e10:	ldr	r0, [pc, #4]	; 10e1c <abort@plt+0x5b8>
   10e14:	add	r0, pc, r0
   10e18:	bl	112cc <error@@Base>
   10e1c:	andeq	r0, r0, lr, asr r8
   10e20:	push	{r4, r5, r6, sl, fp, lr}
   10e24:	add	fp, sp, #16
   10e28:	ldrb	r3, [r0]
   10e2c:	ldrb	ip, [r1]
   10e30:	mov	r2, r0
   10e34:	mov	r0, #0
   10e38:	cmp	r3, #0
   10e3c:	beq	10e7c <abort@plt+0x618>
   10e40:	add	r6, r2, #1
   10e44:	add	lr, r1, #1
   10e48:	mov	r2, #0
   10e4c:	uxtb	r4, ip
   10e50:	uxtb	r5, r3
   10e54:	cmp	r5, r4
   10e58:	bne	10e8c <abort@plt+0x628>
   10e5c:	ldrb	r3, [r6, r2]
   10e60:	ldrb	ip, [lr, r2]
   10e64:	add	r2, r2, #1
   10e68:	cmp	r3, #0
   10e6c:	bne	10e4c <abort@plt+0x5e8>
   10e70:	cmp	ip, #0
   10e74:	bne	10e88 <abort@plt+0x624>
   10e78:	pop	{r4, r5, r6, sl, fp, pc}
   10e7c:	mov	r2, #0
   10e80:	cmp	ip, #0
   10e84:	beq	10e78 <abort@plt+0x614>
   10e88:	mov	r3, #0
   10e8c:	ldrb	r1, [r1, r2]
   10e90:	uxtb	r2, r3
   10e94:	mov	r0, #1
   10e98:	cmp	r2, r1
   10e9c:	mvncc	r0, #0
   10ea0:	pop	{r4, r5, r6, sl, fp, pc}
   10ea4:	push	{r4, r5, fp, lr}
   10ea8:	add	fp, sp, #8
   10eac:	mov	r5, r1
   10eb0:	cmp	r0, #0
   10eb4:	beq	10ee8 <abort@plt+0x684>
   10eb8:	mov	r1, r5
   10ebc:	mov	r4, r0
   10ec0:	bl	10780 <fopen@plt>
   10ec4:	cmp	r0, #0
   10ec8:	popne	{r4, r5, fp, pc}
   10ecc:	ldrb	r0, [r5]
   10ed0:	cmp	r0, #119	; 0x77
   10ed4:	bne	10f0c <abort@plt+0x6a8>
   10ed8:	ldr	r0, [pc, #72]	; 10f28 <abort@plt+0x6c4>
   10edc:	mov	r1, r4
   10ee0:	add	r0, pc, r0
   10ee4:	bl	1131c <error@@Base+0x50>
   10ee8:	ldrb	r0, [r5]
   10eec:	ldr	r1, [pc, #40]	; 10f1c <abort@plt+0x6b8>
   10ef0:	ldr	r1, [pc, r1]
   10ef4:	ldr	r2, [pc, #36]	; 10f20 <abort@plt+0x6bc>
   10ef8:	cmp	r0, #114	; 0x72
   10efc:	ldr	r2, [pc, r2]
   10f00:	moveq	r2, r1
   10f04:	ldr	r0, [r2]
   10f08:	pop	{r4, r5, fp, pc}
   10f0c:	ldr	r0, [pc, #16]	; 10f24 <abort@plt+0x6c0>
   10f10:	mov	r1, r4
   10f14:	add	r0, pc, r0
   10f18:	bl	1131c <error@@Base+0x50>
   10f1c:	andeq	r1, r1, r0, lsl #3
   10f20:	andeq	r1, r1, ip, ror r1
   10f24:	andeq	r0, r0, lr, lsl #15
   10f28:	andeq	r0, r0, ip, lsr #15
   10f2c:	ldr	r1, [pc, #40]	; 10f5c <abort@plt+0x6f8>
   10f30:	ldr	r1, [pc, r1]
   10f34:	ldr	r1, [r1]
   10f38:	cmp	r1, r0
   10f3c:	bxeq	lr
   10f40:	ldr	r1, [pc, #24]	; 10f60 <abort@plt+0x6fc>
   10f44:	ldr	r1, [pc, r1]
   10f48:	ldr	r1, [r1]
   10f4c:	cmp	r1, r0
   10f50:	beq	10f58 <abort@plt+0x6f4>
   10f54:	b	10840 <fclose@plt>
   10f58:	bx	lr
   10f5c:	andeq	r1, r1, r0, asr #2
   10f60:	andeq	r1, r1, r4, lsr r1
   10f64:	push	{fp, lr}
   10f68:	mov	fp, sp
   10f6c:	sub	sp, sp, #88	; 0x58
   10f70:	mov	r1, r0
   10f74:	mov	r2, sp
   10f78:	mov	r0, #3
   10f7c:	bl	107bc <__xstat@plt>
   10f80:	clz	r0, r0
   10f84:	lsr	r0, r0, #5
   10f88:	mov	sp, fp
   10f8c:	pop	{fp, pc}
   10f90:	push	{r4, r5, fp, lr}
   10f94:	add	fp, sp, #8
   10f98:	sub	sp, sp, #104	; 0x68
   10f9c:	ldr	r0, [pc, #92]	; 11000 <abort@plt+0x79c>
   10fa0:	add	r0, pc, r0
   10fa4:	ldrh	r1, [r0]
   10fa8:	add	r5, r1, #1
   10fac:	strh	r5, [r0]
   10fb0:	ldr	r0, [pc, #76]	; 11004 <abort@plt+0x7a0>
   10fb4:	ldr	r0, [pc, r0]
   10fb8:	ldr	r4, [r0]
   10fbc:	bl	107f8 <getpid@plt>
   10fc0:	mov	r3, r0
   10fc4:	sxth	r0, r5
   10fc8:	add	r5, sp, #4
   10fcc:	mov	r2, r4
   10fd0:	str	r0, [sp]
   10fd4:	mov	r0, r5
   10fd8:	ldr	r1, [pc, #40]	; 11008 <abort@plt+0x7a4>
   10fdc:	add	r1, pc, r1
   10fe0:	bl	1084c <sprintf@plt>
   10fe4:	mov	r0, r5
   10fe8:	bl	107a4 <strdup@plt>
   10fec:	mov	r4, r0
   10ff0:	bl	107b0 <unlink@plt>
   10ff4:	mov	r0, r4
   10ff8:	sub	sp, fp, #8
   10ffc:	pop	{r4, r5, fp, pc}
   11000:	andeq	r1, r1, r6, asr r1
   11004:	strheq	r1, [r1], -r4
   11008:	andeq	r0, r0, pc, ror #13
   1100c:	push	{r4, sl, fp, lr}
   11010:	add	fp, sp, #8
   11014:	mov	r4, r0
   11018:	bl	1081c <strlen@plt>
   1101c:	sub	r0, r0, #1
   11020:	sxth	r0, r0
   11024:	cmp	r0, #0
   11028:	bmi	11038 <abort@plt+0x7d4>
   1102c:	ldrb	r1, [r4, r0]
   11030:	cmp	r1, #47	; 0x2f
   11034:	bne	1101c <abort@plt+0x7b8>
   11038:	add	r0, r0, r4
   1103c:	add	r0, r0, #1
   11040:	pop	{r4, sl, fp, pc}
   11044:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11048:	add	fp, sp, #28
   1104c:	sub	sp, sp, #12
   11050:	stmib	sp, {r0, r1}
   11054:	mov	r6, r3
   11058:	str	r2, [sp]
   1105c:	ldr	r4, [r1]
   11060:	mov	r0, r4
   11064:	bl	1081c <strlen@plt>
   11068:	sub	r0, r0, #1
   1106c:	sxth	r0, r0
   11070:	cmp	r0, #0
   11074:	bmi	11084 <abort@plt+0x820>
   11078:	ldrb	r1, [r4, r0]
   1107c:	cmp	r1, #47	; 0x2f
   11080:	bne	11068 <abort@plt+0x804>
   11084:	ldr	r1, [pc, #484]	; 11270 <abort@plt+0xa0c>
   11088:	add	r0, r0, r4
   1108c:	add	r0, r0, #1
   11090:	ldr	r1, [pc, r1]
   11094:	str	r0, [r1]
   11098:	mov	r0, #2
   1109c:	ldr	r4, [pc, #464]	; 11274 <abort@plt+0xa10>
   110a0:	add	r4, pc, r4
   110a4:	mov	r1, r4
   110a8:	bl	107e0 <__sysv_signal@plt>
   110ac:	mov	r0, #15
   110b0:	mov	r1, r4
   110b4:	bl	107e0 <__sysv_signal@plt>
   110b8:	ldr	r0, [sp, #4]
   110bc:	ldr	r5, [r0]
   110c0:	cmp	r5, #1
   110c4:	bne	110dc <abort@plt+0x878>
   110c8:	ldr	r0, [pc, #424]	; 11278 <abort@plt+0xa14>
   110cc:	ldr	r0, [pc, r0]
   110d0:	ldrb	r0, [r0]
   110d4:	cmp	r0, #0
   110d8:	bne	11258 <abort@plt+0x9f4>
   110dc:	ldr	ip, [sp, #8]
   110e0:	mov	r8, #0
   110e4:	cmp	r5, #2
   110e8:	blt	11234 <abort@plt+0x9d0>
   110ec:	mov	r8, #0
   110f0:	mov	r7, #1
   110f4:	mov	r9, #1
   110f8:	ldr	r4, [ip, r7, lsl #2]
   110fc:	ldrb	r0, [r4]
   11100:	cmp	r0, #45	; 0x2d
   11104:	bne	111dc <abort@plt+0x978>
   11108:	ldrb	sl, [r4, #1]
   1110c:	cmp	sl, #0
   11110:	beq	111dc <abort@plt+0x978>
   11114:	mov	r0, r4
   11118:	bl	1081c <strlen@plt>
   1111c:	mov	r2, r0
   11120:	ldr	r0, [pc, #340]	; 1127c <abort@plt+0xa18>
   11124:	mov	r1, r4
   11128:	add	r0, pc, r0
   1112c:	bl	10858 <strncmp@plt>
   11130:	cmp	r0, #0
   11134:	beq	11258 <abort@plt+0x9f4>
   11138:	ldr	ip, [sp, #8]
   1113c:	add	r1, r7, #1
   11140:	mov	r0, #0
   11144:	cmp	r1, r5
   11148:	ldrlt	r0, [ip, r1, lsl #2]
   1114c:	cmp	r6, #0
   11150:	ldrbne	r2, [r6]
   11154:	cmpne	r2, #0
   11158:	beq	11248 <abort@plt+0x9e4>
   1115c:	mov	r1, #0
   11160:	cmp	sl, r2
   11164:	beq	1118c <abort@plt+0x928>
   11168:	mov	r2, #1
   1116c:	sxth	r1, r2
   11170:	add	r3, r1, r1, lsl #1
   11174:	ldrb	r3, [r6, r3, lsl #2]
   11178:	cmp	r3, #0
   1117c:	beq	11248 <abort@plt+0x9e4>
   11180:	add	r2, r2, #1
   11184:	cmp	sl, r3
   11188:	bne	1116c <abort@plt+0x908>
   1118c:	add	r1, r1, r1, lsl #1
   11190:	add	r3, r6, r1, lsl #2
   11194:	ldr	r1, [r3, #4]
   11198:	cmp	r1, #0
   1119c:	beq	111fc <abort@plt+0x998>
   111a0:	mov	r2, r4
   111a4:	cmp	r0, #0
   111a8:	ldrb	r7, [r2, #2]!
   111ac:	cmpeq	r7, #0
   111b0:	beq	111fc <abort@plt+0x998>
   111b4:	ldr	r3, [r1]
   111b8:	cmp	r3, #0
   111bc:	bne	11260 <abort@plt+0x9fc>
   111c0:	cmp	r7, #0
   111c4:	movne	r0, r2
   111c8:	str	r0, [r1]
   111cc:	ldrb	r0, [r2]
   111d0:	cmp	r0, #0
   111d4:	addeq	r9, r9, #1
   111d8:	b	111e8 <abort@plt+0x984>
   111dc:	sxth	r0, r8
   111e0:	add	r8, r8, #1
   111e4:	str	r4, [ip, r0, lsl #2]
   111e8:	add	r9, r9, #1
   111ec:	sxth	r7, r9
   111f0:	cmp	r5, r7
   111f4:	bgt	110f8 <abort@plt+0x894>
   111f8:	b	11234 <abort@plt+0x9d0>
   111fc:	ldr	r0, [r3, #8]
   11200:	cmp	r0, #0
   11204:	beq	11248 <abort@plt+0x9e4>
   11208:	ldrb	r1, [r4, #2]
   1120c:	cmp	r1, #0
   11210:	bne	11248 <abort@plt+0x9e4>
   11214:	ldrb	r1, [r0]
   11218:	cmp	r1, #0
   1121c:	bne	11260 <abort@plt+0x9fc>
   11220:	mov	r1, #1
   11224:	strb	r1, [r0]
   11228:	ldr	r0, [sp, #4]
   1122c:	ldr	r5, [r0]
   11230:	b	111e8 <abort@plt+0x984>
   11234:	ldr	r1, [sp, #4]
   11238:	sxth	r0, r8
   1123c:	str	r0, [r1]
   11240:	sub	sp, fp, #28
   11244:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11248:	ldr	r0, [pc, #52]	; 11284 <abort@plt+0xa20>
   1124c:	mov	r1, r4
   11250:	add	r0, pc, r0
   11254:	bl	1131c <error@@Base+0x50>
   11258:	ldr	r0, [sp]
   1125c:	bl	113f8 <error@@Base+0x12c>
   11260:	ldr	r0, [pc, #24]	; 11280 <abort@plt+0xa1c>
   11264:	mov	r1, r4
   11268:	add	r0, pc, r0
   1126c:	bl	1131c <error@@Base+0x50>
   11270:	ldrdeq	r0, [r1], -r8
   11274:	andeq	r0, r0, r8, lsl r3
   11278:	andeq	r0, r1, ip, lsl #31
   1127c:	andeq	r0, r0, r0, asr #11
   11280:	andeq	r0, r0, r4, lsr #9
   11284:	andeq	r0, r0, sp, lsr #9
   11288:	push	{fp, lr}
   1128c:	mov	fp, sp
   11290:	mov	r0, #0
   11294:	bl	11298 <abort@plt+0xa34>
   11298:	push	{fp, lr}
   1129c:	mov	fp, sp
   112a0:	mov	r4, r0
   112a4:	ldr	r0, [pc, #28]	; 112c8 <abort@plt+0xa64>
   112a8:	ldr	r0, [pc, r0]
   112ac:	ldr	r0, [r0]
   112b0:	cmp	r0, #0
   112b4:	beq	112bc <abort@plt+0xa58>
   112b8:	blx	r0
   112bc:	bl	11458 <error@@Base+0x18c>
   112c0:	mov	r0, r4
   112c4:	bl	10804 <exit@plt>
   112c8:	andeq	r0, r1, r4, asr #27

000112cc <error@@Base>:
   112cc:	push	{fp, lr}
   112d0:	mov	fp, sp
   112d4:	mov	r3, r0
   112d8:	ldr	r0, [pc, #44]	; 1130c <error@@Base+0x40>
   112dc:	ldr	r0, [pc, r0]
   112e0:	ldr	r2, [r0]
   112e4:	ldr	r0, [pc, #36]	; 11310 <error@@Base+0x44>
   112e8:	ldr	r0, [pc, r0]
   112ec:	ldr	r0, [r0]
   112f0:	ldr	r1, [pc, #28]	; 11314 <error@@Base+0x48>
   112f4:	add	r1, pc, r1
   112f8:	bl	10828 <fprintf@plt>
   112fc:	ldr	r0, [pc, #20]	; 11318 <error@@Base+0x4c>
   11300:	ldr	r0, [pc, r0]
   11304:	ldr	r0, [r0]
   11308:	bl	11298 <abort@plt+0xa34>
   1130c:	andeq	r0, r1, ip, lsl #27
   11310:	andeq	r0, r1, r8, ror sp
   11314:	andeq	r0, r0, r2, asr #7
   11318:	andeq	r0, r1, ip, ror sp
   1131c:	push	{fp, lr}
   11320:	mov	fp, sp
   11324:	sub	sp, sp, #8
   11328:	mov	r3, r0
   1132c:	ldr	r0, [pc, #48]	; 11364 <error@@Base+0x98>
   11330:	ldr	r0, [pc, r0]
   11334:	ldr	r2, [r0]
   11338:	ldr	r0, [pc, #40]	; 11368 <error@@Base+0x9c>
   1133c:	ldr	r0, [pc, r0]
   11340:	str	r1, [sp]
   11344:	ldr	r0, [r0]
   11348:	ldr	r1, [pc, #28]	; 1136c <error@@Base+0xa0>
   1134c:	add	r1, pc, r1
   11350:	bl	10828 <fprintf@plt>
   11354:	ldr	r0, [pc, #20]	; 11370 <error@@Base+0xa4>
   11358:	ldr	r0, [pc, r0]
   1135c:	ldr	r0, [r0]
   11360:	bl	11298 <abort@plt+0xa34>
   11364:	andeq	r0, r1, r8, lsr sp
   11368:	andeq	r0, r1, r4, lsr #26
   1136c:	andeq	r0, r0, r2, ror r3
   11370:	andeq	r0, r1, r4, lsr #26
   11374:	push	{fp, lr}
   11378:	mov	fp, sp
   1137c:	sub	sp, sp, #8
   11380:	mov	r3, r0
   11384:	ldr	r0, [pc, #40]	; 113b4 <error@@Base+0xe8>
   11388:	ldr	r0, [pc, r0]
   1138c:	ldr	r2, [r0]
   11390:	ldr	r0, [pc, #32]	; 113b8 <error@@Base+0xec>
   11394:	ldr	r0, [pc, r0]
   11398:	str	r1, [sp]
   1139c:	ldr	r0, [r0]
   113a0:	ldr	r1, [pc, #20]	; 113bc <error@@Base+0xf0>
   113a4:	add	r1, pc, r1
   113a8:	bl	10828 <fprintf@plt>
   113ac:	mov	sp, fp
   113b0:	pop	{fp, pc}
   113b4:	andeq	r0, r1, r0, ror #25
   113b8:	andeq	r0, r1, ip, asr #25
   113bc:	andeq	r0, r0, sl, lsl r3
   113c0:	push	{fp, lr}
   113c4:	mov	fp, sp
   113c8:	ldr	r0, [pc, #32]	; 113f0 <error@@Base+0x124>
   113cc:	add	r0, pc, r0
   113d0:	ldrb	r1, [r0]
   113d4:	cmp	r1, #1
   113d8:	popeq	{fp, pc}
   113dc:	mov	r1, #1
   113e0:	strb	r1, [r0]
   113e4:	ldr	r0, [pc, #8]	; 113f4 <error@@Base+0x128>
   113e8:	add	r0, pc, r0
   113ec:	bl	112cc <error@@Base>
   113f0:	andeq	r0, r1, ip, lsr #26
   113f4:	strdeq	r0, [r0], -r1
   113f8:	push	{fp, lr}
   113fc:	mov	fp, sp
   11400:	mov	r3, r0
   11404:	ldr	r0, [pc, #60]	; 11448 <error@@Base+0x17c>
   11408:	ldr	r0, [pc, r0]
   1140c:	ldr	r0, [r0]
   11410:	cmp	r0, #0
   11414:	bne	11440 <error@@Base+0x174>
   11418:	ldr	r0, [pc, #44]	; 1144c <error@@Base+0x180>
   1141c:	ldr	r0, [pc, r0]
   11420:	ldr	r2, [r0]
   11424:	ldr	r0, [pc, #36]	; 11450 <error@@Base+0x184>
   11428:	ldr	r0, [pc, r0]
   1142c:	ldr	r0, [r0]
   11430:	ldr	r1, [pc, #28]	; 11454 <error@@Base+0x188>
   11434:	add	r1, pc, r1
   11438:	bl	10828 <fprintf@plt>
   1143c:	bl	11288 <abort@plt+0xa24>
   11440:	blx	r0
   11444:	bl	11288 <abort@plt+0xa24>
   11448:	andeq	r0, r1, r4, asr ip
   1144c:	andeq	r0, r1, ip, asr #24
   11450:	andeq	r0, r1, r8, lsr ip
   11454:			; <UNDEFINED> instruction: 0x000002ba
   11458:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1145c:	add	fp, sp, #24
   11460:	sub	sp, sp, #104	; 0x68
   11464:	ldr	r8, [pc, #124]	; 114e8 <error@@Base+0x21c>
   11468:	add	r8, pc, r8
   1146c:	ldrsh	r0, [r8]
   11470:	cmp	r0, #1
   11474:	blt	114e0 <error@@Base+0x214>
   11478:	ldr	r9, [pc, #108]	; 114ec <error@@Base+0x220>
   1147c:	mov	r7, #1
   11480:	add	r4, sp, #4
   11484:	ldr	r9, [pc, r9]
   11488:	ldr	r5, [pc, #96]	; 114f0 <error@@Base+0x224>
   1148c:	add	r5, pc, r5
   11490:	ldr	r6, [r9]
   11494:	bl	107f8 <getpid@plt>
   11498:	mov	r3, r0
   1149c:	sxth	r0, r7
   114a0:	mov	r1, r5
   114a4:	mov	r2, r6
   114a8:	str	r0, [sp]
   114ac:	mov	r0, r4
   114b0:	bl	1084c <sprintf@plt>
   114b4:	mov	r0, r4
   114b8:	bl	107a4 <strdup@plt>
   114bc:	mov	r6, r0
   114c0:	bl	107b0 <unlink@plt>
   114c4:	mov	r0, r6
   114c8:	bl	1078c <free@plt>
   114cc:	add	r0, r7, #1
   114d0:	sxth	r7, r0
   114d4:	ldrsh	r0, [r8]
   114d8:	cmp	r7, r0
   114dc:	ble	11490 <error@@Base+0x1c4>
   114e0:	sub	sp, fp, #24
   114e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   114e8:	andeq	r0, r1, lr, lsl #25
   114ec:	andeq	r0, r1, r4, ror #23
   114f0:	andeq	r0, r0, pc, lsr r2
   114f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   114f8:	mov	r7, r0
   114fc:	ldr	r6, [pc, #72]	; 1154c <error@@Base+0x280>
   11500:	ldr	r5, [pc, #72]	; 11550 <error@@Base+0x284>
   11504:	add	r6, pc, r6
   11508:	add	r5, pc, r5
   1150c:	sub	r6, r6, r5
   11510:	mov	r8, r1
   11514:	mov	r9, r2
   11518:	bl	10754 <calloc@plt-0x20>
   1151c:	asrs	r6, r6, #2
   11520:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11524:	mov	r4, #0
   11528:	add	r4, r4, #1
   1152c:	ldr	r3, [r5], #4
   11530:	mov	r2, r9
   11534:	mov	r1, r8
   11538:	mov	r0, r7
   1153c:	blx	r3
   11540:	cmp	r6, r4
   11544:	bne	11528 <error@@Base+0x25c>
   11548:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1154c:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11550:	andeq	r0, r1, r8, ror #19
   11554:	bx	lr

Disassembly of section .fini:

00011558 <.fini>:
   11558:	push	{r3, lr}
   1155c:	pop	{r3, pc}
