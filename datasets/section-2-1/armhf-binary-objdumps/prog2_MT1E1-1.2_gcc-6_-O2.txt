
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

0001074c <.init>:
   1074c:	push	{r3, lr}
   10750:	bl	10934 <_start@@Base+0x3c>
   10754:	pop	{r3, pc}

Disassembly of section .plt:

00010758 <strcmp@plt-0x14>:
   10758:	push	{lr}		; (str lr, [sp, #-4]!)
   1075c:	ldr	lr, [pc, #4]	; 10768 <strcmp@plt-0x4>
   10760:	add	lr, pc, lr
   10764:	ldr	pc, [lr, #8]!
   10768:	muleq	r1, r8, r8

0001076c <strcmp@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #16, 20	; 0x10000
   10774:	ldr	pc, [ip, #2200]!	; 0x898

00010778 <printf@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #16, 20	; 0x10000
   10780:	ldr	pc, [ip, #2192]!	; 0x890

00010784 <__isoc99_fscanf@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #16, 20	; 0x10000
   1078c:	ldr	pc, [ip, #2184]!	; 0x888

00010790 <fopen@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #16, 20	; 0x10000
   10798:	ldr	pc, [ip, #2176]!	; 0x880

0001079c <free@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #16, 20	; 0x10000
   107a4:	ldr	pc, [ip, #2168]!	; 0x878

000107a8 <realloc@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #16, 20	; 0x10000
   107b0:	ldr	pc, [ip, #2160]!	; 0x870

000107b4 <fwrite@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #16, 20	; 0x10000
   107bc:	ldr	pc, [ip, #2152]!	; 0x868

000107c0 <strcpy@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #16, 20	; 0x10000
   107c8:	ldr	pc, [ip, #2144]!	; 0x860

000107cc <malloc@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #16, 20	; 0x10000
   107d4:	ldr	pc, [ip, #2136]!	; 0x858

000107d8 <__libc_start_main@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #16, 20	; 0x10000
   107e0:	ldr	pc, [ip, #2128]!	; 0x850

000107e4 <__gmon_start__@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #16, 20	; 0x10000
   107ec:	ldr	pc, [ip, #2120]!	; 0x848

000107f0 <fprintf@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #16, 20	; 0x10000
   107f8:	ldr	pc, [ip, #2112]!	; 0x840

000107fc <fclose@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #16, 20	; 0x10000
   10804:	ldr	pc, [ip, #2104]!	; 0x838

00010808 <__isoc99_scanf@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #16, 20	; 0x10000
   10810:	ldr	pc, [ip, #2096]!	; 0x830

00010814 <abort@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #16, 20	; 0x10000
   1081c:	ldr	pc, [ip, #2088]!	; 0x828

Disassembly of section .text:

00010820 <main@@Base>:
   10820:	push	{r4, r5, r6, lr}
   10824:	sub	sp, sp, #112	; 0x70
   10828:	ldr	r5, [pc, #180]	; 108e4 <main@@Base+0xc4>
   1082c:	ldr	r0, [pc, #180]	; 108e8 <main@@Base+0xc8>
   10830:	add	r4, sp, #8
   10834:	add	r5, pc, r5
   10838:	add	r0, pc, r0
   1083c:	bl	10778 <printf@plt>
   10840:	mov	r1, r4
   10844:	mov	r0, r5
   10848:	bl	10808 <__isoc99_scanf@plt>
   1084c:	ldr	r0, [pc, #152]	; 108ec <main@@Base+0xcc>
   10850:	add	r6, sp, #60	; 0x3c
   10854:	add	r0, pc, r0
   10858:	bl	10778 <printf@plt>
   1085c:	mov	r1, r6
   10860:	mov	r0, r5
   10864:	bl	10808 <__isoc99_scanf@plt>
   10868:	ldr	r1, [pc, #128]	; 108f0 <main@@Base+0xd0>
   1086c:	mov	r0, r4
   10870:	add	r1, pc, r1
   10874:	bl	10790 <fopen@plt>
   10878:	subs	r4, r0, #0
   1087c:	beq	108dc <main@@Base+0xbc>
   10880:	ldr	r1, [pc, #108]	; 108f4 <main@@Base+0xd4>
   10884:	mov	r0, r6
   10888:	add	r1, pc, r1
   1088c:	bl	10790 <fopen@plt>
   10890:	subs	r5, r0, #0
   10894:	beq	108dc <main@@Base+0xbc>
   10898:	add	r1, sp, #4
   1089c:	mov	r0, r4
   108a0:	bl	10a20 <analisarFicheiro@@Base>
   108a4:	ldr	r2, [sp, #4]
   108a8:	mov	r1, r0
   108ac:	mov	r6, r0
   108b0:	mov	r0, r5
   108b4:	bl	10b00 <gerarRelatorio@@Base>
   108b8:	mov	r0, r4
   108bc:	bl	107fc <fclose@plt>
   108c0:	mov	r0, r5
   108c4:	bl	107fc <fclose@plt>
   108c8:	mov	r0, r6
   108cc:	bl	1079c <free@plt>
   108d0:	mov	r0, #0
   108d4:	add	sp, sp, #112	; 0x70
   108d8:	pop	{r4, r5, r6, pc}
   108dc:	mov	r0, #1
   108e0:	b	108d4 <main@@Base+0xb4>
   108e4:			; <UNDEFINED> instruction: 0x000003b0
   108e8:	strdeq	r0, [r0], -r8
   108ec:	strdeq	r0, [r0], -r4
   108f0:	andeq	r0, r0, ip, ror #7
   108f4:	ldrdeq	r0, [r0], -r8

000108f8 <_start@@Base>:
   108f8:	mov	fp, #0
   108fc:	mov	lr, #0
   10900:	pop	{r1}		; (ldr r1, [sp], #4)
   10904:	mov	r2, sp
   10908:	push	{r2}		; (str r2, [sp, #-4]!)
   1090c:	push	{r0}		; (str r0, [sp, #-4]!)
   10910:	ldr	ip, [pc, #16]	; 10928 <_start@@Base+0x30>
   10914:	push	{ip}		; (str ip, [sp, #-4]!)
   10918:	ldr	r0, [pc, #12]	; 1092c <_start@@Base+0x34>
   1091c:	ldr	r3, [pc, #12]	; 10930 <_start@@Base+0x38>
   10920:	bl	107d8 <__libc_start_main@plt>
   10924:	bl	10814 <abort@plt>
   10928:	ldrdeq	r0, [r1], -ip
   1092c:	andeq	r0, r1, r0, lsr #16
   10930:	andeq	r0, r1, ip, ror fp
   10934:	ldr	r3, [pc, #20]	; 10950 <_start@@Base+0x58>
   10938:	ldr	r2, [pc, #20]	; 10954 <_start@@Base+0x5c>
   1093c:	add	r3, pc, r3
   10940:	ldr	r2, [r3, r2]
   10944:	cmp	r2, #0
   10948:	bxeq	lr
   1094c:	b	107e4 <__gmon_start__@plt>
   10950:			; <UNDEFINED> instruction: 0x000106bc
   10954:	andeq	r0, r0, r8, asr #32
   10958:	ldr	r3, [pc, #28]	; 1097c <_start@@Base+0x84>
   1095c:	ldr	r0, [pc, #28]	; 10980 <_start@@Base+0x88>
   10960:	sub	r3, r3, r0
   10964:	cmp	r3, #6
   10968:	bxls	lr
   1096c:	ldr	r3, [pc, #16]	; 10984 <_start@@Base+0x8c>
   10970:	cmp	r3, #0
   10974:	bxeq	lr
   10978:	bx	r3
   1097c:	andeq	r1, r2, r7, asr r0
   10980:	andeq	r1, r2, r4, asr r0
   10984:	andeq	r0, r0, r0
   10988:	ldr	r1, [pc, #36]	; 109b4 <_start@@Base+0xbc>
   1098c:	ldr	r0, [pc, #36]	; 109b8 <_start@@Base+0xc0>
   10990:	sub	r1, r1, r0
   10994:	asr	r1, r1, #2
   10998:	add	r1, r1, r1, lsr #31
   1099c:	asrs	r1, r1, #1
   109a0:	bxeq	lr
   109a4:	ldr	r3, [pc, #16]	; 109bc <_start@@Base+0xc4>
   109a8:	cmp	r3, #0
   109ac:	bxeq	lr
   109b0:	bx	r3
   109b4:	andeq	r1, r2, r4, asr r0
   109b8:	andeq	r1, r2, r4, asr r0
   109bc:	andeq	r0, r0, r0
   109c0:	push	{r4, lr}
   109c4:	ldr	r4, [pc, #24]	; 109e4 <_start@@Base+0xec>
   109c8:	ldrb	r3, [r4]
   109cc:	cmp	r3, #0
   109d0:	popne	{r4, pc}
   109d4:	bl	10958 <_start@@Base+0x60>
   109d8:	mov	r3, #1
   109dc:	strb	r3, [r4]
   109e0:	pop	{r4, pc}
   109e4:	andeq	r1, r2, r4, asr r0
   109e8:	ldr	r0, [pc, #40]	; 10a18 <_start@@Base+0x120>
   109ec:	ldr	r3, [r0]
   109f0:	cmp	r3, #0
   109f4:	bne	109fc <_start@@Base+0x104>
   109f8:	b	10988 <_start@@Base+0x90>
   109fc:	ldr	r3, [pc, #24]	; 10a1c <_start@@Base+0x124>
   10a00:	cmp	r3, #0
   10a04:	beq	109f8 <_start@@Base+0x100>
   10a08:	push	{r4, lr}
   10a0c:	blx	r3
   10a10:	pop	{r4, lr}
   10a14:	b	10988 <_start@@Base+0x90>
   10a18:	andeq	r0, r2, r4, lsl pc
   10a1c:	andeq	r0, r0, r0

00010a20 <analisarFicheiro@@Base>:
   10a20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a24:	sub	sp, sp, #68	; 0x44
   10a28:	mov	r8, r0
   10a2c:	mov	r0, #104	; 0x68
   10a30:	str	r1, [sp, #4]
   10a34:	bl	107cc <malloc@plt>
   10a38:	ldr	r7, [pc, #188]	; 10afc <analisarFicheiro@@Base+0xdc>
   10a3c:	mov	r4, #0
   10a40:	add	r5, sp, #12
   10a44:	add	r7, pc, r7
   10a48:	mov	sl, #104	; 0x68
   10a4c:	mov	r6, r0
   10a50:	mov	r2, r5
   10a54:	mov	r1, r7
   10a58:	mov	r0, r8
   10a5c:	bl	10784 <__isoc99_fscanf@plt>
   10a60:	cmn	r0, #1
   10a64:	beq	10ae8 <analisarFicheiro@@Base+0xc8>
   10a68:	mov	r9, r6
   10a6c:	mov	fp, #0
   10a70:	b	10a8c <analisarFicheiro@@Base+0x6c>
   10a74:	cmp	r4, fp
   10a78:	add	fp, fp, #1
   10a7c:	beq	10ab0 <analisarFicheiro@@Base+0x90>
   10a80:	cmp	fp, r4
   10a84:	add	r9, r9, #104	; 0x68
   10a88:	bgt	10a50 <analisarFicheiro@@Base+0x30>
   10a8c:	mov	r1, r9
   10a90:	mov	r0, r5
   10a94:	bl	1076c <strcmp@plt>
   10a98:	cmp	r0, #0
   10a9c:	bne	10a74 <analisarFicheiro@@Base+0x54>
   10aa0:	ldr	r3, [r9, #100]	; 0x64
   10aa4:	add	r3, r3, #1
   10aa8:	str	r3, [r9, #100]	; 0x64
   10aac:	b	10a50 <analisarFicheiro@@Base+0x30>
   10ab0:	add	r4, r4, #1
   10ab4:	mov	r0, r6
   10ab8:	mul	r9, sl, r4
   10abc:	mov	r1, r9
   10ac0:	bl	107a8 <realloc@plt>
   10ac4:	sub	r3, r9, #104	; 0x68
   10ac8:	mov	r1, r5
   10acc:	add	r3, r0, r3
   10ad0:	mov	r6, r0
   10ad4:	mov	r0, r3
   10ad8:	bl	107c0 <strcpy@plt>
   10adc:	mov	r2, #1
   10ae0:	str	r2, [r0, #100]	; 0x64
   10ae4:	b	10a50 <analisarFicheiro@@Base+0x30>
   10ae8:	ldr	r3, [sp, #4]
   10aec:	mov	r0, r6
   10af0:	str	r4, [r3]
   10af4:	add	sp, sp, #68	; 0x44
   10af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10afc:	andeq	r0, r0, r0, lsr #3

00010b00 <gerarRelatorio@@Base>:
   10b00:	push	{r4, r5, r6, r7, r8, lr}
   10b04:	mov	r3, r0
   10b08:	mov	r6, r0
   10b0c:	ldr	r0, [pc, #96]	; 10b74 <gerarRelatorio@@Base+0x74>
   10b10:	mov	r7, r2
   10b14:	sub	sp, sp, #8
   10b18:	mov	r4, r1
   10b1c:	mov	r2, #53	; 0x35
   10b20:	mov	r1, #1
   10b24:	add	r0, pc, r0
   10b28:	bl	107b4 <fwrite@plt>
   10b2c:	cmp	r7, #0
   10b30:	ble	10b6c <gerarRelatorio@@Base+0x6c>
   10b34:	ldr	r8, [pc, #60]	; 10b78 <gerarRelatorio@@Base+0x78>
   10b38:	mov	r5, #0
   10b3c:	add	r8, pc, r8
   10b40:	ldr	r3, [r4, #100]	; 0x64
   10b44:	add	r5, r5, #1
   10b48:	str	r3, [sp]
   10b4c:	mov	r2, r5
   10b50:	mov	r3, r4
   10b54:	mov	r1, r8
   10b58:	mov	r0, r6
   10b5c:	bl	107f0 <fprintf@plt>
   10b60:	cmp	r7, r5
   10b64:	add	r4, r4, #104	; 0x68
   10b68:	bne	10b40 <gerarRelatorio@@Base+0x40>
   10b6c:	add	sp, sp, #8
   10b70:	pop	{r4, r5, r6, r7, r8, pc}
   10b74:	andeq	r0, r0, r4, asr #1
   10b78:	andeq	r0, r0, r4, ror #1

00010b7c <__libc_csu_init@@Base>:
   10b7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b80:	mov	r7, r0
   10b84:	ldr	r6, [pc, #72]	; 10bd4 <__libc_csu_init@@Base+0x58>
   10b88:	ldr	r5, [pc, #72]	; 10bd8 <__libc_csu_init@@Base+0x5c>
   10b8c:	add	r6, pc, r6
   10b90:	add	r5, pc, r5
   10b94:	sub	r6, r6, r5
   10b98:	mov	r8, r1
   10b9c:	mov	r9, r2
   10ba0:	bl	1074c <strcmp@plt-0x20>
   10ba4:	asrs	r6, r6, #2
   10ba8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bac:	mov	r4, #0
   10bb0:	add	r4, r4, #1
   10bb4:	ldr	r3, [r5], #4
   10bb8:	mov	r2, r9
   10bbc:	mov	r1, r8
   10bc0:	mov	r0, r7
   10bc4:	blx	r3
   10bc8:	cmp	r6, r4
   10bcc:	bne	10bb0 <__libc_csu_init@@Base+0x34>
   10bd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bd4:	andeq	r0, r1, ip, ror r3
   10bd8:	andeq	r0, r1, r4, ror r3

00010bdc <__libc_csu_fini@@Base>:
   10bdc:	bx	lr

Disassembly of section .fini:

00010be0 <.fini>:
   10be0:	push	{r3, lr}
   10be4:	pop	{r3, pc}
