
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010678 <.init>:
   10678:	push	{r3, lr}
   1067c:	bl	11054 <sprintf@plt+0x8c0>
   10680:	pop	{r3, pc}

Disassembly of section .plt:

00010684 <open@plt-0x14>:
   10684:	push	{lr}		; (str lr, [sp, #-4]!)
   10688:	ldr	lr, [pc, #4]	; 10694 <open@plt-0x4>
   1068c:	add	lr, pc, lr
   10690:	ldr	pc, [lr, #8]!
   10694:	andeq	r1, r1, ip, ror #18

00010698 <open@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #69632	; 0x11000
   106a0:	ldr	pc, [ip, #2412]!	; 0x96c

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #69632	; 0x11000
   106ac:	ldr	pc, [ip, #2404]!	; 0x964

000106b0 <srand@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2396]!	; 0x95c

000106bc <__libc_start_main@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2388]!	; 0x954

000106c8 <__gmon_start__@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2380]!	; 0x94c

000106d4 <getpass@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2372]!	; 0x944

000106e0 <calloc@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2364]!	; 0x93c

000106ec <free@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2356]!	; 0x934

000106f8 <read@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2348]!	; 0x92c

00010704 <strlen@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2340]!	; 0x924

00010710 <getopt@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2332]!	; 0x91c

0001071c <strtol@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2324]!	; 0x914

00010728 <printf@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2316]!	; 0x90c

00010734 <fwrite@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2308]!	; 0x904

00010740 <time@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2300]!	; 0x8fc

0001074c <strdup@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2292]!	; 0x8f4

00010758 <rb_crypt@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2284]!	; 0x8ec

00010764 <puts@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010770 <rand@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2268]!	; 0x8dc

0001077c <strcmp@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2260]!	; 0x8d4

00010788 <exit@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2252]!	; 0x8cc

00010794 <sprintf@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2244]!	; 0x8c4

Disassembly of section .text:

000107a0 <.text>:
   107a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   107a4:	mov	r5, #0
   107a8:	ldr	r6, [pc, #1948]	; 10f4c <sprintf@plt+0x7b8>
   107ac:	ldr	r3, [pc, #1948]	; 10f50 <sprintf@plt+0x7bc>
   107b0:	sub	sp, sp, #28
   107b4:	ldr	r9, [pc, #1944]	; 10f54 <sprintf@plt+0x7c0>
   107b8:	mov	r8, r0
   107bc:	mov	r7, r1
   107c0:	mov	r4, r5
   107c4:	mov	fp, r5
   107c8:	add	r6, pc, r6
   107cc:	mov	sl, #10
   107d0:	add	r3, pc, r3
   107d4:	add	r9, pc, r9
   107d8:	str	r5, [sp]
   107dc:	str	r5, [sp, #8]
   107e0:	str	r5, [sp, #4]
   107e4:	str	r3, [sp, #12]
   107e8:	mov	r2, r6
   107ec:	mov	r1, r7
   107f0:	mov	r0, r8
   107f4:	bl	10710 <getopt@plt>
   107f8:	cmn	r0, #1
   107fc:	beq	10a9c <sprintf@plt+0x308>
   10800:	sub	r3, r0, #63	; 0x3f
   10804:	cmp	r3, #58	; 0x3a
   10808:	addls	pc, pc, r3, lsl #2
   1080c:	b	10a8c <sprintf@plt+0x2f8>
   10810:	b	10a30 <sprintf@plt+0x29c>
   10814:	b	10a8c <sprintf@plt+0x2f8>
   10818:	b	10a8c <sprintf@plt+0x2f8>
   1081c:	b	10a8c <sprintf@plt+0x2f8>
   10820:	b	10a8c <sprintf@plt+0x2f8>
   10824:	b	10a8c <sprintf@plt+0x2f8>
   10828:	b	10a8c <sprintf@plt+0x2f8>
   1082c:	b	10a8c <sprintf@plt+0x2f8>
   10830:	b	10a8c <sprintf@plt+0x2f8>
   10834:	b	10a8c <sprintf@plt+0x2f8>
   10838:	b	10a8c <sprintf@plt+0x2f8>
   1083c:	b	10a8c <sprintf@plt+0x2f8>
   10840:	b	10a8c <sprintf@plt+0x2f8>
   10844:	b	10a8c <sprintf@plt+0x2f8>
   10848:	b	10a8c <sprintf@plt+0x2f8>
   1084c:	b	10a8c <sprintf@plt+0x2f8>
   10850:	b	10a8c <sprintf@plt+0x2f8>
   10854:	b	10a8c <sprintf@plt+0x2f8>
   10858:	b	10a8c <sprintf@plt+0x2f8>
   1085c:	b	10a8c <sprintf@plt+0x2f8>
   10860:	b	10a8c <sprintf@plt+0x2f8>
   10864:	b	10a8c <sprintf@plt+0x2f8>
   10868:	b	10a8c <sprintf@plt+0x2f8>
   1086c:	b	10a8c <sprintf@plt+0x2f8>
   10870:	b	10a8c <sprintf@plt+0x2f8>
   10874:	b	10a8c <sprintf@plt+0x2f8>
   10878:	b	10a8c <sprintf@plt+0x2f8>
   1087c:	b	10a8c <sprintf@plt+0x2f8>
   10880:	b	10a8c <sprintf@plt+0x2f8>
   10884:	b	10a8c <sprintf@plt+0x2f8>
   10888:	b	10a8c <sprintf@plt+0x2f8>
   1088c:	b	10a8c <sprintf@plt+0x2f8>
   10890:	b	10a8c <sprintf@plt+0x2f8>
   10894:	b	10a8c <sprintf@plt+0x2f8>
   10898:	b	10a8c <sprintf@plt+0x2f8>
   1089c:	b	10a24 <sprintf@plt+0x290>
   108a0:	b	10a8c <sprintf@plt+0x2f8>
   108a4:	b	10a8c <sprintf@plt+0x2f8>
   108a8:	b	10a8c <sprintf@plt+0x2f8>
   108ac:	b	10a8c <sprintf@plt+0x2f8>
   108b0:	b	10a8c <sprintf@plt+0x2f8>
   108b4:	b	1098c <sprintf@plt+0x1f8>
   108b8:	b	10a8c <sprintf@plt+0x2f8>
   108bc:	b	10a8c <sprintf@plt+0x2f8>
   108c0:	b	10a8c <sprintf@plt+0x2f8>
   108c4:	b	10968 <sprintf@plt+0x1d4>
   108c8:	b	10960 <sprintf@plt+0x1cc>
   108cc:	b	10a8c <sprintf@plt+0x2f8>
   108d0:	b	10a8c <sprintf@plt+0x2f8>
   108d4:	b	10948 <sprintf@plt+0x1b4>
   108d8:	b	10a8c <sprintf@plt+0x2f8>
   108dc:	b	10924 <sprintf@plt+0x190>
   108e0:	b	1090c <sprintf@plt+0x178>
   108e4:	b	10a8c <sprintf@plt+0x2f8>
   108e8:	b	10a8c <sprintf@plt+0x2f8>
   108ec:	b	10a8c <sprintf@plt+0x2f8>
   108f0:	b	10a8c <sprintf@plt+0x2f8>
   108f4:	b	10904 <sprintf@plt+0x170>
   108f8:	b	108fc <sprintf@plt+0x168>
   108fc:	orr	r4, r4, #128	; 0x80
   10900:	b	107e8 <sprintf@plt+0x54>
   10904:	orr	r4, r4, #64	; 0x40
   10908:	b	107e8 <sprintf@plt+0x54>
   1090c:	ldr	r3, [pc, #1604]	; 10f58 <sprintf@plt+0x7c4>
   10910:	orr	r4, r4, #2
   10914:	ldr	r3, [r9, r3]
   10918:	ldr	r3, [r3]
   1091c:	str	r3, [sp, #8]
   10920:	b	107e8 <sprintf@plt+0x54>
   10924:	ldr	r3, [pc, #1580]	; 10f58 <sprintf@plt+0x7c4>
   10928:	mov	r2, sl
   1092c:	mov	r1, fp
   10930:	ldr	r3, [r9, r3]
   10934:	orr	r4, r4, #32
   10938:	ldr	r0, [r3]
   1093c:	bl	1071c <strtol@plt>
   10940:	mov	r5, r0
   10944:	b	107e8 <sprintf@plt+0x54>
   10948:	ldr	r3, [pc, #1544]	; 10f58 <sprintf@plt+0x7c4>
   1094c:	orr	r4, r4, #4
   10950:	ldr	r3, [r9, r3]
   10954:	ldr	r3, [r3]
   10958:	str	r3, [sp, #4]
   1095c:	b	107e8 <sprintf@plt+0x54>
   10960:	orr	r4, r4, #1
   10964:	b	107e8 <sprintf@plt+0x54>
   10968:	ldr	r3, [pc, #1512]	; 10f58 <sprintf@plt+0x7c4>
   1096c:	mov	r2, sl
   10970:	mov	r1, fp
   10974:	ldr	r3, [r9, r3]
   10978:	orr	r4, r4, #8
   1097c:	ldr	r0, [r3]
   10980:	bl	1071c <strtol@plt>
   10984:	str	r0, [sp]
   10988:	b	107e8 <sprintf@plt+0x54>
   1098c:	ldr	r0, [pc, #1480]	; 10f5c <sprintf@plt+0x7c8>
   10990:	add	r0, pc, r0
   10994:	bl	10764 <puts@plt>
   10998:	ldr	r0, [pc, #1472]	; 10f60 <sprintf@plt+0x7cc>
   1099c:	add	r0, pc, r0
   109a0:	bl	10764 <puts@plt>
   109a4:	ldr	r0, [pc, #1464]	; 10f64 <sprintf@plt+0x7d0>
   109a8:	add	r0, pc, r0
   109ac:	bl	10764 <puts@plt>
   109b0:	ldr	r0, [pc, #1456]	; 10f68 <sprintf@plt+0x7d4>
   109b4:	add	r0, pc, r0
   109b8:	bl	10764 <puts@plt>
   109bc:	ldr	r0, [pc, #1448]	; 10f6c <sprintf@plt+0x7d8>
   109c0:	add	r0, pc, r0
   109c4:	bl	10764 <puts@plt>
   109c8:	ldr	r0, [pc, #1440]	; 10f70 <sprintf@plt+0x7dc>
   109cc:	add	r0, pc, r0
   109d0:	bl	10764 <puts@plt>
   109d4:	ldr	r0, [pc, #1432]	; 10f74 <sprintf@plt+0x7e0>
   109d8:	add	r0, pc, r0
   109dc:	bl	10764 <puts@plt>
   109e0:	ldr	r0, [pc, #1424]	; 10f78 <sprintf@plt+0x7e4>
   109e4:	add	r0, pc, r0
   109e8:	bl	10764 <puts@plt>
   109ec:	ldr	r0, [pc, #1416]	; 10f7c <sprintf@plt+0x7e8>
   109f0:	add	r0, pc, r0
   109f4:	bl	10764 <puts@plt>
   109f8:	ldr	r0, [pc, #1408]	; 10f80 <sprintf@plt+0x7ec>
   109fc:	add	r0, pc, r0
   10a00:	bl	10764 <puts@plt>
   10a04:	ldr	r0, [pc, #1400]	; 10f84 <sprintf@plt+0x7f0>
   10a08:	add	r0, pc, r0
   10a0c:	bl	10764 <puts@plt>
   10a10:	ldr	r0, [pc, #1392]	; 10f88 <sprintf@plt+0x7f4>
   10a14:	add	r0, pc, r0
   10a18:	bl	10764 <puts@plt>
   10a1c:	mov	r0, #0
   10a20:	bl	10788 <exit@plt>
   10a24:	orr	r4, r4, #16
   10a28:	mov	r5, #4
   10a2c:	b	107e8 <sprintf@plt+0x54>
   10a30:	ldr	r0, [pc, #1364]	; 10f8c <sprintf@plt+0x7f8>
   10a34:	add	r0, pc, r0
   10a38:	bl	10764 <puts@plt>
   10a3c:	ldr	r0, [pc, #1356]	; 10f90 <sprintf@plt+0x7fc>
   10a40:	add	r0, pc, r0
   10a44:	bl	10764 <puts@plt>
   10a48:	ldr	r0, [pc, #1348]	; 10f94 <sprintf@plt+0x800>
   10a4c:	add	r0, pc, r0
   10a50:	bl	10764 <puts@plt>
   10a54:	ldr	r0, [pc, #1340]	; 10f98 <sprintf@plt+0x804>
   10a58:	add	r0, pc, r0
   10a5c:	bl	10764 <puts@plt>
   10a60:	ldr	r0, [pc, #1332]	; 10f9c <sprintf@plt+0x808>
   10a64:	add	r0, pc, r0
   10a68:	bl	10764 <puts@plt>
   10a6c:	ldr	r0, [pc, #1324]	; 10fa0 <sprintf@plt+0x80c>
   10a70:	add	r0, pc, r0
   10a74:	bl	10764 <puts@plt>
   10a78:	ldr	r0, [pc, #1316]	; 10fa4 <sprintf@plt+0x810>
   10a7c:	add	r0, pc, r0
   10a80:	bl	10764 <puts@plt>
   10a84:	mov	r0, #0
   10a88:	bl	10788 <exit@plt>
   10a8c:	mov	r1, r0
   10a90:	ldr	r0, [sp, #12]
   10a94:	bl	10728 <printf@plt>
   10a98:	b	107e8 <sprintf@plt+0x54>
   10a9c:	tst	r4, #1
   10aa0:	ldr	r3, [sp]
   10aa4:	beq	10b00 <sprintf@plt+0x36c>
   10aa8:	cmp	r3, #0
   10aac:	bne	10c20 <sprintf@plt+0x48c>
   10ab0:	tst	r4, #2
   10ab4:	moveq	r3, #8
   10ab8:	streq	r3, [sp]
   10abc:	beq	10c34 <sprintf@plt+0x4a0>
   10ac0:	ldr	r5, [sp, #8]
   10ac4:	cmp	r5, #0
   10ac8:	beq	10efc <sprintf@plt+0x768>
   10acc:	mov	r0, r5
   10ad0:	bl	10704 <strlen@plt>
   10ad4:	cmp	r0, #16
   10ad8:	bhi	10efc <sprintf@plt+0x768>
   10adc:	ldr	r0, [pc, #1220]	; 10fa8 <sprintf@plt+0x814>
   10ae0:	ldr	r1, [pc, #1220]	; 10fac <sprintf@plt+0x818>
   10ae4:	add	r0, pc, r0
   10ae8:	mov	r2, r5
   10aec:	add	r0, r0, #128	; 0x80
   10af0:	add	r1, pc, r1
   10af4:	mov	r5, r0
   10af8:	bl	10794 <sprintf@plt>
   10afc:	b	10b6c <sprintf@plt+0x3d8>
   10b00:	tst	r4, #16
   10b04:	bne	10ba4 <sprintf@plt+0x410>
   10b08:	tst	r4, #64	; 0x40
   10b0c:	beq	10cf0 <sprintf@plt+0x55c>
   10b10:	cmp	r3, #0
   10b14:	beq	10de4 <sprintf@plt+0x650>
   10b18:	ands	r5, r4, #2
   10b1c:	bne	10df4 <sprintf@plt+0x660>
   10b20:	ldr	r3, [sp]
   10b24:	cmp	r3, #16
   10b28:	bgt	10f10 <sprintf@plt+0x77c>
   10b2c:	ldr	r5, [pc, #1148]	; 10fb0 <sprintf@plt+0x81c>
   10b30:	ldr	r7, [sp]
   10b34:	add	r5, pc, r5
   10b38:	mov	r3, #53	; 0x35
   10b3c:	mov	r6, #36	; 0x24
   10b40:	strb	r3, [r5, #57]	; 0x39
   10b44:	add	sl, r5, r7
   10b48:	add	r0, r5, #59	; 0x3b
   10b4c:	strb	r6, [r5, #56]	; 0x38
   10b50:	strb	r6, [r5, #58]	; 0x3a
   10b54:	mov	r1, r7
   10b58:	add	r5, r5, #56	; 0x38
   10b5c:	bl	111a4 <sprintf@plt+0xa10>
   10b60:	mov	r3, #0
   10b64:	strb	r6, [sl, #59]	; 0x3b
   10b68:	strb	r3, [sl, #60]	; 0x3c
   10b6c:	tst	r4, #4
   10b70:	beq	10c74 <sprintf@plt+0x4e0>
   10b74:	ldr	r3, [sp, #4]
   10b78:	cmp	r3, #0
   10b7c:	beq	10dbc <sprintf@plt+0x628>
   10b80:	mov	r1, r5
   10b84:	ldr	r0, [sp, #4]
   10b88:	bl	10758 <rb_crypt@plt>
   10b8c:	mov	r4, r0
   10b90:	mov	r0, r4
   10b94:	bl	10764 <puts@plt>
   10b98:	mov	r0, #0
   10b9c:	add	sp, sp, #28
   10ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ba4:	cmp	r3, #0
   10ba8:	beq	10d50 <sprintf@plt+0x5bc>
   10bac:	ands	r6, r4, #2
   10bb0:	bne	10d60 <sprintf@plt+0x5cc>
   10bb4:	ldr	r3, [sp]
   10bb8:	cmp	r3, #22
   10bbc:	bgt	10ed4 <sprintf@plt+0x740>
   10bc0:	ldr	r1, [pc, #1004]	; 10fb4 <sprintf@plt+0x820>
   10bc4:	add	r7, sp, #20
   10bc8:	ldr	r6, [pc, #1000]	; 10fb8 <sprintf@plt+0x824>
   10bcc:	mov	r2, r5
   10bd0:	mov	r0, r7
   10bd4:	add	r1, pc, r1
   10bd8:	bl	10794 <sprintf@plt>
   10bdc:	add	r6, pc, r6
   10be0:	ldr	r1, [pc, #980]	; 10fbc <sprintf@plt+0x828>
   10be4:	add	r5, r6, #24
   10be8:	mov	r2, r7
   10bec:	add	r1, pc, r1
   10bf0:	mov	r0, r5
   10bf4:	bl	10794 <sprintf@plt>
   10bf8:	ldr	r7, [sp]
   10bfc:	add	r0, r6, #31
   10c00:	mov	r1, r7
   10c04:	add	r6, r6, r7
   10c08:	bl	111a4 <sprintf@plt+0xa10>
   10c0c:	mov	r2, #36	; 0x24
   10c10:	mov	r3, #0
   10c14:	strb	r2, [r6, #31]
   10c18:	strb	r3, [r6, #32]
   10c1c:	b	10b6c <sprintf@plt+0x3d8>
   10c20:	ands	r5, r4, #2
   10c24:	bne	10ac0 <sprintf@plt+0x32c>
   10c28:	ldr	r3, [sp]
   10c2c:	cmp	r3, #16
   10c30:	bgt	10ee8 <sprintf@plt+0x754>
   10c34:	ldr	r5, [pc, #900]	; 10fc0 <sprintf@plt+0x82c>
   10c38:	ldr	r7, [sp]
   10c3c:	add	r5, pc, r5
   10c40:	mov	r3, #49	; 0x31
   10c44:	mov	r6, #36	; 0x24
   10c48:	add	sl, r5, r7
   10c4c:	add	r0, r5, #3
   10c50:	mov	r1, r7
   10c54:	strb	r3, [r5, #1]
   10c58:	strb	r6, [r5]
   10c5c:	strb	r6, [r5, #2]
   10c60:	bl	111a4 <sprintf@plt+0xa10>
   10c64:	mov	r3, #0
   10c68:	strb	r6, [sl, #3]
   10c6c:	strb	r3, [sl, #4]
   10c70:	b	10b6c <sprintf@plt+0x3d8>
   10c74:	ldr	r0, [pc, #840]	; 10fc4 <sprintf@plt+0x830>
   10c78:	add	r0, pc, r0
   10c7c:	bl	106d4 <getpass@plt>
   10c80:	mov	r1, r5
   10c84:	bl	10758 <rb_crypt@plt>
   10c88:	cmp	r0, #0
   10c8c:	beq	10e84 <sprintf@plt+0x6f0>
   10c90:	bl	1074c <strdup@plt>
   10c94:	mov	r6, r0
   10c98:	ldr	r0, [pc, #808]	; 10fc8 <sprintf@plt+0x834>
   10c9c:	mov	r4, r6
   10ca0:	add	r0, pc, r0
   10ca4:	bl	106d4 <getpass@plt>
   10ca8:	mov	r1, r5
   10cac:	bl	10758 <rb_crypt@plt>
   10cb0:	subs	r1, r0, #0
   10cb4:	beq	10eac <sprintf@plt+0x718>
   10cb8:	mov	r0, r6
   10cbc:	bl	1077c <strcmp@plt>
   10cc0:	cmp	r0, #0
   10cc4:	beq	10b90 <sprintf@plt+0x3fc>
   10cc8:	ldr	r3, [pc, #764]	; 10fcc <sprintf@plt+0x838>
   10ccc:	ldr	r0, [pc, #764]	; 10fd0 <sprintf@plt+0x83c>
   10cd0:	mov	r2, #23
   10cd4:	ldr	r3, [r9, r3]
   10cd8:	mov	r1, #1
   10cdc:	add	r0, pc, r0
   10ce0:	ldr	r3, [r3]
   10ce4:	bl	10734 <fwrite@plt>
   10ce8:	mov	r0, #1
   10cec:	b	10b9c <sprintf@plt+0x408>
   10cf0:	cmp	r3, #0
   10cf4:	beq	10e34 <sprintf@plt+0x6a0>
   10cf8:	ands	r5, r4, #2
   10cfc:	bne	10e44 <sprintf@plt+0x6b0>
   10d00:	ldr	r3, [sp]
   10d04:	cmp	r3, #16
   10d08:	bgt	10f24 <sprintf@plt+0x790>
   10d0c:	ldr	r6, [pc, #704]	; 10fd4 <sprintf@plt+0x840>
   10d10:	ldr	r8, [sp]
   10d14:	add	r6, pc, r6
   10d18:	mov	r3, #54	; 0x36
   10d1c:	mov	r7, #36	; 0x24
   10d20:	strb	r3, [r6, #105]	; 0x69
   10d24:	add	r0, r6, #107	; 0x6b
   10d28:	strb	r7, [r6, #104]	; 0x68
   10d2c:	strb	r7, [r6, #106]	; 0x6a
   10d30:	mov	r1, r8
   10d34:	add	r5, r6, #104	; 0x68
   10d38:	add	r6, r6, r8
   10d3c:	bl	111a4 <sprintf@plt+0xa10>
   10d40:	mov	r3, #0
   10d44:	strb	r7, [r6, #107]	; 0x6b
   10d48:	strb	r3, [r6, #108]	; 0x6c
   10d4c:	b	10b6c <sprintf@plt+0x3d8>
   10d50:	tst	r4, #2
   10d54:	moveq	r3, #22
   10d58:	streq	r3, [sp]
   10d5c:	beq	10bc0 <sprintf@plt+0x42c>
   10d60:	ldr	r6, [sp, #8]
   10d64:	cmp	r6, #0
   10d68:	beq	10f38 <sprintf@plt+0x7a4>
   10d6c:	mov	r0, r6
   10d70:	bl	10704 <strlen@plt>
   10d74:	cmp	r0, #22
   10d78:	bhi	10f38 <sprintf@plt+0x7a4>
   10d7c:	ldr	r1, [pc, #596]	; 10fd8 <sprintf@plt+0x844>
   10d80:	mov	r2, r5
   10d84:	add	r5, sp, #20
   10d88:	mov	r0, r5
   10d8c:	add	r1, pc, r1
   10d90:	bl	10794 <sprintf@plt>
   10d94:	ldr	r0, [pc, #576]	; 10fdc <sprintf@plt+0x848>
   10d98:	ldr	r1, [pc, #576]	; 10fe0 <sprintf@plt+0x84c>
   10d9c:	add	r0, pc, r0
   10da0:	mov	r2, r5
   10da4:	add	r0, r0, #152	; 0x98
   10da8:	mov	r3, r6
   10dac:	add	r1, pc, r1
   10db0:	mov	r5, r0
   10db4:	bl	10794 <sprintf@plt>
   10db8:	b	10b6c <sprintf@plt+0x3d8>
   10dbc:	ldr	r3, [pc, #520]	; 10fcc <sprintf@plt+0x838>
   10dc0:	ldr	r0, [pc, #540]	; 10fe4 <sprintf@plt+0x850>
   10dc4:	mov	r2, #30
   10dc8:	ldr	r3, [r9, r3]
   10dcc:	mov	r1, #1
   10dd0:	add	r0, pc, r0
   10dd4:	ldr	r3, [r3]
   10dd8:	bl	10734 <fwrite@plt>
   10ddc:	mov	r0, #1
   10de0:	b	10b9c <sprintf@plt+0x408>
   10de4:	tst	r4, #2
   10de8:	moveq	r3, #16
   10dec:	streq	r3, [sp]
   10df0:	beq	10b2c <sprintf@plt+0x398>
   10df4:	ldr	r5, [sp, #8]
   10df8:	cmp	r5, #0
   10dfc:	beq	10efc <sprintf@plt+0x768>
   10e00:	mov	r0, r5
   10e04:	bl	10704 <strlen@plt>
   10e08:	cmp	r0, #16
   10e0c:	bhi	10efc <sprintf@plt+0x768>
   10e10:	ldr	r0, [pc, #464]	; 10fe8 <sprintf@plt+0x854>
   10e14:	ldr	r1, [pc, #464]	; 10fec <sprintf@plt+0x858>
   10e18:	add	r0, pc, r0
   10e1c:	mov	r2, r5
   10e20:	add	r0, r0, #184	; 0xb8
   10e24:	add	r1, pc, r1
   10e28:	mov	r5, r0
   10e2c:	bl	10794 <sprintf@plt>
   10e30:	b	10b6c <sprintf@plt+0x3d8>
   10e34:	tst	r4, #2
   10e38:	moveq	r3, #16
   10e3c:	streq	r3, [sp]
   10e40:	beq	10d0c <sprintf@plt+0x578>
   10e44:	ldr	r5, [sp, #8]
   10e48:	cmp	r5, #0
   10e4c:	beq	10efc <sprintf@plt+0x768>
   10e50:	mov	r0, r5
   10e54:	bl	10704 <strlen@plt>
   10e58:	cmp	r0, #16
   10e5c:	bhi	10efc <sprintf@plt+0x768>
   10e60:	ldr	r0, [pc, #392]	; 10ff0 <sprintf@plt+0x85c>
   10e64:	ldr	r1, [pc, #392]	; 10ff4 <sprintf@plt+0x860>
   10e68:	add	r0, pc, r0
   10e6c:	mov	r2, r5
   10e70:	add	r0, r0, #80	; 0x50
   10e74:	add	r1, pc, r1
   10e78:	mov	r5, r0
   10e7c:	bl	10794 <sprintf@plt>
   10e80:	b	10b6c <sprintf@plt+0x3d8>
   10e84:	ldr	r3, [pc, #320]	; 10fcc <sprintf@plt+0x838>
   10e88:	ldr	r0, [pc, #360]	; 10ff8 <sprintf@plt+0x864>
   10e8c:	mov	r2, #18
   10e90:	ldr	r3, [r9, r3]
   10e94:	mov	r1, #1
   10e98:	add	r0, pc, r0
   10e9c:	ldr	r3, [r3]
   10ea0:	bl	10734 <fwrite@plt>
   10ea4:	mov	r0, #1
   10ea8:	b	10b9c <sprintf@plt+0x408>
   10eac:	ldr	r3, [pc, #280]	; 10fcc <sprintf@plt+0x838>
   10eb0:	ldr	r0, [pc, #324]	; 10ffc <sprintf@plt+0x868>
   10eb4:	mov	r2, #18
   10eb8:	ldr	r3, [r9, r3]
   10ebc:	mov	r1, #1
   10ec0:	add	r0, pc, r0
   10ec4:	ldr	r3, [r3]
   10ec8:	bl	10734 <fwrite@plt>
   10ecc:	mov	r0, #1
   10ed0:	b	10b9c <sprintf@plt+0x408>
   10ed4:	ldr	r0, [pc, #292]	; 11000 <sprintf@plt+0x86c>
   10ed8:	add	r0, pc, r0
   10edc:	bl	10764 <puts@plt>
   10ee0:	mov	r0, r6
   10ee4:	bl	10788 <exit@plt>
   10ee8:	ldr	r0, [pc, #276]	; 11004 <sprintf@plt+0x870>
   10eec:	add	r0, pc, r0
   10ef0:	bl	10764 <puts@plt>
   10ef4:	mov	r0, r5
   10ef8:	bl	10788 <exit@plt>
   10efc:	ldr	r0, [pc, #260]	; 11008 <sprintf@plt+0x874>
   10f00:	add	r0, pc, r0
   10f04:	bl	10764 <puts@plt>
   10f08:	mov	r0, #1
   10f0c:	bl	10788 <exit@plt>
   10f10:	ldr	r0, [pc, #244]	; 1100c <sprintf@plt+0x878>
   10f14:	add	r0, pc, r0
   10f18:	bl	10764 <puts@plt>
   10f1c:	mov	r0, r5
   10f20:	bl	10788 <exit@plt>
   10f24:	ldr	r0, [pc, #228]	; 11010 <sprintf@plt+0x87c>
   10f28:	add	r0, pc, r0
   10f2c:	bl	10764 <puts@plt>
   10f30:	mov	r0, r5
   10f34:	bl	10788 <exit@plt>
   10f38:	ldr	r0, [pc, #212]	; 11014 <sprintf@plt+0x880>
   10f3c:	add	r0, pc, r0
   10f40:	bl	10764 <puts@plt>
   10f44:	mov	r0, #1
   10f48:	bl	10788 <exit@plt>
   10f4c:	andeq	r0, r0, r8, asr #29
   10f50:	andeq	r0, r0, r8, lsr #29
   10f54:	andeq	r1, r1, r4, lsr #16
   10f58:	andeq	r0, r0, ip, rrx
   10f5c:	andeq	r0, r0, ip, ror r9
   10f60:			; <UNDEFINED> instruction: 0x000009bc
   10f64:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10f68:	andeq	r0, r0, r4, ror #19
   10f6c:	strdeq	r0, [r0], -r4
   10f70:	andeq	r0, r0, r8, lsl #20
   10f74:	andeq	r0, r0, r4, lsr sl
   10f78:	andeq	r0, r0, r0, ror #20
   10f7c:	andeq	r0, r0, r0, lsl #21
   10f80:	andeq	r0, r0, ip, lsr #21
   10f84:			; <UNDEFINED> instruction: 0x00000abc
   10f88:	ldrdeq	r0, [r0], -r8
   10f8c:	ldrdeq	r0, [r0], -ip
   10f90:	strdeq	r0, [r0], -r4
   10f94:	andeq	r0, r0, ip, lsr #22
   10f98:	andeq	r0, r0, r0, ror #22
   10f9c:	muleq	r0, r4, fp
   10fa0:	andeq	r0, r0, r8, asr #23
   10fa4:	andeq	r0, r0, r4, ror #23
   10fa8:	muleq	r1, r0, r5
   10fac:			; <UNDEFINED> instruction: 0x00000bb0
   10fb0:	andeq	r1, r1, r0, asr #10
   10fb4:	andeq	r0, r0, r4, lsr fp
   10fb8:	muleq	r1, r8, r4
   10fbc:	muleq	r0, r4, fp
   10fc0:	andeq	r1, r1, r8, lsr r4
   10fc4:	andeq	r0, r0, r8, ror fp
   10fc8:	andeq	r0, r0, r0, ror fp
   10fcc:	andeq	r0, r0, r8, rrx
   10fd0:	andeq	r0, r0, ip, lsr fp
   10fd4:	andeq	r1, r1, r0, ror #6
   10fd8:	andeq	r0, r0, ip, ror r9
   10fdc:	ldrdeq	r1, [r1], -r8
   10fe0:	andeq	r0, r0, r4, ror #18
   10fe4:	andeq	r0, r0, r0, lsl #20
   10fe8:	andeq	r1, r1, ip, asr r2
   10fec:	andeq	r0, r0, r4, ror #18
   10ff0:	andeq	r1, r1, ip, lsl #4
   10ff4:	andeq	r0, r0, r8, lsr r9
   10ff8:	andeq	r0, r0, r4, ror #18
   10ffc:	andeq	r0, r0, ip, lsr r9
   11000:	andeq	r0, r0, r8, lsl #17
   11004:	andeq	r0, r0, r0, lsl #16
   11008:	andeq	r0, r0, r8, lsr #15
   1100c:	andeq	r0, r0, ip, ror r8
   11010:	andeq	r0, r0, ip, lsl #17
   11014:	andeq	r0, r0, r0, ror #15
   11018:	mov	fp, #0
   1101c:	mov	lr, #0
   11020:	pop	{r1}		; (ldr r1, [sp], #4)
   11024:	mov	r2, sp
   11028:	push	{r2}		; (str r2, [sp, #-4]!)
   1102c:	push	{r0}		; (str r0, [sp, #-4]!)
   11030:	ldr	ip, [pc, #16]	; 11048 <sprintf@plt+0x8b4>
   11034:	push	{ip}		; (str ip, [sp, #-4]!)
   11038:	ldr	r0, [pc, #12]	; 1104c <sprintf@plt+0x8b8>
   1103c:	ldr	r3, [pc, #12]	; 11050 <sprintf@plt+0x8bc>
   11040:	bl	106bc <__libc_start_main@plt>
   11044:	bl	106a4 <abort@plt>
   11048:			; <UNDEFINED> instruction: 0x000112b4
   1104c:	andeq	r0, r1, r0, lsr #15
   11050:	andeq	r1, r1, r4, asr r2
   11054:	ldr	r3, [pc, #20]	; 11070 <sprintf@plt+0x8dc>
   11058:	ldr	r2, [pc, #20]	; 11074 <sprintf@plt+0x8e0>
   1105c:	add	r3, pc, r3
   11060:	ldr	r2, [r3, r2]
   11064:	cmp	r2, #0
   11068:	bxeq	lr
   1106c:	b	106c8 <__gmon_start__@plt>
   11070:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11074:	andeq	r0, r0, r4, rrx
   11078:	ldr	r3, [pc, #28]	; 1109c <sprintf@plt+0x908>
   1107c:	ldr	r0, [pc, #28]	; 110a0 <sprintf@plt+0x90c>
   11080:	sub	r3, r3, r0
   11084:	cmp	r3, #6
   11088:	bxls	lr
   1108c:	ldr	r3, [pc, #16]	; 110a4 <sprintf@plt+0x910>
   11090:	cmp	r3, #0
   11094:	bxeq	lr
   11098:	bx	r3
   1109c:	andeq	r2, r2, fp, ror r0
   110a0:	andeq	r2, r2, r8, ror r0
   110a4:	andeq	r0, r0, r0
   110a8:	ldr	r1, [pc, #36]	; 110d4 <sprintf@plt+0x940>
   110ac:	ldr	r0, [pc, #36]	; 110d8 <sprintf@plt+0x944>
   110b0:	sub	r1, r1, r0
   110b4:	asr	r1, r1, #2
   110b8:	add	r1, r1, r1, lsr #31
   110bc:	asrs	r1, r1, #1
   110c0:	bxeq	lr
   110c4:	ldr	r3, [pc, #16]	; 110dc <sprintf@plt+0x948>
   110c8:	cmp	r3, #0
   110cc:	bxeq	lr
   110d0:	bx	r3
   110d4:	andeq	r2, r2, r8, ror r0
   110d8:	andeq	r2, r2, r8, ror r0
   110dc:	andeq	r0, r0, r0
   110e0:	push	{r4, lr}
   110e4:	ldr	r4, [pc, #24]	; 11104 <sprintf@plt+0x970>
   110e8:	ldrb	r3, [r4]
   110ec:	cmp	r3, #0
   110f0:	popne	{r4, pc}
   110f4:	bl	11078 <sprintf@plt+0x8e4>
   110f8:	mov	r3, #1
   110fc:	strb	r3, [r4]
   11100:	pop	{r4, pc}
   11104:	andeq	r2, r2, r8, ror r0
   11108:	ldr	r0, [pc, #40]	; 11138 <sprintf@plt+0x9a4>
   1110c:	ldr	r3, [r0]
   11110:	cmp	r3, #0
   11114:	bne	1111c <sprintf@plt+0x988>
   11118:	b	110a8 <sprintf@plt+0x914>
   1111c:	ldr	r3, [pc, #24]	; 1113c <sprintf@plt+0x9a8>
   11120:	cmp	r3, #0
   11124:	beq	11118 <sprintf@plt+0x984>
   11128:	push	{r4, lr}
   1112c:	blx	r3
   11130:	pop	{r4, lr}
   11134:	b	110a8 <sprintf@plt+0x914>
   11138:	strdeq	r1, [r2], -ip
   1113c:	andeq	r0, r0, r0
   11140:	push	{r4, r5, r6, r7, r8, lr}
   11144:	mov	r6, r0
   11148:	mov	r0, #0
   1114c:	mov	r4, r1
   11150:	bl	10740 <time@plt>
   11154:	bl	106b0 <srand@plt>
   11158:	cmp	r4, #0
   1115c:	ble	11198 <sprintf@plt+0xa04>
   11160:	ldr	r5, [pc, #56]	; 111a0 <sprintf@plt+0xa0c>
   11164:	add	r4, r6, r4
   11168:	add	r5, pc, r5
   1116c:	mov	r7, r6
   11170:	bl	10770 <rand@plt>
   11174:	asr	r3, r0, #31
   11178:	lsr	r3, r3, #26
   1117c:	add	r0, r0, r3
   11180:	and	r0, r0, #63	; 0x3f
   11184:	sub	r0, r0, r3
   11188:	ldrb	r3, [r5, r0]
   1118c:	strb	r3, [r7], #1
   11190:	cmp	r7, r4
   11194:	bne	11170 <sprintf@plt+0x9dc>
   11198:	mov	r0, r6
   1119c:	pop	{r4, r5, r6, r7, r8, pc}
   111a0:	andeq	r0, r0, r4, asr r1
   111a4:	push	{r4, r5, r6, r7, r8, lr}
   111a8:	mov	r5, r0
   111ac:	ldr	r0, [pc, #152]	; 1124c <sprintf@plt+0xab8>
   111b0:	mov	r4, r1
   111b4:	add	r0, pc, r0
   111b8:	mov	r1, #0
   111bc:	bl	10698 <open@plt>
   111c0:	mov	r1, r4
   111c4:	subs	r7, r0, #0
   111c8:	blt	11240 <sprintf@plt+0xaac>
   111cc:	mov	r0, #1
   111d0:	bl	106e0 <calloc@plt>
   111d4:	mov	r2, r4
   111d8:	mov	r1, r0
   111dc:	mov	r6, r0
   111e0:	mov	r0, r7
   111e4:	bl	106f8 <read@plt>
   111e8:	cmp	r4, r0
   111ec:	bne	11234 <sprintf@plt+0xaa0>
   111f0:	cmp	r4, #0
   111f4:	ble	11224 <sprintf@plt+0xa90>
   111f8:	ldr	ip, [pc, #80]	; 11250 <sprintf@plt+0xabc>
   111fc:	add	r1, r6, r4
   11200:	add	ip, pc, ip
   11204:	mov	r2, r6
   11208:	sub	r0, r5, #1
   1120c:	ldrb	r3, [r2], #1
   11210:	and	r3, r3, #63	; 0x3f
   11214:	cmp	r2, r1
   11218:	ldrb	r3, [ip, r3]
   1121c:	strb	r3, [r0, #1]!
   11220:	bne	1120c <sprintf@plt+0xa78>
   11224:	mov	r0, r6
   11228:	bl	106ec <free@plt>
   1122c:	mov	r0, r5
   11230:	pop	{r4, r5, r6, r7, r8, pc}
   11234:	mov	r0, r6
   11238:	bl	106ec <free@plt>
   1123c:	mov	r1, r4
   11240:	mov	r0, r5
   11244:	pop	{r4, r5, r6, r7, r8, lr}
   11248:	b	11140 <sprintf@plt+0x9ac>
   1124c:	andeq	r0, r0, ip, asr #2
   11250:	strheq	r0, [r0], -ip
   11254:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11258:	mov	r7, r0
   1125c:	ldr	r6, [pc, #72]	; 112ac <sprintf@plt+0xb18>
   11260:	ldr	r5, [pc, #72]	; 112b0 <sprintf@plt+0xb1c>
   11264:	add	r6, pc, r6
   11268:	add	r5, pc, r5
   1126c:	sub	r6, r6, r5
   11270:	mov	r8, r1
   11274:	mov	r9, r2
   11278:	bl	10678 <open@plt-0x20>
   1127c:	asrs	r6, r6, #2
   11280:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11284:	mov	r4, #0
   11288:	add	r4, r4, #1
   1128c:	ldr	r3, [r5], #4
   11290:	mov	r2, r9
   11294:	mov	r1, r8
   11298:	mov	r0, r7
   1129c:	blx	r3
   112a0:	cmp	r6, r4
   112a4:	bne	11288 <sprintf@plt+0xaf4>
   112a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112ac:	andeq	r0, r1, ip, lsl #25
   112b0:	andeq	r0, r1, r4, lsl #25
   112b4:	bx	lr

Disassembly of section .fini:

000112b8 <.fini>:
   112b8:	push	{r3, lr}
   112bc:	pop	{r3, pc}
