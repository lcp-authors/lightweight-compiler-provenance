
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

000107ac <.init>:
   107ac:	push	{r3, lr}
   107b0:	bl	108e0 <_start@@Base+0x3c>
   107b4:	pop	{r3, pc}

Disassembly of section .plt:

000107b8 <strcmp@plt-0x14>:
   107b8:	push	{lr}		; (str lr, [sp, #-4]!)
   107bc:	ldr	lr, [pc, #4]	; 107c8 <strcmp@plt-0x4>
   107c0:	add	lr, pc, lr
   107c4:	ldr	pc, [lr, #8]!
   107c8:	andeq	r2, r1, r8, lsr r8

000107cc <strcmp@plt>:
   107cc:	add	ip, pc, #0, 12
   107d0:	add	ip, ip, #73728	; 0x12000
   107d4:	ldr	pc, [ip, #2104]!	; 0x838

000107d8 <printf@plt>:
   107d8:	add	ip, pc, #0, 12
   107dc:	add	ip, ip, #73728	; 0x12000
   107e0:	ldr	pc, [ip, #2096]!	; 0x830

000107e4 <fopen@plt>:
   107e4:	add	ip, pc, #0, 12
   107e8:	add	ip, ip, #73728	; 0x12000
   107ec:	ldr	pc, [ip, #2088]!	; 0x828

000107f0 <free@plt>:
   107f0:	add	ip, pc, #0, 12
   107f4:	add	ip, ip, #73728	; 0x12000
   107f8:	ldr	pc, [ip, #2080]!	; 0x820

000107fc <ftell@plt>:
   107fc:	add	ip, pc, #0, 12
   10800:	add	ip, ip, #73728	; 0x12000
   10804:	ldr	pc, [ip, #2072]!	; 0x818

00010808 <rewind@plt>:
   10808:	add	ip, pc, #0, 12
   1080c:	add	ip, ip, #73728	; 0x12000
   10810:	ldr	pc, [ip, #2064]!	; 0x810

00010814 <fwrite@plt>:
   10814:	add	ip, pc, #0, 12
   10818:	add	ip, ip, #73728	; 0x12000
   1081c:	ldr	pc, [ip, #2056]!	; 0x808

00010820 <fread@plt>:
   10820:	add	ip, pc, #0, 12
   10824:	add	ip, ip, #73728	; 0x12000
   10828:	ldr	pc, [ip, #2048]!	; 0x800

0001082c <puts@plt>:
   1082c:	add	ip, pc, #0, 12
   10830:	add	ip, ip, #73728	; 0x12000
   10834:	ldr	pc, [ip, #2040]!	; 0x7f8

00010838 <malloc@plt>:
   10838:	add	ip, pc, #0, 12
   1083c:	add	ip, ip, #73728	; 0x12000
   10840:	ldr	pc, [ip, #2032]!	; 0x7f0

00010844 <__libc_start_main@plt>:
   10844:	add	ip, pc, #0, 12
   10848:	add	ip, ip, #73728	; 0x12000
   1084c:	ldr	pc, [ip, #2024]!	; 0x7e8

00010850 <__gmon_start__@plt>:
   10850:	add	ip, pc, #0, 12
   10854:	add	ip, ip, #73728	; 0x12000
   10858:	ldr	pc, [ip, #2016]!	; 0x7e0

0001085c <exit@plt>:
   1085c:	add	ip, pc, #0, 12
   10860:	add	ip, ip, #73728	; 0x12000
   10864:	ldr	pc, [ip, #2008]!	; 0x7d8

00010868 <strncpy@plt>:
   10868:	add	ip, pc, #0, 12
   1086c:	add	ip, ip, #73728	; 0x12000
   10870:	ldr	pc, [ip, #2000]!	; 0x7d0

00010874 <fclose@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #73728	; 0x12000
   1087c:	ldr	pc, [ip, #1992]!	; 0x7c8

00010880 <fseek@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1984]!	; 0x7c0

0001088c <abort@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1976]!	; 0x7b8

00010898 <__assert_fail@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1968]!	; 0x7b0

Disassembly of section .text:

000108a4 <_start@@Base>:
   108a4:	mov	fp, #0
   108a8:	mov	lr, #0
   108ac:	pop	{r1}		; (ldr r1, [sp], #4)
   108b0:	mov	r2, sp
   108b4:	push	{r2}		; (str r2, [sp, #-4]!)
   108b8:	push	{r0}		; (str r0, [sp, #-4]!)
   108bc:	ldr	ip, [pc, #16]	; 108d4 <_start@@Base+0x30>
   108c0:	push	{ip}		; (str ip, [sp, #-4]!)
   108c4:	ldr	r0, [pc, #12]	; 108d8 <_start@@Base+0x34>
   108c8:	ldr	r3, [pc, #12]	; 108dc <_start@@Base+0x38>
   108cc:	bl	10844 <__libc_start_main@plt>
   108d0:	bl	1088c <abort@plt>
   108d4:	andeq	r2, r1, ip, ror r3
   108d8:	andeq	r2, r1, ip, ror #4
   108dc:	andeq	r2, r1, ip, lsl r3
   108e0:	ldr	r3, [pc, #20]	; 108fc <_start@@Base+0x58>
   108e4:	ldr	r2, [pc, #20]	; 10900 <_start@@Base+0x5c>
   108e8:	add	r3, pc, r3
   108ec:	ldr	r2, [r3, r2]
   108f0:	cmp	r2, #0
   108f4:	bxeq	lr
   108f8:	b	10850 <__gmon_start__@plt>
   108fc:	andeq	r2, r1, r0, lsl r7
   10900:	andeq	r0, r0, r8, asr r0
   10904:	ldr	r3, [pc, #28]	; 10928 <_start@@Base+0x84>
   10908:	ldr	r0, [pc, #28]	; 1092c <_start@@Base+0x88>
   1090c:	sub	r3, r3, r0
   10910:	cmp	r3, #6
   10914:	bxls	lr
   10918:	ldr	r3, [pc, #16]	; 10930 <_start@@Base+0x8c>
   1091c:	cmp	r3, #0
   10920:	bxeq	lr
   10924:	bx	r3
   10928:	andeq	r3, r2, r7, ror r0
   1092c:	andeq	r3, r2, r4, ror r0
   10930:	andeq	r0, r0, r0
   10934:	ldr	r1, [pc, #36]	; 10960 <_start@@Base+0xbc>
   10938:	ldr	r0, [pc, #36]	; 10964 <_start@@Base+0xc0>
   1093c:	sub	r1, r1, r0
   10940:	asr	r1, r1, #2
   10944:	add	r1, r1, r1, lsr #31
   10948:	asrs	r1, r1, #1
   1094c:	bxeq	lr
   10950:	ldr	r3, [pc, #16]	; 10968 <_start@@Base+0xc4>
   10954:	cmp	r3, #0
   10958:	bxeq	lr
   1095c:	bx	r3
   10960:	andeq	r3, r2, r4, ror r0
   10964:	andeq	r3, r2, r4, ror r0
   10968:	andeq	r0, r0, r0
   1096c:	push	{r4, lr}
   10970:	ldr	r4, [pc, #24]	; 10990 <_start@@Base+0xec>
   10974:	ldrb	r3, [r4]
   10978:	cmp	r3, #0
   1097c:	popne	{r4, pc}
   10980:	bl	10904 <_start@@Base+0x60>
   10984:	mov	r3, #1
   10988:	strb	r3, [r4]
   1098c:	pop	{r4, pc}
   10990:	andeq	r3, r2, r4, ror r0
   10994:	ldr	r0, [pc, #40]	; 109c4 <_start@@Base+0x120>
   10998:	ldr	r3, [r0]
   1099c:	cmp	r3, #0
   109a0:	bne	109a8 <_start@@Base+0x104>
   109a4:	b	10934 <_start@@Base+0x90>
   109a8:	ldr	r3, [pc, #24]	; 109c8 <_start@@Base+0x124>
   109ac:	cmp	r3, #0
   109b0:	beq	109a4 <_start@@Base+0x100>
   109b4:	push	{r4, lr}
   109b8:	blx	r3
   109bc:	pop	{r4, lr}
   109c0:	b	10934 <_start@@Base+0x90>
   109c4:	andeq	r2, r2, r4, lsl pc
   109c8:	andeq	r0, r0, r0
   109cc:	push	{fp, lr}
   109d0:	add	fp, sp, #4
   109d4:	sub	sp, sp, #40	; 0x28
   109d8:	str	r0, [fp, #-32]	; 0xffffffe0
   109dc:	str	r1, [fp, #-36]	; 0xffffffdc
   109e0:	str	r2, [fp, #-40]	; 0xffffffd8
   109e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   109e8:	cmp	r3, #0
   109ec:	bne	109f8 <_start@@Base+0x154>
   109f0:	sub	r3, fp, #28
   109f4:	b	109fc <_start@@Base+0x158>
   109f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   109fc:	str	r3, [fp, #-40]	; 0xffffffd8
   10a00:	ldr	r3, [pc, #396]	; 10b94 <_start@@Base+0x2f0>
   10a04:	add	r3, pc, r3
   10a08:	mov	r1, r3
   10a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10a10:	bl	107e4 <fopen@plt>
   10a14:	str	r0, [fp, #-20]	; 0xffffffec
   10a18:	mov	r3, #0
   10a1c:	str	r3, [fp, #-8]
   10a20:	mov	r3, #0
   10a24:	str	r3, [fp, #-16]
   10a28:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a2c:	cmp	r3, #0
   10a30:	beq	10b34 <_start@@Base+0x290>
   10a34:	mov	r2, #2
   10a38:	mov	r1, #0
   10a3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a40:	bl	10880 <fseek@plt>
   10a44:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a48:	bl	107fc <ftell@plt>
   10a4c:	mov	r3, r0
   10a50:	str	r3, [fp, #-8]
   10a54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10a58:	ldr	r2, [fp, #-8]
   10a5c:	str	r2, [r3]
   10a60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10a64:	cmp	r3, #0
   10a68:	beq	10a7c <_start@@Base+0x1d8>
   10a6c:	ldr	r2, [fp, #-8]
   10a70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10a74:	cmp	r2, r3
   10a78:	bhi	10b3c <_start@@Base+0x298>
   10a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a80:	bl	10808 <rewind@plt>
   10a84:	ldr	r3, [fp, #-8]
   10a88:	cmp	r3, #0
   10a8c:	beq	10a98 <_start@@Base+0x1f4>
   10a90:	ldr	r3, [fp, #-8]
   10a94:	b	10a9c <_start@@Base+0x1f8>
   10a98:	mov	r3, #1
   10a9c:	mov	r0, r3
   10aa0:	bl	10838 <malloc@plt>
   10aa4:	mov	r3, r0
   10aa8:	str	r3, [fp, #-16]
   10aac:	ldr	r3, [fp, #-16]
   10ab0:	cmp	r3, #0
   10ab4:	beq	10b44 <_start@@Base+0x2a0>
   10ab8:	mov	r3, #0
   10abc:	str	r3, [fp, #-12]
   10ac0:	b	10ad4 <_start@@Base+0x230>
   10ac4:	ldr	r2, [fp, #-12]
   10ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10acc:	add	r3, r2, r3
   10ad0:	str	r3, [fp, #-12]
   10ad4:	ldr	r2, [fp, #-16]
   10ad8:	ldr	r3, [fp, #-12]
   10adc:	add	r0, r2, r3
   10ae0:	ldr	r2, [fp, #-8]
   10ae4:	ldr	r3, [fp, #-12]
   10ae8:	sub	r2, r2, r3
   10aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   10af0:	mov	r1, #1
   10af4:	bl	10820 <fread@plt>
   10af8:	str	r0, [fp, #-24]	; 0xffffffe8
   10afc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b00:	cmp	r3, #0
   10b04:	bne	10ac4 <_start@@Base+0x220>
   10b08:	ldr	r2, [fp, #-12]
   10b0c:	ldr	r3, [fp, #-8]
   10b10:	cmp	r2, r3
   10b14:	bne	10b4c <_start@@Base+0x2a8>
   10b18:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b1c:	bl	10874 <fclose@plt>
   10b20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10b24:	ldr	r2, [fp, #-8]
   10b28:	str	r2, [r3]
   10b2c:	ldr	r3, [fp, #-16]
   10b30:	b	10b88 <_start@@Base+0x2e4>
   10b34:	nop			; (mov r0, r0)
   10b38:	b	10b50 <_start@@Base+0x2ac>
   10b3c:	nop			; (mov r0, r0)
   10b40:	b	10b50 <_start@@Base+0x2ac>
   10b44:	nop			; (mov r0, r0)
   10b48:	b	10b50 <_start@@Base+0x2ac>
   10b4c:	nop			; (mov r0, r0)
   10b50:	ldr	r3, [fp, #-20]	; 0xffffffec
   10b54:	cmp	r3, #0
   10b58:	beq	10b64 <_start@@Base+0x2c0>
   10b5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b60:	bl	10874 <fclose@plt>
   10b64:	ldr	r3, [fp, #-16]
   10b68:	cmp	r3, #0
   10b6c:	beq	10b78 <_start@@Base+0x2d4>
   10b70:	ldr	r0, [fp, #-16]
   10b74:	bl	107f0 <free@plt>
   10b78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10b7c:	ldr	r2, [fp, #-8]
   10b80:	str	r2, [r3]
   10b84:	mov	r3, #0
   10b88:	mov	r0, r3
   10b8c:	sub	sp, fp, #4
   10b90:	pop	{fp, pc}
   10b94:	andeq	r1, r0, r0, lsl #19
   10b98:	push	{fp}		; (str fp, [sp, #-4]!)
   10b9c:	add	fp, sp, #0
   10ba0:	sub	sp, sp, #12
   10ba4:	str	r0, [fp, #-8]
   10ba8:	ldr	r3, [fp, #-8]
   10bac:	mov	r0, r3
   10bb0:	add	sp, fp, #0
   10bb4:	pop	{fp}		; (ldr fp, [sp], #4)
   10bb8:	bx	lr
   10bbc:	push	{fp, lr}
   10bc0:	add	fp, sp, #4
   10bc4:	sub	sp, sp, #8
   10bc8:	str	r0, [fp, #-8]
   10bcc:	ldr	r3, [fp, #-8]
   10bd0:	ldr	r3, [r3]
   10bd4:	mov	r0, r3
   10bd8:	bl	10b98 <_start@@Base+0x2f4>
   10bdc:	mov	r3, r0
   10be0:	mov	r0, r3
   10be4:	sub	sp, fp, #4
   10be8:	pop	{fp, pc}
   10bec:	push	{fp}		; (str fp, [sp, #-4]!)
   10bf0:	add	fp, sp, #0
   10bf4:	sub	sp, sp, #12
   10bf8:	strd	r0, [fp, #-12]
   10bfc:	ldrd	r2, [fp, #-12]
   10c00:	mov	r0, r2
   10c04:	mov	r1, r3
   10c08:	add	sp, fp, #0
   10c0c:	pop	{fp}		; (ldr fp, [sp], #4)
   10c10:	bx	lr
   10c14:	push	{fp, lr}
   10c18:	add	fp, sp, #4
   10c1c:	sub	sp, sp, #8
   10c20:	str	r0, [fp, #-8]
   10c24:	ldr	r3, [fp, #-8]
   10c28:	ldrd	r2, [r3]
   10c2c:	mov	r0, r2
   10c30:	mov	r1, r3
   10c34:	bl	10bec <_start@@Base+0x348>
   10c38:	mov	r2, r0
   10c3c:	mov	r3, r1
   10c40:	mov	r0, r2
   10c44:	mov	r1, r3
   10c48:	sub	sp, fp, #4
   10c4c:	pop	{fp, pc}
   10c50:	push	{fp}		; (str fp, [sp, #-4]!)
   10c54:	add	fp, sp, #0
   10c58:	sub	sp, sp, #12
   10c5c:	str	r0, [fp, #-8]
   10c60:	ldr	r3, [fp, #-8]
   10c64:	mov	r0, r3
   10c68:	add	sp, fp, #0
   10c6c:	pop	{fp}		; (ldr fp, [sp], #4)
   10c70:	bx	lr
   10c74:	push	{fp, lr}
   10c78:	add	fp, sp, #4
   10c7c:	sub	sp, sp, #8
   10c80:	str	r0, [fp, #-8]
   10c84:	ldr	r3, [fp, #-8]
   10c88:	ldr	r3, [r3]
   10c8c:	mov	r0, r3
   10c90:	bl	10c50 <_start@@Base+0x3ac>
   10c94:	mov	r3, r0
   10c98:	mov	r0, r3
   10c9c:	sub	sp, fp, #4
   10ca0:	pop	{fp, pc}
   10ca4:	push	{fp}		; (str fp, [sp, #-4]!)
   10ca8:	add	fp, sp, #0
   10cac:	sub	sp, sp, #12
   10cb0:	str	r0, [fp, #-8]
   10cb4:	ldr	r3, [fp, #-8]
   10cb8:	mov	r0, r3
   10cbc:	add	sp, fp, #0
   10cc0:	pop	{fp}		; (ldr fp, [sp], #4)
   10cc4:	bx	lr
   10cc8:	push	{fp, lr}
   10ccc:	add	fp, sp, #4
   10cd0:	sub	sp, sp, #8
   10cd4:	str	r0, [fp, #-8]
   10cd8:	ldr	r3, [fp, #-8]
   10cdc:	ldr	r3, [r3]
   10ce0:	mov	r0, r3
   10ce4:	bl	10ca4 <_start@@Base+0x400>
   10ce8:	mov	r3, r0
   10cec:	mov	r0, r3
   10cf0:	sub	sp, fp, #4
   10cf4:	pop	{fp, pc}
   10cf8:	push	{fp}		; (str fp, [sp, #-4]!)
   10cfc:	add	fp, sp, #0
   10d00:	sub	sp, sp, #12
   10d04:	mov	r3, r0
   10d08:	strh	r3, [fp, #-6]
   10d0c:	ldrh	r3, [fp, #-6]
   10d10:	mov	r0, r3
   10d14:	add	sp, fp, #0
   10d18:	pop	{fp}		; (ldr fp, [sp], #4)
   10d1c:	bx	lr
   10d20:	push	{fp, lr}
   10d24:	add	fp, sp, #4
   10d28:	sub	sp, sp, #8
   10d2c:	str	r0, [fp, #-8]
   10d30:	ldr	r3, [fp, #-8]
   10d34:	ldrh	r3, [r3]
   10d38:	mov	r0, r3
   10d3c:	bl	10cf8 <_start@@Base+0x454>
   10d40:	mov	r3, r0
   10d44:	mov	r0, r3
   10d48:	sub	sp, fp, #4
   10d4c:	pop	{fp, pc}
   10d50:	push	{fp}		; (str fp, [sp, #-4]!)
   10d54:	add	fp, sp, #0
   10d58:	sub	sp, sp, #12
   10d5c:	str	r0, [fp, #-8]
   10d60:	ldr	r3, [fp, #-8]
   10d64:	mov	r0, r3
   10d68:	add	sp, fp, #0
   10d6c:	pop	{fp}		; (ldr fp, [sp], #4)
   10d70:	bx	lr
   10d74:	push	{fp}		; (str fp, [sp, #-4]!)
   10d78:	add	fp, sp, #0
   10d7c:	sub	sp, sp, #12
   10d80:	str	r0, [fp, #-8]
   10d84:	ldr	r3, [fp, #-8]
   10d88:	mov	r0, r3
   10d8c:	add	sp, fp, #0
   10d90:	pop	{fp}		; (ldr fp, [sp], #4)
   10d94:	bx	lr
   10d98:	push	{fp, lr}
   10d9c:	add	fp, sp, #4
   10da0:	sub	sp, sp, #8
   10da4:	str	r0, [fp, #-8]
   10da8:	ldr	r3, [fp, #-8]
   10dac:	ldr	r3, [r3]
   10db0:	mov	r0, r3
   10db4:	bl	10d50 <_start@@Base+0x4ac>
   10db8:	mov	r3, r0
   10dbc:	mov	r0, r3
   10dc0:	sub	sp, fp, #4
   10dc4:	pop	{fp, pc}
   10dc8:	push	{fp, lr}
   10dcc:	add	fp, sp, #4
   10dd0:	sub	sp, sp, #8
   10dd4:	str	r0, [fp, #-8]
   10dd8:	ldr	r3, [fp, #-8]
   10ddc:	cmp	r3, #0
   10de0:	beq	10dfc <_start@@Base+0x558>
   10de4:	ldr	r3, [fp, #-8]
   10de8:	sub	r3, r3, #4
   10dec:	mov	r0, r3
   10df0:	bl	10c74 <_start@@Base+0x3d0>
   10df4:	mov	r3, r0
   10df8:	b	10e00 <_start@@Base+0x55c>
   10dfc:	mov	r3, #0
   10e00:	mov	r0, r3
   10e04:	sub	sp, fp, #4
   10e08:	pop	{fp, pc}
   10e0c:	push	{fp, lr}
   10e10:	add	fp, sp, #4
   10e14:	sub	sp, sp, #16
   10e18:	str	r0, [fp, #-8]
   10e1c:	str	r1, [fp, #-12]
   10e20:	str	r2, [fp, #-16]
   10e24:	ldr	r1, [fp, #-12]
   10e28:	ldr	r0, [fp, #-8]
   10e2c:	bl	107cc <strcmp@plt>
   10e30:	mov	r3, r0
   10e34:	mov	r0, r3
   10e38:	sub	sp, fp, #4
   10e3c:	pop	{fp, pc}
   10e40:	push	{fp, lr}
   10e44:	add	fp, sp, #4
   10e48:	sub	sp, sp, #16
   10e4c:	str	r0, [fp, #-16]
   10e50:	str	r1, [fp, #-20]	; 0xffffffec
   10e54:	mov	r3, #0
   10e58:	str	r3, [fp, #-12]
   10e5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10e60:	cmp	r3, #0
   10e64:	bne	10e70 <_start@@Base+0x5cc>
   10e68:	mov	r3, #1
   10e6c:	b	10ed4 <_start@@Base+0x630>
   10e70:	sub	r3, fp, #12
   10e74:	mov	r2, #4
   10e78:	ldr	r1, [fp, #-20]	; 0xffffffec
   10e7c:	mov	r0, r3
   10e80:	bl	10868 <strncpy@plt>
   10e84:	ldr	r3, [fp, #-12]
   10e88:	mov	r0, r3
   10e8c:	bl	10d74 <_start@@Base+0x4d0>
   10e90:	mov	r3, r0
   10e94:	str	r3, [fp, #-12]
   10e98:	ldr	r3, [fp, #-16]
   10e9c:	add	r3, r3, #4
   10ea0:	mov	r0, r3
   10ea4:	bl	10d98 <_start@@Base+0x4f4>
   10ea8:	str	r0, [fp, #-8]
   10eac:	ldr	r3, [fp, #-12]
   10eb0:	cmp	r3, #0
   10eb4:	beq	10ec8 <_start@@Base+0x624>
   10eb8:	ldr	r3, [fp, #-12]
   10ebc:	ldr	r2, [fp, #-8]
   10ec0:	cmp	r2, r3
   10ec4:	bne	10ed0 <_start@@Base+0x62c>
   10ec8:	mov	r3, #1
   10ecc:	b	10ed4 <_start@@Base+0x630>
   10ed0:	mov	r3, #0
   10ed4:	mov	r0, r3
   10ed8:	sub	sp, fp, #4
   10edc:	pop	{fp, pc}
   10ee0:	push	{fp}		; (str fp, [sp, #-4]!)
   10ee4:	add	fp, sp, #0
   10ee8:	sub	sp, sp, #12
   10eec:	mov	r3, r0
   10ef0:	strb	r3, [fp, #-5]
   10ef4:	ldrsb	r3, [fp, #-5]
   10ef8:	mov	r0, r3
   10efc:	add	sp, fp, #0
   10f00:	pop	{fp}		; (ldr fp, [sp], #4)
   10f04:	bx	lr
   10f08:	push	{fp, lr}
   10f0c:	add	fp, sp, #4
   10f10:	sub	sp, sp, #8
   10f14:	str	r0, [fp, #-8]
   10f18:	ldr	r3, [fp, #-8]
   10f1c:	ldrsb	r3, [r3]
   10f20:	mov	r0, r3
   10f24:	bl	10ee0 <_start@@Base+0x63c>
   10f28:	mov	r3, r0
   10f2c:	mov	r0, r3
   10f30:	sub	sp, fp, #4
   10f34:	pop	{fp, pc}
   10f38:	push	{fp, lr}
   10f3c:	add	fp, sp, #4
   10f40:	sub	sp, sp, #16
   10f44:	str	r0, [fp, #-16]
   10f48:	mov	r3, #0
   10f4c:	strh	r3, [fp, #-6]
   10f50:	ldr	r3, [fp, #-16]
   10f54:	cmp	r3, #0
   10f58:	bne	10f7c <_start@@Base+0x6d8>
   10f5c:	ldr	r3, [pc, #188]	; 11020 <_start@@Base+0x77c>
   10f60:	add	r3, pc, r3
   10f64:	mov	r2, #147	; 0x93
   10f68:	ldr	r1, [pc, #180]	; 11024 <_start@@Base+0x780>
   10f6c:	add	r1, pc, r1
   10f70:	ldr	r0, [pc, #176]	; 11028 <_start@@Base+0x784>
   10f74:	add	r0, pc, r0
   10f78:	bl	10898 <__assert_fail@plt>
   10f7c:	mov	r3, #0
   10f80:	strh	r3, [fp, #-8]
   10f84:	ldr	r0, [fp, #-16]
   10f88:	bl	10cc8 <_start@@Base+0x424>
   10f8c:	mov	r3, r0
   10f90:	rsb	r3, r3, #0
   10f94:	ldr	r2, [fp, #-16]
   10f98:	add	r3, r2, r3
   10f9c:	str	r3, [fp, #-12]
   10fa0:	ldr	r0, [fp, #-12]
   10fa4:	bl	10d20 <_start@@Base+0x47c>
   10fa8:	mov	r3, r0
   10fac:	mov	r2, r3
   10fb0:	ldrh	r3, [fp, #-8]
   10fb4:	add	r3, r3, #3
   10fb8:	lsl	r3, r3, #1
   10fbc:	cmp	r2, r3
   10fc0:	bcc	10fe8 <_start@@Base+0x744>
   10fc4:	ldrh	r3, [fp, #-8]
   10fc8:	add	r3, r3, #2
   10fcc:	lsl	r3, r3, #1
   10fd0:	ldr	r2, [fp, #-12]
   10fd4:	add	r3, r2, r3
   10fd8:	mov	r0, r3
   10fdc:	bl	10d20 <_start@@Base+0x47c>
   10fe0:	mov	r3, r0
   10fe4:	strh	r3, [fp, #-6]
   10fe8:	ldrh	r3, [fp, #-6]
   10fec:	cmp	r3, #0
   10ff0:	beq	11010 <_start@@Base+0x76c>
   10ff4:	ldrh	r3, [fp, #-6]
   10ff8:	ldr	r2, [fp, #-16]
   10ffc:	add	r3, r2, r3
   11000:	mov	r0, r3
   11004:	bl	10f08 <_start@@Base+0x664>
   11008:	mov	r3, r0
   1100c:	b	11014 <_start@@Base+0x770>
   11010:	mov	r3, #0
   11014:	mov	r0, r3
   11018:	sub	sp, fp, #4
   1101c:	pop	{fp, pc}
   11020:	andeq	r1, r0, r4, lsl #17
   11024:	andeq	r1, r0, r0, lsr #8
   11028:	muleq	r0, r0, r4
   1102c:	push	{fp, lr}
   11030:	add	fp, sp, #4
   11034:	sub	sp, sp, #16
   11038:	str	r0, [fp, #-16]
   1103c:	mov	r3, #0
   11040:	strh	r3, [fp, #-6]
   11044:	ldr	r3, [fp, #-16]
   11048:	cmp	r3, #0
   1104c:	bne	11070 <_start@@Base+0x7cc>
   11050:	ldr	r3, [pc, #188]	; 11114 <_start@@Base+0x870>
   11054:	add	r3, pc, r3
   11058:	mov	r2, #148	; 0x94
   1105c:	ldr	r1, [pc, #180]	; 11118 <_start@@Base+0x874>
   11060:	add	r1, pc, r1
   11064:	ldr	r0, [pc, #176]	; 1111c <_start@@Base+0x878>
   11068:	add	r0, pc, r0
   1106c:	bl	10898 <__assert_fail@plt>
   11070:	mov	r3, #1
   11074:	strh	r3, [fp, #-8]
   11078:	ldr	r0, [fp, #-16]
   1107c:	bl	10cc8 <_start@@Base+0x424>
   11080:	mov	r3, r0
   11084:	rsb	r3, r3, #0
   11088:	ldr	r2, [fp, #-16]
   1108c:	add	r3, r2, r3
   11090:	str	r3, [fp, #-12]
   11094:	ldr	r0, [fp, #-12]
   11098:	bl	10d20 <_start@@Base+0x47c>
   1109c:	mov	r3, r0
   110a0:	mov	r2, r3
   110a4:	ldrh	r3, [fp, #-8]
   110a8:	add	r3, r3, #3
   110ac:	lsl	r3, r3, #1
   110b0:	cmp	r2, r3
   110b4:	bcc	110dc <_start@@Base+0x838>
   110b8:	ldrh	r3, [fp, #-8]
   110bc:	add	r3, r3, #2
   110c0:	lsl	r3, r3, #1
   110c4:	ldr	r2, [fp, #-12]
   110c8:	add	r3, r2, r3
   110cc:	mov	r0, r3
   110d0:	bl	10d20 <_start@@Base+0x47c>
   110d4:	mov	r3, r0
   110d8:	strh	r3, [fp, #-6]
   110dc:	ldrh	r3, [fp, #-6]
   110e0:	cmp	r3, #0
   110e4:	beq	11104 <_start@@Base+0x860>
   110e8:	ldrh	r3, [fp, #-6]
   110ec:	ldr	r2, [fp, #-16]
   110f0:	add	r3, r2, r3
   110f4:	mov	r0, r3
   110f8:	bl	10f08 <_start@@Base+0x664>
   110fc:	mov	r3, r0
   11100:	b	11108 <_start@@Base+0x864>
   11104:	mov	r3, #0
   11108:	mov	r0, r3
   1110c:	sub	sp, fp, #4
   11110:	pop	{fp, pc}
   11114:	andeq	r1, r0, ip, lsr #15
   11118:	andeq	r1, r0, ip, lsr #6
   1111c:	muleq	r0, ip, r3
   11120:	push	{fp, lr}
   11124:	add	fp, sp, #4
   11128:	sub	sp, sp, #16
   1112c:	str	r0, [fp, #-16]
   11130:	mov	r3, #0
   11134:	strh	r3, [fp, #-6]
   11138:	ldr	r3, [fp, #-16]
   1113c:	cmp	r3, #0
   11140:	bne	11164 <_start@@Base+0x8c0>
   11144:	ldr	r3, [pc, #188]	; 11208 <_start@@Base+0x964>
   11148:	add	r3, pc, r3
   1114c:	mov	r2, #149	; 0x95
   11150:	ldr	r1, [pc, #180]	; 1120c <_start@@Base+0x968>
   11154:	add	r1, pc, r1
   11158:	ldr	r0, [pc, #176]	; 11210 <_start@@Base+0x96c>
   1115c:	add	r0, pc, r0
   11160:	bl	10898 <__assert_fail@plt>
   11164:	mov	r3, #2
   11168:	strh	r3, [fp, #-8]
   1116c:	ldr	r0, [fp, #-16]
   11170:	bl	10cc8 <_start@@Base+0x424>
   11174:	mov	r3, r0
   11178:	rsb	r3, r3, #0
   1117c:	ldr	r2, [fp, #-16]
   11180:	add	r3, r2, r3
   11184:	str	r3, [fp, #-12]
   11188:	ldr	r0, [fp, #-12]
   1118c:	bl	10d20 <_start@@Base+0x47c>
   11190:	mov	r3, r0
   11194:	mov	r2, r3
   11198:	ldrh	r3, [fp, #-8]
   1119c:	add	r3, r3, #3
   111a0:	lsl	r3, r3, #1
   111a4:	cmp	r2, r3
   111a8:	bcc	111d0 <_start@@Base+0x92c>
   111ac:	ldrh	r3, [fp, #-8]
   111b0:	add	r3, r3, #2
   111b4:	lsl	r3, r3, #1
   111b8:	ldr	r2, [fp, #-12]
   111bc:	add	r3, r2, r3
   111c0:	mov	r0, r3
   111c4:	bl	10d20 <_start@@Base+0x47c>
   111c8:	mov	r3, r0
   111cc:	strh	r3, [fp, #-6]
   111d0:	ldrh	r3, [fp, #-6]
   111d4:	cmp	r3, #0
   111d8:	beq	111f8 <_start@@Base+0x954>
   111dc:	ldrh	r3, [fp, #-6]
   111e0:	ldr	r2, [fp, #-16]
   111e4:	add	r3, r2, r3
   111e8:	mov	r0, r3
   111ec:	bl	10bbc <_start@@Base+0x318>
   111f0:	mov	r3, r0
   111f4:	b	111fc <_start@@Base+0x958>
   111f8:	mvn	r3, #0
   111fc:	mov	r0, r3
   11200:	sub	sp, fp, #4
   11204:	pop	{fp, pc}
   11208:	ldrdeq	r1, [r0], -r0
   1120c:	andeq	r1, r0, r8, lsr r2
   11210:	andeq	r1, r0, r8, lsr #5
   11214:	push	{fp, lr}
   11218:	add	fp, sp, #4
   1121c:	sub	sp, sp, #8
   11220:	str	r0, [fp, #-8]
   11224:	ldr	r3, [fp, #-8]
   11228:	cmp	r3, #0
   1122c:	beq	11248 <_start@@Base+0x9a4>
   11230:	ldr	r3, [fp, #-8]
   11234:	sub	r3, r3, #4
   11238:	mov	r0, r3
   1123c:	bl	10c74 <_start@@Base+0x3d0>
   11240:	mov	r3, r0
   11244:	b	1124c <_start@@Base+0x9a8>
   11248:	mov	r3, #0
   1124c:	mov	r0, r3
   11250:	sub	sp, fp, #4
   11254:	pop	{fp, pc}
   11258:	push	{fp, lr}
   1125c:	add	fp, sp, #4
   11260:	sub	sp, sp, #16
   11264:	str	r0, [fp, #-16]
   11268:	str	r1, [fp, #-20]	; 0xffffffec
   1126c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11270:	lsl	r3, r3, #2
   11274:	ldr	r2, [fp, #-16]
   11278:	add	r3, r2, r3
   1127c:	str	r3, [fp, #-8]
   11280:	ldr	r0, [fp, #-16]
   11284:	bl	10dc8 <_start@@Base+0x524>
   11288:	mov	r2, r0
   1128c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11290:	cmp	r2, r3
   11294:	bhi	112b8 <_start@@Base+0xa14>
   11298:	ldr	r3, [pc, #56]	; 112d8 <_start@@Base+0xa34>
   1129c:	add	r3, pc, r3
   112a0:	mov	r2, #192	; 0xc0
   112a4:	ldr	r1, [pc, #48]	; 112dc <_start@@Base+0xa38>
   112a8:	add	r1, pc, r1
   112ac:	ldr	r0, [pc, #44]	; 112e0 <_start@@Base+0xa3c>
   112b0:	add	r0, pc, r0
   112b4:	bl	10898 <__assert_fail@plt>
   112b8:	ldr	r0, [fp, #-8]
   112bc:	bl	10c74 <_start@@Base+0x3d0>
   112c0:	mov	r2, r0
   112c4:	ldr	r3, [fp, #-8]
   112c8:	add	r3, r3, r2
   112cc:	mov	r0, r3
   112d0:	sub	sp, fp, #4
   112d4:	pop	{fp, pc}
   112d8:	andeq	r1, r0, r8, lsl r5
   112dc:	andeq	r1, r0, r4, ror #1
   112e0:	andeq	r1, r0, ip, ror r1
   112e4:	push	{fp, lr}
   112e8:	add	fp, sp, #4
   112ec:	sub	sp, sp, #24
   112f0:	str	r0, [fp, #-24]	; 0xffffffe8
   112f4:	mov	r3, #0
   112f8:	strh	r3, [fp, #-6]
   112fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11300:	cmp	r3, #0
   11304:	bne	11328 <_start@@Base+0xa84>
   11308:	ldr	r3, [pc, #232]	; 113f8 <_start@@Base+0xb54>
   1130c:	add	r3, pc, r3
   11310:	mov	r2, #195	; 0xc3
   11314:	ldr	r1, [pc, #224]	; 113fc <_start@@Base+0xb58>
   11318:	add	r1, pc, r1
   1131c:	ldr	r0, [pc, #220]	; 11400 <_start@@Base+0xb5c>
   11320:	add	r0, pc, r0
   11324:	bl	10898 <__assert_fail@plt>
   11328:	mov	r3, #0
   1132c:	strh	r3, [fp, #-8]
   11330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11334:	bl	10cc8 <_start@@Base+0x424>
   11338:	mov	r3, r0
   1133c:	rsb	r3, r3, #0
   11340:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11344:	add	r3, r2, r3
   11348:	str	r3, [fp, #-12]
   1134c:	ldr	r0, [fp, #-12]
   11350:	bl	10d20 <_start@@Base+0x47c>
   11354:	mov	r3, r0
   11358:	mov	r2, r3
   1135c:	ldrh	r3, [fp, #-8]
   11360:	add	r3, r3, #3
   11364:	lsl	r3, r3, #1
   11368:	cmp	r2, r3
   1136c:	bcc	11394 <_start@@Base+0xaf0>
   11370:	ldrh	r3, [fp, #-8]
   11374:	add	r3, r3, #2
   11378:	lsl	r3, r3, #1
   1137c:	ldr	r2, [fp, #-12]
   11380:	add	r3, r2, r3
   11384:	mov	r0, r3
   11388:	bl	10d20 <_start@@Base+0x47c>
   1138c:	mov	r3, r0
   11390:	strh	r3, [fp, #-6]
   11394:	ldrh	r3, [fp, #-6]
   11398:	cmp	r3, #0
   1139c:	beq	113cc <_start@@Base+0xb28>
   113a0:	ldrh	r3, [fp, #-6]
   113a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   113a8:	add	r3, r2, r3
   113ac:	str	r3, [fp, #-16]
   113b0:	ldr	r0, [fp, #-16]
   113b4:	bl	10c74 <_start@@Base+0x3d0>
   113b8:	mov	r3, r0
   113bc:	add	r3, r3, #4
   113c0:	ldr	r2, [fp, #-16]
   113c4:	add	r3, r2, r3
   113c8:	b	113ec <_start@@Base+0xb48>
   113cc:	ldr	r3, [pc, #48]	; 11404 <_start@@Base+0xb60>
   113d0:	add	r3, pc, r3
   113d4:	mov	r2, #195	; 0xc3
   113d8:	ldr	r1, [pc, #40]	; 11408 <_start@@Base+0xb64>
   113dc:	add	r1, pc, r1
   113e0:	ldr	r0, [pc, #36]	; 1140c <_start@@Base+0xb68>
   113e4:	add	r0, pc, r0
   113e8:	bl	10898 <__assert_fail@plt>
   113ec:	mov	r0, r3
   113f0:	sub	sp, fp, #4
   113f4:	pop	{fp, pc}
   113f8:	andeq	r1, r0, ip, ror #8
   113fc:	andeq	r1, r0, r4, ror r0
   11400:	andeq	r1, r0, r4, ror #1
   11404:	andeq	r1, r0, r8, lsr #7
   11408:			; <UNDEFINED> instruction: 0x00000fb0
   1140c:	andeq	r1, r0, r0, lsl #1
   11410:	push	{fp, lr}
   11414:	add	fp, sp, #4
   11418:	sub	sp, sp, #24
   1141c:	str	r0, [fp, #-24]	; 0xffffffe8
   11420:	str	r1, [fp, #-28]	; 0xffffffe4
   11424:	mov	r3, #0
   11428:	str	r3, [fp, #-8]
   1142c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11430:	bl	11214 <_start@@Base+0x970>
   11434:	str	r0, [fp, #-12]
   11438:	ldr	r3, [fp, #-12]
   1143c:	cmp	r3, #0
   11440:	bne	11454 <_start@@Base+0xbb0>
   11444:	ldr	r3, [pc, #252]	; 11548 <_start@@Base+0xca4>
   11448:	add	r3, pc, r3
   1144c:	ldr	r3, [r3]
   11450:	b	1153c <_start@@Base+0xc98>
   11454:	ldr	r3, [fp, #-12]
   11458:	sub	r3, r3, #1
   1145c:	str	r3, [fp, #-12]
   11460:	b	114d0 <_start@@Base+0xc2c>
   11464:	ldr	r2, [fp, #-12]
   11468:	ldr	r3, [fp, #-8]
   1146c:	sub	r3, r2, r3
   11470:	lsr	r2, r3, #1
   11474:	ldr	r3, [fp, #-8]
   11478:	add	r3, r2, r3
   1147c:	str	r3, [fp, #-16]
   11480:	ldr	r1, [fp, #-16]
   11484:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11488:	bl	11258 <_start@@Base+0x9b4>
   1148c:	mov	r3, r0
   11490:	mov	r0, r3
   11494:	bl	112e4 <_start@@Base+0xa40>
   11498:	str	r0, [fp, #-20]	; 0xffffffec
   1149c:	mov	r2, #0
   114a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   114a8:	bl	10e0c <_start@@Base+0x568>
   114ac:	mov	r3, r0
   114b0:	cmp	r3, #0
   114b4:	bge	114c8 <_start@@Base+0xc24>
   114b8:	ldr	r3, [fp, #-16]
   114bc:	add	r3, r3, #1
   114c0:	str	r3, [fp, #-8]
   114c4:	b	114d0 <_start@@Base+0xc2c>
   114c8:	ldr	r3, [fp, #-16]
   114cc:	str	r3, [fp, #-12]
   114d0:	ldr	r2, [fp, #-8]
   114d4:	ldr	r3, [fp, #-12]
   114d8:	cmp	r2, r3
   114dc:	bcc	11464 <_start@@Base+0xbc0>
   114e0:	ldr	r2, [fp, #-8]
   114e4:	ldr	r3, [fp, #-12]
   114e8:	cmp	r2, r3
   114ec:	bne	11530 <_start@@Base+0xc8c>
   114f0:	ldr	r1, [fp, #-8]
   114f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114f8:	bl	11258 <_start@@Base+0x9b4>
   114fc:	mov	r3, r0
   11500:	mov	r0, r3
   11504:	bl	112e4 <_start@@Base+0xa40>
   11508:	str	r0, [fp, #-20]	; 0xffffffec
   1150c:	mov	r2, #0
   11510:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11514:	ldr	r0, [fp, #-20]	; 0xffffffec
   11518:	bl	10e0c <_start@@Base+0x568>
   1151c:	mov	r3, r0
   11520:	cmp	r3, #0
   11524:	bne	11530 <_start@@Base+0xc8c>
   11528:	ldr	r3, [fp, #-8]
   1152c:	b	1153c <_start@@Base+0xc98>
   11530:	ldr	r3, [pc, #20]	; 1154c <_start@@Base+0xca8>
   11534:	add	r3, pc, r3
   11538:	ldr	r3, [r3]
   1153c:	mov	r0, r3
   11540:	sub	sp, fp, #4
   11544:	pop	{fp, pc}
   11548:	andeq	r1, r1, r8, lsl ip
   1154c:	andeq	r1, r1, ip, lsr #22
   11550:	push	{fp, lr}
   11554:	add	fp, sp, #4
   11558:	sub	sp, sp, #8
   1155c:	str	r0, [fp, #-8]
   11560:	str	r1, [fp, #-12]
   11564:	ldr	r1, [fp, #-12]
   11568:	ldr	r0, [fp, #-8]
   1156c:	bl	11410 <_start@@Base+0xb6c>
   11570:	mov	r3, r0
   11574:	mov	r0, r3
   11578:	sub	sp, fp, #4
   1157c:	pop	{fp, pc}
   11580:	push	{fp, lr}
   11584:	add	fp, sp, #4
   11588:	sub	sp, sp, #24
   1158c:	str	r0, [fp, #-24]	; 0xffffffe8
   11590:	mov	r3, #0
   11594:	strh	r3, [fp, #-6]
   11598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1159c:	cmp	r3, #0
   115a0:	bne	115c4 <_start@@Base+0xd20>
   115a4:	ldr	r3, [pc, #228]	; 11690 <_start@@Base+0xdec>
   115a8:	add	r3, pc, r3
   115ac:	mov	r2, #201	; 0xc9
   115b0:	ldr	r1, [pc, #220]	; 11694 <_start@@Base+0xdf0>
   115b4:	add	r1, pc, r1
   115b8:	ldr	r0, [pc, #216]	; 11698 <_start@@Base+0xdf4>
   115bc:	add	r0, pc, r0
   115c0:	bl	10898 <__assert_fail@plt>
   115c4:	mov	r3, #1
   115c8:	strh	r3, [fp, #-8]
   115cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115d0:	bl	10cc8 <_start@@Base+0x424>
   115d4:	mov	r3, r0
   115d8:	rsb	r3, r3, #0
   115dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   115e0:	add	r3, r2, r3
   115e4:	str	r3, [fp, #-12]
   115e8:	ldr	r0, [fp, #-12]
   115ec:	bl	10d20 <_start@@Base+0x47c>
   115f0:	mov	r3, r0
   115f4:	mov	r2, r3
   115f8:	ldrh	r3, [fp, #-8]
   115fc:	add	r3, r3, #3
   11600:	lsl	r3, r3, #1
   11604:	cmp	r2, r3
   11608:	bcc	11630 <_start@@Base+0xd8c>
   1160c:	ldrh	r3, [fp, #-8]
   11610:	add	r3, r3, #2
   11614:	lsl	r3, r3, #1
   11618:	ldr	r2, [fp, #-12]
   1161c:	add	r3, r2, r3
   11620:	mov	r0, r3
   11624:	bl	10d20 <_start@@Base+0x47c>
   11628:	mov	r3, r0
   1162c:	strh	r3, [fp, #-6]
   11630:	ldrh	r3, [fp, #-6]
   11634:	cmp	r3, #0
   11638:	beq	11664 <_start@@Base+0xdc0>
   1163c:	ldrh	r3, [fp, #-6]
   11640:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11644:	add	r3, r2, r3
   11648:	str	r3, [fp, #-16]
   1164c:	ldr	r0, [fp, #-16]
   11650:	bl	10c74 <_start@@Base+0x3d0>
   11654:	mov	r2, r0
   11658:	ldr	r3, [fp, #-16]
   1165c:	add	r3, r3, r2
   11660:	b	11684 <_start@@Base+0xde0>
   11664:	ldr	r3, [pc, #48]	; 1169c <_start@@Base+0xdf8>
   11668:	add	r3, pc, r3
   1166c:	mov	r2, #201	; 0xc9
   11670:	ldr	r1, [pc, #40]	; 116a0 <_start@@Base+0xdfc>
   11674:	add	r1, pc, r1
   11678:	ldr	r0, [pc, #36]	; 116a4 <_start@@Base+0xe00>
   1167c:	add	r0, pc, r0
   11680:	bl	10898 <__assert_fail@plt>
   11684:	mov	r0, r3
   11688:	sub	sp, fp, #4
   1168c:	pop	{fp, pc}
   11690:	andeq	r1, r0, r4, lsr #4
   11694:	ldrdeq	r0, [r0], -r8
   11698:	andeq	r0, r0, r8, asr #28
   1169c:	andeq	r1, r0, r4, ror #2
   116a0:	andeq	r0, r0, r8, lsl sp
   116a4:	andeq	r0, r0, r8, ror #27
   116a8:	push	{fp, lr}
   116ac:	add	fp, sp, #4
   116b0:	sub	sp, sp, #16
   116b4:	str	r0, [fp, #-16]
   116b8:	mov	r3, #0
   116bc:	strh	r3, [fp, #-6]
   116c0:	ldr	r3, [fp, #-16]
   116c4:	cmp	r3, #0
   116c8:	bne	116ec <_start@@Base+0xe48>
   116cc:	ldr	r3, [pc, #200]	; 1179c <_start@@Base+0xef8>
   116d0:	add	r3, pc, r3
   116d4:	mov	r2, #204	; 0xcc
   116d8:	ldr	r1, [pc, #192]	; 117a0 <_start@@Base+0xefc>
   116dc:	add	r1, pc, r1
   116e0:	ldr	r0, [pc, #188]	; 117a4 <_start@@Base+0xf00>
   116e4:	add	r0, pc, r0
   116e8:	bl	10898 <__assert_fail@plt>
   116ec:	mov	r3, #4
   116f0:	strh	r3, [fp, #-8]
   116f4:	ldr	r0, [fp, #-16]
   116f8:	bl	10cc8 <_start@@Base+0x424>
   116fc:	mov	r3, r0
   11700:	rsb	r3, r3, #0
   11704:	ldr	r2, [fp, #-16]
   11708:	add	r3, r2, r3
   1170c:	str	r3, [fp, #-12]
   11710:	ldr	r0, [fp, #-12]
   11714:	bl	10d20 <_start@@Base+0x47c>
   11718:	mov	r3, r0
   1171c:	mov	r2, r3
   11720:	ldrh	r3, [fp, #-8]
   11724:	add	r3, r3, #3
   11728:	lsl	r3, r3, #1
   1172c:	cmp	r2, r3
   11730:	bcc	11758 <_start@@Base+0xeb4>
   11734:	ldrh	r3, [fp, #-8]
   11738:	add	r3, r3, #2
   1173c:	lsl	r3, r3, #1
   11740:	ldr	r2, [fp, #-12]
   11744:	add	r3, r2, r3
   11748:	mov	r0, r3
   1174c:	bl	10d20 <_start@@Base+0x47c>
   11750:	mov	r3, r0
   11754:	strh	r3, [fp, #-6]
   11758:	ldrh	r3, [fp, #-6]
   1175c:	cmp	r3, #0
   11760:	beq	11784 <_start@@Base+0xee0>
   11764:	ldrh	r3, [fp, #-6]
   11768:	ldr	r2, [fp, #-16]
   1176c:	add	r3, r2, r3
   11770:	mov	r0, r3
   11774:	bl	10c14 <_start@@Base+0x370>
   11778:	mov	r2, r0
   1177c:	mov	r3, r1
   11780:	b	1178c <_start@@Base+0xee8>
   11784:	mov	r2, #0
   11788:	mov	r3, #0
   1178c:	mov	r0, r2
   11790:	mov	r1, r3
   11794:	sub	sp, fp, #4
   11798:	pop	{fp, pc}
   1179c:	andeq	r1, r0, r0, asr #1
   117a0:			; <UNDEFINED> instruction: 0x00000cb0
   117a4:	andeq	r0, r0, r0, lsr #26
   117a8:	push	{fp, lr}
   117ac:	add	fp, sp, #4
   117b0:	sub	sp, sp, #8
   117b4:	str	r0, [fp, #-8]
   117b8:	ldr	r3, [fp, #-8]
   117bc:	cmp	r3, #0
   117c0:	beq	117dc <_start@@Base+0xf38>
   117c4:	ldr	r3, [fp, #-8]
   117c8:	sub	r3, r3, #4
   117cc:	mov	r0, r3
   117d0:	bl	10c74 <_start@@Base+0x3d0>
   117d4:	mov	r3, r0
   117d8:	b	117e0 <_start@@Base+0xf3c>
   117dc:	mov	r3, #0
   117e0:	mov	r0, r3
   117e4:	sub	sp, fp, #4
   117e8:	pop	{fp, pc}
   117ec:	push	{fp, lr}
   117f0:	add	fp, sp, #4
   117f4:	sub	sp, sp, #16
   117f8:	str	r0, [fp, #-16]
   117fc:	str	r1, [fp, #-20]	; 0xffffffec
   11800:	ldr	r3, [fp, #-20]	; 0xffffffec
   11804:	lsl	r3, r3, #2
   11808:	ldr	r2, [fp, #-16]
   1180c:	add	r3, r2, r3
   11810:	str	r3, [fp, #-8]
   11814:	ldr	r0, [fp, #-16]
   11818:	bl	10dc8 <_start@@Base+0x524>
   1181c:	mov	r2, r0
   11820:	ldr	r3, [fp, #-20]	; 0xffffffec
   11824:	cmp	r2, r3
   11828:	bhi	1184c <_start@@Base+0xfa8>
   1182c:	ldr	r3, [pc, #56]	; 1186c <_start@@Base+0xfc8>
   11830:	add	r3, pc, r3
   11834:	mov	r2, #215	; 0xd7
   11838:	ldr	r1, [pc, #48]	; 11870 <_start@@Base+0xfcc>
   1183c:	add	r1, pc, r1
   11840:	ldr	r0, [pc, #44]	; 11874 <_start@@Base+0xfd0>
   11844:	add	r0, pc, r0
   11848:	bl	10898 <__assert_fail@plt>
   1184c:	ldr	r0, [fp, #-8]
   11850:	bl	10c74 <_start@@Base+0x3d0>
   11854:	mov	r2, r0
   11858:	ldr	r3, [fp, #-8]
   1185c:	add	r3, r3, r2
   11860:	mov	r0, r3
   11864:	sub	sp, fp, #4
   11868:	pop	{fp, pc}
   1186c:	strdeq	r0, [r0], -r8
   11870:	andeq	r0, r0, r0, asr fp
   11874:	andeq	r0, r0, r8, ror #23
   11878:	push	{fp, lr}
   1187c:	add	fp, sp, #4
   11880:	sub	sp, sp, #24
   11884:	str	r0, [fp, #-24]	; 0xffffffe8
   11888:	mov	r3, #0
   1188c:	strh	r3, [fp, #-6]
   11890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11894:	cmp	r3, #0
   11898:	bne	118bc <_start@@Base+0x1018>
   1189c:	ldr	r3, [pc, #232]	; 1198c <_start@@Base+0x10e8>
   118a0:	add	r3, pc, r3
   118a4:	mov	r2, #218	; 0xda
   118a8:	ldr	r1, [pc, #224]	; 11990 <_start@@Base+0x10ec>
   118ac:	add	r1, pc, r1
   118b0:	ldr	r0, [pc, #220]	; 11994 <_start@@Base+0x10f0>
   118b4:	add	r0, pc, r0
   118b8:	bl	10898 <__assert_fail@plt>
   118bc:	mov	r3, #0
   118c0:	strh	r3, [fp, #-8]
   118c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118c8:	bl	10cc8 <_start@@Base+0x424>
   118cc:	mov	r3, r0
   118d0:	rsb	r3, r3, #0
   118d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   118d8:	add	r3, r2, r3
   118dc:	str	r3, [fp, #-12]
   118e0:	ldr	r0, [fp, #-12]
   118e4:	bl	10d20 <_start@@Base+0x47c>
   118e8:	mov	r3, r0
   118ec:	mov	r2, r3
   118f0:	ldrh	r3, [fp, #-8]
   118f4:	add	r3, r3, #3
   118f8:	lsl	r3, r3, #1
   118fc:	cmp	r2, r3
   11900:	bcc	11928 <_start@@Base+0x1084>
   11904:	ldrh	r3, [fp, #-8]
   11908:	add	r3, r3, #2
   1190c:	lsl	r3, r3, #1
   11910:	ldr	r2, [fp, #-12]
   11914:	add	r3, r2, r3
   11918:	mov	r0, r3
   1191c:	bl	10d20 <_start@@Base+0x47c>
   11920:	mov	r3, r0
   11924:	strh	r3, [fp, #-6]
   11928:	ldrh	r3, [fp, #-6]
   1192c:	cmp	r3, #0
   11930:	beq	11960 <_start@@Base+0x10bc>
   11934:	ldrh	r3, [fp, #-6]
   11938:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1193c:	add	r3, r2, r3
   11940:	str	r3, [fp, #-16]
   11944:	ldr	r0, [fp, #-16]
   11948:	bl	10c74 <_start@@Base+0x3d0>
   1194c:	mov	r3, r0
   11950:	add	r3, r3, #4
   11954:	ldr	r2, [fp, #-16]
   11958:	add	r3, r2, r3
   1195c:	b	11980 <_start@@Base+0x10dc>
   11960:	ldr	r3, [pc, #48]	; 11998 <_start@@Base+0x10f4>
   11964:	add	r3, pc, r3
   11968:	mov	r2, #218	; 0xda
   1196c:	ldr	r1, [pc, #40]	; 1199c <_start@@Base+0x10f8>
   11970:	add	r1, pc, r1
   11974:	ldr	r0, [pc, #36]	; 119a0 <_start@@Base+0x10fc>
   11978:	add	r0, pc, r0
   1197c:	bl	10898 <__assert_fail@plt>
   11980:	mov	r0, r3
   11984:	sub	sp, fp, #4
   11988:	pop	{fp, pc}
   1198c:	andeq	r0, r0, r4, lsr #29
   11990:	andeq	r0, r0, r0, ror #21
   11994:	andeq	r0, r0, r0, asr fp
   11998:	andeq	r0, r0, r0, ror #27
   1199c:	andeq	r0, r0, ip, lsl sl
   119a0:	andeq	r0, r0, ip, ror #21
   119a4:	push	{fp, lr}
   119a8:	add	fp, sp, #4
   119ac:	sub	sp, sp, #24
   119b0:	str	r0, [fp, #-24]	; 0xffffffe8
   119b4:	str	r1, [fp, #-28]	; 0xffffffe4
   119b8:	mov	r3, #0
   119bc:	str	r3, [fp, #-8]
   119c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119c4:	bl	117a8 <_start@@Base+0xf04>
   119c8:	str	r0, [fp, #-12]
   119cc:	ldr	r3, [fp, #-12]
   119d0:	cmp	r3, #0
   119d4:	bne	119e8 <_start@@Base+0x1144>
   119d8:	ldr	r3, [pc, #252]	; 11adc <_start@@Base+0x1238>
   119dc:	add	r3, pc, r3
   119e0:	ldr	r3, [r3]
   119e4:	b	11ad0 <_start@@Base+0x122c>
   119e8:	ldr	r3, [fp, #-12]
   119ec:	sub	r3, r3, #1
   119f0:	str	r3, [fp, #-12]
   119f4:	b	11a64 <_start@@Base+0x11c0>
   119f8:	ldr	r2, [fp, #-12]
   119fc:	ldr	r3, [fp, #-8]
   11a00:	sub	r3, r2, r3
   11a04:	lsr	r2, r3, #1
   11a08:	ldr	r3, [fp, #-8]
   11a0c:	add	r3, r2, r3
   11a10:	str	r3, [fp, #-16]
   11a14:	ldr	r1, [fp, #-16]
   11a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a1c:	bl	117ec <_start@@Base+0xf48>
   11a20:	mov	r3, r0
   11a24:	mov	r0, r3
   11a28:	bl	11878 <_start@@Base+0xfd4>
   11a2c:	str	r0, [fp, #-20]	; 0xffffffec
   11a30:	mov	r2, #0
   11a34:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a38:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a3c:	bl	10e0c <_start@@Base+0x568>
   11a40:	mov	r3, r0
   11a44:	cmp	r3, #0
   11a48:	bge	11a5c <_start@@Base+0x11b8>
   11a4c:	ldr	r3, [fp, #-16]
   11a50:	add	r3, r3, #1
   11a54:	str	r3, [fp, #-8]
   11a58:	b	11a64 <_start@@Base+0x11c0>
   11a5c:	ldr	r3, [fp, #-16]
   11a60:	str	r3, [fp, #-12]
   11a64:	ldr	r2, [fp, #-8]
   11a68:	ldr	r3, [fp, #-12]
   11a6c:	cmp	r2, r3
   11a70:	bcc	119f8 <_start@@Base+0x1154>
   11a74:	ldr	r2, [fp, #-8]
   11a78:	ldr	r3, [fp, #-12]
   11a7c:	cmp	r2, r3
   11a80:	bne	11ac4 <_start@@Base+0x1220>
   11a84:	ldr	r1, [fp, #-8]
   11a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a8c:	bl	117ec <_start@@Base+0xf48>
   11a90:	mov	r3, r0
   11a94:	mov	r0, r3
   11a98:	bl	11878 <_start@@Base+0xfd4>
   11a9c:	str	r0, [fp, #-20]	; 0xffffffec
   11aa0:	mov	r2, #0
   11aa4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11aac:	bl	10e0c <_start@@Base+0x568>
   11ab0:	mov	r3, r0
   11ab4:	cmp	r3, #0
   11ab8:	bne	11ac4 <_start@@Base+0x1220>
   11abc:	ldr	r3, [fp, #-8]
   11ac0:	b	11ad0 <_start@@Base+0x122c>
   11ac4:	ldr	r3, [pc, #20]	; 11ae0 <_start@@Base+0x123c>
   11ac8:	add	r3, pc, r3
   11acc:	ldr	r3, [r3]
   11ad0:	mov	r0, r3
   11ad4:	sub	sp, fp, #4
   11ad8:	pop	{fp, pc}
   11adc:	andeq	r1, r1, r4, lsl #13
   11ae0:	muleq	r1, r8, r5
   11ae4:	push	{fp, lr}
   11ae8:	add	fp, sp, #4
   11aec:	sub	sp, sp, #8
   11af0:	str	r0, [fp, #-8]
   11af4:	str	r1, [fp, #-12]
   11af8:	ldr	r1, [fp, #-12]
   11afc:	ldr	r0, [fp, #-8]
   11b00:	bl	119a4 <_start@@Base+0x1100>
   11b04:	mov	r3, r0
   11b08:	mov	r0, r3
   11b0c:	sub	sp, fp, #4
   11b10:	pop	{fp, pc}
   11b14:	push	{fp, lr}
   11b18:	add	fp, sp, #4
   11b1c:	sub	sp, sp, #24
   11b20:	str	r0, [fp, #-24]	; 0xffffffe8
   11b24:	mov	r3, #0
   11b28:	strh	r3, [fp, #-6]
   11b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b30:	cmp	r3, #0
   11b34:	bne	11b58 <_start@@Base+0x12b4>
   11b38:	ldr	r3, [pc, #232]	; 11c28 <_start@@Base+0x1384>
   11b3c:	add	r3, pc, r3
   11b40:	mov	r2, #224	; 0xe0
   11b44:	ldr	r1, [pc, #224]	; 11c2c <_start@@Base+0x1388>
   11b48:	add	r1, pc, r1
   11b4c:	ldr	r0, [pc, #220]	; 11c30 <_start@@Base+0x138c>
   11b50:	add	r0, pc, r0
   11b54:	bl	10898 <__assert_fail@plt>
   11b58:	mov	r3, #1
   11b5c:	strh	r3, [fp, #-8]
   11b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b64:	bl	10cc8 <_start@@Base+0x424>
   11b68:	mov	r3, r0
   11b6c:	rsb	r3, r3, #0
   11b70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11b74:	add	r3, r2, r3
   11b78:	str	r3, [fp, #-12]
   11b7c:	ldr	r0, [fp, #-12]
   11b80:	bl	10d20 <_start@@Base+0x47c>
   11b84:	mov	r3, r0
   11b88:	mov	r2, r3
   11b8c:	ldrh	r3, [fp, #-8]
   11b90:	add	r3, r3, #3
   11b94:	lsl	r3, r3, #1
   11b98:	cmp	r2, r3
   11b9c:	bcc	11bc4 <_start@@Base+0x1320>
   11ba0:	ldrh	r3, [fp, #-8]
   11ba4:	add	r3, r3, #2
   11ba8:	lsl	r3, r3, #1
   11bac:	ldr	r2, [fp, #-12]
   11bb0:	add	r3, r2, r3
   11bb4:	mov	r0, r3
   11bb8:	bl	10d20 <_start@@Base+0x47c>
   11bbc:	mov	r3, r0
   11bc0:	strh	r3, [fp, #-6]
   11bc4:	ldrh	r3, [fp, #-6]
   11bc8:	cmp	r3, #0
   11bcc:	beq	11bfc <_start@@Base+0x1358>
   11bd0:	ldrh	r3, [fp, #-6]
   11bd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11bd8:	add	r3, r2, r3
   11bdc:	str	r3, [fp, #-16]
   11be0:	ldr	r0, [fp, #-16]
   11be4:	bl	10c74 <_start@@Base+0x3d0>
   11be8:	mov	r3, r0
   11bec:	add	r3, r3, #4
   11bf0:	ldr	r2, [fp, #-16]
   11bf4:	add	r3, r2, r3
   11bf8:	b	11c1c <_start@@Base+0x1378>
   11bfc:	ldr	r3, [pc, #48]	; 11c34 <_start@@Base+0x1390>
   11c00:	add	r3, pc, r3
   11c04:	mov	r2, #224	; 0xe0
   11c08:	ldr	r1, [pc, #40]	; 11c38 <_start@@Base+0x1394>
   11c0c:	add	r1, pc, r1
   11c10:	ldr	r0, [pc, #36]	; 11c3c <_start@@Base+0x1398>
   11c14:	add	r0, pc, r0
   11c18:	bl	10898 <__assert_fail@plt>
   11c1c:	mov	r0, r3
   11c20:	sub	sp, fp, #4
   11c24:	pop	{fp, pc}
   11c28:	andeq	r0, r0, r0, lsr #24
   11c2c:	andeq	r0, r0, r4, asr #16
   11c30:			; <UNDEFINED> instruction: 0x000008b4
   11c34:	andeq	r0, r0, ip, asr fp
   11c38:	andeq	r0, r0, r0, lsl #15
   11c3c:	andeq	r0, r0, r0, asr r8
   11c40:	push	{fp, lr}
   11c44:	add	fp, sp, #4
   11c48:	sub	sp, sp, #16
   11c4c:	str	r0, [fp, #-16]
   11c50:	ldr	r3, [pc, #80]	; 11ca8 <_start@@Base+0x1404>
   11c54:	add	r3, pc, r3
   11c58:	str	r3, [fp, #-8]
   11c5c:	ldr	r3, [fp, #-16]
   11c60:	cmp	r3, #0
   11c64:	beq	11c98 <_start@@Base+0x13f4>
   11c68:	ldr	r1, [fp, #-8]
   11c6c:	ldr	r0, [fp, #-16]
   11c70:	bl	10e40 <_start@@Base+0x59c>
   11c74:	mov	r3, r0
   11c78:	cmp	r3, #0
   11c7c:	beq	11c98 <_start@@Base+0x13f4>
   11c80:	ldr	r0, [fp, #-16]
   11c84:	bl	10c74 <_start@@Base+0x3d0>
   11c88:	mov	r2, r0
   11c8c:	ldr	r3, [fp, #-16]
   11c90:	add	r3, r3, r2
   11c94:	b	11c9c <_start@@Base+0x13f8>
   11c98:	mov	r3, #0
   11c9c:	mov	r0, r3
   11ca0:	sub	sp, fp, #4
   11ca4:	pop	{fp, pc}
   11ca8:	andeq	r0, r0, r4, lsr r8
   11cac:	push	{fp, lr}
   11cb0:	add	fp, sp, #4
   11cb4:	sub	sp, sp, #24
   11cb8:	str	r0, [fp, #-24]	; 0xffffffe8
   11cbc:	mov	r3, #0
   11cc0:	strh	r3, [fp, #-6]
   11cc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cc8:	cmp	r3, #0
   11ccc:	bne	11cf0 <_start@@Base+0x144c>
   11cd0:	ldr	r3, [pc, #232]	; 11dc0 <_start@@Base+0x151c>
   11cd4:	add	r3, pc, r3
   11cd8:	mov	r2, #237	; 0xed
   11cdc:	ldr	r1, [pc, #224]	; 11dc4 <_start@@Base+0x1520>
   11ce0:	add	r1, pc, r1
   11ce4:	ldr	r0, [pc, #220]	; 11dc8 <_start@@Base+0x1524>
   11ce8:	add	r0, pc, r0
   11cec:	bl	10898 <__assert_fail@plt>
   11cf0:	mov	r3, #0
   11cf4:	strh	r3, [fp, #-8]
   11cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11cfc:	bl	10cc8 <_start@@Base+0x424>
   11d00:	mov	r3, r0
   11d04:	rsb	r3, r3, #0
   11d08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d0c:	add	r3, r2, r3
   11d10:	str	r3, [fp, #-12]
   11d14:	ldr	r0, [fp, #-12]
   11d18:	bl	10d20 <_start@@Base+0x47c>
   11d1c:	mov	r3, r0
   11d20:	mov	r2, r3
   11d24:	ldrh	r3, [fp, #-8]
   11d28:	add	r3, r3, #3
   11d2c:	lsl	r3, r3, #1
   11d30:	cmp	r2, r3
   11d34:	bcc	11d5c <_start@@Base+0x14b8>
   11d38:	ldrh	r3, [fp, #-8]
   11d3c:	add	r3, r3, #2
   11d40:	lsl	r3, r3, #1
   11d44:	ldr	r2, [fp, #-12]
   11d48:	add	r3, r2, r3
   11d4c:	mov	r0, r3
   11d50:	bl	10d20 <_start@@Base+0x47c>
   11d54:	mov	r3, r0
   11d58:	strh	r3, [fp, #-6]
   11d5c:	ldrh	r3, [fp, #-6]
   11d60:	cmp	r3, #0
   11d64:	beq	11d94 <_start@@Base+0x14f0>
   11d68:	ldrh	r3, [fp, #-6]
   11d6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11d70:	add	r3, r2, r3
   11d74:	str	r3, [fp, #-16]
   11d78:	ldr	r0, [fp, #-16]
   11d7c:	bl	10c74 <_start@@Base+0x3d0>
   11d80:	mov	r3, r0
   11d84:	add	r3, r3, #4
   11d88:	ldr	r2, [fp, #-16]
   11d8c:	add	r3, r2, r3
   11d90:	b	11db4 <_start@@Base+0x1510>
   11d94:	ldr	r3, [pc, #48]	; 11dcc <_start@@Base+0x1528>
   11d98:	add	r3, pc, r3
   11d9c:	mov	r2, #237	; 0xed
   11da0:	ldr	r1, [pc, #40]	; 11dd0 <_start@@Base+0x152c>
   11da4:	add	r1, pc, r1
   11da8:	ldr	r0, [pc, #36]	; 11dd4 <_start@@Base+0x1530>
   11dac:	add	r0, pc, r0
   11db0:	bl	10898 <__assert_fail@plt>
   11db4:	mov	r0, r3
   11db8:	sub	sp, fp, #4
   11dbc:	pop	{fp, pc}
   11dc0:	andeq	r0, r0, r8, lsr sl
   11dc4:	andeq	r0, r0, ip, lsr #13
   11dc8:	andeq	r0, r0, ip, lsl r7
   11dcc:	andeq	r0, r0, r4, ror r9
   11dd0:	andeq	r0, r0, r8, ror #11
   11dd4:			; <UNDEFINED> instruction: 0x000006b8

00011dd8 <test_schema@@Base>:
   11dd8:	push	{r4, fp, lr}
   11ddc:	add	fp, sp, #8
   11de0:	sub	sp, sp, #60	; 0x3c
   11de4:	str	r0, [fp, #-64]	; 0xffffffc0
   11de8:	mvn	r3, #0
   11dec:	str	r3, [fp, #-16]
   11df0:	sub	r3, fp, #56	; 0x38
   11df4:	mov	r2, r3
   11df8:	ldr	r1, [pc, #1028]	; 12204 <test_schema@@Base+0x42c>
   11dfc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11e00:	bl	109cc <_start@@Base+0x128>
   11e04:	str	r0, [fp, #-24]	; 0xffffffe8
   11e08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e0c:	cmp	r3, #0
   11e10:	bne	11e28 <test_schema@@Base+0x50>
   11e14:	ldr	r3, [pc, #1004]	; 12208 <test_schema@@Base+0x430>
   11e18:	add	r3, pc, r3
   11e1c:	mov	r0, r3
   11e20:	bl	1082c <puts@plt>
   11e24:	b	121e0 <test_schema@@Base+0x408>
   11e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e2c:	bl	11c40 <_start@@Base+0x139c>
   11e30:	str	r0, [fp, #-28]	; 0xffffffe4
   11e34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11e38:	bl	11cac <_start@@Base+0x1408>
   11e3c:	str	r0, [fp, #-32]	; 0xffffffe0
   11e40:	mov	r3, #0
   11e44:	str	r3, [fp, #-20]	; 0xffffffec
   11e48:	b	11e90 <test_schema@@Base+0xb8>
   11e4c:	ldr	r4, [fp, #-20]	; 0xffffffec
   11e50:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e58:	bl	117ec <_start@@Base+0xf48>
   11e5c:	mov	r3, r0
   11e60:	mov	r0, r3
   11e64:	bl	11878 <_start@@Base+0xfd4>
   11e68:	mov	r3, r0
   11e6c:	mov	r2, r3
   11e70:	mov	r1, r4
   11e74:	ldr	r3, [pc, #912]	; 1220c <test_schema@@Base+0x434>
   11e78:	add	r3, pc, r3
   11e7c:	mov	r0, r3
   11e80:	bl	107d8 <printf@plt>
   11e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e88:	add	r3, r3, #1
   11e8c:	str	r3, [fp, #-20]	; 0xffffffec
   11e90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e94:	bl	117a8 <_start@@Base+0xf04>
   11e98:	mov	r2, r0
   11e9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ea0:	cmp	r2, r3
   11ea4:	bhi	11e4c <test_schema@@Base+0x74>
   11ea8:	ldr	r3, [pc, #864]	; 12210 <test_schema@@Base+0x438>
   11eac:	add	r3, pc, r3
   11eb0:	mov	r1, r3
   11eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11eb8:	bl	11ae4 <_start@@Base+0x1240>
   11ebc:	str	r0, [fp, #-20]	; 0xffffffec
   11ec0:	ldr	r3, [pc, #844]	; 12214 <test_schema@@Base+0x43c>
   11ec4:	add	r3, pc, r3
   11ec8:	ldr	r3, [r3]
   11ecc:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ed0:	cmp	r2, r3
   11ed4:	bne	11eec <test_schema@@Base+0x114>
   11ed8:	ldr	r3, [pc, #824]	; 12218 <test_schema@@Base+0x440>
   11edc:	add	r3, pc, r3
   11ee0:	mov	r0, r3
   11ee4:	bl	1082c <puts@plt>
   11ee8:	b	121e0 <test_schema@@Base+0x408>
   11eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ef0:	str	r3, [fp, #-36]	; 0xffffffdc
   11ef4:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ef8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11efc:	bl	117ec <_start@@Base+0xf48>
   11f00:	str	r0, [fp, #-40]	; 0xffffffd8
   11f04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f08:	bl	11878 <_start@@Base+0xfd4>
   11f0c:	mov	r2, r0
   11f10:	ldr	r3, [pc, #772]	; 1221c <test_schema@@Base+0x444>
   11f14:	add	r3, pc, r3
   11f18:	mov	r1, r3
   11f1c:	mov	r0, r2
   11f20:	bl	107cc <strcmp@plt>
   11f24:	mov	r3, r0
   11f28:	cmp	r3, #0
   11f2c:	beq	11f44 <test_schema@@Base+0x16c>
   11f30:	ldr	r3, [pc, #744]	; 12220 <test_schema@@Base+0x448>
   11f34:	add	r3, pc, r3
   11f38:	mov	r0, r3
   11f3c:	bl	1082c <puts@plt>
   11f40:	b	121e0 <test_schema@@Base+0x408>
   11f44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11f48:	bl	11b14 <_start@@Base+0x1270>
   11f4c:	str	r0, [fp, #-44]	; 0xffffffd4
   11f50:	ldr	r3, [pc, #716]	; 12224 <test_schema@@Base+0x44c>
   11f54:	add	r3, pc, r3
   11f58:	mov	r1, r3
   11f5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11f60:	bl	11550 <_start@@Base+0xcac>
   11f64:	str	r0, [fp, #-20]	; 0xffffffec
   11f68:	ldr	r3, [pc, #696]	; 12228 <test_schema@@Base+0x450>
   11f6c:	add	r3, pc, r3
   11f70:	ldr	r3, [r3]
   11f74:	ldr	r2, [fp, #-20]	; 0xffffffec
   11f78:	cmp	r2, r3
   11f7c:	bne	11f94 <test_schema@@Base+0x1bc>
   11f80:	ldr	r3, [pc, #676]	; 1222c <test_schema@@Base+0x454>
   11f84:	add	r3, pc, r3
   11f88:	mov	r0, r3
   11f8c:	bl	1082c <puts@plt>
   11f90:	b	121e0 <test_schema@@Base+0x408>
   11f94:	ldr	r1, [fp, #-20]	; 0xffffffec
   11f98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11f9c:	bl	11258 <_start@@Base+0x9b4>
   11fa0:	str	r0, [fp, #-48]	; 0xffffffd0
   11fa4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11fa8:	bl	116a8 <_start@@Base+0xe04>
   11fac:	mov	r2, r0
   11fb0:	mov	r3, r1
   11fb4:	cmp	r3, #0
   11fb8:	cmpeq	r2, #150	; 0x96
   11fbc:	beq	12014 <test_schema@@Base+0x23c>
   11fc0:	ldr	r3, [pc, #616]	; 12230 <test_schema@@Base+0x458>
   11fc4:	add	r3, pc, r3
   11fc8:	mov	r0, r3
   11fcc:	bl	1082c <puts@plt>
   11fd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11fd4:	bl	112e4 <_start@@Base+0xa40>
   11fd8:	mov	r3, r0
   11fdc:	mov	r1, r3
   11fe0:	ldr	r3, [pc, #588]	; 12234 <test_schema@@Base+0x45c>
   11fe4:	add	r3, pc, r3
   11fe8:	mov	r0, r3
   11fec:	bl	107d8 <printf@plt>
   11ff0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11ff4:	bl	116a8 <_start@@Base+0xe04>
   11ff8:	mov	r2, r0
   11ffc:	mov	r3, r1
   12000:	ldr	r1, [pc, #560]	; 12238 <test_schema@@Base+0x460>
   12004:	add	r1, pc, r1
   12008:	mov	r0, r1
   1200c:	bl	107d8 <printf@plt>
   12010:	b	121e0 <test_schema@@Base+0x408>
   12014:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12018:	bl	11580 <_start@@Base+0xcdc>
   1201c:	str	r0, [fp, #-52]	; 0xffffffcc
   12020:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12024:	bl	10f38 <_start@@Base+0x694>
   12028:	mov	r3, r0
   1202c:	cmp	r3, #5
   12030:	beq	12048 <test_schema@@Base+0x270>
   12034:	ldr	r3, [pc, #512]	; 1223c <test_schema@@Base+0x464>
   12038:	add	r3, pc, r3
   1203c:	mov	r0, r3
   12040:	bl	1082c <puts@plt>
   12044:	b	121e0 <test_schema@@Base+0x408>
   12048:	ldr	r3, [pc, #496]	; 12240 <test_schema@@Base+0x468>
   1204c:	add	r3, pc, r3
   12050:	mov	r1, r3
   12054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12058:	bl	11550 <_start@@Base+0xcac>
   1205c:	str	r0, [fp, #-20]	; 0xffffffec
   12060:	ldr	r3, [pc, #476]	; 12244 <test_schema@@Base+0x46c>
   12064:	add	r3, pc, r3
   12068:	ldr	r3, [r3]
   1206c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12070:	cmp	r2, r3
   12074:	bne	1208c <test_schema@@Base+0x2b4>
   12078:	ldr	r3, [pc, #456]	; 12248 <test_schema@@Base+0x470>
   1207c:	add	r3, pc, r3
   12080:	mov	r0, r3
   12084:	bl	1082c <puts@plt>
   12088:	b	121e0 <test_schema@@Base+0x408>
   1208c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12090:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12094:	bl	11258 <_start@@Base+0x9b4>
   12098:	mov	r3, r0
   1209c:	mov	r0, r3
   120a0:	bl	11580 <_start@@Base+0xcdc>
   120a4:	str	r0, [fp, #-52]	; 0xffffffcc
   120a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   120ac:	bl	10f38 <_start@@Base+0x694>
   120b0:	mov	r3, r0
   120b4:	cmp	r3, #15
   120b8:	beq	120d0 <test_schema@@Base+0x2f8>
   120bc:	ldr	r3, [pc, #392]	; 1224c <test_schema@@Base+0x474>
   120c0:	add	r3, pc, r3
   120c4:	mov	r0, r3
   120c8:	bl	1082c <puts@plt>
   120cc:	b	121e0 <test_schema@@Base+0x408>
   120d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   120d4:	bl	11120 <_start@@Base+0x87c>
   120d8:	mov	r2, r0
   120dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   120e0:	cmp	r2, r3
   120e4:	beq	120fc <test_schema@@Base+0x324>
   120e8:	ldr	r3, [pc, #352]	; 12250 <test_schema@@Base+0x478>
   120ec:	add	r3, pc, r3
   120f0:	mov	r0, r3
   120f4:	bl	1082c <puts@plt>
   120f8:	b	121e0 <test_schema@@Base+0x408>
   120fc:	ldr	r3, [pc, #336]	; 12254 <test_schema@@Base+0x47c>
   12100:	add	r3, pc, r3
   12104:	mov	r1, r3
   12108:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1210c:	bl	11550 <_start@@Base+0xcac>
   12110:	str	r0, [fp, #-20]	; 0xffffffec
   12114:	ldr	r3, [pc, #316]	; 12258 <test_schema@@Base+0x480>
   12118:	add	r3, pc, r3
   1211c:	ldr	r3, [r3]
   12120:	ldr	r2, [fp, #-20]	; 0xffffffec
   12124:	cmp	r2, r3
   12128:	bne	12140 <test_schema@@Base+0x368>
   1212c:	ldr	r3, [pc, #296]	; 1225c <test_schema@@Base+0x484>
   12130:	add	r3, pc, r3
   12134:	mov	r0, r3
   12138:	bl	1082c <puts@plt>
   1213c:	b	121e0 <test_schema@@Base+0x408>
   12140:	ldr	r1, [fp, #-20]	; 0xffffffec
   12144:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12148:	bl	11258 <_start@@Base+0x9b4>
   1214c:	mov	r3, r0
   12150:	mov	r0, r3
   12154:	bl	11580 <_start@@Base+0xcdc>
   12158:	str	r0, [fp, #-52]	; 0xffffffcc
   1215c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12160:	bl	10f38 <_start@@Base+0x694>
   12164:	mov	r3, r0
   12168:	cmp	r3, #14
   1216c:	beq	12184 <test_schema@@Base+0x3ac>
   12170:	ldr	r3, [pc, #232]	; 12260 <test_schema@@Base+0x488>
   12174:	add	r3, pc, r3
   12178:	mov	r0, r3
   1217c:	bl	1082c <puts@plt>
   12180:	b	121e0 <test_schema@@Base+0x408>
   12184:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12188:	bl	1102c <_start@@Base+0x788>
   1218c:	mov	r3, r0
   12190:	cmp	r3, #15
   12194:	beq	121ac <test_schema@@Base+0x3d4>
   12198:	ldr	r3, [pc, #196]	; 12264 <test_schema@@Base+0x48c>
   1219c:	add	r3, pc, r3
   121a0:	mov	r0, r3
   121a4:	bl	1082c <puts@plt>
   121a8:	b	121e0 <test_schema@@Base+0x408>
   121ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121b0:	bl	11120 <_start@@Base+0x87c>
   121b4:	mov	r2, r0
   121b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   121bc:	cmp	r2, r3
   121c0:	beq	121d8 <test_schema@@Base+0x400>
   121c4:	ldr	r3, [pc, #156]	; 12268 <test_schema@@Base+0x490>
   121c8:	add	r3, pc, r3
   121cc:	mov	r0, r3
   121d0:	bl	1082c <puts@plt>
   121d4:	b	121e0 <test_schema@@Base+0x408>
   121d8:	mov	r3, #0
   121dc:	str	r3, [fp, #-16]
   121e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   121e4:	cmp	r3, #0
   121e8:	beq	121f4 <test_schema@@Base+0x41c>
   121ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   121f0:	bl	107f0 <free@plt>
   121f4:	ldr	r3, [fp, #-16]
   121f8:	mov	r0, r3
   121fc:	sub	sp, fp, #8
   12200:	pop	{r4, fp, pc}
   12204:	andeq	r2, r0, r0, lsl r7
   12208:	andeq	r0, r0, r8, ror r6
   1220c:	andeq	r0, r0, r8, lsr r6
   12210:	andeq	r0, r0, r8, lsl r6
   12214:	muleq	r1, ip, r1
   12218:	andeq	r0, r0, r0, lsl #12
   1221c:			; <UNDEFINED> instruction: 0x000005b0
   12220:	andeq	r0, r0, ip, asr #11
   12224:	andeq	r0, r0, ip, asr #11
   12228:	strdeq	r1, [r1], -r4
   1222c:	andeq	r0, r0, r4, lsr #11
   12230:	muleq	r0, r0, r5
   12234:	muleq	r0, r4, r5
   12238:	andeq	r0, r0, r4, lsl #11
   1223c:	andeq	r0, r0, r8, asr r5
   12240:	andeq	r0, r0, r0, ror #10
   12244:	strdeq	r0, [r1], -ip
   12248:	andeq	r0, r0, r8, lsr r5
   1224c:	andeq	r0, r0, ip, lsl #10
   12250:	strdeq	r0, [r0], -r8
   12254:	strdeq	r0, [r0], -ip
   12258:	andeq	r0, r1, r8, asr #30
   1225c:	andeq	r0, r0, r0, ror #9
   12260:			; <UNDEFINED> instruction: 0x000004b8
   12264:			; <UNDEFINED> instruction: 0x000004b8
   12268:			; <UNDEFINED> instruction: 0x000004bc

0001226c <main@@Base>:
   1226c:	push	{fp, lr}
   12270:	add	fp, sp, #4
   12274:	sub	sp, sp, #8
   12278:	str	r0, [fp, #-8]
   1227c:	str	r1, [fp, #-12]
   12280:	ldr	r3, [pc, #132]	; 1230c <main@@Base+0xa0>
   12284:	add	r3, pc, r3
   12288:	ldr	r2, [fp, #-8]
   1228c:	cmp	r2, #1
   12290:	beq	122c8 <main@@Base+0x5c>
   12294:	ldr	r2, [fp, #-8]
   12298:	cmp	r2, #2
   1229c:	beq	122c8 <main@@Base+0x5c>
   122a0:	ldr	r2, [pc, #104]	; 12310 <main@@Base+0xa4>
   122a4:	ldr	r3, [r3, r2]
   122a8:	ldr	r3, [r3]
   122ac:	mov	r2, #64	; 0x40
   122b0:	mov	r1, #1
   122b4:	ldr	r0, [pc, #88]	; 12314 <main@@Base+0xa8>
   122b8:	add	r0, pc, r0
   122bc:	bl	10814 <fwrite@plt>
   122c0:	mov	r0, #1
   122c4:	bl	1085c <exit@plt>
   122c8:	ldr	r2, [fp, #-8]
   122cc:	cmp	r2, #2
   122d0:	bne	122e8 <main@@Base+0x7c>
   122d4:	ldr	r2, [fp, #-12]
   122d8:	ldr	r1, [r2, #4]
   122dc:	ldr	r2, [pc, #52]	; 12318 <main@@Base+0xac>
   122e0:	ldr	r2, [r3, r2]
   122e4:	str	r1, [r2]
   122e8:	ldr	r2, [pc, #40]	; 12318 <main@@Base+0xac>
   122ec:	ldr	r3, [r3, r2]
   122f0:	ldr	r3, [r3]
   122f4:	mov	r0, r3
   122f8:	bl	11dd8 <test_schema@@Base>
   122fc:	mov	r3, r0
   12300:	mov	r0, r3
   12304:	sub	sp, fp, #4
   12308:	pop	{fp, pc}
   1230c:	andeq	r0, r1, r4, ror sp
   12310:	andeq	r0, r0, r4, asr r0
   12314:	andeq	r0, r0, r0, lsl r4
   12318:	andeq	r0, r0, ip, asr r0

0001231c <__libc_csu_init@@Base>:
   1231c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12320:	mov	r7, r0
   12324:	ldr	r6, [pc, #72]	; 12374 <__libc_csu_init@@Base+0x58>
   12328:	ldr	r5, [pc, #72]	; 12378 <__libc_csu_init@@Base+0x5c>
   1232c:	add	r6, pc, r6
   12330:	add	r5, pc, r5
   12334:	sub	r6, r6, r5
   12338:	mov	r8, r1
   1233c:	mov	r9, r2
   12340:	bl	107ac <strcmp@plt-0x20>
   12344:	asrs	r6, r6, #2
   12348:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1234c:	mov	r4, #0
   12350:	add	r4, r4, #1
   12354:	ldr	r3, [r5], #4
   12358:	mov	r2, r9
   1235c:	mov	r1, r8
   12360:	mov	r0, r7
   12364:	blx	r3
   12368:	cmp	r6, r4
   1236c:	bne	12350 <__libc_csu_init@@Base+0x34>
   12370:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12374:	ldrdeq	r0, [r1], -ip
   12378:	ldrdeq	r0, [r1], -r4

0001237c <__libc_csu_fini@@Base>:
   1237c:	bx	lr

Disassembly of section .fini:

00012380 <.fini>:
   12380:	push	{r3, lr}
   12384:	pop	{r3, pc}
