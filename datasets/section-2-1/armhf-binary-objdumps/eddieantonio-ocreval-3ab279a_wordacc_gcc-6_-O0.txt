
../repos/eddieantonio-ocreval-3ab279a/wordacc/wordacc:     file format elf32-littlearm


Disassembly of section .init:

00010954 <.init>:
   10954:	push	{r3, lr}
   10958:	bl	10b64 <__assert_fail@plt+0x4c>
   1095c:	pop	{r3, pc}

Disassembly of section .plt:

00010960 <calloc@plt-0x14>:
   10960:	push	{lr}		; (str lr, [sp, #-4]!)
   10964:	ldr	lr, [pc, #4]	; 10970 <calloc@plt-0x4>
   10968:	add	lr, pc, lr
   1096c:	ldr	pc, [lr, #8]!
   10970:	muleq	r1, r0, r6

00010974 <calloc@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #102400	; 0x19000
   1097c:	ldr	pc, [ip, #1680]!	; 0x690

00010980 <strcmp@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #102400	; 0x19000
   10988:	ldr	pc, [ip, #1672]!	; 0x688

0001098c <fopen@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #102400	; 0x19000
   10994:	ldr	pc, [ip, #1664]!	; 0x680

00010998 <free@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #102400	; 0x19000
   109a0:	ldr	pc, [ip, #1656]!	; 0x678

000109a4 <utf8proc_get_property@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #102400	; 0x19000
   109ac:	ldr	pc, [ip, #1648]!	; 0x670

000109b0 <fgets@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #102400	; 0x19000
   109b8:	ldr	pc, [ip, #1640]!	; 0x668

000109bc <utf8proc_encode_char@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #102400	; 0x19000
   109c4:	ldr	pc, [ip, #1632]!	; 0x660

000109c8 <strdup@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #102400	; 0x19000
   109d0:	ldr	pc, [ip, #1624]!	; 0x658

000109d4 <rewind@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #102400	; 0x19000
   109dc:	ldr	pc, [ip, #1616]!	; 0x650

000109e0 <unlink@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #102400	; 0x19000
   109e8:	ldr	pc, [ip, #1608]!	; 0x648

000109ec <utf8proc_tolower@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #102400	; 0x19000
   109f4:	ldr	pc, [ip, #1600]!	; 0x640

000109f8 <__xstat@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #102400	; 0x19000
   10a00:	ldr	pc, [ip, #1592]!	; 0x638

00010a04 <fwrite@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #102400	; 0x19000
   10a0c:	ldr	pc, [ip, #1584]!	; 0x630

00010a10 <fread@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #102400	; 0x19000
   10a18:	ldr	pc, [ip, #1576]!	; 0x628

00010a1c <utf8proc_iterate@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #102400	; 0x19000
   10a24:	ldr	pc, [ip, #1568]!	; 0x620

00010a28 <malloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #102400	; 0x19000
   10a30:	ldr	pc, [ip, #1560]!	; 0x618

00010a34 <__libc_start_main@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #102400	; 0x19000
   10a3c:	ldr	pc, [ip, #1552]!	; 0x610

00010a40 <__sysv_signal@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #102400	; 0x19000
   10a48:	ldr	pc, [ip, #1544]!	; 0x608

00010a4c <__gmon_start__@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #102400	; 0x19000
   10a54:	ldr	pc, [ip, #1536]!	; 0x600

00010a58 <getpid@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #102400	; 0x19000
   10a60:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a64 <exit@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #102400	; 0x19000
   10a6c:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a70 <utf8proc_category@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #102400	; 0x19000
   10a78:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a7c <strlen@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #102400	; 0x19000
   10a84:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a88 <fprintf@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #102400	; 0x19000
   10a90:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a94 <__isoc99_sscanf@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #102400	; 0x19000
   10a9c:	ldr	pc, [ip, #1488]!	; 0x5d0

00010aa0 <fclose@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #102400	; 0x19000
   10aa8:	ldr	pc, [ip, #1480]!	; 0x5c8

00010aac <utf8proc_NFC@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #102400	; 0x19000
   10ab4:	ldr	pc, [ip, #1472]!	; 0x5c0

00010ab8 <fputc@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #102400	; 0x19000
   10ac0:	ldr	pc, [ip, #1464]!	; 0x5b8

00010ac4 <sprintf@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #102400	; 0x19000
   10acc:	ldr	pc, [ip, #1456]!	; 0x5b0

00010ad0 <atoi@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #102400	; 0x19000
   10ad8:	ldr	pc, [ip, #1448]!	; 0x5a8

00010adc <utf8proc_errmsg@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #102400	; 0x19000
   10ae4:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ae8 <fputs@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #102400	; 0x19000
   10af0:	ldr	pc, [ip, #1432]!	; 0x598

00010af4 <strncmp@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #102400	; 0x19000
   10afc:	ldr	pc, [ip, #1424]!	; 0x590

00010b00 <abort@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #102400	; 0x19000
   10b08:	ldr	pc, [ip, #1416]!	; 0x588

00010b0c <getc@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #102400	; 0x19000
   10b14:	ldr	pc, [ip, #1408]!	; 0x580

00010b18 <__assert_fail@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #102400	; 0x19000
   10b20:	ldr	pc, [ip, #1400]!	; 0x578

Disassembly of section .text:

00010b28 <error@@Base-0x2530>:
   10b28:	mov	fp, #0
   10b2c:	mov	lr, #0
   10b30:	pop	{r1}		; (ldr r1, [sp], #4)
   10b34:	mov	r2, sp
   10b38:	push	{r2}		; (str r2, [sp, #-4]!)
   10b3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b40:	ldr	ip, [pc, #16]	; 10b58 <__assert_fail@plt+0x40>
   10b44:	push	{ip}		; (str ip, [sp, #-4]!)
   10b48:	ldr	r0, [pc, #12]	; 10b5c <__assert_fail@plt+0x44>
   10b4c:	ldr	r3, [pc, #12]	; 10b60 <__assert_fail@plt+0x48>
   10b50:	bl	10a34 <__libc_start_main@plt>
   10b54:	bl	10b00 <abort@plt>
   10b58:	andeq	r5, r1, ip, lsr r7
   10b5c:	andeq	r1, r1, r0, lsr r9
   10b60:	ldrdeq	r5, [r1], -ip
   10b64:	ldr	r3, [pc, #20]	; 10b80 <__assert_fail@plt+0x68>
   10b68:	ldr	r2, [pc, #20]	; 10b84 <__assert_fail@plt+0x6c>
   10b6c:	add	r3, pc, r3
   10b70:	ldr	r2, [r3, r2]
   10b74:	cmp	r2, #0
   10b78:	bxeq	lr
   10b7c:	b	10a4c <__gmon_start__@plt>
   10b80:	andeq	r9, r1, ip, lsl #9
   10b84:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10b88:	ldr	r3, [pc, #28]	; 10bac <__assert_fail@plt+0x94>
   10b8c:	ldr	r0, [pc, #28]	; 10bb0 <__assert_fail@plt+0x98>
   10b90:	sub	r3, r3, r0
   10b94:	cmp	r3, #6
   10b98:	bxls	lr
   10b9c:	ldr	r3, [pc, #16]	; 10bb4 <__assert_fail@plt+0x9c>
   10ba0:	cmp	r3, #0
   10ba4:	bxeq	lr
   10ba8:	bx	r3
   10bac:	strdeq	sl, [r2], -pc	; <UNPREDICTABLE>
   10bb0:	strdeq	sl, [r2], -ip
   10bb4:	andeq	r0, r0, r0
   10bb8:	ldr	r1, [pc, #36]	; 10be4 <__assert_fail@plt+0xcc>
   10bbc:	ldr	r0, [pc, #36]	; 10be8 <__assert_fail@plt+0xd0>
   10bc0:	sub	r1, r1, r0
   10bc4:	asr	r1, r1, #2
   10bc8:	add	r1, r1, r1, lsr #31
   10bcc:	asrs	r1, r1, #1
   10bd0:	bxeq	lr
   10bd4:	ldr	r3, [pc, #16]	; 10bec <__assert_fail@plt+0xd4>
   10bd8:	cmp	r3, #0
   10bdc:	bxeq	lr
   10be0:	bx	r3
   10be4:	strdeq	sl, [r2], -ip
   10be8:	strdeq	sl, [r2], -ip
   10bec:	andeq	r0, r0, r0
   10bf0:	push	{r4, lr}
   10bf4:	ldr	r4, [pc, #24]	; 10c14 <__assert_fail@plt+0xfc>
   10bf8:	ldrb	r3, [r4]
   10bfc:	cmp	r3, #0
   10c00:	popne	{r4, pc}
   10c04:	bl	10b88 <__assert_fail@plt+0x70>
   10c08:	mov	r3, #1
   10c0c:	strb	r3, [r4]
   10c10:	pop	{r4, pc}
   10c14:	strdeq	sl, [r2], -ip
   10c18:	ldr	r0, [pc, #40]	; 10c48 <__assert_fail@plt+0x130>
   10c1c:	ldr	r3, [r0]
   10c20:	cmp	r3, #0
   10c24:	bne	10c2c <__assert_fail@plt+0x114>
   10c28:	b	10bb8 <__assert_fail@plt+0xa0>
   10c2c:	ldr	r3, [pc, #24]	; 10c4c <__assert_fail@plt+0x134>
   10c30:	cmp	r3, #0
   10c34:	beq	10c28 <__assert_fail@plt+0x110>
   10c38:	push	{r4, lr}
   10c3c:	blx	r3
   10c40:	pop	{r4, lr}
   10c44:	b	10bb8 <__assert_fail@plt+0xa0>
   10c48:	andeq	r9, r2, r4, lsl #30
   10c4c:	andeq	r0, r0, r0
   10c50:	push	{r4, fp, lr}
   10c54:	add	fp, sp, #8
   10c58:	sub	sp, sp, #28
   10c5c:	str	r0, [fp, #-32]	; 0xffffffe0
   10c60:	str	r1, [fp, #-36]	; 0xffffffdc
   10c64:	ldr	r4, [pc, #252]	; 10d68 <__assert_fail@plt+0x250>
   10c68:	add	r4, pc, r4
   10c6c:	mov	r3, #0
   10c70:	str	r3, [fp, #-20]	; 0xffffffec
   10c74:	ldr	r3, [pc, #240]	; 10d6c <__assert_fail@plt+0x254>
   10c78:	ldr	r2, [r4, r3]
   10c7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c80:	lsl	r3, r3, #4
   10c84:	add	r3, r2, r3
   10c88:	ldr	r3, [r3, #12]
   10c8c:	add	r3, r3, #1
   10c90:	mov	r1, #4
   10c94:	mov	r0, r3
   10c98:	bl	12504 <__assert_fail@plt+0x19ec>
   10c9c:	str	r0, [fp, #-24]	; 0xffffffe8
   10ca0:	mov	r3, #0
   10ca4:	str	r3, [fp, #-16]
   10ca8:	b	10d28 <__assert_fail@plt+0x210>
   10cac:	ldr	r3, [pc, #188]	; 10d70 <__assert_fail@plt+0x258>
   10cb0:	ldr	r3, [r4, r3]
   10cb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10cb8:	ldr	r2, [r3, r2, lsl #2]
   10cbc:	ldr	r3, [fp, #-16]
   10cc0:	lsl	r3, r3, #3
   10cc4:	add	r3, r2, r3
   10cc8:	ldr	r2, [r3]
   10ccc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10cd0:	rsb	r3, r3, #1
   10cd4:	add	r3, r2, r3
   10cd8:	ldrb	r3, [r3, #12]
   10cdc:	cmp	r3, #0
   10ce0:	beq	10d1c <__assert_fail@plt+0x204>
   10ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ce8:	add	r2, r3, #1
   10cec:	str	r2, [fp, #-20]	; 0xffffffec
   10cf0:	lsl	r3, r3, #2
   10cf4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10cf8:	add	r3, r2, r3
   10cfc:	ldr	r2, [pc, #108]	; 10d70 <__assert_fail@plt+0x258>
   10d00:	ldr	r2, [r4, r2]
   10d04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10d08:	ldr	r1, [r2, r1, lsl #2]
   10d0c:	ldr	r2, [fp, #-16]
   10d10:	lsl	r2, r2, #3
   10d14:	add	r2, r1, r2
   10d18:	str	r2, [r3]
   10d1c:	ldr	r3, [fp, #-16]
   10d20:	add	r3, r3, #1
   10d24:	str	r3, [fp, #-16]
   10d28:	ldr	r3, [pc, #60]	; 10d6c <__assert_fail@plt+0x254>
   10d2c:	ldr	r2, [r4, r3]
   10d30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10d34:	lsl	r3, r3, #4
   10d38:	add	r3, r2, r3
   10d3c:	ldr	r2, [r3, #12]
   10d40:	ldr	r3, [fp, #-16]
   10d44:	cmp	r2, r3
   10d48:	bgt	10cac <__assert_fail@plt+0x194>
   10d4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10d50:	ldr	r2, [fp, #-20]	; 0xffffffec
   10d54:	str	r2, [r3]
   10d58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d5c:	mov	r0, r3
   10d60:	sub	sp, fp, #8
   10d64:	pop	{r4, fp, pc}
   10d68:	muleq	r1, r0, r3
   10d6c:	strheq	r0, [r0], -ip
   10d70:	andeq	r0, r0, r0, lsl #2
   10d74:	push	{r4, fp, lr}
   10d78:	add	fp, sp, #8
   10d7c:	sub	sp, sp, #28
   10d80:	str	r0, [fp, #-32]	; 0xffffffe0
   10d84:	ldr	r4, [pc, #588]	; 10fd8 <__assert_fail@plt+0x4c0>
   10d88:	add	r4, pc, r4
   10d8c:	mov	r3, #0
   10d90:	str	r3, [fp, #-16]
   10d94:	b	10f54 <__assert_fail@plt+0x43c>
   10d98:	ldr	r3, [fp, #-16]
   10d9c:	lsl	r3, r3, #4
   10da0:	ldr	r2, [pc, #564]	; 10fdc <__assert_fail@plt+0x4c4>
   10da4:	ldr	r2, [r4, r2]
   10da8:	add	r0, r3, r2
   10dac:	ldr	r3, [fp, #-16]
   10db0:	lsl	r3, r3, #2
   10db4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10db8:	add	r3, r2, r3
   10dbc:	ldr	r1, [r3]
   10dc0:	ldr	r3, [pc, #536]	; 10fe0 <__assert_fail@plt+0x4c8>
   10dc4:	ldr	r3, [r4, r3]
   10dc8:	mov	r2, r3
   10dcc:	bl	14e28 <error@@Base+0x1dd0>
   10dd0:	ldr	r3, [fp, #-16]
   10dd4:	cmp	r3, #0
   10dd8:	bne	10e00 <__assert_fail@plt+0x2e8>
   10ddc:	ldr	r3, [pc, #508]	; 10fe0 <__assert_fail@plt+0x4c8>
   10de0:	ldr	r3, [r4, r3]
   10de4:	ldrb	r3, [r3, #11]
   10de8:	cmp	r3, #0
   10dec:	beq	10e00 <__assert_fail@plt+0x2e8>
   10df0:	ldr	r3, [pc, #492]	; 10fe4 <__assert_fail@plt+0x4cc>
   10df4:	add	r3, pc, r3
   10df8:	mov	r0, r3
   10dfc:	bl	13058 <error@@Base>
   10e00:	ldr	r3, [fp, #-16]
   10e04:	lsl	r3, r3, #4
   10e08:	ldr	r2, [pc, #472]	; 10fe8 <__assert_fail@plt+0x4d0>
   10e0c:	ldr	r2, [r4, r2]
   10e10:	add	r0, r3, r2
   10e14:	ldr	r3, [fp, #-16]
   10e18:	lsl	r3, r3, #4
   10e1c:	ldr	r2, [pc, #440]	; 10fdc <__assert_fail@plt+0x4c4>
   10e20:	ldr	r2, [r4, r2]
   10e24:	add	r3, r3, r2
   10e28:	mov	r1, r3
   10e2c:	bl	14834 <error@@Base+0x17dc>
   10e30:	ldr	r3, [pc, #432]	; 10fe8 <__assert_fail@plt+0x4d0>
   10e34:	ldr	r2, [r4, r3]
   10e38:	ldr	r3, [fp, #-16]
   10e3c:	lsl	r3, r3, #4
   10e40:	add	r3, r2, r3
   10e44:	ldr	r3, [r3, #12]
   10e48:	add	r3, r3, #1
   10e4c:	mov	r1, #8
   10e50:	mov	r0, r3
   10e54:	bl	12504 <__assert_fail@plt+0x19ec>
   10e58:	mov	r1, r0
   10e5c:	ldr	r3, [pc, #392]	; 10fec <__assert_fail@plt+0x4d4>
   10e60:	ldr	r3, [r4, r3]
   10e64:	ldr	r2, [fp, #-16]
   10e68:	str	r1, [r3, r2, lsl #2]
   10e6c:	mov	r3, #0
   10e70:	str	r3, [fp, #-20]	; 0xffffffec
   10e74:	ldr	r3, [pc, #364]	; 10fe8 <__assert_fail@plt+0x4d0>
   10e78:	ldr	r3, [r4, r3]
   10e7c:	ldr	r2, [fp, #-16]
   10e80:	ldr	r3, [r3, r2, lsl #4]
   10e84:	str	r3, [fp, #-24]	; 0xffffffe8
   10e88:	b	10f3c <__assert_fail@plt+0x424>
   10e8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10e90:	ldr	r3, [r3, #8]
   10e94:	mov	r1, r3
   10e98:	ldr	r3, [pc, #336]	; 10ff0 <__assert_fail@plt+0x4d8>
   10e9c:	ldr	r3, [r4, r3]
   10ea0:	mov	r0, r3
   10ea4:	bl	121cc <__assert_fail@plt+0x16b4>
   10ea8:	str	r0, [fp, #-28]	; 0xffffffe4
   10eac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10eb0:	cmp	r3, #0
   10eb4:	bne	10eec <__assert_fail@plt+0x3d4>
   10eb8:	mov	r1, #16
   10ebc:	mov	r0, #1
   10ec0:	bl	12504 <__assert_fail@plt+0x19ec>
   10ec4:	str	r0, [fp, #-28]	; 0xffffffe4
   10ec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ecc:	ldr	r2, [r3, #8]
   10ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ed4:	str	r2, [r3, #8]
   10ed8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10edc:	ldr	r3, [pc, #268]	; 10ff0 <__assert_fail@plt+0x4d8>
   10ee0:	ldr	r3, [r4, r3]
   10ee4:	mov	r0, r3
   10ee8:	bl	122a0 <__assert_fail@plt+0x1788>
   10eec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10ef0:	ldr	r3, [fp, #-16]
   10ef4:	add	r3, r2, r3
   10ef8:	add	r3, r3, #12
   10efc:	mov	r2, #1
   10f00:	strb	r2, [r3]
   10f04:	ldr	r3, [pc, #224]	; 10fec <__assert_fail@plt+0x4d4>
   10f08:	ldr	r3, [r4, r3]
   10f0c:	ldr	r2, [fp, #-16]
   10f10:	ldr	r2, [r3, r2, lsl #2]
   10f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f18:	add	r1, r3, #1
   10f1c:	str	r1, [fp, #-20]	; 0xffffffec
   10f20:	lsl	r3, r3, #3
   10f24:	add	r3, r2, r3
   10f28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10f2c:	str	r2, [r3]
   10f30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f34:	ldr	r3, [r3, #4]
   10f38:	str	r3, [fp, #-24]	; 0xffffffe8
   10f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10f40:	cmp	r3, #0
   10f44:	bne	10e8c <__assert_fail@plt+0x374>
   10f48:	ldr	r3, [fp, #-16]
   10f4c:	add	r3, r3, #1
   10f50:	str	r3, [fp, #-16]
   10f54:	ldr	r3, [fp, #-16]
   10f58:	cmp	r3, #1
   10f5c:	ble	10d98 <__assert_fail@plt+0x280>
   10f60:	ldr	r3, [pc, #140]	; 10ff4 <__assert_fail@plt+0x4dc>
   10f64:	ldr	r3, [r4, r3]
   10f68:	mov	r1, r3
   10f6c:	mov	r0, #0
   10f70:	bl	10c50 <__assert_fail@plt+0x138>
   10f74:	mov	r2, r0
   10f78:	ldr	r3, [pc, #120]	; 10ff8 <__assert_fail@plt+0x4e0>
   10f7c:	ldr	r3, [r4, r3]
   10f80:	str	r2, [r3]
   10f84:	ldr	r3, [pc, #104]	; 10ff4 <__assert_fail@plt+0x4dc>
   10f88:	ldr	r3, [r4, r3]
   10f8c:	ldr	r3, [r3]
   10f90:	cmp	r3, #65536	; 0x10000
   10f94:	blt	10fa8 <__assert_fail@plt+0x490>
   10f98:	ldr	r3, [pc, #92]	; 10ffc <__assert_fail@plt+0x4e4>
   10f9c:	add	r3, pc, r3
   10fa0:	mov	r0, r3
   10fa4:	bl	13058 <error@@Base>
   10fa8:	ldr	r3, [pc, #80]	; 11000 <__assert_fail@plt+0x4e8>
   10fac:	ldr	r3, [r4, r3]
   10fb0:	mov	r1, r3
   10fb4:	mov	r0, #1
   10fb8:	bl	10c50 <__assert_fail@plt+0x138>
   10fbc:	mov	r2, r0
   10fc0:	ldr	r3, [pc, #60]	; 11004 <__assert_fail@plt+0x4ec>
   10fc4:	ldr	r3, [r4, r3]
   10fc8:	str	r2, [r3]
   10fcc:	nop			; (mov r0, r0)
   10fd0:	sub	sp, fp, #8
   10fd4:	pop	{r4, fp, pc}
   10fd8:	andeq	r9, r1, r0, ror r2
   10fdc:	muleq	r0, ip, r0
   10fe0:	strheq	r0, [r0], -r8
   10fe4:	andeq	r4, r0, r0, ror #18
   10fe8:	strheq	r0, [r0], -ip
   10fec:	andeq	r0, r0, r0, lsl #2
   10ff0:	andeq	r0, r0, r8, asr #1
   10ff4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10ff8:	andeq	r0, r0, ip, ror #1
   10ffc:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   11000:	andeq	r0, r0, ip, lsr #1
   11004:	andeq	r0, r0, r8, lsr #1
   11008:	push	{fp}		; (str fp, [sp, #-4]!)
   1100c:	add	fp, sp, #0
   11010:	sub	sp, sp, #28
   11014:	str	r0, [fp, #-16]
   11018:	str	r1, [fp, #-20]	; 0xffffffec
   1101c:	str	r2, [fp, #-24]	; 0xffffffe8
   11020:	mov	r3, #0
   11024:	str	r3, [fp, #-8]
   11028:	ldr	r3, [fp, #-20]	; 0xffffffec
   1102c:	cmp	r3, #0
   11030:	beq	110fc <__assert_fail@plt+0x5e4>
   11034:	ldr	r3, [fp, #-20]	; 0xffffffec
   11038:	ldr	r3, [r3, #8]
   1103c:	rsb	r2, r3, #0
   11040:	ldr	r3, [fp, #-16]
   11044:	cmp	r2, r3
   11048:	bge	1108c <__assert_fail@plt+0x574>
   1104c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11050:	ldr	r2, [r3, #12]
   11054:	ldr	r3, [fp, #-16]
   11058:	sub	r1, r3, #1
   1105c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11060:	ldr	r3, [r3, #8]
   11064:	add	r3, r1, r3
   11068:	asr	r3, r3, #1
   1106c:	lsl	r3, r3, #1
   11070:	add	r3, r2, r3
   11074:	ldrh	r3, [r3]
   11078:	str	r3, [fp, #-8]
   1107c:	ldr	r3, [fp, #-16]
   11080:	sub	r2, r3, #1
   11084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11088:	str	r2, [r3]
   1108c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11090:	ldr	r2, [r3, #8]
   11094:	ldr	r3, [fp, #-16]
   11098:	cmp	r2, r3
   1109c:	ble	110fc <__assert_fail@plt+0x5e4>
   110a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   110a4:	ldr	r2, [r3, #12]
   110a8:	ldr	r3, [fp, #-16]
   110ac:	add	r1, r3, #1
   110b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   110b4:	ldr	r3, [r3, #8]
   110b8:	add	r3, r1, r3
   110bc:	asr	r3, r3, #1
   110c0:	lsl	r3, r3, #1
   110c4:	add	r3, r2, r3
   110c8:	ldrh	r3, [r3]
   110cc:	add	r3, r3, #1
   110d0:	str	r3, [fp, #-12]
   110d4:	ldr	r2, [fp, #-12]
   110d8:	ldr	r3, [fp, #-8]
   110dc:	cmp	r2, r3
   110e0:	blt	110fc <__assert_fail@plt+0x5e4>
   110e4:	ldr	r3, [fp, #-12]
   110e8:	str	r3, [fp, #-8]
   110ec:	ldr	r3, [fp, #-16]
   110f0:	add	r2, r3, #1
   110f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110f8:	str	r2, [r3]
   110fc:	ldr	r3, [fp, #-8]
   11100:	mov	r0, r3
   11104:	add	sp, fp, #0
   11108:	pop	{fp}		; (ldr fp, [sp], #4)
   1110c:	bx	lr
   11110:	push	{r4, fp, lr}
   11114:	add	fp, sp, #8
   11118:	sub	sp, sp, #28
   1111c:	str	r0, [fp, #-32]	; 0xffffffe0
   11120:	str	r1, [fp, #-36]	; 0xffffffdc
   11124:	ldr	r4, [pc, #340]	; 11280 <__assert_fail@plt+0x768>
   11128:	add	r4, pc, r4
   1112c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11130:	ldr	r3, [r3]
   11134:	sub	r2, fp, #24
   11138:	mov	r1, r3
   1113c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11140:	bl	11008 <__assert_fail@plt+0x4f0>
   11144:	str	r0, [fp, #-16]
   11148:	ldr	r2, [fp, #-16]
   1114c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11150:	add	r3, r2, r3
   11154:	str	r3, [fp, #-20]	; 0xffffffec
   11158:	b	11174 <__assert_fail@plt+0x65c>
   1115c:	ldr	r3, [fp, #-16]
   11160:	add	r3, r3, #1
   11164:	str	r3, [fp, #-16]
   11168:	ldr	r3, [fp, #-20]	; 0xffffffec
   1116c:	add	r3, r3, #1
   11170:	str	r3, [fp, #-20]	; 0xffffffec
   11174:	ldr	r3, [pc, #264]	; 11284 <__assert_fail@plt+0x76c>
   11178:	ldr	r3, [r4, r3]
   1117c:	ldr	r3, [r3]
   11180:	ldr	r2, [fp, #-16]
   11184:	cmp	r2, r3
   11188:	bge	111ec <__assert_fail@plt+0x6d4>
   1118c:	ldr	r3, [pc, #244]	; 11288 <__assert_fail@plt+0x770>
   11190:	ldr	r3, [r4, r3]
   11194:	ldr	r3, [r3]
   11198:	ldr	r2, [fp, #-20]	; 0xffffffec
   1119c:	cmp	r2, r3
   111a0:	bge	111ec <__assert_fail@plt+0x6d4>
   111a4:	ldr	r3, [pc, #224]	; 1128c <__assert_fail@plt+0x774>
   111a8:	ldr	r3, [r4, r3]
   111ac:	ldr	r2, [r3]
   111b0:	ldr	r3, [fp, #-16]
   111b4:	lsl	r3, r3, #2
   111b8:	add	r3, r2, r3
   111bc:	ldr	r3, [r3]
   111c0:	ldr	r2, [r3]
   111c4:	ldr	r3, [pc, #196]	; 11290 <__assert_fail@plt+0x778>
   111c8:	ldr	r3, [r4, r3]
   111cc:	ldr	r1, [r3]
   111d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   111d4:	lsl	r3, r3, #2
   111d8:	add	r3, r1, r3
   111dc:	ldr	r3, [r3]
   111e0:	ldr	r3, [r3]
   111e4:	cmp	r2, r3
   111e8:	beq	1115c <__assert_fail@plt+0x644>
   111ec:	ldr	r3, [pc, #144]	; 11284 <__assert_fail@plt+0x76c>
   111f0:	ldr	r3, [r4, r3]
   111f4:	ldr	r3, [r3]
   111f8:	ldr	r2, [fp, #-16]
   111fc:	cmp	r2, r3
   11200:	bne	11218 <__assert_fail@plt+0x700>
   11204:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11208:	add	r2, r3, #1
   1120c:	ldr	r3, [pc, #128]	; 11294 <__assert_fail@plt+0x77c>
   11210:	ldr	r3, [r4, r3]
   11214:	str	r2, [r3]
   11218:	ldr	r3, [pc, #104]	; 11288 <__assert_fail@plt+0x770>
   1121c:	ldr	r3, [r4, r3]
   11220:	ldr	r3, [r3]
   11224:	ldr	r2, [fp, #-20]	; 0xffffffec
   11228:	cmp	r2, r3
   1122c:	bne	11244 <__assert_fail@plt+0x72c>
   11230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11234:	sub	r2, r3, #1
   11238:	ldr	r3, [pc, #88]	; 11298 <__assert_fail@plt+0x780>
   1123c:	ldr	r3, [r4, r3]
   11240:	str	r2, [r3]
   11244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11248:	ldr	r2, [r3, #12]
   1124c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11250:	ldr	r1, [r3, #8]
   11254:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11258:	add	r3, r1, r3
   1125c:	asr	r3, r3, #1
   11260:	lsl	r3, r3, #1
   11264:	add	r3, r2, r3
   11268:	ldr	r2, [fp, #-16]
   1126c:	uxth	r2, r2
   11270:	strh	r2, [r3]
   11274:	nop			; (mov r0, r0)
   11278:	sub	sp, fp, #8
   1127c:	pop	{r4, fp, pc}
   11280:	ldrdeq	r8, [r1], -r0
   11284:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11288:	andeq	r0, r0, ip, lsr #1
   1128c:	andeq	r0, r0, ip, ror #1
   11290:	andeq	r0, r0, r8, lsr #1
   11294:	strdeq	r0, [r0], -r8
   11298:	andeq	r0, r0, r8, ror #1
   1129c:	push	{r4, fp, lr}
   112a0:	add	fp, sp, #8
   112a4:	sub	sp, sp, #20
   112a8:	ldr	r4, [pc, #320]	; 113f0 <__assert_fail@plt+0x8d8>
   112ac:	add	r4, pc, r4
   112b0:	mvn	r3, #0
   112b4:	str	r3, [fp, #-16]
   112b8:	ldr	r3, [pc, #308]	; 113f4 <__assert_fail@plt+0x8dc>
   112bc:	ldr	r3, [r4, r3]
   112c0:	ldr	r3, [r3]
   112c4:	rsb	r2, r3, #0
   112c8:	ldr	r3, [pc, #296]	; 113f8 <__assert_fail@plt+0x8e0>
   112cc:	ldr	r3, [r4, r3]
   112d0:	str	r2, [r3]
   112d4:	ldr	r3, [pc, #288]	; 113fc <__assert_fail@plt+0x8e4>
   112d8:	ldr	r3, [r4, r3]
   112dc:	ldr	r2, [r3]
   112e0:	ldr	r3, [pc, #280]	; 11400 <__assert_fail@plt+0x8e8>
   112e4:	ldr	r3, [r4, r3]
   112e8:	str	r2, [r3]
   112ec:	b	113b4 <__assert_fail@plt+0x89c>
   112f0:	mov	r1, #16
   112f4:	mov	r0, #1
   112f8:	bl	12504 <__assert_fail@plt+0x19ec>
   112fc:	str	r0, [fp, #-24]	; 0xffffffe8
   11300:	ldr	r3, [fp, #-16]
   11304:	add	r3, r3, #1
   11308:	str	r3, [fp, #-16]
   1130c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11310:	ldr	r2, [fp, #-16]
   11314:	str	r2, [r3, #8]
   11318:	ldr	r3, [fp, #-16]
   1131c:	add	r3, r3, #1
   11320:	mov	r1, #2
   11324:	mov	r0, r3
   11328:	bl	12504 <__assert_fail@plt+0x19ec>
   1132c:	mov	r2, r0
   11330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11334:	str	r2, [r3, #12]
   11338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1133c:	ldr	r3, [pc, #192]	; 11404 <__assert_fail@plt+0x8ec>
   11340:	ldr	r3, [r4, r3]
   11344:	mov	r0, r3
   11348:	bl	11b84 <__assert_fail@plt+0x106c>
   1134c:	ldr	r3, [fp, #-16]
   11350:	rsb	r3, r3, #0
   11354:	str	r3, [fp, #-20]	; 0xffffffec
   11358:	b	113a4 <__assert_fail@plt+0x88c>
   1135c:	ldr	r3, [pc, #148]	; 113f8 <__assert_fail@plt+0x8e0>
   11360:	ldr	r3, [r4, r3]
   11364:	ldr	r3, [r3]
   11368:	ldr	r2, [fp, #-20]	; 0xffffffec
   1136c:	cmp	r2, r3
   11370:	blt	11398 <__assert_fail@plt+0x880>
   11374:	ldr	r3, [pc, #132]	; 11400 <__assert_fail@plt+0x8e8>
   11378:	ldr	r3, [r4, r3]
   1137c:	ldr	r3, [r3]
   11380:	ldr	r2, [fp, #-20]	; 0xffffffec
   11384:	cmp	r2, r3
   11388:	bgt	11398 <__assert_fail@plt+0x880>
   1138c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11390:	ldr	r0, [fp, #-20]	; 0xffffffec
   11394:	bl	11110 <__assert_fail@plt+0x5f8>
   11398:	ldr	r3, [fp, #-20]	; 0xffffffec
   1139c:	add	r3, r3, #2
   113a0:	str	r3, [fp, #-20]	; 0xffffffec
   113a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   113a8:	ldr	r3, [fp, #-16]
   113ac:	cmp	r2, r3
   113b0:	ble	1135c <__assert_fail@plt+0x844>
   113b4:	ldr	r3, [pc, #64]	; 113fc <__assert_fail@plt+0x8e4>
   113b8:	ldr	r3, [r4, r3]
   113bc:	ldr	r2, [r3]
   113c0:	ldr	r3, [pc, #44]	; 113f4 <__assert_fail@plt+0x8dc>
   113c4:	ldr	r3, [r4, r3]
   113c8:	ldr	r3, [r3]
   113cc:	sub	r2, r2, r3
   113d0:	ldr	r3, [pc, #32]	; 113f8 <__assert_fail@plt+0x8e0>
   113d4:	ldr	r3, [r4, r3]
   113d8:	ldr	r3, [r3]
   113dc:	cmp	r2, r3
   113e0:	bge	112f0 <__assert_fail@plt+0x7d8>
   113e4:	nop			; (mov r0, r0)
   113e8:	sub	sp, fp, #8
   113ec:	pop	{r4, fp, pc}
   113f0:	andeq	r8, r1, ip, asr #26
   113f4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   113f8:	strdeq	r0, [r0], -r8
   113fc:	andeq	r0, r0, ip, lsr #1
   11400:	andeq	r0, r0, r8, ror #1
   11404:	andeq	r0, r0, r4, asr #1
   11408:	push	{r4, fp, lr}
   1140c:	add	fp, sp, #8
   11410:	sub	sp, sp, #28
   11414:	ldr	r4, [pc, #236]	; 11508 <__assert_fail@plt+0x9f0>
   11418:	add	r4, pc, r4
   1141c:	ldr	r3, [pc, #232]	; 1150c <__assert_fail@plt+0x9f4>
   11420:	ldr	r3, [r4, r3]
   11424:	ldr	r2, [r3]
   11428:	ldr	r3, [pc, #224]	; 11510 <__assert_fail@plt+0x9f8>
   1142c:	ldr	r3, [r4, r3]
   11430:	ldr	r3, [r3]
   11434:	sub	r3, r2, r3
   11438:	str	r3, [fp, #-16]
   1143c:	ldr	r3, [pc, #208]	; 11514 <__assert_fail@plt+0x9fc>
   11440:	ldr	r3, [r4, r3]
   11444:	ldr	r3, [r3, #4]
   11448:	str	r3, [fp, #-24]	; 0xffffffe8
   1144c:	b	114f0 <__assert_fail@plt+0x9d8>
   11450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11454:	ldr	r2, [r3, #12]
   11458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1145c:	ldr	r1, [r3, #8]
   11460:	ldr	r3, [fp, #-16]
   11464:	add	r3, r1, r3
   11468:	asr	r3, r3, #1
   1146c:	lsl	r3, r3, #1
   11470:	add	r3, r2, r3
   11474:	ldrh	r3, [r3]
   11478:	str	r3, [fp, #-20]	; 0xffffffec
   1147c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11480:	ldr	r3, [r3]
   11484:	sub	r2, fp, #32
   11488:	mov	r1, r3
   1148c:	ldr	r0, [fp, #-16]
   11490:	bl	11008 <__assert_fail@plt+0x4f0>
   11494:	str	r0, [fp, #-28]	; 0xffffffe4
   11498:	b	114cc <__assert_fail@plt+0x9b4>
   1149c:	ldr	r3, [pc, #116]	; 11518 <__assert_fail@plt+0xa00>
   114a0:	ldr	r3, [r4, r3]
   114a4:	ldr	r2, [r3]
   114a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   114ac:	sub	r3, r3, #1
   114b0:	str	r3, [fp, #-20]	; 0xffffffec
   114b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   114b8:	lsl	r3, r3, #2
   114bc:	add	r3, r2, r3
   114c0:	ldr	r3, [r3]
   114c4:	mov	r2, #1
   114c8:	strb	r2, [r3, #4]
   114cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   114d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   114d4:	cmp	r2, r3
   114d8:	bgt	1149c <__assert_fail@plt+0x984>
   114dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   114e0:	str	r3, [fp, #-16]
   114e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114e8:	ldr	r3, [r3]
   114ec:	str	r3, [fp, #-24]	; 0xffffffe8
   114f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   114f4:	cmp	r3, #0
   114f8:	bne	11450 <__assert_fail@plt+0x938>
   114fc:	nop			; (mov r0, r0)
   11500:	sub	sp, fp, #8
   11504:	pop	{r4, fp, pc}
   11508:	andeq	r8, r1, r0, ror #23
   1150c:	andeq	r0, r0, ip, lsr #1
   11510:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11514:	andeq	r0, r0, r4, asr #1
   11518:	andeq	r0, r0, ip, ror #1
   1151c:	push	{r4, fp, lr}
   11520:	add	fp, sp, #8
   11524:	sub	sp, sp, #36	; 0x24
   11528:	str	r0, [fp, #-32]	; 0xffffffe0
   1152c:	str	r1, [fp, #-36]	; 0xffffffdc
   11530:	str	r2, [fp, #-40]	; 0xffffffd8
   11534:	ldr	r4, [pc, #376]	; 116b4 <__assert_fail@plt+0xb9c>
   11538:	add	r4, pc, r4
   1153c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11540:	bl	12380 <__assert_fail@plt+0x1868>
   11544:	mov	r3, #0
   11548:	str	r3, [fp, #-16]
   1154c:	b	11690 <__assert_fail@plt+0xb78>
   11550:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11554:	add	r3, r3, #4096	; 0x1000
   11558:	ldr	r2, [r3, #3952]	; 0xf70
   1155c:	ldr	r3, [fp, #-16]
   11560:	lsl	r3, r3, #2
   11564:	add	r3, r2, r3
   11568:	ldr	r3, [r3]
   1156c:	ldr	r3, [r3, #12]
   11570:	str	r3, [fp, #-20]	; 0xffffffec
   11574:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11578:	add	r3, r3, #4096	; 0x1000
   1157c:	ldr	r2, [r3, #3952]	; 0xf70
   11580:	ldr	r3, [fp, #-16]
   11584:	lsl	r3, r3, #2
   11588:	add	r3, r2, r3
   1158c:	ldr	r3, [r3]
   11590:	ldr	r3, [r3, #16]
   11594:	str	r3, [fp, #-24]	; 0xffffffe8
   11598:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1159c:	ldr	r1, [fp, #-20]	; 0xffffffec
   115a0:	ldr	r3, [pc, #272]	; 116b8 <__assert_fail@plt+0xba0>
   115a4:	ldr	r3, [r4, r3]
   115a8:	mov	r0, r3
   115ac:	bl	131a0 <error@@Base+0x148>
   115b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   115b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   115b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   115bc:	bl	131a0 <error@@Base+0x148>
   115c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   115c4:	add	r3, r3, #4096	; 0x1000
   115c8:	ldr	r2, [r3, #3952]	; 0xf70
   115cc:	ldr	r3, [fp, #-16]
   115d0:	lsl	r3, r3, #2
   115d4:	add	r3, r2, r3
   115d8:	ldr	r3, [r3]
   115dc:	ldr	r3, [r3, #8]
   115e0:	mov	r0, r3
   115e4:	bl	10a7c <strlen@plt>
   115e8:	mov	r3, r0
   115ec:	lsl	r3, r3, #3
   115f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   115f4:	add	r3, r2, r3
   115f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   115fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   11600:	mov	r0, r3
   11604:	bl	131a0 <error@@Base+0x148>
   11608:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1160c:	cmp	r3, #0
   11610:	beq	11684 <__assert_fail@plt+0xb6c>
   11614:	ldr	r2, [fp, #-20]	; 0xffffffec
   11618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1161c:	cmp	r2, r3
   11620:	moveq	r3, #1
   11624:	movne	r3, #0
   11628:	uxtb	r3, r3
   1162c:	mov	r2, r3
   11630:	mov	r1, #1
   11634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11638:	bl	131a0 <error@@Base+0x148>
   1163c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11640:	cmp	r3, #10
   11644:	bgt	11654 <__assert_fail@plt+0xb3c>
   11648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1164c:	lsl	r3, r3, #3
   11650:	b	11658 <__assert_fail@plt+0xb40>
   11654:	mov	r3, #88	; 0x58
   11658:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1165c:	add	r0, r2, r3
   11660:	ldr	r2, [fp, #-20]	; 0xffffffec
   11664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11668:	cmp	r2, r3
   1166c:	moveq	r3, #1
   11670:	movne	r3, #0
   11674:	uxtb	r3, r3
   11678:	mov	r2, r3
   1167c:	mov	r1, #1
   11680:	bl	131a0 <error@@Base+0x148>
   11684:	ldr	r3, [fp, #-16]
   11688:	add	r3, r3, #1
   1168c:	str	r3, [fp, #-16]
   11690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11694:	add	r3, r3, #4096	; 0x1000
   11698:	ldr	r2, [r3, #3956]	; 0xf74
   1169c:	ldr	r3, [fp, #-16]
   116a0:	cmp	r2, r3
   116a4:	bgt	11550 <__assert_fail@plt+0xa38>
   116a8:	nop			; (mov r0, r0)
   116ac:	sub	sp, fp, #8
   116b0:	pop	{r4, fp, pc}
   116b4:	andeq	r8, r1, r0, asr #21
   116b8:	ldrdeq	r0, [r0], -r8
   116bc:	push	{r4, fp, lr}
   116c0:	add	fp, sp, #8
   116c4:	sub	sp, sp, #20
   116c8:	ldr	r4, [pc, #244]	; 117c4 <__assert_fail@plt+0xcac>
   116cc:	add	r4, pc, r4
   116d0:	mov	r3, #0
   116d4:	str	r3, [fp, #-16]
   116d8:	b	117a0 <__assert_fail@plt+0xc88>
   116dc:	mov	r3, #1
   116e0:	strb	r3, [fp, #-21]	; 0xffffffeb
   116e4:	mov	r3, #0
   116e8:	str	r3, [fp, #-20]	; 0xffffffec
   116ec:	b	11768 <__assert_fail@plt+0xc50>
   116f0:	ldr	r3, [pc, #208]	; 117c8 <__assert_fail@plt+0xcb0>
   116f4:	ldr	r3, [r4, r3]
   116f8:	ldr	r2, [r3]
   116fc:	ldr	r1, [fp, #-16]
   11700:	ldr	r3, [fp, #-20]	; 0xffffffec
   11704:	add	r3, r1, r3
   11708:	lsl	r3, r3, #3
   1170c:	add	r3, r2, r3
   11710:	ldrb	r2, [r3, #4]
   11714:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11718:	and	r3, r3, r2
   1171c:	strb	r3, [fp, #-21]	; 0xffffffeb
   11720:	ldr	r3, [fp, #-20]	; 0xffffffec
   11724:	add	r3, r3, #1
   11728:	add	r3, r3, #115	; 0x73
   1172c:	lsl	r3, r3, #3
   11730:	ldr	r2, [pc, #148]	; 117cc <__assert_fail@plt+0xcb4>
   11734:	ldr	r2, [r4, r2]
   11738:	add	r0, r3, r2
   1173c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11740:	cmp	r3, #0
   11744:	moveq	r3, #1
   11748:	movne	r3, #0
   1174c:	uxtb	r3, r3
   11750:	mov	r2, r3
   11754:	mov	r1, #1
   11758:	bl	131a0 <error@@Base+0x148>
   1175c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11760:	add	r3, r3, #1
   11764:	str	r3, [fp, #-20]	; 0xffffffec
   11768:	ldr	r3, [fp, #-20]	; 0xffffffec
   1176c:	cmp	r3, #7
   11770:	bgt	11794 <__assert_fail@plt+0xc7c>
   11774:	ldr	r2, [fp, #-16]
   11778:	ldr	r3, [fp, #-20]	; 0xffffffec
   1177c:	add	r2, r2, r3
   11780:	ldr	r3, [pc, #72]	; 117d0 <__assert_fail@plt+0xcb8>
   11784:	ldr	r3, [r4, r3]
   11788:	ldr	r3, [r3, #12]
   1178c:	cmp	r2, r3
   11790:	blt	116f0 <__assert_fail@plt+0xbd8>
   11794:	ldr	r3, [fp, #-16]
   11798:	add	r3, r3, #1
   1179c:	str	r3, [fp, #-16]
   117a0:	ldr	r3, [pc, #40]	; 117d0 <__assert_fail@plt+0xcb8>
   117a4:	ldr	r3, [r4, r3]
   117a8:	ldr	r2, [r3, #12]
   117ac:	ldr	r3, [fp, #-16]
   117b0:	cmp	r2, r3
   117b4:	bgt	116dc <__assert_fail@plt+0xbc4>
   117b8:	nop			; (mov r0, r0)
   117bc:	sub	sp, fp, #8
   117c0:	pop	{r4, fp, pc}
   117c4:	andeq	r8, r1, ip, lsr #18
   117c8:	andeq	r0, r0, r0, lsl #2
   117cc:	ldrdeq	r0, [r0], -r8
   117d0:	strheq	r0, [r0], -ip
   117d4:	push	{r4, fp, lr}
   117d8:	add	fp, sp, #8
   117dc:	sub	sp, sp, #12
   117e0:	ldr	r4, [pc, #308]	; 1191c <__assert_fail@plt+0xe04>
   117e4:	add	r4, pc, r4
   117e8:	mov	r3, #0
   117ec:	str	r3, [fp, #-16]
   117f0:	b	118a8 <__assert_fail@plt+0xd90>
   117f4:	ldr	r3, [pc, #292]	; 11920 <__assert_fail@plt+0xe08>
   117f8:	ldr	r3, [r4, r3]
   117fc:	ldr	r2, [r3]
   11800:	ldr	r3, [fp, #-16]
   11804:	lsl	r3, r3, #3
   11808:	add	r3, r2, r3
   1180c:	ldr	r3, [r3]
   11810:	ldr	r3, [r3, #8]
   11814:	mov	r0, r3
   11818:	bl	1200c <__assert_fail@plt+0x14f4>
   1181c:	mov	r3, r0
   11820:	cmp	r3, #0
   11824:	beq	11838 <__assert_fail@plt+0xd20>
   11828:	ldr	r3, [pc, #244]	; 11924 <__assert_fail@plt+0xe0c>
   1182c:	ldr	r3, [r4, r3]
   11830:	add	r0, r3, #992	; 0x3e0
   11834:	b	11848 <__assert_fail@plt+0xd30>
   11838:	ldr	r3, [pc, #228]	; 11924 <__assert_fail@plt+0xe0c>
   1183c:	ldr	r3, [r4, r3]
   11840:	ldr	r2, [pc, #224]	; 11928 <__assert_fail@plt+0xe10>
   11844:	add	r0, r3, r2
   11848:	ldr	r3, [pc, #208]	; 11920 <__assert_fail@plt+0xe08>
   1184c:	ldr	r3, [r4, r3]
   11850:	ldr	r2, [r3]
   11854:	ldr	r3, [fp, #-16]
   11858:	lsl	r3, r3, #3
   1185c:	add	r3, r2, r3
   11860:	ldr	r3, [r3]
   11864:	ldr	r1, [r3, #8]
   11868:	ldr	r3, [pc, #176]	; 11920 <__assert_fail@plt+0xe08>
   1186c:	ldr	r3, [r4, r3]
   11870:	ldr	r2, [r3]
   11874:	ldr	r3, [fp, #-16]
   11878:	lsl	r3, r3, #3
   1187c:	add	r3, r2, r3
   11880:	ldrb	r3, [r3, #4]
   11884:	cmp	r3, #0
   11888:	moveq	r3, #1
   1188c:	movne	r3, #0
   11890:	uxtb	r3, r3
   11894:	mov	r2, #1
   11898:	bl	131f8 <error@@Base+0x1a0>
   1189c:	ldr	r3, [fp, #-16]
   118a0:	add	r3, r3, #1
   118a4:	str	r3, [fp, #-16]
   118a8:	ldr	r3, [pc, #124]	; 1192c <__assert_fail@plt+0xe14>
   118ac:	ldr	r3, [r4, r3]
   118b0:	ldr	r2, [r3, #12]
   118b4:	ldr	r3, [fp, #-16]
   118b8:	cmp	r2, r3
   118bc:	bgt	117f4 <__assert_fail@plt+0xcdc>
   118c0:	mov	r2, #0
   118c4:	ldr	r3, [pc, #88]	; 11924 <__assert_fail@plt+0xe0c>
   118c8:	ldr	r3, [r4, r3]
   118cc:	add	r1, r3, #8
   118d0:	ldr	r3, [pc, #76]	; 11924 <__assert_fail@plt+0xe0c>
   118d4:	ldr	r3, [r4, r3]
   118d8:	add	r0, r3, #992	; 0x3e0
   118dc:	bl	1151c <__assert_fail@plt+0xa04>
   118e0:	ldr	r3, [pc, #60]	; 11924 <__assert_fail@plt+0xe0c>
   118e4:	ldr	r3, [r4, r3]
   118e8:	add	r2, r3, #824	; 0x338
   118ec:	ldr	r3, [pc, #48]	; 11924 <__assert_fail@plt+0xe0c>
   118f0:	ldr	r3, [r4, r3]
   118f4:	add	r1, r3, #416	; 0x1a0
   118f8:	ldr	r3, [pc, #36]	; 11924 <__assert_fail@plt+0xe0c>
   118fc:	ldr	r3, [r4, r3]
   11900:	ldr	r0, [pc, #32]	; 11928 <__assert_fail@plt+0xe10>
   11904:	add	r0, r3, r0
   11908:	bl	1151c <__assert_fail@plt+0xa04>
   1190c:	bl	116bc <__assert_fail@plt+0xba4>
   11910:	nop			; (mov r0, r0)
   11914:	sub	sp, fp, #8
   11918:	pop	{r4, fp, pc}
   1191c:	andeq	r8, r1, r4, lsl r8
   11920:	andeq	r0, r0, r0, lsl #2
   11924:	ldrdeq	r0, [r0], -r8
   11928:	andeq	r2, r0, r8, asr r3
   1192c:	strheq	r0, [r0], -ip
   11930:	push	{r4, fp, lr}
   11934:	add	fp, sp, #8
   11938:	sub	sp, sp, #12
   1193c:	str	r0, [fp, #-16]
   11940:	str	r1, [fp, #-20]	; 0xffffffec
   11944:	ldr	r4, [pc, #160]	; 119ec <__assert_fail@plt+0xed4>
   11948:	add	r4, pc, r4
   1194c:	sub	r0, fp, #16
   11950:	ldr	r3, [pc, #152]	; 119f0 <__assert_fail@plt+0xed8>
   11954:	ldr	r3, [r4, r3]
   11958:	ldr	r2, [pc, #148]	; 119f4 <__assert_fail@plt+0xedc>
   1195c:	add	r2, pc, r2
   11960:	ldr	r1, [fp, #-20]	; 0xffffffec
   11964:	bl	12f88 <__assert_fail@plt+0x2470>
   11968:	ldr	r3, [fp, #-16]
   1196c:	cmp	r3, #1
   11970:	ble	11980 <__assert_fail@plt+0xe68>
   11974:	ldr	r3, [fp, #-16]
   11978:	cmp	r3, #3
   1197c:	ble	11990 <__assert_fail@plt+0xe78>
   11980:	ldr	r3, [pc, #112]	; 119f8 <__assert_fail@plt+0xee0>
   11984:	add	r3, pc, r3
   11988:	mov	r0, r3
   1198c:	bl	13058 <error@@Base>
   11990:	ldr	r3, [pc, #100]	; 119fc <__assert_fail@plt+0xee4>
   11994:	ldr	r3, [r4, r3]
   11998:	ldr	r3, [r3]
   1199c:	mov	r0, r3
   119a0:	bl	11e9c <__assert_fail@plt+0x1384>
   119a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   119a8:	bl	10d74 <__assert_fail@plt+0x25c>
   119ac:	bl	1129c <__assert_fail@plt+0x784>
   119b0:	bl	11408 <__assert_fail@plt+0x8f0>
   119b4:	bl	117d4 <__assert_fail@plt+0xcbc>
   119b8:	ldr	r3, [fp, #-16]
   119bc:	cmp	r3, #3
   119c0:	bne	119d0 <__assert_fail@plt+0xeb8>
   119c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   119c8:	ldr	r3, [r3, #8]
   119cc:	b	119d4 <__assert_fail@plt+0xebc>
   119d0:	mov	r3, #0
   119d4:	mov	r1, r3
   119d8:	ldr	r3, [pc, #32]	; 11a00 <__assert_fail@plt+0xee8>
   119dc:	ldr	r3, [r4, r3]
   119e0:	mov	r0, r3
   119e4:	bl	13c24 <error@@Base+0xbcc>
   119e8:	bl	13048 <__assert_fail@plt+0x2530>
   119ec:			; <UNDEFINED> instruction: 0x000186b0
   119f0:	andeq	r0, r0, ip, asr #1
   119f4:	andeq	r3, r0, ip, lsr #28
   119f8:	andeq	r3, r0, r4, asr #28
   119fc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11a00:	ldrdeq	r0, [r0], -r8
   11a04:	push	{fp}		; (str fp, [sp, #-4]!)
   11a08:	add	fp, sp, #0
   11a0c:	sub	sp, sp, #12
   11a10:	str	r0, [fp, #-8]
   11a14:	ldr	r3, [fp, #-8]
   11a18:	mov	r2, #0
   11a1c:	str	r2, [r3, #4]
   11a20:	ldr	r3, [fp, #-8]
   11a24:	ldr	r2, [r3, #4]
   11a28:	ldr	r3, [fp, #-8]
   11a2c:	str	r2, [r3]
   11a30:	ldr	r3, [fp, #-8]
   11a34:	mov	r2, #0
   11a38:	str	r2, [r3, #8]
   11a3c:	ldr	r3, [fp, #-8]
   11a40:	mov	r2, #0
   11a44:	str	r2, [r3, #12]
   11a48:	nop			; (mov r0, r0)
   11a4c:	add	sp, fp, #0
   11a50:	pop	{fp}		; (ldr fp, [sp], #4)
   11a54:	bx	lr
   11a58:	push	{fp, lr}
   11a5c:	add	fp, sp, #4
   11a60:	sub	sp, sp, #8
   11a64:	str	r0, [fp, #-8]
   11a68:	ldr	r3, [fp, #-8]
   11a6c:	ldr	r3, [r3, #8]
   11a70:	cmp	r3, #0
   11a74:	beq	11a94 <__assert_fail@plt+0xf7c>
   11a78:	ldr	r3, [fp, #-8]
   11a7c:	ldr	r3, [r3, #8]
   11a80:	mov	r0, r3
   11a84:	bl	10998 <free@plt>
   11a88:	ldr	r3, [fp, #-8]
   11a8c:	mov	r2, #0
   11a90:	str	r2, [r3, #8]
   11a94:	nop			; (mov r0, r0)
   11a98:	sub	sp, fp, #4
   11a9c:	pop	{fp, pc}
   11aa0:	push	{fp, lr}
   11aa4:	add	fp, sp, #4
   11aa8:	sub	sp, sp, #16
   11aac:	str	r0, [fp, #-8]
   11ab0:	str	r1, [fp, #-12]
   11ab4:	str	r2, [fp, #-16]
   11ab8:	str	r3, [fp, #-20]	; 0xffffffec
   11abc:	ldr	r3, [fp, #-16]
   11ac0:	ldr	r2, [fp, #-12]
   11ac4:	str	r2, [r3]
   11ac8:	ldr	r3, [fp, #-16]
   11acc:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ad0:	str	r2, [r3, #4]
   11ad4:	ldr	r3, [fp, #-12]
   11ad8:	cmp	r3, #0
   11adc:	beq	11af0 <__assert_fail@plt+0xfd8>
   11ae0:	ldr	r3, [fp, #-12]
   11ae4:	ldr	r2, [fp, #-16]
   11ae8:	str	r2, [r3, #4]
   11aec:	b	11afc <__assert_fail@plt+0xfe4>
   11af0:	ldr	r3, [fp, #-8]
   11af4:	ldr	r2, [fp, #-16]
   11af8:	str	r2, [r3]
   11afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b00:	cmp	r3, #0
   11b04:	beq	11b18 <__assert_fail@plt+0x1000>
   11b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b0c:	ldr	r2, [fp, #-16]
   11b10:	str	r2, [r3]
   11b14:	b	11b24 <__assert_fail@plt+0x100c>
   11b18:	ldr	r3, [fp, #-8]
   11b1c:	ldr	r2, [fp, #-16]
   11b20:	str	r2, [r3, #4]
   11b24:	ldr	r0, [fp, #-8]
   11b28:	bl	11a58 <__assert_fail@plt+0xf40>
   11b2c:	ldr	r3, [fp, #-8]
   11b30:	ldr	r3, [r3, #12]
   11b34:	add	r2, r3, #1
   11b38:	ldr	r3, [fp, #-8]
   11b3c:	str	r2, [r3, #12]
   11b40:	nop			; (mov r0, r0)
   11b44:	sub	sp, fp, #4
   11b48:	pop	{fp, pc}
   11b4c:	push	{fp, lr}
   11b50:	add	fp, sp, #4
   11b54:	sub	sp, sp, #8
   11b58:	str	r0, [fp, #-8]
   11b5c:	str	r1, [fp, #-12]
   11b60:	ldr	r3, [fp, #-8]
   11b64:	ldr	r3, [r3]
   11b68:	ldr	r2, [fp, #-12]
   11b6c:	mov	r1, #0
   11b70:	ldr	r0, [fp, #-8]
   11b74:	bl	11aa0 <__assert_fail@plt+0xf88>
   11b78:	nop			; (mov r0, r0)
   11b7c:	sub	sp, fp, #4
   11b80:	pop	{fp, pc}
   11b84:	push	{fp, lr}
   11b88:	add	fp, sp, #4
   11b8c:	sub	sp, sp, #8
   11b90:	str	r0, [fp, #-8]
   11b94:	str	r1, [fp, #-12]
   11b98:	ldr	r3, [fp, #-8]
   11b9c:	ldr	r1, [r3, #4]
   11ba0:	mov	r3, #0
   11ba4:	ldr	r2, [fp, #-12]
   11ba8:	ldr	r0, [fp, #-8]
   11bac:	bl	11aa0 <__assert_fail@plt+0xf88>
   11bb0:	nop			; (mov r0, r0)
   11bb4:	sub	sp, fp, #4
   11bb8:	pop	{fp, pc}
   11bbc:	push	{fp, lr}
   11bc0:	add	fp, sp, #4
   11bc4:	sub	sp, sp, #16
   11bc8:	str	r0, [fp, #-8]
   11bcc:	str	r1, [fp, #-12]
   11bd0:	str	r2, [fp, #-16]
   11bd4:	ldr	r3, [fp, #-16]
   11bd8:	ldr	r1, [r3]
   11bdc:	ldr	r3, [fp, #-16]
   11be0:	ldr	r2, [fp, #-12]
   11be4:	ldr	r0, [fp, #-8]
   11be8:	bl	11aa0 <__assert_fail@plt+0xf88>
   11bec:	nop			; (mov r0, r0)
   11bf0:	sub	sp, fp, #4
   11bf4:	pop	{fp, pc}
   11bf8:	push	{fp, lr}
   11bfc:	add	fp, sp, #4
   11c00:	sub	sp, sp, #16
   11c04:	str	r0, [fp, #-8]
   11c08:	str	r1, [fp, #-12]
   11c0c:	str	r2, [fp, #-16]
   11c10:	ldr	r3, [fp, #-12]
   11c14:	ldr	r3, [r3, #4]
   11c18:	ldr	r2, [fp, #-16]
   11c1c:	ldr	r1, [fp, #-12]
   11c20:	ldr	r0, [fp, #-8]
   11c24:	bl	11aa0 <__assert_fail@plt+0xf88>
   11c28:	nop			; (mov r0, r0)
   11c2c:	sub	sp, fp, #4
   11c30:	pop	{fp, pc}
   11c34:	push	{fp, lr}
   11c38:	add	fp, sp, #4
   11c3c:	sub	sp, sp, #8
   11c40:	str	r0, [fp, #-8]
   11c44:	str	r1, [fp, #-12]
   11c48:	ldr	r3, [fp, #-12]
   11c4c:	ldr	r3, [r3]
   11c50:	cmp	r3, #0
   11c54:	beq	11c70 <__assert_fail@plt+0x1158>
   11c58:	ldr	r3, [fp, #-12]
   11c5c:	ldr	r3, [r3]
   11c60:	ldr	r2, [fp, #-12]
   11c64:	ldr	r2, [r2, #4]
   11c68:	str	r2, [r3, #4]
   11c6c:	b	11c80 <__assert_fail@plt+0x1168>
   11c70:	ldr	r3, [fp, #-12]
   11c74:	ldr	r2, [r3, #4]
   11c78:	ldr	r3, [fp, #-8]
   11c7c:	str	r2, [r3]
   11c80:	ldr	r3, [fp, #-12]
   11c84:	ldr	r3, [r3, #4]
   11c88:	cmp	r3, #0
   11c8c:	beq	11ca8 <__assert_fail@plt+0x1190>
   11c90:	ldr	r3, [fp, #-12]
   11c94:	ldr	r3, [r3, #4]
   11c98:	ldr	r2, [fp, #-12]
   11c9c:	ldr	r2, [r2]
   11ca0:	str	r2, [r3]
   11ca4:	b	11cb8 <__assert_fail@plt+0x11a0>
   11ca8:	ldr	r3, [fp, #-12]
   11cac:	ldr	r2, [r3]
   11cb0:	ldr	r3, [fp, #-8]
   11cb4:	str	r2, [r3, #4]
   11cb8:	ldr	r3, [fp, #-12]
   11cbc:	mov	r2, #0
   11cc0:	str	r2, [r3, #4]
   11cc4:	ldr	r3, [fp, #-12]
   11cc8:	ldr	r2, [r3, #4]
   11ccc:	ldr	r3, [fp, #-12]
   11cd0:	str	r2, [r3]
   11cd4:	ldr	r0, [fp, #-8]
   11cd8:	bl	11a58 <__assert_fail@plt+0xf40>
   11cdc:	ldr	r3, [fp, #-8]
   11ce0:	ldr	r3, [r3, #12]
   11ce4:	sub	r2, r3, #1
   11ce8:	ldr	r3, [fp, #-8]
   11cec:	str	r2, [r3, #12]
   11cf0:	nop			; (mov r0, r0)
   11cf4:	sub	sp, fp, #4
   11cf8:	pop	{fp, pc}
   11cfc:	push	{fp, lr}
   11d00:	add	fp, sp, #4
   11d04:	sub	sp, sp, #16
   11d08:	str	r0, [fp, #-16]
   11d0c:	mov	r3, #0
   11d10:	str	r3, [fp, #-12]
   11d14:	ldr	r3, [fp, #-16]
   11d18:	ldr	r3, [r3, #8]
   11d1c:	cmp	r3, #0
   11d20:	bne	11da4 <__assert_fail@plt+0x128c>
   11d24:	ldr	r3, [fp, #-16]
   11d28:	ldr	r3, [r3, #12]
   11d2c:	cmp	r3, #0
   11d30:	beq	11da4 <__assert_fail@plt+0x128c>
   11d34:	ldr	r3, [fp, #-16]
   11d38:	ldr	r3, [r3, #12]
   11d3c:	mov	r1, #4
   11d40:	mov	r0, r3
   11d44:	bl	12504 <__assert_fail@plt+0x19ec>
   11d48:	mov	r2, r0
   11d4c:	ldr	r3, [fp, #-16]
   11d50:	str	r2, [r3, #8]
   11d54:	ldr	r3, [fp, #-16]
   11d58:	ldr	r3, [r3]
   11d5c:	str	r3, [fp, #-8]
   11d60:	b	11d94 <__assert_fail@plt+0x127c>
   11d64:	ldr	r3, [fp, #-16]
   11d68:	ldr	r2, [r3, #8]
   11d6c:	ldr	r3, [fp, #-12]
   11d70:	add	r1, r3, #1
   11d74:	str	r1, [fp, #-12]
   11d78:	lsl	r3, r3, #2
   11d7c:	add	r3, r2, r3
   11d80:	ldr	r2, [fp, #-8]
   11d84:	str	r2, [r3]
   11d88:	ldr	r3, [fp, #-8]
   11d8c:	ldr	r3, [r3, #4]
   11d90:	str	r3, [fp, #-8]
   11d94:	ldr	r3, [fp, #-8]
   11d98:	cmp	r3, #0
   11d9c:	bne	11d64 <__assert_fail@plt+0x124c>
   11da0:	b	11da8 <__assert_fail@plt+0x1290>
   11da4:	nop			; (mov r0, r0)
   11da8:	sub	sp, fp, #4
   11dac:	pop	{fp, pc}
   11db0:	push	{fp, lr}
   11db4:	add	fp, sp, #4
   11db8:	sub	sp, sp, #16
   11dbc:	str	r0, [fp, #-16]
   11dc0:	str	r1, [fp, #-20]	; 0xffffffec
   11dc4:	b	11dec <__assert_fail@plt+0x12d4>
   11dc8:	ldr	r3, [fp, #-16]
   11dcc:	ldr	r3, [r3]
   11dd0:	str	r3, [fp, #-8]
   11dd4:	ldr	r1, [fp, #-8]
   11dd8:	ldr	r0, [fp, #-16]
   11ddc:	bl	11c34 <__assert_fail@plt+0x111c>
   11de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11de4:	ldr	r0, [fp, #-8]
   11de8:	blx	r3
   11dec:	ldr	r3, [fp, #-16]
   11df0:	ldr	r3, [r3]
   11df4:	cmp	r3, #0
   11df8:	bne	11dc8 <__assert_fail@plt+0x12b0>
   11dfc:	nop			; (mov r0, r0)
   11e00:	sub	sp, fp, #4
   11e04:	pop	{fp, pc}
   11e08:	push	{fp, lr}
   11e0c:	add	fp, sp, #4
   11e10:	sub	sp, sp, #16
   11e14:	str	r0, [fp, #-16]
   11e18:	ldr	r1, [fp, #-16]
   11e1c:	ldr	r3, [pc, #108]	; 11e90 <__assert_fail@plt+0x1378>
   11e20:	add	r3, pc, r3
   11e24:	mov	r0, r3
   11e28:	bl	121cc <__assert_fail@plt+0x16b4>
   11e2c:	str	r0, [fp, #-8]
   11e30:	ldr	r3, [fp, #-8]
   11e34:	cmp	r3, #0
   11e38:	beq	11e54 <__assert_fail@plt+0x133c>
   11e3c:	ldr	r1, [fp, #-16]
   11e40:	ldr	r3, [pc, #76]	; 11e94 <__assert_fail@plt+0x137c>
   11e44:	add	r3, pc, r3
   11e48:	mov	r0, r3
   11e4c:	bl	13134 <error@@Base+0xdc>
   11e50:	b	11e84 <__assert_fail@plt+0x136c>
   11e54:	mov	r1, #12
   11e58:	mov	r0, #1
   11e5c:	bl	12504 <__assert_fail@plt+0x19ec>
   11e60:	str	r0, [fp, #-8]
   11e64:	ldr	r3, [fp, #-8]
   11e68:	ldr	r2, [fp, #-16]
   11e6c:	str	r2, [r3, #8]
   11e70:	ldr	r1, [fp, #-8]
   11e74:	ldr	r3, [pc, #28]	; 11e98 <__assert_fail@plt+0x1380>
   11e78:	add	r3, pc, r3
   11e7c:	mov	r0, r3
   11e80:	bl	122a0 <__assert_fail@plt+0x1788>
   11e84:	nop			; (mov r0, r0)
   11e88:	sub	sp, fp, #4
   11e8c:	pop	{fp, pc}
   11e90:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   11e94:	andeq	r3, r0, r4, lsr #24
   11e98:	andeq	r8, r1, r0, lsl #9
   11e9c:	push	{r4, fp, lr}
   11ea0:	add	fp, sp, #8
   11ea4:	sub	sp, sp, #20
   11ea8:	str	r0, [fp, #-24]	; 0xffffffe8
   11eac:	ldr	r4, [pc, #296]	; 11fdc <__assert_fail@plt+0x14c4>
   11eb0:	add	r4, pc, r4
   11eb4:	ldr	r3, [pc, #292]	; 11fe0 <__assert_fail@plt+0x14c8>
   11eb8:	add	r3, pc, r3
   11ebc:	ldrb	r3, [r3]
   11ec0:	cmp	r3, #0
   11ec4:	beq	11ed8 <__assert_fail@plt+0x13c0>
   11ec8:	ldr	r3, [pc, #276]	; 11fe4 <__assert_fail@plt+0x14cc>
   11ecc:	add	r3, pc, r3
   11ed0:	mov	r0, r3
   11ed4:	bl	13058 <error@@Base>
   11ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11edc:	cmp	r3, #0
   11ee0:	beq	11f7c <__assert_fail@plt+0x1464>
   11ee4:	ldr	r3, [pc, #252]	; 11fe8 <__assert_fail@plt+0x14d0>
   11ee8:	add	r3, pc, r3
   11eec:	mov	r2, r3
   11ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11ef4:	ldr	r3, [pc, #240]	; 11fec <__assert_fail@plt+0x14d4>
   11ef8:	add	r3, pc, r3
   11efc:	mov	r0, r3
   11f00:	bl	14e28 <error@@Base+0x1dd0>
   11f04:	ldr	r3, [pc, #228]	; 11ff0 <__assert_fail@plt+0x14d8>
   11f08:	add	r3, pc, r3
   11f0c:	mov	r1, r3
   11f10:	ldr	r3, [pc, #220]	; 11ff4 <__assert_fail@plt+0x14dc>
   11f14:	add	r3, pc, r3
   11f18:	mov	r0, r3
   11f1c:	bl	14834 <error@@Base+0x17dc>
   11f20:	ldr	r3, [pc, #208]	; 11ff8 <__assert_fail@plt+0x14e0>
   11f24:	ldr	r3, [r4, r3]
   11f28:	mov	r1, r3
   11f2c:	ldr	r3, [pc, #200]	; 11ffc <__assert_fail@plt+0x14e4>
   11f30:	add	r3, pc, r3
   11f34:	mov	r0, r3
   11f38:	bl	11db0 <__assert_fail@plt+0x1298>
   11f3c:	ldr	r3, [pc, #188]	; 12000 <__assert_fail@plt+0x14e8>
   11f40:	add	r3, pc, r3
   11f44:	ldr	r3, [r3]
   11f48:	str	r3, [fp, #-16]
   11f4c:	b	11f6c <__assert_fail@plt+0x1454>
   11f50:	ldr	r3, [fp, #-16]
   11f54:	ldr	r3, [r3, #8]
   11f58:	mov	r0, r3
   11f5c:	bl	11e08 <__assert_fail@plt+0x12f0>
   11f60:	ldr	r3, [fp, #-16]
   11f64:	ldr	r3, [r3, #4]
   11f68:	str	r3, [fp, #-16]
   11f6c:	ldr	r3, [fp, #-16]
   11f70:	cmp	r3, #0
   11f74:	bne	11f50 <__assert_fail@plt+0x1438>
   11f78:	b	11fc0 <__assert_fail@plt+0x14a8>
   11f7c:	mov	r3, #0
   11f80:	strh	r3, [fp, #-18]	; 0xffffffee
   11f84:	b	11fb4 <__assert_fail@plt+0x149c>
   11f88:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   11f8c:	ldr	r3, [pc, #112]	; 12004 <__assert_fail@plt+0x14ec>
   11f90:	add	r3, pc, r3
   11f94:	ldr	r3, [r3, r2, lsl #2]
   11f98:	mov	r0, r3
   11f9c:	bl	11e08 <__assert_fail@plt+0x12f0>
   11fa0:	ldrsh	r3, [fp, #-18]	; 0xffffffee
   11fa4:	uxth	r3, r3
   11fa8:	add	r3, r3, #1
   11fac:	uxth	r3, r3
   11fb0:	strh	r3, [fp, #-18]	; 0xffffffee
   11fb4:	ldrh	r3, [fp, #-18]	; 0xffffffee
   11fb8:	cmp	r3, #109	; 0x6d
   11fbc:	bls	11f88 <__assert_fail@plt+0x1470>
   11fc0:	ldr	r3, [pc, #64]	; 12008 <__assert_fail@plt+0x14f0>
   11fc4:	add	r3, pc, r3
   11fc8:	mov	r2, #1
   11fcc:	strb	r2, [r3]
   11fd0:	nop			; (mov r0, r0)
   11fd4:	sub	sp, fp, #8
   11fd8:	pop	{r4, fp, pc}
   11fdc:	andeq	r8, r1, r8, asr #2
   11fe0:			; <UNDEFINED> instruction: 0x0001a3b8
   11fe4:			; <UNDEFINED> instruction: 0x00003bb0
   11fe8:	andeq	r8, r1, r0, asr #4
   11fec:	andeq	sl, r1, ip, ror r3
   11ff0:	andeq	sl, r1, ip, ror #6
   11ff4:	andeq	sl, r1, r0, ror r3
   11ff8:	andeq	r0, r0, r4, lsr #1
   11ffc:	andeq	sl, r1, r4, asr #6
   12000:	andeq	sl, r1, r4, asr #6
   12004:	andeq	r8, r1, r4, lsr #3
   12008:	andeq	sl, r1, ip, lsr #5
   1200c:	push	{fp, lr}
   12010:	add	fp, sp, #4
   12014:	sub	sp, sp, #8
   12018:	str	r0, [fp, #-8]
   1201c:	ldr	r3, [pc, #80]	; 12074 <__assert_fail@plt+0x155c>
   12020:	add	r3, pc, r3
   12024:	ldrb	r3, [r3]
   12028:	cmp	r3, #0
   1202c:	bne	12040 <__assert_fail@plt+0x1528>
   12030:	ldr	r3, [pc, #64]	; 12078 <__assert_fail@plt+0x1560>
   12034:	add	r3, pc, r3
   12038:	mov	r0, r3
   1203c:	bl	13058 <error@@Base>
   12040:	ldr	r1, [fp, #-8]
   12044:	ldr	r3, [pc, #48]	; 1207c <__assert_fail@plt+0x1564>
   12048:	add	r3, pc, r3
   1204c:	mov	r0, r3
   12050:	bl	121cc <__assert_fail@plt+0x16b4>
   12054:	mov	r3, r0
   12058:	cmp	r3, #0
   1205c:	movne	r3, #1
   12060:	moveq	r3, #0
   12064:	uxtb	r3, r3
   12068:	mov	r0, r3
   1206c:	sub	sp, fp, #4
   12070:	pop	{fp, pc}
   12074:	andeq	sl, r1, r0, asr r2
   12078:	andeq	r3, r0, r8, ror #20
   1207c:			; <UNDEFINED> instruction: 0x000182b0
   12080:	push	{fp, lr}
   12084:	add	fp, sp, #4
   12088:	sub	sp, sp, #16
   1208c:	str	r0, [fp, #-16]
   12090:	mov	r3, #0
   12094:	strh	r3, [fp, #-6]
   12098:	b	120c8 <__assert_fail@plt+0x15b0>
   1209c:	ldrsh	r3, [fp, #-6]
   120a0:	lsl	r3, r3, #4
   120a4:	ldr	r2, [fp, #-16]
   120a8:	add	r3, r2, r3
   120ac:	mov	r0, r3
   120b0:	bl	11a04 <__assert_fail@plt+0xeec>
   120b4:	ldrsh	r3, [fp, #-6]
   120b8:	uxth	r3, r3
   120bc:	add	r3, r3, #1
   120c0:	uxth	r3, r3
   120c4:	strh	r3, [fp, #-6]
   120c8:	ldrsh	r3, [fp, #-6]
   120cc:	ldr	r2, [pc, #56]	; 1210c <__assert_fail@plt+0x15f4>
   120d0:	cmp	r3, r2
   120d4:	ble	1209c <__assert_fail@plt+0x1584>
   120d8:	ldr	r3, [fp, #-16]
   120dc:	add	r3, r3, #4096	; 0x1000
   120e0:	mov	r2, r3
   120e4:	mov	r3, #0
   120e8:	str	r3, [r2, #3952]	; 0xf70
   120ec:	ldr	r3, [fp, #-16]
   120f0:	add	r3, r3, #4096	; 0x1000
   120f4:	mov	r2, r3
   120f8:	mov	r3, #0
   120fc:	str	r3, [r2, #3956]	; 0xf74
   12100:	nop			; (mov r0, r0)
   12104:	sub	sp, fp, #4
   12108:	pop	{fp, pc}
   1210c:	strdeq	r0, [r0], -r6
   12110:	push	{fp}		; (str fp, [sp, #-4]!)
   12114:	add	fp, sp, #0
   12118:	sub	sp, sp, #28
   1211c:	str	r0, [fp, #-24]	; 0xffffffe8
   12120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12124:	str	r3, [fp, #-16]
   12128:	mov	r3, #0
   1212c:	str	r3, [fp, #-12]
   12130:	mov	r3, #0
   12134:	str	r3, [fp, #-8]
   12138:	b	12168 <__assert_fail@plt+0x1650>
   1213c:	ldr	r3, [fp, #-8]
   12140:	ldr	r2, [fp, #-16]
   12144:	add	r3, r2, r3
   12148:	ldrb	r3, [r3]
   1214c:	mov	r2, r3
   12150:	ldr	r3, [fp, #-12]
   12154:	add	r3, r3, r2
   12158:	str	r3, [fp, #-12]
   1215c:	ldr	r3, [fp, #-8]
   12160:	add	r3, r3, #1
   12164:	str	r3, [fp, #-8]
   12168:	ldr	r3, [fp, #-8]
   1216c:	ldr	r2, [fp, #-16]
   12170:	add	r3, r2, r3
   12174:	ldrb	r3, [r3]
   12178:	cmp	r3, #0
   1217c:	bne	1213c <__assert_fail@plt+0x1624>
   12180:	ldr	r2, [fp, #-12]
   12184:	ldr	r3, [pc, #60]	; 121c8 <__assert_fail@plt+0x16b0>
   12188:	smull	r1, r3, r3, r2
   1218c:	add	r3, r3, r2
   12190:	asr	r1, r3, #8
   12194:	asr	r3, r2, #31
   12198:	sub	r1, r1, r3
   1219c:	mov	r3, r1
   121a0:	lsl	r3, r3, #6
   121a4:	sub	r3, r3, r1
   121a8:	lsl	r3, r3, #3
   121ac:	sub	r3, r3, r1
   121b0:	sub	r1, r2, r3
   121b4:	sxth	r3, r1
   121b8:	mov	r0, r3
   121bc:	add	sp, fp, #0
   121c0:	pop	{fp}		; (ldr fp, [sp], #4)
   121c4:	bx	lr
   121c8:	subhi	r4, sl, #1552	; 0x610
   121cc:	push	{fp, lr}
   121d0:	add	fp, sp, #4
   121d4:	sub	sp, sp, #16
   121d8:	str	r0, [fp, #-16]
   121dc:	str	r1, [fp, #-20]	; 0xffffffec
   121e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   121e4:	bl	12110 <__assert_fail@plt+0x15f8>
   121e8:	mov	r3, r0
   121ec:	mov	r2, r3
   121f0:	ldr	r3, [fp, #-16]
   121f4:	ldr	r3, [r3, r2, lsl #4]
   121f8:	str	r3, [fp, #-8]
   121fc:	b	1220c <__assert_fail@plt+0x16f4>
   12200:	ldr	r3, [fp, #-8]
   12204:	ldr	r3, [r3, #4]
   12208:	str	r3, [fp, #-8]
   1220c:	ldr	r3, [fp, #-8]
   12210:	cmp	r3, #0
   12214:	beq	12238 <__assert_fail@plt+0x1720>
   12218:	ldr	r3, [fp, #-8]
   1221c:	ldr	r3, [r3, #8]
   12220:	mov	r1, r3
   12224:	ldr	r0, [fp, #-20]	; 0xffffffec
   12228:	bl	10980 <strcmp@plt>
   1222c:	mov	r3, r0
   12230:	cmp	r3, #0
   12234:	bne	12200 <__assert_fail@plt+0x16e8>
   12238:	ldr	r3, [fp, #-8]
   1223c:	mov	r0, r3
   12240:	sub	sp, fp, #4
   12244:	pop	{fp, pc}
   12248:	push	{fp, lr}
   1224c:	add	fp, sp, #4
   12250:	sub	sp, sp, #8
   12254:	str	r0, [fp, #-8]
   12258:	ldr	r3, [fp, #-8]
   1225c:	add	r3, r3, #4096	; 0x1000
   12260:	ldr	r3, [r3, #3952]	; 0xf70
   12264:	cmp	r3, #0
   12268:	beq	12294 <__assert_fail@plt+0x177c>
   1226c:	ldr	r3, [fp, #-8]
   12270:	add	r3, r3, #4096	; 0x1000
   12274:	ldr	r3, [r3, #3952]	; 0xf70
   12278:	mov	r0, r3
   1227c:	bl	10998 <free@plt>
   12280:	ldr	r3, [fp, #-8]
   12284:	add	r3, r3, #4096	; 0x1000
   12288:	mov	r2, r3
   1228c:	mov	r3, #0
   12290:	str	r3, [r2, #3952]	; 0xf70
   12294:	nop			; (mov r0, r0)
   12298:	sub	sp, fp, #4
   1229c:	pop	{fp, pc}
   122a0:	push	{fp, lr}
   122a4:	add	fp, sp, #4
   122a8:	sub	sp, sp, #8
   122ac:	str	r0, [fp, #-8]
   122b0:	str	r1, [fp, #-12]
   122b4:	ldr	r3, [fp, #-12]
   122b8:	ldr	r3, [r3, #8]
   122bc:	mov	r0, r3
   122c0:	bl	12110 <__assert_fail@plt+0x15f8>
   122c4:	mov	r3, r0
   122c8:	lsl	r3, r3, #4
   122cc:	ldr	r2, [fp, #-8]
   122d0:	add	r3, r2, r3
   122d4:	ldr	r1, [fp, #-12]
   122d8:	mov	r0, r3
   122dc:	bl	11b4c <__assert_fail@plt+0x1034>
   122e0:	ldr	r0, [fp, #-8]
   122e4:	bl	12248 <__assert_fail@plt+0x1730>
   122e8:	ldr	r3, [fp, #-8]
   122ec:	add	r3, r3, #4096	; 0x1000
   122f0:	ldr	r3, [r3, #3956]	; 0xf74
   122f4:	add	r3, r3, #1
   122f8:	ldr	r2, [fp, #-8]
   122fc:	add	r2, r2, #4096	; 0x1000
   12300:	str	r3, [r2, #3956]	; 0xf74
   12304:	nop			; (mov r0, r0)
   12308:	sub	sp, fp, #4
   1230c:	pop	{fp, pc}
   12310:	push	{fp, lr}
   12314:	add	fp, sp, #4
   12318:	sub	sp, sp, #8
   1231c:	str	r0, [fp, #-8]
   12320:	str	r1, [fp, #-12]
   12324:	ldr	r3, [fp, #-12]
   12328:	ldr	r3, [r3, #8]
   1232c:	mov	r0, r3
   12330:	bl	12110 <__assert_fail@plt+0x15f8>
   12334:	mov	r3, r0
   12338:	lsl	r3, r3, #4
   1233c:	ldr	r2, [fp, #-8]
   12340:	add	r3, r2, r3
   12344:	ldr	r1, [fp, #-12]
   12348:	mov	r0, r3
   1234c:	bl	11c34 <__assert_fail@plt+0x111c>
   12350:	ldr	r0, [fp, #-8]
   12354:	bl	12248 <__assert_fail@plt+0x1730>
   12358:	ldr	r3, [fp, #-8]
   1235c:	add	r3, r3, #4096	; 0x1000
   12360:	ldr	r3, [r3, #3956]	; 0xf74
   12364:	sub	r3, r3, #1
   12368:	ldr	r2, [fp, #-8]
   1236c:	add	r2, r2, #4096	; 0x1000
   12370:	str	r3, [r2, #3956]	; 0xf74
   12374:	nop			; (mov r0, r0)
   12378:	sub	sp, fp, #4
   1237c:	pop	{fp, pc}
   12380:	push	{fp, lr}
   12384:	add	fp, sp, #4
   12388:	sub	sp, sp, #24
   1238c:	str	r0, [fp, #-24]	; 0xffffffe8
   12390:	mov	r3, #0
   12394:	str	r3, [fp, #-16]
   12398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1239c:	add	r3, r3, #4096	; 0x1000
   123a0:	ldr	r3, [r3, #3952]	; 0xf70
   123a4:	cmp	r3, #0
   123a8:	bne	12468 <__assert_fail@plt+0x1950>
   123ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123b0:	add	r3, r3, #4096	; 0x1000
   123b4:	ldr	r3, [r3, #3956]	; 0xf74
   123b8:	cmp	r3, #0
   123bc:	beq	12468 <__assert_fail@plt+0x1950>
   123c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123c4:	add	r3, r3, #4096	; 0x1000
   123c8:	ldr	r3, [r3, #3956]	; 0xf74
   123cc:	mov	r1, #4
   123d0:	mov	r0, r3
   123d4:	bl	12504 <__assert_fail@plt+0x19ec>
   123d8:	mov	r2, r0
   123dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123e0:	add	r3, r3, #4096	; 0x1000
   123e4:	str	r2, [r3, #3952]	; 0xf70
   123e8:	mov	r3, #0
   123ec:	str	r3, [fp, #-12]
   123f0:	b	12454 <__assert_fail@plt+0x193c>
   123f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123f8:	ldr	r2, [fp, #-12]
   123fc:	ldr	r3, [r3, r2, lsl #4]
   12400:	str	r3, [fp, #-8]
   12404:	b	1243c <__assert_fail@plt+0x1924>
   12408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1240c:	add	r3, r3, #4096	; 0x1000
   12410:	ldr	r2, [r3, #3952]	; 0xf70
   12414:	ldr	r3, [fp, #-16]
   12418:	add	r1, r3, #1
   1241c:	str	r1, [fp, #-16]
   12420:	lsl	r3, r3, #2
   12424:	add	r3, r2, r3
   12428:	ldr	r2, [fp, #-8]
   1242c:	str	r2, [r3]
   12430:	ldr	r3, [fp, #-8]
   12434:	ldr	r3, [r3, #4]
   12438:	str	r3, [fp, #-8]
   1243c:	ldr	r3, [fp, #-8]
   12440:	cmp	r3, #0
   12444:	bne	12408 <__assert_fail@plt+0x18f0>
   12448:	ldr	r3, [fp, #-12]
   1244c:	add	r3, r3, #1
   12450:	str	r3, [fp, #-12]
   12454:	ldr	r3, [fp, #-12]
   12458:	ldr	r2, [pc, #20]	; 12474 <__assert_fail@plt+0x195c>
   1245c:	cmp	r3, r2
   12460:	ble	123f4 <__assert_fail@plt+0x18dc>
   12464:	b	1246c <__assert_fail@plt+0x1954>
   12468:	nop			; (mov r0, r0)
   1246c:	sub	sp, fp, #4
   12470:	pop	{fp, pc}
   12474:	strdeq	r0, [r0], -r6
   12478:	push	{fp, lr}
   1247c:	add	fp, sp, #4
   12480:	sub	sp, sp, #16
   12484:	str	r0, [fp, #-16]
   12488:	str	r1, [fp, #-20]	; 0xffffffec
   1248c:	mov	r3, #0
   12490:	strh	r3, [fp, #-6]
   12494:	b	124c8 <__assert_fail@plt+0x19b0>
   12498:	ldrsh	r3, [fp, #-6]
   1249c:	lsl	r3, r3, #4
   124a0:	ldr	r2, [fp, #-16]
   124a4:	add	r3, r2, r3
   124a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   124ac:	mov	r0, r3
   124b0:	bl	11db0 <__assert_fail@plt+0x1298>
   124b4:	ldrsh	r3, [fp, #-6]
   124b8:	uxth	r3, r3
   124bc:	add	r3, r3, #1
   124c0:	uxth	r3, r3
   124c4:	strh	r3, [fp, #-6]
   124c8:	ldrsh	r3, [fp, #-6]
   124cc:	ldr	r2, [pc, #44]	; 12500 <__assert_fail@plt+0x19e8>
   124d0:	cmp	r3, r2
   124d4:	ble	12498 <__assert_fail@plt+0x1980>
   124d8:	ldr	r0, [fp, #-16]
   124dc:	bl	12248 <__assert_fail@plt+0x1730>
   124e0:	ldr	r3, [fp, #-16]
   124e4:	add	r3, r3, #4096	; 0x1000
   124e8:	mov	r2, r3
   124ec:	mov	r3, #0
   124f0:	str	r3, [r2, #3956]	; 0xf74
   124f4:	nop			; (mov r0, r0)
   124f8:	sub	sp, fp, #4
   124fc:	pop	{fp, pc}
   12500:	strdeq	r0, [r0], -r6
   12504:	push	{fp, lr}
   12508:	add	fp, sp, #4
   1250c:	sub	sp, sp, #16
   12510:	str	r0, [fp, #-16]
   12514:	str	r1, [fp, #-20]	; 0xffffffec
   12518:	ldr	r1, [fp, #-20]	; 0xffffffec
   1251c:	ldr	r0, [fp, #-16]
   12520:	bl	10974 <calloc@plt>
   12524:	mov	r3, r0
   12528:	str	r3, [fp, #-8]
   1252c:	ldr	r3, [fp, #-8]
   12530:	cmp	r3, #0
   12534:	bne	12548 <__assert_fail@plt+0x1a30>
   12538:	ldr	r3, [pc, #24]	; 12558 <__assert_fail@plt+0x1a40>
   1253c:	add	r3, pc, r3
   12540:	mov	r0, r3
   12544:	bl	13058 <error@@Base>
   12548:	ldr	r3, [fp, #-8]
   1254c:	mov	r0, r3
   12550:	sub	sp, fp, #4
   12554:	pop	{fp, pc}
   12558:	andeq	r3, r0, ip, ror r5
   1255c:	push	{fp}		; (str fp, [sp, #-4]!)
   12560:	add	fp, sp, #0
   12564:	sub	sp, sp, #20
   12568:	str	r0, [fp, #-16]
   1256c:	str	r1, [fp, #-20]	; 0xffffffec
   12570:	mov	r3, #0
   12574:	str	r3, [fp, #-8]
   12578:	b	12588 <__assert_fail@plt+0x1a70>
   1257c:	ldr	r3, [fp, #-8]
   12580:	add	r3, r3, #1
   12584:	str	r3, [fp, #-8]
   12588:	ldr	r3, [fp, #-8]
   1258c:	ldr	r2, [fp, #-16]
   12590:	add	r3, r2, r3
   12594:	ldrb	r3, [r3]
   12598:	cmp	r3, #0
   1259c:	beq	125c8 <__assert_fail@plt+0x1ab0>
   125a0:	ldr	r3, [fp, #-8]
   125a4:	ldr	r2, [fp, #-16]
   125a8:	add	r3, r2, r3
   125ac:	ldrb	r2, [r3]
   125b0:	ldr	r3, [fp, #-8]
   125b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   125b8:	add	r3, r1, r3
   125bc:	ldrb	r3, [r3]
   125c0:	cmp	r2, r3
   125c4:	beq	1257c <__assert_fail@plt+0x1a64>
   125c8:	ldr	r3, [fp, #-8]
   125cc:	ldr	r2, [fp, #-16]
   125d0:	add	r3, r2, r3
   125d4:	ldrb	r3, [r3]
   125d8:	cmp	r3, #0
   125dc:	bne	125f8 <__assert_fail@plt+0x1ae0>
   125e0:	ldr	r3, [fp, #-8]
   125e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   125e8:	add	r3, r2, r3
   125ec:	ldrb	r3, [r3]
   125f0:	cmp	r3, #0
   125f4:	beq	12630 <__assert_fail@plt+0x1b18>
   125f8:	ldr	r3, [fp, #-8]
   125fc:	ldr	r2, [fp, #-16]
   12600:	add	r3, r2, r3
   12604:	ldrb	r2, [r3]
   12608:	ldr	r3, [fp, #-8]
   1260c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12610:	add	r3, r1, r3
   12614:	ldrb	r3, [r3]
   12618:	cmp	r2, r3
   1261c:	bcs	12628 <__assert_fail@plt+0x1b10>
   12620:	mvn	r3, #0
   12624:	b	12634 <__assert_fail@plt+0x1b1c>
   12628:	mov	r3, #1
   1262c:	b	12634 <__assert_fail@plt+0x1b1c>
   12630:	mov	r3, #0
   12634:	mov	r0, r3
   12638:	add	sp, fp, #0
   1263c:	pop	{fp}		; (ldr fp, [sp], #4)
   12640:	bx	lr
   12644:	push	{fp, lr}
   12648:	add	fp, sp, #4
   1264c:	sub	sp, sp, #16
   12650:	str	r0, [fp, #-16]
   12654:	str	r1, [fp, #-20]	; 0xffffffec
   12658:	ldr	r3, [pc, #164]	; 12704 <__assert_fail@plt+0x1bec>
   1265c:	add	r3, pc, r3
   12660:	ldr	r2, [fp, #-16]
   12664:	cmp	r2, #0
   12668:	bne	1269c <__assert_fail@plt+0x1b84>
   1266c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12670:	ldrb	r2, [r2]
   12674:	cmp	r2, #114	; 0x72
   12678:	bne	1268c <__assert_fail@plt+0x1b74>
   1267c:	ldr	r2, [pc, #132]	; 12708 <__assert_fail@plt+0x1bf0>
   12680:	ldr	r3, [r3, r2]
   12684:	ldr	r3, [r3]
   12688:	b	126f8 <__assert_fail@plt+0x1be0>
   1268c:	ldr	r2, [pc, #120]	; 1270c <__assert_fail@plt+0x1bf4>
   12690:	ldr	r3, [r3, r2]
   12694:	ldr	r3, [r3]
   12698:	b	126f8 <__assert_fail@plt+0x1be0>
   1269c:	ldr	r1, [fp, #-20]	; 0xffffffec
   126a0:	ldr	r0, [fp, #-16]
   126a4:	bl	1098c <fopen@plt>
   126a8:	str	r0, [fp, #-8]
   126ac:	ldr	r3, [fp, #-8]
   126b0:	cmp	r3, #0
   126b4:	beq	126c0 <__assert_fail@plt+0x1ba8>
   126b8:	ldr	r3, [fp, #-8]
   126bc:	b	126f8 <__assert_fail@plt+0x1be0>
   126c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   126c4:	ldrb	r3, [r3]
   126c8:	cmp	r3, #119	; 0x77
   126cc:	bne	126e4 <__assert_fail@plt+0x1bcc>
   126d0:	ldr	r1, [fp, #-16]
   126d4:	ldr	r3, [pc, #52]	; 12710 <__assert_fail@plt+0x1bf8>
   126d8:	add	r3, pc, r3
   126dc:	mov	r0, r3
   126e0:	bl	130c0 <error@@Base+0x68>
   126e4:	ldr	r1, [fp, #-16]
   126e8:	ldr	r3, [pc, #36]	; 12714 <__assert_fail@plt+0x1bfc>
   126ec:	add	r3, pc, r3
   126f0:	mov	r0, r3
   126f4:	bl	130c0 <error@@Base+0x68>
   126f8:	mov	r0, r3
   126fc:	sub	sp, fp, #4
   12700:	pop	{fp, pc}
   12704:	muleq	r1, ip, r9
   12708:	andeq	r0, r0, r4, ror #1
   1270c:	strdeq	r0, [r0], -r4
   12710:	strdeq	r3, [r0], -ip
   12714:	andeq	r3, r0, r0, lsl #8
   12718:	push	{fp, lr}
   1271c:	add	fp, sp, #4
   12720:	sub	sp, sp, #8
   12724:	str	r0, [fp, #-8]
   12728:	ldr	r3, [pc, #68]	; 12774 <__assert_fail@plt+0x1c5c>
   1272c:	add	r3, pc, r3
   12730:	ldr	r2, [pc, #64]	; 12778 <__assert_fail@plt+0x1c60>
   12734:	ldr	r2, [r3, r2]
   12738:	ldr	r2, [r2]
   1273c:	ldr	r1, [fp, #-8]
   12740:	cmp	r1, r2
   12744:	beq	12768 <__assert_fail@plt+0x1c50>
   12748:	ldr	r2, [pc, #44]	; 1277c <__assert_fail@plt+0x1c64>
   1274c:	ldr	r3, [r3, r2]
   12750:	ldr	r3, [r3]
   12754:	ldr	r2, [fp, #-8]
   12758:	cmp	r2, r3
   1275c:	beq	12768 <__assert_fail@plt+0x1c50>
   12760:	ldr	r0, [fp, #-8]
   12764:	bl	10aa0 <fclose@plt>
   12768:	nop			; (mov r0, r0)
   1276c:	sub	sp, fp, #4
   12770:	pop	{fp, pc}
   12774:	andeq	r7, r1, ip, asr #17
   12778:	andeq	r0, r0, r4, ror #1
   1277c:	strdeq	r0, [r0], -r4
   12780:	push	{fp, lr}
   12784:	add	fp, sp, #4
   12788:	sub	sp, sp, #96	; 0x60
   1278c:	str	r0, [fp, #-96]	; 0xffffffa0
   12790:	sub	r3, fp, #92	; 0x5c
   12794:	mov	r1, r3
   12798:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1279c:	bl	15740 <error@@Base+0x26e8>
   127a0:	mov	r3, r0
   127a4:	cmp	r3, #0
   127a8:	moveq	r3, #1
   127ac:	movne	r3, #0
   127b0:	uxtb	r3, r3
   127b4:	mov	r0, r3
   127b8:	sub	sp, fp, #4
   127bc:	pop	{fp, pc}
   127c0:	push	{r4, fp, lr}
   127c4:	add	fp, sp, #8
   127c8:	sub	sp, sp, #124	; 0x7c
   127cc:	mov	r3, r0
   127d0:	strh	r3, [fp, #-120]	; 0xffffff88
   127d4:	ldr	r2, [pc, #80]	; 1282c <__assert_fail@plt+0x1d14>
   127d8:	add	r2, pc, r2
   127dc:	ldr	r3, [pc, #76]	; 12830 <__assert_fail@plt+0x1d18>
   127e0:	ldr	r3, [r2, r3]
   127e4:	ldr	r4, [r3]
   127e8:	bl	10a58 <getpid@plt>
   127ec:	mov	r2, r0
   127f0:	ldrsh	r3, [fp, #-120]	; 0xffffff88
   127f4:	sub	r0, fp, #112	; 0x70
   127f8:	str	r3, [sp]
   127fc:	mov	r3, r2
   12800:	mov	r2, r4
   12804:	ldr	r1, [pc, #40]	; 12834 <__assert_fail@plt+0x1d1c>
   12808:	add	r1, pc, r1
   1280c:	bl	10ac4 <sprintf@plt>
   12810:	sub	r3, fp, #112	; 0x70
   12814:	mov	r0, r3
   12818:	bl	109c8 <strdup@plt>
   1281c:	mov	r3, r0
   12820:	mov	r0, r3
   12824:	sub	sp, fp, #8
   12828:	pop	{r4, fp, pc}
   1282c:	andeq	r7, r1, r0, lsr #16
   12830:	ldrdeq	r0, [r0], -r4
   12834:	strdeq	r3, [r0], -r8
   12838:	push	{fp, lr}
   1283c:	add	fp, sp, #4
   12840:	sub	sp, sp, #8
   12844:	ldr	r3, [pc, #80]	; 1289c <__assert_fail@plt+0x1d84>
   12848:	add	r3, pc, r3
   1284c:	ldrsh	r3, [r3]
   12850:	uxth	r3, r3
   12854:	add	r3, r3, #1
   12858:	uxth	r3, r3
   1285c:	sxth	r2, r3
   12860:	ldr	r3, [pc, #56]	; 128a0 <__assert_fail@plt+0x1d88>
   12864:	add	r3, pc, r3
   12868:	strh	r2, [r3]
   1286c:	ldr	r3, [pc, #48]	; 128a4 <__assert_fail@plt+0x1d8c>
   12870:	add	r3, pc, r3
   12874:	ldrsh	r3, [r3]
   12878:	mov	r0, r3
   1287c:	bl	127c0 <__assert_fail@plt+0x1ca8>
   12880:	str	r0, [fp, #-8]
   12884:	ldr	r0, [fp, #-8]
   12888:	bl	109e0 <unlink@plt>
   1288c:	ldr	r3, [fp, #-8]
   12890:	mov	r0, r3
   12894:	sub	sp, fp, #4
   12898:	pop	{fp, pc}
   1289c:	andeq	r9, r1, ip, asr #20
   128a0:	andeq	r9, r1, r0, lsr sl
   128a4:	andeq	r9, r1, r4, lsr #20
   128a8:	push	{fp, lr}
   128ac:	add	fp, sp, #4
   128b0:	sub	sp, sp, #8
   128b4:	mov	r3, #1
   128b8:	strh	r3, [fp, #-6]
   128bc:	b	128f4 <__assert_fail@plt+0x1ddc>
   128c0:	ldrsh	r3, [fp, #-6]
   128c4:	mov	r0, r3
   128c8:	bl	127c0 <__assert_fail@plt+0x1ca8>
   128cc:	str	r0, [fp, #-12]
   128d0:	ldr	r0, [fp, #-12]
   128d4:	bl	109e0 <unlink@plt>
   128d8:	ldr	r0, [fp, #-12]
   128dc:	bl	10998 <free@plt>
   128e0:	ldrsh	r3, [fp, #-6]
   128e4:	uxth	r3, r3
   128e8:	add	r3, r3, #1
   128ec:	uxth	r3, r3
   128f0:	strh	r3, [fp, #-6]
   128f4:	ldr	r3, [pc, #28]	; 12918 <__assert_fail@plt+0x1e00>
   128f8:	add	r3, pc, r3
   128fc:	ldrsh	r3, [r3]
   12900:	ldrsh	r2, [fp, #-6]
   12904:	cmp	r2, r3
   12908:	ble	128c0 <__assert_fail@plt+0x1da8>
   1290c:	nop			; (mov r0, r0)
   12910:	sub	sp, fp, #4
   12914:	pop	{fp, pc}
   12918:	muleq	r1, ip, r9
   1291c:	push	{fp, lr}
   12920:	add	fp, sp, #4
   12924:	sub	sp, sp, #16
   12928:	str	r0, [fp, #-16]
   1292c:	mov	r3, #47	; 0x2f
   12930:	strb	r3, [fp, #-7]
   12934:	ldr	r0, [fp, #-16]
   12938:	bl	10a7c <strlen@plt>
   1293c:	mov	r3, r0
   12940:	uxth	r3, r3
   12944:	sub	r3, r3, #1
   12948:	uxth	r3, r3
   1294c:	strh	r3, [fp, #-6]
   12950:	b	12968 <__assert_fail@plt+0x1e50>
   12954:	ldrsh	r3, [fp, #-6]
   12958:	uxth	r3, r3
   1295c:	sub	r3, r3, #1
   12960:	uxth	r3, r3
   12964:	strh	r3, [fp, #-6]
   12968:	ldrsh	r3, [fp, #-6]
   1296c:	cmp	r3, #0
   12970:	blt	12990 <__assert_fail@plt+0x1e78>
   12974:	ldrsh	r3, [fp, #-6]
   12978:	ldr	r2, [fp, #-16]
   1297c:	add	r3, r2, r3
   12980:	ldrb	r3, [r3]
   12984:	ldrb	r2, [fp, #-7]
   12988:	cmp	r2, r3
   1298c:	bne	12954 <__assert_fail@plt+0x1e3c>
   12990:	ldrsh	r3, [fp, #-6]
   12994:	add	r3, r3, #1
   12998:	ldr	r2, [fp, #-16]
   1299c:	add	r3, r2, r3
   129a0:	mov	r0, r3
   129a4:	sub	sp, fp, #4
   129a8:	pop	{fp, pc}
   129ac:	push	{fp, lr}
   129b0:	add	fp, sp, #4
   129b4:	sub	sp, sp, #8
   129b8:	str	r0, [fp, #-8]
   129bc:	ldr	r3, [pc, #56]	; 129fc <__assert_fail@plt+0x1ee4>
   129c0:	add	r3, pc, r3
   129c4:	ldrb	r3, [r3]
   129c8:	cmp	r3, #0
   129cc:	bne	129f0 <__assert_fail@plt+0x1ed8>
   129d0:	ldr	r3, [pc, #40]	; 12a00 <__assert_fail@plt+0x1ee8>
   129d4:	add	r3, pc, r3
   129d8:	mov	r2, #1
   129dc:	strb	r2, [r3]
   129e0:	ldr	r3, [pc, #28]	; 12a04 <__assert_fail@plt+0x1eec>
   129e4:	add	r3, pc, r3
   129e8:	mov	r0, r3
   129ec:	bl	13058 <error@@Base>
   129f0:	nop			; (mov r0, r0)
   129f4:	sub	sp, fp, #4
   129f8:	pop	{fp, pc}
   129fc:	ldrdeq	r9, [r1], -r6
   12a00:	andeq	r9, r1, r2, asr #17
   12a04:	andeq	r3, r0, ip, lsr #2
   12a08:	push	{fp, lr}
   12a0c:	add	fp, sp, #4
   12a10:	ldr	r3, [pc, #40]	; 12a40 <__assert_fail@plt+0x1f28>
   12a14:	add	r3, pc, r3
   12a18:	mov	r1, r3
   12a1c:	mov	r0, #2
   12a20:	bl	10a40 <__sysv_signal@plt>
   12a24:	ldr	r3, [pc, #24]	; 12a44 <__assert_fail@plt+0x1f2c>
   12a28:	add	r3, pc, r3
   12a2c:	mov	r1, r3
   12a30:	mov	r0, #15
   12a34:	bl	10a40 <__sysv_signal@plt>
   12a38:	nop			; (mov r0, r0)
   12a3c:	pop	{fp, pc}
   12a40:			; <UNDEFINED> instruction: 0xffffff90
   12a44:			; <UNDEFINED> instruction: 0xffffff7c
   12a48:	push	{fp, lr}
   12a4c:	add	fp, sp, #4
   12a50:	sub	sp, sp, #8
   12a54:	str	r0, [fp, #-8]
   12a58:	ldr	r3, [pc, #84]	; 12ab4 <__assert_fail@plt+0x1f9c>
   12a5c:	add	r3, pc, r3
   12a60:	ldr	r2, [pc, #80]	; 12ab8 <__assert_fail@plt+0x1fa0>
   12a64:	ldr	r2, [r3, r2]
   12a68:	ldr	r2, [r2]
   12a6c:	cmp	r2, #0
   12a70:	beq	12a88 <__assert_fail@plt+0x1f70>
   12a74:	ldr	r2, [pc, #60]	; 12ab8 <__assert_fail@plt+0x1fa0>
   12a78:	ldr	r3, [r3, r2]
   12a7c:	ldr	r3, [r3]
   12a80:	blx	r3
   12a84:	b	12ab0 <__assert_fail@plt+0x1f98>
   12a88:	ldr	r2, [pc, #44]	; 12abc <__assert_fail@plt+0x1fa4>
   12a8c:	ldr	r2, [r3, r2]
   12a90:	ldr	r0, [r2]
   12a94:	ldr	r2, [pc, #36]	; 12ac0 <__assert_fail@plt+0x1fa8>
   12a98:	ldr	r3, [r3, r2]
   12a9c:	ldr	r2, [r3]
   12aa0:	ldr	r3, [fp, #-8]
   12aa4:	ldr	r1, [pc, #24]	; 12ac4 <__assert_fail@plt+0x1fac>
   12aa8:	add	r1, pc, r1
   12aac:	bl	10a88 <fprintf@plt>
   12ab0:	bl	13048 <__assert_fail@plt+0x2530>
   12ab4:	muleq	r1, ip, r5
   12ab8:	strheq	r0, [r0], -r4
   12abc:	andeq	r0, r0, r0, asr #1
   12ac0:	ldrdeq	r0, [r0], -r4
   12ac4:	andeq	r3, r0, r8, ror r0
   12ac8:	push	{fp, lr}
   12acc:	add	fp, sp, #4
   12ad0:	sub	sp, sp, #24
   12ad4:	str	r0, [fp, #-16]
   12ad8:	str	r1, [fp, #-20]	; 0xffffffec
   12adc:	str	r2, [fp, #-24]	; 0xffffffe8
   12ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ae4:	cmp	r3, #0
   12ae8:	beq	12d28 <__assert_fail@plt+0x2210>
   12aec:	mov	r3, #0
   12af0:	strh	r3, [fp, #-6]
   12af4:	b	12b0c <__assert_fail@plt+0x1ff4>
   12af8:	ldrsh	r3, [fp, #-6]
   12afc:	uxth	r3, r3
   12b00:	add	r3, r3, #1
   12b04:	uxth	r3, r3
   12b08:	strh	r3, [fp, #-6]
   12b0c:	ldrsh	r2, [fp, #-6]
   12b10:	mov	r3, r2
   12b14:	lsl	r3, r3, #1
   12b18:	add	r3, r3, r2
   12b1c:	lsl	r3, r3, #2
   12b20:	mov	r2, r3
   12b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b28:	add	r3, r3, r2
   12b2c:	ldrb	r3, [r3]
   12b30:	cmp	r3, #0
   12b34:	beq	12b70 <__assert_fail@plt+0x2058>
   12b38:	ldr	r3, [fp, #-16]
   12b3c:	add	r3, r3, #1
   12b40:	ldrb	r1, [r3]
   12b44:	ldrsh	r2, [fp, #-6]
   12b48:	mov	r3, r2
   12b4c:	lsl	r3, r3, #1
   12b50:	add	r3, r3, r2
   12b54:	lsl	r3, r3, #2
   12b58:	mov	r2, r3
   12b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b60:	add	r3, r3, r2
   12b64:	ldrb	r3, [r3]
   12b68:	cmp	r1, r3
   12b6c:	bne	12af8 <__assert_fail@plt+0x1fe0>
   12b70:	ldrsh	r2, [fp, #-6]
   12b74:	mov	r3, r2
   12b78:	lsl	r3, r3, #1
   12b7c:	add	r3, r3, r2
   12b80:	lsl	r3, r3, #2
   12b84:	mov	r2, r3
   12b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b8c:	add	r3, r3, r2
   12b90:	ldrb	r3, [r3]
   12b94:	cmp	r3, #0
   12b98:	beq	12d30 <__assert_fail@plt+0x2218>
   12b9c:	ldrsh	r2, [fp, #-6]
   12ba0:	mov	r3, r2
   12ba4:	lsl	r3, r3, #1
   12ba8:	add	r3, r3, r2
   12bac:	lsl	r3, r3, #2
   12bb0:	mov	r2, r3
   12bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bb8:	add	r3, r3, r2
   12bbc:	ldr	r3, [r3, #4]
   12bc0:	cmp	r3, #0
   12bc4:	beq	12c84 <__assert_fail@plt+0x216c>
   12bc8:	ldr	r3, [fp, #-16]
   12bcc:	add	r3, r3, #2
   12bd0:	ldrb	r3, [r3]
   12bd4:	cmp	r3, #0
   12bd8:	bne	12be8 <__assert_fail@plt+0x20d0>
   12bdc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12be0:	cmp	r3, #0
   12be4:	beq	12c84 <__assert_fail@plt+0x216c>
   12be8:	ldrsh	r2, [fp, #-6]
   12bec:	mov	r3, r2
   12bf0:	lsl	r3, r3, #1
   12bf4:	add	r3, r3, r2
   12bf8:	lsl	r3, r3, #2
   12bfc:	mov	r2, r3
   12c00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c04:	add	r3, r3, r2
   12c08:	ldr	r3, [r3, #4]
   12c0c:	ldr	r3, [r3]
   12c10:	cmp	r3, #0
   12c14:	bne	12d48 <__assert_fail@plt+0x2230>
   12c18:	ldrsh	r2, [fp, #-6]
   12c1c:	mov	r3, r2
   12c20:	lsl	r3, r3, #1
   12c24:	add	r3, r3, r2
   12c28:	lsl	r3, r3, #2
   12c2c:	mov	r2, r3
   12c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c34:	add	r3, r3, r2
   12c38:	ldr	r2, [r3, #4]
   12c3c:	ldr	r3, [fp, #-16]
   12c40:	add	r3, r3, #2
   12c44:	ldrb	r3, [r3]
   12c48:	cmp	r3, #0
   12c4c:	beq	12c5c <__assert_fail@plt+0x2144>
   12c50:	ldr	r3, [fp, #-16]
   12c54:	add	r3, r3, #2
   12c58:	b	12c60 <__assert_fail@plt+0x2148>
   12c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c60:	str	r3, [r2]
   12c64:	ldr	r3, [fp, #-16]
   12c68:	add	r3, r3, #2
   12c6c:	ldrb	r3, [r3]
   12c70:	cmp	r3, #0
   12c74:	moveq	r3, #1
   12c78:	movne	r3, #0
   12c7c:	uxtb	r3, r3
   12c80:	b	12d68 <__assert_fail@plt+0x2250>
   12c84:	ldrsh	r2, [fp, #-6]
   12c88:	mov	r3, r2
   12c8c:	lsl	r3, r3, #1
   12c90:	add	r3, r3, r2
   12c94:	lsl	r3, r3, #2
   12c98:	mov	r2, r3
   12c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ca0:	add	r3, r3, r2
   12ca4:	ldr	r3, [r3, #8]
   12ca8:	cmp	r3, #0
   12cac:	beq	12d34 <__assert_fail@plt+0x221c>
   12cb0:	ldr	r3, [fp, #-16]
   12cb4:	add	r3, r3, #2
   12cb8:	ldrb	r3, [r3]
   12cbc:	cmp	r3, #0
   12cc0:	bne	12d34 <__assert_fail@plt+0x221c>
   12cc4:	ldrsh	r2, [fp, #-6]
   12cc8:	mov	r3, r2
   12ccc:	lsl	r3, r3, #1
   12cd0:	add	r3, r3, r2
   12cd4:	lsl	r3, r3, #2
   12cd8:	mov	r2, r3
   12cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ce0:	add	r3, r3, r2
   12ce4:	ldr	r3, [r3, #8]
   12ce8:	ldrb	r3, [r3]
   12cec:	cmp	r3, #0
   12cf0:	bne	12d50 <__assert_fail@plt+0x2238>
   12cf4:	ldrsh	r2, [fp, #-6]
   12cf8:	mov	r3, r2
   12cfc:	lsl	r3, r3, #1
   12d00:	add	r3, r3, r2
   12d04:	lsl	r3, r3, #2
   12d08:	mov	r2, r3
   12d0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12d10:	add	r3, r3, r2
   12d14:	ldr	r3, [r3, #8]
   12d18:	mov	r2, #1
   12d1c:	strb	r2, [r3]
   12d20:	mov	r3, #0
   12d24:	b	12d68 <__assert_fail@plt+0x2250>
   12d28:	nop			; (mov r0, r0)
   12d2c:	b	12d34 <__assert_fail@plt+0x221c>
   12d30:	nop			; (mov r0, r0)
   12d34:	ldr	r1, [fp, #-16]
   12d38:	ldr	r3, [pc, #52]	; 12d74 <__assert_fail@plt+0x225c>
   12d3c:	add	r3, pc, r3
   12d40:	mov	r0, r3
   12d44:	bl	130c0 <error@@Base+0x68>
   12d48:	nop			; (mov r0, r0)
   12d4c:	b	12d54 <__assert_fail@plt+0x223c>
   12d50:	nop			; (mov r0, r0)
   12d54:	ldr	r1, [fp, #-16]
   12d58:	ldr	r3, [pc, #24]	; 12d78 <__assert_fail@plt+0x2260>
   12d5c:	add	r3, pc, r3
   12d60:	mov	r0, r3
   12d64:	bl	130c0 <error@@Base+0x68>
   12d68:	mov	r0, r3
   12d6c:	sub	sp, fp, #4
   12d70:	pop	{fp, pc}
   12d74:	strdeq	r2, [r0], -r4
   12d78:	andeq	r2, r0, r4, ror #27
   12d7c:	push	{r4, fp, lr}
   12d80:	add	fp, sp, #8
   12d84:	sub	sp, sp, #28
   12d88:	str	r0, [fp, #-24]	; 0xffffffe8
   12d8c:	str	r1, [fp, #-28]	; 0xffffffe4
   12d90:	str	r2, [fp, #-32]	; 0xffffffe0
   12d94:	str	r3, [fp, #-36]	; 0xffffffdc
   12d98:	ldr	r2, [pc, #476]	; 12f7c <__assert_fail@plt+0x2464>
   12d9c:	add	r2, pc, r2
   12da0:	mov	r3, #0
   12da4:	strh	r3, [fp, #-16]
   12da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12dac:	ldr	r3, [r3]
   12db0:	cmp	r3, #1
   12db4:	bne	12dd4 <__assert_fail@plt+0x22bc>
   12db8:	ldr	r3, [pc, #448]	; 12f80 <__assert_fail@plt+0x2468>
   12dbc:	ldr	r3, [r2, r3]
   12dc0:	ldrb	r3, [r3]
   12dc4:	cmp	r3, #0
   12dc8:	beq	12dd4 <__assert_fail@plt+0x22bc>
   12dcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dd0:	bl	12a48 <__assert_fail@plt+0x1f30>
   12dd4:	mov	r3, #1
   12dd8:	strh	r3, [fp, #-14]
   12ddc:	b	12f50 <__assert_fail@plt+0x2438>
   12de0:	ldrsh	r3, [fp, #-14]
   12de4:	lsl	r3, r3, #2
   12de8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12dec:	add	r3, r2, r3
   12df0:	ldr	r3, [r3]
   12df4:	ldrb	r3, [r3]
   12df8:	cmp	r3, #45	; 0x2d
   12dfc:	bne	12f00 <__assert_fail@plt+0x23e8>
   12e00:	ldrsh	r3, [fp, #-14]
   12e04:	lsl	r3, r3, #2
   12e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e0c:	add	r3, r2, r3
   12e10:	ldr	r3, [r3]
   12e14:	add	r3, r3, #1
   12e18:	ldrb	r3, [r3]
   12e1c:	cmp	r3, #0
   12e20:	beq	12f00 <__assert_fail@plt+0x23e8>
   12e24:	ldrsh	r3, [fp, #-14]
   12e28:	lsl	r3, r3, #2
   12e2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e30:	add	r3, r2, r3
   12e34:	ldr	r4, [r3]
   12e38:	ldrsh	r3, [fp, #-14]
   12e3c:	lsl	r3, r3, #2
   12e40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e44:	add	r3, r2, r3
   12e48:	ldr	r3, [r3]
   12e4c:	mov	r0, r3
   12e50:	bl	10a7c <strlen@plt>
   12e54:	mov	r3, r0
   12e58:	mov	r2, r3
   12e5c:	mov	r1, r4
   12e60:	ldr	r3, [pc, #284]	; 12f84 <__assert_fail@plt+0x246c>
   12e64:	add	r3, pc, r3
   12e68:	mov	r0, r3
   12e6c:	bl	10af4 <strncmp@plt>
   12e70:	mov	r3, r0
   12e74:	cmp	r3, #0
   12e78:	bne	12e84 <__assert_fail@plt+0x236c>
   12e7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12e80:	bl	12a48 <__assert_fail@plt+0x1f30>
   12e84:	ldrsh	r3, [fp, #-14]
   12e88:	lsl	r3, r3, #2
   12e8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12e90:	add	r3, r2, r3
   12e94:	ldr	r0, [r3]
   12e98:	ldrsh	r3, [fp, #-14]
   12e9c:	add	r2, r3, #1
   12ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12ea4:	ldr	r3, [r3]
   12ea8:	cmp	r2, r3
   12eac:	bge	12ecc <__assert_fail@plt+0x23b4>
   12eb0:	ldrsh	r3, [fp, #-14]
   12eb4:	add	r3, r3, #1
   12eb8:	lsl	r3, r3, #2
   12ebc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12ec0:	add	r3, r2, r3
   12ec4:	ldr	r3, [r3]
   12ec8:	b	12ed0 <__assert_fail@plt+0x23b8>
   12ecc:	mov	r3, #0
   12ed0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12ed4:	mov	r1, r3
   12ed8:	bl	12ac8 <__assert_fail@plt+0x1fb0>
   12edc:	mov	r3, r0
   12ee0:	cmp	r3, #0
   12ee4:	beq	12f3c <__assert_fail@plt+0x2424>
   12ee8:	ldrsh	r3, [fp, #-14]
   12eec:	uxth	r3, r3
   12ef0:	add	r3, r3, #1
   12ef4:	uxth	r3, r3
   12ef8:	strh	r3, [fp, #-14]
   12efc:	b	12f3c <__assert_fail@plt+0x2424>
   12f00:	ldrsh	r2, [fp, #-16]
   12f04:	uxth	r3, r2
   12f08:	add	r3, r3, #1
   12f0c:	uxth	r3, r3
   12f10:	strh	r3, [fp, #-16]
   12f14:	mov	r3, r2
   12f18:	lsl	r3, r3, #2
   12f1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12f20:	add	r3, r2, r3
   12f24:	ldrsh	r2, [fp, #-14]
   12f28:	lsl	r2, r2, #2
   12f2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f30:	add	r2, r1, r2
   12f34:	ldr	r2, [r2]
   12f38:	str	r2, [r3]
   12f3c:	ldrsh	r3, [fp, #-14]
   12f40:	uxth	r3, r3
   12f44:	add	r3, r3, #1
   12f48:	uxth	r3, r3
   12f4c:	strh	r3, [fp, #-14]
   12f50:	ldrsh	r2, [fp, #-14]
   12f54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f58:	ldr	r3, [r3]
   12f5c:	cmp	r2, r3
   12f60:	blt	12de0 <__assert_fail@plt+0x22c8>
   12f64:	ldrsh	r2, [fp, #-16]
   12f68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f6c:	str	r2, [r3]
   12f70:	nop			; (mov r0, r0)
   12f74:	sub	sp, fp, #8
   12f78:	pop	{r4, fp, pc}
   12f7c:	andeq	r7, r1, ip, asr r2
   12f80:	andeq	r0, r0, r0, lsr #1
   12f84:	strdeq	r2, [r0], -r0
   12f88:	push	{r4, fp, lr}
   12f8c:	add	fp, sp, #8
   12f90:	sub	sp, sp, #20
   12f94:	str	r0, [fp, #-16]
   12f98:	str	r1, [fp, #-20]	; 0xffffffec
   12f9c:	str	r2, [fp, #-24]	; 0xffffffe8
   12fa0:	str	r3, [fp, #-28]	; 0xffffffe4
   12fa4:	ldr	r4, [pc, #68]	; 12ff0 <__assert_fail@plt+0x24d8>
   12fa8:	add	r4, pc, r4
   12fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   12fb0:	ldr	r3, [r3]
   12fb4:	mov	r0, r3
   12fb8:	bl	1291c <__assert_fail@plt+0x1e04>
   12fbc:	mov	r2, r0
   12fc0:	ldr	r3, [pc, #44]	; 12ff4 <__assert_fail@plt+0x24dc>
   12fc4:	ldr	r3, [r4, r3]
   12fc8:	str	r2, [r3]
   12fcc:	bl	12a08 <__assert_fail@plt+0x1ef0>
   12fd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12fd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12fd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12fdc:	ldr	r0, [fp, #-16]
   12fe0:	bl	12d7c <__assert_fail@plt+0x2264>
   12fe4:	nop			; (mov r0, r0)
   12fe8:	sub	sp, fp, #8
   12fec:	pop	{r4, fp, pc}
   12ff0:	andeq	r7, r1, r0, asr r0
   12ff4:	ldrdeq	r0, [r0], -r4
   12ff8:	push	{fp, lr}
   12ffc:	add	fp, sp, #4
   13000:	sub	sp, sp, #8
   13004:	str	r0, [fp, #-8]
   13008:	ldr	r3, [pc, #48]	; 13040 <__assert_fail@plt+0x2528>
   1300c:	add	r3, pc, r3
   13010:	ldr	r2, [pc, #44]	; 13044 <__assert_fail@plt+0x252c>
   13014:	ldr	r2, [r3, r2]
   13018:	ldr	r2, [r2]
   1301c:	cmp	r2, #0
   13020:	beq	13034 <__assert_fail@plt+0x251c>
   13024:	ldr	r2, [pc, #24]	; 13044 <__assert_fail@plt+0x252c>
   13028:	ldr	r3, [r3, r2]
   1302c:	ldr	r3, [r3]
   13030:	blx	r3
   13034:	bl	128a8 <__assert_fail@plt+0x1d90>
   13038:	ldr	r0, [fp, #-8]
   1303c:	bl	10a64 <exit@plt>
   13040:	andeq	r6, r1, ip, ror #31
   13044:	ldrdeq	r0, [r0], -ip
   13048:	push	{fp, lr}
   1304c:	add	fp, sp, #4
   13050:	mov	r0, #0
   13054:	bl	12ff8 <__assert_fail@plt+0x24e0>

00013058 <error@@Base>:
   13058:	push	{r4, fp, lr}
   1305c:	add	fp, sp, #8
   13060:	sub	sp, sp, #12
   13064:	str	r0, [fp, #-16]
   13068:	ldr	r4, [pc, #60]	; 130ac <error@@Base+0x54>
   1306c:	add	r4, pc, r4
   13070:	ldr	r3, [pc, #56]	; 130b0 <error@@Base+0x58>
   13074:	ldr	r3, [r4, r3]
   13078:	ldr	r0, [r3]
   1307c:	ldr	r3, [pc, #48]	; 130b4 <error@@Base+0x5c>
   13080:	ldr	r3, [r4, r3]
   13084:	ldr	r2, [r3]
   13088:	ldr	r3, [fp, #-16]
   1308c:	ldr	r1, [pc, #36]	; 130b8 <error@@Base+0x60>
   13090:	add	r1, pc, r1
   13094:	bl	10a88 <fprintf@plt>
   13098:	ldr	r3, [pc, #28]	; 130bc <error@@Base+0x64>
   1309c:	ldr	r3, [r4, r3]
   130a0:	ldr	r3, [r3]
   130a4:	mov	r0, r3
   130a8:	bl	12ff8 <__assert_fail@plt+0x24e0>
   130ac:	andeq	r6, r1, ip, lsl #31
   130b0:	andeq	r0, r0, r0, asr #1
   130b4:	ldrdeq	r0, [r0], -r4
   130b8:	andeq	r2, r0, ip, asr #21
   130bc:	strdeq	r0, [r0], -ip
   130c0:	push	{r4, fp, lr}
   130c4:	add	fp, sp, #8
   130c8:	sub	sp, sp, #20
   130cc:	str	r0, [fp, #-16]
   130d0:	str	r1, [fp, #-20]	; 0xffffffec
   130d4:	ldr	r4, [pc, #68]	; 13120 <error@@Base+0xc8>
   130d8:	add	r4, pc, r4
   130dc:	ldr	r3, [pc, #64]	; 13124 <error@@Base+0xcc>
   130e0:	ldr	r3, [r4, r3]
   130e4:	ldr	r0, [r3]
   130e8:	ldr	r3, [pc, #56]	; 13128 <error@@Base+0xd0>
   130ec:	ldr	r3, [r4, r3]
   130f0:	ldr	r2, [r3]
   130f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   130f8:	str	r3, [sp]
   130fc:	ldr	r3, [fp, #-16]
   13100:	ldr	r1, [pc, #36]	; 1312c <error@@Base+0xd4>
   13104:	add	r1, pc, r1
   13108:	bl	10a88 <fprintf@plt>
   1310c:	ldr	r3, [pc, #28]	; 13130 <error@@Base+0xd8>
   13110:	ldr	r3, [r4, r3]
   13114:	ldr	r3, [r3]
   13118:	mov	r0, r3
   1311c:	bl	12ff8 <__assert_fail@plt+0x24e0>
   13120:	andeq	r6, r1, r0, lsr #30
   13124:	andeq	r0, r0, r0, asr #1
   13128:	ldrdeq	r0, [r0], -r4
   1312c:	andeq	r2, r0, r0, ror #20
   13130:	strdeq	r0, [r0], -ip
   13134:	push	{fp, lr}
   13138:	add	fp, sp, #4
   1313c:	sub	sp, sp, #16
   13140:	str	r0, [fp, #-8]
   13144:	str	r1, [fp, #-12]
   13148:	ldr	r3, [pc, #60]	; 1318c <error@@Base+0x134>
   1314c:	add	r3, pc, r3
   13150:	ldr	r2, [pc, #56]	; 13190 <error@@Base+0x138>
   13154:	ldr	r2, [r3, r2]
   13158:	ldr	r0, [r2]
   1315c:	ldr	r2, [pc, #48]	; 13194 <error@@Base+0x13c>
   13160:	ldr	r3, [r3, r2]
   13164:	ldr	r2, [r3]
   13168:	ldr	r3, [fp, #-12]
   1316c:	str	r3, [sp]
   13170:	ldr	r3, [fp, #-8]
   13174:	ldr	r1, [pc, #28]	; 13198 <error@@Base+0x140>
   13178:	add	r1, pc, r1
   1317c:	bl	10a88 <fprintf@plt>
   13180:	nop			; (mov r0, r0)
   13184:	sub	sp, fp, #4
   13188:	pop	{fp, pc}
   1318c:	andeq	r6, r1, ip, lsr #29
   13190:	andeq	r0, r0, r0, asr #1
   13194:	ldrdeq	r0, [r0], -r4
   13198:	andeq	r2, r0, ip, ror #19
   1319c:	andeq	r0, r0, r0
   131a0:	push	{fp}		; (str fp, [sp, #-4]!)
   131a4:	add	fp, sp, #0
   131a8:	sub	sp, sp, #20
   131ac:	str	r0, [fp, #-8]
   131b0:	str	r1, [fp, #-12]
   131b4:	str	r2, [fp, #-16]
   131b8:	ldr	r3, [fp, #-8]
   131bc:	ldr	r2, [r3]
   131c0:	ldr	r3, [fp, #-12]
   131c4:	add	r2, r2, r3
   131c8:	ldr	r3, [fp, #-8]
   131cc:	str	r2, [r3]
   131d0:	ldr	r3, [fp, #-8]
   131d4:	ldr	r2, [r3, #4]
   131d8:	ldr	r3, [fp, #-16]
   131dc:	add	r2, r2, r3
   131e0:	ldr	r3, [fp, #-8]
   131e4:	str	r2, [r3, #4]
   131e8:	nop			; (mov r0, r0)
   131ec:	add	sp, fp, #0
   131f0:	pop	{fp}		; (ldr fp, [sp], #4)
   131f4:	bx	lr
   131f8:	push	{fp, lr}
   131fc:	add	fp, sp, #4
   13200:	sub	sp, sp, #24
   13204:	str	r0, [fp, #-16]
   13208:	str	r1, [fp, #-20]	; 0xffffffec
   1320c:	str	r2, [fp, #-24]	; 0xffffffe8
   13210:	str	r3, [fp, #-28]	; 0xffffffe4
   13214:	ldr	r1, [fp, #-20]	; 0xffffffec
   13218:	ldr	r0, [fp, #-16]
   1321c:	bl	121cc <__assert_fail@plt+0x16b4>
   13220:	str	r0, [fp, #-8]
   13224:	ldr	r3, [fp, #-8]
   13228:	cmp	r3, #0
   1322c:	bne	13264 <error@@Base+0x20c>
   13230:	mov	r1, #20
   13234:	mov	r0, #1
   13238:	bl	12504 <__assert_fail@plt+0x19ec>
   1323c:	str	r0, [fp, #-8]
   13240:	ldr	r0, [fp, #-20]	; 0xffffffec
   13244:	bl	109c8 <strdup@plt>
   13248:	mov	r3, r0
   1324c:	mov	r2, r3
   13250:	ldr	r3, [fp, #-8]
   13254:	str	r2, [r3, #8]
   13258:	ldr	r1, [fp, #-8]
   1325c:	ldr	r0, [fp, #-16]
   13260:	bl	122a0 <__assert_fail@plt+0x1788>
   13264:	ldr	r3, [fp, #-8]
   13268:	add	r3, r3, #12
   1326c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13274:	mov	r0, r3
   13278:	bl	131a0 <error@@Base+0x148>
   1327c:	nop			; (mov r0, r0)
   13280:	sub	sp, fp, #4
   13284:	pop	{fp, pc}
   13288:	push	{fp, lr}
   1328c:	add	fp, sp, #4
   13290:	sub	sp, sp, #8
   13294:	str	r0, [fp, #-8]
   13298:	ldr	r2, [fp, #-8]
   1329c:	mov	r1, #99	; 0x63
   132a0:	ldr	r3, [pc, #40]	; 132d0 <error@@Base+0x278>
   132a4:	add	r3, pc, r3
   132a8:	mov	r0, r3
   132ac:	bl	109b0 <fgets@plt>
   132b0:	mov	r3, r0
   132b4:	cmp	r3, #0
   132b8:	movne	r3, #1
   132bc:	moveq	r3, #0
   132c0:	uxtb	r3, r3
   132c4:	mov	r0, r3
   132c8:	sub	sp, fp, #4
   132cc:	pop	{fp, pc}
   132d0:	strdeq	r8, [r1], -r4
   132d4:	push	{fp, lr}
   132d8:	add	fp, sp, #4
   132dc:	sub	sp, sp, #8
   132e0:	str	r0, [fp, #-8]
   132e4:	str	r1, [fp, #-12]
   132e8:	ldr	r0, [fp, #-8]
   132ec:	bl	13288 <error@@Base+0x230>
   132f0:	mov	r3, r0
   132f4:	cmp	r3, #0
   132f8:	beq	13330 <error@@Base+0x2d8>
   132fc:	ldr	r2, [fp, #-12]
   13300:	ldr	r3, [pc, #60]	; 13344 <error@@Base+0x2ec>
   13304:	add	r3, pc, r3
   13308:	mov	r1, r3
   1330c:	ldr	r3, [pc, #52]	; 13348 <error@@Base+0x2f0>
   13310:	add	r3, pc, r3
   13314:	mov	r0, r3
   13318:	bl	10a94 <__isoc99_sscanf@plt>
   1331c:	mov	r3, r0
   13320:	cmp	r3, #1
   13324:	bne	13330 <error@@Base+0x2d8>
   13328:	mov	r3, #1
   1332c:	b	13334 <error@@Base+0x2dc>
   13330:	mov	r3, #0
   13334:	uxtb	r3, r3
   13338:	mov	r0, r3
   1333c:	sub	sp, fp, #4
   13340:	pop	{fp, pc}
   13344:	andeq	r2, r0, r0, ror r8
   13348:	andeq	r8, r1, r8, lsl #31
   1334c:	push	{fp, lr}
   13350:	add	fp, sp, #4
   13354:	sub	sp, sp, #16
   13358:	str	r0, [fp, #-8]
   1335c:	str	r1, [fp, #-12]
   13360:	str	r2, [fp, #-16]
   13364:	ldr	r0, [fp, #-8]
   13368:	bl	13288 <error@@Base+0x230>
   1336c:	mov	r3, r0
   13370:	cmp	r3, #0
   13374:	beq	133a8 <error@@Base+0x350>
   13378:	ldr	r3, [fp, #-16]
   1337c:	ldr	r2, [fp, #-12]
   13380:	ldr	r1, [pc, #52]	; 133bc <error@@Base+0x364>
   13384:	add	r1, pc, r1
   13388:	ldr	r0, [pc, #48]	; 133c0 <error@@Base+0x368>
   1338c:	add	r0, pc, r0
   13390:	bl	10a94 <__isoc99_sscanf@plt>
   13394:	mov	r3, r0
   13398:	cmp	r3, #2
   1339c:	bne	133a8 <error@@Base+0x350>
   133a0:	mov	r3, #1
   133a4:	b	133ac <error@@Base+0x354>
   133a8:	mov	r3, #0
   133ac:	uxtb	r3, r3
   133b0:	mov	r0, r3
   133b4:	sub	sp, fp, #4
   133b8:	pop	{fp, pc}
   133bc:	strdeq	r2, [r0], -r4
   133c0:	andeq	r8, r1, ip, lsl #30
   133c4:	push	{fp, lr}
   133c8:	add	fp, sp, #4
   133cc:	sub	sp, sp, #24
   133d0:	str	r0, [fp, #-24]	; 0xffffffe8
   133d4:	str	r1, [fp, #-28]	; 0xffffffe4
   133d8:	mov	r3, #0
   133dc:	str	r3, [fp, #-12]
   133e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133e4:	bl	13288 <error@@Base+0x230>
   133e8:	mov	r3, r0
   133ec:	cmp	r3, #0
   133f0:	beq	134a8 <error@@Base+0x450>
   133f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133f8:	bl	13288 <error@@Base+0x230>
   133fc:	mov	r3, r0
   13400:	cmp	r3, #0
   13404:	beq	134a8 <error@@Base+0x450>
   13408:	b	13488 <error@@Base+0x430>
   1340c:	ldr	r3, [pc, #164]	; 134b8 <error@@Base+0x460>
   13410:	add	r3, pc, r3
   13414:	add	r0, r3, #29
   13418:	bl	10ad0 <atoi@plt>
   1341c:	str	r0, [fp, #-8]
   13420:	ldr	r3, [fp, #-8]
   13424:	cmp	r3, #0
   13428:	bne	13468 <error@@Base+0x410>
   1342c:	ldr	r3, [pc, #136]	; 134bc <error@@Base+0x464>
   13430:	add	r3, pc, r3
   13434:	mov	r1, r3
   13438:	ldr	r3, [pc, #128]	; 134c0 <error@@Base+0x468>
   1343c:	add	r3, pc, r3
   13440:	add	r0, r3, #29
   13444:	bl	10980 <strcmp@plt>
   13448:	mov	r3, r0
   1344c:	cmp	r3, #0
   13450:	bne	13460 <error@@Base+0x408>
   13454:	ldr	r3, [fp, #-16]
   13458:	str	r3, [fp, #-12]
   1345c:	b	13468 <error@@Base+0x410>
   13460:	mov	r3, #11
   13464:	str	r3, [fp, #-8]
   13468:	ldr	r3, [fp, #-8]
   1346c:	lsl	r3, r3, #3
   13470:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13474:	add	r3, r2, r3
   13478:	ldr	r1, [fp, #-16]
   1347c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13480:	mov	r0, r3
   13484:	bl	131a0 <error@@Base+0x148>
   13488:	sub	r2, fp, #20
   1348c:	sub	r3, fp, #16
   13490:	mov	r1, r3
   13494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13498:	bl	1334c <error@@Base+0x2f4>
   1349c:	mov	r3, r0
   134a0:	cmp	r3, #0
   134a4:	bne	1340c <error@@Base+0x3b4>
   134a8:	ldr	r3, [fp, #-12]
   134ac:	mov	r0, r3
   134b0:	sub	sp, fp, #4
   134b4:	pop	{fp, pc}
   134b8:	andeq	r8, r1, r8, lsl #29
   134bc:	andeq	r2, r0, r0, asr r7
   134c0:	andeq	r8, r1, ip, asr lr
   134c4:	push	{fp, lr}
   134c8:	add	fp, sp, #4
   134cc:	sub	sp, sp, #16
   134d0:	str	r0, [fp, #-16]
   134d4:	str	r1, [fp, #-20]	; 0xffffffec
   134d8:	ldr	r0, [fp, #-16]
   134dc:	bl	13288 <error@@Base+0x230>
   134e0:	mov	r3, r0
   134e4:	cmp	r3, #0
   134e8:	beq	13568 <error@@Base+0x510>
   134ec:	ldr	r0, [fp, #-16]
   134f0:	bl	13288 <error@@Base+0x230>
   134f4:	mov	r3, r0
   134f8:	cmp	r3, #0
   134fc:	beq	13568 <error@@Base+0x510>
   13500:	b	13548 <error@@Base+0x4f0>
   13504:	ldr	r3, [pc, #104]	; 13574 <error@@Base+0x51c>
   13508:	add	r3, pc, r3
   1350c:	mov	r0, r3
   13510:	bl	10a7c <strlen@plt>
   13514:	mov	r3, r0
   13518:	sub	r3, r3, #1
   1351c:	ldr	r2, [pc, #84]	; 13578 <error@@Base+0x520>
   13520:	add	r2, pc, r2
   13524:	mov	r1, #0
   13528:	strb	r1, [r2, r3]
   1352c:	ldr	r2, [fp, #-8]
   13530:	ldr	r3, [fp, #-12]
   13534:	ldr	r1, [pc, #64]	; 1357c <error@@Base+0x524>
   13538:	add	r1, pc, r1
   1353c:	add	r1, r1, #29
   13540:	ldr	r0, [fp, #-20]	; 0xffffffec
   13544:	bl	131f8 <error@@Base+0x1a0>
   13548:	sub	r2, fp, #12
   1354c:	sub	r3, fp, #8
   13550:	mov	r1, r3
   13554:	ldr	r0, [fp, #-16]
   13558:	bl	1334c <error@@Base+0x2f4>
   1355c:	mov	r3, r0
   13560:	cmp	r3, #0
   13564:	bne	13504 <error@@Base+0x4ac>
   13568:	nop			; (mov r0, r0)
   1356c:	sub	sp, fp, #4
   13570:	pop	{fp, pc}
   13574:	muleq	r1, r0, sp
   13578:	andeq	r8, r1, r8, ror sp
   1357c:	andeq	r8, r1, r0, ror #26
   13580:	push	{fp, lr}
   13584:	add	fp, sp, #4
   13588:	sub	sp, sp, #32
   1358c:	str	r0, [fp, #-32]	; 0xffffffe0
   13590:	str	r1, [fp, #-36]	; 0xffffffdc
   13594:	ldr	r3, [pc, #500]	; 13790 <error@@Base+0x738>
   13598:	add	r3, pc, r3
   1359c:	mov	r1, r3
   135a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   135a4:	bl	12644 <__assert_fail@plt+0x1b2c>
   135a8:	str	r0, [fp, #-8]
   135ac:	ldr	r0, [fp, #-8]
   135b0:	bl	13288 <error@@Base+0x230>
   135b4:	mov	r3, r0
   135b8:	cmp	r3, #0
   135bc:	beq	13748 <error@@Base+0x6f0>
   135c0:	mov	r2, #45	; 0x2d
   135c4:	ldr	r3, [pc, #456]	; 13794 <error@@Base+0x73c>
   135c8:	add	r3, pc, r3
   135cc:	mov	r1, r3
   135d0:	ldr	r3, [pc, #448]	; 13798 <error@@Base+0x740>
   135d4:	add	r3, pc, r3
   135d8:	mov	r0, r3
   135dc:	bl	10af4 <strncmp@plt>
   135e0:	mov	r3, r0
   135e4:	cmp	r3, #0
   135e8:	bne	13748 <error@@Base+0x6f0>
   135ec:	ldr	r0, [fp, #-8]
   135f0:	bl	13288 <error@@Base+0x230>
   135f4:	mov	r3, r0
   135f8:	cmp	r3, #0
   135fc:	beq	13748 <error@@Base+0x6f0>
   13600:	ldr	r3, [pc, #404]	; 1379c <error@@Base+0x744>
   13604:	add	r3, pc, r3
   13608:	mov	r1, r3
   1360c:	ldr	r3, [pc, #396]	; 137a0 <error@@Base+0x748>
   13610:	add	r3, pc, r3
   13614:	mov	r0, r3
   13618:	bl	10980 <strcmp@plt>
   1361c:	mov	r3, r0
   13620:	cmp	r3, #0
   13624:	bne	13748 <error@@Base+0x6f0>
   13628:	sub	r3, fp, #20
   1362c:	mov	r1, r3
   13630:	ldr	r0, [fp, #-8]
   13634:	bl	132d4 <error@@Base+0x27c>
   13638:	mov	r3, r0
   1363c:	cmp	r3, #0
   13640:	beq	13748 <error@@Base+0x6f0>
   13644:	sub	r3, fp, #24
   13648:	mov	r1, r3
   1364c:	ldr	r0, [fp, #-8]
   13650:	bl	132d4 <error@@Base+0x27c>
   13654:	mov	r3, r0
   13658:	cmp	r3, #0
   1365c:	beq	13748 <error@@Base+0x6f0>
   13660:	ldr	r0, [fp, #-8]
   13664:	bl	13288 <error@@Base+0x230>
   13668:	mov	r3, r0
   1366c:	cmp	r3, #0
   13670:	beq	13748 <error@@Base+0x6f0>
   13674:	ldr	r0, [fp, #-8]
   13678:	bl	13288 <error@@Base+0x230>
   1367c:	mov	r3, r0
   13680:	cmp	r3, #0
   13684:	beq	13748 <error@@Base+0x6f0>
   13688:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1368c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13690:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13694:	mov	r0, r3
   13698:	bl	131a0 <error@@Base+0x148>
   1369c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136a0:	add	r3, r3, #8
   136a4:	mov	r1, r3
   136a8:	ldr	r0, [fp, #-8]
   136ac:	bl	133c4 <error@@Base+0x36c>
   136b0:	str	r0, [fp, #-12]
   136b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136b8:	add	r3, r3, #416	; 0x1a0
   136bc:	mov	r1, r3
   136c0:	ldr	r0, [fp, #-8]
   136c4:	bl	133c4 <error@@Base+0x36c>
   136c8:	str	r0, [fp, #-16]
   136cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136d0:	add	r3, r3, #824	; 0x338
   136d4:	mov	r1, r3
   136d8:	ldr	r0, [fp, #-8]
   136dc:	bl	133c4 <error@@Base+0x36c>
   136e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   136e4:	cmp	r3, #0
   136e8:	ble	13778 <error@@Base+0x720>
   136ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136f0:	add	r3, r3, #920	; 0x398
   136f4:	mov	r1, r3
   136f8:	ldr	r0, [fp, #-8]
   136fc:	bl	133c4 <error@@Base+0x36c>
   13700:	ldr	r3, [fp, #-12]
   13704:	cmp	r3, #0
   13708:	ble	13720 <error@@Base+0x6c8>
   1370c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13710:	add	r3, r3, #992	; 0x3e0
   13714:	mov	r1, r3
   13718:	ldr	r0, [fp, #-8]
   1371c:	bl	134c4 <error@@Base+0x46c>
   13720:	ldr	r3, [fp, #-16]
   13724:	cmp	r3, #0
   13728:	ble	13778 <error@@Base+0x720>
   1372c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13730:	add	r3, r3, #9024	; 0x2340
   13734:	add	r3, r3, #24
   13738:	mov	r1, r3
   1373c:	ldr	r0, [fp, #-8]
   13740:	bl	134c4 <error@@Base+0x46c>
   13744:	b	13778 <error@@Base+0x720>
   13748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1374c:	cmp	r3, #0
   13750:	beq	1375c <error@@Base+0x704>
   13754:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13758:	b	13764 <error@@Base+0x70c>
   1375c:	ldr	r3, [pc, #64]	; 137a4 <error@@Base+0x74c>
   13760:	add	r3, pc, r3
   13764:	mov	r1, r3
   13768:	ldr	r3, [pc, #56]	; 137a8 <error@@Base+0x750>
   1376c:	add	r3, pc, r3
   13770:	mov	r0, r3
   13774:	bl	130c0 <error@@Base+0x68>
   13778:	nop			; (mov r0, r0)
   1377c:	ldr	r0, [fp, #-8]
   13780:	bl	12718 <__assert_fail@plt+0x1c00>
   13784:	nop			; (mov r0, r0)
   13788:	sub	sp, fp, #4
   1378c:	pop	{fp, pc}
   13790:	strdeq	r2, [r0], -r0
   13794:	andeq	r2, r0, r4, asr #11
   13798:	andeq	r8, r1, r4, asr #25
   1379c:			; <UNDEFINED> instruction: 0x000025b8
   137a0:	andeq	r8, r1, r8, lsl #25
   137a4:	andeq	r2, r0, ip, lsl #9
   137a8:	andeq	r2, r0, r8, lsl #9
   137ac:	push	{fp, lr}
   137b0:	add	fp, sp, #4
   137b4:	sub	sp, sp, #8
   137b8:	str	r0, [fp, #-8]
   137bc:	str	r1, [fp, #-12]
   137c0:	ldr	r3, [fp, #-12]
   137c4:	ldr	r3, [r3]
   137c8:	cmp	r3, #0
   137cc:	bne	137ec <error@@Base+0x794>
   137d0:	ldr	r3, [fp, #-8]
   137d4:	mov	r2, #8
   137d8:	mov	r1, #1
   137dc:	ldr	r0, [pc, #108]	; 13850 <error@@Base+0x7f8>
   137e0:	add	r0, pc, r0
   137e4:	bl	10a04 <fwrite@plt>
   137e8:	b	13838 <error@@Base+0x7e0>
   137ec:	ldr	r3, [fp, #-12]
   137f0:	ldr	r2, [r3]
   137f4:	ldr	r3, [fp, #-12]
   137f8:	ldr	r3, [r3, #4]
   137fc:	sub	r3, r2, r3
   13800:	vmov	s15, r3
   13804:	vcvt.f64.s32	d7, s15
   13808:	vldr	d6, [pc, #56]	; 13848 <error@@Base+0x7f0>
   1380c:	vmul.f64	d6, d7, d6
   13810:	ldr	r3, [fp, #-12]
   13814:	ldr	r3, [r3]
   13818:	vmov	s15, r3
   1381c:	vcvt.f64.s32	d7, s15
   13820:	vdiv.f64	d5, d6, d7
   13824:	vmov	r2, r3, d5
   13828:	ldr	r1, [pc, #36]	; 13854 <error@@Base+0x7fc>
   1382c:	add	r1, pc, r1
   13830:	ldr	r0, [fp, #-8]
   13834:	bl	10a88 <fprintf@plt>
   13838:	nop			; (mov r0, r0)
   1383c:	sub	sp, fp, #4
   13840:	pop	{fp, pc}
   13844:	nop			; (mov r0, r0)
   13848:	andeq	r0, r0, r0
   1384c:	subsmi	r0, r9, r0
   13850:	andeq	r2, r0, r8, lsr #8
   13854:	andeq	r2, r0, r8, ror #7
   13858:	push	{fp, lr}
   1385c:	add	fp, sp, #4
   13860:	sub	sp, sp, #8
   13864:	str	r0, [fp, #-8]
   13868:	str	r1, [fp, #-12]
   1386c:	ldr	r3, [fp, #-12]
   13870:	cmp	r3, #0
   13874:	beq	138a8 <error@@Base+0x850>
   13878:	ldr	r3, [fp, #-12]
   1387c:	ldr	r2, [r3]
   13880:	ldr	r3, [fp, #-12]
   13884:	ldr	r3, [r3, #4]
   13888:	ldr	r1, [pc, #84]	; 138e4 <error@@Base+0x88c>
   1388c:	add	r1, pc, r1
   13890:	ldr	r0, [fp, #-8]
   13894:	bl	10a88 <fprintf@plt>
   13898:	ldr	r1, [fp, #-12]
   1389c:	ldr	r0, [fp, #-8]
   138a0:	bl	137ac <error@@Base+0x754>
   138a4:	b	138c0 <error@@Base+0x868>
   138a8:	ldr	r3, [fp, #-8]
   138ac:	mov	r2, #26
   138b0:	mov	r1, #1
   138b4:	ldr	r0, [pc, #44]	; 138e8 <error@@Base+0x890>
   138b8:	add	r0, pc, r0
   138bc:	bl	10a04 <fwrite@plt>
   138c0:	ldr	r3, [fp, #-8]
   138c4:	mov	r2, #3
   138c8:	mov	r1, #1
   138cc:	ldr	r0, [pc, #24]	; 138ec <error@@Base+0x894>
   138d0:	add	r0, pc, r0
   138d4:	bl	10a04 <fwrite@plt>
   138d8:	nop			; (mov r0, r0)
   138dc:	sub	sp, fp, #4
   138e0:	pop	{fp, pc}
   138e4:	muleq	r0, r0, r3
   138e8:	andeq	r2, r0, r0, ror r3
   138ec:	andeq	r2, r0, r4, ror r3
   138f0:	push	{fp, lr}
   138f4:	add	fp, sp, #4
   138f8:	sub	sp, sp, #32
   138fc:	str	r0, [fp, #-16]
   13900:	str	r1, [fp, #-20]	; 0xffffffec
   13904:	mov	r1, r2
   13908:	str	r3, [fp, #-28]	; 0xffffffe4
   1390c:	ldr	r2, [fp, #4]
   13910:	ldr	r3, [fp, #8]
   13914:	strh	r1, [fp, #-24]	; 0xffffffe8
   13918:	strb	r2, [fp, #-32]	; 0xffffffe0
   1391c:	strb	r3, [fp, #-36]	; 0xffffffdc
   13920:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13924:	ldr	r3, [pc, #376]	; 13aa4 <error@@Base+0xa4c>
   13928:	add	r3, pc, r3
   1392c:	mov	r1, r3
   13930:	ldr	r0, [fp, #-16]
   13934:	bl	10a88 <fprintf@plt>
   13938:	mov	r1, #0
   1393c:	ldr	r0, [fp, #-16]
   13940:	bl	13858 <error@@Base+0x800>
   13944:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   13948:	cmp	r3, #0
   1394c:	beq	1395c <error@@Base+0x904>
   13950:	ldr	r3, [pc, #336]	; 13aa8 <error@@Base+0xa50>
   13954:	add	r3, pc, r3
   13958:	b	13964 <error@@Base+0x90c>
   1395c:	ldr	r3, [pc, #328]	; 13aac <error@@Base+0xa54>
   13960:	add	r3, pc, r3
   13964:	mov	r2, r3
   13968:	ldr	r3, [pc, #320]	; 13ab0 <error@@Base+0xa58>
   1396c:	add	r3, pc, r3
   13970:	mov	r1, r3
   13974:	ldr	r0, [fp, #-16]
   13978:	bl	10a88 <fprintf@plt>
   1397c:	mov	r3, #1
   13980:	strh	r3, [fp, #-6]
   13984:	b	139f0 <error@@Base+0x998>
   13988:	ldrsh	r3, [fp, #-6]
   1398c:	lsl	r3, r3, #3
   13990:	ldr	r2, [fp, #-20]	; 0xffffffec
   13994:	add	r3, r2, r3
   13998:	ldr	r3, [r3]
   1399c:	cmp	r3, #0
   139a0:	ble	139dc <error@@Base+0x984>
   139a4:	ldrsh	r3, [fp, #-6]
   139a8:	lsl	r3, r3, #3
   139ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   139b0:	add	r3, r2, r3
   139b4:	mov	r1, r3
   139b8:	ldr	r0, [fp, #-16]
   139bc:	bl	13858 <error@@Base+0x800>
   139c0:	ldrsh	r3, [fp, #-6]
   139c4:	mov	r2, r3
   139c8:	ldr	r3, [pc, #228]	; 13ab4 <error@@Base+0xa5c>
   139cc:	add	r3, pc, r3
   139d0:	mov	r1, r3
   139d4:	ldr	r0, [fp, #-16]
   139d8:	bl	10a88 <fprintf@plt>
   139dc:	ldrsh	r3, [fp, #-6]
   139e0:	uxth	r3, r3
   139e4:	add	r3, r3, #1
   139e8:	uxth	r3, r3
   139ec:	strh	r3, [fp, #-6]
   139f0:	ldrsh	r2, [fp, #-6]
   139f4:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   139f8:	cmp	r2, r3
   139fc:	ble	13988 <error@@Base+0x930>
   13a00:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   13a04:	cmp	r3, #0
   13a08:	beq	13a68 <error@@Base+0xa10>
   13a0c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   13a10:	add	r3, r3, #1
   13a14:	lsl	r3, r3, #3
   13a18:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a1c:	add	r3, r2, r3
   13a20:	ldr	r3, [r3]
   13a24:	cmp	r3, #0
   13a28:	ble	13a68 <error@@Base+0xa10>
   13a2c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   13a30:	add	r3, r3, #1
   13a34:	lsl	r3, r3, #3
   13a38:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a3c:	add	r3, r2, r3
   13a40:	mov	r1, r3
   13a44:	ldr	r0, [fp, #-16]
   13a48:	bl	13858 <error@@Base+0x800>
   13a4c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   13a50:	mov	r2, r3
   13a54:	ldr	r3, [pc, #92]	; 13ab8 <error@@Base+0xa60>
   13a58:	add	r3, pc, r3
   13a5c:	mov	r1, r3
   13a60:	ldr	r0, [fp, #-16]
   13a64:	bl	10a88 <fprintf@plt>
   13a68:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   13a6c:	cmp	r3, #0
   13a70:	beq	13a98 <error@@Base+0xa40>
   13a74:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a78:	ldr	r0, [fp, #-16]
   13a7c:	bl	13858 <error@@Base+0x800>
   13a80:	ldr	r3, [fp, #-16]
   13a84:	mov	r2, #7
   13a88:	mov	r1, #1
   13a8c:	ldr	r0, [pc, #40]	; 13abc <error@@Base+0xa64>
   13a90:	add	r0, pc, r0
   13a94:	bl	10a04 <fwrite@plt>
   13a98:	nop			; (mov r0, r0)
   13a9c:	sub	sp, fp, #4
   13aa0:	pop	{fp, pc}
   13aa4:	andeq	r2, r0, r0, lsr #6
   13aa8:	strdeq	r2, [r0], -ip
   13aac:	strdeq	r2, [r0], -r8
   13ab0:	strdeq	r2, [r0], -r4
   13ab4:	muleq	r0, r8, r2
   13ab8:	andeq	r2, r0, r8, lsl r2
   13abc:	strdeq	r2, [r0], -r0
   13ac0:	push	{fp, lr}
   13ac4:	add	fp, sp, #4
   13ac8:	sub	sp, sp, #8
   13acc:	str	r0, [fp, #-8]
   13ad0:	str	r1, [fp, #-12]
   13ad4:	ldr	r3, [fp, #-8]
   13ad8:	ldr	r2, [r3, #8]
   13adc:	ldr	r3, [fp, #-12]
   13ae0:	ldr	r3, [r3, #8]
   13ae4:	mov	r1, r3
   13ae8:	mov	r0, r2
   13aec:	bl	1255c <__assert_fail@plt+0x1a44>
   13af0:	mov	r3, r0
   13af4:	mov	r0, r3
   13af8:	sub	sp, fp, #4
   13afc:	pop	{fp, pc}
   13b00:	push	{fp, lr}
   13b04:	add	fp, sp, #4
   13b08:	sub	sp, sp, #24
   13b0c:	str	r0, [fp, #-16]
   13b10:	str	r1, [fp, #-20]	; 0xffffffec
   13b14:	str	r2, [fp, #-24]	; 0xffffffe8
   13b18:	ldr	r0, [fp, #-20]	; 0xffffffec
   13b1c:	bl	12380 <__assert_fail@plt+0x1868>
   13b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b24:	add	r3, r3, #4096	; 0x1000
   13b28:	ldr	r0, [r3, #3956]	; 0xf74
   13b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b30:	add	r3, r3, #4096	; 0x1000
   13b34:	ldr	r3, [r3, #3952]	; 0xf70
   13b38:	ldr	r2, [pc, #216]	; 13c18 <error@@Base+0xbc0>
   13b3c:	add	r2, pc, r2
   13b40:	mov	r1, r3
   13b44:	bl	1566c <error@@Base+0x2614>
   13b48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13b4c:	ldr	r3, [pc, #200]	; 13c1c <error@@Base+0xbc4>
   13b50:	add	r3, pc, r3
   13b54:	mov	r1, r3
   13b58:	ldr	r0, [fp, #-16]
   13b5c:	bl	10a88 <fprintf@plt>
   13b60:	mov	r1, #0
   13b64:	ldr	r0, [fp, #-16]
   13b68:	bl	13858 <error@@Base+0x800>
   13b6c:	ldr	r1, [fp, #-16]
   13b70:	mov	r0, #10
   13b74:	bl	10ab8 <fputc@plt>
   13b78:	mov	r3, #0
   13b7c:	str	r3, [fp, #-8]
   13b80:	b	13bf4 <error@@Base+0xb9c>
   13b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b88:	add	r3, r3, #4096	; 0x1000
   13b8c:	ldr	r2, [r3, #3952]	; 0xf70
   13b90:	ldr	r3, [fp, #-8]
   13b94:	lsl	r3, r3, #2
   13b98:	add	r3, r2, r3
   13b9c:	ldr	r3, [r3]
   13ba0:	add	r3, r3, #12
   13ba4:	mov	r1, r3
   13ba8:	ldr	r0, [fp, #-16]
   13bac:	bl	13858 <error@@Base+0x800>
   13bb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bb4:	add	r3, r3, #4096	; 0x1000
   13bb8:	ldr	r2, [r3, #3952]	; 0xf70
   13bbc:	ldr	r3, [fp, #-8]
   13bc0:	lsl	r3, r3, #2
   13bc4:	add	r3, r2, r3
   13bc8:	ldr	r3, [r3]
   13bcc:	ldr	r3, [r3, #8]
   13bd0:	mov	r2, r3
   13bd4:	ldr	r3, [pc, #68]	; 13c20 <error@@Base+0xbc8>
   13bd8:	add	r3, pc, r3
   13bdc:	mov	r1, r3
   13be0:	ldr	r0, [fp, #-16]
   13be4:	bl	10a88 <fprintf@plt>
   13be8:	ldr	r3, [fp, #-8]
   13bec:	add	r3, r3, #1
   13bf0:	str	r3, [fp, #-8]
   13bf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bf8:	add	r3, r3, #4096	; 0x1000
   13bfc:	ldr	r2, [r3, #3956]	; 0xf74
   13c00:	ldr	r3, [fp, #-8]
   13c04:	cmp	r2, r3
   13c08:	bgt	13b84 <error@@Base+0xb2c>
   13c0c:	nop			; (mov r0, r0)
   13c10:	sub	sp, fp, #4
   13c14:	pop	{fp, pc}
   13c18:			; <UNDEFINED> instruction: 0xffffff7c
   13c1c:	strdeq	r2, [r0], -r8
   13c20:	andeq	r2, r0, r8, lsl #1
   13c24:	push	{fp, lr}
   13c28:	add	fp, sp, #4
   13c2c:	sub	sp, sp, #24
   13c30:	str	r0, [fp, #-16]
   13c34:	str	r1, [fp, #-20]	; 0xffffffec
   13c38:	ldr	r3, [pc, #456]	; 13e08 <error@@Base+0xdb0>
   13c3c:	add	r3, pc, r3
   13c40:	mov	r1, r3
   13c44:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c48:	bl	12644 <__assert_fail@plt+0x1b2c>
   13c4c:	str	r0, [fp, #-8]
   13c50:	ldr	r3, [pc, #436]	; 13e0c <error@@Base+0xdb4>
   13c54:	add	r3, pc, r3
   13c58:	ldr	r2, [pc, #432]	; 13e10 <error@@Base+0xdb8>
   13c5c:	add	r2, pc, r2
   13c60:	ldr	r1, [pc, #428]	; 13e14 <error@@Base+0xdbc>
   13c64:	add	r1, pc, r1
   13c68:	ldr	r0, [fp, #-8]
   13c6c:	bl	10a88 <fprintf@plt>
   13c70:	ldr	r3, [fp, #-16]
   13c74:	ldr	r3, [r3]
   13c78:	mov	r2, r3
   13c7c:	ldr	r3, [pc, #404]	; 13e18 <error@@Base+0xdc0>
   13c80:	add	r3, pc, r3
   13c84:	mov	r1, r3
   13c88:	ldr	r0, [fp, #-8]
   13c8c:	bl	10a88 <fprintf@plt>
   13c90:	ldr	r3, [fp, #-16]
   13c94:	ldr	r3, [r3, #4]
   13c98:	mov	r2, r3
   13c9c:	ldr	r3, [pc, #376]	; 13e1c <error@@Base+0xdc4>
   13ca0:	add	r3, pc, r3
   13ca4:	mov	r1, r3
   13ca8:	ldr	r0, [fp, #-8]
   13cac:	bl	10a88 <fprintf@plt>
   13cb0:	ldr	r3, [fp, #-16]
   13cb4:	mov	r1, r3
   13cb8:	ldr	r0, [fp, #-8]
   13cbc:	bl	137ac <error@@Base+0x754>
   13cc0:	ldr	r3, [fp, #-8]
   13cc4:	mov	r2, #12
   13cc8:	mov	r1, #1
   13ccc:	ldr	r0, [pc, #332]	; 13e20 <error@@Base+0xdc8>
   13cd0:	add	r0, pc, r0
   13cd4:	bl	10a04 <fwrite@plt>
   13cd8:	ldr	r3, [fp, #-16]
   13cdc:	add	r1, r3, #8
   13ce0:	mov	r3, #1
   13ce4:	str	r3, [sp, #4]
   13ce8:	mov	r3, #0
   13cec:	str	r3, [sp]
   13cf0:	ldr	r3, [pc, #300]	; 13e24 <error@@Base+0xdcc>
   13cf4:	add	r3, pc, r3
   13cf8:	mov	r2, #50	; 0x32
   13cfc:	ldr	r0, [fp, #-8]
   13d00:	bl	138f0 <error@@Base+0x898>
   13d04:	ldr	r3, [fp, #-16]
   13d08:	add	r1, r3, #416	; 0x1a0
   13d0c:	mov	r3, #1
   13d10:	str	r3, [sp, #4]
   13d14:	mov	r3, #0
   13d18:	str	r3, [sp]
   13d1c:	ldr	r3, [pc, #260]	; 13e28 <error@@Base+0xdd0>
   13d20:	add	r3, pc, r3
   13d24:	mov	r2, #50	; 0x32
   13d28:	ldr	r0, [fp, #-8]
   13d2c:	bl	138f0 <error@@Base+0x898>
   13d30:	ldr	r3, [fp, #-16]
   13d34:	add	r1, r3, #824	; 0x338
   13d38:	mov	r3, #1
   13d3c:	str	r3, [sp, #4]
   13d40:	mov	r3, #1
   13d44:	str	r3, [sp]
   13d48:	ldr	r3, [pc, #220]	; 13e2c <error@@Base+0xdd4>
   13d4c:	add	r3, pc, r3
   13d50:	mov	r2, #10
   13d54:	ldr	r0, [fp, #-8]
   13d58:	bl	138f0 <error@@Base+0x898>
   13d5c:	ldr	r3, [fp, #-16]
   13d60:	ldr	r3, [r3]
   13d64:	cmp	r3, #0
   13d68:	ble	13df4 <error@@Base+0xd9c>
   13d6c:	ldr	r3, [fp, #-16]
   13d70:	add	r1, r3, #920	; 0x398
   13d74:	mov	r3, #0
   13d78:	str	r3, [sp, #4]
   13d7c:	mov	r3, #0
   13d80:	str	r3, [sp]
   13d84:	ldr	r3, [pc, #164]	; 13e30 <error@@Base+0xdd8>
   13d88:	add	r3, pc, r3
   13d8c:	mov	r2, #8
   13d90:	ldr	r0, [fp, #-8]
   13d94:	bl	138f0 <error@@Base+0x898>
   13d98:	ldr	r3, [fp, #-16]
   13d9c:	ldr	r3, [r3, #8]
   13da0:	cmp	r3, #0
   13da4:	ble	13dc4 <error@@Base+0xd6c>
   13da8:	ldr	r3, [fp, #-16]
   13dac:	add	r3, r3, #992	; 0x3e0
   13db0:	ldr	r2, [pc, #124]	; 13e34 <error@@Base+0xddc>
   13db4:	add	r2, pc, r2
   13db8:	mov	r1, r3
   13dbc:	ldr	r0, [fp, #-8]
   13dc0:	bl	13b00 <error@@Base+0xaa8>
   13dc4:	ldr	r3, [fp, #-16]
   13dc8:	ldr	r3, [r3, #416]	; 0x1a0
   13dcc:	cmp	r3, #0
   13dd0:	ble	13df4 <error@@Base+0xd9c>
   13dd4:	ldr	r3, [fp, #-16]
   13dd8:	add	r3, r3, #9024	; 0x2340
   13ddc:	add	r3, r3, #24
   13de0:	ldr	r2, [pc, #80]	; 13e38 <error@@Base+0xde0>
   13de4:	add	r2, pc, r2
   13de8:	mov	r1, r3
   13dec:	ldr	r0, [fp, #-8]
   13df0:	bl	13b00 <error@@Base+0xaa8>
   13df4:	ldr	r0, [fp, #-8]
   13df8:	bl	12718 <__assert_fail@plt+0x1c00>
   13dfc:	nop			; (mov r0, r0)
   13e00:	sub	sp, fp, #4
   13e04:	pop	{fp, pc}
   13e08:	andeq	r2, r0, r0, asr #32
   13e0c:	andeq	r1, r0, r8, ror #30
   13e10:	andeq	r1, r0, r0, lsr pc
   13e14:	andeq	r2, r0, ip, lsl r0
   13e18:	andeq	r2, r0, r8
   13e1c:	strdeq	r1, [r0], -r8
   13e20:	andeq	r1, r0, r0, ror #31
   13e24:	andeq	r1, r0, ip, asr #31
   13e28:	andeq	r1, r0, ip, lsr #31
   13e2c:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   13e30:	andeq	r1, r0, ip, ror #30
   13e34:	andeq	r1, r0, ip, lsl #30
   13e38:	andeq	r1, r0, r8, ror #29
   13e3c:	push	{fp, lr}
   13e40:	add	fp, sp, #4
   13e44:	sub	sp, sp, #24
   13e48:	str	r0, [fp, #-16]
   13e4c:	str	r1, [fp, #-20]	; 0xffffffec
   13e50:	str	r2, [fp, #-24]	; 0xffffffe8
   13e54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e5c:	cmp	r2, r3
   13e60:	bcs	13e6c <error@@Base+0xe14>
   13e64:	mov	r3, #0
   13e68:	b	13f64 <error@@Base+0xf0c>
   13e6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e74:	sub	r3, r2, r3
   13e78:	lsr	r2, r3, #1
   13e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e80:	add	r3, r2, r3
   13e84:	str	r3, [fp, #-8]
   13e88:	ldr	r2, [fp, #-8]
   13e8c:	mov	r3, r2
   13e90:	lsl	r3, r3, #1
   13e94:	add	r3, r3, r2
   13e98:	lsl	r3, r3, #2
   13e9c:	ldr	r2, [pc, #204]	; 13f70 <error@@Base+0xf18>
   13ea0:	add	r2, pc, r2
   13ea4:	add	r3, r3, r2
   13ea8:	str	r3, [fp, #-12]
   13eac:	ldr	r3, [fp, #-12]
   13eb0:	ldr	r2, [r3]
   13eb4:	ldr	r3, [fp, #-16]
   13eb8:	cmp	r2, r3
   13ebc:	bls	13ee0 <error@@Base+0xe88>
   13ec0:	ldr	r3, [fp, #-8]
   13ec4:	sub	r3, r3, #1
   13ec8:	mov	r2, r3
   13ecc:	ldr	r1, [fp, #-20]	; 0xffffffec
   13ed0:	ldr	r0, [fp, #-16]
   13ed4:	bl	13e3c <error@@Base+0xde4>
   13ed8:	mov	r3, r0
   13edc:	b	13f64 <error@@Base+0xf0c>
   13ee0:	ldr	r3, [fp, #-12]
   13ee4:	ldr	r2, [r3, #4]
   13ee8:	ldr	r3, [fp, #-16]
   13eec:	cmp	r2, r3
   13ef0:	bcs	13f14 <error@@Base+0xebc>
   13ef4:	ldr	r3, [fp, #-8]
   13ef8:	add	r3, r3, #1
   13efc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f00:	mov	r1, r3
   13f04:	ldr	r0, [fp, #-16]
   13f08:	bl	13e3c <error@@Base+0xde4>
   13f0c:	mov	r3, r0
   13f10:	b	13f64 <error@@Base+0xf0c>
   13f14:	ldr	r3, [fp, #-12]
   13f18:	ldr	r2, [r3]
   13f1c:	ldr	r3, [fp, #-16]
   13f20:	cmp	r2, r3
   13f24:	bhi	13f3c <error@@Base+0xee4>
   13f28:	ldr	r3, [fp, #-12]
   13f2c:	ldr	r2, [r3, #4]
   13f30:	ldr	r3, [fp, #-16]
   13f34:	cmp	r2, r3
   13f38:	bcs	13f5c <error@@Base+0xf04>
   13f3c:	ldr	r3, [pc, #48]	; 13f74 <error@@Base+0xf1c>
   13f40:	add	r3, pc, r3
   13f44:	mov	r2, #63	; 0x3f
   13f48:	ldr	r1, [pc, #40]	; 13f78 <error@@Base+0xf20>
   13f4c:	add	r1, pc, r1
   13f50:	ldr	r0, [pc, #36]	; 13f7c <error@@Base+0xf24>
   13f54:	add	r0, pc, r0
   13f58:	bl	10b18 <__assert_fail@plt>
   13f5c:	ldr	r3, [fp, #-12]
   13f60:	ldr	r3, [r3, #8]
   13f64:	mov	r0, r3
   13f68:	sub	sp, fp, #4
   13f6c:	pop	{fp, pc}
   13f70:	andeq	r1, r0, ip, asr lr
   13f74:	andeq	r5, r0, r0, ror #2
   13f78:	andeq	r5, r0, ip, ror #1
   13f7c:	andeq	r5, r0, ip, ror #1
   13f80:	push	{fp, lr}
   13f84:	add	fp, sp, #4
   13f88:	sub	sp, sp, #16
   13f8c:	str	r0, [fp, #-16]
   13f90:	ldr	r3, [pc, #40]	; 13fc0 <error@@Base+0xf68>
   13f94:	str	r3, [fp, #-8]
   13f98:	ldr	r3, [fp, #-8]
   13f9c:	sub	r3, r3, #1
   13fa0:	mov	r2, r3
   13fa4:	mov	r1, #0
   13fa8:	ldr	r0, [fp, #-16]
   13fac:	bl	13e3c <error@@Base+0xde4>
   13fb0:	mov	r3, r0
   13fb4:	mov	r0, r3
   13fb8:	sub	sp, fp, #4
   13fbc:	pop	{fp, pc}
   13fc0:	andeq	r0, r0, r5, asr #8
   13fc4:	push	{fp, lr}
   13fc8:	add	fp, sp, #4
   13fcc:	sub	sp, sp, #8
   13fd0:	str	r0, [fp, #-8]
   13fd4:	ldr	r3, [fp, #-8]
   13fd8:	cmp	r3, #0
   13fdc:	bne	13fe8 <error@@Base+0xf90>
   13fe0:	mov	r3, #18
   13fe4:	b	13ffc <error@@Base+0xfa4>
   13fe8:	ldr	r3, [fp, #-8]
   13fec:	ldr	r3, [r3, #12]
   13ff0:	mov	r0, r3
   13ff4:	bl	13f80 <error@@Base+0xf28>
   13ff8:	mov	r3, r0
   13ffc:	mov	r0, r3
   14000:	sub	sp, fp, #4
   14004:	pop	{fp, pc}
   14008:	push	{fp, lr}
   1400c:	add	fp, sp, #4
   14010:	sub	sp, sp, #8
   14014:	str	r0, [fp, #-8]
   14018:	ldr	r3, [fp, #-8]
   1401c:	cmp	r3, #0
   14020:	bne	1402c <error@@Base+0xfd4>
   14024:	mov	r3, #0
   14028:	b	14070 <error@@Base+0x1018>
   1402c:	ldr	r3, [fp, #-8]
   14030:	ldr	r3, [r3, #4]
   14034:	str	r3, [fp, #-8]
   14038:	ldr	r3, [fp, #-8]
   1403c:	cmp	r3, #0
   14040:	beq	1406c <error@@Base+0x1014>
   14044:	ldr	r0, [fp, #-8]
   14048:	bl	13fc4 <error@@Base+0xf6c>
   1404c:	mov	r3, r0
   14050:	cmp	r3, #4
   14054:	beq	1402c <error@@Base+0xfd4>
   14058:	ldr	r0, [fp, #-8]
   1405c:	bl	13fc4 <error@@Base+0xf6c>
   14060:	mov	r3, r0
   14064:	cmp	r3, #6
   14068:	beq	1402c <error@@Base+0xfd4>
   1406c:	ldr	r3, [fp, #-8]
   14070:	mov	r0, r3
   14074:	sub	sp, fp, #4
   14078:	pop	{fp, pc}
   1407c:	push	{fp, lr}
   14080:	add	fp, sp, #4
   14084:	sub	sp, sp, #8
   14088:	str	r0, [fp, #-8]
   1408c:	ldr	r0, [fp, #-8]
   14090:	bl	14008 <error@@Base+0xfb0>
   14094:	mov	r3, r0
   14098:	mov	r0, r3
   1409c:	bl	14008 <error@@Base+0xfb0>
   140a0:	mov	r3, r0
   140a4:	mov	r0, r3
   140a8:	sub	sp, fp, #4
   140ac:	pop	{fp, pc}
   140b0:	push	{fp, lr}
   140b4:	add	fp, sp, #4
   140b8:	sub	sp, sp, #8
   140bc:	str	r0, [fp, #-8]
   140c0:	ldr	r3, [fp, #-8]
   140c4:	cmp	r3, #0
   140c8:	bne	140e0 <error@@Base+0x1088>
   140cc:	mov	r3, #0
   140d0:	b	1412c <error@@Base+0x10d4>
   140d4:	ldr	r3, [fp, #-8]
   140d8:	ldr	r3, [r3, #4]
   140dc:	str	r3, [fp, #-8]
   140e0:	ldr	r3, [fp, #-8]
   140e4:	ldr	r3, [r3, #4]
   140e8:	cmp	r3, #0
   140ec:	beq	14128 <error@@Base+0x10d0>
   140f0:	ldr	r3, [fp, #-8]
   140f4:	ldr	r3, [r3, #4]
   140f8:	mov	r0, r3
   140fc:	bl	13fc4 <error@@Base+0xf6c>
   14100:	mov	r3, r0
   14104:	cmp	r3, #4
   14108:	beq	140d4 <error@@Base+0x107c>
   1410c:	ldr	r3, [fp, #-8]
   14110:	ldr	r3, [r3, #4]
   14114:	mov	r0, r3
   14118:	bl	13fc4 <error@@Base+0xf6c>
   1411c:	mov	r3, r0
   14120:	cmp	r3, #6
   14124:	beq	140d4 <error@@Base+0x107c>
   14128:	ldr	r3, [fp, #-8]
   1412c:	mov	r0, r3
   14130:	sub	sp, fp, #4
   14134:	pop	{fp, pc}
   14138:	push	{fp, lr}
   1413c:	add	fp, sp, #4
   14140:	sub	sp, sp, #48	; 0x30
   14144:	str	r0, [fp, #-48]	; 0xffffffd0
   14148:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1414c:	str	r3, [fp, #-36]	; 0xffffffdc
   14150:	sub	r3, fp, #40	; 0x28
   14154:	str	r3, [fp, #-8]
   14158:	mov	r3, #17
   1415c:	str	r3, [fp, #-12]
   14160:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14164:	cmp	r3, #0
   14168:	bne	14534 <error@@Base+0x14dc>
   1416c:	mov	r3, #0
   14170:	b	14558 <error@@Base+0x1500>
   14174:	ldr	r0, [fp, #-8]
   14178:	bl	14008 <error@@Base+0xfb0>
   1417c:	str	r0, [fp, #-8]
   14180:	ldr	r3, [fp, #-12]
   14184:	str	r3, [fp, #-16]
   14188:	ldr	r0, [fp, #-8]
   1418c:	bl	13fc4 <error@@Base+0xf6c>
   14190:	str	r0, [fp, #-12]
   14194:	ldr	r0, [fp, #-8]
   14198:	bl	14008 <error@@Base+0xfb0>
   1419c:	mov	r3, r0
   141a0:	mov	r0, r3
   141a4:	bl	13fc4 <error@@Base+0xf6c>
   141a8:	str	r0, [fp, #-20]	; 0xffffffec
   141ac:	ldr	r0, [fp, #-8]
   141b0:	bl	1407c <error@@Base+0x1024>
   141b4:	mov	r3, r0
   141b8:	mov	r0, r3
   141bc:	bl	13fc4 <error@@Base+0xf6c>
   141c0:	str	r0, [fp, #-24]	; 0xffffffe8
   141c4:	ldr	r3, [fp, #-12]
   141c8:	cmp	r3, #1
   141cc:	bne	141e0 <error@@Base+0x1188>
   141d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   141d4:	cmp	r3, #2
   141d8:	bne	141e0 <error@@Base+0x1188>
   141dc:	b	14534 <error@@Base+0x14dc>
   141e0:	ldr	r3, [fp, #-12]
   141e4:	cmp	r3, #3
   141e8:	beq	1454c <error@@Base+0x14f4>
   141ec:	ldr	r3, [fp, #-12]
   141f0:	cmp	r3, #1
   141f4:	beq	1454c <error@@Base+0x14f4>
   141f8:	ldr	r3, [fp, #-12]
   141fc:	cmp	r3, #2
   14200:	beq	1454c <error@@Base+0x14f4>
   14204:	ldr	r3, [fp, #-20]	; 0xffffffec
   14208:	cmp	r3, #3
   1420c:	beq	1454c <error@@Base+0x14f4>
   14210:	ldr	r3, [fp, #-20]	; 0xffffffec
   14214:	cmp	r3, #1
   14218:	beq	1454c <error@@Base+0x14f4>
   1421c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14220:	cmp	r3, #2
   14224:	beq	1454c <error@@Base+0x14f4>
   14228:	ldr	r3, [fp, #-12]
   1422c:	cmp	r3, #9
   14230:	beq	14240 <error@@Base+0x11e8>
   14234:	ldr	r3, [fp, #-12]
   14238:	cmp	r3, #8
   1423c:	bne	1425c <error@@Base+0x1204>
   14240:	ldr	r3, [fp, #-20]	; 0xffffffec
   14244:	cmp	r3, #9
   14248:	beq	14534 <error@@Base+0x14dc>
   1424c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14250:	cmp	r3, #8
   14254:	bne	1425c <error@@Base+0x1204>
   14258:	b	14534 <error@@Base+0x14dc>
   1425c:	ldr	r3, [fp, #-12]
   14260:	cmp	r3, #9
   14264:	beq	14274 <error@@Base+0x121c>
   14268:	ldr	r3, [fp, #-12]
   1426c:	cmp	r3, #8
   14270:	bne	142b4 <error@@Base+0x125c>
   14274:	ldr	r3, [fp, #-20]	; 0xffffffec
   14278:	cmp	r3, #13
   1427c:	beq	14298 <error@@Base+0x1240>
   14280:	ldr	r3, [fp, #-20]	; 0xffffffec
   14284:	cmp	r3, #12
   14288:	beq	14298 <error@@Base+0x1240>
   1428c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14290:	cmp	r3, #10
   14294:	bne	142b4 <error@@Base+0x125c>
   14298:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1429c:	cmp	r3, #9
   142a0:	beq	14534 <error@@Base+0x14dc>
   142a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142a8:	cmp	r3, #8
   142ac:	bne	142b4 <error@@Base+0x125c>
   142b0:	b	14534 <error@@Base+0x14dc>
   142b4:	ldr	r3, [fp, #-16]
   142b8:	cmp	r3, #9
   142bc:	beq	142cc <error@@Base+0x1274>
   142c0:	ldr	r3, [fp, #-16]
   142c4:	cmp	r3, #8
   142c8:	bne	1430c <error@@Base+0x12b4>
   142cc:	ldr	r3, [fp, #-12]
   142d0:	cmp	r3, #13
   142d4:	beq	142f0 <error@@Base+0x1298>
   142d8:	ldr	r3, [fp, #-12]
   142dc:	cmp	r3, #12
   142e0:	beq	142f0 <error@@Base+0x1298>
   142e4:	ldr	r3, [fp, #-12]
   142e8:	cmp	r3, #10
   142ec:	bne	1430c <error@@Base+0x12b4>
   142f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   142f4:	cmp	r3, #9
   142f8:	beq	14534 <error@@Base+0x14dc>
   142fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14300:	cmp	r3, #8
   14304:	bne	1430c <error@@Base+0x12b4>
   14308:	b	14534 <error@@Base+0x14dc>
   1430c:	ldr	r3, [fp, #-12]
   14310:	cmp	r3, #8
   14314:	bne	14328 <error@@Base+0x12d0>
   14318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1431c:	cmp	r3, #10
   14320:	bne	14328 <error@@Base+0x12d0>
   14324:	b	14534 <error@@Base+0x14dc>
   14328:	ldr	r3, [fp, #-12]
   1432c:	cmp	r3, #8
   14330:	bne	14350 <error@@Base+0x12f8>
   14334:	ldr	r3, [fp, #-20]	; 0xffffffec
   14338:	cmp	r3, #11
   1433c:	bne	14350 <error@@Base+0x12f8>
   14340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14344:	cmp	r3, #8
   14348:	bne	14350 <error@@Base+0x12f8>
   1434c:	b	14534 <error@@Base+0x14dc>
   14350:	ldr	r3, [fp, #-16]
   14354:	cmp	r3, #8
   14358:	bne	14378 <error@@Base+0x1320>
   1435c:	ldr	r3, [fp, #-12]
   14360:	cmp	r3, #11
   14364:	bne	14378 <error@@Base+0x1320>
   14368:	ldr	r3, [fp, #-20]	; 0xffffffec
   1436c:	cmp	r3, #8
   14370:	bne	14378 <error@@Base+0x1320>
   14374:	b	14534 <error@@Base+0x14dc>
   14378:	ldr	r3, [fp, #-12]
   1437c:	cmp	r3, #15
   14380:	bne	14394 <error@@Base+0x133c>
   14384:	ldr	r3, [fp, #-20]	; 0xffffffec
   14388:	cmp	r3, #15
   1438c:	bne	14394 <error@@Base+0x133c>
   14390:	b	14534 <error@@Base+0x14dc>
   14394:	ldr	r3, [fp, #-12]
   14398:	cmp	r3, #9
   1439c:	beq	143ac <error@@Base+0x1354>
   143a0:	ldr	r3, [fp, #-12]
   143a4:	cmp	r3, #8
   143a8:	bne	143bc <error@@Base+0x1364>
   143ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   143b0:	cmp	r3, #15
   143b4:	bne	143bc <error@@Base+0x1364>
   143b8:	b	14534 <error@@Base+0x14dc>
   143bc:	ldr	r3, [fp, #-12]
   143c0:	cmp	r3, #15
   143c4:	bne	143e4 <error@@Base+0x138c>
   143c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   143cc:	cmp	r3, #9
   143d0:	beq	14534 <error@@Base+0x14dc>
   143d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   143d8:	cmp	r3, #8
   143dc:	bne	143e4 <error@@Base+0x138c>
   143e0:	b	14534 <error@@Base+0x14dc>
   143e4:	ldr	r3, [fp, #-16]
   143e8:	cmp	r3, #15
   143ec:	bne	14424 <error@@Base+0x13cc>
   143f0:	ldr	r3, [fp, #-12]
   143f4:	cmp	r3, #14
   143f8:	beq	14414 <error@@Base+0x13bc>
   143fc:	ldr	r3, [fp, #-12]
   14400:	cmp	r3, #12
   14404:	beq	14414 <error@@Base+0x13bc>
   14408:	ldr	r3, [fp, #-12]
   1440c:	cmp	r3, #10
   14410:	bne	14424 <error@@Base+0x13cc>
   14414:	ldr	r3, [fp, #-20]	; 0xffffffec
   14418:	cmp	r3, #15
   1441c:	bne	14424 <error@@Base+0x13cc>
   14420:	b	14534 <error@@Base+0x14dc>
   14424:	ldr	r3, [fp, #-12]
   14428:	cmp	r3, #15
   1442c:	bne	14464 <error@@Base+0x140c>
   14430:	ldr	r3, [fp, #-20]	; 0xffffffec
   14434:	cmp	r3, #14
   14438:	beq	14454 <error@@Base+0x13fc>
   1443c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14440:	cmp	r3, #12
   14444:	beq	14454 <error@@Base+0x13fc>
   14448:	ldr	r3, [fp, #-20]	; 0xffffffec
   1444c:	cmp	r3, #10
   14450:	bne	14464 <error@@Base+0x140c>
   14454:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14458:	cmp	r3, #15
   1445c:	bne	14464 <error@@Base+0x140c>
   14460:	b	14534 <error@@Base+0x14dc>
   14464:	ldr	r3, [fp, #-12]
   14468:	cmp	r3, #7
   1446c:	bne	14480 <error@@Base+0x1428>
   14470:	ldr	r3, [fp, #-20]	; 0xffffffec
   14474:	cmp	r3, #7
   14478:	bne	14480 <error@@Base+0x1428>
   1447c:	b	14534 <error@@Base+0x14dc>
   14480:	ldr	r3, [fp, #-12]
   14484:	cmp	r3, #9
   14488:	beq	144bc <error@@Base+0x1464>
   1448c:	ldr	r3, [fp, #-12]
   14490:	cmp	r3, #8
   14494:	beq	144bc <error@@Base+0x1464>
   14498:	ldr	r3, [fp, #-12]
   1449c:	cmp	r3, #15
   144a0:	beq	144bc <error@@Base+0x1464>
   144a4:	ldr	r3, [fp, #-12]
   144a8:	cmp	r3, #7
   144ac:	beq	144bc <error@@Base+0x1464>
   144b0:	ldr	r3, [fp, #-12]
   144b4:	cmp	r3, #16
   144b8:	bne	144cc <error@@Base+0x1474>
   144bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   144c0:	cmp	r3, #16
   144c4:	bne	144cc <error@@Base+0x1474>
   144c8:	b	14534 <error@@Base+0x14dc>
   144cc:	ldr	r3, [fp, #-12]
   144d0:	cmp	r3, #16
   144d4:	bne	14518 <error@@Base+0x14c0>
   144d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   144dc:	cmp	r3, #9
   144e0:	beq	14534 <error@@Base+0x14dc>
   144e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   144e8:	cmp	r3, #8
   144ec:	beq	14534 <error@@Base+0x14dc>
   144f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   144f4:	cmp	r3, #15
   144f8:	beq	14534 <error@@Base+0x14dc>
   144fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14500:	cmp	r3, #7
   14504:	beq	14534 <error@@Base+0x14dc>
   14508:	ldr	r3, [fp, #-20]	; 0xffffffec
   1450c:	cmp	r3, #16
   14510:	bne	14518 <error@@Base+0x14c0>
   14514:	b	14534 <error@@Base+0x14dc>
   14518:	ldr	r3, [fp, #-12]
   1451c:	cmp	r3, #5
   14520:	bne	14548 <error@@Base+0x14f0>
   14524:	ldr	r3, [fp, #-20]	; 0xffffffec
   14528:	cmp	r3, #5
   1452c:	bne	14548 <error@@Base+0x14f0>
   14530:	nop			; (mov r0, r0)
   14534:	ldr	r3, [fp, #-8]
   14538:	ldr	r3, [r3, #4]
   1453c:	cmp	r3, #0
   14540:	bne	14174 <error@@Base+0x111c>
   14544:	b	1454c <error@@Base+0x14f4>
   14548:	nop			; (mov r0, r0)
   1454c:	ldr	r0, [fp, #-8]
   14550:	bl	140b0 <error@@Base+0x1058>
   14554:	mov	r3, r0
   14558:	mov	r0, r3
   1455c:	sub	sp, fp, #4
   14560:	pop	{fp, pc}
   14564:	push	{fp, lr}
   14568:	add	fp, sp, #4
   1456c:	sub	sp, sp, #24
   14570:	str	r0, [fp, #-24]	; 0xffffffe8
   14574:	str	r1, [fp, #-28]	; 0xffffffe4
   14578:	mov	r3, #0
   1457c:	str	r3, [fp, #-12]
   14580:	mov	r3, #0
   14584:	str	r3, [fp, #-16]
   14588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1458c:	str	r3, [fp, #-8]
   14590:	b	1462c <error@@Base+0x15d4>
   14594:	ldr	r3, [fp, #-8]
   14598:	cmp	r3, #0
   1459c:	bne	145c0 <error@@Base+0x1568>
   145a0:	ldr	r3, [pc, #164]	; 1464c <error@@Base+0x15f4>
   145a4:	add	r3, pc, r3
   145a8:	mov	r2, #249	; 0xf9
   145ac:	ldr	r1, [pc, #156]	; 14650 <error@@Base+0x15f8>
   145b0:	add	r1, pc, r1
   145b4:	ldr	r0, [pc, #152]	; 14654 <error@@Base+0x15fc>
   145b8:	add	r0, pc, r0
   145bc:	bl	10b18 <__assert_fail@plt>
   145c0:	ldr	r3, [fp, #-8]
   145c4:	ldr	r3, [r3, #12]
   145c8:	mov	r2, r3
   145cc:	sub	r3, fp, #20
   145d0:	mov	r1, r3
   145d4:	mov	r0, r2
   145d8:	bl	109bc <utf8proc_encode_char@plt>
   145dc:	mov	r3, r0
   145e0:	str	r3, [fp, #-16]
   145e4:	ldr	r3, [fp, #-16]
   145e8:	cmp	r3, #0
   145ec:	bne	14610 <error@@Base+0x15b8>
   145f0:	ldr	r3, [pc, #96]	; 14658 <error@@Base+0x1600>
   145f4:	add	r3, pc, r3
   145f8:	mov	r2, #253	; 0xfd
   145fc:	ldr	r1, [pc, #88]	; 1465c <error@@Base+0x1604>
   14600:	add	r1, pc, r1
   14604:	ldr	r0, [pc, #84]	; 14660 <error@@Base+0x1608>
   14608:	add	r0, pc, r0
   1460c:	bl	10b18 <__assert_fail@plt>
   14610:	ldr	r2, [fp, #-12]
   14614:	ldr	r3, [fp, #-16]
   14618:	add	r3, r2, r3
   1461c:	str	r3, [fp, #-12]
   14620:	ldr	r3, [fp, #-8]
   14624:	ldr	r3, [r3, #4]
   14628:	str	r3, [fp, #-8]
   1462c:	ldr	r2, [fp, #-8]
   14630:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14634:	cmp	r2, r3
   14638:	bne	14594 <error@@Base+0x153c>
   1463c:	ldr	r3, [fp, #-12]
   14640:	mov	r0, r3
   14644:	sub	sp, fp, #4
   14648:	pop	{fp, pc}
   1464c:	andeq	r4, r0, r0, lsl fp
   14650:	andeq	r4, r0, r8, lsl #21
   14654:	andeq	r4, r0, r4, asr #21
   14658:	andeq	r4, r0, r0, asr #21
   1465c:	andeq	r4, r0, r8, lsr sl
   14660:	andeq	r4, r0, r4, lsl #21
   14664:	push	{fp, lr}
   14668:	add	fp, sp, #4
   1466c:	sub	sp, sp, #24
   14670:	str	r0, [fp, #-16]
   14674:	str	r1, [fp, #-20]	; 0xffffffec
   14678:	str	r2, [fp, #-24]	; 0xffffffe8
   1467c:	mov	r3, #0
   14680:	str	r3, [fp, #-12]
   14684:	ldr	r3, [fp, #-20]	; 0xffffffec
   14688:	str	r3, [fp, #-8]
   1468c:	b	146fc <error@@Base+0x16a4>
   14690:	ldr	r3, [fp, #-8]
   14694:	cmp	r3, #0
   14698:	bne	146bc <error@@Base+0x1664>
   1469c:	ldr	r3, [pc, #136]	; 1472c <error@@Base+0x16d4>
   146a0:	add	r3, pc, r3
   146a4:	ldr	r2, [pc, #132]	; 14730 <error@@Base+0x16d8>
   146a8:	ldr	r1, [pc, #132]	; 14734 <error@@Base+0x16dc>
   146ac:	add	r1, pc, r1
   146b0:	ldr	r0, [pc, #128]	; 14738 <error@@Base+0x16e0>
   146b4:	add	r0, pc, r0
   146b8:	bl	10b18 <__assert_fail@plt>
   146bc:	ldr	r3, [fp, #-8]
   146c0:	ldr	r3, [r3, #12]
   146c4:	mov	r0, r3
   146c8:	ldr	r2, [fp, #-16]
   146cc:	ldr	r3, [fp, #-12]
   146d0:	add	r3, r2, r3
   146d4:	mov	r1, r3
   146d8:	bl	109bc <utf8proc_encode_char@plt>
   146dc:	mov	r3, r0
   146e0:	mov	r2, r3
   146e4:	ldr	r3, [fp, #-12]
   146e8:	add	r3, r3, r2
   146ec:	str	r3, [fp, #-12]
   146f0:	ldr	r3, [fp, #-8]
   146f4:	ldr	r3, [r3, #4]
   146f8:	str	r3, [fp, #-8]
   146fc:	ldr	r2, [fp, #-8]
   14700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14704:	cmp	r2, r3
   14708:	bne	14690 <error@@Base+0x1638>
   1470c:	ldr	r2, [fp, #-16]
   14710:	ldr	r3, [fp, #-12]
   14714:	add	r3, r2, r3
   14718:	mov	r2, #0
   1471c:	strb	r2, [r3]
   14720:	nop			; (mov r0, r0)
   14724:	sub	sp, fp, #4
   14728:	pop	{fp, pc}
   1472c:	andeq	r4, r0, r8, lsr #20
   14730:	andeq	r0, r0, sp, lsl #2
   14734:	andeq	r4, r0, ip, lsl #19
   14738:	andeq	r4, r0, r8, asr #19
   1473c:	push	{fp, lr}
   14740:	add	fp, sp, #4
   14744:	sub	sp, sp, #32
   14748:	str	r0, [fp, #-24]	; 0xffffffe8
   1474c:	str	r1, [fp, #-28]	; 0xffffffe4
   14750:	str	r2, [fp, #-32]	; 0xffffffe0
   14754:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14758:	ldr	r3, [r3, #4]
   1475c:	str	r3, [fp, #-8]
   14760:	ldr	r1, [fp, #-8]
   14764:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14768:	bl	14564 <error@@Base+0x150c>
   1476c:	str	r0, [fp, #-12]
   14770:	ldr	r3, [fp, #-12]
   14774:	add	r3, r3, #1
   14778:	mov	r0, r3
   1477c:	bl	10a28 <malloc@plt>
   14780:	mov	r3, r0
   14784:	str	r3, [fp, #-16]
   14788:	ldr	r2, [fp, #-8]
   1478c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14790:	ldr	r0, [fp, #-16]
   14794:	bl	14664 <error@@Base+0x160c>
   14798:	mov	r1, #12
   1479c:	mov	r0, #1
   147a0:	bl	12504 <__assert_fail@plt+0x19ec>
   147a4:	str	r0, [fp, #-20]	; 0xffffffec
   147a8:	ldr	r0, [fp, #-16]
   147ac:	bl	10aac <utf8proc_NFC@plt>
   147b0:	mov	r2, r0
   147b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   147b8:	str	r2, [r3, #8]
   147bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   147c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147c4:	bl	11b84 <__assert_fail@plt+0x106c>
   147c8:	ldr	r0, [fp, #-16]
   147cc:	bl	10998 <free@plt>
   147d0:	nop			; (mov r0, r0)
   147d4:	sub	sp, fp, #4
   147d8:	pop	{fp, pc}
   147dc:	push	{fp, lr}
   147e0:	add	fp, sp, #4
   147e4:	sub	sp, sp, #16
   147e8:	str	r0, [fp, #-16]
   147ec:	ldr	r3, [fp, #-16]
   147f0:	mov	r0, r3
   147f4:	bl	109a4 <utf8proc_get_property@plt>
   147f8:	str	r0, [fp, #-8]
   147fc:	ldr	r3, [fp, #-8]
   14800:	ldrsh	r3, [r3]
   14804:	cmp	r3, #1
   14808:	blt	14824 <error@@Base+0x17cc>
   1480c:	cmp	r3, #12
   14810:	ble	1481c <error@@Base+0x17c4>
   14814:	cmp	r3, #29
   14818:	bne	14824 <error@@Base+0x17cc>
   1481c:	mov	r3, #1
   14820:	b	14828 <error@@Base+0x17d0>
   14824:	mov	r3, #0
   14828:	mov	r0, r3
   1482c:	sub	sp, fp, #4
   14830:	pop	{fp, pc}
   14834:	push	{fp, lr}
   14838:	add	fp, sp, #4
   1483c:	sub	sp, sp, #16
   14840:	str	r0, [fp, #-16]
   14844:	str	r1, [fp, #-20]	; 0xffffffec
   14848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1484c:	ldr	r3, [r3]
   14850:	str	r3, [fp, #-8]
   14854:	b	14890 <error@@Base+0x1838>
   14858:	ldr	r3, [fp, #-8]
   1485c:	ldr	r3, [r3, #12]
   14860:	mov	r0, r3
   14864:	bl	147dc <error@@Base+0x1784>
   14868:	mov	r3, r0
   1486c:	cmp	r3, #0
   14870:	beq	14884 <error@@Base+0x182c>
   14874:	ldr	r2, [fp, #-12]
   14878:	ldr	r1, [fp, #-8]
   1487c:	ldr	r0, [fp, #-16]
   14880:	bl	1473c <error@@Base+0x16e4>
   14884:	ldr	r3, [fp, #-12]
   14888:	ldr	r3, [r3, #4]
   1488c:	str	r3, [fp, #-8]
   14890:	ldr	r0, [fp, #-8]
   14894:	bl	14138 <error@@Base+0x10e0>
   14898:	str	r0, [fp, #-12]
   1489c:	ldr	r3, [fp, #-12]
   148a0:	cmp	r3, #0
   148a4:	bne	14858 <error@@Base+0x1800>
   148a8:	nop			; (mov r0, r0)
   148ac:	sub	sp, fp, #4
   148b0:	pop	{fp, pc}
   148b4:	push	{fp, lr}
   148b8:	add	fp, sp, #4
   148bc:	sub	sp, sp, #8
   148c0:	str	r0, [fp, #-8]
   148c4:	ldr	r3, [fp, #-8]
   148c8:	ldr	r3, [r3, #8]
   148cc:	mov	r0, r3
   148d0:	bl	10998 <free@plt>
   148d4:	ldr	r0, [fp, #-8]
   148d8:	bl	10998 <free@plt>
   148dc:	nop			; (mov r0, r0)
   148e0:	sub	sp, fp, #4
   148e4:	pop	{fp, pc}
   148e8:	push	{fp, lr}
   148ec:	add	fp, sp, #4
   148f0:	sub	sp, sp, #24
   148f4:	str	r0, [fp, #-16]
   148f8:	mov	r3, r1
   148fc:	str	r2, [fp, #-24]	; 0xffffffe8
   14900:	strb	r3, [fp, #-20]	; 0xffffffec
   14904:	mov	r1, #16
   14908:	mov	r0, #1
   1490c:	bl	12504 <__assert_fail@plt+0x19ec>
   14910:	str	r0, [fp, #-8]
   14914:	ldr	r3, [fp, #-8]
   14918:	ldrb	r2, [fp, #-20]	; 0xffffffec
   1491c:	strb	r2, [r3, #8]
   14920:	ldr	r3, [fp, #-8]
   14924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14928:	str	r2, [r3, #12]
   1492c:	ldr	r1, [fp, #-8]
   14930:	ldr	r0, [fp, #-16]
   14934:	bl	11b84 <__assert_fail@plt+0x106c>
   14938:	nop			; (mov r0, r0)
   1493c:	sub	sp, fp, #4
   14940:	pop	{fp, pc}
   14944:	push	{fp, lr}
   14948:	add	fp, sp, #4
   1494c:	sub	sp, sp, #112	; 0x70
   14950:	str	r0, [fp, #-112]	; 0xffffff90
   14954:	mov	r3, #0
   14958:	strh	r3, [fp, #-6]
   1495c:	sub	r3, fp, #108	; 0x6c
   14960:	ldr	r2, [fp, #-112]	; 0xffffff90
   14964:	mov	r1, #99	; 0x63
   14968:	mov	r0, r3
   1496c:	bl	109b0 <fgets@plt>
   14970:	mov	r3, r0
   14974:	cmp	r3, #0
   14978:	beq	14a10 <error@@Base+0x19b8>
   1497c:	sub	r3, fp, #108	; 0x6c
   14980:	mov	r2, #51	; 0x33
   14984:	ldr	r1, [pc, #156]	; 14a28 <error@@Base+0x19d0>
   14988:	add	r1, pc, r1
   1498c:	mov	r0, r3
   14990:	bl	10af4 <strncmp@plt>
   14994:	mov	r3, r0
   14998:	cmp	r3, #0
   1499c:	bne	14a10 <error@@Base+0x19b8>
   149a0:	b	149dc <error@@Base+0x1984>
   149a4:	sub	r3, fp, #108	; 0x6c
   149a8:	ldr	r2, [pc, #124]	; 14a2c <error@@Base+0x19d4>
   149ac:	add	r2, pc, r2
   149b0:	mov	r1, r2
   149b4:	mov	r0, r3
   149b8:	bl	10980 <strcmp@plt>
   149bc:	mov	r3, r0
   149c0:	cmp	r3, #0
   149c4:	bne	149dc <error@@Base+0x1984>
   149c8:	ldrsh	r3, [fp, #-6]
   149cc:	uxth	r3, r3
   149d0:	add	r3, r3, #1
   149d4:	uxth	r3, r3
   149d8:	strh	r3, [fp, #-6]
   149dc:	ldrsh	r3, [fp, #-6]
   149e0:	cmp	r3, #1
   149e4:	bgt	14a08 <error@@Base+0x19b0>
   149e8:	sub	r3, fp, #108	; 0x6c
   149ec:	ldr	r2, [fp, #-112]	; 0xffffff90
   149f0:	mov	r1, #99	; 0x63
   149f4:	mov	r0, r3
   149f8:	bl	109b0 <fgets@plt>
   149fc:	mov	r3, r0
   14a00:	cmp	r3, #0
   14a04:	bne	149a4 <error@@Base+0x194c>
   14a08:	mov	r3, #1
   14a0c:	b	14a1c <error@@Base+0x19c4>
   14a10:	ldr	r0, [fp, #-112]	; 0xffffff90
   14a14:	bl	109d4 <rewind@plt>
   14a18:	mov	r3, #0
   14a1c:	mov	r0, r3
   14a20:	sub	sp, fp, #4
   14a24:	pop	{fp, pc}
   14a28:	andeq	r4, r0, r4, asr r7
   14a2c:	andeq	r4, r0, r8, ror #14
   14a30:	push	{r4, fp, lr}
   14a34:	add	fp, sp, #8
   14a38:	sub	sp, sp, #52	; 0x34
   14a3c:	str	r0, [fp, #-48]	; 0xffffffd0
   14a40:	str	r1, [fp, #-52]	; 0xffffffcc
   14a44:	str	r3, [fp, #-60]	; 0xffffffc4
   14a48:	mov	r3, r2
   14a4c:	strb	r3, [fp, #-56]	; 0xffffffc8
   14a50:	ldr	r4, [pc, #340]	; 14bac <error@@Base+0x1b54>
   14a54:	add	r4, pc, r4
   14a58:	mov	r3, #0
   14a5c:	strb	r3, [fp, #-13]
   14a60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14a64:	bl	10b0c <getc@plt>
   14a68:	str	r0, [fp, #-20]	; 0xffffffec
   14a6c:	b	14b94 <error@@Base+0x1b3c>
   14a70:	ldr	r3, [pc, #312]	; 14bb0 <error@@Base+0x1b58>
   14a74:	ldr	r2, [r4, r3]
   14a78:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a7c:	add	r3, r2, r3
   14a80:	ldrsb	r3, [r3]
   14a84:	str	r3, [fp, #-24]	; 0xffffffe8
   14a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a8c:	cmp	r3, #0
   14a90:	bgt	14aa4 <error@@Base+0x1a4c>
   14a94:	ldr	r3, [pc, #280]	; 14bb4 <error@@Base+0x1b5c>
   14a98:	add	r3, pc, r3
   14a9c:	mov	r0, r3
   14aa0:	bl	13058 <error@@Base>
   14aa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14aa8:	uxtb	r3, r3
   14aac:	strb	r3, [fp, #-36]	; 0xffffffdc
   14ab0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ab4:	cmp	r3, #1
   14ab8:	ble	14b08 <error@@Base+0x1ab0>
   14abc:	sub	r0, fp, #36	; 0x24
   14ac0:	add	r0, r0, #1
   14ac4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ac8:	sub	r3, r3, #1
   14acc:	mov	r2, r3
   14ad0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ad4:	mov	r1, #1
   14ad8:	bl	10a10 <fread@plt>
   14adc:	mov	r3, r0
   14ae0:	str	r3, [fp, #-28]	; 0xffffffe4
   14ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ae8:	sub	r2, r3, #1
   14aec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14af0:	cmp	r2, r3
   14af4:	beq	14b08 <error@@Base+0x1ab0>
   14af8:	ldr	r3, [pc, #184]	; 14bb8 <error@@Base+0x1b60>
   14afc:	add	r3, pc, r3
   14b00:	mov	r0, r3
   14b04:	bl	13058 <error@@Base>
   14b08:	sub	r2, fp, #40	; 0x28
   14b0c:	sub	r3, fp, #36	; 0x24
   14b10:	mov	r1, #4
   14b14:	mov	r0, r3
   14b18:	bl	10a1c <utf8proc_iterate@plt>
   14b1c:	str	r0, [fp, #-32]	; 0xffffffe0
   14b20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14b24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b28:	cmp	r2, r3
   14b2c:	beq	14b44 <error@@Base+0x1aec>
   14b30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b34:	bl	10adc <utf8proc_errmsg@plt>
   14b38:	mov	r3, r0
   14b3c:	mov	r0, r3
   14b40:	bl	13058 <error@@Base>
   14b44:	ldrb	r3, [fp, #-56]	; 0xffffffc8
   14b48:	cmp	r3, #0
   14b4c:	beq	14b6c <error@@Base+0x1b14>
   14b50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14b54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14b58:	cmp	r2, r3
   14b5c:	bne	14b6c <error@@Base+0x1b14>
   14b60:	mov	r3, #1
   14b64:	strb	r3, [fp, #-13]
   14b68:	b	14b88 <error@@Base+0x1b30>
   14b6c:	ldrb	r3, [fp, #-13]
   14b70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14b74:	mov	r1, r3
   14b78:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b7c:	bl	148e8 <error@@Base+0x1890>
   14b80:	mov	r3, #0
   14b84:	strb	r3, [fp, #-13]
   14b88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14b8c:	bl	10b0c <getc@plt>
   14b90:	str	r0, [fp, #-20]	; 0xffffffec
   14b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b98:	cmn	r3, #1
   14b9c:	bne	14a70 <error@@Base+0x1a18>
   14ba0:	nop			; (mov r0, r0)
   14ba4:	sub	sp, fp, #8
   14ba8:	pop	{r4, fp, pc}
   14bac:	andeq	r5, r1, r4, lsr #11
   14bb0:	andeq	r0, r0, r0, ror #1
   14bb4:			; <UNDEFINED> instruction: 0x000046b4
   14bb8:	andeq	r4, r0, r8, ror #12
   14bbc:	push	{fp, lr}
   14bc0:	add	fp, sp, #4
   14bc4:	sub	sp, sp, #16
   14bc8:	str	r0, [fp, #-16]
   14bcc:	ldr	r0, [fp, #-16]
   14bd0:	bl	109a4 <utf8proc_get_property@plt>
   14bd4:	str	r0, [fp, #-8]
   14bd8:	ldr	r3, [fp, #-16]
   14bdc:	cmp	r3, #13
   14be0:	bgt	14c00 <error@@Base+0x1ba8>
   14be4:	cmp	r3, #11
   14be8:	bge	14c14 <error@@Base+0x1bbc>
   14bec:	cmp	r3, #9
   14bf0:	beq	14c14 <error@@Base+0x1bbc>
   14bf4:	cmp	r3, #10
   14bf8:	beq	14c0c <error@@Base+0x1bb4>
   14bfc:	b	14c1c <error@@Base+0x1bc4>
   14c00:	cmp	r3, #160	; 0xa0
   14c04:	beq	14c14 <error@@Base+0x1bbc>
   14c08:	b	14c1c <error@@Base+0x1bc4>
   14c0c:	mov	r3, #0
   14c10:	b	14c3c <error@@Base+0x1be4>
   14c14:	mov	r3, #1
   14c18:	b	14c3c <error@@Base+0x1be4>
   14c1c:	ldr	r3, [fp, #-8]
   14c20:	ldrsh	r3, [r3]
   14c24:	sub	r3, r3, #23
   14c28:	cmp	r3, #2
   14c2c:	bhi	14c38 <error@@Base+0x1be0>
   14c30:	mov	r3, #1
   14c34:	b	14c3c <error@@Base+0x1be4>
   14c38:	mov	r3, #0
   14c3c:	mov	r0, r3
   14c40:	sub	sp, fp, #4
   14c44:	pop	{fp, pc}
   14c48:	push	{fp, lr}
   14c4c:	add	fp, sp, #4
   14c50:	sub	sp, sp, #24
   14c54:	str	r0, [fp, #-24]	; 0xffffffe8
   14c58:	str	r1, [fp, #-28]	; 0xffffffe4
   14c5c:	mov	r3, #0
   14c60:	strb	r3, [fp, #-5]
   14c64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14c68:	str	r3, [fp, #-12]
   14c6c:	b	14ca4 <error@@Base+0x1c4c>
   14c70:	ldr	r3, [fp, #-12]
   14c74:	ldr	r3, [r3, #12]
   14c78:	mov	r0, r3
   14c7c:	bl	14bbc <error@@Base+0x1b64>
   14c80:	mov	r3, r0
   14c84:	cmp	r3, #0
   14c88:	beq	14c98 <error@@Base+0x1c40>
   14c8c:	ldr	r3, [fp, #-12]
   14c90:	mov	r2, #32
   14c94:	str	r2, [r3, #12]
   14c98:	ldr	r3, [fp, #-12]
   14c9c:	ldr	r3, [r3, #4]
   14ca0:	str	r3, [fp, #-12]
   14ca4:	ldr	r3, [fp, #-12]
   14ca8:	cmp	r3, #0
   14cac:	bne	14c70 <error@@Base+0x1c18>
   14cb0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cb4:	str	r3, [fp, #-12]
   14cb8:	b	14db0 <error@@Base+0x1d58>
   14cbc:	ldr	r3, [fp, #-12]
   14cc0:	ldr	r3, [r3, #4]
   14cc4:	str	r3, [fp, #-16]
   14cc8:	ldr	r3, [fp, #-12]
   14ccc:	ldr	r3, [r3, #12]
   14cd0:	cmp	r3, #32
   14cd4:	bne	14d10 <error@@Base+0x1cb8>
   14cd8:	ldrb	r3, [fp, #-5]
   14cdc:	cmp	r3, #0
   14ce0:	beq	14d2c <error@@Base+0x1cd4>
   14ce4:	ldr	r3, [fp, #-16]
   14ce8:	cmp	r3, #0
   14cec:	beq	14d2c <error@@Base+0x1cd4>
   14cf0:	ldr	r3, [fp, #-16]
   14cf4:	ldr	r3, [r3, #12]
   14cf8:	cmp	r3, #32
   14cfc:	beq	14d2c <error@@Base+0x1cd4>
   14d00:	ldr	r3, [fp, #-16]
   14d04:	ldr	r3, [r3, #12]
   14d08:	cmp	r3, #10
   14d0c:	beq	14d2c <error@@Base+0x1cd4>
   14d10:	ldr	r3, [fp, #-12]
   14d14:	ldr	r3, [r3, #12]
   14d18:	cmp	r3, #10
   14d1c:	bne	14d8c <error@@Base+0x1d34>
   14d20:	ldrb	r3, [fp, #-5]
   14d24:	cmp	r3, #0
   14d28:	bne	14d8c <error@@Base+0x1d34>
   14d2c:	ldrb	r3, [fp, #-5]
   14d30:	cmp	r3, #0
   14d34:	beq	14d74 <error@@Base+0x1d1c>
   14d38:	ldr	r3, [fp, #-16]
   14d3c:	cmp	r3, #0
   14d40:	beq	14d74 <error@@Base+0x1d1c>
   14d44:	ldr	r3, [fp, #-16]
   14d48:	ldr	r3, [r3, #12]
   14d4c:	cmp	r3, #32
   14d50:	bne	14d74 <error@@Base+0x1d1c>
   14d54:	ldr	r3, [fp, #-16]
   14d58:	ldrb	r2, [r3, #8]
   14d5c:	ldr	r3, [fp, #-12]
   14d60:	ldrb	r3, [r3, #8]
   14d64:	orr	r3, r2, r3
   14d68:	uxtb	r2, r3
   14d6c:	ldr	r3, [fp, #-16]
   14d70:	strb	r2, [r3, #8]
   14d74:	ldr	r1, [fp, #-12]
   14d78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d7c:	bl	11c34 <__assert_fail@plt+0x111c>
   14d80:	ldr	r0, [fp, #-12]
   14d84:	bl	10998 <free@plt>
   14d88:	b	14da8 <error@@Base+0x1d50>
   14d8c:	ldr	r3, [fp, #-12]
   14d90:	ldr	r3, [r3, #12]
   14d94:	cmp	r3, #10
   14d98:	movne	r3, #1
   14d9c:	moveq	r3, #0
   14da0:	uxtb	r3, r3
   14da4:	strb	r3, [fp, #-5]
   14da8:	ldr	r3, [fp, #-16]
   14dac:	str	r3, [fp, #-12]
   14db0:	ldr	r3, [fp, #-12]
   14db4:	cmp	r3, #0
   14db8:	bne	14cbc <error@@Base+0x1c64>
   14dbc:	nop			; (mov r0, r0)
   14dc0:	sub	sp, fp, #4
   14dc4:	pop	{fp, pc}
   14dc8:	push	{fp, lr}
   14dcc:	add	fp, sp, #4
   14dd0:	sub	sp, sp, #16
   14dd4:	str	r0, [fp, #-16]
   14dd8:	ldr	r3, [fp, #-16]
   14ddc:	str	r3, [fp, #-8]
   14de0:	b	14e10 <error@@Base+0x1db8>
   14de4:	ldr	r3, [fp, #-8]
   14de8:	ldr	r3, [r3, #12]
   14dec:	mov	r0, r3
   14df0:	bl	109ec <utf8proc_tolower@plt>
   14df4:	mov	r3, r0
   14df8:	mov	r2, r3
   14dfc:	ldr	r3, [fp, #-8]
   14e00:	str	r2, [r3, #12]
   14e04:	ldr	r3, [fp, #-8]
   14e08:	ldr	r3, [r3, #4]
   14e0c:	str	r3, [fp, #-8]
   14e10:	ldr	r3, [fp, #-8]
   14e14:	cmp	r3, #0
   14e18:	bne	14de4 <error@@Base+0x1d8c>
   14e1c:	nop			; (mov r0, r0)
   14e20:	sub	sp, fp, #4
   14e24:	pop	{fp, pc}
   14e28:	push	{fp, lr}
   14e2c:	add	fp, sp, #4
   14e30:	sub	sp, sp, #24
   14e34:	str	r0, [fp, #-16]
   14e38:	str	r1, [fp, #-20]	; 0xffffffec
   14e3c:	str	r2, [fp, #-24]	; 0xffffffe8
   14e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e44:	ldrb	r3, [r3]
   14e48:	cmp	r3, #0
   14e4c:	beq	14e78 <error@@Base+0x1e20>
   14e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e54:	cmp	r3, #0
   14e58:	bne	14e78 <error@@Base+0x1e20>
   14e5c:	ldr	r3, [pc, #288]	; 14f84 <error@@Base+0x1f2c>
   14e60:	add	r3, pc, r3
   14e64:	mov	r1, r3
   14e68:	ldr	r3, [pc, #280]	; 14f88 <error@@Base+0x1f30>
   14e6c:	add	r3, pc, r3
   14e70:	mov	r0, r3
   14e74:	bl	130c0 <error@@Base+0x68>
   14e78:	ldr	r3, [fp, #-16]
   14e7c:	ldr	r3, [r3, #4]
   14e80:	str	r3, [fp, #-8]
   14e84:	ldr	r3, [pc, #256]	; 14f8c <error@@Base+0x1f34>
   14e88:	add	r3, pc, r3
   14e8c:	mov	r1, r3
   14e90:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e94:	bl	12644 <__assert_fail@plt+0x1b2c>
   14e98:	str	r0, [fp, #-12]
   14e9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ea0:	ldrb	r3, [r3]
   14ea4:	cmp	r3, #0
   14ea8:	beq	14ec4 <error@@Base+0x1e6c>
   14eac:	ldr	r0, [fp, #-12]
   14eb0:	bl	14944 <error@@Base+0x18ec>
   14eb4:	mov	r3, r0
   14eb8:	mov	r2, r3
   14ebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ec0:	strb	r2, [r3, #11]
   14ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ec8:	ldrb	r3, [r3, #1]
   14ecc:	mov	r2, r3
   14ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ed4:	ldr	r3, [r3, #4]
   14ed8:	cmp	r3, #0
   14edc:	beq	14eec <error@@Base+0x1e94>
   14ee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ee4:	ldr	r3, [r3, #4]
   14ee8:	b	14ef0 <error@@Base+0x1e98>
   14eec:	mov	r3, #94	; 0x5e
   14ef0:	ldr	r1, [fp, #-16]
   14ef4:	ldr	r0, [fp, #-12]
   14ef8:	bl	14a30 <error@@Base+0x19d8>
   14efc:	ldr	r0, [fp, #-12]
   14f00:	bl	12718 <__assert_fail@plt+0x1c00>
   14f04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f08:	ldrb	r3, [r3, #9]
   14f0c:	cmp	r3, #0
   14f10:	beq	14f40 <error@@Base+0x1ee8>
   14f14:	ldr	r3, [fp, #-8]
   14f18:	cmp	r3, #0
   14f1c:	beq	14f2c <error@@Base+0x1ed4>
   14f20:	ldr	r3, [fp, #-8]
   14f24:	ldr	r3, [r3, #4]
   14f28:	b	14f34 <error@@Base+0x1edc>
   14f2c:	ldr	r3, [fp, #-16]
   14f30:	ldr	r3, [r3]
   14f34:	mov	r1, r3
   14f38:	ldr	r0, [fp, #-16]
   14f3c:	bl	14c48 <error@@Base+0x1bf0>
   14f40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14f44:	ldrb	r3, [r3, #10]
   14f48:	cmp	r3, #0
   14f4c:	beq	14f78 <error@@Base+0x1f20>
   14f50:	ldr	r3, [fp, #-8]
   14f54:	cmp	r3, #0
   14f58:	beq	14f68 <error@@Base+0x1f10>
   14f5c:	ldr	r3, [fp, #-8]
   14f60:	ldr	r3, [r3, #4]
   14f64:	b	14f70 <error@@Base+0x1f18>
   14f68:	ldr	r3, [fp, #-16]
   14f6c:	ldr	r3, [r3]
   14f70:	mov	r0, r3
   14f74:	bl	14dc8 <error@@Base+0x1d70>
   14f78:	nop			; (mov r0, r0)
   14f7c:	sub	sp, fp, #4
   14f80:	pop	{fp, pc}
   14f84:	andeq	r4, r0, ip, lsl r3
   14f88:	andeq	r4, r0, ip, lsl r3
   14f8c:	andeq	r4, r0, r0, lsl r3
   14f90:	push	{fp, lr}
   14f94:	add	fp, sp, #4
   14f98:	sub	sp, sp, #16
   14f9c:	str	r0, [fp, #-16]
   14fa0:	str	r1, [fp, #-20]	; 0xffffffec
   14fa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   14fa8:	ldr	r0, [fp, #-16]
   14fac:	bl	109bc <utf8proc_encode_char@plt>
   14fb0:	str	r0, [fp, #-8]
   14fb4:	ldr	r3, [fp, #-8]
   14fb8:	cmp	r3, #0
   14fbc:	bgt	14fd0 <error@@Base+0x1f78>
   14fc0:	ldr	r3, [pc, #28]	; 14fe4 <error@@Base+0x1f8c>
   14fc4:	add	r3, pc, r3
   14fc8:	mov	r0, r3
   14fcc:	bl	13058 <error@@Base>
   14fd0:	ldr	r3, [fp, #-8]
   14fd4:	sxtb	r3, r3
   14fd8:	mov	r0, r3
   14fdc:	sub	sp, fp, #4
   14fe0:	pop	{fp, pc}
   14fe4:	ldrdeq	r4, [r0], -r8
   14fe8:	push	{fp, lr}
   14fec:	add	fp, sp, #4
   14ff0:	sub	sp, sp, #16
   14ff4:	str	r0, [fp, #-16]
   14ff8:	ldr	r0, [fp, #-16]
   14ffc:	bl	109a4 <utf8proc_get_property@plt>
   15000:	str	r0, [fp, #-8]
   15004:	ldr	r3, [fp, #-16]
   15008:	cmp	r3, #32
   1500c:	bne	15018 <error@@Base+0x1fc0>
   15010:	mov	r3, #1
   15014:	b	15044 <error@@Base+0x1fec>
   15018:	ldr	r3, [fp, #-8]
   1501c:	ldrsh	r3, [r3]
   15020:	cmp	r3, #1
   15024:	blt	15040 <error@@Base+0x1fe8>
   15028:	cmp	r3, #22
   1502c:	ble	15038 <error@@Base+0x1fe0>
   15030:	cmp	r3, #29
   15034:	bne	15040 <error@@Base+0x1fe8>
   15038:	mov	r3, #1
   1503c:	b	15044 <error@@Base+0x1fec>
   15040:	mov	r3, #0
   15044:	mov	r0, r3
   15048:	sub	sp, fp, #4
   1504c:	pop	{fp, pc}
   15050:	push	{fp, lr}
   15054:	add	fp, sp, #4
   15058:	sub	sp, sp, #8
   1505c:	str	r0, [fp, #-8]
   15060:	ldr	r0, [fp, #-8]
   15064:	bl	10a70 <utf8proc_category@plt>
   15068:	mov	r3, r0
   1506c:	sub	r3, r3, #6
   15070:	cmp	r3, #2
   15074:	bhi	15080 <error@@Base+0x2028>
   15078:	mov	r3, #1
   1507c:	b	15084 <error@@Base+0x202c>
   15080:	mov	r3, #0
   15084:	mov	r0, r3
   15088:	sub	sp, fp, #4
   1508c:	pop	{fp, pc}
   15090:	push	{fp, lr}
   15094:	add	fp, sp, #4
   15098:	sub	sp, sp, #24
   1509c:	str	r1, [fp, #-20]	; 0xffffffec
   150a0:	str	r2, [fp, #-24]	; 0xffffffe8
   150a4:	mov	r2, r3
   150a8:	mov	r3, r0
   150ac:	strb	r3, [fp, #-16]
   150b0:	mov	r3, r2
   150b4:	strb	r3, [fp, #-28]	; 0xffffffe4
   150b8:	mov	r3, #0
   150bc:	strh	r3, [fp, #-6]
   150c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150c4:	str	r3, [fp, #-12]
   150c8:	ldrb	r3, [fp, #-16]
   150cc:	cmp	r3, #0
   150d0:	beq	150f8 <error@@Base+0x20a0>
   150d4:	ldr	r1, [fp, #-12]
   150d8:	mov	r0, #94	; 0x5e
   150dc:	bl	14f90 <error@@Base+0x1f38>
   150e0:	mov	r3, r0
   150e4:	uxth	r2, r3
   150e8:	ldrh	r3, [fp, #-6]
   150ec:	add	r3, r2, r3
   150f0:	uxth	r3, r3
   150f4:	strh	r3, [fp, #-6]
   150f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   150fc:	cmp	r3, #10
   15100:	bne	15140 <error@@Base+0x20e8>
   15104:	ldrsh	r3, [fp, #-6]
   15108:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1510c:	add	r2, r2, r3
   15110:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   15114:	cmp	r3, #0
   15118:	beq	15128 <error@@Base+0x20d0>
   1511c:	ldr	r3, [pc, #296]	; 1524c <error@@Base+0x21f4>
   15120:	add	r3, pc, r3
   15124:	b	15130 <error@@Base+0x20d8>
   15128:	ldr	r3, [pc, #288]	; 15250 <error@@Base+0x21f8>
   1512c:	add	r3, pc, r3
   15130:	mov	r1, r3
   15134:	mov	r0, r2
   15138:	bl	10ac4 <sprintf@plt>
   1513c:	b	15240 <error@@Base+0x21e8>
   15140:	ldr	r0, [fp, #-20]	; 0xffffffec
   15144:	bl	14fe8 <error@@Base+0x1f90>
   15148:	mov	r3, r0
   1514c:	cmp	r3, #0
   15150:	beq	151f0 <error@@Base+0x2198>
   15154:	ldr	r0, [fp, #-20]	; 0xffffffec
   15158:	bl	15050 <error@@Base+0x1ff8>
   1515c:	mov	r3, r0
   15160:	cmp	r3, #0
   15164:	beq	15198 <error@@Base+0x2140>
   15168:	ldrsh	r3, [fp, #-6]
   1516c:	ldr	r2, [fp, #-12]
   15170:	add	r3, r2, r3
   15174:	mov	r1, r3
   15178:	ldr	r0, [pc, #212]	; 15254 <error@@Base+0x21fc>
   1517c:	bl	14f90 <error@@Base+0x1f38>
   15180:	mov	r3, r0
   15184:	uxth	r2, r3
   15188:	ldrh	r3, [fp, #-6]
   1518c:	add	r3, r2, r3
   15190:	uxth	r3, r3
   15194:	strh	r3, [fp, #-6]
   15198:	ldrsh	r3, [fp, #-6]
   1519c:	ldr	r2, [fp, #-12]
   151a0:	add	r3, r2, r3
   151a4:	mov	r1, r3
   151a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   151ac:	bl	14f90 <error@@Base+0x1f38>
   151b0:	mov	r3, r0
   151b4:	uxth	r2, r3
   151b8:	ldrh	r3, [fp, #-6]
   151bc:	add	r3, r2, r3
   151c0:	uxth	r3, r3
   151c4:	strh	r3, [fp, #-6]
   151c8:	ldrsh	r2, [fp, #-6]
   151cc:	uxth	r3, r2
   151d0:	add	r3, r3, #1
   151d4:	uxth	r3, r3
   151d8:	strh	r3, [fp, #-6]
   151dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151e0:	add	r3, r3, r2
   151e4:	mov	r2, #0
   151e8:	strb	r2, [r3]
   151ec:	b	15240 <error@@Base+0x21e8>
   151f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   151f4:	cmp	r3, #255	; 0xff
   151f8:	bhi	15220 <error@@Base+0x21c8>
   151fc:	ldrsh	r3, [fp, #-6]
   15200:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15204:	add	r3, r2, r3
   15208:	ldr	r2, [fp, #-20]	; 0xffffffec
   1520c:	ldr	r1, [pc, #68]	; 15258 <error@@Base+0x2200>
   15210:	add	r1, pc, r1
   15214:	mov	r0, r3
   15218:	bl	10ac4 <sprintf@plt>
   1521c:	b	15240 <error@@Base+0x21e8>
   15220:	ldrsh	r3, [fp, #-6]
   15224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15228:	add	r3, r2, r3
   1522c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15230:	ldr	r1, [pc, #36]	; 1525c <error@@Base+0x2204>
   15234:	add	r1, pc, r1
   15238:	mov	r0, r3
   1523c:	bl	10ac4 <sprintf@plt>
   15240:	nop			; (mov r0, r0)
   15244:	sub	sp, fp, #4
   15248:	pop	{fp, pc}
   1524c:	muleq	r0, r4, r0
   15250:	muleq	r0, r0, r0
   15254:	andeq	r2, r0, ip, asr #11
   15258:			; <UNDEFINED> instruction: 0x00003fb0
   1525c:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   15260:	push	{fp, lr}
   15264:	add	fp, sp, #4
   15268:	sub	sp, sp, #40	; 0x28
   1526c:	str	r0, [fp, #-32]	; 0xffffffe0
   15270:	str	r1, [fp, #-36]	; 0xffffffdc
   15274:	str	r2, [fp, #-40]	; 0xffffffd8
   15278:	ldr	r3, [pc, #220]	; 1535c <error@@Base+0x2304>
   1527c:	add	r3, pc, r3
   15280:	mov	r1, r3
   15284:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15288:	bl	12644 <__assert_fail@plt+0x1b2c>
   1528c:	str	r0, [fp, #-12]
   15290:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15294:	cmp	r3, #0
   15298:	beq	152f0 <error@@Base+0x2298>
   1529c:	ldr	r3, [fp, #-12]
   152a0:	mov	r2, #55	; 0x37
   152a4:	mov	r1, #1
   152a8:	ldr	r0, [pc, #176]	; 15360 <error@@Base+0x2308>
   152ac:	add	r0, pc, r0
   152b0:	bl	10a04 <fwrite@plt>
   152b4:	ldr	r3, [fp, #-12]
   152b8:	mov	r2, #55	; 0x37
   152bc:	mov	r1, #1
   152c0:	ldr	r0, [pc, #156]	; 15364 <error@@Base+0x230c>
   152c4:	add	r0, pc, r0
   152c8:	bl	10a04 <fwrite@plt>
   152cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   152d0:	ldr	r0, [fp, #-12]
   152d4:	blx	r3
   152d8:	ldr	r3, [fp, #-12]
   152dc:	mov	r2, #55	; 0x37
   152e0:	mov	r1, #1
   152e4:	ldr	r0, [pc, #124]	; 15368 <error@@Base+0x2310>
   152e8:	add	r0, pc, r0
   152ec:	bl	10a04 <fwrite@plt>
   152f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   152f4:	ldr	r3, [r3]
   152f8:	str	r3, [fp, #-8]
   152fc:	b	1533c <error@@Base+0x22e4>
   15300:	ldr	r3, [fp, #-8]
   15304:	ldrb	r3, [r3, #8]
   15308:	mov	r0, r3
   1530c:	ldr	r3, [fp, #-8]
   15310:	ldr	r1, [r3, #12]
   15314:	sub	r2, fp, #24
   15318:	mov	r3, #0
   1531c:	bl	15090 <error@@Base+0x2038>
   15320:	sub	r3, fp, #24
   15324:	ldr	r1, [fp, #-12]
   15328:	mov	r0, r3
   1532c:	bl	10ae8 <fputs@plt>
   15330:	ldr	r3, [fp, #-8]
   15334:	ldr	r3, [r3, #4]
   15338:	str	r3, [fp, #-8]
   1533c:	ldr	r3, [fp, #-8]
   15340:	cmp	r3, #0
   15344:	bne	15300 <error@@Base+0x22a8>
   15348:	ldr	r0, [fp, #-12]
   1534c:	bl	12718 <__assert_fail@plt+0x1c00>
   15350:	nop			; (mov r0, r0)
   15354:	sub	sp, fp, #4
   15358:	pop	{fp, pc}
   1535c:	andeq	r3, r0, r4, asr pc
   15360:	andeq	r3, r0, r0, lsr lr
   15364:	andeq	r3, r0, r0, asr lr
   15368:	andeq	r3, r0, ip, lsr #28
   1536c:	push	{fp, lr}
   15370:	add	fp, sp, #4
   15374:	sub	sp, sp, #24
   15378:	str	r0, [fp, #-24]	; 0xffffffe8
   1537c:	str	r1, [fp, #-28]	; 0xffffffe4
   15380:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15384:	str	r3, [fp, #-8]
   15388:	mov	r3, #0
   1538c:	str	r3, [fp, #-12]
   15390:	mov	r3, #0
   15394:	str	r3, [fp, #-16]
   15398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1539c:	str	r3, [fp, #-8]
   153a0:	b	153f4 <error@@Base+0x239c>
   153a4:	sub	r3, fp, #16
   153a8:	mov	r2, r3
   153ac:	mvn	r1, #0
   153b0:	ldr	r0, [fp, #-8]
   153b4:	bl	10a1c <utf8proc_iterate@plt>
   153b8:	str	r0, [fp, #-12]
   153bc:	ldr	r3, [fp, #-12]
   153c0:	cmp	r3, #0
   153c4:	bgt	153d0 <error@@Base+0x2378>
   153c8:	mov	r3, #0
   153cc:	b	15408 <error@@Base+0x23b0>
   153d0:	ldr	r3, [fp, #-16]
   153d4:	mov	r2, r3
   153d8:	mov	r1, #0
   153dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   153e0:	bl	148e8 <error@@Base+0x1890>
   153e4:	ldr	r3, [fp, #-12]
   153e8:	ldr	r2, [fp, #-8]
   153ec:	add	r3, r2, r3
   153f0:	str	r3, [fp, #-8]
   153f4:	ldr	r3, [fp, #-8]
   153f8:	ldrb	r3, [r3]
   153fc:	cmp	r3, #0
   15400:	bne	153a4 <error@@Base+0x234c>
   15404:	mov	r3, #1
   15408:	mov	r0, r3
   1540c:	sub	sp, fp, #4
   15410:	pop	{fp, pc}
   15414:	push	{fp, lr}
   15418:	add	fp, sp, #4
   1541c:	sub	sp, sp, #24
   15420:	str	r0, [fp, #-24]	; 0xffffffe8
   15424:	str	r1, [fp, #-28]	; 0xffffffe4
   15428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1542c:	str	r3, [fp, #-8]
   15430:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15434:	str	r3, [fp, #-12]
   15438:	ldr	r3, [pc, #516]	; 15644 <error@@Base+0x25ec>
   1543c:	add	r3, pc, r3
   15440:	ldr	r2, [r3]
   15444:	ldr	r3, [fp, #-8]
   15448:	lsl	r3, r3, #2
   1544c:	add	r3, r2, r3
   15450:	ldr	r3, [r3]
   15454:	str	r3, [fp, #-16]
   15458:	b	155b8 <error@@Base+0x2560>
   1545c:	ldr	r3, [fp, #-12]
   15460:	sub	r3, r3, #1
   15464:	str	r3, [fp, #-12]
   15468:	ldr	r2, [fp, #-8]
   1546c:	ldr	r3, [fp, #-12]
   15470:	cmp	r2, r3
   15474:	bge	154b8 <error@@Base+0x2460>
   15478:	ldr	r3, [pc, #456]	; 15648 <error@@Base+0x25f0>
   1547c:	add	r3, pc, r3
   15480:	ldr	r3, [r3]
   15484:	ldr	r2, [pc, #448]	; 1564c <error@@Base+0x25f4>
   15488:	add	r2, pc, r2
   1548c:	ldr	r1, [r2]
   15490:	ldr	r2, [fp, #-12]
   15494:	lsl	r2, r2, #2
   15498:	add	r2, r1, r2
   1549c:	ldr	r2, [r2]
   154a0:	mov	r1, r2
   154a4:	ldr	r0, [fp, #-16]
   154a8:	blx	r3
   154ac:	mov	r3, r0
   154b0:	cmp	r3, #0
   154b4:	blt	1545c <error@@Base+0x2404>
   154b8:	ldr	r2, [fp, #-8]
   154bc:	ldr	r3, [fp, #-12]
   154c0:	cmp	r2, r3
   154c4:	beq	15518 <error@@Base+0x24c0>
   154c8:	ldr	r3, [pc, #384]	; 15650 <error@@Base+0x25f8>
   154cc:	add	r3, pc, r3
   154d0:	ldr	r2, [r3]
   154d4:	ldr	r3, [fp, #-8]
   154d8:	add	r1, r3, #1
   154dc:	str	r1, [fp, #-8]
   154e0:	lsl	r3, r3, #2
   154e4:	add	r3, r2, r3
   154e8:	ldr	r2, [pc, #356]	; 15654 <error@@Base+0x25fc>
   154ec:	add	r2, pc, r2
   154f0:	ldr	r1, [r2]
   154f4:	ldr	r2, [fp, #-12]
   154f8:	lsl	r2, r2, #2
   154fc:	add	r2, r1, r2
   15500:	ldr	r2, [r2]
   15504:	str	r2, [r3]
   15508:	b	15518 <error@@Base+0x24c0>
   1550c:	ldr	r3, [fp, #-8]
   15510:	add	r3, r3, #1
   15514:	str	r3, [fp, #-8]
   15518:	ldr	r2, [fp, #-8]
   1551c:	ldr	r3, [fp, #-12]
   15520:	cmp	r2, r3
   15524:	bge	15568 <error@@Base+0x2510>
   15528:	ldr	r3, [pc, #296]	; 15658 <error@@Base+0x2600>
   1552c:	add	r3, pc, r3
   15530:	ldr	r3, [r3]
   15534:	ldr	r2, [pc, #288]	; 1565c <error@@Base+0x2604>
   15538:	add	r2, pc, r2
   1553c:	ldr	r1, [r2]
   15540:	ldr	r2, [fp, #-8]
   15544:	lsl	r2, r2, #2
   15548:	add	r2, r1, r2
   1554c:	ldr	r2, [r2]
   15550:	mov	r1, r2
   15554:	ldr	r0, [fp, #-16]
   15558:	blx	r3
   1555c:	mov	r3, r0
   15560:	cmp	r3, #0
   15564:	bgt	1550c <error@@Base+0x24b4>
   15568:	ldr	r2, [fp, #-8]
   1556c:	ldr	r3, [fp, #-12]
   15570:	cmp	r2, r3
   15574:	beq	155b8 <error@@Base+0x2560>
   15578:	ldr	r3, [pc, #224]	; 15660 <error@@Base+0x2608>
   1557c:	add	r3, pc, r3
   15580:	ldr	r2, [r3]
   15584:	ldr	r3, [fp, #-12]
   15588:	sub	r1, r3, #1
   1558c:	str	r1, [fp, #-12]
   15590:	lsl	r3, r3, #2
   15594:	add	r3, r2, r3
   15598:	ldr	r2, [pc, #196]	; 15664 <error@@Base+0x260c>
   1559c:	add	r2, pc, r2
   155a0:	ldr	r1, [r2]
   155a4:	ldr	r2, [fp, #-8]
   155a8:	lsl	r2, r2, #2
   155ac:	add	r2, r1, r2
   155b0:	ldr	r2, [r2]
   155b4:	str	r2, [r3]
   155b8:	ldr	r2, [fp, #-8]
   155bc:	ldr	r3, [fp, #-12]
   155c0:	cmp	r2, r3
   155c4:	blt	15468 <error@@Base+0x2410>
   155c8:	ldr	r3, [pc, #152]	; 15668 <error@@Base+0x2610>
   155cc:	add	r3, pc, r3
   155d0:	ldr	r2, [r3]
   155d4:	ldr	r3, [fp, #-12]
   155d8:	lsl	r3, r3, #2
   155dc:	add	r3, r2, r3
   155e0:	ldr	r2, [fp, #-16]
   155e4:	str	r2, [r3]
   155e8:	ldr	r3, [fp, #-12]
   155ec:	sub	r3, r3, #1
   155f0:	str	r3, [fp, #-12]
   155f4:	ldr	r2, [fp, #-12]
   155f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155fc:	cmp	r2, r3
   15600:	ble	15610 <error@@Base+0x25b8>
   15604:	ldr	r1, [fp, #-12]
   15608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1560c:	bl	15414 <error@@Base+0x23bc>
   15610:	ldr	r3, [fp, #-8]
   15614:	add	r3, r3, #1
   15618:	str	r3, [fp, #-8]
   1561c:	ldr	r2, [fp, #-8]
   15620:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15624:	cmp	r2, r3
   15628:	bge	15638 <error@@Base+0x25e0>
   1562c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15630:	ldr	r0, [fp, #-8]
   15634:	bl	15414 <error@@Base+0x23bc>
   15638:	nop			; (mov r0, r0)
   1563c:	sub	sp, fp, #4
   15640:	pop	{fp, pc}
   15644:	andeq	r6, r1, r4, asr #29
   15648:	andeq	r6, r1, r8, lsl #29
   1564c:	andeq	r6, r1, r8, ror lr
   15650:	andeq	r6, r1, r4, lsr lr
   15654:	andeq	r6, r1, r4, lsl lr
   15658:	ldrdeq	r6, [r1], -r8
   1565c:	andeq	r6, r1, r8, asr #27
   15660:	andeq	r6, r1, r4, lsl #27
   15664:	andeq	r6, r1, r4, ror #26
   15668:	andeq	r6, r1, r4, lsr sp
   1566c:	push	{fp, lr}
   15670:	add	fp, sp, #4
   15674:	sub	sp, sp, #16
   15678:	str	r0, [fp, #-8]
   1567c:	str	r1, [fp, #-12]
   15680:	str	r2, [fp, #-16]
   15684:	ldr	r3, [fp, #-8]
   15688:	cmp	r3, #1
   1568c:	ble	156c8 <error@@Base+0x2670>
   15690:	ldr	r3, [pc, #60]	; 156d4 <error@@Base+0x267c>
   15694:	add	r3, pc, r3
   15698:	ldr	r2, [fp, #-12]
   1569c:	str	r2, [r3]
   156a0:	ldr	r3, [pc, #48]	; 156d8 <error@@Base+0x2680>
   156a4:	add	r3, pc, r3
   156a8:	ldr	r2, [fp, #-16]
   156ac:	str	r2, [r3]
   156b0:	ldr	r3, [fp, #-8]
   156b4:	sub	r3, r3, #1
   156b8:	mov	r1, r3
   156bc:	mov	r0, #0
   156c0:	bl	15414 <error@@Base+0x23bc>
   156c4:	b	156cc <error@@Base+0x2674>
   156c8:	nop			; (mov r0, r0)
   156cc:	sub	sp, fp, #4
   156d0:	pop	{fp, pc}
   156d4:	andeq	r6, r1, ip, ror #24
   156d8:	andeq	r6, r1, r0, ror #24
   156dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   156e0:	mov	r7, r0
   156e4:	ldr	r6, [pc, #72]	; 15734 <error@@Base+0x26dc>
   156e8:	ldr	r5, [pc, #72]	; 15738 <error@@Base+0x26e0>
   156ec:	add	r6, pc, r6
   156f0:	add	r5, pc, r5
   156f4:	sub	r6, r6, r5
   156f8:	mov	r8, r1
   156fc:	mov	r9, r2
   15700:	bl	10954 <calloc@plt-0x20>
   15704:	asrs	r6, r6, #2
   15708:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1570c:	mov	r4, #0
   15710:	add	r4, r4, #1
   15714:	ldr	r3, [r5], #4
   15718:	mov	r2, r9
   1571c:	mov	r1, r8
   15720:	mov	r0, r7
   15724:	blx	r3
   15728:	cmp	r6, r4
   1572c:	bne	15710 <error@@Base+0x26b8>
   15730:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15734:	andeq	r4, r1, ip, lsl #16
   15738:	andeq	r4, r1, r4, lsl #16
   1573c:	bx	lr
   15740:	mov	r2, r1
   15744:	mov	r1, r0
   15748:	mov	r0, #3
   1574c:	b	109f8 <__xstat@plt>

Disassembly of section .fini:

00015750 <.fini>:
   15750:	push	{r3, lr}
   15754:	pop	{r3, pc}
