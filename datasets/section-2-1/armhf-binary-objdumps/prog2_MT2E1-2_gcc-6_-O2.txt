
../repos/prog2/MT2E1-2:     file format elf32-littlearm


Disassembly of section .init:

00010e94 <.init>:
   10e94:	push	{r3, lr}
   10e98:	bl	11248 <_start@@Base+0x3c>
   10e9c:	pop	{r3, pc}

Disassembly of section .plt:

00010ea0 <calloc@plt-0x14>:
   10ea0:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea4:	ldr	lr, [pc, #4]	; 10eb0 <calloc@plt-0x4>
   10ea8:	add	lr, pc, lr
   10eac:	ldr	pc, [lr, #8]!
   10eb0:	andeq	r2, r1, r0, asr r1

00010eb4 <calloc@plt>:
   10eb4:	add	ip, pc, #0, 12
   10eb8:	add	ip, ip, #73728	; 0x12000
   10ebc:	ldr	pc, [ip, #336]!	; 0x150

00010ec0 <raise@plt>:
   10ec0:	add	ip, pc, #0, 12
   10ec4:	add	ip, ip, #73728	; 0x12000
   10ec8:	ldr	pc, [ip, #328]!	; 0x148

00010ecc <strcmp@plt>:
   10ecc:	add	ip, pc, #0, 12
   10ed0:	add	ip, ip, #73728	; 0x12000
   10ed4:	ldr	pc, [ip, #320]!	; 0x140

00010ed8 <strtol@plt>:
   10ed8:	add	ip, pc, #0, 12
   10edc:	add	ip, ip, #73728	; 0x12000
   10ee0:	ldr	pc, [ip, #312]!	; 0x138

00010ee4 <printf@plt>:
   10ee4:	add	ip, pc, #0, 12
   10ee8:	add	ip, ip, #73728	; 0x12000
   10eec:	ldr	pc, [ip, #304]!	; 0x130

00010ef0 <__isoc99_fscanf@plt>:
   10ef0:	add	ip, pc, #0, 12
   10ef4:	add	ip, ip, #73728	; 0x12000
   10ef8:	ldr	pc, [ip, #296]!	; 0x128

00010efc <fopen@plt>:
   10efc:	add	ip, pc, #0, 12
   10f00:	add	ip, ip, #73728	; 0x12000
   10f04:	ldr	pc, [ip, #288]!	; 0x120

00010f08 <free@plt>:
   10f08:	add	ip, pc, #0, 12
   10f0c:	add	ip, ip, #73728	; 0x12000
   10f10:	ldr	pc, [ip, #280]!	; 0x118

00010f14 <memcpy@plt>:
   10f14:	add	ip, pc, #0, 12
   10f18:	add	ip, ip, #73728	; 0x12000
   10f1c:	ldr	pc, [ip, #272]!	; 0x110

00010f20 <realloc@plt>:
   10f20:	add	ip, pc, #0, 12
   10f24:	add	ip, ip, #73728	; 0x12000
   10f28:	ldr	pc, [ip, #264]!	; 0x108

00010f2c <strcpy@plt>:
   10f2c:	add	ip, pc, #0, 12
   10f30:	add	ip, ip, #73728	; 0x12000
   10f34:	ldr	pc, [ip, #256]!	; 0x100

00010f38 <puts@plt>:
   10f38:	add	ip, pc, #0, 12
   10f3c:	add	ip, ip, #73728	; 0x12000
   10f40:	ldr	pc, [ip, #248]!	; 0xf8

00010f44 <malloc@plt>:
   10f44:	add	ip, pc, #0, 12
   10f48:	add	ip, ip, #73728	; 0x12000
   10f4c:	ldr	pc, [ip, #240]!	; 0xf0

00010f50 <__libc_start_main@plt>:
   10f50:	add	ip, pc, #0, 12
   10f54:	add	ip, ip, #73728	; 0x12000
   10f58:	ldr	pc, [ip, #232]!	; 0xe8

00010f5c <__gmon_start__@plt>:
   10f5c:	add	ip, pc, #0, 12
   10f60:	add	ip, ip, #73728	; 0x12000
   10f64:	ldr	pc, [ip, #224]!	; 0xe0

00010f68 <strlen@plt>:
   10f68:	add	ip, pc, #0, 12
   10f6c:	add	ip, ip, #73728	; 0x12000
   10f70:	ldr	pc, [ip, #216]!	; 0xd8

00010f74 <setvbuf@plt>:
   10f74:	add	ip, pc, #0, 12
   10f78:	add	ip, ip, #73728	; 0x12000
   10f7c:	ldr	pc, [ip, #208]!	; 0xd0

00010f80 <putchar@plt>:
   10f80:	add	ip, pc, #0, 12
   10f84:	add	ip, ip, #73728	; 0x12000
   10f88:	ldr	pc, [ip, #200]!	; 0xc8

00010f8c <fclose@plt>:
   10f8c:	add	ip, pc, #0, 12
   10f90:	add	ip, ip, #73728	; 0x12000
   10f94:	ldr	pc, [ip, #192]!	; 0xc0

00010f98 <getline@plt>:
   10f98:	add	ip, pc, #0, 12
   10f9c:	add	ip, ip, #73728	; 0x12000
   10fa0:	ldr	pc, [ip, #184]!	; 0xb8

00010fa4 <abort@plt>:
   10fa4:	add	ip, pc, #0, 12
   10fa8:	add	ip, ip, #73728	; 0x12000
   10fac:	ldr	pc, [ip, #176]!	; 0xb0

Disassembly of section .text:

00010fb0 <main@@Base>:
   10fb0:	ldr	r0, [pc, #540]	; 111d4 <main@@Base+0x224>
   10fb4:	ldr	r2, [pc, #540]	; 111d8 <main@@Base+0x228>
   10fb8:	add	r0, pc, r0
   10fbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fc0:	mov	r3, #0
   10fc4:	ldr	ip, [r0, r2]
   10fc8:	sub	sp, sp, #44	; 0x2c
   10fcc:	mov	r1, r3
   10fd0:	mov	r2, #2
   10fd4:	ldr	r0, [ip]
   10fd8:	bl	10f74 <setvbuf@plt>
   10fdc:	ldr	r1, [pc, #504]	; 111dc <main@@Base+0x22c>
   10fe0:	ldr	r0, [pc, #504]	; 111e0 <main@@Base+0x230>
   10fe4:	add	r1, pc, r1
   10fe8:	add	r0, pc, r0
   10fec:	bl	10efc <fopen@plt>
   10ff0:	add	r6, sp, #40	; 0x28
   10ff4:	mov	r5, #0
   10ff8:	add	r9, sp, #12
   10ffc:	mov	r8, r0
   11000:	bl	122e4 <lista_nova@@Base>
   11004:	str	r5, [r6, #-24]!	; 0xffffffe8
   11008:	str	r5, [sp, #12]
   1100c:	mov	r7, r0
   11010:	b	11038 <main@@Base+0x88>
   11014:	ldr	r4, [sp, #12]
   11018:	mov	r0, r4
   1101c:	bl	10f68 <strlen@plt>
   11020:	mov	r2, #0
   11024:	add	r4, r4, r0
   11028:	mov	r0, r7
   1102c:	strb	r5, [r4, #-1]
   11030:	ldr	r1, [sp, #12]
   11034:	bl	12370 <lista_insere@@Base>
   11038:	mov	r2, r8
   1103c:	mov	r1, r6
   11040:	mov	r0, r9
   11044:	bl	10f98 <getline@plt>
   11048:	cmn	r0, #1
   1104c:	bne	11014 <main@@Base+0x64>
   11050:	ldr	r0, [sp, #12]
   11054:	bl	10f08 <free@plt>
   11058:	mov	r0, r8
   1105c:	bl	10f8c <fclose@plt>
   11060:	ldr	r1, [pc, #380]	; 111e4 <main@@Base+0x234>
   11064:	mov	r0, r7
   11068:	add	r1, pc, r1
   1106c:	bl	11558 <carrega_rotas@@Base>
   11070:	ldr	fp, [pc, #368]	; 111e8 <main@@Base+0x238>
   11074:	add	r6, sp, #28
   11078:	add	r4, sp, #20
   1107c:	add	fp, pc, fp
   11080:	mov	r5, #0
   11084:	str	r0, [sp, #4]
   11088:	ldr	r0, [pc, #348]	; 111ec <main@@Base+0x23c>
   1108c:	add	r0, pc, r0
   11090:	bl	10f38 <puts@plt>
   11094:	ldr	r1, [pc, #340]	; 111f0 <main@@Base+0x240>
   11098:	ldr	r0, [pc, #340]	; 111f4 <main@@Base+0x244>
   1109c:	add	r1, pc, r1
   110a0:	add	r0, pc, r0
   110a4:	bl	10efc <fopen@plt>
   110a8:	mov	r9, r0
   110ac:	bl	122e4 <lista_nova@@Base>
   110b0:	mov	r8, r0
   110b4:	bl	122e4 <lista_nova@@Base>
   110b8:	mov	sl, r0
   110bc:	b	110d4 <main@@Base+0x124>
   110c0:	bl	12370 <lista_insere@@Base>
   110c4:	mov	r2, r5
   110c8:	mov	r1, r6
   110cc:	mov	r0, sl
   110d0:	bl	12370 <lista_insere@@Base>
   110d4:	mov	r2, r4
   110d8:	mov	r1, fp
   110dc:	mov	r3, r6
   110e0:	mov	r0, r9
   110e4:	bl	10ef0 <__isoc99_fscanf@plt>
   110e8:	mov	r2, r5
   110ec:	mov	r1, r4
   110f0:	cmp	r0, #2
   110f4:	mov	r0, r8
   110f8:	beq	110c0 <main@@Base+0x110>
   110fc:	mov	r3, #5
   11100:	mov	r2, r7
   11104:	mov	r1, sl
   11108:	bl	11334 <proximas_n_chegadas@@Base>
   1110c:	cmp	r0, #1
   11110:	beq	11120 <main@@Base+0x170>
   11114:	ldr	r0, [pc, #220]	; 111f8 <main@@Base+0x248>
   11118:	add	r0, pc, r0
   1111c:	bl	10f38 <puts@plt>
   11120:	mov	r0, r8
   11124:	bl	12308 <lista_apaga@@Base>
   11128:	mov	r0, sl
   1112c:	bl	12308 <lista_apaga@@Base>
   11130:	mov	r0, r9
   11134:	bl	10f8c <fclose@plt>
   11138:	ldr	r4, [pc, #188]	; 111fc <main@@Base+0x24c>
   1113c:	ldr	r0, [pc, #188]	; 11200 <main@@Base+0x250>
   11140:	add	r4, pc, r4
   11144:	add	r0, pc, r0
   11148:	bl	10f38 <puts@plt>
   1114c:	mov	r2, r4
   11150:	mov	r1, r7
   11154:	ldr	r0, [sp, #4]
   11158:	bl	11488 <pesquisa_destinos@@Base>
   1115c:	subs	r5, r0, #0
   11160:	beq	111c0 <main@@Base+0x210>
   11164:	bl	12348 <lista_tamanho@@Base>
   11168:	mov	r1, r4
   1116c:	mov	r2, r0
   11170:	ldr	r0, [pc, #140]	; 11204 <main@@Base+0x254>
   11174:	add	r0, pc, r0
   11178:	bl	10ee4 <printf@plt>
   1117c:	ldr	r4, [r5]
   11180:	cmp	r4, #0
   11184:	beq	1119c <main@@Base+0x1ec>
   11188:	ldr	r0, [r4]
   1118c:	bl	10f38 <puts@plt>
   11190:	ldr	r4, [r4, #4]
   11194:	cmp	r4, #0
   11198:	bne	11188 <main@@Base+0x1d8>
   1119c:	mov	r0, r5
   111a0:	bl	12308 <lista_apaga@@Base>
   111a4:	ldr	r0, [sp, #4]
   111a8:	bl	116a0 <grafo_apaga@@Base>
   111ac:	mov	r0, r7
   111b0:	bl	12308 <lista_apaga@@Base>
   111b4:	mov	r0, #0
   111b8:	add	sp, sp, #44	; 0x2c
   111bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111c0:	ldr	r0, [pc, #64]	; 11208 <main@@Base+0x258>
   111c4:	mov	r1, r4
   111c8:	add	r0, pc, r0
   111cc:	bl	10ee4 <printf@plt>
   111d0:	b	111a4 <main@@Base+0x1f4>
   111d4:	andeq	r2, r1, r0, asr #32
   111d8:	andeq	r0, r0, r4, rrx
   111dc:	ldrdeq	r1, [r0], -ip
   111e0:	andeq	r1, r0, r4, lsr #24
   111e4:			; <UNDEFINED> instruction: 0x00001bb4
   111e8:	ldrdeq	r1, [r0], -r0
   111ec:	muleq	r0, ip, fp
   111f0:	andeq	r1, r0, r4, lsr #22
   111f4:	muleq	r0, ip, fp
   111f8:	andeq	r1, r0, ip, lsr fp
   111fc:	andeq	r1, r0, r4, asr #22
   11200:	andeq	r1, r0, ip, lsr #22
   11204:	andeq	r1, r0, r4, asr #22
   11208:	andeq	r1, r0, r8, asr #21

0001120c <_start@@Base>:
   1120c:	mov	fp, #0
   11210:	mov	lr, #0
   11214:	pop	{r1}		; (ldr r1, [sp], #4)
   11218:	mov	r2, sp
   1121c:	push	{r2}		; (str r2, [sp, #-4]!)
   11220:	push	{r0}		; (str r0, [sp, #-4]!)
   11224:	ldr	ip, [pc, #16]	; 1123c <_start@@Base+0x30>
   11228:	push	{ip}		; (str ip, [sp, #-4]!)
   1122c:	ldr	r0, [pc, #12]	; 11240 <_start@@Base+0x34>
   11230:	ldr	r3, [pc, #12]	; 11244 <_start@@Base+0x38>
   11234:	bl	10f50 <__libc_start_main@plt>
   11238:	bl	10fa4 <abort@plt>
   1123c:	andeq	r2, r1, ip, lsr #23
   11240:			; <UNDEFINED> instruction: 0x00010fb0
   11244:	andeq	r2, r1, ip, asr #22
   11248:	ldr	r3, [pc, #20]	; 11264 <_start@@Base+0x58>
   1124c:	ldr	r2, [pc, #20]	; 11268 <_start@@Base+0x5c>
   11250:	add	r3, pc, r3
   11254:	ldr	r2, [r3, r2]
   11258:	cmp	r2, #0
   1125c:	bxeq	lr
   11260:	b	10f5c <__gmon_start__@plt>
   11264:	andeq	r1, r1, r8, lsr #27
   11268:	andeq	r0, r0, r0, rrx
   1126c:	ldr	r3, [pc, #28]	; 11290 <_start@@Base+0x84>
   11270:	ldr	r0, [pc, #28]	; 11294 <_start@@Base+0x88>
   11274:	sub	r3, r3, r0
   11278:	cmp	r3, #6
   1127c:	bxls	lr
   11280:	ldr	r3, [pc, #16]	; 11298 <_start@@Base+0x8c>
   11284:	cmp	r3, #0
   11288:	bxeq	lr
   1128c:	bx	r3
   11290:	andeq	r3, r2, r3, ror r0
   11294:	andeq	r3, r2, r0, ror r0
   11298:	andeq	r0, r0, r0
   1129c:	ldr	r1, [pc, #36]	; 112c8 <_start@@Base+0xbc>
   112a0:	ldr	r0, [pc, #36]	; 112cc <_start@@Base+0xc0>
   112a4:	sub	r1, r1, r0
   112a8:	asr	r1, r1, #2
   112ac:	add	r1, r1, r1, lsr #31
   112b0:	asrs	r1, r1, #1
   112b4:	bxeq	lr
   112b8:	ldr	r3, [pc, #16]	; 112d0 <_start@@Base+0xc4>
   112bc:	cmp	r3, #0
   112c0:	bxeq	lr
   112c4:	bx	r3
   112c8:	andeq	r3, r2, r0, ror r0
   112cc:	andeq	r3, r2, r0, ror r0
   112d0:	andeq	r0, r0, r0
   112d4:	push	{r4, lr}
   112d8:	ldr	r4, [pc, #24]	; 112f8 <_start@@Base+0xec>
   112dc:	ldrb	r3, [r4]
   112e0:	cmp	r3, #0
   112e4:	popne	{r4, pc}
   112e8:	bl	1126c <_start@@Base+0x60>
   112ec:	mov	r3, #1
   112f0:	strb	r3, [r4]
   112f4:	pop	{r4, pc}
   112f8:	andeq	r3, r2, r0, ror r0
   112fc:	ldr	r0, [pc, #40]	; 1132c <_start@@Base+0x120>
   11300:	ldr	r3, [r0]
   11304:	cmp	r3, #0
   11308:	bne	11310 <_start@@Base+0x104>
   1130c:	b	1129c <_start@@Base+0x90>
   11310:	ldr	r3, [pc, #24]	; 11330 <_start@@Base+0x124>
   11314:	cmp	r3, #0
   11318:	beq	1130c <_start@@Base+0x100>
   1131c:	push	{r4, lr}
   11320:	blx	r3
   11324:	pop	{r4, lr}
   11328:	b	1129c <_start@@Base+0x90>
   1132c:	andeq	r2, r2, r4, lsl pc
   11330:	andeq	r0, r0, r0

00011334 <proximas_n_chegadas@@Base>:
   11334:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11338:	mov	fp, r0
   1133c:	ldr	r0, [r2, #8]
   11340:	sub	sp, sp, #12
   11344:	ldr	r4, [r2]
   11348:	lsl	r0, r0, #2
   1134c:	str	r2, [sp, #4]
   11350:	mov	r9, r1
   11354:	mov	r7, r3
   11358:	bl	10f44 <malloc@plt>
   1135c:	cmp	r4, #0
   11360:	movne	r6, #200	; 0xc8
   11364:	mov	r8, r0
   11368:	subne	r5, r0, #4
   1136c:	beq	11390 <proximas_n_chegadas@@Base+0x5c>
   11370:	mov	r0, r6
   11374:	bl	10f44 <malloc@plt>
   11378:	ldr	r1, [r4]
   1137c:	str	r0, [r5, #4]!
   11380:	bl	10f2c <strcpy@plt>
   11384:	ldr	r4, [r4, #4]
   11388:	cmp	r4, #0
   1138c:	bne	11370 <proximas_n_chegadas@@Base+0x3c>
   11390:	ldr	r0, [fp, #8]
   11394:	bl	11ea8 <heap_nova@@Base>
   11398:	ldr	r4, [fp]
   1139c:	ldr	r5, [r9]
   113a0:	cmp	r4, #0
   113a4:	movne	fp, #10
   113a8:	movne	r9, #0
   113ac:	mov	r6, r0
   113b0:	beq	113f8 <proximas_n_chegadas@@Base+0xc4>
   113b4:	mov	r2, fp
   113b8:	mov	r1, r9
   113bc:	ldr	r0, [r5]
   113c0:	bl	10ed8 <strtol@plt>
   113c4:	mov	r2, fp
   113c8:	mov	r1, r9
   113cc:	ldr	sl, [r8, r0, lsl #2]
   113d0:	ldr	r0, [r4]
   113d4:	bl	10ed8 <strtol@plt>
   113d8:	mov	r1, sl
   113dc:	mov	r2, r0
   113e0:	mov	r0, r6
   113e4:	bl	120ec <heap_insere@@Base>
   113e8:	ldr	r4, [r4, #4]
   113ec:	ldr	r5, [r5, #4]
   113f0:	cmp	r4, #0
   113f4:	bne	113b4 <proximas_n_chegadas@@Base+0x80>
   113f8:	ldr	r3, [sp, #4]
   113fc:	ldr	r9, [r3, #8]
   11400:	cmp	r9, #0
   11404:	subgt	r5, r8, #4
   11408:	movgt	r4, #0
   1140c:	ble	11424 <proximas_n_chegadas@@Base+0xf0>
   11410:	add	r4, r4, #1
   11414:	ldr	r0, [r5, #4]!
   11418:	bl	10f08 <free@plt>
   1141c:	cmp	r4, r9
   11420:	bne	11410 <proximas_n_chegadas@@Base+0xdc>
   11424:	mov	r0, r8
   11428:	ldr	r8, [pc, #84]	; 11484 <proximas_n_chegadas@@Base+0x150>
   1142c:	bl	10f08 <free@plt>
   11430:	cmp	r7, #0
   11434:	add	r8, pc, r8
   11438:	mov	r4, #0
   1143c:	ble	11470 <proximas_n_chegadas@@Base+0x13c>
   11440:	mov	r0, r6
   11444:	bl	12194 <heap_remove@@Base>
   11448:	add	r4, r4, #1
   1144c:	mov	r1, r4
   11450:	mov	r2, r0
   11454:	mov	r5, r0
   11458:	mov	r0, r8
   1145c:	bl	10ee4 <printf@plt>
   11460:	mov	r0, r5
   11464:	bl	10f08 <free@plt>
   11468:	cmp	r7, r4
   1146c:	bne	11440 <proximas_n_chegadas@@Base+0x10c>
   11470:	mov	r0, r6
   11474:	bl	11f00 <heap_apaga@@Base>
   11478:	mov	r0, #1
   1147c:	add	sp, sp, #12
   11480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11484:	andeq	r1, r0, r0, lsl #15

00011488 <pesquisa_destinos@@Base>:
   11488:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1148c:	mov	r9, r1
   11490:	mov	r7, r0
   11494:	mov	r6, r2
   11498:	bl	122e4 <lista_nova@@Base>
   1149c:	ldr	r4, [r9]
   114a0:	cmp	r4, #0
   114a4:	moveq	r5, r4
   114a8:	mov	r8, r0
   114ac:	beq	114dc <pesquisa_destinos@@Base+0x54>
   114b0:	mov	r5, #0
   114b4:	b	114c8 <pesquisa_destinos@@Base+0x40>
   114b8:	ldr	r4, [r4, #4]
   114bc:	add	r5, r5, #1
   114c0:	cmp	r4, #0
   114c4:	beq	114dc <pesquisa_destinos@@Base+0x54>
   114c8:	mov	r1, r6
   114cc:	ldr	r0, [r4]
   114d0:	bl	10ecc <strcmp@plt>
   114d4:	cmp	r0, #0
   114d8:	bne	114b8 <pesquisa_destinos@@Base+0x30>
   114dc:	mov	r0, r7
   114e0:	mov	r1, r5
   114e4:	bl	119c0 <v_sucessores@@Base>
   114e8:	ldr	r3, [r0]
   114ec:	mov	r7, r0
   114f0:	cmp	r3, #0
   114f4:	ble	11548 <pesquisa_destinos@@Base+0xc0>
   114f8:	mov	r6, #0
   114fc:	mov	sl, r6
   11500:	ldr	r5, [r9]
   11504:	mov	r4, #0
   11508:	b	11510 <pesquisa_destinos@@Base+0x88>
   1150c:	ldr	r5, [r5, #4]
   11510:	mov	r1, r6
   11514:	mov	r0, r7
   11518:	bl	126dc <vetor_elemento@@Base>
   1151c:	cmp	r4, r0
   11520:	add	r4, r4, #1
   11524:	blt	1150c <pesquisa_destinos@@Base+0x84>
   11528:	ldr	r1, [r5]
   1152c:	mov	r2, sl
   11530:	mov	r0, r8
   11534:	bl	12370 <lista_insere@@Base>
   11538:	ldr	r3, [r7]
   1153c:	add	r6, r6, #1
   11540:	cmp	r3, r6
   11544:	bgt	11500 <pesquisa_destinos@@Base+0x78>
   11548:	mov	r0, r7
   1154c:	bl	12678 <vetor_apaga@@Base>
   11550:	mov	r0, r8
   11554:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011558 <carrega_rotas@@Base>:
   11558:	push	{r4, r5, r6, r7, r8, lr}
   1155c:	subs	r4, r1, #0
   11560:	sub	sp, sp, #8
   11564:	beq	115e0 <carrega_rotas@@Base+0x88>
   11568:	ldr	r1, [pc, #164]	; 11614 <carrega_rotas@@Base+0xbc>
   1156c:	mov	r6, r0
   11570:	add	r1, pc, r1
   11574:	mov	r0, r4
   11578:	bl	10efc <fopen@plt>
   1157c:	subs	r5, r0, #0
   11580:	beq	115ec <carrega_rotas@@Base+0x94>
   11584:	mov	r0, r6
   11588:	bl	12348 <lista_tamanho@@Base>
   1158c:	mov	r1, #0
   11590:	bl	11648 <grafo_novo@@Base>
   11594:	subs	r4, r0, #0
   11598:	beq	11604 <carrega_rotas@@Base+0xac>
   1159c:	ldr	r6, [pc, #116]	; 11618 <carrega_rotas@@Base+0xc0>
   115a0:	add	r8, sp, #4
   115a4:	mov	r7, sp
   115a8:	add	r6, pc, r6
   115ac:	b	115b8 <carrega_rotas@@Base+0x60>
   115b0:	ldm	sp, {r1, r2}
   115b4:	bl	11890 <grafo_adiciona@@Base>
   115b8:	mov	r3, r8
   115bc:	mov	r2, r7
   115c0:	mov	r1, r6
   115c4:	mov	r0, r5
   115c8:	bl	10ef0 <__isoc99_fscanf@plt>
   115cc:	cmp	r0, #2
   115d0:	mov	r0, r4
   115d4:	beq	115b0 <carrega_rotas@@Base+0x58>
   115d8:	mov	r0, r5
   115dc:	bl	10f8c <fclose@plt>
   115e0:	mov	r0, r4
   115e4:	add	sp, sp, #8
   115e8:	pop	{r4, r5, r6, r7, r8, pc}
   115ec:	ldr	r0, [pc, #40]	; 1161c <carrega_rotas@@Base+0xc4>
   115f0:	mov	r1, r4
   115f4:	add	r0, pc, r0
   115f8:	mov	r4, r5
   115fc:	bl	10ee4 <printf@plt>
   11600:	b	115e0 <carrega_rotas@@Base+0x88>
   11604:	ldr	r0, [pc, #20]	; 11620 <carrega_rotas@@Base+0xc8>
   11608:	add	r0, pc, r0
   1160c:	bl	10f38 <puts@plt>
   11610:	b	115e0 <carrega_rotas@@Base+0x88>
   11614:	andeq	r1, r0, r0, asr r6
   11618:	andeq	r1, r0, ip, asr r6
   1161c:	ldrdeq	r1, [r0], -r0
   11620:	andeq	r1, r0, r0, ror #11

00011624 <cria_no@@Base>:
   11624:	push	{r4, lr}
   11628:	mov	r4, r0
   1162c:	mov	r0, #8
   11630:	bl	10f44 <malloc@plt>
   11634:	cmp	r0, #0
   11638:	movne	r3, #0
   1163c:	strne	r4, [r0]
   11640:	strne	r3, [r0, #4]
   11644:	pop	{r4, pc}

00011648 <grafo_novo@@Base>:
   11648:	push	{r4, r5, r6, lr}
   1164c:	mov	r5, r0
   11650:	mov	r0, #12
   11654:	mov	r6, r1
   11658:	bl	10f44 <malloc@plt>
   1165c:	subs	r4, r0, #0
   11660:	beq	11688 <grafo_novo@@Base+0x40>
   11664:	str	r5, [r4, #4]
   11668:	mov	r0, r5
   1166c:	str	r6, [r4]
   11670:	mov	r1, #8
   11674:	bl	10eb4 <calloc@plt>
   11678:	cmp	r0, #0
   1167c:	mov	r5, r0
   11680:	str	r0, [r4, #8]
   11684:	beq	11690 <grafo_novo@@Base+0x48>
   11688:	mov	r0, r4
   1168c:	pop	{r4, r5, r6, pc}
   11690:	mov	r0, r4
   11694:	bl	10f08 <free@plt>
   11698:	mov	r4, r5
   1169c:	b	11688 <grafo_novo@@Base+0x40>

000116a0 <grafo_apaga@@Base>:
   116a0:	push	{r4, r5, r6, lr}
   116a4:	subs	r5, r0, #0
   116a8:	popeq	{r4, r5, r6, pc}
   116ac:	ldr	r2, [r5, #8]
   116b0:	cmp	r2, #0
   116b4:	beq	11714 <grafo_apaga@@Base+0x74>
   116b8:	ldr	r1, [r5, #4]
   116bc:	cmp	r1, #0
   116c0:	movgt	r6, #0
   116c4:	ble	1170c <grafo_apaga@@Base+0x6c>
   116c8:	lsl	r4, r6, #3
   116cc:	add	r3, r2, r4
   116d0:	ldr	r0, [r3, #4]
   116d4:	cmp	r0, #0
   116d8:	beq	11700 <grafo_apaga@@Base+0x60>
   116dc:	ldr	r2, [r0, #4]
   116e0:	str	r2, [r3, #4]
   116e4:	bl	10f08 <free@plt>
   116e8:	ldr	r2, [r5, #8]
   116ec:	add	r3, r2, r4
   116f0:	ldr	r0, [r3, #4]
   116f4:	cmp	r0, #0
   116f8:	bne	116dc <grafo_apaga@@Base+0x3c>
   116fc:	ldr	r1, [r5, #4]
   11700:	add	r6, r6, #1
   11704:	cmp	r1, r6
   11708:	bgt	116c8 <grafo_apaga@@Base+0x28>
   1170c:	mov	r0, r2
   11710:	bl	10f08 <free@plt>
   11714:	mov	r0, r5
   11718:	pop	{r4, r5, r6, lr}
   1171c:	b	10f08 <free@plt>

00011720 <grafo_remove@@Base>:
   11720:	push	{r4, r5, r6, lr}
   11724:	subs	r6, r0, #0
   11728:	popeq	{r4, r5, r6, pc}
   1172c:	ldr	r3, [r6, #8]
   11730:	add	r3, r3, r1, lsl #3
   11734:	ldr	ip, [r3, #4]
   11738:	cmp	ip, #0
   1173c:	popeq	{r4, r5, r6, pc}
   11740:	mov	r4, r2
   11744:	ldr	r2, [ip]
   11748:	mov	r5, r1
   1174c:	cmp	r2, r4
   11750:	beq	1181c <grafo_remove@@Base+0xfc>
   11754:	ldr	r3, [ip, #4]
   11758:	cmp	r3, #0
   1175c:	beq	1178c <grafo_remove@@Base+0x6c>
   11760:	ldr	r2, [r3]
   11764:	cmp	r4, r2
   11768:	bne	11780 <grafo_remove@@Base+0x60>
   1176c:	b	117ec <grafo_remove@@Base+0xcc>
   11770:	ldr	ip, [r0]
   11774:	cmp	r4, ip
   11778:	beq	117f4 <grafo_remove@@Base+0xd4>
   1177c:	mov	r3, r0
   11780:	ldr	r0, [r3, #4]
   11784:	cmp	r0, #0
   11788:	bne	11770 <grafo_remove@@Base+0x50>
   1178c:	ldr	r3, [r6]
   11790:	cmp	r3, #0
   11794:	popne	{r4, r5, r6, pc}
   11798:	ldr	r3, [r6, #8]
   1179c:	add	r4, r3, r4, lsl #3
   117a0:	ldr	r2, [r4, #4]
   117a4:	ldr	r3, [r2]
   117a8:	cmp	r5, r3
   117ac:	ldr	r3, [r2, #4]
   117b0:	beq	11830 <grafo_remove@@Base+0x110>
   117b4:	cmp	r3, #0
   117b8:	popeq	{r4, r5, r6, pc}
   117bc:	ldr	r1, [r3]
   117c0:	cmp	r5, r1
   117c4:	bne	117dc <grafo_remove@@Base+0xbc>
   117c8:	b	11804 <grafo_remove@@Base+0xe4>
   117cc:	ldr	r2, [r0]
   117d0:	cmp	r5, r2
   117d4:	beq	1180c <grafo_remove@@Base+0xec>
   117d8:	mov	r3, r0
   117dc:	ldr	r0, [r3, #4]
   117e0:	cmp	r0, #0
   117e4:	bne	117cc <grafo_remove@@Base+0xac>
   117e8:	pop	{r4, r5, r6, pc}
   117ec:	mov	r0, r3
   117f0:	mov	r3, ip
   117f4:	ldr	r2, [r0, #4]
   117f8:	str	r2, [r3, #4]
   117fc:	bl	10f08 <free@plt>
   11800:	b	1178c <grafo_remove@@Base+0x6c>
   11804:	mov	r0, r3
   11808:	mov	r3, r2
   1180c:	ldr	r2, [r0, #4]
   11810:	pop	{r4, r5, r6, lr}
   11814:	str	r2, [r3, #4]
   11818:	b	10f08 <free@plt>
   1181c:	ldr	r2, [ip, #4]
   11820:	mov	r0, ip
   11824:	str	r2, [r3, #4]
   11828:	bl	10f08 <free@plt>
   1182c:	b	1178c <grafo_remove@@Base+0x6c>
   11830:	str	r3, [r4, #4]
   11834:	mov	r0, r2
   11838:	pop	{r4, r5, r6, lr}
   1183c:	b	10f08 <free@plt>

00011840 <grafo_aresta@@Base>:
   11840:	cmp	r0, #0
   11844:	bxeq	lr
   11848:	ldr	r3, [r0, #8]
   1184c:	add	r1, r3, r1, lsl #3
   11850:	ldr	r0, [r1, #4]
   11854:	cmp	r0, #0
   11858:	bxeq	lr
   1185c:	ldr	r3, [r0]
   11860:	cmp	r2, r3
   11864:	bne	11878 <grafo_aresta@@Base+0x38>
   11868:	b	11888 <grafo_aresta@@Base+0x48>
   1186c:	ldr	r3, [r0]
   11870:	cmp	r3, r2
   11874:	beq	11888 <grafo_aresta@@Base+0x48>
   11878:	ldr	r0, [r0, #4]
   1187c:	cmp	r0, #0
   11880:	bne	1186c <grafo_aresta@@Base+0x2c>
   11884:	bx	lr
   11888:	mov	r0, #1
   1188c:	bx	lr

00011890 <grafo_adiciona@@Base>:
   11890:	subs	r3, r0, #0
   11894:	bxeq	lr
   11898:	push	{r4, r5, r6, lr}
   1189c:	mov	r4, r1
   118a0:	mov	r6, r2
   118a4:	mov	r5, r3
   118a8:	bl	11840 <grafo_aresta@@Base>
   118ac:	cmp	r0, #0
   118b0:	popne	{r4, r5, r6, pc}
   118b4:	mov	r0, r6
   118b8:	bl	11624 <cria_no@@Base>
   118bc:	ldr	r3, [r5, #8]
   118c0:	ldr	lr, [r5]
   118c4:	add	r1, r3, r4, lsl #3
   118c8:	ldr	r2, [r3, r4, lsl #3]
   118cc:	ldr	ip, [r1, #4]
   118d0:	cmp	lr, #0
   118d4:	add	r2, r2, #1
   118d8:	str	ip, [r0, #4]
   118dc:	str	r0, [r1, #4]
   118e0:	str	r2, [r3, r4, lsl #3]
   118e4:	popne	{r4, r5, r6, pc}
   118e8:	mov	r0, r4
   118ec:	bl	11624 <cria_no@@Base>
   118f0:	ldr	r3, [r5, #8]
   118f4:	add	r1, r3, r6, lsl #3
   118f8:	ldr	r2, [r3, r6, lsl #3]
   118fc:	ldr	ip, [r1, #4]
   11900:	add	r2, r2, #1
   11904:	str	ip, [r0, #4]
   11908:	str	r0, [r1, #4]
   1190c:	str	r2, [r3, r6, lsl #3]
   11910:	pop	{r4, r5, r6, pc}

00011914 <grafo_imprime@@Base>:
   11914:	ldr	r3, [r0, #4]
   11918:	cmp	r3, #0
   1191c:	bxle	lr
   11920:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11924:	mov	r7, r0
   11928:	ldr	r9, [pc, #132]	; 119b4 <grafo_imprime@@Base+0xa0>
   1192c:	ldr	sl, [pc, #132]	; 119b8 <grafo_imprime@@Base+0xa4>
   11930:	ldr	r5, [pc, #132]	; 119bc <grafo_imprime@@Base+0xa8>
   11934:	add	r9, pc, r9
   11938:	add	sl, pc, sl
   1193c:	add	r5, pc, r5
   11940:	mov	r6, #0
   11944:	mov	r8, #10
   11948:	ldr	r3, [r7, #8]
   1194c:	mov	r1, r6
   11950:	add	r3, r3, r6, lsl #3
   11954:	mov	r0, r9
   11958:	ldr	r4, [r3, #4]
   1195c:	bl	10ee4 <printf@plt>
   11960:	cmp	r4, #0
   11964:	beq	11998 <grafo_imprime@@Base+0x84>
   11968:	ldr	r1, [r4]
   1196c:	mov	r0, sl
   11970:	bl	10ee4 <printf@plt>
   11974:	ldr	r4, [r4, #4]
   11978:	cmp	r4, #0
   1197c:	beq	11998 <grafo_imprime@@Base+0x84>
   11980:	ldr	r1, [r4]
   11984:	mov	r0, r5
   11988:	bl	10ee4 <printf@plt>
   1198c:	ldr	r4, [r4, #4]
   11990:	cmp	r4, #0
   11994:	bne	11980 <grafo_imprime@@Base+0x6c>
   11998:	mov	r0, r8
   1199c:	bl	10f80 <putchar@plt>
   119a0:	ldr	r3, [r7, #4]
   119a4:	add	r6, r6, #1
   119a8:	cmp	r3, r6
   119ac:	bgt	11948 <grafo_imprime@@Base+0x34>
   119b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119b4:	andeq	r1, r0, ip, lsr #7
   119b8:			; <UNDEFINED> instruction: 0x000013b0
   119bc:			; <UNDEFINED> instruction: 0x000013b0

000119c0 <v_sucessores@@Base>:
   119c0:	push	{r4, r5, r6, r7, r8, lr}
   119c4:	lsr	r4, r1, #31
   119c8:	cmp	r0, #0
   119cc:	orreq	r4, r4, #1
   119d0:	cmp	r4, #0
   119d4:	bne	11a5c <v_sucessores@@Base+0x9c>
   119d8:	ldr	r3, [r0, #4]
   119dc:	cmp	r1, r3
   119e0:	movge	r7, r4
   119e4:	bge	11a54 <v_sucessores@@Base+0x94>
   119e8:	mov	r5, r0
   119ec:	mov	r6, r1
   119f0:	bl	12654 <vetor_novo@@Base>
   119f4:	ldr	r3, [r5, #4]
   119f8:	cmp	r3, #0
   119fc:	mov	r7, r0
   11a00:	ble	11a54 <v_sucessores@@Base+0x94>
   11a04:	mvn	r8, #0
   11a08:	b	11a1c <v_sucessores@@Base+0x5c>
   11a0c:	ldr	r3, [r5, #4]
   11a10:	add	r4, r4, #1
   11a14:	cmp	r3, r4
   11a18:	ble	11a54 <v_sucessores@@Base+0x94>
   11a1c:	mov	r2, r4
   11a20:	mov	r1, r6
   11a24:	mov	r0, r5
   11a28:	bl	11840 <grafo_aresta@@Base>
   11a2c:	cmp	r0, #0
   11a30:	beq	11a0c <v_sucessores@@Base+0x4c>
   11a34:	mov	r1, r4
   11a38:	mov	r2, r8
   11a3c:	mov	r0, r7
   11a40:	bl	1270c <vetor_insere@@Base>
   11a44:	ldr	r3, [r5, #4]
   11a48:	add	r4, r4, #1
   11a4c:	cmp	r3, r4
   11a50:	bgt	11a1c <v_sucessores@@Base+0x5c>
   11a54:	mov	r0, r7
   11a58:	pop	{r4, r5, r6, r7, r8, pc}
   11a5c:	mov	r7, #0
   11a60:	mov	r0, r7
   11a64:	pop	{r4, r5, r6, r7, r8, pc}

00011a68 <v_antecessores@@Base>:
   11a68:	push	{r4, r5, r6, r7, r8, lr}
   11a6c:	lsr	r4, r1, #31
   11a70:	cmp	r0, #0
   11a74:	orreq	r4, r4, #1
   11a78:	cmp	r4, #0
   11a7c:	bne	11b04 <v_antecessores@@Base+0x9c>
   11a80:	ldr	r3, [r0, #4]
   11a84:	cmp	r1, r3
   11a88:	movge	r7, r4
   11a8c:	bge	11afc <v_antecessores@@Base+0x94>
   11a90:	mov	r5, r0
   11a94:	mov	r6, r1
   11a98:	bl	12654 <vetor_novo@@Base>
   11a9c:	ldr	r3, [r5, #4]
   11aa0:	cmp	r3, #0
   11aa4:	mov	r7, r0
   11aa8:	ble	11afc <v_antecessores@@Base+0x94>
   11aac:	mvn	r8, #0
   11ab0:	b	11ac4 <v_antecessores@@Base+0x5c>
   11ab4:	ldr	r3, [r5, #4]
   11ab8:	add	r4, r4, #1
   11abc:	cmp	r3, r4
   11ac0:	ble	11afc <v_antecessores@@Base+0x94>
   11ac4:	mov	r2, r6
   11ac8:	mov	r1, r4
   11acc:	mov	r0, r5
   11ad0:	bl	11840 <grafo_aresta@@Base>
   11ad4:	cmp	r0, #0
   11ad8:	beq	11ab4 <v_antecessores@@Base+0x4c>
   11adc:	mov	r1, r4
   11ae0:	mov	r2, r8
   11ae4:	mov	r0, r7
   11ae8:	bl	1270c <vetor_insere@@Base>
   11aec:	ldr	r3, [r5, #4]
   11af0:	add	r4, r4, #1
   11af4:	cmp	r3, r4
   11af8:	bgt	11ac4 <v_antecessores@@Base+0x5c>
   11afc:	mov	r0, r7
   11b00:	pop	{r4, r5, r6, r7, r8, pc}
   11b04:	mov	r7, #0
   11b08:	mov	r0, r7
   11b0c:	pop	{r4, r5, r6, r7, r8, pc}

00011b10 <dfs_helper@@Base>:
   11b10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b14:	sub	sp, sp, #8
   11b18:	ldr	r8, [sp, #40]	; 0x28
   11b1c:	ldr	sl, [r8, r1, lsl #2]
   11b20:	cmp	sl, #0
   11b24:	movne	sl, #0
   11b28:	bne	11bac <dfs_helper@@Base+0x9c>
   11b2c:	cmp	r1, r2
   11b30:	str	r3, [r8, r1, lsl #2]
   11b34:	moveq	sl, r3
   11b38:	beq	11bac <dfs_helper@@Base+0x9c>
   11b3c:	mov	r9, r2
   11b40:	ldr	r2, [r0, #4]
   11b44:	mov	r5, r0
   11b48:	cmp	r2, #0
   11b4c:	mov	r6, r1
   11b50:	addgt	r7, r3, #1
   11b54:	movgt	r4, sl
   11b58:	bgt	11b70 <dfs_helper@@Base+0x60>
   11b5c:	b	11bb8 <dfs_helper@@Base+0xa8>
   11b60:	ldr	r3, [r5, #4]
   11b64:	add	r4, r4, #1
   11b68:	cmp	r3, r4
   11b6c:	ble	11bb8 <dfs_helper@@Base+0xa8>
   11b70:	mov	r2, r4
   11b74:	mov	r1, r6
   11b78:	mov	r0, r5
   11b7c:	bl	11840 <grafo_aresta@@Base>
   11b80:	cmp	r0, #0
   11b84:	beq	11b60 <dfs_helper@@Base+0x50>
   11b88:	str	r8, [sp]
   11b8c:	mov	r3, r7
   11b90:	mov	r2, r9
   11b94:	mov	r1, r4
   11b98:	mov	r0, r5
   11b9c:	bl	11b10 <dfs_helper@@Base>
   11ba0:	cmp	r0, #0
   11ba4:	beq	11b60 <dfs_helper@@Base+0x50>
   11ba8:	mov	sl, r0
   11bac:	mov	r0, sl
   11bb0:	add	sp, sp, #8
   11bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bb8:	mov	r3, #0
   11bbc:	mov	r0, sl
   11bc0:	str	r3, [r8, r6, lsl #2]
   11bc4:	add	sp, sp, #8
   11bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011bcc <grafo_dfs@@Base>:
   11bcc:	push	{r4, r5, r6, r7, r8, lr}
   11bd0:	subs	r4, r0, #0
   11bd4:	sub	sp, sp, #8
   11bd8:	beq	11cd8 <grafo_dfs@@Base+0x10c>
   11bdc:	mov	r7, r1
   11be0:	ldr	r0, [r4, #4]
   11be4:	mov	r1, #4
   11be8:	mov	r6, r3
   11bec:	mov	r8, r2
   11bf0:	bl	10eb4 <calloc@plt>
   11bf4:	mov	r1, r7
   11bf8:	mov	r2, r8
   11bfc:	mov	r3, #1
   11c00:	str	r0, [sp]
   11c04:	mov	r5, r0
   11c08:	mov	r0, r4
   11c0c:	bl	11b10 <dfs_helper@@Base>
   11c10:	subs	r7, r0, #0
   11c14:	beq	11cbc <grafo_dfs@@Base+0xf0>
   11c18:	mov	r1, #4
   11c1c:	bl	10eb4 <calloc@plt>
   11c20:	cmp	r7, #0
   11c24:	mov	r8, r0
   11c28:	ble	11c88 <grafo_dfs@@Base+0xbc>
   11c2c:	ldr	lr, [r4, #4]
   11c30:	mov	ip, #1
   11c34:	mov	r4, r0
   11c38:	cmp	lr, #0
   11c3c:	movle	r3, ip
   11c40:	ble	11c78 <grafo_dfs@@Base+0xac>
   11c44:	ldr	r2, [r5]
   11c48:	mov	r3, ip
   11c4c:	cmp	r2, ip
   11c50:	movne	r1, r5
   11c54:	movne	r2, #0
   11c58:	bne	11c6c <grafo_dfs@@Base+0xa0>
   11c5c:	b	11ca0 <grafo_dfs@@Base+0xd4>
   11c60:	ldr	r0, [r1, #4]!
   11c64:	cmp	r0, ip
   11c68:	beq	11ca4 <grafo_dfs@@Base+0xd8>
   11c6c:	add	r2, r2, #1
   11c70:	cmp	r2, lr
   11c74:	bne	11c60 <grafo_dfs@@Base+0x94>
   11c78:	cmp	r3, r7
   11c7c:	add	ip, ip, #1
   11c80:	add	r4, r4, #4
   11c84:	blt	11c38 <grafo_dfs@@Base+0x6c>
   11c88:	str	r7, [r6]
   11c8c:	mov	r0, r5
   11c90:	bl	10f08 <free@plt>
   11c94:	mov	r0, r8
   11c98:	add	sp, sp, #8
   11c9c:	pop	{r4, r5, r6, r7, r8, pc}
   11ca0:	mov	r2, #0
   11ca4:	cmp	r3, r7
   11ca8:	str	r2, [r4]
   11cac:	add	ip, ip, #1
   11cb0:	add	r4, r4, #4
   11cb4:	blt	11c38 <grafo_dfs@@Base+0x6c>
   11cb8:	b	11c88 <grafo_dfs@@Base+0xbc>
   11cbc:	mov	r0, r5
   11cc0:	bl	10f08 <free@plt>
   11cc4:	mov	r8, r7
   11cc8:	mov	r0, r8
   11ccc:	str	r7, [r6]
   11cd0:	add	sp, sp, #8
   11cd4:	pop	{r4, r5, r6, r7, r8, pc}
   11cd8:	mov	r8, r4
   11cdc:	b	11c94 <grafo_dfs@@Base+0xc8>

00011ce0 <grafo_bfs@@Base>:
   11ce0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11ce4:	sub	sp, sp, #28
   11ce8:	subs	r5, r0, #0
   11cec:	str	r2, [sp, #12]
   11cf0:	str	r3, [sp, #20]
   11cf4:	beq	11ea0 <grafo_bfs@@Base+0x1c0>
   11cf8:	ldr	r4, [r5, #4]
   11cfc:	mov	r6, r1
   11d00:	mov	r0, r4
   11d04:	mov	r1, #4
   11d08:	bl	10eb4 <calloc@plt>
   11d0c:	mov	r1, #4
   11d10:	mov	r9, r0
   11d14:	mov	r0, r4
   11d18:	bl	10eb4 <calloc@plt>
   11d1c:	cmp	r4, #0
   11d20:	movgt	r3, r9
   11d24:	addgt	r1, r9, r4, lsl #2
   11d28:	mvngt	r2, #0
   11d2c:	str	r0, [sp, #8]
   11d30:	ble	11d40 <grafo_bfs@@Base+0x60>
   11d34:	str	r2, [r3], #4
   11d38:	cmp	r1, r3
   11d3c:	bne	11d34 <grafo_bfs@@Base+0x54>
   11d40:	ldr	r3, [sp, #8]
   11d44:	mov	r7, #1
   11d48:	mov	r8, #0
   11d4c:	mov	fp, r3
   11d50:	str	r6, [r9, r6, lsl #2]
   11d54:	str	r6, [r3]
   11d58:	str	r9, [sp, #4]
   11d5c:	add	r0, r8, #1
   11d60:	mov	r1, r4
   11d64:	bl	12b1c <vetor_ordena@@Base+0x298>
   11d68:	cmp	r4, #0
   11d6c:	ldr	sl, [fp, r8, lsl #2]
   11d70:	mov	r8, r1
   11d74:	ble	11de8 <grafo_bfs@@Base+0x108>
   11d78:	ldr	r6, [sp, #4]
   11d7c:	mov	r4, #0
   11d80:	b	11d98 <grafo_bfs@@Base+0xb8>
   11d84:	ldr	r9, [r5, #4]
   11d88:	add	r4, r4, #1
   11d8c:	cmp	r4, r9
   11d90:	add	r6, r6, #4
   11d94:	bge	11de8 <grafo_bfs@@Base+0x108>
   11d98:	mov	r2, r4
   11d9c:	mov	r1, sl
   11da0:	mov	r0, r5
   11da4:	bl	11840 <grafo_aresta@@Base>
   11da8:	cmp	r0, #0
   11dac:	beq	11d84 <grafo_bfs@@Base+0xa4>
   11db0:	ldr	r3, [r6]
   11db4:	ldr	r9, [r5, #4]
   11db8:	cmn	r3, #1
   11dbc:	bne	11d88 <grafo_bfs@@Base+0xa8>
   11dc0:	str	r4, [fp, r7, lsl #2]
   11dc4:	add	r0, r7, #1
   11dc8:	str	sl, [r6]
   11dcc:	mov	r1, r9
   11dd0:	bl	12b1c <vetor_ordena@@Base+0x298>
   11dd4:	add	r4, r4, #1
   11dd8:	cmp	r4, r9
   11ddc:	add	r6, r6, #4
   11de0:	mov	r7, r1
   11de4:	blt	11d98 <grafo_bfs@@Base+0xb8>
   11de8:	cmp	r8, r7
   11dec:	ldrne	r4, [r5, #4]
   11df0:	bne	11d5c <grafo_bfs@@Base+0x7c>
   11df4:	ldr	r9, [sp, #4]
   11df8:	ldr	r3, [sp, #12]
   11dfc:	ldr	r5, [r9, r3, lsl #2]
   11e00:	cmp	r5, #0
   11e04:	movlt	r6, #0
   11e08:	blt	11e64 <grafo_bfs@@Base+0x184>
   11e0c:	cmp	r3, r5
   11e10:	beq	11e88 <grafo_bfs@@Base+0x1a8>
   11e14:	mov	r3, r5
   11e18:	mov	r6, #1
   11e1c:	ldr	r2, [r9, r3, lsl #2]
   11e20:	add	r6, r6, #1
   11e24:	cmp	r2, r3
   11e28:	mov	r3, r2
   11e2c:	bne	11e1c <grafo_bfs@@Base+0x13c>
   11e30:	lsl	r4, r6, #2
   11e34:	mov	r0, r4
   11e38:	bl	10f44 <malloc@plt>
   11e3c:	str	r0, [sp, #16]
   11e40:	ldr	r1, [sp, #16]
   11e44:	ldr	r2, [sp, #12]
   11e48:	add	r3, r1, r4
   11e4c:	b	11e58 <grafo_bfs@@Base+0x178>
   11e50:	mov	r2, r5
   11e54:	ldr	r5, [r9, r5, lsl #2]
   11e58:	str	r2, [r3, #-4]!
   11e5c:	cmp	r3, r1
   11e60:	bne	11e50 <grafo_bfs@@Base+0x170>
   11e64:	ldr	r0, [sp, #8]
   11e68:	bl	10f08 <free@plt>
   11e6c:	mov	r0, r9
   11e70:	bl	10f08 <free@plt>
   11e74:	ldr	r3, [sp, #20]
   11e78:	str	r6, [r3]
   11e7c:	ldr	r0, [sp, #16]
   11e80:	add	sp, sp, #28
   11e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11e88:	mov	r0, #4
   11e8c:	bl	10f44 <malloc@plt>
   11e90:	mov	r6, #1
   11e94:	mov	r4, #4
   11e98:	str	r0, [sp, #16]
   11e9c:	b	11e40 <grafo_bfs@@Base+0x160>
   11ea0:	str	r5, [sp, #16]
   11ea4:	b	11e7c <grafo_bfs@@Base+0x19c>

00011ea8 <heap_nova@@Base>:
   11ea8:	push	{r4, r5, r6, lr}
   11eac:	mov	r5, r0
   11eb0:	mov	r0, #12
   11eb4:	bl	10f44 <malloc@plt>
   11eb8:	subs	r4, r0, #0
   11ebc:	beq	11ee8 <heap_nova@@Base+0x40>
   11ec0:	mov	r3, #0
   11ec4:	str	r5, [r4, #4]
   11ec8:	mov	r0, r5
   11ecc:	str	r3, [r4]
   11ed0:	mov	r1, #4
   11ed4:	bl	10eb4 <calloc@plt>
   11ed8:	cmp	r0, #0
   11edc:	mov	r5, r0
   11ee0:	str	r0, [r4, #8]
   11ee4:	beq	11ef0 <heap_nova@@Base+0x48>
   11ee8:	mov	r0, r4
   11eec:	pop	{r4, r5, r6, pc}
   11ef0:	mov	r0, r4
   11ef4:	bl	10f08 <free@plt>
   11ef8:	mov	r4, r5
   11efc:	b	11ee8 <heap_nova@@Base+0x40>

00011f00 <heap_apaga@@Base>:
   11f00:	push	{r4, r5, r6, lr}
   11f04:	subs	r5, r0, #0
   11f08:	popeq	{r4, r5, r6, pc}
   11f0c:	ldr	r3, [r5]
   11f10:	cmp	r3, #0
   11f14:	ldrle	r0, [r5, #8]
   11f18:	ble	11f58 <heap_apaga@@Base+0x58>
   11f1c:	mov	r4, #0
   11f20:	ldr	r0, [r5, #8]
   11f24:	mov	r6, r4
   11f28:	ldr	r3, [r0, r4, lsl #2]
   11f2c:	ldr	r0, [r3, #4]
   11f30:	bl	10f08 <free@plt>
   11f34:	ldr	r3, [r5, #8]
   11f38:	ldr	r0, [r3, r4, lsl #2]
   11f3c:	bl	10f08 <free@plt>
   11f40:	ldr	r0, [r5, #8]
   11f44:	ldr	r3, [r5]
   11f48:	str	r6, [r0, r4, lsl #2]
   11f4c:	add	r4, r4, #1
   11f50:	cmp	r3, r4
   11f54:	bgt	11f28 <heap_apaga@@Base+0x28>
   11f58:	bl	10f08 <free@plt>
   11f5c:	mov	r0, r5
   11f60:	pop	{r4, r5, r6, lr}
   11f64:	b	10f08 <free@plt>

00011f68 <elemento_cria@@Base>:
   11f68:	push	{r4, r5, r6, r7, r8, lr}
   11f6c:	mov	r8, r0
   11f70:	mov	r0, #8
   11f74:	mov	r5, r1
   11f78:	bl	10f44 <malloc@plt>
   11f7c:	subs	r4, r0, #0
   11f80:	beq	11fbc <elemento_cria@@Base+0x54>
   11f84:	mov	r0, r5
   11f88:	bl	10f68 <strlen@plt>
   11f8c:	mov	r1, #1
   11f90:	add	r7, r0, r1
   11f94:	mov	r0, r7
   11f98:	bl	10eb4 <calloc@plt>
   11f9c:	cmp	r0, #0
   11fa0:	mov	r6, r0
   11fa4:	str	r0, [r4, #4]
   11fa8:	beq	11fc4 <elemento_cria@@Base+0x5c>
   11fac:	mov	r2, r7
   11fb0:	mov	r1, r5
   11fb4:	bl	10f14 <memcpy@plt>
   11fb8:	str	r8, [r4]
   11fbc:	mov	r0, r4
   11fc0:	pop	{r4, r5, r6, r7, r8, pc}
   11fc4:	mov	r0, r4
   11fc8:	bl	10f08 <free@plt>
   11fcc:	mov	r4, r6
   11fd0:	b	11fbc <elemento_cria@@Base+0x54>

00011fd4 <mostraHeap@@Base>:
   11fd4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11fd8:	mov	r8, r0
   11fdc:	ldr	r6, [pc, #208]	; 120b4 <mostraHeap@@Base+0xe0>
   11fe0:	ldr	r9, [pc, #208]	; 120b8 <mostraHeap@@Base+0xe4>
   11fe4:	add	r6, pc, r6
   11fe8:	add	r9, pc, r9
   11fec:	mov	r7, r1
   11ff0:	ldr	r3, [r8]
   11ff4:	cmp	r3, r7
   11ff8:	bgt	12008 <mostraHeap@@Base+0x34>
   11ffc:	mov	r0, #10
   12000:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   12004:	b	10f80 <putchar@plt>
   12008:	cmp	r7, #0
   1200c:	ble	12074 <mostraHeap@@Base+0xa0>
   12010:	mov	r4, r7
   12014:	mov	r5, #0
   12018:	sub	r4, r4, #1
   1201c:	add	r5, r5, #1
   12020:	asrs	r4, r4, #1
   12024:	bne	12018 <mostraHeap@@Base+0x44>
   12028:	lsl	r1, r7, #1
   1202c:	add	r1, r1, #1
   12030:	mov	r0, r8
   12034:	bl	11fd4 <mostraHeap@@Base>
   12038:	add	r5, r5, r5, lsl #1
   1203c:	add	r4, r4, #1
   12040:	mov	r0, r6
   12044:	bl	10ee4 <printf@plt>
   12048:	cmp	r4, r5
   1204c:	bne	1203c <mostraHeap@@Base+0x68>
   12050:	ldr	r3, [r8, #8]
   12054:	mov	r0, r9
   12058:	ldr	r3, [r3, r7, lsl #2]
   1205c:	add	r7, r7, #1
   12060:	ldr	r2, [r3]
   12064:	ldr	r1, [r3, #4]
   12068:	bl	10ee4 <printf@plt>
   1206c:	lsl	r7, r7, #1
   12070:	b	11ff0 <mostraHeap@@Base+0x1c>
   12074:	lsl	r1, r7, #1
   12078:	mov	r0, r8
   1207c:	add	r1, r1, #1
   12080:	bl	11fd4 <mostraHeap@@Base>
   12084:	ldr	r3, [r8, #8]
   12088:	ldr	r0, [pc, #44]	; 120bc <mostraHeap@@Base+0xe8>
   1208c:	ldr	r3, [r3, r7, lsl #2]
   12090:	add	r0, pc, r0
   12094:	ldr	r1, [r3, #4]
   12098:	ldr	r2, [r3]
   1209c:	bl	10ee4 <printf@plt>
   120a0:	add	r1, r7, #1
   120a4:	mov	r0, r8
   120a8:	lsl	r1, r1, #1
   120ac:	bl	11fd4 <mostraHeap@@Base>
   120b0:	b	11ffc <mostraHeap@@Base+0x28>
   120b4:	andeq	r0, r0, r0, lsl sp
   120b8:	andeq	r0, r0, r4, lsl sp
   120bc:	andeq	r0, r0, ip, ror #24

000120c0 <menor_que@@Base>:
   120c0:	cmp	r1, #0
   120c4:	cmpne	r0, #0
   120c8:	beq	120e4 <menor_que@@Base+0x24>
   120cc:	ldr	r0, [r0]
   120d0:	ldr	r3, [r1]
   120d4:	cmp	r0, r3
   120d8:	movge	r0, #0
   120dc:	movlt	r0, #1
   120e0:	bx	lr
   120e4:	mov	r0, #0
   120e8:	bx	lr

000120ec <heap_insere@@Base>:
   120ec:	ldr	ip, [r0]
   120f0:	ldr	r3, [r0, #4]
   120f4:	cmp	ip, r3
   120f8:	blt	12104 <heap_insere@@Base+0x18>
   120fc:	mov	r0, #0
   12100:	bx	lr
   12104:	push	{r4, r5, r6, lr}
   12108:	mov	r6, r0
   1210c:	mov	r0, r2
   12110:	bl	11f68 <elemento_cria@@Base>
   12114:	cmp	r0, #0
   12118:	beq	1218c <heap_insere@@Base+0xa0>
   1211c:	ldr	r4, [r6]
   12120:	ldr	r3, [r6, #8]
   12124:	add	r2, r4, #1
   12128:	cmp	r4, #0
   1212c:	str	r0, [r3, r4, lsl #2]
   12130:	str	r2, [r6]
   12134:	beq	12184 <heap_insere@@Base+0x98>
   12138:	lsl	r2, r4, #2
   1213c:	b	12160 <heap_insere@@Base+0x74>
   12140:	ldr	r3, [r6, #8]
   12144:	cmp	r4, #0
   12148:	ldr	r1, [r3, r4, lsl #2]
   1214c:	ldr	r0, [r3, r5]
   12150:	str	r0, [r3, r4, lsl #2]
   12154:	str	r1, [r3, r5]
   12158:	beq	12184 <heap_insere@@Base+0x98>
   1215c:	ldr	r0, [r3, r2]
   12160:	sub	r4, r4, #1
   12164:	mov	r5, r2
   12168:	add	r4, r4, r4, lsr #31
   1216c:	asr	r4, r4, #1
   12170:	ldr	r1, [r3, r4, lsl #2]
   12174:	bl	120c0 <menor_que@@Base>
   12178:	lsl	r2, r4, #2
   1217c:	cmp	r0, #0
   12180:	bne	12140 <heap_insere@@Base+0x54>
   12184:	mov	r0, #1
   12188:	pop	{r4, r5, r6, pc}
   1218c:	mov	r0, #0
   12190:	pop	{r4, r5, r6, pc}

00012194 <heap_remove@@Base>:
   12194:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12198:	subs	r8, r0, #0
   1219c:	beq	1226c <heap_remove@@Base+0xd8>
   121a0:	ldr	r3, [r8]
   121a4:	cmp	r3, #0
   121a8:	ble	1226c <heap_remove@@Base+0xd8>
   121ac:	ldr	r3, [r8, #8]
   121b0:	mov	r4, #0
   121b4:	ldr	r3, [r3]
   121b8:	mov	r0, r3
   121bc:	ldr	r7, [r3, #4]
   121c0:	bl	10f08 <free@plt>
   121c4:	ldr	r2, [r8]
   121c8:	ldr	r3, [r8, #8]
   121cc:	sub	r2, r2, #1
   121d0:	cmp	r2, #1
   121d4:	ldr	r1, [r3, r2, lsl #2]
   121d8:	str	r2, [r8]
   121dc:	str	r1, [r3]
   121e0:	str	r4, [r3, r2, lsl #2]
   121e4:	ble	12270 <heap_remove@@Base+0xdc>
   121e8:	mov	r5, #1
   121ec:	b	1222c <heap_remove@@Base+0x98>
   121f0:	ldr	r1, [r3, r9, lsl #2]
   121f4:	ldr	r0, [r3, r4, lsl #2]
   121f8:	bl	120c0 <menor_que@@Base>
   121fc:	lsl	r5, r4, #1
   12200:	add	r5, r5, #1
   12204:	cmp	r0, #0
   12208:	beq	12270 <heap_remove@@Base+0xdc>
   1220c:	ldr	r3, [r8, #8]
   12210:	ldr	r2, [r8]
   12214:	ldr	r1, [r3, r4, lsl #2]
   12218:	ldr	r0, [r3, r9, lsl #2]
   1221c:	cmp	r5, r2
   12220:	str	r0, [r3, r4, lsl #2]
   12224:	str	r1, [r3, r9, lsl #2]
   12228:	bge	12270 <heap_remove@@Base+0xdc>
   1222c:	add	r1, r4, #1
   12230:	mov	r9, r4
   12234:	lsl	r6, r1, #1
   12238:	cmp	r6, r2
   1223c:	movge	r4, r5
   12240:	bge	121f0 <heap_remove@@Base+0x5c>
   12244:	add	r2, r3, r1, lsl #3
   12248:	ldr	r0, [r3, r1, lsl #3]
   1224c:	ldr	r1, [r2, #-4]
   12250:	bl	120c0 <menor_que@@Base>
   12254:	mov	r9, r4
   12258:	ldr	r3, [r8, #8]
   1225c:	mov	r4, r6
   12260:	cmp	r0, #0
   12264:	moveq	r4, r5
   12268:	b	121f0 <heap_remove@@Base+0x5c>
   1226c:	mov	r7, #0
   12270:	mov	r0, r7
   12274:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00012278 <novo_str@@Base>:
   12278:	push	{r4, r5, r6, r7, r8, lr}
   1227c:	mov	r5, r0
   12280:	mov	r0, #12
   12284:	bl	10f44 <malloc@plt>
   12288:	subs	r4, r0, #0
   1228c:	beq	122cc <novo_str@@Base+0x54>
   12290:	mov	r0, r5
   12294:	bl	10f68 <strlen@plt>
   12298:	add	r7, r0, #1
   1229c:	mov	r0, r7
   122a0:	bl	10f44 <malloc@plt>
   122a4:	cmp	r0, #0
   122a8:	mov	r6, r0
   122ac:	str	r0, [r4]
   122b0:	beq	122d4 <novo_str@@Base+0x5c>
   122b4:	mov	r2, r7
   122b8:	mov	r1, r5
   122bc:	bl	10f14 <memcpy@plt>
   122c0:	mov	r3, #0
   122c4:	str	r3, [r4, #4]
   122c8:	str	r3, [r4, #8]
   122cc:	mov	r0, r4
   122d0:	pop	{r4, r5, r6, r7, r8, pc}
   122d4:	mov	r0, r4
   122d8:	bl	10f08 <free@plt>
   122dc:	mov	r4, r6
   122e0:	b	122cc <novo_str@@Base+0x54>

000122e4 <lista_nova@@Base>:
   122e4:	push	{r4, lr}
   122e8:	mov	r0, #12
   122ec:	bl	10f44 <malloc@plt>
   122f0:	cmp	r0, #0
   122f4:	movne	r3, #0
   122f8:	strne	r3, [r0]
   122fc:	strne	r3, [r0, #4]
   12300:	strne	r3, [r0, #8]
   12304:	pop	{r4, pc}

00012308 <lista_apaga@@Base>:
   12308:	push	{r4, r5, r6, lr}
   1230c:	subs	r5, r0, #0
   12310:	bne	1232c <lista_apaga@@Base+0x24>
   12314:	b	12344 <lista_apaga@@Base+0x3c>
   12318:	ldm	r4, {r0, r3}
   1231c:	str	r3, [r5]
   12320:	bl	10f08 <free@plt>
   12324:	mov	r0, r4
   12328:	bl	10f08 <free@plt>
   1232c:	ldr	r4, [r5]
   12330:	cmp	r4, #0
   12334:	bne	12318 <lista_apaga@@Base+0x10>
   12338:	mov	r0, r5
   1233c:	pop	{r4, r5, r6, lr}
   12340:	b	10f08 <free@plt>
   12344:	pop	{r4, r5, r6, pc}

00012348 <lista_tamanho@@Base>:
   12348:	cmp	r0, #0
   1234c:	ldrne	r0, [r0, #8]
   12350:	mvneq	r0, #0
   12354:	bx	lr

00012358 <lista_inicio@@Base>:
   12358:	cmp	r0, #0
   1235c:	ldrne	r0, [r0]
   12360:	bx	lr

00012364 <lista_fim@@Base>:
   12364:	cmp	r0, #0
   12368:	ldrne	r0, [r0, #4]
   1236c:	bx	lr

00012370 <lista_insere@@Base>:
   12370:	cmp	r1, #0
   12374:	cmpne	r0, #0
   12378:	beq	12404 <lista_insere@@Base+0x94>
   1237c:	push	{r4, r5, r6, lr}
   12380:	mov	r5, r0
   12384:	mov	r0, r1
   12388:	mov	r4, r2
   1238c:	bl	12278 <novo_str@@Base>
   12390:	cmp	r0, #0
   12394:	beq	123dc <lista_insere@@Base+0x6c>
   12398:	ldr	r3, [r5, #8]
   1239c:	cmp	r4, #0
   123a0:	add	r3, r3, #1
   123a4:	str	r3, [r5, #8]
   123a8:	ldr	r3, [r5]
   123ac:	beq	123e4 <lista_insere@@Base+0x74>
   123b0:	cmp	r4, r3
   123b4:	streq	r4, [r0, #4]
   123b8:	ldrne	r3, [r4, #8]
   123bc:	streq	r0, [r4, #8]
   123c0:	strne	r3, [r0, #8]
   123c4:	ldrne	r3, [r4, #8]
   123c8:	strne	r4, [r0, #4]
   123cc:	streq	r0, [r5]
   123d0:	strne	r0, [r3, #4]
   123d4:	strne	r0, [r4, #8]
   123d8:	pop	{r4, r5, r6, pc}
   123dc:	mov	r0, #0
   123e0:	pop	{r4, r5, r6, pc}
   123e4:	cmp	r3, #0
   123e8:	streq	r0, [r5, #4]
   123ec:	ldrne	r3, [r5, #4]
   123f0:	streq	r0, [r5]
   123f4:	strne	r3, [r0, #8]
   123f8:	strne	r0, [r3, #4]
   123fc:	strne	r0, [r5, #4]
   12400:	pop	{r4, r5, r6, pc}
   12404:	mov	r0, #0
   12408:	bx	lr

0001240c <lista_remove@@Base>:
   1240c:	cmp	r1, #0
   12410:	cmpne	r0, #0
   12414:	push	{r4, r5, r6, lr}
   12418:	beq	1246c <lista_remove@@Base+0x60>
   1241c:	ldr	r2, [r1, #8]
   12420:	ldr	r3, [r0, #8]
   12424:	cmp	r2, #0
   12428:	sub	r3, r3, #1
   1242c:	str	r3, [r0, #8]
   12430:	ldrne	r3, [r1, #4]
   12434:	ldreq	r5, [r1, #4]
   12438:	strne	r3, [r2, #4]
   1243c:	ldrne	r5, [r1, #4]
   12440:	streq	r5, [r0]
   12444:	cmp	r5, #0
   12448:	streq	r2, [r0, #4]
   1244c:	mov	r4, r1
   12450:	ldr	r0, [r1]
   12454:	strne	r2, [r5, #8]
   12458:	bl	10f08 <free@plt>
   1245c:	mov	r0, r4
   12460:	bl	10f08 <free@plt>
   12464:	mov	r0, r5
   12468:	pop	{r4, r5, r6, pc}
   1246c:	mov	r5, #0
   12470:	mov	r0, r5
   12474:	pop	{r4, r5, r6, pc}

00012478 <lista_pesquisa@@Base>:
   12478:	cmp	r1, #0
   1247c:	cmpne	r0, #0
   12480:	push	{r4, r5, r6, lr}
   12484:	moveq	r4, #1
   12488:	movne	r4, #0
   1248c:	beq	12514 <lista_pesquisa@@Base+0x9c>
   12490:	cmp	r2, #1
   12494:	bhi	124d4 <lista_pesquisa@@Base+0x5c>
   12498:	cmp	r2, #0
   1249c:	mov	r5, r1
   124a0:	bne	124dc <lista_pesquisa@@Base+0x64>
   124a4:	ldr	r4, [r0]
   124a8:	cmp	r4, #0
   124ac:	bne	124c0 <lista_pesquisa@@Base+0x48>
   124b0:	b	124d4 <lista_pesquisa@@Base+0x5c>
   124b4:	ldr	r4, [r4, #4]
   124b8:	cmp	r4, #0
   124bc:	beq	124d4 <lista_pesquisa@@Base+0x5c>
   124c0:	mov	r1, r5
   124c4:	ldr	r0, [r4]
   124c8:	bl	10ecc <strcmp@plt>
   124cc:	cmp	r0, #0
   124d0:	bne	124b4 <lista_pesquisa@@Base+0x3c>
   124d4:	mov	r0, r4
   124d8:	pop	{r4, r5, r6, pc}
   124dc:	ldr	r4, [r0, #4]
   124e0:	cmp	r4, #0
   124e4:	bne	124f8 <lista_pesquisa@@Base+0x80>
   124e8:	b	124d4 <lista_pesquisa@@Base+0x5c>
   124ec:	ldr	r4, [r4, #8]
   124f0:	cmp	r4, #0
   124f4:	beq	124d4 <lista_pesquisa@@Base+0x5c>
   124f8:	mov	r1, r5
   124fc:	ldr	r0, [r4]
   12500:	bl	10ecc <strcmp@plt>
   12504:	cmp	r0, #0
   12508:	bne	124ec <lista_pesquisa@@Base+0x74>
   1250c:	mov	r0, r4
   12510:	pop	{r4, r5, r6, pc}
   12514:	mov	r4, #0
   12518:	mov	r0, r4
   1251c:	pop	{r4, r5, r6, pc}

00012520 <lista_ordena@@Base>:
   12520:	cmp	r0, #0
   12524:	beq	125a4 <lista_ordena@@Base+0x84>
   12528:	ldr	r3, [r0, #8]
   1252c:	cmp	r3, #0
   12530:	beq	1259c <lista_ordena@@Base+0x7c>
   12534:	push	{r4, r5, r6, r7, r8, lr}
   12538:	ldr	r6, [r0]
   1253c:	ldr	r7, [r6, #4]
   12540:	cmp	r7, #0
   12544:	beq	12594 <lista_ordena@@Base+0x74>
   12548:	mov	r5, r6
   1254c:	mov	r4, r7
   12550:	ldr	r1, [r5]
   12554:	ldr	r0, [r4]
   12558:	bl	10ecc <strcmp@plt>
   1255c:	cmp	r0, #0
   12560:	movlt	r5, r4
   12564:	ldr	r4, [r4, #4]
   12568:	cmp	r4, #0
   1256c:	bne	12550 <lista_ordena@@Base+0x30>
   12570:	cmp	r6, r5
   12574:	ldrne	r2, [r5]
   12578:	ldrne	r3, [r6]
   1257c:	strne	r2, [r6]
   12580:	mov	r6, r7
   12584:	strne	r3, [r5]
   12588:	ldr	r7, [r6, #4]
   1258c:	cmp	r7, #0
   12590:	bne	12548 <lista_ordena@@Base+0x28>
   12594:	mov	r0, #0
   12598:	pop	{r4, r5, r6, r7, r8, pc}
   1259c:	mov	r0, #0
   125a0:	bx	lr
   125a4:	mvn	r0, #0
   125a8:	bx	lr

000125ac <lista_inverte@@Base>:
   125ac:	push	{r4, r5, lr}
   125b0:	subs	r5, r0, #0
   125b4:	beq	1264c <lista_inverte@@Base+0xa0>
   125b8:	ldr	r4, [r5, #8]
   125bc:	cmp	r4, #1
   125c0:	ble	1263c <lista_inverte@@Base+0x90>
   125c4:	ldr	r2, [r5]
   125c8:	cmp	r4, #2
   125cc:	ldr	r3, [r2, #4]
   125d0:	beq	12644 <lista_inverte@@Base+0x98>
   125d4:	sub	r4, r4, #2
   125d8:	mov	r1, #0
   125dc:	b	125e4 <lista_inverte@@Base+0x38>
   125e0:	mov	r3, lr
   125e4:	ldr	ip, [r3, #8]
   125e8:	ldr	lr, [r3, #4]
   125ec:	add	r1, r1, #1
   125f0:	str	lr, [ip, #4]
   125f4:	ldr	lr, [r3, #4]
   125f8:	cmp	r1, r4
   125fc:	str	ip, [lr, #8]
   12600:	str	r2, [r3, #4]
   12604:	str	r3, [r2, #8]
   12608:	mov	r2, r3
   1260c:	bne	125e0 <lista_inverte@@Base+0x34>
   12610:	ldr	r2, [r5, #4]
   12614:	mov	r1, #0
   12618:	mov	r0, r1
   1261c:	ldr	ip, [r2, #8]
   12620:	str	ip, [r5, #4]
   12624:	str	r1, [ip, #4]
   12628:	str	r1, [r2, #8]
   1262c:	str	r3, [r2, #4]
   12630:	str	r2, [r3, #8]
   12634:	str	r2, [r5]
   12638:	pop	{r4, r5, pc}
   1263c:	mov	r0, #0
   12640:	pop	{r4, r5, pc}
   12644:	mov	r3, r2
   12648:	b	12610 <lista_inverte@@Base+0x64>
   1264c:	mvn	r0, #0
   12650:	pop	{r4, r5, pc}

00012654 <vetor_novo@@Base>:
   12654:	push	{r4, lr}
   12658:	mov	r0, #12
   1265c:	bl	10f44 <malloc@plt>
   12660:	cmp	r0, #0
   12664:	movne	r3, #0
   12668:	strne	r3, [r0]
   1266c:	strne	r3, [r0, #4]
   12670:	strne	r3, [r0, #8]
   12674:	pop	{r4, pc}

00012678 <vetor_apaga@@Base>:
   12678:	push	{r4, lr}
   1267c:	subs	r4, r0, #0
   12680:	popeq	{r4, pc}
   12684:	ldr	r0, [r4, #8]
   12688:	bl	10f08 <free@plt>
   1268c:	mov	r0, r4
   12690:	pop	{r4, lr}
   12694:	b	10f08 <free@plt>

00012698 <vetor_atribui@@Base>:
   12698:	clz	r3, r0
   1269c:	lsr	r3, r3, #5
   126a0:	orrs	r3, r3, r1, lsr #31
   126a4:	bne	126c4 <vetor_atribui@@Base+0x2c>
   126a8:	ldr	r3, [r0]
   126ac:	cmp	r1, r3
   126b0:	bge	126c4 <vetor_atribui@@Base+0x2c>
   126b4:	ldr	r3, [r0, #8]
   126b8:	mov	r0, r1
   126bc:	str	r2, [r3, r1, lsl #2]
   126c0:	bx	lr
   126c4:	mvn	r0, #0
   126c8:	bx	lr

000126cc <vetor_tamanho@@Base>:
   126cc:	cmp	r0, #0
   126d0:	ldrne	r0, [r0]
   126d4:	mvneq	r0, #0
   126d8:	bx	lr

000126dc <vetor_elemento@@Base>:
   126dc:	clz	r3, r0
   126e0:	lsr	r3, r3, #5
   126e4:	orrs	r3, r3, r1, lsr #31
   126e8:	bne	12704 <vetor_elemento@@Base+0x28>
   126ec:	ldr	r3, [r0]
   126f0:	cmp	r1, r3
   126f4:	bge	12704 <vetor_elemento@@Base+0x28>
   126f8:	ldr	r3, [r0, #8]
   126fc:	ldr	r0, [r3, r1, lsl #2]
   12700:	bx	lr
   12704:	mov	r0, #-2147483648	; 0x80000000
   12708:	bx	lr

0001270c <vetor_insere@@Base>:
   1270c:	cmn	r2, #1
   12710:	movge	r3, #0
   12714:	movlt	r3, #1
   12718:	cmp	r0, #0
   1271c:	orreq	r3, r3, #1
   12720:	cmp	r3, #0
   12724:	push	{r4, r5, r6, lr}
   12728:	bne	127c4 <vetor_insere@@Base+0xb8>
   1272c:	ldr	lr, [r0]
   12730:	cmp	r2, lr
   12734:	bgt	127c4 <vetor_insere@@Base+0xb8>
   12738:	ldr	r3, [r0, #4]
   1273c:	cmn	r2, #1
   12740:	movne	r4, r2
   12744:	moveq	r4, lr
   12748:	cmp	lr, r3
   1274c:	mov	r5, r0
   12750:	mov	r6, r1
   12754:	beq	12790 <vetor_insere@@Base+0x84>
   12758:	ldr	r0, [r0, #8]
   1275c:	cmp	r4, lr
   12760:	addlt	r3, r0, lr, lsl #2
   12764:	addlt	ip, r0, r4, lsl #2
   12768:	bge	1277c <vetor_insere@@Base+0x70>
   1276c:	ldr	r2, [r3, #-4]
   12770:	str	r2, [r3], #-4
   12774:	cmp	ip, r3
   12778:	bne	1276c <vetor_insere@@Base+0x60>
   1277c:	add	lr, lr, #1
   12780:	str	r6, [r0, r4, lsl #2]
   12784:	str	lr, [r5]
   12788:	mov	r0, r4
   1278c:	pop	{r4, r5, r6, pc}
   12790:	cmp	lr, #0
   12794:	moveq	r3, #1
   12798:	lslne	r1, lr, #3
   1279c:	lslne	lr, lr, #1
   127a0:	streq	r3, [r0, #4]
   127a4:	strne	lr, [r0, #4]
   127a8:	moveq	r1, #4
   127ac:	ldr	r0, [r0, #8]
   127b0:	bl	10f20 <realloc@plt>
   127b4:	cmp	r0, #0
   127b8:	str	r0, [r5, #8]
   127bc:	ldrne	lr, [r5]
   127c0:	bne	1275c <vetor_insere@@Base+0x50>
   127c4:	mvn	r4, #0
   127c8:	b	12788 <vetor_insere@@Base+0x7c>

000127cc <vetor_remove@@Base>:
   127cc:	clz	r3, r0
   127d0:	lsr	r3, r3, #5
   127d4:	orrs	r3, r3, r1, lsr #31
   127d8:	bne	12824 <vetor_remove@@Base+0x58>
   127dc:	ldr	ip, [r0]
   127e0:	cmp	r1, ip
   127e4:	bge	12824 <vetor_remove@@Base+0x58>
   127e8:	add	r3, r1, #1
   127ec:	cmp	ip, r3
   127f0:	ble	12814 <vetor_remove@@Base+0x48>
   127f4:	ldr	r3, [r0, #8]
   127f8:	sub	r2, ip, #-1073741823	; 0xc0000001
   127fc:	add	r1, r3, r1, lsl #2
   12800:	add	r2, r3, r2, lsl #2
   12804:	ldr	r3, [r1, #4]
   12808:	str	r3, [r1], #4
   1280c:	cmp	r1, r2
   12810:	bne	12804 <vetor_remove@@Base+0x38>
   12814:	sub	ip, ip, #1
   12818:	str	ip, [r0]
   1281c:	mov	r0, #0
   12820:	bx	lr
   12824:	mvn	r0, #0
   12828:	bx	lr

0001282c <vetor_pesquisa@@Base>:
   1282c:	cmp	r0, #0
   12830:	beq	12874 <vetor_pesquisa@@Base+0x48>
   12834:	ldr	ip, [r0]
   12838:	cmp	ip, #0
   1283c:	ble	12874 <vetor_pesquisa@@Base+0x48>
   12840:	ldr	r3, [r0, #8]
   12844:	ldr	r2, [r3]
   12848:	cmp	r1, r2
   1284c:	beq	1287c <vetor_pesquisa@@Base+0x50>
   12850:	add	r3, r3, #4
   12854:	mov	r0, #0
   12858:	b	12868 <vetor_pesquisa@@Base+0x3c>
   1285c:	ldr	r2, [r3], #4
   12860:	cmp	r2, r1
   12864:	bxeq	lr
   12868:	add	r0, r0, #1
   1286c:	cmp	r0, ip
   12870:	bne	1285c <vetor_pesquisa@@Base+0x30>
   12874:	mvn	r0, #0
   12878:	bx	lr
   1287c:	mov	r0, #0
   12880:	bx	lr

00012884 <vetor_ordena@@Base>:
   12884:	cmp	r0, #0
   12888:	beq	128f4 <vetor_ordena@@Base+0x70>
   1288c:	ldr	r3, [r0]
   12890:	cmp	r3, #1
   12894:	ble	128ec <vetor_ordena@@Base+0x68>
   12898:	push	{r4, r5, lr}
   1289c:	sub	r3, r3, #-1073741823	; 0xc0000001
   128a0:	ldr	r5, [r0, #8]
   128a4:	mov	lr, #1
   128a8:	mov	ip, r5
   128ac:	add	r4, r5, r3, lsl #2
   128b0:	ldr	r0, [ip, #4]!
   128b4:	mov	r3, lr
   128b8:	mov	r2, ip
   128bc:	ldr	r1, [r2, #-4]
   128c0:	cmp	r0, r1
   128c4:	bge	128d4 <vetor_ordena@@Base+0x50>
   128c8:	subs	r3, r3, #1
   128cc:	str	r1, [r2], #-4
   128d0:	bne	128bc <vetor_ordena@@Base+0x38>
   128d4:	cmp	ip, r4
   128d8:	str	r0, [r5, r3, lsl #2]
   128dc:	add	lr, lr, #1
   128e0:	bne	128b0 <vetor_ordena@@Base+0x2c>
   128e4:	mov	r0, #0
   128e8:	pop	{r4, r5, pc}
   128ec:	mov	r0, #0
   128f0:	bx	lr
   128f4:	mvn	r0, #0
   128f8:	bx	lr
   128fc:	cmp	r1, #0
   12900:	beq	12b0c <vetor_ordena@@Base+0x288>
   12904:	eor	ip, r0, r1
   12908:	rsbmi	r1, r1, #0
   1290c:	subs	r2, r1, #1
   12910:	beq	12ad8 <vetor_ordena@@Base+0x254>
   12914:	movs	r3, r0
   12918:	rsbmi	r3, r0, #0
   1291c:	cmp	r3, r1
   12920:	bls	12ae4 <vetor_ordena@@Base+0x260>
   12924:	tst	r1, r2
   12928:	beq	12af4 <vetor_ordena@@Base+0x270>
   1292c:	clz	r2, r3
   12930:	clz	r0, r1
   12934:	sub	r2, r0, r2
   12938:	rsbs	r2, r2, #31
   1293c:	addne	r2, r2, r2, lsl #1
   12940:	mov	r0, #0
   12944:	addne	pc, pc, r2, lsl #2
   12948:	nop			; (mov r0, r0)
   1294c:	cmp	r3, r1, lsl #31
   12950:	adc	r0, r0, r0
   12954:	subcs	r3, r3, r1, lsl #31
   12958:	cmp	r3, r1, lsl #30
   1295c:	adc	r0, r0, r0
   12960:	subcs	r3, r3, r1, lsl #30
   12964:	cmp	r3, r1, lsl #29
   12968:	adc	r0, r0, r0
   1296c:	subcs	r3, r3, r1, lsl #29
   12970:	cmp	r3, r1, lsl #28
   12974:	adc	r0, r0, r0
   12978:	subcs	r3, r3, r1, lsl #28
   1297c:	cmp	r3, r1, lsl #27
   12980:	adc	r0, r0, r0
   12984:	subcs	r3, r3, r1, lsl #27
   12988:	cmp	r3, r1, lsl #26
   1298c:	adc	r0, r0, r0
   12990:	subcs	r3, r3, r1, lsl #26
   12994:	cmp	r3, r1, lsl #25
   12998:	adc	r0, r0, r0
   1299c:	subcs	r3, r3, r1, lsl #25
   129a0:	cmp	r3, r1, lsl #24
   129a4:	adc	r0, r0, r0
   129a8:	subcs	r3, r3, r1, lsl #24
   129ac:	cmp	r3, r1, lsl #23
   129b0:	adc	r0, r0, r0
   129b4:	subcs	r3, r3, r1, lsl #23
   129b8:	cmp	r3, r1, lsl #22
   129bc:	adc	r0, r0, r0
   129c0:	subcs	r3, r3, r1, lsl #22
   129c4:	cmp	r3, r1, lsl #21
   129c8:	adc	r0, r0, r0
   129cc:	subcs	r3, r3, r1, lsl #21
   129d0:	cmp	r3, r1, lsl #20
   129d4:	adc	r0, r0, r0
   129d8:	subcs	r3, r3, r1, lsl #20
   129dc:	cmp	r3, r1, lsl #19
   129e0:	adc	r0, r0, r0
   129e4:	subcs	r3, r3, r1, lsl #19
   129e8:	cmp	r3, r1, lsl #18
   129ec:	adc	r0, r0, r0
   129f0:	subcs	r3, r3, r1, lsl #18
   129f4:	cmp	r3, r1, lsl #17
   129f8:	adc	r0, r0, r0
   129fc:	subcs	r3, r3, r1, lsl #17
   12a00:	cmp	r3, r1, lsl #16
   12a04:	adc	r0, r0, r0
   12a08:	subcs	r3, r3, r1, lsl #16
   12a0c:	cmp	r3, r1, lsl #15
   12a10:	adc	r0, r0, r0
   12a14:	subcs	r3, r3, r1, lsl #15
   12a18:	cmp	r3, r1, lsl #14
   12a1c:	adc	r0, r0, r0
   12a20:	subcs	r3, r3, r1, lsl #14
   12a24:	cmp	r3, r1, lsl #13
   12a28:	adc	r0, r0, r0
   12a2c:	subcs	r3, r3, r1, lsl #13
   12a30:	cmp	r3, r1, lsl #12
   12a34:	adc	r0, r0, r0
   12a38:	subcs	r3, r3, r1, lsl #12
   12a3c:	cmp	r3, r1, lsl #11
   12a40:	adc	r0, r0, r0
   12a44:	subcs	r3, r3, r1, lsl #11
   12a48:	cmp	r3, r1, lsl #10
   12a4c:	adc	r0, r0, r0
   12a50:	subcs	r3, r3, r1, lsl #10
   12a54:	cmp	r3, r1, lsl #9
   12a58:	adc	r0, r0, r0
   12a5c:	subcs	r3, r3, r1, lsl #9
   12a60:	cmp	r3, r1, lsl #8
   12a64:	adc	r0, r0, r0
   12a68:	subcs	r3, r3, r1, lsl #8
   12a6c:	cmp	r3, r1, lsl #7
   12a70:	adc	r0, r0, r0
   12a74:	subcs	r3, r3, r1, lsl #7
   12a78:	cmp	r3, r1, lsl #6
   12a7c:	adc	r0, r0, r0
   12a80:	subcs	r3, r3, r1, lsl #6
   12a84:	cmp	r3, r1, lsl #5
   12a88:	adc	r0, r0, r0
   12a8c:	subcs	r3, r3, r1, lsl #5
   12a90:	cmp	r3, r1, lsl #4
   12a94:	adc	r0, r0, r0
   12a98:	subcs	r3, r3, r1, lsl #4
   12a9c:	cmp	r3, r1, lsl #3
   12aa0:	adc	r0, r0, r0
   12aa4:	subcs	r3, r3, r1, lsl #3
   12aa8:	cmp	r3, r1, lsl #2
   12aac:	adc	r0, r0, r0
   12ab0:	subcs	r3, r3, r1, lsl #2
   12ab4:	cmp	r3, r1, lsl #1
   12ab8:	adc	r0, r0, r0
   12abc:	subcs	r3, r3, r1, lsl #1
   12ac0:	cmp	r3, r1
   12ac4:	adc	r0, r0, r0
   12ac8:	subcs	r3, r3, r1
   12acc:	cmp	ip, #0
   12ad0:	rsbmi	r0, r0, #0
   12ad4:	bx	lr
   12ad8:	teq	ip, r0
   12adc:	rsbmi	r0, r0, #0
   12ae0:	bx	lr
   12ae4:	movcc	r0, #0
   12ae8:	asreq	r0, ip, #31
   12aec:	orreq	r0, r0, #1
   12af0:	bx	lr
   12af4:	clz	r2, r1
   12af8:	rsb	r2, r2, #31
   12afc:	cmp	ip, #0
   12b00:	lsr	r0, r3, r2
   12b04:	rsbmi	r0, r0, #0
   12b08:	bx	lr
   12b0c:	cmp	r0, #0
   12b10:	mvngt	r0, #-2147483648	; 0x80000000
   12b14:	movlt	r0, #-2147483648	; 0x80000000
   12b18:	b	12b3c <vetor_ordena@@Base+0x2b8>
   12b1c:	cmp	r1, #0
   12b20:	beq	12b0c <vetor_ordena@@Base+0x288>
   12b24:	push	{r0, r1, lr}
   12b28:	bl	12904 <vetor_ordena@@Base+0x80>
   12b2c:	pop	{r1, r2, lr}
   12b30:	mul	r3, r2, r0
   12b34:	sub	r1, r1, r3
   12b38:	bx	lr
   12b3c:	push	{r1, lr}
   12b40:	mov	r0, #8
   12b44:	bl	10ec0 <raise@plt>
   12b48:	pop	{r1, pc}

00012b4c <__libc_csu_init@@Base>:
   12b4c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b50:	mov	r7, r0
   12b54:	ldr	r6, [pc, #72]	; 12ba4 <__libc_csu_init@@Base+0x58>
   12b58:	ldr	r5, [pc, #72]	; 12ba8 <__libc_csu_init@@Base+0x5c>
   12b5c:	add	r6, pc, r6
   12b60:	add	r5, pc, r5
   12b64:	sub	r6, r6, r5
   12b68:	mov	r8, r1
   12b6c:	mov	r9, r2
   12b70:	bl	10e94 <calloc@plt-0x20>
   12b74:	asrs	r6, r6, #2
   12b78:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12b7c:	mov	r4, #0
   12b80:	add	r4, r4, #1
   12b84:	ldr	r3, [r5], #4
   12b88:	mov	r2, r9
   12b8c:	mov	r1, r8
   12b90:	mov	r0, r7
   12b94:	blx	r3
   12b98:	cmp	r6, r4
   12b9c:	bne	12b80 <__libc_csu_init@@Base+0x34>
   12ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ba4:	andeq	r0, r1, ip, lsr #7
   12ba8:	andeq	r0, r1, r4, lsr #7

00012bac <__libc_csu_fini@@Base>:
   12bac:	bx	lr

Disassembly of section .fini:

00012bb0 <.fini>:
   12bb0:	push	{r3, lr}
   12bb4:	pop	{r3, pc}
