
../repos/eddieantonio-ocreval-3ab279a/nonstopacc/nonstopacc:     file format elf32-littlearm


Disassembly of section .init:

000109bc <.init>:
   109bc:	push	{r3, lr}
   109c0:	bl	10bd4 <__assert_fail@plt+0x48>
   109c4:	pop	{r3, pc}

Disassembly of section .plt:

000109c8 <calloc@plt-0x14>:
   109c8:	push	{lr}		; (str lr, [sp, #-4]!)
   109cc:	ldr	lr, [pc, #4]	; 109d8 <calloc@plt-0x4>
   109d0:	add	lr, pc, lr
   109d4:	ldr	pc, [lr, #8]!
   109d8:	andeq	r8, r1, r8, lsr #12

000109dc <calloc@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #24, 20	; 0x18000
   109e4:	ldr	pc, [ip, #1576]!	; 0x628

000109e8 <strcmp@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #24, 20	; 0x18000
   109f0:	ldr	pc, [ip, #1568]!	; 0x620

000109f4 <printf@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #24, 20	; 0x18000
   109fc:	ldr	pc, [ip, #1560]!	; 0x618

00010a00 <fopen@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #24, 20	; 0x18000
   10a08:	ldr	pc, [ip, #1552]!	; 0x610

00010a0c <free@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #24, 20	; 0x18000
   10a14:	ldr	pc, [ip, #1544]!	; 0x608

00010a18 <utf8proc_get_property@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #24, 20	; 0x18000
   10a20:	ldr	pc, [ip, #1536]!	; 0x600

00010a24 <fgets@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #24, 20	; 0x18000
   10a2c:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a30 <utf8proc_encode_char@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #24, 20	; 0x18000
   10a38:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a3c <strdup@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #24, 20	; 0x18000
   10a44:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a48 <rewind@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #24, 20	; 0x18000
   10a50:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a54 <unlink@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #24, 20	; 0x18000
   10a5c:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a60 <utf8proc_tolower@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #24, 20	; 0x18000
   10a68:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a6c <__xstat@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #24, 20	; 0x18000
   10a74:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a78 <fwrite@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #24, 20	; 0x18000
   10a80:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a84 <fread@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #24, 20	; 0x18000
   10a8c:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a90 <utf8proc_iterate@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #24, 20	; 0x18000
   10a98:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a9c <malloc@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #24, 20	; 0x18000
   10aa4:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa8 <__libc_start_main@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #24, 20	; 0x18000
   10ab0:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab4 <__sysv_signal@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #24, 20	; 0x18000
   10abc:	ldr	pc, [ip, #1432]!	; 0x598

00010ac0 <__gmon_start__@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #24, 20	; 0x18000
   10ac8:	ldr	pc, [ip, #1424]!	; 0x590

00010acc <getpid@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #24, 20	; 0x18000
   10ad4:	ldr	pc, [ip, #1416]!	; 0x588

00010ad8 <exit@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #24, 20	; 0x18000
   10ae0:	ldr	pc, [ip, #1408]!	; 0x580

00010ae4 <utf8proc_category@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #24, 20	; 0x18000
   10aec:	ldr	pc, [ip, #1400]!	; 0x578

00010af0 <strlen@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #24, 20	; 0x18000
   10af8:	ldr	pc, [ip, #1392]!	; 0x570

00010afc <fprintf@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #24, 20	; 0x18000
   10b04:	ldr	pc, [ip, #1384]!	; 0x568

00010b08 <__isoc99_sscanf@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #24, 20	; 0x18000
   10b10:	ldr	pc, [ip, #1376]!	; 0x560

00010b14 <fclose@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #24, 20	; 0x18000
   10b1c:	ldr	pc, [ip, #1368]!	; 0x558

00010b20 <utf8proc_NFC@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #24, 20	; 0x18000
   10b28:	ldr	pc, [ip, #1360]!	; 0x550

00010b2c <fputc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #24, 20	; 0x18000
   10b34:	ldr	pc, [ip, #1352]!	; 0x548

00010b38 <sprintf@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #24, 20	; 0x18000
   10b40:	ldr	pc, [ip, #1344]!	; 0x540

00010b44 <atoi@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #24, 20	; 0x18000
   10b4c:	ldr	pc, [ip, #1336]!	; 0x538

00010b50 <utf8proc_errmsg@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #24, 20	; 0x18000
   10b58:	ldr	pc, [ip, #1328]!	; 0x530

00010b5c <fputs@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #24, 20	; 0x18000
   10b64:	ldr	pc, [ip, #1320]!	; 0x528

00010b68 <strncmp@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #24, 20	; 0x18000
   10b70:	ldr	pc, [ip, #1312]!	; 0x520

00010b74 <abort@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #24, 20	; 0x18000
   10b7c:	ldr	pc, [ip, #1304]!	; 0x518

00010b80 <getc@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #24, 20	; 0x18000
   10b88:	ldr	pc, [ip, #1296]!	; 0x510

00010b8c <__assert_fail@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #24, 20	; 0x18000
   10b94:	ldr	pc, [ip, #1288]!	; 0x508

Disassembly of section .text:

00010b98 <error@@Base-0x1420>:
   10b98:	mov	fp, #0
   10b9c:	mov	lr, #0
   10ba0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba4:	mov	r2, sp
   10ba8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bac:	push	{r0}		; (str r0, [sp, #-4]!)
   10bb0:	ldr	ip, [pc, #16]	; 10bc8 <__assert_fail@plt+0x3c>
   10bb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb8:	ldr	r0, [pc, #12]	; 10bcc <__assert_fail@plt+0x40>
   10bbc:	ldr	r3, [pc, #12]	; 10bd0 <__assert_fail@plt+0x44>
   10bc0:	bl	10aa8 <__libc_start_main@plt>
   10bc4:	bl	10b74 <abort@plt>
   10bc8:	andeq	r4, r1, r0, lsr #21
   10bcc:	andeq	r0, r1, ip, lsl #30
   10bd0:	andeq	r4, r1, r0, asr #20
   10bd4:	ldr	r3, [pc, #20]	; 10bf0 <__assert_fail@plt+0x64>
   10bd8:	ldr	r2, [pc, #20]	; 10bf4 <__assert_fail@plt+0x68>
   10bdc:	add	r3, pc, r3
   10be0:	ldr	r2, [r3, r2]
   10be4:	cmp	r2, #0
   10be8:	bxeq	lr
   10bec:	b	10ac0 <__gmon_start__@plt>
   10bf0:	andeq	r8, r1, ip, lsl r4
   10bf4:	strheq	r0, [r0], -ip
   10bf8:	ldr	r3, [pc, #28]	; 10c1c <__assert_fail@plt+0x90>
   10bfc:	ldr	r0, [pc, #28]	; 10c20 <__assert_fail@plt+0x94>
   10c00:	sub	r3, r3, r0
   10c04:	cmp	r3, #6
   10c08:	bxls	lr
   10c0c:	ldr	r3, [pc, #16]	; 10c24 <__assert_fail@plt+0x98>
   10c10:	cmp	r3, #0
   10c14:	bxeq	lr
   10c18:	bx	r3
   10c1c:	strdeq	r9, [r2], -pc	; <UNPREDICTABLE>
   10c20:	strdeq	r9, [r2], -ip
   10c24:	andeq	r0, r0, r0
   10c28:	ldr	r1, [pc, #36]	; 10c54 <__assert_fail@plt+0xc8>
   10c2c:	ldr	r0, [pc, #36]	; 10c58 <__assert_fail@plt+0xcc>
   10c30:	sub	r1, r1, r0
   10c34:	asr	r1, r1, #2
   10c38:	add	r1, r1, r1, lsr #31
   10c3c:	asrs	r1, r1, #1
   10c40:	bxeq	lr
   10c44:	ldr	r3, [pc, #16]	; 10c5c <__assert_fail@plt+0xd0>
   10c48:	cmp	r3, #0
   10c4c:	bxeq	lr
   10c50:	bx	r3
   10c54:	strdeq	r9, [r2], -ip
   10c58:	strdeq	r9, [r2], -ip
   10c5c:	andeq	r0, r0, r0
   10c60:	push	{r4, lr}
   10c64:	ldr	r4, [pc, #24]	; 10c84 <__assert_fail@plt+0xf8>
   10c68:	ldrb	r3, [r4]
   10c6c:	cmp	r3, #0
   10c70:	popne	{r4, pc}
   10c74:	bl	10bf8 <__assert_fail@plt+0x6c>
   10c78:	mov	r3, #1
   10c7c:	strb	r3, [r4]
   10c80:	pop	{r4, pc}
   10c84:	strdeq	r9, [r2], -ip
   10c88:	ldr	r0, [pc, #40]	; 10cb8 <__assert_fail@plt+0x12c>
   10c8c:	ldr	r3, [r0]
   10c90:	cmp	r3, #0
   10c94:	bne	10c9c <__assert_fail@plt+0x110>
   10c98:	b	10c28 <__assert_fail@plt+0x9c>
   10c9c:	ldr	r3, [pc, #24]	; 10cbc <__assert_fail@plt+0x130>
   10ca0:	cmp	r3, #0
   10ca4:	beq	10c98 <__assert_fail@plt+0x10c>
   10ca8:	push	{r4, lr}
   10cac:	blx	r3
   10cb0:	pop	{r4, lr}
   10cb4:	b	10c28 <__assert_fail@plt+0x9c>
   10cb8:	andeq	r8, r2, r4, lsl #30
   10cbc:	andeq	r0, r0, r0
   10cc0:	push	{r4, fp, lr}
   10cc4:	add	fp, sp, #8
   10cc8:	sub	sp, sp, #20
   10ccc:	str	r0, [fp, #-24]	; 0xffffffe8
   10cd0:	str	r1, [fp, #-28]	; 0xffffffe4
   10cd4:	ldr	r4, [pc, #112]	; 10d4c <__assert_fail@plt+0x1c0>
   10cd8:	add	r4, pc, r4
   10cdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ce4:	bl	1112c <__assert_fail@plt+0x5a0>
   10ce8:	str	r0, [fp, #-16]
   10cec:	ldr	r3, [fp, #-16]
   10cf0:	cmp	r3, #0
   10cf4:	beq	10d40 <__assert_fail@plt+0x1b4>
   10cf8:	ldr	r3, [pc, #80]	; 10d50 <__assert_fail@plt+0x1c4>
   10cfc:	ldr	r3, [r4, r3]
   10d00:	ldr	r2, [r3]
   10d04:	ldr	r3, [fp, #-16]
   10d08:	ldr	r3, [r3, #12]
   10d0c:	sub	r2, r2, r3
   10d10:	ldr	r3, [pc, #56]	; 10d50 <__assert_fail@plt+0x1c4>
   10d14:	ldr	r3, [r4, r3]
   10d18:	str	r2, [r3]
   10d1c:	ldr	r3, [pc, #48]	; 10d54 <__assert_fail@plt+0x1c8>
   10d20:	ldr	r3, [r4, r3]
   10d24:	ldr	r2, [r3]
   10d28:	ldr	r3, [fp, #-16]
   10d2c:	ldr	r3, [r3, #16]
   10d30:	sub	r2, r2, r3
   10d34:	ldr	r3, [pc, #24]	; 10d54 <__assert_fail@plt+0x1c8>
   10d38:	ldr	r3, [r4, r3]
   10d3c:	str	r2, [r3]
   10d40:	nop			; (mov r0, r0)
   10d44:	sub	sp, fp, #8
   10d48:	pop	{r4, fp, pc}
   10d4c:	andeq	r8, r1, r0, lsr #6
   10d50:	andeq	r0, r0, r0, lsr #1
   10d54:	ldrdeq	r0, [r0], -r8
   10d58:	push	{fp, lr}
   10d5c:	add	fp, sp, #4
   10d60:	ldr	r3, [pc, #128]	; 10de8 <__assert_fail@plt+0x25c>
   10d64:	add	r3, pc, r3
   10d68:	ldr	r2, [pc, #124]	; 10dec <__assert_fail@plt+0x260>
   10d6c:	add	r2, pc, r2
   10d70:	ldr	r1, [r2]
   10d74:	add	r0, r1, #1
   10d78:	ldr	r2, [pc, #112]	; 10df0 <__assert_fail@plt+0x264>
   10d7c:	add	r2, pc, r2
   10d80:	str	r0, [r2]
   10d84:	ldr	r2, [pc, #104]	; 10df4 <__assert_fail@plt+0x268>
   10d88:	ldr	r2, [r3, r2]
   10d8c:	ldr	r0, [r2]
   10d90:	ldr	r2, [pc, #96]	; 10df8 <__assert_fail@plt+0x26c>
   10d94:	ldr	r2, [r3, r2]
   10d98:	ldr	r2, [r2]
   10d9c:	sub	r2, r0, r2
   10da0:	vmov	s15, r2
   10da4:	vcvt.f64.s32	d7, s15
   10da8:	vldr	d6, [pc, #48]	; 10de0 <__assert_fail@plt+0x254>
   10dac:	vmul.f64	d6, d7, d6
   10db0:	ldr	r2, [pc, #60]	; 10df4 <__assert_fail@plt+0x268>
   10db4:	ldr	r3, [r3, r2]
   10db8:	ldr	r3, [r3]
   10dbc:	vmov	s15, r3
   10dc0:	vcvt.f64.s32	d7, s15
   10dc4:	vdiv.f64	d5, d6, d7
   10dc8:	vmov	r2, r3, d5
   10dcc:	ldr	r0, [pc, #40]	; 10dfc <__assert_fail@plt+0x270>
   10dd0:	add	r0, pc, r0
   10dd4:	bl	109f4 <printf@plt>
   10dd8:	nop			; (mov r0, r0)
   10ddc:	pop	{fp, pc}
   10de0:	andeq	r0, r0, r0
   10de4:	subsmi	r0, r9, r0
   10de8:	muleq	r1, r4, r2
   10dec:	andeq	r8, r1, ip, lsl #7
   10df0:	andeq	r8, r1, ip, ror r3
   10df4:	andeq	r0, r0, r0, lsr #1
   10df8:	ldrdeq	r0, [r0], -r8
   10dfc:	andeq	r3, r0, r8, ror #25
   10e00:	push	{r4, fp, lr}
   10e04:	add	fp, sp, #8
   10e08:	sub	sp, sp, #12
   10e0c:	ldr	r4, [pc, #224]	; 10ef4 <__assert_fail@plt+0x368>
   10e10:	add	r4, pc, r4
   10e14:	ldr	r3, [pc, #220]	; 10ef8 <__assert_fail@plt+0x36c>
   10e18:	ldr	r3, [r4, r3]
   10e1c:	ldr	r2, [r3]
   10e20:	ldr	r3, [pc, #212]	; 10efc <__assert_fail@plt+0x370>
   10e24:	ldr	r3, [r4, r3]
   10e28:	str	r2, [r3]
   10e2c:	ldr	r3, [pc, #196]	; 10ef8 <__assert_fail@plt+0x36c>
   10e30:	ldr	r3, [r4, r3]
   10e34:	ldr	r2, [r3, #4]
   10e38:	ldr	r3, [pc, #192]	; 10f00 <__assert_fail@plt+0x374>
   10e3c:	ldr	r3, [r4, r3]
   10e40:	str	r2, [r3]
   10e44:	ldr	r3, [pc, #176]	; 10efc <__assert_fail@plt+0x370>
   10e48:	ldr	r3, [r4, r3]
   10e4c:	ldr	r3, [r3]
   10e50:	cmp	r3, #0
   10e54:	beq	10ee0 <__assert_fail@plt+0x354>
   10e58:	bl	10d58 <__assert_fail@plt+0x1cc>
   10e5c:	ldr	r3, [pc, #160]	; 10f04 <__assert_fail@plt+0x378>
   10e60:	ldr	r3, [r4, r3]
   10e64:	ldr	r3, [r3]
   10e68:	str	r3, [fp, #-16]
   10e6c:	b	10ed0 <__assert_fail@plt+0x344>
   10e70:	ldr	r3, [fp, #-16]
   10e74:	ldr	r3, [r3, #8]
   10e78:	mov	r1, r3
   10e7c:	ldr	r3, [pc, #116]	; 10ef8 <__assert_fail@plt+0x36c>
   10e80:	ldr	r3, [r4, r3]
   10e84:	add	r0, r3, #992	; 0x3e0
   10e88:	bl	10cc0 <__assert_fail@plt+0x134>
   10e8c:	ldr	r3, [fp, #-16]
   10e90:	ldr	r3, [r3, #8]
   10e94:	mov	r1, r3
   10e98:	ldr	r3, [pc, #88]	; 10ef8 <__assert_fail@plt+0x36c>
   10e9c:	ldr	r3, [r4, r3]
   10ea0:	ldr	r2, [pc, #96]	; 10f08 <__assert_fail@plt+0x37c>
   10ea4:	add	r0, r3, r2
   10ea8:	bl	10cc0 <__assert_fail@plt+0x134>
   10eac:	ldr	r3, [pc, #72]	; 10efc <__assert_fail@plt+0x370>
   10eb0:	ldr	r3, [r4, r3]
   10eb4:	ldr	r3, [r3]
   10eb8:	cmp	r3, #0
   10ebc:	beq	10ee8 <__assert_fail@plt+0x35c>
   10ec0:	bl	10d58 <__assert_fail@plt+0x1cc>
   10ec4:	ldr	r3, [fp, #-16]
   10ec8:	ldr	r3, [r3, #4]
   10ecc:	str	r3, [fp, #-16]
   10ed0:	ldr	r3, [fp, #-16]
   10ed4:	cmp	r3, #0
   10ed8:	bne	10e70 <__assert_fail@plt+0x2e4>
   10edc:	b	10eec <__assert_fail@plt+0x360>
   10ee0:	nop			; (mov r0, r0)
   10ee4:	b	10eec <__assert_fail@plt+0x360>
   10ee8:	nop			; (mov r0, r0)
   10eec:	sub	sp, fp, #8
   10ef0:	pop	{r4, fp, pc}
   10ef4:	andeq	r8, r1, r8, ror #3
   10ef8:	andeq	r0, r0, r4, asr #1
   10efc:	andeq	r0, r0, r0, lsr #1
   10f00:	ldrdeq	r0, [r0], -r8
   10f04:	strheq	r0, [r0], -r4
   10f08:	andeq	r2, r0, r8, asr r3
   10f0c:	push	{r4, fp, lr}
   10f10:	add	fp, sp, #8
   10f14:	sub	sp, sp, #12
   10f18:	str	r0, [fp, #-16]
   10f1c:	str	r1, [fp, #-20]	; 0xffffffec
   10f20:	ldr	r4, [pc, #156]	; 10fc4 <__assert_fail@plt+0x438>
   10f24:	add	r4, pc, r4
   10f28:	sub	r0, fp, #16
   10f2c:	mov	r3, #0
   10f30:	ldr	r2, [pc, #144]	; 10fc8 <__assert_fail@plt+0x43c>
   10f34:	add	r2, pc, r2
   10f38:	ldr	r1, [fp, #-20]	; 0xffffffec
   10f3c:	bl	11ee8 <__assert_fail@plt+0x135c>
   10f40:	ldr	r3, [fp, #-16]
   10f44:	cmp	r3, #2
   10f48:	beq	10f5c <__assert_fail@plt+0x3d0>
   10f4c:	ldr	r3, [pc, #120]	; 10fcc <__assert_fail@plt+0x440>
   10f50:	add	r3, pc, r3
   10f54:	mov	r0, r3
   10f58:	bl	11fb8 <error@@Base>
   10f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f60:	ldr	r1, [r3]
   10f64:	ldr	r3, [pc, #100]	; 10fd0 <__assert_fail@plt+0x444>
   10f68:	ldr	r3, [r4, r3]
   10f6c:	mov	r2, r3
   10f70:	ldr	r3, [pc, #92]	; 10fd4 <__assert_fail@plt+0x448>
   10f74:	ldr	r3, [r4, r3]
   10f78:	mov	r0, r3
   10f7c:	bl	13d88 <error@@Base+0x1dd0>
   10f80:	ldr	r3, [pc, #76]	; 10fd4 <__assert_fail@plt+0x448>
   10f84:	ldr	r3, [r4, r3]
   10f88:	mov	r1, r3
   10f8c:	ldr	r3, [pc, #68]	; 10fd8 <__assert_fail@plt+0x44c>
   10f90:	ldr	r3, [r4, r3]
   10f94:	mov	r0, r3
   10f98:	bl	13794 <error@@Base+0x17dc>
   10f9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fa0:	add	r3, r3, #4
   10fa4:	ldr	r3, [r3]
   10fa8:	mov	r1, r3
   10fac:	ldr	r3, [pc, #40]	; 10fdc <__assert_fail@plt+0x450>
   10fb0:	ldr	r3, [r4, r3]
   10fb4:	mov	r0, r3
   10fb8:	bl	124e0 <error@@Base+0x528>
   10fbc:	bl	10e00 <__assert_fail@plt+0x274>
   10fc0:	bl	11fa8 <__assert_fail@plt+0x141c>
   10fc4:	ldrdeq	r8, [r1], -r4
   10fc8:	muleq	r0, r0, fp
   10fcc:	muleq	r0, r8, fp
   10fd0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   10fd4:	andeq	r0, r0, r4, lsr #1
   10fd8:	strheq	r0, [r0], -r4
   10fdc:	andeq	r0, r0, r4, asr #1
   10fe0:	push	{fp, lr}
   10fe4:	add	fp, sp, #4
   10fe8:	sub	sp, sp, #16
   10fec:	str	r0, [fp, #-16]
   10ff0:	mov	r3, #0
   10ff4:	strh	r3, [fp, #-6]
   10ff8:	b	11028 <__assert_fail@plt+0x49c>
   10ffc:	ldrsh	r3, [fp, #-6]
   11000:	lsl	r3, r3, #4
   11004:	ldr	r2, [fp, #-16]
   11008:	add	r3, r2, r3
   1100c:	mov	r0, r3
   11010:	bl	14374 <error@@Base+0x23bc>
   11014:	ldrsh	r3, [fp, #-6]
   11018:	uxth	r3, r3
   1101c:	add	r3, r3, #1
   11020:	uxth	r3, r3
   11024:	strh	r3, [fp, #-6]
   11028:	ldrsh	r3, [fp, #-6]
   1102c:	ldr	r2, [pc, #56]	; 1106c <__assert_fail@plt+0x4e0>
   11030:	cmp	r3, r2
   11034:	ble	10ffc <__assert_fail@plt+0x470>
   11038:	ldr	r3, [fp, #-16]
   1103c:	add	r3, r3, #4096	; 0x1000
   11040:	mov	r2, r3
   11044:	mov	r3, #0
   11048:	str	r3, [r2, #3952]	; 0xf70
   1104c:	ldr	r3, [fp, #-16]
   11050:	add	r3, r3, #4096	; 0x1000
   11054:	mov	r2, r3
   11058:	mov	r3, #0
   1105c:	str	r3, [r2, #3956]	; 0xf74
   11060:	nop			; (mov r0, r0)
   11064:	sub	sp, fp, #4
   11068:	pop	{fp, pc}
   1106c:	strdeq	r0, [r0], -r6
   11070:	push	{fp}		; (str fp, [sp, #-4]!)
   11074:	add	fp, sp, #0
   11078:	sub	sp, sp, #28
   1107c:	str	r0, [fp, #-24]	; 0xffffffe8
   11080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11084:	str	r3, [fp, #-16]
   11088:	mov	r3, #0
   1108c:	str	r3, [fp, #-12]
   11090:	mov	r3, #0
   11094:	str	r3, [fp, #-8]
   11098:	b	110c8 <__assert_fail@plt+0x53c>
   1109c:	ldr	r3, [fp, #-8]
   110a0:	ldr	r2, [fp, #-16]
   110a4:	add	r3, r2, r3
   110a8:	ldrb	r3, [r3]
   110ac:	mov	r2, r3
   110b0:	ldr	r3, [fp, #-12]
   110b4:	add	r3, r3, r2
   110b8:	str	r3, [fp, #-12]
   110bc:	ldr	r3, [fp, #-8]
   110c0:	add	r3, r3, #1
   110c4:	str	r3, [fp, #-8]
   110c8:	ldr	r3, [fp, #-8]
   110cc:	ldr	r2, [fp, #-16]
   110d0:	add	r3, r2, r3
   110d4:	ldrb	r3, [r3]
   110d8:	cmp	r3, #0
   110dc:	bne	1109c <__assert_fail@plt+0x510>
   110e0:	ldr	r2, [fp, #-12]
   110e4:	ldr	r3, [pc, #60]	; 11128 <__assert_fail@plt+0x59c>
   110e8:	smull	r1, r3, r3, r2
   110ec:	add	r3, r3, r2
   110f0:	asr	r1, r3, #8
   110f4:	asr	r3, r2, #31
   110f8:	sub	r1, r1, r3
   110fc:	mov	r3, r1
   11100:	lsl	r3, r3, #6
   11104:	sub	r3, r3, r1
   11108:	lsl	r3, r3, #3
   1110c:	sub	r3, r3, r1
   11110:	sub	r1, r2, r3
   11114:	sxth	r3, r1
   11118:	mov	r0, r3
   1111c:	add	sp, fp, #0
   11120:	pop	{fp}		; (ldr fp, [sp], #4)
   11124:	bx	lr
   11128:	subhi	r4, sl, #1552	; 0x610
   1112c:	push	{fp, lr}
   11130:	add	fp, sp, #4
   11134:	sub	sp, sp, #16
   11138:	str	r0, [fp, #-16]
   1113c:	str	r1, [fp, #-20]	; 0xffffffec
   11140:	ldr	r0, [fp, #-20]	; 0xffffffec
   11144:	bl	11070 <__assert_fail@plt+0x4e4>
   11148:	mov	r3, r0
   1114c:	mov	r2, r3
   11150:	ldr	r3, [fp, #-16]
   11154:	ldr	r3, [r3, r2, lsl #4]
   11158:	str	r3, [fp, #-8]
   1115c:	b	1116c <__assert_fail@plt+0x5e0>
   11160:	ldr	r3, [fp, #-8]
   11164:	ldr	r3, [r3, #4]
   11168:	str	r3, [fp, #-8]
   1116c:	ldr	r3, [fp, #-8]
   11170:	cmp	r3, #0
   11174:	beq	11198 <__assert_fail@plt+0x60c>
   11178:	ldr	r3, [fp, #-8]
   1117c:	ldr	r3, [r3, #8]
   11180:	mov	r1, r3
   11184:	ldr	r0, [fp, #-20]	; 0xffffffec
   11188:	bl	109e8 <strcmp@plt>
   1118c:	mov	r3, r0
   11190:	cmp	r3, #0
   11194:	bne	11160 <__assert_fail@plt+0x5d4>
   11198:	ldr	r3, [fp, #-8]
   1119c:	mov	r0, r3
   111a0:	sub	sp, fp, #4
   111a4:	pop	{fp, pc}
   111a8:	push	{fp, lr}
   111ac:	add	fp, sp, #4
   111b0:	sub	sp, sp, #8
   111b4:	str	r0, [fp, #-8]
   111b8:	ldr	r3, [fp, #-8]
   111bc:	add	r3, r3, #4096	; 0x1000
   111c0:	ldr	r3, [r3, #3952]	; 0xf70
   111c4:	cmp	r3, #0
   111c8:	beq	111f4 <__assert_fail@plt+0x668>
   111cc:	ldr	r3, [fp, #-8]
   111d0:	add	r3, r3, #4096	; 0x1000
   111d4:	ldr	r3, [r3, #3952]	; 0xf70
   111d8:	mov	r0, r3
   111dc:	bl	10a0c <free@plt>
   111e0:	ldr	r3, [fp, #-8]
   111e4:	add	r3, r3, #4096	; 0x1000
   111e8:	mov	r2, r3
   111ec:	mov	r3, #0
   111f0:	str	r3, [r2, #3952]	; 0xf70
   111f4:	nop			; (mov r0, r0)
   111f8:	sub	sp, fp, #4
   111fc:	pop	{fp, pc}
   11200:	push	{fp, lr}
   11204:	add	fp, sp, #4
   11208:	sub	sp, sp, #8
   1120c:	str	r0, [fp, #-8]
   11210:	str	r1, [fp, #-12]
   11214:	ldr	r3, [fp, #-12]
   11218:	ldr	r3, [r3, #8]
   1121c:	mov	r0, r3
   11220:	bl	11070 <__assert_fail@plt+0x4e4>
   11224:	mov	r3, r0
   11228:	lsl	r3, r3, #4
   1122c:	ldr	r2, [fp, #-8]
   11230:	add	r3, r2, r3
   11234:	ldr	r1, [fp, #-12]
   11238:	mov	r0, r3
   1123c:	bl	144bc <error@@Base+0x2504>
   11240:	ldr	r0, [fp, #-8]
   11244:	bl	111a8 <__assert_fail@plt+0x61c>
   11248:	ldr	r3, [fp, #-8]
   1124c:	add	r3, r3, #4096	; 0x1000
   11250:	ldr	r3, [r3, #3956]	; 0xf74
   11254:	add	r3, r3, #1
   11258:	ldr	r2, [fp, #-8]
   1125c:	add	r2, r2, #4096	; 0x1000
   11260:	str	r3, [r2, #3956]	; 0xf74
   11264:	nop			; (mov r0, r0)
   11268:	sub	sp, fp, #4
   1126c:	pop	{fp, pc}
   11270:	push	{fp, lr}
   11274:	add	fp, sp, #4
   11278:	sub	sp, sp, #8
   1127c:	str	r0, [fp, #-8]
   11280:	str	r1, [fp, #-12]
   11284:	ldr	r3, [fp, #-12]
   11288:	ldr	r3, [r3, #8]
   1128c:	mov	r0, r3
   11290:	bl	11070 <__assert_fail@plt+0x4e4>
   11294:	mov	r3, r0
   11298:	lsl	r3, r3, #4
   1129c:	ldr	r2, [fp, #-8]
   112a0:	add	r3, r2, r3
   112a4:	ldr	r1, [fp, #-12]
   112a8:	mov	r0, r3
   112ac:	bl	145a4 <error@@Base+0x25ec>
   112b0:	ldr	r0, [fp, #-8]
   112b4:	bl	111a8 <__assert_fail@plt+0x61c>
   112b8:	ldr	r3, [fp, #-8]
   112bc:	add	r3, r3, #4096	; 0x1000
   112c0:	ldr	r3, [r3, #3956]	; 0xf74
   112c4:	sub	r3, r3, #1
   112c8:	ldr	r2, [fp, #-8]
   112cc:	add	r2, r2, #4096	; 0x1000
   112d0:	str	r3, [r2, #3956]	; 0xf74
   112d4:	nop			; (mov r0, r0)
   112d8:	sub	sp, fp, #4
   112dc:	pop	{fp, pc}
   112e0:	push	{fp, lr}
   112e4:	add	fp, sp, #4
   112e8:	sub	sp, sp, #24
   112ec:	str	r0, [fp, #-24]	; 0xffffffe8
   112f0:	mov	r3, #0
   112f4:	str	r3, [fp, #-16]
   112f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   112fc:	add	r3, r3, #4096	; 0x1000
   11300:	ldr	r3, [r3, #3952]	; 0xf70
   11304:	cmp	r3, #0
   11308:	bne	113c8 <__assert_fail@plt+0x83c>
   1130c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11310:	add	r3, r3, #4096	; 0x1000
   11314:	ldr	r3, [r3, #3956]	; 0xf74
   11318:	cmp	r3, #0
   1131c:	beq	113c8 <__assert_fail@plt+0x83c>
   11320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11324:	add	r3, r3, #4096	; 0x1000
   11328:	ldr	r3, [r3, #3956]	; 0xf74
   1132c:	mov	r1, #4
   11330:	mov	r0, r3
   11334:	bl	11464 <__assert_fail@plt+0x8d8>
   11338:	mov	r2, r0
   1133c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11340:	add	r3, r3, #4096	; 0x1000
   11344:	str	r2, [r3, #3952]	; 0xf70
   11348:	mov	r3, #0
   1134c:	str	r3, [fp, #-12]
   11350:	b	113b4 <__assert_fail@plt+0x828>
   11354:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11358:	ldr	r2, [fp, #-12]
   1135c:	ldr	r3, [r3, r2, lsl #4]
   11360:	str	r3, [fp, #-8]
   11364:	b	1139c <__assert_fail@plt+0x810>
   11368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1136c:	add	r3, r3, #4096	; 0x1000
   11370:	ldr	r2, [r3, #3952]	; 0xf70
   11374:	ldr	r3, [fp, #-16]
   11378:	add	r1, r3, #1
   1137c:	str	r1, [fp, #-16]
   11380:	lsl	r3, r3, #2
   11384:	add	r3, r2, r3
   11388:	ldr	r2, [fp, #-8]
   1138c:	str	r2, [r3]
   11390:	ldr	r3, [fp, #-8]
   11394:	ldr	r3, [r3, #4]
   11398:	str	r3, [fp, #-8]
   1139c:	ldr	r3, [fp, #-8]
   113a0:	cmp	r3, #0
   113a4:	bne	11368 <__assert_fail@plt+0x7dc>
   113a8:	ldr	r3, [fp, #-12]
   113ac:	add	r3, r3, #1
   113b0:	str	r3, [fp, #-12]
   113b4:	ldr	r3, [fp, #-12]
   113b8:	ldr	r2, [pc, #20]	; 113d4 <__assert_fail@plt+0x848>
   113bc:	cmp	r3, r2
   113c0:	ble	11354 <__assert_fail@plt+0x7c8>
   113c4:	b	113cc <__assert_fail@plt+0x840>
   113c8:	nop			; (mov r0, r0)
   113cc:	sub	sp, fp, #4
   113d0:	pop	{fp, pc}
   113d4:	strdeq	r0, [r0], -r6
   113d8:	push	{fp, lr}
   113dc:	add	fp, sp, #4
   113e0:	sub	sp, sp, #16
   113e4:	str	r0, [fp, #-16]
   113e8:	str	r1, [fp, #-20]	; 0xffffffec
   113ec:	mov	r3, #0
   113f0:	strh	r3, [fp, #-6]
   113f4:	b	11428 <__assert_fail@plt+0x89c>
   113f8:	ldrsh	r3, [fp, #-6]
   113fc:	lsl	r3, r3, #4
   11400:	ldr	r2, [fp, #-16]
   11404:	add	r3, r2, r3
   11408:	ldr	r1, [fp, #-20]	; 0xffffffec
   1140c:	mov	r0, r3
   11410:	bl	14720 <error@@Base+0x2768>
   11414:	ldrsh	r3, [fp, #-6]
   11418:	uxth	r3, r3
   1141c:	add	r3, r3, #1
   11420:	uxth	r3, r3
   11424:	strh	r3, [fp, #-6]
   11428:	ldrsh	r3, [fp, #-6]
   1142c:	ldr	r2, [pc, #44]	; 11460 <__assert_fail@plt+0x8d4>
   11430:	cmp	r3, r2
   11434:	ble	113f8 <__assert_fail@plt+0x86c>
   11438:	ldr	r0, [fp, #-16]
   1143c:	bl	111a8 <__assert_fail@plt+0x61c>
   11440:	ldr	r3, [fp, #-16]
   11444:	add	r3, r3, #4096	; 0x1000
   11448:	mov	r2, r3
   1144c:	mov	r3, #0
   11450:	str	r3, [r2, #3956]	; 0xf74
   11454:	nop			; (mov r0, r0)
   11458:	sub	sp, fp, #4
   1145c:	pop	{fp, pc}
   11460:	strdeq	r0, [r0], -r6
   11464:	push	{fp, lr}
   11468:	add	fp, sp, #4
   1146c:	sub	sp, sp, #16
   11470:	str	r0, [fp, #-16]
   11474:	str	r1, [fp, #-20]	; 0xffffffec
   11478:	ldr	r1, [fp, #-20]	; 0xffffffec
   1147c:	ldr	r0, [fp, #-16]
   11480:	bl	109dc <calloc@plt>
   11484:	mov	r3, r0
   11488:	str	r3, [fp, #-8]
   1148c:	ldr	r3, [fp, #-8]
   11490:	cmp	r3, #0
   11494:	bne	114a8 <__assert_fail@plt+0x91c>
   11498:	ldr	r3, [pc, #24]	; 114b8 <__assert_fail@plt+0x92c>
   1149c:	add	r3, pc, r3
   114a0:	mov	r0, r3
   114a4:	bl	11fb8 <error@@Base>
   114a8:	ldr	r3, [fp, #-8]
   114ac:	mov	r0, r3
   114b0:	sub	sp, fp, #4
   114b4:	pop	{fp, pc}
   114b8:	andeq	r3, r0, r4, ror #12
   114bc:	push	{fp}		; (str fp, [sp, #-4]!)
   114c0:	add	fp, sp, #0
   114c4:	sub	sp, sp, #20
   114c8:	str	r0, [fp, #-16]
   114cc:	str	r1, [fp, #-20]	; 0xffffffec
   114d0:	mov	r3, #0
   114d4:	str	r3, [fp, #-8]
   114d8:	b	114e8 <__assert_fail@plt+0x95c>
   114dc:	ldr	r3, [fp, #-8]
   114e0:	add	r3, r3, #1
   114e4:	str	r3, [fp, #-8]
   114e8:	ldr	r3, [fp, #-8]
   114ec:	ldr	r2, [fp, #-16]
   114f0:	add	r3, r2, r3
   114f4:	ldrb	r3, [r3]
   114f8:	cmp	r3, #0
   114fc:	beq	11528 <__assert_fail@plt+0x99c>
   11500:	ldr	r3, [fp, #-8]
   11504:	ldr	r2, [fp, #-16]
   11508:	add	r3, r2, r3
   1150c:	ldrb	r2, [r3]
   11510:	ldr	r3, [fp, #-8]
   11514:	ldr	r1, [fp, #-20]	; 0xffffffec
   11518:	add	r3, r1, r3
   1151c:	ldrb	r3, [r3]
   11520:	cmp	r2, r3
   11524:	beq	114dc <__assert_fail@plt+0x950>
   11528:	ldr	r3, [fp, #-8]
   1152c:	ldr	r2, [fp, #-16]
   11530:	add	r3, r2, r3
   11534:	ldrb	r3, [r3]
   11538:	cmp	r3, #0
   1153c:	bne	11558 <__assert_fail@plt+0x9cc>
   11540:	ldr	r3, [fp, #-8]
   11544:	ldr	r2, [fp, #-20]	; 0xffffffec
   11548:	add	r3, r2, r3
   1154c:	ldrb	r3, [r3]
   11550:	cmp	r3, #0
   11554:	beq	11590 <__assert_fail@plt+0xa04>
   11558:	ldr	r3, [fp, #-8]
   1155c:	ldr	r2, [fp, #-16]
   11560:	add	r3, r2, r3
   11564:	ldrb	r2, [r3]
   11568:	ldr	r3, [fp, #-8]
   1156c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11570:	add	r3, r1, r3
   11574:	ldrb	r3, [r3]
   11578:	cmp	r2, r3
   1157c:	bcs	11588 <__assert_fail@plt+0x9fc>
   11580:	mvn	r3, #0
   11584:	b	11594 <__assert_fail@plt+0xa08>
   11588:	mov	r3, #1
   1158c:	b	11594 <__assert_fail@plt+0xa08>
   11590:	mov	r3, #0
   11594:	mov	r0, r3
   11598:	add	sp, fp, #0
   1159c:	pop	{fp}		; (ldr fp, [sp], #4)
   115a0:	bx	lr
   115a4:	push	{fp, lr}
   115a8:	add	fp, sp, #4
   115ac:	sub	sp, sp, #16
   115b0:	str	r0, [fp, #-16]
   115b4:	str	r1, [fp, #-20]	; 0xffffffec
   115b8:	ldr	r3, [pc, #164]	; 11664 <__assert_fail@plt+0xad8>
   115bc:	add	r3, pc, r3
   115c0:	ldr	r2, [fp, #-16]
   115c4:	cmp	r2, #0
   115c8:	bne	115fc <__assert_fail@plt+0xa70>
   115cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   115d0:	ldrb	r2, [r2]
   115d4:	cmp	r2, #114	; 0x72
   115d8:	bne	115ec <__assert_fail@plt+0xa60>
   115dc:	ldr	r2, [pc, #132]	; 11668 <__assert_fail@plt+0xadc>
   115e0:	ldr	r3, [r3, r2]
   115e4:	ldr	r3, [r3]
   115e8:	b	11658 <__assert_fail@plt+0xacc>
   115ec:	ldr	r2, [pc, #120]	; 1166c <__assert_fail@plt+0xae0>
   115f0:	ldr	r3, [r3, r2]
   115f4:	ldr	r3, [r3]
   115f8:	b	11658 <__assert_fail@plt+0xacc>
   115fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   11600:	ldr	r0, [fp, #-16]
   11604:	bl	10a00 <fopen@plt>
   11608:	str	r0, [fp, #-8]
   1160c:	ldr	r3, [fp, #-8]
   11610:	cmp	r3, #0
   11614:	beq	11620 <__assert_fail@plt+0xa94>
   11618:	ldr	r3, [fp, #-8]
   1161c:	b	11658 <__assert_fail@plt+0xacc>
   11620:	ldr	r3, [fp, #-20]	; 0xffffffec
   11624:	ldrb	r3, [r3]
   11628:	cmp	r3, #119	; 0x77
   1162c:	bne	11644 <__assert_fail@plt+0xab8>
   11630:	ldr	r1, [fp, #-16]
   11634:	ldr	r3, [pc, #52]	; 11670 <__assert_fail@plt+0xae4>
   11638:	add	r3, pc, r3
   1163c:	mov	r0, r3
   11640:	bl	12020 <error@@Base+0x68>
   11644:	ldr	r1, [fp, #-16]
   11648:	ldr	r3, [pc, #36]	; 11674 <__assert_fail@plt+0xae8>
   1164c:	add	r3, pc, r3
   11650:	mov	r0, r3
   11654:	bl	12020 <error@@Base+0x68>
   11658:	mov	r0, r3
   1165c:	sub	sp, fp, #4
   11660:	pop	{fp, pc}
   11664:	andeq	r7, r1, ip, lsr sl
   11668:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1166c:	ldrdeq	r0, [r0], -r4
   11670:	andeq	r3, r0, r4, ror #9
   11674:	andeq	r3, r0, r8, ror #9
   11678:	push	{fp, lr}
   1167c:	add	fp, sp, #4
   11680:	sub	sp, sp, #8
   11684:	str	r0, [fp, #-8]
   11688:	ldr	r3, [pc, #68]	; 116d4 <__assert_fail@plt+0xb48>
   1168c:	add	r3, pc, r3
   11690:	ldr	r2, [pc, #64]	; 116d8 <__assert_fail@plt+0xb4c>
   11694:	ldr	r2, [r3, r2]
   11698:	ldr	r2, [r2]
   1169c:	ldr	r1, [fp, #-8]
   116a0:	cmp	r1, r2
   116a4:	beq	116c8 <__assert_fail@plt+0xb3c>
   116a8:	ldr	r2, [pc, #44]	; 116dc <__assert_fail@plt+0xb50>
   116ac:	ldr	r3, [r3, r2]
   116b0:	ldr	r3, [r3]
   116b4:	ldr	r2, [fp, #-8]
   116b8:	cmp	r2, r3
   116bc:	beq	116c8 <__assert_fail@plt+0xb3c>
   116c0:	ldr	r0, [fp, #-8]
   116c4:	bl	10b14 <fclose@plt>
   116c8:	nop			; (mov r0, r0)
   116cc:	sub	sp, fp, #4
   116d0:	pop	{fp, pc}
   116d4:	andeq	r7, r1, ip, ror #18
   116d8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   116dc:	ldrdeq	r0, [r0], -r4
   116e0:	push	{fp, lr}
   116e4:	add	fp, sp, #4
   116e8:	sub	sp, sp, #96	; 0x60
   116ec:	str	r0, [fp, #-96]	; 0xffffffa0
   116f0:	sub	r3, fp, #92	; 0x5c
   116f4:	mov	r1, r3
   116f8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   116fc:	bl	14aa4 <error@@Base+0x2aec>
   11700:	mov	r3, r0
   11704:	cmp	r3, #0
   11708:	moveq	r3, #1
   1170c:	movne	r3, #0
   11710:	uxtb	r3, r3
   11714:	mov	r0, r3
   11718:	sub	sp, fp, #4
   1171c:	pop	{fp, pc}
   11720:	push	{r4, fp, lr}
   11724:	add	fp, sp, #8
   11728:	sub	sp, sp, #124	; 0x7c
   1172c:	mov	r3, r0
   11730:	strh	r3, [fp, #-120]	; 0xffffff88
   11734:	ldr	r2, [pc, #80]	; 1178c <__assert_fail@plt+0xc00>
   11738:	add	r2, pc, r2
   1173c:	ldr	r3, [pc, #76]	; 11790 <__assert_fail@plt+0xc04>
   11740:	ldr	r3, [r2, r3]
   11744:	ldr	r4, [r3]
   11748:	bl	10acc <getpid@plt>
   1174c:	mov	r2, r0
   11750:	ldrsh	r3, [fp, #-120]	; 0xffffff88
   11754:	sub	r0, fp, #112	; 0x70
   11758:	str	r3, [sp]
   1175c:	mov	r3, r2
   11760:	mov	r2, r4
   11764:	ldr	r1, [pc, #40]	; 11794 <__assert_fail@plt+0xc08>
   11768:	add	r1, pc, r1
   1176c:	bl	10b38 <sprintf@plt>
   11770:	sub	r3, fp, #112	; 0x70
   11774:	mov	r0, r3
   11778:	bl	10a3c <strdup@plt>
   1177c:	mov	r3, r0
   11780:	mov	r0, r3
   11784:	sub	sp, fp, #8
   11788:	pop	{r4, fp, pc}
   1178c:	andeq	r7, r1, r0, asr #17
   11790:	andeq	r0, r0, r0, asr #1
   11794:	andeq	r3, r0, r0, ror #7
   11798:	push	{fp, lr}
   1179c:	add	fp, sp, #4
   117a0:	sub	sp, sp, #8
   117a4:	ldr	r3, [pc, #80]	; 117fc <__assert_fail@plt+0xc70>
   117a8:	add	r3, pc, r3
   117ac:	ldrsh	r3, [r3]
   117b0:	uxth	r3, r3
   117b4:	add	r3, r3, #1
   117b8:	uxth	r3, r3
   117bc:	sxth	r2, r3
   117c0:	ldr	r3, [pc, #56]	; 11800 <__assert_fail@plt+0xc74>
   117c4:	add	r3, pc, r3
   117c8:	strh	r2, [r3]
   117cc:	ldr	r3, [pc, #48]	; 11804 <__assert_fail@plt+0xc78>
   117d0:	add	r3, pc, r3
   117d4:	ldrsh	r3, [r3]
   117d8:	mov	r0, r3
   117dc:	bl	11720 <__assert_fail@plt+0xb94>
   117e0:	str	r0, [fp, #-8]
   117e4:	ldr	r0, [fp, #-8]
   117e8:	bl	10a54 <unlink@plt>
   117ec:	ldr	r3, [fp, #-8]
   117f0:	mov	r0, r3
   117f4:	sub	sp, fp, #4
   117f8:	pop	{fp, pc}
   117fc:	andeq	r7, r1, r4, asr r9
   11800:	andeq	r7, r1, r8, lsr r9
   11804:	andeq	r7, r1, ip, lsr #18
   11808:	push	{fp, lr}
   1180c:	add	fp, sp, #4
   11810:	sub	sp, sp, #8
   11814:	mov	r3, #1
   11818:	strh	r3, [fp, #-6]
   1181c:	b	11854 <__assert_fail@plt+0xcc8>
   11820:	ldrsh	r3, [fp, #-6]
   11824:	mov	r0, r3
   11828:	bl	11720 <__assert_fail@plt+0xb94>
   1182c:	str	r0, [fp, #-12]
   11830:	ldr	r0, [fp, #-12]
   11834:	bl	10a54 <unlink@plt>
   11838:	ldr	r0, [fp, #-12]
   1183c:	bl	10a0c <free@plt>
   11840:	ldrsh	r3, [fp, #-6]
   11844:	uxth	r3, r3
   11848:	add	r3, r3, #1
   1184c:	uxth	r3, r3
   11850:	strh	r3, [fp, #-6]
   11854:	ldr	r3, [pc, #28]	; 11878 <__assert_fail@plt+0xcec>
   11858:	add	r3, pc, r3
   1185c:	ldrsh	r3, [r3]
   11860:	ldrsh	r2, [fp, #-6]
   11864:	cmp	r2, r3
   11868:	ble	11820 <__assert_fail@plt+0xc94>
   1186c:	nop			; (mov r0, r0)
   11870:	sub	sp, fp, #4
   11874:	pop	{fp, pc}
   11878:	andeq	r7, r1, r4, lsr #17
   1187c:	push	{fp, lr}
   11880:	add	fp, sp, #4
   11884:	sub	sp, sp, #16
   11888:	str	r0, [fp, #-16]
   1188c:	mov	r3, #47	; 0x2f
   11890:	strb	r3, [fp, #-7]
   11894:	ldr	r0, [fp, #-16]
   11898:	bl	10af0 <strlen@plt>
   1189c:	mov	r3, r0
   118a0:	uxth	r3, r3
   118a4:	sub	r3, r3, #1
   118a8:	uxth	r3, r3
   118ac:	strh	r3, [fp, #-6]
   118b0:	b	118c8 <__assert_fail@plt+0xd3c>
   118b4:	ldrsh	r3, [fp, #-6]
   118b8:	uxth	r3, r3
   118bc:	sub	r3, r3, #1
   118c0:	uxth	r3, r3
   118c4:	strh	r3, [fp, #-6]
   118c8:	ldrsh	r3, [fp, #-6]
   118cc:	cmp	r3, #0
   118d0:	blt	118f0 <__assert_fail@plt+0xd64>
   118d4:	ldrsh	r3, [fp, #-6]
   118d8:	ldr	r2, [fp, #-16]
   118dc:	add	r3, r2, r3
   118e0:	ldrb	r3, [r3]
   118e4:	ldrb	r2, [fp, #-7]
   118e8:	cmp	r2, r3
   118ec:	bne	118b4 <__assert_fail@plt+0xd28>
   118f0:	ldrsh	r3, [fp, #-6]
   118f4:	add	r3, r3, #1
   118f8:	ldr	r2, [fp, #-16]
   118fc:	add	r3, r2, r3
   11900:	mov	r0, r3
   11904:	sub	sp, fp, #4
   11908:	pop	{fp, pc}
   1190c:	push	{fp, lr}
   11910:	add	fp, sp, #4
   11914:	sub	sp, sp, #8
   11918:	str	r0, [fp, #-8]
   1191c:	ldr	r3, [pc, #56]	; 1195c <__assert_fail@plt+0xdd0>
   11920:	add	r3, pc, r3
   11924:	ldrb	r3, [r3]
   11928:	cmp	r3, #0
   1192c:	bne	11950 <__assert_fail@plt+0xdc4>
   11930:	ldr	r3, [pc, #40]	; 11960 <__assert_fail@plt+0xdd4>
   11934:	add	r3, pc, r3
   11938:	mov	r2, #1
   1193c:	strb	r2, [r3]
   11940:	ldr	r3, [pc, #28]	; 11964 <__assert_fail@plt+0xdd8>
   11944:	add	r3, pc, r3
   11948:	mov	r0, r3
   1194c:	bl	11fb8 <error@@Base>
   11950:	nop			; (mov r0, r0)
   11954:	sub	sp, fp, #4
   11958:	pop	{fp, pc}
   1195c:	ldrdeq	r7, [r1], -lr
   11960:	andeq	r7, r1, sl, asr #15
   11964:	andeq	r3, r0, r4, lsl r2
   11968:	push	{fp, lr}
   1196c:	add	fp, sp, #4
   11970:	ldr	r3, [pc, #40]	; 119a0 <__assert_fail@plt+0xe14>
   11974:	add	r3, pc, r3
   11978:	mov	r1, r3
   1197c:	mov	r0, #2
   11980:	bl	10ab4 <__sysv_signal@plt>
   11984:	ldr	r3, [pc, #24]	; 119a4 <__assert_fail@plt+0xe18>
   11988:	add	r3, pc, r3
   1198c:	mov	r1, r3
   11990:	mov	r0, #15
   11994:	bl	10ab4 <__sysv_signal@plt>
   11998:	nop			; (mov r0, r0)
   1199c:	pop	{fp, pc}
   119a0:			; <UNDEFINED> instruction: 0xffffff90
   119a4:			; <UNDEFINED> instruction: 0xffffff7c
   119a8:	push	{fp, lr}
   119ac:	add	fp, sp, #4
   119b0:	sub	sp, sp, #8
   119b4:	str	r0, [fp, #-8]
   119b8:	ldr	r3, [pc, #84]	; 11a14 <__assert_fail@plt+0xe88>
   119bc:	add	r3, pc, r3
   119c0:	ldr	r2, [pc, #80]	; 11a18 <__assert_fail@plt+0xe8c>
   119c4:	ldr	r2, [r3, r2]
   119c8:	ldr	r2, [r2]
   119cc:	cmp	r2, #0
   119d0:	beq	119e8 <__assert_fail@plt+0xe5c>
   119d4:	ldr	r2, [pc, #60]	; 11a18 <__assert_fail@plt+0xe8c>
   119d8:	ldr	r3, [r3, r2]
   119dc:	ldr	r3, [r3]
   119e0:	blx	r3
   119e4:	b	11a10 <__assert_fail@plt+0xe84>
   119e8:	ldr	r2, [pc, #44]	; 11a1c <__assert_fail@plt+0xe90>
   119ec:	ldr	r2, [r3, r2]
   119f0:	ldr	r0, [r2]
   119f4:	ldr	r2, [pc, #36]	; 11a20 <__assert_fail@plt+0xe94>
   119f8:	ldr	r3, [r3, r2]
   119fc:	ldr	r2, [r3]
   11a00:	ldr	r3, [fp, #-8]
   11a04:	ldr	r1, [pc, #24]	; 11a24 <__assert_fail@plt+0xe98>
   11a08:	add	r1, pc, r1
   11a0c:	bl	10afc <fprintf@plt>
   11a10:	bl	11fa8 <__assert_fail@plt+0x141c>
   11a14:	andeq	r7, r1, ip, lsr r6
   11a18:	andeq	r0, r0, ip, lsr #1
   11a1c:	strheq	r0, [r0], -r8
   11a20:	andeq	r0, r0, r0, asr #1
   11a24:	andeq	r3, r0, r0, ror #2
   11a28:	push	{fp, lr}
   11a2c:	add	fp, sp, #4
   11a30:	sub	sp, sp, #24
   11a34:	str	r0, [fp, #-16]
   11a38:	str	r1, [fp, #-20]	; 0xffffffec
   11a3c:	str	r2, [fp, #-24]	; 0xffffffe8
   11a40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a44:	cmp	r3, #0
   11a48:	beq	11c88 <__assert_fail@plt+0x10fc>
   11a4c:	mov	r3, #0
   11a50:	strh	r3, [fp, #-6]
   11a54:	b	11a6c <__assert_fail@plt+0xee0>
   11a58:	ldrsh	r3, [fp, #-6]
   11a5c:	uxth	r3, r3
   11a60:	add	r3, r3, #1
   11a64:	uxth	r3, r3
   11a68:	strh	r3, [fp, #-6]
   11a6c:	ldrsh	r2, [fp, #-6]
   11a70:	mov	r3, r2
   11a74:	lsl	r3, r3, #1
   11a78:	add	r3, r3, r2
   11a7c:	lsl	r3, r3, #2
   11a80:	mov	r2, r3
   11a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a88:	add	r3, r3, r2
   11a8c:	ldrb	r3, [r3]
   11a90:	cmp	r3, #0
   11a94:	beq	11ad0 <__assert_fail@plt+0xf44>
   11a98:	ldr	r3, [fp, #-16]
   11a9c:	add	r3, r3, #1
   11aa0:	ldrb	r1, [r3]
   11aa4:	ldrsh	r2, [fp, #-6]
   11aa8:	mov	r3, r2
   11aac:	lsl	r3, r3, #1
   11ab0:	add	r3, r3, r2
   11ab4:	lsl	r3, r3, #2
   11ab8:	mov	r2, r3
   11abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ac0:	add	r3, r3, r2
   11ac4:	ldrb	r3, [r3]
   11ac8:	cmp	r1, r3
   11acc:	bne	11a58 <__assert_fail@plt+0xecc>
   11ad0:	ldrsh	r2, [fp, #-6]
   11ad4:	mov	r3, r2
   11ad8:	lsl	r3, r3, #1
   11adc:	add	r3, r3, r2
   11ae0:	lsl	r3, r3, #2
   11ae4:	mov	r2, r3
   11ae8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11aec:	add	r3, r3, r2
   11af0:	ldrb	r3, [r3]
   11af4:	cmp	r3, #0
   11af8:	beq	11c90 <__assert_fail@plt+0x1104>
   11afc:	ldrsh	r2, [fp, #-6]
   11b00:	mov	r3, r2
   11b04:	lsl	r3, r3, #1
   11b08:	add	r3, r3, r2
   11b0c:	lsl	r3, r3, #2
   11b10:	mov	r2, r3
   11b14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b18:	add	r3, r3, r2
   11b1c:	ldr	r3, [r3, #4]
   11b20:	cmp	r3, #0
   11b24:	beq	11be4 <__assert_fail@plt+0x1058>
   11b28:	ldr	r3, [fp, #-16]
   11b2c:	add	r3, r3, #2
   11b30:	ldrb	r3, [r3]
   11b34:	cmp	r3, #0
   11b38:	bne	11b48 <__assert_fail@plt+0xfbc>
   11b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b40:	cmp	r3, #0
   11b44:	beq	11be4 <__assert_fail@plt+0x1058>
   11b48:	ldrsh	r2, [fp, #-6]
   11b4c:	mov	r3, r2
   11b50:	lsl	r3, r3, #1
   11b54:	add	r3, r3, r2
   11b58:	lsl	r3, r3, #2
   11b5c:	mov	r2, r3
   11b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b64:	add	r3, r3, r2
   11b68:	ldr	r3, [r3, #4]
   11b6c:	ldr	r3, [r3]
   11b70:	cmp	r3, #0
   11b74:	bne	11ca8 <__assert_fail@plt+0x111c>
   11b78:	ldrsh	r2, [fp, #-6]
   11b7c:	mov	r3, r2
   11b80:	lsl	r3, r3, #1
   11b84:	add	r3, r3, r2
   11b88:	lsl	r3, r3, #2
   11b8c:	mov	r2, r3
   11b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b94:	add	r3, r3, r2
   11b98:	ldr	r2, [r3, #4]
   11b9c:	ldr	r3, [fp, #-16]
   11ba0:	add	r3, r3, #2
   11ba4:	ldrb	r3, [r3]
   11ba8:	cmp	r3, #0
   11bac:	beq	11bbc <__assert_fail@plt+0x1030>
   11bb0:	ldr	r3, [fp, #-16]
   11bb4:	add	r3, r3, #2
   11bb8:	b	11bc0 <__assert_fail@plt+0x1034>
   11bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   11bc0:	str	r3, [r2]
   11bc4:	ldr	r3, [fp, #-16]
   11bc8:	add	r3, r3, #2
   11bcc:	ldrb	r3, [r3]
   11bd0:	cmp	r3, #0
   11bd4:	moveq	r3, #1
   11bd8:	movne	r3, #0
   11bdc:	uxtb	r3, r3
   11be0:	b	11cc8 <__assert_fail@plt+0x113c>
   11be4:	ldrsh	r2, [fp, #-6]
   11be8:	mov	r3, r2
   11bec:	lsl	r3, r3, #1
   11bf0:	add	r3, r3, r2
   11bf4:	lsl	r3, r3, #2
   11bf8:	mov	r2, r3
   11bfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c00:	add	r3, r3, r2
   11c04:	ldr	r3, [r3, #8]
   11c08:	cmp	r3, #0
   11c0c:	beq	11c94 <__assert_fail@plt+0x1108>
   11c10:	ldr	r3, [fp, #-16]
   11c14:	add	r3, r3, #2
   11c18:	ldrb	r3, [r3]
   11c1c:	cmp	r3, #0
   11c20:	bne	11c94 <__assert_fail@plt+0x1108>
   11c24:	ldrsh	r2, [fp, #-6]
   11c28:	mov	r3, r2
   11c2c:	lsl	r3, r3, #1
   11c30:	add	r3, r3, r2
   11c34:	lsl	r3, r3, #2
   11c38:	mov	r2, r3
   11c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c40:	add	r3, r3, r2
   11c44:	ldr	r3, [r3, #8]
   11c48:	ldrb	r3, [r3]
   11c4c:	cmp	r3, #0
   11c50:	bne	11cb0 <__assert_fail@plt+0x1124>
   11c54:	ldrsh	r2, [fp, #-6]
   11c58:	mov	r3, r2
   11c5c:	lsl	r3, r3, #1
   11c60:	add	r3, r3, r2
   11c64:	lsl	r3, r3, #2
   11c68:	mov	r2, r3
   11c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c70:	add	r3, r3, r2
   11c74:	ldr	r3, [r3, #8]
   11c78:	mov	r2, #1
   11c7c:	strb	r2, [r3]
   11c80:	mov	r3, #0
   11c84:	b	11cc8 <__assert_fail@plt+0x113c>
   11c88:	nop			; (mov r0, r0)
   11c8c:	b	11c94 <__assert_fail@plt+0x1108>
   11c90:	nop			; (mov r0, r0)
   11c94:	ldr	r1, [fp, #-16]
   11c98:	ldr	r3, [pc, #52]	; 11cd4 <__assert_fail@plt+0x1148>
   11c9c:	add	r3, pc, r3
   11ca0:	mov	r0, r3
   11ca4:	bl	12020 <error@@Base+0x68>
   11ca8:	nop			; (mov r0, r0)
   11cac:	b	11cb4 <__assert_fail@plt+0x1128>
   11cb0:	nop			; (mov r0, r0)
   11cb4:	ldr	r1, [fp, #-16]
   11cb8:	ldr	r3, [pc, #24]	; 11cd8 <__assert_fail@plt+0x114c>
   11cbc:	add	r3, pc, r3
   11cc0:	mov	r0, r3
   11cc4:	bl	12020 <error@@Base+0x68>
   11cc8:	mov	r0, r3
   11ccc:	sub	sp, fp, #4
   11cd0:	pop	{fp, pc}
   11cd4:	ldrdeq	r2, [r0], -ip
   11cd8:	andeq	r2, r0, ip, asr #29
   11cdc:	push	{r4, fp, lr}
   11ce0:	add	fp, sp, #8
   11ce4:	sub	sp, sp, #28
   11ce8:	str	r0, [fp, #-24]	; 0xffffffe8
   11cec:	str	r1, [fp, #-28]	; 0xffffffe4
   11cf0:	str	r2, [fp, #-32]	; 0xffffffe0
   11cf4:	str	r3, [fp, #-36]	; 0xffffffdc
   11cf8:	ldr	r2, [pc, #476]	; 11edc <__assert_fail@plt+0x1350>
   11cfc:	add	r2, pc, r2
   11d00:	mov	r3, #0
   11d04:	strh	r3, [fp, #-16]
   11d08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d0c:	ldr	r3, [r3]
   11d10:	cmp	r3, #1
   11d14:	bne	11d34 <__assert_fail@plt+0x11a8>
   11d18:	ldr	r3, [pc, #448]	; 11ee0 <__assert_fail@plt+0x1354>
   11d1c:	ldr	r3, [r2, r3]
   11d20:	ldrb	r3, [r3]
   11d24:	cmp	r3, #0
   11d28:	beq	11d34 <__assert_fail@plt+0x11a8>
   11d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d30:	bl	119a8 <__assert_fail@plt+0xe1c>
   11d34:	mov	r3, #1
   11d38:	strh	r3, [fp, #-14]
   11d3c:	b	11eb0 <__assert_fail@plt+0x1324>
   11d40:	ldrsh	r3, [fp, #-14]
   11d44:	lsl	r3, r3, #2
   11d48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d4c:	add	r3, r2, r3
   11d50:	ldr	r3, [r3]
   11d54:	ldrb	r3, [r3]
   11d58:	cmp	r3, #45	; 0x2d
   11d5c:	bne	11e60 <__assert_fail@plt+0x12d4>
   11d60:	ldrsh	r3, [fp, #-14]
   11d64:	lsl	r3, r3, #2
   11d68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d6c:	add	r3, r2, r3
   11d70:	ldr	r3, [r3]
   11d74:	add	r3, r3, #1
   11d78:	ldrb	r3, [r3]
   11d7c:	cmp	r3, #0
   11d80:	beq	11e60 <__assert_fail@plt+0x12d4>
   11d84:	ldrsh	r3, [fp, #-14]
   11d88:	lsl	r3, r3, #2
   11d8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11d90:	add	r3, r2, r3
   11d94:	ldr	r4, [r3]
   11d98:	ldrsh	r3, [fp, #-14]
   11d9c:	lsl	r3, r3, #2
   11da0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11da4:	add	r3, r2, r3
   11da8:	ldr	r3, [r3]
   11dac:	mov	r0, r3
   11db0:	bl	10af0 <strlen@plt>
   11db4:	mov	r3, r0
   11db8:	mov	r2, r3
   11dbc:	mov	r1, r4
   11dc0:	ldr	r3, [pc, #284]	; 11ee4 <__assert_fail@plt+0x1358>
   11dc4:	add	r3, pc, r3
   11dc8:	mov	r0, r3
   11dcc:	bl	10b68 <strncmp@plt>
   11dd0:	mov	r3, r0
   11dd4:	cmp	r3, #0
   11dd8:	bne	11de4 <__assert_fail@plt+0x1258>
   11ddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11de0:	bl	119a8 <__assert_fail@plt+0xe1c>
   11de4:	ldrsh	r3, [fp, #-14]
   11de8:	lsl	r3, r3, #2
   11dec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11df0:	add	r3, r2, r3
   11df4:	ldr	r0, [r3]
   11df8:	ldrsh	r3, [fp, #-14]
   11dfc:	add	r2, r3, #1
   11e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11e04:	ldr	r3, [r3]
   11e08:	cmp	r2, r3
   11e0c:	bge	11e2c <__assert_fail@plt+0x12a0>
   11e10:	ldrsh	r3, [fp, #-14]
   11e14:	add	r3, r3, #1
   11e18:	lsl	r3, r3, #2
   11e1c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e20:	add	r3, r2, r3
   11e24:	ldr	r3, [r3]
   11e28:	b	11e30 <__assert_fail@plt+0x12a4>
   11e2c:	mov	r3, #0
   11e30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11e34:	mov	r1, r3
   11e38:	bl	11a28 <__assert_fail@plt+0xe9c>
   11e3c:	mov	r3, r0
   11e40:	cmp	r3, #0
   11e44:	beq	11e9c <__assert_fail@plt+0x1310>
   11e48:	ldrsh	r3, [fp, #-14]
   11e4c:	uxth	r3, r3
   11e50:	add	r3, r3, #1
   11e54:	uxth	r3, r3
   11e58:	strh	r3, [fp, #-14]
   11e5c:	b	11e9c <__assert_fail@plt+0x1310>
   11e60:	ldrsh	r2, [fp, #-16]
   11e64:	uxth	r3, r2
   11e68:	add	r3, r3, #1
   11e6c:	uxth	r3, r3
   11e70:	strh	r3, [fp, #-16]
   11e74:	mov	r3, r2
   11e78:	lsl	r3, r3, #2
   11e7c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e80:	add	r3, r2, r3
   11e84:	ldrsh	r2, [fp, #-14]
   11e88:	lsl	r2, r2, #2
   11e8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11e90:	add	r2, r1, r2
   11e94:	ldr	r2, [r2]
   11e98:	str	r2, [r3]
   11e9c:	ldrsh	r3, [fp, #-14]
   11ea0:	uxth	r3, r3
   11ea4:	add	r3, r3, #1
   11ea8:	uxth	r3, r3
   11eac:	strh	r3, [fp, #-14]
   11eb0:	ldrsh	r2, [fp, #-14]
   11eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11eb8:	ldr	r3, [r3]
   11ebc:	cmp	r2, r3
   11ec0:	blt	11d40 <__assert_fail@plt+0x11b4>
   11ec4:	ldrsh	r2, [fp, #-16]
   11ec8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ecc:	str	r2, [r3]
   11ed0:	nop			; (mov r0, r0)
   11ed4:	sub	sp, fp, #8
   11ed8:	pop	{r4, fp, pc}
   11edc:	strdeq	r7, [r1], -ip
   11ee0:	andeq	r0, r0, r8, lsr #1
   11ee4:	ldrdeq	r2, [r0], -r8
   11ee8:	push	{r4, fp, lr}
   11eec:	add	fp, sp, #8
   11ef0:	sub	sp, sp, #20
   11ef4:	str	r0, [fp, #-16]
   11ef8:	str	r1, [fp, #-20]	; 0xffffffec
   11efc:	str	r2, [fp, #-24]	; 0xffffffe8
   11f00:	str	r3, [fp, #-28]	; 0xffffffe4
   11f04:	ldr	r4, [pc, #68]	; 11f50 <__assert_fail@plt+0x13c4>
   11f08:	add	r4, pc, r4
   11f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f10:	ldr	r3, [r3]
   11f14:	mov	r0, r3
   11f18:	bl	1187c <__assert_fail@plt+0xcf0>
   11f1c:	mov	r2, r0
   11f20:	ldr	r3, [pc, #44]	; 11f54 <__assert_fail@plt+0x13c8>
   11f24:	ldr	r3, [r4, r3]
   11f28:	str	r2, [r3]
   11f2c:	bl	11968 <__assert_fail@plt+0xddc>
   11f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11f38:	ldr	r1, [fp, #-20]	; 0xffffffec
   11f3c:	ldr	r0, [fp, #-16]
   11f40:	bl	11cdc <__assert_fail@plt+0x1150>
   11f44:	nop			; (mov r0, r0)
   11f48:	sub	sp, fp, #8
   11f4c:	pop	{r4, fp, pc}
   11f50:	strdeq	r7, [r1], -r0
   11f54:	andeq	r0, r0, r0, asr #1
   11f58:	push	{fp, lr}
   11f5c:	add	fp, sp, #4
   11f60:	sub	sp, sp, #8
   11f64:	str	r0, [fp, #-8]
   11f68:	ldr	r3, [pc, #48]	; 11fa0 <__assert_fail@plt+0x1414>
   11f6c:	add	r3, pc, r3
   11f70:	ldr	r2, [pc, #44]	; 11fa4 <__assert_fail@plt+0x1418>
   11f74:	ldr	r2, [r3, r2]
   11f78:	ldr	r2, [r2]
   11f7c:	cmp	r2, #0
   11f80:	beq	11f94 <__assert_fail@plt+0x1408>
   11f84:	ldr	r2, [pc, #24]	; 11fa4 <__assert_fail@plt+0x1418>
   11f88:	ldr	r3, [r3, r2]
   11f8c:	ldr	r3, [r3]
   11f90:	blx	r3
   11f94:	bl	11808 <__assert_fail@plt+0xc7c>
   11f98:	ldr	r0, [fp, #-8]
   11f9c:	bl	10ad8 <exit@plt>
   11fa0:	andeq	r7, r1, ip, lsl #1
   11fa4:	andeq	r0, r0, r8, asr #1
   11fa8:	push	{fp, lr}
   11fac:	add	fp, sp, #4
   11fb0:	mov	r0, #0
   11fb4:	bl	11f58 <__assert_fail@plt+0x13cc>

00011fb8 <error@@Base>:
   11fb8:	push	{r4, fp, lr}
   11fbc:	add	fp, sp, #8
   11fc0:	sub	sp, sp, #12
   11fc4:	str	r0, [fp, #-16]
   11fc8:	ldr	r4, [pc, #60]	; 1200c <error@@Base+0x54>
   11fcc:	add	r4, pc, r4
   11fd0:	ldr	r3, [pc, #56]	; 12010 <error@@Base+0x58>
   11fd4:	ldr	r3, [r4, r3]
   11fd8:	ldr	r0, [r3]
   11fdc:	ldr	r3, [pc, #48]	; 12014 <error@@Base+0x5c>
   11fe0:	ldr	r3, [r4, r3]
   11fe4:	ldr	r2, [r3]
   11fe8:	ldr	r3, [fp, #-16]
   11fec:	ldr	r1, [pc, #36]	; 12018 <error@@Base+0x60>
   11ff0:	add	r1, pc, r1
   11ff4:	bl	10afc <fprintf@plt>
   11ff8:	ldr	r3, [pc, #28]	; 1201c <error@@Base+0x64>
   11ffc:	ldr	r3, [r4, r3]
   12000:	ldr	r3, [r3]
   12004:	mov	r0, r3
   12008:	bl	11f58 <__assert_fail@plt+0x13cc>
   1200c:	andeq	r7, r1, ip, lsr #32
   12010:	strheq	r0, [r0], -r8
   12014:	andeq	r0, r0, r0, asr #1
   12018:			; <UNDEFINED> instruction: 0x00002bb4
   1201c:	ldrdeq	r0, [r0], -ip
   12020:	push	{r4, fp, lr}
   12024:	add	fp, sp, #8
   12028:	sub	sp, sp, #20
   1202c:	str	r0, [fp, #-16]
   12030:	str	r1, [fp, #-20]	; 0xffffffec
   12034:	ldr	r4, [pc, #68]	; 12080 <error@@Base+0xc8>
   12038:	add	r4, pc, r4
   1203c:	ldr	r3, [pc, #64]	; 12084 <error@@Base+0xcc>
   12040:	ldr	r3, [r4, r3]
   12044:	ldr	r0, [r3]
   12048:	ldr	r3, [pc, #56]	; 12088 <error@@Base+0xd0>
   1204c:	ldr	r3, [r4, r3]
   12050:	ldr	r2, [r3]
   12054:	ldr	r3, [fp, #-20]	; 0xffffffec
   12058:	str	r3, [sp]
   1205c:	ldr	r3, [fp, #-16]
   12060:	ldr	r1, [pc, #36]	; 1208c <error@@Base+0xd4>
   12064:	add	r1, pc, r1
   12068:	bl	10afc <fprintf@plt>
   1206c:	ldr	r3, [pc, #28]	; 12090 <error@@Base+0xd8>
   12070:	ldr	r3, [r4, r3]
   12074:	ldr	r3, [r3]
   12078:	mov	r0, r3
   1207c:	bl	11f58 <__assert_fail@plt+0x13cc>
   12080:	andeq	r6, r1, r0, asr #31
   12084:	strheq	r0, [r0], -r8
   12088:	andeq	r0, r0, r0, asr #1
   1208c:	andeq	r2, r0, r8, asr #22
   12090:	ldrdeq	r0, [r0], -ip
   12094:	push	{fp, lr}
   12098:	add	fp, sp, #4
   1209c:	sub	sp, sp, #16
   120a0:	str	r0, [fp, #-8]
   120a4:	str	r1, [fp, #-12]
   120a8:	ldr	r3, [pc, #60]	; 120ec <error@@Base+0x134>
   120ac:	add	r3, pc, r3
   120b0:	ldr	r2, [pc, #56]	; 120f0 <error@@Base+0x138>
   120b4:	ldr	r2, [r3, r2]
   120b8:	ldr	r0, [r2]
   120bc:	ldr	r2, [pc, #48]	; 120f4 <error@@Base+0x13c>
   120c0:	ldr	r3, [r3, r2]
   120c4:	ldr	r2, [r3]
   120c8:	ldr	r3, [fp, #-12]
   120cc:	str	r3, [sp]
   120d0:	ldr	r3, [fp, #-8]
   120d4:	ldr	r1, [pc, #28]	; 120f8 <error@@Base+0x140>
   120d8:	add	r1, pc, r1
   120dc:	bl	10afc <fprintf@plt>
   120e0:	nop			; (mov r0, r0)
   120e4:	sub	sp, fp, #4
   120e8:	pop	{fp, pc}
   120ec:	andeq	r6, r1, ip, asr #30
   120f0:	strheq	r0, [r0], -r8
   120f4:	andeq	r0, r0, r0, asr #1
   120f8:	ldrdeq	r2, [r0], -r4
   120fc:	andeq	r0, r0, r0
   12100:	push	{fp}		; (str fp, [sp, #-4]!)
   12104:	add	fp, sp, #0
   12108:	sub	sp, sp, #20
   1210c:	str	r0, [fp, #-8]
   12110:	str	r1, [fp, #-12]
   12114:	str	r2, [fp, #-16]
   12118:	ldr	r3, [fp, #-8]
   1211c:	ldr	r2, [r3]
   12120:	ldr	r3, [fp, #-12]
   12124:	add	r2, r2, r3
   12128:	ldr	r3, [fp, #-8]
   1212c:	str	r2, [r3]
   12130:	ldr	r3, [fp, #-8]
   12134:	ldr	r2, [r3, #4]
   12138:	ldr	r3, [fp, #-16]
   1213c:	add	r2, r2, r3
   12140:	ldr	r3, [fp, #-8]
   12144:	str	r2, [r3, #4]
   12148:	nop			; (mov r0, r0)
   1214c:	add	sp, fp, #0
   12150:	pop	{fp}		; (ldr fp, [sp], #4)
   12154:	bx	lr
   12158:	push	{fp, lr}
   1215c:	add	fp, sp, #4
   12160:	sub	sp, sp, #24
   12164:	str	r0, [fp, #-16]
   12168:	str	r1, [fp, #-20]	; 0xffffffec
   1216c:	str	r2, [fp, #-24]	; 0xffffffe8
   12170:	str	r3, [fp, #-28]	; 0xffffffe4
   12174:	ldr	r1, [fp, #-20]	; 0xffffffec
   12178:	ldr	r0, [fp, #-16]
   1217c:	bl	1112c <__assert_fail@plt+0x5a0>
   12180:	str	r0, [fp, #-8]
   12184:	ldr	r3, [fp, #-8]
   12188:	cmp	r3, #0
   1218c:	bne	121c4 <error@@Base+0x20c>
   12190:	mov	r1, #20
   12194:	mov	r0, #1
   12198:	bl	11464 <__assert_fail@plt+0x8d8>
   1219c:	str	r0, [fp, #-8]
   121a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   121a4:	bl	10a3c <strdup@plt>
   121a8:	mov	r3, r0
   121ac:	mov	r2, r3
   121b0:	ldr	r3, [fp, #-8]
   121b4:	str	r2, [r3, #8]
   121b8:	ldr	r1, [fp, #-8]
   121bc:	ldr	r0, [fp, #-16]
   121c0:	bl	11200 <__assert_fail@plt+0x674>
   121c4:	ldr	r3, [fp, #-8]
   121c8:	add	r3, r3, #12
   121cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   121d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121d4:	mov	r0, r3
   121d8:	bl	12100 <error@@Base+0x148>
   121dc:	nop			; (mov r0, r0)
   121e0:	sub	sp, fp, #4
   121e4:	pop	{fp, pc}
   121e8:	push	{fp, lr}
   121ec:	add	fp, sp, #4
   121f0:	sub	sp, sp, #8
   121f4:	str	r0, [fp, #-8]
   121f8:	ldr	r2, [fp, #-8]
   121fc:	mov	r1, #99	; 0x63
   12200:	ldr	r3, [pc, #40]	; 12230 <error@@Base+0x278>
   12204:	add	r3, pc, r3
   12208:	mov	r0, r3
   1220c:	bl	10a24 <fgets@plt>
   12210:	mov	r3, r0
   12214:	cmp	r3, #0
   12218:	movne	r3, #1
   1221c:	moveq	r3, #0
   12220:	uxtb	r3, r3
   12224:	mov	r0, r3
   12228:	sub	sp, fp, #4
   1222c:	pop	{fp, pc}
   12230:	strdeq	r6, [r1], -ip
   12234:	push	{fp, lr}
   12238:	add	fp, sp, #4
   1223c:	sub	sp, sp, #8
   12240:	str	r0, [fp, #-8]
   12244:	str	r1, [fp, #-12]
   12248:	ldr	r0, [fp, #-8]
   1224c:	bl	121e8 <error@@Base+0x230>
   12250:	mov	r3, r0
   12254:	cmp	r3, #0
   12258:	beq	12290 <error@@Base+0x2d8>
   1225c:	ldr	r2, [fp, #-12]
   12260:	ldr	r3, [pc, #60]	; 122a4 <error@@Base+0x2ec>
   12264:	add	r3, pc, r3
   12268:	mov	r1, r3
   1226c:	ldr	r3, [pc, #52]	; 122a8 <error@@Base+0x2f0>
   12270:	add	r3, pc, r3
   12274:	mov	r0, r3
   12278:	bl	10b08 <__isoc99_sscanf@plt>
   1227c:	mov	r3, r0
   12280:	cmp	r3, #1
   12284:	bne	12290 <error@@Base+0x2d8>
   12288:	mov	r3, #1
   1228c:	b	12294 <error@@Base+0x2dc>
   12290:	mov	r3, #0
   12294:	uxtb	r3, r3
   12298:	mov	r0, r3
   1229c:	sub	sp, fp, #4
   122a0:	pop	{fp, pc}
   122a4:	andeq	r2, r0, r8, asr r9
   122a8:	muleq	r1, r0, lr
   122ac:	push	{fp, lr}
   122b0:	add	fp, sp, #4
   122b4:	sub	sp, sp, #16
   122b8:	str	r0, [fp, #-8]
   122bc:	str	r1, [fp, #-12]
   122c0:	str	r2, [fp, #-16]
   122c4:	ldr	r0, [fp, #-8]
   122c8:	bl	121e8 <error@@Base+0x230>
   122cc:	mov	r3, r0
   122d0:	cmp	r3, #0
   122d4:	beq	12308 <error@@Base+0x350>
   122d8:	ldr	r3, [fp, #-16]
   122dc:	ldr	r2, [fp, #-12]
   122e0:	ldr	r1, [pc, #52]	; 1231c <error@@Base+0x364>
   122e4:	add	r1, pc, r1
   122e8:	ldr	r0, [pc, #48]	; 12320 <error@@Base+0x368>
   122ec:	add	r0, pc, r0
   122f0:	bl	10b08 <__isoc99_sscanf@plt>
   122f4:	mov	r3, r0
   122f8:	cmp	r3, #2
   122fc:	bne	12308 <error@@Base+0x350>
   12300:	mov	r3, #1
   12304:	b	1230c <error@@Base+0x354>
   12308:	mov	r3, #0
   1230c:	uxtb	r3, r3
   12310:	mov	r0, r3
   12314:	sub	sp, fp, #4
   12318:	pop	{fp, pc}
   1231c:	ldrdeq	r2, [r0], -ip
   12320:	andeq	r6, r1, r4, lsl lr
   12324:	push	{fp, lr}
   12328:	add	fp, sp, #4
   1232c:	sub	sp, sp, #24
   12330:	str	r0, [fp, #-24]	; 0xffffffe8
   12334:	str	r1, [fp, #-28]	; 0xffffffe4
   12338:	mov	r3, #0
   1233c:	str	r3, [fp, #-12]
   12340:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12344:	bl	121e8 <error@@Base+0x230>
   12348:	mov	r3, r0
   1234c:	cmp	r3, #0
   12350:	beq	12408 <error@@Base+0x450>
   12354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12358:	bl	121e8 <error@@Base+0x230>
   1235c:	mov	r3, r0
   12360:	cmp	r3, #0
   12364:	beq	12408 <error@@Base+0x450>
   12368:	b	123e8 <error@@Base+0x430>
   1236c:	ldr	r3, [pc, #164]	; 12418 <error@@Base+0x460>
   12370:	add	r3, pc, r3
   12374:	add	r0, r3, #29
   12378:	bl	10b44 <atoi@plt>
   1237c:	str	r0, [fp, #-8]
   12380:	ldr	r3, [fp, #-8]
   12384:	cmp	r3, #0
   12388:	bne	123c8 <error@@Base+0x410>
   1238c:	ldr	r3, [pc, #136]	; 1241c <error@@Base+0x464>
   12390:	add	r3, pc, r3
   12394:	mov	r1, r3
   12398:	ldr	r3, [pc, #128]	; 12420 <error@@Base+0x468>
   1239c:	add	r3, pc, r3
   123a0:	add	r0, r3, #29
   123a4:	bl	109e8 <strcmp@plt>
   123a8:	mov	r3, r0
   123ac:	cmp	r3, #0
   123b0:	bne	123c0 <error@@Base+0x408>
   123b4:	ldr	r3, [fp, #-16]
   123b8:	str	r3, [fp, #-12]
   123bc:	b	123c8 <error@@Base+0x410>
   123c0:	mov	r3, #11
   123c4:	str	r3, [fp, #-8]
   123c8:	ldr	r3, [fp, #-8]
   123cc:	lsl	r3, r3, #3
   123d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   123d4:	add	r3, r2, r3
   123d8:	ldr	r1, [fp, #-16]
   123dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   123e0:	mov	r0, r3
   123e4:	bl	12100 <error@@Base+0x148>
   123e8:	sub	r2, fp, #20
   123ec:	sub	r3, fp, #16
   123f0:	mov	r1, r3
   123f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   123f8:	bl	122ac <error@@Base+0x2f4>
   123fc:	mov	r3, r0
   12400:	cmp	r3, #0
   12404:	bne	1236c <error@@Base+0x3b4>
   12408:	ldr	r3, [fp, #-12]
   1240c:	mov	r0, r3
   12410:	sub	sp, fp, #4
   12414:	pop	{fp, pc}
   12418:	muleq	r1, r0, sp
   1241c:	andeq	r2, r0, r8, lsr r8
   12420:	andeq	r6, r1, r4, ror #26
   12424:	push	{fp, lr}
   12428:	add	fp, sp, #4
   1242c:	sub	sp, sp, #16
   12430:	str	r0, [fp, #-16]
   12434:	str	r1, [fp, #-20]	; 0xffffffec
   12438:	ldr	r0, [fp, #-16]
   1243c:	bl	121e8 <error@@Base+0x230>
   12440:	mov	r3, r0
   12444:	cmp	r3, #0
   12448:	beq	124c8 <error@@Base+0x510>
   1244c:	ldr	r0, [fp, #-16]
   12450:	bl	121e8 <error@@Base+0x230>
   12454:	mov	r3, r0
   12458:	cmp	r3, #0
   1245c:	beq	124c8 <error@@Base+0x510>
   12460:	b	124a8 <error@@Base+0x4f0>
   12464:	ldr	r3, [pc, #104]	; 124d4 <error@@Base+0x51c>
   12468:	add	r3, pc, r3
   1246c:	mov	r0, r3
   12470:	bl	10af0 <strlen@plt>
   12474:	mov	r3, r0
   12478:	sub	r3, r3, #1
   1247c:	ldr	r2, [pc, #84]	; 124d8 <error@@Base+0x520>
   12480:	add	r2, pc, r2
   12484:	mov	r1, #0
   12488:	strb	r1, [r2, r3]
   1248c:	ldr	r2, [fp, #-8]
   12490:	ldr	r3, [fp, #-12]
   12494:	ldr	r1, [pc, #64]	; 124dc <error@@Base+0x524>
   12498:	add	r1, pc, r1
   1249c:	add	r1, r1, #29
   124a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   124a4:	bl	12158 <error@@Base+0x1a0>
   124a8:	sub	r2, fp, #12
   124ac:	sub	r3, fp, #8
   124b0:	mov	r1, r3
   124b4:	ldr	r0, [fp, #-16]
   124b8:	bl	122ac <error@@Base+0x2f4>
   124bc:	mov	r3, r0
   124c0:	cmp	r3, #0
   124c4:	bne	12464 <error@@Base+0x4ac>
   124c8:	nop			; (mov r0, r0)
   124cc:	sub	sp, fp, #4
   124d0:	pop	{fp, pc}
   124d4:	muleq	r1, r8, ip
   124d8:	andeq	r6, r1, r0, lsl #25
   124dc:	andeq	r6, r1, r8, ror #24
   124e0:	push	{fp, lr}
   124e4:	add	fp, sp, #4
   124e8:	sub	sp, sp, #32
   124ec:	str	r0, [fp, #-32]	; 0xffffffe0
   124f0:	str	r1, [fp, #-36]	; 0xffffffdc
   124f4:	ldr	r3, [pc, #500]	; 126f0 <error@@Base+0x738>
   124f8:	add	r3, pc, r3
   124fc:	mov	r1, r3
   12500:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12504:	bl	115a4 <__assert_fail@plt+0xa18>
   12508:	str	r0, [fp, #-8]
   1250c:	ldr	r0, [fp, #-8]
   12510:	bl	121e8 <error@@Base+0x230>
   12514:	mov	r3, r0
   12518:	cmp	r3, #0
   1251c:	beq	126a8 <error@@Base+0x6f0>
   12520:	mov	r2, #45	; 0x2d
   12524:	ldr	r3, [pc, #456]	; 126f4 <error@@Base+0x73c>
   12528:	add	r3, pc, r3
   1252c:	mov	r1, r3
   12530:	ldr	r3, [pc, #448]	; 126f8 <error@@Base+0x740>
   12534:	add	r3, pc, r3
   12538:	mov	r0, r3
   1253c:	bl	10b68 <strncmp@plt>
   12540:	mov	r3, r0
   12544:	cmp	r3, #0
   12548:	bne	126a8 <error@@Base+0x6f0>
   1254c:	ldr	r0, [fp, #-8]
   12550:	bl	121e8 <error@@Base+0x230>
   12554:	mov	r3, r0
   12558:	cmp	r3, #0
   1255c:	beq	126a8 <error@@Base+0x6f0>
   12560:	ldr	r3, [pc, #404]	; 126fc <error@@Base+0x744>
   12564:	add	r3, pc, r3
   12568:	mov	r1, r3
   1256c:	ldr	r3, [pc, #396]	; 12700 <error@@Base+0x748>
   12570:	add	r3, pc, r3
   12574:	mov	r0, r3
   12578:	bl	109e8 <strcmp@plt>
   1257c:	mov	r3, r0
   12580:	cmp	r3, #0
   12584:	bne	126a8 <error@@Base+0x6f0>
   12588:	sub	r3, fp, #20
   1258c:	mov	r1, r3
   12590:	ldr	r0, [fp, #-8]
   12594:	bl	12234 <error@@Base+0x27c>
   12598:	mov	r3, r0
   1259c:	cmp	r3, #0
   125a0:	beq	126a8 <error@@Base+0x6f0>
   125a4:	sub	r3, fp, #24
   125a8:	mov	r1, r3
   125ac:	ldr	r0, [fp, #-8]
   125b0:	bl	12234 <error@@Base+0x27c>
   125b4:	mov	r3, r0
   125b8:	cmp	r3, #0
   125bc:	beq	126a8 <error@@Base+0x6f0>
   125c0:	ldr	r0, [fp, #-8]
   125c4:	bl	121e8 <error@@Base+0x230>
   125c8:	mov	r3, r0
   125cc:	cmp	r3, #0
   125d0:	beq	126a8 <error@@Base+0x6f0>
   125d4:	ldr	r0, [fp, #-8]
   125d8:	bl	121e8 <error@@Base+0x230>
   125dc:	mov	r3, r0
   125e0:	cmp	r3, #0
   125e4:	beq	126a8 <error@@Base+0x6f0>
   125e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   125f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   125f4:	mov	r0, r3
   125f8:	bl	12100 <error@@Base+0x148>
   125fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12600:	add	r3, r3, #8
   12604:	mov	r1, r3
   12608:	ldr	r0, [fp, #-8]
   1260c:	bl	12324 <error@@Base+0x36c>
   12610:	str	r0, [fp, #-12]
   12614:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12618:	add	r3, r3, #416	; 0x1a0
   1261c:	mov	r1, r3
   12620:	ldr	r0, [fp, #-8]
   12624:	bl	12324 <error@@Base+0x36c>
   12628:	str	r0, [fp, #-16]
   1262c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12630:	add	r3, r3, #824	; 0x338
   12634:	mov	r1, r3
   12638:	ldr	r0, [fp, #-8]
   1263c:	bl	12324 <error@@Base+0x36c>
   12640:	ldr	r3, [fp, #-20]	; 0xffffffec
   12644:	cmp	r3, #0
   12648:	ble	126d8 <error@@Base+0x720>
   1264c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12650:	add	r3, r3, #920	; 0x398
   12654:	mov	r1, r3
   12658:	ldr	r0, [fp, #-8]
   1265c:	bl	12324 <error@@Base+0x36c>
   12660:	ldr	r3, [fp, #-12]
   12664:	cmp	r3, #0
   12668:	ble	12680 <error@@Base+0x6c8>
   1266c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12670:	add	r3, r3, #992	; 0x3e0
   12674:	mov	r1, r3
   12678:	ldr	r0, [fp, #-8]
   1267c:	bl	12424 <error@@Base+0x46c>
   12680:	ldr	r3, [fp, #-16]
   12684:	cmp	r3, #0
   12688:	ble	126d8 <error@@Base+0x720>
   1268c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12690:	add	r3, r3, #9024	; 0x2340
   12694:	add	r3, r3, #24
   12698:	mov	r1, r3
   1269c:	ldr	r0, [fp, #-8]
   126a0:	bl	12424 <error@@Base+0x46c>
   126a4:	b	126d8 <error@@Base+0x720>
   126a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   126ac:	cmp	r3, #0
   126b0:	beq	126bc <error@@Base+0x704>
   126b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   126b8:	b	126c4 <error@@Base+0x70c>
   126bc:	ldr	r3, [pc, #64]	; 12704 <error@@Base+0x74c>
   126c0:	add	r3, pc, r3
   126c4:	mov	r1, r3
   126c8:	ldr	r3, [pc, #56]	; 12708 <error@@Base+0x750>
   126cc:	add	r3, pc, r3
   126d0:	mov	r0, r3
   126d4:	bl	12020 <error@@Base+0x68>
   126d8:	nop			; (mov r0, r0)
   126dc:	ldr	r0, [fp, #-8]
   126e0:	bl	11678 <__assert_fail@plt+0xaec>
   126e4:	nop			; (mov r0, r0)
   126e8:	sub	sp, fp, #4
   126ec:	pop	{fp, pc}
   126f0:	ldrdeq	r2, [r0], -r8
   126f4:	andeq	r2, r0, ip, lsr #13
   126f8:	andeq	r6, r1, ip, asr #23
   126fc:	andeq	r2, r0, r0, lsr #13
   12700:	muleq	r1, r0, fp
   12704:	andeq	r2, r0, r4, ror r5
   12708:	andeq	r2, r0, r0, ror r5
   1270c:	push	{fp, lr}
   12710:	add	fp, sp, #4
   12714:	sub	sp, sp, #8
   12718:	str	r0, [fp, #-8]
   1271c:	str	r1, [fp, #-12]
   12720:	ldr	r3, [fp, #-12]
   12724:	ldr	r3, [r3]
   12728:	cmp	r3, #0
   1272c:	bne	1274c <error@@Base+0x794>
   12730:	ldr	r3, [fp, #-8]
   12734:	mov	r2, #8
   12738:	mov	r1, #1
   1273c:	ldr	r0, [pc, #108]	; 127b0 <error@@Base+0x7f8>
   12740:	add	r0, pc, r0
   12744:	bl	10a78 <fwrite@plt>
   12748:	b	12798 <error@@Base+0x7e0>
   1274c:	ldr	r3, [fp, #-12]
   12750:	ldr	r2, [r3]
   12754:	ldr	r3, [fp, #-12]
   12758:	ldr	r3, [r3, #4]
   1275c:	sub	r3, r2, r3
   12760:	vmov	s15, r3
   12764:	vcvt.f64.s32	d7, s15
   12768:	vldr	d6, [pc, #56]	; 127a8 <error@@Base+0x7f0>
   1276c:	vmul.f64	d6, d7, d6
   12770:	ldr	r3, [fp, #-12]
   12774:	ldr	r3, [r3]
   12778:	vmov	s15, r3
   1277c:	vcvt.f64.s32	d7, s15
   12780:	vdiv.f64	d5, d6, d7
   12784:	vmov	r2, r3, d5
   12788:	ldr	r1, [pc, #36]	; 127b4 <error@@Base+0x7fc>
   1278c:	add	r1, pc, r1
   12790:	ldr	r0, [fp, #-8]
   12794:	bl	10afc <fprintf@plt>
   12798:	nop			; (mov r0, r0)
   1279c:	sub	sp, fp, #4
   127a0:	pop	{fp, pc}
   127a4:	nop			; (mov r0, r0)
   127a8:	andeq	r0, r0, r0
   127ac:	subsmi	r0, r9, r0
   127b0:	andeq	r2, r0, r0, lsl r5
   127b4:	ldrdeq	r2, [r0], -r0
   127b8:	push	{fp, lr}
   127bc:	add	fp, sp, #4
   127c0:	sub	sp, sp, #8
   127c4:	str	r0, [fp, #-8]
   127c8:	str	r1, [fp, #-12]
   127cc:	ldr	r3, [fp, #-12]
   127d0:	cmp	r3, #0
   127d4:	beq	12808 <error@@Base+0x850>
   127d8:	ldr	r3, [fp, #-12]
   127dc:	ldr	r2, [r3]
   127e0:	ldr	r3, [fp, #-12]
   127e4:	ldr	r3, [r3, #4]
   127e8:	ldr	r1, [pc, #84]	; 12844 <error@@Base+0x88c>
   127ec:	add	r1, pc, r1
   127f0:	ldr	r0, [fp, #-8]
   127f4:	bl	10afc <fprintf@plt>
   127f8:	ldr	r1, [fp, #-12]
   127fc:	ldr	r0, [fp, #-8]
   12800:	bl	1270c <error@@Base+0x754>
   12804:	b	12820 <error@@Base+0x868>
   12808:	ldr	r3, [fp, #-8]
   1280c:	mov	r2, #26
   12810:	mov	r1, #1
   12814:	ldr	r0, [pc, #44]	; 12848 <error@@Base+0x890>
   12818:	add	r0, pc, r0
   1281c:	bl	10a78 <fwrite@plt>
   12820:	ldr	r3, [fp, #-8]
   12824:	mov	r2, #3
   12828:	mov	r1, #1
   1282c:	ldr	r0, [pc, #24]	; 1284c <error@@Base+0x894>
   12830:	add	r0, pc, r0
   12834:	bl	10a78 <fwrite@plt>
   12838:	nop			; (mov r0, r0)
   1283c:	sub	sp, fp, #4
   12840:	pop	{fp, pc}
   12844:	andeq	r2, r0, r8, ror r4
   12848:	andeq	r2, r0, r8, asr r4
   1284c:	andeq	r2, r0, ip, asr r4
   12850:	push	{fp, lr}
   12854:	add	fp, sp, #4
   12858:	sub	sp, sp, #32
   1285c:	str	r0, [fp, #-16]
   12860:	str	r1, [fp, #-20]	; 0xffffffec
   12864:	mov	r1, r2
   12868:	str	r3, [fp, #-28]	; 0xffffffe4
   1286c:	ldr	r2, [fp, #4]
   12870:	ldr	r3, [fp, #8]
   12874:	strh	r1, [fp, #-24]	; 0xffffffe8
   12878:	strb	r2, [fp, #-32]	; 0xffffffe0
   1287c:	strb	r3, [fp, #-36]	; 0xffffffdc
   12880:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12884:	ldr	r3, [pc, #376]	; 12a04 <error@@Base+0xa4c>
   12888:	add	r3, pc, r3
   1288c:	mov	r1, r3
   12890:	ldr	r0, [fp, #-16]
   12894:	bl	10afc <fprintf@plt>
   12898:	mov	r1, #0
   1289c:	ldr	r0, [fp, #-16]
   128a0:	bl	127b8 <error@@Base+0x800>
   128a4:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   128a8:	cmp	r3, #0
   128ac:	beq	128bc <error@@Base+0x904>
   128b0:	ldr	r3, [pc, #336]	; 12a08 <error@@Base+0xa50>
   128b4:	add	r3, pc, r3
   128b8:	b	128c4 <error@@Base+0x90c>
   128bc:	ldr	r3, [pc, #328]	; 12a0c <error@@Base+0xa54>
   128c0:	add	r3, pc, r3
   128c4:	mov	r2, r3
   128c8:	ldr	r3, [pc, #320]	; 12a10 <error@@Base+0xa58>
   128cc:	add	r3, pc, r3
   128d0:	mov	r1, r3
   128d4:	ldr	r0, [fp, #-16]
   128d8:	bl	10afc <fprintf@plt>
   128dc:	mov	r3, #1
   128e0:	strh	r3, [fp, #-6]
   128e4:	b	12950 <error@@Base+0x998>
   128e8:	ldrsh	r3, [fp, #-6]
   128ec:	lsl	r3, r3, #3
   128f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   128f4:	add	r3, r2, r3
   128f8:	ldr	r3, [r3]
   128fc:	cmp	r3, #0
   12900:	ble	1293c <error@@Base+0x984>
   12904:	ldrsh	r3, [fp, #-6]
   12908:	lsl	r3, r3, #3
   1290c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12910:	add	r3, r2, r3
   12914:	mov	r1, r3
   12918:	ldr	r0, [fp, #-16]
   1291c:	bl	127b8 <error@@Base+0x800>
   12920:	ldrsh	r3, [fp, #-6]
   12924:	mov	r2, r3
   12928:	ldr	r3, [pc, #228]	; 12a14 <error@@Base+0xa5c>
   1292c:	add	r3, pc, r3
   12930:	mov	r1, r3
   12934:	ldr	r0, [fp, #-16]
   12938:	bl	10afc <fprintf@plt>
   1293c:	ldrsh	r3, [fp, #-6]
   12940:	uxth	r3, r3
   12944:	add	r3, r3, #1
   12948:	uxth	r3, r3
   1294c:	strh	r3, [fp, #-6]
   12950:	ldrsh	r2, [fp, #-6]
   12954:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12958:	cmp	r2, r3
   1295c:	ble	128e8 <error@@Base+0x930>
   12960:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   12964:	cmp	r3, #0
   12968:	beq	129c8 <error@@Base+0xa10>
   1296c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12970:	add	r3, r3, #1
   12974:	lsl	r3, r3, #3
   12978:	ldr	r2, [fp, #-20]	; 0xffffffec
   1297c:	add	r3, r2, r3
   12980:	ldr	r3, [r3]
   12984:	cmp	r3, #0
   12988:	ble	129c8 <error@@Base+0xa10>
   1298c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12990:	add	r3, r3, #1
   12994:	lsl	r3, r3, #3
   12998:	ldr	r2, [fp, #-20]	; 0xffffffec
   1299c:	add	r3, r2, r3
   129a0:	mov	r1, r3
   129a4:	ldr	r0, [fp, #-16]
   129a8:	bl	127b8 <error@@Base+0x800>
   129ac:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   129b0:	mov	r2, r3
   129b4:	ldr	r3, [pc, #92]	; 12a18 <error@@Base+0xa60>
   129b8:	add	r3, pc, r3
   129bc:	mov	r1, r3
   129c0:	ldr	r0, [fp, #-16]
   129c4:	bl	10afc <fprintf@plt>
   129c8:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   129cc:	cmp	r3, #0
   129d0:	beq	129f8 <error@@Base+0xa40>
   129d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   129d8:	ldr	r0, [fp, #-16]
   129dc:	bl	127b8 <error@@Base+0x800>
   129e0:	ldr	r3, [fp, #-16]
   129e4:	mov	r2, #7
   129e8:	mov	r1, #1
   129ec:	ldr	r0, [pc, #40]	; 12a1c <error@@Base+0xa64>
   129f0:	add	r0, pc, r0
   129f4:	bl	10a78 <fwrite@plt>
   129f8:	nop			; (mov r0, r0)
   129fc:	sub	sp, fp, #4
   12a00:	pop	{fp, pc}
   12a04:	andeq	r2, r0, r8, lsl #8
   12a08:	andeq	r2, r0, r4, ror #7
   12a0c:	andeq	r2, r0, r0, ror #7
   12a10:	ldrdeq	r2, [r0], -ip
   12a14:	andeq	r2, r0, r0, lsl #7
   12a18:	andeq	r2, r0, r0, lsl #6
   12a1c:	ldrdeq	r2, [r0], -r8
   12a20:	push	{fp, lr}
   12a24:	add	fp, sp, #4
   12a28:	sub	sp, sp, #8
   12a2c:	str	r0, [fp, #-8]
   12a30:	str	r1, [fp, #-12]
   12a34:	ldr	r3, [fp, #-8]
   12a38:	ldr	r2, [r3, #8]
   12a3c:	ldr	r3, [fp, #-12]
   12a40:	ldr	r3, [r3, #8]
   12a44:	mov	r1, r3
   12a48:	mov	r0, r2
   12a4c:	bl	114bc <__assert_fail@plt+0x930>
   12a50:	mov	r3, r0
   12a54:	mov	r0, r3
   12a58:	sub	sp, fp, #4
   12a5c:	pop	{fp, pc}
   12a60:	push	{fp, lr}
   12a64:	add	fp, sp, #4
   12a68:	sub	sp, sp, #24
   12a6c:	str	r0, [fp, #-16]
   12a70:	str	r1, [fp, #-20]	; 0xffffffec
   12a74:	str	r2, [fp, #-24]	; 0xffffffe8
   12a78:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a7c:	bl	112e0 <__assert_fail@plt+0x754>
   12a80:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a84:	add	r3, r3, #4096	; 0x1000
   12a88:	ldr	r0, [r3, #3956]	; 0xf74
   12a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a90:	add	r3, r3, #4096	; 0x1000
   12a94:	ldr	r3, [r3, #3952]	; 0xf70
   12a98:	ldr	r2, [pc, #216]	; 12b78 <error@@Base+0xbc0>
   12a9c:	add	r2, pc, r2
   12aa0:	mov	r1, r3
   12aa4:	bl	149d0 <error@@Base+0x2a18>
   12aa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12aac:	ldr	r3, [pc, #200]	; 12b7c <error@@Base+0xbc4>
   12ab0:	add	r3, pc, r3
   12ab4:	mov	r1, r3
   12ab8:	ldr	r0, [fp, #-16]
   12abc:	bl	10afc <fprintf@plt>
   12ac0:	mov	r1, #0
   12ac4:	ldr	r0, [fp, #-16]
   12ac8:	bl	127b8 <error@@Base+0x800>
   12acc:	ldr	r1, [fp, #-16]
   12ad0:	mov	r0, #10
   12ad4:	bl	10b2c <fputc@plt>
   12ad8:	mov	r3, #0
   12adc:	str	r3, [fp, #-8]
   12ae0:	b	12b54 <error@@Base+0xb9c>
   12ae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   12ae8:	add	r3, r3, #4096	; 0x1000
   12aec:	ldr	r2, [r3, #3952]	; 0xf70
   12af0:	ldr	r3, [fp, #-8]
   12af4:	lsl	r3, r3, #2
   12af8:	add	r3, r2, r3
   12afc:	ldr	r3, [r3]
   12b00:	add	r3, r3, #12
   12b04:	mov	r1, r3
   12b08:	ldr	r0, [fp, #-16]
   12b0c:	bl	127b8 <error@@Base+0x800>
   12b10:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b14:	add	r3, r3, #4096	; 0x1000
   12b18:	ldr	r2, [r3, #3952]	; 0xf70
   12b1c:	ldr	r3, [fp, #-8]
   12b20:	lsl	r3, r3, #2
   12b24:	add	r3, r2, r3
   12b28:	ldr	r3, [r3]
   12b2c:	ldr	r3, [r3, #8]
   12b30:	mov	r2, r3
   12b34:	ldr	r3, [pc, #68]	; 12b80 <error@@Base+0xbc8>
   12b38:	add	r3, pc, r3
   12b3c:	mov	r1, r3
   12b40:	ldr	r0, [fp, #-16]
   12b44:	bl	10afc <fprintf@plt>
   12b48:	ldr	r3, [fp, #-8]
   12b4c:	add	r3, r3, #1
   12b50:	str	r3, [fp, #-8]
   12b54:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b58:	add	r3, r3, #4096	; 0x1000
   12b5c:	ldr	r2, [r3, #3956]	; 0xf74
   12b60:	ldr	r3, [fp, #-8]
   12b64:	cmp	r2, r3
   12b68:	bgt	12ae4 <error@@Base+0xb2c>
   12b6c:	nop			; (mov r0, r0)
   12b70:	sub	sp, fp, #4
   12b74:	pop	{fp, pc}
   12b78:			; <UNDEFINED> instruction: 0xffffff7c
   12b7c:	andeq	r2, r0, r0, ror #3
   12b80:	andeq	r2, r0, r0, ror r1
   12b84:	push	{fp, lr}
   12b88:	add	fp, sp, #4
   12b8c:	sub	sp, sp, #24
   12b90:	str	r0, [fp, #-16]
   12b94:	str	r1, [fp, #-20]	; 0xffffffec
   12b98:	ldr	r3, [pc, #456]	; 12d68 <error@@Base+0xdb0>
   12b9c:	add	r3, pc, r3
   12ba0:	mov	r1, r3
   12ba4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ba8:	bl	115a4 <__assert_fail@plt+0xa18>
   12bac:	str	r0, [fp, #-8]
   12bb0:	ldr	r3, [pc, #436]	; 12d6c <error@@Base+0xdb4>
   12bb4:	add	r3, pc, r3
   12bb8:	ldr	r2, [pc, #432]	; 12d70 <error@@Base+0xdb8>
   12bbc:	add	r2, pc, r2
   12bc0:	ldr	r1, [pc, #428]	; 12d74 <error@@Base+0xdbc>
   12bc4:	add	r1, pc, r1
   12bc8:	ldr	r0, [fp, #-8]
   12bcc:	bl	10afc <fprintf@plt>
   12bd0:	ldr	r3, [fp, #-16]
   12bd4:	ldr	r3, [r3]
   12bd8:	mov	r2, r3
   12bdc:	ldr	r3, [pc, #404]	; 12d78 <error@@Base+0xdc0>
   12be0:	add	r3, pc, r3
   12be4:	mov	r1, r3
   12be8:	ldr	r0, [fp, #-8]
   12bec:	bl	10afc <fprintf@plt>
   12bf0:	ldr	r3, [fp, #-16]
   12bf4:	ldr	r3, [r3, #4]
   12bf8:	mov	r2, r3
   12bfc:	ldr	r3, [pc, #376]	; 12d7c <error@@Base+0xdc4>
   12c00:	add	r3, pc, r3
   12c04:	mov	r1, r3
   12c08:	ldr	r0, [fp, #-8]
   12c0c:	bl	10afc <fprintf@plt>
   12c10:	ldr	r3, [fp, #-16]
   12c14:	mov	r1, r3
   12c18:	ldr	r0, [fp, #-8]
   12c1c:	bl	1270c <error@@Base+0x754>
   12c20:	ldr	r3, [fp, #-8]
   12c24:	mov	r2, #12
   12c28:	mov	r1, #1
   12c2c:	ldr	r0, [pc, #332]	; 12d80 <error@@Base+0xdc8>
   12c30:	add	r0, pc, r0
   12c34:	bl	10a78 <fwrite@plt>
   12c38:	ldr	r3, [fp, #-16]
   12c3c:	add	r1, r3, #8
   12c40:	mov	r3, #1
   12c44:	str	r3, [sp, #4]
   12c48:	mov	r3, #0
   12c4c:	str	r3, [sp]
   12c50:	ldr	r3, [pc, #300]	; 12d84 <error@@Base+0xdcc>
   12c54:	add	r3, pc, r3
   12c58:	mov	r2, #50	; 0x32
   12c5c:	ldr	r0, [fp, #-8]
   12c60:	bl	12850 <error@@Base+0x898>
   12c64:	ldr	r3, [fp, #-16]
   12c68:	add	r1, r3, #416	; 0x1a0
   12c6c:	mov	r3, #1
   12c70:	str	r3, [sp, #4]
   12c74:	mov	r3, #0
   12c78:	str	r3, [sp]
   12c7c:	ldr	r3, [pc, #260]	; 12d88 <error@@Base+0xdd0>
   12c80:	add	r3, pc, r3
   12c84:	mov	r2, #50	; 0x32
   12c88:	ldr	r0, [fp, #-8]
   12c8c:	bl	12850 <error@@Base+0x898>
   12c90:	ldr	r3, [fp, #-16]
   12c94:	add	r1, r3, #824	; 0x338
   12c98:	mov	r3, #1
   12c9c:	str	r3, [sp, #4]
   12ca0:	mov	r3, #1
   12ca4:	str	r3, [sp]
   12ca8:	ldr	r3, [pc, #220]	; 12d8c <error@@Base+0xdd4>
   12cac:	add	r3, pc, r3
   12cb0:	mov	r2, #10
   12cb4:	ldr	r0, [fp, #-8]
   12cb8:	bl	12850 <error@@Base+0x898>
   12cbc:	ldr	r3, [fp, #-16]
   12cc0:	ldr	r3, [r3]
   12cc4:	cmp	r3, #0
   12cc8:	ble	12d54 <error@@Base+0xd9c>
   12ccc:	ldr	r3, [fp, #-16]
   12cd0:	add	r1, r3, #920	; 0x398
   12cd4:	mov	r3, #0
   12cd8:	str	r3, [sp, #4]
   12cdc:	mov	r3, #0
   12ce0:	str	r3, [sp]
   12ce4:	ldr	r3, [pc, #164]	; 12d90 <error@@Base+0xdd8>
   12ce8:	add	r3, pc, r3
   12cec:	mov	r2, #8
   12cf0:	ldr	r0, [fp, #-8]
   12cf4:	bl	12850 <error@@Base+0x898>
   12cf8:	ldr	r3, [fp, #-16]
   12cfc:	ldr	r3, [r3, #8]
   12d00:	cmp	r3, #0
   12d04:	ble	12d24 <error@@Base+0xd6c>
   12d08:	ldr	r3, [fp, #-16]
   12d0c:	add	r3, r3, #992	; 0x3e0
   12d10:	ldr	r2, [pc, #124]	; 12d94 <error@@Base+0xddc>
   12d14:	add	r2, pc, r2
   12d18:	mov	r1, r3
   12d1c:	ldr	r0, [fp, #-8]
   12d20:	bl	12a60 <error@@Base+0xaa8>
   12d24:	ldr	r3, [fp, #-16]
   12d28:	ldr	r3, [r3, #416]	; 0x1a0
   12d2c:	cmp	r3, #0
   12d30:	ble	12d54 <error@@Base+0xd9c>
   12d34:	ldr	r3, [fp, #-16]
   12d38:	add	r3, r3, #9024	; 0x2340
   12d3c:	add	r3, r3, #24
   12d40:	ldr	r2, [pc, #80]	; 12d98 <error@@Base+0xde0>
   12d44:	add	r2, pc, r2
   12d48:	mov	r1, r3
   12d4c:	ldr	r0, [fp, #-8]
   12d50:	bl	12a60 <error@@Base+0xaa8>
   12d54:	ldr	r0, [fp, #-8]
   12d58:	bl	11678 <__assert_fail@plt+0xaec>
   12d5c:	nop			; (mov r0, r0)
   12d60:	sub	sp, fp, #4
   12d64:	pop	{fp, pc}
   12d68:	andeq	r2, r0, r8, lsr #2
   12d6c:	andeq	r2, r0, r0, asr r0
   12d70:	andeq	r2, r0, r8, lsl r0
   12d74:	andeq	r2, r0, r4, lsl #2
   12d78:	strdeq	r2, [r0], -r0
   12d7c:	andeq	r2, r0, r0, ror #1
   12d80:	andeq	r2, r0, r8, asr #1
   12d84:	strheq	r2, [r0], -r4
   12d88:	muleq	r0, r4, r0
   12d8c:	andeq	r2, r0, r8, ror r0
   12d90:	andeq	r2, r0, r4, asr r0
   12d94:	strdeq	r1, [r0], -r4
   12d98:	ldrdeq	r1, [r0], -r0
   12d9c:	push	{fp, lr}
   12da0:	add	fp, sp, #4
   12da4:	sub	sp, sp, #24
   12da8:	str	r0, [fp, #-16]
   12dac:	str	r1, [fp, #-20]	; 0xffffffec
   12db0:	str	r2, [fp, #-24]	; 0xffffffe8
   12db4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   12dbc:	cmp	r2, r3
   12dc0:	bcs	12dcc <error@@Base+0xe14>
   12dc4:	mov	r3, #0
   12dc8:	b	12ec4 <error@@Base+0xf0c>
   12dcc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   12dd4:	sub	r3, r2, r3
   12dd8:	lsr	r2, r3, #1
   12ddc:	ldr	r3, [fp, #-20]	; 0xffffffec
   12de0:	add	r3, r2, r3
   12de4:	str	r3, [fp, #-8]
   12de8:	ldr	r2, [fp, #-8]
   12dec:	mov	r3, r2
   12df0:	lsl	r3, r3, #1
   12df4:	add	r3, r3, r2
   12df8:	lsl	r3, r3, #2
   12dfc:	ldr	r2, [pc, #204]	; 12ed0 <error@@Base+0xf18>
   12e00:	add	r2, pc, r2
   12e04:	add	r3, r3, r2
   12e08:	str	r3, [fp, #-12]
   12e0c:	ldr	r3, [fp, #-12]
   12e10:	ldr	r2, [r3]
   12e14:	ldr	r3, [fp, #-16]
   12e18:	cmp	r2, r3
   12e1c:	bls	12e40 <error@@Base+0xe88>
   12e20:	ldr	r3, [fp, #-8]
   12e24:	sub	r3, r3, #1
   12e28:	mov	r2, r3
   12e2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12e30:	ldr	r0, [fp, #-16]
   12e34:	bl	12d9c <error@@Base+0xde4>
   12e38:	mov	r3, r0
   12e3c:	b	12ec4 <error@@Base+0xf0c>
   12e40:	ldr	r3, [fp, #-12]
   12e44:	ldr	r2, [r3, #4]
   12e48:	ldr	r3, [fp, #-16]
   12e4c:	cmp	r2, r3
   12e50:	bcs	12e74 <error@@Base+0xebc>
   12e54:	ldr	r3, [fp, #-8]
   12e58:	add	r3, r3, #1
   12e5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12e60:	mov	r1, r3
   12e64:	ldr	r0, [fp, #-16]
   12e68:	bl	12d9c <error@@Base+0xde4>
   12e6c:	mov	r3, r0
   12e70:	b	12ec4 <error@@Base+0xf0c>
   12e74:	ldr	r3, [fp, #-12]
   12e78:	ldr	r2, [r3]
   12e7c:	ldr	r3, [fp, #-16]
   12e80:	cmp	r2, r3
   12e84:	bhi	12e9c <error@@Base+0xee4>
   12e88:	ldr	r3, [fp, #-12]
   12e8c:	ldr	r2, [r3, #4]
   12e90:	ldr	r3, [fp, #-16]
   12e94:	cmp	r2, r3
   12e98:	bcs	12ebc <error@@Base+0xf04>
   12e9c:	ldr	r3, [pc, #48]	; 12ed4 <error@@Base+0xf1c>
   12ea0:	add	r3, pc, r3
   12ea4:	mov	r2, #63	; 0x3f
   12ea8:	ldr	r1, [pc, #40]	; 12ed8 <error@@Base+0xf20>
   12eac:	add	r1, pc, r1
   12eb0:	ldr	r0, [pc, #36]	; 12edc <error@@Base+0xf24>
   12eb4:	add	r0, pc, r0
   12eb8:	bl	10b8c <__assert_fail@plt>
   12ebc:	ldr	r3, [fp, #-12]
   12ec0:	ldr	r3, [r3, #8]
   12ec4:	mov	r0, r3
   12ec8:	sub	sp, fp, #4
   12ecc:	pop	{fp, pc}
   12ed0:	andeq	r1, r0, r4, asr #30
   12ed4:	andeq	r5, r0, r8, asr #4
   12ed8:	ldrdeq	r5, [r0], -r4
   12edc:	ldrdeq	r5, [r0], -r4
   12ee0:	push	{fp, lr}
   12ee4:	add	fp, sp, #4
   12ee8:	sub	sp, sp, #16
   12eec:	str	r0, [fp, #-16]
   12ef0:	ldr	r3, [pc, #40]	; 12f20 <error@@Base+0xf68>
   12ef4:	str	r3, [fp, #-8]
   12ef8:	ldr	r3, [fp, #-8]
   12efc:	sub	r3, r3, #1
   12f00:	mov	r2, r3
   12f04:	mov	r1, #0
   12f08:	ldr	r0, [fp, #-16]
   12f0c:	bl	12d9c <error@@Base+0xde4>
   12f10:	mov	r3, r0
   12f14:	mov	r0, r3
   12f18:	sub	sp, fp, #4
   12f1c:	pop	{fp, pc}
   12f20:	andeq	r0, r0, r5, asr #8
   12f24:	push	{fp, lr}
   12f28:	add	fp, sp, #4
   12f2c:	sub	sp, sp, #8
   12f30:	str	r0, [fp, #-8]
   12f34:	ldr	r3, [fp, #-8]
   12f38:	cmp	r3, #0
   12f3c:	bne	12f48 <error@@Base+0xf90>
   12f40:	mov	r3, #18
   12f44:	b	12f5c <error@@Base+0xfa4>
   12f48:	ldr	r3, [fp, #-8]
   12f4c:	ldr	r3, [r3, #12]
   12f50:	mov	r0, r3
   12f54:	bl	12ee0 <error@@Base+0xf28>
   12f58:	mov	r3, r0
   12f5c:	mov	r0, r3
   12f60:	sub	sp, fp, #4
   12f64:	pop	{fp, pc}
   12f68:	push	{fp, lr}
   12f6c:	add	fp, sp, #4
   12f70:	sub	sp, sp, #8
   12f74:	str	r0, [fp, #-8]
   12f78:	ldr	r3, [fp, #-8]
   12f7c:	cmp	r3, #0
   12f80:	bne	12f8c <error@@Base+0xfd4>
   12f84:	mov	r3, #0
   12f88:	b	12fd0 <error@@Base+0x1018>
   12f8c:	ldr	r3, [fp, #-8]
   12f90:	ldr	r3, [r3, #4]
   12f94:	str	r3, [fp, #-8]
   12f98:	ldr	r3, [fp, #-8]
   12f9c:	cmp	r3, #0
   12fa0:	beq	12fcc <error@@Base+0x1014>
   12fa4:	ldr	r0, [fp, #-8]
   12fa8:	bl	12f24 <error@@Base+0xf6c>
   12fac:	mov	r3, r0
   12fb0:	cmp	r3, #4
   12fb4:	beq	12f8c <error@@Base+0xfd4>
   12fb8:	ldr	r0, [fp, #-8]
   12fbc:	bl	12f24 <error@@Base+0xf6c>
   12fc0:	mov	r3, r0
   12fc4:	cmp	r3, #6
   12fc8:	beq	12f8c <error@@Base+0xfd4>
   12fcc:	ldr	r3, [fp, #-8]
   12fd0:	mov	r0, r3
   12fd4:	sub	sp, fp, #4
   12fd8:	pop	{fp, pc}
   12fdc:	push	{fp, lr}
   12fe0:	add	fp, sp, #4
   12fe4:	sub	sp, sp, #8
   12fe8:	str	r0, [fp, #-8]
   12fec:	ldr	r0, [fp, #-8]
   12ff0:	bl	12f68 <error@@Base+0xfb0>
   12ff4:	mov	r3, r0
   12ff8:	mov	r0, r3
   12ffc:	bl	12f68 <error@@Base+0xfb0>
   13000:	mov	r3, r0
   13004:	mov	r0, r3
   13008:	sub	sp, fp, #4
   1300c:	pop	{fp, pc}
   13010:	push	{fp, lr}
   13014:	add	fp, sp, #4
   13018:	sub	sp, sp, #8
   1301c:	str	r0, [fp, #-8]
   13020:	ldr	r3, [fp, #-8]
   13024:	cmp	r3, #0
   13028:	bne	13040 <error@@Base+0x1088>
   1302c:	mov	r3, #0
   13030:	b	1308c <error@@Base+0x10d4>
   13034:	ldr	r3, [fp, #-8]
   13038:	ldr	r3, [r3, #4]
   1303c:	str	r3, [fp, #-8]
   13040:	ldr	r3, [fp, #-8]
   13044:	ldr	r3, [r3, #4]
   13048:	cmp	r3, #0
   1304c:	beq	13088 <error@@Base+0x10d0>
   13050:	ldr	r3, [fp, #-8]
   13054:	ldr	r3, [r3, #4]
   13058:	mov	r0, r3
   1305c:	bl	12f24 <error@@Base+0xf6c>
   13060:	mov	r3, r0
   13064:	cmp	r3, #4
   13068:	beq	13034 <error@@Base+0x107c>
   1306c:	ldr	r3, [fp, #-8]
   13070:	ldr	r3, [r3, #4]
   13074:	mov	r0, r3
   13078:	bl	12f24 <error@@Base+0xf6c>
   1307c:	mov	r3, r0
   13080:	cmp	r3, #6
   13084:	beq	13034 <error@@Base+0x107c>
   13088:	ldr	r3, [fp, #-8]
   1308c:	mov	r0, r3
   13090:	sub	sp, fp, #4
   13094:	pop	{fp, pc}
   13098:	push	{fp, lr}
   1309c:	add	fp, sp, #4
   130a0:	sub	sp, sp, #48	; 0x30
   130a4:	str	r0, [fp, #-48]	; 0xffffffd0
   130a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   130ac:	str	r3, [fp, #-36]	; 0xffffffdc
   130b0:	sub	r3, fp, #40	; 0x28
   130b4:	str	r3, [fp, #-8]
   130b8:	mov	r3, #17
   130bc:	str	r3, [fp, #-12]
   130c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   130c4:	cmp	r3, #0
   130c8:	bne	13494 <error@@Base+0x14dc>
   130cc:	mov	r3, #0
   130d0:	b	134b8 <error@@Base+0x1500>
   130d4:	ldr	r0, [fp, #-8]
   130d8:	bl	12f68 <error@@Base+0xfb0>
   130dc:	str	r0, [fp, #-8]
   130e0:	ldr	r3, [fp, #-12]
   130e4:	str	r3, [fp, #-16]
   130e8:	ldr	r0, [fp, #-8]
   130ec:	bl	12f24 <error@@Base+0xf6c>
   130f0:	str	r0, [fp, #-12]
   130f4:	ldr	r0, [fp, #-8]
   130f8:	bl	12f68 <error@@Base+0xfb0>
   130fc:	mov	r3, r0
   13100:	mov	r0, r3
   13104:	bl	12f24 <error@@Base+0xf6c>
   13108:	str	r0, [fp, #-20]	; 0xffffffec
   1310c:	ldr	r0, [fp, #-8]
   13110:	bl	12fdc <error@@Base+0x1024>
   13114:	mov	r3, r0
   13118:	mov	r0, r3
   1311c:	bl	12f24 <error@@Base+0xf6c>
   13120:	str	r0, [fp, #-24]	; 0xffffffe8
   13124:	ldr	r3, [fp, #-12]
   13128:	cmp	r3, #1
   1312c:	bne	13140 <error@@Base+0x1188>
   13130:	ldr	r3, [fp, #-20]	; 0xffffffec
   13134:	cmp	r3, #2
   13138:	bne	13140 <error@@Base+0x1188>
   1313c:	b	13494 <error@@Base+0x14dc>
   13140:	ldr	r3, [fp, #-12]
   13144:	cmp	r3, #3
   13148:	beq	134ac <error@@Base+0x14f4>
   1314c:	ldr	r3, [fp, #-12]
   13150:	cmp	r3, #1
   13154:	beq	134ac <error@@Base+0x14f4>
   13158:	ldr	r3, [fp, #-12]
   1315c:	cmp	r3, #2
   13160:	beq	134ac <error@@Base+0x14f4>
   13164:	ldr	r3, [fp, #-20]	; 0xffffffec
   13168:	cmp	r3, #3
   1316c:	beq	134ac <error@@Base+0x14f4>
   13170:	ldr	r3, [fp, #-20]	; 0xffffffec
   13174:	cmp	r3, #1
   13178:	beq	134ac <error@@Base+0x14f4>
   1317c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13180:	cmp	r3, #2
   13184:	beq	134ac <error@@Base+0x14f4>
   13188:	ldr	r3, [fp, #-12]
   1318c:	cmp	r3, #9
   13190:	beq	131a0 <error@@Base+0x11e8>
   13194:	ldr	r3, [fp, #-12]
   13198:	cmp	r3, #8
   1319c:	bne	131bc <error@@Base+0x1204>
   131a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   131a4:	cmp	r3, #9
   131a8:	beq	13494 <error@@Base+0x14dc>
   131ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   131b0:	cmp	r3, #8
   131b4:	bne	131bc <error@@Base+0x1204>
   131b8:	b	13494 <error@@Base+0x14dc>
   131bc:	ldr	r3, [fp, #-12]
   131c0:	cmp	r3, #9
   131c4:	beq	131d4 <error@@Base+0x121c>
   131c8:	ldr	r3, [fp, #-12]
   131cc:	cmp	r3, #8
   131d0:	bne	13214 <error@@Base+0x125c>
   131d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131d8:	cmp	r3, #13
   131dc:	beq	131f8 <error@@Base+0x1240>
   131e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   131e4:	cmp	r3, #12
   131e8:	beq	131f8 <error@@Base+0x1240>
   131ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   131f0:	cmp	r3, #10
   131f4:	bne	13214 <error@@Base+0x125c>
   131f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   131fc:	cmp	r3, #9
   13200:	beq	13494 <error@@Base+0x14dc>
   13204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13208:	cmp	r3, #8
   1320c:	bne	13214 <error@@Base+0x125c>
   13210:	b	13494 <error@@Base+0x14dc>
   13214:	ldr	r3, [fp, #-16]
   13218:	cmp	r3, #9
   1321c:	beq	1322c <error@@Base+0x1274>
   13220:	ldr	r3, [fp, #-16]
   13224:	cmp	r3, #8
   13228:	bne	1326c <error@@Base+0x12b4>
   1322c:	ldr	r3, [fp, #-12]
   13230:	cmp	r3, #13
   13234:	beq	13250 <error@@Base+0x1298>
   13238:	ldr	r3, [fp, #-12]
   1323c:	cmp	r3, #12
   13240:	beq	13250 <error@@Base+0x1298>
   13244:	ldr	r3, [fp, #-12]
   13248:	cmp	r3, #10
   1324c:	bne	1326c <error@@Base+0x12b4>
   13250:	ldr	r3, [fp, #-20]	; 0xffffffec
   13254:	cmp	r3, #9
   13258:	beq	13494 <error@@Base+0x14dc>
   1325c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13260:	cmp	r3, #8
   13264:	bne	1326c <error@@Base+0x12b4>
   13268:	b	13494 <error@@Base+0x14dc>
   1326c:	ldr	r3, [fp, #-12]
   13270:	cmp	r3, #8
   13274:	bne	13288 <error@@Base+0x12d0>
   13278:	ldr	r3, [fp, #-20]	; 0xffffffec
   1327c:	cmp	r3, #10
   13280:	bne	13288 <error@@Base+0x12d0>
   13284:	b	13494 <error@@Base+0x14dc>
   13288:	ldr	r3, [fp, #-12]
   1328c:	cmp	r3, #8
   13290:	bne	132b0 <error@@Base+0x12f8>
   13294:	ldr	r3, [fp, #-20]	; 0xffffffec
   13298:	cmp	r3, #11
   1329c:	bne	132b0 <error@@Base+0x12f8>
   132a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   132a4:	cmp	r3, #8
   132a8:	bne	132b0 <error@@Base+0x12f8>
   132ac:	b	13494 <error@@Base+0x14dc>
   132b0:	ldr	r3, [fp, #-16]
   132b4:	cmp	r3, #8
   132b8:	bne	132d8 <error@@Base+0x1320>
   132bc:	ldr	r3, [fp, #-12]
   132c0:	cmp	r3, #11
   132c4:	bne	132d8 <error@@Base+0x1320>
   132c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   132cc:	cmp	r3, #8
   132d0:	bne	132d8 <error@@Base+0x1320>
   132d4:	b	13494 <error@@Base+0x14dc>
   132d8:	ldr	r3, [fp, #-12]
   132dc:	cmp	r3, #15
   132e0:	bne	132f4 <error@@Base+0x133c>
   132e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   132e8:	cmp	r3, #15
   132ec:	bne	132f4 <error@@Base+0x133c>
   132f0:	b	13494 <error@@Base+0x14dc>
   132f4:	ldr	r3, [fp, #-12]
   132f8:	cmp	r3, #9
   132fc:	beq	1330c <error@@Base+0x1354>
   13300:	ldr	r3, [fp, #-12]
   13304:	cmp	r3, #8
   13308:	bne	1331c <error@@Base+0x1364>
   1330c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13310:	cmp	r3, #15
   13314:	bne	1331c <error@@Base+0x1364>
   13318:	b	13494 <error@@Base+0x14dc>
   1331c:	ldr	r3, [fp, #-12]
   13320:	cmp	r3, #15
   13324:	bne	13344 <error@@Base+0x138c>
   13328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1332c:	cmp	r3, #9
   13330:	beq	13494 <error@@Base+0x14dc>
   13334:	ldr	r3, [fp, #-20]	; 0xffffffec
   13338:	cmp	r3, #8
   1333c:	bne	13344 <error@@Base+0x138c>
   13340:	b	13494 <error@@Base+0x14dc>
   13344:	ldr	r3, [fp, #-16]
   13348:	cmp	r3, #15
   1334c:	bne	13384 <error@@Base+0x13cc>
   13350:	ldr	r3, [fp, #-12]
   13354:	cmp	r3, #14
   13358:	beq	13374 <error@@Base+0x13bc>
   1335c:	ldr	r3, [fp, #-12]
   13360:	cmp	r3, #12
   13364:	beq	13374 <error@@Base+0x13bc>
   13368:	ldr	r3, [fp, #-12]
   1336c:	cmp	r3, #10
   13370:	bne	13384 <error@@Base+0x13cc>
   13374:	ldr	r3, [fp, #-20]	; 0xffffffec
   13378:	cmp	r3, #15
   1337c:	bne	13384 <error@@Base+0x13cc>
   13380:	b	13494 <error@@Base+0x14dc>
   13384:	ldr	r3, [fp, #-12]
   13388:	cmp	r3, #15
   1338c:	bne	133c4 <error@@Base+0x140c>
   13390:	ldr	r3, [fp, #-20]	; 0xffffffec
   13394:	cmp	r3, #14
   13398:	beq	133b4 <error@@Base+0x13fc>
   1339c:	ldr	r3, [fp, #-20]	; 0xffffffec
   133a0:	cmp	r3, #12
   133a4:	beq	133b4 <error@@Base+0x13fc>
   133a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   133ac:	cmp	r3, #10
   133b0:	bne	133c4 <error@@Base+0x140c>
   133b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   133b8:	cmp	r3, #15
   133bc:	bne	133c4 <error@@Base+0x140c>
   133c0:	b	13494 <error@@Base+0x14dc>
   133c4:	ldr	r3, [fp, #-12]
   133c8:	cmp	r3, #7
   133cc:	bne	133e0 <error@@Base+0x1428>
   133d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   133d4:	cmp	r3, #7
   133d8:	bne	133e0 <error@@Base+0x1428>
   133dc:	b	13494 <error@@Base+0x14dc>
   133e0:	ldr	r3, [fp, #-12]
   133e4:	cmp	r3, #9
   133e8:	beq	1341c <error@@Base+0x1464>
   133ec:	ldr	r3, [fp, #-12]
   133f0:	cmp	r3, #8
   133f4:	beq	1341c <error@@Base+0x1464>
   133f8:	ldr	r3, [fp, #-12]
   133fc:	cmp	r3, #15
   13400:	beq	1341c <error@@Base+0x1464>
   13404:	ldr	r3, [fp, #-12]
   13408:	cmp	r3, #7
   1340c:	beq	1341c <error@@Base+0x1464>
   13410:	ldr	r3, [fp, #-12]
   13414:	cmp	r3, #16
   13418:	bne	1342c <error@@Base+0x1474>
   1341c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13420:	cmp	r3, #16
   13424:	bne	1342c <error@@Base+0x1474>
   13428:	b	13494 <error@@Base+0x14dc>
   1342c:	ldr	r3, [fp, #-12]
   13430:	cmp	r3, #16
   13434:	bne	13478 <error@@Base+0x14c0>
   13438:	ldr	r3, [fp, #-20]	; 0xffffffec
   1343c:	cmp	r3, #9
   13440:	beq	13494 <error@@Base+0x14dc>
   13444:	ldr	r3, [fp, #-20]	; 0xffffffec
   13448:	cmp	r3, #8
   1344c:	beq	13494 <error@@Base+0x14dc>
   13450:	ldr	r3, [fp, #-20]	; 0xffffffec
   13454:	cmp	r3, #15
   13458:	beq	13494 <error@@Base+0x14dc>
   1345c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13460:	cmp	r3, #7
   13464:	beq	13494 <error@@Base+0x14dc>
   13468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1346c:	cmp	r3, #16
   13470:	bne	13478 <error@@Base+0x14c0>
   13474:	b	13494 <error@@Base+0x14dc>
   13478:	ldr	r3, [fp, #-12]
   1347c:	cmp	r3, #5
   13480:	bne	134a8 <error@@Base+0x14f0>
   13484:	ldr	r3, [fp, #-20]	; 0xffffffec
   13488:	cmp	r3, #5
   1348c:	bne	134a8 <error@@Base+0x14f0>
   13490:	nop			; (mov r0, r0)
   13494:	ldr	r3, [fp, #-8]
   13498:	ldr	r3, [r3, #4]
   1349c:	cmp	r3, #0
   134a0:	bne	130d4 <error@@Base+0x111c>
   134a4:	b	134ac <error@@Base+0x14f4>
   134a8:	nop			; (mov r0, r0)
   134ac:	ldr	r0, [fp, #-8]
   134b0:	bl	13010 <error@@Base+0x1058>
   134b4:	mov	r3, r0
   134b8:	mov	r0, r3
   134bc:	sub	sp, fp, #4
   134c0:	pop	{fp, pc}
   134c4:	push	{fp, lr}
   134c8:	add	fp, sp, #4
   134cc:	sub	sp, sp, #24
   134d0:	str	r0, [fp, #-24]	; 0xffffffe8
   134d4:	str	r1, [fp, #-28]	; 0xffffffe4
   134d8:	mov	r3, #0
   134dc:	str	r3, [fp, #-12]
   134e0:	mov	r3, #0
   134e4:	str	r3, [fp, #-16]
   134e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134ec:	str	r3, [fp, #-8]
   134f0:	b	1358c <error@@Base+0x15d4>
   134f4:	ldr	r3, [fp, #-8]
   134f8:	cmp	r3, #0
   134fc:	bne	13520 <error@@Base+0x1568>
   13500:	ldr	r3, [pc, #164]	; 135ac <error@@Base+0x15f4>
   13504:	add	r3, pc, r3
   13508:	mov	r2, #249	; 0xf9
   1350c:	ldr	r1, [pc, #156]	; 135b0 <error@@Base+0x15f8>
   13510:	add	r1, pc, r1
   13514:	ldr	r0, [pc, #152]	; 135b4 <error@@Base+0x15fc>
   13518:	add	r0, pc, r0
   1351c:	bl	10b8c <__assert_fail@plt>
   13520:	ldr	r3, [fp, #-8]
   13524:	ldr	r3, [r3, #12]
   13528:	mov	r2, r3
   1352c:	sub	r3, fp, #20
   13530:	mov	r1, r3
   13534:	mov	r0, r2
   13538:	bl	10a30 <utf8proc_encode_char@plt>
   1353c:	mov	r3, r0
   13540:	str	r3, [fp, #-16]
   13544:	ldr	r3, [fp, #-16]
   13548:	cmp	r3, #0
   1354c:	bne	13570 <error@@Base+0x15b8>
   13550:	ldr	r3, [pc, #96]	; 135b8 <error@@Base+0x1600>
   13554:	add	r3, pc, r3
   13558:	mov	r2, #253	; 0xfd
   1355c:	ldr	r1, [pc, #88]	; 135bc <error@@Base+0x1604>
   13560:	add	r1, pc, r1
   13564:	ldr	r0, [pc, #84]	; 135c0 <error@@Base+0x1608>
   13568:	add	r0, pc, r0
   1356c:	bl	10b8c <__assert_fail@plt>
   13570:	ldr	r2, [fp, #-12]
   13574:	ldr	r3, [fp, #-16]
   13578:	add	r3, r2, r3
   1357c:	str	r3, [fp, #-12]
   13580:	ldr	r3, [fp, #-8]
   13584:	ldr	r3, [r3, #4]
   13588:	str	r3, [fp, #-8]
   1358c:	ldr	r2, [fp, #-8]
   13590:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13594:	cmp	r2, r3
   13598:	bne	134f4 <error@@Base+0x153c>
   1359c:	ldr	r3, [fp, #-12]
   135a0:	mov	r0, r3
   135a4:	sub	sp, fp, #4
   135a8:	pop	{fp, pc}
   135ac:	strdeq	r4, [r0], -r8
   135b0:	andeq	r4, r0, r0, ror fp
   135b4:	andeq	r4, r0, ip, lsr #23
   135b8:	andeq	r4, r0, r8, lsr #23
   135bc:	andeq	r4, r0, r0, lsr #22
   135c0:	andeq	r4, r0, ip, ror #22
   135c4:	push	{fp, lr}
   135c8:	add	fp, sp, #4
   135cc:	sub	sp, sp, #24
   135d0:	str	r0, [fp, #-16]
   135d4:	str	r1, [fp, #-20]	; 0xffffffec
   135d8:	str	r2, [fp, #-24]	; 0xffffffe8
   135dc:	mov	r3, #0
   135e0:	str	r3, [fp, #-12]
   135e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   135e8:	str	r3, [fp, #-8]
   135ec:	b	1365c <error@@Base+0x16a4>
   135f0:	ldr	r3, [fp, #-8]
   135f4:	cmp	r3, #0
   135f8:	bne	1361c <error@@Base+0x1664>
   135fc:	ldr	r3, [pc, #136]	; 1368c <error@@Base+0x16d4>
   13600:	add	r3, pc, r3
   13604:	ldr	r2, [pc, #132]	; 13690 <error@@Base+0x16d8>
   13608:	ldr	r1, [pc, #132]	; 13694 <error@@Base+0x16dc>
   1360c:	add	r1, pc, r1
   13610:	ldr	r0, [pc, #128]	; 13698 <error@@Base+0x16e0>
   13614:	add	r0, pc, r0
   13618:	bl	10b8c <__assert_fail@plt>
   1361c:	ldr	r3, [fp, #-8]
   13620:	ldr	r3, [r3, #12]
   13624:	mov	r0, r3
   13628:	ldr	r2, [fp, #-16]
   1362c:	ldr	r3, [fp, #-12]
   13630:	add	r3, r2, r3
   13634:	mov	r1, r3
   13638:	bl	10a30 <utf8proc_encode_char@plt>
   1363c:	mov	r3, r0
   13640:	mov	r2, r3
   13644:	ldr	r3, [fp, #-12]
   13648:	add	r3, r3, r2
   1364c:	str	r3, [fp, #-12]
   13650:	ldr	r3, [fp, #-8]
   13654:	ldr	r3, [r3, #4]
   13658:	str	r3, [fp, #-8]
   1365c:	ldr	r2, [fp, #-8]
   13660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13664:	cmp	r2, r3
   13668:	bne	135f0 <error@@Base+0x1638>
   1366c:	ldr	r2, [fp, #-16]
   13670:	ldr	r3, [fp, #-12]
   13674:	add	r3, r2, r3
   13678:	mov	r2, #0
   1367c:	strb	r2, [r3]
   13680:	nop			; (mov r0, r0)
   13684:	sub	sp, fp, #4
   13688:	pop	{fp, pc}
   1368c:	andeq	r4, r0, r0, lsl fp
   13690:	andeq	r0, r0, sp, lsl #2
   13694:	andeq	r4, r0, r4, ror sl
   13698:			; <UNDEFINED> instruction: 0x00004ab0
   1369c:	push	{fp, lr}
   136a0:	add	fp, sp, #4
   136a4:	sub	sp, sp, #32
   136a8:	str	r0, [fp, #-24]	; 0xffffffe8
   136ac:	str	r1, [fp, #-28]	; 0xffffffe4
   136b0:	str	r2, [fp, #-32]	; 0xffffffe0
   136b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   136b8:	ldr	r3, [r3, #4]
   136bc:	str	r3, [fp, #-8]
   136c0:	ldr	r1, [fp, #-8]
   136c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   136c8:	bl	134c4 <error@@Base+0x150c>
   136cc:	str	r0, [fp, #-12]
   136d0:	ldr	r3, [fp, #-12]
   136d4:	add	r3, r3, #1
   136d8:	mov	r0, r3
   136dc:	bl	10a9c <malloc@plt>
   136e0:	mov	r3, r0
   136e4:	str	r3, [fp, #-16]
   136e8:	ldr	r2, [fp, #-8]
   136ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136f0:	ldr	r0, [fp, #-16]
   136f4:	bl	135c4 <error@@Base+0x160c>
   136f8:	mov	r1, #12
   136fc:	mov	r0, #1
   13700:	bl	11464 <__assert_fail@plt+0x8d8>
   13704:	str	r0, [fp, #-20]	; 0xffffffec
   13708:	ldr	r0, [fp, #-16]
   1370c:	bl	10b20 <utf8proc_NFC@plt>
   13710:	mov	r2, r0
   13714:	ldr	r3, [fp, #-20]	; 0xffffffec
   13718:	str	r2, [r3, #8]
   1371c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13724:	bl	144f4 <error@@Base+0x253c>
   13728:	ldr	r0, [fp, #-16]
   1372c:	bl	10a0c <free@plt>
   13730:	nop			; (mov r0, r0)
   13734:	sub	sp, fp, #4
   13738:	pop	{fp, pc}
   1373c:	push	{fp, lr}
   13740:	add	fp, sp, #4
   13744:	sub	sp, sp, #16
   13748:	str	r0, [fp, #-16]
   1374c:	ldr	r3, [fp, #-16]
   13750:	mov	r0, r3
   13754:	bl	10a18 <utf8proc_get_property@plt>
   13758:	str	r0, [fp, #-8]
   1375c:	ldr	r3, [fp, #-8]
   13760:	ldrsh	r3, [r3]
   13764:	cmp	r3, #1
   13768:	blt	13784 <error@@Base+0x17cc>
   1376c:	cmp	r3, #12
   13770:	ble	1377c <error@@Base+0x17c4>
   13774:	cmp	r3, #29
   13778:	bne	13784 <error@@Base+0x17cc>
   1377c:	mov	r3, #1
   13780:	b	13788 <error@@Base+0x17d0>
   13784:	mov	r3, #0
   13788:	mov	r0, r3
   1378c:	sub	sp, fp, #4
   13790:	pop	{fp, pc}
   13794:	push	{fp, lr}
   13798:	add	fp, sp, #4
   1379c:	sub	sp, sp, #16
   137a0:	str	r0, [fp, #-16]
   137a4:	str	r1, [fp, #-20]	; 0xffffffec
   137a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   137ac:	ldr	r3, [r3]
   137b0:	str	r3, [fp, #-8]
   137b4:	b	137f0 <error@@Base+0x1838>
   137b8:	ldr	r3, [fp, #-8]
   137bc:	ldr	r3, [r3, #12]
   137c0:	mov	r0, r3
   137c4:	bl	1373c <error@@Base+0x1784>
   137c8:	mov	r3, r0
   137cc:	cmp	r3, #0
   137d0:	beq	137e4 <error@@Base+0x182c>
   137d4:	ldr	r2, [fp, #-12]
   137d8:	ldr	r1, [fp, #-8]
   137dc:	ldr	r0, [fp, #-16]
   137e0:	bl	1369c <error@@Base+0x16e4>
   137e4:	ldr	r3, [fp, #-12]
   137e8:	ldr	r3, [r3, #4]
   137ec:	str	r3, [fp, #-8]
   137f0:	ldr	r0, [fp, #-8]
   137f4:	bl	13098 <error@@Base+0x10e0>
   137f8:	str	r0, [fp, #-12]
   137fc:	ldr	r3, [fp, #-12]
   13800:	cmp	r3, #0
   13804:	bne	137b8 <error@@Base+0x1800>
   13808:	nop			; (mov r0, r0)
   1380c:	sub	sp, fp, #4
   13810:	pop	{fp, pc}
   13814:	push	{fp, lr}
   13818:	add	fp, sp, #4
   1381c:	sub	sp, sp, #8
   13820:	str	r0, [fp, #-8]
   13824:	ldr	r3, [fp, #-8]
   13828:	ldr	r3, [r3, #8]
   1382c:	mov	r0, r3
   13830:	bl	10a0c <free@plt>
   13834:	ldr	r0, [fp, #-8]
   13838:	bl	10a0c <free@plt>
   1383c:	nop			; (mov r0, r0)
   13840:	sub	sp, fp, #4
   13844:	pop	{fp, pc}
   13848:	push	{fp, lr}
   1384c:	add	fp, sp, #4
   13850:	sub	sp, sp, #24
   13854:	str	r0, [fp, #-16]
   13858:	mov	r3, r1
   1385c:	str	r2, [fp, #-24]	; 0xffffffe8
   13860:	strb	r3, [fp, #-20]	; 0xffffffec
   13864:	mov	r1, #16
   13868:	mov	r0, #1
   1386c:	bl	11464 <__assert_fail@plt+0x8d8>
   13870:	str	r0, [fp, #-8]
   13874:	ldr	r3, [fp, #-8]
   13878:	ldrb	r2, [fp, #-20]	; 0xffffffec
   1387c:	strb	r2, [r3, #8]
   13880:	ldr	r3, [fp, #-8]
   13884:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13888:	str	r2, [r3, #12]
   1388c:	ldr	r1, [fp, #-8]
   13890:	ldr	r0, [fp, #-16]
   13894:	bl	144f4 <error@@Base+0x253c>
   13898:	nop			; (mov r0, r0)
   1389c:	sub	sp, fp, #4
   138a0:	pop	{fp, pc}
   138a4:	push	{fp, lr}
   138a8:	add	fp, sp, #4
   138ac:	sub	sp, sp, #112	; 0x70
   138b0:	str	r0, [fp, #-112]	; 0xffffff90
   138b4:	mov	r3, #0
   138b8:	strh	r3, [fp, #-6]
   138bc:	sub	r3, fp, #108	; 0x6c
   138c0:	ldr	r2, [fp, #-112]	; 0xffffff90
   138c4:	mov	r1, #99	; 0x63
   138c8:	mov	r0, r3
   138cc:	bl	10a24 <fgets@plt>
   138d0:	mov	r3, r0
   138d4:	cmp	r3, #0
   138d8:	beq	13970 <error@@Base+0x19b8>
   138dc:	sub	r3, fp, #108	; 0x6c
   138e0:	mov	r2, #51	; 0x33
   138e4:	ldr	r1, [pc, #156]	; 13988 <error@@Base+0x19d0>
   138e8:	add	r1, pc, r1
   138ec:	mov	r0, r3
   138f0:	bl	10b68 <strncmp@plt>
   138f4:	mov	r3, r0
   138f8:	cmp	r3, #0
   138fc:	bne	13970 <error@@Base+0x19b8>
   13900:	b	1393c <error@@Base+0x1984>
   13904:	sub	r3, fp, #108	; 0x6c
   13908:	ldr	r2, [pc, #124]	; 1398c <error@@Base+0x19d4>
   1390c:	add	r2, pc, r2
   13910:	mov	r1, r2
   13914:	mov	r0, r3
   13918:	bl	109e8 <strcmp@plt>
   1391c:	mov	r3, r0
   13920:	cmp	r3, #0
   13924:	bne	1393c <error@@Base+0x1984>
   13928:	ldrsh	r3, [fp, #-6]
   1392c:	uxth	r3, r3
   13930:	add	r3, r3, #1
   13934:	uxth	r3, r3
   13938:	strh	r3, [fp, #-6]
   1393c:	ldrsh	r3, [fp, #-6]
   13940:	cmp	r3, #1
   13944:	bgt	13968 <error@@Base+0x19b0>
   13948:	sub	r3, fp, #108	; 0x6c
   1394c:	ldr	r2, [fp, #-112]	; 0xffffff90
   13950:	mov	r1, #99	; 0x63
   13954:	mov	r0, r3
   13958:	bl	10a24 <fgets@plt>
   1395c:	mov	r3, r0
   13960:	cmp	r3, #0
   13964:	bne	13904 <error@@Base+0x194c>
   13968:	mov	r3, #1
   1396c:	b	1397c <error@@Base+0x19c4>
   13970:	ldr	r0, [fp, #-112]	; 0xffffff90
   13974:	bl	10a48 <rewind@plt>
   13978:	mov	r3, #0
   1397c:	mov	r0, r3
   13980:	sub	sp, fp, #4
   13984:	pop	{fp, pc}
   13988:	andeq	r4, r0, ip, lsr r8
   1398c:	andeq	r4, r0, r0, asr r8
   13990:	push	{r4, fp, lr}
   13994:	add	fp, sp, #8
   13998:	sub	sp, sp, #52	; 0x34
   1399c:	str	r0, [fp, #-48]	; 0xffffffd0
   139a0:	str	r1, [fp, #-52]	; 0xffffffcc
   139a4:	str	r3, [fp, #-60]	; 0xffffffc4
   139a8:	mov	r3, r2
   139ac:	strb	r3, [fp, #-56]	; 0xffffffc8
   139b0:	ldr	r4, [pc, #340]	; 13b0c <error@@Base+0x1b54>
   139b4:	add	r4, pc, r4
   139b8:	mov	r3, #0
   139bc:	strb	r3, [fp, #-13]
   139c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   139c4:	bl	10b80 <getc@plt>
   139c8:	str	r0, [fp, #-20]	; 0xffffffec
   139cc:	b	13af4 <error@@Base+0x1b3c>
   139d0:	ldr	r3, [pc, #312]	; 13b10 <error@@Base+0x1b58>
   139d4:	ldr	r2, [r4, r3]
   139d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139dc:	add	r3, r2, r3
   139e0:	ldrsb	r3, [r3]
   139e4:	str	r3, [fp, #-24]	; 0xffffffe8
   139e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   139ec:	cmp	r3, #0
   139f0:	bgt	13a04 <error@@Base+0x1a4c>
   139f4:	ldr	r3, [pc, #280]	; 13b14 <error@@Base+0x1b5c>
   139f8:	add	r3, pc, r3
   139fc:	mov	r0, r3
   13a00:	bl	11fb8 <error@@Base>
   13a04:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a08:	uxtb	r3, r3
   13a0c:	strb	r3, [fp, #-36]	; 0xffffffdc
   13a10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a14:	cmp	r3, #1
   13a18:	ble	13a68 <error@@Base+0x1ab0>
   13a1c:	sub	r0, fp, #36	; 0x24
   13a20:	add	r0, r0, #1
   13a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a28:	sub	r3, r3, #1
   13a2c:	mov	r2, r3
   13a30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13a34:	mov	r1, #1
   13a38:	bl	10a84 <fread@plt>
   13a3c:	mov	r3, r0
   13a40:	str	r3, [fp, #-28]	; 0xffffffe4
   13a44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a48:	sub	r2, r3, #1
   13a4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13a50:	cmp	r2, r3
   13a54:	beq	13a68 <error@@Base+0x1ab0>
   13a58:	ldr	r3, [pc, #184]	; 13b18 <error@@Base+0x1b60>
   13a5c:	add	r3, pc, r3
   13a60:	mov	r0, r3
   13a64:	bl	11fb8 <error@@Base>
   13a68:	sub	r2, fp, #40	; 0x28
   13a6c:	sub	r3, fp, #36	; 0x24
   13a70:	mov	r1, #4
   13a74:	mov	r0, r3
   13a78:	bl	10a90 <utf8proc_iterate@plt>
   13a7c:	str	r0, [fp, #-32]	; 0xffffffe0
   13a80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a88:	cmp	r2, r3
   13a8c:	beq	13aa4 <error@@Base+0x1aec>
   13a90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13a94:	bl	10b50 <utf8proc_errmsg@plt>
   13a98:	mov	r3, r0
   13a9c:	mov	r0, r3
   13aa0:	bl	11fb8 <error@@Base>
   13aa4:	ldrb	r3, [fp, #-56]	; 0xffffffc8
   13aa8:	cmp	r3, #0
   13aac:	beq	13acc <error@@Base+0x1b14>
   13ab0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13ab4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ab8:	cmp	r2, r3
   13abc:	bne	13acc <error@@Base+0x1b14>
   13ac0:	mov	r3, #1
   13ac4:	strb	r3, [fp, #-13]
   13ac8:	b	13ae8 <error@@Base+0x1b30>
   13acc:	ldrb	r3, [fp, #-13]
   13ad0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13ad4:	mov	r1, r3
   13ad8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13adc:	bl	13848 <error@@Base+0x1890>
   13ae0:	mov	r3, #0
   13ae4:	strb	r3, [fp, #-13]
   13ae8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13aec:	bl	10b80 <getc@plt>
   13af0:	str	r0, [fp, #-20]	; 0xffffffec
   13af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13af8:	cmn	r3, #1
   13afc:	bne	139d0 <error@@Base+0x1a18>
   13b00:	nop			; (mov r0, r0)
   13b04:	sub	sp, fp, #8
   13b08:	pop	{r4, fp, pc}
   13b0c:	andeq	r5, r1, r4, asr #12
   13b10:	andeq	r0, r0, ip, asr #1
   13b14:	muleq	r0, ip, r7
   13b18:	andeq	r4, r0, r0, asr r7
   13b1c:	push	{fp, lr}
   13b20:	add	fp, sp, #4
   13b24:	sub	sp, sp, #16
   13b28:	str	r0, [fp, #-16]
   13b2c:	ldr	r0, [fp, #-16]
   13b30:	bl	10a18 <utf8proc_get_property@plt>
   13b34:	str	r0, [fp, #-8]
   13b38:	ldr	r3, [fp, #-16]
   13b3c:	cmp	r3, #13
   13b40:	bgt	13b60 <error@@Base+0x1ba8>
   13b44:	cmp	r3, #11
   13b48:	bge	13b74 <error@@Base+0x1bbc>
   13b4c:	cmp	r3, #9
   13b50:	beq	13b74 <error@@Base+0x1bbc>
   13b54:	cmp	r3, #10
   13b58:	beq	13b6c <error@@Base+0x1bb4>
   13b5c:	b	13b7c <error@@Base+0x1bc4>
   13b60:	cmp	r3, #160	; 0xa0
   13b64:	beq	13b74 <error@@Base+0x1bbc>
   13b68:	b	13b7c <error@@Base+0x1bc4>
   13b6c:	mov	r3, #0
   13b70:	b	13b9c <error@@Base+0x1be4>
   13b74:	mov	r3, #1
   13b78:	b	13b9c <error@@Base+0x1be4>
   13b7c:	ldr	r3, [fp, #-8]
   13b80:	ldrsh	r3, [r3]
   13b84:	sub	r3, r3, #23
   13b88:	cmp	r3, #2
   13b8c:	bhi	13b98 <error@@Base+0x1be0>
   13b90:	mov	r3, #1
   13b94:	b	13b9c <error@@Base+0x1be4>
   13b98:	mov	r3, #0
   13b9c:	mov	r0, r3
   13ba0:	sub	sp, fp, #4
   13ba4:	pop	{fp, pc}
   13ba8:	push	{fp, lr}
   13bac:	add	fp, sp, #4
   13bb0:	sub	sp, sp, #24
   13bb4:	str	r0, [fp, #-24]	; 0xffffffe8
   13bb8:	str	r1, [fp, #-28]	; 0xffffffe4
   13bbc:	mov	r3, #0
   13bc0:	strb	r3, [fp, #-5]
   13bc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13bc8:	str	r3, [fp, #-12]
   13bcc:	b	13c04 <error@@Base+0x1c4c>
   13bd0:	ldr	r3, [fp, #-12]
   13bd4:	ldr	r3, [r3, #12]
   13bd8:	mov	r0, r3
   13bdc:	bl	13b1c <error@@Base+0x1b64>
   13be0:	mov	r3, r0
   13be4:	cmp	r3, #0
   13be8:	beq	13bf8 <error@@Base+0x1c40>
   13bec:	ldr	r3, [fp, #-12]
   13bf0:	mov	r2, #32
   13bf4:	str	r2, [r3, #12]
   13bf8:	ldr	r3, [fp, #-12]
   13bfc:	ldr	r3, [r3, #4]
   13c00:	str	r3, [fp, #-12]
   13c04:	ldr	r3, [fp, #-12]
   13c08:	cmp	r3, #0
   13c0c:	bne	13bd0 <error@@Base+0x1c18>
   13c10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c14:	str	r3, [fp, #-12]
   13c18:	b	13d10 <error@@Base+0x1d58>
   13c1c:	ldr	r3, [fp, #-12]
   13c20:	ldr	r3, [r3, #4]
   13c24:	str	r3, [fp, #-16]
   13c28:	ldr	r3, [fp, #-12]
   13c2c:	ldr	r3, [r3, #12]
   13c30:	cmp	r3, #32
   13c34:	bne	13c70 <error@@Base+0x1cb8>
   13c38:	ldrb	r3, [fp, #-5]
   13c3c:	cmp	r3, #0
   13c40:	beq	13c8c <error@@Base+0x1cd4>
   13c44:	ldr	r3, [fp, #-16]
   13c48:	cmp	r3, #0
   13c4c:	beq	13c8c <error@@Base+0x1cd4>
   13c50:	ldr	r3, [fp, #-16]
   13c54:	ldr	r3, [r3, #12]
   13c58:	cmp	r3, #32
   13c5c:	beq	13c8c <error@@Base+0x1cd4>
   13c60:	ldr	r3, [fp, #-16]
   13c64:	ldr	r3, [r3, #12]
   13c68:	cmp	r3, #10
   13c6c:	beq	13c8c <error@@Base+0x1cd4>
   13c70:	ldr	r3, [fp, #-12]
   13c74:	ldr	r3, [r3, #12]
   13c78:	cmp	r3, #10
   13c7c:	bne	13cec <error@@Base+0x1d34>
   13c80:	ldrb	r3, [fp, #-5]
   13c84:	cmp	r3, #0
   13c88:	bne	13cec <error@@Base+0x1d34>
   13c8c:	ldrb	r3, [fp, #-5]
   13c90:	cmp	r3, #0
   13c94:	beq	13cd4 <error@@Base+0x1d1c>
   13c98:	ldr	r3, [fp, #-16]
   13c9c:	cmp	r3, #0
   13ca0:	beq	13cd4 <error@@Base+0x1d1c>
   13ca4:	ldr	r3, [fp, #-16]
   13ca8:	ldr	r3, [r3, #12]
   13cac:	cmp	r3, #32
   13cb0:	bne	13cd4 <error@@Base+0x1d1c>
   13cb4:	ldr	r3, [fp, #-16]
   13cb8:	ldrb	r2, [r3, #8]
   13cbc:	ldr	r3, [fp, #-12]
   13cc0:	ldrb	r3, [r3, #8]
   13cc4:	orr	r3, r2, r3
   13cc8:	uxtb	r2, r3
   13ccc:	ldr	r3, [fp, #-16]
   13cd0:	strb	r2, [r3, #8]
   13cd4:	ldr	r1, [fp, #-12]
   13cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cdc:	bl	145a4 <error@@Base+0x25ec>
   13ce0:	ldr	r0, [fp, #-12]
   13ce4:	bl	10a0c <free@plt>
   13ce8:	b	13d08 <error@@Base+0x1d50>
   13cec:	ldr	r3, [fp, #-12]
   13cf0:	ldr	r3, [r3, #12]
   13cf4:	cmp	r3, #10
   13cf8:	movne	r3, #1
   13cfc:	moveq	r3, #0
   13d00:	uxtb	r3, r3
   13d04:	strb	r3, [fp, #-5]
   13d08:	ldr	r3, [fp, #-16]
   13d0c:	str	r3, [fp, #-12]
   13d10:	ldr	r3, [fp, #-12]
   13d14:	cmp	r3, #0
   13d18:	bne	13c1c <error@@Base+0x1c64>
   13d1c:	nop			; (mov r0, r0)
   13d20:	sub	sp, fp, #4
   13d24:	pop	{fp, pc}
   13d28:	push	{fp, lr}
   13d2c:	add	fp, sp, #4
   13d30:	sub	sp, sp, #16
   13d34:	str	r0, [fp, #-16]
   13d38:	ldr	r3, [fp, #-16]
   13d3c:	str	r3, [fp, #-8]
   13d40:	b	13d70 <error@@Base+0x1db8>
   13d44:	ldr	r3, [fp, #-8]
   13d48:	ldr	r3, [r3, #12]
   13d4c:	mov	r0, r3
   13d50:	bl	10a60 <utf8proc_tolower@plt>
   13d54:	mov	r3, r0
   13d58:	mov	r2, r3
   13d5c:	ldr	r3, [fp, #-8]
   13d60:	str	r2, [r3, #12]
   13d64:	ldr	r3, [fp, #-8]
   13d68:	ldr	r3, [r3, #4]
   13d6c:	str	r3, [fp, #-8]
   13d70:	ldr	r3, [fp, #-8]
   13d74:	cmp	r3, #0
   13d78:	bne	13d44 <error@@Base+0x1d8c>
   13d7c:	nop			; (mov r0, r0)
   13d80:	sub	sp, fp, #4
   13d84:	pop	{fp, pc}
   13d88:	push	{fp, lr}
   13d8c:	add	fp, sp, #4
   13d90:	sub	sp, sp, #24
   13d94:	str	r0, [fp, #-16]
   13d98:	str	r1, [fp, #-20]	; 0xffffffec
   13d9c:	str	r2, [fp, #-24]	; 0xffffffe8
   13da0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13da4:	ldrb	r3, [r3]
   13da8:	cmp	r3, #0
   13dac:	beq	13dd8 <error@@Base+0x1e20>
   13db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13db4:	cmp	r3, #0
   13db8:	bne	13dd8 <error@@Base+0x1e20>
   13dbc:	ldr	r3, [pc, #288]	; 13ee4 <error@@Base+0x1f2c>
   13dc0:	add	r3, pc, r3
   13dc4:	mov	r1, r3
   13dc8:	ldr	r3, [pc, #280]	; 13ee8 <error@@Base+0x1f30>
   13dcc:	add	r3, pc, r3
   13dd0:	mov	r0, r3
   13dd4:	bl	12020 <error@@Base+0x68>
   13dd8:	ldr	r3, [fp, #-16]
   13ddc:	ldr	r3, [r3, #4]
   13de0:	str	r3, [fp, #-8]
   13de4:	ldr	r3, [pc, #256]	; 13eec <error@@Base+0x1f34>
   13de8:	add	r3, pc, r3
   13dec:	mov	r1, r3
   13df0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13df4:	bl	115a4 <__assert_fail@plt+0xa18>
   13df8:	str	r0, [fp, #-12]
   13dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e00:	ldrb	r3, [r3]
   13e04:	cmp	r3, #0
   13e08:	beq	13e24 <error@@Base+0x1e6c>
   13e0c:	ldr	r0, [fp, #-12]
   13e10:	bl	138a4 <error@@Base+0x18ec>
   13e14:	mov	r3, r0
   13e18:	mov	r2, r3
   13e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e20:	strb	r2, [r3, #11]
   13e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e28:	ldrb	r3, [r3, #1]
   13e2c:	mov	r2, r3
   13e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e34:	ldr	r3, [r3, #4]
   13e38:	cmp	r3, #0
   13e3c:	beq	13e4c <error@@Base+0x1e94>
   13e40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e44:	ldr	r3, [r3, #4]
   13e48:	b	13e50 <error@@Base+0x1e98>
   13e4c:	mov	r3, #94	; 0x5e
   13e50:	ldr	r1, [fp, #-16]
   13e54:	ldr	r0, [fp, #-12]
   13e58:	bl	13990 <error@@Base+0x19d8>
   13e5c:	ldr	r0, [fp, #-12]
   13e60:	bl	11678 <__assert_fail@plt+0xaec>
   13e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13e68:	ldrb	r3, [r3, #9]
   13e6c:	cmp	r3, #0
   13e70:	beq	13ea0 <error@@Base+0x1ee8>
   13e74:	ldr	r3, [fp, #-8]
   13e78:	cmp	r3, #0
   13e7c:	beq	13e8c <error@@Base+0x1ed4>
   13e80:	ldr	r3, [fp, #-8]
   13e84:	ldr	r3, [r3, #4]
   13e88:	b	13e94 <error@@Base+0x1edc>
   13e8c:	ldr	r3, [fp, #-16]
   13e90:	ldr	r3, [r3]
   13e94:	mov	r1, r3
   13e98:	ldr	r0, [fp, #-16]
   13e9c:	bl	13ba8 <error@@Base+0x1bf0>
   13ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ea4:	ldrb	r3, [r3, #10]
   13ea8:	cmp	r3, #0
   13eac:	beq	13ed8 <error@@Base+0x1f20>
   13eb0:	ldr	r3, [fp, #-8]
   13eb4:	cmp	r3, #0
   13eb8:	beq	13ec8 <error@@Base+0x1f10>
   13ebc:	ldr	r3, [fp, #-8]
   13ec0:	ldr	r3, [r3, #4]
   13ec4:	b	13ed0 <error@@Base+0x1f18>
   13ec8:	ldr	r3, [fp, #-16]
   13ecc:	ldr	r3, [r3]
   13ed0:	mov	r0, r3
   13ed4:	bl	13d28 <error@@Base+0x1d70>
   13ed8:	nop			; (mov r0, r0)
   13edc:	sub	sp, fp, #4
   13ee0:	pop	{fp, pc}
   13ee4:	andeq	r4, r0, r4, lsl #8
   13ee8:	andeq	r4, r0, r4, lsl #8
   13eec:	strdeq	r4, [r0], -r8
   13ef0:	push	{fp, lr}
   13ef4:	add	fp, sp, #4
   13ef8:	sub	sp, sp, #16
   13efc:	str	r0, [fp, #-16]
   13f00:	str	r1, [fp, #-20]	; 0xffffffec
   13f04:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f08:	ldr	r0, [fp, #-16]
   13f0c:	bl	10a30 <utf8proc_encode_char@plt>
   13f10:	str	r0, [fp, #-8]
   13f14:	ldr	r3, [fp, #-8]
   13f18:	cmp	r3, #0
   13f1c:	bgt	13f30 <error@@Base+0x1f78>
   13f20:	ldr	r3, [pc, #28]	; 13f44 <error@@Base+0x1f8c>
   13f24:	add	r3, pc, r3
   13f28:	mov	r0, r3
   13f2c:	bl	11fb8 <error@@Base>
   13f30:	ldr	r3, [fp, #-8]
   13f34:	sxtb	r3, r3
   13f38:	mov	r0, r3
   13f3c:	sub	sp, fp, #4
   13f40:	pop	{fp, pc}
   13f44:	andeq	r4, r0, r0, asr #5
   13f48:	push	{fp, lr}
   13f4c:	add	fp, sp, #4
   13f50:	sub	sp, sp, #16
   13f54:	str	r0, [fp, #-16]
   13f58:	ldr	r0, [fp, #-16]
   13f5c:	bl	10a18 <utf8proc_get_property@plt>
   13f60:	str	r0, [fp, #-8]
   13f64:	ldr	r3, [fp, #-16]
   13f68:	cmp	r3, #32
   13f6c:	bne	13f78 <error@@Base+0x1fc0>
   13f70:	mov	r3, #1
   13f74:	b	13fa4 <error@@Base+0x1fec>
   13f78:	ldr	r3, [fp, #-8]
   13f7c:	ldrsh	r3, [r3]
   13f80:	cmp	r3, #1
   13f84:	blt	13fa0 <error@@Base+0x1fe8>
   13f88:	cmp	r3, #22
   13f8c:	ble	13f98 <error@@Base+0x1fe0>
   13f90:	cmp	r3, #29
   13f94:	bne	13fa0 <error@@Base+0x1fe8>
   13f98:	mov	r3, #1
   13f9c:	b	13fa4 <error@@Base+0x1fec>
   13fa0:	mov	r3, #0
   13fa4:	mov	r0, r3
   13fa8:	sub	sp, fp, #4
   13fac:	pop	{fp, pc}
   13fb0:	push	{fp, lr}
   13fb4:	add	fp, sp, #4
   13fb8:	sub	sp, sp, #8
   13fbc:	str	r0, [fp, #-8]
   13fc0:	ldr	r0, [fp, #-8]
   13fc4:	bl	10ae4 <utf8proc_category@plt>
   13fc8:	mov	r3, r0
   13fcc:	sub	r3, r3, #6
   13fd0:	cmp	r3, #2
   13fd4:	bhi	13fe0 <error@@Base+0x2028>
   13fd8:	mov	r3, #1
   13fdc:	b	13fe4 <error@@Base+0x202c>
   13fe0:	mov	r3, #0
   13fe4:	mov	r0, r3
   13fe8:	sub	sp, fp, #4
   13fec:	pop	{fp, pc}
   13ff0:	push	{fp, lr}
   13ff4:	add	fp, sp, #4
   13ff8:	sub	sp, sp, #24
   13ffc:	str	r1, [fp, #-20]	; 0xffffffec
   14000:	str	r2, [fp, #-24]	; 0xffffffe8
   14004:	mov	r2, r3
   14008:	mov	r3, r0
   1400c:	strb	r3, [fp, #-16]
   14010:	mov	r3, r2
   14014:	strb	r3, [fp, #-28]	; 0xffffffe4
   14018:	mov	r3, #0
   1401c:	strh	r3, [fp, #-6]
   14020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14024:	str	r3, [fp, #-12]
   14028:	ldrb	r3, [fp, #-16]
   1402c:	cmp	r3, #0
   14030:	beq	14058 <error@@Base+0x20a0>
   14034:	ldr	r1, [fp, #-12]
   14038:	mov	r0, #94	; 0x5e
   1403c:	bl	13ef0 <error@@Base+0x1f38>
   14040:	mov	r3, r0
   14044:	uxth	r2, r3
   14048:	ldrh	r3, [fp, #-6]
   1404c:	add	r3, r2, r3
   14050:	uxth	r3, r3
   14054:	strh	r3, [fp, #-6]
   14058:	ldr	r3, [fp, #-20]	; 0xffffffec
   1405c:	cmp	r3, #10
   14060:	bne	140a0 <error@@Base+0x20e8>
   14064:	ldrsh	r3, [fp, #-6]
   14068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1406c:	add	r2, r2, r3
   14070:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   14074:	cmp	r3, #0
   14078:	beq	14088 <error@@Base+0x20d0>
   1407c:	ldr	r3, [pc, #296]	; 141ac <error@@Base+0x21f4>
   14080:	add	r3, pc, r3
   14084:	b	14090 <error@@Base+0x20d8>
   14088:	ldr	r3, [pc, #288]	; 141b0 <error@@Base+0x21f8>
   1408c:	add	r3, pc, r3
   14090:	mov	r1, r3
   14094:	mov	r0, r2
   14098:	bl	10b38 <sprintf@plt>
   1409c:	b	141a0 <error@@Base+0x21e8>
   140a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   140a4:	bl	13f48 <error@@Base+0x1f90>
   140a8:	mov	r3, r0
   140ac:	cmp	r3, #0
   140b0:	beq	14150 <error@@Base+0x2198>
   140b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   140b8:	bl	13fb0 <error@@Base+0x1ff8>
   140bc:	mov	r3, r0
   140c0:	cmp	r3, #0
   140c4:	beq	140f8 <error@@Base+0x2140>
   140c8:	ldrsh	r3, [fp, #-6]
   140cc:	ldr	r2, [fp, #-12]
   140d0:	add	r3, r2, r3
   140d4:	mov	r1, r3
   140d8:	ldr	r0, [pc, #212]	; 141b4 <error@@Base+0x21fc>
   140dc:	bl	13ef0 <error@@Base+0x1f38>
   140e0:	mov	r3, r0
   140e4:	uxth	r2, r3
   140e8:	ldrh	r3, [fp, #-6]
   140ec:	add	r3, r2, r3
   140f0:	uxth	r3, r3
   140f4:	strh	r3, [fp, #-6]
   140f8:	ldrsh	r3, [fp, #-6]
   140fc:	ldr	r2, [fp, #-12]
   14100:	add	r3, r2, r3
   14104:	mov	r1, r3
   14108:	ldr	r0, [fp, #-20]	; 0xffffffec
   1410c:	bl	13ef0 <error@@Base+0x1f38>
   14110:	mov	r3, r0
   14114:	uxth	r2, r3
   14118:	ldrh	r3, [fp, #-6]
   1411c:	add	r3, r2, r3
   14120:	uxth	r3, r3
   14124:	strh	r3, [fp, #-6]
   14128:	ldrsh	r2, [fp, #-6]
   1412c:	uxth	r3, r2
   14130:	add	r3, r3, #1
   14134:	uxth	r3, r3
   14138:	strh	r3, [fp, #-6]
   1413c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14140:	add	r3, r3, r2
   14144:	mov	r2, #0
   14148:	strb	r2, [r3]
   1414c:	b	141a0 <error@@Base+0x21e8>
   14150:	ldr	r3, [fp, #-20]	; 0xffffffec
   14154:	cmp	r3, #255	; 0xff
   14158:	bhi	14180 <error@@Base+0x21c8>
   1415c:	ldrsh	r3, [fp, #-6]
   14160:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14164:	add	r3, r2, r3
   14168:	ldr	r2, [fp, #-20]	; 0xffffffec
   1416c:	ldr	r1, [pc, #68]	; 141b8 <error@@Base+0x2200>
   14170:	add	r1, pc, r1
   14174:	mov	r0, r3
   14178:	bl	10b38 <sprintf@plt>
   1417c:	b	141a0 <error@@Base+0x21e8>
   14180:	ldrsh	r3, [fp, #-6]
   14184:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14188:	add	r3, r2, r3
   1418c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14190:	ldr	r1, [pc, #36]	; 141bc <error@@Base+0x2204>
   14194:	add	r1, pc, r1
   14198:	mov	r0, r3
   1419c:	bl	10b38 <sprintf@plt>
   141a0:	nop			; (mov r0, r0)
   141a4:	sub	sp, fp, #4
   141a8:	pop	{fp, pc}
   141ac:	andeq	r4, r0, ip, ror r1
   141b0:	andeq	r4, r0, r8, ror r1
   141b4:	andeq	r2, r0, ip, asr #11
   141b8:	muleq	r0, r8, r0
   141bc:	andeq	r4, r0, ip, ror r0
   141c0:	push	{fp, lr}
   141c4:	add	fp, sp, #4
   141c8:	sub	sp, sp, #40	; 0x28
   141cc:	str	r0, [fp, #-32]	; 0xffffffe0
   141d0:	str	r1, [fp, #-36]	; 0xffffffdc
   141d4:	str	r2, [fp, #-40]	; 0xffffffd8
   141d8:	ldr	r3, [pc, #220]	; 142bc <error@@Base+0x2304>
   141dc:	add	r3, pc, r3
   141e0:	mov	r1, r3
   141e4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   141e8:	bl	115a4 <__assert_fail@plt+0xa18>
   141ec:	str	r0, [fp, #-12]
   141f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   141f4:	cmp	r3, #0
   141f8:	beq	14250 <error@@Base+0x2298>
   141fc:	ldr	r3, [fp, #-12]
   14200:	mov	r2, #55	; 0x37
   14204:	mov	r1, #1
   14208:	ldr	r0, [pc, #176]	; 142c0 <error@@Base+0x2308>
   1420c:	add	r0, pc, r0
   14210:	bl	10a78 <fwrite@plt>
   14214:	ldr	r3, [fp, #-12]
   14218:	mov	r2, #55	; 0x37
   1421c:	mov	r1, #1
   14220:	ldr	r0, [pc, #156]	; 142c4 <error@@Base+0x230c>
   14224:	add	r0, pc, r0
   14228:	bl	10a78 <fwrite@plt>
   1422c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14230:	ldr	r0, [fp, #-12]
   14234:	blx	r3
   14238:	ldr	r3, [fp, #-12]
   1423c:	mov	r2, #55	; 0x37
   14240:	mov	r1, #1
   14244:	ldr	r0, [pc, #124]	; 142c8 <error@@Base+0x2310>
   14248:	add	r0, pc, r0
   1424c:	bl	10a78 <fwrite@plt>
   14250:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14254:	ldr	r3, [r3]
   14258:	str	r3, [fp, #-8]
   1425c:	b	1429c <error@@Base+0x22e4>
   14260:	ldr	r3, [fp, #-8]
   14264:	ldrb	r3, [r3, #8]
   14268:	mov	r0, r3
   1426c:	ldr	r3, [fp, #-8]
   14270:	ldr	r1, [r3, #12]
   14274:	sub	r2, fp, #24
   14278:	mov	r3, #0
   1427c:	bl	13ff0 <error@@Base+0x2038>
   14280:	sub	r3, fp, #24
   14284:	ldr	r1, [fp, #-12]
   14288:	mov	r0, r3
   1428c:	bl	10b5c <fputs@plt>
   14290:	ldr	r3, [fp, #-8]
   14294:	ldr	r3, [r3, #4]
   14298:	str	r3, [fp, #-8]
   1429c:	ldr	r3, [fp, #-8]
   142a0:	cmp	r3, #0
   142a4:	bne	14260 <error@@Base+0x22a8>
   142a8:	ldr	r0, [fp, #-12]
   142ac:	bl	11678 <__assert_fail@plt+0xaec>
   142b0:	nop			; (mov r0, r0)
   142b4:	sub	sp, fp, #4
   142b8:	pop	{fp, pc}
   142bc:	andeq	r4, r0, ip, lsr r0
   142c0:	andeq	r3, r0, r8, lsl pc
   142c4:	andeq	r3, r0, r8, lsr pc
   142c8:	andeq	r3, r0, r4, lsl pc
   142cc:	push	{fp, lr}
   142d0:	add	fp, sp, #4
   142d4:	sub	sp, sp, #24
   142d8:	str	r0, [fp, #-24]	; 0xffffffe8
   142dc:	str	r1, [fp, #-28]	; 0xffffffe4
   142e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142e4:	str	r3, [fp, #-8]
   142e8:	mov	r3, #0
   142ec:	str	r3, [fp, #-12]
   142f0:	mov	r3, #0
   142f4:	str	r3, [fp, #-16]
   142f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142fc:	str	r3, [fp, #-8]
   14300:	b	14354 <error@@Base+0x239c>
   14304:	sub	r3, fp, #16
   14308:	mov	r2, r3
   1430c:	mvn	r1, #0
   14310:	ldr	r0, [fp, #-8]
   14314:	bl	10a90 <utf8proc_iterate@plt>
   14318:	str	r0, [fp, #-12]
   1431c:	ldr	r3, [fp, #-12]
   14320:	cmp	r3, #0
   14324:	bgt	14330 <error@@Base+0x2378>
   14328:	mov	r3, #0
   1432c:	b	14368 <error@@Base+0x23b0>
   14330:	ldr	r3, [fp, #-16]
   14334:	mov	r2, r3
   14338:	mov	r1, #0
   1433c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14340:	bl	13848 <error@@Base+0x1890>
   14344:	ldr	r3, [fp, #-12]
   14348:	ldr	r2, [fp, #-8]
   1434c:	add	r3, r2, r3
   14350:	str	r3, [fp, #-8]
   14354:	ldr	r3, [fp, #-8]
   14358:	ldrb	r3, [r3]
   1435c:	cmp	r3, #0
   14360:	bne	14304 <error@@Base+0x234c>
   14364:	mov	r3, #1
   14368:	mov	r0, r3
   1436c:	sub	sp, fp, #4
   14370:	pop	{fp, pc}
   14374:	push	{fp}		; (str fp, [sp, #-4]!)
   14378:	add	fp, sp, #0
   1437c:	sub	sp, sp, #12
   14380:	str	r0, [fp, #-8]
   14384:	ldr	r3, [fp, #-8]
   14388:	mov	r2, #0
   1438c:	str	r2, [r3, #4]
   14390:	ldr	r3, [fp, #-8]
   14394:	ldr	r2, [r3, #4]
   14398:	ldr	r3, [fp, #-8]
   1439c:	str	r2, [r3]
   143a0:	ldr	r3, [fp, #-8]
   143a4:	mov	r2, #0
   143a8:	str	r2, [r3, #8]
   143ac:	ldr	r3, [fp, #-8]
   143b0:	mov	r2, #0
   143b4:	str	r2, [r3, #12]
   143b8:	nop			; (mov r0, r0)
   143bc:	add	sp, fp, #0
   143c0:	pop	{fp}		; (ldr fp, [sp], #4)
   143c4:	bx	lr
   143c8:	push	{fp, lr}
   143cc:	add	fp, sp, #4
   143d0:	sub	sp, sp, #8
   143d4:	str	r0, [fp, #-8]
   143d8:	ldr	r3, [fp, #-8]
   143dc:	ldr	r3, [r3, #8]
   143e0:	cmp	r3, #0
   143e4:	beq	14404 <error@@Base+0x244c>
   143e8:	ldr	r3, [fp, #-8]
   143ec:	ldr	r3, [r3, #8]
   143f0:	mov	r0, r3
   143f4:	bl	10a0c <free@plt>
   143f8:	ldr	r3, [fp, #-8]
   143fc:	mov	r2, #0
   14400:	str	r2, [r3, #8]
   14404:	nop			; (mov r0, r0)
   14408:	sub	sp, fp, #4
   1440c:	pop	{fp, pc}
   14410:	push	{fp, lr}
   14414:	add	fp, sp, #4
   14418:	sub	sp, sp, #16
   1441c:	str	r0, [fp, #-8]
   14420:	str	r1, [fp, #-12]
   14424:	str	r2, [fp, #-16]
   14428:	str	r3, [fp, #-20]	; 0xffffffec
   1442c:	ldr	r3, [fp, #-16]
   14430:	ldr	r2, [fp, #-12]
   14434:	str	r2, [r3]
   14438:	ldr	r3, [fp, #-16]
   1443c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14440:	str	r2, [r3, #4]
   14444:	ldr	r3, [fp, #-12]
   14448:	cmp	r3, #0
   1444c:	beq	14460 <error@@Base+0x24a8>
   14450:	ldr	r3, [fp, #-12]
   14454:	ldr	r2, [fp, #-16]
   14458:	str	r2, [r3, #4]
   1445c:	b	1446c <error@@Base+0x24b4>
   14460:	ldr	r3, [fp, #-8]
   14464:	ldr	r2, [fp, #-16]
   14468:	str	r2, [r3]
   1446c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14470:	cmp	r3, #0
   14474:	beq	14488 <error@@Base+0x24d0>
   14478:	ldr	r3, [fp, #-20]	; 0xffffffec
   1447c:	ldr	r2, [fp, #-16]
   14480:	str	r2, [r3]
   14484:	b	14494 <error@@Base+0x24dc>
   14488:	ldr	r3, [fp, #-8]
   1448c:	ldr	r2, [fp, #-16]
   14490:	str	r2, [r3, #4]
   14494:	ldr	r0, [fp, #-8]
   14498:	bl	143c8 <error@@Base+0x2410>
   1449c:	ldr	r3, [fp, #-8]
   144a0:	ldr	r3, [r3, #12]
   144a4:	add	r2, r3, #1
   144a8:	ldr	r3, [fp, #-8]
   144ac:	str	r2, [r3, #12]
   144b0:	nop			; (mov r0, r0)
   144b4:	sub	sp, fp, #4
   144b8:	pop	{fp, pc}
   144bc:	push	{fp, lr}
   144c0:	add	fp, sp, #4
   144c4:	sub	sp, sp, #8
   144c8:	str	r0, [fp, #-8]
   144cc:	str	r1, [fp, #-12]
   144d0:	ldr	r3, [fp, #-8]
   144d4:	ldr	r3, [r3]
   144d8:	ldr	r2, [fp, #-12]
   144dc:	mov	r1, #0
   144e0:	ldr	r0, [fp, #-8]
   144e4:	bl	14410 <error@@Base+0x2458>
   144e8:	nop			; (mov r0, r0)
   144ec:	sub	sp, fp, #4
   144f0:	pop	{fp, pc}
   144f4:	push	{fp, lr}
   144f8:	add	fp, sp, #4
   144fc:	sub	sp, sp, #8
   14500:	str	r0, [fp, #-8]
   14504:	str	r1, [fp, #-12]
   14508:	ldr	r3, [fp, #-8]
   1450c:	ldr	r1, [r3, #4]
   14510:	mov	r3, #0
   14514:	ldr	r2, [fp, #-12]
   14518:	ldr	r0, [fp, #-8]
   1451c:	bl	14410 <error@@Base+0x2458>
   14520:	nop			; (mov r0, r0)
   14524:	sub	sp, fp, #4
   14528:	pop	{fp, pc}
   1452c:	push	{fp, lr}
   14530:	add	fp, sp, #4
   14534:	sub	sp, sp, #16
   14538:	str	r0, [fp, #-8]
   1453c:	str	r1, [fp, #-12]
   14540:	str	r2, [fp, #-16]
   14544:	ldr	r3, [fp, #-16]
   14548:	ldr	r1, [r3]
   1454c:	ldr	r3, [fp, #-16]
   14550:	ldr	r2, [fp, #-12]
   14554:	ldr	r0, [fp, #-8]
   14558:	bl	14410 <error@@Base+0x2458>
   1455c:	nop			; (mov r0, r0)
   14560:	sub	sp, fp, #4
   14564:	pop	{fp, pc}
   14568:	push	{fp, lr}
   1456c:	add	fp, sp, #4
   14570:	sub	sp, sp, #16
   14574:	str	r0, [fp, #-8]
   14578:	str	r1, [fp, #-12]
   1457c:	str	r2, [fp, #-16]
   14580:	ldr	r3, [fp, #-12]
   14584:	ldr	r3, [r3, #4]
   14588:	ldr	r2, [fp, #-16]
   1458c:	ldr	r1, [fp, #-12]
   14590:	ldr	r0, [fp, #-8]
   14594:	bl	14410 <error@@Base+0x2458>
   14598:	nop			; (mov r0, r0)
   1459c:	sub	sp, fp, #4
   145a0:	pop	{fp, pc}
   145a4:	push	{fp, lr}
   145a8:	add	fp, sp, #4
   145ac:	sub	sp, sp, #8
   145b0:	str	r0, [fp, #-8]
   145b4:	str	r1, [fp, #-12]
   145b8:	ldr	r3, [fp, #-12]
   145bc:	ldr	r3, [r3]
   145c0:	cmp	r3, #0
   145c4:	beq	145e0 <error@@Base+0x2628>
   145c8:	ldr	r3, [fp, #-12]
   145cc:	ldr	r3, [r3]
   145d0:	ldr	r2, [fp, #-12]
   145d4:	ldr	r2, [r2, #4]
   145d8:	str	r2, [r3, #4]
   145dc:	b	145f0 <error@@Base+0x2638>
   145e0:	ldr	r3, [fp, #-12]
   145e4:	ldr	r2, [r3, #4]
   145e8:	ldr	r3, [fp, #-8]
   145ec:	str	r2, [r3]
   145f0:	ldr	r3, [fp, #-12]
   145f4:	ldr	r3, [r3, #4]
   145f8:	cmp	r3, #0
   145fc:	beq	14618 <error@@Base+0x2660>
   14600:	ldr	r3, [fp, #-12]
   14604:	ldr	r3, [r3, #4]
   14608:	ldr	r2, [fp, #-12]
   1460c:	ldr	r2, [r2]
   14610:	str	r2, [r3]
   14614:	b	14628 <error@@Base+0x2670>
   14618:	ldr	r3, [fp, #-12]
   1461c:	ldr	r2, [r3]
   14620:	ldr	r3, [fp, #-8]
   14624:	str	r2, [r3, #4]
   14628:	ldr	r3, [fp, #-12]
   1462c:	mov	r2, #0
   14630:	str	r2, [r3, #4]
   14634:	ldr	r3, [fp, #-12]
   14638:	ldr	r2, [r3, #4]
   1463c:	ldr	r3, [fp, #-12]
   14640:	str	r2, [r3]
   14644:	ldr	r0, [fp, #-8]
   14648:	bl	143c8 <error@@Base+0x2410>
   1464c:	ldr	r3, [fp, #-8]
   14650:	ldr	r3, [r3, #12]
   14654:	sub	r2, r3, #1
   14658:	ldr	r3, [fp, #-8]
   1465c:	str	r2, [r3, #12]
   14660:	nop			; (mov r0, r0)
   14664:	sub	sp, fp, #4
   14668:	pop	{fp, pc}
   1466c:	push	{fp, lr}
   14670:	add	fp, sp, #4
   14674:	sub	sp, sp, #16
   14678:	str	r0, [fp, #-16]
   1467c:	mov	r3, #0
   14680:	str	r3, [fp, #-12]
   14684:	ldr	r3, [fp, #-16]
   14688:	ldr	r3, [r3, #8]
   1468c:	cmp	r3, #0
   14690:	bne	14714 <error@@Base+0x275c>
   14694:	ldr	r3, [fp, #-16]
   14698:	ldr	r3, [r3, #12]
   1469c:	cmp	r3, #0
   146a0:	beq	14714 <error@@Base+0x275c>
   146a4:	ldr	r3, [fp, #-16]
   146a8:	ldr	r3, [r3, #12]
   146ac:	mov	r1, #4
   146b0:	mov	r0, r3
   146b4:	bl	11464 <__assert_fail@plt+0x8d8>
   146b8:	mov	r2, r0
   146bc:	ldr	r3, [fp, #-16]
   146c0:	str	r2, [r3, #8]
   146c4:	ldr	r3, [fp, #-16]
   146c8:	ldr	r3, [r3]
   146cc:	str	r3, [fp, #-8]
   146d0:	b	14704 <error@@Base+0x274c>
   146d4:	ldr	r3, [fp, #-16]
   146d8:	ldr	r2, [r3, #8]
   146dc:	ldr	r3, [fp, #-12]
   146e0:	add	r1, r3, #1
   146e4:	str	r1, [fp, #-12]
   146e8:	lsl	r3, r3, #2
   146ec:	add	r3, r2, r3
   146f0:	ldr	r2, [fp, #-8]
   146f4:	str	r2, [r3]
   146f8:	ldr	r3, [fp, #-8]
   146fc:	ldr	r3, [r3, #4]
   14700:	str	r3, [fp, #-8]
   14704:	ldr	r3, [fp, #-8]
   14708:	cmp	r3, #0
   1470c:	bne	146d4 <error@@Base+0x271c>
   14710:	b	14718 <error@@Base+0x2760>
   14714:	nop			; (mov r0, r0)
   14718:	sub	sp, fp, #4
   1471c:	pop	{fp, pc}
   14720:	push	{fp, lr}
   14724:	add	fp, sp, #4
   14728:	sub	sp, sp, #16
   1472c:	str	r0, [fp, #-16]
   14730:	str	r1, [fp, #-20]	; 0xffffffec
   14734:	b	1475c <error@@Base+0x27a4>
   14738:	ldr	r3, [fp, #-16]
   1473c:	ldr	r3, [r3]
   14740:	str	r3, [fp, #-8]
   14744:	ldr	r1, [fp, #-8]
   14748:	ldr	r0, [fp, #-16]
   1474c:	bl	145a4 <error@@Base+0x25ec>
   14750:	ldr	r3, [fp, #-20]	; 0xffffffec
   14754:	ldr	r0, [fp, #-8]
   14758:	blx	r3
   1475c:	ldr	r3, [fp, #-16]
   14760:	ldr	r3, [r3]
   14764:	cmp	r3, #0
   14768:	bne	14738 <error@@Base+0x2780>
   1476c:	nop			; (mov r0, r0)
   14770:	sub	sp, fp, #4
   14774:	pop	{fp, pc}
   14778:	push	{fp, lr}
   1477c:	add	fp, sp, #4
   14780:	sub	sp, sp, #24
   14784:	str	r0, [fp, #-24]	; 0xffffffe8
   14788:	str	r1, [fp, #-28]	; 0xffffffe4
   1478c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14790:	str	r3, [fp, #-8]
   14794:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14798:	str	r3, [fp, #-12]
   1479c:	ldr	r3, [pc, #516]	; 149a8 <error@@Base+0x29f0>
   147a0:	add	r3, pc, r3
   147a4:	ldr	r2, [r3]
   147a8:	ldr	r3, [fp, #-8]
   147ac:	lsl	r3, r3, #2
   147b0:	add	r3, r2, r3
   147b4:	ldr	r3, [r3]
   147b8:	str	r3, [fp, #-16]
   147bc:	b	1491c <error@@Base+0x2964>
   147c0:	ldr	r3, [fp, #-12]
   147c4:	sub	r3, r3, #1
   147c8:	str	r3, [fp, #-12]
   147cc:	ldr	r2, [fp, #-8]
   147d0:	ldr	r3, [fp, #-12]
   147d4:	cmp	r2, r3
   147d8:	bge	1481c <error@@Base+0x2864>
   147dc:	ldr	r3, [pc, #456]	; 149ac <error@@Base+0x29f4>
   147e0:	add	r3, pc, r3
   147e4:	ldr	r3, [r3]
   147e8:	ldr	r2, [pc, #448]	; 149b0 <error@@Base+0x29f8>
   147ec:	add	r2, pc, r2
   147f0:	ldr	r1, [r2]
   147f4:	ldr	r2, [fp, #-12]
   147f8:	lsl	r2, r2, #2
   147fc:	add	r2, r1, r2
   14800:	ldr	r2, [r2]
   14804:	mov	r1, r2
   14808:	ldr	r0, [fp, #-16]
   1480c:	blx	r3
   14810:	mov	r3, r0
   14814:	cmp	r3, #0
   14818:	blt	147c0 <error@@Base+0x2808>
   1481c:	ldr	r2, [fp, #-8]
   14820:	ldr	r3, [fp, #-12]
   14824:	cmp	r2, r3
   14828:	beq	1487c <error@@Base+0x28c4>
   1482c:	ldr	r3, [pc, #384]	; 149b4 <error@@Base+0x29fc>
   14830:	add	r3, pc, r3
   14834:	ldr	r2, [r3]
   14838:	ldr	r3, [fp, #-8]
   1483c:	add	r1, r3, #1
   14840:	str	r1, [fp, #-8]
   14844:	lsl	r3, r3, #2
   14848:	add	r3, r2, r3
   1484c:	ldr	r2, [pc, #356]	; 149b8 <error@@Base+0x2a00>
   14850:	add	r2, pc, r2
   14854:	ldr	r1, [r2]
   14858:	ldr	r2, [fp, #-12]
   1485c:	lsl	r2, r2, #2
   14860:	add	r2, r1, r2
   14864:	ldr	r2, [r2]
   14868:	str	r2, [r3]
   1486c:	b	1487c <error@@Base+0x28c4>
   14870:	ldr	r3, [fp, #-8]
   14874:	add	r3, r3, #1
   14878:	str	r3, [fp, #-8]
   1487c:	ldr	r2, [fp, #-8]
   14880:	ldr	r3, [fp, #-12]
   14884:	cmp	r2, r3
   14888:	bge	148cc <error@@Base+0x2914>
   1488c:	ldr	r3, [pc, #296]	; 149bc <error@@Base+0x2a04>
   14890:	add	r3, pc, r3
   14894:	ldr	r3, [r3]
   14898:	ldr	r2, [pc, #288]	; 149c0 <error@@Base+0x2a08>
   1489c:	add	r2, pc, r2
   148a0:	ldr	r1, [r2]
   148a4:	ldr	r2, [fp, #-8]
   148a8:	lsl	r2, r2, #2
   148ac:	add	r2, r1, r2
   148b0:	ldr	r2, [r2]
   148b4:	mov	r1, r2
   148b8:	ldr	r0, [fp, #-16]
   148bc:	blx	r3
   148c0:	mov	r3, r0
   148c4:	cmp	r3, #0
   148c8:	bgt	14870 <error@@Base+0x28b8>
   148cc:	ldr	r2, [fp, #-8]
   148d0:	ldr	r3, [fp, #-12]
   148d4:	cmp	r2, r3
   148d8:	beq	1491c <error@@Base+0x2964>
   148dc:	ldr	r3, [pc, #224]	; 149c4 <error@@Base+0x2a0c>
   148e0:	add	r3, pc, r3
   148e4:	ldr	r2, [r3]
   148e8:	ldr	r3, [fp, #-12]
   148ec:	sub	r1, r3, #1
   148f0:	str	r1, [fp, #-12]
   148f4:	lsl	r3, r3, #2
   148f8:	add	r3, r2, r3
   148fc:	ldr	r2, [pc, #196]	; 149c8 <error@@Base+0x2a10>
   14900:	add	r2, pc, r2
   14904:	ldr	r1, [r2]
   14908:	ldr	r2, [fp, #-8]
   1490c:	lsl	r2, r2, #2
   14910:	add	r2, r1, r2
   14914:	ldr	r2, [r2]
   14918:	str	r2, [r3]
   1491c:	ldr	r2, [fp, #-8]
   14920:	ldr	r3, [fp, #-12]
   14924:	cmp	r2, r3
   14928:	blt	147cc <error@@Base+0x2814>
   1492c:	ldr	r3, [pc, #152]	; 149cc <error@@Base+0x2a14>
   14930:	add	r3, pc, r3
   14934:	ldr	r2, [r3]
   14938:	ldr	r3, [fp, #-12]
   1493c:	lsl	r3, r3, #2
   14940:	add	r3, r2, r3
   14944:	ldr	r2, [fp, #-16]
   14948:	str	r2, [r3]
   1494c:	ldr	r3, [fp, #-12]
   14950:	sub	r3, r3, #1
   14954:	str	r3, [fp, #-12]
   14958:	ldr	r2, [fp, #-12]
   1495c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14960:	cmp	r2, r3
   14964:	ble	14974 <error@@Base+0x29bc>
   14968:	ldr	r1, [fp, #-12]
   1496c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14970:	bl	14778 <error@@Base+0x27c0>
   14974:	ldr	r3, [fp, #-8]
   14978:	add	r3, r3, #1
   1497c:	str	r3, [fp, #-8]
   14980:	ldr	r2, [fp, #-8]
   14984:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14988:	cmp	r2, r3
   1498c:	bge	1499c <error@@Base+0x29e4>
   14990:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14994:	ldr	r0, [fp, #-8]
   14998:	bl	14778 <error@@Base+0x27c0>
   1499c:	nop			; (mov r0, r0)
   149a0:	sub	sp, fp, #4
   149a4:	pop	{fp, pc}
   149a8:	andeq	r4, r1, r8, asr #19
   149ac:	andeq	r4, r1, ip, lsl #19
   149b0:	andeq	r4, r1, ip, ror r9
   149b4:	andeq	r4, r1, r8, lsr r9
   149b8:	andeq	r4, r1, r8, lsl r9
   149bc:	ldrdeq	r4, [r1], -ip
   149c0:	andeq	r4, r1, ip, asr #17
   149c4:	andeq	r4, r1, r8, lsl #17
   149c8:	andeq	r4, r1, r8, ror #16
   149cc:	andeq	r4, r1, r8, lsr r8
   149d0:	push	{fp, lr}
   149d4:	add	fp, sp, #4
   149d8:	sub	sp, sp, #16
   149dc:	str	r0, [fp, #-8]
   149e0:	str	r1, [fp, #-12]
   149e4:	str	r2, [fp, #-16]
   149e8:	ldr	r3, [fp, #-8]
   149ec:	cmp	r3, #1
   149f0:	ble	14a2c <error@@Base+0x2a74>
   149f4:	ldr	r3, [pc, #60]	; 14a38 <error@@Base+0x2a80>
   149f8:	add	r3, pc, r3
   149fc:	ldr	r2, [fp, #-12]
   14a00:	str	r2, [r3]
   14a04:	ldr	r3, [pc, #48]	; 14a3c <error@@Base+0x2a84>
   14a08:	add	r3, pc, r3
   14a0c:	ldr	r2, [fp, #-16]
   14a10:	str	r2, [r3]
   14a14:	ldr	r3, [fp, #-8]
   14a18:	sub	r3, r3, #1
   14a1c:	mov	r1, r3
   14a20:	mov	r0, #0
   14a24:	bl	14778 <error@@Base+0x27c0>
   14a28:	b	14a30 <error@@Base+0x2a78>
   14a2c:	nop			; (mov r0, r0)
   14a30:	sub	sp, fp, #4
   14a34:	pop	{fp, pc}
   14a38:	andeq	r4, r1, r0, ror r7
   14a3c:	andeq	r4, r1, r4, ror #14
   14a40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a44:	mov	r7, r0
   14a48:	ldr	r6, [pc, #72]	; 14a98 <error@@Base+0x2ae0>
   14a4c:	ldr	r5, [pc, #72]	; 14a9c <error@@Base+0x2ae4>
   14a50:	add	r6, pc, r6
   14a54:	add	r5, pc, r5
   14a58:	sub	r6, r6, r5
   14a5c:	mov	r8, r1
   14a60:	mov	r9, r2
   14a64:	bl	109bc <calloc@plt-0x20>
   14a68:	asrs	r6, r6, #2
   14a6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a70:	mov	r4, #0
   14a74:	add	r4, r4, #1
   14a78:	ldr	r3, [r5], #4
   14a7c:	mov	r2, r9
   14a80:	mov	r1, r8
   14a84:	mov	r0, r7
   14a88:	blx	r3
   14a8c:	cmp	r6, r4
   14a90:	bne	14a74 <error@@Base+0x2abc>
   14a94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a98:	andeq	r4, r1, r8, lsr #9
   14a9c:	andeq	r4, r1, r0, lsr #9
   14aa0:	bx	lr
   14aa4:	mov	r2, r1
   14aa8:	mov	r1, r0
   14aac:	mov	r0, #3
   14ab0:	b	10a6c <__xstat@plt>

Disassembly of section .fini:

00014ab4 <.fini>:
   14ab4:	push	{r3, lr}
   14ab8:	pop	{r3, pc}
