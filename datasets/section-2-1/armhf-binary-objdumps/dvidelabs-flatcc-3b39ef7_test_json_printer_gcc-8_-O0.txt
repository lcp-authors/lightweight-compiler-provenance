
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_printer:     file format elf32-littlearm


Disassembly of section .init:

000123c4 <.init>:
   123c4:	push	{r3, lr}
   123c8:	bl	1254c <_start@@Base+0x3c>
   123cc:	pop	{r3, pc}

Disassembly of section .plt:

000123d0 <raise@plt-0x14>:
   123d0:	push	{lr}		; (str lr, [sp, #-4]!)
   123d4:	ldr	lr, [pc, #4]	; 123e0 <raise@plt-0x4>
   123d8:	add	lr, pc, lr
   123dc:	ldr	pc, [lr, #8]!
   123e0:	andeq	r3, r2, r0, lsr #24

000123e4 <raise@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #143360	; 0x23000
   123ec:	ldr	pc, [ip, #3104]!	; 0xc20

000123f0 <strcmp@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #143360	; 0x23000
   123f8:	ldr	pc, [ip, #3096]!	; 0xc18

000123fc <fopen@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #143360	; 0x23000
   12404:	ldr	pc, [ip, #3088]!	; 0xc10

00012408 <memmove@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #143360	; 0x23000
   12410:	ldr	pc, [ip, #3080]!	; 0xc08

00012414 <free@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #143360	; 0x23000
   1241c:	ldr	pc, [ip, #3072]!	; 0xc00

00012420 <memcpy@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #143360	; 0x23000
   12428:	ldr	pc, [ip, #3064]!	; 0xbf8

0001242c <ftell@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #143360	; 0x23000
   12434:	ldr	pc, [ip, #3056]!	; 0xbf0

00012438 <memcmp@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #143360	; 0x23000
   12440:	ldr	pc, [ip, #3048]!	; 0xbe8

00012444 <rewind@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #143360	; 0x23000
   1244c:	ldr	pc, [ip, #3040]!	; 0xbe0

00012450 <realloc@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #143360	; 0x23000
   12458:	ldr	pc, [ip, #3032]!	; 0xbd8

0001245c <fwrite@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #143360	; 0x23000
   12464:	ldr	pc, [ip, #3024]!	; 0xbd0

00012468 <fread@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #143360	; 0x23000
   12470:	ldr	pc, [ip, #3016]!	; 0xbc8

00012474 <puts@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #143360	; 0x23000
   1247c:	ldr	pc, [ip, #3008]!	; 0xbc0

00012480 <malloc@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #143360	; 0x23000
   12488:	ldr	pc, [ip, #3000]!	; 0xbb8

0001248c <__libc_start_main@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #143360	; 0x23000
   12494:	ldr	pc, [ip, #2992]!	; 0xbb0

00012498 <__gmon_start__@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #143360	; 0x23000
   124a0:	ldr	pc, [ip, #2984]!	; 0xba8

000124a4 <exit@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #143360	; 0x23000
   124ac:	ldr	pc, [ip, #2976]!	; 0xba0

000124b0 <fprintf@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #143360	; 0x23000
   124b8:	ldr	pc, [ip, #2968]!	; 0xb98

000124bc <memset@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #143360	; 0x23000
   124c4:	ldr	pc, [ip, #2960]!	; 0xb90

000124c8 <strncpy@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #143360	; 0x23000
   124d0:	ldr	pc, [ip, #2952]!	; 0xb88

000124d4 <fclose@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #143360	; 0x23000
   124dc:	ldr	pc, [ip, #2944]!	; 0xb80

000124e0 <sprintf@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #143360	; 0x23000
   124e8:	ldr	pc, [ip, #2936]!	; 0xb78

000124ec <fseek@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #143360	; 0x23000
   124f4:	ldr	pc, [ip, #2928]!	; 0xb70

000124f8 <abort@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #143360	; 0x23000
   12500:	ldr	pc, [ip, #2920]!	; 0xb68

00012504 <__assert_fail@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #143360	; 0x23000
   1250c:	ldr	pc, [ip, #2912]!	; 0xb60

Disassembly of section .text:

00012510 <_start@@Base>:
   12510:	mov	fp, #0
   12514:	mov	lr, #0
   12518:	pop	{r1}		; (ldr r1, [sp], #4)
   1251c:	mov	r2, sp
   12520:	push	{r2}		; (str r2, [sp, #-4]!)
   12524:	push	{r0}		; (str r0, [sp, #-4]!)
   12528:	ldr	ip, [pc, #16]	; 12540 <_start@@Base+0x30>
   1252c:	push	{ip}		; (str ip, [sp, #-4]!)
   12530:	ldr	r0, [pc, #12]	; 12544 <_start@@Base+0x34>
   12534:	ldr	r3, [pc, #12]	; 12548 <_start@@Base+0x38>
   12538:	bl	1248c <__libc_start_main@plt>
   1253c:	bl	124f8 <abort@plt>
   12540:	andeq	r3, r2, r0, lsr #25
   12544:	andeq	r4, r1, ip, lsl pc
   12548:	andeq	r3, r2, r0, asr #24
   1254c:	ldr	r3, [pc, #20]	; 12568 <_start@@Base+0x58>
   12550:	ldr	r2, [pc, #20]	; 1256c <_start@@Base+0x5c>
   12554:	add	r3, pc, r3
   12558:	ldr	r2, [r3, r2]
   1255c:	cmp	r2, #0
   12560:	bxeq	lr
   12564:	b	12498 <__gmon_start__@plt>
   12568:	andeq	r3, r2, r4, lsr #21
   1256c:	andeq	r0, r0, r8, ror r0
   12570:	ldr	r0, [pc, #24]	; 12590 <_start@@Base+0x80>
   12574:	ldr	r3, [pc, #24]	; 12594 <_start@@Base+0x84>
   12578:	cmp	r3, r0
   1257c:	bxeq	lr
   12580:	ldr	r3, [pc, #16]	; 12598 <_start@@Base+0x88>
   12584:	cmp	r3, #0
   12588:	bxeq	lr
   1258c:	bx	r3
   12590:	muleq	r3, r8, r0
   12594:	muleq	r3, r8, r0
   12598:	andeq	r0, r0, r0
   1259c:	ldr	r0, [pc, #36]	; 125c8 <_start@@Base+0xb8>
   125a0:	ldr	r1, [pc, #36]	; 125cc <_start@@Base+0xbc>
   125a4:	sub	r1, r1, r0
   125a8:	asr	r1, r1, #2
   125ac:	add	r1, r1, r1, lsr #31
   125b0:	asrs	r1, r1, #1
   125b4:	bxeq	lr
   125b8:	ldr	r3, [pc, #16]	; 125d0 <_start@@Base+0xc0>
   125bc:	cmp	r3, #0
   125c0:	bxeq	lr
   125c4:	bx	r3
   125c8:	muleq	r3, r8, r0
   125cc:	muleq	r3, r8, r0
   125d0:	andeq	r0, r0, r0
   125d4:	push	{r4, lr}
   125d8:	ldr	r4, [pc, #24]	; 125f8 <_start@@Base+0xe8>
   125dc:	ldrb	r3, [r4]
   125e0:	cmp	r3, #0
   125e4:	popne	{r4, pc}
   125e8:	bl	12570 <_start@@Base+0x60>
   125ec:	mov	r3, #1
   125f0:	strb	r3, [r4]
   125f4:	pop	{r4, pc}
   125f8:	muleq	r3, r8, r0
   125fc:	b	1259c <_start@@Base+0x8c>
   12600:	push	{fp}		; (str fp, [sp, #-4]!)
   12604:	add	fp, sp, #0
   12608:	sub	sp, sp, #12
   1260c:	str	r0, [fp, #-8]
   12610:	ldr	r3, [fp, #-8]
   12614:	ldr	r3, [r3, #36]	; 0x24
   12618:	mov	r0, r3
   1261c:	add	sp, fp, #0
   12620:	pop	{fp}		; (ldr fp, [sp], #4)
   12624:	bx	lr
   12628:	push	{fp}		; (str fp, [sp, #-4]!)
   1262c:	add	fp, sp, #0
   12630:	sub	sp, sp, #12
   12634:	str	r0, [fp, #-8]
   12638:	str	r1, [fp, #-12]
   1263c:	ldr	r3, [fp, #-12]
   12640:	cmp	r3, #0
   12644:	movne	r3, #1
   12648:	moveq	r3, #0
   1264c:	uxtb	r3, r3
   12650:	mov	r2, r3
   12654:	ldr	r3, [fp, #-8]
   12658:	strb	r2, [r3, #26]
   1265c:	nop	{0}
   12660:	add	sp, fp, #0
   12664:	pop	{fp}		; (ldr fp, [sp], #4)
   12668:	bx	lr
   1266c:	push	{fp}		; (str fp, [sp, #-4]!)
   12670:	add	fp, sp, #0
   12674:	sub	sp, sp, #12
   12678:	str	r0, [fp, #-8]
   1267c:	str	r1, [fp, #-12]
   12680:	ldr	r3, [fp, #-12]
   12684:	cmp	r3, #0
   12688:	movne	r3, #1
   1268c:	moveq	r3, #0
   12690:	uxtb	r3, r3
   12694:	mov	r2, r3
   12698:	ldr	r3, [fp, #-8]
   1269c:	strb	r2, [r3, #27]
   126a0:	nop	{0}
   126a4:	add	sp, fp, #0
   126a8:	pop	{fp}		; (ldr fp, [sp], #4)
   126ac:	bx	lr
   126b0:	push	{fp}		; (str fp, [sp, #-4]!)
   126b4:	add	fp, sp, #0
   126b8:	sub	sp, sp, #12
   126bc:	str	r0, [fp, #-8]
   126c0:	mov	r3, r1
   126c4:	strb	r3, [fp, #-9]
   126c8:	ldr	r3, [fp, #-8]
   126cc:	ldrb	r2, [fp, #-9]
   126d0:	strb	r2, [r3, #25]
   126d4:	nop	{0}
   126d8:	add	sp, fp, #0
   126dc:	pop	{fp}		; (ldr fp, [sp], #4)
   126e0:	bx	lr
   126e4:	str	fp, [sp, #-8]!
   126e8:	str	lr, [sp, #4]
   126ec:	add	fp, sp, #4
   126f0:	sub	sp, sp, #8
   126f4:	str	r0, [fp, #-8]
   126f8:	mov	r1, #2
   126fc:	ldr	r0, [fp, #-8]
   12700:	bl	126b0 <_start@@Base+0x1a0>
   12704:	mov	r1, #1
   12708:	ldr	r0, [fp, #-8]
   1270c:	bl	12628 <_start@@Base+0x118>
   12710:	mov	r1, #0
   12714:	ldr	r0, [fp, #-8]
   12718:	bl	1266c <_start@@Base+0x15c>
   1271c:	nop	{0}
   12720:	sub	sp, fp, #4
   12724:	ldr	fp, [sp]
   12728:	add	sp, sp, #4
   1272c:	pop	{pc}		; (ldr pc, [sp], #4)
   12730:	push	{fp}		; (str fp, [sp, #-4]!)
   12734:	add	fp, sp, #0
   12738:	sub	sp, sp, #12
   1273c:	str	r0, [fp, #-8]
   12740:	ldr	r3, [fp, #-8]
   12744:	ldr	r3, [r3, #12]
   12748:	ldr	r2, [fp, #-8]
   1274c:	ldr	r1, [r2, #20]
   12750:	ldr	r2, [fp, #-8]
   12754:	ldr	r2, [r2]
   12758:	sub	r2, r1, r2
   1275c:	add	r3, r3, r2
   12760:	mov	r0, r3
   12764:	add	sp, fp, #0
   12768:	pop	{fp}		; (ldr fp, [sp], #4)
   1276c:	bx	lr
   12770:	str	fp, [sp, #-8]!
   12774:	str	lr, [sp, #4]
   12778:	add	fp, sp, #4
   1277c:	sub	sp, sp, #8
   12780:	str	r0, [fp, #-8]
   12784:	ldr	r3, [fp, #-8]
   12788:	ldr	r3, [r3, #44]	; 0x2c
   1278c:	mov	r1, #1
   12790:	ldr	r0, [fp, #-8]
   12794:	blx	r3
   12798:	ldr	r0, [fp, #-8]
   1279c:	bl	12730 <_start@@Base+0x220>
   127a0:	mov	r3, r0
   127a4:	mov	r0, r3
   127a8:	sub	sp, fp, #4
   127ac:	ldr	fp, [sp]
   127b0:	add	sp, sp, #4
   127b4:	pop	{pc}		; (ldr pc, [sp], #4)
   127b8:	str	fp, [sp, #-8]!
   127bc:	str	lr, [sp, #4]
   127c0:	add	fp, sp, #4
   127c4:	sub	sp, sp, #16
   127c8:	str	r0, [fp, #-8]
   127cc:	strd	r2, [fp, #-20]	; 0xffffffec
   127d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   127d4:	orrs	r3, r2, r3
   127d8:	beq	127f0 <_start@@Base+0x2e0>
   127dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   127e0:	cmp	r3, #0
   127e4:	cmpeq	r2, #17
   127e8:	beq	1280c <_start@@Base+0x2fc>
   127ec:	b	12828 <_start@@Base+0x318>
   127f0:	mov	r2, #10
   127f4:	ldr	r3, [pc, #80]	; 1284c <_start@@Base+0x33c>
   127f8:	add	r3, pc, r3
   127fc:	mov	r1, r3
   12800:	ldr	r0, [fp, #-8]
   12804:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12808:	b	12838 <_start@@Base+0x328>
   1280c:	mov	r2, #3
   12810:	ldr	r3, [pc, #56]	; 12850 <_start@@Base+0x340>
   12814:	add	r3, pc, r3
   12818:	mov	r1, r3
   1281c:	ldr	r0, [fp, #-8]
   12820:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12824:	b	12838 <_start@@Base+0x328>
   12828:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1282c:	ldr	r0, [fp, #-8]
   12830:	bl	1b214 <flatcc_json_printer_int64@@Base>
   12834:	nop	{0}
   12838:	nop	{0}
   1283c:	sub	sp, fp, #4
   12840:	ldr	fp, [sp]
   12844:	add	sp, sp, #4
   12848:	pop	{pc}		; (ldr pc, [sp], #4)
   1284c:			; <UNDEFINED> instruction: 0x000114b8
   12850:	andeq	r1, r1, r8, lsr #9
   12854:	push	{fp}		; (str fp, [sp, #-4]!)
   12858:	add	fp, sp, #0
   1285c:	sub	sp, sp, #12
   12860:	str	r0, [fp, #-8]
   12864:	str	r1, [fp, #-12]
   12868:	nop	{0}
   1286c:	add	sp, fp, #0
   12870:	pop	{fp}		; (ldr fp, [sp], #4)
   12874:	bx	lr
   12878:	str	fp, [sp, #-8]!
   1287c:	str	lr, [sp, #4]
   12880:	add	fp, sp, #4
   12884:	sub	sp, sp, #8
   12888:	str	r0, [fp, #-8]
   1288c:	str	r1, [fp, #-12]
   12890:	ldr	r3, [fp, #-12]
   12894:	cmn	r3, #11
   12898:	beq	128d0 <_start@@Base+0x3c0>
   1289c:	ldr	r3, [fp, #-12]
   128a0:	cmn	r3, #10
   128a4:	beq	128ec <_start@@Base+0x3dc>
   128a8:	ldr	r3, [fp, #-12]
   128ac:	cmn	r3, #12
   128b0:	bne	12908 <_start@@Base+0x3f8>
   128b4:	mov	r2, #4
   128b8:	ldr	r3, [pc, #108]	; 1292c <_start@@Base+0x41c>
   128bc:	add	r3, pc, r3
   128c0:	mov	r1, r3
   128c4:	ldr	r0, [fp, #-8]
   128c8:	bl	1b324 <flatcc_json_printer_enum@@Base>
   128cc:	b	12918 <_start@@Base+0x408>
   128d0:	mov	r2, #4
   128d4:	ldr	r3, [pc, #84]	; 12930 <_start@@Base+0x420>
   128d8:	add	r3, pc, r3
   128dc:	mov	r1, r3
   128e0:	ldr	r0, [fp, #-8]
   128e4:	bl	1b324 <flatcc_json_printer_enum@@Base>
   128e8:	b	12918 <_start@@Base+0x408>
   128ec:	mov	r2, #4
   128f0:	ldr	r3, [pc, #60]	; 12934 <_start@@Base+0x424>
   128f4:	add	r3, pc, r3
   128f8:	mov	r1, r3
   128fc:	ldr	r0, [fp, #-8]
   12900:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12904:	b	12918 <_start@@Base+0x408>
   12908:	ldr	r1, [fp, #-12]
   1290c:	ldr	r0, [fp, #-8]
   12910:	bl	1b1bc <flatcc_json_printer_int32@@Base>
   12914:	nop	{0}
   12918:	nop	{0}
   1291c:	sub	sp, fp, #4
   12920:	ldr	fp, [sp]
   12924:	add	sp, sp, #4
   12928:	pop	{pc}		; (ldr pc, [sp], #4)
   1292c:	andeq	r1, r1, r4, lsl #8
   12930:	strdeq	r1, [r1], -r0
   12934:	ldrdeq	r1, [r1], -ip
   12938:	str	fp, [sp, #-8]!
   1293c:	str	lr, [sp, #4]
   12940:	add	fp, sp, #4
   12944:	sub	sp, sp, #8
   12948:	str	r0, [fp, #-8]
   1294c:	str	r1, [fp, #-12]
   12950:	ldr	r3, [fp, #-12]
   12954:	cmn	r3, #1
   12958:	beq	129b0 <_start@@Base+0x4a0>
   1295c:	ldr	r3, [fp, #-12]
   12960:	cmp	r3, #0
   12964:	bge	12978 <_start@@Base+0x468>
   12968:	ldr	r3, [fp, #-12]
   1296c:	cmn	r3, #2
   12970:	beq	12994 <_start@@Base+0x484>
   12974:	b	12a04 <_start@@Base+0x4f4>
   12978:	ldr	r3, [fp, #-12]
   1297c:	cmp	r3, #2
   12980:	beq	129cc <_start@@Base+0x4bc>
   12984:	ldr	r3, [fp, #-12]
   12988:	cmp	r3, #42	; 0x2a
   1298c:	beq	129e8 <_start@@Base+0x4d8>
   12990:	b	12a04 <_start@@Base+0x4f4>
   12994:	mov	r2, #6
   12998:	ldr	r3, [pc, #136]	; 12a28 <_start@@Base+0x518>
   1299c:	add	r3, pc, r3
   129a0:	mov	r1, r3
   129a4:	ldr	r0, [fp, #-8]
   129a8:	bl	1b324 <flatcc_json_printer_enum@@Base>
   129ac:	b	12a14 <_start@@Base+0x504>
   129b0:	mov	r2, #7
   129b4:	ldr	r3, [pc, #112]	; 12a2c <_start@@Base+0x51c>
   129b8:	add	r3, pc, r3
   129bc:	mov	r1, r3
   129c0:	ldr	r0, [fp, #-8]
   129c4:	bl	1b324 <flatcc_json_printer_enum@@Base>
   129c8:	b	12a14 <_start@@Base+0x504>
   129cc:	mov	r2, #4
   129d0:	ldr	r3, [pc, #88]	; 12a30 <_start@@Base+0x520>
   129d4:	add	r3, pc, r3
   129d8:	mov	r1, r3
   129dc:	ldr	r0, [fp, #-8]
   129e0:	bl	1b324 <flatcc_json_printer_enum@@Base>
   129e4:	b	12a14 <_start@@Base+0x504>
   129e8:	mov	r2, #4
   129ec:	ldr	r3, [pc, #64]	; 12a34 <_start@@Base+0x524>
   129f0:	add	r3, pc, r3
   129f4:	mov	r1, r3
   129f8:	ldr	r0, [fp, #-8]
   129fc:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12a00:	b	12a14 <_start@@Base+0x504>
   12a04:	ldr	r1, [fp, #-12]
   12a08:	ldr	r0, [fp, #-8]
   12a0c:	bl	1b1bc <flatcc_json_printer_int32@@Base>
   12a10:	nop	{0}
   12a14:	nop	{0}
   12a18:	sub	sp, fp, #4
   12a1c:	ldr	fp, [sp]
   12a20:	add	sp, sp, #4
   12a24:	pop	{pc}		; (ldr pc, [sp], #4)
   12a28:	andeq	r1, r1, ip, lsr r3
   12a2c:	andeq	r1, r1, r8, lsr #6
   12a30:	andeq	r1, r1, r4, lsl r3
   12a34:	andeq	r1, r1, r0, lsl #6
   12a38:	str	fp, [sp, #-8]!
   12a3c:	str	lr, [sp, #4]
   12a40:	add	fp, sp, #4
   12a44:	sub	sp, sp, #8
   12a48:	str	r0, [fp, #-8]
   12a4c:	str	r1, [fp, #-12]
   12a50:	ldr	r3, [fp, #-12]
   12a54:	cmp	r3, #3
   12a58:	beq	12a98 <_start@@Base+0x588>
   12a5c:	ldr	r2, [fp, #-12]
   12a60:	movw	r3, #48815	; 0xbeaf
   12a64:	movt	r3, #32431	; 0x7eaf
   12a68:	cmp	r2, r3
   12a6c:	beq	12ab4 <_start@@Base+0x5a4>
   12a70:	ldr	r3, [fp, #-12]
   12a74:	cmn	r3, #2
   12a78:	bne	12ad0 <_start@@Base+0x5c0>
   12a7c:	mov	r2, #6
   12a80:	ldr	r3, [pc, #108]	; 12af4 <_start@@Base+0x5e4>
   12a84:	add	r3, pc, r3
   12a88:	mov	r1, r3
   12a8c:	ldr	r0, [fp, #-8]
   12a90:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12a94:	b	12ae0 <_start@@Base+0x5d0>
   12a98:	mov	r2, #4
   12a9c:	ldr	r3, [pc, #84]	; 12af8 <_start@@Base+0x5e8>
   12aa0:	add	r3, pc, r3
   12aa4:	mov	r1, r3
   12aa8:	ldr	r0, [fp, #-8]
   12aac:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12ab0:	b	12ae0 <_start@@Base+0x5d0>
   12ab4:	mov	r2, #4
   12ab8:	ldr	r3, [pc, #60]	; 12afc <_start@@Base+0x5ec>
   12abc:	add	r3, pc, r3
   12ac0:	mov	r1, r3
   12ac4:	ldr	r0, [fp, #-8]
   12ac8:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12acc:	b	12ae0 <_start@@Base+0x5d0>
   12ad0:	ldr	r1, [fp, #-12]
   12ad4:	ldr	r0, [fp, #-8]
   12ad8:	bl	1b1bc <flatcc_json_printer_int32@@Base>
   12adc:	nop	{0}
   12ae0:	nop	{0}
   12ae4:	sub	sp, fp, #4
   12ae8:	ldr	fp, [sp]
   12aec:	add	sp, sp, #4
   12af0:	pop	{pc}		; (ldr pc, [sp], #4)
   12af4:	andeq	r1, r1, r4, ror r2
   12af8:	andeq	r1, r1, r0, ror #4
   12afc:	andeq	r1, r1, ip, asr #4
   12b00:	str	fp, [sp, #-8]!
   12b04:	str	lr, [sp, #4]
   12b08:	add	fp, sp, #4
   12b0c:	sub	sp, sp, #24
   12b10:	str	r0, [fp, #-24]	; 0xffffffe8
   12b14:	mov	r3, r1
   12b18:	strb	r3, [fp, #-25]	; 0xffffffe7
   12b1c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   12b20:	strb	r3, [fp, #-9]
   12b24:	ldrb	r2, [fp, #-9]
   12b28:	ldrb	r3, [fp, #-9]
   12b2c:	sub	r3, r3, #1
   12b30:	and	r3, r3, r2
   12b34:	cmp	r3, #0
   12b38:	movne	r3, #1
   12b3c:	moveq	r3, #0
   12b40:	uxtb	r3, r3
   12b44:	str	r3, [fp, #-16]
   12b48:	mov	r3, #0
   12b4c:	str	r3, [fp, #-8]
   12b50:	ldrb	r3, [fp, #-9]
   12b54:	and	r3, r3, #244	; 0xf4
   12b58:	cmp	r3, #0
   12b5c:	bne	12b6c <_start@@Base+0x65c>
   12b60:	ldrb	r3, [fp, #-9]
   12b64:	cmp	r3, #0
   12b68:	bne	12b80 <_start@@Base+0x670>
   12b6c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   12b70:	mov	r1, r3
   12b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b78:	bl	1b0fc <flatcc_json_printer_int8@@Base>
   12b7c:	b	12c28 <_start@@Base+0x718>
   12b80:	ldr	r1, [fp, #-16]
   12b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b88:	bl	1b368 <flatcc_json_printer_delimit_enum_flags@@Base>
   12b8c:	ldrb	r3, [fp, #-9]
   12b90:	and	r3, r3, #1
   12b94:	cmp	r3, #0
   12b98:	beq	12bbc <_start@@Base+0x6ac>
   12b9c:	ldr	r1, [fp, #-8]
   12ba0:	add	r3, r1, #1
   12ba4:	str	r3, [fp, #-8]
   12ba8:	mov	r3, #3
   12bac:	ldr	r2, [pc, #132]	; 12c38 <_start@@Base+0x728>
   12bb0:	add	r2, pc, r2
   12bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bb8:	bl	1b3e0 <flatcc_json_printer_enum_flag@@Base>
   12bbc:	ldrb	r3, [fp, #-9]
   12bc0:	and	r3, r3, #2
   12bc4:	cmp	r3, #0
   12bc8:	beq	12bec <_start@@Base+0x6dc>
   12bcc:	ldr	r1, [fp, #-8]
   12bd0:	add	r3, r1, #1
   12bd4:	str	r3, [fp, #-8]
   12bd8:	mov	r3, #5
   12bdc:	ldr	r2, [pc, #88]	; 12c3c <_start@@Base+0x72c>
   12be0:	add	r2, pc, r2
   12be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12be8:	bl	1b3e0 <flatcc_json_printer_enum_flag@@Base>
   12bec:	ldrb	r3, [fp, #-9]
   12bf0:	and	r3, r3, #8
   12bf4:	cmp	r3, #0
   12bf8:	beq	12c1c <_start@@Base+0x70c>
   12bfc:	ldr	r1, [fp, #-8]
   12c00:	add	r3, r1, #1
   12c04:	str	r3, [fp, #-8]
   12c08:	mov	r3, #4
   12c0c:	ldr	r2, [pc, #44]	; 12c40 <_start@@Base+0x730>
   12c10:	add	r2, pc, r2
   12c14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c18:	bl	1b3e0 <flatcc_json_printer_enum_flag@@Base>
   12c1c:	ldr	r1, [fp, #-16]
   12c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c24:	bl	1b368 <flatcc_json_printer_delimit_enum_flags@@Base>
   12c28:	sub	sp, fp, #4
   12c2c:	ldr	fp, [sp]
   12c30:	add	sp, sp, #4
   12c34:	pop	{pc}		; (ldr pc, [sp], #4)
   12c38:	andeq	r1, r1, r0, ror #2
   12c3c:	andeq	r1, r1, r4, lsr r1
   12c40:	andeq	r1, r1, ip, lsl #2
   12c44:	str	fp, [sp, #-8]!
   12c48:	str	lr, [sp, #4]
   12c4c:	add	fp, sp, #4
   12c50:	sub	sp, sp, #8
   12c54:	str	r0, [fp, #-8]
   12c58:	str	r1, [fp, #-12]
   12c5c:	ldr	r3, [fp, #-12]
   12c60:	cmp	r3, #0
   12c64:	bne	12c84 <_start@@Base+0x774>
   12c68:	mov	r2, #1
   12c6c:	ldr	r3, [pc, #52]	; 12ca8 <_start@@Base+0x798>
   12c70:	add	r3, pc, r3
   12c74:	mov	r1, r3
   12c78:	ldr	r0, [fp, #-8]
   12c7c:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12c80:	b	12c94 <_start@@Base+0x784>
   12c84:	ldr	r1, [fp, #-12]
   12c88:	ldr	r0, [fp, #-8]
   12c8c:	bl	1b1bc <flatcc_json_printer_int32@@Base>
   12c90:	nop	{0}
   12c94:	nop	{0}
   12c98:	sub	sp, fp, #4
   12c9c:	ldr	fp, [sp]
   12ca0:	add	sp, sp, #4
   12ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ca8:	strheq	r1, [r1], -r4
   12cac:	str	fp, [sp, #-8]!
   12cb0:	str	lr, [sp, #4]
   12cb4:	add	fp, sp, #4
   12cb8:	sub	sp, sp, #8
   12cbc:	str	r0, [fp, #-8]
   12cc0:	mov	r3, r1
   12cc4:	strb	r3, [fp, #-9]
   12cc8:	ldrb	r3, [fp, #-9]
   12ccc:	cmp	r3, #1
   12cd0:	bne	12cf0 <_start@@Base+0x7e0>
   12cd4:	mov	r2, #17
   12cd8:	ldr	r3, [pc, #64]	; 12d20 <_start@@Base+0x810>
   12cdc:	add	r3, pc, r3
   12ce0:	mov	r1, r3
   12ce4:	ldr	r0, [fp, #-8]
   12ce8:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12cec:	b	12d0c <_start@@Base+0x7fc>
   12cf0:	mov	r2, #4
   12cf4:	ldr	r3, [pc, #40]	; 12d24 <_start@@Base+0x814>
   12cf8:	add	r3, pc, r3
   12cfc:	mov	r1, r3
   12d00:	ldr	r0, [fp, #-8]
   12d04:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12d08:	nop	{0}
   12d0c:	nop	{0}
   12d10:	sub	sp, fp, #4
   12d14:	ldr	fp, [sp]
   12d18:	add	sp, sp, #4
   12d1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d20:	andeq	r1, r1, ip, asr #32
   12d24:	andeq	r1, r1, r4, asr #32
   12d28:	str	fp, [sp, #-8]!
   12d2c:	str	lr, [sp, #4]
   12d30:	add	fp, sp, #4
   12d34:	sub	sp, sp, #8
   12d38:	str	r0, [fp, #-8]
   12d3c:	str	r1, [fp, #-12]
   12d40:	ldr	r3, [fp, #-12]
   12d44:	ldrb	r3, [r3, #8]
   12d48:	cmp	r3, #1
   12d4c:	bne	12d6c <_start@@Base+0x85c>
   12d50:	ldr	r3, [pc, #44]	; 12d84 <_start@@Base+0x874>
   12d54:	add	r3, pc, r3
   12d58:	mov	r2, r3
   12d5c:	ldr	r1, [fp, #-12]
   12d60:	ldr	r0, [fp, #-8]
   12d64:	bl	2289c <flatcc_json_printer_union_table@@Base>
   12d68:	b	12d70 <_start@@Base+0x860>
   12d6c:	nop	{0}
   12d70:	nop	{0}
   12d74:	sub	sp, fp, #4
   12d78:	ldr	fp, [sp]
   12d7c:	add	sp, sp, #4
   12d80:	pop	{pc}		; (ldr pc, [sp], #4)
   12d84:			; <UNDEFINED> instruction: 0x000007b4
   12d88:	str	fp, [sp, #-8]!
   12d8c:	str	lr, [sp, #4]
   12d90:	add	fp, sp, #4
   12d94:	sub	sp, sp, #8
   12d98:	str	r0, [fp, #-8]
   12d9c:	mov	r3, r1
   12da0:	strb	r3, [fp, #-9]
   12da4:	ldrb	r3, [fp, #-9]
   12da8:	sub	r3, r3, #1
   12dac:	cmp	r3, #3
   12db0:	addls	pc, pc, r3, lsl #2
   12db4:	b	12e38 <_start@@Base+0x928>
   12db8:	b	12dc8 <_start@@Base+0x8b8>
   12dbc:	b	12de4 <_start@@Base+0x8d4>
   12dc0:	b	12e00 <_start@@Base+0x8f0>
   12dc4:	b	12e1c <_start@@Base+0x90c>
   12dc8:	mov	r2, #7
   12dcc:	ldr	r3, [pc, #148]	; 12e68 <_start@@Base+0x958>
   12dd0:	add	r3, pc, r3
   12dd4:	mov	r1, r3
   12dd8:	ldr	r0, [fp, #-8]
   12ddc:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12de0:	b	12e54 <_start@@Base+0x944>
   12de4:	mov	r2, #23
   12de8:	ldr	r3, [pc, #124]	; 12e6c <_start@@Base+0x95c>
   12dec:	add	r3, pc, r3
   12df0:	mov	r1, r3
   12df4:	ldr	r0, [fp, #-8]
   12df8:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12dfc:	b	12e54 <_start@@Base+0x944>
   12e00:	mov	r2, #8
   12e04:	ldr	r3, [pc, #100]	; 12e70 <_start@@Base+0x960>
   12e08:	add	r3, pc, r3
   12e0c:	mov	r1, r3
   12e10:	ldr	r0, [fp, #-8]
   12e14:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12e18:	b	12e54 <_start@@Base+0x944>
   12e1c:	mov	r2, #3
   12e20:	ldr	r3, [pc, #76]	; 12e74 <_start@@Base+0x964>
   12e24:	add	r3, pc, r3
   12e28:	mov	r1, r3
   12e2c:	ldr	r0, [fp, #-8]
   12e30:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12e34:	b	12e54 <_start@@Base+0x944>
   12e38:	mov	r2, #4
   12e3c:	ldr	r3, [pc, #52]	; 12e78 <_start@@Base+0x968>
   12e40:	add	r3, pc, r3
   12e44:	mov	r1, r3
   12e48:	ldr	r0, [fp, #-8]
   12e4c:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12e50:	nop	{0}
   12e54:	nop	{0}
   12e58:	sub	sp, fp, #4
   12e5c:	ldr	fp, [sp]
   12e60:	add	sp, sp, #4
   12e64:	pop	{pc}		; (ldr pc, [sp], #4)
   12e68:	andeq	r0, r1, r4, ror pc
   12e6c:	andeq	r0, r1, r0, ror #30
   12e70:	andeq	r0, r1, ip, asr pc
   12e74:	andeq	r0, r1, ip, asr #30
   12e78:	strdeq	r0, [r1], -ip
   12e7c:	str	fp, [sp, #-8]!
   12e80:	str	lr, [sp, #4]
   12e84:	add	fp, sp, #4
   12e88:	sub	sp, sp, #8
   12e8c:	str	r0, [fp, #-8]
   12e90:	str	r1, [fp, #-12]
   12e94:	ldr	r3, [fp, #-12]
   12e98:	ldrb	r3, [r3, #8]
   12e9c:	sub	r3, r3, #1
   12ea0:	cmp	r3, #3
   12ea4:	addls	pc, pc, r3, lsl #2
   12ea8:	b	12f2c <_start@@Base+0xa1c>
   12eac:	b	12ebc <_start@@Base+0x9ac>
   12eb0:	b	12ed8 <_start@@Base+0x9c8>
   12eb4:	b	12ef4 <_start@@Base+0x9e4>
   12eb8:	b	12f10 <_start@@Base+0xa00>
   12ebc:	ldr	r3, [pc, #128]	; 12f44 <_start@@Base+0xa34>
   12ec0:	add	r3, pc, r3
   12ec4:	mov	r2, r3
   12ec8:	ldr	r1, [fp, #-12]
   12ecc:	ldr	r0, [fp, #-8]
   12ed0:	bl	2289c <flatcc_json_printer_union_table@@Base>
   12ed4:	b	12f30 <_start@@Base+0xa20>
   12ed8:	ldr	r3, [pc, #104]	; 12f48 <_start@@Base+0xa38>
   12edc:	add	r3, pc, r3
   12ee0:	mov	r2, r3
   12ee4:	ldr	r1, [fp, #-12]
   12ee8:	ldr	r0, [fp, #-8]
   12eec:	bl	2289c <flatcc_json_printer_union_table@@Base>
   12ef0:	b	12f30 <_start@@Base+0xa20>
   12ef4:	ldr	r3, [pc, #80]	; 12f4c <_start@@Base+0xa3c>
   12ef8:	add	r3, pc, r3
   12efc:	mov	r2, r3
   12f00:	ldr	r1, [fp, #-12]
   12f04:	ldr	r0, [fp, #-8]
   12f08:	bl	2289c <flatcc_json_printer_union_table@@Base>
   12f0c:	b	12f30 <_start@@Base+0xa20>
   12f10:	ldr	r3, [pc, #56]	; 12f50 <_start@@Base+0xa40>
   12f14:	add	r3, pc, r3
   12f18:	mov	r2, r3
   12f1c:	ldr	r1, [fp, #-12]
   12f20:	ldr	r0, [fp, #-8]
   12f24:	bl	2289c <flatcc_json_printer_union_table@@Base>
   12f28:	b	12f30 <_start@@Base+0xa20>
   12f2c:	nop	{0}
   12f30:	nop	{0}
   12f34:	sub	sp, fp, #4
   12f38:	ldr	fp, [sp]
   12f3c:	add	sp, sp, #4
   12f40:	pop	{pc}		; (ldr pc, [sp], #4)
   12f44:	andeq	r0, r0, r4, asr #30
   12f48:	strdeq	r0, [r0], -r8
   12f4c:	andeq	r0, r0, r4, lsr r6
   12f50:	andeq	r0, r0, r4, ror #19
   12f54:	str	fp, [sp, #-8]!
   12f58:	str	lr, [sp, #4]
   12f5c:	add	fp, sp, #4
   12f60:	sub	sp, sp, #8
   12f64:	str	r0, [fp, #-8]
   12f68:	mov	r3, r1
   12f6c:	strb	r3, [fp, #-9]
   12f70:	ldrb	r3, [fp, #-9]
   12f74:	cmp	r3, #9
   12f78:	beq	12fec <_start@@Base+0xadc>
   12f7c:	cmp	r3, #9
   12f80:	bgt	12f98 <_start@@Base+0xa88>
   12f84:	cmp	r3, #2
   12f88:	beq	12fb4 <_start@@Base+0xaa4>
   12f8c:	cmp	r3, #8
   12f90:	beq	12fd0 <_start@@Base+0xac0>
   12f94:	b	1305c <_start@@Base+0xb4c>
   12f98:	cmp	r3, #11
   12f9c:	beq	13024 <_start@@Base+0xb14>
   12fa0:	cmp	r3, #11
   12fa4:	blt	13008 <_start@@Base+0xaf8>
   12fa8:	cmp	r3, #255	; 0xff
   12fac:	beq	13040 <_start@@Base+0xb30>
   12fb0:	b	1305c <_start@@Base+0xb4c>
   12fb4:	mov	r2, #5
   12fb8:	ldr	r3, [pc, #204]	; 1308c <_start@@Base+0xb7c>
   12fbc:	add	r3, pc, r3
   12fc0:	mov	r1, r3
   12fc4:	ldr	r0, [fp, #-8]
   12fc8:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12fcc:	b	13078 <_start@@Base+0xb68>
   12fd0:	mov	r2, #8
   12fd4:	ldr	r3, [pc, #180]	; 13090 <_start@@Base+0xb80>
   12fd8:	add	r3, pc, r3
   12fdc:	mov	r1, r3
   12fe0:	ldr	r0, [fp, #-8]
   12fe4:	bl	1b324 <flatcc_json_printer_enum@@Base>
   12fe8:	b	13078 <_start@@Base+0xb68>
   12fec:	mov	r2, #5
   12ff0:	ldr	r3, [pc, #156]	; 13094 <_start@@Base+0xb84>
   12ff4:	add	r3, pc, r3
   12ff8:	mov	r1, r3
   12ffc:	ldr	r0, [fp, #-8]
   13000:	bl	1b324 <flatcc_json_printer_enum@@Base>
   13004:	b	13078 <_start@@Base+0xb68>
   13008:	mov	r2, #7
   1300c:	ldr	r3, [pc, #132]	; 13098 <_start@@Base+0xb88>
   13010:	add	r3, pc, r3
   13014:	mov	r1, r3
   13018:	ldr	r0, [fp, #-8]
   1301c:	bl	1b324 <flatcc_json_printer_enum@@Base>
   13020:	b	13078 <_start@@Base+0xb68>
   13024:	mov	r2, #5
   13028:	ldr	r3, [pc, #108]	; 1309c <_start@@Base+0xb8c>
   1302c:	add	r3, pc, r3
   13030:	mov	r1, r3
   13034:	ldr	r0, [fp, #-8]
   13038:	bl	1b324 <flatcc_json_printer_enum@@Base>
   1303c:	b	13078 <_start@@Base+0xb68>
   13040:	mov	r2, #6
   13044:	ldr	r3, [pc, #84]	; 130a0 <_start@@Base+0xb90>
   13048:	add	r3, pc, r3
   1304c:	mov	r1, r3
   13050:	ldr	r0, [fp, #-8]
   13054:	bl	1b324 <flatcc_json_printer_enum@@Base>
   13058:	b	13078 <_start@@Base+0xb68>
   1305c:	mov	r2, #4
   13060:	ldr	r3, [pc, #60]	; 130a4 <_start@@Base+0xb94>
   13064:	add	r3, pc, r3
   13068:	mov	r1, r3
   1306c:	ldr	r0, [fp, #-8]
   13070:	bl	1b324 <flatcc_json_printer_enum@@Base>
   13074:	nop	{0}
   13078:	nop	{0}
   1307c:	sub	sp, fp, #4
   13080:	ldr	fp, [sp]
   13084:	add	sp, sp, #4
   13088:	pop	{pc}		; (ldr pc, [sp], #4)
   1308c:			; <UNDEFINED> instruction: 0x00010db8
   13090:	andeq	r0, r1, r4, lsr #27
   13094:	muleq	r1, r4, sp
   13098:	andeq	r0, r1, r0, lsl #27
   1309c:	andeq	r0, r1, ip, ror #26
   130a0:	andeq	r0, r1, r8, asr sp
   130a4:	ldrdeq	r0, [r1], -r8
   130a8:	str	fp, [sp, #-8]!
   130ac:	str	lr, [sp, #4]
   130b0:	add	fp, sp, #4
   130b4:	sub	sp, sp, #8
   130b8:	str	r0, [fp, #-8]
   130bc:	str	r1, [fp, #-12]
   130c0:	ldr	r3, [fp, #-12]
   130c4:	ldrb	r3, [r3, #8]
   130c8:	cmp	r3, #9
   130cc:	beq	13140 <_start@@Base+0xc30>
   130d0:	cmp	r3, #9
   130d4:	bgt	130ec <_start@@Base+0xbdc>
   130d8:	cmp	r3, #2
   130dc:	beq	13108 <_start@@Base+0xbf8>
   130e0:	cmp	r3, #8
   130e4:	beq	13124 <_start@@Base+0xc14>
   130e8:	b	13198 <_start@@Base+0xc88>
   130ec:	cmp	r3, #11
   130f0:	beq	13178 <_start@@Base+0xc68>
   130f4:	cmp	r3, #11
   130f8:	blt	1315c <_start@@Base+0xc4c>
   130fc:	cmp	r3, #255	; 0xff
   13100:	beq	13188 <_start@@Base+0xc78>
   13104:	b	13198 <_start@@Base+0xc88>
   13108:	ldr	r3, [pc, #156]	; 131ac <_start@@Base+0xc9c>
   1310c:	add	r3, pc, r3
   13110:	mov	r2, r3
   13114:	ldr	r1, [fp, #-12]
   13118:	ldr	r0, [fp, #-8]
   1311c:	bl	2289c <flatcc_json_printer_union_table@@Base>
   13120:	b	13198 <_start@@Base+0xc88>
   13124:	ldr	r3, [pc, #132]	; 131b0 <_start@@Base+0xca0>
   13128:	add	r3, pc, r3
   1312c:	mov	r2, r3
   13130:	ldr	r1, [fp, #-12]
   13134:	ldr	r0, [fp, #-8]
   13138:	bl	228f4 <flatcc_json_printer_union_struct@@Base>
   1313c:	b	13198 <_start@@Base+0xc88>
   13140:	ldr	r3, [pc, #108]	; 131b4 <_start@@Base+0xca4>
   13144:	add	r3, pc, r3
   13148:	mov	r2, r3
   1314c:	ldr	r1, [fp, #-12]
   13150:	ldr	r0, [fp, #-8]
   13154:	bl	228f4 <flatcc_json_printer_union_struct@@Base>
   13158:	b	13198 <_start@@Base+0xc88>
   1315c:	ldr	r3, [pc, #84]	; 131b8 <_start@@Base+0xca8>
   13160:	add	r3, pc, r3
   13164:	mov	r2, r3
   13168:	ldr	r1, [fp, #-12]
   1316c:	ldr	r0, [fp, #-8]
   13170:	bl	228f4 <flatcc_json_printer_union_struct@@Base>
   13174:	b	13198 <_start@@Base+0xc88>
   13178:	ldr	r1, [fp, #-12]
   1317c:	ldr	r0, [fp, #-8]
   13180:	bl	229dc <flatcc_json_printer_union_string@@Base>
   13184:	b	13198 <_start@@Base+0xc88>
   13188:	ldr	r1, [fp, #-12]
   1318c:	ldr	r0, [fp, #-8]
   13190:	bl	229dc <flatcc_json_printer_union_string@@Base>
   13194:	nop	{0}
   13198:	nop	{0}
   1319c:	sub	sp, fp, #4
   131a0:	ldr	fp, [sp]
   131a4:	add	sp, sp, #4
   131a8:	pop	{pc}		; (ldr pc, [sp], #4)
   131ac:	strdeq	r1, [r0], -r8
   131b0:	andeq	r0, r0, r0, lsr r3
   131b4:	andeq	r0, r0, ip, ror #6
   131b8:	andeq	r0, r0, r0, asr r3
   131bc:	push	{fp}		; (str fp, [sp, #-4]!)
   131c0:	add	fp, sp, #0
   131c4:	sub	sp, sp, #12
   131c8:	str	r0, [fp, #-8]
   131cc:	str	r1, [fp, #-12]
   131d0:	nop	{0}
   131d4:	add	sp, fp, #0
   131d8:	pop	{fp}		; (ldr fp, [sp], #4)
   131dc:	bx	lr
   131e0:	str	fp, [sp, #-8]!
   131e4:	str	lr, [sp, #4]
   131e8:	add	fp, sp, #4
   131ec:	sub	sp, sp, #16
   131f0:	str	r0, [fp, #-8]
   131f4:	str	r1, [fp, #-12]
   131f8:	mov	r3, #1
   131fc:	str	r3, [sp, #4]
   13200:	ldr	r3, [pc, #84]	; 1325c <_start@@Base+0xd4c>
   13204:	add	r3, pc, r3
   13208:	str	r3, [sp]
   1320c:	mov	r3, #0
   13210:	ldr	r2, [fp, #-12]
   13214:	mov	r1, #0
   13218:	ldr	r0, [fp, #-8]
   1321c:	bl	1d288 <flatcc_json_printer_int16_struct_field@@Base>
   13220:	mov	r3, #1
   13224:	str	r3, [sp, #4]
   13228:	ldr	r3, [pc, #48]	; 13260 <_start@@Base+0xd50>
   1322c:	add	r3, pc, r3
   13230:	str	r3, [sp]
   13234:	mov	r3, #2
   13238:	ldr	r2, [fp, #-12]
   1323c:	mov	r1, #1
   13240:	ldr	r0, [fp, #-8]
   13244:	bl	1d1cc <flatcc_json_printer_int8_struct_field@@Base>
   13248:	nop	{0}
   1324c:	sub	sp, fp, #4
   13250:	ldr	fp, [sp]
   13254:	add	sp, sp, #4
   13258:	pop	{pc}		; (ldr pc, [sp], #4)
   1325c:	andeq	r0, r1, r4, lsr #23
   13260:	andeq	r0, r1, r0, lsl #23
   13264:	push	{fp}		; (str fp, [sp, #-4]!)
   13268:	add	fp, sp, #0
   1326c:	sub	sp, sp, #12
   13270:	str	r0, [fp, #-8]
   13274:	str	r1, [fp, #-12]
   13278:	nop	{0}
   1327c:	add	sp, fp, #0
   13280:	pop	{fp}		; (ldr fp, [sp], #4)
   13284:	bx	lr
   13288:	str	fp, [sp, #-8]!
   1328c:	str	lr, [sp, #4]
   13290:	add	fp, sp, #4
   13294:	sub	sp, sp, #24
   13298:	str	r0, [fp, #-8]
   1329c:	str	r1, [fp, #-12]
   132a0:	mov	r3, #1
   132a4:	str	r3, [sp, #4]
   132a8:	ldr	r3, [pc, #268]	; 133bc <_start@@Base+0xeac>
   132ac:	add	r3, pc, r3
   132b0:	str	r3, [sp]
   132b4:	mov	r3, #0
   132b8:	ldr	r2, [fp, #-12]
   132bc:	mov	r1, #0
   132c0:	ldr	r0, [fp, #-8]
   132c4:	bl	1d568 <flatcc_json_printer_float_struct_field@@Base>
   132c8:	mov	r3, #1
   132cc:	str	r3, [sp, #4]
   132d0:	ldr	r3, [pc, #232]	; 133c0 <_start@@Base+0xeb0>
   132d4:	add	r3, pc, r3
   132d8:	str	r3, [sp]
   132dc:	mov	r3, #4
   132e0:	ldr	r2, [fp, #-12]
   132e4:	mov	r1, #1
   132e8:	ldr	r0, [fp, #-8]
   132ec:	bl	1d568 <flatcc_json_printer_float_struct_field@@Base>
   132f0:	mov	r3, #1
   132f4:	str	r3, [sp, #4]
   132f8:	ldr	r3, [pc, #196]	; 133c4 <_start@@Base+0xeb4>
   132fc:	add	r3, pc, r3
   13300:	str	r3, [sp]
   13304:	mov	r3, #8
   13308:	ldr	r2, [fp, #-12]
   1330c:	mov	r1, #2
   13310:	ldr	r0, [fp, #-8]
   13314:	bl	1d568 <flatcc_json_printer_float_struct_field@@Base>
   13318:	mov	r3, #5
   1331c:	str	r3, [sp, #4]
   13320:	ldr	r3, [pc, #160]	; 133c8 <_start@@Base+0xeb8>
   13324:	add	r3, pc, r3
   13328:	str	r3, [sp]
   1332c:	mov	r3, #16
   13330:	ldr	r2, [fp, #-12]
   13334:	mov	r1, #3
   13338:	ldr	r0, [fp, #-8]
   1333c:	bl	1d624 <flatcc_json_printer_double_struct_field@@Base>
   13340:	ldr	r3, [pc, #132]	; 133cc <_start@@Base+0xebc>
   13344:	add	r3, pc, r3
   13348:	str	r3, [sp, #8]
   1334c:	mov	r3, #5
   13350:	str	r3, [sp, #4]
   13354:	ldr	r3, [pc, #116]	; 133d0 <_start@@Base+0xec0>
   13358:	add	r3, pc, r3
   1335c:	str	r3, [sp]
   13360:	mov	r3, #24
   13364:	ldr	r2, [fp, #-12]
   13368:	mov	r1, #4
   1336c:	ldr	r0, [fp, #-8]
   13370:	bl	1da50 <flatcc_json_printer_int8_enum_struct_field@@Base>
   13374:	ldr	r3, [pc, #88]	; 133d4 <_start@@Base+0xec4>
   13378:	add	r3, pc, r3
   1337c:	str	r3, [sp, #8]
   13380:	mov	r3, #5
   13384:	str	r3, [sp, #4]
   13388:	ldr	r3, [pc, #72]	; 133d8 <_start@@Base+0xec8>
   1338c:	add	r3, pc, r3
   13390:	str	r3, [sp]
   13394:	mov	r3, #26
   13398:	ldr	r2, [fp, #-12]
   1339c:	mov	r1, #5
   133a0:	ldr	r0, [fp, #-8]
   133a4:	bl	22a28 <flatcc_json_printer_embedded_struct_field@@Base>
   133a8:	nop	{0}
   133ac:	sub	sp, fp, #4
   133b0:	ldr	fp, [sp]
   133b4:	add	sp, sp, #4
   133b8:	pop	{pc}		; (ldr pc, [sp], #4)
   133bc:	andeq	r0, r1, r8, ror sl
   133c0:	ldrdeq	r0, [r1], -ip
   133c4:			; <UNDEFINED> instruction: 0x00010ab8
   133c8:	muleq	r1, r4, sl
   133cc:			; <UNDEFINED> instruction: 0xfffff7b4
   133d0:	andeq	r0, r1, r8, ror #20
   133d4:			; <UNDEFINED> instruction: 0xfffffe60
   133d8:	andeq	r0, r1, ip, lsr sl
   133dc:	str	fp, [sp, #-8]!
   133e0:	str	lr, [sp, #4]
   133e4:	add	fp, sp, #4
   133e8:	sub	sp, sp, #16
   133ec:	str	r0, [fp, #-8]
   133f0:	str	r1, [fp, #-12]
   133f4:	mov	r3, #2
   133f8:	str	r3, [sp, #4]
   133fc:	ldr	r3, [pc, #84]	; 13458 <_start@@Base+0xf48>
   13400:	add	r3, pc, r3
   13404:	str	r3, [sp]
   13408:	mov	r3, #0
   1340c:	ldr	r2, [fp, #-12]
   13410:	mov	r1, #0
   13414:	ldr	r0, [fp, #-8]
   13418:	bl	1d064 <flatcc_json_printer_uint32_struct_field@@Base>
   1341c:	mov	r3, #8
   13420:	str	r3, [sp, #4]
   13424:	ldr	r3, [pc, #48]	; 1345c <_start@@Base+0xf4c>
   13428:	add	r3, pc, r3
   1342c:	str	r3, [sp]
   13430:	mov	r3, #4
   13434:	ldr	r2, [fp, #-12]
   13438:	mov	r1, #1
   1343c:	ldr	r0, [fp, #-8]
   13440:	bl	1d064 <flatcc_json_printer_uint32_struct_field@@Base>
   13444:	nop	{0}
   13448:	sub	sp, fp, #4
   1344c:	ldr	fp, [sp]
   13450:	add	sp, sp, #4
   13454:	pop	{pc}		; (ldr pc, [sp], #4)
   13458:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1345c:	andeq	r0, r1, ip, lsr #19
   13460:	str	fp, [sp, #-8]!
   13464:	str	lr, [sp, #4]
   13468:	add	fp, sp, #4
   1346c:	sub	sp, sp, #16
   13470:	str	r0, [fp, #-8]
   13474:	str	r1, [fp, #-12]
   13478:	mov	r3, #11
   1347c:	str	r3, [sp, #4]
   13480:	ldr	r3, [pc, #44]	; 134b4 <_start@@Base+0xfa4>
   13484:	add	r3, pc, r3
   13488:	str	r3, [sp]
   1348c:	mov	r3, #0
   13490:	ldr	r2, [fp, #-12]
   13494:	mov	r1, #0
   13498:	ldr	r0, [fp, #-8]
   1349c:	bl	1cfa8 <flatcc_json_printer_uint16_struct_field@@Base>
   134a0:	nop	{0}
   134a4:	sub	sp, fp, #4
   134a8:	ldr	fp, [sp]
   134ac:	add	sp, sp, #4
   134b0:	pop	{pc}		; (ldr pc, [sp], #4)
   134b4:	andeq	r0, r1, ip, asr r9
   134b8:	str	fp, [sp, #-8]!
   134bc:	str	lr, [sp, #4]
   134c0:	add	fp, sp, #4
   134c4:	sub	sp, sp, #16
   134c8:	str	r0, [fp, #-8]
   134cc:	str	r1, [fp, #-12]
   134d0:	mov	r3, #10
   134d4:	str	r3, [sp, #4]
   134d8:	ldr	r3, [pc, #44]	; 1350c <_start@@Base+0xffc>
   134dc:	add	r3, pc, r3
   134e0:	str	r3, [sp]
   134e4:	mov	r3, #0
   134e8:	ldr	r2, [fp, #-12]
   134ec:	mov	r1, #0
   134f0:	ldr	r0, [fp, #-8]
   134f4:	bl	1d344 <flatcc_json_printer_int32_struct_field@@Base>
   134f8:	nop	{0}
   134fc:	sub	sp, fp, #4
   13500:	ldr	fp, [sp]
   13504:	add	sp, sp, #4
   13508:	pop	{pc}		; (ldr pc, [sp], #4)
   1350c:	andeq	r0, r1, r0, lsl r9
   13510:	push	{fp}		; (str fp, [sp, #-4]!)
   13514:	add	fp, sp, #0
   13518:	sub	sp, sp, #12
   1351c:	str	r0, [fp, #-8]
   13520:	str	r1, [fp, #-12]
   13524:	nop	{0}
   13528:	add	sp, fp, #0
   1352c:	pop	{fp}		; (ldr fp, [sp], #4)
   13530:	bx	lr
   13534:	push	{fp}		; (str fp, [sp, #-4]!)
   13538:	add	fp, sp, #0
   1353c:	sub	sp, sp, #12
   13540:	str	r0, [fp, #-8]
   13544:	str	r1, [fp, #-12]
   13548:	nop	{0}
   1354c:	add	sp, fp, #0
   13550:	pop	{fp}		; (ldr fp, [sp], #4)
   13554:	bx	lr
   13558:	push	{fp}		; (str fp, [sp, #-4]!)
   1355c:	add	fp, sp, #0
   13560:	sub	sp, sp, #12
   13564:	str	r0, [fp, #-8]
   13568:	str	r1, [fp, #-12]
   1356c:	nop	{0}
   13570:	add	sp, fp, #0
   13574:	pop	{fp}		; (ldr fp, [sp], #4)
   13578:	bx	lr
   1357c:	str	fp, [sp, #-8]!
   13580:	str	lr, [sp, #4]
   13584:	add	fp, sp, #4
   13588:	sub	sp, sp, #16
   1358c:	str	r0, [fp, #-8]
   13590:	str	r1, [fp, #-12]
   13594:	ldr	r3, [pc, #56]	; 135d4 <_start@@Base+0x10c4>
   13598:	add	r3, pc, r3
   1359c:	str	r3, [sp, #4]
   135a0:	mov	r3, #5
   135a4:	str	r3, [sp]
   135a8:	ldr	r3, [pc, #40]	; 135d8 <_start@@Base+0x10c8>
   135ac:	add	r3, pc, r3
   135b0:	mov	r2, #0
   135b4:	ldr	r1, [fp, #-12]
   135b8:	ldr	r0, [fp, #-8]
   135bc:	bl	22b48 <flatcc_json_printer_struct_field@@Base>
   135c0:	nop	{0}
   135c4:	sub	sp, fp, #4
   135c8:	ldr	fp, [sp]
   135cc:	add	sp, sp, #4
   135d0:	pop	{pc}		; (ldr pc, [sp], #4)
   135d4:			; <UNDEFINED> instruction: 0xfffffcc4
   135d8:	andeq	r0, r1, ip, asr #16
   135dc:	str	fp, [sp, #-8]!
   135e0:	str	lr, [sp, #4]
   135e4:	add	fp, sp, #4
   135e8:	sub	sp, sp, #24
   135ec:	str	r0, [fp, #-8]
   135f0:	str	r1, [fp, #-12]
   135f4:	ldr	r3, [pc, #196]	; 136c0 <_start@@Base+0x11b0>
   135f8:	add	r3, pc, r3
   135fc:	str	r3, [sp, #8]
   13600:	mov	r3, #2
   13604:	str	r3, [sp, #4]
   13608:	mov	r3, #5
   1360c:	str	r3, [sp]
   13610:	ldr	r3, [pc, #172]	; 136c4 <_start@@Base+0x11b4>
   13614:	add	r3, pc, r3
   13618:	mov	r2, #0
   1361c:	ldr	r1, [fp, #-12]
   13620:	ldr	r0, [fp, #-8]
   13624:	bl	1c8ac <flatcc_json_printer_int8_enum_field@@Base>
   13628:	ldr	r3, [pc, #152]	; 136c8 <_start@@Base+0x11b8>
   1362c:	add	r3, pc, r3
   13630:	str	r3, [sp, #8]
   13634:	mov	r3, #2
   13638:	str	r3, [sp, #4]
   1363c:	mov	r3, #6
   13640:	str	r3, [sp]
   13644:	ldr	r3, [pc, #128]	; 136cc <_start@@Base+0x11bc>
   13648:	add	r3, pc, r3
   1364c:	mov	r2, #1
   13650:	ldr	r1, [fp, #-12]
   13654:	ldr	r0, [fp, #-8]
   13658:	bl	1c8ac <flatcc_json_printer_int8_enum_field@@Base>
   1365c:	mov	r3, #2
   13660:	str	r3, [sp, #4]
   13664:	mov	r3, #2
   13668:	str	r3, [sp]
   1366c:	ldr	r3, [pc, #92]	; 136d0 <_start@@Base+0x11c0>
   13670:	add	r3, pc, r3
   13674:	mov	r2, #2
   13678:	ldr	r1, [fp, #-12]
   1367c:	ldr	r0, [fp, #-8]
   13680:	bl	1b78c <flatcc_json_printer_uint8_field@@Base>
   13684:	mov	r3, #2
   13688:	str	r3, [sp, #4]
   1368c:	mov	r3, #3
   13690:	str	r3, [sp]
   13694:	ldr	r3, [pc, #56]	; 136d4 <_start@@Base+0x11c4>
   13698:	add	r3, pc, r3
   1369c:	mov	r2, #3
   136a0:	ldr	r1, [fp, #-12]
   136a4:	ldr	r0, [fp, #-8]
   136a8:	bl	1b78c <flatcc_json_printer_uint8_field@@Base>
   136ac:	nop	{0}
   136b0:	sub	sp, fp, #4
   136b4:	ldr	fp, [sp]
   136b8:	add	sp, sp, #4
   136bc:	pop	{pc}		; (ldr pc, [sp], #4)
   136c0:			; <UNDEFINED> instruction: 0xfffff500
   136c4:	andeq	r0, r1, ip, ror #15
   136c8:			; <UNDEFINED> instruction: 0xfffff4cc
   136cc:	andeq	r0, r1, r0, asr #15
   136d0:	andeq	r0, r1, r0, lsr #15
   136d4:	andeq	r0, r1, ip, ror r7
   136d8:	str	fp, [sp, #-8]!
   136dc:	str	lr, [sp, #4]
   136e0:	add	fp, sp, #4
   136e4:	sub	sp, sp, #32
   136e8:	str	r0, [fp, #-8]
   136ec:	str	r1, [fp, #-12]
   136f0:	ldr	r3, [pc, #308]	; 1382c <_start@@Base+0x131c>
   136f4:	add	r3, pc, r3
   136f8:	str	r3, [sp, #4]
   136fc:	mov	r3, #6
   13700:	str	r3, [sp]
   13704:	ldr	r3, [pc, #292]	; 13830 <_start@@Base+0x1320>
   13708:	add	r3, pc, r3
   1370c:	mov	r2, #0
   13710:	ldr	r1, [fp, #-12]
   13714:	ldr	r0, [fp, #-8]
   13718:	bl	22b48 <flatcc_json_printer_struct_field@@Base>
   1371c:	ldr	r3, [pc, #272]	; 13834 <_start@@Base+0x1324>
   13720:	add	r3, pc, r3
   13724:	str	r3, [sp, #16]
   13728:	mov	r2, #0
   1372c:	mov	r3, #0
   13730:	strd	r2, [sp, #8]
   13734:	mov	r3, #6
   13738:	str	r3, [sp]
   1373c:	ldr	r3, [pc, #244]	; 13838 <_start@@Base+0x1328>
   13740:	add	r3, pc, r3
   13744:	mov	r2, #1
   13748:	ldr	r1, [fp, #-12]
   1374c:	ldr	r0, [fp, #-8]
   13750:	bl	1cc6c <flatcc_json_printer_int64_enum_field@@Base>
   13754:	ldr	r3, [pc, #224]	; 1383c <_start@@Base+0x132c>
   13758:	add	r3, pc, r3
   1375c:	str	r3, [sp, #16]
   13760:	mov	r2, #0
   13764:	mov	r3, #0
   13768:	strd	r2, [sp, #8]
   1376c:	mov	r3, #7
   13770:	str	r3, [sp]
   13774:	ldr	r3, [pc, #196]	; 13840 <_start@@Base+0x1330>
   13778:	add	r3, pc, r3
   1377c:	mov	r2, #2
   13780:	ldr	r1, [fp, #-12]
   13784:	ldr	r0, [fp, #-8]
   13788:	bl	1cc6c <flatcc_json_printer_int64_enum_field@@Base>
   1378c:	mov	r3, #0
   13790:	str	r3, [sp, #4]
   13794:	mov	r3, #7
   13798:	str	r3, [sp]
   1379c:	ldr	r3, [pc, #160]	; 13844 <_start@@Base+0x1334>
   137a0:	add	r3, pc, r3
   137a4:	mov	r2, #3
   137a8:	ldr	r1, [fp, #-12]
   137ac:	ldr	r0, [fp, #-8]
   137b0:	bl	1be28 <flatcc_json_printer_int32_field@@Base>
   137b4:	ldr	r3, [pc, #140]	; 13848 <_start@@Base+0x1338>
   137b8:	add	r3, pc, r3
   137bc:	str	r3, [sp, #16]
   137c0:	mov	r2, #0
   137c4:	mov	r3, #0
   137c8:	strd	r2, [sp, #8]
   137cc:	mov	r3, #7
   137d0:	str	r3, [sp]
   137d4:	ldr	r3, [pc, #112]	; 1384c <_start@@Base+0x133c>
   137d8:	add	r3, pc, r3
   137dc:	mov	r2, #4
   137e0:	ldr	r1, [fp, #-12]
   137e4:	ldr	r0, [fp, #-8]
   137e8:	bl	1cc6c <flatcc_json_printer_int64_enum_field@@Base>
   137ec:	mov	r2, #0
   137f0:	mov	r3, #0
   137f4:	strd	r2, [sp, #8]
   137f8:	mov	r3, #7
   137fc:	str	r3, [sp]
   13800:	ldr	r3, [pc, #72]	; 13850 <_start@@Base+0x1340>
   13804:	add	r3, pc, r3
   13808:	mov	r2, #5
   1380c:	ldr	r1, [fp, #-12]
   13810:	ldr	r0, [fp, #-8]
   13814:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   13818:	nop	{0}
   1381c:	sub	sp, fp, #4
   13820:	ldr	fp, [sp]
   13824:	add	sp, sp, #4
   13828:	pop	{pc}		; (ldr pc, [sp], #4)
   1382c:			; <UNDEFINED> instruction: 0xfffffac0
   13830:	andeq	r0, r1, r0, lsl r7
   13834:			; <UNDEFINED> instruction: 0xfffff090
   13838:	andeq	r0, r1, r0, ror #13
   1383c:			; <UNDEFINED> instruction: 0xfffff058
   13840:			; <UNDEFINED> instruction: 0x000106b0
   13844:	muleq	r1, r0, r6
   13848:			; <UNDEFINED> instruction: 0xffffeff8
   1384c:	andeq	r0, r1, r0, ror #12
   13850:	andeq	r0, r1, ip, lsr r6
   13854:	str	fp, [sp, #-8]!
   13858:	str	lr, [sp, #4]
   1385c:	add	fp, sp, #4
   13860:	sub	sp, sp, #24
   13864:	str	r0, [fp, #-8]
   13868:	str	r1, [fp, #-12]
   1386c:	mov	r3, #2
   13870:	str	r3, [sp]
   13874:	ldr	r3, [pc, #120]	; 138f4 <_start@@Base+0x13e4>
   13878:	add	r3, pc, r3
   1387c:	mov	r2, #0
   13880:	ldr	r1, [fp, #-12]
   13884:	ldr	r0, [fp, #-8]
   13888:	bl	1b5fc <flatcc_json_printer_string_field@@Base>
   1388c:	mov	r2, #0
   13890:	mov	r3, #0
   13894:	strd	r2, [sp, #8]
   13898:	mov	r3, #3
   1389c:	str	r3, [sp]
   138a0:	ldr	r3, [pc, #80]	; 138f8 <_start@@Base+0x13e8>
   138a4:	add	r3, pc, r3
   138a8:	mov	r2, #1
   138ac:	ldr	r1, [fp, #-12]
   138b0:	ldr	r0, [fp, #-8]
   138b4:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   138b8:	mov	r3, #0
   138bc:	str	r3, [sp, #4]
   138c0:	mov	r3, #5
   138c4:	str	r3, [sp]
   138c8:	ldr	r3, [pc, #44]	; 138fc <_start@@Base+0x13ec>
   138cc:	add	r3, pc, r3
   138d0:	mov	r2, #2
   138d4:	ldr	r1, [fp, #-12]
   138d8:	ldr	r0, [fp, #-8]
   138dc:	bl	1b8a8 <flatcc_json_printer_uint16_field@@Base>
   138e0:	nop	{0}
   138e4:	sub	sp, fp, #4
   138e8:	ldr	fp, [sp]
   138ec:	add	sp, sp, #4
   138f0:	pop	{pc}		; (ldr pc, [sp], #4)
   138f4:	andeq	r0, r1, r8, asr r5
   138f8:	andeq	r0, r1, r4, lsr #11
   138fc:	andeq	r0, r1, r0, lsl #11
   13900:	str	fp, [sp, #-8]!
   13904:	str	lr, [sp, #4]
   13908:	add	fp, sp, #4
   1390c:	sub	sp, sp, #24
   13910:	str	r0, [fp, #-8]
   13914:	str	r1, [fp, #-12]
   13918:	ldr	r3, [pc, #156]	; 139bc <_start@@Base+0x14ac>
   1391c:	add	r3, pc, r3
   13920:	str	r3, [sp, #4]
   13924:	mov	r3, #6
   13928:	str	r3, [sp]
   1392c:	ldr	r3, [pc, #140]	; 139c0 <_start@@Base+0x14b0>
   13930:	add	r3, pc, r3
   13934:	mov	r2, #0
   13938:	ldr	r1, [fp, #-12]
   1393c:	ldr	r0, [fp, #-8]
   13940:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   13944:	ldr	r3, [pc, #120]	; 139c4 <_start@@Base+0x14b4>
   13948:	add	r3, pc, r3
   1394c:	str	r3, [sp, #4]
   13950:	mov	r3, #5
   13954:	str	r3, [sp]
   13958:	ldr	r3, [pc, #104]	; 139c8 <_start@@Base+0x14b8>
   1395c:	add	r3, pc, r3
   13960:	mov	r2, #1
   13964:	ldr	r1, [fp, #-12]
   13968:	ldr	r0, [fp, #-8]
   1396c:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   13970:	ldr	r3, [pc, #84]	; 139cc <_start@@Base+0x14bc>
   13974:	add	r3, pc, r3
   13978:	str	r3, [sp, #8]
   1397c:	ldr	r3, [pc, #76]	; 139d0 <_start@@Base+0x14c0>
   13980:	add	r3, pc, r3
   13984:	str	r3, [sp, #4]
   13988:	mov	r3, #7
   1398c:	str	r3, [sp]
   13990:	ldr	r3, [pc, #60]	; 139d4 <_start@@Base+0x14c4>
   13994:	add	r3, pc, r3
   13998:	mov	r2, #3
   1399c:	ldr	r1, [fp, #-12]
   139a0:	ldr	r0, [fp, #-8]
   139a4:	bl	220ac <flatcc_json_printer_union_vector_field@@Base>
   139a8:	nop	{0}
   139ac:	sub	sp, fp, #4
   139b0:	ldr	fp, [sp]
   139b4:	add	sp, sp, #4
   139b8:	pop	{pc}		; (ldr pc, [sp], #4)
   139bc:	strheq	r0, [r0], -r4
   139c0:	andeq	r0, r1, r4, lsr #10
   139c4:	andeq	r0, r0, r4, lsl lr
   139c8:	andeq	r0, r1, r0, lsl #10
   139cc:			; <UNDEFINED> instruction: 0xfffff500
   139d0:			; <UNDEFINED> instruction: 0xfffff400
   139d4:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   139d8:	str	fp, [sp, #-8]!
   139dc:	str	lr, [sp, #4]
   139e0:	add	fp, sp, #4
   139e4:	sub	sp, sp, #16
   139e8:	str	r0, [fp, #-8]
   139ec:	str	r1, [fp, #-12]
   139f0:	ldr	r3, [pc, #144]	; 13a88 <_start@@Base+0x1578>
   139f4:	add	r3, pc, r3
   139f8:	str	r3, [sp, #4]
   139fc:	mov	r3, #21
   13a00:	str	r3, [sp]
   13a04:	ldr	r3, [pc, #128]	; 13a8c <_start@@Base+0x157c>
   13a08:	add	r3, pc, r3
   13a0c:	mov	r2, #0
   13a10:	ldr	r1, [fp, #-12]
   13a14:	ldr	r0, [fp, #-8]
   13a18:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   13a1c:	ldr	r3, [pc, #108]	; 13a90 <_start@@Base+0x1580>
   13a20:	add	r3, pc, r3
   13a24:	str	r3, [sp, #4]
   13a28:	mov	r3, #22
   13a2c:	str	r3, [sp]
   13a30:	ldr	r3, [pc, #92]	; 13a94 <_start@@Base+0x1584>
   13a34:	add	r3, pc, r3
   13a38:	mov	r2, #1
   13a3c:	ldr	r1, [fp, #-12]
   13a40:	ldr	r0, [fp, #-8]
   13a44:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   13a48:	ldr	r3, [pc, #72]	; 13a98 <_start@@Base+0x1588>
   13a4c:	add	r3, pc, r3
   13a50:	str	r3, [sp, #4]
   13a54:	mov	r3, #22
   13a58:	str	r3, [sp]
   13a5c:	ldr	r3, [pc, #56]	; 13a9c <_start@@Base+0x158c>
   13a60:	add	r3, pc, r3
   13a64:	mov	r2, #2
   13a68:	ldr	r1, [fp, #-12]
   13a6c:	ldr	r0, [fp, #-8]
   13a70:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   13a74:	nop	{0}
   13a78:	sub	sp, fp, #4
   13a7c:	ldr	fp, [sp]
   13a80:	add	sp, sp, #4
   13a84:	pop	{pc}		; (ldr pc, [sp], #4)
   13a88:	andeq	r0, r0, r4, lsr #1
   13a8c:	andeq	r0, r1, r4, ror #8
   13a90:	andeq	r0, r0, r4, lsr #4
   13a94:	andeq	r0, r1, r0, asr r4
   13a98:	andeq	r0, r0, r0, lsl #5
   13a9c:	andeq	r0, r1, ip, lsr r4
   13aa0:	str	fp, [sp, #-8]!
   13aa4:	str	lr, [sp, #4]
   13aa8:	add	fp, sp, #4
   13aac:	sub	sp, sp, #24
   13ab0:	str	r0, [fp, #-8]
   13ab4:	str	r1, [fp, #-12]
   13ab8:	mov	r3, #4
   13abc:	str	r3, [sp]
   13ac0:	ldr	r3, [pc, #352]	; 13c28 <_start@@Base+0x1718>
   13ac4:	add	r3, pc, r3
   13ac8:	mov	r2, #0
   13acc:	ldr	r1, [fp, #-12]
   13ad0:	ldr	r0, [fp, #-8]
   13ad4:	bl	1b5fc <flatcc_json_printer_string_field@@Base>
   13ad8:	mov	r3, #0
   13adc:	str	r3, [sp, #4]
   13ae0:	mov	r3, #9
   13ae4:	str	r3, [sp]
   13ae8:	ldr	r3, [pc, #316]	; 13c2c <_start@@Base+0x171c>
   13aec:	add	r3, pc, r3
   13af0:	mov	r2, #1
   13af4:	ldr	r1, [fp, #-12]
   13af8:	ldr	r0, [fp, #-8]
   13afc:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   13b00:	mov	r3, #4
   13b04:	str	r3, [sp]
   13b08:	ldr	r3, [pc, #288]	; 13c30 <_start@@Base+0x1720>
   13b0c:	add	r3, pc, r3
   13b10:	mov	r2, #2
   13b14:	ldr	r1, [fp, #-12]
   13b18:	ldr	r0, [fp, #-8]
   13b1c:	bl	1b5fc <flatcc_json_printer_string_field@@Base>
   13b20:	mov	r2, #0
   13b24:	mov	r3, #0
   13b28:	strd	r2, [sp, #8]
   13b2c:	mov	r3, #8
   13b30:	str	r3, [sp]
   13b34:	ldr	r3, [pc, #248]	; 13c34 <_start@@Base+0x1724>
   13b38:	add	r3, pc, r3
   13b3c:	mov	r2, #3
   13b40:	ldr	r1, [fp, #-12]
   13b44:	ldr	r0, [fp, #-8]
   13b48:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   13b4c:	mov	r3, #4
   13b50:	str	r3, [sp]
   13b54:	ldr	r3, [pc, #220]	; 13c38 <_start@@Base+0x1728>
   13b58:	add	r3, pc, r3
   13b5c:	mov	r2, #4
   13b60:	ldr	r1, [fp, #-12]
   13b64:	ldr	r0, [fp, #-8]
   13b68:	bl	1b5fc <flatcc_json_printer_string_field@@Base>
   13b6c:	mov	r2, #0
   13b70:	mov	r3, #0
   13b74:	strd	r2, [sp, #8]
   13b78:	mov	r3, #8
   13b7c:	str	r3, [sp]
   13b80:	ldr	r3, [pc, #180]	; 13c3c <_start@@Base+0x172c>
   13b84:	add	r3, pc, r3
   13b88:	mov	r2, #5
   13b8c:	ldr	r1, [fp, #-12]
   13b90:	ldr	r0, [fp, #-8]
   13b94:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   13b98:	mov	r3, #0
   13b9c:	str	r3, [sp, #4]
   13ba0:	mov	r3, #9
   13ba4:	str	r3, [sp]
   13ba8:	ldr	r3, [pc, #144]	; 13c40 <_start@@Base+0x1730>
   13bac:	add	r3, pc, r3
   13bb0:	mov	r2, #6
   13bb4:	ldr	r1, [fp, #-12]
   13bb8:	ldr	r0, [fp, #-8]
   13bbc:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   13bc0:	mov	r2, #0
   13bc4:	mov	r3, #0
   13bc8:	strd	r2, [sp, #8]
   13bcc:	mov	r3, #8
   13bd0:	str	r3, [sp]
   13bd4:	ldr	r3, [pc, #104]	; 13c44 <_start@@Base+0x1734>
   13bd8:	add	r3, pc, r3
   13bdc:	mov	r2, #7
   13be0:	ldr	r1, [fp, #-12]
   13be4:	ldr	r0, [fp, #-8]
   13be8:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   13bec:	mov	r3, #0
   13bf0:	str	r3, [sp, #4]
   13bf4:	mov	r3, #9
   13bf8:	str	r3, [sp]
   13bfc:	ldr	r3, [pc, #68]	; 13c48 <_start@@Base+0x1738>
   13c00:	add	r3, pc, r3
   13c04:	mov	r2, #8
   13c08:	ldr	r1, [fp, #-12]
   13c0c:	ldr	r0, [fp, #-8]
   13c10:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   13c14:	nop	{0}
   13c18:	sub	sp, fp, #4
   13c1c:	ldr	fp, [sp]
   13c20:	add	sp, sp, #4
   13c24:	pop	{pc}		; (ldr pc, [sp], #4)
   13c28:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   13c2c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   13c30:			; <UNDEFINED> instruction: 0x000103bc
   13c34:	muleq	r1, r8, r3
   13c38:	andeq	r0, r1, r4, lsl #7
   13c3c:	andeq	r0, r1, r0, ror #6
   13c40:	andeq	r0, r1, r4, asr #6
   13c44:	andeq	r0, r1, r4, lsr #6
   13c48:	andeq	r0, r1, r8, lsl #6
   13c4c:	str	fp, [sp, #-8]!
   13c50:	str	lr, [sp, #4]
   13c54:	add	fp, sp, #4
   13c58:	sub	sp, sp, #24
   13c5c:	str	r0, [fp, #-8]
   13c60:	str	r1, [fp, #-12]
   13c64:	mov	r2, #0
   13c68:	mov	r3, #0
   13c6c:	strd	r2, [sp, #8]
   13c70:	mov	r3, #15
   13c74:	str	r3, [sp]
   13c78:	ldr	r3, [pc, #76]	; 13ccc <_start@@Base+0x17bc>
   13c7c:	add	r3, pc, r3
   13c80:	mov	r2, #0
   13c84:	ldr	r1, [fp, #-12]
   13c88:	ldr	r0, [fp, #-8]
   13c8c:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   13c90:	mov	r3, #0
   13c94:	str	r3, [sp, #4]
   13c98:	mov	r3, #16
   13c9c:	str	r3, [sp]
   13ca0:	ldr	r3, [pc, #40]	; 13cd0 <_start@@Base+0x17c0>
   13ca4:	add	r3, pc, r3
   13ca8:	mov	r2, #1
   13cac:	ldr	r1, [fp, #-12]
   13cb0:	ldr	r0, [fp, #-8]
   13cb4:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   13cb8:	nop	{0}
   13cbc:	sub	sp, fp, #4
   13cc0:	ldr	fp, [sp]
   13cc4:	add	sp, sp, #4
   13cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   13ccc:	muleq	r1, r8, r2
   13cd0:	andeq	r0, r1, r0, lsl #5
   13cd4:	str	fp, [sp, #-8]!
   13cd8:	str	lr, [sp, #4]
   13cdc:	add	fp, sp, #4
   13ce0:	sub	sp, sp, #24
   13ce4:	str	r0, [fp, #-8]
   13ce8:	str	r1, [fp, #-12]
   13cec:	mov	r2, #0
   13cf0:	mov	r3, #0
   13cf4:	strd	r2, [sp, #8]
   13cf8:	mov	r3, #15
   13cfc:	str	r3, [sp]
   13d00:	ldr	r3, [pc, #76]	; 13d54 <_start@@Base+0x1844>
   13d04:	add	r3, pc, r3
   13d08:	mov	r2, #0
   13d0c:	ldr	r1, [fp, #-12]
   13d10:	ldr	r0, [fp, #-8]
   13d14:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   13d18:	mov	r3, #0
   13d1c:	str	r3, [sp, #4]
   13d20:	mov	r3, #21
   13d24:	str	r3, [sp]
   13d28:	ldr	r3, [pc, #40]	; 13d58 <_start@@Base+0x1848>
   13d2c:	add	r3, pc, r3
   13d30:	mov	r2, #1
   13d34:	ldr	r1, [fp, #-12]
   13d38:	ldr	r0, [fp, #-8]
   13d3c:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   13d40:	nop	{0}
   13d44:	sub	sp, fp, #4
   13d48:	ldr	fp, [sp]
   13d4c:	add	sp, sp, #4
   13d50:	pop	{pc}		; (ldr pc, [sp], #4)
   13d54:	andeq	r0, r1, r0, lsl r2
   13d58:	andeq	r0, r1, ip, lsl #4
   13d5c:	str	fp, [sp, #-8]!
   13d60:	str	lr, [sp, #4]
   13d64:	add	fp, sp, #4
   13d68:	sub	sp, sp, #16
   13d6c:	str	r0, [fp, #-8]
   13d70:	str	r1, [fp, #-12]
   13d74:	mov	r3, #0
   13d78:	str	r3, [sp, #4]
   13d7c:	mov	r3, #4
   13d80:	str	r3, [sp]
   13d84:	ldr	r3, [pc, #116]	; 13e00 <_start@@Base+0x18f0>
   13d88:	add	r3, pc, r3
   13d8c:	mov	r2, #0
   13d90:	ldr	r1, [fp, #-12]
   13d94:	ldr	r0, [fp, #-8]
   13d98:	bl	1b6b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13d9c:	mov	r3, #1
   13da0:	str	r3, [sp, #4]
   13da4:	mov	r3, #7
   13da8:	str	r3, [sp]
   13dac:	ldr	r3, [pc, #80]	; 13e04 <_start@@Base+0x18f4>
   13db0:	add	r3, pc, r3
   13db4:	mov	r2, #1
   13db8:	ldr	r1, [fp, #-12]
   13dbc:	ldr	r0, [fp, #-8]
   13dc0:	bl	1b6b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13dc4:	mov	r3, #0
   13dc8:	str	r3, [sp, #4]
   13dcc:	mov	r3, #6
   13dd0:	str	r3, [sp]
   13dd4:	ldr	r3, [pc, #44]	; 13e08 <_start@@Base+0x18f8>
   13dd8:	add	r3, pc, r3
   13ddc:	mov	r2, #2
   13de0:	ldr	r1, [fp, #-12]
   13de4:	ldr	r0, [fp, #-8]
   13de8:	bl	1b6b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   13dec:	nop	{0}
   13df0:	sub	sp, fp, #4
   13df4:	ldr	fp, [sp]
   13df8:	add	sp, sp, #4
   13dfc:	pop	{pc}		; (ldr pc, [sp], #4)
   13e00:	andeq	r0, r1, r8, asr #3
   13e04:	andeq	r0, r1, r8, lsr #3
   13e08:	andeq	r0, r1, r8, lsl #3
   13e0c:	str	fp, [sp, #-8]!
   13e10:	str	lr, [sp, #4]
   13e14:	add	fp, sp, #4
   13e18:	sub	sp, sp, #24
   13e1c:	str	r0, [fp, #-8]
   13e20:	str	r1, [fp, #-12]
   13e24:	ldr	r3, [pc, #1424]	; 143bc <_start@@Base+0x1eac>
   13e28:	add	r3, pc, r3
   13e2c:	str	r3, [sp, #4]
   13e30:	mov	r3, #3
   13e34:	str	r3, [sp]
   13e38:	ldr	r3, [pc, #1408]	; 143c0 <_start@@Base+0x1eb0>
   13e3c:	add	r3, pc, r3
   13e40:	mov	r2, #0
   13e44:	ldr	r1, [fp, #-12]
   13e48:	ldr	r0, [fp, #-8]
   13e4c:	bl	22b48 <flatcc_json_printer_struct_field@@Base>
   13e50:	mov	r3, #150	; 0x96
   13e54:	str	r3, [sp, #4]
   13e58:	mov	r3, #4
   13e5c:	str	r3, [sp]
   13e60:	ldr	r3, [pc, #1372]	; 143c4 <_start@@Base+0x1eb4>
   13e64:	add	r3, pc, r3
   13e68:	mov	r2, #1
   13e6c:	ldr	r1, [fp, #-12]
   13e70:	ldr	r0, [fp, #-8]
   13e74:	bl	1bd0c <flatcc_json_printer_int16_field@@Base>
   13e78:	mov	r3, #100	; 0x64
   13e7c:	str	r3, [sp, #4]
   13e80:	mov	r3, #2
   13e84:	str	r3, [sp]
   13e88:	ldr	r3, [pc, #1336]	; 143c8 <_start@@Base+0x1eb8>
   13e8c:	add	r3, pc, r3
   13e90:	mov	r2, #2
   13e94:	ldr	r1, [fp, #-12]
   13e98:	ldr	r0, [fp, #-8]
   13e9c:	bl	1bd0c <flatcc_json_printer_int16_field@@Base>
   13ea0:	mov	r3, #4
   13ea4:	str	r3, [sp]
   13ea8:	ldr	r3, [pc, #1308]	; 143cc <_start@@Base+0x1ebc>
   13eac:	add	r3, pc, r3
   13eb0:	mov	r2, #3
   13eb4:	ldr	r1, [fp, #-12]
   13eb8:	ldr	r0, [fp, #-8]
   13ebc:	bl	1b5fc <flatcc_json_printer_string_field@@Base>
   13ec0:	mov	r3, #9
   13ec4:	str	r3, [sp]
   13ec8:	ldr	r3, [pc, #1280]	; 143d0 <_start@@Base+0x1ec0>
   13ecc:	add	r3, pc, r3
   13ed0:	mov	r2, #5
   13ed4:	ldr	r1, [fp, #-12]
   13ed8:	ldr	r0, [fp, #-8]
   13edc:	bl	1e15c <flatcc_json_printer_uint8_vector_field@@Base>
   13ee0:	ldr	r3, [pc, #1260]	; 143d4 <_start@@Base+0x1ec4>
   13ee4:	add	r3, pc, r3
   13ee8:	str	r3, [sp, #8]
   13eec:	mov	r3, #8
   13ef0:	str	r3, [sp, #4]
   13ef4:	mov	r3, #5
   13ef8:	str	r3, [sp]
   13efc:	ldr	r3, [pc, #1236]	; 143d8 <_start@@Base+0x1ec8>
   13f00:	add	r3, pc, r3
   13f04:	mov	r2, #6
   13f08:	ldr	r1, [fp, #-12]
   13f0c:	ldr	r0, [fp, #-8]
   13f10:	bl	1c8ac <flatcc_json_printer_int8_enum_field@@Base>
   13f14:	ldr	r3, [pc, #1216]	; 143dc <_start@@Base+0x1ecc>
   13f18:	add	r3, pc, r3
   13f1c:	str	r3, [sp, #8]
   13f20:	ldr	r3, [pc, #1208]	; 143e0 <_start@@Base+0x1ed0>
   13f24:	add	r3, pc, r3
   13f28:	str	r3, [sp, #4]
   13f2c:	mov	r3, #4
   13f30:	str	r3, [sp]
   13f34:	ldr	r3, [pc, #1192]	; 143e4 <_start@@Base+0x1ed4>
   13f38:	add	r3, pc, r3
   13f3c:	mov	r2, #8
   13f40:	ldr	r1, [fp, #-12]
   13f44:	ldr	r0, [fp, #-8]
   13f48:	bl	22584 <flatcc_json_printer_union_field@@Base>
   13f4c:	ldr	r3, [pc, #1172]	; 143e8 <_start@@Base+0x1ed8>
   13f50:	add	r3, pc, r3
   13f54:	str	r3, [sp, #8]
   13f58:	mov	r3, #4
   13f5c:	str	r3, [sp, #4]
   13f60:	mov	r3, #5
   13f64:	str	r3, [sp]
   13f68:	ldr	r3, [pc, #1148]	; 143ec <_start@@Base+0x1edc>
   13f6c:	add	r3, pc, r3
   13f70:	mov	r2, #9
   13f74:	ldr	r1, [fp, #-12]
   13f78:	ldr	r0, [fp, #-8]
   13f7c:	bl	218ec <flatcc_json_printer_struct_vector_field@@Base>
   13f80:	mov	r3, #17
   13f84:	str	r3, [sp]
   13f88:	ldr	r3, [pc, #1120]	; 143f0 <_start@@Base+0x1ee0>
   13f8c:	add	r3, pc, r3
   13f90:	mov	r2, #10
   13f94:	ldr	r1, [fp, #-12]
   13f98:	ldr	r0, [fp, #-8]
   13f9c:	bl	21c64 <flatcc_json_printer_string_vector_field@@Base>
   13fa0:	ldr	r3, [pc, #1100]	; 143f4 <_start@@Base+0x1ee4>
   13fa4:	add	r3, pc, r3
   13fa8:	str	r3, [sp, #4]
   13fac:	mov	r3, #17
   13fb0:	str	r3, [sp]
   13fb4:	ldr	r3, [pc, #1084]	; 143f8 <_start@@Base+0x1ee8>
   13fb8:	add	r3, pc, r3
   13fbc:	mov	r2, #11
   13fc0:	ldr	r1, [fp, #-12]
   13fc4:	ldr	r0, [fp, #-8]
   13fc8:	bl	21ec0 <flatcc_json_printer_table_vector_field@@Base>
   13fcc:	ldr	r3, [pc, #1064]	; 143fc <_start@@Base+0x1eec>
   13fd0:	add	r3, pc, r3
   13fd4:	str	r3, [sp, #4]
   13fd8:	mov	r3, #5
   13fdc:	str	r3, [sp]
   13fe0:	ldr	r3, [pc, #1048]	; 14400 <_start@@Base+0x1ef0>
   13fe4:	add	r3, pc, r3
   13fe8:	mov	r2, #12
   13fec:	ldr	r1, [fp, #-12]
   13ff0:	ldr	r0, [fp, #-8]
   13ff4:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   13ff8:	ldr	r3, [pc, #1028]	; 14404 <_start@@Base+0x1ef4>
   13ffc:	add	r3, pc, r3
   14000:	str	r3, [sp, #8]
   14004:	mov	r3, #0
   14008:	str	r3, [sp, #4]
   1400c:	mov	r3, #20
   14010:	str	r3, [sp]
   14014:	ldr	r3, [pc, #1004]	; 14408 <_start@@Base+0x1ef8>
   14018:	add	r3, pc, r3
   1401c:	mov	r2, #13
   14020:	ldr	r1, [fp, #-12]
   14024:	ldr	r0, [fp, #-8]
   14028:	bl	231ec <flatcc_json_printer_table_as_nested_root@@Base>
   1402c:	ldr	r3, [pc, #984]	; 1440c <_start@@Base+0x1efc>
   14030:	add	r3, pc, r3
   14034:	str	r3, [sp, #4]
   14038:	mov	r3, #9
   1403c:	str	r3, [sp]
   14040:	ldr	r3, [pc, #968]	; 14410 <_start@@Base+0x1f00>
   14044:	add	r3, pc, r3
   14048:	mov	r2, #14
   1404c:	ldr	r1, [fp, #-12]
   14050:	ldr	r0, [fp, #-8]
   14054:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   14058:	mov	r3, #1
   1405c:	str	r3, [sp, #4]
   14060:	mov	r3, #8
   14064:	str	r3, [sp]
   14068:	ldr	r3, [pc, #932]	; 14414 <_start@@Base+0x1f04>
   1406c:	add	r3, pc, r3
   14070:	mov	r2, #15
   14074:	ldr	r1, [fp, #-12]
   14078:	ldr	r0, [fp, #-8]
   1407c:	bl	1c054 <flatcc_json_printer_bool_field@@Base>
   14080:	mov	r3, #0
   14084:	str	r3, [sp, #4]
   14088:	mov	r3, #16
   1408c:	str	r3, [sp]
   14090:	ldr	r3, [pc, #896]	; 14418 <_start@@Base+0x1f08>
   14094:	add	r3, pc, r3
   14098:	mov	r2, #16
   1409c:	ldr	r1, [fp, #-12]
   140a0:	ldr	r0, [fp, #-8]
   140a4:	bl	1be28 <flatcc_json_printer_int32_field@@Base>
   140a8:	mov	r3, #0
   140ac:	str	r3, [sp, #4]
   140b0:	mov	r3, #16
   140b4:	str	r3, [sp]
   140b8:	ldr	r3, [pc, #860]	; 1441c <_start@@Base+0x1f0c>
   140bc:	add	r3, pc, r3
   140c0:	mov	r2, #17
   140c4:	ldr	r1, [fp, #-12]
   140c8:	ldr	r0, [fp, #-8]
   140cc:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   140d0:	mov	r2, #0
   140d4:	mov	r3, #0
   140d8:	strd	r2, [sp, #8]
   140dc:	mov	r3, #16
   140e0:	str	r3, [sp]
   140e4:	ldr	r3, [pc, #820]	; 14420 <_start@@Base+0x1f10>
   140e8:	add	r3, pc, r3
   140ec:	mov	r2, #18
   140f0:	ldr	r1, [fp, #-12]
   140f4:	ldr	r0, [fp, #-8]
   140f8:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   140fc:	mov	r2, #0
   14100:	mov	r3, #0
   14104:	strd	r2, [sp, #8]
   14108:	mov	r3, #16
   1410c:	str	r3, [sp]
   14110:	ldr	r3, [pc, #780]	; 14424 <_start@@Base+0x1f14>
   14114:	add	r3, pc, r3
   14118:	mov	r2, #19
   1411c:	ldr	r1, [fp, #-12]
   14120:	ldr	r0, [fp, #-8]
   14124:	bl	1bad8 <flatcc_json_printer_uint64_field@@Base>
   14128:	mov	r3, #0
   1412c:	str	r3, [sp, #4]
   14130:	mov	r3, #17
   14134:	str	r3, [sp]
   14138:	ldr	r3, [pc, #744]	; 14428 <_start@@Base+0x1f18>
   1413c:	add	r3, pc, r3
   14140:	mov	r2, #20
   14144:	ldr	r1, [fp, #-12]
   14148:	ldr	r0, [fp, #-8]
   1414c:	bl	1be28 <flatcc_json_printer_int32_field@@Base>
   14150:	mov	r3, #0
   14154:	str	r3, [sp, #4]
   14158:	mov	r3, #17
   1415c:	str	r3, [sp]
   14160:	ldr	r3, [pc, #708]	; 1442c <_start@@Base+0x1f1c>
   14164:	add	r3, pc, r3
   14168:	mov	r2, #21
   1416c:	ldr	r1, [fp, #-12]
   14170:	ldr	r0, [fp, #-8]
   14174:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   14178:	mov	r2, #0
   1417c:	mov	r3, #0
   14180:	strd	r2, [sp, #8]
   14184:	mov	r3, #17
   14188:	str	r3, [sp]
   1418c:	ldr	r3, [pc, #668]	; 14430 <_start@@Base+0x1f20>
   14190:	add	r3, pc, r3
   14194:	mov	r2, #22
   14198:	ldr	r1, [fp, #-12]
   1419c:	ldr	r0, [fp, #-8]
   141a0:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   141a4:	mov	r2, #0
   141a8:	mov	r3, #0
   141ac:	strd	r2, [sp, #8]
   141b0:	mov	r3, #17
   141b4:	str	r3, [sp]
   141b8:	ldr	r3, [pc, #628]	; 14434 <_start@@Base+0x1f24>
   141bc:	add	r3, pc, r3
   141c0:	mov	r2, #23
   141c4:	ldr	r1, [fp, #-12]
   141c8:	ldr	r0, [fp, #-8]
   141cc:	bl	1bad8 <flatcc_json_printer_uint64_field@@Base>
   141d0:	mov	r3, #16
   141d4:	str	r3, [sp]
   141d8:	ldr	r3, [pc, #600]	; 14438 <_start@@Base+0x1f28>
   141dc:	add	r3, pc, r3
   141e0:	mov	r2, #24
   141e4:	ldr	r1, [fp, #-12]
   141e8:	ldr	r0, [fp, #-8]
   141ec:	bl	1f69c <flatcc_json_printer_bool_vector_field@@Base>
   141f0:	mov	r3, #5
   141f4:	str	r3, [sp]
   141f8:	vldr	s0, [pc, #432]	; 143b0 <_start@@Base+0x1ea0>
   141fc:	ldr	r3, [pc, #568]	; 1443c <_start@@Base+0x1f2c>
   14200:	add	r3, pc, r3
   14204:	mov	r2, #25
   14208:	ldr	r1, [fp, #-12]
   1420c:	ldr	r0, [fp, #-8]
   14210:	bl	1c170 <flatcc_json_printer_float_field@@Base>
   14214:	mov	r3, #6
   14218:	str	r3, [sp]
   1421c:	vldr	s0, [pc, #400]	; 143b4 <_start@@Base+0x1ea4>
   14220:	ldr	r3, [pc, #536]	; 14440 <_start@@Base+0x1f30>
   14224:	add	r3, pc, r3
   14228:	mov	r2, #26
   1422c:	ldr	r1, [fp, #-12]
   14230:	ldr	r0, [fp, #-8]
   14234:	bl	1c170 <flatcc_json_printer_float_field@@Base>
   14238:	mov	r3, #6
   1423c:	str	r3, [sp]
   14240:	vldr	s0, [pc, #368]	; 143b8 <_start@@Base+0x1ea8>
   14244:	ldr	r3, [pc, #504]	; 14444 <_start@@Base+0x1f34>
   14248:	add	r3, pc, r3
   1424c:	mov	r2, #27
   14250:	ldr	r1, [fp, #-12]
   14254:	ldr	r0, [fp, #-8]
   14258:	bl	1c170 <flatcc_json_printer_float_field@@Base>
   1425c:	mov	r3, #18
   14260:	str	r3, [sp]
   14264:	ldr	r3, [pc, #476]	; 14448 <_start@@Base+0x1f38>
   14268:	add	r3, pc, r3
   1426c:	mov	r2, #28
   14270:	ldr	r1, [fp, #-12]
   14274:	ldr	r0, [fp, #-8]
   14278:	bl	21c64 <flatcc_json_printer_string_vector_field@@Base>
   1427c:	ldr	r3, [pc, #456]	; 1444c <_start@@Base+0x1f3c>
   14280:	add	r3, pc, r3
   14284:	str	r3, [sp, #8]
   14288:	mov	r3, #8
   1428c:	str	r3, [sp, #4]
   14290:	mov	r3, #23
   14294:	str	r3, [sp]
   14298:	ldr	r3, [pc, #432]	; 14450 <_start@@Base+0x1f40>
   1429c:	add	r3, pc, r3
   142a0:	mov	r2, #29
   142a4:	ldr	r1, [fp, #-12]
   142a8:	ldr	r0, [fp, #-8]
   142ac:	bl	218ec <flatcc_json_printer_struct_vector_field@@Base>
   142b0:	mov	r3, #4
   142b4:	str	r3, [sp]
   142b8:	ldr	r3, [pc, #404]	; 14454 <_start@@Base+0x1f44>
   142bc:	add	r3, pc, r3
   142c0:	mov	r2, #30
   142c4:	ldr	r1, [fp, #-12]
   142c8:	ldr	r0, [fp, #-8]
   142cc:	bl	1e15c <flatcc_json_printer_uint8_vector_field@@Base>
   142d0:	ldr	r3, [pc, #384]	; 14458 <_start@@Base+0x1f48>
   142d4:	add	r3, pc, r3
   142d8:	str	r3, [sp, #8]
   142dc:	mov	r3, #4
   142e0:	str	r3, [sp, #4]
   142e4:	mov	r3, #5
   142e8:	str	r3, [sp]
   142ec:	ldr	r3, [pc, #360]	; 1445c <_start@@Base+0x1f4c>
   142f0:	add	r3, pc, r3
   142f4:	mov	r2, #31
   142f8:	ldr	r1, [fp, #-12]
   142fc:	ldr	r0, [fp, #-8]
   14300:	bl	218ec <flatcc_json_printer_struct_vector_field@@Base>
   14304:	mov	r3, #15
   14308:	str	r3, [sp]
   1430c:	ldr	r3, [pc, #332]	; 14460 <_start@@Base+0x1f50>
   14310:	add	r3, pc, r3
   14314:	mov	r2, #32
   14318:	ldr	r1, [fp, #-12]
   1431c:	ldr	r0, [fp, #-8]
   14320:	bl	1f404 <flatcc_json_printer_int64_vector_field@@Base>
   14324:	mov	r3, #17
   14328:	str	r3, [sp]
   1432c:	ldr	r3, [pc, #304]	; 14464 <_start@@Base+0x1f54>
   14330:	add	r3, pc, r3
   14334:	mov	r2, #33	; 0x21
   14338:	ldr	r1, [fp, #-12]
   1433c:	ldr	r0, [fp, #-8]
   14340:	bl	1fbfc <flatcc_json_printer_double_vector_field@@Base>
   14344:	ldr	r3, [pc, #284]	; 14468 <_start@@Base+0x1f58>
   14348:	add	r3, pc, r3
   1434c:	str	r3, [sp, #4]
   14350:	mov	r3, #21
   14354:	str	r3, [sp]
   14358:	ldr	r3, [pc, #268]	; 1446c <_start@@Base+0x1f5c>
   1435c:	add	r3, pc, r3
   14360:	mov	r2, #34	; 0x22
   14364:	ldr	r1, [fp, #-12]
   14368:	ldr	r0, [fp, #-8]
   1436c:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   14370:	ldr	r3, [pc, #248]	; 14470 <_start@@Base+0x1f60>
   14374:	add	r3, pc, r3
   14378:	str	r3, [sp, #4]
   1437c:	mov	r3, #10
   14380:	str	r3, [sp]
   14384:	ldr	r3, [pc, #232]	; 14474 <_start@@Base+0x1f64>
   14388:	add	r3, pc, r3
   1438c:	mov	r2, #35	; 0x23
   14390:	ldr	r1, [fp, #-12]
   14394:	ldr	r0, [fp, #-8]
   14398:	bl	224c8 <flatcc_json_printer_table_field@@Base>
   1439c:	nop	{0}
   143a0:	sub	sp, fp, #4
   143a4:	ldr	fp, [sp]
   143a8:	add	sp, sp, #4
   143ac:	pop	{pc}		; (ldr pc, [sp], #4)
   143b0:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   143b4:	submi	r0, r0, r0
   143b8:	andeq	r0, r0, r0
   143bc:			; <UNDEFINED> instruction: 0xfffff458
   143c0:	andeq	r0, r1, ip, lsr #2
   143c4:	andeq	r0, r1, r8, lsl #2
   143c8:	andeq	r0, r1, r8, ror #1
   143cc:	andeq	r0, r1, ip, asr #1
   143d0:	strheq	r0, [r1], -r4
   143d4:			; <UNDEFINED> instruction: 0xffffec14
   143d8:	andeq	pc, r0, r0, lsl #30
   143dc:			; <UNDEFINED> instruction: 0xffffef5c
   143e0:			; <UNDEFINED> instruction: 0xffffee5c
   143e4:	andeq	r0, r1, r4, asr r0
   143e8:			; <UNDEFINED> instruction: 0xfffff288
   143ec:	andeq	r0, r1, r8, lsr #32
   143f0:	andeq	r0, r1, r0, lsl r0
   143f4:			; <UNDEFINED> instruction: 0xfffffe60
   143f8:	strdeq	pc, [r0], -r8
   143fc:			; <UNDEFINED> instruction: 0xfffffe34
   14400:	andeq	pc, r0, r0, ror #31
   14404:			; <UNDEFINED> instruction: 0xfffffe08
   14408:			; <UNDEFINED> instruction: 0x0000ffb4
   1440c:			; <UNDEFINED> instruction: 0xfffff81c
   14410:	andeq	pc, r0, r0, lsr #31
   14414:	andeq	pc, r0, r4, lsl #31
   14418:	andeq	pc, r0, r8, ror #30
   1441c:	andeq	pc, r0, r4, asr pc	; <UNPREDICTABLE>
   14420:	andeq	pc, r0, ip, lsr pc	; <UNPREDICTABLE>
   14424:	andeq	pc, r0, r4, lsr #30
   14428:	andeq	pc, r0, r0, lsl pc	; <UNPREDICTABLE>
   1442c:	strdeq	pc, [r0], -ip
   14430:	andeq	pc, r0, r4, ror #29
   14434:	andeq	pc, r0, ip, asr #29
   14438:	andeq	pc, r0, r0, asr #29
   1443c:			; <UNDEFINED> instruction: 0x0000feb0
   14440:	muleq	r0, r4, lr
   14444:	andeq	pc, r0, r8, ror lr	; <UNPREDICTABLE>
   14448:	andeq	pc, r0, r0, ror #28
   1444c:			; <UNDEFINED> instruction: 0xfffff154
   14450:	andeq	pc, r0, r0, asr #28
   14454:	andeq	pc, r0, r8, lsr lr	; <UNPREDICTABLE>
   14458:			; <UNDEFINED> instruction: 0xffffef04
   1445c:	andeq	pc, r0, ip, lsl #28
   14460:	strdeq	pc, [r0], -r4
   14464:	andeq	pc, r0, r4, ror #27
   14468:			; <UNDEFINED> instruction: 0xfffff1c0
   1446c:	andeq	pc, r0, ip, asr #27
   14470:			; <UNDEFINED> instruction: 0xfffff9e0
   14474:			; <UNDEFINED> instruction: 0x0000fdb8
   14478:	str	fp, [sp, #-8]!
   1447c:	str	lr, [sp, #4]
   14480:	add	fp, sp, #4
   14484:	sub	sp, sp, #24
   14488:	str	r0, [fp, #-8]
   1448c:	str	r1, [fp, #-12]
   14490:	str	r2, [fp, #-16]
   14494:	str	r3, [fp, #-20]	; 0xffffffec
   14498:	ldr	r3, [pc, #48]	; 144d0 <_start@@Base+0x1fc0>
   1449c:	add	r3, pc, r3
   144a0:	str	r3, [sp]
   144a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   144a8:	ldr	r2, [fp, #-16]
   144ac:	ldr	r1, [fp, #-12]
   144b0:	ldr	r0, [fp, #-8]
   144b4:	bl	22f4c <flatcc_json_printer_table_as_root@@Base>
   144b8:	mov	r3, r0
   144bc:	mov	r0, r3
   144c0:	sub	sp, fp, #4
   144c4:	ldr	fp, [sp]
   144c8:	add	sp, sp, #4
   144cc:	pop	{pc}		; (ldr pc, [sp], #4)
   144d0:			; <UNDEFINED> instruction: 0xfffff968
   144d4:	str	fp, [sp, #-8]!
   144d8:	str	lr, [sp, #4]
   144dc:	add	fp, sp, #4
   144e0:	sub	sp, sp, #24
   144e4:	str	r0, [fp, #-8]
   144e8:	str	r1, [fp, #-12]
   144ec:	mov	r3, #0
   144f0:	str	r3, [sp, #4]
   144f4:	mov	r3, #2
   144f8:	str	r3, [sp]
   144fc:	ldr	r3, [pc, #472]	; 146dc <_start@@Base+0x21cc>
   14500:	add	r3, pc, r3
   14504:	mov	r2, #0
   14508:	ldr	r1, [fp, #-12]
   1450c:	ldr	r0, [fp, #-8]
   14510:	bl	1bbf0 <flatcc_json_printer_int8_field@@Base>
   14514:	mov	r3, #0
   14518:	str	r3, [sp, #4]
   1451c:	mov	r3, #2
   14520:	str	r3, [sp]
   14524:	ldr	r3, [pc, #436]	; 146e0 <_start@@Base+0x21d0>
   14528:	add	r3, pc, r3
   1452c:	mov	r2, #1
   14530:	ldr	r1, [fp, #-12]
   14534:	ldr	r0, [fp, #-8]
   14538:	bl	1b78c <flatcc_json_printer_uint8_field@@Base>
   1453c:	mov	r3, #0
   14540:	str	r3, [sp, #4]
   14544:	mov	r3, #3
   14548:	str	r3, [sp]
   1454c:	ldr	r3, [pc, #400]	; 146e4 <_start@@Base+0x21d4>
   14550:	add	r3, pc, r3
   14554:	mov	r2, #2
   14558:	ldr	r1, [fp, #-12]
   1455c:	ldr	r0, [fp, #-8]
   14560:	bl	1bd0c <flatcc_json_printer_int16_field@@Base>
   14564:	mov	r3, #0
   14568:	str	r3, [sp, #4]
   1456c:	mov	r3, #3
   14570:	str	r3, [sp]
   14574:	ldr	r3, [pc, #364]	; 146e8 <_start@@Base+0x21d8>
   14578:	add	r3, pc, r3
   1457c:	mov	r2, #3
   14580:	ldr	r1, [fp, #-12]
   14584:	ldr	r0, [fp, #-8]
   14588:	bl	1b8a8 <flatcc_json_printer_uint16_field@@Base>
   1458c:	mov	r3, #0
   14590:	str	r3, [sp, #4]
   14594:	mov	r3, #3
   14598:	str	r3, [sp]
   1459c:	ldr	r3, [pc, #328]	; 146ec <_start@@Base+0x21dc>
   145a0:	add	r3, pc, r3
   145a4:	mov	r2, #4
   145a8:	ldr	r1, [fp, #-12]
   145ac:	ldr	r0, [fp, #-8]
   145b0:	bl	1be28 <flatcc_json_printer_int32_field@@Base>
   145b4:	mov	r3, #0
   145b8:	str	r3, [sp, #4]
   145bc:	mov	r3, #3
   145c0:	str	r3, [sp]
   145c4:	ldr	r3, [pc, #292]	; 146f0 <_start@@Base+0x21e0>
   145c8:	add	r3, pc, r3
   145cc:	mov	r2, #5
   145d0:	ldr	r1, [fp, #-12]
   145d4:	ldr	r0, [fp, #-8]
   145d8:	bl	1b9c4 <flatcc_json_printer_uint32_field@@Base>
   145dc:	mov	r2, #0
   145e0:	mov	r3, #0
   145e4:	strd	r2, [sp, #8]
   145e8:	mov	r3, #3
   145ec:	str	r3, [sp]
   145f0:	ldr	r3, [pc, #252]	; 146f4 <_start@@Base+0x21e4>
   145f4:	add	r3, pc, r3
   145f8:	mov	r2, #6
   145fc:	ldr	r1, [fp, #-12]
   14600:	ldr	r0, [fp, #-8]
   14604:	bl	1bf3c <flatcc_json_printer_int64_field@@Base>
   14608:	mov	r2, #0
   1460c:	mov	r3, #0
   14610:	strd	r2, [sp, #8]
   14614:	mov	r3, #3
   14618:	str	r3, [sp]
   1461c:	ldr	r3, [pc, #212]	; 146f8 <_start@@Base+0x21e8>
   14620:	add	r3, pc, r3
   14624:	mov	r2, #7
   14628:	ldr	r1, [fp, #-12]
   1462c:	ldr	r0, [fp, #-8]
   14630:	bl	1bad8 <flatcc_json_printer_uint64_field@@Base>
   14634:	mov	r3, #3
   14638:	str	r3, [sp]
   1463c:	vldr	s0, [pc, #148]	; 146d8 <_start@@Base+0x21c8>
   14640:	ldr	r3, [pc, #180]	; 146fc <_start@@Base+0x21ec>
   14644:	add	r3, pc, r3
   14648:	mov	r2, #8
   1464c:	ldr	r1, [fp, #-12]
   14650:	ldr	r0, [fp, #-8]
   14654:	bl	1c170 <flatcc_json_printer_float_field@@Base>
   14658:	mov	r3, #3
   1465c:	str	r3, [sp]
   14660:	vldr	d0, [pc, #104]	; 146d0 <_start@@Base+0x21c0>
   14664:	ldr	r3, [pc, #148]	; 14700 <_start@@Base+0x21f0>
   14668:	add	r3, pc, r3
   1466c:	mov	r2, #9
   14670:	ldr	r1, [fp, #-12]
   14674:	ldr	r0, [fp, #-8]
   14678:	bl	1c294 <flatcc_json_printer_double_field@@Base>
   1467c:	mov	r3, #2
   14680:	str	r3, [sp]
   14684:	ldr	r3, [pc, #120]	; 14704 <_start@@Base+0x21f4>
   14688:	add	r3, pc, r3
   1468c:	mov	r2, #10
   14690:	ldr	r1, [fp, #-12]
   14694:	ldr	r0, [fp, #-8]
   14698:	bl	1ebfc <flatcc_json_printer_int8_vector_field@@Base>
   1469c:	mov	r3, #4
   146a0:	str	r3, [sp]
   146a4:	ldr	r3, [pc, #92]	; 14708 <_start@@Base+0x21f8>
   146a8:	add	r3, pc, r3
   146ac:	mov	r2, #11
   146b0:	ldr	r1, [fp, #-12]
   146b4:	ldr	r0, [fp, #-8]
   146b8:	bl	1fbfc <flatcc_json_printer_double_vector_field@@Base>
   146bc:	nop	{0}
   146c0:	sub	sp, fp, #4
   146c4:	ldr	fp, [sp]
   146c8:	add	sp, sp, #4
   146cc:	pop	{pc}		; (ldr pc, [sp], #4)
	...
   146dc:	andeq	pc, r0, ip, asr #24
   146e0:	andeq	pc, r0, r8, lsr #24
   146e4:	andeq	pc, r0, r4, lsl #24
   146e8:	andeq	pc, r0, r0, ror #23
   146ec:			; <UNDEFINED> instruction: 0x0000fbbc
   146f0:	muleq	r0, r8, fp
   146f4:	andeq	pc, r0, r0, ror fp	; <UNPREDICTABLE>
   146f8:	andeq	pc, r0, r8, asr #22
   146fc:	andeq	pc, r0, r8, lsr #22
   14700:	andeq	pc, r0, r8, lsl #22
   14704:	andeq	pc, r0, ip, ror #21
   14708:	ldrdeq	pc, [r0], -r0
   1470c:	str	fp, [sp, #-8]!
   14710:	str	lr, [sp, #4]
   14714:	add	fp, sp, #4
   14718:	sub	sp, sp, #16
   1471c:	str	r0, [fp, #-8]
   14720:	str	r1, [fp, #-12]
   14724:	mov	r3, #0
   14728:	str	r3, [sp, #4]
   1472c:	mov	r3, #19
   14730:	str	r3, [sp]
   14734:	ldr	r3, [pc, #36]	; 14760 <_start@@Base+0x2250>
   14738:	add	r3, pc, r3
   1473c:	mov	r2, #0
   14740:	ldr	r1, [fp, #-12]
   14744:	ldr	r0, [fp, #-8]
   14748:	bl	1be28 <flatcc_json_printer_int32_field@@Base>
   1474c:	nop	{0}
   14750:	sub	sp, fp, #4
   14754:	ldr	fp, [sp]
   14758:	add	sp, sp, #4
   1475c:	pop	{pc}		; (ldr pc, [sp], #4)
   14760:	andeq	pc, r0, r8, asr #20
   14764:	str	fp, [sp, #-8]!
   14768:	str	lr, [sp, #4]
   1476c:	add	fp, sp, #4
   14770:	sub	sp, sp, #24
   14774:	str	r0, [fp, #-8]
   14778:	str	r1, [fp, #-12]
   1477c:	ldr	r3, [pc, #292]	; 148a8 <_start@@Base+0x2398>
   14780:	add	r3, pc, r3
   14784:	str	r3, [sp, #8]
   14788:	ldr	r3, [pc, #284]	; 148ac <_start@@Base+0x239c>
   1478c:	add	r3, pc, r3
   14790:	str	r3, [sp, #4]
   14794:	mov	r3, #14
   14798:	str	r3, [sp]
   1479c:	ldr	r3, [pc, #268]	; 148b0 <_start@@Base+0x23a0>
   147a0:	add	r3, pc, r3
   147a4:	mov	r2, #1
   147a8:	ldr	r1, [fp, #-12]
   147ac:	ldr	r0, [fp, #-8]
   147b0:	bl	22584 <flatcc_json_printer_union_field@@Base>
   147b4:	ldr	r3, [pc, #248]	; 148b4 <_start@@Base+0x23a4>
   147b8:	add	r3, pc, r3
   147bc:	str	r3, [sp, #8]
   147c0:	ldr	r3, [pc, #240]	; 148b8 <_start@@Base+0x23a8>
   147c4:	add	r3, pc, r3
   147c8:	str	r3, [sp, #4]
   147cc:	mov	r3, #10
   147d0:	str	r3, [sp]
   147d4:	ldr	r3, [pc, #224]	; 148bc <_start@@Base+0x23ac>
   147d8:	add	r3, pc, r3
   147dc:	mov	r2, #3
   147e0:	ldr	r1, [fp, #-12]
   147e4:	ldr	r0, [fp, #-8]
   147e8:	bl	22584 <flatcc_json_printer_union_field@@Base>
   147ec:	ldr	r3, [pc, #204]	; 148c0 <_start@@Base+0x23b0>
   147f0:	add	r3, pc, r3
   147f4:	str	r3, [sp, #8]
   147f8:	ldr	r3, [pc, #196]	; 148c4 <_start@@Base+0x23b4>
   147fc:	add	r3, pc, r3
   14800:	str	r3, [sp, #4]
   14804:	mov	r3, #9
   14808:	str	r3, [sp]
   1480c:	ldr	r3, [pc, #180]	; 148c8 <_start@@Base+0x23b8>
   14810:	add	r3, pc, r3
   14814:	mov	r2, #5
   14818:	ldr	r1, [fp, #-12]
   1481c:	ldr	r0, [fp, #-8]
   14820:	bl	22584 <flatcc_json_printer_union_field@@Base>
   14824:	ldr	r3, [pc, #160]	; 148cc <_start@@Base+0x23bc>
   14828:	add	r3, pc, r3
   1482c:	str	r3, [sp, #8]
   14830:	ldr	r3, [pc, #152]	; 148d0 <_start@@Base+0x23c0>
   14834:	add	r3, pc, r3
   14838:	str	r3, [sp, #4]
   1483c:	mov	r3, #5
   14840:	str	r3, [sp]
   14844:	ldr	r3, [pc, #136]	; 148d4 <_start@@Base+0x23c4>
   14848:	add	r3, pc, r3
   1484c:	mov	r2, #7
   14850:	ldr	r1, [fp, #-12]
   14854:	ldr	r0, [fp, #-8]
   14858:	bl	22584 <flatcc_json_printer_union_field@@Base>
   1485c:	ldr	r3, [pc, #116]	; 148d8 <_start@@Base+0x23c8>
   14860:	add	r3, pc, r3
   14864:	str	r3, [sp, #8]
   14868:	ldr	r3, [pc, #108]	; 148dc <_start@@Base+0x23cc>
   1486c:	add	r3, pc, r3
   14870:	str	r3, [sp, #4]
   14874:	mov	r3, #10
   14878:	str	r3, [sp]
   1487c:	ldr	r3, [pc, #92]	; 148e0 <_start@@Base+0x23d0>
   14880:	add	r3, pc, r3
   14884:	mov	r2, #9
   14888:	ldr	r1, [fp, #-12]
   1488c:	ldr	r0, [fp, #-8]
   14890:	bl	220ac <flatcc_json_printer_union_vector_field@@Base>
   14894:	nop	{0}
   14898:	sub	sp, fp, #4
   1489c:	ldr	fp, [sp]
   148a0:	add	sp, sp, #4
   148a4:	pop	{pc}		; (ldr pc, [sp], #4)
   148a8:			; <UNDEFINED> instruction: 0xffffe920
   148ac:			; <UNDEFINED> instruction: 0xffffe7c0
   148b0:	strdeq	pc, [r0], -r4
   148b4:			; <UNDEFINED> instruction: 0xffffe8e8
   148b8:			; <UNDEFINED> instruction: 0xffffe788
   148bc:	andeq	pc, r0, ip, asr #19
   148c0:			; <UNDEFINED> instruction: 0xffffe8b0
   148c4:			; <UNDEFINED> instruction: 0xffffe750
   148c8:	andeq	pc, r0, r0, lsr #19
   148cc:			; <UNDEFINED> instruction: 0xffffe878
   148d0:			; <UNDEFINED> instruction: 0xffffe718
   148d4:	andeq	pc, r0, r4, ror r9	; <UNPREDICTABLE>
   148d8:			; <UNDEFINED> instruction: 0xffffe840
   148dc:			; <UNDEFINED> instruction: 0xffffe6e0
   148e0:	andeq	pc, r0, r4, asr #18
   148e4:	str	fp, [sp, #-8]!
   148e8:	str	lr, [sp, #4]
   148ec:	add	fp, sp, #4
   148f0:	sub	sp, sp, #64	; 0x40
   148f4:	str	r0, [fp, #-56]	; 0xffffffc8
   148f8:	str	r1, [fp, #-60]	; 0xffffffc4
   148fc:	str	r2, [fp, #-64]	; 0xffffffc0
   14900:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14904:	cmp	r3, #0
   14908:	bne	14920 <_start@@Base+0x2410>
   1490c:	sub	r3, fp, #52	; 0x34
   14910:	str	r3, [fp, #-56]	; 0xffffffc8
   14914:	mov	r1, #0
   14918:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1491c:	bl	23458 <flatcc_json_printer_init@@Base>
   14920:	ldr	r3, [pc, #40]	; 14950 <_start@@Base+0x2440>
   14924:	add	r3, pc, r3
   14928:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1492c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   14930:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14934:	bl	14478 <_start@@Base+0x1f68>
   14938:	mov	r3, r0
   1493c:	mov	r0, r3
   14940:	sub	sp, fp, #4
   14944:	ldr	fp, [sp]
   14948:	add	sp, sp, #4
   1494c:	pop	{pc}		; (ldr pc, [sp], #4)
   14950:	andeq	pc, r0, ip, lsr #17
   14954:	str	fp, [sp, #-8]!
   14958:	str	lr, [sp, #4]
   1495c:	add	fp, sp, #4
   14960:	sub	sp, sp, #40	; 0x28
   14964:	str	r0, [fp, #-32]	; 0xffffffe0
   14968:	str	r1, [fp, #-36]	; 0xffffffdc
   1496c:	str	r2, [fp, #-40]	; 0xffffffd8
   14970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14974:	cmp	r3, #0
   14978:	bne	14984 <_start@@Base+0x2474>
   1497c:	sub	r3, fp, #28
   14980:	b	14988 <_start@@Base+0x2478>
   14984:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14988:	str	r3, [fp, #-40]	; 0xffffffd8
   1498c:	ldr	r3, [pc, #404]	; 14b28 <_start@@Base+0x2618>
   14990:	add	r3, pc, r3
   14994:	mov	r1, r3
   14998:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1499c:	bl	123fc <fopen@plt>
   149a0:	str	r0, [fp, #-20]	; 0xffffffec
   149a4:	mov	r3, #0
   149a8:	str	r3, [fp, #-8]
   149ac:	mov	r3, #0
   149b0:	str	r3, [fp, #-16]
   149b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   149b8:	cmp	r3, #0
   149bc:	beq	14ac0 <_start@@Base+0x25b0>
   149c0:	mov	r2, #2
   149c4:	mov	r1, #0
   149c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   149cc:	bl	124ec <fseek@plt>
   149d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   149d4:	bl	1242c <ftell@plt>
   149d8:	mov	r3, r0
   149dc:	str	r3, [fp, #-8]
   149e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   149e4:	ldr	r2, [fp, #-8]
   149e8:	str	r2, [r3]
   149ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   149f0:	cmp	r3, #0
   149f4:	beq	14a08 <_start@@Base+0x24f8>
   149f8:	ldr	r2, [fp, #-8]
   149fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14a00:	cmp	r2, r3
   14a04:	bhi	14ac8 <_start@@Base+0x25b8>
   14a08:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a0c:	bl	12444 <rewind@plt>
   14a10:	ldr	r3, [fp, #-8]
   14a14:	cmp	r3, #0
   14a18:	beq	14a24 <_start@@Base+0x2514>
   14a1c:	ldr	r3, [fp, #-8]
   14a20:	b	14a28 <_start@@Base+0x2518>
   14a24:	mov	r3, #1
   14a28:	mov	r0, r3
   14a2c:	bl	12480 <malloc@plt>
   14a30:	mov	r3, r0
   14a34:	str	r3, [fp, #-16]
   14a38:	ldr	r3, [fp, #-16]
   14a3c:	cmp	r3, #0
   14a40:	beq	14ad0 <_start@@Base+0x25c0>
   14a44:	mov	r3, #0
   14a48:	str	r3, [fp, #-12]
   14a4c:	b	14a60 <_start@@Base+0x2550>
   14a50:	ldr	r2, [fp, #-12]
   14a54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a58:	add	r3, r2, r3
   14a5c:	str	r3, [fp, #-12]
   14a60:	ldr	r2, [fp, #-16]
   14a64:	ldr	r3, [fp, #-12]
   14a68:	add	r0, r2, r3
   14a6c:	ldr	r2, [fp, #-8]
   14a70:	ldr	r3, [fp, #-12]
   14a74:	sub	r2, r2, r3
   14a78:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a7c:	mov	r1, #1
   14a80:	bl	12468 <fread@plt>
   14a84:	str	r0, [fp, #-24]	; 0xffffffe8
   14a88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14a8c:	cmp	r3, #0
   14a90:	bne	14a50 <_start@@Base+0x2540>
   14a94:	ldr	r2, [fp, #-12]
   14a98:	ldr	r3, [fp, #-8]
   14a9c:	cmp	r2, r3
   14aa0:	bne	14ad8 <_start@@Base+0x25c8>
   14aa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14aa8:	bl	124d4 <fclose@plt>
   14aac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ab0:	ldr	r2, [fp, #-8]
   14ab4:	str	r2, [r3]
   14ab8:	ldr	r3, [fp, #-16]
   14abc:	b	14b14 <_start@@Base+0x2604>
   14ac0:	nop	{0}
   14ac4:	b	14adc <_start@@Base+0x25cc>
   14ac8:	nop	{0}
   14acc:	b	14adc <_start@@Base+0x25cc>
   14ad0:	nop	{0}
   14ad4:	b	14adc <_start@@Base+0x25cc>
   14ad8:	nop	{0}
   14adc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ae0:	cmp	r3, #0
   14ae4:	beq	14af0 <_start@@Base+0x25e0>
   14ae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14aec:	bl	124d4 <fclose@plt>
   14af0:	ldr	r3, [fp, #-16]
   14af4:	cmp	r3, #0
   14af8:	beq	14b04 <_start@@Base+0x25f4>
   14afc:	ldr	r0, [fp, #-16]
   14b00:	bl	12414 <free@plt>
   14b04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14b08:	ldr	r2, [fp, #-8]
   14b0c:	str	r2, [r3]
   14b10:	mov	r3, #0
   14b14:	mov	r0, r3
   14b18:	sub	sp, fp, #4
   14b1c:	ldr	fp, [sp]
   14b20:	add	sp, sp, #4
   14b24:	pop	{pc}		; (ldr pc, [sp], #4)
   14b28:	andeq	pc, r0, r8, asr #16

00014b2c <test_print@@Base>:
   14b2c:	str	r4, [sp, #-12]!
   14b30:	str	fp, [sp, #4]
   14b34:	str	lr, [sp, #8]
   14b38:	add	fp, sp, #8
   14b3c:	sub	sp, sp, #92	; 0x5c
   14b40:	ldr	r4, [pc, #916]	; 14edc <test_print@@Base+0x3b0>
   14b44:	add	r4, pc, r4
   14b48:	mov	r3, #0
   14b4c:	str	r3, [fp, #-16]
   14b50:	mov	r3, #0
   14b54:	str	r3, [fp, #-20]	; 0xffffffec
   14b58:	mov	r3, #0
   14b5c:	str	r3, [fp, #-24]	; 0xffffffe8
   14b60:	mov	r3, #0
   14b64:	str	r3, [fp, #-28]	; 0xffffffe4
   14b68:	mov	r3, #0
   14b6c:	str	r3, [fp, #-40]	; 0xffffffd8
   14b70:	mov	r3, #0
   14b74:	str	r3, [fp, #-44]	; 0xffffffd4
   14b78:	mov	r3, #0
   14b7c:	str	r3, [fp, #-48]	; 0xffffffd0
   14b80:	mov	r3, #0
   14b84:	str	r3, [fp, #-32]	; 0xffffffe0
   14b88:	sub	r3, fp, #96	; 0x60
   14b8c:	str	r3, [fp, #-36]	; 0xffffffdc
   14b90:	ldr	r3, [pc, #840]	; 14ee0 <test_print@@Base+0x3b4>
   14b94:	ldr	r3, [r4, r3]
   14b98:	ldr	r3, [r3]
   14b9c:	ldr	r2, [pc, #832]	; 14ee4 <test_print@@Base+0x3b8>
   14ba0:	add	r2, pc, r2
   14ba4:	mov	r1, r2
   14ba8:	mov	r0, r3
   14bac:	bl	123fc <fopen@plt>
   14bb0:	str	r0, [fp, #-32]	; 0xffffffe0
   14bb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14bb8:	cmp	r3, #0
   14bbc:	bne	14bf4 <test_print@@Base+0xc8>
   14bc0:	ldr	r3, [pc, #800]	; 14ee8 <test_print@@Base+0x3bc>
   14bc4:	ldr	r3, [r4, r3]
   14bc8:	ldr	r0, [r3]
   14bcc:	ldr	r3, [pc, #780]	; 14ee0 <test_print@@Base+0x3b4>
   14bd0:	ldr	r3, [r4, r3]
   14bd4:	ldr	r3, [r3]
   14bd8:	mov	r2, r3
   14bdc:	ldr	r3, [pc, #776]	; 14eec <test_print@@Base+0x3c0>
   14be0:	add	r3, pc, r3
   14be4:	mov	r1, r3
   14be8:	bl	124b0 <fprintf@plt>
   14bec:	mvn	r3, #0
   14bf0:	b	14ec4 <test_print@@Base+0x398>
   14bf4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   14bf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bfc:	bl	23458 <flatcc_json_printer_init@@Base>
   14c00:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c04:	bl	126e4 <_start@@Base+0x1d4>
   14c08:	ldr	r3, [pc, #736]	; 14ef0 <test_print@@Base+0x3c4>
   14c0c:	ldr	r3, [r4, r3]
   14c10:	ldr	r3, [r3]
   14c14:	cmp	r3, #0
   14c18:	beq	14c6c <test_print@@Base+0x140>
   14c1c:	ldr	r3, [pc, #716]	; 14ef0 <test_print@@Base+0x3c4>
   14c20:	ldr	r3, [r4, r3]
   14c24:	ldr	r3, [r3]
   14c28:	ldr	r2, [pc, #708]	; 14ef4 <test_print@@Base+0x3c8>
   14c2c:	add	r2, pc, r2
   14c30:	mov	r1, r2
   14c34:	mov	r0, r3
   14c38:	bl	123f0 <strcmp@plt>
   14c3c:	mov	r3, r0
   14c40:	cmp	r3, #0
   14c44:	beq	14c6c <test_print@@Base+0x140>
   14c48:	ldr	r3, [pc, #672]	; 14ef0 <test_print@@Base+0x3c4>
   14c4c:	ldr	r3, [r4, r3]
   14c50:	ldr	r3, [r3]
   14c54:	sub	r2, fp, #40	; 0x28
   14c58:	mov	r1, #10240	; 0x2800
   14c5c:	mov	r0, r3
   14c60:	bl	14954 <_start@@Base+0x2444>
   14c64:	str	r0, [fp, #-20]	; 0xffffffec
   14c68:	b	14c80 <test_print@@Base+0x154>
   14c6c:	ldr	r3, [pc, #644]	; 14ef8 <test_print@@Base+0x3cc>
   14c70:	add	r3, pc, r3
   14c74:	str	r3, [fp, #-20]	; 0xffffffec
   14c78:	mov	r3, #288	; 0x120
   14c7c:	str	r3, [fp, #-40]	; 0xffffffd8
   14c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c84:	cmp	r3, #0
   14c88:	bne	14cbc <test_print@@Base+0x190>
   14c8c:	ldr	r3, [pc, #596]	; 14ee8 <test_print@@Base+0x3bc>
   14c90:	ldr	r3, [r4, r3]
   14c94:	ldr	r0, [r3]
   14c98:	ldr	r3, [pc, #592]	; 14ef0 <test_print@@Base+0x3c4>
   14c9c:	ldr	r3, [r4, r3]
   14ca0:	ldr	r3, [r3]
   14ca4:	mov	r2, r3
   14ca8:	ldr	r3, [pc, #588]	; 14efc <test_print@@Base+0x3d0>
   14cac:	add	r3, pc, r3
   14cb0:	mov	r1, r3
   14cb4:	bl	124b0 <fprintf@plt>
   14cb8:	b	14eb8 <test_print@@Base+0x38c>
   14cbc:	ldr	r3, [pc, #572]	; 14f00 <test_print@@Base+0x3d4>
   14cc0:	ldr	r3, [r4, r3]
   14cc4:	ldr	r3, [r3]
   14cc8:	sub	r2, fp, #44	; 0x2c
   14ccc:	mov	r1, #10240	; 0x2800
   14cd0:	mov	r0, r3
   14cd4:	bl	14954 <_start@@Base+0x2444>
   14cd8:	str	r0, [fp, #-24]	; 0xffffffe8
   14cdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ce0:	cmp	r3, #0
   14ce4:	bne	14d18 <test_print@@Base+0x1ec>
   14ce8:	ldr	r3, [pc, #504]	; 14ee8 <test_print@@Base+0x3bc>
   14cec:	ldr	r3, [r4, r3]
   14cf0:	ldr	r0, [r3]
   14cf4:	ldr	r3, [pc, #516]	; 14f00 <test_print@@Base+0x3d4>
   14cf8:	ldr	r3, [r4, r3]
   14cfc:	ldr	r3, [r3]
   14d00:	mov	r2, r3
   14d04:	ldr	r3, [pc, #504]	; 14f04 <test_print@@Base+0x3d8>
   14d08:	add	r3, pc, r3
   14d0c:	mov	r1, r3
   14d10:	bl	124b0 <fprintf@plt>
   14d14:	b	14eb8 <test_print@@Base+0x38c>
   14d18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14d1c:	ldr	r3, [pc, #484]	; 14f08 <test_print@@Base+0x3dc>
   14d20:	add	r3, pc, r3
   14d24:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d2c:	bl	14478 <_start@@Base+0x1f68>
   14d30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d34:	bl	12770 <_start@@Base+0x260>
   14d38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d3c:	bl	12600 <_start@@Base+0xf0>
   14d40:	mov	r3, r0
   14d44:	cmp	r3, #0
   14d48:	beq	14d5c <test_print@@Base+0x230>
   14d4c:	ldr	r3, [pc, #440]	; 14f0c <test_print@@Base+0x3e0>
   14d50:	add	r3, pc, r3
   14d54:	mov	r0, r3
   14d58:	bl	12474 <puts@plt>
   14d5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d60:	bl	124d4 <fclose@plt>
   14d64:	mov	r3, #0
   14d68:	str	r3, [fp, #-32]	; 0xffffffe0
   14d6c:	ldr	r3, [pc, #364]	; 14ee0 <test_print@@Base+0x3b4>
   14d70:	ldr	r3, [r4, r3]
   14d74:	ldr	r3, [r3]
   14d78:	sub	r2, fp, #48	; 0x30
   14d7c:	mov	r1, #10240	; 0x2800
   14d80:	mov	r0, r3
   14d84:	bl	14954 <_start@@Base+0x2444>
   14d88:	str	r0, [fp, #-28]	; 0xffffffe4
   14d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d90:	cmp	r3, #0
   14d94:	bne	14dc8 <test_print@@Base+0x29c>
   14d98:	ldr	r3, [pc, #328]	; 14ee8 <test_print@@Base+0x3bc>
   14d9c:	ldr	r3, [r4, r3]
   14da0:	ldr	r0, [r3]
   14da4:	ldr	r3, [pc, #308]	; 14ee0 <test_print@@Base+0x3b4>
   14da8:	ldr	r3, [r4, r3]
   14dac:	ldr	r3, [r3]
   14db0:	mov	r2, r3
   14db4:	ldr	r3, [pc, #340]	; 14f10 <test_print@@Base+0x3e4>
   14db8:	add	r3, pc, r3
   14dbc:	mov	r1, r3
   14dc0:	bl	124b0 <fprintf@plt>
   14dc4:	b	14eb8 <test_print@@Base+0x38c>
   14dc8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14dcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14dd0:	cmp	r2, r3
   14dd4:	bne	14df8 <test_print@@Base+0x2cc>
   14dd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ddc:	mov	r2, r3
   14de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14de4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14de8:	bl	12438 <memcmp@plt>
   14dec:	mov	r3, r0
   14df0:	cmp	r3, #0
   14df4:	beq	14e1c <test_print@@Base+0x2f0>
   14df8:	ldr	r3, [pc, #232]	; 14ee8 <test_print@@Base+0x3bc>
   14dfc:	ldr	r3, [r4, r3]
   14e00:	ldr	r3, [r3]
   14e04:	mov	r2, #54	; 0x36
   14e08:	mov	r1, #1
   14e0c:	ldr	r0, [pc, #256]	; 14f14 <test_print@@Base+0x3e8>
   14e10:	add	r0, pc, r0
   14e14:	bl	1245c <fwrite@plt>
   14e18:	b	14eb8 <test_print@@Base+0x38c>
   14e1c:	ldr	r3, [pc, #196]	; 14ee8 <test_print@@Base+0x3bc>
   14e20:	ldr	r3, [r4, r3]
   14e24:	ldr	r3, [r3]
   14e28:	mov	r2, #26
   14e2c:	mov	r1, #1
   14e30:	ldr	r0, [pc, #224]	; 14f18 <test_print@@Base+0x3ec>
   14e34:	add	r0, pc, r0
   14e38:	bl	1245c <fwrite@plt>
   14e3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14e40:	bl	23a64 <flatcc_json_printer_clear@@Base>
   14e44:	ldr	r3, [pc, #164]	; 14ef0 <test_print@@Base+0x3c4>
   14e48:	ldr	r3, [r4, r3]
   14e4c:	ldr	r3, [r3]
   14e50:	cmp	r3, #0
   14e54:	bne	14e60 <test_print@@Base+0x334>
   14e58:	mov	r3, #0
   14e5c:	str	r3, [fp, #-20]	; 0xffffffec
   14e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e64:	cmp	r3, #0
   14e68:	beq	14e74 <test_print@@Base+0x348>
   14e6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e70:	bl	12414 <free@plt>
   14e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e78:	cmp	r3, #0
   14e7c:	beq	14e88 <test_print@@Base+0x35c>
   14e80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e84:	bl	12414 <free@plt>
   14e88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14e8c:	cmp	r3, #0
   14e90:	beq	14e9c <test_print@@Base+0x370>
   14e94:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14e98:	bl	12414 <free@plt>
   14e9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14ea0:	cmp	r3, #0
   14ea4:	beq	14eb0 <test_print@@Base+0x384>
   14ea8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14eac:	bl	124d4 <fclose@plt>
   14eb0:	ldr	r3, [fp, #-16]
   14eb4:	b	14ec4 <test_print@@Base+0x398>
   14eb8:	mvn	r3, #0
   14ebc:	str	r3, [fp, #-16]
   14ec0:	b	14e3c <test_print@@Base+0x310>
   14ec4:	mov	r0, r3
   14ec8:	sub	sp, fp, #8
   14ecc:	ldr	r4, [sp]
   14ed0:	ldr	fp, [sp, #4]
   14ed4:	add	sp, sp, #8
   14ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   14edc:			; <UNDEFINED> instruction: 0x000214b4
   14ee0:	andeq	r0, r0, r4, lsl #1
   14ee4:			; <UNDEFINED> instruction: 0x0000f8b0
   14ee8:	andeq	r0, r0, r0, ror r0
   14eec:	andeq	pc, r0, r4, ror r8	; <UNPREDICTABLE>
   14ef0:	andeq	r0, r0, ip, ror r0
   14ef4:	andeq	pc, r0, r8, asr #16
   14ef8:	andeq	pc, r0, ip, ror #10
   14efc:	andeq	pc, r0, ip, asr #15
   14f00:	andeq	r0, r0, r4, ror r0
   14f04:	muleq	r0, ip, r7
   14f08:			; <UNDEFINED> instruction: 0x0000f4b0
   14f0c:	andeq	pc, r0, r0, lsl #15
   14f10:	andeq	pc, r0, r8, lsr r7	; <UNPREDICTABLE>
   14f14:	andeq	pc, r0, r8, lsl #14
   14f18:	andeq	pc, r0, ip, lsl r7	; <UNPREDICTABLE>

00014f1c <main@@Base>:
   14f1c:	str	r4, [sp, #-12]!
   14f20:	str	fp, [sp, #4]
   14f24:	str	lr, [sp, #8]
   14f28:	add	fp, sp, #8
   14f2c:	sub	sp, sp, #12
   14f30:	str	r0, [fp, #-16]
   14f34:	str	r1, [fp, #-20]	; 0xffffffec
   14f38:	ldr	r4, [pc, #200]	; 15008 <main@@Base+0xec>
   14f3c:	add	r4, pc, r4
   14f40:	ldr	r3, [pc, #196]	; 1500c <main@@Base+0xf0>
   14f44:	ldr	r3, [r4, r3]
   14f48:	ldr	r3, [r3]
   14f4c:	mov	r2, #24
   14f50:	mov	r1, #1
   14f54:	ldr	r0, [pc, #180]	; 15010 <main@@Base+0xf4>
   14f58:	add	r0, pc, r0
   14f5c:	bl	1245c <fwrite@plt>
   14f60:	ldr	r3, [fp, #-16]
   14f64:	cmp	r3, #1
   14f68:	beq	14fa0 <main@@Base+0x84>
   14f6c:	ldr	r3, [fp, #-16]
   14f70:	cmp	r3, #4
   14f74:	beq	14fa0 <main@@Base+0x84>
   14f78:	ldr	r3, [pc, #140]	; 1500c <main@@Base+0xf0>
   14f7c:	ldr	r3, [r4, r3]
   14f80:	ldr	r3, [r3]
   14f84:	mov	r2, #191	; 0xbf
   14f88:	mov	r1, #1
   14f8c:	ldr	r0, [pc, #128]	; 15014 <main@@Base+0xf8>
   14f90:	add	r0, pc, r0
   14f94:	bl	1245c <fwrite@plt>
   14f98:	mov	r0, #1
   14f9c:	bl	124a4 <exit@plt>
   14fa0:	ldr	r3, [fp, #-16]
   14fa4:	cmp	r3, #4
   14fa8:	bne	14fe8 <main@@Base+0xcc>
   14fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fb0:	ldr	r2, [r3, #4]
   14fb4:	ldr	r3, [pc, #92]	; 15018 <main@@Base+0xfc>
   14fb8:	ldr	r3, [r4, r3]
   14fbc:	str	r2, [r3]
   14fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fc4:	ldr	r2, [r3, #8]
   14fc8:	ldr	r3, [pc, #76]	; 1501c <main@@Base+0x100>
   14fcc:	ldr	r3, [r4, r3]
   14fd0:	str	r2, [r3]
   14fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fd8:	ldr	r2, [r3, #12]
   14fdc:	ldr	r3, [pc, #60]	; 15020 <main@@Base+0x104>
   14fe0:	ldr	r3, [r4, r3]
   14fe4:	str	r2, [r3]
   14fe8:	bl	14b2c <test_print@@Base>
   14fec:	mov	r3, r0
   14ff0:	mov	r0, r3
   14ff4:	sub	sp, fp, #8
   14ff8:	ldr	r4, [sp]
   14ffc:	ldr	fp, [sp, #4]
   15000:	add	sp, sp, #8
   15004:	pop	{pc}		; (ldr pc, [sp], #4)
   15008:	strheq	r1, [r2], -ip
   1500c:	andeq	r0, r0, r0, ror r0
   15010:	andeq	pc, r0, r4, lsl r6	; <UNPREDICTABLE>
   15014:	strdeq	pc, [r0], -r8
   15018:	andeq	r0, r0, ip, ror r0
   1501c:	andeq	r0, r0, r4, ror r0
   15020:	andeq	r0, r0, r4, lsl #1
   15024:	andeq	r0, r0, r0
   15028:	push	{fp}		; (str fp, [sp, #-4]!)
   1502c:	add	fp, sp, #0
   15030:	sub	sp, sp, #12
   15034:	mov	r3, r0
   15038:	strb	r3, [fp, #-5]
   1503c:	ldrb	r3, [fp, #-5]
   15040:	mov	r0, r3
   15044:	add	sp, fp, #0
   15048:	pop	{fp}		; (ldr fp, [sp], #4)
   1504c:	bx	lr
   15050:	str	fp, [sp, #-8]!
   15054:	str	lr, [sp, #4]
   15058:	add	fp, sp, #4
   1505c:	sub	sp, sp, #8
   15060:	str	r0, [fp, #-8]
   15064:	ldr	r3, [fp, #-8]
   15068:	ldrb	r3, [r3]
   1506c:	mov	r0, r3
   15070:	bl	15028 <main@@Base+0x10c>
   15074:	mov	r3, r0
   15078:	mov	r0, r3
   1507c:	sub	sp, fp, #4
   15080:	ldr	fp, [sp]
   15084:	add	sp, sp, #4
   15088:	pop	{pc}		; (ldr pc, [sp], #4)
   1508c:	push	{fp}		; (str fp, [sp, #-4]!)
   15090:	add	fp, sp, #0
   15094:	sub	sp, sp, #12
   15098:	mov	r3, r0
   1509c:	strh	r3, [fp, #-6]
   150a0:	ldrh	r3, [fp, #-6]
   150a4:	mov	r0, r3
   150a8:	add	sp, fp, #0
   150ac:	pop	{fp}		; (ldr fp, [sp], #4)
   150b0:	bx	lr
   150b4:	str	fp, [sp, #-8]!
   150b8:	str	lr, [sp, #4]
   150bc:	add	fp, sp, #4
   150c0:	sub	sp, sp, #8
   150c4:	str	r0, [fp, #-8]
   150c8:	ldr	r3, [fp, #-8]
   150cc:	ldrh	r3, [r3]
   150d0:	mov	r0, r3
   150d4:	bl	1508c <main@@Base+0x170>
   150d8:	mov	r3, r0
   150dc:	mov	r0, r3
   150e0:	sub	sp, fp, #4
   150e4:	ldr	fp, [sp]
   150e8:	add	sp, sp, #4
   150ec:	pop	{pc}		; (ldr pc, [sp], #4)
   150f0:	push	{fp}		; (str fp, [sp, #-4]!)
   150f4:	add	fp, sp, #0
   150f8:	sub	sp, sp, #12
   150fc:	str	r0, [fp, #-8]
   15100:	ldr	r3, [fp, #-8]
   15104:	mov	r0, r3
   15108:	add	sp, fp, #0
   1510c:	pop	{fp}		; (ldr fp, [sp], #4)
   15110:	bx	lr
   15114:	str	fp, [sp, #-8]!
   15118:	str	lr, [sp, #4]
   1511c:	add	fp, sp, #4
   15120:	sub	sp, sp, #8
   15124:	str	r0, [fp, #-8]
   15128:	ldr	r3, [fp, #-8]
   1512c:	ldr	r3, [r3]
   15130:	mov	r0, r3
   15134:	bl	150f0 <main@@Base+0x1d4>
   15138:	mov	r3, r0
   1513c:	mov	r0, r3
   15140:	sub	sp, fp, #4
   15144:	ldr	fp, [sp]
   15148:	add	sp, sp, #4
   1514c:	pop	{pc}		; (ldr pc, [sp], #4)
   15150:	push	{fp}		; (str fp, [sp, #-4]!)
   15154:	add	fp, sp, #0
   15158:	sub	sp, sp, #12
   1515c:	strd	r0, [fp, #-12]
   15160:	ldrd	r2, [fp, #-12]
   15164:	mov	r0, r2
   15168:	mov	r1, r3
   1516c:	add	sp, fp, #0
   15170:	pop	{fp}		; (ldr fp, [sp], #4)
   15174:	bx	lr
   15178:	str	fp, [sp, #-8]!
   1517c:	str	lr, [sp, #4]
   15180:	add	fp, sp, #4
   15184:	sub	sp, sp, #8
   15188:	str	r0, [fp, #-8]
   1518c:	ldr	r3, [fp, #-8]
   15190:	ldrd	r2, [r3]
   15194:	mov	r0, r2
   15198:	mov	r1, r3
   1519c:	bl	15150 <main@@Base+0x234>
   151a0:	mov	r2, r0
   151a4:	mov	r3, r1
   151a8:	mov	r0, r2
   151ac:	mov	r1, r3
   151b0:	sub	sp, fp, #4
   151b4:	ldr	fp, [sp]
   151b8:	add	sp, sp, #4
   151bc:	pop	{pc}		; (ldr pc, [sp], #4)
   151c0:	push	{fp}		; (str fp, [sp, #-4]!)
   151c4:	add	fp, sp, #0
   151c8:	sub	sp, sp, #12
   151cc:	mov	r3, r0
   151d0:	strb	r3, [fp, #-5]
   151d4:	ldrsb	r3, [fp, #-5]
   151d8:	mov	r0, r3
   151dc:	add	sp, fp, #0
   151e0:	pop	{fp}		; (ldr fp, [sp], #4)
   151e4:	bx	lr
   151e8:	str	fp, [sp, #-8]!
   151ec:	str	lr, [sp, #4]
   151f0:	add	fp, sp, #4
   151f4:	sub	sp, sp, #8
   151f8:	str	r0, [fp, #-8]
   151fc:	ldr	r3, [fp, #-8]
   15200:	ldrsb	r3, [r3]
   15204:	mov	r0, r3
   15208:	bl	151c0 <main@@Base+0x2a4>
   1520c:	mov	r3, r0
   15210:	mov	r0, r3
   15214:	sub	sp, fp, #4
   15218:	ldr	fp, [sp]
   1521c:	add	sp, sp, #4
   15220:	pop	{pc}		; (ldr pc, [sp], #4)
   15224:	push	{fp}		; (str fp, [sp, #-4]!)
   15228:	add	fp, sp, #0
   1522c:	sub	sp, sp, #12
   15230:	mov	r3, r0
   15234:	strh	r3, [fp, #-6]
   15238:	ldrsh	r3, [fp, #-6]
   1523c:	mov	r0, r3
   15240:	add	sp, fp, #0
   15244:	pop	{fp}		; (ldr fp, [sp], #4)
   15248:	bx	lr
   1524c:	str	fp, [sp, #-8]!
   15250:	str	lr, [sp, #4]
   15254:	add	fp, sp, #4
   15258:	sub	sp, sp, #8
   1525c:	str	r0, [fp, #-8]
   15260:	ldr	r3, [fp, #-8]
   15264:	ldrsh	r3, [r3]
   15268:	mov	r0, r3
   1526c:	bl	15224 <main@@Base+0x308>
   15270:	mov	r3, r0
   15274:	mov	r0, r3
   15278:	sub	sp, fp, #4
   1527c:	ldr	fp, [sp]
   15280:	add	sp, sp, #4
   15284:	pop	{pc}		; (ldr pc, [sp], #4)
   15288:	push	{fp}		; (str fp, [sp, #-4]!)
   1528c:	add	fp, sp, #0
   15290:	sub	sp, sp, #12
   15294:	str	r0, [fp, #-8]
   15298:	ldr	r3, [fp, #-8]
   1529c:	mov	r0, r3
   152a0:	add	sp, fp, #0
   152a4:	pop	{fp}		; (ldr fp, [sp], #4)
   152a8:	bx	lr
   152ac:	str	fp, [sp, #-8]!
   152b0:	str	lr, [sp, #4]
   152b4:	add	fp, sp, #4
   152b8:	sub	sp, sp, #8
   152bc:	str	r0, [fp, #-8]
   152c0:	ldr	r3, [fp, #-8]
   152c4:	ldr	r3, [r3]
   152c8:	mov	r0, r3
   152cc:	bl	15288 <main@@Base+0x36c>
   152d0:	mov	r3, r0
   152d4:	mov	r0, r3
   152d8:	sub	sp, fp, #4
   152dc:	ldr	fp, [sp]
   152e0:	add	sp, sp, #4
   152e4:	pop	{pc}		; (ldr pc, [sp], #4)
   152e8:	push	{fp}		; (str fp, [sp, #-4]!)
   152ec:	add	fp, sp, #0
   152f0:	sub	sp, sp, #12
   152f4:	strd	r0, [fp, #-12]
   152f8:	ldrd	r2, [fp, #-12]
   152fc:	mov	r0, r2
   15300:	mov	r1, r3
   15304:	add	sp, fp, #0
   15308:	pop	{fp}		; (ldr fp, [sp], #4)
   1530c:	bx	lr
   15310:	str	fp, [sp, #-8]!
   15314:	str	lr, [sp, #4]
   15318:	add	fp, sp, #4
   1531c:	sub	sp, sp, #8
   15320:	str	r0, [fp, #-8]
   15324:	ldr	r3, [fp, #-8]
   15328:	ldrd	r2, [r3]
   1532c:	mov	r0, r2
   15330:	mov	r1, r3
   15334:	bl	152e8 <main@@Base+0x3cc>
   15338:	mov	r2, r0
   1533c:	mov	r3, r1
   15340:	mov	r0, r2
   15344:	mov	r1, r3
   15348:	sub	sp, fp, #4
   1534c:	ldr	fp, [sp]
   15350:	add	sp, sp, #4
   15354:	pop	{pc}		; (ldr pc, [sp], #4)
   15358:	push	{fp}		; (str fp, [sp, #-4]!)
   1535c:	add	fp, sp, #0
   15360:	sub	sp, sp, #20
   15364:	vstr	s0, [fp, #-16]
   15368:	ldr	r3, [fp, #-16]
   1536c:	str	r3, [fp, #-8]
   15370:	ldr	r3, [fp, #-8]
   15374:	str	r3, [fp, #-8]
   15378:	ldr	r3, [fp, #-8]
   1537c:	vmov	s15, r3
   15380:	vmov.f32	s0, s15
   15384:	add	sp, fp, #0
   15388:	pop	{fp}		; (ldr fp, [sp], #4)
   1538c:	bx	lr
   15390:	str	fp, [sp, #-8]!
   15394:	str	lr, [sp, #4]
   15398:	add	fp, sp, #4
   1539c:	sub	sp, sp, #8
   153a0:	str	r0, [fp, #-8]
   153a4:	ldr	r3, [fp, #-8]
   153a8:	vldr	s15, [r3]
   153ac:	vmov.f32	s0, s15
   153b0:	bl	15358 <main@@Base+0x43c>
   153b4:	vmov.f32	s15, s0
   153b8:	vmov.f32	s0, s15
   153bc:	sub	sp, fp, #4
   153c0:	ldr	fp, [sp]
   153c4:	add	sp, sp, #4
   153c8:	pop	{pc}		; (ldr pc, [sp], #4)
   153cc:	push	{fp}		; (str fp, [sp, #-4]!)
   153d0:	add	fp, sp, #0
   153d4:	sub	sp, sp, #20
   153d8:	vstr	d0, [fp, #-20]	; 0xffffffec
   153dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   153e0:	strd	r2, [fp, #-12]
   153e4:	ldrd	r2, [fp, #-12]
   153e8:	strd	r2, [fp, #-12]
   153ec:	ldrd	r2, [fp, #-12]
   153f0:	vmov	d7, r2, r3
   153f4:	vmov.f64	d0, d7
   153f8:	add	sp, fp, #0
   153fc:	pop	{fp}		; (ldr fp, [sp], #4)
   15400:	bx	lr
   15404:	str	fp, [sp, #-8]!
   15408:	str	lr, [sp, #4]
   1540c:	add	fp, sp, #4
   15410:	sub	sp, sp, #8
   15414:	str	r0, [fp, #-8]
   15418:	ldr	r3, [fp, #-8]
   1541c:	vldr	d7, [r3]
   15420:	vmov.f64	d0, d7
   15424:	bl	153cc <main@@Base+0x4b0>
   15428:	vmov.f64	d7, d0
   1542c:	vmov.f64	d0, d7
   15430:	sub	sp, fp, #4
   15434:	ldr	fp, [sp]
   15438:	add	sp, sp, #4
   1543c:	pop	{pc}		; (ldr pc, [sp], #4)
   15440:	push	{fp}		; (str fp, [sp, #-4]!)
   15444:	add	fp, sp, #0
   15448:	sub	sp, sp, #12
   1544c:	mov	r3, r0
   15450:	strb	r3, [fp, #-5]
   15454:	ldrb	r3, [fp, #-5]
   15458:	mov	r0, r3
   1545c:	add	sp, fp, #0
   15460:	pop	{fp}		; (ldr fp, [sp], #4)
   15464:	bx	lr
   15468:	str	fp, [sp, #-8]!
   1546c:	str	lr, [sp, #4]
   15470:	add	fp, sp, #4
   15474:	sub	sp, sp, #8
   15478:	str	r0, [fp, #-8]
   1547c:	ldr	r3, [fp, #-8]
   15480:	ldrb	r3, [r3]
   15484:	mov	r0, r3
   15488:	bl	15440 <main@@Base+0x524>
   1548c:	mov	r3, r0
   15490:	mov	r0, r3
   15494:	sub	sp, fp, #4
   15498:	ldr	fp, [sp]
   1549c:	add	sp, sp, #4
   154a0:	pop	{pc}		; (ldr pc, [sp], #4)
   154a4:	push	{fp}		; (str fp, [sp, #-4]!)
   154a8:	add	fp, sp, #0
   154ac:	sub	sp, sp, #12
   154b0:	str	r0, [fp, #-8]
   154b4:	ldr	r3, [fp, #-8]
   154b8:	mov	r0, r3
   154bc:	add	sp, fp, #0
   154c0:	pop	{fp}		; (ldr fp, [sp], #4)
   154c4:	bx	lr
   154c8:	str	fp, [sp, #-8]!
   154cc:	str	lr, [sp, #4]
   154d0:	add	fp, sp, #4
   154d4:	sub	sp, sp, #8
   154d8:	str	r0, [fp, #-8]
   154dc:	ldr	r3, [fp, #-8]
   154e0:	ldr	r3, [r3]
   154e4:	mov	r0, r3
   154e8:	bl	154a4 <main@@Base+0x588>
   154ec:	mov	r3, r0
   154f0:	mov	r0, r3
   154f4:	sub	sp, fp, #4
   154f8:	ldr	fp, [sp]
   154fc:	add	sp, sp, #4
   15500:	pop	{pc}		; (ldr pc, [sp], #4)
   15504:	push	{fp}		; (str fp, [sp, #-4]!)
   15508:	add	fp, sp, #0
   1550c:	sub	sp, sp, #12
   15510:	str	r0, [fp, #-8]
   15514:	ldr	r3, [fp, #-8]
   15518:	mov	r0, r3
   1551c:	add	sp, fp, #0
   15520:	pop	{fp}		; (ldr fp, [sp], #4)
   15524:	bx	lr
   15528:	str	fp, [sp, #-8]!
   1552c:	str	lr, [sp, #4]
   15530:	add	fp, sp, #4
   15534:	sub	sp, sp, #8
   15538:	str	r0, [fp, #-8]
   1553c:	ldr	r3, [fp, #-8]
   15540:	ldr	r3, [r3]
   15544:	mov	r0, r3
   15548:	bl	15504 <main@@Base+0x5e8>
   1554c:	mov	r3, r0
   15550:	mov	r0, r3
   15554:	sub	sp, fp, #4
   15558:	ldr	fp, [sp]
   1555c:	add	sp, sp, #4
   15560:	pop	{pc}		; (ldr pc, [sp], #4)
   15564:	push	{fp}		; (str fp, [sp, #-4]!)
   15568:	add	fp, sp, #0
   1556c:	sub	sp, sp, #12
   15570:	mov	r3, r0
   15574:	strh	r3, [fp, #-6]
   15578:	ldrh	r3, [fp, #-6]
   1557c:	mov	r0, r3
   15580:	add	sp, fp, #0
   15584:	pop	{fp}		; (ldr fp, [sp], #4)
   15588:	bx	lr
   1558c:	str	fp, [sp, #-8]!
   15590:	str	lr, [sp, #4]
   15594:	add	fp, sp, #4
   15598:	sub	sp, sp, #8
   1559c:	str	r0, [fp, #-8]
   155a0:	ldr	r3, [fp, #-8]
   155a4:	ldrh	r3, [r3]
   155a8:	mov	r0, r3
   155ac:	bl	15564 <main@@Base+0x648>
   155b0:	mov	r3, r0
   155b4:	mov	r0, r3
   155b8:	sub	sp, fp, #4
   155bc:	ldr	fp, [sp]
   155c0:	add	sp, sp, #4
   155c4:	pop	{pc}		; (ldr pc, [sp], #4)
   155c8:	push	{fp}		; (str fp, [sp, #-4]!)
   155cc:	add	fp, sp, #0
   155d0:	sub	sp, sp, #12
   155d4:	mov	r3, r0
   155d8:	strb	r3, [fp, #-5]
   155dc:	ldrb	r3, [fp, #-5]
   155e0:	mov	r0, r3
   155e4:	add	sp, fp, #0
   155e8:	pop	{fp}		; (ldr fp, [sp], #4)
   155ec:	bx	lr
   155f0:	str	fp, [sp, #-8]!
   155f4:	str	lr, [sp, #4]
   155f8:	add	fp, sp, #4
   155fc:	sub	sp, sp, #8
   15600:	str	r0, [fp, #-8]
   15604:	ldr	r3, [fp, #-8]
   15608:	ldrb	r3, [r3]
   1560c:	mov	r0, r3
   15610:	bl	155c8 <main@@Base+0x6ac>
   15614:	mov	r3, r0
   15618:	mov	r0, r3
   1561c:	sub	sp, fp, #4
   15620:	ldr	fp, [sp]
   15624:	add	sp, sp, #4
   15628:	pop	{pc}		; (ldr pc, [sp], #4)
   1562c:	push	{fp}		; (str fp, [sp, #-4]!)
   15630:	add	fp, sp, #0
   15634:	sub	sp, sp, #12
   15638:	str	r0, [fp, #-8]
   1563c:	ldr	r3, [fp, #-8]
   15640:	mov	r0, r3
   15644:	add	sp, fp, #0
   15648:	pop	{fp}		; (ldr fp, [sp], #4)
   1564c:	bx	lr
   15650:	push	{fp}		; (str fp, [sp, #-4]!)
   15654:	add	fp, sp, #0
   15658:	sub	sp, sp, #12
   1565c:	str	r0, [fp, #-8]
   15660:	ldr	r3, [fp, #-8]
   15664:	mov	r0, r3
   15668:	add	sp, fp, #0
   1566c:	pop	{fp}		; (ldr fp, [sp], #4)
   15670:	bx	lr
   15674:	str	fp, [sp, #-8]!
   15678:	str	lr, [sp, #4]
   1567c:	add	fp, sp, #4
   15680:	sub	sp, sp, #8
   15684:	str	r0, [fp, #-8]
   15688:	ldr	r3, [fp, #-8]
   1568c:	ldr	r3, [r3]
   15690:	mov	r0, r3
   15694:	bl	1562c <main@@Base+0x710>
   15698:	mov	r3, r0
   1569c:	mov	r0, r3
   156a0:	sub	sp, fp, #4
   156a4:	ldr	fp, [sp]
   156a8:	add	sp, sp, #4
   156ac:	pop	{pc}		; (ldr pc, [sp], #4)
   156b0:	push	{fp}		; (str fp, [sp, #-4]!)
   156b4:	add	fp, sp, #0
   156b8:	sub	sp, sp, #12
   156bc:	str	r0, [fp, #-8]
   156c0:	str	r1, [fp, #-12]
   156c4:	ldr	r3, [fp, #-8]
   156c8:	ldr	r3, [r3, #36]	; 0x24
   156cc:	cmp	r3, #0
   156d0:	bne	156e0 <main@@Base+0x7c4>
   156d4:	ldr	r3, [fp, #-8]
   156d8:	ldr	r2, [fp, #-12]
   156dc:	str	r2, [r3, #36]	; 0x24
   156e0:	nop	{0}
   156e4:	add	sp, fp, #0
   156e8:	pop	{fp}		; (ldr fp, [sp], #4)
   156ec:	bx	lr
   156f0:	push	{fp}		; (str fp, [sp, #-4]!)
   156f4:	add	fp, sp, #0
   156f8:	sub	sp, sp, #12
   156fc:	str	r0, [fp, #-8]
   15700:	ldr	r3, [fp, #-8]
   15704:	ldr	r3, [r3, #36]	; 0x24
   15708:	mov	r0, r3
   1570c:	add	sp, fp, #0
   15710:	pop	{fp}		; (ldr fp, [sp], #4)
   15714:	bx	lr
   15718:	str	fp, [sp, #-8]!
   1571c:	str	lr, [sp, #4]
   15720:	add	fp, sp, #4
   15724:	sub	sp, sp, #8
   15728:	str	r0, [fp, #-8]
   1572c:	ldr	r3, [fp, #-8]
   15730:	ldr	r2, [r3, #20]
   15734:	ldr	r3, [fp, #-8]
   15738:	ldr	r3, [r3, #16]
   1573c:	cmp	r2, r3
   15740:	bcc	15758 <main@@Base+0x83c>
   15744:	ldr	r3, [fp, #-8]
   15748:	ldr	r3, [r3, #44]	; 0x2c
   1574c:	mov	r1, #0
   15750:	ldr	r0, [fp, #-8]
   15754:	blx	r3
   15758:	nop	{0}
   1575c:	sub	sp, fp, #4
   15760:	ldr	fp, [sp]
   15764:	add	sp, sp, #4
   15768:	pop	{pc}		; (ldr pc, [sp], #4)
   1576c:	str	fp, [sp, #-8]!
   15770:	str	lr, [sp, #4]
   15774:	add	fp, sp, #4
   15778:	sub	sp, sp, #8
   1577c:	str	r0, [fp, #-8]
   15780:	str	r1, [fp, #-12]
   15784:	ldr	r3, [fp, #-8]
   15788:	cmp	r3, #0
   1578c:	beq	157b0 <main@@Base+0x894>
   15790:	mov	r2, #5
   15794:	ldr	r3, [pc, #68]	; 157e0 <main@@Base+0x8c4>
   15798:	add	r3, pc, r3
   1579c:	mov	r1, r3
   157a0:	ldr	r0, [fp, #-12]
   157a4:	bl	12420 <memcpy@plt>
   157a8:	mov	r3, #4
   157ac:	b	157cc <main@@Base+0x8b0>
   157b0:	mov	r2, #6
   157b4:	ldr	r3, [pc, #40]	; 157e4 <main@@Base+0x8c8>
   157b8:	add	r3, pc, r3
   157bc:	mov	r1, r3
   157c0:	ldr	r0, [fp, #-12]
   157c4:	bl	12420 <memcpy@plt>
   157c8:	mov	r3, #5
   157cc:	mov	r0, r3
   157d0:	sub	sp, fp, #4
   157d4:	ldr	fp, [sp]
   157d8:	add	sp, sp, #4
   157dc:	pop	{pc}		; (ldr pc, [sp], #4)
   157e0:	andeq	lr, r0, r0, lsl #31
   157e4:	andeq	lr, r0, r8, ror #30
   157e8:	push	{fp}		; (str fp, [sp, #-4]!)
   157ec:	add	fp, sp, #0
   157f0:	sub	sp, sp, #20
   157f4:	mov	r3, r0
   157f8:	str	r1, [fp, #-20]	; 0xffffffec
   157fc:	strb	r3, [fp, #-13]
   15800:	ldrb	r3, [fp, #-13]
   15804:	cmp	r3, #99	; 0x63
   15808:	bls	158c8 <main@@Base+0x9ac>
   1580c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15810:	add	r3, r3, #3
   15814:	str	r3, [fp, #-20]	; 0xffffffec
   15818:	ldr	r3, [fp, #-20]	; 0xffffffec
   1581c:	mov	r2, #0
   15820:	strb	r2, [r3]
   15824:	ldr	r3, [fp, #-20]	; 0xffffffec
   15828:	sub	r3, r3, #2
   1582c:	str	r3, [fp, #-20]	; 0xffffffec
   15830:	ldrb	r2, [fp, #-13]
   15834:	movw	r3, #34079	; 0x851f
   15838:	movt	r3, #20971	; 0x51eb
   1583c:	umull	r1, r3, r3, r2
   15840:	lsr	r3, r3, #5
   15844:	mov	r1, #100	; 0x64
   15848:	mul	r3, r1, r3
   1584c:	sub	r3, r2, r3
   15850:	uxtb	r3, r3
   15854:	lsl	r3, r3, #1
   15858:	mov	r2, r3
   1585c:	ldr	r3, [pc, #332]	; 159b0 <main@@Base+0xa94>
   15860:	add	r3, pc, r3
   15864:	add	r3, r2, r3
   15868:	str	r3, [fp, #-8]
   1586c:	ldrb	r2, [fp, #-13]
   15870:	movw	r3, #34079	; 0x851f
   15874:	movt	r3, #20971	; 0x51eb
   15878:	umull	r2, r3, r3, r2
   1587c:	lsr	r3, r3, #5
   15880:	strb	r3, [fp, #-13]
   15884:	ldr	r3, [fp, #-8]
   15888:	ldrb	r2, [r3]
   1588c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15890:	strb	r2, [r3]
   15894:	ldr	r3, [fp, #-20]	; 0xffffffec
   15898:	add	r3, r3, #1
   1589c:	ldr	r2, [fp, #-8]
   158a0:	ldrb	r2, [r2, #1]
   158a4:	strb	r2, [r3]
   158a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158ac:	sub	r3, r3, #1
   158b0:	ldrb	r2, [fp, #-13]
   158b4:	add	r2, r2, #48	; 0x30
   158b8:	uxtb	r2, r2
   158bc:	strb	r2, [r3]
   158c0:	mov	r3, #3
   158c4:	b	159a0 <main@@Base+0xa84>
   158c8:	ldrb	r3, [fp, #-13]
   158cc:	cmp	r3, #9
   158d0:	bls	15978 <main@@Base+0xa5c>
   158d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   158d8:	add	r3, r3, #2
   158dc:	str	r3, [fp, #-20]	; 0xffffffec
   158e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   158e4:	mov	r2, #0
   158e8:	strb	r2, [r3]
   158ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   158f0:	sub	r3, r3, #2
   158f4:	str	r3, [fp, #-20]	; 0xffffffec
   158f8:	ldrb	r2, [fp, #-13]
   158fc:	movw	r3, #34079	; 0x851f
   15900:	movt	r3, #20971	; 0x51eb
   15904:	umull	r1, r3, r3, r2
   15908:	lsr	r3, r3, #5
   1590c:	mov	r1, #100	; 0x64
   15910:	mul	r3, r1, r3
   15914:	sub	r3, r2, r3
   15918:	uxtb	r3, r3
   1591c:	lsl	r3, r3, #1
   15920:	mov	r2, r3
   15924:	ldr	r3, [pc, #136]	; 159b4 <main@@Base+0xa98>
   15928:	add	r3, pc, r3
   1592c:	add	r3, r2, r3
   15930:	str	r3, [fp, #-8]
   15934:	ldrb	r2, [fp, #-13]
   15938:	movw	r3, #34079	; 0x851f
   1593c:	movt	r3, #20971	; 0x51eb
   15940:	umull	r2, r3, r3, r2
   15944:	lsr	r3, r3, #5
   15948:	strb	r3, [fp, #-13]
   1594c:	ldr	r3, [fp, #-8]
   15950:	ldrb	r2, [r3]
   15954:	ldr	r3, [fp, #-20]	; 0xffffffec
   15958:	strb	r2, [r3]
   1595c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15960:	add	r3, r3, #1
   15964:	ldr	r2, [fp, #-8]
   15968:	ldrb	r2, [r2, #1]
   1596c:	strb	r2, [r3]
   15970:	mov	r3, #2
   15974:	b	159a0 <main@@Base+0xa84>
   15978:	ldr	r3, [fp, #-20]	; 0xffffffec
   1597c:	add	r3, r3, #1
   15980:	mov	r2, #0
   15984:	strb	r2, [r3]
   15988:	ldrb	r3, [fp, #-13]
   1598c:	add	r3, r3, #48	; 0x30
   15990:	uxtb	r2, r3
   15994:	ldr	r3, [fp, #-20]	; 0xffffffec
   15998:	strb	r2, [r3]
   1599c:	mov	r3, #1
   159a0:	mov	r0, r3
   159a4:	add	sp, fp, #0
   159a8:	pop	{fp}		; (ldr fp, [sp], #4)
   159ac:	bx	lr
   159b0:	andeq	lr, r0, ip, ror #27
   159b4:	andeq	lr, r0, r4, lsr #26
   159b8:	push	{fp}		; (str fp, [sp, #-4]!)
   159bc:	add	fp, sp, #0
   159c0:	sub	sp, sp, #20
   159c4:	mov	r3, r0
   159c8:	str	r1, [fp, #-20]	; 0xffffffec
   159cc:	strh	r3, [fp, #-14]
   159d0:	mov	r3, #0
   159d4:	str	r3, [fp, #-8]
   159d8:	ldrh	r3, [fp, #-14]
   159dc:	cmp	r3, #1000	; 0x3e8
   159e0:	bcc	15a0c <main@@Base+0xaf0>
   159e4:	ldrh	r3, [fp, #-14]
   159e8:	movw	r2, #9999	; 0x270f
   159ec:	cmp	r3, r2
   159f0:	bls	15a00 <main@@Base+0xae4>
   159f4:	mov	r3, #5
   159f8:	str	r3, [fp, #-8]
   159fc:	b	15a44 <main@@Base+0xb28>
   15a00:	mov	r3, #4
   15a04:	str	r3, [fp, #-8]
   15a08:	b	15a44 <main@@Base+0xb28>
   15a0c:	ldrh	r3, [fp, #-14]
   15a10:	cmp	r3, #99	; 0x63
   15a14:	bls	15a24 <main@@Base+0xb08>
   15a18:	mov	r3, #3
   15a1c:	str	r3, [fp, #-8]
   15a20:	b	15a44 <main@@Base+0xb28>
   15a24:	ldrh	r3, [fp, #-14]
   15a28:	cmp	r3, #9
   15a2c:	bls	15a3c <main@@Base+0xb20>
   15a30:	mov	r3, #2
   15a34:	str	r3, [fp, #-8]
   15a38:	b	15a44 <main@@Base+0xb28>
   15a3c:	mov	r3, #1
   15a40:	str	r3, [fp, #-8]
   15a44:	ldr	r3, [fp, #-8]
   15a48:	ldr	r2, [fp, #-20]	; 0xffffffec
   15a4c:	add	r3, r2, r3
   15a50:	str	r3, [fp, #-20]	; 0xffffffec
   15a54:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a58:	mov	r2, #0
   15a5c:	strb	r2, [r3]
   15a60:	ldr	r3, [fp, #-8]
   15a64:	and	r3, r3, #1
   15a68:	cmp	r3, #0
   15a6c:	beq	15bc0 <main@@Base+0xca4>
   15a70:	ldr	r3, [fp, #-8]
   15a74:	cmp	r3, #3
   15a78:	beq	15b1c <main@@Base+0xc00>
   15a7c:	ldr	r3, [fp, #-8]
   15a80:	cmp	r3, #5
   15a84:	beq	15a98 <main@@Base+0xb7c>
   15a88:	ldr	r3, [fp, #-8]
   15a8c:	cmp	r3, #1
   15a90:	beq	15ba0 <main@@Base+0xc84>
   15a94:	b	15ce0 <main@@Base+0xdc4>
   15a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a9c:	sub	r3, r3, #2
   15aa0:	str	r3, [fp, #-20]	; 0xffffffec
   15aa4:	ldrh	r2, [fp, #-14]
   15aa8:	movw	r3, #34079	; 0x851f
   15aac:	movt	r3, #20971	; 0x51eb
   15ab0:	umull	r1, r3, r3, r2
   15ab4:	lsr	r3, r3, #5
   15ab8:	mov	r1, #100	; 0x64
   15abc:	mul	r3, r1, r3
   15ac0:	sub	r3, r2, r3
   15ac4:	uxth	r3, r3
   15ac8:	lsl	r3, r3, #1
   15acc:	mov	r2, r3
   15ad0:	ldr	r3, [pc, #540]	; 15cf4 <main@@Base+0xdd8>
   15ad4:	add	r3, pc, r3
   15ad8:	add	r3, r2, r3
   15adc:	str	r3, [fp, #-12]
   15ae0:	ldrh	r2, [fp, #-14]
   15ae4:	movw	r3, #34079	; 0x851f
   15ae8:	movt	r3, #20971	; 0x51eb
   15aec:	umull	r2, r3, r3, r2
   15af0:	lsr	r3, r3, #5
   15af4:	strh	r3, [fp, #-14]
   15af8:	ldr	r3, [fp, #-12]
   15afc:	ldrb	r2, [r3]
   15b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b04:	strb	r2, [r3]
   15b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b0c:	add	r3, r3, #1
   15b10:	ldr	r2, [fp, #-12]
   15b14:	ldrb	r2, [r2, #1]
   15b18:	strb	r2, [r3]
   15b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b20:	sub	r3, r3, #2
   15b24:	str	r3, [fp, #-20]	; 0xffffffec
   15b28:	ldrh	r2, [fp, #-14]
   15b2c:	movw	r3, #34079	; 0x851f
   15b30:	movt	r3, #20971	; 0x51eb
   15b34:	umull	r1, r3, r3, r2
   15b38:	lsr	r3, r3, #5
   15b3c:	mov	r1, #100	; 0x64
   15b40:	mul	r3, r1, r3
   15b44:	sub	r3, r2, r3
   15b48:	uxth	r3, r3
   15b4c:	lsl	r3, r3, #1
   15b50:	mov	r2, r3
   15b54:	ldr	r3, [pc, #412]	; 15cf8 <main@@Base+0xddc>
   15b58:	add	r3, pc, r3
   15b5c:	add	r3, r2, r3
   15b60:	str	r3, [fp, #-12]
   15b64:	ldrh	r2, [fp, #-14]
   15b68:	movw	r3, #34079	; 0x851f
   15b6c:	movt	r3, #20971	; 0x51eb
   15b70:	umull	r2, r3, r3, r2
   15b74:	lsr	r3, r3, #5
   15b78:	strh	r3, [fp, #-14]
   15b7c:	ldr	r3, [fp, #-12]
   15b80:	ldrb	r2, [r3]
   15b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b88:	strb	r2, [r3]
   15b8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b90:	add	r3, r3, #1
   15b94:	ldr	r2, [fp, #-12]
   15b98:	ldrb	r2, [r2, #1]
   15b9c:	strb	r2, [r3]
   15ba0:	ldrh	r3, [fp, #-14]
   15ba4:	uxtb	r2, r3
   15ba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bac:	sub	r3, r3, #1
   15bb0:	add	r2, r2, #48	; 0x30
   15bb4:	uxtb	r2, r2
   15bb8:	strb	r2, [r3]
   15bbc:	b	15ce0 <main@@Base+0xdc4>
   15bc0:	ldr	r3, [fp, #-8]
   15bc4:	cmp	r3, #2
   15bc8:	beq	15c5c <main@@Base+0xd40>
   15bcc:	ldr	r3, [fp, #-8]
   15bd0:	cmp	r3, #4
   15bd4:	bne	15ce0 <main@@Base+0xdc4>
   15bd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bdc:	sub	r3, r3, #2
   15be0:	str	r3, [fp, #-20]	; 0xffffffec
   15be4:	ldrh	r2, [fp, #-14]
   15be8:	movw	r3, #34079	; 0x851f
   15bec:	movt	r3, #20971	; 0x51eb
   15bf0:	umull	r1, r3, r3, r2
   15bf4:	lsr	r3, r3, #5
   15bf8:	mov	r1, #100	; 0x64
   15bfc:	mul	r3, r1, r3
   15c00:	sub	r3, r2, r3
   15c04:	uxth	r3, r3
   15c08:	lsl	r3, r3, #1
   15c0c:	mov	r2, r3
   15c10:	ldr	r3, [pc, #228]	; 15cfc <main@@Base+0xde0>
   15c14:	add	r3, pc, r3
   15c18:	add	r3, r2, r3
   15c1c:	str	r3, [fp, #-12]
   15c20:	ldrh	r2, [fp, #-14]
   15c24:	movw	r3, #34079	; 0x851f
   15c28:	movt	r3, #20971	; 0x51eb
   15c2c:	umull	r2, r3, r3, r2
   15c30:	lsr	r3, r3, #5
   15c34:	strh	r3, [fp, #-14]
   15c38:	ldr	r3, [fp, #-12]
   15c3c:	ldrb	r2, [r3]
   15c40:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c44:	strb	r2, [r3]
   15c48:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c4c:	add	r3, r3, #1
   15c50:	ldr	r2, [fp, #-12]
   15c54:	ldrb	r2, [r2, #1]
   15c58:	strb	r2, [r3]
   15c5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c60:	sub	r3, r3, #2
   15c64:	str	r3, [fp, #-20]	; 0xffffffec
   15c68:	ldrh	r2, [fp, #-14]
   15c6c:	movw	r3, #34079	; 0x851f
   15c70:	movt	r3, #20971	; 0x51eb
   15c74:	umull	r1, r3, r3, r2
   15c78:	lsr	r3, r3, #5
   15c7c:	mov	r1, #100	; 0x64
   15c80:	mul	r3, r1, r3
   15c84:	sub	r3, r2, r3
   15c88:	uxth	r3, r3
   15c8c:	lsl	r3, r3, #1
   15c90:	mov	r2, r3
   15c94:	ldr	r3, [pc, #100]	; 15d00 <main@@Base+0xde4>
   15c98:	add	r3, pc, r3
   15c9c:	add	r3, r2, r3
   15ca0:	str	r3, [fp, #-12]
   15ca4:	ldrh	r2, [fp, #-14]
   15ca8:	movw	r3, #34079	; 0x851f
   15cac:	movt	r3, #20971	; 0x51eb
   15cb0:	umull	r2, r3, r3, r2
   15cb4:	lsr	r3, r3, #5
   15cb8:	strh	r3, [fp, #-14]
   15cbc:	ldr	r3, [fp, #-12]
   15cc0:	ldrb	r2, [r3]
   15cc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cc8:	strb	r2, [r3]
   15ccc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15cd0:	add	r3, r3, #1
   15cd4:	ldr	r2, [fp, #-12]
   15cd8:	ldrb	r2, [r2, #1]
   15cdc:	strb	r2, [r3]
   15ce0:	ldr	r3, [fp, #-8]
   15ce4:	mov	r0, r3
   15ce8:	add	sp, fp, #0
   15cec:	pop	{fp}		; (ldr fp, [sp], #4)
   15cf0:	bx	lr
   15cf4:	andeq	lr, r0, r8, ror fp
   15cf8:	strdeq	lr, [r0], -r4
   15cfc:	andeq	lr, r0, r8, lsr sl
   15d00:			; <UNDEFINED> instruction: 0x0000e9b4
   15d04:	push	{fp}		; (str fp, [sp, #-4]!)
   15d08:	add	fp, sp, #0
   15d0c:	sub	sp, sp, #20
   15d10:	str	r0, [fp, #-16]
   15d14:	str	r1, [fp, #-20]	; 0xffffffec
   15d18:	mov	r3, #0
   15d1c:	str	r3, [fp, #-8]
   15d20:	ldr	r3, [fp, #-16]
   15d24:	movw	r2, #9999	; 0x270f
   15d28:	cmp	r3, r2
   15d2c:	bls	15ddc <main@@Base+0xec0>
   15d30:	ldr	r2, [fp, #-16]
   15d34:	movw	r3, #38527	; 0x967f
   15d38:	movt	r3, #152	; 0x98
   15d3c:	cmp	r2, r3
   15d40:	bls	15d90 <main@@Base+0xe74>
   15d44:	ldr	r2, [fp, #-16]
   15d48:	movw	r3, #51711	; 0xc9ff
   15d4c:	movt	r3, #15258	; 0x3b9a
   15d50:	cmp	r2, r3
   15d54:	bls	15d64 <main@@Base+0xe48>
   15d58:	mov	r3, #10
   15d5c:	str	r3, [fp, #-8]
   15d60:	b	15e2c <main@@Base+0xf10>
   15d64:	ldr	r2, [fp, #-16]
   15d68:	movw	r3, #57599	; 0xe0ff
   15d6c:	movt	r3, #1525	; 0x5f5
   15d70:	cmp	r2, r3
   15d74:	bls	15d84 <main@@Base+0xe68>
   15d78:	mov	r3, #9
   15d7c:	str	r3, [fp, #-8]
   15d80:	b	15e2c <main@@Base+0xf10>
   15d84:	mov	r3, #8
   15d88:	str	r3, [fp, #-8]
   15d8c:	b	15e2c <main@@Base+0xf10>
   15d90:	ldr	r2, [fp, #-16]
   15d94:	movw	r3, #16959	; 0x423f
   15d98:	movt	r3, #15
   15d9c:	cmp	r2, r3
   15da0:	bls	15db0 <main@@Base+0xe94>
   15da4:	mov	r3, #7
   15da8:	str	r3, [fp, #-8]
   15dac:	b	15e2c <main@@Base+0xf10>
   15db0:	ldr	r2, [fp, #-16]
   15db4:	movw	r3, #34463	; 0x869f
   15db8:	movt	r3, #1
   15dbc:	cmp	r2, r3
   15dc0:	bls	15dd0 <main@@Base+0xeb4>
   15dc4:	mov	r3, #6
   15dc8:	str	r3, [fp, #-8]
   15dcc:	b	15e2c <main@@Base+0xf10>
   15dd0:	mov	r3, #5
   15dd4:	str	r3, [fp, #-8]
   15dd8:	b	15e2c <main@@Base+0xf10>
   15ddc:	ldr	r3, [fp, #-16]
   15de0:	cmp	r3, #99	; 0x63
   15de4:	bls	15e0c <main@@Base+0xef0>
   15de8:	ldr	r3, [fp, #-16]
   15dec:	cmp	r3, #1000	; 0x3e8
   15df0:	bcc	15e00 <main@@Base+0xee4>
   15df4:	mov	r3, #4
   15df8:	str	r3, [fp, #-8]
   15dfc:	b	15e2c <main@@Base+0xf10>
   15e00:	mov	r3, #3
   15e04:	str	r3, [fp, #-8]
   15e08:	b	15e2c <main@@Base+0xf10>
   15e0c:	ldr	r3, [fp, #-16]
   15e10:	cmp	r3, #9
   15e14:	bls	15e24 <main@@Base+0xf08>
   15e18:	mov	r3, #2
   15e1c:	str	r3, [fp, #-8]
   15e20:	b	15e2c <main@@Base+0xf10>
   15e24:	mov	r3, #1
   15e28:	str	r3, [fp, #-8]
   15e2c:	ldr	r3, [fp, #-8]
   15e30:	ldr	r2, [fp, #-20]	; 0xffffffec
   15e34:	add	r3, r2, r3
   15e38:	str	r3, [fp, #-20]	; 0xffffffec
   15e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e40:	mov	r2, #0
   15e44:	strb	r2, [r3]
   15e48:	ldr	r3, [fp, #-8]
   15e4c:	and	r3, r3, #1
   15e50:	cmp	r3, #0
   15e54:	beq	160a0 <main@@Base+0x1184>
   15e58:	ldr	r3, [fp, #-8]
   15e5c:	sub	r3, r3, #1
   15e60:	cmp	r3, #8
   15e64:	addls	pc, pc, r3, lsl #2
   15e68:	b	16344 <main@@Base+0x1428>
   15e6c:	b	16080 <main@@Base+0x1164>
   15e70:	b	16344 <main@@Base+0x1428>
   15e74:	b	16004 <main@@Base+0x10e8>
   15e78:	b	16344 <main@@Base+0x1428>
   15e7c:	b	15f88 <main@@Base+0x106c>
   15e80:	b	16344 <main@@Base+0x1428>
   15e84:	b	15f0c <main@@Base+0xff0>
   15e88:	b	16344 <main@@Base+0x1428>
   15e8c:	b	15e90 <main@@Base+0xf74>
   15e90:	ldr	r3, [fp, #-20]	; 0xffffffec
   15e94:	sub	r3, r3, #2
   15e98:	str	r3, [fp, #-20]	; 0xffffffec
   15e9c:	ldr	r2, [fp, #-16]
   15ea0:	movw	r3, #34079	; 0x851f
   15ea4:	movt	r3, #20971	; 0x51eb
   15ea8:	umull	r1, r3, r3, r2
   15eac:	lsr	r3, r3, #5
   15eb0:	mov	r1, #100	; 0x64
   15eb4:	mul	r3, r1, r3
   15eb8:	sub	r3, r2, r3
   15ebc:	lsl	r3, r3, #1
   15ec0:	ldr	r2, [pc, #1168]	; 16358 <main@@Base+0x143c>
   15ec4:	add	r2, pc, r2
   15ec8:	add	r3, r3, r2
   15ecc:	str	r3, [fp, #-12]
   15ed0:	ldr	r2, [fp, #-16]
   15ed4:	movw	r3, #34079	; 0x851f
   15ed8:	movt	r3, #20971	; 0x51eb
   15edc:	umull	r2, r3, r3, r2
   15ee0:	lsr	r3, r3, #5
   15ee4:	str	r3, [fp, #-16]
   15ee8:	ldr	r3, [fp, #-12]
   15eec:	ldrb	r2, [r3]
   15ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ef4:	strb	r2, [r3]
   15ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15efc:	add	r3, r3, #1
   15f00:	ldr	r2, [fp, #-12]
   15f04:	ldrb	r2, [r2, #1]
   15f08:	strb	r2, [r3]
   15f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f10:	sub	r3, r3, #2
   15f14:	str	r3, [fp, #-20]	; 0xffffffec
   15f18:	ldr	r2, [fp, #-16]
   15f1c:	movw	r3, #34079	; 0x851f
   15f20:	movt	r3, #20971	; 0x51eb
   15f24:	umull	r1, r3, r3, r2
   15f28:	lsr	r3, r3, #5
   15f2c:	mov	r1, #100	; 0x64
   15f30:	mul	r3, r1, r3
   15f34:	sub	r3, r2, r3
   15f38:	lsl	r3, r3, #1
   15f3c:	ldr	r2, [pc, #1048]	; 1635c <main@@Base+0x1440>
   15f40:	add	r2, pc, r2
   15f44:	add	r3, r3, r2
   15f48:	str	r3, [fp, #-12]
   15f4c:	ldr	r2, [fp, #-16]
   15f50:	movw	r3, #34079	; 0x851f
   15f54:	movt	r3, #20971	; 0x51eb
   15f58:	umull	r2, r3, r3, r2
   15f5c:	lsr	r3, r3, #5
   15f60:	str	r3, [fp, #-16]
   15f64:	ldr	r3, [fp, #-12]
   15f68:	ldrb	r2, [r3]
   15f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f70:	strb	r2, [r3]
   15f74:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f78:	add	r3, r3, #1
   15f7c:	ldr	r2, [fp, #-12]
   15f80:	ldrb	r2, [r2, #1]
   15f84:	strb	r2, [r3]
   15f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f8c:	sub	r3, r3, #2
   15f90:	str	r3, [fp, #-20]	; 0xffffffec
   15f94:	ldr	r2, [fp, #-16]
   15f98:	movw	r3, #34079	; 0x851f
   15f9c:	movt	r3, #20971	; 0x51eb
   15fa0:	umull	r1, r3, r3, r2
   15fa4:	lsr	r3, r3, #5
   15fa8:	mov	r1, #100	; 0x64
   15fac:	mul	r3, r1, r3
   15fb0:	sub	r3, r2, r3
   15fb4:	lsl	r3, r3, #1
   15fb8:	ldr	r2, [pc, #928]	; 16360 <main@@Base+0x1444>
   15fbc:	add	r2, pc, r2
   15fc0:	add	r3, r3, r2
   15fc4:	str	r3, [fp, #-12]
   15fc8:	ldr	r2, [fp, #-16]
   15fcc:	movw	r3, #34079	; 0x851f
   15fd0:	movt	r3, #20971	; 0x51eb
   15fd4:	umull	r2, r3, r3, r2
   15fd8:	lsr	r3, r3, #5
   15fdc:	str	r3, [fp, #-16]
   15fe0:	ldr	r3, [fp, #-12]
   15fe4:	ldrb	r2, [r3]
   15fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   15fec:	strb	r2, [r3]
   15ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15ff4:	add	r3, r3, #1
   15ff8:	ldr	r2, [fp, #-12]
   15ffc:	ldrb	r2, [r2, #1]
   16000:	strb	r2, [r3]
   16004:	ldr	r3, [fp, #-20]	; 0xffffffec
   16008:	sub	r3, r3, #2
   1600c:	str	r3, [fp, #-20]	; 0xffffffec
   16010:	ldr	r2, [fp, #-16]
   16014:	movw	r3, #34079	; 0x851f
   16018:	movt	r3, #20971	; 0x51eb
   1601c:	umull	r1, r3, r3, r2
   16020:	lsr	r3, r3, #5
   16024:	mov	r1, #100	; 0x64
   16028:	mul	r3, r1, r3
   1602c:	sub	r3, r2, r3
   16030:	lsl	r3, r3, #1
   16034:	ldr	r2, [pc, #808]	; 16364 <main@@Base+0x1448>
   16038:	add	r2, pc, r2
   1603c:	add	r3, r3, r2
   16040:	str	r3, [fp, #-12]
   16044:	ldr	r2, [fp, #-16]
   16048:	movw	r3, #34079	; 0x851f
   1604c:	movt	r3, #20971	; 0x51eb
   16050:	umull	r2, r3, r3, r2
   16054:	lsr	r3, r3, #5
   16058:	str	r3, [fp, #-16]
   1605c:	ldr	r3, [fp, #-12]
   16060:	ldrb	r2, [r3]
   16064:	ldr	r3, [fp, #-20]	; 0xffffffec
   16068:	strb	r2, [r3]
   1606c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16070:	add	r3, r3, #1
   16074:	ldr	r2, [fp, #-12]
   16078:	ldrb	r2, [r2, #1]
   1607c:	strb	r2, [r3]
   16080:	ldr	r3, [fp, #-16]
   16084:	uxtb	r2, r3
   16088:	ldr	r3, [fp, #-20]	; 0xffffffec
   1608c:	sub	r3, r3, #1
   16090:	add	r2, r2, #48	; 0x30
   16094:	uxtb	r2, r2
   16098:	strb	r2, [r3]
   1609c:	b	16344 <main@@Base+0x1428>
   160a0:	ldr	r3, [fp, #-8]
   160a4:	sub	r3, r3, #2
   160a8:	cmp	r3, #8
   160ac:	addls	pc, pc, r3, lsl #2
   160b0:	b	16344 <main@@Base+0x1428>
   160b4:	b	162c8 <main@@Base+0x13ac>
   160b8:	b	16344 <main@@Base+0x1428>
   160bc:	b	1624c <main@@Base+0x1330>
   160c0:	b	16344 <main@@Base+0x1428>
   160c4:	b	161d0 <main@@Base+0x12b4>
   160c8:	b	16344 <main@@Base+0x1428>
   160cc:	b	16154 <main@@Base+0x1238>
   160d0:	b	16344 <main@@Base+0x1428>
   160d4:	b	160d8 <main@@Base+0x11bc>
   160d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   160dc:	sub	r3, r3, #2
   160e0:	str	r3, [fp, #-20]	; 0xffffffec
   160e4:	ldr	r2, [fp, #-16]
   160e8:	movw	r3, #34079	; 0x851f
   160ec:	movt	r3, #20971	; 0x51eb
   160f0:	umull	r1, r3, r3, r2
   160f4:	lsr	r3, r3, #5
   160f8:	mov	r1, #100	; 0x64
   160fc:	mul	r3, r1, r3
   16100:	sub	r3, r2, r3
   16104:	lsl	r3, r3, #1
   16108:	ldr	r2, [pc, #600]	; 16368 <main@@Base+0x144c>
   1610c:	add	r2, pc, r2
   16110:	add	r3, r3, r2
   16114:	str	r3, [fp, #-12]
   16118:	ldr	r2, [fp, #-16]
   1611c:	movw	r3, #34079	; 0x851f
   16120:	movt	r3, #20971	; 0x51eb
   16124:	umull	r2, r3, r3, r2
   16128:	lsr	r3, r3, #5
   1612c:	str	r3, [fp, #-16]
   16130:	ldr	r3, [fp, #-12]
   16134:	ldrb	r2, [r3]
   16138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1613c:	strb	r2, [r3]
   16140:	ldr	r3, [fp, #-20]	; 0xffffffec
   16144:	add	r3, r3, #1
   16148:	ldr	r2, [fp, #-12]
   1614c:	ldrb	r2, [r2, #1]
   16150:	strb	r2, [r3]
   16154:	ldr	r3, [fp, #-20]	; 0xffffffec
   16158:	sub	r3, r3, #2
   1615c:	str	r3, [fp, #-20]	; 0xffffffec
   16160:	ldr	r2, [fp, #-16]
   16164:	movw	r3, #34079	; 0x851f
   16168:	movt	r3, #20971	; 0x51eb
   1616c:	umull	r1, r3, r3, r2
   16170:	lsr	r3, r3, #5
   16174:	mov	r1, #100	; 0x64
   16178:	mul	r3, r1, r3
   1617c:	sub	r3, r2, r3
   16180:	lsl	r3, r3, #1
   16184:	ldr	r2, [pc, #480]	; 1636c <main@@Base+0x1450>
   16188:	add	r2, pc, r2
   1618c:	add	r3, r3, r2
   16190:	str	r3, [fp, #-12]
   16194:	ldr	r2, [fp, #-16]
   16198:	movw	r3, #34079	; 0x851f
   1619c:	movt	r3, #20971	; 0x51eb
   161a0:	umull	r2, r3, r3, r2
   161a4:	lsr	r3, r3, #5
   161a8:	str	r3, [fp, #-16]
   161ac:	ldr	r3, [fp, #-12]
   161b0:	ldrb	r2, [r3]
   161b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   161b8:	strb	r2, [r3]
   161bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   161c0:	add	r3, r3, #1
   161c4:	ldr	r2, [fp, #-12]
   161c8:	ldrb	r2, [r2, #1]
   161cc:	strb	r2, [r3]
   161d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   161d4:	sub	r3, r3, #2
   161d8:	str	r3, [fp, #-20]	; 0xffffffec
   161dc:	ldr	r2, [fp, #-16]
   161e0:	movw	r3, #34079	; 0x851f
   161e4:	movt	r3, #20971	; 0x51eb
   161e8:	umull	r1, r3, r3, r2
   161ec:	lsr	r3, r3, #5
   161f0:	mov	r1, #100	; 0x64
   161f4:	mul	r3, r1, r3
   161f8:	sub	r3, r2, r3
   161fc:	lsl	r3, r3, #1
   16200:	ldr	r2, [pc, #360]	; 16370 <main@@Base+0x1454>
   16204:	add	r2, pc, r2
   16208:	add	r3, r3, r2
   1620c:	str	r3, [fp, #-12]
   16210:	ldr	r2, [fp, #-16]
   16214:	movw	r3, #34079	; 0x851f
   16218:	movt	r3, #20971	; 0x51eb
   1621c:	umull	r2, r3, r3, r2
   16220:	lsr	r3, r3, #5
   16224:	str	r3, [fp, #-16]
   16228:	ldr	r3, [fp, #-12]
   1622c:	ldrb	r2, [r3]
   16230:	ldr	r3, [fp, #-20]	; 0xffffffec
   16234:	strb	r2, [r3]
   16238:	ldr	r3, [fp, #-20]	; 0xffffffec
   1623c:	add	r3, r3, #1
   16240:	ldr	r2, [fp, #-12]
   16244:	ldrb	r2, [r2, #1]
   16248:	strb	r2, [r3]
   1624c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16250:	sub	r3, r3, #2
   16254:	str	r3, [fp, #-20]	; 0xffffffec
   16258:	ldr	r2, [fp, #-16]
   1625c:	movw	r3, #34079	; 0x851f
   16260:	movt	r3, #20971	; 0x51eb
   16264:	umull	r1, r3, r3, r2
   16268:	lsr	r3, r3, #5
   1626c:	mov	r1, #100	; 0x64
   16270:	mul	r3, r1, r3
   16274:	sub	r3, r2, r3
   16278:	lsl	r3, r3, #1
   1627c:	ldr	r2, [pc, #240]	; 16374 <main@@Base+0x1458>
   16280:	add	r2, pc, r2
   16284:	add	r3, r3, r2
   16288:	str	r3, [fp, #-12]
   1628c:	ldr	r2, [fp, #-16]
   16290:	movw	r3, #34079	; 0x851f
   16294:	movt	r3, #20971	; 0x51eb
   16298:	umull	r2, r3, r3, r2
   1629c:	lsr	r3, r3, #5
   162a0:	str	r3, [fp, #-16]
   162a4:	ldr	r3, [fp, #-12]
   162a8:	ldrb	r2, [r3]
   162ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   162b0:	strb	r2, [r3]
   162b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   162b8:	add	r3, r3, #1
   162bc:	ldr	r2, [fp, #-12]
   162c0:	ldrb	r2, [r2, #1]
   162c4:	strb	r2, [r3]
   162c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   162cc:	sub	r3, r3, #2
   162d0:	str	r3, [fp, #-20]	; 0xffffffec
   162d4:	ldr	r2, [fp, #-16]
   162d8:	movw	r3, #34079	; 0x851f
   162dc:	movt	r3, #20971	; 0x51eb
   162e0:	umull	r1, r3, r3, r2
   162e4:	lsr	r3, r3, #5
   162e8:	mov	r1, #100	; 0x64
   162ec:	mul	r3, r1, r3
   162f0:	sub	r3, r2, r3
   162f4:	lsl	r3, r3, #1
   162f8:	ldr	r2, [pc, #120]	; 16378 <main@@Base+0x145c>
   162fc:	add	r2, pc, r2
   16300:	add	r3, r3, r2
   16304:	str	r3, [fp, #-12]
   16308:	ldr	r2, [fp, #-16]
   1630c:	movw	r3, #34079	; 0x851f
   16310:	movt	r3, #20971	; 0x51eb
   16314:	umull	r2, r3, r3, r2
   16318:	lsr	r3, r3, #5
   1631c:	str	r3, [fp, #-16]
   16320:	ldr	r3, [fp, #-12]
   16324:	ldrb	r2, [r3]
   16328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1632c:	strb	r2, [r3]
   16330:	ldr	r3, [fp, #-20]	; 0xffffffec
   16334:	add	r3, r3, #1
   16338:	ldr	r2, [fp, #-12]
   1633c:	ldrb	r2, [r2, #1]
   16340:	strb	r2, [r3]
   16344:	ldr	r3, [fp, #-8]
   16348:	mov	r0, r3
   1634c:	add	sp, fp, #0
   16350:	pop	{fp}		; (ldr fp, [sp], #4)
   16354:	bx	lr
   16358:	andeq	lr, r0, r8, lsl #15
   1635c:	andeq	lr, r0, ip, lsl #14
   16360:	muleq	r0, r0, r6
   16364:	andeq	lr, r0, r4, lsl r6
   16368:	andeq	lr, r0, r0, asr #10
   1636c:	andeq	lr, r0, r4, asr #9
   16370:	andeq	lr, r0, r8, asr #8
   16374:	andeq	lr, r0, ip, asr #7
   16378:	andeq	lr, r0, r0, asr r3
   1637c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16380:	strd	r6, [sp, #8]
   16384:	strd	r8, [sp, #16]
   16388:	str	fp, [sp, #24]
   1638c:	str	lr, [sp, #28]
   16390:	add	fp, sp, #28
   16394:	sub	sp, sp, #56	; 0x38
   16398:	strd	r0, [fp, #-60]	; 0xffffffc4
   1639c:	str	r2, [fp, #-64]	; 0xffffffc0
   163a0:	mov	r3, #0
   163a4:	str	r3, [fp, #-32]	; 0xffffffe0
   163a8:	add	r3, pc, #800	; 0x320
   163ac:	ldrd	r2, [r3]
   163b0:	strd	r2, [fp, #-44]	; 0xffffffd4
   163b4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   163b8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   163bc:	cmp	r1, r3
   163c0:	cmpeq	r0, r2
   163c4:	bcs	163e0 <main@@Base+0x14c4>
   163c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   163cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   163d0:	mov	r0, r3
   163d4:	bl	15d04 <main@@Base+0xde8>
   163d8:	mov	r3, r0
   163dc:	b	17044 <main@@Base+0x2128>
   163e0:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   163e4:	mov	r2, r4
   163e8:	mov	r3, r5
   163ec:	mov	r0, #0
   163f0:	mov	r1, #0
   163f4:	lsl	r1, r3, #2
   163f8:	orr	r1, r1, r2, lsr #30
   163fc:	lsl	r0, r2, #2
   16400:	mov	r2, r0
   16404:	mov	r3, r1
   16408:	adds	r2, r2, r4
   1640c:	adc	r3, r3, r5
   16410:	mov	r0, #0
   16414:	mov	r1, #0
   16418:	lsl	r1, r3, #3
   1641c:	orr	r1, r1, r2, lsr #29
   16420:	lsl	r0, r2, #3
   16424:	mov	r2, r0
   16428:	mov	r3, r1
   1642c:	subs	r2, r2, r4
   16430:	sbc	r3, r3, r5
   16434:	mov	r0, #0
   16438:	mov	r1, #0
   1643c:	lsl	r1, r3, #4
   16440:	orr	r1, r1, r2, lsr #28
   16444:	lsl	r0, r2, #4
   16448:	mov	r2, r0
   1644c:	mov	r3, r1
   16450:	adds	r2, r2, r4
   16454:	adc	r3, r3, r5
   16458:	mov	r0, #0
   1645c:	mov	r1, #0
   16460:	lsl	r1, r3, #4
   16464:	orr	r1, r1, r2, lsr #28
   16468:	lsl	r0, r2, #4
   1646c:	mov	r2, r0
   16470:	mov	r3, r1
   16474:	mov	r0, r2
   16478:	mov	r1, r3
   1647c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   16480:	cmp	r3, r1
   16484:	cmpeq	r2, r0
   16488:	bcc	16714 <main@@Base+0x17f8>
   1648c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16490:	movw	r3, #38528	; 0x9680
   16494:	movt	r3, #152	; 0x98
   16498:	mul	r2, r3, r2
   1649c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   164a0:	mov	r1, #0
   164a4:	mul	r3, r1, r3
   164a8:	add	r1, r2, r3
   164ac:	ldr	r2, [fp, #-44]	; 0xffffffd4
   164b0:	movw	r3, #38528	; 0x9680
   164b4:	movt	r3, #152	; 0x98
   164b8:	umull	r2, r3, r2, r3
   164bc:	add	r1, r1, r3
   164c0:	mov	r3, r1
   164c4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   164c8:	cmp	r1, r3
   164cc:	cmpeq	r0, r2
   164d0:	bcc	165dc <main@@Base+0x16c0>
   164d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   164d8:	mov	r3, #51712	; 0xca00
   164dc:	movt	r3, #15258	; 0x3b9a
   164e0:	mul	r2, r3, r2
   164e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   164e8:	mov	r1, #0
   164ec:	mul	r3, r1, r3
   164f0:	add	r1, r2, r3
   164f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   164f8:	mov	r3, #51712	; 0xca00
   164fc:	movt	r3, #15258	; 0x3b9a
   16500:	umull	r2, r3, r2, r3
   16504:	add	r1, r1, r3
   16508:	mov	r3, r1
   1650c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16510:	cmp	r1, r3
   16514:	cmpeq	r0, r2
   16518:	bcc	1657c <main@@Base+0x1660>
   1651c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16520:	mov	r3, #58368	; 0xe400
   16524:	movt	r3, #21515	; 0x540b
   16528:	mul	r2, r3, r2
   1652c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16530:	mov	r1, #2
   16534:	mul	r3, r1, r3
   16538:	add	r1, r2, r3
   1653c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16540:	mov	r3, #58368	; 0xe400
   16544:	movt	r3, #21515	; 0x540b
   16548:	umull	r2, r3, r2, r3
   1654c:	add	r1, r1, r3
   16550:	mov	r3, r1
   16554:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16558:	cmp	r1, r3
   1655c:	cmpeq	r0, r2
   16560:	bcc	16570 <main@@Base+0x1654>
   16564:	mov	r3, #20
   16568:	str	r3, [fp, #-32]	; 0xffffffe0
   1656c:	b	16880 <main@@Base+0x1964>
   16570:	mov	r3, #19
   16574:	str	r3, [fp, #-32]	; 0xffffffe0
   16578:	b	16880 <main@@Base+0x1964>
   1657c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16580:	mov	r3, #57600	; 0xe100
   16584:	movt	r3, #1525	; 0x5f5
   16588:	mul	r2, r3, r2
   1658c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16590:	mov	r1, #0
   16594:	mul	r3, r1, r3
   16598:	add	r1, r2, r3
   1659c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   165a0:	mov	r3, #57600	; 0xe100
   165a4:	movt	r3, #1525	; 0x5f5
   165a8:	umull	r2, r3, r2, r3
   165ac:	add	r1, r1, r3
   165b0:	mov	r3, r1
   165b4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   165b8:	cmp	r1, r3
   165bc:	cmpeq	r0, r2
   165c0:	bcc	165d0 <main@@Base+0x16b4>
   165c4:	mov	r3, #18
   165c8:	str	r3, [fp, #-32]	; 0xffffffe0
   165cc:	b	16880 <main@@Base+0x1964>
   165d0:	mov	r3, #17
   165d4:	str	r3, [fp, #-32]	; 0xffffffe0
   165d8:	b	16880 <main@@Base+0x1964>
   165dc:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   165e0:	mov	r2, r4
   165e4:	mov	r3, r5
   165e8:	mov	r0, #0
   165ec:	mov	r1, #0
   165f0:	lsl	r1, r3, #5
   165f4:	orr	r1, r1, r2, lsr #27
   165f8:	lsl	r0, r2, #5
   165fc:	mov	r2, r0
   16600:	mov	r3, r1
   16604:	subs	r2, r2, r4
   16608:	sbc	r3, r3, r5
   1660c:	mov	r0, #0
   16610:	mov	r1, #0
   16614:	lsl	r1, r3, #9
   16618:	orr	r1, r1, r2, lsr #23
   1661c:	lsl	r0, r2, #9
   16620:	mov	r2, r0
   16624:	mov	r3, r1
   16628:	adds	r2, r2, r4
   1662c:	adc	r3, r3, r5
   16630:	mov	r0, #0
   16634:	mov	r1, #0
   16638:	lsl	r1, r3, #6
   1663c:	orr	r1, r1, r2, lsr #26
   16640:	lsl	r0, r2, #6
   16644:	subs	r0, r0, r2
   16648:	sbc	r1, r1, r3
   1664c:	adds	r8, r0, r4
   16650:	adc	r9, r1, r5
   16654:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   16658:	cmp	r3, r9
   1665c:	cmpeq	r2, r8
   16660:	bcc	16670 <main@@Base+0x1754>
   16664:	mov	r3, #16
   16668:	str	r3, [fp, #-32]	; 0xffffffe0
   1666c:	b	16880 <main@@Base+0x1964>
   16670:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16674:	movw	r3, #34464	; 0x86a0
   16678:	movt	r3, #1
   1667c:	mul	r2, r3, r2
   16680:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16684:	mov	r1, #0
   16688:	mul	r3, r1, r3
   1668c:	add	r1, r2, r3
   16690:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16694:	movw	r3, #34464	; 0x86a0
   16698:	movt	r3, #1
   1669c:	umull	r2, r3, r2, r3
   166a0:	add	r1, r1, r3
   166a4:	mov	r3, r1
   166a8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   166ac:	cmp	r1, r3
   166b0:	cmpeq	r0, r2
   166b4:	bcc	166c4 <main@@Base+0x17a8>
   166b8:	mov	r3, #15
   166bc:	str	r3, [fp, #-32]	; 0xffffffe0
   166c0:	b	16880 <main@@Base+0x1964>
   166c4:	mov	r3, #14
   166c8:	str	r3, [fp, #-32]	; 0xffffffe0
   166cc:	b	16880 <main@@Base+0x1964>
   166d0:	blcc	fe6c8ed8 <__bss_end__@@Base+0xfe692e38>
   166d4:	andeq	r0, r0, r0
   166d8:	andeq	sp, r0, r0, asr #26
   166dc:	andeq	sp, r0, ip, asr #25
   166e0:	andeq	sp, r0, r8, asr ip
   166e4:	andeq	sp, r0, r4, ror #23
   166e8:	andeq	sp, r0, r0, ror fp
   166ec:	andeq	sp, r0, ip, ror #20
   166f0:	strdeq	sp, [r0], -r8
   166f4:	andeq	sp, r0, r4, lsl #19
   166f8:	andeq	sp, r0, r0, lsl r9
   166fc:	muleq	r0, ip, r8
   16700:	andeq	sp, r0, r8, lsr #16
   16704:			; <UNDEFINED> instruction: 0x0000d7b4
   16708:	andeq	sp, r0, r0, asr #14
   1670c:	andeq	sp, r0, ip, asr #13
   16710:	andeq	sp, r0, r8, asr r6
   16714:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   16718:	mov	r2, r4
   1671c:	mov	r3, r5
   16720:	adds	r1, r2, r2
   16724:	str	r1, [fp, #-76]	; 0xffffffb4
   16728:	adc	r3, r3, r3
   1672c:	str	r3, [fp, #-72]	; 0xffffffb8
   16730:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   16734:	adds	r2, r2, r4
   16738:	adc	r3, r3, r5
   1673c:	mov	r0, #0
   16740:	mov	r1, #0
   16744:	lsl	r1, r3, #5
   16748:	orr	r1, r1, r2, lsr #27
   1674c:	lsl	r0, r2, #5
   16750:	adds	r2, r2, r0
   16754:	adc	r3, r3, r1
   16758:	adds	r6, r2, r4
   1675c:	adc	r7, r3, r5
   16760:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   16764:	cmp	r3, r7
   16768:	cmpeq	r2, r6
   1676c:	bcc	16810 <main@@Base+0x18f4>
   16770:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   16774:	mov	r2, r0
   16778:	mov	r3, r1
   1677c:	mov	r4, #0
   16780:	mov	r5, #0
   16784:	lsl	r5, r3, #5
   16788:	orr	r5, r5, r2, lsr #27
   1678c:	lsl	r4, r2, #5
   16790:	mov	r2, r4
   16794:	mov	r3, r5
   16798:	subs	r2, r2, r0
   1679c:	sbc	r3, r3, r1
   167a0:	mov	r4, #0
   167a4:	mov	r5, #0
   167a8:	lsl	r5, r3, #2
   167ac:	orr	r5, r5, r2, lsr #30
   167b0:	lsl	r4, r2, #2
   167b4:	mov	r2, r4
   167b8:	mov	r3, r5
   167bc:	adds	r2, r2, r0
   167c0:	adc	r3, r3, r1
   167c4:	mov	r0, #0
   167c8:	mov	r1, #0
   167cc:	lsl	r1, r3, #3
   167d0:	orr	r1, r1, r2, lsr #29
   167d4:	lsl	r0, r2, #3
   167d8:	mov	r2, r0
   167dc:	mov	r3, r1
   167e0:	mov	r0, r2
   167e4:	mov	r1, r3
   167e8:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   167ec:	cmp	r3, r1
   167f0:	cmpeq	r2, r0
   167f4:	bcc	16804 <main@@Base+0x18e8>
   167f8:	mov	r3, #13
   167fc:	str	r3, [fp, #-32]	; 0xffffffe0
   16800:	b	16880 <main@@Base+0x1964>
   16804:	mov	r3, #12
   16808:	str	r3, [fp, #-32]	; 0xffffffe0
   1680c:	b	16880 <main@@Base+0x1964>
   16810:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   16814:	mov	r2, r4
   16818:	mov	r3, r5
   1681c:	mov	r0, #0
   16820:	mov	r1, #0
   16824:	lsl	r1, r3, #2
   16828:	orr	r1, r1, r2, lsr #30
   1682c:	lsl	r0, r2, #2
   16830:	mov	r2, r0
   16834:	mov	r3, r1
   16838:	adds	r2, r2, r4
   1683c:	adc	r3, r3, r5
   16840:	adds	r1, r2, r2
   16844:	str	r1, [fp, #-84]	; 0xffffffac
   16848:	adc	r3, r3, r3
   1684c:	str	r3, [fp, #-80]	; 0xffffffb0
   16850:	ldrd	r2, [fp, #-84]	; 0xffffffac
   16854:	mov	r0, r2
   16858:	mov	r1, r3
   1685c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   16860:	cmp	r3, r1
   16864:	cmpeq	r2, r0
   16868:	bcc	16878 <main@@Base+0x195c>
   1686c:	mov	r3, #11
   16870:	str	r3, [fp, #-32]	; 0xffffffe0
   16874:	b	16880 <main@@Base+0x1964>
   16878:	mov	r3, #10
   1687c:	str	r3, [fp, #-32]	; 0xffffffe0
   16880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16884:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16888:	add	r3, r2, r3
   1688c:	str	r3, [fp, #-64]	; 0xffffffc0
   16890:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16894:	mov	r2, #0
   16898:	strb	r2, [r3]
   1689c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   168a0:	and	r3, r3, #1
   168a4:	cmp	r3, #0
   168a8:	beq	16b78 <main@@Base+0x1c5c>
   168ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   168b0:	sub	r3, r3, #11
   168b4:	cmp	r3, #8
   168b8:	addls	pc, pc, r3, lsl #2
   168bc:	b	16e70 <main@@Base+0x1f54>
   168c0:	b	16ab4 <main@@Base+0x1b98>
   168c4:	b	16e70 <main@@Base+0x1f54>
   168c8:	b	16a40 <main@@Base+0x1b24>
   168cc:	b	16e70 <main@@Base+0x1f54>
   168d0:	b	169cc <main@@Base+0x1ab0>
   168d4:	b	16e70 <main@@Base+0x1f54>
   168d8:	b	16958 <main@@Base+0x1a3c>
   168dc:	b	16e70 <main@@Base+0x1f54>
   168e0:	b	168e4 <main@@Base+0x19c8>
   168e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   168e8:	sub	r3, r3, #2
   168ec:	str	r3, [fp, #-64]	; 0xffffffc0
   168f0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   168f4:	mov	r2, #100	; 0x64
   168f8:	mov	r3, #0
   168fc:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16900:	mov	r3, r2
   16904:	lsl	r3, r3, #1
   16908:	ldr	r2, [pc, #-568]	; 166d8 <main@@Base+0x17bc>
   1690c:	add	r2, pc, r2
   16910:	add	r3, r3, r2
   16914:	str	r3, [fp, #-48]	; 0xffffffd0
   16918:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   1691c:	mov	r2, #100	; 0x64
   16920:	mov	r3, #0
   16924:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16928:	mov	r2, r0
   1692c:	mov	r3, r1
   16930:	strd	r2, [fp, #-60]	; 0xffffffc4
   16934:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16938:	ldrb	r2, [r3]
   1693c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16940:	strb	r2, [r3]
   16944:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16948:	add	r3, r3, #1
   1694c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16950:	ldrb	r2, [r2, #1]
   16954:	strb	r2, [r3]
   16958:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1695c:	sub	r3, r3, #2
   16960:	str	r3, [fp, #-64]	; 0xffffffc0
   16964:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16968:	mov	r2, #100	; 0x64
   1696c:	mov	r3, #0
   16970:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16974:	mov	r3, r2
   16978:	lsl	r3, r3, #1
   1697c:	ldr	r2, [pc, #-680]	; 166dc <main@@Base+0x17c0>
   16980:	add	r2, pc, r2
   16984:	add	r3, r3, r2
   16988:	str	r3, [fp, #-48]	; 0xffffffd0
   1698c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16990:	mov	r2, #100	; 0x64
   16994:	mov	r3, #0
   16998:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   1699c:	mov	r2, r0
   169a0:	mov	r3, r1
   169a4:	strd	r2, [fp, #-60]	; 0xffffffc4
   169a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   169ac:	ldrb	r2, [r3]
   169b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   169b4:	strb	r2, [r3]
   169b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   169bc:	add	r3, r3, #1
   169c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   169c4:	ldrb	r2, [r2, #1]
   169c8:	strb	r2, [r3]
   169cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   169d0:	sub	r3, r3, #2
   169d4:	str	r3, [fp, #-64]	; 0xffffffc0
   169d8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   169dc:	mov	r2, #100	; 0x64
   169e0:	mov	r3, #0
   169e4:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   169e8:	mov	r3, r2
   169ec:	lsl	r3, r3, #1
   169f0:	ldr	r2, [pc, #-792]	; 166e0 <main@@Base+0x17c4>
   169f4:	add	r2, pc, r2
   169f8:	add	r3, r3, r2
   169fc:	str	r3, [fp, #-48]	; 0xffffffd0
   16a00:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16a04:	mov	r2, #100	; 0x64
   16a08:	mov	r3, #0
   16a0c:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16a10:	mov	r2, r0
   16a14:	mov	r3, r1
   16a18:	strd	r2, [fp, #-60]	; 0xffffffc4
   16a1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a20:	ldrb	r2, [r3]
   16a24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16a28:	strb	r2, [r3]
   16a2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16a30:	add	r3, r3, #1
   16a34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16a38:	ldrb	r2, [r2, #1]
   16a3c:	strb	r2, [r3]
   16a40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16a44:	sub	r3, r3, #2
   16a48:	str	r3, [fp, #-64]	; 0xffffffc0
   16a4c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16a50:	mov	r2, #100	; 0x64
   16a54:	mov	r3, #0
   16a58:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16a5c:	mov	r3, r2
   16a60:	lsl	r3, r3, #1
   16a64:	ldr	r2, [pc, #-904]	; 166e4 <main@@Base+0x17c8>
   16a68:	add	r2, pc, r2
   16a6c:	add	r3, r3, r2
   16a70:	str	r3, [fp, #-48]	; 0xffffffd0
   16a74:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16a78:	mov	r2, #100	; 0x64
   16a7c:	mov	r3, #0
   16a80:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16a84:	mov	r2, r0
   16a88:	mov	r3, r1
   16a8c:	strd	r2, [fp, #-60]	; 0xffffffc4
   16a90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a94:	ldrb	r2, [r3]
   16a98:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16a9c:	strb	r2, [r3]
   16aa0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16aa4:	add	r3, r3, #1
   16aa8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16aac:	ldrb	r2, [r2, #1]
   16ab0:	strb	r2, [r3]
   16ab4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16ab8:	sub	r3, r3, #2
   16abc:	str	r3, [fp, #-64]	; 0xffffffc0
   16ac0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16ac4:	mov	r2, #100	; 0x64
   16ac8:	mov	r3, #0
   16acc:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16ad0:	mov	r3, r2
   16ad4:	lsl	r3, r3, #1
   16ad8:	ldr	r2, [pc, #-1016]	; 166e8 <main@@Base+0x17cc>
   16adc:	add	r2, pc, r2
   16ae0:	add	r3, r3, r2
   16ae4:	str	r3, [fp, #-48]	; 0xffffffd0
   16ae8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16aec:	mov	r2, #100	; 0x64
   16af0:	mov	r3, #0
   16af4:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16af8:	mov	r2, r0
   16afc:	mov	r3, r1
   16b00:	strd	r2, [fp, #-60]	; 0xffffffc4
   16b04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16b08:	ldrb	r2, [r3]
   16b0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b10:	strb	r2, [r3]
   16b14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b18:	add	r3, r3, #1
   16b1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16b20:	ldrb	r2, [r2, #1]
   16b24:	strb	r2, [r3]
   16b28:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16b2c:	mov	r2, #10
   16b30:	mov	r3, #0
   16b34:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16b38:	uxtb	r3, r2
   16b3c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16b40:	sub	r2, r2, #1
   16b44:	str	r2, [fp, #-64]	; 0xffffffc0
   16b48:	add	r3, r3, #48	; 0x30
   16b4c:	uxtb	r2, r3
   16b50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b54:	strb	r2, [r3]
   16b58:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16b5c:	mov	r2, #10
   16b60:	mov	r3, #0
   16b64:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16b68:	mov	r2, r0
   16b6c:	mov	r3, r1
   16b70:	strd	r2, [fp, #-60]	; 0xffffffc4
   16b74:	b	16e70 <main@@Base+0x1f54>
   16b78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16b7c:	sub	r3, r3, #10
   16b80:	cmp	r3, #10
   16b84:	addls	pc, pc, r3, lsl #2
   16b88:	b	16e70 <main@@Base+0x1f54>
   16b8c:	b	16dfc <main@@Base+0x1ee0>
   16b90:	b	16e70 <main@@Base+0x1f54>
   16b94:	b	16d88 <main@@Base+0x1e6c>
   16b98:	b	16e70 <main@@Base+0x1f54>
   16b9c:	b	16d14 <main@@Base+0x1df8>
   16ba0:	b	16e70 <main@@Base+0x1f54>
   16ba4:	b	16ca0 <main@@Base+0x1d84>
   16ba8:	b	16e70 <main@@Base+0x1f54>
   16bac:	b	16c2c <main@@Base+0x1d10>
   16bb0:	b	16e70 <main@@Base+0x1f54>
   16bb4:	b	16bb8 <main@@Base+0x1c9c>
   16bb8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16bbc:	sub	r3, r3, #2
   16bc0:	str	r3, [fp, #-64]	; 0xffffffc0
   16bc4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16bc8:	mov	r2, #100	; 0x64
   16bcc:	mov	r3, #0
   16bd0:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16bd4:	mov	r3, r2
   16bd8:	lsl	r3, r3, #1
   16bdc:	ldr	r2, [pc, #-1272]	; 166ec <main@@Base+0x17d0>
   16be0:	add	r2, pc, r2
   16be4:	add	r3, r3, r2
   16be8:	str	r3, [fp, #-48]	; 0xffffffd0
   16bec:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16bf0:	mov	r2, #100	; 0x64
   16bf4:	mov	r3, #0
   16bf8:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16bfc:	mov	r2, r0
   16c00:	mov	r3, r1
   16c04:	strd	r2, [fp, #-60]	; 0xffffffc4
   16c08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c0c:	ldrb	r2, [r3]
   16c10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16c14:	strb	r2, [r3]
   16c18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16c1c:	add	r3, r3, #1
   16c20:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16c24:	ldrb	r2, [r2, #1]
   16c28:	strb	r2, [r3]
   16c2c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16c30:	sub	r3, r3, #2
   16c34:	str	r3, [fp, #-64]	; 0xffffffc0
   16c38:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16c3c:	mov	r2, #100	; 0x64
   16c40:	mov	r3, #0
   16c44:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16c48:	mov	r3, r2
   16c4c:	lsl	r3, r3, #1
   16c50:	ldr	r2, [pc, #-1384]	; 166f0 <main@@Base+0x17d4>
   16c54:	add	r2, pc, r2
   16c58:	add	r3, r3, r2
   16c5c:	str	r3, [fp, #-48]	; 0xffffffd0
   16c60:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16c64:	mov	r2, #100	; 0x64
   16c68:	mov	r3, #0
   16c6c:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16c70:	mov	r2, r0
   16c74:	mov	r3, r1
   16c78:	strd	r2, [fp, #-60]	; 0xffffffc4
   16c7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c80:	ldrb	r2, [r3]
   16c84:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16c88:	strb	r2, [r3]
   16c8c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16c90:	add	r3, r3, #1
   16c94:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16c98:	ldrb	r2, [r2, #1]
   16c9c:	strb	r2, [r3]
   16ca0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16ca4:	sub	r3, r3, #2
   16ca8:	str	r3, [fp, #-64]	; 0xffffffc0
   16cac:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16cb0:	mov	r2, #100	; 0x64
   16cb4:	mov	r3, #0
   16cb8:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16cbc:	mov	r3, r2
   16cc0:	lsl	r3, r3, #1
   16cc4:	ldr	r2, [pc, #-1496]	; 166f4 <main@@Base+0x17d8>
   16cc8:	add	r2, pc, r2
   16ccc:	add	r3, r3, r2
   16cd0:	str	r3, [fp, #-48]	; 0xffffffd0
   16cd4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16cd8:	mov	r2, #100	; 0x64
   16cdc:	mov	r3, #0
   16ce0:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16ce4:	mov	r2, r0
   16ce8:	mov	r3, r1
   16cec:	strd	r2, [fp, #-60]	; 0xffffffc4
   16cf0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16cf4:	ldrb	r2, [r3]
   16cf8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16cfc:	strb	r2, [r3]
   16d00:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d04:	add	r3, r3, #1
   16d08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16d0c:	ldrb	r2, [r2, #1]
   16d10:	strb	r2, [r3]
   16d14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d18:	sub	r3, r3, #2
   16d1c:	str	r3, [fp, #-64]	; 0xffffffc0
   16d20:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16d24:	mov	r2, #100	; 0x64
   16d28:	mov	r3, #0
   16d2c:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16d30:	mov	r3, r2
   16d34:	lsl	r3, r3, #1
   16d38:	ldr	r2, [pc, #-1608]	; 166f8 <main@@Base+0x17dc>
   16d3c:	add	r2, pc, r2
   16d40:	add	r3, r3, r2
   16d44:	str	r3, [fp, #-48]	; 0xffffffd0
   16d48:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16d4c:	mov	r2, #100	; 0x64
   16d50:	mov	r3, #0
   16d54:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16d58:	mov	r2, r0
   16d5c:	mov	r3, r1
   16d60:	strd	r2, [fp, #-60]	; 0xffffffc4
   16d64:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d68:	ldrb	r2, [r3]
   16d6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d70:	strb	r2, [r3]
   16d74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d78:	add	r3, r3, #1
   16d7c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16d80:	ldrb	r2, [r2, #1]
   16d84:	strb	r2, [r3]
   16d88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16d8c:	sub	r3, r3, #2
   16d90:	str	r3, [fp, #-64]	; 0xffffffc0
   16d94:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16d98:	mov	r2, #100	; 0x64
   16d9c:	mov	r3, #0
   16da0:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16da4:	mov	r3, r2
   16da8:	lsl	r3, r3, #1
   16dac:	ldr	r2, [pc, #-1720]	; 166fc <main@@Base+0x17e0>
   16db0:	add	r2, pc, r2
   16db4:	add	r3, r3, r2
   16db8:	str	r3, [fp, #-48]	; 0xffffffd0
   16dbc:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16dc0:	mov	r2, #100	; 0x64
   16dc4:	mov	r3, #0
   16dc8:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16dcc:	mov	r2, r0
   16dd0:	mov	r3, r1
   16dd4:	strd	r2, [fp, #-60]	; 0xffffffc4
   16dd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ddc:	ldrb	r2, [r3]
   16de0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16de4:	strb	r2, [r3]
   16de8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16dec:	add	r3, r3, #1
   16df0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16df4:	ldrb	r2, [r2, #1]
   16df8:	strb	r2, [r3]
   16dfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e00:	sub	r3, r3, #2
   16e04:	str	r3, [fp, #-64]	; 0xffffffc0
   16e08:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16e0c:	mov	r2, #100	; 0x64
   16e10:	mov	r3, #0
   16e14:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16e18:	mov	r3, r2
   16e1c:	lsl	r3, r3, #1
   16e20:	ldr	r2, [pc, #-1832]	; 16700 <main@@Base+0x17e4>
   16e24:	add	r2, pc, r2
   16e28:	add	r3, r3, r2
   16e2c:	str	r3, [fp, #-48]	; 0xffffffd0
   16e30:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16e34:	mov	r2, #100	; 0x64
   16e38:	mov	r3, #0
   16e3c:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16e40:	mov	r2, r0
   16e44:	mov	r3, r1
   16e48:	strd	r2, [fp, #-60]	; 0xffffffc4
   16e4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16e50:	ldrb	r2, [r3]
   16e54:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e58:	strb	r2, [r3]
   16e5c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e60:	add	r3, r3, #1
   16e64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16e68:	ldrb	r2, [r2, #1]
   16e6c:	strb	r2, [r3]
   16e70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16e74:	sub	r3, r3, #2
   16e78:	str	r3, [fp, #-64]	; 0xffffffc0
   16e7c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16e80:	mov	r2, #100	; 0x64
   16e84:	mov	r3, #0
   16e88:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16e8c:	mov	r3, r2
   16e90:	lsl	r3, r3, #1
   16e94:	ldr	r2, [pc, #-1944]	; 16704 <main@@Base+0x17e8>
   16e98:	add	r2, pc, r2
   16e9c:	add	r3, r3, r2
   16ea0:	str	r3, [fp, #-48]	; 0xffffffd0
   16ea4:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16ea8:	mov	r2, #100	; 0x64
   16eac:	mov	r3, #0
   16eb0:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16eb4:	mov	r2, r0
   16eb8:	mov	r3, r1
   16ebc:	strd	r2, [fp, #-60]	; 0xffffffc4
   16ec0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ec4:	ldrb	r2, [r3]
   16ec8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16ecc:	strb	r2, [r3]
   16ed0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16ed4:	add	r3, r3, #1
   16ed8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16edc:	ldrb	r2, [r2, #1]
   16ee0:	strb	r2, [r3]
   16ee4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16ee8:	sub	r3, r3, #2
   16eec:	str	r3, [fp, #-64]	; 0xffffffc0
   16ef0:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16ef4:	mov	r2, #100	; 0x64
   16ef8:	mov	r3, #0
   16efc:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16f00:	mov	r3, r2
   16f04:	lsl	r3, r3, #1
   16f08:	ldr	r2, [pc, #-2056]	; 16708 <main@@Base+0x17ec>
   16f0c:	add	r2, pc, r2
   16f10:	add	r3, r3, r2
   16f14:	str	r3, [fp, #-48]	; 0xffffffd0
   16f18:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16f1c:	mov	r2, #100	; 0x64
   16f20:	mov	r3, #0
   16f24:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16f28:	mov	r2, r0
   16f2c:	mov	r3, r1
   16f30:	strd	r2, [fp, #-60]	; 0xffffffc4
   16f34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16f38:	ldrb	r2, [r3]
   16f3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16f40:	strb	r2, [r3]
   16f44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16f48:	add	r3, r3, #1
   16f4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16f50:	ldrb	r2, [r2, #1]
   16f54:	strb	r2, [r3]
   16f58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16f5c:	sub	r3, r3, #2
   16f60:	str	r3, [fp, #-64]	; 0xffffffc0
   16f64:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16f68:	mov	r2, #100	; 0x64
   16f6c:	mov	r3, #0
   16f70:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16f74:	mov	r3, r2
   16f78:	lsl	r3, r3, #1
   16f7c:	ldr	r2, [pc, #-2168]	; 1670c <main@@Base+0x17f0>
   16f80:	add	r2, pc, r2
   16f84:	add	r3, r3, r2
   16f88:	str	r3, [fp, #-48]	; 0xffffffd0
   16f8c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16f90:	mov	r2, #100	; 0x64
   16f94:	mov	r3, #0
   16f98:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16f9c:	mov	r2, r0
   16fa0:	mov	r3, r1
   16fa4:	strd	r2, [fp, #-60]	; 0xffffffc4
   16fa8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16fac:	ldrb	r2, [r3]
   16fb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16fb4:	strb	r2, [r3]
   16fb8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16fbc:	add	r3, r3, #1
   16fc0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16fc4:	ldrb	r2, [r2, #1]
   16fc8:	strb	r2, [r3]
   16fcc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16fd0:	sub	r3, r3, #2
   16fd4:	str	r3, [fp, #-64]	; 0xffffffc0
   16fd8:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   16fdc:	mov	r2, #100	; 0x64
   16fe0:	mov	r3, #0
   16fe4:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   16fe8:	mov	r3, r2
   16fec:	lsl	r3, r3, #1
   16ff0:	ldr	r2, [pc, #-2280]	; 16710 <main@@Base+0x17f4>
   16ff4:	add	r2, pc, r2
   16ff8:	add	r3, r3, r2
   16ffc:	str	r3, [fp, #-48]	; 0xffffffd0
   17000:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   17004:	mov	r2, #100	; 0x64
   17008:	mov	r3, #0
   1700c:	bl	23acc <flatcc_json_printer_clear@@Base+0x68>
   17010:	mov	r2, r0
   17014:	mov	r3, r1
   17018:	strd	r2, [fp, #-60]	; 0xffffffc4
   1701c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17020:	ldrb	r2, [r3]
   17024:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17028:	strb	r2, [r3]
   1702c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   17030:	add	r3, r3, #1
   17034:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17038:	ldrb	r2, [r2, #1]
   1703c:	strb	r2, [r3]
   17040:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17044:	mov	r0, r3
   17048:	sub	sp, fp, #28
   1704c:	ldrd	r4, [sp]
   17050:	ldrd	r6, [sp, #8]
   17054:	ldrd	r8, [sp, #16]
   17058:	ldr	fp, [sp, #24]
   1705c:	add	sp, sp, #28
   17060:	pop	{pc}		; (ldr pc, [sp], #4)
   17064:	str	fp, [sp, #-8]!
   17068:	str	lr, [sp, #4]
   1706c:	add	fp, sp, #4
   17070:	sub	sp, sp, #16
   17074:	mov	r3, r0
   17078:	str	r1, [fp, #-20]	; 0xffffffec
   1707c:	strb	r3, [fp, #-13]
   17080:	ldrb	r3, [fp, #-13]
   17084:	lsr	r3, r3, #7
   17088:	uxtb	r3, r3
   1708c:	str	r3, [fp, #-8]
   17090:	ldr	r3, [fp, #-8]
   17094:	cmp	r3, #0
   17098:	beq	170c0 <main@@Base+0x21a4>
   1709c:	ldr	r3, [fp, #-20]	; 0xffffffec
   170a0:	add	r2, r3, #1
   170a4:	str	r2, [fp, #-20]	; 0xffffffec
   170a8:	mov	r2, #45	; 0x2d
   170ac:	strb	r2, [r3]
   170b0:	ldrb	r3, [fp, #-13]
   170b4:	rsb	r3, r3, #0
   170b8:	uxtb	r3, r3
   170bc:	strb	r3, [fp, #-13]
   170c0:	ldrb	r3, [fp, #-13]
   170c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   170c8:	mov	r0, r3
   170cc:	bl	157e8 <main@@Base+0x8cc>
   170d0:	mov	r2, r0
   170d4:	ldr	r3, [fp, #-8]
   170d8:	add	r3, r2, r3
   170dc:	mov	r0, r3
   170e0:	sub	sp, fp, #4
   170e4:	ldr	fp, [sp]
   170e8:	add	sp, sp, #4
   170ec:	pop	{pc}		; (ldr pc, [sp], #4)
   170f0:	str	fp, [sp, #-8]!
   170f4:	str	lr, [sp, #4]
   170f8:	add	fp, sp, #4
   170fc:	sub	sp, sp, #16
   17100:	mov	r3, r0
   17104:	str	r1, [fp, #-20]	; 0xffffffec
   17108:	strh	r3, [fp, #-14]
   1710c:	ldrh	r3, [fp, #-14]
   17110:	lsr	r3, r3, #15
   17114:	uxtb	r3, r3
   17118:	str	r3, [fp, #-8]
   1711c:	ldr	r3, [fp, #-8]
   17120:	cmp	r3, #0
   17124:	beq	1714c <main@@Base+0x2230>
   17128:	ldr	r3, [fp, #-20]	; 0xffffffec
   1712c:	add	r2, r3, #1
   17130:	str	r2, [fp, #-20]	; 0xffffffec
   17134:	mov	r2, #45	; 0x2d
   17138:	strb	r2, [r3]
   1713c:	ldrh	r3, [fp, #-14]
   17140:	rsb	r3, r3, #0
   17144:	uxth	r3, r3
   17148:	strh	r3, [fp, #-14]
   1714c:	ldrh	r3, [fp, #-14]
   17150:	ldr	r1, [fp, #-20]	; 0xffffffec
   17154:	mov	r0, r3
   17158:	bl	159b8 <main@@Base+0xa9c>
   1715c:	mov	r2, r0
   17160:	ldr	r3, [fp, #-8]
   17164:	add	r3, r2, r3
   17168:	mov	r0, r3
   1716c:	sub	sp, fp, #4
   17170:	ldr	fp, [sp]
   17174:	add	sp, sp, #4
   17178:	pop	{pc}		; (ldr pc, [sp], #4)
   1717c:	str	fp, [sp, #-8]!
   17180:	str	lr, [sp, #4]
   17184:	add	fp, sp, #4
   17188:	sub	sp, sp, #16
   1718c:	str	r0, [fp, #-16]
   17190:	str	r1, [fp, #-20]	; 0xffffffec
   17194:	ldr	r3, [fp, #-16]
   17198:	lsr	r3, r3, #31
   1719c:	uxtb	r3, r3
   171a0:	str	r3, [fp, #-8]
   171a4:	ldr	r3, [fp, #-8]
   171a8:	cmp	r3, #0
   171ac:	beq	171d0 <main@@Base+0x22b4>
   171b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   171b4:	add	r2, r3, #1
   171b8:	str	r2, [fp, #-20]	; 0xffffffec
   171bc:	mov	r2, #45	; 0x2d
   171c0:	strb	r2, [r3]
   171c4:	ldr	r3, [fp, #-16]
   171c8:	rsb	r3, r3, #0
   171cc:	str	r3, [fp, #-16]
   171d0:	ldr	r3, [fp, #-16]
   171d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   171d8:	mov	r0, r3
   171dc:	bl	15d04 <main@@Base+0xde8>
   171e0:	mov	r2, r0
   171e4:	ldr	r3, [fp, #-8]
   171e8:	add	r3, r2, r3
   171ec:	mov	r0, r3
   171f0:	sub	sp, fp, #4
   171f4:	ldr	fp, [sp]
   171f8:	add	sp, sp, #4
   171fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17200:	str	fp, [sp, #-8]!
   17204:	str	lr, [sp, #4]
   17208:	add	fp, sp, #4
   1720c:	sub	sp, sp, #24
   17210:	strd	r0, [fp, #-20]	; 0xffffffec
   17214:	str	r2, [fp, #-24]	; 0xffffffe8
   17218:	ldr	r3, [fp, #-16]
   1721c:	lsr	r3, r3, #31
   17220:	uxtb	r3, r3
   17224:	str	r3, [fp, #-8]
   17228:	ldr	r3, [fp, #-8]
   1722c:	cmp	r3, #0
   17230:	beq	17258 <main@@Base+0x233c>
   17234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17238:	add	r2, r3, #1
   1723c:	str	r2, [fp, #-24]	; 0xffffffe8
   17240:	mov	r2, #45	; 0x2d
   17244:	strb	r2, [r3]
   17248:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1724c:	rsbs	r2, r2, #0
   17250:	rsc	r3, r3, #0
   17254:	strd	r2, [fp, #-20]	; 0xffffffec
   17258:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1725c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17260:	bl	1637c <main@@Base+0x1460>
   17264:	mov	r2, r0
   17268:	ldr	r3, [fp, #-8]
   1726c:	add	r3, r2, r3
   17270:	mov	r0, r3
   17274:	sub	sp, fp, #4
   17278:	ldr	fp, [sp]
   1727c:	add	sp, sp, #4
   17280:	pop	{pc}		; (ldr pc, [sp], #4)
   17284:	push	{fp}		; (str fp, [sp, #-4]!)
   17288:	add	fp, sp, #0
   1728c:	sub	sp, sp, #52	; 0x34
   17290:	str	r0, [fp, #-48]	; 0xffffffd0
   17294:	str	r1, [fp, #-52]	; 0xffffffcc
   17298:	sub	r3, fp, #40	; 0x28
   1729c:	add	r3, r3, #20
   172a0:	str	r3, [fp, #-8]
   172a4:	ldr	r3, [fp, #-8]
   172a8:	str	r3, [fp, #-12]
   172ac:	b	1733c <main@@Base+0x2420>
   172b0:	ldr	r3, [fp, #-8]
   172b4:	sub	r3, r3, #2
   172b8:	str	r3, [fp, #-8]
   172bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   172c0:	movw	r3, #34079	; 0x851f
   172c4:	movt	r3, #20971	; 0x51eb
   172c8:	umull	r1, r3, r3, r2
   172cc:	lsr	r3, r3, #5
   172d0:	mov	r1, #100	; 0x64
   172d4:	mul	r3, r1, r3
   172d8:	sub	r3, r2, r3
   172dc:	lsl	r3, r3, #1
   172e0:	str	r3, [fp, #-16]
   172e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   172e8:	movw	r3, #34079	; 0x851f
   172ec:	movt	r3, #20971	; 0x51eb
   172f0:	umull	r2, r3, r3, r2
   172f4:	lsr	r3, r3, #5
   172f8:	str	r3, [fp, #-48]	; 0xffffffd0
   172fc:	ldr	r3, [fp, #-16]
   17300:	ldr	r2, [pc, #276]	; 1741c <main@@Base+0x2500>
   17304:	add	r2, pc, r2
   17308:	add	r3, r3, r2
   1730c:	ldrb	r2, [r3]
   17310:	ldr	r3, [fp, #-8]
   17314:	strb	r2, [r3]
   17318:	ldr	r3, [fp, #-16]
   1731c:	add	r3, r3, #1
   17320:	ldr	r2, [pc, #248]	; 17420 <main@@Base+0x2504>
   17324:	add	r2, pc, r2
   17328:	add	r2, r3, r2
   1732c:	ldr	r3, [fp, #-8]
   17330:	add	r3, r3, #1
   17334:	ldrb	r2, [r2]
   17338:	strb	r2, [r3]
   1733c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17340:	cmp	r3, #99	; 0x63
   17344:	bhi	172b0 <main@@Base+0x2394>
   17348:	ldr	r3, [fp, #-8]
   1734c:	sub	r3, r3, #2
   17350:	str	r3, [fp, #-8]
   17354:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17358:	lsl	r3, r3, #1
   1735c:	str	r3, [fp, #-16]
   17360:	ldr	r3, [fp, #-16]
   17364:	ldr	r2, [pc, #184]	; 17424 <main@@Base+0x2508>
   17368:	add	r2, pc, r2
   1736c:	add	r3, r3, r2
   17370:	ldrb	r2, [r3]
   17374:	ldr	r3, [fp, #-8]
   17378:	strb	r2, [r3]
   1737c:	ldr	r3, [fp, #-16]
   17380:	add	r3, r3, #1
   17384:	ldr	r2, [pc, #156]	; 17428 <main@@Base+0x250c>
   17388:	add	r2, pc, r2
   1738c:	add	r2, r3, r2
   17390:	ldr	r3, [fp, #-8]
   17394:	add	r3, r3, #1
   17398:	ldrb	r2, [r2]
   1739c:	strb	r2, [r3]
   173a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   173a4:	cmp	r3, #9
   173a8:	bhi	173b8 <main@@Base+0x249c>
   173ac:	ldr	r3, [fp, #-8]
   173b0:	add	r3, r3, #1
   173b4:	str	r3, [fp, #-8]
   173b8:	ldr	r2, [fp, #-12]
   173bc:	ldr	r3, [fp, #-8]
   173c0:	sub	r3, r2, r3
   173c4:	str	r3, [fp, #-20]	; 0xffffffec
   173c8:	b	173ec <main@@Base+0x24d0>
   173cc:	ldr	r2, [fp, #-8]
   173d0:	add	r3, r2, #1
   173d4:	str	r3, [fp, #-8]
   173d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   173dc:	add	r1, r3, #1
   173e0:	str	r1, [fp, #-52]	; 0xffffffcc
   173e4:	ldrb	r2, [r2]
   173e8:	strb	r2, [r3]
   173ec:	ldr	r2, [fp, #-8]
   173f0:	ldr	r3, [fp, #-12]
   173f4:	cmp	r2, r3
   173f8:	bne	173cc <main@@Base+0x24b0>
   173fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17400:	mov	r2, #0
   17404:	strb	r2, [r3]
   17408:	ldr	r3, [fp, #-20]	; 0xffffffec
   1740c:	mov	r0, r3
   17410:	add	sp, fp, #0
   17414:	pop	{fp}		; (ldr fp, [sp], #4)
   17418:	bx	lr
   1741c:	andeq	sp, r0, r8, asr #6
   17420:	andeq	sp, r0, r8, lsr #6
   17424:	andeq	sp, r0, r4, ror #5
   17428:	andeq	sp, r0, r4, asr #5
   1742c:	str	fp, [sp, #-8]!
   17430:	str	lr, [sp, #4]
   17434:	add	fp, sp, #4
   17438:	sub	sp, sp, #16
   1743c:	str	r0, [fp, #-16]
   17440:	str	r1, [fp, #-20]	; 0xffffffec
   17444:	ldr	r3, [fp, #-16]
   17448:	lsr	r3, r3, #31
   1744c:	uxtb	r3, r3
   17450:	str	r3, [fp, #-8]
   17454:	ldr	r3, [fp, #-8]
   17458:	cmp	r3, #0
   1745c:	beq	17480 <main@@Base+0x2564>
   17460:	ldr	r3, [fp, #-20]	; 0xffffffec
   17464:	add	r2, r3, #1
   17468:	str	r2, [fp, #-20]	; 0xffffffec
   1746c:	mov	r2, #45	; 0x2d
   17470:	strb	r2, [r3]
   17474:	ldr	r3, [fp, #-16]
   17478:	rsb	r3, r3, #0
   1747c:	str	r3, [fp, #-16]
   17480:	ldr	r3, [fp, #-16]
   17484:	ldr	r1, [fp, #-20]	; 0xffffffec
   17488:	mov	r0, r3
   1748c:	bl	17284 <main@@Base+0x2368>
   17490:	mov	r2, r0
   17494:	ldr	r3, [fp, #-8]
   17498:	add	r3, r2, r3
   1749c:	mov	r0, r3
   174a0:	sub	sp, fp, #4
   174a4:	ldr	fp, [sp]
   174a8:	add	sp, sp, #4
   174ac:	pop	{pc}		; (ldr pc, [sp], #4)
   174b0:	push	{fp}		; (str fp, [sp, #-4]!)
   174b4:	add	fp, sp, #0
   174b8:	sub	sp, sp, #52	; 0x34
   174bc:	str	r0, [fp, #-48]	; 0xffffffd0
   174c0:	str	r1, [fp, #-52]	; 0xffffffcc
   174c4:	sub	r3, fp, #40	; 0x28
   174c8:	add	r3, r3, #20
   174cc:	str	r3, [fp, #-8]
   174d0:	ldr	r3, [fp, #-8]
   174d4:	str	r3, [fp, #-12]
   174d8:	b	17568 <main@@Base+0x264c>
   174dc:	ldr	r3, [fp, #-8]
   174e0:	sub	r3, r3, #2
   174e4:	str	r3, [fp, #-8]
   174e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   174ec:	movw	r3, #34079	; 0x851f
   174f0:	movt	r3, #20971	; 0x51eb
   174f4:	umull	r1, r3, r3, r2
   174f8:	lsr	r3, r3, #5
   174fc:	mov	r1, #100	; 0x64
   17500:	mul	r3, r1, r3
   17504:	sub	r3, r2, r3
   17508:	lsl	r3, r3, #1
   1750c:	str	r3, [fp, #-16]
   17510:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17514:	movw	r3, #34079	; 0x851f
   17518:	movt	r3, #20971	; 0x51eb
   1751c:	umull	r2, r3, r3, r2
   17520:	lsr	r3, r3, #5
   17524:	str	r3, [fp, #-48]	; 0xffffffd0
   17528:	ldr	r3, [fp, #-16]
   1752c:	ldr	r2, [pc, #276]	; 17648 <main@@Base+0x272c>
   17530:	add	r2, pc, r2
   17534:	add	r3, r3, r2
   17538:	ldrb	r2, [r3]
   1753c:	ldr	r3, [fp, #-8]
   17540:	strb	r2, [r3]
   17544:	ldr	r3, [fp, #-16]
   17548:	add	r3, r3, #1
   1754c:	ldr	r2, [pc, #248]	; 1764c <main@@Base+0x2730>
   17550:	add	r2, pc, r2
   17554:	add	r2, r3, r2
   17558:	ldr	r3, [fp, #-8]
   1755c:	add	r3, r3, #1
   17560:	ldrb	r2, [r2]
   17564:	strb	r2, [r3]
   17568:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1756c:	cmp	r3, #99	; 0x63
   17570:	bhi	174dc <main@@Base+0x25c0>
   17574:	ldr	r3, [fp, #-8]
   17578:	sub	r3, r3, #2
   1757c:	str	r3, [fp, #-8]
   17580:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17584:	lsl	r3, r3, #1
   17588:	str	r3, [fp, #-16]
   1758c:	ldr	r3, [fp, #-16]
   17590:	ldr	r2, [pc, #184]	; 17650 <main@@Base+0x2734>
   17594:	add	r2, pc, r2
   17598:	add	r3, r3, r2
   1759c:	ldrb	r2, [r3]
   175a0:	ldr	r3, [fp, #-8]
   175a4:	strb	r2, [r3]
   175a8:	ldr	r3, [fp, #-16]
   175ac:	add	r3, r3, #1
   175b0:	ldr	r2, [pc, #156]	; 17654 <main@@Base+0x2738>
   175b4:	add	r2, pc, r2
   175b8:	add	r2, r3, r2
   175bc:	ldr	r3, [fp, #-8]
   175c0:	add	r3, r3, #1
   175c4:	ldrb	r2, [r2]
   175c8:	strb	r2, [r3]
   175cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   175d0:	cmp	r3, #9
   175d4:	bhi	175e4 <main@@Base+0x26c8>
   175d8:	ldr	r3, [fp, #-8]
   175dc:	add	r3, r3, #1
   175e0:	str	r3, [fp, #-8]
   175e4:	ldr	r2, [fp, #-12]
   175e8:	ldr	r3, [fp, #-8]
   175ec:	sub	r3, r2, r3
   175f0:	str	r3, [fp, #-20]	; 0xffffffec
   175f4:	b	17618 <main@@Base+0x26fc>
   175f8:	ldr	r2, [fp, #-8]
   175fc:	add	r3, r2, #1
   17600:	str	r3, [fp, #-8]
   17604:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17608:	add	r1, r3, #1
   1760c:	str	r1, [fp, #-52]	; 0xffffffcc
   17610:	ldrb	r2, [r2]
   17614:	strb	r2, [r3]
   17618:	ldr	r2, [fp, #-8]
   1761c:	ldr	r3, [fp, #-12]
   17620:	cmp	r2, r3
   17624:	bne	175f8 <main@@Base+0x26dc>
   17628:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1762c:	mov	r2, #0
   17630:	strb	r2, [r3]
   17634:	ldr	r3, [fp, #-20]	; 0xffffffec
   17638:	mov	r0, r3
   1763c:	add	sp, fp, #0
   17640:	pop	{fp}		; (ldr fp, [sp], #4)
   17644:	bx	lr
   17648:	andeq	sp, r0, ip, lsl r1
   1764c:	strdeq	sp, [r0], -ip
   17650:	strheq	sp, [r0], -r8
   17654:	muleq	r0, r8, r0
   17658:	str	fp, [sp, #-8]!
   1765c:	str	lr, [sp, #4]
   17660:	add	fp, sp, #4
   17664:	sub	sp, sp, #16
   17668:	str	r0, [fp, #-16]
   1766c:	str	r1, [fp, #-20]	; 0xffffffec
   17670:	ldr	r3, [fp, #-16]
   17674:	lsr	r3, r3, #31
   17678:	uxtb	r3, r3
   1767c:	str	r3, [fp, #-8]
   17680:	ldr	r3, [fp, #-8]
   17684:	cmp	r3, #0
   17688:	beq	176ac <main@@Base+0x2790>
   1768c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17690:	add	r2, r3, #1
   17694:	str	r2, [fp, #-20]	; 0xffffffec
   17698:	mov	r2, #45	; 0x2d
   1769c:	strb	r2, [r3]
   176a0:	ldr	r3, [fp, #-16]
   176a4:	rsb	r3, r3, #0
   176a8:	str	r3, [fp, #-16]
   176ac:	ldr	r3, [fp, #-16]
   176b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   176b4:	mov	r0, r3
   176b8:	bl	174b0 <main@@Base+0x2594>
   176bc:	mov	r2, r0
   176c0:	ldr	r3, [fp, #-8]
   176c4:	add	r3, r2, r3
   176c8:	mov	r0, r3
   176cc:	sub	sp, fp, #4
   176d0:	ldr	fp, [sp]
   176d4:	add	sp, sp, #4
   176d8:	pop	{pc}		; (ldr pc, [sp], #4)
   176dc:	push	{fp}		; (str fp, [sp, #-4]!)
   176e0:	add	fp, sp, #0
   176e4:	sub	sp, sp, #20
   176e8:	vstr	d0, [fp, #-20]	; 0xffffffec
   176ec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   176f0:	strd	r2, [fp, #-12]
   176f4:	ldrd	r2, [fp, #-12]
   176f8:	mov	r0, r2
   176fc:	mov	r1, r3
   17700:	add	sp, fp, #0
   17704:	pop	{fp}		; (ldr fp, [sp], #4)
   17708:	bx	lr
   1770c:	push	{fp}		; (str fp, [sp, #-4]!)
   17710:	add	fp, sp, #0
   17714:	sub	sp, sp, #20
   17718:	strd	r0, [fp, #-20]	; 0xffffffec
   1771c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17720:	strd	r2, [fp, #-12]
   17724:	ldrd	r2, [fp, #-12]
   17728:	vmov	d7, r2, r3
   1772c:	vmov.f64	d0, d7
   17730:	add	sp, fp, #0
   17734:	pop	{fp}		; (ldr fp, [sp], #4)
   17738:	bx	lr
   1773c:	push	{fp}		; (str fp, [sp, #-4]!)
   17740:	add	fp, sp, #0
   17744:	sub	sp, sp, #20
   17748:	vstr	d0, [fp, #-20]	; 0xffffffec
   1774c:	vldr	d7, [fp, #-20]	; 0xffffffec
   17750:	vcvt.s32.f64	s15, d7
   17754:	vmov	r3, s15
   17758:	str	r3, [fp, #-8]
   1775c:	vldr	d7, [fp, #-20]	; 0xffffffec
   17760:	vcmpe.f64	d7, #0.0
   17764:	vmrs	APSR_nzcv, fpscr
   17768:	bpl	17774 <main@@Base+0x2858>
   1776c:	ldr	r3, [fp, #-8]
   17770:	b	177a4 <main@@Base+0x2888>
   17774:	ldr	r3, [fp, #-8]
   17778:	vmov	s15, r3
   1777c:	vcvt.f64.s32	d7, s15
   17780:	vldr	d6, [fp, #-20]	; 0xffffffec
   17784:	vsub.f64	d7, d6, d7
   17788:	vcmp.f64	d7, #0.0
   1778c:	vmrs	APSR_nzcv, fpscr
   17790:	beq	177a0 <main@@Base+0x2884>
   17794:	ldr	r3, [fp, #-8]
   17798:	add	r3, r3, #1
   1779c:	b	177a4 <main@@Base+0x2888>
   177a0:	ldr	r3, [fp, #-8]
   177a4:	mov	r0, r3
   177a8:	add	sp, fp, #0
   177ac:	pop	{fp}		; (ldr fp, [sp], #4)
   177b0:	bx	lr
   177b4:	str	fp, [sp, #-8]!
   177b8:	str	lr, [sp, #4]
   177bc:	add	fp, sp, #4
   177c0:	sub	sp, sp, #16
   177c4:	str	r0, [fp, #-16]
   177c8:	str	r1, [fp, #-20]	; 0xffffffec
   177cc:	ldr	r3, [fp, #-16]
   177d0:	add	r3, r3, #63	; 0x3f
   177d4:	vmov	s15, r3
   177d8:	vcvt.f64.s32	d7, s15
   177dc:	vldr	d6, [pc, #172]	; 17890 <main@@Base+0x2974>
   177e0:	vmul.f64	d7, d7, d6
   177e4:	vmov.f64	d0, d7
   177e8:	bl	1773c <main@@Base+0x2820>
   177ec:	str	r0, [fp, #-8]
   177f0:	ldr	r3, [fp, #-8]
   177f4:	add	r3, r3, #344	; 0x158
   177f8:	add	r3, r3, #3
   177fc:	add	r2, r3, #7
   17800:	cmp	r3, #0
   17804:	movlt	r3, r2
   17808:	movge	r3, r3
   1780c:	asr	r3, r3, #3
   17810:	add	r3, r3, #1
   17814:	str	r3, [fp, #-12]
   17818:	ldr	r2, [pc, #120]	; 17898 <main@@Base+0x297c>
   1781c:	add	r2, pc, r2
   17820:	ldr	r3, [fp, #-12]
   17824:	lsl	r3, r3, #4
   17828:	add	r3, r2, r3
   1782c:	ldrd	r2, [r3]
   17830:	ldr	r1, [fp, #-20]	; 0xffffffec
   17834:	strd	r2, [r1]
   17838:	ldr	r2, [pc, #92]	; 1789c <main@@Base+0x2980>
   1783c:	add	r2, pc, r2
   17840:	ldr	r3, [fp, #-12]
   17844:	lsl	r3, r3, #4
   17848:	add	r3, r2, r3
   1784c:	add	r3, r3, #8
   17850:	ldrsh	r3, [r3]
   17854:	mov	r2, r3
   17858:	ldr	r3, [fp, #-20]	; 0xffffffec
   1785c:	str	r2, [r3, #8]
   17860:	ldr	r2, [pc, #56]	; 178a0 <main@@Base+0x2984>
   17864:	add	r2, pc, r2
   17868:	ldr	r3, [fp, #-12]
   1786c:	lsl	r3, r3, #4
   17870:	add	r3, r2, r3
   17874:	add	r3, r3, #10
   17878:	ldrsh	r3, [r3]
   1787c:	mov	r0, r3
   17880:	sub	sp, fp, #4
   17884:	ldr	fp, [sp]
   17888:	add	sp, sp, #4
   1788c:	pop	{pc}		; (ldr pc, [sp], #4)
   17890:			; <UNDEFINED> instruction: 0x509f79fe
   17894:	svccc	0x00d34413
   17898:	andeq	ip, r0, ip, lsl #30
   1789c:	andeq	ip, r0, ip, ror #29
   178a0:	andeq	ip, r0, r4, asr #29
   178a4:	sub	sp, sp, #8
   178a8:	strd	r4, [sp, #-16]!
   178ac:	str	fp, [sp, #8]
   178b0:	str	lr, [sp, #12]
   178b4:	add	fp, sp, #12
   178b8:	sub	sp, sp, #24
   178bc:	str	r0, [fp, #-32]	; 0xffffffe0
   178c0:	add	r1, fp, #4
   178c4:	stm	r1, {r2, r3}
   178c8:	ldrd	r0, [fp, #4]
   178cc:	ldrd	r2, [fp, #20]
   178d0:	subs	r4, r0, r2
   178d4:	sbc	r5, r1, r3
   178d8:	strd	r4, [fp, #-28]	; 0xffffffe4
   178dc:	ldr	r3, [fp, #12]
   178e0:	str	r3, [fp, #-20]	; 0xffffffec
   178e4:	ldr	r2, [fp, #12]
   178e8:	ldr	r3, [fp, #28]
   178ec:	cmp	r2, r3
   178f0:	bne	17908 <main@@Base+0x29ec>
   178f4:	ldrd	r0, [fp, #4]
   178f8:	ldrd	r2, [fp, #20]
   178fc:	cmp	r1, r3
   17900:	cmpeq	r0, r2
   17904:	bcs	17928 <main@@Base+0x2a0c>
   17908:	ldr	r3, [pc, #84]	; 17964 <main@@Base+0x2a48>
   1790c:	add	r3, pc, r3
   17910:	mov	r2, #239	; 0xef
   17914:	ldr	r1, [pc, #76]	; 17968 <main@@Base+0x2a4c>
   17918:	add	r1, pc, r1
   1791c:	ldr	r0, [pc, #72]	; 1796c <main@@Base+0x2a50>
   17920:	add	r0, pc, r0
   17924:	bl	12504 <__assert_fail@plt>
   17928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1792c:	mov	r0, r3
   17930:	sub	r1, fp, #28
   17934:	ldrd	r2, [r1]
   17938:	strd	r2, [r0]
   1793c:	ldrd	r2, [r1, #8]
   17940:	strd	r2, [r0, #8]
   17944:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17948:	sub	sp, fp, #12
   1794c:	ldrd	r4, [sp]
   17950:	ldr	fp, [sp, #8]
   17954:	ldr	lr, [sp, #12]
   17958:	add	sp, sp, #16
   1795c:	add	sp, sp, #8
   17960:	bx	lr
   17964:	andeq	sp, r0, r8, ror r7
   17968:	andeq	sp, r0, r0, lsl #7
   1796c:	andeq	sp, r0, r8, ror #7
   17970:	sub	sp, sp, #8
   17974:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17978:	strd	r6, [sp, #8]
   1797c:	strd	r8, [sp, #16]
   17980:	str	fp, [sp, #24]
   17984:	str	lr, [sp, #28]
   17988:	add	fp, sp, #28
   1798c:	sub	sp, sp, #152	; 0x98
   17990:	str	r0, [fp, #-120]	; 0xffffff88
   17994:	add	r1, fp, #4
   17998:	stm	r1, {r2, r3}
   1799c:	ldrd	r2, [fp, #4]
   179a0:	mov	r0, #0
   179a4:	mov	r1, #0
   179a8:	mov	r0, r3
   179ac:	mov	r1, #0
   179b0:	strd	r0, [fp, #-36]	; 0xffffffdc
   179b4:	ldrd	r0, [fp, #4]
   179b8:	mvn	r2, #0
   179bc:	mov	r3, #0
   179c0:	and	r4, r0, r2
   179c4:	and	r5, r1, r3
   179c8:	strd	r4, [fp, #-44]	; 0xffffffd4
   179cc:	ldrd	r2, [fp, #20]
   179d0:	mov	r0, #0
   179d4:	mov	r1, #0
   179d8:	mov	r0, r3
   179dc:	mov	r1, #0
   179e0:	strd	r0, [fp, #-52]	; 0xffffffcc
   179e4:	ldrd	r0, [fp, #20]
   179e8:	mvn	r2, #0
   179ec:	mov	r3, #0
   179f0:	and	r6, r0, r2
   179f4:	and	r7, r1, r3
   179f8:	strd	r6, [fp, #-60]	; 0xffffffc4
   179fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17a00:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17a04:	mul	r1, r3, r2
   17a08:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17a0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a10:	mul	r3, r3, r2
   17a14:	add	r1, r1, r3
   17a18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17a1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17a20:	umull	r2, r3, r2, r3
   17a24:	add	r1, r1, r3
   17a28:	mov	r3, r1
   17a2c:	strd	r2, [fp, #-68]	; 0xffffffbc
   17a30:	strd	r2, [fp, #-68]	; 0xffffffbc
   17a34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17a38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17a3c:	mul	r1, r3, r2
   17a40:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17a44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17a48:	mul	r3, r3, r2
   17a4c:	add	r1, r1, r3
   17a50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17a54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17a58:	umull	r2, r3, r2, r3
   17a5c:	add	r1, r1, r3
   17a60:	mov	r3, r1
   17a64:	strd	r2, [fp, #-76]	; 0xffffffb4
   17a68:	strd	r2, [fp, #-76]	; 0xffffffb4
   17a6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17a70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17a74:	mul	r1, r3, r2
   17a78:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17a7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a80:	mul	r3, r3, r2
   17a84:	add	r1, r1, r3
   17a88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17a8c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17a90:	umull	r2, r3, r2, r3
   17a94:	add	r1, r1, r3
   17a98:	mov	r3, r1
   17a9c:	strd	r2, [fp, #-84]	; 0xffffffac
   17aa0:	strd	r2, [fp, #-84]	; 0xffffffac
   17aa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17aa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17aac:	mul	r1, r3, r2
   17ab0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17ab4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ab8:	mul	r3, r3, r2
   17abc:	add	r1, r1, r3
   17ac0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17ac4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17ac8:	umull	r2, r3, r2, r3
   17acc:	add	r1, r1, r3
   17ad0:	mov	r3, r1
   17ad4:	strd	r2, [fp, #-92]	; 0xffffffa4
   17ad8:	strd	r2, [fp, #-92]	; 0xffffffa4
   17adc:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   17ae0:	mov	r4, #0
   17ae4:	mov	r5, #0
   17ae8:	mov	r4, r3
   17aec:	mov	r5, #0
   17af0:	ldrd	r0, [fp, #-84]	; 0xffffffac
   17af4:	mvn	r2, #0
   17af8:	mov	r3, #0
   17afc:	and	r8, r0, r2
   17b00:	and	r9, r1, r3
   17b04:	adds	r3, r4, r8
   17b08:	str	r3, [fp, #-132]	; 0xffffff7c
   17b0c:	adc	r3, r5, r9
   17b10:	str	r3, [fp, #-128]	; 0xffffff80
   17b14:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   17b18:	mvn	r2, #0
   17b1c:	mov	r3, #0
   17b20:	and	ip, r0, r2
   17b24:	str	ip, [fp, #-140]	; 0xffffff74
   17b28:	and	r3, r1, r3
   17b2c:	str	r3, [fp, #-136]	; 0xffffff78
   17b30:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   17b34:	mov	ip, r0
   17b38:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17b3c:	mov	lr, r2
   17b40:	adds	ip, ip, lr
   17b44:	str	ip, [fp, #-172]	; 0xffffff54
   17b48:	adc	r3, r1, r3
   17b4c:	str	r3, [fp, #-168]	; 0xffffff58
   17b50:	ldrd	r2, [fp, #-172]	; 0xffffff54
   17b54:	strd	r2, [fp, #-100]	; 0xffffff9c
   17b58:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   17b5c:	adds	r1, r2, #-2147483648	; 0x80000000
   17b60:	str	r1, [fp, #-180]	; 0xffffff4c
   17b64:	adc	r3, r3, #0
   17b68:	str	r3, [fp, #-176]	; 0xffffff50
   17b6c:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   17b70:	strd	r2, [fp, #-100]	; 0xffffff9c
   17b74:	ldrd	r0, [fp, #-84]	; 0xffffffac
   17b78:	mov	r2, #0
   17b7c:	mov	r3, #0
   17b80:	mov	r2, r1
   17b84:	mov	r3, #0
   17b88:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   17b8c:	adds	ip, r2, r0
   17b90:	str	ip, [fp, #-148]	; 0xffffff6c
   17b94:	adc	r3, r3, r1
   17b98:	str	r3, [fp, #-144]	; 0xffffff70
   17b9c:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   17ba0:	mov	r2, #0
   17ba4:	mov	r3, #0
   17ba8:	mov	r2, r1
   17bac:	mov	r3, #0
   17bb0:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   17bb4:	mov	ip, r0
   17bb8:	adds	ip, ip, r2
   17bbc:	str	ip, [fp, #-156]	; 0xffffff64
   17bc0:	adc	r3, r1, r3
   17bc4:	str	r3, [fp, #-152]	; 0xffffff68
   17bc8:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   17bcc:	mov	r2, #0
   17bd0:	mov	r3, #0
   17bd4:	mov	r2, r1
   17bd8:	mov	r3, #0
   17bdc:	ldrd	r0, [fp, #-156]	; 0xffffff64
   17be0:	mov	ip, r0
   17be4:	adds	ip, ip, r2
   17be8:	str	ip, [fp, #-164]	; 0xffffff5c
   17bec:	adc	r3, r1, r3
   17bf0:	str	r3, [fp, #-160]	; 0xffffff60
   17bf4:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   17bf8:	strd	r2, [fp, #-116]	; 0xffffff8c
   17bfc:	ldr	r2, [fp, #12]
   17c00:	ldr	r3, [fp, #28]
   17c04:	add	r3, r2, r3
   17c08:	add	r3, r3, #64	; 0x40
   17c0c:	str	r3, [fp, #-108]	; 0xffffff94
   17c10:	ldr	r3, [fp, #-120]	; 0xffffff88
   17c14:	mov	r0, r3
   17c18:	sub	r1, fp, #116	; 0x74
   17c1c:	ldrd	r2, [r1]
   17c20:	strd	r2, [r0]
   17c24:	ldrd	r2, [r1, #8]
   17c28:	strd	r2, [r0, #8]
   17c2c:	ldr	r0, [fp, #-120]	; 0xffffff88
   17c30:	sub	sp, fp, #28
   17c34:	ldrd	r4, [sp]
   17c38:	ldrd	r6, [sp, #8]
   17c3c:	ldrd	r8, [sp, #16]
   17c40:	ldr	fp, [sp, #24]
   17c44:	ldr	lr, [sp, #28]
   17c48:	add	sp, sp, #32
   17c4c:	add	sp, sp, #8
   17c50:	bx	lr
   17c54:	sub	sp, sp, #8
   17c58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17c5c:	strd	r6, [sp, #8]
   17c60:	str	fp, [sp, #16]
   17c64:	str	lr, [sp, #20]
   17c68:	add	fp, sp, #20
   17c6c:	sub	sp, sp, #8
   17c70:	str	r0, [fp, #-24]	; 0xffffffe8
   17c74:	add	r1, fp, #4
   17c78:	stm	r1, {r2, r3}
   17c7c:	ldrd	r2, [fp, #4]
   17c80:	orrs	r3, r2, r3
   17c84:	bne	17cd0 <main@@Base+0x2db4>
   17c88:	ldr	r3, [pc, #216]	; 17d68 <main@@Base+0x2e4c>
   17c8c:	add	r3, pc, r3
   17c90:	mov	r2, #260	; 0x104
   17c94:	ldr	r1, [pc, #208]	; 17d6c <main@@Base+0x2e50>
   17c98:	add	r1, pc, r1
   17c9c:	ldr	r0, [pc, #204]	; 17d70 <main@@Base+0x2e54>
   17ca0:	add	r0, pc, r0
   17ca4:	bl	12504 <__assert_fail@plt>
   17ca8:	ldrd	r0, [fp, #4]
   17cac:	mov	r2, #0
   17cb0:	mov	r3, #0
   17cb4:	lsl	r3, r1, #10
   17cb8:	orr	r3, r3, r0, lsr #22
   17cbc:	lsl	r2, r0, #10
   17cc0:	strd	r2, [fp, #4]
   17cc4:	ldr	r3, [fp, #12]
   17cc8:	sub	r3, r3, #10
   17ccc:	str	r3, [fp, #12]
   17cd0:	ldrd	r2, [fp, #4]
   17cd4:	mov	r0, #0
   17cd8:	mov	r1, #0
   17cdc:	movt	r1, #65472	; 0xffc0
   17ce0:	and	r4, r2, r0
   17ce4:	and	r5, r3, r1
   17ce8:	orrs	r3, r4, r5
   17cec:	beq	17ca8 <main@@Base+0x2d8c>
   17cf0:	b	17d18 <main@@Base+0x2dfc>
   17cf4:	ldrd	r2, [fp, #4]
   17cf8:	adds	r6, r2, r2
   17cfc:	adc	r7, r3, r3
   17d00:	mov	r2, r6
   17d04:	mov	r3, r7
   17d08:	strd	r2, [fp, #4]
   17d0c:	ldr	r3, [fp, #12]
   17d10:	sub	r3, r3, #1
   17d14:	str	r3, [fp, #12]
   17d18:	ldrd	r2, [fp, #4]
   17d1c:	cmp	r2, #0
   17d20:	sbcs	r3, r3, #0
   17d24:	bge	17cf4 <main@@Base+0x2dd8>
   17d28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17d2c:	mov	r0, r3
   17d30:	add	r1, fp, #4
   17d34:	ldrd	r2, [r1]
   17d38:	strd	r2, [r0]
   17d3c:	ldrd	r2, [r1, #8]
   17d40:	strd	r2, [r0, #8]
   17d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d48:	sub	sp, fp, #20
   17d4c:	ldrd	r4, [sp]
   17d50:	ldrd	r6, [sp, #8]
   17d54:	ldr	fp, [sp, #16]
   17d58:	ldr	lr, [sp, #20]
   17d5c:	add	sp, sp, #24
   17d60:	add	sp, sp, #8
   17d64:	bx	lr
   17d68:	andeq	sp, r0, ip, lsl #8
   17d6c:	andeq	sp, r0, r0
   17d70:	andeq	sp, r0, r4, lsl #1
   17d74:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17d78:	strd	r6, [sp, #8]
   17d7c:	strd	r8, [sp, #16]
   17d80:	str	fp, [sp, #24]
   17d84:	str	lr, [sp, #28]
   17d88:	add	fp, sp, #28
   17d8c:	sub	sp, sp, #48	; 0x30
   17d90:	str	r0, [fp, #-56]	; 0xffffffc8
   17d94:	vstr	d0, [fp, #-68]	; 0xffffffbc
   17d98:	vldr	d0, [fp, #-68]	; 0xffffffbc
   17d9c:	bl	176dc <main@@Base+0x27c0>
   17da0:	strd	r0, [fp, #-36]	; 0xffffffdc
   17da4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17da8:	mov	r0, #0
   17dac:	mov	r1, #0
   17db0:	movt	r1, #32752	; 0x7ff0
   17db4:	and	ip, r2, r0
   17db8:	str	ip, [fp, #-76]	; 0xffffffb4
   17dbc:	and	r3, r3, r1
   17dc0:	str	r3, [fp, #-72]	; 0xffffffb8
   17dc4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   17dc8:	orrs	r3, r2, r3
   17dcc:	bne	17dfc <main@@Base+0x2ee0>
   17dd0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17dd4:	mvn	r0, #0
   17dd8:	movw	r1, #65535	; 0xffff
   17ddc:	movt	r1, #15
   17de0:	and	r8, r2, r0
   17de4:	and	r9, r3, r1
   17de8:	strd	r8, [fp, #-52]	; 0xffffffcc
   17dec:	movw	r3, #64462	; 0xfbce
   17df0:	movt	r3, #65535	; 0xffff
   17df4:	str	r3, [fp, #-44]	; 0xffffffd4
   17df8:	b	17e48 <main@@Base+0x2f2c>
   17dfc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17e00:	mvn	r0, #0
   17e04:	movw	r1, #65535	; 0xffff
   17e08:	movt	r1, #15
   17e0c:	and	r4, r2, r0
   17e10:	and	r5, r3, r1
   17e14:	adds	r6, r4, #0
   17e18:	adc	r7, r5, #1048576	; 0x100000
   17e1c:	strd	r6, [fp, #-52]	; 0xffffffcc
   17e20:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   17e24:	mov	r2, #0
   17e28:	mov	r3, #0
   17e2c:	lsr	r2, r1, #20
   17e30:	mov	r3, #0
   17e34:	mov	r3, r2
   17e38:	ubfx	r3, r3, #0, #11
   17e3c:	sub	r3, r3, #1072	; 0x430
   17e40:	sub	r3, r3, #3
   17e44:	str	r3, [fp, #-44]	; 0xffffffd4
   17e48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17e4c:	mov	r0, r3
   17e50:	sub	r1, fp, #52	; 0x34
   17e54:	ldrd	r2, [r1]
   17e58:	strd	r2, [r0]
   17e5c:	ldrd	r2, [r1, #8]
   17e60:	strd	r2, [r0, #8]
   17e64:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17e68:	sub	sp, fp, #28
   17e6c:	ldrd	r4, [sp]
   17e70:	ldrd	r6, [sp, #8]
   17e74:	ldrd	r8, [sp, #16]
   17e78:	ldr	fp, [sp, #24]
   17e7c:	add	sp, sp, #28
   17e80:	pop	{pc}		; (ldr pc, [sp], #4)
   17e84:	strd	r4, [sp, #-32]!	; 0xffffffe0
   17e88:	strd	r6, [sp, #8]
   17e8c:	strd	r8, [sp, #16]
   17e90:	str	fp, [sp, #24]
   17e94:	str	lr, [sp, #28]
   17e98:	add	fp, sp, #28
   17e9c:	sub	sp, sp, #112	; 0x70
   17ea0:	sub	ip, fp, #100	; 0x64
   17ea4:	stm	ip, {r0, r1, r2, r3}
   17ea8:	mov	r2, #0
   17eac:	mov	r3, #1048576	; 0x100000
   17eb0:	strd	r2, [fp, #-44]	; 0xffffffd4
   17eb4:	mvn	r2, #0
   17eb8:	movw	r3, #65535	; 0xffff
   17ebc:	movt	r3, #15
   17ec0:	strd	r2, [fp, #-52]	; 0xffffffcc
   17ec4:	movw	r3, #64462	; 0xfbce
   17ec8:	movt	r3, #65535	; 0xffff
   17ecc:	str	r3, [fp, #-56]	; 0xffffffc8
   17ed0:	movw	r3, #1075	; 0x433
   17ed4:	str	r3, [fp, #-60]	; 0xffffffc4
   17ed8:	mov	r3, #52	; 0x34
   17edc:	str	r3, [fp, #-64]	; 0xffffffc0
   17ee0:	sub	r0, fp, #84	; 0x54
   17ee4:	sub	r1, fp, #100	; 0x64
   17ee8:	ldrd	r2, [r1]
   17eec:	strd	r2, [r0]
   17ef0:	ldrd	r2, [r1, #8]
   17ef4:	strd	r2, [r0, #8]
   17ef8:	b	17f24 <main@@Base+0x3008>
   17efc:	ldrd	r2, [fp, #-84]	; 0xffffffac
   17f00:	mov	r0, #0
   17f04:	mov	r1, #0
   17f08:	lsr	r0, r2, #1
   17f0c:	orr	r0, r0, r3, lsl #31
   17f10:	lsr	r1, r3, #1
   17f14:	strd	r0, [fp, #-84]	; 0xffffffac
   17f18:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17f1c:	add	r3, r3, #1
   17f20:	str	r3, [fp, #-76]	; 0xffffffb4
   17f24:	ldrd	r4, [fp, #-84]	; 0xffffffac
   17f28:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   17f2c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   17f30:	adds	ip, r0, r2
   17f34:	str	ip, [fp, #-108]	; 0xffffff94
   17f38:	adc	r3, r1, r3
   17f3c:	str	r3, [fp, #-104]	; 0xffffff98
   17f40:	ldrd	r2, [fp, #-108]	; 0xffffff94
   17f44:	cmp	r5, r3
   17f48:	cmpeq	r4, r2
   17f4c:	bhi	17efc <main@@Base+0x2fe0>
   17f50:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17f54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17f58:	cmp	r2, r3
   17f5c:	ble	17f90 <main@@Base+0x3074>
   17f60:	vldr	d7, [pc, #296]	; 18090 <main@@Base+0x3174>
   17f64:	b	1806c <main@@Base+0x3150>
   17f68:	ldrd	r2, [fp, #-84]	; 0xffffffac
   17f6c:	adds	r1, r2, r2
   17f70:	str	r1, [fp, #-140]	; 0xffffff74
   17f74:	adc	r3, r3, r3
   17f78:	str	r3, [fp, #-136]	; 0xffffff78
   17f7c:	ldrd	r2, [fp, #-140]	; 0xffffff74
   17f80:	strd	r2, [fp, #-84]	; 0xffffffac
   17f84:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17f88:	sub	r3, r3, #1
   17f8c:	str	r3, [fp, #-76]	; 0xffffffb4
   17f90:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17f94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17f98:	cmp	r2, r3
   17f9c:	bge	17fc4 <main@@Base+0x30a8>
   17fa0:	ldrd	r0, [fp, #-84]	; 0xffffffac
   17fa4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17fa8:	and	ip, r0, r2
   17fac:	str	ip, [fp, #-116]	; 0xffffff8c
   17fb0:	and	r3, r1, r3
   17fb4:	str	r3, [fp, #-112]	; 0xffffff90
   17fb8:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   17fbc:	orrs	r3, r2, r3
   17fc0:	beq	17f68 <main@@Base+0x304c>
   17fc4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17fc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17fcc:	cmp	r2, r3
   17fd0:	bne	18008 <main@@Base+0x30ec>
   17fd4:	ldrd	r0, [fp, #-84]	; 0xffffffac
   17fd8:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   17fdc:	and	ip, r0, r2
   17fe0:	str	ip, [fp, #-124]	; 0xffffff84
   17fe4:	and	r3, r1, r3
   17fe8:	str	r3, [fp, #-120]	; 0xffffff88
   17fec:	ldrd	r2, [fp, #-124]	; 0xffffff84
   17ff0:	orrs	r3, r2, r3
   17ff4:	bne	18008 <main@@Base+0x30ec>
   17ff8:	mov	r2, #0
   17ffc:	mov	r3, #0
   18000:	strd	r2, [fp, #-36]	; 0xffffffdc
   18004:	b	18020 <main@@Base+0x3104>
   18008:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1800c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18010:	add	r3, r2, r3
   18014:	mov	r2, r3
   18018:	asr	r3, r2, #31
   1801c:	strd	r2, [fp, #-36]	; 0xffffffdc
   18020:	ldrd	r0, [fp, #-84]	; 0xffffffac
   18024:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18028:	and	r8, r0, r2
   1802c:	and	r9, r1, r3
   18030:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18034:	ldr	r1, [fp, #-64]	; 0xffffffc0
   18038:	sub	ip, r1, #32
   1803c:	rsb	r0, r1, #32
   18040:	lsl	r7, r3, r1
   18044:	orr	r7, r7, r2, lsl ip
   18048:	orr	r7, r7, r2, lsr r0
   1804c:	lsl	r6, r2, r1
   18050:	orr	r3, r8, r6
   18054:	str	r3, [fp, #-132]	; 0xffffff7c
   18058:	orr	r3, r9, r7
   1805c:	str	r3, [fp, #-128]	; 0xffffff80
   18060:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   18064:	bl	1770c <main@@Base+0x27f0>
   18068:	vmov.f64	d7, d0
   1806c:	vmov.f64	d0, d7
   18070:	sub	sp, fp, #28
   18074:	ldrd	r4, [sp]
   18078:	ldrd	r6, [sp, #8]
   1807c:	ldrd	r8, [sp, #16]
   18080:	ldr	fp, [sp, #24]
   18084:	add	sp, sp, #28
   18088:	pop	{pc}		; (ldr pc, [sp], #4)
   1808c:	nop	{0}
	...
   18098:	push	{fp}		; (str fp, [sp, #-4]!)
   1809c:	add	fp, sp, #0
   180a0:	sub	sp, sp, #28
   180a4:	str	r0, [fp, #-16]
   180a8:	str	r1, [fp, #-20]	; 0xffffffec
   180ac:	str	r2, [fp, #-24]	; 0xffffffe8
   180b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   180b4:	add	r3, r3, #1
   180b8:	movw	r2, #1233	; 0x4d1
   180bc:	mul	r3, r2, r3
   180c0:	asr	r3, r3, #12
   180c4:	add	r3, r3, #1
   180c8:	str	r3, [fp, #-8]
   180cc:	ldr	r3, [pc, #76]	; 18120 <main@@Base+0x3204>
   180d0:	add	r3, pc, r3
   180d4:	ldr	r2, [fp, #-8]
   180d8:	ldr	r3, [r3, r2, lsl #2]
   180dc:	ldr	r2, [fp, #-16]
   180e0:	cmp	r2, r3
   180e4:	bcs	180f4 <main@@Base+0x31d8>
   180e8:	ldr	r3, [fp, #-8]
   180ec:	sub	r3, r3, #1
   180f0:	str	r3, [fp, #-8]
   180f4:	ldr	r3, [pc, #40]	; 18124 <main@@Base+0x3208>
   180f8:	add	r3, pc, r3
   180fc:	ldr	r2, [fp, #-8]
   18100:	ldr	r2, [r3, r2, lsl #2]
   18104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18108:	str	r2, [r3]
   1810c:	ldr	r3, [fp, #-8]
   18110:	mov	r0, r3
   18114:	add	sp, fp, #0
   18118:	pop	{fp}		; (ldr fp, [sp], #4)
   1811c:	bx	lr
   18120:	andeq	ip, r0, r0, ror #24
   18124:	andeq	ip, r0, r8, lsr ip
   18128:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1812c:	strd	r6, [sp, #8]
   18130:	strd	r8, [sp, #16]
   18134:	str	fp, [sp, #24]
   18138:	add	fp, sp, #24
   1813c:	sub	sp, sp, #132	; 0x84
   18140:	str	r0, [fp, #-48]	; 0xffffffd0
   18144:	str	r1, [fp, #-52]	; 0xffffffcc
   18148:	strd	r2, [fp, #-60]	; 0xffffffc4
   1814c:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   18150:	ldrd	r2, [fp, #28]
   18154:	subs	r4, r0, r2
   18158:	sbc	r5, r1, r3
   1815c:	strd	r4, [fp, #-36]	; 0xffffffdc
   18160:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   18164:	ldrd	r2, [fp, #28]
   18168:	adds	r6, r0, r2
   1816c:	adc	r7, r1, r3
   18170:	strd	r6, [fp, #-44]	; 0xffffffd4
   18174:	b	181b8 <main@@Base+0x329c>
   18178:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1817c:	sub	r2, r3, #1
   18180:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18184:	add	r2, r3, r2
   18188:	ldrb	r3, [r2]
   1818c:	sub	r3, r3, #1
   18190:	uxtb	r3, r3
   18194:	strb	r3, [r2]
   18198:	ldrd	r0, [fp, #12]
   1819c:	ldrd	r2, [fp, #20]
   181a0:	adds	ip, r0, r2
   181a4:	str	ip, [fp, #-148]	; 0xffffff6c
   181a8:	adc	r3, r1, r3
   181ac:	str	r3, [fp, #-144]	; 0xffffff70
   181b0:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   181b4:	strd	r2, [fp, #12]
   181b8:	ldrd	r0, [fp, #12]
   181bc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   181c0:	cmp	r1, r3
   181c4:	cmpeq	r0, r2
   181c8:	bcs	18274 <main@@Base+0x3358>
   181cc:	ldrd	r0, [fp, #4]
   181d0:	ldrd	r2, [fp, #12]
   181d4:	subs	ip, r0, r2
   181d8:	str	ip, [fp, #-68]	; 0xffffffbc
   181dc:	sbc	r3, r1, r3
   181e0:	str	r3, [fp, #-64]	; 0xffffffc0
   181e4:	ldrd	r2, [fp, #20]
   181e8:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   181ec:	cmp	r3, r1
   181f0:	cmpeq	r2, r0
   181f4:	bhi	18274 <main@@Base+0x3358>
   181f8:	ldrd	r0, [fp, #12]
   181fc:	ldrd	r2, [fp, #20]
   18200:	adds	ip, r0, r2
   18204:	str	ip, [fp, #-76]	; 0xffffffb4
   18208:	adc	r3, r1, r3
   1820c:	str	r3, [fp, #-72]	; 0xffffffb8
   18210:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18214:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   18218:	cmp	r3, r1
   1821c:	cmpeq	r2, r0
   18220:	bhi	18178 <main@@Base+0x325c>
   18224:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18228:	ldrd	r2, [fp, #12]
   1822c:	subs	ip, r0, r2
   18230:	str	ip, [fp, #-84]	; 0xffffffac
   18234:	sbc	r3, r1, r3
   18238:	str	r3, [fp, #-80]	; 0xffffffb0
   1823c:	ldrd	r0, [fp, #12]
   18240:	ldrd	r2, [fp, #20]
   18244:	adds	r8, r0, r2
   18248:	adc	r9, r1, r3
   1824c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18250:	subs	r1, r8, r2
   18254:	str	r1, [fp, #-92]	; 0xffffffa4
   18258:	sbc	r3, r9, r3
   1825c:	str	r3, [fp, #-88]	; 0xffffffa8
   18260:	ldrd	r2, [fp, #-84]	; 0xffffffac
   18264:	ldrd	r0, [fp, #-92]	; 0xffffffa4
   18268:	cmp	r3, r1
   1826c:	cmpeq	r2, r0
   18270:	bcs	18178 <main@@Base+0x325c>
   18274:	ldrd	r0, [fp, #12]
   18278:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1827c:	cmp	r1, r3
   18280:	cmpeq	r0, r2
   18284:	bcs	18348 <main@@Base+0x342c>
   18288:	ldrd	r0, [fp, #4]
   1828c:	ldrd	r2, [fp, #12]
   18290:	subs	ip, r0, r2
   18294:	str	ip, [fp, #-100]	; 0xffffff9c
   18298:	sbc	r3, r1, r3
   1829c:	str	r3, [fp, #-96]	; 0xffffffa0
   182a0:	ldrd	r2, [fp, #20]
   182a4:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   182a8:	cmp	r3, r1
   182ac:	cmpeq	r2, r0
   182b0:	bhi	18348 <main@@Base+0x342c>
   182b4:	ldrd	r0, [fp, #12]
   182b8:	ldrd	r2, [fp, #20]
   182bc:	adds	ip, r0, r2
   182c0:	str	ip, [fp, #-108]	; 0xffffff94
   182c4:	adc	r3, r1, r3
   182c8:	str	r3, [fp, #-104]	; 0xffffff98
   182cc:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   182d0:	ldrd	r0, [fp, #-108]	; 0xffffff94
   182d4:	cmp	r3, r1
   182d8:	cmpeq	r2, r0
   182dc:	bhi	18340 <main@@Base+0x3424>
   182e0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   182e4:	ldrd	r2, [fp, #12]
   182e8:	subs	ip, r0, r2
   182ec:	str	ip, [fp, #-116]	; 0xffffff8c
   182f0:	sbc	r3, r1, r3
   182f4:	str	r3, [fp, #-112]	; 0xffffff90
   182f8:	ldrd	r0, [fp, #12]
   182fc:	ldrd	r2, [fp, #20]
   18300:	adds	ip, r0, r2
   18304:	str	ip, [fp, #-124]	; 0xffffff84
   18308:	adc	r3, r1, r3
   1830c:	str	r3, [fp, #-120]	; 0xffffff88
   18310:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   18314:	ldrd	r0, [fp, #-124]	; 0xffffff84
   18318:	mov	ip, r0
   1831c:	subs	ip, ip, r2
   18320:	str	ip, [fp, #-132]	; 0xffffff7c
   18324:	sbc	r3, r1, r3
   18328:	str	r3, [fp, #-128]	; 0xffffff80
   1832c:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   18330:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   18334:	cmp	r3, r1
   18338:	cmpeq	r2, r0
   1833c:	bls	18348 <main@@Base+0x342c>
   18340:	mov	r3, #0
   18344:	b	183bc <main@@Base+0x34a0>
   18348:	ldrd	r2, [fp, #28]
   1834c:	adds	r1, r2, r2
   18350:	str	r1, [fp, #-156]	; 0xffffff64
   18354:	adc	r3, r3, r3
   18358:	str	r3, [fp, #-152]	; 0xffffff68
   1835c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   18360:	ldrd	r2, [fp, #12]
   18364:	cmp	r3, r1
   18368:	cmpeq	r2, r0
   1836c:	bcc	183b8 <main@@Base+0x349c>
   18370:	ldrd	r0, [fp, #28]
   18374:	mov	r2, #0
   18378:	mov	r3, #0
   1837c:	lsl	r3, r1, #2
   18380:	orr	r3, r3, r0, lsr #30
   18384:	lsl	r2, r0, #2
   18388:	ldrd	r0, [fp, #4]
   1838c:	subs	ip, r0, r2
   18390:	str	ip, [fp, #-140]	; 0xffffff74
   18394:	sbc	r3, r1, r3
   18398:	str	r3, [fp, #-136]	; 0xffffff78
   1839c:	ldrd	r2, [fp, #12]
   183a0:	ldrd	r0, [fp, #-140]	; 0xffffff74
   183a4:	cmp	r3, r1
   183a8:	cmpeq	r2, r0
   183ac:	bhi	183b8 <main@@Base+0x349c>
   183b0:	mov	r3, #1
   183b4:	b	183bc <main@@Base+0x34a0>
   183b8:	mov	r3, #0
   183bc:	mov	r0, r3
   183c0:	sub	sp, fp, #24
   183c4:	ldrd	r4, [sp]
   183c8:	ldrd	r6, [sp, #8]
   183cc:	ldrd	r8, [sp, #16]
   183d0:	ldr	fp, [sp, #24]
   183d4:	add	sp, sp, #28
   183d8:	bx	lr
   183dc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   183e0:	strd	r6, [sp, #8]
   183e4:	strd	r8, [sp, #16]
   183e8:	str	fp, [sp, #24]
   183ec:	str	lr, [sp, #28]
   183f0:	add	fp, sp, #28
   183f4:	sub	sp, sp, #296	; 0x128
   183f8:	sub	ip, fp, #196	; 0xc4
   183fc:	stm	ip, {r0, r1, r2, r3}
   18400:	mov	r2, #1
   18404:	mov	r3, #0
   18408:	strd	r2, [fp, #-36]	; 0xffffffdc
   1840c:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   18410:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18414:	subs	r4, r0, r2
   18418:	sbc	r5, r1, r3
   1841c:	strd	r4, [fp, #-124]	; 0xffffff84
   18420:	ldr	r3, [fp, #-188]	; 0xffffff44
   18424:	str	r3, [fp, #-116]	; 0xffffff8c
   18428:	ldrd	r0, [fp, #20]
   1842c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18430:	adds	r8, r0, r2
   18434:	adc	r9, r1, r3
   18438:	strd	r8, [fp, #-140]	; 0xffffff74
   1843c:	ldr	r3, [fp, #28]
   18440:	str	r3, [fp, #-132]	; 0xffffff7c
   18444:	sub	ip, fp, #156	; 0x9c
   18448:	add	r0, sp, #8
   1844c:	sub	r1, fp, #124	; 0x7c
   18450:	ldrd	r2, [r1]
   18454:	strd	r2, [r0]
   18458:	ldrd	r2, [r1, #8]
   1845c:	strd	r2, [r0, #8]
   18460:	mov	r1, sp
   18464:	sub	r3, fp, #132	; 0x84
   18468:	ldrd	r2, [r3]
   1846c:	strd	r2, [r1]
   18470:	sub	r3, fp, #140	; 0x8c
   18474:	ldm	r3, {r2, r3}
   18478:	mov	r0, ip
   1847c:	bl	178a4 <main@@Base+0x2988>
   18480:	ldr	r3, [fp, #12]
   18484:	rsb	r1, r3, #0
   18488:	mov	r2, #1
   1848c:	mov	r3, #0
   18490:	sub	ip, r1, #32
   18494:	rsb	r0, r1, #32
   18498:	lsl	r7, r3, r1
   1849c:	orr	r7, r7, r2, lsl ip
   184a0:	orr	r7, r7, r2, lsr r0
   184a4:	lsl	r6, r2, r1
   184a8:	strd	r6, [fp, #-172]	; 0xffffff54
   184ac:	ldr	r3, [fp, #12]
   184b0:	str	r3, [fp, #-164]	; 0xffffff5c
   184b4:	ldrd	r2, [fp, #-140]	; 0xffffff74
   184b8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   184bc:	rsb	r1, r1, #0
   184c0:	rsb	ip, r1, #32
   184c4:	sub	r0, r1, #32
   184c8:	lsr	lr, r2, r1
   184cc:	str	lr, [fp, #-204]	; 0xffffff34
   184d0:	ldr	lr, [fp, #-204]	; 0xffffff34
   184d4:	orr	ip, lr, r3, lsl ip
   184d8:	str	ip, [fp, #-204]	; 0xffffff34
   184dc:	ldr	ip, [fp, #-204]	; 0xffffff34
   184e0:	orr	r0, ip, r3, lsr r0
   184e4:	str	r0, [fp, #-204]	; 0xffffff34
   184e8:	lsr	r3, r3, r1
   184ec:	str	r3, [fp, #-200]	; 0xffffff38
   184f0:	ldr	r3, [fp, #-204]	; 0xffffff34
   184f4:	str	r3, [fp, #-40]	; 0xffffffd8
   184f8:	ldrd	r0, [fp, #-140]	; 0xffffff74
   184fc:	ldrd	r2, [fp, #-172]	; 0xffffff54
   18500:	subs	ip, r2, #1
   18504:	str	ip, [fp, #-236]	; 0xffffff14
   18508:	sbc	r3, r3, #0
   1850c:	str	r3, [fp, #-232]	; 0xffffff18
   18510:	ldrd	r2, [fp, #-236]	; 0xffffff14
   18514:	mov	ip, r2
   18518:	and	ip, r0, ip
   1851c:	str	ip, [fp, #-252]	; 0xffffff04
   18520:	and	r3, r3, r1
   18524:	str	r3, [fp, #-248]	; 0xffffff08
   18528:	ldrd	r2, [fp, #-252]	; 0xffffff04
   1852c:	strd	r2, [fp, #-52]	; 0xffffffcc
   18530:	ldr	r3, [fp, #-164]	; 0xffffff5c
   18534:	add	r1, r3, #64	; 0x40
   18538:	sub	r3, fp, #176	; 0xb0
   1853c:	mov	r2, r3
   18540:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18544:	bl	18098 <main@@Base+0x317c>
   18548:	mov	r2, r0
   1854c:	ldr	r3, [fp, #44]	; 0x2c
   18550:	str	r2, [r3]
   18554:	ldr	r2, [fp, #40]	; 0x28
   18558:	mov	r3, #0
   1855c:	str	r3, [r2]
   18560:	b	1873c <main@@Base+0x3820>
   18564:	ldr	r2, [fp, #-176]	; 0xffffff50
   18568:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1856c:	udiv	r3, r3, r2
   18570:	str	r3, [fp, #-56]	; 0xffffffc8
   18574:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18578:	uxtb	r1, r3
   1857c:	ldr	r3, [fp, #40]	; 0x28
   18580:	ldr	r3, [r3]
   18584:	mov	r2, r3
   18588:	ldr	r3, [fp, #36]	; 0x24
   1858c:	add	r2, r3, r2
   18590:	add	r3, r1, #48	; 0x30
   18594:	uxtb	r3, r3
   18598:	strb	r3, [r2]
   1859c:	ldr	r3, [fp, #40]	; 0x28
   185a0:	ldr	r3, [r3]
   185a4:	add	r2, r3, #1
   185a8:	ldr	r3, [fp, #40]	; 0x28
   185ac:	str	r2, [r3]
   185b0:	ldr	r1, [fp, #-176]	; 0xffffff50
   185b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   185b8:	udiv	r3, r2, r1
   185bc:	mul	r3, r1, r3
   185c0:	sub	r3, r2, r3
   185c4:	str	r3, [fp, #-40]	; 0xffffffd8
   185c8:	ldr	r3, [fp, #44]	; 0x2c
   185cc:	ldr	r3, [r3]
   185d0:	sub	r2, r3, #1
   185d4:	ldr	r3, [fp, #44]	; 0x2c
   185d8:	str	r2, [r3]
   185dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   185e0:	mov	r2, r3
   185e4:	mov	r3, #0
   185e8:	ldr	r1, [fp, #-164]	; 0xffffff5c
   185ec:	rsb	r1, r1, #0
   185f0:	sub	ip, r1, #32
   185f4:	rsb	r0, r1, #32
   185f8:	lsl	lr, r3, r1
   185fc:	str	lr, [fp, #-208]	; 0xffffff30
   18600:	ldr	lr, [fp, #-208]	; 0xffffff30
   18604:	orr	ip, lr, r2, lsl ip
   18608:	str	ip, [fp, #-208]	; 0xffffff30
   1860c:	ldr	ip, [fp, #-208]	; 0xffffff30
   18610:	orr	r0, ip, r2, lsr r0
   18614:	str	r0, [fp, #-208]	; 0xffffff30
   18618:	lsl	r3, r2, r1
   1861c:	str	r3, [fp, #-212]	; 0xffffff2c
   18620:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18624:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   18628:	mov	ip, r0
   1862c:	adds	ip, r2, ip
   18630:	str	ip, [fp, #-260]	; 0xfffffefc
   18634:	adc	r3, r3, r1
   18638:	str	r3, [fp, #-256]	; 0xffffff00
   1863c:	sub	r3, fp, #260	; 0x104
   18640:	ldrd	r2, [r3]
   18644:	strd	r2, [fp, #-68]	; 0xffffffbc
   18648:	ldrd	r0, [fp, #-156]	; 0xffffff64
   1864c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   18650:	cmp	r3, r1
   18654:	cmpeq	r2, r0
   18658:	bcs	18724 <main@@Base+0x3808>
   1865c:	ldr	r3, [fp, #40]	; 0x28
   18660:	ldr	r8, [r3]
   18664:	sub	ip, fp, #108	; 0x6c
   18668:	add	r0, sp, #8
   1866c:	add	r1, fp, #4
   18670:	ldrd	r2, [r1]
   18674:	strd	r2, [r0]
   18678:	ldrd	r2, [r1, #8]
   1867c:	strd	r2, [r0, #8]
   18680:	mov	r1, sp
   18684:	sub	r3, fp, #132	; 0x84
   18688:	ldrd	r2, [r3]
   1868c:	strd	r2, [r1]
   18690:	sub	r3, fp, #140	; 0x8c
   18694:	ldm	r3, {r2, r3}
   18698:	mov	r0, ip
   1869c:	bl	178a4 <main@@Base+0x2988>
   186a0:	ldrd	r6, [fp, #-108]	; 0xffffff94
   186a4:	ldrd	r4, [fp, #-156]	; 0xffffff64
   186a8:	ldr	r3, [fp, #-176]	; 0xffffff50
   186ac:	mov	r2, r3
   186b0:	mov	r3, #0
   186b4:	ldr	r1, [fp, #-164]	; 0xffffff5c
   186b8:	rsb	r1, r1, #0
   186bc:	sub	ip, r1, #32
   186c0:	rsb	r0, r1, #32
   186c4:	lsl	lr, r3, r1
   186c8:	str	lr, [fp, #-216]	; 0xffffff28
   186cc:	ldr	lr, [fp, #-216]	; 0xffffff28
   186d0:	orr	ip, lr, r2, lsl ip
   186d4:	str	ip, [fp, #-216]	; 0xffffff28
   186d8:	ldr	ip, [fp, #-216]	; 0xffffff28
   186dc:	orr	r0, ip, r2, lsr r0
   186e0:	str	r0, [fp, #-216]	; 0xffffff28
   186e4:	lsl	r3, r2, r1
   186e8:	str	r3, [fp, #-220]	; 0xffffff24
   186ec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   186f0:	strd	r2, [sp, #24]
   186f4:	ldrd	r2, [fp, #-220]	; 0xffffff24
   186f8:	strd	r2, [sp, #16]
   186fc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   18700:	strd	r2, [sp, #8]
   18704:	strd	r4, [sp]
   18708:	mov	r2, r6
   1870c:	mov	r3, r7
   18710:	mov	r1, r8
   18714:	ldr	r0, [fp, #36]	; 0x24
   18718:	bl	18128 <main@@Base+0x320c>
   1871c:	mov	r3, r0
   18720:	b	189b0 <main@@Base+0x3a94>
   18724:	ldr	r2, [fp, #-176]	; 0xffffff50
   18728:	movw	r3, #52429	; 0xcccd
   1872c:	movt	r3, #52428	; 0xcccc
   18730:	umull	r2, r3, r3, r2
   18734:	lsr	r3, r3, #3
   18738:	str	r3, [fp, #-176]	; 0xffffff50
   1873c:	ldr	r3, [fp, #44]	; 0x2c
   18740:	ldr	r3, [r3]
   18744:	cmp	r3, #0
   18748:	bgt	18564 <main@@Base+0x3648>
   1874c:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   18750:	mov	r2, r4
   18754:	mov	r3, r5
   18758:	mov	r0, #0
   1875c:	mov	r1, #0
   18760:	lsl	r1, r3, #2
   18764:	orr	r1, r1, r2, lsr #30
   18768:	lsl	r0, r2, #2
   1876c:	mov	r2, r0
   18770:	mov	r3, r1
   18774:	adds	r2, r2, r4
   18778:	adc	r3, r3, r5
   1877c:	adds	r1, r2, r2
   18780:	str	r1, [fp, #-268]	; 0xfffffef4
   18784:	adc	r3, r3, r3
   18788:	str	r3, [fp, #-264]	; 0xfffffef8
   1878c:	sub	r3, fp, #268	; 0x10c
   18790:	ldrd	r2, [r3]
   18794:	strd	r2, [fp, #-52]	; 0xffffffcc
   18798:	ldrd	r4, [fp, #-36]	; 0xffffffdc
   1879c:	mov	r2, r4
   187a0:	mov	r3, r5
   187a4:	mov	r0, #0
   187a8:	mov	r1, #0
   187ac:	lsl	r1, r3, #2
   187b0:	orr	r1, r1, r2, lsr #30
   187b4:	lsl	r0, r2, #2
   187b8:	mov	r2, r0
   187bc:	mov	r3, r1
   187c0:	adds	r2, r2, r4
   187c4:	adc	r3, r3, r5
   187c8:	adds	r1, r2, r2
   187cc:	str	r1, [fp, #-276]	; 0xfffffeec
   187d0:	adc	r3, r3, r3
   187d4:	str	r3, [fp, #-272]	; 0xfffffef0
   187d8:	sub	r3, fp, #276	; 0x114
   187dc:	ldrd	r2, [r3]
   187e0:	strd	r2, [fp, #-36]	; 0xffffffdc
   187e4:	ldrd	r4, [fp, #-156]	; 0xffffff64
   187e8:	mov	r2, r4
   187ec:	mov	r3, r5
   187f0:	mov	r0, #0
   187f4:	mov	r1, #0
   187f8:	lsl	r1, r3, #2
   187fc:	orr	r1, r1, r2, lsr #30
   18800:	lsl	r0, r2, #2
   18804:	mov	r2, r0
   18808:	mov	r3, r1
   1880c:	adds	r2, r2, r4
   18810:	adc	r3, r3, r5
   18814:	adds	r1, r2, r2
   18818:	str	r1, [fp, #-284]	; 0xfffffee4
   1881c:	adc	r3, r3, r3
   18820:	str	r3, [fp, #-280]	; 0xfffffee8
   18824:	sub	r3, fp, #284	; 0x11c
   18828:	ldrd	r2, [r3]
   1882c:	strd	r2, [fp, #-156]	; 0xffffff64
   18830:	ldr	r3, [fp, #-164]	; 0xffffff5c
   18834:	rsb	r1, r3, #0
   18838:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1883c:	rsb	ip, r1, #32
   18840:	sub	r0, r1, #32
   18844:	lsr	lr, r2, r1
   18848:	str	lr, [fp, #-228]	; 0xffffff1c
   1884c:	ldr	lr, [fp, #-228]	; 0xffffff1c
   18850:	orr	ip, lr, r3, lsl ip
   18854:	str	ip, [fp, #-228]	; 0xffffff1c
   18858:	ldr	ip, [fp, #-228]	; 0xffffff1c
   1885c:	orr	r0, ip, r3, lsr r0
   18860:	str	r0, [fp, #-228]	; 0xffffff1c
   18864:	lsr	r3, r3, r1
   18868:	str	r3, [fp, #-224]	; 0xffffff20
   1886c:	ldr	r3, [fp, #-228]	; 0xffffff1c
   18870:	str	r3, [fp, #-72]	; 0xffffffb8
   18874:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18878:	uxtb	r1, r3
   1887c:	ldr	r3, [fp, #40]	; 0x28
   18880:	ldr	r3, [r3]
   18884:	mov	r2, r3
   18888:	ldr	r3, [fp, #36]	; 0x24
   1888c:	add	r2, r3, r2
   18890:	add	r3, r1, #48	; 0x30
   18894:	uxtb	r3, r3
   18898:	strb	r3, [r2]
   1889c:	ldr	r3, [fp, #40]	; 0x28
   188a0:	ldr	r3, [r3]
   188a4:	add	r2, r3, #1
   188a8:	ldr	r3, [fp, #40]	; 0x28
   188ac:	str	r2, [r3]
   188b0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   188b4:	subs	r1, r2, #1
   188b8:	str	r1, [fp, #-244]	; 0xffffff0c
   188bc:	sbc	r3, r3, #0
   188c0:	str	r3, [fp, #-240]	; 0xffffff10
   188c4:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   188c8:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   188cc:	mov	ip, r0
   188d0:	and	ip, r2, ip
   188d4:	str	ip, [fp, #-292]	; 0xfffffedc
   188d8:	and	r3, r3, r1
   188dc:	str	r3, [fp, #-288]	; 0xfffffee0
   188e0:	sub	r3, fp, #292	; 0x124
   188e4:	ldrd	r2, [r3]
   188e8:	strd	r2, [fp, #-52]	; 0xffffffcc
   188ec:	ldr	r3, [fp, #44]	; 0x2c
   188f0:	ldr	r3, [r3]
   188f4:	sub	r2, r3, #1
   188f8:	ldr	r3, [fp, #44]	; 0x2c
   188fc:	str	r2, [r3]
   18900:	ldrd	r0, [fp, #-156]	; 0xffffff64
   18904:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   18908:	cmp	r3, r1
   1890c:	cmpeq	r2, r0
   18910:	bcs	1874c <main@@Base+0x3830>
   18914:	ldr	r3, [fp, #40]	; 0x28
   18918:	ldr	r8, [r3]
   1891c:	sub	ip, fp, #92	; 0x5c
   18920:	add	r0, sp, #8
   18924:	add	r1, fp, #4
   18928:	ldrd	r2, [r1]
   1892c:	strd	r2, [r0]
   18930:	ldrd	r2, [r1, #8]
   18934:	strd	r2, [r0, #8]
   18938:	mov	r1, sp
   1893c:	sub	r3, fp, #132	; 0x84
   18940:	ldrd	r2, [r3]
   18944:	strd	r2, [r1]
   18948:	sub	r3, fp, #140	; 0x8c
   1894c:	ldm	r3, {r2, r3}
   18950:	mov	r0, ip
   18954:	bl	178a4 <main@@Base+0x2988>
   18958:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1895c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18960:	mul	r0, r3, r1
   18964:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18968:	mul	r1, r2, r1
   1896c:	add	r1, r0, r1
   18970:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18974:	umull	r2, r3, r0, r2
   18978:	add	r1, r1, r3
   1897c:	mov	r3, r1
   18980:	ldrd	r0, [fp, #-156]	; 0xffffff64
   18984:	ldrd	r4, [fp, #-172]	; 0xffffff54
   18988:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   1898c:	strd	r6, [sp, #24]
   18990:	strd	r4, [sp, #16]
   18994:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   18998:	strd	r4, [sp, #8]
   1899c:	strd	r0, [sp]
   189a0:	mov	r1, r8
   189a4:	ldr	r0, [fp, #36]	; 0x24
   189a8:	bl	18128 <main@@Base+0x320c>
   189ac:	mov	r3, r0
   189b0:	mov	r0, r3
   189b4:	sub	sp, fp, #28
   189b8:	ldrd	r4, [sp]
   189bc:	ldrd	r6, [sp, #8]
   189c0:	ldrd	r8, [sp, #16]
   189c4:	ldr	fp, [sp, #24]
   189c8:	add	sp, sp, #28
   189cc:	pop	{pc}		; (ldr pc, [sp], #4)
   189d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   189d4:	strd	r6, [sp, #8]
   189d8:	strd	r8, [sp, #16]
   189dc:	str	fp, [sp, #24]
   189e0:	str	lr, [sp, #28]
   189e4:	add	fp, sp, #28
   189e8:	sub	sp, sp, #248	; 0xf8
   189ec:	vstr	d0, [fp, #-156]	; 0xffffff64
   189f0:	str	r0, [fp, #-160]	; 0xffffff60
   189f4:	str	r1, [fp, #-164]	; 0xffffff5c
   189f8:	str	r2, [fp, #-168]	; 0xffffff58
   189fc:	sub	r3, fp, #68	; 0x44
   18a00:	vldr	d0, [fp, #-156]	; 0xffffff64
   18a04:	mov	r0, r3
   18a08:	bl	17d74 <main@@Base+0x2e58>
   18a0c:	sub	r0, fp, #84	; 0x54
   18a10:	mov	r1, sp
   18a14:	sub	r3, fp, #60	; 0x3c
   18a18:	ldrd	r2, [r3]
   18a1c:	strd	r2, [r1]
   18a20:	sub	r3, fp, #68	; 0x44
   18a24:	ldm	r3, {r2, r3}
   18a28:	bl	17c54 <main@@Base+0x2d38>
   18a2c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   18a30:	adds	r8, r2, r2
   18a34:	adc	r9, r3, r3
   18a38:	mov	r2, r8
   18a3c:	mov	r3, r9
   18a40:	adds	r6, r2, #1
   18a44:	adc	r7, r3, #0
   18a48:	strd	r6, [fp, #-100]	; 0xffffff9c
   18a4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18a50:	sub	r3, r3, #1
   18a54:	str	r3, [fp, #-92]	; 0xffffffa4
   18a58:	sub	r0, fp, #116	; 0x74
   18a5c:	mov	r1, sp
   18a60:	sub	r3, fp, #92	; 0x5c
   18a64:	ldrd	r2, [r3]
   18a68:	strd	r2, [r1]
   18a6c:	sub	r3, fp, #100	; 0x64
   18a70:	ldm	r3, {r2, r3}
   18a74:	bl	17c54 <main@@Base+0x2d38>
   18a78:	vldr	d0, [fp, #-156]	; 0xffffff64
   18a7c:	bl	176dc <main@@Base+0x27c0>
   18a80:	strd	r0, [fp, #-36]	; 0xffffffdc
   18a84:	vldr	d7, [fp, #-156]	; 0xffffff64
   18a88:	vcmpe.f64	d7, #0.0
   18a8c:	vmrs	APSR_nzcv, fpscr
   18a90:	movgt	r3, #1
   18a94:	movle	r3, #0
   18a98:	uxtb	r3, r3
   18a9c:	eor	r3, r3, #1
   18aa0:	uxtb	r3, r3
   18aa4:	cmp	r3, #0
   18aa8:	bne	18ad8 <main@@Base+0x3bbc>
   18aac:	vldr	d7, [fp, #-156]	; 0xffffff64
   18ab0:	vldr	d6, [pc, #736]	; 18d98 <main@@Base+0x3e7c>
   18ab4:	vcmpe.f64	d7, d6
   18ab8:	vmrs	APSR_nzcv, fpscr
   18abc:	movls	r3, #1
   18ac0:	movhi	r3, #0
   18ac4:	uxtb	r3, r3
   18ac8:	eor	r3, r3, #1
   18acc:	uxtb	r3, r3
   18ad0:	cmp	r3, #0
   18ad4:	beq	18af8 <main@@Base+0x3bdc>
   18ad8:	ldr	r3, [pc, #704]	; 18da0 <main@@Base+0x3e84>
   18adc:	add	r3, pc, r3
   18ae0:	mov	r2, #138	; 0x8a
   18ae4:	ldr	r1, [pc, #696]	; 18da4 <main@@Base+0x3e88>
   18ae8:	add	r1, pc, r1
   18aec:	ldr	r0, [pc, #692]	; 18da8 <main@@Base+0x3e8c>
   18af0:	add	r0, pc, r0
   18af4:	bl	12504 <__assert_fail@plt>
   18af8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18afc:	mvn	r2, #0
   18b00:	movw	r3, #65535	; 0xffff
   18b04:	movt	r3, #15
   18b08:	and	ip, r0, r2
   18b0c:	str	ip, [fp, #-196]	; 0xffffff3c
   18b10:	and	r3, r1, r3
   18b14:	str	r3, [fp, #-192]	; 0xffffff40
   18b18:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   18b1c:	orrs	r3, r2, r3
   18b20:	bne	18b90 <main@@Base+0x3c74>
   18b24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18b28:	mov	r0, #0
   18b2c:	mov	r1, #0
   18b30:	movt	r1, #32752	; 0x7ff0
   18b34:	and	ip, r2, r0
   18b38:	str	ip, [fp, #-204]	; 0xffffff34
   18b3c:	and	r3, r3, r1
   18b40:	str	r3, [fp, #-200]	; 0xffffff38
   18b44:	ldrd	r2, [fp, #-204]	; 0xffffff34
   18b48:	orrs	r3, r2, r3
   18b4c:	beq	18b90 <main@@Base+0x3c74>
   18b50:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   18b54:	mov	r2, #0
   18b58:	mov	r3, #0
   18b5c:	lsl	r3, r1, #2
   18b60:	orr	r3, r3, r0, lsr #30
   18b64:	lsl	r2, r0, #2
   18b68:	subs	r1, r2, #1
   18b6c:	str	r1, [fp, #-212]	; 0xffffff2c
   18b70:	sbc	r3, r3, #0
   18b74:	str	r3, [fp, #-208]	; 0xffffff30
   18b78:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   18b7c:	strd	r2, [fp, #-132]	; 0xffffff7c
   18b80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18b84:	sub	r3, r3, #2
   18b88:	str	r3, [fp, #-124]	; 0xffffff84
   18b8c:	b	18bcc <main@@Base+0x3cb0>
   18b90:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   18b94:	adds	r1, r2, r2
   18b98:	str	r1, [fp, #-228]	; 0xffffff1c
   18b9c:	adc	r3, r3, r3
   18ba0:	str	r3, [fp, #-224]	; 0xffffff20
   18ba4:	ldrd	r2, [fp, #-228]	; 0xffffff1c
   18ba8:	subs	r1, r2, #1
   18bac:	str	r1, [fp, #-220]	; 0xffffff24
   18bb0:	sbc	r3, r3, #0
   18bb4:	str	r3, [fp, #-216]	; 0xffffff28
   18bb8:	ldrd	r2, [fp, #-220]	; 0xffffff24
   18bbc:	strd	r2, [fp, #-132]	; 0xffffff7c
   18bc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   18bc4:	sub	r3, r3, #1
   18bc8:	str	r3, [fp, #-124]	; 0xffffff84
   18bcc:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   18bd0:	ldr	r0, [fp, #-124]	; 0xffffff84
   18bd4:	ldr	r1, [fp, #-108]	; 0xffffff94
   18bd8:	sub	r1, r0, r1
   18bdc:	sub	ip, r1, #32
   18be0:	rsb	r0, r1, #32
   18be4:	lsl	r5, r3, r1
   18be8:	orr	r5, r5, r2, lsl ip
   18bec:	orr	r5, r5, r2, lsr r0
   18bf0:	lsl	r4, r2, r1
   18bf4:	strd	r4, [fp, #-132]	; 0xffffff7c
   18bf8:	ldr	r3, [fp, #-108]	; 0xffffff94
   18bfc:	str	r3, [fp, #-124]	; 0xffffff84
   18c00:	ldr	r2, [fp, #-76]	; 0xffffffb4
   18c04:	movw	r3, #65412	; 0xff84
   18c08:	movt	r3, #65535	; 0xffff
   18c0c:	sub	r3, r3, r2
   18c10:	sub	r2, fp, #148	; 0x94
   18c14:	mov	r1, r2
   18c18:	mov	r0, r3
   18c1c:	bl	177b4 <main@@Base+0x2898>
   18c20:	str	r0, [fp, #-40]	; 0xffffffd8
   18c24:	sub	ip, fp, #188	; 0xbc
   18c28:	add	r0, sp, #8
   18c2c:	sub	r1, fp, #148	; 0x94
   18c30:	ldrd	r2, [r1]
   18c34:	strd	r2, [r0]
   18c38:	ldrd	r2, [r1, #8]
   18c3c:	strd	r2, [r0, #8]
   18c40:	mov	r1, sp
   18c44:	sub	r3, fp, #76	; 0x4c
   18c48:	ldrd	r2, [r3]
   18c4c:	strd	r2, [r1]
   18c50:	sub	r3, fp, #84	; 0x54
   18c54:	ldm	r3, {r2, r3}
   18c58:	mov	r0, ip
   18c5c:	bl	17970 <main@@Base+0x2a54>
   18c60:	sub	r1, fp, #84	; 0x54
   18c64:	sub	r0, fp, #188	; 0xbc
   18c68:	ldrd	r2, [r0]
   18c6c:	strd	r2, [r1]
   18c70:	ldrd	r2, [r0, #8]
   18c74:	strd	r2, [r1, #8]
   18c78:	sub	ip, fp, #132	; 0x84
   18c7c:	add	r0, sp, #8
   18c80:	sub	r1, fp, #148	; 0x94
   18c84:	ldrd	r2, [r1]
   18c88:	strd	r2, [r0]
   18c8c:	ldrd	r2, [r1, #8]
   18c90:	strd	r2, [r0, #8]
   18c94:	mov	r1, sp
   18c98:	sub	r3, fp, #124	; 0x7c
   18c9c:	ldrd	r2, [r3]
   18ca0:	strd	r2, [r1]
   18ca4:	sub	r3, fp, #132	; 0x84
   18ca8:	ldm	r3, {r2, r3}
   18cac:	mov	r0, ip
   18cb0:	bl	17970 <main@@Base+0x2a54>
   18cb4:	sub	ip, fp, #188	; 0xbc
   18cb8:	add	r0, sp, #8
   18cbc:	sub	r1, fp, #148	; 0x94
   18cc0:	ldrd	r2, [r1]
   18cc4:	strd	r2, [r0]
   18cc8:	ldrd	r2, [r1, #8]
   18ccc:	strd	r2, [r0, #8]
   18cd0:	mov	r1, sp
   18cd4:	sub	r3, fp, #108	; 0x6c
   18cd8:	ldrd	r2, [r3]
   18cdc:	strd	r2, [r1]
   18ce0:	sub	r3, fp, #116	; 0x74
   18ce4:	ldm	r3, {r2, r3}
   18ce8:	mov	r0, ip
   18cec:	bl	17970 <main@@Base+0x2a54>
   18cf0:	sub	r1, fp, #116	; 0x74
   18cf4:	sub	r0, fp, #188	; 0xbc
   18cf8:	ldrd	r2, [r0]
   18cfc:	strd	r2, [r1]
   18d00:	ldrd	r2, [r0, #8]
   18d04:	strd	r2, [r1, #8]
   18d08:	sub	r3, fp, #48	; 0x30
   18d0c:	str	r3, [sp, #40]	; 0x28
   18d10:	ldr	r3, [fp, #-164]	; 0xffffff5c
   18d14:	str	r3, [sp, #36]	; 0x24
   18d18:	ldr	r3, [fp, #-160]	; 0xffffff60
   18d1c:	str	r3, [sp, #32]
   18d20:	add	r0, sp, #16
   18d24:	sub	r1, fp, #116	; 0x74
   18d28:	ldrd	r2, [r1]
   18d2c:	strd	r2, [r0]
   18d30:	ldrd	r2, [r1, #8]
   18d34:	strd	r2, [r0, #8]
   18d38:	mov	r0, sp
   18d3c:	sub	r1, fp, #84	; 0x54
   18d40:	ldrd	r2, [r1]
   18d44:	strd	r2, [r0]
   18d48:	ldrd	r2, [r1, #8]
   18d4c:	strd	r2, [r0, #8]
   18d50:	sub	r3, fp, #132	; 0x84
   18d54:	ldm	r3, {r0, r1, r2, r3}
   18d58:	bl	183dc <main@@Base+0x34c0>
   18d5c:	str	r0, [fp, #-44]	; 0xffffffd4
   18d60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   18d64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18d68:	sub	r2, r2, r3
   18d6c:	ldr	r3, [fp, #-168]	; 0xffffff58
   18d70:	str	r2, [r3]
   18d74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18d78:	mov	r0, r3
   18d7c:	sub	sp, fp, #28
   18d80:	ldrd	r4, [sp]
   18d84:	ldrd	r6, [sp, #8]
   18d88:	ldrd	r8, [sp, #16]
   18d8c:	ldr	fp, [sp, #24]
   18d90:	add	sp, sp, #28
   18d94:	pop	{pc}		; (ldr pc, [sp], #4)
   18d98:			; <UNDEFINED> instruction: 0xffffffff
   18d9c:	svcvc	0x00efffff
   18da0:	ldrdeq	ip, [r0], -r4
   18da4:	andeq	ip, r0, r4, ror r2
   18da8:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   18dac:	push	{fp}		; (str fp, [sp, #-4]!)
   18db0:	add	fp, sp, #0
   18db4:	sub	sp, sp, #44	; 0x2c
   18db8:	str	r0, [fp, #-40]	; 0xffffffd8
   18dbc:	str	r1, [fp, #-44]	; 0xffffffd4
   18dc0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18dc4:	str	r3, [fp, #-16]
   18dc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18dcc:	cmp	r3, #0
   18dd0:	bge	18df4 <main@@Base+0x3ed8>
   18dd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18dd8:	add	r2, r3, #1
   18ddc:	str	r2, [fp, #-44]	; 0xffffffd4
   18de0:	mov	r2, #45	; 0x2d
   18de4:	strb	r2, [r3]
   18de8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18dec:	rsb	r3, r3, #0
   18df0:	str	r3, [fp, #-40]	; 0xffffffd8
   18df4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18df8:	str	r3, [fp, #-12]
   18dfc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18e00:	movw	r3, #26215	; 0x6667
   18e04:	movt	r3, #26214	; 0x6666
   18e08:	smull	r1, r3, r3, r2
   18e0c:	asr	r1, r3, #2
   18e10:	asr	r3, r2, #31
   18e14:	sub	r3, r1, r3
   18e18:	str	r3, [fp, #-20]	; 0xffffffec
   18e1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e20:	mvn	r2, #9
   18e24:	mul	r3, r2, r3
   18e28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18e2c:	add	r3, r2, r3
   18e30:	str	r3, [fp, #-24]	; 0xffffffe8
   18e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e38:	uxtb	r2, r3
   18e3c:	ldr	r3, [fp, #-12]
   18e40:	add	r1, r3, #1
   18e44:	str	r1, [fp, #-12]
   18e48:	add	r2, r2, #48	; 0x30
   18e4c:	uxtb	r2, r2
   18e50:	strb	r2, [r3]
   18e54:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e58:	cmp	r3, #0
   18e5c:	beq	18e6c <main@@Base+0x3f50>
   18e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e64:	str	r3, [fp, #-40]	; 0xffffffd8
   18e68:	b	18dfc <main@@Base+0x3ee0>
   18e6c:	nop	{0}
   18e70:	ldr	r3, [fp, #-12]
   18e74:	mov	r2, #0
   18e78:	strb	r2, [r3]
   18e7c:	ldr	r2, [fp, #-12]
   18e80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e84:	sub	r3, r2, r3
   18e88:	str	r3, [fp, #-28]	; 0xffffffe4
   18e8c:	mov	r3, #0
   18e90:	str	r3, [fp, #-8]
   18e94:	b	18f0c <main@@Base+0x3ff0>
   18e98:	ldr	r3, [fp, #-8]
   18e9c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18ea0:	add	r3, r2, r3
   18ea4:	ldrb	r3, [r3]
   18ea8:	strb	r3, [fp, #-29]	; 0xffffffe3
   18eac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18eb0:	sub	r2, r3, #1
   18eb4:	ldr	r3, [fp, #-8]
   18eb8:	sub	r3, r2, r3
   18ebc:	mov	r2, r3
   18ec0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ec4:	add	r2, r3, r2
   18ec8:	ldr	r3, [fp, #-8]
   18ecc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   18ed0:	add	r3, r1, r3
   18ed4:	ldrb	r2, [r2]
   18ed8:	strb	r2, [r3]
   18edc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18ee0:	sub	r2, r3, #1
   18ee4:	ldr	r3, [fp, #-8]
   18ee8:	sub	r3, r2, r3
   18eec:	mov	r2, r3
   18ef0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ef4:	add	r3, r3, r2
   18ef8:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   18efc:	strb	r2, [r3]
   18f00:	ldr	r3, [fp, #-8]
   18f04:	add	r3, r3, #1
   18f08:	str	r3, [fp, #-8]
   18f0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f10:	lsr	r2, r3, #31
   18f14:	add	r3, r2, r3
   18f18:	asr	r3, r3, #1
   18f1c:	mov	r2, r3
   18f20:	ldr	r3, [fp, #-8]
   18f24:	cmp	r3, r2
   18f28:	blt	18e98 <main@@Base+0x3f7c>
   18f2c:	ldr	r2, [fp, #-12]
   18f30:	ldr	r3, [fp, #-16]
   18f34:	sub	r3, r2, r3
   18f38:	mov	r0, r3
   18f3c:	add	sp, fp, #0
   18f40:	pop	{fp}		; (ldr fp, [sp], #4)
   18f44:	bx	lr
   18f48:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18f4c:	strd	r6, [sp, #8]
   18f50:	str	fp, [sp, #16]
   18f54:	str	lr, [sp, #20]
   18f58:	add	fp, sp, #20
   18f5c:	sub	sp, sp, #56	; 0x38
   18f60:	vstr	d0, [fp, #-68]	; 0xffffffbc
   18f64:	str	r0, [fp, #-72]	; 0xffffffb8
   18f68:	vldr	d0, [fp, #-68]	; 0xffffffbc
   18f6c:	bl	176dc <main@@Base+0x27c0>
   18f70:	strd	r0, [fp, #-36]	; 0xffffffdc
   18f74:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18f78:	str	r3, [fp, #-40]	; 0xffffffd8
   18f7c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   18f80:	cmp	r3, #0
   18f84:	bne	18fa8 <main@@Base+0x408c>
   18f88:	ldr	r3, [pc, #1248]	; 19470 <main@@Base+0x4554>
   18f8c:	add	r3, pc, r3
   18f90:	mov	r2, #189	; 0xbd
   18f94:	ldr	r1, [pc, #1240]	; 19474 <main@@Base+0x4558>
   18f98:	add	r1, pc, r1
   18f9c:	ldr	r0, [pc, #1236]	; 19478 <main@@Base+0x455c>
   18fa0:	add	r0, pc, r0
   18fa4:	bl	12504 <__assert_fail@plt>
   18fa8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   18fac:	adds	r6, r2, r2
   18fb0:	adc	r7, r3, r3
   18fb4:	mov	r0, r6
   18fb8:	mov	r1, r7
   18fbc:	mov	r2, #0
   18fc0:	mov	r3, #0
   18fc4:	movt	r3, #65504	; 0xffe0
   18fc8:	cmp	r1, r3
   18fcc:	cmpeq	r0, r2
   18fd0:	bls	19004 <main@@Base+0x40e8>
   18fd4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   18fd8:	mov	r2, #0
   18fdc:	mov	r3, #0
   18fe0:	mov	r2, r1
   18fe4:	mov	r3, #0
   18fe8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18fec:	ldr	r1, [pc, #1160]	; 1947c <main@@Base+0x4560>
   18ff0:	add	r1, pc, r1
   18ff4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   18ff8:	bl	124e0 <sprintf@plt>
   18ffc:	mov	r3, r0
   19000:	b	19454 <main@@Base+0x4538>
   19004:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19008:	cmp	r2, #0
   1900c:	sbcs	r3, r3, #0
   19010:	bge	19044 <main@@Base+0x4128>
   19014:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19018:	add	r2, r3, #1
   1901c:	str	r2, [fp, #-40]	; 0xffffffd8
   19020:	mov	r2, #45	; 0x2d
   19024:	strb	r2, [r3]
   19028:	vldr	d7, [fp, #-68]	; 0xffffffbc
   1902c:	vneg.f64	d7, d7
   19030:	vstr	d7, [fp, #-68]	; 0xffffffbc
   19034:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19038:	mov	r4, r2
   1903c:	add	r5, r3, #-2147483648	; 0x80000000
   19040:	strd	r4, [fp, #-36]	; 0xffffffdc
   19044:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19048:	orrs	r3, r2, r3
   1904c:	bne	19080 <main@@Base+0x4164>
   19050:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19054:	add	r2, r3, #1
   19058:	str	r2, [fp, #-40]	; 0xffffffd8
   1905c:	mov	r2, #48	; 0x30
   19060:	strb	r2, [r3]
   19064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19068:	mov	r2, #0
   1906c:	strb	r2, [r3]
   19070:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19074:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19078:	sub	r3, r2, r3
   1907c:	b	19454 <main@@Base+0x4538>
   19080:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   19084:	mov	r0, #0
   19088:	mov	r1, #0
   1908c:	movt	r1, #32752	; 0x7ff0
   19090:	cmp	r3, r1
   19094:	cmpeq	r2, r0
   19098:	bne	190f4 <main@@Base+0x41d8>
   1909c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190a0:	add	r2, r3, #1
   190a4:	str	r2, [fp, #-40]	; 0xffffffd8
   190a8:	mov	r2, #105	; 0x69
   190ac:	strb	r2, [r3]
   190b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190b4:	add	r2, r3, #1
   190b8:	str	r2, [fp, #-40]	; 0xffffffd8
   190bc:	mov	r2, #110	; 0x6e
   190c0:	strb	r2, [r3]
   190c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190c8:	add	r2, r3, #1
   190cc:	str	r2, [fp, #-40]	; 0xffffffd8
   190d0:	mov	r2, #102	; 0x66
   190d4:	strb	r2, [r3]
   190d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190dc:	mov	r2, #0
   190e0:	strb	r2, [r3]
   190e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   190e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   190ec:	sub	r3, r2, r3
   190f0:	b	19454 <main@@Base+0x4538>
   190f4:	sub	r2, fp, #52	; 0x34
   190f8:	sub	r3, fp, #56	; 0x38
   190fc:	mov	r1, r3
   19100:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19104:	vldr	d0, [fp, #-68]	; 0xffffffbc
   19108:	bl	189d0 <main@@Base+0x3ab4>
   1910c:	str	r0, [fp, #-44]	; 0xffffffd4
   19110:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19114:	cmp	r3, #0
   19118:	bne	19148 <main@@Base+0x422c>
   1911c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   19120:	ldr	r1, [pc, #856]	; 19480 <main@@Base+0x4564>
   19124:	add	r1, pc, r1
   19128:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1912c:	bl	124e0 <sprintf@plt>
   19130:	mov	r1, r0
   19134:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19138:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1913c:	sub	r3, r2, r3
   19140:	add	r3, r1, r3
   19144:	b	19454 <main@@Base+0x4538>
   19148:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1914c:	cmp	r3, #2
   19150:	movge	r2, r3
   19154:	movlt	r2, #2
   19158:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1915c:	rsb	r3, r3, #0
   19160:	cmp	r2, r3
   19164:	ble	19174 <main@@Base+0x4258>
   19168:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1916c:	rsb	r3, r3, #0
   19170:	b	19188 <main@@Base+0x426c>
   19174:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19178:	cmp	r3, #2
   1917c:	movge	r3, r3
   19180:	movlt	r3, #2
   19184:	sub	r3, r3, #1
   19188:	str	r3, [fp, #-48]	; 0xffffffd0
   1918c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19190:	cmp	r3, #0
   19194:	bge	19264 <main@@Base+0x4348>
   19198:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1919c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   191a0:	add	r3, r2, r3
   191a4:	cmn	r3, #2
   191a8:	blt	19264 <main@@Base+0x4348>
   191ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   191b0:	rsb	r2, r3, #0
   191b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   191b8:	cmp	r2, r3
   191bc:	blt	19264 <main@@Base+0x4348>
   191c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   191c4:	mov	r2, r3
   191c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   191cc:	add	r3, r2, r3
   191d0:	rsb	r3, r3, #2
   191d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   191d8:	add	r3, r2, r3
   191dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   191e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   191e4:	mov	r0, r3
   191e8:	bl	12408 <memmove@plt>
   191ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191f0:	mov	r2, #48	; 0x30
   191f4:	strb	r2, [r3]
   191f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191fc:	add	r3, r3, #1
   19200:	mov	r2, #46	; 0x2e
   19204:	strb	r2, [r3]
   19208:	mov	r3, #2
   1920c:	str	r3, [fp, #-24]	; 0xffffffe8
   19210:	b	19234 <main@@Base+0x4318>
   19214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19218:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1921c:	add	r3, r2, r3
   19220:	mov	r2, #48	; 0x30
   19224:	strb	r2, [r3]
   19228:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1922c:	add	r3, r3, #1
   19230:	str	r3, [fp, #-24]	; 0xffffffe8
   19234:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19238:	rsb	r2, r3, #2
   1923c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19240:	sub	r3, r2, r3
   19244:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19248:	cmp	r2, r3
   1924c:	blt	19214 <main@@Base+0x42f8>
   19250:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19258:	add	r3, r2, r3
   1925c:	str	r3, [fp, #-56]	; 0xffffffc8
   19260:	b	19424 <main@@Base+0x4508>
   19264:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19268:	cmp	r3, #0
   1926c:	bge	19374 <main@@Base+0x4458>
   19270:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19274:	cmp	r3, #1
   19278:	ble	19374 <main@@Base+0x4458>
   1927c:	mov	r3, #0
   19280:	str	r3, [fp, #-24]	; 0xffffffe8
   19284:	b	192cc <main@@Base+0x43b0>
   19288:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1928c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19290:	sub	r3, r2, r3
   19294:	sub	r3, r3, #1
   19298:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1929c:	add	r2, r2, r3
   192a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   192a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192a8:	sub	r3, r1, r3
   192ac:	mov	r1, r3
   192b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192b4:	add	r3, r3, r1
   192b8:	ldrb	r2, [r2]
   192bc:	strb	r2, [r3]
   192c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   192c4:	add	r3, r3, #1
   192c8:	str	r3, [fp, #-24]	; 0xffffffe8
   192cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   192d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   192d4:	cmp	r2, r3
   192d8:	blt	19288 <main@@Base+0x436c>
   192dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   192e0:	add	r2, r3, #1
   192e4:	str	r2, [fp, #-56]	; 0xffffffc8
   192e8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   192ec:	sub	r3, r3, r2
   192f0:	mov	r2, r3
   192f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192f8:	add	r3, r3, r2
   192fc:	mov	r2, #46	; 0x2e
   19300:	strb	r2, [r3]
   19304:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19308:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1930c:	add	r3, r2, r3
   19310:	str	r3, [fp, #-52]	; 0xffffffcc
   19314:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19318:	cmp	r3, #0
   1931c:	beq	19424 <main@@Base+0x4508>
   19320:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19324:	add	r2, r3, #1
   19328:	str	r2, [fp, #-56]	; 0xffffffc8
   1932c:	mov	r2, r3
   19330:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19334:	add	r3, r3, r2
   19338:	mov	r2, #101	; 0x65
   1933c:	strb	r2, [r3]
   19340:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19344:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19348:	mov	r1, r3
   1934c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19350:	add	r3, r3, r1
   19354:	mov	r1, r3
   19358:	mov	r0, r2
   1935c:	bl	18dac <main@@Base+0x3e90>
   19360:	mov	r2, r0
   19364:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19368:	add	r3, r2, r3
   1936c:	str	r3, [fp, #-56]	; 0xffffffc8
   19370:	b	19424 <main@@Base+0x4508>
   19374:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19378:	cmp	r3, #0
   1937c:	blt	1938c <main@@Base+0x4470>
   19380:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19384:	cmp	r3, #2
   19388:	ble	193e0 <main@@Base+0x44c4>
   1938c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19390:	add	r2, r3, #1
   19394:	str	r2, [fp, #-56]	; 0xffffffc8
   19398:	mov	r2, r3
   1939c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   193a0:	add	r3, r3, r2
   193a4:	mov	r2, #101	; 0x65
   193a8:	strb	r2, [r3]
   193ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   193b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   193b4:	mov	r1, r3
   193b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   193bc:	add	r3, r3, r1
   193c0:	mov	r1, r3
   193c4:	mov	r0, r2
   193c8:	bl	18dac <main@@Base+0x3e90>
   193cc:	mov	r2, r0
   193d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   193d4:	add	r3, r2, r3
   193d8:	str	r3, [fp, #-56]	; 0xffffffc8
   193dc:	b	19424 <main@@Base+0x4508>
   193e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   193e4:	cmp	r3, #0
   193e8:	ble	19424 <main@@Base+0x4508>
   193ec:	b	19410 <main@@Base+0x44f4>
   193f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   193f4:	add	r2, r3, #1
   193f8:	str	r2, [fp, #-56]	; 0xffffffc8
   193fc:	mov	r2, r3
   19400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19404:	add	r3, r3, r2
   19408:	mov	r2, #48	; 0x30
   1940c:	strb	r2, [r3]
   19410:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19414:	sub	r2, r3, #1
   19418:	str	r2, [fp, #-52]	; 0xffffffcc
   1941c:	cmp	r3, #0
   19420:	bgt	193f0 <main@@Base+0x44d4>
   19424:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19428:	mov	r2, r3
   1942c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19430:	add	r3, r3, r2
   19434:	mov	r2, #0
   19438:	strb	r2, [r3]
   1943c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19440:	mov	r2, r3
   19444:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19448:	add	r2, r3, r2
   1944c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19450:	sub	r3, r2, r3
   19454:	mov	r0, r3
   19458:	sub	sp, fp, #20
   1945c:	ldrd	r4, [sp]
   19460:	ldrd	r6, [sp, #8]
   19464:	ldr	fp, [sp, #16]
   19468:	add	sp, sp, #20
   1946c:	pop	{pc}		; (ldr pc, [sp], #4)
   19470:	andeq	ip, r0, ip, lsr #2
   19474:	andeq	fp, r0, r4, asr #27
   19478:	andeq	fp, r0, r4, asr lr
   1947c:	andeq	fp, r0, r8, lsl #28
   19480:	andeq	fp, r0, r4, ror #25
   19484:	push	{fp}		; (str fp, [sp, #-4]!)
   19488:	add	fp, sp, #0
   1948c:	sub	sp, sp, #12
   19490:	str	r0, [fp, #-8]
   19494:	ldr	r3, [fp, #-8]
   19498:	cmp	r3, #5
   1949c:	addls	pc, pc, r3, lsl #2
   194a0:	b	19504 <main@@Base+0x45e8>
   194a4:	b	194bc <main@@Base+0x45a0>
   194a8:	b	194e0 <main@@Base+0x45c4>
   194ac:	b	194c8 <main@@Base+0x45ac>
   194b0:	b	194d4 <main@@Base+0x45b8>
   194b4:	b	194ec <main@@Base+0x45d0>
   194b8:	b	194f8 <main@@Base+0x45dc>
   194bc:	ldr	r3, [pc, #88]	; 1951c <main@@Base+0x4600>
   194c0:	add	r3, pc, r3
   194c4:	b	1950c <main@@Base+0x45f0>
   194c8:	ldr	r3, [pc, #80]	; 19520 <main@@Base+0x4604>
   194cc:	add	r3, pc, r3
   194d0:	b	1950c <main@@Base+0x45f0>
   194d4:	ldr	r3, [pc, #72]	; 19524 <main@@Base+0x4608>
   194d8:	add	r3, pc, r3
   194dc:	b	1950c <main@@Base+0x45f0>
   194e0:	ldr	r3, [pc, #64]	; 19528 <main@@Base+0x460c>
   194e4:	add	r3, pc, r3
   194e8:	b	1950c <main@@Base+0x45f0>
   194ec:	ldr	r3, [pc, #56]	; 1952c <main@@Base+0x4610>
   194f0:	add	r3, pc, r3
   194f4:	b	1950c <main@@Base+0x45f0>
   194f8:	ldr	r3, [pc, #48]	; 19530 <main@@Base+0x4614>
   194fc:	add	r3, pc, r3
   19500:	b	1950c <main@@Base+0x45f0>
   19504:	ldr	r3, [pc, #40]	; 19534 <main@@Base+0x4618>
   19508:	add	r3, pc, r3
   1950c:	mov	r0, r3
   19510:	add	sp, fp, #0
   19514:	pop	{fp}		; (ldr fp, [sp], #4)
   19518:	bx	lr
   1951c:	andeq	fp, r0, r0, asr r9
   19520:	andeq	fp, r0, r8, asr #18
   19524:	andeq	fp, r0, r0, asr r9
   19528:	andeq	fp, r0, r4, asr r9
   1952c:	andeq	fp, r0, ip, asr r9
   19530:	andeq	fp, r0, r4, ror #18
   19534:	andeq	fp, r0, r0, ror r9
   19538:	push	{fp}		; (str fp, [sp, #-4]!)
   1953c:	add	fp, sp, #0
   19540:	sub	sp, sp, #28
   19544:	str	r0, [fp, #-24]	; 0xffffffe8
   19548:	str	r1, [fp, #-28]	; 0xffffffe4
   1954c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19550:	movw	r3, #43691	; 0xaaab
   19554:	movt	r3, #43690	; 0xaaaa
   19558:	umull	r1, r3, r3, r2
   1955c:	lsr	r1, r3, #1
   19560:	mov	r3, r1
   19564:	lsl	r3, r3, #1
   19568:	add	r3, r3, r1
   1956c:	sub	r3, r2, r3
   19570:	str	r3, [fp, #-12]
   19574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19578:	lsl	r2, r3, #2
   1957c:	movw	r3, #43691	; 0xaaab
   19580:	movt	r3, #43690	; 0xaaaa
   19584:	umull	r2, r3, r3, r2
   19588:	lsr	r3, r3, #1
   1958c:	add	r3, r3, #3
   19590:	bic	r3, r3, #3
   19594:	str	r3, [fp, #-8]
   19598:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1959c:	and	r3, r3, #128	; 0x80
   195a0:	str	r3, [fp, #-16]
   195a4:	ldr	r3, [fp, #-16]
   195a8:	cmp	r3, #0
   195ac:	bne	195e8 <main@@Base+0x46cc>
   195b0:	ldr	r3, [fp, #-12]
   195b4:	cmp	r3, #1
   195b8:	beq	195d8 <main@@Base+0x46bc>
   195bc:	ldr	r3, [fp, #-12]
   195c0:	cmp	r3, #2
   195c4:	bne	195f0 <main@@Base+0x46d4>
   195c8:	ldr	r3, [fp, #-8]
   195cc:	sub	r3, r3, #1
   195d0:	str	r3, [fp, #-8]
   195d4:	b	195f4 <main@@Base+0x46d8>
   195d8:	ldr	r3, [fp, #-8]
   195dc:	sub	r3, r3, #2
   195e0:	str	r3, [fp, #-8]
   195e4:	b	195f4 <main@@Base+0x46d8>
   195e8:	nop	{0}
   195ec:	b	195f4 <main@@Base+0x46d8>
   195f0:	nop	{0}
   195f4:	ldr	r3, [fp, #-8]
   195f8:	mov	r0, r3
   195fc:	add	sp, fp, #0
   19600:	pop	{fp}		; (ldr fp, [sp], #4)
   19604:	bx	lr
   19608:	push	{fp}		; (str fp, [sp, #-4]!)
   1960c:	add	fp, sp, #0
   19610:	sub	sp, sp, #20
   19614:	str	r0, [fp, #-16]
   19618:	ldr	r3, [fp, #-16]
   1961c:	and	r3, r3, #3
   19620:	str	r3, [fp, #-8]
   19624:	ldr	r3, [fp, #-16]
   19628:	lsr	r2, r3, #2
   1962c:	mov	r3, r2
   19630:	lsl	r3, r3, #1
   19634:	add	r3, r3, r2
   19638:	str	r3, [fp, #-12]
   1963c:	ldr	r3, [fp, #-8]
   19640:	cmp	r3, #2
   19644:	beq	19660 <main@@Base+0x4744>
   19648:	ldr	r3, [fp, #-8]
   1964c:	cmp	r3, #3
   19650:	bne	1966c <main@@Base+0x4750>
   19654:	ldr	r3, [fp, #-12]
   19658:	add	r3, r3, #2
   1965c:	b	19670 <main@@Base+0x4754>
   19660:	ldr	r3, [fp, #-12]
   19664:	add	r3, r3, #1
   19668:	b	19670 <main@@Base+0x4754>
   1966c:	ldr	r3, [fp, #-12]
   19670:	mov	r0, r3
   19674:	add	sp, fp, #0
   19678:	pop	{fp}		; (ldr fp, [sp], #4)
   1967c:	bx	lr
   19680:	push	{fp}		; (str fp, [sp, #-4]!)
   19684:	add	fp, sp, #0
   19688:	sub	sp, sp, #52	; 0x34
   1968c:	str	r0, [fp, #-40]	; 0xffffffd8
   19690:	str	r1, [fp, #-44]	; 0xffffffd4
   19694:	str	r2, [fp, #-48]	; 0xffffffd0
   19698:	str	r3, [fp, #-52]	; 0xffffffcc
   1969c:	ldr	r3, [pc, #928]	; 19a44 <main@@Base+0x4b28>
   196a0:	add	r3, pc, r3
   196a4:	str	r3, [fp, #-20]	; 0xffffffec
   196a8:	ldr	r3, [pc, #920]	; 19a48 <main@@Base+0x4b2c>
   196ac:	add	r3, pc, r3
   196b0:	str	r3, [fp, #-24]	; 0xffffffe8
   196b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   196b8:	str	r3, [fp, #-28]	; 0xffffffe4
   196bc:	ldr	r3, [fp, #4]
   196c0:	and	r3, r3, #128	; 0x80
   196c4:	str	r3, [fp, #-32]	; 0xffffffe0
   196c8:	mov	r3, #0
   196cc:	str	r3, [fp, #-12]
   196d0:	mov	r3, #3
   196d4:	str	r3, [fp, #-16]
   196d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   196dc:	cmp	r3, #0
   196e0:	bne	196f0 <main@@Base+0x47d4>
   196e4:	mov	r3, #2
   196e8:	str	r3, [fp, #-16]
   196ec:	b	199e8 <main@@Base+0x4acc>
   196f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   196f4:	ldr	r3, [r3]
   196f8:	str	r3, [fp, #-12]
   196fc:	ldr	r3, [fp, #4]
   19700:	bic	r3, r3, #224	; 0xe0
   19704:	str	r3, [fp, #4]
   19708:	ldr	r3, [fp, #4]
   1970c:	cmp	r3, #0
   19710:	beq	19724 <main@@Base+0x4808>
   19714:	ldr	r3, [fp, #4]
   19718:	cmp	r3, #1
   1971c:	beq	19730 <main@@Base+0x4814>
   19720:	b	199e8 <main@@Base+0x4acc>
   19724:	ldr	r3, [fp, #-20]	; 0xffffffec
   19728:	str	r3, [fp, #-8]
   1972c:	b	1973c <main@@Base+0x4820>
   19730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19734:	str	r3, [fp, #-8]
   19738:	nop	{0}
   1973c:	mov	r3, #0
   19740:	str	r3, [fp, #-16]
   19744:	b	19848 <main@@Base+0x492c>
   19748:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1974c:	ldrb	r3, [r3]
   19750:	lsr	r3, r3, #2
   19754:	uxtb	r3, r3
   19758:	mov	r2, r3
   1975c:	ldr	r3, [fp, #-8]
   19760:	add	r3, r3, r2
   19764:	ldrb	r2, [r3]
   19768:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1976c:	strb	r2, [r3]
   19770:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19774:	ldrb	r3, [r3]
   19778:	lsl	r3, r3, #4
   1977c:	and	r3, r3, #48	; 0x30
   19780:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19784:	add	r2, r2, #1
   19788:	ldrb	r2, [r2]
   1978c:	lsr	r2, r2, #4
   19790:	uxtb	r2, r2
   19794:	orr	r3, r3, r2
   19798:	mov	r2, r3
   1979c:	ldr	r3, [fp, #-8]
   197a0:	add	r2, r3, r2
   197a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   197a8:	add	r3, r3, #1
   197ac:	ldrb	r2, [r2]
   197b0:	strb	r2, [r3]
   197b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   197b8:	add	r3, r3, #1
   197bc:	ldrb	r3, [r3]
   197c0:	lsl	r3, r3, #2
   197c4:	and	r3, r3, #60	; 0x3c
   197c8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   197cc:	add	r2, r2, #2
   197d0:	ldrb	r2, [r2]
   197d4:	lsr	r2, r2, #6
   197d8:	uxtb	r2, r2
   197dc:	orr	r3, r3, r2
   197e0:	mov	r2, r3
   197e4:	ldr	r3, [fp, #-8]
   197e8:	add	r2, r3, r2
   197ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   197f0:	add	r3, r3, #2
   197f4:	ldrb	r2, [r2]
   197f8:	strb	r2, [r3]
   197fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19800:	add	r3, r3, #2
   19804:	ldrb	r3, [r3]
   19808:	and	r3, r3, #63	; 0x3f
   1980c:	ldr	r2, [fp, #-8]
   19810:	add	r2, r2, r3
   19814:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19818:	add	r3, r3, #3
   1981c:	ldrb	r2, [r2]
   19820:	strb	r2, [r3]
   19824:	ldr	r3, [fp, #-12]
   19828:	sub	r3, r3, #3
   1982c:	str	r3, [fp, #-12]
   19830:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19834:	add	r3, r3, #4
   19838:	str	r3, [fp, #-40]	; 0xffffffd8
   1983c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19840:	add	r3, r3, #3
   19844:	str	r3, [fp, #-44]	; 0xffffffd4
   19848:	ldr	r3, [fp, #-12]
   1984c:	cmp	r3, #2
   19850:	bhi	19748 <main@@Base+0x482c>
   19854:	ldr	r3, [fp, #-12]
   19858:	cmp	r3, #1
   1985c:	beq	19934 <main@@Base+0x4a18>
   19860:	ldr	r3, [fp, #-12]
   19864:	cmp	r3, #2
   19868:	bne	199c8 <main@@Base+0x4aac>
   1986c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19870:	ldrb	r3, [r3]
   19874:	lsr	r3, r3, #2
   19878:	uxtb	r3, r3
   1987c:	mov	r2, r3
   19880:	ldr	r3, [fp, #-8]
   19884:	add	r3, r3, r2
   19888:	ldrb	r2, [r3]
   1988c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19890:	strb	r2, [r3]
   19894:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19898:	ldrb	r3, [r3]
   1989c:	lsl	r3, r3, #4
   198a0:	and	r3, r3, #48	; 0x30
   198a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   198a8:	add	r2, r2, #1
   198ac:	ldrb	r2, [r2]
   198b0:	lsr	r2, r2, #4
   198b4:	uxtb	r2, r2
   198b8:	orr	r3, r3, r2
   198bc:	mov	r2, r3
   198c0:	ldr	r3, [fp, #-8]
   198c4:	add	r2, r3, r2
   198c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   198cc:	add	r3, r3, #1
   198d0:	ldrb	r2, [r2]
   198d4:	strb	r2, [r3]
   198d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   198dc:	add	r3, r3, #1
   198e0:	ldrb	r3, [r3]
   198e4:	lsl	r3, r3, #2
   198e8:	and	r3, r3, #60	; 0x3c
   198ec:	ldr	r2, [fp, #-8]
   198f0:	add	r2, r2, r3
   198f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   198f8:	add	r3, r3, #2
   198fc:	ldrb	r2, [r2]
   19900:	strb	r2, [r3]
   19904:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19908:	add	r3, r3, #3
   1990c:	str	r3, [fp, #-40]	; 0xffffffd8
   19910:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19914:	cmp	r3, #0
   19918:	beq	199d4 <main@@Base+0x4ab8>
   1991c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19920:	add	r2, r3, #1
   19924:	str	r2, [fp, #-40]	; 0xffffffd8
   19928:	mov	r2, #61	; 0x3d
   1992c:	strb	r2, [r3]
   19930:	b	199d4 <main@@Base+0x4ab8>
   19934:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19938:	ldrb	r3, [r3]
   1993c:	lsr	r3, r3, #2
   19940:	uxtb	r3, r3
   19944:	mov	r2, r3
   19948:	ldr	r3, [fp, #-8]
   1994c:	add	r3, r3, r2
   19950:	ldrb	r2, [r3]
   19954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19958:	strb	r2, [r3]
   1995c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19960:	ldrb	r3, [r3]
   19964:	lsl	r3, r3, #4
   19968:	and	r3, r3, #48	; 0x30
   1996c:	ldr	r2, [fp, #-8]
   19970:	add	r2, r2, r3
   19974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19978:	add	r3, r3, #1
   1997c:	ldrb	r2, [r2]
   19980:	strb	r2, [r3]
   19984:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19988:	add	r3, r3, #2
   1998c:	str	r3, [fp, #-40]	; 0xffffffd8
   19990:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19994:	cmp	r3, #0
   19998:	beq	199dc <main@@Base+0x4ac0>
   1999c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   199a0:	add	r2, r3, #1
   199a4:	str	r2, [fp, #-40]	; 0xffffffd8
   199a8:	mov	r2, #61	; 0x3d
   199ac:	strb	r2, [r3]
   199b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   199b4:	add	r2, r3, #1
   199b8:	str	r2, [fp, #-40]	; 0xffffffd8
   199bc:	mov	r2, #61	; 0x3d
   199c0:	strb	r2, [r3]
   199c4:	b	199dc <main@@Base+0x4ac0>
   199c8:	mov	r3, #0
   199cc:	str	r3, [fp, #-32]	; 0xffffffe0
   199d0:	b	199e0 <main@@Base+0x4ac4>
   199d4:	nop	{0}
   199d8:	b	199e0 <main@@Base+0x4ac4>
   199dc:	nop	{0}
   199e0:	mov	r3, #0
   199e4:	str	r3, [fp, #-12]
   199e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   199ec:	cmp	r3, #0
   199f0:	beq	19a0c <main@@Base+0x4af0>
   199f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   199f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   199fc:	sub	r3, r2, r3
   19a00:	mov	r2, r3
   19a04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19a08:	str	r2, [r3]
   19a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19a10:	cmp	r3, #0
   19a14:	beq	19a30 <main@@Base+0x4b14>
   19a18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19a1c:	ldr	r2, [r3]
   19a20:	ldr	r3, [fp, #-12]
   19a24:	sub	r2, r2, r3
   19a28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19a2c:	str	r2, [r3]
   19a30:	ldr	r3, [fp, #-16]
   19a34:	mov	r0, r3
   19a38:	add	sp, fp, #0
   19a3c:	pop	{fp}		; (ldr fp, [sp], #4)
   19a40:	bx	lr
   19a44:	andeq	fp, r0, r8, ror #15
   19a48:	andeq	fp, r0, r0, lsr #16
   19a4c:	push	{fp}		; (str fp, [sp, #-4]!)
   19a50:	add	fp, sp, #0
   19a54:	sub	sp, sp, #60	; 0x3c
   19a58:	str	r0, [fp, #-48]	; 0xffffffd0
   19a5c:	str	r1, [fp, #-52]	; 0xffffffcc
   19a60:	str	r2, [fp, #-56]	; 0xffffffc8
   19a64:	str	r3, [fp, #-60]	; 0xffffffc4
   19a68:	mov	r3, #0
   19a6c:	str	r3, [fp, #-8]
   19a70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19a74:	str	r3, [fp, #-36]	; 0xffffffdc
   19a78:	mvn	r3, #0
   19a7c:	str	r3, [fp, #-20]	; 0xffffffec
   19a80:	mvn	r3, #0
   19a84:	str	r3, [fp, #-24]	; 0xffffffe8
   19a88:	ldr	r3, [pc, #1388]	; 19ffc <main@@Base+0x50e0>
   19a8c:	add	r3, pc, r3
   19a90:	str	r3, [fp, #-32]	; 0xffffffe0
   19a94:	ldr	r3, [fp, #4]
   19a98:	and	r3, r3, #32
   19a9c:	str	r3, [fp, #-40]	; 0xffffffd8
   19aa0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19aa4:	cmp	r3, #0
   19aa8:	beq	19ab8 <main@@Base+0x4b9c>
   19aac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19ab0:	ldr	r3, [r3]
   19ab4:	str	r3, [fp, #-24]	; 0xffffffe8
   19ab8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19abc:	str	r3, [fp, #-28]	; 0xffffffe4
   19ac0:	ldr	r3, [fp, #4]
   19ac4:	bic	r3, r3, #224	; 0xe0
   19ac8:	str	r3, [fp, #4]
   19acc:	ldr	r3, [fp, #4]
   19ad0:	cmp	r3, #0
   19ad4:	beq	19ae8 <main@@Base+0x4bcc>
   19ad8:	ldr	r3, [fp, #4]
   19adc:	cmp	r3, #1
   19ae0:	beq	19b10 <main@@Base+0x4bf4>
   19ae4:	b	19b38 <main@@Base+0x4c1c>
   19ae8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19aec:	cmp	r3, #0
   19af0:	beq	19b00 <main@@Base+0x4be4>
   19af4:	ldr	r3, [pc, #1284]	; 1a000 <main@@Base+0x50e4>
   19af8:	add	r3, pc, r3
   19afc:	b	19b08 <main@@Base+0x4bec>
   19b00:	ldr	r3, [pc, #1276]	; 1a004 <main@@Base+0x50e8>
   19b04:	add	r3, pc, r3
   19b08:	str	r3, [fp, #-32]	; 0xffffffe0
   19b0c:	b	19b44 <main@@Base+0x4c28>
   19b10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19b14:	cmp	r3, #0
   19b18:	beq	19b28 <main@@Base+0x4c0c>
   19b1c:	ldr	r3, [pc, #1252]	; 1a008 <main@@Base+0x50ec>
   19b20:	add	r3, pc, r3
   19b24:	b	19b30 <main@@Base+0x4c14>
   19b28:	ldr	r3, [pc, #1244]	; 1a00c <main@@Base+0x50f0>
   19b2c:	add	r3, pc, r3
   19b30:	str	r3, [fp, #-32]	; 0xffffffe0
   19b34:	b	19b44 <main@@Base+0x4c28>
   19b38:	mov	r3, #3
   19b3c:	str	r3, [fp, #-8]
   19b40:	b	19e30 <main@@Base+0x4f14>
   19b44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19b48:	cmp	r3, #0
   19b4c:	beq	19e20 <main@@Base+0x4f04>
   19b50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19b54:	ldr	r3, [r3]
   19b58:	cmp	r3, #0
   19b5c:	beq	19e20 <main@@Base+0x4f04>
   19b60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19b64:	ldr	r3, [r3]
   19b68:	str	r3, [fp, #-20]	; 0xffffffec
   19b6c:	b	19e20 <main@@Base+0x4f04>
   19b70:	mov	r3, #0
   19b74:	str	r3, [fp, #-12]
   19b78:	b	19d40 <main@@Base+0x4e24>
   19b7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b80:	ldr	r3, [fp, #-12]
   19b84:	cmp	r2, r3
   19b88:	bne	19ba8 <main@@Base+0x4c8c>
   19b8c:	ldr	r3, [fp, #-12]
   19b90:	str	r3, [fp, #-16]
   19b94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b98:	ldr	r3, [fp, #-12]
   19b9c:	sub	r3, r2, r3
   19ba0:	str	r3, [fp, #-24]	; 0xffffffe8
   19ba4:	b	19e80 <main@@Base+0x4f64>
   19ba8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19bac:	ldr	r3, [fp, #-12]
   19bb0:	add	r3, r2, r3
   19bb4:	ldrb	r3, [r3]
   19bb8:	mov	r2, r3
   19bbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19bc0:	add	r3, r3, r2
   19bc4:	ldrb	r1, [r3]
   19bc8:	sub	r2, fp, #44	; 0x2c
   19bcc:	ldr	r3, [fp, #-12]
   19bd0:	add	r3, r2, r3
   19bd4:	mov	r2, r1
   19bd8:	strb	r2, [r3]
   19bdc:	sub	r2, fp, #44	; 0x2c
   19be0:	ldr	r3, [fp, #-12]
   19be4:	add	r3, r2, r3
   19be8:	ldrb	r2, [r3]
   19bec:	ldr	r3, [pc, #1052]	; 1a010 <main@@Base+0x50f4>
   19bf0:	add	r3, pc, r3
   19bf4:	ldrb	r3, [r3]
   19bf8:	cmp	r2, r3
   19bfc:	bcc	19d34 <main@@Base+0x4e18>
   19c00:	sub	r2, fp, #44	; 0x2c
   19c04:	ldr	r3, [fp, #-12]
   19c08:	add	r3, r2, r3
   19c0c:	ldrb	r2, [r3]
   19c10:	ldr	r3, [pc, #1020]	; 1a014 <main@@Base+0x50f8>
   19c14:	add	r3, pc, r3
   19c18:	ldrb	r3, [r3]
   19c1c:	cmp	r2, r3
   19c20:	bne	19c4c <main@@Base+0x4d30>
   19c24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19c28:	add	r3, r3, #1
   19c2c:	str	r3, [fp, #-52]	; 0xffffffcc
   19c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c34:	sub	r3, r3, #1
   19c38:	str	r3, [fp, #-24]	; 0xffffffe8
   19c3c:	ldr	r3, [fp, #-12]
   19c40:	sub	r3, r3, #1
   19c44:	str	r3, [fp, #-12]
   19c48:	b	19d34 <main@@Base+0x4e18>
   19c4c:	ldr	r3, [fp, #-12]
   19c50:	str	r3, [fp, #-16]
   19c54:	sub	r2, fp, #44	; 0x2c
   19c58:	ldr	r3, [fp, #-12]
   19c5c:	add	r3, r2, r3
   19c60:	ldrb	r2, [r3]
   19c64:	ldr	r3, [pc, #940]	; 1a018 <main@@Base+0x50fc>
   19c68:	add	r3, pc, r3
   19c6c:	ldrb	r3, [r3]
   19c70:	cmp	r2, r3
   19c74:	bne	19d20 <main@@Base+0x4e04>
   19c78:	ldr	r3, [fp, #-12]
   19c7c:	add	r3, r3, #1
   19c80:	str	r3, [fp, #-12]
   19c84:	b	19cfc <main@@Base+0x4de0>
   19c88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19c8c:	ldr	r3, [fp, #-12]
   19c90:	add	r3, r2, r3
   19c94:	ldrb	r3, [r3]
   19c98:	mov	r2, r3
   19c9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ca0:	add	r3, r3, r2
   19ca4:	ldrb	r2, [r3]
   19ca8:	ldr	r3, [pc, #876]	; 1a01c <main@@Base+0x5100>
   19cac:	add	r3, pc, r3
   19cb0:	ldrb	r3, [r3]
   19cb4:	cmp	r2, r3
   19cb8:	beq	19cf0 <main@@Base+0x4dd4>
   19cbc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19cc0:	ldr	r3, [fp, #-12]
   19cc4:	add	r3, r2, r3
   19cc8:	ldrb	r3, [r3]
   19ccc:	mov	r2, r3
   19cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19cd4:	add	r3, r3, r2
   19cd8:	ldrb	r2, [r3]
   19cdc:	ldr	r3, [pc, #828]	; 1a020 <main@@Base+0x5104>
   19ce0:	add	r3, pc, r3
   19ce4:	ldrb	r3, [r3]
   19ce8:	cmp	r2, r3
   19cec:	bne	19d1c <main@@Base+0x4e00>
   19cf0:	ldr	r3, [fp, #-12]
   19cf4:	add	r3, r3, #1
   19cf8:	str	r3, [fp, #-12]
   19cfc:	ldr	r2, [fp, #-12]
   19d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19d04:	cmp	r2, r3
   19d08:	bcs	19d20 <main@@Base+0x4e04>
   19d0c:	ldr	r3, [fp, #-12]
   19d10:	cmp	r3, #7
   19d14:	bls	19c88 <main@@Base+0x4d6c>
   19d18:	b	19d20 <main@@Base+0x4e04>
   19d1c:	nop	{0}
   19d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d24:	ldr	r3, [fp, #-12]
   19d28:	sub	r3, r2, r3
   19d2c:	str	r3, [fp, #-24]	; 0xffffffe8
   19d30:	b	19e80 <main@@Base+0x4f64>
   19d34:	ldr	r3, [fp, #-12]
   19d38:	add	r3, r3, #1
   19d3c:	str	r3, [fp, #-12]
   19d40:	ldr	r3, [fp, #-12]
   19d44:	cmp	r3, #3
   19d48:	bls	19b7c <main@@Base+0x4c60>
   19d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19d50:	cmp	r3, #2
   19d54:	bls	19fcc <main@@Base+0x50b0>
   19d58:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   19d5c:	lsl	r3, r3, #2
   19d60:	sxtb	r2, r3
   19d64:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   19d68:	lsr	r3, r3, #4
   19d6c:	uxtb	r3, r3
   19d70:	sxtb	r3, r3
   19d74:	orr	r3, r2, r3
   19d78:	sxtb	r3, r3
   19d7c:	uxtb	r2, r3
   19d80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19d84:	strb	r2, [r3]
   19d88:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   19d8c:	lsl	r3, r3, #4
   19d90:	sxtb	r2, r3
   19d94:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   19d98:	lsr	r3, r3, #2
   19d9c:	uxtb	r3, r3
   19da0:	sxtb	r3, r3
   19da4:	orr	r3, r2, r3
   19da8:	sxtb	r2, r3
   19dac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19db0:	add	r3, r3, #1
   19db4:	uxtb	r2, r2
   19db8:	strb	r2, [r3]
   19dbc:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   19dc0:	lsl	r3, r3, #6
   19dc4:	sxtb	r2, r3
   19dc8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   19dcc:	sxtb	r3, r3
   19dd0:	orr	r3, r2, r3
   19dd4:	sxtb	r2, r3
   19dd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ddc:	add	r3, r3, #2
   19de0:	uxtb	r2, r2
   19de4:	strb	r2, [r3]
   19de8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19dec:	add	r3, r3, #3
   19df0:	str	r3, [fp, #-48]	; 0xffffffd0
   19df4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   19df8:	add	r3, r3, #4
   19dfc:	str	r3, [fp, #-52]	; 0xffffffcc
   19e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e04:	sub	r3, r3, #3
   19e08:	str	r3, [fp, #-20]	; 0xffffffec
   19e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e10:	sub	r3, r3, #4
   19e14:	str	r3, [fp, #-24]	; 0xffffffe8
   19e18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19e1c:	str	r3, [fp, #-28]	; 0xffffffe4
   19e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e24:	cmp	r3, #0
   19e28:	bne	19b70 <main@@Base+0x4c54>
   19e2c:	nop	{0}
   19e30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19e34:	cmp	r3, #0
   19e38:	beq	19e54 <main@@Base+0x4f38>
   19e3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   19e40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19e44:	sub	r3, r2, r3
   19e48:	mov	r2, r3
   19e4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19e50:	str	r2, [r3]
   19e54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e58:	cmp	r3, #0
   19e5c:	beq	19e78 <main@@Base+0x4f5c>
   19e60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e64:	ldr	r2, [r3]
   19e68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19e6c:	sub	r2, r2, r3
   19e70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19e74:	str	r2, [r3]
   19e78:	ldr	r3, [fp, #-8]
   19e7c:	b	19fec <main@@Base+0x50d0>
   19e80:	ldr	r3, [fp, #-16]
   19e84:	cmp	r3, #2
   19e88:	beq	19ea8 <main@@Base+0x4f8c>
   19e8c:	ldr	r3, [fp, #-16]
   19e90:	cmp	r3, #3
   19e94:	beq	19f08 <main@@Base+0x4fec>
   19e98:	ldr	r3, [fp, #-16]
   19e9c:	cmp	r3, #0
   19ea0:	bne	19f9c <main@@Base+0x5080>
   19ea4:	b	19fa8 <main@@Base+0x508c>
   19ea8:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   19eac:	lsl	r3, r3, #4
   19eb0:	uxtb	r3, r3
   19eb4:	cmp	r3, #0
   19eb8:	bne	19fb4 <main@@Base+0x5098>
   19ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   19ec0:	cmp	r3, #0
   19ec4:	beq	19fd4 <main@@Base+0x50b8>
   19ec8:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   19ecc:	lsl	r3, r3, #2
   19ed0:	sxtb	r2, r3
   19ed4:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   19ed8:	lsr	r3, r3, #4
   19edc:	uxtb	r3, r3
   19ee0:	sxtb	r3, r3
   19ee4:	orr	r3, r2, r3
   19ee8:	sxtb	r3, r3
   19eec:	uxtb	r2, r3
   19ef0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19ef4:	strb	r2, [r3]
   19ef8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19efc:	add	r3, r3, #1
   19f00:	str	r3, [fp, #-48]	; 0xffffffd0
   19f04:	b	19fa8 <main@@Base+0x508c>
   19f08:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   19f0c:	lsl	r3, r3, #6
   19f10:	uxtb	r3, r3
   19f14:	cmp	r3, #0
   19f18:	bne	19fbc <main@@Base+0x50a0>
   19f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19f20:	cmp	r3, #1
   19f24:	bls	19fdc <main@@Base+0x50c0>
   19f28:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   19f2c:	lsl	r3, r3, #2
   19f30:	sxtb	r2, r3
   19f34:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   19f38:	lsr	r3, r3, #4
   19f3c:	uxtb	r3, r3
   19f40:	sxtb	r3, r3
   19f44:	orr	r3, r2, r3
   19f48:	sxtb	r3, r3
   19f4c:	uxtb	r2, r3
   19f50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19f54:	strb	r2, [r3]
   19f58:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   19f5c:	lsl	r3, r3, #4
   19f60:	sxtb	r2, r3
   19f64:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   19f68:	lsr	r3, r3, #2
   19f6c:	uxtb	r3, r3
   19f70:	sxtb	r3, r3
   19f74:	orr	r3, r2, r3
   19f78:	sxtb	r2, r3
   19f7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19f80:	add	r3, r3, #1
   19f84:	uxtb	r2, r2
   19f88:	strb	r2, [r3]
   19f8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19f90:	add	r3, r3, #2
   19f94:	str	r3, [fp, #-48]	; 0xffffffd0
   19f98:	b	19fa8 <main@@Base+0x508c>
   19f9c:	mov	r3, #4
   19fa0:	str	r3, [fp, #-8]
   19fa4:	b	19e30 <main@@Base+0x4f14>
   19fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19fac:	str	r3, [fp, #-28]	; 0xffffffe4
   19fb0:	b	19e30 <main@@Base+0x4f14>
   19fb4:	nop	{0}
   19fb8:	b	19fc0 <main@@Base+0x50a4>
   19fbc:	nop	{0}
   19fc0:	mov	r3, #5
   19fc4:	str	r3, [fp, #-8]
   19fc8:	b	19e30 <main@@Base+0x4f14>
   19fcc:	nop	{0}
   19fd0:	b	19fe0 <main@@Base+0x50c4>
   19fd4:	nop	{0}
   19fd8:	b	19fe0 <main@@Base+0x50c4>
   19fdc:	nop	{0}
   19fe0:	mov	r3, #1
   19fe4:	str	r3, [fp, #-8]
   19fe8:	b	19e30 <main@@Base+0x4f14>
   19fec:	mov	r0, r3
   19ff0:	add	sp, fp, #0
   19ff4:	pop	{fp}		; (ldr fp, [sp], #4)
   19ff8:	bx	lr
   19ffc:	andeq	fp, r0, r0, asr #12
   1a000:	ldrdeq	fp, [r0], -r4
   1a004:	andeq	fp, r0, r8, asr #11
   1a008:	andeq	fp, r0, ip, lsr #15
   1a00c:	andeq	fp, r0, r0, lsr #17
   1a010:	ldrdeq	fp, [r0], -ip
   1a014:			; <UNDEFINED> instruction: 0x0000b8b9
   1a018:	andeq	fp, r0, r6, ror #16
   1a01c:	andeq	fp, r0, r2, lsr #16
   1a020:	andeq	fp, r0, sp, ror #15

0001a024 <flatcc_json_printer_error_string@@Base>:
   1a024:	push	{fp}		; (str fp, [sp, #-4]!)
   1a028:	add	fp, sp, #0
   1a02c:	sub	sp, sp, #12
   1a030:	str	r0, [fp, #-8]
   1a034:	ldr	r3, [fp, #-8]
   1a038:	cmp	r3, #3
   1a03c:	addls	pc, pc, r3, lsl #2
   1a040:	b	1a084 <flatcc_json_printer_error_string@@Base+0x60>
   1a044:	b	1a054 <flatcc_json_printer_error_string@@Base+0x30>
   1a048:	b	1a060 <flatcc_json_printer_error_string@@Base+0x3c>
   1a04c:	b	1a06c <flatcc_json_printer_error_string@@Base+0x48>
   1a050:	b	1a078 <flatcc_json_printer_error_string@@Base+0x54>
   1a054:	ldr	r3, [pc, #64]	; 1a09c <flatcc_json_printer_error_string@@Base+0x78>
   1a058:	add	r3, pc, r3
   1a05c:	b	1a08c <flatcc_json_printer_error_string@@Base+0x68>
   1a060:	ldr	r3, [pc, #56]	; 1a0a0 <flatcc_json_printer_error_string@@Base+0x7c>
   1a064:	add	r3, pc, r3
   1a068:	b	1a08c <flatcc_json_printer_error_string@@Base+0x68>
   1a06c:	ldr	r3, [pc, #48]	; 1a0a4 <flatcc_json_printer_error_string@@Base+0x80>
   1a070:	add	r3, pc, r3
   1a074:	b	1a08c <flatcc_json_printer_error_string@@Base+0x68>
   1a078:	ldr	r3, [pc, #40]	; 1a0a8 <flatcc_json_printer_error_string@@Base+0x84>
   1a07c:	add	r3, pc, r3
   1a080:	b	1a08c <flatcc_json_printer_error_string@@Base+0x68>
   1a084:	ldr	r3, [pc, #32]	; 1a0ac <flatcc_json_printer_error_string@@Base+0x88>
   1a088:	add	r3, pc, r3
   1a08c:	mov	r0, r3
   1a090:	add	sp, fp, #0
   1a094:	pop	{fp}		; (ldr fp, [sp], #4)
   1a098:	bx	lr
   1a09c:			; <UNDEFINED> instruction: 0x0000adb8
   1a0a0:	andeq	sl, r0, ip, lsr #29
   1a0a4:	andeq	sl, r0, ip, lsr #29
   1a0a8:			; <UNDEFINED> instruction: 0x0000aeb0
   1a0ac:			; <UNDEFINED> instruction: 0x0000aeb0
   1a0b0:	str	fp, [sp, #-8]!
   1a0b4:	str	lr, [sp, #4]
   1a0b8:	add	fp, sp, #4
   1a0bc:	sub	sp, sp, #8
   1a0c0:	str	r0, [fp, #-8]
   1a0c4:	ldr	r0, [fp, #-8]
   1a0c8:	bl	154c8 <main@@Base+0x5ac>
   1a0cc:	mov	r2, r0
   1a0d0:	ldr	r3, [fp, #-8]
   1a0d4:	add	r3, r3, r2
   1a0d8:	mov	r0, r3
   1a0dc:	sub	sp, fp, #4
   1a0e0:	ldr	fp, [sp]
   1a0e4:	add	sp, sp, #4
   1a0e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a0ec:	str	fp, [sp, #-8]!
   1a0f0:	str	lr, [sp, #4]
   1a0f4:	add	fp, sp, #4
   1a0f8:	sub	sp, sp, #8
   1a0fc:	str	r0, [fp, #-8]
   1a100:	str	r1, [fp, #-12]
   1a104:	ldr	r2, [fp, #-8]
   1a108:	ldr	r3, [fp, #-12]
   1a10c:	add	r3, r2, r3
   1a110:	mov	r0, r3
   1a114:	bl	1558c <main@@Base+0x670>
   1a118:	mov	r3, r0
   1a11c:	mov	r0, r3
   1a120:	sub	sp, fp, #4
   1a124:	ldr	fp, [sp]
   1a128:	add	sp, sp, #4
   1a12c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a130:	str	fp, [sp, #-8]!
   1a134:	str	lr, [sp, #4]
   1a138:	add	fp, sp, #4
   1a13c:	sub	sp, sp, #16
   1a140:	str	r0, [fp, #-16]
   1a144:	str	r1, [fp, #-20]	; 0xffffffec
   1a148:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a14c:	add	r3, r3, #2
   1a150:	lsl	r3, r3, #1
   1a154:	str	r3, [fp, #-8]
   1a158:	ldr	r3, [fp, #-16]
   1a15c:	ldr	r3, [r3, #8]
   1a160:	ldr	r2, [fp, #-8]
   1a164:	cmp	r2, r3
   1a168:	blt	1a174 <flatcc_json_printer_error_string@@Base+0x150>
   1a16c:	mov	r3, #0
   1a170:	b	1a1b8 <flatcc_json_printer_error_string@@Base+0x194>
   1a174:	ldr	r3, [fp, #-16]
   1a178:	ldr	r3, [r3, #4]
   1a17c:	ldr	r2, [fp, #-8]
   1a180:	mov	r1, r2
   1a184:	mov	r0, r3
   1a188:	bl	1a0ec <flatcc_json_printer_error_string@@Base+0xc8>
   1a18c:	mov	r3, r0
   1a190:	str	r3, [fp, #-8]
   1a194:	ldr	r3, [fp, #-8]
   1a198:	cmp	r3, #0
   1a19c:	bne	1a1a8 <flatcc_json_printer_error_string@@Base+0x184>
   1a1a0:	mov	r3, #0
   1a1a4:	b	1a1b8 <flatcc_json_printer_error_string@@Base+0x194>
   1a1a8:	ldr	r3, [fp, #-16]
   1a1ac:	ldr	r2, [r3]
   1a1b0:	ldr	r3, [fp, #-8]
   1a1b4:	add	r3, r2, r3
   1a1b8:	mov	r0, r3
   1a1bc:	sub	sp, fp, #4
   1a1c0:	ldr	fp, [sp]
   1a1c4:	add	sp, sp, #4
   1a1c8:	pop	{pc}		; (ldr pc, [sp], #4)

0001a1cc <flatcc_json_printer_fmt_float@@Base>:
   1a1cc:	str	fp, [sp, #-8]!
   1a1d0:	str	lr, [sp, #4]
   1a1d4:	add	fp, sp, #4
   1a1d8:	sub	sp, sp, #8
   1a1dc:	str	r0, [fp, #-8]
   1a1e0:	vstr	s0, [fp, #-12]
   1a1e4:	vldr	s15, [fp, #-12]
   1a1e8:	vcvt.f64.f32	d7, s15
   1a1ec:	ldr	r0, [fp, #-8]
   1a1f0:	vmov.f64	d0, d7
   1a1f4:	bl	18f48 <main@@Base+0x402c>
   1a1f8:	mov	r3, r0
   1a1fc:	mov	r0, r3
   1a200:	sub	sp, fp, #4
   1a204:	ldr	fp, [sp]
   1a208:	add	sp, sp, #4
   1a20c:	pop	{pc}		; (ldr pc, [sp], #4)

0001a210 <flatcc_json_printer_fmt_double@@Base>:
   1a210:	str	fp, [sp, #-8]!
   1a214:	str	lr, [sp, #4]
   1a218:	add	fp, sp, #4
   1a21c:	sub	sp, sp, #16
   1a220:	str	r0, [fp, #-8]
   1a224:	vstr	d0, [fp, #-20]	; 0xffffffec
   1a228:	ldr	r0, [fp, #-8]
   1a22c:	vldr	d0, [fp, #-20]	; 0xffffffec
   1a230:	bl	18f48 <main@@Base+0x402c>
   1a234:	mov	r3, r0
   1a238:	mov	r0, r3
   1a23c:	sub	sp, fp, #4
   1a240:	ldr	fp, [sp]
   1a244:	add	sp, sp, #4
   1a248:	pop	{pc}		; (ldr pc, [sp], #4)

0001a24c <flatcc_json_printer_fmt_bool@@Base>:
   1a24c:	str	fp, [sp, #-8]!
   1a250:	str	lr, [sp, #4]
   1a254:	add	fp, sp, #4
   1a258:	sub	sp, sp, #8
   1a25c:	str	r0, [fp, #-8]
   1a260:	str	r1, [fp, #-12]
   1a264:	ldr	r3, [fp, #-12]
   1a268:	cmp	r3, #0
   1a26c:	beq	1a290 <flatcc_json_printer_fmt_bool@@Base+0x44>
   1a270:	mov	r2, #4
   1a274:	ldr	r3, [pc, #68]	; 1a2c0 <flatcc_json_printer_fmt_bool@@Base+0x74>
   1a278:	add	r3, pc, r3
   1a27c:	mov	r1, r3
   1a280:	ldr	r0, [fp, #-8]
   1a284:	bl	12420 <memcpy@plt>
   1a288:	mov	r3, #4
   1a28c:	b	1a2ac <flatcc_json_printer_fmt_bool@@Base+0x60>
   1a290:	mov	r2, #5
   1a294:	ldr	r3, [pc, #40]	; 1a2c4 <flatcc_json_printer_fmt_bool@@Base+0x78>
   1a298:	add	r3, pc, r3
   1a29c:	mov	r1, r3
   1a2a0:	ldr	r0, [fp, #-8]
   1a2a4:	bl	12420 <memcpy@plt>
   1a2a8:	mov	r3, #5
   1a2ac:	mov	r0, r3
   1a2b0:	sub	sp, fp, #4
   1a2b4:	ldr	fp, [sp]
   1a2b8:	add	sp, sp, #4
   1a2bc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2c0:	andeq	sl, r0, r8, asr #25
   1a2c4:			; <UNDEFINED> instruction: 0x0000acb0
   1a2c8:	str	fp, [sp, #-8]!
   1a2cc:	str	lr, [sp, #4]
   1a2d0:	add	fp, sp, #4
   1a2d4:	sub	sp, sp, #24
   1a2d8:	str	r0, [fp, #-16]
   1a2dc:	str	r1, [fp, #-20]	; 0xffffffec
   1a2e0:	str	r2, [fp, #-24]	; 0xffffffe8
   1a2e4:	ldr	r3, [fp, #-16]
   1a2e8:	ldr	r2, [r3, #20]
   1a2ec:	ldr	r3, [fp, #-16]
   1a2f0:	ldr	r3, [r3, #16]
   1a2f4:	cmp	r2, r3
   1a2f8:	bcc	1a310 <flatcc_json_printer_fmt_bool@@Base+0xc4>
   1a2fc:	ldr	r3, [fp, #-16]
   1a300:	ldr	r3, [r3, #44]	; 0x2c
   1a304:	mov	r1, #0
   1a308:	ldr	r0, [fp, #-16]
   1a30c:	blx	r3
   1a310:	ldr	r3, [fp, #-16]
   1a314:	ldr	r2, [r3, #16]
   1a318:	ldr	r3, [fp, #-16]
   1a31c:	ldr	r3, [r3, #20]
   1a320:	sub	r3, r2, r3
   1a324:	str	r3, [fp, #-8]
   1a328:	b	1a3a8 <flatcc_json_printer_fmt_bool@@Base+0x15c>
   1a32c:	ldr	r3, [fp, #-16]
   1a330:	ldr	r3, [r3, #20]
   1a334:	ldr	r2, [fp, #-8]
   1a338:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a33c:	mov	r0, r3
   1a340:	bl	12420 <memcpy@plt>
   1a344:	ldr	r3, [fp, #-16]
   1a348:	ldr	r2, [r3, #20]
   1a34c:	ldr	r3, [fp, #-8]
   1a350:	add	r2, r2, r3
   1a354:	ldr	r3, [fp, #-16]
   1a358:	str	r2, [r3, #20]
   1a35c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a360:	ldr	r3, [fp, #-8]
   1a364:	add	r3, r2, r3
   1a368:	str	r3, [fp, #-20]	; 0xffffffec
   1a36c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a370:	ldr	r3, [fp, #-8]
   1a374:	sub	r3, r2, r3
   1a378:	str	r3, [fp, #-24]	; 0xffffffe8
   1a37c:	ldr	r3, [fp, #-16]
   1a380:	ldr	r3, [r3, #44]	; 0x2c
   1a384:	mov	r1, #0
   1a388:	ldr	r0, [fp, #-16]
   1a38c:	blx	r3
   1a390:	ldr	r3, [fp, #-16]
   1a394:	ldr	r2, [r3, #16]
   1a398:	ldr	r3, [fp, #-16]
   1a39c:	ldr	r3, [r3, #20]
   1a3a0:	sub	r3, r2, r3
   1a3a4:	str	r3, [fp, #-8]
   1a3a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a3ac:	ldr	r3, [fp, #-8]
   1a3b0:	cmp	r2, r3
   1a3b4:	bhi	1a32c <flatcc_json_printer_fmt_bool@@Base+0xe0>
   1a3b8:	ldr	r3, [fp, #-16]
   1a3bc:	ldr	r3, [r3, #20]
   1a3c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a3c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a3c8:	mov	r0, r3
   1a3cc:	bl	12420 <memcpy@plt>
   1a3d0:	ldr	r3, [fp, #-16]
   1a3d4:	ldr	r2, [r3, #20]
   1a3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3dc:	add	r2, r2, r3
   1a3e0:	ldr	r3, [fp, #-16]
   1a3e4:	str	r2, [r3, #20]
   1a3e8:	nop	{0}
   1a3ec:	sub	sp, fp, #4
   1a3f0:	ldr	fp, [sp]
   1a3f4:	add	sp, sp, #4
   1a3f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a3fc:	str	fp, [sp, #-8]!
   1a400:	str	lr, [sp, #4]
   1a404:	add	fp, sp, #4
   1a408:	sub	sp, sp, #16
   1a40c:	str	r0, [fp, #-8]
   1a410:	str	r1, [fp, #-12]
   1a414:	str	r2, [fp, #-16]
   1a418:	ldr	r3, [fp, #-8]
   1a41c:	ldr	r2, [r3, #20]
   1a420:	ldr	r3, [fp, #-16]
   1a424:	add	r2, r2, r3
   1a428:	ldr	r3, [fp, #-8]
   1a42c:	ldr	r3, [r3, #16]
   1a430:	cmp	r2, r3
   1a434:	bcc	1a44c <flatcc_json_printer_fmt_bool@@Base+0x200>
   1a438:	ldr	r2, [fp, #-16]
   1a43c:	ldr	r1, [fp, #-12]
   1a440:	ldr	r0, [fp, #-8]
   1a444:	bl	1a2c8 <flatcc_json_printer_fmt_bool@@Base+0x7c>
   1a448:	b	1a47c <flatcc_json_printer_fmt_bool@@Base+0x230>
   1a44c:	ldr	r3, [fp, #-8]
   1a450:	ldr	r3, [r3, #20]
   1a454:	ldr	r2, [fp, #-16]
   1a458:	ldr	r1, [fp, #-12]
   1a45c:	mov	r0, r3
   1a460:	bl	12420 <memcpy@plt>
   1a464:	ldr	r3, [fp, #-8]
   1a468:	ldr	r2, [r3, #20]
   1a46c:	ldr	r3, [fp, #-16]
   1a470:	add	r2, r2, r3
   1a474:	ldr	r3, [fp, #-8]
   1a478:	str	r2, [r3, #20]
   1a47c:	nop	{0}
   1a480:	sub	sp, fp, #4
   1a484:	ldr	fp, [sp]
   1a488:	add	sp, sp, #4
   1a48c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a490:	str	fp, [sp, #-8]!
   1a494:	str	lr, [sp, #4]
   1a498:	add	fp, sp, #4
   1a49c:	sub	sp, sp, #32
   1a4a0:	str	r0, [fp, #-24]	; 0xffffffe8
   1a4a4:	str	r1, [fp, #-28]	; 0xffffffe4
   1a4a8:	str	r2, [fp, #-32]	; 0xffffffe0
   1a4ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a4b0:	str	r3, [fp, #-8]
   1a4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a4b8:	ldr	r3, [r3, #20]
   1a4bc:	add	r1, r3, #1
   1a4c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a4c4:	str	r1, [r2, #20]
   1a4c8:	mov	r2, #34	; 0x22
   1a4cc:	strb	r2, [r3]
   1a4d0:	ldr	r3, [fp, #-8]
   1a4d4:	ldrb	r3, [r3]
   1a4d8:	strb	r3, [fp, #-9]
   1a4dc:	b	1a4f8 <flatcc_json_printer_fmt_bool@@Base+0x2ac>
   1a4e0:	ldr	r3, [fp, #-8]
   1a4e4:	add	r3, r3, #1
   1a4e8:	str	r3, [fp, #-8]
   1a4ec:	ldr	r3, [fp, #-8]
   1a4f0:	ldrb	r3, [r3]
   1a4f4:	strb	r3, [fp, #-9]
   1a4f8:	ldrb	r3, [fp, #-9]
   1a4fc:	cmp	r3, #31
   1a500:	bls	1a51c <flatcc_json_printer_fmt_bool@@Base+0x2d0>
   1a504:	ldrb	r3, [fp, #-9]
   1a508:	cmp	r3, #34	; 0x22
   1a50c:	beq	1a51c <flatcc_json_printer_fmt_bool@@Base+0x2d0>
   1a510:	ldrb	r3, [fp, #-9]
   1a514:	cmp	r3, #92	; 0x5c
   1a518:	bne	1a4e0 <flatcc_json_printer_fmt_bool@@Base+0x294>
   1a51c:	ldr	r2, [fp, #-8]
   1a520:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a524:	sub	r3, r2, r3
   1a528:	str	r3, [fp, #-16]
   1a52c:	ldr	r2, [fp, #-16]
   1a530:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a538:	bl	1a3fc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   1a53c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a540:	ldr	r3, [fp, #-16]
   1a544:	sub	r3, r2, r3
   1a548:	str	r3, [fp, #-32]	; 0xffffffe0
   1a54c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a550:	cmp	r3, #0
   1a554:	beq	1a7c8 <flatcc_json_printer_fmt_bool@@Base+0x57c>
   1a558:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a55c:	ldr	r3, [fp, #-16]
   1a560:	add	r3, r2, r3
   1a564:	str	r3, [fp, #-28]	; 0xffffffe4
   1a568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a56c:	ldr	r3, [r3, #20]
   1a570:	add	r1, r3, #1
   1a574:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a578:	str	r1, [r2, #20]
   1a57c:	mov	r2, #92	; 0x5c
   1a580:	strb	r2, [r3]
   1a584:	ldrb	r3, [fp, #-9]
   1a588:	cmp	r3, #12
   1a58c:	beq	1a630 <flatcc_json_printer_fmt_bool@@Base+0x3e4>
   1a590:	cmp	r3, #12
   1a594:	bgt	1a5b4 <flatcc_json_printer_fmt_bool@@Base+0x368>
   1a598:	cmp	r3, #9
   1a59c:	beq	1a610 <flatcc_json_printer_fmt_bool@@Base+0x3c4>
   1a5a0:	cmp	r3, #10
   1a5a4:	beq	1a670 <flatcc_json_printer_fmt_bool@@Base+0x424>
   1a5a8:	cmp	r3, #8
   1a5ac:	beq	1a690 <flatcc_json_printer_fmt_bool@@Base+0x444>
   1a5b0:	b	1a6b0 <flatcc_json_printer_fmt_bool@@Base+0x464>
   1a5b4:	cmp	r3, #34	; 0x22
   1a5b8:	beq	1a5d0 <flatcc_json_printer_fmt_bool@@Base+0x384>
   1a5bc:	cmp	r3, #92	; 0x5c
   1a5c0:	beq	1a5f0 <flatcc_json_printer_fmt_bool@@Base+0x3a4>
   1a5c4:	cmp	r3, #13
   1a5c8:	beq	1a650 <flatcc_json_printer_fmt_bool@@Base+0x404>
   1a5cc:	b	1a6b0 <flatcc_json_printer_fmt_bool@@Base+0x464>
   1a5d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5d4:	ldr	r3, [r3, #20]
   1a5d8:	add	r1, r3, #1
   1a5dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a5e0:	str	r1, [r2, #20]
   1a5e4:	mov	r2, #34	; 0x22
   1a5e8:	strb	r2, [r3]
   1a5ec:	b	1a7a0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   1a5f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a5f4:	ldr	r3, [r3, #20]
   1a5f8:	add	r1, r3, #1
   1a5fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a600:	str	r1, [r2, #20]
   1a604:	mov	r2, #92	; 0x5c
   1a608:	strb	r2, [r3]
   1a60c:	b	1a7a0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   1a610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a614:	ldr	r3, [r3, #20]
   1a618:	add	r1, r3, #1
   1a61c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a620:	str	r1, [r2, #20]
   1a624:	mov	r2, #116	; 0x74
   1a628:	strb	r2, [r3]
   1a62c:	b	1a7a0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   1a630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a634:	ldr	r3, [r3, #20]
   1a638:	add	r1, r3, #1
   1a63c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a640:	str	r1, [r2, #20]
   1a644:	mov	r2, #102	; 0x66
   1a648:	strb	r2, [r3]
   1a64c:	b	1a7a0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   1a650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a654:	ldr	r3, [r3, #20]
   1a658:	add	r1, r3, #1
   1a65c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a660:	str	r1, [r2, #20]
   1a664:	mov	r2, #114	; 0x72
   1a668:	strb	r2, [r3]
   1a66c:	b	1a7a0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   1a670:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a674:	ldr	r3, [r3, #20]
   1a678:	add	r1, r3, #1
   1a67c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a680:	str	r1, [r2, #20]
   1a684:	mov	r2, #110	; 0x6e
   1a688:	strb	r2, [r3]
   1a68c:	b	1a7a0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   1a690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a694:	ldr	r3, [r3, #20]
   1a698:	add	r1, r3, #1
   1a69c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6a0:	str	r1, [r2, #20]
   1a6a4:	mov	r2, #98	; 0x62
   1a6a8:	strb	r2, [r3]
   1a6ac:	b	1a7a0 <flatcc_json_printer_fmt_bool@@Base+0x554>
   1a6b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6b4:	ldr	r3, [r3, #20]
   1a6b8:	add	r1, r3, #1
   1a6bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6c0:	str	r1, [r2, #20]
   1a6c4:	mov	r2, #117	; 0x75
   1a6c8:	strb	r2, [r3]
   1a6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6d0:	ldr	r3, [r3, #20]
   1a6d4:	add	r1, r3, #1
   1a6d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6dc:	str	r1, [r2, #20]
   1a6e0:	mov	r2, #48	; 0x30
   1a6e4:	strb	r2, [r3]
   1a6e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6ec:	ldr	r3, [r3, #20]
   1a6f0:	add	r1, r3, #1
   1a6f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a6f8:	str	r1, [r2, #20]
   1a6fc:	mov	r2, #48	; 0x30
   1a700:	strb	r2, [r3]
   1a704:	ldrb	r3, [fp, #-9]
   1a708:	lsr	r3, r3, #4
   1a70c:	strb	r3, [fp, #-17]	; 0xffffffef
   1a710:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1a714:	cmp	r3, #9
   1a718:	bhi	1a724 <flatcc_json_printer_fmt_bool@@Base+0x4d8>
   1a71c:	mov	r2, #48	; 0x30
   1a720:	b	1a728 <flatcc_json_printer_fmt_bool@@Base+0x4dc>
   1a724:	mov	r2, #87	; 0x57
   1a728:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1a72c:	add	r3, r2, r3
   1a730:	strb	r3, [fp, #-17]	; 0xffffffef
   1a734:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a738:	ldr	r3, [r3, #20]
   1a73c:	add	r1, r3, #1
   1a740:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a744:	str	r1, [r2, #20]
   1a748:	ldrb	r2, [fp, #-17]	; 0xffffffef
   1a74c:	strb	r2, [r3]
   1a750:	ldrb	r3, [fp, #-9]
   1a754:	and	r3, r3, #15
   1a758:	strb	r3, [fp, #-17]	; 0xffffffef
   1a75c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1a760:	cmp	r3, #9
   1a764:	bhi	1a770 <flatcc_json_printer_fmt_bool@@Base+0x524>
   1a768:	mov	r2, #48	; 0x30
   1a76c:	b	1a774 <flatcc_json_printer_fmt_bool@@Base+0x528>
   1a770:	mov	r2, #87	; 0x57
   1a774:	ldrb	r3, [fp, #-17]	; 0xffffffef
   1a778:	add	r3, r2, r3
   1a77c:	strb	r3, [fp, #-17]	; 0xffffffef
   1a780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a784:	ldr	r3, [r3, #20]
   1a788:	add	r1, r3, #1
   1a78c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a790:	str	r1, [r2, #20]
   1a794:	ldrb	r2, [fp, #-17]	; 0xffffffef
   1a798:	strb	r2, [r3]
   1a79c:	nop	{0}
   1a7a0:	ldr	r3, [fp, #-8]
   1a7a4:	add	r3, r3, #1
   1a7a8:	str	r3, [fp, #-8]
   1a7ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a7b0:	sub	r3, r3, #1
   1a7b4:	str	r3, [fp, #-32]	; 0xffffffe0
   1a7b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a7bc:	add	r3, r3, #1
   1a7c0:	str	r3, [fp, #-28]	; 0xffffffe4
   1a7c4:	b	1a4d0 <flatcc_json_printer_fmt_bool@@Base+0x284>
   1a7c8:	nop	{0}
   1a7cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7d0:	ldr	r3, [r3, #20]
   1a7d4:	add	r1, r3, #1
   1a7d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a7dc:	str	r1, [r2, #20]
   1a7e0:	mov	r2, #34	; 0x22
   1a7e4:	strb	r2, [r3]
   1a7e8:	nop	{0}
   1a7ec:	sub	sp, fp, #4
   1a7f0:	ldr	fp, [sp]
   1a7f4:	add	sp, sp, #4
   1a7f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a7fc:	str	fp, [sp, #-8]!
   1a800:	str	lr, [sp, #4]
   1a804:	add	fp, sp, #4
   1a808:	sub	sp, sp, #56	; 0x38
   1a80c:	str	r0, [fp, #-40]	; 0xffffffd8
   1a810:	str	r1, [fp, #-44]	; 0xffffffd4
   1a814:	str	r2, [fp, #-48]	; 0xffffffd0
   1a818:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a81c:	bic	r3, r3, #128	; 0x80
   1a820:	str	r3, [fp, #-16]
   1a824:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a828:	bl	154c8 <main@@Base+0x5ac>
   1a82c:	mov	r3, r0
   1a830:	str	r3, [fp, #-28]	; 0xffffffe4
   1a834:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a838:	add	r3, r3, #4
   1a83c:	str	r3, [fp, #-12]
   1a840:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a844:	ldr	r3, [r3, #20]
   1a848:	add	r1, r3, #1
   1a84c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a850:	str	r1, [r2, #20]
   1a854:	mov	r2, #34	; 0x22
   1a858:	strb	r2, [r3]
   1a85c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a860:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a864:	mov	r0, r3
   1a868:	bl	19538 <main@@Base+0x461c>
   1a86c:	str	r0, [fp, #-8]
   1a870:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a874:	ldr	r2, [r3, #20]
   1a878:	ldr	r3, [fp, #-8]
   1a87c:	add	r2, r2, r3
   1a880:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a884:	ldr	r3, [r3, #16]
   1a888:	cmp	r2, r3
   1a88c:	bcc	1a9a4 <flatcc_json_printer_fmt_bool@@Base+0x758>
   1a890:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a894:	ldr	r3, [r3, #44]	; 0x2c
   1a898:	mov	r1, #0
   1a89c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a8a0:	blx	r3
   1a8a4:	b	1a9a4 <flatcc_json_printer_fmt_bool@@Base+0x758>
   1a8a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a8ac:	ldr	r2, [r3, #16]
   1a8b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a8b4:	ldr	r3, [r3, #20]
   1a8b8:	sub	r3, r2, r3
   1a8bc:	bic	r3, r3, #3
   1a8c0:	str	r3, [fp, #-20]	; 0xffffffec
   1a8c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a8c8:	mov	r3, r2
   1a8cc:	lsl	r3, r3, #1
   1a8d0:	add	r3, r3, r2
   1a8d4:	lsr	r3, r3, #2
   1a8d8:	str	r3, [fp, #-24]	; 0xffffffe8
   1a8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8e0:	cmp	r3, #0
   1a8e4:	bne	1a908 <flatcc_json_printer_fmt_bool@@Base+0x6bc>
   1a8e8:	ldr	r3, [pc, #320]	; 1aa30 <flatcc_json_printer_fmt_bool@@Base+0x7e4>
   1a8ec:	add	r3, pc, r3
   1a8f0:	movw	r2, #277	; 0x115
   1a8f4:	ldr	r1, [pc, #312]	; 1aa34 <flatcc_json_printer_fmt_bool@@Base+0x7e8>
   1a8f8:	add	r1, pc, r1
   1a8fc:	ldr	r0, [pc, #308]	; 1aa38 <flatcc_json_printer_fmt_bool@@Base+0x7ec>
   1a900:	add	r0, pc, r0
   1a904:	bl	12504 <__assert_fail@plt>
   1a908:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a90c:	mov	r3, r2
   1a910:	lsl	r3, r3, #1
   1a914:	add	r3, r3, r2
   1a918:	lsr	r3, r3, #2
   1a91c:	str	r3, [fp, #-32]	; 0xffffffe0
   1a920:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a924:	ldr	r0, [r3, #20]
   1a928:	sub	r2, fp, #32
   1a92c:	ldr	r3, [fp, #-16]
   1a930:	str	r3, [sp]
   1a934:	mov	r3, r2
   1a938:	mov	r2, #0
   1a93c:	ldr	r1, [fp, #-12]
   1a940:	bl	19680 <main@@Base+0x4764>
   1a944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a948:	ldr	r2, [r3, #20]
   1a94c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a950:	add	r2, r2, r3
   1a954:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a958:	str	r2, [r3, #20]
   1a95c:	ldr	r2, [fp, #-12]
   1a960:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a964:	add	r3, r2, r3
   1a968:	str	r3, [fp, #-12]
   1a96c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a970:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a974:	sub	r3, r2, r3
   1a978:	str	r3, [fp, #-28]	; 0xffffffe4
   1a97c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a980:	ldr	r3, [r3, #44]	; 0x2c
   1a984:	mov	r1, #0
   1a988:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a98c:	blx	r3
   1a990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a994:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1a998:	mov	r0, r3
   1a99c:	bl	19538 <main@@Base+0x461c>
   1a9a0:	str	r0, [fp, #-8]
   1a9a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9a8:	ldr	r2, [r3, #20]
   1a9ac:	ldr	r3, [fp, #-8]
   1a9b0:	add	r2, r2, r3
   1a9b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9b8:	ldr	r3, [r3, #16]
   1a9bc:	cmp	r2, r3
   1a9c0:	bhi	1a8a8 <flatcc_json_printer_fmt_bool@@Base+0x65c>
   1a9c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9c8:	ldr	r0, [r3, #20]
   1a9cc:	sub	r2, fp, #28
   1a9d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a9d4:	str	r3, [sp]
   1a9d8:	mov	r3, r2
   1a9dc:	mov	r2, #0
   1a9e0:	ldr	r1, [fp, #-12]
   1a9e4:	bl	19680 <main@@Base+0x4764>
   1a9e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9ec:	ldr	r2, [r3, #20]
   1a9f0:	ldr	r3, [fp, #-8]
   1a9f4:	add	r2, r2, r3
   1a9f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a9fc:	str	r2, [r3, #20]
   1aa00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aa04:	ldr	r3, [r3, #20]
   1aa08:	add	r1, r3, #1
   1aa0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aa10:	str	r1, [r2, #20]
   1aa14:	mov	r2, #34	; 0x22
   1aa18:	strb	r2, [r3]
   1aa1c:	nop	{0}
   1aa20:	sub	sp, fp, #4
   1aa24:	ldr	fp, [sp]
   1aa28:	add	sp, sp, #4
   1aa2c:	pop	{pc}		; (ldr pc, [sp], #4)
   1aa30:	andeq	sl, r0, r4, ror #23
   1aa34:	andeq	sl, r0, r8, asr r6
   1aa38:			; <UNDEFINED> instruction: 0x0000a6b4
   1aa3c:	str	fp, [sp, #-8]!
   1aa40:	str	lr, [sp, #4]
   1aa44:	add	fp, sp, #4
   1aa48:	sub	sp, sp, #16
   1aa4c:	str	r0, [fp, #-16]
   1aa50:	str	r1, [fp, #-20]	; 0xffffffec
   1aa54:	ldr	r3, [fp, #-16]
   1aa58:	ldr	r2, [r3, #20]
   1aa5c:	ldr	r3, [fp, #-16]
   1aa60:	ldr	r3, [r3, #16]
   1aa64:	cmp	r2, r3
   1aa68:	bcc	1aa80 <flatcc_json_printer_fmt_bool@@Base+0x834>
   1aa6c:	ldr	r3, [fp, #-16]
   1aa70:	ldr	r3, [r3, #44]	; 0x2c
   1aa74:	mov	r1, #0
   1aa78:	ldr	r0, [fp, #-16]
   1aa7c:	blx	r3
   1aa80:	ldr	r3, [fp, #-16]
   1aa84:	ldr	r2, [r3, #16]
   1aa88:	ldr	r3, [fp, #-16]
   1aa8c:	ldr	r3, [r3, #20]
   1aa90:	sub	r3, r2, r3
   1aa94:	str	r3, [fp, #-8]
   1aa98:	b	1ab08 <flatcc_json_printer_fmt_bool@@Base+0x8bc>
   1aa9c:	ldr	r3, [fp, #-16]
   1aaa0:	ldr	r3, [r3, #20]
   1aaa4:	ldr	r2, [fp, #-8]
   1aaa8:	mov	r1, #32
   1aaac:	mov	r0, r3
   1aab0:	bl	124bc <memset@plt>
   1aab4:	ldr	r3, [fp, #-16]
   1aab8:	ldr	r2, [r3, #20]
   1aabc:	ldr	r3, [fp, #-8]
   1aac0:	add	r2, r2, r3
   1aac4:	ldr	r3, [fp, #-16]
   1aac8:	str	r2, [r3, #20]
   1aacc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1aad0:	ldr	r3, [fp, #-8]
   1aad4:	sub	r3, r2, r3
   1aad8:	str	r3, [fp, #-20]	; 0xffffffec
   1aadc:	ldr	r3, [fp, #-16]
   1aae0:	ldr	r3, [r3, #44]	; 0x2c
   1aae4:	mov	r1, #0
   1aae8:	ldr	r0, [fp, #-16]
   1aaec:	blx	r3
   1aaf0:	ldr	r3, [fp, #-16]
   1aaf4:	ldr	r2, [r3, #16]
   1aaf8:	ldr	r3, [fp, #-16]
   1aafc:	ldr	r3, [r3, #20]
   1ab00:	sub	r3, r2, r3
   1ab04:	str	r3, [fp, #-8]
   1ab08:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ab0c:	ldr	r3, [fp, #-8]
   1ab10:	cmp	r2, r3
   1ab14:	bhi	1aa9c <flatcc_json_printer_fmt_bool@@Base+0x850>
   1ab18:	ldr	r3, [fp, #-16]
   1ab1c:	ldr	r3, [r3, #20]
   1ab20:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ab24:	mov	r1, #32
   1ab28:	mov	r0, r3
   1ab2c:	bl	124bc <memset@plt>
   1ab30:	ldr	r3, [fp, #-16]
   1ab34:	ldr	r2, [r3, #20]
   1ab38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab3c:	add	r2, r2, r3
   1ab40:	ldr	r3, [fp, #-16]
   1ab44:	str	r2, [r3, #20]
   1ab48:	nop	{0}
   1ab4c:	sub	sp, fp, #4
   1ab50:	ldr	fp, [sp]
   1ab54:	add	sp, sp, #4
   1ab58:	pop	{pc}		; (ldr pc, [sp], #4)
   1ab5c:	str	fp, [sp, #-8]!
   1ab60:	str	lr, [sp, #4]
   1ab64:	add	fp, sp, #4
   1ab68:	sub	sp, sp, #16
   1ab6c:	str	r0, [fp, #-16]
   1ab70:	ldr	r3, [fp, #-16]
   1ab74:	ldr	r3, [r3, #32]
   1ab78:	ldr	r2, [fp, #-16]
   1ab7c:	ldrb	r2, [r2, #25]
   1ab80:	mul	r3, r2, r3
   1ab84:	str	r3, [fp, #-8]
   1ab88:	ldr	r3, [fp, #-16]
   1ab8c:	ldr	r2, [r3, #20]
   1ab90:	ldr	r3, [fp, #-8]
   1ab94:	add	r2, r2, r3
   1ab98:	ldr	r3, [fp, #-16]
   1ab9c:	ldr	r3, [r3, #16]
   1aba0:	cmp	r2, r3
   1aba4:	bls	1abb8 <flatcc_json_printer_fmt_bool@@Base+0x96c>
   1aba8:	ldr	r1, [fp, #-8]
   1abac:	ldr	r0, [fp, #-16]
   1abb0:	bl	1aa3c <flatcc_json_printer_fmt_bool@@Base+0x7f0>
   1abb4:	b	1abe8 <flatcc_json_printer_fmt_bool@@Base+0x99c>
   1abb8:	ldr	r3, [fp, #-16]
   1abbc:	ldr	r3, [r3, #20]
   1abc0:	ldr	r2, [fp, #-8]
   1abc4:	mov	r1, #32
   1abc8:	mov	r0, r3
   1abcc:	bl	124bc <memset@plt>
   1abd0:	ldr	r3, [fp, #-16]
   1abd4:	ldr	r2, [r3, #20]
   1abd8:	ldr	r3, [fp, #-8]
   1abdc:	add	r2, r2, r3
   1abe0:	ldr	r3, [fp, #-16]
   1abe4:	str	r2, [r3, #20]
   1abe8:	nop	{0}
   1abec:	sub	sp, fp, #4
   1abf0:	ldr	fp, [sp]
   1abf4:	add	sp, sp, #4
   1abf8:	pop	{pc}		; (ldr pc, [sp], #4)

0001abfc <flatcc_json_printer_string@@Base>:
   1abfc:	str	fp, [sp, #-8]!
   1ac00:	str	lr, [sp, #4]
   1ac04:	add	fp, sp, #4
   1ac08:	sub	sp, sp, #16
   1ac0c:	str	r0, [fp, #-8]
   1ac10:	str	r1, [fp, #-12]
   1ac14:	str	r2, [fp, #-16]
   1ac18:	ldr	r3, [fp, #-16]
   1ac1c:	mov	r2, r3
   1ac20:	ldr	r1, [fp, #-12]
   1ac24:	ldr	r0, [fp, #-8]
   1ac28:	bl	1a490 <flatcc_json_printer_fmt_bool@@Base+0x244>
   1ac2c:	nop	{0}
   1ac30:	sub	sp, fp, #4
   1ac34:	ldr	fp, [sp]
   1ac38:	add	sp, sp, #4
   1ac3c:	pop	{pc}		; (ldr pc, [sp], #4)

0001ac40 <flatcc_json_printer_write@@Base>:
   1ac40:	str	fp, [sp, #-8]!
   1ac44:	str	lr, [sp, #4]
   1ac48:	add	fp, sp, #4
   1ac4c:	sub	sp, sp, #16
   1ac50:	str	r0, [fp, #-8]
   1ac54:	str	r1, [fp, #-12]
   1ac58:	str	r2, [fp, #-16]
   1ac5c:	ldr	r3, [fp, #-16]
   1ac60:	mov	r2, r3
   1ac64:	ldr	r1, [fp, #-12]
   1ac68:	ldr	r0, [fp, #-8]
   1ac6c:	bl	1a3fc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   1ac70:	nop	{0}
   1ac74:	sub	sp, fp, #4
   1ac78:	ldr	fp, [sp]
   1ac7c:	add	sp, sp, #4
   1ac80:	pop	{pc}		; (ldr pc, [sp], #4)

0001ac84 <flatcc_json_printer_nl@@Base>:
   1ac84:	str	fp, [sp, #-8]!
   1ac88:	str	lr, [sp, #4]
   1ac8c:	add	fp, sp, #4
   1ac90:	sub	sp, sp, #8
   1ac94:	str	r0, [fp, #-8]
   1ac98:	ldr	r3, [fp, #-8]
   1ac9c:	ldr	r3, [r3, #20]
   1aca0:	add	r1, r3, #1
   1aca4:	ldr	r2, [fp, #-8]
   1aca8:	str	r1, [r2, #20]
   1acac:	mov	r2, #10
   1acb0:	strb	r2, [r3]
   1acb4:	ldr	r0, [fp, #-8]
   1acb8:	bl	15718 <main@@Base+0x7fc>
   1acbc:	nop	{0}
   1acc0:	sub	sp, fp, #4
   1acc4:	ldr	fp, [sp]
   1acc8:	add	sp, sp, #4
   1accc:	pop	{pc}		; (ldr pc, [sp], #4)

0001acd0 <flatcc_json_printer_char@@Base>:
   1acd0:	push	{fp}		; (str fp, [sp, #-4]!)
   1acd4:	add	fp, sp, #0
   1acd8:	sub	sp, sp, #12
   1acdc:	str	r0, [fp, #-8]
   1ace0:	mov	r3, r1
   1ace4:	strb	r3, [fp, #-9]
   1ace8:	ldr	r3, [fp, #-8]
   1acec:	ldr	r3, [r3, #20]
   1acf0:	add	r1, r3, #1
   1acf4:	ldr	r2, [fp, #-8]
   1acf8:	str	r1, [r2, #20]
   1acfc:	ldrb	r2, [fp, #-9]
   1ad00:	strb	r2, [r3]
   1ad04:	nop	{0}
   1ad08:	add	sp, fp, #0
   1ad0c:	pop	{fp}		; (ldr fp, [sp], #4)
   1ad10:	bx	lr

0001ad14 <flatcc_json_printer_indent@@Base>:
   1ad14:	str	fp, [sp, #-8]!
   1ad18:	str	lr, [sp, #4]
   1ad1c:	add	fp, sp, #4
   1ad20:	sub	sp, sp, #8
   1ad24:	str	r0, [fp, #-8]
   1ad28:	ldr	r0, [fp, #-8]
   1ad2c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1ad30:	nop	{0}
   1ad34:	sub	sp, fp, #4
   1ad38:	ldr	fp, [sp]
   1ad3c:	add	sp, sp, #4
   1ad40:	pop	{pc}		; (ldr pc, [sp], #4)

0001ad44 <flatcc_json_printer_add_level@@Base>:
   1ad44:	push	{fp}		; (str fp, [sp, #-4]!)
   1ad48:	add	fp, sp, #0
   1ad4c:	sub	sp, sp, #12
   1ad50:	str	r0, [fp, #-8]
   1ad54:	str	r1, [fp, #-12]
   1ad58:	ldr	r3, [fp, #-8]
   1ad5c:	ldr	r2, [r3, #32]
   1ad60:	ldr	r3, [fp, #-12]
   1ad64:	add	r2, r2, r3
   1ad68:	ldr	r3, [fp, #-8]
   1ad6c:	str	r2, [r3, #32]
   1ad70:	nop	{0}
   1ad74:	add	sp, fp, #0
   1ad78:	pop	{fp}		; (ldr fp, [sp], #4)
   1ad7c:	bx	lr

0001ad80 <flatcc_json_printer_get_level@@Base>:
   1ad80:	push	{fp}		; (str fp, [sp, #-4]!)
   1ad84:	add	fp, sp, #0
   1ad88:	sub	sp, sp, #12
   1ad8c:	str	r0, [fp, #-8]
   1ad90:	ldr	r3, [fp, #-8]
   1ad94:	ldr	r3, [r3, #32]
   1ad98:	mov	r0, r3
   1ad9c:	add	sp, fp, #0
   1ada0:	pop	{fp}		; (ldr fp, [sp], #4)
   1ada4:	bx	lr
   1ada8:	str	fp, [sp, #-8]!
   1adac:	str	lr, [sp, #4]
   1adb0:	add	fp, sp, #4
   1adb4:	sub	sp, sp, #16
   1adb8:	str	r0, [fp, #-8]
   1adbc:	str	r1, [fp, #-12]
   1adc0:	str	r2, [fp, #-16]
   1adc4:	ldr	r3, [fp, #-8]
   1adc8:	ldr	r3, [r3, #20]
   1adcc:	mov	r2, #34	; 0x22
   1add0:	strb	r2, [r3]
   1add4:	ldr	r3, [fp, #-8]
   1add8:	ldr	r3, [r3, #20]
   1addc:	ldr	r2, [fp, #-8]
   1ade0:	ldrb	r2, [r2, #26]
   1ade4:	cmp	r2, #0
   1ade8:	moveq	r2, #1
   1adec:	movne	r2, #0
   1adf0:	uxtb	r2, r2
   1adf4:	add	r2, r3, r2
   1adf8:	ldr	r3, [fp, #-8]
   1adfc:	str	r2, [r3, #20]
   1ae00:	ldr	r3, [fp, #-8]
   1ae04:	ldr	r2, [r3, #20]
   1ae08:	ldr	r3, [fp, #-16]
   1ae0c:	add	r2, r2, r3
   1ae10:	ldr	r3, [fp, #-8]
   1ae14:	ldr	r3, [r3, #16]
   1ae18:	cmp	r2, r3
   1ae1c:	bcs	1ae54 <flatcc_json_printer_get_level@@Base+0xd4>
   1ae20:	ldr	r3, [fp, #-8]
   1ae24:	ldr	r3, [r3, #20]
   1ae28:	ldr	r2, [fp, #-16]
   1ae2c:	ldr	r1, [fp, #-12]
   1ae30:	mov	r0, r3
   1ae34:	bl	12420 <memcpy@plt>
   1ae38:	ldr	r3, [fp, #-8]
   1ae3c:	ldr	r2, [r3, #20]
   1ae40:	ldr	r3, [fp, #-16]
   1ae44:	add	r2, r2, r3
   1ae48:	ldr	r3, [fp, #-8]
   1ae4c:	str	r2, [r3, #20]
   1ae50:	b	1ae64 <flatcc_json_printer_get_level@@Base+0xe4>
   1ae54:	ldr	r2, [fp, #-16]
   1ae58:	ldr	r1, [fp, #-12]
   1ae5c:	ldr	r0, [fp, #-8]
   1ae60:	bl	1a3fc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   1ae64:	ldr	r3, [fp, #-8]
   1ae68:	ldr	r3, [r3, #20]
   1ae6c:	mov	r2, #34	; 0x22
   1ae70:	strb	r2, [r3]
   1ae74:	ldr	r3, [fp, #-8]
   1ae78:	ldr	r3, [r3, #20]
   1ae7c:	ldr	r2, [fp, #-8]
   1ae80:	ldrb	r2, [r2, #26]
   1ae84:	cmp	r2, #0
   1ae88:	moveq	r2, #1
   1ae8c:	movne	r2, #0
   1ae90:	uxtb	r2, r2
   1ae94:	add	r2, r3, r2
   1ae98:	ldr	r3, [fp, #-8]
   1ae9c:	str	r2, [r3, #20]
   1aea0:	nop	{0}
   1aea4:	sub	sp, fp, #4
   1aea8:	ldr	fp, [sp]
   1aeac:	add	sp, sp, #4
   1aeb0:	pop	{pc}		; (ldr pc, [sp], #4)
   1aeb4:	str	fp, [sp, #-8]!
   1aeb8:	str	lr, [sp, #4]
   1aebc:	add	fp, sp, #4
   1aec0:	sub	sp, sp, #16
   1aec4:	str	r0, [fp, #-8]
   1aec8:	str	r1, [fp, #-12]
   1aecc:	str	r2, [fp, #-16]
   1aed0:	ldr	r3, [fp, #-8]
   1aed4:	ldrb	r3, [r3, #25]
   1aed8:	cmp	r3, #0
   1aedc:	beq	1af08 <flatcc_json_printer_get_level@@Base+0x188>
   1aee0:	ldr	r3, [fp, #-8]
   1aee4:	ldr	r3, [r3, #20]
   1aee8:	add	r1, r3, #1
   1aeec:	ldr	r2, [fp, #-8]
   1aef0:	str	r1, [r2, #20]
   1aef4:	mov	r2, #10
   1aef8:	strb	r2, [r3]
   1aefc:	ldr	r0, [fp, #-8]
   1af00:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1af04:	b	1af10 <flatcc_json_printer_get_level@@Base+0x190>
   1af08:	ldr	r0, [fp, #-8]
   1af0c:	bl	15718 <main@@Base+0x7fc>
   1af10:	ldr	r2, [fp, #-16]
   1af14:	ldr	r1, [fp, #-12]
   1af18:	ldr	r0, [fp, #-8]
   1af1c:	bl	1ada8 <flatcc_json_printer_get_level@@Base+0x28>
   1af20:	ldr	r3, [fp, #-8]
   1af24:	ldr	r3, [r3, #20]
   1af28:	add	r1, r3, #1
   1af2c:	ldr	r2, [fp, #-8]
   1af30:	str	r1, [r2, #20]
   1af34:	mov	r2, #58	; 0x3a
   1af38:	strb	r2, [r3]
   1af3c:	ldr	r3, [fp, #-8]
   1af40:	ldr	r3, [r3, #20]
   1af44:	mov	r2, #32
   1af48:	strb	r2, [r3]
   1af4c:	ldr	r3, [fp, #-8]
   1af50:	ldr	r3, [r3, #20]
   1af54:	ldr	r2, [fp, #-8]
   1af58:	ldrb	r2, [r2, #25]
   1af5c:	cmp	r2, #0
   1af60:	movne	r2, #1
   1af64:	moveq	r2, #0
   1af68:	uxtb	r2, r2
   1af6c:	add	r2, r3, r2
   1af70:	ldr	r3, [fp, #-8]
   1af74:	str	r2, [r3, #20]
   1af78:	nop	{0}
   1af7c:	sub	sp, fp, #4
   1af80:	ldr	fp, [sp]
   1af84:	add	sp, sp, #4
   1af88:	pop	{pc}		; (ldr pc, [sp], #4)

0001af8c <flatcc_json_printer_uint8@@Base>:
   1af8c:	str	fp, [sp, #-8]!
   1af90:	str	lr, [sp, #4]
   1af94:	add	fp, sp, #4
   1af98:	sub	sp, sp, #8
   1af9c:	str	r0, [fp, #-8]
   1afa0:	mov	r3, r1
   1afa4:	strb	r3, [fp, #-9]
   1afa8:	ldr	r3, [fp, #-8]
   1afac:	ldr	r2, [r3, #20]
   1afb0:	ldrb	r3, [fp, #-9]
   1afb4:	mov	r1, r2
   1afb8:	mov	r0, r3
   1afbc:	bl	157e8 <main@@Base+0x8cc>
   1afc0:	mov	r2, r0
   1afc4:	ldr	r3, [fp, #-8]
   1afc8:	ldr	r3, [r3, #20]
   1afcc:	add	r2, r3, r2
   1afd0:	ldr	r3, [fp, #-8]
   1afd4:	str	r2, [r3, #20]
   1afd8:	nop	{0}
   1afdc:	sub	sp, fp, #4
   1afe0:	ldr	fp, [sp]
   1afe4:	add	sp, sp, #4
   1afe8:	pop	{pc}		; (ldr pc, [sp], #4)

0001afec <flatcc_json_printer_uint16@@Base>:
   1afec:	str	fp, [sp, #-8]!
   1aff0:	str	lr, [sp, #4]
   1aff4:	add	fp, sp, #4
   1aff8:	sub	sp, sp, #8
   1affc:	str	r0, [fp, #-8]
   1b000:	mov	r3, r1
   1b004:	strh	r3, [fp, #-10]
   1b008:	ldr	r3, [fp, #-8]
   1b00c:	ldr	r2, [r3, #20]
   1b010:	ldrh	r3, [fp, #-10]
   1b014:	mov	r1, r2
   1b018:	mov	r0, r3
   1b01c:	bl	159b8 <main@@Base+0xa9c>
   1b020:	mov	r2, r0
   1b024:	ldr	r3, [fp, #-8]
   1b028:	ldr	r3, [r3, #20]
   1b02c:	add	r2, r3, r2
   1b030:	ldr	r3, [fp, #-8]
   1b034:	str	r2, [r3, #20]
   1b038:	nop	{0}
   1b03c:	sub	sp, fp, #4
   1b040:	ldr	fp, [sp]
   1b044:	add	sp, sp, #4
   1b048:	pop	{pc}		; (ldr pc, [sp], #4)

0001b04c <flatcc_json_printer_uint32@@Base>:
   1b04c:	str	fp, [sp, #-8]!
   1b050:	str	lr, [sp, #4]
   1b054:	add	fp, sp, #4
   1b058:	sub	sp, sp, #8
   1b05c:	str	r0, [fp, #-8]
   1b060:	str	r1, [fp, #-12]
   1b064:	ldr	r3, [fp, #-8]
   1b068:	ldr	r3, [r3, #20]
   1b06c:	mov	r1, r3
   1b070:	ldr	r0, [fp, #-12]
   1b074:	bl	15d04 <main@@Base+0xde8>
   1b078:	mov	r2, r0
   1b07c:	ldr	r3, [fp, #-8]
   1b080:	ldr	r3, [r3, #20]
   1b084:	add	r2, r3, r2
   1b088:	ldr	r3, [fp, #-8]
   1b08c:	str	r2, [r3, #20]
   1b090:	nop	{0}
   1b094:	sub	sp, fp, #4
   1b098:	ldr	fp, [sp]
   1b09c:	add	sp, sp, #4
   1b0a0:	pop	{pc}		; (ldr pc, [sp], #4)

0001b0a4 <flatcc_json_printer_uint64@@Base>:
   1b0a4:	str	fp, [sp, #-8]!
   1b0a8:	str	lr, [sp, #4]
   1b0ac:	add	fp, sp, #4
   1b0b0:	sub	sp, sp, #16
   1b0b4:	str	r0, [fp, #-8]
   1b0b8:	strd	r2, [fp, #-20]	; 0xffffffec
   1b0bc:	ldr	r3, [fp, #-8]
   1b0c0:	ldr	r3, [r3, #20]
   1b0c4:	mov	r2, r3
   1b0c8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1b0cc:	bl	1637c <main@@Base+0x1460>
   1b0d0:	mov	r2, r0
   1b0d4:	ldr	r3, [fp, #-8]
   1b0d8:	ldr	r3, [r3, #20]
   1b0dc:	add	r2, r3, r2
   1b0e0:	ldr	r3, [fp, #-8]
   1b0e4:	str	r2, [r3, #20]
   1b0e8:	nop	{0}
   1b0ec:	sub	sp, fp, #4
   1b0f0:	ldr	fp, [sp]
   1b0f4:	add	sp, sp, #4
   1b0f8:	pop	{pc}		; (ldr pc, [sp], #4)

0001b0fc <flatcc_json_printer_int8@@Base>:
   1b0fc:	str	fp, [sp, #-8]!
   1b100:	str	lr, [sp, #4]
   1b104:	add	fp, sp, #4
   1b108:	sub	sp, sp, #8
   1b10c:	str	r0, [fp, #-8]
   1b110:	mov	r3, r1
   1b114:	strb	r3, [fp, #-9]
   1b118:	ldr	r3, [fp, #-8]
   1b11c:	ldr	r2, [r3, #20]
   1b120:	ldrsb	r3, [fp, #-9]
   1b124:	mov	r1, r2
   1b128:	mov	r0, r3
   1b12c:	bl	17064 <main@@Base+0x2148>
   1b130:	mov	r2, r0
   1b134:	ldr	r3, [fp, #-8]
   1b138:	ldr	r3, [r3, #20]
   1b13c:	add	r2, r3, r2
   1b140:	ldr	r3, [fp, #-8]
   1b144:	str	r2, [r3, #20]
   1b148:	nop	{0}
   1b14c:	sub	sp, fp, #4
   1b150:	ldr	fp, [sp]
   1b154:	add	sp, sp, #4
   1b158:	pop	{pc}		; (ldr pc, [sp], #4)

0001b15c <flatcc_json_printer_int16@@Base>:
   1b15c:	str	fp, [sp, #-8]!
   1b160:	str	lr, [sp, #4]
   1b164:	add	fp, sp, #4
   1b168:	sub	sp, sp, #8
   1b16c:	str	r0, [fp, #-8]
   1b170:	mov	r3, r1
   1b174:	strh	r3, [fp, #-10]
   1b178:	ldr	r3, [fp, #-8]
   1b17c:	ldr	r2, [r3, #20]
   1b180:	ldrsh	r3, [fp, #-10]
   1b184:	mov	r1, r2
   1b188:	mov	r0, r3
   1b18c:	bl	170f0 <main@@Base+0x21d4>
   1b190:	mov	r2, r0
   1b194:	ldr	r3, [fp, #-8]
   1b198:	ldr	r3, [r3, #20]
   1b19c:	add	r2, r3, r2
   1b1a0:	ldr	r3, [fp, #-8]
   1b1a4:	str	r2, [r3, #20]
   1b1a8:	nop	{0}
   1b1ac:	sub	sp, fp, #4
   1b1b0:	ldr	fp, [sp]
   1b1b4:	add	sp, sp, #4
   1b1b8:	pop	{pc}		; (ldr pc, [sp], #4)

0001b1bc <flatcc_json_printer_int32@@Base>:
   1b1bc:	str	fp, [sp, #-8]!
   1b1c0:	str	lr, [sp, #4]
   1b1c4:	add	fp, sp, #4
   1b1c8:	sub	sp, sp, #8
   1b1cc:	str	r0, [fp, #-8]
   1b1d0:	str	r1, [fp, #-12]
   1b1d4:	ldr	r3, [fp, #-8]
   1b1d8:	ldr	r3, [r3, #20]
   1b1dc:	mov	r1, r3
   1b1e0:	ldr	r0, [fp, #-12]
   1b1e4:	bl	1717c <main@@Base+0x2260>
   1b1e8:	mov	r2, r0
   1b1ec:	ldr	r3, [fp, #-8]
   1b1f0:	ldr	r3, [r3, #20]
   1b1f4:	add	r2, r3, r2
   1b1f8:	ldr	r3, [fp, #-8]
   1b1fc:	str	r2, [r3, #20]
   1b200:	nop	{0}
   1b204:	sub	sp, fp, #4
   1b208:	ldr	fp, [sp]
   1b20c:	add	sp, sp, #4
   1b210:	pop	{pc}		; (ldr pc, [sp], #4)

0001b214 <flatcc_json_printer_int64@@Base>:
   1b214:	str	fp, [sp, #-8]!
   1b218:	str	lr, [sp, #4]
   1b21c:	add	fp, sp, #4
   1b220:	sub	sp, sp, #16
   1b224:	str	r0, [fp, #-8]
   1b228:	strd	r2, [fp, #-20]	; 0xffffffec
   1b22c:	ldr	r3, [fp, #-8]
   1b230:	ldr	r3, [r3, #20]
   1b234:	mov	r2, r3
   1b238:	ldrd	r0, [fp, #-20]	; 0xffffffec
   1b23c:	bl	17200 <main@@Base+0x22e4>
   1b240:	mov	r2, r0
   1b244:	ldr	r3, [fp, #-8]
   1b248:	ldr	r3, [r3, #20]
   1b24c:	add	r2, r3, r2
   1b250:	ldr	r3, [fp, #-8]
   1b254:	str	r2, [r3, #20]
   1b258:	nop	{0}
   1b25c:	sub	sp, fp, #4
   1b260:	ldr	fp, [sp]
   1b264:	add	sp, sp, #4
   1b268:	pop	{pc}		; (ldr pc, [sp], #4)

0001b26c <flatcc_json_printer_float@@Base>:
   1b26c:	str	fp, [sp, #-8]!
   1b270:	str	lr, [sp, #4]
   1b274:	add	fp, sp, #4
   1b278:	sub	sp, sp, #8
   1b27c:	str	r0, [fp, #-8]
   1b280:	vstr	s0, [fp, #-12]
   1b284:	vldr	s15, [fp, #-12]
   1b288:	vcvt.f64.f32	d7, s15
   1b28c:	ldr	r3, [fp, #-8]
   1b290:	ldr	r3, [r3, #20]
   1b294:	mov	r0, r3
   1b298:	vmov.f64	d0, d7
   1b29c:	bl	18f48 <main@@Base+0x402c>
   1b2a0:	mov	r2, r0
   1b2a4:	ldr	r3, [fp, #-8]
   1b2a8:	ldr	r3, [r3, #20]
   1b2ac:	add	r2, r3, r2
   1b2b0:	ldr	r3, [fp, #-8]
   1b2b4:	str	r2, [r3, #20]
   1b2b8:	nop	{0}
   1b2bc:	sub	sp, fp, #4
   1b2c0:	ldr	fp, [sp]
   1b2c4:	add	sp, sp, #4
   1b2c8:	pop	{pc}		; (ldr pc, [sp], #4)

0001b2cc <flatcc_json_printer_double@@Base>:
   1b2cc:	str	fp, [sp, #-8]!
   1b2d0:	str	lr, [sp, #4]
   1b2d4:	add	fp, sp, #4
   1b2d8:	sub	sp, sp, #16
   1b2dc:	str	r0, [fp, #-8]
   1b2e0:	vstr	d0, [fp, #-20]	; 0xffffffec
   1b2e4:	ldr	r3, [fp, #-8]
   1b2e8:	ldr	r3, [r3, #20]
   1b2ec:	mov	r0, r3
   1b2f0:	vldr	d0, [fp, #-20]	; 0xffffffec
   1b2f4:	bl	18f48 <main@@Base+0x402c>
   1b2f8:	mov	r2, r0
   1b2fc:	ldr	r3, [fp, #-8]
   1b300:	ldr	r3, [r3, #20]
   1b304:	add	r2, r3, r2
   1b308:	ldr	r3, [fp, #-8]
   1b30c:	str	r2, [r3, #20]
   1b310:	nop	{0}
   1b314:	sub	sp, fp, #4
   1b318:	ldr	fp, [sp]
   1b31c:	add	sp, sp, #4
   1b320:	pop	{pc}		; (ldr pc, [sp], #4)

0001b324 <flatcc_json_printer_enum@@Base>:
   1b324:	str	fp, [sp, #-8]!
   1b328:	str	lr, [sp, #4]
   1b32c:	add	fp, sp, #4
   1b330:	sub	sp, sp, #16
   1b334:	str	r0, [fp, #-8]
   1b338:	str	r1, [fp, #-12]
   1b33c:	str	r2, [fp, #-16]
   1b340:	ldr	r3, [fp, #-16]
   1b344:	mov	r2, r3
   1b348:	ldr	r1, [fp, #-12]
   1b34c:	ldr	r0, [fp, #-8]
   1b350:	bl	1ada8 <flatcc_json_printer_get_level@@Base+0x28>
   1b354:	nop	{0}
   1b358:	sub	sp, fp, #4
   1b35c:	ldr	fp, [sp]
   1b360:	add	sp, sp, #4
   1b364:	pop	{pc}		; (ldr pc, [sp], #4)

0001b368 <flatcc_json_printer_delimit_enum_flags@@Base>:
   1b368:	push	{fp}		; (str fp, [sp, #-4]!)
   1b36c:	add	fp, sp, #0
   1b370:	sub	sp, sp, #20
   1b374:	str	r0, [fp, #-16]
   1b378:	str	r1, [fp, #-20]	; 0xffffffec
   1b37c:	ldr	r3, [fp, #-16]
   1b380:	ldrb	r3, [r3, #26]
   1b384:	cmp	r3, #0
   1b388:	beq	1b398 <flatcc_json_printer_delimit_enum_flags@@Base+0x30>
   1b38c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b390:	cmp	r3, #0
   1b394:	beq	1b3a0 <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   1b398:	mov	r3, #1
   1b39c:	b	1b3a4 <flatcc_json_printer_delimit_enum_flags@@Base+0x3c>
   1b3a0:	mov	r3, #0
   1b3a4:	str	r3, [fp, #-8]
   1b3a8:	ldr	r3, [fp, #-16]
   1b3ac:	ldr	r3, [r3, #20]
   1b3b0:	mov	r2, #34	; 0x22
   1b3b4:	strb	r2, [r3]
   1b3b8:	ldr	r3, [fp, #-16]
   1b3bc:	ldr	r2, [r3, #20]
   1b3c0:	ldr	r3, [fp, #-8]
   1b3c4:	add	r2, r2, r3
   1b3c8:	ldr	r3, [fp, #-16]
   1b3cc:	str	r2, [r3, #20]
   1b3d0:	nop	{0}
   1b3d4:	add	sp, fp, #0
   1b3d8:	pop	{fp}		; (ldr fp, [sp], #4)
   1b3dc:	bx	lr

0001b3e0 <flatcc_json_printer_enum_flag@@Base>:
   1b3e0:	str	fp, [sp, #-8]!
   1b3e4:	str	lr, [sp, #4]
   1b3e8:	add	fp, sp, #4
   1b3ec:	sub	sp, sp, #16
   1b3f0:	str	r0, [fp, #-8]
   1b3f4:	str	r1, [fp, #-12]
   1b3f8:	str	r2, [fp, #-16]
   1b3fc:	str	r3, [fp, #-20]	; 0xffffffec
   1b400:	ldr	r3, [fp, #-8]
   1b404:	ldr	r3, [r3, #20]
   1b408:	mov	r2, #32
   1b40c:	strb	r2, [r3]
   1b410:	ldr	r3, [fp, #-8]
   1b414:	ldr	r3, [r3, #20]
   1b418:	ldr	r2, [fp, #-12]
   1b41c:	cmp	r2, #0
   1b420:	movgt	r2, #1
   1b424:	movle	r2, #0
   1b428:	uxtb	r2, r2
   1b42c:	add	r2, r3, r2
   1b430:	ldr	r3, [fp, #-8]
   1b434:	str	r2, [r3, #20]
   1b438:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b43c:	mov	r2, r3
   1b440:	ldr	r1, [fp, #-16]
   1b444:	ldr	r0, [fp, #-8]
   1b448:	bl	1a3fc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   1b44c:	nop	{0}
   1b450:	sub	sp, fp, #4
   1b454:	ldr	fp, [sp]
   1b458:	add	sp, sp, #4
   1b45c:	pop	{pc}		; (ldr pc, [sp], #4)
   1b460:	str	fp, [sp, #-8]!
   1b464:	str	lr, [sp, #4]
   1b468:	add	fp, sp, #4
   1b46c:	sub	sp, sp, #16
   1b470:	str	r0, [fp, #-16]
   1b474:	str	r1, [fp, #-20]	; 0xffffffec
   1b478:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b47c:	bl	154c8 <main@@Base+0x5ac>
   1b480:	str	r0, [fp, #-8]
   1b484:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b488:	add	r3, r3, #4
   1b48c:	str	r3, [fp, #-12]
   1b490:	ldr	r2, [fp, #-8]
   1b494:	ldr	r1, [fp, #-12]
   1b498:	ldr	r0, [fp, #-16]
   1b49c:	bl	1a490 <flatcc_json_printer_fmt_bool@@Base+0x244>
   1b4a0:	nop	{0}
   1b4a4:	sub	sp, fp, #4
   1b4a8:	ldr	fp, [sp]
   1b4ac:	add	sp, sp, #4
   1b4b0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b4b4:	str	fp, [sp, #-8]!
   1b4b8:	str	lr, [sp, #4]
   1b4bc:	add	fp, sp, #4
   1b4c0:	sub	sp, sp, #40	; 0x28
   1b4c4:	str	r0, [fp, #-32]	; 0xffffffe0
   1b4c8:	str	r1, [fp, #-36]	; 0xffffffdc
   1b4cc:	str	r2, [fp, #-40]	; 0xffffffd8
   1b4d0:	str	r3, [fp, #-44]	; 0xffffffd4
   1b4d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4d8:	sub	r3, r3, #1
   1b4dc:	str	r3, [fp, #-40]	; 0xffffffd8
   1b4e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b4e4:	cmp	r3, #0
   1b4e8:	bne	1b4fc <flatcc_json_printer_enum_flag@@Base+0x11c>
   1b4ec:	mov	r1, #2
   1b4f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b4f4:	bl	156b0 <main@@Base+0x794>
   1b4f8:	b	1b5ec <flatcc_json_printer_enum_flag@@Base+0x20c>
   1b4fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b500:	ldr	r3, [r3, #32]
   1b504:	add	r2, r3, #1
   1b508:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b50c:	str	r2, [r3, #32]
   1b510:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b514:	ldr	r3, [r3, #20]
   1b518:	add	r1, r3, #1
   1b51c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b520:	str	r1, [r2, #20]
   1b524:	mov	r2, #123	; 0x7b
   1b528:	strb	r2, [r3]
   1b52c:	mov	r3, #0
   1b530:	str	r3, [fp, #-8]
   1b534:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b538:	str	r3, [fp, #-12]
   1b53c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b540:	str	r3, [fp, #-24]	; 0xffffffe8
   1b544:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b548:	bl	15528 <main@@Base+0x60c>
   1b54c:	mov	r3, r0
   1b550:	rsb	r3, r3, #0
   1b554:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1b558:	add	r3, r2, r3
   1b55c:	str	r3, [fp, #-20]	; 0xffffffec
   1b560:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b564:	mov	r0, r3
   1b568:	bl	1558c <main@@Base+0x670>
   1b56c:	mov	r3, r0
   1b570:	str	r3, [fp, #-16]
   1b574:	sub	r2, fp, #24
   1b578:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b57c:	mov	r1, r2
   1b580:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b584:	blx	r3
   1b588:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b58c:	ldrb	r3, [r3, #25]
   1b590:	cmp	r3, #0
   1b594:	beq	1b5d0 <flatcc_json_printer_enum_flag@@Base+0x1f0>
   1b598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b59c:	ldr	r3, [r3, #20]
   1b5a0:	add	r1, r3, #1
   1b5a4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b5a8:	str	r1, [r2, #20]
   1b5ac:	mov	r2, #10
   1b5b0:	strb	r2, [r3]
   1b5b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5b8:	ldr	r3, [r3, #32]
   1b5bc:	sub	r2, r3, #1
   1b5c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5c4:	str	r2, [r3, #32]
   1b5c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b5cc:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1b5d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b5d4:	ldr	r3, [r3, #20]
   1b5d8:	add	r1, r3, #1
   1b5dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b5e0:	str	r1, [r2, #20]
   1b5e4:	mov	r2, #125	; 0x7d
   1b5e8:	strb	r2, [r3]
   1b5ec:	sub	sp, fp, #4
   1b5f0:	ldr	fp, [sp]
   1b5f4:	add	sp, sp, #4
   1b5f8:	pop	{pc}		; (ldr pc, [sp], #4)

0001b5fc <flatcc_json_printer_string_field@@Base>:
   1b5fc:	str	fp, [sp, #-8]!
   1b600:	str	lr, [sp, #4]
   1b604:	add	fp, sp, #4
   1b608:	sub	sp, sp, #24
   1b60c:	str	r0, [fp, #-16]
   1b610:	str	r1, [fp, #-20]	; 0xffffffec
   1b614:	str	r2, [fp, #-24]	; 0xffffffe8
   1b618:	str	r3, [fp, #-28]	; 0xffffffe4
   1b61c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b620:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b624:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1b628:	str	r0, [fp, #-8]
   1b62c:	ldr	r3, [fp, #-8]
   1b630:	cmp	r3, #0
   1b634:	beq	1b69c <flatcc_json_printer_string_field@@Base+0xa0>
   1b638:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b63c:	ldr	r3, [r3, #16]
   1b640:	add	r1, r3, #1
   1b644:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b648:	str	r1, [r2, #16]
   1b64c:	cmp	r3, #0
   1b650:	beq	1b670 <flatcc_json_printer_string_field@@Base+0x74>
   1b654:	ldr	r3, [fp, #-16]
   1b658:	ldr	r3, [r3, #20]
   1b65c:	add	r1, r3, #1
   1b660:	ldr	r2, [fp, #-16]
   1b664:	str	r1, [r2, #20]
   1b668:	mov	r2, #44	; 0x2c
   1b66c:	strb	r2, [r3]
   1b670:	ldr	r3, [fp, #4]
   1b674:	mov	r2, r3
   1b678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b67c:	ldr	r0, [fp, #-16]
   1b680:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1b684:	ldr	r0, [fp, #-8]
   1b688:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1b68c:	mov	r3, r0
   1b690:	mov	r1, r3
   1b694:	ldr	r0, [fp, #-16]
   1b698:	bl	1b460 <flatcc_json_printer_enum_flag@@Base+0x80>
   1b69c:	nop	{0}
   1b6a0:	sub	sp, fp, #4
   1b6a4:	ldr	fp, [sp]
   1b6a8:	add	sp, sp, #4
   1b6ac:	pop	{pc}		; (ldr pc, [sp], #4)

0001b6b0 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   1b6b0:	str	fp, [sp, #-8]!
   1b6b4:	str	lr, [sp, #4]
   1b6b8:	add	fp, sp, #4
   1b6bc:	sub	sp, sp, #24
   1b6c0:	str	r0, [fp, #-16]
   1b6c4:	str	r1, [fp, #-20]	; 0xffffffec
   1b6c8:	str	r2, [fp, #-24]	; 0xffffffe8
   1b6cc:	str	r3, [fp, #-28]	; 0xffffffe4
   1b6d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b6d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b6d8:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1b6dc:	str	r0, [fp, #-8]
   1b6e0:	ldr	r3, [fp, #8]
   1b6e4:	cmp	r3, #0
   1b6e8:	movne	r3, #1
   1b6ec:	moveq	r3, #0
   1b6f0:	uxtb	r3, r3
   1b6f4:	str	r3, [fp, #-12]
   1b6f8:	ldr	r3, [fp, #-12]
   1b6fc:	orr	r3, r3, #128	; 0x80
   1b700:	str	r3, [fp, #-12]
   1b704:	ldr	r3, [fp, #-8]
   1b708:	cmp	r3, #0
   1b70c:	beq	1b778 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xc8>
   1b710:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b714:	ldr	r3, [r3, #16]
   1b718:	add	r1, r3, #1
   1b71c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b720:	str	r1, [r2, #16]
   1b724:	cmp	r3, #0
   1b728:	beq	1b748 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x98>
   1b72c:	ldr	r3, [fp, #-16]
   1b730:	ldr	r3, [r3, #20]
   1b734:	add	r1, r3, #1
   1b738:	ldr	r2, [fp, #-16]
   1b73c:	str	r1, [r2, #20]
   1b740:	mov	r2, #44	; 0x2c
   1b744:	strb	r2, [r3]
   1b748:	ldr	r3, [fp, #4]
   1b74c:	mov	r2, r3
   1b750:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b754:	ldr	r0, [fp, #-16]
   1b758:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1b75c:	ldr	r0, [fp, #-8]
   1b760:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1b764:	mov	r3, r0
   1b768:	ldr	r2, [fp, #-12]
   1b76c:	mov	r1, r3
   1b770:	ldr	r0, [fp, #-16]
   1b774:	bl	1a7fc <flatcc_json_printer_fmt_bool@@Base+0x5b0>
   1b778:	nop	{0}
   1b77c:	sub	sp, fp, #4
   1b780:	ldr	fp, [sp]
   1b784:	add	sp, sp, #4
   1b788:	pop	{pc}		; (ldr pc, [sp], #4)

0001b78c <flatcc_json_printer_uint8_field@@Base>:
   1b78c:	str	fp, [sp, #-8]!
   1b790:	str	lr, [sp, #4]
   1b794:	add	fp, sp, #4
   1b798:	sub	sp, sp, #24
   1b79c:	str	r0, [fp, #-16]
   1b7a0:	str	r1, [fp, #-20]	; 0xffffffec
   1b7a4:	str	r2, [fp, #-24]	; 0xffffffe8
   1b7a8:	str	r3, [fp, #-28]	; 0xffffffe4
   1b7ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b7b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b7b4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1b7b8:	str	r0, [fp, #-12]
   1b7bc:	ldr	r3, [fp, #-12]
   1b7c0:	cmp	r3, #0
   1b7c4:	beq	1b7fc <flatcc_json_printer_uint8_field@@Base+0x70>
   1b7c8:	ldr	r0, [fp, #-12]
   1b7cc:	bl	15050 <main@@Base+0x134>
   1b7d0:	mov	r3, r0
   1b7d4:	strb	r3, [fp, #-5]
   1b7d8:	ldrb	r2, [fp, #-5]
   1b7dc:	ldrb	r3, [fp, #8]
   1b7e0:	cmp	r2, r3
   1b7e4:	bne	1b814 <flatcc_json_printer_uint8_field@@Base+0x88>
   1b7e8:	ldr	r3, [fp, #-16]
   1b7ec:	ldrb	r3, [r3, #28]
   1b7f0:	cmp	r3, #0
   1b7f4:	beq	1b814 <flatcc_json_printer_uint8_field@@Base+0x88>
   1b7f8:	b	1b898 <flatcc_json_printer_uint8_field@@Base+0x10c>
   1b7fc:	ldr	r3, [fp, #-16]
   1b800:	ldrb	r3, [r3, #29]
   1b804:	cmp	r3, #0
   1b808:	beq	1b894 <flatcc_json_printer_uint8_field@@Base+0x108>
   1b80c:	ldrb	r3, [fp, #8]
   1b810:	strb	r3, [fp, #-5]
   1b814:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b818:	ldr	r3, [r3, #16]
   1b81c:	add	r1, r3, #1
   1b820:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b824:	str	r1, [r2, #16]
   1b828:	cmp	r3, #0
   1b82c:	beq	1b84c <flatcc_json_printer_uint8_field@@Base+0xc0>
   1b830:	ldr	r3, [fp, #-16]
   1b834:	ldr	r3, [r3, #20]
   1b838:	add	r1, r3, #1
   1b83c:	ldr	r2, [fp, #-16]
   1b840:	str	r1, [r2, #20]
   1b844:	mov	r2, #44	; 0x2c
   1b848:	strb	r2, [r3]
   1b84c:	ldr	r3, [fp, #4]
   1b850:	mov	r2, r3
   1b854:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b858:	ldr	r0, [fp, #-16]
   1b85c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1b860:	ldr	r3, [fp, #-16]
   1b864:	ldr	r2, [r3, #20]
   1b868:	ldrb	r3, [fp, #-5]
   1b86c:	mov	r1, r2
   1b870:	mov	r0, r3
   1b874:	bl	157e8 <main@@Base+0x8cc>
   1b878:	mov	r2, r0
   1b87c:	ldr	r3, [fp, #-16]
   1b880:	ldr	r3, [r3, #20]
   1b884:	add	r2, r3, r2
   1b888:	ldr	r3, [fp, #-16]
   1b88c:	str	r2, [r3, #20]
   1b890:	b	1b898 <flatcc_json_printer_uint8_field@@Base+0x10c>
   1b894:	nop	{0}
   1b898:	sub	sp, fp, #4
   1b89c:	ldr	fp, [sp]
   1b8a0:	add	sp, sp, #4
   1b8a4:	pop	{pc}		; (ldr pc, [sp], #4)

0001b8a8 <flatcc_json_printer_uint16_field@@Base>:
   1b8a8:	str	fp, [sp, #-8]!
   1b8ac:	str	lr, [sp, #4]
   1b8b0:	add	fp, sp, #4
   1b8b4:	sub	sp, sp, #24
   1b8b8:	str	r0, [fp, #-16]
   1b8bc:	str	r1, [fp, #-20]	; 0xffffffec
   1b8c0:	str	r2, [fp, #-24]	; 0xffffffe8
   1b8c4:	str	r3, [fp, #-28]	; 0xffffffe4
   1b8c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b8cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b8d0:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1b8d4:	str	r0, [fp, #-12]
   1b8d8:	ldr	r3, [fp, #-12]
   1b8dc:	cmp	r3, #0
   1b8e0:	beq	1b918 <flatcc_json_printer_uint16_field@@Base+0x70>
   1b8e4:	ldr	r0, [fp, #-12]
   1b8e8:	bl	150b4 <main@@Base+0x198>
   1b8ec:	mov	r3, r0
   1b8f0:	strh	r3, [fp, #-6]
   1b8f4:	ldrh	r2, [fp, #-6]
   1b8f8:	ldrh	r3, [fp, #8]
   1b8fc:	cmp	r2, r3
   1b900:	bne	1b930 <flatcc_json_printer_uint16_field@@Base+0x88>
   1b904:	ldr	r3, [fp, #-16]
   1b908:	ldrb	r3, [r3, #28]
   1b90c:	cmp	r3, #0
   1b910:	beq	1b930 <flatcc_json_printer_uint16_field@@Base+0x88>
   1b914:	b	1b9b4 <flatcc_json_printer_uint16_field@@Base+0x10c>
   1b918:	ldr	r3, [fp, #-16]
   1b91c:	ldrb	r3, [r3, #29]
   1b920:	cmp	r3, #0
   1b924:	beq	1b9b0 <flatcc_json_printer_uint16_field@@Base+0x108>
   1b928:	ldrh	r3, [fp, #8]
   1b92c:	strh	r3, [fp, #-6]
   1b930:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b934:	ldr	r3, [r3, #16]
   1b938:	add	r1, r3, #1
   1b93c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b940:	str	r1, [r2, #16]
   1b944:	cmp	r3, #0
   1b948:	beq	1b968 <flatcc_json_printer_uint16_field@@Base+0xc0>
   1b94c:	ldr	r3, [fp, #-16]
   1b950:	ldr	r3, [r3, #20]
   1b954:	add	r1, r3, #1
   1b958:	ldr	r2, [fp, #-16]
   1b95c:	str	r1, [r2, #20]
   1b960:	mov	r2, #44	; 0x2c
   1b964:	strb	r2, [r3]
   1b968:	ldr	r3, [fp, #4]
   1b96c:	mov	r2, r3
   1b970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b974:	ldr	r0, [fp, #-16]
   1b978:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1b97c:	ldr	r3, [fp, #-16]
   1b980:	ldr	r2, [r3, #20]
   1b984:	ldrh	r3, [fp, #-6]
   1b988:	mov	r1, r2
   1b98c:	mov	r0, r3
   1b990:	bl	159b8 <main@@Base+0xa9c>
   1b994:	mov	r2, r0
   1b998:	ldr	r3, [fp, #-16]
   1b99c:	ldr	r3, [r3, #20]
   1b9a0:	add	r2, r3, r2
   1b9a4:	ldr	r3, [fp, #-16]
   1b9a8:	str	r2, [r3, #20]
   1b9ac:	b	1b9b4 <flatcc_json_printer_uint16_field@@Base+0x10c>
   1b9b0:	nop	{0}
   1b9b4:	sub	sp, fp, #4
   1b9b8:	ldr	fp, [sp]
   1b9bc:	add	sp, sp, #4
   1b9c0:	pop	{pc}		; (ldr pc, [sp], #4)

0001b9c4 <flatcc_json_printer_uint32_field@@Base>:
   1b9c4:	str	fp, [sp, #-8]!
   1b9c8:	str	lr, [sp, #4]
   1b9cc:	add	fp, sp, #4
   1b9d0:	sub	sp, sp, #24
   1b9d4:	str	r0, [fp, #-16]
   1b9d8:	str	r1, [fp, #-20]	; 0xffffffec
   1b9dc:	str	r2, [fp, #-24]	; 0xffffffe8
   1b9e0:	str	r3, [fp, #-28]	; 0xffffffe4
   1b9e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b9e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b9ec:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1b9f0:	str	r0, [fp, #-12]
   1b9f4:	ldr	r3, [fp, #-12]
   1b9f8:	cmp	r3, #0
   1b9fc:	beq	1ba30 <flatcc_json_printer_uint32_field@@Base+0x6c>
   1ba00:	ldr	r0, [fp, #-12]
   1ba04:	bl	15114 <main@@Base+0x1f8>
   1ba08:	str	r0, [fp, #-8]
   1ba0c:	ldr	r2, [fp, #-8]
   1ba10:	ldr	r3, [fp, #8]
   1ba14:	cmp	r2, r3
   1ba18:	bne	1ba48 <flatcc_json_printer_uint32_field@@Base+0x84>
   1ba1c:	ldr	r3, [fp, #-16]
   1ba20:	ldrb	r3, [r3, #28]
   1ba24:	cmp	r3, #0
   1ba28:	beq	1ba48 <flatcc_json_printer_uint32_field@@Base+0x84>
   1ba2c:	b	1bac8 <flatcc_json_printer_uint32_field@@Base+0x104>
   1ba30:	ldr	r3, [fp, #-16]
   1ba34:	ldrb	r3, [r3, #29]
   1ba38:	cmp	r3, #0
   1ba3c:	beq	1bac4 <flatcc_json_printer_uint32_field@@Base+0x100>
   1ba40:	ldr	r3, [fp, #8]
   1ba44:	str	r3, [fp, #-8]
   1ba48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ba4c:	ldr	r3, [r3, #16]
   1ba50:	add	r1, r3, #1
   1ba54:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ba58:	str	r1, [r2, #16]
   1ba5c:	cmp	r3, #0
   1ba60:	beq	1ba80 <flatcc_json_printer_uint32_field@@Base+0xbc>
   1ba64:	ldr	r3, [fp, #-16]
   1ba68:	ldr	r3, [r3, #20]
   1ba6c:	add	r1, r3, #1
   1ba70:	ldr	r2, [fp, #-16]
   1ba74:	str	r1, [r2, #20]
   1ba78:	mov	r2, #44	; 0x2c
   1ba7c:	strb	r2, [r3]
   1ba80:	ldr	r3, [fp, #4]
   1ba84:	mov	r2, r3
   1ba88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ba8c:	ldr	r0, [fp, #-16]
   1ba90:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1ba94:	ldr	r3, [fp, #-16]
   1ba98:	ldr	r3, [r3, #20]
   1ba9c:	mov	r1, r3
   1baa0:	ldr	r0, [fp, #-8]
   1baa4:	bl	15d04 <main@@Base+0xde8>
   1baa8:	mov	r2, r0
   1baac:	ldr	r3, [fp, #-16]
   1bab0:	ldr	r3, [r3, #20]
   1bab4:	add	r2, r3, r2
   1bab8:	ldr	r3, [fp, #-16]
   1babc:	str	r2, [r3, #20]
   1bac0:	b	1bac8 <flatcc_json_printer_uint32_field@@Base+0x104>
   1bac4:	nop	{0}
   1bac8:	sub	sp, fp, #4
   1bacc:	ldr	fp, [sp]
   1bad0:	add	sp, sp, #4
   1bad4:	pop	{pc}		; (ldr pc, [sp], #4)

0001bad8 <flatcc_json_printer_uint64_field@@Base>:
   1bad8:	str	fp, [sp, #-8]!
   1badc:	str	lr, [sp, #4]
   1bae0:	add	fp, sp, #4
   1bae4:	sub	sp, sp, #32
   1bae8:	str	r0, [fp, #-24]	; 0xffffffe8
   1baec:	str	r1, [fp, #-28]	; 0xffffffe4
   1baf0:	str	r2, [fp, #-32]	; 0xffffffe0
   1baf4:	str	r3, [fp, #-36]	; 0xffffffdc
   1baf8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bafc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb00:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1bb04:	str	r0, [fp, #-16]
   1bb08:	ldr	r3, [fp, #-16]
   1bb0c:	cmp	r3, #0
   1bb10:	beq	1bb48 <flatcc_json_printer_uint64_field@@Base+0x70>
   1bb14:	ldr	r0, [fp, #-16]
   1bb18:	bl	15178 <main@@Base+0x25c>
   1bb1c:	strd	r0, [fp, #-12]
   1bb20:	ldrd	r0, [fp, #-12]
   1bb24:	ldrd	r2, [fp, #12]
   1bb28:	cmp	r1, r3
   1bb2c:	cmpeq	r0, r2
   1bb30:	bne	1bb60 <flatcc_json_printer_uint64_field@@Base+0x88>
   1bb34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb38:	ldrb	r3, [r3, #28]
   1bb3c:	cmp	r3, #0
   1bb40:	beq	1bb60 <flatcc_json_printer_uint64_field@@Base+0x88>
   1bb44:	b	1bbe0 <flatcc_json_printer_uint64_field@@Base+0x108>
   1bb48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb4c:	ldrb	r3, [r3, #29]
   1bb50:	cmp	r3, #0
   1bb54:	beq	1bbdc <flatcc_json_printer_uint64_field@@Base+0x104>
   1bb58:	ldrd	r2, [fp, #12]
   1bb5c:	strd	r2, [fp, #-12]
   1bb60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bb64:	ldr	r3, [r3, #16]
   1bb68:	add	r1, r3, #1
   1bb6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bb70:	str	r1, [r2, #16]
   1bb74:	cmp	r3, #0
   1bb78:	beq	1bb98 <flatcc_json_printer_uint64_field@@Base+0xc0>
   1bb7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bb80:	ldr	r3, [r3, #20]
   1bb84:	add	r1, r3, #1
   1bb88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bb8c:	str	r1, [r2, #20]
   1bb90:	mov	r2, #44	; 0x2c
   1bb94:	strb	r2, [r3]
   1bb98:	ldr	r3, [fp, #4]
   1bb9c:	mov	r2, r3
   1bba0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1bba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bba8:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1bbac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bbb0:	ldr	r3, [r3, #20]
   1bbb4:	mov	r2, r3
   1bbb8:	ldrd	r0, [fp, #-12]
   1bbbc:	bl	1637c <main@@Base+0x1460>
   1bbc0:	mov	r2, r0
   1bbc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bbc8:	ldr	r3, [r3, #20]
   1bbcc:	add	r2, r3, r2
   1bbd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bbd4:	str	r2, [r3, #20]
   1bbd8:	b	1bbe0 <flatcc_json_printer_uint64_field@@Base+0x108>
   1bbdc:	nop	{0}
   1bbe0:	sub	sp, fp, #4
   1bbe4:	ldr	fp, [sp]
   1bbe8:	add	sp, sp, #4
   1bbec:	pop	{pc}		; (ldr pc, [sp], #4)

0001bbf0 <flatcc_json_printer_int8_field@@Base>:
   1bbf0:	str	fp, [sp, #-8]!
   1bbf4:	str	lr, [sp, #4]
   1bbf8:	add	fp, sp, #4
   1bbfc:	sub	sp, sp, #24
   1bc00:	str	r0, [fp, #-16]
   1bc04:	str	r1, [fp, #-20]	; 0xffffffec
   1bc08:	str	r2, [fp, #-24]	; 0xffffffe8
   1bc0c:	str	r3, [fp, #-28]	; 0xffffffe4
   1bc10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bc14:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bc18:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1bc1c:	str	r0, [fp, #-12]
   1bc20:	ldr	r3, [fp, #-12]
   1bc24:	cmp	r3, #0
   1bc28:	beq	1bc60 <flatcc_json_printer_int8_field@@Base+0x70>
   1bc2c:	ldr	r0, [fp, #-12]
   1bc30:	bl	151e8 <main@@Base+0x2cc>
   1bc34:	mov	r3, r0
   1bc38:	strb	r3, [fp, #-5]
   1bc3c:	ldrsb	r2, [fp, #-5]
   1bc40:	ldrsb	r3, [fp, #8]
   1bc44:	cmp	r2, r3
   1bc48:	bne	1bc78 <flatcc_json_printer_int8_field@@Base+0x88>
   1bc4c:	ldr	r3, [fp, #-16]
   1bc50:	ldrb	r3, [r3, #28]
   1bc54:	cmp	r3, #0
   1bc58:	beq	1bc78 <flatcc_json_printer_int8_field@@Base+0x88>
   1bc5c:	b	1bcfc <flatcc_json_printer_int8_field@@Base+0x10c>
   1bc60:	ldr	r3, [fp, #-16]
   1bc64:	ldrb	r3, [r3, #29]
   1bc68:	cmp	r3, #0
   1bc6c:	beq	1bcf8 <flatcc_json_printer_int8_field@@Base+0x108>
   1bc70:	ldrb	r3, [fp, #8]
   1bc74:	strb	r3, [fp, #-5]
   1bc78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bc7c:	ldr	r3, [r3, #16]
   1bc80:	add	r1, r3, #1
   1bc84:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bc88:	str	r1, [r2, #16]
   1bc8c:	cmp	r3, #0
   1bc90:	beq	1bcb0 <flatcc_json_printer_int8_field@@Base+0xc0>
   1bc94:	ldr	r3, [fp, #-16]
   1bc98:	ldr	r3, [r3, #20]
   1bc9c:	add	r1, r3, #1
   1bca0:	ldr	r2, [fp, #-16]
   1bca4:	str	r1, [r2, #20]
   1bca8:	mov	r2, #44	; 0x2c
   1bcac:	strb	r2, [r3]
   1bcb0:	ldr	r3, [fp, #4]
   1bcb4:	mov	r2, r3
   1bcb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bcbc:	ldr	r0, [fp, #-16]
   1bcc0:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1bcc4:	ldr	r3, [fp, #-16]
   1bcc8:	ldr	r2, [r3, #20]
   1bccc:	ldrsb	r3, [fp, #-5]
   1bcd0:	mov	r1, r2
   1bcd4:	mov	r0, r3
   1bcd8:	bl	17064 <main@@Base+0x2148>
   1bcdc:	mov	r2, r0
   1bce0:	ldr	r3, [fp, #-16]
   1bce4:	ldr	r3, [r3, #20]
   1bce8:	add	r2, r3, r2
   1bcec:	ldr	r3, [fp, #-16]
   1bcf0:	str	r2, [r3, #20]
   1bcf4:	b	1bcfc <flatcc_json_printer_int8_field@@Base+0x10c>
   1bcf8:	nop	{0}
   1bcfc:	sub	sp, fp, #4
   1bd00:	ldr	fp, [sp]
   1bd04:	add	sp, sp, #4
   1bd08:	pop	{pc}		; (ldr pc, [sp], #4)

0001bd0c <flatcc_json_printer_int16_field@@Base>:
   1bd0c:	str	fp, [sp, #-8]!
   1bd10:	str	lr, [sp, #4]
   1bd14:	add	fp, sp, #4
   1bd18:	sub	sp, sp, #24
   1bd1c:	str	r0, [fp, #-16]
   1bd20:	str	r1, [fp, #-20]	; 0xffffffec
   1bd24:	str	r2, [fp, #-24]	; 0xffffffe8
   1bd28:	str	r3, [fp, #-28]	; 0xffffffe4
   1bd2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bd30:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bd34:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1bd38:	str	r0, [fp, #-12]
   1bd3c:	ldr	r3, [fp, #-12]
   1bd40:	cmp	r3, #0
   1bd44:	beq	1bd7c <flatcc_json_printer_int16_field@@Base+0x70>
   1bd48:	ldr	r0, [fp, #-12]
   1bd4c:	bl	1524c <main@@Base+0x330>
   1bd50:	mov	r3, r0
   1bd54:	strh	r3, [fp, #-6]
   1bd58:	ldrsh	r2, [fp, #-6]
   1bd5c:	ldrsh	r3, [fp, #8]
   1bd60:	cmp	r2, r3
   1bd64:	bne	1bd94 <flatcc_json_printer_int16_field@@Base+0x88>
   1bd68:	ldr	r3, [fp, #-16]
   1bd6c:	ldrb	r3, [r3, #28]
   1bd70:	cmp	r3, #0
   1bd74:	beq	1bd94 <flatcc_json_printer_int16_field@@Base+0x88>
   1bd78:	b	1be18 <flatcc_json_printer_int16_field@@Base+0x10c>
   1bd7c:	ldr	r3, [fp, #-16]
   1bd80:	ldrb	r3, [r3, #29]
   1bd84:	cmp	r3, #0
   1bd88:	beq	1be14 <flatcc_json_printer_int16_field@@Base+0x108>
   1bd8c:	ldrh	r3, [fp, #8]
   1bd90:	strh	r3, [fp, #-6]
   1bd94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bd98:	ldr	r3, [r3, #16]
   1bd9c:	add	r1, r3, #1
   1bda0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bda4:	str	r1, [r2, #16]
   1bda8:	cmp	r3, #0
   1bdac:	beq	1bdcc <flatcc_json_printer_int16_field@@Base+0xc0>
   1bdb0:	ldr	r3, [fp, #-16]
   1bdb4:	ldr	r3, [r3, #20]
   1bdb8:	add	r1, r3, #1
   1bdbc:	ldr	r2, [fp, #-16]
   1bdc0:	str	r1, [r2, #20]
   1bdc4:	mov	r2, #44	; 0x2c
   1bdc8:	strb	r2, [r3]
   1bdcc:	ldr	r3, [fp, #4]
   1bdd0:	mov	r2, r3
   1bdd4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bdd8:	ldr	r0, [fp, #-16]
   1bddc:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1bde0:	ldr	r3, [fp, #-16]
   1bde4:	ldr	r2, [r3, #20]
   1bde8:	ldrsh	r3, [fp, #-6]
   1bdec:	mov	r1, r2
   1bdf0:	mov	r0, r3
   1bdf4:	bl	170f0 <main@@Base+0x21d4>
   1bdf8:	mov	r2, r0
   1bdfc:	ldr	r3, [fp, #-16]
   1be00:	ldr	r3, [r3, #20]
   1be04:	add	r2, r3, r2
   1be08:	ldr	r3, [fp, #-16]
   1be0c:	str	r2, [r3, #20]
   1be10:	b	1be18 <flatcc_json_printer_int16_field@@Base+0x10c>
   1be14:	nop	{0}
   1be18:	sub	sp, fp, #4
   1be1c:	ldr	fp, [sp]
   1be20:	add	sp, sp, #4
   1be24:	pop	{pc}		; (ldr pc, [sp], #4)

0001be28 <flatcc_json_printer_int32_field@@Base>:
   1be28:	str	fp, [sp, #-8]!
   1be2c:	str	lr, [sp, #4]
   1be30:	add	fp, sp, #4
   1be34:	sub	sp, sp, #24
   1be38:	str	r0, [fp, #-16]
   1be3c:	str	r1, [fp, #-20]	; 0xffffffec
   1be40:	str	r2, [fp, #-24]	; 0xffffffe8
   1be44:	str	r3, [fp, #-28]	; 0xffffffe4
   1be48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1be4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1be50:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1be54:	str	r0, [fp, #-12]
   1be58:	ldr	r3, [fp, #-12]
   1be5c:	cmp	r3, #0
   1be60:	beq	1be94 <flatcc_json_printer_int32_field@@Base+0x6c>
   1be64:	ldr	r0, [fp, #-12]
   1be68:	bl	152ac <main@@Base+0x390>
   1be6c:	str	r0, [fp, #-8]
   1be70:	ldr	r2, [fp, #-8]
   1be74:	ldr	r3, [fp, #8]
   1be78:	cmp	r2, r3
   1be7c:	bne	1beac <flatcc_json_printer_int32_field@@Base+0x84>
   1be80:	ldr	r3, [fp, #-16]
   1be84:	ldrb	r3, [r3, #28]
   1be88:	cmp	r3, #0
   1be8c:	beq	1beac <flatcc_json_printer_int32_field@@Base+0x84>
   1be90:	b	1bf2c <flatcc_json_printer_int32_field@@Base+0x104>
   1be94:	ldr	r3, [fp, #-16]
   1be98:	ldrb	r3, [r3, #29]
   1be9c:	cmp	r3, #0
   1bea0:	beq	1bf28 <flatcc_json_printer_int32_field@@Base+0x100>
   1bea4:	ldr	r3, [fp, #8]
   1bea8:	str	r3, [fp, #-8]
   1beac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1beb0:	ldr	r3, [r3, #16]
   1beb4:	add	r1, r3, #1
   1beb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bebc:	str	r1, [r2, #16]
   1bec0:	cmp	r3, #0
   1bec4:	beq	1bee4 <flatcc_json_printer_int32_field@@Base+0xbc>
   1bec8:	ldr	r3, [fp, #-16]
   1becc:	ldr	r3, [r3, #20]
   1bed0:	add	r1, r3, #1
   1bed4:	ldr	r2, [fp, #-16]
   1bed8:	str	r1, [r2, #20]
   1bedc:	mov	r2, #44	; 0x2c
   1bee0:	strb	r2, [r3]
   1bee4:	ldr	r3, [fp, #4]
   1bee8:	mov	r2, r3
   1beec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bef0:	ldr	r0, [fp, #-16]
   1bef4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1bef8:	ldr	r3, [fp, #-16]
   1befc:	ldr	r3, [r3, #20]
   1bf00:	mov	r1, r3
   1bf04:	ldr	r0, [fp, #-8]
   1bf08:	bl	1717c <main@@Base+0x2260>
   1bf0c:	mov	r2, r0
   1bf10:	ldr	r3, [fp, #-16]
   1bf14:	ldr	r3, [r3, #20]
   1bf18:	add	r2, r3, r2
   1bf1c:	ldr	r3, [fp, #-16]
   1bf20:	str	r2, [r3, #20]
   1bf24:	b	1bf2c <flatcc_json_printer_int32_field@@Base+0x104>
   1bf28:	nop	{0}
   1bf2c:	sub	sp, fp, #4
   1bf30:	ldr	fp, [sp]
   1bf34:	add	sp, sp, #4
   1bf38:	pop	{pc}		; (ldr pc, [sp], #4)

0001bf3c <flatcc_json_printer_int64_field@@Base>:
   1bf3c:	str	fp, [sp, #-8]!
   1bf40:	str	lr, [sp, #4]
   1bf44:	add	fp, sp, #4
   1bf48:	sub	sp, sp, #32
   1bf4c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bf50:	str	r1, [fp, #-28]	; 0xffffffe4
   1bf54:	str	r2, [fp, #-32]	; 0xffffffe0
   1bf58:	str	r3, [fp, #-36]	; 0xffffffdc
   1bf5c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bf60:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf64:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1bf68:	str	r0, [fp, #-16]
   1bf6c:	ldr	r3, [fp, #-16]
   1bf70:	cmp	r3, #0
   1bf74:	beq	1bfac <flatcc_json_printer_int64_field@@Base+0x70>
   1bf78:	ldr	r0, [fp, #-16]
   1bf7c:	bl	15310 <main@@Base+0x3f4>
   1bf80:	strd	r0, [fp, #-12]
   1bf84:	ldrd	r0, [fp, #-12]
   1bf88:	ldrd	r2, [fp, #12]
   1bf8c:	cmp	r1, r3
   1bf90:	cmpeq	r0, r2
   1bf94:	bne	1bfc4 <flatcc_json_printer_int64_field@@Base+0x88>
   1bf98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf9c:	ldrb	r3, [r3, #28]
   1bfa0:	cmp	r3, #0
   1bfa4:	beq	1bfc4 <flatcc_json_printer_int64_field@@Base+0x88>
   1bfa8:	b	1c044 <flatcc_json_printer_int64_field@@Base+0x108>
   1bfac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bfb0:	ldrb	r3, [r3, #29]
   1bfb4:	cmp	r3, #0
   1bfb8:	beq	1c040 <flatcc_json_printer_int64_field@@Base+0x104>
   1bfbc:	ldrd	r2, [fp, #12]
   1bfc0:	strd	r2, [fp, #-12]
   1bfc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bfc8:	ldr	r3, [r3, #16]
   1bfcc:	add	r1, r3, #1
   1bfd0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bfd4:	str	r1, [r2, #16]
   1bfd8:	cmp	r3, #0
   1bfdc:	beq	1bffc <flatcc_json_printer_int64_field@@Base+0xc0>
   1bfe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bfe4:	ldr	r3, [r3, #20]
   1bfe8:	add	r1, r3, #1
   1bfec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bff0:	str	r1, [r2, #20]
   1bff4:	mov	r2, #44	; 0x2c
   1bff8:	strb	r2, [r3]
   1bffc:	ldr	r3, [fp, #4]
   1c000:	mov	r2, r3
   1c004:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c00c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c014:	ldr	r3, [r3, #20]
   1c018:	mov	r2, r3
   1c01c:	ldrd	r0, [fp, #-12]
   1c020:	bl	17200 <main@@Base+0x22e4>
   1c024:	mov	r2, r0
   1c028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c02c:	ldr	r3, [r3, #20]
   1c030:	add	r2, r3, r2
   1c034:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c038:	str	r2, [r3, #20]
   1c03c:	b	1c044 <flatcc_json_printer_int64_field@@Base+0x108>
   1c040:	nop	{0}
   1c044:	sub	sp, fp, #4
   1c048:	ldr	fp, [sp]
   1c04c:	add	sp, sp, #4
   1c050:	pop	{pc}		; (ldr pc, [sp], #4)

0001c054 <flatcc_json_printer_bool_field@@Base>:
   1c054:	str	fp, [sp, #-8]!
   1c058:	str	lr, [sp, #4]
   1c05c:	add	fp, sp, #4
   1c060:	sub	sp, sp, #24
   1c064:	str	r0, [fp, #-16]
   1c068:	str	r1, [fp, #-20]	; 0xffffffec
   1c06c:	str	r2, [fp, #-24]	; 0xffffffe8
   1c070:	str	r3, [fp, #-28]	; 0xffffffe4
   1c074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c078:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c07c:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c080:	str	r0, [fp, #-12]
   1c084:	ldr	r3, [fp, #-12]
   1c088:	cmp	r3, #0
   1c08c:	beq	1c0c4 <flatcc_json_printer_bool_field@@Base+0x70>
   1c090:	ldr	r0, [fp, #-12]
   1c094:	bl	15468 <main@@Base+0x54c>
   1c098:	mov	r3, r0
   1c09c:	strb	r3, [fp, #-5]
   1c0a0:	ldrb	r2, [fp, #-5]
   1c0a4:	ldrb	r3, [fp, #8]
   1c0a8:	cmp	r2, r3
   1c0ac:	bne	1c0dc <flatcc_json_printer_bool_field@@Base+0x88>
   1c0b0:	ldr	r3, [fp, #-16]
   1c0b4:	ldrb	r3, [r3, #28]
   1c0b8:	cmp	r3, #0
   1c0bc:	beq	1c0dc <flatcc_json_printer_bool_field@@Base+0x88>
   1c0c0:	b	1c160 <flatcc_json_printer_bool_field@@Base+0x10c>
   1c0c4:	ldr	r3, [fp, #-16]
   1c0c8:	ldrb	r3, [r3, #29]
   1c0cc:	cmp	r3, #0
   1c0d0:	beq	1c15c <flatcc_json_printer_bool_field@@Base+0x108>
   1c0d4:	ldrb	r3, [fp, #8]
   1c0d8:	strb	r3, [fp, #-5]
   1c0dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c0e0:	ldr	r3, [r3, #16]
   1c0e4:	add	r1, r3, #1
   1c0e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c0ec:	str	r1, [r2, #16]
   1c0f0:	cmp	r3, #0
   1c0f4:	beq	1c114 <flatcc_json_printer_bool_field@@Base+0xc0>
   1c0f8:	ldr	r3, [fp, #-16]
   1c0fc:	ldr	r3, [r3, #20]
   1c100:	add	r1, r3, #1
   1c104:	ldr	r2, [fp, #-16]
   1c108:	str	r1, [r2, #20]
   1c10c:	mov	r2, #44	; 0x2c
   1c110:	strb	r2, [r3]
   1c114:	ldr	r3, [fp, #4]
   1c118:	mov	r2, r3
   1c11c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c120:	ldr	r0, [fp, #-16]
   1c124:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c128:	ldrb	r2, [fp, #-5]
   1c12c:	ldr	r3, [fp, #-16]
   1c130:	ldr	r3, [r3, #20]
   1c134:	mov	r1, r3
   1c138:	mov	r0, r2
   1c13c:	bl	1576c <main@@Base+0x850>
   1c140:	mov	r2, r0
   1c144:	ldr	r3, [fp, #-16]
   1c148:	ldr	r3, [r3, #20]
   1c14c:	add	r2, r3, r2
   1c150:	ldr	r3, [fp, #-16]
   1c154:	str	r2, [r3, #20]
   1c158:	b	1c160 <flatcc_json_printer_bool_field@@Base+0x10c>
   1c15c:	nop	{0}
   1c160:	sub	sp, fp, #4
   1c164:	ldr	fp, [sp]
   1c168:	add	sp, sp, #4
   1c16c:	pop	{pc}		; (ldr pc, [sp], #4)

0001c170 <flatcc_json_printer_float_field@@Base>:
   1c170:	str	fp, [sp, #-8]!
   1c174:	str	lr, [sp, #4]
   1c178:	add	fp, sp, #4
   1c17c:	sub	sp, sp, #32
   1c180:	str	r0, [fp, #-16]
   1c184:	str	r1, [fp, #-20]	; 0xffffffec
   1c188:	str	r2, [fp, #-24]	; 0xffffffe8
   1c18c:	str	r3, [fp, #-28]	; 0xffffffe4
   1c190:	vstr	s0, [fp, #-32]	; 0xffffffe0
   1c194:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c198:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c19c:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c1a0:	str	r0, [fp, #-12]
   1c1a4:	ldr	r3, [fp, #-12]
   1c1a8:	cmp	r3, #0
   1c1ac:	beq	1c1e4 <flatcc_json_printer_float_field@@Base+0x74>
   1c1b0:	ldr	r0, [fp, #-12]
   1c1b4:	bl	15390 <main@@Base+0x474>
   1c1b8:	vstr	s0, [fp, #-8]
   1c1bc:	vldr	s14, [fp, #-8]
   1c1c0:	vldr	s15, [fp, #-32]	; 0xffffffe0
   1c1c4:	vcmp.f32	s14, s15
   1c1c8:	vmrs	APSR_nzcv, fpscr
   1c1cc:	bne	1c1fc <flatcc_json_printer_float_field@@Base+0x8c>
   1c1d0:	ldr	r3, [fp, #-16]
   1c1d4:	ldrb	r3, [r3, #28]
   1c1d8:	cmp	r3, #0
   1c1dc:	beq	1c1fc <flatcc_json_printer_float_field@@Base+0x8c>
   1c1e0:	b	1c284 <flatcc_json_printer_float_field@@Base+0x114>
   1c1e4:	ldr	r3, [fp, #-16]
   1c1e8:	ldrb	r3, [r3, #29]
   1c1ec:	cmp	r3, #0
   1c1f0:	beq	1c280 <flatcc_json_printer_float_field@@Base+0x110>
   1c1f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c1f8:	str	r3, [fp, #-8]
   1c1fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c200:	ldr	r3, [r3, #16]
   1c204:	add	r1, r3, #1
   1c208:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c20c:	str	r1, [r2, #16]
   1c210:	cmp	r3, #0
   1c214:	beq	1c234 <flatcc_json_printer_float_field@@Base+0xc4>
   1c218:	ldr	r3, [fp, #-16]
   1c21c:	ldr	r3, [r3, #20]
   1c220:	add	r1, r3, #1
   1c224:	ldr	r2, [fp, #-16]
   1c228:	str	r1, [r2, #20]
   1c22c:	mov	r2, #44	; 0x2c
   1c230:	strb	r2, [r3]
   1c234:	ldr	r3, [fp, #4]
   1c238:	mov	r2, r3
   1c23c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c240:	ldr	r0, [fp, #-16]
   1c244:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c248:	vldr	s15, [fp, #-8]
   1c24c:	vcvt.f64.f32	d7, s15
   1c250:	ldr	r3, [fp, #-16]
   1c254:	ldr	r3, [r3, #20]
   1c258:	mov	r0, r3
   1c25c:	vmov.f64	d0, d7
   1c260:	bl	18f48 <main@@Base+0x402c>
   1c264:	mov	r2, r0
   1c268:	ldr	r3, [fp, #-16]
   1c26c:	ldr	r3, [r3, #20]
   1c270:	add	r2, r3, r2
   1c274:	ldr	r3, [fp, #-16]
   1c278:	str	r2, [r3, #20]
   1c27c:	b	1c284 <flatcc_json_printer_float_field@@Base+0x114>
   1c280:	nop	{0}
   1c284:	sub	sp, fp, #4
   1c288:	ldr	fp, [sp]
   1c28c:	add	sp, sp, #4
   1c290:	pop	{pc}		; (ldr pc, [sp], #4)

0001c294 <flatcc_json_printer_double_field@@Base>:
   1c294:	str	fp, [sp, #-8]!
   1c298:	str	lr, [sp, #4]
   1c29c:	add	fp, sp, #4
   1c2a0:	sub	sp, sp, #40	; 0x28
   1c2a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c2a8:	str	r1, [fp, #-28]	; 0xffffffe4
   1c2ac:	str	r2, [fp, #-32]	; 0xffffffe0
   1c2b0:	str	r3, [fp, #-36]	; 0xffffffdc
   1c2b4:	vstr	d0, [fp, #-44]	; 0xffffffd4
   1c2b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c2bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c2c0:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c2c4:	str	r0, [fp, #-16]
   1c2c8:	ldr	r3, [fp, #-16]
   1c2cc:	cmp	r3, #0
   1c2d0:	beq	1c308 <flatcc_json_printer_double_field@@Base+0x74>
   1c2d4:	ldr	r0, [fp, #-16]
   1c2d8:	bl	15404 <main@@Base+0x4e8>
   1c2dc:	vstr	d0, [fp, #-12]
   1c2e0:	vldr	d6, [fp, #-12]
   1c2e4:	vldr	d7, [fp, #-44]	; 0xffffffd4
   1c2e8:	vcmp.f64	d6, d7
   1c2ec:	vmrs	APSR_nzcv, fpscr
   1c2f0:	bne	1c320 <flatcc_json_printer_double_field@@Base+0x8c>
   1c2f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2f8:	ldrb	r3, [r3, #28]
   1c2fc:	cmp	r3, #0
   1c300:	beq	1c320 <flatcc_json_printer_double_field@@Base+0x8c>
   1c304:	b	1c3a0 <flatcc_json_printer_double_field@@Base+0x10c>
   1c308:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c30c:	ldrb	r3, [r3, #29]
   1c310:	cmp	r3, #0
   1c314:	beq	1c39c <flatcc_json_printer_double_field@@Base+0x108>
   1c318:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1c31c:	strd	r2, [fp, #-12]
   1c320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c324:	ldr	r3, [r3, #16]
   1c328:	add	r1, r3, #1
   1c32c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c330:	str	r1, [r2, #16]
   1c334:	cmp	r3, #0
   1c338:	beq	1c358 <flatcc_json_printer_double_field@@Base+0xc4>
   1c33c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c340:	ldr	r3, [r3, #20]
   1c344:	add	r1, r3, #1
   1c348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c34c:	str	r1, [r2, #20]
   1c350:	mov	r2, #44	; 0x2c
   1c354:	strb	r2, [r3]
   1c358:	ldr	r3, [fp, #4]
   1c35c:	mov	r2, r3
   1c360:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c368:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c370:	ldr	r3, [r3, #20]
   1c374:	mov	r0, r3
   1c378:	vldr	d0, [fp, #-12]
   1c37c:	bl	18f48 <main@@Base+0x402c>
   1c380:	mov	r2, r0
   1c384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c388:	ldr	r3, [r3, #20]
   1c38c:	add	r2, r3, r2
   1c390:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c394:	str	r2, [r3, #20]
   1c398:	b	1c3a0 <flatcc_json_printer_double_field@@Base+0x10c>
   1c39c:	nop	{0}
   1c3a0:	sub	sp, fp, #4
   1c3a4:	ldr	fp, [sp]
   1c3a8:	add	sp, sp, #4
   1c3ac:	pop	{pc}		; (ldr pc, [sp], #4)

0001c3b0 <flatcc_json_printer_uint8_enum_field@@Base>:
   1c3b0:	str	fp, [sp, #-8]!
   1c3b4:	str	lr, [sp, #4]
   1c3b8:	add	fp, sp, #4
   1c3bc:	sub	sp, sp, #24
   1c3c0:	str	r0, [fp, #-16]
   1c3c4:	str	r1, [fp, #-20]	; 0xffffffec
   1c3c8:	str	r2, [fp, #-24]	; 0xffffffe8
   1c3cc:	str	r3, [fp, #-28]	; 0xffffffe4
   1c3d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c3d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c3d8:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c3dc:	str	r0, [fp, #-12]
   1c3e0:	ldr	r3, [fp, #-12]
   1c3e4:	cmp	r3, #0
   1c3e8:	beq	1c420 <flatcc_json_printer_uint8_enum_field@@Base+0x70>
   1c3ec:	ldr	r0, [fp, #-12]
   1c3f0:	bl	15050 <main@@Base+0x134>
   1c3f4:	mov	r3, r0
   1c3f8:	strb	r3, [fp, #-5]
   1c3fc:	ldrb	r2, [fp, #-5]
   1c400:	ldrb	r3, [fp, #8]
   1c404:	cmp	r2, r3
   1c408:	bne	1c438 <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   1c40c:	ldr	r3, [fp, #-16]
   1c410:	ldrb	r3, [r3, #28]
   1c414:	cmp	r3, #0
   1c418:	beq	1c438 <flatcc_json_printer_uint8_enum_field@@Base+0x88>
   1c41c:	b	1c4e4 <flatcc_json_printer_uint8_enum_field@@Base+0x134>
   1c420:	ldr	r3, [fp, #-16]
   1c424:	ldrb	r3, [r3, #29]
   1c428:	cmp	r3, #0
   1c42c:	beq	1c4e0 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   1c430:	ldrb	r3, [fp, #8]
   1c434:	strb	r3, [fp, #-5]
   1c438:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c43c:	ldr	r3, [r3, #16]
   1c440:	add	r1, r3, #1
   1c444:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c448:	str	r1, [r2, #16]
   1c44c:	cmp	r3, #0
   1c450:	beq	1c470 <flatcc_json_printer_uint8_enum_field@@Base+0xc0>
   1c454:	ldr	r3, [fp, #-16]
   1c458:	ldr	r3, [r3, #20]
   1c45c:	add	r1, r3, #1
   1c460:	ldr	r2, [fp, #-16]
   1c464:	str	r1, [r2, #20]
   1c468:	mov	r2, #44	; 0x2c
   1c46c:	strb	r2, [r3]
   1c470:	ldr	r3, [fp, #4]
   1c474:	mov	r2, r3
   1c478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c47c:	ldr	r0, [fp, #-16]
   1c480:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c484:	ldr	r3, [fp, #-16]
   1c488:	ldrb	r3, [r3, #27]
   1c48c:	cmp	r3, #0
   1c490:	beq	1c4c8 <flatcc_json_printer_uint8_enum_field@@Base+0x118>
   1c494:	ldr	r3, [fp, #-16]
   1c498:	ldr	r2, [r3, #20]
   1c49c:	ldrb	r3, [fp, #-5]
   1c4a0:	mov	r1, r2
   1c4a4:	mov	r0, r3
   1c4a8:	bl	157e8 <main@@Base+0x8cc>
   1c4ac:	mov	r2, r0
   1c4b0:	ldr	r3, [fp, #-16]
   1c4b4:	ldr	r3, [r3, #20]
   1c4b8:	add	r2, r3, r2
   1c4bc:	ldr	r3, [fp, #-16]
   1c4c0:	str	r2, [r3, #20]
   1c4c4:	b	1c4e4 <flatcc_json_printer_uint8_enum_field@@Base+0x134>
   1c4c8:	ldrb	r2, [fp, #-5]
   1c4cc:	ldr	r3, [fp, #12]
   1c4d0:	mov	r1, r2
   1c4d4:	ldr	r0, [fp, #-16]
   1c4d8:	blx	r3
   1c4dc:	b	1c4e4 <flatcc_json_printer_uint8_enum_field@@Base+0x134>
   1c4e0:	nop	{0}
   1c4e4:	sub	sp, fp, #4
   1c4e8:	ldr	fp, [sp]
   1c4ec:	add	sp, sp, #4
   1c4f0:	pop	{pc}		; (ldr pc, [sp], #4)

0001c4f4 <flatcc_json_printer_uint16_enum_field@@Base>:
   1c4f4:	str	fp, [sp, #-8]!
   1c4f8:	str	lr, [sp, #4]
   1c4fc:	add	fp, sp, #4
   1c500:	sub	sp, sp, #24
   1c504:	str	r0, [fp, #-16]
   1c508:	str	r1, [fp, #-20]	; 0xffffffec
   1c50c:	str	r2, [fp, #-24]	; 0xffffffe8
   1c510:	str	r3, [fp, #-28]	; 0xffffffe4
   1c514:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c518:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c51c:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c520:	str	r0, [fp, #-12]
   1c524:	ldr	r3, [fp, #-12]
   1c528:	cmp	r3, #0
   1c52c:	beq	1c564 <flatcc_json_printer_uint16_enum_field@@Base+0x70>
   1c530:	ldr	r0, [fp, #-12]
   1c534:	bl	150b4 <main@@Base+0x198>
   1c538:	mov	r3, r0
   1c53c:	strh	r3, [fp, #-6]
   1c540:	ldrh	r2, [fp, #-6]
   1c544:	ldrh	r3, [fp, #8]
   1c548:	cmp	r2, r3
   1c54c:	bne	1c57c <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   1c550:	ldr	r3, [fp, #-16]
   1c554:	ldrb	r3, [r3, #28]
   1c558:	cmp	r3, #0
   1c55c:	beq	1c57c <flatcc_json_printer_uint16_enum_field@@Base+0x88>
   1c560:	b	1c628 <flatcc_json_printer_uint16_enum_field@@Base+0x134>
   1c564:	ldr	r3, [fp, #-16]
   1c568:	ldrb	r3, [r3, #29]
   1c56c:	cmp	r3, #0
   1c570:	beq	1c624 <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   1c574:	ldrh	r3, [fp, #8]
   1c578:	strh	r3, [fp, #-6]
   1c57c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c580:	ldr	r3, [r3, #16]
   1c584:	add	r1, r3, #1
   1c588:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c58c:	str	r1, [r2, #16]
   1c590:	cmp	r3, #0
   1c594:	beq	1c5b4 <flatcc_json_printer_uint16_enum_field@@Base+0xc0>
   1c598:	ldr	r3, [fp, #-16]
   1c59c:	ldr	r3, [r3, #20]
   1c5a0:	add	r1, r3, #1
   1c5a4:	ldr	r2, [fp, #-16]
   1c5a8:	str	r1, [r2, #20]
   1c5ac:	mov	r2, #44	; 0x2c
   1c5b0:	strb	r2, [r3]
   1c5b4:	ldr	r3, [fp, #4]
   1c5b8:	mov	r2, r3
   1c5bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c5c0:	ldr	r0, [fp, #-16]
   1c5c4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c5c8:	ldr	r3, [fp, #-16]
   1c5cc:	ldrb	r3, [r3, #27]
   1c5d0:	cmp	r3, #0
   1c5d4:	beq	1c60c <flatcc_json_printer_uint16_enum_field@@Base+0x118>
   1c5d8:	ldr	r3, [fp, #-16]
   1c5dc:	ldr	r2, [r3, #20]
   1c5e0:	ldrh	r3, [fp, #-6]
   1c5e4:	mov	r1, r2
   1c5e8:	mov	r0, r3
   1c5ec:	bl	159b8 <main@@Base+0xa9c>
   1c5f0:	mov	r2, r0
   1c5f4:	ldr	r3, [fp, #-16]
   1c5f8:	ldr	r3, [r3, #20]
   1c5fc:	add	r2, r3, r2
   1c600:	ldr	r3, [fp, #-16]
   1c604:	str	r2, [r3, #20]
   1c608:	b	1c628 <flatcc_json_printer_uint16_enum_field@@Base+0x134>
   1c60c:	ldrh	r2, [fp, #-6]
   1c610:	ldr	r3, [fp, #12]
   1c614:	mov	r1, r2
   1c618:	ldr	r0, [fp, #-16]
   1c61c:	blx	r3
   1c620:	b	1c628 <flatcc_json_printer_uint16_enum_field@@Base+0x134>
   1c624:	nop	{0}
   1c628:	sub	sp, fp, #4
   1c62c:	ldr	fp, [sp]
   1c630:	add	sp, sp, #4
   1c634:	pop	{pc}		; (ldr pc, [sp], #4)

0001c638 <flatcc_json_printer_uint32_enum_field@@Base>:
   1c638:	str	fp, [sp, #-8]!
   1c63c:	str	lr, [sp, #4]
   1c640:	add	fp, sp, #4
   1c644:	sub	sp, sp, #24
   1c648:	str	r0, [fp, #-16]
   1c64c:	str	r1, [fp, #-20]	; 0xffffffec
   1c650:	str	r2, [fp, #-24]	; 0xffffffe8
   1c654:	str	r3, [fp, #-28]	; 0xffffffe4
   1c658:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c65c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c660:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c664:	str	r0, [fp, #-12]
   1c668:	ldr	r3, [fp, #-12]
   1c66c:	cmp	r3, #0
   1c670:	beq	1c6a4 <flatcc_json_printer_uint32_enum_field@@Base+0x6c>
   1c674:	ldr	r0, [fp, #-12]
   1c678:	bl	15114 <main@@Base+0x1f8>
   1c67c:	str	r0, [fp, #-8]
   1c680:	ldr	r2, [fp, #-8]
   1c684:	ldr	r3, [fp, #8]
   1c688:	cmp	r2, r3
   1c68c:	bne	1c6bc <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   1c690:	ldr	r3, [fp, #-16]
   1c694:	ldrb	r3, [r3, #28]
   1c698:	cmp	r3, #0
   1c69c:	beq	1c6bc <flatcc_json_printer_uint32_enum_field@@Base+0x84>
   1c6a0:	b	1c760 <flatcc_json_printer_uint32_enum_field@@Base+0x128>
   1c6a4:	ldr	r3, [fp, #-16]
   1c6a8:	ldrb	r3, [r3, #29]
   1c6ac:	cmp	r3, #0
   1c6b0:	beq	1c75c <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   1c6b4:	ldr	r3, [fp, #8]
   1c6b8:	str	r3, [fp, #-8]
   1c6bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c6c0:	ldr	r3, [r3, #16]
   1c6c4:	add	r1, r3, #1
   1c6c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c6cc:	str	r1, [r2, #16]
   1c6d0:	cmp	r3, #0
   1c6d4:	beq	1c6f4 <flatcc_json_printer_uint32_enum_field@@Base+0xbc>
   1c6d8:	ldr	r3, [fp, #-16]
   1c6dc:	ldr	r3, [r3, #20]
   1c6e0:	add	r1, r3, #1
   1c6e4:	ldr	r2, [fp, #-16]
   1c6e8:	str	r1, [r2, #20]
   1c6ec:	mov	r2, #44	; 0x2c
   1c6f0:	strb	r2, [r3]
   1c6f4:	ldr	r3, [fp, #4]
   1c6f8:	mov	r2, r3
   1c6fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c700:	ldr	r0, [fp, #-16]
   1c704:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c708:	ldr	r3, [fp, #-16]
   1c70c:	ldrb	r3, [r3, #27]
   1c710:	cmp	r3, #0
   1c714:	beq	1c748 <flatcc_json_printer_uint32_enum_field@@Base+0x110>
   1c718:	ldr	r3, [fp, #-16]
   1c71c:	ldr	r3, [r3, #20]
   1c720:	mov	r1, r3
   1c724:	ldr	r0, [fp, #-8]
   1c728:	bl	15d04 <main@@Base+0xde8>
   1c72c:	mov	r2, r0
   1c730:	ldr	r3, [fp, #-16]
   1c734:	ldr	r3, [r3, #20]
   1c738:	add	r2, r3, r2
   1c73c:	ldr	r3, [fp, #-16]
   1c740:	str	r2, [r3, #20]
   1c744:	b	1c760 <flatcc_json_printer_uint32_enum_field@@Base+0x128>
   1c748:	ldr	r3, [fp, #12]
   1c74c:	ldr	r1, [fp, #-8]
   1c750:	ldr	r0, [fp, #-16]
   1c754:	blx	r3
   1c758:	b	1c760 <flatcc_json_printer_uint32_enum_field@@Base+0x128>
   1c75c:	nop	{0}
   1c760:	sub	sp, fp, #4
   1c764:	ldr	fp, [sp]
   1c768:	add	sp, sp, #4
   1c76c:	pop	{pc}		; (ldr pc, [sp], #4)

0001c770 <flatcc_json_printer_uint64_enum_field@@Base>:
   1c770:	str	fp, [sp, #-8]!
   1c774:	str	lr, [sp, #4]
   1c778:	add	fp, sp, #4
   1c77c:	sub	sp, sp, #32
   1c780:	str	r0, [fp, #-24]	; 0xffffffe8
   1c784:	str	r1, [fp, #-28]	; 0xffffffe4
   1c788:	str	r2, [fp, #-32]	; 0xffffffe0
   1c78c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c790:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c794:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c798:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c79c:	str	r0, [fp, #-16]
   1c7a0:	ldr	r3, [fp, #-16]
   1c7a4:	cmp	r3, #0
   1c7a8:	beq	1c7e0 <flatcc_json_printer_uint64_enum_field@@Base+0x70>
   1c7ac:	ldr	r0, [fp, #-16]
   1c7b0:	bl	15178 <main@@Base+0x25c>
   1c7b4:	strd	r0, [fp, #-12]
   1c7b8:	ldrd	r0, [fp, #-12]
   1c7bc:	ldrd	r2, [fp, #12]
   1c7c0:	cmp	r1, r3
   1c7c4:	cmpeq	r0, r2
   1c7c8:	bne	1c7f8 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   1c7cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c7d0:	ldrb	r3, [r3, #28]
   1c7d4:	cmp	r3, #0
   1c7d8:	beq	1c7f8 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   1c7dc:	b	1c89c <flatcc_json_printer_uint64_enum_field@@Base+0x12c>
   1c7e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c7e4:	ldrb	r3, [r3, #29]
   1c7e8:	cmp	r3, #0
   1c7ec:	beq	1c898 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   1c7f0:	ldrd	r2, [fp, #12]
   1c7f4:	strd	r2, [fp, #-12]
   1c7f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c7fc:	ldr	r3, [r3, #16]
   1c800:	add	r1, r3, #1
   1c804:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c808:	str	r1, [r2, #16]
   1c80c:	cmp	r3, #0
   1c810:	beq	1c830 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   1c814:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c818:	ldr	r3, [r3, #20]
   1c81c:	add	r1, r3, #1
   1c820:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c824:	str	r1, [r2, #20]
   1c828:	mov	r2, #44	; 0x2c
   1c82c:	strb	r2, [r3]
   1c830:	ldr	r3, [fp, #4]
   1c834:	mov	r2, r3
   1c838:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c83c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c840:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c848:	ldrb	r3, [r3, #27]
   1c84c:	cmp	r3, #0
   1c850:	beq	1c884 <flatcc_json_printer_uint64_enum_field@@Base+0x114>
   1c854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c858:	ldr	r3, [r3, #20]
   1c85c:	mov	r2, r3
   1c860:	ldrd	r0, [fp, #-12]
   1c864:	bl	1637c <main@@Base+0x1460>
   1c868:	mov	r2, r0
   1c86c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c870:	ldr	r3, [r3, #20]
   1c874:	add	r2, r3, r2
   1c878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c87c:	str	r2, [r3, #20]
   1c880:	b	1c89c <flatcc_json_printer_uint64_enum_field@@Base+0x12c>
   1c884:	ldr	r1, [fp, #20]
   1c888:	ldrd	r2, [fp, #-12]
   1c88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c890:	blx	r1
   1c894:	b	1c89c <flatcc_json_printer_uint64_enum_field@@Base+0x12c>
   1c898:	nop	{0}
   1c89c:	sub	sp, fp, #4
   1c8a0:	ldr	fp, [sp]
   1c8a4:	add	sp, sp, #4
   1c8a8:	pop	{pc}		; (ldr pc, [sp], #4)

0001c8ac <flatcc_json_printer_int8_enum_field@@Base>:
   1c8ac:	str	fp, [sp, #-8]!
   1c8b0:	str	lr, [sp, #4]
   1c8b4:	add	fp, sp, #4
   1c8b8:	sub	sp, sp, #24
   1c8bc:	str	r0, [fp, #-16]
   1c8c0:	str	r1, [fp, #-20]	; 0xffffffec
   1c8c4:	str	r2, [fp, #-24]	; 0xffffffe8
   1c8c8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c8cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c8d4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1c8d8:	str	r0, [fp, #-12]
   1c8dc:	ldr	r3, [fp, #-12]
   1c8e0:	cmp	r3, #0
   1c8e4:	beq	1c91c <flatcc_json_printer_int8_enum_field@@Base+0x70>
   1c8e8:	ldr	r0, [fp, #-12]
   1c8ec:	bl	151e8 <main@@Base+0x2cc>
   1c8f0:	mov	r3, r0
   1c8f4:	strb	r3, [fp, #-5]
   1c8f8:	ldrsb	r2, [fp, #-5]
   1c8fc:	ldrsb	r3, [fp, #8]
   1c900:	cmp	r2, r3
   1c904:	bne	1c934 <flatcc_json_printer_int8_enum_field@@Base+0x88>
   1c908:	ldr	r3, [fp, #-16]
   1c90c:	ldrb	r3, [r3, #28]
   1c910:	cmp	r3, #0
   1c914:	beq	1c934 <flatcc_json_printer_int8_enum_field@@Base+0x88>
   1c918:	b	1c9e0 <flatcc_json_printer_int8_enum_field@@Base+0x134>
   1c91c:	ldr	r3, [fp, #-16]
   1c920:	ldrb	r3, [r3, #29]
   1c924:	cmp	r3, #0
   1c928:	beq	1c9dc <flatcc_json_printer_int8_enum_field@@Base+0x130>
   1c92c:	ldrb	r3, [fp, #8]
   1c930:	strb	r3, [fp, #-5]
   1c934:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c938:	ldr	r3, [r3, #16]
   1c93c:	add	r1, r3, #1
   1c940:	ldr	r2, [fp, #-20]	; 0xffffffec
   1c944:	str	r1, [r2, #16]
   1c948:	cmp	r3, #0
   1c94c:	beq	1c96c <flatcc_json_printer_int8_enum_field@@Base+0xc0>
   1c950:	ldr	r3, [fp, #-16]
   1c954:	ldr	r3, [r3, #20]
   1c958:	add	r1, r3, #1
   1c95c:	ldr	r2, [fp, #-16]
   1c960:	str	r1, [r2, #20]
   1c964:	mov	r2, #44	; 0x2c
   1c968:	strb	r2, [r3]
   1c96c:	ldr	r3, [fp, #4]
   1c970:	mov	r2, r3
   1c974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c978:	ldr	r0, [fp, #-16]
   1c97c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1c980:	ldr	r3, [fp, #-16]
   1c984:	ldrb	r3, [r3, #27]
   1c988:	cmp	r3, #0
   1c98c:	beq	1c9c4 <flatcc_json_printer_int8_enum_field@@Base+0x118>
   1c990:	ldr	r3, [fp, #-16]
   1c994:	ldr	r2, [r3, #20]
   1c998:	ldrsb	r3, [fp, #-5]
   1c99c:	mov	r1, r2
   1c9a0:	mov	r0, r3
   1c9a4:	bl	17064 <main@@Base+0x2148>
   1c9a8:	mov	r2, r0
   1c9ac:	ldr	r3, [fp, #-16]
   1c9b0:	ldr	r3, [r3, #20]
   1c9b4:	add	r2, r3, r2
   1c9b8:	ldr	r3, [fp, #-16]
   1c9bc:	str	r2, [r3, #20]
   1c9c0:	b	1c9e0 <flatcc_json_printer_int8_enum_field@@Base+0x134>
   1c9c4:	ldrsb	r2, [fp, #-5]
   1c9c8:	ldr	r3, [fp, #12]
   1c9cc:	mov	r1, r2
   1c9d0:	ldr	r0, [fp, #-16]
   1c9d4:	blx	r3
   1c9d8:	b	1c9e0 <flatcc_json_printer_int8_enum_field@@Base+0x134>
   1c9dc:	nop	{0}
   1c9e0:	sub	sp, fp, #4
   1c9e4:	ldr	fp, [sp]
   1c9e8:	add	sp, sp, #4
   1c9ec:	pop	{pc}		; (ldr pc, [sp], #4)

0001c9f0 <flatcc_json_printer_int16_enum_field@@Base>:
   1c9f0:	str	fp, [sp, #-8]!
   1c9f4:	str	lr, [sp, #4]
   1c9f8:	add	fp, sp, #4
   1c9fc:	sub	sp, sp, #24
   1ca00:	str	r0, [fp, #-16]
   1ca04:	str	r1, [fp, #-20]	; 0xffffffec
   1ca08:	str	r2, [fp, #-24]	; 0xffffffe8
   1ca0c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ca10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca14:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ca18:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1ca1c:	str	r0, [fp, #-12]
   1ca20:	ldr	r3, [fp, #-12]
   1ca24:	cmp	r3, #0
   1ca28:	beq	1ca60 <flatcc_json_printer_int16_enum_field@@Base+0x70>
   1ca2c:	ldr	r0, [fp, #-12]
   1ca30:	bl	1524c <main@@Base+0x330>
   1ca34:	mov	r3, r0
   1ca38:	strh	r3, [fp, #-6]
   1ca3c:	ldrsh	r2, [fp, #-6]
   1ca40:	ldrsh	r3, [fp, #8]
   1ca44:	cmp	r2, r3
   1ca48:	bne	1ca78 <flatcc_json_printer_int16_enum_field@@Base+0x88>
   1ca4c:	ldr	r3, [fp, #-16]
   1ca50:	ldrb	r3, [r3, #28]
   1ca54:	cmp	r3, #0
   1ca58:	beq	1ca78 <flatcc_json_printer_int16_enum_field@@Base+0x88>
   1ca5c:	b	1cb24 <flatcc_json_printer_int16_enum_field@@Base+0x134>
   1ca60:	ldr	r3, [fp, #-16]
   1ca64:	ldrb	r3, [r3, #29]
   1ca68:	cmp	r3, #0
   1ca6c:	beq	1cb20 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   1ca70:	ldrh	r3, [fp, #8]
   1ca74:	strh	r3, [fp, #-6]
   1ca78:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca7c:	ldr	r3, [r3, #16]
   1ca80:	add	r1, r3, #1
   1ca84:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ca88:	str	r1, [r2, #16]
   1ca8c:	cmp	r3, #0
   1ca90:	beq	1cab0 <flatcc_json_printer_int16_enum_field@@Base+0xc0>
   1ca94:	ldr	r3, [fp, #-16]
   1ca98:	ldr	r3, [r3, #20]
   1ca9c:	add	r1, r3, #1
   1caa0:	ldr	r2, [fp, #-16]
   1caa4:	str	r1, [r2, #20]
   1caa8:	mov	r2, #44	; 0x2c
   1caac:	strb	r2, [r3]
   1cab0:	ldr	r3, [fp, #4]
   1cab4:	mov	r2, r3
   1cab8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cabc:	ldr	r0, [fp, #-16]
   1cac0:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1cac4:	ldr	r3, [fp, #-16]
   1cac8:	ldrb	r3, [r3, #27]
   1cacc:	cmp	r3, #0
   1cad0:	beq	1cb08 <flatcc_json_printer_int16_enum_field@@Base+0x118>
   1cad4:	ldr	r3, [fp, #-16]
   1cad8:	ldr	r2, [r3, #20]
   1cadc:	ldrsh	r3, [fp, #-6]
   1cae0:	mov	r1, r2
   1cae4:	mov	r0, r3
   1cae8:	bl	170f0 <main@@Base+0x21d4>
   1caec:	mov	r2, r0
   1caf0:	ldr	r3, [fp, #-16]
   1caf4:	ldr	r3, [r3, #20]
   1caf8:	add	r2, r3, r2
   1cafc:	ldr	r3, [fp, #-16]
   1cb00:	str	r2, [r3, #20]
   1cb04:	b	1cb24 <flatcc_json_printer_int16_enum_field@@Base+0x134>
   1cb08:	ldrsh	r2, [fp, #-6]
   1cb0c:	ldr	r3, [fp, #12]
   1cb10:	mov	r1, r2
   1cb14:	ldr	r0, [fp, #-16]
   1cb18:	blx	r3
   1cb1c:	b	1cb24 <flatcc_json_printer_int16_enum_field@@Base+0x134>
   1cb20:	nop	{0}
   1cb24:	sub	sp, fp, #4
   1cb28:	ldr	fp, [sp]
   1cb2c:	add	sp, sp, #4
   1cb30:	pop	{pc}		; (ldr pc, [sp], #4)

0001cb34 <flatcc_json_printer_int32_enum_field@@Base>:
   1cb34:	str	fp, [sp, #-8]!
   1cb38:	str	lr, [sp, #4]
   1cb3c:	add	fp, sp, #4
   1cb40:	sub	sp, sp, #24
   1cb44:	str	r0, [fp, #-16]
   1cb48:	str	r1, [fp, #-20]	; 0xffffffec
   1cb4c:	str	r2, [fp, #-24]	; 0xffffffe8
   1cb50:	str	r3, [fp, #-28]	; 0xffffffe4
   1cb54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb58:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb5c:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1cb60:	str	r0, [fp, #-12]
   1cb64:	ldr	r3, [fp, #-12]
   1cb68:	cmp	r3, #0
   1cb6c:	beq	1cba0 <flatcc_json_printer_int32_enum_field@@Base+0x6c>
   1cb70:	ldr	r0, [fp, #-12]
   1cb74:	bl	152ac <main@@Base+0x390>
   1cb78:	str	r0, [fp, #-8]
   1cb7c:	ldr	r2, [fp, #-8]
   1cb80:	ldr	r3, [fp, #8]
   1cb84:	cmp	r2, r3
   1cb88:	bne	1cbb8 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   1cb8c:	ldr	r3, [fp, #-16]
   1cb90:	ldrb	r3, [r3, #28]
   1cb94:	cmp	r3, #0
   1cb98:	beq	1cbb8 <flatcc_json_printer_int32_enum_field@@Base+0x84>
   1cb9c:	b	1cc5c <flatcc_json_printer_int32_enum_field@@Base+0x128>
   1cba0:	ldr	r3, [fp, #-16]
   1cba4:	ldrb	r3, [r3, #29]
   1cba8:	cmp	r3, #0
   1cbac:	beq	1cc58 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   1cbb0:	ldr	r3, [fp, #8]
   1cbb4:	str	r3, [fp, #-8]
   1cbb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cbbc:	ldr	r3, [r3, #16]
   1cbc0:	add	r1, r3, #1
   1cbc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1cbc8:	str	r1, [r2, #16]
   1cbcc:	cmp	r3, #0
   1cbd0:	beq	1cbf0 <flatcc_json_printer_int32_enum_field@@Base+0xbc>
   1cbd4:	ldr	r3, [fp, #-16]
   1cbd8:	ldr	r3, [r3, #20]
   1cbdc:	add	r1, r3, #1
   1cbe0:	ldr	r2, [fp, #-16]
   1cbe4:	str	r1, [r2, #20]
   1cbe8:	mov	r2, #44	; 0x2c
   1cbec:	strb	r2, [r3]
   1cbf0:	ldr	r3, [fp, #4]
   1cbf4:	mov	r2, r3
   1cbf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cbfc:	ldr	r0, [fp, #-16]
   1cc00:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1cc04:	ldr	r3, [fp, #-16]
   1cc08:	ldrb	r3, [r3, #27]
   1cc0c:	cmp	r3, #0
   1cc10:	beq	1cc44 <flatcc_json_printer_int32_enum_field@@Base+0x110>
   1cc14:	ldr	r3, [fp, #-16]
   1cc18:	ldr	r3, [r3, #20]
   1cc1c:	mov	r1, r3
   1cc20:	ldr	r0, [fp, #-8]
   1cc24:	bl	1717c <main@@Base+0x2260>
   1cc28:	mov	r2, r0
   1cc2c:	ldr	r3, [fp, #-16]
   1cc30:	ldr	r3, [r3, #20]
   1cc34:	add	r2, r3, r2
   1cc38:	ldr	r3, [fp, #-16]
   1cc3c:	str	r2, [r3, #20]
   1cc40:	b	1cc5c <flatcc_json_printer_int32_enum_field@@Base+0x128>
   1cc44:	ldr	r3, [fp, #12]
   1cc48:	ldr	r1, [fp, #-8]
   1cc4c:	ldr	r0, [fp, #-16]
   1cc50:	blx	r3
   1cc54:	b	1cc5c <flatcc_json_printer_int32_enum_field@@Base+0x128>
   1cc58:	nop	{0}
   1cc5c:	sub	sp, fp, #4
   1cc60:	ldr	fp, [sp]
   1cc64:	add	sp, sp, #4
   1cc68:	pop	{pc}		; (ldr pc, [sp], #4)

0001cc6c <flatcc_json_printer_int64_enum_field@@Base>:
   1cc6c:	str	fp, [sp, #-8]!
   1cc70:	str	lr, [sp, #4]
   1cc74:	add	fp, sp, #4
   1cc78:	sub	sp, sp, #32
   1cc7c:	str	r0, [fp, #-24]	; 0xffffffe8
   1cc80:	str	r1, [fp, #-28]	; 0xffffffe4
   1cc84:	str	r2, [fp, #-32]	; 0xffffffe0
   1cc88:	str	r3, [fp, #-36]	; 0xffffffdc
   1cc8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cc90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc94:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1cc98:	str	r0, [fp, #-16]
   1cc9c:	ldr	r3, [fp, #-16]
   1cca0:	cmp	r3, #0
   1cca4:	beq	1ccdc <flatcc_json_printer_int64_enum_field@@Base+0x70>
   1cca8:	ldr	r0, [fp, #-16]
   1ccac:	bl	15310 <main@@Base+0x3f4>
   1ccb0:	strd	r0, [fp, #-12]
   1ccb4:	ldrd	r0, [fp, #-12]
   1ccb8:	ldrd	r2, [fp, #12]
   1ccbc:	cmp	r1, r3
   1ccc0:	cmpeq	r0, r2
   1ccc4:	bne	1ccf4 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   1ccc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cccc:	ldrb	r3, [r3, #28]
   1ccd0:	cmp	r3, #0
   1ccd4:	beq	1ccf4 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   1ccd8:	b	1cd98 <flatcc_json_printer_int64_enum_field@@Base+0x12c>
   1ccdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cce0:	ldrb	r3, [r3, #29]
   1cce4:	cmp	r3, #0
   1cce8:	beq	1cd94 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   1ccec:	ldrd	r2, [fp, #12]
   1ccf0:	strd	r2, [fp, #-12]
   1ccf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ccf8:	ldr	r3, [r3, #16]
   1ccfc:	add	r1, r3, #1
   1cd00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cd04:	str	r1, [r2, #16]
   1cd08:	cmp	r3, #0
   1cd0c:	beq	1cd2c <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   1cd10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd14:	ldr	r3, [r3, #20]
   1cd18:	add	r1, r3, #1
   1cd1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cd20:	str	r1, [r2, #20]
   1cd24:	mov	r2, #44	; 0x2c
   1cd28:	strb	r2, [r3]
   1cd2c:	ldr	r3, [fp, #4]
   1cd30:	mov	r2, r3
   1cd34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cd38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd3c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1cd40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd44:	ldrb	r3, [r3, #27]
   1cd48:	cmp	r3, #0
   1cd4c:	beq	1cd80 <flatcc_json_printer_int64_enum_field@@Base+0x114>
   1cd50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd54:	ldr	r3, [r3, #20]
   1cd58:	mov	r2, r3
   1cd5c:	ldrd	r0, [fp, #-12]
   1cd60:	bl	17200 <main@@Base+0x22e4>
   1cd64:	mov	r2, r0
   1cd68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd6c:	ldr	r3, [r3, #20]
   1cd70:	add	r2, r3, r2
   1cd74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cd78:	str	r2, [r3, #20]
   1cd7c:	b	1cd98 <flatcc_json_printer_int64_enum_field@@Base+0x12c>
   1cd80:	ldr	r1, [fp, #20]
   1cd84:	ldrd	r2, [fp, #-12]
   1cd88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd8c:	blx	r1
   1cd90:	b	1cd98 <flatcc_json_printer_int64_enum_field@@Base+0x12c>
   1cd94:	nop	{0}
   1cd98:	sub	sp, fp, #4
   1cd9c:	ldr	fp, [sp]
   1cda0:	add	sp, sp, #4
   1cda4:	pop	{pc}		; (ldr pc, [sp], #4)

0001cda8 <flatcc_json_printer_bool_enum_field@@Base>:
   1cda8:	str	fp, [sp, #-8]!
   1cdac:	str	lr, [sp, #4]
   1cdb0:	add	fp, sp, #4
   1cdb4:	sub	sp, sp, #24
   1cdb8:	str	r0, [fp, #-16]
   1cdbc:	str	r1, [fp, #-20]	; 0xffffffec
   1cdc0:	str	r2, [fp, #-24]	; 0xffffffe8
   1cdc4:	str	r3, [fp, #-28]	; 0xffffffe4
   1cdc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cdcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cdd0:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1cdd4:	str	r0, [fp, #-12]
   1cdd8:	ldr	r3, [fp, #-12]
   1cddc:	cmp	r3, #0
   1cde0:	beq	1ce18 <flatcc_json_printer_bool_enum_field@@Base+0x70>
   1cde4:	ldr	r0, [fp, #-12]
   1cde8:	bl	15468 <main@@Base+0x54c>
   1cdec:	mov	r3, r0
   1cdf0:	strb	r3, [fp, #-5]
   1cdf4:	ldrb	r2, [fp, #-5]
   1cdf8:	ldrb	r3, [fp, #8]
   1cdfc:	cmp	r2, r3
   1ce00:	bne	1ce30 <flatcc_json_printer_bool_enum_field@@Base+0x88>
   1ce04:	ldr	r3, [fp, #-16]
   1ce08:	ldrb	r3, [r3, #28]
   1ce0c:	cmp	r3, #0
   1ce10:	beq	1ce30 <flatcc_json_printer_bool_enum_field@@Base+0x88>
   1ce14:	b	1cedc <flatcc_json_printer_bool_enum_field@@Base+0x134>
   1ce18:	ldr	r3, [fp, #-16]
   1ce1c:	ldrb	r3, [r3, #29]
   1ce20:	cmp	r3, #0
   1ce24:	beq	1ced8 <flatcc_json_printer_bool_enum_field@@Base+0x130>
   1ce28:	ldrb	r3, [fp, #8]
   1ce2c:	strb	r3, [fp, #-5]
   1ce30:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ce34:	ldr	r3, [r3, #16]
   1ce38:	add	r1, r3, #1
   1ce3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ce40:	str	r1, [r2, #16]
   1ce44:	cmp	r3, #0
   1ce48:	beq	1ce68 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   1ce4c:	ldr	r3, [fp, #-16]
   1ce50:	ldr	r3, [r3, #20]
   1ce54:	add	r1, r3, #1
   1ce58:	ldr	r2, [fp, #-16]
   1ce5c:	str	r1, [r2, #20]
   1ce60:	mov	r2, #44	; 0x2c
   1ce64:	strb	r2, [r3]
   1ce68:	ldr	r3, [fp, #4]
   1ce6c:	mov	r2, r3
   1ce70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ce74:	ldr	r0, [fp, #-16]
   1ce78:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1ce7c:	ldr	r3, [fp, #-16]
   1ce80:	ldrb	r3, [r3, #27]
   1ce84:	cmp	r3, #0
   1ce88:	beq	1cec0 <flatcc_json_printer_bool_enum_field@@Base+0x118>
   1ce8c:	ldrb	r2, [fp, #-5]
   1ce90:	ldr	r3, [fp, #-16]
   1ce94:	ldr	r3, [r3, #20]
   1ce98:	mov	r1, r3
   1ce9c:	mov	r0, r2
   1cea0:	bl	1576c <main@@Base+0x850>
   1cea4:	mov	r2, r0
   1cea8:	ldr	r3, [fp, #-16]
   1ceac:	ldr	r3, [r3, #20]
   1ceb0:	add	r2, r3, r2
   1ceb4:	ldr	r3, [fp, #-16]
   1ceb8:	str	r2, [r3, #20]
   1cebc:	b	1cedc <flatcc_json_printer_bool_enum_field@@Base+0x134>
   1cec0:	ldrb	r2, [fp, #-5]
   1cec4:	ldr	r3, [fp, #12]
   1cec8:	mov	r1, r2
   1cecc:	ldr	r0, [fp, #-16]
   1ced0:	blx	r3
   1ced4:	b	1cedc <flatcc_json_printer_bool_enum_field@@Base+0x134>
   1ced8:	nop	{0}
   1cedc:	sub	sp, fp, #4
   1cee0:	ldr	fp, [sp]
   1cee4:	add	sp, sp, #4
   1cee8:	pop	{pc}		; (ldr pc, [sp], #4)

0001ceec <flatcc_json_printer_uint8_struct_field@@Base>:
   1ceec:	str	fp, [sp, #-8]!
   1cef0:	str	lr, [sp, #4]
   1cef4:	add	fp, sp, #4
   1cef8:	sub	sp, sp, #24
   1cefc:	str	r0, [fp, #-16]
   1cf00:	str	r1, [fp, #-20]	; 0xffffffec
   1cf04:	str	r2, [fp, #-24]	; 0xffffffe8
   1cf08:	str	r3, [fp, #-28]	; 0xffffffe4
   1cf0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cf10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf14:	add	r3, r2, r3
   1cf18:	mov	r0, r3
   1cf1c:	bl	15050 <main@@Base+0x134>
   1cf20:	mov	r3, r0
   1cf24:	strb	r3, [fp, #-5]
   1cf28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf2c:	cmp	r3, #0
   1cf30:	beq	1cf50 <flatcc_json_printer_uint8_struct_field@@Base+0x64>
   1cf34:	ldr	r3, [fp, #-16]
   1cf38:	ldr	r3, [r3, #20]
   1cf3c:	add	r1, r3, #1
   1cf40:	ldr	r2, [fp, #-16]
   1cf44:	str	r1, [r2, #20]
   1cf48:	mov	r2, #44	; 0x2c
   1cf4c:	strb	r2, [r3]
   1cf50:	ldr	r3, [fp, #8]
   1cf54:	mov	r2, r3
   1cf58:	ldr	r1, [fp, #4]
   1cf5c:	ldr	r0, [fp, #-16]
   1cf60:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1cf64:	ldr	r3, [fp, #-16]
   1cf68:	ldr	r2, [r3, #20]
   1cf6c:	ldrb	r3, [fp, #-5]
   1cf70:	mov	r1, r2
   1cf74:	mov	r0, r3
   1cf78:	bl	157e8 <main@@Base+0x8cc>
   1cf7c:	mov	r2, r0
   1cf80:	ldr	r3, [fp, #-16]
   1cf84:	ldr	r3, [r3, #20]
   1cf88:	add	r2, r3, r2
   1cf8c:	ldr	r3, [fp, #-16]
   1cf90:	str	r2, [r3, #20]
   1cf94:	nop	{0}
   1cf98:	sub	sp, fp, #4
   1cf9c:	ldr	fp, [sp]
   1cfa0:	add	sp, sp, #4
   1cfa4:	pop	{pc}		; (ldr pc, [sp], #4)

0001cfa8 <flatcc_json_printer_uint16_struct_field@@Base>:
   1cfa8:	str	fp, [sp, #-8]!
   1cfac:	str	lr, [sp, #4]
   1cfb0:	add	fp, sp, #4
   1cfb4:	sub	sp, sp, #24
   1cfb8:	str	r0, [fp, #-16]
   1cfbc:	str	r1, [fp, #-20]	; 0xffffffec
   1cfc0:	str	r2, [fp, #-24]	; 0xffffffe8
   1cfc4:	str	r3, [fp, #-28]	; 0xffffffe4
   1cfc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cfcc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cfd0:	add	r3, r2, r3
   1cfd4:	mov	r0, r3
   1cfd8:	bl	150b4 <main@@Base+0x198>
   1cfdc:	mov	r3, r0
   1cfe0:	strh	r3, [fp, #-6]
   1cfe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfe8:	cmp	r3, #0
   1cfec:	beq	1d00c <flatcc_json_printer_uint16_struct_field@@Base+0x64>
   1cff0:	ldr	r3, [fp, #-16]
   1cff4:	ldr	r3, [r3, #20]
   1cff8:	add	r1, r3, #1
   1cffc:	ldr	r2, [fp, #-16]
   1d000:	str	r1, [r2, #20]
   1d004:	mov	r2, #44	; 0x2c
   1d008:	strb	r2, [r3]
   1d00c:	ldr	r3, [fp, #8]
   1d010:	mov	r2, r3
   1d014:	ldr	r1, [fp, #4]
   1d018:	ldr	r0, [fp, #-16]
   1d01c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d020:	ldr	r3, [fp, #-16]
   1d024:	ldr	r2, [r3, #20]
   1d028:	ldrh	r3, [fp, #-6]
   1d02c:	mov	r1, r2
   1d030:	mov	r0, r3
   1d034:	bl	159b8 <main@@Base+0xa9c>
   1d038:	mov	r2, r0
   1d03c:	ldr	r3, [fp, #-16]
   1d040:	ldr	r3, [r3, #20]
   1d044:	add	r2, r3, r2
   1d048:	ldr	r3, [fp, #-16]
   1d04c:	str	r2, [r3, #20]
   1d050:	nop	{0}
   1d054:	sub	sp, fp, #4
   1d058:	ldr	fp, [sp]
   1d05c:	add	sp, sp, #4
   1d060:	pop	{pc}		; (ldr pc, [sp], #4)

0001d064 <flatcc_json_printer_uint32_struct_field@@Base>:
   1d064:	str	fp, [sp, #-8]!
   1d068:	str	lr, [sp, #4]
   1d06c:	add	fp, sp, #4
   1d070:	sub	sp, sp, #24
   1d074:	str	r0, [fp, #-16]
   1d078:	str	r1, [fp, #-20]	; 0xffffffec
   1d07c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d080:	str	r3, [fp, #-28]	; 0xffffffe4
   1d084:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d08c:	add	r3, r2, r3
   1d090:	mov	r0, r3
   1d094:	bl	15114 <main@@Base+0x1f8>
   1d098:	str	r0, [fp, #-8]
   1d09c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d0a0:	cmp	r3, #0
   1d0a4:	beq	1d0c4 <flatcc_json_printer_uint32_struct_field@@Base+0x60>
   1d0a8:	ldr	r3, [fp, #-16]
   1d0ac:	ldr	r3, [r3, #20]
   1d0b0:	add	r1, r3, #1
   1d0b4:	ldr	r2, [fp, #-16]
   1d0b8:	str	r1, [r2, #20]
   1d0bc:	mov	r2, #44	; 0x2c
   1d0c0:	strb	r2, [r3]
   1d0c4:	ldr	r3, [fp, #8]
   1d0c8:	mov	r2, r3
   1d0cc:	ldr	r1, [fp, #4]
   1d0d0:	ldr	r0, [fp, #-16]
   1d0d4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d0d8:	ldr	r3, [fp, #-16]
   1d0dc:	ldr	r3, [r3, #20]
   1d0e0:	mov	r1, r3
   1d0e4:	ldr	r0, [fp, #-8]
   1d0e8:	bl	15d04 <main@@Base+0xde8>
   1d0ec:	mov	r2, r0
   1d0f0:	ldr	r3, [fp, #-16]
   1d0f4:	ldr	r3, [r3, #20]
   1d0f8:	add	r2, r3, r2
   1d0fc:	ldr	r3, [fp, #-16]
   1d100:	str	r2, [r3, #20]
   1d104:	nop	{0}
   1d108:	sub	sp, fp, #4
   1d10c:	ldr	fp, [sp]
   1d110:	add	sp, sp, #4
   1d114:	pop	{pc}		; (ldr pc, [sp], #4)

0001d118 <flatcc_json_printer_uint64_struct_field@@Base>:
   1d118:	str	fp, [sp, #-8]!
   1d11c:	str	lr, [sp, #4]
   1d120:	add	fp, sp, #4
   1d124:	sub	sp, sp, #24
   1d128:	str	r0, [fp, #-16]
   1d12c:	str	r1, [fp, #-20]	; 0xffffffec
   1d130:	str	r2, [fp, #-24]	; 0xffffffe8
   1d134:	str	r3, [fp, #-28]	; 0xffffffe4
   1d138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d13c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d140:	add	r3, r2, r3
   1d144:	mov	r0, r3
   1d148:	bl	15178 <main@@Base+0x25c>
   1d14c:	strd	r0, [fp, #-12]
   1d150:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d154:	cmp	r3, #0
   1d158:	beq	1d178 <flatcc_json_printer_uint64_struct_field@@Base+0x60>
   1d15c:	ldr	r3, [fp, #-16]
   1d160:	ldr	r3, [r3, #20]
   1d164:	add	r1, r3, #1
   1d168:	ldr	r2, [fp, #-16]
   1d16c:	str	r1, [r2, #20]
   1d170:	mov	r2, #44	; 0x2c
   1d174:	strb	r2, [r3]
   1d178:	ldr	r3, [fp, #8]
   1d17c:	mov	r2, r3
   1d180:	ldr	r1, [fp, #4]
   1d184:	ldr	r0, [fp, #-16]
   1d188:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d18c:	ldr	r3, [fp, #-16]
   1d190:	ldr	r3, [r3, #20]
   1d194:	mov	r2, r3
   1d198:	ldrd	r0, [fp, #-12]
   1d19c:	bl	1637c <main@@Base+0x1460>
   1d1a0:	mov	r2, r0
   1d1a4:	ldr	r3, [fp, #-16]
   1d1a8:	ldr	r3, [r3, #20]
   1d1ac:	add	r2, r3, r2
   1d1b0:	ldr	r3, [fp, #-16]
   1d1b4:	str	r2, [r3, #20]
   1d1b8:	nop	{0}
   1d1bc:	sub	sp, fp, #4
   1d1c0:	ldr	fp, [sp]
   1d1c4:	add	sp, sp, #4
   1d1c8:	pop	{pc}		; (ldr pc, [sp], #4)

0001d1cc <flatcc_json_printer_int8_struct_field@@Base>:
   1d1cc:	str	fp, [sp, #-8]!
   1d1d0:	str	lr, [sp, #4]
   1d1d4:	add	fp, sp, #4
   1d1d8:	sub	sp, sp, #24
   1d1dc:	str	r0, [fp, #-16]
   1d1e0:	str	r1, [fp, #-20]	; 0xffffffec
   1d1e4:	str	r2, [fp, #-24]	; 0xffffffe8
   1d1e8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d1ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d1f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1f4:	add	r3, r2, r3
   1d1f8:	mov	r0, r3
   1d1fc:	bl	151e8 <main@@Base+0x2cc>
   1d200:	mov	r3, r0
   1d204:	strb	r3, [fp, #-5]
   1d208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d20c:	cmp	r3, #0
   1d210:	beq	1d230 <flatcc_json_printer_int8_struct_field@@Base+0x64>
   1d214:	ldr	r3, [fp, #-16]
   1d218:	ldr	r3, [r3, #20]
   1d21c:	add	r1, r3, #1
   1d220:	ldr	r2, [fp, #-16]
   1d224:	str	r1, [r2, #20]
   1d228:	mov	r2, #44	; 0x2c
   1d22c:	strb	r2, [r3]
   1d230:	ldr	r3, [fp, #8]
   1d234:	mov	r2, r3
   1d238:	ldr	r1, [fp, #4]
   1d23c:	ldr	r0, [fp, #-16]
   1d240:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d244:	ldr	r3, [fp, #-16]
   1d248:	ldr	r2, [r3, #20]
   1d24c:	ldrsb	r3, [fp, #-5]
   1d250:	mov	r1, r2
   1d254:	mov	r0, r3
   1d258:	bl	17064 <main@@Base+0x2148>
   1d25c:	mov	r2, r0
   1d260:	ldr	r3, [fp, #-16]
   1d264:	ldr	r3, [r3, #20]
   1d268:	add	r2, r3, r2
   1d26c:	ldr	r3, [fp, #-16]
   1d270:	str	r2, [r3, #20]
   1d274:	nop	{0}
   1d278:	sub	sp, fp, #4
   1d27c:	ldr	fp, [sp]
   1d280:	add	sp, sp, #4
   1d284:	pop	{pc}		; (ldr pc, [sp], #4)

0001d288 <flatcc_json_printer_int16_struct_field@@Base>:
   1d288:	str	fp, [sp, #-8]!
   1d28c:	str	lr, [sp, #4]
   1d290:	add	fp, sp, #4
   1d294:	sub	sp, sp, #24
   1d298:	str	r0, [fp, #-16]
   1d29c:	str	r1, [fp, #-20]	; 0xffffffec
   1d2a0:	str	r2, [fp, #-24]	; 0xffffffe8
   1d2a4:	str	r3, [fp, #-28]	; 0xffffffe4
   1d2a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d2ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2b0:	add	r3, r2, r3
   1d2b4:	mov	r0, r3
   1d2b8:	bl	1524c <main@@Base+0x330>
   1d2bc:	mov	r3, r0
   1d2c0:	strh	r3, [fp, #-6]
   1d2c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d2c8:	cmp	r3, #0
   1d2cc:	beq	1d2ec <flatcc_json_printer_int16_struct_field@@Base+0x64>
   1d2d0:	ldr	r3, [fp, #-16]
   1d2d4:	ldr	r3, [r3, #20]
   1d2d8:	add	r1, r3, #1
   1d2dc:	ldr	r2, [fp, #-16]
   1d2e0:	str	r1, [r2, #20]
   1d2e4:	mov	r2, #44	; 0x2c
   1d2e8:	strb	r2, [r3]
   1d2ec:	ldr	r3, [fp, #8]
   1d2f0:	mov	r2, r3
   1d2f4:	ldr	r1, [fp, #4]
   1d2f8:	ldr	r0, [fp, #-16]
   1d2fc:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d300:	ldr	r3, [fp, #-16]
   1d304:	ldr	r2, [r3, #20]
   1d308:	ldrsh	r3, [fp, #-6]
   1d30c:	mov	r1, r2
   1d310:	mov	r0, r3
   1d314:	bl	170f0 <main@@Base+0x21d4>
   1d318:	mov	r2, r0
   1d31c:	ldr	r3, [fp, #-16]
   1d320:	ldr	r3, [r3, #20]
   1d324:	add	r2, r3, r2
   1d328:	ldr	r3, [fp, #-16]
   1d32c:	str	r2, [r3, #20]
   1d330:	nop	{0}
   1d334:	sub	sp, fp, #4
   1d338:	ldr	fp, [sp]
   1d33c:	add	sp, sp, #4
   1d340:	pop	{pc}		; (ldr pc, [sp], #4)

0001d344 <flatcc_json_printer_int32_struct_field@@Base>:
   1d344:	str	fp, [sp, #-8]!
   1d348:	str	lr, [sp, #4]
   1d34c:	add	fp, sp, #4
   1d350:	sub	sp, sp, #24
   1d354:	str	r0, [fp, #-16]
   1d358:	str	r1, [fp, #-20]	; 0xffffffec
   1d35c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d360:	str	r3, [fp, #-28]	; 0xffffffe4
   1d364:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d36c:	add	r3, r2, r3
   1d370:	mov	r0, r3
   1d374:	bl	152ac <main@@Base+0x390>
   1d378:	str	r0, [fp, #-8]
   1d37c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d380:	cmp	r3, #0
   1d384:	beq	1d3a4 <flatcc_json_printer_int32_struct_field@@Base+0x60>
   1d388:	ldr	r3, [fp, #-16]
   1d38c:	ldr	r3, [r3, #20]
   1d390:	add	r1, r3, #1
   1d394:	ldr	r2, [fp, #-16]
   1d398:	str	r1, [r2, #20]
   1d39c:	mov	r2, #44	; 0x2c
   1d3a0:	strb	r2, [r3]
   1d3a4:	ldr	r3, [fp, #8]
   1d3a8:	mov	r2, r3
   1d3ac:	ldr	r1, [fp, #4]
   1d3b0:	ldr	r0, [fp, #-16]
   1d3b4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d3b8:	ldr	r3, [fp, #-16]
   1d3bc:	ldr	r3, [r3, #20]
   1d3c0:	mov	r1, r3
   1d3c4:	ldr	r0, [fp, #-8]
   1d3c8:	bl	1717c <main@@Base+0x2260>
   1d3cc:	mov	r2, r0
   1d3d0:	ldr	r3, [fp, #-16]
   1d3d4:	ldr	r3, [r3, #20]
   1d3d8:	add	r2, r3, r2
   1d3dc:	ldr	r3, [fp, #-16]
   1d3e0:	str	r2, [r3, #20]
   1d3e4:	nop	{0}
   1d3e8:	sub	sp, fp, #4
   1d3ec:	ldr	fp, [sp]
   1d3f0:	add	sp, sp, #4
   1d3f4:	pop	{pc}		; (ldr pc, [sp], #4)

0001d3f8 <flatcc_json_printer_int64_struct_field@@Base>:
   1d3f8:	str	fp, [sp, #-8]!
   1d3fc:	str	lr, [sp, #4]
   1d400:	add	fp, sp, #4
   1d404:	sub	sp, sp, #24
   1d408:	str	r0, [fp, #-16]
   1d40c:	str	r1, [fp, #-20]	; 0xffffffec
   1d410:	str	r2, [fp, #-24]	; 0xffffffe8
   1d414:	str	r3, [fp, #-28]	; 0xffffffe4
   1d418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d41c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d420:	add	r3, r2, r3
   1d424:	mov	r0, r3
   1d428:	bl	15310 <main@@Base+0x3f4>
   1d42c:	strd	r0, [fp, #-12]
   1d430:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d434:	cmp	r3, #0
   1d438:	beq	1d458 <flatcc_json_printer_int64_struct_field@@Base+0x60>
   1d43c:	ldr	r3, [fp, #-16]
   1d440:	ldr	r3, [r3, #20]
   1d444:	add	r1, r3, #1
   1d448:	ldr	r2, [fp, #-16]
   1d44c:	str	r1, [r2, #20]
   1d450:	mov	r2, #44	; 0x2c
   1d454:	strb	r2, [r3]
   1d458:	ldr	r3, [fp, #8]
   1d45c:	mov	r2, r3
   1d460:	ldr	r1, [fp, #4]
   1d464:	ldr	r0, [fp, #-16]
   1d468:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d46c:	ldr	r3, [fp, #-16]
   1d470:	ldr	r3, [r3, #20]
   1d474:	mov	r2, r3
   1d478:	ldrd	r0, [fp, #-12]
   1d47c:	bl	17200 <main@@Base+0x22e4>
   1d480:	mov	r2, r0
   1d484:	ldr	r3, [fp, #-16]
   1d488:	ldr	r3, [r3, #20]
   1d48c:	add	r2, r3, r2
   1d490:	ldr	r3, [fp, #-16]
   1d494:	str	r2, [r3, #20]
   1d498:	nop	{0}
   1d49c:	sub	sp, fp, #4
   1d4a0:	ldr	fp, [sp]
   1d4a4:	add	sp, sp, #4
   1d4a8:	pop	{pc}		; (ldr pc, [sp], #4)

0001d4ac <flatcc_json_printer_bool_struct_field@@Base>:
   1d4ac:	str	fp, [sp, #-8]!
   1d4b0:	str	lr, [sp, #4]
   1d4b4:	add	fp, sp, #4
   1d4b8:	sub	sp, sp, #24
   1d4bc:	str	r0, [fp, #-16]
   1d4c0:	str	r1, [fp, #-20]	; 0xffffffec
   1d4c4:	str	r2, [fp, #-24]	; 0xffffffe8
   1d4c8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d4cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d4d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d4d4:	add	r3, r2, r3
   1d4d8:	mov	r0, r3
   1d4dc:	bl	15468 <main@@Base+0x54c>
   1d4e0:	mov	r3, r0
   1d4e4:	strb	r3, [fp, #-5]
   1d4e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d4ec:	cmp	r3, #0
   1d4f0:	beq	1d510 <flatcc_json_printer_bool_struct_field@@Base+0x64>
   1d4f4:	ldr	r3, [fp, #-16]
   1d4f8:	ldr	r3, [r3, #20]
   1d4fc:	add	r1, r3, #1
   1d500:	ldr	r2, [fp, #-16]
   1d504:	str	r1, [r2, #20]
   1d508:	mov	r2, #44	; 0x2c
   1d50c:	strb	r2, [r3]
   1d510:	ldr	r3, [fp, #8]
   1d514:	mov	r2, r3
   1d518:	ldr	r1, [fp, #4]
   1d51c:	ldr	r0, [fp, #-16]
   1d520:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d524:	ldrb	r2, [fp, #-5]
   1d528:	ldr	r3, [fp, #-16]
   1d52c:	ldr	r3, [r3, #20]
   1d530:	mov	r1, r3
   1d534:	mov	r0, r2
   1d538:	bl	1576c <main@@Base+0x850>
   1d53c:	mov	r2, r0
   1d540:	ldr	r3, [fp, #-16]
   1d544:	ldr	r3, [r3, #20]
   1d548:	add	r2, r3, r2
   1d54c:	ldr	r3, [fp, #-16]
   1d550:	str	r2, [r3, #20]
   1d554:	nop	{0}
   1d558:	sub	sp, fp, #4
   1d55c:	ldr	fp, [sp]
   1d560:	add	sp, sp, #4
   1d564:	pop	{pc}		; (ldr pc, [sp], #4)

0001d568 <flatcc_json_printer_float_struct_field@@Base>:
   1d568:	str	fp, [sp, #-8]!
   1d56c:	str	lr, [sp, #4]
   1d570:	add	fp, sp, #4
   1d574:	sub	sp, sp, #24
   1d578:	str	r0, [fp, #-16]
   1d57c:	str	r1, [fp, #-20]	; 0xffffffec
   1d580:	str	r2, [fp, #-24]	; 0xffffffe8
   1d584:	str	r3, [fp, #-28]	; 0xffffffe4
   1d588:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d58c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d590:	add	r3, r2, r3
   1d594:	mov	r0, r3
   1d598:	bl	15390 <main@@Base+0x474>
   1d59c:	vstr	s0, [fp, #-8]
   1d5a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d5a4:	cmp	r3, #0
   1d5a8:	beq	1d5c8 <flatcc_json_printer_float_struct_field@@Base+0x60>
   1d5ac:	ldr	r3, [fp, #-16]
   1d5b0:	ldr	r3, [r3, #20]
   1d5b4:	add	r1, r3, #1
   1d5b8:	ldr	r2, [fp, #-16]
   1d5bc:	str	r1, [r2, #20]
   1d5c0:	mov	r2, #44	; 0x2c
   1d5c4:	strb	r2, [r3]
   1d5c8:	ldr	r3, [fp, #8]
   1d5cc:	mov	r2, r3
   1d5d0:	ldr	r1, [fp, #4]
   1d5d4:	ldr	r0, [fp, #-16]
   1d5d8:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d5dc:	vldr	s15, [fp, #-8]
   1d5e0:	vcvt.f64.f32	d7, s15
   1d5e4:	ldr	r3, [fp, #-16]
   1d5e8:	ldr	r3, [r3, #20]
   1d5ec:	mov	r0, r3
   1d5f0:	vmov.f64	d0, d7
   1d5f4:	bl	18f48 <main@@Base+0x402c>
   1d5f8:	mov	r2, r0
   1d5fc:	ldr	r3, [fp, #-16]
   1d600:	ldr	r3, [r3, #20]
   1d604:	add	r2, r3, r2
   1d608:	ldr	r3, [fp, #-16]
   1d60c:	str	r2, [r3, #20]
   1d610:	nop	{0}
   1d614:	sub	sp, fp, #4
   1d618:	ldr	fp, [sp]
   1d61c:	add	sp, sp, #4
   1d620:	pop	{pc}		; (ldr pc, [sp], #4)

0001d624 <flatcc_json_printer_double_struct_field@@Base>:
   1d624:	str	fp, [sp, #-8]!
   1d628:	str	lr, [sp, #4]
   1d62c:	add	fp, sp, #4
   1d630:	sub	sp, sp, #24
   1d634:	str	r0, [fp, #-16]
   1d638:	str	r1, [fp, #-20]	; 0xffffffec
   1d63c:	str	r2, [fp, #-24]	; 0xffffffe8
   1d640:	str	r3, [fp, #-28]	; 0xffffffe4
   1d644:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d648:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d64c:	add	r3, r2, r3
   1d650:	mov	r0, r3
   1d654:	bl	15404 <main@@Base+0x4e8>
   1d658:	vstr	d0, [fp, #-12]
   1d65c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d660:	cmp	r3, #0
   1d664:	beq	1d684 <flatcc_json_printer_double_struct_field@@Base+0x60>
   1d668:	ldr	r3, [fp, #-16]
   1d66c:	ldr	r3, [r3, #20]
   1d670:	add	r1, r3, #1
   1d674:	ldr	r2, [fp, #-16]
   1d678:	str	r1, [r2, #20]
   1d67c:	mov	r2, #44	; 0x2c
   1d680:	strb	r2, [r3]
   1d684:	ldr	r3, [fp, #8]
   1d688:	mov	r2, r3
   1d68c:	ldr	r1, [fp, #4]
   1d690:	ldr	r0, [fp, #-16]
   1d694:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d698:	ldr	r3, [fp, #-16]
   1d69c:	ldr	r3, [r3, #20]
   1d6a0:	mov	r0, r3
   1d6a4:	vldr	d0, [fp, #-12]
   1d6a8:	bl	18f48 <main@@Base+0x402c>
   1d6ac:	mov	r2, r0
   1d6b0:	ldr	r3, [fp, #-16]
   1d6b4:	ldr	r3, [r3, #20]
   1d6b8:	add	r2, r3, r2
   1d6bc:	ldr	r3, [fp, #-16]
   1d6c0:	str	r2, [r3, #20]
   1d6c4:	nop	{0}
   1d6c8:	sub	sp, fp, #4
   1d6cc:	ldr	fp, [sp]
   1d6d0:	add	sp, sp, #4
   1d6d4:	pop	{pc}		; (ldr pc, [sp], #4)

0001d6d8 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   1d6d8:	str	fp, [sp, #-8]!
   1d6dc:	str	lr, [sp, #4]
   1d6e0:	add	fp, sp, #4
   1d6e4:	sub	sp, sp, #24
   1d6e8:	str	r0, [fp, #-16]
   1d6ec:	str	r1, [fp, #-20]	; 0xffffffec
   1d6f0:	str	r2, [fp, #-24]	; 0xffffffe8
   1d6f4:	str	r3, [fp, #-28]	; 0xffffffe4
   1d6f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d6fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d700:	add	r3, r2, r3
   1d704:	mov	r0, r3
   1d708:	bl	15050 <main@@Base+0x134>
   1d70c:	mov	r3, r0
   1d710:	strb	r3, [fp, #-5]
   1d714:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d718:	cmp	r3, #0
   1d71c:	beq	1d73c <flatcc_json_printer_uint8_enum_struct_field@@Base+0x64>
   1d720:	ldr	r3, [fp, #-16]
   1d724:	ldr	r3, [r3, #20]
   1d728:	add	r1, r3, #1
   1d72c:	ldr	r2, [fp, #-16]
   1d730:	str	r1, [r2, #20]
   1d734:	mov	r2, #44	; 0x2c
   1d738:	strb	r2, [r3]
   1d73c:	ldr	r3, [fp, #8]
   1d740:	mov	r2, r3
   1d744:	ldr	r1, [fp, #4]
   1d748:	ldr	r0, [fp, #-16]
   1d74c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d750:	ldr	r3, [fp, #-16]
   1d754:	ldrb	r3, [r3, #27]
   1d758:	cmp	r3, #0
   1d75c:	beq	1d794 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xbc>
   1d760:	ldr	r3, [fp, #-16]
   1d764:	ldr	r2, [r3, #20]
   1d768:	ldrb	r3, [fp, #-5]
   1d76c:	mov	r1, r2
   1d770:	mov	r0, r3
   1d774:	bl	157e8 <main@@Base+0x8cc>
   1d778:	mov	r2, r0
   1d77c:	ldr	r3, [fp, #-16]
   1d780:	ldr	r3, [r3, #20]
   1d784:	add	r2, r3, r2
   1d788:	ldr	r3, [fp, #-16]
   1d78c:	str	r2, [r3, #20]
   1d790:	b	1d7a8 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xd0>
   1d794:	ldrb	r2, [fp, #-5]
   1d798:	ldr	r3, [fp, #12]
   1d79c:	mov	r1, r2
   1d7a0:	ldr	r0, [fp, #-16]
   1d7a4:	blx	r3
   1d7a8:	nop	{0}
   1d7ac:	sub	sp, fp, #4
   1d7b0:	ldr	fp, [sp]
   1d7b4:	add	sp, sp, #4
   1d7b8:	pop	{pc}		; (ldr pc, [sp], #4)

0001d7bc <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   1d7bc:	str	fp, [sp, #-8]!
   1d7c0:	str	lr, [sp, #4]
   1d7c4:	add	fp, sp, #4
   1d7c8:	sub	sp, sp, #24
   1d7cc:	str	r0, [fp, #-16]
   1d7d0:	str	r1, [fp, #-20]	; 0xffffffec
   1d7d4:	str	r2, [fp, #-24]	; 0xffffffe8
   1d7d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1d7dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d7e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7e4:	add	r3, r2, r3
   1d7e8:	mov	r0, r3
   1d7ec:	bl	150b4 <main@@Base+0x198>
   1d7f0:	mov	r3, r0
   1d7f4:	strh	r3, [fp, #-6]
   1d7f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d7fc:	cmp	r3, #0
   1d800:	beq	1d820 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x64>
   1d804:	ldr	r3, [fp, #-16]
   1d808:	ldr	r3, [r3, #20]
   1d80c:	add	r1, r3, #1
   1d810:	ldr	r2, [fp, #-16]
   1d814:	str	r1, [r2, #20]
   1d818:	mov	r2, #44	; 0x2c
   1d81c:	strb	r2, [r3]
   1d820:	ldr	r3, [fp, #8]
   1d824:	mov	r2, r3
   1d828:	ldr	r1, [fp, #4]
   1d82c:	ldr	r0, [fp, #-16]
   1d830:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d834:	ldr	r3, [fp, #-16]
   1d838:	ldrb	r3, [r3, #27]
   1d83c:	cmp	r3, #0
   1d840:	beq	1d878 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xbc>
   1d844:	ldr	r3, [fp, #-16]
   1d848:	ldr	r2, [r3, #20]
   1d84c:	ldrh	r3, [fp, #-6]
   1d850:	mov	r1, r2
   1d854:	mov	r0, r3
   1d858:	bl	159b8 <main@@Base+0xa9c>
   1d85c:	mov	r2, r0
   1d860:	ldr	r3, [fp, #-16]
   1d864:	ldr	r3, [r3, #20]
   1d868:	add	r2, r3, r2
   1d86c:	ldr	r3, [fp, #-16]
   1d870:	str	r2, [r3, #20]
   1d874:	b	1d88c <flatcc_json_printer_uint16_enum_struct_field@@Base+0xd0>
   1d878:	ldrh	r2, [fp, #-6]
   1d87c:	ldr	r3, [fp, #12]
   1d880:	mov	r1, r2
   1d884:	ldr	r0, [fp, #-16]
   1d888:	blx	r3
   1d88c:	nop	{0}
   1d890:	sub	sp, fp, #4
   1d894:	ldr	fp, [sp]
   1d898:	add	sp, sp, #4
   1d89c:	pop	{pc}		; (ldr pc, [sp], #4)

0001d8a0 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   1d8a0:	str	fp, [sp, #-8]!
   1d8a4:	str	lr, [sp, #4]
   1d8a8:	add	fp, sp, #4
   1d8ac:	sub	sp, sp, #24
   1d8b0:	str	r0, [fp, #-16]
   1d8b4:	str	r1, [fp, #-20]	; 0xffffffec
   1d8b8:	str	r2, [fp, #-24]	; 0xffffffe8
   1d8bc:	str	r3, [fp, #-28]	; 0xffffffe4
   1d8c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8c8:	add	r3, r2, r3
   1d8cc:	mov	r0, r3
   1d8d0:	bl	15114 <main@@Base+0x1f8>
   1d8d4:	str	r0, [fp, #-8]
   1d8d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8dc:	cmp	r3, #0
   1d8e0:	beq	1d900 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x60>
   1d8e4:	ldr	r3, [fp, #-16]
   1d8e8:	ldr	r3, [r3, #20]
   1d8ec:	add	r1, r3, #1
   1d8f0:	ldr	r2, [fp, #-16]
   1d8f4:	str	r1, [r2, #20]
   1d8f8:	mov	r2, #44	; 0x2c
   1d8fc:	strb	r2, [r3]
   1d900:	ldr	r3, [fp, #8]
   1d904:	mov	r2, r3
   1d908:	ldr	r1, [fp, #4]
   1d90c:	ldr	r0, [fp, #-16]
   1d910:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d914:	ldr	r3, [fp, #-16]
   1d918:	ldrb	r3, [r3, #27]
   1d91c:	cmp	r3, #0
   1d920:	beq	1d954 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb4>
   1d924:	ldr	r3, [fp, #-16]
   1d928:	ldr	r3, [r3, #20]
   1d92c:	mov	r1, r3
   1d930:	ldr	r0, [fp, #-8]
   1d934:	bl	15d04 <main@@Base+0xde8>
   1d938:	mov	r2, r0
   1d93c:	ldr	r3, [fp, #-16]
   1d940:	ldr	r3, [r3, #20]
   1d944:	add	r2, r3, r2
   1d948:	ldr	r3, [fp, #-16]
   1d94c:	str	r2, [r3, #20]
   1d950:	b	1d964 <flatcc_json_printer_uint32_enum_struct_field@@Base+0xc4>
   1d954:	ldr	r3, [fp, #12]
   1d958:	ldr	r1, [fp, #-8]
   1d95c:	ldr	r0, [fp, #-16]
   1d960:	blx	r3
   1d964:	nop	{0}
   1d968:	sub	sp, fp, #4
   1d96c:	ldr	fp, [sp]
   1d970:	add	sp, sp, #4
   1d974:	pop	{pc}		; (ldr pc, [sp], #4)

0001d978 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   1d978:	str	fp, [sp, #-8]!
   1d97c:	str	lr, [sp, #4]
   1d980:	add	fp, sp, #4
   1d984:	sub	sp, sp, #24
   1d988:	str	r0, [fp, #-16]
   1d98c:	str	r1, [fp, #-20]	; 0xffffffec
   1d990:	str	r2, [fp, #-24]	; 0xffffffe8
   1d994:	str	r3, [fp, #-28]	; 0xffffffe4
   1d998:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d99c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d9a0:	add	r3, r2, r3
   1d9a4:	mov	r0, r3
   1d9a8:	bl	15178 <main@@Base+0x25c>
   1d9ac:	strd	r0, [fp, #-12]
   1d9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d9b4:	cmp	r3, #0
   1d9b8:	beq	1d9d8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x60>
   1d9bc:	ldr	r3, [fp, #-16]
   1d9c0:	ldr	r3, [r3, #20]
   1d9c4:	add	r1, r3, #1
   1d9c8:	ldr	r2, [fp, #-16]
   1d9cc:	str	r1, [r2, #20]
   1d9d0:	mov	r2, #44	; 0x2c
   1d9d4:	strb	r2, [r3]
   1d9d8:	ldr	r3, [fp, #8]
   1d9dc:	mov	r2, r3
   1d9e0:	ldr	r1, [fp, #4]
   1d9e4:	ldr	r0, [fp, #-16]
   1d9e8:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1d9ec:	ldr	r3, [fp, #-16]
   1d9f0:	ldrb	r3, [r3, #27]
   1d9f4:	cmp	r3, #0
   1d9f8:	beq	1da2c <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb4>
   1d9fc:	ldr	r3, [fp, #-16]
   1da00:	ldr	r3, [r3, #20]
   1da04:	mov	r2, r3
   1da08:	ldrd	r0, [fp, #-12]
   1da0c:	bl	1637c <main@@Base+0x1460>
   1da10:	mov	r2, r0
   1da14:	ldr	r3, [fp, #-16]
   1da18:	ldr	r3, [r3, #20]
   1da1c:	add	r2, r3, r2
   1da20:	ldr	r3, [fp, #-16]
   1da24:	str	r2, [r3, #20]
   1da28:	b	1da3c <flatcc_json_printer_uint64_enum_struct_field@@Base+0xc4>
   1da2c:	ldr	r1, [fp, #12]
   1da30:	ldrd	r2, [fp, #-12]
   1da34:	ldr	r0, [fp, #-16]
   1da38:	blx	r1
   1da3c:	nop	{0}
   1da40:	sub	sp, fp, #4
   1da44:	ldr	fp, [sp]
   1da48:	add	sp, sp, #4
   1da4c:	pop	{pc}		; (ldr pc, [sp], #4)

0001da50 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   1da50:	str	fp, [sp, #-8]!
   1da54:	str	lr, [sp, #4]
   1da58:	add	fp, sp, #4
   1da5c:	sub	sp, sp, #24
   1da60:	str	r0, [fp, #-16]
   1da64:	str	r1, [fp, #-20]	; 0xffffffec
   1da68:	str	r2, [fp, #-24]	; 0xffffffe8
   1da6c:	str	r3, [fp, #-28]	; 0xffffffe4
   1da70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1da78:	add	r3, r2, r3
   1da7c:	mov	r0, r3
   1da80:	bl	151e8 <main@@Base+0x2cc>
   1da84:	mov	r3, r0
   1da88:	strb	r3, [fp, #-5]
   1da8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da90:	cmp	r3, #0
   1da94:	beq	1dab4 <flatcc_json_printer_int8_enum_struct_field@@Base+0x64>
   1da98:	ldr	r3, [fp, #-16]
   1da9c:	ldr	r3, [r3, #20]
   1daa0:	add	r1, r3, #1
   1daa4:	ldr	r2, [fp, #-16]
   1daa8:	str	r1, [r2, #20]
   1daac:	mov	r2, #44	; 0x2c
   1dab0:	strb	r2, [r3]
   1dab4:	ldr	r3, [fp, #8]
   1dab8:	mov	r2, r3
   1dabc:	ldr	r1, [fp, #4]
   1dac0:	ldr	r0, [fp, #-16]
   1dac4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1dac8:	ldr	r3, [fp, #-16]
   1dacc:	ldrb	r3, [r3, #27]
   1dad0:	cmp	r3, #0
   1dad4:	beq	1db0c <flatcc_json_printer_int8_enum_struct_field@@Base+0xbc>
   1dad8:	ldr	r3, [fp, #-16]
   1dadc:	ldr	r2, [r3, #20]
   1dae0:	ldrsb	r3, [fp, #-5]
   1dae4:	mov	r1, r2
   1dae8:	mov	r0, r3
   1daec:	bl	17064 <main@@Base+0x2148>
   1daf0:	mov	r2, r0
   1daf4:	ldr	r3, [fp, #-16]
   1daf8:	ldr	r3, [r3, #20]
   1dafc:	add	r2, r3, r2
   1db00:	ldr	r3, [fp, #-16]
   1db04:	str	r2, [r3, #20]
   1db08:	b	1db20 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd0>
   1db0c:	ldrsb	r2, [fp, #-5]
   1db10:	ldr	r3, [fp, #12]
   1db14:	mov	r1, r2
   1db18:	ldr	r0, [fp, #-16]
   1db1c:	blx	r3
   1db20:	nop	{0}
   1db24:	sub	sp, fp, #4
   1db28:	ldr	fp, [sp]
   1db2c:	add	sp, sp, #4
   1db30:	pop	{pc}		; (ldr pc, [sp], #4)

0001db34 <flatcc_json_printer_int16_enum_struct_field@@Base>:
   1db34:	str	fp, [sp, #-8]!
   1db38:	str	lr, [sp, #4]
   1db3c:	add	fp, sp, #4
   1db40:	sub	sp, sp, #24
   1db44:	str	r0, [fp, #-16]
   1db48:	str	r1, [fp, #-20]	; 0xffffffec
   1db4c:	str	r2, [fp, #-24]	; 0xffffffe8
   1db50:	str	r3, [fp, #-28]	; 0xffffffe4
   1db54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1db5c:	add	r3, r2, r3
   1db60:	mov	r0, r3
   1db64:	bl	1524c <main@@Base+0x330>
   1db68:	mov	r3, r0
   1db6c:	strh	r3, [fp, #-6]
   1db70:	ldr	r3, [fp, #-20]	; 0xffffffec
   1db74:	cmp	r3, #0
   1db78:	beq	1db98 <flatcc_json_printer_int16_enum_struct_field@@Base+0x64>
   1db7c:	ldr	r3, [fp, #-16]
   1db80:	ldr	r3, [r3, #20]
   1db84:	add	r1, r3, #1
   1db88:	ldr	r2, [fp, #-16]
   1db8c:	str	r1, [r2, #20]
   1db90:	mov	r2, #44	; 0x2c
   1db94:	strb	r2, [r3]
   1db98:	ldr	r3, [fp, #8]
   1db9c:	mov	r2, r3
   1dba0:	ldr	r1, [fp, #4]
   1dba4:	ldr	r0, [fp, #-16]
   1dba8:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1dbac:	ldr	r3, [fp, #-16]
   1dbb0:	ldrb	r3, [r3, #27]
   1dbb4:	cmp	r3, #0
   1dbb8:	beq	1dbf0 <flatcc_json_printer_int16_enum_struct_field@@Base+0xbc>
   1dbbc:	ldr	r3, [fp, #-16]
   1dbc0:	ldr	r2, [r3, #20]
   1dbc4:	ldrsh	r3, [fp, #-6]
   1dbc8:	mov	r1, r2
   1dbcc:	mov	r0, r3
   1dbd0:	bl	170f0 <main@@Base+0x21d4>
   1dbd4:	mov	r2, r0
   1dbd8:	ldr	r3, [fp, #-16]
   1dbdc:	ldr	r3, [r3, #20]
   1dbe0:	add	r2, r3, r2
   1dbe4:	ldr	r3, [fp, #-16]
   1dbe8:	str	r2, [r3, #20]
   1dbec:	b	1dc04 <flatcc_json_printer_int16_enum_struct_field@@Base+0xd0>
   1dbf0:	ldrsh	r2, [fp, #-6]
   1dbf4:	ldr	r3, [fp, #12]
   1dbf8:	mov	r1, r2
   1dbfc:	ldr	r0, [fp, #-16]
   1dc00:	blx	r3
   1dc04:	nop	{0}
   1dc08:	sub	sp, fp, #4
   1dc0c:	ldr	fp, [sp]
   1dc10:	add	sp, sp, #4
   1dc14:	pop	{pc}		; (ldr pc, [sp], #4)

0001dc18 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   1dc18:	str	fp, [sp, #-8]!
   1dc1c:	str	lr, [sp, #4]
   1dc20:	add	fp, sp, #4
   1dc24:	sub	sp, sp, #24
   1dc28:	str	r0, [fp, #-16]
   1dc2c:	str	r1, [fp, #-20]	; 0xffffffec
   1dc30:	str	r2, [fp, #-24]	; 0xffffffe8
   1dc34:	str	r3, [fp, #-28]	; 0xffffffe4
   1dc38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dc3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dc40:	add	r3, r2, r3
   1dc44:	mov	r0, r3
   1dc48:	bl	152ac <main@@Base+0x390>
   1dc4c:	str	r0, [fp, #-8]
   1dc50:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dc54:	cmp	r3, #0
   1dc58:	beq	1dc78 <flatcc_json_printer_int32_enum_struct_field@@Base+0x60>
   1dc5c:	ldr	r3, [fp, #-16]
   1dc60:	ldr	r3, [r3, #20]
   1dc64:	add	r1, r3, #1
   1dc68:	ldr	r2, [fp, #-16]
   1dc6c:	str	r1, [r2, #20]
   1dc70:	mov	r2, #44	; 0x2c
   1dc74:	strb	r2, [r3]
   1dc78:	ldr	r3, [fp, #8]
   1dc7c:	mov	r2, r3
   1dc80:	ldr	r1, [fp, #4]
   1dc84:	ldr	r0, [fp, #-16]
   1dc88:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1dc8c:	ldr	r3, [fp, #-16]
   1dc90:	ldrb	r3, [r3, #27]
   1dc94:	cmp	r3, #0
   1dc98:	beq	1dccc <flatcc_json_printer_int32_enum_struct_field@@Base+0xb4>
   1dc9c:	ldr	r3, [fp, #-16]
   1dca0:	ldr	r3, [r3, #20]
   1dca4:	mov	r1, r3
   1dca8:	ldr	r0, [fp, #-8]
   1dcac:	bl	1717c <main@@Base+0x2260>
   1dcb0:	mov	r2, r0
   1dcb4:	ldr	r3, [fp, #-16]
   1dcb8:	ldr	r3, [r3, #20]
   1dcbc:	add	r2, r3, r2
   1dcc0:	ldr	r3, [fp, #-16]
   1dcc4:	str	r2, [r3, #20]
   1dcc8:	b	1dcdc <flatcc_json_printer_int32_enum_struct_field@@Base+0xc4>
   1dccc:	ldr	r3, [fp, #12]
   1dcd0:	ldr	r1, [fp, #-8]
   1dcd4:	ldr	r0, [fp, #-16]
   1dcd8:	blx	r3
   1dcdc:	nop	{0}
   1dce0:	sub	sp, fp, #4
   1dce4:	ldr	fp, [sp]
   1dce8:	add	sp, sp, #4
   1dcec:	pop	{pc}		; (ldr pc, [sp], #4)

0001dcf0 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   1dcf0:	str	fp, [sp, #-8]!
   1dcf4:	str	lr, [sp, #4]
   1dcf8:	add	fp, sp, #4
   1dcfc:	sub	sp, sp, #24
   1dd00:	str	r0, [fp, #-16]
   1dd04:	str	r1, [fp, #-20]	; 0xffffffec
   1dd08:	str	r2, [fp, #-24]	; 0xffffffe8
   1dd0c:	str	r3, [fp, #-28]	; 0xffffffe4
   1dd10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dd14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dd18:	add	r3, r2, r3
   1dd1c:	mov	r0, r3
   1dd20:	bl	15310 <main@@Base+0x3f4>
   1dd24:	strd	r0, [fp, #-12]
   1dd28:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dd2c:	cmp	r3, #0
   1dd30:	beq	1dd50 <flatcc_json_printer_int64_enum_struct_field@@Base+0x60>
   1dd34:	ldr	r3, [fp, #-16]
   1dd38:	ldr	r3, [r3, #20]
   1dd3c:	add	r1, r3, #1
   1dd40:	ldr	r2, [fp, #-16]
   1dd44:	str	r1, [r2, #20]
   1dd48:	mov	r2, #44	; 0x2c
   1dd4c:	strb	r2, [r3]
   1dd50:	ldr	r3, [fp, #8]
   1dd54:	mov	r2, r3
   1dd58:	ldr	r1, [fp, #4]
   1dd5c:	ldr	r0, [fp, #-16]
   1dd60:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1dd64:	ldr	r3, [fp, #-16]
   1dd68:	ldrb	r3, [r3, #27]
   1dd6c:	cmp	r3, #0
   1dd70:	beq	1dda4 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb4>
   1dd74:	ldr	r3, [fp, #-16]
   1dd78:	ldr	r3, [r3, #20]
   1dd7c:	mov	r2, r3
   1dd80:	ldrd	r0, [fp, #-12]
   1dd84:	bl	17200 <main@@Base+0x22e4>
   1dd88:	mov	r2, r0
   1dd8c:	ldr	r3, [fp, #-16]
   1dd90:	ldr	r3, [r3, #20]
   1dd94:	add	r2, r3, r2
   1dd98:	ldr	r3, [fp, #-16]
   1dd9c:	str	r2, [r3, #20]
   1dda0:	b	1ddb4 <flatcc_json_printer_int64_enum_struct_field@@Base+0xc4>
   1dda4:	ldr	r1, [fp, #12]
   1dda8:	ldrd	r2, [fp, #-12]
   1ddac:	ldr	r0, [fp, #-16]
   1ddb0:	blx	r1
   1ddb4:	nop	{0}
   1ddb8:	sub	sp, fp, #4
   1ddbc:	ldr	fp, [sp]
   1ddc0:	add	sp, sp, #4
   1ddc4:	pop	{pc}		; (ldr pc, [sp], #4)

0001ddc8 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   1ddc8:	str	fp, [sp, #-8]!
   1ddcc:	str	lr, [sp, #4]
   1ddd0:	add	fp, sp, #4
   1ddd4:	sub	sp, sp, #24
   1ddd8:	str	r0, [fp, #-16]
   1dddc:	str	r1, [fp, #-20]	; 0xffffffec
   1dde0:	str	r2, [fp, #-24]	; 0xffffffe8
   1dde4:	str	r3, [fp, #-28]	; 0xffffffe4
   1dde8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ddec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddf0:	add	r3, r2, r3
   1ddf4:	mov	r0, r3
   1ddf8:	bl	15468 <main@@Base+0x54c>
   1ddfc:	mov	r3, r0
   1de00:	strb	r3, [fp, #-5]
   1de04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de08:	cmp	r3, #0
   1de0c:	beq	1de2c <flatcc_json_printer_bool_enum_struct_field@@Base+0x64>
   1de10:	ldr	r3, [fp, #-16]
   1de14:	ldr	r3, [r3, #20]
   1de18:	add	r1, r3, #1
   1de1c:	ldr	r2, [fp, #-16]
   1de20:	str	r1, [r2, #20]
   1de24:	mov	r2, #44	; 0x2c
   1de28:	strb	r2, [r3]
   1de2c:	ldr	r3, [fp, #8]
   1de30:	mov	r2, r3
   1de34:	ldr	r1, [fp, #4]
   1de38:	ldr	r0, [fp, #-16]
   1de3c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1de40:	ldr	r3, [fp, #-16]
   1de44:	ldrb	r3, [r3, #27]
   1de48:	cmp	r3, #0
   1de4c:	beq	1de84 <flatcc_json_printer_bool_enum_struct_field@@Base+0xbc>
   1de50:	ldrb	r2, [fp, #-5]
   1de54:	ldr	r3, [fp, #-16]
   1de58:	ldr	r3, [r3, #20]
   1de5c:	mov	r1, r3
   1de60:	mov	r0, r2
   1de64:	bl	1576c <main@@Base+0x850>
   1de68:	mov	r2, r0
   1de6c:	ldr	r3, [fp, #-16]
   1de70:	ldr	r3, [r3, #20]
   1de74:	add	r2, r3, r2
   1de78:	ldr	r3, [fp, #-16]
   1de7c:	str	r2, [r3, #20]
   1de80:	b	1de98 <flatcc_json_printer_bool_enum_struct_field@@Base+0xd0>
   1de84:	ldrb	r2, [fp, #-5]
   1de88:	ldr	r3, [fp, #12]
   1de8c:	mov	r1, r2
   1de90:	ldr	r0, [fp, #-16]
   1de94:	blx	r3
   1de98:	nop	{0}
   1de9c:	sub	sp, fp, #4
   1dea0:	ldr	fp, [sp]
   1dea4:	add	sp, sp, #4
   1dea8:	pop	{pc}		; (ldr pc, [sp], #4)

0001deac <flatcc_json_printer_utype_vector_field@@Base>:
   1deac:	str	fp, [sp, #-8]!
   1deb0:	str	lr, [sp, #4]
   1deb4:	add	fp, sp, #4
   1deb8:	sub	sp, sp, #24
   1debc:	str	r0, [fp, #-16]
   1dec0:	str	r1, [fp, #-20]	; 0xffffffec
   1dec4:	str	r2, [fp, #-24]	; 0xffffffe8
   1dec8:	str	r3, [fp, #-28]	; 0xffffffe4
   1decc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ded0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ded4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1ded8:	str	r0, [fp, #-8]
   1dedc:	ldr	r3, [fp, #-8]
   1dee0:	cmp	r3, #0
   1dee4:	beq	1e148 <flatcc_json_printer_utype_vector_field@@Base+0x29c>
   1dee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1deec:	ldr	r3, [r3, #16]
   1def0:	add	r1, r3, #1
   1def4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1def8:	str	r1, [r2, #16]
   1defc:	cmp	r3, #0
   1df00:	beq	1df20 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   1df04:	ldr	r3, [fp, #-16]
   1df08:	ldr	r3, [r3, #20]
   1df0c:	add	r1, r3, #1
   1df10:	ldr	r2, [fp, #-16]
   1df14:	str	r1, [r2, #20]
   1df18:	mov	r2, #44	; 0x2c
   1df1c:	strb	r2, [r3]
   1df20:	ldr	r0, [fp, #-8]
   1df24:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1df28:	str	r0, [fp, #-8]
   1df2c:	ldr	r0, [fp, #-8]
   1df30:	bl	154c8 <main@@Base+0x5ac>
   1df34:	str	r0, [fp, #-12]
   1df38:	ldr	r3, [fp, #-8]
   1df3c:	add	r3, r3, #4
   1df40:	str	r3, [fp, #-8]
   1df44:	ldr	r3, [fp, #4]
   1df48:	mov	r2, r3
   1df4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1df50:	ldr	r0, [fp, #-16]
   1df54:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1df58:	ldr	r3, [fp, #-16]
   1df5c:	ldr	r3, [r3, #32]
   1df60:	add	r2, r3, #1
   1df64:	ldr	r3, [fp, #-16]
   1df68:	str	r2, [r3, #32]
   1df6c:	ldr	r3, [fp, #-16]
   1df70:	ldr	r3, [r3, #20]
   1df74:	add	r1, r3, #1
   1df78:	ldr	r2, [fp, #-16]
   1df7c:	str	r1, [r2, #20]
   1df80:	mov	r2, #91	; 0x5b
   1df84:	strb	r2, [r3]
   1df88:	ldr	r3, [fp, #-12]
   1df8c:	cmp	r3, #0
   1df90:	beq	1e0d0 <flatcc_json_printer_utype_vector_field@@Base+0x224>
   1df94:	ldr	r3, [fp, #-16]
   1df98:	ldrb	r3, [r3, #25]
   1df9c:	cmp	r3, #0
   1dfa0:	beq	1dfcc <flatcc_json_printer_utype_vector_field@@Base+0x120>
   1dfa4:	ldr	r3, [fp, #-16]
   1dfa8:	ldr	r3, [r3, #20]
   1dfac:	add	r1, r3, #1
   1dfb0:	ldr	r2, [fp, #-16]
   1dfb4:	str	r1, [r2, #20]
   1dfb8:	mov	r2, #10
   1dfbc:	strb	r2, [r3]
   1dfc0:	ldr	r0, [fp, #-16]
   1dfc4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1dfc8:	b	1dfd4 <flatcc_json_printer_utype_vector_field@@Base+0x128>
   1dfcc:	ldr	r0, [fp, #-16]
   1dfd0:	bl	15718 <main@@Base+0x7fc>
   1dfd4:	ldr	r0, [fp, #-8]
   1dfd8:	bl	155f0 <main@@Base+0x6d4>
   1dfdc:	mov	r3, r0
   1dfe0:	mov	r2, r3
   1dfe4:	ldr	r3, [fp, #-16]
   1dfe8:	ldr	r3, [r3, #20]
   1dfec:	mov	r1, r3
   1dff0:	mov	r0, r2
   1dff4:	bl	157e8 <main@@Base+0x8cc>
   1dff8:	mov	r2, r0
   1dffc:	ldr	r3, [fp, #-16]
   1e000:	ldr	r3, [r3, #20]
   1e004:	add	r2, r3, r2
   1e008:	ldr	r3, [fp, #-16]
   1e00c:	str	r2, [r3, #20]
   1e010:	ldr	r3, [fp, #-8]
   1e014:	add	r3, r3, #1
   1e018:	str	r3, [fp, #-8]
   1e01c:	ldr	r3, [fp, #-12]
   1e020:	sub	r3, r3, #1
   1e024:	str	r3, [fp, #-12]
   1e028:	b	1e0d0 <flatcc_json_printer_utype_vector_field@@Base+0x224>
   1e02c:	ldr	r3, [fp, #-16]
   1e030:	ldr	r3, [r3, #20]
   1e034:	add	r1, r3, #1
   1e038:	ldr	r2, [fp, #-16]
   1e03c:	str	r1, [r2, #20]
   1e040:	mov	r2, #44	; 0x2c
   1e044:	strb	r2, [r3]
   1e048:	ldr	r3, [fp, #-16]
   1e04c:	ldrb	r3, [r3, #25]
   1e050:	cmp	r3, #0
   1e054:	beq	1e080 <flatcc_json_printer_utype_vector_field@@Base+0x1d4>
   1e058:	ldr	r3, [fp, #-16]
   1e05c:	ldr	r3, [r3, #20]
   1e060:	add	r1, r3, #1
   1e064:	ldr	r2, [fp, #-16]
   1e068:	str	r1, [r2, #20]
   1e06c:	mov	r2, #10
   1e070:	strb	r2, [r3]
   1e074:	ldr	r0, [fp, #-16]
   1e078:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e07c:	b	1e088 <flatcc_json_printer_utype_vector_field@@Base+0x1dc>
   1e080:	ldr	r0, [fp, #-16]
   1e084:	bl	15718 <main@@Base+0x7fc>
   1e088:	ldr	r0, [fp, #-8]
   1e08c:	bl	155f0 <main@@Base+0x6d4>
   1e090:	mov	r3, r0
   1e094:	mov	r2, r3
   1e098:	ldr	r3, [fp, #-16]
   1e09c:	ldr	r3, [r3, #20]
   1e0a0:	mov	r1, r3
   1e0a4:	mov	r0, r2
   1e0a8:	bl	157e8 <main@@Base+0x8cc>
   1e0ac:	mov	r2, r0
   1e0b0:	ldr	r3, [fp, #-16]
   1e0b4:	ldr	r3, [r3, #20]
   1e0b8:	add	r2, r3, r2
   1e0bc:	ldr	r3, [fp, #-16]
   1e0c0:	str	r2, [r3, #20]
   1e0c4:	ldr	r3, [fp, #-8]
   1e0c8:	add	r3, r3, #1
   1e0cc:	str	r3, [fp, #-8]
   1e0d0:	ldr	r3, [fp, #-12]
   1e0d4:	sub	r2, r3, #1
   1e0d8:	str	r2, [fp, #-12]
   1e0dc:	cmp	r3, #0
   1e0e0:	bne	1e02c <flatcc_json_printer_utype_vector_field@@Base+0x180>
   1e0e4:	ldr	r3, [fp, #-16]
   1e0e8:	ldrb	r3, [r3, #25]
   1e0ec:	cmp	r3, #0
   1e0f0:	beq	1e12c <flatcc_json_printer_utype_vector_field@@Base+0x280>
   1e0f4:	ldr	r3, [fp, #-16]
   1e0f8:	ldr	r3, [r3, #20]
   1e0fc:	add	r1, r3, #1
   1e100:	ldr	r2, [fp, #-16]
   1e104:	str	r1, [r2, #20]
   1e108:	mov	r2, #10
   1e10c:	strb	r2, [r3]
   1e110:	ldr	r3, [fp, #-16]
   1e114:	ldr	r3, [r3, #32]
   1e118:	sub	r2, r3, #1
   1e11c:	ldr	r3, [fp, #-16]
   1e120:	str	r2, [r3, #32]
   1e124:	ldr	r0, [fp, #-16]
   1e128:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e12c:	ldr	r3, [fp, #-16]
   1e130:	ldr	r3, [r3, #20]
   1e134:	add	r1, r3, #1
   1e138:	ldr	r2, [fp, #-16]
   1e13c:	str	r1, [r2, #20]
   1e140:	mov	r2, #93	; 0x5d
   1e144:	strb	r2, [r3]
   1e148:	nop	{0}
   1e14c:	sub	sp, fp, #4
   1e150:	ldr	fp, [sp]
   1e154:	add	sp, sp, #4
   1e158:	pop	{pc}		; (ldr pc, [sp], #4)

0001e15c <flatcc_json_printer_uint8_vector_field@@Base>:
   1e15c:	str	fp, [sp, #-8]!
   1e160:	str	lr, [sp, #4]
   1e164:	add	fp, sp, #4
   1e168:	sub	sp, sp, #24
   1e16c:	str	r0, [fp, #-16]
   1e170:	str	r1, [fp, #-20]	; 0xffffffec
   1e174:	str	r2, [fp, #-24]	; 0xffffffe8
   1e178:	str	r3, [fp, #-28]	; 0xffffffe4
   1e17c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e180:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e184:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1e188:	str	r0, [fp, #-8]
   1e18c:	ldr	r3, [fp, #-8]
   1e190:	cmp	r3, #0
   1e194:	beq	1e3f8 <flatcc_json_printer_uint8_vector_field@@Base+0x29c>
   1e198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e19c:	ldr	r3, [r3, #16]
   1e1a0:	add	r1, r3, #1
   1e1a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e1a8:	str	r1, [r2, #16]
   1e1ac:	cmp	r3, #0
   1e1b0:	beq	1e1d0 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   1e1b4:	ldr	r3, [fp, #-16]
   1e1b8:	ldr	r3, [r3, #20]
   1e1bc:	add	r1, r3, #1
   1e1c0:	ldr	r2, [fp, #-16]
   1e1c4:	str	r1, [r2, #20]
   1e1c8:	mov	r2, #44	; 0x2c
   1e1cc:	strb	r2, [r3]
   1e1d0:	ldr	r0, [fp, #-8]
   1e1d4:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1e1d8:	str	r0, [fp, #-8]
   1e1dc:	ldr	r0, [fp, #-8]
   1e1e0:	bl	154c8 <main@@Base+0x5ac>
   1e1e4:	str	r0, [fp, #-12]
   1e1e8:	ldr	r3, [fp, #-8]
   1e1ec:	add	r3, r3, #4
   1e1f0:	str	r3, [fp, #-8]
   1e1f4:	ldr	r3, [fp, #4]
   1e1f8:	mov	r2, r3
   1e1fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e200:	ldr	r0, [fp, #-16]
   1e204:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1e208:	ldr	r3, [fp, #-16]
   1e20c:	ldr	r3, [r3, #32]
   1e210:	add	r2, r3, #1
   1e214:	ldr	r3, [fp, #-16]
   1e218:	str	r2, [r3, #32]
   1e21c:	ldr	r3, [fp, #-16]
   1e220:	ldr	r3, [r3, #20]
   1e224:	add	r1, r3, #1
   1e228:	ldr	r2, [fp, #-16]
   1e22c:	str	r1, [r2, #20]
   1e230:	mov	r2, #91	; 0x5b
   1e234:	strb	r2, [r3]
   1e238:	ldr	r3, [fp, #-12]
   1e23c:	cmp	r3, #0
   1e240:	beq	1e380 <flatcc_json_printer_uint8_vector_field@@Base+0x224>
   1e244:	ldr	r3, [fp, #-16]
   1e248:	ldrb	r3, [r3, #25]
   1e24c:	cmp	r3, #0
   1e250:	beq	1e27c <flatcc_json_printer_uint8_vector_field@@Base+0x120>
   1e254:	ldr	r3, [fp, #-16]
   1e258:	ldr	r3, [r3, #20]
   1e25c:	add	r1, r3, #1
   1e260:	ldr	r2, [fp, #-16]
   1e264:	str	r1, [r2, #20]
   1e268:	mov	r2, #10
   1e26c:	strb	r2, [r3]
   1e270:	ldr	r0, [fp, #-16]
   1e274:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e278:	b	1e284 <flatcc_json_printer_uint8_vector_field@@Base+0x128>
   1e27c:	ldr	r0, [fp, #-16]
   1e280:	bl	15718 <main@@Base+0x7fc>
   1e284:	ldr	r0, [fp, #-8]
   1e288:	bl	15050 <main@@Base+0x134>
   1e28c:	mov	r3, r0
   1e290:	mov	r2, r3
   1e294:	ldr	r3, [fp, #-16]
   1e298:	ldr	r3, [r3, #20]
   1e29c:	mov	r1, r3
   1e2a0:	mov	r0, r2
   1e2a4:	bl	157e8 <main@@Base+0x8cc>
   1e2a8:	mov	r2, r0
   1e2ac:	ldr	r3, [fp, #-16]
   1e2b0:	ldr	r3, [r3, #20]
   1e2b4:	add	r2, r3, r2
   1e2b8:	ldr	r3, [fp, #-16]
   1e2bc:	str	r2, [r3, #20]
   1e2c0:	ldr	r3, [fp, #-8]
   1e2c4:	add	r3, r3, #1
   1e2c8:	str	r3, [fp, #-8]
   1e2cc:	ldr	r3, [fp, #-12]
   1e2d0:	sub	r3, r3, #1
   1e2d4:	str	r3, [fp, #-12]
   1e2d8:	b	1e380 <flatcc_json_printer_uint8_vector_field@@Base+0x224>
   1e2dc:	ldr	r3, [fp, #-16]
   1e2e0:	ldr	r3, [r3, #20]
   1e2e4:	add	r1, r3, #1
   1e2e8:	ldr	r2, [fp, #-16]
   1e2ec:	str	r1, [r2, #20]
   1e2f0:	mov	r2, #44	; 0x2c
   1e2f4:	strb	r2, [r3]
   1e2f8:	ldr	r3, [fp, #-16]
   1e2fc:	ldrb	r3, [r3, #25]
   1e300:	cmp	r3, #0
   1e304:	beq	1e330 <flatcc_json_printer_uint8_vector_field@@Base+0x1d4>
   1e308:	ldr	r3, [fp, #-16]
   1e30c:	ldr	r3, [r3, #20]
   1e310:	add	r1, r3, #1
   1e314:	ldr	r2, [fp, #-16]
   1e318:	str	r1, [r2, #20]
   1e31c:	mov	r2, #10
   1e320:	strb	r2, [r3]
   1e324:	ldr	r0, [fp, #-16]
   1e328:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e32c:	b	1e338 <flatcc_json_printer_uint8_vector_field@@Base+0x1dc>
   1e330:	ldr	r0, [fp, #-16]
   1e334:	bl	15718 <main@@Base+0x7fc>
   1e338:	ldr	r0, [fp, #-8]
   1e33c:	bl	15050 <main@@Base+0x134>
   1e340:	mov	r3, r0
   1e344:	mov	r2, r3
   1e348:	ldr	r3, [fp, #-16]
   1e34c:	ldr	r3, [r3, #20]
   1e350:	mov	r1, r3
   1e354:	mov	r0, r2
   1e358:	bl	157e8 <main@@Base+0x8cc>
   1e35c:	mov	r2, r0
   1e360:	ldr	r3, [fp, #-16]
   1e364:	ldr	r3, [r3, #20]
   1e368:	add	r2, r3, r2
   1e36c:	ldr	r3, [fp, #-16]
   1e370:	str	r2, [r3, #20]
   1e374:	ldr	r3, [fp, #-8]
   1e378:	add	r3, r3, #1
   1e37c:	str	r3, [fp, #-8]
   1e380:	ldr	r3, [fp, #-12]
   1e384:	sub	r2, r3, #1
   1e388:	str	r2, [fp, #-12]
   1e38c:	cmp	r3, #0
   1e390:	bne	1e2dc <flatcc_json_printer_uint8_vector_field@@Base+0x180>
   1e394:	ldr	r3, [fp, #-16]
   1e398:	ldrb	r3, [r3, #25]
   1e39c:	cmp	r3, #0
   1e3a0:	beq	1e3dc <flatcc_json_printer_uint8_vector_field@@Base+0x280>
   1e3a4:	ldr	r3, [fp, #-16]
   1e3a8:	ldr	r3, [r3, #20]
   1e3ac:	add	r1, r3, #1
   1e3b0:	ldr	r2, [fp, #-16]
   1e3b4:	str	r1, [r2, #20]
   1e3b8:	mov	r2, #10
   1e3bc:	strb	r2, [r3]
   1e3c0:	ldr	r3, [fp, #-16]
   1e3c4:	ldr	r3, [r3, #32]
   1e3c8:	sub	r2, r3, #1
   1e3cc:	ldr	r3, [fp, #-16]
   1e3d0:	str	r2, [r3, #32]
   1e3d4:	ldr	r0, [fp, #-16]
   1e3d8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e3dc:	ldr	r3, [fp, #-16]
   1e3e0:	ldr	r3, [r3, #20]
   1e3e4:	add	r1, r3, #1
   1e3e8:	ldr	r2, [fp, #-16]
   1e3ec:	str	r1, [r2, #20]
   1e3f0:	mov	r2, #93	; 0x5d
   1e3f4:	strb	r2, [r3]
   1e3f8:	nop	{0}
   1e3fc:	sub	sp, fp, #4
   1e400:	ldr	fp, [sp]
   1e404:	add	sp, sp, #4
   1e408:	pop	{pc}		; (ldr pc, [sp], #4)

0001e40c <flatcc_json_printer_uint16_vector_field@@Base>:
   1e40c:	str	fp, [sp, #-8]!
   1e410:	str	lr, [sp, #4]
   1e414:	add	fp, sp, #4
   1e418:	sub	sp, sp, #24
   1e41c:	str	r0, [fp, #-16]
   1e420:	str	r1, [fp, #-20]	; 0xffffffec
   1e424:	str	r2, [fp, #-24]	; 0xffffffe8
   1e428:	str	r3, [fp, #-28]	; 0xffffffe4
   1e42c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e430:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e434:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1e438:	str	r0, [fp, #-8]
   1e43c:	ldr	r3, [fp, #-8]
   1e440:	cmp	r3, #0
   1e444:	beq	1e6a8 <flatcc_json_printer_uint16_vector_field@@Base+0x29c>
   1e448:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e44c:	ldr	r3, [r3, #16]
   1e450:	add	r1, r3, #1
   1e454:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e458:	str	r1, [r2, #16]
   1e45c:	cmp	r3, #0
   1e460:	beq	1e480 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   1e464:	ldr	r3, [fp, #-16]
   1e468:	ldr	r3, [r3, #20]
   1e46c:	add	r1, r3, #1
   1e470:	ldr	r2, [fp, #-16]
   1e474:	str	r1, [r2, #20]
   1e478:	mov	r2, #44	; 0x2c
   1e47c:	strb	r2, [r3]
   1e480:	ldr	r0, [fp, #-8]
   1e484:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1e488:	str	r0, [fp, #-8]
   1e48c:	ldr	r0, [fp, #-8]
   1e490:	bl	154c8 <main@@Base+0x5ac>
   1e494:	str	r0, [fp, #-12]
   1e498:	ldr	r3, [fp, #-8]
   1e49c:	add	r3, r3, #4
   1e4a0:	str	r3, [fp, #-8]
   1e4a4:	ldr	r3, [fp, #4]
   1e4a8:	mov	r2, r3
   1e4ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e4b0:	ldr	r0, [fp, #-16]
   1e4b4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1e4b8:	ldr	r3, [fp, #-16]
   1e4bc:	ldr	r3, [r3, #32]
   1e4c0:	add	r2, r3, #1
   1e4c4:	ldr	r3, [fp, #-16]
   1e4c8:	str	r2, [r3, #32]
   1e4cc:	ldr	r3, [fp, #-16]
   1e4d0:	ldr	r3, [r3, #20]
   1e4d4:	add	r1, r3, #1
   1e4d8:	ldr	r2, [fp, #-16]
   1e4dc:	str	r1, [r2, #20]
   1e4e0:	mov	r2, #91	; 0x5b
   1e4e4:	strb	r2, [r3]
   1e4e8:	ldr	r3, [fp, #-12]
   1e4ec:	cmp	r3, #0
   1e4f0:	beq	1e630 <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   1e4f4:	ldr	r3, [fp, #-16]
   1e4f8:	ldrb	r3, [r3, #25]
   1e4fc:	cmp	r3, #0
   1e500:	beq	1e52c <flatcc_json_printer_uint16_vector_field@@Base+0x120>
   1e504:	ldr	r3, [fp, #-16]
   1e508:	ldr	r3, [r3, #20]
   1e50c:	add	r1, r3, #1
   1e510:	ldr	r2, [fp, #-16]
   1e514:	str	r1, [r2, #20]
   1e518:	mov	r2, #10
   1e51c:	strb	r2, [r3]
   1e520:	ldr	r0, [fp, #-16]
   1e524:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e528:	b	1e534 <flatcc_json_printer_uint16_vector_field@@Base+0x128>
   1e52c:	ldr	r0, [fp, #-16]
   1e530:	bl	15718 <main@@Base+0x7fc>
   1e534:	ldr	r0, [fp, #-8]
   1e538:	bl	150b4 <main@@Base+0x198>
   1e53c:	mov	r3, r0
   1e540:	mov	r2, r3
   1e544:	ldr	r3, [fp, #-16]
   1e548:	ldr	r3, [r3, #20]
   1e54c:	mov	r1, r3
   1e550:	mov	r0, r2
   1e554:	bl	159b8 <main@@Base+0xa9c>
   1e558:	mov	r2, r0
   1e55c:	ldr	r3, [fp, #-16]
   1e560:	ldr	r3, [r3, #20]
   1e564:	add	r2, r3, r2
   1e568:	ldr	r3, [fp, #-16]
   1e56c:	str	r2, [r3, #20]
   1e570:	ldr	r3, [fp, #-8]
   1e574:	add	r3, r3, #2
   1e578:	str	r3, [fp, #-8]
   1e57c:	ldr	r3, [fp, #-12]
   1e580:	sub	r3, r3, #1
   1e584:	str	r3, [fp, #-12]
   1e588:	b	1e630 <flatcc_json_printer_uint16_vector_field@@Base+0x224>
   1e58c:	ldr	r3, [fp, #-16]
   1e590:	ldr	r3, [r3, #20]
   1e594:	add	r1, r3, #1
   1e598:	ldr	r2, [fp, #-16]
   1e59c:	str	r1, [r2, #20]
   1e5a0:	mov	r2, #44	; 0x2c
   1e5a4:	strb	r2, [r3]
   1e5a8:	ldr	r3, [fp, #-16]
   1e5ac:	ldrb	r3, [r3, #25]
   1e5b0:	cmp	r3, #0
   1e5b4:	beq	1e5e0 <flatcc_json_printer_uint16_vector_field@@Base+0x1d4>
   1e5b8:	ldr	r3, [fp, #-16]
   1e5bc:	ldr	r3, [r3, #20]
   1e5c0:	add	r1, r3, #1
   1e5c4:	ldr	r2, [fp, #-16]
   1e5c8:	str	r1, [r2, #20]
   1e5cc:	mov	r2, #10
   1e5d0:	strb	r2, [r3]
   1e5d4:	ldr	r0, [fp, #-16]
   1e5d8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e5dc:	b	1e5e8 <flatcc_json_printer_uint16_vector_field@@Base+0x1dc>
   1e5e0:	ldr	r0, [fp, #-16]
   1e5e4:	bl	15718 <main@@Base+0x7fc>
   1e5e8:	ldr	r0, [fp, #-8]
   1e5ec:	bl	150b4 <main@@Base+0x198>
   1e5f0:	mov	r3, r0
   1e5f4:	mov	r2, r3
   1e5f8:	ldr	r3, [fp, #-16]
   1e5fc:	ldr	r3, [r3, #20]
   1e600:	mov	r1, r3
   1e604:	mov	r0, r2
   1e608:	bl	159b8 <main@@Base+0xa9c>
   1e60c:	mov	r2, r0
   1e610:	ldr	r3, [fp, #-16]
   1e614:	ldr	r3, [r3, #20]
   1e618:	add	r2, r3, r2
   1e61c:	ldr	r3, [fp, #-16]
   1e620:	str	r2, [r3, #20]
   1e624:	ldr	r3, [fp, #-8]
   1e628:	add	r3, r3, #2
   1e62c:	str	r3, [fp, #-8]
   1e630:	ldr	r3, [fp, #-12]
   1e634:	sub	r2, r3, #1
   1e638:	str	r2, [fp, #-12]
   1e63c:	cmp	r3, #0
   1e640:	bne	1e58c <flatcc_json_printer_uint16_vector_field@@Base+0x180>
   1e644:	ldr	r3, [fp, #-16]
   1e648:	ldrb	r3, [r3, #25]
   1e64c:	cmp	r3, #0
   1e650:	beq	1e68c <flatcc_json_printer_uint16_vector_field@@Base+0x280>
   1e654:	ldr	r3, [fp, #-16]
   1e658:	ldr	r3, [r3, #20]
   1e65c:	add	r1, r3, #1
   1e660:	ldr	r2, [fp, #-16]
   1e664:	str	r1, [r2, #20]
   1e668:	mov	r2, #10
   1e66c:	strb	r2, [r3]
   1e670:	ldr	r3, [fp, #-16]
   1e674:	ldr	r3, [r3, #32]
   1e678:	sub	r2, r3, #1
   1e67c:	ldr	r3, [fp, #-16]
   1e680:	str	r2, [r3, #32]
   1e684:	ldr	r0, [fp, #-16]
   1e688:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e68c:	ldr	r3, [fp, #-16]
   1e690:	ldr	r3, [r3, #20]
   1e694:	add	r1, r3, #1
   1e698:	ldr	r2, [fp, #-16]
   1e69c:	str	r1, [r2, #20]
   1e6a0:	mov	r2, #93	; 0x5d
   1e6a4:	strb	r2, [r3]
   1e6a8:	nop	{0}
   1e6ac:	sub	sp, fp, #4
   1e6b0:	ldr	fp, [sp]
   1e6b4:	add	sp, sp, #4
   1e6b8:	pop	{pc}		; (ldr pc, [sp], #4)

0001e6bc <flatcc_json_printer_uint32_vector_field@@Base>:
   1e6bc:	str	fp, [sp, #-8]!
   1e6c0:	str	lr, [sp, #4]
   1e6c4:	add	fp, sp, #4
   1e6c8:	sub	sp, sp, #24
   1e6cc:	str	r0, [fp, #-16]
   1e6d0:	str	r1, [fp, #-20]	; 0xffffffec
   1e6d4:	str	r2, [fp, #-24]	; 0xffffffe8
   1e6d8:	str	r3, [fp, #-28]	; 0xffffffe4
   1e6dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e6e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e6e4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1e6e8:	str	r0, [fp, #-8]
   1e6ec:	ldr	r3, [fp, #-8]
   1e6f0:	cmp	r3, #0
   1e6f4:	beq	1e950 <flatcc_json_printer_uint32_vector_field@@Base+0x294>
   1e6f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e6fc:	ldr	r3, [r3, #16]
   1e700:	add	r1, r3, #1
   1e704:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e708:	str	r1, [r2, #16]
   1e70c:	cmp	r3, #0
   1e710:	beq	1e730 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   1e714:	ldr	r3, [fp, #-16]
   1e718:	ldr	r3, [r3, #20]
   1e71c:	add	r1, r3, #1
   1e720:	ldr	r2, [fp, #-16]
   1e724:	str	r1, [r2, #20]
   1e728:	mov	r2, #44	; 0x2c
   1e72c:	strb	r2, [r3]
   1e730:	ldr	r0, [fp, #-8]
   1e734:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1e738:	str	r0, [fp, #-8]
   1e73c:	ldr	r0, [fp, #-8]
   1e740:	bl	154c8 <main@@Base+0x5ac>
   1e744:	str	r0, [fp, #-12]
   1e748:	ldr	r3, [fp, #-8]
   1e74c:	add	r3, r3, #4
   1e750:	str	r3, [fp, #-8]
   1e754:	ldr	r3, [fp, #4]
   1e758:	mov	r2, r3
   1e75c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e760:	ldr	r0, [fp, #-16]
   1e764:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1e768:	ldr	r3, [fp, #-16]
   1e76c:	ldr	r3, [r3, #32]
   1e770:	add	r2, r3, #1
   1e774:	ldr	r3, [fp, #-16]
   1e778:	str	r2, [r3, #32]
   1e77c:	ldr	r3, [fp, #-16]
   1e780:	ldr	r3, [r3, #20]
   1e784:	add	r1, r3, #1
   1e788:	ldr	r2, [fp, #-16]
   1e78c:	str	r1, [r2, #20]
   1e790:	mov	r2, #91	; 0x5b
   1e794:	strb	r2, [r3]
   1e798:	ldr	r3, [fp, #-12]
   1e79c:	cmp	r3, #0
   1e7a0:	beq	1e8d8 <flatcc_json_printer_uint32_vector_field@@Base+0x21c>
   1e7a4:	ldr	r3, [fp, #-16]
   1e7a8:	ldrb	r3, [r3, #25]
   1e7ac:	cmp	r3, #0
   1e7b0:	beq	1e7dc <flatcc_json_printer_uint32_vector_field@@Base+0x120>
   1e7b4:	ldr	r3, [fp, #-16]
   1e7b8:	ldr	r3, [r3, #20]
   1e7bc:	add	r1, r3, #1
   1e7c0:	ldr	r2, [fp, #-16]
   1e7c4:	str	r1, [r2, #20]
   1e7c8:	mov	r2, #10
   1e7cc:	strb	r2, [r3]
   1e7d0:	ldr	r0, [fp, #-16]
   1e7d4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e7d8:	b	1e7e4 <flatcc_json_printer_uint32_vector_field@@Base+0x128>
   1e7dc:	ldr	r0, [fp, #-16]
   1e7e0:	bl	15718 <main@@Base+0x7fc>
   1e7e4:	ldr	r0, [fp, #-8]
   1e7e8:	bl	15114 <main@@Base+0x1f8>
   1e7ec:	mov	r2, r0
   1e7f0:	ldr	r3, [fp, #-16]
   1e7f4:	ldr	r3, [r3, #20]
   1e7f8:	mov	r1, r3
   1e7fc:	mov	r0, r2
   1e800:	bl	15d04 <main@@Base+0xde8>
   1e804:	mov	r2, r0
   1e808:	ldr	r3, [fp, #-16]
   1e80c:	ldr	r3, [r3, #20]
   1e810:	add	r2, r3, r2
   1e814:	ldr	r3, [fp, #-16]
   1e818:	str	r2, [r3, #20]
   1e81c:	ldr	r3, [fp, #-8]
   1e820:	add	r3, r3, #4
   1e824:	str	r3, [fp, #-8]
   1e828:	ldr	r3, [fp, #-12]
   1e82c:	sub	r3, r3, #1
   1e830:	str	r3, [fp, #-12]
   1e834:	b	1e8d8 <flatcc_json_printer_uint32_vector_field@@Base+0x21c>
   1e838:	ldr	r3, [fp, #-16]
   1e83c:	ldr	r3, [r3, #20]
   1e840:	add	r1, r3, #1
   1e844:	ldr	r2, [fp, #-16]
   1e848:	str	r1, [r2, #20]
   1e84c:	mov	r2, #44	; 0x2c
   1e850:	strb	r2, [r3]
   1e854:	ldr	r3, [fp, #-16]
   1e858:	ldrb	r3, [r3, #25]
   1e85c:	cmp	r3, #0
   1e860:	beq	1e88c <flatcc_json_printer_uint32_vector_field@@Base+0x1d0>
   1e864:	ldr	r3, [fp, #-16]
   1e868:	ldr	r3, [r3, #20]
   1e86c:	add	r1, r3, #1
   1e870:	ldr	r2, [fp, #-16]
   1e874:	str	r1, [r2, #20]
   1e878:	mov	r2, #10
   1e87c:	strb	r2, [r3]
   1e880:	ldr	r0, [fp, #-16]
   1e884:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e888:	b	1e894 <flatcc_json_printer_uint32_vector_field@@Base+0x1d8>
   1e88c:	ldr	r0, [fp, #-16]
   1e890:	bl	15718 <main@@Base+0x7fc>
   1e894:	ldr	r0, [fp, #-8]
   1e898:	bl	15114 <main@@Base+0x1f8>
   1e89c:	mov	r2, r0
   1e8a0:	ldr	r3, [fp, #-16]
   1e8a4:	ldr	r3, [r3, #20]
   1e8a8:	mov	r1, r3
   1e8ac:	mov	r0, r2
   1e8b0:	bl	15d04 <main@@Base+0xde8>
   1e8b4:	mov	r2, r0
   1e8b8:	ldr	r3, [fp, #-16]
   1e8bc:	ldr	r3, [r3, #20]
   1e8c0:	add	r2, r3, r2
   1e8c4:	ldr	r3, [fp, #-16]
   1e8c8:	str	r2, [r3, #20]
   1e8cc:	ldr	r3, [fp, #-8]
   1e8d0:	add	r3, r3, #4
   1e8d4:	str	r3, [fp, #-8]
   1e8d8:	ldr	r3, [fp, #-12]
   1e8dc:	sub	r2, r3, #1
   1e8e0:	str	r2, [fp, #-12]
   1e8e4:	cmp	r3, #0
   1e8e8:	bne	1e838 <flatcc_json_printer_uint32_vector_field@@Base+0x17c>
   1e8ec:	ldr	r3, [fp, #-16]
   1e8f0:	ldrb	r3, [r3, #25]
   1e8f4:	cmp	r3, #0
   1e8f8:	beq	1e934 <flatcc_json_printer_uint32_vector_field@@Base+0x278>
   1e8fc:	ldr	r3, [fp, #-16]
   1e900:	ldr	r3, [r3, #20]
   1e904:	add	r1, r3, #1
   1e908:	ldr	r2, [fp, #-16]
   1e90c:	str	r1, [r2, #20]
   1e910:	mov	r2, #10
   1e914:	strb	r2, [r3]
   1e918:	ldr	r3, [fp, #-16]
   1e91c:	ldr	r3, [r3, #32]
   1e920:	sub	r2, r3, #1
   1e924:	ldr	r3, [fp, #-16]
   1e928:	str	r2, [r3, #32]
   1e92c:	ldr	r0, [fp, #-16]
   1e930:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1e934:	ldr	r3, [fp, #-16]
   1e938:	ldr	r3, [r3, #20]
   1e93c:	add	r1, r3, #1
   1e940:	ldr	r2, [fp, #-16]
   1e944:	str	r1, [r2, #20]
   1e948:	mov	r2, #93	; 0x5d
   1e94c:	strb	r2, [r3]
   1e950:	nop	{0}
   1e954:	sub	sp, fp, #4
   1e958:	ldr	fp, [sp]
   1e95c:	add	sp, sp, #4
   1e960:	pop	{pc}		; (ldr pc, [sp], #4)

0001e964 <flatcc_json_printer_uint64_vector_field@@Base>:
   1e964:	str	fp, [sp, #-8]!
   1e968:	str	lr, [sp, #4]
   1e96c:	add	fp, sp, #4
   1e970:	sub	sp, sp, #24
   1e974:	str	r0, [fp, #-16]
   1e978:	str	r1, [fp, #-20]	; 0xffffffec
   1e97c:	str	r2, [fp, #-24]	; 0xffffffe8
   1e980:	str	r3, [fp, #-28]	; 0xffffffe4
   1e984:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e988:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e98c:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1e990:	str	r0, [fp, #-8]
   1e994:	ldr	r3, [fp, #-8]
   1e998:	cmp	r3, #0
   1e99c:	beq	1ebe8 <flatcc_json_printer_uint64_vector_field@@Base+0x284>
   1e9a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e9a4:	ldr	r3, [r3, #16]
   1e9a8:	add	r1, r3, #1
   1e9ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e9b0:	str	r1, [r2, #16]
   1e9b4:	cmp	r3, #0
   1e9b8:	beq	1e9d8 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   1e9bc:	ldr	r3, [fp, #-16]
   1e9c0:	ldr	r3, [r3, #20]
   1e9c4:	add	r1, r3, #1
   1e9c8:	ldr	r2, [fp, #-16]
   1e9cc:	str	r1, [r2, #20]
   1e9d0:	mov	r2, #44	; 0x2c
   1e9d4:	strb	r2, [r3]
   1e9d8:	ldr	r0, [fp, #-8]
   1e9dc:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1e9e0:	str	r0, [fp, #-8]
   1e9e4:	ldr	r0, [fp, #-8]
   1e9e8:	bl	154c8 <main@@Base+0x5ac>
   1e9ec:	str	r0, [fp, #-12]
   1e9f0:	ldr	r3, [fp, #-8]
   1e9f4:	add	r3, r3, #4
   1e9f8:	str	r3, [fp, #-8]
   1e9fc:	ldr	r3, [fp, #4]
   1ea00:	mov	r2, r3
   1ea04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ea08:	ldr	r0, [fp, #-16]
   1ea0c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1ea10:	ldr	r3, [fp, #-16]
   1ea14:	ldr	r3, [r3, #32]
   1ea18:	add	r2, r3, #1
   1ea1c:	ldr	r3, [fp, #-16]
   1ea20:	str	r2, [r3, #32]
   1ea24:	ldr	r3, [fp, #-16]
   1ea28:	ldr	r3, [r3, #20]
   1ea2c:	add	r1, r3, #1
   1ea30:	ldr	r2, [fp, #-16]
   1ea34:	str	r1, [r2, #20]
   1ea38:	mov	r2, #91	; 0x5b
   1ea3c:	strb	r2, [r3]
   1ea40:	ldr	r3, [fp, #-12]
   1ea44:	cmp	r3, #0
   1ea48:	beq	1eb70 <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   1ea4c:	ldr	r3, [fp, #-16]
   1ea50:	ldrb	r3, [r3, #25]
   1ea54:	cmp	r3, #0
   1ea58:	beq	1ea84 <flatcc_json_printer_uint64_vector_field@@Base+0x120>
   1ea5c:	ldr	r3, [fp, #-16]
   1ea60:	ldr	r3, [r3, #20]
   1ea64:	add	r1, r3, #1
   1ea68:	ldr	r2, [fp, #-16]
   1ea6c:	str	r1, [r2, #20]
   1ea70:	mov	r2, #10
   1ea74:	strb	r2, [r3]
   1ea78:	ldr	r0, [fp, #-16]
   1ea7c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1ea80:	b	1ea8c <flatcc_json_printer_uint64_vector_field@@Base+0x128>
   1ea84:	ldr	r0, [fp, #-16]
   1ea88:	bl	15718 <main@@Base+0x7fc>
   1ea8c:	ldr	r0, [fp, #-8]
   1ea90:	bl	15178 <main@@Base+0x25c>
   1ea94:	ldr	r3, [fp, #-16]
   1ea98:	ldr	r3, [r3, #20]
   1ea9c:	mov	r2, r3
   1eaa0:	bl	1637c <main@@Base+0x1460>
   1eaa4:	mov	r2, r0
   1eaa8:	ldr	r3, [fp, #-16]
   1eaac:	ldr	r3, [r3, #20]
   1eab0:	add	r2, r3, r2
   1eab4:	ldr	r3, [fp, #-16]
   1eab8:	str	r2, [r3, #20]
   1eabc:	ldr	r3, [fp, #-8]
   1eac0:	add	r3, r3, #8
   1eac4:	str	r3, [fp, #-8]
   1eac8:	ldr	r3, [fp, #-12]
   1eacc:	sub	r3, r3, #1
   1ead0:	str	r3, [fp, #-12]
   1ead4:	b	1eb70 <flatcc_json_printer_uint64_vector_field@@Base+0x20c>
   1ead8:	ldr	r3, [fp, #-16]
   1eadc:	ldr	r3, [r3, #20]
   1eae0:	add	r1, r3, #1
   1eae4:	ldr	r2, [fp, #-16]
   1eae8:	str	r1, [r2, #20]
   1eaec:	mov	r2, #44	; 0x2c
   1eaf0:	strb	r2, [r3]
   1eaf4:	ldr	r3, [fp, #-16]
   1eaf8:	ldrb	r3, [r3, #25]
   1eafc:	cmp	r3, #0
   1eb00:	beq	1eb2c <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   1eb04:	ldr	r3, [fp, #-16]
   1eb08:	ldr	r3, [r3, #20]
   1eb0c:	add	r1, r3, #1
   1eb10:	ldr	r2, [fp, #-16]
   1eb14:	str	r1, [r2, #20]
   1eb18:	mov	r2, #10
   1eb1c:	strb	r2, [r3]
   1eb20:	ldr	r0, [fp, #-16]
   1eb24:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1eb28:	b	1eb34 <flatcc_json_printer_uint64_vector_field@@Base+0x1d0>
   1eb2c:	ldr	r0, [fp, #-16]
   1eb30:	bl	15718 <main@@Base+0x7fc>
   1eb34:	ldr	r0, [fp, #-8]
   1eb38:	bl	15178 <main@@Base+0x25c>
   1eb3c:	ldr	r3, [fp, #-16]
   1eb40:	ldr	r3, [r3, #20]
   1eb44:	mov	r2, r3
   1eb48:	bl	1637c <main@@Base+0x1460>
   1eb4c:	mov	r2, r0
   1eb50:	ldr	r3, [fp, #-16]
   1eb54:	ldr	r3, [r3, #20]
   1eb58:	add	r2, r3, r2
   1eb5c:	ldr	r3, [fp, #-16]
   1eb60:	str	r2, [r3, #20]
   1eb64:	ldr	r3, [fp, #-8]
   1eb68:	add	r3, r3, #8
   1eb6c:	str	r3, [fp, #-8]
   1eb70:	ldr	r3, [fp, #-12]
   1eb74:	sub	r2, r3, #1
   1eb78:	str	r2, [fp, #-12]
   1eb7c:	cmp	r3, #0
   1eb80:	bne	1ead8 <flatcc_json_printer_uint64_vector_field@@Base+0x174>
   1eb84:	ldr	r3, [fp, #-16]
   1eb88:	ldrb	r3, [r3, #25]
   1eb8c:	cmp	r3, #0
   1eb90:	beq	1ebcc <flatcc_json_printer_uint64_vector_field@@Base+0x268>
   1eb94:	ldr	r3, [fp, #-16]
   1eb98:	ldr	r3, [r3, #20]
   1eb9c:	add	r1, r3, #1
   1eba0:	ldr	r2, [fp, #-16]
   1eba4:	str	r1, [r2, #20]
   1eba8:	mov	r2, #10
   1ebac:	strb	r2, [r3]
   1ebb0:	ldr	r3, [fp, #-16]
   1ebb4:	ldr	r3, [r3, #32]
   1ebb8:	sub	r2, r3, #1
   1ebbc:	ldr	r3, [fp, #-16]
   1ebc0:	str	r2, [r3, #32]
   1ebc4:	ldr	r0, [fp, #-16]
   1ebc8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1ebcc:	ldr	r3, [fp, #-16]
   1ebd0:	ldr	r3, [r3, #20]
   1ebd4:	add	r1, r3, #1
   1ebd8:	ldr	r2, [fp, #-16]
   1ebdc:	str	r1, [r2, #20]
   1ebe0:	mov	r2, #93	; 0x5d
   1ebe4:	strb	r2, [r3]
   1ebe8:	nop	{0}
   1ebec:	sub	sp, fp, #4
   1ebf0:	ldr	fp, [sp]
   1ebf4:	add	sp, sp, #4
   1ebf8:	pop	{pc}		; (ldr pc, [sp], #4)

0001ebfc <flatcc_json_printer_int8_vector_field@@Base>:
   1ebfc:	str	fp, [sp, #-8]!
   1ec00:	str	lr, [sp, #4]
   1ec04:	add	fp, sp, #4
   1ec08:	sub	sp, sp, #24
   1ec0c:	str	r0, [fp, #-16]
   1ec10:	str	r1, [fp, #-20]	; 0xffffffec
   1ec14:	str	r2, [fp, #-24]	; 0xffffffe8
   1ec18:	str	r3, [fp, #-28]	; 0xffffffe4
   1ec1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ec24:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1ec28:	str	r0, [fp, #-8]
   1ec2c:	ldr	r3, [fp, #-8]
   1ec30:	cmp	r3, #0
   1ec34:	beq	1ee98 <flatcc_json_printer_int8_vector_field@@Base+0x29c>
   1ec38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec3c:	ldr	r3, [r3, #16]
   1ec40:	add	r1, r3, #1
   1ec44:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ec48:	str	r1, [r2, #16]
   1ec4c:	cmp	r3, #0
   1ec50:	beq	1ec70 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   1ec54:	ldr	r3, [fp, #-16]
   1ec58:	ldr	r3, [r3, #20]
   1ec5c:	add	r1, r3, #1
   1ec60:	ldr	r2, [fp, #-16]
   1ec64:	str	r1, [r2, #20]
   1ec68:	mov	r2, #44	; 0x2c
   1ec6c:	strb	r2, [r3]
   1ec70:	ldr	r0, [fp, #-8]
   1ec74:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1ec78:	str	r0, [fp, #-8]
   1ec7c:	ldr	r0, [fp, #-8]
   1ec80:	bl	154c8 <main@@Base+0x5ac>
   1ec84:	str	r0, [fp, #-12]
   1ec88:	ldr	r3, [fp, #-8]
   1ec8c:	add	r3, r3, #4
   1ec90:	str	r3, [fp, #-8]
   1ec94:	ldr	r3, [fp, #4]
   1ec98:	mov	r2, r3
   1ec9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1eca0:	ldr	r0, [fp, #-16]
   1eca4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1eca8:	ldr	r3, [fp, #-16]
   1ecac:	ldr	r3, [r3, #32]
   1ecb0:	add	r2, r3, #1
   1ecb4:	ldr	r3, [fp, #-16]
   1ecb8:	str	r2, [r3, #32]
   1ecbc:	ldr	r3, [fp, #-16]
   1ecc0:	ldr	r3, [r3, #20]
   1ecc4:	add	r1, r3, #1
   1ecc8:	ldr	r2, [fp, #-16]
   1eccc:	str	r1, [r2, #20]
   1ecd0:	mov	r2, #91	; 0x5b
   1ecd4:	strb	r2, [r3]
   1ecd8:	ldr	r3, [fp, #-12]
   1ecdc:	cmp	r3, #0
   1ece0:	beq	1ee20 <flatcc_json_printer_int8_vector_field@@Base+0x224>
   1ece4:	ldr	r3, [fp, #-16]
   1ece8:	ldrb	r3, [r3, #25]
   1ecec:	cmp	r3, #0
   1ecf0:	beq	1ed1c <flatcc_json_printer_int8_vector_field@@Base+0x120>
   1ecf4:	ldr	r3, [fp, #-16]
   1ecf8:	ldr	r3, [r3, #20]
   1ecfc:	add	r1, r3, #1
   1ed00:	ldr	r2, [fp, #-16]
   1ed04:	str	r1, [r2, #20]
   1ed08:	mov	r2, #10
   1ed0c:	strb	r2, [r3]
   1ed10:	ldr	r0, [fp, #-16]
   1ed14:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1ed18:	b	1ed24 <flatcc_json_printer_int8_vector_field@@Base+0x128>
   1ed1c:	ldr	r0, [fp, #-16]
   1ed20:	bl	15718 <main@@Base+0x7fc>
   1ed24:	ldr	r0, [fp, #-8]
   1ed28:	bl	151e8 <main@@Base+0x2cc>
   1ed2c:	mov	r3, r0
   1ed30:	mov	r2, r3
   1ed34:	ldr	r3, [fp, #-16]
   1ed38:	ldr	r3, [r3, #20]
   1ed3c:	mov	r1, r3
   1ed40:	mov	r0, r2
   1ed44:	bl	17064 <main@@Base+0x2148>
   1ed48:	mov	r2, r0
   1ed4c:	ldr	r3, [fp, #-16]
   1ed50:	ldr	r3, [r3, #20]
   1ed54:	add	r2, r3, r2
   1ed58:	ldr	r3, [fp, #-16]
   1ed5c:	str	r2, [r3, #20]
   1ed60:	ldr	r3, [fp, #-8]
   1ed64:	add	r3, r3, #1
   1ed68:	str	r3, [fp, #-8]
   1ed6c:	ldr	r3, [fp, #-12]
   1ed70:	sub	r3, r3, #1
   1ed74:	str	r3, [fp, #-12]
   1ed78:	b	1ee20 <flatcc_json_printer_int8_vector_field@@Base+0x224>
   1ed7c:	ldr	r3, [fp, #-16]
   1ed80:	ldr	r3, [r3, #20]
   1ed84:	add	r1, r3, #1
   1ed88:	ldr	r2, [fp, #-16]
   1ed8c:	str	r1, [r2, #20]
   1ed90:	mov	r2, #44	; 0x2c
   1ed94:	strb	r2, [r3]
   1ed98:	ldr	r3, [fp, #-16]
   1ed9c:	ldrb	r3, [r3, #25]
   1eda0:	cmp	r3, #0
   1eda4:	beq	1edd0 <flatcc_json_printer_int8_vector_field@@Base+0x1d4>
   1eda8:	ldr	r3, [fp, #-16]
   1edac:	ldr	r3, [r3, #20]
   1edb0:	add	r1, r3, #1
   1edb4:	ldr	r2, [fp, #-16]
   1edb8:	str	r1, [r2, #20]
   1edbc:	mov	r2, #10
   1edc0:	strb	r2, [r3]
   1edc4:	ldr	r0, [fp, #-16]
   1edc8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1edcc:	b	1edd8 <flatcc_json_printer_int8_vector_field@@Base+0x1dc>
   1edd0:	ldr	r0, [fp, #-16]
   1edd4:	bl	15718 <main@@Base+0x7fc>
   1edd8:	ldr	r0, [fp, #-8]
   1eddc:	bl	151e8 <main@@Base+0x2cc>
   1ede0:	mov	r3, r0
   1ede4:	mov	r2, r3
   1ede8:	ldr	r3, [fp, #-16]
   1edec:	ldr	r3, [r3, #20]
   1edf0:	mov	r1, r3
   1edf4:	mov	r0, r2
   1edf8:	bl	17064 <main@@Base+0x2148>
   1edfc:	mov	r2, r0
   1ee00:	ldr	r3, [fp, #-16]
   1ee04:	ldr	r3, [r3, #20]
   1ee08:	add	r2, r3, r2
   1ee0c:	ldr	r3, [fp, #-16]
   1ee10:	str	r2, [r3, #20]
   1ee14:	ldr	r3, [fp, #-8]
   1ee18:	add	r3, r3, #1
   1ee1c:	str	r3, [fp, #-8]
   1ee20:	ldr	r3, [fp, #-12]
   1ee24:	sub	r2, r3, #1
   1ee28:	str	r2, [fp, #-12]
   1ee2c:	cmp	r3, #0
   1ee30:	bne	1ed7c <flatcc_json_printer_int8_vector_field@@Base+0x180>
   1ee34:	ldr	r3, [fp, #-16]
   1ee38:	ldrb	r3, [r3, #25]
   1ee3c:	cmp	r3, #0
   1ee40:	beq	1ee7c <flatcc_json_printer_int8_vector_field@@Base+0x280>
   1ee44:	ldr	r3, [fp, #-16]
   1ee48:	ldr	r3, [r3, #20]
   1ee4c:	add	r1, r3, #1
   1ee50:	ldr	r2, [fp, #-16]
   1ee54:	str	r1, [r2, #20]
   1ee58:	mov	r2, #10
   1ee5c:	strb	r2, [r3]
   1ee60:	ldr	r3, [fp, #-16]
   1ee64:	ldr	r3, [r3, #32]
   1ee68:	sub	r2, r3, #1
   1ee6c:	ldr	r3, [fp, #-16]
   1ee70:	str	r2, [r3, #32]
   1ee74:	ldr	r0, [fp, #-16]
   1ee78:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1ee7c:	ldr	r3, [fp, #-16]
   1ee80:	ldr	r3, [r3, #20]
   1ee84:	add	r1, r3, #1
   1ee88:	ldr	r2, [fp, #-16]
   1ee8c:	str	r1, [r2, #20]
   1ee90:	mov	r2, #93	; 0x5d
   1ee94:	strb	r2, [r3]
   1ee98:	nop	{0}
   1ee9c:	sub	sp, fp, #4
   1eea0:	ldr	fp, [sp]
   1eea4:	add	sp, sp, #4
   1eea8:	pop	{pc}		; (ldr pc, [sp], #4)

0001eeac <flatcc_json_printer_int16_vector_field@@Base>:
   1eeac:	str	fp, [sp, #-8]!
   1eeb0:	str	lr, [sp, #4]
   1eeb4:	add	fp, sp, #4
   1eeb8:	sub	sp, sp, #24
   1eebc:	str	r0, [fp, #-16]
   1eec0:	str	r1, [fp, #-20]	; 0xffffffec
   1eec4:	str	r2, [fp, #-24]	; 0xffffffe8
   1eec8:	str	r3, [fp, #-28]	; 0xffffffe4
   1eecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eed0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eed4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1eed8:	str	r0, [fp, #-8]
   1eedc:	ldr	r3, [fp, #-8]
   1eee0:	cmp	r3, #0
   1eee4:	beq	1f148 <flatcc_json_printer_int16_vector_field@@Base+0x29c>
   1eee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eeec:	ldr	r3, [r3, #16]
   1eef0:	add	r1, r3, #1
   1eef4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1eef8:	str	r1, [r2, #16]
   1eefc:	cmp	r3, #0
   1ef00:	beq	1ef20 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   1ef04:	ldr	r3, [fp, #-16]
   1ef08:	ldr	r3, [r3, #20]
   1ef0c:	add	r1, r3, #1
   1ef10:	ldr	r2, [fp, #-16]
   1ef14:	str	r1, [r2, #20]
   1ef18:	mov	r2, #44	; 0x2c
   1ef1c:	strb	r2, [r3]
   1ef20:	ldr	r0, [fp, #-8]
   1ef24:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1ef28:	str	r0, [fp, #-8]
   1ef2c:	ldr	r0, [fp, #-8]
   1ef30:	bl	154c8 <main@@Base+0x5ac>
   1ef34:	str	r0, [fp, #-12]
   1ef38:	ldr	r3, [fp, #-8]
   1ef3c:	add	r3, r3, #4
   1ef40:	str	r3, [fp, #-8]
   1ef44:	ldr	r3, [fp, #4]
   1ef48:	mov	r2, r3
   1ef4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ef50:	ldr	r0, [fp, #-16]
   1ef54:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1ef58:	ldr	r3, [fp, #-16]
   1ef5c:	ldr	r3, [r3, #32]
   1ef60:	add	r2, r3, #1
   1ef64:	ldr	r3, [fp, #-16]
   1ef68:	str	r2, [r3, #32]
   1ef6c:	ldr	r3, [fp, #-16]
   1ef70:	ldr	r3, [r3, #20]
   1ef74:	add	r1, r3, #1
   1ef78:	ldr	r2, [fp, #-16]
   1ef7c:	str	r1, [r2, #20]
   1ef80:	mov	r2, #91	; 0x5b
   1ef84:	strb	r2, [r3]
   1ef88:	ldr	r3, [fp, #-12]
   1ef8c:	cmp	r3, #0
   1ef90:	beq	1f0d0 <flatcc_json_printer_int16_vector_field@@Base+0x224>
   1ef94:	ldr	r3, [fp, #-16]
   1ef98:	ldrb	r3, [r3, #25]
   1ef9c:	cmp	r3, #0
   1efa0:	beq	1efcc <flatcc_json_printer_int16_vector_field@@Base+0x120>
   1efa4:	ldr	r3, [fp, #-16]
   1efa8:	ldr	r3, [r3, #20]
   1efac:	add	r1, r3, #1
   1efb0:	ldr	r2, [fp, #-16]
   1efb4:	str	r1, [r2, #20]
   1efb8:	mov	r2, #10
   1efbc:	strb	r2, [r3]
   1efc0:	ldr	r0, [fp, #-16]
   1efc4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1efc8:	b	1efd4 <flatcc_json_printer_int16_vector_field@@Base+0x128>
   1efcc:	ldr	r0, [fp, #-16]
   1efd0:	bl	15718 <main@@Base+0x7fc>
   1efd4:	ldr	r0, [fp, #-8]
   1efd8:	bl	1524c <main@@Base+0x330>
   1efdc:	mov	r3, r0
   1efe0:	mov	r2, r3
   1efe4:	ldr	r3, [fp, #-16]
   1efe8:	ldr	r3, [r3, #20]
   1efec:	mov	r1, r3
   1eff0:	mov	r0, r2
   1eff4:	bl	170f0 <main@@Base+0x21d4>
   1eff8:	mov	r2, r0
   1effc:	ldr	r3, [fp, #-16]
   1f000:	ldr	r3, [r3, #20]
   1f004:	add	r2, r3, r2
   1f008:	ldr	r3, [fp, #-16]
   1f00c:	str	r2, [r3, #20]
   1f010:	ldr	r3, [fp, #-8]
   1f014:	add	r3, r3, #2
   1f018:	str	r3, [fp, #-8]
   1f01c:	ldr	r3, [fp, #-12]
   1f020:	sub	r3, r3, #1
   1f024:	str	r3, [fp, #-12]
   1f028:	b	1f0d0 <flatcc_json_printer_int16_vector_field@@Base+0x224>
   1f02c:	ldr	r3, [fp, #-16]
   1f030:	ldr	r3, [r3, #20]
   1f034:	add	r1, r3, #1
   1f038:	ldr	r2, [fp, #-16]
   1f03c:	str	r1, [r2, #20]
   1f040:	mov	r2, #44	; 0x2c
   1f044:	strb	r2, [r3]
   1f048:	ldr	r3, [fp, #-16]
   1f04c:	ldrb	r3, [r3, #25]
   1f050:	cmp	r3, #0
   1f054:	beq	1f080 <flatcc_json_printer_int16_vector_field@@Base+0x1d4>
   1f058:	ldr	r3, [fp, #-16]
   1f05c:	ldr	r3, [r3, #20]
   1f060:	add	r1, r3, #1
   1f064:	ldr	r2, [fp, #-16]
   1f068:	str	r1, [r2, #20]
   1f06c:	mov	r2, #10
   1f070:	strb	r2, [r3]
   1f074:	ldr	r0, [fp, #-16]
   1f078:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f07c:	b	1f088 <flatcc_json_printer_int16_vector_field@@Base+0x1dc>
   1f080:	ldr	r0, [fp, #-16]
   1f084:	bl	15718 <main@@Base+0x7fc>
   1f088:	ldr	r0, [fp, #-8]
   1f08c:	bl	1524c <main@@Base+0x330>
   1f090:	mov	r3, r0
   1f094:	mov	r2, r3
   1f098:	ldr	r3, [fp, #-16]
   1f09c:	ldr	r3, [r3, #20]
   1f0a0:	mov	r1, r3
   1f0a4:	mov	r0, r2
   1f0a8:	bl	170f0 <main@@Base+0x21d4>
   1f0ac:	mov	r2, r0
   1f0b0:	ldr	r3, [fp, #-16]
   1f0b4:	ldr	r3, [r3, #20]
   1f0b8:	add	r2, r3, r2
   1f0bc:	ldr	r3, [fp, #-16]
   1f0c0:	str	r2, [r3, #20]
   1f0c4:	ldr	r3, [fp, #-8]
   1f0c8:	add	r3, r3, #2
   1f0cc:	str	r3, [fp, #-8]
   1f0d0:	ldr	r3, [fp, #-12]
   1f0d4:	sub	r2, r3, #1
   1f0d8:	str	r2, [fp, #-12]
   1f0dc:	cmp	r3, #0
   1f0e0:	bne	1f02c <flatcc_json_printer_int16_vector_field@@Base+0x180>
   1f0e4:	ldr	r3, [fp, #-16]
   1f0e8:	ldrb	r3, [r3, #25]
   1f0ec:	cmp	r3, #0
   1f0f0:	beq	1f12c <flatcc_json_printer_int16_vector_field@@Base+0x280>
   1f0f4:	ldr	r3, [fp, #-16]
   1f0f8:	ldr	r3, [r3, #20]
   1f0fc:	add	r1, r3, #1
   1f100:	ldr	r2, [fp, #-16]
   1f104:	str	r1, [r2, #20]
   1f108:	mov	r2, #10
   1f10c:	strb	r2, [r3]
   1f110:	ldr	r3, [fp, #-16]
   1f114:	ldr	r3, [r3, #32]
   1f118:	sub	r2, r3, #1
   1f11c:	ldr	r3, [fp, #-16]
   1f120:	str	r2, [r3, #32]
   1f124:	ldr	r0, [fp, #-16]
   1f128:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f12c:	ldr	r3, [fp, #-16]
   1f130:	ldr	r3, [r3, #20]
   1f134:	add	r1, r3, #1
   1f138:	ldr	r2, [fp, #-16]
   1f13c:	str	r1, [r2, #20]
   1f140:	mov	r2, #93	; 0x5d
   1f144:	strb	r2, [r3]
   1f148:	nop	{0}
   1f14c:	sub	sp, fp, #4
   1f150:	ldr	fp, [sp]
   1f154:	add	sp, sp, #4
   1f158:	pop	{pc}		; (ldr pc, [sp], #4)

0001f15c <flatcc_json_printer_int32_vector_field@@Base>:
   1f15c:	str	fp, [sp, #-8]!
   1f160:	str	lr, [sp, #4]
   1f164:	add	fp, sp, #4
   1f168:	sub	sp, sp, #24
   1f16c:	str	r0, [fp, #-16]
   1f170:	str	r1, [fp, #-20]	; 0xffffffec
   1f174:	str	r2, [fp, #-24]	; 0xffffffe8
   1f178:	str	r3, [fp, #-28]	; 0xffffffe4
   1f17c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f180:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f184:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1f188:	str	r0, [fp, #-8]
   1f18c:	ldr	r3, [fp, #-8]
   1f190:	cmp	r3, #0
   1f194:	beq	1f3f0 <flatcc_json_printer_int32_vector_field@@Base+0x294>
   1f198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f19c:	ldr	r3, [r3, #16]
   1f1a0:	add	r1, r3, #1
   1f1a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f1a8:	str	r1, [r2, #16]
   1f1ac:	cmp	r3, #0
   1f1b0:	beq	1f1d0 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   1f1b4:	ldr	r3, [fp, #-16]
   1f1b8:	ldr	r3, [r3, #20]
   1f1bc:	add	r1, r3, #1
   1f1c0:	ldr	r2, [fp, #-16]
   1f1c4:	str	r1, [r2, #20]
   1f1c8:	mov	r2, #44	; 0x2c
   1f1cc:	strb	r2, [r3]
   1f1d0:	ldr	r0, [fp, #-8]
   1f1d4:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1f1d8:	str	r0, [fp, #-8]
   1f1dc:	ldr	r0, [fp, #-8]
   1f1e0:	bl	154c8 <main@@Base+0x5ac>
   1f1e4:	str	r0, [fp, #-12]
   1f1e8:	ldr	r3, [fp, #-8]
   1f1ec:	add	r3, r3, #4
   1f1f0:	str	r3, [fp, #-8]
   1f1f4:	ldr	r3, [fp, #4]
   1f1f8:	mov	r2, r3
   1f1fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f200:	ldr	r0, [fp, #-16]
   1f204:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1f208:	ldr	r3, [fp, #-16]
   1f20c:	ldr	r3, [r3, #32]
   1f210:	add	r2, r3, #1
   1f214:	ldr	r3, [fp, #-16]
   1f218:	str	r2, [r3, #32]
   1f21c:	ldr	r3, [fp, #-16]
   1f220:	ldr	r3, [r3, #20]
   1f224:	add	r1, r3, #1
   1f228:	ldr	r2, [fp, #-16]
   1f22c:	str	r1, [r2, #20]
   1f230:	mov	r2, #91	; 0x5b
   1f234:	strb	r2, [r3]
   1f238:	ldr	r3, [fp, #-12]
   1f23c:	cmp	r3, #0
   1f240:	beq	1f378 <flatcc_json_printer_int32_vector_field@@Base+0x21c>
   1f244:	ldr	r3, [fp, #-16]
   1f248:	ldrb	r3, [r3, #25]
   1f24c:	cmp	r3, #0
   1f250:	beq	1f27c <flatcc_json_printer_int32_vector_field@@Base+0x120>
   1f254:	ldr	r3, [fp, #-16]
   1f258:	ldr	r3, [r3, #20]
   1f25c:	add	r1, r3, #1
   1f260:	ldr	r2, [fp, #-16]
   1f264:	str	r1, [r2, #20]
   1f268:	mov	r2, #10
   1f26c:	strb	r2, [r3]
   1f270:	ldr	r0, [fp, #-16]
   1f274:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f278:	b	1f284 <flatcc_json_printer_int32_vector_field@@Base+0x128>
   1f27c:	ldr	r0, [fp, #-16]
   1f280:	bl	15718 <main@@Base+0x7fc>
   1f284:	ldr	r0, [fp, #-8]
   1f288:	bl	152ac <main@@Base+0x390>
   1f28c:	mov	r2, r0
   1f290:	ldr	r3, [fp, #-16]
   1f294:	ldr	r3, [r3, #20]
   1f298:	mov	r1, r3
   1f29c:	mov	r0, r2
   1f2a0:	bl	1717c <main@@Base+0x2260>
   1f2a4:	mov	r2, r0
   1f2a8:	ldr	r3, [fp, #-16]
   1f2ac:	ldr	r3, [r3, #20]
   1f2b0:	add	r2, r3, r2
   1f2b4:	ldr	r3, [fp, #-16]
   1f2b8:	str	r2, [r3, #20]
   1f2bc:	ldr	r3, [fp, #-8]
   1f2c0:	add	r3, r3, #4
   1f2c4:	str	r3, [fp, #-8]
   1f2c8:	ldr	r3, [fp, #-12]
   1f2cc:	sub	r3, r3, #1
   1f2d0:	str	r3, [fp, #-12]
   1f2d4:	b	1f378 <flatcc_json_printer_int32_vector_field@@Base+0x21c>
   1f2d8:	ldr	r3, [fp, #-16]
   1f2dc:	ldr	r3, [r3, #20]
   1f2e0:	add	r1, r3, #1
   1f2e4:	ldr	r2, [fp, #-16]
   1f2e8:	str	r1, [r2, #20]
   1f2ec:	mov	r2, #44	; 0x2c
   1f2f0:	strb	r2, [r3]
   1f2f4:	ldr	r3, [fp, #-16]
   1f2f8:	ldrb	r3, [r3, #25]
   1f2fc:	cmp	r3, #0
   1f300:	beq	1f32c <flatcc_json_printer_int32_vector_field@@Base+0x1d0>
   1f304:	ldr	r3, [fp, #-16]
   1f308:	ldr	r3, [r3, #20]
   1f30c:	add	r1, r3, #1
   1f310:	ldr	r2, [fp, #-16]
   1f314:	str	r1, [r2, #20]
   1f318:	mov	r2, #10
   1f31c:	strb	r2, [r3]
   1f320:	ldr	r0, [fp, #-16]
   1f324:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f328:	b	1f334 <flatcc_json_printer_int32_vector_field@@Base+0x1d8>
   1f32c:	ldr	r0, [fp, #-16]
   1f330:	bl	15718 <main@@Base+0x7fc>
   1f334:	ldr	r0, [fp, #-8]
   1f338:	bl	152ac <main@@Base+0x390>
   1f33c:	mov	r2, r0
   1f340:	ldr	r3, [fp, #-16]
   1f344:	ldr	r3, [r3, #20]
   1f348:	mov	r1, r3
   1f34c:	mov	r0, r2
   1f350:	bl	1717c <main@@Base+0x2260>
   1f354:	mov	r2, r0
   1f358:	ldr	r3, [fp, #-16]
   1f35c:	ldr	r3, [r3, #20]
   1f360:	add	r2, r3, r2
   1f364:	ldr	r3, [fp, #-16]
   1f368:	str	r2, [r3, #20]
   1f36c:	ldr	r3, [fp, #-8]
   1f370:	add	r3, r3, #4
   1f374:	str	r3, [fp, #-8]
   1f378:	ldr	r3, [fp, #-12]
   1f37c:	sub	r2, r3, #1
   1f380:	str	r2, [fp, #-12]
   1f384:	cmp	r3, #0
   1f388:	bne	1f2d8 <flatcc_json_printer_int32_vector_field@@Base+0x17c>
   1f38c:	ldr	r3, [fp, #-16]
   1f390:	ldrb	r3, [r3, #25]
   1f394:	cmp	r3, #0
   1f398:	beq	1f3d4 <flatcc_json_printer_int32_vector_field@@Base+0x278>
   1f39c:	ldr	r3, [fp, #-16]
   1f3a0:	ldr	r3, [r3, #20]
   1f3a4:	add	r1, r3, #1
   1f3a8:	ldr	r2, [fp, #-16]
   1f3ac:	str	r1, [r2, #20]
   1f3b0:	mov	r2, #10
   1f3b4:	strb	r2, [r3]
   1f3b8:	ldr	r3, [fp, #-16]
   1f3bc:	ldr	r3, [r3, #32]
   1f3c0:	sub	r2, r3, #1
   1f3c4:	ldr	r3, [fp, #-16]
   1f3c8:	str	r2, [r3, #32]
   1f3cc:	ldr	r0, [fp, #-16]
   1f3d0:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f3d4:	ldr	r3, [fp, #-16]
   1f3d8:	ldr	r3, [r3, #20]
   1f3dc:	add	r1, r3, #1
   1f3e0:	ldr	r2, [fp, #-16]
   1f3e4:	str	r1, [r2, #20]
   1f3e8:	mov	r2, #93	; 0x5d
   1f3ec:	strb	r2, [r3]
   1f3f0:	nop	{0}
   1f3f4:	sub	sp, fp, #4
   1f3f8:	ldr	fp, [sp]
   1f3fc:	add	sp, sp, #4
   1f400:	pop	{pc}		; (ldr pc, [sp], #4)

0001f404 <flatcc_json_printer_int64_vector_field@@Base>:
   1f404:	str	fp, [sp, #-8]!
   1f408:	str	lr, [sp, #4]
   1f40c:	add	fp, sp, #4
   1f410:	sub	sp, sp, #24
   1f414:	str	r0, [fp, #-16]
   1f418:	str	r1, [fp, #-20]	; 0xffffffec
   1f41c:	str	r2, [fp, #-24]	; 0xffffffe8
   1f420:	str	r3, [fp, #-28]	; 0xffffffe4
   1f424:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f428:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f42c:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1f430:	str	r0, [fp, #-8]
   1f434:	ldr	r3, [fp, #-8]
   1f438:	cmp	r3, #0
   1f43c:	beq	1f688 <flatcc_json_printer_int64_vector_field@@Base+0x284>
   1f440:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f444:	ldr	r3, [r3, #16]
   1f448:	add	r1, r3, #1
   1f44c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f450:	str	r1, [r2, #16]
   1f454:	cmp	r3, #0
   1f458:	beq	1f478 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   1f45c:	ldr	r3, [fp, #-16]
   1f460:	ldr	r3, [r3, #20]
   1f464:	add	r1, r3, #1
   1f468:	ldr	r2, [fp, #-16]
   1f46c:	str	r1, [r2, #20]
   1f470:	mov	r2, #44	; 0x2c
   1f474:	strb	r2, [r3]
   1f478:	ldr	r0, [fp, #-8]
   1f47c:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1f480:	str	r0, [fp, #-8]
   1f484:	ldr	r0, [fp, #-8]
   1f488:	bl	154c8 <main@@Base+0x5ac>
   1f48c:	str	r0, [fp, #-12]
   1f490:	ldr	r3, [fp, #-8]
   1f494:	add	r3, r3, #4
   1f498:	str	r3, [fp, #-8]
   1f49c:	ldr	r3, [fp, #4]
   1f4a0:	mov	r2, r3
   1f4a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f4a8:	ldr	r0, [fp, #-16]
   1f4ac:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1f4b0:	ldr	r3, [fp, #-16]
   1f4b4:	ldr	r3, [r3, #32]
   1f4b8:	add	r2, r3, #1
   1f4bc:	ldr	r3, [fp, #-16]
   1f4c0:	str	r2, [r3, #32]
   1f4c4:	ldr	r3, [fp, #-16]
   1f4c8:	ldr	r3, [r3, #20]
   1f4cc:	add	r1, r3, #1
   1f4d0:	ldr	r2, [fp, #-16]
   1f4d4:	str	r1, [r2, #20]
   1f4d8:	mov	r2, #91	; 0x5b
   1f4dc:	strb	r2, [r3]
   1f4e0:	ldr	r3, [fp, #-12]
   1f4e4:	cmp	r3, #0
   1f4e8:	beq	1f610 <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   1f4ec:	ldr	r3, [fp, #-16]
   1f4f0:	ldrb	r3, [r3, #25]
   1f4f4:	cmp	r3, #0
   1f4f8:	beq	1f524 <flatcc_json_printer_int64_vector_field@@Base+0x120>
   1f4fc:	ldr	r3, [fp, #-16]
   1f500:	ldr	r3, [r3, #20]
   1f504:	add	r1, r3, #1
   1f508:	ldr	r2, [fp, #-16]
   1f50c:	str	r1, [r2, #20]
   1f510:	mov	r2, #10
   1f514:	strb	r2, [r3]
   1f518:	ldr	r0, [fp, #-16]
   1f51c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f520:	b	1f52c <flatcc_json_printer_int64_vector_field@@Base+0x128>
   1f524:	ldr	r0, [fp, #-16]
   1f528:	bl	15718 <main@@Base+0x7fc>
   1f52c:	ldr	r0, [fp, #-8]
   1f530:	bl	15310 <main@@Base+0x3f4>
   1f534:	ldr	r3, [fp, #-16]
   1f538:	ldr	r3, [r3, #20]
   1f53c:	mov	r2, r3
   1f540:	bl	17200 <main@@Base+0x22e4>
   1f544:	mov	r2, r0
   1f548:	ldr	r3, [fp, #-16]
   1f54c:	ldr	r3, [r3, #20]
   1f550:	add	r2, r3, r2
   1f554:	ldr	r3, [fp, #-16]
   1f558:	str	r2, [r3, #20]
   1f55c:	ldr	r3, [fp, #-8]
   1f560:	add	r3, r3, #8
   1f564:	str	r3, [fp, #-8]
   1f568:	ldr	r3, [fp, #-12]
   1f56c:	sub	r3, r3, #1
   1f570:	str	r3, [fp, #-12]
   1f574:	b	1f610 <flatcc_json_printer_int64_vector_field@@Base+0x20c>
   1f578:	ldr	r3, [fp, #-16]
   1f57c:	ldr	r3, [r3, #20]
   1f580:	add	r1, r3, #1
   1f584:	ldr	r2, [fp, #-16]
   1f588:	str	r1, [r2, #20]
   1f58c:	mov	r2, #44	; 0x2c
   1f590:	strb	r2, [r3]
   1f594:	ldr	r3, [fp, #-16]
   1f598:	ldrb	r3, [r3, #25]
   1f59c:	cmp	r3, #0
   1f5a0:	beq	1f5cc <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   1f5a4:	ldr	r3, [fp, #-16]
   1f5a8:	ldr	r3, [r3, #20]
   1f5ac:	add	r1, r3, #1
   1f5b0:	ldr	r2, [fp, #-16]
   1f5b4:	str	r1, [r2, #20]
   1f5b8:	mov	r2, #10
   1f5bc:	strb	r2, [r3]
   1f5c0:	ldr	r0, [fp, #-16]
   1f5c4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f5c8:	b	1f5d4 <flatcc_json_printer_int64_vector_field@@Base+0x1d0>
   1f5cc:	ldr	r0, [fp, #-16]
   1f5d0:	bl	15718 <main@@Base+0x7fc>
   1f5d4:	ldr	r0, [fp, #-8]
   1f5d8:	bl	15310 <main@@Base+0x3f4>
   1f5dc:	ldr	r3, [fp, #-16]
   1f5e0:	ldr	r3, [r3, #20]
   1f5e4:	mov	r2, r3
   1f5e8:	bl	17200 <main@@Base+0x22e4>
   1f5ec:	mov	r2, r0
   1f5f0:	ldr	r3, [fp, #-16]
   1f5f4:	ldr	r3, [r3, #20]
   1f5f8:	add	r2, r3, r2
   1f5fc:	ldr	r3, [fp, #-16]
   1f600:	str	r2, [r3, #20]
   1f604:	ldr	r3, [fp, #-8]
   1f608:	add	r3, r3, #8
   1f60c:	str	r3, [fp, #-8]
   1f610:	ldr	r3, [fp, #-12]
   1f614:	sub	r2, r3, #1
   1f618:	str	r2, [fp, #-12]
   1f61c:	cmp	r3, #0
   1f620:	bne	1f578 <flatcc_json_printer_int64_vector_field@@Base+0x174>
   1f624:	ldr	r3, [fp, #-16]
   1f628:	ldrb	r3, [r3, #25]
   1f62c:	cmp	r3, #0
   1f630:	beq	1f66c <flatcc_json_printer_int64_vector_field@@Base+0x268>
   1f634:	ldr	r3, [fp, #-16]
   1f638:	ldr	r3, [r3, #20]
   1f63c:	add	r1, r3, #1
   1f640:	ldr	r2, [fp, #-16]
   1f644:	str	r1, [r2, #20]
   1f648:	mov	r2, #10
   1f64c:	strb	r2, [r3]
   1f650:	ldr	r3, [fp, #-16]
   1f654:	ldr	r3, [r3, #32]
   1f658:	sub	r2, r3, #1
   1f65c:	ldr	r3, [fp, #-16]
   1f660:	str	r2, [r3, #32]
   1f664:	ldr	r0, [fp, #-16]
   1f668:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f66c:	ldr	r3, [fp, #-16]
   1f670:	ldr	r3, [r3, #20]
   1f674:	add	r1, r3, #1
   1f678:	ldr	r2, [fp, #-16]
   1f67c:	str	r1, [r2, #20]
   1f680:	mov	r2, #93	; 0x5d
   1f684:	strb	r2, [r3]
   1f688:	nop	{0}
   1f68c:	sub	sp, fp, #4
   1f690:	ldr	fp, [sp]
   1f694:	add	sp, sp, #4
   1f698:	pop	{pc}		; (ldr pc, [sp], #4)

0001f69c <flatcc_json_printer_bool_vector_field@@Base>:
   1f69c:	str	fp, [sp, #-8]!
   1f6a0:	str	lr, [sp, #4]
   1f6a4:	add	fp, sp, #4
   1f6a8:	sub	sp, sp, #24
   1f6ac:	str	r0, [fp, #-16]
   1f6b0:	str	r1, [fp, #-20]	; 0xffffffec
   1f6b4:	str	r2, [fp, #-24]	; 0xffffffe8
   1f6b8:	str	r3, [fp, #-28]	; 0xffffffe4
   1f6bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f6c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f6c4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1f6c8:	str	r0, [fp, #-8]
   1f6cc:	ldr	r3, [fp, #-8]
   1f6d0:	cmp	r3, #0
   1f6d4:	beq	1f938 <flatcc_json_printer_bool_vector_field@@Base+0x29c>
   1f6d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f6dc:	ldr	r3, [r3, #16]
   1f6e0:	add	r1, r3, #1
   1f6e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f6e8:	str	r1, [r2, #16]
   1f6ec:	cmp	r3, #0
   1f6f0:	beq	1f710 <flatcc_json_printer_bool_vector_field@@Base+0x74>
   1f6f4:	ldr	r3, [fp, #-16]
   1f6f8:	ldr	r3, [r3, #20]
   1f6fc:	add	r1, r3, #1
   1f700:	ldr	r2, [fp, #-16]
   1f704:	str	r1, [r2, #20]
   1f708:	mov	r2, #44	; 0x2c
   1f70c:	strb	r2, [r3]
   1f710:	ldr	r0, [fp, #-8]
   1f714:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1f718:	str	r0, [fp, #-8]
   1f71c:	ldr	r0, [fp, #-8]
   1f720:	bl	154c8 <main@@Base+0x5ac>
   1f724:	str	r0, [fp, #-12]
   1f728:	ldr	r3, [fp, #-8]
   1f72c:	add	r3, r3, #4
   1f730:	str	r3, [fp, #-8]
   1f734:	ldr	r3, [fp, #4]
   1f738:	mov	r2, r3
   1f73c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f740:	ldr	r0, [fp, #-16]
   1f744:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1f748:	ldr	r3, [fp, #-16]
   1f74c:	ldr	r3, [r3, #32]
   1f750:	add	r2, r3, #1
   1f754:	ldr	r3, [fp, #-16]
   1f758:	str	r2, [r3, #32]
   1f75c:	ldr	r3, [fp, #-16]
   1f760:	ldr	r3, [r3, #20]
   1f764:	add	r1, r3, #1
   1f768:	ldr	r2, [fp, #-16]
   1f76c:	str	r1, [r2, #20]
   1f770:	mov	r2, #91	; 0x5b
   1f774:	strb	r2, [r3]
   1f778:	ldr	r3, [fp, #-12]
   1f77c:	cmp	r3, #0
   1f780:	beq	1f8c0 <flatcc_json_printer_bool_vector_field@@Base+0x224>
   1f784:	ldr	r3, [fp, #-16]
   1f788:	ldrb	r3, [r3, #25]
   1f78c:	cmp	r3, #0
   1f790:	beq	1f7bc <flatcc_json_printer_bool_vector_field@@Base+0x120>
   1f794:	ldr	r3, [fp, #-16]
   1f798:	ldr	r3, [r3, #20]
   1f79c:	add	r1, r3, #1
   1f7a0:	ldr	r2, [fp, #-16]
   1f7a4:	str	r1, [r2, #20]
   1f7a8:	mov	r2, #10
   1f7ac:	strb	r2, [r3]
   1f7b0:	ldr	r0, [fp, #-16]
   1f7b4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f7b8:	b	1f7c4 <flatcc_json_printer_bool_vector_field@@Base+0x128>
   1f7bc:	ldr	r0, [fp, #-16]
   1f7c0:	bl	15718 <main@@Base+0x7fc>
   1f7c4:	ldr	r0, [fp, #-8]
   1f7c8:	bl	15468 <main@@Base+0x54c>
   1f7cc:	mov	r3, r0
   1f7d0:	mov	r2, r3
   1f7d4:	ldr	r3, [fp, #-16]
   1f7d8:	ldr	r3, [r3, #20]
   1f7dc:	mov	r1, r3
   1f7e0:	mov	r0, r2
   1f7e4:	bl	1576c <main@@Base+0x850>
   1f7e8:	mov	r2, r0
   1f7ec:	ldr	r3, [fp, #-16]
   1f7f0:	ldr	r3, [r3, #20]
   1f7f4:	add	r2, r3, r2
   1f7f8:	ldr	r3, [fp, #-16]
   1f7fc:	str	r2, [r3, #20]
   1f800:	ldr	r3, [fp, #-8]
   1f804:	add	r3, r3, #1
   1f808:	str	r3, [fp, #-8]
   1f80c:	ldr	r3, [fp, #-12]
   1f810:	sub	r3, r3, #1
   1f814:	str	r3, [fp, #-12]
   1f818:	b	1f8c0 <flatcc_json_printer_bool_vector_field@@Base+0x224>
   1f81c:	ldr	r3, [fp, #-16]
   1f820:	ldr	r3, [r3, #20]
   1f824:	add	r1, r3, #1
   1f828:	ldr	r2, [fp, #-16]
   1f82c:	str	r1, [r2, #20]
   1f830:	mov	r2, #44	; 0x2c
   1f834:	strb	r2, [r3]
   1f838:	ldr	r3, [fp, #-16]
   1f83c:	ldrb	r3, [r3, #25]
   1f840:	cmp	r3, #0
   1f844:	beq	1f870 <flatcc_json_printer_bool_vector_field@@Base+0x1d4>
   1f848:	ldr	r3, [fp, #-16]
   1f84c:	ldr	r3, [r3, #20]
   1f850:	add	r1, r3, #1
   1f854:	ldr	r2, [fp, #-16]
   1f858:	str	r1, [r2, #20]
   1f85c:	mov	r2, #10
   1f860:	strb	r2, [r3]
   1f864:	ldr	r0, [fp, #-16]
   1f868:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f86c:	b	1f878 <flatcc_json_printer_bool_vector_field@@Base+0x1dc>
   1f870:	ldr	r0, [fp, #-16]
   1f874:	bl	15718 <main@@Base+0x7fc>
   1f878:	ldr	r0, [fp, #-8]
   1f87c:	bl	15468 <main@@Base+0x54c>
   1f880:	mov	r3, r0
   1f884:	mov	r2, r3
   1f888:	ldr	r3, [fp, #-16]
   1f88c:	ldr	r3, [r3, #20]
   1f890:	mov	r1, r3
   1f894:	mov	r0, r2
   1f898:	bl	1576c <main@@Base+0x850>
   1f89c:	mov	r2, r0
   1f8a0:	ldr	r3, [fp, #-16]
   1f8a4:	ldr	r3, [r3, #20]
   1f8a8:	add	r2, r3, r2
   1f8ac:	ldr	r3, [fp, #-16]
   1f8b0:	str	r2, [r3, #20]
   1f8b4:	ldr	r3, [fp, #-8]
   1f8b8:	add	r3, r3, #1
   1f8bc:	str	r3, [fp, #-8]
   1f8c0:	ldr	r3, [fp, #-12]
   1f8c4:	sub	r2, r3, #1
   1f8c8:	str	r2, [fp, #-12]
   1f8cc:	cmp	r3, #0
   1f8d0:	bne	1f81c <flatcc_json_printer_bool_vector_field@@Base+0x180>
   1f8d4:	ldr	r3, [fp, #-16]
   1f8d8:	ldrb	r3, [r3, #25]
   1f8dc:	cmp	r3, #0
   1f8e0:	beq	1f91c <flatcc_json_printer_bool_vector_field@@Base+0x280>
   1f8e4:	ldr	r3, [fp, #-16]
   1f8e8:	ldr	r3, [r3, #20]
   1f8ec:	add	r1, r3, #1
   1f8f0:	ldr	r2, [fp, #-16]
   1f8f4:	str	r1, [r2, #20]
   1f8f8:	mov	r2, #10
   1f8fc:	strb	r2, [r3]
   1f900:	ldr	r3, [fp, #-16]
   1f904:	ldr	r3, [r3, #32]
   1f908:	sub	r2, r3, #1
   1f90c:	ldr	r3, [fp, #-16]
   1f910:	str	r2, [r3, #32]
   1f914:	ldr	r0, [fp, #-16]
   1f918:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1f91c:	ldr	r3, [fp, #-16]
   1f920:	ldr	r3, [r3, #20]
   1f924:	add	r1, r3, #1
   1f928:	ldr	r2, [fp, #-16]
   1f92c:	str	r1, [r2, #20]
   1f930:	mov	r2, #93	; 0x5d
   1f934:	strb	r2, [r3]
   1f938:	nop	{0}
   1f93c:	sub	sp, fp, #4
   1f940:	ldr	fp, [sp]
   1f944:	add	sp, sp, #4
   1f948:	pop	{pc}		; (ldr pc, [sp], #4)

0001f94c <flatcc_json_printer_float_vector_field@@Base>:
   1f94c:	str	fp, [sp, #-8]!
   1f950:	str	lr, [sp, #4]
   1f954:	add	fp, sp, #4
   1f958:	sub	sp, sp, #24
   1f95c:	str	r0, [fp, #-16]
   1f960:	str	r1, [fp, #-20]	; 0xffffffec
   1f964:	str	r2, [fp, #-24]	; 0xffffffe8
   1f968:	str	r3, [fp, #-28]	; 0xffffffe4
   1f96c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f970:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f974:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1f978:	str	r0, [fp, #-8]
   1f97c:	ldr	r3, [fp, #-8]
   1f980:	cmp	r3, #0
   1f984:	beq	1fbe8 <flatcc_json_printer_float_vector_field@@Base+0x29c>
   1f988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f98c:	ldr	r3, [r3, #16]
   1f990:	add	r1, r3, #1
   1f994:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f998:	str	r1, [r2, #16]
   1f99c:	cmp	r3, #0
   1f9a0:	beq	1f9c0 <flatcc_json_printer_float_vector_field@@Base+0x74>
   1f9a4:	ldr	r3, [fp, #-16]
   1f9a8:	ldr	r3, [r3, #20]
   1f9ac:	add	r1, r3, #1
   1f9b0:	ldr	r2, [fp, #-16]
   1f9b4:	str	r1, [r2, #20]
   1f9b8:	mov	r2, #44	; 0x2c
   1f9bc:	strb	r2, [r3]
   1f9c0:	ldr	r0, [fp, #-8]
   1f9c4:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1f9c8:	str	r0, [fp, #-8]
   1f9cc:	ldr	r0, [fp, #-8]
   1f9d0:	bl	154c8 <main@@Base+0x5ac>
   1f9d4:	str	r0, [fp, #-12]
   1f9d8:	ldr	r3, [fp, #-8]
   1f9dc:	add	r3, r3, #4
   1f9e0:	str	r3, [fp, #-8]
   1f9e4:	ldr	r3, [fp, #4]
   1f9e8:	mov	r2, r3
   1f9ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f9f0:	ldr	r0, [fp, #-16]
   1f9f4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1f9f8:	ldr	r3, [fp, #-16]
   1f9fc:	ldr	r3, [r3, #32]
   1fa00:	add	r2, r3, #1
   1fa04:	ldr	r3, [fp, #-16]
   1fa08:	str	r2, [r3, #32]
   1fa0c:	ldr	r3, [fp, #-16]
   1fa10:	ldr	r3, [r3, #20]
   1fa14:	add	r1, r3, #1
   1fa18:	ldr	r2, [fp, #-16]
   1fa1c:	str	r1, [r2, #20]
   1fa20:	mov	r2, #91	; 0x5b
   1fa24:	strb	r2, [r3]
   1fa28:	ldr	r3, [fp, #-12]
   1fa2c:	cmp	r3, #0
   1fa30:	beq	1fb70 <flatcc_json_printer_float_vector_field@@Base+0x224>
   1fa34:	ldr	r3, [fp, #-16]
   1fa38:	ldrb	r3, [r3, #25]
   1fa3c:	cmp	r3, #0
   1fa40:	beq	1fa6c <flatcc_json_printer_float_vector_field@@Base+0x120>
   1fa44:	ldr	r3, [fp, #-16]
   1fa48:	ldr	r3, [r3, #20]
   1fa4c:	add	r1, r3, #1
   1fa50:	ldr	r2, [fp, #-16]
   1fa54:	str	r1, [r2, #20]
   1fa58:	mov	r2, #10
   1fa5c:	strb	r2, [r3]
   1fa60:	ldr	r0, [fp, #-16]
   1fa64:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1fa68:	b	1fa74 <flatcc_json_printer_float_vector_field@@Base+0x128>
   1fa6c:	ldr	r0, [fp, #-16]
   1fa70:	bl	15718 <main@@Base+0x7fc>
   1fa74:	ldr	r0, [fp, #-8]
   1fa78:	bl	15390 <main@@Base+0x474>
   1fa7c:	vmov.f32	s15, s0
   1fa80:	vcvt.f64.f32	d7, s15
   1fa84:	ldr	r3, [fp, #-16]
   1fa88:	ldr	r3, [r3, #20]
   1fa8c:	mov	r0, r3
   1fa90:	vmov.f64	d0, d7
   1fa94:	bl	18f48 <main@@Base+0x402c>
   1fa98:	mov	r2, r0
   1fa9c:	ldr	r3, [fp, #-16]
   1faa0:	ldr	r3, [r3, #20]
   1faa4:	add	r2, r3, r2
   1faa8:	ldr	r3, [fp, #-16]
   1faac:	str	r2, [r3, #20]
   1fab0:	ldr	r3, [fp, #-8]
   1fab4:	add	r3, r3, #4
   1fab8:	str	r3, [fp, #-8]
   1fabc:	ldr	r3, [fp, #-12]
   1fac0:	sub	r3, r3, #1
   1fac4:	str	r3, [fp, #-12]
   1fac8:	b	1fb70 <flatcc_json_printer_float_vector_field@@Base+0x224>
   1facc:	ldr	r3, [fp, #-16]
   1fad0:	ldr	r3, [r3, #20]
   1fad4:	add	r1, r3, #1
   1fad8:	ldr	r2, [fp, #-16]
   1fadc:	str	r1, [r2, #20]
   1fae0:	mov	r2, #44	; 0x2c
   1fae4:	strb	r2, [r3]
   1fae8:	ldr	r3, [fp, #-16]
   1faec:	ldrb	r3, [r3, #25]
   1faf0:	cmp	r3, #0
   1faf4:	beq	1fb20 <flatcc_json_printer_float_vector_field@@Base+0x1d4>
   1faf8:	ldr	r3, [fp, #-16]
   1fafc:	ldr	r3, [r3, #20]
   1fb00:	add	r1, r3, #1
   1fb04:	ldr	r2, [fp, #-16]
   1fb08:	str	r1, [r2, #20]
   1fb0c:	mov	r2, #10
   1fb10:	strb	r2, [r3]
   1fb14:	ldr	r0, [fp, #-16]
   1fb18:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1fb1c:	b	1fb28 <flatcc_json_printer_float_vector_field@@Base+0x1dc>
   1fb20:	ldr	r0, [fp, #-16]
   1fb24:	bl	15718 <main@@Base+0x7fc>
   1fb28:	ldr	r0, [fp, #-8]
   1fb2c:	bl	15390 <main@@Base+0x474>
   1fb30:	vmov.f32	s15, s0
   1fb34:	vcvt.f64.f32	d7, s15
   1fb38:	ldr	r3, [fp, #-16]
   1fb3c:	ldr	r3, [r3, #20]
   1fb40:	mov	r0, r3
   1fb44:	vmov.f64	d0, d7
   1fb48:	bl	18f48 <main@@Base+0x402c>
   1fb4c:	mov	r2, r0
   1fb50:	ldr	r3, [fp, #-16]
   1fb54:	ldr	r3, [r3, #20]
   1fb58:	add	r2, r3, r2
   1fb5c:	ldr	r3, [fp, #-16]
   1fb60:	str	r2, [r3, #20]
   1fb64:	ldr	r3, [fp, #-8]
   1fb68:	add	r3, r3, #4
   1fb6c:	str	r3, [fp, #-8]
   1fb70:	ldr	r3, [fp, #-12]
   1fb74:	sub	r2, r3, #1
   1fb78:	str	r2, [fp, #-12]
   1fb7c:	cmp	r3, #0
   1fb80:	bne	1facc <flatcc_json_printer_float_vector_field@@Base+0x180>
   1fb84:	ldr	r3, [fp, #-16]
   1fb88:	ldrb	r3, [r3, #25]
   1fb8c:	cmp	r3, #0
   1fb90:	beq	1fbcc <flatcc_json_printer_float_vector_field@@Base+0x280>
   1fb94:	ldr	r3, [fp, #-16]
   1fb98:	ldr	r3, [r3, #20]
   1fb9c:	add	r1, r3, #1
   1fba0:	ldr	r2, [fp, #-16]
   1fba4:	str	r1, [r2, #20]
   1fba8:	mov	r2, #10
   1fbac:	strb	r2, [r3]
   1fbb0:	ldr	r3, [fp, #-16]
   1fbb4:	ldr	r3, [r3, #32]
   1fbb8:	sub	r2, r3, #1
   1fbbc:	ldr	r3, [fp, #-16]
   1fbc0:	str	r2, [r3, #32]
   1fbc4:	ldr	r0, [fp, #-16]
   1fbc8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1fbcc:	ldr	r3, [fp, #-16]
   1fbd0:	ldr	r3, [r3, #20]
   1fbd4:	add	r1, r3, #1
   1fbd8:	ldr	r2, [fp, #-16]
   1fbdc:	str	r1, [r2, #20]
   1fbe0:	mov	r2, #93	; 0x5d
   1fbe4:	strb	r2, [r3]
   1fbe8:	nop	{0}
   1fbec:	sub	sp, fp, #4
   1fbf0:	ldr	fp, [sp]
   1fbf4:	add	sp, sp, #4
   1fbf8:	pop	{pc}		; (ldr pc, [sp], #4)

0001fbfc <flatcc_json_printer_double_vector_field@@Base>:
   1fbfc:	str	fp, [sp, #-8]!
   1fc00:	str	lr, [sp, #4]
   1fc04:	add	fp, sp, #4
   1fc08:	sub	sp, sp, #24
   1fc0c:	str	r0, [fp, #-16]
   1fc10:	str	r1, [fp, #-20]	; 0xffffffec
   1fc14:	str	r2, [fp, #-24]	; 0xffffffe8
   1fc18:	str	r3, [fp, #-28]	; 0xffffffe4
   1fc1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fc20:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fc24:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1fc28:	str	r0, [fp, #-8]
   1fc2c:	ldr	r3, [fp, #-8]
   1fc30:	cmp	r3, #0
   1fc34:	beq	1fe90 <flatcc_json_printer_double_vector_field@@Base+0x294>
   1fc38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fc3c:	ldr	r3, [r3, #16]
   1fc40:	add	r1, r3, #1
   1fc44:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc48:	str	r1, [r2, #16]
   1fc4c:	cmp	r3, #0
   1fc50:	beq	1fc70 <flatcc_json_printer_double_vector_field@@Base+0x74>
   1fc54:	ldr	r3, [fp, #-16]
   1fc58:	ldr	r3, [r3, #20]
   1fc5c:	add	r1, r3, #1
   1fc60:	ldr	r2, [fp, #-16]
   1fc64:	str	r1, [r2, #20]
   1fc68:	mov	r2, #44	; 0x2c
   1fc6c:	strb	r2, [r3]
   1fc70:	ldr	r0, [fp, #-8]
   1fc74:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1fc78:	str	r0, [fp, #-8]
   1fc7c:	ldr	r0, [fp, #-8]
   1fc80:	bl	154c8 <main@@Base+0x5ac>
   1fc84:	str	r0, [fp, #-12]
   1fc88:	ldr	r3, [fp, #-8]
   1fc8c:	add	r3, r3, #4
   1fc90:	str	r3, [fp, #-8]
   1fc94:	ldr	r3, [fp, #4]
   1fc98:	mov	r2, r3
   1fc9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1fca0:	ldr	r0, [fp, #-16]
   1fca4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1fca8:	ldr	r3, [fp, #-16]
   1fcac:	ldr	r3, [r3, #32]
   1fcb0:	add	r2, r3, #1
   1fcb4:	ldr	r3, [fp, #-16]
   1fcb8:	str	r2, [r3, #32]
   1fcbc:	ldr	r3, [fp, #-16]
   1fcc0:	ldr	r3, [r3, #20]
   1fcc4:	add	r1, r3, #1
   1fcc8:	ldr	r2, [fp, #-16]
   1fccc:	str	r1, [r2, #20]
   1fcd0:	mov	r2, #91	; 0x5b
   1fcd4:	strb	r2, [r3]
   1fcd8:	ldr	r3, [fp, #-12]
   1fcdc:	cmp	r3, #0
   1fce0:	beq	1fe18 <flatcc_json_printer_double_vector_field@@Base+0x21c>
   1fce4:	ldr	r3, [fp, #-16]
   1fce8:	ldrb	r3, [r3, #25]
   1fcec:	cmp	r3, #0
   1fcf0:	beq	1fd1c <flatcc_json_printer_double_vector_field@@Base+0x120>
   1fcf4:	ldr	r3, [fp, #-16]
   1fcf8:	ldr	r3, [r3, #20]
   1fcfc:	add	r1, r3, #1
   1fd00:	ldr	r2, [fp, #-16]
   1fd04:	str	r1, [r2, #20]
   1fd08:	mov	r2, #10
   1fd0c:	strb	r2, [r3]
   1fd10:	ldr	r0, [fp, #-16]
   1fd14:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1fd18:	b	1fd24 <flatcc_json_printer_double_vector_field@@Base+0x128>
   1fd1c:	ldr	r0, [fp, #-16]
   1fd20:	bl	15718 <main@@Base+0x7fc>
   1fd24:	ldr	r0, [fp, #-8]
   1fd28:	bl	15404 <main@@Base+0x4e8>
   1fd2c:	vmov.f64	d7, d0
   1fd30:	ldr	r3, [fp, #-16]
   1fd34:	ldr	r3, [r3, #20]
   1fd38:	mov	r0, r3
   1fd3c:	vmov.f64	d0, d7
   1fd40:	bl	18f48 <main@@Base+0x402c>
   1fd44:	mov	r2, r0
   1fd48:	ldr	r3, [fp, #-16]
   1fd4c:	ldr	r3, [r3, #20]
   1fd50:	add	r2, r3, r2
   1fd54:	ldr	r3, [fp, #-16]
   1fd58:	str	r2, [r3, #20]
   1fd5c:	ldr	r3, [fp, #-8]
   1fd60:	add	r3, r3, #8
   1fd64:	str	r3, [fp, #-8]
   1fd68:	ldr	r3, [fp, #-12]
   1fd6c:	sub	r3, r3, #1
   1fd70:	str	r3, [fp, #-12]
   1fd74:	b	1fe18 <flatcc_json_printer_double_vector_field@@Base+0x21c>
   1fd78:	ldr	r3, [fp, #-16]
   1fd7c:	ldr	r3, [r3, #20]
   1fd80:	add	r1, r3, #1
   1fd84:	ldr	r2, [fp, #-16]
   1fd88:	str	r1, [r2, #20]
   1fd8c:	mov	r2, #44	; 0x2c
   1fd90:	strb	r2, [r3]
   1fd94:	ldr	r3, [fp, #-16]
   1fd98:	ldrb	r3, [r3, #25]
   1fd9c:	cmp	r3, #0
   1fda0:	beq	1fdcc <flatcc_json_printer_double_vector_field@@Base+0x1d0>
   1fda4:	ldr	r3, [fp, #-16]
   1fda8:	ldr	r3, [r3, #20]
   1fdac:	add	r1, r3, #1
   1fdb0:	ldr	r2, [fp, #-16]
   1fdb4:	str	r1, [r2, #20]
   1fdb8:	mov	r2, #10
   1fdbc:	strb	r2, [r3]
   1fdc0:	ldr	r0, [fp, #-16]
   1fdc4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1fdc8:	b	1fdd4 <flatcc_json_printer_double_vector_field@@Base+0x1d8>
   1fdcc:	ldr	r0, [fp, #-16]
   1fdd0:	bl	15718 <main@@Base+0x7fc>
   1fdd4:	ldr	r0, [fp, #-8]
   1fdd8:	bl	15404 <main@@Base+0x4e8>
   1fddc:	vmov.f64	d7, d0
   1fde0:	ldr	r3, [fp, #-16]
   1fde4:	ldr	r3, [r3, #20]
   1fde8:	mov	r0, r3
   1fdec:	vmov.f64	d0, d7
   1fdf0:	bl	18f48 <main@@Base+0x402c>
   1fdf4:	mov	r2, r0
   1fdf8:	ldr	r3, [fp, #-16]
   1fdfc:	ldr	r3, [r3, #20]
   1fe00:	add	r2, r3, r2
   1fe04:	ldr	r3, [fp, #-16]
   1fe08:	str	r2, [r3, #20]
   1fe0c:	ldr	r3, [fp, #-8]
   1fe10:	add	r3, r3, #8
   1fe14:	str	r3, [fp, #-8]
   1fe18:	ldr	r3, [fp, #-12]
   1fe1c:	sub	r2, r3, #1
   1fe20:	str	r2, [fp, #-12]
   1fe24:	cmp	r3, #0
   1fe28:	bne	1fd78 <flatcc_json_printer_double_vector_field@@Base+0x17c>
   1fe2c:	ldr	r3, [fp, #-16]
   1fe30:	ldrb	r3, [r3, #25]
   1fe34:	cmp	r3, #0
   1fe38:	beq	1fe74 <flatcc_json_printer_double_vector_field@@Base+0x278>
   1fe3c:	ldr	r3, [fp, #-16]
   1fe40:	ldr	r3, [r3, #20]
   1fe44:	add	r1, r3, #1
   1fe48:	ldr	r2, [fp, #-16]
   1fe4c:	str	r1, [r2, #20]
   1fe50:	mov	r2, #10
   1fe54:	strb	r2, [r3]
   1fe58:	ldr	r3, [fp, #-16]
   1fe5c:	ldr	r3, [r3, #32]
   1fe60:	sub	r2, r3, #1
   1fe64:	ldr	r3, [fp, #-16]
   1fe68:	str	r2, [r3, #32]
   1fe6c:	ldr	r0, [fp, #-16]
   1fe70:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1fe74:	ldr	r3, [fp, #-16]
   1fe78:	ldr	r3, [r3, #20]
   1fe7c:	add	r1, r3, #1
   1fe80:	ldr	r2, [fp, #-16]
   1fe84:	str	r1, [r2, #20]
   1fe88:	mov	r2, #93	; 0x5d
   1fe8c:	strb	r2, [r3]
   1fe90:	nop	{0}
   1fe94:	sub	sp, fp, #4
   1fe98:	ldr	fp, [sp]
   1fe9c:	add	sp, sp, #4
   1fea0:	pop	{pc}		; (ldr pc, [sp], #4)

0001fea4 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   1fea4:	str	fp, [sp, #-8]!
   1fea8:	str	lr, [sp, #4]
   1feac:	add	fp, sp, #4
   1feb0:	sub	sp, sp, #32
   1feb4:	str	r0, [fp, #-16]
   1feb8:	str	r1, [fp, #-20]	; 0xffffffec
   1febc:	str	r2, [fp, #-24]	; 0xffffffe8
   1fec0:	str	r3, [fp, #-28]	; 0xffffffe4
   1fec4:	ldr	r3, [fp, #-16]
   1fec8:	ldrb	r3, [r3, #27]
   1fecc:	cmp	r3, #0
   1fed0:	beq	1fef4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x50>
   1fed4:	ldr	r3, [fp, #4]
   1fed8:	str	r3, [sp]
   1fedc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fee0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fee4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fee8:	ldr	r0, [fp, #-16]
   1feec:	bl	1deac <flatcc_json_printer_utype_vector_field@@Base>
   1fef0:	b	20138 <flatcc_json_printer_utype_enum_vector_field@@Base+0x294>
   1fef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fef8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fefc:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   1ff00:	str	r0, [fp, #-8]
   1ff04:	ldr	r3, [fp, #-8]
   1ff08:	cmp	r3, #0
   1ff0c:	beq	20138 <flatcc_json_printer_utype_enum_vector_field@@Base+0x294>
   1ff10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff14:	ldr	r3, [r3, #16]
   1ff18:	add	r1, r3, #1
   1ff1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ff20:	str	r1, [r2, #16]
   1ff24:	cmp	r3, #0
   1ff28:	beq	1ff48 <flatcc_json_printer_utype_enum_vector_field@@Base+0xa4>
   1ff2c:	ldr	r3, [fp, #-16]
   1ff30:	ldr	r3, [r3, #20]
   1ff34:	add	r1, r3, #1
   1ff38:	ldr	r2, [fp, #-16]
   1ff3c:	str	r1, [r2, #20]
   1ff40:	mov	r2, #44	; 0x2c
   1ff44:	strb	r2, [r3]
   1ff48:	ldr	r0, [fp, #-8]
   1ff4c:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   1ff50:	str	r0, [fp, #-8]
   1ff54:	ldr	r0, [fp, #-8]
   1ff58:	bl	154c8 <main@@Base+0x5ac>
   1ff5c:	str	r0, [fp, #-12]
   1ff60:	ldr	r3, [fp, #-8]
   1ff64:	add	r3, r3, #4
   1ff68:	str	r3, [fp, #-8]
   1ff6c:	ldr	r3, [fp, #4]
   1ff70:	mov	r2, r3
   1ff74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ff78:	ldr	r0, [fp, #-16]
   1ff7c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   1ff80:	ldr	r3, [fp, #-16]
   1ff84:	ldr	r3, [r3, #32]
   1ff88:	add	r2, r3, #1
   1ff8c:	ldr	r3, [fp, #-16]
   1ff90:	str	r2, [r3, #32]
   1ff94:	ldr	r3, [fp, #-16]
   1ff98:	ldr	r3, [r3, #20]
   1ff9c:	add	r1, r3, #1
   1ffa0:	ldr	r2, [fp, #-16]
   1ffa4:	str	r1, [r2, #20]
   1ffa8:	mov	r2, #91	; 0x5b
   1ffac:	strb	r2, [r3]
   1ffb0:	ldr	r3, [fp, #-12]
   1ffb4:	cmp	r3, #0
   1ffb8:	beq	200c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x21c>
   1ffbc:	ldr	r3, [fp, #-16]
   1ffc0:	ldrb	r3, [r3, #25]
   1ffc4:	cmp	r3, #0
   1ffc8:	beq	1fff4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x150>
   1ffcc:	ldr	r3, [fp, #-16]
   1ffd0:	ldr	r3, [r3, #20]
   1ffd4:	add	r1, r3, #1
   1ffd8:	ldr	r2, [fp, #-16]
   1ffdc:	str	r1, [r2, #20]
   1ffe0:	mov	r2, #10
   1ffe4:	strb	r2, [r3]
   1ffe8:	ldr	r0, [fp, #-16]
   1ffec:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   1fff0:	b	1fffc <flatcc_json_printer_utype_enum_vector_field@@Base+0x158>
   1fff4:	ldr	r0, [fp, #-16]
   1fff8:	bl	15718 <main@@Base+0x7fc>
   1fffc:	ldr	r0, [fp, #-8]
   20000:	bl	155f0 <main@@Base+0x6d4>
   20004:	mov	r3, r0
   20008:	mov	r2, r3
   2000c:	ldr	r3, [fp, #8]
   20010:	mov	r1, r2
   20014:	ldr	r0, [fp, #-16]
   20018:	blx	r3
   2001c:	ldr	r3, [fp, #-8]
   20020:	add	r3, r3, #1
   20024:	str	r3, [fp, #-8]
   20028:	ldr	r3, [fp, #-12]
   2002c:	sub	r3, r3, #1
   20030:	str	r3, [fp, #-12]
   20034:	b	200c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x21c>
   20038:	ldr	r3, [fp, #-16]
   2003c:	ldr	r3, [r3, #20]
   20040:	add	r1, r3, #1
   20044:	ldr	r2, [fp, #-16]
   20048:	str	r1, [r2, #20]
   2004c:	mov	r2, #44	; 0x2c
   20050:	strb	r2, [r3]
   20054:	ldr	r3, [fp, #-16]
   20058:	ldrb	r3, [r3, #25]
   2005c:	cmp	r3, #0
   20060:	beq	2008c <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e8>
   20064:	ldr	r3, [fp, #-16]
   20068:	ldr	r3, [r3, #20]
   2006c:	add	r1, r3, #1
   20070:	ldr	r2, [fp, #-16]
   20074:	str	r1, [r2, #20]
   20078:	mov	r2, #10
   2007c:	strb	r2, [r3]
   20080:	ldr	r0, [fp, #-16]
   20084:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20088:	b	20094 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1f0>
   2008c:	ldr	r0, [fp, #-16]
   20090:	bl	15718 <main@@Base+0x7fc>
   20094:	ldr	r0, [fp, #-8]
   20098:	bl	155f0 <main@@Base+0x6d4>
   2009c:	mov	r3, r0
   200a0:	mov	r2, r3
   200a4:	ldr	r3, [fp, #8]
   200a8:	mov	r1, r2
   200ac:	ldr	r0, [fp, #-16]
   200b0:	blx	r3
   200b4:	ldr	r3, [fp, #-8]
   200b8:	add	r3, r3, #1
   200bc:	str	r3, [fp, #-8]
   200c0:	ldr	r3, [fp, #-12]
   200c4:	sub	r2, r3, #1
   200c8:	str	r2, [fp, #-12]
   200cc:	cmp	r3, #0
   200d0:	bne	20038 <flatcc_json_printer_utype_enum_vector_field@@Base+0x194>
   200d4:	ldr	r3, [fp, #-16]
   200d8:	ldrb	r3, [r3, #25]
   200dc:	cmp	r3, #0
   200e0:	beq	2011c <flatcc_json_printer_utype_enum_vector_field@@Base+0x278>
   200e4:	ldr	r3, [fp, #-16]
   200e8:	ldr	r3, [r3, #20]
   200ec:	add	r1, r3, #1
   200f0:	ldr	r2, [fp, #-16]
   200f4:	str	r1, [r2, #20]
   200f8:	mov	r2, #10
   200fc:	strb	r2, [r3]
   20100:	ldr	r3, [fp, #-16]
   20104:	ldr	r3, [r3, #32]
   20108:	sub	r2, r3, #1
   2010c:	ldr	r3, [fp, #-16]
   20110:	str	r2, [r3, #32]
   20114:	ldr	r0, [fp, #-16]
   20118:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2011c:	ldr	r3, [fp, #-16]
   20120:	ldr	r3, [r3, #20]
   20124:	add	r1, r3, #1
   20128:	ldr	r2, [fp, #-16]
   2012c:	str	r1, [r2, #20]
   20130:	mov	r2, #93	; 0x5d
   20134:	strb	r2, [r3]
   20138:	sub	sp, fp, #4
   2013c:	ldr	fp, [sp]
   20140:	add	sp, sp, #4
   20144:	pop	{pc}		; (ldr pc, [sp], #4)

00020148 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   20148:	str	fp, [sp, #-8]!
   2014c:	str	lr, [sp, #4]
   20150:	add	fp, sp, #4
   20154:	sub	sp, sp, #32
   20158:	str	r0, [fp, #-16]
   2015c:	str	r1, [fp, #-20]	; 0xffffffec
   20160:	str	r2, [fp, #-24]	; 0xffffffe8
   20164:	str	r3, [fp, #-28]	; 0xffffffe4
   20168:	ldr	r3, [fp, #-16]
   2016c:	ldrb	r3, [r3, #27]
   20170:	cmp	r3, #0
   20174:	beq	20198 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x50>
   20178:	ldr	r3, [fp, #4]
   2017c:	str	r3, [sp]
   20180:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20184:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20188:	ldr	r1, [fp, #-20]	; 0xffffffec
   2018c:	ldr	r0, [fp, #-16]
   20190:	bl	1e15c <flatcc_json_printer_uint8_vector_field@@Base>
   20194:	b	203dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x294>
   20198:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2019c:	ldr	r0, [fp, #-20]	; 0xffffffec
   201a0:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   201a4:	str	r0, [fp, #-8]
   201a8:	ldr	r3, [fp, #-8]
   201ac:	cmp	r3, #0
   201b0:	beq	203dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x294>
   201b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   201b8:	ldr	r3, [r3, #16]
   201bc:	add	r1, r3, #1
   201c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   201c4:	str	r1, [r2, #16]
   201c8:	cmp	r3, #0
   201cc:	beq	201ec <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa4>
   201d0:	ldr	r3, [fp, #-16]
   201d4:	ldr	r3, [r3, #20]
   201d8:	add	r1, r3, #1
   201dc:	ldr	r2, [fp, #-16]
   201e0:	str	r1, [r2, #20]
   201e4:	mov	r2, #44	; 0x2c
   201e8:	strb	r2, [r3]
   201ec:	ldr	r0, [fp, #-8]
   201f0:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   201f4:	str	r0, [fp, #-8]
   201f8:	ldr	r0, [fp, #-8]
   201fc:	bl	154c8 <main@@Base+0x5ac>
   20200:	str	r0, [fp, #-12]
   20204:	ldr	r3, [fp, #-8]
   20208:	add	r3, r3, #4
   2020c:	str	r3, [fp, #-8]
   20210:	ldr	r3, [fp, #4]
   20214:	mov	r2, r3
   20218:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2021c:	ldr	r0, [fp, #-16]
   20220:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   20224:	ldr	r3, [fp, #-16]
   20228:	ldr	r3, [r3, #32]
   2022c:	add	r2, r3, #1
   20230:	ldr	r3, [fp, #-16]
   20234:	str	r2, [r3, #32]
   20238:	ldr	r3, [fp, #-16]
   2023c:	ldr	r3, [r3, #20]
   20240:	add	r1, r3, #1
   20244:	ldr	r2, [fp, #-16]
   20248:	str	r1, [r2, #20]
   2024c:	mov	r2, #91	; 0x5b
   20250:	strb	r2, [r3]
   20254:	ldr	r3, [fp, #-12]
   20258:	cmp	r3, #0
   2025c:	beq	20364 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x21c>
   20260:	ldr	r3, [fp, #-16]
   20264:	ldrb	r3, [r3, #25]
   20268:	cmp	r3, #0
   2026c:	beq	20298 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x150>
   20270:	ldr	r3, [fp, #-16]
   20274:	ldr	r3, [r3, #20]
   20278:	add	r1, r3, #1
   2027c:	ldr	r2, [fp, #-16]
   20280:	str	r1, [r2, #20]
   20284:	mov	r2, #10
   20288:	strb	r2, [r3]
   2028c:	ldr	r0, [fp, #-16]
   20290:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20294:	b	202a0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x158>
   20298:	ldr	r0, [fp, #-16]
   2029c:	bl	15718 <main@@Base+0x7fc>
   202a0:	ldr	r0, [fp, #-8]
   202a4:	bl	15050 <main@@Base+0x134>
   202a8:	mov	r3, r0
   202ac:	mov	r2, r3
   202b0:	ldr	r3, [fp, #8]
   202b4:	mov	r1, r2
   202b8:	ldr	r0, [fp, #-16]
   202bc:	blx	r3
   202c0:	ldr	r3, [fp, #-8]
   202c4:	add	r3, r3, #1
   202c8:	str	r3, [fp, #-8]
   202cc:	ldr	r3, [fp, #-12]
   202d0:	sub	r3, r3, #1
   202d4:	str	r3, [fp, #-12]
   202d8:	b	20364 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x21c>
   202dc:	ldr	r3, [fp, #-16]
   202e0:	ldr	r3, [r3, #20]
   202e4:	add	r1, r3, #1
   202e8:	ldr	r2, [fp, #-16]
   202ec:	str	r1, [r2, #20]
   202f0:	mov	r2, #44	; 0x2c
   202f4:	strb	r2, [r3]
   202f8:	ldr	r3, [fp, #-16]
   202fc:	ldrb	r3, [r3, #25]
   20300:	cmp	r3, #0
   20304:	beq	20330 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e8>
   20308:	ldr	r3, [fp, #-16]
   2030c:	ldr	r3, [r3, #20]
   20310:	add	r1, r3, #1
   20314:	ldr	r2, [fp, #-16]
   20318:	str	r1, [r2, #20]
   2031c:	mov	r2, #10
   20320:	strb	r2, [r3]
   20324:	ldr	r0, [fp, #-16]
   20328:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2032c:	b	20338 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1f0>
   20330:	ldr	r0, [fp, #-16]
   20334:	bl	15718 <main@@Base+0x7fc>
   20338:	ldr	r0, [fp, #-8]
   2033c:	bl	15050 <main@@Base+0x134>
   20340:	mov	r3, r0
   20344:	mov	r2, r3
   20348:	ldr	r3, [fp, #8]
   2034c:	mov	r1, r2
   20350:	ldr	r0, [fp, #-16]
   20354:	blx	r3
   20358:	ldr	r3, [fp, #-8]
   2035c:	add	r3, r3, #1
   20360:	str	r3, [fp, #-8]
   20364:	ldr	r3, [fp, #-12]
   20368:	sub	r2, r3, #1
   2036c:	str	r2, [fp, #-12]
   20370:	cmp	r3, #0
   20374:	bne	202dc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x194>
   20378:	ldr	r3, [fp, #-16]
   2037c:	ldrb	r3, [r3, #25]
   20380:	cmp	r3, #0
   20384:	beq	203c0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x278>
   20388:	ldr	r3, [fp, #-16]
   2038c:	ldr	r3, [r3, #20]
   20390:	add	r1, r3, #1
   20394:	ldr	r2, [fp, #-16]
   20398:	str	r1, [r2, #20]
   2039c:	mov	r2, #10
   203a0:	strb	r2, [r3]
   203a4:	ldr	r3, [fp, #-16]
   203a8:	ldr	r3, [r3, #32]
   203ac:	sub	r2, r3, #1
   203b0:	ldr	r3, [fp, #-16]
   203b4:	str	r2, [r3, #32]
   203b8:	ldr	r0, [fp, #-16]
   203bc:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   203c0:	ldr	r3, [fp, #-16]
   203c4:	ldr	r3, [r3, #20]
   203c8:	add	r1, r3, #1
   203cc:	ldr	r2, [fp, #-16]
   203d0:	str	r1, [r2, #20]
   203d4:	mov	r2, #93	; 0x5d
   203d8:	strb	r2, [r3]
   203dc:	sub	sp, fp, #4
   203e0:	ldr	fp, [sp]
   203e4:	add	sp, sp, #4
   203e8:	pop	{pc}		; (ldr pc, [sp], #4)

000203ec <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   203ec:	str	fp, [sp, #-8]!
   203f0:	str	lr, [sp, #4]
   203f4:	add	fp, sp, #4
   203f8:	sub	sp, sp, #32
   203fc:	str	r0, [fp, #-16]
   20400:	str	r1, [fp, #-20]	; 0xffffffec
   20404:	str	r2, [fp, #-24]	; 0xffffffe8
   20408:	str	r3, [fp, #-28]	; 0xffffffe4
   2040c:	ldr	r3, [fp, #-16]
   20410:	ldrb	r3, [r3, #27]
   20414:	cmp	r3, #0
   20418:	beq	2043c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x50>
   2041c:	ldr	r3, [fp, #4]
   20420:	str	r3, [sp]
   20424:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2042c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20430:	ldr	r0, [fp, #-16]
   20434:	bl	1e40c <flatcc_json_printer_uint16_vector_field@@Base>
   20438:	b	20680 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x294>
   2043c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20440:	ldr	r0, [fp, #-20]	; 0xffffffec
   20444:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   20448:	str	r0, [fp, #-8]
   2044c:	ldr	r3, [fp, #-8]
   20450:	cmp	r3, #0
   20454:	beq	20680 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x294>
   20458:	ldr	r3, [fp, #-20]	; 0xffffffec
   2045c:	ldr	r3, [r3, #16]
   20460:	add	r1, r3, #1
   20464:	ldr	r2, [fp, #-20]	; 0xffffffec
   20468:	str	r1, [r2, #16]
   2046c:	cmp	r3, #0
   20470:	beq	20490 <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa4>
   20474:	ldr	r3, [fp, #-16]
   20478:	ldr	r3, [r3, #20]
   2047c:	add	r1, r3, #1
   20480:	ldr	r2, [fp, #-16]
   20484:	str	r1, [r2, #20]
   20488:	mov	r2, #44	; 0x2c
   2048c:	strb	r2, [r3]
   20490:	ldr	r0, [fp, #-8]
   20494:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   20498:	str	r0, [fp, #-8]
   2049c:	ldr	r0, [fp, #-8]
   204a0:	bl	154c8 <main@@Base+0x5ac>
   204a4:	str	r0, [fp, #-12]
   204a8:	ldr	r3, [fp, #-8]
   204ac:	add	r3, r3, #4
   204b0:	str	r3, [fp, #-8]
   204b4:	ldr	r3, [fp, #4]
   204b8:	mov	r2, r3
   204bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   204c0:	ldr	r0, [fp, #-16]
   204c4:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   204c8:	ldr	r3, [fp, #-16]
   204cc:	ldr	r3, [r3, #32]
   204d0:	add	r2, r3, #1
   204d4:	ldr	r3, [fp, #-16]
   204d8:	str	r2, [r3, #32]
   204dc:	ldr	r3, [fp, #-16]
   204e0:	ldr	r3, [r3, #20]
   204e4:	add	r1, r3, #1
   204e8:	ldr	r2, [fp, #-16]
   204ec:	str	r1, [r2, #20]
   204f0:	mov	r2, #91	; 0x5b
   204f4:	strb	r2, [r3]
   204f8:	ldr	r3, [fp, #-12]
   204fc:	cmp	r3, #0
   20500:	beq	20608 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   20504:	ldr	r3, [fp, #-16]
   20508:	ldrb	r3, [r3, #25]
   2050c:	cmp	r3, #0
   20510:	beq	2053c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x150>
   20514:	ldr	r3, [fp, #-16]
   20518:	ldr	r3, [r3, #20]
   2051c:	add	r1, r3, #1
   20520:	ldr	r2, [fp, #-16]
   20524:	str	r1, [r2, #20]
   20528:	mov	r2, #10
   2052c:	strb	r2, [r3]
   20530:	ldr	r0, [fp, #-16]
   20534:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20538:	b	20544 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x158>
   2053c:	ldr	r0, [fp, #-16]
   20540:	bl	15718 <main@@Base+0x7fc>
   20544:	ldr	r0, [fp, #-8]
   20548:	bl	150b4 <main@@Base+0x198>
   2054c:	mov	r3, r0
   20550:	mov	r2, r3
   20554:	ldr	r3, [fp, #8]
   20558:	mov	r1, r2
   2055c:	ldr	r0, [fp, #-16]
   20560:	blx	r3
   20564:	ldr	r3, [fp, #-8]
   20568:	add	r3, r3, #2
   2056c:	str	r3, [fp, #-8]
   20570:	ldr	r3, [fp, #-12]
   20574:	sub	r3, r3, #1
   20578:	str	r3, [fp, #-12]
   2057c:	b	20608 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x21c>
   20580:	ldr	r3, [fp, #-16]
   20584:	ldr	r3, [r3, #20]
   20588:	add	r1, r3, #1
   2058c:	ldr	r2, [fp, #-16]
   20590:	str	r1, [r2, #20]
   20594:	mov	r2, #44	; 0x2c
   20598:	strb	r2, [r3]
   2059c:	ldr	r3, [fp, #-16]
   205a0:	ldrb	r3, [r3, #25]
   205a4:	cmp	r3, #0
   205a8:	beq	205d4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e8>
   205ac:	ldr	r3, [fp, #-16]
   205b0:	ldr	r3, [r3, #20]
   205b4:	add	r1, r3, #1
   205b8:	ldr	r2, [fp, #-16]
   205bc:	str	r1, [r2, #20]
   205c0:	mov	r2, #10
   205c4:	strb	r2, [r3]
   205c8:	ldr	r0, [fp, #-16]
   205cc:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   205d0:	b	205dc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1f0>
   205d4:	ldr	r0, [fp, #-16]
   205d8:	bl	15718 <main@@Base+0x7fc>
   205dc:	ldr	r0, [fp, #-8]
   205e0:	bl	150b4 <main@@Base+0x198>
   205e4:	mov	r3, r0
   205e8:	mov	r2, r3
   205ec:	ldr	r3, [fp, #8]
   205f0:	mov	r1, r2
   205f4:	ldr	r0, [fp, #-16]
   205f8:	blx	r3
   205fc:	ldr	r3, [fp, #-8]
   20600:	add	r3, r3, #2
   20604:	str	r3, [fp, #-8]
   20608:	ldr	r3, [fp, #-12]
   2060c:	sub	r2, r3, #1
   20610:	str	r2, [fp, #-12]
   20614:	cmp	r3, #0
   20618:	bne	20580 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x194>
   2061c:	ldr	r3, [fp, #-16]
   20620:	ldrb	r3, [r3, #25]
   20624:	cmp	r3, #0
   20628:	beq	20664 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x278>
   2062c:	ldr	r3, [fp, #-16]
   20630:	ldr	r3, [r3, #20]
   20634:	add	r1, r3, #1
   20638:	ldr	r2, [fp, #-16]
   2063c:	str	r1, [r2, #20]
   20640:	mov	r2, #10
   20644:	strb	r2, [r3]
   20648:	ldr	r3, [fp, #-16]
   2064c:	ldr	r3, [r3, #32]
   20650:	sub	r2, r3, #1
   20654:	ldr	r3, [fp, #-16]
   20658:	str	r2, [r3, #32]
   2065c:	ldr	r0, [fp, #-16]
   20660:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20664:	ldr	r3, [fp, #-16]
   20668:	ldr	r3, [r3, #20]
   2066c:	add	r1, r3, #1
   20670:	ldr	r2, [fp, #-16]
   20674:	str	r1, [r2, #20]
   20678:	mov	r2, #93	; 0x5d
   2067c:	strb	r2, [r3]
   20680:	sub	sp, fp, #4
   20684:	ldr	fp, [sp]
   20688:	add	sp, sp, #4
   2068c:	pop	{pc}		; (ldr pc, [sp], #4)

00020690 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   20690:	str	fp, [sp, #-8]!
   20694:	str	lr, [sp, #4]
   20698:	add	fp, sp, #4
   2069c:	sub	sp, sp, #32
   206a0:	str	r0, [fp, #-16]
   206a4:	str	r1, [fp, #-20]	; 0xffffffec
   206a8:	str	r2, [fp, #-24]	; 0xffffffe8
   206ac:	str	r3, [fp, #-28]	; 0xffffffe4
   206b0:	ldr	r3, [fp, #-16]
   206b4:	ldrb	r3, [r3, #27]
   206b8:	cmp	r3, #0
   206bc:	beq	206e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x50>
   206c0:	ldr	r3, [fp, #4]
   206c4:	str	r3, [sp]
   206c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   206cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   206d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   206d4:	ldr	r0, [fp, #-16]
   206d8:	bl	1e6bc <flatcc_json_printer_uint32_vector_field@@Base>
   206dc:	b	2091c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   206e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   206e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   206e8:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   206ec:	str	r0, [fp, #-8]
   206f0:	ldr	r3, [fp, #-8]
   206f4:	cmp	r3, #0
   206f8:	beq	2091c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x28c>
   206fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   20700:	ldr	r3, [r3, #16]
   20704:	add	r1, r3, #1
   20708:	ldr	r2, [fp, #-20]	; 0xffffffec
   2070c:	str	r1, [r2, #16]
   20710:	cmp	r3, #0
   20714:	beq	20734 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa4>
   20718:	ldr	r3, [fp, #-16]
   2071c:	ldr	r3, [r3, #20]
   20720:	add	r1, r3, #1
   20724:	ldr	r2, [fp, #-16]
   20728:	str	r1, [r2, #20]
   2072c:	mov	r2, #44	; 0x2c
   20730:	strb	r2, [r3]
   20734:	ldr	r0, [fp, #-8]
   20738:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   2073c:	str	r0, [fp, #-8]
   20740:	ldr	r0, [fp, #-8]
   20744:	bl	154c8 <main@@Base+0x5ac>
   20748:	str	r0, [fp, #-12]
   2074c:	ldr	r3, [fp, #-8]
   20750:	add	r3, r3, #4
   20754:	str	r3, [fp, #-8]
   20758:	ldr	r3, [fp, #4]
   2075c:	mov	r2, r3
   20760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20764:	ldr	r0, [fp, #-16]
   20768:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   2076c:	ldr	r3, [fp, #-16]
   20770:	ldr	r3, [r3, #32]
   20774:	add	r2, r3, #1
   20778:	ldr	r3, [fp, #-16]
   2077c:	str	r2, [r3, #32]
   20780:	ldr	r3, [fp, #-16]
   20784:	ldr	r3, [r3, #20]
   20788:	add	r1, r3, #1
   2078c:	ldr	r2, [fp, #-16]
   20790:	str	r1, [r2, #20]
   20794:	mov	r2, #91	; 0x5b
   20798:	strb	r2, [r3]
   2079c:	ldr	r3, [fp, #-12]
   207a0:	cmp	r3, #0
   207a4:	beq	208a4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x214>
   207a8:	ldr	r3, [fp, #-16]
   207ac:	ldrb	r3, [r3, #25]
   207b0:	cmp	r3, #0
   207b4:	beq	207e0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x150>
   207b8:	ldr	r3, [fp, #-16]
   207bc:	ldr	r3, [r3, #20]
   207c0:	add	r1, r3, #1
   207c4:	ldr	r2, [fp, #-16]
   207c8:	str	r1, [r2, #20]
   207cc:	mov	r2, #10
   207d0:	strb	r2, [r3]
   207d4:	ldr	r0, [fp, #-16]
   207d8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   207dc:	b	207e8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x158>
   207e0:	ldr	r0, [fp, #-16]
   207e4:	bl	15718 <main@@Base+0x7fc>
   207e8:	ldr	r0, [fp, #-8]
   207ec:	bl	15114 <main@@Base+0x1f8>
   207f0:	mov	r2, r0
   207f4:	ldr	r3, [fp, #8]
   207f8:	mov	r1, r2
   207fc:	ldr	r0, [fp, #-16]
   20800:	blx	r3
   20804:	ldr	r3, [fp, #-8]
   20808:	add	r3, r3, #4
   2080c:	str	r3, [fp, #-8]
   20810:	ldr	r3, [fp, #-12]
   20814:	sub	r3, r3, #1
   20818:	str	r3, [fp, #-12]
   2081c:	b	208a4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x214>
   20820:	ldr	r3, [fp, #-16]
   20824:	ldr	r3, [r3, #20]
   20828:	add	r1, r3, #1
   2082c:	ldr	r2, [fp, #-16]
   20830:	str	r1, [r2, #20]
   20834:	mov	r2, #44	; 0x2c
   20838:	strb	r2, [r3]
   2083c:	ldr	r3, [fp, #-16]
   20840:	ldrb	r3, [r3, #25]
   20844:	cmp	r3, #0
   20848:	beq	20874 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e4>
   2084c:	ldr	r3, [fp, #-16]
   20850:	ldr	r3, [r3, #20]
   20854:	add	r1, r3, #1
   20858:	ldr	r2, [fp, #-16]
   2085c:	str	r1, [r2, #20]
   20860:	mov	r2, #10
   20864:	strb	r2, [r3]
   20868:	ldr	r0, [fp, #-16]
   2086c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20870:	b	2087c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   20874:	ldr	r0, [fp, #-16]
   20878:	bl	15718 <main@@Base+0x7fc>
   2087c:	ldr	r0, [fp, #-8]
   20880:	bl	15114 <main@@Base+0x1f8>
   20884:	mov	r2, r0
   20888:	ldr	r3, [fp, #8]
   2088c:	mov	r1, r2
   20890:	ldr	r0, [fp, #-16]
   20894:	blx	r3
   20898:	ldr	r3, [fp, #-8]
   2089c:	add	r3, r3, #4
   208a0:	str	r3, [fp, #-8]
   208a4:	ldr	r3, [fp, #-12]
   208a8:	sub	r2, r3, #1
   208ac:	str	r2, [fp, #-12]
   208b0:	cmp	r3, #0
   208b4:	bne	20820 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x190>
   208b8:	ldr	r3, [fp, #-16]
   208bc:	ldrb	r3, [r3, #25]
   208c0:	cmp	r3, #0
   208c4:	beq	20900 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x270>
   208c8:	ldr	r3, [fp, #-16]
   208cc:	ldr	r3, [r3, #20]
   208d0:	add	r1, r3, #1
   208d4:	ldr	r2, [fp, #-16]
   208d8:	str	r1, [r2, #20]
   208dc:	mov	r2, #10
   208e0:	strb	r2, [r3]
   208e4:	ldr	r3, [fp, #-16]
   208e8:	ldr	r3, [r3, #32]
   208ec:	sub	r2, r3, #1
   208f0:	ldr	r3, [fp, #-16]
   208f4:	str	r2, [r3, #32]
   208f8:	ldr	r0, [fp, #-16]
   208fc:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20900:	ldr	r3, [fp, #-16]
   20904:	ldr	r3, [r3, #20]
   20908:	add	r1, r3, #1
   2090c:	ldr	r2, [fp, #-16]
   20910:	str	r1, [r2, #20]
   20914:	mov	r2, #93	; 0x5d
   20918:	strb	r2, [r3]
   2091c:	sub	sp, fp, #4
   20920:	ldr	fp, [sp]
   20924:	add	sp, sp, #4
   20928:	pop	{pc}		; (ldr pc, [sp], #4)

0002092c <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   2092c:	str	fp, [sp, #-8]!
   20930:	str	lr, [sp, #4]
   20934:	add	fp, sp, #4
   20938:	sub	sp, sp, #32
   2093c:	str	r0, [fp, #-16]
   20940:	str	r1, [fp, #-20]	; 0xffffffec
   20944:	str	r2, [fp, #-24]	; 0xffffffe8
   20948:	str	r3, [fp, #-28]	; 0xffffffe4
   2094c:	ldr	r3, [fp, #-16]
   20950:	ldrb	r3, [r3, #27]
   20954:	cmp	r3, #0
   20958:	beq	2097c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x50>
   2095c:	ldr	r3, [fp, #4]
   20960:	str	r3, [sp]
   20964:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20968:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2096c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20970:	ldr	r0, [fp, #-16]
   20974:	bl	1e964 <flatcc_json_printer_uint64_vector_field@@Base>
   20978:	b	20bb8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   2097c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20980:	ldr	r0, [fp, #-20]	; 0xffffffec
   20984:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   20988:	str	r0, [fp, #-8]
   2098c:	ldr	r3, [fp, #-8]
   20990:	cmp	r3, #0
   20994:	beq	20bb8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x28c>
   20998:	ldr	r3, [fp, #-20]	; 0xffffffec
   2099c:	ldr	r3, [r3, #16]
   209a0:	add	r1, r3, #1
   209a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   209a8:	str	r1, [r2, #16]
   209ac:	cmp	r3, #0
   209b0:	beq	209d0 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa4>
   209b4:	ldr	r3, [fp, #-16]
   209b8:	ldr	r3, [r3, #20]
   209bc:	add	r1, r3, #1
   209c0:	ldr	r2, [fp, #-16]
   209c4:	str	r1, [r2, #20]
   209c8:	mov	r2, #44	; 0x2c
   209cc:	strb	r2, [r3]
   209d0:	ldr	r0, [fp, #-8]
   209d4:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   209d8:	str	r0, [fp, #-8]
   209dc:	ldr	r0, [fp, #-8]
   209e0:	bl	154c8 <main@@Base+0x5ac>
   209e4:	str	r0, [fp, #-12]
   209e8:	ldr	r3, [fp, #-8]
   209ec:	add	r3, r3, #4
   209f0:	str	r3, [fp, #-8]
   209f4:	ldr	r3, [fp, #4]
   209f8:	mov	r2, r3
   209fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20a00:	ldr	r0, [fp, #-16]
   20a04:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   20a08:	ldr	r3, [fp, #-16]
   20a0c:	ldr	r3, [r3, #32]
   20a10:	add	r2, r3, #1
   20a14:	ldr	r3, [fp, #-16]
   20a18:	str	r2, [r3, #32]
   20a1c:	ldr	r3, [fp, #-16]
   20a20:	ldr	r3, [r3, #20]
   20a24:	add	r1, r3, #1
   20a28:	ldr	r2, [fp, #-16]
   20a2c:	str	r1, [r2, #20]
   20a30:	mov	r2, #91	; 0x5b
   20a34:	strb	r2, [r3]
   20a38:	ldr	r3, [fp, #-12]
   20a3c:	cmp	r3, #0
   20a40:	beq	20b40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   20a44:	ldr	r3, [fp, #-16]
   20a48:	ldrb	r3, [r3, #25]
   20a4c:	cmp	r3, #0
   20a50:	beq	20a7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x150>
   20a54:	ldr	r3, [fp, #-16]
   20a58:	ldr	r3, [r3, #20]
   20a5c:	add	r1, r3, #1
   20a60:	ldr	r2, [fp, #-16]
   20a64:	str	r1, [r2, #20]
   20a68:	mov	r2, #10
   20a6c:	strb	r2, [r3]
   20a70:	ldr	r0, [fp, #-16]
   20a74:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20a78:	b	20a84 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x158>
   20a7c:	ldr	r0, [fp, #-16]
   20a80:	bl	15718 <main@@Base+0x7fc>
   20a84:	ldr	r0, [fp, #-8]
   20a88:	bl	15178 <main@@Base+0x25c>
   20a8c:	mov	r2, r0
   20a90:	mov	r3, r1
   20a94:	ldr	r1, [fp, #8]
   20a98:	ldr	r0, [fp, #-16]
   20a9c:	blx	r1
   20aa0:	ldr	r3, [fp, #-8]
   20aa4:	add	r3, r3, #8
   20aa8:	str	r3, [fp, #-8]
   20aac:	ldr	r3, [fp, #-12]
   20ab0:	sub	r3, r3, #1
   20ab4:	str	r3, [fp, #-12]
   20ab8:	b	20b40 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x214>
   20abc:	ldr	r3, [fp, #-16]
   20ac0:	ldr	r3, [r3, #20]
   20ac4:	add	r1, r3, #1
   20ac8:	ldr	r2, [fp, #-16]
   20acc:	str	r1, [r2, #20]
   20ad0:	mov	r2, #44	; 0x2c
   20ad4:	strb	r2, [r3]
   20ad8:	ldr	r3, [fp, #-16]
   20adc:	ldrb	r3, [r3, #25]
   20ae0:	cmp	r3, #0
   20ae4:	beq	20b10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e4>
   20ae8:	ldr	r3, [fp, #-16]
   20aec:	ldr	r3, [r3, #20]
   20af0:	add	r1, r3, #1
   20af4:	ldr	r2, [fp, #-16]
   20af8:	str	r1, [r2, #20]
   20afc:	mov	r2, #10
   20b00:	strb	r2, [r3]
   20b04:	ldr	r0, [fp, #-16]
   20b08:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20b0c:	b	20b18 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   20b10:	ldr	r0, [fp, #-16]
   20b14:	bl	15718 <main@@Base+0x7fc>
   20b18:	ldr	r0, [fp, #-8]
   20b1c:	bl	15178 <main@@Base+0x25c>
   20b20:	mov	r2, r0
   20b24:	mov	r3, r1
   20b28:	ldr	r1, [fp, #8]
   20b2c:	ldr	r0, [fp, #-16]
   20b30:	blx	r1
   20b34:	ldr	r3, [fp, #-8]
   20b38:	add	r3, r3, #8
   20b3c:	str	r3, [fp, #-8]
   20b40:	ldr	r3, [fp, #-12]
   20b44:	sub	r2, r3, #1
   20b48:	str	r2, [fp, #-12]
   20b4c:	cmp	r3, #0
   20b50:	bne	20abc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x190>
   20b54:	ldr	r3, [fp, #-16]
   20b58:	ldrb	r3, [r3, #25]
   20b5c:	cmp	r3, #0
   20b60:	beq	20b9c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x270>
   20b64:	ldr	r3, [fp, #-16]
   20b68:	ldr	r3, [r3, #20]
   20b6c:	add	r1, r3, #1
   20b70:	ldr	r2, [fp, #-16]
   20b74:	str	r1, [r2, #20]
   20b78:	mov	r2, #10
   20b7c:	strb	r2, [r3]
   20b80:	ldr	r3, [fp, #-16]
   20b84:	ldr	r3, [r3, #32]
   20b88:	sub	r2, r3, #1
   20b8c:	ldr	r3, [fp, #-16]
   20b90:	str	r2, [r3, #32]
   20b94:	ldr	r0, [fp, #-16]
   20b98:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20b9c:	ldr	r3, [fp, #-16]
   20ba0:	ldr	r3, [r3, #20]
   20ba4:	add	r1, r3, #1
   20ba8:	ldr	r2, [fp, #-16]
   20bac:	str	r1, [r2, #20]
   20bb0:	mov	r2, #93	; 0x5d
   20bb4:	strb	r2, [r3]
   20bb8:	sub	sp, fp, #4
   20bbc:	ldr	fp, [sp]
   20bc0:	add	sp, sp, #4
   20bc4:	pop	{pc}		; (ldr pc, [sp], #4)

00020bc8 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   20bc8:	str	fp, [sp, #-8]!
   20bcc:	str	lr, [sp, #4]
   20bd0:	add	fp, sp, #4
   20bd4:	sub	sp, sp, #32
   20bd8:	str	r0, [fp, #-16]
   20bdc:	str	r1, [fp, #-20]	; 0xffffffec
   20be0:	str	r2, [fp, #-24]	; 0xffffffe8
   20be4:	str	r3, [fp, #-28]	; 0xffffffe4
   20be8:	ldr	r3, [fp, #-16]
   20bec:	ldrb	r3, [r3, #27]
   20bf0:	cmp	r3, #0
   20bf4:	beq	20c18 <flatcc_json_printer_int8_enum_vector_field@@Base+0x50>
   20bf8:	ldr	r3, [fp, #4]
   20bfc:	str	r3, [sp]
   20c00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20c04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20c08:	ldr	r1, [fp, #-20]	; 0xffffffec
   20c0c:	ldr	r0, [fp, #-16]
   20c10:	bl	1ebfc <flatcc_json_printer_int8_vector_field@@Base>
   20c14:	b	20e5c <flatcc_json_printer_int8_enum_vector_field@@Base+0x294>
   20c18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20c1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20c20:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   20c24:	str	r0, [fp, #-8]
   20c28:	ldr	r3, [fp, #-8]
   20c2c:	cmp	r3, #0
   20c30:	beq	20e5c <flatcc_json_printer_int8_enum_vector_field@@Base+0x294>
   20c34:	ldr	r3, [fp, #-20]	; 0xffffffec
   20c38:	ldr	r3, [r3, #16]
   20c3c:	add	r1, r3, #1
   20c40:	ldr	r2, [fp, #-20]	; 0xffffffec
   20c44:	str	r1, [r2, #16]
   20c48:	cmp	r3, #0
   20c4c:	beq	20c6c <flatcc_json_printer_int8_enum_vector_field@@Base+0xa4>
   20c50:	ldr	r3, [fp, #-16]
   20c54:	ldr	r3, [r3, #20]
   20c58:	add	r1, r3, #1
   20c5c:	ldr	r2, [fp, #-16]
   20c60:	str	r1, [r2, #20]
   20c64:	mov	r2, #44	; 0x2c
   20c68:	strb	r2, [r3]
   20c6c:	ldr	r0, [fp, #-8]
   20c70:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   20c74:	str	r0, [fp, #-8]
   20c78:	ldr	r0, [fp, #-8]
   20c7c:	bl	154c8 <main@@Base+0x5ac>
   20c80:	str	r0, [fp, #-12]
   20c84:	ldr	r3, [fp, #-8]
   20c88:	add	r3, r3, #4
   20c8c:	str	r3, [fp, #-8]
   20c90:	ldr	r3, [fp, #4]
   20c94:	mov	r2, r3
   20c98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20c9c:	ldr	r0, [fp, #-16]
   20ca0:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   20ca4:	ldr	r3, [fp, #-16]
   20ca8:	ldr	r3, [r3, #32]
   20cac:	add	r2, r3, #1
   20cb0:	ldr	r3, [fp, #-16]
   20cb4:	str	r2, [r3, #32]
   20cb8:	ldr	r3, [fp, #-16]
   20cbc:	ldr	r3, [r3, #20]
   20cc0:	add	r1, r3, #1
   20cc4:	ldr	r2, [fp, #-16]
   20cc8:	str	r1, [r2, #20]
   20ccc:	mov	r2, #91	; 0x5b
   20cd0:	strb	r2, [r3]
   20cd4:	ldr	r3, [fp, #-12]
   20cd8:	cmp	r3, #0
   20cdc:	beq	20de4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x21c>
   20ce0:	ldr	r3, [fp, #-16]
   20ce4:	ldrb	r3, [r3, #25]
   20ce8:	cmp	r3, #0
   20cec:	beq	20d18 <flatcc_json_printer_int8_enum_vector_field@@Base+0x150>
   20cf0:	ldr	r3, [fp, #-16]
   20cf4:	ldr	r3, [r3, #20]
   20cf8:	add	r1, r3, #1
   20cfc:	ldr	r2, [fp, #-16]
   20d00:	str	r1, [r2, #20]
   20d04:	mov	r2, #10
   20d08:	strb	r2, [r3]
   20d0c:	ldr	r0, [fp, #-16]
   20d10:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20d14:	b	20d20 <flatcc_json_printer_int8_enum_vector_field@@Base+0x158>
   20d18:	ldr	r0, [fp, #-16]
   20d1c:	bl	15718 <main@@Base+0x7fc>
   20d20:	ldr	r0, [fp, #-8]
   20d24:	bl	151e8 <main@@Base+0x2cc>
   20d28:	mov	r3, r0
   20d2c:	mov	r2, r3
   20d30:	ldr	r3, [fp, #8]
   20d34:	mov	r1, r2
   20d38:	ldr	r0, [fp, #-16]
   20d3c:	blx	r3
   20d40:	ldr	r3, [fp, #-8]
   20d44:	add	r3, r3, #1
   20d48:	str	r3, [fp, #-8]
   20d4c:	ldr	r3, [fp, #-12]
   20d50:	sub	r3, r3, #1
   20d54:	str	r3, [fp, #-12]
   20d58:	b	20de4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x21c>
   20d5c:	ldr	r3, [fp, #-16]
   20d60:	ldr	r3, [r3, #20]
   20d64:	add	r1, r3, #1
   20d68:	ldr	r2, [fp, #-16]
   20d6c:	str	r1, [r2, #20]
   20d70:	mov	r2, #44	; 0x2c
   20d74:	strb	r2, [r3]
   20d78:	ldr	r3, [fp, #-16]
   20d7c:	ldrb	r3, [r3, #25]
   20d80:	cmp	r3, #0
   20d84:	beq	20db0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e8>
   20d88:	ldr	r3, [fp, #-16]
   20d8c:	ldr	r3, [r3, #20]
   20d90:	add	r1, r3, #1
   20d94:	ldr	r2, [fp, #-16]
   20d98:	str	r1, [r2, #20]
   20d9c:	mov	r2, #10
   20da0:	strb	r2, [r3]
   20da4:	ldr	r0, [fp, #-16]
   20da8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20dac:	b	20db8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1f0>
   20db0:	ldr	r0, [fp, #-16]
   20db4:	bl	15718 <main@@Base+0x7fc>
   20db8:	ldr	r0, [fp, #-8]
   20dbc:	bl	151e8 <main@@Base+0x2cc>
   20dc0:	mov	r3, r0
   20dc4:	mov	r2, r3
   20dc8:	ldr	r3, [fp, #8]
   20dcc:	mov	r1, r2
   20dd0:	ldr	r0, [fp, #-16]
   20dd4:	blx	r3
   20dd8:	ldr	r3, [fp, #-8]
   20ddc:	add	r3, r3, #1
   20de0:	str	r3, [fp, #-8]
   20de4:	ldr	r3, [fp, #-12]
   20de8:	sub	r2, r3, #1
   20dec:	str	r2, [fp, #-12]
   20df0:	cmp	r3, #0
   20df4:	bne	20d5c <flatcc_json_printer_int8_enum_vector_field@@Base+0x194>
   20df8:	ldr	r3, [fp, #-16]
   20dfc:	ldrb	r3, [r3, #25]
   20e00:	cmp	r3, #0
   20e04:	beq	20e40 <flatcc_json_printer_int8_enum_vector_field@@Base+0x278>
   20e08:	ldr	r3, [fp, #-16]
   20e0c:	ldr	r3, [r3, #20]
   20e10:	add	r1, r3, #1
   20e14:	ldr	r2, [fp, #-16]
   20e18:	str	r1, [r2, #20]
   20e1c:	mov	r2, #10
   20e20:	strb	r2, [r3]
   20e24:	ldr	r3, [fp, #-16]
   20e28:	ldr	r3, [r3, #32]
   20e2c:	sub	r2, r3, #1
   20e30:	ldr	r3, [fp, #-16]
   20e34:	str	r2, [r3, #32]
   20e38:	ldr	r0, [fp, #-16]
   20e3c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20e40:	ldr	r3, [fp, #-16]
   20e44:	ldr	r3, [r3, #20]
   20e48:	add	r1, r3, #1
   20e4c:	ldr	r2, [fp, #-16]
   20e50:	str	r1, [r2, #20]
   20e54:	mov	r2, #93	; 0x5d
   20e58:	strb	r2, [r3]
   20e5c:	sub	sp, fp, #4
   20e60:	ldr	fp, [sp]
   20e64:	add	sp, sp, #4
   20e68:	pop	{pc}		; (ldr pc, [sp], #4)

00020e6c <flatcc_json_printer_int16_enum_vector_field@@Base>:
   20e6c:	str	fp, [sp, #-8]!
   20e70:	str	lr, [sp, #4]
   20e74:	add	fp, sp, #4
   20e78:	sub	sp, sp, #32
   20e7c:	str	r0, [fp, #-16]
   20e80:	str	r1, [fp, #-20]	; 0xffffffec
   20e84:	str	r2, [fp, #-24]	; 0xffffffe8
   20e88:	str	r3, [fp, #-28]	; 0xffffffe4
   20e8c:	ldr	r3, [fp, #-16]
   20e90:	ldrb	r3, [r3, #27]
   20e94:	cmp	r3, #0
   20e98:	beq	20ebc <flatcc_json_printer_int16_enum_vector_field@@Base+0x50>
   20e9c:	ldr	r3, [fp, #4]
   20ea0:	str	r3, [sp]
   20ea4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20ea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20eac:	ldr	r1, [fp, #-20]	; 0xffffffec
   20eb0:	ldr	r0, [fp, #-16]
   20eb4:	bl	1eeac <flatcc_json_printer_int16_vector_field@@Base>
   20eb8:	b	21100 <flatcc_json_printer_int16_enum_vector_field@@Base+0x294>
   20ebc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20ec0:	ldr	r0, [fp, #-20]	; 0xffffffec
   20ec4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   20ec8:	str	r0, [fp, #-8]
   20ecc:	ldr	r3, [fp, #-8]
   20ed0:	cmp	r3, #0
   20ed4:	beq	21100 <flatcc_json_printer_int16_enum_vector_field@@Base+0x294>
   20ed8:	ldr	r3, [fp, #-20]	; 0xffffffec
   20edc:	ldr	r3, [r3, #16]
   20ee0:	add	r1, r3, #1
   20ee4:	ldr	r2, [fp, #-20]	; 0xffffffec
   20ee8:	str	r1, [r2, #16]
   20eec:	cmp	r3, #0
   20ef0:	beq	20f10 <flatcc_json_printer_int16_enum_vector_field@@Base+0xa4>
   20ef4:	ldr	r3, [fp, #-16]
   20ef8:	ldr	r3, [r3, #20]
   20efc:	add	r1, r3, #1
   20f00:	ldr	r2, [fp, #-16]
   20f04:	str	r1, [r2, #20]
   20f08:	mov	r2, #44	; 0x2c
   20f0c:	strb	r2, [r3]
   20f10:	ldr	r0, [fp, #-8]
   20f14:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   20f18:	str	r0, [fp, #-8]
   20f1c:	ldr	r0, [fp, #-8]
   20f20:	bl	154c8 <main@@Base+0x5ac>
   20f24:	str	r0, [fp, #-12]
   20f28:	ldr	r3, [fp, #-8]
   20f2c:	add	r3, r3, #4
   20f30:	str	r3, [fp, #-8]
   20f34:	ldr	r3, [fp, #4]
   20f38:	mov	r2, r3
   20f3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20f40:	ldr	r0, [fp, #-16]
   20f44:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   20f48:	ldr	r3, [fp, #-16]
   20f4c:	ldr	r3, [r3, #32]
   20f50:	add	r2, r3, #1
   20f54:	ldr	r3, [fp, #-16]
   20f58:	str	r2, [r3, #32]
   20f5c:	ldr	r3, [fp, #-16]
   20f60:	ldr	r3, [r3, #20]
   20f64:	add	r1, r3, #1
   20f68:	ldr	r2, [fp, #-16]
   20f6c:	str	r1, [r2, #20]
   20f70:	mov	r2, #91	; 0x5b
   20f74:	strb	r2, [r3]
   20f78:	ldr	r3, [fp, #-12]
   20f7c:	cmp	r3, #0
   20f80:	beq	21088 <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   20f84:	ldr	r3, [fp, #-16]
   20f88:	ldrb	r3, [r3, #25]
   20f8c:	cmp	r3, #0
   20f90:	beq	20fbc <flatcc_json_printer_int16_enum_vector_field@@Base+0x150>
   20f94:	ldr	r3, [fp, #-16]
   20f98:	ldr	r3, [r3, #20]
   20f9c:	add	r1, r3, #1
   20fa0:	ldr	r2, [fp, #-16]
   20fa4:	str	r1, [r2, #20]
   20fa8:	mov	r2, #10
   20fac:	strb	r2, [r3]
   20fb0:	ldr	r0, [fp, #-16]
   20fb4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   20fb8:	b	20fc4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x158>
   20fbc:	ldr	r0, [fp, #-16]
   20fc0:	bl	15718 <main@@Base+0x7fc>
   20fc4:	ldr	r0, [fp, #-8]
   20fc8:	bl	1524c <main@@Base+0x330>
   20fcc:	mov	r3, r0
   20fd0:	mov	r2, r3
   20fd4:	ldr	r3, [fp, #8]
   20fd8:	mov	r1, r2
   20fdc:	ldr	r0, [fp, #-16]
   20fe0:	blx	r3
   20fe4:	ldr	r3, [fp, #-8]
   20fe8:	add	r3, r3, #2
   20fec:	str	r3, [fp, #-8]
   20ff0:	ldr	r3, [fp, #-12]
   20ff4:	sub	r3, r3, #1
   20ff8:	str	r3, [fp, #-12]
   20ffc:	b	21088 <flatcc_json_printer_int16_enum_vector_field@@Base+0x21c>
   21000:	ldr	r3, [fp, #-16]
   21004:	ldr	r3, [r3, #20]
   21008:	add	r1, r3, #1
   2100c:	ldr	r2, [fp, #-16]
   21010:	str	r1, [r2, #20]
   21014:	mov	r2, #44	; 0x2c
   21018:	strb	r2, [r3]
   2101c:	ldr	r3, [fp, #-16]
   21020:	ldrb	r3, [r3, #25]
   21024:	cmp	r3, #0
   21028:	beq	21054 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e8>
   2102c:	ldr	r3, [fp, #-16]
   21030:	ldr	r3, [r3, #20]
   21034:	add	r1, r3, #1
   21038:	ldr	r2, [fp, #-16]
   2103c:	str	r1, [r2, #20]
   21040:	mov	r2, #10
   21044:	strb	r2, [r3]
   21048:	ldr	r0, [fp, #-16]
   2104c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21050:	b	2105c <flatcc_json_printer_int16_enum_vector_field@@Base+0x1f0>
   21054:	ldr	r0, [fp, #-16]
   21058:	bl	15718 <main@@Base+0x7fc>
   2105c:	ldr	r0, [fp, #-8]
   21060:	bl	1524c <main@@Base+0x330>
   21064:	mov	r3, r0
   21068:	mov	r2, r3
   2106c:	ldr	r3, [fp, #8]
   21070:	mov	r1, r2
   21074:	ldr	r0, [fp, #-16]
   21078:	blx	r3
   2107c:	ldr	r3, [fp, #-8]
   21080:	add	r3, r3, #2
   21084:	str	r3, [fp, #-8]
   21088:	ldr	r3, [fp, #-12]
   2108c:	sub	r2, r3, #1
   21090:	str	r2, [fp, #-12]
   21094:	cmp	r3, #0
   21098:	bne	21000 <flatcc_json_printer_int16_enum_vector_field@@Base+0x194>
   2109c:	ldr	r3, [fp, #-16]
   210a0:	ldrb	r3, [r3, #25]
   210a4:	cmp	r3, #0
   210a8:	beq	210e4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x278>
   210ac:	ldr	r3, [fp, #-16]
   210b0:	ldr	r3, [r3, #20]
   210b4:	add	r1, r3, #1
   210b8:	ldr	r2, [fp, #-16]
   210bc:	str	r1, [r2, #20]
   210c0:	mov	r2, #10
   210c4:	strb	r2, [r3]
   210c8:	ldr	r3, [fp, #-16]
   210cc:	ldr	r3, [r3, #32]
   210d0:	sub	r2, r3, #1
   210d4:	ldr	r3, [fp, #-16]
   210d8:	str	r2, [r3, #32]
   210dc:	ldr	r0, [fp, #-16]
   210e0:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   210e4:	ldr	r3, [fp, #-16]
   210e8:	ldr	r3, [r3, #20]
   210ec:	add	r1, r3, #1
   210f0:	ldr	r2, [fp, #-16]
   210f4:	str	r1, [r2, #20]
   210f8:	mov	r2, #93	; 0x5d
   210fc:	strb	r2, [r3]
   21100:	sub	sp, fp, #4
   21104:	ldr	fp, [sp]
   21108:	add	sp, sp, #4
   2110c:	pop	{pc}		; (ldr pc, [sp], #4)

00021110 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   21110:	str	fp, [sp, #-8]!
   21114:	str	lr, [sp, #4]
   21118:	add	fp, sp, #4
   2111c:	sub	sp, sp, #32
   21120:	str	r0, [fp, #-16]
   21124:	str	r1, [fp, #-20]	; 0xffffffec
   21128:	str	r2, [fp, #-24]	; 0xffffffe8
   2112c:	str	r3, [fp, #-28]	; 0xffffffe4
   21130:	ldr	r3, [fp, #-16]
   21134:	ldrb	r3, [r3, #27]
   21138:	cmp	r3, #0
   2113c:	beq	21160 <flatcc_json_printer_int32_enum_vector_field@@Base+0x50>
   21140:	ldr	r3, [fp, #4]
   21144:	str	r3, [sp]
   21148:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2114c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21150:	ldr	r1, [fp, #-20]	; 0xffffffec
   21154:	ldr	r0, [fp, #-16]
   21158:	bl	1f15c <flatcc_json_printer_int32_vector_field@@Base>
   2115c:	b	2139c <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   21160:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21164:	ldr	r0, [fp, #-20]	; 0xffffffec
   21168:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   2116c:	str	r0, [fp, #-8]
   21170:	ldr	r3, [fp, #-8]
   21174:	cmp	r3, #0
   21178:	beq	2139c <flatcc_json_printer_int32_enum_vector_field@@Base+0x28c>
   2117c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21180:	ldr	r3, [r3, #16]
   21184:	add	r1, r3, #1
   21188:	ldr	r2, [fp, #-20]	; 0xffffffec
   2118c:	str	r1, [r2, #16]
   21190:	cmp	r3, #0
   21194:	beq	211b4 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa4>
   21198:	ldr	r3, [fp, #-16]
   2119c:	ldr	r3, [r3, #20]
   211a0:	add	r1, r3, #1
   211a4:	ldr	r2, [fp, #-16]
   211a8:	str	r1, [r2, #20]
   211ac:	mov	r2, #44	; 0x2c
   211b0:	strb	r2, [r3]
   211b4:	ldr	r0, [fp, #-8]
   211b8:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   211bc:	str	r0, [fp, #-8]
   211c0:	ldr	r0, [fp, #-8]
   211c4:	bl	154c8 <main@@Base+0x5ac>
   211c8:	str	r0, [fp, #-12]
   211cc:	ldr	r3, [fp, #-8]
   211d0:	add	r3, r3, #4
   211d4:	str	r3, [fp, #-8]
   211d8:	ldr	r3, [fp, #4]
   211dc:	mov	r2, r3
   211e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   211e4:	ldr	r0, [fp, #-16]
   211e8:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   211ec:	ldr	r3, [fp, #-16]
   211f0:	ldr	r3, [r3, #32]
   211f4:	add	r2, r3, #1
   211f8:	ldr	r3, [fp, #-16]
   211fc:	str	r2, [r3, #32]
   21200:	ldr	r3, [fp, #-16]
   21204:	ldr	r3, [r3, #20]
   21208:	add	r1, r3, #1
   2120c:	ldr	r2, [fp, #-16]
   21210:	str	r1, [r2, #20]
   21214:	mov	r2, #91	; 0x5b
   21218:	strb	r2, [r3]
   2121c:	ldr	r3, [fp, #-12]
   21220:	cmp	r3, #0
   21224:	beq	21324 <flatcc_json_printer_int32_enum_vector_field@@Base+0x214>
   21228:	ldr	r3, [fp, #-16]
   2122c:	ldrb	r3, [r3, #25]
   21230:	cmp	r3, #0
   21234:	beq	21260 <flatcc_json_printer_int32_enum_vector_field@@Base+0x150>
   21238:	ldr	r3, [fp, #-16]
   2123c:	ldr	r3, [r3, #20]
   21240:	add	r1, r3, #1
   21244:	ldr	r2, [fp, #-16]
   21248:	str	r1, [r2, #20]
   2124c:	mov	r2, #10
   21250:	strb	r2, [r3]
   21254:	ldr	r0, [fp, #-16]
   21258:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2125c:	b	21268 <flatcc_json_printer_int32_enum_vector_field@@Base+0x158>
   21260:	ldr	r0, [fp, #-16]
   21264:	bl	15718 <main@@Base+0x7fc>
   21268:	ldr	r0, [fp, #-8]
   2126c:	bl	152ac <main@@Base+0x390>
   21270:	mov	r2, r0
   21274:	ldr	r3, [fp, #8]
   21278:	mov	r1, r2
   2127c:	ldr	r0, [fp, #-16]
   21280:	blx	r3
   21284:	ldr	r3, [fp, #-8]
   21288:	add	r3, r3, #4
   2128c:	str	r3, [fp, #-8]
   21290:	ldr	r3, [fp, #-12]
   21294:	sub	r3, r3, #1
   21298:	str	r3, [fp, #-12]
   2129c:	b	21324 <flatcc_json_printer_int32_enum_vector_field@@Base+0x214>
   212a0:	ldr	r3, [fp, #-16]
   212a4:	ldr	r3, [r3, #20]
   212a8:	add	r1, r3, #1
   212ac:	ldr	r2, [fp, #-16]
   212b0:	str	r1, [r2, #20]
   212b4:	mov	r2, #44	; 0x2c
   212b8:	strb	r2, [r3]
   212bc:	ldr	r3, [fp, #-16]
   212c0:	ldrb	r3, [r3, #25]
   212c4:	cmp	r3, #0
   212c8:	beq	212f4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e4>
   212cc:	ldr	r3, [fp, #-16]
   212d0:	ldr	r3, [r3, #20]
   212d4:	add	r1, r3, #1
   212d8:	ldr	r2, [fp, #-16]
   212dc:	str	r1, [r2, #20]
   212e0:	mov	r2, #10
   212e4:	strb	r2, [r3]
   212e8:	ldr	r0, [fp, #-16]
   212ec:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   212f0:	b	212fc <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   212f4:	ldr	r0, [fp, #-16]
   212f8:	bl	15718 <main@@Base+0x7fc>
   212fc:	ldr	r0, [fp, #-8]
   21300:	bl	152ac <main@@Base+0x390>
   21304:	mov	r2, r0
   21308:	ldr	r3, [fp, #8]
   2130c:	mov	r1, r2
   21310:	ldr	r0, [fp, #-16]
   21314:	blx	r3
   21318:	ldr	r3, [fp, #-8]
   2131c:	add	r3, r3, #4
   21320:	str	r3, [fp, #-8]
   21324:	ldr	r3, [fp, #-12]
   21328:	sub	r2, r3, #1
   2132c:	str	r2, [fp, #-12]
   21330:	cmp	r3, #0
   21334:	bne	212a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x190>
   21338:	ldr	r3, [fp, #-16]
   2133c:	ldrb	r3, [r3, #25]
   21340:	cmp	r3, #0
   21344:	beq	21380 <flatcc_json_printer_int32_enum_vector_field@@Base+0x270>
   21348:	ldr	r3, [fp, #-16]
   2134c:	ldr	r3, [r3, #20]
   21350:	add	r1, r3, #1
   21354:	ldr	r2, [fp, #-16]
   21358:	str	r1, [r2, #20]
   2135c:	mov	r2, #10
   21360:	strb	r2, [r3]
   21364:	ldr	r3, [fp, #-16]
   21368:	ldr	r3, [r3, #32]
   2136c:	sub	r2, r3, #1
   21370:	ldr	r3, [fp, #-16]
   21374:	str	r2, [r3, #32]
   21378:	ldr	r0, [fp, #-16]
   2137c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21380:	ldr	r3, [fp, #-16]
   21384:	ldr	r3, [r3, #20]
   21388:	add	r1, r3, #1
   2138c:	ldr	r2, [fp, #-16]
   21390:	str	r1, [r2, #20]
   21394:	mov	r2, #93	; 0x5d
   21398:	strb	r2, [r3]
   2139c:	sub	sp, fp, #4
   213a0:	ldr	fp, [sp]
   213a4:	add	sp, sp, #4
   213a8:	pop	{pc}		; (ldr pc, [sp], #4)

000213ac <flatcc_json_printer_int64_enum_vector_field@@Base>:
   213ac:	str	fp, [sp, #-8]!
   213b0:	str	lr, [sp, #4]
   213b4:	add	fp, sp, #4
   213b8:	sub	sp, sp, #32
   213bc:	str	r0, [fp, #-16]
   213c0:	str	r1, [fp, #-20]	; 0xffffffec
   213c4:	str	r2, [fp, #-24]	; 0xffffffe8
   213c8:	str	r3, [fp, #-28]	; 0xffffffe4
   213cc:	ldr	r3, [fp, #-16]
   213d0:	ldrb	r3, [r3, #27]
   213d4:	cmp	r3, #0
   213d8:	beq	213fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x50>
   213dc:	ldr	r3, [fp, #4]
   213e0:	str	r3, [sp]
   213e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   213e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   213ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   213f0:	ldr	r0, [fp, #-16]
   213f4:	bl	1f404 <flatcc_json_printer_int64_vector_field@@Base>
   213f8:	b	21638 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   213fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21400:	ldr	r0, [fp, #-20]	; 0xffffffec
   21404:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   21408:	str	r0, [fp, #-8]
   2140c:	ldr	r3, [fp, #-8]
   21410:	cmp	r3, #0
   21414:	beq	21638 <flatcc_json_printer_int64_enum_vector_field@@Base+0x28c>
   21418:	ldr	r3, [fp, #-20]	; 0xffffffec
   2141c:	ldr	r3, [r3, #16]
   21420:	add	r1, r3, #1
   21424:	ldr	r2, [fp, #-20]	; 0xffffffec
   21428:	str	r1, [r2, #16]
   2142c:	cmp	r3, #0
   21430:	beq	21450 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa4>
   21434:	ldr	r3, [fp, #-16]
   21438:	ldr	r3, [r3, #20]
   2143c:	add	r1, r3, #1
   21440:	ldr	r2, [fp, #-16]
   21444:	str	r1, [r2, #20]
   21448:	mov	r2, #44	; 0x2c
   2144c:	strb	r2, [r3]
   21450:	ldr	r0, [fp, #-8]
   21454:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   21458:	str	r0, [fp, #-8]
   2145c:	ldr	r0, [fp, #-8]
   21460:	bl	154c8 <main@@Base+0x5ac>
   21464:	str	r0, [fp, #-12]
   21468:	ldr	r3, [fp, #-8]
   2146c:	add	r3, r3, #4
   21470:	str	r3, [fp, #-8]
   21474:	ldr	r3, [fp, #4]
   21478:	mov	r2, r3
   2147c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21480:	ldr	r0, [fp, #-16]
   21484:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   21488:	ldr	r3, [fp, #-16]
   2148c:	ldr	r3, [r3, #32]
   21490:	add	r2, r3, #1
   21494:	ldr	r3, [fp, #-16]
   21498:	str	r2, [r3, #32]
   2149c:	ldr	r3, [fp, #-16]
   214a0:	ldr	r3, [r3, #20]
   214a4:	add	r1, r3, #1
   214a8:	ldr	r2, [fp, #-16]
   214ac:	str	r1, [r2, #20]
   214b0:	mov	r2, #91	; 0x5b
   214b4:	strb	r2, [r3]
   214b8:	ldr	r3, [fp, #-12]
   214bc:	cmp	r3, #0
   214c0:	beq	215c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   214c4:	ldr	r3, [fp, #-16]
   214c8:	ldrb	r3, [r3, #25]
   214cc:	cmp	r3, #0
   214d0:	beq	214fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x150>
   214d4:	ldr	r3, [fp, #-16]
   214d8:	ldr	r3, [r3, #20]
   214dc:	add	r1, r3, #1
   214e0:	ldr	r2, [fp, #-16]
   214e4:	str	r1, [r2, #20]
   214e8:	mov	r2, #10
   214ec:	strb	r2, [r3]
   214f0:	ldr	r0, [fp, #-16]
   214f4:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   214f8:	b	21504 <flatcc_json_printer_int64_enum_vector_field@@Base+0x158>
   214fc:	ldr	r0, [fp, #-16]
   21500:	bl	15718 <main@@Base+0x7fc>
   21504:	ldr	r0, [fp, #-8]
   21508:	bl	15310 <main@@Base+0x3f4>
   2150c:	mov	r2, r0
   21510:	mov	r3, r1
   21514:	ldr	r1, [fp, #8]
   21518:	ldr	r0, [fp, #-16]
   2151c:	blx	r1
   21520:	ldr	r3, [fp, #-8]
   21524:	add	r3, r3, #8
   21528:	str	r3, [fp, #-8]
   2152c:	ldr	r3, [fp, #-12]
   21530:	sub	r3, r3, #1
   21534:	str	r3, [fp, #-12]
   21538:	b	215c0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x214>
   2153c:	ldr	r3, [fp, #-16]
   21540:	ldr	r3, [r3, #20]
   21544:	add	r1, r3, #1
   21548:	ldr	r2, [fp, #-16]
   2154c:	str	r1, [r2, #20]
   21550:	mov	r2, #44	; 0x2c
   21554:	strb	r2, [r3]
   21558:	ldr	r3, [fp, #-16]
   2155c:	ldrb	r3, [r3, #25]
   21560:	cmp	r3, #0
   21564:	beq	21590 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e4>
   21568:	ldr	r3, [fp, #-16]
   2156c:	ldr	r3, [r3, #20]
   21570:	add	r1, r3, #1
   21574:	ldr	r2, [fp, #-16]
   21578:	str	r1, [r2, #20]
   2157c:	mov	r2, #10
   21580:	strb	r2, [r3]
   21584:	ldr	r0, [fp, #-16]
   21588:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2158c:	b	21598 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   21590:	ldr	r0, [fp, #-16]
   21594:	bl	15718 <main@@Base+0x7fc>
   21598:	ldr	r0, [fp, #-8]
   2159c:	bl	15310 <main@@Base+0x3f4>
   215a0:	mov	r2, r0
   215a4:	mov	r3, r1
   215a8:	ldr	r1, [fp, #8]
   215ac:	ldr	r0, [fp, #-16]
   215b0:	blx	r1
   215b4:	ldr	r3, [fp, #-8]
   215b8:	add	r3, r3, #8
   215bc:	str	r3, [fp, #-8]
   215c0:	ldr	r3, [fp, #-12]
   215c4:	sub	r2, r3, #1
   215c8:	str	r2, [fp, #-12]
   215cc:	cmp	r3, #0
   215d0:	bne	2153c <flatcc_json_printer_int64_enum_vector_field@@Base+0x190>
   215d4:	ldr	r3, [fp, #-16]
   215d8:	ldrb	r3, [r3, #25]
   215dc:	cmp	r3, #0
   215e0:	beq	2161c <flatcc_json_printer_int64_enum_vector_field@@Base+0x270>
   215e4:	ldr	r3, [fp, #-16]
   215e8:	ldr	r3, [r3, #20]
   215ec:	add	r1, r3, #1
   215f0:	ldr	r2, [fp, #-16]
   215f4:	str	r1, [r2, #20]
   215f8:	mov	r2, #10
   215fc:	strb	r2, [r3]
   21600:	ldr	r3, [fp, #-16]
   21604:	ldr	r3, [r3, #32]
   21608:	sub	r2, r3, #1
   2160c:	ldr	r3, [fp, #-16]
   21610:	str	r2, [r3, #32]
   21614:	ldr	r0, [fp, #-16]
   21618:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2161c:	ldr	r3, [fp, #-16]
   21620:	ldr	r3, [r3, #20]
   21624:	add	r1, r3, #1
   21628:	ldr	r2, [fp, #-16]
   2162c:	str	r1, [r2, #20]
   21630:	mov	r2, #93	; 0x5d
   21634:	strb	r2, [r3]
   21638:	sub	sp, fp, #4
   2163c:	ldr	fp, [sp]
   21640:	add	sp, sp, #4
   21644:	pop	{pc}		; (ldr pc, [sp], #4)

00021648 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   21648:	str	fp, [sp, #-8]!
   2164c:	str	lr, [sp, #4]
   21650:	add	fp, sp, #4
   21654:	sub	sp, sp, #32
   21658:	str	r0, [fp, #-16]
   2165c:	str	r1, [fp, #-20]	; 0xffffffec
   21660:	str	r2, [fp, #-24]	; 0xffffffe8
   21664:	str	r3, [fp, #-28]	; 0xffffffe4
   21668:	ldr	r3, [fp, #-16]
   2166c:	ldrb	r3, [r3, #27]
   21670:	cmp	r3, #0
   21674:	beq	21698 <flatcc_json_printer_bool_enum_vector_field@@Base+0x50>
   21678:	ldr	r3, [fp, #4]
   2167c:	str	r3, [sp]
   21680:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21684:	ldr	r2, [fp, #-24]	; 0xffffffe8
   21688:	ldr	r1, [fp, #-20]	; 0xffffffec
   2168c:	ldr	r0, [fp, #-16]
   21690:	bl	1f69c <flatcc_json_printer_bool_vector_field@@Base>
   21694:	b	218dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x294>
   21698:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2169c:	ldr	r0, [fp, #-20]	; 0xffffffec
   216a0:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   216a4:	str	r0, [fp, #-8]
   216a8:	ldr	r3, [fp, #-8]
   216ac:	cmp	r3, #0
   216b0:	beq	218dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x294>
   216b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   216b8:	ldr	r3, [r3, #16]
   216bc:	add	r1, r3, #1
   216c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   216c4:	str	r1, [r2, #16]
   216c8:	cmp	r3, #0
   216cc:	beq	216ec <flatcc_json_printer_bool_enum_vector_field@@Base+0xa4>
   216d0:	ldr	r3, [fp, #-16]
   216d4:	ldr	r3, [r3, #20]
   216d8:	add	r1, r3, #1
   216dc:	ldr	r2, [fp, #-16]
   216e0:	str	r1, [r2, #20]
   216e4:	mov	r2, #44	; 0x2c
   216e8:	strb	r2, [r3]
   216ec:	ldr	r0, [fp, #-8]
   216f0:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   216f4:	str	r0, [fp, #-8]
   216f8:	ldr	r0, [fp, #-8]
   216fc:	bl	154c8 <main@@Base+0x5ac>
   21700:	str	r0, [fp, #-12]
   21704:	ldr	r3, [fp, #-8]
   21708:	add	r3, r3, #4
   2170c:	str	r3, [fp, #-8]
   21710:	ldr	r3, [fp, #4]
   21714:	mov	r2, r3
   21718:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2171c:	ldr	r0, [fp, #-16]
   21720:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   21724:	ldr	r3, [fp, #-16]
   21728:	ldr	r3, [r3, #32]
   2172c:	add	r2, r3, #1
   21730:	ldr	r3, [fp, #-16]
   21734:	str	r2, [r3, #32]
   21738:	ldr	r3, [fp, #-16]
   2173c:	ldr	r3, [r3, #20]
   21740:	add	r1, r3, #1
   21744:	ldr	r2, [fp, #-16]
   21748:	str	r1, [r2, #20]
   2174c:	mov	r2, #91	; 0x5b
   21750:	strb	r2, [r3]
   21754:	ldr	r3, [fp, #-12]
   21758:	cmp	r3, #0
   2175c:	beq	21864 <flatcc_json_printer_bool_enum_vector_field@@Base+0x21c>
   21760:	ldr	r3, [fp, #-16]
   21764:	ldrb	r3, [r3, #25]
   21768:	cmp	r3, #0
   2176c:	beq	21798 <flatcc_json_printer_bool_enum_vector_field@@Base+0x150>
   21770:	ldr	r3, [fp, #-16]
   21774:	ldr	r3, [r3, #20]
   21778:	add	r1, r3, #1
   2177c:	ldr	r2, [fp, #-16]
   21780:	str	r1, [r2, #20]
   21784:	mov	r2, #10
   21788:	strb	r2, [r3]
   2178c:	ldr	r0, [fp, #-16]
   21790:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21794:	b	217a0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x158>
   21798:	ldr	r0, [fp, #-16]
   2179c:	bl	15718 <main@@Base+0x7fc>
   217a0:	ldr	r0, [fp, #-8]
   217a4:	bl	15468 <main@@Base+0x54c>
   217a8:	mov	r3, r0
   217ac:	mov	r2, r3
   217b0:	ldr	r3, [fp, #8]
   217b4:	mov	r1, r2
   217b8:	ldr	r0, [fp, #-16]
   217bc:	blx	r3
   217c0:	ldr	r3, [fp, #-8]
   217c4:	add	r3, r3, #1
   217c8:	str	r3, [fp, #-8]
   217cc:	ldr	r3, [fp, #-12]
   217d0:	sub	r3, r3, #1
   217d4:	str	r3, [fp, #-12]
   217d8:	b	21864 <flatcc_json_printer_bool_enum_vector_field@@Base+0x21c>
   217dc:	ldr	r3, [fp, #-16]
   217e0:	ldr	r3, [r3, #20]
   217e4:	add	r1, r3, #1
   217e8:	ldr	r2, [fp, #-16]
   217ec:	str	r1, [r2, #20]
   217f0:	mov	r2, #44	; 0x2c
   217f4:	strb	r2, [r3]
   217f8:	ldr	r3, [fp, #-16]
   217fc:	ldrb	r3, [r3, #25]
   21800:	cmp	r3, #0
   21804:	beq	21830 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e8>
   21808:	ldr	r3, [fp, #-16]
   2180c:	ldr	r3, [r3, #20]
   21810:	add	r1, r3, #1
   21814:	ldr	r2, [fp, #-16]
   21818:	str	r1, [r2, #20]
   2181c:	mov	r2, #10
   21820:	strb	r2, [r3]
   21824:	ldr	r0, [fp, #-16]
   21828:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2182c:	b	21838 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1f0>
   21830:	ldr	r0, [fp, #-16]
   21834:	bl	15718 <main@@Base+0x7fc>
   21838:	ldr	r0, [fp, #-8]
   2183c:	bl	15468 <main@@Base+0x54c>
   21840:	mov	r3, r0
   21844:	mov	r2, r3
   21848:	ldr	r3, [fp, #8]
   2184c:	mov	r1, r2
   21850:	ldr	r0, [fp, #-16]
   21854:	blx	r3
   21858:	ldr	r3, [fp, #-8]
   2185c:	add	r3, r3, #1
   21860:	str	r3, [fp, #-8]
   21864:	ldr	r3, [fp, #-12]
   21868:	sub	r2, r3, #1
   2186c:	str	r2, [fp, #-12]
   21870:	cmp	r3, #0
   21874:	bne	217dc <flatcc_json_printer_bool_enum_vector_field@@Base+0x194>
   21878:	ldr	r3, [fp, #-16]
   2187c:	ldrb	r3, [r3, #25]
   21880:	cmp	r3, #0
   21884:	beq	218c0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x278>
   21888:	ldr	r3, [fp, #-16]
   2188c:	ldr	r3, [r3, #20]
   21890:	add	r1, r3, #1
   21894:	ldr	r2, [fp, #-16]
   21898:	str	r1, [r2, #20]
   2189c:	mov	r2, #10
   218a0:	strb	r2, [r3]
   218a4:	ldr	r3, [fp, #-16]
   218a8:	ldr	r3, [r3, #32]
   218ac:	sub	r2, r3, #1
   218b0:	ldr	r3, [fp, #-16]
   218b4:	str	r2, [r3, #32]
   218b8:	ldr	r0, [fp, #-16]
   218bc:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   218c0:	ldr	r3, [fp, #-16]
   218c4:	ldr	r3, [r3, #20]
   218c8:	add	r1, r3, #1
   218cc:	ldr	r2, [fp, #-16]
   218d0:	str	r1, [r2, #20]
   218d4:	mov	r2, #93	; 0x5d
   218d8:	strb	r2, [r3]
   218dc:	sub	sp, fp, #4
   218e0:	ldr	fp, [sp]
   218e4:	add	sp, sp, #4
   218e8:	pop	{pc}		; (ldr pc, [sp], #4)

000218ec <flatcc_json_printer_struct_vector_field@@Base>:
   218ec:	str	fp, [sp, #-8]!
   218f0:	str	lr, [sp, #4]
   218f4:	add	fp, sp, #4
   218f8:	sub	sp, sp, #24
   218fc:	str	r0, [fp, #-16]
   21900:	str	r1, [fp, #-20]	; 0xffffffec
   21904:	str	r2, [fp, #-24]	; 0xffffffe8
   21908:	str	r3, [fp, #-28]	; 0xffffffe4
   2190c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21910:	ldr	r0, [fp, #-20]	; 0xffffffec
   21914:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   21918:	str	r0, [fp, #-8]
   2191c:	ldr	r3, [fp, #-8]
   21920:	cmp	r3, #0
   21924:	beq	21c50 <flatcc_json_printer_struct_vector_field@@Base+0x364>
   21928:	ldr	r3, [fp, #-20]	; 0xffffffec
   2192c:	ldr	r3, [r3, #16]
   21930:	add	r1, r3, #1
   21934:	ldr	r2, [fp, #-20]	; 0xffffffec
   21938:	str	r1, [r2, #16]
   2193c:	cmp	r3, #0
   21940:	beq	21960 <flatcc_json_printer_struct_vector_field@@Base+0x74>
   21944:	ldr	r3, [fp, #-16]
   21948:	ldr	r3, [r3, #20]
   2194c:	add	r1, r3, #1
   21950:	ldr	r2, [fp, #-16]
   21954:	str	r1, [r2, #20]
   21958:	mov	r2, #44	; 0x2c
   2195c:	strb	r2, [r3]
   21960:	ldr	r0, [fp, #-8]
   21964:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   21968:	str	r0, [fp, #-8]
   2196c:	ldr	r0, [fp, #-8]
   21970:	bl	154c8 <main@@Base+0x5ac>
   21974:	str	r0, [fp, #-12]
   21978:	ldr	r3, [fp, #-8]
   2197c:	add	r3, r3, #4
   21980:	str	r3, [fp, #-8]
   21984:	ldr	r3, [fp, #4]
   21988:	mov	r2, r3
   2198c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21990:	ldr	r0, [fp, #-16]
   21994:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   21998:	ldr	r3, [fp, #-16]
   2199c:	ldr	r3, [r3, #32]
   219a0:	add	r2, r3, #1
   219a4:	ldr	r3, [fp, #-16]
   219a8:	str	r2, [r3, #32]
   219ac:	ldr	r3, [fp, #-16]
   219b0:	ldr	r3, [r3, #20]
   219b4:	add	r1, r3, #1
   219b8:	ldr	r2, [fp, #-16]
   219bc:	str	r1, [r2, #20]
   219c0:	mov	r2, #91	; 0x5b
   219c4:	strb	r2, [r3]
   219c8:	ldr	r3, [fp, #-12]
   219cc:	cmp	r3, #0
   219d0:	beq	21bd8 <flatcc_json_printer_struct_vector_field@@Base+0x2ec>
   219d4:	ldr	r3, [fp, #-16]
   219d8:	ldrb	r3, [r3, #25]
   219dc:	cmp	r3, #0
   219e0:	beq	21a0c <flatcc_json_printer_struct_vector_field@@Base+0x120>
   219e4:	ldr	r3, [fp, #-16]
   219e8:	ldr	r3, [r3, #20]
   219ec:	add	r1, r3, #1
   219f0:	ldr	r2, [fp, #-16]
   219f4:	str	r1, [r2, #20]
   219f8:	mov	r2, #10
   219fc:	strb	r2, [r3]
   21a00:	ldr	r0, [fp, #-16]
   21a04:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21a08:	b	21a14 <flatcc_json_printer_struct_vector_field@@Base+0x128>
   21a0c:	ldr	r0, [fp, #-16]
   21a10:	bl	15718 <main@@Base+0x7fc>
   21a14:	ldr	r3, [fp, #-16]
   21a18:	ldr	r3, [r3, #32]
   21a1c:	add	r2, r3, #1
   21a20:	ldr	r3, [fp, #-16]
   21a24:	str	r2, [r3, #32]
   21a28:	ldr	r3, [fp, #-16]
   21a2c:	ldr	r3, [r3, #20]
   21a30:	add	r1, r3, #1
   21a34:	ldr	r2, [fp, #-16]
   21a38:	str	r1, [r2, #20]
   21a3c:	mov	r2, #123	; 0x7b
   21a40:	strb	r2, [r3]
   21a44:	ldr	r3, [fp, #12]
   21a48:	ldr	r1, [fp, #-8]
   21a4c:	ldr	r0, [fp, #-16]
   21a50:	blx	r3
   21a54:	ldr	r3, [fp, #-16]
   21a58:	ldrb	r3, [r3, #25]
   21a5c:	cmp	r3, #0
   21a60:	beq	21a9c <flatcc_json_printer_struct_vector_field@@Base+0x1b0>
   21a64:	ldr	r3, [fp, #-16]
   21a68:	ldr	r3, [r3, #20]
   21a6c:	add	r1, r3, #1
   21a70:	ldr	r2, [fp, #-16]
   21a74:	str	r1, [r2, #20]
   21a78:	mov	r2, #10
   21a7c:	strb	r2, [r3]
   21a80:	ldr	r3, [fp, #-16]
   21a84:	ldr	r3, [r3, #32]
   21a88:	sub	r2, r3, #1
   21a8c:	ldr	r3, [fp, #-16]
   21a90:	str	r2, [r3, #32]
   21a94:	ldr	r0, [fp, #-16]
   21a98:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21a9c:	ldr	r3, [fp, #-16]
   21aa0:	ldr	r3, [r3, #20]
   21aa4:	add	r1, r3, #1
   21aa8:	ldr	r2, [fp, #-16]
   21aac:	str	r1, [r2, #20]
   21ab0:	mov	r2, #125	; 0x7d
   21ab4:	strb	r2, [r3]
   21ab8:	ldr	r3, [fp, #-12]
   21abc:	sub	r3, r3, #1
   21ac0:	str	r3, [fp, #-12]
   21ac4:	b	21bd8 <flatcc_json_printer_struct_vector_field@@Base+0x2ec>
   21ac8:	ldr	r2, [fp, #-8]
   21acc:	ldr	r3, [fp, #8]
   21ad0:	add	r3, r2, r3
   21ad4:	str	r3, [fp, #-8]
   21ad8:	ldr	r3, [fp, #-16]
   21adc:	ldr	r3, [r3, #20]
   21ae0:	add	r1, r3, #1
   21ae4:	ldr	r2, [fp, #-16]
   21ae8:	str	r1, [r2, #20]
   21aec:	mov	r2, #44	; 0x2c
   21af0:	strb	r2, [r3]
   21af4:	ldr	r3, [fp, #-16]
   21af8:	ldrb	r3, [r3, #25]
   21afc:	cmp	r3, #0
   21b00:	beq	21b2c <flatcc_json_printer_struct_vector_field@@Base+0x240>
   21b04:	ldr	r3, [fp, #-16]
   21b08:	ldr	r3, [r3, #20]
   21b0c:	add	r1, r3, #1
   21b10:	ldr	r2, [fp, #-16]
   21b14:	str	r1, [r2, #20]
   21b18:	mov	r2, #10
   21b1c:	strb	r2, [r3]
   21b20:	ldr	r0, [fp, #-16]
   21b24:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21b28:	b	21b34 <flatcc_json_printer_struct_vector_field@@Base+0x248>
   21b2c:	ldr	r0, [fp, #-16]
   21b30:	bl	15718 <main@@Base+0x7fc>
   21b34:	ldr	r3, [fp, #-16]
   21b38:	ldr	r3, [r3, #32]
   21b3c:	add	r2, r3, #1
   21b40:	ldr	r3, [fp, #-16]
   21b44:	str	r2, [r3, #32]
   21b48:	ldr	r3, [fp, #-16]
   21b4c:	ldr	r3, [r3, #20]
   21b50:	add	r1, r3, #1
   21b54:	ldr	r2, [fp, #-16]
   21b58:	str	r1, [r2, #20]
   21b5c:	mov	r2, #123	; 0x7b
   21b60:	strb	r2, [r3]
   21b64:	ldr	r3, [fp, #12]
   21b68:	ldr	r1, [fp, #-8]
   21b6c:	ldr	r0, [fp, #-16]
   21b70:	blx	r3
   21b74:	ldr	r3, [fp, #-16]
   21b78:	ldrb	r3, [r3, #25]
   21b7c:	cmp	r3, #0
   21b80:	beq	21bbc <flatcc_json_printer_struct_vector_field@@Base+0x2d0>
   21b84:	ldr	r3, [fp, #-16]
   21b88:	ldr	r3, [r3, #20]
   21b8c:	add	r1, r3, #1
   21b90:	ldr	r2, [fp, #-16]
   21b94:	str	r1, [r2, #20]
   21b98:	mov	r2, #10
   21b9c:	strb	r2, [r3]
   21ba0:	ldr	r3, [fp, #-16]
   21ba4:	ldr	r3, [r3, #32]
   21ba8:	sub	r2, r3, #1
   21bac:	ldr	r3, [fp, #-16]
   21bb0:	str	r2, [r3, #32]
   21bb4:	ldr	r0, [fp, #-16]
   21bb8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21bbc:	ldr	r3, [fp, #-16]
   21bc0:	ldr	r3, [r3, #20]
   21bc4:	add	r1, r3, #1
   21bc8:	ldr	r2, [fp, #-16]
   21bcc:	str	r1, [r2, #20]
   21bd0:	mov	r2, #125	; 0x7d
   21bd4:	strb	r2, [r3]
   21bd8:	ldr	r3, [fp, #-12]
   21bdc:	sub	r2, r3, #1
   21be0:	str	r2, [fp, #-12]
   21be4:	cmp	r3, #0
   21be8:	bne	21ac8 <flatcc_json_printer_struct_vector_field@@Base+0x1dc>
   21bec:	ldr	r3, [fp, #-16]
   21bf0:	ldrb	r3, [r3, #25]
   21bf4:	cmp	r3, #0
   21bf8:	beq	21c34 <flatcc_json_printer_struct_vector_field@@Base+0x348>
   21bfc:	ldr	r3, [fp, #-16]
   21c00:	ldr	r3, [r3, #20]
   21c04:	add	r1, r3, #1
   21c08:	ldr	r2, [fp, #-16]
   21c0c:	str	r1, [r2, #20]
   21c10:	mov	r2, #10
   21c14:	strb	r2, [r3]
   21c18:	ldr	r3, [fp, #-16]
   21c1c:	ldr	r3, [r3, #32]
   21c20:	sub	r2, r3, #1
   21c24:	ldr	r3, [fp, #-16]
   21c28:	str	r2, [r3, #32]
   21c2c:	ldr	r0, [fp, #-16]
   21c30:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21c34:	ldr	r3, [fp, #-16]
   21c38:	ldr	r3, [r3, #20]
   21c3c:	add	r1, r3, #1
   21c40:	ldr	r2, [fp, #-16]
   21c44:	str	r1, [r2, #20]
   21c48:	mov	r2, #93	; 0x5d
   21c4c:	strb	r2, [r3]
   21c50:	nop	{0}
   21c54:	sub	sp, fp, #4
   21c58:	ldr	fp, [sp]
   21c5c:	add	sp, sp, #4
   21c60:	pop	{pc}		; (ldr pc, [sp], #4)

00021c64 <flatcc_json_printer_string_vector_field@@Base>:
   21c64:	str	fp, [sp, #-8]!
   21c68:	str	lr, [sp, #4]
   21c6c:	add	fp, sp, #4
   21c70:	sub	sp, sp, #24
   21c74:	str	r0, [fp, #-16]
   21c78:	str	r1, [fp, #-20]	; 0xffffffec
   21c7c:	str	r2, [fp, #-24]	; 0xffffffe8
   21c80:	str	r3, [fp, #-28]	; 0xffffffe4
   21c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21c88:	ldr	r0, [fp, #-20]	; 0xffffffec
   21c8c:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   21c90:	str	r0, [fp, #-8]
   21c94:	ldr	r3, [fp, #-8]
   21c98:	cmp	r3, #0
   21c9c:	beq	21eac <flatcc_json_printer_string_vector_field@@Base+0x248>
   21ca0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ca4:	ldr	r3, [r3, #16]
   21ca8:	add	r1, r3, #1
   21cac:	ldr	r2, [fp, #-20]	; 0xffffffec
   21cb0:	str	r1, [r2, #16]
   21cb4:	cmp	r3, #0
   21cb8:	beq	21cd8 <flatcc_json_printer_string_vector_field@@Base+0x74>
   21cbc:	ldr	r3, [fp, #-16]
   21cc0:	ldr	r3, [r3, #20]
   21cc4:	add	r1, r3, #1
   21cc8:	ldr	r2, [fp, #-16]
   21ccc:	str	r1, [r2, #20]
   21cd0:	mov	r2, #44	; 0x2c
   21cd4:	strb	r2, [r3]
   21cd8:	ldr	r0, [fp, #-8]
   21cdc:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   21ce0:	str	r0, [fp, #-8]
   21ce4:	ldr	r0, [fp, #-8]
   21ce8:	bl	154c8 <main@@Base+0x5ac>
   21cec:	str	r0, [fp, #-12]
   21cf0:	ldr	r3, [fp, #-8]
   21cf4:	add	r3, r3, #4
   21cf8:	str	r3, [fp, #-8]
   21cfc:	ldr	r3, [fp, #4]
   21d00:	mov	r2, r3
   21d04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21d08:	ldr	r0, [fp, #-16]
   21d0c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   21d10:	ldr	r3, [fp, #-16]
   21d14:	ldr	r3, [r3, #32]
   21d18:	add	r2, r3, #1
   21d1c:	ldr	r3, [fp, #-16]
   21d20:	str	r2, [r3, #32]
   21d24:	ldr	r3, [fp, #-16]
   21d28:	ldr	r3, [r3, #20]
   21d2c:	add	r1, r3, #1
   21d30:	ldr	r2, [fp, #-16]
   21d34:	str	r1, [r2, #20]
   21d38:	mov	r2, #91	; 0x5b
   21d3c:	strb	r2, [r3]
   21d40:	ldr	r3, [fp, #-12]
   21d44:	cmp	r3, #0
   21d48:	beq	21e34 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
   21d4c:	ldr	r3, [fp, #-16]
   21d50:	ldrb	r3, [r3, #25]
   21d54:	cmp	r3, #0
   21d58:	beq	21d84 <flatcc_json_printer_string_vector_field@@Base+0x120>
   21d5c:	ldr	r3, [fp, #-16]
   21d60:	ldr	r3, [r3, #20]
   21d64:	add	r1, r3, #1
   21d68:	ldr	r2, [fp, #-16]
   21d6c:	str	r1, [r2, #20]
   21d70:	mov	r2, #10
   21d74:	strb	r2, [r3]
   21d78:	ldr	r0, [fp, #-16]
   21d7c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21d80:	b	21d8c <flatcc_json_printer_string_vector_field@@Base+0x128>
   21d84:	ldr	r0, [fp, #-16]
   21d88:	bl	15718 <main@@Base+0x7fc>
   21d8c:	ldr	r0, [fp, #-8]
   21d90:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   21d94:	mov	r3, r0
   21d98:	mov	r1, r3
   21d9c:	ldr	r0, [fp, #-16]
   21da0:	bl	1b460 <flatcc_json_printer_enum_flag@@Base+0x80>
   21da4:	ldr	r3, [fp, #-12]
   21da8:	sub	r3, r3, #1
   21dac:	str	r3, [fp, #-12]
   21db0:	b	21e34 <flatcc_json_printer_string_vector_field@@Base+0x1d0>
   21db4:	ldr	r3, [fp, #-8]
   21db8:	add	r3, r3, #4
   21dbc:	str	r3, [fp, #-8]
   21dc0:	ldr	r3, [fp, #-16]
   21dc4:	ldr	r3, [r3, #20]
   21dc8:	add	r1, r3, #1
   21dcc:	ldr	r2, [fp, #-16]
   21dd0:	str	r1, [r2, #20]
   21dd4:	mov	r2, #44	; 0x2c
   21dd8:	strb	r2, [r3]
   21ddc:	ldr	r3, [fp, #-16]
   21de0:	ldrb	r3, [r3, #25]
   21de4:	cmp	r3, #0
   21de8:	beq	21e14 <flatcc_json_printer_string_vector_field@@Base+0x1b0>
   21dec:	ldr	r3, [fp, #-16]
   21df0:	ldr	r3, [r3, #20]
   21df4:	add	r1, r3, #1
   21df8:	ldr	r2, [fp, #-16]
   21dfc:	str	r1, [r2, #20]
   21e00:	mov	r2, #10
   21e04:	strb	r2, [r3]
   21e08:	ldr	r0, [fp, #-16]
   21e0c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21e10:	b	21e1c <flatcc_json_printer_string_vector_field@@Base+0x1b8>
   21e14:	ldr	r0, [fp, #-16]
   21e18:	bl	15718 <main@@Base+0x7fc>
   21e1c:	ldr	r0, [fp, #-8]
   21e20:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   21e24:	mov	r3, r0
   21e28:	mov	r1, r3
   21e2c:	ldr	r0, [fp, #-16]
   21e30:	bl	1b460 <flatcc_json_printer_enum_flag@@Base+0x80>
   21e34:	ldr	r3, [fp, #-12]
   21e38:	sub	r2, r3, #1
   21e3c:	str	r2, [fp, #-12]
   21e40:	cmp	r3, #0
   21e44:	bne	21db4 <flatcc_json_printer_string_vector_field@@Base+0x150>
   21e48:	ldr	r3, [fp, #-16]
   21e4c:	ldrb	r3, [r3, #25]
   21e50:	cmp	r3, #0
   21e54:	beq	21e90 <flatcc_json_printer_string_vector_field@@Base+0x22c>
   21e58:	ldr	r3, [fp, #-16]
   21e5c:	ldr	r3, [r3, #20]
   21e60:	add	r1, r3, #1
   21e64:	ldr	r2, [fp, #-16]
   21e68:	str	r1, [r2, #20]
   21e6c:	mov	r2, #10
   21e70:	strb	r2, [r3]
   21e74:	ldr	r3, [fp, #-16]
   21e78:	ldr	r3, [r3, #32]
   21e7c:	sub	r2, r3, #1
   21e80:	ldr	r3, [fp, #-16]
   21e84:	str	r2, [r3, #32]
   21e88:	ldr	r0, [fp, #-16]
   21e8c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   21e90:	ldr	r3, [fp, #-16]
   21e94:	ldr	r3, [r3, #20]
   21e98:	add	r1, r3, #1
   21e9c:	ldr	r2, [fp, #-16]
   21ea0:	str	r1, [r2, #20]
   21ea4:	mov	r2, #93	; 0x5d
   21ea8:	strb	r2, [r3]
   21eac:	nop	{0}
   21eb0:	sub	sp, fp, #4
   21eb4:	ldr	fp, [sp]
   21eb8:	add	sp, sp, #4
   21ebc:	pop	{pc}		; (ldr pc, [sp], #4)

00021ec0 <flatcc_json_printer_table_vector_field@@Base>:
   21ec0:	str	fp, [sp, #-8]!
   21ec4:	str	lr, [sp, #4]
   21ec8:	add	fp, sp, #4
   21ecc:	sub	sp, sp, #24
   21ed0:	str	r0, [fp, #-16]
   21ed4:	str	r1, [fp, #-20]	; 0xffffffec
   21ed8:	str	r2, [fp, #-24]	; 0xffffffe8
   21edc:	str	r3, [fp, #-28]	; 0xffffffe4
   21ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   21ee4:	ldr	r0, [fp, #-20]	; 0xffffffec
   21ee8:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   21eec:	str	r0, [fp, #-8]
   21ef0:	ldr	r3, [fp, #-8]
   21ef4:	cmp	r3, #0
   21ef8:	beq	22098 <flatcc_json_printer_table_vector_field@@Base+0x1d8>
   21efc:	ldr	r3, [fp, #-20]	; 0xffffffec
   21f00:	ldr	r3, [r3, #16]
   21f04:	add	r1, r3, #1
   21f08:	ldr	r2, [fp, #-20]	; 0xffffffec
   21f0c:	str	r1, [r2, #16]
   21f10:	cmp	r3, #0
   21f14:	beq	21f34 <flatcc_json_printer_table_vector_field@@Base+0x74>
   21f18:	ldr	r3, [fp, #-16]
   21f1c:	ldr	r3, [r3, #20]
   21f20:	add	r1, r3, #1
   21f24:	ldr	r2, [fp, #-16]
   21f28:	str	r1, [r2, #20]
   21f2c:	mov	r2, #44	; 0x2c
   21f30:	strb	r2, [r3]
   21f34:	ldr	r0, [fp, #-8]
   21f38:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   21f3c:	str	r0, [fp, #-8]
   21f40:	ldr	r0, [fp, #-8]
   21f44:	bl	154c8 <main@@Base+0x5ac>
   21f48:	str	r0, [fp, #-12]
   21f4c:	ldr	r3, [fp, #-8]
   21f50:	add	r3, r3, #4
   21f54:	str	r3, [fp, #-8]
   21f58:	ldr	r3, [fp, #4]
   21f5c:	mov	r2, r3
   21f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   21f64:	ldr	r0, [fp, #-16]
   21f68:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   21f6c:	ldr	r3, [fp, #-16]
   21f70:	ldr	r3, [r3, #32]
   21f74:	add	r2, r3, #1
   21f78:	ldr	r3, [fp, #-16]
   21f7c:	str	r2, [r3, #32]
   21f80:	ldr	r3, [fp, #-16]
   21f84:	ldr	r3, [r3, #20]
   21f88:	add	r1, r3, #1
   21f8c:	ldr	r2, [fp, #-16]
   21f90:	str	r1, [r2, #20]
   21f94:	mov	r2, #91	; 0x5b
   21f98:	strb	r2, [r3]
   21f9c:	ldr	r3, [fp, #-12]
   21fa0:	cmp	r3, #0
   21fa4:	beq	22020 <flatcc_json_printer_table_vector_field@@Base+0x160>
   21fa8:	ldr	r0, [fp, #-8]
   21fac:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   21fb0:	mov	r1, r0
   21fb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21fb8:	ldr	r2, [r3, #12]
   21fbc:	ldr	r3, [fp, #8]
   21fc0:	ldr	r0, [fp, #-16]
   21fc4:	bl	1b4b4 <flatcc_json_printer_enum_flag@@Base+0xd4>
   21fc8:	ldr	r3, [fp, #-12]
   21fcc:	sub	r3, r3, #1
   21fd0:	str	r3, [fp, #-12]
   21fd4:	b	22020 <flatcc_json_printer_table_vector_field@@Base+0x160>
   21fd8:	ldr	r3, [fp, #-8]
   21fdc:	add	r3, r3, #4
   21fe0:	str	r3, [fp, #-8]
   21fe4:	ldr	r3, [fp, #-16]
   21fe8:	ldr	r3, [r3, #20]
   21fec:	add	r1, r3, #1
   21ff0:	ldr	r2, [fp, #-16]
   21ff4:	str	r1, [r2, #20]
   21ff8:	mov	r2, #44	; 0x2c
   21ffc:	strb	r2, [r3]
   22000:	ldr	r0, [fp, #-8]
   22004:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   22008:	mov	r1, r0
   2200c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22010:	ldr	r2, [r3, #12]
   22014:	ldr	r3, [fp, #8]
   22018:	ldr	r0, [fp, #-16]
   2201c:	bl	1b4b4 <flatcc_json_printer_enum_flag@@Base+0xd4>
   22020:	ldr	r3, [fp, #-12]
   22024:	sub	r2, r3, #1
   22028:	str	r2, [fp, #-12]
   2202c:	cmp	r3, #0
   22030:	bne	21fd8 <flatcc_json_printer_table_vector_field@@Base+0x118>
   22034:	ldr	r3, [fp, #-16]
   22038:	ldrb	r3, [r3, #25]
   2203c:	cmp	r3, #0
   22040:	beq	2207c <flatcc_json_printer_table_vector_field@@Base+0x1bc>
   22044:	ldr	r3, [fp, #-16]
   22048:	ldr	r3, [r3, #20]
   2204c:	add	r1, r3, #1
   22050:	ldr	r2, [fp, #-16]
   22054:	str	r1, [r2, #20]
   22058:	mov	r2, #10
   2205c:	strb	r2, [r3]
   22060:	ldr	r3, [fp, #-16]
   22064:	ldr	r3, [r3, #32]
   22068:	sub	r2, r3, #1
   2206c:	ldr	r3, [fp, #-16]
   22070:	str	r2, [r3, #32]
   22074:	ldr	r0, [fp, #-16]
   22078:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2207c:	ldr	r3, [fp, #-16]
   22080:	ldr	r3, [r3, #20]
   22084:	add	r1, r3, #1
   22088:	ldr	r2, [fp, #-16]
   2208c:	str	r1, [r2, #20]
   22090:	mov	r2, #93	; 0x5d
   22094:	strb	r2, [r3]
   22098:	nop	{0}
   2209c:	sub	sp, fp, #4
   220a0:	ldr	fp, [sp]
   220a4:	add	sp, sp, #4
   220a8:	pop	{pc}		; (ldr pc, [sp], #4)

000220ac <flatcc_json_printer_union_vector_field@@Base>:
   220ac:	str	fp, [sp, #-8]!
   220b0:	str	lr, [sp, #4]
   220b4:	add	fp, sp, #4
   220b8:	sub	sp, sp, #160	; 0xa0
   220bc:	str	r0, [fp, #-144]	; 0xffffff70
   220c0:	str	r1, [fp, #-148]	; 0xffffff6c
   220c4:	str	r2, [fp, #-152]	; 0xffffff68
   220c8:	str	r3, [fp, #-156]	; 0xffffff64
   220cc:	ldr	r3, [fp, #-152]	; 0xffffff68
   220d0:	sub	r3, r3, #1
   220d4:	mov	r1, r3
   220d8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   220dc:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   220e0:	str	r0, [fp, #-20]	; 0xffffffec
   220e4:	ldr	r1, [fp, #-152]	; 0xffffff68
   220e8:	ldr	r0, [fp, #-148]	; 0xffffff6c
   220ec:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   220f0:	str	r0, [fp, #-8]
   220f4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   220f8:	ldr	r3, [r3, #12]
   220fc:	str	r3, [fp, #-136]	; 0xffffff78
   22100:	ldr	r3, [fp, #4]
   22104:	cmp	r3, #100	; 0x64
   22108:	ble	22138 <flatcc_json_printer_union_vector_field@@Base+0x8c>
   2210c:	mov	r1, #1
   22110:	ldr	r0, [fp, #-144]	; 0xffffff70
   22114:	bl	156b0 <main@@Base+0x794>
   22118:	ldr	r3, [pc, #920]	; 224b8 <flatcc_json_printer_union_vector_field@@Base+0x40c>
   2211c:	add	r3, pc, r3
   22120:	movw	r2, #843	; 0x34b
   22124:	ldr	r1, [pc, #912]	; 224bc <flatcc_json_printer_union_vector_field@@Base+0x410>
   22128:	add	r1, pc, r1
   2212c:	ldr	r0, [pc, #908]	; 224c0 <flatcc_json_printer_union_vector_field@@Base+0x414>
   22130:	add	r0, pc, r0
   22134:	bl	12504 <__assert_fail@plt>
   22138:	ldr	r2, [fp, #4]
   2213c:	sub	r3, fp, #128	; 0x80
   22140:	ldr	r1, [fp, #-156]	; 0xffffff64
   22144:	mov	r0, r3
   22148:	bl	12420 <memcpy@plt>
   2214c:	ldr	r3, [fp, #4]
   22150:	sub	r2, fp, #128	; 0x80
   22154:	add	r3, r2, r3
   22158:	mov	r2, #5
   2215c:	ldr	r1, [pc, #864]	; 224c4 <flatcc_json_printer_union_vector_field@@Base+0x418>
   22160:	add	r1, pc, r1
   22164:	mov	r0, r3
   22168:	bl	12420 <memcpy@plt>
   2216c:	ldr	r3, [fp, #-8]
   22170:	cmp	r3, #0
   22174:	beq	224a8 <flatcc_json_printer_union_vector_field@@Base+0x3fc>
   22178:	ldr	r3, [fp, #-20]	; 0xffffffec
   2217c:	cmp	r3, #0
   22180:	beq	224a8 <flatcc_json_printer_union_vector_field@@Base+0x3fc>
   22184:	ldr	r3, [fp, #-152]	; 0xffffff68
   22188:	sub	r1, r3, #1
   2218c:	ldr	r3, [fp, #4]
   22190:	add	r3, r3, #5
   22194:	sub	r0, fp, #128	; 0x80
   22198:	ldr	r2, [fp, #8]
   2219c:	str	r2, [sp, #4]
   221a0:	str	r3, [sp]
   221a4:	mov	r3, r0
   221a8:	mov	r2, r1
   221ac:	ldr	r1, [fp, #-148]	; 0xffffff6c
   221b0:	ldr	r0, [fp, #-144]	; 0xffffff70
   221b4:	bl	1fea4 <flatcc_json_printer_utype_enum_vector_field@@Base>
   221b8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   221bc:	ldr	r3, [r3, #16]
   221c0:	add	r1, r3, #1
   221c4:	ldr	r2, [fp, #-148]	; 0xffffff6c
   221c8:	str	r1, [r2, #16]
   221cc:	cmp	r3, #0
   221d0:	beq	221f0 <flatcc_json_printer_union_vector_field@@Base+0x144>
   221d4:	ldr	r3, [fp, #-144]	; 0xffffff70
   221d8:	ldr	r3, [r3, #20]
   221dc:	add	r1, r3, #1
   221e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   221e4:	str	r1, [r2, #20]
   221e8:	mov	r2, #44	; 0x2c
   221ec:	strb	r2, [r3]
   221f0:	ldr	r0, [fp, #-8]
   221f4:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   221f8:	str	r0, [fp, #-8]
   221fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22200:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   22204:	str	r0, [fp, #-20]	; 0xffffffec
   22208:	ldr	r0, [fp, #-8]
   2220c:	bl	154c8 <main@@Base+0x5ac>
   22210:	str	r0, [fp, #-16]
   22214:	ldr	r3, [fp, #-8]
   22218:	add	r3, r3, #4
   2221c:	str	r3, [fp, #-8]
   22220:	ldr	r3, [fp, #-20]	; 0xffffffec
   22224:	add	r3, r3, #4
   22228:	str	r3, [fp, #-20]	; 0xffffffec
   2222c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22230:	str	r3, [fp, #-12]
   22234:	ldr	r3, [fp, #4]
   22238:	mov	r2, r3
   2223c:	ldr	r1, [fp, #-156]	; 0xffffff64
   22240:	ldr	r0, [fp, #-144]	; 0xffffff70
   22244:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   22248:	ldr	r3, [fp, #-144]	; 0xffffff70
   2224c:	ldr	r3, [r3, #32]
   22250:	add	r2, r3, #1
   22254:	ldr	r3, [fp, #-144]	; 0xffffff70
   22258:	str	r2, [r3, #32]
   2225c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22260:	ldr	r3, [r3, #20]
   22264:	add	r1, r3, #1
   22268:	ldr	r2, [fp, #-144]	; 0xffffff70
   2226c:	str	r1, [r2, #20]
   22270:	mov	r2, #91	; 0x5b
   22274:	strb	r2, [r3]
   22278:	ldr	r3, [fp, #-16]
   2227c:	cmp	r3, #0
   22280:	beq	22430 <flatcc_json_printer_union_vector_field@@Base+0x384>
   22284:	ldr	r0, [fp, #-12]
   22288:	bl	155f0 <main@@Base+0x6d4>
   2228c:	mov	r3, r0
   22290:	strb	r3, [fp, #-21]	; 0xffffffeb
   22294:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   22298:	cmp	r3, #0
   2229c:	beq	222c8 <flatcc_json_printer_union_vector_field@@Base+0x21c>
   222a0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   222a4:	strb	r3, [fp, #-132]	; 0xffffff7c
   222a8:	ldr	r3, [fp, #-8]
   222ac:	str	r3, [fp, #-140]	; 0xffffff74
   222b0:	sub	r2, fp, #140	; 0x8c
   222b4:	ldr	r3, [fp, #12]
   222b8:	mov	r1, r2
   222bc:	ldr	r0, [fp, #-144]	; 0xffffff70
   222c0:	blx	r3
   222c4:	b	22338 <flatcc_json_printer_union_vector_field@@Base+0x28c>
   222c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   222cc:	ldr	r3, [r3, #20]
   222d0:	add	r1, r3, #1
   222d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   222d8:	str	r1, [r2, #20]
   222dc:	mov	r2, #110	; 0x6e
   222e0:	strb	r2, [r3]
   222e4:	ldr	r3, [fp, #-144]	; 0xffffff70
   222e8:	ldr	r3, [r3, #20]
   222ec:	add	r1, r3, #1
   222f0:	ldr	r2, [fp, #-144]	; 0xffffff70
   222f4:	str	r1, [r2, #20]
   222f8:	mov	r2, #117	; 0x75
   222fc:	strb	r2, [r3]
   22300:	ldr	r3, [fp, #-144]	; 0xffffff70
   22304:	ldr	r3, [r3, #20]
   22308:	add	r1, r3, #1
   2230c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22310:	str	r1, [r2, #20]
   22314:	mov	r2, #108	; 0x6c
   22318:	strb	r2, [r3]
   2231c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22320:	ldr	r3, [r3, #20]
   22324:	add	r1, r3, #1
   22328:	ldr	r2, [fp, #-144]	; 0xffffff70
   2232c:	str	r1, [r2, #20]
   22330:	mov	r2, #108	; 0x6c
   22334:	strb	r2, [r3]
   22338:	ldr	r3, [fp, #-16]
   2233c:	sub	r3, r3, #1
   22340:	str	r3, [fp, #-16]
   22344:	b	22430 <flatcc_json_printer_union_vector_field@@Base+0x384>
   22348:	ldr	r3, [fp, #-8]
   2234c:	add	r3, r3, #4
   22350:	str	r3, [fp, #-8]
   22354:	ldr	r3, [fp, #-12]
   22358:	add	r3, r3, #1
   2235c:	str	r3, [fp, #-12]
   22360:	ldr	r0, [fp, #-12]
   22364:	bl	155f0 <main@@Base+0x6d4>
   22368:	mov	r3, r0
   2236c:	strb	r3, [fp, #-21]	; 0xffffffeb
   22370:	ldr	r3, [fp, #-144]	; 0xffffff70
   22374:	ldr	r3, [r3, #20]
   22378:	add	r1, r3, #1
   2237c:	ldr	r2, [fp, #-144]	; 0xffffff70
   22380:	str	r1, [r2, #20]
   22384:	mov	r2, #44	; 0x2c
   22388:	strb	r2, [r3]
   2238c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   22390:	cmp	r3, #0
   22394:	beq	223c0 <flatcc_json_printer_union_vector_field@@Base+0x314>
   22398:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2239c:	strb	r3, [fp, #-132]	; 0xffffff7c
   223a0:	ldr	r3, [fp, #-8]
   223a4:	str	r3, [fp, #-140]	; 0xffffff74
   223a8:	sub	r2, fp, #140	; 0x8c
   223ac:	ldr	r3, [fp, #12]
   223b0:	mov	r1, r2
   223b4:	ldr	r0, [fp, #-144]	; 0xffffff70
   223b8:	blx	r3
   223bc:	b	22430 <flatcc_json_printer_union_vector_field@@Base+0x384>
   223c0:	ldr	r3, [fp, #-144]	; 0xffffff70
   223c4:	ldr	r3, [r3, #20]
   223c8:	add	r1, r3, #1
   223cc:	ldr	r2, [fp, #-144]	; 0xffffff70
   223d0:	str	r1, [r2, #20]
   223d4:	mov	r2, #110	; 0x6e
   223d8:	strb	r2, [r3]
   223dc:	ldr	r3, [fp, #-144]	; 0xffffff70
   223e0:	ldr	r3, [r3, #20]
   223e4:	add	r1, r3, #1
   223e8:	ldr	r2, [fp, #-144]	; 0xffffff70
   223ec:	str	r1, [r2, #20]
   223f0:	mov	r2, #117	; 0x75
   223f4:	strb	r2, [r3]
   223f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   223fc:	ldr	r3, [r3, #20]
   22400:	add	r1, r3, #1
   22404:	ldr	r2, [fp, #-144]	; 0xffffff70
   22408:	str	r1, [r2, #20]
   2240c:	mov	r2, #108	; 0x6c
   22410:	strb	r2, [r3]
   22414:	ldr	r3, [fp, #-144]	; 0xffffff70
   22418:	ldr	r3, [r3, #20]
   2241c:	add	r1, r3, #1
   22420:	ldr	r2, [fp, #-144]	; 0xffffff70
   22424:	str	r1, [r2, #20]
   22428:	mov	r2, #108	; 0x6c
   2242c:	strb	r2, [r3]
   22430:	ldr	r3, [fp, #-16]
   22434:	sub	r2, r3, #1
   22438:	str	r2, [fp, #-16]
   2243c:	cmp	r3, #0
   22440:	bne	22348 <flatcc_json_printer_union_vector_field@@Base+0x29c>
   22444:	ldr	r3, [fp, #-144]	; 0xffffff70
   22448:	ldrb	r3, [r3, #25]
   2244c:	cmp	r3, #0
   22450:	beq	2248c <flatcc_json_printer_union_vector_field@@Base+0x3e0>
   22454:	ldr	r3, [fp, #-144]	; 0xffffff70
   22458:	ldr	r3, [r3, #20]
   2245c:	add	r1, r3, #1
   22460:	ldr	r2, [fp, #-144]	; 0xffffff70
   22464:	str	r1, [r2, #20]
   22468:	mov	r2, #10
   2246c:	strb	r2, [r3]
   22470:	ldr	r3, [fp, #-144]	; 0xffffff70
   22474:	ldr	r3, [r3, #32]
   22478:	sub	r2, r3, #1
   2247c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22480:	str	r2, [r3, #32]
   22484:	ldr	r0, [fp, #-144]	; 0xffffff70
   22488:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   2248c:	ldr	r3, [fp, #-144]	; 0xffffff70
   22490:	ldr	r3, [r3, #20]
   22494:	add	r1, r3, #1
   22498:	ldr	r2, [fp, #-144]	; 0xffffff70
   2249c:	str	r1, [r2, #20]
   224a0:	mov	r2, #93	; 0x5d
   224a4:	strb	r2, [r3]
   224a8:	sub	sp, fp, #4
   224ac:	ldr	fp, [sp]
   224b0:	add	sp, sp, #4
   224b4:	pop	{pc}		; (ldr pc, [sp], #4)
   224b8:	ldrdeq	r3, [r0], -r8
   224bc:	andeq	r2, r0, r8, lsr #28
   224c0:	andeq	r2, r0, ip, lsl #29
   224c4:	andeq	r2, r0, r8, ror lr

000224c8 <flatcc_json_printer_table_field@@Base>:
   224c8:	str	fp, [sp, #-8]!
   224cc:	str	lr, [sp, #4]
   224d0:	add	fp, sp, #4
   224d4:	sub	sp, sp, #24
   224d8:	str	r0, [fp, #-16]
   224dc:	str	r1, [fp, #-20]	; 0xffffffec
   224e0:	str	r2, [fp, #-24]	; 0xffffffe8
   224e4:	str	r3, [fp, #-28]	; 0xffffffe4
   224e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   224ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   224f0:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   224f4:	str	r0, [fp, #-8]
   224f8:	ldr	r3, [fp, #-8]
   224fc:	cmp	r3, #0
   22500:	beq	22570 <flatcc_json_printer_table_field@@Base+0xa8>
   22504:	ldr	r3, [fp, #-20]	; 0xffffffec
   22508:	ldr	r3, [r3, #16]
   2250c:	add	r1, r3, #1
   22510:	ldr	r2, [fp, #-20]	; 0xffffffec
   22514:	str	r1, [r2, #16]
   22518:	cmp	r3, #0
   2251c:	beq	2253c <flatcc_json_printer_table_field@@Base+0x74>
   22520:	ldr	r3, [fp, #-16]
   22524:	ldr	r3, [r3, #20]
   22528:	add	r1, r3, #1
   2252c:	ldr	r2, [fp, #-16]
   22530:	str	r1, [r2, #20]
   22534:	mov	r2, #44	; 0x2c
   22538:	strb	r2, [r3]
   2253c:	ldr	r3, [fp, #4]
   22540:	mov	r2, r3
   22544:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22548:	ldr	r0, [fp, #-16]
   2254c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   22550:	ldr	r0, [fp, #-8]
   22554:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   22558:	mov	r1, r0
   2255c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22560:	ldr	r2, [r3, #12]
   22564:	ldr	r3, [fp, #8]
   22568:	ldr	r0, [fp, #-16]
   2256c:	bl	1b4b4 <flatcc_json_printer_enum_flag@@Base+0xd4>
   22570:	nop	{0}
   22574:	sub	sp, fp, #4
   22578:	ldr	fp, [sp]
   2257c:	add	sp, sp, #4
   22580:	pop	{pc}		; (ldr pc, [sp], #4)

00022584 <flatcc_json_printer_union_field@@Base>:
   22584:	str	fp, [sp, #-8]!
   22588:	str	lr, [sp, #4]
   2258c:	add	fp, sp, #4
   22590:	sub	sp, sp, #40	; 0x28
   22594:	str	r0, [fp, #-32]	; 0xffffffe0
   22598:	str	r1, [fp, #-36]	; 0xffffffdc
   2259c:	str	r2, [fp, #-40]	; 0xffffffd8
   225a0:	str	r3, [fp, #-44]	; 0xffffffd4
   225a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   225a8:	sub	r3, r3, #1
   225ac:	mov	r1, r3
   225b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   225b4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   225b8:	str	r0, [fp, #-8]
   225bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   225c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   225c4:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   225c8:	str	r0, [fp, #-12]
   225cc:	ldr	r3, [fp, #-12]
   225d0:	cmp	r3, #0
   225d4:	beq	22884 <flatcc_json_printer_union_field@@Base+0x300>
   225d8:	ldr	r3, [fp, #-8]
   225dc:	cmp	r3, #0
   225e0:	beq	22884 <flatcc_json_printer_union_field@@Base+0x300>
   225e4:	ldr	r0, [fp, #-8]
   225e8:	bl	155f0 <main@@Base+0x6d4>
   225ec:	mov	r3, r0
   225f0:	strb	r3, [fp, #-13]
   225f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   225f8:	ldr	r3, [r3, #16]
   225fc:	add	r1, r3, #1
   22600:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22604:	str	r1, [r2, #16]
   22608:	cmp	r3, #0
   2260c:	beq	2262c <flatcc_json_printer_union_field@@Base+0xa8>
   22610:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22614:	ldr	r3, [r3, #20]
   22618:	add	r1, r3, #1
   2261c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22620:	str	r1, [r2, #20]
   22624:	mov	r2, #44	; 0x2c
   22628:	strb	r2, [r3]
   2262c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22630:	ldrb	r3, [r3, #25]
   22634:	cmp	r3, #0
   22638:	beq	22664 <flatcc_json_printer_union_field@@Base+0xe0>
   2263c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22640:	ldr	r3, [r3, #20]
   22644:	add	r1, r3, #1
   22648:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2264c:	str	r1, [r2, #20]
   22650:	mov	r2, #10
   22654:	strb	r2, [r3]
   22658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2265c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   22660:	b	2266c <flatcc_json_printer_union_field@@Base+0xe8>
   22664:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22668:	bl	15718 <main@@Base+0x7fc>
   2266c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22670:	ldr	r3, [r3, #20]
   22674:	mov	r2, #34	; 0x22
   22678:	strb	r2, [r3]
   2267c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22680:	ldr	r3, [r3, #20]
   22684:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22688:	ldrb	r2, [r2, #26]
   2268c:	cmp	r2, #0
   22690:	moveq	r2, #1
   22694:	movne	r2, #0
   22698:	uxtb	r2, r2
   2269c:	add	r2, r3, r2
   226a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226a4:	str	r2, [r3, #20]
   226a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226ac:	ldr	r2, [r3, #20]
   226b0:	ldr	r3, [fp, #4]
   226b4:	add	r2, r2, r3
   226b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226bc:	ldr	r3, [r3, #16]
   226c0:	cmp	r2, r3
   226c4:	bcs	226fc <flatcc_json_printer_union_field@@Base+0x178>
   226c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226cc:	ldr	r3, [r3, #20]
   226d0:	ldr	r2, [fp, #4]
   226d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   226d8:	mov	r0, r3
   226dc:	bl	12420 <memcpy@plt>
   226e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226e4:	ldr	r2, [r3, #20]
   226e8:	ldr	r3, [fp, #4]
   226ec:	add	r2, r2, r3
   226f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   226f4:	str	r2, [r3, #20]
   226f8:	b	22710 <flatcc_json_printer_union_field@@Base+0x18c>
   226fc:	ldr	r3, [fp, #4]
   22700:	mov	r2, r3
   22704:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22708:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2270c:	bl	1a3fc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   22710:	mov	r2, #5
   22714:	ldr	r3, [pc, #380]	; 22898 <flatcc_json_printer_union_field@@Base+0x314>
   22718:	add	r3, pc, r3
   2271c:	mov	r1, r3
   22720:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22724:	bl	1a3fc <flatcc_json_printer_fmt_bool@@Base+0x1b0>
   22728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2272c:	ldr	r3, [r3, #20]
   22730:	mov	r2, #34	; 0x22
   22734:	strb	r2, [r3]
   22738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2273c:	ldr	r3, [r3, #20]
   22740:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22744:	ldrb	r2, [r2, #26]
   22748:	cmp	r2, #0
   2274c:	moveq	r2, #1
   22750:	movne	r2, #0
   22754:	uxtb	r2, r2
   22758:	add	r2, r3, r2
   2275c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22760:	str	r2, [r3, #20]
   22764:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22768:	ldr	r3, [r3, #20]
   2276c:	add	r1, r3, #1
   22770:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22774:	str	r1, [r2, #20]
   22778:	mov	r2, #58	; 0x3a
   2277c:	strb	r2, [r3]
   22780:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22784:	ldr	r3, [r3, #20]
   22788:	mov	r2, #32
   2278c:	strb	r2, [r3]
   22790:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22794:	ldr	r3, [r3, #20]
   22798:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2279c:	ldrb	r2, [r2, #25]
   227a0:	cmp	r2, #0
   227a4:	movne	r2, #1
   227a8:	moveq	r2, #0
   227ac:	uxtb	r2, r2
   227b0:	add	r2, r3, r2
   227b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   227b8:	str	r2, [r3, #20]
   227bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   227c0:	ldrb	r3, [r3, #27]
   227c4:	cmp	r3, #0
   227c8:	beq	22800 <flatcc_json_printer_union_field@@Base+0x27c>
   227cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   227d0:	ldr	r2, [r3, #20]
   227d4:	ldrb	r3, [fp, #-13]
   227d8:	mov	r1, r2
   227dc:	mov	r0, r3
   227e0:	bl	157e8 <main@@Base+0x8cc>
   227e4:	mov	r2, r0
   227e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   227ec:	ldr	r3, [r3, #20]
   227f0:	add	r2, r3, r2
   227f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   227f8:	str	r2, [r3, #20]
   227fc:	b	22814 <flatcc_json_printer_union_field@@Base+0x290>
   22800:	ldrb	r2, [fp, #-13]
   22804:	ldr	r3, [fp, #8]
   22808:	mov	r1, r2
   2280c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22810:	blx	r3
   22814:	ldrb	r3, [fp, #-13]
   22818:	cmp	r3, #0
   2281c:	beq	22888 <flatcc_json_printer_union_field@@Base+0x304>
   22820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22824:	ldr	r3, [r3, #20]
   22828:	add	r1, r3, #1
   2282c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22830:	str	r1, [r2, #20]
   22834:	mov	r2, #44	; 0x2c
   22838:	strb	r2, [r3]
   2283c:	ldr	r3, [fp, #4]
   22840:	mov	r2, r3
   22844:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2284c:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   22850:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22854:	ldr	r3, [r3, #12]
   22858:	str	r3, [fp, #-24]	; 0xffffffe8
   2285c:	ldrb	r3, [fp, #-13]
   22860:	strb	r3, [fp, #-20]	; 0xffffffec
   22864:	ldr	r3, [fp, #-12]
   22868:	str	r3, [fp, #-28]	; 0xffffffe4
   2286c:	sub	r2, fp, #28
   22870:	ldr	r3, [fp, #12]
   22874:	mov	r1, r2
   22878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2287c:	blx	r3
   22880:	b	22888 <flatcc_json_printer_union_field@@Base+0x304>
   22884:	nop	{0}
   22888:	sub	sp, fp, #4
   2288c:	ldr	fp, [sp]
   22890:	add	sp, sp, #4
   22894:	pop	{pc}		; (ldr pc, [sp], #4)
   22898:	andeq	r2, r0, r0, asr #17

0002289c <flatcc_json_printer_union_table@@Base>:
   2289c:	str	fp, [sp, #-8]!
   228a0:	str	lr, [sp, #4]
   228a4:	add	fp, sp, #4
   228a8:	sub	sp, sp, #16
   228ac:	str	r0, [fp, #-8]
   228b0:	str	r1, [fp, #-12]
   228b4:	str	r2, [fp, #-16]
   228b8:	ldr	r3, [fp, #-12]
   228bc:	ldr	r3, [r3]
   228c0:	mov	r0, r3
   228c4:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   228c8:	mov	r1, r0
   228cc:	ldr	r3, [fp, #-12]
   228d0:	ldr	r2, [r3, #4]
   228d4:	ldr	r3, [fp, #-16]
   228d8:	ldr	r0, [fp, #-8]
   228dc:	bl	1b4b4 <flatcc_json_printer_enum_flag@@Base+0xd4>
   228e0:	nop	{0}
   228e4:	sub	sp, fp, #4
   228e8:	ldr	fp, [sp]
   228ec:	add	sp, sp, #4
   228f0:	pop	{pc}		; (ldr pc, [sp], #4)

000228f4 <flatcc_json_printer_union_struct@@Base>:
   228f4:	str	fp, [sp, #-8]!
   228f8:	str	lr, [sp, #4]
   228fc:	add	fp, sp, #4
   22900:	sub	sp, sp, #16
   22904:	str	r0, [fp, #-8]
   22908:	str	r1, [fp, #-12]
   2290c:	str	r2, [fp, #-16]
   22910:	ldr	r3, [fp, #-8]
   22914:	ldr	r3, [r3, #32]
   22918:	add	r2, r3, #1
   2291c:	ldr	r3, [fp, #-8]
   22920:	str	r2, [r3, #32]
   22924:	ldr	r3, [fp, #-8]
   22928:	ldr	r3, [r3, #20]
   2292c:	add	r1, r3, #1
   22930:	ldr	r2, [fp, #-8]
   22934:	str	r1, [r2, #20]
   22938:	mov	r2, #123	; 0x7b
   2293c:	strb	r2, [r3]
   22940:	ldr	r3, [fp, #-12]
   22944:	ldr	r3, [r3]
   22948:	mov	r0, r3
   2294c:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   22950:	mov	r2, r0
   22954:	ldr	r3, [fp, #-16]
   22958:	mov	r1, r2
   2295c:	ldr	r0, [fp, #-8]
   22960:	blx	r3
   22964:	ldr	r3, [fp, #-8]
   22968:	ldrb	r3, [r3, #25]
   2296c:	cmp	r3, #0
   22970:	beq	229ac <flatcc_json_printer_union_struct@@Base+0xb8>
   22974:	ldr	r3, [fp, #-8]
   22978:	ldr	r3, [r3, #20]
   2297c:	add	r1, r3, #1
   22980:	ldr	r2, [fp, #-8]
   22984:	str	r1, [r2, #20]
   22988:	mov	r2, #10
   2298c:	strb	r2, [r3]
   22990:	ldr	r3, [fp, #-8]
   22994:	ldr	r3, [r3, #32]
   22998:	sub	r2, r3, #1
   2299c:	ldr	r3, [fp, #-8]
   229a0:	str	r2, [r3, #32]
   229a4:	ldr	r0, [fp, #-8]
   229a8:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   229ac:	ldr	r3, [fp, #-8]
   229b0:	ldr	r3, [r3, #20]
   229b4:	add	r1, r3, #1
   229b8:	ldr	r2, [fp, #-8]
   229bc:	str	r1, [r2, #20]
   229c0:	mov	r2, #125	; 0x7d
   229c4:	strb	r2, [r3]
   229c8:	nop	{0}
   229cc:	sub	sp, fp, #4
   229d0:	ldr	fp, [sp]
   229d4:	add	sp, sp, #4
   229d8:	pop	{pc}		; (ldr pc, [sp], #4)

000229dc <flatcc_json_printer_union_string@@Base>:
   229dc:	str	fp, [sp, #-8]!
   229e0:	str	lr, [sp, #4]
   229e4:	add	fp, sp, #4
   229e8:	sub	sp, sp, #8
   229ec:	str	r0, [fp, #-8]
   229f0:	str	r1, [fp, #-12]
   229f4:	ldr	r3, [fp, #-12]
   229f8:	ldr	r3, [r3]
   229fc:	mov	r0, r3
   22a00:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   22a04:	mov	r3, r0
   22a08:	mov	r1, r3
   22a0c:	ldr	r0, [fp, #-8]
   22a10:	bl	1b460 <flatcc_json_printer_enum_flag@@Base+0x80>
   22a14:	nop	{0}
   22a18:	sub	sp, fp, #4
   22a1c:	ldr	fp, [sp]
   22a20:	add	sp, sp, #4
   22a24:	pop	{pc}		; (ldr pc, [sp], #4)

00022a28 <flatcc_json_printer_embedded_struct_field@@Base>:
   22a28:	str	fp, [sp, #-8]!
   22a2c:	str	lr, [sp, #4]
   22a30:	add	fp, sp, #4
   22a34:	sub	sp, sp, #16
   22a38:	str	r0, [fp, #-8]
   22a3c:	str	r1, [fp, #-12]
   22a40:	str	r2, [fp, #-16]
   22a44:	str	r3, [fp, #-20]	; 0xffffffec
   22a48:	ldr	r3, [fp, #-12]
   22a4c:	cmp	r3, #0
   22a50:	beq	22a70 <flatcc_json_printer_embedded_struct_field@@Base+0x48>
   22a54:	ldr	r3, [fp, #-8]
   22a58:	ldr	r3, [r3, #20]
   22a5c:	add	r1, r3, #1
   22a60:	ldr	r2, [fp, #-8]
   22a64:	str	r1, [r2, #20]
   22a68:	mov	r2, #44	; 0x2c
   22a6c:	strb	r2, [r3]
   22a70:	ldr	r3, [fp, #8]
   22a74:	mov	r2, r3
   22a78:	ldr	r1, [fp, #4]
   22a7c:	ldr	r0, [fp, #-8]
   22a80:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   22a84:	ldr	r3, [fp, #-8]
   22a88:	ldr	r3, [r3, #32]
   22a8c:	add	r2, r3, #1
   22a90:	ldr	r3, [fp, #-8]
   22a94:	str	r2, [r3, #32]
   22a98:	ldr	r3, [fp, #-8]
   22a9c:	ldr	r3, [r3, #20]
   22aa0:	add	r1, r3, #1
   22aa4:	ldr	r2, [fp, #-8]
   22aa8:	str	r1, [r2, #20]
   22aac:	mov	r2, #123	; 0x7b
   22ab0:	strb	r2, [r3]
   22ab4:	ldr	r2, [fp, #-16]
   22ab8:	ldr	r3, [fp, #-20]	; 0xffffffec
   22abc:	add	r2, r2, r3
   22ac0:	ldr	r3, [fp, #12]
   22ac4:	mov	r1, r2
   22ac8:	ldr	r0, [fp, #-8]
   22acc:	blx	r3
   22ad0:	ldr	r3, [fp, #-8]
   22ad4:	ldrb	r3, [r3, #25]
   22ad8:	cmp	r3, #0
   22adc:	beq	22b18 <flatcc_json_printer_embedded_struct_field@@Base+0xf0>
   22ae0:	ldr	r3, [fp, #-8]
   22ae4:	ldr	r3, [r3, #20]
   22ae8:	add	r1, r3, #1
   22aec:	ldr	r2, [fp, #-8]
   22af0:	str	r1, [r2, #20]
   22af4:	mov	r2, #10
   22af8:	strb	r2, [r3]
   22afc:	ldr	r3, [fp, #-8]
   22b00:	ldr	r3, [r3, #32]
   22b04:	sub	r2, r3, #1
   22b08:	ldr	r3, [fp, #-8]
   22b0c:	str	r2, [r3, #32]
   22b10:	ldr	r0, [fp, #-8]
   22b14:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   22b18:	ldr	r3, [fp, #-8]
   22b1c:	ldr	r3, [r3, #20]
   22b20:	add	r1, r3, #1
   22b24:	ldr	r2, [fp, #-8]
   22b28:	str	r1, [r2, #20]
   22b2c:	mov	r2, #125	; 0x7d
   22b30:	strb	r2, [r3]
   22b34:	nop	{0}
   22b38:	sub	sp, fp, #4
   22b3c:	ldr	fp, [sp]
   22b40:	add	sp, sp, #4
   22b44:	pop	{pc}		; (ldr pc, [sp], #4)

00022b48 <flatcc_json_printer_struct_field@@Base>:
   22b48:	str	fp, [sp, #-8]!
   22b4c:	str	lr, [sp, #4]
   22b50:	add	fp, sp, #4
   22b54:	sub	sp, sp, #24
   22b58:	str	r0, [fp, #-16]
   22b5c:	str	r1, [fp, #-20]	; 0xffffffec
   22b60:	str	r2, [fp, #-24]	; 0xffffffe8
   22b64:	str	r3, [fp, #-28]	; 0xffffffe4
   22b68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22b70:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   22b74:	str	r0, [fp, #-8]
   22b78:	ldr	r3, [fp, #-8]
   22b7c:	cmp	r3, #0
   22b80:	beq	22c74 <flatcc_json_printer_struct_field@@Base+0x12c>
   22b84:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b88:	ldr	r3, [r3, #16]
   22b8c:	add	r1, r3, #1
   22b90:	ldr	r2, [fp, #-20]	; 0xffffffec
   22b94:	str	r1, [r2, #16]
   22b98:	cmp	r3, #0
   22b9c:	beq	22bbc <flatcc_json_printer_struct_field@@Base+0x74>
   22ba0:	ldr	r3, [fp, #-16]
   22ba4:	ldr	r3, [r3, #20]
   22ba8:	add	r1, r3, #1
   22bac:	ldr	r2, [fp, #-16]
   22bb0:	str	r1, [r2, #20]
   22bb4:	mov	r2, #44	; 0x2c
   22bb8:	strb	r2, [r3]
   22bbc:	ldr	r3, [fp, #4]
   22bc0:	mov	r2, r3
   22bc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22bc8:	ldr	r0, [fp, #-16]
   22bcc:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   22bd0:	ldr	r3, [fp, #-16]
   22bd4:	ldr	r3, [r3, #32]
   22bd8:	add	r2, r3, #1
   22bdc:	ldr	r3, [fp, #-16]
   22be0:	str	r2, [r3, #32]
   22be4:	ldr	r3, [fp, #-16]
   22be8:	ldr	r3, [r3, #20]
   22bec:	add	r1, r3, #1
   22bf0:	ldr	r2, [fp, #-16]
   22bf4:	str	r1, [r2, #20]
   22bf8:	mov	r2, #123	; 0x7b
   22bfc:	strb	r2, [r3]
   22c00:	ldr	r3, [fp, #8]
   22c04:	ldr	r1, [fp, #-8]
   22c08:	ldr	r0, [fp, #-16]
   22c0c:	blx	r3
   22c10:	ldr	r3, [fp, #-16]
   22c14:	ldrb	r3, [r3, #25]
   22c18:	cmp	r3, #0
   22c1c:	beq	22c58 <flatcc_json_printer_struct_field@@Base+0x110>
   22c20:	ldr	r3, [fp, #-16]
   22c24:	ldr	r3, [r3, #20]
   22c28:	add	r1, r3, #1
   22c2c:	ldr	r2, [fp, #-16]
   22c30:	str	r1, [r2, #20]
   22c34:	mov	r2, #10
   22c38:	strb	r2, [r3]
   22c3c:	ldr	r3, [fp, #-16]
   22c40:	ldr	r3, [r3, #32]
   22c44:	sub	r2, r3, #1
   22c48:	ldr	r3, [fp, #-16]
   22c4c:	str	r2, [r3, #32]
   22c50:	ldr	r0, [fp, #-16]
   22c54:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   22c58:	ldr	r3, [fp, #-16]
   22c5c:	ldr	r3, [r3, #20]
   22c60:	add	r1, r3, #1
   22c64:	ldr	r2, [fp, #-16]
   22c68:	str	r1, [r2, #20]
   22c6c:	mov	r2, #125	; 0x7d
   22c70:	strb	r2, [r3]
   22c74:	nop	{0}
   22c78:	sub	sp, fp, #4
   22c7c:	ldr	fp, [sp]
   22c80:	add	sp, sp, #4
   22c84:	pop	{pc}		; (ldr pc, [sp], #4)
   22c88:	str	fp, [sp, #-8]!
   22c8c:	str	lr, [sp, #4]
   22c90:	add	fp, sp, #4
   22c94:	sub	sp, sp, #24
   22c98:	str	r0, [fp, #-16]
   22c9c:	str	r1, [fp, #-20]	; 0xffffffec
   22ca0:	str	r2, [fp, #-24]	; 0xffffffe8
   22ca4:	str	r3, [fp, #-28]	; 0xffffffe4
   22ca8:	mov	r3, #0
   22cac:	str	r3, [fp, #-12]
   22cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   22cb4:	cmp	r3, #0
   22cb8:	beq	22cc8 <flatcc_json_printer_struct_field@@Base+0x180>
   22cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22cc0:	cmp	r3, #7
   22cc4:	bhi	22cf4 <flatcc_json_printer_struct_field@@Base+0x1ac>
   22cc8:	mov	r1, #1
   22ccc:	ldr	r0, [fp, #-16]
   22cd0:	bl	156b0 <main@@Base+0x794>
   22cd4:	ldr	r3, [pc, #192]	; 22d9c <flatcc_json_printer_struct_field@@Base+0x254>
   22cd8:	add	r3, pc, r3
   22cdc:	movw	r2, #1019	; 0x3fb
   22ce0:	ldr	r1, [pc, #184]	; 22da0 <flatcc_json_printer_struct_field@@Base+0x258>
   22ce4:	add	r1, pc, r1
   22ce8:	ldr	r0, [pc, #180]	; 22da4 <flatcc_json_printer_struct_field@@Base+0x25c>
   22cec:	add	r0, pc, r0
   22cf0:	bl	12504 <__assert_fail@plt>
   22cf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22cf8:	cmp	r3, #0
   22cfc:	beq	22d84 <flatcc_json_printer_struct_field@@Base+0x23c>
   22d00:	sub	r3, fp, #12
   22d04:	mov	r2, #4
   22d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22d0c:	mov	r0, r3
   22d10:	bl	124c8 <strncpy@plt>
   22d14:	ldr	r3, [fp, #-12]
   22d18:	mov	r0, r3
   22d1c:	bl	15650 <main@@Base+0x734>
   22d20:	mov	r3, r0
   22d24:	str	r3, [fp, #-12]
   22d28:	ldr	r3, [fp, #-20]	; 0xffffffec
   22d2c:	add	r3, r3, #4
   22d30:	mov	r0, r3
   22d34:	bl	15674 <main@@Base+0x758>
   22d38:	str	r0, [fp, #-8]
   22d3c:	ldr	r3, [fp, #-12]
   22d40:	cmp	r3, #0
   22d44:	beq	22d84 <flatcc_json_printer_struct_field@@Base+0x23c>
   22d48:	ldr	r3, [fp, #-12]
   22d4c:	ldr	r2, [fp, #-8]
   22d50:	cmp	r2, r3
   22d54:	beq	22d84 <flatcc_json_printer_struct_field@@Base+0x23c>
   22d58:	mov	r1, #1
   22d5c:	ldr	r0, [fp, #-16]
   22d60:	bl	156b0 <main@@Base+0x794>
   22d64:	ldr	r3, [pc, #60]	; 22da8 <flatcc_json_printer_struct_field@@Base+0x260>
   22d68:	add	r3, pc, r3
   22d6c:	movw	r2, #1028	; 0x404
   22d70:	ldr	r1, [pc, #52]	; 22dac <flatcc_json_printer_struct_field@@Base+0x264>
   22d74:	add	r1, pc, r1
   22d78:	ldr	r0, [pc, #48]	; 22db0 <flatcc_json_printer_struct_field@@Base+0x268>
   22d7c:	add	r0, pc, r0
   22d80:	bl	12504 <__assert_fail@plt>
   22d84:	mov	r3, #1
   22d88:	mov	r0, r3
   22d8c:	sub	sp, fp, #4
   22d90:	ldr	fp, [sp]
   22d94:	add	sp, sp, #4
   22d98:	pop	{pc}		; (ldr pc, [sp], #4)
   22d9c:	andeq	r2, r0, r4, asr #16
   22da0:	andeq	r2, r0, ip, ror #4
   22da4:	strdeq	r2, [r0], -r4
   22da8:			; <UNDEFINED> instruction: 0x000027b4
   22dac:	ldrdeq	r2, [r0], -ip
   22db0:	andeq	r2, r0, r4, lsl #5

00022db4 <flatcc_json_printer_struct_as_root@@Base>:
   22db4:	str	fp, [sp, #-8]!
   22db8:	str	lr, [sp, #4]
   22dbc:	add	fp, sp, #4
   22dc0:	sub	sp, sp, #16
   22dc4:	str	r0, [fp, #-8]
   22dc8:	str	r1, [fp, #-12]
   22dcc:	str	r2, [fp, #-16]
   22dd0:	str	r3, [fp, #-20]	; 0xffffffec
   22dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   22dd8:	ldr	r2, [fp, #-16]
   22ddc:	ldr	r1, [fp, #-12]
   22de0:	ldr	r0, [fp, #-8]
   22de4:	bl	22c88 <flatcc_json_printer_struct_field@@Base+0x140>
   22de8:	mov	r3, r0
   22dec:	cmp	r3, #0
   22df0:	bne	22dfc <flatcc_json_printer_struct_as_root@@Base+0x48>
   22df4:	mvn	r3, #0
   22df8:	b	22f38 <flatcc_json_printer_struct_as_root@@Base+0x184>
   22dfc:	ldr	r3, [fp, #-8]
   22e00:	ldr	r3, [r3, #32]
   22e04:	add	r2, r3, #1
   22e08:	ldr	r3, [fp, #-8]
   22e0c:	str	r2, [r3, #32]
   22e10:	ldr	r3, [fp, #-8]
   22e14:	ldr	r3, [r3, #20]
   22e18:	add	r1, r3, #1
   22e1c:	ldr	r2, [fp, #-8]
   22e20:	str	r1, [r2, #20]
   22e24:	mov	r2, #123	; 0x7b
   22e28:	strb	r2, [r3]
   22e2c:	ldr	r0, [fp, #-12]
   22e30:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   22e34:	mov	r2, r0
   22e38:	ldr	r3, [fp, #4]
   22e3c:	mov	r1, r2
   22e40:	ldr	r0, [fp, #-8]
   22e44:	blx	r3
   22e48:	ldr	r3, [fp, #-8]
   22e4c:	ldrb	r3, [r3, #25]
   22e50:	cmp	r3, #0
   22e54:	beq	22e90 <flatcc_json_printer_struct_as_root@@Base+0xdc>
   22e58:	ldr	r3, [fp, #-8]
   22e5c:	ldr	r3, [r3, #20]
   22e60:	add	r1, r3, #1
   22e64:	ldr	r2, [fp, #-8]
   22e68:	str	r1, [r2, #20]
   22e6c:	mov	r2, #10
   22e70:	strb	r2, [r3]
   22e74:	ldr	r3, [fp, #-8]
   22e78:	ldr	r3, [r3, #32]
   22e7c:	sub	r2, r3, #1
   22e80:	ldr	r3, [fp, #-8]
   22e84:	str	r2, [r3, #32]
   22e88:	ldr	r0, [fp, #-8]
   22e8c:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   22e90:	ldr	r3, [fp, #-8]
   22e94:	ldr	r3, [r3, #20]
   22e98:	add	r1, r3, #1
   22e9c:	ldr	r2, [fp, #-8]
   22ea0:	str	r1, [r2, #20]
   22ea4:	mov	r2, #125	; 0x7d
   22ea8:	strb	r2, [r3]
   22eac:	ldr	r3, [fp, #-8]
   22eb0:	ldrb	r3, [r3, #25]
   22eb4:	cmp	r3, #0
   22eb8:	beq	22ee8 <flatcc_json_printer_struct_as_root@@Base+0x134>
   22ebc:	ldr	r3, [fp, #-8]
   22ec0:	ldr	r3, [r3, #32]
   22ec4:	cmp	r3, #0
   22ec8:	bne	22ee8 <flatcc_json_printer_struct_as_root@@Base+0x134>
   22ecc:	ldr	r3, [fp, #-8]
   22ed0:	ldr	r3, [r3, #20]
   22ed4:	add	r1, r3, #1
   22ed8:	ldr	r2, [fp, #-8]
   22edc:	str	r1, [r2, #20]
   22ee0:	mov	r2, #10
   22ee4:	strb	r2, [r3]
   22ee8:	ldr	r3, [fp, #-8]
   22eec:	ldr	r3, [r3, #44]	; 0x2c
   22ef0:	mov	r1, #1
   22ef4:	ldr	r0, [fp, #-8]
   22ef8:	blx	r3
   22efc:	ldr	r0, [fp, #-8]
   22f00:	bl	156f0 <main@@Base+0x7d4>
   22f04:	mov	r3, r0
   22f08:	cmp	r3, #0
   22f0c:	bne	22f34 <flatcc_json_printer_struct_as_root@@Base+0x180>
   22f10:	ldr	r3, [fp, #-8]
   22f14:	ldr	r3, [r3, #12]
   22f18:	ldr	r2, [fp, #-8]
   22f1c:	ldr	r1, [r2, #20]
   22f20:	ldr	r2, [fp, #-8]
   22f24:	ldr	r2, [r2]
   22f28:	sub	r2, r1, r2
   22f2c:	add	r3, r3, r2
   22f30:	b	22f38 <flatcc_json_printer_struct_as_root@@Base+0x184>
   22f34:	mvn	r3, #0
   22f38:	mov	r0, r3
   22f3c:	sub	sp, fp, #4
   22f40:	ldr	fp, [sp]
   22f44:	add	sp, sp, #4
   22f48:	pop	{pc}		; (ldr pc, [sp], #4)

00022f4c <flatcc_json_printer_table_as_root@@Base>:
   22f4c:	str	fp, [sp, #-8]!
   22f50:	str	lr, [sp, #4]
   22f54:	add	fp, sp, #4
   22f58:	sub	sp, sp, #16
   22f5c:	str	r0, [fp, #-8]
   22f60:	str	r1, [fp, #-12]
   22f64:	str	r2, [fp, #-16]
   22f68:	str	r3, [fp, #-20]	; 0xffffffec
   22f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22f70:	ldr	r2, [fp, #-16]
   22f74:	ldr	r1, [fp, #-12]
   22f78:	ldr	r0, [fp, #-8]
   22f7c:	bl	22c88 <flatcc_json_printer_struct_field@@Base+0x140>
   22f80:	mov	r3, r0
   22f84:	cmp	r3, #0
   22f88:	bne	22f94 <flatcc_json_printer_table_as_root@@Base+0x48>
   22f8c:	mvn	r3, #0
   22f90:	b	2303c <flatcc_json_printer_table_as_root@@Base+0xf0>
   22f94:	ldr	r0, [fp, #-12]
   22f98:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   22f9c:	mov	r1, r0
   22fa0:	ldr	r3, [fp, #4]
   22fa4:	mov	r2, #100	; 0x64
   22fa8:	ldr	r0, [fp, #-8]
   22fac:	bl	1b4b4 <flatcc_json_printer_enum_flag@@Base+0xd4>
   22fb0:	ldr	r3, [fp, #-8]
   22fb4:	ldrb	r3, [r3, #25]
   22fb8:	cmp	r3, #0
   22fbc:	beq	22fec <flatcc_json_printer_table_as_root@@Base+0xa0>
   22fc0:	ldr	r3, [fp, #-8]
   22fc4:	ldr	r3, [r3, #32]
   22fc8:	cmp	r3, #0
   22fcc:	bne	22fec <flatcc_json_printer_table_as_root@@Base+0xa0>
   22fd0:	ldr	r3, [fp, #-8]
   22fd4:	ldr	r3, [r3, #20]
   22fd8:	add	r1, r3, #1
   22fdc:	ldr	r2, [fp, #-8]
   22fe0:	str	r1, [r2, #20]
   22fe4:	mov	r2, #10
   22fe8:	strb	r2, [r3]
   22fec:	ldr	r3, [fp, #-8]
   22ff0:	ldr	r3, [r3, #44]	; 0x2c
   22ff4:	mov	r1, #1
   22ff8:	ldr	r0, [fp, #-8]
   22ffc:	blx	r3
   23000:	ldr	r0, [fp, #-8]
   23004:	bl	156f0 <main@@Base+0x7d4>
   23008:	mov	r3, r0
   2300c:	cmp	r3, #0
   23010:	bne	23038 <flatcc_json_printer_table_as_root@@Base+0xec>
   23014:	ldr	r3, [fp, #-8]
   23018:	ldr	r3, [r3, #12]
   2301c:	ldr	r2, [fp, #-8]
   23020:	ldr	r1, [r2, #20]
   23024:	ldr	r2, [fp, #-8]
   23028:	ldr	r2, [r2]
   2302c:	sub	r2, r1, r2
   23030:	add	r3, r3, r2
   23034:	b	2303c <flatcc_json_printer_table_as_root@@Base+0xf0>
   23038:	mvn	r3, #0
   2303c:	mov	r0, r3
   23040:	sub	sp, fp, #4
   23044:	ldr	fp, [sp]
   23048:	add	sp, sp, #4
   2304c:	pop	{pc}		; (ldr pc, [sp], #4)

00023050 <flatcc_json_printer_struct_as_nested_root@@Base>:
   23050:	str	fp, [sp, #-8]!
   23054:	str	lr, [sp, #4]
   23058:	add	fp, sp, #4
   2305c:	sub	sp, sp, #24
   23060:	str	r0, [fp, #-16]
   23064:	str	r1, [fp, #-20]	; 0xffffffec
   23068:	str	r2, [fp, #-24]	; 0xffffffe8
   2306c:	str	r3, [fp, #-28]	; 0xffffffe4
   23070:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23074:	ldr	r0, [fp, #-20]	; 0xffffffec
   23078:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   2307c:	str	r0, [fp, #-8]
   23080:	ldr	r3, [fp, #-8]
   23084:	cmp	r3, #0
   23088:	beq	231d0 <flatcc_json_printer_struct_as_nested_root@@Base+0x180>
   2308c:	ldr	r0, [fp, #-8]
   23090:	bl	154c8 <main@@Base+0x5ac>
   23094:	mov	r2, r0
   23098:	ldr	r3, [fp, #-8]
   2309c:	add	r3, r2, r3
   230a0:	str	r3, [fp, #-8]
   230a4:	ldr	r0, [fp, #-8]
   230a8:	bl	154c8 <main@@Base+0x5ac>
   230ac:	str	r0, [fp, #-12]
   230b0:	ldr	r3, [fp, #8]
   230b4:	ldr	r2, [fp, #-12]
   230b8:	ldr	r1, [fp, #-8]
   230bc:	ldr	r0, [fp, #-16]
   230c0:	bl	22c88 <flatcc_json_printer_struct_field@@Base+0x140>
   230c4:	mov	r3, r0
   230c8:	cmp	r3, #0
   230cc:	beq	231d8 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   230d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   230d4:	ldr	r3, [r3, #16]
   230d8:	add	r1, r3, #1
   230dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   230e0:	str	r1, [r2, #16]
   230e4:	cmp	r3, #0
   230e8:	beq	23108 <flatcc_json_printer_struct_as_nested_root@@Base+0xb8>
   230ec:	ldr	r3, [fp, #-16]
   230f0:	ldr	r3, [r3, #20]
   230f4:	add	r1, r3, #1
   230f8:	ldr	r2, [fp, #-16]
   230fc:	str	r1, [r2, #20]
   23100:	mov	r2, #44	; 0x2c
   23104:	strb	r2, [r3]
   23108:	ldr	r3, [fp, #4]
   2310c:	mov	r2, r3
   23110:	ldr	r1, [fp, #-28]	; 0xffffffe4
   23114:	ldr	r0, [fp, #-16]
   23118:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   2311c:	ldr	r3, [fp, #-16]
   23120:	ldr	r3, [r3, #32]
   23124:	add	r2, r3, #1
   23128:	ldr	r3, [fp, #-16]
   2312c:	str	r2, [r3, #32]
   23130:	ldr	r3, [fp, #-16]
   23134:	ldr	r3, [r3, #20]
   23138:	add	r1, r3, #1
   2313c:	ldr	r2, [fp, #-16]
   23140:	str	r1, [r2, #20]
   23144:	mov	r2, #123	; 0x7b
   23148:	strb	r2, [r3]
   2314c:	ldr	r0, [fp, #-8]
   23150:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   23154:	mov	r2, r0
   23158:	ldr	r3, [fp, #12]
   2315c:	mov	r1, r2
   23160:	ldr	r0, [fp, #-16]
   23164:	blx	r3
   23168:	ldr	r3, [fp, #-16]
   2316c:	ldrb	r3, [r3, #25]
   23170:	cmp	r3, #0
   23174:	beq	231b0 <flatcc_json_printer_struct_as_nested_root@@Base+0x160>
   23178:	ldr	r3, [fp, #-16]
   2317c:	ldr	r3, [r3, #20]
   23180:	add	r1, r3, #1
   23184:	ldr	r2, [fp, #-16]
   23188:	str	r1, [r2, #20]
   2318c:	mov	r2, #10
   23190:	strb	r2, [r3]
   23194:	ldr	r3, [fp, #-16]
   23198:	ldr	r3, [r3, #32]
   2319c:	sub	r2, r3, #1
   231a0:	ldr	r3, [fp, #-16]
   231a4:	str	r2, [r3, #32]
   231a8:	ldr	r0, [fp, #-16]
   231ac:	bl	1ab5c <flatcc_json_printer_fmt_bool@@Base+0x910>
   231b0:	ldr	r3, [fp, #-16]
   231b4:	ldr	r3, [r3, #20]
   231b8:	add	r1, r3, #1
   231bc:	ldr	r2, [fp, #-16]
   231c0:	str	r1, [r2, #20]
   231c4:	mov	r2, #125	; 0x7d
   231c8:	strb	r2, [r3]
   231cc:	b	231dc <flatcc_json_printer_struct_as_nested_root@@Base+0x18c>
   231d0:	nop	{0}
   231d4:	b	231dc <flatcc_json_printer_struct_as_nested_root@@Base+0x18c>
   231d8:	nop	{0}
   231dc:	sub	sp, fp, #4
   231e0:	ldr	fp, [sp]
   231e4:	add	sp, sp, #4
   231e8:	pop	{pc}		; (ldr pc, [sp], #4)

000231ec <flatcc_json_printer_table_as_nested_root@@Base>:
   231ec:	str	fp, [sp, #-8]!
   231f0:	str	lr, [sp, #4]
   231f4:	add	fp, sp, #4
   231f8:	sub	sp, sp, #24
   231fc:	str	r0, [fp, #-16]
   23200:	str	r1, [fp, #-20]	; 0xffffffec
   23204:	str	r2, [fp, #-24]	; 0xffffffe8
   23208:	str	r3, [fp, #-28]	; 0xffffffe4
   2320c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23210:	ldr	r0, [fp, #-20]	; 0xffffffec
   23214:	bl	1a130 <flatcc_json_printer_error_string@@Base+0x10c>
   23218:	str	r0, [fp, #-8]
   2321c:	ldr	r3, [fp, #-8]
   23220:	cmp	r3, #0
   23224:	beq	232e8 <flatcc_json_printer_table_as_nested_root@@Base+0xfc>
   23228:	ldr	r0, [fp, #-8]
   2322c:	bl	154c8 <main@@Base+0x5ac>
   23230:	mov	r2, r0
   23234:	ldr	r3, [fp, #-8]
   23238:	add	r3, r2, r3
   2323c:	str	r3, [fp, #-8]
   23240:	ldr	r0, [fp, #-8]
   23244:	bl	154c8 <main@@Base+0x5ac>
   23248:	str	r0, [fp, #-12]
   2324c:	ldr	r3, [fp, #-8]
   23250:	add	r3, r3, #4
   23254:	str	r3, [fp, #-8]
   23258:	ldr	r3, [fp, #8]
   2325c:	ldr	r2, [fp, #-12]
   23260:	ldr	r1, [fp, #-8]
   23264:	ldr	r0, [fp, #-16]
   23268:	bl	22c88 <flatcc_json_printer_struct_field@@Base+0x140>
   2326c:	mov	r3, r0
   23270:	cmp	r3, #0
   23274:	beq	232f0 <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   23278:	ldr	r3, [fp, #-20]	; 0xffffffec
   2327c:	ldr	r3, [r3, #16]
   23280:	add	r1, r3, #1
   23284:	ldr	r2, [fp, #-20]	; 0xffffffec
   23288:	str	r1, [r2, #16]
   2328c:	cmp	r3, #0
   23290:	beq	232b0 <flatcc_json_printer_table_as_nested_root@@Base+0xc4>
   23294:	ldr	r3, [fp, #-16]
   23298:	ldr	r3, [r3, #20]
   2329c:	add	r1, r3, #1
   232a0:	ldr	r2, [fp, #-16]
   232a4:	str	r1, [r2, #20]
   232a8:	mov	r2, #44	; 0x2c
   232ac:	strb	r2, [r3]
   232b0:	ldr	r3, [fp, #4]
   232b4:	mov	r2, r3
   232b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   232bc:	ldr	r0, [fp, #-16]
   232c0:	bl	1aeb4 <flatcc_json_printer_get_level@@Base+0x134>
   232c4:	ldr	r0, [fp, #-8]
   232c8:	bl	1a0b0 <flatcc_json_printer_error_string@@Base+0x8c>
   232cc:	mov	r1, r0
   232d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   232d4:	ldr	r2, [r3, #12]
   232d8:	ldr	r3, [fp, #12]
   232dc:	ldr	r0, [fp, #-16]
   232e0:	bl	1b4b4 <flatcc_json_printer_enum_flag@@Base+0xd4>
   232e4:	b	232f4 <flatcc_json_printer_table_as_nested_root@@Base+0x108>
   232e8:	nop	{0}
   232ec:	b	232f4 <flatcc_json_printer_table_as_nested_root@@Base+0x108>
   232f0:	nop	{0}
   232f4:	sub	sp, fp, #4
   232f8:	ldr	fp, [sp]
   232fc:	add	sp, sp, #4
   23300:	pop	{pc}		; (ldr pc, [sp], #4)
   23304:	str	fp, [sp, #-8]!
   23308:	str	lr, [sp, #4]
   2330c:	add	fp, sp, #4
   23310:	sub	sp, sp, #16
   23314:	str	r0, [fp, #-16]
   23318:	str	r1, [fp, #-20]	; 0xffffffec
   2331c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23320:	cmp	r3, #0
   23324:	bne	233d8 <flatcc_json_printer_table_as_nested_root@@Base+0x1ec>
   23328:	ldr	r3, [fp, #-16]
   2332c:	ldr	r2, [r3, #20]
   23330:	ldr	r3, [fp, #-16]
   23334:	ldr	r3, [r3, #16]
   23338:	cmp	r2, r3
   2333c:	bcc	233d8 <flatcc_json_printer_table_as_nested_root@@Base+0x1ec>
   23340:	ldr	r3, [fp, #-16]
   23344:	ldr	r2, [r3, #20]
   23348:	ldr	r3, [fp, #-16]
   2334c:	ldr	r3, [r3, #16]
   23350:	sub	r3, r2, r3
   23354:	str	r3, [fp, #-8]
   23358:	ldr	r3, [fp, #-16]
   2335c:	ldr	r0, [r3]
   23360:	ldr	r3, [fp, #-16]
   23364:	ldr	r1, [r3, #8]
   23368:	ldr	r3, [fp, #-16]
   2336c:	ldr	r3, [r3, #40]	; 0x28
   23370:	mov	r2, #1
   23374:	bl	1245c <fwrite@plt>
   23378:	ldr	r3, [fp, #-16]
   2337c:	ldr	r0, [r3]
   23380:	ldr	r3, [fp, #-16]
   23384:	ldr	r2, [r3]
   23388:	ldr	r3, [fp, #-16]
   2338c:	ldr	r3, [r3, #8]
   23390:	add	r3, r2, r3
   23394:	ldr	r2, [fp, #-8]
   23398:	mov	r1, r3
   2339c:	bl	12420 <memcpy@plt>
   233a0:	ldr	r3, [fp, #-16]
   233a4:	ldr	r2, [r3]
   233a8:	ldr	r3, [fp, #-8]
   233ac:	add	r2, r2, r3
   233b0:	ldr	r3, [fp, #-16]
   233b4:	str	r2, [r3, #20]
   233b8:	ldr	r3, [fp, #-16]
   233bc:	ldr	r2, [r3, #12]
   233c0:	ldr	r3, [fp, #-16]
   233c4:	ldr	r3, [r3, #8]
   233c8:	add	r2, r2, r3
   233cc:	ldr	r3, [fp, #-16]
   233d0:	str	r2, [r3, #12]
   233d4:	b	23434 <flatcc_json_printer_table_as_nested_root@@Base+0x248>
   233d8:	ldr	r3, [fp, #-16]
   233dc:	ldr	r2, [r3, #20]
   233e0:	ldr	r3, [fp, #-16]
   233e4:	ldr	r3, [r3]
   233e8:	sub	r3, r2, r3
   233ec:	str	r3, [fp, #-12]
   233f0:	ldr	r3, [fp, #-16]
   233f4:	ldr	r0, [r3]
   233f8:	ldr	r3, [fp, #-16]
   233fc:	ldr	r3, [r3, #40]	; 0x28
   23400:	mov	r2, #1
   23404:	ldr	r1, [fp, #-12]
   23408:	bl	1245c <fwrite@plt>
   2340c:	ldr	r3, [fp, #-16]
   23410:	ldr	r2, [r3]
   23414:	ldr	r3, [fp, #-16]
   23418:	str	r2, [r3, #20]
   2341c:	ldr	r3, [fp, #-16]
   23420:	ldr	r2, [r3, #12]
   23424:	ldr	r3, [fp, #-12]
   23428:	add	r2, r2, r3
   2342c:	ldr	r3, [fp, #-16]
   23430:	str	r2, [r3, #12]
   23434:	ldr	r3, [fp, #-16]
   23438:	ldr	r3, [r3, #20]
   2343c:	mov	r2, #0
   23440:	strb	r2, [r3]
   23444:	nop	{0}
   23448:	sub	sp, fp, #4
   2344c:	ldr	fp, [sp]
   23450:	add	sp, sp, #4
   23454:	pop	{pc}		; (ldr pc, [sp], #4)

00023458 <flatcc_json_printer_init@@Base>:
   23458:	str	r4, [sp, #-12]!
   2345c:	str	fp, [sp, #4]
   23460:	str	lr, [sp, #8]
   23464:	add	fp, sp, #8
   23468:	sub	sp, sp, #12
   2346c:	str	r0, [fp, #-16]
   23470:	str	r1, [fp, #-20]	; 0xffffffec
   23474:	ldr	r4, [pc, #288]	; 2359c <flatcc_json_printer_init@@Base+0x144>
   23478:	add	r4, pc, r4
   2347c:	mov	r2, #48	; 0x30
   23480:	mov	r1, #0
   23484:	ldr	r0, [fp, #-16]
   23488:	bl	124bc <memset@plt>
   2348c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23490:	cmp	r3, #0
   23494:	beq	234a0 <flatcc_json_printer_init@@Base+0x48>
   23498:	ldr	r3, [fp, #-20]	; 0xffffffec
   2349c:	b	234ac <flatcc_json_printer_init@@Base+0x54>
   234a0:	ldr	r3, [pc, #248]	; 235a0 <flatcc_json_printer_init@@Base+0x148>
   234a4:	ldr	r3, [r4, r3]
   234a8:	ldr	r3, [r3]
   234ac:	ldr	r2, [fp, #-16]
   234b0:	str	r3, [r2, #40]	; 0x28
   234b4:	ldr	r3, [fp, #-16]
   234b8:	ldr	r2, [pc, #228]	; 235a4 <flatcc_json_printer_init@@Base+0x14c>
   234bc:	add	r2, pc, r2
   234c0:	str	r2, [r3, #44]	; 0x2c
   234c4:	movw	r0, #16448	; 0x4040
   234c8:	bl	12480 <malloc@plt>
   234cc:	mov	r3, r0
   234d0:	mov	r2, r3
   234d4:	ldr	r3, [fp, #-16]
   234d8:	str	r2, [r3]
   234dc:	ldr	r3, [fp, #-16]
   234e0:	ldr	r3, [r3]
   234e4:	cmp	r3, #0
   234e8:	bne	234f4 <flatcc_json_printer_init@@Base+0x9c>
   234ec:	mvn	r3, #0
   234f0:	b	23584 <flatcc_json_printer_init@@Base+0x12c>
   234f4:	ldr	r3, [fp, #-16]
   234f8:	mov	r2, #1
   234fc:	strb	r2, [r3, #24]
   23500:	ldr	r3, [fp, #-16]
   23504:	movw	r2, #16448	; 0x4040
   23508:	str	r2, [r3, #4]
   2350c:	ldr	r3, [fp, #-16]
   23510:	mov	r2, #16384	; 0x4000
   23514:	str	r2, [r3, #8]
   23518:	ldr	r3, [fp, #-16]
   2351c:	ldr	r2, [r3]
   23520:	ldr	r3, [fp, #-16]
   23524:	str	r2, [r3, #20]
   23528:	ldr	r3, [fp, #-16]
   2352c:	ldr	r2, [r3]
   23530:	ldr	r3, [fp, #-16]
   23534:	ldr	r3, [r3, #8]
   23538:	add	r2, r2, r3
   2353c:	ldr	r3, [fp, #-16]
   23540:	str	r2, [r3, #16]
   23544:	ldr	r3, [fp, #-16]
   23548:	ldr	r3, [r3, #8]
   2354c:	add	r2, r3, #64	; 0x40
   23550:	ldr	r3, [fp, #-16]
   23554:	ldr	r3, [r3, #4]
   23558:	cmp	r2, r3
   2355c:	bls	23580 <flatcc_json_printer_init@@Base+0x128>
   23560:	ldr	r3, [pc, #64]	; 235a8 <flatcc_json_printer_init@@Base+0x150>
   23564:	add	r3, pc, r3
   23568:	movw	r2, #1147	; 0x47b
   2356c:	ldr	r1, [pc, #56]	; 235ac <flatcc_json_printer_init@@Base+0x154>
   23570:	add	r1, pc, r1
   23574:	ldr	r0, [pc, #52]	; 235b0 <flatcc_json_printer_init@@Base+0x158>
   23578:	add	r0, pc, r0
   2357c:	bl	12504 <__assert_fail@plt>
   23580:	mov	r3, #0
   23584:	mov	r0, r3
   23588:	sub	sp, fp, #8
   2358c:	ldr	r4, [sp]
   23590:	ldr	fp, [sp, #4]
   23594:	add	sp, sp, #8
   23598:	pop	{pc}		; (ldr pc, [sp], #4)
   2359c:	andeq	r2, r1, r0, lsl #23
   235a0:	andeq	r0, r0, r0, lsl #1
   235a4:			; <UNDEFINED> instruction: 0xfffffe40
   235a8:	andeq	r1, r0, r8, asr #31
   235ac:	andeq	r1, r0, r0, ror #19
   235b0:	andeq	r1, r0, r4, lsr #21
   235b4:	str	fp, [sp, #-8]!
   235b8:	str	lr, [sp, #4]
   235bc:	add	fp, sp, #4
   235c0:	sub	sp, sp, #8
   235c4:	str	r0, [fp, #-8]
   235c8:	str	r1, [fp, #-12]
   235cc:	ldr	r3, [fp, #-8]
   235d0:	ldr	r2, [r3, #20]
   235d4:	ldr	r3, [fp, #-8]
   235d8:	ldr	r3, [r3, #16]
   235dc:	cmp	r2, r3
   235e0:	bcc	23628 <flatcc_json_printer_init@@Base+0x1d0>
   235e4:	mov	r1, #3
   235e8:	ldr	r0, [fp, #-8]
   235ec:	bl	156b0 <main@@Base+0x794>
   235f0:	ldr	r3, [fp, #-8]
   235f4:	ldr	r3, [r3, #12]
   235f8:	ldr	r2, [fp, #-8]
   235fc:	ldr	r1, [r2, #20]
   23600:	ldr	r2, [fp, #-8]
   23604:	ldr	r2, [r2]
   23608:	sub	r2, r1, r2
   2360c:	add	r2, r3, r2
   23610:	ldr	r3, [fp, #-8]
   23614:	str	r2, [r3, #12]
   23618:	ldr	r3, [fp, #-8]
   2361c:	ldr	r2, [r3]
   23620:	ldr	r3, [fp, #-8]
   23624:	str	r2, [r3, #20]
   23628:	ldr	r3, [fp, #-8]
   2362c:	ldr	r3, [r3, #20]
   23630:	mov	r2, #0
   23634:	strb	r2, [r3]
   23638:	nop	{0}
   2363c:	sub	sp, fp, #4
   23640:	ldr	fp, [sp]
   23644:	add	sp, sp, #4
   23648:	pop	{pc}		; (ldr pc, [sp], #4)

0002364c <flatcc_json_printer_init_buffer@@Base>:
   2364c:	str	fp, [sp, #-8]!
   23650:	str	lr, [sp, #4]
   23654:	add	fp, sp, #4
   23658:	sub	sp, sp, #16
   2365c:	str	r0, [fp, #-8]
   23660:	str	r1, [fp, #-12]
   23664:	str	r2, [fp, #-16]
   23668:	ldr	r3, [fp, #-16]
   2366c:	cmp	r3, #63	; 0x3f
   23670:	bhi	23694 <flatcc_json_printer_init_buffer@@Base+0x48>
   23674:	ldr	r3, [pc, #188]	; 23738 <flatcc_json_printer_init_buffer@@Base+0xec>
   23678:	add	r3, pc, r3
   2367c:	movw	r2, #1165	; 0x48d
   23680:	ldr	r1, [pc, #180]	; 2373c <flatcc_json_printer_init_buffer@@Base+0xf0>
   23684:	add	r1, pc, r1
   23688:	ldr	r0, [pc, #176]	; 23740 <flatcc_json_printer_init_buffer@@Base+0xf4>
   2368c:	add	r0, pc, r0
   23690:	bl	12504 <__assert_fail@plt>
   23694:	ldr	r3, [fp, #-16]
   23698:	cmp	r3, #63	; 0x3f
   2369c:	bhi	236a8 <flatcc_json_printer_init_buffer@@Base+0x5c>
   236a0:	mvn	r3, #0
   236a4:	b	23724 <flatcc_json_printer_init_buffer@@Base+0xd8>
   236a8:	mov	r2, #48	; 0x30
   236ac:	mov	r1, #0
   236b0:	ldr	r0, [fp, #-8]
   236b4:	bl	124bc <memset@plt>
   236b8:	ldr	r3, [fp, #-8]
   236bc:	ldr	r2, [fp, #-12]
   236c0:	str	r2, [r3]
   236c4:	ldr	r3, [fp, #-8]
   236c8:	ldr	r2, [fp, #-16]
   236cc:	str	r2, [r3, #4]
   236d0:	ldr	r3, [fp, #-8]
   236d4:	ldr	r3, [r3, #4]
   236d8:	sub	r2, r3, #64	; 0x40
   236dc:	ldr	r3, [fp, #-8]
   236e0:	str	r2, [r3, #8]
   236e4:	ldr	r3, [fp, #-8]
   236e8:	ldr	r2, [r3]
   236ec:	ldr	r3, [fp, #-8]
   236f0:	str	r2, [r3, #20]
   236f4:	ldr	r3, [fp, #-8]
   236f8:	ldr	r2, [r3]
   236fc:	ldr	r3, [fp, #-8]
   23700:	ldr	r3, [r3, #8]
   23704:	add	r2, r2, r3
   23708:	ldr	r3, [fp, #-8]
   2370c:	str	r2, [r3, #16]
   23710:	ldr	r3, [fp, #-8]
   23714:	ldr	r2, [pc, #40]	; 23744 <flatcc_json_printer_init_buffer@@Base+0xf8>
   23718:	add	r2, pc, r2
   2371c:	str	r2, [r3, #44]	; 0x2c
   23720:	mov	r3, #0
   23724:	mov	r0, r3
   23728:	sub	sp, fp, #4
   2372c:	ldr	fp, [sp]
   23730:	add	sp, sp, #4
   23734:	pop	{pc}		; (ldr pc, [sp], #4)
   23738:	ldrdeq	r1, [r0], -r0
   2373c:	andeq	r1, r0, ip, asr #17
   23740:	andeq	r1, r0, ip, asr #19
   23744:			; <UNDEFINED> instruction: 0xfffffe94
   23748:	str	fp, [sp, #-8]!
   2374c:	str	lr, [sp, #4]
   23750:	add	fp, sp, #4
   23754:	sub	sp, sp, #16
   23758:	str	r0, [fp, #-16]
   2375c:	str	r1, [fp, #-20]	; 0xffffffec
   23760:	ldr	r3, [fp, #-16]
   23764:	ldr	r2, [r3, #20]
   23768:	ldr	r3, [fp, #-16]
   2376c:	ldr	r3, [r3]
   23770:	sub	r3, r2, r3
   23774:	str	r3, [fp, #-8]
   23778:	ldr	r3, [fp, #-16]
   2377c:	ldr	r3, [r3, #20]
   23780:	mov	r2, #0
   23784:	strb	r2, [r3]
   23788:	ldr	r3, [fp, #-16]
   2378c:	ldr	r2, [r3, #20]
   23790:	ldr	r3, [fp, #-16]
   23794:	ldr	r3, [r3, #16]
   23798:	cmp	r2, r3
   2379c:	bcc	2387c <flatcc_json_printer_init_buffer@@Base+0x230>
   237a0:	ldr	r3, [fp, #-16]
   237a4:	ldr	r2, [r3]
   237a8:	ldr	r3, [fp, #-16]
   237ac:	ldr	r3, [r3, #4]
   237b0:	lsl	r3, r3, #1
   237b4:	mov	r1, r3
   237b8:	mov	r0, r2
   237bc:	bl	12450 <realloc@plt>
   237c0:	str	r0, [fp, #-12]
   237c4:	ldr	r3, [fp, #-12]
   237c8:	cmp	r3, #0
   237cc:	bne	23808 <flatcc_json_printer_init_buffer@@Base+0x1bc>
   237d0:	mov	r1, #3
   237d4:	ldr	r0, [fp, #-16]
   237d8:	bl	156b0 <main@@Base+0x794>
   237dc:	ldr	r3, [fp, #-16]
   237e0:	ldr	r2, [r3, #12]
   237e4:	ldr	r3, [fp, #-8]
   237e8:	add	r2, r2, r3
   237ec:	ldr	r3, [fp, #-16]
   237f0:	str	r2, [r3, #12]
   237f4:	ldr	r3, [fp, #-16]
   237f8:	ldr	r2, [r3]
   237fc:	ldr	r3, [fp, #-16]
   23800:	str	r2, [r3, #20]
   23804:	b	23868 <flatcc_json_printer_init_buffer@@Base+0x21c>
   23808:	ldr	r3, [fp, #-16]
   2380c:	ldr	r3, [r3, #4]
   23810:	lsl	r2, r3, #1
   23814:	ldr	r3, [fp, #-16]
   23818:	str	r2, [r3, #4]
   2381c:	ldr	r3, [fp, #-16]
   23820:	ldr	r3, [r3, #4]
   23824:	sub	r2, r3, #64	; 0x40
   23828:	ldr	r3, [fp, #-16]
   2382c:	str	r2, [r3, #8]
   23830:	ldr	r3, [fp, #-16]
   23834:	ldr	r2, [fp, #-12]
   23838:	str	r2, [r3]
   2383c:	ldr	r2, [fp, #-12]
   23840:	ldr	r3, [fp, #-8]
   23844:	add	r2, r2, r3
   23848:	ldr	r3, [fp, #-16]
   2384c:	str	r2, [r3, #20]
   23850:	ldr	r3, [fp, #-16]
   23854:	ldr	r3, [r3, #8]
   23858:	ldr	r2, [fp, #-12]
   2385c:	add	r2, r2, r3
   23860:	ldr	r3, [fp, #-16]
   23864:	str	r2, [r3, #16]
   23868:	ldr	r3, [fp, #-16]
   2386c:	ldr	r3, [r3, #20]
   23870:	mov	r2, #0
   23874:	strb	r2, [r3]
   23878:	b	23880 <flatcc_json_printer_init_buffer@@Base+0x234>
   2387c:	nop	{0}
   23880:	sub	sp, fp, #4
   23884:	ldr	fp, [sp]
   23888:	add	sp, sp, #4
   2388c:	pop	{pc}		; (ldr pc, [sp], #4)

00023890 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   23890:	str	fp, [sp, #-8]!
   23894:	str	lr, [sp, #4]
   23898:	add	fp, sp, #4
   2389c:	sub	sp, sp, #8
   238a0:	str	r0, [fp, #-8]
   238a4:	str	r1, [fp, #-12]
   238a8:	ldr	r3, [fp, #-12]
   238ac:	cmp	r3, #0
   238b0:	bne	238bc <flatcc_json_printer_init_dynamic_buffer@@Base+0x2c>
   238b4:	mov	r3, #4096	; 0x1000
   238b8:	str	r3, [fp, #-12]
   238bc:	ldr	r3, [fp, #-12]
   238c0:	cmp	r3, #63	; 0x3f
   238c4:	bhi	238d0 <flatcc_json_printer_init_dynamic_buffer@@Base+0x40>
   238c8:	mov	r3, #64	; 0x40
   238cc:	str	r3, [fp, #-12]
   238d0:	mov	r2, #48	; 0x30
   238d4:	mov	r1, #0
   238d8:	ldr	r0, [fp, #-8]
   238dc:	bl	124bc <memset@plt>
   238e0:	ldr	r0, [fp, #-12]
   238e4:	bl	12480 <malloc@plt>
   238e8:	mov	r3, r0
   238ec:	mov	r2, r3
   238f0:	ldr	r3, [fp, #-8]
   238f4:	str	r2, [r3]
   238f8:	ldr	r3, [fp, #-8]
   238fc:	mov	r2, #1
   23900:	strb	r2, [r3, #24]
   23904:	ldr	r3, [fp, #-8]
   23908:	ldr	r2, [fp, #-12]
   2390c:	str	r2, [r3, #4]
   23910:	ldr	r3, [fp, #-8]
   23914:	ldr	r3, [r3, #4]
   23918:	sub	r2, r3, #64	; 0x40
   2391c:	ldr	r3, [fp, #-8]
   23920:	str	r2, [r3, #8]
   23924:	ldr	r3, [fp, #-8]
   23928:	ldr	r2, [r3]
   2392c:	ldr	r3, [fp, #-8]
   23930:	str	r2, [r3, #20]
   23934:	ldr	r3, [fp, #-8]
   23938:	ldr	r2, [r3]
   2393c:	ldr	r3, [fp, #-8]
   23940:	ldr	r3, [r3, #8]
   23944:	add	r2, r2, r3
   23948:	ldr	r3, [fp, #-8]
   2394c:	str	r2, [r3, #16]
   23950:	ldr	r3, [fp, #-8]
   23954:	ldr	r2, [pc, #64]	; 2399c <flatcc_json_printer_init_dynamic_buffer@@Base+0x10c>
   23958:	add	r2, pc, r2
   2395c:	str	r2, [r3, #44]	; 0x2c
   23960:	ldr	r3, [fp, #-8]
   23964:	ldr	r3, [r3]
   23968:	cmp	r3, #0
   2396c:	bne	23984 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   23970:	mov	r1, #3
   23974:	ldr	r0, [fp, #-8]
   23978:	bl	156b0 <main@@Base+0x794>
   2397c:	mvn	r3, #0
   23980:	b	23988 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf8>
   23984:	mov	r3, #0
   23988:	mov	r0, r3
   2398c:	sub	sp, fp, #4
   23990:	ldr	fp, [sp]
   23994:	add	sp, sp, #4
   23998:	pop	{pc}		; (ldr pc, [sp], #4)
   2399c:			; <UNDEFINED> instruction: 0xfffffde8

000239a0 <flatcc_json_printer_get_buffer@@Base>:
   239a0:	str	fp, [sp, #-8]!
   239a4:	str	lr, [sp, #4]
   239a8:	add	fp, sp, #4
   239ac:	sub	sp, sp, #8
   239b0:	str	r0, [fp, #-8]
   239b4:	str	r1, [fp, #-12]
   239b8:	ldr	r3, [fp, #-8]
   239bc:	ldr	r3, [r3, #44]	; 0x2c
   239c0:	mov	r1, #0
   239c4:	ldr	r0, [fp, #-8]
   239c8:	blx	r3
   239cc:	ldr	r3, [fp, #-12]
   239d0:	cmp	r3, #0
   239d4:	beq	239f8 <flatcc_json_printer_get_buffer@@Base+0x58>
   239d8:	ldr	r3, [fp, #-8]
   239dc:	ldr	r2, [r3, #20]
   239e0:	ldr	r3, [fp, #-8]
   239e4:	ldr	r3, [r3]
   239e8:	sub	r3, r2, r3
   239ec:	mov	r2, r3
   239f0:	ldr	r3, [fp, #-12]
   239f4:	str	r2, [r3]
   239f8:	ldr	r3, [fp, #-8]
   239fc:	ldr	r3, [r3]
   23a00:	mov	r0, r3
   23a04:	sub	sp, fp, #4
   23a08:	ldr	fp, [sp]
   23a0c:	add	sp, sp, #4
   23a10:	pop	{pc}		; (ldr pc, [sp], #4)

00023a14 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   23a14:	str	fp, [sp, #-8]!
   23a18:	str	lr, [sp, #4]
   23a1c:	add	fp, sp, #4
   23a20:	sub	sp, sp, #16
   23a24:	str	r0, [fp, #-16]
   23a28:	str	r1, [fp, #-20]	; 0xffffffec
   23a2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23a30:	ldr	r0, [fp, #-16]
   23a34:	bl	239a0 <flatcc_json_printer_get_buffer@@Base>
   23a38:	str	r0, [fp, #-8]
   23a3c:	mov	r2, #48	; 0x30
   23a40:	mov	r1, #0
   23a44:	ldr	r0, [fp, #-16]
   23a48:	bl	124bc <memset@plt>
   23a4c:	ldr	r3, [fp, #-8]
   23a50:	mov	r0, r3
   23a54:	sub	sp, fp, #4
   23a58:	ldr	fp, [sp]
   23a5c:	add	sp, sp, #4
   23a60:	pop	{pc}		; (ldr pc, [sp], #4)

00023a64 <flatcc_json_printer_clear@@Base>:
   23a64:	str	fp, [sp, #-8]!
   23a68:	str	lr, [sp, #4]
   23a6c:	add	fp, sp, #4
   23a70:	sub	sp, sp, #8
   23a74:	str	r0, [fp, #-8]
   23a78:	ldr	r3, [fp, #-8]
   23a7c:	ldrb	r3, [r3, #24]
   23a80:	cmp	r3, #0
   23a84:	beq	23aa8 <flatcc_json_printer_clear@@Base+0x44>
   23a88:	ldr	r3, [fp, #-8]
   23a8c:	ldr	r3, [r3]
   23a90:	cmp	r3, #0
   23a94:	beq	23aa8 <flatcc_json_printer_clear@@Base+0x44>
   23a98:	ldr	r3, [fp, #-8]
   23a9c:	ldr	r3, [r3]
   23aa0:	mov	r0, r3
   23aa4:	bl	12414 <free@plt>
   23aa8:	mov	r2, #48	; 0x30
   23aac:	mov	r1, #0
   23ab0:	ldr	r0, [fp, #-8]
   23ab4:	bl	124bc <memset@plt>
   23ab8:	nop	{0}
   23abc:	sub	sp, fp, #4
   23ac0:	ldr	fp, [sp]
   23ac4:	add	sp, sp, #4
   23ac8:	pop	{pc}		; (ldr pc, [sp], #4)
   23acc:	cmp	r3, #0
   23ad0:	cmpeq	r2, #0
   23ad4:	bne	23aec <flatcc_json_printer_clear@@Base+0x88>
   23ad8:	cmp	r1, #0
   23adc:	cmpeq	r0, #0
   23ae0:	mvnne	r1, #0
   23ae4:	mvnne	r0, #0
   23ae8:	b	23b08 <flatcc_json_printer_clear@@Base+0xa4>
   23aec:	sub	sp, sp, #8
   23af0:	push	{sp, lr}
   23af4:	bl	23b18 <flatcc_json_printer_clear@@Base+0xb4>
   23af8:	ldr	lr, [sp, #4]
   23afc:	add	sp, sp, #8
   23b00:	pop	{r2, r3}
   23b04:	bx	lr
   23b08:	push	{r1, lr}
   23b0c:	mov	r0, #8
   23b10:	bl	123e4 <raise@plt>
   23b14:	pop	{r1, pc}
   23b18:	cmp	r1, r3
   23b1c:	cmpeq	r0, r2
   23b20:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23b24:	mov	r4, r0
   23b28:	movcc	r0, #0
   23b2c:	mov	r5, r1
   23b30:	ldr	lr, [sp, #36]	; 0x24
   23b34:	movcc	r1, r0
   23b38:	bcc	23c34 <flatcc_json_printer_clear@@Base+0x1d0>
   23b3c:	cmp	r3, #0
   23b40:	clzeq	ip, r2
   23b44:	clzne	ip, r3
   23b48:	addeq	ip, ip, #32
   23b4c:	cmp	r5, #0
   23b50:	clzeq	r1, r4
   23b54:	addeq	r1, r1, #32
   23b58:	clzne	r1, r5
   23b5c:	sub	ip, ip, r1
   23b60:	sub	sl, ip, #32
   23b64:	lsl	r9, r3, ip
   23b68:	rsb	fp, ip, #32
   23b6c:	orr	r9, r9, r2, lsl sl
   23b70:	orr	r9, r9, r2, lsr fp
   23b74:	lsl	r8, r2, ip
   23b78:	cmp	r5, r9
   23b7c:	cmpeq	r4, r8
   23b80:	movcc	r0, #0
   23b84:	movcc	r1, r0
   23b88:	bcc	23ba4 <flatcc_json_printer_clear@@Base+0x140>
   23b8c:	mov	r0, #1
   23b90:	subs	r4, r4, r8
   23b94:	lsl	r1, r0, sl
   23b98:	orr	r1, r1, r0, lsr fp
   23b9c:	lsl	r0, r0, ip
   23ba0:	sbc	r5, r5, r9
   23ba4:	cmp	ip, #0
   23ba8:	beq	23c34 <flatcc_json_printer_clear@@Base+0x1d0>
   23bac:	lsr	r6, r8, #1
   23bb0:	orr	r6, r6, r9, lsl #31
   23bb4:	lsr	r7, r9, #1
   23bb8:	mov	r2, ip
   23bbc:	b	23be0 <flatcc_json_printer_clear@@Base+0x17c>
   23bc0:	subs	r3, r4, r6
   23bc4:	sbc	r8, r5, r7
   23bc8:	adds	r3, r3, r3
   23bcc:	adc	r8, r8, r8
   23bd0:	adds	r4, r3, #1
   23bd4:	adc	r5, r8, #0
   23bd8:	subs	r2, r2, #1
   23bdc:	beq	23bfc <flatcc_json_printer_clear@@Base+0x198>
   23be0:	cmp	r5, r7
   23be4:	cmpeq	r4, r6
   23be8:	bcs	23bc0 <flatcc_json_printer_clear@@Base+0x15c>
   23bec:	adds	r4, r4, r4
   23bf0:	adc	r5, r5, r5
   23bf4:	subs	r2, r2, #1
   23bf8:	bne	23be0 <flatcc_json_printer_clear@@Base+0x17c>
   23bfc:	lsr	r3, r4, ip
   23c00:	orr	r3, r3, r5, lsl fp
   23c04:	lsr	r2, r5, ip
   23c08:	orr	r3, r3, r5, lsr sl
   23c0c:	adds	r0, r0, r4
   23c10:	mov	r4, r3
   23c14:	lsl	r3, r2, ip
   23c18:	orr	r3, r3, r4, lsl sl
   23c1c:	lsl	ip, r4, ip
   23c20:	orr	r3, r3, r4, lsr fp
   23c24:	adc	r1, r1, r5
   23c28:	subs	r0, r0, ip
   23c2c:	mov	r5, r2
   23c30:	sbc	r1, r1, r3
   23c34:	cmp	lr, #0
   23c38:	strdne	r4, [lr]
   23c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00023c40 <__libc_csu_init@@Base>:
   23c40:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   23c44:	mov	r7, r0
   23c48:	ldr	r6, [pc, #72]	; 23c98 <__libc_csu_init@@Base+0x58>
   23c4c:	ldr	r5, [pc, #72]	; 23c9c <__libc_csu_init@@Base+0x5c>
   23c50:	add	r6, pc, r6
   23c54:	add	r5, pc, r5
   23c58:	sub	r6, r6, r5
   23c5c:	mov	r8, r1
   23c60:	mov	r9, r2
   23c64:	bl	123c4 <raise@plt-0x20>
   23c68:	asrs	r6, r6, #2
   23c6c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   23c70:	mov	r4, #0
   23c74:	add	r4, r4, #1
   23c78:	ldr	r3, [r5], #4
   23c7c:	mov	r2, r9
   23c80:	mov	r1, r8
   23c84:	mov	r0, r7
   23c88:	blx	r3
   23c8c:	cmp	r6, r4
   23c90:	bne	23c74 <__libc_csu_init@@Base+0x34>
   23c94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   23c98:			; <UNDEFINED> instruction: 0x000122bc
   23c9c:			; <UNDEFINED> instruction: 0x000122b4

00023ca0 <__libc_csu_fini@@Base>:
   23ca0:	bx	lr

Disassembly of section .fini:

00023ca4 <.fini>:
   23ca4:	push	{r3, lr}
   23ca8:	pop	{r3, pc}
