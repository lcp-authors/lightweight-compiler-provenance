
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010a24 <.init>:
   10a24:	push	{r3, lr}
   10a28:	bl	10d28 <_start@@Base+0x3c>
   10a2c:	pop	{r3, pc}

Disassembly of section .plt:

00010a30 <calloc@plt-0x14>:
   10a30:	push	{lr}		; (str lr, [sp, #-4]!)
   10a34:	ldr	lr, [pc, #4]	; 10a40 <calloc@plt-0x4>
   10a38:	add	lr, pc, lr
   10a3c:	ldr	pc, [lr, #8]!
   10a40:	andeq	r1, r1, r0, asr #11

00010a44 <calloc@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #69632	; 0x11000
   10a4c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a50 <strstr@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #69632	; 0x11000
   10a58:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a5c <strcmp@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #69632	; 0x11000
   10a64:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a68 <printf@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #69632	; 0x11000
   10a70:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a74 <fopen@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #69632	; 0x11000
   10a7c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a80 <free@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #69632	; 0x11000
   10a88:	ldr	pc, [ip, #1432]!	; 0x598

00010a8c <fgets@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #69632	; 0x11000
   10a94:	ldr	pc, [ip, #1424]!	; 0x590

00010a98 <time@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #69632	; 0x11000
   10aa0:	ldr	pc, [ip, #1416]!	; 0x588

00010aa4 <realloc@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #69632	; 0x11000
   10aac:	ldr	pc, [ip, #1408]!	; 0x580

00010ab0 <strcat@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #69632	; 0x11000
   10ab8:	ldr	pc, [ip, #1400]!	; 0x578

00010abc <strcpy@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #69632	; 0x11000
   10ac4:	ldr	pc, [ip, #1392]!	; 0x570

00010ac8 <puts@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #69632	; 0x11000
   10ad0:	ldr	pc, [ip, #1384]!	; 0x568

00010ad4 <malloc@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #69632	; 0x11000
   10adc:	ldr	pc, [ip, #1376]!	; 0x560

00010ae0 <__libc_start_main@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #69632	; 0x11000
   10ae8:	ldr	pc, [ip, #1368]!	; 0x558

00010aec <__gmon_start__@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #69632	; 0x11000
   10af4:	ldr	pc, [ip, #1360]!	; 0x550

00010af8 <strlen@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #69632	; 0x11000
   10b00:	ldr	pc, [ip, #1352]!	; 0x548

00010b04 <srand@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #69632	; 0x11000
   10b0c:	ldr	pc, [ip, #1344]!	; 0x540

00010b10 <rand@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #69632	; 0x11000
   10b18:	ldr	pc, [ip, #1336]!	; 0x538

00010b1c <fclose@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #69632	; 0x11000
   10b24:	ldr	pc, [ip, #1328]!	; 0x530

00010b28 <abort@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #69632	; 0x11000
   10b30:	ldr	pc, [ip, #1320]!	; 0x528

Disassembly of section .text:

00010b34 <main@@Base>:
   10b34:	strd	r4, [sp, #-28]!	; 0xffffffe4
   10b38:	mov	r4, #0
   10b3c:	strd	r6, [sp, #8]
   10b40:	strd	r8, [sp, #16]
   10b44:	mov	r9, r4
   10b48:	str	lr, [sp, #24]
   10b4c:	sub	sp, sp, #108	; 0x6c
   10b50:	bl	11054 <vetor_novo@@Base>
   10b54:	mov	r7, r0
   10b58:	ldr	r1, [pc, #352]	; 10cc0 <main@@Base+0x18c>
   10b5c:	add	r5, sp, #4
   10b60:	ldr	r0, [pc, #348]	; 10cc4 <main@@Base+0x190>
   10b64:	add	r1, pc, r1
   10b68:	add	r0, pc, r0
   10b6c:	bl	10a74 <fopen@plt>
   10b70:	mov	r8, r0
   10b74:	b	10ba8 <main@@Base+0x74>
   10b78:	bl	10af8 <strlen@plt>
   10b7c:	add	r3, sp, #104	; 0x68
   10b80:	mov	r2, r4
   10b84:	add	r3, r3, r0
   10b88:	mov	r1, r5
   10b8c:	mov	r0, r7
   10b90:	add	r4, r4, #1
   10b94:	strb	r9, [r3, #-101]	; 0xffffff9b
   10b98:	bl	111f8 <vetor_insere@@Base>
   10b9c:	cmn	r0, #1
   10ba0:	mov	r6, r0
   10ba4:	beq	10cb0 <main@@Base+0x17c>
   10ba8:	mov	r2, r8
   10bac:	mov	r1, #100	; 0x64
   10bb0:	mov	r0, r5
   10bb4:	bl	10a8c <fgets@plt>
   10bb8:	cmp	r0, #0
   10bbc:	mov	r0, r5
   10bc0:	bne	10b78 <main@@Base+0x44>
   10bc4:	ldr	r0, [pc, #252]	; 10cc8 <main@@Base+0x194>
   10bc8:	mov	r1, r4
   10bcc:	add	r0, pc, r0
   10bd0:	bl	10a68 <printf@plt>
   10bd4:	mov	r0, r7
   10bd8:	bl	10ddc <vetor_imprime@@Base>
   10bdc:	ldr	r1, [pc, #232]	; 10ccc <main@@Base+0x198>
   10be0:	mov	r0, r7
   10be4:	add	r1, pc, r1
   10be8:	bl	11388 <vetor_pesquisa@@Base>
   10bec:	mov	r1, r0
   10bf0:	ldr	r0, [pc, #216]	; 10cd0 <main@@Base+0x19c>
   10bf4:	add	r0, pc, r0
   10bf8:	bl	10a68 <printf@plt>
   10bfc:	mov	r0, r7
   10c00:	bl	11400 <vetor_ordena@@Base>
   10c04:	cmp	r0, #0
   10c08:	beq	10ca4 <main@@Base+0x170>
   10c0c:	ldr	r0, [pc, #192]	; 10cd4 <main@@Base+0x1a0>
   10c10:	add	r0, pc, r0
   10c14:	bl	10ac8 <puts@plt>
   10c18:	ldr	r1, [pc, #184]	; 10cd8 <main@@Base+0x1a4>
   10c1c:	mov	r0, r7
   10c20:	mov	r6, #0
   10c24:	add	r1, pc, r1
   10c28:	bl	10e48 <vetor_num_ocorrencias@@Base>
   10c2c:	mov	r1, r0
   10c30:	ldr	r0, [pc, #164]	; 10cdc <main@@Base+0x1a8>
   10c34:	add	r0, pc, r0
   10c38:	bl	10a68 <printf@plt>
   10c3c:	mov	r0, r7
   10c40:	bl	10ec0 <vetor_remove_repetidas@@Base>
   10c44:	ldr	r0, [pc, #148]	; 10ce0 <main@@Base+0x1ac>
   10c48:	ldr	r1, [r7]
   10c4c:	add	r0, pc, r0
   10c50:	sub	r1, r1, #1
   10c54:	bl	10a68 <printf@plt>
   10c58:	ldr	r1, [pc, #132]	; 10ce4 <main@@Base+0x1b0>
   10c5c:	mov	r0, r7
   10c60:	add	r1, pc, r1
   10c64:	bl	10fa4 <vetor_pesquisa_parcial@@Base>
   10c68:	mov	r4, r0
   10c6c:	bl	10ddc <vetor_imprime@@Base>
   10c70:	mov	r0, r4
   10c74:	bl	11088 <vetor_apaga@@Base>
   10c78:	mov	r0, r7
   10c7c:	bl	11088 <vetor_apaga@@Base>
   10c80:	mov	r0, r8
   10c84:	bl	10b1c <fclose@plt>
   10c88:	mov	r0, r6
   10c8c:	add	sp, sp, #108	; 0x6c
   10c90:	ldrd	r4, [sp]
   10c94:	ldrd	r6, [sp, #8]
   10c98:	ldrd	r8, [sp, #16]
   10c9c:	add	sp, sp, #24
   10ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ca4:	mov	r0, r7
   10ca8:	bl	10ddc <vetor_imprime@@Base>
   10cac:	b	10c18 <main@@Base+0xe4>
   10cb0:	ldr	r0, [pc, #48]	; 10ce8 <main@@Base+0x1b4>
   10cb4:	add	r0, pc, r0
   10cb8:	bl	10ac8 <puts@plt>
   10cbc:	b	10c88 <main@@Base+0x154>
   10cc0:	andeq	r0, r0, r4, lsl #25
   10cc4:	andeq	r0, r0, ip, lsl #23
   10cc8:	andeq	r0, r0, r0, ror fp
   10ccc:	andeq	r0, r0, r4, ror fp
   10cd0:	andeq	r0, r0, r8, lsl #23
   10cd4:			; <UNDEFINED> instruction: 0x00000bb4
   10cd8:	andeq	r0, r0, r8, asr #23
   10cdc:	andeq	r0, r0, ip, asr #23
   10ce0:	andeq	r0, r0, ip, ror #23
   10ce4:	andeq	r0, r0, r8, lsl ip
   10ce8:	andeq	r0, r0, r8, asr sl

00010cec <_start@@Base>:
   10cec:	mov	fp, #0
   10cf0:	mov	lr, #0
   10cf4:	pop	{r1}		; (ldr r1, [sp], #4)
   10cf8:	mov	r2, sp
   10cfc:	push	{r2}		; (str r2, [sp, #-4]!)
   10d00:	push	{r0}		; (str r0, [sp, #-4]!)
   10d04:	ldr	ip, [pc, #16]	; 10d1c <_start@@Base+0x30>
   10d08:	push	{ip}		; (str ip, [sp, #-4]!)
   10d0c:	ldr	r0, [pc, #12]	; 10d20 <_start@@Base+0x34>
   10d10:	ldr	r3, [pc, #12]	; 10d24 <_start@@Base+0x38>
   10d14:	bl	10ae0 <__libc_start_main@plt>
   10d18:	bl	10b28 <abort@plt>
   10d1c:	andeq	r1, r1, r4, ror r6
   10d20:	andeq	r0, r1, r4, lsr fp
   10d24:	andeq	r1, r1, r4, lsl r6
   10d28:	ldr	r3, [pc, #20]	; 10d44 <_start@@Base+0x58>
   10d2c:	ldr	r2, [pc, #20]	; 10d48 <_start@@Base+0x5c>
   10d30:	add	r3, pc, r3
   10d34:	ldr	r2, [r3, r2]
   10d38:	cmp	r2, #0
   10d3c:	bxeq	lr
   10d40:	b	10aec <__gmon_start__@plt>
   10d44:	andeq	r1, r1, r8, asr #5
   10d48:	andeq	r0, r0, ip, asr r0
   10d4c:	ldr	r0, [pc, #24]	; 10d6c <_start@@Base+0x80>
   10d50:	ldr	r3, [pc, #24]	; 10d70 <_start@@Base+0x84>
   10d54:	cmp	r3, r0
   10d58:	bxeq	lr
   10d5c:	ldr	r3, [pc, #16]	; 10d74 <_start@@Base+0x88>
   10d60:	cmp	r3, #0
   10d64:	bxeq	lr
   10d68:	bx	r3
   10d6c:	andeq	r2, r2, r8, rrx
   10d70:	andeq	r2, r2, r8, rrx
   10d74:	andeq	r0, r0, r0
   10d78:	ldr	r0, [pc, #36]	; 10da4 <_start@@Base+0xb8>
   10d7c:	ldr	r1, [pc, #36]	; 10da8 <_start@@Base+0xbc>
   10d80:	sub	r1, r1, r0
   10d84:	asr	r1, r1, #2
   10d88:	add	r1, r1, r1, lsr #31
   10d8c:	asrs	r1, r1, #1
   10d90:	bxeq	lr
   10d94:	ldr	r3, [pc, #16]	; 10dac <_start@@Base+0xc0>
   10d98:	cmp	r3, #0
   10d9c:	bxeq	lr
   10da0:	bx	r3
   10da4:	andeq	r2, r2, r8, rrx
   10da8:	andeq	r2, r2, r8, rrx
   10dac:	andeq	r0, r0, r0
   10db0:	push	{r4, lr}
   10db4:	ldr	r4, [pc, #24]	; 10dd4 <_start@@Base+0xe8>
   10db8:	ldrb	r3, [r4]
   10dbc:	cmp	r3, #0
   10dc0:	popne	{r4, pc}
   10dc4:	bl	10d4c <_start@@Base+0x60>
   10dc8:	mov	r3, #1
   10dcc:	strb	r3, [r4]
   10dd0:	pop	{r4, pc}
   10dd4:	andeq	r2, r2, r8, rrx
   10dd8:	b	10d78 <_start@@Base+0x8c>

00010ddc <vetor_imprime@@Base>:
   10ddc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10de0:	strd	r6, [sp, #8]
   10de4:	ldr	r6, [r0]
   10de8:	str	r8, [sp, #16]
   10dec:	str	lr, [sp, #20]
   10df0:	cmp	r6, #0
   10df4:	ble	10e30 <vetor_imprime@@Base+0x54>
   10df8:	ldr	r7, [pc, #68]	; 10e44 <vetor_imprime@@Base+0x68>
   10dfc:	mov	r5, r0
   10e00:	mov	r4, #0
   10e04:	add	r7, pc, r7
   10e08:	mov	r1, r4
   10e0c:	mov	r0, r5
   10e10:	bl	111c4 <vetor_elemento@@Base>
   10e14:	mov	r2, r0
   10e18:	mov	r1, r4
   10e1c:	mov	r0, r7
   10e20:	add	r4, r4, #1
   10e24:	bl	10a68 <printf@plt>
   10e28:	cmp	r6, r4
   10e2c:	bne	10e08 <vetor_imprime@@Base+0x2c>
   10e30:	ldrd	r4, [sp]
   10e34:	ldrd	r6, [sp, #8]
   10e38:	ldr	r8, [sp, #16]
   10e3c:	add	sp, sp, #20
   10e40:	pop	{pc}		; (ldr pc, [sp], #4)
   10e44:	andeq	r0, r0, r8, ror r8

00010e48 <vetor_num_ocorrencias@@Base>:
   10e48:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10e4c:	strd	r6, [sp, #8]
   10e50:	ldr	r7, [r0]
   10e54:	str	r8, [sp, #16]
   10e58:	str	lr, [sp, #20]
   10e5c:	cmp	r7, #0
   10e60:	ble	10eb8 <vetor_num_ocorrencias@@Base+0x70>
   10e64:	mov	r4, #0
   10e68:	mov	r6, r1
   10e6c:	mov	r5, r0
   10e70:	mov	r8, r4
   10e74:	mov	r1, r4
   10e78:	mov	r0, r5
   10e7c:	bl	111c4 <vetor_elemento@@Base>
   10e80:	mov	r1, r0
   10e84:	mov	r0, r6
   10e88:	bl	10a5c <strcmp@plt>
   10e8c:	cmp	r0, #0
   10e90:	add	r4, r4, #1
   10e94:	addeq	r8, r8, #1
   10e98:	cmp	r7, r4
   10e9c:	bne	10e74 <vetor_num_ocorrencias@@Base+0x2c>
   10ea0:	mov	r0, r8
   10ea4:	ldrd	r4, [sp]
   10ea8:	ldrd	r6, [sp, #8]
   10eac:	ldr	r8, [sp, #16]
   10eb0:	add	sp, sp, #20
   10eb4:	pop	{pc}		; (ldr pc, [sp], #4)
   10eb8:	mov	r8, #0
   10ebc:	b	10ea0 <vetor_num_ocorrencias@@Base+0x58>

00010ec0 <vetor_remove_repetidas@@Base>:
   10ec0:	ldr	r3, [r0]
   10ec4:	cmp	r3, #0
   10ec8:	bxle	lr
   10ecc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10ed0:	mov	r5, r0
   10ed4:	strd	r6, [sp, #8]
   10ed8:	mov	r7, #0
   10edc:	str	r8, [sp, #16]
   10ee0:	ldr	r8, [pc, #184]	; 10fa0 <vetor_remove_repetidas@@Base+0xe0>
   10ee4:	str	lr, [sp, #20]
   10ee8:	sub	sp, sp, #104	; 0x68
   10eec:	add	r6, sp, #4
   10ef0:	add	r8, pc, r8
   10ef4:	mov	r1, r7
   10ef8:	mov	r0, r5
   10efc:	bl	111c4 <vetor_elemento@@Base>
   10f00:	mov	r1, r0
   10f04:	mov	r0, r6
   10f08:	bl	10abc <strcpy@plt>
   10f0c:	ldr	r3, [r5]
   10f10:	add	r7, r7, #1
   10f14:	cmp	r7, r3
   10f18:	bge	10f88 <vetor_remove_repetidas@@Base+0xc8>
   10f1c:	mov	r4, r7
   10f20:	b	10f30 <vetor_remove_repetidas@@Base+0x70>
   10f24:	ldr	r3, [r5]
   10f28:	cmp	r3, r4
   10f2c:	ble	10f80 <vetor_remove_repetidas@@Base+0xc0>
   10f30:	mov	r1, r4
   10f34:	mov	r0, r5
   10f38:	bl	111c4 <vetor_elemento@@Base>
   10f3c:	mov	r1, r0
   10f40:	mov	r0, r6
   10f44:	bl	10a5c <strcmp@plt>
   10f48:	cmp	r0, #0
   10f4c:	addne	r4, r4, #1
   10f50:	bne	10f24 <vetor_remove_repetidas@@Base+0x64>
   10f54:	mov	r1, r4
   10f58:	mov	r0, r5
   10f5c:	bl	112f0 <vetor_remove@@Base>
   10f60:	cmn	r0, #1
   10f64:	bne	10f24 <vetor_remove_repetidas@@Base+0x64>
   10f68:	mov	r0, r8
   10f6c:	add	r4, r4, #1
   10f70:	bl	10ac8 <puts@plt>
   10f74:	ldr	r3, [r5]
   10f78:	cmp	r3, r4
   10f7c:	bgt	10f30 <vetor_remove_repetidas@@Base+0x70>
   10f80:	cmp	r3, r7
   10f84:	bgt	10ef4 <vetor_remove_repetidas@@Base+0x34>
   10f88:	add	sp, sp, #104	; 0x68
   10f8c:	ldrd	r4, [sp]
   10f90:	ldrd	r6, [sp, #8]
   10f94:	ldr	r8, [sp, #16]
   10f98:	add	sp, sp, #20
   10f9c:	pop	{pc}		; (ldr pc, [sp], #4)
   10fa0:	muleq	r0, ip, r7

00010fa4 <vetor_pesquisa_parcial@@Base>:
   10fa4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10fa8:	mov	r5, r0
   10fac:	strd	r6, [sp, #8]
   10fb0:	mov	r6, r1
   10fb4:	str	r8, [sp, #16]
   10fb8:	str	lr, [sp, #20]
   10fbc:	bl	11054 <vetor_novo@@Base>
   10fc0:	ldr	r3, [r5]
   10fc4:	mov	r7, r0
   10fc8:	cmp	r3, #0
   10fcc:	ble	1102c <vetor_pesquisa_parcial@@Base+0x88>
   10fd0:	ldr	r8, [pc, #120]	; 11050 <vetor_pesquisa_parcial@@Base+0xac>
   10fd4:	mov	r4, #0
   10fd8:	add	r8, pc, r8
   10fdc:	mov	r1, r4
   10fe0:	mov	r0, r5
   10fe4:	bl	111c4 <vetor_elemento@@Base>
   10fe8:	mov	r1, r6
   10fec:	bl	10a50 <strstr@plt>
   10ff0:	cmp	r0, #0
   10ff4:	mov	r1, r4
   10ff8:	mov	r0, r5
   10ffc:	add	r4, r4, #1
   11000:	beq	11020 <vetor_pesquisa_parcial@@Base+0x7c>
   11004:	bl	111c4 <vetor_elemento@@Base>
   11008:	mov	r1, r0
   1100c:	mov	r2, #0
   11010:	mov	r0, r7
   11014:	bl	111f8 <vetor_insere@@Base>
   11018:	cmn	r0, #1
   1101c:	beq	11044 <vetor_pesquisa_parcial@@Base+0xa0>
   11020:	ldr	r3, [r5]
   11024:	cmp	r3, r4
   11028:	bgt	10fdc <vetor_pesquisa_parcial@@Base+0x38>
   1102c:	mov	r0, r7
   11030:	ldrd	r4, [sp]
   11034:	ldrd	r6, [sp, #8]
   11038:	ldr	r8, [sp, #16]
   1103c:	add	sp, sp, #20
   11040:	pop	{pc}		; (ldr pc, [sp], #4)
   11044:	mov	r0, r8
   11048:	bl	10ac8 <puts@plt>
   1104c:	b	11020 <vetor_pesquisa_parcial@@Base+0x7c>
   11050:	andeq	r0, r0, r0, ror #13

00011054 <vetor_novo@@Base>:
   11054:	mov	r0, #12
   11058:	str	r4, [sp, #-8]!
   1105c:	str	lr, [sp, #4]
   11060:	bl	10ad4 <malloc@plt>
   11064:	cmp	r0, #0
   11068:	beq	1107c <vetor_novo@@Base+0x28>
   1106c:	mov	r3, #0
   11070:	str	r3, [r0]
   11074:	str	r3, [r0, #4]
   11078:	str	r3, [r0, #8]
   1107c:	ldr	r4, [sp]
   11080:	add	sp, sp, #4
   11084:	pop	{pc}		; (ldr pc, [sp], #4)

00011088 <vetor_apaga@@Base>:
   11088:	strd	r4, [sp, #-16]!
   1108c:	subs	r5, r0, #0
   11090:	str	r6, [sp, #8]
   11094:	str	lr, [sp, #12]
   11098:	beq	110e8 <vetor_apaga@@Base+0x60>
   1109c:	ldr	r3, [r5]
   110a0:	cmp	r3, #0
   110a4:	ble	110c8 <vetor_apaga@@Base+0x40>
   110a8:	mov	r4, #0
   110ac:	ldr	r3, [r5, #8]
   110b0:	ldr	r0, [r3, r4, lsl #2]
   110b4:	add	r4, r4, #1
   110b8:	bl	10a80 <free@plt>
   110bc:	ldr	r3, [r5]
   110c0:	cmp	r3, r4
   110c4:	bgt	110ac <vetor_apaga@@Base+0x24>
   110c8:	ldr	r0, [r5, #8]
   110cc:	bl	10a80 <free@plt>
   110d0:	mov	r0, r5
   110d4:	ldrd	r4, [sp]
   110d8:	ldr	r6, [sp, #8]
   110dc:	ldr	lr, [sp, #12]
   110e0:	add	sp, sp, #16
   110e4:	b	10a80 <free@plt>
   110e8:	ldrd	r4, [sp]
   110ec:	ldr	r6, [sp, #8]
   110f0:	add	sp, sp, #12
   110f4:	pop	{pc}		; (ldr pc, [sp], #4)

000110f8 <vetor_atribui@@Base>:
   110f8:	cmp	r0, #0
   110fc:	lsrne	r3, r1, #31
   11100:	moveq	r3, #1
   11104:	cmp	r3, #0
   11108:	bne	111ac <vetor_atribui@@Base+0xb4>
   1110c:	ldr	r3, [r0]
   11110:	cmp	r3, r1
   11114:	ble	111ac <vetor_atribui@@Base+0xb4>
   11118:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1111c:	mov	r5, r0
   11120:	mov	r0, r2
   11124:	mov	r4, r1
   11128:	strd	r6, [sp, #8]
   1112c:	mov	r6, r2
   11130:	strd	r8, [sp, #16]
   11134:	str	sl, [sp, #24]
   11138:	str	lr, [sp, #28]
   1113c:	bl	10af8 <strlen@plt>
   11140:	ldr	r8, [r5, #8]
   11144:	mov	r9, r0
   11148:	ldr	r7, [r8, r4, lsl #2]
   1114c:	mov	r0, r7
   11150:	bl	10af8 <strlen@plt>
   11154:	cmp	r0, r9
   11158:	bcc	11184 <vetor_atribui@@Base+0x8c>
   1115c:	mov	r1, r6
   11160:	mov	r0, r7
   11164:	bl	10abc <strcpy@plt>
   11168:	mov	r0, r4
   1116c:	ldrd	r4, [sp]
   11170:	ldrd	r6, [sp, #8]
   11174:	ldrd	r8, [sp, #16]
   11178:	ldr	sl, [sp, #24]
   1117c:	add	sp, sp, #28
   11180:	pop	{pc}		; (ldr pc, [sp], #4)
   11184:	mov	r0, r7
   11188:	add	r1, r9, #1
   1118c:	bl	10aa4 <realloc@plt>
   11190:	ldr	r3, [r5, #8]
   11194:	str	r0, [r8, r4, lsl #2]
   11198:	ldr	r7, [r3, r4, lsl #2]
   1119c:	cmp	r7, #0
   111a0:	bne	1115c <vetor_atribui@@Base+0x64>
   111a4:	mvn	r0, #0
   111a8:	b	1116c <vetor_atribui@@Base+0x74>
   111ac:	mvn	r0, #0
   111b0:	bx	lr

000111b4 <vetor_tamanho@@Base>:
   111b4:	cmp	r0, #0
   111b8:	ldrne	r0, [r0]
   111bc:	mvneq	r0, #0
   111c0:	bx	lr

000111c4 <vetor_elemento@@Base>:
   111c4:	cmp	r0, #0
   111c8:	lsrne	r3, r1, #31
   111cc:	moveq	r3, #1
   111d0:	cmp	r3, #0
   111d4:	bne	111f0 <vetor_elemento@@Base+0x2c>
   111d8:	ldr	r2, [r0]
   111dc:	cmp	r2, r1
   111e0:	ble	111f0 <vetor_elemento@@Base+0x2c>
   111e4:	ldr	r3, [r0, #8]
   111e8:	ldr	r0, [r3, r1, lsl #2]
   111ec:	bx	lr
   111f0:	mov	r0, #0
   111f4:	bx	lr

000111f8 <vetor_insere@@Base>:
   111f8:	cmp	r0, #0
   111fc:	lsrne	r3, r2, #31
   11200:	moveq	r3, #1
   11204:	cmp	r3, #0
   11208:	bne	112e8 <vetor_insere@@Base+0xf0>
   1120c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11210:	strd	r6, [sp, #8]
   11214:	ldr	r6, [r0]
   11218:	str	r8, [sp, #16]
   1121c:	str	lr, [sp, #20]
   11220:	cmp	r6, r2
   11224:	blt	112e0 <vetor_insere@@Base+0xe8>
   11228:	ldmib	r0, {r3, r5}
   1122c:	mov	r7, r0
   11230:	mov	r8, r1
   11234:	mov	r4, r2
   11238:	cmp	r6, r3
   1123c:	beq	112a8 <vetor_insere@@Base+0xb0>
   11240:	cmp	r4, r6
   11244:	addlt	r3, r5, r6, lsl #2
   11248:	addlt	r2, r5, r4, lsl #2
   1124c:	bge	11260 <vetor_insere@@Base+0x68>
   11250:	ldr	ip, [r3, #-4]
   11254:	str	ip, [r3], #-4
   11258:	cmp	r2, r3
   1125c:	bne	11250 <vetor_insere@@Base+0x58>
   11260:	mov	r0, r8
   11264:	bl	10af8 <strlen@plt>
   11268:	add	r0, r0, #1
   1126c:	mov	r1, #1
   11270:	bl	10a44 <calloc@plt>
   11274:	cmp	r0, #0
   11278:	str	r0, [r5, r4, lsl #2]
   1127c:	beq	112e0 <vetor_insere@@Base+0xe8>
   11280:	mov	r1, r8
   11284:	bl	10abc <strcpy@plt>
   11288:	add	r1, r6, #1
   1128c:	mov	r0, r4
   11290:	str	r1, [r7]
   11294:	ldrd	r4, [sp]
   11298:	ldrd	r6, [sp, #8]
   1129c:	ldr	r8, [sp, #16]
   112a0:	add	sp, sp, #20
   112a4:	pop	{pc}		; (ldr pc, [sp], #4)
   112a8:	cmp	r6, #0
   112ac:	mov	r0, r5
   112b0:	lslne	r3, r6, #1
   112b4:	moveq	r3, #1
   112b8:	moveq	r1, #4
   112bc:	lslne	r1, r6, #3
   112c0:	str	r3, [r7, #4]
   112c4:	bl	10aa4 <realloc@plt>
   112c8:	cmp	r0, #0
   112cc:	mov	r5, r0
   112d0:	str	r0, [r7, #8]
   112d4:	beq	112e0 <vetor_insere@@Base+0xe8>
   112d8:	ldr	r6, [r7]
   112dc:	b	11240 <vetor_insere@@Base+0x48>
   112e0:	mvn	r0, #0
   112e4:	b	11294 <vetor_insere@@Base+0x9c>
   112e8:	mvn	r0, #0
   112ec:	bx	lr

000112f0 <vetor_remove@@Base>:
   112f0:	cmp	r0, #0
   112f4:	lsrne	r3, r1, #31
   112f8:	moveq	r3, #1
   112fc:	cmp	r3, #0
   11300:	bne	11380 <vetor_remove@@Base+0x90>
   11304:	ldr	r3, [r0]
   11308:	cmp	r3, r1
   1130c:	ble	11380 <vetor_remove@@Base+0x90>
   11310:	ldr	r3, [r0, #8]
   11314:	strd	r4, [sp, #-16]!
   11318:	mov	r5, r0
   1131c:	mov	r4, r1
   11320:	ldr	r0, [r3, r1, lsl #2]
   11324:	str	r6, [sp, #8]
   11328:	lsl	r6, r1, #2
   1132c:	str	lr, [sp, #12]
   11330:	bl	10a80 <free@plt>
   11334:	ldr	r0, [r5]
   11338:	add	r1, r4, #1
   1133c:	cmp	r1, r0
   11340:	bge	11364 <vetor_remove@@Base+0x74>
   11344:	ldr	r3, [r5, #8]
   11348:	sub	r1, r3, #4
   1134c:	add	r3, r3, r6
   11350:	add	r1, r1, r0, lsl #2
   11354:	ldr	r2, [r3, #4]
   11358:	str	r2, [r3], #4
   1135c:	cmp	r3, r1
   11360:	bne	11354 <vetor_remove@@Base+0x64>
   11364:	sub	r3, r0, #1
   11368:	ldr	r6, [sp, #8]
   1136c:	mov	r0, #0
   11370:	str	r3, [r5]
   11374:	ldrd	r4, [sp]
   11378:	add	sp, sp, #12
   1137c:	pop	{pc}		; (ldr pc, [sp], #4)
   11380:	mvn	r0, #0
   11384:	bx	lr

00011388 <vetor_pesquisa@@Base>:
   11388:	cmp	r0, #0
   1138c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11390:	strd	r6, [sp, #8]
   11394:	str	r8, [sp, #16]
   11398:	str	lr, [sp, #20]
   1139c:	beq	113f8 <vetor_pesquisa@@Base+0x70>
   113a0:	ldr	r7, [r0]
   113a4:	cmp	r7, #0
   113a8:	ble	113f8 <vetor_pesquisa@@Base+0x70>
   113ac:	ldr	r5, [r0, #8]
   113b0:	mov	r6, r1
   113b4:	mov	r4, #0
   113b8:	sub	r5, r5, #4
   113bc:	b	113cc <vetor_pesquisa@@Base+0x44>
   113c0:	add	r4, r4, #1
   113c4:	cmp	r7, r4
   113c8:	beq	113f8 <vetor_pesquisa@@Base+0x70>
   113cc:	mov	r1, r6
   113d0:	ldr	r0, [r5, #4]!
   113d4:	bl	10a5c <strcmp@plt>
   113d8:	cmp	r0, #0
   113dc:	bne	113c0 <vetor_pesquisa@@Base+0x38>
   113e0:	mov	r0, r4
   113e4:	ldrd	r4, [sp]
   113e8:	ldrd	r6, [sp, #8]
   113ec:	ldr	r8, [sp, #16]
   113f0:	add	sp, sp, #20
   113f4:	pop	{pc}		; (ldr pc, [sp], #4)
   113f8:	mvn	r4, #0
   113fc:	b	113e0 <vetor_pesquisa@@Base+0x58>

00011400 <vetor_ordena@@Base>:
   11400:	cmp	r0, #0
   11404:	beq	114a8 <vetor_ordena@@Base+0xa8>
   11408:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1140c:	strd	r6, [sp, #8]
   11410:	strd	sl, [sp, #24]
   11414:	ldr	sl, [r0]
   11418:	strd	r8, [sp, #16]
   1141c:	str	lr, [sp, #32]
   11420:	sub	sp, sp, #12
   11424:	cmp	sl, #1
   11428:	ble	11488 <vetor_ordena@@Base+0x88>
   1142c:	ldr	r3, [r0, #8]
   11430:	mov	r8, #1
   11434:	mov	r9, r3
   11438:	str	r3, [sp, #4]
   1143c:	ldr	r7, [r9, #4]!
   11440:	mov	r5, r8
   11444:	mov	r4, r9
   11448:	ldr	r6, [r4, #-4]
   1144c:	mov	r0, r7
   11450:	mov	fp, r4
   11454:	mov	r1, r6
   11458:	bl	10a5c <strcmp@plt>
   1145c:	cmp	r0, #0
   11460:	bge	11478 <vetor_ordena@@Base+0x78>
   11464:	subs	r5, r5, #1
   11468:	str	r6, [r4]
   1146c:	sub	r4, fp, #4
   11470:	bne	11448 <vetor_ordena@@Base+0x48>
   11474:	ldr	fp, [sp, #4]
   11478:	add	r8, r8, #1
   1147c:	str	r7, [fp]
   11480:	cmp	r8, sl
   11484:	bne	1143c <vetor_ordena@@Base+0x3c>
   11488:	mov	r0, #0
   1148c:	add	sp, sp, #12
   11490:	ldrd	r4, [sp]
   11494:	ldrd	r6, [sp, #8]
   11498:	ldrd	r8, [sp, #16]
   1149c:	ldrd	sl, [sp, #24]
   114a0:	add	sp, sp, #32
   114a4:	pop	{pc}		; (ldr pc, [sp], #4)
   114a8:	mvn	r0, #0
   114ac:	bx	lr

000114b0 <vetor_concatena@@Base>:
   114b0:	cmp	r1, #0
   114b4:	cmpne	r0, #0
   114b8:	strd	r4, [sp, #-16]!
   114bc:	str	r6, [sp, #8]
   114c0:	moveq	r6, #0
   114c4:	str	lr, [sp, #12]
   114c8:	beq	11518 <vetor_concatena@@Base+0x68>
   114cc:	mov	r4, r1
   114d0:	mov	r5, r0
   114d4:	bl	11054 <vetor_novo@@Base>
   114d8:	ldm	r4, {r1, ip}
   114dc:	mov	r6, r0
   114e0:	ldrd	r2, [r5]
   114e4:	add	lr, r2, r1, lsl #2
   114e8:	ldr	r0, [r2, r1, lsl #2]
   114ec:	add	r3, r3, ip
   114f0:	str	lr, [r6, #8]
   114f4:	ldr	r2, [r5, #8]
   114f8:	ldr	r1, [r2]
   114fc:	str	r3, [r6, #4]
   11500:	bl	10abc <strcpy@plt>
   11504:	ldr	r2, [r4, #8]
   11508:	ldr	r3, [r6, #8]
   1150c:	ldr	r1, [r2]
   11510:	ldr	r0, [r3]
   11514:	bl	10ab0 <strcat@plt>
   11518:	mov	r0, r6
   1151c:	ldrd	r4, [sp]
   11520:	ldr	r6, [sp, #8]
   11524:	add	sp, sp, #12
   11528:	pop	{pc}		; (ldr pc, [sp], #4)

0001152c <vetor_inverte@@Base>:
   1152c:	strd	r4, [sp, #-16]!
   11530:	mov	r4, r0
   11534:	str	r6, [sp, #8]
   11538:	str	lr, [sp, #12]
   1153c:	bl	111b4 <vetor_tamanho@@Base>
   11540:	cmp	r0, #0
   11544:	ble	11584 <vetor_inverte@@Base+0x58>
   11548:	ldr	r2, [r4, #8]
   1154c:	mov	r3, r0
   11550:	add	r1, r2, r0, lsl #2
   11554:	sub	r2, r2, #4
   11558:	ldr	ip, [r2, #4]!
   1155c:	sub	r3, r3, #1
   11560:	cmp	r0, r3
   11564:	sub	r4, r0, r3
   11568:	ldr	lr, [r1]
   1156c:	movlt	r5, r0
   11570:	movge	r5, r3
   11574:	cmp	r5, r4
   11578:	str	lr, [r2]
   1157c:	str	ip, [r1], #-4
   11580:	bgt	11558 <vetor_inverte@@Base+0x2c>
   11584:	ldrd	r4, [sp]
   11588:	mov	r0, #0
   1158c:	ldr	r6, [sp, #8]
   11590:	add	sp, sp, #12
   11594:	pop	{pc}		; (ldr pc, [sp], #4)

00011598 <vetor_baralha@@Base>:
   11598:	strd	r4, [sp, #-20]!	; 0xffffffec
   1159c:	strd	r6, [sp, #8]
   115a0:	ldr	r6, [r0]
   115a4:	str	lr, [sp, #16]
   115a8:	sub	sp, sp, #12
   115ac:	bl	11054 <vetor_novo@@Base>
   115b0:	mov	r7, r0
   115b4:	add	r0, sp, #4
   115b8:	bl	10a98 <time@plt>
   115bc:	bl	10b04 <srand@plt>
   115c0:	cmp	r6, #0
   115c4:	ble	115fc <vetor_baralha@@Base+0x64>
   115c8:	add	r5, r6, #1
   115cc:	mov	r4, #0
   115d0:	bl	10b10 <rand@plt>
   115d4:	sdiv	r2, r0, r5
   115d8:	ldr	r3, [r7, #8]
   115dc:	ldr	r1, [r3, r4, lsl #2]
   115e0:	mls	r0, r2, r5, r0
   115e4:	ldr	r2, [r3, r0, lsl #2]
   115e8:	str	r2, [r3, r4, lsl #2]
   115ec:	add	r4, r4, #1
   115f0:	cmp	r6, r4
   115f4:	str	r1, [r3, r0, lsl #2]
   115f8:	bne	115d0 <vetor_baralha@@Base+0x38>
   115fc:	mov	r0, r7
   11600:	add	sp, sp, #12
   11604:	ldrd	r4, [sp]
   11608:	ldrd	r6, [sp, #8]
   1160c:	add	sp, sp, #16
   11610:	pop	{pc}		; (ldr pc, [sp], #4)

00011614 <__libc_csu_init@@Base>:
   11614:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11618:	mov	r7, r0
   1161c:	ldr	r6, [pc, #72]	; 1166c <__libc_csu_init@@Base+0x58>
   11620:	ldr	r5, [pc, #72]	; 11670 <__libc_csu_init@@Base+0x5c>
   11624:	add	r6, pc, r6
   11628:	add	r5, pc, r5
   1162c:	sub	r6, r6, r5
   11630:	mov	r8, r1
   11634:	mov	r9, r2
   11638:	bl	10a24 <calloc@plt-0x20>
   1163c:	asrs	r6, r6, #2
   11640:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11644:	mov	r4, #0
   11648:	add	r4, r4, #1
   1164c:	ldr	r3, [r5], #4
   11650:	mov	r2, r9
   11654:	mov	r1, r8
   11658:	mov	r0, r7
   1165c:	blx	r3
   11660:	cmp	r6, r4
   11664:	bne	11648 <__libc_csu_init@@Base+0x34>
   11668:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1166c:	andeq	r0, r1, r8, ror #17
   11670:	andeq	r0, r1, r0, ror #17

00011674 <__libc_csu_fini@@Base>:
   11674:	bx	lr

Disassembly of section .fini:

00011678 <.fini>:
   11678:	push	{r3, lr}
   1167c:	pop	{r3, pc}
