
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010974 <.init>:
   10974:	push	{r3, lr}
   10978:	bl	10c14 <_start@@Base+0x3c>
   1097c:	pop	{r3, pc}

Disassembly of section .plt:

00010980 <calloc@plt-0x14>:
   10980:	push	{lr}		; (str lr, [sp, #-4]!)
   10984:	ldr	lr, [pc, #4]	; 10990 <calloc@plt-0x4>
   10988:	add	lr, pc, lr
   1098c:	ldr	pc, [lr, #8]!
   10990:	andeq	r1, r1, r0, ror r6

00010994 <calloc@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #69632	; 0x11000
   1099c:	ldr	pc, [ip, #1648]!	; 0x670

000109a0 <strcmp@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #69632	; 0x11000
   109a8:	ldr	pc, [ip, #1640]!	; 0x668

000109ac <printf@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #69632	; 0x11000
   109b4:	ldr	pc, [ip, #1632]!	; 0x660

000109b8 <free@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #69632	; 0x11000
   109c0:	ldr	pc, [ip, #1624]!	; 0x658

000109c4 <fgets@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #69632	; 0x11000
   109cc:	ldr	pc, [ip, #1616]!	; 0x650

000109d0 <time@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #69632	; 0x11000
   109d8:	ldr	pc, [ip, #1608]!	; 0x648

000109dc <realloc@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #69632	; 0x11000
   109e4:	ldr	pc, [ip, #1600]!	; 0x640

000109e8 <strcat@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #69632	; 0x11000
   109f0:	ldr	pc, [ip, #1592]!	; 0x638

000109f4 <strcpy@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #69632	; 0x11000
   109fc:	ldr	pc, [ip, #1584]!	; 0x630

00010a00 <puts@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #69632	; 0x11000
   10a08:	ldr	pc, [ip, #1576]!	; 0x628

00010a0c <malloc@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #69632	; 0x11000
   10a14:	ldr	pc, [ip, #1568]!	; 0x620

00010a18 <__libc_start_main@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #69632	; 0x11000
   10a20:	ldr	pc, [ip, #1560]!	; 0x618

00010a24 <__gmon_start__@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #69632	; 0x11000
   10a2c:	ldr	pc, [ip, #1552]!	; 0x610

00010a30 <strlen@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #69632	; 0x11000
   10a38:	ldr	pc, [ip, #1544]!	; 0x608

00010a3c <srand@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #69632	; 0x11000
   10a44:	ldr	pc, [ip, #1536]!	; 0x600

00010a48 <rand@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #69632	; 0x11000
   10a50:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a54 <__isoc99_scanf@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #69632	; 0x11000
   10a5c:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a60 <abort@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #69632	; 0x11000
   10a68:	ldr	pc, [ip, #1512]!	; 0x5e8

Disassembly of section .text:

00010a6c <main@@Base>:
   10a6c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10a70:	mov	r4, #0
   10a74:	strd	r6, [sp, #8]
   10a78:	strd	r8, [sp, #16]
   10a7c:	str	sl, [sp, #24]
   10a80:	mov	sl, r4
   10a84:	str	lr, [sp, #28]
   10a88:	sub	sp, sp, #104	; 0x68
   10a8c:	bl	10d20 <vetor_novo@@Base>
   10a90:	ldr	r3, [pc, #288]	; 10bb8 <main@@Base+0x14c>
   10a94:	mov	r7, r0
   10a98:	add	r5, sp, #4
   10a9c:	ldr	r2, [pc, #280]	; 10bbc <main@@Base+0x150>
   10aa0:	ldr	r9, [pc, #280]	; 10bc0 <main@@Base+0x154>
   10aa4:	add	r3, pc, r3
   10aa8:	ldr	r8, [r3, r2]
   10aac:	add	r9, pc, r9
   10ab0:	add	r6, r4, #1
   10ab4:	mov	r0, r9
   10ab8:	mov	r1, r6
   10abc:	bl	109ac <printf@plt>
   10ac0:	mov	r1, #100	; 0x64
   10ac4:	mov	r0, r5
   10ac8:	ldr	r2, [r8]
   10acc:	bl	109c4 <fgets@plt>
   10ad0:	mov	r0, r5
   10ad4:	bl	10a30 <strlen@plt>
   10ad8:	add	r3, sp, #104	; 0x68
   10adc:	mov	r2, r4
   10ae0:	add	r3, r3, r0
   10ae4:	mov	r1, r5
   10ae8:	mov	r0, r7
   10aec:	mov	r4, r6
   10af0:	strb	sl, [r3, #-101]	; 0xffffff9b
   10af4:	bl	10ec4 <vetor_insere@@Base>
   10af8:	cmp	r6, #5
   10afc:	bne	10ab0 <main@@Base+0x44>
   10b00:	mov	r0, r7
   10b04:	bl	10cc8 <imprime@@Base>
   10b08:	ldr	r0, [pc, #180]	; 10bc4 <main@@Base+0x158>
   10b0c:	add	r0, pc, r0
   10b10:	bl	109ac <printf@plt>
   10b14:	ldr	r0, [pc, #172]	; 10bc8 <main@@Base+0x15c>
   10b18:	mov	r1, r5
   10b1c:	add	r0, pc, r0
   10b20:	bl	10a54 <__isoc99_scanf@plt>
   10b24:	mov	r1, r5
   10b28:	mov	r0, r7
   10b2c:	bl	11054 <vetor_pesquisa@@Base>
   10b30:	mov	r1, r0
   10b34:	mov	r0, r7
   10b38:	bl	10fbc <vetor_remove@@Base>
   10b3c:	cmp	r0, #0
   10b40:	bne	10b98 <main@@Base+0x12c>
   10b44:	mov	r0, r7
   10b48:	bl	10cc8 <imprime@@Base>
   10b4c:	mov	r0, r7
   10b50:	bl	110cc <vetor_ordena@@Base>
   10b54:	cmp	r0, #0
   10b58:	bne	10ba8 <main@@Base+0x13c>
   10b5c:	ldr	r0, [pc, #104]	; 10bcc <main@@Base+0x160>
   10b60:	add	r0, pc, r0
   10b64:	bl	10a00 <puts@plt>
   10b68:	mov	r0, r7
   10b6c:	bl	10cc8 <imprime@@Base>
   10b70:	mov	r0, r7
   10b74:	bl	10d54 <vetor_apaga@@Base>
   10b78:	mov	r0, #0
   10b7c:	add	sp, sp, #104	; 0x68
   10b80:	ldrd	r4, [sp]
   10b84:	ldrd	r6, [sp, #8]
   10b88:	ldrd	r8, [sp, #16]
   10b8c:	ldr	sl, [sp, #24]
   10b90:	add	sp, sp, #28
   10b94:	pop	{pc}		; (ldr pc, [sp], #4)
   10b98:	ldr	r0, [pc, #48]	; 10bd0 <main@@Base+0x164>
   10b9c:	add	r0, pc, r0
   10ba0:	bl	10a00 <puts@plt>
   10ba4:	b	10b4c <main@@Base+0xe0>
   10ba8:	ldr	r0, [pc, #36]	; 10bd4 <main@@Base+0x168>
   10bac:	add	r0, pc, r0
   10bb0:	bl	109ac <printf@plt>
   10bb4:	b	10b5c <main@@Base+0xf0>
   10bb8:	andeq	r1, r1, r4, asr r5
   10bbc:	andeq	r0, r0, r8, asr r0
   10bc0:			; <UNDEFINED> instruction: 0x000008bc
   10bc4:	andeq	r0, r0, r0, ror r8
   10bc8:	andeq	r0, r0, r0, lsl #17
   10bcc:	andeq	r0, r0, ip, ror r8
   10bd0:	andeq	r0, r0, r4, lsl #16
   10bd4:	andeq	r0, r0, ip, lsl #16

00010bd8 <_start@@Base>:
   10bd8:	mov	fp, #0
   10bdc:	mov	lr, #0
   10be0:	pop	{r1}		; (ldr r1, [sp], #4)
   10be4:	mov	r2, sp
   10be8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bec:	push	{r0}		; (str r0, [sp, #-4]!)
   10bf0:	ldr	ip, [pc, #16]	; 10c08 <_start@@Base+0x30>
   10bf4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bf8:	ldr	r0, [pc, #12]	; 10c0c <_start@@Base+0x34>
   10bfc:	ldr	r3, [pc, #12]	; 10c10 <_start@@Base+0x38>
   10c00:	bl	10a18 <__libc_start_main@plt>
   10c04:	bl	10a60 <abort@plt>
   10c08:	andeq	r1, r1, r0, asr #6
   10c0c:	andeq	r0, r1, ip, ror #20
   10c10:	andeq	r1, r1, r0, ror #5
   10c14:	ldr	r3, [pc, #20]	; 10c30 <_start@@Base+0x58>
   10c18:	ldr	r2, [pc, #20]	; 10c34 <_start@@Base+0x5c>
   10c1c:	add	r3, pc, r3
   10c20:	ldr	r2, [r3, r2]
   10c24:	cmp	r2, #0
   10c28:	bxeq	lr
   10c2c:	b	10a24 <__gmon_start__@plt>
   10c30:	ldrdeq	r1, [r1], -ip
   10c34:	andeq	r0, r0, r4, asr r0
   10c38:	ldr	r0, [pc, #24]	; 10c58 <_start@@Base+0x80>
   10c3c:	ldr	r3, [pc, #24]	; 10c5c <_start@@Base+0x84>
   10c40:	cmp	r3, r0
   10c44:	bxeq	lr
   10c48:	ldr	r3, [pc, #16]	; 10c60 <_start@@Base+0x88>
   10c4c:	cmp	r3, #0
   10c50:	bxeq	lr
   10c54:	bx	r3
   10c58:	andeq	r2, r2, r4, rrx
   10c5c:	andeq	r2, r2, r4, rrx
   10c60:	andeq	r0, r0, r0
   10c64:	ldr	r0, [pc, #36]	; 10c90 <_start@@Base+0xb8>
   10c68:	ldr	r1, [pc, #36]	; 10c94 <_start@@Base+0xbc>
   10c6c:	sub	r1, r1, r0
   10c70:	asr	r1, r1, #2
   10c74:	add	r1, r1, r1, lsr #31
   10c78:	asrs	r1, r1, #1
   10c7c:	bxeq	lr
   10c80:	ldr	r3, [pc, #16]	; 10c98 <_start@@Base+0xc0>
   10c84:	cmp	r3, #0
   10c88:	bxeq	lr
   10c8c:	bx	r3
   10c90:	andeq	r2, r2, r4, rrx
   10c94:	andeq	r2, r2, r4, rrx
   10c98:	andeq	r0, r0, r0
   10c9c:	push	{r4, lr}
   10ca0:	ldr	r4, [pc, #24]	; 10cc0 <_start@@Base+0xe8>
   10ca4:	ldrb	r3, [r4]
   10ca8:	cmp	r3, #0
   10cac:	popne	{r4, pc}
   10cb0:	bl	10c38 <_start@@Base+0x60>
   10cb4:	mov	r3, #1
   10cb8:	strb	r3, [r4]
   10cbc:	pop	{r4, pc}
   10cc0:	andeq	r2, r2, r4, rrx
   10cc4:	b	10c64 <_start@@Base+0x8c>

00010cc8 <imprime@@Base>:
   10cc8:	strd	r4, [sp, #-16]!
   10ccc:	mov	r1, #0
   10cd0:	mov	r5, r0
   10cd4:	str	r6, [sp, #8]
   10cd8:	ldr	r6, [pc, #60]	; 10d1c <imprime@@Base+0x54>
   10cdc:	str	lr, [sp, #12]
   10ce0:	add	r6, pc, r6
   10ce4:	mov	r0, r5
   10ce8:	add	r4, r1, #1
   10cec:	bl	10e90 <vetor_elemento@@Base>
   10cf0:	mov	r2, r0
   10cf4:	mov	r1, r4
   10cf8:	mov	r0, r6
   10cfc:	bl	109ac <printf@plt>
   10d00:	cmp	r4, #5
   10d04:	mov	r1, r4
   10d08:	bne	10ce4 <imprime@@Base+0x1c>
   10d0c:	ldrd	r4, [sp]
   10d10:	ldr	r6, [sp, #8]
   10d14:	add	sp, sp, #12
   10d18:	pop	{pc}		; (ldr pc, [sp], #4)
   10d1c:	andeq	r0, r0, r8, ror #12

00010d20 <vetor_novo@@Base>:
   10d20:	mov	r0, #12
   10d24:	str	r4, [sp, #-8]!
   10d28:	str	lr, [sp, #4]
   10d2c:	bl	10a0c <malloc@plt>
   10d30:	cmp	r0, #0
   10d34:	beq	10d48 <vetor_novo@@Base+0x28>
   10d38:	mov	r3, #0
   10d3c:	str	r3, [r0]
   10d40:	str	r3, [r0, #4]
   10d44:	str	r3, [r0, #8]
   10d48:	ldr	r4, [sp]
   10d4c:	add	sp, sp, #4
   10d50:	pop	{pc}		; (ldr pc, [sp], #4)

00010d54 <vetor_apaga@@Base>:
   10d54:	strd	r4, [sp, #-16]!
   10d58:	subs	r5, r0, #0
   10d5c:	str	r6, [sp, #8]
   10d60:	str	lr, [sp, #12]
   10d64:	beq	10db4 <vetor_apaga@@Base+0x60>
   10d68:	ldr	r3, [r5]
   10d6c:	cmp	r3, #0
   10d70:	ble	10d94 <vetor_apaga@@Base+0x40>
   10d74:	mov	r4, #0
   10d78:	ldr	r3, [r5, #8]
   10d7c:	ldr	r0, [r3, r4, lsl #2]
   10d80:	add	r4, r4, #1
   10d84:	bl	109b8 <free@plt>
   10d88:	ldr	r3, [r5]
   10d8c:	cmp	r3, r4
   10d90:	bgt	10d78 <vetor_apaga@@Base+0x24>
   10d94:	ldr	r0, [r5, #8]
   10d98:	bl	109b8 <free@plt>
   10d9c:	mov	r0, r5
   10da0:	ldrd	r4, [sp]
   10da4:	ldr	r6, [sp, #8]
   10da8:	ldr	lr, [sp, #12]
   10dac:	add	sp, sp, #16
   10db0:	b	109b8 <free@plt>
   10db4:	ldrd	r4, [sp]
   10db8:	ldr	r6, [sp, #8]
   10dbc:	add	sp, sp, #12
   10dc0:	pop	{pc}		; (ldr pc, [sp], #4)

00010dc4 <vetor_atribui@@Base>:
   10dc4:	cmp	r0, #0
   10dc8:	lsrne	r3, r1, #31
   10dcc:	moveq	r3, #1
   10dd0:	cmp	r3, #0
   10dd4:	bne	10e78 <vetor_atribui@@Base+0xb4>
   10dd8:	ldr	r3, [r0]
   10ddc:	cmp	r3, r1
   10de0:	ble	10e78 <vetor_atribui@@Base+0xb4>
   10de4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10de8:	mov	r5, r0
   10dec:	mov	r0, r2
   10df0:	mov	r4, r1
   10df4:	strd	r6, [sp, #8]
   10df8:	mov	r6, r2
   10dfc:	strd	r8, [sp, #16]
   10e00:	str	sl, [sp, #24]
   10e04:	str	lr, [sp, #28]
   10e08:	bl	10a30 <strlen@plt>
   10e0c:	ldr	r8, [r5, #8]
   10e10:	mov	r9, r0
   10e14:	ldr	r7, [r8, r4, lsl #2]
   10e18:	mov	r0, r7
   10e1c:	bl	10a30 <strlen@plt>
   10e20:	cmp	r0, r9
   10e24:	bcc	10e50 <vetor_atribui@@Base+0x8c>
   10e28:	mov	r1, r6
   10e2c:	mov	r0, r7
   10e30:	bl	109f4 <strcpy@plt>
   10e34:	mov	r0, r4
   10e38:	ldrd	r4, [sp]
   10e3c:	ldrd	r6, [sp, #8]
   10e40:	ldrd	r8, [sp, #16]
   10e44:	ldr	sl, [sp, #24]
   10e48:	add	sp, sp, #28
   10e4c:	pop	{pc}		; (ldr pc, [sp], #4)
   10e50:	mov	r0, r7
   10e54:	add	r1, r9, #1
   10e58:	bl	109dc <realloc@plt>
   10e5c:	ldr	r3, [r5, #8]
   10e60:	str	r0, [r8, r4, lsl #2]
   10e64:	ldr	r7, [r3, r4, lsl #2]
   10e68:	cmp	r7, #0
   10e6c:	bne	10e28 <vetor_atribui@@Base+0x64>
   10e70:	mvn	r0, #0
   10e74:	b	10e38 <vetor_atribui@@Base+0x74>
   10e78:	mvn	r0, #0
   10e7c:	bx	lr

00010e80 <vetor_tamanho@@Base>:
   10e80:	cmp	r0, #0
   10e84:	ldrne	r0, [r0]
   10e88:	mvneq	r0, #0
   10e8c:	bx	lr

00010e90 <vetor_elemento@@Base>:
   10e90:	cmp	r0, #0
   10e94:	lsrne	r3, r1, #31
   10e98:	moveq	r3, #1
   10e9c:	cmp	r3, #0
   10ea0:	bne	10ebc <vetor_elemento@@Base+0x2c>
   10ea4:	ldr	r2, [r0]
   10ea8:	cmp	r2, r1
   10eac:	ble	10ebc <vetor_elemento@@Base+0x2c>
   10eb0:	ldr	r3, [r0, #8]
   10eb4:	ldr	r0, [r3, r1, lsl #2]
   10eb8:	bx	lr
   10ebc:	mov	r0, #0
   10ec0:	bx	lr

00010ec4 <vetor_insere@@Base>:
   10ec4:	cmp	r0, #0
   10ec8:	lsrne	r3, r2, #31
   10ecc:	moveq	r3, #1
   10ed0:	cmp	r3, #0
   10ed4:	bne	10fb4 <vetor_insere@@Base+0xf0>
   10ed8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10edc:	strd	r6, [sp, #8]
   10ee0:	ldr	r6, [r0]
   10ee4:	str	r8, [sp, #16]
   10ee8:	str	lr, [sp, #20]
   10eec:	cmp	r6, r2
   10ef0:	blt	10fac <vetor_insere@@Base+0xe8>
   10ef4:	ldmib	r0, {r3, r5}
   10ef8:	mov	r7, r0
   10efc:	mov	r8, r1
   10f00:	mov	r4, r2
   10f04:	cmp	r6, r3
   10f08:	beq	10f74 <vetor_insere@@Base+0xb0>
   10f0c:	cmp	r4, r6
   10f10:	addlt	r3, r5, r6, lsl #2
   10f14:	addlt	r2, r5, r4, lsl #2
   10f18:	bge	10f2c <vetor_insere@@Base+0x68>
   10f1c:	ldr	ip, [r3, #-4]
   10f20:	str	ip, [r3], #-4
   10f24:	cmp	r2, r3
   10f28:	bne	10f1c <vetor_insere@@Base+0x58>
   10f2c:	mov	r0, r8
   10f30:	bl	10a30 <strlen@plt>
   10f34:	add	r0, r0, #1
   10f38:	mov	r1, #1
   10f3c:	bl	10994 <calloc@plt>
   10f40:	cmp	r0, #0
   10f44:	str	r0, [r5, r4, lsl #2]
   10f48:	beq	10fac <vetor_insere@@Base+0xe8>
   10f4c:	mov	r1, r8
   10f50:	bl	109f4 <strcpy@plt>
   10f54:	add	r1, r6, #1
   10f58:	mov	r0, r4
   10f5c:	str	r1, [r7]
   10f60:	ldrd	r4, [sp]
   10f64:	ldrd	r6, [sp, #8]
   10f68:	ldr	r8, [sp, #16]
   10f6c:	add	sp, sp, #20
   10f70:	pop	{pc}		; (ldr pc, [sp], #4)
   10f74:	cmp	r6, #0
   10f78:	mov	r0, r5
   10f7c:	lslne	r3, r6, #1
   10f80:	moveq	r3, #1
   10f84:	moveq	r1, #4
   10f88:	lslne	r1, r6, #3
   10f8c:	str	r3, [r7, #4]
   10f90:	bl	109dc <realloc@plt>
   10f94:	cmp	r0, #0
   10f98:	mov	r5, r0
   10f9c:	str	r0, [r7, #8]
   10fa0:	beq	10fac <vetor_insere@@Base+0xe8>
   10fa4:	ldr	r6, [r7]
   10fa8:	b	10f0c <vetor_insere@@Base+0x48>
   10fac:	mvn	r0, #0
   10fb0:	b	10f60 <vetor_insere@@Base+0x9c>
   10fb4:	mvn	r0, #0
   10fb8:	bx	lr

00010fbc <vetor_remove@@Base>:
   10fbc:	cmp	r0, #0
   10fc0:	lsrne	r3, r1, #31
   10fc4:	moveq	r3, #1
   10fc8:	cmp	r3, #0
   10fcc:	bne	1104c <vetor_remove@@Base+0x90>
   10fd0:	ldr	r3, [r0]
   10fd4:	cmp	r3, r1
   10fd8:	ble	1104c <vetor_remove@@Base+0x90>
   10fdc:	ldr	r3, [r0, #8]
   10fe0:	strd	r4, [sp, #-16]!
   10fe4:	mov	r5, r0
   10fe8:	mov	r4, r1
   10fec:	ldr	r0, [r3, r1, lsl #2]
   10ff0:	str	r6, [sp, #8]
   10ff4:	lsl	r6, r1, #2
   10ff8:	str	lr, [sp, #12]
   10ffc:	bl	109b8 <free@plt>
   11000:	ldr	r0, [r5]
   11004:	add	r1, r4, #1
   11008:	cmp	r1, r0
   1100c:	bge	11030 <vetor_remove@@Base+0x74>
   11010:	ldr	r3, [r5, #8]
   11014:	sub	r1, r3, #4
   11018:	add	r3, r3, r6
   1101c:	add	r1, r1, r0, lsl #2
   11020:	ldr	r2, [r3, #4]
   11024:	str	r2, [r3], #4
   11028:	cmp	r3, r1
   1102c:	bne	11020 <vetor_remove@@Base+0x64>
   11030:	sub	r3, r0, #1
   11034:	ldr	r6, [sp, #8]
   11038:	mov	r0, #0
   1103c:	str	r3, [r5]
   11040:	ldrd	r4, [sp]
   11044:	add	sp, sp, #12
   11048:	pop	{pc}		; (ldr pc, [sp], #4)
   1104c:	mvn	r0, #0
   11050:	bx	lr

00011054 <vetor_pesquisa@@Base>:
   11054:	cmp	r0, #0
   11058:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1105c:	strd	r6, [sp, #8]
   11060:	str	r8, [sp, #16]
   11064:	str	lr, [sp, #20]
   11068:	beq	110c4 <vetor_pesquisa@@Base+0x70>
   1106c:	ldr	r7, [r0]
   11070:	cmp	r7, #0
   11074:	ble	110c4 <vetor_pesquisa@@Base+0x70>
   11078:	ldr	r5, [r0, #8]
   1107c:	mov	r6, r1
   11080:	mov	r4, #0
   11084:	sub	r5, r5, #4
   11088:	b	11098 <vetor_pesquisa@@Base+0x44>
   1108c:	add	r4, r4, #1
   11090:	cmp	r7, r4
   11094:	beq	110c4 <vetor_pesquisa@@Base+0x70>
   11098:	mov	r1, r6
   1109c:	ldr	r0, [r5, #4]!
   110a0:	bl	109a0 <strcmp@plt>
   110a4:	cmp	r0, #0
   110a8:	bne	1108c <vetor_pesquisa@@Base+0x38>
   110ac:	mov	r0, r4
   110b0:	ldrd	r4, [sp]
   110b4:	ldrd	r6, [sp, #8]
   110b8:	ldr	r8, [sp, #16]
   110bc:	add	sp, sp, #20
   110c0:	pop	{pc}		; (ldr pc, [sp], #4)
   110c4:	mvn	r4, #0
   110c8:	b	110ac <vetor_pesquisa@@Base+0x58>

000110cc <vetor_ordena@@Base>:
   110cc:	cmp	r0, #0
   110d0:	beq	11174 <vetor_ordena@@Base+0xa8>
   110d4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   110d8:	strd	r6, [sp, #8]
   110dc:	strd	sl, [sp, #24]
   110e0:	ldr	sl, [r0]
   110e4:	strd	r8, [sp, #16]
   110e8:	str	lr, [sp, #32]
   110ec:	sub	sp, sp, #12
   110f0:	cmp	sl, #1
   110f4:	ble	11154 <vetor_ordena@@Base+0x88>
   110f8:	ldr	r3, [r0, #8]
   110fc:	mov	r8, #1
   11100:	mov	r9, r3
   11104:	str	r3, [sp, #4]
   11108:	ldr	r7, [r9, #4]!
   1110c:	mov	r5, r8
   11110:	mov	r4, r9
   11114:	ldr	r6, [r4, #-4]
   11118:	mov	r0, r7
   1111c:	mov	fp, r4
   11120:	mov	r1, r6
   11124:	bl	109a0 <strcmp@plt>
   11128:	cmp	r0, #0
   1112c:	bge	11144 <vetor_ordena@@Base+0x78>
   11130:	subs	r5, r5, #1
   11134:	str	r6, [r4]
   11138:	sub	r4, fp, #4
   1113c:	bne	11114 <vetor_ordena@@Base+0x48>
   11140:	ldr	fp, [sp, #4]
   11144:	add	r8, r8, #1
   11148:	str	r7, [fp]
   1114c:	cmp	r8, sl
   11150:	bne	11108 <vetor_ordena@@Base+0x3c>
   11154:	mov	r0, #0
   11158:	add	sp, sp, #12
   1115c:	ldrd	r4, [sp]
   11160:	ldrd	r6, [sp, #8]
   11164:	ldrd	r8, [sp, #16]
   11168:	ldrd	sl, [sp, #24]
   1116c:	add	sp, sp, #32
   11170:	pop	{pc}		; (ldr pc, [sp], #4)
   11174:	mvn	r0, #0
   11178:	bx	lr

0001117c <vetor_concatena@@Base>:
   1117c:	cmp	r1, #0
   11180:	cmpne	r0, #0
   11184:	strd	r4, [sp, #-16]!
   11188:	str	r6, [sp, #8]
   1118c:	moveq	r6, #0
   11190:	str	lr, [sp, #12]
   11194:	beq	111e4 <vetor_concatena@@Base+0x68>
   11198:	mov	r4, r1
   1119c:	mov	r5, r0
   111a0:	bl	10d20 <vetor_novo@@Base>
   111a4:	ldm	r4, {r1, ip}
   111a8:	mov	r6, r0
   111ac:	ldrd	r2, [r5]
   111b0:	add	lr, r2, r1, lsl #2
   111b4:	ldr	r0, [r2, r1, lsl #2]
   111b8:	add	r3, r3, ip
   111bc:	str	lr, [r6, #8]
   111c0:	ldr	r2, [r5, #8]
   111c4:	ldr	r1, [r2]
   111c8:	str	r3, [r6, #4]
   111cc:	bl	109f4 <strcpy@plt>
   111d0:	ldr	r2, [r4, #8]
   111d4:	ldr	r3, [r6, #8]
   111d8:	ldr	r1, [r2]
   111dc:	ldr	r0, [r3]
   111e0:	bl	109e8 <strcat@plt>
   111e4:	mov	r0, r6
   111e8:	ldrd	r4, [sp]
   111ec:	ldr	r6, [sp, #8]
   111f0:	add	sp, sp, #12
   111f4:	pop	{pc}		; (ldr pc, [sp], #4)

000111f8 <vetor_inverte@@Base>:
   111f8:	strd	r4, [sp, #-16]!
   111fc:	mov	r4, r0
   11200:	str	r6, [sp, #8]
   11204:	str	lr, [sp, #12]
   11208:	bl	10e80 <vetor_tamanho@@Base>
   1120c:	cmp	r0, #0
   11210:	ble	11250 <vetor_inverte@@Base+0x58>
   11214:	ldr	r2, [r4, #8]
   11218:	mov	r3, r0
   1121c:	add	r1, r2, r0, lsl #2
   11220:	sub	r2, r2, #4
   11224:	ldr	ip, [r2, #4]!
   11228:	sub	r3, r3, #1
   1122c:	cmp	r0, r3
   11230:	sub	r4, r0, r3
   11234:	ldr	lr, [r1]
   11238:	movlt	r5, r0
   1123c:	movge	r5, r3
   11240:	cmp	r5, r4
   11244:	str	lr, [r2]
   11248:	str	ip, [r1], #-4
   1124c:	bgt	11224 <vetor_inverte@@Base+0x2c>
   11250:	ldrd	r4, [sp]
   11254:	mov	r0, #0
   11258:	ldr	r6, [sp, #8]
   1125c:	add	sp, sp, #12
   11260:	pop	{pc}		; (ldr pc, [sp], #4)

00011264 <vetor_baralha@@Base>:
   11264:	strd	r4, [sp, #-20]!	; 0xffffffec
   11268:	strd	r6, [sp, #8]
   1126c:	ldr	r6, [r0]
   11270:	str	lr, [sp, #16]
   11274:	sub	sp, sp, #12
   11278:	bl	10d20 <vetor_novo@@Base>
   1127c:	mov	r7, r0
   11280:	add	r0, sp, #4
   11284:	bl	109d0 <time@plt>
   11288:	bl	10a3c <srand@plt>
   1128c:	cmp	r6, #0
   11290:	ble	112c8 <vetor_baralha@@Base+0x64>
   11294:	add	r5, r6, #1
   11298:	mov	r4, #0
   1129c:	bl	10a48 <rand@plt>
   112a0:	sdiv	r2, r0, r5
   112a4:	ldr	r3, [r7, #8]
   112a8:	ldr	r1, [r3, r4, lsl #2]
   112ac:	mls	r0, r2, r5, r0
   112b0:	ldr	r2, [r3, r0, lsl #2]
   112b4:	str	r2, [r3, r4, lsl #2]
   112b8:	add	r4, r4, #1
   112bc:	cmp	r6, r4
   112c0:	str	r1, [r3, r0, lsl #2]
   112c4:	bne	1129c <vetor_baralha@@Base+0x38>
   112c8:	mov	r0, r7
   112cc:	add	sp, sp, #12
   112d0:	ldrd	r4, [sp]
   112d4:	ldrd	r6, [sp, #8]
   112d8:	add	sp, sp, #16
   112dc:	pop	{pc}		; (ldr pc, [sp], #4)

000112e0 <__libc_csu_init@@Base>:
   112e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   112e4:	mov	r7, r0
   112e8:	ldr	r6, [pc, #72]	; 11338 <__libc_csu_init@@Base+0x58>
   112ec:	ldr	r5, [pc, #72]	; 1133c <__libc_csu_init@@Base+0x5c>
   112f0:	add	r6, pc, r6
   112f4:	add	r5, pc, r5
   112f8:	sub	r6, r6, r5
   112fc:	mov	r8, r1
   11300:	mov	r9, r2
   11304:	bl	10974 <calloc@plt-0x20>
   11308:	asrs	r6, r6, #2
   1130c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11310:	mov	r4, #0
   11314:	add	r4, r4, #1
   11318:	ldr	r3, [r5], #4
   1131c:	mov	r2, r9
   11320:	mov	r1, r8
   11324:	mov	r0, r7
   11328:	blx	r3
   1132c:	cmp	r6, r4
   11330:	bne	11314 <__libc_csu_init@@Base+0x34>
   11334:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11338:	andeq	r0, r1, ip, lsl ip
   1133c:	andeq	r0, r1, r4, lsl ip

00011340 <__libc_csu_fini@@Base>:
   11340:	bx	lr

Disassembly of section .fini:

00011344 <.fini>:
   11344:	push	{r3, lr}
   11348:	pop	{r3, pc}
