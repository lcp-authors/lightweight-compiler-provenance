
../repos/eddieantonio-ocreval-3ab279a/wordaccsum/wordaccsum:     file format elf32-littlearm


Disassembly of section .init:

000107a8 <.init>:
   107a8:	push	{r3, lr}
   107ac:	bl	1091c <abort@plt+0x4c>
   107b0:	pop	{r3, pc}

Disassembly of section .plt:

000107b4 <calloc@plt-0x14>:
   107b4:	push	{lr}		; (str lr, [sp, #-4]!)
   107b8:	ldr	lr, [pc, #4]	; 107c4 <calloc@plt-0x4>
   107bc:	add	lr, pc, lr
   107c0:	ldr	pc, [lr, #8]!
   107c4:	andeq	r2, r1, ip, lsr r8

000107c8 <calloc@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2108]!	; 0x83c

000107d4 <strcmp@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2100]!	; 0x834

000107e0 <strtol@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2092]!	; 0x82c

000107ec <fopen@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2084]!	; 0x824

000107f8 <free@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2076]!	; 0x81c

00010804 <fgets@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2068]!	; 0x814

00010810 <strdup@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2060]!	; 0x80c

0001081c <unlink@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2052]!	; 0x804

00010828 <__xstat@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2044]!	; 0x7fc

00010834 <fwrite@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2036]!	; 0x7f4

00010840 <__libc_start_main@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2028]!	; 0x7ec

0001084c <__sysv_signal@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2020]!	; 0x7e4

00010858 <__gmon_start__@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2012]!	; 0x7dc

00010864 <getpid@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2004]!	; 0x7d4

00010870 <exit@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1996]!	; 0x7cc

0001087c <strlen@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1988]!	; 0x7c4

00010888 <fprintf@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1980]!	; 0x7bc

00010894 <__isoc99_sscanf@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1972]!	; 0x7b4

000108a0 <fclose@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1964]!	; 0x7ac

000108ac <fputc@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1956]!	; 0x7a4

000108b8 <sprintf@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1948]!	; 0x79c

000108c4 <strncmp@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1940]!	; 0x794

000108d0 <abort@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1932]!	; 0x78c

Disassembly of section .text:

000108e0 <error@@Base-0x63c>:
   108e0:	mov	fp, #0
   108e4:	mov	lr, #0
   108e8:	pop	{r1}		; (ldr r1, [sp], #4)
   108ec:	mov	r2, sp
   108f0:	push	{r2}		; (str r2, [sp, #-4]!)
   108f4:	push	{r0}		; (str r0, [sp, #-4]!)
   108f8:	ldr	ip, [pc, #16]	; 10910 <abort@plt+0x40>
   108fc:	push	{ip}		; (str ip, [sp, #-4]!)
   10900:	ldr	r0, [pc, #12]	; 10914 <abort@plt+0x44>
   10904:	ldr	r3, [pc, #12]	; 10918 <abort@plt+0x48>
   10908:	bl	10840 <__libc_start_main@plt>
   1090c:	bl	108d0 <abort@plt>
   10910:	andeq	r2, r1, r8, lsr r5
   10914:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10918:	ldrdeq	r2, [r1], -r8
   1091c:	ldr	r3, [pc, #20]	; 10938 <abort@plt+0x68>
   10920:	ldr	r2, [pc, #20]	; 1093c <abort@plt+0x6c>
   10924:	add	r3, pc, r3
   10928:	ldr	r2, [r3, r2]
   1092c:	cmp	r2, #0
   10930:	bxeq	lr
   10934:	b	10858 <__gmon_start__@plt>
   10938:	ldrdeq	r2, [r1], -r4
   1093c:	andeq	r0, r0, r4, ror r0
   10940:	ldr	r0, [pc, #24]	; 10960 <abort@plt+0x90>
   10944:	ldr	r3, [pc, #24]	; 10964 <abort@plt+0x94>
   10948:	cmp	r3, r0
   1094c:	bxeq	lr
   10950:	ldr	r3, [pc, #16]	; 10968 <abort@plt+0x98>
   10954:	cmp	r3, #0
   10958:	bxeq	lr
   1095c:	bx	r3
   10960:	andeq	r3, r2, r0, lsr #1
   10964:	andeq	r3, r2, r0, lsr #1
   10968:	andeq	r0, r0, r0
   1096c:	ldr	r0, [pc, #36]	; 10998 <abort@plt+0xc8>
   10970:	ldr	r1, [pc, #36]	; 1099c <abort@plt+0xcc>
   10974:	sub	r1, r1, r0
   10978:	asr	r1, r1, #2
   1097c:	add	r1, r1, r1, lsr #31
   10980:	asrs	r1, r1, #1
   10984:	bxeq	lr
   10988:	ldr	r3, [pc, #16]	; 109a0 <abort@plt+0xd0>
   1098c:	cmp	r3, #0
   10990:	bxeq	lr
   10994:	bx	r3
   10998:	andeq	r3, r2, r0, lsr #1
   1099c:	andeq	r3, r2, r0, lsr #1
   109a0:	andeq	r0, r0, r0
   109a4:	push	{r4, lr}
   109a8:	ldr	r4, [pc, #24]	; 109c8 <abort@plt+0xf8>
   109ac:	ldrb	r3, [r4]
   109b0:	cmp	r3, #0
   109b4:	popne	{r4, pc}
   109b8:	bl	10940 <abort@plt+0x70>
   109bc:	mov	r3, #1
   109c0:	strb	r3, [r4]
   109c4:	pop	{r4, pc}
   109c8:	andeq	r3, r2, r0, lsr #1
   109cc:	b	1096c <abort@plt+0x9c>
   109d0:	push	{fp, lr}
   109d4:	mov	fp, sp
   109d8:	sub	sp, sp, #8
   109dc:	str	r0, [sp, #4]
   109e0:	add	r0, sp, #4
   109e4:	mov	r3, #0
   109e8:	mov	r4, r1
   109ec:	mov	r6, #0
   109f0:	ldr	r2, [pc, #84]	; 10a4c <abort@plt+0x17c>
   109f4:	add	r2, pc, r2
   109f8:	bl	10c94 <abort@plt+0x3c4>
   109fc:	ldr	r0, [sp, #4]
   10a00:	cmp	r0, #2
   10a04:	blt	10a40 <abort@plt+0x170>
   10a08:	ldr	r5, [pc, #64]	; 10a50 <abort@plt+0x180>
   10a0c:	ldr	r5, [pc, r5]
   10a10:	ldr	r1, [r4, r6, lsl #2]
   10a14:	mov	r0, r5
   10a18:	bl	111c8 <error@@Base+0x2ac>
   10a1c:	ldr	r0, [sp, #4]
   10a20:	add	r6, r6, #1
   10a24:	cmp	r6, r0
   10a28:	blt	10a10 <abort@plt+0x140>
   10a2c:	ldr	r0, [pc, #32]	; 10a54 <abort@plt+0x184>
   10a30:	mov	r1, #0
   10a34:	ldr	r0, [pc, r0]
   10a38:	bl	11678 <error@@Base+0x75c>
   10a3c:	bl	10ed8 <abort@plt+0x608>
   10a40:	ldr	r0, [pc, #16]	; 10a58 <abort@plt+0x188>
   10a44:	add	r0, pc, r0
   10a48:	bl	10f1c <error@@Base>
   10a4c:	andeq	r1, r0, ip, asr #22
   10a50:	andeq	r2, r1, r8, ror #12
   10a54:	andeq	r2, r1, r0, asr #12
   10a58:	andeq	r1, r0, r0, lsr fp
   10a5c:	push	{fp, lr}
   10a60:	mov	fp, sp
   10a64:	bl	107c8 <calloc@plt>
   10a68:	cmp	r0, #0
   10a6c:	popne	{fp, pc}
   10a70:	ldr	r0, [pc, #4]	; 10a7c <abort@plt+0x1ac>
   10a74:	add	r0, pc, r0
   10a78:	bl	10f1c <error@@Base>
   10a7c:	andeq	r1, r0, r7, lsl fp
   10a80:	push	{r4, r5, r6, sl, fp, lr}
   10a84:	add	fp, sp, #16
   10a88:	ldrb	r3, [r0]
   10a8c:	ldrb	ip, [r1]
   10a90:	mov	r2, r0
   10a94:	mov	r0, #0
   10a98:	cmp	r3, #0
   10a9c:	beq	10ad4 <abort@plt+0x204>
   10aa0:	add	r6, r2, #1
   10aa4:	add	lr, r1, #1
   10aa8:	mov	r2, #0
   10aac:	uxtb	r4, ip
   10ab0:	uxtb	r5, r3
   10ab4:	cmp	r5, r4
   10ab8:	bne	10ae4 <abort@plt+0x214>
   10abc:	ldrb	r3, [r6, r2]
   10ac0:	ldrb	ip, [lr, r2]
   10ac4:	add	r2, r2, #1
   10ac8:	cmp	r3, #0
   10acc:	bne	10aac <abort@plt+0x1dc>
   10ad0:	b	10ad8 <abort@plt+0x208>
   10ad4:	mov	r2, #0
   10ad8:	cmp	ip, #0
   10adc:	popeq	{r4, r5, r6, sl, fp, pc}
   10ae0:	mov	r3, #0
   10ae4:	ldrb	r1, [r1, r2]
   10ae8:	uxtb	r2, r3
   10aec:	mov	r0, #1
   10af0:	cmp	r2, r1
   10af4:	mvncc	r0, #0
   10af8:	pop	{r4, r5, r6, sl, fp, pc}
   10afc:	push	{r4, r5, fp, lr}
   10b00:	add	fp, sp, #8
   10b04:	mov	r5, r1
   10b08:	cmp	r0, #0
   10b0c:	beq	10b40 <abort@plt+0x270>
   10b10:	mov	r1, r5
   10b14:	mov	r4, r0
   10b18:	bl	107ec <fopen@plt>
   10b1c:	cmp	r0, #0
   10b20:	popne	{r4, r5, fp, pc}
   10b24:	ldrb	r0, [r5]
   10b28:	cmp	r0, #119	; 0x77
   10b2c:	bne	10b64 <abort@plt+0x294>
   10b30:	ldr	r0, [pc, #72]	; 10b80 <abort@plt+0x2b0>
   10b34:	mov	r1, r4
   10b38:	add	r0, pc, r0
   10b3c:	bl	10f6c <error@@Base+0x50>
   10b40:	ldrb	r0, [r5]
   10b44:	ldr	r1, [pc, #40]	; 10b74 <abort@plt+0x2a4>
   10b48:	ldr	r1, [pc, r1]
   10b4c:	ldr	r2, [pc, #36]	; 10b78 <abort@plt+0x2a8>
   10b50:	cmp	r0, #114	; 0x72
   10b54:	ldr	r2, [pc, r2]
   10b58:	moveq	r2, r1
   10b5c:	ldr	r0, [r2]
   10b60:	pop	{r4, r5, fp, pc}
   10b64:	ldr	r0, [pc, #16]	; 10b7c <abort@plt+0x2ac>
   10b68:	mov	r1, r4
   10b6c:	add	r0, pc, r0
   10b70:	bl	10f6c <error@@Base+0x50>
   10b74:	andeq	r2, r1, r4, lsr r5
   10b78:	andeq	r2, r1, ip, lsr #10
   10b7c:	andeq	r1, r0, pc, asr #20
   10b80:	andeq	r1, r0, sp, ror #20
   10b84:	ldr	r1, [pc, #32]	; 10bac <abort@plt+0x2dc>
   10b88:	ldr	r1, [pc, r1]
   10b8c:	ldr	r1, [r1]
   10b90:	cmp	r1, r0
   10b94:	ldrne	r1, [pc, #20]	; 10bb0 <abort@plt+0x2e0>
   10b98:	ldrne	r1, [pc, r1]
   10b9c:	ldrne	r1, [r1]
   10ba0:	cmpne	r1, r0
   10ba4:	bxeq	lr
   10ba8:	b	108a0 <fclose@plt>
   10bac:	strdeq	r2, [r1], -r4
   10bb0:	andeq	r2, r1, r8, ror #9
   10bb4:	push	{fp, lr}
   10bb8:	mov	fp, sp
   10bbc:	sub	sp, sp, #88	; 0x58
   10bc0:	mov	r1, r0
   10bc4:	mov	r2, sp
   10bc8:	mov	r0, #3
   10bcc:	bl	10828 <__xstat@plt>
   10bd0:	clz	r0, r0
   10bd4:	lsr	r0, r0, #5
   10bd8:	mov	sp, fp
   10bdc:	pop	{fp, pc}
   10be0:	push	{r4, r5, fp, lr}
   10be4:	add	fp, sp, #8
   10be8:	sub	sp, sp, #104	; 0x68
   10bec:	ldr	r0, [pc, #92]	; 10c50 <abort@plt+0x380>
   10bf0:	add	r0, pc, r0
   10bf4:	ldrh	r1, [r0]
   10bf8:	add	r5, r1, #1
   10bfc:	strh	r5, [r0]
   10c00:	ldr	r0, [pc, #76]	; 10c54 <abort@plt+0x384>
   10c04:	ldr	r0, [pc, r0]
   10c08:	ldr	r4, [r0]
   10c0c:	bl	10864 <getpid@plt>
   10c10:	mov	r3, r0
   10c14:	sxth	r0, r5
   10c18:	add	r5, sp, #4
   10c1c:	mov	r2, r4
   10c20:	str	r0, [sp]
   10c24:	mov	r0, r5
   10c28:	ldr	r1, [pc, #40]	; 10c58 <abort@plt+0x388>
   10c2c:	add	r1, pc, r1
   10c30:	bl	108b8 <sprintf@plt>
   10c34:	mov	r0, r5
   10c38:	bl	10810 <strdup@plt>
   10c3c:	mov	r4, r0
   10c40:	bl	1081c <unlink@plt>
   10c44:	mov	r0, r4
   10c48:	sub	sp, fp, #8
   10c4c:	pop	{r4, r5, fp, pc}
   10c50:	andeq	r2, r1, sl, lsr #9
   10c54:	andeq	r2, r1, ip, ror #8
   10c58:			; <UNDEFINED> instruction: 0x000019b8
   10c5c:	push	{r4, sl, fp, lr}
   10c60:	add	fp, sp, #8
   10c64:	mov	r4, r0
   10c68:	bl	1087c <strlen@plt>
   10c6c:	sub	r0, r0, #1
   10c70:	sxth	r0, r0
   10c74:	cmp	r0, #0
   10c78:	blt	10c88 <abort@plt+0x3b8>
   10c7c:	ldrb	r1, [r4, r0]
   10c80:	cmp	r1, #47	; 0x2f
   10c84:	bne	10c6c <abort@plt+0x39c>
   10c88:	add	r0, r4, r0
   10c8c:	add	r0, r0, #1
   10c90:	pop	{r4, sl, fp, pc}
   10c94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c98:	add	fp, sp, #28
   10c9c:	sub	sp, sp, #12
   10ca0:	str	r2, [sp]
   10ca4:	stmib	sp, {r0, r1}
   10ca8:	mov	r6, r3
   10cac:	ldr	r4, [r1]
   10cb0:	mov	r0, r4
   10cb4:	bl	1087c <strlen@plt>
   10cb8:	sub	r0, r0, #1
   10cbc:	sxth	r0, r0
   10cc0:	cmp	r0, #0
   10cc4:	blt	10cd4 <abort@plt+0x404>
   10cc8:	ldrb	r1, [r4, r0]
   10ccc:	cmp	r1, #47	; 0x2f
   10cd0:	bne	10cb8 <abort@plt+0x3e8>
   10cd4:	ldr	r1, [pc, #484]	; 10ec0 <abort@plt+0x5f0>
   10cd8:	add	r0, r4, r0
   10cdc:	add	r0, r0, #1
   10ce0:	ldr	r1, [pc, r1]
   10ce4:	str	r0, [r1]
   10ce8:	mov	r0, #2
   10cec:	ldr	r4, [pc, #464]	; 10ec4 <abort@plt+0x5f4>
   10cf0:	add	r4, pc, r4
   10cf4:	mov	r1, r4
   10cf8:	bl	1084c <__sysv_signal@plt>
   10cfc:	mov	r0, #15
   10d00:	mov	r1, r4
   10d04:	bl	1084c <__sysv_signal@plt>
   10d08:	ldr	r0, [sp, #4]
   10d0c:	ldr	r5, [r0]
   10d10:	cmp	r5, #1
   10d14:	bne	10d2c <abort@plt+0x45c>
   10d18:	ldr	r0, [pc, #424]	; 10ec8 <abort@plt+0x5f8>
   10d1c:	ldr	r0, [pc, r0]
   10d20:	ldrb	r0, [r0]
   10d24:	cmp	r0, #0
   10d28:	bne	10ea8 <abort@plt+0x5d8>
   10d2c:	ldr	ip, [sp, #8]
   10d30:	mov	r8, #0
   10d34:	cmp	r5, #2
   10d38:	blt	10e84 <abort@plt+0x5b4>
   10d3c:	mov	r8, #0
   10d40:	mov	r7, #1
   10d44:	mov	r9, #1
   10d48:	ldr	r4, [ip, r7, lsl #2]
   10d4c:	ldrb	r0, [r4]
   10d50:	cmp	r0, #45	; 0x2d
   10d54:	bne	10e2c <abort@plt+0x55c>
   10d58:	ldrb	sl, [r4, #1]
   10d5c:	cmp	sl, #0
   10d60:	beq	10e2c <abort@plt+0x55c>
   10d64:	mov	r0, r4
   10d68:	bl	1087c <strlen@plt>
   10d6c:	mov	r2, r0
   10d70:	ldr	r0, [pc, #340]	; 10ecc <abort@plt+0x5fc>
   10d74:	mov	r1, r4
   10d78:	add	r0, pc, r0
   10d7c:	bl	108c4 <strncmp@plt>
   10d80:	cmp	r0, #0
   10d84:	beq	10ea8 <abort@plt+0x5d8>
   10d88:	ldr	ip, [sp, #8]
   10d8c:	add	r1, r7, #1
   10d90:	mov	r0, #0
   10d94:	cmp	r1, r5
   10d98:	ldrlt	r0, [ip, r1, lsl #2]
   10d9c:	cmp	r6, #0
   10da0:	ldrbne	r2, [r6]
   10da4:	cmpne	r2, #0
   10da8:	beq	10e98 <abort@plt+0x5c8>
   10dac:	mov	r1, #0
   10db0:	cmp	sl, r2
   10db4:	beq	10ddc <abort@plt+0x50c>
   10db8:	mov	r2, #1
   10dbc:	sxth	r1, r2
   10dc0:	add	r3, r1, r1, lsl #1
   10dc4:	ldrb	r3, [r6, r3, lsl #2]
   10dc8:	cmp	r3, #0
   10dcc:	beq	10e98 <abort@plt+0x5c8>
   10dd0:	add	r2, r2, #1
   10dd4:	cmp	sl, r3
   10dd8:	bne	10dbc <abort@plt+0x4ec>
   10ddc:	add	r1, r1, r1, lsl #1
   10de0:	add	r3, r6, r1, lsl #2
   10de4:	ldr	r1, [r3, #4]
   10de8:	cmp	r1, #0
   10dec:	beq	10e4c <abort@plt+0x57c>
   10df0:	mov	r2, r4
   10df4:	cmp	r0, #0
   10df8:	ldrb	r7, [r2, #2]!
   10dfc:	cmpeq	r7, #0
   10e00:	beq	10e4c <abort@plt+0x57c>
   10e04:	ldr	r3, [r1]
   10e08:	cmp	r3, #0
   10e0c:	bne	10eb0 <abort@plt+0x5e0>
   10e10:	cmp	r7, #0
   10e14:	movne	r0, r2
   10e18:	str	r0, [r1]
   10e1c:	ldrb	r0, [r2]
   10e20:	cmp	r0, #0
   10e24:	addeq	r9, r9, #1
   10e28:	b	10e38 <abort@plt+0x568>
   10e2c:	sxth	r0, r8
   10e30:	add	r8, r8, #1
   10e34:	str	r4, [ip, r0, lsl #2]
   10e38:	add	r9, r9, #1
   10e3c:	sxth	r7, r9
   10e40:	cmp	r5, r7
   10e44:	bgt	10d48 <abort@plt+0x478>
   10e48:	b	10e84 <abort@plt+0x5b4>
   10e4c:	ldr	r0, [r3, #8]
   10e50:	cmp	r0, #0
   10e54:	beq	10e98 <abort@plt+0x5c8>
   10e58:	ldrb	r1, [r4, #2]
   10e5c:	cmp	r1, #0
   10e60:	bne	10e98 <abort@plt+0x5c8>
   10e64:	ldrb	r1, [r0]
   10e68:	cmp	r1, #0
   10e6c:	bne	10eb0 <abort@plt+0x5e0>
   10e70:	mov	r1, #1
   10e74:	strb	r1, [r0]
   10e78:	ldr	r0, [sp, #4]
   10e7c:	ldr	r5, [r0]
   10e80:	b	10e38 <abort@plt+0x568>
   10e84:	ldr	r1, [sp, #4]
   10e88:	sxth	r0, r8
   10e8c:	str	r0, [r1]
   10e90:	sub	sp, fp, #28
   10e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10e98:	ldr	r0, [pc, #52]	; 10ed4 <abort@plt+0x604>
   10e9c:	mov	r1, r4
   10ea0:	add	r0, pc, r0
   10ea4:	bl	10f6c <error@@Base+0x50>
   10ea8:	ldr	r0, [sp]
   10eac:	bl	11048 <error@@Base+0x12c>
   10eb0:	ldr	r0, [pc, #24]	; 10ed0 <abort@plt+0x600>
   10eb4:	mov	r1, r4
   10eb8:	add	r0, pc, r0
   10ebc:	bl	10f6c <error@@Base+0x50>
   10ec0:	muleq	r1, r0, r3
   10ec4:	andeq	r0, r0, r8, lsl r3
   10ec8:	andeq	r2, r1, r4, asr #6
   10ecc:	andeq	r1, r0, r9, lsl #17
   10ed0:	andeq	r1, r0, sp, ror #14
   10ed4:	andeq	r1, r0, r6, ror r7
   10ed8:	push	{fp, lr}
   10edc:	mov	fp, sp
   10ee0:	mov	r0, #0
   10ee4:	bl	10ee8 <abort@plt+0x618>
   10ee8:	push	{fp, lr}
   10eec:	mov	fp, sp
   10ef0:	mov	r4, r0
   10ef4:	ldr	r0, [pc, #28]	; 10f18 <abort@plt+0x648>
   10ef8:	ldr	r0, [pc, r0]
   10efc:	ldr	r0, [r0]
   10f00:	cmp	r0, #0
   10f04:	beq	10f0c <abort@plt+0x63c>
   10f08:	blx	r0
   10f0c:	bl	110a8 <error@@Base+0x18c>
   10f10:	mov	r0, r4
   10f14:	bl	10870 <exit@plt>
   10f18:	andeq	r2, r1, r0, lsl #3

00010f1c <error@@Base>:
   10f1c:	push	{fp, lr}
   10f20:	mov	fp, sp
   10f24:	mov	r3, r0
   10f28:	ldr	r0, [pc, #44]	; 10f5c <error@@Base+0x40>
   10f2c:	ldr	r0, [pc, r0]
   10f30:	ldr	r2, [r0]
   10f34:	ldr	r0, [pc, #36]	; 10f60 <error@@Base+0x44>
   10f38:	ldr	r0, [pc, r0]
   10f3c:	ldr	r0, [r0]
   10f40:	ldr	r1, [pc, #28]	; 10f64 <error@@Base+0x48>
   10f44:	add	r1, pc, r1
   10f48:	bl	10888 <fprintf@plt>
   10f4c:	ldr	r0, [pc, #20]	; 10f68 <error@@Base+0x4c>
   10f50:	ldr	r0, [pc, r0]
   10f54:	ldr	r0, [r0]
   10f58:	bl	10ee8 <abort@plt+0x618>
   10f5c:	andeq	r2, r1, r4, asr #2
   10f60:	andeq	r2, r1, r0, lsr r1
   10f64:	andeq	r1, r0, fp, lsl #13
   10f68:	andeq	r2, r1, r4, lsr r1
   10f6c:	push	{fp, lr}
   10f70:	mov	fp, sp
   10f74:	sub	sp, sp, #8
   10f78:	mov	r3, r0
   10f7c:	ldr	r0, [pc, #48]	; 10fb4 <error@@Base+0x98>
   10f80:	ldr	r0, [pc, r0]
   10f84:	ldr	r2, [r0]
   10f88:	ldr	r0, [pc, #40]	; 10fb8 <error@@Base+0x9c>
   10f8c:	ldr	r0, [pc, r0]
   10f90:	str	r1, [sp]
   10f94:	ldr	r0, [r0]
   10f98:	ldr	r1, [pc, #28]	; 10fbc <error@@Base+0xa0>
   10f9c:	add	r1, pc, r1
   10fa0:	bl	10888 <fprintf@plt>
   10fa4:	ldr	r0, [pc, #20]	; 10fc0 <error@@Base+0xa4>
   10fa8:	ldr	r0, [pc, r0]
   10fac:	ldr	r0, [r0]
   10fb0:	bl	10ee8 <abort@plt+0x618>
   10fb4:	strdeq	r2, [r1], -r0
   10fb8:	ldrdeq	r2, [r1], -ip
   10fbc:	andeq	r1, r0, fp, lsr r6
   10fc0:	ldrdeq	r2, [r1], -ip
   10fc4:	push	{fp, lr}
   10fc8:	mov	fp, sp
   10fcc:	sub	sp, sp, #8
   10fd0:	mov	r3, r0
   10fd4:	ldr	r0, [pc, #40]	; 11004 <error@@Base+0xe8>
   10fd8:	ldr	r0, [pc, r0]
   10fdc:	ldr	r2, [r0]
   10fe0:	ldr	r0, [pc, #32]	; 11008 <error@@Base+0xec>
   10fe4:	ldr	r0, [pc, r0]
   10fe8:	str	r1, [sp]
   10fec:	ldr	r0, [r0]
   10ff0:	ldr	r1, [pc, #20]	; 1100c <error@@Base+0xf0>
   10ff4:	add	r1, pc, r1
   10ff8:	bl	10888 <fprintf@plt>
   10ffc:	mov	sp, fp
   11000:	pop	{fp, pc}
   11004:	muleq	r1, r8, r0
   11008:	andeq	r2, r1, r4, lsl #1
   1100c:	andeq	r1, r0, r3, ror #11
   11010:	ldr	r0, [pc, #40]	; 11040 <error@@Base+0x124>
   11014:	add	r0, pc, r0
   11018:	ldrb	r1, [r0]
   1101c:	cmp	r1, #1
   11020:	bxeq	lr
   11024:	push	{fp, lr}
   11028:	mov	fp, sp
   1102c:	mov	r1, #1
   11030:	strb	r1, [r0]
   11034:	ldr	r0, [pc, #8]	; 11044 <error@@Base+0x128>
   11038:	add	r0, pc, r0
   1103c:	bl	10f1c <error@@Base>
   11040:	andeq	r2, r1, r8, lsl #1
   11044:			; <UNDEFINED> instruction: 0x000015ba
   11048:	push	{fp, lr}
   1104c:	mov	fp, sp
   11050:	mov	r3, r0
   11054:	ldr	r0, [pc, #60]	; 11098 <error@@Base+0x17c>
   11058:	ldr	r0, [pc, r0]
   1105c:	ldr	r0, [r0]
   11060:	cmp	r0, #0
   11064:	bne	11090 <error@@Base+0x174>
   11068:	ldr	r0, [pc, #44]	; 1109c <error@@Base+0x180>
   1106c:	ldr	r0, [pc, r0]
   11070:	ldr	r2, [r0]
   11074:	ldr	r0, [pc, #36]	; 110a0 <error@@Base+0x184>
   11078:	ldr	r0, [pc, r0]
   1107c:	ldr	r0, [r0]
   11080:	ldr	r1, [pc, #28]	; 110a4 <error@@Base+0x188>
   11084:	add	r1, pc, r1
   11088:	bl	10888 <fprintf@plt>
   1108c:	bl	10ed8 <abort@plt+0x608>
   11090:	blx	r0
   11094:	bl	10ed8 <abort@plt+0x608>
   11098:	andeq	r2, r1, ip
   1109c:	andeq	r2, r1, r4
   110a0:	strdeq	r1, [r1], -r0
   110a4:	andeq	r1, r0, r3, lsl #11
   110a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   110ac:	add	fp, sp, #24
   110b0:	sub	sp, sp, #104	; 0x68
   110b4:	ldr	r8, [pc, #124]	; 11138 <error@@Base+0x21c>
   110b8:	add	r8, pc, r8
   110bc:	ldrsh	r0, [r8]
   110c0:	cmp	r0, #1
   110c4:	blt	11130 <error@@Base+0x214>
   110c8:	ldr	r9, [pc, #108]	; 1113c <error@@Base+0x220>
   110cc:	mov	r7, #1
   110d0:	add	r4, sp, #4
   110d4:	ldr	r9, [pc, r9]
   110d8:	ldr	r5, [pc, #96]	; 11140 <error@@Base+0x224>
   110dc:	add	r5, pc, r5
   110e0:	ldr	r6, [r9]
   110e4:	bl	10864 <getpid@plt>
   110e8:	mov	r3, r0
   110ec:	sxth	r0, r7
   110f0:	mov	r1, r5
   110f4:	mov	r2, r6
   110f8:	str	r0, [sp]
   110fc:	mov	r0, r4
   11100:	bl	108b8 <sprintf@plt>
   11104:	mov	r0, r4
   11108:	bl	10810 <strdup@plt>
   1110c:	mov	r6, r0
   11110:	bl	1081c <unlink@plt>
   11114:	mov	r0, r6
   11118:	bl	107f8 <free@plt>
   1111c:	add	r0, r7, #1
   11120:	sxth	r7, r0
   11124:	ldrsh	r0, [r8]
   11128:	cmp	r7, r0
   1112c:	ble	110e0 <error@@Base+0x1c4>
   11130:	sub	sp, fp, #24
   11134:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11138:	andeq	r1, r1, r2, ror #31
   1113c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11140:	andeq	r1, r0, r8, lsl #10
   11144:	andeq	r0, r0, r0
   11148:	ldm	r0, {r3, ip}
   1114c:	add	r1, r3, r1
   11150:	add	r2, ip, r2
   11154:	stm	r0, {r1, r2}
   11158:	bx	lr
   1115c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11160:	add	fp, sp, #24
   11164:	mov	r8, r3
   11168:	mov	r5, r2
   1116c:	mov	r4, r1
   11170:	mov	r6, r0
   11174:	bl	11fac <error@@Base+0x1090>
   11178:	mov	r7, r0
   1117c:	cmp	r0, #0
   11180:	bne	111ac <error@@Base+0x290>
   11184:	mov	r0, #1
   11188:	mov	r1, #20
   1118c:	bl	10a5c <abort@plt+0x18c>
   11190:	mov	r7, r0
   11194:	mov	r0, r4
   11198:	bl	10810 <strdup@plt>
   1119c:	str	r0, [r7, #8]
   111a0:	mov	r0, r6
   111a4:	mov	r1, r7
   111a8:	bl	1203c <error@@Base+0x1120>
   111ac:	ldr	r0, [r7, #12]
   111b0:	ldr	r1, [r7, #16]
   111b4:	add	r0, r0, r5
   111b8:	add	r1, r1, r8
   111bc:	str	r0, [r7, #12]
   111c0:	str	r1, [r7, #16]
   111c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   111c8:	push	{r4, r5, r6, r7, fp, lr}
   111cc:	add	fp, sp, #16
   111d0:	sub	sp, sp, #8
   111d4:	mov	r6, r1
   111d8:	ldr	r1, [pc, #488]	; 113c8 <error@@Base+0x4ac>
   111dc:	mov	r5, r0
   111e0:	mov	r0, r6
   111e4:	add	r1, pc, r1
   111e8:	bl	10afc <abort@plt+0x22c>
   111ec:	mov	r4, r0
   111f0:	ldr	r0, [pc, #468]	; 113cc <error@@Base+0x4b0>
   111f4:	mov	r1, #99	; 0x63
   111f8:	mov	r2, r4
   111fc:	add	r0, pc, r0
   11200:	bl	10804 <fgets@plt>
   11204:	cmp	r0, #0
   11208:	beq	113ac <error@@Base+0x490>
   1120c:	ldr	r0, [pc, #444]	; 113d0 <error@@Base+0x4b4>
   11210:	ldr	r1, [pc, #444]	; 113d4 <error@@Base+0x4b8>
   11214:	mov	r2, #45	; 0x2d
   11218:	add	r0, pc, r0
   1121c:	add	r1, pc, r1
   11220:	bl	108c4 <strncmp@plt>
   11224:	cmp	r0, #0
   11228:	bne	113ac <error@@Base+0x490>
   1122c:	ldr	r0, [pc, #420]	; 113d8 <error@@Base+0x4bc>
   11230:	mov	r1, #99	; 0x63
   11234:	mov	r2, r4
   11238:	add	r0, pc, r0
   1123c:	bl	10804 <fgets@plt>
   11240:	cmp	r0, #0
   11244:	beq	113ac <error@@Base+0x490>
   11248:	ldr	r0, [pc, #396]	; 113dc <error@@Base+0x4c0>
   1124c:	ldr	r1, [pc, #396]	; 113e0 <error@@Base+0x4c4>
   11250:	add	r0, pc, r0
   11254:	add	r1, pc, r1
   11258:	bl	107d4 <strcmp@plt>
   1125c:	cmp	r0, #0
   11260:	bne	113ac <error@@Base+0x490>
   11264:	ldr	r0, [pc, #376]	; 113e4 <error@@Base+0x4c8>
   11268:	mov	r1, #99	; 0x63
   1126c:	mov	r2, r4
   11270:	add	r0, pc, r0
   11274:	bl	10804 <fgets@plt>
   11278:	cmp	r0, #0
   1127c:	beq	113ac <error@@Base+0x490>
   11280:	ldr	r0, [pc, #352]	; 113e8 <error@@Base+0x4cc>
   11284:	ldr	r1, [pc, #352]	; 113ec <error@@Base+0x4d0>
   11288:	add	r2, sp, #4
   1128c:	add	r0, pc, r0
   11290:	add	r1, pc, r1
   11294:	bl	10894 <__isoc99_sscanf@plt>
   11298:	cmp	r0, #1
   1129c:	bne	113ac <error@@Base+0x490>
   112a0:	ldr	r0, [pc, #328]	; 113f0 <error@@Base+0x4d4>
   112a4:	mov	r1, #99	; 0x63
   112a8:	mov	r2, r4
   112ac:	add	r0, pc, r0
   112b0:	bl	10804 <fgets@plt>
   112b4:	cmp	r0, #0
   112b8:	beq	113ac <error@@Base+0x490>
   112bc:	ldr	r0, [pc, #304]	; 113f4 <error@@Base+0x4d8>
   112c0:	ldr	r1, [pc, #304]	; 113f8 <error@@Base+0x4dc>
   112c4:	mov	r2, sp
   112c8:	add	r0, pc, r0
   112cc:	add	r1, pc, r1
   112d0:	bl	10894 <__isoc99_sscanf@plt>
   112d4:	cmp	r0, #1
   112d8:	bne	113ac <error@@Base+0x490>
   112dc:	ldr	r0, [pc, #280]	; 113fc <error@@Base+0x4e0>
   112e0:	mov	r1, #99	; 0x63
   112e4:	mov	r2, r4
   112e8:	add	r0, pc, r0
   112ec:	bl	10804 <fgets@plt>
   112f0:	cmp	r0, #0
   112f4:	beq	113ac <error@@Base+0x490>
   112f8:	ldr	r0, [pc, #256]	; 11400 <error@@Base+0x4e4>
   112fc:	mov	r1, #99	; 0x63
   11300:	mov	r2, r4
   11304:	add	r0, pc, r0
   11308:	bl	10804 <fgets@plt>
   1130c:	cmp	r0, #0
   11310:	beq	113ac <error@@Base+0x490>
   11314:	ldm	r5, {r0, r1}
   11318:	ldr	r2, [sp, #4]
   1131c:	add	r0, r0, r2
   11320:	ldr	r2, [sp]
   11324:	add	r1, r1, r2
   11328:	stm	r5, {r0, r1}
   1132c:	add	r1, r5, #8
   11330:	mov	r0, r4
   11334:	bl	1140c <error@@Base+0x4f0>
   11338:	mov	r7, r0
   1133c:	add	r1, r5, #416	; 0x1a0
   11340:	mov	r0, r4
   11344:	bl	1140c <error@@Base+0x4f0>
   11348:	mov	r6, r0
   1134c:	add	r1, r5, #824	; 0x338
   11350:	mov	r0, r4
   11354:	bl	1140c <error@@Base+0x4f0>
   11358:	ldr	r0, [sp, #4]
   1135c:	cmp	r0, #1
   11360:	blt	1139c <error@@Base+0x480>
   11364:	add	r1, r5, #920	; 0x398
   11368:	mov	r0, r4
   1136c:	bl	1140c <error@@Base+0x4f0>
   11370:	cmp	r7, #1
   11374:	blt	11384 <error@@Base+0x468>
   11378:	add	r1, r5, #992	; 0x3e0
   1137c:	mov	r0, r4
   11380:	bl	11544 <error@@Base+0x628>
   11384:	cmp	r6, #1
   11388:	blt	1139c <error@@Base+0x480>
   1138c:	movw	r0, #9048	; 0x2358
   11390:	add	r1, r5, r0
   11394:	mov	r0, r4
   11398:	bl	11544 <error@@Base+0x628>
   1139c:	mov	r0, r4
   113a0:	bl	10b84 <abort@plt+0x2b4>
   113a4:	sub	sp, fp, #16
   113a8:	pop	{r4, r5, r6, r7, fp, pc}
   113ac:	ldr	r1, [pc, #80]	; 11404 <error@@Base+0x4e8>
   113b0:	ldr	r0, [pc, #80]	; 11408 <error@@Base+0x4ec>
   113b4:	cmp	r6, #0
   113b8:	add	r1, pc, r1
   113bc:	add	r0, pc, r0
   113c0:	movne	r1, r6
   113c4:	bl	10f6c <error@@Base+0x50>
   113c8:	andeq	r1, r0, r2, asr r4
   113cc:	andeq	r1, r1, r1, lsr #29
   113d0:	andeq	r1, r1, r5, lsl #29
   113d4:	andeq	r1, r0, ip, lsl r4
   113d8:	andeq	r1, r1, r5, ror #28
   113dc:	andeq	r1, r1, sp, asr #28
   113e0:	andeq	r1, r0, r4, lsl r4
   113e4:	andeq	r1, r1, sp, lsr #28
   113e8:	andeq	r1, r1, r1, lsl lr
   113ec:	andeq	r1, r0, sp, lsl #9
   113f0:	strdeq	r1, [r1], -r1	; <UNPREDICTABLE>
   113f4:	ldrdeq	r1, [r1], -r5
   113f8:	andeq	r1, r0, r1, asr r4
   113fc:			; <UNDEFINED> instruction: 0x00011db5
   11400:	muleq	r1, r9, sp
   11404:	strdeq	r1, [r0], -r2
   11408:	ldrdeq	r1, [r0], -ip
   1140c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11410:	add	fp, sp, #28
   11414:	sub	sp, sp, #12
   11418:	mov	r5, r0
   1141c:	ldr	r0, [pc, #268]	; 11530 <error@@Base+0x614>
   11420:	mov	r4, r1
   11424:	mov	r1, #99	; 0x63
   11428:	mov	r2, r5
   1142c:	add	r0, pc, r0
   11430:	bl	10804 <fgets@plt>
   11434:	mov	r6, #0
   11438:	cmp	r0, #0
   1143c:	beq	11524 <error@@Base+0x608>
   11440:	ldr	r0, [pc, #236]	; 11534 <error@@Base+0x618>
   11444:	mov	r1, #99	; 0x63
   11448:	mov	r2, r5
   1144c:	add	r0, pc, r0
   11450:	bl	10804 <fgets@plt>
   11454:	cmp	r0, #0
   11458:	beq	11524 <error@@Base+0x608>
   1145c:	ldr	r7, [pc, #212]	; 11538 <error@@Base+0x61c>
   11460:	mov	r1, #99	; 0x63
   11464:	mov	r2, r5
   11468:	add	r7, pc, r7
   1146c:	mov	r0, r7
   11470:	bl	10804 <fgets@plt>
   11474:	cmp	r0, #0
   11478:	beq	11524 <error@@Base+0x608>
   1147c:	mov	r6, #0
   11480:	add	r9, sp, #8
   11484:	add	sl, sp, #4
   11488:	add	r8, r7, #29
   1148c:	ldr	r1, [pc, #168]	; 1153c <error@@Base+0x620>
   11490:	mov	r0, r7
   11494:	mov	r2, r9
   11498:	mov	r3, sl
   1149c:	add	r1, pc, r1
   114a0:	bl	10894 <__isoc99_sscanf@plt>
   114a4:	cmp	r0, #2
   114a8:	bne	11524 <error@@Base+0x608>
   114ac:	mov	r0, r8
   114b0:	mov	r1, #0
   114b4:	mov	r2, #10
   114b8:	bl	107e0 <strtol@plt>
   114bc:	cmp	r0, #0
   114c0:	beq	114cc <error@@Base+0x5b0>
   114c4:	ldr	r1, [sp, #8]
   114c8:	b	114ec <error@@Base+0x5d0>
   114cc:	ldr	r1, [pc, #108]	; 11540 <error@@Base+0x624>
   114d0:	mov	r0, r8
   114d4:	add	r1, pc, r1
   114d8:	bl	107d4 <strcmp@plt>
   114dc:	ldr	r1, [sp, #8]
   114e0:	cmp	r0, #0
   114e4:	movwne	r0, #11
   114e8:	moveq	r6, r1
   114ec:	mov	r2, r4
   114f0:	ldr	r0, [r2, r0, lsl #3]!
   114f4:	add	r0, r0, r1
   114f8:	ldr	r1, [sp, #4]
   114fc:	str	r0, [r2]
   11500:	ldr	r0, [r2, #4]
   11504:	add	r0, r0, r1
   11508:	mov	r1, #99	; 0x63
   1150c:	str	r0, [r2, #4]
   11510:	mov	r0, r7
   11514:	mov	r2, r5
   11518:	bl	10804 <fgets@plt>
   1151c:	cmp	r0, #0
   11520:	bne	1148c <error@@Base+0x570>
   11524:	mov	r0, r6
   11528:	sub	sp, fp, #28
   1152c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11530:	andeq	r1, r1, r1, ror ip
   11534:	andeq	r1, r1, r1, asr ip
   11538:	andeq	r1, r1, r5, lsr ip
   1153c:	andeq	r1, r0, sp, ror r2
   11540:	andeq	r1, r0, sp, lsr r2
   11544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11548:	add	fp, sp, #28
   1154c:	sub	sp, sp, #12
   11550:	mov	r5, r0
   11554:	ldr	r0, [pc, #268]	; 11668 <error@@Base+0x74c>
   11558:	mov	r4, r1
   1155c:	mov	r1, #99	; 0x63
   11560:	mov	r2, r5
   11564:	add	r0, pc, r0
   11568:	bl	10804 <fgets@plt>
   1156c:	cmp	r0, #0
   11570:	beq	11660 <error@@Base+0x744>
   11574:	ldr	r0, [pc, #240]	; 1166c <error@@Base+0x750>
   11578:	mov	r1, #99	; 0x63
   1157c:	mov	r2, r5
   11580:	add	r0, pc, r0
   11584:	bl	10804 <fgets@plt>
   11588:	cmp	r0, #0
   1158c:	beq	11660 <error@@Base+0x744>
   11590:	ldr	r6, [pc, #216]	; 11670 <error@@Base+0x754>
   11594:	mov	r1, #99	; 0x63
   11598:	mov	r2, r5
   1159c:	add	r6, pc, r6
   115a0:	mov	r0, r6
   115a4:	bl	10804 <fgets@plt>
   115a8:	cmp	r0, #0
   115ac:	beq	11660 <error@@Base+0x744>
   115b0:	add	r7, r6, #29
   115b4:	ldr	r1, [pc, #184]	; 11674 <error@@Base+0x758>
   115b8:	mov	r0, r6
   115bc:	add	r2, sp, #8
   115c0:	add	r3, sp, #4
   115c4:	add	r1, pc, r1
   115c8:	bl	10894 <__isoc99_sscanf@plt>
   115cc:	cmp	r0, #2
   115d0:	bne	11660 <error@@Base+0x744>
   115d4:	mov	r0, r6
   115d8:	bl	1087c <strlen@plt>
   115dc:	ldr	r9, [sp, #8]
   115e0:	ldr	sl, [sp, #4]
   115e4:	add	r0, r6, r0
   115e8:	mov	r1, #0
   115ec:	strb	r1, [r0, #-1]
   115f0:	mov	r0, r4
   115f4:	mov	r1, r7
   115f8:	bl	11fac <error@@Base+0x1090>
   115fc:	mov	r8, r0
   11600:	cmp	r0, #0
   11604:	bne	11630 <error@@Base+0x714>
   11608:	mov	r0, #1
   1160c:	mov	r1, #20
   11610:	bl	10a5c <abort@plt+0x18c>
   11614:	mov	r8, r0
   11618:	mov	r0, r7
   1161c:	bl	10810 <strdup@plt>
   11620:	str	r0, [r8, #8]
   11624:	mov	r0, r4
   11628:	mov	r1, r8
   1162c:	bl	1203c <error@@Base+0x1120>
   11630:	ldr	r0, [r8, #12]
   11634:	ldr	r1, [r8, #16]
   11638:	mov	r2, r5
   1163c:	add	r0, r0, r9
   11640:	add	r1, r1, sl
   11644:	str	r0, [r8, #12]
   11648:	str	r1, [r8, #16]
   1164c:	mov	r0, r6
   11650:	mov	r1, #99	; 0x63
   11654:	bl	10804 <fgets@plt>
   11658:	cmp	r0, #0
   1165c:	bne	115b4 <error@@Base+0x698>
   11660:	sub	sp, fp, #28
   11664:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11668:	andeq	r1, r1, r9, lsr fp
   1166c:	andeq	r1, r1, sp, lsl fp
   11670:	andeq	r1, r1, r1, lsl #22
   11674:	andeq	r1, r0, r5, asr r1
   11678:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1167c:	add	fp, sp, #24
   11680:	sub	sp, sp, #8
   11684:	mov	r2, r1
   11688:	ldr	r1, [pc, #448]	; 11850 <error@@Base+0x934>
   1168c:	mov	r5, r0
   11690:	mov	r0, r2
   11694:	add	r1, pc, r1
   11698:	bl	10afc <abort@plt+0x22c>
   1169c:	ldr	r1, [pc, #432]	; 11854 <error@@Base+0x938>
   116a0:	ldr	r2, [pc, #432]	; 11858 <error@@Base+0x93c>
   116a4:	ldr	r3, [pc, #432]	; 1185c <error@@Base+0x940>
   116a8:	mov	r4, r0
   116ac:	add	r1, pc, r1
   116b0:	add	r2, pc, r2
   116b4:	add	r3, pc, r3
   116b8:	bl	10888 <fprintf@plt>
   116bc:	ldr	r2, [r5]
   116c0:	ldr	r1, [pc, #408]	; 11860 <error@@Base+0x944>
   116c4:	mov	r0, r4
   116c8:	add	r1, pc, r1
   116cc:	bl	10888 <fprintf@plt>
   116d0:	ldr	r2, [r5, #4]
   116d4:	ldr	r1, [pc, #392]	; 11864 <error@@Base+0x948>
   116d8:	mov	r0, r4
   116dc:	add	r1, pc, r1
   116e0:	bl	10888 <fprintf@plt>
   116e4:	ldr	r0, [r5]
   116e8:	cmp	r0, #0
   116ec:	beq	1172c <error@@Base+0x810>
   116f0:	ldr	r1, [r5, #4]
   116f4:	vldr	d16, [pc, #332]	; 11848 <error@@Base+0x92c>
   116f8:	vmov	s2, r0
   116fc:	sub	r1, r0, r1
   11700:	mov	r0, r4
   11704:	vmov	s0, r1
   11708:	vcvt.f64.s32	d17, s0
   1170c:	vcvt.f64.s32	d18, s2
   11710:	ldr	r1, [pc, #340]	; 1186c <error@@Base+0x950>
   11714:	vmul.f64	d16, d17, d16
   11718:	vdiv.f64	d16, d16, d18
   1171c:	vmov	r2, r3, d16
   11720:	add	r1, pc, r1
   11724:	bl	10888 <fprintf@plt>
   11728:	b	11744 <error@@Base+0x828>
   1172c:	ldr	r0, [pc, #308]	; 11868 <error@@Base+0x94c>
   11730:	mov	r1, #8
   11734:	mov	r2, #1
   11738:	mov	r3, r4
   1173c:	add	r0, pc, r0
   11740:	bl	10834 <fwrite@plt>
   11744:	ldr	r0, [pc, #292]	; 11870 <error@@Base+0x954>
   11748:	mov	r1, #12
   1174c:	mov	r2, #1
   11750:	mov	r3, r4
   11754:	mov	r7, #1
   11758:	add	r0, pc, r0
   1175c:	bl	10834 <fwrite@plt>
   11760:	mov	r8, #0
   11764:	str	r7, [sp, #4]
   11768:	add	r1, r5, #8
   1176c:	mov	r0, r4
   11770:	mov	r2, #50	; 0x32
   11774:	str	r8, [sp]
   11778:	ldr	r3, [pc, #244]	; 11874 <error@@Base+0x958>
   1177c:	add	r3, pc, r3
   11780:	bl	11890 <error@@Base+0x974>
   11784:	str	r8, [sp]
   11788:	str	r7, [sp, #4]
   1178c:	add	r6, r5, #416	; 0x1a0
   11790:	mov	r0, r4
   11794:	mov	r2, #50	; 0x32
   11798:	ldr	r3, [pc, #216]	; 11878 <error@@Base+0x95c>
   1179c:	mov	r1, r6
   117a0:	add	r3, pc, r3
   117a4:	bl	11890 <error@@Base+0x974>
   117a8:	str	r7, [sp]
   117ac:	str	r7, [sp, #4]
   117b0:	add	r1, r5, #824	; 0x338
   117b4:	mov	r0, r4
   117b8:	mov	r2, #10
   117bc:	ldr	r3, [pc, #184]	; 1187c <error@@Base+0x960>
   117c0:	add	r3, pc, r3
   117c4:	bl	11890 <error@@Base+0x974>
   117c8:	ldr	r0, [r5]
   117cc:	cmp	r0, #1
   117d0:	blt	11838 <error@@Base+0x91c>
   117d4:	str	r8, [sp]
   117d8:	str	r8, [sp, #4]
   117dc:	add	r1, r5, #920	; 0x398
   117e0:	mov	r0, r4
   117e4:	mov	r2, #8
   117e8:	ldr	r3, [pc, #144]	; 11880 <error@@Base+0x964>
   117ec:	add	r3, pc, r3
   117f0:	bl	11890 <error@@Base+0x974>
   117f4:	ldr	r0, [r5, #8]
   117f8:	cmp	r0, #1
   117fc:	blt	11814 <error@@Base+0x8f8>
   11800:	ldr	r2, [pc, #124]	; 11884 <error@@Base+0x968>
   11804:	add	r1, r5, #992	; 0x3e0
   11808:	mov	r0, r4
   1180c:	add	r2, pc, r2
   11810:	bl	11c50 <error@@Base+0xd34>
   11814:	ldr	r0, [r6]
   11818:	cmp	r0, #1
   1181c:	blt	11838 <error@@Base+0x91c>
   11820:	ldr	r2, [pc, #96]	; 11888 <error@@Base+0x96c>
   11824:	movw	r0, #9048	; 0x2358
   11828:	add	r1, r5, r0
   1182c:	mov	r0, r4
   11830:	add	r2, pc, r2
   11834:	bl	11c50 <error@@Base+0xd34>
   11838:	mov	r0, r4
   1183c:	sub	sp, fp, #24
   11840:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11844:	b	10b84 <abort@plt+0x2b4>
   11848:	andeq	r0, r0, r0
   1184c:	subsmi	r0, r9, r0
   11850:	andeq	r1, r0, ip, lsl r0
   11854:	andeq	r1, r0, r6
   11858:	andeq	r0, r0, r8, lsl #31
   1185c:			; <UNDEFINED> instruction: 0x00000fb4
   11860:	andeq	r0, r0, pc, ror #31
   11864:	andeq	r0, r0, r9, ror #31
   11868:	andeq	r0, r0, r5, ror #31
   1186c:	andeq	r1, r0, sl
   11870:	andeq	r0, r0, r3, lsl #31
   11874:	andeq	r0, r0, ip, ror #30
   11878:	andeq	r0, r0, fp, asr pc
   1187c:	andeq	r0, r0, r2, lsr pc
   11880:	andeq	r0, r0, sp, lsl pc
   11884:	ldrdeq	r0, [r0], -ip
   11888:	andeq	r0, r0, fp, asr #29
   1188c:	nop	{0}
   11890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11894:	add	fp, sp, #28
   11898:	sub	sp, sp, #4
   1189c:	vpush	{d8}
   118a0:	sub	sp, sp, #8
   118a4:	mov	r5, r1
   118a8:	ldr	r1, [pc, #832]	; 11bf0 <error@@Base+0xcd4>
   118ac:	mov	r8, r2
   118b0:	mov	r2, r3
   118b4:	mov	r4, r0
   118b8:	add	r1, pc, r1
   118bc:	bl	10888 <fprintf@plt>
   118c0:	ldr	r0, [pc, #812]	; 11bf4 <error@@Base+0xcd8>
   118c4:	mov	r1, #26
   118c8:	mov	r2, #1
   118cc:	mov	r3, r4
   118d0:	mov	r7, #1
   118d4:	add	r0, pc, r0
   118d8:	bl	10834 <fwrite@plt>
   118dc:	ldr	r0, [pc, #788]	; 11bf8 <error@@Base+0xcdc>
   118e0:	mov	r1, #3
   118e4:	mov	r2, #1
   118e8:	mov	r3, r4
   118ec:	add	r0, pc, r0
   118f0:	bl	10834 <fwrite@plt>
   118f4:	ldrb	r1, [fp, #8]
   118f8:	ldr	r0, [pc, #764]	; 11bfc <error@@Base+0xce0>
   118fc:	ldr	r2, [pc, #764]	; 11c00 <error@@Base+0xce4>
   11900:	str	r1, [sp]
   11904:	cmp	r1, #0
   11908:	add	r0, pc, r0
   1190c:	add	r2, pc, r2
   11910:	ldr	r1, [pc, #748]	; 11c04 <error@@Base+0xce8>
   11914:	movne	r2, r0
   11918:	mov	r0, r4
   1191c:	add	r1, pc, r1
   11920:	bl	10888 <fprintf@plt>
   11924:	ldr	r1, [fp, #12]
   11928:	lsl	r0, r8, #16
   1192c:	sxth	r6, r8
   11930:	cmp	r0, #65536	; 0x10000
   11934:	str	r1, [sp, #4]
   11938:	blt	11a20 <error@@Base+0xb04>
   1193c:	ldr	sl, [pc, #708]	; 11c08 <error@@Base+0xcec>
   11940:	vldr	d8, [pc, #672]	; 11be8 <error@@Base+0xccc>
   11944:	mov	r8, #1
   11948:	add	sl, pc, sl
   1194c:	mov	r0, r5
   11950:	ldr	r2, [r0, r7, lsl #3]!
   11954:	cmp	r2, #1
   11958:	blt	11a10 <error@@Base+0xaf4>
   1195c:	cmp	r0, #0
   11960:	beq	119c0 <error@@Base+0xaa4>
   11964:	add	r9, r5, r7, lsl #3
   11968:	mov	r0, r4
   1196c:	ldr	r3, [r9, #4]!
   11970:	ldr	r1, [pc, #660]	; 11c0c <error@@Base+0xcf0>
   11974:	add	r1, pc, r1
   11978:	bl	10888 <fprintf@plt>
   1197c:	ldr	r0, [r5, r7, lsl #3]
   11980:	cmp	r0, #0
   11984:	beq	119d0 <error@@Base+0xab4>
   11988:	ldr	r1, [r9]
   1198c:	vmov	s2, r0
   11990:	sub	r1, r0, r1
   11994:	mov	r0, r4
   11998:	vmov	s0, r1
   1199c:	vcvt.f64.s32	d16, s0
   119a0:	vcvt.f64.s32	d17, s2
   119a4:	ldr	r1, [pc, #616]	; 11c14 <error@@Base+0xcf8>
   119a8:	vmul.f64	d16, d16, d8
   119ac:	vdiv.f64	d16, d16, d17
   119b0:	vmov	r2, r3, d16
   119b4:	add	r1, pc, r1
   119b8:	bl	10888 <fprintf@plt>
   119bc:	b	119e8 <error@@Base+0xacc>
   119c0:	ldr	r0, [pc, #592]	; 11c18 <error@@Base+0xcfc>
   119c4:	mov	r1, #26
   119c8:	add	r0, pc, r0
   119cc:	b	119dc <error@@Base+0xac0>
   119d0:	ldr	r0, [pc, #568]	; 11c10 <error@@Base+0xcf4>
   119d4:	mov	r1, #8
   119d8:	add	r0, pc, r0
   119dc:	mov	r2, #1
   119e0:	mov	r3, r4
   119e4:	bl	10834 <fwrite@plt>
   119e8:	ldr	r0, [pc, #556]	; 11c1c <error@@Base+0xd00>
   119ec:	mov	r1, #3
   119f0:	mov	r2, #1
   119f4:	mov	r3, r4
   119f8:	add	r0, pc, r0
   119fc:	bl	10834 <fwrite@plt>
   11a00:	mov	r0, r4
   11a04:	mov	r1, sl
   11a08:	mov	r2, r7
   11a0c:	bl	10888 <fprintf@plt>
   11a10:	add	r8, r8, #1
   11a14:	sxth	r7, r8
   11a18:	cmp	r6, r7
   11a1c:	bge	1194c <error@@Base+0xa30>
   11a20:	ldr	r0, [sp]
   11a24:	cmp	r0, #0
   11a28:	beq	11afc <error@@Base+0xbe0>
   11a2c:	add	r7, r6, #1
   11a30:	mov	r0, r5
   11a34:	ldr	r2, [r0, r7, lsl #3]!
   11a38:	cmp	r2, #1
   11a3c:	blt	11afc <error@@Base+0xbe0>
   11a40:	cmp	r0, #0
   11a44:	beq	11aa8 <error@@Base+0xb8c>
   11a48:	add	r8, r5, r7, lsl #3
   11a4c:	mov	r0, r4
   11a50:	ldr	r3, [r8, #4]!
   11a54:	ldr	r1, [pc, #452]	; 11c20 <error@@Base+0xd04>
   11a58:	add	r1, pc, r1
   11a5c:	bl	10888 <fprintf@plt>
   11a60:	ldr	r0, [r5, r7, lsl #3]
   11a64:	cmp	r0, #0
   11a68:	beq	11ab8 <error@@Base+0xb9c>
   11a6c:	ldr	r1, [r8]
   11a70:	vldr	d16, [pc, #368]	; 11be8 <error@@Base+0xccc>
   11a74:	vmov	s2, r0
   11a78:	sub	r1, r0, r1
   11a7c:	mov	r0, r4
   11a80:	vmov	s0, r1
   11a84:	vcvt.f64.s32	d17, s0
   11a88:	vcvt.f64.s32	d18, s2
   11a8c:	ldr	r1, [pc, #404]	; 11c28 <error@@Base+0xd0c>
   11a90:	vmul.f64	d16, d17, d16
   11a94:	vdiv.f64	d16, d16, d18
   11a98:	vmov	r2, r3, d16
   11a9c:	add	r1, pc, r1
   11aa0:	bl	10888 <fprintf@plt>
   11aa4:	b	11ad0 <error@@Base+0xbb4>
   11aa8:	ldr	r0, [pc, #380]	; 11c2c <error@@Base+0xd10>
   11aac:	mov	r1, #26
   11ab0:	add	r0, pc, r0
   11ab4:	b	11ac4 <error@@Base+0xba8>
   11ab8:	ldr	r0, [pc, #356]	; 11c24 <error@@Base+0xd08>
   11abc:	mov	r1, #8
   11ac0:	add	r0, pc, r0
   11ac4:	mov	r2, #1
   11ac8:	mov	r3, r4
   11acc:	bl	10834 <fwrite@plt>
   11ad0:	ldr	r0, [pc, #344]	; 11c30 <error@@Base+0xd14>
   11ad4:	mov	r1, #3
   11ad8:	mov	r2, #1
   11adc:	mov	r3, r4
   11ae0:	add	r0, pc, r0
   11ae4:	bl	10834 <fwrite@plt>
   11ae8:	ldr	r1, [pc, #324]	; 11c34 <error@@Base+0xd18>
   11aec:	mov	r0, r4
   11af0:	mov	r2, r6
   11af4:	add	r1, pc, r1
   11af8:	bl	10888 <fprintf@plt>
   11afc:	ldr	r0, [sp, #4]
   11b00:	tst	r0, #255	; 0xff
   11b04:	beq	11b6c <error@@Base+0xc50>
   11b08:	cmp	r5, #0
   11b0c:	beq	11b7c <error@@Base+0xc60>
   11b10:	ldm	r5, {r2, r3}
   11b14:	ldr	r1, [pc, #284]	; 11c38 <error@@Base+0xd1c>
   11b18:	mov	r0, r4
   11b1c:	add	r1, pc, r1
   11b20:	bl	10888 <fprintf@plt>
   11b24:	ldr	r0, [r5]
   11b28:	cmp	r0, #0
   11b2c:	beq	11b8c <error@@Base+0xc70>
   11b30:	ldr	r1, [r5, #4]
   11b34:	vldr	d16, [pc, #172]	; 11be8 <error@@Base+0xccc>
   11b38:	vmov	s2, r0
   11b3c:	sub	r1, r0, r1
   11b40:	mov	r0, r4
   11b44:	vmov	s0, r1
   11b48:	vcvt.f64.s32	d17, s0
   11b4c:	vcvt.f64.s32	d18, s2
   11b50:	ldr	r1, [pc, #232]	; 11c40 <error@@Base+0xd24>
   11b54:	vmul.f64	d16, d17, d16
   11b58:	vdiv.f64	d16, d16, d18
   11b5c:	vmov	r2, r3, d16
   11b60:	add	r1, pc, r1
   11b64:	bl	10888 <fprintf@plt>
   11b68:	b	11ba4 <error@@Base+0xc88>
   11b6c:	sub	sp, fp, #40	; 0x28
   11b70:	vpop	{d8}
   11b74:	add	sp, sp, #4
   11b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b7c:	ldr	r0, [pc, #192]	; 11c44 <error@@Base+0xd28>
   11b80:	mov	r1, #26
   11b84:	add	r0, pc, r0
   11b88:	b	11b98 <error@@Base+0xc7c>
   11b8c:	ldr	r0, [pc, #168]	; 11c3c <error@@Base+0xd20>
   11b90:	mov	r1, #8
   11b94:	add	r0, pc, r0
   11b98:	mov	r2, #1
   11b9c:	mov	r3, r4
   11ba0:	bl	10834 <fwrite@plt>
   11ba4:	ldr	r0, [pc, #156]	; 11c48 <error@@Base+0xd2c>
   11ba8:	mov	r1, #3
   11bac:	mov	r2, #1
   11bb0:	mov	r3, r4
   11bb4:	add	r0, pc, r0
   11bb8:	bl	10834 <fwrite@plt>
   11bbc:	ldr	r0, [pc, #136]	; 11c4c <error@@Base+0xd30>
   11bc0:	mov	r1, #7
   11bc4:	mov	r2, #1
   11bc8:	mov	r3, r4
   11bcc:	add	r0, pc, r0
   11bd0:	sub	sp, fp, #40	; 0x28
   11bd4:	vpop	{d8}
   11bd8:	add	sp, sp, #4
   11bdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11be0:	b	10834 <fwrite@plt>
   11be4:	nop	{0}
   11be8:	andeq	r0, r0, r0
   11bec:	subsmi	r0, r9, r0
   11bf0:	andeq	r0, r0, r8, ror lr
   11bf4:	andeq	r0, r0, ip, lsl #29
   11bf8:	andeq	r0, r0, pc, lsl #29
   11bfc:	andeq	r0, r0, sp, lsr #28
   11c00:	andeq	r0, r0, r0, lsr lr
   11c04:	andeq	r0, r0, r5, lsl lr
   11c08:	strdeq	r0, [r0], -fp
   11c0c:	andeq	r0, r0, r1, ror #27
   11c10:	andeq	r0, r0, r9, asr #26
   11c14:	andeq	r0, r0, r6, ror sp
   11c18:	muleq	r0, r8, sp
   11c1c:	andeq	r0, r0, r3, lsl #27
   11c20:	strdeq	r0, [r0], -sp
   11c24:	andeq	r0, r0, r1, ror #24
   11c28:	andeq	r0, r0, lr, lsl #25
   11c2c:			; <UNDEFINED> instruction: 0x00000cb0
   11c30:	muleq	r0, fp, ip
   11c34:	andeq	r0, r0, r8, asr ip
   11c38:	andeq	r0, r0, r9, lsr ip
   11c3c:	andeq	r0, r0, sp, lsl #23
   11c40:	andeq	r0, r0, sl, asr #23
   11c44:	ldrdeq	r0, [r0], -ip
   11c48:	andeq	r0, r0, r7, asr #23
   11c4c:	andeq	r0, r0, r5, asr #22
   11c50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c54:	add	fp, sp, #28
   11c58:	sub	sp, sp, #4
   11c5c:	vpush	{d8}
   11c60:	mov	r5, r0
   11c64:	mov	r0, r1
   11c68:	mov	r6, r2
   11c6c:	mov	r8, r1
   11c70:	bl	1215c <error@@Base+0x1240>
   11c74:	movw	r0, #8052	; 0x1f74
   11c78:	ldr	r0, [r8, r0]!
   11c7c:	mov	r4, r8
   11c80:	ldr	r1, [r4, #-4]!
   11c84:	ldr	r2, [pc, #324]	; 11dd0 <error@@Base+0xeb4>
   11c88:	add	r2, pc, r2
   11c8c:	bl	11e00 <error@@Base+0xee4>
   11c90:	ldr	r1, [pc, #316]	; 11dd4 <error@@Base+0xeb8>
   11c94:	mov	r0, r5
   11c98:	mov	r2, r6
   11c9c:	add	r1, pc, r1
   11ca0:	bl	10888 <fprintf@plt>
   11ca4:	ldr	r0, [pc, #300]	; 11dd8 <error@@Base+0xebc>
   11ca8:	mov	r1, #26
   11cac:	mov	r2, #1
   11cb0:	mov	r3, r5
   11cb4:	add	r0, pc, r0
   11cb8:	bl	10834 <fwrite@plt>
   11cbc:	ldr	r0, [pc, #280]	; 11ddc <error@@Base+0xec0>
   11cc0:	mov	r1, #3
   11cc4:	mov	r2, #1
   11cc8:	mov	r3, r5
   11ccc:	add	r0, pc, r0
   11cd0:	bl	10834 <fwrite@plt>
   11cd4:	mov	r0, #10
   11cd8:	mov	r1, r5
   11cdc:	bl	108ac <fputc@plt>
   11ce0:	ldr	r0, [r8]
   11ce4:	cmp	r0, #1
   11ce8:	blt	11dbc <error@@Base+0xea0>
   11cec:	ldr	r7, [pc, #236]	; 11de0 <error@@Base+0xec4>
   11cf0:	ldr	r6, [pc, #236]	; 11de4 <error@@Base+0xec8>
   11cf4:	vldr	d8, [pc, #204]	; 11dc8 <error@@Base+0xeac>
   11cf8:	mov	sl, #0
   11cfc:	add	r7, pc, r7
   11d00:	add	r6, pc, r6
   11d04:	ldr	r0, [r4]
   11d08:	ldr	r9, [r0, sl, lsl #2]
   11d0c:	mov	r0, r5
   11d10:	ldr	r2, [r9, #12]
   11d14:	ldr	r3, [r9, #16]
   11d18:	ldr	r1, [pc, #200]	; 11de8 <error@@Base+0xecc>
   11d1c:	add	r1, pc, r1
   11d20:	bl	10888 <fprintf@plt>
   11d24:	ldr	r0, [r9, #12]
   11d28:	cmp	r0, #0
   11d2c:	beq	11d68 <error@@Base+0xe4c>
   11d30:	ldr	r1, [r9, #16]
   11d34:	vmov	s2, r0
   11d38:	sub	r1, r0, r1
   11d3c:	mov	r0, r5
   11d40:	vmov	s0, r1
   11d44:	vcvt.f64.s32	d16, s0
   11d48:	vcvt.f64.s32	d17, s2
   11d4c:	ldr	r1, [pc, #156]	; 11df0 <error@@Base+0xed4>
   11d50:	vmul.f64	d16, d16, d8
   11d54:	vdiv.f64	d16, d16, d17
   11d58:	vmov	r2, r3, d16
   11d5c:	add	r1, pc, r1
   11d60:	bl	10888 <fprintf@plt>
   11d64:	b	11d80 <error@@Base+0xe64>
   11d68:	ldr	r0, [pc, #124]	; 11dec <error@@Base+0xed0>
   11d6c:	mov	r1, #8
   11d70:	mov	r2, #1
   11d74:	mov	r3, r5
   11d78:	add	r0, pc, r0
   11d7c:	bl	10834 <fwrite@plt>
   11d80:	mov	r0, r7
   11d84:	mov	r1, #3
   11d88:	mov	r2, #1
   11d8c:	mov	r3, r5
   11d90:	bl	10834 <fwrite@plt>
   11d94:	ldr	r0, [r4]
   11d98:	mov	r1, r6
   11d9c:	ldr	r0, [r0, sl, lsl #2]
   11da0:	ldr	r2, [r0, #8]
   11da4:	mov	r0, r5
   11da8:	bl	10888 <fprintf@plt>
   11dac:	ldr	r0, [r8]
   11db0:	add	sl, sl, #1
   11db4:	cmp	sl, r0
   11db8:	blt	11d04 <error@@Base+0xde8>
   11dbc:	vpop	{d8}
   11dc0:	add	sp, sp, #4
   11dc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11dc8:	andeq	r0, r0, r0
   11dcc:	subsmi	r0, r9, r0
   11dd0:	andeq	r0, r0, r4, ror #2
   11dd4:	muleq	r0, r4, sl
   11dd8:	andeq	r0, r0, ip, lsr #21
   11ddc:	andeq	r0, r0, pc, lsr #21
   11de0:	andeq	r0, r0, pc, ror sl
   11de4:	andeq	r0, r0, r1, lsr sl
   11de8:	andeq	r0, r0, r9, lsr sl
   11dec:	andeq	r0, r0, r9, lsr #19
   11df0:	andeq	r0, r0, lr, asr #19
   11df4:	ldr	r1, [r1, #8]
   11df8:	ldr	r0, [r0, #8]
   11dfc:	b	10a80 <abort@plt+0x1b0>
   11e00:	cmp	r0, #2
   11e04:	bxlt	lr
   11e08:	ldr	r3, [pc, #28]	; 11e2c <error@@Base+0xf10>
   11e0c:	add	r3, pc, r3
   11e10:	str	r2, [r3]
   11e14:	ldr	r2, [pc, #20]	; 11e30 <error@@Base+0xf14>
   11e18:	add	r2, pc, r2
   11e1c:	str	r1, [r2]
   11e20:	sub	r1, r0, #1
   11e24:	mov	r0, #0
   11e28:	b	11e34 <error@@Base+0xf18>
   11e2c:	strdeq	r1, [r1], -ip
   11e30:	andeq	r1, r1, ip, ror #5
   11e34:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11e38:	add	fp, sp, #24
   11e3c:	mov	r8, r1
   11e40:	mov	r5, r0
   11e44:	b	11e68 <error@@Base+0xf4c>
   11e48:	sub	r1, r4, #1
   11e4c:	str	r6, [r0, r4, lsl #2]
   11e50:	cmp	r1, r5
   11e54:	movgt	r0, r5
   11e58:	blgt	11e34 <error@@Base+0xf18>
   11e5c:	add	r5, r7, #1
   11e60:	cmp	r5, r8
   11e64:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   11e68:	ldr	r0, [pc, #220]	; 11f4c <error@@Base+0x1030>
   11e6c:	cmp	r5, r8
   11e70:	mov	r4, r8
   11e74:	mov	r7, r5
   11e78:	ldr	r0, [pc, r0]
   11e7c:	ldr	r6, [r0, r5, lsl #2]
   11e80:	bge	11e48 <error@@Base+0xf2c>
   11e84:	mov	r7, r5
   11e88:	mov	r4, r8
   11e8c:	cmp	r7, r4
   11e90:	blt	11ea4 <error@@Base+0xf88>
   11e94:	b	11ec8 <error@@Base+0xfac>
   11e98:	sub	r4, r4, #1
   11e9c:	cmp	r7, r4
   11ea0:	bge	11ec8 <error@@Base+0xfac>
   11ea4:	ldr	r0, [pc, #164]	; 11f50 <error@@Base+0x1034>
   11ea8:	ldr	r0, [pc, r0]
   11eac:	ldr	r1, [r0, r4, lsl #2]
   11eb0:	ldr	r2, [pc, #156]	; 11f54 <error@@Base+0x1038>
   11eb4:	mov	r0, r6
   11eb8:	ldr	r2, [pc, r2]
   11ebc:	blx	r2
   11ec0:	cmn	r0, #1
   11ec4:	ble	11e98 <error@@Base+0xf7c>
   11ec8:	cmp	r7, r4
   11ecc:	beq	11ee4 <error@@Base+0xfc8>
   11ed0:	ldr	r0, [pc, #128]	; 11f58 <error@@Base+0x103c>
   11ed4:	ldr	r0, [pc, r0]
   11ed8:	ldr	r1, [r0, r4, lsl #2]
   11edc:	str	r1, [r0, r7, lsl #2]
   11ee0:	add	r7, r7, #1
   11ee4:	cmp	r7, r4
   11ee8:	bge	11f10 <error@@Base+0xff4>
   11eec:	ldr	r0, [pc, #104]	; 11f5c <error@@Base+0x1040>
   11ef0:	ldr	r0, [pc, r0]
   11ef4:	ldr	r1, [r0, r7, lsl #2]
   11ef8:	ldr	r2, [pc, #96]	; 11f60 <error@@Base+0x1044>
   11efc:	mov	r0, r6
   11f00:	ldr	r2, [pc, r2]
   11f04:	blx	r2
   11f08:	cmp	r0, #1
   11f0c:	bge	11ee0 <error@@Base+0xfc4>
   11f10:	cmp	r7, r4
   11f14:	bne	11f24 <error@@Base+0x1008>
   11f18:	cmp	r7, r4
   11f1c:	blt	11e9c <error@@Base+0xf80>
   11f20:	b	11f40 <error@@Base+0x1024>
   11f24:	ldr	r0, [pc, #56]	; 11f64 <error@@Base+0x1048>
   11f28:	ldr	r0, [pc, r0]
   11f2c:	ldr	r1, [r0, r7, lsl #2]
   11f30:	str	r1, [r0, r4, lsl #2]
   11f34:	sub	r4, r4, #1
   11f38:	cmp	r7, r4
   11f3c:	blt	11e9c <error@@Base+0xf80>
   11f40:	ldr	r0, [pc, #32]	; 11f68 <error@@Base+0x104c>
   11f44:	ldr	r0, [pc, r0]
   11f48:	b	11e48 <error@@Base+0xf2c>
   11f4c:	andeq	r1, r1, ip, lsl #5
   11f50:	andeq	r1, r1, ip, asr r2
   11f54:	andeq	r1, r1, r0, asr r2
   11f58:	andeq	r1, r1, r0, lsr r2
   11f5c:	andeq	r1, r1, r4, lsl r2
   11f60:	andeq	r1, r1, r8, lsl #4
   11f64:	ldrdeq	r1, [r1], -ip
   11f68:	andeq	r1, r1, r0, asr #3
   11f6c:	push	{r4, r5, r6, sl, fp, lr}
   11f70:	add	fp, sp, #16
   11f74:	mov	r4, r0
   11f78:	movw	r6, #503	; 0x1f7
   11f7c:	mov	r5, r0
   11f80:	mov	r0, r5
   11f84:	bl	12238 <error@@Base+0x131c>
   11f88:	subs	r6, r6, #1
   11f8c:	add	r5, r5, #16
   11f90:	bne	11f80 <error@@Base+0x1064>
   11f94:	movw	r0, #8052	; 0x1f74
   11f98:	mov	r1, #0
   11f9c:	str	r1, [r4, r0]
   11fa0:	movw	r0, #8048	; 0x1f70
   11fa4:	str	r1, [r4, r0]
   11fa8:	pop	{r4, r5, r6, sl, fp, pc}
   11fac:	push	{r4, r5, r6, sl, fp, lr}
   11fb0:	add	fp, sp, #16
   11fb4:	mov	r5, r1
   11fb8:	ldrb	r1, [r1]
   11fbc:	mov	r4, #0
   11fc0:	mov	r2, #0
   11fc4:	cmp	r1, #0
   11fc8:	beq	11ffc <error@@Base+0x10e0>
   11fcc:	add	r3, r5, #1
   11fd0:	mov	r2, #0
   11fd4:	uxtab	r2, r2, r1
   11fd8:	ldrb	r1, [r3], #1
   11fdc:	cmp	r1, #0
   11fe0:	bne	11fd4 <error@@Base+0x10b8>
   11fe4:	movw	r1, #20065	; 0x4e61
   11fe8:	movt	r1, #33354	; 0x824a
   11fec:	umull	r1, r3, r2, r1
   11ff0:	lsr	r1, r3, #8
   11ff4:	movw	r3, #503	; 0x1f7
   11ff8:	mls	r2, r1, r3, r2
   11ffc:	ldr	r6, [r0, r2, lsl #4]
   12000:	cmp	r6, #0
   12004:	bne	1201c <error@@Base+0x1100>
   12008:	mov	r0, r4
   1200c:	pop	{r4, r5, r6, sl, fp, pc}
   12010:	ldr	r6, [r6, #4]
   12014:	cmp	r6, #0
   12018:	beq	12008 <error@@Base+0x10ec>
   1201c:	ldr	r1, [r6, #8]
   12020:	mov	r0, r5
   12024:	bl	107d4 <strcmp@plt>
   12028:	cmp	r0, #0
   1202c:	bne	12010 <error@@Base+0x10f4>
   12030:	mov	r4, r6
   12034:	mov	r0, r4
   12038:	pop	{r4, r5, r6, sl, fp, pc}
   1203c:	push	{r4, r5, fp, lr}
   12040:	add	fp, sp, #8
   12044:	mov	r4, r0
   12048:	ldr	r0, [r1, #8]
   1204c:	ldrb	r2, [r0]
   12050:	cmp	r2, #0
   12054:	beq	1208c <error@@Base+0x1170>
   12058:	add	r3, r0, #1
   1205c:	mov	r0, #0
   12060:	uxtab	r0, r0, r2
   12064:	ldrb	r2, [r3], #1
   12068:	cmp	r2, #0
   1206c:	bne	12060 <error@@Base+0x1144>
   12070:	movw	r2, #20065	; 0x4e61
   12074:	movt	r2, #33354	; 0x824a
   12078:	umull	r2, r3, r0, r2
   1207c:	lsr	r2, r3, #8
   12080:	movw	r3, #503	; 0x1f7
   12084:	mls	r0, r2, r3, r0
   12088:	b	12090 <error@@Base+0x1174>
   1208c:	mov	r0, #0
   12090:	add	r0, r4, r0, lsl #4
   12094:	bl	12244 <error@@Base+0x1328>
   12098:	movw	r0, #8048	; 0x1f70
   1209c:	mov	r5, r4
   120a0:	ldr	r0, [r5, r0]!
   120a4:	cmp	r0, #0
   120a8:	beq	120b8 <error@@Base+0x119c>
   120ac:	bl	107f8 <free@plt>
   120b0:	mov	r0, #0
   120b4:	str	r0, [r5]
   120b8:	movw	r0, #8052	; 0x1f74
   120bc:	ldr	r0, [r4, r0]!
   120c0:	add	r0, r0, #1
   120c4:	str	r0, [r4]
   120c8:	pop	{r4, r5, fp, pc}
   120cc:	push	{r4, r5, fp, lr}
   120d0:	add	fp, sp, #8
   120d4:	mov	r4, r0
   120d8:	ldr	r0, [r1, #8]
   120dc:	ldrb	r2, [r0]
   120e0:	cmp	r2, #0
   120e4:	beq	1211c <error@@Base+0x1200>
   120e8:	add	r3, r0, #1
   120ec:	mov	r0, #0
   120f0:	uxtab	r0, r0, r2
   120f4:	ldrb	r2, [r3], #1
   120f8:	cmp	r2, #0
   120fc:	bne	120f0 <error@@Base+0x11d4>
   12100:	movw	r2, #20065	; 0x4e61
   12104:	movt	r2, #33354	; 0x824a
   12108:	umull	r2, r3, r0, r2
   1210c:	lsr	r2, r3, #8
   12110:	movw	r3, #503	; 0x1f7
   12114:	mls	r0, r2, r3, r0
   12118:	b	12120 <error@@Base+0x1204>
   1211c:	mov	r0, #0
   12120:	add	r0, r4, r0, lsl #4
   12124:	bl	1238c <error@@Base+0x1470>
   12128:	movw	r0, #8048	; 0x1f70
   1212c:	mov	r5, r4
   12130:	ldr	r0, [r5, r0]!
   12134:	cmp	r0, #0
   12138:	beq	12148 <error@@Base+0x122c>
   1213c:	bl	107f8 <free@plt>
   12140:	mov	r0, #0
   12144:	str	r0, [r5]
   12148:	movw	r0, #8052	; 0x1f74
   1214c:	ldr	r0, [r4, r0]!
   12150:	sub	r0, r0, #1
   12154:	str	r0, [r4]
   12158:	pop	{r4, r5, fp, pc}
   1215c:	push	{r4, r5, fp, lr}
   12160:	add	fp, sp, #8
   12164:	mov	r4, r0
   12168:	movw	r0, #8048	; 0x1f70
   1216c:	mov	r5, r4
   12170:	ldr	r0, [r5, r0]!
   12174:	cmp	r0, #0
   12178:	bne	121d4 <error@@Base+0x12b8>
   1217c:	movw	r0, #8052	; 0x1f74
   12180:	ldr	r0, [r4, r0]
   12184:	cmp	r0, #0
   12188:	popeq	{r4, r5, fp, pc}
   1218c:	mov	r1, #4
   12190:	bl	10a5c <abort@plt+0x18c>
   12194:	str	r0, [r5]
   12198:	mov	r0, #0
   1219c:	movw	ip, #503	; 0x1f7
   121a0:	mov	r2, #0
   121a4:	ldr	r3, [r4, r2, lsl #4]
   121a8:	cmp	r3, #0
   121ac:	beq	121c8 <error@@Base+0x12ac>
   121b0:	ldr	r1, [r5]
   121b4:	str	r3, [r1, r0, lsl #2]
   121b8:	add	r0, r0, #1
   121bc:	ldr	r3, [r3, #4]
   121c0:	cmp	r3, #0
   121c4:	bne	121b0 <error@@Base+0x1294>
   121c8:	add	r2, r2, #1
   121cc:	cmp	r2, ip
   121d0:	bne	121a4 <error@@Base+0x1288>
   121d4:	pop	{r4, r5, fp, pc}
   121d8:	push	{r4, r5, r6, r7, fp, lr}
   121dc:	add	fp, sp, #16
   121e0:	mov	r5, r1
   121e4:	mov	r4, r0
   121e8:	movw	r7, #503	; 0x1f7
   121ec:	mov	r6, r0
   121f0:	mov	r0, r6
   121f4:	mov	r1, r5
   121f8:	bl	12458 <error@@Base+0x153c>
   121fc:	subs	r7, r7, #1
   12200:	add	r6, r6, #16
   12204:	bne	121f0 <error@@Base+0x12d4>
   12208:	movw	r0, #8048	; 0x1f70
   1220c:	mov	r5, r4
   12210:	ldr	r0, [r5, r0]!
   12214:	cmp	r0, #0
   12218:	beq	12228 <error@@Base+0x130c>
   1221c:	bl	107f8 <free@plt>
   12220:	mov	r0, #0
   12224:	str	r0, [r5]
   12228:	movw	r0, #8052	; 0x1f74
   1222c:	mov	r1, #0
   12230:	str	r1, [r4, r0]
   12234:	pop	{r4, r5, r6, r7, fp, pc}
   12238:	vmov.i32	q8, #0	; 0x00000000
   1223c:	vst1.32	{d16-d17}, [r0]
   12240:	bx	lr
   12244:	push	{r4, r5, fp, lr}
   12248:	add	fp, sp, #8
   1224c:	mov	r4, r0
   12250:	ldr	r0, [r0]
   12254:	mov	r5, #0
   12258:	str	r5, [r1]
   1225c:	cmp	r0, #0
   12260:	str	r0, [r1, #4]
   12264:	str	r1, [r4]
   12268:	addeq	r0, r4, #4
   1226c:	str	r1, [r0]
   12270:	ldr	r0, [r4, #8]
   12274:	cmp	r0, #0
   12278:	beq	12284 <error@@Base+0x1368>
   1227c:	bl	107f8 <free@plt>
   12280:	str	r5, [r4, #8]
   12284:	ldr	r0, [r4, #12]
   12288:	add	r0, r0, #1
   1228c:	str	r0, [r4, #12]
   12290:	pop	{r4, r5, fp, pc}
   12294:	push	{r4, r5, fp, lr}
   12298:	add	fp, sp, #8
   1229c:	mov	r4, r0
   122a0:	ldr	r0, [r0, #4]
   122a4:	mov	r5, #0
   122a8:	mov	r2, r4
   122ac:	cmp	r0, #0
   122b0:	stm	r1, {r0, r5}
   122b4:	addne	r2, r0, #4
   122b8:	str	r1, [r2]
   122bc:	str	r1, [r4, #4]
   122c0:	ldr	r0, [r4, #8]
   122c4:	cmp	r0, #0
   122c8:	beq	122d4 <error@@Base+0x13b8>
   122cc:	bl	107f8 <free@plt>
   122d0:	str	r5, [r4, #8]
   122d4:	ldr	r0, [r4, #12]
   122d8:	add	r0, r0, #1
   122dc:	str	r0, [r4, #12]
   122e0:	pop	{r4, r5, fp, pc}
   122e4:	push	{r4, sl, fp, lr}
   122e8:	add	fp, sp, #8
   122ec:	mov	r4, r0
   122f0:	ldr	r0, [r2]
   122f4:	mov	r3, r4
   122f8:	cmp	r0, #0
   122fc:	stm	r1, {r0, r2}
   12300:	addne	r3, r0, #4
   12304:	str	r1, [r3]
   12308:	str	r1, [r2]
   1230c:	ldr	r0, [r4, #8]
   12310:	cmp	r0, #0
   12314:	beq	12324 <error@@Base+0x1408>
   12318:	bl	107f8 <free@plt>
   1231c:	mov	r0, #0
   12320:	str	r0, [r4, #8]
   12324:	ldr	r0, [r4, #12]
   12328:	add	r0, r0, #1
   1232c:	str	r0, [r4, #12]
   12330:	pop	{r4, sl, fp, pc}
   12334:	push	{r4, sl, fp, lr}
   12338:	add	fp, sp, #8
   1233c:	mov	r4, r0
   12340:	mov	r0, r1
   12344:	cmp	r1, #0
   12348:	ldr	r3, [r0, #4]!
   1234c:	moveq	r0, r4
   12350:	cmp	r3, #0
   12354:	stm	r2, {r1, r3}
   12358:	addeq	r3, r4, #4
   1235c:	str	r2, [r0]
   12360:	str	r2, [r3]
   12364:	ldr	r0, [r4, #8]
   12368:	cmp	r0, #0
   1236c:	beq	1237c <error@@Base+0x1460>
   12370:	bl	107f8 <free@plt>
   12374:	mov	r0, #0
   12378:	str	r0, [r4, #8]
   1237c:	ldr	r0, [r4, #12]
   12380:	add	r0, r0, #1
   12384:	str	r0, [r4, #12]
   12388:	pop	{r4, sl, fp, pc}
   1238c:	push	{r4, r5, fp, lr}
   12390:	add	fp, sp, #8
   12394:	mov	r4, r0
   12398:	ldm	r1, {r0, r2}
   1239c:	mov	r5, #0
   123a0:	cmp	r0, #0
   123a4:	streq	r2, [r4]
   123a8:	strne	r2, [r0, #4]
   123ac:	ldrne	r2, [r1, #4]
   123b0:	cmp	r2, #0
   123b4:	addeq	r2, r4, #4
   123b8:	str	r0, [r2]
   123bc:	str	r5, [r1]
   123c0:	str	r5, [r1, #4]
   123c4:	ldr	r0, [r4, #8]
   123c8:	cmp	r0, #0
   123cc:	beq	123d8 <error@@Base+0x14bc>
   123d0:	bl	107f8 <free@plt>
   123d4:	str	r5, [r4, #8]
   123d8:	ldr	r0, [r4, #12]
   123dc:	sub	r0, r0, #1
   123e0:	str	r0, [r4, #12]
   123e4:	pop	{r4, r5, fp, pc}
   123e8:	push	{r4, sl, fp, lr}
   123ec:	add	fp, sp, #8
   123f0:	mov	r4, r0
   123f4:	ldr	r0, [r0, #8]
   123f8:	cmp	r0, #0
   123fc:	beq	12404 <error@@Base+0x14e8>
   12400:	pop	{r4, sl, fp, pc}
   12404:	ldr	r0, [r4, #12]
   12408:	cmp	r0, #0
   1240c:	beq	12400 <error@@Base+0x14e4>
   12410:	mov	r1, #4
   12414:	bl	10a5c <abort@plt+0x18c>
   12418:	str	r0, [r4, #8]
   1241c:	ldr	r1, [r4]
   12420:	cmp	r1, #0
   12424:	beq	12400 <error@@Base+0x14e4>
   12428:	str	r1, [r0]
   1242c:	ldr	r0, [r1, #4]
   12430:	cmp	r0, #0
   12434:	popeq	{r4, sl, fp, pc}
   12438:	mov	r1, #4
   1243c:	ldr	r2, [r4, #8]
   12440:	str	r0, [r2, r1]
   12444:	add	r1, r1, #4
   12448:	ldr	r0, [r0, #4]
   1244c:	cmp	r0, #0
   12450:	bne	1243c <error@@Base+0x1520>
   12454:	b	12400 <error@@Base+0x14e4>
   12458:	push	{r4, r5, r6, r7, fp, lr}
   1245c:	add	fp, sp, #16
   12460:	ldr	r6, [r0]
   12464:	cmp	r6, #0
   12468:	popeq	{r4, r5, r6, r7, fp, pc}
   1246c:	mov	r4, r1
   12470:	mov	r5, r0
   12474:	mov	r7, #0
   12478:	ldm	r6, {r0, r1}
   1247c:	cmp	r0, #0
   12480:	streq	r1, [r5]
   12484:	strne	r1, [r0, #4]
   12488:	ldrne	r1, [r6, #4]
   1248c:	cmp	r1, #0
   12490:	addeq	r1, r5, #4
   12494:	str	r0, [r1]
   12498:	str	r7, [r6]
   1249c:	str	r7, [r6, #4]
   124a0:	ldr	r0, [r5, #8]
   124a4:	cmp	r0, #0
   124a8:	beq	124b4 <error@@Base+0x1598>
   124ac:	bl	107f8 <free@plt>
   124b0:	str	r7, [r5, #8]
   124b4:	ldr	r0, [r5, #12]
   124b8:	sub	r0, r0, #1
   124bc:	str	r0, [r5, #12]
   124c0:	mov	r0, r6
   124c4:	blx	r4
   124c8:	ldr	r6, [r5]
   124cc:	cmp	r6, #0
   124d0:	bne	12478 <error@@Base+0x155c>
   124d4:	pop	{r4, r5, r6, r7, fp, pc}
   124d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   124dc:	mov	r7, r0
   124e0:	ldr	r6, [pc, #72]	; 12530 <error@@Base+0x1614>
   124e4:	ldr	r5, [pc, #72]	; 12534 <error@@Base+0x1618>
   124e8:	add	r6, pc, r6
   124ec:	add	r5, pc, r5
   124f0:	sub	r6, r6, r5
   124f4:	mov	r8, r1
   124f8:	mov	r9, r2
   124fc:	bl	107a8 <calloc@plt-0x20>
   12500:	asrs	r6, r6, #2
   12504:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12508:	mov	r4, #0
   1250c:	add	r4, r4, #1
   12510:	ldr	r3, [r5], #4
   12514:	mov	r2, r9
   12518:	mov	r1, r8
   1251c:	mov	r0, r7
   12520:	blx	r3
   12524:	cmp	r6, r4
   12528:	bne	1250c <error@@Base+0x15f0>
   1252c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12530:	andeq	r0, r1, ip, lsl #20
   12534:	andeq	r0, r1, r4, lsl #20
   12538:	bx	lr

Disassembly of section .fini:

0001253c <.fini>:
   1253c:	push	{r3, lr}
   12540:	pop	{r3, pc}
