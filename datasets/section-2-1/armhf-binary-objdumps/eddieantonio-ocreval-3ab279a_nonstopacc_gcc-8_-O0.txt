
../repos/eddieantonio-ocreval-3ab279a/nonstopacc/nonstopacc:     file format elf32-littlearm


Disassembly of section .init:

000109bc <.init>:
   109bc:	push	{r3, lr}
   109c0:	bl	10bd4 <__assert_fail@plt+0x48>
   109c4:	pop	{r3, pc}

Disassembly of section .plt:

000109c8 <calloc@plt-0x14>:
   109c8:	push	{lr}		; (str lr, [sp, #-4]!)
   109cc:	ldr	lr, [pc, #4]	; 109d8 <calloc@plt-0x4>
   109d0:	add	lr, pc, lr
   109d4:	ldr	pc, [lr, #8]!
   109d8:	andeq	r8, r1, r8, lsr #12

000109dc <calloc@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #24, 20	; 0x18000
   109e4:	ldr	pc, [ip, #1576]!	; 0x628

000109e8 <strcmp@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #24, 20	; 0x18000
   109f0:	ldr	pc, [ip, #1568]!	; 0x620

000109f4 <printf@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #24, 20	; 0x18000
   109fc:	ldr	pc, [ip, #1560]!	; 0x618

00010a00 <fopen@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #24, 20	; 0x18000
   10a08:	ldr	pc, [ip, #1552]!	; 0x610

00010a0c <free@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #24, 20	; 0x18000
   10a14:	ldr	pc, [ip, #1544]!	; 0x608

00010a18 <utf8proc_get_property@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #24, 20	; 0x18000
   10a20:	ldr	pc, [ip, #1536]!	; 0x600

00010a24 <fgets@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #24, 20	; 0x18000
   10a2c:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a30 <utf8proc_encode_char@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #24, 20	; 0x18000
   10a38:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a3c <strdup@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #24, 20	; 0x18000
   10a44:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a48 <rewind@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #24, 20	; 0x18000
   10a50:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a54 <unlink@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #24, 20	; 0x18000
   10a5c:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a60 <utf8proc_tolower@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #24, 20	; 0x18000
   10a68:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a6c <__xstat@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #24, 20	; 0x18000
   10a74:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a78 <fwrite@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #24, 20	; 0x18000
   10a80:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a84 <fread@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #24, 20	; 0x18000
   10a8c:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a90 <utf8proc_iterate@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #24, 20	; 0x18000
   10a98:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a9c <malloc@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #24, 20	; 0x18000
   10aa4:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa8 <__libc_start_main@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #24, 20	; 0x18000
   10ab0:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab4 <__sysv_signal@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #24, 20	; 0x18000
   10abc:	ldr	pc, [ip, #1432]!	; 0x598

00010ac0 <__gmon_start__@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #24, 20	; 0x18000
   10ac8:	ldr	pc, [ip, #1424]!	; 0x590

00010acc <getpid@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #24, 20	; 0x18000
   10ad4:	ldr	pc, [ip, #1416]!	; 0x588

00010ad8 <exit@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #24, 20	; 0x18000
   10ae0:	ldr	pc, [ip, #1408]!	; 0x580

00010ae4 <utf8proc_category@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #24, 20	; 0x18000
   10aec:	ldr	pc, [ip, #1400]!	; 0x578

00010af0 <strlen@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #24, 20	; 0x18000
   10af8:	ldr	pc, [ip, #1392]!	; 0x570

00010afc <fprintf@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #24, 20	; 0x18000
   10b04:	ldr	pc, [ip, #1384]!	; 0x568

00010b08 <__isoc99_sscanf@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #24, 20	; 0x18000
   10b10:	ldr	pc, [ip, #1376]!	; 0x560

00010b14 <fclose@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #24, 20	; 0x18000
   10b1c:	ldr	pc, [ip, #1368]!	; 0x558

00010b20 <utf8proc_NFC@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #24, 20	; 0x18000
   10b28:	ldr	pc, [ip, #1360]!	; 0x550

00010b2c <fputc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #24, 20	; 0x18000
   10b34:	ldr	pc, [ip, #1352]!	; 0x548

00010b38 <sprintf@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #24, 20	; 0x18000
   10b40:	ldr	pc, [ip, #1344]!	; 0x540

00010b44 <atoi@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #24, 20	; 0x18000
   10b4c:	ldr	pc, [ip, #1336]!	; 0x538

00010b50 <utf8proc_errmsg@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #24, 20	; 0x18000
   10b58:	ldr	pc, [ip, #1328]!	; 0x530

00010b5c <fputs@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #24, 20	; 0x18000
   10b64:	ldr	pc, [ip, #1320]!	; 0x528

00010b68 <strncmp@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #24, 20	; 0x18000
   10b70:	ldr	pc, [ip, #1312]!	; 0x520

00010b74 <abort@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #24, 20	; 0x18000
   10b7c:	ldr	pc, [ip, #1304]!	; 0x518

00010b80 <getc@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #24, 20	; 0x18000
   10b88:	ldr	pc, [ip, #1296]!	; 0x510

00010b8c <__assert_fail@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #24, 20	; 0x18000
   10b94:	ldr	pc, [ip, #1288]!	; 0x508

Disassembly of section .text:

00010b98 <error@@Base-0x1530>:
   10b98:	mov	fp, #0
   10b9c:	mov	lr, #0
   10ba0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba4:	mov	r2, sp
   10ba8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bac:	push	{r0}		; (str r0, [sp, #-4]!)
   10bb0:	ldr	ip, [pc, #16]	; 10bc8 <__assert_fail@plt+0x3c>
   10bb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb8:	ldr	r0, [pc, #12]	; 10bcc <__assert_fail@plt+0x40>
   10bbc:	ldr	r3, [pc, #12]	; 10bd0 <__assert_fail@plt+0x44>
   10bc0:	bl	10aa8 <__libc_start_main@plt>
   10bc4:	bl	10b74 <abort@plt>
   10bc8:	andeq	r4, r1, ip, lsr #28
   10bcc:	andeq	r0, r1, ip, lsl #30
   10bd0:	andeq	r4, r1, ip, asr #27
   10bd4:	ldr	r3, [pc, #20]	; 10bf0 <__assert_fail@plt+0x64>
   10bd8:	ldr	r2, [pc, #20]	; 10bf4 <__assert_fail@plt+0x68>
   10bdc:	add	r3, pc, r3
   10be0:	ldr	r2, [r3, r2]
   10be4:	cmp	r2, #0
   10be8:	bxeq	lr
   10bec:	b	10ac0 <__gmon_start__@plt>
   10bf0:	andeq	r8, r1, ip, lsl r4
   10bf4:	strheq	r0, [r0], -ip
   10bf8:	ldr	r0, [pc, #24]	; 10c18 <__assert_fail@plt+0x8c>
   10bfc:	ldr	r3, [pc, #24]	; 10c1c <__assert_fail@plt+0x90>
   10c00:	cmp	r3, r0
   10c04:	bxeq	lr
   10c08:	ldr	r3, [pc, #16]	; 10c20 <__assert_fail@plt+0x94>
   10c0c:	cmp	r3, #0
   10c10:	bxeq	lr
   10c14:	bx	r3
   10c18:	strdeq	r9, [r2], -ip
   10c1c:	strdeq	r9, [r2], -ip
   10c20:	andeq	r0, r0, r0
   10c24:	ldr	r0, [pc, #36]	; 10c50 <__assert_fail@plt+0xc4>
   10c28:	ldr	r1, [pc, #36]	; 10c54 <__assert_fail@plt+0xc8>
   10c2c:	sub	r1, r1, r0
   10c30:	asr	r1, r1, #2
   10c34:	add	r1, r1, r1, lsr #31
   10c38:	asrs	r1, r1, #1
   10c3c:	bxeq	lr
   10c40:	ldr	r3, [pc, #16]	; 10c58 <__assert_fail@plt+0xcc>
   10c44:	cmp	r3, #0
   10c48:	bxeq	lr
   10c4c:	bx	r3
   10c50:	strdeq	r9, [r2], -ip
   10c54:	strdeq	r9, [r2], -ip
   10c58:	andeq	r0, r0, r0
   10c5c:	push	{r4, lr}
   10c60:	ldr	r4, [pc, #24]	; 10c80 <__assert_fail@plt+0xf4>
   10c64:	ldrb	r3, [r4]
   10c68:	cmp	r3, #0
   10c6c:	popne	{r4, pc}
   10c70:	bl	10bf8 <__assert_fail@plt+0x6c>
   10c74:	mov	r3, #1
   10c78:	strb	r3, [r4]
   10c7c:	pop	{r4, pc}
   10c80:	strdeq	r9, [r2], -ip
   10c84:	b	10c24 <__assert_fail@plt+0x98>
   10c88:	str	r4, [sp, #-12]!
   10c8c:	str	fp, [sp, #4]
   10c90:	str	lr, [sp, #8]
   10c94:	add	fp, sp, #8
   10c98:	sub	sp, sp, #20
   10c9c:	str	r0, [fp, #-24]	; 0xffffffe8
   10ca0:	str	r1, [fp, #-28]	; 0xffffffe4
   10ca4:	ldr	r4, [pc, #124]	; 10d28 <__assert_fail@plt+0x19c>
   10ca8:	add	r4, pc, r4
   10cac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10cb4:	bl	11130 <__assert_fail@plt+0x5a4>
   10cb8:	str	r0, [fp, #-16]
   10cbc:	ldr	r3, [fp, #-16]
   10cc0:	cmp	r3, #0
   10cc4:	beq	10d10 <__assert_fail@plt+0x184>
   10cc8:	ldr	r3, [pc, #92]	; 10d2c <__assert_fail@plt+0x1a0>
   10ccc:	ldr	r3, [r4, r3]
   10cd0:	ldr	r2, [r3]
   10cd4:	ldr	r3, [fp, #-16]
   10cd8:	ldr	r3, [r3, #12]
   10cdc:	sub	r2, r2, r3
   10ce0:	ldr	r3, [pc, #68]	; 10d2c <__assert_fail@plt+0x1a0>
   10ce4:	ldr	r3, [r4, r3]
   10ce8:	str	r2, [r3]
   10cec:	ldr	r3, [pc, #60]	; 10d30 <__assert_fail@plt+0x1a4>
   10cf0:	ldr	r3, [r4, r3]
   10cf4:	ldr	r2, [r3]
   10cf8:	ldr	r3, [fp, #-16]
   10cfc:	ldr	r3, [r3, #16]
   10d00:	sub	r2, r2, r3
   10d04:	ldr	r3, [pc, #36]	; 10d30 <__assert_fail@plt+0x1a4>
   10d08:	ldr	r3, [r4, r3]
   10d0c:	str	r2, [r3]
   10d10:	nop	{0}
   10d14:	sub	sp, fp, #8
   10d18:	ldr	r4, [sp]
   10d1c:	ldr	fp, [sp, #4]
   10d20:	add	sp, sp, #8
   10d24:	pop	{pc}		; (ldr pc, [sp], #4)
   10d28:	andeq	r8, r1, r0, asr r3
   10d2c:	andeq	r0, r0, r0, lsr #1
   10d30:	ldrdeq	r0, [r0], -r8
   10d34:	str	fp, [sp, #-8]!
   10d38:	str	lr, [sp, #4]
   10d3c:	add	fp, sp, #4
   10d40:	ldr	r3, [pc, #144]	; 10dd8 <__assert_fail@plt+0x24c>
   10d44:	add	r3, pc, r3
   10d48:	ldr	r2, [pc, #140]	; 10ddc <__assert_fail@plt+0x250>
   10d4c:	add	r2, pc, r2
   10d50:	ldr	r1, [r2]
   10d54:	add	r0, r1, #1
   10d58:	ldr	r2, [pc, #128]	; 10de0 <__assert_fail@plt+0x254>
   10d5c:	add	r2, pc, r2
   10d60:	str	r0, [r2]
   10d64:	ldr	r2, [pc, #120]	; 10de4 <__assert_fail@plt+0x258>
   10d68:	ldr	r2, [r3, r2]
   10d6c:	ldr	r0, [r2]
   10d70:	ldr	r2, [pc, #112]	; 10de8 <__assert_fail@plt+0x25c>
   10d74:	ldr	r2, [r3, r2]
   10d78:	ldr	r2, [r2]
   10d7c:	sub	r2, r0, r2
   10d80:	vmov	s15, r2
   10d84:	vcvt.f64.s32	d7, s15
   10d88:	vldr	d6, [pc, #64]	; 10dd0 <__assert_fail@plt+0x244>
   10d8c:	vmul.f64	d6, d7, d6
   10d90:	ldr	r2, [pc, #76]	; 10de4 <__assert_fail@plt+0x258>
   10d94:	ldr	r3, [r3, r2]
   10d98:	ldr	r3, [r3]
   10d9c:	vmov	s15, r3
   10da0:	vcvt.f64.s32	d7, s15
   10da4:	vdiv.f64	d5, d6, d7
   10da8:	vmov	r2, r3, d5
   10dac:	ldr	r0, [pc, #56]	; 10dec <__assert_fail@plt+0x260>
   10db0:	add	r0, pc, r0
   10db4:	bl	109f4 <printf@plt>
   10db8:	nop	{0}
   10dbc:	sub	sp, fp, #4
   10dc0:	ldr	fp, [sp]
   10dc4:	add	sp, sp, #4
   10dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   10dcc:	nop	{0}
   10dd0:	andeq	r0, r0, r0
   10dd4:	subsmi	r0, r9, r0
   10dd8:			; <UNDEFINED> instruction: 0x000182b4
   10ddc:	andeq	r8, r1, ip, lsr #7
   10de0:	muleq	r1, ip, r3
   10de4:	andeq	r0, r0, r0, lsr #1
   10de8:	ldrdeq	r0, [r0], -r8
   10dec:	muleq	r0, r4, r0
   10df0:	str	r4, [sp, #-12]!
   10df4:	str	fp, [sp, #4]
   10df8:	str	lr, [sp, #8]
   10dfc:	add	fp, sp, #8
   10e00:	sub	sp, sp, #12
   10e04:	ldr	r4, [pc, #236]	; 10ef8 <__assert_fail@plt+0x36c>
   10e08:	add	r4, pc, r4
   10e0c:	ldr	r3, [pc, #232]	; 10efc <__assert_fail@plt+0x370>
   10e10:	ldr	r3, [r4, r3]
   10e14:	ldr	r2, [r3]
   10e18:	ldr	r3, [pc, #224]	; 10f00 <__assert_fail@plt+0x374>
   10e1c:	ldr	r3, [r4, r3]
   10e20:	str	r2, [r3]
   10e24:	ldr	r3, [pc, #208]	; 10efc <__assert_fail@plt+0x370>
   10e28:	ldr	r3, [r4, r3]
   10e2c:	ldr	r2, [r3, #4]
   10e30:	ldr	r3, [pc, #204]	; 10f04 <__assert_fail@plt+0x378>
   10e34:	ldr	r3, [r4, r3]
   10e38:	str	r2, [r3]
   10e3c:	ldr	r3, [pc, #188]	; 10f00 <__assert_fail@plt+0x374>
   10e40:	ldr	r3, [r4, r3]
   10e44:	ldr	r3, [r3]
   10e48:	cmp	r3, #0
   10e4c:	beq	10ed8 <__assert_fail@plt+0x34c>
   10e50:	bl	10d34 <__assert_fail@plt+0x1a8>
   10e54:	ldr	r3, [pc, #172]	; 10f08 <__assert_fail@plt+0x37c>
   10e58:	ldr	r3, [r4, r3]
   10e5c:	ldr	r3, [r3]
   10e60:	str	r3, [fp, #-16]
   10e64:	b	10ec8 <__assert_fail@plt+0x33c>
   10e68:	ldr	r3, [fp, #-16]
   10e6c:	ldr	r3, [r3, #8]
   10e70:	mov	r1, r3
   10e74:	ldr	r3, [pc, #128]	; 10efc <__assert_fail@plt+0x370>
   10e78:	ldr	r3, [r4, r3]
   10e7c:	add	r0, r3, #992	; 0x3e0
   10e80:	bl	10c88 <__assert_fail@plt+0xfc>
   10e84:	ldr	r3, [fp, #-16]
   10e88:	ldr	r3, [r3, #8]
   10e8c:	mov	r1, r3
   10e90:	ldr	r3, [pc, #100]	; 10efc <__assert_fail@plt+0x370>
   10e94:	ldr	r3, [r4, r3]
   10e98:	movw	r2, #9048	; 0x2358
   10e9c:	add	r0, r3, r2
   10ea0:	bl	10c88 <__assert_fail@plt+0xfc>
   10ea4:	ldr	r3, [pc, #84]	; 10f00 <__assert_fail@plt+0x374>
   10ea8:	ldr	r3, [r4, r3]
   10eac:	ldr	r3, [r3]
   10eb0:	cmp	r3, #0
   10eb4:	beq	10ee0 <__assert_fail@plt+0x354>
   10eb8:	bl	10d34 <__assert_fail@plt+0x1a8>
   10ebc:	ldr	r3, [fp, #-16]
   10ec0:	ldr	r3, [r3, #4]
   10ec4:	str	r3, [fp, #-16]
   10ec8:	ldr	r3, [fp, #-16]
   10ecc:	cmp	r3, #0
   10ed0:	bne	10e68 <__assert_fail@plt+0x2dc>
   10ed4:	b	10ee4 <__assert_fail@plt+0x358>
   10ed8:	nop	{0}
   10edc:	b	10ee4 <__assert_fail@plt+0x358>
   10ee0:	nop	{0}
   10ee4:	sub	sp, fp, #8
   10ee8:	ldr	r4, [sp]
   10eec:	ldr	fp, [sp, #4]
   10ef0:	add	sp, sp, #8
   10ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ef8:	strdeq	r8, [r1], -r0
   10efc:	andeq	r0, r0, r4, asr #1
   10f00:	andeq	r0, r0, r0, lsr #1
   10f04:	ldrdeq	r0, [r0], -r8
   10f08:	strheq	r0, [r0], -r4
   10f0c:	str	r4, [sp, #-12]!
   10f10:	str	fp, [sp, #4]
   10f14:	str	lr, [sp, #8]
   10f18:	add	fp, sp, #8
   10f1c:	sub	sp, sp, #12
   10f20:	str	r0, [fp, #-16]
   10f24:	str	r1, [fp, #-20]	; 0xffffffec
   10f28:	ldr	r4, [pc, #156]	; 10fcc <__assert_fail@plt+0x440>
   10f2c:	add	r4, pc, r4
   10f30:	sub	r0, fp, #16
   10f34:	mov	r3, #0
   10f38:	ldr	r2, [pc, #144]	; 10fd0 <__assert_fail@plt+0x444>
   10f3c:	add	r2, pc, r2
   10f40:	ldr	r1, [fp, #-20]	; 0xffffffec
   10f44:	bl	11fdc <__assert_fail@plt+0x1450>
   10f48:	ldr	r3, [fp, #-16]
   10f4c:	cmp	r3, #2
   10f50:	beq	10f64 <__assert_fail@plt+0x3d8>
   10f54:	ldr	r3, [pc, #120]	; 10fd4 <__assert_fail@plt+0x448>
   10f58:	add	r3, pc, r3
   10f5c:	mov	r0, r3
   10f60:	bl	120c8 <error@@Base>
   10f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f68:	ldr	r1, [r3]
   10f6c:	ldr	r3, [pc, #100]	; 10fd8 <__assert_fail@plt+0x44c>
   10f70:	ldr	r3, [r4, r3]
   10f74:	mov	r2, r3
   10f78:	ldr	r3, [pc, #92]	; 10fdc <__assert_fail@plt+0x450>
   10f7c:	ldr	r3, [r4, r3]
   10f80:	mov	r0, r3
   10f84:	bl	14040 <error@@Base+0x1f78>
   10f88:	ldr	r3, [pc, #76]	; 10fdc <__assert_fail@plt+0x450>
   10f8c:	ldr	r3, [r4, r3]
   10f90:	mov	r1, r3
   10f94:	ldr	r3, [pc, #68]	; 10fe0 <__assert_fail@plt+0x454>
   10f98:	ldr	r3, [r4, r3]
   10f9c:	mov	r0, r3
   10fa0:	bl	139d4 <error@@Base+0x190c>
   10fa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fa8:	add	r3, r3, #4
   10fac:	ldr	r3, [r3]
   10fb0:	mov	r1, r3
   10fb4:	ldr	r3, [pc, #40]	; 10fe4 <__assert_fail@plt+0x458>
   10fb8:	ldr	r3, [r4, r3]
   10fbc:	mov	r0, r3
   10fc0:	bl	12650 <error@@Base+0x588>
   10fc4:	bl	10df0 <__assert_fail@plt+0x264>
   10fc8:	bl	120b4 <__assert_fail@plt+0x1528>
   10fcc:	andeq	r8, r1, ip, asr #1
   10fd0:	andeq	r3, r0, r4, lsl pc
   10fd4:	andeq	r3, r0, ip, lsl pc
   10fd8:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   10fdc:	andeq	r0, r0, r4, lsr #1
   10fe0:	strheq	r0, [r0], -r4
   10fe4:	andeq	r0, r0, r4, asr #1
   10fe8:	str	fp, [sp, #-8]!
   10fec:	str	lr, [sp, #4]
   10ff0:	add	fp, sp, #4
   10ff4:	sub	sp, sp, #16
   10ff8:	str	r0, [fp, #-16]
   10ffc:	mov	r3, #0
   11000:	strh	r3, [fp, #-6]
   11004:	b	11034 <__assert_fail@plt+0x4a8>
   11008:	ldrsh	r3, [fp, #-6]
   1100c:	lsl	r3, r3, #4
   11010:	ldr	r2, [fp, #-16]
   11014:	add	r3, r2, r3
   11018:	mov	r0, r3
   1101c:	bl	1467c <error@@Base+0x25b4>
   11020:	ldrsh	r3, [fp, #-6]
   11024:	uxth	r3, r3
   11028:	add	r3, r3, #1
   1102c:	uxth	r3, r3
   11030:	strh	r3, [fp, #-6]
   11034:	ldrsh	r3, [fp, #-6]
   11038:	movw	r2, #502	; 0x1f6
   1103c:	cmp	r3, r2
   11040:	ble	11008 <__assert_fail@plt+0x47c>
   11044:	ldr	r3, [fp, #-16]
   11048:	add	r3, r3, #4096	; 0x1000
   1104c:	mov	r2, r3
   11050:	mov	r3, #0
   11054:	str	r3, [r2, #3952]	; 0xf70
   11058:	ldr	r3, [fp, #-16]
   1105c:	add	r3, r3, #4096	; 0x1000
   11060:	mov	r2, r3
   11064:	mov	r3, #0
   11068:	str	r3, [r2, #3956]	; 0xf74
   1106c:	nop	{0}
   11070:	sub	sp, fp, #4
   11074:	ldr	fp, [sp]
   11078:	add	sp, sp, #4
   1107c:	pop	{pc}		; (ldr pc, [sp], #4)
   11080:	push	{fp}		; (str fp, [sp, #-4]!)
   11084:	add	fp, sp, #0
   11088:	sub	sp, sp, #28
   1108c:	str	r0, [fp, #-24]	; 0xffffffe8
   11090:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11094:	str	r3, [fp, #-16]
   11098:	mov	r3, #0
   1109c:	str	r3, [fp, #-12]
   110a0:	mov	r3, #0
   110a4:	str	r3, [fp, #-8]
   110a8:	b	110d8 <__assert_fail@plt+0x54c>
   110ac:	ldr	r3, [fp, #-8]
   110b0:	ldr	r2, [fp, #-16]
   110b4:	add	r3, r2, r3
   110b8:	ldrb	r3, [r3]
   110bc:	mov	r2, r3
   110c0:	ldr	r3, [fp, #-12]
   110c4:	add	r3, r3, r2
   110c8:	str	r3, [fp, #-12]
   110cc:	ldr	r3, [fp, #-8]
   110d0:	add	r3, r3, #1
   110d4:	str	r3, [fp, #-8]
   110d8:	ldr	r3, [fp, #-8]
   110dc:	ldr	r2, [fp, #-16]
   110e0:	add	r3, r2, r3
   110e4:	ldrb	r3, [r3]
   110e8:	cmp	r3, #0
   110ec:	bne	110ac <__assert_fail@plt+0x520>
   110f0:	ldr	r3, [fp, #-12]
   110f4:	movw	r2, #20065	; 0x4e61
   110f8:	movt	r2, #33354	; 0x824a
   110fc:	smull	r1, r2, r2, r3
   11100:	add	r2, r2, r3
   11104:	asr	r1, r2, #8
   11108:	asr	r2, r3, #31
   1110c:	sub	r2, r1, r2
   11110:	movw	r1, #503	; 0x1f7
   11114:	mul	r2, r1, r2
   11118:	sub	r2, r3, r2
   1111c:	sxth	r3, r2
   11120:	mov	r0, r3
   11124:	add	sp, fp, #0
   11128:	pop	{fp}		; (ldr fp, [sp], #4)
   1112c:	bx	lr
   11130:	str	fp, [sp, #-8]!
   11134:	str	lr, [sp, #4]
   11138:	add	fp, sp, #4
   1113c:	sub	sp, sp, #16
   11140:	str	r0, [fp, #-16]
   11144:	str	r1, [fp, #-20]	; 0xffffffec
   11148:	ldr	r0, [fp, #-20]	; 0xffffffec
   1114c:	bl	11080 <__assert_fail@plt+0x4f4>
   11150:	mov	r3, r0
   11154:	mov	r2, r3
   11158:	ldr	r3, [fp, #-16]
   1115c:	ldr	r3, [r3, r2, lsl #4]
   11160:	str	r3, [fp, #-8]
   11164:	b	11174 <__assert_fail@plt+0x5e8>
   11168:	ldr	r3, [fp, #-8]
   1116c:	ldr	r3, [r3, #4]
   11170:	str	r3, [fp, #-8]
   11174:	ldr	r3, [fp, #-8]
   11178:	cmp	r3, #0
   1117c:	beq	111a0 <__assert_fail@plt+0x614>
   11180:	ldr	r3, [fp, #-8]
   11184:	ldr	r3, [r3, #8]
   11188:	mov	r1, r3
   1118c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11190:	bl	109e8 <strcmp@plt>
   11194:	mov	r3, r0
   11198:	cmp	r3, #0
   1119c:	bne	11168 <__assert_fail@plt+0x5dc>
   111a0:	ldr	r3, [fp, #-8]
   111a4:	mov	r0, r3
   111a8:	sub	sp, fp, #4
   111ac:	ldr	fp, [sp]
   111b0:	add	sp, sp, #4
   111b4:	pop	{pc}		; (ldr pc, [sp], #4)
   111b8:	str	fp, [sp, #-8]!
   111bc:	str	lr, [sp, #4]
   111c0:	add	fp, sp, #4
   111c4:	sub	sp, sp, #8
   111c8:	str	r0, [fp, #-8]
   111cc:	ldr	r3, [fp, #-8]
   111d0:	add	r3, r3, #4096	; 0x1000
   111d4:	ldr	r3, [r3, #3952]	; 0xf70
   111d8:	cmp	r3, #0
   111dc:	beq	11208 <__assert_fail@plt+0x67c>
   111e0:	ldr	r3, [fp, #-8]
   111e4:	add	r3, r3, #4096	; 0x1000
   111e8:	ldr	r3, [r3, #3952]	; 0xf70
   111ec:	mov	r0, r3
   111f0:	bl	10a0c <free@plt>
   111f4:	ldr	r3, [fp, #-8]
   111f8:	add	r3, r3, #4096	; 0x1000
   111fc:	mov	r2, r3
   11200:	mov	r3, #0
   11204:	str	r3, [r2, #3952]	; 0xf70
   11208:	nop	{0}
   1120c:	sub	sp, fp, #4
   11210:	ldr	fp, [sp]
   11214:	add	sp, sp, #4
   11218:	pop	{pc}		; (ldr pc, [sp], #4)
   1121c:	str	fp, [sp, #-8]!
   11220:	str	lr, [sp, #4]
   11224:	add	fp, sp, #4
   11228:	sub	sp, sp, #8
   1122c:	str	r0, [fp, #-8]
   11230:	str	r1, [fp, #-12]
   11234:	ldr	r3, [fp, #-12]
   11238:	ldr	r3, [r3, #8]
   1123c:	mov	r0, r3
   11240:	bl	11080 <__assert_fail@plt+0x4f4>
   11244:	mov	r3, r0
   11248:	lsl	r3, r3, #4
   1124c:	ldr	r2, [fp, #-8]
   11250:	add	r3, r2, r3
   11254:	ldr	r1, [fp, #-12]
   11258:	mov	r0, r3
   1125c:	bl	147dc <error@@Base+0x2714>
   11260:	ldr	r0, [fp, #-8]
   11264:	bl	111b8 <__assert_fail@plt+0x62c>
   11268:	ldr	r3, [fp, #-8]
   1126c:	add	r3, r3, #4096	; 0x1000
   11270:	ldr	r3, [r3, #3956]	; 0xf74
   11274:	add	r3, r3, #1
   11278:	ldr	r2, [fp, #-8]
   1127c:	add	r2, r2, #4096	; 0x1000
   11280:	str	r3, [r2, #3956]	; 0xf74
   11284:	nop	{0}
   11288:	sub	sp, fp, #4
   1128c:	ldr	fp, [sp]
   11290:	add	sp, sp, #4
   11294:	pop	{pc}		; (ldr pc, [sp], #4)
   11298:	str	fp, [sp, #-8]!
   1129c:	str	lr, [sp, #4]
   112a0:	add	fp, sp, #4
   112a4:	sub	sp, sp, #8
   112a8:	str	r0, [fp, #-8]
   112ac:	str	r1, [fp, #-12]
   112b0:	ldr	r3, [fp, #-12]
   112b4:	ldr	r3, [r3, #8]
   112b8:	mov	r0, r3
   112bc:	bl	11080 <__assert_fail@plt+0x4f4>
   112c0:	mov	r3, r0
   112c4:	lsl	r3, r3, #4
   112c8:	ldr	r2, [fp, #-8]
   112cc:	add	r3, r2, r3
   112d0:	ldr	r1, [fp, #-12]
   112d4:	mov	r0, r3
   112d8:	bl	148f4 <error@@Base+0x282c>
   112dc:	ldr	r0, [fp, #-8]
   112e0:	bl	111b8 <__assert_fail@plt+0x62c>
   112e4:	ldr	r3, [fp, #-8]
   112e8:	add	r3, r3, #4096	; 0x1000
   112ec:	ldr	r3, [r3, #3956]	; 0xf74
   112f0:	sub	r3, r3, #1
   112f4:	ldr	r2, [fp, #-8]
   112f8:	add	r2, r2, #4096	; 0x1000
   112fc:	str	r3, [r2, #3956]	; 0xf74
   11300:	nop	{0}
   11304:	sub	sp, fp, #4
   11308:	ldr	fp, [sp]
   1130c:	add	sp, sp, #4
   11310:	pop	{pc}		; (ldr pc, [sp], #4)
   11314:	str	fp, [sp, #-8]!
   11318:	str	lr, [sp, #4]
   1131c:	add	fp, sp, #4
   11320:	sub	sp, sp, #24
   11324:	str	r0, [fp, #-24]	; 0xffffffe8
   11328:	mov	r3, #0
   1132c:	str	r3, [fp, #-16]
   11330:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11334:	add	r3, r3, #4096	; 0x1000
   11338:	ldr	r3, [r3, #3952]	; 0xf70
   1133c:	cmp	r3, #0
   11340:	bne	11400 <__assert_fail@plt+0x874>
   11344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11348:	add	r3, r3, #4096	; 0x1000
   1134c:	ldr	r3, [r3, #3956]	; 0xf74
   11350:	cmp	r3, #0
   11354:	beq	11400 <__assert_fail@plt+0x874>
   11358:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1135c:	add	r3, r3, #4096	; 0x1000
   11360:	ldr	r3, [r3, #3956]	; 0xf74
   11364:	mov	r1, #4
   11368:	mov	r0, r3
   1136c:	bl	114a8 <__assert_fail@plt+0x91c>
   11370:	mov	r2, r0
   11374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11378:	add	r3, r3, #4096	; 0x1000
   1137c:	str	r2, [r3, #3952]	; 0xf70
   11380:	mov	r3, #0
   11384:	str	r3, [fp, #-12]
   11388:	b	113ec <__assert_fail@plt+0x860>
   1138c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11390:	ldr	r2, [fp, #-12]
   11394:	ldr	r3, [r3, r2, lsl #4]
   11398:	str	r3, [fp, #-8]
   1139c:	b	113d4 <__assert_fail@plt+0x848>
   113a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113a4:	add	r3, r3, #4096	; 0x1000
   113a8:	ldr	r2, [r3, #3952]	; 0xf70
   113ac:	ldr	r3, [fp, #-16]
   113b0:	add	r1, r3, #1
   113b4:	str	r1, [fp, #-16]
   113b8:	lsl	r3, r3, #2
   113bc:	add	r3, r2, r3
   113c0:	ldr	r2, [fp, #-8]
   113c4:	str	r2, [r3]
   113c8:	ldr	r3, [fp, #-8]
   113cc:	ldr	r3, [r3, #4]
   113d0:	str	r3, [fp, #-8]
   113d4:	ldr	r3, [fp, #-8]
   113d8:	cmp	r3, #0
   113dc:	bne	113a0 <__assert_fail@plt+0x814>
   113e0:	ldr	r3, [fp, #-12]
   113e4:	add	r3, r3, #1
   113e8:	str	r3, [fp, #-12]
   113ec:	ldr	r3, [fp, #-12]
   113f0:	movw	r2, #502	; 0x1f6
   113f4:	cmp	r3, r2
   113f8:	ble	1138c <__assert_fail@plt+0x800>
   113fc:	b	11404 <__assert_fail@plt+0x878>
   11400:	nop	{0}
   11404:	sub	sp, fp, #4
   11408:	ldr	fp, [sp]
   1140c:	add	sp, sp, #4
   11410:	pop	{pc}		; (ldr pc, [sp], #4)
   11414:	str	fp, [sp, #-8]!
   11418:	str	lr, [sp, #4]
   1141c:	add	fp, sp, #4
   11420:	sub	sp, sp, #16
   11424:	str	r0, [fp, #-16]
   11428:	str	r1, [fp, #-20]	; 0xffffffec
   1142c:	mov	r3, #0
   11430:	strh	r3, [fp, #-6]
   11434:	b	11468 <__assert_fail@plt+0x8dc>
   11438:	ldrsh	r3, [fp, #-6]
   1143c:	lsl	r3, r3, #4
   11440:	ldr	r2, [fp, #-16]
   11444:	add	r3, r2, r3
   11448:	ldr	r1, [fp, #-20]	; 0xffffffec
   1144c:	mov	r0, r3
   11450:	bl	14a88 <error@@Base+0x29c0>
   11454:	ldrsh	r3, [fp, #-6]
   11458:	uxth	r3, r3
   1145c:	add	r3, r3, #1
   11460:	uxth	r3, r3
   11464:	strh	r3, [fp, #-6]
   11468:	ldrsh	r3, [fp, #-6]
   1146c:	movw	r2, #502	; 0x1f6
   11470:	cmp	r3, r2
   11474:	ble	11438 <__assert_fail@plt+0x8ac>
   11478:	ldr	r0, [fp, #-16]
   1147c:	bl	111b8 <__assert_fail@plt+0x62c>
   11480:	ldr	r3, [fp, #-16]
   11484:	add	r3, r3, #4096	; 0x1000
   11488:	mov	r2, r3
   1148c:	mov	r3, #0
   11490:	str	r3, [r2, #3956]	; 0xf74
   11494:	nop	{0}
   11498:	sub	sp, fp, #4
   1149c:	ldr	fp, [sp]
   114a0:	add	sp, sp, #4
   114a4:	pop	{pc}		; (ldr pc, [sp], #4)
   114a8:	str	fp, [sp, #-8]!
   114ac:	str	lr, [sp, #4]
   114b0:	add	fp, sp, #4
   114b4:	sub	sp, sp, #16
   114b8:	str	r0, [fp, #-16]
   114bc:	str	r1, [fp, #-20]	; 0xffffffec
   114c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   114c4:	ldr	r0, [fp, #-16]
   114c8:	bl	109dc <calloc@plt>
   114cc:	mov	r3, r0
   114d0:	str	r3, [fp, #-8]
   114d4:	ldr	r3, [fp, #-8]
   114d8:	cmp	r3, #0
   114dc:	bne	114f0 <__assert_fail@plt+0x964>
   114e0:	ldr	r3, [pc, #32]	; 11508 <__assert_fail@plt+0x97c>
   114e4:	add	r3, pc, r3
   114e8:	mov	r0, r3
   114ec:	bl	120c8 <error@@Base>
   114f0:	ldr	r3, [fp, #-8]
   114f4:	mov	r0, r3
   114f8:	sub	sp, fp, #4
   114fc:	ldr	fp, [sp]
   11500:	add	sp, sp, #4
   11504:	pop	{pc}		; (ldr pc, [sp], #4)
   11508:	andeq	r3, r0, r8, lsr #19
   1150c:	push	{fp}		; (str fp, [sp, #-4]!)
   11510:	add	fp, sp, #0
   11514:	sub	sp, sp, #20
   11518:	str	r0, [fp, #-16]
   1151c:	str	r1, [fp, #-20]	; 0xffffffec
   11520:	mov	r3, #0
   11524:	str	r3, [fp, #-8]
   11528:	b	11538 <__assert_fail@plt+0x9ac>
   1152c:	ldr	r3, [fp, #-8]
   11530:	add	r3, r3, #1
   11534:	str	r3, [fp, #-8]
   11538:	ldr	r3, [fp, #-8]
   1153c:	ldr	r2, [fp, #-16]
   11540:	add	r3, r2, r3
   11544:	ldrb	r3, [r3]
   11548:	cmp	r3, #0
   1154c:	beq	11578 <__assert_fail@plt+0x9ec>
   11550:	ldr	r3, [fp, #-8]
   11554:	ldr	r2, [fp, #-16]
   11558:	add	r3, r2, r3
   1155c:	ldrb	r2, [r3]
   11560:	ldr	r3, [fp, #-8]
   11564:	ldr	r1, [fp, #-20]	; 0xffffffec
   11568:	add	r3, r1, r3
   1156c:	ldrb	r3, [r3]
   11570:	cmp	r2, r3
   11574:	beq	1152c <__assert_fail@plt+0x9a0>
   11578:	ldr	r3, [fp, #-8]
   1157c:	ldr	r2, [fp, #-16]
   11580:	add	r3, r2, r3
   11584:	ldrb	r3, [r3]
   11588:	cmp	r3, #0
   1158c:	bne	115a8 <__assert_fail@plt+0xa1c>
   11590:	ldr	r3, [fp, #-8]
   11594:	ldr	r2, [fp, #-20]	; 0xffffffec
   11598:	add	r3, r2, r3
   1159c:	ldrb	r3, [r3]
   115a0:	cmp	r3, #0
   115a4:	beq	115e0 <__assert_fail@plt+0xa54>
   115a8:	ldr	r3, [fp, #-8]
   115ac:	ldr	r2, [fp, #-16]
   115b0:	add	r3, r2, r3
   115b4:	ldrb	r2, [r3]
   115b8:	ldr	r3, [fp, #-8]
   115bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   115c0:	add	r3, r1, r3
   115c4:	ldrb	r3, [r3]
   115c8:	cmp	r2, r3
   115cc:	bcs	115d8 <__assert_fail@plt+0xa4c>
   115d0:	mvn	r3, #0
   115d4:	b	115e4 <__assert_fail@plt+0xa58>
   115d8:	mov	r3, #1
   115dc:	b	115e4 <__assert_fail@plt+0xa58>
   115e0:	mov	r3, #0
   115e4:	mov	r0, r3
   115e8:	add	sp, fp, #0
   115ec:	pop	{fp}		; (ldr fp, [sp], #4)
   115f0:	bx	lr
   115f4:	str	fp, [sp, #-8]!
   115f8:	str	lr, [sp, #4]
   115fc:	add	fp, sp, #4
   11600:	sub	sp, sp, #16
   11604:	str	r0, [fp, #-16]
   11608:	str	r1, [fp, #-20]	; 0xffffffec
   1160c:	ldr	r3, [pc, #172]	; 116c0 <__assert_fail@plt+0xb34>
   11610:	add	r3, pc, r3
   11614:	ldr	r2, [fp, #-16]
   11618:	cmp	r2, #0
   1161c:	bne	11650 <__assert_fail@plt+0xac4>
   11620:	ldr	r2, [fp, #-20]	; 0xffffffec
   11624:	ldrb	r2, [r2]
   11628:	cmp	r2, #114	; 0x72
   1162c:	bne	11640 <__assert_fail@plt+0xab4>
   11630:	ldr	r2, [pc, #140]	; 116c4 <__assert_fail@plt+0xb38>
   11634:	ldr	r3, [r3, r2]
   11638:	ldr	r3, [r3]
   1163c:	b	116ac <__assert_fail@plt+0xb20>
   11640:	ldr	r2, [pc, #128]	; 116c8 <__assert_fail@plt+0xb3c>
   11644:	ldr	r3, [r3, r2]
   11648:	ldr	r3, [r3]
   1164c:	b	116ac <__assert_fail@plt+0xb20>
   11650:	ldr	r1, [fp, #-20]	; 0xffffffec
   11654:	ldr	r0, [fp, #-16]
   11658:	bl	10a00 <fopen@plt>
   1165c:	str	r0, [fp, #-8]
   11660:	ldr	r3, [fp, #-8]
   11664:	cmp	r3, #0
   11668:	beq	11674 <__assert_fail@plt+0xae8>
   1166c:	ldr	r3, [fp, #-8]
   11670:	b	116ac <__assert_fail@plt+0xb20>
   11674:	ldr	r3, [fp, #-20]	; 0xffffffec
   11678:	ldrb	r3, [r3]
   1167c:	cmp	r3, #119	; 0x77
   11680:	bne	11698 <__assert_fail@plt+0xb0c>
   11684:	ldr	r1, [fp, #-16]
   11688:	ldr	r3, [pc, #60]	; 116cc <__assert_fail@plt+0xb40>
   1168c:	add	r3, pc, r3
   11690:	mov	r0, r3
   11694:	bl	12138 <error@@Base+0x70>
   11698:	ldr	r1, [fp, #-16]
   1169c:	ldr	r3, [pc, #44]	; 116d0 <__assert_fail@plt+0xb44>
   116a0:	add	r3, pc, r3
   116a4:	mov	r0, r3
   116a8:	bl	12138 <error@@Base+0x70>
   116ac:	mov	r0, r3
   116b0:	sub	sp, fp, #4
   116b4:	ldr	fp, [sp]
   116b8:	add	sp, sp, #4
   116bc:	pop	{pc}		; (ldr pc, [sp], #4)
   116c0:	andeq	r7, r1, r8, ror #19
   116c4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   116c8:	ldrdeq	r0, [r0], -r4
   116cc:	andeq	r3, r0, ip, lsl r8
   116d0:	andeq	r3, r0, r0, lsr #16
   116d4:	str	fp, [sp, #-8]!
   116d8:	str	lr, [sp, #4]
   116dc:	add	fp, sp, #4
   116e0:	sub	sp, sp, #8
   116e4:	str	r0, [fp, #-8]
   116e8:	ldr	r3, [pc, #76]	; 1173c <__assert_fail@plt+0xbb0>
   116ec:	add	r3, pc, r3
   116f0:	ldr	r2, [pc, #72]	; 11740 <__assert_fail@plt+0xbb4>
   116f4:	ldr	r2, [r3, r2]
   116f8:	ldr	r2, [r2]
   116fc:	ldr	r1, [fp, #-8]
   11700:	cmp	r1, r2
   11704:	beq	11728 <__assert_fail@plt+0xb9c>
   11708:	ldr	r2, [pc, #52]	; 11744 <__assert_fail@plt+0xbb8>
   1170c:	ldr	r3, [r3, r2]
   11710:	ldr	r3, [r3]
   11714:	ldr	r2, [fp, #-8]
   11718:	cmp	r2, r3
   1171c:	beq	11728 <__assert_fail@plt+0xb9c>
   11720:	ldr	r0, [fp, #-8]
   11724:	bl	10b14 <fclose@plt>
   11728:	nop	{0}
   1172c:	sub	sp, fp, #4
   11730:	ldr	fp, [sp]
   11734:	add	sp, sp, #4
   11738:	pop	{pc}		; (ldr pc, [sp], #4)
   1173c:	andeq	r7, r1, ip, lsl #18
   11740:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11744:	ldrdeq	r0, [r0], -r4
   11748:	str	fp, [sp, #-8]!
   1174c:	str	lr, [sp, #4]
   11750:	add	fp, sp, #4
   11754:	sub	sp, sp, #96	; 0x60
   11758:	str	r0, [fp, #-96]	; 0xffffffa0
   1175c:	sub	r3, fp, #92	; 0x5c
   11760:	mov	r1, r3
   11764:	ldr	r0, [fp, #-96]	; 0xffffffa0
   11768:	bl	14e30 <error@@Base+0x2d68>
   1176c:	mov	r3, r0
   11770:	cmp	r3, #0
   11774:	moveq	r3, #1
   11778:	movne	r3, #0
   1177c:	uxtb	r3, r3
   11780:	mov	r0, r3
   11784:	sub	sp, fp, #4
   11788:	ldr	fp, [sp]
   1178c:	add	sp, sp, #4
   11790:	pop	{pc}		; (ldr pc, [sp], #4)
   11794:	str	r4, [sp, #-12]!
   11798:	str	fp, [sp, #4]
   1179c:	str	lr, [sp, #8]
   117a0:	add	fp, sp, #8
   117a4:	sub	sp, sp, #124	; 0x7c
   117a8:	mov	r3, r0
   117ac:	strh	r3, [fp, #-120]	; 0xffffff88
   117b0:	ldr	r2, [pc, #92]	; 11814 <__assert_fail@plt+0xc88>
   117b4:	add	r2, pc, r2
   117b8:	ldr	r3, [pc, #88]	; 11818 <__assert_fail@plt+0xc8c>
   117bc:	ldr	r3, [r2, r3]
   117c0:	ldr	r4, [r3]
   117c4:	bl	10acc <getpid@plt>
   117c8:	mov	r2, r0
   117cc:	ldrsh	r3, [fp, #-120]	; 0xffffff88
   117d0:	sub	r0, fp, #112	; 0x70
   117d4:	str	r3, [sp]
   117d8:	mov	r3, r2
   117dc:	mov	r2, r4
   117e0:	ldr	r1, [pc, #52]	; 1181c <__assert_fail@plt+0xc90>
   117e4:	add	r1, pc, r1
   117e8:	bl	10b38 <sprintf@plt>
   117ec:	sub	r3, fp, #112	; 0x70
   117f0:	mov	r0, r3
   117f4:	bl	10a3c <strdup@plt>
   117f8:	mov	r3, r0
   117fc:	mov	r0, r3
   11800:	sub	sp, fp, #8
   11804:	ldr	r4, [sp]
   11808:	ldr	fp, [sp, #4]
   1180c:	add	sp, sp, #8
   11810:	pop	{pc}		; (ldr pc, [sp], #4)
   11814:	andeq	r7, r1, r4, asr #16
   11818:	andeq	r0, r0, r0, asr #1
   1181c:	strdeq	r3, [r0], -r0
   11820:	str	fp, [sp, #-8]!
   11824:	str	lr, [sp, #4]
   11828:	add	fp, sp, #4
   1182c:	sub	sp, sp, #8
   11830:	ldr	r3, [pc, #88]	; 11890 <__assert_fail@plt+0xd04>
   11834:	add	r3, pc, r3
   11838:	ldrsh	r3, [r3]
   1183c:	uxth	r3, r3
   11840:	add	r3, r3, #1
   11844:	uxth	r3, r3
   11848:	sxth	r2, r3
   1184c:	ldr	r3, [pc, #64]	; 11894 <__assert_fail@plt+0xd08>
   11850:	add	r3, pc, r3
   11854:	strh	r2, [r3]
   11858:	ldr	r3, [pc, #56]	; 11898 <__assert_fail@plt+0xd0c>
   1185c:	add	r3, pc, r3
   11860:	ldrsh	r3, [r3]
   11864:	mov	r0, r3
   11868:	bl	11794 <__assert_fail@plt+0xc08>
   1186c:	str	r0, [fp, #-8]
   11870:	ldr	r0, [fp, #-8]
   11874:	bl	10a54 <unlink@plt>
   11878:	ldr	r3, [fp, #-8]
   1187c:	mov	r0, r3
   11880:	sub	sp, fp, #4
   11884:	ldr	fp, [sp]
   11888:	add	sp, sp, #4
   1188c:	pop	{pc}		; (ldr pc, [sp], #4)
   11890:	andeq	r7, r1, r8, asr #17
   11894:	andeq	r7, r1, ip, lsr #17
   11898:	andeq	r7, r1, r0, lsr #17
   1189c:	str	fp, [sp, #-8]!
   118a0:	str	lr, [sp, #4]
   118a4:	add	fp, sp, #4
   118a8:	sub	sp, sp, #8
   118ac:	mov	r3, #1
   118b0:	strh	r3, [fp, #-6]
   118b4:	b	118ec <__assert_fail@plt+0xd60>
   118b8:	ldrsh	r3, [fp, #-6]
   118bc:	mov	r0, r3
   118c0:	bl	11794 <__assert_fail@plt+0xc08>
   118c4:	str	r0, [fp, #-12]
   118c8:	ldr	r0, [fp, #-12]
   118cc:	bl	10a54 <unlink@plt>
   118d0:	ldr	r0, [fp, #-12]
   118d4:	bl	10a0c <free@plt>
   118d8:	ldrsh	r3, [fp, #-6]
   118dc:	uxth	r3, r3
   118e0:	add	r3, r3, #1
   118e4:	uxth	r3, r3
   118e8:	strh	r3, [fp, #-6]
   118ec:	ldr	r3, [pc, #36]	; 11918 <__assert_fail@plt+0xd8c>
   118f0:	add	r3, pc, r3
   118f4:	ldrsh	r3, [r3]
   118f8:	ldrsh	r2, [fp, #-6]
   118fc:	cmp	r2, r3
   11900:	ble	118b8 <__assert_fail@plt+0xd2c>
   11904:	nop	{0}
   11908:	sub	sp, fp, #4
   1190c:	ldr	fp, [sp]
   11910:	add	sp, sp, #4
   11914:	pop	{pc}		; (ldr pc, [sp], #4)
   11918:	andeq	r7, r1, ip, lsl #16
   1191c:	str	fp, [sp, #-8]!
   11920:	str	lr, [sp, #4]
   11924:	add	fp, sp, #4
   11928:	sub	sp, sp, #16
   1192c:	str	r0, [fp, #-16]
   11930:	mov	r3, #47	; 0x2f
   11934:	strb	r3, [fp, #-7]
   11938:	ldr	r0, [fp, #-16]
   1193c:	bl	10af0 <strlen@plt>
   11940:	mov	r3, r0
   11944:	uxth	r3, r3
   11948:	sub	r3, r3, #1
   1194c:	uxth	r3, r3
   11950:	strh	r3, [fp, #-6]
   11954:	b	1196c <__assert_fail@plt+0xde0>
   11958:	ldrsh	r3, [fp, #-6]
   1195c:	uxth	r3, r3
   11960:	sub	r3, r3, #1
   11964:	uxth	r3, r3
   11968:	strh	r3, [fp, #-6]
   1196c:	ldrsh	r3, [fp, #-6]
   11970:	cmp	r3, #0
   11974:	blt	11994 <__assert_fail@plt+0xe08>
   11978:	ldrsh	r3, [fp, #-6]
   1197c:	ldr	r2, [fp, #-16]
   11980:	add	r3, r2, r3
   11984:	ldrb	r3, [r3]
   11988:	ldrb	r2, [fp, #-7]
   1198c:	cmp	r2, r3
   11990:	bne	11958 <__assert_fail@plt+0xdcc>
   11994:	ldrsh	r3, [fp, #-6]
   11998:	add	r3, r3, #1
   1199c:	ldr	r2, [fp, #-16]
   119a0:	add	r3, r2, r3
   119a4:	mov	r0, r3
   119a8:	sub	sp, fp, #4
   119ac:	ldr	fp, [sp]
   119b0:	add	sp, sp, #4
   119b4:	pop	{pc}		; (ldr pc, [sp], #4)
   119b8:	str	fp, [sp, #-8]!
   119bc:	str	lr, [sp, #4]
   119c0:	add	fp, sp, #4
   119c4:	sub	sp, sp, #8
   119c8:	str	r0, [fp, #-8]
   119cc:	ldr	r3, [pc, #64]	; 11a14 <__assert_fail@plt+0xe88>
   119d0:	add	r3, pc, r3
   119d4:	ldrb	r3, [r3]
   119d8:	cmp	r3, #0
   119dc:	bne	11a00 <__assert_fail@plt+0xe74>
   119e0:	ldr	r3, [pc, #48]	; 11a18 <__assert_fail@plt+0xe8c>
   119e4:	add	r3, pc, r3
   119e8:	mov	r2, #1
   119ec:	strb	r2, [r3]
   119f0:	ldr	r3, [pc, #36]	; 11a1c <__assert_fail@plt+0xe90>
   119f4:	add	r3, pc, r3
   119f8:	mov	r0, r3
   119fc:	bl	120c8 <error@@Base>
   11a00:	nop	{0}
   11a04:	sub	sp, fp, #4
   11a08:	ldr	fp, [sp]
   11a0c:	add	sp, sp, #4
   11a10:	pop	{pc}		; (ldr pc, [sp], #4)
   11a14:	andeq	r7, r1, lr, lsr #14
   11a18:	andeq	r7, r1, sl, lsl r7
   11a1c:	strdeq	r3, [r0], -r0
   11a20:	str	fp, [sp, #-8]!
   11a24:	str	lr, [sp, #4]
   11a28:	add	fp, sp, #4
   11a2c:	ldr	r3, [pc, #52]	; 11a68 <__assert_fail@plt+0xedc>
   11a30:	add	r3, pc, r3
   11a34:	mov	r1, r3
   11a38:	mov	r0, #2
   11a3c:	bl	10ab4 <__sysv_signal@plt>
   11a40:	ldr	r3, [pc, #36]	; 11a6c <__assert_fail@plt+0xee0>
   11a44:	add	r3, pc, r3
   11a48:	mov	r1, r3
   11a4c:	mov	r0, #15
   11a50:	bl	10ab4 <__sysv_signal@plt>
   11a54:	nop	{0}
   11a58:	sub	sp, fp, #4
   11a5c:	ldr	fp, [sp]
   11a60:	add	sp, sp, #4
   11a64:	pop	{pc}		; (ldr pc, [sp], #4)
   11a68:			; <UNDEFINED> instruction: 0xffffff80
   11a6c:			; <UNDEFINED> instruction: 0xffffff6c
   11a70:	str	fp, [sp, #-8]!
   11a74:	str	lr, [sp, #4]
   11a78:	add	fp, sp, #4
   11a7c:	sub	sp, sp, #8
   11a80:	str	r0, [fp, #-8]
   11a84:	ldr	r3, [pc, #84]	; 11ae0 <__assert_fail@plt+0xf54>
   11a88:	add	r3, pc, r3
   11a8c:	ldr	r2, [pc, #80]	; 11ae4 <__assert_fail@plt+0xf58>
   11a90:	ldr	r2, [r3, r2]
   11a94:	ldr	r2, [r2]
   11a98:	cmp	r2, #0
   11a9c:	beq	11ab4 <__assert_fail@plt+0xf28>
   11aa0:	ldr	r2, [pc, #60]	; 11ae4 <__assert_fail@plt+0xf58>
   11aa4:	ldr	r3, [r3, r2]
   11aa8:	ldr	r3, [r3]
   11aac:	blx	r3
   11ab0:	b	11adc <__assert_fail@plt+0xf50>
   11ab4:	ldr	r2, [pc, #44]	; 11ae8 <__assert_fail@plt+0xf5c>
   11ab8:	ldr	r2, [r3, r2]
   11abc:	ldr	r0, [r2]
   11ac0:	ldr	r2, [pc, #36]	; 11aec <__assert_fail@plt+0xf60>
   11ac4:	ldr	r3, [r3, r2]
   11ac8:	ldr	r2, [r3]
   11acc:	ldr	r3, [fp, #-8]
   11ad0:	ldr	r1, [pc, #24]	; 11af0 <__assert_fail@plt+0xf64>
   11ad4:	add	r1, pc, r1
   11ad8:	bl	10afc <fprintf@plt>
   11adc:	bl	120b4 <__assert_fail@plt+0x1528>
   11ae0:	andeq	r7, r1, r0, ror r5
   11ae4:	andeq	r0, r0, ip, lsr #1
   11ae8:	strheq	r0, [r0], -r8
   11aec:	andeq	r0, r0, r0, asr #1
   11af0:	andeq	r3, r0, r0, lsr #8
   11af4:	str	fp, [sp, #-8]!
   11af8:	str	lr, [sp, #4]
   11afc:	add	fp, sp, #4
   11b00:	sub	sp, sp, #24
   11b04:	str	r0, [fp, #-16]
   11b08:	str	r1, [fp, #-20]	; 0xffffffec
   11b0c:	str	r2, [fp, #-24]	; 0xffffffe8
   11b10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b14:	cmp	r3, #0
   11b18:	beq	11d58 <__assert_fail@plt+0x11cc>
   11b1c:	mov	r3, #0
   11b20:	strh	r3, [fp, #-6]
   11b24:	b	11b3c <__assert_fail@plt+0xfb0>
   11b28:	ldrsh	r3, [fp, #-6]
   11b2c:	uxth	r3, r3
   11b30:	add	r3, r3, #1
   11b34:	uxth	r3, r3
   11b38:	strh	r3, [fp, #-6]
   11b3c:	ldrsh	r2, [fp, #-6]
   11b40:	mov	r3, r2
   11b44:	lsl	r3, r3, #1
   11b48:	add	r3, r3, r2
   11b4c:	lsl	r3, r3, #2
   11b50:	mov	r2, r3
   11b54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b58:	add	r3, r3, r2
   11b5c:	ldrb	r3, [r3]
   11b60:	cmp	r3, #0
   11b64:	beq	11ba0 <__assert_fail@plt+0x1014>
   11b68:	ldr	r3, [fp, #-16]
   11b6c:	add	r3, r3, #1
   11b70:	ldrb	r1, [r3]
   11b74:	ldrsh	r2, [fp, #-6]
   11b78:	mov	r3, r2
   11b7c:	lsl	r3, r3, #1
   11b80:	add	r3, r3, r2
   11b84:	lsl	r3, r3, #2
   11b88:	mov	r2, r3
   11b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b90:	add	r3, r3, r2
   11b94:	ldrb	r3, [r3]
   11b98:	cmp	r1, r3
   11b9c:	bne	11b28 <__assert_fail@plt+0xf9c>
   11ba0:	ldrsh	r2, [fp, #-6]
   11ba4:	mov	r3, r2
   11ba8:	lsl	r3, r3, #1
   11bac:	add	r3, r3, r2
   11bb0:	lsl	r3, r3, #2
   11bb4:	mov	r2, r3
   11bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bbc:	add	r3, r3, r2
   11bc0:	ldrb	r3, [r3]
   11bc4:	cmp	r3, #0
   11bc8:	beq	11d60 <__assert_fail@plt+0x11d4>
   11bcc:	ldrsh	r2, [fp, #-6]
   11bd0:	mov	r3, r2
   11bd4:	lsl	r3, r3, #1
   11bd8:	add	r3, r3, r2
   11bdc:	lsl	r3, r3, #2
   11be0:	mov	r2, r3
   11be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11be8:	add	r3, r3, r2
   11bec:	ldr	r3, [r3, #4]
   11bf0:	cmp	r3, #0
   11bf4:	beq	11cb4 <__assert_fail@plt+0x1128>
   11bf8:	ldr	r3, [fp, #-16]
   11bfc:	add	r3, r3, #2
   11c00:	ldrb	r3, [r3]
   11c04:	cmp	r3, #0
   11c08:	bne	11c18 <__assert_fail@plt+0x108c>
   11c0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11c10:	cmp	r3, #0
   11c14:	beq	11cb4 <__assert_fail@plt+0x1128>
   11c18:	ldrsh	r2, [fp, #-6]
   11c1c:	mov	r3, r2
   11c20:	lsl	r3, r3, #1
   11c24:	add	r3, r3, r2
   11c28:	lsl	r3, r3, #2
   11c2c:	mov	r2, r3
   11c30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c34:	add	r3, r3, r2
   11c38:	ldr	r3, [r3, #4]
   11c3c:	ldr	r3, [r3]
   11c40:	cmp	r3, #0
   11c44:	bne	11d80 <__assert_fail@plt+0x11f4>
   11c48:	ldr	r3, [fp, #-16]
   11c4c:	add	r3, r3, #2
   11c50:	ldrb	r3, [r3]
   11c54:	cmp	r3, #0
   11c58:	beq	11c68 <__assert_fail@plt+0x10dc>
   11c5c:	ldr	r3, [fp, #-16]
   11c60:	add	r2, r3, #2
   11c64:	b	11c6c <__assert_fail@plt+0x10e0>
   11c68:	ldr	r2, [fp, #-20]	; 0xffffffec
   11c6c:	ldrsh	r1, [fp, #-6]
   11c70:	mov	r3, r1
   11c74:	lsl	r3, r3, #1
   11c78:	add	r3, r3, r1
   11c7c:	lsl	r3, r3, #2
   11c80:	mov	r1, r3
   11c84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c88:	add	r3, r3, r1
   11c8c:	ldr	r3, [r3, #4]
   11c90:	str	r2, [r3]
   11c94:	ldr	r3, [fp, #-16]
   11c98:	add	r3, r3, #2
   11c9c:	ldrb	r3, [r3]
   11ca0:	cmp	r3, #0
   11ca4:	moveq	r3, #1
   11ca8:	movne	r3, #0
   11cac:	uxtb	r3, r3
   11cb0:	b	11da0 <__assert_fail@plt+0x1214>
   11cb4:	ldrsh	r2, [fp, #-6]
   11cb8:	mov	r3, r2
   11cbc:	lsl	r3, r3, #1
   11cc0:	add	r3, r3, r2
   11cc4:	lsl	r3, r3, #2
   11cc8:	mov	r2, r3
   11ccc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11cd0:	add	r3, r3, r2
   11cd4:	ldr	r3, [r3, #8]
   11cd8:	cmp	r3, #0
   11cdc:	beq	11d68 <__assert_fail@plt+0x11dc>
   11ce0:	ldr	r3, [fp, #-16]
   11ce4:	add	r3, r3, #2
   11ce8:	ldrb	r3, [r3]
   11cec:	cmp	r3, #0
   11cf0:	bne	11d68 <__assert_fail@plt+0x11dc>
   11cf4:	ldrsh	r2, [fp, #-6]
   11cf8:	mov	r3, r2
   11cfc:	lsl	r3, r3, #1
   11d00:	add	r3, r3, r2
   11d04:	lsl	r3, r3, #2
   11d08:	mov	r2, r3
   11d0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d10:	add	r3, r3, r2
   11d14:	ldr	r3, [r3, #8]
   11d18:	ldrb	r3, [r3]
   11d1c:	cmp	r3, #0
   11d20:	bne	11d88 <__assert_fail@plt+0x11fc>
   11d24:	ldrsh	r2, [fp, #-6]
   11d28:	mov	r3, r2
   11d2c:	lsl	r3, r3, #1
   11d30:	add	r3, r3, r2
   11d34:	lsl	r3, r3, #2
   11d38:	mov	r2, r3
   11d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d40:	add	r3, r3, r2
   11d44:	ldr	r3, [r3, #8]
   11d48:	mov	r2, #1
   11d4c:	strb	r2, [r3]
   11d50:	mov	r3, #0
   11d54:	b	11da0 <__assert_fail@plt+0x1214>
   11d58:	nop	{0}
   11d5c:	b	11d6c <__assert_fail@plt+0x11e0>
   11d60:	nop	{0}
   11d64:	b	11d6c <__assert_fail@plt+0x11e0>
   11d68:	nop	{0}
   11d6c:	ldr	r1, [fp, #-16]
   11d70:	ldr	r3, [pc, #60]	; 11db4 <__assert_fail@plt+0x1228>
   11d74:	add	r3, pc, r3
   11d78:	mov	r0, r3
   11d7c:	bl	12138 <error@@Base+0x70>
   11d80:	nop	{0}
   11d84:	b	11d8c <__assert_fail@plt+0x1200>
   11d88:	nop	{0}
   11d8c:	ldr	r1, [fp, #-16]
   11d90:	ldr	r3, [pc, #32]	; 11db8 <__assert_fail@plt+0x122c>
   11d94:	add	r3, pc, r3
   11d98:	mov	r0, r3
   11d9c:	bl	12138 <error@@Base+0x70>
   11da0:	mov	r0, r3
   11da4:	sub	sp, fp, #4
   11da8:	ldr	fp, [sp]
   11dac:	add	sp, sp, #4
   11db0:	pop	{pc}		; (ldr pc, [sp], #4)
   11db4:	muleq	r0, r0, r1
   11db8:	andeq	r3, r0, r0, lsl #3
   11dbc:	str	r4, [sp, #-12]!
   11dc0:	str	fp, [sp, #4]
   11dc4:	str	lr, [sp, #8]
   11dc8:	add	fp, sp, #8
   11dcc:	sub	sp, sp, #28
   11dd0:	str	r0, [fp, #-24]	; 0xffffffe8
   11dd4:	str	r1, [fp, #-28]	; 0xffffffe4
   11dd8:	str	r2, [fp, #-32]	; 0xffffffe0
   11ddc:	str	r3, [fp, #-36]	; 0xffffffdc
   11de0:	ldr	r2, [pc, #488]	; 11fd0 <__assert_fail@plt+0x1444>
   11de4:	add	r2, pc, r2
   11de8:	mov	r3, #0
   11dec:	strh	r3, [fp, #-16]
   11df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11df4:	ldr	r3, [r3]
   11df8:	cmp	r3, #1
   11dfc:	bne	11e1c <__assert_fail@plt+0x1290>
   11e00:	ldr	r3, [pc, #460]	; 11fd4 <__assert_fail@plt+0x1448>
   11e04:	ldr	r3, [r2, r3]
   11e08:	ldrb	r3, [r3]
   11e0c:	cmp	r3, #0
   11e10:	beq	11e1c <__assert_fail@plt+0x1290>
   11e14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e18:	bl	11a70 <__assert_fail@plt+0xee4>
   11e1c:	mov	r3, #1
   11e20:	strh	r3, [fp, #-14]
   11e24:	b	11f98 <__assert_fail@plt+0x140c>
   11e28:	ldrsh	r3, [fp, #-14]
   11e2c:	lsl	r3, r3, #2
   11e30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e34:	add	r3, r2, r3
   11e38:	ldr	r3, [r3]
   11e3c:	ldrb	r3, [r3]
   11e40:	cmp	r3, #45	; 0x2d
   11e44:	bne	11f48 <__assert_fail@plt+0x13bc>
   11e48:	ldrsh	r3, [fp, #-14]
   11e4c:	lsl	r3, r3, #2
   11e50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e54:	add	r3, r2, r3
   11e58:	ldr	r3, [r3]
   11e5c:	add	r3, r3, #1
   11e60:	ldrb	r3, [r3]
   11e64:	cmp	r3, #0
   11e68:	beq	11f48 <__assert_fail@plt+0x13bc>
   11e6c:	ldrsh	r3, [fp, #-14]
   11e70:	lsl	r3, r3, #2
   11e74:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e78:	add	r3, r2, r3
   11e7c:	ldr	r4, [r3]
   11e80:	ldrsh	r3, [fp, #-14]
   11e84:	lsl	r3, r3, #2
   11e88:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11e8c:	add	r3, r2, r3
   11e90:	ldr	r3, [r3]
   11e94:	mov	r0, r3
   11e98:	bl	10af0 <strlen@plt>
   11e9c:	mov	r3, r0
   11ea0:	mov	r2, r3
   11ea4:	mov	r1, r4
   11ea8:	ldr	r3, [pc, #296]	; 11fd8 <__assert_fail@plt+0x144c>
   11eac:	add	r3, pc, r3
   11eb0:	mov	r0, r3
   11eb4:	bl	10b68 <strncmp@plt>
   11eb8:	mov	r3, r0
   11ebc:	cmp	r3, #0
   11ec0:	bne	11ecc <__assert_fail@plt+0x1340>
   11ec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ec8:	bl	11a70 <__assert_fail@plt+0xee4>
   11ecc:	ldrsh	r3, [fp, #-14]
   11ed0:	lsl	r3, r3, #2
   11ed4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ed8:	add	r3, r2, r3
   11edc:	ldr	r0, [r3]
   11ee0:	ldrsh	r3, [fp, #-14]
   11ee4:	add	r2, r3, #1
   11ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11eec:	ldr	r3, [r3]
   11ef0:	cmp	r2, r3
   11ef4:	bge	11f14 <__assert_fail@plt+0x1388>
   11ef8:	ldrsh	r3, [fp, #-14]
   11efc:	add	r3, r3, #1
   11f00:	lsl	r3, r3, #2
   11f04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11f08:	add	r3, r2, r3
   11f0c:	ldr	r3, [r3]
   11f10:	b	11f18 <__assert_fail@plt+0x138c>
   11f14:	mov	r3, #0
   11f18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11f1c:	mov	r1, r3
   11f20:	bl	11af4 <__assert_fail@plt+0xf68>
   11f24:	mov	r3, r0
   11f28:	cmp	r3, #0
   11f2c:	beq	11f84 <__assert_fail@plt+0x13f8>
   11f30:	ldrsh	r3, [fp, #-14]
   11f34:	uxth	r3, r3
   11f38:	add	r3, r3, #1
   11f3c:	uxth	r3, r3
   11f40:	strh	r3, [fp, #-14]
   11f44:	b	11f84 <__assert_fail@plt+0x13f8>
   11f48:	ldrsh	r3, [fp, #-14]
   11f4c:	lsl	r3, r3, #2
   11f50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11f54:	add	r2, r2, r3
   11f58:	ldrsh	r1, [fp, #-16]
   11f5c:	uxth	r3, r1
   11f60:	add	r3, r3, #1
   11f64:	uxth	r3, r3
   11f68:	strh	r3, [fp, #-16]
   11f6c:	mov	r3, r1
   11f70:	lsl	r3, r3, #2
   11f74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11f78:	add	r3, r1, r3
   11f7c:	ldr	r2, [r2]
   11f80:	str	r2, [r3]
   11f84:	ldrsh	r3, [fp, #-14]
   11f88:	uxth	r3, r3
   11f8c:	add	r3, r3, #1
   11f90:	uxth	r3, r3
   11f94:	strh	r3, [fp, #-14]
   11f98:	ldrsh	r2, [fp, #-14]
   11f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fa0:	ldr	r3, [r3]
   11fa4:	cmp	r2, r3
   11fa8:	blt	11e28 <__assert_fail@plt+0x129c>
   11fac:	ldrsh	r2, [fp, #-16]
   11fb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11fb4:	str	r2, [r3]
   11fb8:	nop	{0}
   11fbc:	sub	sp, fp, #8
   11fc0:	ldr	r4, [sp]
   11fc4:	ldr	fp, [sp, #4]
   11fc8:	add	sp, sp, #8
   11fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   11fd0:	andeq	r7, r1, r4, lsl r2
   11fd4:	andeq	r0, r0, r8, lsr #1
   11fd8:	andeq	r3, r0, ip, ror r0
   11fdc:	str	r4, [sp, #-12]!
   11fe0:	str	fp, [sp, #4]
   11fe4:	str	lr, [sp, #8]
   11fe8:	add	fp, sp, #8
   11fec:	sub	sp, sp, #20
   11ff0:	str	r0, [fp, #-16]
   11ff4:	str	r1, [fp, #-20]	; 0xffffffec
   11ff8:	str	r2, [fp, #-24]	; 0xffffffe8
   11ffc:	str	r3, [fp, #-28]	; 0xffffffe4
   12000:	ldr	r4, [pc, #80]	; 12058 <__assert_fail@plt+0x14cc>
   12004:	add	r4, pc, r4
   12008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1200c:	ldr	r3, [r3]
   12010:	mov	r0, r3
   12014:	bl	1191c <__assert_fail@plt+0xd90>
   12018:	mov	r2, r0
   1201c:	ldr	r3, [pc, #56]	; 1205c <__assert_fail@plt+0x14d0>
   12020:	ldr	r3, [r4, r3]
   12024:	str	r2, [r3]
   12028:	bl	11a20 <__assert_fail@plt+0xe94>
   1202c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12030:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12034:	ldr	r1, [fp, #-20]	; 0xffffffec
   12038:	ldr	r0, [fp, #-16]
   1203c:	bl	11dbc <__assert_fail@plt+0x1230>
   12040:	nop	{0}
   12044:	sub	sp, fp, #8
   12048:	ldr	r4, [sp]
   1204c:	ldr	fp, [sp, #4]
   12050:	add	sp, sp, #8
   12054:	pop	{pc}		; (ldr pc, [sp], #4)
   12058:	strdeq	r6, [r1], -r4
   1205c:	andeq	r0, r0, r0, asr #1
   12060:	str	fp, [sp, #-8]!
   12064:	str	lr, [sp, #4]
   12068:	add	fp, sp, #4
   1206c:	sub	sp, sp, #8
   12070:	str	r0, [fp, #-8]
   12074:	ldr	r3, [pc, #48]	; 120ac <__assert_fail@plt+0x1520>
   12078:	add	r3, pc, r3
   1207c:	ldr	r2, [pc, #44]	; 120b0 <__assert_fail@plt+0x1524>
   12080:	ldr	r2, [r3, r2]
   12084:	ldr	r2, [r2]
   12088:	cmp	r2, #0
   1208c:	beq	120a0 <__assert_fail@plt+0x1514>
   12090:	ldr	r2, [pc, #24]	; 120b0 <__assert_fail@plt+0x1524>
   12094:	ldr	r3, [r3, r2]
   12098:	ldr	r3, [r3]
   1209c:	blx	r3
   120a0:	bl	1189c <__assert_fail@plt+0xd10>
   120a4:	ldr	r0, [fp, #-8]
   120a8:	bl	10ad8 <exit@plt>
   120ac:	andeq	r6, r1, r0, lsl #31
   120b0:	andeq	r0, r0, r8, asr #1
   120b4:	str	fp, [sp, #-8]!
   120b8:	str	lr, [sp, #4]
   120bc:	add	fp, sp, #4
   120c0:	mov	r0, #0
   120c4:	bl	12060 <__assert_fail@plt+0x14d4>

000120c8 <error@@Base>:
   120c8:	str	r4, [sp, #-12]!
   120cc:	str	fp, [sp, #4]
   120d0:	str	lr, [sp, #8]
   120d4:	add	fp, sp, #8
   120d8:	sub	sp, sp, #12
   120dc:	str	r0, [fp, #-16]
   120e0:	ldr	r4, [pc, #60]	; 12124 <error@@Base+0x5c>
   120e4:	add	r4, pc, r4
   120e8:	ldr	r3, [pc, #56]	; 12128 <error@@Base+0x60>
   120ec:	ldr	r3, [r4, r3]
   120f0:	ldr	r0, [r3]
   120f4:	ldr	r3, [pc, #48]	; 1212c <error@@Base+0x64>
   120f8:	ldr	r3, [r4, r3]
   120fc:	ldr	r2, [r3]
   12100:	ldr	r3, [fp, #-16]
   12104:	ldr	r1, [pc, #36]	; 12130 <error@@Base+0x68>
   12108:	add	r1, pc, r1
   1210c:	bl	10afc <fprintf@plt>
   12110:	ldr	r3, [pc, #28]	; 12134 <error@@Base+0x6c>
   12114:	ldr	r3, [r4, r3]
   12118:	ldr	r3, [r3]
   1211c:	mov	r0, r3
   12120:	bl	12060 <__assert_fail@plt+0x14d4>
   12124:	andeq	r6, r1, r4, lsl pc
   12128:	strheq	r0, [r0], -r8
   1212c:	andeq	r0, r0, r0, asr #1
   12130:	andeq	r2, r0, r8, lsr #28
   12134:	ldrdeq	r0, [r0], -ip
   12138:	str	r4, [sp, #-12]!
   1213c:	str	fp, [sp, #4]
   12140:	str	lr, [sp, #8]
   12144:	add	fp, sp, #8
   12148:	sub	sp, sp, #20
   1214c:	str	r0, [fp, #-16]
   12150:	str	r1, [fp, #-20]	; 0xffffffec
   12154:	ldr	r4, [pc, #68]	; 121a0 <error@@Base+0xd8>
   12158:	add	r4, pc, r4
   1215c:	ldr	r3, [pc, #64]	; 121a4 <error@@Base+0xdc>
   12160:	ldr	r3, [r4, r3]
   12164:	ldr	r0, [r3]
   12168:	ldr	r3, [pc, #56]	; 121a8 <error@@Base+0xe0>
   1216c:	ldr	r3, [r4, r3]
   12170:	ldr	r2, [r3]
   12174:	ldr	r3, [fp, #-20]	; 0xffffffec
   12178:	str	r3, [sp]
   1217c:	ldr	r3, [fp, #-16]
   12180:	ldr	r1, [pc, #36]	; 121ac <error@@Base+0xe4>
   12184:	add	r1, pc, r1
   12188:	bl	10afc <fprintf@plt>
   1218c:	ldr	r3, [pc, #28]	; 121b0 <error@@Base+0xe8>
   12190:	ldr	r3, [r4, r3]
   12194:	ldr	r3, [r3]
   12198:	mov	r0, r3
   1219c:	bl	12060 <__assert_fail@plt+0x14d4>
   121a0:	andeq	r6, r1, r0, lsr #29
   121a4:	strheq	r0, [r0], -r8
   121a8:	andeq	r0, r0, r0, asr #1
   121ac:			; <UNDEFINED> instruction: 0x00002db4
   121b0:	ldrdeq	r0, [r0], -ip
   121b4:	str	fp, [sp, #-8]!
   121b8:	str	lr, [sp, #4]
   121bc:	add	fp, sp, #4
   121c0:	sub	sp, sp, #16
   121c4:	str	r0, [fp, #-8]
   121c8:	str	r1, [fp, #-12]
   121cc:	ldr	r3, [pc, #68]	; 12218 <error@@Base+0x150>
   121d0:	add	r3, pc, r3
   121d4:	ldr	r2, [pc, #64]	; 1221c <error@@Base+0x154>
   121d8:	ldr	r2, [r3, r2]
   121dc:	ldr	r0, [r2]
   121e0:	ldr	r2, [pc, #56]	; 12220 <error@@Base+0x158>
   121e4:	ldr	r3, [r3, r2]
   121e8:	ldr	r2, [r3]
   121ec:	ldr	r3, [fp, #-12]
   121f0:	str	r3, [sp]
   121f4:	ldr	r3, [fp, #-8]
   121f8:	ldr	r1, [pc, #36]	; 12224 <error@@Base+0x15c>
   121fc:	add	r1, pc, r1
   12200:	bl	10afc <fprintf@plt>
   12204:	nop	{0}
   12208:	sub	sp, fp, #4
   1220c:	ldr	fp, [sp]
   12210:	add	sp, sp, #4
   12214:	pop	{pc}		; (ldr pc, [sp], #4)
   12218:	andeq	r6, r1, r8, lsr #28
   1221c:	strheq	r0, [r0], -r8
   12220:	andeq	r0, r0, r0, asr #1
   12224:	andeq	r2, r0, ip, lsr sp
   12228:	push	{fp}		; (str fp, [sp, #-4]!)
   1222c:	add	fp, sp, #0
   12230:	sub	sp, sp, #20
   12234:	str	r0, [fp, #-8]
   12238:	str	r1, [fp, #-12]
   1223c:	str	r2, [fp, #-16]
   12240:	ldr	r3, [fp, #-8]
   12244:	ldr	r2, [r3]
   12248:	ldr	r3, [fp, #-12]
   1224c:	add	r2, r2, r3
   12250:	ldr	r3, [fp, #-8]
   12254:	str	r2, [r3]
   12258:	ldr	r3, [fp, #-8]
   1225c:	ldr	r2, [r3, #4]
   12260:	ldr	r3, [fp, #-16]
   12264:	add	r2, r2, r3
   12268:	ldr	r3, [fp, #-8]
   1226c:	str	r2, [r3, #4]
   12270:	nop	{0}
   12274:	add	sp, fp, #0
   12278:	pop	{fp}		; (ldr fp, [sp], #4)
   1227c:	bx	lr
   12280:	str	fp, [sp, #-8]!
   12284:	str	lr, [sp, #4]
   12288:	add	fp, sp, #4
   1228c:	sub	sp, sp, #24
   12290:	str	r0, [fp, #-16]
   12294:	str	r1, [fp, #-20]	; 0xffffffec
   12298:	str	r2, [fp, #-24]	; 0xffffffe8
   1229c:	str	r3, [fp, #-28]	; 0xffffffe4
   122a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   122a4:	ldr	r0, [fp, #-16]
   122a8:	bl	11130 <__assert_fail@plt+0x5a4>
   122ac:	str	r0, [fp, #-8]
   122b0:	ldr	r3, [fp, #-8]
   122b4:	cmp	r3, #0
   122b8:	bne	122f0 <error@@Base+0x228>
   122bc:	mov	r1, #20
   122c0:	mov	r0, #1
   122c4:	bl	114a8 <__assert_fail@plt+0x91c>
   122c8:	str	r0, [fp, #-8]
   122cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   122d0:	bl	10a3c <strdup@plt>
   122d4:	mov	r3, r0
   122d8:	mov	r2, r3
   122dc:	ldr	r3, [fp, #-8]
   122e0:	str	r2, [r3, #8]
   122e4:	ldr	r1, [fp, #-8]
   122e8:	ldr	r0, [fp, #-16]
   122ec:	bl	1121c <__assert_fail@plt+0x690>
   122f0:	ldr	r3, [fp, #-8]
   122f4:	add	r3, r3, #12
   122f8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   122fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12300:	mov	r0, r3
   12304:	bl	12228 <error@@Base+0x160>
   12308:	nop	{0}
   1230c:	sub	sp, fp, #4
   12310:	ldr	fp, [sp]
   12314:	add	sp, sp, #4
   12318:	pop	{pc}		; (ldr pc, [sp], #4)
   1231c:	str	fp, [sp, #-8]!
   12320:	str	lr, [sp, #4]
   12324:	add	fp, sp, #4
   12328:	sub	sp, sp, #8
   1232c:	str	r0, [fp, #-8]
   12330:	ldr	r2, [fp, #-8]
   12334:	mov	r1, #99	; 0x63
   12338:	ldr	r3, [pc, #48]	; 12370 <error@@Base+0x2a8>
   1233c:	add	r3, pc, r3
   12340:	mov	r0, r3
   12344:	bl	10a24 <fgets@plt>
   12348:	mov	r3, r0
   1234c:	cmp	r3, #0
   12350:	movne	r3, #1
   12354:	moveq	r3, #0
   12358:	uxtb	r3, r3
   1235c:	mov	r0, r3
   12360:	sub	sp, fp, #4
   12364:	ldr	fp, [sp]
   12368:	add	sp, sp, #4
   1236c:	pop	{pc}		; (ldr pc, [sp], #4)
   12370:	andeq	r6, r1, r4, asr #27
   12374:	str	fp, [sp, #-8]!
   12378:	str	lr, [sp, #4]
   1237c:	add	fp, sp, #4
   12380:	sub	sp, sp, #8
   12384:	str	r0, [fp, #-8]
   12388:	str	r1, [fp, #-12]
   1238c:	ldr	r0, [fp, #-8]
   12390:	bl	1231c <error@@Base+0x254>
   12394:	mov	r3, r0
   12398:	cmp	r3, #0
   1239c:	beq	123d4 <error@@Base+0x30c>
   123a0:	ldr	r2, [fp, #-12]
   123a4:	ldr	r3, [pc, #68]	; 123f0 <error@@Base+0x328>
   123a8:	add	r3, pc, r3
   123ac:	mov	r1, r3
   123b0:	ldr	r3, [pc, #60]	; 123f4 <error@@Base+0x32c>
   123b4:	add	r3, pc, r3
   123b8:	mov	r0, r3
   123bc:	bl	10b08 <__isoc99_sscanf@plt>
   123c0:	mov	r3, r0
   123c4:	cmp	r3, #1
   123c8:	bne	123d4 <error@@Base+0x30c>
   123cc:	mov	r3, #1
   123d0:	b	123d8 <error@@Base+0x310>
   123d4:	mov	r3, #0
   123d8:	uxtb	r3, r3
   123dc:	mov	r0, r3
   123e0:	sub	sp, fp, #4
   123e4:	ldr	fp, [sp]
   123e8:	add	sp, sp, #4
   123ec:	pop	{pc}		; (ldr pc, [sp], #4)
   123f0:	andeq	r2, r0, r0, lsr #23
   123f4:	andeq	r6, r1, ip, asr #26
   123f8:	str	fp, [sp, #-8]!
   123fc:	str	lr, [sp, #4]
   12400:	add	fp, sp, #4
   12404:	sub	sp, sp, #16
   12408:	str	r0, [fp, #-8]
   1240c:	str	r1, [fp, #-12]
   12410:	str	r2, [fp, #-16]
   12414:	ldr	r0, [fp, #-8]
   12418:	bl	1231c <error@@Base+0x254>
   1241c:	mov	r3, r0
   12420:	cmp	r3, #0
   12424:	beq	12458 <error@@Base+0x390>
   12428:	ldr	r3, [fp, #-16]
   1242c:	ldr	r2, [fp, #-12]
   12430:	ldr	r1, [pc, #60]	; 12474 <error@@Base+0x3ac>
   12434:	add	r1, pc, r1
   12438:	ldr	r0, [pc, #56]	; 12478 <error@@Base+0x3b0>
   1243c:	add	r0, pc, r0
   12440:	bl	10b08 <__isoc99_sscanf@plt>
   12444:	mov	r3, r0
   12448:	cmp	r3, #2
   1244c:	bne	12458 <error@@Base+0x390>
   12450:	mov	r3, #1
   12454:	b	1245c <error@@Base+0x394>
   12458:	mov	r3, #0
   1245c:	uxtb	r3, r3
   12460:	mov	r0, r3
   12464:	sub	sp, fp, #4
   12468:	ldr	fp, [sp]
   1246c:	add	sp, sp, #4
   12470:	pop	{pc}		; (ldr pc, [sp], #4)
   12474:	andeq	r2, r0, r8, lsl fp
   12478:	andeq	r6, r1, r4, asr #25
   1247c:	str	fp, [sp, #-8]!
   12480:	str	lr, [sp, #4]
   12484:	add	fp, sp, #4
   12488:	sub	sp, sp, #24
   1248c:	str	r0, [fp, #-24]	; 0xffffffe8
   12490:	str	r1, [fp, #-28]	; 0xffffffe4
   12494:	mov	r3, #0
   12498:	str	r3, [fp, #-12]
   1249c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124a0:	bl	1231c <error@@Base+0x254>
   124a4:	mov	r3, r0
   124a8:	cmp	r3, #0
   124ac:	beq	12564 <error@@Base+0x49c>
   124b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   124b4:	bl	1231c <error@@Base+0x254>
   124b8:	mov	r3, r0
   124bc:	cmp	r3, #0
   124c0:	beq	12564 <error@@Base+0x49c>
   124c4:	b	12544 <error@@Base+0x47c>
   124c8:	ldr	r3, [pc, #172]	; 1257c <error@@Base+0x4b4>
   124cc:	add	r3, pc, r3
   124d0:	add	r0, r3, #29
   124d4:	bl	10b44 <atoi@plt>
   124d8:	str	r0, [fp, #-8]
   124dc:	ldr	r3, [fp, #-8]
   124e0:	cmp	r3, #0
   124e4:	bne	12524 <error@@Base+0x45c>
   124e8:	ldr	r3, [pc, #144]	; 12580 <error@@Base+0x4b8>
   124ec:	add	r3, pc, r3
   124f0:	mov	r1, r3
   124f4:	ldr	r3, [pc, #136]	; 12584 <error@@Base+0x4bc>
   124f8:	add	r3, pc, r3
   124fc:	add	r0, r3, #29
   12500:	bl	109e8 <strcmp@plt>
   12504:	mov	r3, r0
   12508:	cmp	r3, #0
   1250c:	bne	1251c <error@@Base+0x454>
   12510:	ldr	r3, [fp, #-16]
   12514:	str	r3, [fp, #-12]
   12518:	b	12524 <error@@Base+0x45c>
   1251c:	mov	r3, #11
   12520:	str	r3, [fp, #-8]
   12524:	ldr	r3, [fp, #-8]
   12528:	lsl	r3, r3, #3
   1252c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12530:	add	r3, r2, r3
   12534:	ldr	r1, [fp, #-16]
   12538:	ldr	r2, [fp, #-20]	; 0xffffffec
   1253c:	mov	r0, r3
   12540:	bl	12228 <error@@Base+0x160>
   12544:	sub	r2, fp, #20
   12548:	sub	r3, fp, #16
   1254c:	mov	r1, r3
   12550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12554:	bl	123f8 <error@@Base+0x330>
   12558:	mov	r3, r0
   1255c:	cmp	r3, #0
   12560:	bne	124c8 <error@@Base+0x400>
   12564:	ldr	r3, [fp, #-12]
   12568:	mov	r0, r3
   1256c:	sub	sp, fp, #4
   12570:	ldr	fp, [sp]
   12574:	add	sp, sp, #4
   12578:	pop	{pc}		; (ldr pc, [sp], #4)
   1257c:	andeq	r6, r1, r4, lsr ip
   12580:	andeq	r2, r0, r8, ror #20
   12584:	andeq	r6, r1, r8, lsl #24
   12588:	str	fp, [sp, #-8]!
   1258c:	str	lr, [sp, #4]
   12590:	add	fp, sp, #4
   12594:	sub	sp, sp, #16
   12598:	str	r0, [fp, #-16]
   1259c:	str	r1, [fp, #-20]	; 0xffffffec
   125a0:	ldr	r0, [fp, #-16]
   125a4:	bl	1231c <error@@Base+0x254>
   125a8:	mov	r3, r0
   125ac:	cmp	r3, #0
   125b0:	beq	12630 <error@@Base+0x568>
   125b4:	ldr	r0, [fp, #-16]
   125b8:	bl	1231c <error@@Base+0x254>
   125bc:	mov	r3, r0
   125c0:	cmp	r3, #0
   125c4:	beq	12630 <error@@Base+0x568>
   125c8:	b	12610 <error@@Base+0x548>
   125cc:	ldr	r3, [pc, #112]	; 12644 <error@@Base+0x57c>
   125d0:	add	r3, pc, r3
   125d4:	mov	r0, r3
   125d8:	bl	10af0 <strlen@plt>
   125dc:	mov	r3, r0
   125e0:	sub	r3, r3, #1
   125e4:	ldr	r2, [pc, #92]	; 12648 <error@@Base+0x580>
   125e8:	add	r2, pc, r2
   125ec:	mov	r1, #0
   125f0:	strb	r1, [r2, r3]
   125f4:	ldr	r2, [fp, #-8]
   125f8:	ldr	r3, [fp, #-12]
   125fc:	ldr	r1, [pc, #72]	; 1264c <error@@Base+0x584>
   12600:	add	r1, pc, r1
   12604:	add	r1, r1, #29
   12608:	ldr	r0, [fp, #-20]	; 0xffffffec
   1260c:	bl	12280 <error@@Base+0x1b8>
   12610:	sub	r2, fp, #12
   12614:	sub	r3, fp, #8
   12618:	mov	r1, r3
   1261c:	ldr	r0, [fp, #-16]
   12620:	bl	123f8 <error@@Base+0x330>
   12624:	mov	r3, r0
   12628:	cmp	r3, #0
   1262c:	bne	125cc <error@@Base+0x504>
   12630:	nop	{0}
   12634:	sub	sp, fp, #4
   12638:	ldr	fp, [sp]
   1263c:	add	sp, sp, #4
   12640:	pop	{pc}		; (ldr pc, [sp], #4)
   12644:	andeq	r6, r1, r0, lsr fp
   12648:	andeq	r6, r1, r8, lsl fp
   1264c:	andeq	r6, r1, r0, lsl #22
   12650:	str	fp, [sp, #-8]!
   12654:	str	lr, [sp, #4]
   12658:	add	fp, sp, #4
   1265c:	sub	sp, sp, #32
   12660:	str	r0, [fp, #-32]	; 0xffffffe0
   12664:	str	r1, [fp, #-36]	; 0xffffffdc
   12668:	ldr	r3, [pc, #508]	; 1286c <error@@Base+0x7a4>
   1266c:	add	r3, pc, r3
   12670:	mov	r1, r3
   12674:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12678:	bl	115f4 <__assert_fail@plt+0xa68>
   1267c:	str	r0, [fp, #-8]
   12680:	ldr	r0, [fp, #-8]
   12684:	bl	1231c <error@@Base+0x254>
   12688:	mov	r3, r0
   1268c:	cmp	r3, #0
   12690:	beq	1281c <error@@Base+0x754>
   12694:	mov	r2, #45	; 0x2d
   12698:	ldr	r3, [pc, #464]	; 12870 <error@@Base+0x7a8>
   1269c:	add	r3, pc, r3
   126a0:	mov	r1, r3
   126a4:	ldr	r3, [pc, #456]	; 12874 <error@@Base+0x7ac>
   126a8:	add	r3, pc, r3
   126ac:	mov	r0, r3
   126b0:	bl	10b68 <strncmp@plt>
   126b4:	mov	r3, r0
   126b8:	cmp	r3, #0
   126bc:	bne	1281c <error@@Base+0x754>
   126c0:	ldr	r0, [fp, #-8]
   126c4:	bl	1231c <error@@Base+0x254>
   126c8:	mov	r3, r0
   126cc:	cmp	r3, #0
   126d0:	beq	1281c <error@@Base+0x754>
   126d4:	ldr	r3, [pc, #412]	; 12878 <error@@Base+0x7b0>
   126d8:	add	r3, pc, r3
   126dc:	mov	r1, r3
   126e0:	ldr	r3, [pc, #404]	; 1287c <error@@Base+0x7b4>
   126e4:	add	r3, pc, r3
   126e8:	mov	r0, r3
   126ec:	bl	109e8 <strcmp@plt>
   126f0:	mov	r3, r0
   126f4:	cmp	r3, #0
   126f8:	bne	1281c <error@@Base+0x754>
   126fc:	sub	r3, fp, #20
   12700:	mov	r1, r3
   12704:	ldr	r0, [fp, #-8]
   12708:	bl	12374 <error@@Base+0x2ac>
   1270c:	mov	r3, r0
   12710:	cmp	r3, #0
   12714:	beq	1281c <error@@Base+0x754>
   12718:	sub	r3, fp, #24
   1271c:	mov	r1, r3
   12720:	ldr	r0, [fp, #-8]
   12724:	bl	12374 <error@@Base+0x2ac>
   12728:	mov	r3, r0
   1272c:	cmp	r3, #0
   12730:	beq	1281c <error@@Base+0x754>
   12734:	ldr	r0, [fp, #-8]
   12738:	bl	1231c <error@@Base+0x254>
   1273c:	mov	r3, r0
   12740:	cmp	r3, #0
   12744:	beq	1281c <error@@Base+0x754>
   12748:	ldr	r0, [fp, #-8]
   1274c:	bl	1231c <error@@Base+0x254>
   12750:	mov	r3, r0
   12754:	cmp	r3, #0
   12758:	beq	1281c <error@@Base+0x754>
   1275c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12760:	ldr	r1, [fp, #-20]	; 0xffffffec
   12764:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12768:	mov	r0, r3
   1276c:	bl	12228 <error@@Base+0x160>
   12770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12774:	add	r3, r3, #8
   12778:	mov	r1, r3
   1277c:	ldr	r0, [fp, #-8]
   12780:	bl	1247c <error@@Base+0x3b4>
   12784:	str	r0, [fp, #-12]
   12788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1278c:	add	r3, r3, #416	; 0x1a0
   12790:	mov	r1, r3
   12794:	ldr	r0, [fp, #-8]
   12798:	bl	1247c <error@@Base+0x3b4>
   1279c:	str	r0, [fp, #-16]
   127a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   127a4:	add	r3, r3, #824	; 0x338
   127a8:	mov	r1, r3
   127ac:	ldr	r0, [fp, #-8]
   127b0:	bl	1247c <error@@Base+0x3b4>
   127b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   127b8:	cmp	r3, #0
   127bc:	ble	1284c <error@@Base+0x784>
   127c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   127c4:	add	r3, r3, #920	; 0x398
   127c8:	mov	r1, r3
   127cc:	ldr	r0, [fp, #-8]
   127d0:	bl	1247c <error@@Base+0x3b4>
   127d4:	ldr	r3, [fp, #-12]
   127d8:	cmp	r3, #0
   127dc:	ble	127f4 <error@@Base+0x72c>
   127e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   127e4:	add	r3, r3, #992	; 0x3e0
   127e8:	mov	r1, r3
   127ec:	ldr	r0, [fp, #-8]
   127f0:	bl	12588 <error@@Base+0x4c0>
   127f4:	ldr	r3, [fp, #-16]
   127f8:	cmp	r3, #0
   127fc:	ble	1284c <error@@Base+0x784>
   12800:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12804:	add	r3, r3, #9024	; 0x2340
   12808:	add	r3, r3, #24
   1280c:	mov	r1, r3
   12810:	ldr	r0, [fp, #-8]
   12814:	bl	12588 <error@@Base+0x4c0>
   12818:	b	1284c <error@@Base+0x784>
   1281c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12820:	cmp	r3, #0
   12824:	beq	12830 <error@@Base+0x768>
   12828:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1282c:	b	12838 <error@@Base+0x770>
   12830:	ldr	r3, [pc, #72]	; 12880 <error@@Base+0x7b8>
   12834:	add	r3, pc, r3
   12838:	mov	r1, r3
   1283c:	ldr	r3, [pc, #64]	; 12884 <error@@Base+0x7bc>
   12840:	add	r3, pc, r3
   12844:	mov	r0, r3
   12848:	bl	12138 <error@@Base+0x70>
   1284c:	nop	{0}
   12850:	ldr	r0, [fp, #-8]
   12854:	bl	116d4 <__assert_fail@plt+0xb48>
   12858:	nop	{0}
   1285c:	sub	sp, fp, #4
   12860:	ldr	fp, [sp]
   12864:	add	sp, sp, #4
   12868:	pop	{pc}		; (ldr pc, [sp], #4)
   1286c:	strdeq	r2, [r0], -r0
   12870:	andeq	r2, r0, r4, asr #17
   12874:	andeq	r6, r1, r8, asr sl
   12878:			; <UNDEFINED> instruction: 0x000028b8
   1287c:	andeq	r6, r1, ip, lsl sl
   12880:	andeq	r2, r0, ip, lsl #15
   12884:	andeq	r2, r0, r8, lsl #15
   12888:	str	fp, [sp, #-8]!
   1288c:	str	lr, [sp, #4]
   12890:	add	fp, sp, #4
   12894:	sub	sp, sp, #8
   12898:	str	r0, [fp, #-8]
   1289c:	str	r1, [fp, #-12]
   128a0:	ldr	r3, [fp, #-12]
   128a4:	ldr	r3, [r3]
   128a8:	cmp	r3, #0
   128ac:	bne	128cc <error@@Base+0x804>
   128b0:	ldr	r3, [fp, #-8]
   128b4:	mov	r2, #8
   128b8:	mov	r1, #1
   128bc:	ldr	r0, [pc, #116]	; 12938 <error@@Base+0x870>
   128c0:	add	r0, pc, r0
   128c4:	bl	10a78 <fwrite@plt>
   128c8:	b	12918 <error@@Base+0x850>
   128cc:	ldr	r3, [fp, #-12]
   128d0:	ldr	r2, [r3]
   128d4:	ldr	r3, [fp, #-12]
   128d8:	ldr	r3, [r3, #4]
   128dc:	sub	r3, r2, r3
   128e0:	vmov	s15, r3
   128e4:	vcvt.f64.s32	d7, s15
   128e8:	vldr	d6, [pc, #64]	; 12930 <error@@Base+0x868>
   128ec:	vmul.f64	d6, d7, d6
   128f0:	ldr	r3, [fp, #-12]
   128f4:	ldr	r3, [r3]
   128f8:	vmov	s15, r3
   128fc:	vcvt.f64.s32	d7, s15
   12900:	vdiv.f64	d5, d6, d7
   12904:	vmov	r2, r3, d5
   12908:	ldr	r1, [pc, #44]	; 1293c <error@@Base+0x874>
   1290c:	add	r1, pc, r1
   12910:	ldr	r0, [fp, #-8]
   12914:	bl	10afc <fprintf@plt>
   12918:	nop	{0}
   1291c:	sub	sp, fp, #4
   12920:	ldr	fp, [sp]
   12924:	add	sp, sp, #4
   12928:	pop	{pc}		; (ldr pc, [sp], #4)
   1292c:	nop	{0}
   12930:	andeq	r0, r0, r0
   12934:	subsmi	r0, r9, r0
   12938:	andeq	r2, r0, ip, lsl r7
   1293c:	ldrdeq	r2, [r0], -ip
   12940:	str	fp, [sp, #-8]!
   12944:	str	lr, [sp, #4]
   12948:	add	fp, sp, #4
   1294c:	sub	sp, sp, #8
   12950:	str	r0, [fp, #-8]
   12954:	str	r1, [fp, #-12]
   12958:	ldr	r3, [fp, #-12]
   1295c:	cmp	r3, #0
   12960:	beq	12994 <error@@Base+0x8cc>
   12964:	ldr	r3, [fp, #-12]
   12968:	ldr	r2, [r3]
   1296c:	ldr	r3, [fp, #-12]
   12970:	ldr	r3, [r3, #4]
   12974:	ldr	r1, [pc, #92]	; 129d8 <error@@Base+0x910>
   12978:	add	r1, pc, r1
   1297c:	ldr	r0, [fp, #-8]
   12980:	bl	10afc <fprintf@plt>
   12984:	ldr	r1, [fp, #-12]
   12988:	ldr	r0, [fp, #-8]
   1298c:	bl	12888 <error@@Base+0x7c0>
   12990:	b	129ac <error@@Base+0x8e4>
   12994:	ldr	r3, [fp, #-8]
   12998:	mov	r2, #26
   1299c:	mov	r1, #1
   129a0:	ldr	r0, [pc, #52]	; 129dc <error@@Base+0x914>
   129a4:	add	r0, pc, r0
   129a8:	bl	10a78 <fwrite@plt>
   129ac:	ldr	r3, [fp, #-8]
   129b0:	mov	r2, #3
   129b4:	mov	r1, #1
   129b8:	ldr	r0, [pc, #32]	; 129e0 <error@@Base+0x918>
   129bc:	add	r0, pc, r0
   129c0:	bl	10a78 <fwrite@plt>
   129c4:	nop	{0}
   129c8:	sub	sp, fp, #4
   129cc:	ldr	fp, [sp]
   129d0:	add	sp, sp, #4
   129d4:	pop	{pc}		; (ldr pc, [sp], #4)
   129d8:	andeq	r2, r0, r8, ror r6
   129dc:	andeq	r2, r0, r8, asr r6
   129e0:	andeq	r2, r0, ip, asr r6
   129e4:	str	fp, [sp, #-8]!
   129e8:	str	lr, [sp, #4]
   129ec:	add	fp, sp, #4
   129f0:	sub	sp, sp, #32
   129f4:	str	r0, [fp, #-16]
   129f8:	str	r1, [fp, #-20]	; 0xffffffec
   129fc:	mov	r1, r2
   12a00:	str	r3, [fp, #-28]	; 0xffffffe4
   12a04:	ldr	r2, [fp, #4]
   12a08:	ldr	r3, [fp, #8]
   12a0c:	strh	r1, [fp, #-24]	; 0xffffffe8
   12a10:	strb	r2, [fp, #-32]	; 0xffffffe0
   12a14:	strb	r3, [fp, #-36]	; 0xffffffdc
   12a18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12a1c:	ldr	r3, [pc, #384]	; 12ba4 <error@@Base+0xadc>
   12a20:	add	r3, pc, r3
   12a24:	mov	r1, r3
   12a28:	ldr	r0, [fp, #-16]
   12a2c:	bl	10afc <fprintf@plt>
   12a30:	mov	r1, #0
   12a34:	ldr	r0, [fp, #-16]
   12a38:	bl	12940 <error@@Base+0x878>
   12a3c:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   12a40:	cmp	r3, #0
   12a44:	beq	12a54 <error@@Base+0x98c>
   12a48:	ldr	r3, [pc, #344]	; 12ba8 <error@@Base+0xae0>
   12a4c:	add	r3, pc, r3
   12a50:	b	12a5c <error@@Base+0x994>
   12a54:	ldr	r3, [pc, #336]	; 12bac <error@@Base+0xae4>
   12a58:	add	r3, pc, r3
   12a5c:	mov	r2, r3
   12a60:	ldr	r3, [pc, #328]	; 12bb0 <error@@Base+0xae8>
   12a64:	add	r3, pc, r3
   12a68:	mov	r1, r3
   12a6c:	ldr	r0, [fp, #-16]
   12a70:	bl	10afc <fprintf@plt>
   12a74:	mov	r3, #1
   12a78:	strh	r3, [fp, #-6]
   12a7c:	b	12ae8 <error@@Base+0xa20>
   12a80:	ldrsh	r3, [fp, #-6]
   12a84:	lsl	r3, r3, #3
   12a88:	ldr	r2, [fp, #-20]	; 0xffffffec
   12a8c:	add	r3, r2, r3
   12a90:	ldr	r3, [r3]
   12a94:	cmp	r3, #0
   12a98:	ble	12ad4 <error@@Base+0xa0c>
   12a9c:	ldrsh	r3, [fp, #-6]
   12aa0:	lsl	r3, r3, #3
   12aa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12aa8:	add	r3, r2, r3
   12aac:	mov	r1, r3
   12ab0:	ldr	r0, [fp, #-16]
   12ab4:	bl	12940 <error@@Base+0x878>
   12ab8:	ldrsh	r3, [fp, #-6]
   12abc:	mov	r2, r3
   12ac0:	ldr	r3, [pc, #236]	; 12bb4 <error@@Base+0xaec>
   12ac4:	add	r3, pc, r3
   12ac8:	mov	r1, r3
   12acc:	ldr	r0, [fp, #-16]
   12ad0:	bl	10afc <fprintf@plt>
   12ad4:	ldrsh	r3, [fp, #-6]
   12ad8:	uxth	r3, r3
   12adc:	add	r3, r3, #1
   12ae0:	uxth	r3, r3
   12ae4:	strh	r3, [fp, #-6]
   12ae8:	ldrsh	r2, [fp, #-6]
   12aec:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12af0:	cmp	r2, r3
   12af4:	ble	12a80 <error@@Base+0x9b8>
   12af8:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   12afc:	cmp	r3, #0
   12b00:	beq	12b60 <error@@Base+0xa98>
   12b04:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12b08:	add	r3, r3, #1
   12b0c:	lsl	r3, r3, #3
   12b10:	ldr	r2, [fp, #-20]	; 0xffffffec
   12b14:	add	r3, r2, r3
   12b18:	ldr	r3, [r3]
   12b1c:	cmp	r3, #0
   12b20:	ble	12b60 <error@@Base+0xa98>
   12b24:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12b28:	add	r3, r3, #1
   12b2c:	lsl	r3, r3, #3
   12b30:	ldr	r2, [fp, #-20]	; 0xffffffec
   12b34:	add	r3, r2, r3
   12b38:	mov	r1, r3
   12b3c:	ldr	r0, [fp, #-16]
   12b40:	bl	12940 <error@@Base+0x878>
   12b44:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12b48:	mov	r2, r3
   12b4c:	ldr	r3, [pc, #100]	; 12bb8 <error@@Base+0xaf0>
   12b50:	add	r3, pc, r3
   12b54:	mov	r1, r3
   12b58:	ldr	r0, [fp, #-16]
   12b5c:	bl	10afc <fprintf@plt>
   12b60:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   12b64:	cmp	r3, #0
   12b68:	beq	12b90 <error@@Base+0xac8>
   12b6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12b70:	ldr	r0, [fp, #-16]
   12b74:	bl	12940 <error@@Base+0x878>
   12b78:	ldr	r3, [fp, #-16]
   12b7c:	mov	r2, #7
   12b80:	mov	r1, #1
   12b84:	ldr	r0, [pc, #48]	; 12bbc <error@@Base+0xaf4>
   12b88:	add	r0, pc, r0
   12b8c:	bl	10a78 <fwrite@plt>
   12b90:	nop	{0}
   12b94:	sub	sp, fp, #4
   12b98:	ldr	fp, [sp]
   12b9c:	add	sp, sp, #4
   12ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ba4:	strdeq	r2, [r0], -ip
   12ba8:	ldrdeq	r2, [r0], -r8
   12bac:	ldrdeq	r2, [r0], -r4
   12bb0:	ldrdeq	r2, [r0], -r0
   12bb4:	andeq	r2, r0, r4, ror r5
   12bb8:	strdeq	r2, [r0], -r4
   12bbc:	andeq	r2, r0, ip, asr #7
   12bc0:	str	fp, [sp, #-8]!
   12bc4:	str	lr, [sp, #4]
   12bc8:	add	fp, sp, #4
   12bcc:	sub	sp, sp, #8
   12bd0:	str	r0, [fp, #-8]
   12bd4:	str	r1, [fp, #-12]
   12bd8:	ldr	r3, [fp, #-8]
   12bdc:	ldr	r2, [r3, #8]
   12be0:	ldr	r3, [fp, #-12]
   12be4:	ldr	r3, [r3, #8]
   12be8:	mov	r1, r3
   12bec:	mov	r0, r2
   12bf0:	bl	1150c <__assert_fail@plt+0x980>
   12bf4:	mov	r3, r0
   12bf8:	mov	r0, r3
   12bfc:	sub	sp, fp, #4
   12c00:	ldr	fp, [sp]
   12c04:	add	sp, sp, #4
   12c08:	pop	{pc}		; (ldr pc, [sp], #4)
   12c0c:	str	fp, [sp, #-8]!
   12c10:	str	lr, [sp, #4]
   12c14:	add	fp, sp, #4
   12c18:	sub	sp, sp, #24
   12c1c:	str	r0, [fp, #-16]
   12c20:	str	r1, [fp, #-20]	; 0xffffffec
   12c24:	str	r2, [fp, #-24]	; 0xffffffe8
   12c28:	ldr	r0, [fp, #-20]	; 0xffffffec
   12c2c:	bl	11314 <__assert_fail@plt+0x788>
   12c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c34:	add	r3, r3, #4096	; 0x1000
   12c38:	ldr	r0, [r3, #3956]	; 0xf74
   12c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c40:	add	r3, r3, #4096	; 0x1000
   12c44:	ldr	r3, [r3, #3952]	; 0xf70
   12c48:	ldr	r2, [pc, #224]	; 12d30 <error@@Base+0xc68>
   12c4c:	add	r2, pc, r2
   12c50:	mov	r1, r3
   12c54:	bl	14d50 <error@@Base+0x2c88>
   12c58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12c5c:	ldr	r3, [pc, #208]	; 12d34 <error@@Base+0xc6c>
   12c60:	add	r3, pc, r3
   12c64:	mov	r1, r3
   12c68:	ldr	r0, [fp, #-16]
   12c6c:	bl	10afc <fprintf@plt>
   12c70:	mov	r1, #0
   12c74:	ldr	r0, [fp, #-16]
   12c78:	bl	12940 <error@@Base+0x878>
   12c7c:	ldr	r1, [fp, #-16]
   12c80:	mov	r0, #10
   12c84:	bl	10b2c <fputc@plt>
   12c88:	mov	r3, #0
   12c8c:	str	r3, [fp, #-8]
   12c90:	b	12d04 <error@@Base+0xc3c>
   12c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   12c98:	add	r3, r3, #4096	; 0x1000
   12c9c:	ldr	r2, [r3, #3952]	; 0xf70
   12ca0:	ldr	r3, [fp, #-8]
   12ca4:	lsl	r3, r3, #2
   12ca8:	add	r3, r2, r3
   12cac:	ldr	r3, [r3]
   12cb0:	add	r3, r3, #12
   12cb4:	mov	r1, r3
   12cb8:	ldr	r0, [fp, #-16]
   12cbc:	bl	12940 <error@@Base+0x878>
   12cc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   12cc4:	add	r3, r3, #4096	; 0x1000
   12cc8:	ldr	r2, [r3, #3952]	; 0xf70
   12ccc:	ldr	r3, [fp, #-8]
   12cd0:	lsl	r3, r3, #2
   12cd4:	add	r3, r2, r3
   12cd8:	ldr	r3, [r3]
   12cdc:	ldr	r3, [r3, #8]
   12ce0:	mov	r2, r3
   12ce4:	ldr	r3, [pc, #76]	; 12d38 <error@@Base+0xc70>
   12ce8:	add	r3, pc, r3
   12cec:	mov	r1, r3
   12cf0:	ldr	r0, [fp, #-16]
   12cf4:	bl	10afc <fprintf@plt>
   12cf8:	ldr	r3, [fp, #-8]
   12cfc:	add	r3, r3, #1
   12d00:	str	r3, [fp, #-8]
   12d04:	ldr	r3, [fp, #-20]	; 0xffffffec
   12d08:	add	r3, r3, #4096	; 0x1000
   12d0c:	ldr	r3, [r3, #3956]	; 0xf74
   12d10:	ldr	r2, [fp, #-8]
   12d14:	cmp	r2, r3
   12d18:	blt	12c94 <error@@Base+0xbcc>
   12d1c:	nop	{0}
   12d20:	sub	sp, fp, #4
   12d24:	ldr	fp, [sp]
   12d28:	add	sp, sp, #4
   12d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d30:			; <UNDEFINED> instruction: 0xffffff6c
   12d34:			; <UNDEFINED> instruction: 0x000023bc
   12d38:	andeq	r2, r0, ip, asr #6
   12d3c:	str	fp, [sp, #-8]!
   12d40:	str	lr, [sp, #4]
   12d44:	add	fp, sp, #4
   12d48:	sub	sp, sp, #24
   12d4c:	str	r0, [fp, #-16]
   12d50:	str	r1, [fp, #-20]	; 0xffffffec
   12d54:	ldr	r3, [pc, #464]	; 12f2c <error@@Base+0xe64>
   12d58:	add	r3, pc, r3
   12d5c:	mov	r1, r3
   12d60:	ldr	r0, [fp, #-20]	; 0xffffffec
   12d64:	bl	115f4 <__assert_fail@plt+0xa68>
   12d68:	str	r0, [fp, #-8]
   12d6c:	ldr	r3, [pc, #444]	; 12f30 <error@@Base+0xe68>
   12d70:	add	r3, pc, r3
   12d74:	ldr	r2, [pc, #440]	; 12f34 <error@@Base+0xe6c>
   12d78:	add	r2, pc, r2
   12d7c:	ldr	r1, [pc, #436]	; 12f38 <error@@Base+0xe70>
   12d80:	add	r1, pc, r1
   12d84:	ldr	r0, [fp, #-8]
   12d88:	bl	10afc <fprintf@plt>
   12d8c:	ldr	r3, [fp, #-16]
   12d90:	ldr	r3, [r3]
   12d94:	mov	r2, r3
   12d98:	ldr	r3, [pc, #412]	; 12f3c <error@@Base+0xe74>
   12d9c:	add	r3, pc, r3
   12da0:	mov	r1, r3
   12da4:	ldr	r0, [fp, #-8]
   12da8:	bl	10afc <fprintf@plt>
   12dac:	ldr	r3, [fp, #-16]
   12db0:	ldr	r3, [r3, #4]
   12db4:	mov	r2, r3
   12db8:	ldr	r3, [pc, #384]	; 12f40 <error@@Base+0xe78>
   12dbc:	add	r3, pc, r3
   12dc0:	mov	r1, r3
   12dc4:	ldr	r0, [fp, #-8]
   12dc8:	bl	10afc <fprintf@plt>
   12dcc:	ldr	r3, [fp, #-16]
   12dd0:	mov	r1, r3
   12dd4:	ldr	r0, [fp, #-8]
   12dd8:	bl	12888 <error@@Base+0x7c0>
   12ddc:	ldr	r3, [fp, #-8]
   12de0:	mov	r2, #12
   12de4:	mov	r1, #1
   12de8:	ldr	r0, [pc, #340]	; 12f44 <error@@Base+0xe7c>
   12dec:	add	r0, pc, r0
   12df0:	bl	10a78 <fwrite@plt>
   12df4:	ldr	r3, [fp, #-16]
   12df8:	add	r1, r3, #8
   12dfc:	mov	r3, #1
   12e00:	str	r3, [sp, #4]
   12e04:	mov	r3, #0
   12e08:	str	r3, [sp]
   12e0c:	ldr	r3, [pc, #308]	; 12f48 <error@@Base+0xe80>
   12e10:	add	r3, pc, r3
   12e14:	mov	r2, #50	; 0x32
   12e18:	ldr	r0, [fp, #-8]
   12e1c:	bl	129e4 <error@@Base+0x91c>
   12e20:	ldr	r3, [fp, #-16]
   12e24:	add	r1, r3, #416	; 0x1a0
   12e28:	mov	r3, #1
   12e2c:	str	r3, [sp, #4]
   12e30:	mov	r3, #0
   12e34:	str	r3, [sp]
   12e38:	ldr	r3, [pc, #268]	; 12f4c <error@@Base+0xe84>
   12e3c:	add	r3, pc, r3
   12e40:	mov	r2, #50	; 0x32
   12e44:	ldr	r0, [fp, #-8]
   12e48:	bl	129e4 <error@@Base+0x91c>
   12e4c:	ldr	r3, [fp, #-16]
   12e50:	add	r1, r3, #824	; 0x338
   12e54:	mov	r3, #1
   12e58:	str	r3, [sp, #4]
   12e5c:	mov	r3, #1
   12e60:	str	r3, [sp]
   12e64:	ldr	r3, [pc, #228]	; 12f50 <error@@Base+0xe88>
   12e68:	add	r3, pc, r3
   12e6c:	mov	r2, #10
   12e70:	ldr	r0, [fp, #-8]
   12e74:	bl	129e4 <error@@Base+0x91c>
   12e78:	ldr	r3, [fp, #-16]
   12e7c:	ldr	r3, [r3]
   12e80:	cmp	r3, #0
   12e84:	ble	12f10 <error@@Base+0xe48>
   12e88:	ldr	r3, [fp, #-16]
   12e8c:	add	r1, r3, #920	; 0x398
   12e90:	mov	r3, #0
   12e94:	str	r3, [sp, #4]
   12e98:	mov	r3, #0
   12e9c:	str	r3, [sp]
   12ea0:	ldr	r3, [pc, #172]	; 12f54 <error@@Base+0xe8c>
   12ea4:	add	r3, pc, r3
   12ea8:	mov	r2, #8
   12eac:	ldr	r0, [fp, #-8]
   12eb0:	bl	129e4 <error@@Base+0x91c>
   12eb4:	ldr	r3, [fp, #-16]
   12eb8:	ldr	r3, [r3, #8]
   12ebc:	cmp	r3, #0
   12ec0:	ble	12ee0 <error@@Base+0xe18>
   12ec4:	ldr	r3, [fp, #-16]
   12ec8:	add	r3, r3, #992	; 0x3e0
   12ecc:	ldr	r2, [pc, #132]	; 12f58 <error@@Base+0xe90>
   12ed0:	add	r2, pc, r2
   12ed4:	mov	r1, r3
   12ed8:	ldr	r0, [fp, #-8]
   12edc:	bl	12c0c <error@@Base+0xb44>
   12ee0:	ldr	r3, [fp, #-16]
   12ee4:	ldr	r3, [r3, #416]	; 0x1a0
   12ee8:	cmp	r3, #0
   12eec:	ble	12f10 <error@@Base+0xe48>
   12ef0:	ldr	r3, [fp, #-16]
   12ef4:	add	r3, r3, #9024	; 0x2340
   12ef8:	add	r3, r3, #24
   12efc:	ldr	r2, [pc, #88]	; 12f5c <error@@Base+0xe94>
   12f00:	add	r2, pc, r2
   12f04:	mov	r1, r3
   12f08:	ldr	r0, [fp, #-8]
   12f0c:	bl	12c0c <error@@Base+0xb44>
   12f10:	ldr	r0, [fp, #-8]
   12f14:	bl	116d4 <__assert_fail@plt+0xb48>
   12f18:	nop	{0}
   12f1c:	sub	sp, fp, #4
   12f20:	ldr	fp, [sp]
   12f24:	add	sp, sp, #4
   12f28:	pop	{pc}		; (ldr pc, [sp], #4)
   12f2c:	strdeq	r2, [r0], -r8
   12f30:	andeq	r2, r0, r0, lsr #4
   12f34:	andeq	r2, r0, r8, ror #3
   12f38:	ldrdeq	r2, [r0], -r4
   12f3c:	andeq	r2, r0, r0, asr #5
   12f40:			; <UNDEFINED> instruction: 0x000022b0
   12f44:	muleq	r0, r8, r2
   12f48:	andeq	r2, r0, r4, lsl #5
   12f4c:	andeq	r2, r0, r4, ror #4
   12f50:	andeq	r2, r0, r8, asr #4
   12f54:	andeq	r2, r0, r4, lsr #4
   12f58:	andeq	r2, r0, r4, asr #3
   12f5c:	andeq	r2, r0, r0, lsr #3
   12f60:	str	fp, [sp, #-8]!
   12f64:	str	lr, [sp, #4]
   12f68:	add	fp, sp, #4
   12f6c:	sub	sp, sp, #24
   12f70:	str	r0, [fp, #-16]
   12f74:	str	r1, [fp, #-20]	; 0xffffffec
   12f78:	str	r2, [fp, #-24]	; 0xffffffe8
   12f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f84:	cmp	r2, r3
   12f88:	bcs	12f94 <error@@Base+0xecc>
   12f8c:	mov	r3, #0
   12f90:	b	1308c <error@@Base+0xfc4>
   12f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f9c:	sub	r3, r2, r3
   12fa0:	lsr	r3, r3, #1
   12fa4:	ldr	r2, [fp, #-20]	; 0xffffffec
   12fa8:	add	r3, r2, r3
   12fac:	str	r3, [fp, #-8]
   12fb0:	ldr	r2, [fp, #-8]
   12fb4:	mov	r3, r2
   12fb8:	lsl	r3, r3, #1
   12fbc:	add	r3, r3, r2
   12fc0:	lsl	r3, r3, #2
   12fc4:	ldr	r2, [pc, #212]	; 130a0 <error@@Base+0xfd8>
   12fc8:	add	r2, pc, r2
   12fcc:	add	r3, r3, r2
   12fd0:	str	r3, [fp, #-12]
   12fd4:	ldr	r3, [fp, #-12]
   12fd8:	ldr	r3, [r3]
   12fdc:	ldr	r2, [fp, #-16]
   12fe0:	cmp	r2, r3
   12fe4:	bcs	13008 <error@@Base+0xf40>
   12fe8:	ldr	r3, [fp, #-8]
   12fec:	sub	r3, r3, #1
   12ff0:	mov	r2, r3
   12ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   12ff8:	ldr	r0, [fp, #-16]
   12ffc:	bl	12f60 <error@@Base+0xe98>
   13000:	mov	r3, r0
   13004:	b	1308c <error@@Base+0xfc4>
   13008:	ldr	r3, [fp, #-12]
   1300c:	ldr	r3, [r3, #4]
   13010:	ldr	r2, [fp, #-16]
   13014:	cmp	r2, r3
   13018:	bls	1303c <error@@Base+0xf74>
   1301c:	ldr	r3, [fp, #-8]
   13020:	add	r3, r3, #1
   13024:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13028:	mov	r1, r3
   1302c:	ldr	r0, [fp, #-16]
   13030:	bl	12f60 <error@@Base+0xe98>
   13034:	mov	r3, r0
   13038:	b	1308c <error@@Base+0xfc4>
   1303c:	ldr	r3, [fp, #-12]
   13040:	ldr	r3, [r3]
   13044:	ldr	r2, [fp, #-16]
   13048:	cmp	r2, r3
   1304c:	bcc	13064 <error@@Base+0xf9c>
   13050:	ldr	r3, [fp, #-12]
   13054:	ldr	r3, [r3, #4]
   13058:	ldr	r2, [fp, #-16]
   1305c:	cmp	r2, r3
   13060:	bls	13084 <error@@Base+0xfbc>
   13064:	ldr	r3, [pc, #56]	; 130a4 <error@@Base+0xfdc>
   13068:	add	r3, pc, r3
   1306c:	mov	r2, #63	; 0x3f
   13070:	ldr	r1, [pc, #48]	; 130a8 <error@@Base+0xfe0>
   13074:	add	r1, pc, r1
   13078:	ldr	r0, [pc, #44]	; 130ac <error@@Base+0xfe4>
   1307c:	add	r0, pc, r0
   13080:	bl	10b8c <__assert_fail@plt>
   13084:	ldr	r3, [fp, #-12]
   13088:	ldr	r3, [r3, #8]
   1308c:	mov	r0, r3
   13090:	sub	sp, fp, #4
   13094:	ldr	fp, [sp]
   13098:	add	sp, sp, #4
   1309c:	pop	{pc}		; (ldr pc, [sp], #4)
   130a0:	andeq	r2, r0, r8, lsl #2
   130a4:	andeq	r5, r0, ip, lsl #8
   130a8:	muleq	r0, r8, r3
   130ac:	muleq	r0, r8, r3
   130b0:	str	fp, [sp, #-8]!
   130b4:	str	lr, [sp, #4]
   130b8:	add	fp, sp, #4
   130bc:	sub	sp, sp, #16
   130c0:	str	r0, [fp, #-16]
   130c4:	movw	r3, #1093	; 0x445
   130c8:	str	r3, [fp, #-8]
   130cc:	ldr	r3, [fp, #-8]
   130d0:	sub	r3, r3, #1
   130d4:	mov	r2, r3
   130d8:	mov	r1, #0
   130dc:	ldr	r0, [fp, #-16]
   130e0:	bl	12f60 <error@@Base+0xe98>
   130e4:	mov	r3, r0
   130e8:	mov	r0, r3
   130ec:	sub	sp, fp, #4
   130f0:	ldr	fp, [sp]
   130f4:	add	sp, sp, #4
   130f8:	pop	{pc}		; (ldr pc, [sp], #4)
   130fc:	str	fp, [sp, #-8]!
   13100:	str	lr, [sp, #4]
   13104:	add	fp, sp, #4
   13108:	sub	sp, sp, #8
   1310c:	str	r0, [fp, #-8]
   13110:	ldr	r3, [fp, #-8]
   13114:	cmp	r3, #0
   13118:	bne	13124 <error@@Base+0x105c>
   1311c:	mov	r3, #18
   13120:	b	13138 <error@@Base+0x1070>
   13124:	ldr	r3, [fp, #-8]
   13128:	ldr	r3, [r3, #12]
   1312c:	mov	r0, r3
   13130:	bl	130b0 <error@@Base+0xfe8>
   13134:	mov	r3, r0
   13138:	mov	r0, r3
   1313c:	sub	sp, fp, #4
   13140:	ldr	fp, [sp]
   13144:	add	sp, sp, #4
   13148:	pop	{pc}		; (ldr pc, [sp], #4)
   1314c:	str	fp, [sp, #-8]!
   13150:	str	lr, [sp, #4]
   13154:	add	fp, sp, #4
   13158:	sub	sp, sp, #8
   1315c:	str	r0, [fp, #-8]
   13160:	ldr	r3, [fp, #-8]
   13164:	cmp	r3, #0
   13168:	bne	13174 <error@@Base+0x10ac>
   1316c:	mov	r3, #0
   13170:	b	131b8 <error@@Base+0x10f0>
   13174:	ldr	r3, [fp, #-8]
   13178:	ldr	r3, [r3, #4]
   1317c:	str	r3, [fp, #-8]
   13180:	ldr	r3, [fp, #-8]
   13184:	cmp	r3, #0
   13188:	beq	131b4 <error@@Base+0x10ec>
   1318c:	ldr	r0, [fp, #-8]
   13190:	bl	130fc <error@@Base+0x1034>
   13194:	mov	r3, r0
   13198:	cmp	r3, #4
   1319c:	beq	13174 <error@@Base+0x10ac>
   131a0:	ldr	r0, [fp, #-8]
   131a4:	bl	130fc <error@@Base+0x1034>
   131a8:	mov	r3, r0
   131ac:	cmp	r3, #6
   131b0:	beq	13174 <error@@Base+0x10ac>
   131b4:	ldr	r3, [fp, #-8]
   131b8:	mov	r0, r3
   131bc:	sub	sp, fp, #4
   131c0:	ldr	fp, [sp]
   131c4:	add	sp, sp, #4
   131c8:	pop	{pc}		; (ldr pc, [sp], #4)
   131cc:	str	fp, [sp, #-8]!
   131d0:	str	lr, [sp, #4]
   131d4:	add	fp, sp, #4
   131d8:	sub	sp, sp, #8
   131dc:	str	r0, [fp, #-8]
   131e0:	ldr	r0, [fp, #-8]
   131e4:	bl	1314c <error@@Base+0x1084>
   131e8:	mov	r3, r0
   131ec:	mov	r0, r3
   131f0:	bl	1314c <error@@Base+0x1084>
   131f4:	mov	r3, r0
   131f8:	mov	r0, r3
   131fc:	sub	sp, fp, #4
   13200:	ldr	fp, [sp]
   13204:	add	sp, sp, #4
   13208:	pop	{pc}		; (ldr pc, [sp], #4)
   1320c:	str	fp, [sp, #-8]!
   13210:	str	lr, [sp, #4]
   13214:	add	fp, sp, #4
   13218:	sub	sp, sp, #8
   1321c:	str	r0, [fp, #-8]
   13220:	ldr	r3, [fp, #-8]
   13224:	cmp	r3, #0
   13228:	bne	13240 <error@@Base+0x1178>
   1322c:	mov	r3, #0
   13230:	b	1328c <error@@Base+0x11c4>
   13234:	ldr	r3, [fp, #-8]
   13238:	ldr	r3, [r3, #4]
   1323c:	str	r3, [fp, #-8]
   13240:	ldr	r3, [fp, #-8]
   13244:	ldr	r3, [r3, #4]
   13248:	cmp	r3, #0
   1324c:	beq	13288 <error@@Base+0x11c0>
   13250:	ldr	r3, [fp, #-8]
   13254:	ldr	r3, [r3, #4]
   13258:	mov	r0, r3
   1325c:	bl	130fc <error@@Base+0x1034>
   13260:	mov	r3, r0
   13264:	cmp	r3, #4
   13268:	beq	13234 <error@@Base+0x116c>
   1326c:	ldr	r3, [fp, #-8]
   13270:	ldr	r3, [r3, #4]
   13274:	mov	r0, r3
   13278:	bl	130fc <error@@Base+0x1034>
   1327c:	mov	r3, r0
   13280:	cmp	r3, #6
   13284:	beq	13234 <error@@Base+0x116c>
   13288:	ldr	r3, [fp, #-8]
   1328c:	mov	r0, r3
   13290:	sub	sp, fp, #4
   13294:	ldr	fp, [sp]
   13298:	add	sp, sp, #4
   1329c:	pop	{pc}		; (ldr pc, [sp], #4)
   132a0:	str	fp, [sp, #-8]!
   132a4:	str	lr, [sp, #4]
   132a8:	add	fp, sp, #4
   132ac:	sub	sp, sp, #48	; 0x30
   132b0:	str	r0, [fp, #-48]	; 0xffffffd0
   132b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   132b8:	str	r3, [fp, #-36]	; 0xffffffdc
   132bc:	sub	r3, fp, #40	; 0x28
   132c0:	str	r3, [fp, #-8]
   132c4:	mov	r3, #17
   132c8:	str	r3, [fp, #-12]
   132cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   132d0:	cmp	r3, #0
   132d4:	bne	136a0 <error@@Base+0x15d8>
   132d8:	mov	r3, #0
   132dc:	b	136c4 <error@@Base+0x15fc>
   132e0:	ldr	r0, [fp, #-8]
   132e4:	bl	1314c <error@@Base+0x1084>
   132e8:	str	r0, [fp, #-8]
   132ec:	ldr	r3, [fp, #-12]
   132f0:	str	r3, [fp, #-16]
   132f4:	ldr	r0, [fp, #-8]
   132f8:	bl	130fc <error@@Base+0x1034>
   132fc:	str	r0, [fp, #-12]
   13300:	ldr	r0, [fp, #-8]
   13304:	bl	1314c <error@@Base+0x1084>
   13308:	mov	r3, r0
   1330c:	mov	r0, r3
   13310:	bl	130fc <error@@Base+0x1034>
   13314:	str	r0, [fp, #-20]	; 0xffffffec
   13318:	ldr	r0, [fp, #-8]
   1331c:	bl	131cc <error@@Base+0x1104>
   13320:	mov	r3, r0
   13324:	mov	r0, r3
   13328:	bl	130fc <error@@Base+0x1034>
   1332c:	str	r0, [fp, #-24]	; 0xffffffe8
   13330:	ldr	r3, [fp, #-12]
   13334:	cmp	r3, #1
   13338:	bne	1334c <error@@Base+0x1284>
   1333c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13340:	cmp	r3, #2
   13344:	bne	1334c <error@@Base+0x1284>
   13348:	b	136a0 <error@@Base+0x15d8>
   1334c:	ldr	r3, [fp, #-12]
   13350:	cmp	r3, #3
   13354:	beq	136b8 <error@@Base+0x15f0>
   13358:	ldr	r3, [fp, #-12]
   1335c:	cmp	r3, #1
   13360:	beq	136b8 <error@@Base+0x15f0>
   13364:	ldr	r3, [fp, #-12]
   13368:	cmp	r3, #2
   1336c:	beq	136b8 <error@@Base+0x15f0>
   13370:	ldr	r3, [fp, #-20]	; 0xffffffec
   13374:	cmp	r3, #3
   13378:	beq	136b8 <error@@Base+0x15f0>
   1337c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13380:	cmp	r3, #1
   13384:	beq	136b8 <error@@Base+0x15f0>
   13388:	ldr	r3, [fp, #-20]	; 0xffffffec
   1338c:	cmp	r3, #2
   13390:	beq	136b8 <error@@Base+0x15f0>
   13394:	ldr	r3, [fp, #-12]
   13398:	cmp	r3, #9
   1339c:	beq	133ac <error@@Base+0x12e4>
   133a0:	ldr	r3, [fp, #-12]
   133a4:	cmp	r3, #8
   133a8:	bne	133c8 <error@@Base+0x1300>
   133ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   133b0:	cmp	r3, #9
   133b4:	beq	136a0 <error@@Base+0x15d8>
   133b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   133bc:	cmp	r3, #8
   133c0:	bne	133c8 <error@@Base+0x1300>
   133c4:	b	136a0 <error@@Base+0x15d8>
   133c8:	ldr	r3, [fp, #-12]
   133cc:	cmp	r3, #9
   133d0:	beq	133e0 <error@@Base+0x1318>
   133d4:	ldr	r3, [fp, #-12]
   133d8:	cmp	r3, #8
   133dc:	bne	13420 <error@@Base+0x1358>
   133e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   133e4:	cmp	r3, #13
   133e8:	beq	13404 <error@@Base+0x133c>
   133ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   133f0:	cmp	r3, #12
   133f4:	beq	13404 <error@@Base+0x133c>
   133f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   133fc:	cmp	r3, #10
   13400:	bne	13420 <error@@Base+0x1358>
   13404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13408:	cmp	r3, #9
   1340c:	beq	136a0 <error@@Base+0x15d8>
   13410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13414:	cmp	r3, #8
   13418:	bne	13420 <error@@Base+0x1358>
   1341c:	b	136a0 <error@@Base+0x15d8>
   13420:	ldr	r3, [fp, #-16]
   13424:	cmp	r3, #9
   13428:	beq	13438 <error@@Base+0x1370>
   1342c:	ldr	r3, [fp, #-16]
   13430:	cmp	r3, #8
   13434:	bne	13478 <error@@Base+0x13b0>
   13438:	ldr	r3, [fp, #-12]
   1343c:	cmp	r3, #13
   13440:	beq	1345c <error@@Base+0x1394>
   13444:	ldr	r3, [fp, #-12]
   13448:	cmp	r3, #12
   1344c:	beq	1345c <error@@Base+0x1394>
   13450:	ldr	r3, [fp, #-12]
   13454:	cmp	r3, #10
   13458:	bne	13478 <error@@Base+0x13b0>
   1345c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13460:	cmp	r3, #9
   13464:	beq	136a0 <error@@Base+0x15d8>
   13468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1346c:	cmp	r3, #8
   13470:	bne	13478 <error@@Base+0x13b0>
   13474:	b	136a0 <error@@Base+0x15d8>
   13478:	ldr	r3, [fp, #-12]
   1347c:	cmp	r3, #8
   13480:	bne	13494 <error@@Base+0x13cc>
   13484:	ldr	r3, [fp, #-20]	; 0xffffffec
   13488:	cmp	r3, #10
   1348c:	bne	13494 <error@@Base+0x13cc>
   13490:	b	136a0 <error@@Base+0x15d8>
   13494:	ldr	r3, [fp, #-12]
   13498:	cmp	r3, #8
   1349c:	bne	134bc <error@@Base+0x13f4>
   134a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134a4:	cmp	r3, #11
   134a8:	bne	134bc <error@@Base+0x13f4>
   134ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134b0:	cmp	r3, #8
   134b4:	bne	134bc <error@@Base+0x13f4>
   134b8:	b	136a0 <error@@Base+0x15d8>
   134bc:	ldr	r3, [fp, #-16]
   134c0:	cmp	r3, #8
   134c4:	bne	134e4 <error@@Base+0x141c>
   134c8:	ldr	r3, [fp, #-12]
   134cc:	cmp	r3, #11
   134d0:	bne	134e4 <error@@Base+0x141c>
   134d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134d8:	cmp	r3, #8
   134dc:	bne	134e4 <error@@Base+0x141c>
   134e0:	b	136a0 <error@@Base+0x15d8>
   134e4:	ldr	r3, [fp, #-12]
   134e8:	cmp	r3, #15
   134ec:	bne	13500 <error@@Base+0x1438>
   134f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134f4:	cmp	r3, #15
   134f8:	bne	13500 <error@@Base+0x1438>
   134fc:	b	136a0 <error@@Base+0x15d8>
   13500:	ldr	r3, [fp, #-12]
   13504:	cmp	r3, #9
   13508:	beq	13518 <error@@Base+0x1450>
   1350c:	ldr	r3, [fp, #-12]
   13510:	cmp	r3, #8
   13514:	bne	13528 <error@@Base+0x1460>
   13518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1351c:	cmp	r3, #15
   13520:	bne	13528 <error@@Base+0x1460>
   13524:	b	136a0 <error@@Base+0x15d8>
   13528:	ldr	r3, [fp, #-12]
   1352c:	cmp	r3, #15
   13530:	bne	13550 <error@@Base+0x1488>
   13534:	ldr	r3, [fp, #-20]	; 0xffffffec
   13538:	cmp	r3, #9
   1353c:	beq	136a0 <error@@Base+0x15d8>
   13540:	ldr	r3, [fp, #-20]	; 0xffffffec
   13544:	cmp	r3, #8
   13548:	bne	13550 <error@@Base+0x1488>
   1354c:	b	136a0 <error@@Base+0x15d8>
   13550:	ldr	r3, [fp, #-16]
   13554:	cmp	r3, #15
   13558:	bne	13590 <error@@Base+0x14c8>
   1355c:	ldr	r3, [fp, #-12]
   13560:	cmp	r3, #14
   13564:	beq	13580 <error@@Base+0x14b8>
   13568:	ldr	r3, [fp, #-12]
   1356c:	cmp	r3, #12
   13570:	beq	13580 <error@@Base+0x14b8>
   13574:	ldr	r3, [fp, #-12]
   13578:	cmp	r3, #10
   1357c:	bne	13590 <error@@Base+0x14c8>
   13580:	ldr	r3, [fp, #-20]	; 0xffffffec
   13584:	cmp	r3, #15
   13588:	bne	13590 <error@@Base+0x14c8>
   1358c:	b	136a0 <error@@Base+0x15d8>
   13590:	ldr	r3, [fp, #-12]
   13594:	cmp	r3, #15
   13598:	bne	135d0 <error@@Base+0x1508>
   1359c:	ldr	r3, [fp, #-20]	; 0xffffffec
   135a0:	cmp	r3, #14
   135a4:	beq	135c0 <error@@Base+0x14f8>
   135a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135ac:	cmp	r3, #12
   135b0:	beq	135c0 <error@@Base+0x14f8>
   135b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   135b8:	cmp	r3, #10
   135bc:	bne	135d0 <error@@Base+0x1508>
   135c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   135c4:	cmp	r3, #15
   135c8:	bne	135d0 <error@@Base+0x1508>
   135cc:	b	136a0 <error@@Base+0x15d8>
   135d0:	ldr	r3, [fp, #-12]
   135d4:	cmp	r3, #7
   135d8:	bne	135ec <error@@Base+0x1524>
   135dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   135e0:	cmp	r3, #7
   135e4:	bne	135ec <error@@Base+0x1524>
   135e8:	b	136a0 <error@@Base+0x15d8>
   135ec:	ldr	r3, [fp, #-12]
   135f0:	cmp	r3, #9
   135f4:	beq	13628 <error@@Base+0x1560>
   135f8:	ldr	r3, [fp, #-12]
   135fc:	cmp	r3, #8
   13600:	beq	13628 <error@@Base+0x1560>
   13604:	ldr	r3, [fp, #-12]
   13608:	cmp	r3, #15
   1360c:	beq	13628 <error@@Base+0x1560>
   13610:	ldr	r3, [fp, #-12]
   13614:	cmp	r3, #7
   13618:	beq	13628 <error@@Base+0x1560>
   1361c:	ldr	r3, [fp, #-12]
   13620:	cmp	r3, #16
   13624:	bne	13638 <error@@Base+0x1570>
   13628:	ldr	r3, [fp, #-20]	; 0xffffffec
   1362c:	cmp	r3, #16
   13630:	bne	13638 <error@@Base+0x1570>
   13634:	b	136a0 <error@@Base+0x15d8>
   13638:	ldr	r3, [fp, #-12]
   1363c:	cmp	r3, #16
   13640:	bne	13684 <error@@Base+0x15bc>
   13644:	ldr	r3, [fp, #-20]	; 0xffffffec
   13648:	cmp	r3, #9
   1364c:	beq	136a0 <error@@Base+0x15d8>
   13650:	ldr	r3, [fp, #-20]	; 0xffffffec
   13654:	cmp	r3, #8
   13658:	beq	136a0 <error@@Base+0x15d8>
   1365c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13660:	cmp	r3, #15
   13664:	beq	136a0 <error@@Base+0x15d8>
   13668:	ldr	r3, [fp, #-20]	; 0xffffffec
   1366c:	cmp	r3, #7
   13670:	beq	136a0 <error@@Base+0x15d8>
   13674:	ldr	r3, [fp, #-20]	; 0xffffffec
   13678:	cmp	r3, #16
   1367c:	bne	13684 <error@@Base+0x15bc>
   13680:	b	136a0 <error@@Base+0x15d8>
   13684:	ldr	r3, [fp, #-12]
   13688:	cmp	r3, #5
   1368c:	bne	136b4 <error@@Base+0x15ec>
   13690:	ldr	r3, [fp, #-20]	; 0xffffffec
   13694:	cmp	r3, #5
   13698:	bne	136b4 <error@@Base+0x15ec>
   1369c:	nop	{0}
   136a0:	ldr	r3, [fp, #-8]
   136a4:	ldr	r3, [r3, #4]
   136a8:	cmp	r3, #0
   136ac:	bne	132e0 <error@@Base+0x1218>
   136b0:	b	136b8 <error@@Base+0x15f0>
   136b4:	nop	{0}
   136b8:	ldr	r0, [fp, #-8]
   136bc:	bl	1320c <error@@Base+0x1144>
   136c0:	mov	r3, r0
   136c4:	mov	r0, r3
   136c8:	sub	sp, fp, #4
   136cc:	ldr	fp, [sp]
   136d0:	add	sp, sp, #4
   136d4:	pop	{pc}		; (ldr pc, [sp], #4)
   136d8:	str	fp, [sp, #-8]!
   136dc:	str	lr, [sp, #4]
   136e0:	add	fp, sp, #4
   136e4:	sub	sp, sp, #24
   136e8:	str	r0, [fp, #-24]	; 0xffffffe8
   136ec:	str	r1, [fp, #-28]	; 0xffffffe4
   136f0:	mov	r3, #0
   136f4:	str	r3, [fp, #-12]
   136f8:	mov	r3, #0
   136fc:	str	r3, [fp, #-16]
   13700:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13704:	str	r3, [fp, #-8]
   13708:	b	137a4 <error@@Base+0x16dc>
   1370c:	ldr	r3, [fp, #-8]
   13710:	cmp	r3, #0
   13714:	bne	13738 <error@@Base+0x1670>
   13718:	ldr	r3, [pc, #172]	; 137cc <error@@Base+0x1704>
   1371c:	add	r3, pc, r3
   13720:	mov	r2, #249	; 0xf9
   13724:	ldr	r1, [pc, #164]	; 137d0 <error@@Base+0x1708>
   13728:	add	r1, pc, r1
   1372c:	ldr	r0, [pc, #160]	; 137d4 <error@@Base+0x170c>
   13730:	add	r0, pc, r0
   13734:	bl	10b8c <__assert_fail@plt>
   13738:	ldr	r3, [fp, #-8]
   1373c:	ldr	r3, [r3, #12]
   13740:	mov	r2, r3
   13744:	sub	r3, fp, #20
   13748:	mov	r1, r3
   1374c:	mov	r0, r2
   13750:	bl	10a30 <utf8proc_encode_char@plt>
   13754:	mov	r3, r0
   13758:	str	r3, [fp, #-16]
   1375c:	ldr	r3, [fp, #-16]
   13760:	cmp	r3, #0
   13764:	bne	13788 <error@@Base+0x16c0>
   13768:	ldr	r3, [pc, #104]	; 137d8 <error@@Base+0x1710>
   1376c:	add	r3, pc, r3
   13770:	mov	r2, #253	; 0xfd
   13774:	ldr	r1, [pc, #96]	; 137dc <error@@Base+0x1714>
   13778:	add	r1, pc, r1
   1377c:	ldr	r0, [pc, #92]	; 137e0 <error@@Base+0x1718>
   13780:	add	r0, pc, r0
   13784:	bl	10b8c <__assert_fail@plt>
   13788:	ldr	r2, [fp, #-12]
   1378c:	ldr	r3, [fp, #-16]
   13790:	add	r3, r2, r3
   13794:	str	r3, [fp, #-12]
   13798:	ldr	r3, [fp, #-8]
   1379c:	ldr	r3, [r3, #4]
   137a0:	str	r3, [fp, #-8]
   137a4:	ldr	r2, [fp, #-8]
   137a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   137ac:	cmp	r2, r3
   137b0:	bne	1370c <error@@Base+0x1644>
   137b4:	ldr	r3, [fp, #-12]
   137b8:	mov	r0, r3
   137bc:	sub	sp, fp, #4
   137c0:	ldr	fp, [sp]
   137c4:	add	sp, sp, #4
   137c8:	pop	{pc}		; (ldr pc, [sp], #4)
   137cc:	andeq	r4, r0, ip, ror #26
   137d0:	andeq	r4, r0, r4, ror #25
   137d4:	andeq	r4, r0, r0, lsr #26
   137d8:	andeq	r4, r0, ip, lsl sp
   137dc:	muleq	r0, r4, ip
   137e0:	andeq	r4, r0, r0, ror #25
   137e4:	str	fp, [sp, #-8]!
   137e8:	str	lr, [sp, #4]
   137ec:	add	fp, sp, #4
   137f0:	sub	sp, sp, #24
   137f4:	str	r0, [fp, #-16]
   137f8:	str	r1, [fp, #-20]	; 0xffffffec
   137fc:	str	r2, [fp, #-24]	; 0xffffffe8
   13800:	mov	r3, #0
   13804:	str	r3, [fp, #-12]
   13808:	ldr	r3, [fp, #-20]	; 0xffffffec
   1380c:	str	r3, [fp, #-8]
   13810:	b	13880 <error@@Base+0x17b8>
   13814:	ldr	r3, [fp, #-8]
   13818:	cmp	r3, #0
   1381c:	bne	13840 <error@@Base+0x1778>
   13820:	ldr	r3, [pc, #144]	; 138b8 <error@@Base+0x17f0>
   13824:	add	r3, pc, r3
   13828:	movw	r2, #269	; 0x10d
   1382c:	ldr	r1, [pc, #136]	; 138bc <error@@Base+0x17f4>
   13830:	add	r1, pc, r1
   13834:	ldr	r0, [pc, #132]	; 138c0 <error@@Base+0x17f8>
   13838:	add	r0, pc, r0
   1383c:	bl	10b8c <__assert_fail@plt>
   13840:	ldr	r3, [fp, #-8]
   13844:	ldr	r3, [r3, #12]
   13848:	mov	r0, r3
   1384c:	ldr	r2, [fp, #-16]
   13850:	ldr	r3, [fp, #-12]
   13854:	add	r3, r2, r3
   13858:	mov	r1, r3
   1385c:	bl	10a30 <utf8proc_encode_char@plt>
   13860:	mov	r3, r0
   13864:	mov	r2, r3
   13868:	ldr	r3, [fp, #-12]
   1386c:	add	r3, r3, r2
   13870:	str	r3, [fp, #-12]
   13874:	ldr	r3, [fp, #-8]
   13878:	ldr	r3, [r3, #4]
   1387c:	str	r3, [fp, #-8]
   13880:	ldr	r2, [fp, #-8]
   13884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13888:	cmp	r2, r3
   1388c:	bne	13814 <error@@Base+0x174c>
   13890:	ldr	r2, [fp, #-16]
   13894:	ldr	r3, [fp, #-12]
   13898:	add	r3, r2, r3
   1389c:	mov	r2, #0
   138a0:	strb	r2, [r3]
   138a4:	nop	{0}
   138a8:	sub	sp, fp, #4
   138ac:	ldr	fp, [sp]
   138b0:	add	sp, sp, #4
   138b4:	pop	{pc}		; (ldr pc, [sp], #4)
   138b8:	andeq	r4, r0, r8, ror ip
   138bc:	ldrdeq	r4, [r0], -ip
   138c0:	andeq	r4, r0, r8, lsl ip
   138c4:	str	fp, [sp, #-8]!
   138c8:	str	lr, [sp, #4]
   138cc:	add	fp, sp, #4
   138d0:	sub	sp, sp, #32
   138d4:	str	r0, [fp, #-24]	; 0xffffffe8
   138d8:	str	r1, [fp, #-28]	; 0xffffffe4
   138dc:	str	r2, [fp, #-32]	; 0xffffffe0
   138e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   138e4:	ldr	r3, [r3, #4]
   138e8:	str	r3, [fp, #-8]
   138ec:	ldr	r1, [fp, #-8]
   138f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   138f4:	bl	136d8 <error@@Base+0x1610>
   138f8:	str	r0, [fp, #-12]
   138fc:	ldr	r3, [fp, #-12]
   13900:	add	r3, r3, #1
   13904:	mov	r0, r3
   13908:	bl	10a9c <malloc@plt>
   1390c:	mov	r3, r0
   13910:	str	r3, [fp, #-16]
   13914:	ldr	r2, [fp, #-8]
   13918:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1391c:	ldr	r0, [fp, #-16]
   13920:	bl	137e4 <error@@Base+0x171c>
   13924:	mov	r1, #12
   13928:	mov	r0, #1
   1392c:	bl	114a8 <__assert_fail@plt+0x91c>
   13930:	str	r0, [fp, #-20]	; 0xffffffec
   13934:	ldr	r0, [fp, #-16]
   13938:	bl	10b20 <utf8proc_NFC@plt>
   1393c:	mov	r2, r0
   13940:	ldr	r3, [fp, #-20]	; 0xffffffec
   13944:	str	r2, [r3, #8]
   13948:	ldr	r1, [fp, #-20]	; 0xffffffec
   1394c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13950:	bl	14820 <error@@Base+0x2758>
   13954:	ldr	r0, [fp, #-16]
   13958:	bl	10a0c <free@plt>
   1395c:	nop	{0}
   13960:	sub	sp, fp, #4
   13964:	ldr	fp, [sp]
   13968:	add	sp, sp, #4
   1396c:	pop	{pc}		; (ldr pc, [sp], #4)
   13970:	str	fp, [sp, #-8]!
   13974:	str	lr, [sp, #4]
   13978:	add	fp, sp, #4
   1397c:	sub	sp, sp, #16
   13980:	str	r0, [fp, #-16]
   13984:	ldr	r3, [fp, #-16]
   13988:	mov	r0, r3
   1398c:	bl	10a18 <utf8proc_get_property@plt>
   13990:	str	r0, [fp, #-8]
   13994:	ldr	r3, [fp, #-8]
   13998:	ldrsh	r3, [r3]
   1399c:	cmp	r3, #0
   139a0:	ble	139bc <error@@Base+0x18f4>
   139a4:	cmp	r3, #12
   139a8:	ble	139b4 <error@@Base+0x18ec>
   139ac:	cmp	r3, #29
   139b0:	bne	139bc <error@@Base+0x18f4>
   139b4:	mov	r3, #1
   139b8:	b	139c0 <error@@Base+0x18f8>
   139bc:	mov	r3, #0
   139c0:	mov	r0, r3
   139c4:	sub	sp, fp, #4
   139c8:	ldr	fp, [sp]
   139cc:	add	sp, sp, #4
   139d0:	pop	{pc}		; (ldr pc, [sp], #4)
   139d4:	str	fp, [sp, #-8]!
   139d8:	str	lr, [sp, #4]
   139dc:	add	fp, sp, #4
   139e0:	sub	sp, sp, #16
   139e4:	str	r0, [fp, #-16]
   139e8:	str	r1, [fp, #-20]	; 0xffffffec
   139ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   139f0:	ldr	r3, [r3]
   139f4:	str	r3, [fp, #-8]
   139f8:	b	13a34 <error@@Base+0x196c>
   139fc:	ldr	r3, [fp, #-8]
   13a00:	ldr	r3, [r3, #12]
   13a04:	mov	r0, r3
   13a08:	bl	13970 <error@@Base+0x18a8>
   13a0c:	mov	r3, r0
   13a10:	cmp	r3, #0
   13a14:	beq	13a28 <error@@Base+0x1960>
   13a18:	ldr	r2, [fp, #-12]
   13a1c:	ldr	r1, [fp, #-8]
   13a20:	ldr	r0, [fp, #-16]
   13a24:	bl	138c4 <error@@Base+0x17fc>
   13a28:	ldr	r3, [fp, #-12]
   13a2c:	ldr	r3, [r3, #4]
   13a30:	str	r3, [fp, #-8]
   13a34:	ldr	r0, [fp, #-8]
   13a38:	bl	132a0 <error@@Base+0x11d8>
   13a3c:	str	r0, [fp, #-12]
   13a40:	ldr	r3, [fp, #-12]
   13a44:	cmp	r3, #0
   13a48:	bne	139fc <error@@Base+0x1934>
   13a4c:	nop	{0}
   13a50:	sub	sp, fp, #4
   13a54:	ldr	fp, [sp]
   13a58:	add	sp, sp, #4
   13a5c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a60:	str	fp, [sp, #-8]!
   13a64:	str	lr, [sp, #4]
   13a68:	add	fp, sp, #4
   13a6c:	sub	sp, sp, #8
   13a70:	str	r0, [fp, #-8]
   13a74:	ldr	r3, [fp, #-8]
   13a78:	ldr	r3, [r3, #8]
   13a7c:	mov	r0, r3
   13a80:	bl	10a0c <free@plt>
   13a84:	ldr	r0, [fp, #-8]
   13a88:	bl	10a0c <free@plt>
   13a8c:	nop	{0}
   13a90:	sub	sp, fp, #4
   13a94:	ldr	fp, [sp]
   13a98:	add	sp, sp, #4
   13a9c:	pop	{pc}		; (ldr pc, [sp], #4)
   13aa0:	str	fp, [sp, #-8]!
   13aa4:	str	lr, [sp, #4]
   13aa8:	add	fp, sp, #4
   13aac:	sub	sp, sp, #24
   13ab0:	str	r0, [fp, #-16]
   13ab4:	mov	r3, r1
   13ab8:	str	r2, [fp, #-24]	; 0xffffffe8
   13abc:	strb	r3, [fp, #-20]	; 0xffffffec
   13ac0:	mov	r1, #16
   13ac4:	mov	r0, #1
   13ac8:	bl	114a8 <__assert_fail@plt+0x91c>
   13acc:	str	r0, [fp, #-8]
   13ad0:	ldr	r3, [fp, #-8]
   13ad4:	ldrb	r2, [fp, #-20]	; 0xffffffec
   13ad8:	strb	r2, [r3, #8]
   13adc:	ldr	r3, [fp, #-8]
   13ae0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13ae4:	str	r2, [r3, #12]
   13ae8:	ldr	r1, [fp, #-8]
   13aec:	ldr	r0, [fp, #-16]
   13af0:	bl	14820 <error@@Base+0x2758>
   13af4:	nop	{0}
   13af8:	sub	sp, fp, #4
   13afc:	ldr	fp, [sp]
   13b00:	add	sp, sp, #4
   13b04:	pop	{pc}		; (ldr pc, [sp], #4)
   13b08:	str	fp, [sp, #-8]!
   13b0c:	str	lr, [sp, #4]
   13b10:	add	fp, sp, #4
   13b14:	sub	sp, sp, #112	; 0x70
   13b18:	str	r0, [fp, #-112]	; 0xffffff90
   13b1c:	mov	r3, #0
   13b20:	strh	r3, [fp, #-6]
   13b24:	sub	r3, fp, #108	; 0x6c
   13b28:	ldr	r2, [fp, #-112]	; 0xffffff90
   13b2c:	mov	r1, #99	; 0x63
   13b30:	mov	r0, r3
   13b34:	bl	10a24 <fgets@plt>
   13b38:	mov	r3, r0
   13b3c:	cmp	r3, #0
   13b40:	beq	13bd8 <error@@Base+0x1b10>
   13b44:	sub	r3, fp, #108	; 0x6c
   13b48:	mov	r2, #51	; 0x33
   13b4c:	ldr	r1, [pc, #164]	; 13bf8 <error@@Base+0x1b30>
   13b50:	add	r1, pc, r1
   13b54:	mov	r0, r3
   13b58:	bl	10b68 <strncmp@plt>
   13b5c:	mov	r3, r0
   13b60:	cmp	r3, #0
   13b64:	bne	13bd8 <error@@Base+0x1b10>
   13b68:	b	13ba4 <error@@Base+0x1adc>
   13b6c:	sub	r3, fp, #108	; 0x6c
   13b70:	ldr	r2, [pc, #132]	; 13bfc <error@@Base+0x1b34>
   13b74:	add	r2, pc, r2
   13b78:	mov	r1, r2
   13b7c:	mov	r0, r3
   13b80:	bl	109e8 <strcmp@plt>
   13b84:	mov	r3, r0
   13b88:	cmp	r3, #0
   13b8c:	bne	13ba4 <error@@Base+0x1adc>
   13b90:	ldrsh	r3, [fp, #-6]
   13b94:	uxth	r3, r3
   13b98:	add	r3, r3, #1
   13b9c:	uxth	r3, r3
   13ba0:	strh	r3, [fp, #-6]
   13ba4:	ldrsh	r3, [fp, #-6]
   13ba8:	cmp	r3, #1
   13bac:	bgt	13bd0 <error@@Base+0x1b08>
   13bb0:	sub	r3, fp, #108	; 0x6c
   13bb4:	ldr	r2, [fp, #-112]	; 0xffffff90
   13bb8:	mov	r1, #99	; 0x63
   13bbc:	mov	r0, r3
   13bc0:	bl	10a24 <fgets@plt>
   13bc4:	mov	r3, r0
   13bc8:	cmp	r3, #0
   13bcc:	bne	13b6c <error@@Base+0x1aa4>
   13bd0:	mov	r3, #1
   13bd4:	b	13be4 <error@@Base+0x1b1c>
   13bd8:	ldr	r0, [fp, #-112]	; 0xffffff90
   13bdc:	bl	10a48 <rewind@plt>
   13be0:	mov	r3, #0
   13be4:	mov	r0, r3
   13be8:	sub	sp, fp, #4
   13bec:	ldr	fp, [sp]
   13bf0:	add	sp, sp, #4
   13bf4:	pop	{pc}		; (ldr pc, [sp], #4)
   13bf8:	andeq	r4, r0, r0, ror #18
   13bfc:	andeq	r4, r0, r4, ror r9
   13c00:	str	r4, [sp, #-12]!
   13c04:	str	fp, [sp, #4]
   13c08:	str	lr, [sp, #8]
   13c0c:	add	fp, sp, #8
   13c10:	sub	sp, sp, #52	; 0x34
   13c14:	str	r0, [fp, #-48]	; 0xffffffd0
   13c18:	str	r1, [fp, #-52]	; 0xffffffcc
   13c1c:	str	r3, [fp, #-60]	; 0xffffffc4
   13c20:	mov	r3, r2
   13c24:	strb	r3, [fp, #-56]	; 0xffffffc8
   13c28:	ldr	r4, [pc, #352]	; 13d90 <error@@Base+0x1cc8>
   13c2c:	add	r4, pc, r4
   13c30:	mov	r3, #0
   13c34:	strb	r3, [fp, #-13]
   13c38:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13c3c:	bl	10b80 <getc@plt>
   13c40:	str	r0, [fp, #-20]	; 0xffffffec
   13c44:	b	13d6c <error@@Base+0x1ca4>
   13c48:	ldr	r3, [pc, #324]	; 13d94 <error@@Base+0x1ccc>
   13c4c:	ldr	r2, [r4, r3]
   13c50:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c54:	add	r3, r2, r3
   13c58:	ldrsb	r3, [r3]
   13c5c:	str	r3, [fp, #-24]	; 0xffffffe8
   13c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c64:	cmp	r3, #0
   13c68:	bgt	13c7c <error@@Base+0x1bb4>
   13c6c:	ldr	r3, [pc, #292]	; 13d98 <error@@Base+0x1cd0>
   13c70:	add	r3, pc, r3
   13c74:	mov	r0, r3
   13c78:	bl	120c8 <error@@Base>
   13c7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c80:	uxtb	r3, r3
   13c84:	strb	r3, [fp, #-36]	; 0xffffffdc
   13c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13c8c:	cmp	r3, #1
   13c90:	ble	13ce0 <error@@Base+0x1c18>
   13c94:	sub	r0, fp, #36	; 0x24
   13c98:	add	r0, r0, #1
   13c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13ca0:	sub	r3, r3, #1
   13ca4:	mov	r2, r3
   13ca8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   13cac:	mov	r1, #1
   13cb0:	bl	10a84 <fread@plt>
   13cb4:	mov	r3, r0
   13cb8:	str	r3, [fp, #-28]	; 0xffffffe4
   13cbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13cc0:	sub	r3, r3, #1
   13cc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13cc8:	cmp	r2, r3
   13ccc:	beq	13ce0 <error@@Base+0x1c18>
   13cd0:	ldr	r3, [pc, #196]	; 13d9c <error@@Base+0x1cd4>
   13cd4:	add	r3, pc, r3
   13cd8:	mov	r0, r3
   13cdc:	bl	120c8 <error@@Base>
   13ce0:	sub	r2, fp, #40	; 0x28
   13ce4:	sub	r3, fp, #36	; 0x24
   13ce8:	mov	r1, #4
   13cec:	mov	r0, r3
   13cf0:	bl	10a90 <utf8proc_iterate@plt>
   13cf4:	str	r0, [fp, #-32]	; 0xffffffe0
   13cf8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13cfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d00:	cmp	r2, r3
   13d04:	beq	13d1c <error@@Base+0x1c54>
   13d08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d0c:	bl	10b50 <utf8proc_errmsg@plt>
   13d10:	mov	r3, r0
   13d14:	mov	r0, r3
   13d18:	bl	120c8 <error@@Base>
   13d1c:	ldrb	r3, [fp, #-56]	; 0xffffffc8
   13d20:	cmp	r3, #0
   13d24:	beq	13d44 <error@@Base+0x1c7c>
   13d28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13d2c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   13d30:	cmp	r2, r3
   13d34:	bne	13d44 <error@@Base+0x1c7c>
   13d38:	mov	r3, #1
   13d3c:	strb	r3, [fp, #-13]
   13d40:	b	13d60 <error@@Base+0x1c98>
   13d44:	ldrb	r3, [fp, #-13]
   13d48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13d4c:	mov	r1, r3
   13d50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13d54:	bl	13aa0 <error@@Base+0x19d8>
   13d58:	mov	r3, #0
   13d5c:	strb	r3, [fp, #-13]
   13d60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13d64:	bl	10b80 <getc@plt>
   13d68:	str	r0, [fp, #-20]	; 0xffffffec
   13d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13d70:	cmn	r3, #1
   13d74:	bne	13c48 <error@@Base+0x1b80>
   13d78:	nop	{0}
   13d7c:	sub	sp, fp, #8
   13d80:	ldr	r4, [sp]
   13d84:	ldr	fp, [sp, #4]
   13d88:	add	sp, sp, #8
   13d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   13d90:	andeq	r5, r1, ip, asr #7
   13d94:	andeq	r0, r0, ip, asr #1
   13d98:			; <UNDEFINED> instruction: 0x000048b0
   13d9c:	andeq	r4, r0, r4, ror #16
   13da0:	str	fp, [sp, #-8]!
   13da4:	str	lr, [sp, #4]
   13da8:	add	fp, sp, #4
   13dac:	sub	sp, sp, #16
   13db0:	str	r0, [fp, #-16]
   13db4:	ldr	r0, [fp, #-16]
   13db8:	bl	10a18 <utf8proc_get_property@plt>
   13dbc:	str	r0, [fp, #-8]
   13dc0:	ldr	r3, [fp, #-16]
   13dc4:	cmp	r3, #13
   13dc8:	bgt	13df4 <error@@Base+0x1d2c>
   13dcc:	ldr	r3, [fp, #-16]
   13dd0:	cmp	r3, #11
   13dd4:	bge	13e0c <error@@Base+0x1d44>
   13dd8:	ldr	r3, [fp, #-16]
   13ddc:	cmp	r3, #9
   13de0:	beq	13e0c <error@@Base+0x1d44>
   13de4:	ldr	r3, [fp, #-16]
   13de8:	cmp	r3, #10
   13dec:	beq	13e04 <error@@Base+0x1d3c>
   13df0:	b	13e14 <error@@Base+0x1d4c>
   13df4:	ldr	r3, [fp, #-16]
   13df8:	cmp	r3, #160	; 0xa0
   13dfc:	beq	13e0c <error@@Base+0x1d44>
   13e00:	b	13e14 <error@@Base+0x1d4c>
   13e04:	mov	r3, #0
   13e08:	b	13e34 <error@@Base+0x1d6c>
   13e0c:	mov	r3, #1
   13e10:	b	13e34 <error@@Base+0x1d6c>
   13e14:	ldr	r3, [fp, #-8]
   13e18:	ldrsh	r3, [r3]
   13e1c:	sub	r3, r3, #23
   13e20:	cmp	r3, #2
   13e24:	bhi	13e30 <error@@Base+0x1d68>
   13e28:	mov	r3, #1
   13e2c:	b	13e34 <error@@Base+0x1d6c>
   13e30:	mov	r3, #0
   13e34:	mov	r0, r3
   13e38:	sub	sp, fp, #4
   13e3c:	ldr	fp, [sp]
   13e40:	add	sp, sp, #4
   13e44:	pop	{pc}		; (ldr pc, [sp], #4)
   13e48:	str	fp, [sp, #-8]!
   13e4c:	str	lr, [sp, #4]
   13e50:	add	fp, sp, #4
   13e54:	sub	sp, sp, #24
   13e58:	str	r0, [fp, #-24]	; 0xffffffe8
   13e5c:	str	r1, [fp, #-28]	; 0xffffffe4
   13e60:	mov	r3, #0
   13e64:	strb	r3, [fp, #-5]
   13e68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13e6c:	str	r3, [fp, #-12]
   13e70:	b	13ea8 <error@@Base+0x1de0>
   13e74:	ldr	r3, [fp, #-12]
   13e78:	ldr	r3, [r3, #12]
   13e7c:	mov	r0, r3
   13e80:	bl	13da0 <error@@Base+0x1cd8>
   13e84:	mov	r3, r0
   13e88:	cmp	r3, #0
   13e8c:	beq	13e9c <error@@Base+0x1dd4>
   13e90:	ldr	r3, [fp, #-12]
   13e94:	mov	r2, #32
   13e98:	str	r2, [r3, #12]
   13e9c:	ldr	r3, [fp, #-12]
   13ea0:	ldr	r3, [r3, #4]
   13ea4:	str	r3, [fp, #-12]
   13ea8:	ldr	r3, [fp, #-12]
   13eac:	cmp	r3, #0
   13eb0:	bne	13e74 <error@@Base+0x1dac>
   13eb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13eb8:	str	r3, [fp, #-12]
   13ebc:	b	13fb4 <error@@Base+0x1eec>
   13ec0:	ldr	r3, [fp, #-12]
   13ec4:	ldr	r3, [r3, #4]
   13ec8:	str	r3, [fp, #-16]
   13ecc:	ldr	r3, [fp, #-12]
   13ed0:	ldr	r3, [r3, #12]
   13ed4:	cmp	r3, #32
   13ed8:	bne	13f14 <error@@Base+0x1e4c>
   13edc:	ldrb	r3, [fp, #-5]
   13ee0:	cmp	r3, #0
   13ee4:	beq	13f30 <error@@Base+0x1e68>
   13ee8:	ldr	r3, [fp, #-16]
   13eec:	cmp	r3, #0
   13ef0:	beq	13f30 <error@@Base+0x1e68>
   13ef4:	ldr	r3, [fp, #-16]
   13ef8:	ldr	r3, [r3, #12]
   13efc:	cmp	r3, #32
   13f00:	beq	13f30 <error@@Base+0x1e68>
   13f04:	ldr	r3, [fp, #-16]
   13f08:	ldr	r3, [r3, #12]
   13f0c:	cmp	r3, #10
   13f10:	beq	13f30 <error@@Base+0x1e68>
   13f14:	ldr	r3, [fp, #-12]
   13f18:	ldr	r3, [r3, #12]
   13f1c:	cmp	r3, #10
   13f20:	bne	13f90 <error@@Base+0x1ec8>
   13f24:	ldrb	r3, [fp, #-5]
   13f28:	cmp	r3, #0
   13f2c:	bne	13f90 <error@@Base+0x1ec8>
   13f30:	ldrb	r3, [fp, #-5]
   13f34:	cmp	r3, #0
   13f38:	beq	13f78 <error@@Base+0x1eb0>
   13f3c:	ldr	r3, [fp, #-16]
   13f40:	cmp	r3, #0
   13f44:	beq	13f78 <error@@Base+0x1eb0>
   13f48:	ldr	r3, [fp, #-16]
   13f4c:	ldr	r3, [r3, #12]
   13f50:	cmp	r3, #32
   13f54:	bne	13f78 <error@@Base+0x1eb0>
   13f58:	ldr	r3, [fp, #-16]
   13f5c:	ldrb	r2, [r3, #8]
   13f60:	ldr	r3, [fp, #-12]
   13f64:	ldrb	r3, [r3, #8]
   13f68:	orr	r3, r2, r3
   13f6c:	uxtb	r2, r3
   13f70:	ldr	r3, [fp, #-16]
   13f74:	strb	r2, [r3, #8]
   13f78:	ldr	r1, [fp, #-12]
   13f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f80:	bl	148f4 <error@@Base+0x282c>
   13f84:	ldr	r0, [fp, #-12]
   13f88:	bl	10a0c <free@plt>
   13f8c:	b	13fac <error@@Base+0x1ee4>
   13f90:	ldr	r3, [fp, #-12]
   13f94:	ldr	r3, [r3, #12]
   13f98:	cmp	r3, #10
   13f9c:	movne	r3, #1
   13fa0:	moveq	r3, #0
   13fa4:	uxtb	r3, r3
   13fa8:	strb	r3, [fp, #-5]
   13fac:	ldr	r3, [fp, #-16]
   13fb0:	str	r3, [fp, #-12]
   13fb4:	ldr	r3, [fp, #-12]
   13fb8:	cmp	r3, #0
   13fbc:	bne	13ec0 <error@@Base+0x1df8>
   13fc0:	nop	{0}
   13fc4:	sub	sp, fp, #4
   13fc8:	ldr	fp, [sp]
   13fcc:	add	sp, sp, #4
   13fd0:	pop	{pc}		; (ldr pc, [sp], #4)
   13fd4:	str	fp, [sp, #-8]!
   13fd8:	str	lr, [sp, #4]
   13fdc:	add	fp, sp, #4
   13fe0:	sub	sp, sp, #16
   13fe4:	str	r0, [fp, #-16]
   13fe8:	ldr	r3, [fp, #-16]
   13fec:	str	r3, [fp, #-8]
   13ff0:	b	14020 <error@@Base+0x1f58>
   13ff4:	ldr	r3, [fp, #-8]
   13ff8:	ldr	r3, [r3, #12]
   13ffc:	mov	r0, r3
   14000:	bl	10a60 <utf8proc_tolower@plt>
   14004:	mov	r3, r0
   14008:	mov	r2, r3
   1400c:	ldr	r3, [fp, #-8]
   14010:	str	r2, [r3, #12]
   14014:	ldr	r3, [fp, #-8]
   14018:	ldr	r3, [r3, #4]
   1401c:	str	r3, [fp, #-8]
   14020:	ldr	r3, [fp, #-8]
   14024:	cmp	r3, #0
   14028:	bne	13ff4 <error@@Base+0x1f2c>
   1402c:	nop	{0}
   14030:	sub	sp, fp, #4
   14034:	ldr	fp, [sp]
   14038:	add	sp, sp, #4
   1403c:	pop	{pc}		; (ldr pc, [sp], #4)
   14040:	str	fp, [sp, #-8]!
   14044:	str	lr, [sp, #4]
   14048:	add	fp, sp, #4
   1404c:	sub	sp, sp, #24
   14050:	str	r0, [fp, #-16]
   14054:	str	r1, [fp, #-20]	; 0xffffffec
   14058:	str	r2, [fp, #-24]	; 0xffffffe8
   1405c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14060:	ldrb	r3, [r3]
   14064:	cmp	r3, #0
   14068:	beq	14094 <error@@Base+0x1fcc>
   1406c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14070:	cmp	r3, #0
   14074:	bne	14094 <error@@Base+0x1fcc>
   14078:	ldr	r3, [pc, #296]	; 141a8 <error@@Base+0x20e0>
   1407c:	add	r3, pc, r3
   14080:	mov	r1, r3
   14084:	ldr	r3, [pc, #288]	; 141ac <error@@Base+0x20e4>
   14088:	add	r3, pc, r3
   1408c:	mov	r0, r3
   14090:	bl	12138 <error@@Base+0x70>
   14094:	ldr	r3, [fp, #-16]
   14098:	ldr	r3, [r3, #4]
   1409c:	str	r3, [fp, #-8]
   140a0:	ldr	r3, [pc, #264]	; 141b0 <error@@Base+0x20e8>
   140a4:	add	r3, pc, r3
   140a8:	mov	r1, r3
   140ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   140b0:	bl	115f4 <__assert_fail@plt+0xa68>
   140b4:	str	r0, [fp, #-12]
   140b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140bc:	ldrb	r3, [r3]
   140c0:	cmp	r3, #0
   140c4:	beq	140e0 <error@@Base+0x2018>
   140c8:	ldr	r0, [fp, #-12]
   140cc:	bl	13b08 <error@@Base+0x1a40>
   140d0:	mov	r3, r0
   140d4:	mov	r2, r3
   140d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140dc:	strb	r2, [r3, #11]
   140e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140e4:	ldrb	r3, [r3, #1]
   140e8:	mov	r2, r3
   140ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140f0:	ldr	r3, [r3, #4]
   140f4:	cmp	r3, #0
   140f8:	beq	14108 <error@@Base+0x2040>
   140fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14100:	ldr	r3, [r3, #4]
   14104:	b	1410c <error@@Base+0x2044>
   14108:	mov	r3, #94	; 0x5e
   1410c:	ldr	r1, [fp, #-16]
   14110:	ldr	r0, [fp, #-12]
   14114:	bl	13c00 <error@@Base+0x1b38>
   14118:	ldr	r0, [fp, #-12]
   1411c:	bl	116d4 <__assert_fail@plt+0xb48>
   14120:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14124:	ldrb	r3, [r3, #9]
   14128:	cmp	r3, #0
   1412c:	beq	1415c <error@@Base+0x2094>
   14130:	ldr	r3, [fp, #-8]
   14134:	cmp	r3, #0
   14138:	beq	14148 <error@@Base+0x2080>
   1413c:	ldr	r3, [fp, #-8]
   14140:	ldr	r3, [r3, #4]
   14144:	b	14150 <error@@Base+0x2088>
   14148:	ldr	r3, [fp, #-16]
   1414c:	ldr	r3, [r3]
   14150:	mov	r1, r3
   14154:	ldr	r0, [fp, #-16]
   14158:	bl	13e48 <error@@Base+0x1d80>
   1415c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14160:	ldrb	r3, [r3, #10]
   14164:	cmp	r3, #0
   14168:	beq	14194 <error@@Base+0x20cc>
   1416c:	ldr	r3, [fp, #-8]
   14170:	cmp	r3, #0
   14174:	beq	14184 <error@@Base+0x20bc>
   14178:	ldr	r3, [fp, #-8]
   1417c:	ldr	r3, [r3, #4]
   14180:	b	1418c <error@@Base+0x20c4>
   14184:	ldr	r3, [fp, #-16]
   14188:	ldr	r3, [r3]
   1418c:	mov	r0, r3
   14190:	bl	13fd4 <error@@Base+0x1f0c>
   14194:	nop	{0}
   14198:	sub	sp, fp, #4
   1419c:	ldr	fp, [sp]
   141a0:	add	sp, sp, #4
   141a4:	pop	{pc}		; (ldr pc, [sp], #4)
   141a8:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   141ac:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   141b0:	andeq	r4, r0, r8, asr #9
   141b4:	str	fp, [sp, #-8]!
   141b8:	str	lr, [sp, #4]
   141bc:	add	fp, sp, #4
   141c0:	sub	sp, sp, #16
   141c4:	str	r0, [fp, #-16]
   141c8:	str	r1, [fp, #-20]	; 0xffffffec
   141cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   141d0:	ldr	r0, [fp, #-16]
   141d4:	bl	10a30 <utf8proc_encode_char@plt>
   141d8:	str	r0, [fp, #-8]
   141dc:	ldr	r3, [fp, #-8]
   141e0:	cmp	r3, #0
   141e4:	bgt	141f8 <error@@Base+0x2130>
   141e8:	ldr	r3, [pc, #36]	; 14214 <error@@Base+0x214c>
   141ec:	add	r3, pc, r3
   141f0:	mov	r0, r3
   141f4:	bl	120c8 <error@@Base>
   141f8:	ldr	r3, [fp, #-8]
   141fc:	sxtb	r3, r3
   14200:	mov	r0, r3
   14204:	sub	sp, fp, #4
   14208:	ldr	fp, [sp]
   1420c:	add	sp, sp, #4
   14210:	pop	{pc}		; (ldr pc, [sp], #4)
   14214:	andeq	r4, r0, r4, lsl #7
   14218:	str	fp, [sp, #-8]!
   1421c:	str	lr, [sp, #4]
   14220:	add	fp, sp, #4
   14224:	sub	sp, sp, #16
   14228:	str	r0, [fp, #-16]
   1422c:	ldr	r0, [fp, #-16]
   14230:	bl	10a18 <utf8proc_get_property@plt>
   14234:	str	r0, [fp, #-8]
   14238:	ldr	r3, [fp, #-16]
   1423c:	cmp	r3, #32
   14240:	bne	1424c <error@@Base+0x2184>
   14244:	mov	r3, #1
   14248:	b	14278 <error@@Base+0x21b0>
   1424c:	ldr	r3, [fp, #-8]
   14250:	ldrsh	r3, [r3]
   14254:	cmp	r3, #0
   14258:	ble	14274 <error@@Base+0x21ac>
   1425c:	cmp	r3, #22
   14260:	ble	1426c <error@@Base+0x21a4>
   14264:	cmp	r3, #29
   14268:	bne	14274 <error@@Base+0x21ac>
   1426c:	mov	r3, #1
   14270:	b	14278 <error@@Base+0x21b0>
   14274:	mov	r3, #0
   14278:	mov	r0, r3
   1427c:	sub	sp, fp, #4
   14280:	ldr	fp, [sp]
   14284:	add	sp, sp, #4
   14288:	pop	{pc}		; (ldr pc, [sp], #4)
   1428c:	str	fp, [sp, #-8]!
   14290:	str	lr, [sp, #4]
   14294:	add	fp, sp, #4
   14298:	sub	sp, sp, #8
   1429c:	str	r0, [fp, #-8]
   142a0:	ldr	r0, [fp, #-8]
   142a4:	bl	10ae4 <utf8proc_category@plt>
   142a8:	mov	r3, r0
   142ac:	sub	r3, r3, #6
   142b0:	cmp	r3, #2
   142b4:	bhi	142c0 <error@@Base+0x21f8>
   142b8:	mov	r3, #1
   142bc:	b	142c4 <error@@Base+0x21fc>
   142c0:	mov	r3, #0
   142c4:	mov	r0, r3
   142c8:	sub	sp, fp, #4
   142cc:	ldr	fp, [sp]
   142d0:	add	sp, sp, #4
   142d4:	pop	{pc}		; (ldr pc, [sp], #4)
   142d8:	str	fp, [sp, #-8]!
   142dc:	str	lr, [sp, #4]
   142e0:	add	fp, sp, #4
   142e4:	sub	sp, sp, #24
   142e8:	str	r1, [fp, #-20]	; 0xffffffec
   142ec:	str	r2, [fp, #-24]	; 0xffffffe8
   142f0:	mov	r2, r3
   142f4:	mov	r3, r0
   142f8:	strb	r3, [fp, #-16]
   142fc:	mov	r3, r2
   14300:	strb	r3, [fp, #-28]	; 0xffffffe4
   14304:	mov	r3, #0
   14308:	strh	r3, [fp, #-6]
   1430c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14310:	str	r3, [fp, #-12]
   14314:	ldrb	r3, [fp, #-16]
   14318:	cmp	r3, #0
   1431c:	beq	14344 <error@@Base+0x227c>
   14320:	ldr	r1, [fp, #-12]
   14324:	mov	r0, #94	; 0x5e
   14328:	bl	141b4 <error@@Base+0x20ec>
   1432c:	mov	r3, r0
   14330:	uxth	r2, r3
   14334:	ldrh	r3, [fp, #-6]
   14338:	add	r3, r2, r3
   1433c:	uxth	r3, r3
   14340:	strh	r3, [fp, #-6]
   14344:	ldr	r3, [fp, #-20]	; 0xffffffec
   14348:	cmp	r3, #10
   1434c:	bne	1438c <error@@Base+0x22c4>
   14350:	ldrsh	r3, [fp, #-6]
   14354:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14358:	add	r2, r2, r3
   1435c:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   14360:	cmp	r3, #0
   14364:	beq	14374 <error@@Base+0x22ac>
   14368:	ldr	r3, [pc, #304]	; 144a0 <error@@Base+0x23d8>
   1436c:	add	r3, pc, r3
   14370:	b	1437c <error@@Base+0x22b4>
   14374:	ldr	r3, [pc, #296]	; 144a4 <error@@Base+0x23dc>
   14378:	add	r3, pc, r3
   1437c:	mov	r1, r3
   14380:	mov	r0, r2
   14384:	bl	10b38 <sprintf@plt>
   14388:	b	1448c <error@@Base+0x23c4>
   1438c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14390:	bl	14218 <error@@Base+0x2150>
   14394:	mov	r3, r0
   14398:	cmp	r3, #0
   1439c:	beq	1443c <error@@Base+0x2374>
   143a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   143a4:	bl	1428c <error@@Base+0x21c4>
   143a8:	mov	r3, r0
   143ac:	cmp	r3, #0
   143b0:	beq	143e4 <error@@Base+0x231c>
   143b4:	ldrsh	r3, [fp, #-6]
   143b8:	ldr	r2, [fp, #-12]
   143bc:	add	r3, r2, r3
   143c0:	mov	r1, r3
   143c4:	movw	r0, #9676	; 0x25cc
   143c8:	bl	141b4 <error@@Base+0x20ec>
   143cc:	mov	r3, r0
   143d0:	uxth	r2, r3
   143d4:	ldrh	r3, [fp, #-6]
   143d8:	add	r3, r2, r3
   143dc:	uxth	r3, r3
   143e0:	strh	r3, [fp, #-6]
   143e4:	ldrsh	r3, [fp, #-6]
   143e8:	ldr	r2, [fp, #-12]
   143ec:	add	r3, r2, r3
   143f0:	mov	r1, r3
   143f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   143f8:	bl	141b4 <error@@Base+0x20ec>
   143fc:	mov	r3, r0
   14400:	uxth	r2, r3
   14404:	ldrh	r3, [fp, #-6]
   14408:	add	r3, r2, r3
   1440c:	uxth	r3, r3
   14410:	strh	r3, [fp, #-6]
   14414:	ldrsh	r2, [fp, #-6]
   14418:	uxth	r3, r2
   1441c:	add	r3, r3, #1
   14420:	uxth	r3, r3
   14424:	strh	r3, [fp, #-6]
   14428:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1442c:	add	r3, r3, r2
   14430:	mov	r2, #0
   14434:	strb	r2, [r3]
   14438:	b	1448c <error@@Base+0x23c4>
   1443c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14440:	cmp	r3, #255	; 0xff
   14444:	bhi	1446c <error@@Base+0x23a4>
   14448:	ldrsh	r3, [fp, #-6]
   1444c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14450:	add	r3, r2, r3
   14454:	ldr	r2, [fp, #-20]	; 0xffffffec
   14458:	ldr	r1, [pc, #72]	; 144a8 <error@@Base+0x23e0>
   1445c:	add	r1, pc, r1
   14460:	mov	r0, r3
   14464:	bl	10b38 <sprintf@plt>
   14468:	b	1448c <error@@Base+0x23c4>
   1446c:	ldrsh	r3, [fp, #-6]
   14470:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14474:	add	r3, r2, r3
   14478:	ldr	r2, [fp, #-20]	; 0xffffffec
   1447c:	ldr	r1, [pc, #40]	; 144ac <error@@Base+0x23e4>
   14480:	add	r1, pc, r1
   14484:	mov	r0, r3
   14488:	bl	10b38 <sprintf@plt>
   1448c:	nop	{0}
   14490:	sub	sp, fp, #4
   14494:	ldr	fp, [sp]
   14498:	add	sp, sp, #4
   1449c:	pop	{pc}		; (ldr pc, [sp], #4)
   144a0:	andeq	r4, r0, ip, lsl r2
   144a4:	andeq	r4, r0, r8, lsl r2
   144a8:	andeq	r4, r0, r8, lsr r1
   144ac:	andeq	r4, r0, ip, lsl r1
   144b0:	str	fp, [sp, #-8]!
   144b4:	str	lr, [sp, #4]
   144b8:	add	fp, sp, #4
   144bc:	sub	sp, sp, #40	; 0x28
   144c0:	str	r0, [fp, #-32]	; 0xffffffe0
   144c4:	str	r1, [fp, #-36]	; 0xffffffdc
   144c8:	str	r2, [fp, #-40]	; 0xffffffd8
   144cc:	ldr	r3, [pc, #228]	; 145b8 <error@@Base+0x24f0>
   144d0:	add	r3, pc, r3
   144d4:	mov	r1, r3
   144d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   144dc:	bl	115f4 <__assert_fail@plt+0xa68>
   144e0:	str	r0, [fp, #-12]
   144e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   144e8:	cmp	r3, #0
   144ec:	beq	14544 <error@@Base+0x247c>
   144f0:	ldr	r3, [fp, #-12]
   144f4:	mov	r2, #55	; 0x37
   144f8:	mov	r1, #1
   144fc:	ldr	r0, [pc, #184]	; 145bc <error@@Base+0x24f4>
   14500:	add	r0, pc, r0
   14504:	bl	10a78 <fwrite@plt>
   14508:	ldr	r3, [fp, #-12]
   1450c:	mov	r2, #55	; 0x37
   14510:	mov	r1, #1
   14514:	ldr	r0, [pc, #164]	; 145c0 <error@@Base+0x24f8>
   14518:	add	r0, pc, r0
   1451c:	bl	10a78 <fwrite@plt>
   14520:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14524:	ldr	r0, [fp, #-12]
   14528:	blx	r3
   1452c:	ldr	r3, [fp, #-12]
   14530:	mov	r2, #55	; 0x37
   14534:	mov	r1, #1
   14538:	ldr	r0, [pc, #132]	; 145c4 <error@@Base+0x24fc>
   1453c:	add	r0, pc, r0
   14540:	bl	10a78 <fwrite@plt>
   14544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14548:	ldr	r3, [r3]
   1454c:	str	r3, [fp, #-8]
   14550:	b	14590 <error@@Base+0x24c8>
   14554:	ldr	r3, [fp, #-8]
   14558:	ldrb	r3, [r3, #8]
   1455c:	mov	r0, r3
   14560:	ldr	r3, [fp, #-8]
   14564:	ldr	r1, [r3, #12]
   14568:	sub	r2, fp, #24
   1456c:	mov	r3, #0
   14570:	bl	142d8 <error@@Base+0x2210>
   14574:	sub	r3, fp, #24
   14578:	ldr	r1, [fp, #-12]
   1457c:	mov	r0, r3
   14580:	bl	10b5c <fputs@plt>
   14584:	ldr	r3, [fp, #-8]
   14588:	ldr	r3, [r3, #4]
   1458c:	str	r3, [fp, #-8]
   14590:	ldr	r3, [fp, #-8]
   14594:	cmp	r3, #0
   14598:	bne	14554 <error@@Base+0x248c>
   1459c:	ldr	r0, [fp, #-12]
   145a0:	bl	116d4 <__assert_fail@plt+0xb48>
   145a4:	nop	{0}
   145a8:	sub	sp, fp, #4
   145ac:	ldr	fp, [sp]
   145b0:	add	sp, sp, #4
   145b4:	pop	{pc}		; (ldr pc, [sp], #4)
   145b8:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   145bc:			; <UNDEFINED> instruction: 0x00003fb0
   145c0:	ldrdeq	r3, [r0], -r0
   145c4:	andeq	r3, r0, ip, lsr #31
   145c8:	str	fp, [sp, #-8]!
   145cc:	str	lr, [sp, #4]
   145d0:	add	fp, sp, #4
   145d4:	sub	sp, sp, #24
   145d8:	str	r0, [fp, #-24]	; 0xffffffe8
   145dc:	str	r1, [fp, #-28]	; 0xffffffe4
   145e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   145e4:	str	r3, [fp, #-8]
   145e8:	mov	r3, #0
   145ec:	str	r3, [fp, #-12]
   145f0:	mov	r3, #0
   145f4:	str	r3, [fp, #-16]
   145f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   145fc:	str	r3, [fp, #-8]
   14600:	b	14654 <error@@Base+0x258c>
   14604:	sub	r3, fp, #16
   14608:	mov	r2, r3
   1460c:	mvn	r1, #0
   14610:	ldr	r0, [fp, #-8]
   14614:	bl	10a90 <utf8proc_iterate@plt>
   14618:	str	r0, [fp, #-12]
   1461c:	ldr	r3, [fp, #-12]
   14620:	cmp	r3, #0
   14624:	bgt	14630 <error@@Base+0x2568>
   14628:	mov	r3, #0
   1462c:	b	14668 <error@@Base+0x25a0>
   14630:	ldr	r3, [fp, #-16]
   14634:	mov	r2, r3
   14638:	mov	r1, #0
   1463c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14640:	bl	13aa0 <error@@Base+0x19d8>
   14644:	ldr	r3, [fp, #-12]
   14648:	ldr	r2, [fp, #-8]
   1464c:	add	r3, r2, r3
   14650:	str	r3, [fp, #-8]
   14654:	ldr	r3, [fp, #-8]
   14658:	ldrb	r3, [r3]
   1465c:	cmp	r3, #0
   14660:	bne	14604 <error@@Base+0x253c>
   14664:	mov	r3, #1
   14668:	mov	r0, r3
   1466c:	sub	sp, fp, #4
   14670:	ldr	fp, [sp]
   14674:	add	sp, sp, #4
   14678:	pop	{pc}		; (ldr pc, [sp], #4)
   1467c:	push	{fp}		; (str fp, [sp, #-4]!)
   14680:	add	fp, sp, #0
   14684:	sub	sp, sp, #12
   14688:	str	r0, [fp, #-8]
   1468c:	ldr	r3, [fp, #-8]
   14690:	mov	r2, #0
   14694:	str	r2, [r3, #4]
   14698:	ldr	r3, [fp, #-8]
   1469c:	ldr	r2, [r3, #4]
   146a0:	ldr	r3, [fp, #-8]
   146a4:	str	r2, [r3]
   146a8:	ldr	r3, [fp, #-8]
   146ac:	mov	r2, #0
   146b0:	str	r2, [r3, #8]
   146b4:	ldr	r3, [fp, #-8]
   146b8:	mov	r2, #0
   146bc:	str	r2, [r3, #12]
   146c0:	nop	{0}
   146c4:	add	sp, fp, #0
   146c8:	pop	{fp}		; (ldr fp, [sp], #4)
   146cc:	bx	lr
   146d0:	str	fp, [sp, #-8]!
   146d4:	str	lr, [sp, #4]
   146d8:	add	fp, sp, #4
   146dc:	sub	sp, sp, #8
   146e0:	str	r0, [fp, #-8]
   146e4:	ldr	r3, [fp, #-8]
   146e8:	ldr	r3, [r3, #8]
   146ec:	cmp	r3, #0
   146f0:	beq	14710 <error@@Base+0x2648>
   146f4:	ldr	r3, [fp, #-8]
   146f8:	ldr	r3, [r3, #8]
   146fc:	mov	r0, r3
   14700:	bl	10a0c <free@plt>
   14704:	ldr	r3, [fp, #-8]
   14708:	mov	r2, #0
   1470c:	str	r2, [r3, #8]
   14710:	nop	{0}
   14714:	sub	sp, fp, #4
   14718:	ldr	fp, [sp]
   1471c:	add	sp, sp, #4
   14720:	pop	{pc}		; (ldr pc, [sp], #4)
   14724:	str	fp, [sp, #-8]!
   14728:	str	lr, [sp, #4]
   1472c:	add	fp, sp, #4
   14730:	sub	sp, sp, #16
   14734:	str	r0, [fp, #-8]
   14738:	str	r1, [fp, #-12]
   1473c:	str	r2, [fp, #-16]
   14740:	str	r3, [fp, #-20]	; 0xffffffec
   14744:	ldr	r3, [fp, #-16]
   14748:	ldr	r2, [fp, #-12]
   1474c:	str	r2, [r3]
   14750:	ldr	r3, [fp, #-16]
   14754:	ldr	r2, [fp, #-20]	; 0xffffffec
   14758:	str	r2, [r3, #4]
   1475c:	ldr	r3, [fp, #-12]
   14760:	cmp	r3, #0
   14764:	beq	14778 <error@@Base+0x26b0>
   14768:	ldr	r3, [fp, #-12]
   1476c:	ldr	r2, [fp, #-16]
   14770:	str	r2, [r3, #4]
   14774:	b	14784 <error@@Base+0x26bc>
   14778:	ldr	r3, [fp, #-8]
   1477c:	ldr	r2, [fp, #-16]
   14780:	str	r2, [r3]
   14784:	ldr	r3, [fp, #-20]	; 0xffffffec
   14788:	cmp	r3, #0
   1478c:	beq	147a0 <error@@Base+0x26d8>
   14790:	ldr	r3, [fp, #-20]	; 0xffffffec
   14794:	ldr	r2, [fp, #-16]
   14798:	str	r2, [r3]
   1479c:	b	147ac <error@@Base+0x26e4>
   147a0:	ldr	r3, [fp, #-8]
   147a4:	ldr	r2, [fp, #-16]
   147a8:	str	r2, [r3, #4]
   147ac:	ldr	r0, [fp, #-8]
   147b0:	bl	146d0 <error@@Base+0x2608>
   147b4:	ldr	r3, [fp, #-8]
   147b8:	ldr	r3, [r3, #12]
   147bc:	add	r2, r3, #1
   147c0:	ldr	r3, [fp, #-8]
   147c4:	str	r2, [r3, #12]
   147c8:	nop	{0}
   147cc:	sub	sp, fp, #4
   147d0:	ldr	fp, [sp]
   147d4:	add	sp, sp, #4
   147d8:	pop	{pc}		; (ldr pc, [sp], #4)
   147dc:	str	fp, [sp, #-8]!
   147e0:	str	lr, [sp, #4]
   147e4:	add	fp, sp, #4
   147e8:	sub	sp, sp, #8
   147ec:	str	r0, [fp, #-8]
   147f0:	str	r1, [fp, #-12]
   147f4:	ldr	r3, [fp, #-8]
   147f8:	ldr	r3, [r3]
   147fc:	ldr	r2, [fp, #-12]
   14800:	mov	r1, #0
   14804:	ldr	r0, [fp, #-8]
   14808:	bl	14724 <error@@Base+0x265c>
   1480c:	nop	{0}
   14810:	sub	sp, fp, #4
   14814:	ldr	fp, [sp]
   14818:	add	sp, sp, #4
   1481c:	pop	{pc}		; (ldr pc, [sp], #4)
   14820:	str	fp, [sp, #-8]!
   14824:	str	lr, [sp, #4]
   14828:	add	fp, sp, #4
   1482c:	sub	sp, sp, #8
   14830:	str	r0, [fp, #-8]
   14834:	str	r1, [fp, #-12]
   14838:	ldr	r3, [fp, #-8]
   1483c:	ldr	r1, [r3, #4]
   14840:	mov	r3, #0
   14844:	ldr	r2, [fp, #-12]
   14848:	ldr	r0, [fp, #-8]
   1484c:	bl	14724 <error@@Base+0x265c>
   14850:	nop	{0}
   14854:	sub	sp, fp, #4
   14858:	ldr	fp, [sp]
   1485c:	add	sp, sp, #4
   14860:	pop	{pc}		; (ldr pc, [sp], #4)
   14864:	str	fp, [sp, #-8]!
   14868:	str	lr, [sp, #4]
   1486c:	add	fp, sp, #4
   14870:	sub	sp, sp, #16
   14874:	str	r0, [fp, #-8]
   14878:	str	r1, [fp, #-12]
   1487c:	str	r2, [fp, #-16]
   14880:	ldr	r3, [fp, #-16]
   14884:	ldr	r1, [r3]
   14888:	ldr	r3, [fp, #-16]
   1488c:	ldr	r2, [fp, #-12]
   14890:	ldr	r0, [fp, #-8]
   14894:	bl	14724 <error@@Base+0x265c>
   14898:	nop	{0}
   1489c:	sub	sp, fp, #4
   148a0:	ldr	fp, [sp]
   148a4:	add	sp, sp, #4
   148a8:	pop	{pc}		; (ldr pc, [sp], #4)
   148ac:	str	fp, [sp, #-8]!
   148b0:	str	lr, [sp, #4]
   148b4:	add	fp, sp, #4
   148b8:	sub	sp, sp, #16
   148bc:	str	r0, [fp, #-8]
   148c0:	str	r1, [fp, #-12]
   148c4:	str	r2, [fp, #-16]
   148c8:	ldr	r3, [fp, #-12]
   148cc:	ldr	r3, [r3, #4]
   148d0:	ldr	r2, [fp, #-16]
   148d4:	ldr	r1, [fp, #-12]
   148d8:	ldr	r0, [fp, #-8]
   148dc:	bl	14724 <error@@Base+0x265c>
   148e0:	nop	{0}
   148e4:	sub	sp, fp, #4
   148e8:	ldr	fp, [sp]
   148ec:	add	sp, sp, #4
   148f0:	pop	{pc}		; (ldr pc, [sp], #4)
   148f4:	str	fp, [sp, #-8]!
   148f8:	str	lr, [sp, #4]
   148fc:	add	fp, sp, #4
   14900:	sub	sp, sp, #8
   14904:	str	r0, [fp, #-8]
   14908:	str	r1, [fp, #-12]
   1490c:	ldr	r3, [fp, #-12]
   14910:	ldr	r3, [r3]
   14914:	cmp	r3, #0
   14918:	beq	14934 <error@@Base+0x286c>
   1491c:	ldr	r3, [fp, #-12]
   14920:	ldr	r3, [r3]
   14924:	ldr	r2, [fp, #-12]
   14928:	ldr	r2, [r2, #4]
   1492c:	str	r2, [r3, #4]
   14930:	b	14944 <error@@Base+0x287c>
   14934:	ldr	r3, [fp, #-12]
   14938:	ldr	r2, [r3, #4]
   1493c:	ldr	r3, [fp, #-8]
   14940:	str	r2, [r3]
   14944:	ldr	r3, [fp, #-12]
   14948:	ldr	r3, [r3, #4]
   1494c:	cmp	r3, #0
   14950:	beq	1496c <error@@Base+0x28a4>
   14954:	ldr	r3, [fp, #-12]
   14958:	ldr	r3, [r3, #4]
   1495c:	ldr	r2, [fp, #-12]
   14960:	ldr	r2, [r2]
   14964:	str	r2, [r3]
   14968:	b	1497c <error@@Base+0x28b4>
   1496c:	ldr	r3, [fp, #-12]
   14970:	ldr	r2, [r3]
   14974:	ldr	r3, [fp, #-8]
   14978:	str	r2, [r3, #4]
   1497c:	ldr	r3, [fp, #-12]
   14980:	mov	r2, #0
   14984:	str	r2, [r3, #4]
   14988:	ldr	r3, [fp, #-12]
   1498c:	ldr	r2, [r3, #4]
   14990:	ldr	r3, [fp, #-12]
   14994:	str	r2, [r3]
   14998:	ldr	r0, [fp, #-8]
   1499c:	bl	146d0 <error@@Base+0x2608>
   149a0:	ldr	r3, [fp, #-8]
   149a4:	ldr	r3, [r3, #12]
   149a8:	sub	r2, r3, #1
   149ac:	ldr	r3, [fp, #-8]
   149b0:	str	r2, [r3, #12]
   149b4:	nop	{0}
   149b8:	sub	sp, fp, #4
   149bc:	ldr	fp, [sp]
   149c0:	add	sp, sp, #4
   149c4:	pop	{pc}		; (ldr pc, [sp], #4)
   149c8:	str	fp, [sp, #-8]!
   149cc:	str	lr, [sp, #4]
   149d0:	add	fp, sp, #4
   149d4:	sub	sp, sp, #16
   149d8:	str	r0, [fp, #-16]
   149dc:	mov	r3, #0
   149e0:	str	r3, [fp, #-12]
   149e4:	ldr	r3, [fp, #-16]
   149e8:	ldr	r3, [r3, #8]
   149ec:	cmp	r3, #0
   149f0:	bne	14a74 <error@@Base+0x29ac>
   149f4:	ldr	r3, [fp, #-16]
   149f8:	ldr	r3, [r3, #12]
   149fc:	cmp	r3, #0
   14a00:	beq	14a74 <error@@Base+0x29ac>
   14a04:	ldr	r3, [fp, #-16]
   14a08:	ldr	r3, [r3, #12]
   14a0c:	mov	r1, #4
   14a10:	mov	r0, r3
   14a14:	bl	114a8 <__assert_fail@plt+0x91c>
   14a18:	mov	r2, r0
   14a1c:	ldr	r3, [fp, #-16]
   14a20:	str	r2, [r3, #8]
   14a24:	ldr	r3, [fp, #-16]
   14a28:	ldr	r3, [r3]
   14a2c:	str	r3, [fp, #-8]
   14a30:	b	14a64 <error@@Base+0x299c>
   14a34:	ldr	r3, [fp, #-16]
   14a38:	ldr	r2, [r3, #8]
   14a3c:	ldr	r3, [fp, #-12]
   14a40:	add	r1, r3, #1
   14a44:	str	r1, [fp, #-12]
   14a48:	lsl	r3, r3, #2
   14a4c:	add	r3, r2, r3
   14a50:	ldr	r2, [fp, #-8]
   14a54:	str	r2, [r3]
   14a58:	ldr	r3, [fp, #-8]
   14a5c:	ldr	r3, [r3, #4]
   14a60:	str	r3, [fp, #-8]
   14a64:	ldr	r3, [fp, #-8]
   14a68:	cmp	r3, #0
   14a6c:	bne	14a34 <error@@Base+0x296c>
   14a70:	b	14a78 <error@@Base+0x29b0>
   14a74:	nop	{0}
   14a78:	sub	sp, fp, #4
   14a7c:	ldr	fp, [sp]
   14a80:	add	sp, sp, #4
   14a84:	pop	{pc}		; (ldr pc, [sp], #4)
   14a88:	str	fp, [sp, #-8]!
   14a8c:	str	lr, [sp, #4]
   14a90:	add	fp, sp, #4
   14a94:	sub	sp, sp, #16
   14a98:	str	r0, [fp, #-16]
   14a9c:	str	r1, [fp, #-20]	; 0xffffffec
   14aa0:	b	14ac8 <error@@Base+0x2a00>
   14aa4:	ldr	r3, [fp, #-16]
   14aa8:	ldr	r3, [r3]
   14aac:	str	r3, [fp, #-8]
   14ab0:	ldr	r1, [fp, #-8]
   14ab4:	ldr	r0, [fp, #-16]
   14ab8:	bl	148f4 <error@@Base+0x282c>
   14abc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ac0:	ldr	r0, [fp, #-8]
   14ac4:	blx	r3
   14ac8:	ldr	r3, [fp, #-16]
   14acc:	ldr	r3, [r3]
   14ad0:	cmp	r3, #0
   14ad4:	bne	14aa4 <error@@Base+0x29dc>
   14ad8:	nop	{0}
   14adc:	sub	sp, fp, #4
   14ae0:	ldr	fp, [sp]
   14ae4:	add	sp, sp, #4
   14ae8:	pop	{pc}		; (ldr pc, [sp], #4)
   14aec:	str	fp, [sp, #-8]!
   14af0:	str	lr, [sp, #4]
   14af4:	add	fp, sp, #4
   14af8:	sub	sp, sp, #24
   14afc:	str	r0, [fp, #-24]	; 0xffffffe8
   14b00:	str	r1, [fp, #-28]	; 0xffffffe4
   14b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b08:	str	r3, [fp, #-8]
   14b0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b10:	str	r3, [fp, #-12]
   14b14:	ldr	r3, [pc, #524]	; 14d28 <error@@Base+0x2c60>
   14b18:	add	r3, pc, r3
   14b1c:	ldr	r2, [r3]
   14b20:	ldr	r3, [fp, #-8]
   14b24:	lsl	r3, r3, #2
   14b28:	add	r3, r2, r3
   14b2c:	ldr	r3, [r3]
   14b30:	str	r3, [fp, #-16]
   14b34:	b	14c94 <error@@Base+0x2bcc>
   14b38:	ldr	r3, [fp, #-12]
   14b3c:	sub	r3, r3, #1
   14b40:	str	r3, [fp, #-12]
   14b44:	ldr	r2, [fp, #-8]
   14b48:	ldr	r3, [fp, #-12]
   14b4c:	cmp	r2, r3
   14b50:	bge	14b94 <error@@Base+0x2acc>
   14b54:	ldr	r3, [pc, #464]	; 14d2c <error@@Base+0x2c64>
   14b58:	add	r3, pc, r3
   14b5c:	ldr	r3, [r3]
   14b60:	ldr	r2, [pc, #456]	; 14d30 <error@@Base+0x2c68>
   14b64:	add	r2, pc, r2
   14b68:	ldr	r1, [r2]
   14b6c:	ldr	r2, [fp, #-12]
   14b70:	lsl	r2, r2, #2
   14b74:	add	r2, r1, r2
   14b78:	ldr	r2, [r2]
   14b7c:	mov	r1, r2
   14b80:	ldr	r0, [fp, #-16]
   14b84:	blx	r3
   14b88:	mov	r3, r0
   14b8c:	cmp	r3, #0
   14b90:	blt	14b38 <error@@Base+0x2a70>
   14b94:	ldr	r2, [fp, #-8]
   14b98:	ldr	r3, [fp, #-12]
   14b9c:	cmp	r2, r3
   14ba0:	beq	14bf4 <error@@Base+0x2b2c>
   14ba4:	ldr	r3, [pc, #392]	; 14d34 <error@@Base+0x2c6c>
   14ba8:	add	r3, pc, r3
   14bac:	ldr	r2, [r3]
   14bb0:	ldr	r3, [fp, #-12]
   14bb4:	lsl	r3, r3, #2
   14bb8:	add	r2, r2, r3
   14bbc:	ldr	r3, [pc, #372]	; 14d38 <error@@Base+0x2c70>
   14bc0:	add	r3, pc, r3
   14bc4:	ldr	r1, [r3]
   14bc8:	ldr	r3, [fp, #-8]
   14bcc:	add	r0, r3, #1
   14bd0:	str	r0, [fp, #-8]
   14bd4:	lsl	r3, r3, #2
   14bd8:	add	r3, r1, r3
   14bdc:	ldr	r2, [r2]
   14be0:	str	r2, [r3]
   14be4:	b	14bf4 <error@@Base+0x2b2c>
   14be8:	ldr	r3, [fp, #-8]
   14bec:	add	r3, r3, #1
   14bf0:	str	r3, [fp, #-8]
   14bf4:	ldr	r2, [fp, #-8]
   14bf8:	ldr	r3, [fp, #-12]
   14bfc:	cmp	r2, r3
   14c00:	bge	14c44 <error@@Base+0x2b7c>
   14c04:	ldr	r3, [pc, #304]	; 14d3c <error@@Base+0x2c74>
   14c08:	add	r3, pc, r3
   14c0c:	ldr	r3, [r3]
   14c10:	ldr	r2, [pc, #296]	; 14d40 <error@@Base+0x2c78>
   14c14:	add	r2, pc, r2
   14c18:	ldr	r1, [r2]
   14c1c:	ldr	r2, [fp, #-8]
   14c20:	lsl	r2, r2, #2
   14c24:	add	r2, r1, r2
   14c28:	ldr	r2, [r2]
   14c2c:	mov	r1, r2
   14c30:	ldr	r0, [fp, #-16]
   14c34:	blx	r3
   14c38:	mov	r3, r0
   14c3c:	cmp	r3, #0
   14c40:	bgt	14be8 <error@@Base+0x2b20>
   14c44:	ldr	r2, [fp, #-8]
   14c48:	ldr	r3, [fp, #-12]
   14c4c:	cmp	r2, r3
   14c50:	beq	14c94 <error@@Base+0x2bcc>
   14c54:	ldr	r3, [pc, #232]	; 14d44 <error@@Base+0x2c7c>
   14c58:	add	r3, pc, r3
   14c5c:	ldr	r2, [r3]
   14c60:	ldr	r3, [fp, #-8]
   14c64:	lsl	r3, r3, #2
   14c68:	add	r2, r2, r3
   14c6c:	ldr	r3, [pc, #212]	; 14d48 <error@@Base+0x2c80>
   14c70:	add	r3, pc, r3
   14c74:	ldr	r1, [r3]
   14c78:	ldr	r3, [fp, #-12]
   14c7c:	sub	r0, r3, #1
   14c80:	str	r0, [fp, #-12]
   14c84:	lsl	r3, r3, #2
   14c88:	add	r3, r1, r3
   14c8c:	ldr	r2, [r2]
   14c90:	str	r2, [r3]
   14c94:	ldr	r2, [fp, #-8]
   14c98:	ldr	r3, [fp, #-12]
   14c9c:	cmp	r2, r3
   14ca0:	blt	14b44 <error@@Base+0x2a7c>
   14ca4:	ldr	r3, [pc, #160]	; 14d4c <error@@Base+0x2c84>
   14ca8:	add	r3, pc, r3
   14cac:	ldr	r2, [r3]
   14cb0:	ldr	r3, [fp, #-12]
   14cb4:	lsl	r3, r3, #2
   14cb8:	add	r3, r2, r3
   14cbc:	ldr	r2, [fp, #-16]
   14cc0:	str	r2, [r3]
   14cc4:	ldr	r3, [fp, #-12]
   14cc8:	sub	r3, r3, #1
   14ccc:	str	r3, [fp, #-12]
   14cd0:	ldr	r2, [fp, #-12]
   14cd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14cd8:	cmp	r2, r3
   14cdc:	ble	14cec <error@@Base+0x2c24>
   14ce0:	ldr	r1, [fp, #-12]
   14ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14ce8:	bl	14aec <error@@Base+0x2a24>
   14cec:	ldr	r3, [fp, #-8]
   14cf0:	add	r3, r3, #1
   14cf4:	str	r3, [fp, #-8]
   14cf8:	ldr	r2, [fp, #-8]
   14cfc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14d00:	cmp	r2, r3
   14d04:	bge	14d14 <error@@Base+0x2c4c>
   14d08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d0c:	ldr	r0, [fp, #-8]
   14d10:	bl	14aec <error@@Base+0x2a24>
   14d14:	nop	{0}
   14d18:	sub	sp, fp, #4
   14d1c:	ldr	fp, [sp]
   14d20:	add	sp, sp, #4
   14d24:	pop	{pc}		; (ldr pc, [sp], #4)
   14d28:	andeq	r4, r1, r0, asr r6
   14d2c:	andeq	r4, r1, r4, lsl r6
   14d30:	andeq	r4, r1, r4, lsl #12
   14d34:	andeq	r4, r1, r0, asr #11
   14d38:	andeq	r4, r1, r8, lsr #11
   14d3c:	andeq	r4, r1, r4, ror #10
   14d40:	andeq	r4, r1, r4, asr r5
   14d44:	andeq	r4, r1, r0, lsl r5
   14d48:	strdeq	r4, [r1], -r8
   14d4c:	andeq	r4, r1, r0, asr #9
   14d50:	str	fp, [sp, #-8]!
   14d54:	str	lr, [sp, #4]
   14d58:	add	fp, sp, #4
   14d5c:	sub	sp, sp, #16
   14d60:	str	r0, [fp, #-8]
   14d64:	str	r1, [fp, #-12]
   14d68:	str	r2, [fp, #-16]
   14d6c:	ldr	r3, [fp, #-8]
   14d70:	cmp	r3, #1
   14d74:	ble	14db0 <error@@Base+0x2ce8>
   14d78:	ldr	r3, [pc, #68]	; 14dc4 <error@@Base+0x2cfc>
   14d7c:	add	r3, pc, r3
   14d80:	ldr	r2, [fp, #-12]
   14d84:	str	r2, [r3]
   14d88:	ldr	r3, [pc, #56]	; 14dc8 <error@@Base+0x2d00>
   14d8c:	add	r3, pc, r3
   14d90:	ldr	r2, [fp, #-16]
   14d94:	str	r2, [r3]
   14d98:	ldr	r3, [fp, #-8]
   14d9c:	sub	r3, r3, #1
   14da0:	mov	r1, r3
   14da4:	mov	r0, #0
   14da8:	bl	14aec <error@@Base+0x2a24>
   14dac:	b	14db4 <error@@Base+0x2cec>
   14db0:	nop	{0}
   14db4:	sub	sp, fp, #4
   14db8:	ldr	fp, [sp]
   14dbc:	add	sp, sp, #4
   14dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   14dc4:	andeq	r4, r1, ip, ror #7
   14dc8:	andeq	r4, r1, r0, ror #7
   14dcc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14dd0:	mov	r7, r0
   14dd4:	ldr	r6, [pc, #72]	; 14e24 <error@@Base+0x2d5c>
   14dd8:	ldr	r5, [pc, #72]	; 14e28 <error@@Base+0x2d60>
   14ddc:	add	r6, pc, r6
   14de0:	add	r5, pc, r5
   14de4:	sub	r6, r6, r5
   14de8:	mov	r8, r1
   14dec:	mov	r9, r2
   14df0:	bl	109bc <calloc@plt-0x20>
   14df4:	asrs	r6, r6, #2
   14df8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14dfc:	mov	r4, #0
   14e00:	add	r4, r4, #1
   14e04:	ldr	r3, [r5], #4
   14e08:	mov	r2, r9
   14e0c:	mov	r1, r8
   14e10:	mov	r0, r7
   14e14:	blx	r3
   14e18:	cmp	r6, r4
   14e1c:	bne	14e00 <error@@Base+0x2d38>
   14e20:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14e24:	andeq	r4, r1, r0, lsr #2
   14e28:	andeq	r4, r1, r8, lsl r1
   14e2c:	bx	lr
   14e30:	mov	r2, r1
   14e34:	mov	r1, r0
   14e38:	mov	r0, #3
   14e3c:	b	10a6c <__xstat@plt>

Disassembly of section .fini:

00014e40 <.fini>:
   14e40:	push	{r3, lr}
   14e44:	pop	{r3, pc}
