
../repos/prog2/0.10:     file format elf32-littlearm


Disassembly of section .init:

000106c0 <.init>:
   106c0:	push	{r3, lr}
   106c4:	bl	10764 <_start@@Base+0x3c>
   106c8:	pop	{r3, pc}

Disassembly of section .plt:

000106cc <printf@plt-0x14>:
   106cc:	push	{lr}		; (str lr, [sp, #-4]!)
   106d0:	ldr	lr, [pc, #4]	; 106dc <printf@plt-0x4>
   106d4:	add	lr, pc, lr
   106d8:	ldr	pc, [lr, #8]!
   106dc:	andeq	r0, r1, r4, lsr #18

000106e0 <printf@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2340]!	; 0x924

000106ec <memcpy@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #16, 20	; 0x10000
   106f4:	ldr	pc, [ip, #2332]!	; 0x91c

000106f8 <__libc_start_main@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #16, 20	; 0x10000
   10700:	ldr	pc, [ip, #2324]!	; 0x914

00010704 <__gmon_start__@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #16, 20	; 0x10000
   1070c:	ldr	pc, [ip, #2316]!	; 0x90c

00010710 <__isoc99_scanf@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #16, 20	; 0x10000
   10718:	ldr	pc, [ip, #2308]!	; 0x904

0001071c <abort@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #16, 20	; 0x10000
   10724:	ldr	pc, [ip, #2300]!	; 0x8fc

Disassembly of section .text:

00010728 <_start@@Base>:
   10728:	mov	fp, #0
   1072c:	mov	lr, #0
   10730:	pop	{r1}		; (ldr r1, [sp], #4)
   10734:	mov	r2, sp
   10738:	push	{r2}		; (str r2, [sp, #-4]!)
   1073c:	push	{r0}		; (str r0, [sp, #-4]!)
   10740:	ldr	ip, [pc, #16]	; 10758 <_start@@Base+0x30>
   10744:	push	{ip}		; (str ip, [sp, #-4]!)
   10748:	ldr	r0, [pc, #12]	; 1075c <_start@@Base+0x34>
   1074c:	ldr	r3, [pc, #12]	; 10760 <_start@@Base+0x38>
   10750:	bl	106f8 <__libc_start_main@plt>
   10754:	bl	1071c <abort@plt>
   10758:			; <UNDEFINED> instruction: 0x00010bb4
   1075c:	andeq	r0, r1, r4, lsr #21
   10760:	andeq	r0, r1, r4, asr fp
   10764:	ldr	r3, [pc, #20]	; 10780 <_start@@Base+0x58>
   10768:	ldr	r2, [pc, #20]	; 10784 <_start@@Base+0x5c>
   1076c:	add	r3, pc, r3
   10770:	ldr	r2, [r3, r2]
   10774:	cmp	r2, #0
   10778:	bxeq	lr
   1077c:	b	10704 <__gmon_start__@plt>
   10780:	andeq	r0, r1, ip, lsl #17
   10784:	andeq	r0, r0, r4, lsr #32
   10788:	ldr	r0, [pc, #24]	; 107a8 <_start@@Base+0x80>
   1078c:	ldr	r3, [pc, #24]	; 107ac <_start@@Base+0x84>
   10790:	cmp	r3, r0
   10794:	bxeq	lr
   10798:	ldr	r3, [pc, #16]	; 107b0 <_start@@Base+0x88>
   1079c:	cmp	r3, #0
   107a0:	bxeq	lr
   107a4:	bx	r3
   107a8:	andeq	r1, r2, r0, lsr r0
   107ac:	andeq	r1, r2, r0, lsr r0
   107b0:	andeq	r0, r0, r0
   107b4:	ldr	r0, [pc, #36]	; 107e0 <_start@@Base+0xb8>
   107b8:	ldr	r1, [pc, #36]	; 107e4 <_start@@Base+0xbc>
   107bc:	sub	r1, r1, r0
   107c0:	asr	r1, r1, #2
   107c4:	add	r1, r1, r1, lsr #31
   107c8:	asrs	r1, r1, #1
   107cc:	bxeq	lr
   107d0:	ldr	r3, [pc, #16]	; 107e8 <_start@@Base+0xc0>
   107d4:	cmp	r3, #0
   107d8:	bxeq	lr
   107dc:	bx	r3
   107e0:	andeq	r1, r2, r0, lsr r0
   107e4:	andeq	r1, r2, r0, lsr r0
   107e8:	andeq	r0, r0, r0
   107ec:	push	{r4, lr}
   107f0:	ldr	r4, [pc, #24]	; 10810 <_start@@Base+0xe8>
   107f4:	ldrb	r3, [r4]
   107f8:	cmp	r3, #0
   107fc:	popne	{r4, pc}
   10800:	bl	10788 <_start@@Base+0x60>
   10804:	mov	r3, #1
   10808:	strb	r3, [r4]
   1080c:	pop	{r4, pc}
   10810:	andeq	r1, r2, r0, lsr r0
   10814:	b	107b4 <_start@@Base+0x8c>

00010818 <nova_tarefa@@Base>:
   10818:	push	{fp, lr}
   1081c:	mov	fp, sp
   10820:	sub	sp, sp, #16
   10824:	ldr	r1, [pc, #92]	; 10888 <nova_tarefa@@Base+0x70>
   10828:	add	r1, pc, r1
   1082c:	str	r0, [sp, #8]
   10830:	ldr	r0, [sp, #8]
   10834:	ldr	r2, [sp, #8]
   10838:	add	r2, r2, #30
   1083c:	ldr	r3, [sp, #8]
   10840:	add	r3, r3, #60	; 0x3c
   10844:	ldr	ip, [sp, #8]
   10848:	add	ip, ip, #64	; 0x40
   1084c:	str	r0, [sp, #4]
   10850:	mov	r0, r1
   10854:	ldr	r1, [sp, #4]
   10858:	str	ip, [sp]
   1085c:	bl	10710 <__isoc99_scanf@plt>
   10860:	cmp	r0, #4
   10864:	bne	10874 <nova_tarefa@@Base+0x5c>
   10868:	movw	r0, #1
   1086c:	str	r0, [fp, #-4]
   10870:	b	1087c <nova_tarefa@@Base+0x64>
   10874:	movw	r0, #0
   10878:	str	r0, [fp, #-4]
   1087c:	ldr	r0, [fp, #-4]
   10880:	mov	sp, fp
   10884:	pop	{fp, pc}
   10888:	muleq	r0, r4, r3

0001088c <ler_tarefas@@Base>:
   1088c:	push	{fp, lr}
   10890:	mov	fp, sp
   10894:	sub	sp, sp, #16
   10898:	str	r0, [fp, #-4]
   1089c:	movw	r0, #0
   108a0:	str	r0, [sp, #8]
   108a4:	ldr	r0, [fp, #-4]
   108a8:	ldr	r1, [sp, #8]
   108ac:	movw	r2, #68	; 0x44
   108b0:	mul	r1, r1, r2
   108b4:	add	r0, r0, r1
   108b8:	bl	10818 <nova_tarefa@@Base>
   108bc:	cmp	r0, #0
   108c0:	movw	r0, #0
   108c4:	str	r0, [sp, #4]
   108c8:	beq	108e0 <ler_tarefas@@Base+0x54>
   108cc:	ldr	r0, [sp, #8]
   108d0:	cmp	r0, #100	; 0x64
   108d4:	movw	r0, #0
   108d8:	movlt	r0, #1
   108dc:	str	r0, [sp, #4]
   108e0:	ldr	r0, [sp, #4]
   108e4:	tst	r0, #1
   108e8:	beq	108fc <ler_tarefas@@Base+0x70>
   108ec:	ldr	r0, [sp, #8]
   108f0:	add	r0, r0, #1
   108f4:	str	r0, [sp, #8]
   108f8:	b	108a4 <ler_tarefas@@Base+0x18>
   108fc:	ldr	r0, [sp, #8]
   10900:	mov	sp, fp
   10904:	pop	{fp, pc}

00010908 <lista_tarefas@@Base>:
   10908:	push	{r4, sl, fp, lr}
   1090c:	add	fp, sp, #8
   10910:	sub	sp, sp, #24
   10914:	str	r0, [fp, #-12]
   10918:	str	r1, [sp, #16]
   1091c:	movw	r0, #0
   10920:	str	r0, [sp, #12]
   10924:	ldr	r0, [sp, #12]
   10928:	ldr	r1, [sp, #16]
   1092c:	cmp	r0, r1
   10930:	bge	109b0 <lista_tarefas@@Base+0xa8>
   10934:	ldr	r0, [pc, #124]	; 109b8 <lista_tarefas@@Base+0xb0>
   10938:	add	r0, pc, r0
   1093c:	ldr	r1, [fp, #-12]
   10940:	ldr	r2, [sp, #12]
   10944:	movw	r3, #68	; 0x44
   10948:	mul	r2, r2, r3
   1094c:	add	r1, r1, r2
   10950:	ldr	r2, [fp, #-12]
   10954:	ldr	ip, [sp, #12]
   10958:	mul	ip, ip, r3
   1095c:	add	r2, r2, ip
   10960:	add	r2, r2, #30
   10964:	ldr	ip, [fp, #-12]
   10968:	ldr	lr, [sp, #12]
   1096c:	mul	lr, lr, r3
   10970:	add	ip, ip, lr
   10974:	ldr	ip, [ip, #60]	; 0x3c
   10978:	ldr	lr, [fp, #-12]
   1097c:	ldr	r4, [sp, #12]
   10980:	mul	r3, r4, r3
   10984:	add	r3, lr, r3
   10988:	ldr	r3, [r3, #64]	; 0x40
   1098c:	str	r3, [sp, #8]
   10990:	mov	r3, ip
   10994:	ldr	ip, [sp, #8]
   10998:	str	ip, [sp]
   1099c:	bl	106e0 <printf@plt>
   109a0:	ldr	r0, [sp, #12]
   109a4:	add	r0, r0, #1
   109a8:	str	r0, [sp, #12]
   109ac:	b	10924 <lista_tarefas@@Base+0x1c>
   109b0:	sub	sp, fp, #8
   109b4:	pop	{r4, sl, fp, pc}
   109b8:	muleq	r0, r0, r2

000109bc <analisa_tarefas@@Base>:
   109bc:	push	{fp, lr}
   109c0:	mov	fp, sp
   109c4:	sub	sp, sp, #24
   109c8:	str	r0, [fp, #-4]
   109cc:	str	r1, [fp, #-8]
   109d0:	str	r2, [sp, #12]
   109d4:	movw	r0, #0
   109d8:	str	r0, [sp, #4]
   109dc:	str	r0, [sp]
   109e0:	str	r0, [sp, #8]
   109e4:	ldr	r0, [sp, #8]
   109e8:	ldr	r1, [fp, #-8]
   109ec:	cmp	r0, r1
   109f0:	bge	10a80 <analisa_tarefas@@Base+0xc4>
   109f4:	ldr	r0, [fp, #-4]
   109f8:	ldr	r1, [sp, #8]
   109fc:	movw	r2, #68	; 0x44
   10a00:	mul	r1, r1, r2
   10a04:	add	r0, r0, r1
   10a08:	ldr	r0, [r0, #60]	; 0x3c
   10a0c:	ldr	r1, [sp, #4]
   10a10:	add	r0, r1, r0
   10a14:	str	r0, [sp, #4]
   10a18:	ldr	r0, [fp, #-4]
   10a1c:	ldr	r1, [sp, #8]
   10a20:	mul	r1, r1, r2
   10a24:	add	r0, r0, r1
   10a28:	ldr	r0, [r0, #60]	; 0x3c
   10a2c:	ldr	r1, [sp]
   10a30:	cmp	r0, r1
   10a34:	ble	10a6c <analisa_tarefas@@Base+0xb0>
   10a38:	ldr	r0, [fp, #-4]
   10a3c:	ldr	r1, [sp, #8]
   10a40:	movw	r2, #68	; 0x44
   10a44:	mul	r1, r1, r2
   10a48:	add	r0, r0, r1
   10a4c:	ldr	r0, [r0, #60]	; 0x3c
   10a50:	str	r0, [sp]
   10a54:	ldr	r0, [sp, #12]
   10a58:	ldr	r1, [fp, #-4]
   10a5c:	ldr	r3, [sp, #8]
   10a60:	mul	r3, r3, r2
   10a64:	add	r1, r1, r3
   10a68:	bl	106ec <memcpy@plt>
   10a6c:	b	10a70 <analisa_tarefas@@Base+0xb4>
   10a70:	ldr	r0, [sp, #8]
   10a74:	add	r0, r0, #1
   10a78:	str	r0, [sp, #8]
   10a7c:	b	109e4 <analisa_tarefas@@Base+0x28>
   10a80:	ldr	r0, [sp, #4]
   10a84:	vmov	s0, r0
   10a88:	vcvt.f32.s32	s0, s0
   10a8c:	ldr	r0, [sp, #8]
   10a90:	vmov	s2, r0
   10a94:	vcvt.f32.s32	s2, s2
   10a98:	vdiv.f32	s0, s0, s2
   10a9c:	mov	sp, fp
   10aa0:	pop	{fp, pc}

00010aa4 <main@@Base>:
   10aa4:	push	{r4, r5, fp, lr}
   10aa8:	add	fp, sp, #8
   10aac:	sub	sp, sp, #744	; 0x2e8
   10ab0:	sub	sp, sp, #6144	; 0x1800
   10ab4:	add	r0, sp, #84	; 0x54
   10ab8:	bl	1088c <ler_tarefas@@Base>
   10abc:	add	r1, sp, #84	; 0x54
   10ac0:	str	r0, [fp, #-12]
   10ac4:	ldr	r0, [fp, #-12]
   10ac8:	str	r0, [sp, #12]
   10acc:	mov	r0, r1
   10ad0:	ldr	r1, [sp, #12]
   10ad4:	bl	10908 <lista_tarefas@@Base>
   10ad8:	ldr	r0, [pc, #112]	; 10b50 <main@@Base+0xac>
   10adc:	add	r0, pc, r0
   10ae0:	ldr	r1, [fp, #-12]
   10ae4:	bl	106e0 <printf@plt>
   10ae8:	add	r1, sp, #84	; 0x54
   10aec:	ldr	r2, [fp, #-12]
   10af0:	str	r0, [sp, #8]
   10af4:	mov	r0, r1
   10af8:	mov	r1, r2
   10afc:	add	r2, sp, #16
   10b00:	bl	109bc <analisa_tarefas@@Base>
   10b04:	ldr	r0, [pc, #64]	; 10b4c <main@@Base+0xa8>
   10b08:	add	r0, pc, r0
   10b0c:	vcvt.f64.f32	d16, s0
   10b10:	vmov	r2, r3, d16
   10b14:	bl	106e0 <printf@plt>
   10b18:	ldr	r1, [pc, #40]	; 10b48 <main@@Base+0xa4>
   10b1c:	add	r1, pc, r1
   10b20:	add	r2, sp, #16
   10b24:	str	r0, [sp, #4]
   10b28:	mov	r0, r1
   10b2c:	mov	r1, r2
   10b30:	bl	106e0 <printf@plt>
   10b34:	movw	r1, #0
   10b38:	str	r0, [sp]
   10b3c:	mov	r0, r1
   10b40:	sub	sp, fp, #8
   10b44:	pop	{r4, r5, fp, pc}
   10b48:	strdeq	r0, [r0], -r9
   10b4c:	andeq	r0, r0, fp, ror #1
   10b50:	strdeq	r0, [r0], -r9

00010b54 <__libc_csu_init@@Base>:
   10b54:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b58:	mov	r7, r0
   10b5c:	ldr	r6, [pc, #72]	; 10bac <__libc_csu_init@@Base+0x58>
   10b60:	ldr	r5, [pc, #72]	; 10bb0 <__libc_csu_init@@Base+0x5c>
   10b64:	add	r6, pc, r6
   10b68:	add	r5, pc, r5
   10b6c:	sub	r6, r6, r5
   10b70:	mov	r8, r1
   10b74:	mov	r9, r2
   10b78:	bl	106c0 <printf@plt-0x20>
   10b7c:	asrs	r6, r6, #2
   10b80:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b84:	mov	r4, #0
   10b88:	add	r4, r4, #1
   10b8c:	ldr	r3, [r5], #4
   10b90:	mov	r2, r9
   10b94:	mov	r1, r8
   10b98:	mov	r0, r7
   10b9c:	blx	r3
   10ba0:	cmp	r6, r4
   10ba4:	bne	10b88 <__libc_csu_init@@Base+0x34>
   10ba8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bac:	andeq	r0, r1, r0, lsr #7
   10bb0:	muleq	r1, r8, r3

00010bb4 <__libc_csu_fini@@Base>:
   10bb4:	bx	lr

Disassembly of section .fini:

00010bb8 <.fini>:
   10bb8:	push	{r3, lr}
   10bbc:	pop	{r3, pc}
