
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010c54 <.init>:
   10c54:	push	{r3, lr}
   10c58:	bl	10d7c <_start@@Base+0x3c>
   10c5c:	pop	{r3, pc}

Disassembly of section .plt:

00010c60 <calloc@plt-0x14>:
   10c60:	push	{lr}		; (str lr, [sp, #-4]!)
   10c64:	ldr	lr, [pc, #4]	; 10c70 <calloc@plt-0x4>
   10c68:	add	lr, pc, lr
   10c6c:	ldr	pc, [lr, #8]!
   10c70:	muleq	r1, r0, r3

00010c74 <calloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #73728	; 0x12000
   10c7c:	ldr	pc, [ip, #912]!	; 0x390

00010c80 <strcmp@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #73728	; 0x12000
   10c88:	ldr	pc, [ip, #904]!	; 0x388

00010c8c <printf@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #73728	; 0x12000
   10c94:	ldr	pc, [ip, #896]!	; 0x380

00010c98 <fopen@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #73728	; 0x12000
   10ca0:	ldr	pc, [ip, #888]!	; 0x378

00010ca4 <free@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #880]!	; 0x370

00010cb0 <fgets@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #872]!	; 0x368

00010cbc <realloc@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #864]!	; 0x360

00010cc8 <strcpy@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #856]!	; 0x358

00010cd4 <malloc@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #848]!	; 0x350

00010ce0 <__libc_start_main@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #840]!	; 0x348

00010cec <__gmon_start__@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #832]!	; 0x340

00010cf8 <feof@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #824]!	; 0x338

00010d04 <strlen@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #816]!	; 0x330

00010d10 <strchr@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #808]!	; 0x328

00010d1c <fclose@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #800]!	; 0x320

00010d28 <atoi@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #792]!	; 0x318

00010d34 <abort@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #784]!	; 0x310

Disassembly of section .text:

00010d40 <_start@@Base>:
   10d40:	mov	fp, #0
   10d44:	mov	lr, #0
   10d48:	pop	{r1}		; (ldr r1, [sp], #4)
   10d4c:	mov	r2, sp
   10d50:	push	{r2}		; (str r2, [sp, #-4]!)
   10d54:	push	{r0}		; (str r0, [sp, #-4]!)
   10d58:	ldr	ip, [pc, #16]	; 10d70 <_start@@Base+0x30>
   10d5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10d60:	ldr	r0, [pc, #12]	; 10d74 <_start@@Base+0x34>
   10d64:	ldr	r3, [pc, #12]	; 10d78 <_start@@Base+0x38>
   10d68:	bl	10ce0 <__libc_start_main@plt>
   10d6c:	bl	10d34 <abort@plt>
   10d70:	ldrdeq	r2, [r1], -r0
   10d74:			; <UNDEFINED> instruction: 0x000112b8
   10d78:	andeq	r2, r1, r0, ror r4
   10d7c:	ldr	r3, [pc, #20]	; 10d98 <_start@@Base+0x58>
   10d80:	ldr	r2, [pc, #20]	; 10d9c <_start@@Base+0x5c>
   10d84:	add	r3, pc, r3
   10d88:	ldr	r2, [r3, r2]
   10d8c:	cmp	r2, #0
   10d90:	bxeq	lr
   10d94:	b	10cec <__gmon_start__@plt>
   10d98:	andeq	r2, r1, r4, ror r2
   10d9c:	andeq	r0, r0, r8, asr r0
   10da0:	ldr	r0, [pc, #24]	; 10dc0 <_start@@Base+0x80>
   10da4:	ldr	r3, [pc, #24]	; 10dc4 <_start@@Base+0x84>
   10da8:	cmp	r3, r0
   10dac:	bxeq	lr
   10db0:	ldr	r3, [pc, #16]	; 10dc8 <_start@@Base+0x88>
   10db4:	cmp	r3, #0
   10db8:	bxeq	lr
   10dbc:	bx	r3
   10dc0:	andeq	r3, r2, r4, rrx
   10dc4:	andeq	r3, r2, r4, rrx
   10dc8:	andeq	r0, r0, r0
   10dcc:	ldr	r0, [pc, #36]	; 10df8 <_start@@Base+0xb8>
   10dd0:	ldr	r1, [pc, #36]	; 10dfc <_start@@Base+0xbc>
   10dd4:	sub	r1, r1, r0
   10dd8:	asr	r1, r1, #2
   10ddc:	add	r1, r1, r1, lsr #31
   10de0:	asrs	r1, r1, #1
   10de4:	bxeq	lr
   10de8:	ldr	r3, [pc, #16]	; 10e00 <_start@@Base+0xc0>
   10dec:	cmp	r3, #0
   10df0:	bxeq	lr
   10df4:	bx	r3
   10df8:	andeq	r3, r2, r4, rrx
   10dfc:	andeq	r3, r2, r4, rrx
   10e00:	andeq	r0, r0, r0
   10e04:	push	{r4, lr}
   10e08:	ldr	r4, [pc, #24]	; 10e28 <_start@@Base+0xe8>
   10e0c:	ldrb	r3, [r4]
   10e10:	cmp	r3, #0
   10e14:	popne	{r4, pc}
   10e18:	bl	10da0 <_start@@Base+0x60>
   10e1c:	mov	r3, #1
   10e20:	strb	r3, [r4]
   10e24:	pop	{r4, pc}
   10e28:	andeq	r3, r2, r4, rrx
   10e2c:	b	10dcc <_start@@Base+0x8c>

00010e30 <retira_duplicados@@Base>:
   10e30:	push	{fp, lr}
   10e34:	mov	fp, sp
   10e38:	sub	sp, sp, #32
   10e3c:	str	r0, [fp, #-4]
   10e40:	movw	r0, #0
   10e44:	str	r0, [fp, #-8]
   10e48:	ldr	r0, [fp, #-8]
   10e4c:	ldr	r1, [fp, #-4]
   10e50:	str	r0, [sp, #16]
   10e54:	mov	r0, r1
   10e58:	bl	116f0 <vetor_tamanho@@Base>
   10e5c:	sub	r0, r0, #1
   10e60:	ldr	r1, [sp, #16]
   10e64:	cmp	r1, r0
   10e68:	bge	10f20 <retira_duplicados@@Base+0xf0>
   10e6c:	ldr	r0, [fp, #-8]
   10e70:	add	r0, r0, #1
   10e74:	str	r0, [fp, #-12]
   10e78:	ldr	r0, [fp, #-12]
   10e7c:	ldr	r1, [fp, #-4]
   10e80:	str	r0, [sp, #12]
   10e84:	mov	r0, r1
   10e88:	bl	116f0 <vetor_tamanho@@Base>
   10e8c:	ldr	r1, [sp, #12]
   10e90:	cmp	r1, r0
   10e94:	bge	10f0c <retira_duplicados@@Base+0xdc>
   10e98:	ldr	r0, [fp, #-4]
   10e9c:	ldr	r1, [fp, #-8]
   10ea0:	bl	1172c <vetor_elemento@@Base>
   10ea4:	ldr	r1, [fp, #-4]
   10ea8:	ldr	lr, [fp, #-12]
   10eac:	str	r0, [sp, #8]
   10eb0:	mov	r0, r1
   10eb4:	mov	r1, lr
   10eb8:	bl	1172c <vetor_elemento@@Base>
   10ebc:	ldr	r1, [sp, #8]
   10ec0:	str	r0, [sp, #4]
   10ec4:	mov	r0, r1
   10ec8:	ldr	r1, [sp, #4]
   10ecc:	bl	10c80 <strcmp@plt>
   10ed0:	cmp	r0, #0
   10ed4:	bne	10ef8 <retira_duplicados@@Base+0xc8>
   10ed8:	ldr	r0, [fp, #-4]
   10edc:	ldr	r1, [fp, #-12]
   10ee0:	bl	11958 <vetor_remove@@Base>
   10ee4:	ldr	r1, [fp, #-12]
   10ee8:	mvn	lr, #0
   10eec:	add	r1, r1, lr
   10ef0:	str	r1, [fp, #-12]
   10ef4:	str	r0, [sp]
   10ef8:	b	10efc <retira_duplicados@@Base+0xcc>
   10efc:	ldr	r0, [fp, #-12]
   10f00:	add	r0, r0, #1
   10f04:	str	r0, [fp, #-12]
   10f08:	b	10e78 <retira_duplicados@@Base+0x48>
   10f0c:	b	10f10 <retira_duplicados@@Base+0xe0>
   10f10:	ldr	r0, [fp, #-8]
   10f14:	add	r0, r0, #1
   10f18:	str	r0, [fp, #-8]
   10f1c:	b	10e48 <retira_duplicados@@Base+0x18>
   10f20:	mov	sp, fp
   10f24:	pop	{fp, pc}

00010f28 <interseta@@Base>:
   10f28:	push	{fp, lr}
   10f2c:	mov	fp, sp
   10f30:	sub	sp, sp, #40	; 0x28
   10f34:	ldr	r2, [pc, #272]	; 1104c <interseta@@Base+0x124>
   10f38:	ldr	r2, [pc, r2]
   10f3c:	str	r0, [fp, #-4]
   10f40:	str	r1, [fp, #-8]
   10f44:	blx	r2
   10f48:	str	r0, [fp, #-12]
   10f4c:	ldr	r0, [fp, #-4]
   10f50:	ldr	r0, [r0]
   10f54:	str	r0, [fp, #-16]
   10f58:	movw	r0, #0
   10f5c:	str	r0, [sp, #16]
   10f60:	str	r0, [sp, #20]
   10f64:	ldr	r0, [sp, #20]
   10f68:	ldr	r1, [fp, #-4]
   10f6c:	ldr	r1, [r1, #8]
   10f70:	cmp	r0, r1
   10f74:	movw	r0, #1
   10f78:	str	r0, [sp, #12]
   10f7c:	blt	10f98 <interseta@@Base+0x70>
   10f80:	ldr	r0, [fp, #-16]
   10f84:	movw	r1, #0
   10f88:	cmp	r0, r1
   10f8c:	movw	r0, #0
   10f90:	movne	r0, #1
   10f94:	str	r0, [sp, #12]
   10f98:	ldr	r0, [sp, #12]
   10f9c:	tst	r0, #1
   10fa0:	beq	11040 <interseta@@Base+0x118>
   10fa4:	ldr	r0, [fp, #-8]
   10fa8:	ldr	r1, [fp, #-16]
   10fac:	ldr	r1, [r1]
   10fb0:	movw	r2, #0
   10fb4:	bl	120e4 <lista_pesquisa@@Base>
   10fb8:	movw	r1, #0
   10fbc:	cmp	r0, r1
   10fc0:	beq	11024 <interseta@@Base+0xfc>
   10fc4:	ldr	r0, [fp, #-16]
   10fc8:	ldr	r0, [r0]
   10fcc:	ldr	r1, [fp, #-8]
   10fd0:	ldr	r2, [fp, #-16]
   10fd4:	ldr	r2, [r2]
   10fd8:	str	r0, [sp, #8]
   10fdc:	mov	r0, r1
   10fe0:	mov	r1, r2
   10fe4:	movw	r2, #0
   10fe8:	bl	120e4 <lista_pesquisa@@Base>
   10fec:	ldr	r1, [r0]
   10ff0:	ldr	r0, [sp, #8]
   10ff4:	bl	10c80 <strcmp@plt>
   10ff8:	cmp	r0, #0
   10ffc:	bne	11024 <interseta@@Base+0xfc>
   11000:	ldr	r0, [fp, #-12]
   11004:	ldr	r1, [fp, #-16]
   11008:	ldr	r1, [r1]
   1100c:	ldr	r2, [sp, #16]
   11010:	bl	11798 <vetor_insere@@Base>
   11014:	ldr	r1, [sp, #16]
   11018:	add	r1, r1, #1
   1101c:	str	r1, [sp, #16]
   11020:	str	r0, [sp, #4]
   11024:	ldr	r0, [fp, #-16]
   11028:	ldr	r0, [r0, #4]
   1102c:	str	r0, [fp, #-16]
   11030:	ldr	r0, [sp, #20]
   11034:	add	r0, r0, #1
   11038:	str	r0, [sp, #20]
   1103c:	b	10f64 <interseta@@Base+0x3c>
   11040:	ldr	r0, [fp, #-12]
   11044:	mov	sp, fp
   11048:	pop	{fp, pc}
   1104c:	andeq	r2, r1, r4, lsl r1

00011050 <anteriores@@Base>:
   11050:	push	{fp, lr}
   11054:	mov	fp, sp
   11058:	sub	sp, sp, #24
   1105c:	ldr	r2, [pc, #164]	; 11108 <anteriores@@Base+0xb8>
   11060:	ldr	r2, [pc, r2]
   11064:	str	r0, [fp, #-4]
   11068:	str	r1, [fp, #-8]
   1106c:	blx	r2
   11070:	str	r0, [sp, #12]
   11074:	ldr	r0, [fp, #-4]
   11078:	ldr	r0, [r0]
   1107c:	str	r0, [sp, #8]
   11080:	ldr	r0, [sp, #8]
   11084:	movw	r1, #0
   11088:	cmp	r0, r1
   1108c:	beq	110fc <anteriores@@Base+0xac>
   11090:	ldr	r0, [sp, #8]
   11094:	ldr	r0, [r0]
   11098:	ldr	r1, [sp, #8]
   1109c:	ldr	r1, [r1]
   110a0:	str	r0, [sp, #4]
   110a4:	mov	r0, r1
   110a8:	bl	10d04 <strlen@plt>
   110ac:	ldr	r1, [sp, #4]
   110b0:	add	r0, r1, r0
   110b4:	mvn	r1, #4
   110b8:	add	r0, r0, r1
   110bc:	bl	10d28 <atoi@plt>
   110c0:	ldr	r1, [fp, #-8]
   110c4:	cmp	r0, r1
   110c8:	bge	110e8 <anteriores@@Base+0x98>
   110cc:	ldr	r0, [sp, #12]
   110d0:	ldr	r1, [sp, #8]
   110d4:	ldr	r1, [r1]
   110d8:	ldr	r2, [sp, #12]
   110dc:	ldr	r2, [r2]
   110e0:	bl	11798 <vetor_insere@@Base>
   110e4:	str	r0, [sp]
   110e8:	b	110ec <anteriores@@Base+0x9c>
   110ec:	ldr	r0, [sp, #8]
   110f0:	ldr	r0, [r0, #4]
   110f4:	str	r0, [sp, #8]
   110f8:	b	11080 <anteriores@@Base+0x30>
   110fc:	ldr	r0, [sp, #12]
   11100:	mov	sp, fp
   11104:	pop	{fp, pc}
   11108:	andeq	r1, r1, ip, ror #31

0001110c <lerAtores@@Base>:
   1110c:	push	{r4, r5, fp, lr}
   11110:	add	fp, sp, #8
   11114:	sub	sp, sp, #280	; 0x118
   11118:	str	r0, [fp, #-16]
   1111c:	ldr	r0, [fp, #-16]
   11120:	movw	r1, #0
   11124:	cmp	r0, r1
   11128:	bne	11138 <lerAtores@@Base+0x2c>
   1112c:	movw	r0, #0
   11130:	str	r0, [fp, #-12]
   11134:	b	111d4 <lerAtores@@Base+0xc8>
   11138:	ldr	r0, [pc, #160]	; 111e0 <lerAtores@@Base+0xd4>
   1113c:	ldr	r0, [pc, r0]
   11140:	blx	r0
   11144:	str	r0, [sp, #8]
   11148:	ldr	r0, [fp, #-16]
   1114c:	bl	10cf8 <feof@plt>
   11150:	cmp	r0, #0
   11154:	movw	r0, #0
   11158:	movne	r0, #1
   1115c:	mvn	lr, #0
   11160:	eor	r0, r0, lr
   11164:	tst	r0, #1
   11168:	beq	111cc <lerAtores@@Base+0xc0>
   1116c:	add	r0, sp, #16
   11170:	ldr	r2, [fp, #-16]
   11174:	movw	r1, #255	; 0xff
   11178:	bl	10cb0 <fgets@plt>
   1117c:	add	r1, sp, #16
   11180:	str	r0, [sp, #4]
   11184:	mov	r0, r1
   11188:	movw	r1, #10
   1118c:	bl	10d10 <strchr@plt>
   11190:	str	r0, [sp, #12]
   11194:	ldr	r0, [sp, #12]
   11198:	movw	r1, #0
   1119c:	cmp	r0, r1
   111a0:	beq	111b0 <lerAtores@@Base+0xa4>
   111a4:	ldr	r0, [sp, #12]
   111a8:	movw	r1, #0
   111ac:	strb	r1, [r0]
   111b0:	add	r1, sp, #16
   111b4:	ldr	r0, [sp, #8]
   111b8:	ldr	r2, [sp, #8]
   111bc:	ldr	r2, [r2]
   111c0:	bl	11798 <vetor_insere@@Base>
   111c4:	str	r0, [sp]
   111c8:	b	11148 <lerAtores@@Base+0x3c>
   111cc:	ldr	r0, [sp, #8]
   111d0:	str	r0, [fp, #-12]
   111d4:	ldr	r0, [fp, #-12]
   111d8:	sub	sp, fp, #8
   111dc:	pop	{r4, r5, fp, pc}
   111e0:	andeq	r1, r1, r0, lsl pc

000111e4 <lerFilmes@@Base>:
   111e4:	push	{r4, r5, fp, lr}
   111e8:	add	fp, sp, #8
   111ec:	sub	sp, sp, #280	; 0x118
   111f0:	str	r0, [fp, #-16]
   111f4:	ldr	r0, [fp, #-16]
   111f8:	movw	r1, #0
   111fc:	cmp	r0, r1
   11200:	bne	11210 <lerFilmes@@Base+0x2c>
   11204:	movw	r0, #0
   11208:	str	r0, [fp, #-12]
   1120c:	b	112a8 <lerFilmes@@Base+0xc4>
   11210:	ldr	r0, [pc, #156]	; 112b4 <lerFilmes@@Base+0xd0>
   11214:	ldr	r0, [pc, r0]
   11218:	blx	r0
   1121c:	str	r0, [sp, #8]
   11220:	ldr	r0, [fp, #-16]
   11224:	bl	10cf8 <feof@plt>
   11228:	cmp	r0, #0
   1122c:	movw	r0, #0
   11230:	movne	r0, #1
   11234:	mvn	lr, #0
   11238:	eor	r0, r0, lr
   1123c:	tst	r0, #1
   11240:	beq	112a0 <lerFilmes@@Base+0xbc>
   11244:	add	r0, sp, #16
   11248:	ldr	r2, [fp, #-16]
   1124c:	movw	r1, #255	; 0xff
   11250:	bl	10cb0 <fgets@plt>
   11254:	add	r1, sp, #16
   11258:	str	r0, [sp, #4]
   1125c:	mov	r0, r1
   11260:	movw	r1, #10
   11264:	bl	10d10 <strchr@plt>
   11268:	str	r0, [sp, #12]
   1126c:	ldr	r0, [sp, #12]
   11270:	movw	r1, #0
   11274:	cmp	r0, r1
   11278:	beq	11288 <lerFilmes@@Base+0xa4>
   1127c:	ldr	r0, [sp, #12]
   11280:	movw	r1, #0
   11284:	strb	r1, [r0]
   11288:	add	r1, sp, #16
   1128c:	ldr	r0, [sp, #8]
   11290:	movw	r2, #0
   11294:	bl	11e58 <lista_insere@@Base>
   11298:	str	r0, [sp]
   1129c:	b	11220 <lerFilmes@@Base+0x3c>
   112a0:	ldr	r0, [sp, #8]
   112a4:	str	r0, [fp, #-12]
   112a8:	ldr	r0, [fp, #-12]
   112ac:	sub	sp, fp, #8
   112b0:	pop	{r4, r5, fp, pc}
   112b4:	andeq	r1, r1, r4, lsr lr

000112b8 <main@@Base>:
   112b8:	push	{fp, lr}
   112bc:	mov	fp, sp
   112c0:	sub	sp, sp, #88	; 0x58
   112c4:	ldr	r0, [pc, #516]	; 114d0 <main@@Base+0x218>
   112c8:	add	r0, pc, r0
   112cc:	ldr	r1, [pc, #512]	; 114d4 <main@@Base+0x21c>
   112d0:	add	r1, pc, r1
   112d4:	movw	r2, #0
   112d8:	str	r2, [fp, #-4]
   112dc:	bl	10c98 <fopen@plt>
   112e0:	ldr	r1, [pc, #480]	; 114c8 <main@@Base+0x210>
   112e4:	add	r1, pc, r1
   112e8:	ldr	r2, [pc, #476]	; 114cc <main@@Base+0x214>
   112ec:	add	r2, pc, r2
   112f0:	str	r0, [fp, #-8]
   112f4:	mov	r0, r1
   112f8:	mov	r1, r2
   112fc:	bl	10c98 <fopen@plt>
   11300:	ldr	r1, [pc, #440]	; 114c0 <main@@Base+0x208>
   11304:	add	r1, pc, r1
   11308:	ldr	r2, [pc, #436]	; 114c4 <main@@Base+0x20c>
   1130c:	add	r2, pc, r2
   11310:	str	r0, [fp, #-12]
   11314:	mov	r0, r1
   11318:	mov	r1, r2
   1131c:	bl	10c98 <fopen@plt>
   11320:	str	r0, [fp, #-16]
   11324:	ldr	r0, [fp, #-8]
   11328:	bl	1110c <lerAtores@@Base>
   1132c:	str	r0, [fp, #-20]	; 0xffffffec
   11330:	ldr	r0, [fp, #-12]
   11334:	bl	111e4 <lerFilmes@@Base>
   11338:	str	r0, [fp, #-32]	; 0xffffffe0
   1133c:	ldr	r0, [fp, #-16]
   11340:	bl	111e4 <lerFilmes@@Base>
   11344:	str	r0, [fp, #-36]	; 0xffffffdc
   11348:	ldr	r0, [fp, #-20]	; 0xffffffec
   1134c:	bl	116f0 <vetor_tamanho@@Base>
   11350:	ldr	r1, [pc, #356]	; 114bc <main@@Base+0x204>
   11354:	add	r1, pc, r1
   11358:	str	r0, [fp, #-40]	; 0xffffffd8
   1135c:	mov	r0, r1
   11360:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11364:	bl	10c8c <printf@plt>
   11368:	ldr	r1, [fp, #-20]	; 0xffffffec
   1136c:	str	r0, [sp, #44]	; 0x2c
   11370:	mov	r0, r1
   11374:	bl	10e30 <retira_duplicados@@Base>
   11378:	ldr	r0, [fp, #-20]	; 0xffffffec
   1137c:	bl	116f0 <vetor_tamanho@@Base>
   11380:	ldr	r1, [pc, #304]	; 114b8 <main@@Base+0x200>
   11384:	add	r1, pc, r1
   11388:	str	r0, [sp, #40]	; 0x28
   1138c:	mov	r0, r1
   11390:	ldr	r1, [sp, #40]	; 0x28
   11394:	bl	10c8c <printf@plt>
   11398:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1139c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   113a0:	str	r0, [sp, #36]	; 0x24
   113a4:	mov	r0, r1
   113a8:	mov	r1, r2
   113ac:	bl	10f28 <interseta@@Base>
   113b0:	str	r0, [fp, #-24]	; 0xffffffe8
   113b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113b8:	movw	r1, #0
   113bc:	cmp	r0, r1
   113c0:	beq	113ec <main@@Base+0x134>
   113c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113c8:	bl	116f0 <vetor_tamanho@@Base>
   113cc:	ldr	lr, [pc, #264]	; 114dc <main@@Base+0x224>
   113d0:	add	lr, pc, lr
   113d4:	str	r0, [sp, #32]
   113d8:	mov	r0, lr
   113dc:	ldr	r1, [sp, #32]
   113e0:	bl	10c8c <printf@plt>
   113e4:	str	r0, [sp, #28]
   113e8:	b	113fc <main@@Base+0x144>
   113ec:	ldr	r0, [pc, #228]	; 114d8 <main@@Base+0x220>
   113f0:	add	r0, pc, r0
   113f4:	bl	10c8c <printf@plt>
   113f8:	str	r0, [sp, #24]
   113fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11400:	movw	r1, #2000	; 0x7d0
   11404:	bl	11050 <anteriores@@Base>
   11408:	str	r0, [fp, #-28]	; 0xffffffe4
   1140c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11410:	movw	r1, #0
   11414:	cmp	r0, r1
   11418:	beq	11444 <main@@Base+0x18c>
   1141c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11420:	bl	116f0 <vetor_tamanho@@Base>
   11424:	ldr	lr, [pc, #184]	; 114e4 <main@@Base+0x22c>
   11428:	add	lr, pc, lr
   1142c:	str	r0, [sp, #20]
   11430:	mov	r0, lr
   11434:	ldr	r1, [sp, #20]
   11438:	bl	10c8c <printf@plt>
   1143c:	str	r0, [sp, #16]
   11440:	b	11454 <main@@Base+0x19c>
   11444:	ldr	r0, [pc, #148]	; 114e0 <main@@Base+0x228>
   11448:	add	r0, pc, r0
   1144c:	bl	10c8c <printf@plt>
   11450:	str	r0, [sp, #12]
   11454:	ldr	r0, [fp, #-20]	; 0xffffffec
   11458:	bl	1154c <vetor_apaga@@Base>
   1145c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11460:	bl	1154c <vetor_apaga@@Base>
   11464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11468:	bl	1154c <vetor_apaga@@Base>
   1146c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11470:	bl	11d20 <lista_apaga@@Base>
   11474:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11478:	bl	11d20 <lista_apaga@@Base>
   1147c:	ldr	r0, [fp, #-8]
   11480:	bl	10d1c <fclose@plt>
   11484:	ldr	lr, [fp, #-12]
   11488:	str	r0, [sp, #8]
   1148c:	mov	r0, lr
   11490:	bl	10d1c <fclose@plt>
   11494:	ldr	lr, [fp, #-16]
   11498:	str	r0, [sp, #4]
   1149c:	mov	r0, lr
   114a0:	bl	10d1c <fclose@plt>
   114a4:	movw	lr, #0
   114a8:	str	r0, [sp]
   114ac:	mov	r0, lr
   114b0:	mov	sp, fp
   114b4:	pop	{fp, pc}
   114b8:	andeq	r1, r0, ip, lsl #3
   114bc:	andeq	r1, r0, r9, lsr #3
   114c0:	andeq	r1, r0, sp, ror #3
   114c4:	ldrdeq	r1, [r0], -r8
   114c8:	andeq	r1, r0, r2, lsl #4
   114cc:	strdeq	r1, [r0], -r8
   114d0:	andeq	r1, r0, r0, lsl r2
   114d4:	andeq	r1, r0, r4, lsl r2
   114d8:	andeq	r1, r0, fp, asr r1
   114dc:	andeq	r1, r0, ip, asr r1
   114e0:	andeq	r1, r0, ip, lsr r1
   114e4:	andeq	r1, r0, fp, lsr r1

000114e8 <vetor_novo@@Base>:
   114e8:	push	{fp, lr}
   114ec:	mov	fp, sp
   114f0:	sub	sp, sp, #8
   114f4:	movw	r0, #12
   114f8:	bl	10cd4 <malloc@plt>
   114fc:	str	r0, [sp]
   11500:	ldr	r0, [sp]
   11504:	movw	lr, #0
   11508:	cmp	r0, lr
   1150c:	bne	1151c <vetor_novo@@Base+0x34>
   11510:	movw	r0, #0
   11514:	str	r0, [sp, #4]
   11518:	b	11540 <vetor_novo@@Base+0x58>
   1151c:	ldr	r0, [sp]
   11520:	movw	r1, #0
   11524:	str	r1, [r0]
   11528:	ldr	r0, [sp]
   1152c:	str	r1, [r0, #4]
   11530:	ldr	r0, [sp]
   11534:	str	r1, [r0, #8]
   11538:	ldr	r0, [sp]
   1153c:	str	r0, [sp, #4]
   11540:	ldr	r0, [sp, #4]
   11544:	mov	sp, fp
   11548:	pop	{fp, pc}

0001154c <vetor_apaga@@Base>:
   1154c:	push	{fp, lr}
   11550:	mov	fp, sp
   11554:	sub	sp, sp, #8
   11558:	str	r0, [sp, #4]
   1155c:	ldr	r0, [sp, #4]
   11560:	movw	r1, #0
   11564:	cmp	r0, r1
   11568:	bne	11570 <vetor_apaga@@Base+0x24>
   1156c:	b	115c8 <vetor_apaga@@Base+0x7c>
   11570:	movw	r0, #0
   11574:	str	r0, [sp]
   11578:	ldr	r0, [sp]
   1157c:	ldr	r1, [sp, #4]
   11580:	ldr	r1, [r1]
   11584:	cmp	r0, r1
   11588:	bge	115b4 <vetor_apaga@@Base+0x68>
   1158c:	ldr	r0, [sp, #4]
   11590:	ldr	r0, [r0, #8]
   11594:	ldr	r1, [sp]
   11598:	add	r0, r0, r1, lsl #2
   1159c:	ldr	r0, [r0]
   115a0:	bl	10ca4 <free@plt>
   115a4:	ldr	r0, [sp]
   115a8:	add	r0, r0, #1
   115ac:	str	r0, [sp]
   115b0:	b	11578 <vetor_apaga@@Base+0x2c>
   115b4:	ldr	r0, [sp, #4]
   115b8:	ldr	r0, [r0, #8]
   115bc:	bl	10ca4 <free@plt>
   115c0:	ldr	r0, [sp, #4]
   115c4:	bl	10ca4 <free@plt>
   115c8:	mov	sp, fp
   115cc:	pop	{fp, pc}

000115d0 <vetor_atribui@@Base>:
   115d0:	push	{fp, lr}
   115d4:	mov	fp, sp
   115d8:	sub	sp, sp, #32
   115dc:	str	r0, [fp, #-8]
   115e0:	str	r1, [fp, #-12]
   115e4:	str	r2, [sp, #16]
   115e8:	ldr	r0, [fp, #-8]
   115ec:	movw	r1, #0
   115f0:	cmp	r0, r1
   115f4:	beq	11618 <vetor_atribui@@Base+0x48>
   115f8:	ldr	r0, [fp, #-12]
   115fc:	cmp	r0, #0
   11600:	blt	11618 <vetor_atribui@@Base+0x48>
   11604:	ldr	r0, [fp, #-12]
   11608:	ldr	r1, [fp, #-8]
   1160c:	ldr	r1, [r1]
   11610:	cmp	r0, r1
   11614:	blt	11624 <vetor_atribui@@Base+0x54>
   11618:	mvn	r0, #0
   1161c:	str	r0, [fp, #-4]
   11620:	b	116e4 <vetor_atribui@@Base+0x114>
   11624:	ldr	r0, [sp, #16]
   11628:	bl	10d04 <strlen@plt>
   1162c:	str	r0, [sp, #12]
   11630:	ldr	r0, [sp, #12]
   11634:	ldr	lr, [fp, #-8]
   11638:	ldr	lr, [lr, #8]
   1163c:	ldr	r1, [fp, #-12]
   11640:	add	r1, lr, r1, lsl #2
   11644:	ldr	r1, [r1]
   11648:	str	r0, [sp, #8]
   1164c:	mov	r0, r1
   11650:	bl	10d04 <strlen@plt>
   11654:	ldr	r1, [sp, #8]
   11658:	cmp	r1, r0
   1165c:	bls	116bc <vetor_atribui@@Base+0xec>
   11660:	ldr	r0, [fp, #-8]
   11664:	ldr	r0, [r0, #8]
   11668:	ldr	r1, [fp, #-12]
   1166c:	ldr	r0, [r0, r1, lsl #2]
   11670:	ldr	r1, [sp, #12]
   11674:	add	r1, r1, #1
   11678:	bl	10cbc <realloc@plt>
   1167c:	ldr	r1, [fp, #-8]
   11680:	ldr	r1, [r1, #8]
   11684:	ldr	lr, [fp, #-12]
   11688:	str	r0, [r1, lr, lsl #2]
   1168c:	ldr	r0, [fp, #-8]
   11690:	ldr	r0, [r0, #8]
   11694:	ldr	r1, [fp, #-12]
   11698:	add	r0, r0, r1, lsl #2
   1169c:	ldr	r0, [r0]
   116a0:	movw	r1, #0
   116a4:	cmp	r0, r1
   116a8:	bne	116b8 <vetor_atribui@@Base+0xe8>
   116ac:	mvn	r0, #0
   116b0:	str	r0, [fp, #-4]
   116b4:	b	116e4 <vetor_atribui@@Base+0x114>
   116b8:	b	116bc <vetor_atribui@@Base+0xec>
   116bc:	ldr	r0, [fp, #-8]
   116c0:	ldr	r0, [r0, #8]
   116c4:	ldr	r1, [fp, #-12]
   116c8:	add	r0, r0, r1, lsl #2
   116cc:	ldr	r0, [r0]
   116d0:	ldr	r1, [sp, #16]
   116d4:	bl	10cc8 <strcpy@plt>
   116d8:	ldr	r1, [fp, #-12]
   116dc:	str	r1, [fp, #-4]
   116e0:	str	r0, [sp, #4]
   116e4:	ldr	r0, [fp, #-4]
   116e8:	mov	sp, fp
   116ec:	pop	{fp, pc}

000116f0 <vetor_tamanho@@Base>:
   116f0:	sub	sp, sp, #8
   116f4:	str	r0, [sp]
   116f8:	ldr	r0, [sp]
   116fc:	movw	r1, #0
   11700:	cmp	r0, r1
   11704:	bne	11714 <vetor_tamanho@@Base+0x24>
   11708:	mvn	r0, #0
   1170c:	str	r0, [sp, #4]
   11710:	b	11720 <vetor_tamanho@@Base+0x30>
   11714:	ldr	r0, [sp]
   11718:	ldr	r0, [r0]
   1171c:	str	r0, [sp, #4]
   11720:	ldr	r0, [sp, #4]
   11724:	add	sp, sp, #8
   11728:	bx	lr

0001172c <vetor_elemento@@Base>:
   1172c:	sub	sp, sp, #12
   11730:	str	r0, [sp, #4]
   11734:	str	r1, [sp]
   11738:	ldr	r0, [sp, #4]
   1173c:	movw	r1, #0
   11740:	cmp	r0, r1
   11744:	beq	11768 <vetor_elemento@@Base+0x3c>
   11748:	ldr	r0, [sp]
   1174c:	cmp	r0, #0
   11750:	blt	11768 <vetor_elemento@@Base+0x3c>
   11754:	ldr	r0, [sp]
   11758:	ldr	r1, [sp, #4]
   1175c:	ldr	r1, [r1]
   11760:	cmp	r0, r1
   11764:	blt	11774 <vetor_elemento@@Base+0x48>
   11768:	movw	r0, #0
   1176c:	str	r0, [sp, #8]
   11770:	b	1178c <vetor_elemento@@Base+0x60>
   11774:	ldr	r0, [sp, #4]
   11778:	ldr	r0, [r0, #8]
   1177c:	ldr	r1, [sp]
   11780:	add	r0, r0, r1, lsl #2
   11784:	ldr	r0, [r0]
   11788:	str	r0, [sp, #8]
   1178c:	ldr	r0, [sp, #8]
   11790:	add	sp, sp, #12
   11794:	bx	lr

00011798 <vetor_insere@@Base>:
   11798:	push	{fp, lr}
   1179c:	mov	fp, sp
   117a0:	sub	sp, sp, #32
   117a4:	str	r0, [fp, #-8]
   117a8:	str	r1, [fp, #-12]
   117ac:	str	r2, [sp, #16]
   117b0:	ldr	r0, [fp, #-8]
   117b4:	movw	r1, #0
   117b8:	cmp	r0, r1
   117bc:	beq	117e0 <vetor_insere@@Base+0x48>
   117c0:	ldr	r0, [sp, #16]
   117c4:	cmp	r0, #0
   117c8:	blt	117e0 <vetor_insere@@Base+0x48>
   117cc:	ldr	r0, [sp, #16]
   117d0:	ldr	r1, [fp, #-8]
   117d4:	ldr	r1, [r1]
   117d8:	cmp	r0, r1
   117dc:	ble	117ec <vetor_insere@@Base+0x54>
   117e0:	mvn	r0, #0
   117e4:	str	r0, [fp, #-4]
   117e8:	b	1194c <vetor_insere@@Base+0x1b4>
   117ec:	ldr	r0, [fp, #-8]
   117f0:	ldr	r0, [r0]
   117f4:	ldr	r1, [fp, #-8]
   117f8:	ldr	r1, [r1, #4]
   117fc:	cmp	r0, r1
   11800:	bne	11874 <vetor_insere@@Base+0xdc>
   11804:	ldr	r0, [fp, #-8]
   11808:	ldr	r0, [r0, #4]
   1180c:	cmp	r0, #0
   11810:	bne	11824 <vetor_insere@@Base+0x8c>
   11814:	ldr	r0, [fp, #-8]
   11818:	movw	r1, #1
   1181c:	str	r1, [r0, #4]
   11820:	b	11834 <vetor_insere@@Base+0x9c>
   11824:	ldr	r0, [fp, #-8]
   11828:	ldr	r1, [r0, #4]
   1182c:	lsl	r1, r1, #1
   11830:	str	r1, [r0, #4]
   11834:	ldr	r0, [fp, #-8]
   11838:	ldr	r1, [r0, #4]
   1183c:	ldr	r0, [r0, #8]
   11840:	lsl	r1, r1, #2
   11844:	bl	10cbc <realloc@plt>
   11848:	ldr	r1, [fp, #-8]
   1184c:	str	r0, [r1, #8]
   11850:	ldr	r0, [fp, #-8]
   11854:	ldr	r0, [r0, #8]
   11858:	movw	r1, #0
   1185c:	cmp	r0, r1
   11860:	bne	11870 <vetor_insere@@Base+0xd8>
   11864:	mvn	r0, #0
   11868:	str	r0, [fp, #-4]
   1186c:	b	1194c <vetor_insere@@Base+0x1b4>
   11870:	b	11874 <vetor_insere@@Base+0xdc>
   11874:	ldr	r0, [fp, #-8]
   11878:	ldr	r0, [r0]
   1187c:	sub	r0, r0, #1
   11880:	str	r0, [sp, #12]
   11884:	ldr	r0, [sp, #12]
   11888:	ldr	r1, [sp, #16]
   1188c:	cmp	r0, r1
   11890:	blt	118c4 <vetor_insere@@Base+0x12c>
   11894:	ldr	r0, [fp, #-8]
   11898:	ldr	r0, [r0, #8]
   1189c:	ldr	r1, [sp, #12]
   118a0:	add	r0, r0, r1, lsl #2
   118a4:	add	r1, r0, #4
   118a8:	ldr	r0, [r0]
   118ac:	str	r0, [r1]
   118b0:	ldr	r0, [sp, #12]
   118b4:	mvn	r1, #0
   118b8:	add	r0, r0, r1
   118bc:	str	r0, [sp, #12]
   118c0:	b	11884 <vetor_insere@@Base+0xec>
   118c4:	ldr	r0, [fp, #-12]
   118c8:	bl	10d04 <strlen@plt>
   118cc:	add	r0, r0, #1
   118d0:	mov	r1, #1
   118d4:	bl	10c74 <calloc@plt>
   118d8:	ldr	r1, [fp, #-8]
   118dc:	ldr	r1, [r1, #8]
   118e0:	ldr	lr, [sp, #16]
   118e4:	str	r0, [r1, lr, lsl #2]
   118e8:	ldr	r0, [fp, #-8]
   118ec:	ldr	r0, [r0, #8]
   118f0:	ldr	r1, [sp, #16]
   118f4:	add	r0, r0, r1, lsl #2
   118f8:	ldr	r0, [r0]
   118fc:	movw	r1, #0
   11900:	cmp	r0, r1
   11904:	bne	11914 <vetor_insere@@Base+0x17c>
   11908:	mvn	r0, #0
   1190c:	str	r0, [fp, #-4]
   11910:	b	1194c <vetor_insere@@Base+0x1b4>
   11914:	ldr	r0, [fp, #-8]
   11918:	ldr	r0, [r0, #8]
   1191c:	ldr	r1, [sp, #16]
   11920:	add	r0, r0, r1, lsl #2
   11924:	ldr	r0, [r0]
   11928:	ldr	r1, [fp, #-12]
   1192c:	bl	10cc8 <strcpy@plt>
   11930:	ldr	r1, [fp, #-8]
   11934:	ldr	lr, [r1]
   11938:	add	lr, lr, #1
   1193c:	str	lr, [r1]
   11940:	ldr	r1, [sp, #16]
   11944:	str	r1, [fp, #-4]
   11948:	str	r0, [sp, #4]
   1194c:	ldr	r0, [fp, #-4]
   11950:	mov	sp, fp
   11954:	pop	{fp, pc}

00011958 <vetor_remove@@Base>:
   11958:	push	{fp, lr}
   1195c:	mov	fp, sp
   11960:	sub	sp, sp, #16
   11964:	str	r0, [sp, #8]
   11968:	str	r1, [sp, #4]
   1196c:	ldr	r0, [sp, #8]
   11970:	movw	r1, #0
   11974:	cmp	r0, r1
   11978:	beq	1199c <vetor_remove@@Base+0x44>
   1197c:	ldr	r0, [sp, #4]
   11980:	cmp	r0, #0
   11984:	blt	1199c <vetor_remove@@Base+0x44>
   11988:	ldr	r0, [sp, #4]
   1198c:	ldr	r1, [sp, #8]
   11990:	ldr	r1, [r1]
   11994:	cmp	r0, r1
   11998:	blt	119a8 <vetor_remove@@Base+0x50>
   1199c:	mvn	r0, #0
   119a0:	str	r0, [fp, #-4]
   119a4:	b	11a28 <vetor_remove@@Base+0xd0>
   119a8:	ldr	r0, [sp, #8]
   119ac:	ldr	r0, [r0, #8]
   119b0:	ldr	r1, [sp, #4]
   119b4:	add	r0, r0, r1, lsl #2
   119b8:	ldr	r0, [r0]
   119bc:	bl	10ca4 <free@plt>
   119c0:	ldr	r0, [sp, #4]
   119c4:	add	r0, r0, #1
   119c8:	str	r0, [sp]
   119cc:	ldr	r0, [sp]
   119d0:	ldr	r1, [sp, #8]
   119d4:	ldr	r1, [r1]
   119d8:	cmp	r0, r1
   119dc:	bge	11a0c <vetor_remove@@Base+0xb4>
   119e0:	ldr	r0, [sp, #8]
   119e4:	ldr	r0, [r0, #8]
   119e8:	ldr	r1, [sp]
   119ec:	add	r0, r0, r1, lsl #2
   119f0:	sub	r1, r0, #4
   119f4:	ldr	r0, [r0]
   119f8:	str	r0, [r1]
   119fc:	ldr	r0, [sp]
   11a00:	add	r0, r0, #1
   11a04:	str	r0, [sp]
   11a08:	b	119cc <vetor_remove@@Base+0x74>
   11a0c:	ldr	r0, [sp, #8]
   11a10:	ldr	r1, [r0]
   11a14:	mvn	r2, #0
   11a18:	add	r1, r1, r2
   11a1c:	str	r1, [r0]
   11a20:	movw	r0, #0
   11a24:	str	r0, [fp, #-4]
   11a28:	ldr	r0, [fp, #-4]
   11a2c:	mov	sp, fp
   11a30:	pop	{fp, pc}

00011a34 <vetor_pesquisa@@Base>:
   11a34:	push	{fp, lr}
   11a38:	mov	fp, sp
   11a3c:	sub	sp, sp, #16
   11a40:	str	r0, [sp, #8]
   11a44:	str	r1, [sp, #4]
   11a48:	ldr	r0, [sp, #8]
   11a4c:	movw	r1, #0
   11a50:	cmp	r0, r1
   11a54:	bne	11a64 <vetor_pesquisa@@Base+0x30>
   11a58:	mvn	r0, #0
   11a5c:	str	r0, [fp, #-4]
   11a60:	b	11acc <vetor_pesquisa@@Base+0x98>
   11a64:	movw	r0, #0
   11a68:	str	r0, [sp]
   11a6c:	ldr	r0, [sp]
   11a70:	ldr	r1, [sp, #8]
   11a74:	ldr	r1, [r1]
   11a78:	cmp	r0, r1
   11a7c:	bge	11ac4 <vetor_pesquisa@@Base+0x90>
   11a80:	ldr	r0, [sp, #8]
   11a84:	ldr	r0, [r0, #8]
   11a88:	ldr	r1, [sp]
   11a8c:	add	r0, r0, r1, lsl #2
   11a90:	ldr	r0, [r0]
   11a94:	ldr	r1, [sp, #4]
   11a98:	bl	10c80 <strcmp@plt>
   11a9c:	cmp	r0, #0
   11aa0:	bne	11ab0 <vetor_pesquisa@@Base+0x7c>
   11aa4:	ldr	r0, [sp]
   11aa8:	str	r0, [fp, #-4]
   11aac:	b	11acc <vetor_pesquisa@@Base+0x98>
   11ab0:	b	11ab4 <vetor_pesquisa@@Base+0x80>
   11ab4:	ldr	r0, [sp]
   11ab8:	add	r0, r0, #1
   11abc:	str	r0, [sp]
   11ac0:	b	11a6c <vetor_pesquisa@@Base+0x38>
   11ac4:	mvn	r0, #0
   11ac8:	str	r0, [fp, #-4]
   11acc:	ldr	r0, [fp, #-4]
   11ad0:	mov	sp, fp
   11ad4:	pop	{fp, pc}

00011ad8 <vetor_ordena@@Base>:
   11ad8:	push	{fp, lr}
   11adc:	mov	fp, sp
   11ae0:	sub	sp, sp, #24
   11ae4:	str	r0, [fp, #-8]
   11ae8:	ldr	r0, [fp, #-8]
   11aec:	movw	r1, #0
   11af0:	cmp	r0, r1
   11af4:	bne	11b04 <vetor_ordena@@Base+0x2c>
   11af8:	mvn	r0, #0
   11afc:	str	r0, [fp, #-4]
   11b00:	b	11bf4 <vetor_ordena@@Base+0x11c>
   11b04:	movw	r0, #1
   11b08:	str	r0, [sp, #12]
   11b0c:	ldr	r0, [sp, #12]
   11b10:	ldr	r1, [fp, #-8]
   11b14:	ldr	r1, [r1]
   11b18:	cmp	r0, r1
   11b1c:	bge	11bec <vetor_ordena@@Base+0x114>
   11b20:	ldr	r0, [fp, #-8]
   11b24:	ldr	r0, [r0, #8]
   11b28:	ldr	r1, [sp, #12]
   11b2c:	add	r0, r0, r1, lsl #2
   11b30:	ldr	r0, [r0]
   11b34:	str	r0, [sp, #4]
   11b38:	ldr	r0, [sp, #12]
   11b3c:	str	r0, [sp, #8]
   11b40:	ldr	r0, [sp, #8]
   11b44:	cmp	r0, #0
   11b48:	movw	r0, #0
   11b4c:	str	r0, [sp]
   11b50:	ble	11b84 <vetor_ordena@@Base+0xac>
   11b54:	ldr	r0, [sp, #4]
   11b58:	ldr	r1, [fp, #-8]
   11b5c:	ldr	r1, [r1, #8]
   11b60:	ldr	r2, [sp, #8]
   11b64:	sub	r2, r2, #1
   11b68:	add	r1, r1, r2, lsl #2
   11b6c:	ldr	r1, [r1]
   11b70:	bl	10c80 <strcmp@plt>
   11b74:	cmp	r0, #0
   11b78:	movw	r0, #0
   11b7c:	movlt	r0, #1
   11b80:	str	r0, [sp]
   11b84:	ldr	r0, [sp]
   11b88:	tst	r0, #1
   11b8c:	beq	11bc4 <vetor_ordena@@Base+0xec>
   11b90:	ldr	r0, [fp, #-8]
   11b94:	ldr	r0, [r0, #8]
   11b98:	ldr	r1, [sp, #8]
   11b9c:	add	r2, r0, r1, lsl #2
   11ba0:	sub	r1, r1, #1
   11ba4:	add	r0, r0, r1, lsl #2
   11ba8:	ldr	r0, [r0]
   11bac:	str	r0, [r2]
   11bb0:	ldr	r0, [sp, #8]
   11bb4:	mvn	r1, #0
   11bb8:	add	r0, r0, r1
   11bbc:	str	r0, [sp, #8]
   11bc0:	b	11b40 <vetor_ordena@@Base+0x68>
   11bc4:	ldr	r0, [sp, #4]
   11bc8:	ldr	r1, [fp, #-8]
   11bcc:	ldr	r1, [r1, #8]
   11bd0:	ldr	r2, [sp, #8]
   11bd4:	add	r1, r1, r2, lsl #2
   11bd8:	str	r0, [r1]
   11bdc:	ldr	r0, [sp, #12]
   11be0:	add	r0, r0, #1
   11be4:	str	r0, [sp, #12]
   11be8:	b	11b0c <vetor_ordena@@Base+0x34>
   11bec:	movw	r0, #0
   11bf0:	str	r0, [fp, #-4]
   11bf4:	ldr	r0, [fp, #-4]
   11bf8:	mov	sp, fp
   11bfc:	pop	{fp, pc}

00011c00 <novo_str@@Base>:
   11c00:	push	{fp, lr}
   11c04:	mov	fp, sp
   11c08:	sub	sp, sp, #24
   11c0c:	str	r0, [fp, #-8]
   11c10:	movw	r0, #12
   11c14:	bl	10cd4 <malloc@plt>
   11c18:	str	r0, [sp, #12]
   11c1c:	ldr	r0, [sp, #12]
   11c20:	movw	lr, #0
   11c24:	cmp	r0, lr
   11c28:	bne	11c38 <novo_str@@Base+0x38>
   11c2c:	movw	r0, #0
   11c30:	str	r0, [fp, #-4]
   11c34:	b	11cb0 <novo_str@@Base+0xb0>
   11c38:	ldr	r0, [fp, #-8]
   11c3c:	bl	10d04 <strlen@plt>
   11c40:	add	r0, r0, #1
   11c44:	mov	lr, r0
   11c48:	str	lr, [sp, #8]
   11c4c:	bl	10cd4 <malloc@plt>
   11c50:	ldr	lr, [sp, #12]
   11c54:	str	r0, [lr]
   11c58:	ldr	r0, [sp, #12]
   11c5c:	ldr	r0, [r0]
   11c60:	movw	lr, #0
   11c64:	cmp	r0, lr
   11c68:	bne	11c80 <novo_str@@Base+0x80>
   11c6c:	ldr	r0, [sp, #12]
   11c70:	bl	10ca4 <free@plt>
   11c74:	movw	r0, #0
   11c78:	str	r0, [fp, #-4]
   11c7c:	b	11cb0 <novo_str@@Base+0xb0>
   11c80:	ldr	r0, [sp, #12]
   11c84:	ldr	r0, [r0]
   11c88:	ldr	r1, [fp, #-8]
   11c8c:	bl	10cc8 <strcpy@plt>
   11c90:	ldr	r1, [sp, #12]
   11c94:	movw	lr, #0
   11c98:	str	lr, [r1, #4]
   11c9c:	ldr	r1, [sp, #12]
   11ca0:	str	lr, [r1, #8]
   11ca4:	ldr	r1, [sp, #12]
   11ca8:	str	r1, [fp, #-4]
   11cac:	str	r0, [sp, #4]
   11cb0:	ldr	r0, [fp, #-4]
   11cb4:	mov	sp, fp
   11cb8:	pop	{fp, pc}

00011cbc <lista_nova@@Base>:
   11cbc:	push	{fp, lr}
   11cc0:	mov	fp, sp
   11cc4:	sub	sp, sp, #8
   11cc8:	movw	r0, #12
   11ccc:	bl	10cd4 <malloc@plt>
   11cd0:	str	r0, [sp]
   11cd4:	ldr	r0, [sp]
   11cd8:	movw	lr, #0
   11cdc:	cmp	r0, lr
   11ce0:	bne	11cf0 <lista_nova@@Base+0x34>
   11ce4:	movw	r0, #0
   11ce8:	str	r0, [sp, #4]
   11cec:	b	11d14 <lista_nova@@Base+0x58>
   11cf0:	ldr	r0, [sp]
   11cf4:	movw	r1, #0
   11cf8:	str	r1, [r0]
   11cfc:	ldr	r0, [sp]
   11d00:	str	r1, [r0, #4]
   11d04:	ldr	r0, [sp]
   11d08:	str	r1, [r0, #8]
   11d0c:	ldr	r0, [sp]
   11d10:	str	r0, [sp, #4]
   11d14:	ldr	r0, [sp, #4]
   11d18:	mov	sp, fp
   11d1c:	pop	{fp, pc}

00011d20 <lista_apaga@@Base>:
   11d20:	push	{fp, lr}
   11d24:	mov	fp, sp
   11d28:	sub	sp, sp, #8
   11d2c:	str	r0, [sp, #4]
   11d30:	ldr	r0, [sp, #4]
   11d34:	movw	r1, #0
   11d38:	cmp	r0, r1
   11d3c:	bne	11d44 <lista_apaga@@Base+0x24>
   11d40:	b	11d9c <lista_apaga@@Base+0x7c>
   11d44:	b	11d48 <lista_apaga@@Base+0x28>
   11d48:	ldr	r0, [sp, #4]
   11d4c:	ldr	r0, [r0]
   11d50:	movw	r1, #0
   11d54:	cmp	r0, r1
   11d58:	beq	11d94 <lista_apaga@@Base+0x74>
   11d5c:	ldr	r0, [sp, #4]
   11d60:	ldr	r0, [r0]
   11d64:	str	r0, [sp]
   11d68:	ldr	r0, [sp, #4]
   11d6c:	ldr	r0, [r0]
   11d70:	ldr	r0, [r0, #4]
   11d74:	ldr	r1, [sp, #4]
   11d78:	str	r0, [r1]
   11d7c:	ldr	r0, [sp]
   11d80:	ldr	r0, [r0]
   11d84:	bl	10ca4 <free@plt>
   11d88:	ldr	r0, [sp]
   11d8c:	bl	10ca4 <free@plt>
   11d90:	b	11d48 <lista_apaga@@Base+0x28>
   11d94:	ldr	r0, [sp, #4]
   11d98:	bl	10ca4 <free@plt>
   11d9c:	mov	sp, fp
   11da0:	pop	{fp, pc}

00011da4 <lista_tamanho@@Base>:
   11da4:	sub	sp, sp, #8
   11da8:	str	r0, [sp]
   11dac:	ldr	r0, [sp]
   11db0:	movw	r1, #0
   11db4:	cmp	r0, r1
   11db8:	bne	11dc8 <lista_tamanho@@Base+0x24>
   11dbc:	mvn	r0, #0
   11dc0:	str	r0, [sp, #4]
   11dc4:	b	11dd4 <lista_tamanho@@Base+0x30>
   11dc8:	ldr	r0, [sp]
   11dcc:	ldr	r0, [r0, #8]
   11dd0:	str	r0, [sp, #4]
   11dd4:	ldr	r0, [sp, #4]
   11dd8:	add	sp, sp, #8
   11ddc:	bx	lr

00011de0 <lista_inicio@@Base>:
   11de0:	sub	sp, sp, #8
   11de4:	str	r0, [sp]
   11de8:	ldr	r0, [sp]
   11dec:	movw	r1, #0
   11df0:	cmp	r0, r1
   11df4:	bne	11e04 <lista_inicio@@Base+0x24>
   11df8:	movw	r0, #0
   11dfc:	str	r0, [sp, #4]
   11e00:	b	11e10 <lista_inicio@@Base+0x30>
   11e04:	ldr	r0, [sp]
   11e08:	ldr	r0, [r0]
   11e0c:	str	r0, [sp, #4]
   11e10:	ldr	r0, [sp, #4]
   11e14:	add	sp, sp, #8
   11e18:	bx	lr

00011e1c <lista_fim@@Base>:
   11e1c:	sub	sp, sp, #8
   11e20:	str	r0, [sp]
   11e24:	ldr	r0, [sp]
   11e28:	movw	r1, #0
   11e2c:	cmp	r0, r1
   11e30:	bne	11e40 <lista_fim@@Base+0x24>
   11e34:	movw	r0, #0
   11e38:	str	r0, [sp, #4]
   11e3c:	b	11e4c <lista_fim@@Base+0x30>
   11e40:	ldr	r0, [sp]
   11e44:	ldr	r0, [r0, #4]
   11e48:	str	r0, [sp, #4]
   11e4c:	ldr	r0, [sp, #4]
   11e50:	add	sp, sp, #8
   11e54:	bx	lr

00011e58 <lista_insere@@Base>:
   11e58:	push	{fp, lr}
   11e5c:	mov	fp, sp
   11e60:	sub	sp, sp, #24
   11e64:	str	r0, [fp, #-8]
   11e68:	str	r1, [sp, #12]
   11e6c:	str	r2, [sp, #8]
   11e70:	movw	r0, #0
   11e74:	str	r0, [sp, #4]
   11e78:	ldr	r1, [fp, #-8]
   11e7c:	cmp	r1, r0
   11e80:	beq	11e94 <lista_insere@@Base+0x3c>
   11e84:	ldr	r0, [sp, #12]
   11e88:	movw	r1, #0
   11e8c:	cmp	r0, r1
   11e90:	bne	11ea0 <lista_insere@@Base+0x48>
   11e94:	movw	r0, #0
   11e98:	str	r0, [fp, #-4]
   11e9c:	b	11fd8 <lista_insere@@Base+0x180>
   11ea0:	ldr	r0, [sp, #12]
   11ea4:	bl	11c00 <novo_str@@Base>
   11ea8:	str	r0, [sp, #4]
   11eac:	ldr	r0, [sp, #4]
   11eb0:	movw	lr, #0
   11eb4:	cmp	r0, lr
   11eb8:	bne	11ec8 <lista_insere@@Base+0x70>
   11ebc:	movw	r0, #0
   11ec0:	str	r0, [fp, #-4]
   11ec4:	b	11fd8 <lista_insere@@Base+0x180>
   11ec8:	ldr	r0, [fp, #-8]
   11ecc:	ldr	r1, [r0, #8]
   11ed0:	add	r1, r1, #1
   11ed4:	str	r1, [r0, #8]
   11ed8:	ldr	r0, [sp, #8]
   11edc:	movw	r1, #0
   11ee0:	cmp	r0, r1
   11ee4:	bne	11f4c <lista_insere@@Base+0xf4>
   11ee8:	ldr	r0, [fp, #-8]
   11eec:	ldr	r0, [r0]
   11ef0:	movw	r1, #0
   11ef4:	cmp	r0, r1
   11ef8:	bne	11f14 <lista_insere@@Base+0xbc>
   11efc:	ldr	r0, [sp, #4]
   11f00:	ldr	r1, [fp, #-8]
   11f04:	str	r0, [r1, #4]
   11f08:	ldr	r1, [fp, #-8]
   11f0c:	str	r0, [r1]
   11f10:	b	11f40 <lista_insere@@Base+0xe8>
   11f14:	ldr	r0, [fp, #-8]
   11f18:	ldr	r0, [r0, #4]
   11f1c:	ldr	r1, [sp, #4]
   11f20:	str	r0, [r1, #8]
   11f24:	ldr	r0, [sp, #4]
   11f28:	ldr	r1, [fp, #-8]
   11f2c:	ldr	r1, [r1, #4]
   11f30:	str	r0, [r1, #4]
   11f34:	ldr	r0, [sp, #4]
   11f38:	ldr	r1, [fp, #-8]
   11f3c:	str	r0, [r1, #4]
   11f40:	ldr	r0, [sp, #4]
   11f44:	str	r0, [fp, #-4]
   11f48:	b	11fd8 <lista_insere@@Base+0x180>
   11f4c:	ldr	r0, [sp, #8]
   11f50:	ldr	r1, [fp, #-8]
   11f54:	ldr	r1, [r1]
   11f58:	cmp	r0, r1
   11f5c:	bne	11f98 <lista_insere@@Base+0x140>
   11f60:	ldr	r0, [fp, #-8]
   11f64:	ldr	r0, [r0]
   11f68:	ldr	r1, [sp, #4]
   11f6c:	str	r0, [r1, #4]
   11f70:	ldr	r0, [sp, #4]
   11f74:	ldr	r1, [fp, #-8]
   11f78:	ldr	r1, [r1]
   11f7c:	str	r0, [r1, #8]
   11f80:	ldr	r0, [sp, #4]
   11f84:	ldr	r1, [fp, #-8]
   11f88:	str	r0, [r1]
   11f8c:	ldr	r0, [sp, #4]
   11f90:	str	r0, [fp, #-4]
   11f94:	b	11fd8 <lista_insere@@Base+0x180>
   11f98:	ldr	r0, [sp, #8]
   11f9c:	ldr	r0, [r0, #8]
   11fa0:	ldr	r1, [sp, #4]
   11fa4:	str	r0, [r1, #8]
   11fa8:	ldr	r0, [sp, #8]
   11fac:	ldr	r1, [sp, #4]
   11fb0:	str	r0, [r1, #4]
   11fb4:	ldr	r0, [sp, #4]
   11fb8:	ldr	r1, [sp, #8]
   11fbc:	ldr	r1, [r1, #8]
   11fc0:	str	r0, [r1, #4]
   11fc4:	ldr	r0, [sp, #4]
   11fc8:	ldr	r1, [sp, #8]
   11fcc:	str	r0, [r1, #8]
   11fd0:	ldr	r0, [sp, #4]
   11fd4:	str	r0, [fp, #-4]
   11fd8:	ldr	r0, [fp, #-4]
   11fdc:	mov	sp, fp
   11fe0:	pop	{fp, pc}

00011fe4 <lista_remove@@Base>:
   11fe4:	push	{fp, lr}
   11fe8:	mov	fp, sp
   11fec:	sub	sp, sp, #16
   11ff0:	str	r0, [sp, #8]
   11ff4:	str	r1, [sp, #4]
   11ff8:	ldr	r0, [sp, #8]
   11ffc:	movw	r1, #0
   12000:	cmp	r0, r1
   12004:	beq	12018 <lista_remove@@Base+0x34>
   12008:	ldr	r0, [sp, #4]
   1200c:	movw	r1, #0
   12010:	cmp	r0, r1
   12014:	bne	12024 <lista_remove@@Base+0x40>
   12018:	movw	r0, #0
   1201c:	str	r0, [fp, #-4]
   12020:	b	120d8 <lista_remove@@Base+0xf4>
   12024:	ldr	r0, [sp, #8]
   12028:	ldr	r1, [r0, #8]
   1202c:	mvn	r2, #0
   12030:	add	r1, r1, r2
   12034:	str	r1, [r0, #8]
   12038:	ldr	r0, [sp, #4]
   1203c:	ldr	r0, [r0, #8]
   12040:	movw	r1, #0
   12044:	cmp	r0, r1
   12048:	beq	12064 <lista_remove@@Base+0x80>
   1204c:	ldr	r0, [sp, #4]
   12050:	ldr	r0, [r0, #4]
   12054:	ldr	r1, [sp, #4]
   12058:	ldr	r1, [r1, #8]
   1205c:	str	r0, [r1, #4]
   12060:	b	12074 <lista_remove@@Base+0x90>
   12064:	ldr	r0, [sp, #4]
   12068:	ldr	r0, [r0, #4]
   1206c:	ldr	r1, [sp, #8]
   12070:	str	r0, [r1]
   12074:	ldr	r0, [sp, #4]
   12078:	ldr	r0, [r0, #4]
   1207c:	movw	r1, #0
   12080:	cmp	r0, r1
   12084:	beq	120a0 <lista_remove@@Base+0xbc>
   12088:	ldr	r0, [sp, #4]
   1208c:	ldr	r0, [r0, #8]
   12090:	ldr	r1, [sp, #4]
   12094:	ldr	r1, [r1, #4]
   12098:	str	r0, [r1, #8]
   1209c:	b	120b0 <lista_remove@@Base+0xcc>
   120a0:	ldr	r0, [sp, #4]
   120a4:	ldr	r0, [r0, #8]
   120a8:	ldr	r1, [sp, #8]
   120ac:	str	r0, [r1, #4]
   120b0:	ldr	r0, [sp, #4]
   120b4:	ldr	r0, [r0, #4]
   120b8:	str	r0, [sp]
   120bc:	ldr	r0, [sp, #4]
   120c0:	ldr	r0, [r0]
   120c4:	bl	10ca4 <free@plt>
   120c8:	ldr	r0, [sp, #4]
   120cc:	bl	10ca4 <free@plt>
   120d0:	ldr	r0, [sp]
   120d4:	str	r0, [fp, #-4]
   120d8:	ldr	r0, [fp, #-4]
   120dc:	mov	sp, fp
   120e0:	pop	{fp, pc}

000120e4 <lista_pesquisa@@Base>:
   120e4:	push	{fp, lr}
   120e8:	mov	fp, sp
   120ec:	sub	sp, sp, #24
   120f0:	str	r0, [fp, #-8]
   120f4:	str	r1, [sp, #12]
   120f8:	str	r2, [sp, #8]
   120fc:	ldr	r0, [fp, #-8]
   12100:	movw	r1, #0
   12104:	cmp	r0, r1
   12108:	beq	12134 <lista_pesquisa@@Base+0x50>
   1210c:	ldr	r0, [sp, #12]
   12110:	movw	r1, #0
   12114:	cmp	r0, r1
   12118:	beq	12134 <lista_pesquisa@@Base+0x50>
   1211c:	ldr	r0, [sp, #8]
   12120:	cmp	r0, #0
   12124:	beq	12140 <lista_pesquisa@@Base+0x5c>
   12128:	ldr	r0, [sp, #8]
   1212c:	cmp	r0, #1
   12130:	beq	12140 <lista_pesquisa@@Base+0x5c>
   12134:	movw	r0, #0
   12138:	str	r0, [fp, #-4]
   1213c:	b	12208 <lista_pesquisa@@Base+0x124>
   12140:	ldr	r0, [sp, #8]
   12144:	cmp	r0, #0
   12148:	bne	121ac <lista_pesquisa@@Base+0xc8>
   1214c:	ldr	r0, [fp, #-8]
   12150:	ldr	r0, [r0]
   12154:	str	r0, [sp, #4]
   12158:	ldr	r0, [sp, #4]
   1215c:	movw	r1, #0
   12160:	cmp	r0, r1
   12164:	beq	121a0 <lista_pesquisa@@Base+0xbc>
   12168:	ldr	r0, [sp, #4]
   1216c:	ldr	r0, [r0]
   12170:	ldr	r1, [sp, #12]
   12174:	bl	10c80 <strcmp@plt>
   12178:	cmp	r0, #0
   1217c:	bne	1218c <lista_pesquisa@@Base+0xa8>
   12180:	ldr	r0, [sp, #4]
   12184:	str	r0, [fp, #-4]
   12188:	b	12208 <lista_pesquisa@@Base+0x124>
   1218c:	b	12190 <lista_pesquisa@@Base+0xac>
   12190:	ldr	r0, [sp, #4]
   12194:	ldr	r0, [r0, #4]
   12198:	str	r0, [sp, #4]
   1219c:	b	12158 <lista_pesquisa@@Base+0x74>
   121a0:	movw	r0, #0
   121a4:	str	r0, [fp, #-4]
   121a8:	b	12208 <lista_pesquisa@@Base+0x124>
   121ac:	ldr	r0, [fp, #-8]
   121b0:	ldr	r0, [r0, #4]
   121b4:	str	r0, [sp, #4]
   121b8:	ldr	r0, [sp, #4]
   121bc:	movw	r1, #0
   121c0:	cmp	r0, r1
   121c4:	beq	12200 <lista_pesquisa@@Base+0x11c>
   121c8:	ldr	r0, [sp, #4]
   121cc:	ldr	r0, [r0]
   121d0:	ldr	r1, [sp, #12]
   121d4:	bl	10c80 <strcmp@plt>
   121d8:	cmp	r0, #0
   121dc:	bne	121ec <lista_pesquisa@@Base+0x108>
   121e0:	ldr	r0, [sp, #4]
   121e4:	str	r0, [fp, #-4]
   121e8:	b	12208 <lista_pesquisa@@Base+0x124>
   121ec:	b	121f0 <lista_pesquisa@@Base+0x10c>
   121f0:	ldr	r0, [sp, #4]
   121f4:	ldr	r0, [r0, #8]
   121f8:	str	r0, [sp, #4]
   121fc:	b	121b8 <lista_pesquisa@@Base+0xd4>
   12200:	movw	r0, #0
   12204:	str	r0, [fp, #-4]
   12208:	ldr	r0, [fp, #-4]
   1220c:	mov	sp, fp
   12210:	pop	{fp, pc}

00012214 <lista_ordena@@Base>:
   12214:	push	{fp, lr}
   12218:	mov	fp, sp
   1221c:	sub	sp, sp, #24
   12220:	str	r0, [fp, #-8]
   12224:	ldr	r0, [fp, #-8]
   12228:	movw	r1, #0
   1222c:	cmp	r0, r1
   12230:	bne	12240 <lista_ordena@@Base+0x2c>
   12234:	mvn	r0, #0
   12238:	str	r0, [fp, #-4]
   1223c:	b	1230c <lista_ordena@@Base+0xf8>
   12240:	ldr	r0, [fp, #-8]
   12244:	ldr	r0, [r0]
   12248:	str	r0, [sp, #8]
   1224c:	ldr	r0, [sp, #8]
   12250:	ldr	r0, [r0, #4]
   12254:	movw	r1, #0
   12258:	cmp	r0, r1
   1225c:	beq	12304 <lista_ordena@@Base+0xf0>
   12260:	ldr	r0, [sp, #8]
   12264:	str	r0, [sp, #4]
   12268:	ldr	r0, [sp, #8]
   1226c:	ldr	r0, [r0, #4]
   12270:	str	r0, [sp, #12]
   12274:	ldr	r0, [sp, #12]
   12278:	movw	r1, #0
   1227c:	cmp	r0, r1
   12280:	beq	122b8 <lista_ordena@@Base+0xa4>
   12284:	ldr	r0, [sp, #12]
   12288:	ldr	r0, [r0]
   1228c:	ldr	r1, [sp, #4]
   12290:	ldr	r1, [r1]
   12294:	bl	10c80 <strcmp@plt>
   12298:	cmp	r0, #0
   1229c:	bge	122a8 <lista_ordena@@Base+0x94>
   122a0:	ldr	r0, [sp, #12]
   122a4:	str	r0, [sp, #4]
   122a8:	ldr	r0, [sp, #12]
   122ac:	ldr	r0, [r0, #4]
   122b0:	str	r0, [sp, #12]
   122b4:	b	12274 <lista_ordena@@Base+0x60>
   122b8:	ldr	r0, [sp, #4]
   122bc:	ldr	r1, [sp, #8]
   122c0:	cmp	r0, r1
   122c4:	beq	122f0 <lista_ordena@@Base+0xdc>
   122c8:	ldr	r0, [sp, #8]
   122cc:	ldr	r0, [r0]
   122d0:	str	r0, [sp]
   122d4:	ldr	r0, [sp, #4]
   122d8:	ldr	r0, [r0]
   122dc:	ldr	r1, [sp, #8]
   122e0:	str	r0, [r1]
   122e4:	ldr	r0, [sp]
   122e8:	ldr	r1, [sp, #4]
   122ec:	str	r0, [r1]
   122f0:	b	122f4 <lista_ordena@@Base+0xe0>
   122f4:	ldr	r0, [sp, #8]
   122f8:	ldr	r0, [r0, #4]
   122fc:	str	r0, [sp, #8]
   12300:	b	1224c <lista_ordena@@Base+0x38>
   12304:	movw	r0, #0
   12308:	str	r0, [fp, #-4]
   1230c:	ldr	r0, [fp, #-4]
   12310:	mov	sp, fp
   12314:	pop	{fp, pc}

00012318 <lista_inverte@@Base>:
   12318:	sub	sp, sp, #20
   1231c:	str	r0, [sp, #12]
   12320:	ldr	r0, [sp, #12]
   12324:	movw	r1, #0
   12328:	cmp	r0, r1
   1232c:	bne	1233c <lista_inverte@@Base+0x24>
   12330:	mvn	r0, #0
   12334:	str	r0, [sp, #16]
   12338:	b	12464 <lista_inverte@@Base+0x14c>
   1233c:	ldr	r0, [sp, #12]
   12340:	ldr	r0, [r0, #8]
   12344:	cmp	r0, #2
   12348:	bge	12358 <lista_inverte@@Base+0x40>
   1234c:	movw	r0, #0
   12350:	str	r0, [sp, #16]
   12354:	b	12464 <lista_inverte@@Base+0x14c>
   12358:	ldr	r0, [sp, #12]
   1235c:	ldr	r0, [r0]
   12360:	ldr	r0, [r0, #4]
   12364:	str	r0, [sp, #4]
   12368:	movw	r0, #0
   1236c:	str	r0, [sp, #8]
   12370:	ldr	r0, [sp, #8]
   12374:	ldr	r1, [sp, #12]
   12378:	ldr	r1, [r1, #8]
   1237c:	sub	r1, r1, #2
   12380:	cmp	r0, r1
   12384:	bge	12400 <lista_inverte@@Base+0xe8>
   12388:	ldr	r0, [sp, #4]
   1238c:	ldr	r0, [r0, #4]
   12390:	ldr	r1, [sp, #4]
   12394:	ldr	r1, [r1, #8]
   12398:	str	r0, [r1, #4]
   1239c:	ldr	r0, [sp, #4]
   123a0:	ldr	r0, [r0, #8]
   123a4:	ldr	r1, [sp, #4]
   123a8:	ldr	r1, [r1, #4]
   123ac:	str	r0, [r1, #8]
   123b0:	ldr	r0, [sp, #4]
   123b4:	ldr	r0, [r0, #4]
   123b8:	str	r0, [sp]
   123bc:	ldr	r0, [sp, #12]
   123c0:	ldr	r0, [r0]
   123c4:	ldr	r1, [sp, #4]
   123c8:	str	r0, [r1, #4]
   123cc:	ldr	r0, [sp, #4]
   123d0:	ldr	r1, [sp, #12]
   123d4:	ldr	r1, [r1]
   123d8:	str	r0, [r1, #8]
   123dc:	ldr	r0, [sp, #4]
   123e0:	ldr	r1, [sp, #12]
   123e4:	str	r0, [r1]
   123e8:	ldr	r0, [sp]
   123ec:	str	r0, [sp, #4]
   123f0:	ldr	r0, [sp, #8]
   123f4:	add	r0, r0, #1
   123f8:	str	r0, [sp, #8]
   123fc:	b	12370 <lista_inverte@@Base+0x58>
   12400:	ldr	r0, [sp, #12]
   12404:	ldr	r0, [r0, #4]
   12408:	str	r0, [sp, #4]
   1240c:	ldr	r0, [sp, #4]
   12410:	ldr	r0, [r0, #8]
   12414:	ldr	r1, [sp, #12]
   12418:	str	r0, [r1, #4]
   1241c:	ldr	r0, [sp, #12]
   12420:	ldr	r0, [r0, #4]
   12424:	movw	r1, #0
   12428:	str	r1, [r0, #4]
   1242c:	ldr	r0, [sp, #4]
   12430:	str	r1, [r0, #8]
   12434:	ldr	r0, [sp, #12]
   12438:	ldr	r0, [r0]
   1243c:	ldr	r2, [sp, #4]
   12440:	str	r0, [r2, #4]
   12444:	ldr	r0, [sp, #4]
   12448:	ldr	r2, [sp, #12]
   1244c:	ldr	r2, [r2]
   12450:	str	r0, [r2, #8]
   12454:	ldr	r0, [sp, #4]
   12458:	ldr	r2, [sp, #12]
   1245c:	str	r0, [r2]
   12460:	str	r1, [sp, #16]
   12464:	ldr	r0, [sp, #16]
   12468:	add	sp, sp, #20
   1246c:	bx	lr

00012470 <__libc_csu_init@@Base>:
   12470:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12474:	mov	r7, r0
   12478:	ldr	r6, [pc, #72]	; 124c8 <__libc_csu_init@@Base+0x58>
   1247c:	ldr	r5, [pc, #72]	; 124cc <__libc_csu_init@@Base+0x5c>
   12480:	add	r6, pc, r6
   12484:	add	r5, pc, r5
   12488:	sub	r6, r6, r5
   1248c:	mov	r8, r1
   12490:	mov	r9, r2
   12494:	bl	10c54 <calloc@plt-0x20>
   12498:	asrs	r6, r6, #2
   1249c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   124a0:	mov	r4, #0
   124a4:	add	r4, r4, #1
   124a8:	ldr	r3, [r5], #4
   124ac:	mov	r2, r9
   124b0:	mov	r1, r8
   124b4:	mov	r0, r7
   124b8:	blx	r3
   124bc:	cmp	r6, r4
   124c0:	bne	124a4 <__libc_csu_init@@Base+0x34>
   124c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   124c8:	andeq	r0, r1, r4, lsl #21
   124cc:	andeq	r0, r1, ip, ror sl

000124d0 <__libc_csu_fini@@Base>:
   124d0:	bx	lr

Disassembly of section .fini:

000124d4 <.fini>:
   124d4:	push	{r3, lr}
   124d8:	pop	{r3, pc}
