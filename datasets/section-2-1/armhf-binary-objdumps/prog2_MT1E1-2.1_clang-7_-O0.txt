
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010c64 <.init>:
   10c64:	push	{r3, lr}
   10c68:	bl	10d68 <_start@@Base+0x3c>
   10c6c:	pop	{r3, pc}

Disassembly of section .plt:

00010c70 <calloc@plt-0x14>:
   10c70:	push	{lr}		; (str lr, [sp, #-4]!)
   10c74:	ldr	lr, [pc, #4]	; 10c80 <calloc@plt-0x4>
   10c78:	add	lr, pc, lr
   10c7c:	ldr	pc, [lr, #8]!
   10c80:	andeq	r2, r1, r0, lsl #7

00010c84 <calloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #896]!	; 0x380

00010c90 <strcmp@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #888]!	; 0x378

00010c9c <printf@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #880]!	; 0x370

00010ca8 <free@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #872]!	; 0x368

00010cb4 <realloc@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #864]!	; 0x360

00010cc0 <strcpy@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #856]!	; 0x358

00010ccc <puts@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #848]!	; 0x350

00010cd8 <malloc@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #840]!	; 0x348

00010ce4 <__libc_start_main@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #832]!	; 0x340

00010cf0 <__gmon_start__@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #824]!	; 0x338

00010cfc <strlen@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #816]!	; 0x330

00010d08 <fprintf@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #808]!	; 0x328

00010d14 <sprintf@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #800]!	; 0x320

00010d20 <abort@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #792]!	; 0x318

Disassembly of section .text:

00010d2c <_start@@Base>:
   10d2c:	mov	fp, #0
   10d30:	mov	lr, #0
   10d34:	pop	{r1}		; (ldr r1, [sp], #4)
   10d38:	mov	r2, sp
   10d3c:	push	{r2}		; (str r2, [sp, #-4]!)
   10d40:	push	{r0}		; (str r0, [sp, #-4]!)
   10d44:	ldr	ip, [pc, #16]	; 10d5c <_start@@Base+0x30>
   10d48:	push	{ip}		; (str ip, [sp, #-4]!)
   10d4c:	ldr	r0, [pc, #12]	; 10d60 <_start@@Base+0x34>
   10d50:	ldr	r3, [pc, #12]	; 10d64 <_start@@Base+0x38>
   10d54:	bl	10ce4 <__libc_start_main@plt>
   10d58:	bl	10d20 <abort@plt>
   10d5c:	andeq	r2, r1, r4, lsl #14
   10d60:	muleq	r1, r0, r1
   10d64:	andeq	r2, r1, r4, lsr #13
   10d68:	ldr	r3, [pc, #20]	; 10d84 <_start@@Base+0x58>
   10d6c:	ldr	r2, [pc, #20]	; 10d88 <_start@@Base+0x5c>
   10d70:	add	r3, pc, r3
   10d74:	ldr	r2, [r3, r2]
   10d78:	cmp	r2, #0
   10d7c:	bxeq	lr
   10d80:	b	10cf0 <__gmon_start__@plt>
   10d84:	andeq	r2, r1, r8, lsl #5
   10d88:	andeq	r0, r0, r4, asr r0
   10d8c:	ldr	r0, [pc, #24]	; 10dac <_start@@Base+0x80>
   10d90:	ldr	r3, [pc, #24]	; 10db0 <_start@@Base+0x84>
   10d94:	cmp	r3, r0
   10d98:	bxeq	lr
   10d9c:	ldr	r3, [pc, #16]	; 10db4 <_start@@Base+0x88>
   10da0:	cmp	r3, #0
   10da4:	bxeq	lr
   10da8:	bx	r3
   10dac:			; <UNDEFINED> instruction: 0x000231b4
   10db0:			; <UNDEFINED> instruction: 0x000231b4
   10db4:	andeq	r0, r0, r0
   10db8:	ldr	r0, [pc, #36]	; 10de4 <_start@@Base+0xb8>
   10dbc:	ldr	r1, [pc, #36]	; 10de8 <_start@@Base+0xbc>
   10dc0:	sub	r1, r1, r0
   10dc4:	asr	r1, r1, #2
   10dc8:	add	r1, r1, r1, lsr #31
   10dcc:	asrs	r1, r1, #1
   10dd0:	bxeq	lr
   10dd4:	ldr	r3, [pc, #16]	; 10dec <_start@@Base+0xc0>
   10dd8:	cmp	r3, #0
   10ddc:	bxeq	lr
   10de0:	bx	r3
   10de4:			; <UNDEFINED> instruction: 0x000231b4
   10de8:			; <UNDEFINED> instruction: 0x000231b4
   10dec:	andeq	r0, r0, r0
   10df0:	push	{r4, lr}
   10df4:	ldr	r4, [pc, #24]	; 10e14 <_start@@Base+0xe8>
   10df8:	ldrb	r3, [r4]
   10dfc:	cmp	r3, #0
   10e00:	popne	{r4, pc}
   10e04:	bl	10d8c <_start@@Base+0x60>
   10e08:	mov	r3, #1
   10e0c:	strb	r3, [r4]
   10e10:	pop	{r4, pc}
   10e14:			; <UNDEFINED> instruction: 0x000231b4
   10e18:	b	10db8 <_start@@Base+0x8c>

00010e1c <tira_carta@@Base>:
   10e1c:	push	{fp, lr}
   10e20:	mov	fp, sp
   10e24:	sub	sp, sp, #32
   10e28:	str	r0, [fp, #-4]
   10e2c:	str	r1, [fp, #-8]
   10e30:	movw	r0, #0
   10e34:	str	r0, [fp, #-12]
   10e38:	str	r0, [sp, #16]
   10e3c:	ldr	r0, [fp, #-8]
   10e40:	ldr	r0, [r0]
   10e44:	ldr	r0, [r0]
   10e48:	str	r0, [sp, #12]
   10e4c:	ldr	r0, [fp, #-8]
   10e50:	ldr	r0, [r0]
   10e54:	ldr	r0, [r0, #4]
   10e58:	str	r0, [sp, #8]
   10e5c:	ldr	r0, [sp, #12]
   10e60:	ldr	r1, [fp, #-4]
   10e64:	ldr	r1, [r1]
   10e68:	ldr	r1, [r1]
   10e6c:	bl	10c90 <strcmp@plt>
   10e70:	cmp	r0, #0
   10e74:	beq	10ea0 <tira_carta@@Base+0x84>
   10e78:	ldr	r0, [sp, #8]
   10e7c:	ldr	r0, [r0]
   10e80:	str	r0, [sp, #12]
   10e84:	ldr	r0, [sp, #8]
   10e88:	ldr	r0, [r0, #4]
   10e8c:	str	r0, [sp, #8]
   10e90:	ldr	r0, [sp, #16]
   10e94:	add	r0, r0, #1
   10e98:	str	r0, [sp, #16]
   10e9c:	b	10e5c <tira_carta@@Base+0x40>
   10ea0:	ldr	r0, [fp, #-4]
   10ea4:	ldr	r1, [fp, #-4]
   10ea8:	ldr	r1, [r1]
   10eac:	bl	12218 <lista_remove@@Base>
   10eb0:	ldr	r1, [sp, #16]
   10eb4:	str	r0, [sp, #4]
   10eb8:	mov	r0, r1
   10ebc:	mov	sp, fp
   10ec0:	pop	{fp, pc}

00010ec4 <faz_jogada@@Base>:
   10ec4:	push	{fp, lr}
   10ec8:	mov	fp, sp
   10ecc:	sub	sp, sp, #32
   10ed0:	str	r0, [fp, #-4]
   10ed4:	str	r1, [fp, #-8]
   10ed8:	str	r2, [fp, #-12]
   10edc:	ldr	r0, [fp, #-4]
   10ee0:	ldr	r0, [r0]
   10ee4:	lsl	r0, r0, #2
   10ee8:	bl	10cd8 <malloc@plt>
   10eec:	str	r0, [sp, #12]
   10ef0:	movw	r0, #0
   10ef4:	str	r0, [sp, #16]
   10ef8:	ldr	r0, [sp, #16]
   10efc:	ldr	r1, [fp, #-4]
   10f00:	ldr	r1, [r1]
   10f04:	cmp	r0, r1
   10f08:	bge	10f38 <faz_jogada@@Base+0x74>
   10f0c:	ldr	r0, [fp, #-8]
   10f10:	ldr	r1, [fp, #-12]
   10f14:	bl	10e1c <tira_carta@@Base>
   10f18:	ldr	r1, [sp, #12]
   10f1c:	ldr	lr, [sp, #16]
   10f20:	add	r1, r1, lr, lsl #2
   10f24:	str	r0, [r1]
   10f28:	ldr	r0, [sp, #16]
   10f2c:	add	r0, r0, #1
   10f30:	str	r0, [sp, #16]
   10f34:	b	10ef8 <faz_jogada@@Base+0x34>
   10f38:	mvn	r0, #0
   10f3c:	str	r0, [sp, #8]
   10f40:	str	r0, [sp, #4]
   10f44:	movw	r0, #0
   10f48:	str	r0, [sp, #16]
   10f4c:	ldr	r0, [sp, #16]
   10f50:	ldr	r1, [fp, #-4]
   10f54:	ldr	r1, [r1]
   10f58:	cmp	r0, r1
   10f5c:	bge	10fac <faz_jogada@@Base+0xe8>
   10f60:	ldr	r0, [sp, #12]
   10f64:	ldr	r1, [sp, #16]
   10f68:	add	r0, r0, r1, lsl #2
   10f6c:	ldr	r0, [r0]
   10f70:	ldr	r1, [sp, #8]
   10f74:	cmp	r0, r1
   10f78:	ble	10f98 <faz_jogada@@Base+0xd4>
   10f7c:	ldr	r0, [sp, #12]
   10f80:	ldr	r1, [sp, #16]
   10f84:	add	r0, r0, r1, lsl #2
   10f88:	ldr	r0, [r0]
   10f8c:	str	r0, [sp, #8]
   10f90:	ldr	r0, [sp, #16]
   10f94:	str	r0, [sp, #4]
   10f98:	b	10f9c <faz_jogada@@Base+0xd8>
   10f9c:	ldr	r0, [sp, #16]
   10fa0:	add	r0, r0, #1
   10fa4:	str	r0, [sp, #16]
   10fa8:	b	10f4c <faz_jogada@@Base+0x88>
   10fac:	ldr	r0, [sp, #12]
   10fb0:	bl	10ca8 <free@plt>
   10fb4:	ldr	r0, [fp, #-4]
   10fb8:	ldr	r0, [r0, #8]
   10fbc:	ldr	lr, [sp, #4]
   10fc0:	add	r0, r0, lr, lsl #2
   10fc4:	ldr	r0, [r0]
   10fc8:	mov	sp, fp
   10fcc:	pop	{fp, pc}

00010fd0 <numero_vitorias@@Base>:
   10fd0:	push	{fp, lr}
   10fd4:	mov	fp, sp
   10fd8:	sub	sp, sp, #16
   10fdc:	str	r0, [fp, #-4]
   10fe0:	str	r1, [sp, #8]
   10fe4:	movw	r0, #0
   10fe8:	str	r0, [sp]
   10fec:	str	r0, [sp, #4]
   10ff0:	ldr	r0, [sp, #4]
   10ff4:	ldr	r1, [fp, #-4]
   10ff8:	ldr	r1, [r1]
   10ffc:	cmp	r0, r1
   11000:	bge	11048 <numero_vitorias@@Base+0x78>
   11004:	ldr	r0, [sp, #8]
   11008:	ldr	r1, [fp, #-4]
   1100c:	ldr	r1, [r1, #8]
   11010:	ldr	r2, [sp, #4]
   11014:	add	r1, r1, r2, lsl #2
   11018:	ldr	r1, [r1]
   1101c:	bl	10c90 <strcmp@plt>
   11020:	cmp	r0, #0
   11024:	bne	11034 <numero_vitorias@@Base+0x64>
   11028:	ldr	r0, [sp]
   1102c:	add	r0, r0, #1
   11030:	str	r0, [sp]
   11034:	b	11038 <numero_vitorias@@Base+0x68>
   11038:	ldr	r0, [sp, #4]
   1103c:	add	r0, r0, #1
   11040:	str	r0, [sp, #4]
   11044:	b	10ff0 <numero_vitorias@@Base+0x20>
   11048:	ldr	r0, [sp]
   1104c:	mov	sp, fp
   11050:	pop	{fp, pc}

00011054 <insere_carta@@Base>:
   11054:	push	{fp, lr}
   11058:	mov	fp, sp
   1105c:	sub	sp, sp, #40	; 0x28
   11060:	str	r0, [fp, #-4]
   11064:	str	r1, [fp, #-8]
   11068:	ldr	r0, [fp, #-8]
   1106c:	cmp	r0, #8
   11070:	bge	11094 <insere_carta@@Base+0x40>
   11074:	ldr	r0, [pc, #252]	; 11178 <insere_carta@@Base+0x124>
   11078:	add	r1, pc, r0
   1107c:	sub	r0, fp, #12
   11080:	ldr	r2, [fp, #-8]
   11084:	add	r2, r2, #50	; 0x32
   11088:	bl	10d14 <sprintf@plt>
   1108c:	str	r0, [fp, #-16]
   11090:	b	11158 <insere_carta@@Base+0x104>
   11094:	ldr	r0, [fp, #-8]
   11098:	cmp	r0, #8
   1109c:	bne	110b8 <insere_carta@@Base+0x64>
   110a0:	sub	r0, fp, #12
   110a4:	ldr	r1, [pc, #208]	; 1117c <insere_carta@@Base+0x128>
   110a8:	add	r1, pc, r1
   110ac:	bl	10cc0 <strcpy@plt>
   110b0:	str	r0, [sp, #20]
   110b4:	b	11154 <insere_carta@@Base+0x100>
   110b8:	ldr	r0, [fp, #-8]
   110bc:	cmp	r0, #9
   110c0:	bne	110dc <insere_carta@@Base+0x88>
   110c4:	sub	r0, fp, #12
   110c8:	ldr	r1, [pc, #176]	; 11180 <insere_carta@@Base+0x12c>
   110cc:	add	r1, pc, r1
   110d0:	bl	10cc0 <strcpy@plt>
   110d4:	str	r0, [sp, #16]
   110d8:	b	11150 <insere_carta@@Base+0xfc>
   110dc:	ldr	r0, [fp, #-8]
   110e0:	cmp	r0, #10
   110e4:	bne	11100 <insere_carta@@Base+0xac>
   110e8:	sub	r0, fp, #12
   110ec:	ldr	r1, [pc, #144]	; 11184 <insere_carta@@Base+0x130>
   110f0:	add	r1, pc, r1
   110f4:	bl	10cc0 <strcpy@plt>
   110f8:	str	r0, [sp, #12]
   110fc:	b	1114c <insere_carta@@Base+0xf8>
   11100:	ldr	r0, [fp, #-8]
   11104:	cmp	r0, #11
   11108:	bne	11124 <insere_carta@@Base+0xd0>
   1110c:	sub	r0, fp, #12
   11110:	ldr	r1, [pc, #112]	; 11188 <insere_carta@@Base+0x134>
   11114:	add	r1, pc, r1
   11118:	bl	10cc0 <strcpy@plt>
   1111c:	str	r0, [sp, #8]
   11120:	b	11148 <insere_carta@@Base+0xf4>
   11124:	ldr	r0, [fp, #-8]
   11128:	cmp	r0, #12
   1112c:	bne	11144 <insere_carta@@Base+0xf0>
   11130:	sub	r0, fp, #12
   11134:	ldr	r1, [pc, #80]	; 1118c <insere_carta@@Base+0x138>
   11138:	add	r1, pc, r1
   1113c:	bl	10cc0 <strcpy@plt>
   11140:	str	r0, [sp, #4]
   11144:	b	11148 <insere_carta@@Base+0xf4>
   11148:	b	1114c <insere_carta@@Base+0xf8>
   1114c:	b	11150 <insere_carta@@Base+0xfc>
   11150:	b	11154 <insere_carta@@Base+0x100>
   11154:	b	11158 <insere_carta@@Base+0x104>
   11158:	sub	r1, fp, #12
   1115c:	ldr	r0, [fp, #-4]
   11160:	ldr	r2, [fp, #-4]
   11164:	ldr	r2, [r2]
   11168:	bl	1208c <lista_insere@@Base>
   1116c:	str	r0, [sp]
   11170:	mov	sp, fp
   11174:	pop	{fp, pc}
   11178:	andeq	r1, r0, r3, asr #13
   1117c:	andeq	r1, r0, r8, lsl #13
   11180:	andeq	r1, r0, r7, ror #12
   11184:	andeq	r1, r0, r5, asr #12
   11188:	andeq	r1, r0, r3, lsr #12
   1118c:	andeq	r1, r0, r1, lsl #12

00011190 <main@@Base>:
   11190:	push	{fp, lr}
   11194:	mov	fp, sp
   11198:	sub	sp, sp, #160	; 0xa0
   1119c:	ldr	r0, [pc, #1272]	; 1169c <main@@Base+0x50c>
   111a0:	ldr	r0, [pc, r0]
   111a4:	movw	r1, #0
   111a8:	str	r1, [fp, #-4]
   111ac:	blx	r0
   111b0:	str	r0, [fp, #-12]
   111b4:	movw	r0, #0
   111b8:	str	r0, [fp, #-8]
   111bc:	ldr	r0, [fp, #-8]
   111c0:	cmp	r0, #4
   111c4:	bge	11214 <main@@Base+0x84>
   111c8:	ldr	r0, [pc, #1328]	; 11700 <main@@Base+0x570>
   111cc:	ldr	r0, [pc, r0]
   111d0:	ldr	r1, [fp, #-12]
   111d4:	ldr	r2, [fp, #-8]
   111d8:	ldr	r3, [pc, #1316]	; 11704 <main@@Base+0x574>
   111dc:	ldr	r3, [pc, r3]
   111e0:	add	r2, r3, r2, lsl #2
   111e4:	ldr	r2, [r2]
   111e8:	ldr	r3, [fp, #-8]
   111ec:	str	r0, [fp, #-32]	; 0xffffffe0
   111f0:	mov	r0, r1
   111f4:	mov	r1, r2
   111f8:	mov	r2, r3
   111fc:	bl	119cc <vetor_insere@@Base>
   11200:	str	r0, [fp, #-36]	; 0xffffffdc
   11204:	ldr	r0, [fp, #-8]
   11208:	add	r0, r0, #1
   1120c:	str	r0, [fp, #-8]
   11210:	b	111bc <main@@Base+0x2c>
   11214:	ldr	r0, [pc, #1156]	; 116a0 <main@@Base+0x510>
   11218:	ldr	r0, [pc, r0]
   1121c:	blx	r0
   11220:	str	r0, [fp, #-16]
   11224:	movw	r0, #0
   11228:	str	r0, [fp, #-8]
   1122c:	ldr	r0, [fp, #-8]
   11230:	cmp	r0, #52	; 0x34
   11234:	bge	11278 <main@@Base+0xe8>
   11238:	ldr	r0, [pc, #1212]	; 116fc <main@@Base+0x56c>
   1123c:	ldr	r0, [pc, r0]
   11240:	ldr	r1, [fp, #-16]
   11244:	ldr	r2, [fp, #-8]
   11248:	ldr	r3, [pc, #1208]	; 11708 <main@@Base+0x578>
   1124c:	ldr	r3, [pc, r3]
   11250:	add	r2, r3, r2, lsl #2
   11254:	ldr	r2, [r2]
   11258:	str	r0, [fp, #-40]	; 0xffffffd8
   1125c:	mov	r0, r1
   11260:	mov	r1, r2
   11264:	bl	11054 <insere_carta@@Base>
   11268:	ldr	r0, [fp, #-8]
   1126c:	add	r0, r0, #1
   11270:	str	r0, [fp, #-8]
   11274:	b	1122c <main@@Base+0x9c>
   11278:	ldr	r0, [pc, #1060]	; 116a4 <main@@Base+0x514>
   1127c:	ldr	r0, [pc, r0]
   11280:	blx	r0
   11284:	str	r0, [fp, #-20]	; 0xffffffec
   11288:	movw	r0, #0
   1128c:	str	r0, [fp, #-8]
   11290:	ldr	r0, [fp, #-8]
   11294:	cmp	r0, #13
   11298:	bge	112e4 <main@@Base+0x154>
   1129c:	ldr	r0, [pc, #1108]	; 116f8 <main@@Base+0x568>
   112a0:	ldr	r0, [pc, r0]
   112a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   112a8:	ldr	r2, [fp, #-8]
   112ac:	ldr	r3, [pc, #1112]	; 1170c <main@@Base+0x57c>
   112b0:	ldr	r3, [pc, r3]
   112b4:	add	r2, r3, r2, lsl #2
   112b8:	ldr	r2, [r2]
   112bc:	str	r0, [fp, #-44]	; 0xffffffd4
   112c0:	mov	r0, r1
   112c4:	mov	r1, r2
   112c8:	movw	r2, #0
   112cc:	bl	1208c <lista_insere@@Base>
   112d0:	str	r0, [fp, #-48]	; 0xffffffd0
   112d4:	ldr	r0, [fp, #-8]
   112d8:	add	r0, r0, #1
   112dc:	str	r0, [fp, #-8]
   112e0:	b	11290 <main@@Base+0x100>
   112e4:	ldr	r0, [pc, #992]	; 116cc <main@@Base+0x53c>
   112e8:	ldr	r0, [pc, r0]
   112ec:	ldr	r0, [r0]
   112f0:	ldr	r1, [fp, #-16]
   112f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   112f8:	str	r0, [fp, #-52]	; 0xffffffcc
   112fc:	mov	r0, r1
   11300:	mov	r1, r2
   11304:	bl	10e1c <tira_carta@@Base>
   11308:	ldr	r1, [pc, #952]	; 116c8 <main@@Base+0x538>
   1130c:	add	r1, pc, r1
   11310:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11314:	str	r0, [fp, #-56]	; 0xffffffc8
   11318:	mov	r0, r2
   1131c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11320:	bl	10d08 <fprintf@plt>
   11324:	ldr	r1, [pc, #920]	; 116c4 <main@@Base+0x534>
   11328:	ldr	r1, [pc, r1]
   1132c:	ldr	r1, [r1]
   11330:	ldr	r2, [fp, #-16]
   11334:	ldr	lr, [fp, #-20]	; 0xffffffec
   11338:	str	r0, [fp, #-60]	; 0xffffffc4
   1133c:	mov	r0, r2
   11340:	str	r1, [fp, #-64]	; 0xffffffc0
   11344:	mov	r1, lr
   11348:	bl	10e1c <tira_carta@@Base>
   1134c:	ldr	r1, [pc, #876]	; 116c0 <main@@Base+0x530>
   11350:	add	r1, pc, r1
   11354:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11358:	str	r0, [fp, #-68]	; 0xffffffbc
   1135c:	mov	r0, r2
   11360:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11364:	bl	10d08 <fprintf@plt>
   11368:	ldr	r1, [pc, #844]	; 116bc <main@@Base+0x52c>
   1136c:	ldr	r1, [pc, r1]
   11370:	ldr	r1, [r1]
   11374:	ldr	r2, [fp, #-16]
   11378:	ldr	lr, [fp, #-20]	; 0xffffffec
   1137c:	str	r0, [fp, #-72]	; 0xffffffb8
   11380:	mov	r0, r2
   11384:	str	r1, [fp, #-76]	; 0xffffffb4
   11388:	mov	r1, lr
   1138c:	bl	10e1c <tira_carta@@Base>
   11390:	ldr	r1, [pc, #800]	; 116b8 <main@@Base+0x528>
   11394:	add	r1, pc, r1
   11398:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1139c:	str	r0, [sp, #80]	; 0x50
   113a0:	mov	r0, r2
   113a4:	ldr	r2, [sp, #80]	; 0x50
   113a8:	bl	10d08 <fprintf@plt>
   113ac:	ldr	r1, [pc, #768]	; 116b4 <main@@Base+0x524>
   113b0:	ldr	r1, [pc, r1]
   113b4:	ldr	r2, [fp, #-16]
   113b8:	ldr	r1, [r1, #196]	; 0xc4
   113bc:	str	r0, [sp, #76]	; 0x4c
   113c0:	mov	r0, r2
   113c4:	bl	11054 <insere_carta@@Base>
   113c8:	ldr	r0, [pc, #736]	; 116b0 <main@@Base+0x520>
   113cc:	ldr	r0, [pc, r0]
   113d0:	ldr	r1, [fp, #-16]
   113d4:	ldr	r0, [r0, #200]	; 0xc8
   113d8:	str	r0, [sp, #72]	; 0x48
   113dc:	mov	r0, r1
   113e0:	ldr	r1, [sp, #72]	; 0x48
   113e4:	bl	11054 <insere_carta@@Base>
   113e8:	ldr	r0, [pc, #700]	; 116ac <main@@Base+0x51c>
   113ec:	ldr	r0, [pc, r0]
   113f0:	ldr	r1, [fp, #-16]
   113f4:	ldr	r0, [r0, #204]	; 0xcc
   113f8:	str	r0, [sp, #68]	; 0x44
   113fc:	mov	r0, r1
   11400:	ldr	r1, [sp, #68]	; 0x44
   11404:	bl	11054 <insere_carta@@Base>
   11408:	ldr	r0, [pc, #664]	; 116a8 <main@@Base+0x518>
   1140c:	ldr	r0, [pc, r0]
   11410:	blx	r0
   11414:	str	r0, [fp, #-24]	; 0xffffffe8
   11418:	movw	r0, #0
   1141c:	str	r0, [fp, #-8]
   11420:	ldr	r0, [fp, #-8]
   11424:	cmp	r0, #13
   11428:	bge	114a4 <main@@Base+0x314>
   1142c:	ldr	r0, [fp, #-12]
   11430:	ldr	r1, [fp, #-16]
   11434:	ldr	r2, [fp, #-20]	; 0xffffffec
   11438:	bl	10ec4 <faz_jogada@@Base>
   1143c:	str	r0, [fp, #-28]	; 0xffffffe4
   11440:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11444:	movw	r1, #0
   11448:	cmp	r0, r1
   1144c:	beq	11464 <main@@Base+0x2d4>
   11450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11454:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11458:	ldr	r2, [fp, #-8]
   1145c:	bl	119cc <vetor_insere@@Base>
   11460:	str	r0, [sp, #64]	; 0x40
   11464:	ldr	r0, [fp, #-12]
   11468:	bl	11924 <vetor_tamanho@@Base>
   1146c:	cmp	r0, #4
   11470:	beq	11490 <main@@Base+0x300>
   11474:	ldr	r0, [pc, #628]	; 116f0 <main@@Base+0x560>
   11478:	add	r1, pc, r0
   1147c:	ldr	r0, [pc, #624]	; 116f4 <main@@Base+0x564>
   11480:	ldr	r0, [pc, r0]
   11484:	ldr	r0, [r0]
   11488:	bl	10d08 <fprintf@plt>
   1148c:	str	r0, [sp, #60]	; 0x3c
   11490:	b	11494 <main@@Base+0x304>
   11494:	ldr	r0, [fp, #-8]
   11498:	add	r0, r0, #1
   1149c:	str	r0, [fp, #-8]
   114a0:	b	11420 <main@@Base+0x290>
   114a4:	ldr	r0, [pc, #548]	; 116d0 <main@@Base+0x540>
   114a8:	add	r0, pc, r0
   114ac:	bl	10c9c <printf@plt>
   114b0:	movw	lr, #0
   114b4:	str	lr, [fp, #-8]
   114b8:	str	r0, [sp, #56]	; 0x38
   114bc:	ldr	r0, [fp, #-8]
   114c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   114c4:	ldr	r1, [r1]
   114c8:	cmp	r0, r1
   114cc:	movw	r0, #0
   114d0:	str	r0, [sp, #52]	; 0x34
   114d4:	bge	114ec <main@@Base+0x35c>
   114d8:	ldr	r0, [fp, #-8]
   114dc:	cmp	r0, #3
   114e0:	movw	r0, #0
   114e4:	movlt	r0, #1
   114e8:	str	r0, [sp, #52]	; 0x34
   114ec:	ldr	r0, [sp, #52]	; 0x34
   114f0:	tst	r0, #1
   114f4:	beq	1155c <main@@Base+0x3cc>
   114f8:	ldr	r0, [pc, #492]	; 116ec <main@@Base+0x55c>
   114fc:	ldr	r0, [pc, r0]
   11500:	ldr	r0, [r0]
   11504:	ldr	r1, [fp, #-8]
   11508:	add	r2, r1, #1
   1150c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11510:	ldr	r3, [fp, #-8]
   11514:	str	r0, [sp, #48]	; 0x30
   11518:	mov	r0, r1
   1151c:	mov	r1, r3
   11520:	str	r2, [sp, #44]	; 0x2c
   11524:	bl	11960 <vetor_elemento@@Base>
   11528:	ldr	r1, [pc, #440]	; 116e8 <main@@Base+0x558>
   1152c:	add	r1, pc, r1
   11530:	ldr	r2, [sp, #48]	; 0x30
   11534:	str	r0, [sp, #40]	; 0x28
   11538:	mov	r0, r2
   1153c:	ldr	r2, [sp, #44]	; 0x2c
   11540:	ldr	r3, [sp, #40]	; 0x28
   11544:	bl	10d08 <fprintf@plt>
   11548:	str	r0, [sp, #36]	; 0x24
   1154c:	ldr	r0, [fp, #-8]
   11550:	add	r0, r0, #1
   11554:	str	r0, [fp, #-8]
   11558:	b	114bc <main@@Base+0x32c>
   1155c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11560:	bl	11780 <vetor_apaga@@Base>
   11564:	ldr	r0, [pc, #360]	; 116d4 <main@@Base+0x544>
   11568:	ldr	r0, [pc, r0]
   1156c:	blx	r0
   11570:	str	r0, [fp, #-24]	; 0xffffffe8
   11574:	movw	r0, #0
   11578:	str	r0, [fp, #-8]
   1157c:	ldr	r0, [fp, #-8]
   11580:	cmp	r0, #13
   11584:	bge	115d4 <main@@Base+0x444>
   11588:	ldr	r0, [pc, #340]	; 116e4 <main@@Base+0x554>
   1158c:	ldr	r0, [pc, r0]
   11590:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11594:	ldr	r2, [fp, #-8]
   11598:	ldr	r3, [pc, #368]	; 11710 <main@@Base+0x580>
   1159c:	ldr	r3, [pc, r3]
   115a0:	add	r2, r3, r2, lsl #2
   115a4:	ldr	r2, [r2]
   115a8:	ldr	r3, [fp, #-8]
   115ac:	str	r0, [sp, #32]
   115b0:	mov	r0, r1
   115b4:	mov	r1, r2
   115b8:	mov	r2, r3
   115bc:	bl	119cc <vetor_insere@@Base>
   115c0:	str	r0, [sp, #28]
   115c4:	ldr	r0, [fp, #-8]
   115c8:	add	r0, r0, #1
   115cc:	str	r0, [fp, #-8]
   115d0:	b	1157c <main@@Base+0x3ec>
   115d4:	ldr	r0, [pc, #252]	; 116d8 <main@@Base+0x548>
   115d8:	add	r0, pc, r0
   115dc:	bl	10ccc <puts@plt>
   115e0:	movw	lr, #0
   115e4:	str	lr, [fp, #-8]
   115e8:	str	r0, [sp, #24]
   115ec:	ldr	r0, [fp, #-8]
   115f0:	cmp	r0, #4
   115f4:	bge	11670 <main@@Base+0x4e0>
   115f8:	ldr	r0, [pc, #224]	; 116e0 <main@@Base+0x550>
   115fc:	ldr	r0, [pc, r0]
   11600:	ldr	r1, [pc, #268]	; 11714 <main@@Base+0x584>
   11604:	ldr	r1, [pc, r1]
   11608:	ldr	r1, [r1]
   1160c:	ldr	r2, [fp, #-8]
   11610:	ldr	r3, [pc, #256]	; 11718 <main@@Base+0x588>
   11614:	ldr	r3, [pc, r3]
   11618:	ldr	r2, [r3, r2, lsl #2]!
   1161c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   11620:	ldr	r3, [r3]
   11624:	str	r0, [sp, #20]
   11628:	mov	r0, ip
   1162c:	str	r1, [sp, #16]
   11630:	mov	r1, r3
   11634:	str	r2, [sp, #12]
   11638:	bl	10fd0 <numero_vitorias@@Base>
   1163c:	ldr	r1, [pc, #152]	; 116dc <main@@Base+0x54c>
   11640:	add	r1, pc, r1
   11644:	ldr	r2, [sp, #16]
   11648:	str	r0, [sp, #8]
   1164c:	mov	r0, r2
   11650:	ldr	r2, [sp, #12]
   11654:	ldr	r3, [sp, #8]
   11658:	bl	10d08 <fprintf@plt>
   1165c:	str	r0, [sp, #4]
   11660:	ldr	r0, [fp, #-8]
   11664:	add	r0, r0, #1
   11668:	str	r0, [fp, #-8]
   1166c:	b	115ec <main@@Base+0x45c>
   11670:	ldr	r0, [fp, #-12]
   11674:	bl	11780 <vetor_apaga@@Base>
   11678:	ldr	r0, [fp, #-16]
   1167c:	bl	11f54 <lista_apaga@@Base>
   11680:	ldr	r0, [fp, #-20]	; 0xffffffec
   11684:	bl	11f54 <lista_apaga@@Base>
   11688:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1168c:	bl	11780 <vetor_apaga@@Base>
   11690:	movw	r0, #0
   11694:	mov	sp, fp
   11698:	pop	{fp, pc}
   1169c:	andeq	r1, r1, r4, lsr #29
   116a0:	andeq	r1, r1, r4, lsr #28
   116a4:	andeq	r1, r1, r0, asr #27
   116a8:	andeq	r1, r1, r8, lsr ip
   116ac:	andeq	r1, r1, r8, ror #24
   116b0:	andeq	r1, r1, r8, lsl #25
   116b4:	andeq	r1, r1, r4, lsr #25
   116b8:	andeq	r1, r0, r3, ror #7
   116bc:	ldrdeq	r1, [r1], -ip
   116c0:	andeq	r1, r0, fp, lsl #8
   116c4:	andeq	r1, r1, r0, lsr #26
   116c8:	andeq	r1, r0, r2, lsr r4
   116cc:	andeq	r1, r1, r0, ror #26
   116d0:	andeq	r1, r0, r9, lsl r3
   116d4:	ldrdeq	r1, [r1], -ip
   116d8:	andeq	r1, r0, r8, ror #3
   116dc:			; <UNDEFINED> instruction: 0x000011b6
   116e0:	andeq	r1, r1, r4, asr #20
   116e4:	andeq	r1, r1, r4, asr #21
   116e8:			; <UNDEFINED> instruction: 0x000012bb
   116ec:	andeq	r1, r1, ip, asr #22
   116f0:	andeq	r1, r0, ip, lsl r3
   116f4:	andeq	r1, r1, r8, asr #23
   116f8:			; <UNDEFINED> instruction: 0x00011db8
   116fc:	andeq	r1, r1, r8, lsl lr
   11700:	andeq	r1, r1, r4, ror lr
   11704:	andeq	r1, r1, r4, ror #28
   11708:	andeq	r1, r1, r8, lsl #28
   1170c:	andeq	r1, r1, r8, lsr #27
   11710:			; <UNDEFINED> instruction: 0x00011ab4
   11714:	andeq	r1, r1, r4, asr #20
   11718:	andeq	r1, r1, ip, lsr #20

0001171c <vetor_novo@@Base>:
   1171c:	push	{fp, lr}
   11720:	mov	fp, sp
   11724:	sub	sp, sp, #8
   11728:	movw	r0, #12
   1172c:	bl	10cd8 <malloc@plt>
   11730:	str	r0, [sp]
   11734:	ldr	r0, [sp]
   11738:	movw	lr, #0
   1173c:	cmp	r0, lr
   11740:	bne	11750 <vetor_novo@@Base+0x34>
   11744:	movw	r0, #0
   11748:	str	r0, [sp, #4]
   1174c:	b	11774 <vetor_novo@@Base+0x58>
   11750:	ldr	r0, [sp]
   11754:	movw	r1, #0
   11758:	str	r1, [r0]
   1175c:	ldr	r0, [sp]
   11760:	str	r1, [r0, #4]
   11764:	ldr	r0, [sp]
   11768:	str	r1, [r0, #8]
   1176c:	ldr	r0, [sp]
   11770:	str	r0, [sp, #4]
   11774:	ldr	r0, [sp, #4]
   11778:	mov	sp, fp
   1177c:	pop	{fp, pc}

00011780 <vetor_apaga@@Base>:
   11780:	push	{fp, lr}
   11784:	mov	fp, sp
   11788:	sub	sp, sp, #8
   1178c:	str	r0, [sp, #4]
   11790:	ldr	r0, [sp, #4]
   11794:	movw	r1, #0
   11798:	cmp	r0, r1
   1179c:	bne	117a4 <vetor_apaga@@Base+0x24>
   117a0:	b	117fc <vetor_apaga@@Base+0x7c>
   117a4:	movw	r0, #0
   117a8:	str	r0, [sp]
   117ac:	ldr	r0, [sp]
   117b0:	ldr	r1, [sp, #4]
   117b4:	ldr	r1, [r1]
   117b8:	cmp	r0, r1
   117bc:	bge	117e8 <vetor_apaga@@Base+0x68>
   117c0:	ldr	r0, [sp, #4]
   117c4:	ldr	r0, [r0, #8]
   117c8:	ldr	r1, [sp]
   117cc:	add	r0, r0, r1, lsl #2
   117d0:	ldr	r0, [r0]
   117d4:	bl	10ca8 <free@plt>
   117d8:	ldr	r0, [sp]
   117dc:	add	r0, r0, #1
   117e0:	str	r0, [sp]
   117e4:	b	117ac <vetor_apaga@@Base+0x2c>
   117e8:	ldr	r0, [sp, #4]
   117ec:	ldr	r0, [r0, #8]
   117f0:	bl	10ca8 <free@plt>
   117f4:	ldr	r0, [sp, #4]
   117f8:	bl	10ca8 <free@plt>
   117fc:	mov	sp, fp
   11800:	pop	{fp, pc}

00011804 <vetor_atribui@@Base>:
   11804:	push	{fp, lr}
   11808:	mov	fp, sp
   1180c:	sub	sp, sp, #32
   11810:	str	r0, [fp, #-8]
   11814:	str	r1, [fp, #-12]
   11818:	str	r2, [sp, #16]
   1181c:	ldr	r0, [fp, #-8]
   11820:	movw	r1, #0
   11824:	cmp	r0, r1
   11828:	beq	1184c <vetor_atribui@@Base+0x48>
   1182c:	ldr	r0, [fp, #-12]
   11830:	cmp	r0, #0
   11834:	blt	1184c <vetor_atribui@@Base+0x48>
   11838:	ldr	r0, [fp, #-12]
   1183c:	ldr	r1, [fp, #-8]
   11840:	ldr	r1, [r1]
   11844:	cmp	r0, r1
   11848:	blt	11858 <vetor_atribui@@Base+0x54>
   1184c:	mvn	r0, #0
   11850:	str	r0, [fp, #-4]
   11854:	b	11918 <vetor_atribui@@Base+0x114>
   11858:	ldr	r0, [sp, #16]
   1185c:	bl	10cfc <strlen@plt>
   11860:	str	r0, [sp, #12]
   11864:	ldr	r0, [sp, #12]
   11868:	ldr	lr, [fp, #-8]
   1186c:	ldr	lr, [lr, #8]
   11870:	ldr	r1, [fp, #-12]
   11874:	add	r1, lr, r1, lsl #2
   11878:	ldr	r1, [r1]
   1187c:	str	r0, [sp, #8]
   11880:	mov	r0, r1
   11884:	bl	10cfc <strlen@plt>
   11888:	ldr	r1, [sp, #8]
   1188c:	cmp	r1, r0
   11890:	bls	118f0 <vetor_atribui@@Base+0xec>
   11894:	ldr	r0, [fp, #-8]
   11898:	ldr	r0, [r0, #8]
   1189c:	ldr	r1, [fp, #-12]
   118a0:	ldr	r0, [r0, r1, lsl #2]
   118a4:	ldr	r1, [sp, #12]
   118a8:	add	r1, r1, #1
   118ac:	bl	10cb4 <realloc@plt>
   118b0:	ldr	r1, [fp, #-8]
   118b4:	ldr	r1, [r1, #8]
   118b8:	ldr	lr, [fp, #-12]
   118bc:	str	r0, [r1, lr, lsl #2]
   118c0:	ldr	r0, [fp, #-8]
   118c4:	ldr	r0, [r0, #8]
   118c8:	ldr	r1, [fp, #-12]
   118cc:	add	r0, r0, r1, lsl #2
   118d0:	ldr	r0, [r0]
   118d4:	movw	r1, #0
   118d8:	cmp	r0, r1
   118dc:	bne	118ec <vetor_atribui@@Base+0xe8>
   118e0:	mvn	r0, #0
   118e4:	str	r0, [fp, #-4]
   118e8:	b	11918 <vetor_atribui@@Base+0x114>
   118ec:	b	118f0 <vetor_atribui@@Base+0xec>
   118f0:	ldr	r0, [fp, #-8]
   118f4:	ldr	r0, [r0, #8]
   118f8:	ldr	r1, [fp, #-12]
   118fc:	add	r0, r0, r1, lsl #2
   11900:	ldr	r0, [r0]
   11904:	ldr	r1, [sp, #16]
   11908:	bl	10cc0 <strcpy@plt>
   1190c:	ldr	r1, [fp, #-12]
   11910:	str	r1, [fp, #-4]
   11914:	str	r0, [sp, #4]
   11918:	ldr	r0, [fp, #-4]
   1191c:	mov	sp, fp
   11920:	pop	{fp, pc}

00011924 <vetor_tamanho@@Base>:
   11924:	sub	sp, sp, #8
   11928:	str	r0, [sp]
   1192c:	ldr	r0, [sp]
   11930:	movw	r1, #0
   11934:	cmp	r0, r1
   11938:	bne	11948 <vetor_tamanho@@Base+0x24>
   1193c:	mvn	r0, #0
   11940:	str	r0, [sp, #4]
   11944:	b	11954 <vetor_tamanho@@Base+0x30>
   11948:	ldr	r0, [sp]
   1194c:	ldr	r0, [r0]
   11950:	str	r0, [sp, #4]
   11954:	ldr	r0, [sp, #4]
   11958:	add	sp, sp, #8
   1195c:	bx	lr

00011960 <vetor_elemento@@Base>:
   11960:	sub	sp, sp, #12
   11964:	str	r0, [sp, #4]
   11968:	str	r1, [sp]
   1196c:	ldr	r0, [sp, #4]
   11970:	movw	r1, #0
   11974:	cmp	r0, r1
   11978:	beq	1199c <vetor_elemento@@Base+0x3c>
   1197c:	ldr	r0, [sp]
   11980:	cmp	r0, #0
   11984:	blt	1199c <vetor_elemento@@Base+0x3c>
   11988:	ldr	r0, [sp]
   1198c:	ldr	r1, [sp, #4]
   11990:	ldr	r1, [r1]
   11994:	cmp	r0, r1
   11998:	blt	119a8 <vetor_elemento@@Base+0x48>
   1199c:	movw	r0, #0
   119a0:	str	r0, [sp, #8]
   119a4:	b	119c0 <vetor_elemento@@Base+0x60>
   119a8:	ldr	r0, [sp, #4]
   119ac:	ldr	r0, [r0, #8]
   119b0:	ldr	r1, [sp]
   119b4:	add	r0, r0, r1, lsl #2
   119b8:	ldr	r0, [r0]
   119bc:	str	r0, [sp, #8]
   119c0:	ldr	r0, [sp, #8]
   119c4:	add	sp, sp, #12
   119c8:	bx	lr

000119cc <vetor_insere@@Base>:
   119cc:	push	{fp, lr}
   119d0:	mov	fp, sp
   119d4:	sub	sp, sp, #32
   119d8:	str	r0, [fp, #-8]
   119dc:	str	r1, [fp, #-12]
   119e0:	str	r2, [sp, #16]
   119e4:	ldr	r0, [fp, #-8]
   119e8:	movw	r1, #0
   119ec:	cmp	r0, r1
   119f0:	beq	11a14 <vetor_insere@@Base+0x48>
   119f4:	ldr	r0, [sp, #16]
   119f8:	cmp	r0, #0
   119fc:	blt	11a14 <vetor_insere@@Base+0x48>
   11a00:	ldr	r0, [sp, #16]
   11a04:	ldr	r1, [fp, #-8]
   11a08:	ldr	r1, [r1]
   11a0c:	cmp	r0, r1
   11a10:	ble	11a20 <vetor_insere@@Base+0x54>
   11a14:	mvn	r0, #0
   11a18:	str	r0, [fp, #-4]
   11a1c:	b	11b80 <vetor_insere@@Base+0x1b4>
   11a20:	ldr	r0, [fp, #-8]
   11a24:	ldr	r0, [r0]
   11a28:	ldr	r1, [fp, #-8]
   11a2c:	ldr	r1, [r1, #4]
   11a30:	cmp	r0, r1
   11a34:	bne	11aa8 <vetor_insere@@Base+0xdc>
   11a38:	ldr	r0, [fp, #-8]
   11a3c:	ldr	r0, [r0, #4]
   11a40:	cmp	r0, #0
   11a44:	bne	11a58 <vetor_insere@@Base+0x8c>
   11a48:	ldr	r0, [fp, #-8]
   11a4c:	movw	r1, #1
   11a50:	str	r1, [r0, #4]
   11a54:	b	11a68 <vetor_insere@@Base+0x9c>
   11a58:	ldr	r0, [fp, #-8]
   11a5c:	ldr	r1, [r0, #4]
   11a60:	lsl	r1, r1, #1
   11a64:	str	r1, [r0, #4]
   11a68:	ldr	r0, [fp, #-8]
   11a6c:	ldr	r1, [r0, #4]
   11a70:	ldr	r0, [r0, #8]
   11a74:	lsl	r1, r1, #2
   11a78:	bl	10cb4 <realloc@plt>
   11a7c:	ldr	r1, [fp, #-8]
   11a80:	str	r0, [r1, #8]
   11a84:	ldr	r0, [fp, #-8]
   11a88:	ldr	r0, [r0, #8]
   11a8c:	movw	r1, #0
   11a90:	cmp	r0, r1
   11a94:	bne	11aa4 <vetor_insere@@Base+0xd8>
   11a98:	mvn	r0, #0
   11a9c:	str	r0, [fp, #-4]
   11aa0:	b	11b80 <vetor_insere@@Base+0x1b4>
   11aa4:	b	11aa8 <vetor_insere@@Base+0xdc>
   11aa8:	ldr	r0, [fp, #-8]
   11aac:	ldr	r0, [r0]
   11ab0:	sub	r0, r0, #1
   11ab4:	str	r0, [sp, #12]
   11ab8:	ldr	r0, [sp, #12]
   11abc:	ldr	r1, [sp, #16]
   11ac0:	cmp	r0, r1
   11ac4:	blt	11af8 <vetor_insere@@Base+0x12c>
   11ac8:	ldr	r0, [fp, #-8]
   11acc:	ldr	r0, [r0, #8]
   11ad0:	ldr	r1, [sp, #12]
   11ad4:	add	r0, r0, r1, lsl #2
   11ad8:	add	r1, r0, #4
   11adc:	ldr	r0, [r0]
   11ae0:	str	r0, [r1]
   11ae4:	ldr	r0, [sp, #12]
   11ae8:	mvn	r1, #0
   11aec:	add	r0, r0, r1
   11af0:	str	r0, [sp, #12]
   11af4:	b	11ab8 <vetor_insere@@Base+0xec>
   11af8:	ldr	r0, [fp, #-12]
   11afc:	bl	10cfc <strlen@plt>
   11b00:	add	r0, r0, #1
   11b04:	mov	r1, #1
   11b08:	bl	10c84 <calloc@plt>
   11b0c:	ldr	r1, [fp, #-8]
   11b10:	ldr	r1, [r1, #8]
   11b14:	ldr	lr, [sp, #16]
   11b18:	str	r0, [r1, lr, lsl #2]
   11b1c:	ldr	r0, [fp, #-8]
   11b20:	ldr	r0, [r0, #8]
   11b24:	ldr	r1, [sp, #16]
   11b28:	add	r0, r0, r1, lsl #2
   11b2c:	ldr	r0, [r0]
   11b30:	movw	r1, #0
   11b34:	cmp	r0, r1
   11b38:	bne	11b48 <vetor_insere@@Base+0x17c>
   11b3c:	mvn	r0, #0
   11b40:	str	r0, [fp, #-4]
   11b44:	b	11b80 <vetor_insere@@Base+0x1b4>
   11b48:	ldr	r0, [fp, #-8]
   11b4c:	ldr	r0, [r0, #8]
   11b50:	ldr	r1, [sp, #16]
   11b54:	add	r0, r0, r1, lsl #2
   11b58:	ldr	r0, [r0]
   11b5c:	ldr	r1, [fp, #-12]
   11b60:	bl	10cc0 <strcpy@plt>
   11b64:	ldr	r1, [fp, #-8]
   11b68:	ldr	lr, [r1]
   11b6c:	add	lr, lr, #1
   11b70:	str	lr, [r1]
   11b74:	ldr	r1, [sp, #16]
   11b78:	str	r1, [fp, #-4]
   11b7c:	str	r0, [sp, #4]
   11b80:	ldr	r0, [fp, #-4]
   11b84:	mov	sp, fp
   11b88:	pop	{fp, pc}

00011b8c <vetor_remove@@Base>:
   11b8c:	push	{fp, lr}
   11b90:	mov	fp, sp
   11b94:	sub	sp, sp, #16
   11b98:	str	r0, [sp, #8]
   11b9c:	str	r1, [sp, #4]
   11ba0:	ldr	r0, [sp, #8]
   11ba4:	movw	r1, #0
   11ba8:	cmp	r0, r1
   11bac:	beq	11bd0 <vetor_remove@@Base+0x44>
   11bb0:	ldr	r0, [sp, #4]
   11bb4:	cmp	r0, #0
   11bb8:	blt	11bd0 <vetor_remove@@Base+0x44>
   11bbc:	ldr	r0, [sp, #4]
   11bc0:	ldr	r1, [sp, #8]
   11bc4:	ldr	r1, [r1]
   11bc8:	cmp	r0, r1
   11bcc:	blt	11bdc <vetor_remove@@Base+0x50>
   11bd0:	mvn	r0, #0
   11bd4:	str	r0, [fp, #-4]
   11bd8:	b	11c5c <vetor_remove@@Base+0xd0>
   11bdc:	ldr	r0, [sp, #8]
   11be0:	ldr	r0, [r0, #8]
   11be4:	ldr	r1, [sp, #4]
   11be8:	add	r0, r0, r1, lsl #2
   11bec:	ldr	r0, [r0]
   11bf0:	bl	10ca8 <free@plt>
   11bf4:	ldr	r0, [sp, #4]
   11bf8:	add	r0, r0, #1
   11bfc:	str	r0, [sp]
   11c00:	ldr	r0, [sp]
   11c04:	ldr	r1, [sp, #8]
   11c08:	ldr	r1, [r1]
   11c0c:	cmp	r0, r1
   11c10:	bge	11c40 <vetor_remove@@Base+0xb4>
   11c14:	ldr	r0, [sp, #8]
   11c18:	ldr	r0, [r0, #8]
   11c1c:	ldr	r1, [sp]
   11c20:	add	r0, r0, r1, lsl #2
   11c24:	sub	r1, r0, #4
   11c28:	ldr	r0, [r0]
   11c2c:	str	r0, [r1]
   11c30:	ldr	r0, [sp]
   11c34:	add	r0, r0, #1
   11c38:	str	r0, [sp]
   11c3c:	b	11c00 <vetor_remove@@Base+0x74>
   11c40:	ldr	r0, [sp, #8]
   11c44:	ldr	r1, [r0]
   11c48:	mvn	r2, #0
   11c4c:	add	r1, r1, r2
   11c50:	str	r1, [r0]
   11c54:	movw	r0, #0
   11c58:	str	r0, [fp, #-4]
   11c5c:	ldr	r0, [fp, #-4]
   11c60:	mov	sp, fp
   11c64:	pop	{fp, pc}

00011c68 <vetor_pesquisa@@Base>:
   11c68:	push	{fp, lr}
   11c6c:	mov	fp, sp
   11c70:	sub	sp, sp, #16
   11c74:	str	r0, [sp, #8]
   11c78:	str	r1, [sp, #4]
   11c7c:	ldr	r0, [sp, #8]
   11c80:	movw	r1, #0
   11c84:	cmp	r0, r1
   11c88:	bne	11c98 <vetor_pesquisa@@Base+0x30>
   11c8c:	mvn	r0, #0
   11c90:	str	r0, [fp, #-4]
   11c94:	b	11d00 <vetor_pesquisa@@Base+0x98>
   11c98:	movw	r0, #0
   11c9c:	str	r0, [sp]
   11ca0:	ldr	r0, [sp]
   11ca4:	ldr	r1, [sp, #8]
   11ca8:	ldr	r1, [r1]
   11cac:	cmp	r0, r1
   11cb0:	bge	11cf8 <vetor_pesquisa@@Base+0x90>
   11cb4:	ldr	r0, [sp, #8]
   11cb8:	ldr	r0, [r0, #8]
   11cbc:	ldr	r1, [sp]
   11cc0:	add	r0, r0, r1, lsl #2
   11cc4:	ldr	r0, [r0]
   11cc8:	ldr	r1, [sp, #4]
   11ccc:	bl	10c90 <strcmp@plt>
   11cd0:	cmp	r0, #0
   11cd4:	bne	11ce4 <vetor_pesquisa@@Base+0x7c>
   11cd8:	ldr	r0, [sp]
   11cdc:	str	r0, [fp, #-4]
   11ce0:	b	11d00 <vetor_pesquisa@@Base+0x98>
   11ce4:	b	11ce8 <vetor_pesquisa@@Base+0x80>
   11ce8:	ldr	r0, [sp]
   11cec:	add	r0, r0, #1
   11cf0:	str	r0, [sp]
   11cf4:	b	11ca0 <vetor_pesquisa@@Base+0x38>
   11cf8:	mvn	r0, #0
   11cfc:	str	r0, [fp, #-4]
   11d00:	ldr	r0, [fp, #-4]
   11d04:	mov	sp, fp
   11d08:	pop	{fp, pc}

00011d0c <vetor_ordena@@Base>:
   11d0c:	push	{fp, lr}
   11d10:	mov	fp, sp
   11d14:	sub	sp, sp, #24
   11d18:	str	r0, [fp, #-8]
   11d1c:	ldr	r0, [fp, #-8]
   11d20:	movw	r1, #0
   11d24:	cmp	r0, r1
   11d28:	bne	11d38 <vetor_ordena@@Base+0x2c>
   11d2c:	mvn	r0, #0
   11d30:	str	r0, [fp, #-4]
   11d34:	b	11e28 <vetor_ordena@@Base+0x11c>
   11d38:	movw	r0, #1
   11d3c:	str	r0, [sp, #12]
   11d40:	ldr	r0, [sp, #12]
   11d44:	ldr	r1, [fp, #-8]
   11d48:	ldr	r1, [r1]
   11d4c:	cmp	r0, r1
   11d50:	bge	11e20 <vetor_ordena@@Base+0x114>
   11d54:	ldr	r0, [fp, #-8]
   11d58:	ldr	r0, [r0, #8]
   11d5c:	ldr	r1, [sp, #12]
   11d60:	add	r0, r0, r1, lsl #2
   11d64:	ldr	r0, [r0]
   11d68:	str	r0, [sp, #4]
   11d6c:	ldr	r0, [sp, #12]
   11d70:	str	r0, [sp, #8]
   11d74:	ldr	r0, [sp, #8]
   11d78:	cmp	r0, #0
   11d7c:	movw	r0, #0
   11d80:	str	r0, [sp]
   11d84:	ble	11db8 <vetor_ordena@@Base+0xac>
   11d88:	ldr	r0, [sp, #4]
   11d8c:	ldr	r1, [fp, #-8]
   11d90:	ldr	r1, [r1, #8]
   11d94:	ldr	r2, [sp, #8]
   11d98:	sub	r2, r2, #1
   11d9c:	add	r1, r1, r2, lsl #2
   11da0:	ldr	r1, [r1]
   11da4:	bl	10c90 <strcmp@plt>
   11da8:	cmp	r0, #0
   11dac:	movw	r0, #0
   11db0:	movlt	r0, #1
   11db4:	str	r0, [sp]
   11db8:	ldr	r0, [sp]
   11dbc:	tst	r0, #1
   11dc0:	beq	11df8 <vetor_ordena@@Base+0xec>
   11dc4:	ldr	r0, [fp, #-8]
   11dc8:	ldr	r0, [r0, #8]
   11dcc:	ldr	r1, [sp, #8]
   11dd0:	add	r2, r0, r1, lsl #2
   11dd4:	sub	r1, r1, #1
   11dd8:	add	r0, r0, r1, lsl #2
   11ddc:	ldr	r0, [r0]
   11de0:	str	r0, [r2]
   11de4:	ldr	r0, [sp, #8]
   11de8:	mvn	r1, #0
   11dec:	add	r0, r0, r1
   11df0:	str	r0, [sp, #8]
   11df4:	b	11d74 <vetor_ordena@@Base+0x68>
   11df8:	ldr	r0, [sp, #4]
   11dfc:	ldr	r1, [fp, #-8]
   11e00:	ldr	r1, [r1, #8]
   11e04:	ldr	r2, [sp, #8]
   11e08:	add	r1, r1, r2, lsl #2
   11e0c:	str	r0, [r1]
   11e10:	ldr	r0, [sp, #12]
   11e14:	add	r0, r0, #1
   11e18:	str	r0, [sp, #12]
   11e1c:	b	11d40 <vetor_ordena@@Base+0x34>
   11e20:	movw	r0, #0
   11e24:	str	r0, [fp, #-4]
   11e28:	ldr	r0, [fp, #-4]
   11e2c:	mov	sp, fp
   11e30:	pop	{fp, pc}

00011e34 <novo_str@@Base>:
   11e34:	push	{fp, lr}
   11e38:	mov	fp, sp
   11e3c:	sub	sp, sp, #24
   11e40:	str	r0, [fp, #-8]
   11e44:	movw	r0, #12
   11e48:	bl	10cd8 <malloc@plt>
   11e4c:	str	r0, [sp, #12]
   11e50:	ldr	r0, [sp, #12]
   11e54:	movw	lr, #0
   11e58:	cmp	r0, lr
   11e5c:	bne	11e6c <novo_str@@Base+0x38>
   11e60:	movw	r0, #0
   11e64:	str	r0, [fp, #-4]
   11e68:	b	11ee4 <novo_str@@Base+0xb0>
   11e6c:	ldr	r0, [fp, #-8]
   11e70:	bl	10cfc <strlen@plt>
   11e74:	add	r0, r0, #1
   11e78:	mov	lr, r0
   11e7c:	str	lr, [sp, #8]
   11e80:	bl	10cd8 <malloc@plt>
   11e84:	ldr	lr, [sp, #12]
   11e88:	str	r0, [lr]
   11e8c:	ldr	r0, [sp, #12]
   11e90:	ldr	r0, [r0]
   11e94:	movw	lr, #0
   11e98:	cmp	r0, lr
   11e9c:	bne	11eb4 <novo_str@@Base+0x80>
   11ea0:	ldr	r0, [sp, #12]
   11ea4:	bl	10ca8 <free@plt>
   11ea8:	movw	r0, #0
   11eac:	str	r0, [fp, #-4]
   11eb0:	b	11ee4 <novo_str@@Base+0xb0>
   11eb4:	ldr	r0, [sp, #12]
   11eb8:	ldr	r0, [r0]
   11ebc:	ldr	r1, [fp, #-8]
   11ec0:	bl	10cc0 <strcpy@plt>
   11ec4:	ldr	r1, [sp, #12]
   11ec8:	movw	lr, #0
   11ecc:	str	lr, [r1, #4]
   11ed0:	ldr	r1, [sp, #12]
   11ed4:	str	lr, [r1, #8]
   11ed8:	ldr	r1, [sp, #12]
   11edc:	str	r1, [fp, #-4]
   11ee0:	str	r0, [sp, #4]
   11ee4:	ldr	r0, [fp, #-4]
   11ee8:	mov	sp, fp
   11eec:	pop	{fp, pc}

00011ef0 <lista_nova@@Base>:
   11ef0:	push	{fp, lr}
   11ef4:	mov	fp, sp
   11ef8:	sub	sp, sp, #8
   11efc:	movw	r0, #12
   11f00:	bl	10cd8 <malloc@plt>
   11f04:	str	r0, [sp]
   11f08:	ldr	r0, [sp]
   11f0c:	movw	lr, #0
   11f10:	cmp	r0, lr
   11f14:	bne	11f24 <lista_nova@@Base+0x34>
   11f18:	movw	r0, #0
   11f1c:	str	r0, [sp, #4]
   11f20:	b	11f48 <lista_nova@@Base+0x58>
   11f24:	ldr	r0, [sp]
   11f28:	movw	r1, #0
   11f2c:	str	r1, [r0]
   11f30:	ldr	r0, [sp]
   11f34:	str	r1, [r0, #4]
   11f38:	ldr	r0, [sp]
   11f3c:	str	r1, [r0, #8]
   11f40:	ldr	r0, [sp]
   11f44:	str	r0, [sp, #4]
   11f48:	ldr	r0, [sp, #4]
   11f4c:	mov	sp, fp
   11f50:	pop	{fp, pc}

00011f54 <lista_apaga@@Base>:
   11f54:	push	{fp, lr}
   11f58:	mov	fp, sp
   11f5c:	sub	sp, sp, #8
   11f60:	str	r0, [sp, #4]
   11f64:	ldr	r0, [sp, #4]
   11f68:	movw	r1, #0
   11f6c:	cmp	r0, r1
   11f70:	bne	11f78 <lista_apaga@@Base+0x24>
   11f74:	b	11fd0 <lista_apaga@@Base+0x7c>
   11f78:	b	11f7c <lista_apaga@@Base+0x28>
   11f7c:	ldr	r0, [sp, #4]
   11f80:	ldr	r0, [r0]
   11f84:	movw	r1, #0
   11f88:	cmp	r0, r1
   11f8c:	beq	11fc8 <lista_apaga@@Base+0x74>
   11f90:	ldr	r0, [sp, #4]
   11f94:	ldr	r0, [r0]
   11f98:	str	r0, [sp]
   11f9c:	ldr	r0, [sp, #4]
   11fa0:	ldr	r0, [r0]
   11fa4:	ldr	r0, [r0, #4]
   11fa8:	ldr	r1, [sp, #4]
   11fac:	str	r0, [r1]
   11fb0:	ldr	r0, [sp]
   11fb4:	ldr	r0, [r0]
   11fb8:	bl	10ca8 <free@plt>
   11fbc:	ldr	r0, [sp]
   11fc0:	bl	10ca8 <free@plt>
   11fc4:	b	11f7c <lista_apaga@@Base+0x28>
   11fc8:	ldr	r0, [sp, #4]
   11fcc:	bl	10ca8 <free@plt>
   11fd0:	mov	sp, fp
   11fd4:	pop	{fp, pc}

00011fd8 <lista_tamanho@@Base>:
   11fd8:	sub	sp, sp, #8
   11fdc:	str	r0, [sp]
   11fe0:	ldr	r0, [sp]
   11fe4:	movw	r1, #0
   11fe8:	cmp	r0, r1
   11fec:	bne	11ffc <lista_tamanho@@Base+0x24>
   11ff0:	mvn	r0, #0
   11ff4:	str	r0, [sp, #4]
   11ff8:	b	12008 <lista_tamanho@@Base+0x30>
   11ffc:	ldr	r0, [sp]
   12000:	ldr	r0, [r0, #8]
   12004:	str	r0, [sp, #4]
   12008:	ldr	r0, [sp, #4]
   1200c:	add	sp, sp, #8
   12010:	bx	lr

00012014 <lista_inicio@@Base>:
   12014:	sub	sp, sp, #8
   12018:	str	r0, [sp]
   1201c:	ldr	r0, [sp]
   12020:	movw	r1, #0
   12024:	cmp	r0, r1
   12028:	bne	12038 <lista_inicio@@Base+0x24>
   1202c:	movw	r0, #0
   12030:	str	r0, [sp, #4]
   12034:	b	12044 <lista_inicio@@Base+0x30>
   12038:	ldr	r0, [sp]
   1203c:	ldr	r0, [r0]
   12040:	str	r0, [sp, #4]
   12044:	ldr	r0, [sp, #4]
   12048:	add	sp, sp, #8
   1204c:	bx	lr

00012050 <lista_fim@@Base>:
   12050:	sub	sp, sp, #8
   12054:	str	r0, [sp]
   12058:	ldr	r0, [sp]
   1205c:	movw	r1, #0
   12060:	cmp	r0, r1
   12064:	bne	12074 <lista_fim@@Base+0x24>
   12068:	movw	r0, #0
   1206c:	str	r0, [sp, #4]
   12070:	b	12080 <lista_fim@@Base+0x30>
   12074:	ldr	r0, [sp]
   12078:	ldr	r0, [r0, #4]
   1207c:	str	r0, [sp, #4]
   12080:	ldr	r0, [sp, #4]
   12084:	add	sp, sp, #8
   12088:	bx	lr

0001208c <lista_insere@@Base>:
   1208c:	push	{fp, lr}
   12090:	mov	fp, sp
   12094:	sub	sp, sp, #24
   12098:	str	r0, [fp, #-8]
   1209c:	str	r1, [sp, #12]
   120a0:	str	r2, [sp, #8]
   120a4:	movw	r0, #0
   120a8:	str	r0, [sp, #4]
   120ac:	ldr	r1, [fp, #-8]
   120b0:	cmp	r1, r0
   120b4:	beq	120c8 <lista_insere@@Base+0x3c>
   120b8:	ldr	r0, [sp, #12]
   120bc:	movw	r1, #0
   120c0:	cmp	r0, r1
   120c4:	bne	120d4 <lista_insere@@Base+0x48>
   120c8:	movw	r0, #0
   120cc:	str	r0, [fp, #-4]
   120d0:	b	1220c <lista_insere@@Base+0x180>
   120d4:	ldr	r0, [sp, #12]
   120d8:	bl	11e34 <novo_str@@Base>
   120dc:	str	r0, [sp, #4]
   120e0:	ldr	r0, [sp, #4]
   120e4:	movw	lr, #0
   120e8:	cmp	r0, lr
   120ec:	bne	120fc <lista_insere@@Base+0x70>
   120f0:	movw	r0, #0
   120f4:	str	r0, [fp, #-4]
   120f8:	b	1220c <lista_insere@@Base+0x180>
   120fc:	ldr	r0, [fp, #-8]
   12100:	ldr	r1, [r0, #8]
   12104:	add	r1, r1, #1
   12108:	str	r1, [r0, #8]
   1210c:	ldr	r0, [sp, #8]
   12110:	movw	r1, #0
   12114:	cmp	r0, r1
   12118:	bne	12180 <lista_insere@@Base+0xf4>
   1211c:	ldr	r0, [fp, #-8]
   12120:	ldr	r0, [r0]
   12124:	movw	r1, #0
   12128:	cmp	r0, r1
   1212c:	bne	12148 <lista_insere@@Base+0xbc>
   12130:	ldr	r0, [sp, #4]
   12134:	ldr	r1, [fp, #-8]
   12138:	str	r0, [r1, #4]
   1213c:	ldr	r1, [fp, #-8]
   12140:	str	r0, [r1]
   12144:	b	12174 <lista_insere@@Base+0xe8>
   12148:	ldr	r0, [fp, #-8]
   1214c:	ldr	r0, [r0, #4]
   12150:	ldr	r1, [sp, #4]
   12154:	str	r0, [r1, #8]
   12158:	ldr	r0, [sp, #4]
   1215c:	ldr	r1, [fp, #-8]
   12160:	ldr	r1, [r1, #4]
   12164:	str	r0, [r1, #4]
   12168:	ldr	r0, [sp, #4]
   1216c:	ldr	r1, [fp, #-8]
   12170:	str	r0, [r1, #4]
   12174:	ldr	r0, [sp, #4]
   12178:	str	r0, [fp, #-4]
   1217c:	b	1220c <lista_insere@@Base+0x180>
   12180:	ldr	r0, [sp, #8]
   12184:	ldr	r1, [fp, #-8]
   12188:	ldr	r1, [r1]
   1218c:	cmp	r0, r1
   12190:	bne	121cc <lista_insere@@Base+0x140>
   12194:	ldr	r0, [fp, #-8]
   12198:	ldr	r0, [r0]
   1219c:	ldr	r1, [sp, #4]
   121a0:	str	r0, [r1, #4]
   121a4:	ldr	r0, [sp, #4]
   121a8:	ldr	r1, [fp, #-8]
   121ac:	ldr	r1, [r1]
   121b0:	str	r0, [r1, #8]
   121b4:	ldr	r0, [sp, #4]
   121b8:	ldr	r1, [fp, #-8]
   121bc:	str	r0, [r1]
   121c0:	ldr	r0, [sp, #4]
   121c4:	str	r0, [fp, #-4]
   121c8:	b	1220c <lista_insere@@Base+0x180>
   121cc:	ldr	r0, [sp, #8]
   121d0:	ldr	r0, [r0, #8]
   121d4:	ldr	r1, [sp, #4]
   121d8:	str	r0, [r1, #8]
   121dc:	ldr	r0, [sp, #8]
   121e0:	ldr	r1, [sp, #4]
   121e4:	str	r0, [r1, #4]
   121e8:	ldr	r0, [sp, #4]
   121ec:	ldr	r1, [sp, #8]
   121f0:	ldr	r1, [r1, #8]
   121f4:	str	r0, [r1, #4]
   121f8:	ldr	r0, [sp, #4]
   121fc:	ldr	r1, [sp, #8]
   12200:	str	r0, [r1, #8]
   12204:	ldr	r0, [sp, #4]
   12208:	str	r0, [fp, #-4]
   1220c:	ldr	r0, [fp, #-4]
   12210:	mov	sp, fp
   12214:	pop	{fp, pc}

00012218 <lista_remove@@Base>:
   12218:	push	{fp, lr}
   1221c:	mov	fp, sp
   12220:	sub	sp, sp, #16
   12224:	str	r0, [sp, #8]
   12228:	str	r1, [sp, #4]
   1222c:	ldr	r0, [sp, #8]
   12230:	movw	r1, #0
   12234:	cmp	r0, r1
   12238:	beq	1224c <lista_remove@@Base+0x34>
   1223c:	ldr	r0, [sp, #4]
   12240:	movw	r1, #0
   12244:	cmp	r0, r1
   12248:	bne	12258 <lista_remove@@Base+0x40>
   1224c:	movw	r0, #0
   12250:	str	r0, [fp, #-4]
   12254:	b	1230c <lista_remove@@Base+0xf4>
   12258:	ldr	r0, [sp, #8]
   1225c:	ldr	r1, [r0, #8]
   12260:	mvn	r2, #0
   12264:	add	r1, r1, r2
   12268:	str	r1, [r0, #8]
   1226c:	ldr	r0, [sp, #4]
   12270:	ldr	r0, [r0, #8]
   12274:	movw	r1, #0
   12278:	cmp	r0, r1
   1227c:	beq	12298 <lista_remove@@Base+0x80>
   12280:	ldr	r0, [sp, #4]
   12284:	ldr	r0, [r0, #4]
   12288:	ldr	r1, [sp, #4]
   1228c:	ldr	r1, [r1, #8]
   12290:	str	r0, [r1, #4]
   12294:	b	122a8 <lista_remove@@Base+0x90>
   12298:	ldr	r0, [sp, #4]
   1229c:	ldr	r0, [r0, #4]
   122a0:	ldr	r1, [sp, #8]
   122a4:	str	r0, [r1]
   122a8:	ldr	r0, [sp, #4]
   122ac:	ldr	r0, [r0, #4]
   122b0:	movw	r1, #0
   122b4:	cmp	r0, r1
   122b8:	beq	122d4 <lista_remove@@Base+0xbc>
   122bc:	ldr	r0, [sp, #4]
   122c0:	ldr	r0, [r0, #8]
   122c4:	ldr	r1, [sp, #4]
   122c8:	ldr	r1, [r1, #4]
   122cc:	str	r0, [r1, #8]
   122d0:	b	122e4 <lista_remove@@Base+0xcc>
   122d4:	ldr	r0, [sp, #4]
   122d8:	ldr	r0, [r0, #8]
   122dc:	ldr	r1, [sp, #8]
   122e0:	str	r0, [r1, #4]
   122e4:	ldr	r0, [sp, #4]
   122e8:	ldr	r0, [r0, #4]
   122ec:	str	r0, [sp]
   122f0:	ldr	r0, [sp, #4]
   122f4:	ldr	r0, [r0]
   122f8:	bl	10ca8 <free@plt>
   122fc:	ldr	r0, [sp, #4]
   12300:	bl	10ca8 <free@plt>
   12304:	ldr	r0, [sp]
   12308:	str	r0, [fp, #-4]
   1230c:	ldr	r0, [fp, #-4]
   12310:	mov	sp, fp
   12314:	pop	{fp, pc}

00012318 <lista_pesquisa@@Base>:
   12318:	push	{fp, lr}
   1231c:	mov	fp, sp
   12320:	sub	sp, sp, #24
   12324:	str	r0, [fp, #-8]
   12328:	str	r1, [sp, #12]
   1232c:	str	r2, [sp, #8]
   12330:	ldr	r0, [fp, #-8]
   12334:	movw	r1, #0
   12338:	cmp	r0, r1
   1233c:	beq	12368 <lista_pesquisa@@Base+0x50>
   12340:	ldr	r0, [sp, #12]
   12344:	movw	r1, #0
   12348:	cmp	r0, r1
   1234c:	beq	12368 <lista_pesquisa@@Base+0x50>
   12350:	ldr	r0, [sp, #8]
   12354:	cmp	r0, #0
   12358:	beq	12374 <lista_pesquisa@@Base+0x5c>
   1235c:	ldr	r0, [sp, #8]
   12360:	cmp	r0, #1
   12364:	beq	12374 <lista_pesquisa@@Base+0x5c>
   12368:	movw	r0, #0
   1236c:	str	r0, [fp, #-4]
   12370:	b	1243c <lista_pesquisa@@Base+0x124>
   12374:	ldr	r0, [sp, #8]
   12378:	cmp	r0, #0
   1237c:	bne	123e0 <lista_pesquisa@@Base+0xc8>
   12380:	ldr	r0, [fp, #-8]
   12384:	ldr	r0, [r0]
   12388:	str	r0, [sp, #4]
   1238c:	ldr	r0, [sp, #4]
   12390:	movw	r1, #0
   12394:	cmp	r0, r1
   12398:	beq	123d4 <lista_pesquisa@@Base+0xbc>
   1239c:	ldr	r0, [sp, #4]
   123a0:	ldr	r0, [r0]
   123a4:	ldr	r1, [sp, #12]
   123a8:	bl	10c90 <strcmp@plt>
   123ac:	cmp	r0, #0
   123b0:	bne	123c0 <lista_pesquisa@@Base+0xa8>
   123b4:	ldr	r0, [sp, #4]
   123b8:	str	r0, [fp, #-4]
   123bc:	b	1243c <lista_pesquisa@@Base+0x124>
   123c0:	b	123c4 <lista_pesquisa@@Base+0xac>
   123c4:	ldr	r0, [sp, #4]
   123c8:	ldr	r0, [r0, #4]
   123cc:	str	r0, [sp, #4]
   123d0:	b	1238c <lista_pesquisa@@Base+0x74>
   123d4:	movw	r0, #0
   123d8:	str	r0, [fp, #-4]
   123dc:	b	1243c <lista_pesquisa@@Base+0x124>
   123e0:	ldr	r0, [fp, #-8]
   123e4:	ldr	r0, [r0, #4]
   123e8:	str	r0, [sp, #4]
   123ec:	ldr	r0, [sp, #4]
   123f0:	movw	r1, #0
   123f4:	cmp	r0, r1
   123f8:	beq	12434 <lista_pesquisa@@Base+0x11c>
   123fc:	ldr	r0, [sp, #4]
   12400:	ldr	r0, [r0]
   12404:	ldr	r1, [sp, #12]
   12408:	bl	10c90 <strcmp@plt>
   1240c:	cmp	r0, #0
   12410:	bne	12420 <lista_pesquisa@@Base+0x108>
   12414:	ldr	r0, [sp, #4]
   12418:	str	r0, [fp, #-4]
   1241c:	b	1243c <lista_pesquisa@@Base+0x124>
   12420:	b	12424 <lista_pesquisa@@Base+0x10c>
   12424:	ldr	r0, [sp, #4]
   12428:	ldr	r0, [r0, #8]
   1242c:	str	r0, [sp, #4]
   12430:	b	123ec <lista_pesquisa@@Base+0xd4>
   12434:	movw	r0, #0
   12438:	str	r0, [fp, #-4]
   1243c:	ldr	r0, [fp, #-4]
   12440:	mov	sp, fp
   12444:	pop	{fp, pc}

00012448 <lista_ordena@@Base>:
   12448:	push	{fp, lr}
   1244c:	mov	fp, sp
   12450:	sub	sp, sp, #24
   12454:	str	r0, [fp, #-8]
   12458:	ldr	r0, [fp, #-8]
   1245c:	movw	r1, #0
   12460:	cmp	r0, r1
   12464:	bne	12474 <lista_ordena@@Base+0x2c>
   12468:	mvn	r0, #0
   1246c:	str	r0, [fp, #-4]
   12470:	b	12540 <lista_ordena@@Base+0xf8>
   12474:	ldr	r0, [fp, #-8]
   12478:	ldr	r0, [r0]
   1247c:	str	r0, [sp, #8]
   12480:	ldr	r0, [sp, #8]
   12484:	ldr	r0, [r0, #4]
   12488:	movw	r1, #0
   1248c:	cmp	r0, r1
   12490:	beq	12538 <lista_ordena@@Base+0xf0>
   12494:	ldr	r0, [sp, #8]
   12498:	str	r0, [sp, #4]
   1249c:	ldr	r0, [sp, #8]
   124a0:	ldr	r0, [r0, #4]
   124a4:	str	r0, [sp, #12]
   124a8:	ldr	r0, [sp, #12]
   124ac:	movw	r1, #0
   124b0:	cmp	r0, r1
   124b4:	beq	124ec <lista_ordena@@Base+0xa4>
   124b8:	ldr	r0, [sp, #12]
   124bc:	ldr	r0, [r0]
   124c0:	ldr	r1, [sp, #4]
   124c4:	ldr	r1, [r1]
   124c8:	bl	10c90 <strcmp@plt>
   124cc:	cmp	r0, #0
   124d0:	bge	124dc <lista_ordena@@Base+0x94>
   124d4:	ldr	r0, [sp, #12]
   124d8:	str	r0, [sp, #4]
   124dc:	ldr	r0, [sp, #12]
   124e0:	ldr	r0, [r0, #4]
   124e4:	str	r0, [sp, #12]
   124e8:	b	124a8 <lista_ordena@@Base+0x60>
   124ec:	ldr	r0, [sp, #4]
   124f0:	ldr	r1, [sp, #8]
   124f4:	cmp	r0, r1
   124f8:	beq	12524 <lista_ordena@@Base+0xdc>
   124fc:	ldr	r0, [sp, #8]
   12500:	ldr	r0, [r0]
   12504:	str	r0, [sp]
   12508:	ldr	r0, [sp, #4]
   1250c:	ldr	r0, [r0]
   12510:	ldr	r1, [sp, #8]
   12514:	str	r0, [r1]
   12518:	ldr	r0, [sp]
   1251c:	ldr	r1, [sp, #4]
   12520:	str	r0, [r1]
   12524:	b	12528 <lista_ordena@@Base+0xe0>
   12528:	ldr	r0, [sp, #8]
   1252c:	ldr	r0, [r0, #4]
   12530:	str	r0, [sp, #8]
   12534:	b	12480 <lista_ordena@@Base+0x38>
   12538:	movw	r0, #0
   1253c:	str	r0, [fp, #-4]
   12540:	ldr	r0, [fp, #-4]
   12544:	mov	sp, fp
   12548:	pop	{fp, pc}

0001254c <lista_inverte@@Base>:
   1254c:	sub	sp, sp, #20
   12550:	str	r0, [sp, #12]
   12554:	ldr	r0, [sp, #12]
   12558:	movw	r1, #0
   1255c:	cmp	r0, r1
   12560:	bne	12570 <lista_inverte@@Base+0x24>
   12564:	mvn	r0, #0
   12568:	str	r0, [sp, #16]
   1256c:	b	12698 <lista_inverte@@Base+0x14c>
   12570:	ldr	r0, [sp, #12]
   12574:	ldr	r0, [r0, #8]
   12578:	cmp	r0, #2
   1257c:	bge	1258c <lista_inverte@@Base+0x40>
   12580:	movw	r0, #0
   12584:	str	r0, [sp, #16]
   12588:	b	12698 <lista_inverte@@Base+0x14c>
   1258c:	ldr	r0, [sp, #12]
   12590:	ldr	r0, [r0]
   12594:	ldr	r0, [r0, #4]
   12598:	str	r0, [sp, #4]
   1259c:	movw	r0, #0
   125a0:	str	r0, [sp, #8]
   125a4:	ldr	r0, [sp, #8]
   125a8:	ldr	r1, [sp, #12]
   125ac:	ldr	r1, [r1, #8]
   125b0:	sub	r1, r1, #2
   125b4:	cmp	r0, r1
   125b8:	bge	12634 <lista_inverte@@Base+0xe8>
   125bc:	ldr	r0, [sp, #4]
   125c0:	ldr	r0, [r0, #4]
   125c4:	ldr	r1, [sp, #4]
   125c8:	ldr	r1, [r1, #8]
   125cc:	str	r0, [r1, #4]
   125d0:	ldr	r0, [sp, #4]
   125d4:	ldr	r0, [r0, #8]
   125d8:	ldr	r1, [sp, #4]
   125dc:	ldr	r1, [r1, #4]
   125e0:	str	r0, [r1, #8]
   125e4:	ldr	r0, [sp, #4]
   125e8:	ldr	r0, [r0, #4]
   125ec:	str	r0, [sp]
   125f0:	ldr	r0, [sp, #12]
   125f4:	ldr	r0, [r0]
   125f8:	ldr	r1, [sp, #4]
   125fc:	str	r0, [r1, #4]
   12600:	ldr	r0, [sp, #4]
   12604:	ldr	r1, [sp, #12]
   12608:	ldr	r1, [r1]
   1260c:	str	r0, [r1, #8]
   12610:	ldr	r0, [sp, #4]
   12614:	ldr	r1, [sp, #12]
   12618:	str	r0, [r1]
   1261c:	ldr	r0, [sp]
   12620:	str	r0, [sp, #4]
   12624:	ldr	r0, [sp, #8]
   12628:	add	r0, r0, #1
   1262c:	str	r0, [sp, #8]
   12630:	b	125a4 <lista_inverte@@Base+0x58>
   12634:	ldr	r0, [sp, #12]
   12638:	ldr	r0, [r0, #4]
   1263c:	str	r0, [sp, #4]
   12640:	ldr	r0, [sp, #4]
   12644:	ldr	r0, [r0, #8]
   12648:	ldr	r1, [sp, #12]
   1264c:	str	r0, [r1, #4]
   12650:	ldr	r0, [sp, #12]
   12654:	ldr	r0, [r0, #4]
   12658:	movw	r1, #0
   1265c:	str	r1, [r0, #4]
   12660:	ldr	r0, [sp, #4]
   12664:	str	r1, [r0, #8]
   12668:	ldr	r0, [sp, #12]
   1266c:	ldr	r0, [r0]
   12670:	ldr	r2, [sp, #4]
   12674:	str	r0, [r2, #4]
   12678:	ldr	r0, [sp, #4]
   1267c:	ldr	r2, [sp, #12]
   12680:	ldr	r2, [r2]
   12684:	str	r0, [r2, #8]
   12688:	ldr	r0, [sp, #4]
   1268c:	ldr	r2, [sp, #12]
   12690:	str	r0, [r2]
   12694:	str	r1, [sp, #16]
   12698:	ldr	r0, [sp, #16]
   1269c:	add	sp, sp, #20
   126a0:	bx	lr

000126a4 <__libc_csu_init@@Base>:
   126a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126a8:	mov	r7, r0
   126ac:	ldr	r6, [pc, #72]	; 126fc <__libc_csu_init@@Base+0x58>
   126b0:	ldr	r5, [pc, #72]	; 12700 <__libc_csu_init@@Base+0x5c>
   126b4:	add	r6, pc, r6
   126b8:	add	r5, pc, r5
   126bc:	sub	r6, r6, r5
   126c0:	mov	r8, r1
   126c4:	mov	r9, r2
   126c8:	bl	10c64 <calloc@plt-0x20>
   126cc:	asrs	r6, r6, #2
   126d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   126d4:	mov	r4, #0
   126d8:	add	r4, r4, #1
   126dc:	ldr	r3, [r5], #4
   126e0:	mov	r2, r9
   126e4:	mov	r1, r8
   126e8:	mov	r0, r7
   126ec:	blx	r3
   126f0:	cmp	r6, r4
   126f4:	bne	126d8 <__libc_csu_init@@Base+0x34>
   126f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   126fc:	andeq	r0, r1, r0, asr r8
   12700:	andeq	r0, r1, r8, asr #16

00012704 <__libc_csu_fini@@Base>:
   12704:	bx	lr

Disassembly of section .fini:

00012708 <.fini>:
   12708:	push	{r3, lr}
   1270c:	pop	{r3, pc}
