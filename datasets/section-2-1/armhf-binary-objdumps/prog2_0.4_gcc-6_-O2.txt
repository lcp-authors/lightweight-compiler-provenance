
../repos/prog2/0.4:     file format elf32-littlearm


Disassembly of section .init:

000105e4 <.init>:
   105e4:	push	{r3, lr}
   105e8:	bl	107d8 <_start@@Base+0x3c>
   105ec:	pop	{r3, pc}

Disassembly of section .plt:

000105f0 <printf@plt-0x14>:
   105f0:	push	{lr}		; (str lr, [sp, #-4]!)
   105f4:	ldr	lr, [pc, #4]	; 10600 <printf@plt-0x4>
   105f8:	add	lr, pc, lr
   105fc:	ldr	pc, [lr, #8]!
   10600:	andeq	r0, r1, r0, lsl #20

00010604 <printf@plt>:
   10604:	add	ip, pc, #0, 12
   10608:	add	ip, ip, #16, 20	; 0x10000
   1060c:	ldr	pc, [ip, #2560]!	; 0xa00

00010610 <puts@plt>:
   10610:	add	ip, pc, #0, 12
   10614:	add	ip, ip, #16, 20	; 0x10000
   10618:	ldr	pc, [ip, #2552]!	; 0x9f8

0001061c <malloc@plt>:
   1061c:	add	ip, pc, #0, 12
   10620:	add	ip, ip, #16, 20	; 0x10000
   10624:	ldr	pc, [ip, #2544]!	; 0x9f0

00010628 <__libc_start_main@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2536]!	; 0x9e8

00010634 <__gmon_start__@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2528]!	; 0x9e0

00010640 <__isoc99_scanf@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2520]!	; 0x9d8

0001064c <abort@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2512]!	; 0x9d0

Disassembly of section .text:

00010658 <main@@Base>:
   10658:	ldr	r0, [pc, #280]	; 10778 <main@@Base+0x120>
   1065c:	push	{r4, r5, r6, r7, r8, lr}
   10660:	add	r0, pc, r0
   10664:	sub	sp, sp, #8
   10668:	bl	10604 <printf@plt>
   1066c:	ldr	r0, [pc, #264]	; 1077c <main@@Base+0x124>
   10670:	add	r1, sp, #4
   10674:	add	r0, pc, r0
   10678:	bl	10640 <__isoc99_scanf@plt>
   1067c:	ldr	r0, [sp, #4]
   10680:	cmp	r0, #100	; 0x64
   10684:	bgt	1075c <main@@Base+0x104>
   10688:	lsl	r0, r0, #2
   1068c:	bl	1061c <malloc@plt>
   10690:	ldr	r1, [sp, #4]
   10694:	cmp	r1, #0
   10698:	mov	r7, r0
   1069c:	ble	106e4 <main@@Base+0x8c>
   106a0:	ldr	r8, [pc, #216]	; 10780 <main@@Base+0x128>
   106a4:	ldr	r6, [pc, #216]	; 10784 <main@@Base+0x12c>
   106a8:	add	r8, pc, r8
   106ac:	add	r6, pc, r6
   106b0:	mov	r5, r0
   106b4:	mov	r4, #0
   106b8:	add	r4, r4, #1
   106bc:	mov	r1, r4
   106c0:	mov	r0, r8
   106c4:	bl	10604 <printf@plt>
   106c8:	mov	r1, r5
   106cc:	mov	r0, r6
   106d0:	bl	10640 <__isoc99_scanf@plt>
   106d4:	ldr	r1, [sp, #4]
   106d8:	add	r5, r5, #4
   106dc:	cmp	r1, r4
   106e0:	bgt	106b8 <main@@Base+0x60>
   106e4:	mov	r0, r7
   106e8:	bl	108c4 <ordenado@@Base>
   106ec:	cmp	r0, #0
   106f0:	beq	1074c <main@@Base+0xf4>
   106f4:	ldr	r0, [pc, #140]	; 10788 <main@@Base+0x130>
   106f8:	add	r0, pc, r0
   106fc:	bl	10604 <printf@plt>
   10700:	ldr	r5, [sp, #4]
   10704:	sub	r4, r5, #1
   10708:	cmp	r4, #0
   1070c:	ble	10730 <main@@Base+0xd8>
   10710:	ldr	r6, [pc, #116]	; 1078c <main@@Base+0x134>
   10714:	add	r5, r7, r5, lsl #2
   10718:	add	r6, pc, r6
   1071c:	ldr	r1, [r5, #-4]!
   10720:	mov	r0, r6
   10724:	bl	10604 <printf@plt>
   10728:	subs	r4, r4, #1
   1072c:	bne	1071c <main@@Base+0xc4>
   10730:	ldr	r0, [pc, #88]	; 10790 <main@@Base+0x138>
   10734:	ldr	r1, [r7, r4, lsl #2]
   10738:	add	r0, pc, r0
   1073c:	bl	10604 <printf@plt>
   10740:	mov	r0, #0
   10744:	add	sp, sp, #8
   10748:	pop	{r4, r5, r6, r7, r8, pc}
   1074c:	ldr	r0, [pc, #64]	; 10794 <main@@Base+0x13c>
   10750:	add	r0, pc, r0
   10754:	bl	10610 <puts@plt>
   10758:	b	10740 <main@@Base+0xe8>
   1075c:	ldr	r0, [pc, #52]	; 10798 <main@@Base+0x140>
   10760:	add	r0, pc, r0
   10764:	bl	10604 <printf@plt>
   10768:	mov	r3, #100	; 0x64
   1076c:	mov	r0, r3
   10770:	str	r3, [sp, #4]
   10774:	b	10688 <main@@Base+0x30>
   10778:	andeq	r0, r0, ip, lsl r3
   1077c:	andeq	r0, r0, ip, lsr #6
   10780:	andeq	r0, r0, ip, lsr #6
   10784:	strdeq	r0, [r0], -r4
   10788:	strdeq	r0, [r0], -r4
   1078c:	andeq	r0, r0, r8, lsl r3
   10790:	strdeq	r0, [r0], -ip
   10794:	andeq	r0, r0, ip, ror #5
   10798:	andeq	r0, r0, r4, asr #4

0001079c <_start@@Base>:
   1079c:	mov	fp, #0
   107a0:	mov	lr, #0
   107a4:	pop	{r1}		; (ldr r1, [sp], #4)
   107a8:	mov	r2, sp
   107ac:	push	{r2}		; (str r2, [sp, #-4]!)
   107b0:	push	{r0}		; (str r0, [sp, #-4]!)
   107b4:	ldr	ip, [pc, #16]	; 107cc <_start@@Base+0x30>
   107b8:	push	{ip}		; (str ip, [sp, #-4]!)
   107bc:	ldr	r0, [pc, #12]	; 107d0 <_start@@Base+0x34>
   107c0:	ldr	r3, [pc, #12]	; 107d4 <_start@@Base+0x38>
   107c4:	bl	10628 <__libc_start_main@plt>
   107c8:	bl	1064c <abort@plt>
   107cc:	andeq	r0, r1, r4, ror r9
   107d0:	andeq	r0, r1, r8, asr r6
   107d4:	andeq	r0, r1, r4, lsl r9
   107d8:	ldr	r3, [pc, #20]	; 107f4 <_start@@Base+0x58>
   107dc:	ldr	r2, [pc, #20]	; 107f8 <_start@@Base+0x5c>
   107e0:	add	r3, pc, r3
   107e4:	ldr	r2, [r3, r2]
   107e8:	cmp	r2, #0
   107ec:	bxeq	lr
   107f0:	b	10634 <__gmon_start__@plt>
   107f4:	andeq	r0, r1, r8, lsl r8
   107f8:	andeq	r0, r0, r8, lsr #32
   107fc:	ldr	r3, [pc, #28]	; 10820 <_start@@Base+0x84>
   10800:	ldr	r0, [pc, #28]	; 10824 <_start@@Base+0x88>
   10804:	sub	r3, r3, r0
   10808:	cmp	r3, #6
   1080c:	bxls	lr
   10810:	ldr	r3, [pc, #16]	; 10828 <_start@@Base+0x8c>
   10814:	cmp	r3, #0
   10818:	bxeq	lr
   1081c:	bx	r3
   10820:	andeq	r1, r2, r7, lsr r0
   10824:	andeq	r1, r2, r4, lsr r0
   10828:	andeq	r0, r0, r0
   1082c:	ldr	r1, [pc, #36]	; 10858 <_start@@Base+0xbc>
   10830:	ldr	r0, [pc, #36]	; 1085c <_start@@Base+0xc0>
   10834:	sub	r1, r1, r0
   10838:	asr	r1, r1, #2
   1083c:	add	r1, r1, r1, lsr #31
   10840:	asrs	r1, r1, #1
   10844:	bxeq	lr
   10848:	ldr	r3, [pc, #16]	; 10860 <_start@@Base+0xc4>
   1084c:	cmp	r3, #0
   10850:	bxeq	lr
   10854:	bx	r3
   10858:	andeq	r1, r2, r4, lsr r0
   1085c:	andeq	r1, r2, r4, lsr r0
   10860:	andeq	r0, r0, r0
   10864:	push	{r4, lr}
   10868:	ldr	r4, [pc, #24]	; 10888 <_start@@Base+0xec>
   1086c:	ldrb	r3, [r4]
   10870:	cmp	r3, #0
   10874:	popne	{r4, pc}
   10878:	bl	107fc <_start@@Base+0x60>
   1087c:	mov	r3, #1
   10880:	strb	r3, [r4]
   10884:	pop	{r4, pc}
   10888:	andeq	r1, r2, r4, lsr r0
   1088c:	ldr	r0, [pc, #40]	; 108bc <_start@@Base+0x120>
   10890:	ldr	r3, [r0]
   10894:	cmp	r3, #0
   10898:	bne	108a0 <_start@@Base+0x104>
   1089c:	b	1082c <_start@@Base+0x90>
   108a0:	ldr	r3, [pc, #24]	; 108c0 <_start@@Base+0x124>
   108a4:	cmp	r3, #0
   108a8:	beq	1089c <_start@@Base+0x100>
   108ac:	push	{r4, lr}
   108b0:	blx	r3
   108b4:	pop	{r4, lr}
   108b8:	b	1082c <_start@@Base+0x90>
   108bc:	andeq	r0, r2, r4, lsl pc
   108c0:	andeq	r0, r0, r0

000108c4 <ordenado@@Base>:
   108c4:	cmp	r1, #1
   108c8:	ldr	r3, [r0]
   108cc:	ble	10904 <ordenado@@Base+0x40>
   108d0:	ldr	ip, [r0, #4]
   108d4:	cmp	r3, ip
   108d8:	bgt	1090c <ordenado@@Base+0x48>
   108dc:	add	r0, r0, #4
   108e0:	mov	r3, #1
   108e4:	b	108f8 <ordenado@@Base+0x34>
   108e8:	ldr	r2, [r0, #4]!
   108ec:	cmp	r2, ip
   108f0:	mov	ip, r2
   108f4:	blt	1090c <ordenado@@Base+0x48>
   108f8:	add	r3, r3, #1
   108fc:	cmp	r1, r3
   10900:	bne	108e8 <ordenado@@Base+0x24>
   10904:	mov	r0, #1
   10908:	bx	lr
   1090c:	mov	r0, #0
   10910:	bx	lr

00010914 <__libc_csu_init@@Base>:
   10914:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10918:	mov	r7, r0
   1091c:	ldr	r6, [pc, #72]	; 1096c <__libc_csu_init@@Base+0x58>
   10920:	ldr	r5, [pc, #72]	; 10970 <__libc_csu_init@@Base+0x5c>
   10924:	add	r6, pc, r6
   10928:	add	r5, pc, r5
   1092c:	sub	r6, r6, r5
   10930:	mov	r8, r1
   10934:	mov	r9, r2
   10938:	bl	105e4 <printf@plt-0x20>
   1093c:	asrs	r6, r6, #2
   10940:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10944:	mov	r4, #0
   10948:	add	r4, r4, #1
   1094c:	ldr	r3, [r5], #4
   10950:	mov	r2, r9
   10954:	mov	r1, r8
   10958:	mov	r0, r7
   1095c:	blx	r3
   10960:	cmp	r6, r4
   10964:	bne	10948 <__libc_csu_init@@Base+0x34>
   10968:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1096c:	andeq	r0, r1, r4, ror #11
   10970:	ldrdeq	r0, [r1], -ip

00010974 <__libc_csu_fini@@Base>:
   10974:	bx	lr

Disassembly of section .fini:

00010978 <.fini>:
   10978:	push	{r3, lr}
   1097c:	pop	{r3, pc}
