
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010b00 <.init>:
   10b00:	push	{r3, lr}
   10b04:	bl	10c34 <_start@@Base+0x3c>
   10b08:	pop	{r3, pc}

Disassembly of section .plt:

00010b0c <calloc@plt-0x14>:
   10b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   10b10:	ldr	lr, [pc, #4]	; 10b1c <calloc@plt-0x4>
   10b14:	add	lr, pc, lr
   10b18:	ldr	pc, [lr, #8]!
   10b1c:	andeq	r2, r1, r4, ror #9

00010b20 <calloc@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b2c <strcmp@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #73728	; 0x12000
   10b34:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b38 <printf@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #73728	; 0x12000
   10b40:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b44 <__isoc99_fscanf@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #73728	; 0x12000
   10b4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b50 <fopen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #73728	; 0x12000
   10b58:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b5c <fflush@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #73728	; 0x12000
   10b64:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b68 <free@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #73728	; 0x12000
   10b70:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b74 <fgets@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #73728	; 0x12000
   10b7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b80 <strdup@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #73728	; 0x12000
   10b88:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b8c <puts@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #73728	; 0x12000
   10b94:	ldr	pc, [ip, #1180]!	; 0x49c

00010b98 <malloc@plt>:
   10b98:	add	ip, pc, #0, 12
   10b9c:	add	ip, ip, #73728	; 0x12000
   10ba0:	ldr	pc, [ip, #1172]!	; 0x494

00010ba4 <__libc_start_main@plt>:
   10ba4:	add	ip, pc, #0, 12
   10ba8:	add	ip, ip, #73728	; 0x12000
   10bac:	ldr	pc, [ip, #1164]!	; 0x48c

00010bb0 <__gmon_start__@plt>:
   10bb0:	add	ip, pc, #0, 12
   10bb4:	add	ip, ip, #73728	; 0x12000
   10bb8:	ldr	pc, [ip, #1156]!	; 0x484

00010bbc <feof@plt>:
   10bbc:	add	ip, pc, #0, 12
   10bc0:	add	ip, ip, #73728	; 0x12000
   10bc4:	ldr	pc, [ip, #1148]!	; 0x47c

00010bc8 <strlen@plt>:
   10bc8:	add	ip, pc, #0, 12
   10bcc:	add	ip, ip, #73728	; 0x12000
   10bd0:	ldr	pc, [ip, #1140]!	; 0x474

00010bd4 <putchar@plt>:
   10bd4:	add	ip, pc, #0, 12
   10bd8:	add	ip, ip, #73728	; 0x12000
   10bdc:	ldr	pc, [ip, #1132]!	; 0x46c

00010be0 <fclose@plt>:
   10be0:	add	ip, pc, #0, 12
   10be4:	add	ip, ip, #73728	; 0x12000
   10be8:	ldr	pc, [ip, #1124]!	; 0x464

00010bec <abort@plt>:
   10bec:	add	ip, pc, #0, 12
   10bf0:	add	ip, ip, #73728	; 0x12000
   10bf4:	ldr	pc, [ip, #1116]!	; 0x45c

Disassembly of section .text:

00010bf8 <_start@@Base>:
   10bf8:	mov	fp, #0
   10bfc:	mov	lr, #0
   10c00:	pop	{r1}		; (ldr r1, [sp], #4)
   10c04:	mov	r2, sp
   10c08:	push	{r2}		; (str r2, [sp, #-4]!)
   10c0c:	push	{r0}		; (str r0, [sp, #-4]!)
   10c10:	ldr	ip, [pc, #16]	; 10c28 <_start@@Base+0x30>
   10c14:	push	{ip}		; (str ip, [sp, #-4]!)
   10c18:	ldr	r0, [pc, #12]	; 10c2c <_start@@Base+0x34>
   10c1c:	ldr	r3, [pc, #12]	; 10c30 <_start@@Base+0x38>
   10c20:	bl	10ba4 <__libc_start_main@plt>
   10c24:	bl	10bec <abort@plt>
   10c28:	ldrdeq	r2, [r1], -ip
   10c2c:	andeq	r1, r1, r0, lsl #4
   10c30:	andeq	r2, r1, ip, ror r1
   10c34:	ldr	r3, [pc, #20]	; 10c50 <_start@@Base+0x58>
   10c38:	ldr	r2, [pc, #20]	; 10c54 <_start@@Base+0x5c>
   10c3c:	add	r3, pc, r3
   10c40:	ldr	r2, [r3, r2]
   10c44:	cmp	r2, #0
   10c48:	bxeq	lr
   10c4c:	b	10bb0 <__gmon_start__@plt>
   10c50:			; <UNDEFINED> instruction: 0x000123bc
   10c54:	andeq	r0, r0, r8, asr r0
   10c58:	ldr	r0, [pc, #24]	; 10c78 <_start@@Base+0x80>
   10c5c:	ldr	r3, [pc, #24]	; 10c7c <_start@@Base+0x84>
   10c60:	cmp	r3, r0
   10c64:	bxeq	lr
   10c68:	ldr	r3, [pc, #16]	; 10c80 <_start@@Base+0x88>
   10c6c:	cmp	r3, #0
   10c70:	bxeq	lr
   10c74:	bx	r3
   10c78:	andeq	r3, r2, r8, rrx
   10c7c:	andeq	r3, r2, r8, rrx
   10c80:	andeq	r0, r0, r0
   10c84:	ldr	r0, [pc, #36]	; 10cb0 <_start@@Base+0xb8>
   10c88:	ldr	r1, [pc, #36]	; 10cb4 <_start@@Base+0xbc>
   10c8c:	sub	r1, r1, r0
   10c90:	asr	r1, r1, #2
   10c94:	add	r1, r1, r1, lsr #31
   10c98:	asrs	r1, r1, #1
   10c9c:	bxeq	lr
   10ca0:	ldr	r3, [pc, #16]	; 10cb8 <_start@@Base+0xc0>
   10ca4:	cmp	r3, #0
   10ca8:	bxeq	lr
   10cac:	bx	r3
   10cb0:	andeq	r3, r2, r8, rrx
   10cb4:	andeq	r3, r2, r8, rrx
   10cb8:	andeq	r0, r0, r0
   10cbc:	push	{r4, lr}
   10cc0:	ldr	r4, [pc, #24]	; 10ce0 <_start@@Base+0xe8>
   10cc4:	ldrb	r3, [r4]
   10cc8:	cmp	r3, #0
   10ccc:	popne	{r4, pc}
   10cd0:	bl	10c58 <_start@@Base+0x60>
   10cd4:	mov	r3, #1
   10cd8:	strb	r3, [r4]
   10cdc:	pop	{r4, pc}
   10ce0:	andeq	r3, r2, r8, rrx
   10ce4:	b	10c84 <_start@@Base+0x8c>

00010ce8 <fp_insere@@Base>:
   10ce8:	push	{r4, r5, r6, sl, fp, lr}
   10cec:	add	fp, sp, #16
   10cf0:	cmp	r0, #0
   10cf4:	beq	10d54 <fp_insere@@Base+0x6c>
   10cf8:	ldm	r0, {r3, r6}
   10cfc:	mov	r4, r0
   10d00:	mov	r0, #0
   10d04:	cmp	r3, r6
   10d08:	beq	10d9c <fp_insere@@Base+0xb4>
   10d0c:	mov	r0, r2
   10d10:	bl	11f10 <elemento_cria@@Base>
   10d14:	mov	r5, r0
   10d18:	ldr	r0, [r4]
   10d1c:	mov	r6, #0
   10d20:	cmp	r0, #1
   10d24:	blt	10d60 <fp_insere@@Base+0x78>
   10d28:	ldr	r0, [r4, #8]
   10d2c:	mov	r1, r5
   10d30:	ldr	r0, [r0, r6, lsl #2]
   10d34:	bl	11f58 <maior_que@@Base>
   10d38:	cmp	r0, #0
   10d3c:	beq	10d5c <fp_insere@@Base+0x74>
   10d40:	ldr	r0, [r4]
   10d44:	add	r6, r6, #1
   10d48:	cmp	r6, r0
   10d4c:	blt	10d28 <fp_insere@@Base+0x40>
   10d50:	b	10d60 <fp_insere@@Base+0x78>
   10d54:	mvn	r0, #0
   10d58:	pop	{r4, r5, r6, sl, fp, pc}
   10d5c:	ldr	r0, [r4]
   10d60:	ldr	r1, [r4, #8]
   10d64:	cmp	r0, r6
   10d68:	blt	10d8c <fp_insere@@Base+0xa4>
   10d6c:	mov	r2, r0
   10d70:	ldr	r3, [r1, r2, lsl #2]!
   10d74:	cmp	r2, r6
   10d78:	str	r3, [r1, #4]
   10d7c:	sub	r3, r2, #1
   10d80:	ldr	r1, [r4, #8]
   10d84:	mov	r2, r3
   10d88:	bgt	10d70 <fp_insere@@Base+0x88>
   10d8c:	add	r0, r0, #1
   10d90:	str	r5, [r1, r6, lsl #2]
   10d94:	str	r0, [r4]
   10d98:	mov	r0, #1
   10d9c:	pop	{r4, r5, r6, sl, fp, pc}

00010da0 <fp_remove@@Base>:
   10da0:	push	{r4, r5, fp, lr}
   10da4:	add	fp, sp, #8
   10da8:	mov	r1, #0
   10dac:	cmp	r0, #0
   10db0:	beq	10e4c <fp_remove@@Base+0xac>
   10db4:	ldr	r2, [r0]
   10db8:	cmp	r2, #0
   10dbc:	beq	10e4c <fp_remove@@Base+0xac>
   10dc0:	ldr	r1, [r0, #8]
   10dc4:	cmp	r2, #1
   10dc8:	ldr	lr, [r1]
   10dcc:	blt	10e40 <fp_remove@@Base+0xa0>
   10dd0:	ldr	r3, [r1, #4]
   10dd4:	str	r3, [r1]
   10dd8:	beq	10e40 <fp_remove@@Base+0xa0>
   10ddc:	sub	r3, r2, #1
   10de0:	mov	r1, #1
   10de4:	cmp	r2, #2
   10de8:	and	ip, r3, #1
   10dec:	beq	10e28 <fp_remove@@Base+0x88>
   10df0:	sub	r1, r3, ip
   10df4:	mov	r3, #0
   10df8:	ldr	r4, [r0, #8]
   10dfc:	add	r4, r4, r3, lsl #2
   10e00:	ldr	r5, [r4, #8]
   10e04:	str	r5, [r4, #4]
   10e08:	ldr	r4, [r0, #8]
   10e0c:	add	r4, r4, r3, lsl #2
   10e10:	add	r3, r3, #2
   10e14:	cmp	r1, r3
   10e18:	ldr	r5, [r4, #12]
   10e1c:	str	r5, [r4, #8]
   10e20:	bne	10df8 <fp_remove@@Base+0x58>
   10e24:	add	r1, r3, #1
   10e28:	cmp	ip, #0
   10e2c:	beq	10e40 <fp_remove@@Base+0xa0>
   10e30:	ldr	r3, [r0, #8]
   10e34:	add	r5, r3, r1, lsl #2
   10e38:	ldr	r5, [r5, #4]
   10e3c:	str	r5, [r3, r1, lsl #2]
   10e40:	sub	r1, r2, #1
   10e44:	str	r1, [r0]
   10e48:	ldr	r1, [lr, #4]
   10e4c:	mov	r0, r1
   10e50:	pop	{r4, r5, fp, pc}

00010e54 <fp_carrega@@Base>:
   10e54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e58:	add	fp, sp, #28
   10e5c:	sub	sp, sp, #268	; 0x10c
   10e60:	mov	r2, r1
   10e64:	ldr	r1, [pc, #324]	; 10fb0 <fp_carrega@@Base+0x15c>
   10e68:	mov	r4, r0
   10e6c:	mov	r0, r2
   10e70:	add	r1, pc, r1
   10e74:	bl	10b50 <fopen@plt>
   10e78:	cmp	r0, #0
   10e7c:	beq	10f9c <fp_carrega@@Base+0x148>
   10e80:	mov	r5, r0
   10e84:	bl	10bbc <feof@plt>
   10e88:	cmp	r0, #0
   10e8c:	bne	10f8c <fp_carrega@@Base+0x138>
   10e90:	ldr	r7, [pc, #284]	; 10fb4 <fp_carrega@@Base+0x160>
   10e94:	add	r9, sp, #4
   10e98:	add	r6, sp, #8
   10e9c:	mov	sl, #0
   10ea0:	add	r7, pc, r7
   10ea4:	b	10ecc <fp_carrega@@Base+0x78>
   10ea8:	add	r0, r0, #1
   10eac:	str	r7, [r1, r8, lsl #2]
   10eb0:	str	r0, [r4]
   10eb4:	ldr	r7, [pc, #252]	; 10fb8 <fp_carrega@@Base+0x164>
   10eb8:	add	r7, pc, r7
   10ebc:	mov	r0, r5
   10ec0:	bl	10bbc <feof@plt>
   10ec4:	cmp	r0, #0
   10ec8:	bne	10f8c <fp_carrega@@Base+0x138>
   10ecc:	mov	r0, r5
   10ed0:	mov	r1, r7
   10ed4:	mov	r2, r9
   10ed8:	bl	10b44 <__isoc99_fscanf@plt>
   10edc:	mov	r0, r6
   10ee0:	mov	r1, #256	; 0x100
   10ee4:	mov	r2, r5
   10ee8:	bl	10b74 <fgets@plt>
   10eec:	mov	r0, r6
   10ef0:	bl	10bc8 <strlen@plt>
   10ef4:	add	r0, r0, r6
   10ef8:	cmp	r4, #0
   10efc:	strb	sl, [r0, #-1]
   10f00:	ldmne	r4, {r0, r1}
   10f04:	cmpne	r0, r1
   10f08:	beq	10ebc <fp_carrega@@Base+0x68>
   10f0c:	ldr	r0, [sp, #4]
   10f10:	mov	r1, r6
   10f14:	bl	11f10 <elemento_cria@@Base>
   10f18:	mov	r7, r0
   10f1c:	ldr	r0, [r4]
   10f20:	mov	r8, #0
   10f24:	cmp	r0, #1
   10f28:	blt	10f5c <fp_carrega@@Base+0x108>
   10f2c:	ldr	r0, [r4, #8]
   10f30:	mov	r1, r7
   10f34:	ldr	r0, [r0, r8, lsl #2]
   10f38:	bl	11f58 <maior_que@@Base>
   10f3c:	cmp	r0, #0
   10f40:	beq	10f58 <fp_carrega@@Base+0x104>
   10f44:	ldr	r0, [r4]
   10f48:	add	r8, r8, #1
   10f4c:	cmp	r8, r0
   10f50:	blt	10f2c <fp_carrega@@Base+0xd8>
   10f54:	b	10f5c <fp_carrega@@Base+0x108>
   10f58:	ldr	r0, [r4]
   10f5c:	ldr	r1, [r4, #8]
   10f60:	cmp	r0, r8
   10f64:	blt	10ea8 <fp_carrega@@Base+0x54>
   10f68:	mov	r2, r0
   10f6c:	ldr	r3, [r1, r2, lsl #2]!
   10f70:	cmp	r2, r8
   10f74:	str	r3, [r1, #4]
   10f78:	sub	r3, r2, #1
   10f7c:	ldr	r1, [r4, #8]
   10f80:	mov	r2, r3
   10f84:	bgt	10f6c <fp_carrega@@Base+0x118>
   10f88:	b	10ea8 <fp_carrega@@Base+0x54>
   10f8c:	mov	r0, r5
   10f90:	bl	10be0 <fclose@plt>
   10f94:	sub	sp, fp, #28
   10f98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f9c:	ldr	r0, [pc, #24]	; 10fbc <fp_carrega@@Base+0x168>
   10fa0:	add	r0, pc, r0
   10fa4:	bl	10b8c <puts@plt>
   10fa8:	sub	sp, fp, #28
   10fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fb0:	andeq	r1, r0, r0, lsr r6
   10fb4:	andeq	r1, r0, r4, asr #6
   10fb8:	andeq	r1, r0, ip, lsr #6
   10fbc:	andeq	r1, r0, sl, lsr #9

00010fc0 <heap_insere@@Base>:
   10fc0:	push	{r4, r5, r6, r7, fp, lr}
   10fc4:	add	fp, sp, #16
   10fc8:	mov	r4, r0
   10fcc:	mov	r7, r1
   10fd0:	ldr	r0, [r0]
   10fd4:	mov	r5, #0
   10fd8:	ldr	r1, [r4, #4]
   10fdc:	cmp	r0, r1
   10fe0:	beq	11078 <heap_insere@@Base+0xb8>
   10fe4:	mov	r0, r3
   10fe8:	mov	r1, r2
   10fec:	bl	11f10 <elemento_cria@@Base>
   10ff0:	mov	r6, r0
   10ff4:	ldr	r0, [r4]
   10ff8:	cmp	r0, #1
   10ffc:	blt	11034 <heap_insere@@Base+0x74>
   11000:	mov	r5, #0
   11004:	ldr	r0, [r4, #8]
   11008:	mov	r1, r6
   1100c:	ldr	r0, [r0, r5, lsl #2]
   11010:	blx	r7
   11014:	cmp	r0, #1
   11018:	beq	11040 <heap_insere@@Base+0x80>
   1101c:	ldr	r0, [r4]
   11020:	add	r5, r5, #1
   11024:	cmp	r5, r0
   11028:	blt	11004 <heap_insere@@Base+0x44>
   1102c:	ldr	r0, [r4, #8]
   11030:	b	1104c <heap_insere@@Base+0x8c>
   11034:	ldr	r0, [r4, #8]
   11038:	mov	r5, #0
   1103c:	b	11068 <heap_insere@@Base+0xa8>
   11040:	ldr	r0, [r4, #8]
   11044:	cmp	r5, #0
   11048:	beq	11068 <heap_insere@@Base+0xa8>
   1104c:	mov	r1, r5
   11050:	ldr	r2, [r0, r1, lsl #2]!
   11054:	sub	r1, r1, #1
   11058:	cmp	r1, #0
   1105c:	str	r2, [r0, #4]
   11060:	ldr	r0, [r4, #8]
   11064:	bgt	11050 <heap_insere@@Base+0x90>
   11068:	str	r6, [r0, r5, lsl #2]
   1106c:	ldr	r0, [r4]
   11070:	add	r0, r0, #1
   11074:	str	r0, [r4]
   11078:	mov	r0, r5
   1107c:	pop	{r4, r5, r6, r7, fp, pc}

00011080 <heap_remove@@Base>:
   11080:	mov	r0, #0
   11084:	bx	lr

00011088 <heap_carrega@@Base>:
   11088:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1108c:	add	fp, sp, #28
   11090:	sub	sp, sp, #268	; 0x10c
   11094:	mov	r4, r1
   11098:	ldr	r1, [pc, #336]	; 111f0 <heap_carrega@@Base+0x168>
   1109c:	mov	r5, r0
   110a0:	mov	r0, r2
   110a4:	add	r1, pc, r1
   110a8:	bl	10b50 <fopen@plt>
   110ac:	cmp	r0, #0
   110b0:	beq	111dc <heap_carrega@@Base+0x154>
   110b4:	mov	r8, r0
   110b8:	bl	10bbc <feof@plt>
   110bc:	cmp	r0, #0
   110c0:	bne	111cc <heap_carrega@@Base+0x144>
   110c4:	ldr	r9, [pc, #296]	; 111f4 <heap_carrega@@Base+0x16c>
   110c8:	add	r6, sp, #4
   110cc:	add	sl, sp, #8
   110d0:	mov	r7, #0
   110d4:	add	r9, pc, r9
   110d8:	b	11114 <heap_carrega@@Base+0x8c>
   110dc:	ldr	r0, [r5, #8]
   110e0:	mov	r9, #0
   110e4:	str	r7, [r0, r9, lsl #2]
   110e8:	add	r6, sp, #4
   110ec:	mov	r7, #0
   110f0:	ldr	r0, [r5]
   110f4:	add	r0, r0, #1
   110f8:	str	r0, [r5]
   110fc:	ldr	r9, [pc, #244]	; 111f8 <heap_carrega@@Base+0x170>
   11100:	add	r9, pc, r9
   11104:	mov	r0, r8
   11108:	bl	10bbc <feof@plt>
   1110c:	cmp	r0, #0
   11110:	bne	111cc <heap_carrega@@Base+0x144>
   11114:	mov	r0, r8
   11118:	mov	r1, r9
   1111c:	mov	r2, r6
   11120:	bl	10b44 <__isoc99_fscanf@plt>
   11124:	mov	r0, sl
   11128:	mov	r1, #256	; 0x100
   1112c:	mov	r2, r8
   11130:	bl	10b74 <fgets@plt>
   11134:	mov	r0, sl
   11138:	bl	10bc8 <strlen@plt>
   1113c:	add	r0, r0, sl
   11140:	strb	r7, [r0, #-1]
   11144:	ldm	r5, {r0, r1}
   11148:	cmp	r0, r1
   1114c:	beq	11104 <heap_carrega@@Base+0x7c>
   11150:	ldr	r0, [sp, #4]
   11154:	mov	r1, sl
   11158:	bl	11f10 <elemento_cria@@Base>
   1115c:	mov	r7, r0
   11160:	ldr	r0, [r5]
   11164:	cmp	r0, #1
   11168:	blt	110dc <heap_carrega@@Base+0x54>
   1116c:	mov	r9, #0
   11170:	ldr	r0, [r5, #8]
   11174:	mov	r1, r7
   11178:	ldr	r0, [r0, r9, lsl #2]
   1117c:	blx	r4
   11180:	cmp	r0, #1
   11184:	beq	111a0 <heap_carrega@@Base+0x118>
   11188:	ldr	r0, [r5]
   1118c:	add	r9, r9, #1
   11190:	cmp	r9, r0
   11194:	blt	11170 <heap_carrega@@Base+0xe8>
   11198:	ldr	r0, [r5, #8]
   1119c:	b	111ac <heap_carrega@@Base+0x124>
   111a0:	ldr	r0, [r5, #8]
   111a4:	cmp	r9, #0
   111a8:	beq	110e0 <heap_carrega@@Base+0x58>
   111ac:	mov	r1, r9
   111b0:	ldr	r2, [r0, r1, lsl #2]!
   111b4:	sub	r1, r1, #1
   111b8:	cmp	r1, #0
   111bc:	str	r2, [r0, #4]
   111c0:	ldr	r0, [r5, #8]
   111c4:	bgt	111b0 <heap_carrega@@Base+0x128>
   111c8:	b	110e4 <heap_carrega@@Base+0x5c>
   111cc:	mov	r0, r8
   111d0:	bl	10be0 <fclose@plt>
   111d4:	sub	sp, fp, #28
   111d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111dc:	ldr	r0, [pc, #24]	; 111fc <heap_carrega@@Base+0x174>
   111e0:	add	r0, pc, r0
   111e4:	bl	10b8c <puts@plt>
   111e8:	sub	sp, fp, #28
   111ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   111f0:	strdeq	r1, [r0], -ip
   111f4:	andeq	r1, r0, r0, lsl r1
   111f8:	andeq	r1, r0, r4, ror #1
   111fc:	andeq	r1, r0, sl, ror #4

00011200 <main@@Base>:
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #268	; 0x10c
   1120c:	mov	r0, #42	; 0x2a
   11210:	bl	11e58 <vetor_cria@@Base>
   11214:	mov	r4, r0
   11218:	ldr	r0, [pc, #2972]	; 11dbc <main@@Base+0xbbc>
   1121c:	add	r0, pc, r0
   11220:	bl	10b8c <puts@plt>
   11224:	ldr	r1, [pc, #2964]	; 11dc0 <main@@Base+0xbc0>
   11228:	mov	r0, r4
   1122c:	add	r1, pc, r1
   11230:	bl	10e54 <fp_carrega@@Base>
   11234:	ldr	r8, [pc, #2952]	; 11dc4 <main@@Base+0xbc4>
   11238:	ldr	r8, [pc, r8]
   1123c:	ldr	r1, [r8]
   11240:	ldr	r0, [pc, #2944]	; 11dc8 <main@@Base+0xbc8>
   11244:	add	r0, pc, r0
   11248:	bl	10b38 <printf@plt>
   1124c:	mov	r0, r4
   11250:	bl	12044 <vetor_imprime@@Base>
   11254:	ldr	r0, [r4]
   11258:	cmp	r0, #42	; 0x2a
   1125c:	bne	112b4 <main@@Base+0xb4>
   11260:	cmp	r4, #0
   11264:	beq	112d0 <main@@Base+0xd0>
   11268:	ldr	r3, [r4, #8]
   1126c:	mov	r1, #1
   11270:	mov	r2, #0
   11274:	ldm	r3, {r0, r7}
   11278:	str	r7, [r3]
   1127c:	cmp	r2, #40	; 0x28
   11280:	ldr	r3, [r4, #8]
   11284:	add	r3, r3, r2, lsl #2
   11288:	ldr	r7, [r3, #8]
   1128c:	str	r7, [r3, #4]
   11290:	beq	112c0 <main@@Base+0xc0>
   11294:	ldr	r7, [r4, #8]
   11298:	add	r3, r1, #1
   1129c:	add	r1, r1, #2
   112a0:	add	r3, r7, r3, lsl #2
   112a4:	add	r7, r7, r2, lsl #2
   112a8:	add	r2, r2, #2
   112ac:	ldr	r7, [r7, #12]
   112b0:	b	11278 <main@@Base+0x78>
   112b4:	ldr	r0, [pc, #2832]	; 11dcc <main@@Base+0xbcc>
   112b8:	add	r0, pc, r0
   112bc:	b	11900 <main@@Base+0x700>
   112c0:	mov	r1, #41	; 0x29
   112c4:	str	r1, [r4]
   112c8:	ldr	r1, [r0, #4]
   112cc:	b	112d4 <main@@Base+0xd4>
   112d0:	mov	r1, #0
   112d4:	ldr	r0, [pc, #2804]	; 11dd0 <main@@Base+0xbd0>
   112d8:	add	r0, pc, r0
   112dc:	bl	10b2c <strcmp@plt>
   112e0:	cmp	r0, #0
   112e4:	beq	112f4 <main@@Base+0xf4>
   112e8:	ldr	r0, [pc, #2788]	; 11dd4 <main@@Base+0xbd4>
   112ec:	add	r0, pc, r0
   112f0:	b	11900 <main@@Base+0x700>
   112f4:	mov	r1, #0
   112f8:	cmp	r4, #0
   112fc:	str	r1, [r8]
   11300:	beq	113f0 <main@@Base+0x1f0>
   11304:	ldr	r0, [r4]
   11308:	cmp	r0, #0
   1130c:	beq	11380 <main@@Base+0x180>
   11310:	cmp	r0, #1
   11314:	blt	11374 <main@@Base+0x174>
   11318:	and	r2, r0, #1
   1131c:	mov	r1, #0
   11320:	beq	1135c <main@@Base+0x15c>
   11324:	sub	r3, r0, r2
   11328:	mov	r1, #0
   1132c:	mov	r7, #4
   11330:	ldr	r6, [r4, #8]
   11334:	ldr	r5, [r6, r7]!
   11338:	str	r5, [r6, #-4]
   1133c:	ldr	r6, [r4, #8]
   11340:	add	r5, r6, r1, lsl #2
   11344:	add	r1, r1, #2
   11348:	cmp	r3, r1
   1134c:	ldr	r5, [r5, #8]
   11350:	str	r5, [r6, r7]
   11354:	add	r7, r7, #8
   11358:	bne	11330 <main@@Base+0x130>
   1135c:	cmp	r2, #0
   11360:	beq	11374 <main@@Base+0x174>
   11364:	ldr	r2, [r4, #8]
   11368:	add	r3, r2, r1, lsl #2
   1136c:	ldr	r3, [r3, #4]
   11370:	str	r3, [r2, r1, lsl #2]
   11374:	sub	r0, r0, #1
   11378:	str	r0, [r4]
   1137c:	ldr	r1, [r8]
   11380:	ldr	r0, [pc, #2652]	; 11de4 <main@@Base+0xbe4>
   11384:	add	r0, pc, r0
   11388:	bl	10b38 <printf@plt>
   1138c:	mov	r1, #0
   11390:	str	r1, [r8]
   11394:	ldm	r4, {r0, r2}
   11398:	cmp	r0, r2
   1139c:	beq	11474 <main@@Base+0x274>
   113a0:	ldr	r1, [pc, #2624]	; 11de8 <main@@Base+0xbe8>
   113a4:	mov	r0, #99	; 0x63
   113a8:	add	r1, pc, r1
   113ac:	bl	11f10 <elemento_cria@@Base>
   113b0:	mov	r5, r0
   113b4:	ldr	r0, [r4]
   113b8:	mov	r6, #0
   113bc:	cmp	r0, #1
   113c0:	blt	11438 <main@@Base+0x238>
   113c4:	ldr	r0, [r4, #8]
   113c8:	mov	r1, r5
   113cc:	ldr	r0, [r0, r6, lsl #2]
   113d0:	bl	11f58 <maior_que@@Base>
   113d4:	cmp	r0, #0
   113d8:	beq	11434 <main@@Base+0x234>
   113dc:	ldr	r0, [r4]
   113e0:	add	r6, r6, #1
   113e4:	cmp	r6, r0
   113e8:	blt	113c4 <main@@Base+0x1c4>
   113ec:	b	11438 <main@@Base+0x238>
   113f0:	ldr	r0, [pc, #2528]	; 11dd8 <main@@Base+0xbd8>
   113f4:	mov	r1, #0
   113f8:	mov	r5, #0
   113fc:	add	r0, pc, r0
   11400:	bl	10b38 <printf@plt>
   11404:	str	r5, [r8]
   11408:	mov	r1, #0
   1140c:	ldr	r0, [pc, #2504]	; 11ddc <main@@Base+0xbdc>
   11410:	add	r0, pc, r0
   11414:	bl	10b38 <printf@plt>
   11418:	str	r5, [r8]
   1141c:	mov	r1, #0
   11420:	ldr	r0, [pc, #2488]	; 11de0 <main@@Base+0xbe0>
   11424:	add	r0, pc, r0
   11428:	bl	10b38 <printf@plt>
   1142c:	str	r5, [r8]
   11430:	b	116c8 <main@@Base+0x4c8>
   11434:	ldr	r0, [r4]
   11438:	ldr	r1, [r4, #8]
   1143c:	cmp	r0, r6
   11440:	blt	11464 <main@@Base+0x264>
   11444:	mov	r2, r0
   11448:	ldr	r3, [r1, r2, lsl #2]!
   1144c:	cmp	r2, r6
   11450:	str	r3, [r1, #4]
   11454:	sub	r3, r2, #1
   11458:	ldr	r1, [r4, #8]
   1145c:	mov	r2, r3
   11460:	bgt	11448 <main@@Base+0x248>
   11464:	add	r0, r0, #1
   11468:	str	r5, [r1, r6, lsl #2]
   1146c:	str	r0, [r4]
   11470:	ldr	r1, [r8]
   11474:	ldr	r0, [pc, #2416]	; 11dec <main@@Base+0xbec>
   11478:	add	r0, pc, r0
   1147c:	bl	10b38 <printf@plt>
   11480:	ldr	r0, [r4]
   11484:	cmp	r0, #0
   11488:	beq	114f8 <main@@Base+0x2f8>
   1148c:	cmp	r0, #1
   11490:	blt	114f0 <main@@Base+0x2f0>
   11494:	and	r2, r0, #1
   11498:	mov	r1, #0
   1149c:	beq	114d8 <main@@Base+0x2d8>
   114a0:	sub	r3, r0, r2
   114a4:	mov	r1, #0
   114a8:	mov	r7, #4
   114ac:	ldr	r6, [r4, #8]
   114b0:	ldr	r5, [r6, r7]!
   114b4:	str	r5, [r6, #-4]
   114b8:	ldr	r6, [r4, #8]
   114bc:	add	r5, r6, r1, lsl #2
   114c0:	add	r1, r1, #2
   114c4:	cmp	r3, r1
   114c8:	ldr	r5, [r5, #8]
   114cc:	str	r5, [r6, r7]
   114d0:	add	r7, r7, #8
   114d4:	bne	114ac <main@@Base+0x2ac>
   114d8:	cmp	r2, #0
   114dc:	beq	114f0 <main@@Base+0x2f0>
   114e0:	ldr	r2, [r4, #8]
   114e4:	add	r3, r2, r1, lsl #2
   114e8:	ldr	r3, [r3, #4]
   114ec:	str	r3, [r2, r1, lsl #2]
   114f0:	sub	r0, r0, #1
   114f4:	str	r0, [r4]
   114f8:	mov	r1, #0
   114fc:	str	r1, [r8]
   11500:	ldm	r4, {r0, r2}
   11504:	cmp	r0, r2
   11508:	beq	115a0 <main@@Base+0x3a0>
   1150c:	ldr	r1, [pc, #2268]	; 11df0 <main@@Base+0xbf0>
   11510:	mov	r0, #0
   11514:	mov	r6, #0
   11518:	add	r1, pc, r1
   1151c:	bl	11f10 <elemento_cria@@Base>
   11520:	mov	r5, r0
   11524:	ldr	r0, [r4]
   11528:	cmp	r0, #1
   1152c:	blt	11564 <main@@Base+0x364>
   11530:	mov	r6, #0
   11534:	ldr	r0, [r4, #8]
   11538:	mov	r1, r5
   1153c:	ldr	r0, [r0, r6, lsl #2]
   11540:	bl	11f58 <maior_que@@Base>
   11544:	cmp	r0, #0
   11548:	beq	11560 <main@@Base+0x360>
   1154c:	ldr	r0, [r4]
   11550:	add	r6, r6, #1
   11554:	cmp	r6, r0
   11558:	blt	11534 <main@@Base+0x334>
   1155c:	b	11564 <main@@Base+0x364>
   11560:	ldr	r0, [r4]
   11564:	ldr	r1, [r4, #8]
   11568:	cmp	r0, r6
   1156c:	blt	11590 <main@@Base+0x390>
   11570:	mov	r2, r0
   11574:	ldr	r3, [r1, r2, lsl #2]!
   11578:	cmp	r2, r6
   1157c:	str	r3, [r1, #4]
   11580:	sub	r3, r2, #1
   11584:	ldr	r1, [r4, #8]
   11588:	mov	r2, r3
   1158c:	bgt	11574 <main@@Base+0x374>
   11590:	add	r0, r0, #1
   11594:	str	r5, [r1, r6, lsl #2]
   11598:	str	r0, [r4]
   1159c:	ldr	r1, [r8]
   115a0:	ldr	r0, [pc, #2124]	; 11df4 <main@@Base+0xbf4>
   115a4:	add	r0, pc, r0
   115a8:	bl	10b38 <printf@plt>
   115ac:	ldr	r0, [r4]
   115b0:	cmp	r0, #0
   115b4:	beq	11624 <main@@Base+0x424>
   115b8:	cmp	r0, #1
   115bc:	blt	1161c <main@@Base+0x41c>
   115c0:	and	r2, r0, #1
   115c4:	mov	r1, #0
   115c8:	beq	11604 <main@@Base+0x404>
   115cc:	sub	r3, r0, r2
   115d0:	mov	r1, #0
   115d4:	mov	r7, #4
   115d8:	ldr	r6, [r4, #8]
   115dc:	ldr	r5, [r6, r7]!
   115e0:	str	r5, [r6, #-4]
   115e4:	ldr	r6, [r4, #8]
   115e8:	add	r5, r6, r1, lsl #2
   115ec:	add	r1, r1, #2
   115f0:	cmp	r3, r1
   115f4:	ldr	r5, [r5, #8]
   115f8:	str	r5, [r6, r7]
   115fc:	add	r7, r7, #8
   11600:	bne	115d8 <main@@Base+0x3d8>
   11604:	cmp	r2, #0
   11608:	beq	1161c <main@@Base+0x41c>
   1160c:	ldr	r2, [r4, #8]
   11610:	add	r3, r2, r1, lsl #2
   11614:	ldr	r3, [r3, #4]
   11618:	str	r3, [r2, r1, lsl #2]
   1161c:	sub	r0, r0, #1
   11620:	str	r0, [r4]
   11624:	mov	r5, #0
   11628:	str	r5, [r8]
   1162c:	ldm	r4, {r0, r1}
   11630:	cmp	r0, r1
   11634:	beq	116c8 <main@@Base+0x4c8>
   11638:	ldr	r1, [pc, #1976]	; 11df8 <main@@Base+0xbf8>
   1163c:	mov	r0, #42	; 0x2a
   11640:	add	r1, pc, r1
   11644:	bl	11f10 <elemento_cria@@Base>
   11648:	mov	r5, r0
   1164c:	ldr	r0, [r4]
   11650:	mov	r6, #0
   11654:	cmp	r0, #1
   11658:	blt	1168c <main@@Base+0x48c>
   1165c:	ldr	r0, [r4, #8]
   11660:	mov	r1, r5
   11664:	ldr	r0, [r0, r6, lsl #2]
   11668:	bl	11f58 <maior_que@@Base>
   1166c:	cmp	r0, #0
   11670:	beq	11688 <main@@Base+0x488>
   11674:	ldr	r0, [r4]
   11678:	add	r6, r6, #1
   1167c:	cmp	r6, r0
   11680:	blt	1165c <main@@Base+0x45c>
   11684:	b	1168c <main@@Base+0x48c>
   11688:	ldr	r0, [r4]
   1168c:	ldr	r1, [r4, #8]
   11690:	cmp	r0, r6
   11694:	blt	116b8 <main@@Base+0x4b8>
   11698:	mov	r2, r0
   1169c:	ldr	r3, [r1, r2, lsl #2]!
   116a0:	cmp	r2, r6
   116a4:	str	r3, [r1, #4]
   116a8:	sub	r3, r2, #1
   116ac:	ldr	r1, [r4, #8]
   116b0:	mov	r2, r3
   116b4:	bgt	1169c <main@@Base+0x49c>
   116b8:	add	r0, r0, #1
   116bc:	str	r5, [r1, r6, lsl #2]
   116c0:	str	r0, [r4]
   116c4:	ldr	r5, [r8]
   116c8:	ldr	r0, [pc, #1836]	; 11dfc <main@@Base+0xbfc>
   116cc:	mov	r1, r5
   116d0:	add	r0, pc, r0
   116d4:	bl	10b38 <printf@plt>
   116d8:	ldr	r0, [pc, #1824]	; 11e00 <main@@Base+0xc00>
   116dc:	add	r0, pc, r0
   116e0:	bl	10b8c <puts@plt>
   116e4:	mov	r0, #42	; 0x2a
   116e8:	bl	11eb4 <vetor_criaHeap@@Base>
   116ec:	mov	r4, r0
   116f0:	ldr	r0, [pc, #1804]	; 11e04 <main@@Base+0xc04>
   116f4:	ldr	r1, [pc, #1804]	; 11e08 <main@@Base+0xc08>
   116f8:	add	r0, pc, r0
   116fc:	add	r1, pc, r1
   11700:	bl	10b50 <fopen@plt>
   11704:	cmp	r0, #0
   11708:	beq	11834 <main@@Base+0x634>
   1170c:	mov	r9, r0
   11710:	bl	10bbc <feof@plt>
   11714:	cmp	r0, #0
   11718:	bne	11820 <main@@Base+0x620>
   1171c:	ldr	r7, [pc, #1768]	; 11e0c <main@@Base+0xc0c>
   11720:	sub	r6, fp, #36	; 0x24
   11724:	add	sl, sp, #4
   11728:	mov	r5, #0
   1172c:	add	r7, pc, r7
   11730:	b	11764 <main@@Base+0x564>
   11734:	ldr	r0, [r4, #8]
   11738:	mov	r8, #0
   1173c:	str	r7, [r0, r8, lsl #2]
   11740:	mov	r7, r5
   11744:	mov	r5, #0
   11748:	ldr	r0, [r4]
   1174c:	add	r0, r0, #1
   11750:	str	r0, [r4]
   11754:	mov	r0, r9
   11758:	bl	10bbc <feof@plt>
   1175c:	cmp	r0, #0
   11760:	bne	11820 <main@@Base+0x620>
   11764:	mov	r0, r9
   11768:	mov	r1, r7
   1176c:	mov	r2, r6
   11770:	bl	10b44 <__isoc99_fscanf@plt>
   11774:	mov	r0, sl
   11778:	mov	r1, #256	; 0x100
   1177c:	mov	r2, r9
   11780:	bl	10b74 <fgets@plt>
   11784:	mov	r0, sl
   11788:	bl	10bc8 <strlen@plt>
   1178c:	add	r0, r0, sl
   11790:	strb	r5, [r0, #-1]
   11794:	ldm	r4, {r0, r1}
   11798:	cmp	r0, r1
   1179c:	beq	11754 <main@@Base+0x554>
   117a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   117a4:	mov	r1, sl
   117a8:	mov	r5, r7
   117ac:	bl	11f10 <elemento_cria@@Base>
   117b0:	mov	r7, r0
   117b4:	ldr	r0, [r4]
   117b8:	cmp	r0, #1
   117bc:	blt	11734 <main@@Base+0x534>
   117c0:	mov	r8, #0
   117c4:	ldr	r0, [r4, #8]
   117c8:	mov	r1, r7
   117cc:	ldr	r0, [r0, r8, lsl #2]
   117d0:	bl	11f58 <maior_que@@Base>
   117d4:	cmp	r0, #1
   117d8:	beq	117f4 <main@@Base+0x5f4>
   117dc:	ldr	r0, [r4]
   117e0:	add	r8, r8, #1
   117e4:	cmp	r8, r0
   117e8:	blt	117c4 <main@@Base+0x5c4>
   117ec:	ldr	r0, [r4, #8]
   117f0:	b	11800 <main@@Base+0x600>
   117f4:	ldr	r0, [r4, #8]
   117f8:	cmp	r8, #0
   117fc:	beq	11738 <main@@Base+0x538>
   11800:	mov	r1, r8
   11804:	ldr	r2, [r0, r1, lsl #2]!
   11808:	sub	r1, r1, #1
   1180c:	cmp	r1, #0
   11810:	str	r2, [r0, #4]
   11814:	ldr	r0, [r4, #8]
   11818:	bgt	11804 <main@@Base+0x604>
   1181c:	b	1173c <main@@Base+0x53c>
   11820:	mov	r0, r9
   11824:	bl	10be0 <fclose@plt>
   11828:	ldr	r8, [pc, #1504]	; 11e10 <main@@Base+0xc10>
   1182c:	ldr	r8, [pc, r8]
   11830:	b	11840 <main@@Base+0x640>
   11834:	ldr	r0, [pc, #1556]	; 11e50 <main@@Base+0xc50>
   11838:	add	r0, pc, r0
   1183c:	bl	10b8c <puts@plt>
   11840:	ldr	r1, [r8]
   11844:	ldr	r0, [pc, #1480]	; 11e14 <main@@Base+0xc14>
   11848:	add	r0, pc, r0
   1184c:	bl	10b38 <printf@plt>
   11850:	mov	r0, r4
   11854:	bl	120e0 <vetor_imprimeHeap@@Base>
   11858:	ldr	r0, [r4]
   1185c:	cmp	r0, #42	; 0x2a
   11860:	bne	118f8 <main@@Base+0x6f8>
   11864:	ldr	r0, [pc, #1456]	; 11e1c <main@@Base+0xc1c>
   11868:	mov	r1, #0
   1186c:	mov	r5, #0
   11870:	add	r0, pc, r0
   11874:	bl	10b2c <strcmp@plt>
   11878:	cmp	r0, #0
   1187c:	bne	112e8 <main@@Base+0xe8>
   11880:	str	r5, [r8]
   11884:	mov	r1, #0
   11888:	ldr	r0, [pc, #1424]	; 11e20 <main@@Base+0xc20>
   1188c:	add	r0, pc, r0
   11890:	bl	10b38 <printf@plt>
   11894:	str	r5, [r8]
   11898:	ldm	r4, {r0, r1}
   1189c:	cmp	r0, r1
   118a0:	beq	11960 <main@@Base+0x760>
   118a4:	ldr	r1, [pc, #1400]	; 11e24 <main@@Base+0xc24>
   118a8:	mov	r0, #99	; 0x63
   118ac:	add	r1, pc, r1
   118b0:	bl	11f10 <elemento_cria@@Base>
   118b4:	mov	r5, r0
   118b8:	ldr	r0, [r4]
   118bc:	cmp	r0, #1
   118c0:	blt	11914 <main@@Base+0x714>
   118c4:	mov	r6, #0
   118c8:	ldr	r0, [r4, #8]
   118cc:	mov	r1, r5
   118d0:	ldr	r0, [r0, r6, lsl #2]
   118d4:	bl	11f58 <maior_que@@Base>
   118d8:	cmp	r0, #1
   118dc:	beq	1191c <main@@Base+0x71c>
   118e0:	ldr	r0, [r4]
   118e4:	add	r6, r6, #1
   118e8:	cmp	r6, r0
   118ec:	blt	118c8 <main@@Base+0x6c8>
   118f0:	ldr	r0, [r4, #8]
   118f4:	b	11928 <main@@Base+0x728>
   118f8:	ldr	r0, [pc, #1304]	; 11e18 <main@@Base+0xc18>
   118fc:	add	r0, pc, r0
   11900:	bl	10b8c <puts@plt>
   11904:	mov	r4, #1
   11908:	mov	r0, r4
   1190c:	sub	sp, fp, #28
   11910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11914:	ldr	r0, [r4, #8]
   11918:	b	11948 <main@@Base+0x748>
   1191c:	ldr	r0, [r4, #8]
   11920:	cmp	r6, #0
   11924:	beq	11948 <main@@Base+0x748>
   11928:	mov	r1, r6
   1192c:	ldr	r2, [r0, r1, lsl #2]!
   11930:	sub	r1, r1, #1
   11934:	cmp	r1, #0
   11938:	str	r2, [r0, #4]
   1193c:	ldr	r0, [r4, #8]
   11940:	bgt	1192c <main@@Base+0x72c>
   11944:	b	1194c <main@@Base+0x74c>
   11948:	mov	r6, #0
   1194c:	str	r5, [r0, r6, lsl #2]
   11950:	ldr	r0, [r4]
   11954:	add	r0, r0, #1
   11958:	str	r0, [r4]
   1195c:	ldr	r5, [r8]
   11960:	ldr	r0, [pc, #1216]	; 11e28 <main@@Base+0xc28>
   11964:	mov	r1, r5
   11968:	add	r0, pc, r0
   1196c:	bl	10b38 <printf@plt>
   11970:	mov	r5, #0
   11974:	str	r5, [r8]
   11978:	ldm	r4, {r0, r1}
   1197c:	cmp	r0, r1
   11980:	mov	r1, #0
   11984:	beq	11a2c <main@@Base+0x82c>
   11988:	ldr	r1, [pc, #1180]	; 11e2c <main@@Base+0xc2c>
   1198c:	mov	r0, #0
   11990:	mov	r7, #0
   11994:	add	r1, pc, r1
   11998:	bl	11f10 <elemento_cria@@Base>
   1199c:	mov	r6, r0
   119a0:	ldr	r0, [r4]
   119a4:	cmp	r0, #1
   119a8:	blt	119e0 <main@@Base+0x7e0>
   119ac:	mov	r7, #0
   119b0:	ldr	r0, [r4, #8]
   119b4:	mov	r1, r6
   119b8:	ldr	r0, [r0, r7, lsl #2]
   119bc:	bl	11f58 <maior_que@@Base>
   119c0:	cmp	r0, #1
   119c4:	beq	119e8 <main@@Base+0x7e8>
   119c8:	ldr	r0, [r4]
   119cc:	add	r7, r7, #1
   119d0:	cmp	r7, r0
   119d4:	blt	119b0 <main@@Base+0x7b0>
   119d8:	ldr	r0, [r4, #8]
   119dc:	b	119f4 <main@@Base+0x7f4>
   119e0:	ldr	r0, [r4, #8]
   119e4:	b	11a18 <main@@Base+0x818>
   119e8:	ldr	r0, [r4, #8]
   119ec:	cmp	r7, #0
   119f0:	beq	11a14 <main@@Base+0x814>
   119f4:	mov	r1, r7
   119f8:	ldr	r2, [r0, r1, lsl #2]!
   119fc:	sub	r1, r1, #1
   11a00:	cmp	r1, #0
   11a04:	str	r2, [r0, #4]
   11a08:	ldr	r0, [r4, #8]
   11a0c:	bgt	119f8 <main@@Base+0x7f8>
   11a10:	b	11a18 <main@@Base+0x818>
   11a14:	mov	r7, #0
   11a18:	str	r6, [r0, r7, lsl #2]
   11a1c:	ldr	r0, [r4]
   11a20:	add	r0, r0, #1
   11a24:	str	r0, [r4]
   11a28:	ldr	r1, [r8]
   11a2c:	ldr	r0, [pc, #1020]	; 11e30 <main@@Base+0xc30>
   11a30:	add	r0, pc, r0
   11a34:	bl	10b38 <printf@plt>
   11a38:	str	r5, [r8]
   11a3c:	ldm	r4, {r0, r1}
   11a40:	cmp	r0, r1
   11a44:	beq	11ae8 <main@@Base+0x8e8>
   11a48:	ldr	r1, [pc, #996]	; 11e34 <main@@Base+0xc34>
   11a4c:	mov	r0, #42	; 0x2a
   11a50:	add	r1, pc, r1
   11a54:	bl	11f10 <elemento_cria@@Base>
   11a58:	mov	r5, r0
   11a5c:	ldr	r0, [r4]
   11a60:	cmp	r0, #1
   11a64:	blt	11a9c <main@@Base+0x89c>
   11a68:	mov	r6, #0
   11a6c:	ldr	r0, [r4, #8]
   11a70:	mov	r1, r5
   11a74:	ldr	r0, [r0, r6, lsl #2]
   11a78:	bl	11f58 <maior_que@@Base>
   11a7c:	cmp	r0, #1
   11a80:	beq	11aa4 <main@@Base+0x8a4>
   11a84:	ldr	r0, [r4]
   11a88:	add	r6, r6, #1
   11a8c:	cmp	r6, r0
   11a90:	blt	11a6c <main@@Base+0x86c>
   11a94:	ldr	r0, [r4, #8]
   11a98:	b	11ab0 <main@@Base+0x8b0>
   11a9c:	ldr	r0, [r4, #8]
   11aa0:	b	11ad0 <main@@Base+0x8d0>
   11aa4:	ldr	r0, [r4, #8]
   11aa8:	cmp	r6, #0
   11aac:	beq	11ad0 <main@@Base+0x8d0>
   11ab0:	mov	r1, r6
   11ab4:	ldr	r2, [r0, r1, lsl #2]!
   11ab8:	sub	r1, r1, #1
   11abc:	cmp	r1, #0
   11ac0:	str	r2, [r0, #4]
   11ac4:	ldr	r0, [r4, #8]
   11ac8:	bgt	11ab4 <main@@Base+0x8b4>
   11acc:	b	11ad4 <main@@Base+0x8d4>
   11ad0:	mov	r6, #0
   11ad4:	str	r5, [r0, r6, lsl #2]
   11ad8:	ldr	r0, [r4]
   11adc:	add	r0, r0, #1
   11ae0:	str	r0, [r4]
   11ae4:	ldr	r5, [r8]
   11ae8:	ldr	r0, [pc, #840]	; 11e38 <main@@Base+0xc38>
   11aec:	mov	r1, r5
   11af0:	add	r0, pc, r0
   11af4:	bl	10b38 <printf@plt>
   11af8:	mov	r0, #42	; 0x2a
   11afc:	bl	11eb4 <vetor_criaHeap@@Base>
   11b00:	mov	r4, r0
   11b04:	ldr	r0, [pc, #816]	; 11e3c <main@@Base+0xc3c>
   11b08:	ldr	r1, [pc, #816]	; 11e40 <main@@Base+0xc40>
   11b0c:	add	r0, pc, r0
   11b10:	add	r1, pc, r1
   11b14:	bl	10b50 <fopen@plt>
   11b18:	cmp	r0, #0
   11b1c:	beq	11c48 <main@@Base+0xa48>
   11b20:	mov	r9, r0
   11b24:	bl	10bbc <feof@plt>
   11b28:	cmp	r0, #0
   11b2c:	bne	11c34 <main@@Base+0xa34>
   11b30:	ldr	r7, [pc, #780]	; 11e44 <main@@Base+0xc44>
   11b34:	sub	r6, fp, #36	; 0x24
   11b38:	add	sl, sp, #4
   11b3c:	mov	r5, #0
   11b40:	add	r7, pc, r7
   11b44:	b	11b78 <main@@Base+0x978>
   11b48:	ldr	r0, [r4, #8]
   11b4c:	mov	r8, #0
   11b50:	str	r7, [r0, r8, lsl #2]
   11b54:	mov	r7, r5
   11b58:	mov	r5, #0
   11b5c:	ldr	r0, [r4]
   11b60:	add	r0, r0, #1
   11b64:	str	r0, [r4]
   11b68:	mov	r0, r9
   11b6c:	bl	10bbc <feof@plt>
   11b70:	cmp	r0, #0
   11b74:	bne	11c34 <main@@Base+0xa34>
   11b78:	mov	r0, r9
   11b7c:	mov	r1, r7
   11b80:	mov	r2, r6
   11b84:	bl	10b44 <__isoc99_fscanf@plt>
   11b88:	mov	r0, sl
   11b8c:	mov	r1, #256	; 0x100
   11b90:	mov	r2, r9
   11b94:	bl	10b74 <fgets@plt>
   11b98:	mov	r0, sl
   11b9c:	bl	10bc8 <strlen@plt>
   11ba0:	add	r0, r0, sl
   11ba4:	strb	r5, [r0, #-1]
   11ba8:	ldm	r4, {r0, r1}
   11bac:	cmp	r0, r1
   11bb0:	beq	11b68 <main@@Base+0x968>
   11bb4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11bb8:	mov	r1, sl
   11bbc:	mov	r5, r7
   11bc0:	bl	11f10 <elemento_cria@@Base>
   11bc4:	mov	r7, r0
   11bc8:	ldr	r0, [r4]
   11bcc:	cmp	r0, #1
   11bd0:	blt	11b48 <main@@Base+0x948>
   11bd4:	mov	r8, #0
   11bd8:	ldr	r0, [r4, #8]
   11bdc:	mov	r1, r7
   11be0:	ldr	r0, [r0, r8, lsl #2]
   11be4:	bl	11fd0 <maior_que_HeapSort@@Base>
   11be8:	cmp	r0, #1
   11bec:	beq	11c08 <main@@Base+0xa08>
   11bf0:	ldr	r0, [r4]
   11bf4:	add	r8, r8, #1
   11bf8:	cmp	r8, r0
   11bfc:	blt	11bd8 <main@@Base+0x9d8>
   11c00:	ldr	r0, [r4, #8]
   11c04:	b	11c14 <main@@Base+0xa14>
   11c08:	ldr	r0, [r4, #8]
   11c0c:	cmp	r8, #0
   11c10:	beq	11b4c <main@@Base+0x94c>
   11c14:	mov	r1, r8
   11c18:	ldr	r2, [r0, r1, lsl #2]!
   11c1c:	sub	r1, r1, #1
   11c20:	cmp	r1, #0
   11c24:	str	r2, [r0, #4]
   11c28:	ldr	r0, [r4, #8]
   11c2c:	bgt	11c18 <main@@Base+0xa18>
   11c30:	b	11b50 <main@@Base+0x950>
   11c34:	mov	r0, r9
   11c38:	bl	10be0 <fclose@plt>
   11c3c:	ldr	r8, [pc, #516]	; 11e48 <main@@Base+0xc48>
   11c40:	ldr	r8, [pc, r8]
   11c44:	b	11c54 <main@@Base+0xa54>
   11c48:	ldr	r0, [pc, #516]	; 11e54 <main@@Base+0xc54>
   11c4c:	add	r0, pc, r0
   11c50:	bl	10b8c <puts@plt>
   11c54:	ldr	r1, [r8]
   11c58:	ldr	r0, [pc, #492]	; 11e4c <main@@Base+0xc4c>
   11c5c:	add	r0, pc, r0
   11c60:	bl	10b38 <printf@plt>
   11c64:	mov	r0, #0
   11c68:	mov	r4, #0
   11c6c:	bl	10b8c <puts@plt>
   11c70:	mov	r0, #0
   11c74:	bl	10b8c <puts@plt>
   11c78:	mov	r0, #0
   11c7c:	bl	10b8c <puts@plt>
   11c80:	mov	r0, #0
   11c84:	bl	10b8c <puts@plt>
   11c88:	mov	r0, #0
   11c8c:	bl	10b8c <puts@plt>
   11c90:	mov	r0, #0
   11c94:	bl	10b8c <puts@plt>
   11c98:	mov	r0, #0
   11c9c:	bl	10b8c <puts@plt>
   11ca0:	mov	r0, #0
   11ca4:	bl	10b8c <puts@plt>
   11ca8:	mov	r0, #0
   11cac:	bl	10b8c <puts@plt>
   11cb0:	mov	r0, #0
   11cb4:	bl	10b8c <puts@plt>
   11cb8:	mov	r0, #0
   11cbc:	bl	10b8c <puts@plt>
   11cc0:	mov	r0, #0
   11cc4:	bl	10b8c <puts@plt>
   11cc8:	mov	r0, #0
   11ccc:	bl	10b8c <puts@plt>
   11cd0:	mov	r0, #0
   11cd4:	bl	10b8c <puts@plt>
   11cd8:	mov	r0, #0
   11cdc:	bl	10b8c <puts@plt>
   11ce0:	mov	r0, #0
   11ce4:	bl	10b8c <puts@plt>
   11ce8:	mov	r0, #0
   11cec:	bl	10b8c <puts@plt>
   11cf0:	mov	r0, #0
   11cf4:	bl	10b8c <puts@plt>
   11cf8:	mov	r0, #0
   11cfc:	bl	10b8c <puts@plt>
   11d00:	mov	r0, #0
   11d04:	bl	10b8c <puts@plt>
   11d08:	mov	r0, #0
   11d0c:	bl	10b8c <puts@plt>
   11d10:	mov	r0, #0
   11d14:	bl	10b8c <puts@plt>
   11d18:	mov	r0, #0
   11d1c:	bl	10b8c <puts@plt>
   11d20:	mov	r0, #0
   11d24:	bl	10b8c <puts@plt>
   11d28:	mov	r0, #0
   11d2c:	bl	10b8c <puts@plt>
   11d30:	mov	r0, #0
   11d34:	bl	10b8c <puts@plt>
   11d38:	mov	r0, #0
   11d3c:	bl	10b8c <puts@plt>
   11d40:	mov	r0, #0
   11d44:	bl	10b8c <puts@plt>
   11d48:	mov	r0, #0
   11d4c:	bl	10b8c <puts@plt>
   11d50:	mov	r0, #0
   11d54:	bl	10b8c <puts@plt>
   11d58:	mov	r0, #0
   11d5c:	bl	10b8c <puts@plt>
   11d60:	mov	r0, #0
   11d64:	bl	10b8c <puts@plt>
   11d68:	mov	r0, #0
   11d6c:	bl	10b8c <puts@plt>
   11d70:	mov	r0, #0
   11d74:	bl	10b8c <puts@plt>
   11d78:	mov	r0, #0
   11d7c:	bl	10b8c <puts@plt>
   11d80:	mov	r0, #0
   11d84:	bl	10b8c <puts@plt>
   11d88:	mov	r0, #0
   11d8c:	bl	10b8c <puts@plt>
   11d90:	mov	r0, #0
   11d94:	bl	10b8c <puts@plt>
   11d98:	mov	r0, #0
   11d9c:	bl	10b8c <puts@plt>
   11da0:	mov	r0, #0
   11da4:	bl	10b8c <puts@plt>
   11da8:	mov	r0, #0
   11dac:	bl	10b8c <puts@plt>
   11db0:	mov	r0, #0
   11db4:	bl	10b8c <puts@plt>
   11db8:	b	11908 <main@@Base+0x708>
   11dbc:	andeq	r1, r0, pc, asr #4
   11dc0:			; <UNDEFINED> instruction: 0x00000fbc
   11dc4:	andeq	r1, r1, r4, lsl lr
   11dc8:	andeq	r0, r0, lr, lsr #31
   11dcc:	andeq	r1, r0, sp, lsl #5
   11dd0:	andeq	r0, r0, r1, asr pc
   11dd4:	andeq	r1, r0, r5, lsl r2
   11dd8:	andeq	r0, r0, pc, lsr lr
   11ddc:	andeq	r0, r0, sp, ror #28
   11de0:	andeq	r0, r0, r0, lsr #29
   11de4:			; <UNDEFINED> instruction: 0x00000eb7
   11de8:	andeq	r0, r0, r7, asr #29
   11dec:	andeq	r0, r0, r5, lsl #28
   11df0:	andeq	r0, r0, r7, asr sp
   11df4:	andeq	r0, r0, r0, lsr #26
   11df8:	andeq	r0, r0, pc, lsr #24
   11dfc:	andeq	r0, r0, fp, lsr ip
   11e00:	andeq	r0, r0, r6, asr #27
   11e04:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11e08:	andeq	r0, r0, r4, lsr #27
   11e0c:			; <UNDEFINED> instruction: 0x00000ab8
   11e10:	andeq	r1, r1, r0, lsr #16
   11e14:	andeq	r0, r0, r9, lsl #22
   11e18:	ldrdeq	r0, [r0], -lr
   11e1c:			; <UNDEFINED> instruction: 0x000009b9
   11e20:	strdeq	r0, [r0], -ip
   11e24:	andeq	r0, r0, r3, asr #19
   11e28:	andeq	r0, r0, r4, asr sl
   11e2c:	ldrdeq	r0, [r0], -fp
   11e30:	ldrdeq	r0, [r0], -r3
   11e34:	andeq	r0, r0, pc, lsl r8
   11e38:	andeq	r0, r0, fp, lsl r8
   11e3c:	ldrdeq	r0, [r0], -ip
   11e40:	muleq	r0, r0, r9
   11e44:	andeq	r0, r0, r4, lsr #13
   11e48:	andeq	r1, r1, ip, lsl #8
   11e4c:	strdeq	r0, [r0], -r5
   11e50:	andeq	r0, r0, r2, lsl ip
   11e54:	strdeq	r0, [r0], -lr

00011e58 <vetor_cria@@Base>:
   11e58:	push	{r4, r5, fp, lr}
   11e5c:	add	fp, sp, #8
   11e60:	mov	r5, r0
   11e64:	mov	r0, #12
   11e68:	bl	10b98 <malloc@plt>
   11e6c:	cmp	r0, #0
   11e70:	beq	11ea8 <vetor_cria@@Base+0x50>
   11e74:	mov	r4, r0
   11e78:	mov	r0, #0
   11e7c:	mov	r1, #4
   11e80:	stm	r4, {r0, r5}
   11e84:	mov	r0, r5
   11e88:	bl	10b20 <calloc@plt>
   11e8c:	cmp	r0, #0
   11e90:	str	r0, [r4, #8]
   11e94:	beq	11ea0 <vetor_cria@@Base+0x48>
   11e98:	mov	r0, r4
   11e9c:	pop	{r4, r5, fp, pc}
   11ea0:	mov	r0, r4
   11ea4:	bl	10b68 <free@plt>
   11ea8:	mov	r4, #0
   11eac:	mov	r0, r4
   11eb0:	pop	{r4, r5, fp, pc}

00011eb4 <vetor_criaHeap@@Base>:
   11eb4:	push	{r4, r5, fp, lr}
   11eb8:	add	fp, sp, #8
   11ebc:	mov	r5, r0
   11ec0:	mov	r0, #12
   11ec4:	bl	10b98 <malloc@plt>
   11ec8:	cmp	r0, #0
   11ecc:	beq	11f04 <vetor_criaHeap@@Base+0x50>
   11ed0:	mov	r4, r0
   11ed4:	mov	r0, #0
   11ed8:	mov	r1, #4
   11edc:	stm	r4, {r0, r5}
   11ee0:	add	r0, r5, #1
   11ee4:	bl	10b20 <calloc@plt>
   11ee8:	cmp	r0, #0
   11eec:	str	r0, [r4, #8]
   11ef0:	beq	11efc <vetor_criaHeap@@Base+0x48>
   11ef4:	mov	r0, r4
   11ef8:	pop	{r4, r5, fp, pc}
   11efc:	mov	r0, r4
   11f00:	bl	10b68 <free@plt>
   11f04:	mov	r4, #0
   11f08:	mov	r0, r4
   11f0c:	pop	{r4, r5, fp, pc}

00011f10 <elemento_cria@@Base>:
   11f10:	push	{r4, r5, r6, sl, fp, lr}
   11f14:	add	fp, sp, #16
   11f18:	mov	r5, r0
   11f1c:	mov	r0, #8
   11f20:	mov	r6, r1
   11f24:	bl	10b98 <malloc@plt>
   11f28:	cmp	r0, #0
   11f2c:	beq	11f4c <elemento_cria@@Base+0x3c>
   11f30:	mov	r4, r0
   11f34:	mov	r0, r6
   11f38:	bl	10b80 <strdup@plt>
   11f3c:	str	r5, [r4]
   11f40:	str	r0, [r4, #4]
   11f44:	mov	r0, r4
   11f48:	pop	{r4, r5, r6, sl, fp, pc}
   11f4c:	mov	r4, #0
   11f50:	mov	r0, r4
   11f54:	pop	{r4, r5, r6, sl, fp, pc}

00011f58 <maior_que@@Base>:
   11f58:	push	{r4, r5, fp, lr}
   11f5c:	add	fp, sp, #8
   11f60:	cmp	r0, #0
   11f64:	movne	r5, r1
   11f68:	cmpne	r1, #0
   11f6c:	bne	11f84 <maior_que@@Base+0x2c>
   11f70:	ldr	r0, [pc, #76]	; 11fc4 <maior_que@@Base+0x6c>
   11f74:	add	r0, pc, r0
   11f78:	bl	10b8c <puts@plt>
   11f7c:	mov	r0, #0
   11f80:	pop	{r4, r5, fp, pc}
   11f84:	mov	r4, r0
   11f88:	ldr	r0, [pc, #56]	; 11fc8 <maior_que@@Base+0x70>
   11f8c:	ldr	r0, [pc, r0]
   11f90:	ldr	r0, [r0]
   11f94:	bl	10b5c <fflush@plt>
   11f98:	ldr	r0, [pc, #44]	; 11fcc <maior_que@@Base+0x74>
   11f9c:	ldr	r0, [pc, r0]
   11fa0:	ldr	r1, [r0]
   11fa4:	add	r1, r1, #1
   11fa8:	str	r1, [r0]
   11fac:	mov	r0, #0
   11fb0:	ldr	r1, [r5]
   11fb4:	ldr	r2, [r4]
   11fb8:	cmp	r2, r1
   11fbc:	movwgt	r0, #1
   11fc0:	pop	{r4, r5, fp, pc}
   11fc4:	andeq	r0, r0, r3, lsr #12
   11fc8:	andeq	r1, r1, r8, asr #1
   11fcc:	strheq	r1, [r1], -r0

00011fd0 <maior_que_HeapSort@@Base>:
   11fd0:	push	{r4, r5, fp, lr}
   11fd4:	add	fp, sp, #8
   11fd8:	cmp	r0, #0
   11fdc:	movne	r5, r1
   11fe0:	cmpne	r1, #0
   11fe4:	bne	11ffc <maior_que_HeapSort@@Base+0x2c>
   11fe8:	ldr	r0, [pc, #72]	; 12038 <maior_que_HeapSort@@Base+0x68>
   11fec:	add	r0, pc, r0
   11ff0:	bl	10b8c <puts@plt>
   11ff4:	mov	r0, #0
   11ff8:	pop	{r4, r5, fp, pc}
   11ffc:	mov	r4, r0
   12000:	ldr	r0, [pc, #52]	; 1203c <maior_que_HeapSort@@Base+0x6c>
   12004:	ldr	r0, [pc, r0]
   12008:	ldr	r0, [r0]
   1200c:	bl	10b5c <fflush@plt>
   12010:	ldr	r0, [pc, #40]	; 12040 <maior_que_HeapSort@@Base+0x70>
   12014:	ldr	r0, [pc, r0]
   12018:	ldr	r1, [r0]
   1201c:	add	r1, r1, #1
   12020:	str	r1, [r0]
   12024:	ldr	r1, [r5, #4]
   12028:	ldr	r0, [r4, #4]
   1202c:	bl	10b2c <strcmp@plt>
   12030:	lsr	r0, r0, #31
   12034:	pop	{r4, r5, fp, pc}
   12038:	andeq	r0, r0, fp, lsr #11
   1203c:	andeq	r1, r1, r0, asr r0
   12040:	andeq	r1, r1, r8, lsr r0

00012044 <vetor_imprime@@Base>:
   12044:	push	{r4, r5, r6, sl, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	mov	r4, r0
   12050:	ldr	r0, [r0]
   12054:	cmp	r0, #1
   12058:	blt	120c4 <vetor_imprime@@Base+0x80>
   1205c:	ldr	r0, [r4, #8]
   12060:	ldr	r0, [r0]
   12064:	ldr	r2, [r0]
   12068:	ldr	r1, [r0, #4]
   1206c:	ldr	r0, [pc, #96]	; 120d4 <vetor_imprime@@Base+0x90>
   12070:	add	r0, pc, r0
   12074:	bl	10b38 <printf@plt>
   12078:	ldr	r0, [r4]
   1207c:	cmp	r0, #2
   12080:	blt	120b8 <vetor_imprime@@Base+0x74>
   12084:	ldr	r5, [pc, #76]	; 120d8 <vetor_imprime@@Base+0x94>
   12088:	mov	r6, #1
   1208c:	add	r5, pc, r5
   12090:	ldr	r0, [r4, #8]
   12094:	ldr	r0, [r0, r6, lsl #2]
   12098:	ldr	r2, [r0]
   1209c:	ldr	r1, [r0, #4]
   120a0:	mov	r0, r5
   120a4:	bl	10b38 <printf@plt>
   120a8:	ldr	r0, [r4]
   120ac:	add	r6, r6, #1
   120b0:	cmp	r6, r0
   120b4:	blt	12090 <vetor_imprime@@Base+0x4c>
   120b8:	mov	r0, #10
   120bc:	pop	{r4, r5, r6, sl, fp, lr}
   120c0:	b	10bd4 <putchar@plt>
   120c4:	ldr	r0, [pc, #16]	; 120dc <vetor_imprime@@Base+0x98>
   120c8:	add	r0, pc, r0
   120cc:	pop	{r4, r5, r6, sl, fp, lr}
   120d0:	b	10b8c <puts@plt>
   120d4:	strdeq	r0, [r0], -fp
   120d8:	strdeq	r0, [r0], -ip
   120dc:	ldrdeq	r0, [r0], -sl

000120e0 <vetor_imprimeHeap@@Base>:
   120e0:	push	{r4, r5, r6, sl, fp, lr}
   120e4:	add	fp, sp, #16
   120e8:	mov	r4, r0
   120ec:	ldr	r0, [r0]
   120f0:	cmp	r0, #1
   120f4:	blt	12160 <vetor_imprimeHeap@@Base+0x80>
   120f8:	ldr	r0, [r4, #8]
   120fc:	ldr	r0, [r0, #4]
   12100:	ldr	r2, [r0]
   12104:	ldr	r1, [r0, #4]
   12108:	ldr	r0, [pc, #96]	; 12170 <vetor_imprimeHeap@@Base+0x90>
   1210c:	add	r0, pc, r0
   12110:	bl	10b38 <printf@plt>
   12114:	ldr	r0, [r4]
   12118:	cmp	r0, #3
   1211c:	blt	12154 <vetor_imprimeHeap@@Base+0x74>
   12120:	ldr	r5, [pc, #76]	; 12174 <vetor_imprimeHeap@@Base+0x94>
   12124:	mov	r6, #2
   12128:	add	r5, pc, r5
   1212c:	ldr	r0, [r4, #8]
   12130:	ldr	r0, [r0, r6, lsl #2]
   12134:	ldr	r2, [r0]
   12138:	ldr	r1, [r0, #4]
   1213c:	mov	r0, r5
   12140:	bl	10b38 <printf@plt>
   12144:	ldr	r0, [r4]
   12148:	add	r6, r6, #1
   1214c:	cmp	r6, r0
   12150:	blt	1212c <vetor_imprimeHeap@@Base+0x4c>
   12154:	mov	r0, #10
   12158:	pop	{r4, r5, r6, sl, fp, lr}
   1215c:	b	10bd4 <putchar@plt>
   12160:	ldr	r0, [pc, #16]	; 12178 <vetor_imprimeHeap@@Base+0x98>
   12164:	add	r0, pc, r0
   12168:	pop	{r4, r5, r6, sl, fp, lr}
   1216c:	b	10b8c <puts@plt>
   12170:	andeq	r0, r0, pc, asr r4
   12174:	andeq	r0, r0, r0, ror #8
   12178:	andeq	r0, r0, lr, lsr r4

0001217c <__libc_csu_init@@Base>:
   1217c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12180:	mov	r7, r0
   12184:	ldr	r6, [pc, #72]	; 121d4 <__libc_csu_init@@Base+0x58>
   12188:	ldr	r5, [pc, #72]	; 121d8 <__libc_csu_init@@Base+0x5c>
   1218c:	add	r6, pc, r6
   12190:	add	r5, pc, r5
   12194:	sub	r6, r6, r5
   12198:	mov	r8, r1
   1219c:	mov	r9, r2
   121a0:	bl	10b00 <calloc@plt-0x20>
   121a4:	asrs	r6, r6, #2
   121a8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121ac:	mov	r4, #0
   121b0:	add	r4, r4, #1
   121b4:	ldr	r3, [r5], #4
   121b8:	mov	r2, r9
   121bc:	mov	r1, r8
   121c0:	mov	r0, r7
   121c4:	blx	r3
   121c8:	cmp	r6, r4
   121cc:	bne	121b0 <__libc_csu_init@@Base+0x34>
   121d0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121d4:	andeq	r0, r1, r8, ror sp
   121d8:	andeq	r0, r1, r0, ror sp

000121dc <__libc_csu_fini@@Base>:
   121dc:	bx	lr

Disassembly of section .fini:

000121e0 <.fini>:
   121e0:	push	{r3, lr}
   121e4:	pop	{r3, pc}
