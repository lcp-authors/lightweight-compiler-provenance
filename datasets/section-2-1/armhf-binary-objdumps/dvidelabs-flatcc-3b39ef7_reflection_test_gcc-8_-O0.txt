
../repos/dvidelabs-flatcc-3b39ef7/test/reflection_test/reflection_test:     file format elf32-littlearm


Disassembly of section .init:

00010784 <.init>:
   10784:	push	{r3, lr}
   10788:	bl	108b8 <_start@@Base+0x3c>
   1078c:	pop	{r3, pc}

Disassembly of section .plt:

00010790 <strcmp@plt-0x14>:
   10790:	push	{lr}		; (str lr, [sp, #-4]!)
   10794:	ldr	lr, [pc, #4]	; 107a0 <strcmp@plt-0x4>
   10798:	add	lr, pc, lr
   1079c:	ldr	pc, [lr, #8]!
   107a0:	andeq	r2, r1, r0, ror #16

000107a4 <strcmp@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #73728	; 0x12000
   107ac:	ldr	pc, [ip, #2144]!	; 0x860

000107b0 <printf@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #73728	; 0x12000
   107b8:	ldr	pc, [ip, #2136]!	; 0x858

000107bc <fopen@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #73728	; 0x12000
   107c4:	ldr	pc, [ip, #2128]!	; 0x850

000107c8 <free@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #73728	; 0x12000
   107d0:	ldr	pc, [ip, #2120]!	; 0x848

000107d4 <ftell@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #73728	; 0x12000
   107dc:	ldr	pc, [ip, #2112]!	; 0x840

000107e0 <rewind@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #73728	; 0x12000
   107e8:	ldr	pc, [ip, #2104]!	; 0x838

000107ec <fwrite@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #73728	; 0x12000
   107f4:	ldr	pc, [ip, #2096]!	; 0x830

000107f8 <fread@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #73728	; 0x12000
   10800:	ldr	pc, [ip, #2088]!	; 0x828

00010804 <puts@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #73728	; 0x12000
   1080c:	ldr	pc, [ip, #2080]!	; 0x820

00010810 <malloc@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2072]!	; 0x818

0001081c <__libc_start_main@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2064]!	; 0x810

00010828 <__gmon_start__@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2056]!	; 0x808

00010834 <exit@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2048]!	; 0x800

00010840 <strncpy@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2040]!	; 0x7f8

0001084c <fclose@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #2032]!	; 0x7f0

00010858 <fseek@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #2024]!	; 0x7e8

00010864 <abort@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #2016]!	; 0x7e0

00010870 <__assert_fail@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #2008]!	; 0x7d8

Disassembly of section .text:

0001087c <_start@@Base>:
   1087c:	mov	fp, #0
   10880:	mov	lr, #0
   10884:	pop	{r1}		; (ldr r1, [sp], #4)
   10888:	mov	r2, sp
   1088c:	push	{r2}		; (str r2, [sp, #-4]!)
   10890:	push	{r0}		; (str r0, [sp, #-4]!)
   10894:	ldr	ip, [pc, #16]	; 108ac <_start@@Base+0x30>
   10898:	push	{ip}		; (str ip, [sp, #-4]!)
   1089c:	ldr	r0, [pc, #12]	; 108b0 <_start@@Base+0x34>
   108a0:	ldr	r3, [pc, #12]	; 108b4 <_start@@Base+0x38>
   108a4:	bl	1081c <__libc_start_main@plt>
   108a8:	bl	10864 <abort@plt>
   108ac:	muleq	r1, r4, r4
   108b0:	andeq	r2, r1, r8, ror r3
   108b4:	andeq	r2, r1, r4, lsr r4
   108b8:	ldr	r3, [pc, #20]	; 108d4 <_start@@Base+0x58>
   108bc:	ldr	r2, [pc, #20]	; 108d8 <_start@@Base+0x5c>
   108c0:	add	r3, pc, r3
   108c4:	ldr	r2, [r3, r2]
   108c8:	cmp	r2, #0
   108cc:	bxeq	lr
   108d0:	b	10828 <__gmon_start__@plt>
   108d4:	andeq	r2, r1, r8, lsr r7
   108d8:	andeq	r0, r0, r8, asr r0
   108dc:	ldr	r0, [pc, #24]	; 108fc <_start@@Base+0x80>
   108e0:	ldr	r3, [pc, #24]	; 10900 <_start@@Base+0x84>
   108e4:	cmp	r3, r0
   108e8:	bxeq	lr
   108ec:	ldr	r3, [pc, #16]	; 10904 <_start@@Base+0x88>
   108f0:	cmp	r3, #0
   108f4:	bxeq	lr
   108f8:	bx	r3
   108fc:	andeq	r3, r2, r4, ror r0
   10900:	andeq	r3, r2, r4, ror r0
   10904:	andeq	r0, r0, r0
   10908:	ldr	r0, [pc, #36]	; 10934 <_start@@Base+0xb8>
   1090c:	ldr	r1, [pc, #36]	; 10938 <_start@@Base+0xbc>
   10910:	sub	r1, r1, r0
   10914:	asr	r1, r1, #2
   10918:	add	r1, r1, r1, lsr #31
   1091c:	asrs	r1, r1, #1
   10920:	bxeq	lr
   10924:	ldr	r3, [pc, #16]	; 1093c <_start@@Base+0xc0>
   10928:	cmp	r3, #0
   1092c:	bxeq	lr
   10930:	bx	r3
   10934:	andeq	r3, r2, r4, ror r0
   10938:	andeq	r3, r2, r4, ror r0
   1093c:	andeq	r0, r0, r0
   10940:	push	{r4, lr}
   10944:	ldr	r4, [pc, #24]	; 10964 <_start@@Base+0xe8>
   10948:	ldrb	r3, [r4]
   1094c:	cmp	r3, #0
   10950:	popne	{r4, pc}
   10954:	bl	108dc <_start@@Base+0x60>
   10958:	mov	r3, #1
   1095c:	strb	r3, [r4]
   10960:	pop	{r4, pc}
   10964:	andeq	r3, r2, r4, ror r0
   10968:	b	10908 <_start@@Base+0x8c>
   1096c:	str	fp, [sp, #-8]!
   10970:	str	lr, [sp, #4]
   10974:	add	fp, sp, #4
   10978:	sub	sp, sp, #40	; 0x28
   1097c:	str	r0, [fp, #-32]	; 0xffffffe0
   10980:	str	r1, [fp, #-36]	; 0xffffffdc
   10984:	str	r2, [fp, #-40]	; 0xffffffd8
   10988:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1098c:	cmp	r3, #0
   10990:	bne	1099c <_start@@Base+0x120>
   10994:	sub	r3, fp, #28
   10998:	b	109a0 <_start@@Base+0x124>
   1099c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   109a0:	str	r3, [fp, #-40]	; 0xffffffd8
   109a4:	ldr	r3, [pc, #404]	; 10b40 <_start@@Base+0x2c4>
   109a8:	add	r3, pc, r3
   109ac:	mov	r1, r3
   109b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   109b4:	bl	107bc <fopen@plt>
   109b8:	str	r0, [fp, #-20]	; 0xffffffec
   109bc:	mov	r3, #0
   109c0:	str	r3, [fp, #-8]
   109c4:	mov	r3, #0
   109c8:	str	r3, [fp, #-16]
   109cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   109d0:	cmp	r3, #0
   109d4:	beq	10ad8 <_start@@Base+0x25c>
   109d8:	mov	r2, #2
   109dc:	mov	r1, #0
   109e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   109e4:	bl	10858 <fseek@plt>
   109e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   109ec:	bl	107d4 <ftell@plt>
   109f0:	mov	r3, r0
   109f4:	str	r3, [fp, #-8]
   109f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   109fc:	ldr	r2, [fp, #-8]
   10a00:	str	r2, [r3]
   10a04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10a08:	cmp	r3, #0
   10a0c:	beq	10a20 <_start@@Base+0x1a4>
   10a10:	ldr	r2, [fp, #-8]
   10a14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10a18:	cmp	r2, r3
   10a1c:	bhi	10ae0 <_start@@Base+0x264>
   10a20:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a24:	bl	107e0 <rewind@plt>
   10a28:	ldr	r3, [fp, #-8]
   10a2c:	cmp	r3, #0
   10a30:	beq	10a3c <_start@@Base+0x1c0>
   10a34:	ldr	r3, [fp, #-8]
   10a38:	b	10a40 <_start@@Base+0x1c4>
   10a3c:	mov	r3, #1
   10a40:	mov	r0, r3
   10a44:	bl	10810 <malloc@plt>
   10a48:	mov	r3, r0
   10a4c:	str	r3, [fp, #-16]
   10a50:	ldr	r3, [fp, #-16]
   10a54:	cmp	r3, #0
   10a58:	beq	10ae8 <_start@@Base+0x26c>
   10a5c:	mov	r3, #0
   10a60:	str	r3, [fp, #-12]
   10a64:	b	10a78 <_start@@Base+0x1fc>
   10a68:	ldr	r2, [fp, #-12]
   10a6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a70:	add	r3, r2, r3
   10a74:	str	r3, [fp, #-12]
   10a78:	ldr	r2, [fp, #-16]
   10a7c:	ldr	r3, [fp, #-12]
   10a80:	add	r0, r2, r3
   10a84:	ldr	r2, [fp, #-8]
   10a88:	ldr	r3, [fp, #-12]
   10a8c:	sub	r2, r2, r3
   10a90:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a94:	mov	r1, #1
   10a98:	bl	107f8 <fread@plt>
   10a9c:	str	r0, [fp, #-24]	; 0xffffffe8
   10aa0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10aa4:	cmp	r3, #0
   10aa8:	bne	10a68 <_start@@Base+0x1ec>
   10aac:	ldr	r2, [fp, #-12]
   10ab0:	ldr	r3, [fp, #-8]
   10ab4:	cmp	r2, r3
   10ab8:	bne	10af0 <_start@@Base+0x274>
   10abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ac0:	bl	1084c <fclose@plt>
   10ac4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10ac8:	ldr	r2, [fp, #-8]
   10acc:	str	r2, [r3]
   10ad0:	ldr	r3, [fp, #-16]
   10ad4:	b	10b2c <_start@@Base+0x2b0>
   10ad8:	nop	{0}
   10adc:	b	10af4 <_start@@Base+0x278>
   10ae0:	nop	{0}
   10ae4:	b	10af4 <_start@@Base+0x278>
   10ae8:	nop	{0}
   10aec:	b	10af4 <_start@@Base+0x278>
   10af0:	nop	{0}
   10af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10af8:	cmp	r3, #0
   10afc:	beq	10b08 <_start@@Base+0x28c>
   10b00:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b04:	bl	1084c <fclose@plt>
   10b08:	ldr	r3, [fp, #-16]
   10b0c:	cmp	r3, #0
   10b10:	beq	10b1c <_start@@Base+0x2a0>
   10b14:	ldr	r0, [fp, #-16]
   10b18:	bl	107c8 <free@plt>
   10b1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10b20:	ldr	r2, [fp, #-8]
   10b24:	str	r2, [r3]
   10b28:	mov	r3, #0
   10b2c:	mov	r0, r3
   10b30:	sub	sp, fp, #4
   10b34:	ldr	fp, [sp]
   10b38:	add	sp, sp, #4
   10b3c:	pop	{pc}		; (ldr pc, [sp], #4)
   10b40:	strdeq	r1, [r0], -r4
   10b44:	push	{fp}		; (str fp, [sp, #-4]!)
   10b48:	add	fp, sp, #0
   10b4c:	sub	sp, sp, #12
   10b50:	str	r0, [fp, #-8]
   10b54:	ldr	r3, [fp, #-8]
   10b58:	mov	r0, r3
   10b5c:	add	sp, fp, #0
   10b60:	pop	{fp}		; (ldr fp, [sp], #4)
   10b64:	bx	lr
   10b68:	str	fp, [sp, #-8]!
   10b6c:	str	lr, [sp, #4]
   10b70:	add	fp, sp, #4
   10b74:	sub	sp, sp, #8
   10b78:	str	r0, [fp, #-8]
   10b7c:	ldr	r3, [fp, #-8]
   10b80:	ldr	r3, [r3]
   10b84:	mov	r0, r3
   10b88:	bl	10b44 <_start@@Base+0x2c8>
   10b8c:	mov	r3, r0
   10b90:	mov	r0, r3
   10b94:	sub	sp, fp, #4
   10b98:	ldr	fp, [sp]
   10b9c:	add	sp, sp, #4
   10ba0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ba4:	push	{fp}		; (str fp, [sp, #-4]!)
   10ba8:	add	fp, sp, #0
   10bac:	sub	sp, sp, #12
   10bb0:	strd	r0, [fp, #-12]
   10bb4:	ldrd	r2, [fp, #-12]
   10bb8:	mov	r0, r2
   10bbc:	mov	r1, r3
   10bc0:	add	sp, fp, #0
   10bc4:	pop	{fp}		; (ldr fp, [sp], #4)
   10bc8:	bx	lr
   10bcc:	str	fp, [sp, #-8]!
   10bd0:	str	lr, [sp, #4]
   10bd4:	add	fp, sp, #4
   10bd8:	sub	sp, sp, #8
   10bdc:	str	r0, [fp, #-8]
   10be0:	ldr	r3, [fp, #-8]
   10be4:	ldrd	r2, [r3]
   10be8:	mov	r0, r2
   10bec:	mov	r1, r3
   10bf0:	bl	10ba4 <_start@@Base+0x328>
   10bf4:	mov	r2, r0
   10bf8:	mov	r3, r1
   10bfc:	mov	r0, r2
   10c00:	mov	r1, r3
   10c04:	sub	sp, fp, #4
   10c08:	ldr	fp, [sp]
   10c0c:	add	sp, sp, #4
   10c10:	pop	{pc}		; (ldr pc, [sp], #4)
   10c14:	push	{fp}		; (str fp, [sp, #-4]!)
   10c18:	add	fp, sp, #0
   10c1c:	sub	sp, sp, #12
   10c20:	str	r0, [fp, #-8]
   10c24:	ldr	r3, [fp, #-8]
   10c28:	mov	r0, r3
   10c2c:	add	sp, fp, #0
   10c30:	pop	{fp}		; (ldr fp, [sp], #4)
   10c34:	bx	lr
   10c38:	str	fp, [sp, #-8]!
   10c3c:	str	lr, [sp, #4]
   10c40:	add	fp, sp, #4
   10c44:	sub	sp, sp, #8
   10c48:	str	r0, [fp, #-8]
   10c4c:	ldr	r3, [fp, #-8]
   10c50:	ldr	r3, [r3]
   10c54:	mov	r0, r3
   10c58:	bl	10c14 <_start@@Base+0x398>
   10c5c:	mov	r3, r0
   10c60:	mov	r0, r3
   10c64:	sub	sp, fp, #4
   10c68:	ldr	fp, [sp]
   10c6c:	add	sp, sp, #4
   10c70:	pop	{pc}		; (ldr pc, [sp], #4)
   10c74:	push	{fp}		; (str fp, [sp, #-4]!)
   10c78:	add	fp, sp, #0
   10c7c:	sub	sp, sp, #12
   10c80:	str	r0, [fp, #-8]
   10c84:	ldr	r3, [fp, #-8]
   10c88:	mov	r0, r3
   10c8c:	add	sp, fp, #0
   10c90:	pop	{fp}		; (ldr fp, [sp], #4)
   10c94:	bx	lr
   10c98:	str	fp, [sp, #-8]!
   10c9c:	str	lr, [sp, #4]
   10ca0:	add	fp, sp, #4
   10ca4:	sub	sp, sp, #8
   10ca8:	str	r0, [fp, #-8]
   10cac:	ldr	r3, [fp, #-8]
   10cb0:	ldr	r3, [r3]
   10cb4:	mov	r0, r3
   10cb8:	bl	10c74 <_start@@Base+0x3f8>
   10cbc:	mov	r3, r0
   10cc0:	mov	r0, r3
   10cc4:	sub	sp, fp, #4
   10cc8:	ldr	fp, [sp]
   10ccc:	add	sp, sp, #4
   10cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   10cd4:	push	{fp}		; (str fp, [sp, #-4]!)
   10cd8:	add	fp, sp, #0
   10cdc:	sub	sp, sp, #12
   10ce0:	mov	r3, r0
   10ce4:	strh	r3, [fp, #-6]
   10ce8:	ldrh	r3, [fp, #-6]
   10cec:	mov	r0, r3
   10cf0:	add	sp, fp, #0
   10cf4:	pop	{fp}		; (ldr fp, [sp], #4)
   10cf8:	bx	lr
   10cfc:	str	fp, [sp, #-8]!
   10d00:	str	lr, [sp, #4]
   10d04:	add	fp, sp, #4
   10d08:	sub	sp, sp, #8
   10d0c:	str	r0, [fp, #-8]
   10d10:	ldr	r3, [fp, #-8]
   10d14:	ldrh	r3, [r3]
   10d18:	mov	r0, r3
   10d1c:	bl	10cd4 <_start@@Base+0x458>
   10d20:	mov	r3, r0
   10d24:	mov	r0, r3
   10d28:	sub	sp, fp, #4
   10d2c:	ldr	fp, [sp]
   10d30:	add	sp, sp, #4
   10d34:	pop	{pc}		; (ldr pc, [sp], #4)
   10d38:	push	{fp}		; (str fp, [sp, #-4]!)
   10d3c:	add	fp, sp, #0
   10d40:	sub	sp, sp, #12
   10d44:	str	r0, [fp, #-8]
   10d48:	ldr	r3, [fp, #-8]
   10d4c:	mov	r0, r3
   10d50:	add	sp, fp, #0
   10d54:	pop	{fp}		; (ldr fp, [sp], #4)
   10d58:	bx	lr
   10d5c:	push	{fp}		; (str fp, [sp, #-4]!)
   10d60:	add	fp, sp, #0
   10d64:	sub	sp, sp, #12
   10d68:	str	r0, [fp, #-8]
   10d6c:	ldr	r3, [fp, #-8]
   10d70:	mov	r0, r3
   10d74:	add	sp, fp, #0
   10d78:	pop	{fp}		; (ldr fp, [sp], #4)
   10d7c:	bx	lr
   10d80:	str	fp, [sp, #-8]!
   10d84:	str	lr, [sp, #4]
   10d88:	add	fp, sp, #4
   10d8c:	sub	sp, sp, #8
   10d90:	str	r0, [fp, #-8]
   10d94:	ldr	r3, [fp, #-8]
   10d98:	ldr	r3, [r3]
   10d9c:	mov	r0, r3
   10da0:	bl	10d38 <_start@@Base+0x4bc>
   10da4:	mov	r3, r0
   10da8:	mov	r0, r3
   10dac:	sub	sp, fp, #4
   10db0:	ldr	fp, [sp]
   10db4:	add	sp, sp, #4
   10db8:	pop	{pc}		; (ldr pc, [sp], #4)
   10dbc:	str	fp, [sp, #-8]!
   10dc0:	str	lr, [sp, #4]
   10dc4:	add	fp, sp, #4
   10dc8:	sub	sp, sp, #8
   10dcc:	str	r0, [fp, #-8]
   10dd0:	ldr	r3, [fp, #-8]
   10dd4:	cmp	r3, #0
   10dd8:	beq	10df4 <_start@@Base+0x578>
   10ddc:	ldr	r3, [fp, #-8]
   10de0:	sub	r3, r3, #4
   10de4:	mov	r0, r3
   10de8:	bl	10c38 <_start@@Base+0x3bc>
   10dec:	mov	r3, r0
   10df0:	b	10df8 <_start@@Base+0x57c>
   10df4:	mov	r3, #0
   10df8:	mov	r0, r3
   10dfc:	sub	sp, fp, #4
   10e00:	ldr	fp, [sp]
   10e04:	add	sp, sp, #4
   10e08:	pop	{pc}		; (ldr pc, [sp], #4)
   10e0c:	str	fp, [sp, #-8]!
   10e10:	str	lr, [sp, #4]
   10e14:	add	fp, sp, #4
   10e18:	sub	sp, sp, #16
   10e1c:	str	r0, [fp, #-8]
   10e20:	str	r1, [fp, #-12]
   10e24:	str	r2, [fp, #-16]
   10e28:	ldr	r1, [fp, #-12]
   10e2c:	ldr	r0, [fp, #-8]
   10e30:	bl	107a4 <strcmp@plt>
   10e34:	mov	r3, r0
   10e38:	mov	r0, r3
   10e3c:	sub	sp, fp, #4
   10e40:	ldr	fp, [sp]
   10e44:	add	sp, sp, #4
   10e48:	pop	{pc}		; (ldr pc, [sp], #4)
   10e4c:	str	fp, [sp, #-8]!
   10e50:	str	lr, [sp, #4]
   10e54:	add	fp, sp, #4
   10e58:	sub	sp, sp, #16
   10e5c:	str	r0, [fp, #-16]
   10e60:	str	r1, [fp, #-20]	; 0xffffffec
   10e64:	mov	r3, #0
   10e68:	str	r3, [fp, #-12]
   10e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10e70:	cmp	r3, #0
   10e74:	bne	10e80 <_start@@Base+0x604>
   10e78:	mov	r3, #1
   10e7c:	b	10ee4 <_start@@Base+0x668>
   10e80:	sub	r3, fp, #12
   10e84:	mov	r2, #4
   10e88:	ldr	r1, [fp, #-20]	; 0xffffffec
   10e8c:	mov	r0, r3
   10e90:	bl	10840 <strncpy@plt>
   10e94:	ldr	r3, [fp, #-12]
   10e98:	mov	r0, r3
   10e9c:	bl	10d5c <_start@@Base+0x4e0>
   10ea0:	mov	r3, r0
   10ea4:	str	r3, [fp, #-12]
   10ea8:	ldr	r3, [fp, #-16]
   10eac:	add	r3, r3, #4
   10eb0:	mov	r0, r3
   10eb4:	bl	10d80 <_start@@Base+0x504>
   10eb8:	str	r0, [fp, #-8]
   10ebc:	ldr	r3, [fp, #-12]
   10ec0:	cmp	r3, #0
   10ec4:	beq	10ed8 <_start@@Base+0x65c>
   10ec8:	ldr	r3, [fp, #-12]
   10ecc:	ldr	r2, [fp, #-8]
   10ed0:	cmp	r2, r3
   10ed4:	bne	10ee0 <_start@@Base+0x664>
   10ed8:	mov	r3, #1
   10edc:	b	10ee4 <_start@@Base+0x668>
   10ee0:	mov	r3, #0
   10ee4:	mov	r0, r3
   10ee8:	sub	sp, fp, #4
   10eec:	ldr	fp, [sp]
   10ef0:	add	sp, sp, #4
   10ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   10ef8:	push	{fp}		; (str fp, [sp, #-4]!)
   10efc:	add	fp, sp, #0
   10f00:	sub	sp, sp, #12
   10f04:	mov	r3, r0
   10f08:	strb	r3, [fp, #-5]
   10f0c:	ldrsb	r3, [fp, #-5]
   10f10:	mov	r0, r3
   10f14:	add	sp, fp, #0
   10f18:	pop	{fp}		; (ldr fp, [sp], #4)
   10f1c:	bx	lr
   10f20:	str	fp, [sp, #-8]!
   10f24:	str	lr, [sp, #4]
   10f28:	add	fp, sp, #4
   10f2c:	sub	sp, sp, #8
   10f30:	str	r0, [fp, #-8]
   10f34:	ldr	r3, [fp, #-8]
   10f38:	ldrsb	r3, [r3]
   10f3c:	mov	r0, r3
   10f40:	bl	10ef8 <_start@@Base+0x67c>
   10f44:	mov	r3, r0
   10f48:	mov	r0, r3
   10f4c:	sub	sp, fp, #4
   10f50:	ldr	fp, [sp]
   10f54:	add	sp, sp, #4
   10f58:	pop	{pc}		; (ldr pc, [sp], #4)
   10f5c:	str	fp, [sp, #-8]!
   10f60:	str	lr, [sp, #4]
   10f64:	add	fp, sp, #4
   10f68:	sub	sp, sp, #16
   10f6c:	str	r0, [fp, #-16]
   10f70:	mov	r3, #0
   10f74:	strh	r3, [fp, #-6]
   10f78:	ldr	r3, [fp, #-16]
   10f7c:	cmp	r3, #0
   10f80:	bne	10fa4 <_start@@Base+0x728>
   10f84:	ldr	r3, [pc, #196]	; 11050 <_start@@Base+0x7d4>
   10f88:	add	r3, pc, r3
   10f8c:	mov	r2, #147	; 0x93
   10f90:	ldr	r1, [pc, #188]	; 11054 <_start@@Base+0x7d8>
   10f94:	add	r1, pc, r1
   10f98:	ldr	r0, [pc, #184]	; 11058 <_start@@Base+0x7dc>
   10f9c:	add	r0, pc, r0
   10fa0:	bl	10870 <__assert_fail@plt>
   10fa4:	mov	r3, #0
   10fa8:	strh	r3, [fp, #-8]
   10fac:	ldr	r0, [fp, #-16]
   10fb0:	bl	10c98 <_start@@Base+0x41c>
   10fb4:	mov	r3, r0
   10fb8:	rsb	r3, r3, #0
   10fbc:	ldr	r2, [fp, #-16]
   10fc0:	add	r3, r2, r3
   10fc4:	str	r3, [fp, #-12]
   10fc8:	ldr	r0, [fp, #-12]
   10fcc:	bl	10cfc <_start@@Base+0x480>
   10fd0:	mov	r3, r0
   10fd4:	mov	r2, r3
   10fd8:	ldrh	r3, [fp, #-8]
   10fdc:	add	r3, r3, #3
   10fe0:	lsl	r3, r3, #1
   10fe4:	cmp	r2, r3
   10fe8:	bcc	11010 <_start@@Base+0x794>
   10fec:	ldrh	r3, [fp, #-8]
   10ff0:	add	r3, r3, #2
   10ff4:	lsl	r3, r3, #1
   10ff8:	ldr	r2, [fp, #-12]
   10ffc:	add	r3, r2, r3
   11000:	mov	r0, r3
   11004:	bl	10cfc <_start@@Base+0x480>
   11008:	mov	r3, r0
   1100c:	strh	r3, [fp, #-6]
   11010:	ldrh	r3, [fp, #-6]
   11014:	cmp	r3, #0
   11018:	beq	11038 <_start@@Base+0x7bc>
   1101c:	ldrh	r3, [fp, #-6]
   11020:	ldr	r2, [fp, #-16]
   11024:	add	r3, r2, r3
   11028:	mov	r0, r3
   1102c:	bl	10f20 <_start@@Base+0x6a4>
   11030:	mov	r3, r0
   11034:	b	1103c <_start@@Base+0x7c0>
   11038:	mov	r3, #0
   1103c:	mov	r0, r3
   11040:	sub	sp, fp, #4
   11044:	ldr	fp, [sp]
   11048:	add	sp, sp, #4
   1104c:	pop	{pc}		; (ldr pc, [sp], #4)
   11050:	andeq	r1, r0, r4, ror r9
   11054:	andeq	r1, r0, r0, lsl r5
   11058:	andeq	r1, r0, r0, lsl #11
   1105c:	str	fp, [sp, #-8]!
   11060:	str	lr, [sp, #4]
   11064:	add	fp, sp, #4
   11068:	sub	sp, sp, #16
   1106c:	str	r0, [fp, #-16]
   11070:	mov	r3, #0
   11074:	strh	r3, [fp, #-6]
   11078:	ldr	r3, [fp, #-16]
   1107c:	cmp	r3, #0
   11080:	bne	110a4 <_start@@Base+0x828>
   11084:	ldr	r3, [pc, #196]	; 11150 <_start@@Base+0x8d4>
   11088:	add	r3, pc, r3
   1108c:	mov	r2, #148	; 0x94
   11090:	ldr	r1, [pc, #188]	; 11154 <_start@@Base+0x8d8>
   11094:	add	r1, pc, r1
   11098:	ldr	r0, [pc, #184]	; 11158 <_start@@Base+0x8dc>
   1109c:	add	r0, pc, r0
   110a0:	bl	10870 <__assert_fail@plt>
   110a4:	mov	r3, #1
   110a8:	strh	r3, [fp, #-8]
   110ac:	ldr	r0, [fp, #-16]
   110b0:	bl	10c98 <_start@@Base+0x41c>
   110b4:	mov	r3, r0
   110b8:	rsb	r3, r3, #0
   110bc:	ldr	r2, [fp, #-16]
   110c0:	add	r3, r2, r3
   110c4:	str	r3, [fp, #-12]
   110c8:	ldr	r0, [fp, #-12]
   110cc:	bl	10cfc <_start@@Base+0x480>
   110d0:	mov	r3, r0
   110d4:	mov	r2, r3
   110d8:	ldrh	r3, [fp, #-8]
   110dc:	add	r3, r3, #3
   110e0:	lsl	r3, r3, #1
   110e4:	cmp	r2, r3
   110e8:	bcc	11110 <_start@@Base+0x894>
   110ec:	ldrh	r3, [fp, #-8]
   110f0:	add	r3, r3, #2
   110f4:	lsl	r3, r3, #1
   110f8:	ldr	r2, [fp, #-12]
   110fc:	add	r3, r2, r3
   11100:	mov	r0, r3
   11104:	bl	10cfc <_start@@Base+0x480>
   11108:	mov	r3, r0
   1110c:	strh	r3, [fp, #-6]
   11110:	ldrh	r3, [fp, #-6]
   11114:	cmp	r3, #0
   11118:	beq	11138 <_start@@Base+0x8bc>
   1111c:	ldrh	r3, [fp, #-6]
   11120:	ldr	r2, [fp, #-16]
   11124:	add	r3, r2, r3
   11128:	mov	r0, r3
   1112c:	bl	10f20 <_start@@Base+0x6a4>
   11130:	mov	r3, r0
   11134:	b	1113c <_start@@Base+0x8c0>
   11138:	mov	r3, #0
   1113c:	mov	r0, r3
   11140:	sub	sp, fp, #4
   11144:	ldr	fp, [sp]
   11148:	add	sp, sp, #4
   1114c:	pop	{pc}		; (ldr pc, [sp], #4)
   11150:	muleq	r0, r0, r8
   11154:	andeq	r1, r0, r0, lsl r4
   11158:	andeq	r1, r0, r0, lsl #9
   1115c:	str	fp, [sp, #-8]!
   11160:	str	lr, [sp, #4]
   11164:	add	fp, sp, #4
   11168:	sub	sp, sp, #16
   1116c:	str	r0, [fp, #-16]
   11170:	mov	r3, #0
   11174:	strh	r3, [fp, #-6]
   11178:	ldr	r3, [fp, #-16]
   1117c:	cmp	r3, #0
   11180:	bne	111a4 <_start@@Base+0x928>
   11184:	ldr	r3, [pc, #196]	; 11250 <_start@@Base+0x9d4>
   11188:	add	r3, pc, r3
   1118c:	mov	r2, #149	; 0x95
   11190:	ldr	r1, [pc, #188]	; 11254 <_start@@Base+0x9d8>
   11194:	add	r1, pc, r1
   11198:	ldr	r0, [pc, #184]	; 11258 <_start@@Base+0x9dc>
   1119c:	add	r0, pc, r0
   111a0:	bl	10870 <__assert_fail@plt>
   111a4:	mov	r3, #2
   111a8:	strh	r3, [fp, #-8]
   111ac:	ldr	r0, [fp, #-16]
   111b0:	bl	10c98 <_start@@Base+0x41c>
   111b4:	mov	r3, r0
   111b8:	rsb	r3, r3, #0
   111bc:	ldr	r2, [fp, #-16]
   111c0:	add	r3, r2, r3
   111c4:	str	r3, [fp, #-12]
   111c8:	ldr	r0, [fp, #-12]
   111cc:	bl	10cfc <_start@@Base+0x480>
   111d0:	mov	r3, r0
   111d4:	mov	r2, r3
   111d8:	ldrh	r3, [fp, #-8]
   111dc:	add	r3, r3, #3
   111e0:	lsl	r3, r3, #1
   111e4:	cmp	r2, r3
   111e8:	bcc	11210 <_start@@Base+0x994>
   111ec:	ldrh	r3, [fp, #-8]
   111f0:	add	r3, r3, #2
   111f4:	lsl	r3, r3, #1
   111f8:	ldr	r2, [fp, #-12]
   111fc:	add	r3, r2, r3
   11200:	mov	r0, r3
   11204:	bl	10cfc <_start@@Base+0x480>
   11208:	mov	r3, r0
   1120c:	strh	r3, [fp, #-6]
   11210:	ldrh	r3, [fp, #-6]
   11214:	cmp	r3, #0
   11218:	beq	11238 <_start@@Base+0x9bc>
   1121c:	ldrh	r3, [fp, #-6]
   11220:	ldr	r2, [fp, #-16]
   11224:	add	r3, r2, r3
   11228:	mov	r0, r3
   1122c:	bl	10b68 <_start@@Base+0x2ec>
   11230:	mov	r3, r0
   11234:	b	1123c <_start@@Base+0x9c0>
   11238:	mvn	r3, #0
   1123c:	mov	r0, r3
   11240:	sub	sp, fp, #4
   11244:	ldr	fp, [sp]
   11248:	add	sp, sp, #4
   1124c:	pop	{pc}		; (ldr pc, [sp], #4)
   11250:	andeq	r1, r0, r8, lsr #15
   11254:	andeq	r1, r0, r0, lsl r3
   11258:	andeq	r1, r0, r0, lsl #7
   1125c:	str	fp, [sp, #-8]!
   11260:	str	lr, [sp, #4]
   11264:	add	fp, sp, #4
   11268:	sub	sp, sp, #8
   1126c:	str	r0, [fp, #-8]
   11270:	ldr	r3, [fp, #-8]
   11274:	cmp	r3, #0
   11278:	beq	11294 <_start@@Base+0xa18>
   1127c:	ldr	r3, [fp, #-8]
   11280:	sub	r3, r3, #4
   11284:	mov	r0, r3
   11288:	bl	10c38 <_start@@Base+0x3bc>
   1128c:	mov	r3, r0
   11290:	b	11298 <_start@@Base+0xa1c>
   11294:	mov	r3, #0
   11298:	mov	r0, r3
   1129c:	sub	sp, fp, #4
   112a0:	ldr	fp, [sp]
   112a4:	add	sp, sp, #4
   112a8:	pop	{pc}		; (ldr pc, [sp], #4)
   112ac:	str	fp, [sp, #-8]!
   112b0:	str	lr, [sp, #4]
   112b4:	add	fp, sp, #4
   112b8:	sub	sp, sp, #16
   112bc:	str	r0, [fp, #-16]
   112c0:	str	r1, [fp, #-20]	; 0xffffffec
   112c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   112c8:	lsl	r3, r3, #2
   112cc:	ldr	r2, [fp, #-16]
   112d0:	add	r3, r2, r3
   112d4:	str	r3, [fp, #-8]
   112d8:	ldr	r0, [fp, #-16]
   112dc:	bl	10dbc <_start@@Base+0x540>
   112e0:	mov	r2, r0
   112e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   112e8:	cmp	r3, r2
   112ec:	bcc	11310 <_start@@Base+0xa94>
   112f0:	ldr	r3, [pc, #64]	; 11338 <_start@@Base+0xabc>
   112f4:	add	r3, pc, r3
   112f8:	mov	r2, #192	; 0xc0
   112fc:	ldr	r1, [pc, #56]	; 1133c <_start@@Base+0xac0>
   11300:	add	r1, pc, r1
   11304:	ldr	r0, [pc, #52]	; 11340 <_start@@Base+0xac4>
   11308:	add	r0, pc, r0
   1130c:	bl	10870 <__assert_fail@plt>
   11310:	ldr	r0, [fp, #-8]
   11314:	bl	10c38 <_start@@Base+0x3bc>
   11318:	mov	r2, r0
   1131c:	ldr	r3, [fp, #-8]
   11320:	add	r3, r3, r2
   11324:	mov	r0, r3
   11328:	sub	sp, fp, #4
   1132c:	ldr	fp, [sp]
   11330:	add	sp, sp, #4
   11334:	pop	{pc}		; (ldr pc, [sp], #4)
   11338:	ldrdeq	r1, [r0], -r8
   1133c:	andeq	r1, r0, r4, lsr #3
   11340:	andeq	r1, r0, ip, lsr r2
   11344:	str	fp, [sp, #-8]!
   11348:	str	lr, [sp, #4]
   1134c:	add	fp, sp, #4
   11350:	sub	sp, sp, #24
   11354:	str	r0, [fp, #-24]	; 0xffffffe8
   11358:	mov	r3, #0
   1135c:	strh	r3, [fp, #-6]
   11360:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11364:	cmp	r3, #0
   11368:	bne	1138c <_start@@Base+0xb10>
   1136c:	ldr	r3, [pc, #240]	; 11464 <_start@@Base+0xbe8>
   11370:	add	r3, pc, r3
   11374:	mov	r2, #195	; 0xc3
   11378:	ldr	r1, [pc, #232]	; 11468 <_start@@Base+0xbec>
   1137c:	add	r1, pc, r1
   11380:	ldr	r0, [pc, #228]	; 1146c <_start@@Base+0xbf0>
   11384:	add	r0, pc, r0
   11388:	bl	10870 <__assert_fail@plt>
   1138c:	mov	r3, #0
   11390:	strh	r3, [fp, #-8]
   11394:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11398:	bl	10c98 <_start@@Base+0x41c>
   1139c:	mov	r3, r0
   113a0:	rsb	r3, r3, #0
   113a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   113a8:	add	r3, r2, r3
   113ac:	str	r3, [fp, #-12]
   113b0:	ldr	r0, [fp, #-12]
   113b4:	bl	10cfc <_start@@Base+0x480>
   113b8:	mov	r3, r0
   113bc:	mov	r2, r3
   113c0:	ldrh	r3, [fp, #-8]
   113c4:	add	r3, r3, #3
   113c8:	lsl	r3, r3, #1
   113cc:	cmp	r2, r3
   113d0:	bcc	113f8 <_start@@Base+0xb7c>
   113d4:	ldrh	r3, [fp, #-8]
   113d8:	add	r3, r3, #2
   113dc:	lsl	r3, r3, #1
   113e0:	ldr	r2, [fp, #-12]
   113e4:	add	r3, r2, r3
   113e8:	mov	r0, r3
   113ec:	bl	10cfc <_start@@Base+0x480>
   113f0:	mov	r3, r0
   113f4:	strh	r3, [fp, #-6]
   113f8:	ldrh	r3, [fp, #-6]
   113fc:	cmp	r3, #0
   11400:	beq	11430 <_start@@Base+0xbb4>
   11404:	ldrh	r3, [fp, #-6]
   11408:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1140c:	add	r3, r2, r3
   11410:	str	r3, [fp, #-16]
   11414:	ldr	r0, [fp, #-16]
   11418:	bl	10c38 <_start@@Base+0x3bc>
   1141c:	mov	r3, r0
   11420:	add	r3, r3, #4
   11424:	ldr	r2, [fp, #-16]
   11428:	add	r3, r2, r3
   1142c:	b	11450 <_start@@Base+0xbd4>
   11430:	ldr	r3, [pc, #56]	; 11470 <_start@@Base+0xbf4>
   11434:	add	r3, pc, r3
   11438:	mov	r2, #195	; 0xc3
   1143c:	ldr	r1, [pc, #48]	; 11474 <_start@@Base+0xbf8>
   11440:	add	r1, pc, r1
   11444:	ldr	r0, [pc, #44]	; 11478 <_start@@Base+0xbfc>
   11448:	add	r0, pc, r0
   1144c:	bl	10870 <__assert_fail@plt>
   11450:	mov	r0, r3
   11454:	sub	sp, fp, #4
   11458:	ldr	fp, [sp]
   1145c:	add	sp, sp, #4
   11460:	pop	{pc}		; (ldr pc, [sp], #4)
   11464:	andeq	r1, r0, r0, lsr #10
   11468:	andeq	r1, r0, r8, lsr #2
   1146c:	muleq	r0, r8, r1
   11470:	andeq	r1, r0, ip, asr r4
   11474:	andeq	r1, r0, r4, rrx
   11478:	andeq	r1, r0, r4, lsr r1
   1147c:	str	fp, [sp, #-8]!
   11480:	str	lr, [sp, #4]
   11484:	add	fp, sp, #4
   11488:	sub	sp, sp, #24
   1148c:	str	r0, [fp, #-24]	; 0xffffffe8
   11490:	str	r1, [fp, #-28]	; 0xffffffe4
   11494:	mov	r3, #0
   11498:	str	r3, [fp, #-8]
   1149c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114a0:	bl	1125c <_start@@Base+0x9e0>
   114a4:	str	r0, [fp, #-12]
   114a8:	ldr	r3, [fp, #-12]
   114ac:	cmp	r3, #0
   114b0:	bne	114c4 <_start@@Base+0xc48>
   114b4:	ldr	r3, [pc, #260]	; 115c0 <_start@@Base+0xd44>
   114b8:	add	r3, pc, r3
   114bc:	ldr	r3, [r3]
   114c0:	b	115ac <_start@@Base+0xd30>
   114c4:	ldr	r3, [fp, #-12]
   114c8:	sub	r3, r3, #1
   114cc:	str	r3, [fp, #-12]
   114d0:	b	11540 <_start@@Base+0xcc4>
   114d4:	ldr	r2, [fp, #-12]
   114d8:	ldr	r3, [fp, #-8]
   114dc:	sub	r3, r2, r3
   114e0:	lsr	r3, r3, #1
   114e4:	ldr	r2, [fp, #-8]
   114e8:	add	r3, r2, r3
   114ec:	str	r3, [fp, #-16]
   114f0:	ldr	r1, [fp, #-16]
   114f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114f8:	bl	112ac <_start@@Base+0xa30>
   114fc:	mov	r3, r0
   11500:	mov	r0, r3
   11504:	bl	11344 <_start@@Base+0xac8>
   11508:	str	r0, [fp, #-20]	; 0xffffffec
   1150c:	mov	r2, #0
   11510:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11514:	ldr	r0, [fp, #-20]	; 0xffffffec
   11518:	bl	10e0c <_start@@Base+0x590>
   1151c:	mov	r3, r0
   11520:	cmp	r3, #0
   11524:	bge	11538 <_start@@Base+0xcbc>
   11528:	ldr	r3, [fp, #-16]
   1152c:	add	r3, r3, #1
   11530:	str	r3, [fp, #-8]
   11534:	b	11540 <_start@@Base+0xcc4>
   11538:	ldr	r3, [fp, #-16]
   1153c:	str	r3, [fp, #-12]
   11540:	ldr	r2, [fp, #-8]
   11544:	ldr	r3, [fp, #-12]
   11548:	cmp	r2, r3
   1154c:	bcc	114d4 <_start@@Base+0xc58>
   11550:	ldr	r2, [fp, #-8]
   11554:	ldr	r3, [fp, #-12]
   11558:	cmp	r2, r3
   1155c:	bne	115a0 <_start@@Base+0xd24>
   11560:	ldr	r1, [fp, #-8]
   11564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11568:	bl	112ac <_start@@Base+0xa30>
   1156c:	mov	r3, r0
   11570:	mov	r0, r3
   11574:	bl	11344 <_start@@Base+0xac8>
   11578:	str	r0, [fp, #-20]	; 0xffffffec
   1157c:	mov	r2, #0
   11580:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11584:	ldr	r0, [fp, #-20]	; 0xffffffec
   11588:	bl	10e0c <_start@@Base+0x590>
   1158c:	mov	r3, r0
   11590:	cmp	r3, #0
   11594:	bne	115a0 <_start@@Base+0xd24>
   11598:	ldr	r3, [fp, #-8]
   1159c:	b	115ac <_start@@Base+0xd30>
   115a0:	ldr	r3, [pc, #28]	; 115c4 <_start@@Base+0xd48>
   115a4:	add	r3, pc, r3
   115a8:	ldr	r3, [r3]
   115ac:	mov	r0, r3
   115b0:	sub	sp, fp, #4
   115b4:	ldr	fp, [sp]
   115b8:	add	sp, sp, #4
   115bc:	pop	{pc}		; (ldr pc, [sp], #4)
   115c0:	andeq	r1, r1, r8, lsr #23
   115c4:			; <UNDEFINED> instruction: 0x00011abc
   115c8:	str	fp, [sp, #-8]!
   115cc:	str	lr, [sp, #4]
   115d0:	add	fp, sp, #4
   115d4:	sub	sp, sp, #8
   115d8:	str	r0, [fp, #-8]
   115dc:	str	r1, [fp, #-12]
   115e0:	ldr	r1, [fp, #-12]
   115e4:	ldr	r0, [fp, #-8]
   115e8:	bl	1147c <_start@@Base+0xc00>
   115ec:	mov	r3, r0
   115f0:	mov	r0, r3
   115f4:	sub	sp, fp, #4
   115f8:	ldr	fp, [sp]
   115fc:	add	sp, sp, #4
   11600:	pop	{pc}		; (ldr pc, [sp], #4)
   11604:	str	fp, [sp, #-8]!
   11608:	str	lr, [sp, #4]
   1160c:	add	fp, sp, #4
   11610:	sub	sp, sp, #24
   11614:	str	r0, [fp, #-24]	; 0xffffffe8
   11618:	mov	r3, #0
   1161c:	strh	r3, [fp, #-6]
   11620:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11624:	cmp	r3, #0
   11628:	bne	1164c <_start@@Base+0xdd0>
   1162c:	ldr	r3, [pc, #236]	; 11720 <_start@@Base+0xea4>
   11630:	add	r3, pc, r3
   11634:	mov	r2, #201	; 0xc9
   11638:	ldr	r1, [pc, #228]	; 11724 <_start@@Base+0xea8>
   1163c:	add	r1, pc, r1
   11640:	ldr	r0, [pc, #224]	; 11728 <_start@@Base+0xeac>
   11644:	add	r0, pc, r0
   11648:	bl	10870 <__assert_fail@plt>
   1164c:	mov	r3, #1
   11650:	strh	r3, [fp, #-8]
   11654:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11658:	bl	10c98 <_start@@Base+0x41c>
   1165c:	mov	r3, r0
   11660:	rsb	r3, r3, #0
   11664:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11668:	add	r3, r2, r3
   1166c:	str	r3, [fp, #-12]
   11670:	ldr	r0, [fp, #-12]
   11674:	bl	10cfc <_start@@Base+0x480>
   11678:	mov	r3, r0
   1167c:	mov	r2, r3
   11680:	ldrh	r3, [fp, #-8]
   11684:	add	r3, r3, #3
   11688:	lsl	r3, r3, #1
   1168c:	cmp	r2, r3
   11690:	bcc	116b8 <_start@@Base+0xe3c>
   11694:	ldrh	r3, [fp, #-8]
   11698:	add	r3, r3, #2
   1169c:	lsl	r3, r3, #1
   116a0:	ldr	r2, [fp, #-12]
   116a4:	add	r3, r2, r3
   116a8:	mov	r0, r3
   116ac:	bl	10cfc <_start@@Base+0x480>
   116b0:	mov	r3, r0
   116b4:	strh	r3, [fp, #-6]
   116b8:	ldrh	r3, [fp, #-6]
   116bc:	cmp	r3, #0
   116c0:	beq	116ec <_start@@Base+0xe70>
   116c4:	ldrh	r3, [fp, #-6]
   116c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   116cc:	add	r3, r2, r3
   116d0:	str	r3, [fp, #-16]
   116d4:	ldr	r0, [fp, #-16]
   116d8:	bl	10c38 <_start@@Base+0x3bc>
   116dc:	mov	r2, r0
   116e0:	ldr	r3, [fp, #-16]
   116e4:	add	r3, r3, r2
   116e8:	b	1170c <_start@@Base+0xe90>
   116ec:	ldr	r3, [pc, #56]	; 1172c <_start@@Base+0xeb0>
   116f0:	add	r3, pc, r3
   116f4:	mov	r2, #201	; 0xc9
   116f8:	ldr	r1, [pc, #48]	; 11730 <_start@@Base+0xeb4>
   116fc:	add	r1, pc, r1
   11700:	ldr	r0, [pc, #44]	; 11734 <_start@@Base+0xeb8>
   11704:	add	r0, pc, r0
   11708:	bl	10870 <__assert_fail@plt>
   1170c:	mov	r0, r3
   11710:	sub	sp, fp, #4
   11714:	ldr	fp, [sp]
   11718:	add	sp, sp, #4
   1171c:	pop	{pc}		; (ldr pc, [sp], #4)
   11720:			; <UNDEFINED> instruction: 0x000012b4
   11724:	andeq	r0, r0, r8, ror #28
   11728:	ldrdeq	r0, [r0], -r8
   1172c:	strdeq	r1, [r0], -r4
   11730:	andeq	r0, r0, r8, lsr #27
   11734:	andeq	r0, r0, r8, ror lr
   11738:	str	fp, [sp, #-8]!
   1173c:	str	lr, [sp, #4]
   11740:	add	fp, sp, #4
   11744:	sub	sp, sp, #16
   11748:	str	r0, [fp, #-16]
   1174c:	mov	r3, #0
   11750:	strh	r3, [fp, #-6]
   11754:	ldr	r3, [fp, #-16]
   11758:	cmp	r3, #0
   1175c:	bne	11780 <_start@@Base+0xf04>
   11760:	ldr	r3, [pc, #208]	; 11838 <_start@@Base+0xfbc>
   11764:	add	r3, pc, r3
   11768:	mov	r2, #204	; 0xcc
   1176c:	ldr	r1, [pc, #200]	; 1183c <_start@@Base+0xfc0>
   11770:	add	r1, pc, r1
   11774:	ldr	r0, [pc, #196]	; 11840 <_start@@Base+0xfc4>
   11778:	add	r0, pc, r0
   1177c:	bl	10870 <__assert_fail@plt>
   11780:	mov	r3, #4
   11784:	strh	r3, [fp, #-8]
   11788:	ldr	r0, [fp, #-16]
   1178c:	bl	10c98 <_start@@Base+0x41c>
   11790:	mov	r3, r0
   11794:	rsb	r3, r3, #0
   11798:	ldr	r2, [fp, #-16]
   1179c:	add	r3, r2, r3
   117a0:	str	r3, [fp, #-12]
   117a4:	ldr	r0, [fp, #-12]
   117a8:	bl	10cfc <_start@@Base+0x480>
   117ac:	mov	r3, r0
   117b0:	mov	r2, r3
   117b4:	ldrh	r3, [fp, #-8]
   117b8:	add	r3, r3, #3
   117bc:	lsl	r3, r3, #1
   117c0:	cmp	r2, r3
   117c4:	bcc	117ec <_start@@Base+0xf70>
   117c8:	ldrh	r3, [fp, #-8]
   117cc:	add	r3, r3, #2
   117d0:	lsl	r3, r3, #1
   117d4:	ldr	r2, [fp, #-12]
   117d8:	add	r3, r2, r3
   117dc:	mov	r0, r3
   117e0:	bl	10cfc <_start@@Base+0x480>
   117e4:	mov	r3, r0
   117e8:	strh	r3, [fp, #-6]
   117ec:	ldrh	r3, [fp, #-6]
   117f0:	cmp	r3, #0
   117f4:	beq	11818 <_start@@Base+0xf9c>
   117f8:	ldrh	r3, [fp, #-6]
   117fc:	ldr	r2, [fp, #-16]
   11800:	add	r3, r2, r3
   11804:	mov	r0, r3
   11808:	bl	10bcc <_start@@Base+0x350>
   1180c:	mov	r2, r0
   11810:	mov	r3, r1
   11814:	b	11820 <_start@@Base+0xfa4>
   11818:	mov	r2, #0
   1181c:	mov	r3, #0
   11820:	mov	r0, r2
   11824:	mov	r1, r3
   11828:	sub	sp, fp, #4
   1182c:	ldr	fp, [sp]
   11830:	add	sp, sp, #4
   11834:	pop	{pc}		; (ldr pc, [sp], #4)
   11838:	andeq	r1, r0, r4, asr #2
   1183c:	andeq	r0, r0, r4, lsr sp
   11840:	andeq	r0, r0, r4, lsr #27
   11844:	str	fp, [sp, #-8]!
   11848:	str	lr, [sp, #4]
   1184c:	add	fp, sp, #4
   11850:	sub	sp, sp, #8
   11854:	str	r0, [fp, #-8]
   11858:	ldr	r3, [fp, #-8]
   1185c:	cmp	r3, #0
   11860:	beq	1187c <_start@@Base+0x1000>
   11864:	ldr	r3, [fp, #-8]
   11868:	sub	r3, r3, #4
   1186c:	mov	r0, r3
   11870:	bl	10c38 <_start@@Base+0x3bc>
   11874:	mov	r3, r0
   11878:	b	11880 <_start@@Base+0x1004>
   1187c:	mov	r3, #0
   11880:	mov	r0, r3
   11884:	sub	sp, fp, #4
   11888:	ldr	fp, [sp]
   1188c:	add	sp, sp, #4
   11890:	pop	{pc}		; (ldr pc, [sp], #4)
   11894:	str	fp, [sp, #-8]!
   11898:	str	lr, [sp, #4]
   1189c:	add	fp, sp, #4
   118a0:	sub	sp, sp, #16
   118a4:	str	r0, [fp, #-16]
   118a8:	str	r1, [fp, #-20]	; 0xffffffec
   118ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   118b0:	lsl	r3, r3, #2
   118b4:	ldr	r2, [fp, #-16]
   118b8:	add	r3, r2, r3
   118bc:	str	r3, [fp, #-8]
   118c0:	ldr	r0, [fp, #-16]
   118c4:	bl	10dbc <_start@@Base+0x540>
   118c8:	mov	r2, r0
   118cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   118d0:	cmp	r3, r2
   118d4:	bcc	118f8 <_start@@Base+0x107c>
   118d8:	ldr	r3, [pc, #64]	; 11920 <_start@@Base+0x10a4>
   118dc:	add	r3, pc, r3
   118e0:	mov	r2, #215	; 0xd7
   118e4:	ldr	r1, [pc, #56]	; 11924 <_start@@Base+0x10a8>
   118e8:	add	r1, pc, r1
   118ec:	ldr	r0, [pc, #52]	; 11928 <_start@@Base+0x10ac>
   118f0:	add	r0, pc, r0
   118f4:	bl	10870 <__assert_fail@plt>
   118f8:	ldr	r0, [fp, #-8]
   118fc:	bl	10c38 <_start@@Base+0x3bc>
   11900:	mov	r2, r0
   11904:	ldr	r3, [fp, #-8]
   11908:	add	r3, r3, r2
   1190c:	mov	r0, r3
   11910:	sub	sp, fp, #4
   11914:	ldr	fp, [sp]
   11918:	add	sp, sp, #4
   1191c:	pop	{pc}		; (ldr pc, [sp], #4)
   11920:	andeq	r0, r0, r4, ror #30
   11924:			; <UNDEFINED> instruction: 0x00000bbc
   11928:	andeq	r0, r0, r4, asr ip
   1192c:	str	fp, [sp, #-8]!
   11930:	str	lr, [sp, #4]
   11934:	add	fp, sp, #4
   11938:	sub	sp, sp, #24
   1193c:	str	r0, [fp, #-24]	; 0xffffffe8
   11940:	mov	r3, #0
   11944:	strh	r3, [fp, #-6]
   11948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1194c:	cmp	r3, #0
   11950:	bne	11974 <_start@@Base+0x10f8>
   11954:	ldr	r3, [pc, #240]	; 11a4c <_start@@Base+0x11d0>
   11958:	add	r3, pc, r3
   1195c:	mov	r2, #218	; 0xda
   11960:	ldr	r1, [pc, #232]	; 11a50 <_start@@Base+0x11d4>
   11964:	add	r1, pc, r1
   11968:	ldr	r0, [pc, #228]	; 11a54 <_start@@Base+0x11d8>
   1196c:	add	r0, pc, r0
   11970:	bl	10870 <__assert_fail@plt>
   11974:	mov	r3, #0
   11978:	strh	r3, [fp, #-8]
   1197c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11980:	bl	10c98 <_start@@Base+0x41c>
   11984:	mov	r3, r0
   11988:	rsb	r3, r3, #0
   1198c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11990:	add	r3, r2, r3
   11994:	str	r3, [fp, #-12]
   11998:	ldr	r0, [fp, #-12]
   1199c:	bl	10cfc <_start@@Base+0x480>
   119a0:	mov	r3, r0
   119a4:	mov	r2, r3
   119a8:	ldrh	r3, [fp, #-8]
   119ac:	add	r3, r3, #3
   119b0:	lsl	r3, r3, #1
   119b4:	cmp	r2, r3
   119b8:	bcc	119e0 <_start@@Base+0x1164>
   119bc:	ldrh	r3, [fp, #-8]
   119c0:	add	r3, r3, #2
   119c4:	lsl	r3, r3, #1
   119c8:	ldr	r2, [fp, #-12]
   119cc:	add	r3, r2, r3
   119d0:	mov	r0, r3
   119d4:	bl	10cfc <_start@@Base+0x480>
   119d8:	mov	r3, r0
   119dc:	strh	r3, [fp, #-6]
   119e0:	ldrh	r3, [fp, #-6]
   119e4:	cmp	r3, #0
   119e8:	beq	11a18 <_start@@Base+0x119c>
   119ec:	ldrh	r3, [fp, #-6]
   119f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   119f4:	add	r3, r2, r3
   119f8:	str	r3, [fp, #-16]
   119fc:	ldr	r0, [fp, #-16]
   11a00:	bl	10c38 <_start@@Base+0x3bc>
   11a04:	mov	r3, r0
   11a08:	add	r3, r3, #4
   11a0c:	ldr	r2, [fp, #-16]
   11a10:	add	r3, r2, r3
   11a14:	b	11a38 <_start@@Base+0x11bc>
   11a18:	ldr	r3, [pc, #56]	; 11a58 <_start@@Base+0x11dc>
   11a1c:	add	r3, pc, r3
   11a20:	mov	r2, #218	; 0xda
   11a24:	ldr	r1, [pc, #48]	; 11a5c <_start@@Base+0x11e0>
   11a28:	add	r1, pc, r1
   11a2c:	ldr	r0, [pc, #44]	; 11a60 <_start@@Base+0x11e4>
   11a30:	add	r0, pc, r0
   11a34:	bl	10870 <__assert_fail@plt>
   11a38:	mov	r0, r3
   11a3c:	sub	sp, fp, #4
   11a40:	ldr	fp, [sp]
   11a44:	add	sp, sp, #4
   11a48:	pop	{pc}		; (ldr pc, [sp], #4)
   11a4c:	andeq	r0, r0, r4, lsl #30
   11a50:	andeq	r0, r0, r0, asr #22
   11a54:			; <UNDEFINED> instruction: 0x00000bb0
   11a58:	andeq	r0, r0, r0, asr #28
   11a5c:	andeq	r0, r0, ip, ror sl
   11a60:	andeq	r0, r0, ip, asr #22
   11a64:	str	fp, [sp, #-8]!
   11a68:	str	lr, [sp, #4]
   11a6c:	add	fp, sp, #4
   11a70:	sub	sp, sp, #24
   11a74:	str	r0, [fp, #-24]	; 0xffffffe8
   11a78:	str	r1, [fp, #-28]	; 0xffffffe4
   11a7c:	mov	r3, #0
   11a80:	str	r3, [fp, #-8]
   11a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a88:	bl	11844 <_start@@Base+0xfc8>
   11a8c:	str	r0, [fp, #-12]
   11a90:	ldr	r3, [fp, #-12]
   11a94:	cmp	r3, #0
   11a98:	bne	11aac <_start@@Base+0x1230>
   11a9c:	ldr	r3, [pc, #260]	; 11ba8 <_start@@Base+0x132c>
   11aa0:	add	r3, pc, r3
   11aa4:	ldr	r3, [r3]
   11aa8:	b	11b94 <_start@@Base+0x1318>
   11aac:	ldr	r3, [fp, #-12]
   11ab0:	sub	r3, r3, #1
   11ab4:	str	r3, [fp, #-12]
   11ab8:	b	11b28 <_start@@Base+0x12ac>
   11abc:	ldr	r2, [fp, #-12]
   11ac0:	ldr	r3, [fp, #-8]
   11ac4:	sub	r3, r2, r3
   11ac8:	lsr	r3, r3, #1
   11acc:	ldr	r2, [fp, #-8]
   11ad0:	add	r3, r2, r3
   11ad4:	str	r3, [fp, #-16]
   11ad8:	ldr	r1, [fp, #-16]
   11adc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ae0:	bl	11894 <_start@@Base+0x1018>
   11ae4:	mov	r3, r0
   11ae8:	mov	r0, r3
   11aec:	bl	1192c <_start@@Base+0x10b0>
   11af0:	str	r0, [fp, #-20]	; 0xffffffec
   11af4:	mov	r2, #0
   11af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11afc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b00:	bl	10e0c <_start@@Base+0x590>
   11b04:	mov	r3, r0
   11b08:	cmp	r3, #0
   11b0c:	bge	11b20 <_start@@Base+0x12a4>
   11b10:	ldr	r3, [fp, #-16]
   11b14:	add	r3, r3, #1
   11b18:	str	r3, [fp, #-8]
   11b1c:	b	11b28 <_start@@Base+0x12ac>
   11b20:	ldr	r3, [fp, #-16]
   11b24:	str	r3, [fp, #-12]
   11b28:	ldr	r2, [fp, #-8]
   11b2c:	ldr	r3, [fp, #-12]
   11b30:	cmp	r2, r3
   11b34:	bcc	11abc <_start@@Base+0x1240>
   11b38:	ldr	r2, [fp, #-8]
   11b3c:	ldr	r3, [fp, #-12]
   11b40:	cmp	r2, r3
   11b44:	bne	11b88 <_start@@Base+0x130c>
   11b48:	ldr	r1, [fp, #-8]
   11b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b50:	bl	11894 <_start@@Base+0x1018>
   11b54:	mov	r3, r0
   11b58:	mov	r0, r3
   11b5c:	bl	1192c <_start@@Base+0x10b0>
   11b60:	str	r0, [fp, #-20]	; 0xffffffec
   11b64:	mov	r2, #0
   11b68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11b6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11b70:	bl	10e0c <_start@@Base+0x590>
   11b74:	mov	r3, r0
   11b78:	cmp	r3, #0
   11b7c:	bne	11b88 <_start@@Base+0x130c>
   11b80:	ldr	r3, [fp, #-8]
   11b84:	b	11b94 <_start@@Base+0x1318>
   11b88:	ldr	r3, [pc, #28]	; 11bac <_start@@Base+0x1330>
   11b8c:	add	r3, pc, r3
   11b90:	ldr	r3, [r3]
   11b94:	mov	r0, r3
   11b98:	sub	sp, fp, #4
   11b9c:	ldr	fp, [sp]
   11ba0:	add	sp, sp, #4
   11ba4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ba8:	andeq	r1, r1, r0, asr #11
   11bac:	ldrdeq	r1, [r1], -r4
   11bb0:	str	fp, [sp, #-8]!
   11bb4:	str	lr, [sp, #4]
   11bb8:	add	fp, sp, #4
   11bbc:	sub	sp, sp, #8
   11bc0:	str	r0, [fp, #-8]
   11bc4:	str	r1, [fp, #-12]
   11bc8:	ldr	r1, [fp, #-12]
   11bcc:	ldr	r0, [fp, #-8]
   11bd0:	bl	11a64 <_start@@Base+0x11e8>
   11bd4:	mov	r3, r0
   11bd8:	mov	r0, r3
   11bdc:	sub	sp, fp, #4
   11be0:	ldr	fp, [sp]
   11be4:	add	sp, sp, #4
   11be8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bec:	str	fp, [sp, #-8]!
   11bf0:	str	lr, [sp, #4]
   11bf4:	add	fp, sp, #4
   11bf8:	sub	sp, sp, #24
   11bfc:	str	r0, [fp, #-24]	; 0xffffffe8
   11c00:	mov	r3, #0
   11c04:	strh	r3, [fp, #-6]
   11c08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11c0c:	cmp	r3, #0
   11c10:	bne	11c34 <_start@@Base+0x13b8>
   11c14:	ldr	r3, [pc, #240]	; 11d0c <_start@@Base+0x1490>
   11c18:	add	r3, pc, r3
   11c1c:	mov	r2, #224	; 0xe0
   11c20:	ldr	r1, [pc, #232]	; 11d10 <_start@@Base+0x1494>
   11c24:	add	r1, pc, r1
   11c28:	ldr	r0, [pc, #228]	; 11d14 <_start@@Base+0x1498>
   11c2c:	add	r0, pc, r0
   11c30:	bl	10870 <__assert_fail@plt>
   11c34:	mov	r3, #1
   11c38:	strh	r3, [fp, #-8]
   11c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c40:	bl	10c98 <_start@@Base+0x41c>
   11c44:	mov	r3, r0
   11c48:	rsb	r3, r3, #0
   11c4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11c50:	add	r3, r2, r3
   11c54:	str	r3, [fp, #-12]
   11c58:	ldr	r0, [fp, #-12]
   11c5c:	bl	10cfc <_start@@Base+0x480>
   11c60:	mov	r3, r0
   11c64:	mov	r2, r3
   11c68:	ldrh	r3, [fp, #-8]
   11c6c:	add	r3, r3, #3
   11c70:	lsl	r3, r3, #1
   11c74:	cmp	r2, r3
   11c78:	bcc	11ca0 <_start@@Base+0x1424>
   11c7c:	ldrh	r3, [fp, #-8]
   11c80:	add	r3, r3, #2
   11c84:	lsl	r3, r3, #1
   11c88:	ldr	r2, [fp, #-12]
   11c8c:	add	r3, r2, r3
   11c90:	mov	r0, r3
   11c94:	bl	10cfc <_start@@Base+0x480>
   11c98:	mov	r3, r0
   11c9c:	strh	r3, [fp, #-6]
   11ca0:	ldrh	r3, [fp, #-6]
   11ca4:	cmp	r3, #0
   11ca8:	beq	11cd8 <_start@@Base+0x145c>
   11cac:	ldrh	r3, [fp, #-6]
   11cb0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11cb4:	add	r3, r2, r3
   11cb8:	str	r3, [fp, #-16]
   11cbc:	ldr	r0, [fp, #-16]
   11cc0:	bl	10c38 <_start@@Base+0x3bc>
   11cc4:	mov	r3, r0
   11cc8:	add	r3, r3, #4
   11ccc:	ldr	r2, [fp, #-16]
   11cd0:	add	r3, r2, r3
   11cd4:	b	11cf8 <_start@@Base+0x147c>
   11cd8:	ldr	r3, [pc, #56]	; 11d18 <_start@@Base+0x149c>
   11cdc:	add	r3, pc, r3
   11ce0:	mov	r2, #224	; 0xe0
   11ce4:	ldr	r1, [pc, #48]	; 11d1c <_start@@Base+0x14a0>
   11ce8:	add	r1, pc, r1
   11cec:	ldr	r0, [pc, #44]	; 11d20 <_start@@Base+0x14a4>
   11cf0:	add	r0, pc, r0
   11cf4:	bl	10870 <__assert_fail@plt>
   11cf8:	mov	r0, r3
   11cfc:	sub	sp, fp, #4
   11d00:	ldr	fp, [sp]
   11d04:	add	sp, sp, #4
   11d08:	pop	{pc}		; (ldr pc, [sp], #4)
   11d0c:	andeq	r0, r0, ip, asr ip
   11d10:	andeq	r0, r0, r0, lsl #17
   11d14:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11d18:	muleq	r0, r8, fp
   11d1c:			; <UNDEFINED> instruction: 0x000007bc
   11d20:	andeq	r0, r0, ip, lsl #17
   11d24:	str	fp, [sp, #-8]!
   11d28:	str	lr, [sp, #4]
   11d2c:	add	fp, sp, #4
   11d30:	sub	sp, sp, #16
   11d34:	str	r0, [fp, #-16]
   11d38:	ldr	r3, [pc, #88]	; 11d98 <_start@@Base+0x151c>
   11d3c:	add	r3, pc, r3
   11d40:	str	r3, [fp, #-8]
   11d44:	ldr	r3, [fp, #-16]
   11d48:	cmp	r3, #0
   11d4c:	beq	11d80 <_start@@Base+0x1504>
   11d50:	ldr	r1, [fp, #-8]
   11d54:	ldr	r0, [fp, #-16]
   11d58:	bl	10e4c <_start@@Base+0x5d0>
   11d5c:	mov	r3, r0
   11d60:	cmp	r3, #0
   11d64:	beq	11d80 <_start@@Base+0x1504>
   11d68:	ldr	r0, [fp, #-16]
   11d6c:	bl	10c38 <_start@@Base+0x3bc>
   11d70:	mov	r2, r0
   11d74:	ldr	r3, [fp, #-16]
   11d78:	add	r3, r3, r2
   11d7c:	b	11d84 <_start@@Base+0x1508>
   11d80:	mov	r3, #0
   11d84:	mov	r0, r3
   11d88:	sub	sp, fp, #4
   11d8c:	ldr	fp, [sp]
   11d90:	add	sp, sp, #4
   11d94:	pop	{pc}		; (ldr pc, [sp], #4)
   11d98:	andeq	r0, r0, r4, ror #16
   11d9c:	str	fp, [sp, #-8]!
   11da0:	str	lr, [sp, #4]
   11da4:	add	fp, sp, #4
   11da8:	sub	sp, sp, #24
   11dac:	str	r0, [fp, #-24]	; 0xffffffe8
   11db0:	mov	r3, #0
   11db4:	strh	r3, [fp, #-6]
   11db8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11dbc:	cmp	r3, #0
   11dc0:	bne	11de4 <_start@@Base+0x1568>
   11dc4:	ldr	r3, [pc, #240]	; 11ebc <_start@@Base+0x1640>
   11dc8:	add	r3, pc, r3
   11dcc:	mov	r2, #237	; 0xed
   11dd0:	ldr	r1, [pc, #232]	; 11ec0 <_start@@Base+0x1644>
   11dd4:	add	r1, pc, r1
   11dd8:	ldr	r0, [pc, #228]	; 11ec4 <_start@@Base+0x1648>
   11ddc:	add	r0, pc, r0
   11de0:	bl	10870 <__assert_fail@plt>
   11de4:	mov	r3, #0
   11de8:	strh	r3, [fp, #-8]
   11dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11df0:	bl	10c98 <_start@@Base+0x41c>
   11df4:	mov	r3, r0
   11df8:	rsb	r3, r3, #0
   11dfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e00:	add	r3, r2, r3
   11e04:	str	r3, [fp, #-12]
   11e08:	ldr	r0, [fp, #-12]
   11e0c:	bl	10cfc <_start@@Base+0x480>
   11e10:	mov	r3, r0
   11e14:	mov	r2, r3
   11e18:	ldrh	r3, [fp, #-8]
   11e1c:	add	r3, r3, #3
   11e20:	lsl	r3, r3, #1
   11e24:	cmp	r2, r3
   11e28:	bcc	11e50 <_start@@Base+0x15d4>
   11e2c:	ldrh	r3, [fp, #-8]
   11e30:	add	r3, r3, #2
   11e34:	lsl	r3, r3, #1
   11e38:	ldr	r2, [fp, #-12]
   11e3c:	add	r3, r2, r3
   11e40:	mov	r0, r3
   11e44:	bl	10cfc <_start@@Base+0x480>
   11e48:	mov	r3, r0
   11e4c:	strh	r3, [fp, #-6]
   11e50:	ldrh	r3, [fp, #-6]
   11e54:	cmp	r3, #0
   11e58:	beq	11e88 <_start@@Base+0x160c>
   11e5c:	ldrh	r3, [fp, #-6]
   11e60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e64:	add	r3, r2, r3
   11e68:	str	r3, [fp, #-16]
   11e6c:	ldr	r0, [fp, #-16]
   11e70:	bl	10c38 <_start@@Base+0x3bc>
   11e74:	mov	r3, r0
   11e78:	add	r3, r3, #4
   11e7c:	ldr	r2, [fp, #-16]
   11e80:	add	r3, r2, r3
   11e84:	b	11ea8 <_start@@Base+0x162c>
   11e88:	ldr	r3, [pc, #56]	; 11ec8 <_start@@Base+0x164c>
   11e8c:	add	r3, pc, r3
   11e90:	mov	r2, #237	; 0xed
   11e94:	ldr	r1, [pc, #48]	; 11ecc <_start@@Base+0x1650>
   11e98:	add	r1, pc, r1
   11e9c:	ldr	r0, [pc, #44]	; 11ed0 <_start@@Base+0x1654>
   11ea0:	add	r0, pc, r0
   11ea4:	bl	10870 <__assert_fail@plt>
   11ea8:	mov	r0, r3
   11eac:	sub	sp, fp, #4
   11eb0:	ldr	fp, [sp]
   11eb4:	add	sp, sp, #4
   11eb8:	pop	{pc}		; (ldr pc, [sp], #4)
   11ebc:	andeq	r0, r0, ip, asr sl
   11ec0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11ec4:	andeq	r0, r0, r0, asr #14
   11ec8:	muleq	r0, r8, r9
   11ecc:	andeq	r0, r0, ip, lsl #12
   11ed0:	ldrdeq	r0, [r0], -ip

00011ed4 <test_schema@@Base>:
   11ed4:	str	r4, [sp, #-12]!
   11ed8:	str	fp, [sp, #4]
   11edc:	str	lr, [sp, #8]
   11ee0:	add	fp, sp, #8
   11ee4:	sub	sp, sp, #60	; 0x3c
   11ee8:	str	r0, [fp, #-64]	; 0xffffffc0
   11eec:	mvn	r3, #0
   11ef0:	str	r3, [fp, #-16]
   11ef4:	sub	r3, fp, #56	; 0x38
   11ef8:	mov	r2, r3
   11efc:	movw	r1, #10000	; 0x2710
   11f00:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11f04:	bl	1096c <_start@@Base+0xf0>
   11f08:	str	r0, [fp, #-24]	; 0xffffffe8
   11f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11f10:	cmp	r3, #0
   11f14:	bne	11f2c <test_schema@@Base+0x58>
   11f18:	ldr	r3, [pc, #1012]	; 12314 <test_schema@@Base+0x440>
   11f1c:	add	r3, pc, r3
   11f20:	mov	r0, r3
   11f24:	bl	10804 <puts@plt>
   11f28:	b	122e4 <test_schema@@Base+0x410>
   11f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f30:	bl	11d24 <_start@@Base+0x14a8>
   11f34:	str	r0, [fp, #-28]	; 0xffffffe4
   11f38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11f3c:	bl	11d9c <_start@@Base+0x1520>
   11f40:	str	r0, [fp, #-32]	; 0xffffffe0
   11f44:	mov	r3, #0
   11f48:	str	r3, [fp, #-20]	; 0xffffffec
   11f4c:	b	11f94 <test_schema@@Base+0xc0>
   11f50:	ldr	r4, [fp, #-20]	; 0xffffffec
   11f54:	ldr	r1, [fp, #-20]	; 0xffffffec
   11f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f5c:	bl	11894 <_start@@Base+0x1018>
   11f60:	mov	r3, r0
   11f64:	mov	r0, r3
   11f68:	bl	1192c <_start@@Base+0x10b0>
   11f6c:	mov	r3, r0
   11f70:	mov	r2, r3
   11f74:	mov	r1, r4
   11f78:	ldr	r3, [pc, #920]	; 12318 <test_schema@@Base+0x444>
   11f7c:	add	r3, pc, r3
   11f80:	mov	r0, r3
   11f84:	bl	107b0 <printf@plt>
   11f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f8c:	add	r3, r3, #1
   11f90:	str	r3, [fp, #-20]	; 0xffffffec
   11f94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f98:	bl	11844 <_start@@Base+0xfc8>
   11f9c:	mov	r2, r0
   11fa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11fa4:	cmp	r3, r2
   11fa8:	bcc	11f50 <test_schema@@Base+0x7c>
   11fac:	ldr	r3, [pc, #872]	; 1231c <test_schema@@Base+0x448>
   11fb0:	add	r3, pc, r3
   11fb4:	mov	r1, r3
   11fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11fbc:	bl	11bb0 <_start@@Base+0x1334>
   11fc0:	str	r0, [fp, #-20]	; 0xffffffec
   11fc4:	ldr	r3, [pc, #852]	; 12320 <test_schema@@Base+0x44c>
   11fc8:	add	r3, pc, r3
   11fcc:	ldr	r3, [r3]
   11fd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   11fd4:	cmp	r2, r3
   11fd8:	bne	11ff0 <test_schema@@Base+0x11c>
   11fdc:	ldr	r3, [pc, #832]	; 12324 <test_schema@@Base+0x450>
   11fe0:	add	r3, pc, r3
   11fe4:	mov	r0, r3
   11fe8:	bl	10804 <puts@plt>
   11fec:	b	122e4 <test_schema@@Base+0x410>
   11ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ff4:	str	r3, [fp, #-36]	; 0xffffffdc
   11ff8:	ldr	r1, [fp, #-20]	; 0xffffffec
   11ffc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12000:	bl	11894 <_start@@Base+0x1018>
   12004:	str	r0, [fp, #-40]	; 0xffffffd8
   12008:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1200c:	bl	1192c <_start@@Base+0x10b0>
   12010:	mov	r2, r0
   12014:	ldr	r3, [pc, #780]	; 12328 <test_schema@@Base+0x454>
   12018:	add	r3, pc, r3
   1201c:	mov	r1, r3
   12020:	mov	r0, r2
   12024:	bl	107a4 <strcmp@plt>
   12028:	mov	r3, r0
   1202c:	cmp	r3, #0
   12030:	beq	12048 <test_schema@@Base+0x174>
   12034:	ldr	r3, [pc, #752]	; 1232c <test_schema@@Base+0x458>
   12038:	add	r3, pc, r3
   1203c:	mov	r0, r3
   12040:	bl	10804 <puts@plt>
   12044:	b	122e4 <test_schema@@Base+0x410>
   12048:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1204c:	bl	11bec <_start@@Base+0x1370>
   12050:	str	r0, [fp, #-44]	; 0xffffffd4
   12054:	ldr	r3, [pc, #724]	; 12330 <test_schema@@Base+0x45c>
   12058:	add	r3, pc, r3
   1205c:	mov	r1, r3
   12060:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12064:	bl	115c8 <_start@@Base+0xd4c>
   12068:	str	r0, [fp, #-20]	; 0xffffffec
   1206c:	ldr	r3, [pc, #704]	; 12334 <test_schema@@Base+0x460>
   12070:	add	r3, pc, r3
   12074:	ldr	r3, [r3]
   12078:	ldr	r2, [fp, #-20]	; 0xffffffec
   1207c:	cmp	r2, r3
   12080:	bne	12098 <test_schema@@Base+0x1c4>
   12084:	ldr	r3, [pc, #684]	; 12338 <test_schema@@Base+0x464>
   12088:	add	r3, pc, r3
   1208c:	mov	r0, r3
   12090:	bl	10804 <puts@plt>
   12094:	b	122e4 <test_schema@@Base+0x410>
   12098:	ldr	r1, [fp, #-20]	; 0xffffffec
   1209c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   120a0:	bl	112ac <_start@@Base+0xa30>
   120a4:	str	r0, [fp, #-48]	; 0xffffffd0
   120a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   120ac:	bl	11738 <_start@@Base+0xebc>
   120b0:	mov	r2, r0
   120b4:	mov	r3, r1
   120b8:	cmp	r3, #0
   120bc:	cmpeq	r2, #150	; 0x96
   120c0:	beq	12118 <test_schema@@Base+0x244>
   120c4:	ldr	r3, [pc, #624]	; 1233c <test_schema@@Base+0x468>
   120c8:	add	r3, pc, r3
   120cc:	mov	r0, r3
   120d0:	bl	10804 <puts@plt>
   120d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   120d8:	bl	11344 <_start@@Base+0xac8>
   120dc:	mov	r3, r0
   120e0:	mov	r1, r3
   120e4:	ldr	r3, [pc, #596]	; 12340 <test_schema@@Base+0x46c>
   120e8:	add	r3, pc, r3
   120ec:	mov	r0, r3
   120f0:	bl	107b0 <printf@plt>
   120f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   120f8:	bl	11738 <_start@@Base+0xebc>
   120fc:	mov	r2, r0
   12100:	mov	r3, r1
   12104:	ldr	r1, [pc, #568]	; 12344 <test_schema@@Base+0x470>
   12108:	add	r1, pc, r1
   1210c:	mov	r0, r1
   12110:	bl	107b0 <printf@plt>
   12114:	b	122e4 <test_schema@@Base+0x410>
   12118:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1211c:	bl	11604 <_start@@Base+0xd88>
   12120:	str	r0, [fp, #-52]	; 0xffffffcc
   12124:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12128:	bl	10f5c <_start@@Base+0x6e0>
   1212c:	mov	r3, r0
   12130:	cmp	r3, #5
   12134:	beq	1214c <test_schema@@Base+0x278>
   12138:	ldr	r3, [pc, #520]	; 12348 <test_schema@@Base+0x474>
   1213c:	add	r3, pc, r3
   12140:	mov	r0, r3
   12144:	bl	10804 <puts@plt>
   12148:	b	122e4 <test_schema@@Base+0x410>
   1214c:	ldr	r3, [pc, #504]	; 1234c <test_schema@@Base+0x478>
   12150:	add	r3, pc, r3
   12154:	mov	r1, r3
   12158:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1215c:	bl	115c8 <_start@@Base+0xd4c>
   12160:	str	r0, [fp, #-20]	; 0xffffffec
   12164:	ldr	r3, [pc, #484]	; 12350 <test_schema@@Base+0x47c>
   12168:	add	r3, pc, r3
   1216c:	ldr	r3, [r3]
   12170:	ldr	r2, [fp, #-20]	; 0xffffffec
   12174:	cmp	r2, r3
   12178:	bne	12190 <test_schema@@Base+0x2bc>
   1217c:	ldr	r3, [pc, #464]	; 12354 <test_schema@@Base+0x480>
   12180:	add	r3, pc, r3
   12184:	mov	r0, r3
   12188:	bl	10804 <puts@plt>
   1218c:	b	122e4 <test_schema@@Base+0x410>
   12190:	ldr	r1, [fp, #-20]	; 0xffffffec
   12194:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12198:	bl	112ac <_start@@Base+0xa30>
   1219c:	mov	r3, r0
   121a0:	mov	r0, r3
   121a4:	bl	11604 <_start@@Base+0xd88>
   121a8:	str	r0, [fp, #-52]	; 0xffffffcc
   121ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121b0:	bl	10f5c <_start@@Base+0x6e0>
   121b4:	mov	r3, r0
   121b8:	cmp	r3, #15
   121bc:	beq	121d4 <test_schema@@Base+0x300>
   121c0:	ldr	r3, [pc, #400]	; 12358 <test_schema@@Base+0x484>
   121c4:	add	r3, pc, r3
   121c8:	mov	r0, r3
   121cc:	bl	10804 <puts@plt>
   121d0:	b	122e4 <test_schema@@Base+0x410>
   121d4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   121d8:	bl	1115c <_start@@Base+0x8e0>
   121dc:	mov	r2, r0
   121e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   121e4:	cmp	r2, r3
   121e8:	beq	12200 <test_schema@@Base+0x32c>
   121ec:	ldr	r3, [pc, #360]	; 1235c <test_schema@@Base+0x488>
   121f0:	add	r3, pc, r3
   121f4:	mov	r0, r3
   121f8:	bl	10804 <puts@plt>
   121fc:	b	122e4 <test_schema@@Base+0x410>
   12200:	ldr	r3, [pc, #344]	; 12360 <test_schema@@Base+0x48c>
   12204:	add	r3, pc, r3
   12208:	mov	r1, r3
   1220c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12210:	bl	115c8 <_start@@Base+0xd4c>
   12214:	str	r0, [fp, #-20]	; 0xffffffec
   12218:	ldr	r3, [pc, #324]	; 12364 <test_schema@@Base+0x490>
   1221c:	add	r3, pc, r3
   12220:	ldr	r3, [r3]
   12224:	ldr	r2, [fp, #-20]	; 0xffffffec
   12228:	cmp	r2, r3
   1222c:	bne	12244 <test_schema@@Base+0x370>
   12230:	ldr	r3, [pc, #304]	; 12368 <test_schema@@Base+0x494>
   12234:	add	r3, pc, r3
   12238:	mov	r0, r3
   1223c:	bl	10804 <puts@plt>
   12240:	b	122e4 <test_schema@@Base+0x410>
   12244:	ldr	r1, [fp, #-20]	; 0xffffffec
   12248:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1224c:	bl	112ac <_start@@Base+0xa30>
   12250:	mov	r3, r0
   12254:	mov	r0, r3
   12258:	bl	11604 <_start@@Base+0xd88>
   1225c:	str	r0, [fp, #-52]	; 0xffffffcc
   12260:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12264:	bl	10f5c <_start@@Base+0x6e0>
   12268:	mov	r3, r0
   1226c:	cmp	r3, #14
   12270:	beq	12288 <test_schema@@Base+0x3b4>
   12274:	ldr	r3, [pc, #240]	; 1236c <test_schema@@Base+0x498>
   12278:	add	r3, pc, r3
   1227c:	mov	r0, r3
   12280:	bl	10804 <puts@plt>
   12284:	b	122e4 <test_schema@@Base+0x410>
   12288:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1228c:	bl	1105c <_start@@Base+0x7e0>
   12290:	mov	r3, r0
   12294:	cmp	r3, #15
   12298:	beq	122b0 <test_schema@@Base+0x3dc>
   1229c:	ldr	r3, [pc, #204]	; 12370 <test_schema@@Base+0x49c>
   122a0:	add	r3, pc, r3
   122a4:	mov	r0, r3
   122a8:	bl	10804 <puts@plt>
   122ac:	b	122e4 <test_schema@@Base+0x410>
   122b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   122b4:	bl	1115c <_start@@Base+0x8e0>
   122b8:	mov	r2, r0
   122bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   122c0:	cmp	r2, r3
   122c4:	beq	122dc <test_schema@@Base+0x408>
   122c8:	ldr	r3, [pc, #164]	; 12374 <test_schema@@Base+0x4a0>
   122cc:	add	r3, pc, r3
   122d0:	mov	r0, r3
   122d4:	bl	10804 <puts@plt>
   122d8:	b	122e4 <test_schema@@Base+0x410>
   122dc:	mov	r3, #0
   122e0:	str	r3, [fp, #-16]
   122e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   122e8:	cmp	r3, #0
   122ec:	beq	122f8 <test_schema@@Base+0x424>
   122f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   122f4:	bl	107c8 <free@plt>
   122f8:	ldr	r3, [fp, #-16]
   122fc:	mov	r0, r3
   12300:	sub	sp, fp, #8
   12304:	ldr	r4, [sp]
   12308:	ldr	fp, [sp, #4]
   1230c:	add	sp, sp, #8
   12310:	pop	{pc}		; (ldr pc, [sp], #4)
   12314:	andeq	r0, r0, ip, lsl #13
   12318:	andeq	r0, r0, ip, asr #12
   1231c:	andeq	r0, r0, ip, lsr #12
   12320:	muleq	r1, r8, r0
   12324:	andeq	r0, r0, r4, lsl r6
   12328:	andeq	r0, r0, r4, asr #11
   1232c:	andeq	r0, r0, r0, ror #11
   12330:	andeq	r0, r0, r0, ror #11
   12334:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   12338:			; <UNDEFINED> instruction: 0x000005b8
   1233c:	andeq	r0, r0, r4, lsr #11
   12340:	andeq	r0, r0, r8, lsr #11
   12344:	muleq	r0, r8, r5
   12348:	andeq	r0, r0, ip, ror #10
   1234c:	andeq	r0, r0, r4, ror r5
   12350:	strdeq	r0, [r1], -r8
   12354:	andeq	r0, r0, ip, asr #10
   12358:	andeq	r0, r0, r0, lsr #10
   1235c:	andeq	r0, r0, ip, lsl #10
   12360:	andeq	r0, r0, r0, lsl r5
   12364:	andeq	r0, r1, r4, asr #28
   12368:	strdeq	r0, [r0], -r4
   1236c:	andeq	r0, r0, ip, asr #9
   12370:	andeq	r0, r0, ip, asr #9
   12374:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00012378 <main@@Base>:
   12378:	str	fp, [sp, #-8]!
   1237c:	str	lr, [sp, #4]
   12380:	add	fp, sp, #4
   12384:	sub	sp, sp, #8
   12388:	str	r0, [fp, #-8]
   1238c:	str	r1, [fp, #-12]
   12390:	ldr	r3, [pc, #140]	; 12424 <main@@Base+0xac>
   12394:	add	r3, pc, r3
   12398:	ldr	r2, [fp, #-8]
   1239c:	cmp	r2, #1
   123a0:	beq	123d8 <main@@Base+0x60>
   123a4:	ldr	r2, [fp, #-8]
   123a8:	cmp	r2, #2
   123ac:	beq	123d8 <main@@Base+0x60>
   123b0:	ldr	r2, [pc, #112]	; 12428 <main@@Base+0xb0>
   123b4:	ldr	r3, [r3, r2]
   123b8:	ldr	r3, [r3]
   123bc:	mov	r2, #64	; 0x40
   123c0:	mov	r1, #1
   123c4:	ldr	r0, [pc, #96]	; 1242c <main@@Base+0xb4>
   123c8:	add	r0, pc, r0
   123cc:	bl	107ec <fwrite@plt>
   123d0:	mov	r0, #1
   123d4:	bl	10834 <exit@plt>
   123d8:	ldr	r2, [fp, #-8]
   123dc:	cmp	r2, #2
   123e0:	bne	123f8 <main@@Base+0x80>
   123e4:	ldr	r2, [fp, #-12]
   123e8:	ldr	r1, [r2, #4]
   123ec:	ldr	r2, [pc, #60]	; 12430 <main@@Base+0xb8>
   123f0:	ldr	r2, [r3, r2]
   123f4:	str	r1, [r2]
   123f8:	ldr	r2, [pc, #48]	; 12430 <main@@Base+0xb8>
   123fc:	ldr	r3, [r3, r2]
   12400:	ldr	r3, [r3]
   12404:	mov	r0, r3
   12408:	bl	11ed4 <test_schema@@Base>
   1240c:	mov	r3, r0
   12410:	mov	r0, r3
   12414:	sub	sp, fp, #4
   12418:	ldr	fp, [sp]
   1241c:	add	sp, sp, #4
   12420:	pop	{pc}		; (ldr pc, [sp], #4)
   12424:	andeq	r0, r1, r4, ror #24
   12428:	andeq	r0, r0, r4, asr r0
   1242c:	andeq	r0, r0, r8, lsl r4
   12430:	andeq	r0, r0, ip, asr r0

00012434 <__libc_csu_init@@Base>:
   12434:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12438:	mov	r7, r0
   1243c:	ldr	r6, [pc, #72]	; 1248c <__libc_csu_init@@Base+0x58>
   12440:	ldr	r5, [pc, #72]	; 12490 <__libc_csu_init@@Base+0x5c>
   12444:	add	r6, pc, r6
   12448:	add	r5, pc, r5
   1244c:	sub	r6, r6, r5
   12450:	mov	r8, r1
   12454:	mov	r9, r2
   12458:	bl	10784 <strcmp@plt-0x20>
   1245c:	asrs	r6, r6, #2
   12460:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12464:	mov	r4, #0
   12468:	add	r4, r4, #1
   1246c:	ldr	r3, [r5], #4
   12470:	mov	r2, r9
   12474:	mov	r1, r8
   12478:	mov	r0, r7
   1247c:	blx	r3
   12480:	cmp	r6, r4
   12484:	bne	12468 <__libc_csu_init@@Base+0x34>
   12488:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1248c:	andeq	r0, r1, r8, asr #21
   12490:	andeq	r0, r1, r0, asr #21

00012494 <__libc_csu_fini@@Base>:
   12494:	bx	lr

Disassembly of section .fini:

00012498 <.fini>:
   12498:	push	{r3, lr}
   1249c:	pop	{r3, pc}
