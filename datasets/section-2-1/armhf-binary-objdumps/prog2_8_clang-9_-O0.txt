
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010bb0 <.init>:
   10bb0:	push	{r3, lr}
   10bb4:	bl	10c78 <_start@@Base+0x3c>
   10bb8:	pop	{r3, pc}

Disassembly of section .plt:

00010bbc <calloc@plt-0x14>:
   10bbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10bc0:	ldr	lr, [pc, #4]	; 10bcc <calloc@plt-0x4>
   10bc4:	add	lr, pc, lr
   10bc8:	ldr	pc, [lr, #8]!
   10bcc:	andeq	r3, r1, r4, lsr r4

00010bd0 <calloc@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #77824	; 0x13000
   10bd8:	ldr	pc, [ip, #1076]!	; 0x434

00010bdc <printf@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #77824	; 0x13000
   10be4:	ldr	pc, [ip, #1068]!	; 0x42c

00010be8 <free@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #77824	; 0x13000
   10bf0:	ldr	pc, [ip, #1060]!	; 0x424

00010bf4 <realloc@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #77824	; 0x13000
   10bfc:	ldr	pc, [ip, #1052]!	; 0x41c

00010c00 <malloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #77824	; 0x13000
   10c08:	ldr	pc, [ip, #1044]!	; 0x414

00010c0c <__libc_start_main@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #77824	; 0x13000
   10c14:	ldr	pc, [ip, #1036]!	; 0x40c

00010c18 <__gmon_start__@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #77824	; 0x13000
   10c20:	ldr	pc, [ip, #1028]!	; 0x404

00010c24 <setvbuf@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #77824	; 0x13000
   10c2c:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c30 <abort@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #77824	; 0x13000
   10c38:	ldr	pc, [ip, #1012]!	; 0x3f4

Disassembly of section .text:

00010c3c <_start@@Base>:
   10c3c:	mov	fp, #0
   10c40:	mov	lr, #0
   10c44:	pop	{r1}		; (ldr r1, [sp], #4)
   10c48:	mov	r2, sp
   10c4c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c50:	push	{r0}		; (str r0, [sp, #-4]!)
   10c54:	ldr	ip, [pc, #16]	; 10c6c <_start@@Base+0x30>
   10c58:	push	{ip}		; (str ip, [sp, #-4]!)
   10c5c:	ldr	r0, [pc, #12]	; 10c70 <_start@@Base+0x34>
   10c60:	ldr	r3, [pc, #12]	; 10c74 <_start@@Base+0x38>
   10c64:	bl	10c0c <__libc_start_main@plt>
   10c68:	bl	10c30 <abort@plt>
   10c6c:	andeq	r3, r1, ip, lsl #1
   10c70:	andeq	r2, r1, r4, asr r0
   10c74:	andeq	r3, r1, ip, lsr #32
   10c78:	ldr	r3, [pc, #20]	; 10c94 <_start@@Base+0x58>
   10c7c:	ldr	r2, [pc, #20]	; 10c98 <_start@@Base+0x5c>
   10c80:	add	r3, pc, r3
   10c84:	ldr	r2, [r3, r2]
   10c88:	cmp	r2, #0
   10c8c:	bxeq	lr
   10c90:	b	10c18 <__gmon_start__@plt>
   10c94:	andeq	r3, r1, r8, ror r3
   10c98:	andeq	r0, r0, r8, lsr r0
   10c9c:	ldr	r0, [pc, #24]	; 10cbc <_start@@Base+0x80>
   10ca0:	ldr	r3, [pc, #24]	; 10cc0 <_start@@Base+0x84>
   10ca4:	cmp	r3, r0
   10ca8:	bxeq	lr
   10cac:	ldr	r3, [pc, #16]	; 10cc4 <_start@@Base+0x88>
   10cb0:	cmp	r3, #0
   10cb4:	bxeq	lr
   10cb8:	bx	r3
   10cbc:	andeq	r4, r2, r8, asr #32
   10cc0:	andeq	r4, r2, r8, asr #32
   10cc4:	andeq	r0, r0, r0
   10cc8:	ldr	r0, [pc, #36]	; 10cf4 <_start@@Base+0xb8>
   10ccc:	ldr	r1, [pc, #36]	; 10cf8 <_start@@Base+0xbc>
   10cd0:	sub	r1, r1, r0
   10cd4:	asr	r1, r1, #2
   10cd8:	add	r1, r1, r1, lsr #31
   10cdc:	asrs	r1, r1, #1
   10ce0:	bxeq	lr
   10ce4:	ldr	r3, [pc, #16]	; 10cfc <_start@@Base+0xc0>
   10ce8:	cmp	r3, #0
   10cec:	bxeq	lr
   10cf0:	bx	r3
   10cf4:	andeq	r4, r2, r8, asr #32
   10cf8:	andeq	r4, r2, r8, asr #32
   10cfc:	andeq	r0, r0, r0
   10d00:	push	{r4, lr}
   10d04:	ldr	r4, [pc, #24]	; 10d24 <_start@@Base+0xe8>
   10d08:	ldrb	r3, [r4]
   10d0c:	cmp	r3, #0
   10d10:	popne	{r4, pc}
   10d14:	bl	10c9c <_start@@Base+0x60>
   10d18:	mov	r3, #1
   10d1c:	strb	r3, [r4]
   10d20:	pop	{r4, pc}
   10d24:	andeq	r4, r2, r8, asr #32
   10d28:	b	10cc8 <_start@@Base+0x8c>

00010d2c <_g@@Base>:
   10d2c:	sub	sp, sp, #8
   10d30:	push	{fp, lr}
   10d34:	mov	fp, sp
   10d38:	sub	sp, sp, #40	; 0x28
   10d3c:	str	r3, [fp, #12]
   10d40:	str	r2, [fp, #8]
   10d44:	str	r0, [fp, #-4]
   10d48:	str	r1, [fp, #-8]
   10d4c:	movw	r0, #8
   10d50:	bl	10c00 <malloc@plt>
   10d54:	str	r0, [fp, #-16]
   10d58:	sub	r0, fp, #12
   10d5c:	add	r1, fp, #8
   10d60:	str	r1, [r0]
   10d64:	ldr	r0, [fp, #-4]
   10d68:	movw	r1, #8
   10d6c:	bl	10bd0 <calloc@plt>
   10d70:	ldr	r1, [fp, #-16]
   10d74:	str	r0, [r1, #4]
   10d78:	movw	r0, #0
   10d7c:	str	r0, [sp, #20]
   10d80:	ldr	r0, [sp, #20]
   10d84:	ldr	r1, [fp, #-8]
   10d88:	cmp	r0, r1
   10d8c:	bge	10e34 <_g@@Base+0x108>
   10d90:	ldr	r0, [fp, #-12]
   10d94:	add	r1, r0, #4
   10d98:	str	r1, [fp, #-12]
   10d9c:	ldr	r0, [r0]
   10da0:	str	r0, [sp, #16]
   10da4:	ldr	r0, [fp, #-12]
   10da8:	add	r1, r0, #4
   10dac:	str	r1, [fp, #-12]
   10db0:	ldr	r0, [r0]
   10db4:	str	r0, [sp, #12]
   10db8:	mov	r0, #1
   10dbc:	mov	r1, #8
   10dc0:	bl	10bd0 <calloc@plt>
   10dc4:	str	r0, [sp, #8]
   10dc8:	ldr	r0, [sp, #12]
   10dcc:	ldr	r1, [sp, #8]
   10dd0:	str	r0, [r1]
   10dd4:	ldr	r0, [fp, #-16]
   10dd8:	ldr	r0, [r0, #4]
   10ddc:	ldr	r1, [sp, #16]
   10de0:	add	r0, r0, r1, lsl #3
   10de4:	ldr	r0, [r0, #4]
   10de8:	ldr	r1, [sp, #8]
   10dec:	str	r0, [r1, #4]
   10df0:	ldr	r0, [sp, #8]
   10df4:	ldr	r1, [fp, #-16]
   10df8:	ldr	r1, [r1, #4]
   10dfc:	ldr	r2, [sp, #16]
   10e00:	add	r1, r1, r2, lsl #3
   10e04:	str	r0, [r1, #4]
   10e08:	ldr	r0, [fp, #-16]
   10e0c:	ldr	r0, [r0, #4]
   10e10:	ldr	r1, [sp, #16]
   10e14:	add	r0, r0, r1, lsl #3
   10e18:	ldr	r1, [r0]
   10e1c:	add	r1, r1, #1
   10e20:	str	r1, [r0]
   10e24:	ldr	r0, [sp, #20]
   10e28:	add	r0, r0, #2
   10e2c:	str	r0, [sp, #20]
   10e30:	b	10d80 <_g@@Base+0x54>
   10e34:	sub	r0, fp, #12
   10e38:	ldr	r1, [fp, #-4]
   10e3c:	ldr	r2, [fp, #-16]
   10e40:	str	r1, [r2]
   10e44:	ldr	r1, [fp, #-16]
   10e48:	str	r0, [sp, #4]
   10e4c:	mov	r0, r1
   10e50:	mov	sp, fp
   10e54:	pop	{fp, lr}
   10e58:	add	sp, sp, #8
   10e5c:	bx	lr

00010e60 <_f@@Base>:
   10e60:	push	{fp, lr}
   10e64:	mov	fp, sp
   10e68:	sub	sp, sp, #16
   10e6c:	str	r0, [sp, #8]
   10e70:	str	r1, [sp, #4]
   10e74:	ldr	r0, [sp, #8]
   10e78:	movw	r1, #0
   10e7c:	cmp	r0, r1
   10e80:	bne	10e90 <_f@@Base+0x30>
   10e84:	movw	r0, #0
   10e88:	str	r0, [fp, #-4]
   10e8c:	b	10eec <_f@@Base+0x8c>
   10e90:	movw	r0, #0
   10e94:	str	r0, [sp]
   10e98:	ldr	r0, [sp]
   10e9c:	ldr	r1, [sp, #8]
   10ea0:	ldr	r1, [r1]
   10ea4:	cmp	r0, r1
   10ea8:	bge	10ee4 <_f@@Base+0x84>
   10eac:	ldr	r0, [sp, #8]
   10eb0:	ldr	r1, [sp]
   10eb4:	bl	12bd4 <vetor_elemento@@Base>
   10eb8:	ldr	r1, [sp, #4]
   10ebc:	cmp	r0, r1
   10ec0:	bne	10ed0 <_f@@Base+0x70>
   10ec4:	movw	r0, #1
   10ec8:	str	r0, [fp, #-4]
   10ecc:	b	10eec <_f@@Base+0x8c>
   10ed0:	b	10ed4 <_f@@Base+0x74>
   10ed4:	ldr	r0, [sp]
   10ed8:	add	r0, r0, #1
   10edc:	str	r0, [sp]
   10ee0:	b	10e98 <_f@@Base+0x38>
   10ee4:	movw	r0, #0
   10ee8:	str	r0, [fp, #-4]
   10eec:	ldr	r0, [fp, #-4]
   10ef0:	mov	sp, fp
   10ef4:	pop	{fp, pc}

00010ef8 <teste_grafo_novo@@Base>:
   10ef8:	push	{fp, lr}
   10efc:	mov	fp, sp
   10f00:	sub	sp, sp, #16
   10f04:	ldr	r0, [pc, #384]	; 1108c <teste_grafo_novo@@Base+0x194>
   10f08:	add	r0, pc, r0
   10f0c:	movw	r1, #0
   10f10:	str	r1, [sp, #8]
   10f14:	bl	10bdc <printf@plt>
   10f18:	movw	r1, #10
   10f1c:	str	r0, [sp]
   10f20:	mov	r0, r1
   10f24:	bl	121e4 <grafo_novo@@Base>
   10f28:	str	r0, [sp, #4]
   10f2c:	ldr	r0, [sp, #4]
   10f30:	movw	r1, #0
   10f34:	cmp	r0, r1
   10f38:	bne	10f88 <teste_grafo_novo@@Base+0x90>
   10f3c:	ldr	r0, [pc, #332]	; 11090 <teste_grafo_novo@@Base+0x198>
   10f40:	add	r0, pc, r0
   10f44:	bl	10bdc <printf@plt>
   10f48:	ldr	r1, [sp, #8]
   10f4c:	add	r1, r1, #1
   10f50:	str	r1, [sp, #8]
   10f54:	ldr	r1, [sp, #8]
   10f58:	cmp	r1, #0
   10f5c:	bne	10f70 <teste_grafo_novo@@Base+0x78>
   10f60:	ldr	r0, [pc, #300]	; 11094 <teste_grafo_novo@@Base+0x19c>
   10f64:	add	r0, pc, r0
   10f68:	bl	10bdc <printf@plt>
   10f6c:	b	10f7c <teste_grafo_novo@@Base+0x84>
   10f70:	ldr	r0, [pc, #288]	; 11098 <teste_grafo_novo@@Base+0x1a0>
   10f74:	add	r0, pc, r0
   10f78:	bl	10bdc <printf@plt>
   10f7c:	ldr	r0, [sp, #8]
   10f80:	str	r0, [fp, #-4]
   10f84:	b	11080 <teste_grafo_novo@@Base+0x188>
   10f88:	ldr	r0, [sp, #4]
   10f8c:	ldr	r0, [r0]
   10f90:	cmp	r0, #10
   10f94:	beq	10fb0 <teste_grafo_novo@@Base+0xb8>
   10f98:	ldr	r0, [pc, #252]	; 1109c <teste_grafo_novo@@Base+0x1a4>
   10f9c:	add	r0, pc, r0
   10fa0:	bl	10bdc <printf@plt>
   10fa4:	ldr	r1, [sp, #8]
   10fa8:	add	r1, r1, #1
   10fac:	str	r1, [sp, #8]
   10fb0:	ldr	r0, [sp, #4]
   10fb4:	bl	122a0 <grafo_apaga@@Base>
   10fb8:	movw	r0, #1
   10fbc:	bl	121e4 <grafo_novo@@Base>
   10fc0:	str	r0, [sp, #4]
   10fc4:	ldr	r0, [sp, #4]
   10fc8:	movw	r1, #0
   10fcc:	cmp	r0, r1
   10fd0:	bne	11020 <teste_grafo_novo@@Base+0x128>
   10fd4:	ldr	r0, [pc, #196]	; 110a0 <teste_grafo_novo@@Base+0x1a8>
   10fd8:	add	r0, pc, r0
   10fdc:	bl	10bdc <printf@plt>
   10fe0:	ldr	r1, [sp, #8]
   10fe4:	add	r1, r1, #1
   10fe8:	str	r1, [sp, #8]
   10fec:	ldr	r1, [sp, #8]
   10ff0:	cmp	r1, #0
   10ff4:	bne	11008 <teste_grafo_novo@@Base+0x110>
   10ff8:	ldr	r0, [pc, #164]	; 110a4 <teste_grafo_novo@@Base+0x1ac>
   10ffc:	add	r0, pc, r0
   11000:	bl	10bdc <printf@plt>
   11004:	b	11014 <teste_grafo_novo@@Base+0x11c>
   11008:	ldr	r0, [pc, #152]	; 110a8 <teste_grafo_novo@@Base+0x1b0>
   1100c:	add	r0, pc, r0
   11010:	bl	10bdc <printf@plt>
   11014:	ldr	r0, [sp, #8]
   11018:	str	r0, [fp, #-4]
   1101c:	b	11080 <teste_grafo_novo@@Base+0x188>
   11020:	ldr	r0, [sp, #4]
   11024:	ldr	r0, [r0]
   11028:	cmp	r0, #1
   1102c:	beq	11048 <teste_grafo_novo@@Base+0x150>
   11030:	ldr	r0, [pc, #116]	; 110ac <teste_grafo_novo@@Base+0x1b4>
   11034:	add	r0, pc, r0
   11038:	bl	10bdc <printf@plt>
   1103c:	ldr	r1, [sp, #8]
   11040:	add	r1, r1, #1
   11044:	str	r1, [sp, #8]
   11048:	ldr	r0, [sp, #4]
   1104c:	bl	122a0 <grafo_apaga@@Base>
   11050:	ldr	r0, [sp, #8]
   11054:	cmp	r0, #0
   11058:	bne	1106c <teste_grafo_novo@@Base+0x174>
   1105c:	ldr	r0, [pc, #76]	; 110b0 <teste_grafo_novo@@Base+0x1b8>
   11060:	add	r0, pc, r0
   11064:	bl	10bdc <printf@plt>
   11068:	b	11078 <teste_grafo_novo@@Base+0x180>
   1106c:	ldr	r0, [pc, #64]	; 110b4 <teste_grafo_novo@@Base+0x1bc>
   11070:	add	r0, pc, r0
   11074:	bl	10bdc <printf@plt>
   11078:	ldr	r0, [sp, #8]
   1107c:	str	r0, [fp, #-4]
   11080:	ldr	r0, [fp, #-4]
   11084:	mov	sp, fp
   11088:	pop	{fp, pc}
   1108c:	andeq	r2, r0, ip, lsl #3
   11090:	andeq	r2, r0, r3, ror #2
   11094:	andeq	r2, r0, r7, asr r1
   11098:	ldrdeq	r2, [r0], -fp
   1109c:	andeq	r2, r0, r3, lsr #2
   110a0:	andeq	r2, r0, fp, asr #1
   110a4:	strheq	r2, [r0], -pc	; <UNPREDICTABLE>
   110a8:	andeq	r2, r0, r3, asr #14
   110ac:	andeq	r2, r0, pc, lsr #1
   110b0:	andeq	r2, r0, fp, asr r0
   110b4:	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>

000110b8 <teste_grafo_aresta@@Base>:
   110b8:	push	{r4, r5, r6, sl, fp, lr}
   110bc:	add	fp, sp, #16
   110c0:	sub	sp, sp, #104	; 0x68
   110c4:	movw	r0, #0
   110c8:	str	r0, [fp, #-20]	; 0xffffffec
   110cc:	movw	r1, #8
   110d0:	str	r0, [fp, #-28]	; 0xffffffe4
   110d4:	mov	r0, r1
   110d8:	movw	r1, #22
   110dc:	movw	r2, #3
   110e0:	str	r2, [fp, #-32]	; 0xffffffe0
   110e4:	movw	r3, #2
   110e8:	str	r3, [fp, #-36]	; 0xffffffdc
   110ec:	movw	ip, #7
   110f0:	str	ip, [sp]
   110f4:	ldr	lr, [fp, #-36]	; 0xffffffdc
   110f8:	str	lr, [sp, #4]
   110fc:	ldr	r4, [fp, #-28]	; 0xffffffe4
   11100:	str	r4, [sp, #8]
   11104:	str	lr, [sp, #12]
   11108:	str	ip, [sp, #16]
   1110c:	movw	r5, #5
   11110:	str	r5, [sp, #20]
   11114:	str	r5, [sp, #24]
   11118:	movw	r5, #4
   1111c:	str	r5, [sp, #28]
   11120:	str	r5, [sp, #32]
   11124:	str	r4, [sp, #36]	; 0x24
   11128:	str	r5, [sp, #40]	; 0x28
   1112c:	movw	r5, #6
   11130:	str	r5, [sp, #44]	; 0x2c
   11134:	movw	r6, #1
   11138:	str	r6, [sp, #48]	; 0x30
   1113c:	str	r6, [sp, #52]	; 0x34
   11140:	str	ip, [sp, #56]	; 0x38
   11144:	str	r5, [sp, #60]	; 0x3c
   11148:	str	r5, [sp, #64]	; 0x40
   1114c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   11150:	str	ip, [sp, #68]	; 0x44
   11154:	str	r4, [sp, #72]	; 0x48
   11158:	str	r6, [sp, #76]	; 0x4c
   1115c:	bl	10d2c <_g@@Base>
   11160:	ldr	r1, [pc, #272]	; 11278 <teste_grafo_aresta@@Base+0x1c0>
   11164:	add	r1, pc, r1
   11168:	str	r0, [fp, #-24]	; 0xffffffe8
   1116c:	mov	r0, r1
   11170:	bl	10bdc <printf@plt>
   11174:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11178:	str	r0, [fp, #-40]	; 0xffffffd8
   1117c:	mov	r0, r1
   11180:	movw	r1, #5
   11184:	movw	r2, #4
   11188:	bl	12358 <grafo_aresta@@Base>
   1118c:	cmp	r0, #1
   11190:	beq	111ac <teste_grafo_aresta@@Base+0xf4>
   11194:	ldr	r0, [pc, #224]	; 1127c <teste_grafo_aresta@@Base+0x1c4>
   11198:	add	r0, pc, r0
   1119c:	bl	10bdc <printf@plt>
   111a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   111a4:	add	r1, r1, #1
   111a8:	str	r1, [fp, #-20]	; 0xffffffec
   111ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   111b0:	movw	r1, #7
   111b4:	movw	r2, #6
   111b8:	bl	12358 <grafo_aresta@@Base>
   111bc:	cmp	r0, #1
   111c0:	beq	111dc <teste_grafo_aresta@@Base+0x124>
   111c4:	ldr	r0, [pc, #180]	; 11280 <teste_grafo_aresta@@Base+0x1c8>
   111c8:	add	r0, pc, r0
   111cc:	bl	10bdc <printf@plt>
   111d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   111d4:	add	r1, r1, #1
   111d8:	str	r1, [fp, #-20]	; 0xffffffec
   111dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   111e0:	movw	r1, #7
   111e4:	movw	r2, #1
   111e8:	bl	12358 <grafo_aresta@@Base>
   111ec:	cmp	r0, #0
   111f0:	beq	1120c <teste_grafo_aresta@@Base+0x154>
   111f4:	ldr	r0, [pc, #136]	; 11284 <teste_grafo_aresta@@Base+0x1cc>
   111f8:	add	r0, pc, r0
   111fc:	bl	10bdc <printf@plt>
   11200:	ldr	r1, [fp, #-20]	; 0xffffffec
   11204:	add	r1, r1, #1
   11208:	str	r1, [fp, #-20]	; 0xffffffec
   1120c:	movw	r0, #0
   11210:	movw	r1, #2
   11214:	movw	r2, #7
   11218:	bl	12358 <grafo_aresta@@Base>
   1121c:	cmn	r0, #1
   11220:	beq	1123c <teste_grafo_aresta@@Base+0x184>
   11224:	ldr	r0, [pc, #92]	; 11288 <teste_grafo_aresta@@Base+0x1d0>
   11228:	add	r0, pc, r0
   1122c:	bl	10bdc <printf@plt>
   11230:	ldr	r1, [fp, #-20]	; 0xffffffec
   11234:	add	r1, r1, #1
   11238:	str	r1, [fp, #-20]	; 0xffffffec
   1123c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11240:	bl	122a0 <grafo_apaga@@Base>
   11244:	ldr	r0, [fp, #-20]	; 0xffffffec
   11248:	cmp	r0, #0
   1124c:	bne	11260 <teste_grafo_aresta@@Base+0x1a8>
   11250:	ldr	r0, [pc, #52]	; 1128c <teste_grafo_aresta@@Base+0x1d4>
   11254:	add	r0, pc, r0
   11258:	bl	10bdc <printf@plt>
   1125c:	b	1126c <teste_grafo_aresta@@Base+0x1b4>
   11260:	ldr	r0, [pc, #40]	; 11290 <teste_grafo_aresta@@Base+0x1d8>
   11264:	add	r0, pc, r0
   11268:	bl	10bdc <printf@plt>
   1126c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11270:	sub	sp, fp, #16
   11274:	pop	{r4, r5, r6, sl, fp, pc}
   11278:	andeq	r1, r0, r2, lsr #31
   1127c:	andeq	r1, r0, pc, ror pc
   11280:	andeq	r1, r0, pc, asr #30
   11284:	andeq	r1, r0, r7, asr pc
   11288:	andeq	r1, r0, r3, ror #30
   1128c:	andeq	r1, r0, r7, ror #28
   11290:	andeq	r2, r0, fp, ror #9

00011294 <teste_grafo_adiciona@@Base>:
   11294:	push	{fp, lr}
   11298:	mov	fp, sp
   1129c:	sub	sp, sp, #24
   112a0:	movw	r0, #0
   112a4:	str	r0, [fp, #-4]
   112a8:	movw	r0, #9
   112ac:	movw	r1, #4
   112b0:	movw	r2, #3
   112b4:	movw	r3, #2
   112b8:	str	r3, [sp, #12]
   112bc:	movw	ip, #7
   112c0:	str	ip, [sp]
   112c4:	ldr	ip, [sp, #12]
   112c8:	str	ip, [sp, #4]
   112cc:	bl	10d2c <_g@@Base>
   112d0:	ldr	r1, [pc, #604]	; 11534 <teste_grafo_adiciona@@Base+0x2a0>
   112d4:	add	r1, pc, r1
   112d8:	str	r0, [fp, #-8]
   112dc:	mov	r0, r1
   112e0:	bl	10bdc <printf@plt>
   112e4:	ldr	r1, [fp, #-8]
   112e8:	str	r0, [sp, #8]
   112ec:	mov	r0, r1
   112f0:	movw	r1, #2
   112f4:	movw	r2, #7
   112f8:	bl	12424 <grafo_adiciona@@Base>
   112fc:	cmp	r0, #1
   11300:	beq	1131c <teste_grafo_adiciona@@Base+0x88>
   11304:	ldr	r0, [pc, #556]	; 11538 <teste_grafo_adiciona@@Base+0x2a4>
   11308:	add	r0, pc, r0
   1130c:	bl	10bdc <printf@plt>
   11310:	ldr	r1, [fp, #-4]
   11314:	add	r1, r1, #1
   11318:	str	r1, [fp, #-4]
   1131c:	ldr	r0, [fp, #-8]
   11320:	ldr	r0, [r0, #4]
   11324:	ldr	r0, [r0, #20]
   11328:	movw	r1, #0
   1132c:	cmp	r0, r1
   11330:	beq	1134c <teste_grafo_adiciona@@Base+0xb8>
   11334:	ldr	r0, [fp, #-8]
   11338:	ldr	r0, [r0, #4]
   1133c:	ldr	r0, [r0, #20]
   11340:	ldr	r0, [r0]
   11344:	cmp	r0, #7
   11348:	beq	11364 <teste_grafo_adiciona@@Base+0xd0>
   1134c:	ldr	r0, [pc, #488]	; 1153c <teste_grafo_adiciona@@Base+0x2a8>
   11350:	add	r0, pc, r0
   11354:	bl	10bdc <printf@plt>
   11358:	ldr	r1, [fp, #-4]
   1135c:	add	r1, r1, #1
   11360:	str	r1, [fp, #-4]
   11364:	ldr	r0, [fp, #-8]
   11368:	movw	r1, #3
   1136c:	movw	r2, #8
   11370:	bl	12424 <grafo_adiciona@@Base>
   11374:	cmp	r0, #1
   11378:	beq	11394 <teste_grafo_adiciona@@Base+0x100>
   1137c:	ldr	r0, [pc, #444]	; 11540 <teste_grafo_adiciona@@Base+0x2ac>
   11380:	add	r0, pc, r0
   11384:	bl	10bdc <printf@plt>
   11388:	ldr	r1, [fp, #-4]
   1138c:	add	r1, r1, #1
   11390:	str	r1, [fp, #-4]
   11394:	ldr	r0, [fp, #-8]
   11398:	ldr	r0, [r0, #4]
   1139c:	ldr	r0, [r0, #28]
   113a0:	movw	r1, #0
   113a4:	cmp	r0, r1
   113a8:	beq	11450 <teste_grafo_adiciona@@Base+0x1bc>
   113ac:	ldr	r0, [fp, #-8]
   113b0:	ldr	r0, [r0, #4]
   113b4:	ldr	r0, [r0, #28]
   113b8:	ldr	r0, [r0, #4]
   113bc:	movw	r1, #0
   113c0:	cmp	r0, r1
   113c4:	beq	11450 <teste_grafo_adiciona@@Base+0x1bc>
   113c8:	ldr	r0, [fp, #-8]
   113cc:	ldr	r0, [r0, #4]
   113d0:	ldr	r0, [r0, #28]
   113d4:	ldr	r0, [r0, #4]
   113d8:	ldr	r0, [r0, #4]
   113dc:	movw	r1, #0
   113e0:	cmp	r0, r1
   113e4:	bne	11450 <teste_grafo_adiciona@@Base+0x1bc>
   113e8:	ldr	r0, [fp, #-8]
   113ec:	ldr	r0, [r0, #4]
   113f0:	ldr	r0, [r0, #28]
   113f4:	ldr	r0, [r0]
   113f8:	cmp	r0, #2
   113fc:	bne	1141c <teste_grafo_adiciona@@Base+0x188>
   11400:	ldr	r0, [fp, #-8]
   11404:	ldr	r0, [r0, #4]
   11408:	ldr	r0, [r0, #28]
   1140c:	ldr	r0, [r0, #4]
   11410:	ldr	r0, [r0]
   11414:	cmp	r0, #8
   11418:	beq	11468 <teste_grafo_adiciona@@Base+0x1d4>
   1141c:	ldr	r0, [fp, #-8]
   11420:	ldr	r0, [r0, #4]
   11424:	ldr	r0, [r0, #28]
   11428:	ldr	r0, [r0]
   1142c:	cmp	r0, #8
   11430:	bne	11450 <teste_grafo_adiciona@@Base+0x1bc>
   11434:	ldr	r0, [fp, #-8]
   11438:	ldr	r0, [r0, #4]
   1143c:	ldr	r0, [r0, #28]
   11440:	ldr	r0, [r0, #4]
   11444:	ldr	r0, [r0]
   11448:	cmp	r0, #2
   1144c:	beq	11468 <teste_grafo_adiciona@@Base+0x1d4>
   11450:	ldr	r0, [pc, #236]	; 11544 <teste_grafo_adiciona@@Base+0x2b0>
   11454:	add	r0, pc, r0
   11458:	bl	10bdc <printf@plt>
   1145c:	ldr	r1, [fp, #-4]
   11460:	add	r1, r1, #1
   11464:	str	r1, [fp, #-4]
   11468:	ldr	r0, [fp, #-8]
   1146c:	movw	r1, #2
   11470:	movw	r2, #7
   11474:	bl	12424 <grafo_adiciona@@Base>
   11478:	cmp	r0, #0
   1147c:	beq	11498 <teste_grafo_adiciona@@Base+0x204>
   11480:	ldr	r0, [pc, #192]	; 11548 <teste_grafo_adiciona@@Base+0x2b4>
   11484:	add	r0, pc, r0
   11488:	bl	10bdc <printf@plt>
   1148c:	ldr	r1, [fp, #-4]
   11490:	add	r1, r1, #1
   11494:	str	r1, [fp, #-4]
   11498:	ldr	r0, [fp, #-8]
   1149c:	movw	r1, #22
   114a0:	movw	r2, #7
   114a4:	bl	12424 <grafo_adiciona@@Base>
   114a8:	cmn	r0, #1
   114ac:	beq	114c8 <teste_grafo_adiciona@@Base+0x234>
   114b0:	ldr	r0, [pc, #148]	; 1154c <teste_grafo_adiciona@@Base+0x2b8>
   114b4:	add	r0, pc, r0
   114b8:	bl	10bdc <printf@plt>
   114bc:	ldr	r1, [fp, #-4]
   114c0:	add	r1, r1, #1
   114c4:	str	r1, [fp, #-4]
   114c8:	movw	r0, #0
   114cc:	movw	r1, #2
   114d0:	movw	r2, #7
   114d4:	bl	12424 <grafo_adiciona@@Base>
   114d8:	cmn	r0, #1
   114dc:	beq	114f8 <teste_grafo_adiciona@@Base+0x264>
   114e0:	ldr	r0, [pc, #104]	; 11550 <teste_grafo_adiciona@@Base+0x2bc>
   114e4:	add	r0, pc, r0
   114e8:	bl	10bdc <printf@plt>
   114ec:	ldr	r1, [fp, #-4]
   114f0:	add	r1, r1, #1
   114f4:	str	r1, [fp, #-4]
   114f8:	ldr	r0, [fp, #-8]
   114fc:	bl	122a0 <grafo_apaga@@Base>
   11500:	ldr	r0, [fp, #-4]
   11504:	cmp	r0, #0
   11508:	bne	1151c <teste_grafo_adiciona@@Base+0x288>
   1150c:	ldr	r0, [pc, #64]	; 11554 <teste_grafo_adiciona@@Base+0x2c0>
   11510:	add	r0, pc, r0
   11514:	bl	10bdc <printf@plt>
   11518:	b	11528 <teste_grafo_adiciona@@Base+0x294>
   1151c:	ldr	r0, [pc, #52]	; 11558 <teste_grafo_adiciona@@Base+0x2c4>
   11520:	add	r0, pc, r0
   11524:	bl	10bdc <printf@plt>
   11528:	ldr	r0, [fp, #-4]
   1152c:	mov	sp, fp
   11530:	pop	{fp, pc}
   11534:	andeq	r1, r0, sp, ror #29
   11538:	andeq	r1, r0, ip, asr #29
   1153c:			; <UNDEFINED> instruction: 0x00001ebe
   11540:	andeq	r1, r0, r4, asr lr
   11544:	andeq	r1, r0, r8, ror #27
   11548:	strdeq	r1, [r0], -r3
   1154c:	strdeq	r1, [r0], -fp
   11550:	andeq	r1, r0, r2, lsl #28
   11554:	andeq	r1, r0, fp, lsr #23
   11558:	andeq	r2, r0, pc, lsr #4

0001155c <teste_grafo_remove@@Base>:
   1155c:	push	{fp, lr}
   11560:	mov	fp, sp
   11564:	sub	sp, sp, #32
   11568:	movw	r0, #0
   1156c:	str	r0, [fp, #-4]
   11570:	movw	r0, #9
   11574:	movw	r1, #6
   11578:	movw	r2, #3
   1157c:	movw	r3, #2
   11580:	str	r3, [fp, #-12]
   11584:	movw	ip, #7
   11588:	str	ip, [sp]
   1158c:	ldr	lr, [fp, #-12]
   11590:	str	lr, [sp, #4]
   11594:	str	ip, [sp, #8]
   11598:	movw	ip, #1
   1159c:	str	ip, [sp, #12]
   115a0:	bl	10d2c <_g@@Base>
   115a4:	ldr	r1, [pc, #420]	; 11750 <teste_grafo_remove@@Base+0x1f4>
   115a8:	add	r1, pc, r1
   115ac:	str	r0, [fp, #-8]
   115b0:	mov	r0, r1
   115b4:	bl	10bdc <printf@plt>
   115b8:	ldr	r1, [fp, #-8]
   115bc:	str	r0, [sp, #16]
   115c0:	mov	r0, r1
   115c4:	movw	r1, #7
   115c8:	movw	r2, #1
   115cc:	bl	1251c <grafo_remove@@Base>
   115d0:	cmp	r0, #1
   115d4:	beq	115f0 <teste_grafo_remove@@Base+0x94>
   115d8:	ldr	r0, [pc, #372]	; 11754 <teste_grafo_remove@@Base+0x1f8>
   115dc:	add	r0, pc, r0
   115e0:	bl	10bdc <printf@plt>
   115e4:	ldr	r1, [fp, #-4]
   115e8:	add	r1, r1, #1
   115ec:	str	r1, [fp, #-4]
   115f0:	ldr	r0, [fp, #-8]
   115f4:	ldr	r0, [r0, #4]
   115f8:	ldr	r0, [r0, #60]	; 0x3c
   115fc:	movw	r1, #0
   11600:	cmp	r0, r1
   11604:	beq	1163c <teste_grafo_remove@@Base+0xe0>
   11608:	ldr	r0, [fp, #-8]
   1160c:	ldr	r0, [r0, #4]
   11610:	ldr	r0, [r0, #60]	; 0x3c
   11614:	ldr	r0, [r0, #4]
   11618:	movw	r1, #0
   1161c:	cmp	r0, r1
   11620:	bne	1163c <teste_grafo_remove@@Base+0xe0>
   11624:	ldr	r0, [fp, #-8]
   11628:	ldr	r0, [r0, #4]
   1162c:	ldr	r0, [r0, #60]	; 0x3c
   11630:	ldr	r0, [r0]
   11634:	cmp	r0, #2
   11638:	beq	11654 <teste_grafo_remove@@Base+0xf8>
   1163c:	ldr	r0, [pc, #276]	; 11758 <teste_grafo_remove@@Base+0x1fc>
   11640:	add	r0, pc, r0
   11644:	bl	10bdc <printf@plt>
   11648:	ldr	r1, [fp, #-4]
   1164c:	add	r1, r1, #1
   11650:	str	r1, [fp, #-4]
   11654:	ldr	r0, [fp, #-8]
   11658:	movw	r1, #7
   1165c:	movw	r2, #2
   11660:	bl	1251c <grafo_remove@@Base>
   11664:	cmp	r0, #1
   11668:	beq	11684 <teste_grafo_remove@@Base+0x128>
   1166c:	ldr	r0, [pc, #232]	; 1175c <teste_grafo_remove@@Base+0x200>
   11670:	add	r0, pc, r0
   11674:	bl	10bdc <printf@plt>
   11678:	ldr	r1, [fp, #-4]
   1167c:	add	r1, r1, #1
   11680:	str	r1, [fp, #-4]
   11684:	ldr	r0, [fp, #-8]
   11688:	ldr	r0, [r0, #4]
   1168c:	ldr	r0, [r0, #60]	; 0x3c
   11690:	movw	r1, #0
   11694:	cmp	r0, r1
   11698:	beq	116b4 <teste_grafo_remove@@Base+0x158>
   1169c:	ldr	r0, [pc, #188]	; 11760 <teste_grafo_remove@@Base+0x204>
   116a0:	add	r0, pc, r0
   116a4:	bl	10bdc <printf@plt>
   116a8:	ldr	r1, [fp, #-4]
   116ac:	add	r1, r1, #1
   116b0:	str	r1, [fp, #-4]
   116b4:	ldr	r0, [fp, #-8]
   116b8:	movw	r1, #4
   116bc:	movw	r2, #0
   116c0:	bl	1251c <grafo_remove@@Base>
   116c4:	cmp	r0, #0
   116c8:	beq	116e4 <teste_grafo_remove@@Base+0x188>
   116cc:	ldr	r0, [pc, #144]	; 11764 <teste_grafo_remove@@Base+0x208>
   116d0:	add	r0, pc, r0
   116d4:	bl	10bdc <printf@plt>
   116d8:	ldr	r1, [fp, #-4]
   116dc:	add	r1, r1, #1
   116e0:	str	r1, [fp, #-4]
   116e4:	ldr	r0, [fp, #-8]
   116e8:	movw	r1, #7
   116ec:	movw	r2, #22
   116f0:	bl	1251c <grafo_remove@@Base>
   116f4:	cmn	r0, #1
   116f8:	beq	11714 <teste_grafo_remove@@Base+0x1b8>
   116fc:	ldr	r0, [pc, #100]	; 11768 <teste_grafo_remove@@Base+0x20c>
   11700:	add	r0, pc, r0
   11704:	bl	10bdc <printf@plt>
   11708:	ldr	r1, [fp, #-4]
   1170c:	add	r1, r1, #1
   11710:	str	r1, [fp, #-4]
   11714:	ldr	r0, [fp, #-8]
   11718:	bl	122a0 <grafo_apaga@@Base>
   1171c:	ldr	r0, [fp, #-4]
   11720:	cmp	r0, #0
   11724:	bne	11738 <teste_grafo_remove@@Base+0x1dc>
   11728:	ldr	r0, [pc, #60]	; 1176c <teste_grafo_remove@@Base+0x210>
   1172c:	add	r0, pc, r0
   11730:	bl	10bdc <printf@plt>
   11734:	b	11744 <teste_grafo_remove@@Base+0x1e8>
   11738:	ldr	r0, [pc, #48]	; 11770 <teste_grafo_remove@@Base+0x214>
   1173c:	add	r0, pc, r0
   11740:	bl	10bdc <printf@plt>
   11744:	ldr	r0, [fp, #-4]
   11748:	mov	sp, fp
   1174c:	pop	{fp, pc}
   11750:	andeq	r1, r0, r3, ror sp
   11754:	andeq	r1, r0, r0, asr sp
   11758:	andeq	r1, r0, r6, lsr #26
   1175c:			; <UNDEFINED> instruction: 0x00001cbc
   11760:	andeq	r1, r0, r6, asr #25
   11764:	andeq	r1, r0, pc, asr #25
   11768:	ldrdeq	r1, [r0], -fp
   1176c:	andeq	r1, r0, pc, lsl #19
   11770:	andeq	r2, r0, r3, lsl r0

00011774 <teste_v_sucessores@@Base>:
   11774:	push	{r4, r5, r6, sl, fp, lr}
   11778:	add	fp, sp, #16
   1177c:	sub	sp, sp, #112	; 0x70
   11780:	movw	r0, #0
   11784:	str	r0, [fp, #-24]	; 0xffffffe8
   11788:	movw	r1, #8
   1178c:	str	r0, [fp, #-36]	; 0xffffffdc
   11790:	mov	r0, r1
   11794:	movw	r1, #22
   11798:	movw	r2, #3
   1179c:	str	r2, [fp, #-40]	; 0xffffffd8
   117a0:	movw	r3, #2
   117a4:	str	r3, [fp, #-44]	; 0xffffffd4
   117a8:	movw	ip, #7
   117ac:	str	ip, [sp]
   117b0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   117b4:	str	lr, [sp, #4]
   117b8:	ldr	r4, [fp, #-36]	; 0xffffffdc
   117bc:	str	r4, [sp, #8]
   117c0:	str	lr, [sp, #12]
   117c4:	str	ip, [sp, #16]
   117c8:	movw	r5, #5
   117cc:	str	r5, [sp, #20]
   117d0:	str	r5, [sp, #24]
   117d4:	movw	r5, #4
   117d8:	str	r5, [sp, #28]
   117dc:	str	r5, [sp, #32]
   117e0:	str	r4, [sp, #36]	; 0x24
   117e4:	str	r5, [sp, #40]	; 0x28
   117e8:	movw	r5, #6
   117ec:	str	r5, [sp, #44]	; 0x2c
   117f0:	movw	r6, #1
   117f4:	str	r6, [sp, #48]	; 0x30
   117f8:	str	r6, [sp, #52]	; 0x34
   117fc:	str	ip, [sp, #56]	; 0x38
   11800:	str	r5, [sp, #60]	; 0x3c
   11804:	str	r5, [sp, #64]	; 0x40
   11808:	ldr	ip, [fp, #-40]	; 0xffffffd8
   1180c:	str	ip, [sp, #68]	; 0x44
   11810:	str	r4, [sp, #72]	; 0x48
   11814:	str	r6, [sp, #76]	; 0x4c
   11818:	bl	10d2c <_g@@Base>
   1181c:	ldr	r1, [pc, #508]	; 11a20 <teste_v_sucessores@@Base+0x2ac>
   11820:	add	r1, pc, r1
   11824:	str	r0, [fp, #-28]	; 0xffffffe4
   11828:	mov	r0, r1
   1182c:	bl	10bdc <printf@plt>
   11830:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11834:	str	r0, [fp, #-48]	; 0xffffffd0
   11838:	mov	r0, r1
   1183c:	movw	r1, #7
   11840:	bl	126e4 <v_sucessores@@Base>
   11844:	str	r0, [fp, #-32]	; 0xffffffe0
   11848:	movw	r1, #0
   1184c:	cmp	r0, r1
   11850:	bne	1186c <teste_v_sucessores@@Base+0xf8>
   11854:	ldr	r0, [pc, #456]	; 11a24 <teste_v_sucessores@@Base+0x2b0>
   11858:	add	r0, pc, r0
   1185c:	bl	10bdc <printf@plt>
   11860:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11864:	add	r1, r1, #1
   11868:	str	r1, [fp, #-24]	; 0xffffffe8
   1186c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11870:	movw	r1, #0
   11874:	cmp	r0, r1
   11878:	bne	118b0 <teste_v_sucessores@@Base+0x13c>
   1187c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11880:	cmp	r0, #0
   11884:	bne	11898 <teste_v_sucessores@@Base+0x124>
   11888:	ldr	r0, [pc, #408]	; 11a28 <teste_v_sucessores@@Base+0x2b4>
   1188c:	add	r0, pc, r0
   11890:	bl	10bdc <printf@plt>
   11894:	b	118a4 <teste_v_sucessores@@Base+0x130>
   11898:	ldr	r0, [pc, #396]	; 11a2c <teste_v_sucessores@@Base+0x2b8>
   1189c:	add	r0, pc, r0
   118a0:	bl	10bdc <printf@plt>
   118a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118a8:	str	r0, [fp, #-20]	; 0xffffffec
   118ac:	b	11a14 <teste_v_sucessores@@Base+0x2a0>
   118b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   118b4:	ldr	r0, [r0]
   118b8:	cmp	r0, #3
   118bc:	beq	118d8 <teste_v_sucessores@@Base+0x164>
   118c0:	ldr	r0, [pc, #360]	; 11a30 <teste_v_sucessores@@Base+0x2bc>
   118c4:	add	r0, pc, r0
   118c8:	bl	10bdc <printf@plt>
   118cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   118d0:	add	r1, r1, #1
   118d4:	str	r1, [fp, #-24]	; 0xffffffe8
   118d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   118dc:	movw	r1, #2
   118e0:	bl	10e60 <_f@@Base>
   118e4:	cmp	r0, #0
   118e8:	beq	11914 <teste_v_sucessores@@Base+0x1a0>
   118ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   118f0:	movw	r1, #5
   118f4:	bl	10e60 <_f@@Base>
   118f8:	cmp	r0, #0
   118fc:	beq	11914 <teste_v_sucessores@@Base+0x1a0>
   11900:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11904:	movw	r1, #6
   11908:	bl	10e60 <_f@@Base>
   1190c:	cmp	r0, #0
   11910:	bne	1192c <teste_v_sucessores@@Base+0x1b8>
   11914:	ldr	r0, [pc, #280]	; 11a34 <teste_v_sucessores@@Base+0x2c0>
   11918:	add	r0, pc, r0
   1191c:	bl	10bdc <printf@plt>
   11920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11924:	add	r1, r1, #1
   11928:	str	r1, [fp, #-24]	; 0xffffffe8
   1192c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11930:	bl	12ae0 <vetor_apaga@@Base>
   11934:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11938:	movw	r1, #2
   1193c:	bl	126e4 <v_sucessores@@Base>
   11940:	str	r0, [fp, #-32]	; 0xffffffe0
   11944:	movw	r1, #0
   11948:	cmp	r0, r1
   1194c:	bne	11968 <teste_v_sucessores@@Base+0x1f4>
   11950:	ldr	r0, [pc, #224]	; 11a38 <teste_v_sucessores@@Base+0x2c4>
   11954:	add	r0, pc, r0
   11958:	bl	10bdc <printf@plt>
   1195c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11960:	add	r1, r1, #1
   11964:	str	r1, [fp, #-24]	; 0xffffffe8
   11968:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1196c:	movw	r1, #0
   11970:	cmp	r0, r1
   11974:	bne	119ac <teste_v_sucessores@@Base+0x238>
   11978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1197c:	cmp	r0, #0
   11980:	bne	11994 <teste_v_sucessores@@Base+0x220>
   11984:	ldr	r0, [pc, #176]	; 11a3c <teste_v_sucessores@@Base+0x2c8>
   11988:	add	r0, pc, r0
   1198c:	bl	10bdc <printf@plt>
   11990:	b	119a0 <teste_v_sucessores@@Base+0x22c>
   11994:	ldr	r0, [pc, #164]	; 11a40 <teste_v_sucessores@@Base+0x2cc>
   11998:	add	r0, pc, r0
   1199c:	bl	10bdc <printf@plt>
   119a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119a4:	str	r0, [fp, #-20]	; 0xffffffec
   119a8:	b	11a14 <teste_v_sucessores@@Base+0x2a0>
   119ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   119b0:	ldr	r0, [r0]
   119b4:	cmp	r0, #0
   119b8:	beq	119d4 <teste_v_sucessores@@Base+0x260>
   119bc:	ldr	r0, [pc, #128]	; 11a44 <teste_v_sucessores@@Base+0x2d0>
   119c0:	add	r0, pc, r0
   119c4:	bl	10bdc <printf@plt>
   119c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   119cc:	add	r1, r1, #1
   119d0:	str	r1, [fp, #-24]	; 0xffffffe8
   119d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   119d8:	bl	12ae0 <vetor_apaga@@Base>
   119dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119e0:	bl	122a0 <grafo_apaga@@Base>
   119e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119e8:	cmp	r0, #0
   119ec:	bne	11a00 <teste_v_sucessores@@Base+0x28c>
   119f0:	ldr	r0, [pc, #80]	; 11a48 <teste_v_sucessores@@Base+0x2d4>
   119f4:	add	r0, pc, r0
   119f8:	bl	10bdc <printf@plt>
   119fc:	b	11a0c <teste_v_sucessores@@Base+0x298>
   11a00:	ldr	r0, [pc, #68]	; 11a4c <teste_v_sucessores@@Base+0x2d8>
   11a04:	add	r0, pc, r0
   11a08:	bl	10bdc <printf@plt>
   11a0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a10:	str	r0, [fp, #-20]	; 0xffffffec
   11a14:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a18:	sub	sp, fp, #16
   11a1c:	pop	{r4, r5, r6, sl, fp, pc}
   11a20:	strdeq	r1, [r0], -r3
   11a24:	andeq	r1, r0, ip, asr #23
   11a28:	andeq	r1, r0, pc, lsr #16
   11a2c:			; <UNDEFINED> instruction: 0x00001eb3
   11a30:	andeq	r1, r0, sp, lsl #23
   11a34:	andeq	r1, r0, r4, ror #22
   11a38:	andeq	r1, r0, r4, asr fp
   11a3c:	andeq	r1, r0, r3, lsr r7
   11a40:			; <UNDEFINED> instruction: 0x00001db7
   11a44:	andeq	r1, r0, r6, lsr #22
   11a48:	andeq	r1, r0, r7, asr #13
   11a4c:	andeq	r1, r0, fp, asr #26

00011a50 <teste_v_antecessores@@Base>:
   11a50:	push	{r4, r5, r6, sl, fp, lr}
   11a54:	add	fp, sp, #16
   11a58:	sub	sp, sp, #112	; 0x70
   11a5c:	movw	r0, #0
   11a60:	str	r0, [fp, #-24]	; 0xffffffe8
   11a64:	movw	r1, #8
   11a68:	str	r0, [fp, #-36]	; 0xffffffdc
   11a6c:	mov	r0, r1
   11a70:	movw	r1, #22
   11a74:	movw	r2, #3
   11a78:	str	r2, [fp, #-40]	; 0xffffffd8
   11a7c:	movw	r3, #2
   11a80:	str	r3, [fp, #-44]	; 0xffffffd4
   11a84:	movw	ip, #7
   11a88:	str	ip, [sp]
   11a8c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   11a90:	str	lr, [sp, #4]
   11a94:	ldr	r4, [fp, #-36]	; 0xffffffdc
   11a98:	str	r4, [sp, #8]
   11a9c:	str	lr, [sp, #12]
   11aa0:	str	ip, [sp, #16]
   11aa4:	movw	r5, #5
   11aa8:	str	r5, [sp, #20]
   11aac:	str	r5, [sp, #24]
   11ab0:	movw	r5, #4
   11ab4:	str	r5, [sp, #28]
   11ab8:	str	r5, [sp, #32]
   11abc:	str	r4, [sp, #36]	; 0x24
   11ac0:	str	r5, [sp, #40]	; 0x28
   11ac4:	movw	r5, #6
   11ac8:	str	r5, [sp, #44]	; 0x2c
   11acc:	movw	r6, #1
   11ad0:	str	r6, [sp, #48]	; 0x30
   11ad4:	str	r6, [sp, #52]	; 0x34
   11ad8:	str	ip, [sp, #56]	; 0x38
   11adc:	str	r5, [sp, #60]	; 0x3c
   11ae0:	str	r5, [sp, #64]	; 0x40
   11ae4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   11ae8:	str	ip, [sp, #68]	; 0x44
   11aec:	str	r4, [sp, #72]	; 0x48
   11af0:	str	r6, [sp, #76]	; 0x4c
   11af4:	bl	10d2c <_g@@Base>
   11af8:	ldr	r1, [pc, #508]	; 11cfc <teste_v_antecessores@@Base+0x2ac>
   11afc:	add	r1, pc, r1
   11b00:	str	r0, [fp, #-28]	; 0xffffffe4
   11b04:	mov	r0, r1
   11b08:	bl	10bdc <printf@plt>
   11b0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11b10:	str	r0, [fp, #-48]	; 0xffffffd0
   11b14:	mov	r0, r1
   11b18:	movw	r1, #2
   11b1c:	bl	127b0 <v_antecessores@@Base>
   11b20:	str	r0, [fp, #-32]	; 0xffffffe0
   11b24:	movw	r1, #0
   11b28:	cmp	r0, r1
   11b2c:	bne	11b48 <teste_v_antecessores@@Base+0xf8>
   11b30:	ldr	r0, [pc, #456]	; 11d00 <teste_v_antecessores@@Base+0x2b0>
   11b34:	add	r0, pc, r0
   11b38:	bl	10bdc <printf@plt>
   11b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11b40:	add	r1, r1, #1
   11b44:	str	r1, [fp, #-24]	; 0xffffffe8
   11b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b4c:	movw	r1, #0
   11b50:	cmp	r0, r1
   11b54:	bne	11b8c <teste_v_antecessores@@Base+0x13c>
   11b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b5c:	cmp	r0, #0
   11b60:	bne	11b74 <teste_v_antecessores@@Base+0x124>
   11b64:	ldr	r0, [pc, #408]	; 11d04 <teste_v_antecessores@@Base+0x2b4>
   11b68:	add	r0, pc, r0
   11b6c:	bl	10bdc <printf@plt>
   11b70:	b	11b80 <teste_v_antecessores@@Base+0x130>
   11b74:	ldr	r0, [pc, #396]	; 11d08 <teste_v_antecessores@@Base+0x2b8>
   11b78:	add	r0, pc, r0
   11b7c:	bl	10bdc <printf@plt>
   11b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11b84:	str	r0, [fp, #-20]	; 0xffffffec
   11b88:	b	11cf0 <teste_v_antecessores@@Base+0x2a0>
   11b8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11b90:	ldr	r0, [r0]
   11b94:	cmp	r0, #3
   11b98:	beq	11bb4 <teste_v_antecessores@@Base+0x164>
   11b9c:	ldr	r0, [pc, #360]	; 11d0c <teste_v_antecessores@@Base+0x2bc>
   11ba0:	add	r0, pc, r0
   11ba4:	bl	10bdc <printf@plt>
   11ba8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11bac:	add	r1, r1, #1
   11bb0:	str	r1, [fp, #-24]	; 0xffffffe8
   11bb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11bb8:	movw	r1, #0
   11bbc:	bl	10e60 <_f@@Base>
   11bc0:	cmp	r0, #0
   11bc4:	beq	11bf0 <teste_v_antecessores@@Base+0x1a0>
   11bc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11bcc:	movw	r1, #3
   11bd0:	bl	10e60 <_f@@Base>
   11bd4:	cmp	r0, #0
   11bd8:	beq	11bf0 <teste_v_antecessores@@Base+0x1a0>
   11bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11be0:	movw	r1, #7
   11be4:	bl	10e60 <_f@@Base>
   11be8:	cmp	r0, #0
   11bec:	bne	11c08 <teste_v_antecessores@@Base+0x1b8>
   11bf0:	ldr	r0, [pc, #280]	; 11d10 <teste_v_antecessores@@Base+0x2c0>
   11bf4:	add	r0, pc, r0
   11bf8:	bl	10bdc <printf@plt>
   11bfc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11c00:	add	r1, r1, #1
   11c04:	str	r1, [fp, #-24]	; 0xffffffe8
   11c08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c0c:	bl	12ae0 <vetor_apaga@@Base>
   11c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c14:	movw	r1, #7
   11c18:	bl	127b0 <v_antecessores@@Base>
   11c1c:	str	r0, [fp, #-32]	; 0xffffffe0
   11c20:	movw	r1, #0
   11c24:	cmp	r0, r1
   11c28:	bne	11c44 <teste_v_antecessores@@Base+0x1f4>
   11c2c:	ldr	r0, [pc, #224]	; 11d14 <teste_v_antecessores@@Base+0x2c4>
   11c30:	add	r0, pc, r0
   11c34:	bl	10bdc <printf@plt>
   11c38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11c3c:	add	r1, r1, #1
   11c40:	str	r1, [fp, #-24]	; 0xffffffe8
   11c44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c48:	movw	r1, #0
   11c4c:	cmp	r0, r1
   11c50:	bne	11c88 <teste_v_antecessores@@Base+0x238>
   11c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c58:	cmp	r0, #0
   11c5c:	bne	11c70 <teste_v_antecessores@@Base+0x220>
   11c60:	ldr	r0, [pc, #176]	; 11d18 <teste_v_antecessores@@Base+0x2c8>
   11c64:	add	r0, pc, r0
   11c68:	bl	10bdc <printf@plt>
   11c6c:	b	11c7c <teste_v_antecessores@@Base+0x22c>
   11c70:	ldr	r0, [pc, #164]	; 11d1c <teste_v_antecessores@@Base+0x2cc>
   11c74:	add	r0, pc, r0
   11c78:	bl	10bdc <printf@plt>
   11c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c80:	str	r0, [fp, #-20]	; 0xffffffec
   11c84:	b	11cf0 <teste_v_antecessores@@Base+0x2a0>
   11c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c8c:	ldr	r0, [r0]
   11c90:	cmp	r0, #0
   11c94:	beq	11cb0 <teste_v_antecessores@@Base+0x260>
   11c98:	ldr	r0, [pc, #128]	; 11d20 <teste_v_antecessores@@Base+0x2d0>
   11c9c:	add	r0, pc, r0
   11ca0:	bl	10bdc <printf@plt>
   11ca4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11ca8:	add	r1, r1, #1
   11cac:	str	r1, [fp, #-24]	; 0xffffffe8
   11cb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11cb4:	bl	12ae0 <vetor_apaga@@Base>
   11cb8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11cbc:	bl	122a0 <grafo_apaga@@Base>
   11cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11cc4:	cmp	r0, #0
   11cc8:	bne	11cdc <teste_v_antecessores@@Base+0x28c>
   11ccc:	ldr	r0, [pc, #80]	; 11d24 <teste_v_antecessores@@Base+0x2d4>
   11cd0:	add	r0, pc, r0
   11cd4:	bl	10bdc <printf@plt>
   11cd8:	b	11ce8 <teste_v_antecessores@@Base+0x298>
   11cdc:	ldr	r0, [pc, #68]	; 11d28 <teste_v_antecessores@@Base+0x2d8>
   11ce0:	add	r0, pc, r0
   11ce4:	bl	10bdc <printf@plt>
   11ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11cec:	str	r0, [fp, #-20]	; 0xffffffec
   11cf0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11cf4:	sub	sp, fp, #16
   11cf8:	pop	{r4, r5, r6, sl, fp, pc}
   11cfc:	andeq	r1, r0, r8, lsl sl
   11d00:	strdeq	r1, [r0], -r3
   11d04:	andeq	r1, r0, r3, asr r5
   11d08:	ldrdeq	r1, [r0], -r7
   11d0c:			; <UNDEFINED> instruction: 0x000019b6
   11d10:	andeq	r1, r0, pc, lsl #19
   11d14:	andeq	r1, r0, r1, lsl #19
   11d18:	andeq	r1, r0, r7, asr r4
   11d1c:	ldrdeq	r1, [r0], -fp
   11d20:	andeq	r1, r0, r5, asr r9
   11d24:	andeq	r1, r0, fp, ror #7
   11d28:	andeq	r1, r0, pc, ror #20

00011d2c <teste_v_grau@@Base>:
   11d2c:	push	{r4, r5, r6, sl, fp, lr}
   11d30:	add	fp, sp, #16
   11d34:	sub	sp, sp, #104	; 0x68
   11d38:	movw	r0, #0
   11d3c:	str	r0, [fp, #-20]	; 0xffffffec
   11d40:	movw	r1, #8
   11d44:	str	r0, [fp, #-28]	; 0xffffffe4
   11d48:	mov	r0, r1
   11d4c:	movw	r1, #22
   11d50:	movw	r2, #3
   11d54:	str	r2, [fp, #-32]	; 0xffffffe0
   11d58:	movw	r3, #2
   11d5c:	str	r3, [fp, #-36]	; 0xffffffdc
   11d60:	movw	ip, #7
   11d64:	str	ip, [sp]
   11d68:	ldr	lr, [fp, #-36]	; 0xffffffdc
   11d6c:	str	lr, [sp, #4]
   11d70:	ldr	r4, [fp, #-28]	; 0xffffffe4
   11d74:	str	r4, [sp, #8]
   11d78:	str	lr, [sp, #12]
   11d7c:	str	ip, [sp, #16]
   11d80:	movw	r5, #5
   11d84:	str	r5, [sp, #20]
   11d88:	str	r5, [sp, #24]
   11d8c:	movw	r5, #4
   11d90:	str	r5, [sp, #28]
   11d94:	str	r5, [sp, #32]
   11d98:	str	r4, [sp, #36]	; 0x24
   11d9c:	str	r5, [sp, #40]	; 0x28
   11da0:	movw	r5, #6
   11da4:	str	r5, [sp, #44]	; 0x2c
   11da8:	movw	r6, #1
   11dac:	str	r6, [sp, #48]	; 0x30
   11db0:	str	r6, [sp, #52]	; 0x34
   11db4:	str	ip, [sp, #56]	; 0x38
   11db8:	str	r5, [sp, #60]	; 0x3c
   11dbc:	str	r5, [sp, #64]	; 0x40
   11dc0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   11dc4:	str	ip, [sp, #68]	; 0x44
   11dc8:	str	r4, [sp, #72]	; 0x48
   11dcc:	str	r6, [sp, #76]	; 0x4c
   11dd0:	bl	10d2c <_g@@Base>
   11dd4:	ldr	r1, [pc, #212]	; 11eb0 <teste_v_grau@@Base+0x184>
   11dd8:	add	r1, pc, r1
   11ddc:	str	r0, [fp, #-24]	; 0xffffffe8
   11de0:	mov	r0, r1
   11de4:	bl	10bdc <printf@plt>
   11de8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11dec:	str	r0, [fp, #-40]	; 0xffffffd8
   11df0:	mov	r0, r1
   11df4:	mvn	r1, #3
   11df8:	bl	128cc <v_grau@@Base>
   11dfc:	cmn	r0, #1
   11e00:	beq	11e1c <teste_v_grau@@Base+0xf0>
   11e04:	ldr	r0, [pc, #168]	; 11eb4 <teste_v_grau@@Base+0x188>
   11e08:	add	r0, pc, r0
   11e0c:	bl	10bdc <printf@plt>
   11e10:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e14:	add	r1, r1, #1
   11e18:	str	r1, [fp, #-20]	; 0xffffffec
   11e1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e20:	movw	r1, #7
   11e24:	bl	128cc <v_grau@@Base>
   11e28:	cmp	r0, #3
   11e2c:	beq	11e48 <teste_v_grau@@Base+0x11c>
   11e30:	ldr	r0, [pc, #128]	; 11eb8 <teste_v_grau@@Base+0x18c>
   11e34:	add	r0, pc, r0
   11e38:	bl	10bdc <printf@plt>
   11e3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e40:	add	r1, r1, #1
   11e44:	str	r1, [fp, #-20]	; 0xffffffec
   11e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e4c:	movw	r1, #5
   11e50:	bl	128cc <v_grau@@Base>
   11e54:	cmp	r0, #2
   11e58:	beq	11e74 <teste_v_grau@@Base+0x148>
   11e5c:	ldr	r0, [pc, #88]	; 11ebc <teste_v_grau@@Base+0x190>
   11e60:	add	r0, pc, r0
   11e64:	bl	10bdc <printf@plt>
   11e68:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e6c:	add	r1, r1, #1
   11e70:	str	r1, [fp, #-20]	; 0xffffffec
   11e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e78:	bl	122a0 <grafo_apaga@@Base>
   11e7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e80:	cmp	r0, #0
   11e84:	bne	11e98 <teste_v_grau@@Base+0x16c>
   11e88:	ldr	r0, [pc, #48]	; 11ec0 <teste_v_grau@@Base+0x194>
   11e8c:	add	r0, pc, r0
   11e90:	bl	10bdc <printf@plt>
   11e94:	b	11ea4 <teste_v_grau@@Base+0x178>
   11e98:	ldr	r0, [pc, #36]	; 11ec4 <teste_v_grau@@Base+0x198>
   11e9c:	add	r0, pc, r0
   11ea0:	bl	10bdc <printf@plt>
   11ea4:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ea8:	sub	sp, fp, #16
   11eac:	pop	{r4, r5, r6, sl, fp, pc}
   11eb0:	andeq	r1, r0, r9, asr #16
   11eb4:	andeq	r1, r0, r4, lsr #16
   11eb8:	andeq	r1, r0, r8, lsr #16
   11ebc:	andeq	r1, r0, fp, lsr #16
   11ec0:	andeq	r1, r0, pc, lsr #4
   11ec4:			; <UNDEFINED> instruction: 0x000018b3

00011ec8 <teste_v_celebridade@@Base>:
   11ec8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11ecc:	add	fp, sp, #24
   11ed0:	sub	sp, sp, #136	; 0x88
   11ed4:	movw	r0, #0
   11ed8:	str	r0, [fp, #-28]	; 0xffffffe4
   11edc:	movw	r1, #8
   11ee0:	str	r0, [fp, #-36]	; 0xffffffdc
   11ee4:	mov	r0, r1
   11ee8:	movw	r1, #30
   11eec:	movw	r2, #3
   11ef0:	str	r2, [fp, #-40]	; 0xffffffd8
   11ef4:	movw	r3, #2
   11ef8:	str	r3, [fp, #-44]	; 0xffffffd4
   11efc:	movw	ip, #7
   11f00:	str	ip, [sp]
   11f04:	ldr	lr, [fp, #-44]	; 0xffffffd4
   11f08:	str	lr, [sp, #4]
   11f0c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   11f10:	str	r4, [sp, #8]
   11f14:	str	lr, [sp, #12]
   11f18:	str	ip, [sp, #16]
   11f1c:	movw	r5, #5
   11f20:	str	r5, [sp, #20]
   11f24:	str	r5, [sp, #24]
   11f28:	movw	r6, #4
   11f2c:	str	r6, [sp, #28]
   11f30:	str	r6, [sp, #32]
   11f34:	str	r4, [sp, #36]	; 0x24
   11f38:	str	r6, [sp, #40]	; 0x28
   11f3c:	movw	r7, #6
   11f40:	str	r7, [sp, #44]	; 0x2c
   11f44:	movw	r8, #1
   11f48:	str	r8, [sp, #48]	; 0x30
   11f4c:	str	r8, [sp, #52]	; 0x34
   11f50:	str	ip, [sp, #56]	; 0x38
   11f54:	str	r7, [sp, #60]	; 0x3c
   11f58:	str	r7, [sp, #64]	; 0x40
   11f5c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   11f60:	str	ip, [sp, #68]	; 0x44
   11f64:	str	r4, [sp, #72]	; 0x48
   11f68:	str	r8, [sp, #76]	; 0x4c
   11f6c:	str	r8, [sp, #80]	; 0x50
   11f70:	str	lr, [sp, #84]	; 0x54
   11f74:	str	r7, [sp, #88]	; 0x58
   11f78:	str	lr, [sp, #92]	; 0x5c
   11f7c:	str	r6, [sp, #96]	; 0x60
   11f80:	str	lr, [sp, #100]	; 0x64
   11f84:	str	r5, [sp, #104]	; 0x68
   11f88:	str	lr, [sp, #108]	; 0x6c
   11f8c:	bl	10d2c <_g@@Base>
   11f90:	ldr	r1, [pc, #168]	; 12040 <teste_v_celebridade@@Base+0x178>
   11f94:	add	r1, pc, r1
   11f98:	str	r0, [fp, #-32]	; 0xffffffe0
   11f9c:	mov	r0, r1
   11fa0:	bl	10bdc <printf@plt>
   11fa4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11fa8:	str	r0, [fp, #-48]	; 0xffffffd0
   11fac:	mov	r0, r1
   11fb0:	movw	r1, #7
   11fb4:	bl	12960 <v_celebridade@@Base>
   11fb8:	cmp	r0, #0
   11fbc:	beq	11fd8 <teste_v_celebridade@@Base+0x110>
   11fc0:	ldr	r0, [pc, #124]	; 12044 <teste_v_celebridade@@Base+0x17c>
   11fc4:	add	r0, pc, r0
   11fc8:	bl	10bdc <printf@plt>
   11fcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11fd0:	add	r1, r1, #1
   11fd4:	str	r1, [fp, #-28]	; 0xffffffe4
   11fd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11fdc:	movw	r1, #2
   11fe0:	bl	12960 <v_celebridade@@Base>
   11fe4:	cmp	r0, #1
   11fe8:	beq	12004 <teste_v_celebridade@@Base+0x13c>
   11fec:	ldr	r0, [pc, #84]	; 12048 <teste_v_celebridade@@Base+0x180>
   11ff0:	add	r0, pc, r0
   11ff4:	bl	10bdc <printf@plt>
   11ff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11ffc:	add	r1, r1, #1
   12000:	str	r1, [fp, #-28]	; 0xffffffe4
   12004:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12008:	bl	122a0 <grafo_apaga@@Base>
   1200c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12010:	cmp	r0, #0
   12014:	bne	12028 <teste_v_celebridade@@Base+0x160>
   12018:	ldr	r0, [pc, #44]	; 1204c <teste_v_celebridade@@Base+0x184>
   1201c:	add	r0, pc, r0
   12020:	bl	10bdc <printf@plt>
   12024:	b	12034 <teste_v_celebridade@@Base+0x16c>
   12028:	ldr	r0, [pc, #32]	; 12050 <teste_v_celebridade@@Base+0x188>
   1202c:	add	r0, pc, r0
   12030:	bl	10bdc <printf@plt>
   12034:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12038:	sub	sp, fp, #24
   1203c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12040:	andeq	r1, r0, r6, lsr #14
   12044:	andeq	r1, r0, r8, lsl #14
   12048:	andeq	r1, r0, r4, lsl r7
   1204c:	muleq	r0, pc, r0	; <UNPREDICTABLE>
   12050:	andeq	r1, r0, r3, lsr #14

00012054 <main@@Base>:
   12054:	push	{fp, lr}
   12058:	mov	fp, sp
   1205c:	sub	sp, sp, #24
   12060:	ldr	r0, [pc, #268]	; 12174 <main@@Base+0x120>
   12064:	ldr	r0, [pc, r0]
   12068:	movw	r1, #0
   1206c:	str	r1, [fp, #-4]
   12070:	ldr	r0, [r0]
   12074:	str	r1, [sp, #12]
   12078:	movw	r2, #2
   1207c:	ldr	r3, [sp, #12]
   12080:	bl	10c24 <setvbuf@plt>
   12084:	ldr	r1, [pc, #228]	; 12170 <main@@Base+0x11c>
   12088:	ldr	r1, [pc, r1]
   1208c:	ldr	r1, [r1]
   12090:	str	r0, [sp, #8]
   12094:	mov	r0, r1
   12098:	movw	r1, #0
   1209c:	str	r1, [sp, #4]
   120a0:	movw	r2, #2
   120a4:	ldr	r3, [sp, #4]
   120a8:	bl	10c24 <setvbuf@plt>
   120ac:	movw	r1, #0
   120b0:	str	r1, [fp, #-8]
   120b4:	str	r0, [sp]
   120b8:	bl	10ef8 <teste_grafo_novo@@Base>
   120bc:	ldr	r1, [fp, #-8]
   120c0:	add	r0, r1, r0
   120c4:	str	r0, [fp, #-8]
   120c8:	bl	110b8 <teste_grafo_aresta@@Base>
   120cc:	ldr	r1, [fp, #-8]
   120d0:	add	r0, r1, r0
   120d4:	str	r0, [fp, #-8]
   120d8:	bl	11294 <teste_grafo_adiciona@@Base>
   120dc:	ldr	r1, [fp, #-8]
   120e0:	add	r0, r1, r0
   120e4:	str	r0, [fp, #-8]
   120e8:	bl	1155c <teste_grafo_remove@@Base>
   120ec:	ldr	r1, [fp, #-8]
   120f0:	add	r0, r1, r0
   120f4:	str	r0, [fp, #-8]
   120f8:	bl	11774 <teste_v_sucessores@@Base>
   120fc:	ldr	r1, [fp, #-8]
   12100:	add	r0, r1, r0
   12104:	str	r0, [fp, #-8]
   12108:	bl	11a50 <teste_v_antecessores@@Base>
   1210c:	ldr	r1, [fp, #-8]
   12110:	add	r0, r1, r0
   12114:	str	r0, [fp, #-8]
   12118:	bl	11d2c <teste_v_grau@@Base>
   1211c:	ldr	r1, [fp, #-8]
   12120:	add	r0, r1, r0
   12124:	str	r0, [fp, #-8]
   12128:	bl	11ec8 <teste_v_celebridade@@Base>
   1212c:	ldr	r1, [fp, #-8]
   12130:	add	r0, r1, r0
   12134:	str	r0, [fp, #-8]
   12138:	ldr	r0, [fp, #-8]
   1213c:	cmp	r0, #0
   12140:	bne	12154 <main@@Base+0x100>
   12144:	ldr	r0, [pc, #44]	; 12178 <main@@Base+0x124>
   12148:	add	r0, pc, r0
   1214c:	bl	10bdc <printf@plt>
   12150:	b	12164 <main@@Base+0x110>
   12154:	ldr	r0, [pc, #32]	; 1217c <main@@Base+0x128>
   12158:	add	r0, pc, r0
   1215c:	ldr	r1, [fp, #-8]
   12160:	bl	10bdc <printf@plt>
   12164:	movw	r0, #0
   12168:	mov	sp, fp
   1216c:	pop	{fp, pc}
   12170:	andeq	r1, r1, r4, lsr #31
   12174:	ldrdeq	r1, [r1], -r0
   12178:	strdeq	r1, [r0], -r0
   1217c:	strdeq	r1, [r0], -r9

00012180 <cria_elem@@Base>:
   12180:	push	{fp, lr}
   12184:	mov	fp, sp
   12188:	sub	sp, sp, #16
   1218c:	str	r0, [sp, #8]
   12190:	movw	r0, #8
   12194:	bl	10c00 <malloc@plt>
   12198:	str	r0, [sp, #4]
   1219c:	ldr	r0, [sp, #4]
   121a0:	movw	r1, #0
   121a4:	cmp	r0, r1
   121a8:	bne	121b8 <cria_elem@@Base+0x38>
   121ac:	movw	r0, #0
   121b0:	str	r0, [fp, #-4]
   121b4:	b	121d8 <cria_elem@@Base+0x58>
   121b8:	ldr	r0, [sp, #8]
   121bc:	ldr	r1, [sp, #4]
   121c0:	str	r0, [r1]
   121c4:	ldr	r0, [sp, #4]
   121c8:	movw	r1, #0
   121cc:	str	r1, [r0, #4]
   121d0:	ldr	r0, [sp, #4]
   121d4:	str	r0, [fp, #-4]
   121d8:	ldr	r0, [fp, #-4]
   121dc:	mov	sp, fp
   121e0:	pop	{fp, pc}

000121e4 <grafo_novo@@Base>:
   121e4:	push	{fp, lr}
   121e8:	mov	fp, sp
   121ec:	sub	sp, sp, #16
   121f0:	str	r0, [sp, #8]
   121f4:	ldr	r0, [sp, #8]
   121f8:	cmp	r0, #1
   121fc:	bge	1220c <grafo_novo@@Base+0x28>
   12200:	movw	r0, #0
   12204:	str	r0, [fp, #-4]
   12208:	b	12294 <grafo_novo@@Base+0xb0>
   1220c:	mov	r0, #8
   12210:	bl	10c00 <malloc@plt>
   12214:	str	r0, [sp]
   12218:	ldr	r0, [sp, #8]
   1221c:	ldr	r1, [sp]
   12220:	str	r0, [r1]
   12224:	ldr	r0, [sp, #8]
   12228:	lsl	r0, r0, #3
   1222c:	bl	10c00 <malloc@plt>
   12230:	ldr	r1, [sp]
   12234:	str	r0, [r1, #4]
   12238:	movw	r0, #0
   1223c:	str	r0, [sp, #4]
   12240:	ldr	r0, [sp, #4]
   12244:	ldr	r1, [sp, #8]
   12248:	cmp	r0, r1
   1224c:	bge	1228c <grafo_novo@@Base+0xa8>
   12250:	ldr	r0, [sp]
   12254:	ldr	r0, [r0, #4]
   12258:	ldr	r1, [sp, #4]
   1225c:	mov	r2, #0
   12260:	str	r2, [r0, r1, lsl #3]
   12264:	ldr	r0, [sp]
   12268:	ldr	r0, [r0, #4]
   1226c:	ldr	r1, [sp, #4]
   12270:	add	r0, r0, r1, lsl #3
   12274:	movw	r1, #0
   12278:	str	r1, [r0, #4]
   1227c:	ldr	r0, [sp, #4]
   12280:	add	r0, r0, #1
   12284:	str	r0, [sp, #4]
   12288:	b	12240 <grafo_novo@@Base+0x5c>
   1228c:	ldr	r0, [sp]
   12290:	str	r0, [fp, #-4]
   12294:	ldr	r0, [fp, #-4]
   12298:	mov	sp, fp
   1229c:	pop	{fp, pc}

000122a0 <grafo_apaga@@Base>:
   122a0:	push	{fp, lr}
   122a4:	mov	fp, sp
   122a8:	sub	sp, sp, #16
   122ac:	str	r0, [fp, #-4]
   122b0:	ldr	r0, [fp, #-4]
   122b4:	movw	r1, #0
   122b8:	cmp	r0, r1
   122bc:	bne	122c4 <grafo_apaga@@Base+0x24>
   122c0:	b	12350 <grafo_apaga@@Base+0xb0>
   122c4:	movw	r0, #0
   122c8:	str	r0, [sp, #8]
   122cc:	ldr	r0, [sp, #8]
   122d0:	ldr	r1, [fp, #-4]
   122d4:	ldr	r1, [r1]
   122d8:	cmp	r0, r1
   122dc:	bge	1233c <grafo_apaga@@Base+0x9c>
   122e0:	ldr	r0, [fp, #-4]
   122e4:	ldr	r0, [r0, #4]
   122e8:	ldr	r1, [sp, #8]
   122ec:	add	r0, r0, r1, lsl #3
   122f0:	ldr	r0, [r0, #4]
   122f4:	str	r0, [sp, #4]
   122f8:	ldr	r0, [sp, #4]
   122fc:	movw	r1, #0
   12300:	cmp	r0, r1
   12304:	beq	12328 <grafo_apaga@@Base+0x88>
   12308:	ldr	r0, [sp, #4]
   1230c:	str	r0, [sp]
   12310:	ldr	r0, [sp, #4]
   12314:	ldr	r0, [r0, #4]
   12318:	str	r0, [sp, #4]
   1231c:	ldr	r0, [sp]
   12320:	bl	10be8 <free@plt>
   12324:	b	122f8 <grafo_apaga@@Base+0x58>
   12328:	b	1232c <grafo_apaga@@Base+0x8c>
   1232c:	ldr	r0, [sp, #8]
   12330:	add	r0, r0, #1
   12334:	str	r0, [sp, #8]
   12338:	b	122cc <grafo_apaga@@Base+0x2c>
   1233c:	ldr	r0, [fp, #-4]
   12340:	ldr	r0, [r0, #4]
   12344:	bl	10be8 <free@plt>
   12348:	ldr	r0, [fp, #-4]
   1234c:	bl	10be8 <free@plt>
   12350:	mov	sp, fp
   12354:	pop	{fp, pc}

00012358 <grafo_aresta@@Base>:
   12358:	sub	sp, sp, #20
   1235c:	str	r0, [sp, #12]
   12360:	str	r1, [sp, #8]
   12364:	str	r2, [sp, #4]
   12368:	ldr	r0, [sp, #12]
   1236c:	movw	r1, #0
   12370:	cmp	r0, r1
   12374:	beq	1238c <grafo_aresta@@Base+0x34>
   12378:	ldr	r0, [sp, #8]
   1237c:	ldr	r1, [sp, #12]
   12380:	ldr	r1, [r1]
   12384:	cmp	r0, r1
   12388:	ble	12398 <grafo_aresta@@Base+0x40>
   1238c:	mvn	r0, #0
   12390:	str	r0, [sp, #16]
   12394:	b	12418 <grafo_aresta@@Base+0xc0>
   12398:	ldr	r0, [sp, #4]
   1239c:	ldr	r1, [sp, #12]
   123a0:	ldr	r1, [r1]
   123a4:	cmp	r0, r1
   123a8:	ble	123b8 <grafo_aresta@@Base+0x60>
   123ac:	movw	r0, #0
   123b0:	str	r0, [sp, #16]
   123b4:	b	12418 <grafo_aresta@@Base+0xc0>
   123b8:	ldr	r0, [sp, #12]
   123bc:	ldr	r0, [r0, #4]
   123c0:	ldr	r1, [sp, #8]
   123c4:	add	r0, r0, r1, lsl #3
   123c8:	ldr	r0, [r0, #4]
   123cc:	str	r0, [sp]
   123d0:	ldr	r0, [sp]
   123d4:	movw	r1, #0
   123d8:	cmp	r0, r1
   123dc:	beq	12410 <grafo_aresta@@Base+0xb8>
   123e0:	ldr	r0, [sp]
   123e4:	ldr	r0, [r0]
   123e8:	ldr	r1, [sp, #4]
   123ec:	cmp	r0, r1
   123f0:	bne	12400 <grafo_aresta@@Base+0xa8>
   123f4:	movw	r0, #1
   123f8:	str	r0, [sp, #16]
   123fc:	b	12418 <grafo_aresta@@Base+0xc0>
   12400:	ldr	r0, [sp]
   12404:	ldr	r0, [r0, #4]
   12408:	str	r0, [sp]
   1240c:	b	123d0 <grafo_aresta@@Base+0x78>
   12410:	movw	r0, #0
   12414:	str	r0, [sp, #16]
   12418:	ldr	r0, [sp, #16]
   1241c:	add	sp, sp, #20
   12420:	bx	lr

00012424 <grafo_adiciona@@Base>:
   12424:	push	{fp, lr}
   12428:	mov	fp, sp
   1242c:	sub	sp, sp, #24
   12430:	str	r0, [fp, #-8]
   12434:	str	r1, [sp, #12]
   12438:	str	r2, [sp, #8]
   1243c:	ldr	r0, [fp, #-8]
   12440:	movw	r1, #0
   12444:	cmp	r0, r1
   12448:	beq	12474 <grafo_adiciona@@Base+0x50>
   1244c:	ldr	r0, [sp, #12]
   12450:	ldr	r1, [fp, #-8]
   12454:	ldr	r1, [r1]
   12458:	cmp	r0, r1
   1245c:	bgt	12474 <grafo_adiciona@@Base+0x50>
   12460:	ldr	r0, [sp, #8]
   12464:	ldr	r1, [fp, #-8]
   12468:	ldr	r1, [r1]
   1246c:	cmp	r0, r1
   12470:	ble	12480 <grafo_adiciona@@Base+0x5c>
   12474:	mvn	r0, #0
   12478:	str	r0, [fp, #-4]
   1247c:	b	12510 <grafo_adiciona@@Base+0xec>
   12480:	ldr	r0, [fp, #-8]
   12484:	ldr	r1, [sp, #12]
   12488:	ldr	r2, [sp, #8]
   1248c:	bl	12358 <grafo_aresta@@Base>
   12490:	cmp	r0, #1
   12494:	bne	124a4 <grafo_adiciona@@Base+0x80>
   12498:	movw	r0, #0
   1249c:	str	r0, [fp, #-4]
   124a0:	b	12510 <grafo_adiciona@@Base+0xec>
   124a4:	ldr	r0, [fp, #-8]
   124a8:	ldr	r0, [r0, #4]
   124ac:	ldr	r1, [sp, #12]
   124b0:	add	r0, r0, r1, lsl #3
   124b4:	ldr	r0, [r0, #4]
   124b8:	str	r0, [sp, #4]
   124bc:	ldr	r0, [sp, #8]
   124c0:	bl	12180 <cria_elem@@Base>
   124c4:	ldr	r1, [fp, #-8]
   124c8:	ldr	r1, [r1, #4]
   124cc:	ldr	r2, [sp, #12]
   124d0:	add	r1, r1, r2, lsl #3
   124d4:	str	r0, [r1, #4]
   124d8:	ldr	r0, [sp, #4]
   124dc:	ldr	r1, [fp, #-8]
   124e0:	ldr	r1, [r1, #4]
   124e4:	ldr	r2, [sp, #12]
   124e8:	add	r1, r1, r2, lsl #3
   124ec:	ldr	r1, [r1, #4]
   124f0:	str	r0, [r1, #4]
   124f4:	ldr	r0, [fp, #-8]
   124f8:	ldr	r0, [r0, #4]
   124fc:	ldr	r1, [r0]
   12500:	add	r1, r1, #1
   12504:	str	r1, [r0]
   12508:	movw	r0, #1
   1250c:	str	r0, [fp, #-4]
   12510:	ldr	r0, [fp, #-4]
   12514:	mov	sp, fp
   12518:	pop	{fp, pc}

0001251c <grafo_remove@@Base>:
   1251c:	push	{fp, lr}
   12520:	mov	fp, sp
   12524:	sub	sp, sp, #32
   12528:	str	r0, [fp, #-8]
   1252c:	str	r1, [fp, #-12]
   12530:	str	r2, [sp, #16]
   12534:	ldr	r0, [fp, #-8]
   12538:	movw	r1, #0
   1253c:	cmp	r0, r1
   12540:	beq	126d0 <grafo_remove@@Base+0x1b4>
   12544:	ldr	r0, [fp, #-12]
   12548:	ldr	r1, [fp, #-8]
   1254c:	ldr	r1, [r1]
   12550:	cmp	r0, r1
   12554:	bgt	126d0 <grafo_remove@@Base+0x1b4>
   12558:	ldr	r0, [sp, #16]
   1255c:	ldr	r1, [fp, #-8]
   12560:	ldr	r1, [r1]
   12564:	cmp	r0, r1
   12568:	bgt	126d0 <grafo_remove@@Base+0x1b4>
   1256c:	ldr	r0, [fp, #-8]
   12570:	ldr	r0, [r0, #4]
   12574:	ldr	r1, [fp, #-12]
   12578:	add	r0, r0, r1, lsl #3
   1257c:	ldr	r0, [r0, #4]
   12580:	movw	r1, #0
   12584:	cmp	r0, r1
   12588:	bne	12598 <grafo_remove@@Base+0x7c>
   1258c:	movw	r0, #0
   12590:	str	r0, [fp, #-4]
   12594:	b	126d8 <grafo_remove@@Base+0x1bc>
   12598:	ldr	r0, [fp, #-8]
   1259c:	ldr	r0, [r0, #4]
   125a0:	ldr	r1, [fp, #-12]
   125a4:	add	r0, r0, r1, lsl #3
   125a8:	ldr	r0, [r0, #4]
   125ac:	ldr	r0, [r0]
   125b0:	ldr	r1, [sp, #16]
   125b4:	cmp	r0, r1
   125b8:	bne	1261c <grafo_remove@@Base+0x100>
   125bc:	ldr	r0, [fp, #-8]
   125c0:	ldr	r0, [r0, #4]
   125c4:	ldr	r1, [fp, #-12]
   125c8:	add	r0, r0, r1, lsl #3
   125cc:	ldr	r0, [r0, #4]
   125d0:	str	r0, [sp, #12]
   125d4:	ldr	r0, [fp, #-8]
   125d8:	ldr	r0, [r0, #4]
   125dc:	ldr	r1, [fp, #-12]
   125e0:	add	r0, r0, r1, lsl #3
   125e4:	ldr	r1, [r0, #4]
   125e8:	ldr	r1, [r1, #4]
   125ec:	str	r1, [r0, #4]
   125f0:	ldr	r0, [fp, #-8]
   125f4:	ldr	r0, [r0, #4]
   125f8:	ldr	r1, [r0]
   125fc:	mvn	r2, #0
   12600:	add	r1, r1, r2
   12604:	str	r1, [r0]
   12608:	ldr	r0, [sp, #12]
   1260c:	bl	10be8 <free@plt>
   12610:	movw	r0, #1
   12614:	str	r0, [fp, #-4]
   12618:	b	126d8 <grafo_remove@@Base+0x1bc>
   1261c:	mov	r0, #0
   12620:	str	r0, [sp, #4]
   12624:	ldr	r0, [fp, #-8]
   12628:	ldr	r0, [r0, #4]
   1262c:	ldr	r1, [fp, #-12]
   12630:	add	r0, r0, r1, lsl #3
   12634:	ldr	r0, [r0, #4]
   12638:	str	r0, [sp, #8]
   1263c:	ldr	r0, [sp, #8]
   12640:	movw	r1, #0
   12644:	cmp	r0, r1
   12648:	beq	126c4 <grafo_remove@@Base+0x1a8>
   1264c:	ldr	r0, [sp, #8]
   12650:	ldr	r0, [r0]
   12654:	ldr	r1, [sp, #16]
   12658:	cmp	r0, r1
   1265c:	bne	126ac <grafo_remove@@Base+0x190>
   12660:	ldr	r0, [sp, #4]
   12664:	movw	r1, #0
   12668:	cmp	r0, r1
   1266c:	beq	126ac <grafo_remove@@Base+0x190>
   12670:	ldr	r0, [sp, #8]
   12674:	ldr	r0, [r0, #4]
   12678:	ldr	r1, [sp, #4]
   1267c:	str	r0, [r1, #4]
   12680:	ldr	r0, [fp, #-8]
   12684:	ldr	r0, [r0, #4]
   12688:	ldr	r1, [r0]
   1268c:	mvn	r2, #0
   12690:	add	r1, r1, r2
   12694:	str	r1, [r0]
   12698:	ldr	r0, [sp, #8]
   1269c:	bl	10be8 <free@plt>
   126a0:	movw	r0, #1
   126a4:	str	r0, [fp, #-4]
   126a8:	b	126d8 <grafo_remove@@Base+0x1bc>
   126ac:	ldr	r0, [sp, #8]
   126b0:	str	r0, [sp, #4]
   126b4:	ldr	r0, [sp, #8]
   126b8:	ldr	r0, [r0, #4]
   126bc:	str	r0, [sp, #8]
   126c0:	b	1263c <grafo_remove@@Base+0x120>
   126c4:	movw	r0, #0
   126c8:	str	r0, [fp, #-4]
   126cc:	b	126d8 <grafo_remove@@Base+0x1bc>
   126d0:	mvn	r0, #0
   126d4:	str	r0, [fp, #-4]
   126d8:	ldr	r0, [fp, #-4]
   126dc:	mov	sp, fp
   126e0:	pop	{fp, pc}

000126e4 <v_sucessores@@Base>:
   126e4:	push	{fp, lr}
   126e8:	mov	fp, sp
   126ec:	sub	sp, sp, #24
   126f0:	str	r0, [fp, #-8]
   126f4:	str	r1, [sp, #12]
   126f8:	ldr	r0, [fp, #-8]
   126fc:	movw	r1, #0
   12700:	cmp	r0, r1
   12704:	beq	1279c <v_sucessores@@Base+0xb8>
   12708:	ldr	r0, [sp, #12]
   1270c:	ldr	r1, [fp, #-8]
   12710:	ldr	r1, [r1]
   12714:	cmp	r0, r1
   12718:	bge	1279c <v_sucessores@@Base+0xb8>
   1271c:	ldr	r0, [sp, #12]
   12720:	cmp	r0, #0
   12724:	blt	1279c <v_sucessores@@Base+0xb8>
   12728:	mov	r0, #0
   1272c:	str	r0, [sp, #8]
   12730:	bl	12a7c <vetor_novo@@Base>
   12734:	str	r0, [sp, #4]
   12738:	ldr	r0, [fp, #-8]
   1273c:	ldr	r0, [r0, #4]
   12740:	ldr	r1, [sp, #12]
   12744:	add	r0, r0, r1, lsl #3
   12748:	ldr	r0, [r0, #4]
   1274c:	str	r0, [sp]
   12750:	ldr	r0, [sp]
   12754:	movw	r1, #0
   12758:	cmp	r0, r1
   1275c:	beq	12790 <v_sucessores@@Base+0xac>
   12760:	ldr	r0, [sp, #4]
   12764:	ldr	r1, [sp]
   12768:	ldr	r1, [r1]
   1276c:	ldr	r2, [sp, #8]
   12770:	bl	12c44 <vetor_insere@@Base>
   12774:	ldr	r1, [sp, #8]
   12778:	add	r1, r1, #1
   1277c:	str	r1, [sp, #8]
   12780:	ldr	r0, [sp]
   12784:	ldr	r0, [r0, #4]
   12788:	str	r0, [sp]
   1278c:	b	12750 <v_sucessores@@Base+0x6c>
   12790:	ldr	r0, [sp, #4]
   12794:	str	r0, [fp, #-4]
   12798:	b	127a4 <v_sucessores@@Base+0xc0>
   1279c:	movw	r0, #0
   127a0:	str	r0, [fp, #-4]
   127a4:	ldr	r0, [fp, #-4]
   127a8:	mov	sp, fp
   127ac:	pop	{fp, pc}

000127b0 <v_antecessores@@Base>:
   127b0:	push	{fp, lr}
   127b4:	mov	fp, sp
   127b8:	sub	sp, sp, #32
   127bc:	str	r0, [fp, #-8]
   127c0:	str	r1, [fp, #-12]
   127c4:	ldr	r0, [fp, #-8]
   127c8:	movw	r1, #0
   127cc:	cmp	r0, r1
   127d0:	beq	128b4 <v_antecessores@@Base+0x104>
   127d4:	ldr	r0, [fp, #-12]
   127d8:	ldr	r1, [fp, #-8]
   127dc:	ldr	r1, [r1]
   127e0:	cmp	r0, r1
   127e4:	bge	128b4 <v_antecessores@@Base+0x104>
   127e8:	ldr	r0, [fp, #-12]
   127ec:	cmp	r0, #0
   127f0:	blt	128b4 <v_antecessores@@Base+0x104>
   127f4:	ldr	r0, [pc, #204]	; 128c8 <v_antecessores@@Base+0x118>
   127f8:	ldr	r0, [pc, r0]
   127fc:	blx	r0
   12800:	str	r0, [sp, #16]
   12804:	movw	r0, #0
   12808:	str	r0, [sp, #8]
   1280c:	str	r0, [sp, #12]
   12810:	ldr	r0, [sp, #12]
   12814:	ldr	r1, [fp, #-8]
   12818:	ldr	r1, [r1]
   1281c:	cmp	r0, r1
   12820:	bge	128a8 <v_antecessores@@Base+0xf8>
   12824:	ldr	r0, [fp, #-8]
   12828:	ldr	r0, [r0, #4]
   1282c:	ldr	r1, [sp, #12]
   12830:	add	r0, r0, r1, lsl #3
   12834:	ldr	r0, [r0, #4]
   12838:	str	r0, [sp, #4]
   1283c:	ldr	r0, [sp, #4]
   12840:	movw	r1, #0
   12844:	cmp	r0, r1
   12848:	beq	12894 <v_antecessores@@Base+0xe4>
   1284c:	ldr	r0, [sp, #4]
   12850:	ldr	r0, [r0]
   12854:	ldr	r1, [fp, #-12]
   12858:	cmp	r0, r1
   1285c:	bne	12880 <v_antecessores@@Base+0xd0>
   12860:	ldr	r0, [sp, #16]
   12864:	ldr	r1, [sp, #12]
   12868:	ldr	r2, [sp, #8]
   1286c:	bl	12c44 <vetor_insere@@Base>
   12870:	ldr	r1, [sp, #8]
   12874:	add	r1, r1, #1
   12878:	str	r1, [sp, #8]
   1287c:	b	12894 <v_antecessores@@Base+0xe4>
   12880:	b	12884 <v_antecessores@@Base+0xd4>
   12884:	ldr	r0, [sp, #4]
   12888:	ldr	r0, [r0, #4]
   1288c:	str	r0, [sp, #4]
   12890:	b	1283c <v_antecessores@@Base+0x8c>
   12894:	b	12898 <v_antecessores@@Base+0xe8>
   12898:	ldr	r0, [sp, #12]
   1289c:	add	r0, r0, #1
   128a0:	str	r0, [sp, #12]
   128a4:	b	12810 <v_antecessores@@Base+0x60>
   128a8:	ldr	r0, [sp, #16]
   128ac:	str	r0, [fp, #-4]
   128b0:	b	128bc <v_antecessores@@Base+0x10c>
   128b4:	movw	r0, #0
   128b8:	str	r0, [fp, #-4]
   128bc:	ldr	r0, [fp, #-4]
   128c0:	mov	sp, fp
   128c4:	pop	{fp, pc}
   128c8:	andeq	r1, r1, r0, lsr r8

000128cc <v_grau@@Base>:
   128cc:	push	{fp, lr}
   128d0:	mov	fp, sp
   128d4:	sub	sp, sp, #32
   128d8:	str	r0, [fp, #-8]
   128dc:	str	r1, [fp, #-12]
   128e0:	ldr	r0, [fp, #-12]
   128e4:	cmp	r0, #0
   128e8:	bge	128f8 <v_grau@@Base+0x2c>
   128ec:	mvn	r0, #0
   128f0:	str	r0, [fp, #-4]
   128f4:	b	12954 <v_grau@@Base+0x88>
   128f8:	ldr	r0, [fp, #-8]
   128fc:	ldr	r1, [fp, #-12]
   12900:	bl	127b0 <v_antecessores@@Base>
   12904:	str	r0, [sp, #16]
   12908:	ldr	r0, [fp, #-8]
   1290c:	ldr	r1, [fp, #-12]
   12910:	bl	126e4 <v_sucessores@@Base>
   12914:	str	r0, [sp, #12]
   12918:	ldr	r0, [sp, #16]
   1291c:	bl	12b98 <vetor_tamanho@@Base>
   12920:	ldr	r1, [sp, #12]
   12924:	str	r0, [sp, #4]
   12928:	mov	r0, r1
   1292c:	bl	12b98 <vetor_tamanho@@Base>
   12930:	ldr	r1, [sp, #4]
   12934:	add	r0, r1, r0
   12938:	str	r0, [sp, #8]
   1293c:	ldr	r0, [sp, #16]
   12940:	bl	12ae0 <vetor_apaga@@Base>
   12944:	ldr	r0, [sp, #12]
   12948:	bl	12ae0 <vetor_apaga@@Base>
   1294c:	ldr	r0, [sp, #8]
   12950:	str	r0, [fp, #-4]
   12954:	ldr	r0, [fp, #-4]
   12958:	mov	sp, fp
   1295c:	pop	{fp, pc}

00012960 <v_celebridade@@Base>:
   12960:	sub	sp, sp, #24
   12964:	str	r0, [sp, #16]
   12968:	str	r1, [sp, #12]
   1296c:	ldr	r0, [sp, #16]
   12970:	movw	r1, #0
   12974:	cmp	r0, r1
   12978:	bne	12988 <v_celebridade@@Base+0x28>
   1297c:	mvn	r0, #0
   12980:	str	r0, [sp, #20]
   12984:	b	12a70 <v_celebridade@@Base+0x110>
   12988:	ldr	r0, [sp, #16]
   1298c:	ldr	r0, [r0, #4]
   12990:	ldr	r1, [sp, #12]
   12994:	add	r0, r0, r1, lsl #3
   12998:	ldr	r0, [r0]
   1299c:	cmp	r0, #0
   129a0:	beq	129b0 <v_celebridade@@Base+0x50>
   129a4:	movw	r0, #0
   129a8:	str	r0, [sp, #20]
   129ac:	b	12a70 <v_celebridade@@Base+0x110>
   129b0:	movw	r0, #0
   129b4:	str	r0, [sp, #4]
   129b8:	str	r0, [sp, #8]
   129bc:	ldr	r0, [sp, #8]
   129c0:	ldr	r1, [sp, #16]
   129c4:	ldr	r1, [r1]
   129c8:	cmp	r0, r1
   129cc:	bge	12a44 <v_celebridade@@Base+0xe4>
   129d0:	ldr	r0, [sp, #16]
   129d4:	ldr	r0, [r0, #4]
   129d8:	ldr	r1, [sp, #8]
   129dc:	add	r0, r0, r1, lsl #3
   129e0:	ldr	r0, [r0, #4]
   129e4:	str	r0, [sp]
   129e8:	ldr	r0, [sp]
   129ec:	movw	r1, #0
   129f0:	cmp	r0, r1
   129f4:	beq	12a30 <v_celebridade@@Base+0xd0>
   129f8:	ldr	r0, [sp]
   129fc:	ldr	r0, [r0]
   12a00:	ldr	r1, [sp, #12]
   12a04:	cmp	r0, r1
   12a08:	bne	12a1c <v_celebridade@@Base+0xbc>
   12a0c:	ldr	r0, [sp, #4]
   12a10:	add	r0, r0, #1
   12a14:	str	r0, [sp, #4]
   12a18:	b	12a30 <v_celebridade@@Base+0xd0>
   12a1c:	b	12a20 <v_celebridade@@Base+0xc0>
   12a20:	ldr	r0, [sp]
   12a24:	ldr	r0, [r0, #4]
   12a28:	str	r0, [sp]
   12a2c:	b	129e8 <v_celebridade@@Base+0x88>
   12a30:	b	12a34 <v_celebridade@@Base+0xd4>
   12a34:	ldr	r0, [sp, #8]
   12a38:	add	r0, r0, #1
   12a3c:	str	r0, [sp, #8]
   12a40:	b	129bc <v_celebridade@@Base+0x5c>
   12a44:	ldr	r0, [sp, #4]
   12a48:	add	r0, r0, #1
   12a4c:	ldr	r1, [sp, #16]
   12a50:	ldr	r1, [r1]
   12a54:	cmp	r0, r1
   12a58:	bne	12a68 <v_celebridade@@Base+0x108>
   12a5c:	movw	r0, #1
   12a60:	str	r0, [sp, #20]
   12a64:	b	12a70 <v_celebridade@@Base+0x110>
   12a68:	movw	r0, #0
   12a6c:	str	r0, [sp, #20]
   12a70:	ldr	r0, [sp, #20]
   12a74:	add	sp, sp, #24
   12a78:	bx	lr

00012a7c <vetor_novo@@Base>:
   12a7c:	push	{fp, lr}
   12a80:	mov	fp, sp
   12a84:	sub	sp, sp, #8
   12a88:	movw	r0, #12
   12a8c:	bl	10c00 <malloc@plt>
   12a90:	str	r0, [sp]
   12a94:	ldr	r0, [sp]
   12a98:	movw	r1, #0
   12a9c:	cmp	r0, r1
   12aa0:	bne	12ab0 <vetor_novo@@Base+0x34>
   12aa4:	movw	r0, #0
   12aa8:	str	r0, [sp, #4]
   12aac:	b	12ad4 <vetor_novo@@Base+0x58>
   12ab0:	ldr	r0, [sp]
   12ab4:	movw	r1, #0
   12ab8:	str	r1, [r0]
   12abc:	ldr	r0, [sp]
   12ac0:	str	r1, [r0, #4]
   12ac4:	ldr	r0, [sp]
   12ac8:	str	r1, [r0, #8]
   12acc:	ldr	r0, [sp]
   12ad0:	str	r0, [sp, #4]
   12ad4:	ldr	r0, [sp, #4]
   12ad8:	mov	sp, fp
   12adc:	pop	{fp, pc}

00012ae0 <vetor_apaga@@Base>:
   12ae0:	push	{fp, lr}
   12ae4:	mov	fp, sp
   12ae8:	sub	sp, sp, #8
   12aec:	str	r0, [sp, #4]
   12af0:	ldr	r0, [sp, #4]
   12af4:	movw	r1, #0
   12af8:	cmp	r0, r1
   12afc:	bne	12b04 <vetor_apaga@@Base+0x24>
   12b00:	b	12b18 <vetor_apaga@@Base+0x38>
   12b04:	ldr	r0, [sp, #4]
   12b08:	ldr	r0, [r0, #8]
   12b0c:	bl	10be8 <free@plt>
   12b10:	ldr	r0, [sp, #4]
   12b14:	bl	10be8 <free@plt>
   12b18:	mov	sp, fp
   12b1c:	pop	{fp, pc}

00012b20 <vetor_atribui@@Base>:
   12b20:	sub	sp, sp, #16
   12b24:	str	r0, [sp, #8]
   12b28:	str	r1, [sp, #4]
   12b2c:	str	r2, [sp]
   12b30:	ldr	r0, [sp, #8]
   12b34:	movw	r1, #0
   12b38:	cmp	r0, r1
   12b3c:	beq	12b60 <vetor_atribui@@Base+0x40>
   12b40:	ldr	r0, [sp, #4]
   12b44:	cmp	r0, #0
   12b48:	blt	12b60 <vetor_atribui@@Base+0x40>
   12b4c:	ldr	r0, [sp, #4]
   12b50:	ldr	r1, [sp, #8]
   12b54:	ldr	r1, [r1]
   12b58:	cmp	r0, r1
   12b5c:	blt	12b6c <vetor_atribui@@Base+0x4c>
   12b60:	mvn	r0, #0
   12b64:	str	r0, [sp, #12]
   12b68:	b	12b8c <vetor_atribui@@Base+0x6c>
   12b6c:	ldr	r0, [sp]
   12b70:	ldr	r1, [sp, #8]
   12b74:	ldr	r1, [r1, #8]
   12b78:	ldr	r2, [sp, #4]
   12b7c:	add	r1, r1, r2, lsl #2
   12b80:	str	r0, [r1]
   12b84:	ldr	r0, [sp, #4]
   12b88:	str	r0, [sp, #12]
   12b8c:	ldr	r0, [sp, #12]
   12b90:	add	sp, sp, #16
   12b94:	bx	lr

00012b98 <vetor_tamanho@@Base>:
   12b98:	sub	sp, sp, #8
   12b9c:	str	r0, [sp]
   12ba0:	ldr	r0, [sp]
   12ba4:	movw	r1, #0
   12ba8:	cmp	r0, r1
   12bac:	bne	12bbc <vetor_tamanho@@Base+0x24>
   12bb0:	mvn	r0, #0
   12bb4:	str	r0, [sp, #4]
   12bb8:	b	12bc8 <vetor_tamanho@@Base+0x30>
   12bbc:	ldr	r0, [sp]
   12bc0:	ldr	r0, [r0]
   12bc4:	str	r0, [sp, #4]
   12bc8:	ldr	r0, [sp, #4]
   12bcc:	add	sp, sp, #8
   12bd0:	bx	lr

00012bd4 <vetor_elemento@@Base>:
   12bd4:	sub	sp, sp, #12
   12bd8:	str	r0, [sp, #4]
   12bdc:	str	r1, [sp]
   12be0:	ldr	r0, [sp, #4]
   12be4:	movw	r1, #0
   12be8:	cmp	r0, r1
   12bec:	beq	12c10 <vetor_elemento@@Base+0x3c>
   12bf0:	ldr	r0, [sp]
   12bf4:	cmp	r0, #0
   12bf8:	blt	12c10 <vetor_elemento@@Base+0x3c>
   12bfc:	ldr	r0, [sp]
   12c00:	ldr	r1, [sp, #4]
   12c04:	ldr	r1, [r1]
   12c08:	cmp	r0, r1
   12c0c:	blt	12c1c <vetor_elemento@@Base+0x48>
   12c10:	ldr	r0, [pc, #40]	; 12c40 <vetor_elemento@@Base+0x6c>
   12c14:	str	r0, [sp, #8]
   12c18:	b	12c34 <vetor_elemento@@Base+0x60>
   12c1c:	ldr	r0, [sp, #4]
   12c20:	ldr	r0, [r0, #8]
   12c24:	ldr	r1, [sp]
   12c28:	add	r0, r0, r1, lsl #2
   12c2c:	ldr	r0, [r0]
   12c30:	str	r0, [sp, #8]
   12c34:	ldr	r0, [sp, #8]
   12c38:	add	sp, sp, #12
   12c3c:	bx	lr
   12c40:	andhi	r0, r0, r0

00012c44 <vetor_insere@@Base>:
   12c44:	push	{fp, lr}
   12c48:	mov	fp, sp
   12c4c:	sub	sp, sp, #24
   12c50:	str	r0, [fp, #-8]
   12c54:	str	r1, [sp, #12]
   12c58:	str	r2, [sp, #8]
   12c5c:	ldr	r0, [fp, #-8]
   12c60:	movw	r1, #0
   12c64:	cmp	r0, r1
   12c68:	beq	12c8c <vetor_insere@@Base+0x48>
   12c6c:	ldr	r0, [sp, #8]
   12c70:	cmn	r0, #1
   12c74:	blt	12c8c <vetor_insere@@Base+0x48>
   12c78:	ldr	r0, [sp, #8]
   12c7c:	ldr	r1, [fp, #-8]
   12c80:	ldr	r1, [r1]
   12c84:	cmp	r0, r1
   12c88:	ble	12c98 <vetor_insere@@Base+0x54>
   12c8c:	mvn	r0, #0
   12c90:	str	r0, [fp, #-4]
   12c94:	b	12db8 <vetor_insere@@Base+0x174>
   12c98:	ldr	r0, [sp, #8]
   12c9c:	cmn	r0, #1
   12ca0:	bne	12cb0 <vetor_insere@@Base+0x6c>
   12ca4:	ldr	r0, [fp, #-8]
   12ca8:	ldr	r0, [r0]
   12cac:	str	r0, [sp, #8]
   12cb0:	ldr	r0, [fp, #-8]
   12cb4:	ldr	r0, [r0]
   12cb8:	ldr	r1, [fp, #-8]
   12cbc:	ldr	r1, [r1, #4]
   12cc0:	cmp	r0, r1
   12cc4:	bne	12d38 <vetor_insere@@Base+0xf4>
   12cc8:	ldr	r0, [fp, #-8]
   12ccc:	ldr	r0, [r0, #4]
   12cd0:	cmp	r0, #0
   12cd4:	bne	12ce8 <vetor_insere@@Base+0xa4>
   12cd8:	ldr	r0, [fp, #-8]
   12cdc:	movw	r1, #1
   12ce0:	str	r1, [r0, #4]
   12ce4:	b	12cf8 <vetor_insere@@Base+0xb4>
   12ce8:	ldr	r0, [fp, #-8]
   12cec:	ldr	r1, [r0, #4]
   12cf0:	lsl	r1, r1, #1
   12cf4:	str	r1, [r0, #4]
   12cf8:	ldr	r0, [fp, #-8]
   12cfc:	ldr	r1, [r0, #4]
   12d00:	ldr	r0, [r0, #8]
   12d04:	lsl	r1, r1, #2
   12d08:	bl	10bf4 <realloc@plt>
   12d0c:	ldr	r1, [fp, #-8]
   12d10:	str	r0, [r1, #8]
   12d14:	ldr	r0, [fp, #-8]
   12d18:	ldr	r0, [r0, #8]
   12d1c:	movw	r1, #0
   12d20:	cmp	r0, r1
   12d24:	bne	12d34 <vetor_insere@@Base+0xf0>
   12d28:	mvn	r0, #0
   12d2c:	str	r0, [fp, #-4]
   12d30:	b	12db8 <vetor_insere@@Base+0x174>
   12d34:	b	12d38 <vetor_insere@@Base+0xf4>
   12d38:	ldr	r0, [fp, #-8]
   12d3c:	ldr	r0, [r0]
   12d40:	sub	r0, r0, #1
   12d44:	str	r0, [sp, #4]
   12d48:	ldr	r0, [sp, #4]
   12d4c:	ldr	r1, [sp, #8]
   12d50:	cmp	r0, r1
   12d54:	blt	12d88 <vetor_insere@@Base+0x144>
   12d58:	ldr	r0, [fp, #-8]
   12d5c:	ldr	r0, [r0, #8]
   12d60:	ldr	r1, [sp, #4]
   12d64:	ldr	r2, [r0, r1, lsl #2]
   12d68:	add	r1, r1, #1
   12d6c:	add	r0, r0, r1, lsl #2
   12d70:	str	r2, [r0]
   12d74:	ldr	r0, [sp, #4]
   12d78:	mvn	r1, #0
   12d7c:	add	r0, r0, r1
   12d80:	str	r0, [sp, #4]
   12d84:	b	12d48 <vetor_insere@@Base+0x104>
   12d88:	ldr	r0, [sp, #12]
   12d8c:	ldr	r1, [fp, #-8]
   12d90:	ldr	r1, [r1, #8]
   12d94:	ldr	r2, [sp, #8]
   12d98:	add	r1, r1, r2, lsl #2
   12d9c:	str	r0, [r1]
   12da0:	ldr	r0, [fp, #-8]
   12da4:	ldr	r1, [r0]
   12da8:	add	r1, r1, #1
   12dac:	str	r1, [r0]
   12db0:	ldr	r0, [sp, #8]
   12db4:	str	r0, [fp, #-4]
   12db8:	ldr	r0, [fp, #-4]
   12dbc:	mov	sp, fp
   12dc0:	pop	{fp, pc}

00012dc4 <vetor_remove@@Base>:
   12dc4:	sub	sp, sp, #16
   12dc8:	str	r0, [sp, #8]
   12dcc:	str	r1, [sp, #4]
   12dd0:	ldr	r0, [sp, #8]
   12dd4:	movw	r1, #0
   12dd8:	cmp	r0, r1
   12ddc:	beq	12e00 <vetor_remove@@Base+0x3c>
   12de0:	ldr	r0, [sp, #4]
   12de4:	cmp	r0, #0
   12de8:	blt	12e00 <vetor_remove@@Base+0x3c>
   12dec:	ldr	r0, [sp, #4]
   12df0:	ldr	r1, [sp, #8]
   12df4:	ldr	r1, [r1]
   12df8:	cmp	r0, r1
   12dfc:	blt	12e0c <vetor_remove@@Base+0x48>
   12e00:	mvn	r0, #0
   12e04:	str	r0, [sp, #12]
   12e08:	b	12e74 <vetor_remove@@Base+0xb0>
   12e0c:	ldr	r0, [sp, #4]
   12e10:	add	r0, r0, #1
   12e14:	str	r0, [sp]
   12e18:	ldr	r0, [sp]
   12e1c:	ldr	r1, [sp, #8]
   12e20:	ldr	r1, [r1]
   12e24:	cmp	r0, r1
   12e28:	bge	12e58 <vetor_remove@@Base+0x94>
   12e2c:	ldr	r0, [sp, #8]
   12e30:	ldr	r0, [r0, #8]
   12e34:	ldr	r1, [sp]
   12e38:	ldr	r2, [r0, r1, lsl #2]
   12e3c:	sub	r1, r1, #1
   12e40:	add	r0, r0, r1, lsl #2
   12e44:	str	r2, [r0]
   12e48:	ldr	r0, [sp]
   12e4c:	add	r0, r0, #1
   12e50:	str	r0, [sp]
   12e54:	b	12e18 <vetor_remove@@Base+0x54>
   12e58:	ldr	r0, [sp, #8]
   12e5c:	ldr	r1, [r0]
   12e60:	mvn	r2, #0
   12e64:	add	r1, r1, r2
   12e68:	str	r1, [r0]
   12e6c:	movw	r0, #0
   12e70:	str	r0, [sp, #12]
   12e74:	ldr	r0, [sp, #12]
   12e78:	add	sp, sp, #16
   12e7c:	bx	lr

00012e80 <vetor_pesquisa@@Base>:
   12e80:	sub	sp, sp, #16
   12e84:	str	r0, [sp, #8]
   12e88:	str	r1, [sp, #4]
   12e8c:	ldr	r0, [sp, #8]
   12e90:	movw	r1, #0
   12e94:	cmp	r0, r1
   12e98:	bne	12ea8 <vetor_pesquisa@@Base+0x28>
   12e9c:	mvn	r0, #0
   12ea0:	str	r0, [sp, #12]
   12ea4:	b	12f0c <vetor_pesquisa@@Base+0x8c>
   12ea8:	movw	r0, #0
   12eac:	str	r0, [sp]
   12eb0:	ldr	r0, [sp]
   12eb4:	ldr	r1, [sp, #8]
   12eb8:	ldr	r1, [r1]
   12ebc:	cmp	r0, r1
   12ec0:	bge	12f04 <vetor_pesquisa@@Base+0x84>
   12ec4:	ldr	r0, [sp, #8]
   12ec8:	ldr	r0, [r0, #8]
   12ecc:	ldr	r1, [sp]
   12ed0:	add	r0, r0, r1, lsl #2
   12ed4:	ldr	r0, [r0]
   12ed8:	ldr	r1, [sp, #4]
   12edc:	cmp	r0, r1
   12ee0:	bne	12ef0 <vetor_pesquisa@@Base+0x70>
   12ee4:	ldr	r0, [sp]
   12ee8:	str	r0, [sp, #12]
   12eec:	b	12f0c <vetor_pesquisa@@Base+0x8c>
   12ef0:	b	12ef4 <vetor_pesquisa@@Base+0x74>
   12ef4:	ldr	r0, [sp]
   12ef8:	add	r0, r0, #1
   12efc:	str	r0, [sp]
   12f00:	b	12eb0 <vetor_pesquisa@@Base+0x30>
   12f04:	mvn	r0, #0
   12f08:	str	r0, [sp, #12]
   12f0c:	ldr	r0, [sp, #12]
   12f10:	add	sp, sp, #16
   12f14:	bx	lr

00012f18 <vetor_ordena@@Base>:
   12f18:	sub	sp, sp, #24
   12f1c:	str	r0, [sp, #16]
   12f20:	ldr	r0, [sp, #16]
   12f24:	movw	r1, #0
   12f28:	cmp	r0, r1
   12f2c:	bne	12f3c <vetor_ordena@@Base+0x24>
   12f30:	mvn	r0, #0
   12f34:	str	r0, [sp, #20]
   12f38:	b	13020 <vetor_ordena@@Base+0x108>
   12f3c:	movw	r0, #1
   12f40:	str	r0, [sp, #12]
   12f44:	ldr	r0, [sp, #12]
   12f48:	ldr	r1, [sp, #16]
   12f4c:	ldr	r1, [r1]
   12f50:	cmp	r0, r1
   12f54:	bge	13018 <vetor_ordena@@Base+0x100>
   12f58:	ldr	r0, [sp, #16]
   12f5c:	ldr	r0, [r0, #8]
   12f60:	ldr	r1, [sp, #12]
   12f64:	add	r0, r0, r1, lsl #2
   12f68:	ldr	r0, [r0]
   12f6c:	str	r0, [sp, #4]
   12f70:	ldr	r0, [sp, #12]
   12f74:	str	r0, [sp, #8]
   12f78:	ldr	r0, [sp, #8]
   12f7c:	cmp	r0, #0
   12f80:	movw	r0, #0
   12f84:	str	r0, [sp]
   12f88:	ble	12fb8 <vetor_ordena@@Base+0xa0>
   12f8c:	ldr	r0, [sp, #4]
   12f90:	ldr	r1, [sp, #16]
   12f94:	ldr	r1, [r1, #8]
   12f98:	ldr	r2, [sp, #8]
   12f9c:	sub	r2, r2, #1
   12fa0:	add	r1, r1, r2, lsl #2
   12fa4:	ldr	r1, [r1]
   12fa8:	cmp	r0, r1
   12fac:	movw	r0, #0
   12fb0:	movlt	r0, #1
   12fb4:	str	r0, [sp]
   12fb8:	ldr	r0, [sp]
   12fbc:	tst	r0, #1
   12fc0:	beq	12ff0 <vetor_ordena@@Base+0xd8>
   12fc4:	ldr	r0, [sp, #16]
   12fc8:	ldr	r0, [r0, #8]
   12fcc:	ldr	r1, [sp, #8]
   12fd0:	add	r0, r0, r1, lsl #2
   12fd4:	ldr	r1, [r0, #-4]
   12fd8:	str	r1, [r0]
   12fdc:	ldr	r0, [sp, #8]
   12fe0:	mvn	r1, #0
   12fe4:	add	r0, r0, r1
   12fe8:	str	r0, [sp, #8]
   12fec:	b	12f78 <vetor_ordena@@Base+0x60>
   12ff0:	ldr	r0, [sp, #4]
   12ff4:	ldr	r1, [sp, #16]
   12ff8:	ldr	r1, [r1, #8]
   12ffc:	ldr	r2, [sp, #8]
   13000:	add	r1, r1, r2, lsl #2
   13004:	str	r0, [r1]
   13008:	ldr	r0, [sp, #12]
   1300c:	add	r0, r0, #1
   13010:	str	r0, [sp, #12]
   13014:	b	12f44 <vetor_ordena@@Base+0x2c>
   13018:	movw	r0, #0
   1301c:	str	r0, [sp, #20]
   13020:	ldr	r0, [sp, #20]
   13024:	add	sp, sp, #24
   13028:	bx	lr

0001302c <__libc_csu_init@@Base>:
   1302c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13030:	mov	r7, r0
   13034:	ldr	r6, [pc, #72]	; 13084 <__libc_csu_init@@Base+0x58>
   13038:	ldr	r5, [pc, #72]	; 13088 <__libc_csu_init@@Base+0x5c>
   1303c:	add	r6, pc, r6
   13040:	add	r5, pc, r5
   13044:	sub	r6, r6, r5
   13048:	mov	r8, r1
   1304c:	mov	r9, r2
   13050:	bl	10bb0 <calloc@plt-0x20>
   13054:	asrs	r6, r6, #2
   13058:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1305c:	mov	r4, #0
   13060:	add	r4, r4, #1
   13064:	ldr	r3, [r5], #4
   13068:	mov	r2, r9
   1306c:	mov	r1, r8
   13070:	mov	r0, r7
   13074:	blx	r3
   13078:	cmp	r6, r4
   1307c:	bne	13060 <__libc_csu_init@@Base+0x34>
   13080:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13084:	andeq	r0, r1, r8, asr #29
   13088:	andeq	r0, r1, r0, asr #29

0001308c <__libc_csu_fini@@Base>:
   1308c:	bx	lr

Disassembly of section .fini:

00013090 <.fini>:
   13090:	push	{r3, lr}
   13094:	pop	{r3, pc}
