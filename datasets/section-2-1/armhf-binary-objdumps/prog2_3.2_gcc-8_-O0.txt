
../repos/prog2/3.2:     file format elf32-littlearm


Disassembly of section .init:

0001066c <.init>:
   1066c:	push	{r3, lr}
   10670:	bl	10710 <_start@@Base+0x3c>
   10674:	pop	{r3, pc}

Disassembly of section .plt:

00010678 <printf@plt-0x14>:
   10678:	push	{lr}		; (str lr, [sp, #-4]!)
   1067c:	ldr	lr, [pc, #4]	; 10688 <printf@plt-0x4>
   10680:	add	lr, pc, lr
   10684:	ldr	pc, [lr, #8]!
   10688:	andeq	r1, r1, r8, ror r9

0001068c <printf@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #69632	; 0x11000
   10694:	ldr	pc, [ip, #2424]!	; 0x978

00010698 <puts@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #69632	; 0x11000
   106a0:	ldr	pc, [ip, #2416]!	; 0x970

000106a4 <__libc_start_main@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #69632	; 0x11000
   106ac:	ldr	pc, [ip, #2408]!	; 0x968

000106b0 <__gmon_start__@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2400]!	; 0x960

000106bc <strlen@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2392]!	; 0x958

000106c8 <abort@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2384]!	; 0x950

Disassembly of section .text:

000106d4 <_start@@Base>:
   106d4:	mov	fp, #0
   106d8:	mov	lr, #0
   106dc:	pop	{r1}		; (ldr r1, [sp], #4)
   106e0:	mov	r2, sp
   106e4:	push	{r2}		; (str r2, [sp, #-4]!)
   106e8:	push	{r0}		; (str r0, [sp, #-4]!)
   106ec:	ldr	ip, [pc, #16]	; 10704 <_start@@Base+0x30>
   106f0:	push	{ip}		; (str ip, [sp, #-4]!)
   106f4:	ldr	r0, [pc, #12]	; 10708 <_start@@Base+0x34>
   106f8:	ldr	r3, [pc, #12]	; 1070c <_start@@Base+0x38>
   106fc:	bl	106a4 <__libc_start_main@plt>
   10700:	bl	106c8 <abort@plt>
   10704:	muleq	r1, r4, r2
   10708:	andeq	r0, r1, r4, lsr sp
   1070c:	andeq	r1, r1, r4, lsr r2
   10710:	ldr	r3, [pc, #20]	; 1072c <_start@@Base+0x58>
   10714:	ldr	r2, [pc, #20]	; 10730 <_start@@Base+0x5c>
   10718:	add	r3, pc, r3
   1071c:	ldr	r2, [r3, r2]
   10720:	cmp	r2, #0
   10724:	bxeq	lr
   10728:	b	106b0 <__gmon_start__@plt>
   1072c:	andeq	r1, r1, r0, ror #17
   10730:	andeq	r0, r0, r8, lsr #32
   10734:	ldr	r0, [pc, #24]	; 10754 <_start@@Base+0x80>
   10738:	ldr	r3, [pc, #24]	; 10758 <_start@@Base+0x84>
   1073c:	cmp	r3, r0
   10740:	bxeq	lr
   10744:	ldr	r3, [pc, #16]	; 1075c <_start@@Base+0x88>
   10748:	cmp	r3, #0
   1074c:	bxeq	lr
   10750:	bx	r3
   10754:	andeq	r2, r2, r8, lsr r0
   10758:	andeq	r2, r2, r8, lsr r0
   1075c:	andeq	r0, r0, r0
   10760:	ldr	r0, [pc, #36]	; 1078c <_start@@Base+0xb8>
   10764:	ldr	r1, [pc, #36]	; 10790 <_start@@Base+0xbc>
   10768:	sub	r1, r1, r0
   1076c:	asr	r1, r1, #2
   10770:	add	r1, r1, r1, lsr #31
   10774:	asrs	r1, r1, #1
   10778:	bxeq	lr
   1077c:	ldr	r3, [pc, #16]	; 10794 <_start@@Base+0xc0>
   10780:	cmp	r3, #0
   10784:	bxeq	lr
   10788:	bx	r3
   1078c:	andeq	r2, r2, r8, lsr r0
   10790:	andeq	r2, r2, r8, lsr r0
   10794:	andeq	r0, r0, r0
   10798:	push	{r4, lr}
   1079c:	ldr	r4, [pc, #24]	; 107bc <_start@@Base+0xe8>
   107a0:	ldrb	r3, [r4]
   107a4:	cmp	r3, #0
   107a8:	popne	{r4, pc}
   107ac:	bl	10734 <_start@@Base+0x60>
   107b0:	mov	r3, #1
   107b4:	strb	r3, [r4]
   107b8:	pop	{r4, pc}
   107bc:	andeq	r2, r2, r8, lsr r0
   107c0:	b	10760 <_start@@Base+0x8c>

000107c4 <comp_int_asc@@Base>:
   107c4:	push	{fp}		; (str fp, [sp, #-4]!)
   107c8:	add	fp, sp, #0
   107cc:	sub	sp, sp, #20
   107d0:	str	r0, [fp, #-16]
   107d4:	str	r1, [fp, #-20]	; 0xffffffec
   107d8:	ldr	r3, [fp, #-16]
   107dc:	ldr	r3, [r3]
   107e0:	str	r3, [fp, #-8]
   107e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   107e8:	ldr	r3, [r3]
   107ec:	str	r3, [fp, #-12]
   107f0:	ldr	r2, [fp, #-12]
   107f4:	ldr	r3, [fp, #-8]
   107f8:	cmp	r2, r3
   107fc:	ble	10808 <comp_int_asc@@Base+0x44>
   10800:	mvn	r3, #0
   10804:	b	10824 <comp_int_asc@@Base+0x60>
   10808:	ldr	r2, [fp, #-8]
   1080c:	ldr	r3, [fp, #-12]
   10810:	cmp	r2, r3
   10814:	ble	10820 <comp_int_asc@@Base+0x5c>
   10818:	mov	r3, #1
   1081c:	b	10824 <comp_int_asc@@Base+0x60>
   10820:	mov	r3, #0
   10824:	mov	r0, r3
   10828:	add	sp, fp, #0
   1082c:	pop	{fp}		; (ldr fp, [sp], #4)
   10830:	bx	lr

00010834 <get_elem@@Base>:
   10834:	push	{fp}		; (str fp, [sp, #-4]!)
   10838:	add	fp, sp, #0
   1083c:	sub	sp, sp, #20
   10840:	str	r0, [fp, #-8]
   10844:	str	r1, [fp, #-12]
   10848:	str	r2, [fp, #-16]
   1084c:	ldr	r3, [fp, #-12]
   10850:	ldr	r2, [fp, #-16]
   10854:	mul	r3, r2, r3
   10858:	mov	r2, r3
   1085c:	ldr	r3, [fp, #-8]
   10860:	add	r3, r3, r2
   10864:	mov	r0, r3
   10868:	add	sp, fp, #0
   1086c:	pop	{fp}		; (ldr fp, [sp], #4)
   10870:	bx	lr

00010874 <swap@@Base>:
   10874:	push	{fp}		; (str fp, [sp, #-4]!)
   10878:	add	fp, sp, #0
   1087c:	sub	sp, sp, #28
   10880:	str	r0, [fp, #-16]
   10884:	str	r1, [fp, #-20]	; 0xffffffec
   10888:	str	r2, [fp, #-24]	; 0xffffffe8
   1088c:	mov	r3, #0
   10890:	str	r3, [fp, #-8]
   10894:	b	108ec <swap@@Base+0x78>
   10898:	ldr	r3, [fp, #-8]
   1089c:	ldr	r2, [fp, #-16]
   108a0:	add	r3, r2, r3
   108a4:	ldrb	r3, [r3]
   108a8:	strb	r3, [fp, #-9]
   108ac:	ldr	r3, [fp, #-8]
   108b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   108b4:	add	r2, r2, r3
   108b8:	ldr	r3, [fp, #-8]
   108bc:	ldr	r1, [fp, #-16]
   108c0:	add	r3, r1, r3
   108c4:	ldrb	r2, [r2]
   108c8:	strb	r2, [r3]
   108cc:	ldr	r3, [fp, #-8]
   108d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   108d4:	add	r3, r2, r3
   108d8:	ldrb	r2, [fp, #-9]
   108dc:	strb	r2, [r3]
   108e0:	ldr	r3, [fp, #-8]
   108e4:	add	r3, r3, #1
   108e8:	str	r3, [fp, #-8]
   108ec:	ldr	r2, [fp, #-8]
   108f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108f4:	cmp	r2, r3
   108f8:	blt	10898 <swap@@Base+0x24>
   108fc:	nop	{0}
   10900:	add	sp, fp, #0
   10904:	pop	{fp}		; (ldr fp, [sp], #4)
   10908:	bx	lr

0001090c <sort@@Base>:
   1090c:	str	fp, [sp, #-8]!
   10910:	str	lr, [sp, #4]
   10914:	add	fp, sp, #4
   10918:	sub	sp, sp, #40	; 0x28
   1091c:	str	r0, [fp, #-32]	; 0xffffffe0
   10920:	str	r1, [fp, #-36]	; 0xffffffdc
   10924:	str	r2, [fp, #-40]	; 0xffffffd8
   10928:	str	r3, [fp, #-44]	; 0xffffffd4
   1092c:	mov	r3, #0
   10930:	str	r3, [fp, #-12]
   10934:	b	109d4 <sort@@Base+0xc8>
   10938:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1093c:	ldr	r1, [fp, #-12]
   10940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10944:	bl	10834 <get_elem@@Base>
   10948:	str	r0, [fp, #-20]	; 0xffffffec
   1094c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10950:	str	r3, [fp, #-16]
   10954:	ldr	r3, [fp, #-12]
   10958:	add	r3, r3, #1
   1095c:	str	r3, [fp, #-8]
   10960:	b	109a8 <sort@@Base+0x9c>
   10964:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10968:	ldr	r1, [fp, #-8]
   1096c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   10970:	bl	10834 <get_elem@@Base>
   10974:	str	r0, [fp, #-24]	; 0xffffffe8
   10978:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1097c:	ldr	r1, [fp, #-16]
   10980:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10984:	blx	r3
   10988:	mov	r3, r0
   1098c:	cmp	r3, #0
   10990:	bge	1099c <sort@@Base+0x90>
   10994:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10998:	str	r3, [fp, #-16]
   1099c:	ldr	r3, [fp, #-8]
   109a0:	add	r3, r3, #1
   109a4:	str	r3, [fp, #-8]
   109a8:	ldr	r2, [fp, #-8]
   109ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   109b0:	cmp	r2, r3
   109b4:	blt	10964 <sort@@Base+0x58>
   109b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   109bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   109c0:	ldr	r0, [fp, #-16]
   109c4:	bl	10874 <swap@@Base>
   109c8:	ldr	r3, [fp, #-12]
   109cc:	add	r3, r3, #1
   109d0:	str	r3, [fp, #-12]
   109d4:	ldr	r2, [fp, #-12]
   109d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   109dc:	cmp	r2, r3
   109e0:	blt	10938 <sort@@Base+0x2c>
   109e4:	nop	{0}
   109e8:	sub	sp, fp, #4
   109ec:	ldr	fp, [sp]
   109f0:	add	sp, sp, #4
   109f4:	pop	{pc}		; (ldr pc, [sp], #4)

000109f8 <linear_search@@Base>:
   109f8:	str	fp, [sp, #-8]!
   109fc:	str	lr, [sp, #4]
   10a00:	add	fp, sp, #4
   10a04:	sub	sp, sp, #24
   10a08:	str	r0, [fp, #-16]
   10a0c:	str	r1, [fp, #-20]	; 0xffffffec
   10a10:	str	r2, [fp, #-24]	; 0xffffffe8
   10a14:	str	r3, [fp, #-28]	; 0xffffffe4
   10a18:	mov	r3, #0
   10a1c:	str	r3, [fp, #-8]
   10a20:	b	10a78 <linear_search@@Base+0x80>
   10a24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10a28:	ldr	r1, [fp, #-8]
   10a2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a30:	bl	10834 <get_elem@@Base>
   10a34:	mov	r2, r0
   10a38:	ldr	r3, [fp, #4]
   10a3c:	ldr	r1, [fp, #-16]
   10a40:	mov	r0, r2
   10a44:	blx	r3
   10a48:	mov	r3, r0
   10a4c:	cmp	r3, #0
   10a50:	bne	10a6c <linear_search@@Base+0x74>
   10a54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10a58:	ldr	r1, [fp, #-8]
   10a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10a60:	bl	10834 <get_elem@@Base>
   10a64:	mov	r3, r0
   10a68:	b	10a8c <linear_search@@Base+0x94>
   10a6c:	ldr	r3, [fp, #-8]
   10a70:	add	r3, r3, #1
   10a74:	str	r3, [fp, #-8]
   10a78:	ldr	r2, [fp, #-8]
   10a7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a80:	cmp	r2, r3
   10a84:	blt	10a24 <linear_search@@Base+0x2c>
   10a88:	mov	r3, #0
   10a8c:	mov	r0, r3
   10a90:	sub	sp, fp, #4
   10a94:	ldr	fp, [sp]
   10a98:	add	sp, sp, #4
   10a9c:	pop	{pc}		; (ldr pc, [sp], #4)

00010aa0 <binary_search@@Base>:
   10aa0:	str	fp, [sp, #-8]!
   10aa4:	str	lr, [sp, #4]
   10aa8:	add	fp, sp, #4
   10aac:	sub	sp, sp, #32
   10ab0:	str	r0, [fp, #-24]	; 0xffffffe8
   10ab4:	str	r1, [fp, #-28]	; 0xffffffe4
   10ab8:	str	r2, [fp, #-32]	; 0xffffffe0
   10abc:	str	r3, [fp, #-36]	; 0xffffffdc
   10ac0:	mov	r3, #0
   10ac4:	str	r3, [fp, #-8]
   10ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10acc:	sub	r3, r3, #1
   10ad0:	str	r3, [fp, #-12]
   10ad4:	b	10b88 <binary_search@@Base+0xe8>
   10ad8:	ldr	r2, [fp, #-8]
   10adc:	ldr	r3, [fp, #-12]
   10ae0:	add	r3, r2, r3
   10ae4:	lsr	r2, r3, #31
   10ae8:	add	r3, r2, r3
   10aec:	asr	r3, r3, #1
   10af0:	str	r3, [fp, #-16]
   10af4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10af8:	ldr	r1, [fp, #-16]
   10afc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b00:	bl	10834 <get_elem@@Base>
   10b04:	mov	r2, r0
   10b08:	ldr	r3, [fp, #4]
   10b0c:	mov	r1, r2
   10b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b14:	blx	r3
   10b18:	mov	r3, r0
   10b1c:	cmp	r3, #0
   10b20:	beq	10b3c <binary_search@@Base+0x9c>
   10b24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10b28:	ldr	r1, [fp, #-16]
   10b2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b30:	bl	10834 <get_elem@@Base>
   10b34:	mov	r3, r0
   10b38:	b	10b9c <binary_search@@Base+0xfc>
   10b3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10b40:	ldr	r1, [fp, #-16]
   10b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10b48:	bl	10834 <get_elem@@Base>
   10b4c:	mov	r2, r0
   10b50:	ldr	r3, [fp, #4]
   10b54:	mov	r1, r2
   10b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b5c:	blx	r3
   10b60:	mov	r3, r0
   10b64:	cmn	r3, #1
   10b68:	bne	10b7c <binary_search@@Base+0xdc>
   10b6c:	ldr	r3, [fp, #-16]
   10b70:	sub	r3, r3, #1
   10b74:	str	r3, [fp, #-12]
   10b78:	b	10b88 <binary_search@@Base+0xe8>
   10b7c:	ldr	r3, [fp, #-16]
   10b80:	add	r3, r3, #1
   10b84:	str	r3, [fp, #-8]
   10b88:	ldr	r2, [fp, #-8]
   10b8c:	ldr	r3, [fp, #-12]
   10b90:	cmp	r2, r3
   10b94:	ble	10ad8 <binary_search@@Base+0x38>
   10b98:	mov	r3, #0
   10b9c:	mov	r0, r3
   10ba0:	sub	sp, fp, #4
   10ba4:	ldr	fp, [sp]
   10ba8:	add	sp, sp, #4
   10bac:	pop	{pc}		; (ldr pc, [sp], #4)

00010bb0 <insertion_sort@@Base>:
   10bb0:	str	r4, [sp, #-12]!
   10bb4:	str	fp, [sp, #4]
   10bb8:	str	lr, [sp, #8]
   10bbc:	add	fp, sp, #8
   10bc0:	sub	sp, sp, #28
   10bc4:	str	r0, [fp, #-24]	; 0xffffffe8
   10bc8:	str	r1, [fp, #-28]	; 0xffffffe4
   10bcc:	str	r2, [fp, #-32]	; 0xffffffe0
   10bd0:	str	r3, [fp, #-36]	; 0xffffffdc
   10bd4:	mov	r3, #1
   10bd8:	str	r3, [fp, #-16]
   10bdc:	b	10c9c <insertion_sort@@Base+0xec>
   10be0:	ldr	r3, [fp, #-16]
   10be4:	str	r3, [fp, #-20]	; 0xffffffec
   10be8:	b	10c38 <insertion_sort@@Base+0x88>
   10bec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10bf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   10bf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10bf8:	bl	10834 <get_elem@@Base>
   10bfc:	mov	r4, r0
   10c00:	ldr	r3, [fp, #-20]	; 0xffffffec
   10c04:	sub	r3, r3, #1
   10c08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10c0c:	mov	r1, r3
   10c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c14:	bl	10834 <get_elem@@Base>
   10c18:	mov	r3, r0
   10c1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10c20:	mov	r1, r3
   10c24:	mov	r0, r4
   10c28:	bl	10874 <swap@@Base>
   10c2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10c30:	sub	r3, r3, #1
   10c34:	str	r3, [fp, #-20]	; 0xffffffec
   10c38:	ldr	r3, [fp, #-20]	; 0xffffffec
   10c3c:	cmp	r3, #0
   10c40:	ble	10c90 <insertion_sort@@Base+0xe0>
   10c44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10c48:	ldr	r1, [fp, #-20]	; 0xffffffec
   10c4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c50:	bl	10834 <get_elem@@Base>
   10c54:	mov	r4, r0
   10c58:	ldr	r3, [fp, #-20]	; 0xffffffec
   10c5c:	sub	r3, r3, #1
   10c60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10c64:	mov	r1, r3
   10c68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c6c:	bl	10834 <get_elem@@Base>
   10c70:	mov	r2, r0
   10c74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c78:	mov	r1, r2
   10c7c:	mov	r0, r4
   10c80:	blx	r3
   10c84:	mov	r3, r0
   10c88:	cmn	r3, #1
   10c8c:	beq	10bec <insertion_sort@@Base+0x3c>
   10c90:	ldr	r3, [fp, #-16]
   10c94:	add	r3, r3, #1
   10c98:	str	r3, [fp, #-16]
   10c9c:	ldr	r2, [fp, #-16]
   10ca0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10ca4:	cmp	r2, r3
   10ca8:	blt	10be0 <insertion_sort@@Base+0x30>
   10cac:	nop	{0}
   10cb0:	sub	sp, fp, #8
   10cb4:	ldr	r4, [sp]
   10cb8:	ldr	fp, [sp, #4]
   10cbc:	add	sp, sp, #8
   10cc0:	pop	{pc}		; (ldr pc, [sp], #4)

00010cc4 <comp_char_desc@@Base>:
   10cc4:	push	{fp}		; (str fp, [sp, #-4]!)
   10cc8:	add	fp, sp, #0
   10ccc:	sub	sp, sp, #20
   10cd0:	str	r0, [fp, #-16]
   10cd4:	str	r1, [fp, #-20]	; 0xffffffec
   10cd8:	ldr	r3, [fp, #-16]
   10cdc:	ldrb	r3, [r3]
   10ce0:	strb	r3, [fp, #-5]
   10ce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ce8:	ldrb	r3, [r3]
   10cec:	strb	r3, [fp, #-6]
   10cf0:	ldrb	r2, [fp, #-5]
   10cf4:	ldrb	r3, [fp, #-6]
   10cf8:	cmp	r2, r3
   10cfc:	bcs	10d08 <comp_char_desc@@Base+0x44>
   10d00:	mov	r3, #1
   10d04:	b	10d24 <comp_char_desc@@Base+0x60>
   10d08:	ldrb	r2, [fp, #-5]
   10d0c:	ldrb	r3, [fp, #-6]
   10d10:	cmp	r2, r3
   10d14:	bls	10d20 <comp_char_desc@@Base+0x5c>
   10d18:	mvn	r3, #0
   10d1c:	b	10d24 <comp_char_desc@@Base+0x60>
   10d20:	mov	r3, #0
   10d24:	mov	r0, r3
   10d28:	add	sp, fp, #0
   10d2c:	pop	{fp}		; (ldr fp, [sp], #4)
   10d30:	bx	lr

00010d34 <main@@Base>:
   10d34:	str	r4, [sp, #-12]!
   10d38:	str	fp, [sp, #4]
   10d3c:	str	lr, [sp, #8]
   10d40:	add	fp, sp, #8
   10d44:	sub	sp, sp, #84	; 0x54
   10d48:	ldr	r4, [pc, #1140]	; 111c4 <main@@Base+0x490>
   10d4c:	add	r4, pc, r4
   10d50:	ldr	r2, [pc, #1136]	; 111c8 <main@@Base+0x494>
   10d54:	add	r2, pc, r2
   10d58:	sub	r3, fp, #44	; 0x2c
   10d5c:	ldrd	r0, [r2]
   10d60:	strd	r0, [r3]
   10d64:	ldrd	r0, [r2, #8]
   10d68:	strd	r0, [r3, #8]
   10d6c:	ldrd	r0, [r2, #16]
   10d70:	strd	r0, [r3, #16]
   10d74:	sub	r3, fp, #68	; 0x44
   10d78:	sub	r2, fp, #44	; 0x2c
   10d7c:	ldrd	r0, [r2]
   10d80:	strd	r0, [r3]
   10d84:	ldrd	r0, [r2, #8]
   10d88:	strd	r0, [r3, #8]
   10d8c:	ldrd	r0, [r2, #16]
   10d90:	strd	r0, [r3, #16]
   10d94:	ldr	r3, [pc, #1072]	; 111cc <main@@Base+0x498>
   10d98:	add	r3, pc, r3
   10d9c:	mov	r0, r3
   10da0:	bl	10698 <puts@plt>
   10da4:	ldr	r3, [pc, #1060]	; 111d0 <main@@Base+0x49c>
   10da8:	add	r3, pc, r3
   10dac:	mov	r0, r3
   10db0:	bl	1068c <printf@plt>
   10db4:	mov	r3, #0
   10db8:	str	r3, [fp, #-16]
   10dbc:	b	10df4 <main@@Base+0xc0>
   10dc0:	ldr	r3, [fp, #-16]
   10dc4:	lsl	r3, r3, #2
   10dc8:	sub	r2, fp, #12
   10dcc:	add	r3, r2, r3
   10dd0:	ldr	r3, [r3, #-56]	; 0xffffffc8
   10dd4:	mov	r1, r3
   10dd8:	ldr	r3, [pc, #1012]	; 111d4 <main@@Base+0x4a0>
   10ddc:	add	r3, pc, r3
   10de0:	mov	r0, r3
   10de4:	bl	1068c <printf@plt>
   10de8:	ldr	r3, [fp, #-16]
   10dec:	add	r3, r3, #1
   10df0:	str	r3, [fp, #-16]
   10df4:	ldr	r3, [fp, #-16]
   10df8:	cmp	r3, #5
   10dfc:	ble	10dc0 <main@@Base+0x8c>
   10e00:	ldr	r3, [pc, #976]	; 111d8 <main@@Base+0x4a4>
   10e04:	add	r3, pc, r3
   10e08:	mov	r0, r3
   10e0c:	bl	10698 <puts@plt>
   10e10:	sub	r0, fp, #68	; 0x44
   10e14:	ldr	r3, [pc, #960]	; 111dc <main@@Base+0x4a8>
   10e18:	ldr	r3, [r4, r3]
   10e1c:	mov	r2, #4
   10e20:	mov	r1, #6
   10e24:	bl	1090c <sort@@Base>
   10e28:	ldr	r3, [pc, #944]	; 111e0 <main@@Base+0x4ac>
   10e2c:	add	r3, pc, r3
   10e30:	mov	r0, r3
   10e34:	bl	1068c <printf@plt>
   10e38:	mov	r3, #0
   10e3c:	str	r3, [fp, #-16]
   10e40:	b	10e78 <main@@Base+0x144>
   10e44:	ldr	r3, [fp, #-16]
   10e48:	lsl	r3, r3, #2
   10e4c:	sub	r2, fp, #12
   10e50:	add	r3, r2, r3
   10e54:	ldr	r3, [r3, #-56]	; 0xffffffc8
   10e58:	mov	r1, r3
   10e5c:	ldr	r3, [pc, #896]	; 111e4 <main@@Base+0x4b0>
   10e60:	add	r3, pc, r3
   10e64:	mov	r0, r3
   10e68:	bl	1068c <printf@plt>
   10e6c:	ldr	r3, [fp, #-16]
   10e70:	add	r3, r3, #1
   10e74:	str	r3, [fp, #-16]
   10e78:	ldr	r3, [fp, #-16]
   10e7c:	cmp	r3, #5
   10e80:	ble	10e44 <main@@Base+0x110>
   10e84:	ldr	r3, [pc, #860]	; 111e8 <main@@Base+0x4b4>
   10e88:	add	r3, pc, r3
   10e8c:	mov	r0, r3
   10e90:	bl	10698 <puts@plt>
   10e94:	sub	r3, fp, #68	; 0x44
   10e98:	sub	r2, fp, #44	; 0x2c
   10e9c:	ldrd	r0, [r2]
   10ea0:	strd	r0, [r3]
   10ea4:	ldrd	r0, [r2, #8]
   10ea8:	strd	r0, [r3, #8]
   10eac:	ldrd	r0, [r2, #16]
   10eb0:	strd	r0, [r3, #16]
   10eb4:	ldr	r3, [pc, #816]	; 111ec <main@@Base+0x4b8>
   10eb8:	add	r3, pc, r3
   10ebc:	mov	r0, r3
   10ec0:	bl	10698 <puts@plt>
   10ec4:	mov	r3, #4
   10ec8:	str	r3, [fp, #-72]	; 0xffffffb8
   10ecc:	sub	r1, fp, #68	; 0x44
   10ed0:	sub	r0, fp, #72	; 0x48
   10ed4:	ldr	r3, [pc, #768]	; 111dc <main@@Base+0x4a8>
   10ed8:	ldr	r3, [r4, r3]
   10edc:	str	r3, [sp]
   10ee0:	mov	r3, #4
   10ee4:	mov	r2, #6
   10ee8:	bl	109f8 <linear_search@@Base>
   10eec:	str	r0, [fp, #-20]	; 0xffffffec
   10ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ef4:	cmp	r3, #0
   10ef8:	beq	10f28 <main@@Base+0x1f4>
   10efc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   10f00:	sub	r3, fp, #68	; 0x44
   10f04:	ldr	r2, [fp, #-20]	; 0xffffffec
   10f08:	sub	r3, r2, r3
   10f0c:	asr	r3, r3, #2
   10f10:	mov	r2, r3
   10f14:	ldr	r3, [pc, #724]	; 111f0 <main@@Base+0x4bc>
   10f18:	add	r3, pc, r3
   10f1c:	mov	r0, r3
   10f20:	bl	1068c <printf@plt>
   10f24:	b	10f40 <main@@Base+0x20c>
   10f28:	ldr	r3, [fp, #-72]	; 0xffffffb8
   10f2c:	mov	r1, r3
   10f30:	ldr	r3, [pc, #700]	; 111f4 <main@@Base+0x4c0>
   10f34:	add	r3, pc, r3
   10f38:	mov	r0, r3
   10f3c:	bl	1068c <printf@plt>
   10f40:	sub	r3, fp, #68	; 0x44
   10f44:	sub	r2, fp, #44	; 0x2c
   10f48:	ldrd	r0, [r2]
   10f4c:	strd	r0, [r3]
   10f50:	ldrd	r0, [r2, #8]
   10f54:	strd	r0, [r3, #8]
   10f58:	ldrd	r0, [r2, #16]
   10f5c:	strd	r0, [r3, #16]
   10f60:	sub	r0, fp, #68	; 0x44
   10f64:	ldr	r3, [pc, #624]	; 111dc <main@@Base+0x4a8>
   10f68:	ldr	r3, [r4, r3]
   10f6c:	mov	r2, #4
   10f70:	mov	r1, #6
   10f74:	bl	1090c <sort@@Base>
   10f78:	ldr	r3, [pc, #632]	; 111f8 <main@@Base+0x4c4>
   10f7c:	add	r3, pc, r3
   10f80:	mov	r0, r3
   10f84:	bl	10698 <puts@plt>
   10f88:	sub	r1, fp, #68	; 0x44
   10f8c:	sub	r0, fp, #72	; 0x48
   10f90:	ldr	r3, [pc, #580]	; 111dc <main@@Base+0x4a8>
   10f94:	ldr	r3, [r4, r3]
   10f98:	str	r3, [sp]
   10f9c:	mov	r3, #4
   10fa0:	mov	r2, #6
   10fa4:	bl	10aa0 <binary_search@@Base>
   10fa8:	str	r0, [fp, #-20]	; 0xffffffec
   10fac:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fb0:	cmp	r3, #0
   10fb4:	beq	10fe4 <main@@Base+0x2b0>
   10fb8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   10fbc:	sub	r3, fp, #68	; 0x44
   10fc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   10fc4:	sub	r3, r2, r3
   10fc8:	asr	r3, r3, #2
   10fcc:	mov	r2, r3
   10fd0:	ldr	r3, [pc, #548]	; 111fc <main@@Base+0x4c8>
   10fd4:	add	r3, pc, r3
   10fd8:	mov	r0, r3
   10fdc:	bl	1068c <printf@plt>
   10fe0:	b	10ffc <main@@Base+0x2c8>
   10fe4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   10fe8:	mov	r1, r3
   10fec:	ldr	r3, [pc, #524]	; 11200 <main@@Base+0x4cc>
   10ff0:	add	r3, pc, r3
   10ff4:	mov	r0, r3
   10ff8:	bl	1068c <printf@plt>
   10ffc:	sub	r3, fp, #68	; 0x44
   11000:	sub	r2, fp, #44	; 0x2c
   11004:	ldrd	r0, [r2]
   11008:	strd	r0, [r3]
   1100c:	ldrd	r0, [r2, #8]
   11010:	strd	r0, [r3, #8]
   11014:	ldrd	r0, [r2, #16]
   11018:	strd	r0, [r3, #16]
   1101c:	ldr	r3, [pc, #480]	; 11204 <main@@Base+0x4d0>
   11020:	add	r3, pc, r3
   11024:	mov	r0, r3
   11028:	bl	10698 <puts@plt>
   1102c:	ldr	r3, [pc, #468]	; 11208 <main@@Base+0x4d4>
   11030:	add	r3, pc, r3
   11034:	mov	r0, r3
   11038:	bl	1068c <printf@plt>
   1103c:	mov	r3, #0
   11040:	str	r3, [fp, #-16]
   11044:	b	1107c <main@@Base+0x348>
   11048:	ldr	r3, [fp, #-16]
   1104c:	lsl	r3, r3, #2
   11050:	sub	r2, fp, #12
   11054:	add	r3, r2, r3
   11058:	ldr	r3, [r3, #-56]	; 0xffffffc8
   1105c:	mov	r1, r3
   11060:	ldr	r3, [pc, #420]	; 1120c <main@@Base+0x4d8>
   11064:	add	r3, pc, r3
   11068:	mov	r0, r3
   1106c:	bl	1068c <printf@plt>
   11070:	ldr	r3, [fp, #-16]
   11074:	add	r3, r3, #1
   11078:	str	r3, [fp, #-16]
   1107c:	ldr	r3, [fp, #-16]
   11080:	cmp	r3, #5
   11084:	ble	11048 <main@@Base+0x314>
   11088:	ldr	r3, [pc, #384]	; 11210 <main@@Base+0x4dc>
   1108c:	add	r3, pc, r3
   11090:	mov	r0, r3
   11094:	bl	10698 <puts@plt>
   11098:	sub	r0, fp, #68	; 0x44
   1109c:	ldr	r3, [pc, #312]	; 111dc <main@@Base+0x4a8>
   110a0:	ldr	r3, [r4, r3]
   110a4:	mov	r2, #4
   110a8:	mov	r1, #6
   110ac:	bl	10bb0 <insertion_sort@@Base>
   110b0:	ldr	r3, [pc, #348]	; 11214 <main@@Base+0x4e0>
   110b4:	add	r3, pc, r3
   110b8:	mov	r0, r3
   110bc:	bl	1068c <printf@plt>
   110c0:	mov	r3, #0
   110c4:	str	r3, [fp, #-16]
   110c8:	b	11100 <main@@Base+0x3cc>
   110cc:	ldr	r3, [fp, #-16]
   110d0:	lsl	r3, r3, #2
   110d4:	sub	r2, fp, #12
   110d8:	add	r3, r2, r3
   110dc:	ldr	r3, [r3, #-56]	; 0xffffffc8
   110e0:	mov	r1, r3
   110e4:	ldr	r3, [pc, #300]	; 11218 <main@@Base+0x4e4>
   110e8:	add	r3, pc, r3
   110ec:	mov	r0, r3
   110f0:	bl	1068c <printf@plt>
   110f4:	ldr	r3, [fp, #-16]
   110f8:	add	r3, r3, #1
   110fc:	str	r3, [fp, #-16]
   11100:	ldr	r3, [fp, #-16]
   11104:	cmp	r3, #5
   11108:	ble	110cc <main@@Base+0x398>
   1110c:	ldr	r3, [pc, #264]	; 1121c <main@@Base+0x4e8>
   11110:	add	r3, pc, r3
   11114:	mov	r0, r3
   11118:	bl	10698 <puts@plt>
   1111c:	ldr	r3, [pc, #252]	; 11220 <main@@Base+0x4ec>
   11120:	add	r3, pc, r3
   11124:	mov	r0, r3
   11128:	bl	10698 <puts@plt>
   1112c:	ldr	r2, [pc, #240]	; 11224 <main@@Base+0x4f0>
   11130:	add	r2, pc, r2
   11134:	sub	r3, fp, #80	; 0x50
   11138:	ldr	r1, [r2]
   1113c:	str	r1, [r3]
   11140:	ldrb	r2, [r2, #4]
   11144:	strb	r2, [r3, #4]
   11148:	ldr	r3, [pc, #216]	; 11228 <main@@Base+0x4f4>
   1114c:	add	r3, pc, r3
   11150:	mov	r0, r3
   11154:	bl	1068c <printf@plt>
   11158:	sub	r3, fp, #80	; 0x50
   1115c:	mov	r0, r3
   11160:	bl	10698 <puts@plt>
   11164:	sub	r3, fp, #80	; 0x50
   11168:	mov	r0, r3
   1116c:	bl	106bc <strlen@plt>
   11170:	mov	r3, r0
   11174:	mov	r1, r3
   11178:	sub	r0, fp, #80	; 0x50
   1117c:	ldr	r3, [pc, #168]	; 1122c <main@@Base+0x4f8>
   11180:	ldr	r3, [r4, r3]
   11184:	mov	r2, #1
   11188:	bl	1090c <sort@@Base>
   1118c:	ldr	r3, [pc, #156]	; 11230 <main@@Base+0x4fc>
   11190:	add	r3, pc, r3
   11194:	mov	r0, r3
   11198:	bl	1068c <printf@plt>
   1119c:	sub	r3, fp, #80	; 0x50
   111a0:	mov	r0, r3
   111a4:	bl	10698 <puts@plt>
   111a8:	mov	r3, #0
   111ac:	mov	r0, r3
   111b0:	sub	sp, fp, #8
   111b4:	ldr	r4, [sp]
   111b8:	ldr	fp, [sp, #4]
   111bc:	add	sp, sp, #8
   111c0:	pop	{pc}		; (ldr pc, [sp], #4)
   111c4:	andeq	r1, r1, ip, lsr #5
   111c8:	strdeq	r0, [r0], -r4
   111cc:	andeq	r0, r0, r4, lsl #10
   111d0:	andeq	r0, r0, r4, lsl #10
   111d4:	ldrdeq	r0, [r0], -r8
   111d8:			; <UNDEFINED> instruction: 0x000004b4
   111dc:	andeq	r0, r0, r4, lsr #32
   111e0:	muleq	r0, r0, r4
   111e4:	andeq	r0, r0, r4, asr r4
   111e8:	andeq	r0, r0, r0, lsr r4
   111ec:	andeq	r0, r0, ip, lsl #8
   111f0:			; <UNDEFINED> instruction: 0x000003b8
   111f4:	andeq	r0, r0, ip, asr #7
   111f8:	andeq	r0, r0, r8, lsr #7
   111fc:	strdeq	r0, [r0], -ip
   11200:	andeq	r0, r0, r0, lsl r3
   11204:	andeq	r0, r0, r0, lsl r3
   11208:	andeq	r0, r0, ip, ror r2
   1120c:	andeq	r0, r0, r0, asr r2
   11210:	andeq	r0, r0, ip, lsr #4
   11214:	andeq	r0, r0, r8, lsl #4
   11218:	andeq	r0, r0, ip, asr #3
   1121c:	andeq	r0, r0, r8, lsr #3
   11220:	andeq	r0, r0, ip, lsl r2
   11224:	andeq	r0, r0, r0, lsr r2
   11228:	andeq	r0, r0, r0, ror #2
   1122c:	andeq	r0, r0, ip, lsr #32
   11230:	andeq	r0, r0, ip, lsr #2

00011234 <__libc_csu_init@@Base>:
   11234:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11238:	mov	r7, r0
   1123c:	ldr	r6, [pc, #72]	; 1128c <__libc_csu_init@@Base+0x58>
   11240:	ldr	r5, [pc, #72]	; 11290 <__libc_csu_init@@Base+0x5c>
   11244:	add	r6, pc, r6
   11248:	add	r5, pc, r5
   1124c:	sub	r6, r6, r5
   11250:	mov	r8, r1
   11254:	mov	r9, r2
   11258:	bl	1066c <printf@plt-0x20>
   1125c:	asrs	r6, r6, #2
   11260:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11264:	mov	r4, #0
   11268:	add	r4, r4, #1
   1126c:	ldr	r3, [r5], #4
   11270:	mov	r2, r9
   11274:	mov	r1, r8
   11278:	mov	r0, r7
   1127c:	blx	r3
   11280:	cmp	r6, r4
   11284:	bne	11268 <__libc_csu_init@@Base+0x34>
   11288:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1128c:	andeq	r0, r1, r8, asr #25
   11290:	andeq	r0, r1, r0, asr #25

00011294 <__libc_csu_fini@@Base>:
   11294:	bx	lr

Disassembly of section .fini:

00011298 <.fini>:
   11298:	push	{r3, lr}
   1129c:	pop	{r3, pc}
