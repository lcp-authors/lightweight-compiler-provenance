
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010754 <.init>:
   10754:	push	{r3, lr}
   10758:	bl	108dc <abort@plt+0x48>
   1075c:	pop	{r3, pc}

Disassembly of section .plt:

00010760 <calloc@plt-0x14>:
   10760:	push	{lr}		; (str lr, [sp, #-4]!)
   10764:	ldr	lr, [pc, #4]	; 10770 <calloc@plt-0x4>
   10768:	add	lr, pc, lr
   1076c:	ldr	pc, [lr, #8]!
   10770:	muleq	r1, r0, r8

00010774 <calloc@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #77824	; 0x13000
   1077c:	ldr	pc, [ip, #2192]!	; 0x890

00010780 <strcmp@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #77824	; 0x13000
   10788:	ldr	pc, [ip, #2184]!	; 0x888

0001078c <printf@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #77824	; 0x13000
   10794:	ldr	pc, [ip, #2176]!	; 0x880

00010798 <fopen@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #77824	; 0x13000
   107a0:	ldr	pc, [ip, #2168]!	; 0x878

000107a4 <free@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #77824	; 0x13000
   107ac:	ldr	pc, [ip, #2160]!	; 0x870

000107b0 <fgets@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #77824	; 0x13000
   107b8:	ldr	pc, [ip, #2152]!	; 0x868

000107bc <strdup@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #77824	; 0x13000
   107c4:	ldr	pc, [ip, #2144]!	; 0x860

000107c8 <unlink@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #77824	; 0x13000
   107d0:	ldr	pc, [ip, #2136]!	; 0x858

000107d4 <__xstat@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #77824	; 0x13000
   107dc:	ldr	pc, [ip, #2128]!	; 0x850

000107e0 <fwrite@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #77824	; 0x13000
   107e8:	ldr	pc, [ip, #2120]!	; 0x848

000107ec <__libc_start_main@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #77824	; 0x13000
   107f4:	ldr	pc, [ip, #2112]!	; 0x840

000107f8 <__sysv_signal@plt>:
   107f8:	add	ip, pc, #0, 12
   107fc:	add	ip, ip, #77824	; 0x13000
   10800:	ldr	pc, [ip, #2104]!	; 0x838

00010804 <__gmon_start__@plt>:
   10804:	add	ip, pc, #0, 12
   10808:	add	ip, ip, #77824	; 0x13000
   1080c:	ldr	pc, [ip, #2096]!	; 0x830

00010810 <getpid@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #77824	; 0x13000
   10818:	ldr	pc, [ip, #2088]!	; 0x828

0001081c <exit@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #77824	; 0x13000
   10824:	ldr	pc, [ip, #2080]!	; 0x820

00010828 <strlen@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #77824	; 0x13000
   10830:	ldr	pc, [ip, #2072]!	; 0x818

00010834 <fprintf@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #77824	; 0x13000
   1083c:	ldr	pc, [ip, #2064]!	; 0x810

00010840 <sqrt@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #77824	; 0x13000
   10848:	ldr	pc, [ip, #2056]!	; 0x808

0001084c <__isoc99_sscanf@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #77824	; 0x13000
   10854:	ldr	pc, [ip, #2048]!	; 0x800

00010858 <fclose@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #77824	; 0x13000
   10860:	ldr	pc, [ip, #2040]!	; 0x7f8

00010864 <fputc@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #77824	; 0x13000
   1086c:	ldr	pc, [ip, #2032]!	; 0x7f0

00010870 <sprintf@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #77824	; 0x13000
   10878:	ldr	pc, [ip, #2024]!	; 0x7e8

0001087c <atoi@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #77824	; 0x13000
   10884:	ldr	pc, [ip, #2016]!	; 0x7e0

00010888 <strncmp@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #77824	; 0x13000
   10890:	ldr	pc, [ip, #2008]!	; 0x7d8

00010894 <abort@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #77824	; 0x13000
   1089c:	ldr	pc, [ip, #2000]!	; 0x7d0

Disassembly of section .text:

000108a0 <error@@Base-0x13f8>:
   108a0:	mov	fp, #0
   108a4:	mov	lr, #0
   108a8:	pop	{r1}		; (ldr r1, [sp], #4)
   108ac:	mov	r2, sp
   108b0:	push	{r2}		; (str r2, [sp, #-4]!)
   108b4:	push	{r0}		; (str r0, [sp, #-4]!)
   108b8:	ldr	ip, [pc, #16]	; 108d0 <abort@plt+0x3c>
   108bc:	push	{ip}		; (str ip, [sp, #-4]!)
   108c0:	ldr	r0, [pc, #12]	; 108d4 <abort@plt+0x40>
   108c4:	ldr	r3, [pc, #12]	; 108d8 <abort@plt+0x44>
   108c8:	bl	107ec <__libc_start_main@plt>
   108cc:	bl	10894 <abort@plt>
   108d0:	andeq	r3, r1, ip, lsr #12
   108d4:			; <UNDEFINED> instruction: 0x00010bbc
   108d8:	andeq	r3, r1, ip, asr #11
   108dc:	ldr	r3, [pc, #20]	; 108f8 <abort@plt+0x64>
   108e0:	ldr	r2, [pc, #20]	; 108fc <abort@plt+0x68>
   108e4:	add	r3, pc, r3
   108e8:	ldr	r2, [r3, r2]
   108ec:	cmp	r2, #0
   108f0:	bxeq	lr
   108f4:	b	10804 <__gmon_start__@plt>
   108f8:	andeq	r3, r1, r4, lsl r7
   108fc:	andeq	r0, r0, ip, ror r0
   10900:	ldr	r3, [pc, #28]	; 10924 <abort@plt+0x90>
   10904:	ldr	r0, [pc, #28]	; 10928 <abort@plt+0x94>
   10908:	sub	r3, r3, r0
   1090c:	cmp	r3, #6
   10910:	bxls	lr
   10914:	ldr	r3, [pc, #16]	; 1092c <abort@plt+0x98>
   10918:	cmp	r3, #0
   1091c:	bxeq	lr
   10920:	bx	r3
   10924:	andeq	r4, r2, pc, lsr #1
   10928:	andeq	r4, r2, ip, lsr #1
   1092c:	andeq	r0, r0, r0
   10930:	ldr	r1, [pc, #36]	; 1095c <abort@plt+0xc8>
   10934:	ldr	r0, [pc, #36]	; 10960 <abort@plt+0xcc>
   10938:	sub	r1, r1, r0
   1093c:	asr	r1, r1, #2
   10940:	add	r1, r1, r1, lsr #31
   10944:	asrs	r1, r1, #1
   10948:	bxeq	lr
   1094c:	ldr	r3, [pc, #16]	; 10964 <abort@plt+0xd0>
   10950:	cmp	r3, #0
   10954:	bxeq	lr
   10958:	bx	r3
   1095c:	andeq	r4, r2, ip, lsr #1
   10960:	andeq	r4, r2, ip, lsr #1
   10964:	andeq	r0, r0, r0
   10968:	push	{r4, lr}
   1096c:	ldr	r4, [pc, #24]	; 1098c <abort@plt+0xf8>
   10970:	ldrb	r3, [r4]
   10974:	cmp	r3, #0
   10978:	popne	{r4, pc}
   1097c:	bl	10900 <abort@plt+0x6c>
   10980:	mov	r3, #1
   10984:	strb	r3, [r4]
   10988:	pop	{r4, pc}
   1098c:	strheq	r4, [r2], -r0
   10990:	ldr	r0, [pc, #40]	; 109c0 <abort@plt+0x12c>
   10994:	ldr	r3, [r0]
   10998:	cmp	r3, #0
   1099c:	bne	109a4 <abort@plt+0x110>
   109a0:	b	10930 <abort@plt+0x9c>
   109a4:	ldr	r3, [pc, #24]	; 109c4 <abort@plt+0x130>
   109a8:	cmp	r3, #0
   109ac:	beq	109a0 <abort@plt+0x10c>
   109b0:	push	{r4, lr}
   109b4:	blx	r3
   109b8:	pop	{r4, lr}
   109bc:	b	10930 <abort@plt+0x9c>
   109c0:	andeq	r3, r2, r4, lsl #30
   109c4:	andeq	r0, r0, r0
   109c8:	push	{r4, fp, lr}
   109cc:	add	fp, sp, #8
   109d0:	sub	sp, sp, #20
   109d4:	str	r0, [fp, #-24]	; 0xffffffe8
   109d8:	ldr	r4, [pc, #124]	; 10a5c <abort@plt+0x1c8>
   109dc:	add	r4, pc, r4
   109e0:	ldr	r3, [pc, #120]	; 10a60 <abort@plt+0x1cc>
   109e4:	ldr	r3, [r4, r3]
   109e8:	ldr	r3, [r3]
   109ec:	str	r3, [fp, #-16]
   109f0:	ldr	r3, [pc, #104]	; 10a60 <abort@plt+0x1cc>
   109f4:	ldr	r3, [r4, r3]
   109f8:	ldr	r3, [r3, #4]
   109fc:	str	r3, [fp, #-20]	; 0xffffffec
   10a00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10a04:	ldr	r3, [pc, #84]	; 10a60 <abort@plt+0x1cc>
   10a08:	ldr	r3, [r4, r3]
   10a0c:	mov	r0, r3
   10a10:	bl	121c0 <error@@Base+0x528>
   10a14:	ldr	r3, [pc, #68]	; 10a60 <abort@plt+0x1cc>
   10a18:	ldr	r3, [r4, r3]
   10a1c:	ldr	r2, [r3]
   10a20:	ldr	r3, [fp, #-16]
   10a24:	sub	r1, r2, r3
   10a28:	ldr	r3, [pc, #48]	; 10a60 <abort@plt+0x1cc>
   10a2c:	ldr	r3, [r4, r3]
   10a30:	ldr	r2, [r3, #4]
   10a34:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a38:	sub	r3, r2, r3
   10a3c:	mov	r2, r3
   10a40:	ldr	r3, [pc, #28]	; 10a64 <abort@plt+0x1d0>
   10a44:	ldr	r3, [r4, r3]
   10a48:	mov	r0, r3
   10a4c:	bl	10c58 <abort@plt+0x3c4>
   10a50:	nop			; (mov r0, r0)
   10a54:	sub	sp, fp, #8
   10a58:	pop	{r4, fp, pc}
   10a5c:	andeq	r3, r1, ip, lsl r6
   10a60:	andeq	r0, r0, r4, lsl #1
   10a64:	andeq	r0, r0, r8, lsl #1
   10a68:	push	{r4, fp, lr}
   10a6c:	add	fp, sp, #8
   10a70:	sub	sp, sp, #36	; 0x24
   10a74:	ldr	r4, [pc, #284]	; 10b98 <abort@plt+0x304>
   10a78:	add	r4, pc, r4
   10a7c:	sub	r2, fp, #28
   10a80:	sub	r3, fp, #20
   10a84:	mov	r1, r3
   10a88:	ldr	r3, [pc, #268]	; 10b9c <abort@plt+0x308>
   10a8c:	ldr	r3, [r4, r3]
   10a90:	mov	r0, r3
   10a94:	bl	10dc0 <abort@plt+0x52c>
   10a98:	ldr	r3, [pc, #252]	; 10b9c <abort@plt+0x308>
   10a9c:	ldr	r3, [r4, r3]
   10aa0:	ldr	r3, [r3, #12]
   10aa4:	mov	r1, r3
   10aa8:	ldr	r3, [pc, #240]	; 10ba0 <abort@plt+0x30c>
   10aac:	add	r3, pc, r3
   10ab0:	mov	r0, r3
   10ab4:	bl	1078c <printf@plt>
   10ab8:	ldr	r3, [pc, #228]	; 10ba4 <abort@plt+0x310>
   10abc:	ldr	r3, [r4, r3]
   10ac0:	ldr	r3, [r3]
   10ac4:	mov	r1, r3
   10ac8:	ldr	r3, [pc, #216]	; 10ba8 <abort@plt+0x314>
   10acc:	add	r3, pc, r3
   10ad0:	mov	r0, r3
   10ad4:	bl	1078c <printf@plt>
   10ad8:	ldr	r3, [pc, #196]	; 10ba4 <abort@plt+0x310>
   10adc:	ldr	r3, [r4, r3]
   10ae0:	ldr	r3, [r3, #4]
   10ae4:	mov	r1, r3
   10ae8:	ldr	r3, [pc, #188]	; 10bac <abort@plt+0x318>
   10aec:	add	r3, pc, r3
   10af0:	mov	r0, r3
   10af4:	bl	1078c <printf@plt>
   10af8:	ldr	r3, [pc, #164]	; 10ba4 <abort@plt+0x310>
   10afc:	ldr	r3, [r4, r3]
   10b00:	ldr	r2, [r3]
   10b04:	ldr	r3, [pc, #152]	; 10ba4 <abort@plt+0x310>
   10b08:	ldr	r3, [r4, r3]
   10b0c:	ldr	r3, [r3, #4]
   10b10:	sub	r3, r2, r3
   10b14:	vmov	s15, r3
   10b18:	vcvt.f64.s32	d7, s15
   10b1c:	vldr	d6, [pc, #108]	; 10b90 <abort@plt+0x2fc>
   10b20:	vmul.f64	d6, d7, d6
   10b24:	ldr	r3, [pc, #120]	; 10ba4 <abort@plt+0x310>
   10b28:	ldr	r3, [r4, r3]
   10b2c:	ldr	r3, [r3]
   10b30:	vmov	s15, r3
   10b34:	vcvt.f64.s32	d7, s15
   10b38:	vdiv.f64	d5, d6, d7
   10b3c:	vmov	r2, r3, d5
   10b40:	ldr	r1, [pc, #104]	; 10bb0 <abort@plt+0x31c>
   10b44:	add	r1, pc, r1
   10b48:	mov	r0, r1
   10b4c:	bl	1078c <printf@plt>
   10b50:	ldrd	r0, [fp, #-20]	; 0xffffffec
   10b54:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   10b58:	ldr	ip, [pc, #84]	; 10bb4 <abort@plt+0x320>
   10b5c:	add	ip, pc, ip
   10b60:	str	ip, [sp, #8]
   10b64:	strd	r2, [sp]
   10b68:	mov	r2, r0
   10b6c:	mov	r3, r1
   10b70:	ldr	r1, [pc, #64]	; 10bb8 <abort@plt+0x324>
   10b74:	add	r1, pc, r1
   10b78:	mov	r0, r1
   10b7c:	bl	1078c <printf@plt>
   10b80:	nop			; (mov r0, r0)
   10b84:	sub	sp, fp, #8
   10b88:	pop	{r4, fp, pc}
   10b8c:	nop			; (mov r0, r0)
   10b90:	andeq	r0, r0, r0
   10b94:	subsmi	r0, r9, r0
   10b98:	andeq	r3, r1, r0, lsl #11
   10b9c:	andeq	r0, r0, r8, lsl #1
   10ba0:	muleq	r0, r8, fp
   10ba4:	andeq	r0, r0, r4, lsl #1
   10ba8:	muleq	r0, r0, fp
   10bac:	andeq	r2, r0, r0, lsl #23
   10bb0:	andeq	r2, r0, r0, asr #22
   10bb4:	andeq	r2, r0, r4, asr fp
   10bb8:	andeq	r2, r0, r4, lsr #22
   10bbc:	push	{fp, lr}
   10bc0:	add	fp, sp, #4
   10bc4:	sub	sp, sp, #16
   10bc8:	str	r0, [fp, #-16]
   10bcc:	str	r1, [fp, #-20]	; 0xffffffec
   10bd0:	sub	r0, fp, #16
   10bd4:	mov	r3, #0
   10bd8:	ldr	r2, [pc, #112]	; 10c50 <abort@plt+0x3bc>
   10bdc:	add	r2, pc, r2
   10be0:	ldr	r1, [fp, #-20]	; 0xffffffec
   10be4:	bl	11bc8 <abort@plt+0x1334>
   10be8:	ldr	r3, [fp, #-16]
   10bec:	cmp	r3, #1
   10bf0:	bgt	10c04 <abort@plt+0x370>
   10bf4:	ldr	r3, [pc, #88]	; 10c54 <abort@plt+0x3c0>
   10bf8:	add	r3, pc, r3
   10bfc:	mov	r0, r3
   10c00:	bl	11c98 <error@@Base>
   10c04:	mov	r3, #0
   10c08:	str	r3, [fp, #-8]
   10c0c:	b	10c38 <abort@plt+0x3a4>
   10c10:	ldr	r3, [fp, #-8]
   10c14:	lsl	r3, r3, #2
   10c18:	ldr	r2, [fp, #-20]	; 0xffffffec
   10c1c:	add	r3, r2, r3
   10c20:	ldr	r3, [r3]
   10c24:	mov	r0, r3
   10c28:	bl	109c8 <abort@plt+0x134>
   10c2c:	ldr	r3, [fp, #-8]
   10c30:	add	r3, r3, #1
   10c34:	str	r3, [fp, #-8]
   10c38:	ldr	r3, [fp, #-16]
   10c3c:	ldr	r2, [fp, #-8]
   10c40:	cmp	r2, r3
   10c44:	blt	10c10 <abort@plt+0x37c>
   10c48:	bl	10a68 <abort@plt+0x1d4>
   10c4c:	bl	11c88 <abort@plt+0x13f4>
   10c50:	andeq	r2, r0, r8, lsl #22
   10c54:	andeq	r2, r0, ip, lsl fp
   10c58:	push	{fp, lr}
   10c5c:	add	fp, sp, #4
   10c60:	sub	sp, sp, #24
   10c64:	str	r0, [fp, #-16]
   10c68:	str	r1, [fp, #-20]	; 0xffffffec
   10c6c:	str	r2, [fp, #-24]	; 0xffffffe8
   10c70:	mov	r1, #32
   10c74:	mov	r0, #1
   10c78:	bl	11144 <abort@plt+0x8b0>
   10c7c:	str	r0, [fp, #-8]
   10c80:	ldr	r3, [fp, #-8]
   10c84:	ldr	r2, [fp, #-20]	; 0xffffffec
   10c88:	str	r2, [r3, #8]
   10c8c:	ldr	r3, [fp, #-8]
   10c90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10c94:	str	r2, [r3, #12]
   10c98:	ldr	r3, [fp, #-16]
   10c9c:	ldr	r2, [r3, #24]
   10ca0:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ca4:	add	r2, r2, r3
   10ca8:	ldr	r3, [fp, #-16]
   10cac:	str	r2, [r3, #24]
   10cb0:	ldr	r3, [fp, #-16]
   10cb4:	ldr	r2, [r3, #28]
   10cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cbc:	add	r2, r2, r3
   10cc0:	ldr	r3, [fp, #-16]
   10cc4:	str	r2, [r3, #28]
   10cc8:	ldr	r1, [fp, #-8]
   10ccc:	ldr	r0, [fp, #-16]
   10cd0:	bl	12bfc <error@@Base+0xf64>
   10cd4:	nop			; (mov r0, r0)
   10cd8:	sub	sp, fp, #4
   10cdc:	pop	{fp, pc}
   10ce0:	push	{fp}		; (str fp, [sp, #-4]!)
   10ce4:	add	fp, sp, #0
   10ce8:	sub	sp, sp, #20
   10cec:	str	r0, [fp, #-16]
   10cf0:	mov	r3, #0
   10cf4:	str	r3, [fp, #-8]
   10cf8:	ldr	r3, [fp, #-16]
   10cfc:	ldr	r3, [r3]
   10d00:	str	r3, [fp, #-12]
   10d04:	b	10d30 <abort@plt+0x49c>
   10d08:	ldr	r3, [fp, #-12]
   10d0c:	ldr	r3, [r3, #8]
   10d10:	cmp	r3, #0
   10d14:	ble	10d24 <abort@plt+0x490>
   10d18:	ldr	r3, [fp, #-8]
   10d1c:	add	r3, r3, #1
   10d20:	str	r3, [fp, #-8]
   10d24:	ldr	r3, [fp, #-12]
   10d28:	ldr	r3, [r3, #4]
   10d2c:	str	r3, [fp, #-12]
   10d30:	ldr	r3, [fp, #-12]
   10d34:	cmp	r3, #0
   10d38:	bne	10d08 <abort@plt+0x474>
   10d3c:	ldr	r3, [fp, #-8]
   10d40:	cmp	r3, #1
   10d44:	movgt	r3, #1
   10d48:	movle	r3, #0
   10d4c:	uxtb	r3, r3
   10d50:	mov	r0, r3
   10d54:	add	sp, fp, #0
   10d58:	pop	{fp}		; (ldr fp, [sp], #4)
   10d5c:	bx	lr
   10d60:	push	{fp}		; (str fp, [sp, #-4]!)
   10d64:	add	fp, sp, #0
   10d68:	sub	sp, sp, #12
   10d6c:	str	r0, [fp, #-8]
   10d70:	str	r1, [fp, #-12]
   10d74:	ldr	r2, [fp, #-8]
   10d78:	ldr	r3, [fp, #-12]
   10d7c:	sub	r3, r2, r3
   10d80:	vmov	s15, r3
   10d84:	vcvt.f64.s32	d7, s15
   10d88:	vldr	d6, [pc, #40]	; 10db8 <abort@plt+0x524>
   10d8c:	vmul.f64	d6, d7, d6
   10d90:	ldr	r3, [fp, #-8]
   10d94:	vmov	s15, r3
   10d98:	vcvt.f64.s32	d7, s15
   10d9c:	vdiv.f64	d5, d6, d7
   10da0:	vmov.f64	d7, d5
   10da4:	vmov.f64	d0, d7
   10da8:	add	sp, fp, #0
   10dac:	pop	{fp}		; (ldr fp, [sp], #4)
   10db0:	bx	lr
   10db4:	nop			; (mov r0, r0)
   10db8:	andeq	r0, r0, r0
   10dbc:	subsmi	r0, r9, r0
   10dc0:	push	{fp, lr}
   10dc4:	add	fp, sp, #4
   10dc8:	sub	sp, sp, #48	; 0x30
   10dcc:	str	r0, [fp, #-40]	; 0xffffffd8
   10dd0:	str	r1, [fp, #-44]	; 0xffffffd4
   10dd4:	str	r2, [fp, #-48]	; 0xffffffd0
   10dd8:	mov	r2, #0
   10ddc:	mov	r3, #0
   10de0:	strd	r2, [fp, #-12]
   10de4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10de8:	bl	10ce0 <abort@plt+0x44c>
   10dec:	mov	r3, r0
   10df0:	cmp	r3, #0
   10df4:	bne	10e08 <abort@plt+0x574>
   10df8:	ldr	r3, [pc, #832]	; 11140 <abort@plt+0x8ac>
   10dfc:	add	r3, pc, r3
   10e00:	mov	r0, r3
   10e04:	bl	11c98 <error@@Base>
   10e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e0c:	ldr	r3, [r3, #12]
   10e10:	str	r3, [fp, #-20]	; 0xffffffec
   10e14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e18:	ldr	r2, [r3, #24]
   10e1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e20:	ldr	r3, [r3, #28]
   10e24:	mov	r1, r3
   10e28:	mov	r0, r2
   10e2c:	bl	10d60 <abort@plt+0x4cc>
   10e30:	vmov.f64	d7, d0
   10e34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e38:	vstr	d7, [r3, #32]
   10e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10e40:	vmov	s15, r3
   10e44:	vcvt.f64.s32	d6, s15
   10e48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e4c:	vldr	d7, [r3, #32]
   10e50:	vmul.f64	d7, d6, d7
   10e54:	vstr	d7, [fp, #-28]	; 0xffffffe4
   10e58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e5c:	ldr	r3, [r3]
   10e60:	str	r3, [fp, #-16]
   10e64:	b	10ef0 <abort@plt+0x65c>
   10e68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e6c:	ldr	r2, [r3, #24]
   10e70:	ldr	r3, [fp, #-16]
   10e74:	ldr	r3, [r3, #8]
   10e78:	sub	r0, r2, r3
   10e7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e80:	ldr	r2, [r3, #28]
   10e84:	ldr	r3, [fp, #-16]
   10e88:	ldr	r3, [r3, #12]
   10e8c:	sub	r3, r2, r3
   10e90:	mov	r1, r3
   10e94:	bl	10d60 <abort@plt+0x4cc>
   10e98:	vmov.f64	d7, d0
   10e9c:	ldr	r3, [fp, #-16]
   10ea0:	vstr	d7, [r3, #16]
   10ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ea8:	sub	r3, r3, #1
   10eac:	vmov	s15, r3
   10eb0:	vcvt.f64.s32	d6, s15
   10eb4:	ldr	r3, [fp, #-16]
   10eb8:	vldr	d7, [r3, #16]
   10ebc:	vmul.f64	d7, d6, d7
   10ec0:	vldr	d6, [fp, #-28]	; 0xffffffe4
   10ec4:	vsub.f64	d7, d6, d7
   10ec8:	ldr	r3, [fp, #-16]
   10ecc:	vstr	d7, [r3, #24]
   10ed0:	ldr	r3, [fp, #-16]
   10ed4:	vldr	d7, [r3, #16]
   10ed8:	vldr	d6, [fp, #-12]
   10edc:	vadd.f64	d7, d6, d7
   10ee0:	vstr	d7, [fp, #-12]
   10ee4:	ldr	r3, [fp, #-16]
   10ee8:	ldr	r3, [r3, #4]
   10eec:	str	r3, [fp, #-16]
   10ef0:	ldr	r3, [fp, #-16]
   10ef4:	cmp	r3, #0
   10ef8:	bne	10e68 <abort@plt+0x5d4>
   10efc:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f00:	sub	r3, r3, #1
   10f04:	vmov	s15, r3
   10f08:	vcvt.f64.s32	d6, s15
   10f0c:	vldr	d7, [fp, #-12]
   10f10:	vmul.f64	d5, d6, d7
   10f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f18:	vmov	s15, r3
   10f1c:	vcvt.f64.s32	d6, s15
   10f20:	vdiv.f64	d7, d5, d6
   10f24:	vldr	d6, [fp, #-28]	; 0xffffffe4
   10f28:	vsub.f64	d7, d6, d7
   10f2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10f30:	vstr	d7, [r3, #40]	; 0x28
   10f34:	mov	r2, #0
   10f38:	mov	r3, #0
   10f3c:	strd	r2, [fp, #-12]
   10f40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10f44:	ldr	r3, [r3]
   10f48:	str	r3, [fp, #-16]
   10f4c:	b	10f94 <abort@plt+0x700>
   10f50:	ldr	r3, [fp, #-16]
   10f54:	vldr	d6, [r3, #24]
   10f58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10f5c:	vldr	d7, [r3, #40]	; 0x28
   10f60:	vsub.f64	d6, d6, d7
   10f64:	ldr	r3, [fp, #-16]
   10f68:	vldr	d5, [r3, #24]
   10f6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10f70:	vldr	d7, [r3, #40]	; 0x28
   10f74:	vsub.f64	d7, d5, d7
   10f78:	vmul.f64	d7, d6, d7
   10f7c:	vldr	d6, [fp, #-12]
   10f80:	vadd.f64	d7, d6, d7
   10f84:	vstr	d7, [fp, #-12]
   10f88:	ldr	r3, [fp, #-16]
   10f8c:	ldr	r3, [r3, #4]
   10f90:	str	r3, [fp, #-16]
   10f94:	ldr	r3, [fp, #-16]
   10f98:	cmp	r3, #0
   10f9c:	bne	10f50 <abort@plt+0x6bc>
   10fa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fa4:	sub	r3, r3, #1
   10fa8:	vmov	s15, r3
   10fac:	vcvt.f64.s32	d7, s15
   10fb0:	vldr	d5, [fp, #-12]
   10fb4:	vdiv.f64	d6, d5, d7
   10fb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fbc:	vmov	s15, r3
   10fc0:	vcvt.f64.s32	d7, s15
   10fc4:	vdiv.f64	d5, d6, d7
   10fc8:	vmov.f64	d0, d5
   10fcc:	bl	10840 <sqrt@plt>
   10fd0:	vmov.f64	d6, d0
   10fd4:	vldr	d7, [pc, #332]	; 11128 <abort@plt+0x894>
   10fd8:	vmul.f64	d7, d6, d7
   10fdc:	vstr	d7, [fp, #-36]	; 0xffffffdc
   10fe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10fe4:	vldr	d6, [r3, #40]	; 0x28
   10fe8:	vldr	d7, [fp, #-36]	; 0xffffffdc
   10fec:	vsub.f64	d7, d6, d7
   10ff0:	vldr	d6, [pc, #312]	; 11130 <abort@plt+0x89c>
   10ff4:	vcmpe.f64	d7, d6
   10ff8:	vmrs	APSR_nzcv, fpscr
   10ffc:	ble	11008 <abort@plt+0x774>
   11000:	mov	r3, #0
   11004:	b	1102c <abort@plt+0x798>
   11008:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1100c:	vldr	d6, [r3, #40]	; 0x28
   11010:	vldr	d7, [fp, #-36]	; 0xffffffdc
   11014:	vsub.f64	d7, d6, d7
   11018:	vcmpe.f64	d7, #0.0
   1101c:	vmrs	APSR_nzcv, fpscr
   11020:	movmi	r3, #1
   11024:	movpl	r3, #0
   11028:	uxtb	r3, r3
   1102c:	cmp	r3, #0
   11030:	beq	1103c <abort@plt+0x7a8>
   11034:	vldr	d7, [pc, #252]	; 11138 <abort@plt+0x8a4>
   11038:	b	11074 <abort@plt+0x7e0>
   1103c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11040:	vldr	d6, [r3, #40]	; 0x28
   11044:	vldr	d7, [fp, #-36]	; 0xffffffdc
   11048:	vsub.f64	d7, d6, d7
   1104c:	vldr	d6, [pc, #220]	; 11130 <abort@plt+0x89c>
   11050:	vcmpe.f64	d7, d6
   11054:	vmrs	APSR_nzcv, fpscr
   11058:	ble	11064 <abort@plt+0x7d0>
   1105c:	vldr	d7, [pc, #204]	; 11130 <abort@plt+0x89c>
   11060:	b	11074 <abort@plt+0x7e0>
   11064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11068:	vldr	d6, [r3, #40]	; 0x28
   1106c:	vldr	d7, [fp, #-36]	; 0xffffffdc
   11070:	vsub.f64	d7, d6, d7
   11074:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11078:	vstr	d7, [r3]
   1107c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11080:	vldr	d6, [r3, #40]	; 0x28
   11084:	vldr	d7, [fp, #-36]	; 0xffffffdc
   11088:	vadd.f64	d7, d6, d7
   1108c:	vldr	d6, [pc, #156]	; 11130 <abort@plt+0x89c>
   11090:	vcmpe.f64	d7, d6
   11094:	vmrs	APSR_nzcv, fpscr
   11098:	ble	110a4 <abort@plt+0x810>
   1109c:	mov	r3, #0
   110a0:	b	110c8 <abort@plt+0x834>
   110a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   110a8:	vldr	d6, [r3, #40]	; 0x28
   110ac:	vldr	d7, [fp, #-36]	; 0xffffffdc
   110b0:	vadd.f64	d7, d6, d7
   110b4:	vcmpe.f64	d7, #0.0
   110b8:	vmrs	APSR_nzcv, fpscr
   110bc:	movmi	r3, #1
   110c0:	movpl	r3, #0
   110c4:	uxtb	r3, r3
   110c8:	cmp	r3, #0
   110cc:	beq	110d8 <abort@plt+0x844>
   110d0:	vldr	d7, [pc, #96]	; 11138 <abort@plt+0x8a4>
   110d4:	b	11110 <abort@plt+0x87c>
   110d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   110dc:	vldr	d6, [r3, #40]	; 0x28
   110e0:	vldr	d7, [fp, #-36]	; 0xffffffdc
   110e4:	vadd.f64	d7, d6, d7
   110e8:	vldr	d6, [pc, #64]	; 11130 <abort@plt+0x89c>
   110ec:	vcmpe.f64	d7, d6
   110f0:	vmrs	APSR_nzcv, fpscr
   110f4:	ble	11100 <abort@plt+0x86c>
   110f8:	vldr	d7, [pc, #48]	; 11130 <abort@plt+0x89c>
   110fc:	b	11110 <abort@plt+0x87c>
   11100:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11104:	vldr	d6, [r3, #40]	; 0x28
   11108:	vldr	d7, [fp, #-36]	; 0xffffffdc
   1110c:	vadd.f64	d7, d6, d7
   11110:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11114:	vstr	d7, [r3]
   11118:	nop			; (mov r0, r0)
   1111c:	sub	sp, fp, #4
   11120:	pop	{fp, pc}
   11124:	nop			; (mov r0, r0)
   11128:			; <UNDEFINED> instruction: 0xf5c28f5c
   1112c:	svccc	0x00ff5c28
   11130:	andeq	r0, r0, r0
   11134:	subsmi	r0, r9, r0
	...
   11140:	andeq	r2, r0, r0, lsr r9
   11144:	push	{fp, lr}
   11148:	add	fp, sp, #4
   1114c:	sub	sp, sp, #16
   11150:	str	r0, [fp, #-16]
   11154:	str	r1, [fp, #-20]	; 0xffffffec
   11158:	ldr	r1, [fp, #-20]	; 0xffffffec
   1115c:	ldr	r0, [fp, #-16]
   11160:	bl	10774 <calloc@plt>
   11164:	mov	r3, r0
   11168:	str	r3, [fp, #-8]
   1116c:	ldr	r3, [fp, #-8]
   11170:	cmp	r3, #0
   11174:	bne	11188 <abort@plt+0x8f4>
   11178:	ldr	r3, [pc, #24]	; 11198 <abort@plt+0x904>
   1117c:	add	r3, pc, r3
   11180:	mov	r0, r3
   11184:	bl	11c98 <error@@Base>
   11188:	ldr	r3, [fp, #-8]
   1118c:	mov	r0, r3
   11190:	sub	sp, fp, #4
   11194:	pop	{fp, pc}
   11198:	andeq	r2, r0, r8, asr #11
   1119c:	push	{fp}		; (str fp, [sp, #-4]!)
   111a0:	add	fp, sp, #0
   111a4:	sub	sp, sp, #20
   111a8:	str	r0, [fp, #-16]
   111ac:	str	r1, [fp, #-20]	; 0xffffffec
   111b0:	mov	r3, #0
   111b4:	str	r3, [fp, #-8]
   111b8:	b	111c8 <abort@plt+0x934>
   111bc:	ldr	r3, [fp, #-8]
   111c0:	add	r3, r3, #1
   111c4:	str	r3, [fp, #-8]
   111c8:	ldr	r3, [fp, #-8]
   111cc:	ldr	r2, [fp, #-16]
   111d0:	add	r3, r2, r3
   111d4:	ldrb	r3, [r3]
   111d8:	cmp	r3, #0
   111dc:	beq	11208 <abort@plt+0x974>
   111e0:	ldr	r3, [fp, #-8]
   111e4:	ldr	r2, [fp, #-16]
   111e8:	add	r3, r2, r3
   111ec:	ldrb	r2, [r3]
   111f0:	ldr	r3, [fp, #-8]
   111f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   111f8:	add	r3, r1, r3
   111fc:	ldrb	r3, [r3]
   11200:	cmp	r2, r3
   11204:	beq	111bc <abort@plt+0x928>
   11208:	ldr	r3, [fp, #-8]
   1120c:	ldr	r2, [fp, #-16]
   11210:	add	r3, r2, r3
   11214:	ldrb	r3, [r3]
   11218:	cmp	r3, #0
   1121c:	bne	11238 <abort@plt+0x9a4>
   11220:	ldr	r3, [fp, #-8]
   11224:	ldr	r2, [fp, #-20]	; 0xffffffec
   11228:	add	r3, r2, r3
   1122c:	ldrb	r3, [r3]
   11230:	cmp	r3, #0
   11234:	beq	11270 <abort@plt+0x9dc>
   11238:	ldr	r3, [fp, #-8]
   1123c:	ldr	r2, [fp, #-16]
   11240:	add	r3, r2, r3
   11244:	ldrb	r2, [r3]
   11248:	ldr	r3, [fp, #-8]
   1124c:	ldr	r1, [fp, #-20]	; 0xffffffec
   11250:	add	r3, r1, r3
   11254:	ldrb	r3, [r3]
   11258:	cmp	r2, r3
   1125c:	bcs	11268 <abort@plt+0x9d4>
   11260:	mvn	r3, #0
   11264:	b	11274 <abort@plt+0x9e0>
   11268:	mov	r3, #1
   1126c:	b	11274 <abort@plt+0x9e0>
   11270:	mov	r3, #0
   11274:	mov	r0, r3
   11278:	add	sp, fp, #0
   1127c:	pop	{fp}		; (ldr fp, [sp], #4)
   11280:	bx	lr
   11284:	push	{fp, lr}
   11288:	add	fp, sp, #4
   1128c:	sub	sp, sp, #16
   11290:	str	r0, [fp, #-16]
   11294:	str	r1, [fp, #-20]	; 0xffffffec
   11298:	ldr	r3, [pc, #164]	; 11344 <abort@plt+0xab0>
   1129c:	add	r3, pc, r3
   112a0:	ldr	r2, [fp, #-16]
   112a4:	cmp	r2, #0
   112a8:	bne	112dc <abort@plt+0xa48>
   112ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   112b0:	ldrb	r2, [r2]
   112b4:	cmp	r2, #114	; 0x72
   112b8:	bne	112cc <abort@plt+0xa38>
   112bc:	ldr	r2, [pc, #132]	; 11348 <abort@plt+0xab4>
   112c0:	ldr	r3, [r3, r2]
   112c4:	ldr	r3, [r3]
   112c8:	b	11338 <abort@plt+0xaa4>
   112cc:	ldr	r2, [pc, #120]	; 1134c <abort@plt+0xab8>
   112d0:	ldr	r3, [r3, r2]
   112d4:	ldr	r3, [r3]
   112d8:	b	11338 <abort@plt+0xaa4>
   112dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   112e0:	ldr	r0, [fp, #-16]
   112e4:	bl	10798 <fopen@plt>
   112e8:	str	r0, [fp, #-8]
   112ec:	ldr	r3, [fp, #-8]
   112f0:	cmp	r3, #0
   112f4:	beq	11300 <abort@plt+0xa6c>
   112f8:	ldr	r3, [fp, #-8]
   112fc:	b	11338 <abort@plt+0xaa4>
   11300:	ldr	r3, [fp, #-20]	; 0xffffffec
   11304:	ldrb	r3, [r3]
   11308:	cmp	r3, #119	; 0x77
   1130c:	bne	11324 <abort@plt+0xa90>
   11310:	ldr	r1, [fp, #-16]
   11314:	ldr	r3, [pc, #52]	; 11350 <abort@plt+0xabc>
   11318:	add	r3, pc, r3
   1131c:	mov	r0, r3
   11320:	bl	11d00 <error@@Base+0x68>
   11324:	ldr	r1, [fp, #-16]
   11328:	ldr	r3, [pc, #36]	; 11354 <abort@plt+0xac0>
   1132c:	add	r3, pc, r3
   11330:	mov	r0, r3
   11334:	bl	11d00 <error@@Base+0x68>
   11338:	mov	r0, r3
   1133c:	sub	sp, fp, #4
   11340:	pop	{fp, pc}
   11344:	andeq	r2, r1, ip, asr sp
   11348:	muleq	r0, r0, r0
   1134c:	muleq	r0, r4, r0
   11350:	andeq	r2, r0, r8, asr #8
   11354:	andeq	r2, r0, ip, asr #8
   11358:	push	{fp, lr}
   1135c:	add	fp, sp, #4
   11360:	sub	sp, sp, #8
   11364:	str	r0, [fp, #-8]
   11368:	ldr	r3, [pc, #68]	; 113b4 <abort@plt+0xb20>
   1136c:	add	r3, pc, r3
   11370:	ldr	r2, [pc, #64]	; 113b8 <abort@plt+0xb24>
   11374:	ldr	r2, [r3, r2]
   11378:	ldr	r2, [r2]
   1137c:	ldr	r1, [fp, #-8]
   11380:	cmp	r1, r2
   11384:	beq	113a8 <abort@plt+0xb14>
   11388:	ldr	r2, [pc, #44]	; 113bc <abort@plt+0xb28>
   1138c:	ldr	r3, [r3, r2]
   11390:	ldr	r3, [r3]
   11394:	ldr	r2, [fp, #-8]
   11398:	cmp	r2, r3
   1139c:	beq	113a8 <abort@plt+0xb14>
   113a0:	ldr	r0, [fp, #-8]
   113a4:	bl	10858 <fclose@plt>
   113a8:	nop			; (mov r0, r0)
   113ac:	sub	sp, fp, #4
   113b0:	pop	{fp, pc}
   113b4:	andeq	r2, r1, ip, lsl #25
   113b8:	muleq	r0, r0, r0
   113bc:	muleq	r0, r4, r0
   113c0:	push	{fp, lr}
   113c4:	add	fp, sp, #4
   113c8:	sub	sp, sp, #96	; 0x60
   113cc:	str	r0, [fp, #-96]	; 0xffffffa0
   113d0:	sub	r3, fp, #92	; 0x5c
   113d4:	mov	r1, r3
   113d8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   113dc:	bl	13630 <error@@Base+0x1998>
   113e0:	mov	r3, r0
   113e4:	cmp	r3, #0
   113e8:	moveq	r3, #1
   113ec:	movne	r3, #0
   113f0:	uxtb	r3, r3
   113f4:	mov	r0, r3
   113f8:	sub	sp, fp, #4
   113fc:	pop	{fp, pc}
   11400:	push	{r4, fp, lr}
   11404:	add	fp, sp, #8
   11408:	sub	sp, sp, #124	; 0x7c
   1140c:	mov	r3, r0
   11410:	strh	r3, [fp, #-120]	; 0xffffff88
   11414:	ldr	r2, [pc, #80]	; 1146c <abort@plt+0xbd8>
   11418:	add	r2, pc, r2
   1141c:	ldr	r3, [pc, #76]	; 11470 <abort@plt+0xbdc>
   11420:	ldr	r3, [r2, r3]
   11424:	ldr	r4, [r3]
   11428:	bl	10810 <getpid@plt>
   1142c:	mov	r2, r0
   11430:	ldrsh	r3, [fp, #-120]	; 0xffffff88
   11434:	sub	r0, fp, #112	; 0x70
   11438:	str	r3, [sp]
   1143c:	mov	r3, r2
   11440:	mov	r2, r4
   11444:	ldr	r1, [pc, #40]	; 11474 <abort@plt+0xbe0>
   11448:	add	r1, pc, r1
   1144c:	bl	10870 <sprintf@plt>
   11450:	sub	r3, fp, #112	; 0x70
   11454:	mov	r0, r3
   11458:	bl	107bc <strdup@plt>
   1145c:	mov	r3, r0
   11460:	mov	r0, r3
   11464:	sub	sp, fp, #8
   11468:	pop	{r4, fp, pc}
   1146c:	andeq	r2, r1, r0, ror #23
   11470:	andeq	r0, r0, r0, lsl #1
   11474:	andeq	r2, r0, r4, asr #6
   11478:	push	{fp, lr}
   1147c:	add	fp, sp, #4
   11480:	sub	sp, sp, #8
   11484:	ldr	r3, [pc, #80]	; 114dc <abort@plt+0xc48>
   11488:	add	r3, pc, r3
   1148c:	ldrsh	r3, [r3]
   11490:	uxth	r3, r3
   11494:	add	r3, r3, #1
   11498:	uxth	r3, r3
   1149c:	sxth	r2, r3
   114a0:	ldr	r3, [pc, #56]	; 114e0 <abort@plt+0xc4c>
   114a4:	add	r3, pc, r3
   114a8:	strh	r2, [r3]
   114ac:	ldr	r3, [pc, #48]	; 114e4 <abort@plt+0xc50>
   114b0:	add	r3, pc, r3
   114b4:	ldrsh	r3, [r3]
   114b8:	mov	r0, r3
   114bc:	bl	11400 <abort@plt+0xb6c>
   114c0:	str	r0, [fp, #-8]
   114c4:	ldr	r0, [fp, #-8]
   114c8:	bl	107c8 <unlink@plt>
   114cc:	ldr	r3, [fp, #-8]
   114d0:	mov	r0, r3
   114d4:	sub	sp, fp, #4
   114d8:	pop	{fp, pc}
   114dc:	andeq	r2, r1, r2, lsr #24
   114e0:	andeq	r2, r1, r6, lsl #24
   114e4:	strdeq	r2, [r1], -sl
   114e8:	push	{fp, lr}
   114ec:	add	fp, sp, #4
   114f0:	sub	sp, sp, #8
   114f4:	mov	r3, #1
   114f8:	strh	r3, [fp, #-6]
   114fc:	b	11534 <abort@plt+0xca0>
   11500:	ldrsh	r3, [fp, #-6]
   11504:	mov	r0, r3
   11508:	bl	11400 <abort@plt+0xb6c>
   1150c:	str	r0, [fp, #-12]
   11510:	ldr	r0, [fp, #-12]
   11514:	bl	107c8 <unlink@plt>
   11518:	ldr	r0, [fp, #-12]
   1151c:	bl	107a4 <free@plt>
   11520:	ldrsh	r3, [fp, #-6]
   11524:	uxth	r3, r3
   11528:	add	r3, r3, #1
   1152c:	uxth	r3, r3
   11530:	strh	r3, [fp, #-6]
   11534:	ldr	r3, [pc, #28]	; 11558 <abort@plt+0xcc4>
   11538:	add	r3, pc, r3
   1153c:	ldrsh	r3, [r3]
   11540:	ldrsh	r2, [fp, #-6]
   11544:	cmp	r2, r3
   11548:	ble	11500 <abort@plt+0xc6c>
   1154c:	nop			; (mov r0, r0)
   11550:	sub	sp, fp, #4
   11554:	pop	{fp, pc}
   11558:	andeq	r2, r1, r2, ror fp
   1155c:	push	{fp, lr}
   11560:	add	fp, sp, #4
   11564:	sub	sp, sp, #16
   11568:	str	r0, [fp, #-16]
   1156c:	mov	r3, #47	; 0x2f
   11570:	strb	r3, [fp, #-7]
   11574:	ldr	r0, [fp, #-16]
   11578:	bl	10828 <strlen@plt>
   1157c:	mov	r3, r0
   11580:	uxth	r3, r3
   11584:	sub	r3, r3, #1
   11588:	uxth	r3, r3
   1158c:	strh	r3, [fp, #-6]
   11590:	b	115a8 <abort@plt+0xd14>
   11594:	ldrsh	r3, [fp, #-6]
   11598:	uxth	r3, r3
   1159c:	sub	r3, r3, #1
   115a0:	uxth	r3, r3
   115a4:	strh	r3, [fp, #-6]
   115a8:	ldrsh	r3, [fp, #-6]
   115ac:	cmp	r3, #0
   115b0:	blt	115d0 <abort@plt+0xd3c>
   115b4:	ldrsh	r3, [fp, #-6]
   115b8:	ldr	r2, [fp, #-16]
   115bc:	add	r3, r2, r3
   115c0:	ldrb	r3, [r3]
   115c4:	ldrb	r2, [fp, #-7]
   115c8:	cmp	r2, r3
   115cc:	bne	11594 <abort@plt+0xd00>
   115d0:	ldrsh	r3, [fp, #-6]
   115d4:	add	r3, r3, #1
   115d8:	ldr	r2, [fp, #-16]
   115dc:	add	r3, r2, r3
   115e0:	mov	r0, r3
   115e4:	sub	sp, fp, #4
   115e8:	pop	{fp, pc}
   115ec:	push	{fp, lr}
   115f0:	add	fp, sp, #4
   115f4:	sub	sp, sp, #8
   115f8:	str	r0, [fp, #-8]
   115fc:	ldr	r3, [pc, #56]	; 1163c <abort@plt+0xda8>
   11600:	add	r3, pc, r3
   11604:	ldrb	r3, [r3]
   11608:	cmp	r3, #0
   1160c:	bne	11630 <abort@plt+0xd9c>
   11610:	ldr	r3, [pc, #40]	; 11640 <abort@plt+0xdac>
   11614:	add	r3, pc, r3
   11618:	mov	r2, #1
   1161c:	strb	r2, [r3]
   11620:	ldr	r3, [pc, #28]	; 11644 <abort@plt+0xdb0>
   11624:	add	r3, pc, r3
   11628:	mov	r0, r3
   1162c:	bl	11c98 <error@@Base>
   11630:	nop			; (mov r0, r0)
   11634:	sub	sp, fp, #4
   11638:	pop	{fp, pc}
   1163c:	andeq	r2, r1, ip, lsr #21
   11640:	muleq	r1, r8, sl
   11644:	andeq	r2, r0, r8, ror r1
   11648:	push	{fp, lr}
   1164c:	add	fp, sp, #4
   11650:	ldr	r3, [pc, #40]	; 11680 <abort@plt+0xdec>
   11654:	add	r3, pc, r3
   11658:	mov	r1, r3
   1165c:	mov	r0, #2
   11660:	bl	107f8 <__sysv_signal@plt>
   11664:	ldr	r3, [pc, #24]	; 11684 <abort@plt+0xdf0>
   11668:	add	r3, pc, r3
   1166c:	mov	r1, r3
   11670:	mov	r0, #15
   11674:	bl	107f8 <__sysv_signal@plt>
   11678:	nop			; (mov r0, r0)
   1167c:	pop	{fp, pc}
   11680:			; <UNDEFINED> instruction: 0xffffff90
   11684:			; <UNDEFINED> instruction: 0xffffff7c
   11688:	push	{fp, lr}
   1168c:	add	fp, sp, #4
   11690:	sub	sp, sp, #8
   11694:	str	r0, [fp, #-8]
   11698:	ldr	r3, [pc, #84]	; 116f4 <abort@plt+0xe60>
   1169c:	add	r3, pc, r3
   116a0:	ldr	r2, [pc, #80]	; 116f8 <abort@plt+0xe64>
   116a4:	ldr	r2, [r3, r2]
   116a8:	ldr	r2, [r2]
   116ac:	cmp	r2, #0
   116b0:	beq	116c8 <abort@plt+0xe34>
   116b4:	ldr	r2, [pc, #60]	; 116f8 <abort@plt+0xe64>
   116b8:	ldr	r3, [r3, r2]
   116bc:	ldr	r3, [r3]
   116c0:	blx	r3
   116c4:	b	116f0 <abort@plt+0xe5c>
   116c8:	ldr	r2, [pc, #44]	; 116fc <abort@plt+0xe68>
   116cc:	ldr	r2, [r3, r2]
   116d0:	ldr	r0, [r2]
   116d4:	ldr	r2, [pc, #36]	; 11700 <abort@plt+0xe6c>
   116d8:	ldr	r3, [r3, r2]
   116dc:	ldr	r2, [r3]
   116e0:	ldr	r3, [fp, #-8]
   116e4:	ldr	r1, [pc, #24]	; 11704 <abort@plt+0xe70>
   116e8:	add	r1, pc, r1
   116ec:	bl	10834 <fprintf@plt>
   116f0:	bl	11c88 <abort@plt+0x13f4>
   116f4:	andeq	r2, r1, ip, asr r9
   116f8:	andeq	r0, r0, r4, ror r0
   116fc:	andeq	r0, r0, r8, ror r0
   11700:	andeq	r0, r0, r0, lsl #1
   11704:	andeq	r2, r0, r4, asr #1
   11708:	push	{fp, lr}
   1170c:	add	fp, sp, #4
   11710:	sub	sp, sp, #24
   11714:	str	r0, [fp, #-16]
   11718:	str	r1, [fp, #-20]	; 0xffffffec
   1171c:	str	r2, [fp, #-24]	; 0xffffffe8
   11720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11724:	cmp	r3, #0
   11728:	beq	11968 <abort@plt+0x10d4>
   1172c:	mov	r3, #0
   11730:	strh	r3, [fp, #-6]
   11734:	b	1174c <abort@plt+0xeb8>
   11738:	ldrsh	r3, [fp, #-6]
   1173c:	uxth	r3, r3
   11740:	add	r3, r3, #1
   11744:	uxth	r3, r3
   11748:	strh	r3, [fp, #-6]
   1174c:	ldrsh	r2, [fp, #-6]
   11750:	mov	r3, r2
   11754:	lsl	r3, r3, #1
   11758:	add	r3, r3, r2
   1175c:	lsl	r3, r3, #2
   11760:	mov	r2, r3
   11764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11768:	add	r3, r3, r2
   1176c:	ldrb	r3, [r3]
   11770:	cmp	r3, #0
   11774:	beq	117b0 <abort@plt+0xf1c>
   11778:	ldr	r3, [fp, #-16]
   1177c:	add	r3, r3, #1
   11780:	ldrb	r1, [r3]
   11784:	ldrsh	r2, [fp, #-6]
   11788:	mov	r3, r2
   1178c:	lsl	r3, r3, #1
   11790:	add	r3, r3, r2
   11794:	lsl	r3, r3, #2
   11798:	mov	r2, r3
   1179c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117a0:	add	r3, r3, r2
   117a4:	ldrb	r3, [r3]
   117a8:	cmp	r1, r3
   117ac:	bne	11738 <abort@plt+0xea4>
   117b0:	ldrsh	r2, [fp, #-6]
   117b4:	mov	r3, r2
   117b8:	lsl	r3, r3, #1
   117bc:	add	r3, r3, r2
   117c0:	lsl	r3, r3, #2
   117c4:	mov	r2, r3
   117c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117cc:	add	r3, r3, r2
   117d0:	ldrb	r3, [r3]
   117d4:	cmp	r3, #0
   117d8:	beq	11970 <abort@plt+0x10dc>
   117dc:	ldrsh	r2, [fp, #-6]
   117e0:	mov	r3, r2
   117e4:	lsl	r3, r3, #1
   117e8:	add	r3, r3, r2
   117ec:	lsl	r3, r3, #2
   117f0:	mov	r2, r3
   117f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117f8:	add	r3, r3, r2
   117fc:	ldr	r3, [r3, #4]
   11800:	cmp	r3, #0
   11804:	beq	118c4 <abort@plt+0x1030>
   11808:	ldr	r3, [fp, #-16]
   1180c:	add	r3, r3, #2
   11810:	ldrb	r3, [r3]
   11814:	cmp	r3, #0
   11818:	bne	11828 <abort@plt+0xf94>
   1181c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11820:	cmp	r3, #0
   11824:	beq	118c4 <abort@plt+0x1030>
   11828:	ldrsh	r2, [fp, #-6]
   1182c:	mov	r3, r2
   11830:	lsl	r3, r3, #1
   11834:	add	r3, r3, r2
   11838:	lsl	r3, r3, #2
   1183c:	mov	r2, r3
   11840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11844:	add	r3, r3, r2
   11848:	ldr	r3, [r3, #4]
   1184c:	ldr	r3, [r3]
   11850:	cmp	r3, #0
   11854:	bne	11988 <abort@plt+0x10f4>
   11858:	ldrsh	r2, [fp, #-6]
   1185c:	mov	r3, r2
   11860:	lsl	r3, r3, #1
   11864:	add	r3, r3, r2
   11868:	lsl	r3, r3, #2
   1186c:	mov	r2, r3
   11870:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11874:	add	r3, r3, r2
   11878:	ldr	r2, [r3, #4]
   1187c:	ldr	r3, [fp, #-16]
   11880:	add	r3, r3, #2
   11884:	ldrb	r3, [r3]
   11888:	cmp	r3, #0
   1188c:	beq	1189c <abort@plt+0x1008>
   11890:	ldr	r3, [fp, #-16]
   11894:	add	r3, r3, #2
   11898:	b	118a0 <abort@plt+0x100c>
   1189c:	ldr	r3, [fp, #-20]	; 0xffffffec
   118a0:	str	r3, [r2]
   118a4:	ldr	r3, [fp, #-16]
   118a8:	add	r3, r3, #2
   118ac:	ldrb	r3, [r3]
   118b0:	cmp	r3, #0
   118b4:	moveq	r3, #1
   118b8:	movne	r3, #0
   118bc:	uxtb	r3, r3
   118c0:	b	119a8 <abort@plt+0x1114>
   118c4:	ldrsh	r2, [fp, #-6]
   118c8:	mov	r3, r2
   118cc:	lsl	r3, r3, #1
   118d0:	add	r3, r3, r2
   118d4:	lsl	r3, r3, #2
   118d8:	mov	r2, r3
   118dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118e0:	add	r3, r3, r2
   118e4:	ldr	r3, [r3, #8]
   118e8:	cmp	r3, #0
   118ec:	beq	11974 <abort@plt+0x10e0>
   118f0:	ldr	r3, [fp, #-16]
   118f4:	add	r3, r3, #2
   118f8:	ldrb	r3, [r3]
   118fc:	cmp	r3, #0
   11900:	bne	11974 <abort@plt+0x10e0>
   11904:	ldrsh	r2, [fp, #-6]
   11908:	mov	r3, r2
   1190c:	lsl	r3, r3, #1
   11910:	add	r3, r3, r2
   11914:	lsl	r3, r3, #2
   11918:	mov	r2, r3
   1191c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11920:	add	r3, r3, r2
   11924:	ldr	r3, [r3, #8]
   11928:	ldrb	r3, [r3]
   1192c:	cmp	r3, #0
   11930:	bne	11990 <abort@plt+0x10fc>
   11934:	ldrsh	r2, [fp, #-6]
   11938:	mov	r3, r2
   1193c:	lsl	r3, r3, #1
   11940:	add	r3, r3, r2
   11944:	lsl	r3, r3, #2
   11948:	mov	r2, r3
   1194c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11950:	add	r3, r3, r2
   11954:	ldr	r3, [r3, #8]
   11958:	mov	r2, #1
   1195c:	strb	r2, [r3]
   11960:	mov	r3, #0
   11964:	b	119a8 <abort@plt+0x1114>
   11968:	nop			; (mov r0, r0)
   1196c:	b	11974 <abort@plt+0x10e0>
   11970:	nop			; (mov r0, r0)
   11974:	ldr	r1, [fp, #-16]
   11978:	ldr	r3, [pc, #52]	; 119b4 <abort@plt+0x1120>
   1197c:	add	r3, pc, r3
   11980:	mov	r0, r3
   11984:	bl	11d00 <error@@Base+0x68>
   11988:	nop			; (mov r0, r0)
   1198c:	b	11994 <abort@plt+0x1100>
   11990:	nop			; (mov r0, r0)
   11994:	ldr	r1, [fp, #-16]
   11998:	ldr	r3, [pc, #24]	; 119b8 <abort@plt+0x1124>
   1199c:	add	r3, pc, r3
   119a0:	mov	r0, r3
   119a4:	bl	11d00 <error@@Base+0x68>
   119a8:	mov	r0, r3
   119ac:	sub	sp, fp, #4
   119b0:	pop	{fp, pc}
   119b4:	andeq	r1, r0, r0, asr #28
   119b8:	andeq	r1, r0, r0, lsr lr
   119bc:	push	{r4, fp, lr}
   119c0:	add	fp, sp, #8
   119c4:	sub	sp, sp, #28
   119c8:	str	r0, [fp, #-24]	; 0xffffffe8
   119cc:	str	r1, [fp, #-28]	; 0xffffffe4
   119d0:	str	r2, [fp, #-32]	; 0xffffffe0
   119d4:	str	r3, [fp, #-36]	; 0xffffffdc
   119d8:	ldr	r2, [pc, #476]	; 11bbc <abort@plt+0x1328>
   119dc:	add	r2, pc, r2
   119e0:	mov	r3, #0
   119e4:	strh	r3, [fp, #-16]
   119e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119ec:	ldr	r3, [r3]
   119f0:	cmp	r3, #1
   119f4:	bne	11a14 <abort@plt+0x1180>
   119f8:	ldr	r3, [pc, #448]	; 11bc0 <abort@plt+0x132c>
   119fc:	ldr	r3, [r2, r3]
   11a00:	ldrb	r3, [r3]
   11a04:	cmp	r3, #0
   11a08:	beq	11a14 <abort@plt+0x1180>
   11a0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a10:	bl	11688 <abort@plt+0xdf4>
   11a14:	mov	r3, #1
   11a18:	strh	r3, [fp, #-14]
   11a1c:	b	11b90 <abort@plt+0x12fc>
   11a20:	ldrsh	r3, [fp, #-14]
   11a24:	lsl	r3, r3, #2
   11a28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a2c:	add	r3, r2, r3
   11a30:	ldr	r3, [r3]
   11a34:	ldrb	r3, [r3]
   11a38:	cmp	r3, #45	; 0x2d
   11a3c:	bne	11b40 <abort@plt+0x12ac>
   11a40:	ldrsh	r3, [fp, #-14]
   11a44:	lsl	r3, r3, #2
   11a48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a4c:	add	r3, r2, r3
   11a50:	ldr	r3, [r3]
   11a54:	add	r3, r3, #1
   11a58:	ldrb	r3, [r3]
   11a5c:	cmp	r3, #0
   11a60:	beq	11b40 <abort@plt+0x12ac>
   11a64:	ldrsh	r3, [fp, #-14]
   11a68:	lsl	r3, r3, #2
   11a6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a70:	add	r3, r2, r3
   11a74:	ldr	r4, [r3]
   11a78:	ldrsh	r3, [fp, #-14]
   11a7c:	lsl	r3, r3, #2
   11a80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11a84:	add	r3, r2, r3
   11a88:	ldr	r3, [r3]
   11a8c:	mov	r0, r3
   11a90:	bl	10828 <strlen@plt>
   11a94:	mov	r3, r0
   11a98:	mov	r2, r3
   11a9c:	mov	r1, r4
   11aa0:	ldr	r3, [pc, #284]	; 11bc4 <abort@plt+0x1330>
   11aa4:	add	r3, pc, r3
   11aa8:	mov	r0, r3
   11aac:	bl	10888 <strncmp@plt>
   11ab0:	mov	r3, r0
   11ab4:	cmp	r3, #0
   11ab8:	bne	11ac4 <abort@plt+0x1230>
   11abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ac0:	bl	11688 <abort@plt+0xdf4>
   11ac4:	ldrsh	r3, [fp, #-14]
   11ac8:	lsl	r3, r3, #2
   11acc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11ad0:	add	r3, r2, r3
   11ad4:	ldr	r0, [r3]
   11ad8:	ldrsh	r3, [fp, #-14]
   11adc:	add	r2, r3, #1
   11ae0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ae4:	ldr	r3, [r3]
   11ae8:	cmp	r2, r3
   11aec:	bge	11b0c <abort@plt+0x1278>
   11af0:	ldrsh	r3, [fp, #-14]
   11af4:	add	r3, r3, #1
   11af8:	lsl	r3, r3, #2
   11afc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b00:	add	r3, r2, r3
   11b04:	ldr	r3, [r3]
   11b08:	b	11b10 <abort@plt+0x127c>
   11b0c:	mov	r3, #0
   11b10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11b14:	mov	r1, r3
   11b18:	bl	11708 <abort@plt+0xe74>
   11b1c:	mov	r3, r0
   11b20:	cmp	r3, #0
   11b24:	beq	11b7c <abort@plt+0x12e8>
   11b28:	ldrsh	r3, [fp, #-14]
   11b2c:	uxth	r3, r3
   11b30:	add	r3, r3, #1
   11b34:	uxth	r3, r3
   11b38:	strh	r3, [fp, #-14]
   11b3c:	b	11b7c <abort@plt+0x12e8>
   11b40:	ldrsh	r2, [fp, #-16]
   11b44:	uxth	r3, r2
   11b48:	add	r3, r3, #1
   11b4c:	uxth	r3, r3
   11b50:	strh	r3, [fp, #-16]
   11b54:	mov	r3, r2
   11b58:	lsl	r3, r3, #2
   11b5c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11b60:	add	r3, r2, r3
   11b64:	ldrsh	r2, [fp, #-14]
   11b68:	lsl	r2, r2, #2
   11b6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11b70:	add	r2, r1, r2
   11b74:	ldr	r2, [r2]
   11b78:	str	r2, [r3]
   11b7c:	ldrsh	r3, [fp, #-14]
   11b80:	uxth	r3, r3
   11b84:	add	r3, r3, #1
   11b88:	uxth	r3, r3
   11b8c:	strh	r3, [fp, #-14]
   11b90:	ldrsh	r2, [fp, #-14]
   11b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11b98:	ldr	r3, [r3]
   11b9c:	cmp	r2, r3
   11ba0:	blt	11a20 <abort@plt+0x118c>
   11ba4:	ldrsh	r2, [fp, #-16]
   11ba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bac:	str	r2, [r3]
   11bb0:	nop			; (mov r0, r0)
   11bb4:	sub	sp, fp, #8
   11bb8:	pop	{r4, fp, pc}
   11bbc:	andeq	r2, r1, ip, lsl r6
   11bc0:	andeq	r0, r0, r0, ror r0
   11bc4:	andeq	r1, r0, ip, lsr sp
   11bc8:	push	{r4, fp, lr}
   11bcc:	add	fp, sp, #8
   11bd0:	sub	sp, sp, #20
   11bd4:	str	r0, [fp, #-16]
   11bd8:	str	r1, [fp, #-20]	; 0xffffffec
   11bdc:	str	r2, [fp, #-24]	; 0xffffffe8
   11be0:	str	r3, [fp, #-28]	; 0xffffffe4
   11be4:	ldr	r4, [pc, #68]	; 11c30 <abort@plt+0x139c>
   11be8:	add	r4, pc, r4
   11bec:	ldr	r3, [fp, #-20]	; 0xffffffec
   11bf0:	ldr	r3, [r3]
   11bf4:	mov	r0, r3
   11bf8:	bl	1155c <abort@plt+0xcc8>
   11bfc:	mov	r2, r0
   11c00:	ldr	r3, [pc, #44]	; 11c34 <abort@plt+0x13a0>
   11c04:	ldr	r3, [r4, r3]
   11c08:	str	r2, [r3]
   11c0c:	bl	11648 <abort@plt+0xdb4>
   11c10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11c14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11c18:	ldr	r1, [fp, #-20]	; 0xffffffec
   11c1c:	ldr	r0, [fp, #-16]
   11c20:	bl	119bc <abort@plt+0x1128>
   11c24:	nop			; (mov r0, r0)
   11c28:	sub	sp, fp, #8
   11c2c:	pop	{r4, fp, pc}
   11c30:	andeq	r2, r1, r0, lsl r4
   11c34:	andeq	r0, r0, r0, lsl #1
   11c38:	push	{fp, lr}
   11c3c:	add	fp, sp, #4
   11c40:	sub	sp, sp, #8
   11c44:	str	r0, [fp, #-8]
   11c48:	ldr	r3, [pc, #48]	; 11c80 <abort@plt+0x13ec>
   11c4c:	add	r3, pc, r3
   11c50:	ldr	r2, [pc, #44]	; 11c84 <abort@plt+0x13f0>
   11c54:	ldr	r2, [r3, r2]
   11c58:	ldr	r2, [r2]
   11c5c:	cmp	r2, #0
   11c60:	beq	11c74 <abort@plt+0x13e0>
   11c64:	ldr	r2, [pc, #24]	; 11c84 <abort@plt+0x13f0>
   11c68:	ldr	r3, [r3, r2]
   11c6c:	ldr	r3, [r3]
   11c70:	blx	r3
   11c74:	bl	114e8 <abort@plt+0xc54>
   11c78:	ldr	r0, [fp, #-8]
   11c7c:	bl	1081c <exit@plt>
   11c80:	andeq	r2, r1, ip, lsr #7
   11c84:	andeq	r0, r0, ip, lsl #1
   11c88:	push	{fp, lr}
   11c8c:	add	fp, sp, #4
   11c90:	mov	r0, #0
   11c94:	bl	11c38 <abort@plt+0x13a4>

00011c98 <error@@Base>:
   11c98:	push	{r4, fp, lr}
   11c9c:	add	fp, sp, #8
   11ca0:	sub	sp, sp, #12
   11ca4:	str	r0, [fp, #-16]
   11ca8:	ldr	r4, [pc, #60]	; 11cec <error@@Base+0x54>
   11cac:	add	r4, pc, r4
   11cb0:	ldr	r3, [pc, #56]	; 11cf0 <error@@Base+0x58>
   11cb4:	ldr	r3, [r4, r3]
   11cb8:	ldr	r0, [r3]
   11cbc:	ldr	r3, [pc, #48]	; 11cf4 <error@@Base+0x5c>
   11cc0:	ldr	r3, [r4, r3]
   11cc4:	ldr	r2, [r3]
   11cc8:	ldr	r3, [fp, #-16]
   11ccc:	ldr	r1, [pc, #36]	; 11cf8 <error@@Base+0x60>
   11cd0:	add	r1, pc, r1
   11cd4:	bl	10834 <fprintf@plt>
   11cd8:	ldr	r3, [pc, #28]	; 11cfc <error@@Base+0x64>
   11cdc:	ldr	r3, [r4, r3]
   11ce0:	ldr	r3, [r3]
   11ce4:	mov	r0, r3
   11ce8:	bl	11c38 <abort@plt+0x13a4>
   11cec:	andeq	r2, r1, ip, asr #6
   11cf0:	andeq	r0, r0, r8, ror r0
   11cf4:	andeq	r0, r0, r0, lsl #1
   11cf8:	andeq	r1, r0, r8, lsl fp
   11cfc:	muleq	r0, r8, r0
   11d00:	push	{r4, fp, lr}
   11d04:	add	fp, sp, #8
   11d08:	sub	sp, sp, #20
   11d0c:	str	r0, [fp, #-16]
   11d10:	str	r1, [fp, #-20]	; 0xffffffec
   11d14:	ldr	r4, [pc, #68]	; 11d60 <error@@Base+0xc8>
   11d18:	add	r4, pc, r4
   11d1c:	ldr	r3, [pc, #64]	; 11d64 <error@@Base+0xcc>
   11d20:	ldr	r3, [r4, r3]
   11d24:	ldr	r0, [r3]
   11d28:	ldr	r3, [pc, #56]	; 11d68 <error@@Base+0xd0>
   11d2c:	ldr	r3, [r4, r3]
   11d30:	ldr	r2, [r3]
   11d34:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d38:	str	r3, [sp]
   11d3c:	ldr	r3, [fp, #-16]
   11d40:	ldr	r1, [pc, #36]	; 11d6c <error@@Base+0xd4>
   11d44:	add	r1, pc, r1
   11d48:	bl	10834 <fprintf@plt>
   11d4c:	ldr	r3, [pc, #28]	; 11d70 <error@@Base+0xd8>
   11d50:	ldr	r3, [r4, r3]
   11d54:	ldr	r3, [r3]
   11d58:	mov	r0, r3
   11d5c:	bl	11c38 <abort@plt+0x13a4>
   11d60:	andeq	r2, r1, r0, ror #5
   11d64:	andeq	r0, r0, r8, ror r0
   11d68:	andeq	r0, r0, r0, lsl #1
   11d6c:	andeq	r1, r0, ip, lsr #21
   11d70:	muleq	r0, r8, r0
   11d74:	push	{fp, lr}
   11d78:	add	fp, sp, #4
   11d7c:	sub	sp, sp, #16
   11d80:	str	r0, [fp, #-8]
   11d84:	str	r1, [fp, #-12]
   11d88:	ldr	r3, [pc, #60]	; 11dcc <error@@Base+0x134>
   11d8c:	add	r3, pc, r3
   11d90:	ldr	r2, [pc, #56]	; 11dd0 <error@@Base+0x138>
   11d94:	ldr	r2, [r3, r2]
   11d98:	ldr	r0, [r2]
   11d9c:	ldr	r2, [pc, #48]	; 11dd4 <error@@Base+0x13c>
   11da0:	ldr	r3, [r3, r2]
   11da4:	ldr	r2, [r3]
   11da8:	ldr	r3, [fp, #-12]
   11dac:	str	r3, [sp]
   11db0:	ldr	r3, [fp, #-8]
   11db4:	ldr	r1, [pc, #28]	; 11dd8 <error@@Base+0x140>
   11db8:	add	r1, pc, r1
   11dbc:	bl	10834 <fprintf@plt>
   11dc0:	nop			; (mov r0, r0)
   11dc4:	sub	sp, fp, #4
   11dc8:	pop	{fp, pc}
   11dcc:	andeq	r2, r1, ip, ror #4
   11dd0:	andeq	r0, r0, r8, ror r0
   11dd4:	andeq	r0, r0, r0, lsl #1
   11dd8:	andeq	r1, r0, r8, lsr sl
   11ddc:	andeq	r0, r0, r0
   11de0:	push	{fp}		; (str fp, [sp, #-4]!)
   11de4:	add	fp, sp, #0
   11de8:	sub	sp, sp, #20
   11dec:	str	r0, [fp, #-8]
   11df0:	str	r1, [fp, #-12]
   11df4:	str	r2, [fp, #-16]
   11df8:	ldr	r3, [fp, #-8]
   11dfc:	ldr	r2, [r3]
   11e00:	ldr	r3, [fp, #-12]
   11e04:	add	r2, r2, r3
   11e08:	ldr	r3, [fp, #-8]
   11e0c:	str	r2, [r3]
   11e10:	ldr	r3, [fp, #-8]
   11e14:	ldr	r2, [r3, #4]
   11e18:	ldr	r3, [fp, #-16]
   11e1c:	add	r2, r2, r3
   11e20:	ldr	r3, [fp, #-8]
   11e24:	str	r2, [r3, #4]
   11e28:	nop			; (mov r0, r0)
   11e2c:	add	sp, fp, #0
   11e30:	pop	{fp}		; (ldr fp, [sp], #4)
   11e34:	bx	lr
   11e38:	push	{fp, lr}
   11e3c:	add	fp, sp, #4
   11e40:	sub	sp, sp, #24
   11e44:	str	r0, [fp, #-16]
   11e48:	str	r1, [fp, #-20]	; 0xffffffec
   11e4c:	str	r2, [fp, #-24]	; 0xffffffe8
   11e50:	str	r3, [fp, #-28]	; 0xffffffe4
   11e54:	ldr	r1, [fp, #-20]	; 0xffffffec
   11e58:	ldr	r0, [fp, #-16]
   11e5c:	bl	13294 <error@@Base+0x15fc>
   11e60:	str	r0, [fp, #-8]
   11e64:	ldr	r3, [fp, #-8]
   11e68:	cmp	r3, #0
   11e6c:	bne	11ea4 <error@@Base+0x20c>
   11e70:	mov	r1, #20
   11e74:	mov	r0, #1
   11e78:	bl	11144 <abort@plt+0x8b0>
   11e7c:	str	r0, [fp, #-8]
   11e80:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e84:	bl	107bc <strdup@plt>
   11e88:	mov	r3, r0
   11e8c:	mov	r2, r3
   11e90:	ldr	r3, [fp, #-8]
   11e94:	str	r2, [r3, #8]
   11e98:	ldr	r1, [fp, #-8]
   11e9c:	ldr	r0, [fp, #-16]
   11ea0:	bl	13368 <error@@Base+0x16d0>
   11ea4:	ldr	r3, [fp, #-8]
   11ea8:	add	r3, r3, #12
   11eac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11eb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11eb4:	mov	r0, r3
   11eb8:	bl	11de0 <error@@Base+0x148>
   11ebc:	nop			; (mov r0, r0)
   11ec0:	sub	sp, fp, #4
   11ec4:	pop	{fp, pc}
   11ec8:	push	{fp, lr}
   11ecc:	add	fp, sp, #4
   11ed0:	sub	sp, sp, #8
   11ed4:	str	r0, [fp, #-8]
   11ed8:	ldr	r2, [fp, #-8]
   11edc:	mov	r1, #99	; 0x63
   11ee0:	ldr	r3, [pc, #40]	; 11f10 <error@@Base+0x278>
   11ee4:	add	r3, pc, r3
   11ee8:	mov	r0, r3
   11eec:	bl	107b0 <fgets@plt>
   11ef0:	mov	r3, r0
   11ef4:	cmp	r3, #0
   11ef8:	movne	r3, #1
   11efc:	moveq	r3, #0
   11f00:	uxtb	r3, r3
   11f04:	mov	r0, r3
   11f08:	sub	sp, fp, #4
   11f0c:	pop	{fp, pc}
   11f10:	andeq	r2, r1, ip, asr #3
   11f14:	push	{fp, lr}
   11f18:	add	fp, sp, #4
   11f1c:	sub	sp, sp, #8
   11f20:	str	r0, [fp, #-8]
   11f24:	str	r1, [fp, #-12]
   11f28:	ldr	r0, [fp, #-8]
   11f2c:	bl	11ec8 <error@@Base+0x230>
   11f30:	mov	r3, r0
   11f34:	cmp	r3, #0
   11f38:	beq	11f70 <error@@Base+0x2d8>
   11f3c:	ldr	r2, [fp, #-12]
   11f40:	ldr	r3, [pc, #60]	; 11f84 <error@@Base+0x2ec>
   11f44:	add	r3, pc, r3
   11f48:	mov	r1, r3
   11f4c:	ldr	r3, [pc, #52]	; 11f88 <error@@Base+0x2f0>
   11f50:	add	r3, pc, r3
   11f54:	mov	r0, r3
   11f58:	bl	1084c <__isoc99_sscanf@plt>
   11f5c:	mov	r3, r0
   11f60:	cmp	r3, #1
   11f64:	bne	11f70 <error@@Base+0x2d8>
   11f68:	mov	r3, #1
   11f6c:	b	11f74 <error@@Base+0x2dc>
   11f70:	mov	r3, #0
   11f74:	uxtb	r3, r3
   11f78:	mov	r0, r3
   11f7c:	sub	sp, fp, #4
   11f80:	pop	{fp, pc}
   11f84:			; <UNDEFINED> instruction: 0x000018bc
   11f88:	andeq	r2, r1, r0, ror #2
   11f8c:	push	{fp, lr}
   11f90:	add	fp, sp, #4
   11f94:	sub	sp, sp, #16
   11f98:	str	r0, [fp, #-8]
   11f9c:	str	r1, [fp, #-12]
   11fa0:	str	r2, [fp, #-16]
   11fa4:	ldr	r0, [fp, #-8]
   11fa8:	bl	11ec8 <error@@Base+0x230>
   11fac:	mov	r3, r0
   11fb0:	cmp	r3, #0
   11fb4:	beq	11fe8 <error@@Base+0x350>
   11fb8:	ldr	r3, [fp, #-16]
   11fbc:	ldr	r2, [fp, #-12]
   11fc0:	ldr	r1, [pc, #52]	; 11ffc <error@@Base+0x364>
   11fc4:	add	r1, pc, r1
   11fc8:	ldr	r0, [pc, #48]	; 12000 <error@@Base+0x368>
   11fcc:	add	r0, pc, r0
   11fd0:	bl	1084c <__isoc99_sscanf@plt>
   11fd4:	mov	r3, r0
   11fd8:	cmp	r3, #2
   11fdc:	bne	11fe8 <error@@Base+0x350>
   11fe0:	mov	r3, #1
   11fe4:	b	11fec <error@@Base+0x354>
   11fe8:	mov	r3, #0
   11fec:	uxtb	r3, r3
   11ff0:	mov	r0, r3
   11ff4:	sub	sp, fp, #4
   11ff8:	pop	{fp, pc}
   11ffc:	andeq	r1, r0, r0, asr #16
   12000:	andeq	r2, r1, r4, ror #1
   12004:	push	{fp, lr}
   12008:	add	fp, sp, #4
   1200c:	sub	sp, sp, #24
   12010:	str	r0, [fp, #-24]	; 0xffffffe8
   12014:	str	r1, [fp, #-28]	; 0xffffffe4
   12018:	mov	r3, #0
   1201c:	str	r3, [fp, #-12]
   12020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12024:	bl	11ec8 <error@@Base+0x230>
   12028:	mov	r3, r0
   1202c:	cmp	r3, #0
   12030:	beq	120e8 <error@@Base+0x450>
   12034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12038:	bl	11ec8 <error@@Base+0x230>
   1203c:	mov	r3, r0
   12040:	cmp	r3, #0
   12044:	beq	120e8 <error@@Base+0x450>
   12048:	b	120c8 <error@@Base+0x430>
   1204c:	ldr	r3, [pc, #164]	; 120f8 <error@@Base+0x460>
   12050:	add	r3, pc, r3
   12054:	add	r0, r3, #29
   12058:	bl	1087c <atoi@plt>
   1205c:	str	r0, [fp, #-8]
   12060:	ldr	r3, [fp, #-8]
   12064:	cmp	r3, #0
   12068:	bne	120a8 <error@@Base+0x410>
   1206c:	ldr	r3, [pc, #136]	; 120fc <error@@Base+0x464>
   12070:	add	r3, pc, r3
   12074:	mov	r1, r3
   12078:	ldr	r3, [pc, #128]	; 12100 <error@@Base+0x468>
   1207c:	add	r3, pc, r3
   12080:	add	r0, r3, #29
   12084:	bl	10780 <strcmp@plt>
   12088:	mov	r3, r0
   1208c:	cmp	r3, #0
   12090:	bne	120a0 <error@@Base+0x408>
   12094:	ldr	r3, [fp, #-16]
   12098:	str	r3, [fp, #-12]
   1209c:	b	120a8 <error@@Base+0x410>
   120a0:	mov	r3, #11
   120a4:	str	r3, [fp, #-8]
   120a8:	ldr	r3, [fp, #-8]
   120ac:	lsl	r3, r3, #3
   120b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   120b4:	add	r3, r2, r3
   120b8:	ldr	r1, [fp, #-16]
   120bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   120c0:	mov	r0, r3
   120c4:	bl	11de0 <error@@Base+0x148>
   120c8:	sub	r2, fp, #20
   120cc:	sub	r3, fp, #16
   120d0:	mov	r1, r3
   120d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120d8:	bl	11f8c <error@@Base+0x2f4>
   120dc:	mov	r3, r0
   120e0:	cmp	r3, #0
   120e4:	bne	1204c <error@@Base+0x3b4>
   120e8:	ldr	r3, [fp, #-12]
   120ec:	mov	r0, r3
   120f0:	sub	sp, fp, #4
   120f4:	pop	{fp, pc}
   120f8:	andeq	r2, r1, r0, rrx
   120fc:	muleq	r0, ip, r7
   12100:	andeq	r2, r1, r4, lsr r0
   12104:	push	{fp, lr}
   12108:	add	fp, sp, #4
   1210c:	sub	sp, sp, #16
   12110:	str	r0, [fp, #-16]
   12114:	str	r1, [fp, #-20]	; 0xffffffec
   12118:	ldr	r0, [fp, #-16]
   1211c:	bl	11ec8 <error@@Base+0x230>
   12120:	mov	r3, r0
   12124:	cmp	r3, #0
   12128:	beq	121a8 <error@@Base+0x510>
   1212c:	ldr	r0, [fp, #-16]
   12130:	bl	11ec8 <error@@Base+0x230>
   12134:	mov	r3, r0
   12138:	cmp	r3, #0
   1213c:	beq	121a8 <error@@Base+0x510>
   12140:	b	12188 <error@@Base+0x4f0>
   12144:	ldr	r3, [pc, #104]	; 121b4 <error@@Base+0x51c>
   12148:	add	r3, pc, r3
   1214c:	mov	r0, r3
   12150:	bl	10828 <strlen@plt>
   12154:	mov	r3, r0
   12158:	sub	r3, r3, #1
   1215c:	ldr	r2, [pc, #84]	; 121b8 <error@@Base+0x520>
   12160:	add	r2, pc, r2
   12164:	mov	r1, #0
   12168:	strb	r1, [r2, r3]
   1216c:	ldr	r2, [fp, #-8]
   12170:	ldr	r3, [fp, #-12]
   12174:	ldr	r1, [pc, #64]	; 121bc <error@@Base+0x524>
   12178:	add	r1, pc, r1
   1217c:	add	r1, r1, #29
   12180:	ldr	r0, [fp, #-20]	; 0xffffffec
   12184:	bl	11e38 <error@@Base+0x1a0>
   12188:	sub	r2, fp, #12
   1218c:	sub	r3, fp, #8
   12190:	mov	r1, r3
   12194:	ldr	r0, [fp, #-16]
   12198:	bl	11f8c <error@@Base+0x2f4>
   1219c:	mov	r3, r0
   121a0:	cmp	r3, #0
   121a4:	bne	12144 <error@@Base+0x4ac>
   121a8:	nop			; (mov r0, r0)
   121ac:	sub	sp, fp, #4
   121b0:	pop	{fp, pc}
   121b4:	andeq	r1, r1, r8, ror #30
   121b8:	andeq	r1, r1, r0, asr pc
   121bc:	andeq	r1, r1, r8, lsr pc
   121c0:	push	{fp, lr}
   121c4:	add	fp, sp, #4
   121c8:	sub	sp, sp, #32
   121cc:	str	r0, [fp, #-32]	; 0xffffffe0
   121d0:	str	r1, [fp, #-36]	; 0xffffffdc
   121d4:	ldr	r3, [pc, #500]	; 123d0 <error@@Base+0x738>
   121d8:	add	r3, pc, r3
   121dc:	mov	r1, r3
   121e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   121e4:	bl	11284 <abort@plt+0x9f0>
   121e8:	str	r0, [fp, #-8]
   121ec:	ldr	r0, [fp, #-8]
   121f0:	bl	11ec8 <error@@Base+0x230>
   121f4:	mov	r3, r0
   121f8:	cmp	r3, #0
   121fc:	beq	12388 <error@@Base+0x6f0>
   12200:	mov	r2, #45	; 0x2d
   12204:	ldr	r3, [pc, #456]	; 123d4 <error@@Base+0x73c>
   12208:	add	r3, pc, r3
   1220c:	mov	r1, r3
   12210:	ldr	r3, [pc, #448]	; 123d8 <error@@Base+0x740>
   12214:	add	r3, pc, r3
   12218:	mov	r0, r3
   1221c:	bl	10888 <strncmp@plt>
   12220:	mov	r3, r0
   12224:	cmp	r3, #0
   12228:	bne	12388 <error@@Base+0x6f0>
   1222c:	ldr	r0, [fp, #-8]
   12230:	bl	11ec8 <error@@Base+0x230>
   12234:	mov	r3, r0
   12238:	cmp	r3, #0
   1223c:	beq	12388 <error@@Base+0x6f0>
   12240:	ldr	r3, [pc, #404]	; 123dc <error@@Base+0x744>
   12244:	add	r3, pc, r3
   12248:	mov	r1, r3
   1224c:	ldr	r3, [pc, #396]	; 123e0 <error@@Base+0x748>
   12250:	add	r3, pc, r3
   12254:	mov	r0, r3
   12258:	bl	10780 <strcmp@plt>
   1225c:	mov	r3, r0
   12260:	cmp	r3, #0
   12264:	bne	12388 <error@@Base+0x6f0>
   12268:	sub	r3, fp, #20
   1226c:	mov	r1, r3
   12270:	ldr	r0, [fp, #-8]
   12274:	bl	11f14 <error@@Base+0x27c>
   12278:	mov	r3, r0
   1227c:	cmp	r3, #0
   12280:	beq	12388 <error@@Base+0x6f0>
   12284:	sub	r3, fp, #24
   12288:	mov	r1, r3
   1228c:	ldr	r0, [fp, #-8]
   12290:	bl	11f14 <error@@Base+0x27c>
   12294:	mov	r3, r0
   12298:	cmp	r3, #0
   1229c:	beq	12388 <error@@Base+0x6f0>
   122a0:	ldr	r0, [fp, #-8]
   122a4:	bl	11ec8 <error@@Base+0x230>
   122a8:	mov	r3, r0
   122ac:	cmp	r3, #0
   122b0:	beq	12388 <error@@Base+0x6f0>
   122b4:	ldr	r0, [fp, #-8]
   122b8:	bl	11ec8 <error@@Base+0x230>
   122bc:	mov	r3, r0
   122c0:	cmp	r3, #0
   122c4:	beq	12388 <error@@Base+0x6f0>
   122c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   122d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   122d4:	mov	r0, r3
   122d8:	bl	11de0 <error@@Base+0x148>
   122dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122e0:	add	r3, r3, #8
   122e4:	mov	r1, r3
   122e8:	ldr	r0, [fp, #-8]
   122ec:	bl	12004 <error@@Base+0x36c>
   122f0:	str	r0, [fp, #-12]
   122f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   122f8:	add	r3, r3, #416	; 0x1a0
   122fc:	mov	r1, r3
   12300:	ldr	r0, [fp, #-8]
   12304:	bl	12004 <error@@Base+0x36c>
   12308:	str	r0, [fp, #-16]
   1230c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12310:	add	r3, r3, #824	; 0x338
   12314:	mov	r1, r3
   12318:	ldr	r0, [fp, #-8]
   1231c:	bl	12004 <error@@Base+0x36c>
   12320:	ldr	r3, [fp, #-20]	; 0xffffffec
   12324:	cmp	r3, #0
   12328:	ble	123b8 <error@@Base+0x720>
   1232c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12330:	add	r3, r3, #920	; 0x398
   12334:	mov	r1, r3
   12338:	ldr	r0, [fp, #-8]
   1233c:	bl	12004 <error@@Base+0x36c>
   12340:	ldr	r3, [fp, #-12]
   12344:	cmp	r3, #0
   12348:	ble	12360 <error@@Base+0x6c8>
   1234c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12350:	add	r3, r3, #992	; 0x3e0
   12354:	mov	r1, r3
   12358:	ldr	r0, [fp, #-8]
   1235c:	bl	12104 <error@@Base+0x46c>
   12360:	ldr	r3, [fp, #-16]
   12364:	cmp	r3, #0
   12368:	ble	123b8 <error@@Base+0x720>
   1236c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12370:	add	r3, r3, #9024	; 0x2340
   12374:	add	r3, r3, #24
   12378:	mov	r1, r3
   1237c:	ldr	r0, [fp, #-8]
   12380:	bl	12104 <error@@Base+0x46c>
   12384:	b	123b8 <error@@Base+0x720>
   12388:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1238c:	cmp	r3, #0
   12390:	beq	1239c <error@@Base+0x704>
   12394:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12398:	b	123a4 <error@@Base+0x70c>
   1239c:	ldr	r3, [pc, #64]	; 123e4 <error@@Base+0x74c>
   123a0:	add	r3, pc, r3
   123a4:	mov	r1, r3
   123a8:	ldr	r3, [pc, #56]	; 123e8 <error@@Base+0x750>
   123ac:	add	r3, pc, r3
   123b0:	mov	r0, r3
   123b4:	bl	11d00 <error@@Base+0x68>
   123b8:	nop			; (mov r0, r0)
   123bc:	ldr	r0, [fp, #-8]
   123c0:	bl	11358 <abort@plt+0xac4>
   123c4:	nop			; (mov r0, r0)
   123c8:	sub	sp, fp, #4
   123cc:	pop	{fp, pc}
   123d0:	andeq	r1, r0, ip, lsr r6
   123d4:	andeq	r1, r0, r0, lsl r6
   123d8:	muleq	r1, ip, lr
   123dc:	andeq	r1, r0, r4, lsl #12
   123e0:	andeq	r1, r1, r0, ror #28
   123e4:	ldrdeq	r1, [r0], -r8
   123e8:	ldrdeq	r1, [r0], -r4
   123ec:	push	{fp, lr}
   123f0:	add	fp, sp, #4
   123f4:	sub	sp, sp, #8
   123f8:	str	r0, [fp, #-8]
   123fc:	str	r1, [fp, #-12]
   12400:	ldr	r3, [fp, #-12]
   12404:	ldr	r3, [r3]
   12408:	cmp	r3, #0
   1240c:	bne	1242c <error@@Base+0x794>
   12410:	ldr	r3, [fp, #-8]
   12414:	mov	r2, #8
   12418:	mov	r1, #1
   1241c:	ldr	r0, [pc, #108]	; 12490 <error@@Base+0x7f8>
   12420:	add	r0, pc, r0
   12424:	bl	107e0 <fwrite@plt>
   12428:	b	12478 <error@@Base+0x7e0>
   1242c:	ldr	r3, [fp, #-12]
   12430:	ldr	r2, [r3]
   12434:	ldr	r3, [fp, #-12]
   12438:	ldr	r3, [r3, #4]
   1243c:	sub	r3, r2, r3
   12440:	vmov	s15, r3
   12444:	vcvt.f64.s32	d7, s15
   12448:	vldr	d6, [pc, #56]	; 12488 <error@@Base+0x7f0>
   1244c:	vmul.f64	d6, d7, d6
   12450:	ldr	r3, [fp, #-12]
   12454:	ldr	r3, [r3]
   12458:	vmov	s15, r3
   1245c:	vcvt.f64.s32	d7, s15
   12460:	vdiv.f64	d5, d6, d7
   12464:	vmov	r2, r3, d5
   12468:	ldr	r1, [pc, #36]	; 12494 <error@@Base+0x7fc>
   1246c:	add	r1, pc, r1
   12470:	ldr	r0, [fp, #-8]
   12474:	bl	10834 <fprintf@plt>
   12478:	nop			; (mov r0, r0)
   1247c:	sub	sp, fp, #4
   12480:	pop	{fp, pc}
   12484:	nop			; (mov r0, r0)
   12488:	andeq	r0, r0, r0
   1248c:	subsmi	r0, r9, r0
   12490:	andeq	r1, r0, r4, ror r4
   12494:	andeq	r1, r0, r4, lsr r4
   12498:	push	{fp, lr}
   1249c:	add	fp, sp, #4
   124a0:	sub	sp, sp, #8
   124a4:	str	r0, [fp, #-8]
   124a8:	str	r1, [fp, #-12]
   124ac:	ldr	r3, [fp, #-12]
   124b0:	cmp	r3, #0
   124b4:	beq	124e8 <error@@Base+0x850>
   124b8:	ldr	r3, [fp, #-12]
   124bc:	ldr	r2, [r3]
   124c0:	ldr	r3, [fp, #-12]
   124c4:	ldr	r3, [r3, #4]
   124c8:	ldr	r1, [pc, #84]	; 12524 <error@@Base+0x88c>
   124cc:	add	r1, pc, r1
   124d0:	ldr	r0, [fp, #-8]
   124d4:	bl	10834 <fprintf@plt>
   124d8:	ldr	r1, [fp, #-12]
   124dc:	ldr	r0, [fp, #-8]
   124e0:	bl	123ec <error@@Base+0x754>
   124e4:	b	12500 <error@@Base+0x868>
   124e8:	ldr	r3, [fp, #-8]
   124ec:	mov	r2, #26
   124f0:	mov	r1, #1
   124f4:	ldr	r0, [pc, #44]	; 12528 <error@@Base+0x890>
   124f8:	add	r0, pc, r0
   124fc:	bl	107e0 <fwrite@plt>
   12500:	ldr	r3, [fp, #-8]
   12504:	mov	r2, #3
   12508:	mov	r1, #1
   1250c:	ldr	r0, [pc, #24]	; 1252c <error@@Base+0x894>
   12510:	add	r0, pc, r0
   12514:	bl	107e0 <fwrite@plt>
   12518:	nop			; (mov r0, r0)
   1251c:	sub	sp, fp, #4
   12520:	pop	{fp, pc}
   12524:	ldrdeq	r1, [r0], -ip
   12528:			; <UNDEFINED> instruction: 0x000013bc
   1252c:	andeq	r1, r0, r0, asr #7
   12530:	push	{fp, lr}
   12534:	add	fp, sp, #4
   12538:	sub	sp, sp, #32
   1253c:	str	r0, [fp, #-16]
   12540:	str	r1, [fp, #-20]	; 0xffffffec
   12544:	mov	r1, r2
   12548:	str	r3, [fp, #-28]	; 0xffffffe4
   1254c:	ldr	r2, [fp, #4]
   12550:	ldr	r3, [fp, #8]
   12554:	strh	r1, [fp, #-24]	; 0xffffffe8
   12558:	strb	r2, [fp, #-32]	; 0xffffffe0
   1255c:	strb	r3, [fp, #-36]	; 0xffffffdc
   12560:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12564:	ldr	r3, [pc, #376]	; 126e4 <error@@Base+0xa4c>
   12568:	add	r3, pc, r3
   1256c:	mov	r1, r3
   12570:	ldr	r0, [fp, #-16]
   12574:	bl	10834 <fprintf@plt>
   12578:	mov	r1, #0
   1257c:	ldr	r0, [fp, #-16]
   12580:	bl	12498 <error@@Base+0x800>
   12584:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   12588:	cmp	r3, #0
   1258c:	beq	1259c <error@@Base+0x904>
   12590:	ldr	r3, [pc, #336]	; 126e8 <error@@Base+0xa50>
   12594:	add	r3, pc, r3
   12598:	b	125a4 <error@@Base+0x90c>
   1259c:	ldr	r3, [pc, #328]	; 126ec <error@@Base+0xa54>
   125a0:	add	r3, pc, r3
   125a4:	mov	r2, r3
   125a8:	ldr	r3, [pc, #320]	; 126f0 <error@@Base+0xa58>
   125ac:	add	r3, pc, r3
   125b0:	mov	r1, r3
   125b4:	ldr	r0, [fp, #-16]
   125b8:	bl	10834 <fprintf@plt>
   125bc:	mov	r3, #1
   125c0:	strh	r3, [fp, #-6]
   125c4:	b	12630 <error@@Base+0x998>
   125c8:	ldrsh	r3, [fp, #-6]
   125cc:	lsl	r3, r3, #3
   125d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   125d4:	add	r3, r2, r3
   125d8:	ldr	r3, [r3]
   125dc:	cmp	r3, #0
   125e0:	ble	1261c <error@@Base+0x984>
   125e4:	ldrsh	r3, [fp, #-6]
   125e8:	lsl	r3, r3, #3
   125ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   125f0:	add	r3, r2, r3
   125f4:	mov	r1, r3
   125f8:	ldr	r0, [fp, #-16]
   125fc:	bl	12498 <error@@Base+0x800>
   12600:	ldrsh	r3, [fp, #-6]
   12604:	mov	r2, r3
   12608:	ldr	r3, [pc, #228]	; 126f4 <error@@Base+0xa5c>
   1260c:	add	r3, pc, r3
   12610:	mov	r1, r3
   12614:	ldr	r0, [fp, #-16]
   12618:	bl	10834 <fprintf@plt>
   1261c:	ldrsh	r3, [fp, #-6]
   12620:	uxth	r3, r3
   12624:	add	r3, r3, #1
   12628:	uxth	r3, r3
   1262c:	strh	r3, [fp, #-6]
   12630:	ldrsh	r2, [fp, #-6]
   12634:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12638:	cmp	r2, r3
   1263c:	ble	125c8 <error@@Base+0x930>
   12640:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   12644:	cmp	r3, #0
   12648:	beq	126a8 <error@@Base+0xa10>
   1264c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12650:	add	r3, r3, #1
   12654:	lsl	r3, r3, #3
   12658:	ldr	r2, [fp, #-20]	; 0xffffffec
   1265c:	add	r3, r2, r3
   12660:	ldr	r3, [r3]
   12664:	cmp	r3, #0
   12668:	ble	126a8 <error@@Base+0xa10>
   1266c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12670:	add	r3, r3, #1
   12674:	lsl	r3, r3, #3
   12678:	ldr	r2, [fp, #-20]	; 0xffffffec
   1267c:	add	r3, r2, r3
   12680:	mov	r1, r3
   12684:	ldr	r0, [fp, #-16]
   12688:	bl	12498 <error@@Base+0x800>
   1268c:	ldrsh	r3, [fp, #-24]	; 0xffffffe8
   12690:	mov	r2, r3
   12694:	ldr	r3, [pc, #92]	; 126f8 <error@@Base+0xa60>
   12698:	add	r3, pc, r3
   1269c:	mov	r1, r3
   126a0:	ldr	r0, [fp, #-16]
   126a4:	bl	10834 <fprintf@plt>
   126a8:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   126ac:	cmp	r3, #0
   126b0:	beq	126d8 <error@@Base+0xa40>
   126b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   126b8:	ldr	r0, [fp, #-16]
   126bc:	bl	12498 <error@@Base+0x800>
   126c0:	ldr	r3, [fp, #-16]
   126c4:	mov	r2, #7
   126c8:	mov	r1, #1
   126cc:	ldr	r0, [pc, #40]	; 126fc <error@@Base+0xa64>
   126d0:	add	r0, pc, r0
   126d4:	bl	107e0 <fwrite@plt>
   126d8:	nop			; (mov r0, r0)
   126dc:	sub	sp, fp, #4
   126e0:	pop	{fp, pc}
   126e4:	andeq	r1, r0, ip, ror #6
   126e8:	andeq	r1, r0, r8, asr #6
   126ec:	andeq	r1, r0, r4, asr #6
   126f0:	andeq	r1, r0, r0, asr #6
   126f4:	andeq	r1, r0, r4, ror #5
   126f8:	andeq	r1, r0, r4, ror #4
   126fc:	andeq	r1, r0, ip, lsr r1
   12700:	push	{fp, lr}
   12704:	add	fp, sp, #4
   12708:	sub	sp, sp, #8
   1270c:	str	r0, [fp, #-8]
   12710:	str	r1, [fp, #-12]
   12714:	ldr	r3, [fp, #-8]
   12718:	ldr	r2, [r3, #8]
   1271c:	ldr	r3, [fp, #-12]
   12720:	ldr	r3, [r3, #8]
   12724:	mov	r1, r3
   12728:	mov	r0, r2
   1272c:	bl	1119c <abort@plt+0x908>
   12730:	mov	r3, r0
   12734:	mov	r0, r3
   12738:	sub	sp, fp, #4
   1273c:	pop	{fp, pc}
   12740:	push	{fp, lr}
   12744:	add	fp, sp, #4
   12748:	sub	sp, sp, #24
   1274c:	str	r0, [fp, #-16]
   12750:	str	r1, [fp, #-20]	; 0xffffffec
   12754:	str	r2, [fp, #-24]	; 0xffffffe8
   12758:	ldr	r0, [fp, #-20]	; 0xffffffec
   1275c:	bl	13448 <error@@Base+0x17b0>
   12760:	ldr	r3, [fp, #-20]	; 0xffffffec
   12764:	add	r3, r3, #4096	; 0x1000
   12768:	ldr	r0, [r3, #3956]	; 0xf74
   1276c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12770:	add	r3, r3, #4096	; 0x1000
   12774:	ldr	r3, [r3, #3952]	; 0xf70
   12778:	ldr	r2, [pc, #216]	; 12858 <error@@Base+0xbc0>
   1277c:	add	r2, pc, r2
   12780:	mov	r1, r3
   12784:	bl	130d8 <error@@Base+0x1440>
   12788:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1278c:	ldr	r3, [pc, #200]	; 1285c <error@@Base+0xbc4>
   12790:	add	r3, pc, r3
   12794:	mov	r1, r3
   12798:	ldr	r0, [fp, #-16]
   1279c:	bl	10834 <fprintf@plt>
   127a0:	mov	r1, #0
   127a4:	ldr	r0, [fp, #-16]
   127a8:	bl	12498 <error@@Base+0x800>
   127ac:	ldr	r1, [fp, #-16]
   127b0:	mov	r0, #10
   127b4:	bl	10864 <fputc@plt>
   127b8:	mov	r3, #0
   127bc:	str	r3, [fp, #-8]
   127c0:	b	12834 <error@@Base+0xb9c>
   127c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   127c8:	add	r3, r3, #4096	; 0x1000
   127cc:	ldr	r2, [r3, #3952]	; 0xf70
   127d0:	ldr	r3, [fp, #-8]
   127d4:	lsl	r3, r3, #2
   127d8:	add	r3, r2, r3
   127dc:	ldr	r3, [r3]
   127e0:	add	r3, r3, #12
   127e4:	mov	r1, r3
   127e8:	ldr	r0, [fp, #-16]
   127ec:	bl	12498 <error@@Base+0x800>
   127f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   127f4:	add	r3, r3, #4096	; 0x1000
   127f8:	ldr	r2, [r3, #3952]	; 0xf70
   127fc:	ldr	r3, [fp, #-8]
   12800:	lsl	r3, r3, #2
   12804:	add	r3, r2, r3
   12808:	ldr	r3, [r3]
   1280c:	ldr	r3, [r3, #8]
   12810:	mov	r2, r3
   12814:	ldr	r3, [pc, #68]	; 12860 <error@@Base+0xbc8>
   12818:	add	r3, pc, r3
   1281c:	mov	r1, r3
   12820:	ldr	r0, [fp, #-16]
   12824:	bl	10834 <fprintf@plt>
   12828:	ldr	r3, [fp, #-8]
   1282c:	add	r3, r3, #1
   12830:	str	r3, [fp, #-8]
   12834:	ldr	r3, [fp, #-20]	; 0xffffffec
   12838:	add	r3, r3, #4096	; 0x1000
   1283c:	ldr	r2, [r3, #3956]	; 0xf74
   12840:	ldr	r3, [fp, #-8]
   12844:	cmp	r2, r3
   12848:	bgt	127c4 <error@@Base+0xb2c>
   1284c:	nop			; (mov r0, r0)
   12850:	sub	sp, fp, #4
   12854:	pop	{fp, pc}
   12858:			; <UNDEFINED> instruction: 0xffffff7c
   1285c:	andeq	r1, r0, r4, asr #2
   12860:	ldrdeq	r1, [r0], -r4
   12864:	push	{fp, lr}
   12868:	add	fp, sp, #4
   1286c:	sub	sp, sp, #24
   12870:	str	r0, [fp, #-16]
   12874:	str	r1, [fp, #-20]	; 0xffffffec
   12878:	ldr	r3, [pc, #456]	; 12a48 <error@@Base+0xdb0>
   1287c:	add	r3, pc, r3
   12880:	mov	r1, r3
   12884:	ldr	r0, [fp, #-20]	; 0xffffffec
   12888:	bl	11284 <abort@plt+0x9f0>
   1288c:	str	r0, [fp, #-8]
   12890:	ldr	r3, [pc, #436]	; 12a4c <error@@Base+0xdb4>
   12894:	add	r3, pc, r3
   12898:	ldr	r2, [pc, #432]	; 12a50 <error@@Base+0xdb8>
   1289c:	add	r2, pc, r2
   128a0:	ldr	r1, [pc, #428]	; 12a54 <error@@Base+0xdbc>
   128a4:	add	r1, pc, r1
   128a8:	ldr	r0, [fp, #-8]
   128ac:	bl	10834 <fprintf@plt>
   128b0:	ldr	r3, [fp, #-16]
   128b4:	ldr	r3, [r3]
   128b8:	mov	r2, r3
   128bc:	ldr	r3, [pc, #404]	; 12a58 <error@@Base+0xdc0>
   128c0:	add	r3, pc, r3
   128c4:	mov	r1, r3
   128c8:	ldr	r0, [fp, #-8]
   128cc:	bl	10834 <fprintf@plt>
   128d0:	ldr	r3, [fp, #-16]
   128d4:	ldr	r3, [r3, #4]
   128d8:	mov	r2, r3
   128dc:	ldr	r3, [pc, #376]	; 12a5c <error@@Base+0xdc4>
   128e0:	add	r3, pc, r3
   128e4:	mov	r1, r3
   128e8:	ldr	r0, [fp, #-8]
   128ec:	bl	10834 <fprintf@plt>
   128f0:	ldr	r3, [fp, #-16]
   128f4:	mov	r1, r3
   128f8:	ldr	r0, [fp, #-8]
   128fc:	bl	123ec <error@@Base+0x754>
   12900:	ldr	r3, [fp, #-8]
   12904:	mov	r2, #12
   12908:	mov	r1, #1
   1290c:	ldr	r0, [pc, #332]	; 12a60 <error@@Base+0xdc8>
   12910:	add	r0, pc, r0
   12914:	bl	107e0 <fwrite@plt>
   12918:	ldr	r3, [fp, #-16]
   1291c:	add	r1, r3, #8
   12920:	mov	r3, #1
   12924:	str	r3, [sp, #4]
   12928:	mov	r3, #0
   1292c:	str	r3, [sp]
   12930:	ldr	r3, [pc, #300]	; 12a64 <error@@Base+0xdcc>
   12934:	add	r3, pc, r3
   12938:	mov	r2, #50	; 0x32
   1293c:	ldr	r0, [fp, #-8]
   12940:	bl	12530 <error@@Base+0x898>
   12944:	ldr	r3, [fp, #-16]
   12948:	add	r1, r3, #416	; 0x1a0
   1294c:	mov	r3, #1
   12950:	str	r3, [sp, #4]
   12954:	mov	r3, #0
   12958:	str	r3, [sp]
   1295c:	ldr	r3, [pc, #260]	; 12a68 <error@@Base+0xdd0>
   12960:	add	r3, pc, r3
   12964:	mov	r2, #50	; 0x32
   12968:	ldr	r0, [fp, #-8]
   1296c:	bl	12530 <error@@Base+0x898>
   12970:	ldr	r3, [fp, #-16]
   12974:	add	r1, r3, #824	; 0x338
   12978:	mov	r3, #1
   1297c:	str	r3, [sp, #4]
   12980:	mov	r3, #1
   12984:	str	r3, [sp]
   12988:	ldr	r3, [pc, #220]	; 12a6c <error@@Base+0xdd4>
   1298c:	add	r3, pc, r3
   12990:	mov	r2, #10
   12994:	ldr	r0, [fp, #-8]
   12998:	bl	12530 <error@@Base+0x898>
   1299c:	ldr	r3, [fp, #-16]
   129a0:	ldr	r3, [r3]
   129a4:	cmp	r3, #0
   129a8:	ble	12a34 <error@@Base+0xd9c>
   129ac:	ldr	r3, [fp, #-16]
   129b0:	add	r1, r3, #920	; 0x398
   129b4:	mov	r3, #0
   129b8:	str	r3, [sp, #4]
   129bc:	mov	r3, #0
   129c0:	str	r3, [sp]
   129c4:	ldr	r3, [pc, #164]	; 12a70 <error@@Base+0xdd8>
   129c8:	add	r3, pc, r3
   129cc:	mov	r2, #8
   129d0:	ldr	r0, [fp, #-8]
   129d4:	bl	12530 <error@@Base+0x898>
   129d8:	ldr	r3, [fp, #-16]
   129dc:	ldr	r3, [r3, #8]
   129e0:	cmp	r3, #0
   129e4:	ble	12a04 <error@@Base+0xd6c>
   129e8:	ldr	r3, [fp, #-16]
   129ec:	add	r3, r3, #992	; 0x3e0
   129f0:	ldr	r2, [pc, #124]	; 12a74 <error@@Base+0xddc>
   129f4:	add	r2, pc, r2
   129f8:	mov	r1, r3
   129fc:	ldr	r0, [fp, #-8]
   12a00:	bl	12740 <error@@Base+0xaa8>
   12a04:	ldr	r3, [fp, #-16]
   12a08:	ldr	r3, [r3, #416]	; 0x1a0
   12a0c:	cmp	r3, #0
   12a10:	ble	12a34 <error@@Base+0xd9c>
   12a14:	ldr	r3, [fp, #-16]
   12a18:	add	r3, r3, #9024	; 0x2340
   12a1c:	add	r3, r3, #24
   12a20:	ldr	r2, [pc, #80]	; 12a78 <error@@Base+0xde0>
   12a24:	add	r2, pc, r2
   12a28:	mov	r1, r3
   12a2c:	ldr	r0, [fp, #-8]
   12a30:	bl	12740 <error@@Base+0xaa8>
   12a34:	ldr	r0, [fp, #-8]
   12a38:	bl	11358 <abort@plt+0xac4>
   12a3c:	nop			; (mov r0, r0)
   12a40:	sub	sp, fp, #4
   12a44:	pop	{fp, pc}
   12a48:	andeq	r1, r0, ip, lsl #1
   12a4c:			; <UNDEFINED> instruction: 0x00000fb4
   12a50:	andeq	r0, r0, ip, ror pc
   12a54:	andeq	r1, r0, r8, rrx
   12a58:	andeq	r1, r0, r4, asr r0
   12a5c:	andeq	r1, r0, r4, asr #32
   12a60:	andeq	r1, r0, ip, lsr #32
   12a64:	andeq	r1, r0, r8, lsl r0
   12a68:	strdeq	r0, [r0], -r8
   12a6c:	ldrdeq	r0, [r0], -ip
   12a70:			; <UNDEFINED> instruction: 0x00000fb8
   12a74:	andeq	r0, r0, r8, asr pc
   12a78:	andeq	r0, r0, r4, lsr pc
   12a7c:	push	{fp}		; (str fp, [sp, #-4]!)
   12a80:	add	fp, sp, #0
   12a84:	sub	sp, sp, #12
   12a88:	str	r0, [fp, #-8]
   12a8c:	ldr	r3, [fp, #-8]
   12a90:	mov	r2, #0
   12a94:	str	r2, [r3, #4]
   12a98:	ldr	r3, [fp, #-8]
   12a9c:	ldr	r2, [r3, #4]
   12aa0:	ldr	r3, [fp, #-8]
   12aa4:	str	r2, [r3]
   12aa8:	ldr	r3, [fp, #-8]
   12aac:	mov	r2, #0
   12ab0:	str	r2, [r3, #8]
   12ab4:	ldr	r3, [fp, #-8]
   12ab8:	mov	r2, #0
   12abc:	str	r2, [r3, #12]
   12ac0:	nop			; (mov r0, r0)
   12ac4:	add	sp, fp, #0
   12ac8:	pop	{fp}		; (ldr fp, [sp], #4)
   12acc:	bx	lr
   12ad0:	push	{fp, lr}
   12ad4:	add	fp, sp, #4
   12ad8:	sub	sp, sp, #8
   12adc:	str	r0, [fp, #-8]
   12ae0:	ldr	r3, [fp, #-8]
   12ae4:	ldr	r3, [r3, #8]
   12ae8:	cmp	r3, #0
   12aec:	beq	12b0c <error@@Base+0xe74>
   12af0:	ldr	r3, [fp, #-8]
   12af4:	ldr	r3, [r3, #8]
   12af8:	mov	r0, r3
   12afc:	bl	107a4 <free@plt>
   12b00:	ldr	r3, [fp, #-8]
   12b04:	mov	r2, #0
   12b08:	str	r2, [r3, #8]
   12b0c:	nop			; (mov r0, r0)
   12b10:	sub	sp, fp, #4
   12b14:	pop	{fp, pc}
   12b18:	push	{fp, lr}
   12b1c:	add	fp, sp, #4
   12b20:	sub	sp, sp, #16
   12b24:	str	r0, [fp, #-8]
   12b28:	str	r1, [fp, #-12]
   12b2c:	str	r2, [fp, #-16]
   12b30:	str	r3, [fp, #-20]	; 0xffffffec
   12b34:	ldr	r3, [fp, #-16]
   12b38:	ldr	r2, [fp, #-12]
   12b3c:	str	r2, [r3]
   12b40:	ldr	r3, [fp, #-16]
   12b44:	ldr	r2, [fp, #-20]	; 0xffffffec
   12b48:	str	r2, [r3, #4]
   12b4c:	ldr	r3, [fp, #-12]
   12b50:	cmp	r3, #0
   12b54:	beq	12b68 <error@@Base+0xed0>
   12b58:	ldr	r3, [fp, #-12]
   12b5c:	ldr	r2, [fp, #-16]
   12b60:	str	r2, [r3, #4]
   12b64:	b	12b74 <error@@Base+0xedc>
   12b68:	ldr	r3, [fp, #-8]
   12b6c:	ldr	r2, [fp, #-16]
   12b70:	str	r2, [r3]
   12b74:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b78:	cmp	r3, #0
   12b7c:	beq	12b90 <error@@Base+0xef8>
   12b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   12b84:	ldr	r2, [fp, #-16]
   12b88:	str	r2, [r3]
   12b8c:	b	12b9c <error@@Base+0xf04>
   12b90:	ldr	r3, [fp, #-8]
   12b94:	ldr	r2, [fp, #-16]
   12b98:	str	r2, [r3, #4]
   12b9c:	ldr	r0, [fp, #-8]
   12ba0:	bl	12ad0 <error@@Base+0xe38>
   12ba4:	ldr	r3, [fp, #-8]
   12ba8:	ldr	r3, [r3, #12]
   12bac:	add	r2, r3, #1
   12bb0:	ldr	r3, [fp, #-8]
   12bb4:	str	r2, [r3, #12]
   12bb8:	nop			; (mov r0, r0)
   12bbc:	sub	sp, fp, #4
   12bc0:	pop	{fp, pc}
   12bc4:	push	{fp, lr}
   12bc8:	add	fp, sp, #4
   12bcc:	sub	sp, sp, #8
   12bd0:	str	r0, [fp, #-8]
   12bd4:	str	r1, [fp, #-12]
   12bd8:	ldr	r3, [fp, #-8]
   12bdc:	ldr	r3, [r3]
   12be0:	ldr	r2, [fp, #-12]
   12be4:	mov	r1, #0
   12be8:	ldr	r0, [fp, #-8]
   12bec:	bl	12b18 <error@@Base+0xe80>
   12bf0:	nop			; (mov r0, r0)
   12bf4:	sub	sp, fp, #4
   12bf8:	pop	{fp, pc}
   12bfc:	push	{fp, lr}
   12c00:	add	fp, sp, #4
   12c04:	sub	sp, sp, #8
   12c08:	str	r0, [fp, #-8]
   12c0c:	str	r1, [fp, #-12]
   12c10:	ldr	r3, [fp, #-8]
   12c14:	ldr	r1, [r3, #4]
   12c18:	mov	r3, #0
   12c1c:	ldr	r2, [fp, #-12]
   12c20:	ldr	r0, [fp, #-8]
   12c24:	bl	12b18 <error@@Base+0xe80>
   12c28:	nop			; (mov r0, r0)
   12c2c:	sub	sp, fp, #4
   12c30:	pop	{fp, pc}
   12c34:	push	{fp, lr}
   12c38:	add	fp, sp, #4
   12c3c:	sub	sp, sp, #16
   12c40:	str	r0, [fp, #-8]
   12c44:	str	r1, [fp, #-12]
   12c48:	str	r2, [fp, #-16]
   12c4c:	ldr	r3, [fp, #-16]
   12c50:	ldr	r1, [r3]
   12c54:	ldr	r3, [fp, #-16]
   12c58:	ldr	r2, [fp, #-12]
   12c5c:	ldr	r0, [fp, #-8]
   12c60:	bl	12b18 <error@@Base+0xe80>
   12c64:	nop			; (mov r0, r0)
   12c68:	sub	sp, fp, #4
   12c6c:	pop	{fp, pc}
   12c70:	push	{fp, lr}
   12c74:	add	fp, sp, #4
   12c78:	sub	sp, sp, #16
   12c7c:	str	r0, [fp, #-8]
   12c80:	str	r1, [fp, #-12]
   12c84:	str	r2, [fp, #-16]
   12c88:	ldr	r3, [fp, #-12]
   12c8c:	ldr	r3, [r3, #4]
   12c90:	ldr	r2, [fp, #-16]
   12c94:	ldr	r1, [fp, #-12]
   12c98:	ldr	r0, [fp, #-8]
   12c9c:	bl	12b18 <error@@Base+0xe80>
   12ca0:	nop			; (mov r0, r0)
   12ca4:	sub	sp, fp, #4
   12ca8:	pop	{fp, pc}
   12cac:	push	{fp, lr}
   12cb0:	add	fp, sp, #4
   12cb4:	sub	sp, sp, #8
   12cb8:	str	r0, [fp, #-8]
   12cbc:	str	r1, [fp, #-12]
   12cc0:	ldr	r3, [fp, #-12]
   12cc4:	ldr	r3, [r3]
   12cc8:	cmp	r3, #0
   12ccc:	beq	12ce8 <error@@Base+0x1050>
   12cd0:	ldr	r3, [fp, #-12]
   12cd4:	ldr	r3, [r3]
   12cd8:	ldr	r2, [fp, #-12]
   12cdc:	ldr	r2, [r2, #4]
   12ce0:	str	r2, [r3, #4]
   12ce4:	b	12cf8 <error@@Base+0x1060>
   12ce8:	ldr	r3, [fp, #-12]
   12cec:	ldr	r2, [r3, #4]
   12cf0:	ldr	r3, [fp, #-8]
   12cf4:	str	r2, [r3]
   12cf8:	ldr	r3, [fp, #-12]
   12cfc:	ldr	r3, [r3, #4]
   12d00:	cmp	r3, #0
   12d04:	beq	12d20 <error@@Base+0x1088>
   12d08:	ldr	r3, [fp, #-12]
   12d0c:	ldr	r3, [r3, #4]
   12d10:	ldr	r2, [fp, #-12]
   12d14:	ldr	r2, [r2]
   12d18:	str	r2, [r3]
   12d1c:	b	12d30 <error@@Base+0x1098>
   12d20:	ldr	r3, [fp, #-12]
   12d24:	ldr	r2, [r3]
   12d28:	ldr	r3, [fp, #-8]
   12d2c:	str	r2, [r3, #4]
   12d30:	ldr	r3, [fp, #-12]
   12d34:	mov	r2, #0
   12d38:	str	r2, [r3, #4]
   12d3c:	ldr	r3, [fp, #-12]
   12d40:	ldr	r2, [r3, #4]
   12d44:	ldr	r3, [fp, #-12]
   12d48:	str	r2, [r3]
   12d4c:	ldr	r0, [fp, #-8]
   12d50:	bl	12ad0 <error@@Base+0xe38>
   12d54:	ldr	r3, [fp, #-8]
   12d58:	ldr	r3, [r3, #12]
   12d5c:	sub	r2, r3, #1
   12d60:	ldr	r3, [fp, #-8]
   12d64:	str	r2, [r3, #12]
   12d68:	nop			; (mov r0, r0)
   12d6c:	sub	sp, fp, #4
   12d70:	pop	{fp, pc}
   12d74:	push	{fp, lr}
   12d78:	add	fp, sp, #4
   12d7c:	sub	sp, sp, #16
   12d80:	str	r0, [fp, #-16]
   12d84:	mov	r3, #0
   12d88:	str	r3, [fp, #-12]
   12d8c:	ldr	r3, [fp, #-16]
   12d90:	ldr	r3, [r3, #8]
   12d94:	cmp	r3, #0
   12d98:	bne	12e1c <error@@Base+0x1184>
   12d9c:	ldr	r3, [fp, #-16]
   12da0:	ldr	r3, [r3, #12]
   12da4:	cmp	r3, #0
   12da8:	beq	12e1c <error@@Base+0x1184>
   12dac:	ldr	r3, [fp, #-16]
   12db0:	ldr	r3, [r3, #12]
   12db4:	mov	r1, #4
   12db8:	mov	r0, r3
   12dbc:	bl	11144 <abort@plt+0x8b0>
   12dc0:	mov	r2, r0
   12dc4:	ldr	r3, [fp, #-16]
   12dc8:	str	r2, [r3, #8]
   12dcc:	ldr	r3, [fp, #-16]
   12dd0:	ldr	r3, [r3]
   12dd4:	str	r3, [fp, #-8]
   12dd8:	b	12e0c <error@@Base+0x1174>
   12ddc:	ldr	r3, [fp, #-16]
   12de0:	ldr	r2, [r3, #8]
   12de4:	ldr	r3, [fp, #-12]
   12de8:	add	r1, r3, #1
   12dec:	str	r1, [fp, #-12]
   12df0:	lsl	r3, r3, #2
   12df4:	add	r3, r2, r3
   12df8:	ldr	r2, [fp, #-8]
   12dfc:	str	r2, [r3]
   12e00:	ldr	r3, [fp, #-8]
   12e04:	ldr	r3, [r3, #4]
   12e08:	str	r3, [fp, #-8]
   12e0c:	ldr	r3, [fp, #-8]
   12e10:	cmp	r3, #0
   12e14:	bne	12ddc <error@@Base+0x1144>
   12e18:	b	12e20 <error@@Base+0x1188>
   12e1c:	nop			; (mov r0, r0)
   12e20:	sub	sp, fp, #4
   12e24:	pop	{fp, pc}
   12e28:	push	{fp, lr}
   12e2c:	add	fp, sp, #4
   12e30:	sub	sp, sp, #16
   12e34:	str	r0, [fp, #-16]
   12e38:	str	r1, [fp, #-20]	; 0xffffffec
   12e3c:	b	12e64 <error@@Base+0x11cc>
   12e40:	ldr	r3, [fp, #-16]
   12e44:	ldr	r3, [r3]
   12e48:	str	r3, [fp, #-8]
   12e4c:	ldr	r1, [fp, #-8]
   12e50:	ldr	r0, [fp, #-16]
   12e54:	bl	12cac <error@@Base+0x1014>
   12e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e5c:	ldr	r0, [fp, #-8]
   12e60:	blx	r3
   12e64:	ldr	r3, [fp, #-16]
   12e68:	ldr	r3, [r3]
   12e6c:	cmp	r3, #0
   12e70:	bne	12e40 <error@@Base+0x11a8>
   12e74:	nop			; (mov r0, r0)
   12e78:	sub	sp, fp, #4
   12e7c:	pop	{fp, pc}
   12e80:	push	{fp, lr}
   12e84:	add	fp, sp, #4
   12e88:	sub	sp, sp, #24
   12e8c:	str	r0, [fp, #-24]	; 0xffffffe8
   12e90:	str	r1, [fp, #-28]	; 0xffffffe4
   12e94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e98:	str	r3, [fp, #-8]
   12e9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ea0:	str	r3, [fp, #-12]
   12ea4:	ldr	r3, [pc, #516]	; 130b0 <error@@Base+0x1418>
   12ea8:	add	r3, pc, r3
   12eac:	ldr	r2, [r3]
   12eb0:	ldr	r3, [fp, #-8]
   12eb4:	lsl	r3, r3, #2
   12eb8:	add	r3, r2, r3
   12ebc:	ldr	r3, [r3]
   12ec0:	str	r3, [fp, #-16]
   12ec4:	b	13024 <error@@Base+0x138c>
   12ec8:	ldr	r3, [fp, #-12]
   12ecc:	sub	r3, r3, #1
   12ed0:	str	r3, [fp, #-12]
   12ed4:	ldr	r2, [fp, #-8]
   12ed8:	ldr	r3, [fp, #-12]
   12edc:	cmp	r2, r3
   12ee0:	bge	12f24 <error@@Base+0x128c>
   12ee4:	ldr	r3, [pc, #456]	; 130b4 <error@@Base+0x141c>
   12ee8:	add	r3, pc, r3
   12eec:	ldr	r3, [r3]
   12ef0:	ldr	r2, [pc, #448]	; 130b8 <error@@Base+0x1420>
   12ef4:	add	r2, pc, r2
   12ef8:	ldr	r1, [r2]
   12efc:	ldr	r2, [fp, #-12]
   12f00:	lsl	r2, r2, #2
   12f04:	add	r2, r1, r2
   12f08:	ldr	r2, [r2]
   12f0c:	mov	r1, r2
   12f10:	ldr	r0, [fp, #-16]
   12f14:	blx	r3
   12f18:	mov	r3, r0
   12f1c:	cmp	r3, #0
   12f20:	blt	12ec8 <error@@Base+0x1230>
   12f24:	ldr	r2, [fp, #-8]
   12f28:	ldr	r3, [fp, #-12]
   12f2c:	cmp	r2, r3
   12f30:	beq	12f84 <error@@Base+0x12ec>
   12f34:	ldr	r3, [pc, #384]	; 130bc <error@@Base+0x1424>
   12f38:	add	r3, pc, r3
   12f3c:	ldr	r2, [r3]
   12f40:	ldr	r3, [fp, #-8]
   12f44:	add	r1, r3, #1
   12f48:	str	r1, [fp, #-8]
   12f4c:	lsl	r3, r3, #2
   12f50:	add	r3, r2, r3
   12f54:	ldr	r2, [pc, #356]	; 130c0 <error@@Base+0x1428>
   12f58:	add	r2, pc, r2
   12f5c:	ldr	r1, [r2]
   12f60:	ldr	r2, [fp, #-12]
   12f64:	lsl	r2, r2, #2
   12f68:	add	r2, r1, r2
   12f6c:	ldr	r2, [r2]
   12f70:	str	r2, [r3]
   12f74:	b	12f84 <error@@Base+0x12ec>
   12f78:	ldr	r3, [fp, #-8]
   12f7c:	add	r3, r3, #1
   12f80:	str	r3, [fp, #-8]
   12f84:	ldr	r2, [fp, #-8]
   12f88:	ldr	r3, [fp, #-12]
   12f8c:	cmp	r2, r3
   12f90:	bge	12fd4 <error@@Base+0x133c>
   12f94:	ldr	r3, [pc, #296]	; 130c4 <error@@Base+0x142c>
   12f98:	add	r3, pc, r3
   12f9c:	ldr	r3, [r3]
   12fa0:	ldr	r2, [pc, #288]	; 130c8 <error@@Base+0x1430>
   12fa4:	add	r2, pc, r2
   12fa8:	ldr	r1, [r2]
   12fac:	ldr	r2, [fp, #-8]
   12fb0:	lsl	r2, r2, #2
   12fb4:	add	r2, r1, r2
   12fb8:	ldr	r2, [r2]
   12fbc:	mov	r1, r2
   12fc0:	ldr	r0, [fp, #-16]
   12fc4:	blx	r3
   12fc8:	mov	r3, r0
   12fcc:	cmp	r3, #0
   12fd0:	bgt	12f78 <error@@Base+0x12e0>
   12fd4:	ldr	r2, [fp, #-8]
   12fd8:	ldr	r3, [fp, #-12]
   12fdc:	cmp	r2, r3
   12fe0:	beq	13024 <error@@Base+0x138c>
   12fe4:	ldr	r3, [pc, #224]	; 130cc <error@@Base+0x1434>
   12fe8:	add	r3, pc, r3
   12fec:	ldr	r2, [r3]
   12ff0:	ldr	r3, [fp, #-12]
   12ff4:	sub	r1, r3, #1
   12ff8:	str	r1, [fp, #-12]
   12ffc:	lsl	r3, r3, #2
   13000:	add	r3, r2, r3
   13004:	ldr	r2, [pc, #196]	; 130d0 <error@@Base+0x1438>
   13008:	add	r2, pc, r2
   1300c:	ldr	r1, [r2]
   13010:	ldr	r2, [fp, #-8]
   13014:	lsl	r2, r2, #2
   13018:	add	r2, r1, r2
   1301c:	ldr	r2, [r2]
   13020:	str	r2, [r3]
   13024:	ldr	r2, [fp, #-8]
   13028:	ldr	r3, [fp, #-12]
   1302c:	cmp	r2, r3
   13030:	blt	12ed4 <error@@Base+0x123c>
   13034:	ldr	r3, [pc, #152]	; 130d4 <error@@Base+0x143c>
   13038:	add	r3, pc, r3
   1303c:	ldr	r2, [r3]
   13040:	ldr	r3, [fp, #-12]
   13044:	lsl	r3, r3, #2
   13048:	add	r3, r2, r3
   1304c:	ldr	r2, [fp, #-16]
   13050:	str	r2, [r3]
   13054:	ldr	r3, [fp, #-12]
   13058:	sub	r3, r3, #1
   1305c:	str	r3, [fp, #-12]
   13060:	ldr	r2, [fp, #-12]
   13064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13068:	cmp	r2, r3
   1306c:	ble	1307c <error@@Base+0x13e4>
   13070:	ldr	r1, [fp, #-12]
   13074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13078:	bl	12e80 <error@@Base+0x11e8>
   1307c:	ldr	r3, [fp, #-8]
   13080:	add	r3, r3, #1
   13084:	str	r3, [fp, #-8]
   13088:	ldr	r2, [fp, #-8]
   1308c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13090:	cmp	r2, r3
   13094:	bge	130a4 <error@@Base+0x140c>
   13098:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1309c:	ldr	r0, [fp, #-8]
   130a0:	bl	12e80 <error@@Base+0x11e8>
   130a4:	nop			; (mov r0, r0)
   130a8:	sub	sp, fp, #4
   130ac:	pop	{fp, pc}
   130b0:	andeq	r1, r1, ip, ror #4
   130b4:	andeq	r1, r1, r0, lsr r2
   130b8:	andeq	r1, r1, r0, lsr #4
   130bc:	ldrdeq	r1, [r1], -ip
   130c0:			; <UNDEFINED> instruction: 0x000111bc
   130c4:	andeq	r1, r1, r0, lsl #3
   130c8:	andeq	r1, r1, r0, ror r1
   130cc:	andeq	r1, r1, ip, lsr #2
   130d0:	andeq	r1, r1, ip, lsl #2
   130d4:	ldrdeq	r1, [r1], -ip
   130d8:	push	{fp, lr}
   130dc:	add	fp, sp, #4
   130e0:	sub	sp, sp, #16
   130e4:	str	r0, [fp, #-8]
   130e8:	str	r1, [fp, #-12]
   130ec:	str	r2, [fp, #-16]
   130f0:	ldr	r3, [fp, #-8]
   130f4:	cmp	r3, #1
   130f8:	ble	13134 <error@@Base+0x149c>
   130fc:	ldr	r3, [pc, #60]	; 13140 <error@@Base+0x14a8>
   13100:	add	r3, pc, r3
   13104:	ldr	r2, [fp, #-12]
   13108:	str	r2, [r3]
   1310c:	ldr	r3, [pc, #48]	; 13144 <error@@Base+0x14ac>
   13110:	add	r3, pc, r3
   13114:	ldr	r2, [fp, #-16]
   13118:	str	r2, [r3]
   1311c:	ldr	r3, [fp, #-8]
   13120:	sub	r3, r3, #1
   13124:	mov	r1, r3
   13128:	mov	r0, #0
   1312c:	bl	12e80 <error@@Base+0x11e8>
   13130:	b	13138 <error@@Base+0x14a0>
   13134:	nop			; (mov r0, r0)
   13138:	sub	sp, fp, #4
   1313c:	pop	{fp, pc}
   13140:	andeq	r1, r1, r4, lsl r0
   13144:	andeq	r1, r1, r8
   13148:	push	{fp, lr}
   1314c:	add	fp, sp, #4
   13150:	sub	sp, sp, #16
   13154:	str	r0, [fp, #-16]
   13158:	mov	r3, #0
   1315c:	strh	r3, [fp, #-6]
   13160:	b	13190 <error@@Base+0x14f8>
   13164:	ldrsh	r3, [fp, #-6]
   13168:	lsl	r3, r3, #4
   1316c:	ldr	r2, [fp, #-16]
   13170:	add	r3, r2, r3
   13174:	mov	r0, r3
   13178:	bl	12a7c <error@@Base+0xde4>
   1317c:	ldrsh	r3, [fp, #-6]
   13180:	uxth	r3, r3
   13184:	add	r3, r3, #1
   13188:	uxth	r3, r3
   1318c:	strh	r3, [fp, #-6]
   13190:	ldrsh	r3, [fp, #-6]
   13194:	ldr	r2, [pc, #56]	; 131d4 <error@@Base+0x153c>
   13198:	cmp	r3, r2
   1319c:	ble	13164 <error@@Base+0x14cc>
   131a0:	ldr	r3, [fp, #-16]
   131a4:	add	r3, r3, #4096	; 0x1000
   131a8:	mov	r2, r3
   131ac:	mov	r3, #0
   131b0:	str	r3, [r2, #3952]	; 0xf70
   131b4:	ldr	r3, [fp, #-16]
   131b8:	add	r3, r3, #4096	; 0x1000
   131bc:	mov	r2, r3
   131c0:	mov	r3, #0
   131c4:	str	r3, [r2, #3956]	; 0xf74
   131c8:	nop			; (mov r0, r0)
   131cc:	sub	sp, fp, #4
   131d0:	pop	{fp, pc}
   131d4:	strdeq	r0, [r0], -r6
   131d8:	push	{fp}		; (str fp, [sp, #-4]!)
   131dc:	add	fp, sp, #0
   131e0:	sub	sp, sp, #28
   131e4:	str	r0, [fp, #-24]	; 0xffffffe8
   131e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   131ec:	str	r3, [fp, #-16]
   131f0:	mov	r3, #0
   131f4:	str	r3, [fp, #-12]
   131f8:	mov	r3, #0
   131fc:	str	r3, [fp, #-8]
   13200:	b	13230 <error@@Base+0x1598>
   13204:	ldr	r3, [fp, #-8]
   13208:	ldr	r2, [fp, #-16]
   1320c:	add	r3, r2, r3
   13210:	ldrb	r3, [r3]
   13214:	mov	r2, r3
   13218:	ldr	r3, [fp, #-12]
   1321c:	add	r3, r3, r2
   13220:	str	r3, [fp, #-12]
   13224:	ldr	r3, [fp, #-8]
   13228:	add	r3, r3, #1
   1322c:	str	r3, [fp, #-8]
   13230:	ldr	r3, [fp, #-8]
   13234:	ldr	r2, [fp, #-16]
   13238:	add	r3, r2, r3
   1323c:	ldrb	r3, [r3]
   13240:	cmp	r3, #0
   13244:	bne	13204 <error@@Base+0x156c>
   13248:	ldr	r2, [fp, #-12]
   1324c:	ldr	r3, [pc, #60]	; 13290 <error@@Base+0x15f8>
   13250:	smull	r1, r3, r3, r2
   13254:	add	r3, r3, r2
   13258:	asr	r1, r3, #8
   1325c:	asr	r3, r2, #31
   13260:	sub	r1, r1, r3
   13264:	mov	r3, r1
   13268:	lsl	r3, r3, #6
   1326c:	sub	r3, r3, r1
   13270:	lsl	r3, r3, #3
   13274:	sub	r3, r3, r1
   13278:	sub	r1, r2, r3
   1327c:	sxth	r3, r1
   13280:	mov	r0, r3
   13284:	add	sp, fp, #0
   13288:	pop	{fp}		; (ldr fp, [sp], #4)
   1328c:	bx	lr
   13290:	subhi	r4, sl, #1552	; 0x610
   13294:	push	{fp, lr}
   13298:	add	fp, sp, #4
   1329c:	sub	sp, sp, #16
   132a0:	str	r0, [fp, #-16]
   132a4:	str	r1, [fp, #-20]	; 0xffffffec
   132a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   132ac:	bl	131d8 <error@@Base+0x1540>
   132b0:	mov	r3, r0
   132b4:	mov	r2, r3
   132b8:	ldr	r3, [fp, #-16]
   132bc:	ldr	r3, [r3, r2, lsl #4]
   132c0:	str	r3, [fp, #-8]
   132c4:	b	132d4 <error@@Base+0x163c>
   132c8:	ldr	r3, [fp, #-8]
   132cc:	ldr	r3, [r3, #4]
   132d0:	str	r3, [fp, #-8]
   132d4:	ldr	r3, [fp, #-8]
   132d8:	cmp	r3, #0
   132dc:	beq	13300 <error@@Base+0x1668>
   132e0:	ldr	r3, [fp, #-8]
   132e4:	ldr	r3, [r3, #8]
   132e8:	mov	r1, r3
   132ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   132f0:	bl	10780 <strcmp@plt>
   132f4:	mov	r3, r0
   132f8:	cmp	r3, #0
   132fc:	bne	132c8 <error@@Base+0x1630>
   13300:	ldr	r3, [fp, #-8]
   13304:	mov	r0, r3
   13308:	sub	sp, fp, #4
   1330c:	pop	{fp, pc}
   13310:	push	{fp, lr}
   13314:	add	fp, sp, #4
   13318:	sub	sp, sp, #8
   1331c:	str	r0, [fp, #-8]
   13320:	ldr	r3, [fp, #-8]
   13324:	add	r3, r3, #4096	; 0x1000
   13328:	ldr	r3, [r3, #3952]	; 0xf70
   1332c:	cmp	r3, #0
   13330:	beq	1335c <error@@Base+0x16c4>
   13334:	ldr	r3, [fp, #-8]
   13338:	add	r3, r3, #4096	; 0x1000
   1333c:	ldr	r3, [r3, #3952]	; 0xf70
   13340:	mov	r0, r3
   13344:	bl	107a4 <free@plt>
   13348:	ldr	r3, [fp, #-8]
   1334c:	add	r3, r3, #4096	; 0x1000
   13350:	mov	r2, r3
   13354:	mov	r3, #0
   13358:	str	r3, [r2, #3952]	; 0xf70
   1335c:	nop			; (mov r0, r0)
   13360:	sub	sp, fp, #4
   13364:	pop	{fp, pc}
   13368:	push	{fp, lr}
   1336c:	add	fp, sp, #4
   13370:	sub	sp, sp, #8
   13374:	str	r0, [fp, #-8]
   13378:	str	r1, [fp, #-12]
   1337c:	ldr	r3, [fp, #-12]
   13380:	ldr	r3, [r3, #8]
   13384:	mov	r0, r3
   13388:	bl	131d8 <error@@Base+0x1540>
   1338c:	mov	r3, r0
   13390:	lsl	r3, r3, #4
   13394:	ldr	r2, [fp, #-8]
   13398:	add	r3, r2, r3
   1339c:	ldr	r1, [fp, #-12]
   133a0:	mov	r0, r3
   133a4:	bl	12bc4 <error@@Base+0xf2c>
   133a8:	ldr	r0, [fp, #-8]
   133ac:	bl	13310 <error@@Base+0x1678>
   133b0:	ldr	r3, [fp, #-8]
   133b4:	add	r3, r3, #4096	; 0x1000
   133b8:	ldr	r3, [r3, #3956]	; 0xf74
   133bc:	add	r3, r3, #1
   133c0:	ldr	r2, [fp, #-8]
   133c4:	add	r2, r2, #4096	; 0x1000
   133c8:	str	r3, [r2, #3956]	; 0xf74
   133cc:	nop			; (mov r0, r0)
   133d0:	sub	sp, fp, #4
   133d4:	pop	{fp, pc}
   133d8:	push	{fp, lr}
   133dc:	add	fp, sp, #4
   133e0:	sub	sp, sp, #8
   133e4:	str	r0, [fp, #-8]
   133e8:	str	r1, [fp, #-12]
   133ec:	ldr	r3, [fp, #-12]
   133f0:	ldr	r3, [r3, #8]
   133f4:	mov	r0, r3
   133f8:	bl	131d8 <error@@Base+0x1540>
   133fc:	mov	r3, r0
   13400:	lsl	r3, r3, #4
   13404:	ldr	r2, [fp, #-8]
   13408:	add	r3, r2, r3
   1340c:	ldr	r1, [fp, #-12]
   13410:	mov	r0, r3
   13414:	bl	12cac <error@@Base+0x1014>
   13418:	ldr	r0, [fp, #-8]
   1341c:	bl	13310 <error@@Base+0x1678>
   13420:	ldr	r3, [fp, #-8]
   13424:	add	r3, r3, #4096	; 0x1000
   13428:	ldr	r3, [r3, #3956]	; 0xf74
   1342c:	sub	r3, r3, #1
   13430:	ldr	r2, [fp, #-8]
   13434:	add	r2, r2, #4096	; 0x1000
   13438:	str	r3, [r2, #3956]	; 0xf74
   1343c:	nop			; (mov r0, r0)
   13440:	sub	sp, fp, #4
   13444:	pop	{fp, pc}
   13448:	push	{fp, lr}
   1344c:	add	fp, sp, #4
   13450:	sub	sp, sp, #24
   13454:	str	r0, [fp, #-24]	; 0xffffffe8
   13458:	mov	r3, #0
   1345c:	str	r3, [fp, #-16]
   13460:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13464:	add	r3, r3, #4096	; 0x1000
   13468:	ldr	r3, [r3, #3952]	; 0xf70
   1346c:	cmp	r3, #0
   13470:	bne	13530 <error@@Base+0x1898>
   13474:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13478:	add	r3, r3, #4096	; 0x1000
   1347c:	ldr	r3, [r3, #3956]	; 0xf74
   13480:	cmp	r3, #0
   13484:	beq	13530 <error@@Base+0x1898>
   13488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1348c:	add	r3, r3, #4096	; 0x1000
   13490:	ldr	r3, [r3, #3956]	; 0xf74
   13494:	mov	r1, #4
   13498:	mov	r0, r3
   1349c:	bl	11144 <abort@plt+0x8b0>
   134a0:	mov	r2, r0
   134a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134a8:	add	r3, r3, #4096	; 0x1000
   134ac:	str	r2, [r3, #3952]	; 0xf70
   134b0:	mov	r3, #0
   134b4:	str	r3, [fp, #-12]
   134b8:	b	1351c <error@@Base+0x1884>
   134bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134c0:	ldr	r2, [fp, #-12]
   134c4:	ldr	r3, [r3, r2, lsl #4]
   134c8:	str	r3, [fp, #-8]
   134cc:	b	13504 <error@@Base+0x186c>
   134d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   134d4:	add	r3, r3, #4096	; 0x1000
   134d8:	ldr	r2, [r3, #3952]	; 0xf70
   134dc:	ldr	r3, [fp, #-16]
   134e0:	add	r1, r3, #1
   134e4:	str	r1, [fp, #-16]
   134e8:	lsl	r3, r3, #2
   134ec:	add	r3, r2, r3
   134f0:	ldr	r2, [fp, #-8]
   134f4:	str	r2, [r3]
   134f8:	ldr	r3, [fp, #-8]
   134fc:	ldr	r3, [r3, #4]
   13500:	str	r3, [fp, #-8]
   13504:	ldr	r3, [fp, #-8]
   13508:	cmp	r3, #0
   1350c:	bne	134d0 <error@@Base+0x1838>
   13510:	ldr	r3, [fp, #-12]
   13514:	add	r3, r3, #1
   13518:	str	r3, [fp, #-12]
   1351c:	ldr	r3, [fp, #-12]
   13520:	ldr	r2, [pc, #20]	; 1353c <error@@Base+0x18a4>
   13524:	cmp	r3, r2
   13528:	ble	134bc <error@@Base+0x1824>
   1352c:	b	13534 <error@@Base+0x189c>
   13530:	nop			; (mov r0, r0)
   13534:	sub	sp, fp, #4
   13538:	pop	{fp, pc}
   1353c:	strdeq	r0, [r0], -r6
   13540:	push	{fp, lr}
   13544:	add	fp, sp, #4
   13548:	sub	sp, sp, #16
   1354c:	str	r0, [fp, #-16]
   13550:	str	r1, [fp, #-20]	; 0xffffffec
   13554:	mov	r3, #0
   13558:	strh	r3, [fp, #-6]
   1355c:	b	13590 <error@@Base+0x18f8>
   13560:	ldrsh	r3, [fp, #-6]
   13564:	lsl	r3, r3, #4
   13568:	ldr	r2, [fp, #-16]
   1356c:	add	r3, r2, r3
   13570:	ldr	r1, [fp, #-20]	; 0xffffffec
   13574:	mov	r0, r3
   13578:	bl	12e28 <error@@Base+0x1190>
   1357c:	ldrsh	r3, [fp, #-6]
   13580:	uxth	r3, r3
   13584:	add	r3, r3, #1
   13588:	uxth	r3, r3
   1358c:	strh	r3, [fp, #-6]
   13590:	ldrsh	r3, [fp, #-6]
   13594:	ldr	r2, [pc, #44]	; 135c8 <error@@Base+0x1930>
   13598:	cmp	r3, r2
   1359c:	ble	13560 <error@@Base+0x18c8>
   135a0:	ldr	r0, [fp, #-16]
   135a4:	bl	13310 <error@@Base+0x1678>
   135a8:	ldr	r3, [fp, #-16]
   135ac:	add	r3, r3, #4096	; 0x1000
   135b0:	mov	r2, r3
   135b4:	mov	r3, #0
   135b8:	str	r3, [r2, #3956]	; 0xf74
   135bc:	nop			; (mov r0, r0)
   135c0:	sub	sp, fp, #4
   135c4:	pop	{fp, pc}
   135c8:	strdeq	r0, [r0], -r6
   135cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   135d0:	mov	r7, r0
   135d4:	ldr	r6, [pc, #72]	; 13624 <error@@Base+0x198c>
   135d8:	ldr	r5, [pc, #72]	; 13628 <error@@Base+0x1990>
   135dc:	add	r6, pc, r6
   135e0:	add	r5, pc, r5
   135e4:	sub	r6, r6, r5
   135e8:	mov	r8, r1
   135ec:	mov	r9, r2
   135f0:	bl	10754 <calloc@plt-0x20>
   135f4:	asrs	r6, r6, #2
   135f8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   135fc:	mov	r4, #0
   13600:	add	r4, r4, #1
   13604:	ldr	r3, [r5], #4
   13608:	mov	r2, r9
   1360c:	mov	r1, r8
   13610:	mov	r0, r7
   13614:	blx	r3
   13618:	cmp	r6, r4
   1361c:	bne	13600 <error@@Base+0x1968>
   13620:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13624:	andeq	r0, r1, ip, lsl r9
   13628:	andeq	r0, r1, r4, lsl r9
   1362c:	bx	lr
   13630:	mov	r2, r1
   13634:	mov	r1, r0
   13638:	mov	r0, #3
   1363c:	b	107d4 <__xstat@plt>

Disassembly of section .fini:

00013640 <.fini>:
   13640:	push	{r3, lr}
   13644:	pop	{r3, pc}
