
../repos/dvidelabs-flatcc-3b39ef7/bin/flatcc:     file format elf32-littlearm


Disassembly of section .init:

000148a8 <.init>:
   148a8:	push	{r3, lr}
   148ac:	bl	14acc <_start@@Base+0x3c>
   148b0:	pop	{r3, pc}

Disassembly of section .plt:

000148b4 <calloc@plt-0x14>:
   148b4:	push	{lr}		; (str lr, [sp, #-4]!)
   148b8:	ldr	lr, [pc, #4]	; 148c4 <calloc@plt-0x4>
   148bc:	add	lr, pc, lr
   148c0:	ldr	pc, [lr, #8]!
   148c4:	andeq	r7, r5, ip, lsr r7

000148c8 <calloc@plt>:
   148c8:	add	ip, pc, #0, 12
   148cc:	add	ip, ip, #356352	; 0x57000
   148d0:	ldr	pc, [ip, #1852]!	; 0x73c

000148d4 <raise@plt>:
   148d4:	add	ip, pc, #0, 12
   148d8:	add	ip, ip, #356352	; 0x57000
   148dc:	ldr	pc, [ip, #1844]!	; 0x734

000148e0 <strcmp@plt>:
   148e0:	add	ip, pc, #0, 12
   148e4:	add	ip, ip, #356352	; 0x57000
   148e8:	ldr	pc, [ip, #1836]!	; 0x72c

000148ec <fopen@plt>:
   148ec:	add	ip, pc, #0, 12
   148f0:	add	ip, ip, #356352	; 0x57000
   148f4:	ldr	pc, [ip, #1828]!	; 0x724

000148f8 <free@plt>:
   148f8:	add	ip, pc, #0, 12
   148fc:	add	ip, ip, #356352	; 0x57000
   14900:	ldr	pc, [ip, #1820]!	; 0x71c

00014904 <memcpy@plt>:
   14904:	add	ip, pc, #0, 12
   14908:	add	ip, ip, #356352	; 0x57000
   1490c:	ldr	pc, [ip, #1812]!	; 0x714

00014910 <ftell@plt>:
   14910:	add	ip, pc, #0, 12
   14914:	add	ip, ip, #356352	; 0x57000
   14918:	ldr	pc, [ip, #1804]!	; 0x70c

0001491c <memcmp@plt>:
   1491c:	add	ip, pc, #0, 12
   14920:	add	ip, ip, #356352	; 0x57000
   14924:	ldr	pc, [ip, #1796]!	; 0x704

00014928 <fputc_unlocked@plt>:
   14928:	add	ip, pc, #0, 12
   1492c:	add	ip, ip, #356352	; 0x57000
   14930:	ldr	pc, [ip, #1788]!	; 0x6fc

00014934 <rewind@plt>:
   14934:	add	ip, pc, #0, 12
   14938:	add	ip, ip, #356352	; 0x57000
   1493c:	ldr	pc, [ip, #1780]!	; 0x6f4

00014940 <realloc@plt>:
   14940:	add	ip, pc, #0, 12
   14944:	add	ip, ip, #356352	; 0x57000
   14948:	ldr	pc, [ip, #1772]!	; 0x6ec

0001494c <fwrite@plt>:
   1494c:	add	ip, pc, #0, 12
   14950:	add	ip, ip, #356352	; 0x57000
   14954:	ldr	pc, [ip, #1764]!	; 0x6e4

00014958 <puts@plt>:
   14958:	add	ip, pc, #0, 12
   1495c:	add	ip, ip, #356352	; 0x57000
   14960:	ldr	pc, [ip, #1756]!	; 0x6dc

00014964 <malloc@plt>:
   14964:	add	ip, pc, #0, 12
   14968:	add	ip, ip, #356352	; 0x57000
   1496c:	ldr	pc, [ip, #1748]!	; 0x6d4

00014970 <__libc_start_main@plt>:
   14970:	add	ip, pc, #0, 12
   14974:	add	ip, ip, #356352	; 0x57000
   14978:	ldr	pc, [ip, #1740]!	; 0x6cc

0001497c <__ctype_toupper_loc@plt>:
   1497c:	add	ip, pc, #0, 12
   14980:	add	ip, ip, #356352	; 0x57000
   14984:	ldr	pc, [ip, #1732]!	; 0x6c4

00014988 <__gmon_start__@plt>:
   14988:	add	ip, pc, #0, 12
   1498c:	add	ip, ip, #356352	; 0x57000
   14990:	ldr	pc, [ip, #1724]!	; 0x6bc

00014994 <exit@plt>:
   14994:	add	ip, pc, #0, 12
   14998:	add	ip, ip, #356352	; 0x57000
   1499c:	ldr	pc, [ip, #1716]!	; 0x6b4

000149a0 <strlen@plt>:
   149a0:	add	ip, pc, #0, 12
   149a4:	add	ip, ip, #356352	; 0x57000
   149a8:	ldr	pc, [ip, #1708]!	; 0x6ac

000149ac <strchr@plt>:
   149ac:	add	ip, pc, #0, 12
   149b0:	add	ip, ip, #356352	; 0x57000
   149b4:	ldr	pc, [ip, #1700]!	; 0x6a4

000149b8 <fprintf@plt>:
   149b8:	add	ip, pc, #0, 12
   149bc:	add	ip, ip, #356352	; 0x57000
   149c0:	ldr	pc, [ip, #1692]!	; 0x69c

000149c4 <posix_memalign@plt>:
   149c4:	add	ip, pc, #0, 12
   149c8:	add	ip, ip, #356352	; 0x57000
   149cc:	ldr	pc, [ip, #1684]!	; 0x694

000149d0 <memset@plt>:
   149d0:	add	ip, pc, #0, 12
   149d4:	add	ip, ip, #356352	; 0x57000
   149d8:	ldr	pc, [ip, #1676]!	; 0x68c

000149dc <strncpy@plt>:
   149dc:	add	ip, pc, #0, 12
   149e0:	add	ip, ip, #356352	; 0x57000
   149e4:	ldr	pc, [ip, #1668]!	; 0x684

000149e8 <strtod@plt>:
   149e8:	add	ip, pc, #0, 12
   149ec:	add	ip, ip, #356352	; 0x57000
   149f0:	ldr	pc, [ip, #1660]!	; 0x67c

000149f4 <memchr@plt>:
   149f4:	add	ip, pc, #0, 12
   149f8:	add	ip, ip, #356352	; 0x57000
   149fc:	ldr	pc, [ip, #1652]!	; 0x674

00014a00 <fclose@plt>:
   14a00:	add	ip, pc, #0, 12
   14a04:	add	ip, ip, #356352	; 0x57000
   14a08:	ldr	pc, [ip, #1644]!	; 0x66c

00014a0c <vfprintf@plt>:
   14a0c:	add	ip, pc, #0, 12
   14a10:	add	ip, ip, #356352	; 0x57000
   14a14:	ldr	pc, [ip, #1636]!	; 0x664

00014a18 <fputc@plt>:
   14a18:	add	ip, pc, #0, 12
   14a1c:	add	ip, ip, #356352	; 0x57000
   14a20:	ldr	pc, [ip, #1628]!	; 0x65c

00014a24 <sprintf@plt>:
   14a24:	add	ip, pc, #0, 12
   14a28:	add	ip, ip, #356352	; 0x57000
   14a2c:	ldr	pc, [ip, #1620]!	; 0x654

00014a30 <vsnprintf@plt>:
   14a30:	add	ip, pc, #0, 12
   14a34:	add	ip, ip, #356352	; 0x57000
   14a38:	ldr	pc, [ip, #1612]!	; 0x64c

00014a3c <qsort@plt>:
   14a3c:	add	ip, pc, #0, 12
   14a40:	add	ip, ip, #356352	; 0x57000
   14a44:	ldr	pc, [ip, #1604]!	; 0x644

00014a48 <fread_unlocked@plt>:
   14a48:	add	ip, pc, #0, 12
   14a4c:	add	ip, ip, #356352	; 0x57000
   14a50:	ldr	pc, [ip, #1596]!	; 0x63c

00014a54 <fseek@plt>:
   14a54:	add	ip, pc, #0, 12
   14a58:	add	ip, ip, #356352	; 0x57000
   14a5c:	ldr	pc, [ip, #1588]!	; 0x634

00014a60 <strncmp@plt>:
   14a60:	add	ip, pc, #0, 12
   14a64:	add	ip, ip, #356352	; 0x57000
   14a68:	ldr	pc, [ip, #1580]!	; 0x62c

00014a6c <abort@plt>:
   14a6c:	add	ip, pc, #0, 12
   14a70:	add	ip, ip, #356352	; 0x57000
   14a74:	ldr	pc, [ip, #1572]!	; 0x624

00014a78 <__assert_fail@plt>:
   14a78:	add	ip, pc, #0, 12
   14a7c:	add	ip, ip, #356352	; 0x57000
   14a80:	ldr	pc, [ip, #1564]!	; 0x61c

Disassembly of section .text:

00014a90 <_start@@Base>:
   14a90:	mov	fp, #0
   14a94:	mov	lr, #0
   14a98:	pop	{r1}		; (ldr r1, [sp], #4)
   14a9c:	mov	r2, sp
   14aa0:	push	{r2}		; (str r2, [sp, #-4]!)
   14aa4:	push	{r0}		; (str r0, [sp, #-4]!)
   14aa8:	ldr	ip, [pc, #16]	; 14ac0 <_start@@Base+0x30>
   14aac:	push	{ip}		; (str ip, [sp, #-4]!)
   14ab0:	ldr	r0, [pc, #12]	; 14ac4 <_start@@Base+0x34>
   14ab4:	ldr	r3, [pc, #12]	; 14ac8 <_start@@Base+0x38>
   14ab8:	bl	14970 <__libc_start_main@plt>
   14abc:	bl	14a6c <abort@plt>
   14ac0:	andeq	lr, r3, r0, ror ip
   14ac4:	andeq	r5, r1, r8, lsl #16
   14ac8:	andeq	lr, r3, r0, lsl ip
   14acc:	ldr	r3, [pc, #20]	; 14ae8 <_start@@Base+0x58>
   14ad0:	ldr	r2, [pc, #20]	; 14aec <_start@@Base+0x5c>
   14ad4:	add	r3, pc, r3
   14ad8:	ldr	r2, [r3, r2]
   14adc:	cmp	r2, #0
   14ae0:	bxeq	lr
   14ae4:	b	14988 <__gmon_start__@plt>
   14ae8:	andeq	r7, r5, r4, lsr #10
   14aec:	andeq	r0, r0, r8, lsr #1
   14af0:	ldr	r0, [pc, #24]	; 14b10 <_start@@Base+0x80>
   14af4:	ldr	r3, [pc, #24]	; 14b14 <_start@@Base+0x84>
   14af8:	cmp	r3, r0
   14afc:	bxeq	lr
   14b00:	ldr	r3, [pc, #16]	; 14b18 <_start@@Base+0x88>
   14b04:	cmp	r3, #0
   14b08:	bxeq	lr
   14b0c:	bx	r3
   14b10:	andeq	ip, r6, r4, asr #1
   14b14:	andeq	ip, r6, r4, asr #1
   14b18:	andeq	r0, r0, r0
   14b1c:	ldr	r0, [pc, #36]	; 14b48 <_start@@Base+0xb8>
   14b20:	ldr	r1, [pc, #36]	; 14b4c <_start@@Base+0xbc>
   14b24:	sub	r1, r1, r0
   14b28:	asr	r1, r1, #2
   14b2c:	add	r1, r1, r1, lsr #31
   14b30:	asrs	r1, r1, #1
   14b34:	bxeq	lr
   14b38:	ldr	r3, [pc, #16]	; 14b50 <_start@@Base+0xc0>
   14b3c:	cmp	r3, #0
   14b40:	bxeq	lr
   14b44:	bx	r3
   14b48:	andeq	ip, r6, r4, asr #1
   14b4c:	andeq	ip, r6, r4, asr #1
   14b50:	andeq	r0, r0, r0
   14b54:	push	{r4, lr}
   14b58:	ldr	r4, [pc, #24]	; 14b78 <_start@@Base+0xe8>
   14b5c:	ldrb	r3, [r4]
   14b60:	cmp	r3, #0
   14b64:	popne	{r4, pc}
   14b68:	bl	14af0 <_start@@Base+0x60>
   14b6c:	mov	r3, #1
   14b70:	strb	r3, [r4]
   14b74:	pop	{r4, pc}
   14b78:	andeq	ip, r6, r8, asr #1
   14b7c:	b	14b1c <_start@@Base+0x8c>

00014b80 <usage@@Base>:
   14b80:	push	{r4, sl, fp, lr}
   14b84:	add	fp, sp, #8
   14b88:	ldr	r1, [pc, #92]	; 14bec <usage@@Base+0x6c>
   14b8c:	ldr	r2, [pc, #92]	; 14bf0 <usage@@Base+0x70>
   14b90:	mov	r4, r0
   14b94:	add	r1, pc, r1
   14b98:	add	r2, pc, r2
   14b9c:	bl	149b8 <fprintf@plt>
   14ba0:	ldr	r1, [pc, #76]	; 14bf4 <usage@@Base+0x74>
   14ba4:	ldr	r2, [pc, #76]	; 14bf8 <usage@@Base+0x78>
   14ba8:	mov	r0, r4
   14bac:	add	r1, pc, r1
   14bb0:	add	r2, pc, r2
   14bb4:	bl	149b8 <fprintf@plt>
   14bb8:	ldr	r0, [pc, #60]	; 14bfc <usage@@Base+0x7c>
   14bbc:	mov	r1, #35	; 0x23
   14bc0:	mov	r2, #1
   14bc4:	mov	r3, r4
   14bc8:	add	r0, pc, r0
   14bcc:	bl	1494c <fwrite@plt>
   14bd0:	ldr	r0, [pc, #40]	; 14c00 <usage@@Base+0x80>
   14bd4:	movw	r1, #1409	; 0x581
   14bd8:	mov	r2, #1
   14bdc:	mov	r3, r4
   14be0:	add	r0, pc, r0
   14be4:	pop	{r4, sl, fp, lr}
   14be8:	b	1494c <fwrite@plt>
   14bec:	andeq	r2, r4, lr, asr fp
   14bf0:	andeq	sl, r2, r4, ror #1
   14bf4:	andeq	sl, r2, r6, lsl #2
   14bf8:	andeq	sl, r2, pc, lsl #2
   14bfc:	strdeq	sl, [r2], -sp
   14c00:	andeq	sl, r2, r9, lsl #2

00014c04 <help@@Base>:
   14c04:	push	{r4, sl, fp, lr}
   14c08:	add	fp, sp, #8
   14c0c:	ldr	r1, [pc, #116]	; 14c88 <help@@Base+0x84>
   14c10:	ldr	r2, [pc, #116]	; 14c8c <help@@Base+0x88>
   14c14:	mov	r4, r0
   14c18:	add	r1, pc, r1
   14c1c:	add	r2, pc, r2
   14c20:	bl	149b8 <fprintf@plt>
   14c24:	ldr	r1, [pc, #100]	; 14c90 <help@@Base+0x8c>
   14c28:	ldr	r2, [pc, #100]	; 14c94 <help@@Base+0x90>
   14c2c:	mov	r0, r4
   14c30:	add	r1, pc, r1
   14c34:	add	r2, pc, r2
   14c38:	bl	149b8 <fprintf@plt>
   14c3c:	ldr	r0, [pc, #84]	; 14c98 <help@@Base+0x94>
   14c40:	mov	r1, #35	; 0x23
   14c44:	mov	r2, #1
   14c48:	mov	r3, r4
   14c4c:	add	r0, pc, r0
   14c50:	bl	1494c <fwrite@plt>
   14c54:	ldr	r0, [pc, #64]	; 14c9c <help@@Base+0x98>
   14c58:	movw	r1, #1409	; 0x581
   14c5c:	mov	r2, #1
   14c60:	mov	r3, r4
   14c64:	add	r0, pc, r0
   14c68:	bl	1494c <fwrite@plt>
   14c6c:	ldr	r0, [pc, #44]	; 14ca0 <help@@Base+0x9c>
   14c70:	movw	r1, #3140	; 0xc44
   14c74:	mov	r2, #1
   14c78:	mov	r3, r4
   14c7c:	add	r0, pc, r0
   14c80:	pop	{r4, sl, fp, lr}
   14c84:	b	1494c <fwrite@plt>
   14c88:	ldrdeq	r2, [r4], -sl
   14c8c:	andeq	sl, r2, r0, rrx
   14c90:	andeq	sl, r2, r2, lsl #1
   14c94:	andeq	sl, r2, fp, lsl #1
   14c98:	andeq	sl, r2, r9, ror r0
   14c9c:	andeq	sl, r2, r5, lsl #1
   14ca0:	andeq	sl, r2, pc, ror #11

00014ca4 <parse_bool_arg@@Base>:
   14ca4:	push	{r4, r5, fp, lr}
   14ca8:	add	fp, sp, #8
   14cac:	ldr	r1, [pc, #144]	; 14d44 <parse_bool_arg@@Base+0xa0>
   14cb0:	mov	r4, r0
   14cb4:	add	r1, pc, r1
   14cb8:	bl	148e0 <strcmp@plt>
   14cbc:	mov	r5, #0
   14cc0:	cmp	r0, #0
   14cc4:	beq	14d14 <parse_bool_arg@@Base+0x70>
   14cc8:	ldr	r1, [pc, #120]	; 14d48 <parse_bool_arg@@Base+0xa4>
   14ccc:	mov	r0, r4
   14cd0:	add	r1, pc, r1
   14cd4:	bl	148e0 <strcmp@plt>
   14cd8:	cmp	r0, #0
   14cdc:	beq	14d14 <parse_bool_arg@@Base+0x70>
   14ce0:	ldr	r1, [pc, #100]	; 14d4c <parse_bool_arg@@Base+0xa8>
   14ce4:	mov	r0, r4
   14ce8:	add	r1, pc, r1
   14cec:	bl	148e0 <strcmp@plt>
   14cf0:	mov	r5, #1
   14cf4:	cmp	r0, #0
   14cf8:	beq	14d14 <parse_bool_arg@@Base+0x70>
   14cfc:	ldr	r1, [pc, #76]	; 14d50 <parse_bool_arg@@Base+0xac>
   14d00:	mov	r0, r4
   14d04:	add	r1, pc, r1
   14d08:	bl	148e0 <strcmp@plt>
   14d0c:	cmp	r0, #0
   14d10:	bne	14d1c <parse_bool_arg@@Base+0x78>
   14d14:	mov	r0, r5
   14d18:	pop	{r4, r5, fp, pc}
   14d1c:	ldr	r0, [pc, #48]	; 14d54 <parse_bool_arg@@Base+0xb0>
   14d20:	mov	r2, r4
   14d24:	ldr	r0, [pc, r0]
   14d28:	ldr	r0, [r0]
   14d2c:	ldr	r1, [pc, #36]	; 14d58 <parse_bool_arg@@Base+0xb4>
   14d30:	add	r1, pc, r1
   14d34:	bl	149b8 <fprintf@plt>
   14d38:	mvn	r5, #0
   14d3c:	mov	r0, r5
   14d40:	pop	{r4, r5, fp, pc}
   14d44:	strdeq	ip, [r3], -sl
   14d48:	andeq	fp, r2, r0, ror #3
   14d4c:	strdeq	r5, [r4], -r4
   14d50:	andeq	fp, r2, pc, lsr #3
   14d54:	andeq	r7, r5, r8, ror r3
   14d58:	andeq	fp, r2, r7, lsl #3

00014d5c <match_long_arg@@Base>:
   14d5c:	push	{r4, r5, fp, lr}
   14d60:	add	fp, sp, #8
   14d64:	mov	r4, r2
   14d68:	mov	r5, r0
   14d6c:	bl	14a60 <strncmp@plt>
   14d70:	mov	r1, r0
   14d74:	mov	r0, #0
   14d78:	cmp	r1, #0
   14d7c:	popne	{r4, r5, fp, pc}
   14d80:	mov	r0, r5
   14d84:	bl	149a0 <strlen@plt>
   14d88:	sub	r0, r0, r4
   14d8c:	clz	r0, r0
   14d90:	lsr	r0, r0, #5
   14d94:	pop	{r4, r5, fp, pc}

00014d98 <set_opt@@Base>:
   14d98:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d9c:	add	fp, sp, #24
   14da0:	mov	r8, r0
   14da4:	mov	r0, r1
   14da8:	mov	r9, r2
   14dac:	mov	r6, r1
   14db0:	bl	149a0 <strlen@plt>
   14db4:	mov	r4, r0
   14db8:	mov	r0, r6
   14dbc:	mov	r1, #61	; 0x3d
   14dc0:	bl	149ac <strchr@plt>
   14dc4:	ldrb	r7, [r6]
   14dc8:	cmp	r0, #0
   14dcc:	subne	r4, r0, r6
   14dd0:	addne	r9, r0, #1
   14dd4:	cmp	r7, #104	; 0x68
   14dd8:	beq	15348 <set_opt@@Base+0x5b0>
   14ddc:	mov	r5, r0
   14de0:	ldr	r0, [pc, #1888]	; 15548 <set_opt@@Base+0x7b0>
   14de4:	mov	r1, r6
   14de8:	add	r0, pc, r0
   14dec:	bl	148e0 <strcmp@plt>
   14df0:	cmp	r0, #0
   14df4:	beq	15348 <set_opt@@Base+0x5b0>
   14df8:	ldr	r0, [pc, #1868]	; 1554c <set_opt@@Base+0x7b4>
   14dfc:	mov	r1, r6
   14e00:	add	r0, pc, r0
   14e04:	bl	148e0 <strcmp@plt>
   14e08:	cmp	r0, #0
   14e0c:	beq	15360 <set_opt@@Base+0x5c8>
   14e10:	ldr	r0, [pc, #1848]	; 15550 <set_opt@@Base+0x7b8>
   14e14:	mov	r1, r6
   14e18:	add	r0, pc, r0
   14e1c:	bl	148e0 <strcmp@plt>
   14e20:	cmp	r0, #0
   14e24:	beq	150e4 <set_opt@@Base+0x34c>
   14e28:	ldr	r0, [pc, #1828]	; 15554 <set_opt@@Base+0x7bc>
   14e2c:	mov	r1, r6
   14e30:	add	r0, pc, r0
   14e34:	bl	148e0 <strcmp@plt>
   14e38:	cmp	r0, #0
   14e3c:	beq	150f4 <set_opt@@Base+0x35c>
   14e40:	ldr	r0, [pc, #1808]	; 15558 <set_opt@@Base+0x7c0>
   14e44:	mov	r1, r6
   14e48:	add	r0, pc, r0
   14e4c:	bl	148e0 <strcmp@plt>
   14e50:	cmp	r0, #0
   14e54:	beq	15104 <set_opt@@Base+0x36c>
   14e58:	ldr	r0, [pc, #1788]	; 1555c <set_opt@@Base+0x7c4>
   14e5c:	mov	r1, r6
   14e60:	add	r0, pc, r0
   14e64:	bl	148e0 <strcmp@plt>
   14e68:	cmp	r0, #0
   14e6c:	beq	15114 <set_opt@@Base+0x37c>
   14e70:	ldr	r0, [pc, #1768]	; 15560 <set_opt@@Base+0x7c8>
   14e74:	mov	r1, r6
   14e78:	add	r0, pc, r0
   14e7c:	bl	148e0 <strcmp@plt>
   14e80:	cmp	r0, #0
   14e84:	beq	1511c <set_opt@@Base+0x384>
   14e88:	ldr	r0, [pc, #1748]	; 15564 <set_opt@@Base+0x7cc>
   14e8c:	mov	r1, r6
   14e90:	mov	r2, r4
   14e94:	add	r0, pc, r0
   14e98:	bl	14a60 <strncmp@plt>
   14e9c:	cmp	r4, #17
   14ea0:	cmpeq	r0, #0
   14ea4:	beq	151f0 <set_opt@@Base+0x458>
   14ea8:	ldr	r0, [pc, #1748]	; 15584 <set_opt@@Base+0x7ec>
   14eac:	mov	r1, r6
   14eb0:	mov	r2, r4
   14eb4:	add	r0, pc, r0
   14eb8:	bl	14a60 <strncmp@plt>
   14ebc:	cmp	r4, #14
   14ec0:	cmpeq	r0, #0
   14ec4:	beq	15130 <set_opt@@Base+0x398>
   14ec8:	ldr	r0, [pc, #1744]	; 155a0 <set_opt@@Base+0x808>
   14ecc:	mov	r1, r6
   14ed0:	mov	r2, r4
   14ed4:	add	r0, pc, r0
   14ed8:	bl	14a60 <strncmp@plt>
   14edc:	cmp	r4, #8
   14ee0:	cmpeq	r0, #0
   14ee4:	beq	151a8 <set_opt@@Base+0x410>
   14ee8:	ldr	r0, [pc, #1724]	; 155ac <set_opt@@Base+0x814>
   14eec:	mov	r1, r6
   14ef0:	mov	r2, r4
   14ef4:	add	r0, pc, r0
   14ef8:	bl	14a60 <strncmp@plt>
   14efc:	cmp	r4, #10
   14f00:	cmpeq	r0, #0
   14f04:	beq	151c0 <set_opt@@Base+0x428>
   14f08:	ldr	r0, [pc, #1704]	; 155b8 <set_opt@@Base+0x820>
   14f0c:	mov	r1, r6
   14f10:	mov	r2, r4
   14f14:	add	r0, pc, r0
   14f18:	bl	14a60 <strncmp@plt>
   14f1c:	cmp	r4, #8
   14f20:	cmpeq	r0, #0
   14f24:	beq	151d0 <set_opt@@Base+0x438>
   14f28:	ldr	r0, [pc, #1684]	; 155c4 <set_opt@@Base+0x82c>
   14f2c:	mov	r1, r6
   14f30:	mov	r2, r4
   14f34:	add	r0, pc, r0
   14f38:	bl	14a60 <strncmp@plt>
   14f3c:	cmp	r4, #14
   14f40:	cmpeq	r0, #0
   14f44:	beq	151e0 <set_opt@@Base+0x448>
   14f48:	ldr	r0, [pc, #1664]	; 155d0 <set_opt@@Base+0x838>
   14f4c:	mov	r1, r6
   14f50:	mov	r2, r4
   14f54:	add	r0, pc, r0
   14f58:	bl	14a60 <strncmp@plt>
   14f5c:	cmp	r4, #7
   14f60:	cmpeq	r0, #0
   14f64:	beq	15288 <set_opt@@Base+0x4f0>
   14f68:	sub	r0, r7, #45	; 0x2d
   14f6c:	cmp	r0, #74	; 0x4a
   14f70:	bhi	153d8 <set_opt@@Base+0x640>
   14f74:	add	r1, pc, #4
   14f78:	ldr	r0, [r1, r0, lsl #2]
   14f7c:	add	pc, r1, r0
   14f80:	andeq	r0, r0, ip, lsr #9
   14f84:	andeq	r0, r0, r8, asr r4
   14f88:	andeq	r0, r0, r8, asr r4
   14f8c:	andeq	r0, r0, r8, asr r4
   14f90:	andeq	r0, r0, r8, asr r4
   14f94:	andeq	r0, r0, r8, asr r4
   14f98:	andeq	r0, r0, r8, asr r4
   14f9c:	andeq	r0, r0, r8, asr r4
   14fa0:	andeq	r0, r0, r8, asr r4
   14fa4:	andeq	r0, r0, r8, asr r4
   14fa8:	andeq	r0, r0, r8, asr r4
   14fac:	andeq	r0, r0, r8, asr r4
   14fb0:	andeq	r0, r0, r8, asr r4
   14fb4:	andeq	r0, r0, r8, asr r4
   14fb8:	andeq	r0, r0, r8, asr r4
   14fbc:	andeq	r0, r0, r8, asr r4
   14fc0:	andeq	r0, r0, r8, asr r4
   14fc4:	andeq	r0, r0, r8, asr r4
   14fc8:	andeq	r0, r0, r8, asr r4
   14fcc:	andeq	r0, r0, r8, asr r4
   14fd0:	andeq	r0, r0, r8, asr r4
   14fd4:	andeq	r0, r0, r8, asr r4
   14fd8:	andeq	r0, r0, r8, asr r4
   14fdc:	andeq	r0, r0, r8, asr r4
   14fe0:	andeq	r0, r0, r8, asr r4
   14fe4:	andeq	r0, r0, r8, asr r4
   14fe8:	andeq	r0, r0, r8, asr r4
   14fec:	andeq	r0, r0, r8, asr r4
   14ff0:	andeq	r0, r0, ip, lsr #2
   14ff4:	andeq	r0, r0, r8, asr r4
   14ff8:	andeq	r0, r0, r8, asr r4
   14ffc:	andeq	r0, r0, r8, asr r4
   15000:	andeq	r0, r0, r8, asr r4
   15004:	andeq	r0, r0, r8, asr r4
   15008:	andeq	r0, r0, r8, asr r4
   1500c:	andeq	r0, r0, r8, asr r4
   15010:	andeq	r0, r0, r8, asr r4
   15014:	andeq	r0, r0, r8, asr r4
   15018:	andeq	r0, r0, r8, asr r4
   1501c:	andeq	r0, r0, r8, asr r4
   15020:	andeq	r0, r0, r8, asr r4
   15024:	andeq	r0, r0, r8, asr r4
   15028:	andeq	r0, r0, r8, asr r4
   1502c:	andeq	r0, r0, r8, asr r4
   15030:	andeq	r0, r0, r8, asr r4
   15034:	andeq	r0, r0, r8, asr r4
   15038:	andeq	r0, r0, r8, asr r4
   1503c:	andeq	r0, r0, r8, asr r4
   15040:	andeq	r0, r0, r8, asr r4
   15044:	andeq	r0, r0, r8, asr r4
   15048:	andeq	r0, r0, r8, asr r4
   1504c:	andeq	r0, r0, r8, asr r4
   15050:	andeq	r0, r0, r8, lsr #7
   15054:	andeq	r0, r0, r8, asr r4
   15058:	andeq	r0, r0, r4, asr r3
   1505c:	muleq	r0, r8, r3
   15060:	andeq	r0, r0, r8, asr r4
   15064:	andeq	r0, r0, r8, asr r4
   15068:	andeq	r0, r0, r8, asr r4
   1506c:	andeq	r0, r0, r8, asr r4
   15070:	andeq	r0, r0, r8, asr r4
   15074:	andeq	r0, r0, r8, asr r4
   15078:	andeq	r0, r0, r8, asr r4
   1507c:	andeq	r0, r0, r8, asr r4
   15080:	andeq	r0, r0, r8, asr r4
   15084:	andeq	r0, r0, r8, asr r4
   15088:	andeq	r0, r0, r4, ror #6
   1508c:	andeq	r0, r0, r8, asr r4
   15090:	andeq	r0, r0, r8, asr r4
   15094:	andeq	r0, r0, r4, lsr r3
   15098:	andeq	r0, r0, r8, asr r4
   1509c:	andeq	r0, r0, r8, asr r4
   150a0:	andeq	r0, r0, r8, asr r4
   150a4:	andeq	r0, r0, r4, asr #6
   150a8:	andeq	r0, r0, r4, lsr #6
   150ac:	ldrb	r1, [r6, #1]!
   150b0:	mov	r0, #1
   150b4:	cmp	r1, #0
   150b8:	bne	150cc <set_opt@@Base+0x334>
   150bc:	mov	r0, #2
   150c0:	cmp	r9, #0
   150c4:	mov	r6, r9
   150c8:	beq	15510 <set_opt@@Base+0x778>
   150cc:	ldr	r2, [r8, #208]	; 0xd0
   150d0:	ldr	r1, [r8, #200]	; 0xc8
   150d4:	add	r3, r2, #1
   150d8:	str	r3, [r8, #208]	; 0xd0
   150dc:	str	r6, [r1, r2, lsl #2]
   150e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   150e4:	mov	r0, #1
   150e8:	str	r0, [r8, #108]	; 0x6c
   150ec:	mov	r0, #0
   150f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   150f4:	mov	r0, #1
   150f8:	str	r0, [r8, #180]	; 0xb4
   150fc:	mov	r0, #0
   15100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15104:	mov	r0, #1
   15108:	str	r0, [r8, #164]	; 0xa4
   1510c:	mov	r0, #0
   15110:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15114:	mov	r0, #1
   15118:	b	15124 <set_opt@@Base+0x38c>
   1511c:	mov	r0, #1
   15120:	str	r0, [r8, #164]	; 0xa4
   15124:	str	r0, [r8, #168]	; 0xa8
   15128:	mov	r0, #0
   1512c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15130:	cmp	r9, #0
   15134:	beq	153a0 <set_opt@@Base+0x608>
   15138:	ldr	r1, [pc, #1104]	; 15590 <set_opt@@Base+0x7f8>
   1513c:	mov	r0, r9
   15140:	add	r1, pc, r1
   15144:	bl	148e0 <strcmp@plt>
   15148:	mov	r4, #0
   1514c:	cmp	r0, #0
   15150:	beq	151a0 <set_opt@@Base+0x408>
   15154:	ldr	r1, [pc, #1080]	; 15594 <set_opt@@Base+0x7fc>
   15158:	mov	r0, r9
   1515c:	add	r1, pc, r1
   15160:	bl	148e0 <strcmp@plt>
   15164:	cmp	r0, #0
   15168:	beq	151a0 <set_opt@@Base+0x408>
   1516c:	ldr	r1, [pc, #1060]	; 15598 <set_opt@@Base+0x800>
   15170:	mov	r0, r9
   15174:	add	r1, pc, r1
   15178:	bl	148e0 <strcmp@plt>
   1517c:	mov	r4, #1
   15180:	cmp	r0, #0
   15184:	beq	151a0 <set_opt@@Base+0x408>
   15188:	ldr	r1, [pc, #1036]	; 1559c <set_opt@@Base+0x804>
   1518c:	mov	r0, r9
   15190:	add	r1, pc, r1
   15194:	bl	148e0 <strcmp@plt>
   15198:	cmp	r0, #0
   1519c:	bne	15450 <set_opt@@Base+0x6b8>
   151a0:	str	r4, [r8, #188]	; 0xbc
   151a4:	b	15294 <set_opt@@Base+0x4fc>
   151a8:	cmp	r9, #0
   151ac:	beq	153bc <set_opt@@Base+0x624>
   151b0:	mov	r0, #1
   151b4:	str	r0, [r8, #112]	; 0x70
   151b8:	str	r9, [r8, #116]	; 0x74
   151bc:	b	15294 <set_opt@@Base+0x4fc>
   151c0:	cmp	r9, #0
   151c4:	beq	153f4 <set_opt@@Base+0x65c>
   151c8:	str	r9, [r8, #120]	; 0x78
   151cc:	b	15294 <set_opt@@Base+0x4fc>
   151d0:	cmp	r9, #0
   151d4:	beq	15410 <set_opt@@Base+0x678>
   151d8:	str	r9, [r8, #124]	; 0x7c
   151dc:	b	15294 <set_opt@@Base+0x4fc>
   151e0:	cmp	r9, #0
   151e4:	beq	1547c <set_opt@@Base+0x6e4>
   151e8:	str	r9, [r8, #196]	; 0xc4
   151ec:	b	15294 <set_opt@@Base+0x4fc>
   151f0:	ldr	r4, [pc, #880]	; 15568 <set_opt@@Base+0x7d0>
   151f4:	mov	r1, #112	; 0x70
   151f8:	mov	r2, #1
   151fc:	ldr	r4, [pc, r4]
   15200:	ldr	r3, [r4]
   15204:	ldr	r0, [pc, #864]	; 1556c <set_opt@@Base+0x7d4>
   15208:	add	r0, pc, r0
   1520c:	bl	1494c <fwrite@plt>
   15210:	cmp	r9, #0
   15214:	beq	15494 <set_opt@@Base+0x6fc>
   15218:	ldr	r1, [pc, #852]	; 15574 <set_opt@@Base+0x7dc>
   1521c:	mov	r0, r9
   15220:	add	r1, pc, r1
   15224:	bl	148e0 <strcmp@plt>
   15228:	mov	r6, #0
   1522c:	cmp	r0, #0
   15230:	beq	15280 <set_opt@@Base+0x4e8>
   15234:	ldr	r1, [pc, #828]	; 15578 <set_opt@@Base+0x7e0>
   15238:	mov	r0, r9
   1523c:	add	r1, pc, r1
   15240:	bl	148e0 <strcmp@plt>
   15244:	cmp	r0, #0
   15248:	beq	15280 <set_opt@@Base+0x4e8>
   1524c:	ldr	r1, [pc, #808]	; 1557c <set_opt@@Base+0x7e4>
   15250:	mov	r0, r9
   15254:	add	r1, pc, r1
   15258:	bl	148e0 <strcmp@plt>
   1525c:	mov	r6, #1
   15260:	cmp	r0, #0
   15264:	beq	15280 <set_opt@@Base+0x4e8>
   15268:	ldr	r1, [pc, #784]	; 15580 <set_opt@@Base+0x7e8>
   1526c:	mov	r0, r9
   15270:	add	r1, pc, r1
   15274:	bl	148e0 <strcmp@plt>
   15278:	cmp	r0, #0
   1527c:	bne	154d0 <set_opt@@Base+0x738>
   15280:	str	r6, [r8, #184]	; 0xb8
   15284:	b	15294 <set_opt@@Base+0x4fc>
   15288:	cmp	r9, #0
   1528c:	beq	154a8 <set_opt@@Base+0x710>
   15290:	str	r9, [r8, #192]	; 0xc0
   15294:	mov	r0, #2
   15298:	cmp	r5, #0
   1529c:	movwne	r0, #0
   152a0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   152a4:	mov	r0, #1
   152a8:	str	r0, [r8, #156]	; 0x9c
   152ac:	mov	r0, #0
   152b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   152b4:	mov	r0, #1
   152b8:	str	r0, [r8, #172]	; 0xac
   152bc:	mov	r0, #0
   152c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   152c4:	mov	r0, #1
   152c8:	str	r0, [r8, #160]	; 0xa0
   152cc:	mov	r0, #0
   152d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   152d4:	mov	r0, #1
   152d8:	str	r0, [r8, #144]	; 0x90
   152dc:	mov	r0, #0
   152e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   152e4:	ldr	r0, [r8, #216]	; 0xd8
   152e8:	cmp	r0, #0
   152ec:	bne	154f4 <set_opt@@Base+0x75c>
   152f0:	ldrb	r1, [r6, #1]!
   152f4:	mov	r0, #1
   152f8:	cmp	r1, #0
   152fc:	bne	15310 <set_opt@@Base+0x578>
   15300:	mov	r0, #2
   15304:	cmp	r9, #0
   15308:	mov	r6, r9
   1530c:	beq	1552c <set_opt@@Base+0x794>
   15310:	str	r6, [r8, #216]	; 0xd8
   15314:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15318:	mov	r0, #1
   1531c:	str	r0, [r8, #112]	; 0x70
   15320:	mov	r0, #0
   15324:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15328:	mov	r0, #1
   1532c:	vmov.i32	q8, #1	; 0x00000001
   15330:	str	r0, [r8, #160]	; 0xa0
   15334:	str	r0, [r8, #172]	; 0xac
   15338:	add	r0, r8, #144	; 0x90
   1533c:	vst1.64	{d16-d17}, [r0]
   15340:	mov	r0, #0
   15344:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15348:	ldr	r0, [pc, #692]	; 15604 <set_opt@@Base+0x86c>
   1534c:	ldr	r0, [pc, r0]
   15350:	ldr	r0, [r0]
   15354:	bl	14c04 <help@@Base>
   15358:	mov	r0, #0
   1535c:	bl	14994 <exit@plt>
   15360:	ldr	r4, [pc, #672]	; 15608 <set_opt@@Base+0x870>
   15364:	ldr	r4, [pc, r4]
   15368:	ldr	r0, [r4]
   1536c:	ldr	r1, [pc, #664]	; 1560c <set_opt@@Base+0x874>
   15370:	ldr	r2, [pc, #664]	; 15610 <set_opt@@Base+0x878>
   15374:	add	r1, pc, r1
   15378:	add	r2, pc, r2
   1537c:	bl	149b8 <fprintf@plt>
   15380:	ldr	r0, [r4]
   15384:	ldr	r1, [pc, #648]	; 15614 <set_opt@@Base+0x87c>
   15388:	ldr	r2, [pc, #648]	; 15618 <set_opt@@Base+0x880>
   1538c:	add	r1, pc, r1
   15390:	add	r2, pc, r2
   15394:	bl	149b8 <fprintf@plt>
   15398:	mov	r0, #0
   1539c:	bl	14994 <exit@plt>
   153a0:	ldr	r0, [pc, #480]	; 15588 <set_opt@@Base+0x7f0>
   153a4:	ldr	r0, [pc, r0]
   153a8:	ldr	r3, [r0]
   153ac:	ldr	r0, [pc, #472]	; 1558c <set_opt@@Base+0x7f4>
   153b0:	add	r0, pc, r0
   153b4:	mov	r1, #41	; 0x29
   153b8:	b	154c0 <set_opt@@Base+0x728>
   153bc:	ldr	r0, [pc, #480]	; 155a4 <set_opt@@Base+0x80c>
   153c0:	mov	r1, #35	; 0x23
   153c4:	ldr	r0, [pc, r0]
   153c8:	ldr	r3, [r0]
   153cc:	ldr	r0, [pc, #468]	; 155a8 <set_opt@@Base+0x810>
   153d0:	add	r0, pc, r0
   153d4:	b	154c0 <set_opt@@Base+0x728>
   153d8:	ldr	r0, [pc, #540]	; 155fc <set_opt@@Base+0x864>
   153dc:	mov	r2, r7
   153e0:	ldr	r0, [pc, r0]
   153e4:	ldr	r0, [r0]
   153e8:	ldr	r1, [pc, #528]	; 15600 <set_opt@@Base+0x868>
   153ec:	add	r1, pc, r1
   153f0:	b	15444 <set_opt@@Base+0x6ac>
   153f4:	ldr	r0, [pc, #436]	; 155b0 <set_opt@@Base+0x818>
   153f8:	mov	r1, #37	; 0x25
   153fc:	ldr	r0, [pc, r0]
   15400:	ldr	r3, [r0]
   15404:	ldr	r0, [pc, #424]	; 155b4 <set_opt@@Base+0x81c>
   15408:	add	r0, pc, r0
   1540c:	b	154c0 <set_opt@@Base+0x728>
   15410:	ldr	r0, [pc, #420]	; 155bc <set_opt@@Base+0x824>
   15414:	mov	r1, #35	; 0x23
   15418:	ldr	r0, [pc, r0]
   1541c:	ldr	r3, [r0]
   15420:	ldr	r0, [pc, #408]	; 155c0 <set_opt@@Base+0x828>
   15424:	add	r0, pc, r0
   15428:	b	154c0 <set_opt@@Base+0x728>
   1542c:	ldr	r0, [pc, #424]	; 155dc <set_opt@@Base+0x844>
   15430:	mov	r2, r6
   15434:	ldr	r0, [pc, r0]
   15438:	ldr	r0, [r0]
   1543c:	ldr	r1, [pc, #412]	; 155e0 <set_opt@@Base+0x848>
   15440:	add	r1, pc, r1
   15444:	bl	149b8 <fprintf@plt>
   15448:	mvn	r0, #0
   1544c:	bl	14994 <exit@plt>
   15450:	ldr	r0, [pc, #456]	; 15620 <set_opt@@Base+0x888>
   15454:	mov	r2, r9
   15458:	ldr	r0, [pc, r0]
   1545c:	ldr	r0, [r0]
   15460:	ldr	r1, [pc, #444]	; 15624 <set_opt@@Base+0x88c>
   15464:	add	r1, pc, r1
   15468:	bl	149b8 <fprintf@plt>
   1546c:	mvn	r0, #0
   15470:	str	r0, [r8, #188]	; 0xbc
   15474:	mvn	r0, #0
   15478:	bl	14994 <exit@plt>
   1547c:	ldr	r0, [pc, #324]	; 155c8 <set_opt@@Base+0x830>
   15480:	ldr	r0, [pc, r0]
   15484:	ldr	r3, [r0]
   15488:	ldr	r0, [pc, #316]	; 155cc <set_opt@@Base+0x834>
   1548c:	add	r0, pc, r0
   15490:	b	153b4 <set_opt@@Base+0x61c>
   15494:	ldr	r3, [r4]
   15498:	ldr	r0, [pc, #208]	; 15570 <set_opt@@Base+0x7d8>
   1549c:	mov	r1, #44	; 0x2c
   154a0:	add	r0, pc, r0
   154a4:	b	154c0 <set_opt@@Base+0x728>
   154a8:	ldr	r0, [pc, #292]	; 155d4 <set_opt@@Base+0x83c>
   154ac:	mov	r1, #28
   154b0:	ldr	r0, [pc, r0]
   154b4:	ldr	r3, [r0]
   154b8:	ldr	r0, [pc, #280]	; 155d8 <set_opt@@Base+0x840>
   154bc:	add	r0, pc, r0
   154c0:	mov	r2, #1
   154c4:	bl	1494c <fwrite@plt>
   154c8:	mvn	r0, #0
   154cc:	bl	14994 <exit@plt>
   154d0:	ldr	r0, [r4]
   154d4:	ldr	r1, [pc, #320]	; 1561c <set_opt@@Base+0x884>
   154d8:	mov	r2, r9
   154dc:	add	r1, pc, r1
   154e0:	bl	149b8 <fprintf@plt>
   154e4:	mvn	r0, #0
   154e8:	str	r0, [r8, #184]	; 0xb8
   154ec:	mvn	r0, #0
   154f0:	bl	14994 <exit@plt>
   154f4:	ldr	r0, [pc, #240]	; 155ec <set_opt@@Base+0x854>
   154f8:	mov	r1, #37	; 0x25
   154fc:	ldr	r0, [pc, r0]
   15500:	ldr	r3, [r0]
   15504:	ldr	r0, [pc, #228]	; 155f0 <set_opt@@Base+0x858>
   15508:	add	r0, pc, r0
   1550c:	b	154c0 <set_opt@@Base+0x728>
   15510:	ldr	r0, [pc, #204]	; 155e4 <set_opt@@Base+0x84c>
   15514:	mov	r1, #28
   15518:	ldr	r0, [pc, r0]
   1551c:	ldr	r3, [r0]
   15520:	ldr	r0, [pc, #192]	; 155e8 <set_opt@@Base+0x850>
   15524:	add	r0, pc, r0
   15528:	b	154c0 <set_opt@@Base+0x728>
   1552c:	ldr	r0, [pc, #192]	; 155f4 <set_opt@@Base+0x85c>
   15530:	mov	r1, #28
   15534:	ldr	r0, [pc, r0]
   15538:	ldr	r3, [r0]
   1553c:	ldr	r0, [pc, #180]	; 155f8 <set_opt@@Base+0x860>
   15540:	add	r0, pc, r0
   15544:	b	154c0 <set_opt@@Base+0x728>
   15548:	andeq	fp, r2, r0, lsl r1
   1554c:	strdeq	fp, [r2], -lr
   15550:	muleq	r2, ip, r4
   15554:	ldrdeq	fp, [r2], -r7
   15558:	andeq	fp, r2, r7, asr #1
   1555c:	strheq	fp, [r2], -ip
   15560:	strheq	fp, [r2], -r2
   15564:	muleq	r2, ip, r0
   15568:	andeq	r6, r5, r0, lsr #29
   1556c:	andeq	sl, r2, sl, lsr sp
   15570:	andeq	sl, r2, r3, lsl fp
   15574:	andeq	ip, r3, lr, lsl #7
   15578:	andeq	sl, r2, r4, ror ip
   1557c:	andeq	r5, r4, r8, lsl #17
   15580:	andeq	sl, r2, r3, asr #24
   15584:	andeq	fp, r2, ip, lsr #2
   15588:	strdeq	r6, [r5], -r8
   1558c:	andeq	sl, r2, pc, lsr ip
   15590:	andeq	ip, r3, lr, ror #8
   15594:	andeq	sl, r2, r4, asr sp
   15598:	andeq	r5, r4, r8, ror #18
   1559c:	andeq	sl, r2, r3, lsr #26
   155a0:			; <UNDEFINED> instruction: 0x0002b3b8
   155a4:	ldrdeq	r6, [r5], -r8
   155a8:	andeq	sl, r2, r9, asr #24
   155ac:	andeq	fp, r2, r9, asr #2
   155b0:	andeq	r6, r5, r0, lsr #25
   155b4:	andeq	sl, r2, r0, asr #24
   155b8:	andeq	fp, r2, sl, asr r1
   155bc:	andeq	r6, r5, r4, lsl #25
   155c0:	andeq	sl, r2, r3, asr ip
   155c4:	andeq	fp, r2, r7, ror #2
   155c8:	andeq	r6, r5, ip, lsl ip
   155cc:	andeq	sl, r2, lr, lsl ip
   155d0:	andeq	fp, r2, lr, asr #2
   155d4:	andeq	r6, r5, ip, ror #23
   155d8:	andeq	sl, r2, r8, lsl ip
   155dc:	andeq	r6, r5, r8, ror #24
   155e0:			; <UNDEFINED> instruction: 0x0002acb1
   155e4:	andeq	r6, r5, r4, lsl #23
   155e8:	andeq	sl, r2, r2, ror #23
   155ec:	andeq	r6, r5, r0, lsr #23
   155f0:	andeq	sl, r2, fp, lsl ip
   155f4:	andeq	r6, r5, r8, ror #22
   155f8:	andeq	sl, r2, r9, lsl #24
   155fc:			; <UNDEFINED> instruction: 0x00056cbc
   15600:	andeq	sl, r2, sl, ror sp
   15604:	andeq	r6, r5, ip, asr sp
   15608:	andeq	r6, r5, r8, lsr sp
   1560c:	andeq	r2, r4, lr, ror r3
   15610:	andeq	r9, r2, r4, lsl #18
   15614:	andeq	r9, r2, r6, lsr #18
   15618:	andeq	r9, r2, pc, lsr #18
   1561c:	ldrdeq	sl, [r2], -fp
   15620:	andeq	r6, r5, r4, asr #24
   15624:	andeq	sl, r2, r3, asr sl

00015628 <get_opt@@Base>:
   15628:	push	{r4, r5, r6, sl, fp, lr}
   1562c:	add	fp, sp, #16
   15630:	mov	r5, r1
   15634:	mov	r6, r0
   15638:	mov	r4, r2
   1563c:	ldrb	r0, [r5, #1]!
   15640:	cmp	r0, #45	; 0x2d
   15644:	beq	15698 <get_opt@@Base+0x70>
   15648:	cmp	r0, #0
   1564c:	beq	156c0 <get_opt@@Base+0x98>
   15650:	mov	r0, r6
   15654:	mov	r1, r5
   15658:	mov	r2, r4
   1565c:	bl	14d98 <set_opt@@Base>
   15660:	mov	r1, r0
   15664:	mov	r0, #0
   15668:	cmp	r1, #0
   1566c:	beq	15684 <get_opt@@Base+0x5c>
   15670:	cmp	r1, #1
   15674:	popeq	{r4, r5, r6, sl, fp, pc}
   15678:	cmp	r1, #2
   1567c:	bne	15688 <get_opt@@Base+0x60>
   15680:	b	156b8 <get_opt@@Base+0x90>
   15684:	add	r5, r5, #1
   15688:	ldrb	r1, [r5]
   1568c:	cmp	r1, #0
   15690:	bne	15650 <get_opt@@Base+0x28>
   15694:	pop	{r4, r5, r6, sl, fp, pc}
   15698:	mov	r0, r6
   1569c:	mov	r1, r5
   156a0:	mov	r2, r4
   156a4:	bl	14d98 <set_opt@@Base>
   156a8:	sub	r0, r0, #2
   156ac:	clz	r0, r0
   156b0:	lsr	r0, r0, #5
   156b4:	pop	{r4, r5, r6, sl, fp, pc}
   156b8:	mov	r0, #1
   156bc:	pop	{r4, r5, r6, sl, fp, pc}
   156c0:	ldr	r0, [pc, #32]	; 156e8 <get_opt@@Base+0xc0>
   156c4:	mov	r1, #24
   156c8:	mov	r2, #1
   156cc:	ldr	r0, [pc, r0]
   156d0:	ldr	r3, [r0]
   156d4:	ldr	r0, [pc, #16]	; 156ec <get_opt@@Base+0xc4>
   156d8:	add	r0, pc, r0
   156dc:	bl	1494c <fwrite@plt>
   156e0:	mvn	r0, #0
   156e4:	bl	14994 <exit@plt>
   156e8:	ldrdeq	r6, [r5], -r0
   156ec:	andeq	sl, r2, r3, lsr #21

000156f0 <parse_opts@@Base>:
   156f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   156f4:	add	fp, sp, #24
   156f8:	cmp	r0, #2
   156fc:	poplt	{r4, r5, r6, r7, r8, r9, fp, pc}
   15700:	mov	r4, r2
   15704:	mov	r8, r1
   15708:	mov	r9, r0
   1570c:	mov	r6, #1
   15710:	ldr	r7, [r8, r6, lsl #2]
   15714:	ldrb	r0, [r7]
   15718:	cmp	r0, #45	; 0x2d
   1571c:	bne	15788 <parse_opts@@Base+0x98>
   15720:	add	r0, r6, #1
   15724:	mov	r5, #0
   15728:	cmp	r0, r9
   1572c:	ldrlt	r5, [r8, r0, lsl #2]
   15730:	ldrb	r0, [r7, #1]!
   15734:	cmp	r0, #45	; 0x2d
   15738:	beq	157a0 <parse_opts@@Base+0xb0>
   1573c:	cmp	r0, #0
   15740:	beq	157d8 <parse_opts@@Base+0xe8>
   15744:	mov	r0, r4
   15748:	mov	r1, r7
   1574c:	mov	r2, r5
   15750:	bl	14d98 <set_opt@@Base>
   15754:	mov	r1, #0
   15758:	cmp	r0, #0
   1575c:	beq	15774 <parse_opts@@Base+0x84>
   15760:	cmp	r0, #1
   15764:	beq	157c4 <parse_opts@@Base+0xd4>
   15768:	cmp	r0, #2
   1576c:	bne	15778 <parse_opts@@Base+0x88>
   15770:	b	157c0 <parse_opts@@Base+0xd0>
   15774:	add	r7, r7, #1
   15778:	ldrb	r0, [r7]
   1577c:	cmp	r0, #0
   15780:	bne	15744 <parse_opts@@Base+0x54>
   15784:	b	157c4 <parse_opts@@Base+0xd4>
   15788:	ldr	r1, [r4, #212]	; 0xd4
   1578c:	ldr	r0, [r4, #204]	; 0xcc
   15790:	add	r2, r1, #1
   15794:	str	r2, [r4, #212]	; 0xd4
   15798:	str	r7, [r0, r1, lsl #2]
   1579c:	b	157c8 <parse_opts@@Base+0xd8>
   157a0:	mov	r0, r4
   157a4:	mov	r1, r7
   157a8:	mov	r2, r5
   157ac:	bl	14d98 <set_opt@@Base>
   157b0:	sub	r0, r0, #2
   157b4:	clz	r0, r0
   157b8:	lsr	r1, r0, #5
   157bc:	b	157c4 <parse_opts@@Base+0xd4>
   157c0:	mov	r1, #1
   157c4:	add	r6, r1, r6
   157c8:	add	r6, r6, #1
   157cc:	cmp	r6, r9
   157d0:	blt	15710 <parse_opts@@Base+0x20>
   157d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   157d8:	ldr	r0, [pc, #32]	; 15800 <parse_opts@@Base+0x110>
   157dc:	mov	r1, #24
   157e0:	mov	r2, #1
   157e4:	ldr	r0, [pc, r0]
   157e8:	ldr	r3, [r0]
   157ec:	ldr	r0, [pc, #16]	; 15804 <parse_opts@@Base+0x114>
   157f0:	add	r0, pc, r0
   157f4:	bl	1494c <fwrite@plt>
   157f8:	mvn	r0, #0
   157fc:	bl	14994 <exit@plt>
   15800:			; <UNDEFINED> instruction: 0x000568b8
   15804:	andeq	sl, r2, fp, lsl #19

00015808 <main@@Base>:
   15808:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1580c:	add	fp, sp, #24
   15810:	sub	sp, sp, #224	; 0xe0
   15814:	cmp	r0, #1
   15818:	ble	15b18 <main@@Base+0x310>
   1581c:	mov	r5, r0
   15820:	mov	r0, sp
   15824:	mov	r4, r1
   15828:	bl	15be0 <flatcc_init_options@@Base>
   1582c:	lsl	r6, r5, #2
   15830:	mov	r0, r6
   15834:	bl	14964 <malloc@plt>
   15838:	cmp	r0, #0
   1583c:	str	r0, [sp, #200]	; 0xc8
   15840:	beq	15b30 <main@@Base+0x328>
   15844:	mov	r0, r6
   15848:	bl	14964 <malloc@plt>
   1584c:	cmp	r0, #0
   15850:	str	r0, [sp, #204]	; 0xcc
   15854:	beq	15b58 <main@@Base+0x350>
   15858:	mov	r2, sp
   1585c:	mov	r0, r5
   15860:	mov	r1, r4
   15864:	bl	156f0 <parse_opts@@Base>
   15868:	ldr	r3, [sp, #144]	; 0x90
   1586c:	ldr	r6, [sp, #156]	; 0x9c
   15870:	ldr	r0, [sp, #212]	; 0xd4
   15874:	cmp	r3, #0
   15878:	mov	r2, r3
   1587c:	mov	r1, r6
   15880:	movwne	r2, #1
   15884:	cmp	r6, #0
   15888:	movwne	r1, #1
   1588c:	cmp	r0, #0
   15890:	and	r7, r1, r2
   15894:	str	r7, [sp, #148]	; 0x94
   15898:	beq	15910 <main@@Base+0x108>
   1589c:	ldr	r1, [sp, #152]	; 0x98
   158a0:	mov	r2, #1
   158a4:	orrs	r1, r1, r6
   158a8:	bne	158c8 <main@@Base+0xc0>
   158ac:	ldr	r1, [sp, #160]	; 0xa0
   158b0:	orrs	r1, r1, r3
   158b4:	movwne	r1, #1
   158b8:	orrs	r1, r7, r1
   158bc:	ldreq	r1, [sp, #164]	; 0xa4
   158c0:	cmpeq	r1, #0
   158c4:	beq	15a70 <main@@Base+0x268>
   158c8:	ldr	r1, [sp, #180]	; 0xb4
   158cc:	cmp	r1, #0
   158d0:	beq	15960 <main@@Base+0x158>
   158d4:	cmp	r2, #0
   158d8:	beq	15984 <main@@Base+0x17c>
   158dc:	ldr	r1, [sp, #108]	; 0x6c
   158e0:	cmp	r1, #0
   158e4:	bne	15ab8 <main@@Base+0x2b0>
   158e8:	ldr	r1, [sp, #124]	; 0x7c
   158ec:	cmp	r1, #0
   158f0:	beq	15984 <main@@Base+0x17c>
   158f4:	ldr	r0, [pc, #684]	; 15ba8 <main@@Base+0x3a0>
   158f8:	mov	r1, #58	; 0x3a
   158fc:	ldr	r0, [pc, r0]
   15900:	ldr	r3, [r0]
   15904:	ldr	r0, [pc, #672]	; 15bac <main@@Base+0x3a4>
   15908:	add	r0, pc, r0
   1590c:	b	15ad0 <main@@Base+0x2c8>
   15910:	cmp	r3, #0
   15914:	beq	15a54 <main@@Base+0x24c>
   15918:	ldr	r0, [sp, #180]	; 0xb4
   1591c:	cmp	r0, #0
   15920:	bne	15a54 <main@@Base+0x24c>
   15924:	mov	r0, sp
   15928:	mov	r1, #0
   1592c:	mov	r2, #0
   15930:	mov	r3, #0
   15934:	bl	15cdc <flatcc_create_context@@Base>
   15938:	cmp	r0, #0
   1593c:	beq	15a38 <main@@Base+0x230>
   15940:	mov	r4, r0
   15944:	bl	16474 <flatcc_generate_files@@Base>
   15948:	cmp	r0, #0
   1594c:	bne	15a2c <main@@Base+0x224>
   15950:	mov	r0, r4
   15954:	bl	165ac <flatcc_destroy_context@@Base>
   15958:	mov	r4, #0
   1595c:	b	15afc <main@@Base+0x2f4>
   15960:	cmp	r6, #0
   15964:	eor	r1, r2, #1
   15968:	movwne	r6, #1
   1596c:	orrs	r1, r6, r1
   15970:	ldreq	r1, [sp, #160]	; 0xa0
   15974:	cmpeq	r1, #0
   15978:	beq	15984 <main@@Base+0x17c>
   1597c:	mov	r1, #1
   15980:	str	r1, [sp, #152]	; 0x98
   15984:	ldr	r1, [sp, #120]	; 0x78
   15988:	cmp	r1, #0
   1598c:	beq	1599c <main@@Base+0x194>
   15990:	ldr	r1, [sp, #116]	; 0x74
   15994:	cmp	r1, #0
   15998:	beq	15a80 <main@@Base+0x278>
   1599c:	ldr	r1, [sp, #108]	; 0x6c
   159a0:	cmp	r1, #0
   159a4:	ldrne	r1, [sp, #124]	; 0x7c
   159a8:	cmpne	r1, #0
   159ac:	bne	15a9c <main@@Base+0x294>
   159b0:	cmp	r0, #1
   159b4:	blt	15a24 <main@@Base+0x21c>
   159b8:	ldr	r7, [sp, #204]	; 0xcc
   159bc:	mov	r6, #0
   159c0:	mov	r5, sp
   159c4:	mov	r8, #1
   159c8:	ldr	r1, [r7, r6, lsl #2]
   159cc:	mov	r0, r5
   159d0:	mov	r2, #0
   159d4:	mov	r3, #0
   159d8:	bl	15cdc <flatcc_create_context@@Base>
   159dc:	cmp	r0, #0
   159e0:	beq	15a38 <main@@Base+0x230>
   159e4:	ldr	r1, [r7, r6, lsl #2]
   159e8:	mov	r4, r0
   159ec:	bl	15de8 <flatcc_parse_file@@Base>
   159f0:	cmp	r0, #0
   159f4:	bne	15a2c <main@@Base+0x224>
   159f8:	mov	r0, r4
   159fc:	bl	16474 <flatcc_generate_files@@Base>
   15a00:	cmp	r0, #0
   15a04:	bne	15a2c <main@@Base+0x224>
   15a08:	mov	r0, r4
   15a0c:	bl	165ac <flatcc_destroy_context@@Base>
   15a10:	str	r8, [sp, #128]	; 0x80
   15a14:	add	r6, r6, #1
   15a18:	ldr	r0, [sp, #212]	; 0xd4
   15a1c:	cmp	r6, r0
   15a20:	blt	159c8 <main@@Base+0x1c0>
   15a24:	mov	r4, #0
   15a28:	b	15afc <main@@Base+0x2f4>
   15a2c:	mov	r0, r4
   15a30:	bl	165ac <flatcc_destroy_context@@Base>
   15a34:	b	15ad8 <main@@Base+0x2d0>
   15a38:	ldr	r0, [pc, #336]	; 15b90 <main@@Base+0x388>
   15a3c:	mov	r1, #49	; 0x31
   15a40:	ldr	r0, [pc, r0]
   15a44:	ldr	r3, [r0]
   15a48:	ldr	r0, [pc, #324]	; 15b94 <main@@Base+0x38c>
   15a4c:	add	r0, pc, r0
   15a50:	b	15ad0 <main@@Base+0x2c8>
   15a54:	ldr	r0, [pc, #300]	; 15b88 <main@@Base+0x380>
   15a58:	mov	r1, #17
   15a5c:	ldr	r0, [pc, r0]
   15a60:	ldr	r3, [r0]
   15a64:	ldr	r0, [pc, #288]	; 15b8c <main@@Base+0x384>
   15a68:	add	r0, pc, r0
   15a6c:	b	15ad0 <main@@Base+0x2c8>
   15a70:	ldr	r2, [sp, #168]	; 0xa8
   15a74:	cmp	r2, #0
   15a78:	movwne	r2, #1
   15a7c:	b	158c8 <main@@Base+0xc0>
   15a80:	ldr	r0, [pc, #272]	; 15b98 <main@@Base+0x390>
   15a84:	mov	r1, #44	; 0x2c
   15a88:	ldr	r0, [pc, r0]
   15a8c:	ldr	r3, [r0]
   15a90:	ldr	r0, [pc, #260]	; 15b9c <main@@Base+0x394>
   15a94:	add	r0, pc, r0
   15a98:	b	15ad0 <main@@Base+0x2c8>
   15a9c:	ldr	r0, [pc, #268]	; 15bb0 <main@@Base+0x3a8>
   15aa0:	mov	r1, #38	; 0x26
   15aa4:	ldr	r0, [pc, r0]
   15aa8:	ldr	r3, [r0]
   15aac:	ldr	r0, [pc, #256]	; 15bb4 <main@@Base+0x3ac>
   15ab0:	add	r0, pc, r0
   15ab4:	b	15ad0 <main@@Base+0x2c8>
   15ab8:	ldr	r0, [pc, #224]	; 15ba0 <main@@Base+0x398>
   15abc:	mov	r1, #57	; 0x39
   15ac0:	ldr	r0, [pc, r0]
   15ac4:	ldr	r3, [r0]
   15ac8:	ldr	r0, [pc, #212]	; 15ba4 <main@@Base+0x39c>
   15acc:	add	r0, pc, r0
   15ad0:	mov	r2, #1
   15ad4:	bl	1494c <fwrite@plt>
   15ad8:	ldr	r0, [pc, #216]	; 15bb8 <main@@Base+0x3b0>
   15adc:	mov	r1, #14
   15ae0:	mov	r2, #1
   15ae4:	ldr	r0, [pc, r0]
   15ae8:	ldr	r3, [r0]
   15aec:	ldr	r0, [pc, #200]	; 15bbc <main@@Base+0x3b4>
   15af0:	add	r0, pc, r0
   15af4:	bl	1494c <fwrite@plt>
   15af8:	mvn	r4, #0
   15afc:	ldr	r0, [sp, #200]	; 0xc8
   15b00:	bl	148f8 <free@plt>
   15b04:	ldr	r0, [sp, #204]	; 0xcc
   15b08:	bl	148f8 <free@plt>
   15b0c:	mov	r0, r4
   15b10:	sub	sp, fp, #24
   15b14:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15b18:	ldr	r0, [pc, #160]	; 15bc0 <main@@Base+0x3b8>
   15b1c:	ldr	r0, [pc, r0]
   15b20:	ldr	r0, [r0]
   15b24:	bl	14b80 <usage@@Base>
   15b28:	mvn	r0, #0
   15b2c:	bl	14994 <exit@plt>
   15b30:	ldr	r0, [pc, #140]	; 15bc4 <main@@Base+0x3bc>
   15b34:	mov	r1, #26
   15b38:	mov	r2, #1
   15b3c:	ldr	r0, [pc, r0]
   15b40:	ldr	r3, [r0]
   15b44:	ldr	r0, [pc, #124]	; 15bc8 <main@@Base+0x3c0>
   15b48:	add	r0, pc, r0
   15b4c:	bl	1494c <fwrite@plt>
   15b50:	mvn	r0, #0
   15b54:	bl	14994 <exit@plt>
   15b58:	ldr	r0, [pc, #108]	; 15bcc <main@@Base+0x3c4>
   15b5c:	mov	r1, #26
   15b60:	mov	r2, #1
   15b64:	ldr	r0, [pc, r0]
   15b68:	ldr	r3, [r0]
   15b6c:	ldr	r0, [pc, #92]	; 15bd0 <main@@Base+0x3c8>
   15b70:	add	r0, pc, r0
   15b74:	bl	1494c <fwrite@plt>
   15b78:	ldr	r0, [sp, #200]	; 0xc8
   15b7c:	bl	148f8 <free@plt>
   15b80:	mvn	r0, #0
   15b84:	bl	14994 <exit@plt>
   15b88:	andeq	r6, r5, r0, asr #12
   15b8c:	andeq	sl, r2, r7, asr #14
   15b90:	andeq	r6, r5, ip, asr r6
   15b94:	andeq	sl, r2, r5, ror r7
   15b98:	andeq	r6, r5, r4, lsl r6
   15b9c:	ldrdeq	sl, [r2], -r4
   15ba0:	ldrdeq	r6, [r5], -ip
   15ba4:	andeq	sl, r2, r7, lsr #14
   15ba8:	andeq	r6, r5, r0, lsr #15
   15bac:	andeq	sl, r2, r5, lsr #18
   15bb0:	strdeq	r6, [r5], -r8
   15bb4:	andeq	sl, r2, r5, ror #15
   15bb8:			; <UNDEFINED> instruction: 0x000565b8
   15bbc:	andeq	sl, r2, ip, asr #15
   15bc0:	andeq	r6, r5, r0, lsl #11
   15bc4:	andeq	r6, r5, r0, ror #10
   15bc8:	andeq	sl, r2, ip, asr #12
   15bcc:	andeq	r6, r5, r8, lsr r5
   15bd0:	andeq	sl, r2, r4, lsr #12
	...

00015be0 <flatcc_init_options@@Base>:
   15be0:	push	{r4, r5, fp, lr}
   15be4:	add	fp, sp, #8
   15be8:	mov	r1, #0
   15bec:	mov	r2, #224	; 0xe0
   15bf0:	mov	r4, r0
   15bf4:	mov	r5, #0
   15bf8:	bl	149d0 <memset@plt>
   15bfc:	add	r0, pc, #172	; 0xac
   15c00:	add	r1, pc, #184	; 0xb8
   15c04:	mov	r2, #100	; 0x64
   15c08:	vmov.i32	q8, #1	; 0x00000001
   15c0c:	mov	lr, #4
   15c10:	movw	ip, #65534	; 0xfffe
   15c14:	vmov.i32	q9, #0	; 0x00000000
   15c18:	vld1.64	{d20-d21}, [r1 :128]
   15c1c:	mov	r1, #65536	; 0x10000
   15c20:	vld1.64	{d22-d23}, [r0 :128]
   15c24:	stm	r4, {r1, r2}
   15c28:	add	r1, r4, #16
   15c2c:	str	r2, [r4, #8]
   15c30:	mov	r2, #1
   15c34:	vst1.64	{d16-d17}, [r1]
   15c38:	add	r1, r4, #32
   15c3c:	vst1.64	{d16-d17}, [r1]
   15c40:	str	lr, [r4, #64]	; 0x40
   15c44:	ldr	r3, [pc, #132]	; 15cd0 <flatcc_init_options@@Base+0xf0>
   15c48:	ldr	r0, [pc, #132]	; 15cd4 <flatcc_init_options@@Base+0xf4>
   15c4c:	ldr	r1, [pc, #132]	; 15cd8 <flatcc_init_options@@Base+0xf8>
   15c50:	str	r2, [r4, #84]	; 0x54
   15c54:	str	ip, [r4, #88]	; 0x58
   15c58:	str	r5, [r4, #92]	; 0x5c
   15c5c:	add	r3, pc, r3
   15c60:	add	r0, pc, r0
   15c64:	add	r1, pc, r1
   15c68:	str	r3, [r4, #96]	; 0x60
   15c6c:	str	r0, [r4, #100]	; 0x64
   15c70:	add	r0, r4, #144	; 0x90
   15c74:	str	r1, [r4, #104]	; 0x68
   15c78:	str	r5, [r4, #132]	; 0x84
   15c7c:	str	r2, [r4, #136]	; 0x88
   15c80:	str	r2, [r4, #140]	; 0x8c
   15c84:	str	r5, [r4, #164]	; 0xa4
   15c88:	vst1.64	{d18-d19}, [r0]
   15c8c:	add	r0, r4, #48	; 0x30
   15c90:	vst1.64	{d20-d21}, [r0]
   15c94:	add	r0, r4, #68	; 0x44
   15c98:	vst1.32	{d22-d23}, [r0]
   15c9c:	str	lr, [r4, #176]	; 0xb0
   15ca0:	str	r5, [r4, #180]	; 0xb4
   15ca4:	str	r2, [r4, #184]	; 0xb8
   15ca8:	str	r5, [r4, #188]	; 0xbc
   15cac:	pop	{r4, r5, fp, pc}
   15cb0:	andeq	r0, r0, r2
   15cb4:	andeq	r0, r0, r1
   15cb8:	andeq	r0, r0, r1
   15cbc:	andeq	r0, r0, r0
   15cc0:	andeq	r0, r0, r1
   15cc4:	andeq	r0, r0, r1
	...
   15cd0:	andeq	sl, r2, pc, ror #12
   15cd4:	andeq	sl, r2, r0, ror r6
   15cd8:	andeq	sl, r2, r2, ror r6

00015cdc <flatcc_create_context@@Base>:
   15cdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15ce0:	add	fp, sp, #24
   15ce4:	sub	sp, sp, #8
   15ce8:	mov	r6, r0
   15cec:	mov	r0, #560	; 0x230
   15cf0:	mov	r7, r3
   15cf4:	mov	r8, r2
   15cf8:	mov	r9, r1
   15cfc:	bl	14964 <malloc@plt>
   15d00:	cmp	r0, #0
   15d04:	beq	15d3c <flatcc_create_context@@Base+0x60>
   15d08:	mov	r4, #0
   15d0c:	mov	r1, r6
   15d10:	mov	r2, r9
   15d14:	mov	r3, r8
   15d18:	mov	r5, r0
   15d1c:	str	r7, [sp]
   15d20:	str	r4, [sp, #4]
   15d24:	bl	2afd0 <__flatcc_fb_init_parser@@Base>
   15d28:	cmp	r0, #0
   15d2c:	beq	15d44 <flatcc_create_context@@Base+0x68>
   15d30:	mov	r0, r5
   15d34:	bl	148f8 <free@plt>
   15d38:	b	15d48 <flatcc_create_context@@Base+0x6c>
   15d3c:	mov	r4, #0
   15d40:	b	15d48 <flatcc_create_context@@Base+0x6c>
   15d44:	mov	r4, r5
   15d48:	mov	r0, r4
   15d4c:	sub	sp, fp, #24
   15d50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015d54 <flatcc_parse_buffer@@Base>:
   15d54:	push	{r4, r5, r6, sl, fp, lr}
   15d58:	add	fp, sp, #16
   15d5c:	mov	r4, r0
   15d60:	mov	r0, #1
   15d64:	mov	r5, r2
   15d68:	mov	r6, r1
   15d6c:	str	r0, [r4, #140]	; 0x8c
   15d70:	ldr	r0, [r4, #128]	; 0x80
   15d74:	cmp	r0, r2
   15d78:	bcs	15d9c <flatcc_parse_buffer@@Base+0x48>
   15d7c:	cmp	r0, #0
   15d80:	beq	15d9c <flatcc_parse_buffer@@Base+0x48>
   15d84:	ldr	r1, [pc, #88]	; 15de4 <flatcc_parse_buffer@@Base+0x90>
   15d88:	mov	r0, r4
   15d8c:	add	r1, pc, r1
   15d90:	bl	2abbc <__flatcc_fb_print_error@@Base>
   15d94:	mvn	r0, #0
   15d98:	pop	{r4, r5, r6, sl, fp, pc}
   15d9c:	add	r0, r4, #524	; 0x20c
   15da0:	add	r1, r4, #352	; 0x160
   15da4:	mov	r2, #1
   15da8:	bl	2843c <ptr_set_insert_item@@Base>
   15dac:	mov	r0, r4
   15db0:	mov	r1, r6
   15db4:	mov	r2, r5
   15db8:	mov	r3, #0
   15dbc:	bl	2b2d0 <__flatcc_fb_parse@@Base>
   15dc0:	mov	r1, r0
   15dc4:	mvn	r0, #0
   15dc8:	cmp	r1, #0
   15dcc:	popne	{r4, r5, r6, sl, fp, pc}
   15dd0:	mov	r0, r4
   15dd4:	bl	33d48 <__flatcc_fb_build_schema@@Base>
   15dd8:	cmp	r0, #0
   15ddc:	mvnne	r0, #0
   15de0:	pop	{r4, r5, r6, sl, fp, pc}
   15de4:	andeq	sl, r2, pc, asr #10

00015de8 <flatcc_parse_file@@Base>:
   15de8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15dec:	add	fp, sp, #28
   15df0:	sub	sp, sp, #20
   15df4:	mov	r5, r0
   15df8:	mov	r0, r1
   15dfc:	mov	r7, r1
   15e00:	bl	149a0 <strlen@plt>
   15e04:	mov	r8, r0
   15e08:	ldr	r0, [r5, #412]	; 0x19c
   15e0c:	add	r4, r5, #352	; 0x160
   15e10:	mov	r2, #1
   15e14:	mov	r1, r4
   15e18:	add	r0, r0, #32
   15e1c:	bl	2a114 <fb_schema_table_insert_item@@Base>
   15e20:	mov	r6, #0
   15e24:	cmp	r0, #0
   15e28:	bne	1633c <flatcc_parse_file@@Base+0x554>
   15e2c:	ldr	r0, [r5, #552]	; 0x228
   15e30:	cmp	r0, #0
   15e34:	str	r0, [sp, #12]
   15e38:	beq	15f88 <flatcc_parse_file@@Base+0x1a0>
   15e3c:	ldr	r0, [r5, #336]	; 0x150
   15e40:	str	r4, [sp, #8]
   15e44:	cmp	r0, #1
   15e48:	blt	15edc <flatcc_parse_file@@Base+0xf4>
   15e4c:	mov	r9, #0
   15e50:	add	r4, sp, #16
   15e54:	ldr	r0, [r5, #328]	; 0x148
   15e58:	ldr	r6, [r0, r9, lsl #2]
   15e5c:	mov	r0, r6
   15e60:	bl	149a0 <strlen@plt>
   15e64:	mov	r1, r0
   15e68:	ldr	r0, [pc, #1376]	; 163d0 <flatcc_parse_file@@Base+0x5e8>
   15e6c:	mov	r2, r7
   15e70:	mov	r3, r8
   15e74:	add	r0, pc, r0
   15e78:	str	r0, [sp]
   15e7c:	mov	r0, #1
   15e80:	str	r0, [sp, #4]
   15e84:	mov	r0, r6
   15e88:	bl	2a560 <__flatcc_fb_create_join_path_n@@Base>
   15e8c:	cmp	r0, #0
   15e90:	beq	16380 <flatcc_parse_file@@Base+0x598>
   15e94:	ldr	r1, [r5, #128]	; 0x80
   15e98:	mov	r2, r4
   15e9c:	mov	r6, r0
   15ea0:	bl	2aab4 <__flatcc_fb_read_file@@Base>
   15ea4:	cmp	r0, #0
   15ea8:	bne	15fbc <flatcc_parse_file@@Base+0x1d4>
   15eac:	mov	r0, r6
   15eb0:	bl	148f8 <free@plt>
   15eb4:	ldr	r0, [r5, #128]	; 0x80
   15eb8:	ldr	r1, [sp, #16]
   15ebc:	cmp	r1, r0
   15ec0:	bls	15ecc <flatcc_parse_file@@Base+0xe4>
   15ec4:	cmp	r0, #0
   15ec8:	bne	162f0 <flatcc_parse_file@@Base+0x508>
   15ecc:	ldr	r0, [r5, #336]	; 0x150
   15ed0:	add	r9, r9, #1
   15ed4:	cmp	r9, r0
   15ed8:	blt	15e54 <flatcc_parse_file@@Base+0x6c>
   15edc:	ldr	r0, [sp, #12]
   15ee0:	cmp	r0, #0
   15ee4:	beq	15f6c <flatcc_parse_file@@Base+0x184>
   15ee8:	ldr	r6, [r5, #552]	; 0x228
   15eec:	mov	r0, r6
   15ef0:	bl	149a0 <strlen@plt>
   15ef4:	mov	r1, r0
   15ef8:	mov	r0, r6
   15efc:	bl	2a9bc <__flatcc_fb_find_basename@@Base>
   15f00:	ldr	r2, [pc, #1228]	; 163d4 <flatcc_parse_file@@Base+0x5ec>
   15f04:	mov	r1, r0
   15f08:	mov	r0, #1
   15f0c:	mov	r3, r8
   15f10:	str	r0, [sp, #4]
   15f14:	mov	r0, r6
   15f18:	add	r2, pc, r2
   15f1c:	str	r2, [sp]
   15f20:	mov	r2, r7
   15f24:	bl	2a560 <__flatcc_fb_create_join_path_n@@Base>
   15f28:	cmp	r0, #0
   15f2c:	beq	16380 <flatcc_parse_file@@Base+0x598>
   15f30:	ldr	r1, [r5, #128]	; 0x80
   15f34:	add	r2, sp, #16
   15f38:	mov	r6, r0
   15f3c:	bl	2aab4 <__flatcc_fb_read_file@@Base>
   15f40:	ldr	r4, [sp, #8]
   15f44:	cmp	r0, #0
   15f48:	bne	15fc0 <flatcc_parse_file@@Base+0x1d8>
   15f4c:	mov	r0, r6
   15f50:	bl	148f8 <free@plt>
   15f54:	ldr	r0, [r5, #128]	; 0x80
   15f58:	ldr	r1, [sp, #16]
   15f5c:	cmp	r1, r0
   15f60:	bls	15f6c <flatcc_parse_file@@Base+0x184>
   15f64:	cmp	r0, #0
   15f68:	bne	162f0 <flatcc_parse_file@@Base+0x508>
   15f6c:	ldr	r1, [pc, #1124]	; 163d8 <flatcc_parse_file@@Base+0x5f0>
   15f70:	mov	r0, r5
   15f74:	mov	r2, r7
   15f78:	add	r1, pc, r1
   15f7c:	bl	2abbc <__flatcc_fb_print_error@@Base>
   15f80:	mvn	r6, #0
   15f84:	b	1633c <flatcc_parse_file@@Base+0x554>
   15f88:	ldr	r1, [r5, #128]	; 0x80
   15f8c:	add	r2, sp, #16
   15f90:	mov	r0, r7
   15f94:	bl	2aab4 <__flatcc_fb_read_file@@Base>
   15f98:	cmp	r0, #0
   15f9c:	beq	162cc <flatcc_parse_file@@Base+0x4e4>
   15fa0:	mov	sl, r0
   15fa4:	mov	r0, r7
   15fa8:	bl	2a4b4 <__flatcc_fb_copy_path@@Base>
   15fac:	cmp	r0, #0
   15fb0:	beq	16380 <flatcc_parse_file@@Base+0x598>
   15fb4:	mov	r6, r0
   15fb8:	b	15fc4 <flatcc_parse_file@@Base+0x1dc>
   15fbc:	ldr	r4, [sp, #8]
   15fc0:	mov	sl, r0
   15fc4:	ldr	r0, [r5, #412]	; 0x19c
   15fc8:	ldr	r2, [sp, #16]
   15fcc:	mov	r3, #1
   15fd0:	ldr	r1, [r0, #56]	; 0x38
   15fd4:	add	r1, r1, r2
   15fd8:	str	r1, [r0, #56]	; 0x38
   15fdc:	mov	r0, r5
   15fe0:	mov	r1, sl
   15fe4:	str	r6, [r5, #548]	; 0x224
   15fe8:	bl	2b2d0 <__flatcc_fb_parse@@Base>
   15fec:	cmp	r0, #0
   15ff0:	bne	16338 <flatcc_parse_file@@Base+0x550>
   15ff4:	ldr	r6, [r4]
   15ff8:	mov	r8, r4
   15ffc:	cmp	r6, #0
   16000:	beq	16134 <flatcc_parse_file@@Base+0x34c>
   16004:	add	r0, r5, #128	; 0x80
   16008:	str	r0, [sp, #8]
   1600c:	ldrd	r0, [r6, #8]
   16010:	bl	2a45c <__flatcc_fb_copy_path_n@@Base>
   16014:	cmp	r0, #0
   16018:	beq	16380 <flatcc_parse_file@@Base+0x598>
   1601c:	ldr	sl, [r5, #412]	; 0x19c
   16020:	mov	r9, r0
   16024:	ldr	r0, [r5, #132]	; 0x84
   16028:	ldr	r1, [sl, #52]	; 0x34
   1602c:	cmp	r1, r0
   16030:	cmpge	r0, #1
   16034:	bge	16308 <flatcc_parse_file@@Base+0x520>
   16038:	ldr	r0, [r5, #136]	; 0x88
   1603c:	ldr	r1, [sl, #48]	; 0x30
   16040:	cmp	r1, r0
   16044:	cmpge	r0, #1
   16048:	bge	16314 <flatcc_parse_file@@Base+0x52c>
   1604c:	mov	r0, #560	; 0x230
   16050:	bl	14964 <malloc@plt>
   16054:	cmp	r0, #0
   16058:	beq	16330 <flatcc_parse_file@@Base+0x548>
   1605c:	ldr	r3, [r5, #8]
   16060:	ldr	r1, [r5, #12]
   16064:	mov	r2, r9
   16068:	mov	r7, r0
   1606c:	stm	sp, {r1, sl}
   16070:	ldr	r1, [sp, #8]
   16074:	bl	2afd0 <__flatcc_fb_init_parser@@Base>
   16078:	cmp	r0, #0
   1607c:	bne	16328 <flatcc_parse_file@@Base+0x540>
   16080:	add	r0, sl, #32
   16084:	add	r1, r7, #352	; 0x160
   16088:	bl	2a1e4 <fb_schema_table_find_item@@Base>
   1608c:	cmp	r0, #0
   16090:	beq	160cc <flatcc_parse_file@@Base+0x2e4>
   16094:	ldr	r1, [pc, #836]	; 163e0 <flatcc_parse_file@@Base+0x5f8>
   16098:	add	r0, r0, #172	; 0xac
   1609c:	mov	r2, r8
   160a0:	add	r1, pc, r1
   160a4:	bl	286b8 <ptr_set_visit@@Base>
   160a8:	ldr	r4, [r7]
   160ac:	mov	r0, r7
   160b0:	bl	320f4 <__flatcc_fb_clear_parser@@Base>
   160b4:	mov	r0, r7
   160b8:	bl	148f8 <free@plt>
   160bc:	cmp	r4, #0
   160c0:	mov	r7, r4
   160c4:	bne	160a8 <flatcc_parse_file@@Base+0x2c0>
   160c8:	b	16120 <flatcc_parse_file@@Base+0x338>
   160cc:	ldr	r0, [r5]
   160d0:	str	r0, [r7]
   160d4:	str	r7, [r5]
   160d8:	ldr	r0, [r5, #548]	; 0x224
   160dc:	str	r0, [r7, #552]	; 0x228
   160e0:	ldr	r0, [sl, #48]	; 0x30
   160e4:	ldr	r1, [sl, #52]	; 0x34
   160e8:	add	r0, r0, #1
   160ec:	add	r1, r1, #1
   160f0:	str	r0, [sl, #48]	; 0x30
   160f4:	str	r1, [sl, #52]	; 0x34
   160f8:	mov	r0, r7
   160fc:	mov	r1, r9
   16100:	bl	15de8 <flatcc_parse_file@@Base>
   16104:	cmp	r0, #0
   16108:	bne	16330 <flatcc_parse_file@@Base+0x548>
   1610c:	ldr	r1, [pc, #720]	; 163e4 <flatcc_parse_file@@Base+0x5fc>
   16110:	add	r0, r7, #524	; 0x20c
   16114:	mov	r2, r8
   16118:	add	r1, pc, r1
   1611c:	bl	286b8 <ptr_set_visit@@Base>
   16120:	mov	r0, r9
   16124:	bl	148f8 <free@plt>
   16128:	ldr	r6, [r6]
   1612c:	cmp	r6, #0
   16130:	bne	1600c <flatcc_parse_file@@Base+0x224>
   16134:	add	r0, r5, #524	; 0x20c
   16138:	mov	r1, r8
   1613c:	mov	r2, #1
   16140:	bl	2843c <ptr_set_insert_item@@Base>
   16144:	mov	r0, r5
   16148:	bl	33d48 <__flatcc_fb_build_schema@@Base>
   1614c:	cmp	r0, #0
   16150:	bne	16338 <flatcc_parse_file@@Base+0x550>
   16154:	ldr	r0, [sp, #12]
   16158:	mov	r6, #0
   1615c:	cmp	r0, #0
   16160:	bne	1633c <flatcc_parse_file@@Base+0x554>
   16164:	ldr	r0, [r5, #240]	; 0xf0
   16168:	cmp	r0, #0
   1616c:	beq	1633c <flatcc_parse_file@@Base+0x554>
   16170:	ldr	r0, [r5, #552]	; 0x228
   16174:	cmp	r0, #0
   16178:	bne	163a8 <flatcc_parse_file@@Base+0x5c0>
   1617c:	ldr	r1, [r5, #244]	; 0xf4
   16180:	ldr	r7, [r5, #248]	; 0xf8
   16184:	ldr	r3, [r5, #344]	; 0x158
   16188:	ldr	ip, [r5, #512]	; 0x200
   1618c:	ldr	r2, [pc, #596]	; 163e8 <flatcc_parse_file@@Base+0x600>
   16190:	ldr	r6, [pc, #596]	; 163ec <flatcc_parse_file@@Base+0x604>
   16194:	add	r6, pc, r6
   16198:	add	r2, pc, r2
   1619c:	cmp	r1, #0
   161a0:	movne	r2, r6
   161a4:	cmp	r3, #0
   161a8:	mov	r0, r6
   161ac:	mov	r4, r6
   161b0:	moveq	r3, r6
   161b4:	cmp	r1, #0
   161b8:	moveq	r0, r3
   161bc:	moveq	r1, ip
   161c0:	cmp	r7, #0
   161c4:	bne	161ec <flatcc_parse_file@@Base+0x404>
   161c8:	ldr	r7, [r5, #308]	; 0x134
   161cc:	ldr	r4, [pc, #540]	; 163f0 <flatcc_parse_file@@Base+0x608>
   161d0:	ldr	r6, [pc, #540]	; 163f4 <flatcc_parse_file@@Base+0x60c>
   161d4:	cmp	r7, #0
   161d8:	add	r4, pc, r4
   161dc:	add	r6, pc, r6
   161e0:	mov	r7, ip
   161e4:	moveq	r6, r4
   161e8:	mov	r4, r3
   161ec:	mov	r3, #1
   161f0:	bl	2a694 <__flatcc_fb_create_join_path@@Base>
   161f4:	cmp	r0, #0
   161f8:	beq	16380 <flatcc_parse_file@@Base+0x598>
   161fc:	mov	r8, r0
   16200:	mov	r0, r4
   16204:	mov	r1, r7
   16208:	mov	r2, r6
   1620c:	mov	r3, #1
   16210:	bl	2a694 <__flatcc_fb_create_join_path@@Base>
   16214:	cmp	r0, #0
   16218:	beq	16380 <flatcc_parse_file@@Base+0x598>
   1621c:	mov	r4, r0
   16220:	bl	2a99c <__flatcc_fb_create_make_path@@Base>
   16224:	cmp	r0, #0
   16228:	mov	r6, #0
   1622c:	beq	16380 <flatcc_parse_file@@Base+0x598>
   16230:	mov	r9, r0
   16234:	mov	r0, r4
   16238:	bl	148f8 <free@plt>
   1623c:	ldr	r1, [pc, #436]	; 163f8 <flatcc_parse_file@@Base+0x610>
   16240:	mov	r0, r8
   16244:	add	r1, pc, r1
   16248:	bl	148ec <fopen@plt>
   1624c:	mov	r7, r0
   16250:	cmp	r0, #0
   16254:	beq	16348 <flatcc_parse_file@@Base+0x560>
   16258:	ldr	r1, [pc, #416]	; 16400 <flatcc_parse_file@@Base+0x618>
   1625c:	mov	r0, r7
   16260:	mov	r2, r9
   16264:	add	r1, pc, r1
   16268:	bl	149b8 <fprintf@plt>
   1626c:	ldr	r6, [r5]
   16270:	cmp	r6, #0
   16274:	beq	162b8 <flatcc_parse_file@@Base+0x4d0>
   16278:	ldr	r5, [pc, #388]	; 16404 <flatcc_parse_file@@Base+0x61c>
   1627c:	add	r5, pc, r5
   16280:	ldr	r0, [r6, #548]	; 0x224
   16284:	bl	2a99c <__flatcc_fb_create_make_path@@Base>
   16288:	cmp	r0, #0
   1628c:	beq	16380 <flatcc_parse_file@@Base+0x598>
   16290:	mov	r4, r0
   16294:	mov	r0, r7
   16298:	mov	r1, r5
   1629c:	mov	r2, r4
   162a0:	bl	149b8 <fprintf@plt>
   162a4:	ldr	r6, [r6]
   162a8:	mov	r0, r4
   162ac:	bl	148f8 <free@plt>
   162b0:	cmp	r6, #0
   162b4:	bne	16280 <flatcc_parse_file@@Base+0x498>
   162b8:	mov	r0, #10
   162bc:	mov	r1, r7
   162c0:	bl	14928 <fputc_unlocked@plt>
   162c4:	mov	r6, #0
   162c8:	b	1635c <flatcc_parse_file@@Base+0x574>
   162cc:	ldr	r1, [r5, #412]	; 0x19c
   162d0:	ldr	r2, [sp, #16]
   162d4:	ldr	r0, [r5, #128]	; 0x80
   162d8:	ldr	r1, [r1, #56]	; 0x38
   162dc:	add	r1, r1, r2
   162e0:	cmp	r1, r0
   162e4:	bls	15e3c <flatcc_parse_file@@Base+0x54>
   162e8:	cmp	r0, #0
   162ec:	beq	15e3c <flatcc_parse_file@@Base+0x54>
   162f0:	ldr	r1, [pc, #208]	; 163c8 <flatcc_parse_file@@Base+0x5e0>
   162f4:	mov	r0, r5
   162f8:	add	r1, pc, r1
   162fc:	bl	2abbc <__flatcc_fb_print_error@@Base>
   16300:	mvn	r6, #0
   16304:	b	1633c <flatcc_parse_file@@Base+0x554>
   16308:	ldr	r1, [pc, #188]	; 163cc <flatcc_parse_file@@Base+0x5e4>
   1630c:	add	r1, pc, r1
   16310:	b	1631c <flatcc_parse_file@@Base+0x534>
   16314:	ldr	r1, [pc, #192]	; 163dc <flatcc_parse_file@@Base+0x5f4>
   16318:	add	r1, pc, r1
   1631c:	mov	r0, r5
   16320:	bl	2abbc <__flatcc_fb_print_error@@Base>
   16324:	b	16330 <flatcc_parse_file@@Base+0x548>
   16328:	mov	r0, r7
   1632c:	bl	148f8 <free@plt>
   16330:	mov	r0, r9
   16334:	bl	148f8 <free@plt>
   16338:	mov	r6, #0
   1633c:	mov	r0, r6
   16340:	sub	sp, fp, #28
   16344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16348:	ldr	r1, [pc, #172]	; 163fc <flatcc_parse_file@@Base+0x614>
   1634c:	mov	r0, r5
   16350:	mov	r2, r8
   16354:	add	r1, pc, r1
   16358:	bl	2abbc <__flatcc_fb_print_error@@Base>
   1635c:	mov	r0, r8
   16360:	bl	148f8 <free@plt>
   16364:	mov	r0, r9
   16368:	bl	148f8 <free@plt>
   1636c:	cmp	r7, #0
   16370:	beq	1633c <flatcc_parse_file@@Base+0x554>
   16374:	mov	r0, r7
   16378:	bl	14a00 <fclose@plt>
   1637c:	b	1633c <flatcc_parse_file@@Base+0x554>
   16380:	ldr	r0, [pc, #140]	; 16414 <flatcc_parse_file@@Base+0x62c>
   16384:	mov	r1, #34	; 0x22
   16388:	mov	r2, #1
   1638c:	ldr	r0, [pc, r0]
   16390:	ldr	r3, [r0]
   16394:	ldr	r0, [pc, #124]	; 16418 <flatcc_parse_file@@Base+0x630>
   16398:	add	r0, pc, r0
   1639c:	bl	1494c <fwrite@plt>
   163a0:	mov	r0, #1
   163a4:	bl	14994 <exit@plt>
   163a8:	ldr	r0, [pc, #88]	; 16408 <flatcc_parse_file@@Base+0x620>
   163ac:	ldr	r1, [pc, #88]	; 1640c <flatcc_parse_file@@Base+0x624>
   163b0:	ldr	r3, [pc, #88]	; 16410 <flatcc_parse_file@@Base+0x628>
   163b4:	mov	r2, #220	; 0xdc
   163b8:	add	r0, pc, r0
   163bc:	add	r1, pc, r1
   163c0:	add	r3, pc, r3
   163c4:	bl	14a78 <__assert_fail@plt>
   163c8:	andeq	r9, r2, r3, ror #31
   163cc:	andeq	sl, r2, lr, lsr r0
   163d0:	andeq	sl, r2, sl, lsl #19
   163d4:	andeq	sl, r2, r6, ror #17
   163d8:	andeq	sl, r2, r7, lsl #7
   163dc:	andeq	sl, r2, r2, asr r0
   163e0:	andeq	r0, r0, ip, lsr r5
   163e4:	andeq	r0, r0, r4, asr #9
   163e8:	andeq	sl, r2, pc, lsl #5
   163ec:	andeq	sl, r2, sl, ror #12
   163f0:	andeq	r1, r4, r9, ror #2
   163f4:	strdeq	sl, [r2], -r4
   163f8:	andeq	sl, r2, sl, ror #3
   163fc:	ldrdeq	sl, [r2], -sp
   16400:	strdeq	sl, [r2], -ip
   16404:	andeq	sl, r2, r8, ror #3
   16408:	ldrdeq	r9, [r2], -r0
   1640c:	andeq	r9, r2, r1, ror #31
   16410:	andeq	sl, r2, sl, lsr r0
   16414:	andeq	r5, r5, r0, lsl sp
   16418:	andeq	r9, r2, pc, lsl #31

0001641c <flatcc_generate_binary_schema_to_buffer@@Base>:
   1641c:	push	{fp, lr}
   16420:	mov	fp, sp
   16424:	sub	sp, sp, #8
   16428:	mov	ip, r1
   1642c:	str	r2, [sp, #4]
   16430:	add	r2, r0, #128	; 0x80
   16434:	add	r1, r0, #352	; 0x160
   16438:	add	r3, sp, #4
   1643c:	mov	r0, r2
   16440:	mov	r2, ip
   16444:	bl	25e84 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   16448:	ldr	r1, [sp, #4]
   1644c:	cmp	r0, #0
   16450:	mvneq	r1, #0
   16454:	mov	r0, r1
   16458:	mov	sp, fp
   1645c:	pop	{fp, pc}

00016460 <flatcc_generate_binary_schema@@Base>:
   16460:	add	r3, r0, #128	; 0x80
   16464:	mov	r2, r1
   16468:	add	r1, r0, #352	; 0x160
   1646c:	mov	r0, r3
   16470:	b	26ed8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00016474 <flatcc_generate_files@@Base>:
   16474:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16478:	add	fp, sp, #24
   1647c:	sub	sp, sp, #232	; 0xe8
   16480:	mvn	r4, #0
   16484:	cmp	r0, #0
   16488:	beq	1649c <flatcc_generate_files@@Base+0x28>
   1648c:	mov	r5, r0
   16490:	ldr	r0, [r0, #108]	; 0x6c
   16494:	cmp	r0, #0
   16498:	beq	164a8 <flatcc_generate_files@@Base+0x34>
   1649c:	mov	r0, r4
   164a0:	sub	sp, fp, #24
   164a4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   164a8:	mov	r0, #0
   164ac:	mov	r1, r5
   164b0:	str	r0, [r1, #4]
   164b4:	mov	r7, r1
   164b8:	ldr	r1, [r1]
   164bc:	mov	r0, r7
   164c0:	cmp	r1, #0
   164c4:	bne	164b0 <flatcc_generate_files@@Base+0x3c>
   164c8:	ldr	r0, [r5, #308]	; 0x134
   164cc:	add	r6, r5, #128	; 0x80
   164d0:	cmp	r0, #0
   164d4:	beq	164ec <flatcc_generate_files@@Base+0x78>
   164d8:	add	r1, r5, #352	; 0x160
   164dc:	mov	r0, r6
   164e0:	bl	26f4c <__flatcc_fb_codegen_bfbs_to_file@@Base>
   164e4:	cmp	r0, #0
   164e8:	bne	1649c <flatcc_generate_files@@Base+0x28>
   164ec:	mov	r0, sp
   164f0:	mov	r1, r6
   164f4:	bl	16780 <__flatcc_fb_init_output_c@@Base>
   164f8:	cmp	r0, #0
   164fc:	bne	1649c <flatcc_generate_files@@Base+0x28>
   16500:	ldr	r0, [r5, #256]	; 0x100
   16504:	cmp	r0, #0
   16508:	beq	16570 <flatcc_generate_files@@Base+0xfc>
   1650c:	ldr	r0, [r5, #120]	; 0x78
   16510:	mov	r4, #0
   16514:	cmp	r0, #0
   16518:	beq	165a0 <flatcc_generate_files@@Base+0x12c>
   1651c:	ldr	r0, [r5, #300]	; 0x12c
   16520:	cmp	r0, #0
   16524:	beq	16588 <flatcc_generate_files@@Base+0x114>
   16528:	cmp	r7, #0
   1652c:	beq	165a0 <flatcc_generate_files@@Base+0x12c>
   16530:	mov	r5, sp
   16534:	ldr	r0, [r7, #108]	; 0x6c
   16538:	cmp	r0, #0
   1653c:	bne	1659c <flatcc_generate_files@@Base+0x128>
   16540:	add	r1, r7, #352	; 0x160
   16544:	mov	r0, r5
   16548:	bl	16e58 <__flatcc_fb_codegen_c@@Base>
   1654c:	ldr	r7, [r7, #4]
   16550:	cmp	r0, #0
   16554:	mov	r4, r0
   16558:	movwne	r4, #1
   1655c:	cmp	r7, #0
   16560:	beq	165a0 <flatcc_generate_files@@Base+0x12c>
   16564:	cmp	r0, #0
   16568:	beq	16534 <flatcc_generate_files@@Base+0xc0>
   1656c:	b	165a0 <flatcc_generate_files@@Base+0x12c>
   16570:	mov	r0, sp
   16574:	bl	16d30 <__flatcc_fb_codegen_common_c@@Base>
   16578:	mov	r4, r0
   1657c:	cmp	r0, #0
   16580:	bne	165a0 <flatcc_generate_files@@Base+0x12c>
   16584:	b	1650c <flatcc_generate_files@@Base+0x98>
   16588:	add	r1, r5, #352	; 0x160
   1658c:	mov	r0, sp
   16590:	bl	16e58 <__flatcc_fb_codegen_c@@Base>
   16594:	mov	r4, r0
   16598:	b	165a0 <flatcc_generate_files@@Base+0x12c>
   1659c:	mov	r4, #1
   165a0:	mov	r0, sp
   165a4:	bl	16744 <__flatcc_fb_end_output_c@@Base>
   165a8:	b	1649c <flatcc_generate_files@@Base+0x28>

000165ac <flatcc_destroy_context@@Base>:
   165ac:	push	{r4, r5, fp, lr}
   165b0:	add	fp, sp, #8
   165b4:	cmp	r0, #0
   165b8:	popeq	{r4, r5, fp, pc}
   165bc:	mov	r4, r0
   165c0:	ldr	r5, [r4]
   165c4:	mov	r0, r4
   165c8:	bl	320f4 <__flatcc_fb_clear_parser@@Base>
   165cc:	mov	r0, r4
   165d0:	bl	148f8 <free@plt>
   165d4:	cmp	r5, #0
   165d8:	mov	r4, r5
   165dc:	bne	165c0 <flatcc_destroy_context@@Base+0x14>
   165e0:	pop	{r4, r5, fp, pc}
   165e4:	add	r0, r0, #172	; 0xac
   165e8:	mov	r2, #1
   165ec:	b	2843c <ptr_set_insert_item@@Base>

000165f0 <__flatcc_fb_open_output_file@@Base>:
   165f0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   165f4:	add	fp, sp, #24
   165f8:	sub	sp, sp, #8
   165fc:	mov	r4, r0
   16600:	mov	r9, r1
   16604:	ldr	r0, [r0, #204]	; 0xcc
   16608:	mov	r5, #0
   1660c:	ldr	r1, [r4, #212]	; 0xd4
   16610:	ldr	r1, [r1, #216]	; 0xd8
   16614:	ldr	r6, [pc, #200]	; 166e4 <__flatcc_fb_open_output_file@@Base+0xf4>
   16618:	add	r6, pc, r6
   1661c:	cmp	r1, #0
   16620:	movne	r6, r1
   16624:	cmp	r0, #0
   16628:	bne	1668c <__flatcc_fb_open_output_file@@Base+0x9c>
   1662c:	mov	r0, r6
   16630:	mov	r7, r3
   16634:	mov	r8, r2
   16638:	bl	149a0 <strlen@plt>
   1663c:	mov	r1, r0
   16640:	mov	r0, #1
   16644:	mov	r2, r9
   16648:	mov	r3, r8
   1664c:	str	r7, [sp]
   16650:	str	r0, [sp, #4]
   16654:	mov	r0, r6
   16658:	bl	2a560 <__flatcc_fb_create_join_path_n@@Base>
   1665c:	cmp	r0, #0
   16660:	beq	166bc <__flatcc_fb_open_output_file@@Base+0xcc>
   16664:	ldr	r1, [pc, #124]	; 166e8 <__flatcc_fb_open_output_file@@Base+0xf8>
   16668:	mov	r6, r0
   1666c:	add	r1, pc, r1
   16670:	bl	148ec <fopen@plt>
   16674:	mov	r5, #0
   16678:	cmp	r0, #0
   1667c:	str	r0, [r4, #204]	; 0xcc
   16680:	beq	16698 <__flatcc_fb_open_output_file@@Base+0xa8>
   16684:	mov	r0, r6
   16688:	bl	148f8 <free@plt>
   1668c:	mov	r0, r5
   16690:	sub	sp, fp, #24
   16694:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16698:	ldr	r0, [pc, #76]	; 166ec <__flatcc_fb_open_output_file@@Base+0xfc>
   1669c:	mov	r2, r6
   166a0:	ldr	r0, [pc, r0]
   166a4:	ldr	r0, [r0]
   166a8:	ldr	r1, [pc, #64]	; 166f0 <__flatcc_fb_open_output_file@@Base+0x100>
   166ac:	add	r1, pc, r1
   166b0:	bl	149b8 <fprintf@plt>
   166b4:	mvn	r5, #0
   166b8:	b	16684 <__flatcc_fb_open_output_file@@Base+0x94>
   166bc:	ldr	r0, [pc, #48]	; 166f4 <__flatcc_fb_open_output_file@@Base+0x104>
   166c0:	mov	r1, #34	; 0x22
   166c4:	mov	r2, #1
   166c8:	ldr	r0, [pc, r0]
   166cc:	ldr	r3, [r0]
   166d0:	ldr	r0, [pc, #32]	; 166f8 <__flatcc_fb_open_output_file@@Base+0x108>
   166d4:	add	r0, pc, r0
   166d8:	bl	1494c <fwrite@plt>
   166dc:	mov	r0, #1
   166e0:	bl	14994 <exit@plt>
   166e4:	andeq	sl, r2, r6, ror #3
   166e8:	andeq	r9, r2, r2, asr #27
   166ec:	strdeq	r5, [r5], -ip
   166f0:			; <UNDEFINED> instruction: 0x00029dbc
   166f4:	ldrdeq	r5, [r5], -r4
   166f8:	andeq	r9, r2, r3, asr ip

000166fc <__flatcc_fb_close_output_file@@Base>:
   166fc:	push	{r4, sl, fp, lr}
   16700:	add	fp, sp, #8
   16704:	mov	r4, r0
   16708:	ldr	r0, [r0, #212]	; 0xd4
   1670c:	ldr	r1, [r0, #124]	; 0x7c
   16710:	cmp	r1, #0
   16714:	bne	16724 <__flatcc_fb_close_output_file@@Base+0x28>
   16718:	ldr	r0, [r0, #108]	; 0x6c
   1671c:	cmp	r0, #0
   16720:	beq	16728 <__flatcc_fb_close_output_file@@Base+0x2c>
   16724:	pop	{r4, sl, fp, pc}
   16728:	ldr	r0, [r4, #204]	; 0xcc
   1672c:	cmp	r0, #0
   16730:	popeq	{r4, sl, fp, pc}
   16734:	bl	14a00 <fclose@plt>
   16738:	mov	r0, #0
   1673c:	str	r0, [r4, #204]	; 0xcc
   16740:	pop	{r4, sl, fp, pc}

00016744 <__flatcc_fb_end_output_c@@Base>:
   16744:	push	{r4, sl, fp, lr}
   16748:	add	fp, sp, #8
   1674c:	mov	r4, r0
   16750:	ldr	r0, [r0, #204]	; 0xcc
   16754:	cmp	r0, #0
   16758:	ldrne	r1, [pc, #28]	; 1677c <__flatcc_fb_end_output_c@@Base+0x38>
   1675c:	ldrne	r1, [pc, r1]
   16760:	ldrne	r1, [r1]
   16764:	cmpne	r0, r1
   16768:	beq	16770 <__flatcc_fb_end_output_c@@Base+0x2c>
   1676c:	bl	14a00 <fclose@plt>
   16770:	mov	r0, #0
   16774:	str	r0, [r4, #204]	; 0xcc
   16778:	pop	{r4, sl, fp, pc}
   1677c:	andeq	r5, r5, ip, asr #18

00016780 <__flatcc_fb_init_output_c@@Base>:
   16780:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16784:	add	fp, sp, #28
   16788:	sub	sp, sp, #4
   1678c:	ldr	r5, [r1, #128]	; 0x80
   16790:	ldr	r7, [r1, #216]	; 0xd8
   16794:	mov	r6, r1
   16798:	mov	r1, #0
   1679c:	mov	r2, #232	; 0xe8
   167a0:	mov	sl, r0
   167a4:	mov	r4, #0
   167a8:	bl	149d0 <memset@plt>
   167ac:	str	r6, [sl, #212]	; 0xd4
   167b0:	cmp	r5, #0
   167b4:	ldr	r0, [pc, #420]	; 16960 <__flatcc_fb_init_output_c@@Base+0x1e0>
   167b8:	ldr	r8, [pc, #420]	; 16964 <__flatcc_fb_init_output_c@@Base+0x1e4>
   167bc:	ldr	r9, [pc, #420]	; 16968 <__flatcc_fb_init_output_c@@Base+0x1e8>
   167c0:	add	r0, pc, r0
   167c4:	add	r8, pc, r8
   167c8:	add	r9, pc, r9
   167cc:	moveq	r8, r0
   167d0:	cmp	r7, #0
   167d4:	movne	r9, r7
   167d8:	ldr	r7, [r6, #196]	; 0xc4
   167dc:	cmp	r7, #0
   167e0:	beq	1681c <__flatcc_fb_init_output_c@@Base+0x9c>
   167e4:	mov	r0, r7
   167e8:	bl	149a0 <strlen@plt>
   167ec:	mov	r5, r0
   167f0:	cmp	r0, #101	; 0x65
   167f4:	bcc	16828 <__flatcc_fb_init_output_c@@Base+0xa8>
   167f8:	ldr	r0, [pc, #372]	; 16974 <__flatcc_fb_init_output_c@@Base+0x1f4>
   167fc:	mov	r2, #100	; 0x64
   16800:	ldr	r0, [pc, r0]
   16804:	ldr	r0, [r0]
   16808:	ldr	r1, [pc, #360]	; 16978 <__flatcc_fb_init_output_c@@Base+0x1f8>
   1680c:	add	r1, pc, r1
   16810:	bl	149b8 <fprintf@plt>
   16814:	mvn	r7, #0
   16818:	b	16908 <__flatcc_fb_init_output_c@@Base+0x188>
   1681c:	ldr	r7, [pc, #328]	; 1696c <__flatcc_fb_init_output_c@@Base+0x1ec>
   16820:	mov	r5, #11
   16824:	add	r7, pc, r7
   16828:	mov	r0, sl
   1682c:	mov	r1, r7
   16830:	mov	r2, #100	; 0x64
   16834:	bl	149dc <strncpy@plt>
   16838:	cmp	r5, #0
   1683c:	strb	r4, [sl, #100]	; 0x64
   16840:	mov	r4, sl
   16844:	addne	r0, sl, r5
   16848:	movne	r1, #95	; 0x5f
   1684c:	strhne	r1, [r0]
   16850:	ldrb	r7, [r4], #102	; 0x66
   16854:	cmp	r7, #0
   16858:	beq	16880 <__flatcc_fb_init_output_c@@Base+0x100>
   1685c:	bl	1497c <__ctype_toupper_loc@plt>
   16860:	ldr	r1, [r0]
   16864:	uxtb	r2, r7
   16868:	ldr	r1, [r1, r2, lsl #2]
   1686c:	strb	r1, [r4]
   16870:	ldrb	r7, [r4, #-101]	; 0xffffff9b
   16874:	add	r4, r4, #1
   16878:	cmp	r7, #0
   1687c:	bne	16860 <__flatcc_fb_init_output_c@@Base+0xe0>
   16880:	mov	r7, #0
   16884:	add	r0, sl, r5
   16888:	strb	r7, [r4]
   1688c:	strb	r7, [r0, #102]	; 0x66
   16890:	ldr	r0, [r6, #176]	; 0xb0
   16894:	str	r0, [sl, #224]	; 0xe0
   16898:	ldr	r0, [r6, #108]	; 0x6c
   1689c:	cmp	r0, #0
   168a0:	beq	168b8 <__flatcc_fb_init_output_c@@Base+0x138>
   168a4:	ldr	r0, [pc, #196]	; 16970 <__flatcc_fb_init_output_c@@Base+0x1f0>
   168a8:	ldr	r0, [pc, r0]
   168ac:	ldr	r0, [r0]
   168b0:	str	r0, [sl, #204]	; 0xcc
   168b4:	b	16908 <__flatcc_fb_init_output_c@@Base+0x188>
   168b8:	ldr	r0, [sl, #212]	; 0xd4
   168bc:	ldr	r1, [r0, #124]	; 0x7c
   168c0:	cmp	r1, #0
   168c4:	beq	16908 <__flatcc_fb_init_output_c@@Base+0x188>
   168c8:	ldr	r2, [pc, #172]	; 1697c <__flatcc_fb_init_output_c@@Base+0x1fc>
   168cc:	mov	r0, r9
   168d0:	mov	r3, #1
   168d4:	add	r2, pc, r2
   168d8:	bl	2a694 <__flatcc_fb_create_join_path@@Base>
   168dc:	cmp	r0, #0
   168e0:	beq	16938 <__flatcc_fb_init_output_c@@Base+0x1b8>
   168e4:	mov	r1, r8
   168e8:	mov	r5, r0
   168ec:	bl	148ec <fopen@plt>
   168f0:	mov	r7, #0
   168f4:	cmp	r0, #0
   168f8:	str	r0, [sl, #204]	; 0xcc
   168fc:	beq	16914 <__flatcc_fb_init_output_c@@Base+0x194>
   16900:	mov	r0, r5
   16904:	bl	148f8 <free@plt>
   16908:	mov	r0, r7
   1690c:	sub	sp, fp, #28
   16910:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16914:	ldr	r0, [pc, #100]	; 16980 <__flatcc_fb_init_output_c@@Base+0x200>
   16918:	mov	r2, r5
   1691c:	ldr	r0, [pc, r0]
   16920:	ldr	r0, [r0]
   16924:	ldr	r1, [pc, #88]	; 16984 <__flatcc_fb_init_output_c@@Base+0x204>
   16928:	add	r1, pc, r1
   1692c:	bl	149b8 <fprintf@plt>
   16930:	mvn	r7, #0
   16934:	b	16900 <__flatcc_fb_init_output_c@@Base+0x180>
   16938:	ldr	r0, [pc, #72]	; 16988 <__flatcc_fb_init_output_c@@Base+0x208>
   1693c:	mov	r1, #34	; 0x22
   16940:	mov	r2, #1
   16944:	ldr	r0, [pc, r0]
   16948:	ldr	r3, [r0]
   1694c:	ldr	r0, [pc, #56]	; 1698c <__flatcc_fb_init_output_c@@Base+0x20c>
   16950:	add	r0, pc, r0
   16954:	bl	1494c <fwrite@plt>
   16958:	mov	r0, #1
   1695c:	bl	14994 <exit@plt>
   16960:	andeq	r9, r2, lr, ror #24
   16964:	andeq	r9, r2, r6, asr #25
   16968:	andeq	sl, r2, r6, lsr r0
   1696c:	andeq	r9, r2, r0, lsr #25
   16970:	andeq	r5, r5, r0, lsl #16
   16974:	muleq	r5, ip, r8
   16978:	andeq	r9, r2, r1, lsl #25
   1697c:	andeq	r9, r2, sl, lsr #30
   16980:	andeq	r5, r5, r0, lsl #15
   16984:	andeq	r9, r2, r0, asr #22
   16988:	andeq	r5, r5, r8, asr r7
   1698c:	ldrdeq	r9, [r2], -r7

00016990 <__flatcc_fb_gen_c_includes@@Base>:
   16990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16994:	add	fp, sp, #28
   16998:	sub	sp, sp, #36	; 0x24
   1699c:	mov	r6, r0
   169a0:	ldr	r0, [r0, #208]	; 0xd0
   169a4:	vmov.i32	q8, #0	; 0x00000000
   169a8:	add	r4, sp, #16
   169ac:	str	r2, [sp, #12]
   169b0:	str	r1, [sp, #8]
   169b4:	ldr	r8, [r0]
   169b8:	vst1.64	{d16-d17}, [r4]
   169bc:	ldr	r0, [r0, #164]	; 0xa4
   169c0:	bl	2a4b4 <__flatcc_fb_copy_path@@Base>
   169c4:	mov	r1, r0
   169c8:	mov	r0, r4
   169cc:	mov	r2, #1
   169d0:	bl	27d0c <str_set_insert_item@@Base>
   169d4:	cmp	r8, #0
   169d8:	beq	16a9c <__flatcc_fb_gen_c_includes@@Base+0x10c>
   169dc:	add	r7, sp, #16
   169e0:	ldr	r2, [r6, #212]	; 0xd4
   169e4:	ldrd	r0, [r8, #8]
   169e8:	ldr	r2, [r2, #96]	; 0x60
   169ec:	bl	2a9f0 <__flatcc_fb_create_basename@@Base>
   169f0:	cmp	r0, #0
   169f4:	beq	16ab8 <__flatcc_fb_gen_c_includes@@Base+0x128>
   169f8:	ldr	r8, [r8]
   169fc:	mov	r4, r0
   16a00:	bl	2a4b4 <__flatcc_fb_copy_path@@Base>
   16a04:	cmp	r0, #0
   16a08:	beq	16ab8 <__flatcc_fb_gen_c_includes@@Base+0x128>
   16a0c:	ldrb	r9, [r0]
   16a10:	mov	r5, r0
   16a14:	cmp	r9, #0
   16a18:	beq	16a44 <__flatcc_fb_gen_c_includes@@Base+0xb4>
   16a1c:	add	sl, r5, #1
   16a20:	bl	1497c <__ctype_toupper_loc@plt>
   16a24:	ldr	r1, [r0]
   16a28:	uxtb	r2, r9
   16a2c:	ldr	r1, [r1, r2, lsl #2]
   16a30:	strb	r1, [sl, #-1]
   16a34:	ldrb	r9, [sl]
   16a38:	add	sl, sl, #1
   16a3c:	cmp	r9, #0
   16a40:	bne	16a24 <__flatcc_fb_gen_c_includes@@Base+0x94>
   16a44:	mov	r0, r7
   16a48:	mov	r1, r5
   16a4c:	mov	r2, #1
   16a50:	bl	27d0c <str_set_insert_item@@Base>
   16a54:	cmp	r0, #0
   16a58:	beq	16a68 <__flatcc_fb_gen_c_includes@@Base+0xd8>
   16a5c:	mov	r0, r5
   16a60:	bl	148f8 <free@plt>
   16a64:	b	16a8c <__flatcc_fb_gen_c_includes@@Base+0xfc>
   16a68:	ldr	r1, [sp, #8]
   16a6c:	ldr	r0, [r6, #204]	; 0xcc
   16a70:	str	r4, [sp]
   16a74:	mov	r2, r5
   16a78:	str	r1, [sp, #4]
   16a7c:	ldr	r1, [pc, #104]	; 16aec <__flatcc_fb_gen_c_includes@@Base+0x15c>
   16a80:	ldr	r3, [sp, #12]
   16a84:	add	r1, pc, r1
   16a88:	bl	149b8 <fprintf@plt>
   16a8c:	mov	r0, r4
   16a90:	bl	148f8 <free@plt>
   16a94:	cmp	r8, #0
   16a98:	bne	169e0 <__flatcc_fb_gen_c_includes@@Base+0x50>
   16a9c:	ldr	r1, [pc, #60]	; 16ae0 <__flatcc_fb_gen_c_includes@@Base+0x150>
   16aa0:	add	r0, sp, #16
   16aa4:	mov	r2, #0
   16aa8:	add	r1, pc, r1
   16aac:	bl	2791c <str_set_destroy@@Base>
   16ab0:	sub	sp, fp, #28
   16ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ab8:	ldr	r0, [pc, #36]	; 16ae4 <__flatcc_fb_gen_c_includes@@Base+0x154>
   16abc:	mov	r1, #34	; 0x22
   16ac0:	mov	r2, #1
   16ac4:	ldr	r0, [pc, r0]
   16ac8:	ldr	r3, [r0]
   16acc:	ldr	r0, [pc, #20]	; 16ae8 <__flatcc_fb_gen_c_includes@@Base+0x158>
   16ad0:	add	r0, pc, r0
   16ad4:	bl	1494c <fwrite@plt>
   16ad8:	mov	r0, #1
   16adc:	bl	14994 <exit@plt>
   16ae0:	andeq	r0, r0, r0, asr #32
   16ae4:	ldrdeq	r5, [r5], -r8
   16ae8:	andeq	r9, r2, r7, asr r8
   16aec:	andeq	r9, r2, ip, asr #20
   16af0:	mov	r0, r1
   16af4:	b	148f8 <free@plt>

00016af8 <__flatcc_fb_copy_scope@@Base>:
   16af8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   16afc:	add	fp, sp, #24
   16b00:	mov	r4, r1
   16b04:	ldr	r1, [r0]
   16b08:	ldr	r5, [r0, #24]
   16b0c:	mov	r6, r0
   16b10:	cmp	r1, #0
   16b14:	mov	r0, r5
   16b18:	beq	16b40 <__flatcc_fb_copy_scope@@Base+0x48>
   16b1c:	mov	r0, r5
   16b20:	ldr	r2, [r1]
   16b24:	ldr	r1, [r1, #4]
   16b28:	ldr	r1, [r1, #4]
   16b2c:	cmp	r2, #0
   16b30:	add	r0, r0, r1
   16b34:	mov	r1, r2
   16b38:	add	r0, r0, #1
   16b3c:	bne	16b20 <__flatcc_fb_copy_scope@@Base+0x28>
   16b40:	cmp	r0, #101	; 0x65
   16b44:	bls	16b50 <__flatcc_fb_copy_scope@@Base+0x58>
   16b48:	mvn	r5, #0
   16b4c:	b	16ba0 <__flatcc_fb_copy_scope@@Base+0xa8>
   16b50:	ldr	r1, [r6, #20]
   16b54:	mov	r0, r4
   16b58:	mov	r2, r5
   16b5c:	bl	14904 <memcpy@plt>
   16b60:	ldr	r7, [r6]
   16b64:	cmp	r7, #0
   16b68:	beq	16b9c <__flatcc_fb_copy_scope@@Base+0xa4>
   16b6c:	mov	r8, #95	; 0x5f
   16b70:	ldr	r2, [r7, #4]
   16b74:	add	r0, r4, r5
   16b78:	ldm	r2, {r1, r6}
   16b7c:	mov	r2, r6
   16b80:	bl	14904 <memcpy@plt>
   16b84:	add	r0, r6, r5
   16b88:	strb	r8, [r4, r0]
   16b8c:	add	r5, r0, #1
   16b90:	ldr	r7, [r7]
   16b94:	cmp	r7, #0
   16b98:	bne	16b70 <__flatcc_fb_copy_scope@@Base+0x78>
   16b9c:	add	r4, r4, r5
   16ba0:	mov	r0, #0
   16ba4:	strb	r0, [r4]
   16ba8:	mov	r0, r5
   16bac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00016bb0 <__flatcc_fb_scoped_symbol_name@@Base>:
   16bb0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16bb4:	add	fp, sp, #24
   16bb8:	mov	r6, r0
   16bbc:	ldr	r0, [r2, #204]	; 0xcc
   16bc0:	ldr	r8, [r1, #4]
   16bc4:	mov	r4, r2
   16bc8:	cmp	r0, r6
   16bcc:	beq	16c74 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
   16bd0:	ldr	r1, [r6]
   16bd4:	ldr	r5, [r6, #24]
   16bd8:	cmp	r1, #0
   16bdc:	mov	r0, r5
   16be0:	beq	16c08 <__flatcc_fb_scoped_symbol_name@@Base+0x58>
   16be4:	mov	r0, r5
   16be8:	ldr	r2, [r1]
   16bec:	ldr	r1, [r1, #4]
   16bf0:	ldr	r1, [r1, #4]
   16bf4:	cmp	r2, #0
   16bf8:	add	r0, r0, r1
   16bfc:	mov	r1, r2
   16c00:	add	r0, r0, #1
   16c04:	bne	16be8 <__flatcc_fb_scoped_symbol_name@@Base+0x38>
   16c08:	cmp	r0, #102	; 0x66
   16c0c:	bcs	16ce0 <__flatcc_fb_scoped_symbol_name@@Base+0x130>
   16c10:	ldr	r1, [r6, #20]
   16c14:	mov	r0, r4
   16c18:	mov	r2, r5
   16c1c:	bl	14904 <memcpy@plt>
   16c20:	ldr	r7, [r6]
   16c24:	cmp	r7, #0
   16c28:	beq	16c5c <__flatcc_fb_scoped_symbol_name@@Base+0xac>
   16c2c:	mov	r9, #95	; 0x5f
   16c30:	ldr	r2, [r7, #4]
   16c34:	add	r0, r4, r5
   16c38:	ldm	r2, {r1, r6}
   16c3c:	mov	r2, r6
   16c40:	bl	14904 <memcpy@plt>
   16c44:	add	r0, r6, r5
   16c48:	strb	r9, [r4, r0]
   16c4c:	add	r5, r0, #1
   16c50:	ldr	r7, [r7]
   16c54:	cmp	r7, #0
   16c58:	bne	16c30 <__flatcc_fb_scoped_symbol_name@@Base+0x80>
   16c5c:	mov	r0, #0
   16c60:	cmn	r5, #1
   16c64:	strb	r0, [r4, r5]
   16c68:	mov	r0, r4
   16c6c:	str	r5, [r0, #208]!	; 0xd0
   16c70:	ble	16cf4 <__flatcc_fb_scoped_symbol_name@@Base+0x144>
   16c74:	ldr	r2, [r8, #4]
   16c78:	ldr	r0, [r4, #208]	; 0xd0
   16c7c:	add	r1, r0, r2
   16c80:	str	r2, [r4, #212]	; 0xd4
   16c84:	cmp	r1, #203	; 0xcb
   16c88:	str	r1, [r4, #216]	; 0xd8
   16c8c:	bgt	16cac <__flatcc_fb_scoped_symbol_name@@Base+0xfc>
   16c90:	ldr	r1, [r8]
   16c94:	add	r0, r4, r0
   16c98:	bl	14904 <memcpy@plt>
   16c9c:	ldr	r0, [r4, #216]	; 0xd8
   16ca0:	mov	r1, #0
   16ca4:	strb	r1, [r4, r0]
   16ca8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   16cac:	ldr	r3, [r8]
   16cb0:	ldr	r0, [pc, #112]	; 16d28 <__flatcc_fb_scoped_symbol_name@@Base+0x178>
   16cb4:	ldr	r0, [pc, r0]
   16cb8:	ldr	r0, [r0]
   16cbc:	ldr	r1, [pc, #104]	; 16d2c <__flatcc_fb_scoped_symbol_name@@Base+0x17c>
   16cc0:	add	r1, pc, r1
   16cc4:	bl	149b8 <fprintf@plt>
   16cc8:	ldr	r0, [r4, #208]	; 0xd0
   16ccc:	mov	r1, #203	; 0xcb
   16cd0:	rsb	r2, r0, #203	; 0xcb
   16cd4:	str	r2, [r4, #212]	; 0xd4
   16cd8:	str	r1, [r4, #216]	; 0xd8
   16cdc:	b	16c90 <__flatcc_fb_scoped_symbol_name@@Base+0xe0>
   16ce0:	mov	r0, #0
   16ce4:	mvn	r1, #0
   16ce8:	strb	r0, [r4]
   16cec:	mov	r0, r4
   16cf0:	str	r1, [r0, #208]!	; 0xd0
   16cf4:	mov	r1, #0
   16cf8:	mov	r2, #1
   16cfc:	str	r1, [r0]
   16d00:	mov	r1, #28
   16d04:	ldr	r0, [pc, #20]	; 16d20 <__flatcc_fb_scoped_symbol_name@@Base+0x170>
   16d08:	ldr	r0, [pc, r0]
   16d0c:	ldr	r3, [r0]
   16d10:	ldr	r0, [pc, #12]	; 16d24 <__flatcc_fb_scoped_symbol_name@@Base+0x174>
   16d14:	add	r0, pc, r0
   16d18:	bl	1494c <fwrite@plt>
   16d1c:	b	16c74 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
   16d20:	muleq	r5, r4, r3
   16d24:	andeq	r9, r2, r1, ror #15
   16d28:	andeq	r5, r5, r8, ror #7
   16d2c:	andeq	r9, r2, r2, asr r8

00016d30 <__flatcc_fb_codegen_common_c@@Base>:
   16d30:	push	{r4, r5, r6, sl, fp, lr}
   16d34:	add	fp, sp, #16
   16d38:	mov	r4, r0
   16d3c:	bl	149a0 <strlen@plt>
   16d40:	sub	r5, r0, #1
   16d44:	ldr	r0, [r4, #212]	; 0xd4
   16d48:	ldr	r1, [r0, #144]	; 0x90
   16d4c:	cmp	r1, #0
   16d50:	beq	16dc4 <__flatcc_fb_codegen_common_c@@Base+0x94>
   16d54:	ldr	r3, [pc, #244]	; 16e50 <__flatcc_fb_codegen_common_c@@Base+0x120>
   16d58:	mov	r0, r4
   16d5c:	mov	r1, r4
   16d60:	mov	r2, r5
   16d64:	add	r3, pc, r3
   16d68:	bl	165f0 <__flatcc_fb_open_output_file@@Base>
   16d6c:	mvn	r6, #0
   16d70:	cmp	r0, #0
   16d74:	bne	16df4 <__flatcc_fb_codegen_common_c@@Base+0xc4>
   16d78:	mov	r0, r4
   16d7c:	bl	17138 <__flatcc_fb_gen_common_c_header@@Base>
   16d80:	mov	r6, r0
   16d84:	ldr	r0, [r4, #212]	; 0xd4
   16d88:	ldr	r1, [r0, #124]	; 0x7c
   16d8c:	cmp	r1, #0
   16d90:	bne	16db8 <__flatcc_fb_codegen_common_c@@Base+0x88>
   16d94:	ldr	r0, [r0, #108]	; 0x6c
   16d98:	cmp	r0, #0
   16d9c:	bne	16db8 <__flatcc_fb_codegen_common_c@@Base+0x88>
   16da0:	ldr	r0, [r4, #204]	; 0xcc
   16da4:	cmp	r0, #0
   16da8:	beq	16db8 <__flatcc_fb_codegen_common_c@@Base+0x88>
   16dac:	bl	14a00 <fclose@plt>
   16db0:	mov	r0, #0
   16db4:	str	r0, [r4, #204]	; 0xcc
   16db8:	cmp	r6, #0
   16dbc:	bne	16df4 <__flatcc_fb_codegen_common_c@@Base+0xc4>
   16dc0:	ldr	r0, [r4, #212]	; 0xd4
   16dc4:	ldr	r0, [r0, #148]	; 0x94
   16dc8:	cmp	r0, #0
   16dcc:	beq	16e20 <__flatcc_fb_codegen_common_c@@Base+0xf0>
   16dd0:	ldr	r3, [pc, #124]	; 16e54 <__flatcc_fb_codegen_common_c@@Base+0x124>
   16dd4:	mov	r0, r4
   16dd8:	mov	r1, r4
   16ddc:	mov	r2, r5
   16de0:	add	r3, pc, r3
   16de4:	bl	165f0 <__flatcc_fb_open_output_file@@Base>
   16de8:	mvn	r6, #0
   16dec:	cmp	r0, #0
   16df0:	beq	16dfc <__flatcc_fb_codegen_common_c@@Base+0xcc>
   16df4:	mov	r0, r6
   16df8:	pop	{r4, r5, r6, sl, fp, pc}
   16dfc:	mov	r0, r4
   16e00:	bl	1ac24 <__flatcc_fb_gen_common_c_builder_header@@Base>
   16e04:	ldr	r0, [r4, #212]	; 0xd4
   16e08:	ldr	r1, [r0, #124]	; 0x7c
   16e0c:	cmp	r1, #0
   16e10:	bne	16e20 <__flatcc_fb_codegen_common_c@@Base+0xf0>
   16e14:	ldr	r0, [r0, #108]	; 0x6c
   16e18:	cmp	r0, #0
   16e1c:	beq	16e2c <__flatcc_fb_codegen_common_c@@Base+0xfc>
   16e20:	mov	r6, #0
   16e24:	mov	r0, r6
   16e28:	pop	{r4, r5, r6, sl, fp, pc}
   16e2c:	ldr	r0, [r4, #204]	; 0xcc
   16e30:	mov	r6, #0
   16e34:	cmp	r0, #0
   16e38:	beq	16df4 <__flatcc_fb_codegen_common_c@@Base+0xc4>
   16e3c:	bl	14a00 <fclose@plt>
   16e40:	mov	r6, #0
   16e44:	str	r6, [r4, #204]	; 0xcc
   16e48:	mov	r0, r6
   16e4c:	pop	{r4, r5, r6, sl, fp, pc}
   16e50:	ldrdeq	r9, [r2], -r4
   16e54:	andeq	r9, r2, r9, ror #14

00016e58 <__flatcc_fb_codegen_c@@Base>:
   16e58:	push	{r4, r5, r6, sl, fp, lr}
   16e5c:	add	fp, sp, #16
   16e60:	str	r1, [r0, #208]	; 0xd0
   16e64:	mov	r4, r0
   16e68:	mov	r2, #0
   16e6c:	ldr	r0, [r1, #60]	; 0x3c
   16e70:	mov	r1, #0
   16e74:	bl	29530 <fb_scope_table_find@@Base>
   16e78:	str	r0, [r4, #216]	; 0xd8
   16e7c:	ldr	r0, [r4, #208]	; 0xd0
   16e80:	ldr	r6, [r0, #160]	; 0xa0
   16e84:	mov	r0, r6
   16e88:	bl	149a0 <strlen@plt>
   16e8c:	ldr	r1, [r4, #212]	; 0xd4
   16e90:	mov	r5, r0
   16e94:	ldr	r0, [r1, #152]	; 0x98
   16e98:	cmp	r0, #0
   16e9c:	beq	16f10 <__flatcc_fb_codegen_c@@Base+0xb8>
   16ea0:	ldr	r3, [pc, #636]	; 17124 <__flatcc_fb_codegen_c@@Base+0x2cc>
   16ea4:	mov	r0, r4
   16ea8:	mov	r1, r6
   16eac:	mov	r2, r5
   16eb0:	add	r3, pc, r3
   16eb4:	bl	165f0 <__flatcc_fb_open_output_file@@Base>
   16eb8:	mov	r1, r0
   16ebc:	mvn	r0, #0
   16ec0:	cmp	r1, #0
   16ec4:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   16ec8:	mov	r0, r4
   16ecc:	bl	17edc <__flatcc_fb_gen_c_reader@@Base>
   16ed0:	cmp	r0, #0
   16ed4:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   16ed8:	ldr	r1, [r4, #212]	; 0xd4
   16edc:	ldr	r0, [r1, #124]	; 0x7c
   16ee0:	cmp	r0, #0
   16ee4:	bne	16f10 <__flatcc_fb_codegen_c@@Base+0xb8>
   16ee8:	ldr	r0, [r1, #108]	; 0x6c
   16eec:	cmp	r0, #0
   16ef0:	bne	16f10 <__flatcc_fb_codegen_c@@Base+0xb8>
   16ef4:	ldr	r0, [r4, #204]	; 0xcc
   16ef8:	cmp	r0, #0
   16efc:	beq	16f10 <__flatcc_fb_codegen_c@@Base+0xb8>
   16f00:	bl	14a00 <fclose@plt>
   16f04:	mov	r0, #0
   16f08:	str	r0, [r4, #204]	; 0xcc
   16f0c:	ldr	r1, [r4, #212]	; 0xd4
   16f10:	ldr	r0, [r1, #156]	; 0x9c
   16f14:	cmp	r0, #0
   16f18:	beq	16f90 <__flatcc_fb_codegen_c@@Base+0x138>
   16f1c:	ldr	r0, [r4, #208]	; 0xd0
   16f20:	mov	r2, r5
   16f24:	ldr	r1, [r0, #160]	; 0xa0
   16f28:	ldr	r3, [pc, #504]	; 17128 <__flatcc_fb_codegen_c@@Base+0x2d0>
   16f2c:	mov	r0, r4
   16f30:	add	r3, pc, r3
   16f34:	bl	165f0 <__flatcc_fb_open_output_file@@Base>
   16f38:	mov	r1, r0
   16f3c:	mvn	r0, #0
   16f40:	cmp	r1, #0
   16f44:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   16f48:	mov	r0, r4
   16f4c:	bl	1b648 <__flatcc_fb_gen_c_builder@@Base>
   16f50:	cmp	r0, #0
   16f54:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   16f58:	ldr	r1, [r4, #212]	; 0xd4
   16f5c:	ldr	r0, [r1, #124]	; 0x7c
   16f60:	cmp	r0, #0
   16f64:	bne	16f90 <__flatcc_fb_codegen_c@@Base+0x138>
   16f68:	ldr	r0, [r1, #108]	; 0x6c
   16f6c:	cmp	r0, #0
   16f70:	bne	16f90 <__flatcc_fb_codegen_c@@Base+0x138>
   16f74:	ldr	r0, [r4, #204]	; 0xcc
   16f78:	cmp	r0, #0
   16f7c:	beq	16f90 <__flatcc_fb_codegen_c@@Base+0x138>
   16f80:	bl	14a00 <fclose@plt>
   16f84:	mov	r0, #0
   16f88:	str	r0, [r4, #204]	; 0xcc
   16f8c:	ldr	r1, [r4, #212]	; 0xd4
   16f90:	ldr	r0, [r1, #160]	; 0xa0
   16f94:	cmp	r0, #0
   16f98:	beq	17010 <__flatcc_fb_codegen_c@@Base+0x1b8>
   16f9c:	ldr	r0, [r4, #208]	; 0xd0
   16fa0:	mov	r2, r5
   16fa4:	ldr	r1, [r0, #160]	; 0xa0
   16fa8:	ldr	r3, [pc, #380]	; 1712c <__flatcc_fb_codegen_c@@Base+0x2d4>
   16fac:	mov	r0, r4
   16fb0:	add	r3, pc, r3
   16fb4:	bl	165f0 <__flatcc_fb_open_output_file@@Base>
   16fb8:	mov	r1, r0
   16fbc:	mvn	r0, #0
   16fc0:	cmp	r1, #0
   16fc4:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   16fc8:	mov	r0, r4
   16fcc:	bl	1e028 <__flatcc_fb_gen_c_verifier@@Base>
   16fd0:	cmp	r0, #0
   16fd4:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   16fd8:	ldr	r1, [r4, #212]	; 0xd4
   16fdc:	ldr	r0, [r1, #124]	; 0x7c
   16fe0:	cmp	r0, #0
   16fe4:	bne	17010 <__flatcc_fb_codegen_c@@Base+0x1b8>
   16fe8:	ldr	r0, [r1, #108]	; 0x6c
   16fec:	cmp	r0, #0
   16ff0:	bne	17010 <__flatcc_fb_codegen_c@@Base+0x1b8>
   16ff4:	ldr	r0, [r4, #204]	; 0xcc
   16ff8:	cmp	r0, #0
   16ffc:	beq	17010 <__flatcc_fb_codegen_c@@Base+0x1b8>
   17000:	bl	14a00 <fclose@plt>
   17004:	mov	r0, #0
   17008:	str	r0, [r4, #204]	; 0xcc
   1700c:	ldr	r1, [r4, #212]	; 0xd4
   17010:	ldr	r0, [r1, #164]	; 0xa4
   17014:	cmp	r0, #0
   17018:	beq	17090 <__flatcc_fb_codegen_c@@Base+0x238>
   1701c:	ldr	r0, [r4, #208]	; 0xd0
   17020:	mov	r2, r5
   17024:	ldr	r1, [r0, #160]	; 0xa0
   17028:	ldr	r3, [pc, #256]	; 17130 <__flatcc_fb_codegen_c@@Base+0x2d8>
   1702c:	mov	r0, r4
   17030:	add	r3, pc, r3
   17034:	bl	165f0 <__flatcc_fb_open_output_file@@Base>
   17038:	mov	r1, r0
   1703c:	mvn	r0, #0
   17040:	cmp	r1, #0
   17044:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   17048:	mov	r0, r4
   1704c:	bl	1eb5c <__flatcc_fb_gen_c_json_parser@@Base>
   17050:	cmp	r0, #0
   17054:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   17058:	ldr	r1, [r4, #212]	; 0xd4
   1705c:	ldr	r0, [r1, #124]	; 0x7c
   17060:	cmp	r0, #0
   17064:	bne	17090 <__flatcc_fb_codegen_c@@Base+0x238>
   17068:	ldr	r0, [r1, #108]	; 0x6c
   1706c:	cmp	r0, #0
   17070:	bne	17090 <__flatcc_fb_codegen_c@@Base+0x238>
   17074:	ldr	r0, [r4, #204]	; 0xcc
   17078:	cmp	r0, #0
   1707c:	beq	17090 <__flatcc_fb_codegen_c@@Base+0x238>
   17080:	bl	14a00 <fclose@plt>
   17084:	mov	r0, #0
   17088:	str	r0, [r4, #204]	; 0xcc
   1708c:	ldr	r1, [r4, #212]	; 0xd4
   17090:	ldr	r0, [r1, #168]	; 0xa8
   17094:	cmp	r0, #0
   17098:	beq	170f8 <__flatcc_fb_codegen_c@@Base+0x2a0>
   1709c:	ldr	r0, [r4, #208]	; 0xd0
   170a0:	mov	r2, r5
   170a4:	ldr	r1, [r0, #160]	; 0xa0
   170a8:	ldr	r3, [pc, #132]	; 17134 <__flatcc_fb_codegen_c@@Base+0x2dc>
   170ac:	mov	r0, r4
   170b0:	add	r3, pc, r3
   170b4:	bl	165f0 <__flatcc_fb_open_output_file@@Base>
   170b8:	mov	r1, r0
   170bc:	mvn	r0, #0
   170c0:	cmp	r1, #0
   170c4:	bne	170d8 <__flatcc_fb_codegen_c@@Base+0x280>
   170c8:	mov	r0, r4
   170cc:	bl	24680 <__flatcc_fb_gen_c_json_printer@@Base>
   170d0:	cmp	r0, #0
   170d4:	beq	170dc <__flatcc_fb_codegen_c@@Base+0x284>
   170d8:	pop	{r4, r5, r6, sl, fp, pc}
   170dc:	ldr	r0, [r4, #212]	; 0xd4
   170e0:	ldr	r1, [r0, #124]	; 0x7c
   170e4:	cmp	r1, #0
   170e8:	bne	170f8 <__flatcc_fb_codegen_c@@Base+0x2a0>
   170ec:	ldr	r0, [r0, #108]	; 0x6c
   170f0:	cmp	r0, #0
   170f4:	beq	17100 <__flatcc_fb_codegen_c@@Base+0x2a8>
   170f8:	mov	r0, #0
   170fc:	pop	{r4, r5, r6, sl, fp, pc}
   17100:	ldr	r1, [r4, #204]	; 0xcc
   17104:	mov	r0, #0
   17108:	cmp	r1, #0
   1710c:	popeq	{r4, r5, r6, sl, fp, pc}
   17110:	mov	r0, r1
   17114:	bl	14a00 <fclose@plt>
   17118:	mov	r0, #0
   1711c:	str	r0, [r4, #204]	; 0xcc
   17120:	pop	{r4, r5, r6, sl, fp, pc}
   17124:	muleq	r4, r1, r4
   17128:	strdeq	pc, [r3], -sl
   1712c:	andeq	r9, r2, fp, lsr #11
   17130:	andeq	r9, r2, r7, lsr r5
   17134:	andeq	r9, r2, r6, asr #9

00017138 <__flatcc_fb_gen_common_c_header@@Base>:
   17138:	push	{r4, r5, fp, lr}
   1713c:	add	fp, sp, #8
   17140:	sub	sp, sp, #232	; 0xe8
   17144:	mov	r5, r0
   17148:	ldr	r0, [r0, #204]	; 0xcc
   1714c:	ldr	r1, [pc, #3140]	; 17d98 <__flatcc_fb_gen_common_c_header@@Base+0xc60>
   17150:	add	r4, r5, #102	; 0x66
   17154:	mov	r2, r4
   17158:	mov	r3, r4
   1715c:	add	r1, pc, r1
   17160:	bl	149b8 <fprintf@plt>
   17164:	ldr	r3, [r5, #204]	; 0xcc
   17168:	ldr	r0, [pc, #3116]	; 17d9c <__flatcc_fb_gen_common_c_header@@Base+0xc64>
   1716c:	mov	r1, #81	; 0x51
   17170:	mov	r2, #1
   17174:	add	r0, pc, r0
   17178:	bl	1494c <fwrite@plt>
   1717c:	ldr	r3, [r5, #204]	; 0xcc
   17180:	ldr	r0, [pc, #3096]	; 17da0 <__flatcc_fb_gen_common_c_header@@Base+0xc68>
   17184:	mov	r1, #52	; 0x34
   17188:	mov	r2, #1
   1718c:	add	r0, pc, r0
   17190:	bl	1494c <fwrite@plt>
   17194:	ldr	r0, [r5, #212]	; 0xd4
   17198:	ldr	r1, [r0, #136]	; 0x88
   1719c:	cmp	r1, #0
   171a0:	bne	171c0 <__flatcc_fb_gen_common_c_header@@Base+0x88>
   171a4:	ldr	r3, [r5, #204]	; 0xcc
   171a8:	ldr	r0, [pc, #3060]	; 17da4 <__flatcc_fb_gen_common_c_header@@Base+0xc6c>
   171ac:	mov	r1, #135	; 0x87
   171b0:	mov	r2, #1
   171b4:	add	r0, pc, r0
   171b8:	bl	1494c <fwrite@plt>
   171bc:	ldr	r0, [r5, #212]	; 0xd4
   171c0:	ldr	r0, [r0, #140]	; 0x8c
   171c4:	cmp	r0, #0
   171c8:	beq	171e4 <__flatcc_fb_gen_common_c_header@@Base+0xac>
   171cc:	ldr	r3, [r5, #204]	; 0xcc
   171d0:	ldr	r0, [pc, #3024]	; 17da8 <__flatcc_fb_gen_common_c_header@@Base+0xc70>
   171d4:	mov	r1, #36	; 0x24
   171d8:	mov	r2, #1
   171dc:	add	r0, pc, r0
   171e0:	bl	1494c <fwrite@plt>
   171e4:	ldr	r3, [r5, #204]	; 0xcc
   171e8:	ldr	r0, [pc, #3004]	; 17dac <__flatcc_fb_gen_common_c_header@@Base+0xc74>
   171ec:	mov	r1, #41	; 0x29
   171f0:	mov	r2, #1
   171f4:	add	r0, pc, r0
   171f8:	bl	1494c <fwrite@plt>
   171fc:	ldr	r1, [pc, #2988]	; 17db0 <__flatcc_fb_gen_common_c_header@@Base+0xc78>
   17200:	mov	r0, r5
   17204:	add	r1, pc, r1
   17208:	bl	148e0 <strcmp@plt>
   1720c:	cmp	r0, #0
   17210:	beq	17298 <__flatcc_fb_gen_common_c_header@@Base+0x160>
   17214:	ldr	r0, [r5, #204]	; 0xcc
   17218:	str	r5, [sp]
   1721c:	str	r5, [sp, #4]
   17220:	str	r5, [sp, #8]
   17224:	mov	r2, r5
   17228:	mov	r3, r5
   1722c:	ldr	r1, [pc, #2944]	; 17db4 <__flatcc_fb_gen_common_c_header@@Base+0xc7c>
   17230:	add	r1, pc, r1
   17234:	bl	149b8 <fprintf@plt>
   17238:	ldr	r0, [r5, #204]	; 0xcc
   1723c:	str	r5, [sp]
   17240:	str	r5, [sp, #4]
   17244:	mov	r3, r5
   17248:	ldr	r1, [pc, #2920]	; 17db8 <__flatcc_fb_gen_common_c_header@@Base+0xc80>
   1724c:	ldr	r2, [pc, #2920]	; 17dbc <__flatcc_fb_gen_common_c_header@@Base+0xc84>
   17250:	add	r1, pc, r1
   17254:	add	r2, pc, r2
   17258:	bl	149b8 <fprintf@plt>
   1725c:	ldr	r0, [r5, #204]	; 0xcc
   17260:	str	r5, [sp]
   17264:	str	r5, [sp, #4]
   17268:	str	r5, [sp, #8]
   1726c:	mov	r2, r5
   17270:	mov	r3, r5
   17274:	ldr	r1, [pc, #2884]	; 17dc0 <__flatcc_fb_gen_common_c_header@@Base+0xc88>
   17278:	add	r1, pc, r1
   1727c:	bl	149b8 <fprintf@plt>
   17280:	ldr	r0, [r5, #204]	; 0xcc
   17284:	ldr	r1, [pc, #2872]	; 17dc4 <__flatcc_fb_gen_common_c_header@@Base+0xc8c>
   17288:	mov	r2, r4
   1728c:	mov	r3, r4
   17290:	add	r1, pc, r1
   17294:	bl	149b8 <fprintf@plt>
   17298:	ldr	r0, [r5, #204]	; 0xcc
   1729c:	ldr	r1, [pc, #2852]	; 17dc8 <__flatcc_fb_gen_common_c_header@@Base+0xc90>
   172a0:	mov	r2, r5
   172a4:	mov	r3, r5
   172a8:	add	r1, pc, r1
   172ac:	bl	149b8 <fprintf@plt>
   172b0:	ldr	r0, [r5, #204]	; 0xcc
   172b4:	str	r5, [sp]
   172b8:	str	r5, [sp, #4]
   172bc:	str	r5, [sp, #8]
   172c0:	str	r5, [sp, #12]
   172c4:	str	r5, [sp, #16]
   172c8:	mov	r2, r5
   172cc:	mov	r3, r5
   172d0:	ldr	r1, [pc, #2804]	; 17dcc <__flatcc_fb_gen_common_c_header@@Base+0xc94>
   172d4:	add	r1, pc, r1
   172d8:	bl	149b8 <fprintf@plt>
   172dc:	ldr	r0, [r5, #204]	; 0xcc
   172e0:	ldr	r1, [pc, #2792]	; 17dd0 <__flatcc_fb_gen_common_c_header@@Base+0xc98>
   172e4:	mov	r2, r5
   172e8:	mov	r3, r5
   172ec:	add	r1, pc, r1
   172f0:	bl	149b8 <fprintf@plt>
   172f4:	ldr	r0, [r5, #204]	; 0xcc
   172f8:	str	r5, [sp]
   172fc:	str	r5, [sp, #4]
   17300:	mov	r2, r5
   17304:	mov	r3, r5
   17308:	ldr	r1, [pc, #2756]	; 17dd4 <__flatcc_fb_gen_common_c_header@@Base+0xc9c>
   1730c:	add	r1, pc, r1
   17310:	bl	149b8 <fprintf@plt>
   17314:	ldr	r0, [r5, #212]	; 0xd4
   17318:	ldr	r2, [r5, #204]	; 0xcc
   1731c:	ldr	r0, [r0, #32]
   17320:	cmp	r0, #0
   17324:	beq	17340 <__flatcc_fb_gen_common_c_header@@Base+0x208>
   17328:	ldr	r1, [pc, #2728]	; 17dd8 <__flatcc_fb_gen_common_c_header@@Base+0xca0>
   1732c:	mov	r0, r2
   17330:	mov	r2, r5
   17334:	add	r1, pc, r1
   17338:	bl	149b8 <fprintf@plt>
   1733c:	b	1734c <__flatcc_fb_gen_common_c_header@@Base+0x214>
   17340:	mov	r0, #10
   17344:	mov	r1, r2
   17348:	bl	14a18 <fputc@plt>
   1734c:	ldr	r0, [r5, #204]	; 0xcc
   17350:	ldr	r1, [pc, #2692]	; 17ddc <__flatcc_fb_gen_common_c_header@@Base+0xca4>
   17354:	mov	r2, r5
   17358:	mov	r3, r5
   1735c:	add	r1, pc, r1
   17360:	bl	149b8 <fprintf@plt>
   17364:	ldr	r0, [r5, #204]	; 0xcc
   17368:	str	r5, [sp]
   1736c:	str	r5, [sp, #4]
   17370:	str	r5, [sp, #8]
   17374:	mov	r2, r5
   17378:	mov	r3, r5
   1737c:	ldr	r1, [pc, #2652]	; 17de0 <__flatcc_fb_gen_common_c_header@@Base+0xca8>
   17380:	add	r1, pc, r1
   17384:	bl	149b8 <fprintf@plt>
   17388:	ldr	r0, [r5, #204]	; 0xcc
   1738c:	str	r5, [sp]
   17390:	str	r5, [sp, #4]
   17394:	str	r5, [sp, #8]
   17398:	mov	r2, r5
   1739c:	mov	r3, r5
   173a0:	ldr	r1, [pc, #2620]	; 17de4 <__flatcc_fb_gen_common_c_header@@Base+0xcac>
   173a4:	add	r1, pc, r1
   173a8:	bl	149b8 <fprintf@plt>
   173ac:	ldr	r0, [r5, #204]	; 0xcc
   173b0:	str	r5, [sp]
   173b4:	mov	r2, r5
   173b8:	mov	r3, r5
   173bc:	ldr	r1, [pc, #2596]	; 17de8 <__flatcc_fb_gen_common_c_header@@Base+0xcb0>
   173c0:	add	r1, pc, r1
   173c4:	bl	149b8 <fprintf@plt>
   173c8:	ldr	r0, [r5, #204]	; 0xcc
   173cc:	str	r5, [sp]
   173d0:	mov	r2, r5
   173d4:	mov	r3, r5
   173d8:	ldr	r1, [pc, #2572]	; 17dec <__flatcc_fb_gen_common_c_header@@Base+0xcb4>
   173dc:	add	r1, pc, r1
   173e0:	bl	149b8 <fprintf@plt>
   173e4:	ldr	r0, [r5, #204]	; 0xcc
   173e8:	str	r5, [sp]
   173ec:	mov	r2, r5
   173f0:	mov	r3, r5
   173f4:	ldr	r1, [pc, #2548]	; 17df0 <__flatcc_fb_gen_common_c_header@@Base+0xcb8>
   173f8:	add	r1, pc, r1
   173fc:	bl	149b8 <fprintf@plt>
   17400:	ldr	r0, [r5, #204]	; 0xcc
   17404:	str	r5, [sp]
   17408:	str	r5, [sp, #4]
   1740c:	str	r5, [sp, #8]
   17410:	mov	r2, r5
   17414:	mov	r3, r5
   17418:	ldr	r1, [pc, #2516]	; 17df4 <__flatcc_fb_gen_common_c_header@@Base+0xcbc>
   1741c:	add	r1, pc, r1
   17420:	bl	149b8 <fprintf@plt>
   17424:	ldr	r0, [r5, #212]	; 0xd4
   17428:	ldr	r2, [r5, #204]	; 0xcc
   1742c:	ldr	r0, [r0, #32]
   17430:	cmp	r0, #0
   17434:	beq	17450 <__flatcc_fb_gen_common_c_header@@Base+0x318>
   17438:	ldr	r1, [pc, #2488]	; 17df8 <__flatcc_fb_gen_common_c_header@@Base+0xcc0>
   1743c:	mov	r0, r2
   17440:	mov	r2, r5
   17444:	add	r1, pc, r1
   17448:	bl	149b8 <fprintf@plt>
   1744c:	b	1745c <__flatcc_fb_gen_common_c_header@@Base+0x324>
   17450:	mov	r0, #10
   17454:	mov	r1, r2
   17458:	bl	14a18 <fputc@plt>
   1745c:	ldr	r0, [r5, #204]	; 0xcc
   17460:	str	r5, [sp]
   17464:	str	r5, [sp, #4]
   17468:	mov	r2, r5
   1746c:	mov	r3, r5
   17470:	ldr	r1, [pc, #2436]	; 17dfc <__flatcc_fb_gen_common_c_header@@Base+0xcc4>
   17474:	add	r1, pc, r1
   17478:	bl	149b8 <fprintf@plt>
   1747c:	ldr	r0, [r5, #204]	; 0xcc
   17480:	ldr	r1, [pc, #2424]	; 17e00 <__flatcc_fb_gen_common_c_header@@Base+0xcc8>
   17484:	mov	r2, r5
   17488:	mov	r3, r5
   1748c:	add	r1, pc, r1
   17490:	bl	149b8 <fprintf@plt>
   17494:	ldr	r0, [r5, #204]	; 0xcc
   17498:	str	r5, [sp]
   1749c:	mov	r2, r5
   174a0:	mov	r3, r5
   174a4:	ldr	r1, [pc, #2392]	; 17e04 <__flatcc_fb_gen_common_c_header@@Base+0xccc>
   174a8:	add	r1, pc, r1
   174ac:	bl	149b8 <fprintf@plt>
   174b0:	ldr	r0, [r5, #204]	; 0xcc
   174b4:	ldr	r1, [pc, #2380]	; 17e08 <__flatcc_fb_gen_common_c_header@@Base+0xcd0>
   174b8:	mov	r2, r5
   174bc:	mov	r3, r5
   174c0:	add	r1, pc, r1
   174c4:	bl	149b8 <fprintf@plt>
   174c8:	ldr	r0, [r5, #204]	; 0xcc
   174cc:	str	r5, [sp]
   174d0:	str	r5, [sp, #4]
   174d4:	mov	r2, r5
   174d8:	mov	r3, r5
   174dc:	ldr	r1, [pc, #2344]	; 17e0c <__flatcc_fb_gen_common_c_header@@Base+0xcd4>
   174e0:	add	r1, pc, r1
   174e4:	bl	149b8 <fprintf@plt>
   174e8:	ldr	r0, [r5, #204]	; 0xcc
   174ec:	ldr	r1, [pc, #2332]	; 17e10 <__flatcc_fb_gen_common_c_header@@Base+0xcd8>
   174f0:	mov	r2, r5
   174f4:	mov	r3, r5
   174f8:	add	r1, pc, r1
   174fc:	bl	149b8 <fprintf@plt>
   17500:	ldr	r0, [r5, #204]	; 0xcc
   17504:	ldr	r1, [pc, #2312]	; 17e14 <__flatcc_fb_gen_common_c_header@@Base+0xcdc>
   17508:	mov	r2, r5
   1750c:	mov	r3, r5
   17510:	add	r1, pc, r1
   17514:	bl	149b8 <fprintf@plt>
   17518:	ldr	r0, [r5, #204]	; 0xcc
   1751c:	str	r5, [sp]
   17520:	str	r5, [sp, #4]
   17524:	mov	r2, r5
   17528:	mov	r3, r5
   1752c:	ldr	r1, [pc, #2276]	; 17e18 <__flatcc_fb_gen_common_c_header@@Base+0xce0>
   17530:	add	r1, pc, r1
   17534:	bl	149b8 <fprintf@plt>
   17538:	ldr	r0, [r5, #204]	; 0xcc
   1753c:	str	r5, [sp, #32]
   17540:	str	r5, [sp, #36]	; 0x24
   17544:	str	r5, [sp]
   17548:	str	r5, [sp, #4]
   1754c:	str	r5, [sp, #8]
   17550:	str	r5, [sp, #12]
   17554:	str	r5, [sp, #16]
   17558:	str	r5, [sp, #20]
   1755c:	str	r5, [sp, #24]
   17560:	str	r5, [sp, #28]
   17564:	mov	r2, r5
   17568:	mov	r3, r5
   1756c:	ldr	r1, [pc, #2216]	; 17e1c <__flatcc_fb_gen_common_c_header@@Base+0xce4>
   17570:	add	r1, pc, r1
   17574:	bl	149b8 <fprintf@plt>
   17578:	ldr	r0, [r5, #204]	; 0xcc
   1757c:	ldr	r1, [pc, #2204]	; 17e20 <__flatcc_fb_gen_common_c_header@@Base+0xce8>
   17580:	mov	r2, r5
   17584:	add	r1, pc, r1
   17588:	bl	149b8 <fprintf@plt>
   1758c:	ldr	r0, [r5, #204]	; 0xcc
   17590:	str	r5, [sp]
   17594:	str	r5, [sp, #4]
   17598:	mov	r2, r5
   1759c:	mov	r3, r5
   175a0:	ldr	r1, [pc, #2172]	; 17e24 <__flatcc_fb_gen_common_c_header@@Base+0xcec>
   175a4:	add	r1, pc, r1
   175a8:	bl	149b8 <fprintf@plt>
   175ac:	ldr	r0, [r5, #204]	; 0xcc
   175b0:	str	r5, [sp, #32]
   175b4:	str	r5, [sp, #36]	; 0x24
   175b8:	str	r5, [sp, #40]	; 0x28
   175bc:	str	r5, [sp, #44]	; 0x2c
   175c0:	str	r5, [sp, #48]	; 0x30
   175c4:	str	r5, [sp, #52]	; 0x34
   175c8:	str	r5, [sp, #56]	; 0x38
   175cc:	str	r5, [sp]
   175d0:	str	r5, [sp, #4]
   175d4:	str	r5, [sp, #8]
   175d8:	str	r5, [sp, #12]
   175dc:	str	r5, [sp, #16]
   175e0:	str	r5, [sp, #20]
   175e4:	str	r5, [sp, #24]
   175e8:	str	r5, [sp, #28]
   175ec:	mov	r2, r5
   175f0:	mov	r3, r5
   175f4:	ldr	r1, [pc, #2092]	; 17e28 <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
   175f8:	add	r1, pc, r1
   175fc:	bl	149b8 <fprintf@plt>
   17600:	ldr	r0, [r5, #204]	; 0xcc
   17604:	str	r5, [sp]
   17608:	str	r5, [sp, #4]
   1760c:	str	r5, [sp, #8]
   17610:	str	r5, [sp, #12]
   17614:	str	r5, [sp, #16]
   17618:	str	r5, [sp, #20]
   1761c:	mov	r2, r5
   17620:	mov	r3, r5
   17624:	ldr	r1, [pc, #2048]	; 17e2c <__flatcc_fb_gen_common_c_header@@Base+0xcf4>
   17628:	add	r1, pc, r1
   1762c:	bl	149b8 <fprintf@plt>
   17630:	ldr	r0, [r5, #204]	; 0xcc
   17634:	str	r5, [sp]
   17638:	str	r5, [sp, #4]
   1763c:	mov	r2, r5
   17640:	mov	r3, r5
   17644:	ldr	r1, [pc, #2020]	; 17e30 <__flatcc_fb_gen_common_c_header@@Base+0xcf8>
   17648:	add	r1, pc, r1
   1764c:	bl	149b8 <fprintf@plt>
   17650:	ldr	r0, [r5, #204]	; 0xcc
   17654:	str	r5, [sp]
   17658:	str	r5, [sp, #4]
   1765c:	mov	r2, r5
   17660:	mov	r3, r5
   17664:	ldr	r1, [pc, #1992]	; 17e34 <__flatcc_fb_gen_common_c_header@@Base+0xcfc>
   17668:	add	r1, pc, r1
   1766c:	bl	149b8 <fprintf@plt>
   17670:	ldr	r0, [r5, #204]	; 0xcc
   17674:	ldr	r1, [pc, #1980]	; 17e38 <__flatcc_fb_gen_common_c_header@@Base+0xd00>
   17678:	mov	r2, r5
   1767c:	add	r1, pc, r1
   17680:	bl	149b8 <fprintf@plt>
   17684:	ldr	r0, [r5, #204]	; 0xcc
   17688:	ldr	r1, [pc, #1964]	; 17e3c <__flatcc_fb_gen_common_c_header@@Base+0xd04>
   1768c:	mov	r2, r5
   17690:	add	r1, pc, r1
   17694:	bl	149b8 <fprintf@plt>
   17698:	ldr	r0, [r5, #204]	; 0xcc
   1769c:	ldr	r1, [pc, #1948]	; 17e40 <__flatcc_fb_gen_common_c_header@@Base+0xd08>
   176a0:	mov	r2, r5
   176a4:	add	r1, pc, r1
   176a8:	bl	149b8 <fprintf@plt>
   176ac:	ldr	r0, [r5, #204]	; 0xcc
   176b0:	ldr	r1, [pc, #1932]	; 17e44 <__flatcc_fb_gen_common_c_header@@Base+0xd0c>
   176b4:	mov	r2, r5
   176b8:	add	r1, pc, r1
   176bc:	bl	149b8 <fprintf@plt>
   176c0:	ldr	r0, [r5, #204]	; 0xcc
   176c4:	ldr	r1, [pc, #1916]	; 17e48 <__flatcc_fb_gen_common_c_header@@Base+0xd10>
   176c8:	mov	r2, r5
   176cc:	add	r1, pc, r1
   176d0:	bl	149b8 <fprintf@plt>
   176d4:	ldr	r0, [r5, #204]	; 0xcc
   176d8:	str	r5, [sp]
   176dc:	str	r5, [sp, #4]
   176e0:	mov	r2, r5
   176e4:	mov	r3, r5
   176e8:	ldr	r1, [pc, #1884]	; 17e4c <__flatcc_fb_gen_common_c_header@@Base+0xd14>
   176ec:	add	r1, pc, r1
   176f0:	bl	149b8 <fprintf@plt>
   176f4:	ldr	r0, [r5, #204]	; 0xcc
   176f8:	str	r5, [sp]
   176fc:	str	r5, [sp, #4]
   17700:	str	r5, [sp, #8]
   17704:	str	r5, [sp, #12]
   17708:	mov	r2, r5
   1770c:	mov	r3, r5
   17710:	ldr	r1, [pc, #1848]	; 17e50 <__flatcc_fb_gen_common_c_header@@Base+0xd18>
   17714:	add	r1, pc, r1
   17718:	bl	149b8 <fprintf@plt>
   1771c:	ldr	r0, [r5, #204]	; 0xcc
   17720:	str	r5, [sp]
   17724:	mov	r2, r5
   17728:	mov	r3, r5
   1772c:	ldr	r1, [pc, #1824]	; 17e54 <__flatcc_fb_gen_common_c_header@@Base+0xd1c>
   17730:	add	r1, pc, r1
   17734:	bl	149b8 <fprintf@plt>
   17738:	ldr	r0, [r5, #204]	; 0xcc
   1773c:	str	r5, [sp, #32]
   17740:	str	r5, [sp]
   17744:	str	r5, [sp, #4]
   17748:	str	r5, [sp, #8]
   1774c:	str	r5, [sp, #12]
   17750:	str	r5, [sp, #16]
   17754:	str	r5, [sp, #20]
   17758:	str	r5, [sp, #24]
   1775c:	str	r5, [sp, #28]
   17760:	mov	r2, r5
   17764:	mov	r3, r5
   17768:	ldr	r1, [pc, #1768]	; 17e58 <__flatcc_fb_gen_common_c_header@@Base+0xd20>
   1776c:	add	r1, pc, r1
   17770:	bl	149b8 <fprintf@plt>
   17774:	ldr	r0, [r5, #204]	; 0xcc
   17778:	ldr	r1, [pc, #1756]	; 17e5c <__flatcc_fb_gen_common_c_header@@Base+0xd24>
   1777c:	mov	r2, r5
   17780:	mov	r3, r5
   17784:	add	r1, pc, r1
   17788:	bl	149b8 <fprintf@plt>
   1778c:	ldr	r0, [r5, #204]	; 0xcc
   17790:	str	r5, [sp]
   17794:	mov	r2, r5
   17798:	mov	r3, r5
   1779c:	ldr	r1, [pc, #1724]	; 17e60 <__flatcc_fb_gen_common_c_header@@Base+0xd28>
   177a0:	add	r1, pc, r1
   177a4:	bl	149b8 <fprintf@plt>
   177a8:	ldr	r0, [r5, #204]	; 0xcc
   177ac:	str	r5, [sp]
   177b0:	mov	r2, r5
   177b4:	mov	r3, r5
   177b8:	ldr	r1, [pc, #1700]	; 17e64 <__flatcc_fb_gen_common_c_header@@Base+0xd2c>
   177bc:	add	r1, pc, r1
   177c0:	bl	149b8 <fprintf@plt>
   177c4:	ldr	r0, [r5, #204]	; 0xcc
   177c8:	ldr	r1, [pc, #1688]	; 17e68 <__flatcc_fb_gen_common_c_header@@Base+0xd30>
   177cc:	mov	r2, r5
   177d0:	add	r1, pc, r1
   177d4:	bl	149b8 <fprintf@plt>
   177d8:	ldr	r0, [r5, #204]	; 0xcc
   177dc:	ldr	r1, [pc, #1672]	; 17e6c <__flatcc_fb_gen_common_c_header@@Base+0xd34>
   177e0:	mov	r2, r5
   177e4:	add	r1, pc, r1
   177e8:	bl	149b8 <fprintf@plt>
   177ec:	ldr	r0, [r5, #204]	; 0xcc
   177f0:	ldr	r1, [pc, #1656]	; 17e70 <__flatcc_fb_gen_common_c_header@@Base+0xd38>
   177f4:	mov	r2, r5
   177f8:	mov	r3, r5
   177fc:	add	r1, pc, r1
   17800:	bl	149b8 <fprintf@plt>
   17804:	ldr	r0, [r5, #204]	; 0xcc
   17808:	ldr	r1, [pc, #1636]	; 17e74 <__flatcc_fb_gen_common_c_header@@Base+0xd3c>
   1780c:	mov	r2, r5
   17810:	mov	r3, r5
   17814:	add	r1, pc, r1
   17818:	bl	149b8 <fprintf@plt>
   1781c:	ldr	r0, [r5, #204]	; 0xcc
   17820:	str	r5, [sp, #32]
   17824:	str	r5, [sp]
   17828:	str	r5, [sp, #4]
   1782c:	str	r5, [sp, #8]
   17830:	str	r5, [sp, #12]
   17834:	str	r5, [sp, #16]
   17838:	str	r5, [sp, #20]
   1783c:	str	r5, [sp, #24]
   17840:	str	r5, [sp, #28]
   17844:	mov	r2, r5
   17848:	mov	r3, r5
   1784c:	ldr	r1, [pc, #1572]	; 17e78 <__flatcc_fb_gen_common_c_header@@Base+0xd40>
   17850:	add	r1, pc, r1
   17854:	bl	149b8 <fprintf@plt>
   17858:	ldr	r0, [r5, #204]	; 0xcc
   1785c:	str	r5, [sp, #32]
   17860:	str	r5, [sp]
   17864:	str	r5, [sp, #4]
   17868:	str	r5, [sp, #8]
   1786c:	str	r5, [sp, #12]
   17870:	str	r5, [sp, #16]
   17874:	str	r5, [sp, #20]
   17878:	str	r5, [sp, #24]
   1787c:	str	r5, [sp, #28]
   17880:	mov	r2, r5
   17884:	mov	r3, r5
   17888:	ldr	r1, [pc, #1516]	; 17e7c <__flatcc_fb_gen_common_c_header@@Base+0xd44>
   1788c:	add	r1, pc, r1
   17890:	bl	149b8 <fprintf@plt>
   17894:	ldr	r0, [r5, #204]	; 0xcc
   17898:	str	r5, [sp]
   1789c:	str	r5, [sp, #4]
   178a0:	str	r5, [sp, #8]
   178a4:	str	r5, [sp, #12]
   178a8:	str	r5, [sp, #16]
   178ac:	mov	r2, r5
   178b0:	mov	r3, r5
   178b4:	ldr	r1, [pc, #1476]	; 17e80 <__flatcc_fb_gen_common_c_header@@Base+0xd48>
   178b8:	add	r1, pc, r1
   178bc:	bl	149b8 <fprintf@plt>
   178c0:	ldr	r0, [r5, #204]	; 0xcc
   178c4:	str	r5, [sp, #32]
   178c8:	str	r5, [sp]
   178cc:	str	r5, [sp, #4]
   178d0:	str	r5, [sp, #8]
   178d4:	str	r5, [sp, #12]
   178d8:	str	r5, [sp, #16]
   178dc:	str	r5, [sp, #20]
   178e0:	str	r5, [sp, #24]
   178e4:	str	r5, [sp, #28]
   178e8:	mov	r2, r5
   178ec:	mov	r3, r5
   178f0:	ldr	r1, [pc, #1420]	; 17e84 <__flatcc_fb_gen_common_c_header@@Base+0xd4c>
   178f4:	add	r1, pc, r1
   178f8:	bl	149b8 <fprintf@plt>
   178fc:	ldr	r0, [r5, #204]	; 0xcc
   17900:	str	r5, [sp, #32]
   17904:	str	r5, [sp, #36]	; 0x24
   17908:	str	r5, [sp, #40]	; 0x28
   1790c:	str	r5, [sp]
   17910:	str	r5, [sp, #4]
   17914:	str	r5, [sp, #8]
   17918:	str	r5, [sp, #12]
   1791c:	str	r5, [sp, #16]
   17920:	str	r5, [sp, #20]
   17924:	str	r5, [sp, #24]
   17928:	str	r5, [sp, #28]
   1792c:	mov	r2, r5
   17930:	mov	r3, r5
   17934:	ldr	r1, [pc, #1356]	; 17e88 <__flatcc_fb_gen_common_c_header@@Base+0xd50>
   17938:	add	r1, pc, r1
   1793c:	bl	149b8 <fprintf@plt>
   17940:	ldr	r0, [r5, #204]	; 0xcc
   17944:	ldr	r1, [pc, #1344]	; 17e8c <__flatcc_fb_gen_common_c_header@@Base+0xd54>
   17948:	mov	r2, r5
   1794c:	add	r1, pc, r1
   17950:	bl	149b8 <fprintf@plt>
   17954:	ldr	r0, [r5, #204]	; 0xcc
   17958:	ldr	r1, [pc, #1328]	; 17e90 <__flatcc_fb_gen_common_c_header@@Base+0xd58>
   1795c:	mov	r2, r5
   17960:	add	r1, pc, r1
   17964:	bl	149b8 <fprintf@plt>
   17968:	ldr	r0, [r5, #212]	; 0xd4
   1796c:	ldr	r0, [r0, #136]	; 0x88
   17970:	cmp	r0, #0
   17974:	beq	17984 <__flatcc_fb_gen_common_c_header@@Base+0x84c>
   17978:	mov	r0, r5
   1797c:	bl	1aad0 <__flatcc_gen_sort@@Base>
   17980:	b	1799c <__flatcc_fb_gen_common_c_header@@Base+0x864>
   17984:	ldr	r3, [r5, #204]	; 0xcc
   17988:	ldr	r0, [pc, #1284]	; 17e94 <__flatcc_fb_gen_common_c_header@@Base+0xd5c>
   1798c:	mov	r1, #20
   17990:	mov	r2, #1
   17994:	add	r0, pc, r0
   17998:	bl	1494c <fwrite@plt>
   1799c:	ldr	r0, [r5, #204]	; 0xcc
   179a0:	str	r5, [sp]
   179a4:	str	r5, [sp, #4]
   179a8:	str	r5, [sp, #8]
   179ac:	mov	r2, r5
   179b0:	mov	r3, r5
   179b4:	ldr	r1, [pc, #1244]	; 17e98 <__flatcc_fb_gen_common_c_header@@Base+0xd60>
   179b8:	add	r1, pc, r1
   179bc:	bl	149b8 <fprintf@plt>
   179c0:	ldr	r0, [r5, #212]	; 0xd4
   179c4:	ldr	r2, [r5, #204]	; 0xcc
   179c8:	ldr	r0, [r0, #136]	; 0x88
   179cc:	cmp	r0, #0
   179d0:	beq	179ec <__flatcc_fb_gen_common_c_header@@Base+0x8b4>
   179d4:	ldr	r1, [pc, #1216]	; 17e9c <__flatcc_fb_gen_common_c_header@@Base+0xd64>
   179d8:	mov	r0, r2
   179dc:	mov	r2, r5
   179e0:	add	r1, pc, r1
   179e4:	bl	149b8 <fprintf@plt>
   179e8:	b	179f8 <__flatcc_fb_gen_common_c_header@@Base+0x8c0>
   179ec:	mov	r0, #10
   179f0:	mov	r1, r2
   179f4:	bl	14a18 <fputc@plt>
   179f8:	ldr	r1, [r5, #204]	; 0xcc
   179fc:	mov	r0, #10
   17a00:	bl	14a18 <fputc@plt>
   17a04:	ldr	r0, [r5, #204]	; 0xcc
   17a08:	str	r5, [sp]
   17a0c:	mov	r2, r5
   17a10:	mov	r3, r5
   17a14:	ldr	r1, [pc, #1156]	; 17ea0 <__flatcc_fb_gen_common_c_header@@Base+0xd68>
   17a18:	add	r1, pc, r1
   17a1c:	bl	149b8 <fprintf@plt>
   17a20:	ldr	r0, [r5, #204]	; 0xcc
   17a24:	str	r5, [sp, #64]	; 0x40
   17a28:	str	r5, [sp, #68]	; 0x44
   17a2c:	str	r5, [sp, #72]	; 0x48
   17a30:	str	r5, [sp, #76]	; 0x4c
   17a34:	str	r5, [sp, #80]	; 0x50
   17a38:	str	r5, [sp, #84]	; 0x54
   17a3c:	str	r5, [sp, #88]	; 0x58
   17a40:	str	r5, [sp, #92]	; 0x5c
   17a44:	str	r5, [sp, #32]
   17a48:	str	r5, [sp, #36]	; 0x24
   17a4c:	str	r5, [sp, #40]	; 0x28
   17a50:	str	r5, [sp, #44]	; 0x2c
   17a54:	str	r5, [sp, #48]	; 0x30
   17a58:	str	r5, [sp, #52]	; 0x34
   17a5c:	str	r5, [sp, #56]	; 0x38
   17a60:	str	r5, [sp, #60]	; 0x3c
   17a64:	str	r5, [sp]
   17a68:	str	r5, [sp, #4]
   17a6c:	str	r5, [sp, #8]
   17a70:	str	r5, [sp, #12]
   17a74:	str	r5, [sp, #16]
   17a78:	str	r5, [sp, #20]
   17a7c:	str	r5, [sp, #24]
   17a80:	str	r5, [sp, #28]
   17a84:	mov	r2, r5
   17a88:	mov	r3, r5
   17a8c:	ldr	r1, [pc, #1040]	; 17ea4 <__flatcc_fb_gen_common_c_header@@Base+0xd6c>
   17a90:	add	r1, pc, r1
   17a94:	bl	149b8 <fprintf@plt>
   17a98:	ldr	r0, [r5, #204]	; 0xcc
   17a9c:	str	r5, [sp, #32]
   17aa0:	str	r5, [sp, #36]	; 0x24
   17aa4:	str	r5, [sp]
   17aa8:	str	r5, [sp, #4]
   17aac:	str	r5, [sp, #8]
   17ab0:	str	r5, [sp, #12]
   17ab4:	str	r5, [sp, #16]
   17ab8:	str	r5, [sp, #20]
   17abc:	str	r5, [sp, #24]
   17ac0:	str	r5, [sp, #28]
   17ac4:	mov	r2, r5
   17ac8:	mov	r3, r5
   17acc:	ldr	r1, [pc, #980]	; 17ea8 <__flatcc_fb_gen_common_c_header@@Base+0xd70>
   17ad0:	add	r1, pc, r1
   17ad4:	bl	149b8 <fprintf@plt>
   17ad8:	ldr	r0, [r5, #204]	; 0xcc
   17adc:	str	r5, [sp, #224]	; 0xe0
   17ae0:	str	r5, [sp, #228]	; 0xe4
   17ae4:	str	r5, [sp, #192]	; 0xc0
   17ae8:	str	r5, [sp, #196]	; 0xc4
   17aec:	str	r5, [sp, #200]	; 0xc8
   17af0:	str	r5, [sp, #204]	; 0xcc
   17af4:	str	r5, [sp, #208]	; 0xd0
   17af8:	str	r5, [sp, #212]	; 0xd4
   17afc:	str	r5, [sp, #216]	; 0xd8
   17b00:	str	r5, [sp, #220]	; 0xdc
   17b04:	str	r5, [sp, #160]	; 0xa0
   17b08:	str	r5, [sp, #164]	; 0xa4
   17b0c:	str	r5, [sp, #168]	; 0xa8
   17b10:	str	r5, [sp, #172]	; 0xac
   17b14:	str	r5, [sp, #176]	; 0xb0
   17b18:	str	r5, [sp, #180]	; 0xb4
   17b1c:	str	r5, [sp, #184]	; 0xb8
   17b20:	str	r5, [sp, #188]	; 0xbc
   17b24:	str	r5, [sp, #128]	; 0x80
   17b28:	str	r5, [sp, #132]	; 0x84
   17b2c:	str	r5, [sp, #136]	; 0x88
   17b30:	str	r5, [sp, #140]	; 0x8c
   17b34:	str	r5, [sp, #144]	; 0x90
   17b38:	str	r5, [sp, #148]	; 0x94
   17b3c:	str	r5, [sp, #152]	; 0x98
   17b40:	str	r5, [sp, #156]	; 0x9c
   17b44:	str	r5, [sp, #96]	; 0x60
   17b48:	str	r5, [sp, #100]	; 0x64
   17b4c:	str	r5, [sp, #104]	; 0x68
   17b50:	str	r5, [sp, #108]	; 0x6c
   17b54:	str	r5, [sp, #112]	; 0x70
   17b58:	str	r5, [sp, #116]	; 0x74
   17b5c:	str	r5, [sp, #120]	; 0x78
   17b60:	str	r5, [sp, #124]	; 0x7c
   17b64:	str	r5, [sp, #64]	; 0x40
   17b68:	str	r5, [sp, #68]	; 0x44
   17b6c:	str	r5, [sp, #72]	; 0x48
   17b70:	str	r5, [sp, #76]	; 0x4c
   17b74:	str	r5, [sp, #80]	; 0x50
   17b78:	str	r5, [sp, #84]	; 0x54
   17b7c:	str	r5, [sp, #88]	; 0x58
   17b80:	str	r5, [sp, #92]	; 0x5c
   17b84:	str	r5, [sp, #32]
   17b88:	str	r5, [sp, #36]	; 0x24
   17b8c:	str	r5, [sp, #40]	; 0x28
   17b90:	str	r5, [sp, #44]	; 0x2c
   17b94:	str	r5, [sp, #48]	; 0x30
   17b98:	str	r5, [sp, #52]	; 0x34
   17b9c:	str	r5, [sp, #56]	; 0x38
   17ba0:	str	r5, [sp, #60]	; 0x3c
   17ba4:	str	r5, [sp]
   17ba8:	str	r5, [sp, #4]
   17bac:	str	r5, [sp, #8]
   17bb0:	str	r5, [sp, #12]
   17bb4:	str	r5, [sp, #16]
   17bb8:	str	r5, [sp, #20]
   17bbc:	str	r5, [sp, #24]
   17bc0:	str	r5, [sp, #28]
   17bc4:	mov	r2, r5
   17bc8:	mov	r3, r5
   17bcc:	ldr	r1, [pc, #728]	; 17eac <__flatcc_fb_gen_common_c_header@@Base+0xd74>
   17bd0:	add	r1, pc, r1
   17bd4:	bl	149b8 <fprintf@plt>
   17bd8:	ldr	r0, [r5, #212]	; 0xd4
   17bdc:	ldr	r0, [r0, #136]	; 0x88
   17be0:	cmp	r0, #0
   17be4:	beq	17bfc <__flatcc_fb_gen_common_c_header@@Base+0xac4>
   17be8:	ldr	r0, [r5, #204]	; 0xcc
   17bec:	ldr	r1, [pc, #700]	; 17eb0 <__flatcc_fb_gen_common_c_header@@Base+0xd78>
   17bf0:	mov	r2, r5
   17bf4:	add	r1, pc, r1
   17bf8:	bl	149b8 <fprintf@plt>
   17bfc:	ldr	r0, [r5, #204]	; 0xcc
   17c00:	ldr	r1, [pc, #684]	; 17eb4 <__flatcc_fb_gen_common_c_header@@Base+0xd7c>
   17c04:	mov	r2, r5
   17c08:	mov	r3, r5
   17c0c:	add	r1, pc, r1
   17c10:	bl	149b8 <fprintf@plt>
   17c14:	ldr	r0, [r5, #212]	; 0xd4
   17c18:	ldr	r2, [r5, #204]	; 0xcc
   17c1c:	ldr	r0, [r0, #32]
   17c20:	cmp	r0, #0
   17c24:	beq	17c40 <__flatcc_fb_gen_common_c_header@@Base+0xb08>
   17c28:	ldr	r1, [pc, #648]	; 17eb8 <__flatcc_fb_gen_common_c_header@@Base+0xd80>
   17c2c:	mov	r0, r2
   17c30:	mov	r2, r5
   17c34:	add	r1, pc, r1
   17c38:	bl	149b8 <fprintf@plt>
   17c3c:	b	17c4c <__flatcc_fb_gen_common_c_header@@Base+0xb14>
   17c40:	mov	r0, #10
   17c44:	mov	r1, r2
   17c48:	bl	14a18 <fputc@plt>
   17c4c:	ldr	r0, [r5, #204]	; 0xcc
   17c50:	ldr	r1, [pc, #612]	; 17ebc <__flatcc_fb_gen_common_c_header@@Base+0xd84>
   17c54:	mov	r2, r5
   17c58:	add	r1, pc, r1
   17c5c:	bl	149b8 <fprintf@plt>
   17c60:	ldr	r0, [r5, #204]	; 0xcc
   17c64:	str	r5, [sp, #32]
   17c68:	str	r5, [sp, #36]	; 0x24
   17c6c:	str	r5, [sp, #40]	; 0x28
   17c70:	str	r5, [sp, #44]	; 0x2c
   17c74:	str	r5, [sp]
   17c78:	str	r5, [sp, #4]
   17c7c:	str	r5, [sp, #8]
   17c80:	str	r5, [sp, #12]
   17c84:	str	r5, [sp, #16]
   17c88:	str	r5, [sp, #20]
   17c8c:	str	r5, [sp, #24]
   17c90:	str	r5, [sp, #28]
   17c94:	mov	r2, r5
   17c98:	mov	r3, r5
   17c9c:	ldr	r1, [pc, #540]	; 17ec0 <__flatcc_fb_gen_common_c_header@@Base+0xd88>
   17ca0:	add	r1, pc, r1
   17ca4:	bl	149b8 <fprintf@plt>
   17ca8:	ldr	r0, [r5, #204]	; 0xcc
   17cac:	str	r5, [sp]
   17cb0:	mov	r2, r5
   17cb4:	mov	r3, r5
   17cb8:	ldr	r1, [pc, #516]	; 17ec4 <__flatcc_fb_gen_common_c_header@@Base+0xd8c>
   17cbc:	add	r1, pc, r1
   17cc0:	bl	149b8 <fprintf@plt>
   17cc4:	ldr	r0, [r5, #204]	; 0xcc
   17cc8:	str	r5, [sp]
   17ccc:	str	r5, [sp, #4]
   17cd0:	str	r5, [sp, #8]
   17cd4:	str	r5, [sp, #12]
   17cd8:	mov	r2, r5
   17cdc:	mov	r3, r5
   17ce0:	ldr	r1, [pc, #480]	; 17ec8 <__flatcc_fb_gen_common_c_header@@Base+0xd90>
   17ce4:	add	r1, pc, r1
   17ce8:	bl	149b8 <fprintf@plt>
   17cec:	ldr	r0, [r5, #204]	; 0xcc
   17cf0:	str	r5, [sp]
   17cf4:	str	r5, [sp, #4]
   17cf8:	mov	r2, r5
   17cfc:	mov	r3, r5
   17d00:	ldr	r1, [pc, #452]	; 17ecc <__flatcc_fb_gen_common_c_header@@Base+0xd94>
   17d04:	add	r1, pc, r1
   17d08:	bl	149b8 <fprintf@plt>
   17d0c:	ldr	r0, [r5, #204]	; 0xcc
   17d10:	str	r5, [sp]
   17d14:	str	r5, [sp, #4]
   17d18:	str	r5, [sp, #8]
   17d1c:	str	r5, [sp, #12]
   17d20:	str	r5, [sp, #16]
   17d24:	str	r5, [sp, #20]
   17d28:	str	r5, [sp, #24]
   17d2c:	str	r5, [sp, #28]
   17d30:	mov	r2, r5
   17d34:	mov	r3, r5
   17d38:	ldr	r1, [pc, #400]	; 17ed0 <__flatcc_fb_gen_common_c_header@@Base+0xd98>
   17d3c:	add	r1, pc, r1
   17d40:	bl	149b8 <fprintf@plt>
   17d44:	ldr	r1, [r5, #204]	; 0xcc
   17d48:	mov	r0, #10
   17d4c:	bl	14a18 <fputc@plt>
   17d50:	ldr	r0, [r5, #212]	; 0xd4
   17d54:	ldr	r0, [r0, #140]	; 0x8c
   17d58:	cmp	r0, #0
   17d5c:	beq	17d78 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   17d60:	ldr	r3, [r5, #204]	; 0xcc
   17d64:	ldr	r0, [pc, #360]	; 17ed4 <__flatcc_fb_gen_common_c_header@@Base+0xd9c>
   17d68:	mov	r1, #36	; 0x24
   17d6c:	mov	r2, #1
   17d70:	add	r0, pc, r0
   17d74:	bl	1494c <fwrite@plt>
   17d78:	ldr	r0, [r5, #204]	; 0xcc
   17d7c:	ldr	r1, [pc, #340]	; 17ed8 <__flatcc_fb_gen_common_c_header@@Base+0xda0>
   17d80:	mov	r2, r4
   17d84:	add	r1, pc, r1
   17d88:	bl	149b8 <fprintf@plt>
   17d8c:	mov	r0, #0
   17d90:	sub	sp, fp, #8
   17d94:	pop	{r4, r5, fp, pc}
   17d98:	andeq	r9, r2, sl, lsr #8
   17d9c:	andeq	r9, r2, r9, asr #8
   17da0:	andeq	r9, r2, r3, lsl #9
   17da4:	muleq	r2, r0, r4
   17da8:	ldrdeq	r9, [r2], -r4
   17dac:	andeq	r9, r2, r1, ror #11
   17db0:	strdeq	r9, [r2], -fp
   17db4:	ldrdeq	r9, [r2], -ip
   17db8:	andeq	r9, r2, fp, lsl #13
   17dbc:	andeq	r9, r2, r9, lsr #11
   17dc0:			; <UNDEFINED> instruction: 0x000297ba
   17dc4:	andeq	r9, r2, r8, lsl #20
   17dc8:	andeq	r9, r2, r0, asr #20
   17dcc:	andeq	r9, r2, r1, lsr #21
   17dd0:	strdeq	r9, [r2], -ip
   17dd4:	andeq	r9, r2, r1, lsr ip
   17dd8:	andeq	r9, r2, lr, lsr #26
   17ddc:	andeq	r9, r2, r3, lsr sp
   17de0:	andeq	r9, r2, r2, ror #27
   17de4:	andeq	r9, r2, r8, ror #30
   17de8:	andeq	r9, r2, ip, ror #31
   17dec:	andeq	sl, r2, sl, lsr #1
   17df0:	andeq	sl, r2, r8, ror #2
   17df4:	andeq	sl, r2, ip, lsl r2
   17df8:	ldrdeq	sl, [r2], -ip
   17dfc:	ldrdeq	sl, [r2], -r6
   17e00:	andeq	sl, r2, sp, asr r3
   17e04:	andeq	sl, r2, r3, lsl #7
   17e08:	strdeq	sl, [r2], -r5
   17e0c:	andeq	sl, r2, r7, asr #8
   17e10:	andeq	sl, r2, pc, asr #10
   17e14:	andeq	sl, r2, lr, lsr #11
   17e18:	andeq	sl, r2, lr, lsl #12
   17e1c:	andeq	sl, r2, r1, lsr r6
   17e20:	andeq	sl, r2, lr, lsr r7
   17e24:	andeq	sl, r2, r0, asr #14
   17e28:	andeq	sl, r2, r3, ror r7
   17e2c:	strdeq	ip, [r2], -r5
   17e30:	muleq	r2, r8, r1
   17e34:	andeq	ip, r2, r1, lsl r2
   17e38:	andeq	ip, r2, r4, ror r2
   17e3c:	andeq	ip, r2, r1, lsr r5
   17e40:	andeq	ip, r2, pc, lsr #15
   17e44:	andeq	ip, r2, ip, lsl r8
   17e48:	andeq	ip, r2, r6, ror r8
   17e4c:	andeq	ip, r2, sl, lsr sl
   17e50:			; <UNDEFINED> instruction: 0x0002cabb
   17e54:	andeq	ip, r2, sl, ror ip
   17e58:	andeq	ip, r2, r8, asr lr
   17e5c:	muleq	r2, r7, pc	; <UNPREDICTABLE>
   17e60:	andeq	sp, r2, sl, asr #32
   17e64:	andeq	sp, r2, r3, ror #1
   17e68:	andeq	sp, r2, r4, lsl #5
   17e6c:	andeq	sp, r2, sl, lsl r3
   17e70:	andeq	sp, r2, pc, lsr #8
   17e74:	andeq	sp, r2, r7, ror #10
   17e78:	strdeq	sp, [r2], -pc	; <UNPREDICTABLE>
   17e7c:	andeq	sp, r2, lr, lsr r7
   17e80:	muleq	r2, r3, r8
   17e84:	andeq	sp, r2, ip, lsr #23
   17e88:	andeq	sp, r2, r8, lsl #29
   17e8c:	andeq	lr, r2, sp, lsr r5
   17e90:	andeq	lr, r2, r9, ror r7
   17e94:	andeq	sl, r2, r6, lsl #11
   17e98:	andeq	sl, r2, r7, ror r5
   17e9c:	andeq	sl, r2, r0, lsr r6
   17ea0:	andeq	sl, r2, r8, lsl r6
   17ea4:	andeq	sl, r2, r0, lsr #12
   17ea8:	strdeq	sl, [r2], -r3
   17eac:	andeq	sl, r2, sp, lsr r8
   17eb0:	ldrdeq	sl, [r2], -r2
   17eb4:	ldrdeq	sl, [r2], -r4
   17eb8:	andeq	r9, r2, lr, lsr #8
   17ebc:	andeq	sl, r2, r1, lsr #30
   17ec0:	andeq	sl, r2, r8, asr pc
   17ec4:	andeq	fp, r2, r5, lsl #5
   17ec8:	andeq	fp, r2, r4, lsl r3
   17ecc:			; <UNDEFINED> instruction: 0x0002b4bb
   17ed0:	strdeq	fp, [r2], -pc	; <UNPREDICTABLE>
   17ed4:	andeq	lr, r2, sl, lsr #16
   17ed8:	andeq	r8, r2, r8, asr #18

00017edc <__flatcc_fb_gen_c_reader@@Base>:
   17edc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17ee0:	add	fp, sp, #28
   17ee4:	sub	sp, sp, #52	; 0x34
   17ee8:	sub	sp, sp, #1024	; 0x400
   17eec:	mov	r9, r0
   17ef0:	mov	r6, r0
   17ef4:	ldr	r0, [r9, #204]!	; 0xcc
   17ef8:	ldmib	r9, {r1, r2}
   17efc:	ldr	r5, [r2, #132]	; 0x84
   17f00:	ldr	r2, [r1, #164]	; 0xa4
   17f04:	ldr	r1, [pc, #4028]	; 18ec8 <__flatcc_fb_gen_c_reader@@Base+0xfec>
   17f08:	add	r1, pc, r1
   17f0c:	mov	r3, r2
   17f10:	bl	149b8 <fprintf@plt>
   17f14:	ldr	r3, [r9]
   17f18:	ldr	r0, [pc, #4084]	; 18f14 <__flatcc_fb_gen_c_reader@@Base+0x1038>
   17f1c:	mov	r1, #81	; 0x51
   17f20:	mov	r2, #1
   17f24:	add	r0, pc, r0
   17f28:	bl	1494c <fwrite@plt>
   17f2c:	ldr	r3, [r9]
   17f30:	sub	r4, r9, #102	; 0x66
   17f34:	cmp	r5, #0
   17f38:	beq	17f94 <__flatcc_fb_gen_c_reader@@Base+0xb8>
   17f3c:	ldr	r0, [pc, #4052]	; 18f18 <__flatcc_fb_gen_c_reader@@Base+0x103c>
   17f40:	movw	r1, #443	; 0x1bb
   17f44:	mov	r2, #1
   17f48:	add	r0, pc, r0
   17f4c:	bl	1494c <fwrite@plt>
   17f50:	ldr	r0, [r6, #204]	; 0xcc
   17f54:	ldr	r1, [pc, #4032]	; 18f1c <__flatcc_fb_gen_c_reader@@Base+0x1040>
   17f58:	mov	r2, r4
   17f5c:	mov	r3, r6
   17f60:	add	r1, pc, r1
   17f64:	bl	149b8 <fprintf@plt>
   17f68:	ldr	r1, [pc, #4080]	; 18f60 <__flatcc_fb_gen_c_reader@@Base+0x1084>
   17f6c:	ldr	r2, [pc, #4080]	; 18f64 <__flatcc_fb_gen_c_reader@@Base+0x1088>
   17f70:	mov	r0, r6
   17f74:	add	r1, pc, r1
   17f78:	add	r2, pc, r2
   17f7c:	bl	16990 <__flatcc_fb_gen_c_includes@@Base>
   17f80:	ldr	r3, [r6, #204]	; 0xcc
   17f84:	ldr	r0, [pc, #4060]	; 18f68 <__flatcc_fb_gen_c_reader@@Base+0x108c>
   17f88:	mov	r1, #39	; 0x27
   17f8c:	add	r0, pc, r0
   17f90:	b	17fec <__flatcc_fb_gen_c_reader@@Base+0x110>
   17f94:	ldr	r1, [pc, #4048]	; 18f6c <__flatcc_fb_gen_c_reader@@Base+0x1090>
   17f98:	mov	r0, r3
   17f9c:	mov	r2, r4
   17fa0:	mov	r3, r6
   17fa4:	add	r1, pc, r1
   17fa8:	bl	149b8 <fprintf@plt>
   17fac:	ldr	r1, [pc, #4028]	; 18f70 <__flatcc_fb_gen_c_reader@@Base+0x1094>
   17fb0:	ldr	r2, [pc, #4028]	; 18f74 <__flatcc_fb_gen_c_reader@@Base+0x1098>
   17fb4:	mov	r0, r6
   17fb8:	add	r1, pc, r1
   17fbc:	add	r2, pc, r2
   17fc0:	bl	16990 <__flatcc_fb_gen_c_includes@@Base>
   17fc4:	ldr	r3, [r6, #204]	; 0xcc
   17fc8:	ldr	r0, [pc, #4008]	; 18f78 <__flatcc_fb_gen_c_reader@@Base+0x109c>
   17fcc:	mov	r1, #39	; 0x27
   17fd0:	mov	r2, #1
   17fd4:	add	r0, pc, r0
   17fd8:	bl	1494c <fwrite@plt>
   17fdc:	ldr	r3, [r6, #204]	; 0xcc
   17fe0:	ldr	r0, [pc, #3988]	; 18f7c <__flatcc_fb_gen_c_reader@@Base+0x10a0>
   17fe4:	mov	r1, #58	; 0x3a
   17fe8:	add	r0, pc, r0
   17fec:	mov	r2, #1
   17ff0:	bl	1494c <fwrite@plt>
   17ff4:	ldr	r0, [r6, #212]	; 0xd4
   17ff8:	ldr	r0, [r0, #140]	; 0x8c
   17ffc:	cmp	r0, #0
   18000:	beq	1801c <__flatcc_fb_gen_c_reader@@Base+0x140>
   18004:	ldr	r3, [r9]
   18008:	ldr	r0, [pc, #3952]	; 18f80 <__flatcc_fb_gen_c_reader@@Base+0x10a4>
   1800c:	mov	r1, #36	; 0x24
   18010:	mov	r2, #1
   18014:	add	r0, pc, r0
   18018:	bl	1494c <fwrite@plt>
   1801c:	ldr	r1, [r6, #208]	; 0xd0
   18020:	ldr	r0, [r6, #204]	; 0xcc
   18024:	ldrh	r2, [r1, #16]
   18028:	cmp	r2, #2
   1802c:	bne	18048 <__flatcc_fb_gen_c_reader@@Base+0x16c>
   18030:	ldrd	r2, [r1, #8]
   18034:	str	r3, [sp]
   18038:	str	r2, [sp, #4]
   1803c:	ldr	r1, [pc, #3904]	; 18f84 <__flatcc_fb_gen_c_reader@@Base+0x10a8>
   18040:	add	r1, pc, r1
   18044:	b	18050 <__flatcc_fb_gen_c_reader@@Base+0x174>
   18048:	ldr	r1, [pc, #3896]	; 18f88 <__flatcc_fb_gen_c_reader@@Base+0x10ac>
   1804c:	add	r1, pc, r1
   18050:	mov	r2, r6
   18054:	mov	r3, r6
   18058:	bl	149b8 <fprintf@plt>
   1805c:	ldr	r1, [r6, #208]	; 0xd0
   18060:	ldr	r0, [r6, #204]	; 0xcc
   18064:	ldrh	r2, [r1, #32]
   18068:	cmp	r2, #2
   1806c:	bne	18088 <__flatcc_fb_gen_c_reader@@Base+0x1ac>
   18070:	ldrd	r2, [r1, #24]
   18074:	str	r3, [sp]
   18078:	str	r2, [sp, #4]
   1807c:	ldr	r1, [pc, #3848]	; 18f8c <__flatcc_fb_gen_c_reader@@Base+0x10b0>
   18080:	add	r1, pc, r1
   18084:	b	1809c <__flatcc_fb_gen_c_reader@@Base+0x1c0>
   18088:	ldr	r1, [r6, #212]	; 0xd4
   1808c:	ldr	r1, [r1, #104]	; 0x68
   18090:	str	r1, [sp]
   18094:	ldr	r1, [pc, #3828]	; 18f90 <__flatcc_fb_gen_c_reader@@Base+0x10b4>
   18098:	add	r1, pc, r1
   1809c:	mov	r2, r6
   180a0:	mov	r3, r6
   180a4:	bl	149b8 <fprintf@plt>
   180a8:	ldr	r1, [r6, #204]	; 0xcc
   180ac:	mov	r0, #10
   180b0:	bl	14a18 <fputc@plt>
   180b4:	ldr	r0, [r6, #208]	; 0xd0
   180b8:	ldr	r4, [r0, #44]	; 0x2c
   180bc:	cmp	r4, #0
   180c0:	beq	180dc <__flatcc_fb_gen_c_reader@@Base+0x200>
   180c4:	mov	r0, r6
   180c8:	mov	r1, r4
   180cc:	bl	1a0d8 <__flatcc_fb_gen_c_reader@@Base+0x21fc>
   180d0:	ldr	r4, [r4, #120]	; 0x78
   180d4:	cmp	r4, #0
   180d8:	bne	180c4 <__flatcc_fb_gen_c_reader@@Base+0x1e8>
   180dc:	ldr	r1, [r6, #204]	; 0xcc
   180e0:	mov	r0, #10
   180e4:	bl	14a18 <fputc@plt>
   180e8:	ldr	r0, [r6, #208]	; 0xd0
   180ec:	str	r6, [sp, #68]	; 0x44
   180f0:	ldr	r4, [r0, #40]	; 0x28
   180f4:	cmp	r4, #0
   180f8:	beq	182a8 <__flatcc_fb_gen_c_reader@@Base+0x3cc>
   180fc:	ldr	r5, [sp, #68]	; 0x44
   18100:	ldrh	r0, [r4, #8]
   18104:	cmp	r0, #0
   18108:	bne	18118 <__flatcc_fb_gen_c_reader@@Base+0x23c>
   1810c:	mov	r0, r5
   18110:	mov	r1, r4
   18114:	bl	1a0d8 <__flatcc_fb_gen_c_reader@@Base+0x21fc>
   18118:	ldr	r4, [r4]
   1811c:	cmp	r4, #0
   18120:	bne	18100 <__flatcc_fb_gen_c_reader@@Base+0x224>
   18124:	ldr	r0, [r5, #208]	; 0xd0
   18128:	ldr	r4, [r0, #40]	; 0x28
   1812c:	cmp	r4, #0
   18130:	beq	182a8 <__flatcc_fb_gen_c_reader@@Base+0x3cc>
   18134:	ldr	r6, [sp, #68]	; 0x44
   18138:	sub	r5, fp, #256	; 0x100
   1813c:	movw	r8, #30812	; 0x785c
   18140:	sub	r7, fp, #480	; 0x1e0
   18144:	ldrh	r0, [r4, #8]
   18148:	cmp	r0, #1
   1814c:	bhi	1829c <__flatcc_fb_gen_c_reader@@Base+0x3c0>
   18150:	mov	r0, r5
   18154:	mov	r1, #0
   18158:	mov	r2, #220	; 0xdc
   1815c:	bl	149d0 <memset@plt>
   18160:	ldr	r0, [r4, #12]
   18164:	mov	r1, r4
   18168:	mov	r2, r5
   1816c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   18170:	ldr	sl, [r4, #88]	; 0x58
   18174:	ldr	r0, [r6, #204]	; 0xcc
   18178:	str	r6, [sp]
   1817c:	mov	r2, r5
   18180:	mov	r3, r5
   18184:	ldr	r1, [pc, #4092]	; 19188 <__flatcc_fb_gen_c_reader@@Base+0x12ac>
   18188:	add	r1, pc, r1
   1818c:	bl	149b8 <fprintf@plt>
   18190:	ldr	r0, [r6, #204]	; 0xcc
   18194:	str	sl, [sp]
   18198:	mov	r2, r5
   1819c:	mov	r3, r6
   181a0:	ldr	r1, [pc, #4068]	; 1918c <__flatcc_fb_gen_c_reader@@Base+0x12b0>
   181a4:	add	r1, pc, r1
   181a8:	bl	149b8 <fprintf@plt>
   181ac:	and	r0, sl, #15
   181b0:	mov	r1, #48	; 0x30
   181b4:	sub	r2, fp, #480	; 0x1e0
   181b8:	mov	r3, r7
   181bc:	cmp	r0, #9
   181c0:	strh	r8, [r2]
   181c4:	movwhi	r1, #87	; 0x57
   181c8:	add	r0, r1, r0
   181cc:	mov	r1, #48	; 0x30
   181d0:	strb	r0, [fp, #-477]	; 0xfffffe23
   181d4:	ubfx	r0, sl, #4, #4
   181d8:	cmp	r0, #9
   181dc:	movwhi	r1, #87	; 0x57
   181e0:	add	r0, r1, r0
   181e4:	mov	r1, #48	; 0x30
   181e8:	strb	r0, [fp, #-478]	; 0xfffffe22
   181ec:	strh	r8, [r2, #4]
   181f0:	ubfx	r0, sl, #8, #4
   181f4:	cmp	r0, #9
   181f8:	movwhi	r1, #87	; 0x57
   181fc:	add	r0, r1, r0
   18200:	mov	r1, #48	; 0x30
   18204:	strb	r0, [fp, #-473]	; 0xfffffe27
   18208:	ubfx	r0, sl, #12, #4
   1820c:	cmp	r0, #9
   18210:	movwhi	r1, #87	; 0x57
   18214:	add	r0, r1, r0
   18218:	mov	r1, #48	; 0x30
   1821c:	strb	r0, [fp, #-474]	; 0xfffffe26
   18220:	strh	r8, [r2, #8]
   18224:	ubfx	r0, sl, #16, #4
   18228:	cmp	r0, #9
   1822c:	movwhi	r1, #87	; 0x57
   18230:	add	r0, r1, r0
   18234:	mov	r1, #48	; 0x30
   18238:	strb	r0, [fp, #-469]	; 0xfffffe2b
   1823c:	ubfx	r0, sl, #20, #4
   18240:	cmp	r0, #9
   18244:	movwhi	r1, #87	; 0x57
   18248:	add	r0, r1, r0
   1824c:	mov	r1, #48	; 0x30
   18250:	strb	r0, [fp, #-470]	; 0xfffffe2a
   18254:	strh	r8, [r2, #12]
   18258:	ubfx	r0, sl, #24, #4
   1825c:	mov	r2, r5
   18260:	cmp	r0, #9
   18264:	movwhi	r1, #87	; 0x57
   18268:	cmn	sl, #1610612737	; 0x60000001
   1826c:	add	r0, r1, r0
   18270:	strb	r0, [fp, #-465]	; 0xfffffe2f
   18274:	mov	r0, #48	; 0x30
   18278:	movwhi	r0, #87	; 0x57
   1827c:	add	r0, r0, sl, lsr #28
   18280:	strb	r0, [fp, #-466]	; 0xfffffe2e
   18284:	mov	r0, #0
   18288:	strb	r0, [fp, #-464]	; 0xfffffe30
   1828c:	ldr	r0, [r6, #204]	; 0xcc
   18290:	ldr	r1, [pc, #3832]	; 19190 <__flatcc_fb_gen_c_reader@@Base+0x12b4>
   18294:	add	r1, pc, r1
   18298:	bl	149b8 <fprintf@plt>
   1829c:	ldr	r4, [r4]
   182a0:	cmp	r4, #0
   182a4:	bne	18144 <__flatcc_fb_gen_c_reader@@Base+0x268>
   182a8:	ldr	r6, [sp, #68]	; 0x44
   182ac:	mov	r0, #10
   182b0:	ldr	r1, [r6, #204]	; 0xcc
   182b4:	bl	14a18 <fputc@plt>
   182b8:	ldr	r0, [r6, #208]	; 0xd0
   182bc:	ldr	r4, [r0, #40]	; 0x28
   182c0:	cmp	r4, #0
   182c4:	beq	182ec <__flatcc_fb_gen_c_reader@@Base+0x410>
   182c8:	ldrh	r0, [r4, #8]
   182cc:	cmp	r0, #3
   182d0:	bne	182e0 <__flatcc_fb_gen_c_reader@@Base+0x404>
   182d4:	mov	r0, r6
   182d8:	mov	r1, r4
   182dc:	bl	1a260 <__flatcc_fb_gen_c_reader@@Base+0x2384>
   182e0:	ldr	r4, [r4]
   182e4:	cmp	r4, #0
   182e8:	bne	182c8 <__flatcc_fb_gen_c_reader@@Base+0x3ec>
   182ec:	ldr	r1, [r6, #204]	; 0xcc
   182f0:	mov	r0, #10
   182f4:	bl	14a18 <fputc@plt>
   182f8:	ldr	r0, [r6, #208]	; 0xd0
   182fc:	ldr	r7, [r0, #44]	; 0x2c
   18300:	cmp	r7, #0
   18304:	beq	18cd4 <__flatcc_fb_gen_c_reader@@Base+0xdf8>
   18308:	sub	sl, fp, #256	; 0x100
   1830c:	sub	r8, fp, #480	; 0x1e0
   18310:	ldr	r0, [r6, #212]	; 0xd4
   18314:	mov	r1, #0
   18318:	mov	r2, #220	; 0xdc
   1831c:	ldr	r0, [r0, #132]	; 0x84
   18320:	str	r0, [sp, #72]	; 0x48
   18324:	mov	r0, sl
   18328:	bl	149d0 <memset@plt>
   1832c:	mov	r0, r8
   18330:	mov	r1, #0
   18334:	mov	r2, #220	; 0xdc
   18338:	bl	149d0 <memset@plt>
   1833c:	ldrh	r0, [r7, #8]
   18340:	cmp	r0, #1
   18344:	bne	19c88 <__flatcc_fb_gen_c_reader@@Base+0x1dac>
   18348:	mov	r1, r7
   1834c:	ldrh	r0, [r1, #104]!	; 0x68
   18350:	cmp	r0, #0
   18354:	str	r1, [sp, #64]	; 0x40
   18358:	bne	18368 <__flatcc_fb_gen_c_reader@@Base+0x48c>
   1835c:	ldrd	r0, [r7, #96]	; 0x60
   18360:	orrs	r0, r0, r1
   18364:	bne	19da4 <__flatcc_fb_gen_c_reader@@Base+0x1ec8>
   18368:	mov	r1, r7
   1836c:	ldr	r0, [r1, #112]!	; 0x70
   18370:	str	r1, [sp, #48]	; 0x30
   18374:	ldr	r1, [r1, #4]
   18378:	orrs	r0, r0, r1
   1837c:	bne	1838c <__flatcc_fb_gen_c_reader@@Base+0x4b0>
   18380:	ldrd	r0, [r7, #96]	; 0x60
   18384:	orrs	r0, r0, r1
   18388:	bne	19dcc <__flatcc_fb_gen_c_reader@@Base+0x1ef0>
   1838c:	ldr	r0, [r7, #12]
   18390:	mov	r1, r7
   18394:	mov	r2, sl
   18398:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1839c:	ldr	r5, [r7, #32]
   183a0:	cmp	r5, #0
   183a4:	beq	18474 <__flatcc_fb_gen_c_reader@@Base+0x598>
   183a8:	ldr	r0, [r5, #4]
   183ac:	ldr	r0, [r0, #8]
   183b0:	cmp	r0, #0
   183b4:	beq	183d0 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
   183b8:	ldr	r0, [r9]
   183bc:	ldr	r1, [pc, #3840]	; 192c4 <__flatcc_fb_gen_c_reader@@Base+0x13e8>
   183c0:	ldr	r2, [pc, #3840]	; 192c8 <__flatcc_fb_gen_c_reader@@Base+0x13ec>
   183c4:	add	r1, pc, r1
   183c8:	add	r2, pc, r2
   183cc:	bl	149b8 <fprintf@plt>
   183d0:	ldr	r1, [r5, #4]
   183d4:	ldr	r0, [r9]
   183d8:	ldr	r3, [r1]
   183dc:	ldr	r2, [r1, #4]
   183e0:	ldr	r1, [pc, #4084]	; 193dc <__flatcc_fb_gen_c_reader@@Base+0x1500>
   183e4:	add	r1, pc, r1
   183e8:	bl	149b8 <fprintf@plt>
   183ec:	ldr	r4, [r5]
   183f0:	cmp	r4, #0
   183f4:	beq	1845c <__flatcc_fb_gen_c_reader@@Base+0x580>
   183f8:	ldr	r0, [r5, #4]
   183fc:	ldr	r0, [r0, #8]
   18400:	ldr	r1, [r4, #4]
   18404:	ldr	r1, [r1, #8]
   18408:	cmp	r0, r1
   1840c:	beq	18428 <__flatcc_fb_gen_c_reader@@Base+0x54c>
   18410:	ldr	r0, [r9]
   18414:	ldr	r1, [pc, #4072]	; 19404 <__flatcc_fb_gen_c_reader@@Base+0x1528>
   18418:	ldr	r2, [pc, #4072]	; 19408 <__flatcc_fb_gen_c_reader@@Base+0x152c>
   1841c:	add	r1, pc, r1
   18420:	add	r2, pc, r2
   18424:	bl	149b8 <fprintf@plt>
   18428:	ldr	r1, [r4, #4]
   1842c:	ldr	r0, [r9]
   18430:	ldr	r3, [r1]
   18434:	ldr	r2, [r1, #4]
   18438:	ldr	r1, [pc, #4044]	; 1940c <__flatcc_fb_gen_c_reader@@Base+0x1530>
   1843c:	add	r1, pc, r1
   18440:	bl	149b8 <fprintf@plt>
   18444:	ldr	r0, [r4, #4]
   18448:	ldr	r1, [r4]
   1844c:	ldr	r0, [r0, #8]
   18450:	cmp	r1, #0
   18454:	mov	r4, r1
   18458:	bne	18400 <__flatcc_fb_gen_c_reader@@Base+0x524>
   1845c:	ldr	r3, [r9]
   18460:	ldr	r0, [pc, #4008]	; 19410 <__flatcc_fb_gen_c_reader@@Base+0x1534>
   18464:	mov	r1, #4
   18468:	mov	r2, #1
   1846c:	add	r0, pc, r0
   18470:	bl	1494c <fwrite@plt>
   18474:	ldr	r0, [sp, #48]	; 0x30
   18478:	ldrd	r0, [r0]
   1847c:	str	r7, [sp, #44]	; 0x2c
   18480:	orrs	r0, r0, r1
   18484:	beq	187d0 <__flatcc_fb_gen_c_reader@@Base+0x8f4>
   18488:	ldr	r0, [sp, #72]	; 0x48
   1848c:	cmp	r0, #0
   18490:	beq	184ac <__flatcc_fb_gen_c_reader@@Base+0x5d0>
   18494:	ldr	r3, [r9]
   18498:	ldr	r0, [pc, #3956]	; 19414 <__flatcc_fb_gen_c_reader@@Base+0x1538>
   1849c:	mov	r1, #16
   184a0:	mov	r2, #1
   184a4:	add	r0, pc, r0
   184a8:	bl	1494c <fwrite@plt>
   184ac:	ldr	r0, [r9]
   184b0:	ldr	r1, [pc, #3936]	; 19418 <__flatcc_fb_gen_c_reader@@Base+0x153c>
   184b4:	mov	r2, sl
   184b8:	add	r1, pc, r1
   184bc:	bl	149b8 <fprintf@plt>
   184c0:	ldr	r8, [r7, #20]!
   184c4:	str	r7, [sp, #40]	; 0x28
   184c8:	cmp	r8, #0
   184cc:	ldr	r6, [pc, #3912]	; 1941c <__flatcc_fb_gen_c_reader@@Base+0x1540>
   184d0:	add	r6, pc, r6
   184d4:	beq	18844 <__flatcc_fb_gen_c_reader@@Base+0x968>
   184d8:	mov	r0, #0
   184dc:	mov	r7, #0
   184e0:	str	r0, [sp, #60]	; 0x3c
   184e4:	mov	r0, #0
   184e8:	str	r0, [sp, #56]	; 0x38
   184ec:	ldr	r5, [r8, #68]	; 0x44
   184f0:	cmp	r5, #0
   184f4:	beq	185bc <__flatcc_fb_gen_c_reader@@Base+0x6e0>
   184f8:	ldr	r0, [r5, #4]
   184fc:	ldr	r0, [r0, #8]
   18500:	cmp	r0, #0
   18504:	beq	18520 <__flatcc_fb_gen_c_reader@@Base+0x644>
   18508:	ldr	r0, [r9]
   1850c:	ldr	r1, [pc, #3852]	; 19420 <__flatcc_fb_gen_c_reader@@Base+0x1544>
   18510:	ldr	r2, [pc, #3852]	; 19424 <__flatcc_fb_gen_c_reader@@Base+0x1548>
   18514:	add	r1, pc, r1
   18518:	add	r2, pc, r2
   1851c:	bl	149b8 <fprintf@plt>
   18520:	ldr	r1, [r5, #4]
   18524:	ldr	r0, [r9]
   18528:	ldr	r3, [r1]
   1852c:	ldr	r2, [r1, #4]
   18530:	mov	r1, r6
   18534:	bl	149b8 <fprintf@plt>
   18538:	ldr	r4, [r5]
   1853c:	cmp	r4, #0
   18540:	beq	185a4 <__flatcc_fb_gen_c_reader@@Base+0x6c8>
   18544:	ldr	r0, [r5, #4]
   18548:	ldr	r0, [r0, #8]
   1854c:	ldr	r1, [r4, #4]
   18550:	ldr	r1, [r1, #8]
   18554:	cmp	r0, r1
   18558:	beq	18574 <__flatcc_fb_gen_c_reader@@Base+0x698>
   1855c:	ldr	r0, [r9]
   18560:	ldr	r1, [pc, #3776]	; 19428 <__flatcc_fb_gen_c_reader@@Base+0x154c>
   18564:	ldr	r2, [pc, #3776]	; 1942c <__flatcc_fb_gen_c_reader@@Base+0x1550>
   18568:	add	r1, pc, r1
   1856c:	add	r2, pc, r2
   18570:	bl	149b8 <fprintf@plt>
   18574:	ldr	r1, [r4, #4]
   18578:	ldr	r0, [r9]
   1857c:	ldr	r3, [r1]
   18580:	ldr	r2, [r1, #4]
   18584:	mov	r1, r6
   18588:	bl	149b8 <fprintf@plt>
   1858c:	ldr	r0, [r4, #4]
   18590:	ldr	r1, [r4]
   18594:	ldr	r0, [r0, #8]
   18598:	cmp	r1, #0
   1859c:	mov	r4, r1
   185a0:	bne	1854c <__flatcc_fb_gen_c_reader@@Base+0x670>
   185a4:	ldr	r3, [r9]
   185a8:	ldr	r0, [pc, #3712]	; 19430 <__flatcc_fb_gen_c_reader@@Base+0x1554>
   185ac:	mov	r1, #4
   185b0:	mov	r2, #1
   185b4:	add	r0, pc, r0
   185b8:	bl	1494c <fwrite@plt>
   185bc:	ldr	r0, [sp, #64]	; 0x40
   185c0:	cmp	r7, #0
   185c4:	addne	r0, r8, #74	; 0x4a
   185c8:	ldrh	r6, [r0]
   185cc:	ldr	r0, [r8, #4]
   185d0:	ldr	r5, [r0]
   185d4:	ldr	r4, [r0, #4]
   185d8:	ldr	r0, [sp, #72]	; 0x48
   185dc:	cmp	r0, #0
   185e0:	ldrne	r0, [r8, #80]	; 0x50
   185e4:	subsne	r3, r0, r7
   185e8:	beq	1861c <__flatcc_fb_gen_c_reader@@Base+0x740>
   185ec:	ldr	r0, [r9]
   185f0:	ldr	r1, [pc, #4092]	; 195f4 <__flatcc_fb_gen_c_reader@@Base+0x1718>
   185f4:	mov	r7, r4
   185f8:	mov	r4, r5
   185fc:	ldr	r5, [sp, #56]	; 0x38
   18600:	add	r1, pc, r1
   18604:	mov	r2, r5
   18608:	bl	149b8 <fprintf@plt>
   1860c:	add	r5, r5, #1
   18610:	str	r5, [sp, #56]	; 0x38
   18614:	mov	r5, r4
   18618:	mov	r4, r7
   1861c:	ldrb	r0, [r8, #72]	; 0x48
   18620:	tst	r0, #4
   18624:	bne	1868c <__flatcc_fb_gen_c_reader@@Base+0x7b0>
   18628:	ldrh	r0, [r8, #24]
   1862c:	cmp	r0, #14
   18630:	beq	186bc <__flatcc_fb_gen_c_reader@@Base+0x7e0>
   18634:	cmp	r0, #8
   18638:	bne	19b4c <__flatcc_fb_gen_c_reader@@Base+0x1c70>
   1863c:	ldr	r0, [r8, #16]
   18640:	ldr	r7, [pc, #4016]	; 195f8 <__flatcc_fb_gen_c_reader@@Base+0x171c>
   18644:	ldr	r1, [sp, #68]	; 0x44
   18648:	cmp	r0, #5
   1864c:	add	r7, pc, r7
   18650:	sub	r0, r0, #1
   18654:	moveq	r7, r1
   18658:	cmp	r0, #11
   1865c:	bcs	19af0 <__flatcc_fb_gen_c_reader@@Base+0x1c14>
   18660:	ldr	r1, [pc, #3988]	; 195fc <__flatcc_fb_gen_c_reader@@Base+0x1720>
   18664:	add	r1, pc, r1
   18668:	ldr	r3, [r1, r0, lsl #2]
   1866c:	ldr	r1, [sp, #72]	; 0x48
   18670:	ldr	r0, [r9]
   18674:	cmp	r1, #0
   18678:	beq	1874c <__flatcc_fb_gen_c_reader@@Base+0x870>
   1867c:	ldr	r1, [pc, #3964]	; 19600 <__flatcc_fb_gen_c_reader@@Base+0x1724>
   18680:	mov	r2, r7
   18684:	add	r1, pc, r1
   18688:	b	18760 <__flatcc_fb_gen_c_reader@@Base+0x884>
   1868c:	mov	r7, r8
   18690:	ldr	r1, [sp, #72]	; 0x48
   18694:	ldr	r0, [r9]
   18698:	ldr	r3, [r7, #88]!	; 0x58
   1869c:	cmp	r1, #0
   186a0:	beq	18724 <__flatcc_fb_gen_c_reader@@Base+0x848>
   186a4:	stm	sp, {r4, r5}
   186a8:	ldr	r1, [pc, #3924]	; 19604 <__flatcc_fb_gen_c_reader@@Base+0x1728>
   186ac:	ldr	r4, [sp, #60]	; 0x3c
   186b0:	add	r1, pc, r1
   186b4:	mov	r2, r4
   186b8:	b	1873c <__flatcc_fb_gen_c_reader@@Base+0x860>
   186bc:	ldr	r1, [r8, #16]
   186c0:	str	r4, [sp, #52]	; 0x34
   186c4:	ldrh	r7, [r1, #8]
   186c8:	orr	r0, r7, #2
   186cc:	cmp	r0, #3
   186d0:	bne	19c0c <__flatcc_fb_gen_c_reader@@Base+0x1d30>
   186d4:	ldr	r0, [r1, #12]
   186d8:	mov	r4, r5
   186dc:	mov	r5, sl
   186e0:	sub	sl, fp, #480	; 0x1e0
   186e4:	mov	r2, sl
   186e8:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   186ec:	ldr	r3, [pc, #3860]	; 19608 <__flatcc_fb_gen_c_reader@@Base+0x172c>
   186f0:	ldr	r0, [pc, #3860]	; 1960c <__flatcc_fb_gen_c_reader@@Base+0x1730>
   186f4:	cmp	r7, #1
   186f8:	ldr	r1, [sp, #72]	; 0x48
   186fc:	add	r3, pc, r3
   18700:	add	r0, pc, r0
   18704:	moveq	r3, r0
   18708:	ldr	r0, [r9]
   1870c:	cmp	r1, #0
   18710:	beq	18768 <__flatcc_fb_gen_c_reader@@Base+0x88c>
   18714:	ldr	r1, [pc, #3828]	; 19610 <__flatcc_fb_gen_c_reader@@Base+0x1734>
   18718:	mov	r2, sl
   1871c:	add	r1, pc, r1
   18720:	b	1877c <__flatcc_fb_gen_c_reader@@Base+0x8a0>
   18724:	stm	sp, {r3, r4, r5}
   18728:	mov	r2, r6
   1872c:	ldr	r1, [pc, #3808]	; 19614 <__flatcc_fb_gen_c_reader@@Base+0x1738>
   18730:	ldr	r4, [sp, #60]	; 0x3c
   18734:	add	r1, pc, r1
   18738:	mov	r3, r4
   1873c:	bl	149b8 <fprintf@plt>
   18740:	add	r4, r4, #1
   18744:	str	r4, [sp, #60]	; 0x3c
   18748:	b	187a8 <__flatcc_fb_gen_c_reader@@Base+0x8cc>
   1874c:	str	r3, [sp]
   18750:	mov	r2, r6
   18754:	mov	r3, r7
   18758:	ldr	r1, [pc, #3768]	; 19618 <__flatcc_fb_gen_c_reader@@Base+0x173c>
   1875c:	add	r1, pc, r1
   18760:	bl	149b8 <fprintf@plt>
   18764:	b	1878c <__flatcc_fb_gen_c_reader@@Base+0x8b0>
   18768:	str	r3, [sp]
   1876c:	mov	r2, r6
   18770:	mov	r3, sl
   18774:	ldr	r1, [pc, #3744]	; 1961c <__flatcc_fb_gen_c_reader@@Base+0x1740>
   18778:	add	r1, pc, r1
   1877c:	bl	149b8 <fprintf@plt>
   18780:	mov	sl, r5
   18784:	mov	r5, r4
   18788:	ldr	r4, [sp, #52]	; 0x34
   1878c:	ldr	r0, [r9]
   18790:	ldr	r1, [pc, #3720]	; 19620 <__flatcc_fb_gen_c_reader@@Base+0x1744>
   18794:	mov	r2, r4
   18798:	mov	r3, r5
   1879c:	add	r1, pc, r1
   187a0:	bl	149b8 <fprintf@plt>
   187a4:	add	r7, r8, #88	; 0x58
   187a8:	ldr	r6, [pc, #3700]	; 19624 <__flatcc_fb_gen_c_reader@@Base+0x1748>
   187ac:	ldr	r1, [r8, #80]	; 0x50
   187b0:	ldr	r2, [r7]
   187b4:	ldr	r0, [r8]
   187b8:	adds	r7, r2, r1
   187bc:	add	r6, pc, r6
   187c0:	mov	r8, r0
   187c4:	cmp	r0, #0
   187c8:	bne	184ec <__flatcc_fb_gen_c_reader@@Base+0x610>
   187cc:	b	18850 <__flatcc_fb_gen_c_reader@@Base+0x974>
   187d0:	ldr	r0, [r9]
   187d4:	ldr	r1, [pc, #3660]	; 19628 <__flatcc_fb_gen_c_reader@@Base+0x174c>
   187d8:	mov	r2, sl
   187dc:	add	r1, pc, r1
   187e0:	bl	149b8 <fprintf@plt>
   187e4:	ldr	r0, [r9]
   187e8:	str	sl, [sp]
   187ec:	mov	r2, sl
   187f0:	mov	r3, sl
   187f4:	ldr	r1, [pc, #3632]	; 1962c <__flatcc_fb_gen_c_reader@@Base+0x1750>
   187f8:	add	r1, pc, r1
   187fc:	bl	149b8 <fprintf@plt>
   18800:	ldr	r0, [r9]
   18804:	str	sl, [sp]
   18808:	mov	r2, sl
   1880c:	mov	r3, sl
   18810:	ldr	r1, [pc, #3608]	; 19630 <__flatcc_fb_gen_c_reader@@Base+0x1754>
   18814:	add	r1, pc, r1
   18818:	bl	149b8 <fprintf@plt>
   1881c:	ldr	r0, [r9]
   18820:	str	sl, [sp]
   18824:	mov	r2, sl
   18828:	mov	r3, sl
   1882c:	ldr	r1, [pc, #3584]	; 19634 <__flatcc_fb_gen_c_reader@@Base+0x1758>
   18830:	add	r1, pc, r1
   18834:	bl	149b8 <fprintf@plt>
   18838:	ldr	r4, [sp, #48]	; 0x30
   1883c:	add	r5, r7, #20
   18840:	b	18948 <__flatcc_fb_gen_c_reader@@Base+0xa6c>
   18844:	mov	r0, #0
   18848:	mov	r7, #0
   1884c:	str	r0, [sp, #56]	; 0x38
   18850:	ldr	r0, [sp, #72]	; 0x48
   18854:	ldr	r6, [sp, #68]	; 0x44
   18858:	sub	r8, fp, #480	; 0x1e0
   1885c:	cmp	r0, #0
   18860:	beq	188b4 <__flatcc_fb_gen_c_reader@@Base+0x9d8>
   18864:	ldr	r0, [sp, #48]	; 0x30
   18868:	ldr	r0, [r0]
   1886c:	subs	r3, r0, r7
   18870:	beq	18888 <__flatcc_fb_gen_c_reader@@Base+0x9ac>
   18874:	ldr	r0, [r9]
   18878:	ldr	r1, [pc, #3512]	; 19638 <__flatcc_fb_gen_c_reader@@Base+0x175c>
   1887c:	ldr	r2, [sp, #56]	; 0x38
   18880:	add	r1, pc, r1
   18884:	bl	149b8 <fprintf@plt>
   18888:	ldr	r3, [r9]
   1888c:	ldr	r0, [pc, #4084]	; 19888 <__flatcc_fb_gen_c_reader@@Base+0x19ac>
   18890:	mov	r1, #3
   18894:	mov	r2, #1
   18898:	add	r0, pc, r0
   1889c:	bl	1494c <fwrite@plt>
   188a0:	ldr	r3, [r9]
   188a4:	ldr	r0, [pc, #4064]	; 1988c <__flatcc_fb_gen_c_reader@@Base+0x19b0>
   188a8:	mov	r1, #15
   188ac:	add	r0, pc, r0
   188b0:	b	188c4 <__flatcc_fb_gen_c_reader@@Base+0x9e8>
   188b4:	ldr	r3, [r9]
   188b8:	ldr	r0, [pc, #4048]	; 19890 <__flatcc_fb_gen_c_reader@@Base+0x19b4>
   188bc:	mov	r1, #3
   188c0:	add	r0, pc, r0
   188c4:	mov	r2, #1
   188c8:	bl	1494c <fwrite@plt>
   188cc:	ldr	r4, [sp, #48]	; 0x30
   188d0:	ldr	r5, [sp, #40]	; 0x28
   188d4:	ldr	r0, [r6, #204]	; 0xcc
   188d8:	ldrd	r2, [r4]
   188dc:	stm	sp, {r2, r3}
   188e0:	mov	r2, sl
   188e4:	ldr	r1, [pc, #4072]	; 198d4 <__flatcc_fb_gen_c_reader@@Base+0x19f8>
   188e8:	add	r1, pc, r1
   188ec:	bl	149b8 <fprintf@plt>
   188f0:	ldr	r0, [r6, #204]	; 0xcc
   188f4:	str	sl, [sp]
   188f8:	mov	r2, sl
   188fc:	mov	r3, sl
   18900:	ldr	r1, [pc, #4048]	; 198d8 <__flatcc_fb_gen_c_reader@@Base+0x19fc>
   18904:	add	r1, pc, r1
   18908:	bl	149b8 <fprintf@plt>
   1890c:	ldr	r0, [r6, #204]	; 0xcc
   18910:	str	sl, [sp]
   18914:	mov	r2, sl
   18918:	mov	r3, sl
   1891c:	ldr	r1, [pc, #4024]	; 198dc <__flatcc_fb_gen_c_reader@@Base+0x1a00>
   18920:	add	r1, pc, r1
   18924:	bl	149b8 <fprintf@plt>
   18928:	ldr	r0, [r6, #204]	; 0xcc
   1892c:	str	sl, [sp]
   18930:	str	r6, [sp, #4]
   18934:	mov	r2, sl
   18938:	mov	r3, sl
   1893c:	ldr	r1, [pc, #3996]	; 198e0 <__flatcc_fb_gen_c_reader@@Base+0x1a04>
   18940:	add	r1, pc, r1
   18944:	bl	149b8 <fprintf@plt>
   18948:	ldrd	r2, [r4]
   1894c:	ldr	r0, [r6, #204]	; 0xcc
   18950:	stm	sp, {r2, r3}
   18954:	mov	r2, sl
   18958:	ldr	r1, [pc, #3972]	; 198e4 <__flatcc_fb_gen_c_reader@@Base+0x1a08>
   1895c:	add	r1, pc, r1
   18960:	bl	149b8 <fprintf@plt>
   18964:	ldr	r0, [r6, #204]	; 0xcc
   18968:	str	r6, [sp]
   1896c:	mov	r2, sl
   18970:	mov	r3, sl
   18974:	ldr	r1, [pc, #4080]	; 1996c <__flatcc_fb_gen_c_reader@@Base+0x1a90>
   18978:	add	r1, pc, r1
   1897c:	bl	149b8 <fprintf@plt>
   18980:	ldr	r0, [r6, #204]	; 0xcc
   18984:	ldr	r1, [pc, #4068]	; 19970 <__flatcc_fb_gen_c_reader@@Base+0x1a94>
   18988:	mov	r2, r6
   1898c:	mov	r3, sl
   18990:	add	r1, pc, r1
   18994:	bl	149b8 <fprintf@plt>
   18998:	ldr	r1, [r6, #204]	; 0xcc
   1899c:	mov	r0, #10
   189a0:	bl	14a18 <fputc@plt>
   189a4:	ldr	r4, [r5]
   189a8:	cmp	r4, #0
   189ac:	beq	18cac <__flatcc_fb_gen_c_reader@@Base+0xdd0>
   189b0:	mov	r0, #0
   189b4:	mov	r5, #0
   189b8:	str	r0, [sp, #72]	; 0x48
   189bc:	ldrb	r0, [r4, #72]	; 0x48
   189c0:	tst	r0, #4
   189c4:	bne	18ca0 <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   189c8:	ldr	r1, [r4, #4]
   189cc:	ldrh	r0, [r4, #24]
   189d0:	ldr	sl, [r1]
   189d4:	ldr	r7, [r1, #4]
   189d8:	cmp	r0, #14
   189dc:	beq	18a60 <__flatcc_fb_gen_c_reader@@Base+0xb84>
   189e0:	cmp	r0, #8
   189e4:	bne	18c68 <__flatcc_fb_gen_c_reader@@Base+0xd8c>
   189e8:	mov	r6, r5
   189ec:	ldr	r5, [r4, #16]
   189f0:	sub	r1, r5, #1
   189f4:	cmp	r1, #11
   189f8:	bcs	19af0 <__flatcc_fb_gen_c_reader@@Base+0x1c14>
   189fc:	ldr	r0, [pc, #4088]	; 199fc <__flatcc_fb_gen_c_reader@@Base+0x1b20>
   18a00:	ldr	r2, [sp, #68]	; 0x44
   18a04:	cmp	r5, #5
   18a08:	add	r0, pc, r0
   18a0c:	ldr	r3, [r0, r1, lsl #2]
   18a10:	ldr	r0, [r2, #204]	; 0xcc
   18a14:	str	r3, [sp, #20]
   18a18:	ldr	r3, [pc, #4064]	; 19a00 <__flatcc_fb_gen_c_reader@@Base+0x1b24>
   18a1c:	add	r3, pc, r3
   18a20:	moveq	r3, r2
   18a24:	str	r3, [sp, #16]
   18a28:	ldr	r3, [pc, #4052]	; 19a04 <__flatcc_fb_gen_c_reader@@Base+0x1b28>
   18a2c:	str	r2, [sp, #8]
   18a30:	add	r3, pc, r3
   18a34:	ldr	r1, [r3, r1, lsl #2]
   18a38:	sub	r3, fp, #256	; 0x100
   18a3c:	str	r1, [sp, #12]
   18a40:	stm	sp, {r7, sl}
   18a44:	ldr	r1, [pc, #4028]	; 19a08 <__flatcc_fb_gen_c_reader@@Base+0x1b2c>
   18a48:	add	r1, pc, r1
   18a4c:	bl	149b8 <fprintf@plt>
   18a50:	mov	r5, r6
   18a54:	cmp	r5, #0
   18a58:	beq	18c70 <__flatcc_fb_gen_c_reader@@Base+0xd94>
   18a5c:	b	18ca0 <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   18a60:	ldr	r1, [r4, #16]
   18a64:	mov	r2, r8
   18a68:	ldr	r0, [r1, #12]
   18a6c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   18a70:	ldr	r0, [r4, #16]
   18a74:	ldrh	r1, [r0, #8]
   18a78:	cmp	r1, #1
   18a7c:	beq	18c48 <__flatcc_fb_gen_c_reader@@Base+0xd6c>
   18a80:	cmp	r1, #3
   18a84:	bne	18c68 <__flatcc_fb_gen_c_reader@@Base+0xd8c>
   18a88:	ldr	r0, [r0, #40]	; 0x28
   18a8c:	sub	r0, r0, #1
   18a90:	cmp	r0, #11
   18a94:	bcs	19c34 <__flatcc_fb_gen_c_reader@@Base+0x1d58>
   18a98:	ldr	r8, [sp, #68]	; 0x44
   18a9c:	sub	r1, fp, #480	; 0x1e0
   18aa0:	mov	r6, r5
   18aa4:	sub	r3, fp, #256	; 0x100
   18aa8:	mov	r5, r1
   18aac:	ldr	r0, [r8, #204]	; 0xcc
   18ab0:	stm	sp, {r7, sl}
   18ab4:	str	r1, [sp, #8]
   18ab8:	str	r1, [sp, #12]
   18abc:	mov	r2, r8
   18ac0:	ldr	r1, [pc, #3908]	; 19a0c <__flatcc_fb_gen_c_reader@@Base+0x1b30>
   18ac4:	add	r1, pc, r1
   18ac8:	bl	149b8 <fprintf@plt>
   18acc:	ldr	r0, [r8, #212]	; 0xd4
   18ad0:	mov	r8, r5
   18ad4:	ldr	r0, [r0, #32]
   18ad8:	cmp	r0, #0
   18adc:	bne	18b0c <__flatcc_fb_gen_c_reader@@Base+0xc30>
   18ae0:	ldrb	r0, [r4, #72]	; 0x48
   18ae4:	tst	r0, #128	; 0x80
   18ae8:	beq	18b0c <__flatcc_fb_gen_c_reader@@Base+0xc30>
   18aec:	ldr	r2, [sp, #68]	; 0x44
   18af0:	sub	r3, fp, #256	; 0x100
   18af4:	ldr	r0, [r2, #204]	; 0xcc
   18af8:	stm	sp, {r7, sl}
   18afc:	str	r8, [sp, #8]
   18b00:	ldr	r1, [pc, #4064]	; 19ae8 <__flatcc_fb_gen_c_reader@@Base+0x1c0c>
   18b04:	add	r1, pc, r1
   18b08:	bl	149b8 <fprintf@plt>
   18b0c:	ldrb	r0, [r4, #72]	; 0x48
   18b10:	mov	r5, r6
   18b14:	tst	r0, #128	; 0x80
   18b18:	beq	18c68 <__flatcc_fb_gen_c_reader@@Base+0xd8c>
   18b1c:	ldr	r0, [sp, #72]	; 0x48
   18b20:	cmp	r0, #0
   18b24:	beq	18b40 <__flatcc_fb_gen_c_reader@@Base+0xc64>
   18b28:	ldr	r3, [r9]
   18b2c:	ldr	r0, [pc, #4024]	; 19aec <__flatcc_fb_gen_c_reader@@Base+0x1c10>
   18b30:	mov	r1, #66	; 0x42
   18b34:	mov	r2, #1
   18b38:	add	r0, pc, r0
   18b3c:	bl	1494c <fwrite@plt>
   18b40:	ldr	r5, [sp, #68]	; 0x44
   18b44:	mov	r1, #61	; 0x3d
   18b48:	mov	r2, #1
   18b4c:	ldr	r3, [r5, #204]	; 0xcc
   18b50:	ldr	r0, [pc, #4072]	; 19b40 <__flatcc_fb_gen_c_reader@@Base+0x1c64>
   18b54:	add	r0, pc, r0
   18b58:	bl	1494c <fwrite@plt>
   18b5c:	ldr	r0, [r5, #204]	; 0xcc
   18b60:	stm	sp, {r7, sl}
   18b64:	str	r8, [sp, #8]
   18b68:	sub	r6, fp, #256	; 0x100
   18b6c:	mov	r2, r5
   18b70:	ldr	r1, [pc, #4044]	; 19b44 <__flatcc_fb_gen_c_reader@@Base+0x1c68>
   18b74:	mov	r3, r6
   18b78:	add	r1, pc, r1
   18b7c:	bl	149b8 <fprintf@plt>
   18b80:	ldr	r0, [r5, #212]	; 0xd4
   18b84:	ldr	r0, [r0, #136]	; 0x88
   18b88:	cmp	r0, #0
   18b8c:	beq	18bb4 <__flatcc_fb_gen_c_reader@@Base+0xcd8>
   18b90:	ldr	r0, [r5, #204]	; 0xcc
   18b94:	stm	sp, {r7, sl}
   18b98:	str	r8, [sp, #8]
   18b9c:	str	r6, [sp, #12]
   18ba0:	mov	r2, r5
   18ba4:	mov	r3, r6
   18ba8:	ldr	r1, [pc, #3992]	; 19b48 <__flatcc_fb_gen_c_reader@@Base+0x1c6c>
   18bac:	add	r1, pc, r1
   18bb0:	bl	149b8 <fprintf@plt>
   18bb4:	ldr	r0, [sp, #72]	; 0x48
   18bb8:	mov	r5, #1
   18bbc:	cmp	r0, #0
   18bc0:	bne	18ca0 <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   18bc4:	ldr	r5, [sp, #68]	; 0x44
   18bc8:	sub	r6, fp, #256	; 0x100
   18bcc:	mov	r3, r6
   18bd0:	ldr	r0, [r5, #204]	; 0xcc
   18bd4:	stm	sp, {r7, sl}
   18bd8:	str	r8, [sp, #8]
   18bdc:	mov	r2, r5
   18be0:	ldr	r1, [pc, #4044]	; 19bb4 <__flatcc_fb_gen_c_reader@@Base+0x1cd8>
   18be4:	add	r1, pc, r1
   18be8:	bl	149b8 <fprintf@plt>
   18bec:	ldr	r0, [r5, #204]	; 0xcc
   18bf0:	stm	sp, {r7, sl}
   18bf4:	str	r8, [sp, #8]
   18bf8:	mov	r2, r5
   18bfc:	mov	r3, r6
   18c00:	ldr	r1, [pc, #4016]	; 19bb8 <__flatcc_fb_gen_c_reader@@Base+0x1cdc>
   18c04:	add	r1, pc, r1
   18c08:	bl	149b8 <fprintf@plt>
   18c0c:	ldr	r0, [r5, #212]	; 0xd4
   18c10:	mov	r5, #1
   18c14:	ldr	r0, [r0, #136]	; 0x88
   18c18:	cmp	r0, #0
   18c1c:	beq	18c3c <__flatcc_fb_gen_c_reader@@Base+0xd60>
   18c20:	ldr	r0, [r9]
   18c24:	stm	sp, {r7, sl}
   18c28:	mov	r2, r6
   18c2c:	mov	r3, r6
   18c30:	ldr	r1, [pc, #4084]	; 19c2c <__flatcc_fb_gen_c_reader@@Base+0x1d50>
   18c34:	add	r1, pc, r1
   18c38:	bl	149b8 <fprintf@plt>
   18c3c:	mov	r0, #1
   18c40:	str	r0, [sp, #72]	; 0x48
   18c44:	b	18ca0 <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   18c48:	ldr	r2, [sp, #68]	; 0x44
   18c4c:	sub	r3, fp, #256	; 0x100
   18c50:	ldr	r0, [r2, #204]	; 0xcc
   18c54:	stm	sp, {r7, sl}
   18c58:	str	r8, [sp, #8]
   18c5c:	ldr	r1, [pc, #4044]	; 19c30 <__flatcc_fb_gen_c_reader@@Base+0x1d54>
   18c60:	add	r1, pc, r1
   18c64:	bl	149b8 <fprintf@plt>
   18c68:	cmp	r5, #0
   18c6c:	bne	18ca0 <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   18c70:	ldrh	r0, [r4, #72]	; 0x48
   18c74:	ands	r0, r0, #128	; 0x80
   18c78:	beq	18ca0 <__flatcc_fb_gen_c_reader@@Base+0xdc4>
   18c7c:	mov	r0, #1
   18c80:	ldr	r3, [r9]
   18c84:	mov	r1, #84	; 0x54
   18c88:	mov	r2, #1
   18c8c:	str	r0, [sp, #72]	; 0x48
   18c90:	ldr	r0, [pc, #4076]	; 19c84 <__flatcc_fb_gen_c_reader@@Base+0x1da8>
   18c94:	add	r0, pc, r0
   18c98:	bl	1494c <fwrite@plt>
   18c9c:	mov	r5, #0
   18ca0:	ldr	r4, [r4]
   18ca4:	cmp	r4, #0
   18ca8:	bne	189bc <__flatcc_fb_gen_c_reader@@Base+0xae0>
   18cac:	ldr	r1, [r9]
   18cb0:	mov	r0, #10
   18cb4:	bl	14a18 <fputc@plt>
   18cb8:	ldr	r7, [sp, #44]	; 0x2c
   18cbc:	ldr	r6, [sp, #68]	; 0x44
   18cc0:	sub	sl, fp, #256	; 0x100
   18cc4:	ldr	r7, [r7, #120]	; 0x78
   18cc8:	cmp	r7, #0
   18ccc:	bne	18310 <__flatcc_fb_gen_c_reader@@Base+0x434>
   18cd0:	ldr	r0, [r6, #208]	; 0xd0
   18cd4:	ldr	r7, [r0, #40]	; 0x28
   18cd8:	cmp	r7, #0
   18cdc:	beq	19a8c <__flatcc_fb_gen_c_reader@@Base+0x1bb0>
   18ce0:	add	sl, sp, #400	; 0x190
   18ce4:	add	r4, sp, #176	; 0xb0
   18ce8:	ldrh	r0, [r7, #8]
   18cec:	sub	r1, r0, #1
   18cf0:	cmp	r1, #3
   18cf4:	bcc	19a80 <__flatcc_fb_gen_c_reader@@Base+0x1ba4>
   18cf8:	cmp	r0, #0
   18cfc:	beq	18d18 <__flatcc_fb_gen_c_reader@@Base+0xe3c>
   18d00:	cmp	r0, #4
   18d04:	bne	19ca8 <__flatcc_fb_gen_c_reader@@Base+0x1dcc>
   18d08:	ldr	r0, [sp, #68]	; 0x44
   18d0c:	mov	r1, r7
   18d10:	bl	1a260 <__flatcc_fb_gen_c_reader@@Base+0x2384>
   18d14:	b	19a80 <__flatcc_fb_gen_c_reader@@Base+0x1ba4>
   18d18:	mov	r0, sl
   18d1c:	mov	r1, #0
   18d20:	mov	r2, #220	; 0xdc
   18d24:	bl	149d0 <memset@plt>
   18d28:	mov	r0, r4
   18d2c:	mov	r1, #0
   18d30:	mov	r2, #220	; 0xdc
   18d34:	bl	149d0 <memset@plt>
   18d38:	ldr	r1, [r9]
   18d3c:	mov	r0, #10
   18d40:	bl	14a18 <fputc@plt>
   18d44:	ldr	r0, [r7, #12]
   18d48:	mov	r1, r7
   18d4c:	mov	r2, sl
   18d50:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   18d54:	ldr	r5, [r7, #32]
   18d58:	cmp	r5, #0
   18d5c:	beq	18e2c <__flatcc_fb_gen_c_reader@@Base+0xf50>
   18d60:	ldr	r0, [r5, #4]
   18d64:	ldr	r0, [r0, #8]
   18d68:	cmp	r0, #0
   18d6c:	beq	18d88 <__flatcc_fb_gen_c_reader@@Base+0xeac>
   18d70:	ldr	r0, [r9]
   18d74:	ldr	r1, [pc, #4044]	; 19d48 <__flatcc_fb_gen_c_reader@@Base+0x1e6c>
   18d78:	ldr	r2, [pc, #4044]	; 19d4c <__flatcc_fb_gen_c_reader@@Base+0x1e70>
   18d7c:	add	r1, pc, r1
   18d80:	add	r2, pc, r2
   18d84:	bl	149b8 <fprintf@plt>
   18d88:	ldr	r1, [r5, #4]
   18d8c:	ldr	r0, [r9]
   18d90:	ldr	r3, [r1]
   18d94:	ldr	r2, [r1, #4]
   18d98:	ldr	r1, [pc, #4016]	; 19d50 <__flatcc_fb_gen_c_reader@@Base+0x1e74>
   18d9c:	add	r1, pc, r1
   18da0:	bl	149b8 <fprintf@plt>
   18da4:	ldr	r4, [r5]
   18da8:	cmp	r4, #0
   18dac:	beq	18e14 <__flatcc_fb_gen_c_reader@@Base+0xf38>
   18db0:	ldr	r0, [r5, #4]
   18db4:	ldr	r0, [r0, #8]
   18db8:	ldr	r1, [r4, #4]
   18dbc:	ldr	r1, [r1, #8]
   18dc0:	cmp	r0, r1
   18dc4:	beq	18de0 <__flatcc_fb_gen_c_reader@@Base+0xf04>
   18dc8:	ldr	r0, [r9]
   18dcc:	ldr	r1, [pc, #4080]	; 19dc4 <__flatcc_fb_gen_c_reader@@Base+0x1ee8>
   18dd0:	ldr	r2, [pc, #4080]	; 19dc8 <__flatcc_fb_gen_c_reader@@Base+0x1eec>
   18dd4:	add	r1, pc, r1
   18dd8:	add	r2, pc, r2
   18ddc:	bl	149b8 <fprintf@plt>
   18de0:	ldr	r1, [r4, #4]
   18de4:	ldr	r0, [r9]
   18de8:	ldr	r3, [r1]
   18dec:	ldr	r2, [r1, #4]
   18df0:	ldr	r1, [pc, #4084]	; 19dec <__flatcc_fb_gen_c_reader@@Base+0x1f10>
   18df4:	add	r1, pc, r1
   18df8:	bl	149b8 <fprintf@plt>
   18dfc:	ldr	r0, [r4, #4]
   18e00:	ldr	r1, [r4]
   18e04:	ldr	r0, [r0, #8]
   18e08:	cmp	r1, #0
   18e0c:	mov	r4, r1
   18e10:	bne	18db8 <__flatcc_fb_gen_c_reader@@Base+0xedc>
   18e14:	ldr	r3, [r9]
   18e18:	ldr	r0, [pc, #4048]	; 19df0 <__flatcc_fb_gen_c_reader@@Base+0x1f14>
   18e1c:	mov	r1, #4
   18e20:	mov	r2, #1
   18e24:	add	r0, pc, r0
   18e28:	bl	1494c <fwrite@plt>
   18e2c:	ldr	r4, [sp, #68]	; 0x44
   18e30:	mov	r2, sl
   18e34:	ldr	r0, [r4, #204]	; 0xcc
   18e38:	ldr	r1, [pc, #4020]	; 19df4 <__flatcc_fb_gen_c_reader@@Base+0x1f18>
   18e3c:	add	r1, pc, r1
   18e40:	bl	149b8 <fprintf@plt>
   18e44:	ldr	r0, [r4, #204]	; 0xcc
   18e48:	str	r4, [sp]
   18e4c:	mov	r2, sl
   18e50:	mov	r3, sl
   18e54:	ldr	r1, [pc, #4076]	; 19e48 <__flatcc_fb_gen_c_reader@@Base+0x1f6c>
   18e58:	add	r1, pc, r1
   18e5c:	bl	149b8 <fprintf@plt>
   18e60:	ldr	r0, [r4, #204]	; 0xcc
   18e64:	str	sl, [sp]
   18e68:	stmib	sp, {r4, sl}
   18e6c:	mov	r2, sl
   18e70:	mov	r3, sl
   18e74:	ldr	r1, [pc, #4048]	; 19e4c <__flatcc_fb_gen_c_reader@@Base+0x1f70>
   18e78:	add	r1, pc, r1
   18e7c:	bl	149b8 <fprintf@plt>
   18e80:	ldr	r0, [r4, #204]	; 0xcc
   18e84:	ldr	r1, [pc, #4036]	; 19e50 <__flatcc_fb_gen_c_reader@@Base+0x1f74>
   18e88:	mov	r2, r4
   18e8c:	mov	r3, sl
   18e90:	add	r1, pc, r1
   18e94:	bl	149b8 <fprintf@plt>
   18e98:	ldr	r1, [r4, #204]	; 0xcc
   18e9c:	mov	r0, #10
   18ea0:	bl	14a18 <fputc@plt>
   18ea4:	ldr	r8, [r7, #20]
   18ea8:	ldr	r5, [pc, #4084]	; 19ea4 <__flatcc_fb_gen_c_reader@@Base+0x1fc8>
   18eac:	cmp	r8, #0
   18eb0:	add	r5, pc, r5
   18eb4:	beq	19a7c <__flatcc_fb_gen_c_reader@@Base+0x1ba0>
   18eb8:	mov	r0, #0
   18ebc:	str	r7, [sp, #56]	; 0x38
   18ec0:	str	r0, [sp, #60]	; 0x3c
   18ec4:	b	19194 <__flatcc_fb_gen_c_reader@@Base+0x12b8>
   18ec8:			; <UNDEFINED> instruction: 0x0002e6b7
   18ecc:	ldr	r2, [sp, #68]	; 0x44
   18ed0:	ldr	r0, [r2, #204]	; 0xcc
   18ed4:	ldr	r3, [r4, #4]
   18ed8:	ldr	r4, [r4]
   18edc:	str	r4, [sp]
   18ee0:	stmib	sp, {r3, sl}
   18ee4:	str	r6, [sp, #24]
   18ee8:	mov	r3, r2
   18eec:	ldr	r1, [sp, #72]	; 0x48
   18ef0:	str	r1, [sp, #12]
   18ef4:	ldr	r1, [sp, #64]	; 0x40
   18ef8:	str	r1, [sp, #16]
   18efc:	add	r1, sp, #176	; 0xb0
   18f00:	str	r1, [sp, #20]
   18f04:	ldr	r1, [pc, #4028]	; 19ec8 <__flatcc_fb_gen_c_reader@@Base+0x1fec>
   18f08:	add	r1, pc, r1
   18f0c:	bl	149b8 <fprintf@plt>
   18f10:	b	198c8 <__flatcc_fb_gen_c_reader@@Base+0x19ec>
   18f14:	muleq	r2, r9, r6
   18f18:	andeq	lr, r2, r0, lsr #13
   18f1c:	andeq	lr, r2, r4, asr #16
   18f20:	ldr	r2, [sp, #68]	; 0x44
   18f24:	ldr	r0, [r2, #204]	; 0xcc
   18f28:	ldr	r3, [r4, #4]
   18f2c:	ldr	r4, [r4]
   18f30:	str	r4, [sp]
   18f34:	stmib	sp, {r3, sl}
   18f38:	str	r6, [sp, #24]
   18f3c:	ldr	r1, [sp, #72]	; 0x48
   18f40:	str	r1, [sp, #12]
   18f44:	ldr	r1, [sp, #64]	; 0x40
   18f48:	str	r1, [sp, #16]
   18f4c:	add	r1, sp, #176	; 0xb0
   18f50:	str	r1, [sp, #20]
   18f54:	ldr	r1, [pc, #3952]	; 19ecc <__flatcc_fb_gen_c_reader@@Base+0x1ff0>
   18f58:	add	r1, pc, r1
   18f5c:	b	198c4 <__flatcc_fb_gen_c_reader@@Base+0x19e8>
   18f60:	andeq	pc, r3, sp, asr #7
   18f64:	andeq	lr, r2, ip, ror #16
   18f68:	andeq	lr, r2, r2, ror #16
   18f6c:	andeq	lr, r2, r0, lsl #16
   18f70:	andeq	pc, r3, r9, lsl #7
   18f74:	andeq	lr, r2, r8, lsr #16
   18f78:	andeq	lr, r2, sl, lsl r8
   18f7c:	andeq	lr, r2, lr, lsr #16
   18f80:	muleq	r2, ip, r7
   18f84:	andeq	lr, r2, r1, lsl r8
   18f88:	andeq	lr, r2, r6, lsr r8
   18f8c:	andeq	lr, r2, r6, lsr r8
   18f90:	andeq	lr, r2, lr, asr #16
   18f94:	ldr	r0, [r0, #40]	; 0x28
   18f98:	add	r5, sp, #76	; 0x4c
   18f9c:	add	r1, r8, #48	; 0x30
   18fa0:	mov	r2, r5
   18fa4:	bl	1a8d8 <__flatcc_fb_gen_c_reader@@Base+0x29fc>
   18fa8:	ldr	r6, [sp, #68]	; 0x44
   18fac:	ldrd	r2, [r4]
   18fb0:	add	r4, sp, #176	; 0xb0
   18fb4:	ldr	r0, [r6, #204]	; 0xcc
   18fb8:	stm	sp, {r2, r3, sl}
   18fbc:	str	r4, [sp, #20]
   18fc0:	str	r4, [sp, #24]
   18fc4:	str	r5, [sp, #28]
   18fc8:	mov	r2, r6
   18fcc:	ldr	r1, [sp, #72]	; 0x48
   18fd0:	str	r1, [sp, #12]
   18fd4:	ldr	r1, [sp, #64]	; 0x40
   18fd8:	str	r1, [sp, #16]
   18fdc:	ldr	r1, [pc, #4012]	; 19f90 <__flatcc_fb_gen_c_reader@@Base+0x20b4>
   18fe0:	add	r1, pc, r1
   18fe4:	bl	149b8 <fprintf@plt>
   18fe8:	ldr	r0, [r6, #212]	; 0xd4
   18fec:	ldr	r0, [r0, #32]
   18ff0:	ldr	r5, [pc, #3996]	; 19f94 <__flatcc_fb_gen_c_reader@@Base+0x20b8>
   18ff4:	cmp	r0, #0
   18ff8:	add	r5, pc, r5
   18ffc:	bne	19034 <__flatcc_fb_gen_c_reader@@Base+0x1158>
   19000:	ldrb	r0, [r8, #72]	; 0x48
   19004:	tst	r0, #128	; 0x80
   19008:	beq	19034 <__flatcc_fb_gen_c_reader@@Base+0x1158>
   1900c:	ldr	r2, [sp, #68]	; 0x44
   19010:	ldr	r1, [sp, #72]	; 0x48
   19014:	mov	r3, sl
   19018:	ldr	r0, [r2, #204]	; 0xcc
   1901c:	str	r1, [sp]
   19020:	ldr	r1, [sp, #64]	; 0x40
   19024:	stmib	sp, {r1, r4}
   19028:	ldr	r1, [pc, #3944]	; 19f98 <__flatcc_fb_gen_c_reader@@Base+0x20bc>
   1902c:	add	r1, pc, r1
   19030:	bl	149b8 <fprintf@plt>
   19034:	ldrb	r0, [r8, #72]	; 0x48
   19038:	tst	r0, #128	; 0x80
   1903c:	beq	19a40 <__flatcc_fb_gen_c_reader@@Base+0x1b64>
   19040:	ldr	r0, [sp, #60]	; 0x3c
   19044:	cmp	r0, #0
   19048:	beq	19064 <__flatcc_fb_gen_c_reader@@Base+0x1188>
   1904c:	ldr	r3, [r9]
   19050:	ldr	r0, [pc, #3908]	; 19f9c <__flatcc_fb_gen_c_reader@@Base+0x20c0>
   19054:	mov	r1, #66	; 0x42
   19058:	mov	r2, #1
   1905c:	add	r0, pc, r0
   19060:	bl	1494c <fwrite@plt>
   19064:	ldr	r4, [sp, #68]	; 0x44
   19068:	mov	r1, #61	; 0x3d
   1906c:	mov	r2, #1
   19070:	ldr	r3, [r4, #204]	; 0xcc
   19074:	ldr	r0, [pc, #3876]	; 19fa0 <__flatcc_fb_gen_c_reader@@Base+0x20c4>
   19078:	add	r0, pc, r0
   1907c:	bl	1494c <fwrite@plt>
   19080:	ldr	r5, [sp, #72]	; 0x48
   19084:	ldr	r7, [sp, #64]	; 0x40
   19088:	add	sl, sp, #176	; 0xb0
   1908c:	ldr	r0, [r4, #204]	; 0xcc
   19090:	add	r6, sp, #400	; 0x190
   19094:	mov	r2, r4
   19098:	str	sl, [sp, #8]
   1909c:	mov	r3, r6
   190a0:	str	r5, [sp]
   190a4:	str	r7, [sp, #4]
   190a8:	ldr	r1, [pc, #3828]	; 19fa4 <__flatcc_fb_gen_c_reader@@Base+0x20c8>
   190ac:	add	r1, pc, r1
   190b0:	bl	149b8 <fprintf@plt>
   190b4:	ldr	r0, [r4, #212]	; 0xd4
   190b8:	ldr	r0, [r0, #136]	; 0x88
   190bc:	cmp	r0, #0
   190c0:	beq	190e4 <__flatcc_fb_gen_c_reader@@Base+0x1208>
   190c4:	ldr	r0, [r4, #204]	; 0xcc
   190c8:	stm	sp, {r5, r7, sl}
   190cc:	str	r4, [sp, #12]
   190d0:	mov	r2, r4
   190d4:	mov	r3, r6
   190d8:	ldr	r1, [pc, #3784]	; 19fa8 <__flatcc_fb_gen_c_reader@@Base+0x20cc>
   190dc:	add	r1, pc, r1
   190e0:	bl	149b8 <fprintf@plt>
   190e4:	ldr	r0, [sp, #60]	; 0x3c
   190e8:	ldr	r7, [sp, #56]	; 0x38
   190ec:	ldr	r5, [pc, #3768]	; 19fac <__flatcc_fb_gen_c_reader@@Base+0x20d0>
   190f0:	cmp	r0, #0
   190f4:	add	r5, pc, r5
   190f8:	bne	19a6c <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   190fc:	ldr	r4, [sp, #68]	; 0x44
   19100:	ldr	r5, [sp, #72]	; 0x48
   19104:	ldr	r7, [sp, #64]	; 0x40
   19108:	add	r1, sp, #176	; 0xb0
   1910c:	add	r6, sp, #400	; 0x190
   19110:	mov	sl, r1
   19114:	mov	r3, r6
   19118:	ldr	r0, [r4, #204]	; 0xcc
   1911c:	str	r5, [sp]
   19120:	str	r7, [sp, #4]
   19124:	str	r1, [sp, #8]
   19128:	mov	r2, r4
   1912c:	ldr	r1, [pc, #3708]	; 19fb0 <__flatcc_fb_gen_c_reader@@Base+0x20d4>
   19130:	add	r1, pc, r1
   19134:	bl	149b8 <fprintf@plt>
   19138:	ldr	r0, [r4, #204]	; 0xcc
   1913c:	stm	sp, {r5, r7, sl}
   19140:	mov	r2, r4
   19144:	mov	r3, r6
   19148:	ldr	r1, [pc, #3684]	; 19fb4 <__flatcc_fb_gen_c_reader@@Base+0x20d8>
   1914c:	add	r1, pc, r1
   19150:	bl	149b8 <fprintf@plt>
   19154:	ldr	r0, [r4, #212]	; 0xd4
   19158:	mov	r1, #1
   1915c:	str	r1, [sp, #60]	; 0x3c
   19160:	ldr	r0, [r0, #136]	; 0x88
   19164:	cmp	r0, #0
   19168:	beq	19878 <__flatcc_fb_gen_c_reader@@Base+0x199c>
   1916c:	ldr	r0, [r9]
   19170:	stm	sp, {r5, r7}
   19174:	mov	r2, r6
   19178:	mov	r3, r6
   1917c:	ldr	r1, [pc, #3640]	; 19fbc <__flatcc_fb_gen_c_reader@@Base+0x20e0>
   19180:	add	r1, pc, r1
   19184:	b	19874 <__flatcc_fb_gen_c_reader@@Base+0x1998>
   19188:	andeq	lr, r2, r0, asr r9
   1918c:	andeq	lr, r2, r5, ror r9
   19190:	andeq	lr, r2, lr, lsr #17
   19194:	ldr	r6, [r8, #68]	; 0x44
   19198:	cmp	r6, #0
   1919c:	beq	19264 <__flatcc_fb_gen_c_reader@@Base+0x1388>
   191a0:	ldr	r0, [r6, #4]
   191a4:	ldr	r0, [r0, #8]
   191a8:	cmp	r0, #0
   191ac:	beq	191c8 <__flatcc_fb_gen_c_reader@@Base+0x12ec>
   191b0:	ldr	r0, [r9]
   191b4:	ldr	r1, [pc, #3380]	; 19ef0 <__flatcc_fb_gen_c_reader@@Base+0x2014>
   191b8:	ldr	r2, [pc, #3380]	; 19ef4 <__flatcc_fb_gen_c_reader@@Base+0x2018>
   191bc:	add	r1, pc, r1
   191c0:	add	r2, pc, r2
   191c4:	bl	149b8 <fprintf@plt>
   191c8:	ldr	r1, [r6, #4]
   191cc:	ldr	r0, [r9]
   191d0:	ldr	r3, [r1]
   191d4:	ldr	r2, [r1, #4]
   191d8:	mov	r1, r5
   191dc:	bl	149b8 <fprintf@plt>
   191e0:	ldr	r4, [r6]
   191e4:	cmp	r4, #0
   191e8:	beq	1924c <__flatcc_fb_gen_c_reader@@Base+0x1370>
   191ec:	ldr	r0, [r6, #4]
   191f0:	ldr	r0, [r0, #8]
   191f4:	ldr	r1, [r4, #4]
   191f8:	ldr	r1, [r1, #8]
   191fc:	cmp	r0, r1
   19200:	beq	1921c <__flatcc_fb_gen_c_reader@@Base+0x1340>
   19204:	ldr	r0, [r9]
   19208:	ldr	r1, [pc, #3304]	; 19ef8 <__flatcc_fb_gen_c_reader@@Base+0x201c>
   1920c:	ldr	r2, [pc, #3304]	; 19efc <__flatcc_fb_gen_c_reader@@Base+0x2020>
   19210:	add	r1, pc, r1
   19214:	add	r2, pc, r2
   19218:	bl	149b8 <fprintf@plt>
   1921c:	ldr	r1, [r4, #4]
   19220:	ldr	r0, [r9]
   19224:	ldr	r3, [r1]
   19228:	ldr	r2, [r1, #4]
   1922c:	mov	r1, r5
   19230:	bl	149b8 <fprintf@plt>
   19234:	ldr	r0, [r4, #4]
   19238:	ldr	r1, [r4]
   1923c:	ldr	r0, [r0, #8]
   19240:	cmp	r1, #0
   19244:	mov	r4, r1
   19248:	bne	191f4 <__flatcc_fb_gen_c_reader@@Base+0x1318>
   1924c:	ldr	r3, [r9]
   19250:	ldr	r0, [pc, #3240]	; 19f00 <__flatcc_fb_gen_c_reader@@Base+0x2024>
   19254:	mov	r1, #4
   19258:	mov	r2, #1
   1925c:	add	r0, pc, r0
   19260:	bl	1494c <fwrite@plt>
   19264:	ldr	r1, [r8, #4]
   19268:	ldrh	r0, [r8, #72]	; 0x48
   1926c:	ldr	r5, [r1]
   19270:	ldr	r3, [r1, #4]
   19274:	tst	r0, #4
   19278:	bne	193e0 <__flatcc_fb_gen_c_reader@@Base+0x1504>
   1927c:	ubfx	r6, r0, #8, #1
   19280:	ldrh	r0, [r8, #24]
   19284:	sub	r0, r0, #7
   19288:	cmp	r0, #8
   1928c:	bhi	19bbc <__flatcc_fb_gen_c_reader@@Base+0x1ce0>
   19290:	add	r1, pc, #8
   19294:	add	r4, r8, #96	; 0x60
   19298:	ldr	r0, [r1, r0, lsl #2]
   1929c:	add	pc, r1, r0
   192a0:	andeq	r0, r0, ip, lsr #32
   192a4:	muleq	r0, ip, r3
   192a8:	strdeq	r0, [r0], -r4
   192ac:	muleq	r0, r4, r1
   192b0:	andeq	r0, r0, ip, lsl r9
   192b4:	andeq	r0, r0, ip, lsl r9
   192b8:	andeq	r0, r0, ip, lsl r9
   192bc:	ldrdeq	r0, [r0], -r4
   192c0:	andeq	r0, r0, r8, asr #12
   192c4:	muleq	r2, r7, fp
   192c8:	andeq	r8, r2, r6, lsr r4
   192cc:	ldr	r0, [r8, #16]
   192d0:	sub	r1, r0, #1
   192d4:	cmp	r1, #11
   192d8:	bcs	19df8 <__flatcc_fb_gen_c_reader@@Base+0x1f1c>
   192dc:	ldr	r2, [sp, #68]	; 0x44
   192e0:	ldr	r0, [r2, #204]	; 0xcc
   192e4:	ldr	ip, [r4]
   192e8:	ldr	r4, [r4, #4]
   192ec:	str	r6, [sp, #28]
   192f0:	ldr	r6, [pc, #3148]	; 19f44 <__flatcc_fb_gen_c_reader@@Base+0x2068>
   192f4:	str	r2, [sp, #20]
   192f8:	str	r5, [sp, #16]
   192fc:	str	r3, [sp, #12]
   19300:	add	r6, pc, r6
   19304:	ldr	r1, [r6, r1, lsl #2]
   19308:	str	r1, [sp, #24]
   1930c:	stmib	sp, {r4, sl}
   19310:	str	ip, [sp]
   19314:	ldr	r1, [pc, #3116]	; 19f48 <__flatcc_fb_gen_c_reader@@Base+0x206c>
   19318:	add	r1, pc, r1
   1931c:	bl	149b8 <fprintf@plt>
   19320:	ldr	r4, [r8, #104]	; 0x68
   19324:	ldr	r5, [pc, #3104]	; 19f4c <__flatcc_fb_gen_c_reader@@Base+0x2070>
   19328:	cmp	r4, #0
   1932c:	add	r5, pc, r5
   19330:	beq	19a40 <__flatcc_fb_gen_c_reader@@Base+0x1b64>
   19334:	sub	sl, fp, #256	; 0x100
   19338:	mov	r1, #0
   1933c:	mov	r2, #220	; 0xdc
   19340:	mov	r0, sl
   19344:	bl	149d0 <memset@plt>
   19348:	sub	r0, fp, #480	; 0x1e0
   1934c:	mov	r1, #0
   19350:	mov	r2, #220	; 0xdc
   19354:	bl	149d0 <memset@plt>
   19358:	ldrh	r0, [r4, #8]
   1935c:	ldr	r6, [pc, #3052]	; 19f50 <__flatcc_fb_gen_c_reader@@Base+0x2074>
   19360:	cmp	r0, #0
   19364:	add	r6, pc, r6
   19368:	beq	1937c <__flatcc_fb_gen_c_reader@@Base+0x14a0>
   1936c:	cmp	r0, #1
   19370:	bne	19e54 <__flatcc_fb_gen_c_reader@@Base+0x1f78>
   19374:	ldr	r6, [pc, #3032]	; 19f54 <__flatcc_fb_gen_c_reader@@Base+0x2078>
   19378:	add	r6, pc, r6
   1937c:	ldr	r0, [r4, #12]
   19380:	mov	r1, r4
   19384:	mov	r2, sl
   19388:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1938c:	ldrh	r0, [r7, #8]
   19390:	cmp	r0, #0
   19394:	bne	19ea8 <__flatcc_fb_gen_c_reader@@Base+0x1fcc>
   19398:	ldr	r0, [r7, #12]
   1939c:	sub	r4, fp, #480	; 0x1e0
   193a0:	mov	r1, r7
   193a4:	mov	r2, r4
   193a8:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   193ac:	ldr	r1, [r8, #4]
   193b0:	ldr	r2, [sp, #68]	; 0x44
   193b4:	ldr	r3, [r1]
   193b8:	ldr	r1, [r1, #4]
   193bc:	ldr	r0, [r2, #204]	; 0xcc
   193c0:	stm	sp, {r1, r3, sl}
   193c4:	str	r6, [sp, #12]
   193c8:	mov	r3, r4
   193cc:	ldr	r1, [pc, #2948]	; 19f58 <__flatcc_fb_gen_c_reader@@Base+0x207c>
   193d0:	add	r1, pc, r1
   193d4:	bl	149b8 <fprintf@plt>
   193d8:	b	19a40 <__flatcc_fb_gen_c_reader@@Base+0x1b64>
   193dc:	ldrdeq	r9, [r3], -sl
   193e0:	ldr	r0, [r9]
   193e4:	str	r5, [sp]
   193e8:	mov	r2, sl
   193ec:	ldr	r1, [pc, #2832]	; 19f04 <__flatcc_fb_gen_c_reader@@Base+0x2028>
   193f0:	add	r1, pc, r1
   193f4:	bl	149b8 <fprintf@plt>
   193f8:	ldr	r5, [pc, #2824]	; 19f08 <__flatcc_fb_gen_c_reader@@Base+0x202c>
   193fc:	add	r5, pc, r5
   19400:	b	19a6c <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   19404:	andeq	lr, r2, r6, asr #22
   19408:	ldrdeq	r8, [r2], -lr
   1940c:	andeq	r9, r3, r2, lsl #3
   19410:	andeq	sp, r3, sp, lsr r4
   19414:	andeq	lr, r2, lr, asr #26
   19418:	andeq	lr, r2, fp, asr #26
   1941c:	andeq	r9, r3, lr, ror #1
   19420:	andeq	lr, r2, r7, asr #20
   19424:	andeq	sp, r3, lr, lsr pc
   19428:	strdeq	lr, [r2], -sl
   1942c:	andeq	sp, r3, sl, ror #29
   19430:	strdeq	sp, [r3], -r5
   19434:	ldr	r7, [sp, #68]	; 0x44
   19438:	ldr	r0, [r7, #204]	; 0xcc
   1943c:	ldr	r2, [r4]
   19440:	ldr	r1, [r4, #4]
   19444:	str	r2, [sp]
   19448:	stmib	sp, {r1, sl}
   1944c:	add	r1, sp, #12
   19450:	str	r3, [sp, #72]	; 0x48
   19454:	str	r5, [sp, #64]	; 0x40
   19458:	mov	r2, r7
   1945c:	stm	r1, {r3, r5, r6}
   19460:	ldr	r1, [pc, #2804]	; 19f5c <__flatcc_fb_gen_c_reader@@Base+0x2080>
   19464:	add	r1, pc, r1
   19468:	bl	149b8 <fprintf@plt>
   1946c:	ldr	r0, [r7, #212]	; 0xd4
   19470:	ldr	r0, [r0, #32]
   19474:	cmp	r0, #0
   19478:	bne	194b0 <__flatcc_fb_gen_c_reader@@Base+0x15d4>
   1947c:	ldrb	r0, [r8, #72]	; 0x48
   19480:	tst	r0, #128	; 0x80
   19484:	beq	194b0 <__flatcc_fb_gen_c_reader@@Base+0x15d4>
   19488:	ldr	r2, [sp, #68]	; 0x44
   1948c:	ldr	r1, [sp, #72]	; 0x48
   19490:	mov	r3, sl
   19494:	ldr	r0, [r2, #204]	; 0xcc
   19498:	str	r1, [sp]
   1949c:	ldr	r1, [sp, #64]	; 0x40
   194a0:	str	r1, [sp, #4]
   194a4:	ldr	r1, [pc, #2740]	; 19f60 <__flatcc_fb_gen_c_reader@@Base+0x2084>
   194a8:	add	r1, pc, r1
   194ac:	bl	149b8 <fprintf@plt>
   194b0:	ldrb	r0, [r8, #72]	; 0x48
   194b4:	ldr	r7, [sp, #56]	; 0x38
   194b8:	ldr	r5, [pc, #2724]	; 19f64 <__flatcc_fb_gen_c_reader@@Base+0x2088>
   194bc:	tst	r0, #128	; 0x80
   194c0:	add	r5, pc, r5
   194c4:	beq	19a40 <__flatcc_fb_gen_c_reader@@Base+0x1b64>
   194c8:	ldr	r0, [sp, #60]	; 0x3c
   194cc:	mov	sl, r7
   194d0:	cmp	r0, #0
   194d4:	beq	194f0 <__flatcc_fb_gen_c_reader@@Base+0x1614>
   194d8:	ldr	r3, [r9]
   194dc:	ldr	r0, [pc, #2692]	; 19f68 <__flatcc_fb_gen_c_reader@@Base+0x208c>
   194e0:	mov	r1, #66	; 0x42
   194e4:	mov	r2, #1
   194e8:	add	r0, pc, r0
   194ec:	bl	1494c <fwrite@plt>
   194f0:	ldr	r4, [sp, #68]	; 0x44
   194f4:	ldr	r5, [sp, #72]	; 0x48
   194f8:	ldr	r7, [sp, #64]	; 0x40
   194fc:	add	r6, sp, #400	; 0x190
   19500:	mov	r3, r6
   19504:	ldr	r0, [r4, #204]	; 0xcc
   19508:	str	r5, [sp]
   1950c:	str	r7, [sp, #4]
   19510:	mov	r2, r4
   19514:	ldr	r1, [pc, #2640]	; 19f6c <__flatcc_fb_gen_c_reader@@Base+0x2090>
   19518:	add	r1, pc, r1
   1951c:	bl	149b8 <fprintf@plt>
   19520:	ldr	r0, [r4, #212]	; 0xd4
   19524:	ldr	r0, [r0, #136]	; 0x88
   19528:	cmp	r0, #0
   1952c:	beq	1954c <__flatcc_fb_gen_c_reader@@Base+0x1670>
   19530:	ldr	r0, [r4, #204]	; 0xcc
   19534:	stm	sp, {r5, r7}
   19538:	mov	r2, r4
   1953c:	mov	r3, r6
   19540:	ldr	r1, [pc, #2600]	; 19f70 <__flatcc_fb_gen_c_reader@@Base+0x2094>
   19544:	add	r1, pc, r1
   19548:	bl	149b8 <fprintf@plt>
   1954c:	ldr	r0, [sp, #60]	; 0x3c
   19550:	ldr	r5, [pc, #2588]	; 19f74 <__flatcc_fb_gen_c_reader@@Base+0x2098>
   19554:	mov	r7, sl
   19558:	cmp	r0, #0
   1955c:	add	r5, pc, r5
   19560:	bne	19a6c <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   19564:	ldr	r4, [sp, #68]	; 0x44
   19568:	ldr	r5, [sp, #72]	; 0x48
   1956c:	ldr	r7, [sp, #64]	; 0x40
   19570:	add	r6, sp, #400	; 0x190
   19574:	mov	r3, r6
   19578:	ldr	r0, [r4, #204]	; 0xcc
   1957c:	str	r5, [sp]
   19580:	str	r7, [sp, #4]
   19584:	mov	r2, r4
   19588:	ldr	r1, [pc, #2536]	; 19f78 <__flatcc_fb_gen_c_reader@@Base+0x209c>
   1958c:	add	r1, pc, r1
   19590:	bl	149b8 <fprintf@plt>
   19594:	ldr	r0, [r4, #204]	; 0xcc
   19598:	stm	sp, {r5, r7}
   1959c:	mov	r2, r4
   195a0:	mov	r3, r6
   195a4:	ldr	r1, [pc, #2512]	; 19f7c <__flatcc_fb_gen_c_reader@@Base+0x20a0>
   195a8:	add	r1, pc, r1
   195ac:	bl	149b8 <fprintf@plt>
   195b0:	ldr	r0, [r4, #212]	; 0xd4
   195b4:	mov	r1, #1
   195b8:	str	r1, [sp, #60]	; 0x3c
   195bc:	ldr	r0, [r0, #136]	; 0x88
   195c0:	cmp	r0, #0
   195c4:	beq	195e4 <__flatcc_fb_gen_c_reader@@Base+0x1708>
   195c8:	ldr	r0, [r9]
   195cc:	stm	sp, {r5, r7}
   195d0:	mov	r2, r6
   195d4:	mov	r3, r6
   195d8:	ldr	r1, [pc, #2468]	; 19f84 <__flatcc_fb_gen_c_reader@@Base+0x20a8>
   195dc:	add	r1, pc, r1
   195e0:	bl	149b8 <fprintf@plt>
   195e4:	ldr	r5, [pc, #2452]	; 19f80 <__flatcc_fb_gen_c_reader@@Base+0x20a4>
   195e8:	mov	r7, sl
   195ec:	add	r5, pc, r5
   195f0:	b	19a6c <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   195f4:	andeq	lr, r2, r0, lsl ip
   195f8:			; <UNDEFINED> instruction: 0x000281b2
   195fc:	andeq	r3, r5, r4, lsr #14
   19600:	andeq	lr, r2, ip, lsl ip
   19604:	andeq	lr, r2, lr, ror fp
   19608:	andeq	lr, r2, pc, lsl ip
   1960c:	strdeq	r8, [r2], -lr
   19610:	andeq	lr, r2, r5, lsl #24
   19614:	andeq	lr, r2, sp, lsr #22
   19618:	andeq	lr, r2, lr, asr #22
   1961c:			; <UNDEFINED> instruction: 0x0002ebb5
   19620:	ldrdeq	lr, [r2], -r0
   19624:	andeq	r8, r3, r2, lsl #28
   19628:	ldrdeq	lr, [r2], -r2
   1962c:	andeq	lr, r2, r7, lsl r9
   19630:	andeq	lr, r2, pc, asr #18
   19634:	andeq	lr, r2, r5, ror r9
   19638:	muleq	r2, r0, r9
   1963c:	str	r3, [sp, #72]	; 0x48
   19640:	str	r5, [sp, #64]	; 0x40
   19644:	ldr	r0, [r8, #16]
   19648:	ldr	sl, [pc, #2236]	; 19f0c <__flatcc_fb_gen_c_reader@@Base+0x2030>
   1964c:	ldr	r7, [sp, #68]	; 0x44
   19650:	cmp	r0, #5
   19654:	sub	r6, r0, #1
   19658:	add	sl, pc, sl
   1965c:	moveq	sl, r7
   19660:	cmp	r6, #11
   19664:	bcs	19af0 <__flatcc_fb_gen_c_reader@@Base+0x1c14>
   19668:	add	r5, sp, #76	; 0x4c
   1966c:	add	r1, r8, #48	; 0x30
   19670:	mov	r2, r5
   19674:	bl	1a8d8 <__flatcc_fb_gen_c_reader@@Base+0x29fc>
   19678:	ldr	r0, [r7, #204]	; 0xcc
   1967c:	ldrd	r2, [r4]
   19680:	str	r5, [sp, #36]	; 0x24
   19684:	ldr	r1, [pc, #2180]	; 19f10 <__flatcc_fb_gen_c_reader@@Base+0x2034>
   19688:	str	sl, [sp, #28]
   1968c:	add	r1, pc, r1
   19690:	ldr	r4, [r1, r6, lsl #2]
   19694:	str	r4, [sp, #32]
   19698:	ldr	r1, [pc, #2164]	; 19f14 <__flatcc_fb_gen_c_reader@@Base+0x2038>
   1969c:	str	r7, [sp, #20]
   196a0:	add	r1, pc, r1
   196a4:	ldr	r1, [r1, r6, lsl #2]
   196a8:	str	r1, [sp, #24]
   196ac:	ldr	r1, [sp, #64]	; 0x40
   196b0:	str	r1, [sp, #16]
   196b4:	ldr	r1, [sp, #72]	; 0x48
   196b8:	str	r1, [sp, #12]
   196bc:	add	r1, sp, #400	; 0x190
   196c0:	str	r1, [sp, #8]
   196c4:	stm	sp, {r2, r3}
   196c8:	mov	r2, r7
   196cc:	ldr	r1, [pc, #2116]	; 19f18 <__flatcc_fb_gen_c_reader@@Base+0x203c>
   196d0:	add	r1, pc, r1
   196d4:	bl	149b8 <fprintf@plt>
   196d8:	ldr	r0, [r7, #212]	; 0xd4
   196dc:	ldr	r0, [r0, #32]
   196e0:	ldr	r5, [pc, #2100]	; 19f1c <__flatcc_fb_gen_c_reader@@Base+0x2040>
   196e4:	cmp	r0, #0
   196e8:	add	r5, pc, r5
   196ec:	bne	19728 <__flatcc_fb_gen_c_reader@@Base+0x184c>
   196f0:	ldrb	r0, [r8, #72]	; 0x48
   196f4:	tst	r0, #128	; 0x80
   196f8:	beq	19728 <__flatcc_fb_gen_c_reader@@Base+0x184c>
   196fc:	ldr	r2, [sp, #68]	; 0x44
   19700:	ldr	r1, [sp, #72]	; 0x48
   19704:	add	r3, sp, #400	; 0x190
   19708:	ldr	r0, [r2, #204]	; 0xcc
   1970c:	str	r1, [sp]
   19710:	ldr	r1, [sp, #64]	; 0x40
   19714:	stmib	sp, {r1, sl}
   19718:	str	r4, [sp, #12]
   1971c:	ldr	r1, [pc, #2044]	; 19f20 <__flatcc_fb_gen_c_reader@@Base+0x2044>
   19720:	add	r1, pc, r1
   19724:	bl	149b8 <fprintf@plt>
   19728:	ldrb	r0, [r8, #72]	; 0x48
   1972c:	ldr	r7, [sp, #56]	; 0x38
   19730:	tst	r0, #128	; 0x80
   19734:	beq	19a40 <__flatcc_fb_gen_c_reader@@Base+0x1b64>
   19738:	ldr	r0, [sp, #60]	; 0x3c
   1973c:	cmp	r0, #0
   19740:	beq	1975c <__flatcc_fb_gen_c_reader@@Base+0x1880>
   19744:	ldr	r3, [r9]
   19748:	ldr	r0, [pc, #2004]	; 19f24 <__flatcc_fb_gen_c_reader@@Base+0x2048>
   1974c:	mov	r1, #66	; 0x42
   19750:	mov	r2, #1
   19754:	add	r0, pc, r0
   19758:	bl	1494c <fwrite@plt>
   1975c:	ldr	r6, [sp, #68]	; 0x44
   19760:	mov	r1, #61	; 0x3d
   19764:	mov	r2, #1
   19768:	ldr	r3, [r6, #204]	; 0xcc
   1976c:	ldr	r0, [pc, #1972]	; 19f28 <__flatcc_fb_gen_c_reader@@Base+0x204c>
   19770:	add	r0, pc, r0
   19774:	bl	1494c <fwrite@plt>
   19778:	ldr	r5, [sp, #72]	; 0x48
   1977c:	ldr	r7, [sp, #64]	; 0x40
   19780:	ldr	r0, [r6, #204]	; 0xcc
   19784:	mov	r2, r6
   19788:	add	r3, sp, #400	; 0x190
   1978c:	str	r5, [sp]
   19790:	stmib	sp, {r7, sl}
   19794:	str	r4, [sp, #12]
   19798:	ldr	r1, [pc, #1932]	; 19f2c <__flatcc_fb_gen_c_reader@@Base+0x2050>
   1979c:	add	r1, pc, r1
   197a0:	bl	149b8 <fprintf@plt>
   197a4:	ldr	r0, [r6, #212]	; 0xd4
   197a8:	ldr	r0, [r0, #136]	; 0x88
   197ac:	cmp	r0, #0
   197b0:	beq	197d8 <__flatcc_fb_gen_c_reader@@Base+0x18fc>
   197b4:	ldr	r0, [r6, #204]	; 0xcc
   197b8:	stm	sp, {r5, r7, sl}
   197bc:	str	r4, [sp, #12]
   197c0:	str	r6, [sp, #16]
   197c4:	mov	r2, r6
   197c8:	add	r3, sp, #400	; 0x190
   197cc:	ldr	r1, [pc, #1884]	; 19f30 <__flatcc_fb_gen_c_reader@@Base+0x2054>
   197d0:	add	r1, pc, r1
   197d4:	bl	149b8 <fprintf@plt>
   197d8:	ldr	r0, [sp, #60]	; 0x3c
   197dc:	ldr	r7, [sp, #56]	; 0x38
   197e0:	ldr	r5, [pc, #1868]	; 19f34 <__flatcc_fb_gen_c_reader@@Base+0x2058>
   197e4:	cmp	r0, #0
   197e8:	add	r5, pc, r5
   197ec:	bne	19a6c <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   197f0:	ldr	r6, [sp, #68]	; 0x44
   197f4:	ldr	r5, [sp, #72]	; 0x48
   197f8:	ldr	r7, [sp, #64]	; 0x40
   197fc:	add	r3, sp, #400	; 0x190
   19800:	ldr	r0, [r6, #204]	; 0xcc
   19804:	str	r5, [sp]
   19808:	stmib	sp, {r7, sl}
   1980c:	str	r4, [sp, #12]
   19810:	mov	r2, r6
   19814:	ldr	r1, [pc, #1820]	; 19f38 <__flatcc_fb_gen_c_reader@@Base+0x205c>
   19818:	add	r1, pc, r1
   1981c:	bl	149b8 <fprintf@plt>
   19820:	ldr	r0, [r6, #204]	; 0xcc
   19824:	stm	sp, {r5, r7, sl}
   19828:	str	r4, [sp, #12]
   1982c:	add	sl, sp, #400	; 0x190
   19830:	mov	r2, r6
   19834:	ldr	r1, [pc, #1792]	; 19f3c <__flatcc_fb_gen_c_reader@@Base+0x2060>
   19838:	mov	r3, sl
   1983c:	add	r1, pc, r1
   19840:	bl	149b8 <fprintf@plt>
   19844:	ldr	r0, [r6, #212]	; 0xd4
   19848:	mov	r1, #1
   1984c:	str	r1, [sp, #60]	; 0x3c
   19850:	ldr	r0, [r0, #136]	; 0x88
   19854:	cmp	r0, #0
   19858:	beq	19878 <__flatcc_fb_gen_c_reader@@Base+0x199c>
   1985c:	ldr	r0, [r9]
   19860:	stm	sp, {r5, r7}
   19864:	mov	r2, sl
   19868:	mov	r3, sl
   1986c:	ldr	r1, [pc, #1740]	; 19f40 <__flatcc_fb_gen_c_reader@@Base+0x2064>
   19870:	add	r1, pc, r1
   19874:	bl	149b8 <fprintf@plt>
   19878:	ldr	r7, [sp, #56]	; 0x38
   1987c:	ldr	r5, [pc, #1844]	; 19fb8 <__flatcc_fb_gen_c_reader@@Base+0x20dc>
   19880:	add	r5, pc, r5
   19884:	b	19a6c <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   19888:	andeq	r8, r3, sl, asr #29
   1988c:	andeq	lr, r2, r7, asr #21
   19890:	andeq	r8, r3, r2, lsr #29
   19894:	ldr	r2, [sp, #68]	; 0x44
   19898:	ldr	r0, [r2, #204]	; 0xcc
   1989c:	ldr	r1, [r4, #4]
   198a0:	ldr	r4, [r4]
   198a4:	str	r4, [sp]
   198a8:	stmib	sp, {r1, sl}
   198ac:	str	r3, [sp, #12]
   198b0:	str	r5, [sp, #16]
   198b4:	str	r2, [sp, #20]
   198b8:	str	r6, [sp, #24]
   198bc:	ldr	r1, [pc, #1732]	; 19f88 <__flatcc_fb_gen_c_reader@@Base+0x20ac>
   198c0:	add	r1, pc, r1
   198c4:	bl	149b8 <fprintf@plt>
   198c8:	ldr	r5, [pc, #1836]	; 19ffc <__flatcc_fb_gen_c_reader@@Base+0x2120>
   198cc:	add	r5, pc, r5
   198d0:	b	19a40 <__flatcc_fb_gen_c_reader@@Base+0x1b64>
   198d4:	muleq	r2, fp, sl
   198d8:			; <UNDEFINED> instruction: 0x0002eabe
   198dc:	strdeq	lr, [r2], -sl
   198e0:	andeq	lr, r2, r0, lsr #22
   198e4:	andeq	lr, r2, fp, asr fp
   198e8:	ldr	r1, [r8, #16]
   198ec:	add	r2, sp, #176	; 0xb0
   198f0:	str	r3, [sp, #72]	; 0x48
   198f4:	mov	r7, r5
   198f8:	ldr	r0, [r1, #12]
   198fc:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   19900:	ldr	r0, [r8, #16]
   19904:	ldrh	r3, [r0, #8]
   19908:	cmp	r3, #4
   1990c:	bhi	19cf8 <__flatcc_fb_gen_c_reader@@Base+0x1e1c>
   19910:	cmp	r3, #2
   19914:	beq	19cf8 <__flatcc_fb_gen_c_reader@@Base+0x1e1c>
   19918:	ldr	r2, [r4]
   1991c:	ldr	r1, [r4, #4]
   19920:	cmp	r3, #4
   19924:	ldr	r0, [r9]
   19928:	ldr	r3, [sp, #72]	; 0x48
   1992c:	ldr	r5, [pc, #1700]	; 19fd8 <__flatcc_fb_gen_c_reader@@Base+0x20fc>
   19930:	add	r5, pc, r5
   19934:	bne	19a10 <__flatcc_fb_gen_c_reader@@Base+0x1b34>
   19938:	str	r2, [sp]
   1993c:	stmib	sp, {r1, sl}
   19940:	add	r1, sp, #176	; 0xb0
   19944:	str	r3, [sp, #12]
   19948:	str	r7, [sp, #16]
   1994c:	str	r6, [sp, #24]
   19950:	str	r1, [sp, #20]
   19954:	ldr	r1, [pc, #1664]	; 19fdc <__flatcc_fb_gen_c_reader@@Base+0x2100>
   19958:	ldr	r2, [sp, #68]	; 0x44
   1995c:	add	r1, pc, r1
   19960:	mov	r3, r2
   19964:	bl	149b8 <fprintf@plt>
   19968:	b	19a3c <__flatcc_fb_gen_c_reader@@Base+0x1b60>
   1996c:	andeq	lr, r2, r1, ror fp
   19970:	muleq	r2, r9, fp
   19974:	ldr	r1, [r8, #16]
   19978:	add	r2, sp, #176	; 0xb0
   1997c:	str	r3, [sp, #72]	; 0x48
   19980:	str	r5, [sp, #64]	; 0x40
   19984:	ldr	r0, [r1, #12]
   19988:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1998c:	ldr	r0, [r8, #16]
   19990:	ldrh	r1, [r0, #8]
   19994:	cmp	r1, #4
   19998:	bhi	19d54 <__flatcc_fb_gen_c_reader@@Base+0x1e78>
   1999c:	add	r2, pc, #4
   199a0:	ldr	r1, [r2, r1, lsl #2]
   199a4:	add	pc, r2, r1
   199a8:	andeq	r0, r0, r4, lsl r0
   199ac:			; <UNDEFINED> instruction: 0xfffff578
   199b0:	andeq	r0, r0, ip, lsr #7
   199b4:			; <UNDEFINED> instruction: 0xfffff5ec
   199b8:			; <UNDEFINED> instruction: 0xfffff524
   199bc:	ldr	r2, [sp, #68]	; 0x44
   199c0:	ldr	r0, [r2, #204]	; 0xcc
   199c4:	ldr	r3, [r4, #4]
   199c8:	ldr	r4, [r4]
   199cc:	str	r4, [sp]
   199d0:	stmib	sp, {r3, sl}
   199d4:	str	r6, [sp, #24]
   199d8:	ldr	r1, [sp, #72]	; 0x48
   199dc:	str	r1, [sp, #12]
   199e0:	ldr	r1, [sp, #64]	; 0x40
   199e4:	str	r1, [sp, #16]
   199e8:	add	r1, sp, #176	; 0xb0
   199ec:	str	r1, [sp, #20]
   199f0:	ldr	r1, [pc, #1428]	; 19f8c <__flatcc_fb_gen_c_reader@@Base+0x20b0>
   199f4:	add	r1, pc, r1
   199f8:	b	198c4 <__flatcc_fb_gen_c_reader@@Base+0x19e8>
   199fc:	andeq	r3, r5, r0, lsl #7
   19a00:	andeq	r7, r2, r2, ror #27
   19a04:	strdeq	r3, [r5], -r8
   19a08:	strdeq	lr, [r2], -r9
   19a0c:			; <UNDEFINED> instruction: 0x0002eab3
   19a10:	str	r2, [sp]
   19a14:	stmib	sp, {r1, sl}
   19a18:	add	r1, sp, #176	; 0xb0
   19a1c:	str	r3, [sp, #12]
   19a20:	str	r7, [sp, #16]
   19a24:	str	r6, [sp, #24]
   19a28:	str	r1, [sp, #20]
   19a2c:	ldr	r1, [pc, #1452]	; 19fe0 <__flatcc_fb_gen_c_reader@@Base+0x2104>
   19a30:	ldr	r2, [sp, #68]	; 0x44
   19a34:	add	r1, pc, r1
   19a38:	bl	149b8 <fprintf@plt>
   19a3c:	ldr	r7, [sp, #56]	; 0x38
   19a40:	ldrb	r0, [r8, #72]	; 0x48
   19a44:	tst	r0, #128	; 0x80
   19a48:	beq	19a6c <__flatcc_fb_gen_c_reader@@Base+0x1b90>
   19a4c:	mov	r0, #1
   19a50:	ldr	r3, [r9]
   19a54:	mov	r1, #84	; 0x54
   19a58:	mov	r2, #1
   19a5c:	str	r0, [sp, #60]	; 0x3c
   19a60:	ldr	r0, [pc, #1432]	; 1a000 <__flatcc_fb_gen_c_reader@@Base+0x2124>
   19a64:	add	r0, pc, r0
   19a68:	bl	1494c <fwrite@plt>
   19a6c:	ldr	r8, [r8]
   19a70:	add	sl, sp, #400	; 0x190
   19a74:	cmp	r8, #0
   19a78:	bne	19194 <__flatcc_fb_gen_c_reader@@Base+0x12b8>
   19a7c:	add	r4, sp, #176	; 0xb0
   19a80:	ldr	r7, [r7]
   19a84:	cmp	r7, #0
   19a88:	bne	18ce8 <__flatcc_fb_gen_c_reader@@Base+0xe0c>
   19a8c:	ldr	r4, [sp, #68]	; 0x44
   19a90:	mov	r0, #10
   19a94:	ldr	r1, [r4, #204]	; 0xcc
   19a98:	bl	14a18 <fputc@plt>
   19a9c:	ldr	r0, [r4, #212]	; 0xd4
   19aa0:	ldr	r0, [r0, #140]	; 0x8c
   19aa4:	cmp	r0, #0
   19aa8:	beq	19ac4 <__flatcc_fb_gen_c_reader@@Base+0x1be8>
   19aac:	ldr	r3, [r9]
   19ab0:	ldr	r0, [pc, #1356]	; 1a004 <__flatcc_fb_gen_c_reader@@Base+0x2128>
   19ab4:	mov	r1, #36	; 0x24
   19ab8:	mov	r2, #1
   19abc:	add	r0, pc, r0
   19ac0:	bl	1494c <fwrite@plt>
   19ac4:	ldr	r1, [r4, #208]	; 0xd0
   19ac8:	ldr	r0, [r4, #204]	; 0xcc
   19acc:	ldr	r2, [r1, #164]	; 0xa4
   19ad0:	ldr	r1, [pc, #1328]	; 1a008 <__flatcc_fb_gen_c_reader@@Base+0x212c>
   19ad4:	add	r1, pc, r1
   19ad8:	bl	149b8 <fprintf@plt>
   19adc:	mov	r0, #0
   19ae0:	sub	sp, fp, #28
   19ae4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ae8:	andeq	lr, r2, ip, lsr #21
   19aec:	andeq	lr, r2, lr, lsr #21
   19af0:	ldr	r0, [pc, #1336]	; 1a030 <__flatcc_fb_gen_c_reader@@Base+0x2154>
   19af4:	mov	r3, #141	; 0x8d
   19af8:	ldr	r0, [pc, r0]
   19afc:	ldr	r0, [r0]
   19b00:	ldr	r1, [pc, #1324]	; 1a034 <__flatcc_fb_gen_c_reader@@Base+0x2158>
   19b04:	add	r1, pc, r1
   19b08:	str	r1, [sp]
   19b0c:	ldr	r1, [pc, #1316]	; 1a038 <__flatcc_fb_gen_c_reader@@Base+0x215c>
   19b10:	ldr	r4, [pc, #1316]	; 1a03c <__flatcc_fb_gen_c_reader@@Base+0x2160>
   19b14:	add	r4, pc, r4
   19b18:	add	r1, pc, r1
   19b1c:	mov	r2, r4
   19b20:	bl	149b8 <fprintf@plt>
   19b24:	ldr	r0, [pc, #1300]	; 1a040 <__flatcc_fb_gen_c_reader@@Base+0x2164>
   19b28:	ldr	r3, [pc, #1300]	; 1a044 <__flatcc_fb_gen_c_reader@@Base+0x2168>
   19b2c:	mov	r1, r4
   19b30:	mov	r2, #141	; 0x8d
   19b34:	add	r0, pc, r0
   19b38:	add	r3, pc, r3
   19b3c:	bl	14a78 <__assert_fail@plt>
   19b40:	ldrdeq	lr, [r2], -r5
   19b44:	andeq	lr, r2, pc, ror #21
   19b48:	strdeq	lr, [r2], -r1
   19b4c:	ldr	r0, [r9]
   19b50:	ldr	r1, [pc, #888]	; 19ed0 <__flatcc_fb_gen_c_reader@@Base+0x1ff4>
   19b54:	ldr	r2, [pc, #888]	; 19ed4 <__flatcc_fb_gen_c_reader@@Base+0x1ff8>
   19b58:	add	r1, pc, r1
   19b5c:	add	r2, pc, r2
   19b60:	bl	149b8 <fprintf@plt>
   19b64:	ldr	r0, [pc, #876]	; 19ed8 <__flatcc_fb_gen_c_reader@@Base+0x1ffc>
   19b68:	movw	r3, #1029	; 0x405
   19b6c:	ldr	r0, [pc, r0]
   19b70:	ldr	r0, [r0]
   19b74:	ldr	r1, [pc, #864]	; 19edc <__flatcc_fb_gen_c_reader@@Base+0x2000>
   19b78:	add	r1, pc, r1
   19b7c:	str	r1, [sp]
   19b80:	ldr	r1, [pc, #856]	; 19ee0 <__flatcc_fb_gen_c_reader@@Base+0x2004>
   19b84:	ldr	r4, [pc, #856]	; 19ee4 <__flatcc_fb_gen_c_reader@@Base+0x2008>
   19b88:	add	r4, pc, r4
   19b8c:	add	r1, pc, r1
   19b90:	mov	r2, r4
   19b94:	bl	149b8 <fprintf@plt>
   19b98:	ldr	r0, [pc, #840]	; 19ee8 <__flatcc_fb_gen_c_reader@@Base+0x200c>
   19b9c:	ldr	r3, [pc, #840]	; 19eec <__flatcc_fb_gen_c_reader@@Base+0x2010>
   19ba0:	mov	r1, r4
   19ba4:	movw	r2, #1029	; 0x405
   19ba8:	add	r0, pc, r0
   19bac:	add	r3, pc, r3
   19bb0:	bl	14a78 <__assert_fail@plt>
   19bb4:	strdeq	lr, [r2], -r5
   19bb8:	andeq	lr, r2, r3, lsl fp
   19bbc:	ldr	r0, [pc, #1056]	; 19fe4 <__flatcc_fb_gen_c_reader@@Base+0x2108>
   19bc0:	movw	r3, #1599	; 0x63f
   19bc4:	ldr	r0, [pc, r0]
   19bc8:	ldr	r0, [r0]
   19bcc:	ldr	r1, [pc, #1044]	; 19fe8 <__flatcc_fb_gen_c_reader@@Base+0x210c>
   19bd0:	add	r1, pc, r1
   19bd4:	str	r1, [sp]
   19bd8:	ldr	r1, [pc, #1036]	; 19fec <__flatcc_fb_gen_c_reader@@Base+0x2110>
   19bdc:	ldr	r4, [pc, #1036]	; 19ff0 <__flatcc_fb_gen_c_reader@@Base+0x2114>
   19be0:	add	r4, pc, r4
   19be4:	add	r1, pc, r1
   19be8:	mov	r2, r4
   19bec:	bl	149b8 <fprintf@plt>
   19bf0:	ldr	r0, [pc, #1020]	; 19ff4 <__flatcc_fb_gen_c_reader@@Base+0x2118>
   19bf4:	ldr	r3, [pc, #1020]	; 19ff8 <__flatcc_fb_gen_c_reader@@Base+0x211c>
   19bf8:	mov	r1, r4
   19bfc:	movw	r2, #1599	; 0x63f
   19c00:	add	r0, pc, r0
   19c04:	add	r3, pc, r3
   19c08:	bl	14a78 <__assert_fail@plt>
   19c0c:	ldr	r0, [pc, #1076]	; 1a048 <__flatcc_fb_gen_c_reader@@Base+0x216c>
   19c10:	ldr	r1, [pc, #1076]	; 1a04c <__flatcc_fb_gen_c_reader@@Base+0x2170>
   19c14:	ldr	r3, [pc, #1076]	; 1a050 <__flatcc_fb_gen_c_reader@@Base+0x2174>
   19c18:	movw	r2, #1018	; 0x3fa
   19c1c:	add	r0, pc, r0
   19c20:	add	r1, pc, r1
   19c24:	add	r3, pc, r3
   19c28:	bl	14a78 <__assert_fail@plt>
   19c2c:	andeq	lr, r2, r1, lsr #22
   19c30:	andeq	lr, r2, lr, lsl fp
   19c34:	ldr	r0, [pc, #1048]	; 1a054 <__flatcc_fb_gen_c_reader@@Base+0x2178>
   19c38:	mov	r3, #96	; 0x60
   19c3c:	ldr	r0, [pc, r0]
   19c40:	ldr	r0, [r0]
   19c44:	ldr	r1, [pc, #1036]	; 1a058 <__flatcc_fb_gen_c_reader@@Base+0x217c>
   19c48:	add	r1, pc, r1
   19c4c:	str	r1, [sp]
   19c50:	ldr	r1, [pc, #1028]	; 1a05c <__flatcc_fb_gen_c_reader@@Base+0x2180>
   19c54:	ldr	r4, [pc, #1028]	; 1a060 <__flatcc_fb_gen_c_reader@@Base+0x2184>
   19c58:	add	r4, pc, r4
   19c5c:	add	r1, pc, r1
   19c60:	mov	r2, r4
   19c64:	bl	149b8 <fprintf@plt>
   19c68:	ldr	r0, [pc, #1012]	; 1a064 <__flatcc_fb_gen_c_reader@@Base+0x2188>
   19c6c:	ldr	r3, [pc, #1012]	; 1a068 <__flatcc_fb_gen_c_reader@@Base+0x218c>
   19c70:	mov	r1, r4
   19c74:	mov	r2, #96	; 0x60
   19c78:	add	r0, pc, r0
   19c7c:	add	r3, pc, r3
   19c80:	bl	14a78 <__assert_fail@plt>
   19c84:	andeq	lr, r2, r1, lsr #22
   19c88:	ldr	r0, [pc, #892]	; 1a00c <__flatcc_fb_gen_c_reader@@Base+0x2130>
   19c8c:	ldr	r1, [pc, #892]	; 1a010 <__flatcc_fb_gen_c_reader@@Base+0x2134>
   19c90:	ldr	r3, [pc, #892]	; 1a014 <__flatcc_fb_gen_c_reader@@Base+0x2138>
   19c94:	mov	r2, #936	; 0x3a8
   19c98:	add	r0, pc, r0
   19c9c:	add	r1, pc, r1
   19ca0:	add	r3, pc, r3
   19ca4:	bl	14a78 <__assert_fail@plt>
   19ca8:	ldr	r0, [pc, #1040]	; 1a0c0 <__flatcc_fb_gen_c_reader@@Base+0x21e4>
   19cac:	movw	r3, #1672	; 0x688
   19cb0:	ldr	r0, [pc, r0]
   19cb4:	ldr	r0, [r0]
   19cb8:	ldr	r1, [pc, #1028]	; 1a0c4 <__flatcc_fb_gen_c_reader@@Base+0x21e8>
   19cbc:	add	r1, pc, r1
   19cc0:	str	r1, [sp]
   19cc4:	ldr	r1, [pc, #1020]	; 1a0c8 <__flatcc_fb_gen_c_reader@@Base+0x21ec>
   19cc8:	ldr	r4, [pc, #1020]	; 1a0cc <__flatcc_fb_gen_c_reader@@Base+0x21f0>
   19ccc:	add	r4, pc, r4
   19cd0:	add	r1, pc, r1
   19cd4:	mov	r2, r4
   19cd8:	bl	149b8 <fprintf@plt>
   19cdc:	ldr	r0, [pc, #1004]	; 1a0d0 <__flatcc_fb_gen_c_reader@@Base+0x21f4>
   19ce0:	ldr	r3, [pc, #1004]	; 1a0d4 <__flatcc_fb_gen_c_reader@@Base+0x21f8>
   19ce4:	mov	r1, r4
   19ce8:	movw	r2, #1672	; 0x688
   19cec:	add	r0, pc, r0
   19cf0:	add	r3, pc, r3
   19cf4:	bl	14a78 <__assert_fail@plt>
   19cf8:	ldr	r0, [pc, #936]	; 1a0a8 <__flatcc_fb_gen_c_reader@@Base+0x21cc>
   19cfc:	mov	r3, #1584	; 0x630
   19d00:	ldr	r0, [pc, r0]
   19d04:	ldr	r0, [r0]
   19d08:	ldr	r1, [pc, #924]	; 1a0ac <__flatcc_fb_gen_c_reader@@Base+0x21d0>
   19d0c:	add	r1, pc, r1
   19d10:	str	r1, [sp]
   19d14:	ldr	r1, [pc, #916]	; 1a0b0 <__flatcc_fb_gen_c_reader@@Base+0x21d4>
   19d18:	ldr	r4, [pc, #916]	; 1a0b4 <__flatcc_fb_gen_c_reader@@Base+0x21d8>
   19d1c:	add	r4, pc, r4
   19d20:	add	r1, pc, r1
   19d24:	mov	r2, r4
   19d28:	bl	149b8 <fprintf@plt>
   19d2c:	ldr	r0, [pc, #900]	; 1a0b8 <__flatcc_fb_gen_c_reader@@Base+0x21dc>
   19d30:	ldr	r3, [pc, #900]	; 1a0bc <__flatcc_fb_gen_c_reader@@Base+0x21e0>
   19d34:	mov	r1, r4
   19d38:	mov	r2, #1584	; 0x630
   19d3c:	add	r0, pc, r0
   19d40:	add	r3, pc, r3
   19d44:	bl	14a78 <__assert_fail@plt>
   19d48:	ldrdeq	lr, [r2], -pc	; <UNPREDICTABLE>
   19d4c:	andeq	r7, r2, lr, ror sl
   19d50:	andeq	r8, r3, r2, lsr #16
   19d54:	ldr	r0, [pc, #612]	; 19fc0 <__flatcc_fb_gen_c_reader@@Base+0x20e4>
   19d58:	mov	r3, #1568	; 0x620
   19d5c:	ldr	r0, [pc, r0]
   19d60:	ldr	r0, [r0]
   19d64:	ldr	r1, [pc, #600]	; 19fc4 <__flatcc_fb_gen_c_reader@@Base+0x20e8>
   19d68:	add	r1, pc, r1
   19d6c:	str	r1, [sp]
   19d70:	ldr	r1, [pc, #592]	; 19fc8 <__flatcc_fb_gen_c_reader@@Base+0x20ec>
   19d74:	ldr	r4, [pc, #592]	; 19fcc <__flatcc_fb_gen_c_reader@@Base+0x20f0>
   19d78:	add	r4, pc, r4
   19d7c:	add	r1, pc, r1
   19d80:	mov	r2, r4
   19d84:	bl	149b8 <fprintf@plt>
   19d88:	ldr	r0, [pc, #576]	; 19fd0 <__flatcc_fb_gen_c_reader@@Base+0x20f4>
   19d8c:	ldr	r3, [pc, #576]	; 19fd4 <__flatcc_fb_gen_c_reader@@Base+0x20f8>
   19d90:	mov	r1, r4
   19d94:	mov	r2, #1568	; 0x620
   19d98:	add	r0, pc, r0
   19d9c:	add	r3, pc, r3
   19da0:	bl	14a78 <__assert_fail@plt>
   19da4:	ldr	r0, [pc, #620]	; 1a018 <__flatcc_fb_gen_c_reader@@Base+0x213c>
   19da8:	ldr	r1, [pc, #620]	; 1a01c <__flatcc_fb_gen_c_reader@@Base+0x2140>
   19dac:	ldr	r3, [pc, #620]	; 1a020 <__flatcc_fb_gen_c_reader@@Base+0x2144>
   19db0:	movw	r2, #937	; 0x3a9
   19db4:	add	r0, pc, r0
   19db8:	add	r1, pc, r1
   19dbc:	add	r3, pc, r3
   19dc0:	bl	14a78 <__assert_fail@plt>
   19dc4:	andeq	lr, r2, lr, lsl #3
   19dc8:	andeq	r7, r2, r6, lsr #20
   19dcc:	ldr	r0, [pc, #592]	; 1a024 <__flatcc_fb_gen_c_reader@@Base+0x2148>
   19dd0:	ldr	r1, [pc, #592]	; 1a028 <__flatcc_fb_gen_c_reader@@Base+0x214c>
   19dd4:	ldr	r3, [pc, #592]	; 1a02c <__flatcc_fb_gen_c_reader@@Base+0x2150>
   19dd8:	movw	r2, #938	; 0x3aa
   19ddc:	add	r0, pc, r0
   19de0:	add	r1, pc, r1
   19de4:	add	r3, pc, r3
   19de8:	bl	14a78 <__assert_fail@plt>
   19dec:	andeq	r8, r3, sl, asr #15
   19df0:	andeq	ip, r3, r5, lsl #21
   19df4:	andeq	lr, r2, lr, asr #20
   19df8:	ldr	r0, [pc, #620]	; 1a06c <__flatcc_fb_gen_c_reader@@Base+0x2190>
   19dfc:	mov	r3, #186	; 0xba
   19e00:	ldr	r0, [pc, r0]
   19e04:	ldr	r0, [r0]
   19e08:	ldr	r1, [pc, #608]	; 1a070 <__flatcc_fb_gen_c_reader@@Base+0x2194>
   19e0c:	add	r1, pc, r1
   19e10:	str	r1, [sp]
   19e14:	ldr	r1, [pc, #600]	; 1a074 <__flatcc_fb_gen_c_reader@@Base+0x2198>
   19e18:	ldr	r4, [pc, #600]	; 1a078 <__flatcc_fb_gen_c_reader@@Base+0x219c>
   19e1c:	add	r4, pc, r4
   19e20:	add	r1, pc, r1
   19e24:	mov	r2, r4
   19e28:	bl	149b8 <fprintf@plt>
   19e2c:	ldr	r0, [pc, #584]	; 1a07c <__flatcc_fb_gen_c_reader@@Base+0x21a0>
   19e30:	ldr	r3, [pc, #584]	; 1a080 <__flatcc_fb_gen_c_reader@@Base+0x21a4>
   19e34:	mov	r1, r4
   19e38:	mov	r2, #186	; 0xba
   19e3c:	add	r0, pc, r0
   19e40:	add	r3, pc, r3
   19e44:	bl	14a78 <__assert_fail@plt>
   19e48:	muleq	r2, r1, r6
   19e4c:	andeq	lr, r2, fp, lsr sl
   19e50:	andeq	lr, r2, r8, lsl #21
   19e54:	ldr	r0, [pc, #552]	; 1a084 <__flatcc_fb_gen_c_reader@@Base+0x21a8>
   19e58:	movw	r3, #1339	; 0x53b
   19e5c:	ldr	r0, [pc, r0]
   19e60:	ldr	r0, [r0]
   19e64:	ldr	r1, [pc, #540]	; 1a088 <__flatcc_fb_gen_c_reader@@Base+0x21ac>
   19e68:	add	r1, pc, r1
   19e6c:	str	r1, [sp]
   19e70:	ldr	r1, [pc, #532]	; 1a08c <__flatcc_fb_gen_c_reader@@Base+0x21b0>
   19e74:	ldr	r4, [pc, #532]	; 1a090 <__flatcc_fb_gen_c_reader@@Base+0x21b4>
   19e78:	add	r4, pc, r4
   19e7c:	add	r1, pc, r1
   19e80:	mov	r2, r4
   19e84:	bl	149b8 <fprintf@plt>
   19e88:	ldr	r0, [pc, #516]	; 1a094 <__flatcc_fb_gen_c_reader@@Base+0x21b8>
   19e8c:	ldr	r3, [pc, #516]	; 1a098 <__flatcc_fb_gen_c_reader@@Base+0x21bc>
   19e90:	mov	r1, r4
   19e94:	movw	r2, #1339	; 0x53b
   19e98:	add	r0, pc, r0
   19e9c:	add	r3, pc, r3
   19ea0:	bl	14a78 <__assert_fail@plt>
   19ea4:	andeq	r8, r3, lr, lsl #14
   19ea8:	ldr	r0, [pc, #492]	; 1a09c <__flatcc_fb_gen_c_reader@@Base+0x21c0>
   19eac:	ldr	r1, [pc, #492]	; 1a0a0 <__flatcc_fb_gen_c_reader@@Base+0x21c4>
   19eb0:	ldr	r3, [pc, #492]	; 1a0a4 <__flatcc_fb_gen_c_reader@@Base+0x21c8>
   19eb4:	movw	r2, #1343	; 0x53f
   19eb8:	add	r0, pc, r0
   19ebc:	add	r1, pc, r1
   19ec0:	add	r3, pc, r3
   19ec4:	bl	14a78 <__assert_fail@plt>
   19ec8:	andeq	lr, r2, r4, lsl lr
   19ecc:	ldrdeq	lr, [r2], -r3
   19ed0:	andeq	sp, r2, sp, ror #15
   19ed4:	strdeq	sp, [r2], -r1
   19ed8:	andeq	r2, r5, r0, lsr r5
   19edc:	andeq	sp, r2, sp, ror r3
   19ee0:	andeq	r6, r2, sl, asr fp
   19ee4:	andeq	r6, r2, r9, ror #22
   19ee8:	andeq	r7, r3, r6, lsl #20
   19eec:	andeq	sp, r2, lr, lsl #9
   19ef0:	muleq	r2, pc, sp	; <UNPREDICTABLE>
   19ef4:	andeq	r7, r2, lr, lsr r6
   19ef8:	andeq	sp, r2, r2, asr sp
   19efc:	andeq	r7, r2, sl, ror #11
   19f00:	andeq	ip, r3, sp, asr #12
   19f04:	andeq	lr, r2, pc, lsr r5
   19f08:	andeq	r8, r3, r2, asr #3
   19f0c:	andeq	r7, r2, r6, lsr #3
   19f10:	strdeq	r2, [r5], -ip
   19f14:	andeq	r2, r5, r8, lsl #13
   19f18:	andeq	lr, r2, ip, lsl #5
   19f1c:	ldrdeq	r7, [r3], -r6
   19f20:	andeq	lr, r2, r5, ror r2
   19f24:	muleq	r2, r2, lr
   19f28:			; <UNDEFINED> instruction: 0x0002deb9
   19f2c:	andeq	lr, r2, sl, lsr #4
   19f30:	andeq	lr, r2, r7, lsr #4
   19f34:	ldrdeq	r7, [r3], -r6
   19f38:	andeq	lr, r2, sp, lsl r2
   19f3c:	andeq	lr, r2, r2, lsr r2
   19f40:	andeq	sp, r2, r5, ror #29
   19f44:	andeq	r2, r5, r8, asr sl
   19f48:	andeq	lr, r2, pc, lsl #15
   19f4c:	muleq	r3, r2, r2
   19f50:	andeq	lr, r2, r8, asr #23
   19f54:			; <UNDEFINED> instruction: 0x0002ebbb
   19f58:	andeq	lr, r2, pc, lsl #24
   19f5c:	andeq	lr, r2, r6, ror r6
   19f60:	andeq	lr, r2, pc, asr r6
   19f64:	strdeq	r8, [r3], -lr
   19f68:	strdeq	lr, [r2], -lr	; <UNPREDICTABLE>
   19f6c:	andeq	lr, r2, sl, lsl r6
   19f70:	andeq	lr, r2, r9, lsl r6
   19f74:	andeq	r8, r3, r2, rrx
   19f78:	strdeq	lr, [r2], -ip
   19f7c:	andeq	lr, r2, r3, lsl r6
   19f80:	ldrdeq	r7, [r3], -r2
   19f84:	andeq	lr, r2, r9, ror r1
   19f88:	andeq	lr, r2, lr, lsr #6
   19f8c:	andeq	lr, r2, r1, ror r2
   19f90:			; <UNDEFINED> instruction: 0x0002ecbd
   19f94:	andeq	r8, r3, r6, asr #11
   19f98:	andeq	lr, r2, r4, lsl #11
   19f9c:	andeq	lr, r2, sl, lsl #11
   19fa0:			; <UNDEFINED> instruction: 0x0002e5b1
   19fa4:			; <UNDEFINED> instruction: 0x0002e5bb
   19fa8:	strdeq	lr, [r2], -sp
   19fac:	andeq	r8, r3, sl, asr #9
   19fb0:	andeq	lr, r2, r9, lsr #11
   19fb4:	andeq	lr, r2, fp, asr #11
   19fb8:	andeq	r7, r3, lr, lsr sp
   19fbc:	ldrdeq	lr, [r2], -r5
   19fc0:	andeq	r2, r5, r0, asr #6
   19fc4:	andeq	sp, r2, r8, ror #31
   19fc8:	andeq	r6, r2, sl, ror #18
   19fcc:	andeq	r6, r2, r9, ror r9
   19fd0:	andeq	r7, r3, r6, lsl r8
   19fd4:			; <UNDEFINED> instruction: 0x0002daba
   19fd8:	andeq	r7, r3, lr, lsl #25
   19fdc:	andeq	lr, r2, sp, lsl #9
   19fe0:	strdeq	lr, [r2], -r0
   19fe4:	ldrdeq	r2, [r5], -r8
   19fe8:	andeq	lr, r2, fp, lsl #5
   19fec:	andeq	r6, r2, r2, lsl #22
   19ff0:	andeq	r6, r2, r1, lsl fp
   19ff4:	andeq	r7, r3, lr, lsr #19
   19ff8:	andeq	sp, r2, r2, asr ip
   19ffc:	strdeq	r7, [r3], -r2
   1a000:	andeq	sp, r2, r1, asr sp
   1a004:	ldrdeq	ip, [r2], -lr
   1a008:	andeq	lr, r2, r8, lsr r5
   1a00c:	andeq	sp, r2, r2, lsl #7
   1a010:	andeq	r6, r2, r5, asr sl
   1a014:	muleq	r2, sl, r3
   1a018:			; <UNDEFINED> instruction: 0x0002d2bb
   1a01c:	andeq	r6, r2, r9, lsr r9
   1a020:	andeq	sp, r2, lr, ror r2
   1a024:			; <UNDEFINED> instruction: 0x0002d2b3
   1a028:	andeq	r6, r2, r1, lsl r9
   1a02c:	andeq	sp, r2, r6, asr r2
   1a030:	andeq	r2, r5, r4, lsr #11
   1a034:	strdeq	sp, [r2], -r1
   1a038:	andeq	r6, r2, lr, asr #23
   1a03c:	andeq	sp, r2, r1, lsl #7
   1a040:	andeq	r7, r3, sl, ror sl
   1a044:	strdeq	sp, [r2], -r4
   1a048:	andeq	sp, r2, r4, lsr #13
   1a04c:	ldrdeq	r6, [r2], -r1
   1a050:	andeq	sp, r2, r6, lsl r4
   1a054:	andeq	r2, r5, r0, ror #8
   1a058:	andeq	sp, r2, sp, lsr #5
   1a05c:	andeq	r6, r2, sl, lsl #21
   1a060:	andeq	sp, r2, sp, lsr r2
   1a064:	andeq	r7, r3, r6, lsr r9
   1a068:	andeq	sp, r2, r9, lsr #23
   1a06c:	muleq	r5, ip, r2
   1a070:	andeq	sp, r2, r9, ror #1
   1a074:	andeq	r6, r2, r6, asr #17
   1a078:	andeq	sp, r2, r9, ror r0
   1a07c:	andeq	r7, r3, r2, ror r7
   1a080:	strheq	lr, [r2], -r6
   1a084:	andeq	r2, r5, r0, asr #4
   1a088:	ldrdeq	lr, [r2], -r3
   1a08c:	andeq	r6, r2, sl, ror #16
   1a090:	andeq	r6, r2, r9, ror r8
   1a094:	andeq	r7, r3, r6, lsl r7
   1a098:	ldrdeq	lr, [r2], -r3
   1a09c:	andeq	lr, r2, r8, lsl #2
   1a0a0:	andeq	r6, r2, r5, lsr r8
   1a0a4:	andeq	lr, r2, pc, lsr #1
   1a0a8:	muleq	r5, ip, r3
   1a0ac:	andeq	lr, r2, sp, lsl #1
   1a0b0:	andeq	r6, r2, r6, asr #19
   1a0b4:	ldrdeq	r6, [r2], -r5
   1a0b8:	andeq	r7, r3, r2, ror r8
   1a0bc:	andeq	sp, r2, r6, lsl fp
   1a0c0:	andeq	r2, r5, ip, ror #7
   1a0c4:	muleq	r2, ip, sl
   1a0c8:	andeq	r6, r2, r6, lsl sl
   1a0cc:	andeq	r6, r2, r5, lsr #20
   1a0d0:	andeq	r7, r3, r2, asr #17
   1a0d4:	muleq	r2, r4, sl
   1a0d8:	push	{r4, r5, fp, lr}
   1a0dc:	add	fp, sp, #8
   1a0e0:	sub	sp, sp, #224	; 0xe0
   1a0e4:	mov	r5, r1
   1a0e8:	mov	r4, r0
   1a0ec:	mov	r0, sp
   1a0f0:	mov	r1, #0
   1a0f4:	mov	r2, #220	; 0xdc
   1a0f8:	bl	149d0 <memset@plt>
   1a0fc:	ldrh	r0, [r5, #8]
   1a100:	cmp	r0, #2
   1a104:	bcs	1a210 <__flatcc_fb_gen_c_reader@@Base+0x2334>
   1a108:	ldr	r0, [r5, #12]
   1a10c:	mov	r2, sp
   1a110:	mov	r1, r5
   1a114:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1a118:	ldrh	r0, [r5, #8]
   1a11c:	cmp	r0, #1
   1a120:	bne	1a14c <__flatcc_fb_gen_c_reader@@Base+0x2270>
   1a124:	ldrd	r2, [r5, #112]	; 0x70
   1a128:	ldr	r0, [r4, #204]	; 0xcc
   1a12c:	orrs	r1, r2, r3
   1a130:	beq	1a194 <__flatcc_fb_gen_c_reader@@Base+0x22b8>
   1a134:	ldr	r1, [pc, #248]	; 1a234 <__flatcc_fb_gen_c_reader@@Base+0x2358>
   1a138:	mov	r2, sp
   1a13c:	mov	r3, r2
   1a140:	add	r1, pc, r1
   1a144:	bl	149b8 <fprintf@plt>
   1a148:	b	1a1a4 <__flatcc_fb_gen_c_reader@@Base+0x22c8>
   1a14c:	ldr	r0, [r4, #204]	; 0xcc
   1a150:	ldr	r1, [pc, #240]	; 1a248 <__flatcc_fb_gen_c_reader@@Base+0x236c>
   1a154:	mov	r5, sp
   1a158:	mov	r2, r5
   1a15c:	mov	r3, r5
   1a160:	add	r1, pc, r1
   1a164:	bl	149b8 <fprintf@plt>
   1a168:	ldr	r0, [r4, #204]	; 0xcc
   1a16c:	ldr	r1, [pc, #216]	; 1a24c <__flatcc_fb_gen_c_reader@@Base+0x2370>
   1a170:	mov	r2, r4
   1a174:	mov	r3, r5
   1a178:	add	r1, pc, r1
   1a17c:	bl	149b8 <fprintf@plt>
   1a180:	ldr	r0, [r4, #204]	; 0xcc
   1a184:	ldr	r1, [pc, #196]	; 1a250 <__flatcc_fb_gen_c_reader@@Base+0x2374>
   1a188:	mov	r2, r4
   1a18c:	add	r1, pc, r1
   1a190:	b	1a200 <__flatcc_fb_gen_c_reader@@Base+0x2324>
   1a194:	ldr	r1, [pc, #148]	; 1a230 <__flatcc_fb_gen_c_reader@@Base+0x2354>
   1a198:	mov	r2, sp
   1a19c:	add	r1, pc, r1
   1a1a0:	bl	149b8 <fprintf@plt>
   1a1a4:	ldr	r0, [r4, #204]	; 0xcc
   1a1a8:	ldr	r1, [pc, #136]	; 1a238 <__flatcc_fb_gen_c_reader@@Base+0x235c>
   1a1ac:	mov	r5, sp
   1a1b0:	mov	r2, r5
   1a1b4:	mov	r3, r5
   1a1b8:	add	r1, pc, r1
   1a1bc:	bl	149b8 <fprintf@plt>
   1a1c0:	ldr	r0, [r4, #204]	; 0xcc
   1a1c4:	ldr	r1, [pc, #112]	; 1a23c <__flatcc_fb_gen_c_reader@@Base+0x2360>
   1a1c8:	mov	r2, r5
   1a1cc:	mov	r3, r5
   1a1d0:	add	r1, pc, r1
   1a1d4:	bl	149b8 <fprintf@plt>
   1a1d8:	ldr	r0, [r4, #204]	; 0xcc
   1a1dc:	ldr	r1, [pc, #92]	; 1a240 <__flatcc_fb_gen_c_reader@@Base+0x2364>
   1a1e0:	mov	r2, r5
   1a1e4:	mov	r3, r5
   1a1e8:	add	r1, pc, r1
   1a1ec:	bl	149b8 <fprintf@plt>
   1a1f0:	ldr	r0, [r4, #204]	; 0xcc
   1a1f4:	ldr	r1, [pc, #72]	; 1a244 <__flatcc_fb_gen_c_reader@@Base+0x2368>
   1a1f8:	mov	r2, r5
   1a1fc:	add	r1, pc, r1
   1a200:	mov	r3, r5
   1a204:	bl	149b8 <fprintf@plt>
   1a208:	sub	sp, fp, #8
   1a20c:	pop	{r4, r5, fp, pc}
   1a210:	ldr	r0, [pc, #60]	; 1a254 <__flatcc_fb_gen_c_reader@@Base+0x2378>
   1a214:	ldr	r1, [pc, #60]	; 1a258 <__flatcc_fb_gen_c_reader@@Base+0x237c>
   1a218:	ldr	r3, [pc, #60]	; 1a25c <__flatcc_fb_gen_c_reader@@Base+0x2380>
   1a21c:	movw	r2, #863	; 0x35f
   1a220:	add	r0, pc, r0
   1a224:	add	r1, pc, r1
   1a228:	add	r3, pc, r3
   1a22c:	bl	14a78 <__assert_fail@plt>
   1a230:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1a234:	andeq	ip, r2, pc, ror r8
   1a238:	andeq	ip, r2, r0, lsr #16
   1a23c:	andeq	ip, r2, sl, lsr #16
   1a240:	andeq	ip, r2, r6, lsr r8
   1a244:	andeq	ip, r2, r1, asr #16
   1a248:	strdeq	ip, [r2], -lr
   1a24c:	andeq	ip, r2, r2, lsl r9
   1a250:	andeq	ip, r2, r4, lsr #18
   1a254:	strdeq	ip, [r2], -fp
   1a258:	andeq	r6, r2, sp, asr #9
   1a25c:	andeq	ip, r2, r5, lsr r7
   1a260:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a264:	add	fp, sp, #28
   1a268:	sub	sp, sp, #364	; 0x16c
   1a26c:	mov	r7, r1
   1a270:	mov	r8, r0
   1a274:	add	r0, sp, #40	; 0x28
   1a278:	mov	r1, #0
   1a27c:	mov	r2, #220	; 0xdc
   1a280:	bl	149d0 <memset@plt>
   1a284:	ldrh	r9, [r7, #8]
   1a288:	sub	r0, r9, #3
   1a28c:	uxth	r0, r0
   1a290:	cmp	r0, #2
   1a294:	bcs	1a790 <__flatcc_fb_gen_c_reader@@Base+0x28b4>
   1a298:	ldrh	r0, [r7, #48]	; 0x30
   1a29c:	cmp	r0, #8
   1a2a0:	bne	1a7b0 <__flatcc_fb_gen_c_reader@@Base+0x28d4>
   1a2a4:	ldr	r0, [r7, #40]	; 0x28
   1a2a8:	ldr	r6, [pc, #1392]	; 1a820 <__flatcc_fb_gen_c_reader@@Base+0x2944>
   1a2ac:	add	r6, pc, r6
   1a2b0:	cmp	r0, #5
   1a2b4:	sub	r4, r0, #1
   1a2b8:	moveq	r6, r8
   1a2bc:	cmp	r4, #11
   1a2c0:	bcs	1a7d0 <__flatcc_fb_gen_c_reader@@Base+0x28f4>
   1a2c4:	ldr	r0, [r7, #12]
   1a2c8:	ldr	r5, [r7, #112]	; 0x70
   1a2cc:	add	r2, sp, #40	; 0x28
   1a2d0:	mov	r1, r7
   1a2d4:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1a2d8:	ldr	r0, [pc, #1348]	; 1a824 <__flatcc_fb_gen_c_reader@@Base+0x2948>
   1a2dc:	ldr	r1, [pc, #1348]	; 1a828 <__flatcc_fb_gen_c_reader@@Base+0x294c>
   1a2e0:	cmp	r9, #3
   1a2e4:	add	sl, r8, #204	; 0xcc
   1a2e8:	add	r0, pc, r0
   1a2ec:	add	r1, pc, r1
   1a2f0:	movne	r1, r0
   1a2f4:	str	r1, [sp, #32]
   1a2f8:	ldr	r0, [pc, #1324]	; 1a82c <__flatcc_fb_gen_c_reader@@Base+0x2950>
   1a2fc:	str	r7, [sp, #36]	; 0x24
   1a300:	str	r9, [sp, #28]
   1a304:	add	r0, pc, r0
   1a308:	ldr	r3, [r0, r4, lsl #2]
   1a30c:	ldr	r4, [r7, #32]
   1a310:	lsl	r0, r5, #3
   1a314:	str	r0, [sp, #24]
   1a318:	cmp	r4, #0
   1a31c:	beq	1a408 <__flatcc_fb_gen_c_reader@@Base+0x252c>
   1a320:	ldr	r0, [r4, #4]
   1a324:	str	r3, [sp, #20]
   1a328:	ldr	r0, [r0, #8]
   1a32c:	cmp	r0, #0
   1a330:	beq	1a34c <__flatcc_fb_gen_c_reader@@Base+0x2470>
   1a334:	ldr	r0, [sl]
   1a338:	ldr	r1, [pc, #1264]	; 1a830 <__flatcc_fb_gen_c_reader@@Base+0x2954>
   1a33c:	ldr	r2, [pc, #1264]	; 1a834 <__flatcc_fb_gen_c_reader@@Base+0x2958>
   1a340:	add	r1, pc, r1
   1a344:	add	r2, pc, r2
   1a348:	bl	149b8 <fprintf@plt>
   1a34c:	ldr	r1, [r4, #4]
   1a350:	ldr	r0, [sl]
   1a354:	ldr	r3, [r1]
   1a358:	ldr	r2, [r1, #4]
   1a35c:	ldr	r1, [pc, #1236]	; 1a838 <__flatcc_fb_gen_c_reader@@Base+0x295c>
   1a360:	add	r1, pc, r1
   1a364:	bl	149b8 <fprintf@plt>
   1a368:	ldr	r5, [r4]
   1a36c:	cmp	r5, #0
   1a370:	beq	1a3e4 <__flatcc_fb_gen_c_reader@@Base+0x2508>
   1a374:	ldr	r0, [r4, #4]
   1a378:	ldr	r0, [r0, #8]
   1a37c:	ldr	r4, [pc, #1208]	; 1a83c <__flatcc_fb_gen_c_reader@@Base+0x2960>
   1a380:	ldr	r7, [pc, #1208]	; 1a840 <__flatcc_fb_gen_c_reader@@Base+0x2964>
   1a384:	ldr	r9, [pc, #1208]	; 1a844 <__flatcc_fb_gen_c_reader@@Base+0x2968>
   1a388:	add	r4, pc, r4
   1a38c:	add	r7, pc, r7
   1a390:	add	r9, pc, r9
   1a394:	ldr	r1, [r5, #4]
   1a398:	ldr	r1, [r1, #8]
   1a39c:	cmp	r0, r1
   1a3a0:	beq	1a3b4 <__flatcc_fb_gen_c_reader@@Base+0x24d8>
   1a3a4:	ldr	r0, [sl]
   1a3a8:	mov	r1, r7
   1a3ac:	mov	r2, r9
   1a3b0:	bl	149b8 <fprintf@plt>
   1a3b4:	ldr	r1, [r5, #4]
   1a3b8:	ldr	r0, [sl]
   1a3bc:	ldr	r3, [r1]
   1a3c0:	ldr	r2, [r1, #4]
   1a3c4:	mov	r1, r4
   1a3c8:	bl	149b8 <fprintf@plt>
   1a3cc:	ldr	r0, [r5, #4]
   1a3d0:	ldr	r1, [r5]
   1a3d4:	ldr	r0, [r0, #8]
   1a3d8:	cmp	r1, #0
   1a3dc:	mov	r5, r1
   1a3e0:	bne	1a394 <__flatcc_fb_gen_c_reader@@Base+0x24b8>
   1a3e4:	ldr	r3, [sl]
   1a3e8:	ldr	r0, [pc, #1112]	; 1a848 <__flatcc_fb_gen_c_reader@@Base+0x296c>
   1a3ec:	mov	r1, #4
   1a3f0:	mov	r2, #1
   1a3f4:	add	r0, pc, r0
   1a3f8:	bl	1494c <fwrite@plt>
   1a3fc:	ldr	r7, [sp, #36]	; 0x24
   1a400:	ldr	r9, [sp, #28]
   1a404:	ldr	r3, [sp, #20]
   1a408:	ldr	r5, [sp, #32]
   1a40c:	add	r4, sp, #40	; 0x28
   1a410:	ldr	r0, [r8, #204]	; 0xcc
   1a414:	mov	r2, r6
   1a418:	str	r4, [sp]
   1a41c:	str	r5, [sp, #4]
   1a420:	ldr	r1, [pc, #1060]	; 1a84c <__flatcc_fb_gen_c_reader@@Base+0x2970>
   1a424:	add	r1, pc, r1
   1a428:	bl	149b8 <fprintf@plt>
   1a42c:	ldr	r0, [r8, #204]	; 0xcc
   1a430:	stm	sp, {r4, r5}
   1a434:	mov	r2, r8
   1a438:	mov	r3, r4
   1a43c:	ldr	r1, [sp, #24]
   1a440:	str	r1, [sp, #8]
   1a444:	ldr	r1, [pc, #1028]	; 1a850 <__flatcc_fb_gen_c_reader@@Base+0x2974>
   1a448:	add	r1, pc, r1
   1a44c:	bl	149b8 <fprintf@plt>
   1a450:	cmp	r9, #3
   1a454:	beq	1a478 <__flatcc_fb_gen_c_reader@@Base+0x259c>
   1a458:	add	r1, sp, #40	; 0x28
   1a45c:	ldr	r0, [r8, #204]	; 0xcc
   1a460:	mov	r2, r8
   1a464:	mov	r3, r8
   1a468:	str	r1, [sp]
   1a46c:	ldr	r1, [pc, #992]	; 1a854 <__flatcc_fb_gen_c_reader@@Base+0x2978>
   1a470:	add	r1, pc, r1
   1a474:	bl	149b8 <fprintf@plt>
   1a478:	ldr	r8, [r7, #20]
   1a47c:	mov	r9, r7
   1a480:	cmp	r8, #0
   1a484:	beq	1a5c0 <__flatcc_fb_gen_c_reader@@Base+0x26e4>
   1a488:	ldr	r5, [pc, #968]	; 1a858 <__flatcc_fb_gen_c_reader@@Base+0x297c>
   1a48c:	add	r5, pc, r5
   1a490:	ldr	r7, [r8, #68]	; 0x44
   1a494:	cmp	r7, #0
   1a498:	beq	1a564 <__flatcc_fb_gen_c_reader@@Base+0x2688>
   1a49c:	ldr	r0, [r7, #4]
   1a4a0:	ldr	r0, [r0, #8]
   1a4a4:	ldr	r9, [pc, #944]	; 1a85c <__flatcc_fb_gen_c_reader@@Base+0x2980>
   1a4a8:	cmp	r0, #0
   1a4ac:	add	r9, pc, r9
   1a4b0:	beq	1a4c8 <__flatcc_fb_gen_c_reader@@Base+0x25ec>
   1a4b4:	ldr	r0, [sl]
   1a4b8:	ldr	r1, [pc, #928]	; 1a860 <__flatcc_fb_gen_c_reader@@Base+0x2984>
   1a4bc:	mov	r2, r9
   1a4c0:	add	r1, pc, r1
   1a4c4:	bl	149b8 <fprintf@plt>
   1a4c8:	ldr	r1, [r7, #4]
   1a4cc:	ldr	r0, [sl]
   1a4d0:	ldr	r3, [r1]
   1a4d4:	ldr	r2, [r1, #4]
   1a4d8:	mov	r1, r5
   1a4dc:	bl	149b8 <fprintf@plt>
   1a4e0:	ldr	r6, [r7]
   1a4e4:	ldr	r4, [pc, #888]	; 1a864 <__flatcc_fb_gen_c_reader@@Base+0x2988>
   1a4e8:	cmp	r6, #0
   1a4ec:	add	r4, pc, r4
   1a4f0:	beq	1a54c <__flatcc_fb_gen_c_reader@@Base+0x2670>
   1a4f4:	ldr	r0, [r7, #4]
   1a4f8:	ldr	r0, [r0, #8]
   1a4fc:	ldr	r1, [r6, #4]
   1a500:	ldr	r1, [r1, #8]
   1a504:	cmp	r0, r1
   1a508:	beq	1a51c <__flatcc_fb_gen_c_reader@@Base+0x2640>
   1a50c:	ldr	r0, [sl]
   1a510:	mov	r1, r4
   1a514:	mov	r2, r9
   1a518:	bl	149b8 <fprintf@plt>
   1a51c:	ldr	r1, [r6, #4]
   1a520:	ldr	r0, [sl]
   1a524:	ldr	r3, [r1]
   1a528:	ldr	r2, [r1, #4]
   1a52c:	mov	r1, r5
   1a530:	bl	149b8 <fprintf@plt>
   1a534:	ldr	r0, [r6, #4]
   1a538:	ldr	r1, [r6]
   1a53c:	ldr	r0, [r0, #8]
   1a540:	cmp	r1, #0
   1a544:	mov	r6, r1
   1a548:	bne	1a4fc <__flatcc_fb_gen_c_reader@@Base+0x2620>
   1a54c:	ldr	r3, [sl]
   1a550:	ldr	r0, [pc, #784]	; 1a868 <__flatcc_fb_gen_c_reader@@Base+0x298c>
   1a554:	mov	r1, #4
   1a558:	mov	r2, #1
   1a55c:	add	r0, pc, r0
   1a560:	bl	1494c <fwrite@plt>
   1a564:	ldr	r0, [r8, #4]
   1a568:	ldr	r9, [sp, #36]	; 0x24
   1a56c:	sub	r7, fp, #132	; 0x84
   1a570:	add	r1, r8, #48	; 0x30
   1a574:	mov	r2, r7
   1a578:	ldr	r6, [r0]
   1a57c:	ldr	r4, [r0, #4]
   1a580:	ldr	r0, [r9, #40]	; 0x28
   1a584:	bl	1a8d8 <__flatcc_fb_gen_c_reader@@Base+0x29fc>
   1a588:	ldr	r1, [sp, #32]
   1a58c:	add	r2, sp, #40	; 0x28
   1a590:	ldr	r0, [sl]
   1a594:	str	r6, [sp]
   1a598:	str	r7, [sp, #12]
   1a59c:	mov	r3, r4
   1a5a0:	str	r2, [sp, #4]
   1a5a4:	str	r1, [sp, #8]
   1a5a8:	ldr	r1, [pc, #700]	; 1a86c <__flatcc_fb_gen_c_reader@@Base+0x2990>
   1a5ac:	add	r1, pc, r1
   1a5b0:	bl	149b8 <fprintf@plt>
   1a5b4:	ldr	r8, [r8]
   1a5b8:	cmp	r8, #0
   1a5bc:	bne	1a490 <__flatcc_fb_gen_c_reader@@Base+0x25b4>
   1a5c0:	ldr	r1, [sl]
   1a5c4:	mov	r0, #10
   1a5c8:	bl	14a18 <fputc@plt>
   1a5cc:	ldr	r8, [sp, #28]
   1a5d0:	ldr	r0, [sl]
   1a5d4:	cmp	r8, #3
   1a5d8:	beq	1a604 <__flatcc_fb_gen_c_reader@@Base+0x2728>
   1a5dc:	ldr	r1, [pc, #652]	; 1a870 <__flatcc_fb_gen_c_reader@@Base+0x2994>
   1a5e0:	add	r2, sp, #40	; 0x28
   1a5e4:	mov	r3, r2
   1a5e8:	add	r1, pc, r1
   1a5ec:	bl	149b8 <fprintf@plt>
   1a5f0:	ldr	r3, [sl]
   1a5f4:	ldr	r0, [pc, #632]	; 1a874 <__flatcc_fb_gen_c_reader@@Base+0x2998>
   1a5f8:	mov	r1, #20
   1a5fc:	add	r0, pc, r0
   1a600:	b	1a628 <__flatcc_fb_gen_c_reader@@Base+0x274c>
   1a604:	ldr	r1, [pc, #620]	; 1a878 <__flatcc_fb_gen_c_reader@@Base+0x299c>
   1a608:	add	r2, sp, #40	; 0x28
   1a60c:	mov	r3, r2
   1a610:	add	r1, pc, r1
   1a614:	bl	149b8 <fprintf@plt>
   1a618:	ldr	r3, [sl]
   1a61c:	ldr	r0, [pc, #600]	; 1a87c <__flatcc_fb_gen_c_reader@@Base+0x29a0>
   1a620:	mov	r1, #21
   1a624:	add	r0, pc, r0
   1a628:	mov	r2, #1
   1a62c:	bl	1494c <fwrite@plt>
   1a630:	ldr	r7, [r9, #20]
   1a634:	cmp	r7, #0
   1a638:	beq	1a688 <__flatcc_fb_gen_c_reader@@Base+0x27ac>
   1a63c:	ldr	r4, [pc, #572]	; 1a880 <__flatcc_fb_gen_c_reader@@Base+0x29a4>
   1a640:	ldr	r6, [pc, #572]	; 1a884 <__flatcc_fb_gen_c_reader@@Base+0x29a8>
   1a644:	add	r5, sp, #40	; 0x28
   1a648:	add	r4, pc, r4
   1a64c:	add	r6, pc, r6
   1a650:	ldr	r2, [r7, #4]
   1a654:	ldr	r0, [sl]
   1a658:	ldm	r2, {r1, r3}
   1a65c:	ldrb	r2, [r7, #10]
   1a660:	tst	r2, #4
   1a664:	stm	sp, {r1, r3}
   1a668:	str	r1, [sp, #8]
   1a66c:	mov	r2, r5
   1a670:	moveq	r1, r4
   1a674:	movne	r1, r6
   1a678:	bl	149b8 <fprintf@plt>
   1a67c:	ldr	r7, [r7]
   1a680:	cmp	r7, #0
   1a684:	bne	1a650 <__flatcc_fb_gen_c_reader@@Base+0x2774>
   1a688:	ldr	r3, [sl]
   1a68c:	ldr	r0, [pc, #500]	; 1a888 <__flatcc_fb_gen_c_reader@@Base+0x29ac>
   1a690:	mov	r1, #32
   1a694:	mov	r2, #1
   1a698:	add	r0, pc, r0
   1a69c:	bl	1494c <fwrite@plt>
   1a6a0:	ldr	r1, [sl]
   1a6a4:	mov	r0, #10
   1a6a8:	bl	14a18 <fputc@plt>
   1a6ac:	ldr	r0, [sl]
   1a6b0:	cmp	r8, #3
   1a6b4:	beq	1a6e0 <__flatcc_fb_gen_c_reader@@Base+0x2804>
   1a6b8:	ldr	r1, [pc, #460]	; 1a88c <__flatcc_fb_gen_c_reader@@Base+0x29b0>
   1a6bc:	add	r2, sp, #40	; 0x28
   1a6c0:	mov	r3, r2
   1a6c4:	add	r1, pc, r1
   1a6c8:	bl	149b8 <fprintf@plt>
   1a6cc:	ldr	r3, [sl]
   1a6d0:	ldr	r0, [pc, #440]	; 1a890 <__flatcc_fb_gen_c_reader@@Base+0x29b4>
   1a6d4:	mov	r1, #20
   1a6d8:	add	r0, pc, r0
   1a6dc:	b	1a704 <__flatcc_fb_gen_c_reader@@Base+0x2828>
   1a6e0:	ldr	r1, [pc, #428]	; 1a894 <__flatcc_fb_gen_c_reader@@Base+0x29b8>
   1a6e4:	add	r2, sp, #40	; 0x28
   1a6e8:	mov	r3, r2
   1a6ec:	add	r1, pc, r1
   1a6f0:	bl	149b8 <fprintf@plt>
   1a6f4:	ldr	r3, [sl]
   1a6f8:	ldr	r0, [pc, #408]	; 1a898 <__flatcc_fb_gen_c_reader@@Base+0x29bc>
   1a6fc:	mov	r1, #21
   1a700:	add	r0, pc, r0
   1a704:	mov	r2, #1
   1a708:	bl	1494c <fwrite@plt>
   1a70c:	ldr	r0, [sp, #36]	; 0x24
   1a710:	ldr	r7, [r0, #20]
   1a714:	cmp	r7, #0
   1a718:	beq	1a764 <__flatcc_fb_gen_c_reader@@Base+0x2888>
   1a71c:	ldr	r4, [pc, #376]	; 1a89c <__flatcc_fb_gen_c_reader@@Base+0x29c0>
   1a720:	ldr	r6, [pc, #376]	; 1a8a0 <__flatcc_fb_gen_c_reader@@Base+0x29c4>
   1a724:	add	r5, sp, #40	; 0x28
   1a728:	add	r4, pc, r4
   1a72c:	add	r6, pc, r6
   1a730:	ldr	r2, [r7, #4]
   1a734:	ldr	r0, [sl]
   1a738:	ldm	r2, {r1, r3}
   1a73c:	ldrb	r2, [r7, #10]
   1a740:	tst	r2, #4
   1a744:	str	r1, [sp]
   1a748:	mov	r2, r5
   1a74c:	moveq	r1, r4
   1a750:	movne	r1, r6
   1a754:	bl	149b8 <fprintf@plt>
   1a758:	ldr	r7, [r7]
   1a75c:	cmp	r7, #0
   1a760:	bne	1a730 <__flatcc_fb_gen_c_reader@@Base+0x2854>
   1a764:	ldr	r3, [sl]
   1a768:	ldr	r0, [pc, #308]	; 1a8a4 <__flatcc_fb_gen_c_reader@@Base+0x29c8>
   1a76c:	mov	r1, #31
   1a770:	mov	r2, #1
   1a774:	add	r0, pc, r0
   1a778:	bl	1494c <fwrite@plt>
   1a77c:	ldr	r1, [sl]
   1a780:	mov	r0, #10
   1a784:	bl	14a18 <fputc@plt>
   1a788:	sub	sp, fp, #28
   1a78c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a790:	ldr	r0, [pc, #272]	; 1a8a8 <__flatcc_fb_gen_c_reader@@Base+0x29cc>
   1a794:	ldr	r1, [pc, #272]	; 1a8ac <__flatcc_fb_gen_c_reader@@Base+0x29d0>
   1a798:	ldr	r3, [pc, #272]	; 1a8b0 <__flatcc_fb_gen_c_reader@@Base+0x29d4>
   1a79c:	movw	r2, #1204	; 0x4b4
   1a7a0:	add	r0, pc, r0
   1a7a4:	add	r1, pc, r1
   1a7a8:	add	r3, pc, r3
   1a7ac:	bl	14a78 <__assert_fail@plt>
   1a7b0:	ldr	r0, [pc, #252]	; 1a8b4 <__flatcc_fb_gen_c_reader@@Base+0x29d8>
   1a7b4:	ldr	r1, [pc, #252]	; 1a8b8 <__flatcc_fb_gen_c_reader@@Base+0x29dc>
   1a7b8:	ldr	r3, [pc, #252]	; 1a8bc <__flatcc_fb_gen_c_reader@@Base+0x29e0>
   1a7bc:	movw	r2, #1205	; 0x4b5
   1a7c0:	add	r0, pc, r0
   1a7c4:	add	r1, pc, r1
   1a7c8:	add	r3, pc, r3
   1a7cc:	bl	14a78 <__assert_fail@plt>
   1a7d0:	ldr	r0, [pc, #232]	; 1a8c0 <__flatcc_fb_gen_c_reader@@Base+0x29e4>
   1a7d4:	mov	r3, #141	; 0x8d
   1a7d8:	ldr	r0, [pc, r0]
   1a7dc:	ldr	r0, [r0]
   1a7e0:	ldr	r1, [pc, #220]	; 1a8c4 <__flatcc_fb_gen_c_reader@@Base+0x29e8>
   1a7e4:	add	r1, pc, r1
   1a7e8:	str	r1, [sp]
   1a7ec:	ldr	r1, [pc, #212]	; 1a8c8 <__flatcc_fb_gen_c_reader@@Base+0x29ec>
   1a7f0:	ldr	r4, [pc, #212]	; 1a8cc <__flatcc_fb_gen_c_reader@@Base+0x29f0>
   1a7f4:	add	r4, pc, r4
   1a7f8:	add	r1, pc, r1
   1a7fc:	mov	r2, r4
   1a800:	bl	149b8 <fprintf@plt>
   1a804:	ldr	r0, [pc, #196]	; 1a8d0 <__flatcc_fb_gen_c_reader@@Base+0x29f4>
   1a808:	ldr	r3, [pc, #196]	; 1a8d4 <__flatcc_fb_gen_c_reader@@Base+0x29f8>
   1a80c:	mov	r1, r4
   1a810:	mov	r2, #141	; 0x8d
   1a814:	add	r0, pc, r0
   1a818:	add	r3, pc, r3
   1a81c:	bl	14a78 <__assert_fail@plt>
   1a820:	andeq	r6, r2, r2, asr r5
   1a824:	andeq	ip, r2, lr, lsl #18
   1a828:	andeq	sp, r2, sl, lsr #32
   1a82c:	andeq	r1, r5, r4, lsl #21
   1a830:	andeq	ip, r2, fp, lsl ip
   1a834:			; <UNDEFINED> instruction: 0x000264ba
   1a838:	andeq	r7, r3, lr, asr r2
   1a83c:	andeq	r7, r3, r6, lsr r2
   1a840:	ldrdeq	ip, [r2], -r6
   1a844:	andeq	r6, r2, lr, ror #8
   1a848:			; <UNDEFINED> instruction: 0x0003b4b5
   1a84c:	ldrdeq	ip, [r2], -sp
   1a850:	ldrdeq	ip, [r2], -r0
   1a854:	ldrdeq	ip, [r2], -r2
   1a858:	andeq	r7, r3, r2, lsr r1
   1a85c:	andeq	r6, r2, r2, asr r3
   1a860:	muleq	r2, fp, sl
   1a864:	andeq	ip, r2, r6, ror sl
   1a868:	andeq	fp, r3, sp, asr #6
   1a86c:			; <UNDEFINED> instruction: 0x0002c6b0
   1a870:	muleq	r2, r3, r6
   1a874:	andeq	fp, r3, r2, ror r8
   1a878:	andeq	ip, r2, fp, lsr #13
   1a87c:	andeq	ip, r2, sp, asr #13
   1a880:	strdeq	ip, [r2], -r3
   1a884:			; <UNDEFINED> instruction: 0x0002c6bb
   1a888:	andeq	ip, r2, r5, asr #13
   1a88c:			; <UNDEFINED> instruction: 0x0002c6ba
   1a890:	muleq	r3, r6, r7
   1a894:	andeq	ip, r2, lr, asr #13
   1a898:	strdeq	ip, [r2], -r1
   1a89c:	strdeq	ip, [r2], -r9
   1a8a0:	andeq	ip, r2, r6, asr #13
   1a8a4:	andeq	ip, r2, sl, asr #13
   1a8a8:	andeq	ip, r2, r3, asr #7
   1a8ac:	andeq	r5, r2, sp, asr #30
   1a8b0:	strdeq	ip, [r2], -fp
   1a8b4:	andeq	ip, r2, r6, lsl r4
   1a8b8:	andeq	r5, r2, sp, lsr #30
   1a8bc:	ldrdeq	ip, [r2], -fp
   1a8c0:	andeq	r1, r5, r4, asr #17
   1a8c4:	andeq	ip, r2, r1, lsl r7
   1a8c8:	andeq	r5, r2, lr, ror #29
   1a8cc:	andeq	ip, r2, r1, lsr #13
   1a8d0:	muleq	r3, sl, sp
   1a8d4:	andeq	ip, r2, r4, lsl r7
   1a8d8:	push	{r4, sl, fp, lr}
   1a8dc:	add	fp, sp, #8
   1a8e0:	sub	sp, sp, #8
   1a8e4:	mov	r4, r2
   1a8e8:	ldrh	r2, [r1, #8]
   1a8ec:	sub	r2, r2, #3
   1a8f0:	cmp	r2, #3
   1a8f4:	bhi	1a9e0 <__flatcc_fb_gen_c_reader@@Base+0x2b04>
   1a8f8:	add	r3, pc, #4
   1a8fc:	ldr	r2, [r3, r2, lsl #2]
   1a900:	add	pc, r3, r2
   1a904:	andeq	r0, r0, r0, lsl r0
   1a908:	andeq	r0, r0, r8, lsl #1
   1a90c:	andeq	r0, r0, r4, lsr r0
   1a910:	andeq	r0, r0, r0, rrx
   1a914:	vldr	d16, [r1]
   1a918:	cmp	r0, #11
   1a91c:	bne	1a9c4 <__flatcc_fb_gen_c_reader@@Base+0x2ae8>
   1a920:	ldr	r1, [pc, #368]	; 1aa98 <__flatcc_fb_gen_c_reader@@Base+0x2bbc>
   1a924:	vcvt.f32.f64	s0, d16
   1a928:	vcvt.f64.f32	d16, s0
   1a92c:	vmov	r2, r3, d16
   1a930:	add	r1, pc, r1
   1a934:	b	1a9d0 <__flatcc_fb_gen_c_reader@@Base+0x2af4>
   1a938:	sub	r0, r0, #1
   1a93c:	cmp	r0, #9
   1a940:	bcs	1aa30 <__flatcc_fb_gen_c_reader@@Base+0x2b54>
   1a944:	ldrd	r2, [r1]
   1a948:	stm	sp, {r2, r3}
   1a94c:	ldr	r1, [pc, #300]	; 1aa80 <__flatcc_fb_gen_c_reader@@Base+0x2ba4>
   1a950:	add	r1, pc, r1
   1a954:	ldr	r2, [r1, r0, lsl #2]
   1a958:	ldr	r1, [pc, #292]	; 1aa84 <__flatcc_fb_gen_c_reader@@Base+0x2ba8>
   1a95c:	add	r1, pc, r1
   1a960:	b	1a9b4 <__flatcc_fb_gen_c_reader@@Base+0x2ad8>
   1a964:	sub	r0, r0, #1
   1a968:	cmp	r0, #9
   1a96c:	bcs	1aa30 <__flatcc_fb_gen_c_reader@@Base+0x2b54>
   1a970:	ldr	r2, [pc, #280]	; 1aa90 <__flatcc_fb_gen_c_reader@@Base+0x2bb4>
   1a974:	ldrb	r3, [r1]
   1a978:	ldr	r1, [pc, #276]	; 1aa94 <__flatcc_fb_gen_c_reader@@Base+0x2bb8>
   1a97c:	add	r2, pc, r2
   1a980:	add	r1, pc, r1
   1a984:	ldr	r2, [r2, r0, lsl #2]
   1a988:	b	1a9d0 <__flatcc_fb_gen_c_reader@@Base+0x2af4>
   1a98c:	sub	r0, r0, #1
   1a990:	cmp	r0, #9
   1a994:	bcs	1aa30 <__flatcc_fb_gen_c_reader@@Base+0x2b54>
   1a998:	ldrd	r2, [r1]
   1a99c:	stm	sp, {r2, r3}
   1a9a0:	ldr	r1, [pc, #224]	; 1aa88 <__flatcc_fb_gen_c_reader@@Base+0x2bac>
   1a9a4:	add	r1, pc, r1
   1a9a8:	ldr	r2, [r1, r0, lsl #2]
   1a9ac:	ldr	r1, [pc, #216]	; 1aa8c <__flatcc_fb_gen_c_reader@@Base+0x2bb0>
   1a9b0:	add	r1, pc, r1
   1a9b4:	mov	r0, r4
   1a9b8:	bl	14a24 <sprintf@plt>
   1a9bc:	sub	sp, fp, #8
   1a9c0:	pop	{r4, sl, fp, pc}
   1a9c4:	ldr	r1, [pc, #208]	; 1aa9c <__flatcc_fb_gen_c_reader@@Base+0x2bc0>
   1a9c8:	vmov	r2, r3, d16
   1a9cc:	add	r1, pc, r1
   1a9d0:	mov	r0, r4
   1a9d4:	sub	sp, fp, #8
   1a9d8:	pop	{r4, sl, fp, lr}
   1a9dc:	b	14a24 <sprintf@plt>
   1a9e0:	ldr	r0, [pc, #184]	; 1aaa0 <__flatcc_fb_gen_c_reader@@Base+0x2bc4>
   1a9e4:	mov	r3, #260	; 0x104
   1a9e8:	ldr	r0, [pc, r0]
   1a9ec:	ldr	r0, [r0]
   1a9f0:	ldr	r1, [pc, #172]	; 1aaa4 <__flatcc_fb_gen_c_reader@@Base+0x2bc8>
   1a9f4:	add	r1, pc, r1
   1a9f8:	str	r1, [sp]
   1a9fc:	ldr	r1, [pc, #164]	; 1aaa8 <__flatcc_fb_gen_c_reader@@Base+0x2bcc>
   1aa00:	ldr	r4, [pc, #164]	; 1aaac <__flatcc_fb_gen_c_reader@@Base+0x2bd0>
   1aa04:	add	r4, pc, r4
   1aa08:	add	r1, pc, r1
   1aa0c:	mov	r2, r4
   1aa10:	bl	149b8 <fprintf@plt>
   1aa14:	ldr	r0, [pc, #148]	; 1aab0 <__flatcc_fb_gen_c_reader@@Base+0x2bd4>
   1aa18:	ldr	r3, [pc, #148]	; 1aab4 <__flatcc_fb_gen_c_reader@@Base+0x2bd8>
   1aa1c:	mov	r1, r4
   1aa20:	mov	r2, #260	; 0x104
   1aa24:	add	r0, pc, r0
   1aa28:	add	r3, pc, r3
   1aa2c:	bl	14a78 <__assert_fail@plt>
   1aa30:	ldr	r0, [pc, #128]	; 1aab8 <__flatcc_fb_gen_c_reader@@Base+0x2bdc>
   1aa34:	mov	r3, #226	; 0xe2
   1aa38:	ldr	r0, [pc, r0]
   1aa3c:	ldr	r0, [r0]
   1aa40:	ldr	r1, [pc, #116]	; 1aabc <__flatcc_fb_gen_c_reader@@Base+0x2be0>
   1aa44:	add	r1, pc, r1
   1aa48:	str	r1, [sp]
   1aa4c:	ldr	r1, [pc, #108]	; 1aac0 <__flatcc_fb_gen_c_reader@@Base+0x2be4>
   1aa50:	ldr	r4, [pc, #108]	; 1aac4 <__flatcc_fb_gen_c_reader@@Base+0x2be8>
   1aa54:	add	r4, pc, r4
   1aa58:	add	r1, pc, r1
   1aa5c:	mov	r2, r4
   1aa60:	bl	149b8 <fprintf@plt>
   1aa64:	ldr	r0, [pc, #92]	; 1aac8 <__flatcc_fb_gen_c_reader@@Base+0x2bec>
   1aa68:	ldr	r3, [pc, #92]	; 1aacc <__flatcc_fb_gen_c_reader@@Base+0x2bf0>
   1aa6c:	mov	r1, r4
   1aa70:	mov	r2, #226	; 0xe2
   1aa74:	add	r0, pc, r0
   1aa78:	add	r3, pc, r3
   1aa7c:	bl	14a78 <__assert_fail@plt>
   1aa80:	andeq	r1, r5, r8, ror #8
   1aa84:	andeq	ip, r2, sp, lsl #12
   1aa88:	andeq	r1, r5, r4, lsl r4
   1aa8c:	andeq	ip, r2, r2, asr #11
   1aa90:	andeq	r1, r5, ip, lsr r4
   1aa94:	strdeq	ip, [r2], -fp
   1aa98:	andeq	ip, r2, r2, asr r6
   1aa9c:			; <UNDEFINED> instruction: 0x0002c5ba
   1aaa0:			; <UNDEFINED> instruction: 0x000516b4
   1aaa4:	andeq	ip, r2, r1, lsl #10
   1aaa8:	ldrdeq	r5, [r2], -lr
   1aaac:	muleq	r2, r1, r4
   1aab0:	andeq	r6, r3, sl, lsl #23
   1aab4:	andeq	ip, r2, r2, ror #10
   1aab8:	andeq	r1, r5, r4, ror #12
   1aabc:			; <UNDEFINED> instruction: 0x0002c4b1
   1aac0:	andeq	r5, r2, lr, lsl #25
   1aac4:	andeq	ip, r2, r1, asr #8
   1aac8:	andeq	r6, r3, sl, lsr fp
   1aacc:	andeq	ip, r2, r8, ror r5

0001aad0 <__flatcc_gen_sort@@Base>:
   1aad0:	push	{r4, sl, fp, lr}
   1aad4:	add	fp, sp, #8
   1aad8:	sub	sp, sp, #24
   1aadc:	mov	r4, r0
   1aae0:	ldr	r0, [r0, #204]	; 0xcc
   1aae4:	ldr	r1, [pc, #276]	; 1ac00 <__flatcc_gen_sort@@Base+0x130>
   1aae8:	mov	r2, r4
   1aaec:	add	r1, pc, r1
   1aaf0:	bl	149b8 <fprintf@plt>
   1aaf4:	ldr	r0, [r4, #204]	; 0xcc
   1aaf8:	ldr	r1, [pc, #260]	; 1ac04 <__flatcc_gen_sort@@Base+0x134>
   1aafc:	mov	r2, r4
   1ab00:	mov	r3, r4
   1ab04:	add	r1, pc, r1
   1ab08:	bl	149b8 <fprintf@plt>
   1ab0c:	ldr	r0, [r4, #204]	; 0xcc
   1ab10:	str	r4, [sp]
   1ab14:	mov	r2, r4
   1ab18:	mov	r3, r4
   1ab1c:	ldr	r1, [pc, #228]	; 1ac08 <__flatcc_gen_sort@@Base+0x138>
   1ab20:	add	r1, pc, r1
   1ab24:	bl	149b8 <fprintf@plt>
   1ab28:	ldr	r0, [r4, #204]	; 0xcc
   1ab2c:	str	r4, [sp]
   1ab30:	str	r4, [sp, #4]
   1ab34:	mov	r2, r4
   1ab38:	mov	r3, r4
   1ab3c:	ldr	r1, [pc, #200]	; 1ac0c <__flatcc_gen_sort@@Base+0x13c>
   1ab40:	add	r1, pc, r1
   1ab44:	bl	149b8 <fprintf@plt>
   1ab48:	ldr	r0, [r4, #204]	; 0xcc
   1ab4c:	ldr	r1, [pc, #188]	; 1ac10 <__flatcc_gen_sort@@Base+0x140>
   1ab50:	mov	r2, r4
   1ab54:	mov	r3, r4
   1ab58:	add	r1, pc, r1
   1ab5c:	bl	149b8 <fprintf@plt>
   1ab60:	ldr	r0, [r4, #204]	; 0xcc
   1ab64:	str	r4, [sp]
   1ab68:	str	r4, [sp, #4]
   1ab6c:	mov	r2, r4
   1ab70:	mov	r3, r4
   1ab74:	ldr	r1, [pc, #152]	; 1ac14 <__flatcc_gen_sort@@Base+0x144>
   1ab78:	add	r1, pc, r1
   1ab7c:	bl	149b8 <fprintf@plt>
   1ab80:	ldr	r0, [r4, #204]	; 0xcc
   1ab84:	str	r4, [sp]
   1ab88:	str	r4, [sp, #4]
   1ab8c:	str	r4, [sp, #8]
   1ab90:	str	r4, [sp, #12]
   1ab94:	mov	r2, r4
   1ab98:	mov	r3, r4
   1ab9c:	ldr	r1, [pc, #116]	; 1ac18 <__flatcc_gen_sort@@Base+0x148>
   1aba0:	add	r1, pc, r1
   1aba4:	bl	149b8 <fprintf@plt>
   1aba8:	ldr	r0, [r4, #204]	; 0xcc
   1abac:	str	r4, [sp]
   1abb0:	str	r4, [sp, #4]
   1abb4:	mov	r2, r4
   1abb8:	mov	r3, r4
   1abbc:	ldr	r1, [pc, #88]	; 1ac1c <__flatcc_gen_sort@@Base+0x14c>
   1abc0:	add	r1, pc, r1
   1abc4:	bl	149b8 <fprintf@plt>
   1abc8:	ldr	r0, [r4, #204]	; 0xcc
   1abcc:	str	r4, [sp]
   1abd0:	str	r4, [sp, #4]
   1abd4:	str	r4, [sp, #8]
   1abd8:	str	r4, [sp, #12]
   1abdc:	str	r4, [sp, #16]
   1abe0:	mov	r2, r4
   1abe4:	mov	r3, r4
   1abe8:	ldr	r1, [pc, #48]	; 1ac20 <__flatcc_gen_sort@@Base+0x150>
   1abec:	add	r1, pc, r1
   1abf0:	bl	149b8 <fprintf@plt>
   1abf4:	mov	r0, #0
   1abf8:	sub	sp, fp, #8
   1abfc:	pop	{r4, sl, fp, pc}
   1ac00:	andeq	sp, r2, sl, lsr r5
   1ac04:	strdeq	sp, [r2], -r0
   1ac08:	andeq	sp, r2, r4, ror #19
   1ac0c:	muleq	r2, r8, sl
   1ac10:	andeq	sp, r2, r4, lsl fp
   1ac14:	andeq	sp, r2, fp, lsl #25
   1ac18:	andeq	sp, r2, r8, ror #25
   1ac1c:	andeq	sp, r2, r6, asr sp
   1ac20:	andeq	sp, r2, fp, lsl #27

0001ac24 <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1ac24:	push	{r4, r5, fp, lr}
   1ac28:	add	fp, sp, #8
   1ac2c:	sub	sp, sp, #8
   1ac30:	mov	r5, r0
   1ac34:	ldr	r0, [r0, #204]	; 0xcc
   1ac38:	ldr	r1, [pc, #2196]	; 1b4d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b0>
   1ac3c:	add	r4, r5, #102	; 0x66
   1ac40:	mov	r2, r4
   1ac44:	add	r1, pc, r1
   1ac48:	bl	149b8 <fprintf@plt>
   1ac4c:	ldr	r0, [r5, #204]	; 0xcc
   1ac50:	ldr	r1, [pc, #2176]	; 1b4d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b4>
   1ac54:	mov	r2, r4
   1ac58:	add	r1, pc, r1
   1ac5c:	bl	149b8 <fprintf@plt>
   1ac60:	ldr	r3, [r5, #204]	; 0xcc
   1ac64:	ldr	r0, [pc, #2160]	; 1b4dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8b8>
   1ac68:	mov	r1, #81	; 0x51
   1ac6c:	mov	r2, #1
   1ac70:	add	r0, pc, r0
   1ac74:	bl	1494c <fwrite@plt>
   1ac78:	ldr	r3, [r5, #204]	; 0xcc
   1ac7c:	ldr	r0, [pc, #2140]	; 1b4e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8bc>
   1ac80:	mov	r1, #53	; 0x35
   1ac84:	mov	r2, #1
   1ac88:	add	r0, pc, r0
   1ac8c:	bl	1494c <fwrite@plt>
   1ac90:	ldr	r0, [r5, #212]	; 0xd4
   1ac94:	ldr	r0, [r0, #140]	; 0x8c
   1ac98:	cmp	r0, #0
   1ac9c:	beq	1acb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x94>
   1aca0:	ldr	r3, [r5, #204]	; 0xcc
   1aca4:	ldr	r0, [pc, #2104]	; 1b4e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c0>
   1aca8:	mov	r1, #36	; 0x24
   1acac:	mov	r2, #1
   1acb0:	add	r0, pc, r0
   1acb4:	bl	1494c <fwrite@plt>
   1acb8:	ldr	r3, [r5, #204]	; 0xcc
   1acbc:	ldr	r0, [pc, #2084]	; 1b4e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c4>
   1acc0:	mov	r1, #22
   1acc4:	mov	r2, #1
   1acc8:	add	r0, pc, r0
   1accc:	bl	1494c <fwrite@plt>
   1acd0:	ldr	r3, [r5, #204]	; 0xcc
   1acd4:	ldr	r0, [pc, #2064]	; 1b4ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c8>
   1acd8:	mov	r1, #35	; 0x23
   1acdc:	mov	r2, #1
   1ace0:	add	r0, pc, r0
   1ace4:	bl	1494c <fwrite@plt>
   1ace8:	ldr	r3, [r5, #204]	; 0xcc
   1acec:	ldr	r0, [pc, #2044]	; 1b4f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8cc>
   1acf0:	mov	r1, #7
   1acf4:	mov	r2, #1
   1acf8:	add	r0, pc, r0
   1acfc:	bl	1494c <fwrite@plt>
   1ad00:	ldr	r1, [pc, #2028]	; 1b4f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d0>
   1ad04:	mov	r0, r5
   1ad08:	add	r1, pc, r1
   1ad0c:	bl	148e0 <strcmp@plt>
   1ad10:	cmp	r0, #0
   1ad14:	beq	1ad90 <__flatcc_fb_gen_common_c_builder_header@@Base+0x16c>
   1ad18:	ldr	r0, [r5, #204]	; 0xcc
   1ad1c:	ldr	r1, [pc, #2004]	; 1b4f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d4>
   1ad20:	mov	r2, r5
   1ad24:	add	r1, pc, r1
   1ad28:	bl	149b8 <fprintf@plt>
   1ad2c:	ldr	r0, [r5, #204]	; 0xcc
   1ad30:	ldr	r1, [pc, #1988]	; 1b4fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d8>
   1ad34:	mov	r2, r5
   1ad38:	add	r1, pc, r1
   1ad3c:	bl	149b8 <fprintf@plt>
   1ad40:	ldr	r0, [r5, #204]	; 0xcc
   1ad44:	ldr	r1, [pc, #1972]	; 1b500 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8dc>
   1ad48:	mov	r2, r5
   1ad4c:	add	r1, pc, r1
   1ad50:	bl	149b8 <fprintf@plt>
   1ad54:	ldr	r0, [r5, #204]	; 0xcc
   1ad58:	ldr	r1, [pc, #1956]	; 1b504 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e0>
   1ad5c:	mov	r2, r5
   1ad60:	add	r1, pc, r1
   1ad64:	bl	149b8 <fprintf@plt>
   1ad68:	ldr	r0, [r5, #204]	; 0xcc
   1ad6c:	ldr	r1, [pc, #1940]	; 1b508 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e4>
   1ad70:	mov	r2, r5
   1ad74:	add	r1, pc, r1
   1ad78:	bl	149b8 <fprintf@plt>
   1ad7c:	ldr	r0, [r5, #204]	; 0xcc
   1ad80:	ldr	r1, [pc, #1924]	; 1b50c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e8>
   1ad84:	mov	r2, r5
   1ad88:	add	r1, pc, r1
   1ad8c:	bl	149b8 <fprintf@plt>
   1ad90:	ldr	r0, [r5, #204]	; 0xcc
   1ad94:	ldr	r1, [pc, #1908]	; 1b510 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ec>
   1ad98:	mov	r2, r5
   1ad9c:	mov	r3, r5
   1ada0:	add	r1, pc, r1
   1ada4:	bl	149b8 <fprintf@plt>
   1ada8:	ldr	r0, [r5, #204]	; 0xcc
   1adac:	ldr	r1, [pc, #1888]	; 1b514 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f0>
   1adb0:	mov	r2, r5
   1adb4:	mov	r3, r5
   1adb8:	add	r1, pc, r1
   1adbc:	bl	149b8 <fprintf@plt>
   1adc0:	ldr	r1, [pc, #1872]	; 1b518 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f4>
   1adc4:	mov	r0, r5
   1adc8:	add	r1, pc, r1
   1adcc:	bl	148e0 <strcmp@plt>
   1add0:	cmp	r0, #0
   1add4:	beq	1ae00 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1dc>
   1add8:	ldr	r0, [r5, #204]	; 0xcc
   1addc:	ldr	r1, [pc, #1848]	; 1b51c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f8>
   1ade0:	mov	r2, r5
   1ade4:	add	r1, pc, r1
   1ade8:	bl	149b8 <fprintf@plt>
   1adec:	ldr	r0, [r5, #204]	; 0xcc
   1adf0:	ldr	r1, [pc, #1832]	; 1b520 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8fc>
   1adf4:	mov	r2, r5
   1adf8:	add	r1, pc, r1
   1adfc:	bl	149b8 <fprintf@plt>
   1ae00:	ldr	r1, [r5, #204]	; 0xcc
   1ae04:	mov	r0, #10
   1ae08:	bl	14a18 <fputc@plt>
   1ae0c:	ldr	r0, [r5, #204]	; 0xcc
   1ae10:	ldr	r1, [pc, #1804]	; 1b524 <__flatcc_fb_gen_common_c_builder_header@@Base+0x900>
   1ae14:	mov	r2, r5
   1ae18:	add	r1, pc, r1
   1ae1c:	bl	149b8 <fprintf@plt>
   1ae20:	ldr	r0, [r5, #204]	; 0xcc
   1ae24:	ldr	r1, [pc, #1788]	; 1b528 <__flatcc_fb_gen_common_c_builder_header@@Base+0x904>
   1ae28:	mov	r2, r5
   1ae2c:	add	r1, pc, r1
   1ae30:	bl	149b8 <fprintf@plt>
   1ae34:	ldr	r0, [r5, #204]	; 0xcc
   1ae38:	str	r5, [sp]
   1ae3c:	mov	r2, r5
   1ae40:	mov	r3, r5
   1ae44:	ldr	r1, [pc, #1760]	; 1b52c <__flatcc_fb_gen_common_c_builder_header@@Base+0x908>
   1ae48:	add	r1, pc, r1
   1ae4c:	bl	149b8 <fprintf@plt>
   1ae50:	ldr	r0, [r5, #204]	; 0xcc
   1ae54:	ldr	r1, [pc, #1748]	; 1b530 <__flatcc_fb_gen_common_c_builder_header@@Base+0x90c>
   1ae58:	mov	r2, r5
   1ae5c:	add	r1, pc, r1
   1ae60:	bl	149b8 <fprintf@plt>
   1ae64:	ldr	r0, [r5, #204]	; 0xcc
   1ae68:	ldr	r1, [pc, #1732]	; 1b534 <__flatcc_fb_gen_common_c_builder_header@@Base+0x910>
   1ae6c:	mov	r2, r5
   1ae70:	add	r1, pc, r1
   1ae74:	bl	149b8 <fprintf@plt>
   1ae78:	ldr	r0, [r5, #204]	; 0xcc
   1ae7c:	ldr	r1, [pc, #1716]	; 1b538 <__flatcc_fb_gen_common_c_builder_header@@Base+0x914>
   1ae80:	mov	r2, r5
   1ae84:	add	r1, pc, r1
   1ae88:	bl	149b8 <fprintf@plt>
   1ae8c:	ldr	r0, [r5, #204]	; 0xcc
   1ae90:	ldr	r1, [pc, #1700]	; 1b53c <__flatcc_fb_gen_common_c_builder_header@@Base+0x918>
   1ae94:	mov	r2, r5
   1ae98:	add	r1, pc, r1
   1ae9c:	bl	149b8 <fprintf@plt>
   1aea0:	ldr	r0, [r5, #204]	; 0xcc
   1aea4:	ldr	r1, [pc, #1684]	; 1b540 <__flatcc_fb_gen_common_c_builder_header@@Base+0x91c>
   1aea8:	mov	r2, r5
   1aeac:	mov	r3, r5
   1aeb0:	add	r1, pc, r1
   1aeb4:	bl	149b8 <fprintf@plt>
   1aeb8:	ldr	r0, [r5, #204]	; 0xcc
   1aebc:	str	r5, [sp]
   1aec0:	mov	r2, r5
   1aec4:	mov	r3, r5
   1aec8:	ldr	r1, [pc, #1652]	; 1b544 <__flatcc_fb_gen_common_c_builder_header@@Base+0x920>
   1aecc:	add	r1, pc, r1
   1aed0:	bl	149b8 <fprintf@plt>
   1aed4:	ldr	r0, [r5, #204]	; 0xcc
   1aed8:	ldr	r1, [pc, #1640]	; 1b548 <__flatcc_fb_gen_common_c_builder_header@@Base+0x924>
   1aedc:	mov	r2, r5
   1aee0:	add	r1, pc, r1
   1aee4:	bl	149b8 <fprintf@plt>
   1aee8:	ldr	r0, [r5, #204]	; 0xcc
   1aeec:	ldr	r1, [pc, #1624]	; 1b54c <__flatcc_fb_gen_common_c_builder_header@@Base+0x928>
   1aef0:	mov	r2, r5
   1aef4:	add	r1, pc, r1
   1aef8:	bl	149b8 <fprintf@plt>
   1aefc:	ldr	r0, [r5, #204]	; 0xcc
   1af00:	ldr	r1, [pc, #1608]	; 1b550 <__flatcc_fb_gen_common_c_builder_header@@Base+0x92c>
   1af04:	mov	r2, r5
   1af08:	add	r1, pc, r1
   1af0c:	bl	149b8 <fprintf@plt>
   1af10:	ldr	r0, [r5, #204]	; 0xcc
   1af14:	ldr	r1, [pc, #1592]	; 1b554 <__flatcc_fb_gen_common_c_builder_header@@Base+0x930>
   1af18:	mov	r2, r5
   1af1c:	mov	r3, r5
   1af20:	add	r1, pc, r1
   1af24:	bl	149b8 <fprintf@plt>
   1af28:	ldr	r0, [r5, #204]	; 0xcc
   1af2c:	ldr	r1, [pc, #1572]	; 1b558 <__flatcc_fb_gen_common_c_builder_header@@Base+0x934>
   1af30:	mov	r2, r5
   1af34:	add	r1, pc, r1
   1af38:	bl	149b8 <fprintf@plt>
   1af3c:	ldr	r0, [r5, #204]	; 0xcc
   1af40:	str	r5, [sp]
   1af44:	mov	r2, r5
   1af48:	mov	r3, r5
   1af4c:	ldr	r1, [pc, #1544]	; 1b55c <__flatcc_fb_gen_common_c_builder_header@@Base+0x938>
   1af50:	add	r1, pc, r1
   1af54:	bl	149b8 <fprintf@plt>
   1af58:	ldr	r0, [r5, #204]	; 0xcc
   1af5c:	str	r5, [sp]
   1af60:	str	r5, [sp, #4]
   1af64:	mov	r2, r5
   1af68:	mov	r3, r5
   1af6c:	ldr	r1, [pc, #1516]	; 1b560 <__flatcc_fb_gen_common_c_builder_header@@Base+0x93c>
   1af70:	add	r1, pc, r1
   1af74:	bl	149b8 <fprintf@plt>
   1af78:	ldr	r0, [r5, #204]	; 0xcc
   1af7c:	ldr	r1, [pc, #1504]	; 1b564 <__flatcc_fb_gen_common_c_builder_header@@Base+0x940>
   1af80:	mov	r2, r5
   1af84:	mov	r3, r5
   1af88:	add	r1, pc, r1
   1af8c:	bl	149b8 <fprintf@plt>
   1af90:	ldr	r0, [r5, #204]	; 0xcc
   1af94:	str	r5, [sp]
   1af98:	str	r5, [sp, #4]
   1af9c:	mov	r2, r5
   1afa0:	mov	r3, r5
   1afa4:	ldr	r1, [pc, #1468]	; 1b568 <__flatcc_fb_gen_common_c_builder_header@@Base+0x944>
   1afa8:	add	r1, pc, r1
   1afac:	bl	149b8 <fprintf@plt>
   1afb0:	ldr	r0, [r5, #204]	; 0xcc
   1afb4:	ldr	r1, [pc, #1456]	; 1b56c <__flatcc_fb_gen_common_c_builder_header@@Base+0x948>
   1afb8:	mov	r2, r5
   1afbc:	mov	r3, r5
   1afc0:	add	r1, pc, r1
   1afc4:	bl	149b8 <fprintf@plt>
   1afc8:	ldr	r0, [r5, #204]	; 0xcc
   1afcc:	ldr	r1, [pc, #1436]	; 1b570 <__flatcc_fb_gen_common_c_builder_header@@Base+0x94c>
   1afd0:	mov	r2, r5
   1afd4:	add	r1, pc, r1
   1afd8:	bl	149b8 <fprintf@plt>
   1afdc:	ldr	r0, [r5, #204]	; 0xcc
   1afe0:	ldr	r1, [pc, #1420]	; 1b574 <__flatcc_fb_gen_common_c_builder_header@@Base+0x950>
   1afe4:	mov	r2, r5
   1afe8:	add	r1, pc, r1
   1afec:	bl	149b8 <fprintf@plt>
   1aff0:	ldr	r0, [r5, #204]	; 0xcc
   1aff4:	ldr	r1, [pc, #1404]	; 1b578 <__flatcc_fb_gen_common_c_builder_header@@Base+0x954>
   1aff8:	mov	r2, r5
   1affc:	add	r1, pc, r1
   1b000:	bl	149b8 <fprintf@plt>
   1b004:	ldr	r0, [r5, #204]	; 0xcc
   1b008:	ldr	r1, [pc, #1388]	; 1b57c <__flatcc_fb_gen_common_c_builder_header@@Base+0x958>
   1b00c:	mov	r2, r5
   1b010:	add	r1, pc, r1
   1b014:	bl	149b8 <fprintf@plt>
   1b018:	ldr	r0, [r5, #204]	; 0xcc
   1b01c:	ldr	r1, [pc, #1372]	; 1b580 <__flatcc_fb_gen_common_c_builder_header@@Base+0x95c>
   1b020:	mov	r2, r5
   1b024:	mov	r3, r5
   1b028:	add	r1, pc, r1
   1b02c:	bl	149b8 <fprintf@plt>
   1b030:	ldr	r0, [r5, #204]	; 0xcc
   1b034:	ldr	r1, [pc, #1352]	; 1b584 <__flatcc_fb_gen_common_c_builder_header@@Base+0x960>
   1b038:	mov	r2, r5
   1b03c:	add	r1, pc, r1
   1b040:	bl	149b8 <fprintf@plt>
   1b044:	ldr	r0, [r5, #204]	; 0xcc
   1b048:	ldr	r1, [pc, #1336]	; 1b588 <__flatcc_fb_gen_common_c_builder_header@@Base+0x964>
   1b04c:	mov	r2, r5
   1b050:	add	r1, pc, r1
   1b054:	bl	149b8 <fprintf@plt>
   1b058:	ldr	r0, [r5, #204]	; 0xcc
   1b05c:	ldr	r1, [pc, #1320]	; 1b58c <__flatcc_fb_gen_common_c_builder_header@@Base+0x968>
   1b060:	mov	r2, r5
   1b064:	mov	r3, r5
   1b068:	add	r1, pc, r1
   1b06c:	bl	149b8 <fprintf@plt>
   1b070:	ldr	r0, [r5, #204]	; 0xcc
   1b074:	ldr	r1, [pc, #1300]	; 1b590 <__flatcc_fb_gen_common_c_builder_header@@Base+0x96c>
   1b078:	mov	r2, r5
   1b07c:	mov	r3, r5
   1b080:	add	r1, pc, r1
   1b084:	bl	149b8 <fprintf@plt>
   1b088:	ldr	r0, [r5, #204]	; 0xcc
   1b08c:	ldr	r1, [pc, #1280]	; 1b594 <__flatcc_fb_gen_common_c_builder_header@@Base+0x970>
   1b090:	mov	r2, r5
   1b094:	mov	r3, r5
   1b098:	add	r1, pc, r1
   1b09c:	bl	149b8 <fprintf@plt>
   1b0a0:	ldr	r0, [r5, #204]	; 0xcc
   1b0a4:	ldr	r1, [pc, #1260]	; 1b598 <__flatcc_fb_gen_common_c_builder_header@@Base+0x974>
   1b0a8:	mov	r2, r5
   1b0ac:	mov	r3, r5
   1b0b0:	add	r1, pc, r1
   1b0b4:	bl	149b8 <fprintf@plt>
   1b0b8:	ldr	r0, [r5, #204]	; 0xcc
   1b0bc:	str	r5, [sp]
   1b0c0:	mov	r2, r5
   1b0c4:	mov	r3, r5
   1b0c8:	ldr	r1, [pc, #1228]	; 1b59c <__flatcc_fb_gen_common_c_builder_header@@Base+0x978>
   1b0cc:	add	r1, pc, r1
   1b0d0:	bl	149b8 <fprintf@plt>
   1b0d4:	ldr	r0, [r5, #204]	; 0xcc
   1b0d8:	ldr	r1, [pc, #1216]	; 1b5a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x97c>
   1b0dc:	mov	r2, r5
   1b0e0:	mov	r3, r5
   1b0e4:	add	r1, pc, r1
   1b0e8:	bl	149b8 <fprintf@plt>
   1b0ec:	ldr	r0, [r5, #204]	; 0xcc
   1b0f0:	ldr	r1, [pc, #1196]	; 1b5a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x980>
   1b0f4:	mov	r2, r5
   1b0f8:	add	r1, pc, r1
   1b0fc:	bl	149b8 <fprintf@plt>
   1b100:	ldr	r0, [r5, #204]	; 0xcc
   1b104:	ldr	r1, [pc, #1180]	; 1b5a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x984>
   1b108:	mov	r2, r5
   1b10c:	add	r1, pc, r1
   1b110:	bl	149b8 <fprintf@plt>
   1b114:	ldr	r0, [r5, #204]	; 0xcc
   1b118:	ldr	r1, [pc, #1164]	; 1b5ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x988>
   1b11c:	mov	r2, r5
   1b120:	add	r1, pc, r1
   1b124:	bl	149b8 <fprintf@plt>
   1b128:	ldr	r0, [r5, #204]	; 0xcc
   1b12c:	str	r5, [sp]
   1b130:	mov	r2, r5
   1b134:	mov	r3, r5
   1b138:	ldr	r1, [pc, #1136]	; 1b5b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x98c>
   1b13c:	add	r1, pc, r1
   1b140:	bl	149b8 <fprintf@plt>
   1b144:	ldr	r0, [r5, #204]	; 0xcc
   1b148:	ldr	r1, [pc, #1124]	; 1b5b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x990>
   1b14c:	mov	r2, r5
   1b150:	add	r1, pc, r1
   1b154:	bl	149b8 <fprintf@plt>
   1b158:	ldr	r0, [r5, #204]	; 0xcc
   1b15c:	ldr	r1, [pc, #1108]	; 1b5b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x994>
   1b160:	mov	r2, r5
   1b164:	add	r1, pc, r1
   1b168:	bl	149b8 <fprintf@plt>
   1b16c:	ldr	r0, [r5, #204]	; 0xcc
   1b170:	ldr	r1, [pc, #1092]	; 1b5bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x998>
   1b174:	mov	r2, r5
   1b178:	add	r1, pc, r1
   1b17c:	bl	149b8 <fprintf@plt>
   1b180:	ldr	r0, [r5, #204]	; 0xcc
   1b184:	ldr	r1, [pc, #1076]	; 1b5c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x99c>
   1b188:	mov	r2, r5
   1b18c:	add	r1, pc, r1
   1b190:	bl	149b8 <fprintf@plt>
   1b194:	ldr	r0, [r5, #204]	; 0xcc
   1b198:	ldr	r1, [pc, #1060]	; 1b5c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a0>
   1b19c:	mov	r2, r5
   1b1a0:	mov	r3, r5
   1b1a4:	add	r1, pc, r1
   1b1a8:	bl	149b8 <fprintf@plt>
   1b1ac:	ldr	r0, [r5, #204]	; 0xcc
   1b1b0:	ldr	r1, [pc, #1040]	; 1b5c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a4>
   1b1b4:	mov	r2, r5
   1b1b8:	add	r1, pc, r1
   1b1bc:	bl	149b8 <fprintf@plt>
   1b1c0:	ldr	r0, [r5, #204]	; 0xcc
   1b1c4:	ldr	r1, [pc, #1024]	; 1b5cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a8>
   1b1c8:	mov	r2, r5
   1b1cc:	add	r1, pc, r1
   1b1d0:	bl	149b8 <fprintf@plt>
   1b1d4:	ldr	r0, [r5, #204]	; 0xcc
   1b1d8:	ldr	r1, [pc, #1008]	; 1b5d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ac>
   1b1dc:	mov	r2, r5
   1b1e0:	add	r1, pc, r1
   1b1e4:	bl	149b8 <fprintf@plt>
   1b1e8:	ldr	r0, [r5, #204]	; 0xcc
   1b1ec:	ldr	r1, [pc, #992]	; 1b5d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b0>
   1b1f0:	mov	r2, r5
   1b1f4:	add	r1, pc, r1
   1b1f8:	bl	149b8 <fprintf@plt>
   1b1fc:	ldr	r0, [r5, #204]	; 0xcc
   1b200:	ldr	r1, [pc, #976]	; 1b5d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b4>
   1b204:	mov	r2, r5
   1b208:	add	r1, pc, r1
   1b20c:	bl	149b8 <fprintf@plt>
   1b210:	ldr	r0, [r5, #204]	; 0xcc
   1b214:	ldr	r1, [pc, #960]	; 1b5dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b8>
   1b218:	mov	r2, r5
   1b21c:	add	r1, pc, r1
   1b220:	bl	149b8 <fprintf@plt>
   1b224:	ldr	r0, [r5, #204]	; 0xcc
   1b228:	ldr	r1, [pc, #944]	; 1b5e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9bc>
   1b22c:	mov	r2, r5
   1b230:	add	r1, pc, r1
   1b234:	bl	149b8 <fprintf@plt>
   1b238:	ldr	r0, [r5, #204]	; 0xcc
   1b23c:	ldr	r1, [pc, #928]	; 1b5e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c0>
   1b240:	mov	r2, r5
   1b244:	add	r1, pc, r1
   1b248:	bl	149b8 <fprintf@plt>
   1b24c:	ldr	r0, [r5, #204]	; 0xcc
   1b250:	ldr	r1, [pc, #912]	; 1b5e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c4>
   1b254:	mov	r2, r5
   1b258:	add	r1, pc, r1
   1b25c:	bl	149b8 <fprintf@plt>
   1b260:	ldr	r0, [r5, #204]	; 0xcc
   1b264:	ldr	r1, [pc, #896]	; 1b5ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c8>
   1b268:	mov	r2, r5
   1b26c:	add	r1, pc, r1
   1b270:	bl	149b8 <fprintf@plt>
   1b274:	ldr	r0, [r5, #204]	; 0xcc
   1b278:	ldr	r1, [pc, #880]	; 1b5f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9cc>
   1b27c:	mov	r2, r5
   1b280:	add	r1, pc, r1
   1b284:	bl	149b8 <fprintf@plt>
   1b288:	ldr	r0, [r5, #204]	; 0xcc
   1b28c:	ldr	r1, [pc, #864]	; 1b5f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d0>
   1b290:	mov	r2, r5
   1b294:	add	r1, pc, r1
   1b298:	bl	149b8 <fprintf@plt>
   1b29c:	ldr	r0, [r5, #204]	; 0xcc
   1b2a0:	ldr	r1, [pc, #848]	; 1b5f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d4>
   1b2a4:	mov	r2, r5
   1b2a8:	add	r1, pc, r1
   1b2ac:	bl	149b8 <fprintf@plt>
   1b2b0:	ldr	r0, [r5, #204]	; 0xcc
   1b2b4:	ldr	r1, [pc, #832]	; 1b5fc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d8>
   1b2b8:	mov	r2, r5
   1b2bc:	add	r1, pc, r1
   1b2c0:	bl	149b8 <fprintf@plt>
   1b2c4:	ldr	r0, [r5, #204]	; 0xcc
   1b2c8:	ldr	r1, [pc, #816]	; 1b600 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9dc>
   1b2cc:	mov	r2, r5
   1b2d0:	add	r1, pc, r1
   1b2d4:	bl	149b8 <fprintf@plt>
   1b2d8:	ldr	r0, [r5, #204]	; 0xcc
   1b2dc:	ldr	r1, [pc, #800]	; 1b604 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e0>
   1b2e0:	mov	r2, r5
   1b2e4:	add	r1, pc, r1
   1b2e8:	bl	149b8 <fprintf@plt>
   1b2ec:	ldr	r0, [r5, #204]	; 0xcc
   1b2f0:	ldr	r1, [pc, #784]	; 1b608 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e4>
   1b2f4:	mov	r2, r5
   1b2f8:	add	r1, pc, r1
   1b2fc:	bl	149b8 <fprintf@plt>
   1b300:	ldr	r1, [r5, #204]	; 0xcc
   1b304:	mov	r0, #10
   1b308:	bl	14a18 <fputc@plt>
   1b30c:	ldr	r0, [r5, #204]	; 0xcc
   1b310:	str	r5, [sp]
   1b314:	mov	r2, r5
   1b318:	mov	r3, r5
   1b31c:	ldr	r1, [pc, #744]	; 1b60c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e8>
   1b320:	add	r1, pc, r1
   1b324:	bl	149b8 <fprintf@plt>
   1b328:	ldr	r0, [r5, #204]	; 0xcc
   1b32c:	str	r5, [sp]
   1b330:	mov	r2, r5
   1b334:	mov	r3, r5
   1b338:	ldr	r1, [pc, #720]	; 1b610 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ec>
   1b33c:	add	r1, pc, r1
   1b340:	bl	149b8 <fprintf@plt>
   1b344:	ldr	r0, [r5, #204]	; 0xcc
   1b348:	str	r5, [sp]
   1b34c:	str	r5, [sp, #4]
   1b350:	mov	r2, r5
   1b354:	mov	r3, r5
   1b358:	ldr	r1, [pc, #692]	; 1b614 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f0>
   1b35c:	add	r1, pc, r1
   1b360:	bl	149b8 <fprintf@plt>
   1b364:	ldr	r0, [r5, #204]	; 0xcc
   1b368:	str	r5, [sp]
   1b36c:	mov	r2, r5
   1b370:	mov	r3, r5
   1b374:	ldr	r1, [pc, #668]	; 1b618 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f4>
   1b378:	add	r1, pc, r1
   1b37c:	bl	149b8 <fprintf@plt>
   1b380:	ldr	r0, [r5, #204]	; 0xcc
   1b384:	str	r5, [sp]
   1b388:	mov	r2, r5
   1b38c:	mov	r3, r5
   1b390:	ldr	r1, [pc, #644]	; 1b61c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f8>
   1b394:	add	r1, pc, r1
   1b398:	bl	149b8 <fprintf@plt>
   1b39c:	ldr	r0, [r5, #204]	; 0xcc
   1b3a0:	str	r5, [sp]
   1b3a4:	mov	r2, r5
   1b3a8:	mov	r3, r5
   1b3ac:	ldr	r1, [pc, #620]	; 1b620 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9fc>
   1b3b0:	add	r1, pc, r1
   1b3b4:	bl	149b8 <fprintf@plt>
   1b3b8:	ldr	r0, [r5, #204]	; 0xcc
   1b3bc:	str	r5, [sp]
   1b3c0:	mov	r2, r5
   1b3c4:	mov	r3, r5
   1b3c8:	ldr	r1, [pc, #596]	; 1b624 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa00>
   1b3cc:	add	r1, pc, r1
   1b3d0:	bl	149b8 <fprintf@plt>
   1b3d4:	ldr	r0, [r5, #204]	; 0xcc
   1b3d8:	str	r5, [sp]
   1b3dc:	mov	r2, r5
   1b3e0:	mov	r3, r5
   1b3e4:	ldr	r1, [pc, #572]	; 1b628 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa04>
   1b3e8:	add	r1, pc, r1
   1b3ec:	bl	149b8 <fprintf@plt>
   1b3f0:	ldr	r0, [r5, #204]	; 0xcc
   1b3f4:	str	r5, [sp]
   1b3f8:	mov	r2, r5
   1b3fc:	mov	r3, r5
   1b400:	ldr	r1, [pc, #548]	; 1b62c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa08>
   1b404:	add	r1, pc, r1
   1b408:	bl	149b8 <fprintf@plt>
   1b40c:	ldr	r0, [r5, #204]	; 0xcc
   1b410:	str	r5, [sp]
   1b414:	mov	r2, r5
   1b418:	mov	r3, r5
   1b41c:	ldr	r1, [pc, #524]	; 1b630 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa0c>
   1b420:	add	r1, pc, r1
   1b424:	bl	149b8 <fprintf@plt>
   1b428:	ldr	r0, [r5, #204]	; 0xcc
   1b42c:	str	r5, [sp]
   1b430:	mov	r2, r5
   1b434:	mov	r3, r5
   1b438:	ldr	r1, [pc, #500]	; 1b634 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa10>
   1b43c:	add	r1, pc, r1
   1b440:	bl	149b8 <fprintf@plt>
   1b444:	ldr	r1, [r5, #204]	; 0xcc
   1b448:	mov	r0, #10
   1b44c:	bl	14a18 <fputc@plt>
   1b450:	ldr	r0, [r5, #204]	; 0xcc
   1b454:	ldr	r1, [pc, #476]	; 1b638 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa14>
   1b458:	mov	r2, r5
   1b45c:	mov	r3, r5
   1b460:	add	r1, pc, r1
   1b464:	bl	149b8 <fprintf@plt>
   1b468:	ldr	r1, [r5, #204]	; 0xcc
   1b46c:	mov	r0, #10
   1b470:	bl	14a18 <fputc@plt>
   1b474:	ldr	r0, [r5, #204]	; 0xcc
   1b478:	ldr	r1, [pc, #444]	; 1b63c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa18>
   1b47c:	mov	r2, r5
   1b480:	mov	r3, r5
   1b484:	add	r1, pc, r1
   1b488:	bl	149b8 <fprintf@plt>
   1b48c:	ldr	r0, [r5, #212]	; 0xd4
   1b490:	ldr	r0, [r0, #140]	; 0x8c
   1b494:	cmp	r0, #0
   1b498:	beq	1b4b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x890>
   1b49c:	ldr	r3, [r5, #204]	; 0xcc
   1b4a0:	ldr	r0, [pc, #408]	; 1b640 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa1c>
   1b4a4:	mov	r1, #36	; 0x24
   1b4a8:	mov	r2, #1
   1b4ac:	add	r0, pc, r0
   1b4b0:	bl	1494c <fwrite@plt>
   1b4b4:	ldr	r0, [r5, #204]	; 0xcc
   1b4b8:	ldr	r1, [pc, #388]	; 1b644 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa20>
   1b4bc:	mov	r2, r4
   1b4c0:	add	r1, pc, r1
   1b4c4:	bl	149b8 <fprintf@plt>
   1b4c8:	mov	r0, #0
   1b4cc:	sub	sp, fp, #8
   1b4d0:	pop	{r4, r5, fp, pc}
   1b4d4:	andeq	sp, r2, sl, lsr #27
   1b4d8:			; <UNDEFINED> instruction: 0x0002ddb3
   1b4dc:	andeq	r5, r2, sp, asr #18
   1b4e0:	andeq	sp, r2, r0, lsr #27
   1b4e4:	andeq	r5, r2, r0, lsl #22
   1b4e8:	muleq	r2, r6, sp
   1b4ec:	muleq	r2, r5, sp
   1b4f0:	andeq	fp, r2, r4, ror #21
   1b4f4:	muleq	r2, r1, sp
   1b4f8:	andeq	sp, r2, r5, lsl #27
   1b4fc:	muleq	r2, r8, sp
   1b500:	andeq	sp, r2, fp, lsr #27
   1b504:	andeq	sp, r2, r2, asr #27
   1b508:	andeq	sp, r2, r1, ror #27
   1b50c:	andeq	sp, r2, r8, lsl #28
   1b510:	andeq	sp, r2, r8, asr #28
   1b514:	andeq	sp, r2, fp, asr #28
   1b518:	andeq	r5, r2, r7, lsr sl
   1b51c:	andeq	sp, r2, r6, asr #28
   1b520:	andeq	sp, r2, r3, ror #28
   1b524:	andeq	sp, r2, r7, ror #28
   1b528:	andeq	lr, r2, r6, asr #3
   1b52c:	andeq	lr, r2, r3, ror r8
   1b530:	andeq	lr, r2, r8, ror #17
   1b534:	andeq	pc, r2, pc, lsl #7
   1b538:	andeq	pc, r2, r6, asr r7	; <UNPREDICTABLE>
   1b53c:	andeq	pc, r2, r8, ror sp	; <UNPREDICTABLE>
   1b540:	ldrdeq	r0, [r3], -ip
   1b544:	andeq	r0, r3, r3, lsr r9
   1b548:	andeq	r0, r3, r7, ror #28
   1b54c:	ldrdeq	r1, [r3], -r1	; <UNPREDICTABLE>
   1b550:	andeq	r1, r3, fp, asr #8
   1b554:	andeq	r1, r3, sp, lsl #15
   1b558:	andeq	r1, r3, lr, ror r9
   1b55c:	andeq	r1, r3, fp, asr #25
   1b560:	andeq	r2, r3, r7, lsr #3
   1b564:	muleq	r3, r8, r2
   1b568:	andeq	r2, r3, r0, ror #11
   1b56c:	andeq	r2, r3, r6, asr #23
   1b570:	andeq	r2, r3, r5, ror #26
   1b574:	andeq	r2, r3, r6, ror pc
   1b578:	andeq	r3, r3, r2, lsr #6
   1b57c:	andeq	r3, r3, fp, asr #11
   1b580:	andeq	r3, r3, r7, asr #19
   1b584:	muleq	r3, pc, sl	; <UNPREDICTABLE>
   1b588:	andeq	r3, r3, ip, ror #25
   1b58c:	andeq	r4, r3, fp, asr #32
   1b590:	andeq	r4, r3, r2, lsl #9
   1b594:	andeq	r4, r3, r2, lsl #14
   1b598:	andeq	r4, r3, r6, ror #21
   1b59c:	ldrdeq	r4, [r3], -r6
   1b5a0:	andeq	r4, r3, r9, asr #24
   1b5a4:	andeq	r4, r3, r1, lsl #31
   1b5a8:	strdeq	r5, [r3], -r5	; <UNPREDICTABLE>
   1b5ac:	andeq	r5, r3, pc, ror #8
   1b5b0:	andeq	r5, r3, r9, lsl #20
   1b5b4:	andeq	r5, r3, r4, lsl #21
   1b5b8:	muleq	r3, ip, sl
   1b5bc:	andeq	r5, r3, sl, lsr #21
   1b5c0:	andeq	r5, r3, r0, asr #21
   1b5c4:	andeq	r5, r3, r9, asr #21
   1b5c8:	andeq	r5, r3, r1, ror #21
   1b5cc:	andeq	r5, r3, lr, ror #21
   1b5d0:	andeq	r5, r3, r8, lsl #22
   1b5d4:	andeq	r5, r3, r7, lsl fp
   1b5d8:	andeq	r5, r3, r1, lsr fp
   1b5dc:	andeq	r5, r3, r0, asr #22
   1b5e0:	andeq	r5, r3, sl, asr fp
   1b5e4:	andeq	r5, r3, r9, ror #22
   1b5e8:	andeq	r5, r3, r1, lsl #23
   1b5ec:	andeq	r5, r3, pc, lsl #23
   1b5f0:	andeq	r5, r3, r7, lsr #23
   1b5f4:			; <UNDEFINED> instruction: 0x00035bb5
   1b5f8:	andeq	r5, r3, sp, asr #23
   1b5fc:	ldrdeq	r5, [r3], -fp
   1b600:	strdeq	r5, [r3], -r1
   1b604:	strdeq	r5, [r3], -pc	; <UNPREDICTABLE>
   1b608:	andeq	r5, r3, r7, lsl ip
   1b60c:	andeq	r5, r3, r2, lsl ip
   1b610:	andeq	r5, r3, lr, lsl ip
   1b614:	andeq	r5, r3, r4, lsr #24
   1b618:	andeq	r5, r3, r0, lsr ip
   1b61c:	andeq	r5, r3, lr, lsr ip
   1b620:	andeq	r5, r3, ip, asr #24
   1b624:	andeq	r5, r3, sl, asr ip
   1b628:	andeq	r5, r3, r6, ror #24
   1b62c:	andeq	r5, r3, r2, ror ip
   1b630:	andeq	r5, r3, lr, ror ip
   1b634:	andeq	r5, r3, r8, lsl #25
   1b638:	andeq	r5, r3, ip, lsl #25
   1b63c:	andeq	r5, r3, lr, ror ip
   1b640:	andeq	fp, r2, lr, ror #1
   1b644:	andeq	r5, r3, r8, asr ip

0001b648 <__flatcc_fb_gen_c_builder@@Base>:
   1b648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b64c:	add	fp, sp, #28
   1b650:	sub	sp, sp, #620	; 0x26c
   1b654:	mov	r4, r0
   1b658:	mov	sl, r0
   1b65c:	ldr	r1, [r4, #208]	; 0xd0
   1b660:	ldr	r0, [sl, #204]!	; 0xcc
   1b664:	ldr	r2, [r1, #164]	; 0xa4
   1b668:	ldr	r1, [pc, #4080]	; 1c660 <__flatcc_fb_gen_c_builder@@Base+0x1018>
   1b66c:	add	r1, pc, r1
   1b670:	mov	r3, r2
   1b674:	bl	149b8 <fprintf@plt>
   1b678:	ldr	r3, [sl]
   1b67c:	ldr	r0, [pc, #4064]	; 1c664 <__flatcc_fb_gen_c_builder@@Base+0x101c>
   1b680:	mov	r1, #81	; 0x51
   1b684:	mov	r2, #1
   1b688:	add	r0, pc, r0
   1b68c:	bl	1494c <fwrite@plt>
   1b690:	ldr	r1, [r4, #208]	; 0xd0
   1b694:	ldr	r0, [sl]
   1b698:	ldr	r2, [r1, #164]	; 0xa4
   1b69c:	ldr	r1, [pc, #4092]	; 1c6a0 <__flatcc_fb_gen_c_builder@@Base+0x1058>
   1b6a0:	add	r1, pc, r1
   1b6a4:	bl	149b8 <fprintf@plt>
   1b6a8:	ldr	r1, [r4, #208]	; 0xd0
   1b6ac:	ldr	r0, [sl]
   1b6b0:	ldr	r2, [r1, #160]	; 0xa0
   1b6b4:	ldr	r1, [pc, #4072]	; 1c6a4 <__flatcc_fb_gen_c_builder@@Base+0x105c>
   1b6b8:	add	r1, pc, r1
   1b6bc:	bl	149b8 <fprintf@plt>
   1b6c0:	ldr	r3, [sl]
   1b6c4:	ldr	r5, [pc, #4060]	; 1c6a8 <__flatcc_fb_gen_c_builder@@Base+0x1060>
   1b6c8:	mov	r1, #7
   1b6cc:	mov	r2, #1
   1b6d0:	add	r5, pc, r5
   1b6d4:	mov	r0, r5
   1b6d8:	bl	1494c <fwrite@plt>
   1b6dc:	ldr	r0, [sl]
   1b6e0:	ldr	r1, [pc, #4036]	; 1c6ac <__flatcc_fb_gen_c_builder@@Base+0x1064>
   1b6e4:	add	r2, r4, #102	; 0x66
   1b6e8:	add	r1, pc, r1
   1b6ec:	bl	149b8 <fprintf@plt>
   1b6f0:	ldr	r0, [sl]
   1b6f4:	ldr	r1, [pc, #4020]	; 1c6b0 <__flatcc_fb_gen_c_builder@@Base+0x1068>
   1b6f8:	mov	r2, r4
   1b6fc:	add	r1, pc, r1
   1b700:	bl	149b8 <fprintf@plt>
   1b704:	ldr	r3, [sl]
   1b708:	mov	r0, r5
   1b70c:	mov	r1, #7
   1b710:	mov	r2, #1
   1b714:	bl	1494c <fwrite@plt>
   1b718:	ldr	r1, [pc, #4080]	; 1c710 <__flatcc_fb_gen_c_builder@@Base+0x10c8>
   1b71c:	ldr	r2, [pc, #4080]	; 1c714 <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   1b720:	mov	r0, r4
   1b724:	add	r1, pc, r1
   1b728:	add	r2, pc, r2
   1b72c:	bl	16990 <__flatcc_fb_gen_c_includes@@Base>
   1b730:	ldr	r0, [r4, #212]	; 0xd4
   1b734:	ldr	r0, [r0, #140]	; 0x8c
   1b738:	cmp	r0, #0
   1b73c:	beq	1b758 <__flatcc_fb_gen_c_builder@@Base+0x110>
   1b740:	ldr	r3, [sl]
   1b744:	ldr	r0, [pc, #4044]	; 1c718 <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   1b748:	mov	r1, #36	; 0x24
   1b74c:	mov	r2, #1
   1b750:	add	r0, pc, r0
   1b754:	bl	1494c <fwrite@plt>
   1b758:	ldr	r1, [r4, #208]	; 0xd0
   1b75c:	ldr	r0, [r4, #204]	; 0xcc
   1b760:	ldrh	r2, [r1, #16]
   1b764:	cmp	r2, #2
   1b768:	bne	1b784 <__flatcc_fb_gen_c_builder@@Base+0x13c>
   1b76c:	ldrd	r2, [r1, #8]
   1b770:	str	r3, [sp]
   1b774:	str	r2, [sp, #4]
   1b778:	ldr	r1, [pc, #4076]	; 1c76c <__flatcc_fb_gen_c_builder@@Base+0x1124>
   1b77c:	add	r1, pc, r1
   1b780:	b	1b78c <__flatcc_fb_gen_c_builder@@Base+0x144>
   1b784:	ldr	r1, [pc, #4068]	; 1c770 <__flatcc_fb_gen_c_builder@@Base+0x1128>
   1b788:	add	r1, pc, r1
   1b78c:	mov	r2, r4
   1b790:	mov	r3, r4
   1b794:	bl	149b8 <fprintf@plt>
   1b798:	ldr	r1, [r4, #208]	; 0xd0
   1b79c:	ldr	r0, [r4, #204]	; 0xcc
   1b7a0:	ldrh	r2, [r1, #32]
   1b7a4:	cmp	r2, #2
   1b7a8:	bne	1b7c4 <__flatcc_fb_gen_c_builder@@Base+0x17c>
   1b7ac:	ldrd	r2, [r1, #24]
   1b7b0:	str	r3, [sp]
   1b7b4:	str	r2, [sp, #4]
   1b7b8:	ldr	r1, [pc, #4080]	; 1c7b0 <__flatcc_fb_gen_c_builder@@Base+0x1168>
   1b7bc:	add	r1, pc, r1
   1b7c0:	b	1b7d8 <__flatcc_fb_gen_c_builder@@Base+0x190>
   1b7c4:	ldr	r1, [r4, #212]	; 0xd4
   1b7c8:	ldr	r1, [r1, #104]	; 0x68
   1b7cc:	str	r1, [sp]
   1b7d0:	ldr	r1, [pc, #4060]	; 1c7b4 <__flatcc_fb_gen_c_builder@@Base+0x116c>
   1b7d4:	add	r1, pc, r1
   1b7d8:	mov	r2, r4
   1b7dc:	mov	r3, r4
   1b7e0:	bl	149b8 <fprintf@plt>
   1b7e4:	ldr	r1, [r4, #204]	; 0xcc
   1b7e8:	mov	r0, #10
   1b7ec:	bl	14a18 <fputc@plt>
   1b7f0:	sub	r5, fp, #256	; 0x100
   1b7f4:	mov	r1, #0
   1b7f8:	mov	r2, #220	; 0xdc
   1b7fc:	mov	r7, #0
   1b800:	mov	r0, r5
   1b804:	bl	149d0 <memset@plt>
   1b808:	ldr	r0, [r4, #208]	; 0xd0
   1b80c:	ldr	r6, [r0, #40]	; 0x28
   1b810:	cmp	r6, #0
   1b814:	beq	1b89c <__flatcc_fb_gen_c_builder@@Base+0x254>
   1b818:	ldr	r8, [pc, #4032]	; 1c7e0 <__flatcc_fb_gen_c_builder@@Base+0x1198>
   1b81c:	ldr	r9, [pc, #4032]	; 1c7e4 <__flatcc_fb_gen_c_builder@@Base+0x119c>
   1b820:	add	r8, pc, r8
   1b824:	add	r9, pc, r9
   1b828:	ldrh	r0, [r6, #8]
   1b82c:	cmp	r0, #3
   1b830:	bne	1b87c <__flatcc_fb_gen_c_builder@@Base+0x234>
   1b834:	ldr	r0, [r6, #12]
   1b838:	mov	r1, r6
   1b83c:	mov	r2, r5
   1b840:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b844:	ldr	r0, [r4, #204]	; 0xcc
   1b848:	mov	r1, r8
   1b84c:	mov	r2, r5
   1b850:	mov	r3, r5
   1b854:	str	r5, [sp]
   1b858:	bl	149b8 <fprintf@plt>
   1b85c:	ldr	r0, [r4, #204]	; 0xcc
   1b860:	mov	r1, r9
   1b864:	mov	r2, r4
   1b868:	mov	r3, r4
   1b86c:	str	r5, [sp]
   1b870:	str	r5, [sp, #4]
   1b874:	bl	149b8 <fprintf@plt>
   1b878:	mov	r7, #1
   1b87c:	ldr	r6, [r6]
   1b880:	cmp	r6, #0
   1b884:	bne	1b828 <__flatcc_fb_gen_c_builder@@Base+0x1e0>
   1b888:	cmp	r7, #0
   1b88c:	beq	1b89c <__flatcc_fb_gen_c_builder@@Base+0x254>
   1b890:	ldr	r1, [sl]
   1b894:	mov	r0, #10
   1b898:	bl	14a18 <fputc@plt>
   1b89c:	ldr	r7, [r4, #208]	; 0xd0
   1b8a0:	str	sl, [sp, #64]	; 0x40
   1b8a4:	ldr	r6, [r7, #44]	; 0x2c
   1b8a8:	cmp	r6, #0
   1b8ac:	beq	1bcf0 <__flatcc_fb_gen_c_builder@@Base+0x6a8>
   1b8b0:	str	r4, [sp, #60]	; 0x3c
   1b8b4:	mov	r9, #1
   1b8b8:	ldr	r4, [sp, #60]	; 0x3c
   1b8bc:	mov	r0, r5
   1b8c0:	mov	r1, #0
   1b8c4:	mov	r2, #220	; 0xdc
   1b8c8:	bl	149d0 <memset@plt>
   1b8cc:	ldrh	r0, [r6, #8]
   1b8d0:	cmp	r0, #1
   1b8d4:	bne	1cd08 <__flatcc_fb_gen_c_builder@@Base+0x16c0>
   1b8d8:	ldr	r0, [r6, #12]
   1b8dc:	mov	r1, r6
   1b8e0:	mov	r2, r5
   1b8e4:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1b8e8:	mov	r0, r6
   1b8ec:	bl	1d138 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1b8f0:	mov	r7, r0
   1b8f4:	ldr	r0, [r4, #204]	; 0xcc
   1b8f8:	ldr	r1, [pc, #3988]	; 1c894 <__flatcc_fb_gen_c_builder@@Base+0x124c>
   1b8fc:	mov	r2, r5
   1b900:	add	r1, pc, r1
   1b904:	bl	149b8 <fprintf@plt>
   1b908:	mov	r0, r4
   1b90c:	mov	r1, r6
   1b910:	mov	r2, #0
   1b914:	mov	r3, r7
   1b918:	str	r9, [sp]
   1b91c:	bl	1d19c <__flatcc_fb_gen_c_builder@@Base+0x1b54>
   1b920:	ldr	r0, [r4, #204]	; 0xcc
   1b924:	ldr	r1, [pc, #3948]	; 1c898 <__flatcc_fb_gen_c_builder@@Base+0x1250>
   1b928:	mov	r2, r5
   1b92c:	add	r1, pc, r1
   1b930:	bl	149b8 <fprintf@plt>
   1b934:	mov	r0, r6
   1b938:	bl	1d138 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1b93c:	cmp	r0, #1
   1b940:	blt	1b9e0 <__flatcc_fb_gen_c_builder@@Base+0x398>
   1b944:	mov	r8, r0
   1b948:	mov	r9, #0
   1b94c:	mov	sl, r7
   1b950:	cmp	r7, #0
   1b954:	beq	1b9b8 <__flatcc_fb_gen_c_builder@@Base+0x370>
   1b958:	cmp	r9, #0
   1b95c:	beq	1b994 <__flatcc_fb_gen_c_builder@@Base+0x34c>
   1b960:	ldr	r0, [sp, #64]	; 0x40
   1b964:	tst	r9, #3
   1b968:	ldr	r3, [r0]
   1b96c:	bne	1b9a4 <__flatcc_fb_gen_c_builder@@Base+0x35c>
   1b970:	cmp	sl, #2
   1b974:	ble	1b9a4 <__flatcc_fb_gen_c_builder@@Base+0x35c>
   1b978:	ldr	r1, [pc, #4072]	; 1c968 <__flatcc_fb_gen_c_builder@@Base+0x1320>
   1b97c:	ldr	r2, [pc, #4072]	; 1c96c <__flatcc_fb_gen_c_builder@@Base+0x1324>
   1b980:	mov	r0, r3
   1b984:	add	r1, pc, r1
   1b988:	add	r2, pc, r2
   1b98c:	bl	149b8 <fprintf@plt>
   1b990:	b	1b9b8 <__flatcc_fb_gen_c_builder@@Base+0x370>
   1b994:	ldr	r0, [sp, #64]	; 0x40
   1b998:	cmp	r7, #5
   1b99c:	ldr	r3, [r0]
   1b9a0:	bge	1b978 <__flatcc_fb_gen_c_builder@@Base+0x330>
   1b9a4:	ldr	r0, [pc, #4036]	; 1c970 <__flatcc_fb_gen_c_builder@@Base+0x1328>
   1b9a8:	mov	r1, #2
   1b9ac:	mov	r2, #1
   1b9b0:	add	r0, pc, r0
   1b9b4:	bl	1494c <fwrite@plt>
   1b9b8:	ldr	r0, [sp, #64]	; 0x40
   1b9bc:	mov	r2, r9
   1b9c0:	ldr	r0, [r0]
   1b9c4:	ldr	r1, [pc, #4008]	; 1c974 <__flatcc_fb_gen_c_builder@@Base+0x132c>
   1b9c8:	add	r1, pc, r1
   1b9cc:	bl	149b8 <fprintf@plt>
   1b9d0:	add	r9, r9, #1
   1b9d4:	sub	sl, sl, #1
   1b9d8:	cmp	r8, r9
   1b9dc:	bne	1b950 <__flatcc_fb_gen_c_builder@@Base+0x308>
   1b9e0:	ldr	r1, [r4, #204]	; 0xcc
   1b9e4:	mov	r0, #10
   1b9e8:	bl	14a18 <fputc@plt>
   1b9ec:	ldr	r0, [r4, #204]	; 0xcc
   1b9f0:	str	r5, [sp]
   1b9f4:	mov	r2, r5
   1b9f8:	mov	r3, r5
   1b9fc:	ldr	r1, [pc, #3956]	; 1c978 <__flatcc_fb_gen_c_builder@@Base+0x1330>
   1ba00:	add	r1, pc, r1
   1ba04:	bl	149b8 <fprintf@plt>
   1ba08:	mov	r8, #0
   1ba0c:	mov	r0, r4
   1ba10:	mov	r1, r6
   1ba14:	mov	r2, #0
   1ba18:	mov	r3, r7
   1ba1c:	str	r8, [sp]
   1ba20:	bl	1d19c <__flatcc_fb_gen_c_builder@@Base+0x1b54>
   1ba24:	ldr	r3, [r4, #204]	; 0xcc
   1ba28:	ldr	sl, [pc, #3916]	; 1c97c <__flatcc_fb_gen_c_builder@@Base+0x1334>
   1ba2c:	mov	r1, #4
   1ba30:	mov	r2, #1
   1ba34:	add	sl, pc, sl
   1ba38:	mov	r0, sl
   1ba3c:	bl	1494c <fwrite@plt>
   1ba40:	mov	r0, r4
   1ba44:	mov	r1, r6
   1ba48:	mov	r2, r7
   1ba4c:	mov	r3, #0
   1ba50:	str	r8, [sp]
   1ba54:	bl	1d484 <__flatcc_fb_gen_c_builder@@Base+0x1e3c>
   1ba58:	ldr	r3, [r4, #204]	; 0xcc
   1ba5c:	ldr	sl, [pc, #3868]	; 1c980 <__flatcc_fb_gen_c_builder@@Base+0x1338>
   1ba60:	mov	r1, #12
   1ba64:	mov	r2, #1
   1ba68:	add	sl, pc, sl
   1ba6c:	mov	r0, sl
   1ba70:	bl	1494c <fwrite@plt>
   1ba74:	ldr	r0, [r4, #204]	; 0xcc
   1ba78:	str	r5, [sp]
   1ba7c:	str	r5, [sp, #4]
   1ba80:	mov	r2, r5
   1ba84:	mov	r3, r5
   1ba88:	ldr	r1, [pc, #3828]	; 1c984 <__flatcc_fb_gen_c_builder@@Base+0x133c>
   1ba8c:	add	r1, pc, r1
   1ba90:	bl	149b8 <fprintf@plt>
   1ba94:	ldr	r3, [r4, #204]	; 0xcc
   1ba98:	ldr	r0, [pc, #3816]	; 1c988 <__flatcc_fb_gen_c_builder@@Base+0x1340>
   1ba9c:	mov	r1, #2
   1baa0:	mov	r2, #1
   1baa4:	add	r0, pc, r0
   1baa8:	bl	1494c <fwrite@plt>
   1baac:	mov	r9, #1
   1bab0:	mov	r0, r4
   1bab4:	mov	r1, r6
   1bab8:	mov	r2, r7
   1babc:	mov	r3, #0
   1bac0:	str	r9, [sp]
   1bac4:	bl	1d484 <__flatcc_fb_gen_c_builder@@Base+0x1e3c>
   1bac8:	ldr	r3, [r4, #204]	; 0xcc
   1bacc:	mov	r0, sl
   1bad0:	mov	r1, #12
   1bad4:	mov	r2, #1
   1bad8:	bl	1494c <fwrite@plt>
   1badc:	ldr	r0, [r4, #204]	; 0xcc
   1bae0:	str	r5, [sp]
   1bae4:	mov	r2, r5
   1bae8:	mov	r3, r5
   1baec:	ldr	r1, [pc, #4028]	; 1cab0 <__flatcc_fb_gen_c_builder@@Base+0x1468>
   1baf0:	add	r1, pc, r1
   1baf4:	bl	149b8 <fprintf@plt>
   1baf8:	mov	r0, r4
   1bafc:	mov	r1, r6
   1bb00:	mov	r2, #0
   1bb04:	mov	r3, r7
   1bb08:	str	r8, [sp]
   1bb0c:	bl	1d19c <__flatcc_fb_gen_c_builder@@Base+0x1b54>
   1bb10:	ldr	r3, [r4, #204]	; 0xcc
   1bb14:	ldr	r0, [pc, #4088]	; 1cb14 <__flatcc_fb_gen_c_builder@@Base+0x14cc>
   1bb18:	mov	r1, #4
   1bb1c:	mov	r2, #1
   1bb20:	add	r0, pc, r0
   1bb24:	bl	1494c <fwrite@plt>
   1bb28:	mov	r0, r4
   1bb2c:	mov	r1, r6
   1bb30:	mov	r2, r7
   1bb34:	mov	r3, #2
   1bb38:	str	r8, [sp]
   1bb3c:	bl	1d484 <__flatcc_fb_gen_c_builder@@Base+0x1e3c>
   1bb40:	ldr	r3, [r4, #204]	; 0xcc
   1bb44:	mov	r0, sl
   1bb48:	mov	r1, #12
   1bb4c:	mov	r2, #1
   1bb50:	bl	1494c <fwrite@plt>
   1bb54:	ldr	r0, [r4, #204]	; 0xcc
   1bb58:	str	r5, [sp]
   1bb5c:	str	r5, [sp, #4]
   1bb60:	mov	r2, r5
   1bb64:	mov	r3, r5
   1bb68:	ldr	r1, [pc, #4080]	; 1cb60 <__flatcc_fb_gen_c_builder@@Base+0x1518>
   1bb6c:	add	r1, pc, r1
   1bb70:	bl	149b8 <fprintf@plt>
   1bb74:	ldr	r3, [r4, #204]	; 0xcc
   1bb78:	ldr	r0, [pc, #4068]	; 1cb64 <__flatcc_fb_gen_c_builder@@Base+0x151c>
   1bb7c:	mov	r1, #2
   1bb80:	mov	r2, #1
   1bb84:	add	r0, pc, r0
   1bb88:	bl	1494c <fwrite@plt>
   1bb8c:	mov	r0, r4
   1bb90:	mov	r1, r6
   1bb94:	mov	r2, r7
   1bb98:	mov	r3, #2
   1bb9c:	str	r9, [sp]
   1bba0:	bl	1d484 <__flatcc_fb_gen_c_builder@@Base+0x1e3c>
   1bba4:	ldr	r3, [r4, #204]	; 0xcc
   1bba8:	mov	r0, sl
   1bbac:	mov	r1, #12
   1bbb0:	mov	r2, #1
   1bbb4:	bl	1494c <fwrite@plt>
   1bbb8:	ldr	r0, [r4, #204]	; 0xcc
   1bbbc:	str	r5, [sp]
   1bbc0:	mov	r2, r5
   1bbc4:	mov	r3, r5
   1bbc8:	ldr	r1, [pc, #3992]	; 1cb68 <__flatcc_fb_gen_c_builder@@Base+0x1520>
   1bbcc:	add	r1, pc, r1
   1bbd0:	bl	149b8 <fprintf@plt>
   1bbd4:	mov	r0, r4
   1bbd8:	mov	r1, r6
   1bbdc:	mov	r2, #0
   1bbe0:	mov	r3, r7
   1bbe4:	str	r8, [sp]
   1bbe8:	bl	1d19c <__flatcc_fb_gen_c_builder@@Base+0x1b54>
   1bbec:	ldr	r3, [r4, #204]	; 0xcc
   1bbf0:	ldr	r0, [pc, #3956]	; 1cb6c <__flatcc_fb_gen_c_builder@@Base+0x1524>
   1bbf4:	mov	r1, #4
   1bbf8:	mov	r2, #1
   1bbfc:	add	r0, pc, r0
   1bc00:	bl	1494c <fwrite@plt>
   1bc04:	mov	r0, r4
   1bc08:	mov	r1, r6
   1bc0c:	mov	r2, r7
   1bc10:	mov	r3, #1
   1bc14:	str	r8, [sp]
   1bc18:	bl	1d484 <__flatcc_fb_gen_c_builder@@Base+0x1e3c>
   1bc1c:	ldr	r3, [r4, #204]	; 0xcc
   1bc20:	mov	r0, sl
   1bc24:	mov	r1, #12
   1bc28:	mov	r2, #1
   1bc2c:	bl	1494c <fwrite@plt>
   1bc30:	ldr	r0, [r4, #204]	; 0xcc
   1bc34:	str	r5, [sp]
   1bc38:	str	r5, [sp, #4]
   1bc3c:	mov	r2, r5
   1bc40:	mov	r3, r5
   1bc44:	ldr	r1, [pc, #4024]	; 1cc04 <__flatcc_fb_gen_c_builder@@Base+0x15bc>
   1bc48:	add	r1, pc, r1
   1bc4c:	bl	149b8 <fprintf@plt>
   1bc50:	ldr	r3, [r4, #204]	; 0xcc
   1bc54:	ldr	r0, [pc, #4012]	; 1cc08 <__flatcc_fb_gen_c_builder@@Base+0x15c0>
   1bc58:	mov	r1, #2
   1bc5c:	mov	r2, #1
   1bc60:	add	r0, pc, r0
   1bc64:	bl	1494c <fwrite@plt>
   1bc68:	mov	r0, r4
   1bc6c:	mov	r1, r6
   1bc70:	mov	r2, r7
   1bc74:	mov	r3, #1
   1bc78:	str	r9, [sp]
   1bc7c:	bl	1d484 <__flatcc_fb_gen_c_builder@@Base+0x1e3c>
   1bc80:	ldr	r3, [r4, #204]	; 0xcc
   1bc84:	mov	r0, sl
   1bc88:	mov	r1, #12
   1bc8c:	mov	r2, #1
   1bc90:	bl	1494c <fwrite@plt>
   1bc94:	ldrd	r2, [r6, #112]	; 0x70
   1bc98:	ldrh	r1, [r6, #104]	; 0x68
   1bc9c:	ldr	r0, [r4, #204]	; 0xcc
   1bca0:	str	r5, [sp, #20]
   1bca4:	str	r5, [sp, #24]
   1bca8:	str	r5, [sp]
   1bcac:	str	r2, [sp, #8]
   1bcb0:	str	r3, [sp, #12]
   1bcb4:	str	r1, [sp, #16]
   1bcb8:	mov	r2, r4
   1bcbc:	mov	r3, r4
   1bcc0:	ldr	r1, [pc, #4072]	; 1ccb0 <__flatcc_fb_gen_c_builder@@Base+0x1668>
   1bcc4:	add	r1, pc, r1
   1bcc8:	bl	149b8 <fprintf@plt>
   1bccc:	ldr	r1, [r4, #204]	; 0xcc
   1bcd0:	mov	r0, #10
   1bcd4:	bl	14a18 <fputc@plt>
   1bcd8:	ldr	r6, [r6, #120]	; 0x78
   1bcdc:	cmp	r6, #0
   1bce0:	bne	1b8bc <__flatcc_fb_gen_c_builder@@Base+0x274>
   1bce4:	ldr	r4, [sp, #60]	; 0x3c
   1bce8:	ldr	sl, [sp, #64]	; 0x40
   1bcec:	ldr	r7, [r4, #208]	; 0xd0
   1bcf0:	sub	r9, fp, #256	; 0x100
   1bcf4:	mov	r1, #0
   1bcf8:	mov	r2, #220	; 0xdc
   1bcfc:	mov	r5, #0
   1bd00:	mov	r0, r9
   1bd04:	bl	149d0 <memset@plt>
   1bd08:	ldr	r6, [r7, #40]	; 0x28
   1bd0c:	cmp	r6, #0
   1bd10:	beq	1bd74 <__flatcc_fb_gen_c_builder@@Base+0x72c>
   1bd14:	ldr	r7, [pc, #4072]	; 1cd04 <__flatcc_fb_gen_c_builder@@Base+0x16bc>
   1bd18:	add	r7, pc, r7
   1bd1c:	ldrh	r0, [r6, #8]
   1bd20:	cmp	r0, #4
   1bd24:	bne	1bd54 <__flatcc_fb_gen_c_builder@@Base+0x70c>
   1bd28:	ldr	r0, [r6, #12]
   1bd2c:	mov	r1, r6
   1bd30:	mov	r2, r9
   1bd34:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1bd38:	ldr	r0, [r4, #204]	; 0xcc
   1bd3c:	mov	r1, r7
   1bd40:	mov	r2, r4
   1bd44:	mov	r3, r9
   1bd48:	stm	sp, {r4, r9}
   1bd4c:	bl	149b8 <fprintf@plt>
   1bd50:	mov	r5, #1
   1bd54:	ldr	r6, [r6]
   1bd58:	cmp	r6, #0
   1bd5c:	bne	1bd1c <__flatcc_fb_gen_c_builder@@Base+0x6d4>
   1bd60:	cmp	r5, #0
   1bd64:	beq	1bd74 <__flatcc_fb_gen_c_builder@@Base+0x72c>
   1bd68:	ldr	r1, [sl]
   1bd6c:	mov	r0, #10
   1bd70:	bl	14a18 <fputc@plt>
   1bd74:	ldr	r0, [r4, #208]	; 0xd0
   1bd78:	ldr	r6, [r0, #40]	; 0x28
   1bd7c:	cmp	r6, #0
   1bd80:	beq	1cc0c <__flatcc_fb_gen_c_builder@@Base+0x15c4>
   1bd84:	ldr	sl, [pc, #4076]	; 1cd78 <__flatcc_fb_gen_c_builder@@Base+0x1730>
   1bd88:	mov	r1, #0
   1bd8c:	mov	r7, #1
   1bd90:	add	sl, pc, sl
   1bd94:	ldrh	r0, [r6, #8]
   1bd98:	cmp	r0, #0
   1bd9c:	bne	1bf54 <__flatcc_fb_gen_c_builder@@Base+0x90c>
   1bda0:	mov	r0, r9
   1bda4:	mov	r1, #0
   1bda8:	mov	r2, #220	; 0xdc
   1bdac:	mov	r8, #0
   1bdb0:	bl	149d0 <memset@plt>
   1bdb4:	ldr	r0, [r6, #20]
   1bdb8:	cmp	r0, #0
   1bdbc:	beq	1bddc <__flatcc_fb_gen_c_builder@@Base+0x794>
   1bdc0:	mov	r8, #0
   1bdc4:	ldrh	r1, [r0, #72]	; 0x48
   1bdc8:	ldr	r0, [r0]
   1bdcc:	bic	r1, r7, r1, lsr #2
   1bdd0:	cmp	r0, #0
   1bdd4:	add	r8, r8, r1
   1bdd8:	bne	1bdc4 <__flatcc_fb_gen_c_builder@@Base+0x77c>
   1bddc:	ldr	r0, [r6, #12]
   1bde0:	mov	r1, r6
   1bde4:	mov	r2, r9
   1bde8:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1bdec:	ldr	r0, [r4, #204]	; 0xcc
   1bdf0:	ldr	r1, [pc, #4052]	; 1cdcc <__flatcc_fb_gen_c_builder@@Base+0x1784>
   1bdf4:	mov	r2, r4
   1bdf8:	mov	r3, r9
   1bdfc:	add	r1, pc, r1
   1be00:	bl	149b8 <fprintf@plt>
   1be04:	ldr	r5, [r6, #20]
   1be08:	cmp	r5, #0
   1be0c:	beq	1bee4 <__flatcc_fb_gen_c_builder@@Base+0x89c>
   1be10:	mov	r9, #0
   1be14:	ldrh	r0, [r5, #72]	; 0x48
   1be18:	and	r0, r0, #260	; 0x104
   1be1c:	cmp	r0, #256	; 0x100
   1be20:	bne	1beac <__flatcc_fb_gen_c_builder@@Base+0x864>
   1be24:	cmp	r9, #1
   1be28:	blt	1be6c <__flatcc_fb_gen_c_builder@@Base+0x824>
   1be2c:	cmp	r8, #0
   1be30:	beq	1be94 <__flatcc_fb_gen_c_builder@@Base+0x84c>
   1be34:	ldr	r0, [sp, #64]	; 0x40
   1be38:	tst	r9, #3
   1be3c:	ldr	r3, [r0]
   1be40:	bne	1be80 <__flatcc_fb_gen_c_builder@@Base+0x838>
   1be44:	sub	r0, r8, r9
   1be48:	cmp	r0, #2
   1be4c:	ble	1be80 <__flatcc_fb_gen_c_builder@@Base+0x838>
   1be50:	ldr	r1, [pc, #4040]	; 1ce20 <__flatcc_fb_gen_c_builder@@Base+0x17d8>
   1be54:	ldr	r2, [pc, #4040]	; 1ce24 <__flatcc_fb_gen_c_builder@@Base+0x17dc>
   1be58:	mov	r0, r3
   1be5c:	add	r1, pc, r1
   1be60:	add	r2, pc, r2
   1be64:	bl	149b8 <fprintf@plt>
   1be68:	b	1be94 <__flatcc_fb_gen_c_builder@@Base+0x84c>
   1be6c:	ldr	r0, [sp, #64]	; 0x40
   1be70:	ldr	r1, [r0]
   1be74:	mov	r0, #32
   1be78:	bl	14a18 <fputc@plt>
   1be7c:	b	1be94 <__flatcc_fb_gen_c_builder@@Base+0x84c>
   1be80:	ldr	r0, [pc, #4080]	; 1ce78 <__flatcc_fb_gen_c_builder@@Base+0x1830>
   1be84:	mov	r1, #2
   1be88:	mov	r2, #1
   1be8c:	add	r0, pc, r0
   1be90:	bl	1494c <fwrite@plt>
   1be94:	ldr	r0, [sp, #64]	; 0x40
   1be98:	ldr	r2, [r5, #96]	; 0x60
   1be9c:	mov	r1, sl
   1bea0:	ldr	r0, [r0]
   1bea4:	bl	149b8 <fprintf@plt>
   1bea8:	add	r9, r9, #1
   1beac:	ldr	r5, [r5]
   1beb0:	cmp	r5, #0
   1beb4:	bne	1be14 <__flatcc_fb_gen_c_builder@@Base+0x7cc>
   1beb8:	ldr	r0, [sp, #64]	; 0x40
   1bebc:	cmp	r9, #1
   1bec0:	ldr	r3, [r0]
   1bec4:	blt	1bef0 <__flatcc_fb_gen_c_builder@@Base+0x8a8>
   1bec8:	ldr	r0, [pc, #4092]	; 1cecc <__flatcc_fb_gen_c_builder@@Base+0x1884>
   1becc:	mov	r1, #7
   1bed0:	mov	r2, #1
   1bed4:	add	r0, pc, r0
   1bed8:	bl	1494c <fwrite@plt>
   1bedc:	sub	r9, fp, #256	; 0x100
   1bee0:	b	1bf08 <__flatcc_fb_gen_c_builder@@Base+0x8c0>
   1bee4:	ldr	r0, [sp, #64]	; 0x40
   1bee8:	ldr	r3, [r0]
   1beec:	b	1bef4 <__flatcc_fb_gen_c_builder@@Base+0x8ac>
   1bef0:	sub	r9, fp, #256	; 0x100
   1bef4:	ldr	r0, [pc, #4052]	; 1ced0 <__flatcc_fb_gen_c_builder@@Base+0x1888>
   1bef8:	mov	r1, #6
   1befc:	mov	r2, #1
   1bf00:	add	r0, pc, r0
   1bf04:	bl	1494c <fwrite@plt>
   1bf08:	mov	r0, r9
   1bf0c:	mov	r1, #0
   1bf10:	mov	r2, #220	; 0xdc
   1bf14:	bl	149d0 <memset@plt>
   1bf18:	ldr	r0, [r6, #12]
   1bf1c:	mov	r1, r6
   1bf20:	mov	r2, r9
   1bf24:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1bf28:	ldrd	r2, [r6, #96]	; 0x60
   1bf2c:	ldr	r0, [r4, #204]	; 0xcc
   1bf30:	str	r9, [sp]
   1bf34:	str	r2, [sp, #8]
   1bf38:	str	r3, [sp, #12]
   1bf3c:	mov	r2, r4
   1bf40:	mov	r3, r4
   1bf44:	ldr	r1, [pc, #4056]	; 1cf24 <__flatcc_fb_gen_c_builder@@Base+0x18dc>
   1bf48:	add	r1, pc, r1
   1bf4c:	bl	149b8 <fprintf@plt>
   1bf50:	mov	r1, #1
   1bf54:	ldr	r6, [r6]
   1bf58:	cmp	r6, #0
   1bf5c:	bne	1bd94 <__flatcc_fb_gen_c_builder@@Base+0x74c>
   1bf60:	ldr	r0, [r4, #208]	; 0xd0
   1bf64:	ldr	sl, [sp, #64]	; 0x40
   1bf68:	str	r1, [sp, #60]	; 0x3c
   1bf6c:	ldr	r6, [r0, #40]	; 0x28
   1bf70:	cmp	r6, #0
   1bf74:	beq	1c3b0 <__flatcc_fb_gen_c_builder@@Base+0xd68>
   1bf78:	add	r5, sp, #168	; 0xa8
   1bf7c:	mov	r8, #1
   1bf80:	ldrh	r0, [r6, #8]
   1bf84:	cmp	r0, #0
   1bf88:	bne	1c3a4 <__flatcc_fb_gen_c_builder@@Base+0xd5c>
   1bf8c:	mov	r0, r5
   1bf90:	mov	r1, #0
   1bf94:	mov	r2, #220	; 0xdc
   1bf98:	mov	r9, #0
   1bf9c:	bl	149d0 <memset@plt>
   1bfa0:	ldr	r0, [r6, #12]
   1bfa4:	mov	r1, r6
   1bfa8:	mov	r2, r5
   1bfac:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1bfb0:	ldr	r0, [r6, #20]
   1bfb4:	cmp	r0, #0
   1bfb8:	beq	1bfd8 <__flatcc_fb_gen_c_builder@@Base+0x990>
   1bfbc:	mov	r9, #0
   1bfc0:	ldrh	r1, [r0, #72]	; 0x48
   1bfc4:	ldr	r0, [r0]
   1bfc8:	bic	r1, r8, r1, lsr #2
   1bfcc:	cmp	r0, #0
   1bfd0:	add	r9, r9, r1
   1bfd4:	bne	1bfc0 <__flatcc_fb_gen_c_builder@@Base+0x978>
   1bfd8:	ldr	r0, [sl]
   1bfdc:	ldr	r1, [pc, #3988]	; 1cf78 <__flatcc_fb_gen_c_builder@@Base+0x1930>
   1bfe0:	mov	r2, r5
   1bfe4:	add	r1, pc, r1
   1bfe8:	bl	149b8 <fprintf@plt>
   1bfec:	sub	r5, fp, #256	; 0x100
   1bff0:	mov	r1, #0
   1bff4:	mov	r2, #220	; 0xdc
   1bff8:	mov	r0, r5
   1bffc:	bl	149d0 <memset@plt>
   1c000:	ldr	r7, [r6, #20]
   1c004:	cmp	r7, #0
   1c008:	beq	1c2b4 <__flatcc_fb_gen_c_builder@@Base+0xc6c>
   1c00c:	mov	sl, #0
   1c010:	ldrb	r0, [r7, #72]	; 0x48
   1c014:	tst	r0, #4
   1c018:	bne	1c2a8 <__flatcc_fb_gen_c_builder@@Base+0xc60>
   1c01c:	cmp	r9, #0
   1c020:	beq	1c088 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1c024:	cmp	sl, #0
   1c028:	beq	1c064 <__flatcc_fb_gen_c_builder@@Base+0xa1c>
   1c02c:	ldr	r0, [sp, #64]	; 0x40
   1c030:	tst	sl, #3
   1c034:	ldr	r3, [r0]
   1c038:	bne	1c074 <__flatcc_fb_gen_c_builder@@Base+0xa2c>
   1c03c:	sub	r0, r9, sl
   1c040:	cmp	r0, #2
   1c044:	ble	1c074 <__flatcc_fb_gen_c_builder@@Base+0xa2c>
   1c048:	ldr	r1, [pc, #3888]	; 1cf80 <__flatcc_fb_gen_c_builder@@Base+0x1938>
   1c04c:	ldr	r2, [pc, #3888]	; 1cf84 <__flatcc_fb_gen_c_builder@@Base+0x193c>
   1c050:	mov	r0, r3
   1c054:	add	r1, pc, r1
   1c058:	add	r2, pc, r2
   1c05c:	bl	149b8 <fprintf@plt>
   1c060:	b	1c088 <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1c064:	ldr	r0, [sp, #64]	; 0x40
   1c068:	cmp	r9, #5
   1c06c:	ldr	r3, [r0]
   1c070:	bge	1c048 <__flatcc_fb_gen_c_builder@@Base+0xa00>
   1c074:	ldr	r0, [pc, #3840]	; 1cf7c <__flatcc_fb_gen_c_builder@@Base+0x1934>
   1c078:	mov	r1, #2
   1c07c:	mov	r2, #1
   1c080:	add	r0, pc, r0
   1c084:	bl	1494c <fwrite@plt>
   1c088:	ldrh	r0, [r7, #24]
   1c08c:	sub	r0, r0, #7
   1c090:	cmp	r0, #8
   1c094:	bhi	1cc60 <__flatcc_fb_gen_c_builder@@Base+0x1618>
   1c098:	add	r1, pc, #8
   1c09c:	add	sl, sl, #1
   1c0a0:	ldr	r0, [r1, r0, lsl #2]
   1c0a4:	add	pc, r1, r0
   1c0a8:	andeq	r0, r0, r4, lsr #32
   1c0ac:	andeq	r0, r0, r8, ror r0
   1c0b0:	andeq	r0, r0, r8, asr #1
   1c0b4:	andeq	r0, r0, r0, rrx
   1c0b8:			; <UNDEFINED> instruction: 0x00000bb8
   1c0bc:			; <UNDEFINED> instruction: 0x00000bb8
   1c0c0:			; <UNDEFINED> instruction: 0x00000bb8
   1c0c4:	andeq	r0, r0, r0, lsr r1
   1c0c8:	andeq	r0, r0, r4, ror #1
   1c0cc:	ldr	r0, [r7, #16]
   1c0d0:	sub	r1, r0, #1
   1c0d4:	cmp	r1, #11
   1c0d8:	bcs	1ce7c <__flatcc_fb_gen_c_builder@@Base+0x1834>
   1c0dc:	ldrd	r2, [r7, #96]	; 0x60
   1c0e0:	ldr	r0, [r4, #204]	; 0xcc
   1c0e4:	stm	sp, {r2, r3}
   1c0e8:	ldr	r2, [pc, #3820]	; 1cfdc <__flatcc_fb_gen_c_builder@@Base+0x1994>
   1c0ec:	add	r2, pc, r2
   1c0f0:	ldr	r3, [r2, r1, lsl #2]
   1c0f4:	ldr	r1, [pc, #3812]	; 1cfe0 <__flatcc_fb_gen_c_builder@@Base+0x1998>
   1c0f8:	mov	r2, r4
   1c0fc:	add	r1, pc, r1
   1c100:	bl	149b8 <fprintf@plt>
   1c104:	b	1c2a8 <__flatcc_fb_gen_c_builder@@Base+0xc60>
   1c108:	ldrd	r2, [r7, #96]	; 0x60
   1c10c:	ldr	r0, [r4, #204]	; 0xcc
   1c110:	stm	sp, {r2, r3}
   1c114:	ldr	r1, [pc, #3792]	; 1cfec <__flatcc_fb_gen_c_builder@@Base+0x19a4>
   1c118:	add	r1, pc, r1
   1c11c:	b	1c184 <__flatcc_fb_gen_c_builder@@Base+0xb3c>
   1c120:	ldr	r2, [r7, #16]
   1c124:	sub	r1, r2, #1
   1c128:	cmp	r1, #11
   1c12c:	bcs	1cd7c <__flatcc_fb_gen_c_builder@@Base+0x1734>
   1c130:	ldr	r0, [r4, #204]	; 0xcc
   1c134:	ldr	r3, [r7, #96]	; 0x60
   1c138:	ldr	r5, [r7, #100]	; 0x64
   1c13c:	cmp	r2, #5
   1c140:	stm	sp, {r3, r5}
   1c144:	ldr	r2, [pc, #3716]	; 1cfd0 <__flatcc_fb_gen_c_builder@@Base+0x1988>
   1c148:	ldr	r3, [pc, #3716]	; 1cfd4 <__flatcc_fb_gen_c_builder@@Base+0x198c>
   1c14c:	add	r3, pc, r3
   1c150:	add	r2, pc, r2
   1c154:	ldr	r3, [r3, r1, lsl #2]
   1c158:	ldr	r1, [pc, #3704]	; 1cfd8 <__flatcc_fb_gen_c_builder@@Base+0x1990>
   1c15c:	moveq	r2, r4
   1c160:	add	r1, pc, r1
   1c164:	bl	149b8 <fprintf@plt>
   1c168:	sub	r5, fp, #256	; 0x100
   1c16c:	b	1c2a8 <__flatcc_fb_gen_c_builder@@Base+0xc60>
   1c170:	ldrd	r2, [r7, #96]	; 0x60
   1c174:	ldr	r0, [r4, #204]	; 0xcc
   1c178:	stm	sp, {r2, r3}
   1c17c:	ldr	r1, [pc, #3692]	; 1cff0 <__flatcc_fb_gen_c_builder@@Base+0x19a8>
   1c180:	add	r1, pc, r1
   1c184:	mov	r2, r4
   1c188:	b	1c2a4 <__flatcc_fb_gen_c_builder@@Base+0xc5c>
   1c18c:	ldr	r1, [r7, #16]
   1c190:	mov	r2, r5
   1c194:	ldr	r0, [r1, #12]
   1c198:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c19c:	ldr	r0, [r7, #16]
   1c1a0:	ldrh	r0, [r0, #8]
   1c1a4:	cmp	r0, #2
   1c1a8:	bcc	1c1bc <__flatcc_fb_gen_c_builder@@Base+0xb74>
   1c1ac:	cmp	r0, #4
   1c1b0:	beq	1c234 <__flatcc_fb_gen_c_builder@@Base+0xbec>
   1c1b4:	cmp	r0, #3
   1c1b8:	bne	1ced4 <__flatcc_fb_gen_c_builder@@Base+0x188c>
   1c1bc:	ldr	r0, [sp, #64]	; 0x40
   1c1c0:	ldrd	r2, [r7, #96]	; 0x60
   1c1c4:	ldr	r0, [r0]
   1c1c8:	stm	sp, {r2, r3}
   1c1cc:	ldr	r1, [pc, #3548]	; 1cfb0 <__flatcc_fb_gen_c_builder@@Base+0x1968>
   1c1d0:	add	r1, pc, r1
   1c1d4:	b	1c2a0 <__flatcc_fb_gen_c_builder@@Base+0xc58>
   1c1d8:	ldr	r1, [r7, #16]
   1c1dc:	mov	r2, r5
   1c1e0:	ldr	r0, [r1, #12]
   1c1e4:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c1e8:	ldr	r0, [r7, #16]
   1c1ec:	ldrh	r0, [r0, #8]
   1c1f0:	cmp	r0, #4
   1c1f4:	bhi	1cd28 <__flatcc_fb_gen_c_builder@@Base+0x16e0>
   1c1f8:	add	r1, pc, #4
   1c1fc:	ldr	r0, [r1, r0, lsl #2]
   1c200:	add	pc, r1, r0
   1c204:	andeq	r0, r0, r4, lsl r0
   1c208:	andeq	r0, r0, r8, rrx
   1c20c:	andeq	r0, r0, r4, lsr #22
   1c210:	andeq	r0, r0, r4, lsl #1
   1c214:	andeq	r0, r0, ip, asr #32
   1c218:	ldr	r0, [sp, #64]	; 0x40
   1c21c:	ldrd	r2, [r7, #96]	; 0x60
   1c220:	ldr	r0, [r0]
   1c224:	stm	sp, {r2, r3}
   1c228:	ldr	r1, [pc, #3424]	; 1cf90 <__flatcc_fb_gen_c_builder@@Base+0x1948>
   1c22c:	add	r1, pc, r1
   1c230:	b	1c2a0 <__flatcc_fb_gen_c_builder@@Base+0xc58>
   1c234:	ldr	r0, [sp, #64]	; 0x40
   1c238:	ldrd	r2, [r7, #96]	; 0x60
   1c23c:	ldr	r0, [r0]
   1c240:	stm	sp, {r2, r3}
   1c244:	ldr	r1, [pc, #3432]	; 1cfb4 <__flatcc_fb_gen_c_builder@@Base+0x196c>
   1c248:	add	r1, pc, r1
   1c24c:	b	1c2a0 <__flatcc_fb_gen_c_builder@@Base+0xc58>
   1c250:	ldr	r0, [sp, #64]	; 0x40
   1c254:	ldrd	r2, [r7, #96]	; 0x60
   1c258:	ldr	r0, [r0]
   1c25c:	stm	sp, {r2, r3}
   1c260:	ldr	r1, [pc, #3372]	; 1cf94 <__flatcc_fb_gen_c_builder@@Base+0x194c>
   1c264:	add	r1, pc, r1
   1c268:	b	1c2a0 <__flatcc_fb_gen_c_builder@@Base+0xc58>
   1c26c:	ldr	r0, [sp, #64]	; 0x40
   1c270:	ldrd	r2, [r7, #96]	; 0x60
   1c274:	ldr	r0, [r0]
   1c278:	stm	sp, {r2, r3}
   1c27c:	ldr	r1, [pc, #3332]	; 1cf88 <__flatcc_fb_gen_c_builder@@Base+0x1940>
   1c280:	add	r1, pc, r1
   1c284:	b	1c2a0 <__flatcc_fb_gen_c_builder@@Base+0xc58>
   1c288:	ldr	r0, [sp, #64]	; 0x40
   1c28c:	ldrd	r2, [r7, #96]	; 0x60
   1c290:	ldr	r0, [r0]
   1c294:	stm	sp, {r2, r3}
   1c298:	ldr	r1, [pc, #3308]	; 1cf8c <__flatcc_fb_gen_c_builder@@Base+0x1944>
   1c29c:	add	r1, pc, r1
   1c2a0:	mov	r2, r5
   1c2a4:	bl	149b8 <fprintf@plt>
   1c2a8:	ldr	r7, [r7]
   1c2ac:	cmp	r7, #0
   1c2b0:	bne	1c010 <__flatcc_fb_gen_c_builder@@Base+0x9c8>
   1c2b4:	ldr	sl, [sp, #64]	; 0x40
   1c2b8:	add	r2, sp, #168	; 0xa8
   1c2bc:	ldr	r0, [sl]
   1c2c0:	ldr	r1, [pc, #3356]	; 1cfe4 <__flatcc_fb_gen_c_builder@@Base+0x199c>
   1c2c4:	add	r1, pc, r1
   1c2c8:	bl	149b8 <fprintf@plt>
   1c2cc:	ldr	r7, [r6, #20]
   1c2d0:	cmp	r7, #0
   1c2d4:	beq	1c370 <__flatcc_fb_gen_c_builder@@Base+0xd28>
   1c2d8:	mov	r5, #0
   1c2dc:	ldrb	r0, [r7, #72]	; 0x48
   1c2e0:	tst	r0, #4
   1c2e4:	bne	1c364 <__flatcc_fb_gen_c_builder@@Base+0xd1c>
   1c2e8:	cmp	r9, #0
   1c2ec:	beq	1c34c <__flatcc_fb_gen_c_builder@@Base+0xd04>
   1c2f0:	cmp	r5, #0
   1c2f4:	beq	1c32c <__flatcc_fb_gen_c_builder@@Base+0xce4>
   1c2f8:	ldr	r3, [sl]
   1c2fc:	tst	r5, #3
   1c300:	bne	1c338 <__flatcc_fb_gen_c_builder@@Base+0xcf0>
   1c304:	sub	r0, r9, r5
   1c308:	cmp	r0, #2
   1c30c:	ble	1c338 <__flatcc_fb_gen_c_builder@@Base+0xcf0>
   1c310:	ldr	r1, [pc, #3316]	; 1d00c <__flatcc_fb_gen_c_builder@@Base+0x19c4>
   1c314:	ldr	r2, [pc, #3316]	; 1d010 <__flatcc_fb_gen_c_builder@@Base+0x19c8>
   1c318:	mov	r0, r3
   1c31c:	add	r1, pc, r1
   1c320:	add	r2, pc, r2
   1c324:	bl	149b8 <fprintf@plt>
   1c328:	b	1c34c <__flatcc_fb_gen_c_builder@@Base+0xd04>
   1c32c:	ldr	r3, [sl]
   1c330:	cmp	r9, #5
   1c334:	bge	1c310 <__flatcc_fb_gen_c_builder@@Base+0xcc8>
   1c338:	ldr	r0, [pc, #3240]	; 1cfe8 <__flatcc_fb_gen_c_builder@@Base+0x19a0>
   1c33c:	mov	r1, #2
   1c340:	mov	r2, #1
   1c344:	add	r0, pc, r0
   1c348:	bl	1494c <fwrite@plt>
   1c34c:	ldrd	r2, [r7, #96]	; 0x60
   1c350:	ldr	r0, [sl]
   1c354:	ldr	r1, [pc, #3256]	; 1d014 <__flatcc_fb_gen_c_builder@@Base+0x19cc>
   1c358:	add	r1, pc, r1
   1c35c:	bl	149b8 <fprintf@plt>
   1c360:	add	r5, r5, #1
   1c364:	ldr	r7, [r7]
   1c368:	cmp	r7, #0
   1c36c:	bne	1c2dc <__flatcc_fb_gen_c_builder@@Base+0xc94>
   1c370:	ldr	r1, [r4, #204]	; 0xcc
   1c374:	mov	r0, #10
   1c378:	bl	14a18 <fputc@plt>
   1c37c:	add	r5, sp, #168	; 0xa8
   1c380:	ldr	r0, [r4, #204]	; 0xcc
   1c384:	str	r4, [sp]
   1c388:	str	r5, [sp, #4]
   1c38c:	mov	r2, r5
   1c390:	mov	r3, r5
   1c394:	ldr	r1, [pc, #3196]	; 1d018 <__flatcc_fb_gen_c_builder@@Base+0x19d0>
   1c398:	add	r1, pc, r1
   1c39c:	bl	149b8 <fprintf@plt>
   1c3a0:	sub	r9, fp, #256	; 0x100
   1c3a4:	ldr	r6, [r6]
   1c3a8:	cmp	r6, #0
   1c3ac:	bne	1bf80 <__flatcc_fb_gen_c_builder@@Base+0x938>
   1c3b0:	ldr	r0, [sp, #60]	; 0x3c
   1c3b4:	cmp	r0, #0
   1c3b8:	beq	1cc0c <__flatcc_fb_gen_c_builder@@Base+0x15c4>
   1c3bc:	ldr	r1, [r4, #204]	; 0xcc
   1c3c0:	mov	r0, #10
   1c3c4:	bl	14a18 <fputc@plt>
   1c3c8:	mov	r0, r4
   1c3cc:	bl	1d9c8 <__flatcc_fb_gen_c_builder@@Base+0x2380>
   1c3d0:	ldr	r0, [r4, #208]	; 0xd0
   1c3d4:	ldr	r7, [r0, #40]	; 0x28
   1c3d8:	cmp	r7, #0
   1c3dc:	beq	1cc14 <__flatcc_fb_gen_c_builder@@Base+0x15cc>
   1c3e0:	ldrh	r0, [r7, #8]
   1c3e4:	cmp	r0, #0
   1c3e8:	bne	1cbf4 <__flatcc_fb_gen_c_builder@@Base+0x15ac>
   1c3ec:	mov	r0, r9
   1c3f0:	mov	r1, #0
   1c3f4:	mov	r2, #220	; 0xdc
   1c3f8:	bl	149d0 <memset@plt>
   1c3fc:	add	r0, sp, #168	; 0xa8
   1c400:	mov	r1, #0
   1c404:	mov	r2, #220	; 0xdc
   1c408:	bl	149d0 <memset@plt>
   1c40c:	ldr	r0, [r7, #12]
   1c410:	mov	r1, r7
   1c414:	mov	r2, r9
   1c418:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c41c:	str	r7, [sp, #60]	; 0x3c
   1c420:	ldr	r7, [r7, #20]
   1c424:	cmp	r7, #0
   1c428:	bne	1c840 <__flatcc_fb_gen_c_builder@@Base+0x11f8>
   1c42c:	b	1c9b8 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1c430:	ldrd	r2, [r7, #96]	; 0x60
   1c434:	ldr	r0, [r4, #204]	; 0xcc
   1c438:	stm	sp, {r2, r3, r4, r9, sl}
   1c43c:	str	r8, [sp, #20]
   1c440:	ldr	r1, [pc, #3108]	; 1d06c <__flatcc_fb_gen_c_builder@@Base+0x1a24>
   1c444:	add	r1, pc, r1
   1c448:	b	1c510 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1c44c:	ldr	r9, [r7, #16]
   1c450:	sub	r5, r9, #1
   1c454:	cmp	r5, #11
   1c458:	bcs	1cd7c <__flatcc_fb_gen_c_builder@@Base+0x1734>
   1c45c:	add	r1, r7, #48	; 0x30
   1c460:	mov	r0, r9
   1c464:	add	r2, sp, #68	; 0x44
   1c468:	bl	1dbc0 <__flatcc_fb_gen_c_builder@@Base+0x2578>
   1c46c:	add	lr, r7, #88	; 0x58
   1c470:	mov	r6, r4
   1c474:	cmp	r9, #5
   1c478:	sub	r9, fp, #256	; 0x100
   1c47c:	ldm	lr, {r1, r2, ip, lr}
   1c480:	ldrh	r3, [r7, #74]	; 0x4a
   1c484:	ldr	r0, [r4, #204]	; 0xcc
   1c488:	add	r4, sp, #68	; 0x44
   1c48c:	str	r4, [sp, #52]	; 0x34
   1c490:	mov	r4, r6
   1c494:	str	r2, [sp, #44]	; 0x2c
   1c498:	str	r3, [sp, #48]	; 0x30
   1c49c:	str	r1, [sp, #40]	; 0x28
   1c4a0:	mov	r2, r6
   1c4a4:	ldr	r1, [pc, #2944]	; 1d02c <__flatcc_fb_gen_c_builder@@Base+0x19e4>
   1c4a8:	add	r1, pc, r1
   1c4ac:	ldr	r1, [r1, r5, lsl #2]
   1c4b0:	str	r1, [sp, #36]	; 0x24
   1c4b4:	ldr	r1, [pc, #2932]	; 1d030 <__flatcc_fb_gen_c_builder@@Base+0x19e8>
   1c4b8:	add	r1, pc, r1
   1c4bc:	moveq	r1, r6
   1c4c0:	str	r1, [sp, #32]
   1c4c4:	ldr	r1, [pc, #2920]	; 1d034 <__flatcc_fb_gen_c_builder@@Base+0x19ec>
   1c4c8:	stm	sp, {ip, lr}
   1c4cc:	str	r6, [sp, #8]
   1c4d0:	str	r9, [sp, #12]
   1c4d4:	str	sl, [sp, #16]
   1c4d8:	str	r8, [sp, #20]
   1c4dc:	str	r6, [sp, #24]
   1c4e0:	add	r1, pc, r1
   1c4e4:	ldr	r1, [r1, r5, lsl #2]
   1c4e8:	str	r1, [sp, #28]
   1c4ec:	ldr	r1, [pc, #2884]	; 1d038 <__flatcc_fb_gen_c_builder@@Base+0x19f0>
   1c4f0:	add	r1, pc, r1
   1c4f4:	b	1c514 <__flatcc_fb_gen_c_builder@@Base+0xecc>
   1c4f8:	ldrd	r2, [r7, #96]	; 0x60
   1c4fc:	ldr	r0, [r4, #204]	; 0xcc
   1c500:	stm	sp, {r2, r3, r4, r9, sl}
   1c504:	str	r8, [sp, #20]
   1c508:	ldr	r1, [pc, #2912]	; 1d070 <__flatcc_fb_gen_c_builder@@Base+0x1a28>
   1c50c:	add	r1, pc, r1
   1c510:	mov	r2, r4
   1c514:	bl	149b8 <fprintf@plt>
   1c518:	ldr	r7, [r7]
   1c51c:	cmp	r7, #0
   1c520:	bne	1c840 <__flatcc_fb_gen_c_builder@@Base+0x11f8>
   1c524:	b	1c9b8 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1c528:	ldr	r1, [r7, #16]
   1c52c:	add	r2, sp, #168	; 0xa8
   1c530:	ldr	r0, [r1, #12]
   1c534:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c538:	ldr	r0, [r7, #16]
   1c53c:	ldrh	r1, [r0, #8]
   1c540:	cmp	r1, #4
   1c544:	bhi	1cdd0 <__flatcc_fb_gen_c_builder@@Base+0x1788>
   1c548:	add	r2, pc, #4
   1c54c:	ldr	r1, [r2, r1, lsl #2]
   1c550:	add	pc, r2, r1
   1c554:	andeq	r0, r0, r4, lsl r0
   1c558:	andeq	r0, r0, r8, asr #3
   1c55c:	andeq	r0, r0, ip, ror r8
   1c560:	andeq	r0, r0, r4, ror #4
   1c564:	andeq	r0, r0, r4, lsl r1
   1c568:	ldrb	r0, [r0, #10]
   1c56c:	tst	r0, #8
   1c570:	beq	1c590 <__flatcc_fb_gen_c_builder@@Base+0xf48>
   1c574:	ldr	r0, [sp, #64]	; 0x40
   1c578:	mov	r1, #32
   1c57c:	mov	r2, #1
   1c580:	ldr	r3, [r0]
   1c584:	ldr	r0, [pc, #2840]	; 1d0a4 <__flatcc_fb_gen_c_builder@@Base+0x1a5c>
   1c588:	add	r0, pc, r0
   1c58c:	bl	1494c <fwrite@plt>
   1c590:	ldrd	r2, [r7, #96]	; 0x60
   1c594:	add	r1, sp, #168	; 0xa8
   1c598:	ldr	r0, [r4, #204]	; 0xcc
   1c59c:	stm	sp, {r2, r3, r4, r9, sl}
   1c5a0:	str	r8, [sp, #20]
   1c5a4:	str	r1, [sp, #24]
   1c5a8:	ldr	r1, [pc, #2808]	; 1d0a8 <__flatcc_fb_gen_c_builder@@Base+0x1a60>
   1c5ac:	add	r1, pc, r1
   1c5b0:	b	1c510 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1c5b4:	ldr	r1, [r7, #16]
   1c5b8:	add	r2, sp, #168	; 0xa8
   1c5bc:	ldr	r0, [r1, #12]
   1c5c0:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c5c4:	ldr	r0, [r7, #16]
   1c5c8:	ldrh	r1, [r0, #8]
   1c5cc:	cmp	r1, #4
   1c5d0:	bhi	1ce28 <__flatcc_fb_gen_c_builder@@Base+0x17e0>
   1c5d4:	add	r2, pc, #4
   1c5d8:	ldr	r1, [r2, r1, lsl #2]
   1c5dc:	add	pc, r2, r1
   1c5e0:	andeq	r0, r0, r4, lsl r0
   1c5e4:	muleq	r0, r4, r1
   1c5e8:	andeq	r0, r0, r8, asr #16
   1c5ec:	andeq	r0, r0, r8, lsl #4
   1c5f0:	ldrdeq	r0, [r0], -r4
   1c5f4:	ldrd	r2, [r7, #96]	; 0x60
   1c5f8:	add	r1, sp, #168	; 0xa8
   1c5fc:	ldr	r0, [r4, #204]	; 0xcc
   1c600:	stm	sp, {r2, r3, r4, r9, sl}
   1c604:	str	r8, [sp, #20]
   1c608:	str	r1, [sp, #24]
   1c60c:	ldr	r1, [pc, #2660]	; 1d078 <__flatcc_fb_gen_c_builder@@Base+0x1a30>
   1c610:	add	r1, pc, r1
   1c614:	b	1c510 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1c618:	ldr	r0, [r1, #12]
   1c61c:	add	r5, sp, #168	; 0xa8
   1c620:	mov	r2, r5
   1c624:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c628:	ldr	r1, [r7, #104]	; 0x68
   1c62c:	ldr	r0, [r4, #204]	; 0xcc
   1c630:	ldrh	r1, [r1, #104]	; 0x68
   1c634:	stm	sp, {r9, sl}
   1c638:	str	r8, [sp, #8]
   1c63c:	str	r5, [sp, #12]
   1c640:	str	r5, [sp, #20]
   1c644:	str	r5, [sp, #24]
   1c648:	str	r1, [sp, #16]
   1c64c:	ldr	r1, [pc, #2556]	; 1d050 <__flatcc_fb_gen_c_builder@@Base+0x1a08>
   1c650:	add	r1, pc, r1
   1c654:	mov	r2, r4
   1c658:	mov	r3, r4
   1c65c:	b	1c9a8 <__flatcc_fb_gen_c_builder@@Base+0x1360>
   1c660:	andeq	r5, r3, lr, asr #21
   1c664:	andeq	r4, r2, r5, lsr pc
   1c668:	ldrd	r2, [r7, #96]	; 0x60
   1c66c:	add	r1, sp, #168	; 0xa8
   1c670:	ldr	r0, [r4, #204]	; 0xcc
   1c674:	stm	sp, {r2, r3, r4, r9, sl}
   1c678:	str	r8, [sp, #20]
   1c67c:	str	r1, [sp, #24]
   1c680:	mov	r2, r4
   1c684:	ldr	r1, [pc, #2596]	; 1d0b0 <__flatcc_fb_gen_c_builder@@Base+0x1a68>
   1c688:	add	r1, pc, r1
   1c68c:	bl	149b8 <fprintf@plt>
   1c690:	ldr	r0, [r7, #16]
   1c694:	str	r0, [sp]
   1c698:	mov	r0, #1
   1c69c:	b	1c6e8 <__flatcc_fb_gen_c_builder@@Base+0x10a0>
   1c6a0:	andeq	r5, r3, r5, asr #21
   1c6a4:	andeq	r5, r3, r2, asr #21
   1c6a8:	andeq	fp, r2, ip, lsl #2
   1c6ac:	andeq	sp, r2, r6, lsl #6
   1c6b0:	muleq	r3, r6, sl
   1c6b4:	ldrd	r2, [r7, #96]	; 0x60
   1c6b8:	add	r1, sp, #168	; 0xa8
   1c6bc:	ldr	r0, [r4, #204]	; 0xcc
   1c6c0:	stm	sp, {r2, r3, r4, r9, sl}
   1c6c4:	str	r8, [sp, #20]
   1c6c8:	str	r1, [sp, #24]
   1c6cc:	mov	r2, r4
   1c6d0:	ldr	r1, [pc, #2472]	; 1d080 <__flatcc_fb_gen_c_builder@@Base+0x1a38>
   1c6d4:	add	r1, pc, r1
   1c6d8:	bl	149b8 <fprintf@plt>
   1c6dc:	ldr	r0, [r7, #16]
   1c6e0:	str	r0, [sp]
   1c6e4:	mov	r0, #0
   1c6e8:	str	r0, [sp, #4]
   1c6ec:	mov	r0, r4
   1c6f0:	mov	r1, r9
   1c6f4:	mov	r2, sl
   1c6f8:	mov	r3, r8
   1c6fc:	bl	1ddb8 <__flatcc_fb_gen_c_builder@@Base+0x2770>
   1c700:	ldr	r7, [r7]
   1c704:	cmp	r7, #0
   1c708:	bne	1c840 <__flatcc_fb_gen_c_builder@@Base+0x11f8>
   1c70c:	b	1c9b8 <__flatcc_fb_gen_c_builder@@Base+0x1370>
   1c710:	andeq	fp, r3, r6, lsl #14
   1c714:	andeq	r5, r3, r9, lsl #21
   1c718:	andeq	r5, r2, r0, rrx
   1c71c:	ldrb	r0, [r0, #10]
   1c720:	tst	r0, #8
   1c724:	beq	1c744 <__flatcc_fb_gen_c_builder@@Base+0x10fc>
   1c728:	ldr	r0, [sp, #64]	; 0x40
   1c72c:	mov	r1, #32
   1c730:	mov	r2, #1
   1c734:	ldr	r3, [r0]
   1c738:	ldr	r0, [pc, #2396]	; 1d09c <__flatcc_fb_gen_c_builder@@Base+0x1a54>
   1c73c:	add	r0, pc, r0
   1c740:	bl	1494c <fwrite@plt>
   1c744:	ldrd	r2, [r7, #96]	; 0x60
   1c748:	add	r1, sp, #168	; 0xa8
   1c74c:	ldr	r0, [r4, #204]	; 0xcc
   1c750:	stm	sp, {r2, r3, r4, r9, sl}
   1c754:	str	r8, [sp, #20]
   1c758:	str	r1, [sp, #24]
   1c75c:	str	r1, [sp, #28]
   1c760:	ldr	r1, [pc, #2360]	; 1d0a0 <__flatcc_fb_gen_c_builder@@Base+0x1a58>
   1c764:	add	r1, pc, r1
   1c768:	b	1c510 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1c76c:	ldrdeq	fp, [r2], -r5
   1c770:	strdeq	fp, [r2], -sl
   1c774:	add	r6, r7, #88	; 0x58
   1c778:	ldr	r0, [r4, #204]	; 0xcc
   1c77c:	add	ip, sp, #32
   1c780:	ldm	r6, {r1, r2, r3, r6}
   1c784:	ldrh	r5, [r7, #74]	; 0x4a
   1c788:	stm	ip, {r1, r2, r5}
   1c78c:	add	r1, sp, #8
   1c790:	stm	sp, {r3, r6}
   1c794:	stm	r1, {r4, r9, sl}
   1c798:	add	r1, sp, #168	; 0xa8
   1c79c:	str	r8, [sp, #20]
   1c7a0:	str	r1, [sp, #24]
   1c7a4:	ldr	r1, [pc, #2248]	; 1d074 <__flatcc_fb_gen_c_builder@@Base+0x1a2c>
   1c7a8:	add	r1, pc, r1
   1c7ac:	b	1c510 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1c7b0:	strdeq	fp, [r2], -sl
   1c7b4:	andeq	fp, r2, r2, lsl r1
   1c7b8:	ldrd	r2, [r7, #96]	; 0x60
   1c7bc:	add	r1, sp, #168	; 0xa8
   1c7c0:	ldr	r0, [r4, #204]	; 0xcc
   1c7c4:	stm	sp, {r2, r3, r4, r9, sl}
   1c7c8:	str	r8, [sp, #20]
   1c7cc:	str	r1, [sp, #24]
   1c7d0:	str	r1, [sp, #28]
   1c7d4:	ldr	r1, [pc, #2256]	; 1d0ac <__flatcc_fb_gen_c_builder@@Base+0x1a64>
   1c7d8:	add	r1, pc, r1
   1c7dc:	b	1c510 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1c7e0:	muleq	r3, ip, r9
   1c7e4:	ldrdeq	r5, [r3], -sp
   1c7e8:	ldr	r0, [r0, #40]	; 0x28
   1c7ec:	add	r1, r7, #48	; 0x30
   1c7f0:	add	r2, sp, #68	; 0x44
   1c7f4:	bl	1dbc0 <__flatcc_fb_gen_c_builder@@Base+0x2578>
   1c7f8:	add	r6, r7, #88	; 0x58
   1c7fc:	add	ip, sp, #32
   1c800:	ldm	r6, {r1, r2, r3, r6}
   1c804:	ldrh	r5, [r7, #74]	; 0x4a
   1c808:	ldr	r0, [r4, #204]	; 0xcc
   1c80c:	stm	ip, {r1, r2, r5}
   1c810:	add	r1, sp, #68	; 0x44
   1c814:	str	r1, [sp, #44]	; 0x2c
   1c818:	add	r1, sp, #8
   1c81c:	stm	sp, {r3, r6}
   1c820:	stm	r1, {r4, r9, sl}
   1c824:	add	r1, sp, #168	; 0xa8
   1c828:	str	r8, [sp, #20]
   1c82c:	str	r1, [sp, #24]
   1c830:	str	r1, [sp, #28]
   1c834:	ldr	r1, [pc, #2112]	; 1d07c <__flatcc_fb_gen_c_builder@@Base+0x1a34>
   1c838:	add	r1, pc, r1
   1c83c:	b	1c510 <__flatcc_fb_gen_c_builder@@Base+0xec8>
   1c840:	ldr	r0, [r7, #4]
   1c844:	ldm	r0, {r8, sl}
   1c848:	ldrb	r0, [r7, #72]	; 0x48
   1c84c:	tst	r0, #4
   1c850:	bne	1c98c <__flatcc_fb_gen_c_builder@@Base+0x1344>
   1c854:	ldrh	r0, [r7, #24]
   1c858:	sub	r0, r0, #7
   1c85c:	cmp	r0, #8
   1c860:	bhi	1ccb4 <__flatcc_fb_gen_c_builder@@Base+0x166c>
   1c864:	add	r1, pc, #4
   1c868:	ldr	r0, [r1, r0, lsl #2]
   1c86c:	add	pc, r1, r0
   1c870:	andeq	r0, r0, ip, lsr #32
   1c874:			; <UNDEFINED> instruction: 0xfffffbdc
   1c878:			; <UNDEFINED> instruction: 0xfffffc88
   1c87c:			; <UNDEFINED> instruction: 0xfffffbc0
   1c880:	andeq	r0, r0, r4, asr #8
   1c884:	andeq	r0, r0, r4, asr #8
   1c888:	andeq	r0, r0, r4, asr #8
   1c88c:			; <UNDEFINED> instruction: 0xfffffd44
   1c890:			; <UNDEFINED> instruction: 0xfffffcb8
   1c894:	andeq	r5, r3, fp, asr #19
   1c898:			; <UNDEFINED> instruction: 0x000359b9
   1c89c:	ldr	r2, [r7, #16]
   1c8a0:	sub	r1, r2, #1
   1c8a4:	cmp	r1, #11
   1c8a8:	bcs	1cd7c <__flatcc_fb_gen_c_builder@@Base+0x1734>
   1c8ac:	ldr	r0, [pc, #1928]	; 1d03c <__flatcc_fb_gen_c_builder@@Base+0x19f4>
   1c8b0:	cmp	r2, #5
   1c8b4:	add	r0, pc, r0
   1c8b8:	ldr	r3, [r0, r1, lsl #2]
   1c8bc:	ldr	r0, [r4, #204]	; 0xcc
   1c8c0:	ldr	r6, [r7, #96]	; 0x60
   1c8c4:	ldr	r5, [r7, #100]	; 0x64
   1c8c8:	ldr	r2, [pc, #1904]	; 1d040 <__flatcc_fb_gen_c_builder@@Base+0x19f8>
   1c8cc:	add	r2, pc, r2
   1c8d0:	str	r3, [sp, #36]	; 0x24
   1c8d4:	moveq	r2, r4
   1c8d8:	str	r2, [sp, #32]
   1c8dc:	ldr	r2, [pc, #1888]	; 1d044 <__flatcc_fb_gen_c_builder@@Base+0x19fc>
   1c8e0:	str	r6, [sp]
   1c8e4:	str	r5, [sp, #4]
   1c8e8:	add	r2, pc, r2
   1c8ec:	ldr	r1, [r2, r1, lsl #2]
   1c8f0:	add	r2, sp, #8
   1c8f4:	stm	r2, {r4, r9, sl}
   1c8f8:	str	r8, [sp, #20]
   1c8fc:	str	r4, [sp, #24]
   1c900:	mov	r2, r4
   1c904:	str	r1, [sp, #28]
   1c908:	ldr	r1, [pc, #1848]	; 1d048 <__flatcc_fb_gen_c_builder@@Base+0x1a00>
   1c90c:	add	r1, pc, r1
   1c910:	bl	149b8 <fprintf@plt>
   1c914:	ldr	r1, [r7, #104]	; 0x68
   1c918:	cmp	r1, #0
   1c91c:	beq	1c9ac <__flatcc_fb_gen_c_builder@@Base+0x1364>
   1c920:	ldrh	r0, [r1, #8]
   1c924:	cmp	r0, #1
   1c928:	beq	1c618 <__flatcc_fb_gen_c_builder@@Base+0xfd0>
   1c92c:	cmp	r0, #0
   1c930:	bne	1cf28 <__flatcc_fb_gen_c_builder@@Base+0x18e0>
   1c934:	ldr	r0, [r1, #12]
   1c938:	add	r5, sp, #168	; 0xa8
   1c93c:	mov	r2, r5
   1c940:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c944:	ldr	r0, [r4, #204]	; 0xcc
   1c948:	stm	sp, {r9, sl}
   1c94c:	str	r8, [sp, #8]
   1c950:	str	r5, [sp, #12]
   1c954:	str	r5, [sp, #16]
   1c958:	str	r5, [sp, #20]
   1c95c:	ldr	r1, [pc, #1768]	; 1d04c <__flatcc_fb_gen_c_builder@@Base+0x1a04>
   1c960:	add	r1, pc, r1
   1c964:	b	1c654 <__flatcc_fb_gen_c_builder@@Base+0x100c>
   1c968:	andeq	r5, r3, fp, lsl #23
   1c96c:	andeq	r6, r2, pc, lsl #11
   1c970:	andeq	fp, r3, r5, lsr #6
   1c974:	andeq	r5, r3, r5, lsl #24
   1c978:	strdeq	r5, [r3], -lr
   1c97c:	strdeq	r5, [r3], -r0
   1c980:	andeq	fp, r2, lr, ror #13
   1c984:	muleq	r3, sp, r8
   1c988:	andeq	r5, r3, r2, lsl #17
   1c98c:	ldr	r0, [sp, #64]	; 0x40
   1c990:	mov	r2, r9
   1c994:	mov	r3, sl
   1c998:	ldr	r0, [r0]
   1c99c:	str	r8, [sp]
   1c9a0:	ldr	r1, [pc, #1652]	; 1d01c <__flatcc_fb_gen_c_builder@@Base+0x19d4>
   1c9a4:	add	r1, pc, r1
   1c9a8:	bl	149b8 <fprintf@plt>
   1c9ac:	ldr	r7, [r7]
   1c9b0:	cmp	r7, #0
   1c9b4:	bne	1c840 <__flatcc_fb_gen_c_builder@@Base+0x11f8>
   1c9b8:	ldr	r1, [r4, #204]	; 0xcc
   1c9bc:	mov	r0, #10
   1c9c0:	bl	14a18 <fputc@plt>
   1c9c4:	ldr	r7, [sp, #60]	; 0x3c
   1c9c8:	mov	r0, r9
   1c9cc:	mov	r1, #0
   1c9d0:	mov	r2, #220	; 0xdc
   1c9d4:	ldrh	r6, [r7, #92]	; 0x5c
   1c9d8:	bl	149d0 <memset@plt>
   1c9dc:	ldr	r0, [r7, #12]
   1c9e0:	mov	r1, r7
   1c9e4:	mov	r2, r9
   1c9e8:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1c9ec:	ldr	r0, [r4, #204]	; 0xcc
   1c9f0:	stm	sp, {r4, r9}
   1c9f4:	mov	r2, r9
   1c9f8:	mov	r3, r9
   1c9fc:	ldr	r1, [pc, #1564]	; 1d020 <__flatcc_fb_gen_c_builder@@Base+0x19d8>
   1ca00:	add	r1, pc, r1
   1ca04:	bl	149b8 <fprintf@plt>
   1ca08:	ldr	r0, [r4, #204]	; 0xcc
   1ca0c:	ldr	r1, [pc, #1552]	; 1d024 <__flatcc_fb_gen_c_builder@@Base+0x19dc>
   1ca10:	mov	r2, r9
   1ca14:	add	r1, pc, r1
   1ca18:	bl	149b8 <fprintf@plt>
   1ca1c:	ldr	r5, [r7, #24]
   1ca20:	ldr	sl, [sp, #64]	; 0x40
   1ca24:	cmp	r5, #0
   1ca28:	beq	1cb90 <__flatcc_fb_gen_c_builder@@Base+0x1548>
   1ca2c:	ands	r8, r6, #8
   1ca30:	mov	r6, #0
   1ca34:	mov	r7, r8
   1ca38:	movwne	r7, #1
   1ca3c:	ldrb	r0, [r5, #72]	; 0x48
   1ca40:	tst	r0, #4
   1ca44:	bne	1cae4 <__flatcc_fb_gen_c_builder@@Base+0x149c>
   1ca48:	ldr	r0, [r5, #4]
   1ca4c:	ldm	r0, {r1, r3}
   1ca50:	ldrh	r0, [r5, #24]
   1ca54:	cmp	r0, #14
   1ca58:	bne	1ca80 <__flatcc_fb_gen_c_builder@@Base+0x1438>
   1ca5c:	ldr	r0, [r5, #16]
   1ca60:	mov	r2, #1
   1ca64:	ldrh	r0, [r0, #8]
   1ca68:	cmp	r0, #4
   1ca6c:	sub	r0, r0, #4
   1ca70:	movwne	r0, #1
   1ca74:	moveq	r6, r2
   1ca78:	orrs	r0, r0, r7
   1ca7c:	beq	1cab4 <__flatcc_fb_gen_c_builder@@Base+0x146c>
   1ca80:	ldr	r0, [sl]
   1ca84:	ldr	r2, [r5, #96]	; 0x60
   1ca88:	ldr	r9, [r5, #100]	; 0x64
   1ca8c:	str	r1, [sp]
   1ca90:	str	r9, [sp, #12]
   1ca94:	str	r2, [sp, #8]
   1ca98:	sub	r9, fp, #256	; 0x100
   1ca9c:	ldr	r1, [pc, #1600]	; 1d0e4 <__flatcc_fb_gen_c_builder@@Base+0x1a9c>
   1caa0:	mov	r2, r9
   1caa4:	add	r1, pc, r1
   1caa8:	bl	149b8 <fprintf@plt>
   1caac:	b	1cae4 <__flatcc_fb_gen_c_builder@@Base+0x149c>
   1cab0:	andeq	r5, r3, pc, ror #16
   1cab4:	ldr	r0, [sl]
   1cab8:	ldr	r2, [r5, #96]	; 0x60
   1cabc:	ldr	r9, [r5, #100]	; 0x64
   1cac0:	str	r1, [sp]
   1cac4:	str	r9, [sp, #12]
   1cac8:	str	r2, [sp, #8]
   1cacc:	sub	r9, fp, #256	; 0x100
   1cad0:	ldr	r1, [pc, #1360]	; 1d028 <__flatcc_fb_gen_c_builder@@Base+0x19e0>
   1cad4:	mov	r2, r9
   1cad8:	add	r1, pc, r1
   1cadc:	bl	149b8 <fprintf@plt>
   1cae0:	mov	r6, #1
   1cae4:	ldr	r5, [r5, #108]	; 0x6c
   1cae8:	cmp	r5, #0
   1caec:	bne	1ca3c <__flatcc_fb_gen_c_builder@@Base+0x13f4>
   1caf0:	ldr	r7, [sp, #60]	; 0x3c
   1caf4:	cmp	r8, #0
   1caf8:	bne	1cb90 <__flatcc_fb_gen_c_builder@@Base+0x1548>
   1cafc:	cmp	r6, #0
   1cb00:	beq	1cb90 <__flatcc_fb_gen_c_builder@@Base+0x1548>
   1cb04:	ldr	r5, [r7, #24]
   1cb08:	cmp	r5, #0
   1cb0c:	bne	1cb70 <__flatcc_fb_gen_c_builder@@Base+0x1528>
   1cb10:	b	1cb90 <__flatcc_fb_gen_c_builder@@Base+0x1548>
   1cb14:	andeq	r5, r3, r4, lsl #16
   1cb18:	ldr	r0, [r5, #16]
   1cb1c:	ldrh	r0, [r0, #8]
   1cb20:	cmp	r0, #4
   1cb24:	bne	1cb84 <__flatcc_fb_gen_c_builder@@Base+0x153c>
   1cb28:	ldr	r1, [r5, #4]
   1cb2c:	ldr	r0, [sl]
   1cb30:	ldr	r2, [r5, #96]	; 0x60
   1cb34:	ldr	ip, [r5, #100]	; 0x64
   1cb38:	ldr	r6, [r1]
   1cb3c:	ldr	r3, [r1, #4]
   1cb40:	str	r2, [sp, #8]
   1cb44:	str	ip, [sp, #12]
   1cb48:	mov	r2, r9
   1cb4c:	str	r6, [sp]
   1cb50:	ldr	r1, [pc, #1424]	; 1d0e8 <__flatcc_fb_gen_c_builder@@Base+0x1aa0>
   1cb54:	add	r1, pc, r1
   1cb58:	bl	149b8 <fprintf@plt>
   1cb5c:	b	1cb84 <__flatcc_fb_gen_c_builder@@Base+0x153c>
   1cb60:	andeq	r5, r3, pc, lsl r8
   1cb64:	andeq	r5, r3, r2, lsr #15
   1cb68:	strdeq	r5, [r3], -fp
   1cb6c:	andeq	r5, r3, r8, lsr #14
   1cb70:	ldrb	r0, [r5, #72]	; 0x48
   1cb74:	tst	r0, #4
   1cb78:	ldrheq	r0, [r5, #24]
   1cb7c:	cmpeq	r0, #14
   1cb80:	beq	1cb18 <__flatcc_fb_gen_c_builder@@Base+0x14d0>
   1cb84:	ldr	r5, [r5, #108]	; 0x6c
   1cb88:	cmp	r5, #0
   1cb8c:	bne	1cb70 <__flatcc_fb_gen_c_builder@@Base+0x1528>
   1cb90:	ldr	r0, [r4, #204]	; 0xcc
   1cb94:	ldr	r1, [pc, #1360]	; 1d0ec <__flatcc_fb_gen_c_builder@@Base+0x1aa4>
   1cb98:	mov	r2, r9
   1cb9c:	add	r1, pc, r1
   1cba0:	bl	149b8 <fprintf@plt>
   1cba4:	mov	r0, r9
   1cba8:	mov	r1, #0
   1cbac:	mov	r2, #220	; 0xdc
   1cbb0:	bl	149d0 <memset@plt>
   1cbb4:	ldr	r0, [r7, #12]
   1cbb8:	mov	r1, r7
   1cbbc:	mov	r2, r9
   1cbc0:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1cbc4:	ldr	r0, [r4, #204]	; 0xcc
   1cbc8:	str	r9, [sp]
   1cbcc:	str	r9, [sp, #4]
   1cbd0:	str	r9, [sp, #8]
   1cbd4:	mov	r2, r4
   1cbd8:	mov	r3, r4
   1cbdc:	ldr	r1, [pc, #1292]	; 1d0f0 <__flatcc_fb_gen_c_builder@@Base+0x1aa8>
   1cbe0:	add	r1, pc, r1
   1cbe4:	bl	149b8 <fprintf@plt>
   1cbe8:	ldr	r1, [r4, #204]	; 0xcc
   1cbec:	mov	r0, #10
   1cbf0:	bl	14a18 <fputc@plt>
   1cbf4:	ldr	r7, [r7]
   1cbf8:	cmp	r7, #0
   1cbfc:	bne	1c3e0 <__flatcc_fb_gen_c_builder@@Base+0xd98>
   1cc00:	b	1cc14 <__flatcc_fb_gen_c_builder@@Base+0x15cc>
   1cc04:	andeq	r5, r3, sp, lsr #15
   1cc08:	andeq	r5, r3, r6, asr #13
   1cc0c:	mov	r0, r4
   1cc10:	bl	1d9c8 <__flatcc_fb_gen_c_builder@@Base+0x2380>
   1cc14:	ldr	r0, [r4, #212]	; 0xd4
   1cc18:	ldr	r0, [r0, #140]	; 0x8c
   1cc1c:	cmp	r0, #0
   1cc20:	beq	1cc3c <__flatcc_fb_gen_c_builder@@Base+0x15f4>
   1cc24:	ldr	r3, [sl]
   1cc28:	ldr	r0, [pc, #1220]	; 1d0f4 <__flatcc_fb_gen_c_builder@@Base+0x1aac>
   1cc2c:	mov	r1, #36	; 0x24
   1cc30:	mov	r2, #1
   1cc34:	add	r0, pc, r0
   1cc38:	bl	1494c <fwrite@plt>
   1cc3c:	ldr	r1, [r4, #208]	; 0xd0
   1cc40:	ldr	r0, [r4, #204]	; 0xcc
   1cc44:	ldr	r2, [r1, #164]	; 0xa4
   1cc48:	ldr	r1, [pc, #1192]	; 1d0f8 <__flatcc_fb_gen_c_builder@@Base+0x1ab0>
   1cc4c:	add	r1, pc, r1
   1cc50:	bl	149b8 <fprintf@plt>
   1cc54:	mov	r0, #0
   1cc58:	sub	sp, fp, #28
   1cc5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1cc60:	ldr	r0, [pc, #908]	; 1cff4 <__flatcc_fb_gen_c_builder@@Base+0x19ac>
   1cc64:	movw	r3, #1209	; 0x4b9
   1cc68:	ldr	r0, [pc, r0]
   1cc6c:	ldr	r0, [r0]
   1cc70:	ldr	r1, [pc, #896]	; 1cff8 <__flatcc_fb_gen_c_builder@@Base+0x19b0>
   1cc74:	add	r1, pc, r1
   1cc78:	str	r1, [sp]
   1cc7c:	ldr	r1, [pc, #888]	; 1cffc <__flatcc_fb_gen_c_builder@@Base+0x19b4>
   1cc80:	ldr	r4, [pc, #888]	; 1d000 <__flatcc_fb_gen_c_builder@@Base+0x19b8>
   1cc84:	add	r4, pc, r4
   1cc88:	add	r1, pc, r1
   1cc8c:	mov	r2, r4
   1cc90:	bl	149b8 <fprintf@plt>
   1cc94:	ldr	r0, [pc, #872]	; 1d004 <__flatcc_fb_gen_c_builder@@Base+0x19bc>
   1cc98:	ldr	r3, [pc, #872]	; 1d008 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
   1cc9c:	mov	r1, r4
   1cca0:	movw	r2, #1209	; 0x4b9
   1cca4:	add	r0, pc, r0
   1cca8:	add	r3, pc, r3
   1ccac:	bl	14a78 <__assert_fail@plt>
   1ccb0:	andeq	r5, r3, pc, ror #14
   1ccb4:	ldr	r0, [pc, #1040]	; 1d0cc <__flatcc_fb_gen_c_builder@@Base+0x1a84>
   1ccb8:	movw	r3, #1512	; 0x5e8
   1ccbc:	ldr	r0, [pc, r0]
   1ccc0:	ldr	r0, [r0]
   1ccc4:	ldr	r1, [pc, #1028]	; 1d0d0 <__flatcc_fb_gen_c_builder@@Base+0x1a88>
   1ccc8:	add	r1, pc, r1
   1cccc:	str	r1, [sp]
   1ccd0:	ldr	r1, [pc, #1020]	; 1d0d4 <__flatcc_fb_gen_c_builder@@Base+0x1a8c>
   1ccd4:	ldr	r4, [pc, #1020]	; 1d0d8 <__flatcc_fb_gen_c_builder@@Base+0x1a90>
   1ccd8:	add	r4, pc, r4
   1ccdc:	add	r1, pc, r1
   1cce0:	mov	r2, r4
   1cce4:	bl	149b8 <fprintf@plt>
   1cce8:	ldr	r0, [pc, #1004]	; 1d0dc <__flatcc_fb_gen_c_builder@@Base+0x1a94>
   1ccec:	ldr	r3, [pc, #1004]	; 1d0e0 <__flatcc_fb_gen_c_builder@@Base+0x1a98>
   1ccf0:	mov	r1, r4
   1ccf4:	movw	r2, #1512	; 0x5e8
   1ccf8:	add	r0, pc, r0
   1ccfc:	add	r3, pc, r3
   1cd00:	bl	14a78 <__assert_fail@plt>
   1cd04:	andeq	r5, r3, r1, asr #19
   1cd08:	ldr	r0, [pc, #1004]	; 1d0fc <__flatcc_fb_gen_c_builder@@Base+0x1ab4>
   1cd0c:	ldr	r1, [pc, #1004]	; 1d100 <__flatcc_fb_gen_c_builder@@Base+0x1ab8>
   1cd10:	ldr	r3, [pc, #1004]	; 1d104 <__flatcc_fb_gen_c_builder@@Base+0x1abc>
   1cd14:	movw	r2, #1010	; 0x3f2
   1cd18:	add	r0, pc, r0
   1cd1c:	add	r1, pc, r1
   1cd20:	add	r3, pc, r3
   1cd24:	bl	14a78 <__assert_fail@plt>
   1cd28:	ldr	r0, [pc, #616]	; 1cf98 <__flatcc_fb_gen_c_builder@@Base+0x1950>
   1cd2c:	movw	r3, #1173	; 0x495
   1cd30:	ldr	r0, [pc, r0]
   1cd34:	ldr	r0, [r0]
   1cd38:	ldr	r1, [pc, #604]	; 1cf9c <__flatcc_fb_gen_c_builder@@Base+0x1954>
   1cd3c:	add	r1, pc, r1
   1cd40:	str	r1, [sp]
   1cd44:	ldr	r1, [pc, #596]	; 1cfa0 <__flatcc_fb_gen_c_builder@@Base+0x1958>
   1cd48:	ldr	r4, [pc, #596]	; 1cfa4 <__flatcc_fb_gen_c_builder@@Base+0x195c>
   1cd4c:	add	r4, pc, r4
   1cd50:	add	r1, pc, r1
   1cd54:	mov	r2, r4
   1cd58:	bl	149b8 <fprintf@plt>
   1cd5c:	ldr	r0, [pc, #580]	; 1cfa8 <__flatcc_fb_gen_c_builder@@Base+0x1960>
   1cd60:	ldr	r3, [pc, #580]	; 1cfac <__flatcc_fb_gen_c_builder@@Base+0x1964>
   1cd64:	mov	r1, r4
   1cd68:	movw	r2, #1173	; 0x495
   1cd6c:	add	r0, pc, r0
   1cd70:	add	r3, pc, r3
   1cd74:	bl	14a78 <__assert_fail@plt>
   1cd78:	andeq	r5, r3, fp, asr #19
   1cd7c:	ldr	r0, [pc, #900]	; 1d108 <__flatcc_fb_gen_c_builder@@Base+0x1ac0>
   1cd80:	mov	r3, #141	; 0x8d
   1cd84:	ldr	r0, [pc, r0]
   1cd88:	ldr	r0, [r0]
   1cd8c:	ldr	r1, [pc, #888]	; 1d10c <__flatcc_fb_gen_c_builder@@Base+0x1ac4>
   1cd90:	add	r1, pc, r1
   1cd94:	str	r1, [sp]
   1cd98:	ldr	r1, [pc, #880]	; 1d110 <__flatcc_fb_gen_c_builder@@Base+0x1ac8>
   1cd9c:	ldr	r4, [pc, #880]	; 1d114 <__flatcc_fb_gen_c_builder@@Base+0x1acc>
   1cda0:	add	r4, pc, r4
   1cda4:	add	r1, pc, r1
   1cda8:	mov	r2, r4
   1cdac:	bl	149b8 <fprintf@plt>
   1cdb0:	ldr	r0, [pc, #864]	; 1d118 <__flatcc_fb_gen_c_builder@@Base+0x1ad0>
   1cdb4:	ldr	r3, [pc, #864]	; 1d11c <__flatcc_fb_gen_c_builder@@Base+0x1ad4>
   1cdb8:	mov	r1, r4
   1cdbc:	mov	r2, #141	; 0x8d
   1cdc0:	add	r0, pc, r0
   1cdc4:	add	r3, pc, r3
   1cdc8:	bl	14a78 <__assert_fail@plt>
   1cdcc:	andeq	r5, r3, r2, lsr r9
   1cdd0:	ldr	r0, [pc, #732]	; 1d0b4 <__flatcc_fb_gen_c_builder@@Base+0x1a6c>
   1cdd4:	movw	r3, #1507	; 0x5e3
   1cdd8:	ldr	r0, [pc, r0]
   1cddc:	ldr	r0, [r0]
   1cde0:	ldr	r1, [pc, #720]	; 1d0b8 <__flatcc_fb_gen_c_builder@@Base+0x1a70>
   1cde4:	add	r1, pc, r1
   1cde8:	str	r1, [sp]
   1cdec:	ldr	r1, [pc, #712]	; 1d0bc <__flatcc_fb_gen_c_builder@@Base+0x1a74>
   1cdf0:	ldr	r4, [pc, #712]	; 1d0c0 <__flatcc_fb_gen_c_builder@@Base+0x1a78>
   1cdf4:	add	r4, pc, r4
   1cdf8:	add	r1, pc, r1
   1cdfc:	mov	r2, r4
   1ce00:	bl	149b8 <fprintf@plt>
   1ce04:	ldr	r0, [pc, #696]	; 1d0c4 <__flatcc_fb_gen_c_builder@@Base+0x1a7c>
   1ce08:	ldr	r3, [pc, #696]	; 1d0c8 <__flatcc_fb_gen_c_builder@@Base+0x1a80>
   1ce0c:	mov	r1, r4
   1ce10:	movw	r2, #1507	; 0x5e3
   1ce14:	add	r0, pc, r0
   1ce18:	add	r3, pc, r3
   1ce1c:	bl	14a78 <__assert_fail@plt>
   1ce20:			; <UNDEFINED> instruction: 0x000356b3
   1ce24:	muleq	r2, sp, r9
   1ce28:	ldr	r0, [pc, #596]	; 1d084 <__flatcc_fb_gen_c_builder@@Base+0x1a3c>
   1ce2c:	mov	r3, #1472	; 0x5c0
   1ce30:	ldr	r0, [pc, r0]
   1ce34:	ldr	r0, [r0]
   1ce38:	ldr	r1, [pc, #584]	; 1d088 <__flatcc_fb_gen_c_builder@@Base+0x1a40>
   1ce3c:	add	r1, pc, r1
   1ce40:	str	r1, [sp]
   1ce44:	ldr	r1, [pc, #576]	; 1d08c <__flatcc_fb_gen_c_builder@@Base+0x1a44>
   1ce48:	ldr	r4, [pc, #576]	; 1d090 <__flatcc_fb_gen_c_builder@@Base+0x1a48>
   1ce4c:	add	r4, pc, r4
   1ce50:	add	r1, pc, r1
   1ce54:	mov	r2, r4
   1ce58:	bl	149b8 <fprintf@plt>
   1ce5c:	ldr	r0, [pc, #560]	; 1d094 <__flatcc_fb_gen_c_builder@@Base+0x1a4c>
   1ce60:	ldr	r3, [pc, #560]	; 1d098 <__flatcc_fb_gen_c_builder@@Base+0x1a50>
   1ce64:	mov	r1, r4
   1ce68:	mov	r2, #1472	; 0x5c0
   1ce6c:	add	r0, pc, r0
   1ce70:	add	r3, pc, r3
   1ce74:	bl	14a78 <__assert_fail@plt>
   1ce78:	andeq	sl, r3, r9, asr #28
   1ce7c:	ldr	r0, [pc, #668]	; 1d120 <__flatcc_fb_gen_c_builder@@Base+0x1ad8>
   1ce80:	mov	r3, #96	; 0x60
   1ce84:	ldr	r0, [pc, r0]
   1ce88:	ldr	r0, [r0]
   1ce8c:	ldr	r1, [pc, #656]	; 1d124 <__flatcc_fb_gen_c_builder@@Base+0x1adc>
   1ce90:	add	r1, pc, r1
   1ce94:	str	r1, [sp]
   1ce98:	ldr	r1, [pc, #648]	; 1d128 <__flatcc_fb_gen_c_builder@@Base+0x1ae0>
   1ce9c:	ldr	r4, [pc, #648]	; 1d12c <__flatcc_fb_gen_c_builder@@Base+0x1ae4>
   1cea0:	add	r4, pc, r4
   1cea4:	add	r1, pc, r1
   1cea8:	mov	r2, r4
   1ceac:	bl	149b8 <fprintf@plt>
   1ceb0:	ldr	r0, [pc, #632]	; 1d130 <__flatcc_fb_gen_c_builder@@Base+0x1ae8>
   1ceb4:	ldr	r3, [pc, #632]	; 1d134 <__flatcc_fb_gen_c_builder@@Base+0x1aec>
   1ceb8:	mov	r1, r4
   1cebc:	mov	r2, #96	; 0x60
   1cec0:	add	r0, pc, r0
   1cec4:	add	r3, pc, r3
   1cec8:	bl	14a78 <__assert_fail@plt>
   1cecc:	andeq	r5, r3, sl, lsl #17
   1ced0:	andeq	r5, r3, pc, asr r8
   1ced4:	ldr	r0, [pc, #220]	; 1cfb8 <__flatcc_fb_gen_c_builder@@Base+0x1970>
   1ced8:	movw	r3, #1189	; 0x4a5
   1cedc:	ldr	r0, [pc, r0]
   1cee0:	ldr	r0, [r0]
   1cee4:	ldr	r1, [pc, #208]	; 1cfbc <__flatcc_fb_gen_c_builder@@Base+0x1974>
   1cee8:	add	r1, pc, r1
   1ceec:	str	r1, [sp]
   1cef0:	ldr	r1, [pc, #200]	; 1cfc0 <__flatcc_fb_gen_c_builder@@Base+0x1978>
   1cef4:	ldr	r4, [pc, #200]	; 1cfc4 <__flatcc_fb_gen_c_builder@@Base+0x197c>
   1cef8:	add	r4, pc, r4
   1cefc:	add	r1, pc, r1
   1cf00:	mov	r2, r4
   1cf04:	bl	149b8 <fprintf@plt>
   1cf08:	ldr	r0, [pc, #184]	; 1cfc8 <__flatcc_fb_gen_c_builder@@Base+0x1980>
   1cf0c:	ldr	r3, [pc, #184]	; 1cfcc <__flatcc_fb_gen_c_builder@@Base+0x1984>
   1cf10:	mov	r1, r4
   1cf14:	movw	r2, #1189	; 0x4a5
   1cf18:	add	r0, pc, r0
   1cf1c:	add	r3, pc, r3
   1cf20:	bl	14a78 <__assert_fail@plt>
   1cf24:	andeq	r5, r3, lr, lsl r8
   1cf28:	ldr	r0, [pc, #292]	; 1d054 <__flatcc_fb_gen_c_builder@@Base+0x1a0c>
   1cf2c:	movw	r3, #1430	; 0x596
   1cf30:	ldr	r0, [pc, r0]
   1cf34:	ldr	r0, [r0]
   1cf38:	ldr	r1, [pc, #280]	; 1d058 <__flatcc_fb_gen_c_builder@@Base+0x1a10>
   1cf3c:	add	r1, pc, r1
   1cf40:	str	r1, [sp]
   1cf44:	ldr	r1, [pc, #272]	; 1d05c <__flatcc_fb_gen_c_builder@@Base+0x1a14>
   1cf48:	ldr	r4, [pc, #272]	; 1d060 <__flatcc_fb_gen_c_builder@@Base+0x1a18>
   1cf4c:	add	r4, pc, r4
   1cf50:	add	r1, pc, r1
   1cf54:	mov	r2, r4
   1cf58:	bl	149b8 <fprintf@plt>
   1cf5c:	ldr	r0, [pc, #256]	; 1d064 <__flatcc_fb_gen_c_builder@@Base+0x1a1c>
   1cf60:	ldr	r3, [pc, #256]	; 1d068 <__flatcc_fb_gen_c_builder@@Base+0x1a20>
   1cf64:	mov	r1, r4
   1cf68:	movw	r2, #1430	; 0x596
   1cf6c:	add	r0, pc, r0
   1cf70:	add	r3, pc, r3
   1cf74:	bl	14a78 <__assert_fail@plt>
   1cf78:	andeq	r5, r3, r7, ror #5
   1cf7c:	andeq	sl, r3, r5, asr ip
   1cf80:			; <UNDEFINED> instruction: 0x000354bb
   1cf84:			; <UNDEFINED> instruction: 0x00025ebf
   1cf88:	andeq	r5, r3, r9, asr #10
   1cf8c:	andeq	r5, r3, r9, lsr r5
   1cf90:			; <UNDEFINED> instruction: 0x000355b9
   1cf94:	muleq	r3, r0, r5
   1cf98:	andeq	pc, r4, ip, ror #6
   1cf9c:	andeq	r4, r3, sp, asr #21
   1cfa0:	muleq	r2, r6, r9
   1cfa4:	ldrdeq	r4, [r3], -sl
   1cfa8:	andeq	r4, r3, r2, asr #16
   1cfac:	andeq	r4, r3, r5, asr #21
   1cfb0:	andeq	r5, r3, r1, lsl #14
   1cfb4:	andeq	r5, r3, r7, lsr r6
   1cfb8:	andeq	pc, r4, r0, asr #3
   1cfbc:			; <UNDEFINED> instruction: 0x000349b0
   1cfc0:	andeq	r3, r2, sl, ror #15
   1cfc4:	andeq	r4, r3, lr, lsr #6
   1cfc8:	muleq	r3, r6, r6
   1cfcc:	andeq	r4, r3, r9, lsl r9
   1cfd0:	andeq	r4, r2, lr, lsr #13
   1cfd4:	muleq	r4, ip, ip
   1cfd8:	andeq	r5, r3, r4, ror #14
   1cfdc:	andeq	pc, r4, ip, lsr #26
   1cfe0:	ldrdeq	r5, [r3], -r3
   1cfe4:	andeq	r5, r3, r1, lsr #32
   1cfe8:	muleq	r3, r1, r9
   1cfec:	andeq	r5, r3, ip, asr #15
   1cff0:	andeq	r5, r3, r9, ror r7
   1cff4:	andeq	pc, r4, r4, lsr r4	; <UNPREDICTABLE>
   1cff8:	andeq	r4, r3, sp, lsl r8
   1cffc:	andeq	r3, r2, lr, asr sl
   1d000:	andeq	r4, r3, r2, lsr #11
   1d004:	andeq	r4, r3, sl, lsl #18
   1d008:	andeq	r4, r3, sp, lsl #23
   1d00c:	strdeq	r5, [r3], -r3
   1d010:	strdeq	r5, [r2], -r7
   1d014:	andeq	r5, r3, r1, ror r5
   1d018:	andeq	r5, r3, sp, ror #7
   1d01c:	andeq	r5, r3, r1, ror r1
   1d020:	andeq	r5, r3, sl, lsl #13
   1d024:			; <UNDEFINED> instruction: 0x000356b9
   1d028:	andeq	r5, r3, fp, lsl #12
   1d02c:	andeq	pc, r4, r0, asr #18
   1d030:	andeq	r4, r2, r6, asr #6
   1d034:	andeq	pc, r4, r8, lsr r9	; <UNPREDICTABLE>
   1d038:	andeq	r5, r3, fp, asr r6
   1d03c:	andeq	pc, r4, r4, lsr r5	; <UNPREDICTABLE>
   1d040:	andeq	r3, r2, r2, lsr pc
   1d044:	andeq	pc, r4, r0, lsr r5	; <UNPREDICTABLE>
   1d048:	andeq	r5, r3, r4, lsl #5
   1d04c:	andeq	r5, r3, r7, ror #4
   1d050:	andeq	r5, r3, r8, asr #11
   1d054:	andeq	pc, r4, ip, ror #2
   1d058:	andeq	r4, r3, r2, lsr sp
   1d05c:	muleq	r2, r6, r7
   1d060:	ldrdeq	r4, [r3], -sl
   1d064:	andeq	r4, r3, r2, asr #12
   1d068:	andeq	r4, r3, r5, lsr #26
   1d06c:	muleq	r3, r3, r8
   1d070:	strdeq	r5, [r3], -r6
   1d074:	andeq	r5, r3, ip, lsl #11
   1d078:	andeq	r5, r3, sp, asr r7
   1d07c:	andeq	r5, r3, r3, ror #10
   1d080:	andeq	r5, r3, pc, lsl #14
   1d084:	andeq	pc, r4, ip, ror #4
   1d088:	andeq	sl, r2, r4, lsl pc
   1d08c:	muleq	r2, r6, r8
   1d090:	ldrdeq	r4, [r3], -sl
   1d094:	andeq	r4, r3, r2, asr #14
   1d098:	andeq	r4, r3, r5, lsr #28
   1d09c:	ldrdeq	r5, [r3], -r5	; <UNPREDICTABLE>
   1d0a0:	andeq	r5, r3, lr, asr #13
   1d0a4:	andeq	r5, r3, r9, lsl #17
   1d0a8:			; <UNDEFINED> instruction: 0x000358bb
   1d0ac:	andeq	r5, r3, r4, asr #13
   1d0b0:	andeq	r5, r3, lr, asr #16
   1d0b4:	andeq	pc, r4, r4, asr #5
   1d0b8:			; <UNDEFINED> instruction: 0x0002afb5
   1d0bc:	andeq	r3, r2, lr, ror #17
   1d0c0:	andeq	r4, r3, r2, lsr r4
   1d0c4:	muleq	r3, sl, r7
   1d0c8:	andeq	r4, r3, sp, ror lr
   1d0cc:	andeq	pc, r4, r0, ror #7
   1d0d0:	muleq	r2, r3, r1
   1d0d4:	andeq	r3, r2, sl, lsl #20
   1d0d8:	andeq	r4, r3, lr, asr #10
   1d0dc:			; <UNDEFINED> instruction: 0x000348b6
   1d0e0:	muleq	r3, r9, pc	; <UNPREDICTABLE>
   1d0e4:	andeq	r5, r3, r7, ror #12
   1d0e8:	ldrdeq	r5, [r3], -r9
   1d0ec:			; <UNDEFINED> instruction: 0x000355bd
   1d0f0:	andeq	r5, r3, lr, lsr #11
   1d0f4:	andeq	r9, r2, r6, ror #18
   1d0f8:	andeq	r5, r3, r5, lsl #11
   1d0fc:	andeq	sl, r2, r2, lsl #6
   1d100:	andeq	r4, r3, sl, lsl #10
   1d104:	andeq	r4, r3, lr, ror #10
   1d108:	andeq	pc, r4, r8, lsl r3	; <UNPREDICTABLE>
   1d10c:	andeq	sl, r2, r5, ror #2
   1d110:	andeq	r3, r2, r2, asr #18
   1d114:	strdeq	sl, [r2], -r5
   1d118:	andeq	r4, r3, lr, ror #15
   1d11c:	andeq	sl, r2, r8, ror #2
   1d120:	andeq	pc, r4, r8, lsl r2	; <UNPREDICTABLE>
   1d124:	andeq	sl, r2, r5, rrx
   1d128:	andeq	r3, r2, r2, asr #16
   1d12c:	strdeq	r9, [r2], -r5
   1d130:	andeq	r4, r3, lr, ror #13
   1d134:	andeq	sl, r2, r1, ror #18
   1d138:	push	{r4, r5, fp, lr}
   1d13c:	add	fp, sp, #8
   1d140:	ldr	r5, [r0, #20]
   1d144:	mov	r4, #0
   1d148:	b	1d150 <__flatcc_fb_gen_c_builder@@Base+0x1b08>
   1d14c:	ldr	r5, [r5]
   1d150:	cmp	r5, #0
   1d154:	moveq	r0, r4
   1d158:	popeq	{r4, r5, fp, pc}
   1d15c:	ldrb	r0, [r5, #72]	; 0x48
   1d160:	tst	r0, #4
   1d164:	bne	1d14c <__flatcc_fb_gen_c_builder@@Base+0x1b04>
   1d168:	ldrh	r0, [r5, #24]
   1d16c:	cmp	r0, #14
   1d170:	bne	1d194 <__flatcc_fb_gen_c_builder@@Base+0x1b4c>
   1d174:	ldr	r0, [r5, #16]
   1d178:	ldrh	r1, [r0, #8]
   1d17c:	cmp	r1, #1
   1d180:	bne	1d194 <__flatcc_fb_gen_c_builder@@Base+0x1b4c>
   1d184:	bl	1d138 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1d188:	ldr	r5, [r5]
   1d18c:	add	r4, r0, r4
   1d190:	b	1d150 <__flatcc_fb_gen_c_builder@@Base+0x1b08>
   1d194:	add	r4, r4, #1
   1d198:	b	1d14c <__flatcc_fb_gen_c_builder@@Base+0x1b04>
   1d19c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d1a0:	add	fp, sp, #28
   1d1a4:	sub	sp, sp, #236	; 0xec
   1d1a8:	mov	r4, r2
   1d1ac:	mov	r7, r1
   1d1b0:	mov	r6, r0
   1d1b4:	add	r0, sp, #8
   1d1b8:	mov	r1, #0
   1d1bc:	mov	r2, #220	; 0xdc
   1d1c0:	mov	r5, r3
   1d1c4:	bl	149d0 <memset@plt>
   1d1c8:	ldr	sl, [r7, #20]
   1d1cc:	cmp	sl, #0
   1d1d0:	beq	1d380 <__flatcc_fb_gen_c_builder@@Base+0x1d38>
   1d1d4:	ldr	r0, [pc, #592]	; 1d42c <__flatcc_fb_gen_c_builder@@Base+0x1de4>
   1d1d8:	ldr	r7, [pc, #592]	; 1d430 <__flatcc_fb_gen_c_builder@@Base+0x1de8>
   1d1dc:	ldr	r1, [fp, #8]
   1d1e0:	ldr	r8, [pc, #588]	; 1d434 <__flatcc_fb_gen_c_builder@@Base+0x1dec>
   1d1e4:	add	r9, sp, #8
   1d1e8:	add	r0, pc, r0
   1d1ec:	add	r7, pc, r7
   1d1f0:	cmp	r1, #0
   1d1f4:	add	r8, pc, r8
   1d1f8:	moveq	r7, r0
   1d1fc:	ldrb	r0, [sl, #72]	; 0x48
   1d200:	tst	r0, #4
   1d204:	bne	1d374 <__flatcc_fb_gen_c_builder@@Base+0x1d2c>
   1d208:	ldrh	r0, [sl, #24]
   1d20c:	cmp	r0, #8
   1d210:	beq	1d24c <__flatcc_fb_gen_c_builder@@Base+0x1c04>
   1d214:	cmp	r0, #14
   1d218:	bne	1d38c <__flatcc_fb_gen_c_builder@@Base+0x1d44>
   1d21c:	ldr	r1, [sl, #16]
   1d220:	ldrh	r0, [r1, #8]
   1d224:	cmp	r0, #1
   1d228:	bne	1d28c <__flatcc_fb_gen_c_builder@@Base+0x1c44>
   1d22c:	ldr	r0, [fp, #8]
   1d230:	mov	r2, r4
   1d234:	mov	r3, r5
   1d238:	str	r0, [sp]
   1d23c:	mov	r0, r6
   1d240:	bl	1d19c <__flatcc_fb_gen_c_builder@@Base+0x1b54>
   1d244:	mov	r4, r0
   1d248:	b	1d374 <__flatcc_fb_gen_c_builder@@Base+0x1d2c>
   1d24c:	cmp	r5, #0
   1d250:	beq	1d2ec <__flatcc_fb_gen_c_builder@@Base+0x1ca4>
   1d254:	cmp	r4, #0
   1d258:	beq	1d2cc <__flatcc_fb_gen_c_builder@@Base+0x1c84>
   1d25c:	ldr	r3, [r6, #204]	; 0xcc
   1d260:	tst	r4, #3
   1d264:	bne	1d2d8 <__flatcc_fb_gen_c_builder@@Base+0x1c90>
   1d268:	sub	r0, r5, r4
   1d26c:	cmp	r0, #2
   1d270:	ble	1d2d8 <__flatcc_fb_gen_c_builder@@Base+0x1c90>
   1d274:	ldr	r1, [pc, #460]	; 1d448 <__flatcc_fb_gen_c_builder@@Base+0x1e00>
   1d278:	mov	r0, r3
   1d27c:	mov	r2, r7
   1d280:	add	r1, pc, r1
   1d284:	bl	149b8 <fprintf@plt>
   1d288:	b	1d2ec <__flatcc_fb_gen_c_builder@@Base+0x1ca4>
   1d28c:	cmp	r5, #0
   1d290:	beq	1d348 <__flatcc_fb_gen_c_builder@@Base+0x1d00>
   1d294:	cmp	r4, #0
   1d298:	beq	1d328 <__flatcc_fb_gen_c_builder@@Base+0x1ce0>
   1d29c:	ldr	r3, [r6, #204]	; 0xcc
   1d2a0:	tst	r4, #3
   1d2a4:	bne	1d334 <__flatcc_fb_gen_c_builder@@Base+0x1cec>
   1d2a8:	sub	r0, r5, r4
   1d2ac:	cmp	r0, #2
   1d2b0:	ble	1d334 <__flatcc_fb_gen_c_builder@@Base+0x1cec>
   1d2b4:	ldr	r1, [pc, #384]	; 1d43c <__flatcc_fb_gen_c_builder@@Base+0x1df4>
   1d2b8:	mov	r0, r3
   1d2bc:	mov	r2, r7
   1d2c0:	add	r1, pc, r1
   1d2c4:	bl	149b8 <fprintf@plt>
   1d2c8:	b	1d348 <__flatcc_fb_gen_c_builder@@Base+0x1d00>
   1d2cc:	ldr	r3, [r6, #204]	; 0xcc
   1d2d0:	cmp	r5, #5
   1d2d4:	bge	1d274 <__flatcc_fb_gen_c_builder@@Base+0x1c2c>
   1d2d8:	ldr	r0, [pc, #356]	; 1d444 <__flatcc_fb_gen_c_builder@@Base+0x1dfc>
   1d2dc:	mov	r1, #2
   1d2e0:	mov	r2, #1
   1d2e4:	add	r0, pc, r0
   1d2e8:	bl	1494c <fwrite@plt>
   1d2ec:	ldr	r2, [sl, #16]
   1d2f0:	sub	r1, r2, #1
   1d2f4:	cmp	r1, #11
   1d2f8:	bcs	1d3dc <__flatcc_fb_gen_c_builder@@Base+0x1d94>
   1d2fc:	ldr	r0, [r6, #204]	; 0xcc
   1d300:	str	r4, [sp]
   1d304:	cmp	r2, #5
   1d308:	ldr	r2, [pc, #316]	; 1d44c <__flatcc_fb_gen_c_builder@@Base+0x1e04>
   1d30c:	ldr	r3, [pc, #316]	; 1d450 <__flatcc_fb_gen_c_builder@@Base+0x1e08>
   1d310:	add	r3, pc, r3
   1d314:	add	r2, pc, r2
   1d318:	ldr	r3, [r3, r1, lsl #2]
   1d31c:	moveq	r2, r6
   1d320:	mov	r1, r8
   1d324:	b	1d36c <__flatcc_fb_gen_c_builder@@Base+0x1d24>
   1d328:	ldr	r3, [r6, #204]	; 0xcc
   1d32c:	cmp	r5, #5
   1d330:	bge	1d2b4 <__flatcc_fb_gen_c_builder@@Base+0x1c6c>
   1d334:	ldr	r0, [pc, #252]	; 1d438 <__flatcc_fb_gen_c_builder@@Base+0x1df0>
   1d338:	mov	r1, #2
   1d33c:	mov	r2, #1
   1d340:	add	r0, pc, r0
   1d344:	bl	1494c <fwrite@plt>
   1d348:	ldr	r1, [sl, #16]
   1d34c:	mov	r2, r9
   1d350:	ldr	r0, [r1, #12]
   1d354:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1d358:	ldr	r0, [r6, #204]	; 0xcc
   1d35c:	ldr	r1, [pc, #220]	; 1d440 <__flatcc_fb_gen_c_builder@@Base+0x1df8>
   1d360:	mov	r2, r9
   1d364:	mov	r3, r4
   1d368:	add	r1, pc, r1
   1d36c:	bl	149b8 <fprintf@plt>
   1d370:	add	r4, r4, #1
   1d374:	ldr	sl, [sl]
   1d378:	cmp	sl, #0
   1d37c:	bne	1d1fc <__flatcc_fb_gen_c_builder@@Base+0x1bb4>
   1d380:	mov	r0, r4
   1d384:	sub	sp, fp, #28
   1d388:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d38c:	ldr	r0, [pc, #216]	; 1d46c <__flatcc_fb_gen_c_builder@@Base+0x1e24>
   1d390:	movw	r3, #850	; 0x352
   1d394:	ldr	r0, [pc, r0]
   1d398:	ldr	r0, [r0]
   1d39c:	ldr	r1, [pc, #204]	; 1d470 <__flatcc_fb_gen_c_builder@@Base+0x1e28>
   1d3a0:	add	r1, pc, r1
   1d3a4:	str	r1, [sp]
   1d3a8:	ldr	r1, [pc, #196]	; 1d474 <__flatcc_fb_gen_c_builder@@Base+0x1e2c>
   1d3ac:	ldr	r4, [pc, #196]	; 1d478 <__flatcc_fb_gen_c_builder@@Base+0x1e30>
   1d3b0:	add	r4, pc, r4
   1d3b4:	add	r1, pc, r1
   1d3b8:	mov	r2, r4
   1d3bc:	bl	149b8 <fprintf@plt>
   1d3c0:	ldr	r0, [pc, #180]	; 1d47c <__flatcc_fb_gen_c_builder@@Base+0x1e34>
   1d3c4:	ldr	r3, [pc, #180]	; 1d480 <__flatcc_fb_gen_c_builder@@Base+0x1e38>
   1d3c8:	mov	r1, r4
   1d3cc:	movw	r2, #850	; 0x352
   1d3d0:	add	r0, pc, r0
   1d3d4:	add	r3, pc, r3
   1d3d8:	bl	14a78 <__assert_fail@plt>
   1d3dc:	ldr	r0, [pc, #112]	; 1d454 <__flatcc_fb_gen_c_builder@@Base+0x1e0c>
   1d3e0:	mov	r3, #141	; 0x8d
   1d3e4:	ldr	r0, [pc, r0]
   1d3e8:	ldr	r0, [r0]
   1d3ec:	ldr	r1, [pc, #100]	; 1d458 <__flatcc_fb_gen_c_builder@@Base+0x1e10>
   1d3f0:	add	r1, pc, r1
   1d3f4:	str	r1, [sp]
   1d3f8:	ldr	r1, [pc, #92]	; 1d45c <__flatcc_fb_gen_c_builder@@Base+0x1e14>
   1d3fc:	ldr	r4, [pc, #92]	; 1d460 <__flatcc_fb_gen_c_builder@@Base+0x1e18>
   1d400:	add	r4, pc, r4
   1d404:	add	r1, pc, r1
   1d408:	mov	r2, r4
   1d40c:	bl	149b8 <fprintf@plt>
   1d410:	ldr	r0, [pc, #76]	; 1d464 <__flatcc_fb_gen_c_builder@@Base+0x1e1c>
   1d414:	ldr	r3, [pc, #76]	; 1d468 <__flatcc_fb_gen_c_builder@@Base+0x1e20>
   1d418:	mov	r1, r4
   1d41c:	mov	r2, #141	; 0x8d
   1d420:	add	r0, pc, r0
   1d424:	add	r3, pc, r3
   1d428:	bl	14a78 <__assert_fail@plt>
   1d42c:	andeq	r3, r2, r5, lsl r6
   1d430:	andeq	r4, r2, fp, lsr #26
   1d434:	muleq	r3, r4, r2
   1d438:	muleq	r3, r5, r9
   1d43c:	andeq	r4, r3, pc, asr #4
   1d440:	andeq	r4, r3, r2, lsl r1
   1d444:	strdeq	r9, [r3], -r1
   1d448:	andeq	r4, r3, pc, lsl #5
   1d44c:	andeq	r3, r2, sl, ror #9
   1d450:	ldrdeq	lr, [r4], -r8
   1d454:			; <UNDEFINED> instruction: 0x0004ecb8
   1d458:	andeq	r9, r2, r5, lsl #22
   1d45c:	andeq	r3, r2, r2, ror #5
   1d460:	muleq	r2, r5, sl
   1d464:	andeq	r4, r3, lr, lsl #3
   1d468:	andeq	r9, r2, r8, lsl #22
   1d46c:	andeq	lr, r4, r8, lsl #26
   1d470:	strdeq	r4, [r3], -r1
   1d474:	andeq	r3, r2, r2, lsr r3
   1d478:	andeq	r3, r3, r6, ror lr
   1d47c:	ldrdeq	r4, [r3], -lr
   1d480:	andeq	r4, r3, fp, ror #1
   1d484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d488:	add	fp, sp, #28
   1d48c:	sub	sp, sp, #260	; 0x104
   1d490:	str	r2, [sp, #28]
   1d494:	mov	r6, r1
   1d498:	mov	r9, r0
   1d49c:	add	r0, sp, #32
   1d4a0:	mov	r1, #0
   1d4a4:	mov	r2, #220	; 0xdc
   1d4a8:	mov	r4, r3
   1d4ac:	mov	sl, #0
   1d4b0:	bl	149d0 <memset@plt>
   1d4b4:	ldr	r0, [pc, #1144]	; 1d934 <__flatcc_fb_gen_c_builder@@Base+0x22ec>
   1d4b8:	ldr	r1, [pc, #1144]	; 1d938 <__flatcc_fb_gen_c_builder@@Base+0x22f0>
   1d4bc:	cmp	r4, #1
   1d4c0:	add	r0, pc, r0
   1d4c4:	add	r1, pc, r1
   1d4c8:	moveq	r1, r0
   1d4cc:	ldr	r0, [pc, #1128]	; 1d93c <__flatcc_fb_gen_c_builder@@Base+0x22f4>
   1d4d0:	ldr	r5, [r6, #20]
   1d4d4:	cmp	r4, #2
   1d4d8:	add	r0, pc, r0
   1d4dc:	movne	r0, r1
   1d4e0:	cmp	r5, #0
   1d4e4:	str	r0, [sp, #20]
   1d4e8:	beq	1d868 <__flatcc_fb_gen_c_builder@@Base+0x2220>
   1d4ec:	ldr	r6, [fp, #8]
   1d4f0:	mov	r0, #0
   1d4f4:	str	r0, [sp, #24]
   1d4f8:	ldr	r0, [r5, #4]
   1d4fc:	cmp	sl, #1
   1d500:	ldr	r8, [r0]
   1d504:	ldr	r7, [r0, #4]
   1d508:	blt	1d53c <__flatcc_fb_gen_c_builder@@Base+0x1ef4>
   1d50c:	ldr	r3, [r9, #204]	; 0xcc
   1d510:	tst	sl, #3
   1d514:	beq	1d528 <__flatcc_fb_gen_c_builder@@Base+0x1ee0>
   1d518:	ldr	r0, [pc, #1060]	; 1d944 <__flatcc_fb_gen_c_builder@@Base+0x22fc>
   1d51c:	mov	r1, #2
   1d520:	add	r0, pc, r0
   1d524:	b	1d534 <__flatcc_fb_gen_c_builder@@Base+0x1eec>
   1d528:	ldr	r0, [pc, #1040]	; 1d940 <__flatcc_fb_gen_c_builder@@Base+0x22f8>
   1d52c:	mov	r1, #4
   1d530:	add	r0, pc, r0
   1d534:	mov	r2, #1
   1d538:	bl	1494c <fwrite@plt>
   1d53c:	ldrh	r0, [r5, #24]
   1d540:	cmp	r0, #8
   1d544:	beq	1d5ac <__flatcc_fb_gen_c_builder@@Base+0x1f64>
   1d548:	cmp	r0, #14
   1d54c:	bne	1d894 <__flatcc_fb_gen_c_builder@@Base+0x224c>
   1d550:	ldr	r1, [r5, #16]
   1d554:	add	r2, sp, #32
   1d558:	ldr	r0, [r1, #12]
   1d55c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1d560:	ldrh	r0, [r5, #72]	; 0x48
   1d564:	and	r1, r0, #4
   1d568:	ldr	r0, [r5, #16]
   1d56c:	ldrh	r0, [r0, #8]
   1d570:	cmp	r0, #1
   1d574:	bne	1d618 <__flatcc_fb_gen_c_builder@@Base+0x1fd0>
   1d578:	ldr	r0, [r9, #204]	; 0xcc
   1d57c:	cmp	r1, #0
   1d580:	beq	1d648 <__flatcc_fb_gen_c_builder@@Base+0x2000>
   1d584:	ldr	r1, [pc, #956]	; 1d948 <__flatcc_fb_gen_c_builder@@Base+0x2300>
   1d588:	ldr	r7, [sp, #24]
   1d58c:	add	r1, pc, r1
   1d590:	mov	r2, r7
   1d594:	mov	r3, r7
   1d598:	bl	149b8 <fprintf@plt>
   1d59c:	ldr	r0, [r5, #16]
   1d5a0:	bl	1d138 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1d5a4:	add	sl, r0, sl
   1d5a8:	b	1d63c <__flatcc_fb_gen_c_builder@@Base+0x1ff4>
   1d5ac:	ldr	r0, [r5, #16]
   1d5b0:	sub	r0, r0, #1
   1d5b4:	cmp	r0, #11
   1d5b8:	bcs	1d8e4 <__flatcc_fb_gen_c_builder@@Base+0x229c>
   1d5bc:	ldrb	r1, [r5, #72]	; 0x48
   1d5c0:	tst	r1, #4
   1d5c4:	bne	1d620 <__flatcc_fb_gen_c_builder@@Base+0x1fd8>
   1d5c8:	ldr	r1, [pc, #948]	; 1d984 <__flatcc_fb_gen_c_builder@@Base+0x233c>
   1d5cc:	add	r1, pc, r1
   1d5d0:	ldr	r3, [r1, r0, lsl #2]
   1d5d4:	ldrd	r0, [r5, #88]	; 0x58
   1d5d8:	eor	r0, r0, #1
   1d5dc:	orrs	r0, r0, r1
   1d5e0:	movne	r0, r4
   1d5e4:	cmp	r0, #2
   1d5e8:	beq	1d6cc <__flatcc_fb_gen_c_builder@@Base+0x2084>
   1d5ec:	cmp	r0, #1
   1d5f0:	bne	1d6b0 <__flatcc_fb_gen_c_builder@@Base+0x2068>
   1d5f4:	ldr	r0, [r9, #204]	; 0xcc
   1d5f8:	cmp	r6, #0
   1d5fc:	beq	1d80c <__flatcc_fb_gen_c_builder@@Base+0x21c4>
   1d600:	stm	sp, {r7, r8}
   1d604:	str	r7, [sp, #8]
   1d608:	str	r8, [sp, #12]
   1d60c:	ldr	r1, [pc, #884]	; 1d988 <__flatcc_fb_gen_c_builder@@Base+0x2340>
   1d610:	add	r1, pc, r1
   1d614:	b	1d828 <__flatcc_fb_gen_c_builder@@Base+0x21e0>
   1d618:	cmp	r1, #0
   1d61c:	beq	1d670 <__flatcc_fb_gen_c_builder@@Base+0x2028>
   1d620:	ldr	r0, [r9, #204]	; 0xcc
   1d624:	ldr	r1, [pc, #828]	; 1d968 <__flatcc_fb_gen_c_builder@@Base+0x2320>
   1d628:	ldr	r7, [sp, #24]
   1d62c:	add	r1, pc, r1
   1d630:	mov	r2, r7
   1d634:	bl	149b8 <fprintf@plt>
   1d638:	add	sl, sl, #1
   1d63c:	add	r7, r7, #1
   1d640:	str	r7, [sp, #24]
   1d644:	b	1d85c <__flatcc_fb_gen_c_builder@@Base+0x2214>
   1d648:	cmp	r6, #0
   1d64c:	beq	1d6f0 <__flatcc_fb_gen_c_builder@@Base+0x20a8>
   1d650:	stm	sp, {r7, r8}
   1d654:	str	r7, [sp, #8]
   1d658:	str	r8, [sp, #12]
   1d65c:	add	r2, sp, #32
   1d660:	ldr	r1, [pc, #740]	; 1d94c <__flatcc_fb_gen_c_builder@@Base+0x2304>
   1d664:	ldr	r3, [sp, #20]
   1d668:	add	r1, pc, r1
   1d66c:	b	1d854 <__flatcc_fb_gen_c_builder@@Base+0x220c>
   1d670:	ldrd	r0, [r5, #88]	; 0x58
   1d674:	eor	r0, r0, #1
   1d678:	orrs	r0, r0, r1
   1d67c:	movne	r0, r4
   1d680:	cmp	r0, #2
   1d684:	beq	1d7ec <__flatcc_fb_gen_c_builder@@Base+0x21a4>
   1d688:	cmp	r0, #1
   1d68c:	bne	1d6b0 <__flatcc_fb_gen_c_builder@@Base+0x2068>
   1d690:	ldr	r0, [r9, #204]	; 0xcc
   1d694:	cmp	r6, #0
   1d698:	beq	1d830 <__flatcc_fb_gen_c_builder@@Base+0x21e8>
   1d69c:	str	r8, [sp]
   1d6a0:	stmib	sp, {r7, r8}
   1d6a4:	ldr	r1, [pc, #704]	; 1d96c <__flatcc_fb_gen_c_builder@@Base+0x2324>
   1d6a8:	add	r1, pc, r1
   1d6ac:	b	1d84c <__flatcc_fb_gen_c_builder@@Base+0x2204>
   1d6b0:	ldr	r0, [r9, #204]	; 0xcc
   1d6b4:	cmp	r6, #0
   1d6b8:	beq	1d7d4 <__flatcc_fb_gen_c_builder@@Base+0x218c>
   1d6bc:	stm	sp, {r7, r8}
   1d6c0:	ldr	r1, [pc, #692]	; 1d97c <__flatcc_fb_gen_c_builder@@Base+0x2334>
   1d6c4:	add	r1, pc, r1
   1d6c8:	b	1d7e0 <__flatcc_fb_gen_c_builder@@Base+0x2198>
   1d6cc:	ldr	r0, [r9, #204]	; 0xcc
   1d6d0:	cmp	r6, #0
   1d6d4:	beq	1d81c <__flatcc_fb_gen_c_builder@@Base+0x21d4>
   1d6d8:	stm	sp, {r7, r8}
   1d6dc:	str	r7, [sp, #8]
   1d6e0:	str	r8, [sp, #12]
   1d6e4:	ldr	r1, [pc, #676]	; 1d990 <__flatcc_fb_gen_c_builder@@Base+0x2348>
   1d6e8:	add	r1, pc, r1
   1d6ec:	b	1d828 <__flatcc_fb_gen_c_builder@@Base+0x21e0>
   1d6f0:	stm	sp, {r7, r8}
   1d6f4:	add	r2, sp, #32
   1d6f8:	ldr	r1, [pc, #592]	; 1d950 <__flatcc_fb_gen_c_builder@@Base+0x2308>
   1d6fc:	ldr	r3, [sp, #20]
   1d700:	add	r1, pc, r1
   1d704:	bl	149b8 <fprintf@plt>
   1d708:	ldr	r0, [r5, #16]
   1d70c:	bl	1d138 <__flatcc_fb_gen_c_builder@@Base+0x1af0>
   1d710:	cmp	r0, #1
   1d714:	blt	1d7c4 <__flatcc_fb_gen_c_builder@@Base+0x217c>
   1d718:	ldr	r7, [sp, #28]
   1d71c:	str	r4, [sp, #16]
   1d720:	mov	r8, r0
   1d724:	mov	r4, #0
   1d728:	ldr	r0, [sp, #28]
   1d72c:	add	r6, sl, r4
   1d730:	cmp	r0, #0
   1d734:	beq	1d794 <__flatcc_fb_gen_c_builder@@Base+0x214c>
   1d738:	cmp	r4, #0
   1d73c:	beq	1d770 <__flatcc_fb_gen_c_builder@@Base+0x2128>
   1d740:	ldr	r3, [r9, #204]	; 0xcc
   1d744:	tst	r4, #3
   1d748:	bne	1d780 <__flatcc_fb_gen_c_builder@@Base+0x2138>
   1d74c:	cmp	r7, #2
   1d750:	ble	1d780 <__flatcc_fb_gen_c_builder@@Base+0x2138>
   1d754:	ldr	r1, [pc, #508]	; 1d958 <__flatcc_fb_gen_c_builder@@Base+0x2310>
   1d758:	ldr	r2, [pc, #508]	; 1d95c <__flatcc_fb_gen_c_builder@@Base+0x2314>
   1d75c:	mov	r0, r3
   1d760:	add	r1, pc, r1
   1d764:	add	r2, pc, r2
   1d768:	bl	149b8 <fprintf@plt>
   1d76c:	b	1d794 <__flatcc_fb_gen_c_builder@@Base+0x214c>
   1d770:	ldr	r0, [sp, #28]
   1d774:	ldr	r3, [r9, #204]	; 0xcc
   1d778:	cmp	r0, #5
   1d77c:	bge	1d754 <__flatcc_fb_gen_c_builder@@Base+0x210c>
   1d780:	ldr	r0, [pc, #460]	; 1d954 <__flatcc_fb_gen_c_builder@@Base+0x230c>
   1d784:	mov	r1, #2
   1d788:	mov	r2, #1
   1d78c:	add	r0, pc, r0
   1d790:	bl	1494c <fwrite@plt>
   1d794:	ldr	r0, [r9, #204]	; 0xcc
   1d798:	ldr	r1, [pc, #448]	; 1d960 <__flatcc_fb_gen_c_builder@@Base+0x2318>
   1d79c:	mov	r2, r6
   1d7a0:	add	r1, pc, r1
   1d7a4:	bl	149b8 <fprintf@plt>
   1d7a8:	add	r4, r4, #1
   1d7ac:	sub	r7, r7, #1
   1d7b0:	cmp	r8, r4
   1d7b4:	bne	1d728 <__flatcc_fb_gen_c_builder@@Base+0x20e0>
   1d7b8:	ldr	r4, [sp, #16]
   1d7bc:	ldr	r6, [fp, #8]
   1d7c0:	add	sl, r8, sl
   1d7c4:	ldr	r1, [r9, #204]	; 0xcc
   1d7c8:	mov	r0, #41	; 0x29
   1d7cc:	bl	14a18 <fputc@plt>
   1d7d0:	b	1d85c <__flatcc_fb_gen_c_builder@@Base+0x2214>
   1d7d4:	str	sl, [sp]
   1d7d8:	ldr	r1, [pc, #416]	; 1d980 <__flatcc_fb_gen_c_builder@@Base+0x2338>
   1d7dc:	add	r1, pc, r1
   1d7e0:	mov	r2, r7
   1d7e4:	mov	r3, r8
   1d7e8:	b	1d854 <__flatcc_fb_gen_c_builder@@Base+0x220c>
   1d7ec:	ldr	r0, [r9, #204]	; 0xcc
   1d7f0:	cmp	r6, #0
   1d7f4:	beq	1d840 <__flatcc_fb_gen_c_builder@@Base+0x21f8>
   1d7f8:	str	r8, [sp]
   1d7fc:	stmib	sp, {r7, r8}
   1d800:	ldr	r1, [pc, #364]	; 1d974 <__flatcc_fb_gen_c_builder@@Base+0x232c>
   1d804:	add	r1, pc, r1
   1d808:	b	1d84c <__flatcc_fb_gen_c_builder@@Base+0x2204>
   1d80c:	stm	sp, {r7, r8, sl}
   1d810:	ldr	r1, [pc, #372]	; 1d98c <__flatcc_fb_gen_c_builder@@Base+0x2344>
   1d814:	add	r1, pc, r1
   1d818:	b	1d828 <__flatcc_fb_gen_c_builder@@Base+0x21e0>
   1d81c:	stm	sp, {r7, r8, sl}
   1d820:	ldr	r1, [pc, #364]	; 1d994 <__flatcc_fb_gen_c_builder@@Base+0x234c>
   1d824:	add	r1, pc, r1
   1d828:	mov	r2, r9
   1d82c:	b	1d854 <__flatcc_fb_gen_c_builder@@Base+0x220c>
   1d830:	stm	sp, {r8, sl}
   1d834:	ldr	r1, [pc, #308]	; 1d970 <__flatcc_fb_gen_c_builder@@Base+0x2328>
   1d838:	add	r1, pc, r1
   1d83c:	b	1d84c <__flatcc_fb_gen_c_builder@@Base+0x2204>
   1d840:	stm	sp, {r8, sl}
   1d844:	ldr	r1, [pc, #300]	; 1d978 <__flatcc_fb_gen_c_builder@@Base+0x2330>
   1d848:	add	r1, pc, r1
   1d84c:	add	r2, sp, #32
   1d850:	mov	r3, r7
   1d854:	bl	149b8 <fprintf@plt>
   1d858:	add	sl, sl, #1
   1d85c:	ldr	r5, [r5]
   1d860:	cmp	r5, #0
   1d864:	bne	1d4f8 <__flatcc_fb_gen_c_builder@@Base+0x1eb0>
   1d868:	ldr	r0, [sp, #28]
   1d86c:	cmp	r0, #1
   1d870:	blt	1d88c <__flatcc_fb_gen_c_builder@@Base+0x2244>
   1d874:	ldr	r3, [r9, #204]	; 0xcc
   1d878:	ldr	r0, [pc, #228]	; 1d964 <__flatcc_fb_gen_c_builder@@Base+0x231c>
   1d87c:	mov	r1, #4
   1d880:	mov	r2, #1
   1d884:	add	r0, pc, r0
   1d888:	bl	1494c <fwrite@plt>
   1d88c:	sub	sp, fp, #28
   1d890:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d894:	ldr	r0, [pc, #252]	; 1d998 <__flatcc_fb_gen_c_builder@@Base+0x2350>
   1d898:	movw	r3, #993	; 0x3e1
   1d89c:	ldr	r0, [pc, r0]
   1d8a0:	ldr	r0, [r0]
   1d8a4:	ldr	r1, [pc, #240]	; 1d99c <__flatcc_fb_gen_c_builder@@Base+0x2354>
   1d8a8:	add	r1, pc, r1
   1d8ac:	str	r1, [sp]
   1d8b0:	ldr	r1, [pc, #232]	; 1d9a0 <__flatcc_fb_gen_c_builder@@Base+0x2358>
   1d8b4:	ldr	r4, [pc, #232]	; 1d9a4 <__flatcc_fb_gen_c_builder@@Base+0x235c>
   1d8b8:	add	r4, pc, r4
   1d8bc:	add	r1, pc, r1
   1d8c0:	mov	r2, r4
   1d8c4:	bl	149b8 <fprintf@plt>
   1d8c8:	ldr	r0, [pc, #216]	; 1d9a8 <__flatcc_fb_gen_c_builder@@Base+0x2360>
   1d8cc:	ldr	r3, [pc, #216]	; 1d9ac <__flatcc_fb_gen_c_builder@@Base+0x2364>
   1d8d0:	mov	r1, r4
   1d8d4:	movw	r2, #993	; 0x3e1
   1d8d8:	add	r0, pc, r0
   1d8dc:	add	r3, pc, r3
   1d8e0:	bl	14a78 <__assert_fail@plt>
   1d8e4:	ldr	r0, [pc, #196]	; 1d9b0 <__flatcc_fb_gen_c_builder@@Base+0x2368>
   1d8e8:	mov	r3, #96	; 0x60
   1d8ec:	ldr	r0, [pc, r0]
   1d8f0:	ldr	r0, [r0]
   1d8f4:	ldr	r1, [pc, #184]	; 1d9b4 <__flatcc_fb_gen_c_builder@@Base+0x236c>
   1d8f8:	add	r1, pc, r1
   1d8fc:	str	r1, [sp]
   1d900:	ldr	r1, [pc, #176]	; 1d9b8 <__flatcc_fb_gen_c_builder@@Base+0x2370>
   1d904:	ldr	r4, [pc, #176]	; 1d9bc <__flatcc_fb_gen_c_builder@@Base+0x2374>
   1d908:	add	r4, pc, r4
   1d90c:	add	r1, pc, r1
   1d910:	mov	r2, r4
   1d914:	bl	149b8 <fprintf@plt>
   1d918:	ldr	r0, [pc, #160]	; 1d9c0 <__flatcc_fb_gen_c_builder@@Base+0x2378>
   1d91c:	ldr	r3, [pc, #160]	; 1d9c4 <__flatcc_fb_gen_c_builder@@Base+0x237c>
   1d920:	mov	r1, r4
   1d924:	mov	r2, #96	; 0x60
   1d928:	add	r0, pc, r0
   1d92c:	add	r3, pc, r3
   1d930:	bl	14a78 <__assert_fail@plt>
   1d934:	andeq	r4, r3, ip, asr r0
   1d938:	andeq	r3, r2, sl, lsr r3
   1d93c:	andeq	r4, r3, sp, lsr r0
   1d940:	strdeq	r3, [r3], -r5
   1d944:	andeq	r4, r3, sl
   1d948:	andeq	r3, r3, r1, lsr #31
   1d94c:	strdeq	r3, [r3], -lr
   1d950:	andeq	r3, r3, r5, lsl #29
   1d954:	andeq	r9, r3, r9, asr #10
   1d958:	andeq	r3, r3, pc, lsr #27
   1d95c:	muleq	r2, r9, r0
   1d960:	andeq	r3, r3, sp, lsr #28
   1d964:	andeq	r3, r3, r1, lsr #25
   1d968:	andeq	r3, r3, lr, ror #30
   1d96c:	andeq	r3, r3, fp, lsr #30
   1d970:	andeq	r3, r3, r2, asr #27
   1d974:	andeq	r3, r3, r9, lsl lr
   1d978:	strdeq	r3, [r3], -sl
   1d97c:	andeq	r3, r3, ip, ror #29
   1d980:	andeq	r3, r3, r7, ror #27
   1d984:	andeq	lr, r4, ip, asr #16
   1d988:	andeq	r3, r3, r1, asr #31
   1d98c:	andeq	r3, r3, r4, ror #27
   1d990:	andeq	r3, r3, r3, lsr pc
   1d994:	andeq	r3, r3, ip, lsl lr
   1d998:	andeq	lr, r4, r0, lsl #16
   1d99c:			; <UNDEFINED> instruction: 0x00033db9
   1d9a0:	andeq	r2, r2, sl, lsr #28
   1d9a4:	andeq	r3, r3, lr, ror #18
   1d9a8:	ldrdeq	r3, [r3], -r6
   1d9ac:	andeq	r3, r3, r0, lsr #27
   1d9b0:			; <UNDEFINED> instruction: 0x0004e7b0
   1d9b4:	strdeq	r9, [r2], -sp
   1d9b8:	ldrdeq	r2, [r2], -sl
   1d9bc:	andeq	r9, r2, sp, lsl #11
   1d9c0:	andeq	r3, r3, r6, lsl #25
   1d9c4:	strdeq	r9, [r2], -r9	; <UNPREDICTABLE>
   1d9c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d9cc:	add	fp, sp, #28
   1d9d0:	sub	sp, sp, #484	; 0x1e4
   1d9d4:	mov	r4, r0
   1d9d8:	ldr	r0, [r0, #208]	; 0xd0
   1d9dc:	ldr	r5, [r0, #40]	; 0x28
   1d9e0:	cmp	r5, #0
   1d9e4:	beq	1db40 <__flatcc_fb_gen_c_builder@@Base+0x24f8>
   1d9e8:	ldr	sl, [pc, #424]	; 1db98 <__flatcc_fb_gen_c_builder@@Base+0x2550>
   1d9ec:	ldr	r8, [pc, #424]	; 1db9c <__flatcc_fb_gen_c_builder@@Base+0x2554>
   1d9f0:	mov	r0, #0
   1d9f4:	add	r6, sp, #256	; 0x100
   1d9f8:	add	r7, sp, #32
   1d9fc:	add	sl, pc, sl
   1da00:	add	r8, pc, r8
   1da04:	ldrh	r1, [r5, #8]
   1da08:	cmp	r1, #4
   1da0c:	bne	1db20 <__flatcc_fb_gen_c_builder@@Base+0x24d8>
   1da10:	mov	r0, r6
   1da14:	mov	r1, #0
   1da18:	mov	r2, #220	; 0xdc
   1da1c:	bl	149d0 <memset@plt>
   1da20:	mov	r0, r7
   1da24:	mov	r1, #0
   1da28:	mov	r2, #220	; 0xdc
   1da2c:	bl	149d0 <memset@plt>
   1da30:	ldr	r0, [r5, #12]
   1da34:	mov	r1, r5
   1da38:	mov	r2, r6
   1da3c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1da40:	ldr	r9, [r5, #20]
   1da44:	cmp	r9, #0
   1da48:	bne	1da68 <__flatcc_fb_gen_c_builder@@Base+0x2420>
   1da4c:	b	1db00 <__flatcc_fb_gen_c_builder@@Base+0x24b8>
   1da50:	mov	r2, r6
   1da54:	mov	r3, r6
   1da58:	bl	149b8 <fprintf@plt>
   1da5c:	ldr	r9, [r9]
   1da60:	cmp	r9, #0
   1da64:	beq	1db00 <__flatcc_fb_gen_c_builder@@Base+0x24b8>
   1da68:	ldrh	r0, [r9, #24]
   1da6c:	cmp	r0, #0
   1da70:	beq	1dae8 <__flatcc_fb_gen_c_builder@@Base+0x24a0>
   1da74:	cmp	r0, #10
   1da78:	beq	1dac0 <__flatcc_fb_gen_c_builder@@Base+0x2478>
   1da7c:	cmp	r0, #14
   1da80:	bne	1db48 <__flatcc_fb_gen_c_builder@@Base+0x2500>
   1da84:	ldr	r1, [r9, #16]
   1da88:	mov	r2, r7
   1da8c:	ldr	r0, [r1, #12]
   1da90:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1da94:	ldr	r1, [r9, #4]
   1da98:	ldr	r0, [r4, #204]	; 0xcc
   1da9c:	ldr	r2, [r1]
   1daa0:	ldr	r1, [r1, #4]
   1daa4:	stm	sp, {r1, r2, r7}
   1daa8:	str	r1, [sp, #20]
   1daac:	str	r6, [sp, #12]
   1dab0:	str	r6, [sp, #16]
   1dab4:	str	r2, [sp, #24]
   1dab8:	mov	r1, r8
   1dabc:	b	1da50 <__flatcc_fb_gen_c_builder@@Base+0x2408>
   1dac0:	ldr	r1, [r9, #4]
   1dac4:	ldr	r0, [r4, #204]	; 0xcc
   1dac8:	ldr	r2, [r1]
   1dacc:	ldr	r1, [r1, #4]
   1dad0:	stm	sp, {r1, r2, r4, r6}
   1dad4:	str	r1, [sp, #20]
   1dad8:	str	r6, [sp, #16]
   1dadc:	str	r2, [sp, #24]
   1dae0:	mov	r1, sl
   1dae4:	b	1da50 <__flatcc_fb_gen_c_builder@@Base+0x2408>
   1dae8:	ldr	r0, [r4, #204]	; 0xcc
   1daec:	str	r6, [sp]
   1daf0:	str	r6, [sp, #4]
   1daf4:	ldr	r1, [pc, #164]	; 1dba0 <__flatcc_fb_gen_c_builder@@Base+0x2558>
   1daf8:	add	r1, pc, r1
   1dafc:	b	1da50 <__flatcc_fb_gen_c_builder@@Base+0x2408>
   1db00:	ldr	r0, [r4, #204]	; 0xcc
   1db04:	str	r6, [sp]
   1db08:	mov	r2, r4
   1db0c:	mov	r3, r4
   1db10:	ldr	r1, [pc, #140]	; 1dba4 <__flatcc_fb_gen_c_builder@@Base+0x255c>
   1db14:	add	r1, pc, r1
   1db18:	bl	149b8 <fprintf@plt>
   1db1c:	mov	r0, #1
   1db20:	ldr	r5, [r5]
   1db24:	cmp	r5, #0
   1db28:	bne	1da04 <__flatcc_fb_gen_c_builder@@Base+0x23bc>
   1db2c:	cmp	r0, #0
   1db30:	beq	1db40 <__flatcc_fb_gen_c_builder@@Base+0x24f8>
   1db34:	ldr	r1, [r4, #204]	; 0xcc
   1db38:	mov	r0, #10
   1db3c:	bl	14a18 <fputc@plt>
   1db40:	sub	sp, fp, #28
   1db44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1db48:	ldr	r0, [pc, #88]	; 1dba8 <__flatcc_fb_gen_c_builder@@Base+0x2560>
   1db4c:	movw	r3, #1608	; 0x648
   1db50:	ldr	r0, [pc, r0]
   1db54:	ldr	r0, [r0]
   1db58:	ldr	r1, [pc, #76]	; 1dbac <__flatcc_fb_gen_c_builder@@Base+0x2564>
   1db5c:	add	r1, pc, r1
   1db60:	str	r1, [sp]
   1db64:	ldr	r1, [pc, #68]	; 1dbb0 <__flatcc_fb_gen_c_builder@@Base+0x2568>
   1db68:	ldr	r4, [pc, #68]	; 1dbb4 <__flatcc_fb_gen_c_builder@@Base+0x256c>
   1db6c:	add	r4, pc, r4
   1db70:	add	r1, pc, r1
   1db74:	mov	r2, r4
   1db78:	bl	149b8 <fprintf@plt>
   1db7c:	ldr	r0, [pc, #52]	; 1dbb8 <__flatcc_fb_gen_c_builder@@Base+0x2570>
   1db80:	ldr	r3, [pc, #52]	; 1dbbc <__flatcc_fb_gen_c_builder@@Base+0x2574>
   1db84:	mov	r1, r4
   1db88:	movw	r2, #1608	; 0x648
   1db8c:	add	r0, pc, r0
   1db90:	add	r3, pc, r3
   1db94:	bl	14a78 <__assert_fail@plt>
   1db98:	muleq	r3, sl, pc	; <UNPREDICTABLE>
   1db9c:	andeq	r3, r3, r2, lsl pc
   1dba0:	andeq	r3, r3, r8, lsr #30
   1dba4:	andeq	r3, r3, r1, ror #31
   1dba8:	andeq	lr, r4, ip, asr #10
   1dbac:	andeq	r3, r3, sl, lsr pc
   1dbb0:	andeq	r2, r2, r6, ror fp
   1dbb4:			; <UNDEFINED> instruction: 0x000336ba
   1dbb8:	andeq	r3, r3, r2, lsr #20
   1dbbc:	andeq	r3, r3, r2, lsr pc
   1dbc0:	push	{r4, sl, fp, lr}
   1dbc4:	add	fp, sp, #8
   1dbc8:	sub	sp, sp, #8
   1dbcc:	mov	r4, r2
   1dbd0:	ldrh	r2, [r1, #8]
   1dbd4:	sub	r2, r2, #3
   1dbd8:	cmp	r2, #3
   1dbdc:	bhi	1dcc8 <__flatcc_fb_gen_c_builder@@Base+0x2680>
   1dbe0:	add	r3, pc, #4
   1dbe4:	ldr	r2, [r3, r2, lsl #2]
   1dbe8:	add	pc, r3, r2
   1dbec:	andeq	r0, r0, r0, lsl r0
   1dbf0:	andeq	r0, r0, r8, lsl #1
   1dbf4:	andeq	r0, r0, r4, lsr r0
   1dbf8:	andeq	r0, r0, r0, rrx
   1dbfc:	vldr	d16, [r1]
   1dc00:	cmp	r0, #11
   1dc04:	bne	1dcac <__flatcc_fb_gen_c_builder@@Base+0x2664>
   1dc08:	ldr	r1, [pc, #368]	; 1dd80 <__flatcc_fb_gen_c_builder@@Base+0x2738>
   1dc0c:	vcvt.f32.f64	s0, d16
   1dc10:	vcvt.f64.f32	d16, s0
   1dc14:	vmov	r2, r3, d16
   1dc18:	add	r1, pc, r1
   1dc1c:	b	1dcb8 <__flatcc_fb_gen_c_builder@@Base+0x2670>
   1dc20:	sub	r0, r0, #1
   1dc24:	cmp	r0, #9
   1dc28:	bcs	1dd18 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
   1dc2c:	ldrd	r2, [r1]
   1dc30:	stm	sp, {r2, r3}
   1dc34:	ldr	r1, [pc, #300]	; 1dd68 <__flatcc_fb_gen_c_builder@@Base+0x2720>
   1dc38:	add	r1, pc, r1
   1dc3c:	ldr	r2, [r1, r0, lsl #2]
   1dc40:	ldr	r1, [pc, #292]	; 1dd6c <__flatcc_fb_gen_c_builder@@Base+0x2724>
   1dc44:	add	r1, pc, r1
   1dc48:	b	1dc9c <__flatcc_fb_gen_c_builder@@Base+0x2654>
   1dc4c:	sub	r0, r0, #1
   1dc50:	cmp	r0, #9
   1dc54:	bcs	1dd18 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
   1dc58:	ldr	r2, [pc, #280]	; 1dd78 <__flatcc_fb_gen_c_builder@@Base+0x2730>
   1dc5c:	ldrb	r3, [r1]
   1dc60:	ldr	r1, [pc, #276]	; 1dd7c <__flatcc_fb_gen_c_builder@@Base+0x2734>
   1dc64:	add	r2, pc, r2
   1dc68:	add	r1, pc, r1
   1dc6c:	ldr	r2, [r2, r0, lsl #2]
   1dc70:	b	1dcb8 <__flatcc_fb_gen_c_builder@@Base+0x2670>
   1dc74:	sub	r0, r0, #1
   1dc78:	cmp	r0, #9
   1dc7c:	bcs	1dd18 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
   1dc80:	ldrd	r2, [r1]
   1dc84:	stm	sp, {r2, r3}
   1dc88:	ldr	r1, [pc, #224]	; 1dd70 <__flatcc_fb_gen_c_builder@@Base+0x2728>
   1dc8c:	add	r1, pc, r1
   1dc90:	ldr	r2, [r1, r0, lsl #2]
   1dc94:	ldr	r1, [pc, #216]	; 1dd74 <__flatcc_fb_gen_c_builder@@Base+0x272c>
   1dc98:	add	r1, pc, r1
   1dc9c:	mov	r0, r4
   1dca0:	bl	14a24 <sprintf@plt>
   1dca4:	sub	sp, fp, #8
   1dca8:	pop	{r4, sl, fp, pc}
   1dcac:	ldr	r1, [pc, #208]	; 1dd84 <__flatcc_fb_gen_c_builder@@Base+0x273c>
   1dcb0:	vmov	r2, r3, d16
   1dcb4:	add	r1, pc, r1
   1dcb8:	mov	r0, r4
   1dcbc:	sub	sp, fp, #8
   1dcc0:	pop	{r4, sl, fp, lr}
   1dcc4:	b	14a24 <sprintf@plt>
   1dcc8:	ldr	r0, [pc, #184]	; 1dd88 <__flatcc_fb_gen_c_builder@@Base+0x2740>
   1dccc:	mov	r3, #260	; 0x104
   1dcd0:	ldr	r0, [pc, r0]
   1dcd4:	ldr	r0, [r0]
   1dcd8:	ldr	r1, [pc, #172]	; 1dd8c <__flatcc_fb_gen_c_builder@@Base+0x2744>
   1dcdc:	add	r1, pc, r1
   1dce0:	str	r1, [sp]
   1dce4:	ldr	r1, [pc, #164]	; 1dd90 <__flatcc_fb_gen_c_builder@@Base+0x2748>
   1dce8:	ldr	r4, [pc, #164]	; 1dd94 <__flatcc_fb_gen_c_builder@@Base+0x274c>
   1dcec:	add	r4, pc, r4
   1dcf0:	add	r1, pc, r1
   1dcf4:	mov	r2, r4
   1dcf8:	bl	149b8 <fprintf@plt>
   1dcfc:	ldr	r0, [pc, #148]	; 1dd98 <__flatcc_fb_gen_c_builder@@Base+0x2750>
   1dd00:	ldr	r3, [pc, #148]	; 1dd9c <__flatcc_fb_gen_c_builder@@Base+0x2754>
   1dd04:	mov	r1, r4
   1dd08:	mov	r2, #260	; 0x104
   1dd0c:	add	r0, pc, r0
   1dd10:	add	r3, pc, r3
   1dd14:	bl	14a78 <__assert_fail@plt>
   1dd18:	ldr	r0, [pc, #128]	; 1dda0 <__flatcc_fb_gen_c_builder@@Base+0x2758>
   1dd1c:	mov	r3, #226	; 0xe2
   1dd20:	ldr	r0, [pc, r0]
   1dd24:	ldr	r0, [r0]
   1dd28:	ldr	r1, [pc, #116]	; 1dda4 <__flatcc_fb_gen_c_builder@@Base+0x275c>
   1dd2c:	add	r1, pc, r1
   1dd30:	str	r1, [sp]
   1dd34:	ldr	r1, [pc, #108]	; 1dda8 <__flatcc_fb_gen_c_builder@@Base+0x2760>
   1dd38:	ldr	r4, [pc, #108]	; 1ddac <__flatcc_fb_gen_c_builder@@Base+0x2764>
   1dd3c:	add	r4, pc, r4
   1dd40:	add	r1, pc, r1
   1dd44:	mov	r2, r4
   1dd48:	bl	149b8 <fprintf@plt>
   1dd4c:	ldr	r0, [pc, #92]	; 1ddb0 <__flatcc_fb_gen_c_builder@@Base+0x2768>
   1dd50:	ldr	r3, [pc, #92]	; 1ddb4 <__flatcc_fb_gen_c_builder@@Base+0x276c>
   1dd54:	mov	r1, r4
   1dd58:	mov	r2, #226	; 0xe2
   1dd5c:	add	r0, pc, r0
   1dd60:	add	r3, pc, r3
   1dd64:	bl	14a78 <__assert_fail@plt>
   1dd68:	andeq	lr, r4, r0, lsl r2
   1dd6c:	andeq	r9, r2, r5, lsr #6
   1dd70:			; <UNDEFINED> instruction: 0x0004e1bc
   1dd74:	ldrdeq	r9, [r2], -sl
   1dd78:	andeq	lr, r4, r4, ror #3
   1dd7c:	andeq	r9, r2, r3, lsl r3
   1dd80:	andeq	r9, r2, sl, ror #6
   1dd84:	ldrdeq	r9, [r2], -r2
   1dd88:	andeq	lr, r4, ip, asr #7
   1dd8c:	andeq	r9, r2, r9, lsl r2
   1dd90:	strdeq	r2, [r2], -r6
   1dd94:	andeq	r9, r2, r9, lsr #3
   1dd98:	andeq	r3, r3, r2, lsr #17
   1dd9c:	andeq	r9, r2, sl, ror r2
   1dda0:	andeq	lr, r4, ip, ror r3
   1dda4:	andeq	r9, r2, r9, asr #3
   1dda8:	andeq	r2, r2, r6, lsr #19
   1ddac:	andeq	r9, r2, r9, asr r1
   1ddb0:	andeq	r3, r3, r2, asr r8
   1ddb4:	muleq	r2, r0, r2
   1ddb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ddbc:	add	fp, sp, #28
   1ddc0:	sub	sp, sp, #492	; 0x1ec
   1ddc4:	sub	r4, fp, #256	; 0x100
   1ddc8:	str	r2, [sp, #32]
   1ddcc:	mov	r9, r1
   1ddd0:	mov	r7, r0
   1ddd4:	mov	r1, #0
   1ddd8:	mov	r2, #220	; 0xdc
   1dddc:	str	r3, [sp, #36]	; 0x24
   1dde0:	mov	r0, r4
   1dde4:	bl	149d0 <memset@plt>
   1dde8:	add	r0, sp, #40	; 0x28
   1ddec:	mov	r1, #0
   1ddf0:	mov	r2, #220	; 0xdc
   1ddf4:	bl	149d0 <memset@plt>
   1ddf8:	ldr	r5, [fp, #8]
   1ddfc:	mov	r2, r4
   1de00:	ldr	r0, [r5, #12]
   1de04:	mov	r1, r5
   1de08:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1de0c:	ldr	r1, [pc, #464]	; 1dfe4 <__flatcc_fb_gen_c_builder@@Base+0x299c>
   1de10:	ldr	r4, [pc, #464]	; 1dfe8 <__flatcc_fb_gen_c_builder@@Base+0x29a0>
   1de14:	ldr	r0, [fp, #12]
   1de18:	ldr	r5, [r5, #20]
   1de1c:	add	r1, pc, r1
   1de20:	add	r4, pc, r4
   1de24:	cmp	r0, #0
   1de28:	moveq	r4, r1
   1de2c:	b	1de34 <__flatcc_fb_gen_c_builder@@Base+0x27ec>
   1de30:	ldr	r5, [r5]
   1de34:	cmp	r5, #0
   1de38:	subeq	sp, fp, #28
   1de3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1de40:	ldrh	r0, [r5, #24]
   1de44:	cmp	r0, #0
   1de48:	beq	1de30 <__flatcc_fb_gen_c_builder@@Base+0x27e8>
   1de4c:	ldr	r1, [r5, #4]
   1de50:	cmp	r0, #10
   1de54:	ldm	r1, {r6, sl}
   1de58:	beq	1decc <__flatcc_fb_gen_c_builder@@Base+0x2884>
   1de5c:	cmp	r0, #14
   1de60:	add	r8, sp, #40	; 0x28
   1de64:	bne	1df44 <__flatcc_fb_gen_c_builder@@Base+0x28fc>
   1de68:	ldr	r1, [r5, #16]
   1de6c:	mov	r2, r8
   1de70:	ldr	r0, [r1, #12]
   1de74:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1de78:	ldr	r0, [r5, #16]
   1de7c:	ldrh	r0, [r0, #8]
   1de80:	cmp	r0, #1
   1de84:	beq	1df00 <__flatcc_fb_gen_c_builder@@Base+0x28b8>
   1de88:	cmp	r0, #0
   1de8c:	bne	1df94 <__flatcc_fb_gen_c_builder@@Base+0x294c>
   1de90:	ldr	r0, [r7, #204]	; 0xcc
   1de94:	stm	sp, {r7, r9}
   1de98:	str	sl, [sp, #20]
   1de9c:	str	r6, [sp, #24]
   1dea0:	ldr	r1, [sp, #32]
   1dea4:	str	r1, [sp, #8]
   1dea8:	ldr	r1, [sp, #36]	; 0x24
   1deac:	str	r1, [sp, #12]
   1deb0:	sub	r1, fp, #256	; 0x100
   1deb4:	str	r1, [sp, #16]
   1deb8:	add	r1, sp, #40	; 0x28
   1debc:	str	r1, [sp, #28]
   1dec0:	ldr	r1, [pc, #292]	; 1dfec <__flatcc_fb_gen_c_builder@@Base+0x29a4>
   1dec4:	add	r1, pc, r1
   1dec8:	b	1df34 <__flatcc_fb_gen_c_builder@@Base+0x28ec>
   1decc:	ldr	r0, [r7, #204]	; 0xcc
   1ded0:	stm	sp, {r7, r9}
   1ded4:	str	sl, [sp, #20]
   1ded8:	str	r6, [sp, #24]
   1dedc:	ldr	r1, [sp, #32]
   1dee0:	str	r1, [sp, #8]
   1dee4:	ldr	r1, [sp, #36]	; 0x24
   1dee8:	str	r1, [sp, #12]
   1deec:	sub	r1, fp, #256	; 0x100
   1def0:	str	r1, [sp, #16]
   1def4:	ldr	r1, [pc, #272]	; 1e00c <__flatcc_fb_gen_c_builder@@Base+0x29c4>
   1def8:	add	r1, pc, r1
   1defc:	b	1df34 <__flatcc_fb_gen_c_builder@@Base+0x28ec>
   1df00:	ldr	r0, [r7, #204]	; 0xcc
   1df04:	stm	sp, {r7, r9}
   1df08:	str	sl, [sp, #20]
   1df0c:	str	r6, [sp, #24]
   1df10:	str	r8, [sp, #28]
   1df14:	ldr	r1, [sp, #32]
   1df18:	str	r1, [sp, #8]
   1df1c:	ldr	r1, [sp, #36]	; 0x24
   1df20:	str	r1, [sp, #12]
   1df24:	sub	r1, fp, #256	; 0x100
   1df28:	str	r1, [sp, #16]
   1df2c:	ldr	r1, [pc, #188]	; 1dff0 <__flatcc_fb_gen_c_builder@@Base+0x29a8>
   1df30:	add	r1, pc, r1
   1df34:	mov	r2, r7
   1df38:	mov	r3, r4
   1df3c:	bl	149b8 <fprintf@plt>
   1df40:	b	1de30 <__flatcc_fb_gen_c_builder@@Base+0x27e8>
   1df44:	ldr	r0, [pc, #196]	; 1e010 <__flatcc_fb_gen_c_builder@@Base+0x29c8>
   1df48:	movw	r3, #1368	; 0x558
   1df4c:	ldr	r0, [pc, r0]
   1df50:	ldr	r0, [r0]
   1df54:	ldr	r1, [pc, #184]	; 1e014 <__flatcc_fb_gen_c_builder@@Base+0x29cc>
   1df58:	add	r1, pc, r1
   1df5c:	str	r1, [sp]
   1df60:	ldr	r1, [pc, #176]	; 1e018 <__flatcc_fb_gen_c_builder@@Base+0x29d0>
   1df64:	ldr	r4, [pc, #176]	; 1e01c <__flatcc_fb_gen_c_builder@@Base+0x29d4>
   1df68:	add	r4, pc, r4
   1df6c:	add	r1, pc, r1
   1df70:	mov	r2, r4
   1df74:	bl	149b8 <fprintf@plt>
   1df78:	ldr	r0, [pc, #160]	; 1e020 <__flatcc_fb_gen_c_builder@@Base+0x29d8>
   1df7c:	ldr	r3, [pc, #160]	; 1e024 <__flatcc_fb_gen_c_builder@@Base+0x29dc>
   1df80:	mov	r1, r4
   1df84:	movw	r2, #1368	; 0x558
   1df88:	add	r0, pc, r0
   1df8c:	add	r3, pc, r3
   1df90:	bl	14a78 <__assert_fail@plt>
   1df94:	ldr	r0, [pc, #88]	; 1dff4 <__flatcc_fb_gen_c_builder@@Base+0x29ac>
   1df98:	movw	r3, #1358	; 0x54e
   1df9c:	ldr	r0, [pc, r0]
   1dfa0:	ldr	r0, [r0]
   1dfa4:	ldr	r1, [pc, #76]	; 1dff8 <__flatcc_fb_gen_c_builder@@Base+0x29b0>
   1dfa8:	add	r1, pc, r1
   1dfac:	str	r1, [sp]
   1dfb0:	ldr	r1, [pc, #68]	; 1dffc <__flatcc_fb_gen_c_builder@@Base+0x29b4>
   1dfb4:	ldr	r4, [pc, #68]	; 1e000 <__flatcc_fb_gen_c_builder@@Base+0x29b8>
   1dfb8:	add	r4, pc, r4
   1dfbc:	add	r1, pc, r1
   1dfc0:	mov	r2, r4
   1dfc4:	bl	149b8 <fprintf@plt>
   1dfc8:	ldr	r0, [pc, #52]	; 1e004 <__flatcc_fb_gen_c_builder@@Base+0x29bc>
   1dfcc:	ldr	r3, [pc, #52]	; 1e008 <__flatcc_fb_gen_c_builder@@Base+0x29c0>
   1dfd0:	mov	r1, r4
   1dfd4:	movw	r2, #1358	; 0x54e
   1dfd8:	add	r0, pc, r0
   1dfdc:	add	r3, pc, r3
   1dfe0:	bl	14a78 <__assert_fail@plt>
   1dfe4:	andeq	fp, r3, r3, lsl #10
   1dfe8:	andeq	r4, r3, fp, ror #1
   1dfec:	andeq	r4, r3, r4, asr r0
   1dff0:	andeq	r4, r3, r3, lsr #32
   1dff4:	andeq	lr, r4, r0, lsl #2
   1dff8:	andeq	r3, r3, r7, ror #31
   1dffc:	andeq	r2, r2, sl, lsr #14
   1e000:	andeq	r3, r3, lr, ror #4
   1e004:	ldrdeq	r3, [r3], -r6
   1e008:	andeq	r3, r3, r9, ror #31
   1e00c:	andeq	r4, r3, sp, lsr #2
   1e010:	andeq	lr, r4, r0, asr r1
   1e014:	andeq	r4, r3, r5, lsl #2
   1e018:	andeq	r2, r2, sl, ror r7
   1e01c:			; <UNDEFINED> instruction: 0x000332be
   1e020:	andeq	r3, r3, r6, lsr #12
   1e024:	andeq	r4, r3, r9, lsr r0

0001e028 <__flatcc_fb_gen_c_verifier@@Base>:
   1e028:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e02c:	add	fp, sp, #28
   1e030:	sub	sp, sp, #500	; 0x1f4
   1e034:	mov	r4, r0
   1e038:	mov	r8, r0
   1e03c:	ldr	r1, [r4, #208]	; 0xd0
   1e040:	ldr	r0, [r8, #204]!	; 0xcc
   1e044:	ldr	r2, [r1, #164]	; 0xa4
   1e048:	ldr	r1, [pc, #2548]	; 1ea44 <__flatcc_fb_gen_c_verifier@@Base+0xa1c>
   1e04c:	add	r1, pc, r1
   1e050:	mov	r3, r2
   1e054:	bl	149b8 <fprintf@plt>
   1e058:	ldr	r3, [r8]
   1e05c:	ldr	r0, [pc, #2532]	; 1ea48 <__flatcc_fb_gen_c_verifier@@Base+0xa20>
   1e060:	mov	r1, #81	; 0x51
   1e064:	mov	r2, #1
   1e068:	add	r0, pc, r0
   1e06c:	bl	1494c <fwrite@plt>
   1e070:	ldr	r1, [r4, #208]	; 0xd0
   1e074:	ldr	r0, [r8]
   1e078:	ldr	r2, [r1, #164]	; 0xa4
   1e07c:	ldr	r1, [pc, #2504]	; 1ea4c <__flatcc_fb_gen_c_verifier@@Base+0xa24>
   1e080:	add	r1, pc, r1
   1e084:	bl	149b8 <fprintf@plt>
   1e088:	ldr	r1, [r4, #208]	; 0xd0
   1e08c:	ldr	r0, [r8]
   1e090:	ldr	r2, [r1, #160]	; 0xa0
   1e094:	ldr	r1, [pc, #2484]	; 1ea50 <__flatcc_fb_gen_c_verifier@@Base+0xa28>
   1e098:	add	r1, pc, r1
   1e09c:	bl	149b8 <fprintf@plt>
   1e0a0:	ldr	r3, [r8]
   1e0a4:	ldr	r0, [pc, #2472]	; 1ea54 <__flatcc_fb_gen_c_verifier@@Base+0xa2c>
   1e0a8:	mov	r1, #7
   1e0ac:	mov	r2, #1
   1e0b0:	add	r0, pc, r0
   1e0b4:	bl	1494c <fwrite@plt>
   1e0b8:	ldr	r3, [r8]
   1e0bc:	ldr	r0, [pc, #2452]	; 1ea58 <__flatcc_fb_gen_c_verifier@@Base+0xa30>
   1e0c0:	mov	r1, #36	; 0x24
   1e0c4:	mov	r2, #1
   1e0c8:	add	r0, pc, r0
   1e0cc:	bl	1494c <fwrite@plt>
   1e0d0:	ldr	r1, [pc, #2436]	; 1ea5c <__flatcc_fb_gen_c_verifier@@Base+0xa34>
   1e0d4:	ldr	r2, [pc, #2436]	; 1ea60 <__flatcc_fb_gen_c_verifier@@Base+0xa38>
   1e0d8:	mov	r0, r4
   1e0dc:	add	r1, pc, r1
   1e0e0:	add	r2, pc, r2
   1e0e4:	bl	16990 <__flatcc_fb_gen_c_includes@@Base>
   1e0e8:	ldr	r0, [r4, #212]	; 0xd4
   1e0ec:	str	r4, [sp, #44]	; 0x2c
   1e0f0:	ldr	r0, [r0, #140]	; 0x8c
   1e0f4:	cmp	r0, #0
   1e0f8:	beq	1e114 <__flatcc_fb_gen_c_verifier@@Base+0xec>
   1e0fc:	ldr	r3, [r8]
   1e100:	ldr	r0, [pc, #2396]	; 1ea64 <__flatcc_fb_gen_c_verifier@@Base+0xa3c>
   1e104:	mov	r1, #36	; 0x24
   1e108:	mov	r2, #1
   1e10c:	add	r0, pc, r0
   1e110:	bl	1494c <fwrite@plt>
   1e114:	ldr	r4, [sp, #44]	; 0x2c
   1e118:	mov	r0, #10
   1e11c:	ldr	r1, [r4, #204]	; 0xcc
   1e120:	bl	14a18 <fputc@plt>
   1e124:	sub	r0, fp, #256	; 0x100
   1e128:	mov	r1, #0
   1e12c:	mov	r2, #220	; 0xdc
   1e130:	bl	149d0 <memset@plt>
   1e134:	ldr	r0, [r4, #208]	; 0xd0
   1e138:	ldr	r4, [r0, #40]	; 0x28
   1e13c:	cmp	r4, #0
   1e140:	beq	1e188 <__flatcc_fb_gen_c_verifier@@Base+0x160>
   1e144:	ldr	r6, [pc, #2332]	; 1ea68 <__flatcc_fb_gen_c_verifier@@Base+0xa40>
   1e148:	sub	r5, fp, #256	; 0x100
   1e14c:	add	r6, pc, r6
   1e150:	ldrh	r0, [r4, #8]
   1e154:	cmp	r0, #0
   1e158:	bne	1e17c <__flatcc_fb_gen_c_verifier@@Base+0x154>
   1e15c:	ldr	r0, [r4, #12]
   1e160:	mov	r1, r4
   1e164:	mov	r2, r5
   1e168:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e16c:	ldr	r0, [r8]
   1e170:	mov	r1, r6
   1e174:	mov	r2, r5
   1e178:	bl	149b8 <fprintf@plt>
   1e17c:	ldr	r4, [r4]
   1e180:	cmp	r4, #0
   1e184:	bne	1e150 <__flatcc_fb_gen_c_verifier@@Base+0x128>
   1e188:	ldr	r4, [sp, #44]	; 0x2c
   1e18c:	mov	r0, #10
   1e190:	ldr	r1, [r4, #204]	; 0xcc
   1e194:	bl	14a18 <fputc@plt>
   1e198:	ldr	r0, [r4, #208]	; 0xd0
   1e19c:	ldr	r6, [r0, #40]	; 0x28
   1e1a0:	cmp	r6, #0
   1e1a4:	beq	1e8b0 <__flatcc_fb_gen_c_verifier@@Base+0x888>
   1e1a8:	ldr	r9, [pc, #2236]	; 1ea6c <__flatcc_fb_gen_c_verifier@@Base+0xa44>
   1e1ac:	add	r4, sp, #48	; 0x30
   1e1b0:	add	r9, pc, r9
   1e1b4:	ldrh	r0, [r6, #8]
   1e1b8:	cmp	r0, #4
   1e1bc:	bne	1e304 <__flatcc_fb_gen_c_verifier@@Base+0x2dc>
   1e1c0:	sub	r5, fp, #256	; 0x100
   1e1c4:	mov	r1, #0
   1e1c8:	mov	r2, #220	; 0xdc
   1e1cc:	mov	r0, r5
   1e1d0:	bl	149d0 <memset@plt>
   1e1d4:	mov	r0, r4
   1e1d8:	mov	r1, #0
   1e1dc:	mov	r2, #220	; 0xdc
   1e1e0:	bl	149d0 <memset@plt>
   1e1e4:	ldr	r0, [r6, #12]
   1e1e8:	mov	r1, r6
   1e1ec:	mov	r2, r5
   1e1f0:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e1f4:	ldr	r0, [r8]
   1e1f8:	ldr	r1, [pc, #2160]	; 1ea70 <__flatcc_fb_gen_c_verifier@@Base+0xa48>
   1e1fc:	mov	r2, r5
   1e200:	add	r1, pc, r1
   1e204:	bl	149b8 <fprintf@plt>
   1e208:	ldr	r7, [r6, #20]
   1e20c:	cmp	r7, #0
   1e210:	bne	1e228 <__flatcc_fb_gen_c_verifier@@Base+0x200>
   1e214:	b	1e2ec <__flatcc_fb_gen_c_verifier@@Base+0x2c4>
   1e218:	bl	149b8 <fprintf@plt>
   1e21c:	ldr	r7, [r7]
   1e220:	cmp	r7, #0
   1e224:	beq	1e2ec <__flatcc_fb_gen_c_verifier@@Base+0x2c4>
   1e228:	ldrh	r0, [r7, #24]
   1e22c:	cmp	r0, #0
   1e230:	beq	1e2e0 <__flatcc_fb_gen_c_verifier@@Base+0x2b8>
   1e234:	ldr	r1, [r7, #4]
   1e238:	cmp	r0, #10
   1e23c:	ldm	r1, {r5, sl}
   1e240:	beq	1e294 <__flatcc_fb_gen_c_verifier@@Base+0x26c>
   1e244:	cmp	r0, #14
   1e248:	bne	1e904 <__flatcc_fb_gen_c_verifier@@Base+0x8dc>
   1e24c:	ldr	r1, [r7, #16]
   1e250:	mov	r2, r4
   1e254:	ldr	r0, [r1, #12]
   1e258:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e25c:	ldr	r1, [r7, #16]
   1e260:	ldrh	r0, [r1, #8]
   1e264:	cmp	r0, #1
   1e268:	beq	1e2ac <__flatcc_fb_gen_c_verifier@@Base+0x284>
   1e26c:	cmp	r0, #0
   1e270:	bne	1e954 <__flatcc_fb_gen_c_verifier@@Base+0x92c>
   1e274:	ldr	r2, [r7, #48]	; 0x30
   1e278:	ldr	r0, [r8]
   1e27c:	str	sl, [sp]
   1e280:	str	r5, [sp, #4]
   1e284:	mov	r3, r4
   1e288:	ldr	r1, [pc, #2020]	; 1ea74 <__flatcc_fb_gen_c_verifier@@Base+0xa4c>
   1e28c:	add	r1, pc, r1
   1e290:	b	1e218 <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
   1e294:	ldr	r2, [r7, #48]	; 0x30
   1e298:	ldr	r0, [r8]
   1e29c:	mov	r1, r9
   1e2a0:	mov	r3, sl
   1e2a4:	str	r5, [sp]
   1e2a8:	b	1e218 <__flatcc_fb_gen_c_verifier@@Base+0x1f0>
   1e2ac:	ldr	r2, [r7, #48]	; 0x30
   1e2b0:	ldr	r0, [r8]
   1e2b4:	ldr	r3, [r1, #112]	; 0x70
   1e2b8:	ldr	r4, [r1, #116]	; 0x74
   1e2bc:	ldrh	r1, [r1, #104]	; 0x68
   1e2c0:	stm	sp, {r3, r4}
   1e2c4:	str	r1, [sp, #8]
   1e2c8:	str	sl, [sp, #12]
   1e2cc:	str	r5, [sp, #16]
   1e2d0:	add	r4, sp, #48	; 0x30
   1e2d4:	ldr	r1, [pc, #1996]	; 1eaa8 <__flatcc_fb_gen_c_verifier@@Base+0xa80>
   1e2d8:	add	r1, pc, r1
   1e2dc:	bl	149b8 <fprintf@plt>
   1e2e0:	ldr	r7, [r7]
   1e2e4:	cmp	r7, #0
   1e2e8:	bne	1e228 <__flatcc_fb_gen_c_verifier@@Base+0x200>
   1e2ec:	ldr	r3, [r8]
   1e2f0:	ldr	r0, [pc, #1972]	; 1eaac <__flatcc_fb_gen_c_verifier@@Base+0xa84>
   1e2f4:	mov	r1, #47	; 0x2f
   1e2f8:	mov	r2, #1
   1e2fc:	add	r0, pc, r0
   1e300:	bl	1494c <fwrite@plt>
   1e304:	ldr	r6, [r6]
   1e308:	cmp	r6, #0
   1e30c:	bne	1e1b4 <__flatcc_fb_gen_c_verifier@@Base+0x18c>
   1e310:	ldr	r0, [sp, #44]	; 0x2c
   1e314:	ldr	r0, [r0, #208]	; 0xd0
   1e318:	ldr	r4, [r0, #40]	; 0x28
   1e31c:	cmp	r4, #0
   1e320:	beq	1e8b0 <__flatcc_fb_gen_c_verifier@@Base+0x888>
   1e324:	ldr	r9, [pc, #1924]	; 1eab0 <__flatcc_fb_gen_c_verifier@@Base+0xa88>
   1e328:	ldr	sl, [pc, #1924]	; 1eab4 <__flatcc_fb_gen_c_verifier@@Base+0xa8c>
   1e32c:	ldr	r5, [pc, #1924]	; 1eab8 <__flatcc_fb_gen_c_verifier@@Base+0xa90>
   1e330:	ldr	r6, [sp, #44]	; 0x2c
   1e334:	sub	r7, fp, #256	; 0x100
   1e338:	add	r9, pc, r9
   1e33c:	add	sl, pc, sl
   1e340:	add	r5, pc, r5
   1e344:	ldrh	r0, [r4, #8]
   1e348:	cmp	r0, #1
   1e34c:	bne	1e400 <__flatcc_fb_gen_c_verifier@@Base+0x3d8>
   1e350:	mov	r0, r7
   1e354:	mov	r1, #0
   1e358:	mov	r2, #220	; 0xdc
   1e35c:	bl	149d0 <memset@plt>
   1e360:	ldr	r0, [r4, #12]
   1e364:	mov	r1, r4
   1e368:	mov	r2, r7
   1e36c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e370:	ldrd	r2, [r4, #112]	; 0x70
   1e374:	ldrh	r1, [r4, #104]	; 0x68
   1e378:	ldr	r0, [r6, #204]	; 0xcc
   1e37c:	stm	sp, {r2, r3}
   1e380:	str	r1, [sp, #8]
   1e384:	mov	r2, r7
   1e388:	mov	r3, r7
   1e38c:	ldr	r1, [pc, #1832]	; 1eabc <__flatcc_fb_gen_c_verifier@@Base+0xa94>
   1e390:	add	r1, pc, r1
   1e394:	bl	149b8 <fprintf@plt>
   1e398:	ldrd	r2, [r4, #112]	; 0x70
   1e39c:	ldrh	r1, [r4, #104]	; 0x68
   1e3a0:	ldr	r0, [r6, #204]	; 0xcc
   1e3a4:	stm	sp, {r2, r3}
   1e3a8:	str	r1, [sp, #8]
   1e3ac:	mov	r1, r9
   1e3b0:	mov	r2, r7
   1e3b4:	mov	r3, r7
   1e3b8:	bl	149b8 <fprintf@plt>
   1e3bc:	ldrd	r2, [r4, #112]	; 0x70
   1e3c0:	ldrh	r1, [r4, #104]	; 0x68
   1e3c4:	ldr	r0, [r6, #204]	; 0xcc
   1e3c8:	stm	sp, {r2, r3}
   1e3cc:	str	r1, [sp, #8]
   1e3d0:	mov	r1, sl
   1e3d4:	mov	r2, r7
   1e3d8:	mov	r3, r6
   1e3dc:	bl	149b8 <fprintf@plt>
   1e3e0:	ldrd	r2, [r4, #112]	; 0x70
   1e3e4:	ldrh	r1, [r4, #104]	; 0x68
   1e3e8:	ldr	r0, [r6, #204]	; 0xcc
   1e3ec:	stm	sp, {r2, r3}
   1e3f0:	str	r1, [sp, #8]
   1e3f4:	mov	r1, r5
   1e3f8:	mov	r2, r7
   1e3fc:	bl	149b8 <fprintf@plt>
   1e400:	ldr	r4, [r4]
   1e404:	cmp	r4, #0
   1e408:	bne	1e344 <__flatcc_fb_gen_c_verifier@@Base+0x31c>
   1e40c:	ldr	r0, [sp, #44]	; 0x2c
   1e410:	ldr	r0, [r0, #208]	; 0xd0
   1e414:	ldr	sl, [r0, #40]	; 0x28
   1e418:	cmp	sl, #0
   1e41c:	beq	1e8b0 <__flatcc_fb_gen_c_verifier@@Base+0x888>
   1e420:	ldr	r6, [pc, #1688]	; 1eac0 <__flatcc_fb_gen_c_verifier@@Base+0xa98>
   1e424:	add	r6, pc, r6
   1e428:	ldrh	r0, [sl, #8]
   1e42c:	cmp	r0, #0
   1e430:	bne	1e8a4 <__flatcc_fb_gen_c_verifier@@Base+0x87c>
   1e434:	mov	r0, r7
   1e438:	mov	r1, #0
   1e43c:	mov	r2, #220	; 0xdc
   1e440:	bl	149d0 <memset@plt>
   1e444:	add	r4, sp, #48	; 0x30
   1e448:	mov	r1, #0
   1e44c:	mov	r2, #220	; 0xdc
   1e450:	mov	r0, r4
   1e454:	bl	149d0 <memset@plt>
   1e458:	ldr	r0, [sl, #12]
   1e45c:	mov	r1, sl
   1e460:	mov	r2, r7
   1e464:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e468:	ldr	r0, [r8]
   1e46c:	ldr	r1, [pc, #1616]	; 1eac4 <__flatcc_fb_gen_c_verifier@@Base+0xa9c>
   1e470:	mov	r2, r7
   1e474:	add	r1, pc, r1
   1e478:	bl	149b8 <fprintf@plt>
   1e47c:	ldr	r5, [sl, #20]
   1e480:	cmp	r5, #0
   1e484:	beq	1e804 <__flatcc_fb_gen_c_verifier@@Base+0x7dc>
   1e488:	mov	r0, #1
   1e48c:	ldrb	r1, [r5, #72]	; 0x48
   1e490:	tst	r1, #4
   1e494:	bne	1e7d8 <__flatcc_fb_gen_c_verifier@@Base+0x7b0>
   1e498:	ldr	r3, [r8]
   1e49c:	cmp	r0, #0
   1e4a0:	beq	1e4b4 <__flatcc_fb_gen_c_verifier@@Base+0x48c>
   1e4a4:	ldr	r0, [pc, #1564]	; 1eac8 <__flatcc_fb_gen_c_verifier@@Base+0xaa0>
   1e4a8:	mov	r1, #28
   1e4ac:	add	r0, pc, r0
   1e4b0:	b	1e4c0 <__flatcc_fb_gen_c_verifier@@Base+0x498>
   1e4b4:	ldr	r0, [pc, #1552]	; 1eacc <__flatcc_fb_gen_c_verifier@@Base+0xaa4>
   1e4b8:	mov	r1, #30
   1e4bc:	add	r0, pc, r0
   1e4c0:	mov	r2, #1
   1e4c4:	bl	1494c <fwrite@plt>
   1e4c8:	ldrh	r0, [r5, #72]	; 0x48
   1e4cc:	ubfx	r9, r0, #8, #1
   1e4d0:	ldrh	r0, [r5, #24]
   1e4d4:	sub	r0, r0, #7
   1e4d8:	cmp	r0, #8
   1e4dc:	bhi	1e7bc <__flatcc_fb_gen_c_verifier@@Base+0x794>
   1e4e0:	add	r1, pc, #4
   1e4e4:	ldr	r0, [r1, r0, lsl #2]
   1e4e8:	add	pc, r1, r0
   1e4ec:	andeq	r0, r0, r4, lsr #32
   1e4f0:	muleq	r0, r8, r1
   1e4f4:	andeq	r0, r0, ip, lsl #1
   1e4f8:	andeq	r0, r0, r0, asr #2
   1e4fc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1e500:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1e504:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1e508:	andeq	r0, r0, r8, asr r1
   1e50c:	andeq	r0, r0, r4, lsr #1
   1e510:	ldr	r1, [r5, #104]	; 0x68
   1e514:	cmp	r1, #0
   1e518:	beq	1e6bc <__flatcc_fb_gen_c_verifier@@Base+0x694>
   1e51c:	ldr	r0, [r1, #12]
   1e520:	mov	r2, r4
   1e524:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e528:	ldr	r1, [r5, #104]	; 0x68
   1e52c:	ldr	r0, [r8]
   1e530:	ldr	r2, [r5, #96]	; 0x60
   1e534:	ldr	r3, [r5, #100]	; 0x64
   1e538:	ldrh	r1, [r1, #8]
   1e53c:	cmp	r1, #0
   1e540:	beq	1e7a4 <__flatcc_fb_gen_c_verifier@@Base+0x77c>
   1e544:	ldr	r4, [r5, #88]	; 0x58
   1e548:	ldr	r1, [r5, #92]	; 0x5c
   1e54c:	ldrh	r6, [r5, #74]	; 0x4a
   1e550:	str	r4, [sp, #8]
   1e554:	str	r1, [sp, #12]
   1e558:	str	r6, [sp, #16]
   1e55c:	add	r4, sp, #48	; 0x30
   1e560:	ldr	r6, [pc, #1480]	; 1eb30 <__flatcc_fb_gen_c_verifier@@Base+0xb08>
   1e564:	str	r9, [sp]
   1e568:	ldr	r1, [pc, #1476]	; 1eb34 <__flatcc_fb_gen_c_verifier@@Base+0xb0c>
   1e56c:	add	r6, pc, r6
   1e570:	add	r1, pc, r1
   1e574:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e578:	ldrd	r2, [r5, #96]	; 0x60
   1e57c:	ldr	r0, [r8]
   1e580:	str	r9, [sp]
   1e584:	ldr	r1, [pc, #1364]	; 1eae0 <__flatcc_fb_gen_c_verifier@@Base+0xab8>
   1e588:	add	r1, pc, r1
   1e58c:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e590:	ldr	r1, [r5, #16]
   1e594:	mov	r2, r4
   1e598:	ldr	r0, [r1, #12]
   1e59c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e5a0:	ldr	r0, [r5, #16]
   1e5a4:	ldrh	r0, [r0, #8]
   1e5a8:	cmp	r0, #4
   1e5ac:	bhi	1e9a4 <__flatcc_fb_gen_c_verifier@@Base+0x97c>
   1e5b0:	add	r1, pc, #4
   1e5b4:	ldr	r0, [r1, r0, lsl #2]
   1e5b8:	add	pc, r1, r0
   1e5bc:	andeq	r0, r0, r8, ror r1
   1e5c0:	andeq	r0, r0, r4, lsl r0
   1e5c4:	andeq	r0, r0, r8, ror #7
   1e5c8:	andeq	r0, r0, r4, lsl r0
   1e5cc:	muleq	r0, r4, r1
   1e5d0:	ldr	r0, [r5, #96]	; 0x60
   1e5d4:	mov	r6, sl
   1e5d8:	ldr	sl, [r5, #88]	; 0x58
   1e5dc:	ldr	r4, [r5, #92]	; 0x5c
   1e5e0:	mov	r1, #0
   1e5e4:	str	r0, [sp, #40]	; 0x28
   1e5e8:	ldr	r0, [r5, #100]	; 0x64
   1e5ec:	orrs	r3, sl, r4
   1e5f0:	mov	r2, sl
   1e5f4:	movweq	r2, #1
   1e5f8:	movne	r3, r4
   1e5fc:	str	r0, [sp, #36]	; 0x24
   1e600:	mvn	r0, #0
   1e604:	bl	3e9c0 <fb_value_set_visit@@Base+0x664>
   1e608:	ldr	r2, [r8]
   1e60c:	ldrh	r3, [r5, #74]	; 0x4a
   1e610:	str	sl, [sp, #8]
   1e614:	mov	sl, r6
   1e618:	ldr	r6, [pc, #1264]	; 1eb10 <__flatcc_fb_gen_c_verifier@@Base+0xae8>
   1e61c:	str	r4, [sp, #12]
   1e620:	add	r4, sp, #48	; 0x30
   1e624:	add	r6, pc, r6
   1e628:	b	1e70c <__flatcc_fb_gen_c_verifier@@Base+0x6e4>
   1e62c:	ldrd	r2, [r5, #96]	; 0x60
   1e630:	ldr	r0, [r8]
   1e634:	str	r9, [sp]
   1e638:	ldr	r1, [pc, #1180]	; 1eadc <__flatcc_fb_gen_c_verifier@@Base+0xab4>
   1e63c:	add	r1, pc, r1
   1e640:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e644:	ldr	r1, [r5, #16]
   1e648:	mov	r2, r4
   1e64c:	ldr	r0, [r1, #12]
   1e650:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1e654:	ldr	r0, [r5, #16]
   1e658:	ldrh	r0, [r0, #8]
   1e65c:	cmp	r0, #4
   1e660:	bhi	1e9f4 <__flatcc_fb_gen_c_verifier@@Base+0x9cc>
   1e664:	add	r1, pc, #4
   1e668:	ldr	r0, [r1, r0, lsl #2]
   1e66c:	add	pc, r1, r0
   1e670:	strdeq	r0, [r0], -ip
   1e674:	andeq	r0, r0, r4, lsl r0
   1e678:	andeq	r0, r0, r4, lsl #7
   1e67c:	andeq	r0, r0, r4, lsl r0
   1e680:	andeq	r0, r0, r8, lsl r1
   1e684:	ldr	r1, [r5, #88]	; 0x58
   1e688:	ldr	r6, [r5, #92]	; 0x5c
   1e68c:	ldrh	r4, [r5, #74]	; 0x4a
   1e690:	ldr	r0, [r8]
   1e694:	ldr	r2, [r5, #96]	; 0x60
   1e698:	ldr	r3, [r5, #100]	; 0x64
   1e69c:	stm	sp, {r1, r6}
   1e6a0:	ldr	r6, [pc, #1084]	; 1eae4 <__flatcc_fb_gen_c_verifier@@Base+0xabc>
   1e6a4:	str	r4, [sp, #8]
   1e6a8:	add	r4, sp, #48	; 0x30
   1e6ac:	ldr	r1, [pc, #1076]	; 1eae8 <__flatcc_fb_gen_c_verifier@@Base+0xac0>
   1e6b0:	add	r6, pc, r6
   1e6b4:	add	r1, pc, r1
   1e6b8:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e6bc:	ldr	r0, [r5, #96]	; 0x60
   1e6c0:	ldr	r4, [r5, #88]	; 0x58
   1e6c4:	ldr	r6, [r5, #92]	; 0x5c
   1e6c8:	mov	r1, #0
   1e6cc:	str	r0, [sp, #40]	; 0x28
   1e6d0:	ldr	r0, [r5, #100]	; 0x64
   1e6d4:	orrs	r3, r4, r6
   1e6d8:	mov	r2, r4
   1e6dc:	movweq	r2, #1
   1e6e0:	movne	r3, r6
   1e6e4:	str	r0, [sp, #36]	; 0x24
   1e6e8:	mvn	r0, #0
   1e6ec:	bl	3e9c0 <fb_value_set_visit@@Base+0x664>
   1e6f0:	ldr	r2, [r8]
   1e6f4:	ldrh	r3, [r5, #74]	; 0x4a
   1e6f8:	str	r4, [sp, #8]
   1e6fc:	str	r6, [sp, #12]
   1e700:	add	r4, sp, #48	; 0x30
   1e704:	ldr	r6, [pc, #968]	; 1ead4 <__flatcc_fb_gen_c_verifier@@Base+0xaac>
   1e708:	add	r6, pc, r6
   1e70c:	str	r0, [sp, #24]
   1e710:	str	r3, [sp, #16]
   1e714:	str	r9, [sp]
   1e718:	str	r1, [sp, #28]
   1e71c:	mov	r0, r2
   1e720:	ldr	r1, [pc, #944]	; 1ead8 <__flatcc_fb_gen_c_verifier@@Base+0xab0>
   1e724:	ldr	r2, [sp, #40]	; 0x28
   1e728:	ldr	r3, [sp, #36]	; 0x24
   1e72c:	add	r1, pc, r1
   1e730:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e734:	ldrd	r2, [r5, #96]	; 0x60
   1e738:	ldr	r0, [r8]
   1e73c:	str	r9, [sp]
   1e740:	str	r4, [sp, #4]
   1e744:	ldr	r1, [pc, #960]	; 1eb0c <__flatcc_fb_gen_c_verifier@@Base+0xae4>
   1e748:	add	r1, pc, r1
   1e74c:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e750:	ldrd	r2, [r5, #96]	; 0x60
   1e754:	ldr	r0, [r8]
   1e758:	str	r9, [sp]
   1e75c:	str	r4, [sp, #4]
   1e760:	ldr	r1, [pc, #940]	; 1eb14 <__flatcc_fb_gen_c_verifier@@Base+0xaec>
   1e764:	add	r1, pc, r1
   1e768:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e76c:	ldrd	r2, [r5, #96]	; 0x60
   1e770:	ldr	r0, [r8]
   1e774:	str	r9, [sp]
   1e778:	str	r4, [sp, #4]
   1e77c:	ldr	r1, [pc, #872]	; 1eaec <__flatcc_fb_gen_c_verifier@@Base+0xac4>
   1e780:	add	r1, pc, r1
   1e784:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e788:	ldrd	r2, [r5, #96]	; 0x60
   1e78c:	ldr	r0, [r8]
   1e790:	str	r9, [sp]
   1e794:	str	r4, [sp, #4]
   1e798:	ldr	r1, [pc, #848]	; 1eaf0 <__flatcc_fb_gen_c_verifier@@Base+0xac8>
   1e79c:	add	r1, pc, r1
   1e7a0:	b	1e7b8 <__flatcc_fb_gen_c_verifier@@Base+0x790>
   1e7a4:	ldrh	r1, [r5, #74]	; 0x4a
   1e7a8:	str	r9, [sp]
   1e7ac:	stmib	sp, {r1, r4}
   1e7b0:	ldr	r1, [pc, #792]	; 1ead0 <__flatcc_fb_gen_c_verifier@@Base+0xaa8>
   1e7b4:	add	r1, pc, r1
   1e7b8:	bl	149b8 <fprintf@plt>
   1e7bc:	ldr	r1, [r5, #4]
   1e7c0:	ldr	r0, [r8]
   1e7c4:	ldr	r3, [r1]
   1e7c8:	ldr	r2, [r1, #4]
   1e7cc:	mov	r1, r6
   1e7d0:	bl	149b8 <fprintf@plt>
   1e7d4:	mov	r0, #0
   1e7d8:	ldr	r5, [r5]
   1e7dc:	cmp	r5, #0
   1e7e0:	bne	1e48c <__flatcc_fb_gen_c_verifier@@Base+0x464>
   1e7e4:	cmp	r0, #0
   1e7e8:	bne	1e804 <__flatcc_fb_gen_c_verifier@@Base+0x7dc>
   1e7ec:	ldr	r3, [r8]
   1e7f0:	ldr	r0, [pc, #832]	; 1eb38 <__flatcc_fb_gen_c_verifier@@Base+0xb10>
   1e7f4:	mov	r1, #15
   1e7f8:	mov	r2, #1
   1e7fc:	add	r0, pc, r0
   1e800:	bl	1494c <fwrite@plt>
   1e804:	ldr	r4, [sp, #44]	; 0x2c
   1e808:	mov	r1, #29
   1e80c:	mov	r2, #1
   1e810:	ldr	r3, [r4, #204]	; 0xcc
   1e814:	ldr	r0, [pc, #800]	; 1eb3c <__flatcc_fb_gen_c_verifier@@Base+0xb14>
   1e818:	add	r0, pc, r0
   1e81c:	bl	1494c <fwrite@plt>
   1e820:	ldr	r3, [r4, #204]	; 0xcc
   1e824:	ldr	r0, [pc, #788]	; 1eb40 <__flatcc_fb_gen_c_verifier@@Base+0xb18>
   1e828:	mov	r1, #3
   1e82c:	mov	r2, #1
   1e830:	add	r0, pc, r0
   1e834:	bl	1494c <fwrite@plt>
   1e838:	ldr	r0, [r4, #204]	; 0xcc
   1e83c:	str	r7, [sp]
   1e840:	mov	r2, r7
   1e844:	mov	r3, r7
   1e848:	ldr	r1, [pc, #756]	; 1eb44 <__flatcc_fb_gen_c_verifier@@Base+0xb1c>
   1e84c:	add	r1, pc, r1
   1e850:	bl	149b8 <fprintf@plt>
   1e854:	ldr	r0, [r4, #204]	; 0xcc
   1e858:	str	r7, [sp]
   1e85c:	mov	r2, r7
   1e860:	mov	r3, r7
   1e864:	ldr	r1, [pc, #732]	; 1eb48 <__flatcc_fb_gen_c_verifier@@Base+0xb20>
   1e868:	add	r1, pc, r1
   1e86c:	bl	149b8 <fprintf@plt>
   1e870:	ldr	r0, [r4, #204]	; 0xcc
   1e874:	ldr	r1, [pc, #720]	; 1eb4c <__flatcc_fb_gen_c_verifier@@Base+0xb24>
   1e878:	mov	r2, r7
   1e87c:	mov	r3, r7
   1e880:	add	r1, pc, r1
   1e884:	bl	149b8 <fprintf@plt>
   1e888:	ldr	r0, [r4, #204]	; 0xcc
   1e88c:	str	r7, [sp]
   1e890:	mov	r2, r7
   1e894:	mov	r3, r4
   1e898:	ldr	r1, [pc, #688]	; 1eb50 <__flatcc_fb_gen_c_verifier@@Base+0xb28>
   1e89c:	add	r1, pc, r1
   1e8a0:	bl	149b8 <fprintf@plt>
   1e8a4:	ldr	sl, [sl]
   1e8a8:	cmp	sl, #0
   1e8ac:	bne	1e428 <__flatcc_fb_gen_c_verifier@@Base+0x400>
   1e8b0:	ldr	r0, [sp, #44]	; 0x2c
   1e8b4:	ldr	r0, [r0, #212]	; 0xd4
   1e8b8:	ldr	r0, [r0, #140]	; 0x8c
   1e8bc:	cmp	r0, #0
   1e8c0:	beq	1e8dc <__flatcc_fb_gen_c_verifier@@Base+0x8b4>
   1e8c4:	ldr	r3, [r8]
   1e8c8:	ldr	r0, [pc, #644]	; 1eb54 <__flatcc_fb_gen_c_verifier@@Base+0xb2c>
   1e8cc:	mov	r1, #36	; 0x24
   1e8d0:	mov	r2, #1
   1e8d4:	add	r0, pc, r0
   1e8d8:	bl	1494c <fwrite@plt>
   1e8dc:	ldr	r1, [sp, #44]	; 0x2c
   1e8e0:	ldr	r0, [r1, #204]	; 0xcc
   1e8e4:	ldr	r1, [r1, #208]	; 0xd0
   1e8e8:	ldr	r2, [r1, #164]	; 0xa4
   1e8ec:	ldr	r1, [pc, #612]	; 1eb58 <__flatcc_fb_gen_c_verifier@@Base+0xb30>
   1e8f0:	add	r1, pc, r1
   1e8f4:	bl	149b8 <fprintf@plt>
   1e8f8:	mov	r0, #0
   1e8fc:	sub	sp, fp, #28
   1e900:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e904:	ldr	r0, [pc, #388]	; 1ea90 <__flatcc_fb_gen_c_verifier@@Base+0xa68>
   1e908:	mov	r3, #83	; 0x53
   1e90c:	ldr	r0, [pc, r0]
   1e910:	ldr	r0, [r0]
   1e914:	ldr	r1, [pc, #376]	; 1ea94 <__flatcc_fb_gen_c_verifier@@Base+0xa6c>
   1e918:	add	r1, pc, r1
   1e91c:	str	r1, [sp]
   1e920:	ldr	r1, [pc, #368]	; 1ea98 <__flatcc_fb_gen_c_verifier@@Base+0xa70>
   1e924:	ldr	r4, [pc, #368]	; 1ea9c <__flatcc_fb_gen_c_verifier@@Base+0xa74>
   1e928:	add	r4, pc, r4
   1e92c:	add	r1, pc, r1
   1e930:	mov	r2, r4
   1e934:	bl	149b8 <fprintf@plt>
   1e938:	ldr	r0, [pc, #352]	; 1eaa0 <__flatcc_fb_gen_c_verifier@@Base+0xa78>
   1e93c:	ldr	r3, [pc, #352]	; 1eaa4 <__flatcc_fb_gen_c_verifier@@Base+0xa7c>
   1e940:	mov	r1, r4
   1e944:	mov	r2, #83	; 0x53
   1e948:	add	r0, pc, r0
   1e94c:	add	r3, pc, r3
   1e950:	bl	14a78 <__assert_fail@plt>
   1e954:	ldr	r0, [pc, #284]	; 1ea78 <__flatcc_fb_gen_c_verifier@@Base+0xa50>
   1e958:	mov	r3, #74	; 0x4a
   1e95c:	ldr	r0, [pc, r0]
   1e960:	ldr	r0, [r0]
   1e964:	ldr	r1, [pc, #272]	; 1ea7c <__flatcc_fb_gen_c_verifier@@Base+0xa54>
   1e968:	add	r1, pc, r1
   1e96c:	str	r1, [sp]
   1e970:	ldr	r1, [pc, #264]	; 1ea80 <__flatcc_fb_gen_c_verifier@@Base+0xa58>
   1e974:	ldr	r4, [pc, #264]	; 1ea84 <__flatcc_fb_gen_c_verifier@@Base+0xa5c>
   1e978:	add	r4, pc, r4
   1e97c:	add	r1, pc, r1
   1e980:	mov	r2, r4
   1e984:	bl	149b8 <fprintf@plt>
   1e988:	ldr	r0, [pc, #248]	; 1ea88 <__flatcc_fb_gen_c_verifier@@Base+0xa60>
   1e98c:	ldr	r3, [pc, #248]	; 1ea8c <__flatcc_fb_gen_c_verifier@@Base+0xa64>
   1e990:	mov	r1, r4
   1e994:	mov	r2, #74	; 0x4a
   1e998:	add	r0, pc, r0
   1e99c:	add	r3, pc, r3
   1e9a0:	bl	14a78 <__assert_fail@plt>
   1e9a4:	ldr	r0, [pc, #364]	; 1eb18 <__flatcc_fb_gen_c_verifier@@Base+0xaf0>
   1e9a8:	mov	r3, #202	; 0xca
   1e9ac:	ldr	r0, [pc, r0]
   1e9b0:	ldr	r0, [r0]
   1e9b4:	ldr	r1, [pc, #352]	; 1eb1c <__flatcc_fb_gen_c_verifier@@Base+0xaf4>
   1e9b8:	add	r1, pc, r1
   1e9bc:	str	r1, [sp]
   1e9c0:	ldr	r1, [pc, #344]	; 1eb20 <__flatcc_fb_gen_c_verifier@@Base+0xaf8>
   1e9c4:	ldr	r4, [pc, #344]	; 1eb24 <__flatcc_fb_gen_c_verifier@@Base+0xafc>
   1e9c8:	add	r4, pc, r4
   1e9cc:	add	r1, pc, r1
   1e9d0:	mov	r2, r4
   1e9d4:	bl	149b8 <fprintf@plt>
   1e9d8:	ldr	r0, [pc, #328]	; 1eb28 <__flatcc_fb_gen_c_verifier@@Base+0xb00>
   1e9dc:	ldr	r3, [pc, #328]	; 1eb2c <__flatcc_fb_gen_c_verifier@@Base+0xb04>
   1e9e0:	mov	r1, r4
   1e9e4:	mov	r2, #202	; 0xca
   1e9e8:	add	r0, pc, r0
   1e9ec:	add	r3, pc, r3
   1e9f0:	bl	14a78 <__assert_fail@plt>
   1e9f4:	ldr	r0, [pc, #248]	; 1eaf4 <__flatcc_fb_gen_c_verifier@@Base+0xacc>
   1e9f8:	mov	r3, #178	; 0xb2
   1e9fc:	ldr	r0, [pc, r0]
   1ea00:	ldr	r0, [r0]
   1ea04:	ldr	r1, [pc, #236]	; 1eaf8 <__flatcc_fb_gen_c_verifier@@Base+0xad0>
   1ea08:	add	r1, pc, r1
   1ea0c:	str	r1, [sp]
   1ea10:	ldr	r1, [pc, #228]	; 1eafc <__flatcc_fb_gen_c_verifier@@Base+0xad4>
   1ea14:	ldr	r4, [pc, #228]	; 1eb00 <__flatcc_fb_gen_c_verifier@@Base+0xad8>
   1ea18:	add	r4, pc, r4
   1ea1c:	add	r1, pc, r1
   1ea20:	mov	r2, r4
   1ea24:	bl	149b8 <fprintf@plt>
   1ea28:	ldr	r0, [pc, #212]	; 1eb04 <__flatcc_fb_gen_c_verifier@@Base+0xadc>
   1ea2c:	ldr	r3, [pc, #212]	; 1eb08 <__flatcc_fb_gen_c_verifier@@Base+0xae0>
   1ea30:	mov	r1, r4
   1ea34:	mov	r2, #178	; 0xb2
   1ea38:	add	r0, pc, r0
   1ea3c:	add	r3, pc, r3
   1ea40:	bl	14a78 <__assert_fail@plt>
   1ea44:	andeq	r4, r3, r0, lsr #3
   1ea48:	andeq	r2, r2, r5, asr r5
   1ea4c:	andeq	r3, r3, r5, ror #1
   1ea50:	andeq	r3, r3, r2, ror #1
   1ea54:	andeq	r8, r2, ip, lsr #14
   1ea58:	andeq	r4, r3, r1, asr r1
   1ea5c:	andeq	r2, r2, pc, ror r4
   1ea60:	andeq	r4, r3, lr, asr r1
   1ea64:	andeq	r2, r2, r4, lsr #13
   1ea68:	strdeq	r4, [r3], -lr
   1ea6c:			; <UNDEFINED> instruction: 0x000342ba
   1ea70:	andeq	r4, r3, pc, lsl #1
   1ea74:	andeq	r4, r3, r3, rrx
   1ea78:	andeq	sp, r4, r0, asr #14
   1ea7c:	andeq	r3, r3, sl, lsl #21
   1ea80:	andeq	r1, r2, sl, ror #26
   1ea84:	andeq	r3, r3, r1, lsl sl
   1ea88:	andeq	r2, r3, r6, lsl ip
   1ea8c:	muleq	r3, r2, sl
   1ea90:	muleq	r4, r0, r7
   1ea94:	muleq	r3, r2, fp
   1ea98:			; <UNDEFINED> instruction: 0x00021dba
   1ea9c:	andeq	r3, r3, r1, ror #20
   1eaa0:	andeq	r2, r3, r6, ror #24
   1eaa4:	andeq	r3, r3, r2, ror #21
   1eaa8:	andeq	r4, r3, r7, rrx
   1eaac:	andeq	r4, r3, r1, ror #3
   1eab0:	andeq	r4, r3, lr, ror #4
   1eab4:	andeq	r4, r3, lr, lsl #6
   1eab8:	andeq	r4, r3, r1, asr #7
   1eabc:	andeq	r4, r3, sp, ror r1
   1eac0:	andeq	r5, r3, r9, asr #4
   1eac4:	andeq	r4, r3, sp, lsr r3
   1eac8:	andeq	r4, r3, fp, asr #6
   1eacc:	andeq	r4, r3, r8, asr r3
   1ead0:	andeq	r4, r3, r7, lsr #1
   1ead4:	andeq	r4, r3, r5, ror #30
   1ead8:			; <UNDEFINED> instruction: 0x000341b8
   1eadc:	andeq	r4, r3, sl, ror #5
   1eae0:	andeq	r4, r3, r7, asr #7
   1eae4:			; <UNDEFINED> instruction: 0x00034fbd
   1eae8:	andeq	r4, r3, pc, ror r1
   1eaec:	strdeq	r4, [r3], -pc	; <UNPREDICTABLE>
   1eaf0:	andeq	r4, r3, sp, lsl r2
   1eaf4:	andeq	sp, r4, r0, lsr #13
   1eaf8:	andeq	r3, r3, sp, ror #31
   1eafc:	andeq	r1, r2, sl, asr #25
   1eb00:	andeq	r3, r3, r1, ror r9
   1eb04:	andeq	r2, r3, r6, ror fp
   1eb08:	strdeq	r3, [r3], -r5
   1eb0c:	andeq	r4, r3, r5, lsr #6
   1eb10:	andeq	r5, r3, r9, asr #32
   1eb14:	andeq	r4, r3, sl, asr #6
   1eb18:	strdeq	sp, [r4], -r0
   1eb1c:	andeq	r4, r3, r9, lsr r1
   1eb20:	andeq	r1, r2, sl, lsl sp
   1eb24:	andeq	r3, r3, r1, asr #19
   1eb28:	andeq	r2, r3, r6, asr #23
   1eb2c:	andeq	r4, r3, r5, asr #32
   1eb30:	andeq	r5, r3, r1, lsl #2
   1eb34:	andeq	r4, r3, r4, lsr r3
   1eb38:	andeq	r4, r3, r8, lsr r3
   1eb3c:	andeq	r4, r3, ip, lsr #6
   1eb40:	muleq	r3, r8, r3
   1eb44:	andeq	r4, r3, r6, lsl r3
   1eb48:	muleq	r3, sl, r3
   1eb4c:	andeq	r4, r3, sp, lsr #8
   1eb50:	andeq	r4, r3, r8, asr #9
   1eb54:	andeq	r7, r2, r6, asr #25
   1eb58:	andeq	r4, r3, r2, lsr r5

0001eb5c <__flatcc_fb_gen_c_json_parser@@Base>:
   1eb5c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1eb60:	add	fp, sp, #28
   1eb64:	sub	sp, sp, #4
   1eb68:	vpush	{d8-d9}
   1eb6c:	sub	sp, sp, #456	; 0x1c8
   1eb70:	mov	r4, r0
   1eb74:	ldr	r0, [r0, #208]	; 0xd0
   1eb78:	ldr	r2, [r0, #164]	; 0xa4
   1eb7c:	ldr	r1, [pc, #4036]	; 1fb48 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   1eb80:	mov	r0, r4
   1eb84:	add	r1, pc, r1
   1eb88:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1eb8c:	ldr	r0, [r4, #208]	; 0xd0
   1eb90:	ldr	r2, [r0, #164]	; 0xa4
   1eb94:	ldr	r1, [pc, #4016]	; 1fb4c <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   1eb98:	mov	r0, r4
   1eb9c:	add	r1, pc, r1
   1eba0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1eba4:	ldr	r5, [pc, #4004]	; 1fb50 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   1eba8:	mov	r0, r4
   1ebac:	add	r5, pc, r5
   1ebb0:	mov	r1, r5
   1ebb4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ebb8:	ldr	r1, [pc, #3988]	; 1fb54 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   1ebbc:	mov	r0, r4
   1ebc0:	add	r1, pc, r1
   1ebc4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ebc8:	mov	r0, r4
   1ebcc:	mov	r1, r5
   1ebd0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ebd4:	ldr	r1, [pc, #3964]	; 1fb58 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   1ebd8:	mov	r0, r4
   1ebdc:	add	r1, pc, r1
   1ebe0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ebe4:	ldr	r1, [pc, #3952]	; 1fb5c <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   1ebe8:	ldr	r2, [pc, #3952]	; 1fb60 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   1ebec:	mov	r0, r4
   1ebf0:	add	r1, pc, r1
   1ebf4:	add	r2, pc, r2
   1ebf8:	bl	16990 <__flatcc_fb_gen_c_includes@@Base>
   1ebfc:	ldr	r0, [r4, #212]	; 0xd4
   1ec00:	ldr	r0, [r0, #140]	; 0x8c
   1ec04:	cmp	r0, #0
   1ec08:	beq	1ec24 <__flatcc_fb_gen_c_json_parser@@Base+0xc8>
   1ec0c:	ldr	r3, [r4, #204]	; 0xcc
   1ec10:	ldr	r0, [pc, #3916]	; 1fb64 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   1ec14:	mov	r1, #36	; 0x24
   1ec18:	mov	r2, #1
   1ec1c:	add	r0, pc, r0
   1ec20:	bl	1494c <fwrite@plt>
   1ec24:	ldr	r1, [pc, #3900]	; 1fb68 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   1ec28:	mov	r0, r4
   1ec2c:	add	r1, pc, r1
   1ec30:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ec34:	ldr	r6, [r4, #208]	; 0xd0
   1ec38:	add	r0, sp, #232	; 0xe8
   1ec3c:	mov	r1, #0
   1ec40:	mov	r2, #220	; 0xdc
   1ec44:	ldr	r5, [r6, #52]	; 0x34
   1ec48:	bl	149d0 <memset@plt>
   1ec4c:	cmp	r5, #0
   1ec50:	beq	1ed58 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   1ec54:	ldrh	r0, [r5, #8]
   1ec58:	cmp	r0, #1
   1ec5c:	bhi	1ed58 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   1ec60:	ldr	r1, [pc, #3844]	; 1fb6c <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   1ec64:	mov	r0, r4
   1ec68:	add	r1, pc, r1
   1ec6c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ec70:	ldr	r1, [pc, #3832]	; 1fb70 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   1ec74:	mov	r0, r4
   1ec78:	add	r1, pc, r1
   1ec7c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ec80:	ldr	r1, [pc, #3820]	; 1fb74 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   1ec84:	mov	r0, r4
   1ec88:	add	r1, pc, r1
   1ec8c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ec90:	ldr	r1, [pc, #3808]	; 1fb78 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   1ec94:	mov	r0, r4
   1ec98:	add	r1, pc, r1
   1ec9c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1eca0:	ldr	r1, [pc, #3796]	; 1fb7c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   1eca4:	mov	r0, r4
   1eca8:	add	r1, pc, r1
   1ecac:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ecb0:	ldr	r1, [pc, #3784]	; 1fb80 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   1ecb4:	mov	r0, r4
   1ecb8:	add	r1, pc, r1
   1ecbc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ecc0:	ldr	r1, [pc, #3772]	; 1fb84 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   1ecc4:	mov	r0, r4
   1ecc8:	add	r1, pc, r1
   1eccc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ecd0:	ldr	r1, [pc, #3760]	; 1fb88 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   1ecd4:	mov	r0, r4
   1ecd8:	add	r1, pc, r1
   1ecdc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ece0:	ldr	r1, [pc, #3748]	; 1fb8c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   1ece4:	mov	r0, r4
   1ece8:	add	r1, pc, r1
   1ecec:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ecf0:	ldr	r0, [r4, #208]	; 0xd0
   1ecf4:	ldr	r2, [r0, #160]	; 0xa0
   1ecf8:	ldr	r1, [pc, #3728]	; 1fb90 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   1ecfc:	mov	r0, r4
   1ed00:	add	r1, pc, r1
   1ed04:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ed08:	ldr	r0, [r4, #220]	; 0xdc
   1ed0c:	add	r0, r0, #2
   1ed10:	str	r0, [r4, #220]	; 0xdc
   1ed14:	mov	r0, r4
   1ed18:	ldr	r1, [pc, #3700]	; 1fb94 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   1ed1c:	add	r1, pc, r1
   1ed20:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ed24:	ldr	r0, [r4, #220]	; 0xdc
   1ed28:	cmp	r0, #0
   1ed2c:	beq	20cfc <__flatcc_fb_gen_c_json_parser@@Base+0x21a0>
   1ed30:	subs	r1, r0, #1
   1ed34:	str	r1, [r4, #220]	; 0xdc
   1ed38:	beq	20cfc <__flatcc_fb_gen_c_json_parser@@Base+0x21a0>
   1ed3c:	sub	r0, r0, #2
   1ed40:	str	r0, [r4, #220]	; 0xdc
   1ed44:	mov	r0, r4
   1ed48:	ldr	r1, [pc, #3656]	; 1fb98 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   1ed4c:	add	r1, pc, r1
   1ed50:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ed54:	ldr	r6, [r4, #208]	; 0xd0
   1ed58:	ldr	r5, [r6, #40]	; 0x28
   1ed5c:	cmp	r5, #0
   1ed60:	beq	1eef0 <__flatcc_fb_gen_c_json_parser@@Base+0x394>
   1ed64:	ldr	r7, [pc, #3632]	; 1fb9c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   1ed68:	ldr	r8, [pc, #3632]	; 1fba0 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   1ed6c:	ldr	r9, [pc, #3632]	; 1fba4 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   1ed70:	ldr	sl, [pc, #3632]	; 1fba8 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   1ed74:	add	r6, sp, #232	; 0xe8
   1ed78:	add	r7, pc, r7
   1ed7c:	add	r8, pc, r8
   1ed80:	add	r9, pc, r9
   1ed84:	add	sl, pc, sl
   1ed88:	ldrh	r0, [r5, #8]
   1ed8c:	cmp	r0, #4
   1ed90:	bhi	1eee0 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   1ed94:	add	r1, pc, #4
   1ed98:	ldr	r0, [r1, r0, lsl #2]
   1ed9c:	add	pc, r1, r0
   1eda0:	andeq	r0, r0, r4, lsl r0
   1eda4:	andeq	r0, r0, ip, lsl #1
   1eda8:	andeq	r0, r0, r0, asr #2
   1edac:	andeq	r0, r0, r4, lsr r0
   1edb0:	andeq	r0, r0, r8, asr #1
   1edb4:	ldr	r0, [r5, #12]
   1edb8:	mov	r1, r5
   1edbc:	mov	r2, r6
   1edc0:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1edc4:	ldr	r1, [pc, #3552]	; 1fbac <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   1edc8:	mov	r0, r4
   1edcc:	add	r1, pc, r1
   1edd0:	b	1ee5c <__flatcc_fb_gen_c_json_parser@@Base+0x300>
   1edd4:	ldr	r0, [r5, #12]
   1edd8:	mov	r1, r5
   1eddc:	mov	r2, r6
   1ede0:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1ede4:	mov	r0, r4
   1ede8:	mov	r1, r7
   1edec:	mov	r2, r6
   1edf0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1edf4:	ldr	r0, [r4, #220]	; 0xdc
   1edf8:	mov	r1, r8
   1edfc:	mov	r2, r6
   1ee00:	add	r0, r0, #2
   1ee04:	str	r0, [r4, #220]	; 0xdc
   1ee08:	mov	r0, r4
   1ee0c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ee10:	ldr	r0, [r4, #220]	; 0xdc
   1ee14:	cmp	r0, #0
   1ee18:	beq	20918 <__flatcc_fb_gen_c_json_parser@@Base+0x1dbc>
   1ee1c:	subs	r1, r0, #1
   1ee20:	str	r1, [r4, #220]	; 0xdc
   1ee24:	bne	1eed8 <__flatcc_fb_gen_c_json_parser@@Base+0x37c>
   1ee28:	b	20918 <__flatcc_fb_gen_c_json_parser@@Base+0x1dbc>
   1ee2c:	ldr	r0, [r5, #12]
   1ee30:	mov	r1, r5
   1ee34:	mov	r2, r6
   1ee38:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1ee3c:	ldr	r1, [pc, #3436]	; 1fbb0 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   1ee40:	mov	r0, r4
   1ee44:	mov	r2, r6
   1ee48:	add	r1, pc, r1
   1ee4c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ee50:	ldr	r1, [pc, #3420]	; 1fbb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   1ee54:	mov	r0, r4
   1ee58:	add	r1, pc, r1
   1ee5c:	mov	r2, r6
   1ee60:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ee64:	b	1eee0 <__flatcc_fb_gen_c_json_parser@@Base+0x384>
   1ee68:	ldr	r0, [r5, #12]
   1ee6c:	mov	r1, r5
   1ee70:	mov	r2, r6
   1ee74:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1ee78:	mov	r0, r4
   1ee7c:	mov	r1, r9
   1ee80:	mov	r2, r6
   1ee84:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ee88:	mov	r0, r4
   1ee8c:	mov	r1, sl
   1ee90:	mov	r2, r6
   1ee94:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ee98:	mov	r0, r4
   1ee9c:	mov	r1, r7
   1eea0:	mov	r2, r6
   1eea4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1eea8:	ldr	r0, [r4, #220]	; 0xdc
   1eeac:	mov	r1, r8
   1eeb0:	add	r0, r0, #2
   1eeb4:	str	r0, [r4, #220]	; 0xdc
   1eeb8:	mov	r0, r4
   1eebc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1eec0:	ldr	r0, [r4, #220]	; 0xdc
   1eec4:	cmp	r0, #0
   1eec8:	beq	20938 <__flatcc_fb_gen_c_json_parser@@Base+0x1ddc>
   1eecc:	subs	r1, r0, #1
   1eed0:	str	r1, [r4, #220]	; 0xdc
   1eed4:	beq	20938 <__flatcc_fb_gen_c_json_parser@@Base+0x1ddc>
   1eed8:	sub	r0, r0, #2
   1eedc:	str	r0, [r4, #220]	; 0xdc
   1eee0:	ldr	r5, [r5]
   1eee4:	cmp	r5, #0
   1eee8:	bne	1ed88 <__flatcc_fb_gen_c_json_parser@@Base+0x22c>
   1eeec:	ldr	r6, [r4, #208]	; 0xd0
   1eef0:	ldr	r0, [r6, #60]	; 0x3c
   1eef4:	ldr	r1, [pc, #3260]	; 1fbb8 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   1eef8:	mov	r2, r4
   1eefc:	add	r1, pc, r1
   1ef00:	bl	29ca0 <fb_scope_table_visit@@Base>
   1ef04:	ldr	r0, [r4, #208]	; 0xd0
   1ef08:	ldr	r2, [r0, #160]	; 0xa0
   1ef0c:	ldr	r1, [pc, #3240]	; 1fbbc <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   1ef10:	mov	r0, r4
   1ef14:	add	r1, pc, r1
   1ef18:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ef1c:	ldr	r0, [r4, #220]	; 0xdc
   1ef20:	add	r0, r0, #2
   1ef24:	str	r0, [r4, #220]	; 0xdc
   1ef28:	mov	r0, r4
   1ef2c:	ldr	r1, [pc, #3212]	; 1fbc0 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   1ef30:	add	r1, pc, r1
   1ef34:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ef38:	ldr	r0, [r4, #220]	; 0xdc
   1ef3c:	cmp	r0, #0
   1ef40:	beq	20c94 <__flatcc_fb_gen_c_json_parser@@Base+0x2138>
   1ef44:	subs	r1, r0, #1
   1ef48:	str	r1, [r4, #220]	; 0xdc
   1ef4c:	beq	20c94 <__flatcc_fb_gen_c_json_parser@@Base+0x2138>
   1ef50:	sub	r0, r0, #2
   1ef54:	str	r0, [r4, #220]	; 0xdc
   1ef58:	mov	r0, r4
   1ef5c:	ldr	r1, [pc, #3168]	; 1fbc4 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   1ef60:	add	r1, pc, r1
   1ef64:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1ef68:	ldr	r0, [r4, #208]	; 0xd0
   1ef6c:	ldr	r8, [r0, #40]	; 0x28
   1ef70:	cmp	r8, #0
   1ef74:	beq	1fe80 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   1ef78:	ldr	r9, [pc, #3144]	; 1fbc8 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   1ef7c:	vmov.i32	q4, #0	; 0x00000000
   1ef80:	add	r5, sp, #8
   1ef84:	add	sl, sp, #232	; 0xe8
   1ef88:	add	r9, pc, r9
   1ef8c:	ldrh	r0, [r8, #8]
   1ef90:	cmp	r0, #4
   1ef94:	bhi	1fe70 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   1ef98:	add	r1, pc, #4
   1ef9c:	ldr	r0, [r1, r0, lsl #2]
   1efa0:	add	pc, r1, r0
   1efa4:	andeq	r0, r0, r4, lsl r0
   1efa8:	andeq	r0, r0, r8, asr #3
   1efac:	andeq	r0, r0, ip, asr #29
   1efb0:	strdeq	r0, [r0], -ip
   1efb4:	andeq	r0, r0, r4, asr r3
   1efb8:	mov	r1, #12
   1efbc:	vst1.64	{d8-d9}, [r5], r1
   1efc0:	vst1.32	{d8-d9}, [r5]
   1efc4:	ldrh	r0, [r8, #8]
   1efc8:	cmp	r0, #0
   1efcc:	bne	20960 <__flatcc_fb_gen_c_json_parser@@Base+0x1e04>
   1efd0:	mov	r0, r8
   1efd4:	add	r1, sp, #228	; 0xe4
   1efd8:	bl	21a24 <__flatcc_fb_gen_c_json_parser@@Base+0x2ec8>
   1efdc:	ldr	r7, [sp, #228]	; 0xe4
   1efe0:	cmp	r0, #0
   1efe4:	str	r0, [sp, #8]
   1efe8:	bne	1eff4 <__flatcc_fb_gen_c_json_parser@@Base+0x498>
   1efec:	cmp	r7, #1
   1eff0:	bge	20984 <__flatcc_fb_gen_c_json_parser@@Base+0x1e28>
   1eff4:	mov	r5, #0
   1eff8:	cmp	r7, #1
   1effc:	str	r5, [sp, #24]
   1f000:	str	r8, [sp, #20]
   1f004:	ldr	r1, [pc, #3008]	; 1fbcc <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   1f008:	add	r1, pc, r1
   1f00c:	str	r1, [sp, #12]
   1f010:	ldr	r1, [pc, #3000]	; 1fbd0 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   1f014:	add	r1, pc, r1
   1f018:	str	r1, [sp, #16]
   1f01c:	str	r5, [sp, #28]
   1f020:	blt	1f0a0 <__flatcc_fb_gen_c_json_parser@@Base+0x544>
   1f024:	mov	r5, #0
   1f028:	cmp	r7, #5
   1f02c:	mov	r1, #0
   1f030:	bcc	1f07c <__flatcc_fb_gen_c_json_parser@@Base+0x520>
   1f034:	ands	r1, r7, #3
   1f038:	vmov.i32	q8, #0	; 0x00000000
   1f03c:	add	r2, r0, #12
   1f040:	movweq	r1, #4
   1f044:	sub	r1, r7, r1
   1f048:	mov	r3, r1
   1f04c:	vld4.32	{d18,d20,d22,d24}, [r2]!
   1f050:	subs	r3, r3, #4
   1f054:	vld4.32	{d19,d21,d23,d25}, [r2]!
   1f058:	vceq.i32	q9, q9, #0
   1f05c:	vmvn	q9, q9
   1f060:	vsub.i32	q8, q8, q9
   1f064:	bne	1f04c <__flatcc_fb_gen_c_json_parser@@Base+0x4f0>
   1f068:	vext.8	q9, q8, q8, #8
   1f06c:	vadd.i32	q8, q8, q9
   1f070:	vdup.32	q9, d16[1]
   1f074:	vadd.i32	q8, q8, q9
   1f078:	vmov.32	r5, d16[0]
   1f07c:	add	r0, r0, r1, lsl #4
   1f080:	sub	r2, r7, r1
   1f084:	add	r0, r0, #12
   1f088:	ldr	r1, [r0], #16
   1f08c:	cmp	r1, #0
   1f090:	addne	r5, r5, #1
   1f094:	subs	r2, r2, #1
   1f098:	bne	1f088 <__flatcc_fb_gen_c_json_parser@@Base+0x52c>
   1f09c:	str	r5, [sp, #28]
   1f0a0:	mov	r0, sl
   1f0a4:	mov	r1, #0
   1f0a8:	mov	r2, #220	; 0xdc
   1f0ac:	bl	149d0 <memset@plt>
   1f0b0:	ldr	r0, [r8, #12]
   1f0b4:	mov	r1, r8
   1f0b8:	mov	r2, sl
   1f0bc:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1f0c0:	ldr	r1, [pc, #2828]	; 1fbd4 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   1f0c4:	mov	r0, r4
   1f0c8:	mov	r2, sl
   1f0cc:	add	r1, pc, r1
   1f0d0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f0d4:	ldr	r1, [pc, #2812]	; 1fbd8 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   1f0d8:	mov	r0, r4
   1f0dc:	add	r1, pc, r1
   1f0e0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f0e4:	ldr	r0, [r4, #220]	; 0xdc
   1f0e8:	add	r0, r0, #1
   1f0ec:	str	r0, [r4, #220]	; 0xdc
   1f0f0:	mov	r0, r4
   1f0f4:	ldr	r1, [pc, #4084]	; 200f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1594>
   1f0f8:	add	r1, pc, r1
   1f0fc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f100:	cmp	r7, #1
   1f104:	blt	1f14c <__flatcc_fb_gen_c_json_parser@@Base+0x5f0>
   1f108:	ldr	r1, [pc, #4068]	; 200f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1598>
   1f10c:	mov	r0, r4
   1f110:	add	r1, pc, r1
   1f114:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f118:	ldr	r1, [pc, #4056]	; 200f8 <__flatcc_fb_gen_c_json_parser@@Base+0x159c>
   1f11c:	mov	r0, r4
   1f120:	add	r1, pc, r1
   1f124:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f128:	ldr	r1, [pc, #4044]	; 200fc <__flatcc_fb_gen_c_json_parser@@Base+0x15a0>
   1f12c:	mov	r0, r4
   1f130:	add	r1, pc, r1
   1f134:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f138:	ldr	r1, [pc, #4032]	; 20100 <__flatcc_fb_gen_c_json_parser@@Base+0x15a4>
   1f13c:	mov	r0, r4
   1f140:	add	r1, pc, r1
   1f144:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f148:	ldr	r5, [sp, #28]
   1f14c:	cmp	r5, #0
   1f150:	beq	1f7b0 <__flatcc_fb_gen_c_json_parser@@Base+0xc54>
   1f154:	ldr	r1, [pc, #4008]	; 20104 <__flatcc_fb_gen_c_json_parser@@Base+0x15a8>
   1f158:	mov	r0, r4
   1f15c:	add	r1, pc, r1
   1f160:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f164:	ldr	r9, [sp, #28]
   1f168:	b	1f7b4 <__flatcc_fb_gen_c_json_parser@@Base+0xc58>
   1f16c:	mov	r0, r5
   1f170:	mov	r1, #12
   1f174:	vst1.64	{d8-d9}, [r0], r1
   1f178:	vst1.32	{d8-d9}, [r0]
   1f17c:	ldrh	r0, [r8, #8]
   1f180:	cmp	r0, #1
   1f184:	bne	209dc <__flatcc_fb_gen_c_json_parser@@Base+0x1e80>
   1f188:	mov	r0, r8
   1f18c:	add	r1, sp, #228	; 0xe4
   1f190:	bl	21a24 <__flatcc_fb_gen_c_json_parser@@Base+0x2ec8>
   1f194:	ldr	r7, [sp, #228]	; 0xe4
   1f198:	cmp	r0, #0
   1f19c:	str	r0, [sp, #8]
   1f1a0:	bne	1f1ac <__flatcc_fb_gen_c_json_parser@@Base+0x650>
   1f1a4:	cmp	r7, #1
   1f1a8:	bge	20a0c <__flatcc_fb_gen_c_json_parser@@Base+0x1eb0>
   1f1ac:	mov	r0, #1
   1f1b0:	mov	r1, #0
   1f1b4:	mov	r2, #220	; 0xdc
   1f1b8:	str	r0, [sp, #24]
   1f1bc:	str	r8, [sp, #20]
   1f1c0:	ldr	r0, [pc, #3904]	; 20108 <__flatcc_fb_gen_c_json_parser@@Base+0x15ac>
   1f1c4:	add	r0, pc, r0
   1f1c8:	str	r0, [sp, #12]
   1f1cc:	ldr	r0, [pc, #3896]	; 2010c <__flatcc_fb_gen_c_json_parser@@Base+0x15b0>
   1f1d0:	add	r0, pc, r0
   1f1d4:	str	r0, [sp, #16]
   1f1d8:	mov	r0, sl
   1f1dc:	bl	149d0 <memset@plt>
   1f1e0:	ldr	r0, [r8, #12]
   1f1e4:	mov	r1, r8
   1f1e8:	mov	r2, sl
   1f1ec:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1f1f0:	ldr	r1, [pc, #3864]	; 20110 <__flatcc_fb_gen_c_json_parser@@Base+0x15b4>
   1f1f4:	mov	r0, r4
   1f1f8:	mov	r2, sl
   1f1fc:	add	r1, pc, r1
   1f200:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f204:	ldr	r1, [pc, #3848]	; 20114 <__flatcc_fb_gen_c_json_parser@@Base+0x15b8>
   1f208:	mov	r0, r4
   1f20c:	add	r1, pc, r1
   1f210:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f214:	ldr	r0, [r4, #220]	; 0xdc
   1f218:	add	r0, r0, #1
   1f21c:	str	r0, [r4, #220]	; 0xdc
   1f220:	mov	r0, r4
   1f224:	ldr	r1, [pc, #3820]	; 20118 <__flatcc_fb_gen_c_json_parser@@Base+0x15bc>
   1f228:	add	r1, pc, r1
   1f22c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f230:	cmp	r7, #1
   1f234:	blt	1f278 <__flatcc_fb_gen_c_json_parser@@Base+0x71c>
   1f238:	ldr	r1, [pc, #4080]	; 20230 <__flatcc_fb_gen_c_json_parser@@Base+0x16d4>
   1f23c:	mov	r0, r4
   1f240:	add	r1, pc, r1
   1f244:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f248:	ldr	r1, [pc, #4068]	; 20234 <__flatcc_fb_gen_c_json_parser@@Base+0x16d8>
   1f24c:	mov	r0, r4
   1f250:	add	r1, pc, r1
   1f254:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f258:	ldr	r1, [pc, #4056]	; 20238 <__flatcc_fb_gen_c_json_parser@@Base+0x16dc>
   1f25c:	mov	r0, r4
   1f260:	add	r1, pc, r1
   1f264:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f268:	ldr	r1, [pc, #4044]	; 2023c <__flatcc_fb_gen_c_json_parser@@Base+0x16e0>
   1f26c:	mov	r0, r4
   1f270:	add	r1, pc, r1
   1f274:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f278:	mov	r0, r4
   1f27c:	mov	r1, r9
   1f280:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f284:	ldr	r1, [pc, #4020]	; 20240 <__flatcc_fb_gen_c_json_parser@@Base+0x16e4>
   1f288:	mov	r0, r4
   1f28c:	add	r1, pc, r1
   1f290:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f294:	ldr	r1, [pc, #4008]	; 20244 <__flatcc_fb_gen_c_json_parser@@Base+0x16e8>
   1f298:	mov	r0, r4
   1f29c:	add	r1, pc, r1
   1f2a0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f2a4:	ldr	r0, [r4, #220]	; 0xdc
   1f2a8:	cmp	r7, #0
   1f2ac:	add	r0, r0, #1
   1f2b0:	str	r0, [r4, #220]	; 0xdc
   1f2b4:	mov	r0, r4
   1f2b8:	beq	1fbdc <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   1f2bc:	ldr	r1, [pc, #3972]	; 20248 <__flatcc_fb_gen_c_json_parser@@Base+0x16ec>
   1f2c0:	add	r1, pc, r1
   1f2c4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f2c8:	ldr	r1, [pc, #3964]	; 2024c <__flatcc_fb_gen_c_json_parser@@Base+0x16f0>
   1f2cc:	mov	r0, r4
   1f2d0:	add	r1, pc, r1
   1f2d4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f2d8:	mov	r0, #0
   1f2dc:	sub	r3, r7, #1
   1f2e0:	mov	r1, r5
   1f2e4:	mov	r2, #0
   1f2e8:	str	r0, [sp]
   1f2ec:	mov	r0, r4
   1f2f0:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   1f2f4:	b	1fbf8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   1f2f8:	mov	r0, sl
   1f2fc:	mov	r1, #0
   1f300:	mov	r2, #220	; 0xdc
   1f304:	bl	149d0 <memset@plt>
   1f308:	mov	r0, r5
   1f30c:	mov	r1, #0
   1f310:	mov	r2, #220	; 0xdc
   1f314:	bl	149d0 <memset@plt>
   1f318:	ldr	r0, [r8, #12]
   1f31c:	mov	r1, r8
   1f320:	mov	r2, sl
   1f324:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1f328:	ldr	r1, [pc, #3872]	; 20250 <__flatcc_fb_gen_c_json_parser@@Base+0x16f4>
   1f32c:	mov	r0, r4
   1f330:	mov	r2, sl
   1f334:	add	r1, pc, r1
   1f338:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f33c:	ldr	r1, [pc, #3856]	; 20254 <__flatcc_fb_gen_c_json_parser@@Base+0x16f8>
   1f340:	mov	r0, r4
   1f344:	add	r1, pc, r1
   1f348:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f34c:	ldr	r0, [r4, #220]	; 0xdc
   1f350:	mov	r1, r9
   1f354:	add	r0, r0, #1
   1f358:	str	r0, [r4, #220]	; 0xdc
   1f35c:	mov	r0, r4
   1f360:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f364:	ldr	r1, [pc, #3820]	; 20258 <__flatcc_fb_gen_c_json_parser@@Base+0x16fc>
   1f368:	mov	r0, r4
   1f36c:	add	r1, pc, r1
   1f370:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f374:	ldr	r1, [pc, #3808]	; 2025c <__flatcc_fb_gen_c_json_parser@@Base+0x1700>
   1f378:	mov	r0, r4
   1f37c:	add	r1, pc, r1
   1f380:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f384:	ldr	r1, [pc, #4084]	; 20380 <__flatcc_fb_gen_c_json_parser@@Base+0x1824>
   1f388:	mov	r0, r4
   1f38c:	add	r1, pc, r1
   1f390:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f394:	ldr	r0, [r4, #220]	; 0xdc
   1f398:	add	r0, r0, #1
   1f39c:	str	r0, [r4, #220]	; 0xdc
   1f3a0:	mov	r0, r4
   1f3a4:	ldr	r1, [pc, #4056]	; 20384 <__flatcc_fb_gen_c_json_parser@@Base+0x1828>
   1f3a8:	add	r1, pc, r1
   1f3ac:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f3b0:	ldr	r0, [r4, #220]	; 0xdc
   1f3b4:	cmp	r0, #0
   1f3b8:	beq	20a60 <__flatcc_fb_gen_c_json_parser@@Base+0x1f04>
   1f3bc:	sub	r0, r0, #1
   1f3c0:	str	r0, [r4, #220]	; 0xdc
   1f3c4:	ldr	r5, [r8, #20]
   1f3c8:	cmp	r5, #0
   1f3cc:	bne	1f3e0 <__flatcc_fb_gen_c_json_parser@@Base+0x884>
   1f3d0:	b	1f508 <__flatcc_fb_gen_c_json_parser@@Base+0x9ac>
   1f3d4:	ldr	r5, [r5]
   1f3d8:	cmp	r5, #0
   1f3dc:	beq	1f508 <__flatcc_fb_gen_c_json_parser@@Base+0x9ac>
   1f3e0:	ldrh	r0, [r5, #24]
   1f3e4:	cmp	r0, #0
   1f3e8:	beq	1f3d4 <__flatcc_fb_gen_c_json_parser@@Base+0x878>
   1f3ec:	ldr	r1, [r5, #4]
   1f3f0:	cmp	r0, #10
   1f3f4:	ldm	r1, {r6, r7}
   1f3f8:	beq	1f46c <__flatcc_fb_gen_c_json_parser@@Base+0x910>
   1f3fc:	cmp	r0, #14
   1f400:	bne	20820 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc4>
   1f404:	ldr	r1, [r5, #16]
   1f408:	add	r9, sp, #8
   1f40c:	mov	r2, r9
   1f410:	ldr	r0, [r1, #12]
   1f414:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1f418:	ldr	r2, [r5, #48]	; 0x30
   1f41c:	str	r6, [sp]
   1f420:	mov	r0, r4
   1f424:	mov	r3, r7
   1f428:	ldr	r1, [pc, #3928]	; 20388 <__flatcc_fb_gen_c_json_parser@@Base+0x182c>
   1f42c:	add	r1, pc, r1
   1f430:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f434:	ldr	r0, [r4, #220]	; 0xdc
   1f438:	add	r0, r0, #1
   1f43c:	str	r0, [r4, #220]	; 0xdc
   1f440:	ldr	r0, [r5, #16]
   1f444:	ldrh	r0, [r0, #8]
   1f448:	cmp	r0, #1
   1f44c:	beq	1f4c4 <__flatcc_fb_gen_c_json_parser@@Base+0x968>
   1f450:	cmp	r0, #0
   1f454:	bne	20880 <__flatcc_fb_gen_c_json_parser@@Base+0x1d24>
   1f458:	ldr	r1, [pc, #4092]	; 2045c <__flatcc_fb_gen_c_json_parser@@Base+0x1900>
   1f45c:	mov	r0, r4
   1f460:	add	r2, sp, #8
   1f464:	add	r1, pc, r1
   1f468:	b	1f4d4 <__flatcc_fb_gen_c_json_parser@@Base+0x978>
   1f46c:	ldr	r2, [r5, #48]	; 0x30
   1f470:	str	r6, [sp]
   1f474:	mov	r0, r4
   1f478:	mov	r3, r7
   1f47c:	ldr	r1, [pc, #4060]	; 20460 <__flatcc_fb_gen_c_json_parser@@Base+0x1904>
   1f480:	add	r1, pc, r1
   1f484:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f488:	ldr	r0, [r4, #220]	; 0xdc
   1f48c:	add	r0, r0, #1
   1f490:	str	r0, [r4, #220]	; 0xdc
   1f494:	mov	r0, r4
   1f498:	ldr	r1, [pc, #4036]	; 20464 <__flatcc_fb_gen_c_json_parser@@Base+0x1908>
   1f49c:	add	r1, pc, r1
   1f4a0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f4a4:	ldr	r1, [pc, #4028]	; 20468 <__flatcc_fb_gen_c_json_parser@@Base+0x190c>
   1f4a8:	mov	r0, r4
   1f4ac:	add	r1, pc, r1
   1f4b0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f4b4:	ldr	r0, [r4, #220]	; 0xdc
   1f4b8:	cmp	r0, #0
   1f4bc:	bne	1f4fc <__flatcc_fb_gen_c_json_parser@@Base+0x9a0>
   1f4c0:	b	208d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d7c>
   1f4c4:	ldr	r1, [pc, #4000]	; 2046c <__flatcc_fb_gen_c_json_parser@@Base+0x1910>
   1f4c8:	mov	r0, r4
   1f4cc:	mov	r2, r9
   1f4d0:	add	r1, pc, r1
   1f4d4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f4d8:	ldr	r9, [pc, #3984]	; 20470 <__flatcc_fb_gen_c_json_parser@@Base+0x1914>
   1f4dc:	ldr	r1, [pc, #3984]	; 20474 <__flatcc_fb_gen_c_json_parser@@Base+0x1918>
   1f4e0:	mov	r0, r4
   1f4e4:	add	r1, pc, r1
   1f4e8:	add	r9, pc, r9
   1f4ec:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f4f0:	ldr	r0, [r4, #220]	; 0xdc
   1f4f4:	cmp	r0, #0
   1f4f8:	beq	208f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1d9c>
   1f4fc:	sub	r0, r0, #1
   1f500:	str	r0, [r4, #220]	; 0xdc
   1f504:	b	1f3d4 <__flatcc_fb_gen_c_json_parser@@Base+0x878>
   1f508:	ldr	r1, [pc, #3944]	; 20478 <__flatcc_fb_gen_c_json_parser@@Base+0x191c>
   1f50c:	mov	r0, r4
   1f510:	add	r1, pc, r1
   1f514:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f518:	ldr	r0, [r4, #220]	; 0xdc
   1f51c:	add	r0, r0, #1
   1f520:	str	r0, [r4, #220]	; 0xdc
   1f524:	mov	r0, r4
   1f528:	ldr	r1, [pc, #3916]	; 2047c <__flatcc_fb_gen_c_json_parser@@Base+0x1920>
   1f52c:	add	r1, pc, r1
   1f530:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f534:	ldr	r0, [r4, #220]	; 0xdc
   1f538:	add	r0, r0, #1
   1f53c:	str	r0, [r4, #220]	; 0xdc
   1f540:	mov	r0, r4
   1f544:	ldr	r1, [pc, #3892]	; 20480 <__flatcc_fb_gen_c_json_parser@@Base+0x1924>
   1f548:	add	r1, pc, r1
   1f54c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f550:	ldr	r0, [r4, #220]	; 0xdc
   1f554:	cmp	r0, #0
   1f558:	beq	20a84 <__flatcc_fb_gen_c_json_parser@@Base+0x1f28>
   1f55c:	sub	r0, r0, #1
   1f560:	str	r0, [r4, #220]	; 0xdc
   1f564:	mov	r0, r4
   1f568:	ldr	r1, [pc, #3860]	; 20484 <__flatcc_fb_gen_c_json_parser@@Base+0x1928>
   1f56c:	add	r1, pc, r1
   1f570:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f574:	ldr	r0, [r4, #220]	; 0xdc
   1f578:	add	r0, r0, #1
   1f57c:	str	r0, [r4, #220]	; 0xdc
   1f580:	mov	r0, r4
   1f584:	ldr	r1, [pc, #3836]	; 20488 <__flatcc_fb_gen_c_json_parser@@Base+0x192c>
   1f588:	add	r1, pc, r1
   1f58c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f590:	ldr	r0, [r4, #220]	; 0xdc
   1f594:	ldr	r5, [pc, #3824]	; 2048c <__flatcc_fb_gen_c_json_parser@@Base+0x1930>
   1f598:	cmp	r0, #0
   1f59c:	add	r5, pc, r5
   1f5a0:	beq	20aa8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f4c>
   1f5a4:	sub	r0, r0, #1
   1f5a8:	str	r0, [r4, #220]	; 0xdc
   1f5ac:	mov	r0, r4
   1f5b0:	ldr	r6, [pc, #3800]	; 20490 <__flatcc_fb_gen_c_json_parser@@Base+0x1934>
   1f5b4:	add	r6, pc, r6
   1f5b8:	mov	r1, r6
   1f5bc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f5c0:	ldr	r0, [r4, #220]	; 0xdc
   1f5c4:	cmp	r0, #0
   1f5c8:	beq	20ad0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f74>
   1f5cc:	sub	r0, r0, #1
   1f5d0:	mov	r1, r6
   1f5d4:	str	r0, [r4, #220]	; 0xdc
   1f5d8:	mov	r0, r4
   1f5dc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f5e0:	ldr	r1, [pc, #4068]	; 205cc <__flatcc_fb_gen_c_json_parser@@Base+0x1a70>
   1f5e4:	mov	r0, r4
   1f5e8:	add	r1, pc, r1
   1f5ec:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f5f0:	ldr	r1, [pc, #4056]	; 205d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a74>
   1f5f4:	mov	r0, r4
   1f5f8:	add	r1, pc, r1
   1f5fc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f600:	ldr	r0, [r4, #220]	; 0xdc
   1f604:	add	r0, r0, #1
   1f608:	str	r0, [r4, #220]	; 0xdc
   1f60c:	mov	r0, r4
   1f610:	ldr	r1, [pc, #4028]	; 205d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a78>
   1f614:	add	r1, pc, r1
   1f618:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f61c:	ldr	r0, [r4, #220]	; 0xdc
   1f620:	cmp	r0, #0
   1f624:	beq	20af4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f98>
   1f628:	sub	r0, r0, #1
   1f62c:	mov	r1, r6
   1f630:	str	r0, [r4, #220]	; 0xdc
   1f634:	mov	r0, r4
   1f638:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f63c:	ldr	r1, [pc, #3988]	; 205d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a7c>
   1f640:	mov	r0, r4
   1f644:	add	r1, pc, r1
   1f648:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f64c:	ldr	r0, [r4, #220]	; 0xdc
   1f650:	cmp	r0, #0
   1f654:	beq	20b14 <__flatcc_fb_gen_c_json_parser@@Base+0x1fb8>
   1f658:	sub	r0, r0, #1
   1f65c:	mov	r1, r6
   1f660:	str	r0, [r4, #220]	; 0xdc
   1f664:	mov	r0, r4
   1f668:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f66c:	mov	r0, r4
   1f670:	mov	r1, r9
   1f674:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f678:	mov	r0, sl
   1f67c:	mov	r1, #0
   1f680:	mov	r2, #220	; 0xdc
   1f684:	bl	149d0 <memset@plt>
   1f688:	ldr	r0, [r8, #12]
   1f68c:	mov	r1, r8
   1f690:	mov	r2, sl
   1f694:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1f698:	ldr	r1, [pc, #3900]	; 205dc <__flatcc_fb_gen_c_json_parser@@Base+0x1a80>
   1f69c:	mov	r0, r4
   1f6a0:	mov	r2, sl
   1f6a4:	add	r1, pc, r1
   1f6a8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f6ac:	mov	r0, r4
   1f6b0:	mov	r1, r5
   1f6b4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f6b8:	ldr	r0, [r4, #220]	; 0xdc
   1f6bc:	add	r0, r0, #1
   1f6c0:	str	r0, [r4, #220]	; 0xdc
   1f6c4:	mov	r0, r4
   1f6c8:	ldr	r1, [pc, #3856]	; 205e0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a84>
   1f6cc:	add	r1, pc, r1
   1f6d0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f6d4:	ldr	r5, [r8, #20]
   1f6d8:	cmp	r5, #0
   1f6dc:	bne	1f710 <__flatcc_fb_gen_c_json_parser@@Base+0xbb4>
   1f6e0:	b	1f738 <__flatcc_fb_gen_c_json_parser@@Base+0xbdc>
   1f6e4:	ldr	r0, [r5, #4]
   1f6e8:	ldr	r2, [r5, #48]	; 0x30
   1f6ec:	ldm	r0, {r1, r3}
   1f6f0:	mov	r0, r4
   1f6f4:	str	r1, [sp]
   1f6f8:	ldr	r1, [pc, #3812]	; 205e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a88>
   1f6fc:	add	r1, pc, r1
   1f700:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f704:	ldr	r5, [r5]
   1f708:	cmp	r5, #0
   1f70c:	beq	1f738 <__flatcc_fb_gen_c_json_parser@@Base+0xbdc>
   1f710:	ldrh	r0, [r5, #24]
   1f714:	cmp	r0, #0
   1f718:	bne	1f6e4 <__flatcc_fb_gen_c_json_parser@@Base+0xb88>
   1f71c:	ldr	r1, [pc, #3780]	; 205e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1a8c>
   1f720:	mov	r0, r4
   1f724:	add	r1, pc, r1
   1f728:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f72c:	ldr	r5, [r5]
   1f730:	cmp	r5, #0
   1f734:	bne	1f710 <__flatcc_fb_gen_c_json_parser@@Base+0xbb4>
   1f738:	ldr	r1, [pc, #3756]	; 205ec <__flatcc_fb_gen_c_json_parser@@Base+0x1a90>
   1f73c:	mov	r0, r4
   1f740:	add	r1, pc, r1
   1f744:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f748:	ldr	r0, [r4, #220]	; 0xdc
   1f74c:	adds	r1, r0, #1
   1f750:	str	r1, [r4, #220]	; 0xdc
   1f754:	beq	20b34 <__flatcc_fb_gen_c_json_parser@@Base+0x1fd8>
   1f758:	str	r0, [r4, #220]	; 0xdc
   1f75c:	mov	r0, r4
   1f760:	ldr	r6, [pc, #4072]	; 20750 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf4>
   1f764:	add	r6, pc, r6
   1f768:	mov	r1, r6
   1f76c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f770:	ldr	r0, [r4, #220]	; 0xdc
   1f774:	add	r5, sp, #8
   1f778:	cmp	r0, #0
   1f77c:	beq	20b54 <__flatcc_fb_gen_c_json_parser@@Base+0x1ff8>
   1f780:	sub	r0, r0, #1
   1f784:	mov	r1, r6
   1f788:	str	r0, [r4, #220]	; 0xdc
   1f78c:	mov	r0, r4
   1f790:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f794:	mov	r0, r4
   1f798:	mov	r1, r9
   1f79c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f7a0:	mov	r0, r4
   1f7a4:	mov	r1, r8
   1f7a8:	bl	21310 <__flatcc_fb_gen_c_json_parser@@Base+0x27b4>
   1f7ac:	b	1fe70 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   1f7b0:	mov	r9, #0
   1f7b4:	ldr	r1, [pc, #3992]	; 20754 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf8>
   1f7b8:	mov	r0, r4
   1f7bc:	add	r5, sp, #8
   1f7c0:	add	r1, pc, r1
   1f7c4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f7c8:	ldr	r1, [pc, #3976]	; 20758 <__flatcc_fb_gen_c_json_parser@@Base+0x1bfc>
   1f7cc:	mov	r0, r4
   1f7d0:	add	r1, pc, r1
   1f7d4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f7d8:	ldrd	r2, [r8, #96]	; 0x60
   1f7dc:	ldr	r1, [pc, #3960]	; 2075c <__flatcc_fb_gen_c_json_parser@@Base+0x1c00>
   1f7e0:	mov	r0, r4
   1f7e4:	add	r1, pc, r1
   1f7e8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f7ec:	cmp	r9, #0
   1f7f0:	beq	1f80c <__flatcc_fb_gen_c_json_parser@@Base+0xcb0>
   1f7f4:	ldr	r1, [pc, #3940]	; 20760 <__flatcc_fb_gen_c_json_parser@@Base+0x1c04>
   1f7f8:	asr	r3, r9, #31
   1f7fc:	mov	r0, r4
   1f800:	mov	r2, r9
   1f804:	add	r1, pc, r1
   1f808:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f80c:	ldr	r1, [pc, #4092]	; 20810 <__flatcc_fb_gen_c_json_parser@@Base+0x1cb4>
   1f810:	mov	r0, r4
   1f814:	add	r1, pc, r1
   1f818:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f81c:	ldr	r1, [pc, #4080]	; 20814 <__flatcc_fb_gen_c_json_parser@@Base+0x1cb8>
   1f820:	mov	r0, r4
   1f824:	add	r1, pc, r1
   1f828:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f82c:	ldr	r0, [r4, #220]	; 0xdc
   1f830:	add	r0, r0, #1
   1f834:	str	r0, [r4, #220]	; 0xdc
   1f838:	mov	r0, r4
   1f83c:	ldr	r1, [pc, #4052]	; 20818 <__flatcc_fb_gen_c_json_parser@@Base+0x1cbc>
   1f840:	add	r1, pc, r1
   1f844:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f848:	mov	r0, r4
   1f84c:	cmp	r7, #1
   1f850:	blt	1f880 <__flatcc_fb_gen_c_json_parser@@Base+0xd24>
   1f854:	ldr	r1, [pc, #4032]	; 2081c <__flatcc_fb_gen_c_json_parser@@Base+0x1cc0>
   1f858:	add	r1, pc, r1
   1f85c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f860:	mov	r0, #0
   1f864:	sub	r3, r7, #1
   1f868:	mov	r1, r5
   1f86c:	mov	r2, #0
   1f870:	str	r0, [sp]
   1f874:	mov	r0, r4
   1f878:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   1f87c:	b	1f89c <__flatcc_fb_gen_c_json_parser@@Base+0xd40>
   1f880:	ldr	r1, [pc, #4072]	; 20870 <__flatcc_fb_gen_c_json_parser@@Base+0x1d14>
   1f884:	add	r1, pc, r1
   1f888:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f88c:	ldr	r1, [pc, #4064]	; 20874 <__flatcc_fb_gen_c_json_parser@@Base+0x1d18>
   1f890:	mov	r0, r4
   1f894:	add	r1, pc, r1
   1f898:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f89c:	ldr	r9, [pc, #4052]	; 20878 <__flatcc_fb_gen_c_json_parser@@Base+0x1d1c>
   1f8a0:	ldr	r1, [pc, #4052]	; 2087c <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
   1f8a4:	mov	r0, r4
   1f8a8:	add	r1, pc, r1
   1f8ac:	add	r9, pc, r9
   1f8b0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f8b4:	ldr	r0, [r4, #220]	; 0xdc
   1f8b8:	cmp	r0, #0
   1f8bc:	beq	20b74 <__flatcc_fb_gen_c_json_parser@@Base+0x2018>
   1f8c0:	sub	r0, r0, #1
   1f8c4:	str	r0, [r4, #220]	; 0xdc
   1f8c8:	mov	r0, r4
   1f8cc:	ldr	r1, [pc, #4092]	; 208d0 <__flatcc_fb_gen_c_json_parser@@Base+0x1d74>
   1f8d0:	add	r1, pc, r1
   1f8d4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f8d8:	ldr	r1, [pc, #4084]	; 208d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1d78>
   1f8dc:	mov	r0, r4
   1f8e0:	add	r1, pc, r1
   1f8e4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f8e8:	cmp	r7, #1
   1f8ec:	blt	1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xec0>
   1f8f0:	mov	r5, #0
   1f8f4:	mov	r0, #1
   1f8f8:	ldr	r1, [sp, #8]
   1f8fc:	add	r1, r1, r5, lsl #4
   1f900:	ldr	r1, [r1, #8]
   1f904:	ldrh	r2, [r1, #72]	; 0x48
   1f908:	tst	r2, #4
   1f90c:	bne	1f990 <__flatcc_fb_gen_c_json_parser@@Base+0xe34>
   1f910:	ldrh	r3, [r1, #24]
   1f914:	movw	r6, #65534	; 0xfffe
   1f918:	and	r6, r3, r6
   1f91c:	mov	r3, #0
   1f920:	cmp	r6, #14
   1f924:	bne	1f93c <__flatcc_fb_gen_c_json_parser@@Base+0xde0>
   1f928:	ldr	r3, [r1, #16]
   1f92c:	ldrh	r3, [r3, #8]
   1f930:	sub	r3, r3, #4
   1f934:	clz	r3, r3
   1f938:	lsr	r3, r3, #5
   1f93c:	tst	r2, #256	; 0x100
   1f940:	beq	1f990 <__flatcc_fb_gen_c_json_parser@@Base+0xe34>
   1f944:	ldr	r2, [r1, #96]	; 0x60
   1f948:	ldr	r1, [r1, #100]	; 0x64
   1f94c:	subs	r2, r2, r3
   1f950:	sbc	r3, r1, #0
   1f954:	cmp	r0, #0
   1f958:	bne	1f970 <__flatcc_fb_gen_c_json_parser@@Base+0xe14>
   1f95c:	ldr	r1, [pc, #4084]	; 20958 <__flatcc_fb_gen_c_json_parser@@Base+0x1dfc>
   1f960:	mov	r0, r4
   1f964:	add	r1, pc, r1
   1f968:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f96c:	b	1f98c <__flatcc_fb_gen_c_json_parser@@Base+0xe30>
   1f970:	ldr	r1, [pc, #4068]	; 2095c <__flatcc_fb_gen_c_json_parser@@Base+0x1e00>
   1f974:	mov	r0, r4
   1f978:	add	r1, pc, r1
   1f97c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f980:	ldr	r0, [r4, #220]	; 0xdc
   1f984:	add	r0, r0, #1
   1f988:	str	r0, [r4, #220]	; 0xdc
   1f98c:	mov	r0, #0
   1f990:	add	r5, r5, #1
   1f994:	cmp	r7, r5
   1f998:	bne	1f8f8 <__flatcc_fb_gen_c_json_parser@@Base+0xd9c>
   1f99c:	cmp	r0, #0
   1f9a0:	add	r5, sp, #8
   1f9a4:	bne	1fa1c <__flatcc_fb_gen_c_json_parser@@Base+0xec0>
   1f9a8:	ldr	r0, [r4, #220]	; 0xdc
   1f9ac:	cmp	r0, #0
   1f9b0:	beq	20cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2158>
   1f9b4:	sub	r0, r0, #1
   1f9b8:	str	r0, [r4, #220]	; 0xdc
   1f9bc:	mov	r0, r4
   1f9c0:	ldr	r1, [pc, #4024]	; 20980 <__flatcc_fb_gen_c_json_parser@@Base+0x1e24>
   1f9c4:	add	r1, pc, r1
   1f9c8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f9cc:	ldr	r0, [r4, #220]	; 0xdc
   1f9d0:	add	r0, r0, #1
   1f9d4:	str	r0, [r4, #220]	; 0xdc
   1f9d8:	mov	r0, r4
   1f9dc:	ldr	r1, [pc, #4080]	; 209d4 <__flatcc_fb_gen_c_json_parser@@Base+0x1e78>
   1f9e0:	add	r1, pc, r1
   1f9e4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f9e8:	ldr	r1, [pc, #4072]	; 209d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1e7c>
   1f9ec:	mov	r0, r4
   1f9f0:	add	r1, pc, r1
   1f9f4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1f9f8:	ldr	r0, [r4, #220]	; 0xdc
   1f9fc:	cmp	r0, #0
   1fa00:	beq	20cd8 <__flatcc_fb_gen_c_json_parser@@Base+0x217c>
   1fa04:	sub	r0, r0, #1
   1fa08:	str	r0, [r4, #220]	; 0xdc
   1fa0c:	mov	r0, r4
   1fa10:	ldr	r1, [pc, #4068]	; 209fc <__flatcc_fb_gen_c_json_parser@@Base+0x1ea0>
   1fa14:	add	r1, pc, r1
   1fa18:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fa1c:	ldr	r0, [sp, #28]
   1fa20:	cmp	r0, #0
   1fa24:	beq	1fa38 <__flatcc_fb_gen_c_json_parser@@Base+0xedc>
   1fa28:	ldr	r1, [pc, #4048]	; 20a00 <__flatcc_fb_gen_c_json_parser@@Base+0x1ea4>
   1fa2c:	mov	r0, r4
   1fa30:	add	r1, pc, r1
   1fa34:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fa38:	ldr	r1, [pc, #4036]	; 20a04 <__flatcc_fb_gen_c_json_parser@@Base+0x1ea8>
   1fa3c:	mov	r0, r4
   1fa40:	add	r1, pc, r1
   1fa44:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fa48:	ldr	r1, [pc, #4024]	; 20a08 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   1fa4c:	mov	r0, r4
   1fa50:	add	r1, pc, r1
   1fa54:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fa58:	ldr	r0, [r4, #220]	; 0xdc
   1fa5c:	mov	r1, #0
   1fa60:	str	r1, [r4, #220]	; 0xdc
   1fa64:	str	r0, [r4, #228]	; 0xe4
   1fa68:	mov	r0, r4
   1fa6c:	ldr	r1, [pc, #4072]	; 20a5c <__flatcc_fb_gen_c_json_parser@@Base+0x1f00>
   1fa70:	add	r1, pc, r1
   1fa74:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fa78:	ldr	r0, [r4, #228]	; 0xe4
   1fa7c:	str	r0, [r4, #220]	; 0xdc
   1fa80:	mov	r0, r4
   1fa84:	ldr	r1, [pc, #4084]	; 20a80 <__flatcc_fb_gen_c_json_parser@@Base+0x1f24>
   1fa88:	add	r1, pc, r1
   1fa8c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fa90:	ldr	r0, [r4, #220]	; 0xdc
   1fa94:	cmp	r0, #0
   1fa98:	beq	20b94 <__flatcc_fb_gen_c_json_parser@@Base+0x2038>
   1fa9c:	sub	r0, r0, #1
   1faa0:	str	r0, [r4, #220]	; 0xdc
   1faa4:	mov	r0, r4
   1faa8:	ldr	r6, [pc, #4084]	; 20aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x1f48>
   1faac:	add	r6, pc, r6
   1fab0:	mov	r1, r6
   1fab4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fab8:	mov	r0, r4
   1fabc:	mov	r1, r9
   1fac0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fac4:	ldr	r1, [pc, #4092]	; 20ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x1f6c>
   1fac8:	mov	r0, r4
   1facc:	mov	r2, sl
   1fad0:	add	r1, pc, r1
   1fad4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fad8:	ldr	r1, [pc, #4076]	; 20acc <__flatcc_fb_gen_c_json_parser@@Base+0x1f70>
   1fadc:	mov	r0, r4
   1fae0:	add	r1, pc, r1
   1fae4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fae8:	ldr	r0, [r4, #220]	; 0xdc
   1faec:	mov	r2, sl
   1faf0:	add	r0, r0, #1
   1faf4:	str	r0, [r4, #220]	; 0xdc
   1faf8:	mov	r0, r4
   1fafc:	ldr	r1, [pc, #4076]	; 20af0 <__flatcc_fb_gen_c_json_parser@@Base+0x1f94>
   1fb00:	add	r1, pc, r1
   1fb04:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fb08:	ldr	r0, [r4, #220]	; 0xdc
   1fb0c:	cmp	r0, #0
   1fb10:	beq	20bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2058>
   1fb14:	sub	r0, r0, #1
   1fb18:	mov	r1, r6
   1fb1c:	str	r0, [r4, #220]	; 0xdc
   1fb20:	mov	r0, r4
   1fb24:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fb28:	mov	r0, r4
   1fb2c:	mov	r1, r9
   1fb30:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fb34:	ldr	r0, [sp, #8]
   1fb38:	cmp	r0, #0
   1fb3c:	beq	1fe70 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   1fb40:	bl	148f8 <free@plt>
   1fb44:	b	1fe70 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   1fb48:			; <UNDEFINED> instruction: 0x000342ba
   1fb4c:			; <UNDEFINED> instruction: 0x000342bb
   1fb50:	andeq	r1, r2, r2, asr ip
   1fb54:			; <UNDEFINED> instruction: 0x000342b0
   1fb58:	andeq	r4, r3, r3, ror #5
   1fb5c:	andeq	r1, r2, r7, ror r9
   1fb60:	andeq	r4, r3, sp, ror #4
   1fb64:	muleq	r2, r4, fp
   1fb68:	ldrdeq	r1, [r2], -r2
   1fb6c:	andeq	r4, r3, lr, ror r2
   1fb70:	andeq	r4, r3, r1, ror r2
   1fb74:			; <UNDEFINED> instruction: 0x000342b7
   1fb78:	andeq	r4, r3, sl, lsr #5
   1fb7c:	ldrdeq	r4, [r3], -lr
   1fb80:	andeq	r4, r3, r4, lsl #6
   1fb84:	andeq	r4, r3, ip, lsl r3
   1fb88:	andeq	r4, r3, r4, asr r3
   1fb8c:	andeq	r5, r3, ip, asr r1
   1fb90:	andeq	r4, r3, sl, ror #6
   1fb94:	muleq	r3, r7, r3
   1fb98:			; <UNDEFINED> instruction: 0x00021ab2
   1fb9c:	ldrdeq	r4, [r3], -r0
   1fba0:	andeq	r4, r3, pc, lsr #10
   1fba4:	andeq	r4, r3, r5, lsl #8
   1fba8:	muleq	r3, r0, r4
   1fbac:	andeq	r4, r3, r6, lsl r6
   1fbb0:	muleq	r3, r6, r4
   1fbb4:	andeq	r4, r3, r6, lsl #10
   1fbb8:			; <UNDEFINED> instruction: 0x000023b0
   1fbbc:	andeq	r4, r3, r1, asr r5
   1fbc0:	andeq	r4, r3, fp, ror r3
   1fbc4:	muleq	r2, lr, r8
   1fbc8:	andeq	r1, r2, r6, ror r8
   1fbcc:	ldrdeq	r4, [r0], -r8
   1fbd0:	andeq	r5, r0, r8, lsl r2
   1fbd4:	andeq	r5, r3, sp, lsr #26
   1fbd8:	andeq	r7, r3, r7, ror r3
   1fbdc:	ldr	r1, [pc, #4080]	; 20bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2078>
   1fbe0:	add	r1, pc, r1
   1fbe4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fbe8:	ldr	r1, [pc, #4072]	; 20bd8 <__flatcc_fb_gen_c_json_parser@@Base+0x207c>
   1fbec:	mov	r0, r4
   1fbf0:	add	r1, pc, r1
   1fbf4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fbf8:	ldr	r1, [pc, #4092]	; 20bfc <__flatcc_fb_gen_c_json_parser@@Base+0x20a0>
   1fbfc:	mov	r0, r4
   1fc00:	add	r1, pc, r1
   1fc04:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fc08:	ldr	r0, [r4, #220]	; 0xdc
   1fc0c:	cmp	r0, #0
   1fc10:	beq	20bdc <__flatcc_fb_gen_c_json_parser@@Base+0x2080>
   1fc14:	sub	r0, r0, #1
   1fc18:	str	r0, [r4, #220]	; 0xdc
   1fc1c:	mov	r0, r4
   1fc20:	ldr	r1, [pc, #4088]	; 20c20 <__flatcc_fb_gen_c_json_parser@@Base+0x20c4>
   1fc24:	add	r1, pc, r1
   1fc28:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fc2c:	ldr	r1, [pc, #4080]	; 20c24 <__flatcc_fb_gen_c_json_parser@@Base+0x20c8>
   1fc30:	mov	r0, r4
   1fc34:	add	r1, pc, r1
   1fc38:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fc3c:	cmp	r7, #1
   1fc40:	blt	1fc7c <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   1fc44:	ldr	r0, [r4, #220]	; 0xdc
   1fc48:	mov	r1, #0
   1fc4c:	str	r1, [r4, #220]	; 0xdc
   1fc50:	str	r0, [r4, #228]	; 0xe4
   1fc54:	mov	r0, r4
   1fc58:	ldr	r1, [pc, #4072]	; 20c48 <__flatcc_fb_gen_c_json_parser@@Base+0x20ec>
   1fc5c:	add	r1, pc, r1
   1fc60:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fc64:	ldr	r0, [r4, #228]	; 0xe4
   1fc68:	str	r0, [r4, #220]	; 0xdc
   1fc6c:	mov	r0, r4
   1fc70:	ldr	r1, [pc, #4084]	; 20c6c <__flatcc_fb_gen_c_json_parser@@Base+0x2110>
   1fc74:	add	r1, pc, r1
   1fc78:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fc7c:	ldr	r0, [r4, #220]	; 0xdc
   1fc80:	cmp	r0, #0
   1fc84:	beq	20c00 <__flatcc_fb_gen_c_json_parser@@Base+0x20a4>
   1fc88:	sub	r0, r0, #1
   1fc8c:	str	r0, [r4, #220]	; 0xdc
   1fc90:	mov	r0, r4
   1fc94:	ldr	r1, [pc, #4084]	; 20c90 <__flatcc_fb_gen_c_json_parser@@Base+0x2134>
   1fc98:	add	r1, pc, r1
   1fc9c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fca0:	mov	r0, r4
   1fca4:	mov	r1, r9
   1fca8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fcac:	ldr	r0, [sp, #8]
   1fcb0:	cmp	r0, #0
   1fcb4:	beq	1fcbc <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   1fcb8:	bl	148f8 <free@plt>
   1fcbc:	ldrh	r0, [r8, #8]
   1fcc0:	cmp	r0, #1
   1fcc4:	bne	20c28 <__flatcc_fb_gen_c_json_parser@@Base+0x20cc>
   1fcc8:	mov	r0, sl
   1fccc:	mov	r1, #0
   1fcd0:	mov	r2, #220	; 0xdc
   1fcd4:	bl	149d0 <memset@plt>
   1fcd8:	ldr	r0, [r8, #12]
   1fcdc:	mov	r1, r8
   1fce0:	mov	r2, sl
   1fce4:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   1fce8:	ldr	r1, [pc, #4068]	; 20cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2178>
   1fcec:	mov	r0, r4
   1fcf0:	mov	r2, sl
   1fcf4:	add	r1, pc, r1
   1fcf8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fcfc:	ldr	r6, [pc, #4084]	; 20cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   1fd00:	mov	r0, r4
   1fd04:	add	r6, pc, r6
   1fd08:	mov	r1, r6
   1fd0c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd10:	ldr	r0, [r4, #220]	; 0xdc
   1fd14:	add	r0, r0, #1
   1fd18:	str	r0, [r4, #220]	; 0xdc
   1fd1c:	mov	r0, r4
   1fd20:	ldr	r1, [pc, #4084]	; 20d1c <__flatcc_fb_gen_c_json_parser@@Base+0x21c0>
   1fd24:	add	r1, pc, r1
   1fd28:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd2c:	mov	r0, r4
   1fd30:	mov	r1, r9
   1fd34:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd38:	ldr	r1, [pc, #4064]	; 20d20 <__flatcc_fb_gen_c_json_parser@@Base+0x21c4>
   1fd3c:	mov	r0, r4
   1fd40:	add	r1, pc, r1
   1fd44:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd48:	ldrh	r0, [r8, #104]	; 0x68
   1fd4c:	ldrd	r2, [r8, #112]	; 0x70
   1fd50:	str	r0, [sp]
   1fd54:	mov	r0, r4
   1fd58:	ldr	r1, [pc, #4068]	; 20d44 <__flatcc_fb_gen_c_json_parser@@Base+0x21e8>
   1fd5c:	add	r1, pc, r1
   1fd60:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd64:	ldr	r1, [pc, #4092]	; 20d68 <__flatcc_fb_gen_c_json_parser@@Base+0x220c>
   1fd68:	mov	r0, r4
   1fd6c:	mov	r2, sl
   1fd70:	add	r1, pc, r1
   1fd74:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd78:	ldr	r1, [pc, #4076]	; 20d6c <__flatcc_fb_gen_c_json_parser@@Base+0x2210>
   1fd7c:	mov	r0, r4
   1fd80:	add	r1, pc, r1
   1fd84:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd88:	ldr	r1, [pc, #4064]	; 20d70 <__flatcc_fb_gen_c_json_parser@@Base+0x2214>
   1fd8c:	mov	r0, r4
   1fd90:	add	r1, pc, r1
   1fd94:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fd98:	ldr	r0, [r4, #220]	; 0xdc
   1fd9c:	mov	r1, #0
   1fda0:	str	r1, [r4, #220]	; 0xdc
   1fda4:	str	r0, [r4, #228]	; 0xe4
   1fda8:	mov	r0, r4
   1fdac:	ldr	r1, [pc, #4064]	; 20d94 <__flatcc_fb_gen_c_json_parser@@Base+0x2238>
   1fdb0:	add	r1, pc, r1
   1fdb4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fdb8:	ldr	r0, [r4, #228]	; 0xe4
   1fdbc:	str	r0, [r4, #220]	; 0xdc
   1fdc0:	mov	r0, r4
   1fdc4:	ldr	r1, [pc, #4076]	; 20db8 <__flatcc_fb_gen_c_json_parser@@Base+0x225c>
   1fdc8:	add	r1, pc, r1
   1fdcc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fdd0:	ldr	r0, [r4, #220]	; 0xdc
   1fdd4:	cmp	r0, #0
   1fdd8:	beq	20c4c <__flatcc_fb_gen_c_json_parser@@Base+0x20f0>
   1fddc:	sub	r0, r0, #1
   1fde0:	str	r0, [r4, #220]	; 0xdc
   1fde4:	mov	r0, r4
   1fde8:	ldr	r7, [pc, #4076]	; 20ddc <__flatcc_fb_gen_c_json_parser@@Base+0x2280>
   1fdec:	add	r7, pc, r7
   1fdf0:	mov	r1, r7
   1fdf4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fdf8:	mov	r0, r4
   1fdfc:	mov	r1, r9
   1fe00:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fe04:	ldr	r1, [pc, #4084]	; 20e00 <__flatcc_fb_gen_c_json_parser@@Base+0x22a4>
   1fe08:	mov	r0, r4
   1fe0c:	mov	r2, sl
   1fe10:	add	r1, pc, r1
   1fe14:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fe18:	mov	r0, r4
   1fe1c:	mov	r1, r6
   1fe20:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fe24:	ldr	r0, [r4, #220]	; 0xdc
   1fe28:	mov	r2, sl
   1fe2c:	add	r0, r0, #1
   1fe30:	str	r0, [r4, #220]	; 0xdc
   1fe34:	mov	r0, r4
   1fe38:	ldr	r1, [pc, #4036]	; 20e04 <__flatcc_fb_gen_c_json_parser@@Base+0x22a8>
   1fe3c:	add	r1, pc, r1
   1fe40:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fe44:	ldr	r0, [r4, #220]	; 0xdc
   1fe48:	cmp	r0, #0
   1fe4c:	beq	20c70 <__flatcc_fb_gen_c_json_parser@@Base+0x2114>
   1fe50:	sub	r0, r0, #1
   1fe54:	mov	r1, r7
   1fe58:	str	r0, [r4, #220]	; 0xdc
   1fe5c:	mov	r0, r4
   1fe60:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fe64:	mov	r0, r4
   1fe68:	mov	r1, r9
   1fe6c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   1fe70:	ldr	r8, [r8]
   1fe74:	cmp	r8, #0
   1fe78:	bne	1ef8c <__flatcc_fb_gen_c_json_parser@@Base+0x430>
   1fe7c:	ldr	r0, [r4, #208]	; 0xd0
   1fe80:	ldr	r0, [r0, #60]	; 0x3c
   1fe84:	ldr	r1, [pc, #4084]	; 20e80 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
   1fe88:	mov	r2, r4
   1fe8c:	add	r1, pc, r1
   1fe90:	bl	29ca0 <fb_scope_table_visit@@Base>
   1fe94:	vmov.i32	q8, #0	; 0x00000000
   1fe98:	mov	r0, #12
   1fe9c:	add	r1, sp, #8
   1fea0:	add	r2, sp, #232	; 0xe8
   1fea4:	vst1.64	{d16-d17}, [r1], r0
   1fea8:	vst1.32	{d16-d17}, [r1]
   1feac:	add	r1, r2, #20
   1feb0:	ldr	r0, [r4, #208]	; 0xd0
   1feb4:	ldr	r8, [r0, #60]	; 0x3c
   1feb8:	vst1.32	{d16-d17}, [r1]
   1febc:	orr	r1, r2, #4
   1fec0:	vst1.32	{d16-d17}, [r1]
   1fec4:	mov	r1, #0
   1fec8:	str	r1, [sp, #268]	; 0x10c
   1fecc:	mov	r1, #1
   1fed0:	str	r1, [sp, #232]	; 0xe8
   1fed4:	str	r0, [sp, #272]	; 0x110
   1fed8:	ldr	r1, [pc, #4088]	; 20ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x237c>
   1fedc:	mov	r0, r8
   1fee0:	add	r1, pc, r1
   1fee4:	bl	29ca0 <fb_scope_table_visit@@Base>
   1fee8:	ldr	r6, [sp, #236]	; 0xec
   1feec:	mov	r1, #8
   1fef0:	mov	r0, r6
   1fef4:	bl	148c8 <calloc@plt>
   1fef8:	str	r0, [sp, #248]	; 0xf8
   1fefc:	mov	r7, r0
   1ff00:	mov	r1, #8
   1ff04:	ldr	sl, [sp, #240]	; 0xf0
   1ff08:	mov	r0, sl
   1ff0c:	bl	148c8 <calloc@plt>
   1ff10:	str	r0, [sp, #252]	; 0xfc
   1ff14:	mov	r5, r0
   1ff18:	ldr	r9, [sp, #244]	; 0xf4
   1ff1c:	mov	r0, r9
   1ff20:	bl	14964 <malloc@plt>
   1ff24:	cmp	r6, #1
   1ff28:	str	r0, [sp, #256]	; 0x100
   1ff2c:	str	r7, [sp, #260]	; 0x104
   1ff30:	str	r5, [sp, #264]	; 0x108
   1ff34:	str	r0, [sp, #268]	; 0x10c
   1ff38:	blt	1ff44 <__flatcc_fb_gen_c_json_parser@@Base+0x13e8>
   1ff3c:	cmp	r7, #0
   1ff40:	beq	1ff78 <__flatcc_fb_gen_c_json_parser@@Base+0x141c>
   1ff44:	cmp	sl, #1
   1ff48:	blt	1ff54 <__flatcc_fb_gen_c_json_parser@@Base+0x13f8>
   1ff4c:	cmp	r5, #0
   1ff50:	beq	1ff64 <__flatcc_fb_gen_c_json_parser@@Base+0x1408>
   1ff54:	cmp	r9, #0
   1ff58:	beq	20260 <__flatcc_fb_gen_c_json_parser@@Base+0x1704>
   1ff5c:	cmp	r0, #0
   1ff60:	bne	20260 <__flatcc_fb_gen_c_json_parser@@Base+0x1704>
   1ff64:	cmp	r7, #0
   1ff68:	beq	1ff78 <__flatcc_fb_gen_c_json_parser@@Base+0x141c>
   1ff6c:	mov	r0, r7
   1ff70:	bl	148f8 <free@plt>
   1ff74:	ldr	r5, [sp, #252]	; 0xfc
   1ff78:	cmp	r5, #0
   1ff7c:	beq	1ff88 <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   1ff80:	mov	r0, r5
   1ff84:	bl	148f8 <free@plt>
   1ff88:	ldr	r0, [sp, #256]	; 0x100
   1ff8c:	cmp	r0, #0
   1ff90:	beq	1ff98 <__flatcc_fb_gen_c_json_parser@@Base+0x143c>
   1ff94:	bl	148f8 <free@plt>
   1ff98:	add	r1, sp, #232	; 0xe8
   1ff9c:	vmov.i32	q8, #0	; 0x00000000
   1ffa0:	mov	r0, #28
   1ffa4:	mov	r2, r1
   1ffa8:	add	r1, r1, #16
   1ffac:	vst1.64	{d16-d17}, [r2], r0
   1ffb0:	vst1.32	{d16-d17}, [r2]
   1ffb4:	vst1.64	{d16-d17}, [r1]
   1ffb8:	ldr	r0, [r4, #208]	; 0xd0
   1ffbc:	ldr	r5, [r0, #52]	; 0x34
   1ffc0:	cmp	r5, #0
   1ffc4:	beq	2056c <__flatcc_fb_gen_c_json_parser@@Base+0x1a10>
   1ffc8:	ldrh	r0, [r5, #8]
   1ffcc:	cmp	r0, #1
   1ffd0:	beq	2011c <__flatcc_fb_gen_c_json_parser@@Base+0x15c0>
   1ffd4:	cmp	r0, #0
   1ffd8:	bne	2056c <__flatcc_fb_gen_c_json_parser@@Base+0x1a10>
   1ffdc:	add	r6, sp, #232	; 0xe8
   1ffe0:	mov	r1, #0
   1ffe4:	mov	r2, #220	; 0xdc
   1ffe8:	mov	r0, r6
   1ffec:	bl	149d0 <memset@plt>
   1fff0:	ldr	r0, [r5, #12]
   1fff4:	mov	r1, r5
   1fff8:	mov	r2, r6
   1fffc:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   20000:	ldr	r0, [r4, #208]	; 0xd0
   20004:	ldr	r2, [r0, #160]	; 0xa0
   20008:	ldr	r1, [pc, #3876]	; 20f34 <__flatcc_fb_gen_c_json_parser@@Base+0x23d8>
   2000c:	mov	r0, r4
   20010:	add	r1, pc, r1
   20014:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20018:	ldr	r0, [r4, #220]	; 0xdc
   2001c:	add	r0, r0, #2
   20020:	str	r0, [r4, #220]	; 0xdc
   20024:	mov	r0, r4
   20028:	ldr	r1, [pc, #3848]	; 20f38 <__flatcc_fb_gen_c_json_parser@@Base+0x23dc>
   2002c:	add	r1, pc, r1
   20030:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20034:	ldr	r0, [r4, #220]	; 0xdc
   20038:	cmp	r0, #0
   2003c:	beq	20d24 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
   20040:	subs	r1, r0, #1
   20044:	str	r1, [r4, #220]	; 0xdc
   20048:	beq	20d24 <__flatcc_fb_gen_c_json_parser@@Base+0x21c8>
   2004c:	sub	r0, r0, #2
   20050:	str	r0, [r4, #220]	; 0xdc
   20054:	mov	r0, r4
   20058:	ldr	r1, [pc, #3804]	; 20f3c <__flatcc_fb_gen_c_json_parser@@Base+0x23e0>
   2005c:	add	r1, pc, r1
   20060:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20064:	ldr	r0, [r4, #220]	; 0xdc
   20068:	add	r0, r0, #1
   2006c:	str	r0, [r4, #220]	; 0xdc
   20070:	mov	r0, r4
   20074:	ldr	r1, [pc, #3780]	; 20f40 <__flatcc_fb_gen_c_json_parser@@Base+0x23e4>
   20078:	add	r1, pc, r1
   2007c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20080:	ldr	r1, [pc, #3772]	; 20f44 <__flatcc_fb_gen_c_json_parser@@Base+0x23e8>
   20084:	mov	r0, r4
   20088:	add	r1, pc, r1
   2008c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20090:	ldr	r1, [pc, #3760]	; 20f48 <__flatcc_fb_gen_c_json_parser@@Base+0x23ec>
   20094:	mov	r0, r4
   20098:	add	r1, pc, r1
   2009c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   200a0:	ldr	r1, [pc, #3748]	; 20f4c <__flatcc_fb_gen_c_json_parser@@Base+0x23f0>
   200a4:	mov	r0, r4
   200a8:	add	r1, pc, r1
   200ac:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   200b0:	ldr	r1, [pc, #3736]	; 20f50 <__flatcc_fb_gen_c_json_parser@@Base+0x23f4>
   200b4:	mov	r0, r4
   200b8:	add	r1, pc, r1
   200bc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   200c0:	ldr	r0, [r4, #208]	; 0xd0
   200c4:	ldrh	r1, [r0, #16]
   200c8:	cmp	r1, #2
   200cc:	bne	2038c <__flatcc_fb_gen_c_json_parser@@Base+0x1830>
   200d0:	ldrd	r6, [r0, #8]
   200d4:	ldr	r1, [pc, #3704]	; 20f54 <__flatcc_fb_gen_c_json_parser@@Base+0x23f8>
   200d8:	mov	r0, r4
   200dc:	add	r1, pc, r1
   200e0:	mov	r2, r7
   200e4:	mov	r3, r6
   200e8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   200ec:	b	2039c <__flatcc_fb_gen_c_json_parser@@Base+0x1840>
   200f0:	andeq	r4, r3, r8, lsl #29
   200f4:	muleq	r3, r4, lr
   200f8:	andeq	r5, r3, fp, asr sp
   200fc:	andeq	r4, r3, r3, lsl #19
   20100:	andeq	r4, r3, r5, lsl #19
   20104:	andeq	r5, r3, r0, asr #26
   20108:	andeq	r4, r0, ip, lsl r0
   2010c:	andeq	r5, r0, ip, asr r0
   20110:	andeq	r4, r3, r5, lsl #26
   20114:	andeq	r7, r3, r7, asr #4
   20118:	andeq	r4, r3, r8, asr sp
   2011c:	add	r6, sp, #232	; 0xe8
   20120:	mov	r1, #0
   20124:	mov	r2, #220	; 0xdc
   20128:	mov	r0, r6
   2012c:	bl	149d0 <memset@plt>
   20130:	ldr	r0, [r5, #12]
   20134:	mov	r1, r5
   20138:	mov	r2, r6
   2013c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   20140:	ldr	r0, [r4, #208]	; 0xd0
   20144:	ldr	r2, [r0, #160]	; 0xa0
   20148:	ldr	r1, [pc, #3636]	; 20f84 <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   2014c:	mov	r0, r4
   20150:	add	r1, pc, r1
   20154:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20158:	ldr	r0, [r4, #220]	; 0xdc
   2015c:	add	r0, r0, #2
   20160:	str	r0, [r4, #220]	; 0xdc
   20164:	mov	r0, r4
   20168:	ldr	r1, [pc, #3608]	; 20f88 <__flatcc_fb_gen_c_json_parser@@Base+0x242c>
   2016c:	add	r1, pc, r1
   20170:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20174:	ldr	r0, [r4, #220]	; 0xdc
   20178:	cmp	r0, #0
   2017c:	beq	20d48 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   20180:	subs	r1, r0, #1
   20184:	str	r1, [r4, #220]	; 0xdc
   20188:	beq	20d48 <__flatcc_fb_gen_c_json_parser@@Base+0x21ec>
   2018c:	sub	r0, r0, #2
   20190:	str	r0, [r4, #220]	; 0xdc
   20194:	mov	r0, r4
   20198:	ldr	r1, [pc, #3564]	; 20f8c <__flatcc_fb_gen_c_json_parser@@Base+0x2430>
   2019c:	add	r1, pc, r1
   201a0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   201a4:	ldr	r0, [r4, #220]	; 0xdc
   201a8:	add	r0, r0, #1
   201ac:	str	r0, [r4, #220]	; 0xdc
   201b0:	mov	r0, r4
   201b4:	ldr	r1, [pc, #3540]	; 20f90 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   201b8:	add	r1, pc, r1
   201bc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   201c0:	ldr	r1, [pc, #3532]	; 20f94 <__flatcc_fb_gen_c_json_parser@@Base+0x2438>
   201c4:	mov	r0, r4
   201c8:	add	r1, pc, r1
   201cc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   201d0:	ldr	r1, [pc, #3520]	; 20f98 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   201d4:	mov	r0, r4
   201d8:	add	r1, pc, r1
   201dc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   201e0:	ldr	r1, [pc, #3508]	; 20f9c <__flatcc_fb_gen_c_json_parser@@Base+0x2440>
   201e4:	mov	r0, r4
   201e8:	add	r1, pc, r1
   201ec:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   201f0:	ldr	r1, [pc, #3496]	; 20fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x2444>
   201f4:	mov	r0, r4
   201f8:	add	r1, pc, r1
   201fc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20200:	ldr	r0, [r4, #208]	; 0xd0
   20204:	ldrh	r1, [r0, #16]
   20208:	cmp	r1, #2
   2020c:	bne	20494 <__flatcc_fb_gen_c_json_parser@@Base+0x1938>
   20210:	ldrd	r6, [r0, #8]
   20214:	ldr	r1, [pc, #3464]	; 20fa4 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   20218:	mov	r0, r4
   2021c:	add	r1, pc, r1
   20220:	mov	r2, r7
   20224:	mov	r3, r6
   20228:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2022c:	b	204a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1948>
   20230:	andeq	r4, r3, sl, asr #26
   20234:	andeq	r4, r3, r4, asr sp
   20238:	andeq	r4, r3, r3, asr r8
   2023c:	andeq	r4, r3, r5, asr r8
   20240:	andeq	r4, r3, r4, lsr #26
   20244:	andeq	r4, r3, r1, asr sp
   20248:	andeq	r4, r3, sl, lsl #27
   2024c:	andeq	r4, r3, r1, lsl #16
   20250:	andeq	r4, r3, r8, lsl #4
   20254:	andeq	r7, r3, pc, lsl #2
   20258:	andeq	r4, r3, r0, ror #4
   2025c:	andeq	r4, r3, sp, asr r2
   20260:	ldr	r1, [pc, #3188]	; 20edc <__flatcc_fb_gen_c_json_parser@@Base+0x2380>
   20264:	add	r5, sp, #232	; 0xe8
   20268:	mov	r0, r8
   2026c:	mov	r2, r5
   20270:	add	r1, pc, r1
   20274:	bl	29ca0 <fb_scope_table_visit@@Base>
   20278:	ldr	r6, [sp, #236]	; 0xec
   2027c:	ldr	r7, [sp, #248]	; 0xf8
   20280:	ldr	r3, [pc, #3160]	; 20ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x2384>
   20284:	mov	r2, #8
   20288:	add	r3, pc, r3
   2028c:	mov	r0, r7
   20290:	mov	r1, r6
   20294:	bl	14a3c <qsort@plt>
   20298:	cmp	r6, #1
   2029c:	blt	202b8 <__flatcc_fb_gen_c_json_parser@@Base+0x175c>
   202a0:	mov	r0, #0
   202a4:	ldr	r1, [r7, r0, lsl #3]
   202a8:	str	r0, [r1, #124]	; 0x7c
   202ac:	add	r0, r0, #1
   202b0:	cmp	r6, r0
   202b4:	bne	202a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1748>
   202b8:	ldr	r6, [sp, #240]	; 0xf0
   202bc:	ldr	r7, [sp, #252]	; 0xfc
   202c0:	ldr	r3, [pc, #3100]	; 20ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x2388>
   202c4:	mov	r2, #8
   202c8:	add	r3, pc, r3
   202cc:	mov	r0, r7
   202d0:	mov	r1, r6
   202d4:	bl	14a3c <qsort@plt>
   202d8:	cmp	r6, #1
   202dc:	blt	202f8 <__flatcc_fb_gen_c_json_parser@@Base+0x179c>
   202e0:	mov	r0, #0
   202e4:	ldr	r1, [r7, r0, lsl #3]
   202e8:	str	r0, [r1, #124]	; 0x7c
   202ec:	add	r0, r0, #1
   202f0:	cmp	r6, r0
   202f4:	bne	202e4 <__flatcc_fb_gen_c_json_parser@@Base+0x1788>
   202f8:	ldr	r9, [sp, #240]	; 0xf0
   202fc:	cmp	r9, #0
   20300:	beq	205c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a64>
   20304:	lsl	r0, r9, #4
   20308:	bl	14964 <malloc@plt>
   2030c:	cmp	r0, #0
   20310:	beq	205f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1a94>
   20314:	mov	r8, r0
   20318:	cmp	r9, #1
   2031c:	blt	2035c <__flatcc_fb_gen_c_json_parser@@Base+0x1800>
   20320:	ldr	r0, [sp, #252]	; 0xfc
   20324:	add	r5, r8, #8
   20328:	mov	r6, #0
   2032c:	mov	sl, r9
   20330:	add	r7, r0, #4
   20334:	ldr	r0, [r7]
   20338:	str	r0, [r5, #-8]
   2033c:	bl	149a0 <strlen@plt>
   20340:	str	r0, [r5, #-4]
   20344:	subs	sl, sl, #1
   20348:	ldr	r0, [r7, #-4]
   2034c:	add	r7, r7, #8
   20350:	stm	r5, {r0, r6}
   20354:	add	r5, r5, #16
   20358:	bne	20334 <__flatcc_fb_gen_c_json_parser@@Base+0x17d8>
   2035c:	ldr	r3, [pc, #2948]	; 20ee8 <__flatcc_fb_gen_c_json_parser@@Base+0x238c>
   20360:	mov	r0, r8
   20364:	mov	r1, r9
   20368:	mov	r2, #16
   2036c:	add	r3, pc, r3
   20370:	bl	14a3c <qsort@plt>
   20374:	ldr	r9, [sp, #240]	; 0xf0
   20378:	add	r5, sp, #232	; 0xe8
   2037c:	b	205f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1a98>
   20380:	andeq	r4, r3, sp, asr r2
   20384:	andeq	r4, r3, r4, asr r2
   20388:	andeq	r4, r3, r9, lsr r2
   2038c:	ldr	r1, [pc, #3012]	; 20f58 <__flatcc_fb_gen_c_json_parser@@Base+0x23fc>
   20390:	mov	r0, r4
   20394:	add	r1, pc, r1
   20398:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2039c:	ldr	r1, [pc, #3000]	; 20f5c <__flatcc_fb_gen_c_json_parser@@Base+0x2400>
   203a0:	add	r2, sp, #232	; 0xe8
   203a4:	mov	r0, r4
   203a8:	add	r1, pc, r1
   203ac:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   203b0:	ldr	r1, [pc, #2984]	; 20f60 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   203b4:	mov	r0, r4
   203b8:	add	r1, pc, r1
   203bc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   203c0:	ldr	r0, [r4, #220]	; 0xdc
   203c4:	add	r0, r0, #1
   203c8:	str	r0, [r4, #220]	; 0xdc
   203cc:	mov	r0, r4
   203d0:	ldr	r1, [pc, #2956]	; 20f64 <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
   203d4:	add	r1, pc, r1
   203d8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   203dc:	ldr	r0, [r4, #220]	; 0xdc
   203e0:	cmp	r0, #0
   203e4:	beq	20d98 <__flatcc_fb_gen_c_json_parser@@Base+0x223c>
   203e8:	sub	r0, r0, #1
   203ec:	str	r0, [r4, #220]	; 0xdc
   203f0:	mov	r0, r4
   203f4:	ldr	r1, [pc, #2924]	; 20f68 <__flatcc_fb_gen_c_json_parser@@Base+0x240c>
   203f8:	add	r1, pc, r1
   203fc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20400:	ldr	r1, [pc, #2916]	; 20f6c <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   20404:	mov	r0, r4
   20408:	add	r1, pc, r1
   2040c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20410:	ldr	r1, [pc, #2904]	; 20f70 <__flatcc_fb_gen_c_json_parser@@Base+0x2414>
   20414:	mov	r0, r4
   20418:	add	r1, pc, r1
   2041c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20420:	ldr	r1, [pc, #2892]	; 20f74 <__flatcc_fb_gen_c_json_parser@@Base+0x2418>
   20424:	mov	r0, r4
   20428:	add	r1, pc, r1
   2042c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20430:	ldr	r0, [r4, #220]	; 0xdc
   20434:	cmp	r0, #0
   20438:	bne	20544 <__flatcc_fb_gen_c_json_parser@@Base+0x19e8>
   2043c:	ldr	r0, [pc, #2868]	; 20f78 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   20440:	ldr	r1, [pc, #2868]	; 20f7c <__flatcc_fb_gen_c_json_parser@@Base+0x2420>
   20444:	ldr	r3, [pc, #2868]	; 20f80 <__flatcc_fb_gen_c_json_parser@@Base+0x2424>
   20448:	movw	r2, #1630	; 0x65e
   2044c:	add	r0, pc, r0
   20450:	add	r1, pc, r1
   20454:	add	r3, pc, r3
   20458:	bl	14a78 <__assert_fail@plt>
   2045c:	andeq	r4, r3, r5, lsl r2
   20460:	andeq	r4, r3, r5, ror #3
   20464:	andeq	r4, r3, r0, lsl #5
   20468:	andeq	r4, r3, r9, ror #4
   2046c:	ldrdeq	r4, [r3], -fp
   20470:	andeq	r1, r2, r6, lsl r3
   20474:	andeq	r4, r3, r1, lsr r2
   20478:	andeq	r4, r3, r8, ror r2
   2047c:	andeq	r4, r3, r5, ror #4
   20480:	andeq	r4, r3, r2, lsl #5
   20484:			; <UNDEFINED> instruction: 0x000342ba
   20488:	andeq	r4, r3, r7, lsr #5
   2048c:			; <UNDEFINED> instruction: 0x00036eb7
   20490:	andeq	r3, r2, r3, asr #11
   20494:	ldr	r1, [pc, #2828]	; 20fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x244c>
   20498:	mov	r0, r4
   2049c:	add	r1, pc, r1
   204a0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   204a4:	ldr	r1, [pc, #2816]	; 20fac <__flatcc_fb_gen_c_json_parser@@Base+0x2450>
   204a8:	add	r2, sp, #232	; 0xe8
   204ac:	mov	r0, r4
   204b0:	add	r1, pc, r1
   204b4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   204b8:	ldr	r1, [pc, #2800]	; 20fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2454>
   204bc:	mov	r0, r4
   204c0:	add	r1, pc, r1
   204c4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   204c8:	ldr	r0, [r4, #220]	; 0xdc
   204cc:	add	r0, r0, #1
   204d0:	str	r0, [r4, #220]	; 0xdc
   204d4:	mov	r0, r4
   204d8:	ldr	r1, [pc, #2772]	; 20fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2458>
   204dc:	add	r1, pc, r1
   204e0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   204e4:	ldr	r0, [r4, #220]	; 0xdc
   204e8:	cmp	r0, #0
   204ec:	beq	20dbc <__flatcc_fb_gen_c_json_parser@@Base+0x2260>
   204f0:	sub	r0, r0, #1
   204f4:	str	r0, [r4, #220]	; 0xdc
   204f8:	mov	r0, r4
   204fc:	ldr	r1, [pc, #2740]	; 20fb8 <__flatcc_fb_gen_c_json_parser@@Base+0x245c>
   20500:	add	r1, pc, r1
   20504:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20508:	ldr	r1, [pc, #2732]	; 20fbc <__flatcc_fb_gen_c_json_parser@@Base+0x2460>
   2050c:	mov	r0, r4
   20510:	add	r1, pc, r1
   20514:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20518:	ldr	r1, [pc, #2720]	; 20fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   2051c:	mov	r0, r4
   20520:	add	r1, pc, r1
   20524:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20528:	ldr	r1, [pc, #2708]	; 20fc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2468>
   2052c:	mov	r0, r4
   20530:	add	r1, pc, r1
   20534:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20538:	ldr	r0, [r4, #220]	; 0xdc
   2053c:	cmp	r0, #0
   20540:	beq	20de0 <__flatcc_fb_gen_c_json_parser@@Base+0x2284>
   20544:	sub	r0, r0, #1
   20548:	str	r0, [r4, #220]	; 0xdc
   2054c:	mov	r0, r4
   20550:	ldr	r1, [pc, #2672]	; 20fc8 <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   20554:	add	r1, pc, r1
   20558:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2055c:	ldr	r1, [pc, #2664]	; 20fcc <__flatcc_fb_gen_c_json_parser@@Base+0x2470>
   20560:	mov	r0, r4
   20564:	add	r1, pc, r1
   20568:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2056c:	ldr	r0, [r4, #212]	; 0xd4
   20570:	ldr	r0, [r0, #140]	; 0x8c
   20574:	cmp	r0, #0
   20578:	beq	20594 <__flatcc_fb_gen_c_json_parser@@Base+0x1a38>
   2057c:	ldr	r3, [r4, #204]	; 0xcc
   20580:	ldr	r0, [pc, #2632]	; 20fd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2474>
   20584:	mov	r1, #36	; 0x24
   20588:	mov	r2, #1
   2058c:	add	r0, pc, r0
   20590:	bl	1494c <fwrite@plt>
   20594:	ldr	r0, [r4, #208]	; 0xd0
   20598:	ldr	r2, [r0, #164]	; 0xa4
   2059c:	ldr	r1, [pc, #2608]	; 20fd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2478>
   205a0:	mov	r0, r4
   205a4:	add	r1, pc, r1
   205a8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   205ac:	mov	r0, #0
   205b0:	sub	sp, fp, #48	; 0x30
   205b4:	vpop	{d8-d9}
   205b8:	add	sp, sp, #4
   205bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   205c0:	mov	r9, #0
   205c4:	str	r9, [sp, #8]
   205c8:	b	20608 <__flatcc_fb_gen_c_json_parser@@Base+0x1aac>
   205cc:	andeq	r4, r3, lr, ror r2
   205d0:	andeq	r4, r3, sl, lsl #5
   205d4:	andeq	r4, r3, lr, ror r2
   205d8:	andeq	r4, r3, r2, lsr r2
   205dc:	andeq	r4, r3, r4, asr #4
   205e0:	andeq	r3, r3, sp, lsl #30
   205e4:	andeq	r4, r3, ip, lsr r2
   205e8:	strdeq	r4, [r3], -r7
   205ec:	andeq	r4, r3, r6, lsl r2
   205f0:	mov	r8, #0
   205f4:	cmp	r9, #1
   205f8:	str	r8, [sp, #8]
   205fc:	blt	20608 <__flatcc_fb_gen_c_json_parser@@Base+0x1aac>
   20600:	cmp	r8, #0
   20604:	beq	20e08 <__flatcc_fb_gen_c_json_parser@@Base+0x22ac>
   20608:	mov	r0, #4
   2060c:	str	r0, [sp, #24]
   20610:	mov	r0, #0
   20614:	str	r0, [sp, #20]
   20618:	ldr	r0, [pc, #2252]	; 20eec <__flatcc_fb_gen_c_json_parser@@Base+0x2390>
   2061c:	add	r0, pc, r0
   20620:	str	r0, [sp, #12]
   20624:	ldr	r0, [pc, #2244]	; 20ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x2394>
   20628:	add	r0, pc, r0
   2062c:	str	r0, [sp, #16]
   20630:	ldr	r0, [r4, #208]	; 0xd0
   20634:	ldr	r2, [r0, #160]	; 0xa0
   20638:	ldr	r1, [pc, #2228]	; 20ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x2398>
   2063c:	mov	r0, r4
   20640:	add	r1, pc, r1
   20644:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20648:	ldr	r0, [r4, #220]	; 0xdc
   2064c:	add	r0, r0, #2
   20650:	str	r0, [r4, #220]	; 0xdc
   20654:	mov	r0, r4
   20658:	ldr	r1, [pc, #2200]	; 20ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x239c>
   2065c:	add	r1, pc, r1
   20660:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20664:	ldr	r0, [r4, #220]	; 0xdc
   20668:	cmp	r0, #0
   2066c:	beq	20d74 <__flatcc_fb_gen_c_json_parser@@Base+0x2218>
   20670:	subs	r1, r0, #1
   20674:	str	r1, [r4, #220]	; 0xdc
   20678:	beq	20d74 <__flatcc_fb_gen_c_json_parser@@Base+0x2218>
   2067c:	sub	r0, r0, #2
   20680:	str	r0, [r4, #220]	; 0xdc
   20684:	mov	r0, r4
   20688:	ldr	r1, [pc, #2156]	; 20efc <__flatcc_fb_gen_c_json_parser@@Base+0x23a0>
   2068c:	add	r1, pc, r1
   20690:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20694:	ldr	r0, [r4, #220]	; 0xdc
   20698:	cmp	r9, #0
   2069c:	add	r0, r0, #1
   206a0:	str	r0, [r4, #220]	; 0xdc
   206a4:	beq	20764 <__flatcc_fb_gen_c_json_parser@@Base+0x1c08>
   206a8:	ldr	r1, [pc, #2148]	; 20f14 <__flatcc_fb_gen_c_json_parser@@Base+0x23b8>
   206ac:	mov	r0, r4
   206b0:	add	r1, pc, r1
   206b4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   206b8:	ldr	r1, [pc, #2136]	; 20f18 <__flatcc_fb_gen_c_json_parser@@Base+0x23bc>
   206bc:	mov	r0, r4
   206c0:	add	r1, pc, r1
   206c4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   206c8:	ldr	r1, [pc, #2124]	; 20f1c <__flatcc_fb_gen_c_json_parser@@Base+0x23c0>
   206cc:	mov	r0, r4
   206d0:	add	r1, pc, r1
   206d4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   206d8:	ldr	r1, [pc, #2112]	; 20f20 <__flatcc_fb_gen_c_json_parser@@Base+0x23c4>
   206dc:	mov	r0, r4
   206e0:	add	r1, pc, r1
   206e4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   206e8:	ldr	r1, [pc, #2100]	; 20f24 <__flatcc_fb_gen_c_json_parser@@Base+0x23c8>
   206ec:	mov	r0, r4
   206f0:	add	r1, pc, r1
   206f4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   206f8:	mov	r0, #0
   206fc:	sub	r3, r9, #1
   20700:	add	r1, sp, #8
   20704:	mov	r2, #0
   20708:	str	r0, [sp]
   2070c:	mov	r0, r4
   20710:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   20714:	ldr	r1, [pc, #2060]	; 20f28 <__flatcc_fb_gen_c_json_parser@@Base+0x23cc>
   20718:	mov	r0, r4
   2071c:	add	r1, pc, r1
   20720:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20724:	ldr	r0, [r4, #220]	; 0xdc
   20728:	cmp	r0, #0
   2072c:	bne	20790 <__flatcc_fb_gen_c_json_parser@@Base+0x1c34>
   20730:	ldr	r0, [pc, #2568]	; 21140 <__flatcc_fb_gen_c_json_parser@@Base+0x25e4>
   20734:	ldr	r1, [pc, #2568]	; 21144 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   20738:	ldr	r3, [pc, #2568]	; 21148 <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   2073c:	movw	r2, #1219	; 0x4c3
   20740:	add	r0, pc, r0
   20744:	add	r1, pc, r1
   20748:	add	r3, pc, r3
   2074c:	bl	14a78 <__assert_fail@plt>
   20750:	andeq	r3, r2, r3, lsl r4
   20754:	andeq	r1, r2, lr, lsr r0
   20758:	strdeq	r3, [r3], -ip
   2075c:	andeq	r5, r3, r9, asr #13
   20760:	andeq	r5, r3, r6, ror #13
   20764:	ldr	r1, [pc, #1940]	; 20f00 <__flatcc_fb_gen_c_json_parser@@Base+0x23a4>
   20768:	mov	r0, r4
   2076c:	add	r1, pc, r1
   20770:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20774:	ldr	r1, [pc, #1928]	; 20f04 <__flatcc_fb_gen_c_json_parser@@Base+0x23a8>
   20778:	mov	r0, r4
   2077c:	add	r1, pc, r1
   20780:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   20784:	ldr	r0, [r4, #220]	; 0xdc
   20788:	cmp	r0, #0
   2078c:	beq	20e60 <__flatcc_fb_gen_c_json_parser@@Base+0x2304>
   20790:	sub	r0, r0, #1
   20794:	str	r0, [r4, #220]	; 0xdc
   20798:	mov	r0, r4
   2079c:	ldr	r1, [pc, #1928]	; 20f2c <__flatcc_fb_gen_c_json_parser@@Base+0x23d0>
   207a0:	add	r1, pc, r1
   207a4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   207a8:	ldr	r1, [pc, #1920]	; 20f30 <__flatcc_fb_gen_c_json_parser@@Base+0x23d4>
   207ac:	mov	r0, r4
   207b0:	add	r1, pc, r1
   207b4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   207b8:	ldr	r0, [sp, #8]
   207bc:	cmp	r0, #0
   207c0:	beq	207c8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c6c>
   207c4:	bl	148f8 <free@plt>
   207c8:	ldr	r0, [sp, #248]	; 0xf8
   207cc:	cmp	r0, #0
   207d0:	beq	207d8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c7c>
   207d4:	bl	148f8 <free@plt>
   207d8:	ldr	r0, [sp, #252]	; 0xfc
   207dc:	cmp	r0, #0
   207e0:	beq	207e8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c8c>
   207e4:	bl	148f8 <free@plt>
   207e8:	ldr	r0, [sp, #256]	; 0x100
   207ec:	cmp	r0, #0
   207f0:	beq	207f8 <__flatcc_fb_gen_c_json_parser@@Base+0x1c9c>
   207f4:	bl	148f8 <free@plt>
   207f8:	vmov.i32	q8, #0	; 0x00000000
   207fc:	mov	r0, #28
   20800:	add	r1, r5, #16
   20804:	vst1.64	{d16-d17}, [r5], r0
   20808:	vst1.32	{d16-d17}, [r5]
   2080c:	b	1ffb4 <__flatcc_fb_gen_c_json_parser@@Base+0x1458>
   20810:	muleq	r3, ip, r7
   20814:	andeq	r4, r3, r9, asr #15
   20818:	andeq	r4, r3, sl, lsl #16
   2081c:	andeq	r4, r3, r9, ror r2
   20820:	ldr	r0, [pc, #1688]	; 20ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x2364>
   20824:	movw	r3, #1535	; 0x5ff
   20828:	ldr	r0, [pc, r0]
   2082c:	ldr	r0, [r0]
   20830:	ldr	r1, [pc, #1676]	; 20ec4 <__flatcc_fb_gen_c_json_parser@@Base+0x2368>
   20834:	add	r1, pc, r1
   20838:	str	r1, [sp]
   2083c:	ldr	r1, [pc, #1668]	; 20ec8 <__flatcc_fb_gen_c_json_parser@@Base+0x236c>
   20840:	ldr	r4, [pc, #1668]	; 20ecc <__flatcc_fb_gen_c_json_parser@@Base+0x2370>
   20844:	add	r4, pc, r4
   20848:	add	r1, pc, r1
   2084c:	mov	r2, r4
   20850:	bl	149b8 <fprintf@plt>
   20854:	ldr	r0, [pc, #1652]	; 20ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x2374>
   20858:	ldr	r3, [pc, #1652]	; 20ed4 <__flatcc_fb_gen_c_json_parser@@Base+0x2378>
   2085c:	mov	r1, r4
   20860:	movw	r2, #1535	; 0x5ff
   20864:	add	r0, pc, r0
   20868:	add	r3, pc, r3
   2086c:	bl	14a78 <__assert_fail@plt>
   20870:	andeq	r5, r3, r1, asr #13
   20874:	andeq	r4, r3, ip, ror r7
   20878:	andeq	r0, r2, r2, asr pc
   2087c:			; <UNDEFINED> instruction: 0x000356b8
   20880:	ldr	r0, [pc, #1556]	; 20e9c <__flatcc_fb_gen_c_json_parser@@Base+0x2340>
   20884:	movw	r3, #1522	; 0x5f2
   20888:	ldr	r0, [pc, r0]
   2088c:	ldr	r0, [r0]
   20890:	ldr	r1, [pc, #1544]	; 20ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x2344>
   20894:	add	r1, pc, r1
   20898:	str	r1, [sp]
   2089c:	ldr	r1, [pc, #1536]	; 20ea4 <__flatcc_fb_gen_c_json_parser@@Base+0x2348>
   208a0:	ldr	r4, [pc, #1536]	; 20ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x234c>
   208a4:	add	r4, pc, r4
   208a8:	add	r1, pc, r1
   208ac:	mov	r2, r4
   208b0:	bl	149b8 <fprintf@plt>
   208b4:	ldr	r0, [pc, #1520]	; 20eac <__flatcc_fb_gen_c_json_parser@@Base+0x2350>
   208b8:	ldr	r3, [pc, #1520]	; 20eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2354>
   208bc:	mov	r1, r4
   208c0:	movw	r2, #1522	; 0x5f2
   208c4:	add	r0, pc, r0
   208c8:	add	r3, pc, r3
   208cc:	bl	14a78 <__assert_fail@plt>
   208d0:	andeq	r3, r2, r7, lsr #5
   208d4:			; <UNDEFINED> instruction: 0x000356bb
   208d8:	ldr	r0, [pc, #1492]	; 20eb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2358>
   208dc:	ldr	r1, [pc, #1492]	; 20eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x235c>
   208e0:	ldr	r3, [pc, #1492]	; 20ebc <__flatcc_fb_gen_c_json_parser@@Base+0x2360>
   208e4:	movw	r2, #1532	; 0x5fc
   208e8:	add	r0, pc, r0
   208ec:	add	r1, pc, r1
   208f0:	add	r3, pc, r3
   208f4:	bl	14a78 <__assert_fail@plt>
   208f8:	ldr	r0, [pc, #1424]	; 20e90 <__flatcc_fb_gen_c_json_parser@@Base+0x2334>
   208fc:	ldr	r1, [pc, #1424]	; 20e94 <__flatcc_fb_gen_c_json_parser@@Base+0x2338>
   20900:	ldr	r3, [pc, #1424]	; 20e98 <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   20904:	movw	r2, #1526	; 0x5f6
   20908:	add	r0, pc, r0
   2090c:	add	r1, pc, r1
   20910:	add	r3, pc, r3
   20914:	bl	14a78 <__assert_fail@plt>
   20918:	ldr	r0, [pc, #1732]	; 20fe4 <__flatcc_fb_gen_c_json_parser@@Base+0x2488>
   2091c:	ldr	r1, [pc, #1732]	; 20fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x248c>
   20920:	ldr	r3, [pc, #1732]	; 20fec <__flatcc_fb_gen_c_json_parser@@Base+0x2490>
   20924:	movw	r2, #1747	; 0x6d3
   20928:	add	r0, pc, r0
   2092c:	add	r1, pc, r1
   20930:	add	r3, pc, r3
   20934:	bl	14a78 <__assert_fail@plt>
   20938:	ldr	r0, [pc, #1348]	; 20e84 <__flatcc_fb_gen_c_json_parser@@Base+0x2328>
   2093c:	ldr	r1, [pc, #1348]	; 20e88 <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   20940:	ldr	r3, [pc, #1348]	; 20e8c <__flatcc_fb_gen_c_json_parser@@Base+0x2330>
   20944:	movw	r2, #1731	; 0x6c3
   20948:	add	r0, pc, r0
   2094c:	add	r1, pc, r1
   20950:	add	r3, pc, r3
   20954:	bl	14a78 <__assert_fail@plt>
   20958:	andeq	r5, r3, sp, lsl #13
   2095c:	andeq	r5, r3, r0, asr #12
   20960:	ldr	r0, [pc, #1876]	; 210bc <__flatcc_fb_gen_c_json_parser@@Base+0x2560>
   20964:	ldr	r1, [pc, #1876]	; 210c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2564>
   20968:	ldr	r3, [pc, #1876]	; 210c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2568>
   2096c:	movw	r2, #1390	; 0x56e
   20970:	add	r0, pc, r0
   20974:	add	r1, pc, r1
   20978:	add	r3, pc, r3
   2097c:	bl	14a78 <__assert_fail@plt>
   20980:	andeq	r4, r3, r0, asr #24
   20984:	ldr	r0, [pc, #1852]	; 210c8 <__flatcc_fb_gen_c_json_parser@@Base+0x256c>
   20988:	mov	r3, #1392	; 0x570
   2098c:	ldr	r0, [pc, r0]
   20990:	ldr	r0, [r0]
   20994:	ldr	r1, [pc, #1840]	; 210cc <__flatcc_fb_gen_c_json_parser@@Base+0x2570>
   20998:	add	r1, pc, r1
   2099c:	str	r1, [sp]
   209a0:	ldr	r1, [pc, #1832]	; 210d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2574>
   209a4:	ldr	r4, [pc, #1832]	; 210d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2578>
   209a8:	add	r4, pc, r4
   209ac:	add	r1, pc, r1
   209b0:	mov	r2, r4
   209b4:	bl	149b8 <fprintf@plt>
   209b8:	ldr	r0, [pc, #1816]	; 210d8 <__flatcc_fb_gen_c_json_parser@@Base+0x257c>
   209bc:	ldr	r3, [pc, #1816]	; 210dc <__flatcc_fb_gen_c_json_parser@@Base+0x2580>
   209c0:	mov	r1, r4
   209c4:	mov	r2, #1392	; 0x570
   209c8:	add	r0, pc, r0
   209cc:	add	r3, pc, r3
   209d0:	bl	14a78 <__assert_fail@plt>
   209d4:	andeq	r5, r3, sl, asr #12
   209d8:	andeq	r4, r3, r7, lsr sl
   209dc:	ldr	r0, [pc, #1656]	; 2105c <__flatcc_fb_gen_c_json_parser@@Base+0x2500>
   209e0:	ldr	r1, [pc, #1656]	; 21060 <__flatcc_fb_gen_c_json_parser@@Base+0x2504>
   209e4:	ldr	r3, [pc, #1656]	; 21064 <__flatcc_fb_gen_c_json_parser@@Base+0x2508>
   209e8:	movw	r2, #1301	; 0x515
   209ec:	add	r0, pc, r0
   209f0:	add	r1, pc, r1
   209f4:	add	r3, pc, r3
   209f8:	bl	14a78 <__assert_fail@plt>
   209fc:	andeq	r3, r2, r3, ror #2
   20a00:	andeq	r5, r3, r0, asr r6
   20a04:	andeq	r5, r3, r3, lsl #13
   20a08:	andeq	r3, r3, r6, lsr #28
   20a0c:	ldr	r0, [pc, #1620]	; 21068 <__flatcc_fb_gen_c_json_parser@@Base+0x250c>
   20a10:	movw	r3, #1303	; 0x517
   20a14:	ldr	r0, [pc, r0]
   20a18:	ldr	r0, [r0]
   20a1c:	ldr	r1, [pc, #1608]	; 2106c <__flatcc_fb_gen_c_json_parser@@Base+0x2510>
   20a20:	add	r1, pc, r1
   20a24:	str	r1, [sp]
   20a28:	ldr	r1, [pc, #1600]	; 21070 <__flatcc_fb_gen_c_json_parser@@Base+0x2514>
   20a2c:	ldr	r4, [pc, #1600]	; 21074 <__flatcc_fb_gen_c_json_parser@@Base+0x2518>
   20a30:	add	r4, pc, r4
   20a34:	add	r1, pc, r1
   20a38:	mov	r2, r4
   20a3c:	bl	149b8 <fprintf@plt>
   20a40:	ldr	r0, [pc, #1584]	; 21078 <__flatcc_fb_gen_c_json_parser@@Base+0x251c>
   20a44:	ldr	r3, [pc, #1584]	; 2107c <__flatcc_fb_gen_c_json_parser@@Base+0x2520>
   20a48:	mov	r1, r4
   20a4c:	movw	r2, #1303	; 0x517
   20a50:	add	r0, pc, r0
   20a54:	add	r3, pc, r3
   20a58:	bl	14a78 <__assert_fail@plt>
   20a5c:	andeq	r4, r3, ip, asr #12
   20a60:	ldr	r0, [pc, #1428]	; 20ffc <__flatcc_fb_gen_c_json_parser@@Base+0x24a0>
   20a64:	ldr	r1, [pc, #1428]	; 21000 <__flatcc_fb_gen_c_json_parser@@Base+0x24a4>
   20a68:	ldr	r3, [pc, #1428]	; 21004 <__flatcc_fb_gen_c_json_parser@@Base+0x24a8>
   20a6c:	movw	r2, #1503	; 0x5df
   20a70:	add	r0, pc, r0
   20a74:	add	r1, pc, r1
   20a78:	add	r3, pc, r3
   20a7c:	bl	14a78 <__assert_fail@plt>
   20a80:	andeq	r3, r3, sl, lsl #28
   20a84:	ldr	r0, [pc, #1404]	; 21008 <__flatcc_fb_gen_c_json_parser@@Base+0x24ac>
   20a88:	ldr	r1, [pc, #1404]	; 2100c <__flatcc_fb_gen_c_json_parser@@Base+0x24b0>
   20a8c:	ldr	r3, [pc, #1404]	; 21010 <__flatcc_fb_gen_c_json_parser@@Base+0x24b4>
   20a90:	movw	r2, #1543	; 0x607
   20a94:	add	r0, pc, r0
   20a98:	add	r1, pc, r1
   20a9c:	add	r3, pc, r3
   20aa0:	bl	14a78 <__assert_fail@plt>
   20aa4:	andeq	r3, r2, fp, asr #1
   20aa8:	ldr	r0, [pc, #1380]	; 21014 <__flatcc_fb_gen_c_json_parser@@Base+0x24b8>
   20aac:	ldr	r1, [pc, #1380]	; 21018 <__flatcc_fb_gen_c_json_parser@@Base+0x24bc>
   20ab0:	ldr	r3, [pc, #1380]	; 2101c <__flatcc_fb_gen_c_json_parser@@Base+0x24c0>
   20ab4:	movw	r2, #1545	; 0x609
   20ab8:	add	r0, pc, r0
   20abc:	add	r1, pc, r1
   20ac0:	add	r3, pc, r3
   20ac4:	bl	14a78 <__assert_fail@plt>
   20ac8:	strdeq	r5, [r3], -sl
   20acc:	andeq	r6, r3, r3, ror r9
   20ad0:	ldr	r0, [pc, #1352]	; 21020 <__flatcc_fb_gen_c_json_parser@@Base+0x24c4>
   20ad4:	ldr	r1, [pc, #1352]	; 21024 <__flatcc_fb_gen_c_json_parser@@Base+0x24c8>
   20ad8:	ldr	r3, [pc, #1352]	; 21028 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   20adc:	movw	r2, #1546	; 0x60a
   20ae0:	add	r0, pc, r0
   20ae4:	add	r1, pc, r1
   20ae8:	add	r3, pc, r3
   20aec:	bl	14a78 <__assert_fail@plt>
   20af0:	andeq	r5, r3, r5, lsl #12
   20af4:	ldr	r0, [pc, #1328]	; 2102c <__flatcc_fb_gen_c_json_parser@@Base+0x24d0>
   20af8:	ldr	r1, [pc, #1328]	; 21030 <__flatcc_fb_gen_c_json_parser@@Base+0x24d4>
   20afc:	ldr	r3, [pc, #1328]	; 21034 <__flatcc_fb_gen_c_json_parser@@Base+0x24d8>
   20b00:	movw	r2, #1550	; 0x60e
   20b04:	add	r0, pc, r0
   20b08:	add	r1, pc, r1
   20b0c:	add	r3, pc, r3
   20b10:	bl	14a78 <__assert_fail@plt>
   20b14:	ldr	r0, [pc, #1308]	; 21038 <__flatcc_fb_gen_c_json_parser@@Base+0x24dc>
   20b18:	ldr	r1, [pc, #1308]	; 2103c <__flatcc_fb_gen_c_json_parser@@Base+0x24e0>
   20b1c:	ldr	r3, [pc, #1308]	; 21040 <__flatcc_fb_gen_c_json_parser@@Base+0x24e4>
   20b20:	mov	r2, #1552	; 0x610
   20b24:	add	r0, pc, r0
   20b28:	add	r1, pc, r1
   20b2c:	add	r3, pc, r3
   20b30:	bl	14a78 <__assert_fail@plt>
   20b34:	ldr	r0, [pc, #1288]	; 21044 <__flatcc_fb_gen_c_json_parser@@Base+0x24e8>
   20b38:	ldr	r1, [pc, #1288]	; 21048 <__flatcc_fb_gen_c_json_parser@@Base+0x24ec>
   20b3c:	ldr	r3, [pc, #1288]	; 2104c <__flatcc_fb_gen_c_json_parser@@Base+0x24f0>
   20b40:	movw	r2, #1582	; 0x62e
   20b44:	add	r0, pc, r0
   20b48:	add	r1, pc, r1
   20b4c:	add	r3, pc, r3
   20b50:	bl	14a78 <__assert_fail@plt>
   20b54:	ldr	r0, [pc, #1268]	; 21050 <__flatcc_fb_gen_c_json_parser@@Base+0x24f4>
   20b58:	ldr	r1, [pc, #1268]	; 21054 <__flatcc_fb_gen_c_json_parser@@Base+0x24f8>
   20b5c:	ldr	r3, [pc, #1268]	; 21058 <__flatcc_fb_gen_c_json_parser@@Base+0x24fc>
   20b60:	movw	r2, #1583	; 0x62f
   20b64:	add	r0, pc, r0
   20b68:	add	r1, pc, r1
   20b6c:	add	r3, pc, r3
   20b70:	bl	14a78 <__assert_fail@plt>
   20b74:	ldr	r0, [pc, #1380]	; 210e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2584>
   20b78:	ldr	r1, [pc, #1380]	; 210e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2588>
   20b7c:	ldr	r3, [pc, #1380]	; 210e8 <__flatcc_fb_gen_c_json_parser@@Base+0x258c>
   20b80:	movw	r2, #1438	; 0x59e
   20b84:	add	r0, pc, r0
   20b88:	add	r1, pc, r1
   20b8c:	add	r3, pc, r3
   20b90:	bl	14a78 <__assert_fail@plt>
   20b94:	ldr	r0, [pc, #1384]	; 21104 <__flatcc_fb_gen_c_json_parser@@Base+0x25a8>
   20b98:	ldr	r1, [pc, #1384]	; 21108 <__flatcc_fb_gen_c_json_parser@@Base+0x25ac>
   20b9c:	ldr	r3, [pc, #1384]	; 2110c <__flatcc_fb_gen_c_json_parser@@Base+0x25b0>
   20ba0:	movw	r2, #1473	; 0x5c1
   20ba4:	add	r0, pc, r0
   20ba8:	add	r1, pc, r1
   20bac:	add	r3, pc, r3
   20bb0:	bl	14a78 <__assert_fail@plt>
   20bb4:	ldr	r0, [pc, #1364]	; 21110 <__flatcc_fb_gen_c_json_parser@@Base+0x25b4>
   20bb8:	ldr	r1, [pc, #1364]	; 21114 <__flatcc_fb_gen_c_json_parser@@Base+0x25b8>
   20bbc:	ldr	r3, [pc, #1364]	; 21118 <__flatcc_fb_gen_c_json_parser@@Base+0x25bc>
   20bc0:	movw	r2, #1479	; 0x5c7
   20bc4:	add	r0, pc, r0
   20bc8:	add	r1, pc, r1
   20bcc:	add	r3, pc, r3
   20bd0:	bl	14a78 <__assert_fail@plt>
   20bd4:	andeq	r4, r3, ip, lsl r4
   20bd8:	andeq	r4, r3, r0, lsr #8
   20bdc:	ldr	r0, [pc, #1180]	; 21080 <__flatcc_fb_gen_c_json_parser@@Base+0x2524>
   20be0:	ldr	r1, [pc, #1180]	; 21084 <__flatcc_fb_gen_c_json_parser@@Base+0x2528>
   20be4:	ldr	r3, [pc, #1180]	; 21088 <__flatcc_fb_gen_c_json_parser@@Base+0x252c>
   20be8:	movw	r2, #1334	; 0x536
   20bec:	add	r0, pc, r0
   20bf0:	add	r1, pc, r1
   20bf4:	add	r3, pc, r3
   20bf8:	bl	14a78 <__assert_fail@plt>
   20bfc:	andeq	r4, r3, r0, lsl #9
   20c00:	ldr	r0, [pc, #1156]	; 2108c <__flatcc_fb_gen_c_json_parser@@Base+0x2530>
   20c04:	ldr	r1, [pc, #1156]	; 21090 <__flatcc_fb_gen_c_json_parser@@Base+0x2534>
   20c08:	ldr	r3, [pc, #1156]	; 21094 <__flatcc_fb_gen_c_json_parser@@Base+0x2538>
   20c0c:	movw	r2, #1343	; 0x53f
   20c10:	add	r0, pc, r0
   20c14:	add	r1, pc, r1
   20c18:	add	r3, pc, r3
   20c1c:	bl	14a78 <__assert_fail@plt>
   20c20:	andeq	r2, r2, r3, asr pc
   20c24:	andeq	r3, r3, r2, asr #24
   20c28:	ldr	r0, [pc, #1128]	; 21098 <__flatcc_fb_gen_c_json_parser@@Base+0x253c>
   20c2c:	ldr	r1, [pc, #1128]	; 2109c <__flatcc_fb_gen_c_json_parser@@Base+0x2540>
   20c30:	ldr	r3, [pc, #1128]	; 210a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2544>
   20c34:	movw	r2, #1353	; 0x549
   20c38:	add	r0, pc, r0
   20c3c:	add	r1, pc, r1
   20c40:	add	r3, pc, r3
   20c44:	bl	14a78 <__assert_fail@plt>
   20c48:	andeq	r4, r3, r0, ror #8
   20c4c:	ldr	r0, [pc, #1104]	; 210a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2548>
   20c50:	ldr	r1, [pc, #1104]	; 210a8 <__flatcc_fb_gen_c_json_parser@@Base+0x254c>
   20c54:	ldr	r3, [pc, #1104]	; 210ac <__flatcc_fb_gen_c_json_parser@@Base+0x2550>
   20c58:	movw	r2, #1370	; 0x55a
   20c5c:	add	r0, pc, r0
   20c60:	add	r1, pc, r1
   20c64:	add	r3, pc, r3
   20c68:	bl	14a78 <__assert_fail@plt>
   20c6c:	andeq	r3, r3, lr, lsl ip
   20c70:	ldr	r0, [pc, #1080]	; 210b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2554>
   20c74:	ldr	r1, [pc, #1080]	; 210b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2558>
   20c78:	ldr	r3, [pc, #1080]	; 210b8 <__flatcc_fb_gen_c_json_parser@@Base+0x255c>
   20c7c:	mov	r2, #1376	; 0x560
   20c80:	add	r0, pc, r0
   20c84:	add	r1, pc, r1
   20c88:	add	r3, pc, r3
   20c8c:	bl	14a78 <__assert_fail@plt>
   20c90:	ldrdeq	r2, [r2], -pc	; <UNPREDICTABLE>
   20c94:	ldr	r0, [pc, #852]	; 20ff0 <__flatcc_fb_gen_c_json_parser@@Base+0x2494>
   20c98:	ldr	r1, [pc, #852]	; 20ff4 <__flatcc_fb_gen_c_json_parser@@Base+0x2498>
   20c9c:	ldr	r3, [pc, #852]	; 20ff8 <__flatcc_fb_gen_c_json_parser@@Base+0x249c>
   20ca0:	movw	r2, #1755	; 0x6db
   20ca4:	add	r0, pc, r0
   20ca8:	add	r1, pc, r1
   20cac:	add	r3, pc, r3
   20cb0:	bl	14a78 <__assert_fail@plt>
   20cb4:	ldr	r0, [pc, #1072]	; 210ec <__flatcc_fb_gen_c_json_parser@@Base+0x2590>
   20cb8:	ldr	r1, [pc, #1072]	; 210f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2594>
   20cbc:	ldr	r3, [pc, #1072]	; 210f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2598>
   20cc0:	movw	r2, #1458	; 0x5b2
   20cc4:	add	r0, pc, r0
   20cc8:	add	r1, pc, r1
   20ccc:	add	r3, pc, r3
   20cd0:	bl	14a78 <__assert_fail@plt>
   20cd4:			; <UNDEFINED> instruction: 0x00034eb6
   20cd8:	ldr	r0, [pc, #1048]	; 210f8 <__flatcc_fb_gen_c_json_parser@@Base+0x259c>
   20cdc:	ldr	r1, [pc, #1048]	; 210fc <__flatcc_fb_gen_c_json_parser@@Base+0x25a0>
   20ce0:	ldr	r3, [pc, #1048]	; 21100 <__flatcc_fb_gen_c_json_parser@@Base+0x25a4>
   20ce4:	movw	r2, #1461	; 0x5b5
   20ce8:	add	r0, pc, r0
   20cec:	add	r1, pc, r1
   20cf0:	add	r3, pc, r3
   20cf4:	bl	14a78 <__assert_fail@plt>
   20cf8:	andeq	r6, r3, pc, asr #14
   20cfc:	ldr	r0, [pc, #724]	; 20fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x247c>
   20d00:	ldr	r1, [pc, #724]	; 20fdc <__flatcc_fb_gen_c_json_parser@@Base+0x2480>
   20d04:	ldr	r3, [pc, #724]	; 20fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x2484>
   20d08:	movw	r2, #1716	; 0x6b4
   20d0c:	add	r0, pc, r0
   20d10:	add	r1, pc, r1
   20d14:	add	r3, pc, r3
   20d18:	bl	14a78 <__assert_fail@plt>
   20d1c:	andeq	r4, r3, r0, lsl #5
   20d20:	andeq	r3, r3, ip, lsl #17
   20d24:	ldr	r0, [pc, #1056]	; 2114c <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   20d28:	ldr	r1, [pc, #1056]	; 21150 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   20d2c:	ldr	r3, [pc, #1056]	; 21154 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   20d30:	movw	r2, #1610	; 0x64a
   20d34:	add	r0, pc, r0
   20d38:	add	r1, pc, r1
   20d3c:	add	r3, pc, r3
   20d40:	bl	14a78 <__assert_fail@plt>
   20d44:	ldrdeq	r4, [r3], -r1
   20d48:	ldr	r0, [pc, #1044]	; 21164 <__flatcc_fb_gen_c_json_parser@@Base+0x2608>
   20d4c:	ldr	r1, [pc, #1044]	; 21168 <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   20d50:	ldr	r3, [pc, #1044]	; 2116c <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   20d54:	movw	r2, #1645	; 0x66d
   20d58:	add	r0, pc, r0
   20d5c:	add	r1, pc, r1
   20d60:	add	r3, pc, r3
   20d64:	bl	14a78 <__assert_fail@plt>
   20d68:	andeq	r4, r3, r7, ror r9
   20d6c:	strdeq	r4, [r3], -r9
   20d70:	andeq	r3, r3, r6, ror #21
   20d74:	ldr	r0, [pc, #952]	; 21134 <__flatcc_fb_gen_c_json_parser@@Base+0x25d8>
   20d78:	ldr	r1, [pc, #952]	; 21138 <__flatcc_fb_gen_c_json_parser@@Base+0x25dc>
   20d7c:	ldr	r3, [pc, #952]	; 2113c <__flatcc_fb_gen_c_json_parser@@Base+0x25e0>
   20d80:	movw	r2, #1205	; 0x4b5
   20d84:	add	r0, pc, r0
   20d88:	add	r1, pc, r1
   20d8c:	add	r3, pc, r3
   20d90:	bl	14a78 <__assert_fail@plt>
   20d94:	andeq	r4, r3, ip, lsl #6
   20d98:	ldr	r0, [pc, #952]	; 21158 <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   20d9c:	ldr	r1, [pc, #952]	; 2115c <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   20da0:	ldr	r3, [pc, #952]	; 21160 <__flatcc_fb_gen_c_json_parser@@Base+0x2604>
   20da4:	movw	r2, #1626	; 0x65a
   20da8:	add	r0, pc, r0
   20dac:	add	r1, pc, r1
   20db0:	add	r3, pc, r3
   20db4:	bl	14a78 <__assert_fail@plt>
   20db8:	andeq	r3, r3, sl, asr #21
   20dbc:	ldr	r0, [pc, #940]	; 21170 <__flatcc_fb_gen_c_json_parser@@Base+0x2614>
   20dc0:	ldr	r1, [pc, #940]	; 21174 <__flatcc_fb_gen_c_json_parser@@Base+0x2618>
   20dc4:	ldr	r3, [pc, #940]	; 21178 <__flatcc_fb_gen_c_json_parser@@Base+0x261c>
   20dc8:	movw	r2, #1661	; 0x67d
   20dcc:	add	r0, pc, r0
   20dd0:	add	r1, pc, r1
   20dd4:	add	r3, pc, r3
   20dd8:	bl	14a78 <__assert_fail@plt>
   20ddc:	andeq	r2, r2, fp, lsl #27
   20de0:	ldr	r0, [pc, #916]	; 2117c <__flatcc_fb_gen_c_json_parser@@Base+0x2620>
   20de4:	ldr	r1, [pc, #916]	; 21180 <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   20de8:	ldr	r3, [pc, #916]	; 21184 <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   20dec:	movw	r2, #1665	; 0x681
   20df0:	add	r0, pc, r0
   20df4:	add	r1, pc, r1
   20df8:	add	r3, pc, r3
   20dfc:	bl	14a78 <__assert_fail@plt>
   20e00:			; <UNDEFINED> instruction: 0x00034eba
   20e04:	andeq	r4, r3, r2, lsr #30
   20e08:	add	r0, sp, #232	; 0xe8
   20e0c:	bl	2441c <__flatcc_fb_gen_c_json_parser@@Base+0x58c0>
   20e10:	ldr	r0, [pc, #772]	; 2111c <__flatcc_fb_gen_c_json_parser@@Base+0x25c0>
   20e14:	movw	r3, #1194	; 0x4aa
   20e18:	ldr	r0, [pc, r0]
   20e1c:	ldr	r0, [r0]
   20e20:	ldr	r1, [pc, #760]	; 21120 <__flatcc_fb_gen_c_json_parser@@Base+0x25c4>
   20e24:	add	r1, pc, r1
   20e28:	str	r1, [sp]
   20e2c:	ldr	r1, [pc, #752]	; 21124 <__flatcc_fb_gen_c_json_parser@@Base+0x25c8>
   20e30:	ldr	r4, [pc, #752]	; 21128 <__flatcc_fb_gen_c_json_parser@@Base+0x25cc>
   20e34:	add	r4, pc, r4
   20e38:	add	r1, pc, r1
   20e3c:	mov	r2, r4
   20e40:	bl	149b8 <fprintf@plt>
   20e44:	ldr	r0, [pc, #736]	; 2112c <__flatcc_fb_gen_c_json_parser@@Base+0x25d0>
   20e48:	ldr	r3, [pc, #736]	; 21130 <__flatcc_fb_gen_c_json_parser@@Base+0x25d4>
   20e4c:	mov	r1, r4
   20e50:	movw	r2, #1194	; 0x4aa
   20e54:	add	r0, pc, r0
   20e58:	add	r3, pc, r3
   20e5c:	bl	14a78 <__assert_fail@plt>
   20e60:	ldr	r0, [pc, #160]	; 20f08 <__flatcc_fb_gen_c_json_parser@@Base+0x23ac>
   20e64:	ldr	r1, [pc, #160]	; 20f0c <__flatcc_fb_gen_c_json_parser@@Base+0x23b0>
   20e68:	ldr	r3, [pc, #160]	; 20f10 <__flatcc_fb_gen_c_json_parser@@Base+0x23b4>
   20e6c:	movw	r2, #1210	; 0x4ba
   20e70:	add	r0, pc, r0
   20e74:	add	r1, pc, r1
   20e78:	add	r3, pc, r3
   20e7c:	bl	14a78 <__assert_fail@plt>
   20e80:	strdeq	r1, [r0], -ip
   20e84:	muleq	r3, r7, r7
   20e88:	muleq	r3, pc, r7	; <UNPREDICTABLE>
   20e8c:	andeq	r2, r3, r7, lsl #16
   20e90:	ldrdeq	r2, [r3], -r7
   20e94:	ldrdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   20e98:	andeq	r2, r3, fp, lsl sp
   20e9c:	andeq	fp, r4, r4, lsl r8
   20ea0:	andeq	r2, r3, sl, asr #28
   20ea4:	andeq	pc, r1, lr, lsr lr	; <UNPREDICTABLE>
   20ea8:	andeq	r2, r3, r7, asr #16
   20eac:	andeq	r0, r3, sl, ror #25
   20eb0:	andeq	r2, r3, r3, ror #26
   20eb4:	strdeq	r2, [r3], -r7
   20eb8:	strdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   20ebc:	andeq	r2, r3, fp, lsr sp
   20ec0:	andeq	fp, r4, r4, ror r8
   20ec4:	andeq	r2, r3, r6, lsr #30
   20ec8:	muleq	r1, lr, lr
   20ecc:	andeq	r2, r3, r7, lsr #17
   20ed0:	andeq	r0, r3, sl, asr #26
   20ed4:	andeq	r2, r3, r3, asr #27
   20ed8:	andeq	r4, r0, ip, lsl #11
   20edc:	andeq	r4, r0, r4, lsl r2
   20ee0:	andeq	r4, r0, r4, ror #7
   20ee4:	andeq	r4, r0, r4, lsr #7
   20ee8:	strdeq	r2, [r0], -r0
   20eec:	andeq	r3, r0, r0, lsr #24
   20ef0:	andeq	r3, r0, r0, asr #26
   20ef4:	andeq	r2, r3, r5, lsr #28
   20ef8:	andeq	r4, r3, sl, lsr fp
   20efc:	andeq	r5, r3, r7, asr #27
   20f00:	ldrdeq	r4, [r3], -sp
   20f04:	strdeq	r3, [r3], -sp
   20f08:	andeq	r2, r3, pc, ror #4
   20f0c:	andeq	r2, r3, r7, ror r2
   20f10:	andeq	r4, r3, r6, lsr #9
   20f14:	andeq	r3, r3, r6, ror #7
   20f18:	strdeq	r3, [r3], -r3	; <UNPREDICTABLE>
   20f1c:	strdeq	r3, [r3], -r5
   20f20:	andeq	r0, r2, lr, lsl r1
   20f24:	andeq	r3, r3, r1, ror #7
   20f28:	andeq	r3, r3, sl, asr r1
   20f2c:	ldrdeq	r2, [r2], -r7
   20f30:	andeq	r0, r2, lr, asr #32
   20f34:	andeq	r3, r3, sl, asr r0
   20f38:	andeq	r5, r3, r6, asr r3
   20f3c:	strdeq	r6, [r3], -r7
   20f40:	andeq	r5, r3, r4, ror r3
   20f44:	andeq	r5, r3, r1, lsl #7
   20f48:	andeq	r0, r2, r6, ror #14
   20f4c:	andeq	r5, r3, ip, ror r3
   20f50:	andeq	r5, r3, r7, lsl #7
   20f54:	muleq	r3, lr, r3
   20f58:	andeq	r5, r3, r3, lsr #2
   20f5c:	andeq	r5, r3, r7, asr #2
   20f60:	andeq	r5, r3, fp, ror #2
   20f64:	andeq	r5, r3, r1, ror #2
   20f68:	andeq	r2, r2, pc, ror r7
   20f6c:	andeq	r5, r3, r0, asr #2
   20f70:	andeq	r5, r3, r4, ror #2
   20f74:	andeq	r3, r3, r7, lsr r5
   20f78:	muleq	r3, r3, ip
   20f7c:	muleq	r3, fp, ip
   20f80:	andeq	r4, r3, r9, asr pc
   20f84:	andeq	r2, r3, sl, lsl pc
   20f88:	andeq	r5, r3, r6, lsl r2
   20f8c:			; <UNDEFINED> instruction: 0x000362b7
   20f90:	andeq	r5, r3, r8, lsl r4
   20f94:	andeq	r5, r3, r1, asr #4
   20f98:	andeq	r0, r2, r6, lsr #12
   20f9c:	andeq	r5, r3, r3, lsl #8
   20fa0:	andeq	r5, r3, r7, asr #4
   20fa4:	andeq	r5, r3, lr, asr r2
   20fa8:	andeq	r5, r3, fp, lsl r0
   20fac:	andeq	r5, r3, r4, asr r1
   20fb0:	andeq	r5, r3, r3, rrx
   20fb4:	andeq	r5, r3, r9, asr r0
   20fb8:	andeq	r2, r2, r7, ror r6
   20fbc:	andeq	r5, r3, r8, lsr r0
   20fc0:	andeq	r5, r3, ip, asr r0
   20fc4:	andeq	r3, r3, pc, lsr #8
   20fc8:	andeq	r2, r2, r3, lsr #12
   20fcc:	muleq	r2, sl, r2
   20fd0:	andeq	r6, r2, lr
   20fd4:	muleq	r3, fp, r0
   20fd8:	ldrdeq	r2, [r3], -r3
   20fdc:	ldrdeq	r2, [r3], -fp
   20fe0:	andeq	r2, r3, r3, asr #8
   20fe4:			; <UNDEFINED> instruction: 0x000327b7
   20fe8:			; <UNDEFINED> instruction: 0x000327bf
   20fec:	andeq	r2, r3, r7, lsr #16
   20ff0:	andeq	r2, r3, fp, lsr r4
   20ff4:	andeq	r2, r3, r3, asr #8
   20ff8:	andeq	r2, r3, fp, lsr #9
   20ffc:	andeq	r2, r3, pc, ror #12
   21000:	andeq	r2, r3, r7, ror r6
   21004:			; <UNDEFINED> instruction: 0x00032bb3
   21008:	andeq	r2, r3, fp, asr #12
   2100c:	andeq	r2, r3, r3, asr r6
   21010:	andeq	r2, r3, pc, lsl #23
   21014:	andeq	r2, r3, r7, lsr #12
   21018:	andeq	r2, r3, pc, lsr #12
   2101c:	andeq	r2, r3, fp, ror #22
   21020:	strdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   21024:	andeq	r2, r3, r7, lsl #12
   21028:	andeq	r2, r3, r3, asr #22
   2102c:	ldrdeq	r2, [r3], -fp
   21030:	andeq	r2, r3, r3, ror #11
   21034:	andeq	r2, r3, pc, lsl fp
   21038:			; <UNDEFINED> instruction: 0x000325bb
   2103c:	andeq	r2, r3, r3, asr #11
   21040:	strdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   21044:	muleq	r3, fp, r5
   21048:	andeq	r2, r3, r3, lsr #11
   2104c:	andeq	r2, r3, sp, lsl lr
   21050:	andeq	r2, r3, fp, ror r5
   21054:	andeq	r2, r3, r3, lsl #11
   21058:	strdeq	r2, [r3], -sp
   2105c:	andeq	r6, r2, lr, lsr #12
   21060:	strdeq	r2, [r3], -fp
   21064:	andeq	r3, r3, fp, asr #9
   21068:	andeq	fp, r4, r8, lsl #13
   2106c:	andeq	r2, r3, r1, asr #31
   21070:			; <UNDEFINED> instruction: 0x0001fcb2
   21074:			; <UNDEFINED> instruction: 0x000326bb
   21078:	andeq	r0, r3, lr, asr fp
   2107c:	andeq	r3, r3, fp, ror #8
   21080:	strdeq	r2, [r3], -r3
   21084:	strdeq	r2, [r3], -fp
   21088:	andeq	r3, r3, fp, asr #5
   2108c:	andeq	r2, r3, pc, asr #9
   21090:	ldrdeq	r2, [r3], -r7
   21094:	andeq	r3, r3, r7, lsr #5
   21098:	andeq	r6, r2, r2, ror #7
   2109c:	andeq	r2, r3, pc, lsr #9
   210a0:	andeq	r3, r3, pc, lsr #30
   210a4:	andeq	r2, r3, r3, lsl #9
   210a8:	andeq	r2, r3, fp, lsl #9
   210ac:	andeq	r3, r3, fp, lsl #30
   210b0:	andeq	r2, r3, pc, asr r4
   210b4:	andeq	r2, r3, r7, ror #8
   210b8:	andeq	r3, r3, r7, ror #29
   210bc:	andeq	r5, r2, lr, asr #31
   210c0:	andeq	r2, r3, r7, ror r7
   210c4:	andeq	r4, r3, r7, asr #8
   210c8:	andeq	fp, r4, r0, lsl r7
   210cc:	andeq	r3, r3, r9, asr #32
   210d0:	andeq	pc, r1, sl, lsr sp	; <UNPREDICTABLE>
   210d4:	andeq	r2, r3, r3, asr #14
   210d8:	andeq	r0, r3, r6, ror #23
   210dc:	strdeq	r4, [r3], -r3
   210e0:	andeq	r2, r3, fp, asr r5
   210e4:	andeq	r2, r3, r3, ror #10
   210e8:	andeq	r4, r3, r3, lsr r2
   210ec:	andeq	r2, r3, fp, lsl r4
   210f0:	andeq	r2, r3, r3, lsr #8
   210f4:	strdeq	r4, [r3], -r3
   210f8:	strdeq	r2, [r3], -r7
   210fc:	strdeq	r2, [r3], -pc	; <UNPREDICTABLE>
   21100:	andeq	r4, r3, pc, asr #1
   21104:	andeq	r2, r3, fp, lsr r5
   21108:	andeq	r2, r3, r3, asr #10
   2110c:	andeq	r4, r3, r3, lsl r2
   21110:	andeq	r2, r3, fp, lsl r5
   21114:	andeq	r2, r3, r3, lsr #10
   21118:	strdeq	r4, [r3], -r3
   2111c:	andeq	fp, r4, r4, lsl #5
   21120:			; <UNDEFINED> instruction: 0x00032bbd
   21124:	andeq	pc, r1, lr, lsr #17
   21128:			; <UNDEFINED> instruction: 0x000322b7
   2112c:	andeq	r0, r3, sl, asr r7
   21130:	andeq	r4, r3, r6, asr #9
   21134:	andeq	r2, r3, fp, asr r3
   21138:	andeq	r2, r3, r3, ror #6
   2113c:	muleq	r3, r2, r5
   21140:	muleq	r3, pc, r9	; <UNPREDICTABLE>
   21144:	andeq	r2, r3, r7, lsr #19
   21148:	ldrdeq	r4, [r3], -r6
   2114c:	andeq	r2, r3, fp, lsr #7
   21150:			; <UNDEFINED> instruction: 0x000323b3
   21154:	andeq	r4, r3, r1, ror r6
   21158:	andeq	r2, r3, r7, lsr r3
   2115c:	andeq	r2, r3, pc, lsr r3
   21160:	strdeq	r4, [r3], -sp
   21164:	andeq	r2, r3, r7, lsl #7
   21168:	andeq	r2, r3, pc, lsl #7
   2116c:	andeq	r4, r3, r0, lsr r8
   21170:	andeq	r2, r3, r3, lsl r3
   21174:	andeq	r2, r3, fp, lsl r3
   21178:			; <UNDEFINED> instruction: 0x000347bc
   2117c:	andeq	r2, r3, pc, ror #5
   21180:	strdeq	r2, [r3], -r7
   21184:	muleq	r3, r8, r7
   21188:	sub	sp, sp, #8
   2118c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21190:	add	fp, sp, #28
   21194:	sub	sp, sp, #4
   21198:	str	r3, [fp, #12]
   2119c:	str	r2, [fp, #8]
   211a0:	mov	r4, r0
   211a4:	mov	r8, r1
   211a8:	ldr	r0, [r0, #212]	; 0xd4
   211ac:	ldr	r5, [r4, #220]	; 0xdc
   211b0:	ldr	r6, [r0, #176]	; 0xb0
   211b4:	ldr	r0, [pc, #224]	; 2129c <__flatcc_fb_gen_c_json_parser@@Base+0x2740>
   211b8:	add	r0, pc, r0
   211bc:	ldrb	r0, [r0]
   211c0:	cmp	r0, #0
   211c4:	bne	211dc <__flatcc_fb_gen_c_json_parser@@Base+0x2680>
   211c8:	ldr	r0, [pc, #208]	; 212a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2744>
   211cc:	mov	r1, #32
   211d0:	mov	r2, #64	; 0x40
   211d4:	add	r0, pc, r0
   211d8:	bl	149d0 <memset@plt>
   211dc:	ldrb	r0, [r8]
   211e0:	cmp	r0, #0
   211e4:	beq	2127c <__flatcc_fb_gen_c_json_parser@@Base+0x2720>
   211e8:	ldr	r0, [r4, #204]!	; 0xcc
   211ec:	mul	sl, r6, r5
   211f0:	cmp	sl, #65	; 0x41
   211f4:	blt	2124c <__flatcc_fb_gen_c_json_parser@@Base+0x26f0>
   211f8:	mvn	r1, sl
   211fc:	ldr	r7, [pc, #160]	; 212a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2748>
   21200:	ldr	r5, [pc, #160]	; 212a8 <__flatcc_fb_gen_c_json_parser@@Base+0x274c>
   21204:	add	r6, sl, #64	; 0x40
   21208:	cmn	r1, #129	; 0x81
   2120c:	mvnle	r1, #128	; 0x80
   21210:	add	r1, r1, sl
   21214:	add	r1, r1, #64	; 0x40
   21218:	add	r7, pc, r7
   2121c:	add	r5, pc, r5
   21220:	bic	r9, r1, #63	; 0x3f
   21224:	mov	r1, r7
   21228:	mov	r2, #64	; 0x40
   2122c:	mov	r3, r5
   21230:	bl	149b8 <fprintf@plt>
   21234:	ldr	r0, [r4]
   21238:	sub	r6, r6, #64	; 0x40
   2123c:	cmp	r6, #128	; 0x80
   21240:	bgt	21224 <__flatcc_fb_gen_c_json_parser@@Base+0x26c8>
   21244:	sub	r1, sl, #64	; 0x40
   21248:	sub	sl, r1, r9
   2124c:	ldr	r1, [pc, #88]	; 212ac <__flatcc_fb_gen_c_json_parser@@Base+0x2750>
   21250:	ldr	r3, [pc, #88]	; 212b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2754>
   21254:	mov	r2, sl
   21258:	add	r1, pc, r1
   2125c:	add	r3, pc, r3
   21260:	bl	149b8 <fprintf@plt>
   21264:	add	r2, fp, #8
   21268:	mov	r1, r8
   2126c:	str	r2, [sp]
   21270:	ldr	r0, [r4]
   21274:	bl	14a0c <vfprintf@plt>
   21278:	b	21280 <__flatcc_fb_gen_c_json_parser@@Base+0x2724>
   2127c:	add	r4, r4, #204	; 0xcc
   21280:	ldr	r1, [r4]
   21284:	mov	r0, #10
   21288:	bl	14a18 <fputc@plt>
   2128c:	sub	sp, fp, #28
   21290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21294:	add	sp, sp, #8
   21298:	bx	lr
   2129c:	andeq	sl, r4, r0, lsl pc
   212a0:	strdeq	sl, [r4], -r4
   212a4:	andeq	r0, r3, r6, lsr #7
   212a8:	andeq	sl, r4, ip, lsr #29
   212ac:	andeq	r0, r3, r6, ror #6
   212b0:	andeq	sl, r4, ip, ror #28
   212b4:	push	{r4, r5, fp, lr}
   212b8:	add	fp, sp, #8
   212bc:	sub	sp, sp, #208	; 0xd0
   212c0:	add	r5, sp, #4
   212c4:	mov	r4, r0
   212c8:	mov	r0, r1
   212cc:	mov	r1, r5
   212d0:	bl	16af8 <__flatcc_fb_copy_scope@@Base>
   212d4:	ldr	r0, [r4, #208]	; 0xd0
   212d8:	mov	r3, r5
   212dc:	ldr	r2, [r0, #160]	; 0xa0
   212e0:	ldr	r1, [pc, #32]	; 21308 <__flatcc_fb_gen_c_json_parser@@Base+0x27ac>
   212e4:	mov	r0, r4
   212e8:	add	r1, pc, r1
   212ec:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   212f0:	ldr	r1, [pc, #20]	; 2130c <__flatcc_fb_gen_c_json_parser@@Base+0x27b0>
   212f4:	mov	r0, r4
   212f8:	add	r1, pc, r1
   212fc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21300:	sub	sp, fp, #8
   21304:	pop	{r4, r5, fp, pc}
   21308:	andeq	r2, r3, r8, ror #3
   2130c:			; <UNDEFINED> instruction: 0x00031fb3
   21310:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   21314:	add	fp, sp, #24
   21318:	sub	sp, sp, #264	; 0x108
   2131c:	mov	r4, r0
   21320:	mov	r0, #0
   21324:	mov	r5, r1
   21328:	vmov.i32	q8, #0	; 0x00000000
   2132c:	add	r1, sp, #8
   21330:	str	r0, [sp, #36]	; 0x24
   21334:	mov	r0, #12
   21338:	vst1.64	{d16-d17}, [r1], r0
   2133c:	vst1.32	{d16-d17}, [r1]
   21340:	ldrh	r0, [r5, #8]
   21344:	sub	r0, r0, #3
   21348:	uxth	r0, r0
   2134c:	cmp	r0, #2
   21350:	bcs	21578 <__flatcc_fb_gen_c_json_parser@@Base+0x2a1c>
   21354:	add	r1, sp, #36	; 0x24
   21358:	mov	r0, r5
   2135c:	bl	21a24 <__flatcc_fb_gen_c_json_parser@@Base+0x2ec8>
   21360:	ldr	r7, [sp, #36]	; 0x24
   21364:	cmp	r0, #0
   21368:	str	r0, [sp, #8]
   2136c:	bne	21378 <__flatcc_fb_gen_c_json_parser@@Base+0x281c>
   21370:	cmp	r7, #1
   21374:	bge	21598 <__flatcc_fb_gen_c_json_parser@@Base+0x2a3c>
   21378:	mov	r0, #2
   2137c:	add	r6, sp, #40	; 0x28
   21380:	mov	r1, #0
   21384:	mov	r2, #220	; 0xdc
   21388:	str	r0, [sp, #24]
   2138c:	str	r5, [sp, #20]
   21390:	ldr	r0, [pc, #624]	; 21608 <__flatcc_fb_gen_c_json_parser@@Base+0x2aac>
   21394:	add	r0, pc, r0
   21398:	str	r0, [sp, #12]
   2139c:	ldr	r0, [pc, #616]	; 2160c <__flatcc_fb_gen_c_json_parser@@Base+0x2ab0>
   213a0:	add	r0, pc, r0
   213a4:	str	r0, [sp, #16]
   213a8:	mov	r0, r6
   213ac:	bl	149d0 <memset@plt>
   213b0:	ldr	r0, [r5, #12]
   213b4:	mov	r1, r5
   213b8:	mov	r2, r6
   213bc:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   213c0:	ldr	r1, [pc, #584]	; 21610 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab4>
   213c4:	mov	r0, r4
   213c8:	mov	r2, r6
   213cc:	add	r1, pc, r1
   213d0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   213d4:	ldr	r0, [r4, #220]	; 0xdc
   213d8:	add	r0, r0, #2
   213dc:	str	r0, [r4, #220]	; 0xdc
   213e0:	mov	r0, r4
   213e4:	ldr	r1, [pc, #552]	; 21614 <__flatcc_fb_gen_c_json_parser@@Base+0x2ab8>
   213e8:	add	r1, pc, r1
   213ec:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   213f0:	ldr	r0, [r4, #220]	; 0xdc
   213f4:	cmp	r0, #0
   213f8:	beq	21558 <__flatcc_fb_gen_c_json_parser@@Base+0x29fc>
   213fc:	subs	r1, r0, #1
   21400:	str	r1, [r4, #220]	; 0xdc
   21404:	beq	21558 <__flatcc_fb_gen_c_json_parser@@Base+0x29fc>
   21408:	sub	r0, r0, #2
   2140c:	str	r0, [r4, #220]	; 0xdc
   21410:	mov	r0, r4
   21414:	ldr	r1, [pc, #508]	; 21618 <__flatcc_fb_gen_c_json_parser@@Base+0x2abc>
   21418:	add	r1, pc, r1
   2141c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21420:	ldr	r0, [r4, #220]	; 0xdc
   21424:	cmp	r7, #0
   21428:	add	r0, r0, #1
   2142c:	str	r0, [r4, #220]	; 0xdc
   21430:	beq	214dc <__flatcc_fb_gen_c_json_parser@@Base+0x2980>
   21434:	ldr	r1, [pc, #504]	; 21634 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad8>
   21438:	mov	r0, r4
   2143c:	add	r1, pc, r1
   21440:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21444:	ldr	r1, [pc, #492]	; 21638 <__flatcc_fb_gen_c_json_parser@@Base+0x2adc>
   21448:	mov	r0, r4
   2144c:	add	r1, pc, r1
   21450:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21454:	ldr	r1, [pc, #480]	; 2163c <__flatcc_fb_gen_c_json_parser@@Base+0x2ae0>
   21458:	mov	r0, r4
   2145c:	add	r1, pc, r1
   21460:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21464:	ldr	r1, [pc, #468]	; 21640 <__flatcc_fb_gen_c_json_parser@@Base+0x2ae4>
   21468:	mov	r0, r4
   2146c:	add	r1, pc, r1
   21470:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21474:	ldr	r1, [pc, #456]	; 21644 <__flatcc_fb_gen_c_json_parser@@Base+0x2ae8>
   21478:	mov	r0, r4
   2147c:	add	r1, pc, r1
   21480:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21484:	mov	r0, #0
   21488:	sub	r3, r7, #1
   2148c:	add	r1, sp, #8
   21490:	mov	r2, #0
   21494:	str	r0, [sp]
   21498:	mov	r0, r4
   2149c:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   214a0:	ldr	r1, [pc, #416]	; 21648 <__flatcc_fb_gen_c_json_parser@@Base+0x2aec>
   214a4:	mov	r0, r4
   214a8:	add	r1, pc, r1
   214ac:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   214b0:	ldr	r0, [r4, #220]	; 0xdc
   214b4:	cmp	r0, #0
   214b8:	bne	21518 <__flatcc_fb_gen_c_json_parser@@Base+0x29bc>
   214bc:	ldr	r0, [pc, #448]	; 21684 <__flatcc_fb_gen_c_json_parser@@Base+0x2b28>
   214c0:	ldr	r1, [pc, #448]	; 21688 <__flatcc_fb_gen_c_json_parser@@Base+0x2b2c>
   214c4:	ldr	r3, [pc, #448]	; 2168c <__flatcc_fb_gen_c_json_parser@@Base+0x2b30>
   214c8:	movw	r2, #1278	; 0x4fe
   214cc:	add	r0, pc, r0
   214d0:	add	r1, pc, r1
   214d4:	add	r3, pc, r3
   214d8:	bl	14a78 <__assert_fail@plt>
   214dc:	ldr	r1, [pc, #312]	; 2161c <__flatcc_fb_gen_c_json_parser@@Base+0x2ac0>
   214e0:	mov	r0, r4
   214e4:	add	r1, pc, r1
   214e8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   214ec:	ldr	r1, [pc, #300]	; 21620 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac4>
   214f0:	mov	r0, r4
   214f4:	add	r1, pc, r1
   214f8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   214fc:	ldr	r1, [pc, #288]	; 21624 <__flatcc_fb_gen_c_json_parser@@Base+0x2ac8>
   21500:	mov	r0, r4
   21504:	add	r1, pc, r1
   21508:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2150c:	ldr	r0, [r4, #220]	; 0xdc
   21510:	cmp	r0, #0
   21514:	beq	215e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2a8c>
   21518:	sub	r0, r0, #1
   2151c:	str	r0, [r4, #220]	; 0xdc
   21520:	mov	r0, r4
   21524:	ldr	r1, [pc, #288]	; 2164c <__flatcc_fb_gen_c_json_parser@@Base+0x2af0>
   21528:	add	r1, pc, r1
   2152c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21530:	ldr	r1, [pc, #280]	; 21650 <__flatcc_fb_gen_c_json_parser@@Base+0x2af4>
   21534:	mov	r0, r4
   21538:	add	r1, pc, r1
   2153c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21540:	ldr	r0, [sp, #8]
   21544:	cmp	r0, #0
   21548:	beq	21550 <__flatcc_fb_gen_c_json_parser@@Base+0x29f4>
   2154c:	bl	148f8 <free@plt>
   21550:	sub	sp, fp, #24
   21554:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   21558:	ldr	r0, [pc, #280]	; 21678 <__flatcc_fb_gen_c_json_parser@@Base+0x2b1c>
   2155c:	ldr	r1, [pc, #280]	; 2167c <__flatcc_fb_gen_c_json_parser@@Base+0x2b20>
   21560:	ldr	r3, [pc, #280]	; 21680 <__flatcc_fb_gen_c_json_parser@@Base+0x2b24>
   21564:	movw	r2, #1263	; 0x4ef
   21568:	add	r0, pc, r0
   2156c:	add	r1, pc, r1
   21570:	add	r3, pc, r3
   21574:	bl	14a78 <__assert_fail@plt>
   21578:	ldr	r0, [pc, #212]	; 21654 <__flatcc_fb_gen_c_json_parser@@Base+0x2af8>
   2157c:	ldr	r1, [pc, #212]	; 21658 <__flatcc_fb_gen_c_json_parser@@Base+0x2afc>
   21580:	ldr	r3, [pc, #212]	; 2165c <__flatcc_fb_gen_c_json_parser@@Base+0x2b00>
   21584:	movw	r2, #1246	; 0x4de
   21588:	add	r0, pc, r0
   2158c:	add	r1, pc, r1
   21590:	add	r3, pc, r3
   21594:	bl	14a78 <__assert_fail@plt>
   21598:	ldr	r0, [pc, #192]	; 21660 <__flatcc_fb_gen_c_json_parser@@Base+0x2b04>
   2159c:	movw	r3, #1249	; 0x4e1
   215a0:	ldr	r0, [pc, r0]
   215a4:	ldr	r0, [r0]
   215a8:	ldr	r1, [pc, #180]	; 21664 <__flatcc_fb_gen_c_json_parser@@Base+0x2b08>
   215ac:	add	r1, pc, r1
   215b0:	str	r1, [sp]
   215b4:	ldr	r1, [pc, #172]	; 21668 <__flatcc_fb_gen_c_json_parser@@Base+0x2b0c>
   215b8:	ldr	r4, [pc, #172]	; 2166c <__flatcc_fb_gen_c_json_parser@@Base+0x2b10>
   215bc:	add	r4, pc, r4
   215c0:	add	r1, pc, r1
   215c4:	mov	r2, r4
   215c8:	bl	149b8 <fprintf@plt>
   215cc:	ldr	r0, [pc, #156]	; 21670 <__flatcc_fb_gen_c_json_parser@@Base+0x2b14>
   215d0:	ldr	r3, [pc, #156]	; 21674 <__flatcc_fb_gen_c_json_parser@@Base+0x2b18>
   215d4:	mov	r1, r4
   215d8:	movw	r2, #1249	; 0x4e1
   215dc:	add	r0, pc, r0
   215e0:	add	r3, pc, r3
   215e4:	bl	14a78 <__assert_fail@plt>
   215e8:	ldr	r0, [pc, #56]	; 21628 <__flatcc_fb_gen_c_json_parser@@Base+0x2acc>
   215ec:	ldr	r1, [pc, #56]	; 2162c <__flatcc_fb_gen_c_json_parser@@Base+0x2ad0>
   215f0:	ldr	r3, [pc, #56]	; 21630 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad4>
   215f4:	movw	r2, #1269	; 0x4f5
   215f8:	add	r0, pc, r0
   215fc:	add	r1, pc, r1
   21600:	add	r3, pc, r3
   21604:	bl	14a78 <__assert_fail@plt>
   21608:	andeq	r0, r0, r0, lsr #16
   2160c:	andeq	r0, r0, r4, lsl #19
   21610:	andeq	r1, r3, ip, ror lr
   21614:	andeq	r2, r3, r5, lsr r6
   21618:	andeq	r5, r3, fp, lsr r0
   2161c:	andeq	r2, r3, fp, ror #10
   21620:	andeq	r2, r3, r5, ror r5
   21624:	andeq	r2, r3, r5, ror r5
   21628:	andeq	r1, r3, r7, ror #21
   2162c:	andeq	r1, r3, pc, ror #21
   21630:	andeq	r2, r3, r8, lsr #7
   21634:	andeq	r2, r3, sl, asr r6
   21638:	andeq	r2, r3, r7, ror #12
   2163c:	andeq	r2, r3, r9, ror #12
   21640:	muleq	r1, r2, r3
   21644:	andeq	r2, r3, r5, asr r6
   21648:	andeq	r2, r3, lr, asr #7
   2164c:	andeq	r1, r2, pc, asr #12
   21650:	andeq	pc, r1, r6, asr #5
   21654:	ldrdeq	r5, [r2], -fp
   21658:	andeq	r1, r3, pc, asr fp
   2165c:	andeq	r2, r3, r8, lsl r4
   21660:	strdeq	sl, [r4], -ip
   21664:	andeq	r2, r3, r5, lsr r4
   21668:	andeq	pc, r1, r6, lsr #2
   2166c:	andeq	r1, r3, pc, lsr #22
   21670:	ldrdeq	pc, [r2], -r2
   21674:	andeq	r2, r3, r8, asr #7
   21678:	andeq	r1, r3, r7, ror fp
   2167c:	andeq	r1, r3, pc, ror fp
   21680:	andeq	r2, r3, r8, lsr r4
   21684:	andeq	r1, r3, r3, lsl ip
   21688:	andeq	r1, r3, fp, lsl ip
   2168c:	ldrdeq	r2, [r3], -r4
   21690:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   21694:	add	fp, sp, #24
   21698:	sub	sp, sp, #256	; 0x100
   2169c:	mov	r5, r1
   216a0:	mov	r4, r0
   216a4:	vmov.i32	q8, #0	; 0x00000000
   216a8:	mov	r0, #12
   216ac:	sub	r1, fp, #72	; 0x48
   216b0:	vst1.64	{d16-d17}, [r1], r0
   216b4:	mov	r0, r5
   216b8:	vst1.32	{d16-d17}, [r1]
   216bc:	add	r1, sp, #4
   216c0:	bl	16af8 <__flatcc_fb_copy_scope@@Base>
   216c4:	ldr	r0, [r4, #208]	; 0xd0
   216c8:	mov	r6, #0
   216cc:	add	r5, r5, #4
   216d0:	sub	r2, fp, #40	; 0x28
   216d4:	str	r6, [fp, #-40]	; 0xffffffd8
   216d8:	str	r6, [fp, #-32]	; 0xffffffe0
   216dc:	str	r0, [fp, #-36]	; 0xffffffdc
   216e0:	mov	r0, r5
   216e4:	ldr	r1, [pc, #692]	; 219a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   216e8:	add	r1, pc, r1
   216ec:	bl	28e38 <fb_symbol_table_visit@@Base>
   216f0:	ldr	r8, [fp, #-40]	; 0xffffffd8
   216f4:	cmp	r8, #0
   216f8:	beq	21744 <__flatcc_fb_gen_c_json_parser@@Base+0x2be8>
   216fc:	lsl	r0, r8, #4
   21700:	bl	14964 <malloc@plt>
   21704:	cmp	r0, #0
   21708:	beq	21744 <__flatcc_fb_gen_c_json_parser@@Base+0x2be8>
   2170c:	str	r0, [fp, #-32]	; 0xffffffe0
   21710:	mov	r7, r0
   21714:	sub	r2, fp, #40	; 0x28
   21718:	mov	r0, r5
   2171c:	ldr	r1, [pc, #640]	; 219a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   21720:	add	r1, pc, r1
   21724:	bl	28e38 <fb_symbol_table_visit@@Base>
   21728:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2172c:	ldr	r3, [pc, #628]	; 219a8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4c>
   21730:	mov	r0, r7
   21734:	mov	r2, #16
   21738:	add	r3, pc, r3
   2173c:	bl	14a3c <qsort@plt>
   21740:	mov	r6, r7
   21744:	cmp	r8, #1
   21748:	str	r6, [fp, #-72]	; 0xffffffb8
   2174c:	blt	21758 <__flatcc_fb_gen_c_json_parser@@Base+0x2bfc>
   21750:	cmp	r6, #0
   21754:	beq	21930 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd4>
   21758:	mov	r0, #3
   2175c:	add	r3, sp, #4
   21760:	str	r0, [fp, #-56]	; 0xffffffc8
   21764:	mov	r0, #0
   21768:	str	r0, [fp, #-60]	; 0xffffffc4
   2176c:	ldr	r0, [pc, #568]	; 219ac <__flatcc_fb_gen_c_json_parser@@Base+0x2e50>
   21770:	add	r0, pc, r0
   21774:	str	r0, [fp, #-68]	; 0xffffffbc
   21778:	ldr	r0, [pc, #560]	; 219b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e54>
   2177c:	add	r0, pc, r0
   21780:	str	r0, [fp, #-64]	; 0xffffffc0
   21784:	ldr	r0, [r4, #208]	; 0xd0
   21788:	ldr	r2, [r0, #160]	; 0xa0
   2178c:	ldr	r1, [pc, #544]	; 219b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e58>
   21790:	mov	r0, r4
   21794:	add	r1, pc, r1
   21798:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2179c:	ldr	r0, [r4, #220]	; 0xdc
   217a0:	add	r0, r0, #2
   217a4:	str	r0, [r4, #220]	; 0xdc
   217a8:	mov	r0, r4
   217ac:	ldr	r1, [pc, #516]	; 219b8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e5c>
   217b0:	add	r1, pc, r1
   217b4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   217b8:	ldr	r0, [r4, #220]	; 0xdc
   217bc:	cmp	r0, #0
   217c0:	beq	21910 <__flatcc_fb_gen_c_json_parser@@Base+0x2db4>
   217c4:	subs	r1, r0, #1
   217c8:	str	r1, [r4, #220]	; 0xdc
   217cc:	beq	21910 <__flatcc_fb_gen_c_json_parser@@Base+0x2db4>
   217d0:	sub	r0, r0, #2
   217d4:	str	r0, [r4, #220]	; 0xdc
   217d8:	mov	r0, r4
   217dc:	ldr	r1, [pc, #472]	; 219bc <__flatcc_fb_gen_c_json_parser@@Base+0x2e60>
   217e0:	add	r1, pc, r1
   217e4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   217e8:	ldr	r0, [r4, #220]	; 0xdc
   217ec:	cmp	r8, #0
   217f0:	add	r0, r0, #1
   217f4:	str	r0, [r4, #220]	; 0xdc
   217f8:	beq	218a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d48>
   217fc:	ldr	r1, [pc, #464]	; 219d4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e78>
   21800:	mov	r0, r4
   21804:	add	r1, pc, r1
   21808:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2180c:	ldr	r1, [pc, #452]	; 219d8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e7c>
   21810:	mov	r0, r4
   21814:	add	r1, pc, r1
   21818:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2181c:	ldr	r1, [pc, #440]	; 219dc <__flatcc_fb_gen_c_json_parser@@Base+0x2e80>
   21820:	mov	r0, r4
   21824:	add	r1, pc, r1
   21828:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2182c:	ldr	r1, [pc, #428]	; 219e0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e84>
   21830:	mov	r0, r4
   21834:	add	r1, pc, r1
   21838:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2183c:	ldr	r1, [pc, #416]	; 219e4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e88>
   21840:	mov	r0, r4
   21844:	add	r1, pc, r1
   21848:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2184c:	mov	r0, #0
   21850:	sub	r3, r8, #1
   21854:	sub	r1, fp, #72	; 0x48
   21858:	mov	r2, #0
   2185c:	str	r0, [sp]
   21860:	mov	r0, r4
   21864:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   21868:	ldr	r1, [pc, #376]	; 219e8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e8c>
   2186c:	mov	r0, r4
   21870:	add	r1, pc, r1
   21874:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21878:	ldr	r0, [r4, #220]	; 0xdc
   2187c:	cmp	r0, #0
   21880:	bne	218d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d74>
   21884:	ldr	r0, [pc, #396]	; 21a18 <__flatcc_fb_gen_c_json_parser@@Base+0x2ebc>
   21888:	ldr	r1, [pc, #396]	; 21a1c <__flatcc_fb_gen_c_json_parser@@Base+0x2ec0>
   2188c:	ldr	r3, [pc, #396]	; 21a20 <__flatcc_fb_gen_c_json_parser@@Base+0x2ec4>
   21890:	movw	r2, #1166	; 0x48e
   21894:	add	r0, pc, r0
   21898:	add	r1, pc, r1
   2189c:	add	r3, pc, r3
   218a0:	bl	14a78 <__assert_fail@plt>
   218a4:	ldr	r1, [pc, #276]	; 219c0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e64>
   218a8:	mov	r0, r4
   218ac:	add	r1, pc, r1
   218b0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   218b4:	ldr	r1, [pc, #264]	; 219c4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e68>
   218b8:	mov	r0, r4
   218bc:	add	r1, pc, r1
   218c0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   218c4:	ldr	r0, [r4, #220]	; 0xdc
   218c8:	cmp	r0, #0
   218cc:	beq	21980 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   218d0:	sub	r0, r0, #1
   218d4:	str	r0, [r4, #220]	; 0xdc
   218d8:	mov	r0, r4
   218dc:	ldr	r1, [pc, #264]	; 219ec <__flatcc_fb_gen_c_json_parser@@Base+0x2e90>
   218e0:	add	r1, pc, r1
   218e4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   218e8:	ldr	r1, [pc, #256]	; 219f0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e94>
   218ec:	mov	r0, r4
   218f0:	add	r1, pc, r1
   218f4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   218f8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   218fc:	cmp	r0, #0
   21900:	beq	21908 <__flatcc_fb_gen_c_json_parser@@Base+0x2dac>
   21904:	bl	148f8 <free@plt>
   21908:	sub	sp, fp, #24
   2190c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   21910:	ldr	r0, [pc, #244]	; 21a0c <__flatcc_fb_gen_c_json_parser@@Base+0x2eb0>
   21914:	ldr	r1, [pc, #244]	; 21a10 <__flatcc_fb_gen_c_json_parser@@Base+0x2eb4>
   21918:	ldr	r3, [pc, #244]	; 21a14 <__flatcc_fb_gen_c_json_parser@@Base+0x2eb8>
   2191c:	mov	r2, #1152	; 0x480
   21920:	add	r0, pc, r0
   21924:	add	r1, pc, r1
   21928:	add	r3, pc, r3
   2192c:	bl	14a78 <__assert_fail@plt>
   21930:	ldr	r0, [pc, #188]	; 219f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e98>
   21934:	movw	r3, #1140	; 0x474
   21938:	ldr	r0, [pc, r0]
   2193c:	ldr	r0, [r0]
   21940:	ldr	r1, [pc, #176]	; 219f8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e9c>
   21944:	add	r1, pc, r1
   21948:	str	r1, [sp]
   2194c:	ldr	r1, [pc, #168]	; 219fc <__flatcc_fb_gen_c_json_parser@@Base+0x2ea0>
   21950:	ldr	r4, [pc, #168]	; 21a00 <__flatcc_fb_gen_c_json_parser@@Base+0x2ea4>
   21954:	add	r4, pc, r4
   21958:	add	r1, pc, r1
   2195c:	mov	r2, r4
   21960:	bl	149b8 <fprintf@plt>
   21964:	ldr	r0, [pc, #152]	; 21a04 <__flatcc_fb_gen_c_json_parser@@Base+0x2ea8>
   21968:	ldr	r3, [pc, #152]	; 21a08 <__flatcc_fb_gen_c_json_parser@@Base+0x2eac>
   2196c:	mov	r1, r4
   21970:	movw	r2, #1140	; 0x474
   21974:	add	r0, pc, r0
   21978:	add	r3, pc, r3
   2197c:	bl	14a78 <__assert_fail@plt>
   21980:	ldr	r0, [pc, #64]	; 219c8 <__flatcc_fb_gen_c_json_parser@@Base+0x2e6c>
   21984:	ldr	r1, [pc, #64]	; 219cc <__flatcc_fb_gen_c_json_parser@@Base+0x2e70>
   21988:	ldr	r3, [pc, #64]	; 219d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   2198c:	movw	r2, #1157	; 0x485
   21990:	add	r0, pc, r0
   21994:	add	r1, pc, r1
   21998:	add	r3, pc, r3
   2199c:	bl	14a78 <__assert_fail@plt>
   219a0:	muleq	r0, r0, ip
   219a4:	muleq	r0, r8, ip
   219a8:	andeq	r1, r0, r4, lsr #10
   219ac:	andeq	r2, r0, ip, asr #21
   219b0:	andeq	r2, r0, ip, ror #23
   219b4:	andeq	r1, r3, ip, lsr sp
   219b8:	andeq	r3, r3, r6, ror #19
   219bc:	andeq	r4, r3, r3, ror ip
   219c0:	andeq	r3, r3, ip, lsl r9
   219c4:			; <UNDEFINED> instruction: 0x000321bd
   219c8:	andeq	r1, r3, pc, asr #14
   219cc:	andeq	r1, r3, r7, asr r7
   219d0:	andeq	r3, r3, ip, asr #15
   219d4:	muleq	r3, r2, r2
   219d8:	muleq	r3, pc, r2	; <UNPREDICTABLE>
   219dc:	andeq	r2, r3, r1, lsr #5
   219e0:	andeq	lr, r1, sl, asr #31
   219e4:	andeq	r2, r3, sp, lsl #5
   219e8:	andeq	r2, r3, r6
   219ec:	muleq	r2, r7, r2
   219f0:	andeq	lr, r1, lr, lsl #30
   219f4:	andeq	sl, r4, r4, ror #14
   219f8:	muleq	r3, sp, r0
   219fc:	andeq	lr, r1, lr, lsl #27
   21a00:	muleq	r3, r7, r7
   21a04:	andeq	pc, r2, sl, lsr ip	; <UNPREDICTABLE>
   21a08:	andeq	r3, r3, ip, ror #15
   21a0c:			; <UNDEFINED> instruction: 0x000317bf
   21a10:	andeq	r1, r3, r7, asr #15
   21a14:	andeq	r3, r3, ip, lsr r8
   21a18:	andeq	r1, r3, fp, asr #16
   21a1c:	andeq	r1, r3, r3, asr r8
   21a20:	andeq	r3, r3, r8, asr #17
   21a24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21a28:	add	fp, sp, #28
   21a2c:	sub	sp, sp, #4
   21a30:	ldr	r7, [r0, #20]
   21a34:	cmp	r7, #0
   21a38:	beq	21ba4 <__flatcc_fb_gen_c_json_parser@@Base+0x3048>
   21a3c:	mov	r0, #0
   21a40:	movw	r2, #65534	; 0xfffe
   21a44:	mov	r3, r7
   21a48:	mov	r4, #0
   21a4c:	ldrb	r6, [r3, #72]	; 0x48
   21a50:	tst	r6, #4
   21a54:	bne	21a90 <__flatcc_fb_gen_c_json_parser@@Base+0x2f34>
   21a58:	ldrh	r6, [r3, #24]
   21a5c:	and	r6, r6, r2
   21a60:	cmp	r6, #14
   21a64:	bne	21a8c <__flatcc_fb_gen_c_json_parser@@Base+0x2f30>
   21a68:	ldr	r6, [r3, #16]
   21a6c:	ldrh	r6, [r6, #8]
   21a70:	cmp	r6, #4
   21a74:	bne	21a8c <__flatcc_fb_gen_c_json_parser@@Base+0x2f30>
   21a78:	ldr	r6, [r3, #4]
   21a7c:	add	r4, r4, #1
   21a80:	ldr	r6, [r6, #4]
   21a84:	add	r0, r0, r6
   21a88:	add	r0, r0, #6
   21a8c:	add	r4, r4, #1
   21a90:	ldr	r3, [r3]
   21a94:	cmp	r3, #0
   21a98:	bne	21a4c <__flatcc_fb_gen_c_json_parser@@Base+0x2ef0>
   21a9c:	mov	r6, #0
   21aa0:	cmp	r4, #0
   21aa4:	str	r4, [r1]
   21aa8:	beq	21bac <__flatcc_fb_gen_c_json_parser@@Base+0x3050>
   21aac:	add	r0, r0, r4, lsl #4
   21ab0:	bl	14964 <malloc@plt>
   21ab4:	cmp	r0, #0
   21ab8:	str	r0, [sp]
   21abc:	beq	21bac <__flatcc_fb_gen_c_json_parser@@Base+0x3050>
   21ac0:	cmp	r7, #0
   21ac4:	beq	21b84 <__flatcc_fb_gen_c_json_parser@@Base+0x3028>
   21ac8:	ldr	r8, [sp]
   21acc:	lsl	r0, r4, #4
   21ad0:	mov	r9, #0
   21ad4:	movw	r5, #65534	; 0xfffe
   21ad8:	mov	sl, #0
   21adc:	add	r6, r8, r0
   21ae0:	ldrb	r0, [r7, #72]	; 0x48
   21ae4:	tst	r0, #4
   21ae8:	bne	21b78 <__flatcc_fb_gen_c_json_parser@@Base+0x301c>
   21aec:	ldr	r0, [r7, #4]
   21af0:	ldr	r1, [r0]
   21af4:	str	r1, [r8]
   21af8:	ldr	r2, [r0, #4]
   21afc:	stmib	r8, {r2, r7, r9}
   21b00:	ldrh	r0, [r7, #24]
   21b04:	and	r3, r0, r5
   21b08:	add	r0, r8, #16
   21b0c:	cmp	r3, #14
   21b10:	bne	21b74 <__flatcc_fb_gen_c_json_parser@@Base+0x3018>
   21b14:	ldr	r3, [r7, #16]
   21b18:	ldrh	r3, [r3, #8]
   21b1c:	cmp	r3, #4
   21b20:	bne	21b74 <__flatcc_fb_gen_c_json_parser@@Base+0x3018>
   21b24:	add	r0, r2, #5
   21b28:	str	sl, [r7, #112]	; 0x70
   21b2c:	str	r6, [r8, #16]
   21b30:	str	r0, [r8, #20]
   21b34:	mov	r0, r6
   21b38:	bl	14904 <memcpy@plt>
   21b3c:	ldr	r0, [r7, #4]
   21b40:	movw	r1, #29791	; 0x745f
   21b44:	add	sl, sl, #1
   21b48:	movt	r1, #28793	; 0x7079
   21b4c:	ldr	r0, [r0, #4]
   21b50:	str	r1, [r6, r0]!
   21b54:	mov	r0, #101	; 0x65
   21b58:	strh	r0, [r6, #4]
   21b5c:	mov	r0, #1
   21b60:	str	r7, [r8, #24]
   21b64:	add	r6, r6, #6
   21b68:	str	r0, [r8, #28]
   21b6c:	add	r8, r8, #32
   21b70:	b	21b78 <__flatcc_fb_gen_c_json_parser@@Base+0x301c>
   21b74:	mov	r8, r0
   21b78:	ldr	r7, [r7]
   21b7c:	cmp	r7, #0
   21b80:	bne	21ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x2f84>
   21b84:	ldr	r3, [pc, #44]	; 21bb8 <__flatcc_fb_gen_c_json_parser@@Base+0x305c>
   21b88:	ldr	r6, [sp]
   21b8c:	mov	r1, r4
   21b90:	mov	r2, #16
   21b94:	add	r3, pc, r3
   21b98:	mov	r0, r6
   21b9c:	bl	14a3c <qsort@plt>
   21ba0:	b	21bac <__flatcc_fb_gen_c_json_parser@@Base+0x3050>
   21ba4:	mov	r6, #0
   21ba8:	str	r6, [r1]
   21bac:	mov	r0, r6
   21bb0:	sub	sp, fp, #28
   21bb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21bb8:	andeq	r1, r0, r8, asr #1
   21bbc:	push	{r4, r5, r6, sl, fp, lr}
   21bc0:	add	fp, sp, #16
   21bc4:	sub	sp, sp, #8
   21bc8:	mov	r6, r1
   21bcc:	ldr	r1, [pc, #288]	; 21cf4 <__flatcc_fb_gen_c_json_parser@@Base+0x3198>
   21bd0:	mov	r5, r2
   21bd4:	ldr	r2, [fp, #8]
   21bd8:	mov	r4, r0
   21bdc:	add	r1, pc, r1
   21be0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21be4:	ldr	r1, [pc, #268]	; 21cf8 <__flatcc_fb_gen_c_json_parser@@Base+0x319c>
   21be8:	mov	r0, r4
   21bec:	add	r1, pc, r1
   21bf0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21bf4:	ldr	r0, [r4, #220]	; 0xdc
   21bf8:	add	r0, r0, #1
   21bfc:	str	r0, [r4, #220]	; 0xdc
   21c00:	ldr	r0, [r6, #40]	; 0x28
   21c04:	sub	r1, r0, #1
   21c08:	cmp	r1, #5
   21c0c:	bcs	21c18 <__flatcc_fb_gen_c_json_parser@@Base+0x30bc>
   21c10:	ldrd	r2, [r5, #48]	; 0x30
   21c14:	b	21c30 <__flatcc_fb_gen_c_json_parser@@Base+0x30d4>
   21c18:	sub	r0, r0, #6
   21c1c:	cmp	r0, #4
   21c20:	bcs	21c84 <__flatcc_fb_gen_c_json_parser@@Base+0x3128>
   21c24:	ldrd	r2, [r5, #48]	; 0x30
   21c28:	cmn	r3, #1
   21c2c:	ble	21c78 <__flatcc_fb_gen_c_json_parser@@Base+0x311c>
   21c30:	ldr	r1, [pc, #204]	; 21d04 <__flatcc_fb_gen_c_json_parser@@Base+0x31a8>
   21c34:	add	r1, pc, r1
   21c38:	mov	r0, r4
   21c3c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21c40:	ldr	r0, [r4, #220]	; 0xdc
   21c44:	cmp	r0, #0
   21c48:	beq	21cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x3178>
   21c4c:	sub	r0, r0, #1
   21c50:	str	r0, [r4, #220]	; 0xdc
   21c54:	mov	r0, r4
   21c58:	ldr	r1, [pc, #160]	; 21d00 <__flatcc_fb_gen_c_json_parser@@Base+0x31a4>
   21c5c:	add	r1, pc, r1
   21c60:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21c64:	ldr	r0, [r4, #220]	; 0xdc
   21c68:	add	r0, r0, #1
   21c6c:	str	r0, [r4, #220]	; 0xdc
   21c70:	sub	sp, fp, #16
   21c74:	pop	{r4, r5, r6, sl, fp, pc}
   21c78:	ldr	r1, [pc, #124]	; 21cfc <__flatcc_fb_gen_c_json_parser@@Base+0x31a0>
   21c7c:	add	r1, pc, r1
   21c80:	b	21c38 <__flatcc_fb_gen_c_json_parser@@Base+0x30dc>
   21c84:	ldr	r0, [pc, #124]	; 21d08 <__flatcc_fb_gen_c_json_parser@@Base+0x31ac>
   21c88:	movw	r3, #710	; 0x2c6
   21c8c:	ldr	r0, [pc, r0]
   21c90:	ldr	r0, [r0]
   21c94:	ldr	r1, [pc, #112]	; 21d0c <__flatcc_fb_gen_c_json_parser@@Base+0x31b0>
   21c98:	add	r1, pc, r1
   21c9c:	str	r1, [sp]
   21ca0:	ldr	r1, [pc, #104]	; 21d10 <__flatcc_fb_gen_c_json_parser@@Base+0x31b4>
   21ca4:	ldr	r4, [pc, #104]	; 21d14 <__flatcc_fb_gen_c_json_parser@@Base+0x31b8>
   21ca8:	add	r4, pc, r4
   21cac:	add	r1, pc, r1
   21cb0:	mov	r2, r4
   21cb4:	bl	149b8 <fprintf@plt>
   21cb8:	ldr	r0, [pc, #88]	; 21d18 <__flatcc_fb_gen_c_json_parser@@Base+0x31bc>
   21cbc:	ldr	r3, [pc, #88]	; 21d1c <__flatcc_fb_gen_c_json_parser@@Base+0x31c0>
   21cc0:	mov	r1, r4
   21cc4:	movw	r2, #710	; 0x2c6
   21cc8:	add	r0, pc, r0
   21ccc:	add	r3, pc, r3
   21cd0:	bl	14a78 <__assert_fail@plt>
   21cd4:	ldr	r0, [pc, #68]	; 21d20 <__flatcc_fb_gen_c_json_parser@@Base+0x31c4>
   21cd8:	ldr	r1, [pc, #68]	; 21d24 <__flatcc_fb_gen_c_json_parser@@Base+0x31c8>
   21cdc:	ldr	r3, [pc, #68]	; 21d28 <__flatcc_fb_gen_c_json_parser@@Base+0x31cc>
   21ce0:	movw	r2, #719	; 0x2cf
   21ce4:	add	r0, pc, r0
   21ce8:	add	r1, pc, r1
   21cec:	add	r3, pc, r3
   21cf0:	bl	14a78 <__assert_fail@plt>
   21cf4:	andeq	r1, r3, r3, lsr #30
   21cf8:	andeq	r1, r3, r3, ror #30
   21cfc:	andeq	r1, r3, fp, asr pc
   21d00:	andeq	r1, r3, sl, asr #23
   21d04:	andeq	r1, r3, r9, ror pc
   21d08:	andeq	sl, r4, r0, lsl r4
   21d0c:	andeq	r1, r3, r9, ror #30
   21d10:	andeq	lr, r1, sl, lsr sl
   21d14:	andeq	r1, r3, r3, asr #8
   21d18:	andeq	pc, r2, r6, ror #17
   21d1c:	andeq	r1, r3, r8, asr pc
   21d20:	strdeq	r1, [r3], -fp
   21d24:	andeq	r1, r3, r3, lsl #8
   21d28:	andeq	r1, r3, r6, ror lr
   21d2c:	ldr	r1, [pc, #4]	; 21d38 <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   21d30:	add	r1, pc, r1
   21d34:	b	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   21d38:	andeq	r1, r3, r2, asr #30
   21d3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21d40:	add	fp, sp, #28
   21d44:	sub	sp, sp, #92	; 0x5c
   21d48:	ldr	lr, [r1]
   21d4c:	ldr	r5, [fp, #8]
   21d50:	str	r2, [sp, #44]	; 0x2c
   21d54:	mvn	r7, #7
   21d58:	add	r2, lr, r2, lsl #4
   21d5c:	sub	r6, r7, r5
   21d60:	add	r7, r5, #8
   21d64:	ldr	r4, [r2, #4]
   21d68:	cmp	r7, r4
   21d6c:	bgt	220cc <__flatcc_fb_gen_c_json_parser@@Base+0x3570>
   21d70:	rsb	r2, r4, #0
   21d74:	cmp	r6, r2
   21d78:	beq	220cc <__flatcc_fb_gen_c_json_parser@@Base+0x3570>
   21d7c:	str	r4, [sp, #16]
   21d80:	str	r6, [sp, #12]
   21d84:	str	r7, [sp, #20]
   21d88:	str	r1, [sp, #28]
   21d8c:	str	r0, [sp, #24]
   21d90:	str	r3, [sp, #36]	; 0x24
   21d94:	mov	r9, #0
   21d98:	vmov.i64	d17, #0xffffffff00000000
   21d9c:	vmov.i8	d18, #255	; 0xff
   21da0:	vmov.i32	d19, #56	; 0x00000038
   21da4:	vmov.i64	q10, #0x00000000000000ff
   21da8:	vmvn.i32	d16, #1	; 0x00000001
   21dac:	mov	r7, #0
   21db0:	mov	r2, #0
   21db4:	ldr	r1, [sp, #44]	; 0x2c
   21db8:	sub	r0, r3, r1
   21dbc:	mov	r3, #0
   21dc0:	add	r0, r0, r0, lsr #31
   21dc4:	add	r0, r1, r0, asr #1
   21dc8:	sub	r1, r5, #1
   21dcc:	str	r1, [sp, #40]	; 0x28
   21dd0:	mov	r1, #0
   21dd4:	str	r1, [sp, #48]	; 0x30
   21dd8:	mov	r1, #0
   21ddc:	str	r1, [sp, #52]	; 0x34
   21de0:	str	r0, [sp, #32]
   21de4:	str	r0, [sp, #56]	; 0x38
   21de8:	str	r5, [fp, #-56]	; 0xffffffc8
   21dec:	str	lr, [sp, #60]	; 0x3c
   21df0:	ldr	sl, [sp, #56]	; 0x38
   21df4:	ldr	r0, [sp, #44]	; 0x2c
   21df8:	cmp	sl, r0
   21dfc:	ble	220f4 <__flatcc_fb_gen_c_json_parser@@Base+0x3598>
   21e00:	sub	r1, sl, #1
   21e04:	mov	r0, r1
   21e08:	str	r1, [sp, #56]	; 0x38
   21e0c:	add	r0, lr, r1, lsl #4
   21e10:	ldr	r0, [r0, #4]
   21e14:	cmp	r0, r5
   21e18:	blt	21f64 <__flatcc_fb_gen_c_json_parser@@Base+0x3408>
   21e1c:	sub	ip, r0, r5
   21e20:	mov	r0, #8
   21e24:	mov	r9, #0
   21e28:	cmp	ip, #8
   21e2c:	movge	ip, r0
   21e30:	cmp	ip, #0
   21e34:	beq	21f24 <__flatcc_fb_gen_c_json_parser@@Base+0x33c8>
   21e38:	ldr	r0, [sp, #56]	; 0x38
   21e3c:	cmp	ip, #1
   21e40:	mov	r1, ip
   21e44:	mov	r7, #0
   21e48:	ldr	r4, [lr, r0, lsl #4]
   21e4c:	beq	21edc <__flatcc_fb_gen_c_json_parser@@Base+0x3380>
   21e50:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21e54:	vdup.32	d24, ip
   21e58:	bic	r8, ip, #1
   21e5c:	vmov.i32	q11, #0	; 0x00000000
   21e60:	sub	r5, fp, #44	; 0x2c
   21e64:	vadd.i32	d24, d24, d17
   21e68:	sub	r1, ip, r8
   21e6c:	mov	r6, r8
   21e70:	add	r0, r4, r0
   21e74:	sub	r7, r0, #1
   21e78:	vadd.i32	d25, d24, d18
   21e7c:	subs	r6, r6, #2
   21e80:	vadd.i32	d24, d24, d16
   21e84:	vmov.32	r0, d25[0]
   21e88:	vshl.s32	d25, d25, #3
   21e8c:	add	r0, r7, r0
   21e90:	vsub.i32	d25, d19, d25
   21e94:	ldrh	r0, [r0]
   21e98:	vmovl.u32	q14, d25
   21e9c:	strh	r0, [fp, #-44]	; 0xffffffd4
   21ea0:	vld1.16	{d26[0]}, [r5 :16]
   21ea4:	vmovl.u8	q13, d26
   21ea8:	vmovl.u16	q13, d26
   21eac:	vrev64.32	d26, d26
   21eb0:	vmovl.u32	q13, d26
   21eb4:	vand	q13, q13, q10
   21eb8:	vshl.u64	q13, q13, q14
   21ebc:	vorr	q11, q13, q11
   21ec0:	bne	21e78 <__flatcc_fb_gen_c_json_parser@@Base+0x331c>
   21ec4:	vorr	d24, d23, d23
   21ec8:	cmp	ip, r8
   21ecc:	vorr	q11, q11, q12
   21ed0:	vmov.32	r7, d22[1]
   21ed4:	vmov.32	r9, d22[0]
   21ed8:	beq	21f28 <__flatcc_fb_gen_c_json_parser@@Base+0x33cc>
   21edc:	ldr	r0, [sp, #40]	; 0x28
   21ee0:	add	r8, r4, r0
   21ee4:	mov	r0, #64	; 0x40
   21ee8:	sub	r6, r0, r1, lsl #3
   21eec:	ldrb	r5, [r8, r1]
   21ef0:	rsb	r4, r6, #32
   21ef4:	sub	r0, r6, #32
   21ef8:	cmp	r0, #0
   21efc:	lsr	r4, r5, r4
   21f00:	lslge	r4, r5, r0
   21f04:	lsl	r0, r5, r6
   21f08:	add	r6, r6, #8
   21f0c:	movwge	r0, #0
   21f10:	orr	r7, r4, r7
   21f14:	subs	r1, r1, #1
   21f18:	orr	r9, r0, r9
   21f1c:	bne	21eec <__flatcc_fb_gen_c_json_parser@@Base+0x3390>
   21f20:	b	21f28 <__flatcc_fb_gen_c_json_parser@@Base+0x33cc>
   21f24:	mov	r7, #0
   21f28:	mov	r0, #64	; 0x40
   21f2c:	mvn	r4, #0
   21f30:	sub	r0, r0, ip, lsl #3
   21f34:	rsb	r1, r0, #32
   21f38:	lsr	r1, r4, r1
   21f3c:	orr	r5, r1, r4, lsl r0
   21f40:	mov	r1, #32
   21f44:	lsl	r0, r4, r0
   21f48:	sub	r6, r1, ip, lsl #3
   21f4c:	cmp	r6, #0
   21f50:	lslge	r5, r4, r6
   21f54:	movwge	r0, #0
   21f58:	str	r5, [sp, #52]	; 0x34
   21f5c:	str	r0, [sp, #48]	; 0x30
   21f60:	ldr	r5, [fp, #-56]	; 0xffffffc8
   21f64:	add	r0, lr, sl, lsl #4
   21f68:	ldr	ip, [r0, #4]
   21f6c:	cmp	ip, r5
   21f70:	blt	22084 <__flatcc_fb_gen_c_json_parser@@Base+0x3528>
   21f74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   21f78:	mov	r1, #8
   21f7c:	mov	r3, #0
   21f80:	sub	r6, ip, r0
   21f84:	cmp	r6, #8
   21f88:	movge	r6, r1
   21f8c:	cmp	r6, #0
   21f90:	beq	21fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x3454>
   21f94:	ldr	r1, [sp, #60]	; 0x3c
   21f98:	cmp	r6, #1
   21f9c:	ldr	r4, [r1, sl, lsl #4]
   21fa0:	bne	21fb8 <__flatcc_fb_gen_c_json_parser@@Base+0x345c>
   21fa4:	mov	r8, r6
   21fa8:	mov	r2, #0
   21fac:	b	22040 <__flatcc_fb_gen_c_json_parser@@Base+0x34e4>
   21fb0:	mov	r2, #0
   21fb4:	b	22084 <__flatcc_fb_gen_c_json_parser@@Base+0x3528>
   21fb8:	add	r0, r4, r0
   21fbc:	vdup.32	d24, r6
   21fc0:	vmov.i32	q11, #0	; 0x00000000
   21fc4:	sub	r1, fp, #48	; 0x30
   21fc8:	sub	r2, r0, #1
   21fcc:	bic	r0, r6, #1
   21fd0:	vadd.i32	d24, d24, d17
   21fd4:	sub	r8, r6, r0
   21fd8:	mov	r3, r0
   21fdc:	vadd.i32	d25, d24, d18
   21fe0:	subs	r3, r3, #2
   21fe4:	vadd.i32	d24, d24, d16
   21fe8:	vmov.32	r5, d25[0]
   21fec:	vshl.s32	d25, d25, #3
   21ff0:	add	r5, r2, r5
   21ff4:	vsub.i32	d25, d19, d25
   21ff8:	ldrh	r5, [r5]
   21ffc:	vmovl.u32	q14, d25
   22000:	strh	r5, [fp, #-48]	; 0xffffffd0
   22004:	vld1.16	{d26[0]}, [r1 :16]
   22008:	vmovl.u8	q13, d26
   2200c:	vmovl.u16	q13, d26
   22010:	vrev64.32	d26, d26
   22014:	vmovl.u32	q13, d26
   22018:	vand	q13, q13, q10
   2201c:	vshl.u64	q13, q13, q14
   22020:	vorr	q11, q13, q11
   22024:	bne	21fdc <__flatcc_fb_gen_c_json_parser@@Base+0x3480>
   22028:	vorr	d24, d23, d23
   2202c:	cmp	r6, r0
   22030:	vorr	q11, q11, q12
   22034:	vmov.32	r2, d22[1]
   22038:	vmov.32	r3, d22[0]
   2203c:	beq	22084 <__flatcc_fb_gen_c_json_parser@@Base+0x3528>
   22040:	ldr	r0, [sp, #40]	; 0x28
   22044:	mov	r1, #64	; 0x40
   22048:	sub	r6, r1, r8, lsl #3
   2204c:	add	r0, r4, r0
   22050:	ldrb	r5, [r0, r8]
   22054:	rsb	lr, r6, #32
   22058:	sub	r4, r6, #32
   2205c:	cmp	r4, #0
   22060:	lsr	r1, r5, lr
   22064:	lslge	r1, r5, r4
   22068:	orr	r2, r1, r2
   2206c:	lsl	r1, r5, r6
   22070:	add	r6, r6, #8
   22074:	movwge	r1, #0
   22078:	subs	r8, r8, #1
   2207c:	orr	r3, r1, r3
   22080:	bne	22050 <__flatcc_fb_gen_c_json_parser@@Base+0x34f4>
   22084:	ldr	r1, [sp, #48]	; 0x30
   22088:	ldr	r6, [sp, #52]	; 0x34
   2208c:	eor	r0, r3, r9
   22090:	ldr	r5, [fp, #-56]	; 0xffffffc8
   22094:	ldr	lr, [sp, #60]	; 0x3c
   22098:	and	r0, r0, r1
   2209c:	eor	r1, r2, r7
   220a0:	and	r1, r1, r6
   220a4:	orrs	r0, r0, r1
   220a8:	beq	21df0 <__flatcc_fb_gen_c_json_parser@@Base+0x3294>
   220ac:	cmp	ip, r5
   220b0:	bge	22510 <__flatcc_fb_gen_c_json_parser@@Base+0x39b4>
   220b4:	ldr	r9, [sp, #28]
   220b8:	mov	r2, #0
   220bc:	mov	r3, #0
   220c0:	mov	r8, #0
   220c4:	mov	r6, #0
   220c8:	b	22764 <__flatcc_fb_gen_c_json_parser@@Base+0x3c08>
   220cc:	ldr	r2, [sp, #44]	; 0x2c
   220d0:	cmp	r3, r2
   220d4:	bne	223dc <__flatcc_fb_gen_c_json_parser@@Base+0x3880>
   220d8:	mov	r2, #0
   220dc:	str	r5, [sp]
   220e0:	str	r2, [sp, #4]
   220e4:	ldr	r2, [sp, #44]	; 0x2c
   220e8:	bl	22c98 <__flatcc_fb_gen_c_json_parser@@Base+0x413c>
   220ec:	sub	sp, fp, #28
   220f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   220f4:	ldr	r2, [sp, #32]
   220f8:	mov	ip, #0
   220fc:	vmov.i64	d17, #0xffffffff00000000
   22100:	vmov.i8	d18, #255	; 0xff
   22104:	vmov.i32	d19, #56	; 0x00000038
   22108:	vmov.i64	q10, #0x00000000000000ff
   2210c:	mov	r7, #0
   22110:	mov	r3, #0
   22114:	mov	r1, #0
   22118:	mov	lr, #0
   2211c:	mov	sl, #0
   22120:	ldr	r0, [sp, #36]	; 0x24
   22124:	cmp	r2, r0
   22128:	bge	2240c <__flatcc_fb_gen_c_json_parser@@Base+0x38b0>
   2212c:	ldr	r0, [sp, #60]	; 0x3c
   22130:	add	r0, r0, r2, lsl #4
   22134:	ldr	r0, [r0, #4]
   22138:	cmp	r0, r5
   2213c:	blt	2228c <__flatcc_fb_gen_c_json_parser@@Base+0x3730>
   22140:	sub	r9, r0, r5
   22144:	mov	r0, #8
   22148:	mov	ip, #0
   2214c:	cmp	r9, #8
   22150:	movge	r9, r0
   22154:	cmp	r9, #0
   22158:	beq	2224c <__flatcc_fb_gen_c_json_parser@@Base+0x36f0>
   2215c:	ldr	r0, [sp, #60]	; 0x3c
   22160:	mov	r8, r2
   22164:	cmp	r9, #1
   22168:	mov	r4, r9
   2216c:	mov	r7, #0
   22170:	ldr	lr, [r0, r2, lsl #4]
   22174:	beq	22204 <__flatcc_fb_gen_c_json_parser@@Base+0x36a8>
   22178:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2217c:	vdup.32	d24, r9
   22180:	vmov.i32	q11, #0	; 0x00000000
   22184:	sub	r2, fp, #32
   22188:	vadd.i32	d24, d24, d17
   2218c:	add	r0, lr, r0
   22190:	sub	r7, r0, #1
   22194:	bic	r0, r9, #1
   22198:	sub	r4, r9, r0
   2219c:	mov	r6, r0
   221a0:	vadd.i32	d25, d24, d18
   221a4:	subs	r6, r6, #2
   221a8:	vadd.i32	d24, d24, d16
   221ac:	vmov.32	r5, d25[0]
   221b0:	vshl.s32	d25, d25, #3
   221b4:	add	r5, r7, r5
   221b8:	vsub.i32	d25, d19, d25
   221bc:	ldrh	r5, [r5]
   221c0:	vmovl.u32	q14, d25
   221c4:	strh	r5, [fp, #-32]	; 0xffffffe0
   221c8:	vld1.16	{d26[0]}, [r2 :16]
   221cc:	vmovl.u8	q13, d26
   221d0:	vmovl.u16	q13, d26
   221d4:	vrev64.32	d26, d26
   221d8:	vmovl.u32	q13, d26
   221dc:	vand	q13, q13, q10
   221e0:	vshl.u64	q13, q13, q14
   221e4:	vorr	q11, q13, q11
   221e8:	bne	221a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3644>
   221ec:	vorr	d24, d23, d23
   221f0:	cmp	r9, r0
   221f4:	vorr	q11, q11, q12
   221f8:	vmov.32	r7, d22[1]
   221fc:	vmov.32	ip, d22[0]
   22200:	beq	22254 <__flatcc_fb_gen_c_json_parser@@Base+0x36f8>
   22204:	ldr	r0, [sp, #40]	; 0x28
   22208:	add	lr, lr, r0
   2220c:	mov	r0, #64	; 0x40
   22210:	sub	r6, r0, r4, lsl #3
   22214:	ldrb	r2, [lr, r4]
   22218:	rsb	r0, r6, #32
   2221c:	sub	r5, r6, #32
   22220:	cmp	r5, #0
   22224:	lsr	r0, r2, r0
   22228:	lslge	r0, r2, r5
   2222c:	orr	r7, r0, r7
   22230:	lsl	r0, r2, r6
   22234:	add	r6, r6, #8
   22238:	movwge	r0, #0
   2223c:	subs	r4, r4, #1
   22240:	orr	ip, r0, ip
   22244:	bne	22214 <__flatcc_fb_gen_c_json_parser@@Base+0x36b8>
   22248:	b	22254 <__flatcc_fb_gen_c_json_parser@@Base+0x36f8>
   2224c:	mov	r8, r2
   22250:	mov	r7, #0
   22254:	mov	r0, #64	; 0x40
   22258:	mvn	r6, #0
   2225c:	ldr	r5, [fp, #-56]	; 0xffffffc8
   22260:	sub	r0, r0, r9, lsl #3
   22264:	rsb	r2, r0, #32
   22268:	lsl	lr, r6, r0
   2226c:	lsr	r2, r6, r2
   22270:	orr	sl, r2, r6, lsl r0
   22274:	mov	r2, #32
   22278:	sub	r2, r2, r9, lsl #3
   2227c:	cmp	r2, #0
   22280:	lslge	sl, r6, r2
   22284:	movwge	lr, #0
   22288:	mov	r2, r8
   2228c:	ldr	r0, [sp, #60]	; 0x3c
   22290:	add	r2, r2, #1
   22294:	mov	r8, r2
   22298:	add	r0, r0, r2, lsl #4
   2229c:	ldr	r0, [r0, #4]
   222a0:	cmp	r0, r5
   222a4:	blt	223b8 <__flatcc_fb_gen_c_json_parser@@Base+0x385c>
   222a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   222ac:	mov	r3, #0
   222b0:	sub	r4, r0, r1
   222b4:	mov	r0, #8
   222b8:	cmp	r4, #8
   222bc:	movge	r4, r0
   222c0:	cmp	r4, #0
   222c4:	beq	222e4 <__flatcc_fb_gen_c_json_parser@@Base+0x3788>
   222c8:	ldr	r0, [sp, #60]	; 0x3c
   222cc:	cmp	r4, #1
   222d0:	ldr	r9, [r0, r8, lsl #4]
   222d4:	bne	222ec <__flatcc_fb_gen_c_json_parser@@Base+0x3790>
   222d8:	mov	r2, r4
   222dc:	mov	r1, #0
   222e0:	b	22374 <__flatcc_fb_gen_c_json_parser@@Base+0x3818>
   222e4:	mov	r1, #0
   222e8:	b	223b8 <__flatcc_fb_gen_c_json_parser@@Base+0x385c>
   222ec:	add	r1, r9, r1
   222f0:	vdup.32	d24, r4
   222f4:	bic	r6, r4, #1
   222f8:	vmov.i32	q11, #0	; 0x00000000
   222fc:	sub	r0, fp, #36	; 0x24
   22300:	sub	r1, r1, #1
   22304:	vadd.i32	d24, d24, d17
   22308:	sub	r2, r4, r6
   2230c:	mov	r3, r6
   22310:	vadd.i32	d25, d24, d18
   22314:	subs	r3, r3, #2
   22318:	vadd.i32	d24, d24, d16
   2231c:	vmov.32	r5, d25[0]
   22320:	vshl.s32	d25, d25, #3
   22324:	add	r5, r1, r5
   22328:	vsub.i32	d25, d19, d25
   2232c:	ldrh	r5, [r5]
   22330:	vmovl.u32	q14, d25
   22334:	strh	r5, [fp, #-36]	; 0xffffffdc
   22338:	vld1.16	{d26[0]}, [r0 :16]
   2233c:	vmovl.u8	q13, d26
   22340:	vmovl.u16	q13, d26
   22344:	vrev64.32	d26, d26
   22348:	vmovl.u32	q13, d26
   2234c:	vand	q13, q13, q10
   22350:	vshl.u64	q13, q13, q14
   22354:	vorr	q11, q13, q11
   22358:	bne	22310 <__flatcc_fb_gen_c_json_parser@@Base+0x37b4>
   2235c:	vorr	d24, d23, d23
   22360:	cmp	r4, r6
   22364:	vorr	q11, q11, q12
   22368:	vmov.32	r1, d22[1]
   2236c:	vmov.32	r3, d22[0]
   22370:	beq	223b8 <__flatcc_fb_gen_c_json_parser@@Base+0x385c>
   22374:	ldr	r4, [sp, #40]	; 0x28
   22378:	mov	r0, #64	; 0x40
   2237c:	add	r9, r9, r4
   22380:	sub	r4, r0, r2, lsl #3
   22384:	ldrb	r5, [r9, r2]
   22388:	rsb	r6, r4, #32
   2238c:	sub	r0, r4, #32
   22390:	cmp	r0, #0
   22394:	lsr	r6, r5, r6
   22398:	lslge	r6, r5, r0
   2239c:	lsl	r0, r5, r4
   223a0:	add	r4, r4, #8
   223a4:	movwge	r0, #0
   223a8:	orr	r1, r6, r1
   223ac:	subs	r2, r2, #1
   223b0:	orr	r3, r0, r3
   223b4:	bne	22384 <__flatcc_fb_gen_c_json_parser@@Base+0x3828>
   223b8:	ldr	r5, [fp, #-56]	; 0xffffffc8
   223bc:	eor	r0, r3, ip
   223c0:	eor	r2, r1, r7
   223c4:	and	r0, r0, lr
   223c8:	and	r2, r2, sl
   223cc:	orrs	r0, r0, r2
   223d0:	mov	r2, r8
   223d4:	beq	22120 <__flatcc_fb_gen_c_json_parser@@Base+0x35c4>
   223d8:	b	22410 <__flatcc_fb_gen_c_json_parser@@Base+0x38b4>
   223dc:	ldr	r2, [sp, #44]	; 0x2c
   223e0:	add	r2, r2, #1
   223e4:	cmp	r2, r3
   223e8:	bne	21d7c <__flatcc_fb_gen_c_json_parser@@Base+0x3220>
   223ec:	add	r2, lr, r3, lsl #4
   223f0:	ldr	r2, [r2, #4]
   223f4:	cmp	r7, r2
   223f8:	bgt	220d8 <__flatcc_fb_gen_c_json_parser@@Base+0x357c>
   223fc:	rsb	r2, r2, #0
   22400:	cmp	r6, r2
   22404:	bne	21d7c <__flatcc_fb_gen_c_json_parser@@Base+0x3220>
   22408:	b	220d8 <__flatcc_fb_gen_c_json_parser@@Base+0x357c>
   2240c:	add	r2, r2, #1
   22410:	ldr	r9, [sp, #44]	; 0x2c
   22414:	str	r2, [sp, #32]
   22418:	sub	sl, r2, #1
   2241c:	ldr	r7, [sp, #20]
   22420:	ldr	r3, [sp, #60]	; 0x3c
   22424:	ldr	r1, [sp, #16]
   22428:	cmp	r2, r9
   2242c:	ble	22488 <__flatcc_fb_gen_c_json_parser@@Base+0x392c>
   22430:	cmp	r7, r1
   22434:	bgt	2244c <__flatcc_fb_gen_c_json_parser@@Base+0x38f0>
   22438:	ldr	r0, [sp, #12]
   2243c:	ldr	r9, [sp, #44]	; 0x2c
   22440:	add	r0, r1, r0
   22444:	cmp	r0, #0
   22448:	bgt	22488 <__flatcc_fb_gen_c_json_parser@@Base+0x392c>
   2244c:	ldr	r1, [sp, #44]	; 0x2c
   22450:	ldr	r6, [sp, #12]
   22454:	mov	r0, r1
   22458:	cmp	r1, sl
   2245c:	bge	22480 <__flatcc_fb_gen_c_json_parser@@Base+0x3924>
   22460:	add	r2, r3, r0, lsl #4
   22464:	add	r1, r0, #1
   22468:	ldr	r2, [r2, #20]
   2246c:	cmp	r7, r2
   22470:	bgt	22454 <__flatcc_fb_gen_c_json_parser@@Base+0x38f8>
   22474:	add	r2, r2, r6
   22478:	cmp	r2, #1
   2247c:	blt	22454 <__flatcc_fb_gen_c_json_parser@@Base+0x38f8>
   22480:	ldr	r2, [sp, #32]
   22484:	add	r9, r0, #1
   22488:	mov	r0, #0
   2248c:	cmp	r9, r2
   22490:	str	r0, [sp, #56]	; 0x38
   22494:	bge	224f4 <__flatcc_fb_gen_c_json_parser@@Base+0x3998>
   22498:	ldr	r0, [sp, #44]	; 0x2c
   2249c:	mov	r2, #0
   224a0:	mov	r6, #0
   224a4:	cmp	r9, r0
   224a8:	ble	224d4 <__flatcc_fb_gen_c_json_parser@@Base+0x3978>
   224ac:	add	r0, r3, r9, lsl #4
   224b0:	mov	r1, #0
   224b4:	ldr	r0, [r0, #-12]
   224b8:	cmp	r7, r0
   224bc:	sub	r0, r0, r5
   224c0:	sub	r0, r0, #8
   224c4:	movwge	r1, #1
   224c8:	clz	r0, r0
   224cc:	lsr	r0, r0, #5
   224d0:	and	r6, r1, r0
   224d4:	add	r0, r3, r9, lsl #4
   224d8:	ldr	r0, [r0, #4]
   224dc:	cmp	r0, r5
   224e0:	bge	22638 <__flatcc_fb_gen_c_json_parser@@Base+0x3adc>
   224e4:	mov	r3, #0
   224e8:	mov	r4, #0
   224ec:	mov	r8, #0
   224f0:	b	22824 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc8>
   224f4:	ldr	sl, [pc, #1776]	; 22bec <__flatcc_fb_gen_c_json_parser@@Base+0x4090>
   224f8:	ldr	r5, [sp, #24]
   224fc:	ldr	r6, [sp, #36]	; 0x24
   22500:	mov	r8, #0
   22504:	mov	r7, r9
   22508:	add	sl, pc, sl
   2250c:	b	229a8 <__flatcc_fb_gen_c_json_parser@@Base+0x3e4c>
   22510:	ldr	r1, [lr, sl, lsl #4]
   22514:	sub	r8, ip, r5
   22518:	ldr	r9, [sp, #28]
   2251c:	mov	r2, #0
   22520:	cmp	r8, #8
   22524:	movge	r8, #8
   22528:	cmp	r8, #0
   2252c:	add	r6, r1, r5
   22530:	beq	22760 <__flatcc_fb_gen_c_json_parser@@Base+0x3c04>
   22534:	cmp	r8, #1
   22538:	mov	r0, r8
   2253c:	mov	r3, #0
   22540:	beq	225e4 <__flatcc_fb_gen_c_json_parser@@Base+0x3a88>
   22544:	vmov.i64	d17, #0xffffffff00000000
   22548:	vdup.32	d20, r8
   2254c:	mov	r4, r6
   22550:	sub	r2, r6, #1
   22554:	bic	r6, r8, #1
   22558:	vmov.i32	q9, #0	; 0x00000000
   2255c:	sub	r3, fp, #52	; 0x34
   22560:	vmov.i32	d21, #56	; 0x00000038
   22564:	vmov.i64	q11, #0x00000000000000ff
   22568:	vadd.i32	d17, d20, d17
   2256c:	sub	r0, r8, r6
   22570:	vmov.i8	d20, #255	; 0xff
   22574:	mov	r7, r6
   22578:	vadd.i32	d24, d17, d20
   2257c:	subs	r7, r7, #2
   22580:	vadd.i32	d17, d17, d16
   22584:	vmov.32	r5, d24[0]
   22588:	vshl.s32	d24, d24, #3
   2258c:	add	r5, r2, r5
   22590:	vsub.i32	d24, d21, d24
   22594:	ldrh	r5, [r5]
   22598:	strh	r5, [fp, #-52]	; 0xffffffcc
   2259c:	vld1.16	{d25[0]}, [r3 :16]
   225a0:	vmovl.u8	q13, d25
   225a4:	vmovl.u16	q13, d26
   225a8:	vrev64.32	d25, d26
   225ac:	vmovl.u32	q13, d25
   225b0:	vmovl.u32	q12, d24
   225b4:	vand	q13, q13, q11
   225b8:	vshl.u64	q12, q13, q12
   225bc:	vorr	q9, q12, q9
   225c0:	bne	22578 <__flatcc_fb_gen_c_json_parser@@Base+0x3a1c>
   225c4:	ldr	r5, [fp, #-56]	; 0xffffffc8
   225c8:	vorr	d16, d19, d19
   225cc:	cmp	r8, r6
   225d0:	mov	r6, r4
   225d4:	vorr	q8, q9, q8
   225d8:	vmov.32	r3, d16[1]
   225dc:	vmov.32	r2, d16[0]
   225e0:	beq	22764 <__flatcc_fb_gen_c_json_parser@@Base+0x3c08>
   225e4:	mov	r7, #64	; 0x40
   225e8:	add	r1, r1, r5
   225ec:	mov	ip, r6
   225f0:	sub	r7, r7, r0, lsl #3
   225f4:	sub	r1, r1, #1
   225f8:	ldrb	r6, [r1, r0]
   225fc:	rsb	r5, r7, #32
   22600:	sub	r4, r7, #32
   22604:	cmp	r4, #0
   22608:	lsr	r5, r6, r5
   2260c:	lslge	r5, r6, r4
   22610:	lsl	r6, r6, r7
   22614:	add	r7, r7, #8
   22618:	movwge	r6, #0
   2261c:	orr	r3, r5, r3
   22620:	subs	r0, r0, #1
   22624:	orr	r2, r6, r2
   22628:	bne	225f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3a9c>
   2262c:	ldr	r5, [fp, #-56]	; 0xffffffc8
   22630:	mov	r6, ip
   22634:	b	22764 <__flatcc_fb_gen_c_json_parser@@Base+0x3c08>
   22638:	ldr	lr, [r3, r9, lsl #4]
   2263c:	sub	r4, r0, r5
   22640:	mov	r2, #0
   22644:	cmp	r4, #8
   22648:	movge	r4, #8
   2264c:	cmp	r4, #0
   22650:	add	r8, lr, r5
   22654:	beq	22820 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc4>
   22658:	cmp	r4, #1
   2265c:	mov	r0, r4
   22660:	mov	r3, #0
   22664:	str	r6, [sp, #60]	; 0x3c
   22668:	beq	22708 <__flatcc_fb_gen_c_json_parser@@Base+0x3bac>
   2266c:	bic	ip, r4, #1
   22670:	vmov.i64	d17, #0xffffffff00000000
   22674:	vdup.32	d20, r4
   22678:	sub	r2, r8, #1
   2267c:	vmov.i32	q9, #0	; 0x00000000
   22680:	mov	r6, r4
   22684:	sub	r3, fp, #40	; 0x28
   22688:	vmov.i32	d21, #56	; 0x00000038
   2268c:	vmov.i64	q11, #0x00000000000000ff
   22690:	vadd.i32	d17, d20, d17
   22694:	sub	r0, r4, ip
   22698:	vmov.i8	d20, #255	; 0xff
   2269c:	mov	r4, ip
   226a0:	vadd.i32	d24, d17, d20
   226a4:	subs	r4, r4, #2
   226a8:	vadd.i32	d17, d17, d16
   226ac:	vmov.32	r1, d24[0]
   226b0:	vshl.s32	d24, d24, #3
   226b4:	add	r1, r2, r1
   226b8:	vsub.i32	d24, d21, d24
   226bc:	ldrh	r1, [r1]
   226c0:	strh	r1, [fp, #-40]	; 0xffffffd8
   226c4:	vld1.16	{d25[0]}, [r3 :16]
   226c8:	vmovl.u8	q13, d25
   226cc:	vmovl.u16	q13, d26
   226d0:	vrev64.32	d25, d26
   226d4:	vmovl.u32	q13, d25
   226d8:	vmovl.u32	q12, d24
   226dc:	vand	q13, q13, q11
   226e0:	vshl.u64	q12, q13, q12
   226e4:	vorr	q9, q12, q9
   226e8:	bne	226a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3b44>
   226ec:	vorr	d16, d19, d19
   226f0:	mov	r4, r6
   226f4:	cmp	r6, ip
   226f8:	vorr	q8, q9, q8
   226fc:	vmov.32	r3, d16[1]
   22700:	vmov.32	r2, d16[0]
   22704:	beq	22758 <__flatcc_fb_gen_c_json_parser@@Base+0x3bfc>
   22708:	mov	r1, #64	; 0x40
   2270c:	mov	ip, r4
   22710:	sub	r4, r1, r0, lsl #3
   22714:	add	r1, lr, r5
   22718:	sub	r1, r1, #1
   2271c:	ldrb	r7, [r1, r0]
   22720:	rsb	r5, r4, #32
   22724:	sub	r6, r4, #32
   22728:	cmp	r6, #0
   2272c:	lsr	r5, r7, r5
   22730:	lslge	r5, r7, r6
   22734:	lsl	r7, r7, r4
   22738:	add	r4, r4, #8
   2273c:	movwge	r7, #0
   22740:	orr	r3, r5, r3
   22744:	subs	r0, r0, #1
   22748:	orr	r2, r7, r2
   2274c:	bne	2271c <__flatcc_fb_gen_c_json_parser@@Base+0x3bc0>
   22750:	ldr	r7, [sp, #20]
   22754:	mov	r4, ip
   22758:	ldr	r6, [sp, #60]	; 0x3c
   2275c:	b	22824 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc8>
   22760:	mov	r3, #0
   22764:	str	r8, [sp]
   22768:	str	r6, [sp, #4]
   2276c:	ldr	r1, [pc, #1132]	; 22be0 <__flatcc_fb_gen_c_json_parser@@Base+0x4084>
   22770:	ldr	r4, [sp, #24]
   22774:	add	r1, pc, r1
   22778:	mov	r0, r4
   2277c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22780:	ldr	r0, [r4, #220]	; 0xdc
   22784:	mov	r1, r9
   22788:	add	r0, r0, #1
   2278c:	str	r0, [r4, #220]	; 0xdc
   22790:	str	r5, [sp]
   22794:	mov	r0, r4
   22798:	ldr	r2, [sp, #44]	; 0x2c
   2279c:	ldr	r3, [sp, #56]	; 0x38
   227a0:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   227a4:	ldr	r0, [r4, #220]	; 0xdc
   227a8:	cmp	r0, #0
   227ac:	beq	22b60 <__flatcc_fb_gen_c_json_parser@@Base+0x4004>
   227b0:	sub	r0, r0, #1
   227b4:	mov	r2, r8
   227b8:	mov	r3, r6
   227bc:	str	r0, [r4, #220]	; 0xdc
   227c0:	mov	r0, r4
   227c4:	ldr	r1, [pc, #1048]	; 22be4 <__flatcc_fb_gen_c_json_parser@@Base+0x4088>
   227c8:	add	r1, pc, r1
   227cc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   227d0:	ldr	r0, [r4, #220]	; 0xdc
   227d4:	mov	r1, r9
   227d8:	mov	r2, sl
   227dc:	add	r0, r0, #1
   227e0:	str	r0, [r4, #220]	; 0xdc
   227e4:	str	r5, [sp]
   227e8:	mov	r0, r4
   227ec:	ldr	r3, [sp, #36]	; 0x24
   227f0:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   227f4:	ldr	r0, [r4, #220]	; 0xdc
   227f8:	cmp	r0, #0
   227fc:	beq	22b80 <__flatcc_fb_gen_c_json_parser@@Base+0x4024>
   22800:	sub	r0, r0, #1
   22804:	mov	r2, r8
   22808:	mov	r3, r6
   2280c:	str	r0, [r4, #220]	; 0xdc
   22810:	mov	r0, r4
   22814:	ldr	r1, [pc, #972]	; 22be8 <__flatcc_fb_gen_c_json_parser@@Base+0x408c>
   22818:	add	r1, pc, r1
   2281c:	b	22b34 <__flatcc_fb_gen_c_json_parser@@Base+0x3fd8>
   22820:	mov	r3, #0
   22824:	stm	sp, {r4, r8}
   22828:	ldr	r1, [pc, #960]	; 22bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x4094>
   2282c:	ldr	r5, [sp, #24]
   22830:	add	r1, pc, r1
   22834:	mov	r0, r5
   22838:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2283c:	ldr	r0, [r5, #220]	; 0xdc
   22840:	cmp	r6, #0
   22844:	add	r0, r0, #1
   22848:	str	r0, [r5, #220]	; 0xdc
   2284c:	beq	22924 <__flatcc_fb_gen_c_json_parser@@Base+0x3dc8>
   22850:	ldr	r1, [pc, #924]	; 22bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x4098>
   22854:	mov	r0, r5
   22858:	mov	r2, r4
   2285c:	mov	r3, r8
   22860:	add	r1, pc, r1
   22864:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22868:	mov	r6, r4
   2286c:	ldr	r4, [sp, #28]
   22870:	sub	r7, r9, #1
   22874:	ldm	r4, {r0, ip}
   22878:	ldr	r1, [r4, #12]
   2287c:	add	r0, r0, r7, lsl #4
   22880:	ldr	r2, [r0, #8]
   22884:	ldr	r3, [r0, #12]
   22888:	mov	r0, #8
   2288c:	str	r0, [sp]
   22890:	mov	r0, r5
   22894:	blx	ip
   22898:	ldr	r1, [pc, #856]	; 22bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x409c>
   2289c:	mov	r0, r5
   228a0:	mov	r2, r6
   228a4:	mov	r3, r8
   228a8:	str	r6, [sp, #60]	; 0x3c
   228ac:	add	r1, pc, r1
   228b0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   228b4:	ldr	r1, [pc, #832]	; 22bfc <__flatcc_fb_gen_c_json_parser@@Base+0x40a0>
   228b8:	mov	r0, r5
   228bc:	add	r1, pc, r1
   228c0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   228c4:	ldr	r1, [pc, #820]	; 22c00 <__flatcc_fb_gen_c_json_parser@@Base+0x40a4>
   228c8:	mov	r0, r5
   228cc:	add	r1, pc, r1
   228d0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   228d4:	ldr	r0, [sp, #20]
   228d8:	mov	r1, r4
   228dc:	mov	r2, r9
   228e0:	mov	r3, sl
   228e4:	str	r0, [sp]
   228e8:	mov	r0, r5
   228ec:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   228f0:	ldr	r0, [r5, #220]	; 0xdc
   228f4:	cmp	r0, #0
   228f8:	beq	22bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x4064>
   228fc:	sub	r0, r0, #1
   22900:	mov	r3, r8
   22904:	str	r0, [r5, #220]	; 0xdc
   22908:	mov	r0, r5
   2290c:	ldr	r1, [pc, #752]	; 22c04 <__flatcc_fb_gen_c_json_parser@@Base+0x40a8>
   22910:	ldr	r4, [sp, #60]	; 0x3c
   22914:	add	r1, pc, r1
   22918:	mov	r2, r4
   2291c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22920:	b	22960 <__flatcc_fb_gen_c_json_parser@@Base+0x3e04>
   22924:	ldr	r1, [pc, #732]	; 22c08 <__flatcc_fb_gen_c_json_parser@@Base+0x40ac>
   22928:	mov	r0, r5
   2292c:	add	r1, pc, r1
   22930:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22934:	ldr	r1, [pc, #720]	; 22c0c <__flatcc_fb_gen_c_json_parser@@Base+0x40b0>
   22938:	mov	r0, r5
   2293c:	add	r1, pc, r1
   22940:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22944:	str	r7, [sp]
   22948:	mov	r0, r5
   2294c:	mov	r2, r9
   22950:	mov	r3, sl
   22954:	ldr	r1, [sp, #28]
   22958:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   2295c:	mov	r7, r9
   22960:	ldr	r0, [r5, #220]	; 0xdc
   22964:	ldr	r6, [sp, #36]	; 0x24
   22968:	mov	sl, r8
   2296c:	cmp	r0, #0
   22970:	beq	22ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x4044>
   22974:	sub	r0, r0, #1
   22978:	mov	r2, r4
   2297c:	mov	r3, sl
   22980:	mov	r8, r4
   22984:	str	r0, [r5, #220]	; 0xdc
   22988:	mov	r0, r5
   2298c:	ldr	r1, [pc, #636]	; 22c10 <__flatcc_fb_gen_c_json_parser@@Base+0x40b4>
   22990:	add	r1, pc, r1
   22994:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22998:	ldr	r0, [r5, #220]	; 0xdc
   2299c:	ldr	r2, [sp, #32]
   229a0:	add	r0, r0, #1
   229a4:	str	r0, [r5, #220]	; 0xdc
   229a8:	ldr	r0, [sp, #44]	; 0x2c
   229ac:	mov	r1, #0
   229b0:	cmp	r7, r0
   229b4:	mov	r0, #0
   229b8:	movwgt	r0, #1
   229bc:	cmp	r2, r6
   229c0:	movwle	r1, #1
   229c4:	and	r4, r1, r0
   229c8:	cmp	r4, #1
   229cc:	bne	229e4 <__flatcc_fb_gen_c_json_parser@@Base+0x3e88>
   229d0:	ldr	r1, [sp, #28]
   229d4:	ldr	r0, [r1, #24]
   229d8:	add	r0, r0, #1
   229dc:	str	r0, [sp, #56]	; 0x38
   229e0:	str	r0, [r1, #24]
   229e4:	ldr	r0, [sp, #44]	; 0x2c
   229e8:	cmp	r7, r0
   229ec:	ble	22a70 <__flatcc_fb_gen_c_json_parser@@Base+0x3f14>
   229f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   229f4:	sub	r3, r7, #1
   229f8:	str	r0, [sp]
   229fc:	ldr	r0, [sp, #56]	; 0x38
   22a00:	str	r0, [sp, #4]
   22a04:	mov	r0, r5
   22a08:	ldr	r1, [sp, #28]
   22a0c:	ldr	r2, [sp, #44]	; 0x2c
   22a10:	bl	22c98 <__flatcc_fb_gen_c_json_parser@@Base+0x413c>
   22a14:	ldr	r2, [sp, #32]
   22a18:	cmp	r4, #0
   22a1c:	beq	22a70 <__flatcc_fb_gen_c_json_parser@@Base+0x3f14>
   22a20:	ldr	r1, [pc, #492]	; 22c14 <__flatcc_fb_gen_c_json_parser@@Base+0x40b8>
   22a24:	str	sl, [sp, #60]	; 0x3c
   22a28:	mov	r0, r5
   22a2c:	ldr	sl, [sp, #56]	; 0x38
   22a30:	add	r1, pc, r1
   22a34:	mov	r2, sl
   22a38:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22a3c:	ldr	r0, [r5, #220]	; 0xdc
   22a40:	mov	r1, #0
   22a44:	mov	r2, sl
   22a48:	str	r1, [r5, #220]	; 0xdc
   22a4c:	str	r0, [r5, #228]	; 0xe4
   22a50:	mov	r0, r5
   22a54:	ldr	r1, [pc, #444]	; 22c18 <__flatcc_fb_gen_c_json_parser@@Base+0x40bc>
   22a58:	ldr	sl, [sp, #60]	; 0x3c
   22a5c:	add	r1, pc, r1
   22a60:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22a64:	ldr	r0, [r5, #228]	; 0xe4
   22a68:	ldr	r2, [sp, #32]
   22a6c:	str	r0, [r5, #220]	; 0xdc
   22a70:	cmp	r2, r6
   22a74:	ble	22a9c <__flatcc_fb_gen_c_json_parser@@Base+0x3f40>
   22a78:	ldr	r0, [sp, #44]	; 0x2c
   22a7c:	cmp	r7, r0
   22a80:	bgt	22ab4 <__flatcc_fb_gen_c_json_parser@@Base+0x3f58>
   22a84:	ldr	r0, [sp, #28]
   22a88:	ldr	r1, [r0, #8]
   22a8c:	mov	r0, r5
   22a90:	blx	r1
   22a94:	mov	r4, r8
   22a98:	b	22afc <__flatcc_fb_gen_c_json_parser@@Base+0x3fa0>
   22a9c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22aa0:	mov	r3, r6
   22aa4:	str	r0, [sp]
   22aa8:	mov	r0, r5
   22aac:	ldr	r1, [sp, #28]
   22ab0:	bl	21d3c <__flatcc_fb_gen_c_json_parser@@Base+0x31e0>
   22ab4:	cmp	r4, #0
   22ab8:	mov	r4, r8
   22abc:	beq	22afc <__flatcc_fb_gen_c_json_parser@@Base+0x3fa0>
   22ac0:	ldr	r0, [r5, #220]	; 0xdc
   22ac4:	mov	r1, #0
   22ac8:	str	r1, [r5, #220]	; 0xdc
   22acc:	str	r0, [r5, #228]	; 0xe4
   22ad0:	mov	r0, r5
   22ad4:	ldr	r1, [pc, #320]	; 22c1c <__flatcc_fb_gen_c_json_parser@@Base+0x40c0>
   22ad8:	ldr	r2, [sp, #56]	; 0x38
   22adc:	add	r1, pc, r1
   22ae0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22ae4:	ldr	r0, [r5, #228]	; 0xe4
   22ae8:	str	r0, [r5, #220]	; 0xdc
   22aec:	mov	r0, r5
   22af0:	ldr	r1, [pc, #296]	; 22c20 <__flatcc_fb_gen_c_json_parser@@Base+0x40c4>
   22af4:	add	r1, pc, r1
   22af8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22afc:	ldr	r0, [sp, #32]
   22b00:	cmp	r9, r0
   22b04:	subge	sp, fp, #28
   22b08:	popge	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22b0c:	ldr	r0, [r5, #220]	; 0xdc
   22b10:	cmp	r0, #0
   22b14:	beq	22b40 <__flatcc_fb_gen_c_json_parser@@Base+0x3fe4>
   22b18:	sub	r0, r0, #1
   22b1c:	mov	r2, r4
   22b20:	mov	r3, sl
   22b24:	str	r0, [r5, #220]	; 0xdc
   22b28:	mov	r0, r5
   22b2c:	ldr	r1, [pc, #240]	; 22c24 <__flatcc_fb_gen_c_json_parser@@Base+0x40c8>
   22b30:	add	r1, pc, r1
   22b34:	sub	sp, fp, #28
   22b38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22b3c:	b	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22b40:	ldr	r0, [pc, #272]	; 22c58 <__flatcc_fb_gen_c_json_parser@@Base+0x40fc>
   22b44:	ldr	r1, [pc, #272]	; 22c5c <__flatcc_fb_gen_c_json_parser@@Base+0x4100>
   22b48:	ldr	r3, [pc, #272]	; 22c60 <__flatcc_fb_gen_c_json_parser@@Base+0x4104>
   22b4c:	mov	r2, #1072	; 0x430
   22b50:	add	r0, pc, r0
   22b54:	add	r1, pc, r1
   22b58:	add	r3, pc, r3
   22b5c:	bl	14a78 <__assert_fail@plt>
   22b60:	ldr	r0, [pc, #192]	; 22c28 <__flatcc_fb_gen_c_json_parser@@Base+0x40cc>
   22b64:	ldr	r1, [pc, #192]	; 22c2c <__flatcc_fb_gen_c_json_parser@@Base+0x40d0>
   22b68:	ldr	r3, [pc, #192]	; 22c30 <__flatcc_fb_gen_c_json_parser@@Base+0x40d4>
   22b6c:	movw	r2, #973	; 0x3cd
   22b70:	add	r0, pc, r0
   22b74:	add	r1, pc, r1
   22b78:	add	r3, pc, r3
   22b7c:	bl	14a78 <__assert_fail@plt>
   22b80:	ldr	r0, [pc, #172]	; 22c34 <__flatcc_fb_gen_c_json_parser@@Base+0x40d8>
   22b84:	ldr	r1, [pc, #172]	; 22c38 <__flatcc_fb_gen_c_json_parser@@Base+0x40dc>
   22b88:	ldr	r3, [pc, #172]	; 22c3c <__flatcc_fb_gen_c_json_parser@@Base+0x40e0>
   22b8c:	movw	r2, #975	; 0x3cf
   22b90:	add	r0, pc, r0
   22b94:	add	r1, pc, r1
   22b98:	add	r3, pc, r3
   22b9c:	bl	14a78 <__assert_fail@plt>
   22ba0:	ldr	r0, [pc, #164]	; 22c4c <__flatcc_fb_gen_c_json_parser@@Base+0x40f0>
   22ba4:	ldr	r1, [pc, #164]	; 22c50 <__flatcc_fb_gen_c_json_parser@@Base+0x40f4>
   22ba8:	ldr	r3, [pc, #164]	; 22c54 <__flatcc_fb_gen_c_json_parser@@Base+0x40f8>
   22bac:	movw	r2, #1044	; 0x414
   22bb0:	add	r0, pc, r0
   22bb4:	add	r1, pc, r1
   22bb8:	add	r3, pc, r3
   22bbc:	bl	14a78 <__assert_fail@plt>
   22bc0:	ldr	r0, [pc, #120]	; 22c40 <__flatcc_fb_gen_c_json_parser@@Base+0x40e4>
   22bc4:	ldr	r1, [pc, #120]	; 22c44 <__flatcc_fb_gen_c_json_parser@@Base+0x40e8>
   22bc8:	ldr	r3, [pc, #120]	; 22c48 <__flatcc_fb_gen_c_json_parser@@Base+0x40ec>
   22bcc:	mov	r2, #1040	; 0x410
   22bd0:	add	r0, pc, r0
   22bd4:	add	r1, pc, r1
   22bd8:	add	r3, pc, r3
   22bdc:	bl	14a78 <__assert_fail@plt>
   22be0:	andeq	r1, r3, r0, lsl r5
   22be4:	andeq	r1, r3, r8, lsl r5
   22be8:	andeq	r1, r3, r5, ror #9
   22bec:	strdeq	lr, [r1], -r6
   22bf0:	andeq	r1, r3, r3, ror #9
   22bf4:	ldrdeq	r1, [r3], -fp
   22bf8:	andeq	r1, r3, pc, lsr #9
   22bfc:			; <UNDEFINED> instruction: 0x000314bb
   22c00:	andeq	r1, r3, r5, lsl #4
   22c04:	andeq	r1, r3, sp, ror #8
   22c08:	andeq	r1, r3, fp, asr #8
   22c0c:	muleq	r3, r5, r1
   22c10:	andeq	r1, r3, lr, lsl #8
   22c14:	andeq	r1, r3, ip, lsl #7
   22c18:	andeq	r1, r3, r6, ror r3
   22c1c:	strdeq	r1, [r3], -r3
   22c20:	andeq	r1, r3, r9, ror #5
   22c24:			; <UNDEFINED> instruction: 0x000312b6
   22c28:	andeq	r0, r3, pc, ror #10
   22c2c:	andeq	r0, r3, r7, ror r5
   22c30:	andeq	r1, r3, r2, lsr r1
   22c34:	andeq	r0, r3, pc, asr #10
   22c38:	andeq	r0, r3, r7, asr r5
   22c3c:	andeq	r1, r3, r2, lsl r1
   22c40:	andeq	r0, r3, pc, lsl #10
   22c44:	andeq	r0, r3, r7, lsl r5
   22c48:	ldrdeq	r1, [r3], -r2
   22c4c:	andeq	r0, r3, pc, lsr #10
   22c50:	andeq	r0, r3, r7, lsr r5
   22c54:	strdeq	r1, [r3], -r2
   22c58:	andeq	r0, r3, pc, lsl #11
   22c5c:	muleq	r3, r7, r5
   22c60:	andeq	r1, r3, r2, asr r1
   22c64:	push	{r4, r5, fp, lr}
   22c68:	add	fp, sp, #8
   22c6c:	ldm	r1, {r3, r4}
   22c70:	ldm	r0, {r1, r5}
   22c74:	cmp	r5, r4
   22c78:	mov	r2, r5
   22c7c:	mov	r0, r1
   22c80:	mov	r1, r3
   22c84:	movgt	r2, r4
   22c88:	bl	1491c <memcmp@plt>
   22c8c:	cmp	r0, #0
   22c90:	subeq	r0, r5, r4
   22c94:	pop	{r4, r5, fp, pc}
   22c98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c9c:	add	fp, sp, #28
   22ca0:	sub	sp, sp, #52	; 0x34
   22ca4:	mov	sl, r1
   22ca8:	sub	r5, r3, r2
   22cac:	ldr	r1, [r1]
   22cb0:	mov	r9, r0
   22cb4:	str	r3, [sp, #36]	; 0x24
   22cb8:	str	r2, [sp, #28]
   22cbc:	add	r0, r5, #1
   22cc0:	ldr	r3, [fp, #8]
   22cc4:	ldr	r6, [fp, #12]
   22cc8:	add	r0, r0, r0, lsr #31
   22ccc:	add	r2, r2, r0, asr #1
   22cd0:	add	r0, r1, r2, lsl #4
   22cd4:	str	r2, [fp, #-36]	; 0xffffffdc
   22cd8:	ldr	r0, [r0, #4]
   22cdc:	str	r3, [sp, #40]	; 0x28
   22ce0:	str	r5, [sp, #32]
   22ce4:	cmp	r0, r3
   22ce8:	bge	22d08 <__flatcc_fb_gen_c_json_parser@@Base+0x41ac>
   22cec:	mov	r4, #0
   22cf0:	mov	r8, #0
   22cf4:	mov	r2, #0
   22cf8:	mov	r3, #0
   22cfc:	mov	r7, #0
   22d00:	mov	r5, #0
   22d04:	b	22e98 <__flatcc_fb_gen_c_json_parser@@Base+0x433c>
   22d08:	ldr	lr, [r1, r2, lsl #4]
   22d0c:	sub	ip, r0, r3
   22d10:	mov	r2, #0
   22d14:	cmp	ip, #8
   22d18:	mov	r8, ip
   22d1c:	movge	r8, #8
   22d20:	cmp	r8, #0
   22d24:	add	r4, lr, r3
   22d28:	beq	22e84 <__flatcc_fb_gen_c_json_parser@@Base+0x4328>
   22d2c:	cmp	r8, #1
   22d30:	mov	r1, r8
   22d34:	mov	r3, #0
   22d38:	str	r6, [sp, #20]
   22d3c:	str	r4, [sp, #24]
   22d40:	beq	22de0 <__flatcc_fb_gen_c_json_parser@@Base+0x4284>
   22d44:	ldr	r0, [sp, #24]
   22d48:	vmov.i64	d18, #0xffffffff00000000
   22d4c:	vdup.32	d19, r8
   22d50:	vmov.i32	q8, #0	; 0x00000000
   22d54:	sub	r3, fp, #32
   22d58:	vmov.i32	d20, #56	; 0x00000038
   22d5c:	vmov.i64	q11, #0x00000000000000ff
   22d60:	vmvn.i32	d21, #1	; 0x00000001
   22d64:	vadd.i32	d18, d19, d18
   22d68:	vmov.i8	d19, #255	; 0xff
   22d6c:	sub	r2, r0, #1
   22d70:	bic	r0, r8, #1
   22d74:	sub	r1, r8, r0
   22d78:	mov	r5, r0
   22d7c:	vadd.i32	d24, d18, d19
   22d80:	subs	r5, r5, #2
   22d84:	vadd.i32	d18, d18, d21
   22d88:	vmov.32	r7, d24[0]
   22d8c:	vshl.s32	d24, d24, #3
   22d90:	add	r7, r2, r7
   22d94:	vsub.i32	d24, d20, d24
   22d98:	ldrh	r7, [r7]
   22d9c:	strh	r7, [fp, #-32]	; 0xffffffe0
   22da0:	vld1.16	{d25[0]}, [r3 :16]
   22da4:	vmovl.u8	q13, d25
   22da8:	vmovl.u16	q13, d26
   22dac:	vrev64.32	d25, d26
   22db0:	vmovl.u32	q13, d25
   22db4:	vmovl.u32	q12, d24
   22db8:	vand	q13, q13, q11
   22dbc:	vshl.u64	q12, q13, q12
   22dc0:	vorr	q8, q12, q8
   22dc4:	bne	22d7c <__flatcc_fb_gen_c_json_parser@@Base+0x4220>
   22dc8:	vorr	d18, d17, d17
   22dcc:	cmp	r8, r0
   22dd0:	vorr	q8, q8, q9
   22dd4:	vmov.32	r3, d16[1]
   22dd8:	vmov.32	r2, d16[0]
   22ddc:	beq	22e28 <__flatcc_fb_gen_c_json_parser@@Base+0x42cc>
   22de0:	ldr	r0, [sp, #40]	; 0x28
   22de4:	mov	r7, #64	; 0x40
   22de8:	sub	r5, r7, r1, lsl #3
   22dec:	add	r7, lr, r0
   22df0:	sub	r7, r7, #1
   22df4:	ldrb	r0, [r7, r1]
   22df8:	rsb	r6, r5, #32
   22dfc:	sub	r4, r5, #32
   22e00:	cmp	r4, #0
   22e04:	lsr	r6, r0, r6
   22e08:	lslge	r6, r0, r4
   22e0c:	lsl	r0, r0, r5
   22e10:	add	r5, r5, #8
   22e14:	movwge	r0, #0
   22e18:	orr	r3, r6, r3
   22e1c:	subs	r1, r1, #1
   22e20:	orr	r2, r0, r2
   22e24:	bne	22df4 <__flatcc_fb_gen_c_json_parser@@Base+0x4298>
   22e28:	mov	r1, #64	; 0x40
   22e2c:	mov	r0, #32
   22e30:	mvn	r6, #0
   22e34:	sub	r1, r1, r8, lsl #3
   22e38:	sub	r0, r0, r8, lsl #3
   22e3c:	rsb	r7, r1, #32
   22e40:	cmp	r0, #0
   22e44:	ror	r5, r6, r7
   22e48:	lsl	r7, r6, r1
   22e4c:	lslge	r5, r6, r0
   22e50:	movwge	r7, #0
   22e54:	cmp	ip, #8
   22e58:	blt	22e8c <__flatcc_fb_gen_c_json_parser@@Base+0x4330>
   22e5c:	str	r8, [sp]
   22e60:	mov	r0, r9
   22e64:	ldr	r4, [sp, #24]
   22e68:	str	r4, [sp, #4]
   22e6c:	ldr	r1, [pc, #820]	; 231a8 <__flatcc_fb_gen_c_json_parser@@Base+0x464c>
   22e70:	add	r1, pc, r1
   22e74:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22e78:	ldr	r6, [sp, #20]
   22e7c:	mov	r8, #8
   22e80:	b	22eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x435c>
   22e84:	mov	r3, #0
   22e88:	b	22e98 <__flatcc_fb_gen_c_json_parser@@Base+0x433c>
   22e8c:	ldr	r4, [sp, #24]
   22e90:	ldr	r6, [sp, #20]
   22e94:	mov	r8, ip
   22e98:	stm	sp, {r2, r3, r8}
   22e9c:	str	r4, [sp, #12]
   22ea0:	mov	r0, r9
   22ea4:	mov	r2, r7
   22ea8:	mov	r3, r5
   22eac:	ldr	r1, [pc, #720]	; 23184 <__flatcc_fb_gen_c_json_parser@@Base+0x4628>
   22eb0:	add	r1, pc, r1
   22eb4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22eb8:	ldr	r0, [r9, #220]	; 0xdc
   22ebc:	ldr	r3, [sp, #36]	; 0x24
   22ec0:	add	r0, r0, #1
   22ec4:	str	r0, [r9, #220]	; 0xdc
   22ec8:	ldr	r0, [sp, #32]
   22ecc:	add	r0, r0, #2
   22ed0:	cmp	r0, #2
   22ed4:	bhi	22f1c <__flatcc_fb_gen_c_json_parser@@Base+0x43c0>
   22ed8:	ldm	sl, {r0, r7}
   22edc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22ee0:	ldr	r1, [sl, #12]
   22ee4:	add	r0, r0, r2, lsl #4
   22ee8:	ldr	r2, [r0, #8]
   22eec:	ldr	r3, [r0, #12]
   22ef0:	mov	r0, r9
   22ef4:	str	r8, [sp]
   22ef8:	blx	r7
   22efc:	cmp	r6, #1
   22f00:	blt	22f88 <__flatcc_fb_gen_c_json_parser@@Base+0x442c>
   22f04:	ldr	r1, [pc, #636]	; 23188 <__flatcc_fb_gen_c_json_parser@@Base+0x462c>
   22f08:	mov	r0, r9
   22f0c:	mov	r2, r6
   22f10:	add	r1, pc, r1
   22f14:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22f18:	b	22f94 <__flatcc_fb_gen_c_json_parser@@Base+0x4438>
   22f1c:	ldr	r7, [fp, #-36]	; 0xffffffdc
   22f20:	cmp	r7, r3
   22f24:	bne	22f68 <__flatcc_fb_gen_c_json_parser@@Base+0x440c>
   22f28:	ldm	sl, {r0, r7}
   22f2c:	ldr	r1, [sl, #12]
   22f30:	add	r0, r0, r3, lsl #4
   22f34:	ldr	r2, [r0, #8]
   22f38:	ldr	r3, [r0, #12]
   22f3c:	mov	r0, r9
   22f40:	str	r8, [sp]
   22f44:	blx	r7
   22f48:	cmp	r6, #1
   22f4c:	blt	23024 <__flatcc_fb_gen_c_json_parser@@Base+0x44c8>
   22f50:	ldr	r1, [pc, #576]	; 23198 <__flatcc_fb_gen_c_json_parser@@Base+0x463c>
   22f54:	mov	r0, r9
   22f58:	mov	r2, r6
   22f5c:	add	r1, pc, r1
   22f60:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22f64:	b	23030 <__flatcc_fb_gen_c_json_parser@@Base+0x44d4>
   22f68:	ldr	r0, [sp, #40]	; 0x28
   22f6c:	mov	r1, sl
   22f70:	mov	r2, r7
   22f74:	stm	sp, {r0, r6}
   22f78:	mov	r0, r9
   22f7c:	bl	22c98 <__flatcc_fb_gen_c_json_parser@@Base+0x413c>
   22f80:	add	r5, r9, #220	; 0xdc
   22f84:	b	2305c <__flatcc_fb_gen_c_json_parser@@Base+0x4500>
   22f88:	ldr	r1, [sl, #8]
   22f8c:	mov	r0, r9
   22f90:	blx	r1
   22f94:	mov	r5, r9
   22f98:	ldr	r0, [r5, #220]!	; 0xdc
   22f9c:	cmp	r0, #0
   22fa0:	beq	23104 <__flatcc_fb_gen_c_json_parser@@Base+0x45a8>
   22fa4:	sub	r0, r0, #1
   22fa8:	str	r0, [r9, #220]	; 0xdc
   22fac:	mov	r0, r9
   22fb0:	ldr	r1, [pc, #468]	; 2318c <__flatcc_fb_gen_c_json_parser@@Base+0x4630>
   22fb4:	add	r1, pc, r1
   22fb8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22fbc:	ldr	r0, [r9, #220]	; 0xdc
   22fc0:	cmp	r0, #0
   22fc4:	beq	23124 <__flatcc_fb_gen_c_json_parser@@Base+0x45c8>
   22fc8:	sub	r0, r0, #1
   22fcc:	mov	r2, r8
   22fd0:	mov	r3, r4
   22fd4:	str	r0, [r9, #220]	; 0xdc
   22fd8:	mov	r0, r9
   22fdc:	ldr	r1, [pc, #428]	; 23190 <__flatcc_fb_gen_c_json_parser@@Base+0x4634>
   22fe0:	add	r1, pc, r1
   22fe4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   22fe8:	ldr	r0, [r9, #220]	; 0xdc
   22fec:	cmp	r6, #1
   22ff0:	add	r0, r0, #1
   22ff4:	str	r0, [r9, #220]	; 0xdc
   22ff8:	blt	23014 <__flatcc_fb_gen_c_json_parser@@Base+0x44b8>
   22ffc:	ldr	r1, [pc, #400]	; 23194 <__flatcc_fb_gen_c_json_parser@@Base+0x4638>
   23000:	mov	r0, r9
   23004:	mov	r2, r6
   23008:	add	r1, pc, r1
   2300c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23010:	b	230b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4554>
   23014:	ldr	r1, [sl, #8]
   23018:	mov	r0, r9
   2301c:	blx	r1
   23020:	b	230b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4554>
   23024:	ldr	r1, [sl, #8]
   23028:	mov	r0, r9
   2302c:	blx	r1
   23030:	mov	r5, r9
   23034:	ldr	r7, [fp, #-36]	; 0xffffffdc
   23038:	ldr	r0, [r5, #220]!	; 0xdc
   2303c:	cmp	r0, #0
   23040:	beq	23164 <__flatcc_fb_gen_c_json_parser@@Base+0x4608>
   23044:	sub	r0, r0, #1
   23048:	str	r0, [r9, #220]	; 0xdc
   2304c:	mov	r0, r9
   23050:	ldr	r1, [pc, #324]	; 2319c <__flatcc_fb_gen_c_json_parser@@Base+0x4640>
   23054:	add	r1, pc, r1
   23058:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2305c:	ldr	r0, [r5]
   23060:	cmp	r0, #0
   23064:	beq	23144 <__flatcc_fb_gen_c_json_parser@@Base+0x45e8>
   23068:	sub	r0, r0, #1
   2306c:	mov	r2, r8
   23070:	mov	r3, r4
   23074:	str	r0, [r9, #220]	; 0xdc
   23078:	mov	r0, r9
   2307c:	ldr	r1, [pc, #284]	; 231a0 <__flatcc_fb_gen_c_json_parser@@Base+0x4644>
   23080:	add	r1, pc, r1
   23084:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23088:	ldr	r0, [r9, #220]	; 0xdc
   2308c:	sub	r3, r7, #1
   23090:	mov	r1, sl
   23094:	add	r0, r0, #1
   23098:	str	r0, [r9, #220]	; 0xdc
   2309c:	ldr	r0, [sp, #40]	; 0x28
   230a0:	stm	sp, {r0, r6}
   230a4:	mov	r0, r9
   230a8:	ldr	r2, [sp, #28]
   230ac:	bl	22c98 <__flatcc_fb_gen_c_json_parser@@Base+0x413c>
   230b0:	ldr	r0, [r5]
   230b4:	cmp	r0, #0
   230b8:	beq	230e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4588>
   230bc:	sub	r0, r0, #1
   230c0:	mov	r2, r8
   230c4:	mov	r3, r4
   230c8:	str	r0, [r9, #220]	; 0xdc
   230cc:	mov	r0, r9
   230d0:	ldr	r1, [pc, #204]	; 231a4 <__flatcc_fb_gen_c_json_parser@@Base+0x4648>
   230d4:	add	r1, pc, r1
   230d8:	sub	sp, fp, #28
   230dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   230e0:	b	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   230e4:	ldr	r0, [pc, #240]	; 231dc <__flatcc_fb_gen_c_json_parser@@Base+0x4680>
   230e8:	ldr	r1, [pc, #240]	; 231e0 <__flatcc_fb_gen_c_json_parser@@Base+0x4684>
   230ec:	ldr	r3, [pc, #240]	; 231e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4688>
   230f0:	movw	r2, #910	; 0x38e
   230f4:	add	r0, pc, r0
   230f8:	add	r1, pc, r1
   230fc:	add	r3, pc, r3
   23100:	bl	14a78 <__assert_fail@plt>
   23104:	ldr	r0, [pc, #160]	; 231ac <__flatcc_fb_gen_c_json_parser@@Base+0x4650>
   23108:	ldr	r1, [pc, #160]	; 231b0 <__flatcc_fb_gen_c_json_parser@@Base+0x4654>
   2310c:	ldr	r3, [pc, #160]	; 231b4 <__flatcc_fb_gen_c_json_parser@@Base+0x4658>
   23110:	mov	r2, #888	; 0x378
   23114:	add	r0, pc, r0
   23118:	add	r1, pc, r1
   2311c:	add	r3, pc, r3
   23120:	bl	14a78 <__assert_fail@plt>
   23124:	ldr	r0, [pc, #140]	; 231b8 <__flatcc_fb_gen_c_json_parser@@Base+0x465c>
   23128:	ldr	r1, [pc, #140]	; 231bc <__flatcc_fb_gen_c_json_parser@@Base+0x4660>
   2312c:	ldr	r3, [pc, #140]	; 231c0 <__flatcc_fb_gen_c_json_parser@@Base+0x4664>
   23130:	movw	r2, #889	; 0x379
   23134:	add	r0, pc, r0
   23138:	add	r1, pc, r1
   2313c:	add	r3, pc, r3
   23140:	bl	14a78 <__assert_fail@plt>
   23144:	ldr	r0, [pc, #132]	; 231d0 <__flatcc_fb_gen_c_json_parser@@Base+0x4674>
   23148:	ldr	r1, [pc, #132]	; 231d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4678>
   2314c:	ldr	r3, [pc, #132]	; 231d8 <__flatcc_fb_gen_c_json_parser@@Base+0x467c>
   23150:	movw	r2, #907	; 0x38b
   23154:	add	r0, pc, r0
   23158:	add	r1, pc, r1
   2315c:	add	r3, pc, r3
   23160:	bl	14a78 <__assert_fail@plt>
   23164:	ldr	r0, [pc, #88]	; 231c4 <__flatcc_fb_gen_c_json_parser@@Base+0x4668>
   23168:	ldr	r1, [pc, #88]	; 231c8 <__flatcc_fb_gen_c_json_parser@@Base+0x466c>
   2316c:	ldr	r3, [pc, #88]	; 231cc <__flatcc_fb_gen_c_json_parser@@Base+0x4670>
   23170:	movw	r2, #903	; 0x387
   23174:	add	r0, pc, r0
   23178:	add	r1, pc, r1
   2317c:	add	r3, pc, r3
   23180:	bl	14a78 <__assert_fail@plt>
   23184:	andeq	r0, r3, sp, ror #30
   23188:	andeq	r0, r3, r8, lsr pc
   2318c:	andeq	pc, r1, r3, asr #23
   23190:			; <UNDEFINED> instruction: 0x00030eba
   23194:	andeq	r0, r3, r0, asr #28
   23198:	andeq	r0, r3, ip, ror #29
   2319c:	andeq	pc, r1, r3, lsr #22
   231a0:	andeq	r0, r3, sl, lsl lr
   231a4:	ldrdeq	r0, [r3], -ip
   231a8:	andeq	r0, r3, sp, lsl #31
   231ac:	andeq	pc, r2, fp, asr #31
   231b0:	ldrdeq	pc, [r2], -r3
   231b4:	andeq	r0, r3, ip, lsr sp
   231b8:	andeq	pc, r2, fp, lsr #31
   231bc:			; <UNDEFINED> instruction: 0x0002ffb3
   231c0:	andeq	r0, r3, ip, lsl sp
   231c4:	andeq	pc, r2, fp, ror #30
   231c8:	andeq	pc, r2, r3, ror pc	; <UNPREDICTABLE>
   231cc:	ldrdeq	r0, [r3], -ip
   231d0:	andeq	pc, r2, fp, lsl #31
   231d4:	muleq	r2, r3, pc	; <UNPREDICTABLE>
   231d8:	strdeq	r0, [r3], -ip
   231dc:	andeq	pc, r2, fp, ror #31
   231e0:	strdeq	pc, [r2], -r3
   231e4:	andeq	r0, r3, ip, asr sp
   231e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   231ec:	add	fp, sp, #28
   231f0:	sub	sp, sp, #540	; 0x21c
   231f4:	str	r3, [sp, #32]
   231f8:	mov	r5, r1
   231fc:	mov	r9, r2
   23200:	ldr	r2, [fp, #8]
   23204:	mov	r4, r0
   23208:	ldr	r1, [pc, #3648]	; 24050 <__flatcc_fb_gen_c_json_parser@@Base+0x54f4>
   2320c:	add	r1, pc, r1
   23210:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23214:	ldr	r1, [pc, #3640]	; 24054 <__flatcc_fb_gen_c_json_parser@@Base+0x54f8>
   23218:	mov	r0, r4
   2321c:	add	r1, pc, r1
   23220:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23224:	ldr	r0, [r4, #220]	; 0xdc
   23228:	mov	r1, #0
   2322c:	mov	r2, #220	; 0xdc
   23230:	mov	r8, #0
   23234:	add	r0, r0, #1
   23238:	str	r0, [r4, #220]	; 0xdc
   2323c:	sub	r0, fp, #256	; 0x100
   23240:	bl	149d0 <memset@plt>
   23244:	ldr	r0, [r5, #12]
   23248:	add	r1, sp, #108	; 0x6c
   2324c:	bl	16af8 <__flatcc_fb_copy_scope@@Base>
   23250:	ldrh	r0, [r9, #24]
   23254:	ldrh	r1, [r5, #8]
   23258:	mov	sl, #0
   2325c:	cmp	r0, #15
   23260:	str	r1, [sp, #88]	; 0x58
   23264:	bhi	2327c <__flatcc_fb_gen_c_json_parser@@Base+0x4720>
   23268:	mov	r1, #1
   2326c:	movw	r2, #33408	; 0x8280
   23270:	mov	sl, #0
   23274:	tst	r2, r1, lsl r0
   23278:	movne	sl, #1
   2327c:	sub	r0, r0, #7
   23280:	cmp	r0, #8
   23284:	bhi	23e58 <__flatcc_fb_gen_c_json_parser@@Base+0x52fc>
   23288:	add	r5, pc, #76	; 0x4c
   2328c:	mov	r2, #0
   23290:	mov	r1, #0
   23294:	mov	ip, #0
   23298:	mov	r3, #0
   2329c:	mov	lr, #0
   232a0:	mov	r7, #0
   232a4:	ldr	r6, [r5, r0, lsl #2]
   232a8:	str	r2, [sp, #44]	; 0x2c
   232ac:	mov	r2, #0
   232b0:	mov	r0, #0
   232b4:	str	r2, [sp, #40]	; 0x28
   232b8:	mov	r2, #0
   232bc:	str	r0, [sp, #48]	; 0x30
   232c0:	str	r2, [sp, #84]	; 0x54
   232c4:	mov	r2, #0
   232c8:	str	r2, [sp, #92]	; 0x5c
   232cc:	mov	r2, #0
   232d0:	str	r2, [sp, #28]
   232d4:	mov	r2, #0
   232d8:	add	pc, r5, r6
   232dc:	strdeq	r0, [r0], -r8
   232e0:	andeq	r0, r0, r0, lsl r1
   232e4:	andeq	r0, r0, r4, lsr #32
   232e8:	andeq	r0, r0, r4, lsr #32
   232ec:	andeq	r0, r0, r0, asr r1
   232f0:	andeq	r0, r0, r0, asr r1
   232f4:	andeq	r0, r0, r0, asr r1
   232f8:	andeq	r0, r0, r4, asr r0
   232fc:	andeq	r0, r0, r4, asr r0
   23300:	mov	r0, #1
   23304:	str	r0, [sp, #44]	; 0x2c
   23308:	mov	r0, #0
   2330c:	mov	lr, #0
   23310:	str	r0, [sp, #40]	; 0x28
   23314:	mov	r0, #0
   23318:	str	r0, [sp, #84]	; 0x54
   2331c:	mov	r0, #0
   23320:	str	r0, [sp, #92]	; 0x5c
   23324:	mov	r0, #0
   23328:	str	r0, [sp, #28]
   2332c:	b	233c0 <__flatcc_fb_gen_c_json_parser@@Base+0x4864>
   23330:	ldr	r1, [r9, #16]
   23334:	sub	r2, fp, #256	; 0x100
   23338:	ldr	r0, [r1, #12]
   2333c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   23340:	ldr	r0, [r9, #16]
   23344:	ldr	r3, [sp, #32]
   23348:	ldrh	r1, [r0, #8]
   2334c:	eor	r2, r1, #4
   23350:	cmp	r1, #3
   23354:	orr	r2, r3, r2
   23358:	clz	r2, r2
   2335c:	lsr	r2, r2, #5
   23360:	str	r2, [sp, #28]
   23364:	clz	r2, r1
   23368:	lsr	r2, r2, #5
   2336c:	str	r2, [sp, #84]	; 0x54
   23370:	sub	r2, r1, #1
   23374:	clz	r2, r2
   23378:	lsr	r2, r2, #5
   2337c:	str	r2, [sp, #92]	; 0x5c
   23380:	bne	233ac <__flatcc_fb_gen_c_json_parser@@Base+0x4850>
   23384:	ldr	r0, [r0, #40]	; 0x28
   23388:	mov	lr, #1
   2338c:	mov	r2, #0
   23390:	mov	r7, #0
   23394:	str	r0, [sp, #48]	; 0x30
   23398:	mov	r0, #1
   2339c:	str	r0, [sp, #40]	; 0x28
   233a0:	mov	r0, #0
   233a4:	str	r0, [sp, #44]	; 0x2c
   233a8:	b	2342c <__flatcc_fb_gen_c_json_parser@@Base+0x48d0>
   233ac:	mov	r0, #0
   233b0:	mov	lr, #0
   233b4:	str	r0, [sp, #44]	; 0x2c
   233b8:	mov	r0, #0
   233bc:	str	r0, [sp, #40]	; 0x28
   233c0:	mov	r0, #0
   233c4:	mov	r2, #0
   233c8:	mov	r7, #0
   233cc:	str	r0, [sp, #48]	; 0x30
   233d0:	b	2342c <__flatcc_fb_gen_c_json_parser@@Base+0x48d0>
   233d4:	ldr	r3, [r9, #104]	; 0x68
   233d8:	ldrh	r1, [r9, #72]	; 0x48
   233dc:	cmp	r3, #0
   233e0:	and	ip, r1, #2048	; 0x800
   233e4:	and	r1, r1, #1024	; 0x400
   233e8:	movwne	r3, #1
   233ec:	ldr	r2, [r9, #16]
   233f0:	mov	lr, #1
   233f4:	mov	r8, r1
   233f8:	mov	r7, r3
   233fc:	str	r2, [sp, #48]	; 0x30
   23400:	mov	r2, #0
   23404:	str	r2, [sp, #44]	; 0x2c
   23408:	mov	r2, #0
   2340c:	str	r2, [sp, #40]	; 0x28
   23410:	mov	r2, #0
   23414:	str	r2, [sp, #84]	; 0x54
   23418:	mov	r2, #0
   2341c:	str	r2, [sp, #92]	; 0x5c
   23420:	mov	r2, #0
   23424:	str	r2, [sp, #28]
   23428:	mov	r2, ip
   2342c:	orrs	r0, r2, r8
   23430:	str	r0, [sp, #60]	; 0x3c
   23434:	beq	234a8 <__flatcc_fb_gen_c_json_parser@@Base+0x494c>
   23438:	cmp	sl, #0
   2343c:	beq	23458 <__flatcc_fb_gen_c_json_parser@@Base+0x48fc>
   23440:	ldr	r0, [sp, #48]	; 0x30
   23444:	mov	r3, #0
   23448:	mov	lr, #0
   2344c:	mov	r7, #0
   23450:	cmp	r0, #4
   23454:	beq	234ac <__flatcc_fb_gen_c_json_parser@@Base+0x4950>
   23458:	ldr	r0, [pc, #3420]	; 241bc <__flatcc_fb_gen_c_json_parser@@Base+0x5660>
   2345c:	movw	r3, #466	; 0x1d2
   23460:	ldr	r0, [pc, r0]
   23464:	ldr	r0, [r0]
   23468:	ldr	r1, [pc, #3408]	; 241c0 <__flatcc_fb_gen_c_json_parser@@Base+0x5664>
   2346c:	add	r1, pc, r1
   23470:	str	r1, [sp]
   23474:	ldr	r1, [pc, #3400]	; 241c4 <__flatcc_fb_gen_c_json_parser@@Base+0x5668>
   23478:	ldr	r4, [pc, #3400]	; 241c8 <__flatcc_fb_gen_c_json_parser@@Base+0x566c>
   2347c:	add	r4, pc, r4
   23480:	add	r1, pc, r1
   23484:	mov	r2, r4
   23488:	bl	149b8 <fprintf@plt>
   2348c:	ldr	r0, [pc, #3384]	; 241cc <__flatcc_fb_gen_c_json_parser@@Base+0x5670>
   23490:	ldr	r3, [pc, #3384]	; 241d0 <__flatcc_fb_gen_c_json_parser@@Base+0x5674>
   23494:	mov	r1, r4
   23498:	movw	r2, #466	; 0x1d2
   2349c:	add	r0, pc, r0
   234a0:	add	r3, pc, r3
   234a4:	bl	14a78 <__assert_fail@plt>
   234a8:	mov	r3, sl
   234ac:	ldr	r2, [sp, #32]
   234b0:	cmp	r3, #0
   234b4:	mov	r0, r3
   234b8:	movwne	r0, #1
   234bc:	cmp	r2, #0
   234c0:	mov	r1, r2
   234c4:	movwne	r1, #1
   234c8:	ands	r0, r1, r0
   234cc:	ldr	r1, [sp, #28]
   234d0:	movwne	r3, #0
   234d4:	str	r0, [sp, #16]
   234d8:	cmp	r3, #0
   234dc:	mov	r0, r3
   234e0:	movwne	r0, #1
   234e4:	cmp	r1, #0
   234e8:	movwne	r1, #1
   234ec:	ands	r0, r1, r0
   234f0:	movwne	r3, #0
   234f4:	cmp	r2, #0
   234f8:	str	r0, [sp, #20]
   234fc:	movwne	lr, #0
   23500:	cmp	r7, #0
   23504:	str	r3, [sp, #96]	; 0x60
   23508:	str	lr, [sp, #80]	; 0x50
   2350c:	beq	2352c <__flatcc_fb_gen_c_json_parser@@Base+0x49d0>
   23510:	ldr	r1, [pc, #2880]	; 24058 <__flatcc_fb_gen_c_json_parser@@Base+0x54fc>
   23514:	mov	r0, r4
   23518:	add	r1, pc, r1
   2351c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23520:	ldr	r0, [r4, #220]	; 0xdc
   23524:	add	r0, r0, #1
   23528:	str	r0, [r4, #220]	; 0xdc
   2352c:	add	r0, r9, #48	; 0x30
   23530:	str	r0, [sp, #36]	; 0x24
   23534:	add	r0, r9, #88	; 0x58
   23538:	str	r0, [sp, #64]	; 0x40
   2353c:	add	r0, r9, #96	; 0x60
   23540:	str	r0, [sp, #56]	; 0x38
   23544:	add	r0, r9, #80	; 0x50
   23548:	str	r0, [sp, #52]	; 0x34
   2354c:	clz	r0, r8
   23550:	lsr	r0, r0, #5
   23554:	str	r0, [sp, #24]
   23558:	ldr	r0, [sp, #32]
   2355c:	clz	r0, r0
   23560:	lsr	r0, r0, #5
   23564:	str	r0, [sp, #76]	; 0x4c
   23568:	ldr	r0, [pc, #2796]	; 2405c <__flatcc_fb_gen_c_json_parser@@Base+0x5500>
   2356c:	str	r9, [sp, #68]	; 0x44
   23570:	add	r0, pc, r0
   23574:	str	r0, [sp, #100]	; 0x64
   23578:	str	r0, [sp, #72]	; 0x48
   2357c:	b	236f8 <__flatcc_fb_gen_c_json_parser@@Base+0x4b9c>
   23580:	ldr	r0, [sp, #84]	; 0x54
   23584:	cmp	r0, #0
   23588:	beq	2359c <__flatcc_fb_gen_c_json_parser@@Base+0x4a40>
   2358c:	ldr	r1, [pc, #3004]	; 24150 <__flatcc_fb_gen_c_json_parser@@Base+0x55f4>
   23590:	mov	r0, r4
   23594:	add	r1, pc, r1
   23598:	b	23c10 <__flatcc_fb_gen_c_json_parser@@Base+0x50b4>
   2359c:	ldr	r0, [sp, #28]
   235a0:	cmp	r0, #0
   235a4:	beq	235dc <__flatcc_fb_gen_c_json_parser@@Base+0x4a80>
   235a8:	ldr	r0, [sp, #56]	; 0x38
   235ac:	ldr	r3, [sp, #20]
   235b0:	ldr	r2, [r9, #112]	; 0x70
   235b4:	ldrd	r0, [r0]
   235b8:	cmp	r3, #0
   235bc:	beq	236a4 <__flatcc_fb_gen_c_json_parser@@Base+0x4b48>
   235c0:	stm	sp, {r0, r1}
   235c4:	sub	r0, fp, #256	; 0x100
   235c8:	str	r0, [sp, #8]
   235cc:	mov	r0, r4
   235d0:	ldr	r1, [pc, #2940]	; 24154 <__flatcc_fb_gen_c_json_parser@@Base+0x55f8>
   235d4:	add	r1, pc, r1
   235d8:	b	236e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4b88>
   235dc:	ldr	r0, [sp, #32]
   235e0:	cmp	r0, #0
   235e4:	beq	236c0 <__flatcc_fb_gen_c_json_parser@@Base+0x4b64>
   235e8:	ldr	r1, [pc, #2944]	; 24170 <__flatcc_fb_gen_c_json_parser@@Base+0x5614>
   235ec:	mov	r0, r4
   235f0:	add	r1, pc, r1
   235f4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   235f8:	ldr	r0, [r4, #220]	; 0xdc
   235fc:	sub	r2, fp, #256	; 0x100
   23600:	add	r0, r0, #2
   23604:	str	r0, [r4, #220]	; 0xdc
   23608:	mov	r0, r4
   2360c:	ldr	r1, [pc, #2912]	; 24174 <__flatcc_fb_gen_c_json_parser@@Base+0x5618>
   23610:	add	r1, pc, r1
   23614:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23618:	ldr	r0, [r4, #208]	; 0xd0
   2361c:	add	r3, sp, #108	; 0x6c
   23620:	ldr	r2, [r0, #160]	; 0xa0
   23624:	ldr	r1, [pc, #2892]	; 24178 <__flatcc_fb_gen_c_json_parser@@Base+0x561c>
   23628:	mov	r0, r4
   2362c:	add	r1, pc, r1
   23630:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23634:	ldr	r0, [r4, #208]	; 0xd0
   23638:	ldr	r2, [r0, #160]	; 0xa0
   2363c:	ldr	r1, [pc, #2872]	; 2417c <__flatcc_fb_gen_c_json_parser@@Base+0x5620>
   23640:	mov	r0, r4
   23644:	add	r1, pc, r1
   23648:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2364c:	ldr	r0, [r4, #220]	; 0xdc
   23650:	cmp	r0, #0
   23654:	beq	23fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x5444>
   23658:	subs	r1, r0, #1
   2365c:	str	r1, [r4, #220]	; 0xdc
   23660:	beq	23fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x5444>
   23664:	sub	r0, r0, #2
   23668:	ldr	r3, [sp, #16]
   2366c:	str	r0, [r4, #220]	; 0xdc
   23670:	ldr	r0, [sp, #56]	; 0x38
   23674:	ldr	r2, [r9, #112]	; 0x70
   23678:	cmp	r3, #0
   2367c:	ldrd	r0, [r0]
   23680:	beq	236cc <__flatcc_fb_gen_c_json_parser@@Base+0x4b70>
   23684:	stm	sp, {r0, r1}
   23688:	sub	r0, fp, #256	; 0x100
   2368c:	str	r0, [sp, #8]
   23690:	str	r0, [sp, #12]
   23694:	mov	r0, r4
   23698:	ldr	r1, [pc, #2784]	; 24180 <__flatcc_fb_gen_c_json_parser@@Base+0x5624>
   2369c:	add	r1, pc, r1
   236a0:	b	236e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4b88>
   236a4:	stm	sp, {r0, r1}
   236a8:	sub	r0, fp, #256	; 0x100
   236ac:	str	r0, [sp, #8]
   236b0:	mov	r0, r4
   236b4:	ldr	r1, [pc, #2736]	; 2416c <__flatcc_fb_gen_c_json_parser@@Base+0x5610>
   236b8:	add	r1, pc, r1
   236bc:	b	236e4 <__flatcc_fb_gen_c_json_parser@@Base+0x4b88>
   236c0:	cmp	sl, #0
   236c4:	bne	23cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x5178>
   236c8:	b	23fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x5464>
   236cc:	stm	sp, {r0, r1}
   236d0:	sub	r0, fp, #256	; 0x100
   236d4:	str	r0, [sp, #8]
   236d8:	mov	r0, r4
   236dc:	ldr	r1, [pc, #2720]	; 24184 <__flatcc_fb_gen_c_json_parser@@Base+0x5628>
   236e0:	add	r1, pc, r1
   236e4:	mov	r3, #0
   236e8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   236ec:	cmp	sl, #0
   236f0:	bne	23cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x5178>
   236f4:	b	23d78 <__flatcc_fb_gen_c_json_parser@@Base+0x521c>
   236f8:	cmp	r7, #2
   236fc:	mov	r1, r7
   23700:	str	r7, [sp, #104]	; 0x68
   23704:	bne	237a8 <__flatcc_fb_gen_c_json_parser@@Base+0x4c4c>
   23708:	ldr	r0, [r4, #220]	; 0xdc
   2370c:	cmp	r0, #0
   23710:	beq	23e60 <__flatcc_fb_gen_c_json_parser@@Base+0x5304>
   23714:	sub	r0, r0, #1
   23718:	str	r0, [r4, #220]	; 0xdc
   2371c:	mov	r0, r4
   23720:	ldr	r1, [pc, #2360]	; 24060 <__flatcc_fb_gen_c_json_parser@@Base+0x5504>
   23724:	add	r1, pc, r1
   23728:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2372c:	ldr	r0, [r4, #220]	; 0xdc
   23730:	sub	r2, fp, #256	; 0x100
   23734:	add	r0, r0, #1
   23738:	str	r0, [r4, #220]	; 0xdc
   2373c:	ldr	r1, [r9, #104]	; 0x68
   23740:	ldr	r0, [r1, #12]
   23744:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   23748:	ldr	r0, [r9, #104]	; 0x68
   2374c:	ldrh	r5, [r0, #8]
   23750:	ldr	r1, [pc, #2316]	; 24064 <__flatcc_fb_gen_c_json_parser@@Base+0x5508>
   23754:	mov	r0, r4
   23758:	add	r1, pc, r1
   2375c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23760:	ldr	r0, [sp, #92]	; 0x5c
   23764:	cmp	r5, #0
   23768:	mov	sl, #0
   2376c:	movne	r0, #1
   23770:	str	r0, [sp, #92]	; 0x5c
   23774:	clz	r0, r0
   23778:	lsr	r6, r0, #5
   2377c:	ldr	r0, [sp, #76]	; 0x4c
   23780:	and	r8, r6, r0
   23784:	ldr	r0, [sp, #84]	; 0x54
   23788:	movweq	r0, #1
   2378c:	str	r0, [sp, #84]	; 0x54
   23790:	mov	r0, #0
   23794:	str	r0, [sp, #96]	; 0x60
   23798:	mov	r0, #0
   2379c:	str	r0, [sp, #80]	; 0x50
   237a0:	mov	r5, #0
   237a4:	b	23aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x4f44>
   237a8:	ldr	r7, [sp, #80]	; 0x50
   237ac:	cmp	r7, #0
   237b0:	beq	2383c <__flatcc_fb_gen_c_json_parser@@Base+0x4ce0>
   237b4:	ldr	r0, [sp, #48]	; 0x30
   237b8:	sub	r0, r0, #1
   237bc:	cmp	r0, #10
   237c0:	bhi	23ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x5384>
   237c4:	add	r2, pc, #48	; 0x30
   237c8:	mov	r9, #1
   237cc:	ldr	r3, [r2, r0, lsl #2]
   237d0:	ldr	r0, [pc, #2192]	; 24068 <__flatcc_fb_gen_c_json_parser@@Base+0x550c>
   237d4:	ldr	r1, [pc, #2192]	; 2406c <__flatcc_fb_gen_c_json_parser@@Base+0x5510>
   237d8:	ldr	r6, [pc, #2192]	; 24070 <__flatcc_fb_gen_c_json_parser@@Base+0x5514>
   237dc:	add	r6, pc, r6
   237e0:	add	r0, pc, r0
   237e4:	add	r1, pc, r1
   237e8:	str	r6, [sp, #100]	; 0x64
   237ec:	ldr	r6, [pc, #2176]	; 24074 <__flatcc_fb_gen_c_json_parser@@Base+0x5518>
   237f0:	add	r6, pc, r6
   237f4:	str	r6, [sp, #72]	; 0x48
   237f8:	add	pc, r2, r3
   237fc:	andeq	r0, r0, ip, lsr #32
   23800:	ldrdeq	r0, [r0], -r8
   23804:	andeq	r0, r0, r8, rrx
   23808:	andeq	r0, r0, r8, asr #32
   2380c:	andeq	r0, r0, r0, ror #1
   23810:	muleq	r0, r0, r0
   23814:	andeq	r0, r0, r4, lsr #1
   23818:	andeq	r0, r0, ip, ror r0
   2381c:	andeq	r0, r0, r8, asr #1
   23820:	andeq	r0, r0, ip, asr r0
   23824:	strheq	r0, [r0], -r8
   23828:	ldr	r0, [pc, #2120]	; 24078 <__flatcc_fb_gen_c_json_parser@@Base+0x551c>
   2382c:	ldr	r1, [pc, #2120]	; 2407c <__flatcc_fb_gen_c_json_parser@@Base+0x5520>
   23830:	add	r0, pc, r0
   23834:	add	r1, pc, r1
   23838:	b	238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4d78>
   2383c:	mov	r9, #0
   23840:	b	238dc <__flatcc_fb_gen_c_json_parser@@Base+0x4d80>
   23844:	ldr	r0, [pc, #2132]	; 240a0 <__flatcc_fb_gen_c_json_parser@@Base+0x5544>
   23848:	ldr	r1, [pc, #2132]	; 240a4 <__flatcc_fb_gen_c_json_parser@@Base+0x5548>
   2384c:	add	r0, pc, r0
   23850:	add	r1, pc, r1
   23854:	b	238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4d78>
   23858:	ldr	r1, [pc, #2156]	; 240cc <__flatcc_fb_gen_c_json_parser@@Base+0x5570>
   2385c:	add	r1, pc, r1
   23860:	b	238bc <__flatcc_fb_gen_c_json_parser@@Base+0x4d60>
   23864:	ldr	r0, [pc, #2092]	; 24098 <__flatcc_fb_gen_c_json_parser@@Base+0x553c>
   23868:	ldr	r1, [pc, #2092]	; 2409c <__flatcc_fb_gen_c_json_parser@@Base+0x5540>
   2386c:	add	r0, pc, r0
   23870:	add	r1, pc, r1
   23874:	b	238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4d78>
   23878:	ldr	r0, [pc, #2104]	; 240b8 <__flatcc_fb_gen_c_json_parser@@Base+0x555c>
   2387c:	ldr	r1, [pc, #2104]	; 240bc <__flatcc_fb_gen_c_json_parser@@Base+0x5560>
   23880:	add	r0, pc, r0
   23884:	add	r1, pc, r1
   23888:	b	238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4d78>
   2388c:	ldr	r0, [pc, #2068]	; 240a8 <__flatcc_fb_gen_c_json_parser@@Base+0x554c>
   23890:	ldr	r1, [pc, #2068]	; 240ac <__flatcc_fb_gen_c_json_parser@@Base+0x5550>
   23894:	add	r0, pc, r0
   23898:	add	r1, pc, r1
   2389c:	b	238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4d78>
   238a0:	ldr	r0, [pc, #2056]	; 240b0 <__flatcc_fb_gen_c_json_parser@@Base+0x5554>
   238a4:	ldr	r1, [pc, #2056]	; 240b4 <__flatcc_fb_gen_c_json_parser@@Base+0x5558>
   238a8:	add	r0, pc, r0
   238ac:	add	r1, pc, r1
   238b0:	b	238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4d78>
   238b4:	ldr	r1, [pc, #2060]	; 240c8 <__flatcc_fb_gen_c_json_parser@@Base+0x556c>
   238b8:	add	r1, pc, r1
   238bc:	mov	r0, r1
   238c0:	b	238d4 <__flatcc_fb_gen_c_json_parser@@Base+0x4d78>
   238c4:	ldr	r0, [pc, #2036]	; 240c0 <__flatcc_fb_gen_c_json_parser@@Base+0x5564>
   238c8:	ldr	r1, [pc, #2036]	; 240c4 <__flatcc_fb_gen_c_json_parser@@Base+0x5568>
   238cc:	add	r0, pc, r0
   238d0:	add	r1, pc, r1
   238d4:	str	r0, [sp, #100]	; 0x64
   238d8:	str	r1, [sp, #72]	; 0x48
   238dc:	ldr	r1, [sp, #92]	; 0x5c
   238e0:	ldr	r2, [sp, #76]	; 0x4c
   238e4:	orr	r0, r1, r7
   238e8:	clz	r0, r0
   238ec:	lsr	r0, r0, #5
   238f0:	and	r8, r0, r2
   238f4:	clz	r0, r1
   238f8:	lsr	r6, r0, #5
   238fc:	ldr	r0, [sp, #96]	; 0x60
   23900:	cmp	r0, #0
   23904:	beq	23924 <__flatcc_fb_gen_c_json_parser@@Base+0x4dc8>
   23908:	cmp	r8, #0
   2390c:	beq	23940 <__flatcc_fb_gen_c_json_parser@@Base+0x4de4>
   23910:	ldr	r1, [pc, #1976]	; 240d0 <__flatcc_fb_gen_c_json_parser@@Base+0x5574>
   23914:	mov	r0, r4
   23918:	add	r1, pc, r1
   2391c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23920:	b	23990 <__flatcc_fb_gen_c_json_parser@@Base+0x4e34>
   23924:	cmp	r9, #0
   23928:	ldr	r9, [sp, #68]	; 0x44
   2392c:	mov	sl, #0
   23930:	bne	239d0 <__flatcc_fb_gen_c_json_parser@@Base+0x4e74>
   23934:	mov	r0, #0
   23938:	str	r0, [sp, #96]	; 0x60
   2393c:	b	237a0 <__flatcc_fb_gen_c_json_parser@@Base+0x4c44>
   23940:	ldr	r0, [sp, #64]	; 0x40
   23944:	mov	r1, #0
   23948:	ldm	r0, {r5, r7}
   2394c:	mvn	r0, #0
   23950:	orrs	r3, r5, r7
   23954:	mov	r2, r5
   23958:	movweq	r2, #1
   2395c:	movne	r3, r7
   23960:	bl	3e9c0 <fb_value_set_visit@@Base+0x664>
   23964:	ldr	r2, [sp, #68]	; 0x44
   23968:	mov	r3, r7
   2396c:	ldrsh	r2, [r2, #74]	; 0x4a
   23970:	str	r0, [sp, #8]
   23974:	str	r1, [sp, #12]
   23978:	mov	r0, r4
   2397c:	str	r2, [sp]
   23980:	mov	r2, r5
   23984:	ldr	r1, [pc, #1864]	; 240d4 <__flatcc_fb_gen_c_json_parser@@Base+0x5578>
   23988:	add	r1, pc, r1
   2398c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23990:	ldr	r1, [pc, #1856]	; 240d8 <__flatcc_fb_gen_c_json_parser@@Base+0x557c>
   23994:	mov	r0, r4
   23998:	add	r1, pc, r1
   2399c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   239a0:	ldr	r1, [pc, #1844]	; 240dc <__flatcc_fb_gen_c_json_parser@@Base+0x5580>
   239a4:	mov	r0, r4
   239a8:	add	r1, pc, r1
   239ac:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   239b0:	ldr	r0, [r4, #220]	; 0xdc
   239b4:	cmp	r9, #0
   239b8:	ldr	r9, [sp, #68]	; 0x44
   239bc:	mov	r5, #0
   239c0:	mov	sl, #1
   239c4:	add	r0, r0, #1
   239c8:	str	r0, [r4, #220]	; 0xdc
   239cc:	beq	23a78 <__flatcc_fb_gen_c_json_parser@@Base+0x4f1c>
   239d0:	ldr	r1, [pc, #1800]	; 240e0 <__flatcc_fb_gen_c_json_parser@@Base+0x5584>
   239d4:	ldr	r2, [sp, #72]	; 0x48
   239d8:	mov	r0, r4
   239dc:	add	r1, pc, r1
   239e0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   239e4:	ldr	r1, [pc, #1784]	; 240e4 <__flatcc_fb_gen_c_json_parser@@Base+0x5588>
   239e8:	mov	r0, r4
   239ec:	add	r1, pc, r1
   239f0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   239f4:	ldr	r0, [r4, #220]	; 0xdc
   239f8:	add	r0, r0, #2
   239fc:	str	r0, [r4, #220]	; 0xdc
   23a00:	ldr	r0, [sp, #40]	; 0x28
   23a04:	cmp	r0, #0
   23a08:	beq	23a20 <__flatcc_fb_gen_c_json_parser@@Base+0x4ec4>
   23a0c:	ldr	r1, [pc, #1748]	; 240e8 <__flatcc_fb_gen_c_json_parser@@Base+0x558c>
   23a10:	mov	r0, r4
   23a14:	sub	r2, fp, #256	; 0x100
   23a18:	add	r1, pc, r1
   23a1c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23a20:	ldr	r0, [r4, #208]	; 0xd0
   23a24:	add	r3, sp, #108	; 0x6c
   23a28:	ldr	r2, [r0, #160]	; 0xa0
   23a2c:	ldr	r1, [pc, #1720]	; 240ec <__flatcc_fb_gen_c_json_parser@@Base+0x5590>
   23a30:	mov	r0, r4
   23a34:	add	r1, pc, r1
   23a38:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23a3c:	ldr	r0, [r4, #208]	; 0xd0
   23a40:	ldr	r2, [r0, #160]	; 0xa0
   23a44:	ldr	r1, [pc, #1700]	; 240f0 <__flatcc_fb_gen_c_json_parser@@Base+0x5594>
   23a48:	mov	r0, r4
   23a4c:	add	r1, pc, r1
   23a50:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23a54:	ldr	r0, [r4, #220]	; 0xdc
   23a58:	cmp	r0, #0
   23a5c:	beq	23e80 <__flatcc_fb_gen_c_json_parser@@Base+0x5324>
   23a60:	subs	r1, r0, #1
   23a64:	str	r1, [r4, #220]	; 0xdc
   23a68:	beq	23e80 <__flatcc_fb_gen_c_json_parser@@Base+0x5324>
   23a6c:	sub	r0, r0, #2
   23a70:	mov	r5, #1
   23a74:	str	r0, [r4, #220]	; 0xdc
   23a78:	ldr	r0, [sp, #96]	; 0x60
   23a7c:	clz	r0, r0
   23a80:	lsr	r0, r0, #5
   23a84:	orrs	r0, r0, r8
   23a88:	bne	23aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x4f44>
   23a8c:	ldr	r1, [pc, #1632]	; 240f4 <__flatcc_fb_gen_c_json_parser@@Base+0x5598>
   23a90:	mov	r0, r4
   23a94:	add	r1, pc, r1
   23a98:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23a9c:	mov	r8, #0
   23aa0:	ldr	r0, [sp, #88]	; 0x58
   23aa4:	cmp	r0, #1
   23aa8:	bne	23ac4 <__flatcc_fb_gen_c_json_parser@@Base+0x4f68>
   23aac:	ldr	r0, [sp, #52]	; 0x34
   23ab0:	ldrd	r2, [r0]
   23ab4:	ldr	r1, [pc, #1596]	; 240f8 <__flatcc_fb_gen_c_json_parser@@Base+0x559c>
   23ab8:	mov	r0, r4
   23abc:	add	r1, pc, r1
   23ac0:	b	23af0 <__flatcc_fb_gen_c_json_parser@@Base+0x4f94>
   23ac4:	orrs	r0, sl, r6
   23ac8:	bne	23af4 <__flatcc_fb_gen_c_json_parser@@Base+0x4f98>
   23acc:	ldr	r0, [sp, #56]	; 0x38
   23ad0:	ldrh	r7, [r9, #74]	; 0x4a
   23ad4:	ldrd	r2, [r0]
   23ad8:	ldr	r0, [sp, #64]	; 0x40
   23adc:	ldrd	r0, [r0]
   23ae0:	stm	sp, {r0, r1, r7}
   23ae4:	mov	r0, r4
   23ae8:	ldr	r1, [pc, #1548]	; 240fc <__flatcc_fb_gen_c_json_parser@@Base+0x55a0>
   23aec:	add	r1, pc, r1
   23af0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23af4:	cmp	r5, #0
   23af8:	beq	23bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x5078>
   23afc:	ldr	r1, [pc, #1532]	; 24100 <__flatcc_fb_gen_c_json_parser@@Base+0x55a4>
   23b00:	ldr	r5, [sp, #100]	; 0x64
   23b04:	mov	r0, r4
   23b08:	add	r1, pc, r1
   23b0c:	mov	r2, r5
   23b10:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23b14:	ldr	r1, [pc, #1512]	; 24104 <__flatcc_fb_gen_c_json_parser@@Base+0x55a8>
   23b18:	mov	r0, r4
   23b1c:	add	r1, pc, r1
   23b20:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23b24:	ldr	r0, [r4, #220]	; 0xdc
   23b28:	mov	r2, r5
   23b2c:	add	r0, r0, #1
   23b30:	str	r0, [r4, #220]	; 0xdc
   23b34:	mov	r0, r4
   23b38:	ldr	r1, [pc, #1480]	; 24108 <__flatcc_fb_gen_c_json_parser@@Base+0x55ac>
   23b3c:	add	r1, pc, r1
   23b40:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23b44:	ldr	r1, [pc, #1472]	; 2410c <__flatcc_fb_gen_c_json_parser@@Base+0x55b0>
   23b48:	mov	r0, r4
   23b4c:	add	r1, pc, r1
   23b50:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23b54:	ldr	r0, [r4, #220]	; 0xdc
   23b58:	cmp	r0, #0
   23b5c:	beq	23ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x5344>
   23b60:	sub	r0, r0, #1
   23b64:	str	r0, [r4, #220]	; 0xdc
   23b68:	mov	r0, r4
   23b6c:	ldr	r1, [pc, #1436]	; 24110 <__flatcc_fb_gen_c_json_parser@@Base+0x55b4>
   23b70:	add	r1, pc, r1
   23b74:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23b78:	ldr	r0, [sp, #88]	; 0x58
   23b7c:	sub	r0, r0, #1
   23b80:	clz	r0, r0
   23b84:	lsr	r0, r0, #5
   23b88:	orr	r5, r0, sl
   23b8c:	ldr	r0, [sp, #60]	; 0x3c
   23b90:	cmp	r0, #0
   23b94:	cmpeq	r5, #0
   23b98:	bne	23cac <__flatcc_fb_gen_c_json_parser@@Base+0x5150>
   23b9c:	ldrh	r0, [r9, #56]	; 0x38
   23ba0:	sub	r1, r0, #5
   23ba4:	cmp	r1, #2
   23ba8:	bcc	23c44 <__flatcc_fb_gen_c_json_parser@@Base+0x50e8>
   23bac:	cmp	r0, #3
   23bb0:	beq	23c5c <__flatcc_fb_gen_c_json_parser@@Base+0x5100>
   23bb4:	cmp	r0, #4
   23bb8:	bne	23f50 <__flatcc_fb_gen_c_json_parser@@Base+0x53f4>
   23bbc:	ldr	r0, [sp, #36]	; 0x24
   23bc0:	ldrd	r2, [r0]
   23bc4:	ldr	r1, [pc, #1352]	; 24114 <__flatcc_fb_gen_c_json_parser@@Base+0x55b8>
   23bc8:	mov	r0, r4
   23bcc:	add	r1, pc, r1
   23bd0:	b	23c74 <__flatcc_fb_gen_c_json_parser@@Base+0x5118>
   23bd4:	cmp	r6, #0
   23bd8:	beq	23c04 <__flatcc_fb_gen_c_json_parser@@Base+0x50a8>
   23bdc:	ldr	r0, [sp, #44]	; 0x2c
   23be0:	cmp	r0, #0
   23be4:	beq	23c24 <__flatcc_fb_gen_c_json_parser@@Base+0x50c8>
   23be8:	ldr	r1, [pc, #1368]	; 24148 <__flatcc_fb_gen_c_json_parser@@Base+0x55ec>
   23bec:	mov	r0, r4
   23bf0:	add	r1, pc, r1
   23bf4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23bf8:	cmp	sl, #0
   23bfc:	bne	23cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x5178>
   23c00:	b	23d78 <__flatcc_fb_gen_c_json_parser@@Base+0x521c>
   23c04:	ldr	r1, [pc, #1336]	; 24144 <__flatcc_fb_gen_c_json_parser@@Base+0x55e8>
   23c08:	mov	r0, r4
   23c0c:	add	r1, pc, r1
   23c10:	sub	r2, fp, #256	; 0x100
   23c14:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23c18:	cmp	sl, #0
   23c1c:	bne	23cd4 <__flatcc_fb_gen_c_json_parser@@Base+0x5178>
   23c20:	b	23d78 <__flatcc_fb_gen_c_json_parser@@Base+0x521c>
   23c24:	ldr	r0, [sp, #60]	; 0x3c
   23c28:	cmp	r0, #0
   23c2c:	beq	23580 <__flatcc_fb_gen_c_json_parser@@Base+0x4a24>
   23c30:	ldr	r1, [pc, #1300]	; 2414c <__flatcc_fb_gen_c_json_parser@@Base+0x55f0>
   23c34:	ldr	r2, [sp, #24]
   23c38:	mov	r0, r4
   23c3c:	add	r1, pc, r1
   23c40:	b	23c14 <__flatcc_fb_gen_c_json_parser@@Base+0x50b8>
   23c44:	ldr	r0, [sp, #36]	; 0x24
   23c48:	ldrd	r2, [r0]
   23c4c:	ldr	r1, [pc, #1248]	; 24134 <__flatcc_fb_gen_c_json_parser@@Base+0x55d8>
   23c50:	mov	r0, r4
   23c54:	add	r1, pc, r1
   23c58:	b	23c74 <__flatcc_fb_gen_c_json_parser@@Base+0x5118>
   23c5c:	ldr	r0, [sp, #36]	; 0x24
   23c60:	vldr	d16, [r0]
   23c64:	ldr	r1, [pc, #1196]	; 24118 <__flatcc_fb_gen_c_json_parser@@Base+0x55bc>
   23c68:	mov	r0, r4
   23c6c:	vmov	r2, r3, d16
   23c70:	add	r1, pc, r1
   23c74:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23c78:	ldr	r0, [r4, #220]	; 0xdc
   23c7c:	add	r0, r0, #1
   23c80:	str	r0, [r4, #220]	; 0xdc
   23c84:	ldr	r0, [sp, #56]	; 0x38
   23c88:	ldrsh	r7, [r9, #74]	; 0x4a
   23c8c:	ldrd	r2, [r0]
   23c90:	ldr	r0, [sp, #64]	; 0x40
   23c94:	ldrd	r0, [r0]
   23c98:	stm	sp, {r0, r1, r7}
   23c9c:	mov	r0, r4
   23ca0:	ldr	r1, [pc, #1168]	; 24138 <__flatcc_fb_gen_c_json_parser@@Base+0x55dc>
   23ca4:	add	r1, pc, r1
   23ca8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23cac:	ldr	r1, [pc, #1160]	; 2413c <__flatcc_fb_gen_c_json_parser@@Base+0x55e0>
   23cb0:	ldr	r3, [sp, #100]	; 0x64
   23cb4:	mov	r0, r4
   23cb8:	mov	r2, r4
   23cbc:	add	r1, pc, r1
   23cc0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23cc4:	cmp	r5, #0
   23cc8:	beq	23d48 <__flatcc_fb_gen_c_json_parser@@Base+0x51ec>
   23ccc:	cmp	sl, #0
   23cd0:	beq	23d78 <__flatcc_fb_gen_c_json_parser@@Base+0x521c>
   23cd4:	cmp	r8, #0
   23cd8:	beq	23cfc <__flatcc_fb_gen_c_json_parser@@Base+0x51a0>
   23cdc:	ldr	r1, [pc, #1140]	; 24158 <__flatcc_fb_gen_c_json_parser@@Base+0x55fc>
   23ce0:	mov	r0, r4
   23ce4:	add	r1, pc, r1
   23ce8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23cec:	ldr	r1, [pc, #1128]	; 2415c <__flatcc_fb_gen_c_json_parser@@Base+0x5600>
   23cf0:	mov	r0, r4
   23cf4:	add	r1, pc, r1
   23cf8:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23cfc:	ldr	r1, [pc, #1116]	; 24160 <__flatcc_fb_gen_c_json_parser@@Base+0x5604>
   23d00:	mov	r0, r4
   23d04:	add	r1, pc, r1
   23d08:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23d0c:	ldr	r0, [r4, #220]	; 0xdc
   23d10:	cmp	r0, #0
   23d14:	beq	23ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x5364>
   23d18:	sub	r0, r0, #1
   23d1c:	str	r0, [r4, #220]	; 0xdc
   23d20:	mov	r0, r4
   23d24:	ldr	r1, [pc, #1080]	; 24164 <__flatcc_fb_gen_c_json_parser@@Base+0x5608>
   23d28:	add	r1, pc, r1
   23d2c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23d30:	mov	r0, r4
   23d34:	cmp	r8, #0
   23d38:	beq	23d6c <__flatcc_fb_gen_c_json_parser@@Base+0x5210>
   23d3c:	ldr	r1, [pc, #1060]	; 24168 <__flatcc_fb_gen_c_json_parser@@Base+0x560c>
   23d40:	add	r1, pc, r1
   23d44:	b	23d74 <__flatcc_fb_gen_c_json_parser@@Base+0x5218>
   23d48:	ldr	r0, [r4, #220]	; 0xdc
   23d4c:	cmp	r0, #0
   23d50:	beq	23f30 <__flatcc_fb_gen_c_json_parser@@Base+0x53d4>
   23d54:	sub	r0, r0, #1
   23d58:	str	r0, [r4, #220]	; 0xdc
   23d5c:	mov	r0, r4
   23d60:	ldr	r1, [pc, #984]	; 24140 <__flatcc_fb_gen_c_json_parser@@Base+0x55e4>
   23d64:	add	r1, pc, r1
   23d68:	b	23d74 <__flatcc_fb_gen_c_json_parser@@Base+0x5218>
   23d6c:	ldr	r1, [pc, #1068]	; 241a0 <__flatcc_fb_gen_c_json_parser@@Base+0x5644>
   23d70:	add	r1, pc, r1
   23d74:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23d78:	ldr	r6, [sp, #104]	; 0x68
   23d7c:	mov	r7, #2
   23d80:	cmp	r6, #1
   23d84:	beq	236f8 <__flatcc_fb_gen_c_json_parser@@Base+0x4b9c>
   23d88:	ldr	r5, [sp, #96]	; 0x60
   23d8c:	cmp	r6, #2
   23d90:	bne	23dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x527c>
   23d94:	ldr	r1, [pc, #1032]	; 241a4 <__flatcc_fb_gen_c_json_parser@@Base+0x5648>
   23d98:	mov	r0, r4
   23d9c:	add	r1, pc, r1
   23da0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23da4:	ldr	r1, [pc, #1020]	; 241a8 <__flatcc_fb_gen_c_json_parser@@Base+0x564c>
   23da8:	mov	r0, r4
   23dac:	add	r1, pc, r1
   23db0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23db4:	ldr	r0, [r4, #220]	; 0xdc
   23db8:	cmp	r0, #0
   23dbc:	beq	24030 <__flatcc_fb_gen_c_json_parser@@Base+0x54d4>
   23dc0:	sub	r0, r0, #1
   23dc4:	str	r0, [r4, #220]	; 0xdc
   23dc8:	mov	r0, r4
   23dcc:	ldr	r1, [pc, #984]	; 241ac <__flatcc_fb_gen_c_json_parser@@Base+0x5650>
   23dd0:	add	r1, pc, r1
   23dd4:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23dd8:	ldr	r0, [sp, #44]	; 0x2c
   23ddc:	ldr	r1, [sp, #60]	; 0x3c
   23de0:	orr	r0, r1, r0
   23de4:	ldr	r1, [sp, #84]	; 0x54
   23de8:	orr	r0, r0, r6
   23dec:	orr	r0, r0, r5
   23df0:	orrs	r0, r0, r1
   23df4:	beq	23e20 <__flatcc_fb_gen_c_json_parser@@Base+0x52c4>
   23df8:	ldr	r0, [sp, #56]	; 0x38
   23dfc:	ldrd	r2, [r0]
   23e00:	ldr	r1, [pc, #936]	; 241b0 <__flatcc_fb_gen_c_json_parser@@Base+0x5654>
   23e04:	mov	r0, r4
   23e08:	add	r1, pc, r1
   23e0c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23e10:	ldr	r1, [pc, #924]	; 241b4 <__flatcc_fb_gen_c_json_parser@@Base+0x5658>
   23e14:	mov	r0, r4
   23e18:	add	r1, pc, r1
   23e1c:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23e20:	ldr	r0, [r4, #220]	; 0xdc
   23e24:	cmp	r0, #0
   23e28:	beq	24010 <__flatcc_fb_gen_c_json_parser@@Base+0x54b4>
   23e2c:	sub	r0, r0, #1
   23e30:	str	r0, [r4, #220]	; 0xdc
   23e34:	mov	r0, r4
   23e38:	ldr	r1, [pc, #888]	; 241b8 <__flatcc_fb_gen_c_json_parser@@Base+0x565c>
   23e3c:	add	r1, pc, r1
   23e40:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   23e44:	ldr	r0, [r4, #220]	; 0xdc
   23e48:	add	r0, r0, #1
   23e4c:	str	r0, [r4, #220]	; 0xdc
   23e50:	sub	sp, fp, #28
   23e54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e58:	mov	r0, #0
   23e5c:	b	23304 <__flatcc_fb_gen_c_json_parser@@Base+0x47a8>
   23e60:	ldr	r0, [pc, #876]	; 241d4 <__flatcc_fb_gen_c_json_parser@@Base+0x5678>
   23e64:	ldr	r1, [pc, #876]	; 241d8 <__flatcc_fb_gen_c_json_parser@@Base+0x567c>
   23e68:	ldr	r3, [pc, #876]	; 241dc <__flatcc_fb_gen_c_json_parser@@Base+0x5680>
   23e6c:	movw	r2, #490	; 0x1ea
   23e70:	add	r0, pc, r0
   23e74:	add	r1, pc, r1
   23e78:	add	r3, pc, r3
   23e7c:	bl	14a78 <__assert_fail@plt>
   23e80:	ldr	r0, [pc, #856]	; 241e0 <__flatcc_fb_gen_c_json_parser@@Base+0x5684>
   23e84:	ldr	r1, [pc, #856]	; 241e4 <__flatcc_fb_gen_c_json_parser@@Base+0x5688>
   23e88:	ldr	r3, [pc, #856]	; 241e8 <__flatcc_fb_gen_c_json_parser@@Base+0x568c>
   23e8c:	movw	r2, #539	; 0x21b
   23e90:	add	r0, pc, r0
   23e94:	add	r1, pc, r1
   23e98:	add	r3, pc, r3
   23e9c:	bl	14a78 <__assert_fail@plt>
   23ea0:	ldr	r0, [pc, #836]	; 241ec <__flatcc_fb_gen_c_json_parser@@Base+0x5690>
   23ea4:	ldr	r1, [pc, #836]	; 241f0 <__flatcc_fb_gen_c_json_parser@@Base+0x5694>
   23ea8:	ldr	r3, [pc, #836]	; 241f4 <__flatcc_fb_gen_c_json_parser@@Base+0x5698>
   23eac:	movw	r2, #559	; 0x22f
   23eb0:	add	r0, pc, r0
   23eb4:	add	r1, pc, r1
   23eb8:	add	r3, pc, r3
   23ebc:	bl	14a78 <__assert_fail@plt>
   23ec0:	ldr	r0, [pc, #840]	; 24210 <__flatcc_fb_gen_c_json_parser@@Base+0x56b4>
   23ec4:	ldr	r1, [pc, #840]	; 24214 <__flatcc_fb_gen_c_json_parser@@Base+0x56b8>
   23ec8:	ldr	r3, [pc, #840]	; 24218 <__flatcc_fb_gen_c_json_parser@@Base+0x56bc>
   23ecc:	movw	r2, #647	; 0x287
   23ed0:	add	r0, pc, r0
   23ed4:	add	r1, pc, r1
   23ed8:	add	r3, pc, r3
   23edc:	bl	14a78 <__assert_fail@plt>
   23ee0:	ldr	r0, [pc, #408]	; 24080 <__flatcc_fb_gen_c_json_parser@@Base+0x5524>
   23ee4:	mov	r3, #96	; 0x60
   23ee8:	ldr	r0, [pc, r0]
   23eec:	ldr	r0, [r0]
   23ef0:	ldr	r1, [pc, #396]	; 24084 <__flatcc_fb_gen_c_json_parser@@Base+0x5528>
   23ef4:	add	r1, pc, r1
   23ef8:	str	r1, [sp]
   23efc:	ldr	r1, [pc, #388]	; 24088 <__flatcc_fb_gen_c_json_parser@@Base+0x552c>
   23f00:	ldr	r4, [pc, #388]	; 2408c <__flatcc_fb_gen_c_json_parser@@Base+0x5530>
   23f04:	add	r4, pc, r4
   23f08:	add	r1, pc, r1
   23f0c:	mov	r2, r4
   23f10:	bl	149b8 <fprintf@plt>
   23f14:	ldr	r0, [pc, #372]	; 24090 <__flatcc_fb_gen_c_json_parser@@Base+0x5534>
   23f18:	ldr	r3, [pc, #372]	; 24094 <__flatcc_fb_gen_c_json_parser@@Base+0x5538>
   23f1c:	mov	r1, r4
   23f20:	mov	r2, #96	; 0x60
   23f24:	add	r0, pc, r0
   23f28:	add	r3, pc, r3
   23f2c:	bl	14a78 <__assert_fail@plt>
   23f30:	ldr	r0, [pc, #704]	; 241f8 <__flatcc_fb_gen_c_json_parser@@Base+0x569c>
   23f34:	ldr	r1, [pc, #704]	; 241fc <__flatcc_fb_gen_c_json_parser@@Base+0x56a0>
   23f38:	ldr	r3, [pc, #704]	; 24200 <__flatcc_fb_gen_c_json_parser@@Base+0x56a4>
   23f3c:	movw	r2, #602	; 0x25a
   23f40:	add	r0, pc, r0
   23f44:	add	r1, pc, r1
   23f48:	add	r3, pc, r3
   23f4c:	bl	14a78 <__assert_fail@plt>
   23f50:	ldr	r0, [pc, #452]	; 2411c <__flatcc_fb_gen_c_json_parser@@Base+0x55c0>
   23f54:	movw	r3, #590	; 0x24e
   23f58:	ldr	r0, [pc, r0]
   23f5c:	ldr	r0, [r0]
   23f60:	ldr	r1, [pc, #440]	; 24120 <__flatcc_fb_gen_c_json_parser@@Base+0x55c4>
   23f64:	add	r1, pc, r1
   23f68:	str	r1, [sp]
   23f6c:	ldr	r1, [pc, #432]	; 24124 <__flatcc_fb_gen_c_json_parser@@Base+0x55c8>
   23f70:	ldr	r4, [pc, #432]	; 24128 <__flatcc_fb_gen_c_json_parser@@Base+0x55cc>
   23f74:	add	r4, pc, r4
   23f78:	add	r1, pc, r1
   23f7c:	mov	r2, r4
   23f80:	bl	149b8 <fprintf@plt>
   23f84:	ldr	r0, [pc, #416]	; 2412c <__flatcc_fb_gen_c_json_parser@@Base+0x55d0>
   23f88:	ldr	r3, [pc, #416]	; 24130 <__flatcc_fb_gen_c_json_parser@@Base+0x55d4>
   23f8c:	mov	r1, r4
   23f90:	movw	r2, #590	; 0x24e
   23f94:	add	r0, pc, r0
   23f98:	add	r3, pc, r3
   23f9c:	bl	14a78 <__assert_fail@plt>
   23fa0:	ldr	r0, [pc, #604]	; 24204 <__flatcc_fb_gen_c_json_parser@@Base+0x56a8>
   23fa4:	ldr	r1, [pc, #604]	; 24208 <__flatcc_fb_gen_c_json_parser@@Base+0x56ac>
   23fa8:	ldr	r3, [pc, #604]	; 2420c <__flatcc_fb_gen_c_json_parser@@Base+0x56b0>
   23fac:	movw	r2, #627	; 0x273
   23fb0:	add	r0, pc, r0
   23fb4:	add	r1, pc, r1
   23fb8:	add	r3, pc, r3
   23fbc:	bl	14a78 <__assert_fail@plt>
   23fc0:	ldr	r0, [pc, #448]	; 24188 <__flatcc_fb_gen_c_json_parser@@Base+0x562c>
   23fc4:	mov	r3, #636	; 0x27c
   23fc8:	ldr	r0, [pc, r0]
   23fcc:	ldr	r0, [r0]
   23fd0:	ldr	r1, [pc, #436]	; 2418c <__flatcc_fb_gen_c_json_parser@@Base+0x5630>
   23fd4:	add	r1, pc, r1
   23fd8:	str	r1, [sp]
   23fdc:	ldr	r1, [pc, #428]	; 24190 <__flatcc_fb_gen_c_json_parser@@Base+0x5634>
   23fe0:	ldr	r4, [pc, #428]	; 24194 <__flatcc_fb_gen_c_json_parser@@Base+0x5638>
   23fe4:	add	r4, pc, r4
   23fe8:	add	r1, pc, r1
   23fec:	mov	r2, r4
   23ff0:	bl	149b8 <fprintf@plt>
   23ff4:	ldr	r0, [pc, #412]	; 24198 <__flatcc_fb_gen_c_json_parser@@Base+0x563c>
   23ff8:	ldr	r3, [pc, #412]	; 2419c <__flatcc_fb_gen_c_json_parser@@Base+0x5640>
   23ffc:	mov	r1, r4
   24000:	mov	r2, #636	; 0x27c
   24004:	add	r0, pc, r0
   24008:	add	r3, pc, r3
   2400c:	bl	14a78 <__assert_fail@plt>
   24010:	ldr	r0, [pc, #528]	; 24228 <__flatcc_fb_gen_c_json_parser@@Base+0x56cc>
   24014:	ldr	r1, [pc, #528]	; 2422c <__flatcc_fb_gen_c_json_parser@@Base+0x56d0>
   24018:	ldr	r3, [pc, #528]	; 24230 <__flatcc_fb_gen_c_json_parser@@Base+0x56d4>
   2401c:	movw	r2, #675	; 0x2a3
   24020:	add	r0, pc, r0
   24024:	add	r1, pc, r1
   24028:	add	r3, pc, r3
   2402c:	bl	14a78 <__assert_fail@plt>
   24030:	ldr	r0, [pc, #484]	; 2421c <__flatcc_fb_gen_c_json_parser@@Base+0x56c0>
   24034:	ldr	r1, [pc, #484]	; 24220 <__flatcc_fb_gen_c_json_parser@@Base+0x56c4>
   24038:	ldr	r3, [pc, #484]	; 24224 <__flatcc_fb_gen_c_json_parser@@Base+0x56c8>
   2403c:	movw	r2, #661	; 0x295
   24040:	add	r0, pc, r0
   24044:	add	r1, pc, r1
   24048:	add	r3, pc, r3
   2404c:	bl	14a78 <__assert_fail@plt>
   24050:			; <UNDEFINED> instruction: 0x00030eb8
   24054:	andeq	r0, r3, fp, ror #29
   24058:	ldrdeq	r0, [r3], -fp
   2405c:	strdeq	r0, [r3], -r6
   24060:	andeq	r0, r3, r3, lsl #22
   24064:	andeq	r0, r3, r5, ror #21
   24068:	andeq	r4, r2, r1, lsr r0
   2406c:	andeq	r3, r2, r3, lsl #13
   24070:	andeq	r4, r3, r1, lsr #29
   24074:	andeq	r3, r2, r9, lsl #13
   24078:	ldrdeq	r3, [r2], -sl
   2407c:	andeq	r3, r2, sl, lsr #12
   24080:			; <UNDEFINED> instruction: 0x000481b4
   24084:	andeq	r3, r2, r1
   24088:	ldrdeq	ip, [r1], -lr
   2408c:	muleq	r2, r1, pc	; <UNPREDICTABLE>
   24090:	andeq	sp, r2, sl, lsl #13
   24094:	strdeq	r3, [r2], -sp
   24098:	andeq	r3, r2, ip, lsr #31
   2409c:	andeq	r3, r2, r0, lsl #12
   240a0:	ldrdeq	r3, [r2], -r3	; <UNPREDICTABLE>
   240a4:	andeq	r3, r2, r9, lsr #12
   240a8:	andeq	r3, r2, r7, ror pc
   240ac:	andeq	r3, r2, r7, asr #11
   240b0:	andeq	r3, r2, sl, ror #30
   240b4:			; <UNDEFINED> instruction: 0x000235bc
   240b8:	muleq	r2, r9, pc	; <UNPREDICTABLE>
   240bc:	andeq	r3, r2, sp, ror #11
   240c0:	andeq	r3, r2, r4, asr pc
   240c4:	andeq	r3, r2, sl, lsr #11
   240c8:	ldrdeq	r3, [r2], -r0
   240cc:	andeq	r3, r2, r2, lsr r6
   240d0:	andeq	r0, r3, r6, ror #18
   240d4:	andeq	r0, r3, r5, lsr r9
   240d8:	andeq	r0, r3, r8, ror r9
   240dc:	andeq	r0, r3, r5, asr #12
   240e0:	andeq	r0, r3, r0, ror r9
   240e4:	andeq	r0, r3, ip, ror #18
   240e8:	andeq	r0, r3, r4, lsl #19
   240ec:	andeq	r0, r3, ip, ror r9
   240f0:	andeq	r0, r3, r1, lsl #19
   240f4:	andeq	r0, r3, sl, asr r9
   240f8:	andeq	r0, r3, r8, ror r9
   240fc:	andeq	r0, r3, r5, ror r9
   24100:	andeq	r0, r3, r8, lsr #19
   24104:	andeq	r0, r3, pc, asr #19
   24108:	andeq	r0, r3, r2, asr #19
   2410c:	andeq	r0, r3, r8, lsl #20
   24110:	andeq	pc, r1, r7
   24114:	strdeq	r0, [r3], -r8
   24118:	muleq	r3, r8, r9
   2411c:	andeq	r8, r4, r4, asr #2
   24120:	andeq	r0, r3, r7, ror #13
   24124:	andeq	ip, r1, lr, ror #14
   24128:	andeq	pc, r2, r7, ror r1	; <UNPREDICTABLE>
   2412c:	andeq	sp, r2, sl, lsl r6
   24130:	andeq	r0, r3, sp, lsl #4
   24134:	andeq	r0, r3, ip, lsr #18
   24138:	ldrdeq	r0, [r3], -r6
   2413c:	andeq	r0, r3, lr, lsl #20
   24140:	andeq	lr, r1, r3, lsl lr
   24144:	ldrdeq	r0, [r3], -fp
   24148:	andeq	r0, r3, pc, lsr #22
   2414c:	andeq	r0, r3, pc, lsl fp
   24150:	andeq	r1, r3, r4, lsl r2
   24154:	andeq	r1, r3, r4, lsl #4
   24158:	andeq	r0, r3, r4, ror #25
   2415c:	andeq	r0, r3, r9, lsr #26
   24160:	andeq	r0, r3, r6, lsr #26
   24164:	andeq	lr, r1, pc, asr #28
   24168:	andeq	r0, r3, r4, lsr #26
   2416c:	andeq	r1, r3, r1, lsl #3
   24170:	andeq	r0, r3, r8, ror #26
   24174:	andeq	r0, r3, ip, lsl #27
   24178:	andeq	r0, r3, r4, lsl #27
   2417c:	andeq	r0, r3, r9, lsl #27
   24180:	strdeq	r1, [r3], -r7
   24184:	andeq	r1, r3, r6, asr #4
   24188:	ldrdeq	r8, [r4], -r4
   2418c:	andeq	r0, r3, r3, asr #19
   24190:	strdeq	ip, [r1], -lr
   24194:	andeq	pc, r2, r7, lsl #2
   24198:	andeq	sp, r2, sl, lsr #11
   2419c:	muleq	r3, sp, r1
   241a0:	andeq	r0, r3, r6, lsr #26
   241a4:	andeq	r0, r3, r5, lsr #26
   241a8:	andeq	r0, r3, ip, lsr #26
   241ac:	andeq	r0, r3, r8, lsr sp
   241b0:	andeq	r0, r3, r3, lsl sp
   241b4:	andeq	r0, r3, r5, lsl #24
   241b8:	andeq	pc, r2, sl, ror #19
   241bc:	andeq	r8, r4, ip, lsr ip
   241c0:	strdeq	r0, [r3], -lr
   241c4:	andeq	sp, r1, r6, ror #4
   241c8:	andeq	pc, r2, pc, ror #24
   241cc:	andeq	lr, r2, r2, lsl r1
   241d0:	andeq	r0, r3, r5, lsl #26
   241d4:	andeq	pc, r2, pc, ror #4
   241d8:	andeq	pc, r2, r7, ror r2	; <UNPREDICTABLE>
   241dc:	andeq	r0, r3, sp, lsr #6
   241e0:	andeq	pc, r2, pc, asr #4
   241e4:	andeq	pc, r2, r7, asr r2	; <UNPREDICTABLE>
   241e8:	andeq	r0, r3, sp, lsl #6
   241ec:	andeq	pc, r2, pc, lsr #4
   241f0:	andeq	pc, r2, r7, lsr r2	; <UNPREDICTABLE>
   241f4:	andeq	r0, r3, sp, ror #5
   241f8:	muleq	r2, pc, r1	; <UNPREDICTABLE>
   241fc:	andeq	pc, r2, r7, lsr #3
   24200:	andeq	r0, r3, sp, asr r2
   24204:	andeq	pc, r2, pc, lsr #2
   24208:	andeq	pc, r2, r7, lsr r1	; <UNPREDICTABLE>
   2420c:	andeq	r0, r3, sp, ror #3
   24210:	andeq	pc, r2, pc, lsl #4
   24214:	andeq	pc, r2, r7, lsl r2	; <UNPREDICTABLE>
   24218:	andeq	r0, r3, sp, asr #5
   2421c:	muleq	r2, pc, r0	; <UNPREDICTABLE>
   24220:	andeq	pc, r2, r7, lsr #1
   24224:	andeq	r0, r3, sp, asr r1
   24228:	strheq	pc, [r2], -pc	; <UNPREDICTABLE>
   2422c:	andeq	pc, r2, r7, asr #1
   24230:	strdeq	r0, [r3], -r2
   24234:	ldr	r1, [pc, #4]	; 24240 <__flatcc_fb_gen_c_json_parser@@Base+0x56e4>
   24238:	add	r1, pc, r1
   2423c:	b	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   24240:	ldrdeq	pc, [r2], -r8
   24244:	push	{r4, r5, r6, sl, fp, lr}
   24248:	add	fp, sp, #16
   2424c:	sub	sp, sp, #224	; 0xe0
   24250:	ldr	r1, [pc, #240]	; 24348 <__flatcc_fb_gen_c_json_parser@@Base+0x57ec>
   24254:	mov	r5, r2
   24258:	ldr	r2, [fp, #8]
   2425c:	mov	r4, r0
   24260:	add	r1, pc, r1
   24264:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   24268:	ldr	r1, [pc, #220]	; 2434c <__flatcc_fb_gen_c_json_parser@@Base+0x57f0>
   2426c:	mov	r0, r4
   24270:	add	r1, pc, r1
   24274:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   24278:	ldr	r0, [r4, #220]	; 0xdc
   2427c:	add	r0, r0, #1
   24280:	str	r0, [r4, #220]	; 0xdc
   24284:	ldrh	r0, [r5, #8]
   24288:	sub	r0, r0, #3
   2428c:	uxth	r0, r0
   24290:	cmp	r0, #2
   24294:	bcs	24308 <__flatcc_fb_gen_c_json_parser@@Base+0x57ac>
   24298:	mov	r6, sp
   2429c:	mov	r1, #0
   242a0:	mov	r2, #220	; 0xdc
   242a4:	mov	r0, r6
   242a8:	bl	149d0 <memset@plt>
   242ac:	ldr	r0, [r5, #12]
   242b0:	mov	r1, r5
   242b4:	mov	r2, r6
   242b8:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   242bc:	ldr	r1, [pc, #140]	; 24350 <__flatcc_fb_gen_c_json_parser@@Base+0x57f4>
   242c0:	mov	r0, r4
   242c4:	mov	r2, r6
   242c8:	add	r1, pc, r1
   242cc:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   242d0:	ldr	r0, [r4, #220]	; 0xdc
   242d4:	cmp	r0, #0
   242d8:	beq	24328 <__flatcc_fb_gen_c_json_parser@@Base+0x57cc>
   242dc:	sub	r0, r0, #1
   242e0:	str	r0, [r4, #220]	; 0xdc
   242e4:	mov	r0, r4
   242e8:	ldr	r1, [pc, #100]	; 24354 <__flatcc_fb_gen_c_json_parser@@Base+0x57f8>
   242ec:	add	r1, pc, r1
   242f0:	bl	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   242f4:	ldr	r0, [r4, #220]	; 0xdc
   242f8:	add	r0, r0, #1
   242fc:	str	r0, [r4, #220]	; 0xdc
   24300:	sub	sp, fp, #16
   24304:	pop	{r4, r5, r6, sl, fp, pc}
   24308:	ldr	r0, [pc, #72]	; 24358 <__flatcc_fb_gen_c_json_parser@@Base+0x57fc>
   2430c:	ldr	r1, [pc, #72]	; 2435c <__flatcc_fb_gen_c_json_parser@@Base+0x5800>
   24310:	ldr	r3, [pc, #72]	; 24360 <__flatcc_fb_gen_c_json_parser@@Base+0x5804>
   24314:	movw	r2, #729	; 0x2d9
   24318:	add	r0, pc, r0
   2431c:	add	r1, pc, r1
   24320:	add	r3, pc, r3
   24324:	bl	14a78 <__assert_fail@plt>
   24328:	ldr	r0, [pc, #52]	; 24364 <__flatcc_fb_gen_c_json_parser@@Base+0x5808>
   2432c:	ldr	r1, [pc, #52]	; 24368 <__flatcc_fb_gen_c_json_parser@@Base+0x580c>
   24330:	ldr	r3, [pc, #52]	; 2436c <__flatcc_fb_gen_c_json_parser@@Base+0x5810>
   24334:	movw	r2, #742	; 0x2e6
   24338:	add	r0, pc, r0
   2433c:	add	r1, pc, r1
   24340:	add	r3, pc, r3
   24344:	bl	14a78 <__assert_fail@plt>
   24348:	muleq	r3, sl, pc	; <UNPREDICTABLE>
   2434c:	ldrdeq	pc, [r2], -pc	; <UNPREDICTABLE>
   24350:	andeq	r1, r3, pc
   24354:	andeq	pc, r2, sl, lsr r5	; <UNPREDICTABLE>
   24358:	andeq	r2, r2, fp, asr #16
   2435c:	andeq	lr, r2, pc, asr #27
   24360:	andeq	r0, r3, r8, ror #30
   24364:	andeq	lr, r2, r7, lsr #27
   24368:	andeq	lr, r2, pc, lsr #27
   2436c:	strdeq	r0, [r3], -ip
   24370:	ldr	r1, [pc, #4]	; 2437c <__flatcc_fb_gen_c_json_parser@@Base+0x5820>
   24374:	add	r1, pc, r1
   24378:	b	21188 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   2437c:	strdeq	pc, [r2], -lr
   24380:	push	{r4, sl, fp, lr}
   24384:	add	fp, sp, #8
   24388:	mov	r4, r0
   2438c:	ldrh	r0, [r1, #8]
   24390:	sub	r0, r0, #3
   24394:	cmp	r0, #1
   24398:	pophi	{r4, sl, fp, pc}
   2439c:	ldr	r0, [r4, #4]
   243a0:	ldr	r1, [r1, #16]
   243a4:	add	r0, r0, #172	; 0xac
   243a8:	bl	284dc <ptr_set_find_item@@Base>
   243ac:	cmp	r0, #0
   243b0:	ldrne	r0, [r4]
   243b4:	addne	r0, r0, #1
   243b8:	strne	r0, [r4]
   243bc:	pop	{r4, sl, fp, pc}
   243c0:	push	{r4, r5, fp, lr}
   243c4:	add	fp, sp, #8
   243c8:	mov	r4, r0
   243cc:	ldrh	r0, [r1, #8]
   243d0:	sub	r0, r0, #3
   243d4:	cmp	r0, #1
   243d8:	bhi	24418 <__flatcc_fb_gen_c_json_parser@@Base+0x58bc>
   243dc:	ldr	r0, [r4, #4]
   243e0:	mov	r5, r1
   243e4:	ldr	r1, [r1, #16]
   243e8:	add	r0, r0, #172	; 0xac
   243ec:	bl	284dc <ptr_set_find_item@@Base>
   243f0:	cmp	r0, #0
   243f4:	popeq	{r4, r5, fp, pc}
   243f8:	ldr	r1, [r5, #4]
   243fc:	ldr	r0, [r4, #8]
   24400:	ldr	r2, [r1]
   24404:	str	r2, [r0]
   24408:	ldr	r1, [r1, #4]
   2440c:	stmib	r0, {r1, r5}
   24410:	add	r0, r0, #16
   24414:	str	r0, [r4, #8]
   24418:	pop	{r4, r5, fp, pc}
   2441c:	push	{r4, sl, fp, lr}
   24420:	add	fp, sp, #8
   24424:	mov	r4, r0
   24428:	ldr	r0, [r0, #16]
   2442c:	cmp	r0, #0
   24430:	beq	24438 <__flatcc_fb_gen_c_json_parser@@Base+0x58dc>
   24434:	bl	148f8 <free@plt>
   24438:	ldr	r0, [r4, #20]
   2443c:	cmp	r0, #0
   24440:	beq	24448 <__flatcc_fb_gen_c_json_parser@@Base+0x58ec>
   24444:	bl	148f8 <free@plt>
   24448:	ldr	r0, [r4, #24]
   2444c:	cmp	r0, #0
   24450:	beq	24458 <__flatcc_fb_gen_c_json_parser@@Base+0x58fc>
   24454:	bl	148f8 <free@plt>
   24458:	vmov.i32	q8, #0	; 0x00000000
   2445c:	mov	r0, #28
   24460:	add	r1, r4, #16
   24464:	vst1.32	{d16-d17}, [r4], r0
   24468:	vst1.32	{d16-d17}, [r4]
   2446c:	vst1.32	{d16-d17}, [r1]
   24470:	pop	{r4, sl, fp, pc}
   24474:	mov	r2, r0
   24478:	add	r0, r1, #4
   2447c:	ldr	r1, [pc, #4]	; 24488 <__flatcc_fb_gen_c_json_parser@@Base+0x592c>
   24480:	add	r1, pc, r1
   24484:	b	28e38 <fb_symbol_table_visit@@Base>
   24488:	andeq	r0, r0, ip, lsl r0
   2448c:	mov	r2, r0
   24490:	add	r0, r1, #4
   24494:	ldr	r1, [pc, #4]	; 244a0 <__flatcc_fb_gen_c_json_parser@@Base+0x5944>
   24498:	add	r1, pc, r1
   2449c:	b	28e38 <fb_symbol_table_visit@@Base>
   244a0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   244a4:	push	{r4, r5, fp, lr}
   244a8:	add	fp, sp, #8
   244ac:	mov	r4, r0
   244b0:	ldrh	r0, [r1, #8]
   244b4:	cmp	r0, #4
   244b8:	bhi	2455c <__flatcc_fb_gen_c_json_parser@@Base+0x5a00>
   244bc:	ldr	r0, [r4, #40]	; 0x28
   244c0:	mov	r5, r1
   244c4:	ldr	r1, [r1, #16]
   244c8:	add	r0, r0, #172	; 0xac
   244cc:	bl	284dc <ptr_set_find_item@@Base>
   244d0:	cmp	r0, #0
   244d4:	popeq	{r4, r5, fp, pc}
   244d8:	ldr	r1, [r4]
   244dc:	mov	r0, #1
   244e0:	cmp	r1, #0
   244e4:	beq	24520 <__flatcc_fb_gen_c_json_parser@@Base+0x59c4>
   244e8:	ldr	r1, [r5, #12]
   244ec:	ldr	r1, [r1]
   244f0:	cmp	r1, #0
   244f4:	beq	24520 <__flatcc_fb_gen_c_json_parser@@Base+0x59c4>
   244f8:	mov	r0, #0
   244fc:	ldr	r2, [r1]
   24500:	ldr	r1, [r1, #4]
   24504:	ldr	r1, [r1, #4]
   24508:	cmp	r2, #0
   2450c:	add	r0, r0, r1
   24510:	mov	r1, r2
   24514:	add	r0, r0, #1
   24518:	bne	244fc <__flatcc_fb_gen_c_json_parser@@Base+0x59a0>
   2451c:	add	r0, r0, #1
   24520:	ldr	r1, [r5, #4]
   24524:	ldr	r1, [r1, #4]
   24528:	add	r0, r0, r1
   2452c:	ldr	r1, [r4, #12]
   24530:	add	r0, r0, r1
   24534:	str	r0, [r4, #12]
   24538:	ldrh	r0, [r5, #8]
   2453c:	sub	r1, r0, #3
   24540:	cmp	r1, #2
   24544:	bcc	24560 <__flatcc_fb_gen_c_json_parser@@Base+0x5a04>
   24548:	cmp	r0, #1
   2454c:	ldrls	r0, [r4, #4]
   24550:	addls	r0, r0, #1
   24554:	strls	r0, [r4, #4]
   24558:	popls	{r4, r5, fp, pc}
   2455c:	pop	{r4, r5, fp, pc}
   24560:	ldr	r0, [r4, #8]
   24564:	add	r0, r0, #1
   24568:	str	r0, [r4, #8]
   2456c:	pop	{r4, r5, fp, pc}
   24570:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24574:	add	fp, sp, #28
   24578:	sub	sp, sp, #4
   2457c:	mov	r9, r0
   24580:	ldrh	r0, [r1, #8]
   24584:	cmp	r0, #4
   24588:	bhi	2466c <__flatcc_fb_gen_c_json_parser@@Base+0x5b10>
   2458c:	ldr	r0, [r9, #40]	; 0x28
   24590:	mov	sl, r1
   24594:	ldr	r1, [r1, #16]
   24598:	add	r0, r0, #172	; 0xac
   2459c:	bl	284dc <ptr_set_find_item@@Base>
   245a0:	cmp	r0, #0
   245a4:	beq	2466c <__flatcc_fb_gen_c_json_parser@@Base+0x5b10>
   245a8:	ldr	r0, [r9]
   245ac:	ldr	r8, [r9, #36]	; 0x24
   245b0:	cmp	r0, #0
   245b4:	mov	r6, r8
   245b8:	beq	24600 <__flatcc_fb_gen_c_json_parser@@Base+0x5aa4>
   245bc:	ldr	r0, [sl, #12]
   245c0:	mov	r6, r8
   245c4:	ldr	r4, [r0]
   245c8:	cmp	r4, #0
   245cc:	beq	24600 <__flatcc_fb_gen_c_json_parser@@Base+0x5aa4>
   245d0:	mov	r5, #46	; 0x2e
   245d4:	mov	r6, r8
   245d8:	ldr	r0, [r4, #4]
   245dc:	ldm	r0, {r1, r7}
   245e0:	mov	r0, r6
   245e4:	mov	r2, r7
   245e8:	bl	14904 <memcpy@plt>
   245ec:	strb	r5, [r6, r7]!
   245f0:	ldr	r4, [r4]
   245f4:	add	r6, r6, #1
   245f8:	cmp	r4, #0
   245fc:	bne	245d8 <__flatcc_fb_gen_c_json_parser@@Base+0x5a7c>
   24600:	ldr	r0, [sl, #4]
   24604:	ldm	r0, {r1, r7}
   24608:	mov	r0, r6
   2460c:	mov	r2, r7
   24610:	bl	14904 <memcpy@plt>
   24614:	mov	r0, #0
   24618:	strb	r0, [r6, r7]!
   2461c:	add	r0, r6, #1
   24620:	str	r0, [r9, #36]	; 0x24
   24624:	ldrh	r0, [sl, #8]
   24628:	sub	r1, r0, #3
   2462c:	cmp	r1, #2
   24630:	bcc	24658 <__flatcc_fb_gen_c_json_parser@@Base+0x5afc>
   24634:	cmp	r0, #1
   24638:	bhi	2466c <__flatcc_fb_gen_c_json_parser@@Base+0x5b10>
   2463c:	ldr	r0, [r9, #28]
   24640:	str	sl, [r0]
   24644:	str	r8, [r0, #4]
   24648:	add	r0, r0, #8
   2464c:	str	r0, [r9, #28]
   24650:	sub	sp, fp, #28
   24654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24658:	ldr	r0, [r9, #32]
   2465c:	str	sl, [r0]
   24660:	str	r8, [r0, #4]
   24664:	add	r0, r0, #8
   24668:	str	r0, [r9, #32]
   2466c:	sub	sp, fp, #28
   24670:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24674:	ldr	r1, [r1, #4]
   24678:	ldr	r0, [r0, #4]
   2467c:	b	148e0 <strcmp@plt>

00024680 <__flatcc_fb_gen_c_json_printer@@Base>:
   24680:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24684:	add	fp, sp, #28
   24688:	sub	sp, sp, #508	; 0x1fc
   2468c:	mov	r4, r0
   24690:	mov	r9, r0
   24694:	ldr	r1, [r4, #208]	; 0xd0
   24698:	ldr	r0, [r9, #204]!	; 0xcc
   2469c:	ldr	r2, [r1, #164]	; 0xa4
   246a0:	ldr	r1, [pc, #4008]	; 25650 <__flatcc_fb_gen_c_json_printer@@Base+0xfd0>
   246a4:	add	r1, pc, r1
   246a8:	mov	r3, r2
   246ac:	bl	149b8 <fprintf@plt>
   246b0:	ldr	r3, [r9]
   246b4:	ldr	r0, [pc, #3992]	; 25654 <__flatcc_fb_gen_c_json_printer@@Base+0xfd4>
   246b8:	mov	r1, #81	; 0x51
   246bc:	mov	r2, #1
   246c0:	add	r0, pc, r0
   246c4:	bl	1494c <fwrite@plt>
   246c8:	ldr	r3, [r9]
   246cc:	ldr	r0, [pc, #3972]	; 25658 <__flatcc_fb_gen_c_json_printer@@Base+0xfd8>
   246d0:	mov	r1, #40	; 0x28
   246d4:	mov	r2, #1
   246d8:	add	r0, pc, r0
   246dc:	bl	1494c <fwrite@plt>
   246e0:	ldr	r1, [pc, #4080]	; 256d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1058>
   246e4:	ldr	r2, [pc, #4080]	; 256dc <__flatcc_fb_gen_c_json_printer@@Base+0x105c>
   246e8:	mov	r0, r4
   246ec:	add	r1, pc, r1
   246f0:	add	r2, pc, r2
   246f4:	bl	16990 <__flatcc_fb_gen_c_includes@@Base>
   246f8:	ldr	r0, [r4, #212]	; 0xd4
   246fc:	str	r4, [sp, #48]	; 0x30
   24700:	ldr	r0, [r0, #140]	; 0x8c
   24704:	cmp	r0, #0
   24708:	beq	24724 <__flatcc_fb_gen_c_json_printer@@Base+0xa4>
   2470c:	ldr	r3, [r9]
   24710:	ldr	r0, [pc, #4040]	; 256e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1060>
   24714:	mov	r1, #36	; 0x24
   24718:	mov	r2, #1
   2471c:	add	r0, pc, r0
   24720:	bl	1494c <fwrite@plt>
   24724:	ldr	r4, [sp, #48]	; 0x30
   24728:	mov	r0, #10
   2472c:	ldr	r1, [r4, #204]	; 0xcc
   24730:	bl	14a18 <fputc@plt>
   24734:	ldr	r4, [r4, #208]	; 0xd0
   24738:	sub	r0, fp, #256	; 0x100
   2473c:	mov	r1, #0
   24740:	mov	r2, #220	; 0xdc
   24744:	ldr	r5, [r4, #52]	; 0x34
   24748:	bl	149d0 <memset@plt>
   2474c:	cmp	r5, #0
   24750:	beq	24798 <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   24754:	ldrh	r0, [r5, #8]
   24758:	cmp	r0, #1
   2475c:	bhi	24798 <__flatcc_fb_gen_c_json_printer@@Base+0x118>
   24760:	ldr	r4, [sp, #48]	; 0x30
   24764:	movw	r1, #482	; 0x1e2
   24768:	mov	r2, #1
   2476c:	ldr	r3, [r4, #204]	; 0xcc
   24770:	ldr	r0, [pc, #4028]	; 25734 <__flatcc_fb_gen_c_json_printer@@Base+0x10b4>
   24774:	add	r0, pc, r0
   24778:	bl	1494c <fwrite@plt>
   2477c:	ldr	r1, [r4, #208]	; 0xd0
   24780:	ldr	r0, [r4, #204]	; 0xcc
   24784:	ldr	r2, [r1, #160]	; 0xa0
   24788:	ldr	r1, [pc, #4008]	; 25738 <__flatcc_fb_gen_c_json_printer@@Base+0x10b8>
   2478c:	add	r1, pc, r1
   24790:	bl	149b8 <fprintf@plt>
   24794:	ldr	r4, [r4, #208]	; 0xd0
   24798:	ldr	r4, [r4, #40]	; 0x28
   2479c:	cmp	r4, #0
   247a0:	beq	2484c <__flatcc_fb_gen_c_json_printer@@Base+0x1cc>
   247a4:	ldr	r8, [pc, #3984]	; 2573c <__flatcc_fb_gen_c_json_printer@@Base+0x10bc>
   247a8:	ldr	r7, [pc, #3984]	; 25740 <__flatcc_fb_gen_c_json_printer@@Base+0x10c0>
   247ac:	ldr	r6, [pc, #3984]	; 25744 <__flatcc_fb_gen_c_json_printer@@Base+0x10c4>
   247b0:	sub	r5, fp, #256	; 0x100
   247b4:	add	r8, pc, r8
   247b8:	add	r7, pc, r7
   247bc:	add	r6, pc, r6
   247c0:	ldrh	r0, [r4, #8]
   247c4:	cmp	r0, #0
   247c8:	beq	24820 <__flatcc_fb_gen_c_json_printer@@Base+0x1a0>
   247cc:	cmp	r0, #1
   247d0:	beq	24804 <__flatcc_fb_gen_c_json_printer@@Base+0x184>
   247d4:	cmp	r0, #4
   247d8:	bne	24840 <__flatcc_fb_gen_c_json_printer@@Base+0x1c0>
   247dc:	ldr	r0, [r4, #12]
   247e0:	mov	r1, r4
   247e4:	mov	r2, r5
   247e8:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   247ec:	ldr	r0, [r9]
   247f0:	mov	r1, r6
   247f4:	mov	r2, r5
   247f8:	mov	r3, r5
   247fc:	bl	149b8 <fprintf@plt>
   24800:	b	24840 <__flatcc_fb_gen_c_json_printer@@Base+0x1c0>
   24804:	ldr	r0, [r4, #12]
   24808:	mov	r1, r4
   2480c:	mov	r2, r5
   24810:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   24814:	ldr	r0, [r9]
   24818:	mov	r1, r7
   2481c:	b	24838 <__flatcc_fb_gen_c_json_printer@@Base+0x1b8>
   24820:	ldr	r0, [r4, #12]
   24824:	mov	r1, r4
   24828:	mov	r2, r5
   2482c:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   24830:	ldr	r0, [r9]
   24834:	mov	r1, r8
   24838:	mov	r2, r5
   2483c:	bl	149b8 <fprintf@plt>
   24840:	ldr	r4, [r4]
   24844:	cmp	r4, #0
   24848:	bne	247c0 <__flatcc_fb_gen_c_json_printer@@Base+0x140>
   2484c:	ldr	r4, [sp, #48]	; 0x30
   24850:	mov	r0, #10
   24854:	ldr	r1, [r4, #204]	; 0xcc
   24858:	bl	14a18 <fputc@plt>
   2485c:	ldr	r0, [r4, #208]	; 0xd0
   24860:	ldr	r5, [r0, #40]	; 0x28
   24864:	cmp	r5, #0
   24868:	beq	2581c <__flatcc_fb_gen_c_json_printer@@Base+0x119c>
   2486c:	ldr	sl, [pc, #3796]	; 25748 <__flatcc_fb_gen_c_json_printer@@Base+0x10c8>
   24870:	sub	r8, fp, #256	; 0x100
   24874:	add	sl, pc, sl
   24878:	ldrh	r0, [r5, #8]
   2487c:	cmp	r0, #3
   24880:	bne	24c70 <__flatcc_fb_gen_c_json_printer@@Base+0x5f0>
   24884:	mov	r0, r8
   24888:	mov	r1, #0
   2488c:	mov	r2, #220	; 0xdc
   24890:	bl	149d0 <memset@plt>
   24894:	ldr	r0, [r5, #12]
   24898:	mov	r1, r5
   2489c:	mov	r2, r8
   248a0:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   248a4:	ldr	r1, [r5, #40]	; 0x28
   248a8:	sub	r0, r1, #1
   248ac:	cmp	r0, #11
   248b0:	bcs	25ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   248b4:	cmp	r1, #5
   248b8:	ldr	r1, [sp, #48]	; 0x30
   248bc:	mov	r3, sl
   248c0:	moveq	r3, r1
   248c4:	ldr	r1, [pc, #4080]	; 258bc <__flatcc_fb_gen_c_json_printer@@Base+0x123c>
   248c8:	add	r1, pc, r1
   248cc:	ldr	ip, [r1, r0, lsl #2]
   248d0:	ldr	r1, [pc, #4072]	; 258c0 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
   248d4:	add	r1, pc, r1
   248d8:	ldr	r0, [r1, r0, lsl #2]
   248dc:	str	r0, [sp, #52]	; 0x34
   248e0:	ldrb	r0, [r5, #92]	; 0x5c
   248e4:	tst	r0, #32
   248e8:	bne	249e8 <__flatcc_fb_gen_c_json_printer@@Base+0x368>
   248ec:	ldr	r0, [r9]
   248f0:	str	ip, [sp]
   248f4:	mov	r2, r8
   248f8:	ldr	r1, [pc, #4036]	; 258c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1244>
   248fc:	add	r1, pc, r1
   24900:	bl	149b8 <fprintf@plt>
   24904:	ldr	r3, [r9]
   24908:	ldr	r0, [pc, #4024]	; 258c8 <__flatcc_fb_gen_c_json_printer@@Base+0x1248>
   2490c:	mov	r1, #18
   24910:	mov	r2, #1
   24914:	add	r0, pc, r0
   24918:	bl	1494c <fwrite@plt>
   2491c:	ldr	r4, [r5, #20]
   24920:	ldr	r6, [pc, #4004]	; 258cc <__flatcc_fb_gen_c_json_printer@@Base+0x124c>
   24924:	cmp	r4, #0
   24928:	add	r6, pc, r6
   2492c:	beq	249d0 <__flatcc_fb_gen_c_json_printer@@Base+0x350>
   24930:	ldrh	r1, [r4, #56]	; 0x38
   24934:	add	r0, r4, #48	; 0x30
   24938:	cmp	r1, #4
   2493c:	beq	249a0 <__flatcc_fb_gen_c_json_printer@@Base+0x320>
   24940:	cmp	r1, #6
   24944:	beq	24978 <__flatcc_fb_gen_c_json_printer@@Base+0x2f8>
   24948:	cmp	r1, #5
   2494c:	bne	259ac <__flatcc_fb_gen_c_json_printer@@Base+0x132c>
   24950:	ldr	r1, [r4, #4]
   24954:	ldrd	r2, [r0]
   24958:	ldr	r0, [r9]
   2495c:	ldr	r7, [r1]
   24960:	ldr	r1, [r1, #4]
   24964:	stm	sp, {r1, r7}
   24968:	str	r1, [sp, #8]
   2496c:	ldr	r1, [pc, #4060]	; 25950 <__flatcc_fb_gen_c_json_printer@@Base+0x12d0>
   24970:	add	r1, pc, r1
   24974:	b	249c0 <__flatcc_fb_gen_c_json_printer@@Base+0x340>
   24978:	ldr	r1, [r4, #4]
   2497c:	ldrb	r2, [r4, #48]	; 0x30
   24980:	ldr	r0, [r9]
   24984:	ldr	r7, [r1]
   24988:	ldr	r3, [r1, #4]
   2498c:	str	r7, [sp]
   24990:	str	r3, [sp, #4]
   24994:	ldr	r1, [pc, #4024]	; 25954 <__flatcc_fb_gen_c_json_printer@@Base+0x12d4>
   24998:	add	r1, pc, r1
   2499c:	b	249c0 <__flatcc_fb_gen_c_json_printer@@Base+0x340>
   249a0:	ldr	r1, [r4, #4]
   249a4:	ldrd	r2, [r0]
   249a8:	ldr	r0, [r9]
   249ac:	ldr	r7, [r1]
   249b0:	ldr	r1, [r1, #4]
   249b4:	stm	sp, {r1, r7}
   249b8:	str	r1, [sp, #8]
   249bc:	mov	r1, r6
   249c0:	bl	149b8 <fprintf@plt>
   249c4:	ldr	r4, [r4]
   249c8:	cmp	r4, #0
   249cc:	bne	24930 <__flatcc_fb_gen_c_json_printer@@Base+0x2b0>
   249d0:	ldr	r0, [r9]
   249d4:	ldr	r1, [pc, #4044]	; 259a8 <__flatcc_fb_gen_c_json_printer@@Base+0x1328>
   249d8:	ldr	r2, [sp, #52]	; 0x34
   249dc:	add	r1, pc, r1
   249e0:	bl	149b8 <fprintf@plt>
   249e4:	b	24c58 <__flatcc_fb_gen_c_json_printer@@Base+0x5d8>
   249e8:	ldrd	r0, [r5, #112]	; 0x70
   249ec:	mov	r6, #0
   249f0:	eor	r2, r0, #1
   249f4:	orrs	r2, r2, r1
   249f8:	beq	24a44 <__flatcc_fb_gen_c_json_printer@@Base+0x3c4>
   249fc:	eor	r2, r0, #4
   24a00:	orrs	r2, r2, r1
   24a04:	beq	24a2c <__flatcc_fb_gen_c_json_printer@@Base+0x3ac>
   24a08:	eor	r0, r0, #2
   24a0c:	orrs	r0, r0, r1
   24a10:	bne	24a5c <__flatcc_fb_gen_c_json_printer@@Base+0x3dc>
   24a14:	ldr	sl, [pc, #4064]	; 259fc <__flatcc_fb_gen_c_json_printer@@Base+0x137c>
   24a18:	ldr	r4, [pc, #4064]	; 25a00 <__flatcc_fb_gen_c_json_printer@@Base+0x1380>
   24a1c:	movw	r7, #65535	; 0xffff
   24a20:	add	sl, pc, sl
   24a24:	add	r4, pc, r4
   24a28:	b	24a74 <__flatcc_fb_gen_c_json_printer@@Base+0x3f4>
   24a2c:	ldr	sl, [pc, #4048]	; 25a04 <__flatcc_fb_gen_c_json_printer@@Base+0x1384>
   24a30:	ldr	r4, [pc, #4048]	; 25a08 <__flatcc_fb_gen_c_json_printer@@Base+0x1388>
   24a34:	mvn	r7, #0
   24a38:	add	sl, pc, sl
   24a3c:	add	r4, pc, r4
   24a40:	b	24a74 <__flatcc_fb_gen_c_json_printer@@Base+0x3f4>
   24a44:	ldr	sl, [pc, #4032]	; 25a0c <__flatcc_fb_gen_c_json_printer@@Base+0x138c>
   24a48:	ldr	r4, [pc, #4032]	; 25a10 <__flatcc_fb_gen_c_json_printer@@Base+0x1390>
   24a4c:	mov	r7, #255	; 0xff
   24a50:	add	sl, pc, sl
   24a54:	add	r4, pc, r4
   24a58:	b	24a74 <__flatcc_fb_gen_c_json_printer@@Base+0x3f4>
   24a5c:	ldr	sl, [pc, #4016]	; 25a14 <__flatcc_fb_gen_c_json_printer@@Base+0x1394>
   24a60:	ldr	r4, [pc, #4016]	; 25a18 <__flatcc_fb_gen_c_json_printer@@Base+0x1398>
   24a64:	mvn	r7, #0
   24a68:	mvn	r6, #0
   24a6c:	add	sl, pc, sl
   24a70:	add	r4, pc, r4
   24a74:	ldr	r0, [r5, #20]
   24a78:	cmp	r0, #0
   24a7c:	bne	24a90 <__flatcc_fb_gen_c_json_printer@@Base+0x410>
   24a80:	b	24adc <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   24a84:	ldr	r0, [r0]
   24a88:	cmp	r0, #0
   24a8c:	beq	24adc <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   24a90:	ldrh	r2, [r0, #56]	; 0x38
   24a94:	add	r1, r0, #48	; 0x30
   24a98:	cmp	r2, #4
   24a9c:	beq	24ab0 <__flatcc_fb_gen_c_json_printer@@Base+0x430>
   24aa0:	cmp	r2, #6
   24aa4:	beq	24ad0 <__flatcc_fb_gen_c_json_printer@@Base+0x450>
   24aa8:	cmp	r2, #5
   24aac:	bne	24a84 <__flatcc_fb_gen_c_json_printer@@Base+0x404>
   24ab0:	ldr	r2, [r1]
   24ab4:	ldr	r1, [r1, #4]
   24ab8:	ldr	r0, [r0]
   24abc:	bic	r6, r6, r1
   24ac0:	bic	r7, r7, r2
   24ac4:	cmp	r0, #0
   24ac8:	bne	24a90 <__flatcc_fb_gen_c_json_printer@@Base+0x410>
   24acc:	b	24adc <__flatcc_fb_gen_c_json_printer@@Base+0x45c>
   24ad0:	ldrb	r1, [r1]
   24ad4:	bic	r7, r7, r1
   24ad8:	b	24a84 <__flatcc_fb_gen_c_json_printer@@Base+0x404>
   24adc:	ldr	r0, [r9]
   24ae0:	str	ip, [sp]
   24ae4:	sub	r2, fp, #256	; 0x100
   24ae8:	mov	r8, ip
   24aec:	ldr	r1, [pc, #4040]	; 25abc <__flatcc_fb_gen_c_json_printer@@Base+0x143c>
   24af0:	add	r1, pc, r1
   24af4:	bl	149b8 <fprintf@plt>
   24af8:	mov	r0, r4
   24afc:	mov	r1, r8
   24b00:	bl	148e0 <strcmp@plt>
   24b04:	mov	r1, r0
   24b08:	ldr	r0, [r9]
   24b0c:	cmp	r1, #0
   24b10:	beq	24b2c <__flatcc_fb_gen_c_json_printer@@Base+0x4ac>
   24b14:	ldr	r1, [pc, #4084]	; 25b10 <__flatcc_fb_gen_c_json_printer@@Base+0x1490>
   24b18:	mov	r2, r4
   24b1c:	mov	r3, r4
   24b20:	add	r1, pc, r1
   24b24:	bl	149b8 <fprintf@plt>
   24b28:	b	24b3c <__flatcc_fb_gen_c_json_printer@@Base+0x4bc>
   24b2c:	ldr	r1, [pc, #4064]	; 25b14 <__flatcc_fb_gen_c_json_printer@@Base+0x1494>
   24b30:	mov	r2, r4
   24b34:	add	r1, pc, r1
   24b38:	bl	149b8 <fprintf@plt>
   24b3c:	ldr	r3, [r9]
   24b40:	ldr	r0, [pc, #4048]	; 25b18 <__flatcc_fb_gen_c_json_printer@@Base+0x1498>
   24b44:	mov	r1, #54	; 0x36
   24b48:	mov	r2, #1
   24b4c:	add	r0, pc, r0
   24b50:	bl	1494c <fwrite@plt>
   24b54:	ldr	r1, [r9]
   24b58:	mov	r0, #10
   24b5c:	bl	14a18 <fputc@plt>
   24b60:	orrs	r0, r7, r6
   24b64:	beq	24b88 <__flatcc_fb_gen_c_json_printer@@Base+0x508>
   24b68:	ldr	r1, [sp, #52]	; 0x34
   24b6c:	ldr	r0, [r9]
   24b70:	mov	r2, r7
   24b74:	mov	r3, r6
   24b78:	str	r1, [sp]
   24b7c:	ldr	r1, [pc, #4072]	; 25b6c <__flatcc_fb_gen_c_json_printer@@Base+0x14ec>
   24b80:	add	r1, pc, r1
   24b84:	bl	149b8 <fprintf@plt>
   24b88:	ldr	r3, [r9]
   24b8c:	ldr	r0, [pc, #4060]	; 25b70 <__flatcc_fb_gen_c_json_printer@@Base+0x14f0>
   24b90:	mov	r1, #59	; 0x3b
   24b94:	mov	r2, #1
   24b98:	add	r0, pc, r0
   24b9c:	bl	1494c <fwrite@plt>
   24ba0:	ldr	r4, [r5, #20]
   24ba4:	ldr	r6, [pc, #4040]	; 25b74 <__flatcc_fb_gen_c_json_printer@@Base+0x14f4>
   24ba8:	cmp	r4, #0
   24bac:	add	r6, pc, r6
   24bb0:	beq	24c34 <__flatcc_fb_gen_c_json_printer@@Base+0x5b4>
   24bb4:	ldrh	r1, [r4, #56]	; 0x38
   24bb8:	add	r0, r4, #48	; 0x30
   24bbc:	cmp	r1, #4
   24bc0:	beq	24bd4 <__flatcc_fb_gen_c_json_printer@@Base+0x554>
   24bc4:	cmp	r1, #6
   24bc8:	beq	24bfc <__flatcc_fb_gen_c_json_printer@@Base+0x57c>
   24bcc:	cmp	r1, #5
   24bd0:	bne	25a1c <__flatcc_fb_gen_c_json_printer@@Base+0x139c>
   24bd4:	ldr	r1, [r4, #4]
   24bd8:	ldrd	r2, [r0]
   24bdc:	ldr	r0, [r9]
   24be0:	ldr	r7, [r1]
   24be4:	ldr	r1, [r1, #4]
   24be8:	str	sl, [sp]
   24bec:	stmib	sp, {r1, r7}
   24bf0:	str	r1, [sp, #12]
   24bf4:	mov	r1, r6
   24bf8:	b	24c24 <__flatcc_fb_gen_c_json_printer@@Base+0x5a4>
   24bfc:	ldr	r1, [r4, #4]
   24c00:	ldrb	r2, [r4, #48]	; 0x30
   24c04:	ldr	r0, [r9]
   24c08:	ldr	r3, [r1]
   24c0c:	ldr	r1, [r1, #4]
   24c10:	str	sl, [sp]
   24c14:	stmib	sp, {r1, r3}
   24c18:	str	r1, [sp, #12]
   24c1c:	mov	r1, r6
   24c20:	mov	r3, #0
   24c24:	bl	149b8 <fprintf@plt>
   24c28:	ldr	r4, [r4]
   24c2c:	cmp	r4, #0
   24c30:	bne	24bb4 <__flatcc_fb_gen_c_json_printer@@Base+0x534>
   24c34:	ldr	r3, [r9]
   24c38:	ldr	r0, [pc, #4056]	; 25c18 <__flatcc_fb_gen_c_json_printer@@Base+0x1598>
   24c3c:	mov	r1, #59	; 0x3b
   24c40:	mov	r2, #1
   24c44:	add	r0, pc, r0
   24c48:	bl	1494c <fwrite@plt>
   24c4c:	ldr	sl, [pc, #4040]	; 25c1c <__flatcc_fb_gen_c_json_printer@@Base+0x159c>
   24c50:	sub	r8, fp, #256	; 0x100
   24c54:	add	sl, pc, sl
   24c58:	ldr	r3, [r9]
   24c5c:	ldr	r0, [pc, #4028]	; 25c20 <__flatcc_fb_gen_c_json_printer@@Base+0x15a0>
   24c60:	mov	r1, #3
   24c64:	mov	r2, #1
   24c68:	add	r0, pc, r0
   24c6c:	bl	1494c <fwrite@plt>
   24c70:	ldr	r5, [r5]
   24c74:	cmp	r5, #0
   24c78:	bne	24878 <__flatcc_fb_gen_c_json_printer@@Base+0x1f8>
   24c7c:	ldr	r0, [sp, #48]	; 0x30
   24c80:	ldr	r0, [r0, #208]	; 0xd0
   24c84:	ldr	r4, [r0, #40]	; 0x28
   24c88:	cmp	r4, #0
   24c8c:	beq	2581c <__flatcc_fb_gen_c_json_printer@@Base+0x119c>
   24c90:	ldr	sl, [pc, #4060]	; 25c74 <__flatcc_fb_gen_c_json_printer@@Base+0x15f4>
   24c94:	ldr	r7, [pc, #4060]	; 25c78 <__flatcc_fb_gen_c_json_printer@@Base+0x15f8>
   24c98:	sub	r8, fp, #256	; 0x100
   24c9c:	add	r6, sp, #56	; 0x38
   24ca0:	add	sl, pc, sl
   24ca4:	add	r7, pc, r7
   24ca8:	ldrh	r0, [r4, #8]
   24cac:	cmp	r0, #4
   24cb0:	bne	24e8c <__flatcc_fb_gen_c_json_printer@@Base+0x80c>
   24cb4:	mov	r0, r8
   24cb8:	mov	r1, #0
   24cbc:	mov	r2, #220	; 0xdc
   24cc0:	bl	149d0 <memset@plt>
   24cc4:	ldr	r0, [r4, #12]
   24cc8:	mov	r1, r4
   24ccc:	mov	r2, r8
   24cd0:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   24cd4:	ldr	r0, [r9]
   24cd8:	ldr	r1, [pc, #4076]	; 25ccc <__flatcc_fb_gen_c_json_printer@@Base+0x164c>
   24cdc:	mov	r2, r8
   24ce0:	add	r1, pc, r1
   24ce4:	bl	149b8 <fprintf@plt>
   24ce8:	ldr	r5, [r4, #20]
   24cec:	cmp	r5, #0
   24cf0:	bne	24d04 <__flatcc_fb_gen_c_json_printer@@Base+0x684>
   24cf4:	b	24d3c <__flatcc_fb_gen_c_json_printer@@Base+0x6bc>
   24cf8:	ldr	r5, [r5]
   24cfc:	cmp	r5, #0
   24d00:	beq	24d3c <__flatcc_fb_gen_c_json_printer@@Base+0x6bc>
   24d04:	ldrh	r0, [r5, #24]
   24d08:	cmp	r0, #0
   24d0c:	beq	24cf8 <__flatcc_fb_gen_c_json_printer@@Base+0x678>
   24d10:	ldr	r1, [r5, #4]
   24d14:	ldr	r0, [r9]
   24d18:	ldr	r2, [r5, #48]	; 0x30
   24d1c:	ldr	r6, [r1]
   24d20:	ldr	r3, [r1, #4]
   24d24:	mov	r1, r7
   24d28:	str	r6, [sp]
   24d2c:	add	r6, sp, #56	; 0x38
   24d30:	str	r3, [sp, #4]
   24d34:	bl	149b8 <fprintf@plt>
   24d38:	b	24cf8 <__flatcc_fb_gen_c_json_printer@@Base+0x678>
   24d3c:	ldr	r3, [r9]
   24d40:	ldr	r0, [pc, #4024]	; 25d00 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
   24d44:	mov	r1, #78	; 0x4e
   24d48:	mov	r2, #1
   24d4c:	add	r0, pc, r0
   24d50:	bl	1494c <fwrite@plt>
   24d54:	ldr	r3, [r9]
   24d58:	ldr	r0, [pc, #4004]	; 25d04 <__flatcc_fb_gen_c_json_printer@@Base+0x1684>
   24d5c:	mov	r1, #9
   24d60:	mov	r2, #1
   24d64:	add	r0, pc, r0
   24d68:	bl	1494c <fwrite@plt>
   24d6c:	mov	r0, r8
   24d70:	mov	r1, #0
   24d74:	mov	r2, #220	; 0xdc
   24d78:	bl	149d0 <memset@plt>
   24d7c:	mov	r0, r6
   24d80:	mov	r1, #0
   24d84:	mov	r2, #220	; 0xdc
   24d88:	bl	149d0 <memset@plt>
   24d8c:	ldr	r0, [r4, #12]
   24d90:	mov	r1, r4
   24d94:	mov	r2, r8
   24d98:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   24d9c:	ldr	r0, [r9]
   24da0:	ldr	r1, [pc, #3936]	; 25d08 <__flatcc_fb_gen_c_json_printer@@Base+0x1688>
   24da4:	mov	r2, r8
   24da8:	add	r1, pc, r1
   24dac:	bl	149b8 <fprintf@plt>
   24db0:	ldr	r5, [r4, #20]
   24db4:	cmp	r5, #0
   24db8:	bne	24dcc <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   24dbc:	b	24e5c <__flatcc_fb_gen_c_json_printer@@Base+0x7dc>
   24dc0:	ldr	r5, [r5]
   24dc4:	cmp	r5, #0
   24dc8:	beq	24e5c <__flatcc_fb_gen_c_json_printer@@Base+0x7dc>
   24dcc:	ldrh	r0, [r5, #24]
   24dd0:	cmp	r0, #0
   24dd4:	beq	24dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x740>
   24dd8:	cmp	r0, #10
   24ddc:	beq	24e24 <__flatcc_fb_gen_c_json_printer@@Base+0x7a4>
   24de0:	cmp	r0, #14
   24de4:	bne	25958 <__flatcc_fb_gen_c_json_printer@@Base+0x12d8>
   24de8:	ldr	r1, [r5, #16]
   24dec:	mov	r2, r6
   24df0:	ldr	r0, [r1, #12]
   24df4:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   24df8:	ldr	r0, [r5, #16]
   24dfc:	ldrh	r0, [r0, #8]
   24e00:	cmp	r0, #1
   24e04:	beq	24e38 <__flatcc_fb_gen_c_json_printer@@Base+0x7b8>
   24e08:	cmp	r0, #0
   24e0c:	bne	25a6c <__flatcc_fb_gen_c_json_printer@@Base+0x13ec>
   24e10:	ldr	r2, [r5, #48]	; 0x30
   24e14:	ldr	r0, [r9]
   24e18:	ldr	r1, [pc, #3820]	; 25d0c <__flatcc_fb_gen_c_json_printer@@Base+0x168c>
   24e1c:	add	r1, pc, r1
   24e20:	b	24e48 <__flatcc_fb_gen_c_json_printer@@Base+0x7c8>
   24e24:	ldr	r2, [r5, #48]	; 0x30
   24e28:	ldr	r0, [r9]
   24e2c:	mov	r1, sl
   24e30:	bl	149b8 <fprintf@plt>
   24e34:	b	24dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x740>
   24e38:	ldr	r2, [r5, #48]	; 0x30
   24e3c:	ldr	r0, [r9]
   24e40:	ldr	r1, [pc, #3784]	; 25d10 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   24e44:	add	r1, pc, r1
   24e48:	mov	r3, r6
   24e4c:	bl	149b8 <fprintf@plt>
   24e50:	ldr	r5, [r5]
   24e54:	cmp	r5, #0
   24e58:	bne	24dcc <__flatcc_fb_gen_c_json_printer@@Base+0x74c>
   24e5c:	ldr	r3, [r9]
   24e60:	ldr	r0, [pc, #3804]	; 25d44 <__flatcc_fb_gen_c_json_printer@@Base+0x16c4>
   24e64:	mov	r1, #28
   24e68:	mov	r2, #1
   24e6c:	add	r0, pc, r0
   24e70:	bl	1494c <fwrite@plt>
   24e74:	ldr	r3, [r9]
   24e78:	ldr	r0, [pc, #3784]	; 25d48 <__flatcc_fb_gen_c_json_printer@@Base+0x16c8>
   24e7c:	mov	r1, #9
   24e80:	mov	r2, #1
   24e84:	add	r0, pc, r0
   24e88:	bl	1494c <fwrite@plt>
   24e8c:	ldr	r4, [r4]
   24e90:	cmp	r4, #0
   24e94:	bne	24ca8 <__flatcc_fb_gen_c_json_printer@@Base+0x628>
   24e98:	ldr	r0, [sp, #48]	; 0x30
   24e9c:	ldr	r0, [r0, #208]	; 0xd0
   24ea0:	ldr	r4, [r0, #40]	; 0x28
   24ea4:	cmp	r4, #0
   24ea8:	beq	2581c <__flatcc_fb_gen_c_json_printer@@Base+0x119c>
   24eac:	sub	r8, fp, #256	; 0x100
   24eb0:	ldrh	r0, [r4, #8]
   24eb4:	cmp	r0, #1
   24eb8:	bne	25088 <__flatcc_fb_gen_c_json_printer@@Base+0xa08>
   24ebc:	mov	r0, r8
   24ec0:	mov	r1, #0
   24ec4:	mov	r2, #220	; 0xdc
   24ec8:	bl	149d0 <memset@plt>
   24ecc:	mov	r0, r6
   24ed0:	mov	r1, #0
   24ed4:	mov	r2, #220	; 0xdc
   24ed8:	bl	149d0 <memset@plt>
   24edc:	ldr	r0, [r4, #12]
   24ee0:	mov	r1, r4
   24ee4:	mov	r2, r8
   24ee8:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   24eec:	ldr	r0, [r9]
   24ef0:	ldr	r1, [pc, #3668]	; 25d4c <__flatcc_fb_gen_c_json_printer@@Base+0x16cc>
   24ef4:	mov	r2, r8
   24ef8:	add	r1, pc, r1
   24efc:	bl	149b8 <fprintf@plt>
   24f00:	ldr	r5, [r4, #20]
   24f04:	cmp	r5, #0
   24f08:	beq	25058 <__flatcc_fb_gen_c_json_printer@@Base+0x9d8>
   24f0c:	mov	sl, #0
   24f10:	ldrb	r0, [r5, #72]	; 0x48
   24f14:	tst	r0, #4
   24f18:	bne	25048 <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   24f1c:	ldrh	r0, [r5, #24]
   24f20:	cmp	r0, #14
   24f24:	beq	24f8c <__flatcc_fb_gen_c_json_printer@@Base+0x90c>
   24f28:	cmp	r0, #8
   24f2c:	bne	25048 <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   24f30:	ldr	r0, [r5, #16]
   24f34:	sub	r1, r0, #1
   24f38:	cmp	r1, #11
   24f3c:	bcs	25ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   24f40:	ldr	r2, [r5, #4]
   24f44:	ldr	r0, [r9]
   24f48:	ldr	r3, [r5, #80]	; 0x50
   24f4c:	ldr	r7, [r5, #84]	; 0x54
   24f50:	ldr	r6, [r2]
   24f54:	ldr	r2, [r2, #4]
   24f58:	stm	sp, {r3, r7}
   24f5c:	mov	r3, sl
   24f60:	str	r2, [sp, #8]
   24f64:	str	r6, [sp, #12]
   24f68:	str	r2, [sp, #16]
   24f6c:	ldr	r2, [pc, #3548]	; 25d50 <__flatcc_fb_gen_c_json_printer@@Base+0x16d0>
   24f70:	add	r2, pc, r2
   24f74:	ldr	r2, [r2, r1, lsl #2]
   24f78:	ldr	r1, [pc, #3540]	; 25d54 <__flatcc_fb_gen_c_json_printer@@Base+0x16d4>
   24f7c:	add	r1, pc, r1
   24f80:	bl	149b8 <fprintf@plt>
   24f84:	add	r6, sp, #56	; 0x38
   24f88:	b	25048 <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   24f8c:	ldr	r1, [r5, #16]
   24f90:	mov	r2, r6
   24f94:	ldr	r0, [r1, #12]
   24f98:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   24f9c:	ldr	r0, [r5, #16]
   24fa0:	ldrh	r1, [r0, #8]
   24fa4:	cmp	r1, #1
   24fa8:	beq	25010 <__flatcc_fb_gen_c_json_printer@@Base+0x990>
   24fac:	cmp	r1, #3
   24fb0:	bne	25048 <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   24fb4:	ldr	r0, [r0, #40]	; 0x28
   24fb8:	sub	r1, r0, #1
   24fbc:	cmp	r1, #11
   24fc0:	bcs	25ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   24fc4:	ldr	r2, [r5, #4]
   24fc8:	ldrd	r6, [r5, #80]	; 0x50
   24fcc:	ldr	r0, [r9]
   24fd0:	ldr	r3, [r2]
   24fd4:	ldr	r2, [r2, #4]
   24fd8:	stm	sp, {r6, r7}
   24fdc:	add	r6, sp, #56	; 0x38
   24fe0:	str	r6, [sp, #20]
   24fe4:	str	r3, [sp, #12]
   24fe8:	str	r2, [sp, #8]
   24fec:	str	r2, [sp, #16]
   24ff0:	mov	r3, sl
   24ff4:	ldr	r2, [pc, #3420]	; 25d58 <__flatcc_fb_gen_c_json_printer@@Base+0x16d8>
   24ff8:	add	r2, pc, r2
   24ffc:	ldr	r2, [r2, r1, lsl #2]
   25000:	ldr	r1, [pc, #3412]	; 25d5c <__flatcc_fb_gen_c_json_printer@@Base+0x16dc>
   25004:	add	r1, pc, r1
   25008:	bl	149b8 <fprintf@plt>
   2500c:	b	25048 <__flatcc_fb_gen_c_json_printer@@Base+0x9c8>
   25010:	ldr	r1, [r5, #4]
   25014:	ldrd	r2, [r5, #80]	; 0x50
   25018:	ldr	r0, [r9]
   2501c:	ldr	r7, [r1]
   25020:	ldr	r1, [r1, #4]
   25024:	stm	sp, {r2, r3}
   25028:	str	r6, [sp, #20]
   2502c:	mov	r2, sl
   25030:	str	r1, [sp, #8]
   25034:	str	r7, [sp, #12]
   25038:	str	r1, [sp, #16]
   2503c:	ldr	r1, [pc, #3356]	; 25d60 <__flatcc_fb_gen_c_json_printer@@Base+0x16e0>
   25040:	add	r1, pc, r1
   25044:	bl	149b8 <fprintf@plt>
   25048:	ldr	r5, [r5]
   2504c:	add	sl, sl, #1
   25050:	cmp	r5, #0
   25054:	bne	24f10 <__flatcc_fb_gen_c_json_printer@@Base+0x890>
   25058:	ldr	r3, [r9]
   2505c:	ldr	r0, [pc, #3328]	; 25d64 <__flatcc_fb_gen_c_json_printer@@Base+0x16e4>
   25060:	mov	r1, #3
   25064:	mov	r2, #1
   25068:	add	r0, pc, r0
   2506c:	bl	1494c <fwrite@plt>
   25070:	ldr	r0, [r9]
   25074:	ldr	r1, [pc, #3308]	; 25d68 <__flatcc_fb_gen_c_json_printer@@Base+0x16e8>
   25078:	mov	r2, r8
   2507c:	mov	r3, r8
   25080:	add	r1, pc, r1
   25084:	bl	149b8 <fprintf@plt>
   25088:	ldr	r4, [r4]
   2508c:	cmp	r4, #0
   25090:	bne	24eb0 <__flatcc_fb_gen_c_json_printer@@Base+0x830>
   25094:	ldr	r0, [sp, #48]	; 0x30
   25098:	ldr	r0, [r0, #208]	; 0xd0
   2509c:	ldr	r7, [r0, #40]	; 0x28
   250a0:	cmp	r7, #0
   250a4:	beq	2581c <__flatcc_fb_gen_c_json_printer@@Base+0x119c>
   250a8:	sub	r8, fp, #256	; 0x100
   250ac:	ldrh	r0, [r7, #8]
   250b0:	cmp	r0, #0
   250b4:	bne	25808 <__flatcc_fb_gen_c_json_printer@@Base+0x1188>
   250b8:	mov	r0, r8
   250bc:	mov	r1, #0
   250c0:	mov	r2, #220	; 0xdc
   250c4:	bl	149d0 <memset@plt>
   250c8:	mov	r0, r6
   250cc:	mov	r1, #0
   250d0:	mov	r2, #220	; 0xdc
   250d4:	bl	149d0 <memset@plt>
   250d8:	ldr	r0, [r7, #12]
   250dc:	mov	r1, r7
   250e0:	mov	r2, r8
   250e4:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   250e8:	mov	r6, r7
   250ec:	mov	r1, #4
   250f0:	ldr	r4, [r6, #96]!	; 0x60
   250f4:	ldr	r5, [r6, #4]
   250f8:	mov	r0, r4
   250fc:	bl	148c8 <calloc@plt>
   25100:	mov	sl, r0
   25104:	orrs	r0, r4, r5
   25108:	beq	25114 <__flatcc_fb_gen_c_json_printer@@Base+0xa94>
   2510c:	cmp	sl, #0
   25110:	beq	25c7c <__flatcc_fb_gen_c_json_printer@@Base+0x15fc>
   25114:	ldr	r0, [r7, #20]
   25118:	str	r7, [sp, #52]	; 0x34
   2511c:	cmp	r0, #0
   25120:	beq	25138 <__flatcc_fb_gen_c_json_printer@@Base+0xab8>
   25124:	ldr	r1, [r0, #96]	; 0x60
   25128:	str	r0, [sl, r1, lsl #2]
   2512c:	ldr	r0, [r0]
   25130:	cmp	r0, #0
   25134:	bne	25124 <__flatcc_fb_gen_c_json_printer@@Base+0xaa4>
   25138:	ldr	r0, [r9]
   2513c:	ldr	r1, [pc, #3112]	; 25d6c <__flatcc_fb_gen_c_json_printer@@Base+0x16ec>
   25140:	mov	r2, r8
   25144:	add	r1, pc, r1
   25148:	bl	149b8 <fprintf@plt>
   2514c:	ldrd	r0, [r6]
   25150:	ldr	r7, [pc, #3096]	; 25d70 <__flatcc_fb_gen_c_json_printer@@Base+0x16f0>
   25154:	orrs	r0, r0, r1
   25158:	add	r7, pc, r7
   2515c:	beq	257bc <__flatcc_fb_gen_c_json_printer@@Base+0x113c>
   25160:	ldr	r0, [sp, #52]	; 0x34
   25164:	mov	r4, #0
   25168:	mov	r8, #0
   2516c:	add	r0, r0, #112	; 0x70
   25170:	str	r0, [sp, #40]	; 0x28
   25174:	ldr	r5, [sl, r4, lsl #2]
   25178:	cmp	r5, #0
   2517c:	beq	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   25180:	ldrb	r0, [r5, #72]	; 0x48
   25184:	tst	r0, #4
   25188:	bne	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   2518c:	ldr	r3, [r9]
   25190:	mov	r0, r7
   25194:	mov	r1, #5
   25198:	mov	r2, #1
   2519c:	bl	1494c <fwrite@plt>
   251a0:	ldrh	r0, [r5, #24]
   251a4:	sub	r0, r0, #7
   251a8:	cmp	r0, #8
   251ac:	bhi	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   251b0:	add	r1, pc, #4
   251b4:	ldr	r0, [r1, r0, lsl #2]
   251b8:	add	pc, r1, r0
   251bc:	andeq	r0, r0, r4, lsr #32
   251c0:	andeq	r0, r0, r4, lsl r1
   251c4:	andeq	r0, r0, r4, ror r0
   251c8:	muleq	r0, ip, r1
   251cc:	andeq	r0, r0, r8, ror #11
   251d0:	andeq	r0, r0, r8, ror #11
   251d4:	andeq	r0, r0, r8, ror #11
   251d8:	andeq	r0, r0, r8, asr #3
   251dc:	andeq	r0, r0, r0, lsr #1
   251e0:	ldrh	r0, [r5, #72]	; 0x48
   251e4:	tst	r0, #3072	; 0xc00
   251e8:	beq	2544c <__flatcc_fb_gen_c_json_printer@@Base+0xdcc>
   251ec:	ldr	r2, [r5, #4]
   251f0:	mov	r1, #1
   251f4:	bic	r1, r1, r0, lsr #10
   251f8:	ldr	r0, [r9]
   251fc:	ldr	r3, [r5, #96]	; 0x60
   25200:	ldr	ip, [r5, #100]	; 0x64
   25204:	ldr	r5, [r2]
   25208:	ldr	r2, [r2, #4]
   2520c:	stm	sp, {r2, r5}
   25210:	str	r2, [sp, #8]
   25214:	str	r1, [sp, #12]
   25218:	mov	r2, r3
   2521c:	mov	r3, ip
   25220:	ldr	r1, [pc, #2932]	; 25d9c <__flatcc_fb_gen_c_json_printer@@Base+0x171c>
   25224:	add	r1, pc, r1
   25228:	bl	149b8 <fprintf@plt>
   2522c:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   25230:	ldr	r1, [r5, #4]
   25234:	ldrd	r2, [r5, #96]	; 0x60
   25238:	ldr	r0, [r9]
   2523c:	ldr	r5, [r1]
   25240:	ldr	r1, [r1, #4]
   25244:	stm	sp, {r1, r5}
   25248:	str	r1, [sp, #8]
   2524c:	ldr	r1, [pc, #2912]	; 25db4 <__flatcc_fb_gen_c_json_printer@@Base+0x1734>
   25250:	add	r1, pc, r1
   25254:	bl	149b8 <fprintf@plt>
   25258:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   2525c:	ldr	r1, [r5, #16]
   25260:	add	r2, sp, #56	; 0x38
   25264:	ldr	r0, [r1, #12]
   25268:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   2526c:	ldr	r0, [r5, #16]
   25270:	ldrh	r1, [r0, #8]
   25274:	cmp	r1, #4
   25278:	bhi	25b1c <__flatcc_fb_gen_c_json_printer@@Base+0x149c>
   2527c:	add	r2, pc, #4
   25280:	ldr	r1, [r2, r1, lsl #2]
   25284:	add	pc, r2, r1
   25288:	andeq	r0, r0, r4, lsl r0
   2528c:	andeq	r0, r0, ip, asr r2
   25290:	muleq	r0, r4, r8
   25294:	andeq	r0, r0, r0, lsr #5
   25298:	andeq	r0, r0, r4, lsr #4
   2529c:	ldr	r1, [r5, #4]
   252a0:	ldrd	r2, [r5, #96]	; 0x60
   252a4:	ldr	r0, [r9]
   252a8:	ldr	r5, [r1]
   252ac:	ldr	r1, [r1, #4]
   252b0:	stm	sp, {r1, r5}
   252b4:	str	r1, [sp, #8]
   252b8:	add	r1, sp, #56	; 0x38
   252bc:	str	r1, [sp, #12]
   252c0:	ldr	r1, [pc, #2868]	; 25dfc <__flatcc_fb_gen_c_json_printer@@Base+0x177c>
   252c4:	add	r1, pc, r1
   252c8:	bl	149b8 <fprintf@plt>
   252cc:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   252d0:	ldr	r0, [r5, #16]
   252d4:	sub	r0, r0, #1
   252d8:	cmp	r0, #11
   252dc:	bcs	25ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   252e0:	ldr	r1, [pc, #2700]	; 25d74 <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   252e4:	add	r1, pc, r1
   252e8:	ldr	r2, [r1, r0, lsl #2]
   252ec:	ldrh	r0, [r5, #56]	; 0x38
   252f0:	add	r1, r5, #48	; 0x30
   252f4:	sub	r3, r0, #5
   252f8:	cmp	r3, #2
   252fc:	bcc	253f8 <__flatcc_fb_gen_c_json_printer@@Base+0xd78>
   25300:	cmp	r0, #3
   25304:	beq	25598 <__flatcc_fb_gen_c_json_printer@@Base+0xf18>
   25308:	cmp	r0, #4
   2530c:	bne	25b78 <__flatcc_fb_gen_c_json_printer@@Base+0x14f8>
   25310:	mov	r7, r2
   25314:	ldr	r2, [r5, #4]
   25318:	ldr	r0, [r9]
   2531c:	ldr	lr, [r5, #100]	; 0x64
   25320:	ldr	r5, [r5, #96]	; 0x60
   25324:	ldr	ip, [r2]
   25328:	ldr	r2, [r2, #4]
   2532c:	ldm	r1, {r1, r3}
   25330:	str	r1, [sp, #24]
   25334:	str	r3, [sp, #28]
   25338:	stm	sp, {r5, lr}
   2533c:	str	r2, [sp, #8]
   25340:	str	r2, [sp, #16]
   25344:	str	ip, [sp, #12]
   25348:	mov	r2, r7
   2534c:	ldr	r1, [pc, #2596]	; 25d78 <__flatcc_fb_gen_c_json_printer@@Base+0x16f8>
   25350:	add	r1, pc, r1
   25354:	b	255d4 <__flatcc_fb_gen_c_json_printer@@Base+0xf54>
   25358:	ldr	r1, [r5, #4]
   2535c:	ldrd	r2, [r5, #96]	; 0x60
   25360:	ldr	r0, [r9]
   25364:	ldr	r5, [r1]
   25368:	ldr	r1, [r1, #4]
   2536c:	stm	sp, {r1, r5}
   25370:	str	r1, [sp, #8]
   25374:	ldr	r1, [pc, #2612]	; 25db0 <__flatcc_fb_gen_c_json_printer@@Base+0x1730>
   25378:	add	r1, pc, r1
   2537c:	bl	149b8 <fprintf@plt>
   25380:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   25384:	ldr	r1, [r5, #16]
   25388:	add	r2, sp, #56	; 0x38
   2538c:	ldr	r0, [r1, #12]
   25390:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   25394:	ldr	r0, [r5, #16]
   25398:	ldrh	r1, [r0, #8]
   2539c:	cmp	r1, #4
   253a0:	bhi	25bc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1548>
   253a4:	add	r2, pc, #4
   253a8:	ldr	r1, [r2, r1, lsl #2]
   253ac:	add	pc, r2, r1
   253b0:	andeq	r0, r0, r4, lsl r0
   253b4:	andeq	r0, r0, ip, ror #4
   253b8:	andeq	r0, r0, r8, lsl r8
   253bc:	andeq	r0, r0, ip, lsr #5
   253c0:	andeq	r0, r0, r4, lsr r2
   253c4:	ldr	r1, [r5, #4]
   253c8:	ldrd	r2, [r5, #96]	; 0x60
   253cc:	ldr	r0, [r9]
   253d0:	ldr	r5, [r1]
   253d4:	ldr	r1, [r1, #4]
   253d8:	stm	sp, {r1, r5}
   253dc:	str	r1, [sp, #8]
   253e0:	add	r1, sp, #56	; 0x38
   253e4:	str	r1, [sp, #12]
   253e8:	ldr	r1, [pc, #2540]	; 25ddc <__flatcc_fb_gen_c_json_printer@@Base+0x175c>
   253ec:	add	r1, pc, r1
   253f0:	bl	149b8 <fprintf@plt>
   253f4:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   253f8:	ldr	r0, [r9]
   253fc:	ldr	r3, [r5, #4]
   25400:	str	r0, [sp, #44]	; 0x2c
   25404:	mov	r0, r7
   25408:	ldr	ip, [r5, #96]	; 0x60
   2540c:	ldr	r7, [r5, #100]	; 0x64
   25410:	ldr	lr, [r3]
   25414:	ldr	r3, [r3, #4]
   25418:	ldm	r1, {r1, r5}
   2541c:	str	r7, [sp, #4]
   25420:	str	r1, [sp, #24]
   25424:	str	r5, [sp, #28]
   25428:	str	ip, [sp]
   2542c:	str	r3, [sp, #8]
   25430:	str	lr, [sp, #12]
   25434:	str	r3, [sp, #16]
   25438:	mov	r7, r0
   2543c:	ldr	r0, [sp, #44]	; 0x2c
   25440:	ldr	r1, [pc, #2528]	; 25e28 <__flatcc_fb_gen_c_json_printer@@Base+0x17a8>
   25444:	add	r1, pc, r1
   25448:	b	257a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1120>
   2544c:	ldr	r1, [r5, #104]	; 0x68
   25450:	cmp	r1, #0
   25454:	beq	256e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1064>
   25458:	ldr	r0, [r1, #12]
   2545c:	add	r2, sp, #56	; 0x38
   25460:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   25464:	ldr	r1, [r5, #4]
   25468:	add	r5, r5, #96	; 0x60
   2546c:	ldr	r0, [r9]
   25470:	ldm	r5, {r2, r3, r5}
   25474:	ldr	ip, [r1]
   25478:	ldr	r1, [r1, #4]
   2547c:	ldrh	r5, [r5, #8]
   25480:	stm	sp, {r1, ip}
   25484:	str	r1, [sp, #8]
   25488:	add	r1, sp, #56	; 0x38
   2548c:	cmp	r5, #0
   25490:	str	r1, [sp, #12]
   25494:	ldrne	r1, [pc, #2312]	; 25da4 <__flatcc_fb_gen_c_json_printer@@Base+0x1724>
   25498:	addne	r1, pc, r1
   2549c:	ldreq	r1, [pc, #2300]	; 25da0 <__flatcc_fb_gen_c_json_printer@@Base+0x1720>
   254a0:	addeq	r1, pc, r1
   254a4:	bl	149b8 <fprintf@plt>
   254a8:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   254ac:	ldr	r1, [r5, #4]
   254b0:	ldrd	r2, [r5, #96]	; 0x60
   254b4:	ldr	r0, [r9]
   254b8:	ldr	r5, [r1]
   254bc:	ldr	r1, [r1, #4]
   254c0:	stm	sp, {r1, r5}
   254c4:	str	r1, [sp, #8]
   254c8:	add	r1, sp, #56	; 0x38
   254cc:	str	r1, [sp, #12]
   254d0:	str	r1, [sp, #16]
   254d4:	ldr	r1, [pc, #2352]	; 25e0c <__flatcc_fb_gen_c_json_printer@@Base+0x178c>
   254d8:	add	r1, pc, r1
   254dc:	bl	149b8 <fprintf@plt>
   254e0:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   254e4:	add	r3, r5, #92	; 0x5c
   254e8:	ldr	lr, [r5, #88]	; 0x58
   254ec:	ldm	r3, {r1, r2, r3}
   254f0:	ldr	r5, [r5, #4]
   254f4:	ldr	r0, [r9]
   254f8:	ldr	ip, [r5]
   254fc:	ldr	r5, [r5, #4]
   25500:	str	r1, [sp, #20]
   25504:	add	r1, sp, #56	; 0x38
   25508:	str	lr, [sp, #16]
   2550c:	str	r1, [sp, #24]
   25510:	stm	sp, {r5, ip}
   25514:	str	r5, [sp, #8]
   25518:	ldr	r1, [pc, #2280]	; 25e08 <__flatcc_fb_gen_c_json_printer@@Base+0x1788>
   2551c:	add	r1, pc, r1
   25520:	bl	149b8 <fprintf@plt>
   25524:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   25528:	sub	r1, r0, #1
   2552c:	cmp	r1, #11
   25530:	bcs	25ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   25534:	ldr	r0, [r9]
   25538:	ldr	r2, [r5, #4]
   2553c:	str	r0, [sp, #44]	; 0x2c
   25540:	ldr	r0, [r5, #96]	; 0x60
   25544:	ldr	lr, [r5, #100]	; 0x64
   25548:	ldr	r3, [sp, #40]	; 0x28
   2554c:	ldr	ip, [r2]
   25550:	ldr	r2, [r2, #4]
   25554:	ldr	r5, [r3]
   25558:	ldr	r3, [r3, #4]
   2555c:	str	r3, [sp, #28]
   25560:	add	r3, sp, #56	; 0x38
   25564:	str	r5, [sp, #24]
   25568:	str	r3, [sp, #32]
   2556c:	stm	sp, {r0, lr}
   25570:	str	r2, [sp, #8]
   25574:	str	ip, [sp, #12]
   25578:	str	r2, [sp, #16]
   2557c:	ldr	r0, [pc, #2172]	; 25e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1780>
   25580:	add	r0, pc, r0
   25584:	ldr	r2, [r0, r1, lsl #2]
   25588:	ldr	r0, [sp, #44]	; 0x2c
   2558c:	ldr	r1, [pc, #2160]	; 25e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1784>
   25590:	add	r1, pc, r1
   25594:	b	257a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1120>
   25598:	ldr	r0, [r9]
   2559c:	ldr	r7, [r5, #96]	; 0x60
   255a0:	ldr	r3, [r5, #100]	; 0x64
   255a4:	ldr	r1, [r5, #4]
   255a8:	vldr	d16, [r5, #48]	; 0x30
   255ac:	ldr	r5, [r1]
   255b0:	ldr	r1, [r1, #4]
   255b4:	vstr	d16, [sp, #24]
   255b8:	str	r7, [sp]
   255bc:	str	r3, [sp, #4]
   255c0:	str	r1, [sp, #8]
   255c4:	str	r5, [sp, #12]
   255c8:	str	r1, [sp, #16]
   255cc:	ldr	r1, [pc, #1960]	; 25d7c <__flatcc_fb_gen_c_json_printer@@Base+0x16fc>
   255d0:	add	r1, pc, r1
   255d4:	bl	149b8 <fprintf@plt>
   255d8:	ldr	r7, [pc, #1952]	; 25d80 <__flatcc_fb_gen_c_json_printer@@Base+0x1700>
   255dc:	add	r7, pc, r7
   255e0:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   255e4:	ldr	r1, [r5, #4]
   255e8:	ldrd	r2, [r5, #96]	; 0x60
   255ec:	ldr	r0, [r9]
   255f0:	ldr	r5, [r1]
   255f4:	ldr	r1, [r1, #4]
   255f8:	stm	sp, {r1, r5}
   255fc:	str	r1, [sp, #8]
   25600:	add	r1, sp, #56	; 0x38
   25604:	str	r1, [sp, #12]
   25608:	str	r1, [sp, #16]
   2560c:	ldr	r1, [pc, #1996]	; 25de0 <__flatcc_fb_gen_c_json_printer@@Base+0x1760>
   25610:	add	r1, pc, r1
   25614:	bl	149b8 <fprintf@plt>
   25618:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   2561c:	ldr	r1, [r5, #4]
   25620:	ldrd	r2, [r5, #96]	; 0x60
   25624:	ldr	r0, [r9]
   25628:	ldr	r5, [r1]
   2562c:	ldr	r1, [r1, #4]
   25630:	stm	sp, {r1, r5}
   25634:	str	r1, [sp, #8]
   25638:	add	r1, sp, #56	; 0x38
   2563c:	str	r1, [sp, #12]
   25640:	ldr	r1, [pc, #1936]	; 25dd8 <__flatcc_fb_gen_c_json_printer@@Base+0x1758>
   25644:	add	r1, pc, r1
   25648:	bl	149b8 <fprintf@plt>
   2564c:	b	257a4 <__flatcc_fb_gen_c_json_printer@@Base+0x1124>
   25650:			; <UNDEFINED> instruction: 0x00030fb9
   25654:	strdeq	fp, [r1], -sp
   25658:			; <UNDEFINED> instruction: 0x00030fba
   2565c:	ldr	r0, [r0, #40]	; 0x28
   25660:	sub	r0, r0, #1
   25664:	cmp	r0, #11
   25668:	bcs	25ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   2566c:	ldr	r1, [pc, #1860]	; 25db8 <__flatcc_fb_gen_c_json_printer@@Base+0x1738>
   25670:	add	r1, pc, r1
   25674:	ldr	ip, [r1, r0, lsl #2]
   25678:	ldrh	r0, [r5, #56]	; 0x38
   2567c:	add	r1, r5, #48	; 0x30
   25680:	sub	r3, r0, #5
   25684:	cmp	r3, #2
   25688:	bcs	2574c <__flatcc_fb_gen_c_json_printer@@Base+0x10cc>
   2568c:	ldr	r3, [r5, #4]
   25690:	str	ip, [sp, #44]	; 0x2c
   25694:	ldr	r0, [r9]
   25698:	ldr	ip, [r5, #96]	; 0x60
   2569c:	ldr	r2, [r5, #100]	; 0x64
   256a0:	ldr	lr, [r3]
   256a4:	ldr	r3, [r3, #4]
   256a8:	ldm	r1, {r1, r5}
   256ac:	str	ip, [sp]
   256b0:	str	r1, [sp, #24]
   256b4:	add	r1, sp, #56	; 0x38
   256b8:	str	r5, [sp, #28]
   256bc:	str	r1, [sp, #32]
   256c0:	stmib	sp, {r2, r3, lr}
   256c4:	str	r3, [sp, #16]
   256c8:	ldr	r1, [pc, #1968]	; 25e80 <__flatcc_fb_gen_c_json_printer@@Base+0x1800>
   256cc:	ldr	r2, [sp, #44]	; 0x2c
   256d0:	add	r1, pc, r1
   256d4:	b	257a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1120>
   256d8:	andeq	fp, r1, sl, lsl #29
   256dc:	andeq	r0, r3, fp, asr #31
   256e0:	muleq	r1, r4, r0
   256e4:	ldr	r0, [r5, #16]
   256e8:	sub	r1, r0, #1
   256ec:	cmp	r1, #11
   256f0:	bcs	25ac0 <__flatcc_fb_gen_c_json_printer@@Base+0x1440>
   256f4:	ldr	r2, [r5, #4]
   256f8:	ldr	r0, [r9]
   256fc:	ldr	r3, [r5, #96]	; 0x60
   25700:	ldr	r5, [r5, #100]	; 0x64
   25704:	ldr	ip, [r2]
   25708:	ldr	r2, [r2, #4]
   2570c:	stm	sp, {r3, r5}
   25710:	str	r2, [sp, #8]
   25714:	str	ip, [sp, #12]
   25718:	str	r2, [sp, #16]
   2571c:	ldr	r2, [pc, #1668]	; 25da8 <__flatcc_fb_gen_c_json_printer@@Base+0x1728>
   25720:	add	r2, pc, r2
   25724:	ldr	r2, [r2, r1, lsl #2]
   25728:	ldr	r1, [pc, #1660]	; 25dac <__flatcc_fb_gen_c_json_printer@@Base+0x172c>
   2572c:	add	r1, pc, r1
   25730:	b	257a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1120>
   25734:	andeq	r0, r3, r7, asr pc
   25738:	andeq	r1, r3, r2, lsr #2
   2573c:	andeq	r1, r3, r8, lsl r2
   25740:	andeq	r1, r3, lr, ror r2
   25744:	andeq	r1, r3, sl, asr #2
   25748:	andeq	fp, r1, sl, lsl #31
   2574c:	cmp	r0, #4
   25750:	bne	25c24 <__flatcc_fb_gen_c_json_printer@@Base+0x15a4>
   25754:	ldr	r0, [r9]
   25758:	ldr	r2, [r5, #4]
   2575c:	str	r0, [sp, #44]	; 0x2c
   25760:	ldr	lr, [r5, #100]	; 0x64
   25764:	ldr	r5, [r5, #96]	; 0x60
   25768:	ldm	r2, {r0, r2}
   2576c:	ldm	r1, {r1, r3}
   25770:	str	r1, [sp, #24]
   25774:	add	r1, sp, #56	; 0x38
   25778:	str	r3, [sp, #28]
   2577c:	str	r1, [sp, #32]
   25780:	stm	sp, {r5, lr}
   25784:	str	r0, [sp, #12]
   25788:	str	r2, [sp, #8]
   2578c:	str	r2, [sp, #16]
   25790:	mov	r2, ip
   25794:	ldr	r0, [sp, #44]	; 0x2c
   25798:	ldr	r1, [pc, #1564]	; 25dbc <__flatcc_fb_gen_c_json_printer@@Base+0x173c>
   2579c:	add	r1, pc, r1
   257a0:	bl	149b8 <fprintf@plt>
   257a4:	ldrd	r0, [r6]
   257a8:	adds	r4, r4, #1
   257ac:	adc	r8, r8, #0
   257b0:	subs	r0, r4, r0
   257b4:	sbcs	r0, r8, r1
   257b8:	bcc	25174 <__flatcc_fb_gen_c_json_printer@@Base+0xaf4>
   257bc:	ldr	r3, [r9]
   257c0:	ldr	r0, [pc, #1636]	; 25e2c <__flatcc_fb_gen_c_json_printer@@Base+0x17ac>
   257c4:	mov	r1, #4
   257c8:	mov	r2, #1
   257cc:	add	r0, pc, r0
   257d0:	bl	1494c <fwrite@plt>
   257d4:	ldr	r0, [r9]
   257d8:	ldr	r1, [pc, #1616]	; 25e30 <__flatcc_fb_gen_c_json_printer@@Base+0x17b0>
   257dc:	sub	r8, fp, #256	; 0x100
   257e0:	mov	r2, r8
   257e4:	mov	r3, r8
   257e8:	add	r1, pc, r1
   257ec:	bl	149b8 <fprintf@plt>
   257f0:	cmp	sl, #0
   257f4:	beq	25800 <__flatcc_fb_gen_c_json_printer@@Base+0x1180>
   257f8:	mov	r0, sl
   257fc:	bl	148f8 <free@plt>
   25800:	ldr	r7, [sp, #52]	; 0x34
   25804:	add	r6, sp, #56	; 0x38
   25808:	ldr	r7, [r7]
   2580c:	cmp	r7, #0
   25810:	bne	250ac <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   25814:	ldr	r0, [sp, #48]	; 0x30
   25818:	ldr	r0, [r0, #208]	; 0xd0
   2581c:	ldr	r4, [r0, #52]	; 0x34
   25820:	cmp	r4, #0
   25824:	beq	258fc <__flatcc_fb_gen_c_json_printer@@Base+0x127c>
   25828:	ldrh	r0, [r4, #8]
   2582c:	cmp	r0, #1
   25830:	bhi	258fc <__flatcc_fb_gen_c_json_printer@@Base+0x127c>
   25834:	sub	r5, fp, #256	; 0x100
   25838:	mov	r1, #0
   2583c:	mov	r2, #220	; 0xdc
   25840:	mov	r0, r5
   25844:	bl	149d0 <memset@plt>
   25848:	ldr	r0, [r4, #12]
   2584c:	mov	r1, r4
   25850:	mov	r2, r5
   25854:	bl	16bb0 <__flatcc_fb_scoped_symbol_name@@Base>
   25858:	ldr	r4, [sp, #48]	; 0x30
   2585c:	ldr	r1, [r4, #208]	; 0xd0
   25860:	ldr	r0, [r4, #204]	; 0xcc
   25864:	ldr	r2, [r1, #160]	; 0xa0
   25868:	ldr	r1, [pc, #1476]	; 25e34 <__flatcc_fb_gen_c_json_printer@@Base+0x17b4>
   2586c:	add	r1, pc, r1
   25870:	bl	149b8 <fprintf@plt>
   25874:	ldr	r0, [r4, #204]	; 0xcc
   25878:	ldr	r1, [pc, #1464]	; 25e38 <__flatcc_fb_gen_c_json_printer@@Base+0x17b8>
   2587c:	mov	r2, r5
   25880:	add	r1, pc, r1
   25884:	bl	149b8 <fprintf@plt>
   25888:	ldr	r0, [r4, #208]	; 0xd0
   2588c:	ldr	r3, [r4, #204]	; 0xcc
   25890:	ldrh	r1, [r0, #16]
   25894:	cmp	r1, #2
   25898:	bne	258d0 <__flatcc_fb_gen_c_json_printer@@Base+0x1250>
   2589c:	ldrd	r4, [r0, #8]
   258a0:	ldr	r1, [pc, #1428]	; 25e3c <__flatcc_fb_gen_c_json_printer@@Base+0x17bc>
   258a4:	mov	r0, r3
   258a8:	add	r1, pc, r1
   258ac:	mov	r2, r5
   258b0:	mov	r3, r4
   258b4:	bl	149b8 <fprintf@plt>
   258b8:	b	258e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1264>
   258bc:			; <UNDEFINED> instruction: 0x000475b0
   258c0:	ldrdeq	r7, [r4], -r4
   258c4:	muleq	r3, r1, r1
   258c8:	andeq	r1, r3, r8, ror #7
   258cc:	andeq	r1, r3, sl, lsr #8
   258d0:	ldr	r0, [pc, #1384]	; 25e40 <__flatcc_fb_gen_c_json_printer@@Base+0x17c0>
   258d4:	mov	r1, #3
   258d8:	mov	r2, #1
   258dc:	add	r0, pc, r0
   258e0:	bl	1494c <fwrite@plt>
   258e4:	ldr	r3, [r9]
   258e8:	ldr	r0, [pc, #1364]	; 25e44 <__flatcc_fb_gen_c_json_printer@@Base+0x17c4>
   258ec:	mov	r1, #3
   258f0:	mov	r2, #1
   258f4:	add	r0, pc, r0
   258f8:	bl	1494c <fwrite@plt>
   258fc:	ldr	r0, [sp, #48]	; 0x30
   25900:	ldr	r0, [r0, #212]	; 0xd4
   25904:	ldr	r0, [r0, #140]	; 0x8c
   25908:	cmp	r0, #0
   2590c:	beq	25928 <__flatcc_fb_gen_c_json_printer@@Base+0x12a8>
   25910:	ldr	r3, [r9]
   25914:	ldr	r0, [pc, #1324]	; 25e48 <__flatcc_fb_gen_c_json_printer@@Base+0x17c8>
   25918:	mov	r1, #36	; 0x24
   2591c:	mov	r2, #1
   25920:	add	r0, pc, r0
   25924:	bl	1494c <fwrite@plt>
   25928:	ldr	r1, [sp, #48]	; 0x30
   2592c:	ldr	r0, [r1, #204]	; 0xcc
   25930:	ldr	r1, [r1, #208]	; 0xd0
   25934:	ldr	r2, [r1, #164]	; 0xa4
   25938:	ldr	r1, [pc, #1292]	; 25e4c <__flatcc_fb_gen_c_json_printer@@Base+0x17cc>
   2593c:	add	r1, pc, r1
   25940:	bl	149b8 <fprintf@plt>
   25944:	mov	r0, #0
   25948:	sub	sp, fp, #28
   2594c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25950:	muleq	r3, pc, r3	; <UNPREDICTABLE>
   25954:	strdeq	r1, [r3], -sp
   25958:	ldr	r0, [pc, #972]	; 25d2c <__flatcc_fb_gen_c_json_printer@@Base+0x16ac>
   2595c:	mov	r3, #251	; 0xfb
   25960:	ldr	r0, [pc, r0]
   25964:	ldr	r0, [r0]
   25968:	ldr	r1, [pc, #960]	; 25d30 <__flatcc_fb_gen_c_json_printer@@Base+0x16b0>
   2596c:	add	r1, pc, r1
   25970:	str	r1, [sp]
   25974:	ldr	r1, [pc, #952]	; 25d34 <__flatcc_fb_gen_c_json_printer@@Base+0x16b4>
   25978:	ldr	r4, [pc, #952]	; 25d38 <__flatcc_fb_gen_c_json_printer@@Base+0x16b8>
   2597c:	add	r4, pc, r4
   25980:	add	r1, pc, r1
   25984:	mov	r2, r4
   25988:	bl	149b8 <fprintf@plt>
   2598c:	ldr	r0, [pc, #936]	; 25d3c <__flatcc_fb_gen_c_json_printer@@Base+0x16bc>
   25990:	ldr	r3, [pc, #936]	; 25d40 <__flatcc_fb_gen_c_json_printer@@Base+0x16c0>
   25994:	mov	r1, r4
   25998:	mov	r2, #251	; 0xfb
   2599c:	add	r0, pc, r0
   259a0:	add	r3, pc, r3
   259a4:	bl	14a78 <__assert_fail@plt>
   259a8:	strdeq	r1, [r3], -sl
   259ac:	ldr	r0, [pc, #820]	; 25ce8 <__flatcc_fb_gen_c_json_printer@@Base+0x1668>
   259b0:	mov	r3, #157	; 0x9d
   259b4:	ldr	r0, [pc, r0]
   259b8:	ldr	r0, [r0]
   259bc:	ldr	r1, [pc, #808]	; 25cec <__flatcc_fb_gen_c_json_printer@@Base+0x166c>
   259c0:	add	r1, pc, r1
   259c4:	str	r1, [sp]
   259c8:	ldr	r1, [pc, #800]	; 25cf0 <__flatcc_fb_gen_c_json_printer@@Base+0x1670>
   259cc:	ldr	r4, [pc, #800]	; 25cf4 <__flatcc_fb_gen_c_json_printer@@Base+0x1674>
   259d0:	add	r4, pc, r4
   259d4:	add	r1, pc, r1
   259d8:	mov	r2, r4
   259dc:	bl	149b8 <fprintf@plt>
   259e0:	ldr	r0, [pc, #784]	; 25cf8 <__flatcc_fb_gen_c_json_printer@@Base+0x1678>
   259e4:	ldr	r3, [pc, #784]	; 25cfc <__flatcc_fb_gen_c_json_printer@@Base+0x167c>
   259e8:	mov	r1, r4
   259ec:	mov	r2, #157	; 0x9d
   259f0:	add	r0, pc, r0
   259f4:	add	r3, pc, r3
   259f8:	bl	14a78 <__assert_fail@plt>
   259fc:	andeq	r1, r3, r4, rrx
   25a00:	andeq	r2, r2, ip, asr #8
   25a04:	andeq	r1, r3, lr, asr #32
   25a08:	andeq	r2, r2, fp, lsr #8
   25a0c:	andeq	r1, r3, r4, lsr r0
   25a10:	andeq	r2, r2, r5, lsr #8
   25a14:	andeq	r1, r3, sp, lsl r0
   25a18:	andeq	r2, r2, lr, ror #7
   25a1c:	ldr	r0, [pc, #684]	; 25cd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1650>
   25a20:	mov	r3, #134	; 0x86
   25a24:	ldr	r0, [pc, r0]
   25a28:	ldr	r0, [r0]
   25a2c:	ldr	r1, [pc, #672]	; 25cd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1654>
   25a30:	add	r1, pc, r1
   25a34:	str	r1, [sp]
   25a38:	ldr	r1, [pc, #664]	; 25cd8 <__flatcc_fb_gen_c_json_printer@@Base+0x1658>
   25a3c:	ldr	r4, [pc, #664]	; 25cdc <__flatcc_fb_gen_c_json_printer@@Base+0x165c>
   25a40:	add	r4, pc, r4
   25a44:	add	r1, pc, r1
   25a48:	mov	r2, r4
   25a4c:	bl	149b8 <fprintf@plt>
   25a50:	ldr	r0, [pc, #648]	; 25ce0 <__flatcc_fb_gen_c_json_printer@@Base+0x1660>
   25a54:	ldr	r3, [pc, #648]	; 25ce4 <__flatcc_fb_gen_c_json_printer@@Base+0x1664>
   25a58:	mov	r1, r4
   25a5c:	mov	r2, #134	; 0x86
   25a60:	add	r0, pc, r0
   25a64:	add	r3, pc, r3
   25a68:	bl	14a78 <__assert_fail@plt>
   25a6c:	ldr	r0, [pc, #672]	; 25d14 <__flatcc_fb_gen_c_json_printer@@Base+0x1694>
   25a70:	mov	r3, #240	; 0xf0
   25a74:	ldr	r0, [pc, r0]
   25a78:	ldr	r0, [r0]
   25a7c:	ldr	r1, [pc, #660]	; 25d18 <__flatcc_fb_gen_c_json_printer@@Base+0x1698>
   25a80:	add	r1, pc, r1
   25a84:	str	r1, [sp]
   25a88:	ldr	r1, [pc, #652]	; 25d1c <__flatcc_fb_gen_c_json_printer@@Base+0x169c>
   25a8c:	ldr	r4, [pc, #652]	; 25d20 <__flatcc_fb_gen_c_json_printer@@Base+0x16a0>
   25a90:	add	r4, pc, r4
   25a94:	add	r1, pc, r1
   25a98:	mov	r2, r4
   25a9c:	bl	149b8 <fprintf@plt>
   25aa0:	ldr	r0, [pc, #636]	; 25d24 <__flatcc_fb_gen_c_json_printer@@Base+0x16a4>
   25aa4:	ldr	r3, [pc, #636]	; 25d28 <__flatcc_fb_gen_c_json_printer@@Base+0x16a8>
   25aa8:	mov	r1, r4
   25aac:	mov	r2, #240	; 0xf0
   25ab0:	add	r0, pc, r0
   25ab4:	add	r3, pc, r3
   25ab8:	bl	14a78 <__assert_fail@plt>
   25abc:	muleq	r3, sp, pc	; <UNPREDICTABLE>
   25ac0:	ldr	r0, [pc, #904]	; 25e50 <__flatcc_fb_gen_c_json_printer@@Base+0x17d0>
   25ac4:	mov	r3, #96	; 0x60
   25ac8:	ldr	r0, [pc, r0]
   25acc:	ldr	r0, [r0]
   25ad0:	ldr	r1, [pc, #892]	; 25e54 <__flatcc_fb_gen_c_json_printer@@Base+0x17d4>
   25ad4:	add	r1, pc, r1
   25ad8:	str	r1, [sp]
   25adc:	ldr	r1, [pc, #884]	; 25e58 <__flatcc_fb_gen_c_json_printer@@Base+0x17d8>
   25ae0:	ldr	r4, [pc, #884]	; 25e5c <__flatcc_fb_gen_c_json_printer@@Base+0x17dc>
   25ae4:	add	r4, pc, r4
   25ae8:	add	r1, pc, r1
   25aec:	mov	r2, r4
   25af0:	bl	149b8 <fprintf@plt>
   25af4:	ldr	r0, [pc, #868]	; 25e60 <__flatcc_fb_gen_c_json_printer@@Base+0x17e0>
   25af8:	ldr	r3, [pc, #868]	; 25e64 <__flatcc_fb_gen_c_json_printer@@Base+0x17e4>
   25afc:	mov	r1, r4
   25b00:	mov	r2, #96	; 0x60
   25b04:	add	r0, pc, r0
   25b08:	add	r3, pc, r3
   25b0c:	bl	14a78 <__assert_fail@plt>
   25b10:			; <UNDEFINED> instruction: 0x00030fb3
   25b14:			; <UNDEFINED> instruction: 0x00030fb2
   25b18:	andeq	r0, r3, r9, lsr #31
   25b1c:	ldr	r0, [pc, #748]	; 25e10 <__flatcc_fb_gen_c_json_printer@@Base+0x1790>
   25b20:	movw	r3, #543	; 0x21f
   25b24:	ldr	r0, [pc, r0]
   25b28:	ldr	r0, [r0]
   25b2c:	ldr	r1, [pc, #736]	; 25e14 <__flatcc_fb_gen_c_json_printer@@Base+0x1794>
   25b30:	add	r1, pc, r1
   25b34:	str	r1, [sp]
   25b38:	ldr	r1, [pc, #728]	; 25e18 <__flatcc_fb_gen_c_json_printer@@Base+0x1798>
   25b3c:	ldr	r4, [pc, #728]	; 25e1c <__flatcc_fb_gen_c_json_printer@@Base+0x179c>
   25b40:	add	r4, pc, r4
   25b44:	add	r1, pc, r1
   25b48:	mov	r2, r4
   25b4c:	bl	149b8 <fprintf@plt>
   25b50:	ldr	r0, [pc, #712]	; 25e20 <__flatcc_fb_gen_c_json_printer@@Base+0x17a0>
   25b54:	ldr	r3, [pc, #712]	; 25e24 <__flatcc_fb_gen_c_json_printer@@Base+0x17a4>
   25b58:	mov	r1, r4
   25b5c:	movw	r2, #543	; 0x21f
   25b60:	add	r0, pc, r0
   25b64:	add	r3, pc, r3
   25b68:	bl	14a78 <__assert_fail@plt>
   25b6c:	andeq	r0, r3, ip, lsr #31
   25b70:	strdeq	r0, [r3], -r5
   25b74:	andeq	r1, r3, sp, lsl r0
   25b78:	ldr	r0, [pc, #516]	; 25d84 <__flatcc_fb_gen_c_json_printer@@Base+0x1704>
   25b7c:	movw	r3, #406	; 0x196
   25b80:	ldr	r0, [pc, r0]
   25b84:	ldr	r0, [r0]
   25b88:	ldr	r1, [pc, #504]	; 25d88 <__flatcc_fb_gen_c_json_printer@@Base+0x1708>
   25b8c:	add	r1, pc, r1
   25b90:	str	r1, [sp]
   25b94:	ldr	r1, [pc, #496]	; 25d8c <__flatcc_fb_gen_c_json_printer@@Base+0x170c>
   25b98:	ldr	r4, [pc, #496]	; 25d90 <__flatcc_fb_gen_c_json_printer@@Base+0x1710>
   25b9c:	add	r4, pc, r4
   25ba0:	add	r1, pc, r1
   25ba4:	mov	r2, r4
   25ba8:	bl	149b8 <fprintf@plt>
   25bac:	ldr	r0, [pc, #480]	; 25d94 <__flatcc_fb_gen_c_json_printer@@Base+0x1714>
   25bb0:	ldr	r3, [pc, #480]	; 25d98 <__flatcc_fb_gen_c_json_printer@@Base+0x1718>
   25bb4:	mov	r1, r4
   25bb8:	movw	r2, #406	; 0x196
   25bbc:	add	r0, pc, r0
   25bc0:	add	r3, pc, r3
   25bc4:	bl	14a78 <__assert_fail@plt>
   25bc8:	ldr	r0, [pc, #532]	; 25de4 <__flatcc_fb_gen_c_json_printer@@Base+0x1764>
   25bcc:	mov	r3, #504	; 0x1f8
   25bd0:	ldr	r0, [pc, r0]
   25bd4:	ldr	r0, [r0]
   25bd8:	ldr	r1, [pc, #520]	; 25de8 <__flatcc_fb_gen_c_json_printer@@Base+0x1768>
   25bdc:	add	r1, pc, r1
   25be0:	str	r1, [sp]
   25be4:	ldr	r1, [pc, #512]	; 25dec <__flatcc_fb_gen_c_json_printer@@Base+0x176c>
   25be8:	ldr	r4, [pc, #512]	; 25df0 <__flatcc_fb_gen_c_json_printer@@Base+0x1770>
   25bec:	add	r4, pc, r4
   25bf0:	add	r1, pc, r1
   25bf4:	mov	r2, r4
   25bf8:	bl	149b8 <fprintf@plt>
   25bfc:	ldr	r0, [pc, #496]	; 25df4 <__flatcc_fb_gen_c_json_printer@@Base+0x1774>
   25c00:	ldr	r3, [pc, #496]	; 25df8 <__flatcc_fb_gen_c_json_printer@@Base+0x1778>
   25c04:	mov	r1, r4
   25c08:	mov	r2, #504	; 0x1f8
   25c0c:	add	r0, pc, r0
   25c10:	add	r3, pc, r3
   25c14:	bl	14a78 <__assert_fail@plt>
   25c18:	andeq	r0, r3, r9, asr #30
   25c1c:	andeq	fp, r1, sl, lsr #23
   25c20:	andeq	r1, r3, r0, ror #30
   25c24:	ldr	r0, [pc, #404]	; 25dc0 <__flatcc_fb_gen_c_json_printer@@Base+0x1740>
   25c28:	movw	r3, #483	; 0x1e3
   25c2c:	ldr	r0, [pc, r0]
   25c30:	ldr	r0, [r0]
   25c34:	ldr	r1, [pc, #392]	; 25dc4 <__flatcc_fb_gen_c_json_printer@@Base+0x1744>
   25c38:	add	r1, pc, r1
   25c3c:	str	r1, [sp]
   25c40:	ldr	r1, [pc, #384]	; 25dc8 <__flatcc_fb_gen_c_json_printer@@Base+0x1748>
   25c44:	ldr	r4, [pc, #384]	; 25dcc <__flatcc_fb_gen_c_json_printer@@Base+0x174c>
   25c48:	add	r4, pc, r4
   25c4c:	add	r1, pc, r1
   25c50:	mov	r2, r4
   25c54:	bl	149b8 <fprintf@plt>
   25c58:	ldr	r0, [pc, #368]	; 25dd0 <__flatcc_fb_gen_c_json_printer@@Base+0x1750>
   25c5c:	ldr	r3, [pc, #368]	; 25dd4 <__flatcc_fb_gen_c_json_printer@@Base+0x1754>
   25c60:	mov	r1, r4
   25c64:	movw	r2, #483	; 0x1e3
   25c68:	add	r0, pc, r0
   25c6c:	add	r3, pc, r3
   25c70:	bl	14a78 <__assert_fail@plt>
   25c74:	andeq	r1, r3, lr, lsr r4
   25c78:	ldrdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   25c7c:	ldr	r0, [pc, #484]	; 25e68 <__flatcc_fb_gen_c_json_printer@@Base+0x17e8>
   25c80:	movw	r3, #361	; 0x169
   25c84:	ldr	r0, [pc, r0]
   25c88:	ldr	r0, [r0]
   25c8c:	ldr	r1, [pc, #472]	; 25e6c <__flatcc_fb_gen_c_json_printer@@Base+0x17ec>
   25c90:	add	r1, pc, r1
   25c94:	str	r1, [sp]
   25c98:	ldr	r1, [pc, #464]	; 25e70 <__flatcc_fb_gen_c_json_printer@@Base+0x17f0>
   25c9c:	ldr	r4, [pc, #464]	; 25e74 <__flatcc_fb_gen_c_json_printer@@Base+0x17f4>
   25ca0:	add	r4, pc, r4
   25ca4:	add	r1, pc, r1
   25ca8:	mov	r2, r4
   25cac:	bl	149b8 <fprintf@plt>
   25cb0:	ldr	r0, [pc, #448]	; 25e78 <__flatcc_fb_gen_c_json_printer@@Base+0x17f8>
   25cb4:	ldr	r3, [pc, #448]	; 25e7c <__flatcc_fb_gen_c_json_printer@@Base+0x17fc>
   25cb8:	mov	r1, r4
   25cbc:	movw	r2, #361	; 0x169
   25cc0:	add	r0, pc, r0
   25cc4:	add	r3, pc, r3
   25cc8:	bl	14a78 <__assert_fail@plt>
   25ccc:	andeq	r1, r3, r1, lsr r1
   25cd0:	andeq	r6, r4, r8, ror r6
   25cd4:	andeq	r0, r3, r3, asr r2
   25cd8:	andeq	sl, r1, r2, lsr #25
   25cdc:	ldrdeq	r0, [r3], -r6
   25ce0:	andeq	fp, r2, lr, asr #22
   25ce4:	andeq	r0, r3, r9, asr r2
   25ce8:	andeq	r6, r4, r8, ror #13
   25cec:	andeq	r0, r3, r3, asr #5
   25cf0:	andeq	sl, r1, r2, lsl sp
   25cf4:	andeq	r0, r3, r6, asr #4
   25cf8:			; <UNDEFINED> instruction: 0x0002bbbe
   25cfc:	andeq	r0, r3, r9, asr #5
   25d00:	andeq	r1, r3, r8, lsl #3
   25d04:	muleq	r2, pc, r7	; <UNPREDICTABLE>
   25d08:	andeq	r1, r3, fp, ror r1
   25d0c:	andeq	r1, r3, sl, lsl #3
   25d10:	andeq	r1, r3, r6, asr #3
   25d14:	andeq	r6, r4, r8, lsr #12
   25d18:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   25d1c:	andeq	sl, r1, r2, asr ip
   25d20:	andeq	r0, r3, r6, lsl #3
   25d24:	strdeq	fp, [r2], -lr
   25d28:	andeq	r0, r3, r3, ror #11
   25d2c:	andeq	r6, r4, ip, lsr r7
   25d30:	andeq	r0, r3, r4, lsl #14
   25d34:	andeq	sl, r1, r6, ror #26
   25d38:	muleq	r3, sl, r2
   25d3c:	andeq	fp, r2, r2, lsl ip
   25d40:	strdeq	r0, [r3], -r7
   25d44:	andeq	r1, r3, r2, asr #5
   25d48:	andeq	sp, r2, pc, ror r6
   25d4c:	andeq	r1, r3, r3, asr r2
   25d50:	andeq	r6, r4, r8, lsr pc
   25d54:	andeq	r1, r3, lr, lsl r2
   25d58:			; <UNDEFINED> instruction: 0x00046eb0
   25d5c:	ldrdeq	r1, [r3], -pc	; <UNPREDICTABLE>
   25d60:	andeq	r1, r3, r5, lsl #4
   25d64:	andeq	r1, r3, r0, ror #22
   25d68:	andeq	r1, r3, sl, lsr #4
   25d6c:	andeq	r1, r3, r7, lsr #5
   25d70:	strdeq	r1, [r3], -sp
   25d74:	andeq	r6, r4, r4, asr #23
   25d78:	andeq	r1, r3, fp, asr #2
   25d7c:	andeq	r0, r3, fp, lsl #30
   25d80:	andeq	r0, r3, r9, ror lr
   25d84:	andeq	r6, r4, ip, lsl r5
   25d88:			; <UNDEFINED> instruction: 0x0002eabf
   25d8c:	andeq	sl, r1, r6, asr #22
   25d90:	andeq	r0, r3, sl, ror r0
   25d94:	strdeq	fp, [r2], -r2
   25d98:	andeq	r0, r3, fp, ror #15
   25d9c:	strdeq	r1, [r3], -r6
   25da0:	andeq	r1, r3, r9, asr #1
   25da4:	andeq	r1, r3, pc, lsr #2
   25da8:	andeq	r6, r4, r8, lsl #15
   25dac:	strdeq	r0, [r3], -fp
   25db0:	strdeq	r1, [r3], -r0
   25db4:	andeq	r1, r3, r6, asr r4
   25db8:	andeq	r6, r4, r8, lsr r8
   25dbc:	andeq	r0, r3, r8, lsr #31
   25dc0:	andeq	r6, r4, r0, ror r4
   25dc4:	andeq	r0, r3, r5, ror #22
   25dc8:	muleq	r1, sl, sl
   25dcc:	andeq	pc, r2, lr, asr #31
   25dd0:	andeq	fp, r2, r6, asr #18
   25dd4:	andeq	r0, r3, pc, lsr r7
   25dd8:	muleq	r3, r1, r1
   25ddc:	andeq	r1, r3, sp, lsr r4
   25de0:	andeq	r1, r3, fp, ror #4
   25de4:	andeq	r6, r4, ip, asr #9
   25de8:	andeq	r0, r3, fp, lsl #26
   25dec:	strdeq	sl, [r1], -r6
   25df0:	andeq	r0, r3, sl, lsr #32
   25df4:	andeq	fp, r2, r2, lsr #19
   25df8:	muleq	r3, fp, r7
   25dfc:	andeq	r1, r3, r1, ror #12
   25e00:	andeq	r6, r4, r8, lsr #18
   25e04:	andeq	r1, r3, lr, ror #7
   25e08:	andeq	r1, r3, r2, asr #9
   25e0c:	andeq	r1, r3, r7, ror #10
   25e10:	andeq	r6, r4, r8, ror r5
   25e14:	andeq	r0, r3, r2, lsl #31
   25e18:	andeq	sl, r1, r2, lsr #23
   25e1c:	ldrdeq	r0, [r3], -r6
   25e20:	andeq	fp, r2, lr, asr #20
   25e24:	andeq	r0, r3, r7, asr #16
   25e28:	andeq	r1, r3, r7, lsl r0
   25e2c:	strdeq	r1, [r3], -fp
   25e30:	andeq	r1, r3, pc, lsl #6
   25e34:	andeq	r1, r3, r0, ror #6
   25e38:	andeq	r1, r3, r2, lsr #7
   25e3c:	andeq	r1, r3, r0, lsr r4
   25e40:	andeq	r1, r3, r6, lsl #8
   25e44:	ldrdeq	r1, [r3], -r4
   25e48:	andeq	r0, r2, sl, ror ip
   25e4c:	andeq	r1, r3, sl, lsr #7
   25e50:	ldrdeq	r6, [r4], -r4
   25e54:	andeq	r1, r2, r1, lsr #8
   25e58:	strdeq	sl, [r1], -lr
   25e5c:			; <UNDEFINED> instruction: 0x000213b1
   25e60:	andeq	fp, r2, sl, lsr #21
   25e64:	andeq	r1, r2, sp, lsl sp
   25e68:	andeq	r6, r4, r8, lsl r4
   25e6c:	strdeq	r0, [r3], -r1
   25e70:	andeq	sl, r1, r2, asr #20
   25e74:	andeq	pc, r2, r6, ror pc	; <UNPREDICTABLE>
   25e78:	andeq	fp, r2, lr, ror #17
   25e7c:	andeq	r0, r3, r7, ror #13
   25e80:	andeq	r1, r3, fp, lsl r0

00025e84 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   25e84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   25e88:	add	fp, sp, #24
   25e8c:	sub	sp, sp, #232	; 0xe8
   25e90:	mov	r5, sp
   25e94:	mov	r7, r0
   25e98:	mov	r8, r3
   25e9c:	mov	r4, r2
   25ea0:	mov	r6, r1
   25ea4:	mov	r0, r5
   25ea8:	bl	37718 <flatcc_builder_init@@Base>
   25eac:	mov	r0, r5
   25eb0:	mov	r1, r7
   25eb4:	mov	r2, r6
   25eb8:	bl	25efc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   25ebc:	ldr	r2, [r8]
   25ec0:	mov	r0, r5
   25ec4:	mov	r1, r4
   25ec8:	bl	3c07c <flatcc_builder_copy_buffer@@Base>
   25ecc:	cmp	r0, #0
   25ed0:	movne	r0, r4
   25ed4:	blne	26cec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe68>
   25ed8:	mov	r5, sp
   25edc:	mov	r0, r5
   25ee0:	bl	3bfa4 <flatcc_builder_get_buffer_size@@Base>
   25ee4:	str	r0, [r8]
   25ee8:	mov	r0, r5
   25eec:	bl	37a80 <flatcc_builder_clear@@Base>
   25ef0:	mov	r0, r4
   25ef4:	sub	sp, fp, #24
   25ef8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   25efc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25f00:	add	fp, sp, #28
   25f04:	sub	sp, sp, #4
   25f08:	vpush	{d8}
   25f0c:	sub	sp, sp, #96	; 0x60
   25f10:	ldr	r3, [r1, #184]	; 0xb8
   25f14:	add	r6, sp, #48	; 0x30
   25f18:	str	r1, [sp, #40]	; 0x28
   25f1c:	vmov.i32	q8, #0	; 0x00000000
   25f20:	mov	r5, r0
   25f24:	ldr	r0, [r2, #60]	; 0x3c
   25f28:	str	r2, [sp, #8]
   25f2c:	add	r1, r6, #20
   25f30:	vst1.32	{d16-d17}, [r1]
   25f34:	orr	r1, r6, #4
   25f38:	vst1.32	{d16-d17}, [r1]
   25f3c:	mov	r1, #0
   25f40:	str	r1, [sp, #84]	; 0x54
   25f44:	str	r2, [sp, #88]	; 0x58
   25f48:	str	r3, [sp, #48]	; 0x30
   25f4c:	mov	r2, r6
   25f50:	ldr	r1, [pc, #3352]	; 26c70 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdec>
   25f54:	str	r0, [sp, #44]	; 0x2c
   25f58:	add	r1, pc, r1
   25f5c:	bl	29ca0 <fb_scope_table_visit@@Base>
   25f60:	ldr	r9, [sp, #52]	; 0x34
   25f64:	mov	r1, #8
   25f68:	mov	r0, r9
   25f6c:	bl	148c8 <calloc@plt>
   25f70:	str	r0, [sp, #64]	; 0x40
   25f74:	mov	r7, r0
   25f78:	mov	r1, #8
   25f7c:	ldr	sl, [sp, #56]	; 0x38
   25f80:	mov	r0, sl
   25f84:	bl	148c8 <calloc@plt>
   25f88:	str	r0, [sp, #68]	; 0x44
   25f8c:	mov	r4, r0
   25f90:	ldr	r8, [sp, #60]	; 0x3c
   25f94:	mov	r0, r8
   25f98:	bl	14964 <malloc@plt>
   25f9c:	cmp	r9, #1
   25fa0:	str	r0, [sp, #72]	; 0x48
   25fa4:	str	r7, [sp, #76]	; 0x4c
   25fa8:	str	r4, [sp, #80]	; 0x50
   25fac:	str	r0, [sp, #84]	; 0x54
   25fb0:	blt	25fbc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x138>
   25fb4:	cmp	r7, #0
   25fb8:	beq	25ff0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16c>
   25fbc:	cmp	sl, #1
   25fc0:	blt	25fcc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x148>
   25fc4:	cmp	r4, #0
   25fc8:	beq	25fdc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x158>
   25fcc:	cmp	r8, #0
   25fd0:	beq	26040 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1bc>
   25fd4:	cmp	r0, #0
   25fd8:	bne	26040 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1bc>
   25fdc:	cmp	r7, #0
   25fe0:	beq	25ff0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16c>
   25fe4:	mov	r0, r7
   25fe8:	bl	148f8 <free@plt>
   25fec:	ldr	r4, [sp, #68]	; 0x44
   25ff0:	cmp	r4, #0
   25ff4:	beq	26000 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x17c>
   25ff8:	mov	r0, r4
   25ffc:	bl	148f8 <free@plt>
   26000:	ldr	r0, [sp, #72]	; 0x48
   26004:	cmp	r0, #0
   26008:	beq	26010 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18c>
   2600c:	bl	148f8 <free@plt>
   26010:	vmov.i32	q8, #0	; 0x00000000
   26014:	mov	r0, #28
   26018:	add	r1, r6, #16
   2601c:	vst1.64	{d16-d17}, [r6], r0
   26020:	vst1.32	{d16-d17}, [r6]
   26024:	vst1.64	{d16-d17}, [r1]
   26028:	mvn	r4, #0
   2602c:	mov	r0, r4
   26030:	sub	sp, fp, #40	; 0x28
   26034:	vpop	{d8}
   26038:	add	sp, sp, #4
   2603c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26040:	ldr	r1, [pc, #3116]	; 26c74 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdf0>
   26044:	ldr	r0, [sp, #44]	; 0x2c
   26048:	add	r2, sp, #48	; 0x30
   2604c:	add	r1, pc, r1
   26050:	bl	29ca0 <fb_scope_table_visit@@Base>
   26054:	ldr	r4, [sp, #52]	; 0x34
   26058:	ldr	r6, [sp, #64]	; 0x40
   2605c:	ldr	r3, [pc, #3092]	; 26c78 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdf4>
   26060:	mov	r2, #8
   26064:	add	r3, pc, r3
   26068:	mov	r0, r6
   2606c:	mov	r1, r4
   26070:	bl	14a3c <qsort@plt>
   26074:	cmp	r4, #1
   26078:	blt	26094 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x210>
   2607c:	mov	r0, #0
   26080:	ldr	r1, [r6, r0, lsl #3]
   26084:	str	r0, [r1, #124]	; 0x7c
   26088:	add	r0, r0, #1
   2608c:	cmp	r4, r0
   26090:	bne	26080 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1fc>
   26094:	ldr	r4, [sp, #56]	; 0x38
   26098:	ldr	r6, [sp, #68]	; 0x44
   2609c:	ldr	r3, [pc, #3032]	; 26c7c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdf8>
   260a0:	mov	r2, #8
   260a4:	add	r3, pc, r3
   260a8:	mov	r0, r6
   260ac:	mov	r1, r4
   260b0:	bl	14a3c <qsort@plt>
   260b4:	cmp	r4, #1
   260b8:	blt	260d4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x250>
   260bc:	mov	r0, #0
   260c0:	ldr	r1, [r6, r0, lsl #3]
   260c4:	str	r0, [r1, #124]	; 0x7c
   260c8:	add	r0, r0, #1
   260cc:	cmp	r4, r0
   260d0:	bne	260c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x23c>
   260d4:	ldr	r0, [sp, #52]	; 0x34
   260d8:	cmp	r0, #1
   260dc:	blt	26140 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2bc>
   260e0:	lsl	r0, r0, #2
   260e4:	bl	14964 <malloc@plt>
   260e8:	cmp	r0, #0
   260ec:	bne	26144 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2c0>
   260f0:	ldr	r0, [sp, #64]	; 0x40
   260f4:	cmp	r0, #0
   260f8:	beq	26100 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x27c>
   260fc:	bl	148f8 <free@plt>
   26100:	ldr	r0, [sp, #68]	; 0x44
   26104:	cmp	r0, #0
   26108:	beq	26110 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x28c>
   2610c:	bl	148f8 <free@plt>
   26110:	ldr	r0, [sp, #72]	; 0x48
   26114:	cmp	r0, #0
   26118:	beq	26120 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x29c>
   2611c:	bl	148f8 <free@plt>
   26120:	add	r1, sp, #48	; 0x30
   26124:	vmov.i32	q8, #0	; 0x00000000
   26128:	mov	r0, #28
   2612c:	mov	r2, r1
   26130:	add	r1, r1, #16
   26134:	vst1.64	{d16-d17}, [r2], r0
   26138:	vst1.32	{d16-d17}, [r2]
   2613c:	b	26024 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a0>
   26140:	mov	r0, #0
   26144:	str	r0, [sp, #20]
   26148:	ldr	r0, [sp, #40]	; 0x28
   2614c:	mov	r2, #0
   26150:	ldr	r0, [r0, #188]	; 0xbc
   26154:	ldr	r1, [pc, #2852]	; 26c80 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdfc>
   26158:	cmp	r0, #0
   2615c:	add	r1, pc, r1
   26160:	mov	r0, r5
   26164:	moveq	r3, #0
   26168:	movne	r3, #2
   2616c:	bl	384bc <flatcc_builder_start_buffer@@Base>
   26170:	cmp	r0, #0
   26174:	bne	26184 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x300>
   26178:	mov	r0, r5
   2617c:	mov	r1, #5
   26180:	bl	39a94 <flatcc_builder_start_table@@Base>
   26184:	ldr	r1, [sp, #8]
   26188:	ldrh	r0, [r1, #16]
   2618c:	cmp	r0, #2
   26190:	bne	261d4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x350>
   26194:	ldr	r0, [sp, #8]
   26198:	ldrd	r2, [r0, #8]
   2619c:	mov	r0, r5
   261a0:	mov	r1, r2
   261a4:	mov	r2, r3
   261a8:	bl	3bbfc <flatcc_builder_create_string@@Base>
   261ac:	ldr	r1, [sp, #8]
   261b0:	cmp	r0, #0
   261b4:	beq	261d4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x350>
   261b8:	mov	r4, r0
   261bc:	mov	r0, r5
   261c0:	mov	r1, #2
   261c4:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   261c8:	ldr	r1, [sp, #8]
   261cc:	cmp	r0, #0
   261d0:	strne	r4, [r0]
   261d4:	ldrh	r0, [r1, #32]
   261d8:	cmp	r0, #2
   261dc:	bne	26218 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x394>
   261e0:	ldr	r0, [sp, #8]
   261e4:	ldrd	r2, [r0, #24]
   261e8:	mov	r0, r5
   261ec:	mov	r1, r2
   261f0:	mov	r2, r3
   261f4:	bl	3bbfc <flatcc_builder_create_string@@Base>
   261f8:	cmp	r0, #0
   261fc:	beq	26218 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x394>
   26200:	mov	r4, r0
   26204:	mov	r0, r5
   26208:	mov	r1, #3
   2620c:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26210:	cmp	r0, #0
   26214:	strne	r4, [r0]
   26218:	ldr	r0, [sp, #52]	; 0x34
   2621c:	str	r5, [sp, #44]	; 0x2c
   26220:	cmp	r0, #1
   26224:	str	r0, [sp, #16]
   26228:	blt	26814 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x990>
   2622c:	ldr	r0, [sp, #64]	; 0x40
   26230:	mov	r1, #0
   26234:	str	r0, [sp, #12]
   26238:	ldr	r4, [sp, #12]
   2623c:	str	r1, [sp, #24]
   26240:	mov	r0, r5
   26244:	ldr	r6, [r4, r1, lsl #3]!
   26248:	mov	r1, #5
   2624c:	bl	39a94 <flatcc_builder_start_table@@Base>
   26250:	ldr	r1, [r4, #4]
   26254:	mov	r0, r5
   26258:	bl	3bd1c <flatcc_builder_create_string_str@@Base>
   2625c:	cmp	r0, #0
   26260:	beq	2627c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f8>
   26264:	mov	r7, r0
   26268:	mov	r0, r5
   2626c:	mov	r1, #0
   26270:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26274:	cmp	r0, #0
   26278:	strne	r7, [r0]
   2627c:	mov	r0, r5
   26280:	bl	39614 <flatcc_builder_start_offset_vector@@Base>
   26284:	ldr	sl, [r6, #20]
   26288:	str	r6, [sp, #28]
   2628c:	cmp	sl, #0
   26290:	beq	26728 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8a4>
   26294:	mov	r7, #0
   26298:	mov	r4, sl
   2629c:	ldrh	r0, [r4, #24]!
   262a0:	ldrh	r6, [r4, #48]	; 0x30
   262a4:	sub	r8, r4, #8
   262a8:	cmp	r0, #14
   262ac:	ubfx	r9, r6, #2, #1
   262b0:	ubfx	r1, r6, #8, #1
   262b4:	str	r1, [sp, #32]
   262b8:	str	r9, [sp, #40]	; 0x28
   262bc:	bne	26424 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
   262c0:	ldr	r0, [r8]
   262c4:	ldrh	r0, [r0, #8]
   262c8:	cmp	r0, #4
   262cc:	bne	26424 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
   262d0:	mov	r0, r5
   262d4:	mov	r1, #9
   262d8:	str	r8, [sp, #36]	; 0x24
   262dc:	mov	r8, r7
   262e0:	bl	39a94 <flatcc_builder_start_table@@Base>
   262e4:	mov	r0, r5
   262e8:	bl	398e0 <flatcc_builder_start_string@@Base>
   262ec:	ldr	r0, [sl, #4]
   262f0:	ldm	r0, {r1, r2}
   262f4:	mov	r0, r5
   262f8:	bl	391c8 <flatcc_builder_append_string@@Base>
   262fc:	ldr	r1, [pc, #2432]	; 26c84 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe00>
   26300:	mov	r0, r5
   26304:	mov	r2, #5
   26308:	add	r1, pc, r1
   2630c:	bl	391c8 <flatcc_builder_append_string@@Base>
   26310:	mov	r0, r5
   26314:	bl	3bd84 <flatcc_builder_end_string@@Base>
   26318:	cmp	r0, #0
   2631c:	beq	26338 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b4>
   26320:	mov	r7, r0
   26324:	mov	r0, r5
   26328:	mov	r1, #0
   2632c:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26330:	cmp	r0, #0
   26334:	strne	r7, [r0]
   26338:	mov	r0, r5
   2633c:	mov	r1, #3
   26340:	bl	39a94 <flatcc_builder_start_table@@Base>
   26344:	cmp	r0, #0
   26348:	beq	26544 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6c0>
   2634c:	mov	r5, sl
   26350:	mov	r1, #2
   26354:	ldrh	r0, [r5, #96]!	; 0x60
   26358:	add	r7, r1, r0, lsl #1
   2635c:	movw	r0, #65534	; 0xfffe
   26360:	tst	r7, r0
   26364:	beq	26384 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x500>
   26368:	ldr	r0, [sp, #44]	; 0x2c
   2636c:	mov	r1, #3
   26370:	mov	r2, #2
   26374:	mov	r3, #2
   26378:	bl	3af38 <flatcc_builder_table_add@@Base>
   2637c:	cmp	r0, #0
   26380:	strhne	r7, [r0]
   26384:	ldrh	r0, [r5]
   26388:	mov	r7, r8
   2638c:	sub	r5, r0, #1
   26390:	movw	r0, #65535	; 0xffff
   26394:	tst	r5, r0
   26398:	beq	263b8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x534>
   2639c:	ldr	r0, [sp, #44]	; 0x2c
   263a0:	mov	r1, #2
   263a4:	mov	r2, #2
   263a8:	mov	r3, #2
   263ac:	bl	3af38 <flatcc_builder_table_add@@Base>
   263b0:	cmp	r0, #0
   263b4:	strhne	r5, [r0]
   263b8:	cmp	r9, #0
   263bc:	ldr	r9, [sp, #44]	; 0x2c
   263c0:	ldr	r8, [sp, #36]	; 0x24
   263c4:	beq	263e8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x564>
   263c8:	mov	r0, r9
   263cc:	mov	r1, #6
   263d0:	mov	r2, #1
   263d4:	mov	r3, #1
   263d8:	bl	3af38 <flatcc_builder_table_add@@Base>
   263dc:	cmp	r0, #0
   263e0:	ldrne	r1, [sp, #40]	; 0x28
   263e4:	strbne	r1, [r0]
   263e8:	ldr	r1, [pc, #2204]	; 26c8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe08>
   263ec:	mov	r0, r9
   263f0:	mov	r2, #2
   263f4:	add	r1, pc, r1
   263f8:	bl	3a428 <flatcc_builder_check_required@@Base>
   263fc:	cmp	r0, #0
   26400:	beq	26bb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd2c>
   26404:	mov	r0, r9
   26408:	mov	r5, r9
   2640c:	bl	3a4c4 <flatcc_builder_end_table@@Base>
   26410:	cmp	r0, #0
   26414:	beq	26424 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
   26418:	mov	r1, r0
   2641c:	mov	r0, r5
   26420:	bl	38e5c <flatcc_builder_offset_vector_push@@Base>
   26424:	uxtb	r0, r7
   26428:	mov	r1, #9
   2642c:	str	r7, [sp, #36]	; 0x24
   26430:	clz	r9, r0
   26434:	mov	r0, r5
   26438:	bl	39a94 <flatcc_builder_start_table@@Base>
   2643c:	ldr	r0, [sl, #4]
   26440:	ldm	r0, {r1, r2}
   26444:	mov	r0, r5
   26448:	bl	3bbfc <flatcc_builder_create_string@@Base>
   2644c:	cmp	r0, #0
   26450:	beq	2646c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5e8>
   26454:	mov	r7, r0
   26458:	mov	r0, r5
   2645c:	mov	r1, #0
   26460:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26464:	cmp	r0, #0
   26468:	strne	r7, [r0]
   2646c:	ldrd	r2, [r8]
   26470:	ldr	r1, [r4, #4]
   26474:	ldr	r4, [r4]
   26478:	mov	r0, r5
   2647c:	lsr	r5, r9, #5
   26480:	and	r6, r6, #128	; 0x80
   26484:	str	r4, [sp]
   26488:	str	r1, [sp, #4]
   2648c:	bl	2737c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
   26490:	cmp	r0, #0
   26494:	beq	264b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x62c>
   26498:	mov	r7, r0
   2649c:	ldr	r0, [sp, #44]	; 0x2c
   264a0:	mov	r1, #1
   264a4:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   264a8:	cmp	r0, #0
   264ac:	strne	r7, [r0]
   264b0:	ldr	r0, [sp, #28]
   264b4:	and	r4, r5, r6, lsr #7
   264b8:	ldrh	r0, [r0, #8]
   264bc:	cmp	r0, #1
   264c0:	beq	26514 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x690>
   264c4:	ldr	r7, [sp, #36]	; 0x24
   264c8:	cmp	r0, #0
   264cc:	bne	266b4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x830>
   264d0:	ldrh	r0, [sl, #56]	; 0x38
   264d4:	sub	r1, r0, #3
   264d8:	ldr	r0, [sp, #44]	; 0x2c
   264dc:	cmp	r1, #3
   264e0:	bhi	26604 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x780>
   264e4:	add	r2, pc, #8
   264e8:	add	r3, sl, #48	; 0x30
   264ec:	ldr	r1, [r2, r1, lsl #2]
   264f0:	add	pc, r2, r1
   264f4:	strheq	r0, [r0], -ip
   264f8:	andeq	r0, r0, r0, lsl r0
   264fc:	andeq	r0, r0, r0, lsl r0
   26500:	andeq	r0, r0, r8, ror #1
   26504:	ldrd	r8, [r3]
   26508:	orrs	r1, r8, r9
   2650c:	bne	265ec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x768>
   26510:	b	26604 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x780>
   26514:	ldrh	r5, [sl, #80]	; 0x50
   26518:	ldr	r7, [sp, #36]	; 0x24
   2651c:	cmp	r5, #0
   26520:	beq	266b4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x830>
   26524:	ldr	r0, [sp, #44]	; 0x2c
   26528:	mov	r1, #3
   2652c:	mov	r2, #2
   26530:	mov	r3, #2
   26534:	bl	3af38 <flatcc_builder_table_add@@Base>
   26538:	cmp	r0, #0
   2653c:	strhne	r5, [r0]
   26540:	b	266b4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x830>
   26544:	mov	r0, r5
   26548:	mov	r1, #0
   2654c:	mov	r2, #1
   26550:	mov	r3, #1
   26554:	bl	3af38 <flatcc_builder_table_add@@Base>
   26558:	cmp	r0, #0
   2655c:	beq	2634c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4c8>
   26560:	mov	r1, #1
   26564:	mov	r2, #0
   26568:	strb	r1, [r0]
   2656c:	mov	r0, r5
   26570:	ldr	r1, [pc, #1808]	; 26c88 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe04>
   26574:	add	r1, pc, r1
   26578:	bl	3a428 <flatcc_builder_check_required@@Base>
   2657c:	cmp	r0, #0
   26580:	beq	26bf0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd6c>
   26584:	mov	r0, r5
   26588:	bl	3a4c4 <flatcc_builder_end_table@@Base>
   2658c:	cmp	r0, #0
   26590:	beq	2634c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4c8>
   26594:	mov	r7, r0
   26598:	mov	r0, r5
   2659c:	mov	r1, #1
   265a0:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   265a4:	cmp	r0, #0
   265a8:	strne	r7, [r0]
   265ac:	b	2634c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4c8>
   265b0:	vldr	d8, [r3]
   265b4:	vcmp.f64	d8, #0.0
   265b8:	vmrs	APSR_nzcv, fpscr
   265bc:	beq	26604 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x780>
   265c0:	mov	r1, #5
   265c4:	mov	r2, #8
   265c8:	mov	r3, #8
   265cc:	bl	3af38 <flatcc_builder_table_add@@Base>
   265d0:	cmp	r0, #0
   265d4:	vstrne	d8, [r0]
   265d8:	b	26604 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x780>
   265dc:	ldrb	r8, [r3]
   265e0:	mov	r9, #0
   265e4:	orrs	r1, r8, r9
   265e8:	beq	26604 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x780>
   265ec:	mov	r1, #4
   265f0:	mov	r2, #8
   265f4:	mov	r3, #8
   265f8:	bl	3af38 <flatcc_builder_table_add@@Base>
   265fc:	cmp	r0, #0
   26600:	strdne	r8, [r0]
   26604:	mov	r5, sl
   26608:	ldrh	r6, [r5, #96]!	; 0x60
   2660c:	cmp	r6, #0
   26610:	beq	26630 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7ac>
   26614:	ldr	r0, [sp, #44]	; 0x2c
   26618:	mov	r1, #2
   2661c:	mov	r2, #2
   26620:	mov	r3, #2
   26624:	bl	3af38 <flatcc_builder_table_add@@Base>
   26628:	cmp	r0, #0
   2662c:	strhne	r6, [r0]
   26630:	ldrh	r0, [r5]
   26634:	mov	r1, #4
   26638:	add	r5, r1, r0, lsl #1
   2663c:	movw	r0, #65534	; 0xfffe
   26640:	tst	r5, r0
   26644:	beq	26664 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7e0>
   26648:	ldr	r0, [sp, #44]	; 0x2c
   2664c:	mov	r1, #3
   26650:	mov	r2, #2
   26654:	mov	r3, #2
   26658:	bl	3af38 <flatcc_builder_table_add@@Base>
   2665c:	cmp	r0, #0
   26660:	strhne	r5, [r0]
   26664:	cmp	r4, #0
   26668:	beq	26688 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x804>
   2666c:	ldr	r0, [sp, #44]	; 0x2c
   26670:	mov	r1, #8
   26674:	mov	r2, #1
   26678:	mov	r3, #1
   2667c:	bl	3af38 <flatcc_builder_table_add@@Base>
   26680:	cmp	r0, #0
   26684:	strbne	r4, [r0]
   26688:	ldr	r0, [sp, #32]
   2668c:	cmp	r0, #0
   26690:	beq	266b4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x830>
   26694:	ldr	r0, [sp, #44]	; 0x2c
   26698:	mov	r1, #7
   2669c:	mov	r2, #1
   266a0:	mov	r3, #1
   266a4:	bl	3af38 <flatcc_builder_table_add@@Base>
   266a8:	cmp	r0, #0
   266ac:	ldrne	r1, [sp, #32]
   266b0:	strbne	r1, [r0]
   266b4:	ldr	r6, [sp, #40]	; 0x28
   266b8:	ldr	r5, [sp, #44]	; 0x2c
   266bc:	cmp	r6, #0
   266c0:	beq	266e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x85c>
   266c4:	mov	r0, r5
   266c8:	mov	r1, #6
   266cc:	mov	r2, #1
   266d0:	mov	r3, #1
   266d4:	bl	3af38 <flatcc_builder_table_add@@Base>
   266d8:	cmp	r0, #0
   266dc:	strbne	r6, [r0]
   266e0:	ldr	r1, [pc, #1448]	; 26c90 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe0c>
   266e4:	mov	r0, r5
   266e8:	mov	r2, #2
   266ec:	add	r1, pc, r1
   266f0:	bl	3a428 <flatcc_builder_check_required@@Base>
   266f4:	cmp	r0, #0
   266f8:	beq	26bb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd2c>
   266fc:	mov	r0, r5
   26700:	bl	3a4c4 <flatcc_builder_end_table@@Base>
   26704:	cmp	r0, #0
   26708:	beq	26718 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x894>
   2670c:	mov	r1, r0
   26710:	mov	r0, r5
   26714:	bl	38e5c <flatcc_builder_offset_vector_push@@Base>
   26718:	ldr	sl, [sl]
   2671c:	orr	r7, r7, r4
   26720:	cmp	sl, #0
   26724:	bne	26298 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x414>
   26728:	mov	r0, r5
   2672c:	bl	397fc <flatcc_builder_end_offset_vector@@Base>
   26730:	cmp	r0, #0
   26734:	beq	26750 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8cc>
   26738:	mov	r7, r0
   2673c:	mov	r0, r5
   26740:	mov	r1, #1
   26744:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26748:	cmp	r0, #0
   2674c:	strne	r7, [r0]
   26750:	ldr	r6, [sp, #28]
   26754:	ldrh	r0, [r6, #8]
   26758:	cmp	r0, #1
   2675c:	bne	267a8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x924>
   26760:	ldr	r4, [r6, #112]	; 0x70
   26764:	cmp	r4, #0
   26768:	beq	26788 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x904>
   2676c:	mov	r0, r5
   26770:	mov	r1, #4
   26774:	mov	r2, #4
   26778:	mov	r3, #4
   2677c:	bl	3af38 <flatcc_builder_table_add@@Base>
   26780:	cmp	r0, #0
   26784:	strne	r4, [r0]
   26788:	mov	r0, r5
   2678c:	mov	r1, #2
   26790:	mov	r2, #1
   26794:	mov	r3, #1
   26798:	bl	3af38 <flatcc_builder_table_add@@Base>
   2679c:	cmp	r0, #0
   267a0:	movne	r1, #1
   267a4:	strbne	r1, [r0]
   267a8:	ldrh	r4, [r6, #104]	; 0x68
   267ac:	cmp	r4, #0
   267b0:	beq	267d0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x94c>
   267b4:	mov	r0, r5
   267b8:	mov	r1, #3
   267bc:	mov	r2, #4
   267c0:	mov	r3, #4
   267c4:	bl	3af38 <flatcc_builder_table_add@@Base>
   267c8:	cmp	r0, #0
   267cc:	strne	r4, [r0]
   267d0:	ldr	r1, [pc, #1212]	; 26c94 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe10>
   267d4:	mov	r0, r5
   267d8:	mov	r2, #2
   267dc:	add	r1, pc, r1
   267e0:	bl	3a428 <flatcc_builder_check_required@@Base>
   267e4:	cmp	r0, #0
   267e8:	beq	26c10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd8c>
   267ec:	mov	r0, r5
   267f0:	bl	3a4c4 <flatcc_builder_end_table@@Base>
   267f4:	ldr	r1, [sp, #20]
   267f8:	ldr	r2, [sp, #24]
   267fc:	str	r0, [r1, r2, lsl #2]
   26800:	ldr	r0, [sp, #16]
   26804:	mov	r1, r2
   26808:	add	r1, r2, #1
   2680c:	cmp	r1, r0
   26810:	blt	26238 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3b4>
   26814:	ldr	r1, [sp, #20]
   26818:	ldr	r2, [sp, #16]
   2681c:	mov	r0, r5
   26820:	bl	3968c <flatcc_builder_create_offset_vector@@Base>
   26824:	cmp	r0, #0
   26828:	beq	26844 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9c0>
   2682c:	mov	r4, r0
   26830:	mov	r0, r5
   26834:	mov	r1, #0
   26838:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   2683c:	cmp	r0, #0
   26840:	strne	r4, [r0]
   26844:	ldr	r0, [sp, #68]	; 0x44
   26848:	ldr	r4, [sp, #56]	; 0x38
   2684c:	str	r0, [sp, #32]
   26850:	mov	r0, r5
   26854:	bl	39614 <flatcc_builder_start_offset_vector@@Base>
   26858:	cmp	r4, #1
   2685c:	str	r4, [sp, #36]	; 0x24
   26860:	blt	26aac <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc28>
   26864:	ldr	r6, [pc, #1068]	; 26c98 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe14>
   26868:	mov	r4, #0
   2686c:	add	r6, pc, r6
   26870:	ldr	r5, [sp, #32]
   26874:	mov	r1, #4
   26878:	ldr	r8, [r5, r4, lsl #3]!
   2687c:	ldrh	r0, [r8, #8]
   26880:	str	r0, [sp, #40]	; 0x28
   26884:	ldr	r0, [sp, #44]	; 0x2c
   26888:	bl	39a94 <flatcc_builder_start_table@@Base>
   2688c:	ldr	r1, [r5, #4]
   26890:	ldr	r5, [sp, #44]	; 0x2c
   26894:	mov	r0, r5
   26898:	bl	3bd1c <flatcc_builder_create_string_str@@Base>
   2689c:	cmp	r0, #0
   268a0:	beq	268bc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa38>
   268a4:	mov	r7, r0
   268a8:	mov	r0, r5
   268ac:	mov	r1, #0
   268b0:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   268b4:	cmp	r0, #0
   268b8:	strne	r7, [r0]
   268bc:	mov	r0, r5
   268c0:	bl	39614 <flatcc_builder_start_offset_vector@@Base>
   268c4:	ldr	sl, [r8, #20]
   268c8:	cmp	sl, #0
   268cc:	beq	269cc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb48>
   268d0:	ldr	r0, [sp, #40]	; 0x28
   268d4:	mov	r9, #0
   268d8:	cmp	r0, #4
   268dc:	ldr	r0, [sp, #20]
   268e0:	moveq	r9, r0
   268e4:	mov	r0, r5
   268e8:	mov	r1, #3
   268ec:	bl	39a94 <flatcc_builder_start_table@@Base>
   268f0:	ldr	r0, [sl, #4]
   268f4:	ldm	r0, {r1, r2}
   268f8:	mov	r0, r5
   268fc:	bl	3bbfc <flatcc_builder_create_string@@Base>
   26900:	cmp	r0, #0
   26904:	beq	26920 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa9c>
   26908:	mov	r7, r0
   2690c:	mov	r0, r5
   26910:	mov	r1, #0
   26914:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26918:	cmp	r0, #0
   2691c:	strne	r7, [r0]
   26920:	cmp	r9, #0
   26924:	beq	2695c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xad8>
   26928:	ldrh	r0, [sl, #24]
   2692c:	cmp	r0, #14
   26930:	bne	2695c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xad8>
   26934:	ldr	r0, [sl, #16]
   26938:	ldr	r0, [r0, #124]	; 0x7c
   2693c:	ldr	r5, [r9, r0, lsl #2]
   26940:	cmp	r5, #0
   26944:	beq	2695c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xad8>
   26948:	ldr	r0, [sp, #44]	; 0x2c
   2694c:	mov	r1, #2
   26950:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26954:	cmp	r0, #0
   26958:	strne	r5, [r0]
   2695c:	ldr	r5, [sl, #48]	; 0x30
   26960:	ldr	r7, [sl, #52]	; 0x34
   26964:	orrs	r0, r5, r7
   26968:	beq	26988 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb04>
   2696c:	ldr	r0, [sp, #44]	; 0x2c
   26970:	mov	r1, #1
   26974:	mov	r2, #8
   26978:	mov	r3, #8
   2697c:	bl	3af38 <flatcc_builder_table_add@@Base>
   26980:	cmp	r0, #0
   26984:	stmne	r0, {r5, r7}
   26988:	ldr	r5, [sp, #44]	; 0x2c
   2698c:	mov	r1, r6
   26990:	mov	r2, #1
   26994:	mov	r0, r5
   26998:	bl	3a428 <flatcc_builder_check_required@@Base>
   2699c:	cmp	r0, #0
   269a0:	beq	26bd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd4c>
   269a4:	mov	r0, r5
   269a8:	bl	3a4c4 <flatcc_builder_end_table@@Base>
   269ac:	cmp	r0, #0
   269b0:	beq	269c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb3c>
   269b4:	mov	r1, r0
   269b8:	mov	r0, r5
   269bc:	bl	38e5c <flatcc_builder_offset_vector_push@@Base>
   269c0:	ldr	sl, [sl]
   269c4:	cmp	sl, #0
   269c8:	bne	268e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa60>
   269cc:	mov	r0, r5
   269d0:	bl	397fc <flatcc_builder_end_offset_vector@@Base>
   269d4:	cmp	r0, #0
   269d8:	beq	269f4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb70>
   269dc:	mov	r7, r0
   269e0:	mov	r0, r5
   269e4:	mov	r1, #1
   269e8:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   269ec:	cmp	r0, #0
   269f0:	strne	r7, [r0]
   269f4:	ldr	r0, [sp, #40]	; 0x28
   269f8:	subs	r5, r0, #4
   269fc:	bne	26a24 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xba0>
   26a00:	ldr	r0, [sp, #44]	; 0x2c
   26a04:	mov	r1, #2
   26a08:	mov	r2, #1
   26a0c:	mov	r3, #1
   26a10:	bl	3af38 <flatcc_builder_table_add@@Base>
   26a14:	cmp	r0, #0
   26a18:	clzne	r1, r5
   26a1c:	lsrne	r1, r1, #5
   26a20:	strbne	r1, [r0]
   26a24:	ldr	r0, [r8, #48]	; 0x30
   26a28:	ldr	r1, [r8, #52]	; 0x34
   26a2c:	ldr	r2, [r8, #40]	; 0x28
   26a30:	ldr	r3, [r8, #44]	; 0x2c
   26a34:	stm	sp, {r0, r1}
   26a38:	ldr	r5, [sp, #44]	; 0x2c
   26a3c:	mov	r0, r5
   26a40:	bl	2737c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x430>
   26a44:	cmp	r0, #0
   26a48:	beq	26a64 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbe0>
   26a4c:	mov	r7, r0
   26a50:	mov	r0, r5
   26a54:	mov	r1, #3
   26a58:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26a5c:	cmp	r0, #0
   26a60:	strne	r7, [r0]
   26a64:	ldr	r1, [pc, #560]	; 26c9c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe18>
   26a68:	mov	r0, r5
   26a6c:	mov	r2, #3
   26a70:	add	r1, pc, r1
   26a74:	bl	3a428 <flatcc_builder_check_required@@Base>
   26a78:	cmp	r0, #0
   26a7c:	beq	26c30 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdac>
   26a80:	mov	r0, r5
   26a84:	bl	3a4c4 <flatcc_builder_end_table@@Base>
   26a88:	cmp	r0, #0
   26a8c:	beq	26a9c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc18>
   26a90:	mov	r1, r0
   26a94:	mov	r0, r5
   26a98:	bl	38e5c <flatcc_builder_offset_vector_push@@Base>
   26a9c:	ldr	r0, [sp, #36]	; 0x24
   26aa0:	add	r4, r4, #1
   26aa4:	cmp	r4, r0
   26aa8:	blt	26870 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9ec>
   26aac:	mov	r0, r5
   26ab0:	bl	397fc <flatcc_builder_end_offset_vector@@Base>
   26ab4:	cmp	r0, #0
   26ab8:	beq	26ad4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc50>
   26abc:	mov	r4, r0
   26ac0:	mov	r0, r5
   26ac4:	mov	r1, #1
   26ac8:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26acc:	cmp	r0, #0
   26ad0:	strne	r4, [r0]
   26ad4:	ldr	r0, [sp, #8]
   26ad8:	ldr	r0, [r0, #52]	; 0x34
   26adc:	cmp	r0, #0
   26ae0:	beq	26b18 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc94>
   26ae4:	ldrh	r1, [r0, #8]
   26ae8:	cmp	r1, #0
   26aec:	bne	26b18 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc94>
   26af0:	ldr	r0, [r0, #124]	; 0x7c
   26af4:	ldr	r1, [sp, #20]
   26af8:	ldr	r4, [r1, r0, lsl #2]
   26afc:	cmp	r4, #0
   26b00:	beq	26b18 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc94>
   26b04:	mov	r0, r5
   26b08:	mov	r1, #4
   26b0c:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   26b10:	cmp	r0, #0
   26b14:	strne	r4, [r0]
   26b18:	ldr	r1, [pc, #384]	; 26ca0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe1c>
   26b1c:	mov	r0, r5
   26b20:	mov	r2, #2
   26b24:	add	r1, pc, r1
   26b28:	bl	3a428 <flatcc_builder_check_required@@Base>
   26b2c:	cmp	r0, #0
   26b30:	beq	26c50 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xdcc>
   26b34:	mov	r0, r5
   26b38:	bl	3a4c4 <flatcc_builder_end_table@@Base>
   26b3c:	mov	r1, r0
   26b40:	mov	r0, r5
   26b44:	bl	386bc <flatcc_builder_end_buffer@@Base>
   26b48:	ldr	r0, [sp, #64]	; 0x40
   26b4c:	cmp	r0, #0
   26b50:	beq	26b58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcd4>
   26b54:	bl	148f8 <free@plt>
   26b58:	ldr	r0, [sp, #68]	; 0x44
   26b5c:	cmp	r0, #0
   26b60:	beq	26b68 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce4>
   26b64:	bl	148f8 <free@plt>
   26b68:	ldr	r0, [sp, #72]	; 0x48
   26b6c:	cmp	r0, #0
   26b70:	beq	26b78 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xcf4>
   26b74:	bl	148f8 <free@plt>
   26b78:	add	r1, sp, #48	; 0x30
   26b7c:	vmov.i32	q8, #0	; 0x00000000
   26b80:	mov	r0, #28
   26b84:	mov	r4, #0
   26b88:	mov	r2, r1
   26b8c:	add	r1, r1, #16
   26b90:	vst1.64	{d16-d17}, [r2], r0
   26b94:	ldr	r0, [sp, #20]
   26b98:	vst1.32	{d16-d17}, [r2]
   26b9c:	vst1.64	{d16-d17}, [r1]
   26ba0:	cmp	r0, #0
   26ba4:	beq	2602c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a8>
   26ba8:	bl	148f8 <free@plt>
   26bac:	b	2602c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1a8>
   26bb0:	ldr	r0, [pc, #248]	; 26cb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe2c>
   26bb4:	ldr	r1, [pc, #248]	; 26cb4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe30>
   26bb8:	ldr	r3, [pc, #248]	; 26cb8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe34>
   26bbc:	mov	r2, #29
   26bc0:	add	r0, pc, r0
   26bc4:	add	r1, pc, r1
   26bc8:	add	r3, pc, r3
   26bcc:	bl	14a78 <__assert_fail@plt>
   26bd0:	ldr	r0, [pc, #240]	; 26cc8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe44>
   26bd4:	ldr	r1, [pc, #240]	; 26ccc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe48>
   26bd8:	ldr	r3, [pc, #240]	; 26cd0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe4c>
   26bdc:	mov	r2, #25
   26be0:	add	r0, pc, r0
   26be4:	add	r1, pc, r1
   26be8:	add	r3, pc, r3
   26bec:	bl	14a78 <__assert_fail@plt>
   26bf0:	ldr	r0, [pc, #172]	; 26ca4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe20>
   26bf4:	ldr	r1, [pc, #172]	; 26ca8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe24>
   26bf8:	ldr	r3, [pc, #172]	; 26cac <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe28>
   26bfc:	mov	r2, #23
   26c00:	add	r0, pc, r0
   26c04:	add	r1, pc, r1
   26c08:	add	r3, pc, r3
   26c0c:	bl	14a78 <__assert_fail@plt>
   26c10:	ldr	r0, [pc, #164]	; 26cbc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe38>
   26c14:	ldr	r1, [pc, #164]	; 26cc0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3c>
   26c18:	ldr	r3, [pc, #164]	; 26cc4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe40>
   26c1c:	mov	r2, #31
   26c20:	add	r0, pc, r0
   26c24:	add	r1, pc, r1
   26c28:	add	r3, pc, r3
   26c2c:	bl	14a78 <__assert_fail@plt>
   26c30:	ldr	r0, [pc, #156]	; 26cd4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe50>
   26c34:	ldr	r1, [pc, #156]	; 26cd8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe54>
   26c38:	ldr	r3, [pc, #156]	; 26cdc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe58>
   26c3c:	mov	r2, #27
   26c40:	add	r0, pc, r0
   26c44:	add	r1, pc, r1
   26c48:	add	r3, pc, r3
   26c4c:	bl	14a78 <__assert_fail@plt>
   26c50:	ldr	r0, [pc, #136]	; 26ce0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe5c>
   26c54:	ldr	r1, [pc, #136]	; 26ce4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
   26c58:	ldr	r3, [pc, #136]	; 26ce8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe64>
   26c5c:	mov	r2, #33	; 0x21
   26c60:	add	r0, pc, r0
   26c64:	add	r1, pc, r1
   26c68:	add	r3, pc, r3
   26c6c:	bl	14a78 <__assert_fail@plt>
   26c70:	andeq	r1, r0, r0, lsl r2
   26c74:	andeq	r1, r0, r4, lsr r1
   26c78:	andeq	r1, r0, r4, lsl #6
   26c7c:	andeq	r1, r0, r4, asr #5
   26c80:	ldrdeq	r0, [r3], -r1
   26c84:	strdeq	r0, [r2], -r3
   26c88:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   26c8c:	andeq	r1, r3, r2, lsl r1
   26c90:	andeq	r0, r3, sl, lsl lr
   26c94:	andeq	r0, r3, r0, lsr sp
   26c98:	andeq	r0, r3, r6, lsr #25
   26c9c:	andeq	r0, r3, r6, lsr #21
   26ca0:	strdeq	r0, [r3], -sl
   26ca4:	andeq	r0, r3, r2, lsr r1
   26ca8:			; <UNDEFINED> instruction: 0x000301bb
   26cac:	andeq	r0, r3, sp, lsr #4
   26cb0:			; <UNDEFINED> instruction: 0x000302b8
   26cb4:	strdeq	r0, [r3], -fp
   26cb8:	andeq	r0, r3, r0, asr #6
   26cbc:	andeq	r0, r3, sp, lsr #6
   26cc0:	muleq	r3, fp, r1
   26cc4:			; <UNDEFINED> instruction: 0x000303b8
   26cc8:	andeq	r0, r3, r7, asr #8
   26ccc:	ldrdeq	r0, [r3], -fp
   26cd0:	ldrdeq	r0, [r3], -r5
   26cd4:	andeq	r0, r3, r6, asr #9
   26cd8:	andeq	r0, r3, fp, ror r1
   26cdc:	andeq	r0, r3, fp, asr #10
   26ce0:	andeq	r0, r3, r6, ror r5
   26ce4:	andeq	r0, r3, fp, asr r1
   26ce8:	andeq	r0, r3, r1, lsl #12
   26cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26cf0:	add	fp, sp, #28
   26cf4:	sub	sp, sp, #12
   26cf8:	cmp	r0, #0
   26cfc:	beq	26e8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1008>
   26d00:	ldr	r1, [r0, #4]
   26d04:	movw	r2, #17986	; 0x4642
   26d08:	movt	r2, #21314	; 0x5342
   26d0c:	cmp	r1, r2
   26d10:	bne	26e8c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1008>
   26d14:	ldr	r1, [r0]
   26d18:	ldr	r2, [r0, r1]!
   26d1c:	mov	r1, r0
   26d20:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   26d24:	cmp	r2, #5
   26d28:	bls	26e98 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1014>
   26d2c:	ldrh	r1, [r1, #4]
   26d30:	cmp	r1, #0
   26d34:	beq	26e98 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1014>
   26d38:	ldr	r1, [r0, r1]!
   26d3c:	ldr	r1, [r0, r1]!
   26d40:	cmp	r1, #0
   26d44:	beq	26e58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfd4>
   26d48:	add	r1, r0, #4
   26d4c:	mov	r2, #0
   26d50:	str	r1, [sp, #8]
   26d54:	str	r1, [sp]
   26d58:	mov	r0, r1
   26d5c:	ldr	r7, [r0, r2, lsl #2]!
   26d60:	adds	r0, r0, r7
   26d64:	beq	26e6c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfe8>
   26d68:	str	r2, [sp, #4]
   26d6c:	ldr	r2, [r0]
   26d70:	mov	r1, r0
   26d74:	ldrh	r2, [r1, -r2]!	; <UNPREDICTABLE>
   26d78:	cmp	r2, #8
   26d7c:	bcc	26e60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfdc>
   26d80:	ldrh	r9, [r1, #6]
   26d84:	cmp	r9, #0
   26d88:	beq	26e60 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfdc>
   26d8c:	ldr	r8, [r0, r9]!
   26d90:	ldr	sl, [r0, r8]!
   26d94:	cmp	sl, #0
   26d98:	beq	26e34 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfb0>
   26d9c:	add	r4, r0, #4
   26da0:	lsr	r6, sl, #1
   26da4:	sub	r5, sl, #1
   26da8:	mov	r0, r4
   26dac:	mov	r1, r6
   26db0:	mov	r2, r5
   26db4:	bl	27664 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x718>
   26db8:	sub	r6, r6, #1
   26dbc:	cmn	r6, #1
   26dc0:	bne	26da8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf24>
   26dc4:	cmp	r5, #0
   26dc8:	beq	26e34 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfb0>
   26dcc:	mvn	r0, #3
   26dd0:	mov	r1, r8
   26dd4:	sub	r5, sl, #2
   26dd8:	add	r6, r0, sl, lsl #2
   26ddc:	mov	r0, #4
   26de0:	sub	r8, r0, sl, lsl #2
   26de4:	add	r0, r1, r7
   26de8:	ldr	r1, [sp, #8]
   26dec:	add	r0, r0, sl, lsl #2
   26df0:	add	r0, r0, r9
   26df4:	add	r7, r1, r0
   26df8:	ldr	r0, [r7]
   26dfc:	ldr	r1, [r4]
   26e00:	mov	r2, r5
   26e04:	add	r0, r6, r0
   26e08:	str	r0, [r4]
   26e0c:	add	r0, r8, r1
   26e10:	mov	r1, #0
   26e14:	str	r0, [r7], #-4
   26e18:	mov	r0, r4
   26e1c:	bl	27664 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x718>
   26e20:	sub	r5, r5, #1
   26e24:	sub	r6, r6, #4
   26e28:	add	r8, r8, #4
   26e2c:	cmn	r5, #1
   26e30:	bne	26df8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf74>
   26e34:	ldr	r0, [sp, #8]
   26e38:	ldr	r1, [sp]
   26e3c:	ldr	r2, [sp, #4]
   26e40:	add	r0, r0, #4
   26e44:	add	r2, r2, #1
   26e48:	str	r0, [sp, #8]
   26e4c:	ldr	r0, [r1, #-4]
   26e50:	cmp	r2, r0
   26e54:	bcc	26d58 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xed4>
   26e58:	sub	sp, fp, #28
   26e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26e60:	ldr	r0, [pc, #108]	; 26ed4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1050>
   26e64:	add	r0, pc, r0
   26e68:	b	26e74 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xff0>
   26e6c:	ldr	r0, [pc, #84]	; 26ec8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1044>
   26e70:	add	r0, pc, r0
   26e74:	ldr	r1, [pc, #80]	; 26ecc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1048>
   26e78:	ldr	r3, [pc, #80]	; 26ed0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x104c>
   26e7c:	mov	r2, #224	; 0xe0
   26e80:	add	r1, pc, r1
   26e84:	add	r3, pc, r3
   26e88:	bl	14a78 <__assert_fail@plt>
   26e8c:	ldr	r0, [pc, #40]	; 26ebc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1038>
   26e90:	add	r0, pc, r0
   26e94:	b	26ea0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x101c>
   26e98:	ldr	r0, [pc, #24]	; 26eb8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1034>
   26e9c:	add	r0, pc, r0
   26ea0:	ldr	r1, [pc, #24]	; 26ec0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x103c>
   26ea4:	ldr	r3, [pc, #24]	; 26ec4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1040>
   26ea8:	mov	r2, #237	; 0xed
   26eac:	add	r1, pc, r1
   26eb0:	add	r3, pc, r3
   26eb4:	bl	14a78 <__assert_fail@plt>
   26eb8:	strdeq	r0, [r3], -ip
   26ebc:	andeq	r0, r3, r0, lsr #8
   26ec0:	andeq	r0, r3, sl, lsr #8
   26ec4:	muleq	r3, fp, r4
   26ec8:	andeq	r0, r3, r0, asr #8
   26ecc:	andeq	r0, r3, r6, asr r4
   26ed0:	andeq	r0, r3, ip, ror #10
   26ed4:	andeq	r0, r3, r4, lsr r5

00026ed8 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   26ed8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   26edc:	add	fp, sp, #24
   26ee0:	sub	sp, sp, #232	; 0xe8
   26ee4:	mov	r7, sp
   26ee8:	mov	r6, r0
   26eec:	mov	r5, r2
   26ef0:	mov	r4, r1
   26ef4:	mov	r0, r7
   26ef8:	bl	37718 <flatcc_builder_init@@Base>
   26efc:	mov	r0, r7
   26f00:	mov	r1, r6
   26f04:	mov	r2, r4
   26f08:	bl	25efc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   26f0c:	mov	r4, #0
   26f10:	cmp	r0, #0
   26f14:	bne	26f38 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   26f18:	mov	r0, sp
   26f1c:	mov	r1, r5
   26f20:	bl	3c0d4 <flatcc_builder_finalize_buffer@@Base>
   26f24:	cmp	r0, #0
   26f28:	beq	26f38 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x60>
   26f2c:	mov	r5, r0
   26f30:	bl	26cec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe68>
   26f34:	mov	r4, r5
   26f38:	mov	r0, sp
   26f3c:	bl	37a80 <flatcc_builder_clear@@Base>
   26f40:	mov	r0, r4
   26f44:	sub	sp, fp, #24
   26f48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00026f4c <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   26f4c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   26f50:	add	fp, sp, #24
   26f54:	sub	sp, sp, #248	; 0xf8
   26f58:	mov	r6, r0
   26f5c:	mov	r8, r1
   26f60:	ldr	r0, [r0, #108]	; 0x6c
   26f64:	ldr	r1, [r6, #216]	; 0xd8
   26f68:	ldr	r4, [pc, #464]	; 27140 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f4>
   26f6c:	add	r4, pc, r4
   26f70:	cmp	r1, #0
   26f74:	movne	r4, r1
   26f78:	cmp	r0, #0
   26f7c:	beq	2701c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xd0>
   26f80:	ldr	r0, [pc, #444]	; 27144 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f8>
   26f84:	ldr	r0, [pc, r0]
   26f88:	ldr	r4, [r0]
   26f8c:	cmp	r4, #0
   26f90:	beq	27090 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x144>
   26f94:	add	r5, sp, #16
   26f98:	mov	r0, r5
   26f9c:	bl	37718 <flatcc_builder_init@@Base>
   26fa0:	mov	r0, r5
   26fa4:	mov	r1, r6
   26fa8:	mov	r2, r8
   26fac:	bl	25efc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x78>
   26fb0:	mov	r5, #0
   26fb4:	cmp	r0, #0
   26fb8:	bne	26fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x90>
   26fbc:	add	r0, sp, #16
   26fc0:	add	r1, sp, #12
   26fc4:	bl	3c0d4 <flatcc_builder_finalize_buffer@@Base>
   26fc8:	cmp	r0, #0
   26fcc:	beq	26fdc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x90>
   26fd0:	mov	r6, r0
   26fd4:	bl	26cec <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe68>
   26fd8:	mov	r5, r6
   26fdc:	add	r0, sp, #16
   26fe0:	bl	37a80 <flatcc_builder_clear@@Base>
   26fe4:	cmp	r5, #0
   26fe8:	beq	27098 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14c>
   26fec:	ldr	r7, [sp, #12]
   26ff0:	mov	r0, r5
   26ff4:	mov	r1, #1
   26ff8:	mov	r3, r4
   26ffc:	mov	r2, r7
   27000:	bl	1494c <fwrite@plt>
   27004:	mov	r6, #0
   27008:	cmp	r7, r0
   2700c:	bne	270d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   27010:	mov	r0, r5
   27014:	bl	148f8 <free@plt>
   27018:	b	270a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   2701c:	ldr	r7, [r8, #160]	; 0xa0
   27020:	mov	r0, r7
   27024:	bl	149a0 <strlen@plt>
   27028:	mov	r5, r0
   2702c:	mov	r0, r4
   27030:	bl	149a0 <strlen@plt>
   27034:	ldr	r2, [pc, #268]	; 27148 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1fc>
   27038:	mov	r1, r0
   2703c:	mov	r0, #1
   27040:	mov	r3, r5
   27044:	str	r0, [sp, #4]
   27048:	mov	r0, r4
   2704c:	add	r2, pc, r2
   27050:	str	r2, [sp]
   27054:	mov	r2, r7
   27058:	bl	2a560 <__flatcc_fb_create_join_path_n@@Base>
   2705c:	cmp	r0, #0
   27060:	beq	27118 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   27064:	ldr	r1, [pc, #224]	; 2714c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x200>
   27068:	mov	r7, r0
   2706c:	add	r1, pc, r1
   27070:	bl	148ec <fopen@plt>
   27074:	mov	r4, r0
   27078:	cmp	r0, #0
   2707c:	beq	270f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   27080:	mov	r0, r7
   27084:	bl	148f8 <free@plt>
   27088:	cmp	r4, #0
   2708c:	bne	26f94 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48>
   27090:	mvn	r6, #0
   27094:	b	270c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   27098:	ldr	r0, [pc, #204]	; 2716c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x220>
   2709c:	add	r0, pc, r0
   270a0:	bl	14958 <puts@plt>
   270a4:	mvn	r6, #0
   270a8:	ldr	r0, [pc, #176]	; 27160 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x214>
   270ac:	ldr	r0, [pc, r0]
   270b0:	ldr	r0, [r0]
   270b4:	cmp	r0, r4
   270b8:	beq	270c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x178>
   270bc:	mov	r0, r4
   270c0:	bl	14a00 <fclose@plt>
   270c4:	mov	r0, r6
   270c8:	sub	sp, fp, #24
   270cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   270d0:	ldr	r0, [pc, #128]	; 27158 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x20c>
   270d4:	mov	r1, #38	; 0x26
   270d8:	mov	r2, #1
   270dc:	ldr	r0, [pc, r0]
   270e0:	ldr	r3, [r0]
   270e4:	ldr	r0, [pc, #112]	; 2715c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
   270e8:	add	r0, pc, r0
   270ec:	bl	1494c <fwrite@plt>
   270f0:	mvn	r6, #0
   270f4:	b	27010 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc4>
   270f8:	ldr	r0, [pc, #80]	; 27150 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>
   270fc:	mov	r2, r7
   27100:	ldr	r0, [pc, r0]
   27104:	ldr	r0, [r0]
   27108:	ldr	r1, [pc, #68]	; 27154 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x208>
   2710c:	add	r1, pc, r1
   27110:	bl	149b8 <fprintf@plt>
   27114:	b	27080 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x134>
   27118:	ldr	r0, [pc, #68]	; 27164 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x218>
   2711c:	mov	r1, #34	; 0x22
   27120:	mov	r2, #1
   27124:	ldr	r0, [pc, r0]
   27128:	ldr	r3, [r0]
   2712c:	ldr	r0, [pc, #52]	; 27168 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x21c>
   27130:	add	r0, pc, r0
   27134:	bl	1494c <fwrite@plt>
   27138:	mov	r0, #1
   2713c:	bl	14994 <exit@plt>
   27140:	muleq	r1, r2, r8
   27144:	andeq	r5, r4, r4, lsr #2
   27148:	andeq	r9, r1, r4, lsl #5
   2714c:	andeq	r9, r1, r2, asr #7
   27150:	muleq	r4, ip, pc	; <UNPREDICTABLE>
   27154:	andeq	r0, r3, r5, asr #7
   27158:	andeq	r4, r4, r0, asr #31
   2715c:	andeq	pc, r2, lr, lsl ip	; <UNPREDICTABLE>
   27160:	strdeq	r4, [r4], -ip
   27164:	andeq	r4, r4, r8, ror pc
   27168:	strdeq	r9, [r1], -r7
   2716c:	andeq	r0, r3, ip, lsl #9
   27170:	mov	r2, r0
   27174:	add	r0, r1, #4
   27178:	ldr	r1, [pc, #4]	; 27184 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x238>
   2717c:	add	r1, pc, r1
   27180:	b	28e38 <fb_symbol_table_visit@@Base>
   27184:	andeq	r0, r0, ip, lsl r0
   27188:	mov	r2, r0
   2718c:	add	r0, r1, #4
   27190:	ldr	r1, [pc, #4]	; 2719c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x250>
   27194:	add	r1, pc, r1
   27198:	b	28e38 <fb_symbol_table_visit@@Base>
   2719c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   271a0:	push	{r4, r5, fp, lr}
   271a4:	add	fp, sp, #8
   271a8:	mov	r4, r0
   271ac:	ldrh	r0, [r1, #8]
   271b0:	cmp	r0, #4
   271b4:	bhi	27258 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x30c>
   271b8:	ldr	r0, [r4, #40]	; 0x28
   271bc:	mov	r5, r1
   271c0:	ldr	r1, [r1, #16]
   271c4:	add	r0, r0, #172	; 0xac
   271c8:	bl	284dc <ptr_set_find_item@@Base>
   271cc:	cmp	r0, #0
   271d0:	popeq	{r4, r5, fp, pc}
   271d4:	ldr	r1, [r4]
   271d8:	mov	r0, #1
   271dc:	cmp	r1, #0
   271e0:	beq	2721c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   271e4:	ldr	r1, [r5, #12]
   271e8:	ldr	r1, [r1]
   271ec:	cmp	r1, #0
   271f0:	beq	2721c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
   271f4:	mov	r0, #0
   271f8:	ldr	r2, [r1]
   271fc:	ldr	r1, [r1, #4]
   27200:	ldr	r1, [r1, #4]
   27204:	cmp	r2, #0
   27208:	add	r0, r0, r1
   2720c:	mov	r1, r2
   27210:	add	r0, r0, #1
   27214:	bne	271f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2ac>
   27218:	add	r0, r0, #1
   2721c:	ldr	r1, [r5, #4]
   27220:	ldr	r1, [r1, #4]
   27224:	add	r0, r0, r1
   27228:	ldr	r1, [r4, #12]
   2722c:	add	r0, r0, r1
   27230:	str	r0, [r4, #12]
   27234:	ldrh	r0, [r5, #8]
   27238:	sub	r1, r0, #3
   2723c:	cmp	r1, #2
   27240:	bcc	2725c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x310>
   27244:	cmp	r0, #1
   27248:	ldrls	r0, [r4, #4]
   2724c:	addls	r0, r0, #1
   27250:	strls	r0, [r4, #4]
   27254:	popls	{r4, r5, fp, pc}
   27258:	pop	{r4, r5, fp, pc}
   2725c:	ldr	r0, [r4, #8]
   27260:	add	r0, r0, #1
   27264:	str	r0, [r4, #8]
   27268:	pop	{r4, r5, fp, pc}
   2726c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27270:	add	fp, sp, #28
   27274:	sub	sp, sp, #4
   27278:	mov	r9, r0
   2727c:	ldrh	r0, [r1, #8]
   27280:	cmp	r0, #4
   27284:	bhi	27368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   27288:	ldr	r0, [r9, #40]	; 0x28
   2728c:	mov	sl, r1
   27290:	ldr	r1, [r1, #16]
   27294:	add	r0, r0, #172	; 0xac
   27298:	bl	284dc <ptr_set_find_item@@Base>
   2729c:	cmp	r0, #0
   272a0:	beq	27368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   272a4:	ldr	r0, [r9]
   272a8:	ldr	r8, [r9, #36]	; 0x24
   272ac:	cmp	r0, #0
   272b0:	mov	r6, r8
   272b4:	beq	272fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   272b8:	ldr	r0, [sl, #12]
   272bc:	mov	r6, r8
   272c0:	ldr	r4, [r0]
   272c4:	cmp	r4, #0
   272c8:	beq	272fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b0>
   272cc:	mov	r5, #46	; 0x2e
   272d0:	mov	r6, r8
   272d4:	ldr	r0, [r4, #4]
   272d8:	ldm	r0, {r1, r7}
   272dc:	mov	r0, r6
   272e0:	mov	r2, r7
   272e4:	bl	14904 <memcpy@plt>
   272e8:	strb	r5, [r6, r7]!
   272ec:	ldr	r4, [r4]
   272f0:	add	r6, r6, #1
   272f4:	cmp	r4, #0
   272f8:	bne	272d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x388>
   272fc:	ldr	r0, [sl, #4]
   27300:	ldm	r0, {r1, r7}
   27304:	mov	r0, r6
   27308:	mov	r2, r7
   2730c:	bl	14904 <memcpy@plt>
   27310:	mov	r0, #0
   27314:	strb	r0, [r6, r7]!
   27318:	add	r0, r6, #1
   2731c:	str	r0, [r9, #36]	; 0x24
   27320:	ldrh	r0, [sl, #8]
   27324:	sub	r1, r0, #3
   27328:	cmp	r1, #2
   2732c:	bcc	27354 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x408>
   27330:	cmp	r0, #1
   27334:	bhi	27368 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x41c>
   27338:	ldr	r0, [r9, #28]
   2733c:	str	sl, [r0]
   27340:	str	r8, [r0, #4]
   27344:	add	r0, r0, #8
   27348:	str	r0, [r9, #28]
   2734c:	sub	sp, fp, #28
   27350:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27354:	ldr	r0, [r9, #32]
   27358:	str	sl, [r0]
   2735c:	str	r8, [r0, #4]
   27360:	add	r0, r0, #8
   27364:	str	r0, [r9, #32]
   27368:	sub	sp, fp, #28
   2736c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27370:	ldr	r1, [r1, #4]
   27374:	ldr	r0, [r0, #4]
   27378:	b	148e0 <strcmp@plt>
   2737c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27380:	add	fp, sp, #24
   27384:	mov	r4, r0
   27388:	ldrh	r0, [fp, #8]
   2738c:	mov	r8, #0
   27390:	mvn	r9, #0
   27394:	sub	r0, r0, #2
   27398:	cmp	r0, #13
   2739c:	bhi	274a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55c>
   273a0:	add	r5, pc, #20
   273a4:	mov	r1, #13
   273a8:	mov	r3, #13
   273ac:	mov	r7, #0
   273b0:	ldr	r6, [r5, r0, lsl #2]
   273b4:	mov	r0, #0
   273b8:	add	pc, r5, r6
   273bc:			; <UNDEFINED> instruction: 0x000001b8
   273c0:			; <UNDEFINED> instruction: 0x000001bc
   273c4:			; <UNDEFINED> instruction: 0x000001bc
   273c8:			; <UNDEFINED> instruction: 0x000001bc
   273cc:			; <UNDEFINED> instruction: 0x000001bc
   273d0:	andeq	r0, r0, r8, lsr r0
   273d4:	andeq	r0, r0, ip, lsr r0
   273d8:	andeq	r0, r0, r4, lsr #3
   273dc:			; <UNDEFINED> instruction: 0x000001bc
   273e0:			; <UNDEFINED> instruction: 0x000001bc
   273e4:			; <UNDEFINED> instruction: 0x000001bc
   273e8:			; <UNDEFINED> instruction: 0x000001bc
   273ec:	strheq	r0, [r0], -r8
   273f0:	muleq	r0, r4, r0
   273f4:	mov	r0, #14
   273f8:	sub	r2, r2, #1
   273fc:	mov	r1, #0
   27400:	cmp	r2, #10
   27404:	bhi	2754c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x600>
   27408:	add	r1, pc, #4
   2740c:	ldr	r2, [r1, r2, lsl #2]
   27410:	add	pc, r1, r2
   27414:	andeq	r0, r0, ip, lsr #32
   27418:	strdeq	r0, [r0], -r4
   2741c:	andeq	r0, r0, r4, asr #1
   27420:	ldrdeq	r0, [r0], -r4
   27424:	muleq	r0, ip, r0
   27428:	andeq	r0, r0, r4, lsl #2
   2742c:	andeq	r0, r0, r4, lsl r1
   27430:	andeq	r0, r0, r4, ror #1
   27434:	andeq	r0, r0, r4, lsr #2
   27438:	andeq	r0, r0, ip, lsr #1
   2743c:	andeq	r0, r0, r4, lsr r1
   27440:	mov	r1, #10
   27444:	cmp	r0, #0
   27448:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   2744c:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   27450:	ldrh	r0, [r2, #8]
   27454:	ldr	r9, [r2, #124]	; 0x7c
   27458:	mov	r1, #15
   2745c:	cmp	r0, #2
   27460:	bcc	27560 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x614>
   27464:	cmp	r0, #3
   27468:	bne	274a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55c>
   2746c:	ldr	r2, [r2, #40]	; 0x28
   27470:	b	273f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4a8>
   27474:	ldrh	r1, [r2, #8]
   27478:	ldr	r0, [r2, #124]	; 0x7c
   2747c:	mov	r3, #15
   27480:	cmp	r1, #2
   27484:	bcc	27570 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x624>
   27488:	cmp	r1, #4
   2748c:	beq	2756c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x620>
   27490:	cmp	r1, #3
   27494:	bne	274a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55c>
   27498:	ldr	r2, [r2, #40]	; 0x28
   2749c:	mov	r9, r0
   274a0:	mov	r0, #0
   274a4:	b	273f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ac>
   274a8:	mov	r7, #0
   274ac:	b	27578 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62c>
   274b0:	mov	r1, #2
   274b4:	cmp	r0, #0
   274b8:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   274bc:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   274c0:	mov	r1, #12
   274c4:	cmp	r0, #0
   274c8:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   274cc:	mov	r7, r1
   274d0:	mov	r8, #0
   274d4:	b	27578 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62c>
   274d8:	mov	r1, #6
   274dc:	cmp	r0, #0
   274e0:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   274e4:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   274e8:	mov	r1, #4
   274ec:	cmp	r0, #0
   274f0:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   274f4:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   274f8:	mov	r1, #5
   274fc:	cmp	r0, #0
   27500:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   27504:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   27508:	mov	r1, #8
   2750c:	cmp	r0, #0
   27510:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   27514:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   27518:	mov	r1, #9
   2751c:	cmp	r0, #0
   27520:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   27524:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   27528:	mov	r1, #7
   2752c:	cmp	r0, #0
   27530:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   27534:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   27538:	mov	r1, #3
   2753c:	cmp	r0, #0
   27540:	bne	27554 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x608>
   27544:	b	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   27548:	mov	r1, #11
   2754c:	cmp	r0, #0
   27550:	beq	274cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x580>
   27554:	cmp	r0, #14
   27558:	mov	r3, r0
   2755c:	bne	27574 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x628>
   27560:	mov	r7, #14
   27564:	mov	r8, r1
   27568:	b	27578 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x62c>
   2756c:	mov	r3, #16
   27570:	mov	r9, r0
   27574:	mov	r7, r3
   27578:	mov	r0, r4
   2757c:	mov	r1, #3
   27580:	bl	39a94 <flatcc_builder_start_table@@Base>
   27584:	cmp	r0, #0
   27588:	beq	27594 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x648>
   2758c:	mov	r0, #0
   27590:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   27594:	cmn	r9, #1
   27598:	beq	275bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x670>
   2759c:	mov	r0, r4
   275a0:	mov	r1, #2
   275a4:	mov	r2, #4
   275a8:	mov	r3, #4
   275ac:	bl	3af38 <flatcc_builder_table_add@@Base>
   275b0:	cmp	r0, #0
   275b4:	beq	2758c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   275b8:	str	r9, [r0]
   275bc:	cmp	r7, #0
   275c0:	beq	275e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x698>
   275c4:	mov	r0, r4
   275c8:	mov	r1, #0
   275cc:	mov	r2, #1
   275d0:	mov	r3, #1
   275d4:	bl	3af38 <flatcc_builder_table_add@@Base>
   275d8:	cmp	r0, #0
   275dc:	beq	2758c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   275e0:	strb	r7, [r0]
   275e4:	cmp	r8, #0
   275e8:	beq	2760c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6c0>
   275ec:	mov	r0, r4
   275f0:	mov	r1, #1
   275f4:	mov	r2, #1
   275f8:	mov	r3, #1
   275fc:	bl	3af38 <flatcc_builder_table_add@@Base>
   27600:	cmp	r0, #0
   27604:	beq	2758c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x640>
   27608:	strb	r8, [r0]
   2760c:	ldr	r1, [pc, #64]	; 27654 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x708>
   27610:	mov	r0, r4
   27614:	mov	r2, #0
   27618:	add	r1, pc, r1
   2761c:	bl	3a428 <flatcc_builder_check_required@@Base>
   27620:	cmp	r0, #0
   27624:	beq	27634 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>
   27628:	mov	r0, r4
   2762c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   27630:	b	3a4c4 <flatcc_builder_end_table@@Base>
   27634:	ldr	r0, [pc, #28]	; 27658 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x70c>
   27638:	ldr	r1, [pc, #28]	; 2765c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x710>
   2763c:	ldr	r3, [pc, #28]	; 27660 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x714>
   27640:	mov	r2, #23
   27644:	add	r0, pc, r0
   27648:	add	r1, pc, r1
   2764c:	add	r3, pc, r3
   27650:	bl	14a78 <__assert_fail@plt>
   27654:	andeq	pc, r2, ip, ror #29
   27658:	andeq	pc, r2, lr, ror #13
   2765c:	andeq	pc, r2, r7, ror r7	; <UNPREDICTABLE>
   27660:	andeq	pc, r2, r9, ror #15
   27664:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27668:	add	fp, sp, #28
   2766c:	sub	sp, sp, #12
   27670:	cmp	r2, r1, lsl #1
   27674:	bcs	27680 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x734>
   27678:	sub	sp, fp, #28
   2767c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27680:	mov	r9, r2
   27684:	mov	sl, r0
   27688:	lsl	r4, r1, #1
   2768c:	str	r0, [sp]
   27690:	cmp	r4, r9
   27694:	bcs	27770 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x824>
   27698:	cmp	sl, #0
   2769c:	ldrne	r8, [sl, #-4]
   276a0:	cmpne	r8, r4
   276a4:	bls	2788c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x940>
   276a8:	mov	r0, sl
   276ac:	ldr	r2, [r0, r4, lsl #2]!
   276b0:	adds	r0, r0, r2
   276b4:	beq	278b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x96c>
   276b8:	ldr	r2, [r0]
   276bc:	mov	r3, r0
   276c0:	ldrh	r2, [r3, -r2]!	; <UNPREDICTABLE>
   276c4:	cmp	r2, #6
   276c8:	bcc	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   276cc:	ldrh	ip, [r3, #4]
   276d0:	cmp	ip, #0
   276d4:	beq	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   276d8:	orr	r7, r4, #1
   276dc:	cmp	r8, r7
   276e0:	bls	2788c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x940>
   276e4:	mov	r2, sl
   276e8:	ldr	r3, [r2, r7, lsl #2]!
   276ec:	adds	r3, r2, r3
   276f0:	beq	278b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x96c>
   276f4:	ldr	r6, [r3]
   276f8:	mov	r2, r3
   276fc:	str	r1, [sp, #8]
   27700:	ldrh	r6, [r2, -r6]!	; <UNPREDICTABLE>
   27704:	cmp	r6, #6
   27708:	bcc	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   2770c:	ldrh	r2, [r2, #4]
   27710:	cmp	r2, #0
   27714:	beq	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   27718:	ldr	r1, [r0, ip]!
   2771c:	mov	r5, r9
   27720:	add	r0, r0, r1
   27724:	ldr	r1, [r3, r2]!
   27728:	add	r0, r0, #4
   2772c:	ldr	r6, [r0, #-4]
   27730:	ldr	r9, [r3, r1]!
   27734:	cmp	r6, r9
   27738:	mov	r2, r9
   2773c:	add	r1, r3, #4
   27740:	movcc	r2, r6
   27744:	bl	14a60 <strncmp@plt>
   27748:	cmp	r0, #0
   2774c:	mov	r0, r7
   27750:	ldr	r1, [sp, #8]
   27754:	movne	r0, r4
   27758:	movlt	r0, r7
   2775c:	movne	r4, r0
   27760:	cmp	r6, r9
   27764:	mov	r9, r5
   27768:	movcc	r4, r0
   2776c:	b	2777c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x830>
   27770:	cmp	sl, #0
   27774:	beq	2788c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x940>
   27778:	ldr	r8, [sl, #-4]
   2777c:	mov	r6, r4
   27780:	cmp	r8, r1
   27784:	bls	2788c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x940>
   27788:	mov	r4, sl
   2778c:	ldr	r5, [r4, r1, lsl #2]!
   27790:	adds	r0, r4, r5
   27794:	beq	278b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x96c>
   27798:	ldr	r2, [r0]
   2779c:	mov	r3, r0
   277a0:	ldrh	r2, [r3, -r2]!	; <UNPREDICTABLE>
   277a4:	cmp	r2, #6
   277a8:	bcc	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   277ac:	ldrh	ip, [r3, #4]
   277b0:	cmp	ip, #0
   277b4:	beq	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   277b8:	cmp	r8, r6
   277bc:	bls	2788c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x940>
   277c0:	mov	r7, sl
   277c4:	ldr	r8, [r7, r6, lsl #2]!
   277c8:	adds	r3, r7, r8
   277cc:	beq	278b8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x96c>
   277d0:	stmib	sp, {r5, r6}
   277d4:	mov	r2, r3
   277d8:	ldr	r5, [r3]
   277dc:	ldrh	r5, [r2, -r5]!	; <UNPREDICTABLE>
   277e0:	cmp	r5, #6
   277e4:	bcc	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   277e8:	ldrh	r2, [r2, #4]
   277ec:	cmp	r2, #0
   277f0:	beq	278ac <__flatcc_fb_codegen_bfbs_to_file@@Base+0x960>
   277f4:	mov	r6, r1
   277f8:	ldr	r1, [r0, ip]!
   277fc:	add	r0, r0, r1
   27800:	ldr	r1, [r3, r2]!
   27804:	add	r0, r0, #4
   27808:	ldr	sl, [r0, #-4]
   2780c:	ldr	r5, [r3, r1]!
   27810:	cmp	sl, r5
   27814:	mov	r2, r5
   27818:	add	r1, r3, #4
   2781c:	movcc	r2, sl
   27820:	bl	14a60 <strncmp@plt>
   27824:	cmp	r0, #1
   27828:	mov	r1, #0
   2782c:	mov	r2, #0
   27830:	movwlt	r1, #1
   27834:	cmp	r0, #0
   27838:	movwne	r0, #1
   2783c:	cmp	sl, r5
   27840:	ldr	sl, [sp]
   27844:	movwcc	r2, #1
   27848:	orr	r0, r2, r0
   2784c:	cmp	r0, #1
   27850:	bne	27678 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x72c>
   27854:	cmp	r1, #0
   27858:	beq	27678 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x72c>
   2785c:	ldr	r2, [sp, #8]
   27860:	sub	r0, r6, r2
   27864:	cmp	r9, r2, lsl #1
   27868:	sub	r1, r8, r0, lsl #2
   2786c:	str	r1, [r4]
   27870:	ldr	r1, [sp, #4]
   27874:	lsl	r4, r2, #1
   27878:	add	r0, r1, r0, lsl #2
   2787c:	mov	r1, r2
   27880:	str	r0, [r7]
   27884:	bcs	27690 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x744>
   27888:	b	27678 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x72c>
   2788c:	ldr	r0, [pc, #84]	; 278e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x99c>
   27890:	ldr	r1, [pc, #84]	; 278ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9a0>
   27894:	ldr	r3, [pc, #84]	; 278f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x9a4>
   27898:	mov	r2, #192	; 0xc0
   2789c:	add	r0, pc, r0
   278a0:	add	r1, pc, r1
   278a4:	add	r3, pc, r3
   278a8:	bl	14a78 <__assert_fail@plt>
   278ac:	ldr	r0, [pc, #48]	; 278e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x998>
   278b0:	add	r0, pc, r0
   278b4:	b	278c0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x974>
   278b8:	ldr	r0, [pc, #24]	; 278d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x98c>
   278bc:	add	r0, pc, r0
   278c0:	ldr	r1, [pc, #20]	; 278dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x990>
   278c4:	ldr	r3, [pc, #20]	; 278e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x994>
   278c8:	mov	r2, #195	; 0xc3
   278cc:	add	r1, pc, r1
   278d0:	add	r3, pc, r3
   278d4:	bl	14a78 <__assert_fail@plt>
   278d8:	strdeq	pc, [r2], -r4
   278dc:	andeq	pc, r2, sl, lsl #20
   278e0:	andeq	pc, r2, fp, ror #22
   278e4:	andeq	pc, r2, r8, ror #21
   278e8:	andeq	pc, r2, sp, lsl fp	; <UNPREDICTABLE>
   278ec:	andeq	pc, r2, r6, lsr sl	; <UNPREDICTABLE>
   278f0:	ldrdeq	pc, [r2], -ip

000278f4 <str_set_clear@@Base>:
   278f4:	push	{r4, sl, fp, lr}
   278f8:	add	fp, sp, #8
   278fc:	mov	r4, r0
   27900:	ldr	r0, [r0]
   27904:	cmp	r0, #0
   27908:	beq	27910 <str_set_clear@@Base+0x1c>
   2790c:	bl	148f8 <free@plt>
   27910:	vmov.i32	q8, #0	; 0x00000000
   27914:	vst1.32	{d16-d17}, [r4]
   27918:	pop	{r4, sl, fp, pc}

0002791c <str_set_destroy@@Base>:
   2791c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   27920:	add	fp, sp, #24
   27924:	mov	r4, r0
   27928:	cmp	r1, #0
   2792c:	ldrne	r0, [r4, #12]
   27930:	cmpne	r0, #0
   27934:	beq	27970 <str_set_destroy@@Base+0x54>
   27938:	ldr	r7, [r4]
   2793c:	mov	r8, r2
   27940:	mov	r6, r1
   27944:	mov	r5, #0
   27948:	ldr	r1, [r7, r5, lsl #2]
   2794c:	orr	r2, r1, #2
   27950:	cmp	r2, #2
   27954:	beq	27964 <str_set_destroy@@Base+0x48>
   27958:	mov	r0, r8
   2795c:	blx	r6
   27960:	ldr	r0, [r4, #12]
   27964:	add	r5, r5, #1
   27968:	cmp	r5, r0
   2796c:	bcc	27948 <str_set_destroy@@Base+0x2c>
   27970:	ldr	r0, [r4]
   27974:	cmp	r0, #0
   27978:	beq	27980 <str_set_destroy@@Base+0x64>
   2797c:	bl	148f8 <free@plt>
   27980:	vmov.i32	q8, #0	; 0x00000000
   27984:	vst1.32	{d16-d17}, [r4]
   27988:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002798c <str_set_init@@Base>:
   2798c:	push	{r4, r5, fp, lr}
   27990:	add	fp, sp, #8
   27994:	mov	r4, r0
   27998:	mov	r2, #4
   2799c:	mov	r0, #179	; 0xb3
   279a0:	mul	r3, r2, r0
   279a4:	mov	r5, r2
   279a8:	lsl	r2, r2, #1
   279ac:	cmp	r1, r3, lsr #8
   279b0:	bhi	279a0 <str_set_init@@Base+0x14>
   279b4:	mov	r0, r5
   279b8:	mov	r1, #4
   279bc:	bl	148c8 <calloc@plt>
   279c0:	cmp	r0, #0
   279c4:	str	r0, [r4]
   279c8:	movne	r0, #0
   279cc:	strne	r0, [r4, #4]
   279d0:	strne	r0, [r4, #8]
   279d4:	strne	r5, [r4, #12]
   279d8:	popne	{r4, r5, fp, pc}
   279dc:	mvn	r0, #0
   279e0:	pop	{r4, r5, fp, pc}

000279e4 <str_set_resize@@Base>:
   279e4:	b	279e8 <str_set_resize@@Base+0x4>
   279e8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   279ec:	add	fp, sp, #24
   279f0:	sub	sp, sp, #24
   279f4:	mov	r4, r0
   279f8:	ldr	r5, [r0]
   279fc:	ldr	r0, [r0, #8]
   27a00:	mov	r2, #4
   27a04:	cmp	r0, r1
   27a08:	movhi	r1, r0
   27a0c:	mov	r0, #179	; 0xb3
   27a10:	mul	r3, r2, r0
   27a14:	mov	r6, r2
   27a18:	lsl	r2, r2, #1
   27a1c:	cmp	r1, r3, lsr #8
   27a20:	bhi	27a10 <str_set_resize@@Base+0x2c>
   27a24:	mov	r0, r6
   27a28:	mov	r1, #4
   27a2c:	bl	148c8 <calloc@plt>
   27a30:	cmp	r0, #0
   27a34:	str	r0, [sp, #8]
   27a38:	mvneq	r0, #0
   27a3c:	subeq	sp, fp, #24
   27a40:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   27a44:	str	r6, [sp, #20]
   27a48:	mov	r6, #0
   27a4c:	str	r6, [sp, #12]
   27a50:	str	r6, [sp, #16]
   27a54:	ldr	r0, [r4, #12]
   27a58:	cmp	r0, #0
   27a5c:	beq	27aac <str_set_resize@@Base+0xc8>
   27a60:	mov	r9, #3
   27a64:	add	r8, sp, #8
   27a68:	ldr	r7, [r5, r6, lsl #2]
   27a6c:	orr	r1, r7, #2
   27a70:	cmp	r1, #2
   27a74:	beq	27a9c <str_set_resize@@Base+0xb8>
   27a78:	mov	r0, r7
   27a7c:	bl	149a0 <strlen@plt>
   27a80:	mov	r2, r0
   27a84:	mov	r0, r8
   27a88:	mov	r1, r7
   27a8c:	mov	r3, r7
   27a90:	str	r9, [sp]
   27a94:	bl	27ad8 <str_set_insert@@Base+0x4>
   27a98:	ldr	r0, [r4, #12]
   27a9c:	add	r6, r6, #1
   27aa0:	cmp	r6, r0
   27aa4:	bcc	27a68 <str_set_resize@@Base+0x84>
   27aa8:	ldr	r5, [r4]
   27aac:	cmp	r5, #0
   27ab0:	beq	27abc <str_set_resize@@Base+0xd8>
   27ab4:	mov	r0, r5
   27ab8:	bl	148f8 <free@plt>
   27abc:	add	r0, sp, #8
   27ac0:	vld1.64	{d16-d17}, [r0]
   27ac4:	mov	r0, #0
   27ac8:	vst1.32	{d16-d17}, [r4]
   27acc:	sub	sp, fp, #24
   27ad0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027ad4 <str_set_insert@@Base>:
   27ad4:	b	27ad8 <str_set_insert@@Base+0x4>
   27ad8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27adc:	add	fp, sp, #28
   27ae0:	sub	sp, sp, #36	; 0x24
   27ae4:	cmp	r3, #2
   27ae8:	str	r2, [sp, #20]
   27aec:	beq	27c54 <str_set_insert@@Base+0x180>
   27af0:	mov	sl, r3
   27af4:	cmp	r3, #1
   27af8:	beq	27c74 <str_set_insert@@Base+0x1a0>
   27afc:	cmp	sl, #0
   27b00:	beq	27c94 <str_set_insert@@Base+0x1c0>
   27b04:	mov	r5, r0
   27b08:	ldr	r0, [r0, #8]
   27b0c:	mov	r7, r1
   27b10:	mov	r1, #179	; 0xb3
   27b14:	ldr	r4, [r5, #12]
   27b18:	mul	r1, r4, r1
   27b1c:	cmp	r0, r1, lsr #8
   27b20:	bcc	27b3c <str_set_insert@@Base+0x68>
   27b24:	lsl	r1, r0, #1
   27b28:	mov	r0, r5
   27b2c:	bl	279e8 <str_set_resize@@Base+0x4>
   27b30:	cmp	r0, #0
   27b34:	bne	27cb4 <str_set_insert@@Base+0x1e0>
   27b38:	ldr	r4, [r5, #12]
   27b3c:	ldr	r2, [sp, #20]
   27b40:	ldr	r9, [r5]
   27b44:	movw	r1, #15186	; 0x3b52
   27b48:	add	r0, sp, #24
   27b4c:	mov	r3, #0
   27b50:	mov	r8, #0
   27b54:	movt	r1, #12137	; 0x2f69
   27b58:	str	r0, [sp, #4]
   27b5c:	mov	r0, r7
   27b60:	str	r1, [sp]
   27b64:	bl	3c888 <cmetrohash64_1@@Base>
   27b68:	ldr	r2, [fp, #8]
   27b6c:	ldr	r1, [sp, #24]
   27b70:	sub	r6, r4, #1
   27b74:	orr	r2, r2, #1
   27b78:	and	r0, r6, r1
   27b7c:	cmp	r2, #3
   27b80:	bne	27bb8 <str_set_insert@@Base+0xe4>
   27b84:	ldr	r2, [r5, #8]
   27b88:	add	r2, r2, #1
   27b8c:	str	r2, [r5, #8]
   27b90:	b	27b98 <str_set_insert@@Base+0xc4>
   27b94:	and	r0, r1, r6
   27b98:	mov	r5, r9
   27b9c:	add	r1, r1, #1
   27ba0:	ldr	r0, [r5, r0, lsl #2]!
   27ba4:	orr	r0, r0, #2
   27ba8:	cmp	r0, #2
   27bac:	bne	27b94 <str_set_insert@@Base+0xc0>
   27bb0:	mov	r4, #0
   27bb4:	b	27c30 <str_set_insert@@Base+0x15c>
   27bb8:	str	sl, [sp, #16]
   27bbc:	add	sl, r1, #1
   27bc0:	str	r5, [sp, #12]
   27bc4:	b	27bd0 <str_set_insert@@Base+0xfc>
   27bc8:	and	r0, sl, r6
   27bcc:	add	sl, sl, #1
   27bd0:	mov	r5, r9
   27bd4:	ldr	r4, [r5, r0, lsl #2]!
   27bd8:	cmp	r4, #2
   27bdc:	beq	27c04 <str_set_insert@@Base+0x130>
   27be0:	cmp	r4, #0
   27be4:	beq	27c10 <str_set_insert@@Base+0x13c>
   27be8:	ldr	r2, [sp, #20]
   27bec:	mov	r0, r7
   27bf0:	mov	r1, r4
   27bf4:	bl	14a60 <strncmp@plt>
   27bf8:	cmp	r0, #0
   27bfc:	bne	27bc8 <str_set_insert@@Base+0xf4>
   27c00:	b	27c40 <str_set_insert@@Base+0x16c>
   27c04:	cmp	r8, #0
   27c08:	moveq	r8, r5
   27c0c:	b	27bc8 <str_set_insert@@Base+0xf4>
   27c10:	ldr	r1, [sp, #12]
   27c14:	ldr	sl, [sp, #16]
   27c18:	cmp	r8, #0
   27c1c:	mov	r4, #0
   27c20:	movne	r5, r8
   27c24:	ldr	r0, [r1, #8]
   27c28:	add	r0, r0, #1
   27c2c:	str	r0, [r1, #8]
   27c30:	str	sl, [r5]
   27c34:	mov	r0, r4
   27c38:	sub	sp, fp, #28
   27c3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c40:	ldr	r0, [fp, #8]
   27c44:	ldr	sl, [sp, #16]
   27c48:	cmp	r0, #0
   27c4c:	streq	sl, [r5]
   27c50:	b	27c34 <str_set_insert@@Base+0x160>
   27c54:	ldr	r0, [pc, #140]	; 27ce8 <str_set_insert@@Base+0x214>
   27c58:	ldr	r1, [pc, #140]	; 27cec <str_set_insert@@Base+0x218>
   27c5c:	ldr	r3, [pc, #140]	; 27cf0 <str_set_insert@@Base+0x21c>
   27c60:	mov	r2, #115	; 0x73
   27c64:	add	r0, pc, r0
   27c68:	add	r1, pc, r1
   27c6c:	add	r3, pc, r3
   27c70:	bl	14a78 <__assert_fail@plt>
   27c74:	ldr	r0, [pc, #120]	; 27cf4 <str_set_insert@@Base+0x220>
   27c78:	ldr	r1, [pc, #120]	; 27cf8 <str_set_insert@@Base+0x224>
   27c7c:	ldr	r3, [pc, #120]	; 27cfc <str_set_insert@@Base+0x228>
   27c80:	mov	r2, #116	; 0x74
   27c84:	add	r0, pc, r0
   27c88:	add	r1, pc, r1
   27c8c:	add	r3, pc, r3
   27c90:	bl	14a78 <__assert_fail@plt>
   27c94:	ldr	r0, [pc, #64]	; 27cdc <str_set_insert@@Base+0x208>
   27c98:	ldr	r1, [pc, #64]	; 27ce0 <str_set_insert@@Base+0x20c>
   27c9c:	ldr	r3, [pc, #64]	; 27ce4 <str_set_insert@@Base+0x210>
   27ca0:	mov	r2, #114	; 0x72
   27ca4:	add	r0, pc, r0
   27ca8:	add	r1, pc, r1
   27cac:	add	r3, pc, r3
   27cb0:	bl	14a78 <__assert_fail@plt>
   27cb4:	ldr	r0, [pc, #68]	; 27d00 <str_set_insert@@Base+0x22c>
   27cb8:	ldr	r0, [pc, r0]
   27cbc:	ldr	r0, [r0]
   27cc0:	ldr	r1, [pc, #60]	; 27d04 <str_set_insert@@Base+0x230>
   27cc4:	ldr	r2, [pc, #60]	; 27d08 <str_set_insert@@Base+0x234>
   27cc8:	add	r1, pc, r1
   27ccc:	add	r2, pc, r2
   27cd0:	bl	149b8 <fprintf@plt>
   27cd4:	mov	r0, #1
   27cd8:	bl	14994 <exit@plt>
   27cdc:	andeq	pc, r2, r0, asr #17
   27ce0:	ldrdeq	pc, [r2], -r3
   27ce4:	andeq	pc, r2, r6, lsr r9	; <UNPREDICTABLE>
   27ce8:	andeq	pc, r2, r8, asr #19
   27cec:	andeq	pc, r2, r3, lsl r9	; <UNPREDICTABLE>
   27cf0:	andeq	pc, r2, r6, ror r9	; <UNPREDICTABLE>
   27cf4:			; <UNDEFINED> instruction: 0x0002f9bf
   27cf8:	strdeq	pc, [r2], -r3
   27cfc:	andeq	pc, r2, r6, asr r9	; <UNPREDICTABLE>
   27d00:	andeq	r4, r4, r4, ror #7
   27d04:	muleq	r2, r0, r9
   27d08:	andeq	pc, r2, r3, lsr #19

00027d0c <str_set_insert_item@@Base>:
   27d0c:	push	{r4, r5, r6, sl, fp, lr}
   27d10:	add	fp, sp, #16
   27d14:	sub	sp, sp, #8
   27d18:	mov	r6, r0
   27d1c:	mov	r0, r1
   27d20:	mov	r4, r2
   27d24:	mov	r5, r1
   27d28:	bl	149a0 <strlen@plt>
   27d2c:	mov	r2, r0
   27d30:	mov	r0, r6
   27d34:	mov	r1, r5
   27d38:	mov	r3, r5
   27d3c:	str	r4, [sp]
   27d40:	bl	27ad8 <str_set_insert@@Base+0x4>
   27d44:	sub	sp, fp, #16
   27d48:	pop	{r4, r5, r6, sl, fp, pc}

00027d4c <str_set_find@@Base>:
   27d4c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27d50:	add	fp, sp, #24
   27d54:	sub	sp, sp, #16
   27d58:	ldr	r7, [r0]
   27d5c:	cmp	r7, #0
   27d60:	beq	27dd4 <str_set_find@@Base+0x88>
   27d64:	ldr	r5, [r0, #12]
   27d68:	mov	r9, r1
   27d6c:	movw	r1, #15186	; 0x3b52
   27d70:	add	r0, sp, #8
   27d74:	mov	r3, #0
   27d78:	mov	r8, r2
   27d7c:	movt	r1, #12137	; 0x2f69
   27d80:	str	r0, [sp, #4]
   27d84:	mov	r0, r9
   27d88:	str	r1, [sp]
   27d8c:	bl	3c888 <cmetrohash64_1@@Base>
   27d90:	ldr	r4, [sp, #8]
   27d94:	sub	r5, r5, #1
   27d98:	b	27da0 <str_set_find@@Base+0x54>
   27d9c:	add	r4, r4, #1
   27da0:	and	r0, r4, r5
   27da4:	ldr	r6, [r7, r0, lsl #2]
   27da8:	cmp	r6, #2
   27dac:	beq	27d9c <str_set_find@@Base+0x50>
   27db0:	cmp	r6, #0
   27db4:	beq	27dd4 <str_set_find@@Base+0x88>
   27db8:	mov	r0, r9
   27dbc:	mov	r1, r6
   27dc0:	mov	r2, r8
   27dc4:	bl	14a60 <strncmp@plt>
   27dc8:	cmp	r0, #0
   27dcc:	bne	27d9c <str_set_find@@Base+0x50>
   27dd0:	b	27dd8 <str_set_find@@Base+0x8c>
   27dd4:	mov	r6, #0
   27dd8:	mov	r0, r6
   27ddc:	sub	sp, fp, #24
   27de0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027de4 <str_set_find_item@@Base>:
   27de4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   27de8:	add	fp, sp, #24
   27dec:	sub	sp, sp, #16
   27df0:	mov	r6, r0
   27df4:	mov	r0, r1
   27df8:	mov	r9, r1
   27dfc:	bl	149a0 <strlen@plt>
   27e00:	ldr	r7, [r6]
   27e04:	cmp	r7, #0
   27e08:	beq	27e7c <str_set_find_item@@Base+0x98>
   27e0c:	ldr	r4, [r6, #12]
   27e10:	mov	r8, r0
   27e14:	movw	r1, #15186	; 0x3b52
   27e18:	add	r0, sp, #8
   27e1c:	mov	r3, #0
   27e20:	movt	r1, #12137	; 0x2f69
   27e24:	str	r0, [sp, #4]
   27e28:	mov	r0, r9
   27e2c:	mov	r2, r8
   27e30:	str	r1, [sp]
   27e34:	bl	3c888 <cmetrohash64_1@@Base>
   27e38:	ldr	r5, [sp, #8]
   27e3c:	sub	r4, r4, #1
   27e40:	b	27e48 <str_set_find_item@@Base+0x64>
   27e44:	add	r5, r5, #1
   27e48:	and	r0, r5, r4
   27e4c:	ldr	r6, [r7, r0, lsl #2]
   27e50:	cmp	r6, #2
   27e54:	beq	27e44 <str_set_find_item@@Base+0x60>
   27e58:	cmp	r6, #0
   27e5c:	beq	27e7c <str_set_find_item@@Base+0x98>
   27e60:	mov	r0, r9
   27e64:	mov	r1, r6
   27e68:	mov	r2, r8
   27e6c:	bl	14a60 <strncmp@plt>
   27e70:	cmp	r0, #0
   27e74:	bne	27e44 <str_set_find_item@@Base+0x60>
   27e78:	b	27e80 <str_set_find_item@@Base+0x9c>
   27e7c:	mov	r6, #0
   27e80:	mov	r0, r6
   27e84:	sub	sp, fp, #24
   27e88:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00027e8c <str_set_remove@@Base>:
   27e8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27e90:	add	fp, sp, #28
   27e94:	sub	sp, sp, #28
   27e98:	ldr	r4, [r0]
   27e9c:	cmp	r4, #0
   27ea0:	beq	27f30 <str_set_remove@@Base+0xa4>
   27ea4:	ldr	r6, [r0, #12]
   27ea8:	mov	sl, r1
   27eac:	movw	r1, #15186	; 0x3b52
   27eb0:	str	r0, [sp, #12]
   27eb4:	add	r0, sp, #16
   27eb8:	mov	r3, #0
   27ebc:	mov	r9, r2
   27ec0:	movt	r1, #12137	; 0x2f69
   27ec4:	str	r0, [sp, #4]
   27ec8:	mov	r0, sl
   27ecc:	str	r1, [sp]
   27ed0:	bl	3c888 <cmetrohash64_1@@Base>
   27ed4:	ldr	r5, [sp, #16]
   27ed8:	sub	r6, r6, #1
   27edc:	b	27ee4 <str_set_remove@@Base+0x58>
   27ee0:	add	r5, r5, #1
   27ee4:	and	r8, r5, r6
   27ee8:	ldr	r7, [r4, r8, lsl #2]
   27eec:	cmp	r7, #2
   27ef0:	beq	27ee0 <str_set_remove@@Base+0x54>
   27ef4:	cmp	r7, #0
   27ef8:	beq	27f30 <str_set_remove@@Base+0xa4>
   27efc:	mov	r0, sl
   27f00:	mov	r1, r7
   27f04:	mov	r2, r9
   27f08:	bl	14a60 <strncmp@plt>
   27f0c:	cmp	r0, #0
   27f10:	bne	27ee0 <str_set_remove@@Base+0x54>
   27f14:	ldr	r1, [sp, #12]
   27f18:	mov	r0, #2
   27f1c:	str	r0, [r4, r8, lsl #2]
   27f20:	ldr	r0, [r1, #8]
   27f24:	sub	r0, r0, #1
   27f28:	str	r0, [r1, #8]
   27f2c:	b	27f34 <str_set_remove@@Base+0xa8>
   27f30:	mov	r7, #0
   27f34:	mov	r0, r7
   27f38:	sub	sp, fp, #28
   27f3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00027f40 <str_set_remove_item@@Base>:
   27f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27f44:	add	fp, sp, #28
   27f48:	sub	sp, sp, #28
   27f4c:	mov	r5, r0
   27f50:	mov	r0, r1
   27f54:	mov	sl, r1
   27f58:	bl	149a0 <strlen@plt>
   27f5c:	ldr	r4, [r5]
   27f60:	cmp	r4, #0
   27f64:	beq	27ff4 <str_set_remove_item@@Base+0xb4>
   27f68:	str	r5, [sp, #12]
   27f6c:	ldr	r5, [r5, #12]
   27f70:	mov	r9, r0
   27f74:	movw	r1, #15186	; 0x3b52
   27f78:	add	r0, sp, #16
   27f7c:	mov	r3, #0
   27f80:	movt	r1, #12137	; 0x2f69
   27f84:	str	r0, [sp, #4]
   27f88:	mov	r0, sl
   27f8c:	mov	r2, r9
   27f90:	str	r1, [sp]
   27f94:	bl	3c888 <cmetrohash64_1@@Base>
   27f98:	ldr	r6, [sp, #16]
   27f9c:	sub	r5, r5, #1
   27fa0:	b	27fa8 <str_set_remove_item@@Base+0x68>
   27fa4:	add	r6, r6, #1
   27fa8:	and	r8, r6, r5
   27fac:	ldr	r7, [r4, r8, lsl #2]
   27fb0:	cmp	r7, #2
   27fb4:	beq	27fa4 <str_set_remove_item@@Base+0x64>
   27fb8:	cmp	r7, #0
   27fbc:	beq	27ff4 <str_set_remove_item@@Base+0xb4>
   27fc0:	mov	r0, sl
   27fc4:	mov	r1, r7
   27fc8:	mov	r2, r9
   27fcc:	bl	14a60 <strncmp@plt>
   27fd0:	cmp	r0, #0
   27fd4:	bne	27fa4 <str_set_remove_item@@Base+0x64>
   27fd8:	ldr	r1, [sp, #12]
   27fdc:	mov	r0, #2
   27fe0:	str	r0, [r4, r8, lsl #2]
   27fe4:	ldr	r0, [r1, #8]
   27fe8:	sub	r0, r0, #1
   27fec:	str	r0, [r1, #8]
   27ff0:	b	27ff8 <str_set_remove_item@@Base+0xb8>
   27ff4:	mov	r7, #0
   27ff8:	mov	r0, r7
   27ffc:	sub	sp, fp, #28
   28000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028004 <str_set_visit@@Base>:
   28004:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28008:	add	fp, sp, #24
   2800c:	mov	r6, r0
   28010:	ldr	r0, [r0, #12]
   28014:	cmp	r0, #0
   28018:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2801c:	ldr	r7, [r6]
   28020:	mov	r8, r2
   28024:	mov	r5, r1
   28028:	mov	r4, #0
   2802c:	ldr	r1, [r7, r4, lsl #2]
   28030:	orr	r2, r1, #2
   28034:	cmp	r2, #2
   28038:	beq	28048 <str_set_visit@@Base+0x44>
   2803c:	mov	r0, r8
   28040:	blx	r5
   28044:	ldr	r0, [r6, #12]
   28048:	add	r4, r4, #1
   2804c:	cmp	r4, r0
   28050:	bcc	2802c <str_set_visit@@Base+0x28>
   28054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028058 <ptr_set_clear@@Base>:
   28058:	push	{r4, sl, fp, lr}
   2805c:	add	fp, sp, #8
   28060:	mov	r4, r0
   28064:	ldr	r0, [r0]
   28068:	cmp	r0, #0
   2806c:	beq	28074 <ptr_set_clear@@Base+0x1c>
   28070:	bl	148f8 <free@plt>
   28074:	vmov.i32	q8, #0	; 0x00000000
   28078:	vst1.32	{d16-d17}, [r4]
   2807c:	pop	{r4, sl, fp, pc}

00028080 <ptr_set_destroy@@Base>:
   28080:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28084:	add	fp, sp, #24
   28088:	mov	r4, r0
   2808c:	cmp	r1, #0
   28090:	ldrne	r0, [r4, #12]
   28094:	cmpne	r0, #0
   28098:	beq	280d4 <ptr_set_destroy@@Base+0x54>
   2809c:	ldr	r7, [r4]
   280a0:	mov	r8, r2
   280a4:	mov	r6, r1
   280a8:	mov	r5, #0
   280ac:	ldr	r1, [r7, r5, lsl #2]
   280b0:	orr	r2, r1, #2
   280b4:	cmp	r2, #2
   280b8:	beq	280c8 <ptr_set_destroy@@Base+0x48>
   280bc:	mov	r0, r8
   280c0:	blx	r6
   280c4:	ldr	r0, [r4, #12]
   280c8:	add	r5, r5, #1
   280cc:	cmp	r5, r0
   280d0:	bcc	280ac <ptr_set_destroy@@Base+0x2c>
   280d4:	ldr	r0, [r4]
   280d8:	cmp	r0, #0
   280dc:	beq	280e4 <ptr_set_destroy@@Base+0x64>
   280e0:	bl	148f8 <free@plt>
   280e4:	vmov.i32	q8, #0	; 0x00000000
   280e8:	vst1.32	{d16-d17}, [r4]
   280ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000280f0 <ptr_set_init@@Base>:
   280f0:	push	{r4, r5, fp, lr}
   280f4:	add	fp, sp, #8
   280f8:	mov	r4, r0
   280fc:	mov	r2, #4
   28100:	mov	r0, #179	; 0xb3
   28104:	mul	r3, r2, r0
   28108:	mov	r5, r2
   2810c:	lsl	r2, r2, #1
   28110:	cmp	r1, r3, lsr #8
   28114:	bhi	28104 <ptr_set_init@@Base+0x14>
   28118:	mov	r0, r5
   2811c:	mov	r1, #4
   28120:	bl	148c8 <calloc@plt>
   28124:	cmp	r0, #0
   28128:	str	r0, [r4]
   2812c:	movne	r0, #0
   28130:	strne	r0, [r4, #4]
   28134:	strne	r0, [r4, #8]
   28138:	strne	r5, [r4, #12]
   2813c:	popne	{r4, r5, fp, pc}
   28140:	mvn	r0, #0
   28144:	pop	{r4, r5, fp, pc}

00028148 <ptr_set_resize@@Base>:
   28148:	b	2814c <ptr_set_resize@@Base+0x4>
   2814c:	push	{r4, r5, r6, r7, fp, lr}
   28150:	add	fp, sp, #16
   28154:	sub	sp, sp, #16
   28158:	mov	r4, r0
   2815c:	ldr	r5, [r0]
   28160:	ldr	r0, [r0, #8]
   28164:	mov	r2, #4
   28168:	cmp	r0, r1
   2816c:	movhi	r1, r0
   28170:	mov	r0, #179	; 0xb3
   28174:	mul	r3, r2, r0
   28178:	mov	r6, r2
   2817c:	lsl	r2, r2, #1
   28180:	cmp	r1, r3, lsr #8
   28184:	bhi	28174 <ptr_set_resize@@Base+0x2c>
   28188:	mov	r0, r6
   2818c:	mov	r1, #4
   28190:	bl	148c8 <calloc@plt>
   28194:	cmp	r0, #0
   28198:	str	r0, [sp]
   2819c:	mvneq	r0, #0
   281a0:	subeq	sp, fp, #16
   281a4:	popeq	{r4, r5, r6, r7, fp, pc}
   281a8:	mov	r7, #0
   281ac:	str	r6, [sp, #12]
   281b0:	str	r7, [sp, #4]
   281b4:	str	r7, [sp, #8]
   281b8:	ldr	r0, [r4, #12]
   281bc:	cmp	r0, #0
   281c0:	beq	281fc <ptr_set_resize@@Base+0xb4>
   281c4:	mov	r6, sp
   281c8:	ldr	r1, [r5, r7, lsl #2]
   281cc:	orr	r2, r1, #2
   281d0:	cmp	r2, #2
   281d4:	beq	281ec <ptr_set_resize@@Base+0xa4>
   281d8:	mov	r0, r6
   281dc:	mov	r2, r1
   281e0:	mov	r3, #3
   281e4:	bl	28230 <ptr_set_insert@@Base+0xc>
   281e8:	ldr	r0, [r4, #12]
   281ec:	add	r7, r7, #1
   281f0:	cmp	r7, r0
   281f4:	bcc	281c8 <ptr_set_resize@@Base+0x80>
   281f8:	ldr	r5, [r4]
   281fc:	cmp	r5, #0
   28200:	beq	2820c <ptr_set_resize@@Base+0xc4>
   28204:	mov	r0, r5
   28208:	bl	148f8 <free@plt>
   2820c:	mov	r0, sp
   28210:	vld1.64	{d16-d17}, [r0]
   28214:	mov	r0, #0
   28218:	vst1.32	{d16-d17}, [r4]
   2821c:	sub	sp, fp, #16
   28220:	pop	{r4, r5, r6, r7, fp, pc}

00028224 <ptr_set_insert@@Base>:
   28224:	mov	r2, r3
   28228:	ldr	r3, [sp]
   2822c:	b	28230 <ptr_set_insert@@Base+0xc>
   28230:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28234:	add	fp, sp, #28
   28238:	sub	sp, sp, #28
   2823c:	cmp	r2, #2
   28240:	beq	28384 <ptr_set_insert@@Base+0x160>
   28244:	mov	r9, r2
   28248:	cmp	r2, #1
   2824c:	beq	283a4 <ptr_set_insert@@Base+0x180>
   28250:	cmp	r9, #0
   28254:	beq	283c4 <ptr_set_insert@@Base+0x1a0>
   28258:	mov	sl, r0
   2825c:	ldr	r0, [r0, #8]
   28260:	mov	r5, r1
   28264:	mov	r1, #179	; 0xb3
   28268:	mov	r8, r3
   2826c:	ldr	r6, [sl, #12]
   28270:	mul	r1, r6, r1
   28274:	cmp	r0, r1, lsr #8
   28278:	bcc	28294 <ptr_set_insert@@Base+0x70>
   2827c:	lsl	r1, r0, #1
   28280:	mov	r0, sl
   28284:	bl	2814c <ptr_set_resize@@Base+0x4>
   28288:	cmp	r0, #0
   2828c:	bne	283e4 <ptr_set_insert@@Base+0x1c0>
   28290:	ldr	r6, [sl, #12]
   28294:	ldr	r7, [sl]
   28298:	movw	r1, #15186	; 0x3b52
   2829c:	add	r0, sp, #16
   282a0:	mov	r2, #4
   282a4:	mov	r3, #0
   282a8:	str	r5, [sp, #12]
   282ac:	mov	r4, #0
   282b0:	movt	r1, #12137	; 0x2f69
   282b4:	str	r0, [sp, #4]
   282b8:	add	r0, sp, #12
   282bc:	str	r1, [sp]
   282c0:	bl	3c888 <cmetrohash64_1@@Base>
   282c4:	ldr	r1, [sp, #16]
   282c8:	sub	r0, r6, #1
   282cc:	orr	r3, r8, #1
   282d0:	cmp	r3, #3
   282d4:	and	r2, r0, r1
   282d8:	bne	28310 <ptr_set_insert@@Base+0xec>
   282dc:	ldr	r3, [sl, #8]
   282e0:	add	r3, r3, #1
   282e4:	str	r3, [sl, #8]
   282e8:	add	r3, r1, #1
   282ec:	b	282f8 <ptr_set_insert@@Base+0xd4>
   282f0:	and	r2, r3, r0
   282f4:	add	r3, r3, #1
   282f8:	mov	r1, r7
   282fc:	ldr	r2, [r1, r2, lsl #2]!
   28300:	orr	r2, r2, #2
   28304:	cmp	r2, #2
   28308:	bne	282f0 <ptr_set_insert@@Base+0xcc>
   2830c:	b	28364 <ptr_set_insert@@Base+0x140>
   28310:	add	r3, r1, #1
   28314:	b	28320 <ptr_set_insert@@Base+0xfc>
   28318:	and	r2, r3, r0
   2831c:	add	r3, r3, #1
   28320:	mov	r1, r7
   28324:	ldr	r2, [r1, r2, lsl #2]!
   28328:	cmp	r2, #2
   2832c:	beq	28344 <ptr_set_insert@@Base+0x120>
   28330:	cmp	r2, #0
   28334:	beq	28350 <ptr_set_insert@@Base+0x12c>
   28338:	cmp	r2, r5
   2833c:	bne	28318 <ptr_set_insert@@Base+0xf4>
   28340:	b	28378 <ptr_set_insert@@Base+0x154>
   28344:	cmp	r4, #0
   28348:	moveq	r4, r1
   2834c:	b	28318 <ptr_set_insert@@Base+0xf4>
   28350:	ldr	r0, [sl, #8]
   28354:	cmp	r4, #0
   28358:	movne	r1, r4
   2835c:	add	r0, r0, #1
   28360:	str	r0, [sl, #8]
   28364:	mov	r5, #0
   28368:	str	r9, [r1]
   2836c:	mov	r0, r5
   28370:	sub	sp, fp, #28
   28374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28378:	cmp	r8, #0
   2837c:	streq	r9, [r1]
   28380:	b	2836c <ptr_set_insert@@Base+0x148>
   28384:	ldr	r0, [pc, #140]	; 28418 <ptr_set_insert@@Base+0x1f4>
   28388:	ldr	r1, [pc, #140]	; 2841c <ptr_set_insert@@Base+0x1f8>
   2838c:	ldr	r3, [pc, #140]	; 28420 <ptr_set_insert@@Base+0x1fc>
   28390:	mov	r2, #115	; 0x73
   28394:	add	r0, pc, r0
   28398:	add	r1, pc, r1
   2839c:	add	r3, pc, r3
   283a0:	bl	14a78 <__assert_fail@plt>
   283a4:	ldr	r0, [pc, #120]	; 28424 <ptr_set_insert@@Base+0x200>
   283a8:	ldr	r1, [pc, #120]	; 28428 <ptr_set_insert@@Base+0x204>
   283ac:	ldr	r3, [pc, #120]	; 2842c <ptr_set_insert@@Base+0x208>
   283b0:	mov	r2, #116	; 0x74
   283b4:	add	r0, pc, r0
   283b8:	add	r1, pc, r1
   283bc:	add	r3, pc, r3
   283c0:	bl	14a78 <__assert_fail@plt>
   283c4:	ldr	r0, [pc, #64]	; 2840c <ptr_set_insert@@Base+0x1e8>
   283c8:	ldr	r1, [pc, #64]	; 28410 <ptr_set_insert@@Base+0x1ec>
   283cc:	ldr	r3, [pc, #64]	; 28414 <ptr_set_insert@@Base+0x1f0>
   283d0:	mov	r2, #114	; 0x72
   283d4:	add	r0, pc, r0
   283d8:	add	r1, pc, r1
   283dc:	add	r3, pc, r3
   283e0:	bl	14a78 <__assert_fail@plt>
   283e4:	ldr	r0, [pc, #68]	; 28430 <ptr_set_insert@@Base+0x20c>
   283e8:	ldr	r0, [pc, r0]
   283ec:	ldr	r0, [r0]
   283f0:	ldr	r1, [pc, #60]	; 28434 <ptr_set_insert@@Base+0x210>
   283f4:	ldr	r2, [pc, #60]	; 28438 <ptr_set_insert@@Base+0x214>
   283f8:	add	r1, pc, r1
   283fc:	add	r2, pc, r2
   28400:	bl	149b8 <fprintf@plt>
   28404:	mov	r0, #1
   28408:	bl	14994 <exit@plt>
   2840c:	muleq	r2, r0, r1
   28410:	andeq	pc, r2, r3, lsr #3
   28414:	andeq	pc, r2, r6, lsl #4
   28418:	muleq	r2, r8, r2
   2841c:	andeq	pc, r2, r3, ror #3
   28420:	andeq	pc, r2, r6, asr #4
   28424:	andeq	pc, r2, pc, lsl #5
   28428:	andeq	pc, r2, r3, asr #3
   2842c:	andeq	pc, r2, r6, lsr #4
   28430:			; <UNDEFINED> instruction: 0x00043cb4
   28434:	andeq	pc, r2, r0, ror #4
   28438:	andeq	pc, r2, r3, ror r2	; <UNPREDICTABLE>

0002843c <ptr_set_insert_item@@Base>:
   2843c:	mov	r3, r2
   28440:	mov	r2, r1
   28444:	b	28230 <ptr_set_insert@@Base+0xc>

00028448 <ptr_set_find@@Base>:
   28448:	push	{r4, r5, r6, r7, fp, lr}
   2844c:	add	fp, sp, #16
   28450:	sub	sp, sp, #24
   28454:	ldr	r6, [r0]
   28458:	cmp	r6, #0
   2845c:	beq	284cc <ptr_set_find@@Base+0x84>
   28460:	ldr	r7, [r0, #12]
   28464:	add	r0, sp, #16
   28468:	mov	r4, r1
   2846c:	str	r1, [sp, #12]
   28470:	movw	r1, #15186	; 0x3b52
   28474:	mov	r2, #4
   28478:	mov	r3, #0
   2847c:	mov	r5, #0
   28480:	movt	r1, #12137	; 0x2f69
   28484:	str	r0, [sp, #4]
   28488:	add	r0, sp, #12
   2848c:	str	r1, [sp]
   28490:	bl	3c888 <cmetrohash64_1@@Base>
   28494:	ldr	r0, [sp, #16]
   28498:	sub	r1, r7, #1
   2849c:	b	284a4 <ptr_set_find@@Base+0x5c>
   284a0:	add	r0, r0, #1
   284a4:	and	r2, r0, r1
   284a8:	ldr	r2, [r6, r2, lsl #2]
   284ac:	cmp	r2, #2
   284b0:	beq	284a0 <ptr_set_find@@Base+0x58>
   284b4:	cmp	r2, #0
   284b8:	beq	284d0 <ptr_set_find@@Base+0x88>
   284bc:	cmp	r2, r4
   284c0:	bne	284a0 <ptr_set_find@@Base+0x58>
   284c4:	mov	r5, r4
   284c8:	b	284d0 <ptr_set_find@@Base+0x88>
   284cc:	mov	r5, #0
   284d0:	mov	r0, r5
   284d4:	sub	sp, fp, #16
   284d8:	pop	{r4, r5, r6, r7, fp, pc}

000284dc <ptr_set_find_item@@Base>:
   284dc:	push	{r4, r5, r6, r7, fp, lr}
   284e0:	add	fp, sp, #16
   284e4:	sub	sp, sp, #24
   284e8:	ldr	r6, [r0]
   284ec:	cmp	r6, #0
   284f0:	beq	28560 <ptr_set_find_item@@Base+0x84>
   284f4:	ldr	r7, [r0, #12]
   284f8:	add	r0, sp, #16
   284fc:	mov	r4, r1
   28500:	str	r1, [sp, #12]
   28504:	movw	r1, #15186	; 0x3b52
   28508:	mov	r2, #4
   2850c:	mov	r3, #0
   28510:	mov	r5, #0
   28514:	movt	r1, #12137	; 0x2f69
   28518:	str	r0, [sp, #4]
   2851c:	add	r0, sp, #12
   28520:	str	r1, [sp]
   28524:	bl	3c888 <cmetrohash64_1@@Base>
   28528:	ldr	r0, [sp, #16]
   2852c:	sub	r1, r7, #1
   28530:	b	28538 <ptr_set_find_item@@Base+0x5c>
   28534:	add	r0, r0, #1
   28538:	and	r2, r0, r1
   2853c:	ldr	r2, [r6, r2, lsl #2]
   28540:	cmp	r2, #2
   28544:	beq	28534 <ptr_set_find_item@@Base+0x58>
   28548:	cmp	r2, #0
   2854c:	beq	28564 <ptr_set_find_item@@Base+0x88>
   28550:	cmp	r2, r4
   28554:	bne	28534 <ptr_set_find_item@@Base+0x58>
   28558:	mov	r5, r4
   2855c:	b	28564 <ptr_set_find_item@@Base+0x88>
   28560:	mov	r5, #0
   28564:	mov	r0, r5
   28568:	sub	sp, fp, #16
   2856c:	pop	{r4, r5, r6, r7, fp, pc}

00028570 <ptr_set_remove@@Base>:
   28570:	push	{r4, r5, r6, r7, fp, lr}
   28574:	add	fp, sp, #16
   28578:	sub	sp, sp, #24
   2857c:	ldr	r6, [r0]
   28580:	cmp	r6, #0
   28584:	beq	28604 <ptr_set_remove@@Base+0x94>
   28588:	ldr	r7, [r0, #12]
   2858c:	mov	r5, r0
   28590:	add	r0, sp, #16
   28594:	mov	r4, r1
   28598:	str	r1, [sp, #12]
   2859c:	movw	r1, #15186	; 0x3b52
   285a0:	mov	r2, #4
   285a4:	mov	r3, #0
   285a8:	movt	r1, #12137	; 0x2f69
   285ac:	str	r0, [sp, #4]
   285b0:	add	r0, sp, #12
   285b4:	str	r1, [sp]
   285b8:	bl	3c888 <cmetrohash64_1@@Base>
   285bc:	ldr	r0, [sp, #16]
   285c0:	sub	r1, r7, #1
   285c4:	b	285cc <ptr_set_remove@@Base+0x5c>
   285c8:	add	r0, r0, #1
   285cc:	and	r2, r0, r1
   285d0:	ldr	r3, [r6, r2, lsl #2]
   285d4:	cmp	r3, #2
   285d8:	beq	285c8 <ptr_set_remove@@Base+0x58>
   285dc:	cmp	r3, #0
   285e0:	beq	28604 <ptr_set_remove@@Base+0x94>
   285e4:	cmp	r3, r4
   285e8:	bne	285c8 <ptr_set_remove@@Base+0x58>
   285ec:	mov	r0, #2
   285f0:	str	r0, [r6, r2, lsl #2]
   285f4:	ldr	r0, [r5, #8]
   285f8:	sub	r0, r0, #1
   285fc:	str	r0, [r5, #8]
   28600:	b	28608 <ptr_set_remove@@Base+0x98>
   28604:	mov	r4, #0
   28608:	mov	r0, r4
   2860c:	sub	sp, fp, #16
   28610:	pop	{r4, r5, r6, r7, fp, pc}

00028614 <ptr_set_remove_item@@Base>:
   28614:	push	{r4, r5, r6, r7, fp, lr}
   28618:	add	fp, sp, #16
   2861c:	sub	sp, sp, #24
   28620:	ldr	r6, [r0]
   28624:	cmp	r6, #0
   28628:	beq	286a8 <ptr_set_remove_item@@Base+0x94>
   2862c:	ldr	r7, [r0, #12]
   28630:	mov	r5, r0
   28634:	add	r0, sp, #16
   28638:	mov	r4, r1
   2863c:	str	r1, [sp, #12]
   28640:	movw	r1, #15186	; 0x3b52
   28644:	mov	r2, #4
   28648:	mov	r3, #0
   2864c:	movt	r1, #12137	; 0x2f69
   28650:	str	r0, [sp, #4]
   28654:	add	r0, sp, #12
   28658:	str	r1, [sp]
   2865c:	bl	3c888 <cmetrohash64_1@@Base>
   28660:	ldr	r0, [sp, #16]
   28664:	sub	r1, r7, #1
   28668:	b	28670 <ptr_set_remove_item@@Base+0x5c>
   2866c:	add	r0, r0, #1
   28670:	and	r2, r0, r1
   28674:	ldr	r3, [r6, r2, lsl #2]
   28678:	cmp	r3, #2
   2867c:	beq	2866c <ptr_set_remove_item@@Base+0x58>
   28680:	cmp	r3, #0
   28684:	beq	286a8 <ptr_set_remove_item@@Base+0x94>
   28688:	cmp	r3, r4
   2868c:	bne	2866c <ptr_set_remove_item@@Base+0x58>
   28690:	mov	r0, #2
   28694:	str	r0, [r6, r2, lsl #2]
   28698:	ldr	r0, [r5, #8]
   2869c:	sub	r0, r0, #1
   286a0:	str	r0, [r5, #8]
   286a4:	b	286ac <ptr_set_remove_item@@Base+0x98>
   286a8:	mov	r4, #0
   286ac:	mov	r0, r4
   286b0:	sub	sp, fp, #16
   286b4:	pop	{r4, r5, r6, r7, fp, pc}

000286b8 <ptr_set_visit@@Base>:
   286b8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   286bc:	add	fp, sp, #24
   286c0:	mov	r6, r0
   286c4:	ldr	r0, [r0, #12]
   286c8:	cmp	r0, #0
   286cc:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   286d0:	ldr	r7, [r6]
   286d4:	mov	r8, r2
   286d8:	mov	r5, r1
   286dc:	mov	r4, #0
   286e0:	ldr	r1, [r7, r4, lsl #2]
   286e4:	orr	r2, r1, #2
   286e8:	cmp	r2, #2
   286ec:	beq	286fc <ptr_set_visit@@Base+0x44>
   286f0:	mov	r0, r8
   286f4:	blx	r5
   286f8:	ldr	r0, [r6, #12]
   286fc:	add	r4, r4, #1
   28700:	cmp	r4, r0
   28704:	bcc	286e0 <ptr_set_visit@@Base+0x28>
   28708:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002870c <fb_symbol_table_clear@@Base>:
   2870c:	push	{r4, sl, fp, lr}
   28710:	add	fp, sp, #8
   28714:	mov	r4, r0
   28718:	ldr	r0, [r0]
   2871c:	cmp	r0, #0
   28720:	beq	28728 <fb_symbol_table_clear@@Base+0x1c>
   28724:	bl	148f8 <free@plt>
   28728:	vmov.i32	q8, #0	; 0x00000000
   2872c:	vst1.32	{d16-d17}, [r4]
   28730:	pop	{r4, sl, fp, pc}

00028734 <fb_symbol_table_destroy@@Base>:
   28734:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28738:	add	fp, sp, #24
   2873c:	mov	r4, r0
   28740:	cmp	r1, #0
   28744:	ldrne	r0, [r4, #12]
   28748:	cmpne	r0, #0
   2874c:	beq	28788 <fb_symbol_table_destroy@@Base+0x54>
   28750:	ldr	r7, [r4]
   28754:	mov	r8, r2
   28758:	mov	r6, r1
   2875c:	mov	r5, #0
   28760:	ldr	r1, [r7, r5, lsl #2]
   28764:	orr	r2, r1, #2
   28768:	cmp	r2, #2
   2876c:	beq	2877c <fb_symbol_table_destroy@@Base+0x48>
   28770:	mov	r0, r8
   28774:	blx	r6
   28778:	ldr	r0, [r4, #12]
   2877c:	add	r5, r5, #1
   28780:	cmp	r5, r0
   28784:	bcc	28760 <fb_symbol_table_destroy@@Base+0x2c>
   28788:	ldr	r0, [r4]
   2878c:	cmp	r0, #0
   28790:	beq	28798 <fb_symbol_table_destroy@@Base+0x64>
   28794:	bl	148f8 <free@plt>
   28798:	vmov.i32	q8, #0	; 0x00000000
   2879c:	vst1.32	{d16-d17}, [r4]
   287a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000287a4 <fb_symbol_table_init@@Base>:
   287a4:	push	{r4, r5, fp, lr}
   287a8:	add	fp, sp, #8
   287ac:	mov	r4, r0
   287b0:	mov	r2, #4
   287b4:	mov	r0, #179	; 0xb3
   287b8:	mul	r3, r2, r0
   287bc:	mov	r5, r2
   287c0:	lsl	r2, r2, #1
   287c4:	cmp	r1, r3, lsr #8
   287c8:	bhi	287b8 <fb_symbol_table_init@@Base+0x14>
   287cc:	mov	r0, r5
   287d0:	mov	r1, #4
   287d4:	bl	148c8 <calloc@plt>
   287d8:	cmp	r0, #0
   287dc:	str	r0, [r4]
   287e0:	movne	r0, #0
   287e4:	strne	r0, [r4, #4]
   287e8:	strne	r0, [r4, #8]
   287ec:	strne	r5, [r4, #12]
   287f0:	popne	{r4, r5, fp, pc}
   287f4:	mvn	r0, #0
   287f8:	pop	{r4, r5, fp, pc}

000287fc <fb_symbol_table_resize@@Base>:
   287fc:	b	28800 <fb_symbol_table_resize@@Base+0x4>
   28800:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28804:	add	fp, sp, #24
   28808:	sub	sp, sp, #24
   2880c:	mov	r4, r0
   28810:	ldr	r5, [r0]
   28814:	ldr	r0, [r0, #8]
   28818:	mov	r2, #4
   2881c:	cmp	r0, r1
   28820:	movhi	r1, r0
   28824:	mov	r0, #179	; 0xb3
   28828:	mul	r3, r2, r0
   2882c:	mov	r6, r2
   28830:	lsl	r2, r2, #1
   28834:	cmp	r1, r3, lsr #8
   28838:	bhi	28828 <fb_symbol_table_resize@@Base+0x2c>
   2883c:	mov	r0, r6
   28840:	mov	r1, #4
   28844:	bl	148c8 <calloc@plt>
   28848:	cmp	r0, #0
   2884c:	str	r0, [sp, #8]
   28850:	mvneq	r0, #0
   28854:	subeq	sp, fp, #24
   28858:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2885c:	mov	r7, #0
   28860:	str	r6, [sp, #20]
   28864:	str	r7, [sp, #12]
   28868:	str	r7, [sp, #16]
   2886c:	ldr	r0, [r4, #12]
   28870:	cmp	r0, #0
   28874:	beq	288b8 <fb_symbol_table_resize@@Base+0xbc>
   28878:	mov	r8, #3
   2887c:	add	r6, sp, #8
   28880:	ldr	r3, [r5, r7, lsl #2]
   28884:	orr	r1, r3, #2
   28888:	cmp	r1, #2
   2888c:	beq	288a8 <fb_symbol_table_resize@@Base+0xac>
   28890:	ldr	r0, [r3, #4]
   28894:	ldm	r0, {r1, r2}
   28898:	mov	r0, r6
   2889c:	str	r8, [sp]
   288a0:	bl	288e4 <fb_symbol_table_insert@@Base+0x4>
   288a4:	ldr	r0, [r4, #12]
   288a8:	add	r7, r7, #1
   288ac:	cmp	r7, r0
   288b0:	bcc	28880 <fb_symbol_table_resize@@Base+0x84>
   288b4:	ldr	r5, [r4]
   288b8:	cmp	r5, #0
   288bc:	beq	288c8 <fb_symbol_table_resize@@Base+0xcc>
   288c0:	mov	r0, r5
   288c4:	bl	148f8 <free@plt>
   288c8:	add	r0, sp, #8
   288cc:	vld1.64	{d16-d17}, [r0]
   288d0:	mov	r0, #0
   288d4:	vst1.32	{d16-d17}, [r4]
   288d8:	sub	sp, fp, #24
   288dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000288e0 <fb_symbol_table_insert@@Base>:
   288e0:	b	288e4 <fb_symbol_table_insert@@Base+0x4>
   288e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   288e8:	add	fp, sp, #28
   288ec:	sub	sp, sp, #36	; 0x24
   288f0:	cmp	r3, #2
   288f4:	str	r1, [sp, #20]
   288f8:	beq	28a70 <fb_symbol_table_insert@@Base+0x190>
   288fc:	mov	sl, r3
   28900:	cmp	r3, #1
   28904:	beq	28a90 <fb_symbol_table_insert@@Base+0x1b0>
   28908:	cmp	sl, #0
   2890c:	beq	28ab0 <fb_symbol_table_insert@@Base+0x1d0>
   28910:	mov	r7, r0
   28914:	ldr	r0, [r0, #8]
   28918:	mov	r1, #179	; 0xb3
   2891c:	mov	r6, r2
   28920:	ldr	r4, [r7, #12]
   28924:	mul	r1, r4, r1
   28928:	cmp	r0, r1, lsr #8
   2892c:	bcc	28948 <fb_symbol_table_insert@@Base+0x68>
   28930:	lsl	r1, r0, #1
   28934:	mov	r0, r7
   28938:	bl	28800 <fb_symbol_table_resize@@Base+0x4>
   2893c:	cmp	r0, #0
   28940:	bne	28ad0 <fb_symbol_table_insert@@Base+0x1f0>
   28944:	ldr	r4, [r7, #12]
   28948:	add	r0, sp, #24
   2894c:	ldr	r9, [r7]
   28950:	movw	r1, #15186	; 0x3b52
   28954:	mov	r2, r6
   28958:	mov	r3, #0
   2895c:	mov	r8, #0
   28960:	str	r0, [sp, #4]
   28964:	ldr	r0, [sp, #20]
   28968:	movt	r1, #12137	; 0x2f69
   2896c:	str	r1, [sp]
   28970:	bl	3c888 <cmetrohash64_1@@Base>
   28974:	ldr	r2, [fp, #8]
   28978:	ldr	r1, [sp, #24]
   2897c:	sub	r5, r4, #1
   28980:	orr	r2, r2, #1
   28984:	and	r0, r5, r1
   28988:	cmp	r2, #3
   2898c:	bne	289c4 <fb_symbol_table_insert@@Base+0xe4>
   28990:	ldr	r2, [r7, #8]
   28994:	add	r2, r2, #1
   28998:	str	r2, [r7, #8]
   2899c:	b	289a4 <fb_symbol_table_insert@@Base+0xc4>
   289a0:	and	r0, r1, r5
   289a4:	mov	r7, r9
   289a8:	add	r1, r1, #1
   289ac:	ldr	r0, [r7, r0, lsl #2]!
   289b0:	orr	r0, r0, #2
   289b4:	cmp	r0, #2
   289b8:	bne	289a0 <fb_symbol_table_insert@@Base+0xc0>
   289bc:	mov	r4, #0
   289c0:	b	28a4c <fb_symbol_table_insert@@Base+0x16c>
   289c4:	str	sl, [sp, #16]
   289c8:	add	sl, r1, #1
   289cc:	str	r7, [sp, #12]
   289d0:	b	289dc <fb_symbol_table_insert@@Base+0xfc>
   289d4:	and	r0, sl, r5
   289d8:	add	sl, sl, #1
   289dc:	mov	r7, r9
   289e0:	ldr	r4, [r7, r0, lsl #2]!
   289e4:	cmp	r4, #2
   289e8:	beq	28a20 <fb_symbol_table_insert@@Base+0x140>
   289ec:	cmp	r4, #0
   289f0:	beq	28a2c <fb_symbol_table_insert@@Base+0x14c>
   289f4:	ldr	r0, [r4, #4]
   289f8:	ldr	r1, [r0, #4]
   289fc:	cmp	r1, r6
   28a00:	bne	289d4 <fb_symbol_table_insert@@Base+0xf4>
   28a04:	ldr	r1, [r0]
   28a08:	ldr	r0, [sp, #20]
   28a0c:	mov	r2, r6
   28a10:	bl	1491c <memcmp@plt>
   28a14:	cmp	r0, #0
   28a18:	bne	289d4 <fb_symbol_table_insert@@Base+0xf4>
   28a1c:	b	28a5c <fb_symbol_table_insert@@Base+0x17c>
   28a20:	cmp	r8, #0
   28a24:	moveq	r8, r7
   28a28:	b	289d4 <fb_symbol_table_insert@@Base+0xf4>
   28a2c:	ldr	r1, [sp, #12]
   28a30:	ldr	sl, [sp, #16]
   28a34:	cmp	r8, #0
   28a38:	mov	r4, #0
   28a3c:	movne	r7, r8
   28a40:	ldr	r0, [r1, #8]
   28a44:	add	r0, r0, #1
   28a48:	str	r0, [r1, #8]
   28a4c:	str	sl, [r7]
   28a50:	mov	r0, r4
   28a54:	sub	sp, fp, #28
   28a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28a5c:	ldr	r0, [fp, #8]
   28a60:	ldr	sl, [sp, #16]
   28a64:	cmp	r0, #0
   28a68:	streq	sl, [r7]
   28a6c:	b	28a50 <fb_symbol_table_insert@@Base+0x170>
   28a70:	ldr	r0, [pc, #140]	; 28b04 <fb_symbol_table_insert@@Base+0x224>
   28a74:	ldr	r1, [pc, #140]	; 28b08 <fb_symbol_table_insert@@Base+0x228>
   28a78:	ldr	r3, [pc, #140]	; 28b0c <fb_symbol_table_insert@@Base+0x22c>
   28a7c:	mov	r2, #115	; 0x73
   28a80:	add	r0, pc, r0
   28a84:	add	r1, pc, r1
   28a88:	add	r3, pc, r3
   28a8c:	bl	14a78 <__assert_fail@plt>
   28a90:	ldr	r0, [pc, #120]	; 28b10 <fb_symbol_table_insert@@Base+0x230>
   28a94:	ldr	r1, [pc, #120]	; 28b14 <fb_symbol_table_insert@@Base+0x234>
   28a98:	ldr	r3, [pc, #120]	; 28b18 <fb_symbol_table_insert@@Base+0x238>
   28a9c:	mov	r2, #116	; 0x74
   28aa0:	add	r0, pc, r0
   28aa4:	add	r1, pc, r1
   28aa8:	add	r3, pc, r3
   28aac:	bl	14a78 <__assert_fail@plt>
   28ab0:	ldr	r0, [pc, #64]	; 28af8 <fb_symbol_table_insert@@Base+0x218>
   28ab4:	ldr	r1, [pc, #64]	; 28afc <fb_symbol_table_insert@@Base+0x21c>
   28ab8:	ldr	r3, [pc, #64]	; 28b00 <fb_symbol_table_insert@@Base+0x220>
   28abc:	mov	r2, #114	; 0x72
   28ac0:	add	r0, pc, r0
   28ac4:	add	r1, pc, r1
   28ac8:	add	r3, pc, r3
   28acc:	bl	14a78 <__assert_fail@plt>
   28ad0:	ldr	r0, [pc, #68]	; 28b1c <fb_symbol_table_insert@@Base+0x23c>
   28ad4:	ldr	r0, [pc, r0]
   28ad8:	ldr	r0, [r0]
   28adc:	ldr	r1, [pc, #60]	; 28b20 <fb_symbol_table_insert@@Base+0x240>
   28ae0:	ldr	r2, [pc, #60]	; 28b24 <fb_symbol_table_insert@@Base+0x244>
   28ae4:	add	r1, pc, r1
   28ae8:	add	r2, pc, r2
   28aec:	bl	149b8 <fprintf@plt>
   28af0:	mov	r0, #1
   28af4:	bl	14994 <exit@plt>
   28af8:	andeq	lr, r2, r4, lsr #21
   28afc:			; <UNDEFINED> instruction: 0x0002eab7
   28b00:	andeq	lr, r2, sl, lsl fp
   28b04:	andeq	lr, r2, ip, lsr #23
   28b08:	strdeq	lr, [r2], -r7
   28b0c:	andeq	lr, r2, sl, asr fp
   28b10:	andeq	lr, r2, r3, lsr #23
   28b14:	ldrdeq	lr, [r2], -r7
   28b18:	andeq	lr, r2, sl, lsr fp
   28b1c:	andeq	r3, r4, r8, asr #11
   28b20:	andeq	lr, r2, r4, ror fp
   28b24:	andeq	lr, r2, r7, lsl #23

00028b28 <fb_symbol_table_insert_item@@Base>:
   28b28:	push	{fp, lr}
   28b2c:	mov	fp, sp
   28b30:	sub	sp, sp, #8
   28b34:	ldr	r3, [r1, #4]
   28b38:	mov	lr, r1
   28b3c:	ldm	r3, {r1, ip}
   28b40:	str	r2, [sp]
   28b44:	mov	r3, lr
   28b48:	mov	r2, ip
   28b4c:	bl	288e4 <fb_symbol_table_insert@@Base+0x4>
   28b50:	mov	sp, fp
   28b54:	pop	{fp, pc}

00028b58 <fb_symbol_table_find@@Base>:
   28b58:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28b5c:	add	fp, sp, #24
   28b60:	sub	sp, sp, #16
   28b64:	ldr	r7, [r0]
   28b68:	cmp	r7, #0
   28b6c:	beq	28bf0 <fb_symbol_table_find@@Base+0x98>
   28b70:	ldr	r4, [r0, #12]
   28b74:	mov	r8, r1
   28b78:	movw	r1, #15186	; 0x3b52
   28b7c:	add	r0, sp, #8
   28b80:	mov	r3, #0
   28b84:	mov	r9, r2
   28b88:	movt	r1, #12137	; 0x2f69
   28b8c:	str	r0, [sp, #4]
   28b90:	mov	r0, r8
   28b94:	str	r1, [sp]
   28b98:	bl	3c888 <cmetrohash64_1@@Base>
   28b9c:	ldr	r5, [sp, #8]
   28ba0:	sub	r4, r4, #1
   28ba4:	b	28bac <fb_symbol_table_find@@Base+0x54>
   28ba8:	add	r5, r5, #1
   28bac:	and	r0, r5, r4
   28bb0:	ldr	r6, [r7, r0, lsl #2]
   28bb4:	cmp	r6, #2
   28bb8:	beq	28ba8 <fb_symbol_table_find@@Base+0x50>
   28bbc:	cmp	r6, #0
   28bc0:	beq	28bf0 <fb_symbol_table_find@@Base+0x98>
   28bc4:	ldr	r0, [r6, #4]
   28bc8:	ldr	r1, [r0, #4]
   28bcc:	cmp	r1, r9
   28bd0:	bne	28ba8 <fb_symbol_table_find@@Base+0x50>
   28bd4:	ldr	r1, [r0]
   28bd8:	mov	r0, r8
   28bdc:	mov	r2, r9
   28be0:	bl	1491c <memcmp@plt>
   28be4:	cmp	r0, #0
   28be8:	bne	28ba8 <fb_symbol_table_find@@Base+0x50>
   28bec:	b	28bf4 <fb_symbol_table_find@@Base+0x9c>
   28bf0:	mov	r6, #0
   28bf4:	mov	r0, r6
   28bf8:	sub	sp, fp, #24
   28bfc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00028c00 <fb_symbol_table_find_item@@Base>:
   28c00:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28c04:	add	fp, sp, #24
   28c08:	sub	sp, sp, #16
   28c0c:	ldr	r7, [r0]
   28c10:	cmp	r7, #0
   28c14:	beq	28c9c <fb_symbol_table_find_item@@Base+0x9c>
   28c18:	ldr	r1, [r1, #4]
   28c1c:	mov	r3, #0
   28c20:	ldm	r1, {r8, r9}
   28c24:	ldr	r5, [r0, #12]
   28c28:	movw	r1, #15186	; 0x3b52
   28c2c:	add	r0, sp, #8
   28c30:	movt	r1, #12137	; 0x2f69
   28c34:	str	r0, [sp, #4]
   28c38:	str	r1, [sp]
   28c3c:	mov	r0, r8
   28c40:	mov	r2, r9
   28c44:	bl	3c888 <cmetrohash64_1@@Base>
   28c48:	ldr	r4, [sp, #8]
   28c4c:	sub	r5, r5, #1
   28c50:	b	28c58 <fb_symbol_table_find_item@@Base+0x58>
   28c54:	add	r4, r4, #1
   28c58:	and	r0, r4, r5
   28c5c:	ldr	r6, [r7, r0, lsl #2]
   28c60:	cmp	r6, #2
   28c64:	beq	28c54 <fb_symbol_table_find_item@@Base+0x54>
   28c68:	cmp	r6, #0
   28c6c:	beq	28c9c <fb_symbol_table_find_item@@Base+0x9c>
   28c70:	ldr	r0, [r6, #4]
   28c74:	ldr	r1, [r0, #4]
   28c78:	cmp	r1, r9
   28c7c:	bne	28c54 <fb_symbol_table_find_item@@Base+0x54>
   28c80:	ldr	r1, [r0]
   28c84:	mov	r0, r8
   28c88:	mov	r2, r9
   28c8c:	bl	1491c <memcmp@plt>
   28c90:	cmp	r0, #0
   28c94:	bne	28c54 <fb_symbol_table_find_item@@Base+0x54>
   28c98:	b	28ca0 <fb_symbol_table_find_item@@Base+0xa0>
   28c9c:	mov	r6, #0
   28ca0:	mov	r0, r6
   28ca4:	sub	sp, fp, #24
   28ca8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00028cac <fb_symbol_table_remove@@Base>:
   28cac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28cb0:	add	fp, sp, #28
   28cb4:	sub	sp, sp, #28
   28cb8:	ldr	r4, [r0]
   28cbc:	cmp	r4, #0
   28cc0:	beq	28d60 <fb_symbol_table_remove@@Base+0xb4>
   28cc4:	ldr	r5, [r0, #12]
   28cc8:	mov	r9, r1
   28ccc:	movw	r1, #15186	; 0x3b52
   28cd0:	str	r0, [sp, #12]
   28cd4:	add	r0, sp, #16
   28cd8:	mov	r3, #0
   28cdc:	mov	sl, r2
   28ce0:	movt	r1, #12137	; 0x2f69
   28ce4:	str	r0, [sp, #4]
   28ce8:	mov	r0, r9
   28cec:	str	r1, [sp]
   28cf0:	bl	3c888 <cmetrohash64_1@@Base>
   28cf4:	ldr	r6, [sp, #16]
   28cf8:	sub	r5, r5, #1
   28cfc:	b	28d04 <fb_symbol_table_remove@@Base+0x58>
   28d00:	add	r6, r6, #1
   28d04:	and	r8, r6, r5
   28d08:	ldr	r7, [r4, r8, lsl #2]
   28d0c:	cmp	r7, #2
   28d10:	beq	28d00 <fb_symbol_table_remove@@Base+0x54>
   28d14:	cmp	r7, #0
   28d18:	beq	28d60 <fb_symbol_table_remove@@Base+0xb4>
   28d1c:	ldr	r0, [r7, #4]
   28d20:	ldr	r1, [r0, #4]
   28d24:	cmp	r1, sl
   28d28:	bne	28d00 <fb_symbol_table_remove@@Base+0x54>
   28d2c:	ldr	r1, [r0]
   28d30:	mov	r0, r9
   28d34:	mov	r2, sl
   28d38:	bl	1491c <memcmp@plt>
   28d3c:	cmp	r0, #0
   28d40:	bne	28d00 <fb_symbol_table_remove@@Base+0x54>
   28d44:	ldr	r1, [sp, #12]
   28d48:	mov	r0, #2
   28d4c:	str	r0, [r4, r8, lsl #2]
   28d50:	ldr	r0, [r1, #8]
   28d54:	sub	r0, r0, #1
   28d58:	str	r0, [r1, #8]
   28d5c:	b	28d64 <fb_symbol_table_remove@@Base+0xb8>
   28d60:	mov	r7, #0
   28d64:	mov	r0, r7
   28d68:	sub	sp, fp, #28
   28d6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028d70 <fb_symbol_table_remove_item@@Base>:
   28d70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   28d74:	add	fp, sp, #28
   28d78:	sub	sp, sp, #28
   28d7c:	ldr	r4, [r0]
   28d80:	cmp	r4, #0
   28d84:	beq	28e28 <fb_symbol_table_remove_item@@Base+0xb8>
   28d88:	ldr	r1, [r1, #4]
   28d8c:	mov	r3, #0
   28d90:	ldm	r1, {r9, sl}
   28d94:	ldr	r6, [r0, #12]
   28d98:	movw	r1, #15186	; 0x3b52
   28d9c:	str	r0, [sp, #12]
   28da0:	add	r0, sp, #16
   28da4:	movt	r1, #12137	; 0x2f69
   28da8:	str	r0, [sp, #4]
   28dac:	str	r1, [sp]
   28db0:	mov	r0, r9
   28db4:	mov	r2, sl
   28db8:	bl	3c888 <cmetrohash64_1@@Base>
   28dbc:	ldr	r5, [sp, #16]
   28dc0:	sub	r6, r6, #1
   28dc4:	b	28dcc <fb_symbol_table_remove_item@@Base+0x5c>
   28dc8:	add	r5, r5, #1
   28dcc:	and	r8, r5, r6
   28dd0:	ldr	r7, [r4, r8, lsl #2]
   28dd4:	cmp	r7, #2
   28dd8:	beq	28dc8 <fb_symbol_table_remove_item@@Base+0x58>
   28ddc:	cmp	r7, #0
   28de0:	beq	28e28 <fb_symbol_table_remove_item@@Base+0xb8>
   28de4:	ldr	r0, [r7, #4]
   28de8:	ldr	r1, [r0, #4]
   28dec:	cmp	r1, sl
   28df0:	bne	28dc8 <fb_symbol_table_remove_item@@Base+0x58>
   28df4:	ldr	r1, [r0]
   28df8:	mov	r0, r9
   28dfc:	mov	r2, sl
   28e00:	bl	1491c <memcmp@plt>
   28e04:	cmp	r0, #0
   28e08:	bne	28dc8 <fb_symbol_table_remove_item@@Base+0x58>
   28e0c:	ldr	r1, [sp, #12]
   28e10:	mov	r0, #2
   28e14:	str	r0, [r4, r8, lsl #2]
   28e18:	ldr	r0, [r1, #8]
   28e1c:	sub	r0, r0, #1
   28e20:	str	r0, [r1, #8]
   28e24:	b	28e2c <fb_symbol_table_remove_item@@Base+0xbc>
   28e28:	mov	r7, #0
   28e2c:	mov	r0, r7
   28e30:	sub	sp, fp, #28
   28e34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00028e38 <fb_symbol_table_visit@@Base>:
   28e38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28e3c:	add	fp, sp, #24
   28e40:	mov	r6, r0
   28e44:	ldr	r0, [r0, #12]
   28e48:	cmp	r0, #0
   28e4c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   28e50:	ldr	r7, [r6]
   28e54:	mov	r8, r2
   28e58:	mov	r5, r1
   28e5c:	mov	r4, #0
   28e60:	ldr	r1, [r7, r4, lsl #2]
   28e64:	orr	r2, r1, #2
   28e68:	cmp	r2, #2
   28e6c:	beq	28e7c <fb_symbol_table_visit@@Base+0x44>
   28e70:	mov	r0, r8
   28e74:	blx	r5
   28e78:	ldr	r0, [r6, #12]
   28e7c:	add	r4, r4, #1
   28e80:	cmp	r4, r0
   28e84:	bcc	28e60 <fb_symbol_table_visit@@Base+0x28>
   28e88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028e8c <fb_scope_table_clear@@Base>:
   28e8c:	push	{r4, sl, fp, lr}
   28e90:	add	fp, sp, #8
   28e94:	mov	r4, r0
   28e98:	ldr	r0, [r0]
   28e9c:	cmp	r0, #0
   28ea0:	beq	28ea8 <fb_scope_table_clear@@Base+0x1c>
   28ea4:	bl	148f8 <free@plt>
   28ea8:	vmov.i32	q8, #0	; 0x00000000
   28eac:	vst1.32	{d16-d17}, [r4]
   28eb0:	pop	{r4, sl, fp, pc}

00028eb4 <fb_scope_table_destroy@@Base>:
   28eb4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28eb8:	add	fp, sp, #24
   28ebc:	mov	r4, r0
   28ec0:	cmp	r1, #0
   28ec4:	ldrne	r0, [r4, #12]
   28ec8:	cmpne	r0, #0
   28ecc:	beq	28f08 <fb_scope_table_destroy@@Base+0x54>
   28ed0:	ldr	r7, [r4]
   28ed4:	mov	r8, r2
   28ed8:	mov	r6, r1
   28edc:	mov	r5, #0
   28ee0:	ldr	r1, [r7, r5, lsl #2]
   28ee4:	orr	r2, r1, #2
   28ee8:	cmp	r2, #2
   28eec:	beq	28efc <fb_scope_table_destroy@@Base+0x48>
   28ef0:	mov	r0, r8
   28ef4:	blx	r6
   28ef8:	ldr	r0, [r4, #12]
   28efc:	add	r5, r5, #1
   28f00:	cmp	r5, r0
   28f04:	bcc	28ee0 <fb_scope_table_destroy@@Base+0x2c>
   28f08:	ldr	r0, [r4]
   28f0c:	cmp	r0, #0
   28f10:	beq	28f18 <fb_scope_table_destroy@@Base+0x64>
   28f14:	bl	148f8 <free@plt>
   28f18:	vmov.i32	q8, #0	; 0x00000000
   28f1c:	vst1.32	{d16-d17}, [r4]
   28f20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00028f24 <fb_scope_table_init@@Base>:
   28f24:	push	{r4, r5, fp, lr}
   28f28:	add	fp, sp, #8
   28f2c:	mov	r4, r0
   28f30:	mov	r2, #4
   28f34:	mov	r0, #179	; 0xb3
   28f38:	mul	r3, r2, r0
   28f3c:	mov	r5, r2
   28f40:	lsl	r2, r2, #1
   28f44:	cmp	r1, r3, lsr #8
   28f48:	bhi	28f38 <fb_scope_table_init@@Base+0x14>
   28f4c:	mov	r0, r5
   28f50:	mov	r1, #4
   28f54:	bl	148c8 <calloc@plt>
   28f58:	cmp	r0, #0
   28f5c:	str	r0, [r4]
   28f60:	movne	r0, #0
   28f64:	strne	r0, [r4, #4]
   28f68:	strne	r0, [r4, #8]
   28f6c:	strne	r5, [r4, #12]
   28f70:	popne	{r4, r5, fp, pc}
   28f74:	mvn	r0, #0
   28f78:	pop	{r4, r5, fp, pc}

00028f7c <fb_scope_table_resize@@Base>:
   28f7c:	b	28f80 <fb_scope_table_resize@@Base+0x4>
   28f80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   28f84:	add	fp, sp, #24
   28f88:	sub	sp, sp, #24
   28f8c:	mov	r4, r0
   28f90:	ldr	r5, [r0]
   28f94:	ldr	r0, [r0, #8]
   28f98:	mov	r2, #4
   28f9c:	cmp	r0, r1
   28fa0:	movhi	r1, r0
   28fa4:	mov	r0, #179	; 0xb3
   28fa8:	mul	r3, r2, r0
   28fac:	mov	r6, r2
   28fb0:	lsl	r2, r2, #1
   28fb4:	cmp	r1, r3, lsr #8
   28fb8:	bhi	28fa8 <fb_scope_table_resize@@Base+0x2c>
   28fbc:	mov	r0, r6
   28fc0:	mov	r1, #4
   28fc4:	bl	148c8 <calloc@plt>
   28fc8:	cmp	r0, #0
   28fcc:	str	r0, [sp, #8]
   28fd0:	mvneq	r0, #0
   28fd4:	subeq	sp, fp, #24
   28fd8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   28fdc:	mov	r7, #0
   28fe0:	str	r6, [sp, #20]
   28fe4:	str	r7, [sp, #12]
   28fe8:	str	r7, [sp, #16]
   28fec:	ldr	r0, [r4, #12]
   28ff0:	cmp	r0, #0
   28ff4:	beq	29038 <fb_scope_table_resize@@Base+0xbc>
   28ff8:	mov	r8, #3
   28ffc:	add	r6, sp, #8
   29000:	ldr	r3, [r5, r7, lsl #2]
   29004:	orr	r1, r3, #2
   29008:	cmp	r1, #2
   2900c:	beq	29028 <fb_scope_table_resize@@Base+0xac>
   29010:	ldr	r1, [r3]
   29014:	mov	r0, r6
   29018:	mov	r2, #0
   2901c:	str	r8, [sp]
   29020:	bl	29064 <fb_scope_table_insert@@Base+0x4>
   29024:	ldr	r0, [r4, #12]
   29028:	add	r7, r7, #1
   2902c:	cmp	r7, r0
   29030:	bcc	29000 <fb_scope_table_resize@@Base+0x84>
   29034:	ldr	r5, [r4]
   29038:	cmp	r5, #0
   2903c:	beq	29048 <fb_scope_table_resize@@Base+0xcc>
   29040:	mov	r0, r5
   29044:	bl	148f8 <free@plt>
   29048:	add	r0, sp, #8
   2904c:	vld1.64	{d16-d17}, [r0]
   29050:	mov	r0, #0
   29054:	vst1.32	{d16-d17}, [r4]
   29058:	sub	sp, fp, #24
   2905c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029060 <fb_scope_table_insert@@Base>:
   29060:	b	29064 <fb_scope_table_insert@@Base+0x4>
   29064:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29068:	add	fp, sp, #28
   2906c:	sub	sp, sp, #28
   29070:	cmp	r3, #2
   29074:	str	r2, [sp, #8]
   29078:	beq	29450 <fb_scope_table_insert@@Base+0x3f0>
   2907c:	mov	r9, r3
   29080:	cmp	r3, #1
   29084:	beq	29470 <fb_scope_table_insert@@Base+0x410>
   29088:	cmp	r9, #0
   2908c:	beq	29490 <fb_scope_table_insert@@Base+0x430>
   29090:	mov	r7, r1
   29094:	mov	sl, r0
   29098:	ldr	r1, [r0, #8]
   2909c:	ldr	r0, [r0, #12]
   290a0:	mov	r2, #179	; 0xb3
   290a4:	mul	r2, r0, r2
   290a8:	cmp	r1, r2, lsr #8
   290ac:	bcc	290c8 <fb_scope_table_insert@@Base+0x68>
   290b0:	lsl	r1, r1, #1
   290b4:	mov	r0, sl
   290b8:	bl	28f80 <fb_scope_table_resize@@Base+0x4>
   290bc:	cmp	r0, #0
   290c0:	bne	294b0 <fb_scope_table_insert@@Base+0x450>
   290c4:	ldr	r0, [sl, #12]
   290c8:	sub	r0, r0, #1
   290cc:	ldr	r3, [sp, #8]
   290d0:	mov	r8, #0
   290d4:	str	r7, [sp, #12]
   290d8:	str	r0, [sp, #20]
   290dc:	ldr	r0, [sl]
   290e0:	cmp	r3, #1
   290e4:	str	r0, [sp, #16]
   290e8:	blt	291a0 <fb_scope_table_insert@@Base+0x140>
   290ec:	movw	lr, #11863	; 0x2e57
   290f0:	movw	ip, #15186	; 0x3b52
   290f4:	movw	r2, #31153	; 0x79b1
   290f8:	mov	r1, r7
   290fc:	movt	lr, #12137	; 0x2f69
   29100:	movt	ip, #12137	; 0x2f69
   29104:	movt	r2, #40503	; 0x9e37
   29108:	cmp	r3, #0
   2910c:	bne	29128 <fb_scope_table_insert@@Base+0xc8>
   29110:	b	29158 <fb_scope_table_insert@@Base+0xf8>
   29114:	add	r0, r5, #1
   29118:	add	r1, r1, r0
   2911c:	sub	r3, r3, r0
   29120:	cmp	r3, #0
   29124:	beq	29158 <fb_scope_table_insert@@Base+0xf8>
   29128:	mov	r5, #0
   2912c:	ldrb	r0, [r1, r5]
   29130:	cmp	r0, #46	; 0x2e
   29134:	beq	29144 <fb_scope_table_insert@@Base+0xe4>
   29138:	add	r5, r5, #1
   2913c:	cmp	r5, r3
   29140:	bcc	2912c <fb_scope_table_insert@@Base+0xcc>
   29144:	subs	r4, r5, #1
   29148:	bne	29160 <fb_scope_table_insert@@Base+0x100>
   2914c:	mov	r5, #1
   29150:	mov	r0, lr
   29154:	b	29188 <fb_scope_table_insert@@Base+0x128>
   29158:	mvn	r4, #0
   2915c:	mov	r5, #0
   29160:	mov	r0, lr
   29164:	mov	r7, r1
   29168:	ldrb	r6, [r7]
   2916c:	cmp	r6, #0
   29170:	beq	29188 <fb_scope_table_insert@@Base+0x128>
   29174:	add	r0, r0, r0, lsl #5
   29178:	subs	r4, r4, #1
   2917c:	add	r7, r7, #1
   29180:	eor	r0, r0, r6
   29184:	bne	29168 <fb_scope_table_insert@@Base+0x108>
   29188:	eor	r4, r8, ip
   2918c:	cmp	r5, r3
   29190:	eor	r0, r4, r0
   29194:	mul	r8, r0, r2
   29198:	bne	29114 <fb_scope_table_insert@@Base+0xb4>
   2919c:	b	29220 <fb_scope_table_insert@@Base+0x1c0>
   291a0:	cmp	r7, #0
   291a4:	beq	29220 <fb_scope_table_insert@@Base+0x1c0>
   291a8:	ldr	r3, [sp, #8]
   291ac:	movw	r6, #11863	; 0x2e57
   291b0:	movw	ip, #15186	; 0x3b52
   291b4:	movw	r2, #31153	; 0x79b1
   291b8:	movt	r6, #12137	; 0x2f69
   291bc:	movt	ip, #12137	; 0x2f69
   291c0:	movt	r2, #40503	; 0x9e37
   291c4:	ldr	r4, [r7, #4]
   291c8:	mov	r0, r6
   291cc:	ldr	r5, [r4, #4]
   291d0:	cmp	r5, #1
   291d4:	beq	29204 <fb_scope_table_insert@@Base+0x1a4>
   291d8:	ldr	r4, [r4]
   291dc:	rsb	r5, r5, #1
   291e0:	mov	r0, r6
   291e4:	ldrb	r1, [r4]
   291e8:	cmp	r1, #0
   291ec:	beq	29204 <fb_scope_table_insert@@Base+0x1a4>
   291f0:	add	r0, r0, r0, lsl #5
   291f4:	adds	r5, r5, #1
   291f8:	add	r4, r4, #1
   291fc:	eor	r0, r0, r1
   29200:	bne	291e4 <fb_scope_table_insert@@Base+0x184>
   29204:	adds	r3, r3, #1
   29208:	eor	r1, r8, ip
   2920c:	ldrne	r7, [r7]
   29210:	eor	r0, r1, r0
   29214:	mul	r8, r0, r2
   29218:	cmpne	r7, #0
   2921c:	bne	291c4 <fb_scope_table_insert@@Base+0x164>
   29220:	ldr	r1, [fp, #8]
   29224:	ldr	r2, [sp, #20]
   29228:	str	r9, [sp, #4]
   2922c:	orr	r1, r1, #1
   29230:	and	r0, r8, r2
   29234:	cmp	r1, #3
   29238:	bne	29274 <fb_scope_table_insert@@Base+0x214>
   2923c:	ldr	r1, [sl, #8]
   29240:	ldr	r3, [sp, #16]
   29244:	add	r1, r1, #1
   29248:	str	r1, [sl, #8]
   2924c:	add	r1, r8, #1
   29250:	b	2925c <fb_scope_table_insert@@Base+0x1fc>
   29254:	and	r0, r1, r2
   29258:	add	r1, r1, #1
   2925c:	mov	r7, r3
   29260:	ldr	r0, [r7, r0, lsl #2]!
   29264:	orr	r0, r0, #2
   29268:	cmp	r0, #2
   2926c:	bne	29254 <fb_scope_table_insert@@Base+0x1f4>
   29270:	b	29438 <fb_scope_table_insert@@Base+0x3d8>
   29274:	ldr	r9, [sp, #8]
   29278:	ldr	r1, [sp, #16]
   2927c:	mov	r3, #0
   29280:	mov	r4, #0
   29284:	str	sl, [sp]
   29288:	b	29298 <fb_scope_table_insert@@Base+0x238>
   2928c:	add	r3, r3, #1
   29290:	add	r0, r3, r8
   29294:	and	r0, r0, r2
   29298:	mov	r7, r1
   2929c:	ldr	sl, [r7, r0, lsl #2]!
   292a0:	cmp	sl, #2
   292a4:	beq	29354 <fb_scope_table_insert@@Base+0x2f4>
   292a8:	cmp	sl, #0
   292ac:	beq	29420 <fb_scope_table_insert@@Base+0x3c0>
   292b0:	ldr	r5, [sl]
   292b4:	cmp	r9, #0
   292b8:	str	r3, [sp, #24]
   292bc:	ble	29360 <fb_scope_table_insert@@Base+0x300>
   292c0:	ldr	r0, [sp, #12]
   292c4:	cmp	r5, #0
   292c8:	mov	ip, r9
   292cc:	beq	293e8 <fb_scope_table_insert@@Base+0x388>
   292d0:	ldr	r3, [r5, #4]
   292d4:	ldr	r2, [r3, #4]
   292d8:	cmp	r2, ip
   292dc:	bhi	293e8 <fb_scope_table_insert@@Base+0x388>
   292e0:	mov	lr, r4
   292e4:	cmp	r2, #0
   292e8:	beq	2931c <fb_scope_table_insert@@Base+0x2bc>
   292ec:	ldr	r6, [r3]
   292f0:	mov	r3, #0
   292f4:	ldrb	r4, [r0, r3]
   292f8:	ldrb	r1, [r6, r3]
   292fc:	cmp	r1, r4
   29300:	bne	293d0 <fb_scope_table_insert@@Base+0x370>
   29304:	add	r3, r3, #1
   29308:	cmp	r3, r2
   2930c:	bcc	292f4 <fb_scope_table_insert@@Base+0x294>
   29310:	cmp	r2, ip
   29314:	bne	29328 <fb_scope_table_insert@@Base+0x2c8>
   29318:	b	293f4 <fb_scope_table_insert@@Base+0x394>
   2931c:	mov	r3, #0
   29320:	cmp	r2, ip
   29324:	beq	293f4 <fb_scope_table_insert@@Base+0x394>
   29328:	ldrb	r1, [r0, r3]
   2932c:	mov	r4, lr
   29330:	cmp	r1, #46	; 0x2e
   29334:	bne	293e8 <fb_scope_table_insert@@Base+0x388>
   29338:	ldr	r5, [r5]
   2933c:	add	r1, r2, #1
   29340:	add	r0, r0, r1
   29344:	sub	ip, ip, r1
   29348:	cmp	r5, #0
   2934c:	bne	292d0 <fb_scope_table_insert@@Base+0x270>
   29350:	b	293e8 <fb_scope_table_insert@@Base+0x388>
   29354:	cmp	r4, #0
   29358:	moveq	r4, r7
   2935c:	b	2928c <fb_scope_table_insert@@Base+0x22c>
   29360:	ldr	r6, [sp, #12]
   29364:	cmp	r5, #0
   29368:	cmpne	r6, #0
   2936c:	beq	293b4 <fb_scope_table_insert@@Base+0x354>
   29370:	ldr	r0, [r5, #4]
   29374:	ldr	r1, [r6, #4]
   29378:	ldr	r2, [r0, #4]
   2937c:	ldr	r3, [r1, #4]
   29380:	cmp	r2, r3
   29384:	bne	293e4 <fb_scope_table_insert@@Base+0x384>
   29388:	ldr	r1, [r1]
   2938c:	ldr	r0, [r0]
   29390:	bl	14a60 <strncmp@plt>
   29394:	cmp	r0, #0
   29398:	bne	293e4 <fb_scope_table_insert@@Base+0x384>
   2939c:	ldr	r6, [r6]
   293a0:	ldr	r5, [r5]
   293a4:	adds	r9, r9, #1
   293a8:	bne	29364 <fb_scope_table_insert@@Base+0x304>
   293ac:	cmp	r5, #0
   293b0:	b	293b8 <fb_scope_table_insert@@Base+0x358>
   293b4:	orrs	r0, r5, r6
   293b8:	ldr	r9, [sp, #8]
   293bc:	ldr	r2, [sp, #20]
   293c0:	ldr	r1, [sp, #16]
   293c4:	ldr	r3, [sp, #24]
   293c8:	bne	2928c <fb_scope_table_insert@@Base+0x22c>
   293cc:	b	29410 <fb_scope_table_insert@@Base+0x3b0>
   293d0:	ldr	r2, [sp, #20]
   293d4:	ldr	r1, [sp, #16]
   293d8:	ldr	r3, [sp, #24]
   293dc:	mov	r4, lr
   293e0:	b	2928c <fb_scope_table_insert@@Base+0x22c>
   293e4:	ldr	r9, [sp, #8]
   293e8:	add	r3, sp, #16
   293ec:	ldm	r3, {r1, r2, r3}
   293f0:	b	2928c <fb_scope_table_insert@@Base+0x22c>
   293f4:	ldr	r0, [r5]
   293f8:	ldr	r2, [sp, #20]
   293fc:	ldr	r1, [sp, #16]
   29400:	mov	r4, lr
   29404:	cmp	r0, #0
   29408:	ldr	r3, [sp, #24]
   2940c:	bne	2928c <fb_scope_table_insert@@Base+0x22c>
   29410:	ldr	r0, [fp, #8]
   29414:	cmp	r0, #0
   29418:	bne	29444 <fb_scope_table_insert@@Base+0x3e4>
   2941c:	b	2943c <fb_scope_table_insert@@Base+0x3dc>
   29420:	ldr	r1, [sp]
   29424:	cmp	r4, #0
   29428:	movne	r7, r4
   2942c:	ldr	r0, [r1, #8]
   29430:	add	r0, r0, #1
   29434:	str	r0, [r1, #8]
   29438:	mov	sl, #0
   2943c:	ldr	r0, [sp, #4]
   29440:	str	r0, [r7]
   29444:	mov	r0, sl
   29448:	sub	sp, fp, #28
   2944c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29450:	ldr	r0, [pc, #140]	; 294e4 <fb_scope_table_insert@@Base+0x484>
   29454:	ldr	r1, [pc, #140]	; 294e8 <fb_scope_table_insert@@Base+0x488>
   29458:	ldr	r3, [pc, #140]	; 294ec <fb_scope_table_insert@@Base+0x48c>
   2945c:	mov	r2, #115	; 0x73
   29460:	add	r0, pc, r0
   29464:	add	r1, pc, r1
   29468:	add	r3, pc, r3
   2946c:	bl	14a78 <__assert_fail@plt>
   29470:	ldr	r0, [pc, #120]	; 294f0 <fb_scope_table_insert@@Base+0x490>
   29474:	ldr	r1, [pc, #120]	; 294f4 <fb_scope_table_insert@@Base+0x494>
   29478:	ldr	r3, [pc, #120]	; 294f8 <fb_scope_table_insert@@Base+0x498>
   2947c:	mov	r2, #116	; 0x74
   29480:	add	r0, pc, r0
   29484:	add	r1, pc, r1
   29488:	add	r3, pc, r3
   2948c:	bl	14a78 <__assert_fail@plt>
   29490:	ldr	r0, [pc, #64]	; 294d8 <fb_scope_table_insert@@Base+0x478>
   29494:	ldr	r1, [pc, #64]	; 294dc <fb_scope_table_insert@@Base+0x47c>
   29498:	ldr	r3, [pc, #64]	; 294e0 <fb_scope_table_insert@@Base+0x480>
   2949c:	mov	r2, #114	; 0x72
   294a0:	add	r0, pc, r0
   294a4:	add	r1, pc, r1
   294a8:	add	r3, pc, r3
   294ac:	bl	14a78 <__assert_fail@plt>
   294b0:	ldr	r0, [pc, #68]	; 294fc <fb_scope_table_insert@@Base+0x49c>
   294b4:	ldr	r0, [pc, r0]
   294b8:	ldr	r0, [r0]
   294bc:	ldr	r1, [pc, #60]	; 29500 <fb_scope_table_insert@@Base+0x4a0>
   294c0:	ldr	r2, [pc, #60]	; 29504 <fb_scope_table_insert@@Base+0x4a4>
   294c4:	add	r1, pc, r1
   294c8:	add	r2, pc, r2
   294cc:	bl	149b8 <fprintf@plt>
   294d0:	mov	r0, #1
   294d4:	bl	14994 <exit@plt>
   294d8:	andeq	lr, r2, r4, asr #1
   294dc:	ldrdeq	lr, [r2], -r7
   294e0:	andeq	lr, r2, sl, lsr r1
   294e4:	andeq	lr, r2, ip, asr #3
   294e8:	andeq	lr, r2, r7, lsl r1
   294ec:	andeq	lr, r2, sl, ror r1
   294f0:	andeq	lr, r2, r3, asr #3
   294f4:	strdeq	lr, [r2], -r7
   294f8:	andeq	lr, r2, sl, asr r1
   294fc:	andeq	r2, r4, r8, ror #23
   29500:	muleq	r2, r4, r1
   29504:	andeq	lr, r2, r7, lsr #3

00029508 <fb_scope_table_insert_item@@Base>:
   29508:	push	{fp, lr}
   2950c:	mov	fp, sp
   29510:	sub	sp, sp, #8
   29514:	mov	r3, r1
   29518:	ldr	r1, [r1]
   2951c:	str	r2, [sp]
   29520:	mov	r2, #0
   29524:	bl	29064 <fb_scope_table_insert@@Base+0x4>
   29528:	mov	sp, fp
   2952c:	pop	{fp, pc}

00029530 <fb_scope_table_find@@Base>:
   29530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29534:	add	fp, sp, #28
   29538:	sub	sp, sp, #28
   2953c:	ldr	r3, [r0]
   29540:	cmp	r3, #0
   29544:	str	r3, [sp, #20]
   29548:	beq	29800 <fb_scope_table_find@@Base+0x2d0>
   2954c:	ldr	ip, [r0, #12]
   29550:	cmp	r2, #1
   29554:	mov	sl, #0
   29558:	str	r2, [sp, #8]
   2955c:	blt	29618 <fb_scope_table_find@@Base+0xe8>
   29560:	movw	r8, #11863	; 0x2e57
   29564:	movw	lr, #15186	; 0x3b52
   29568:	movw	r9, #31153	; 0x79b1
   2956c:	mov	r7, r2
   29570:	mov	r0, r1
   29574:	movt	r8, #12137	; 0x2f69
   29578:	movt	lr, #12137	; 0x2f69
   2957c:	movt	r9, #40503	; 0x9e37
   29580:	cmp	r7, #0
   29584:	bne	295a0 <fb_scope_table_find@@Base+0x70>
   29588:	b	295d0 <fb_scope_table_find@@Base+0xa0>
   2958c:	add	r2, r4, #1
   29590:	add	r0, r0, r2
   29594:	sub	r7, r7, r2
   29598:	cmp	r7, #0
   2959c:	beq	295d0 <fb_scope_table_find@@Base+0xa0>
   295a0:	mov	r4, #0
   295a4:	ldrb	r2, [r0, r4]
   295a8:	cmp	r2, #46	; 0x2e
   295ac:	beq	295bc <fb_scope_table_find@@Base+0x8c>
   295b0:	add	r4, r4, #1
   295b4:	cmp	r4, r7
   295b8:	bcc	295a4 <fb_scope_table_find@@Base+0x74>
   295bc:	subs	r2, r4, #1
   295c0:	bne	295d8 <fb_scope_table_find@@Base+0xa8>
   295c4:	mov	r4, #1
   295c8:	mov	r5, r8
   295cc:	b	29600 <fb_scope_table_find@@Base+0xd0>
   295d0:	mvn	r2, #0
   295d4:	mov	r4, #0
   295d8:	mov	r5, r8
   295dc:	mov	r6, r0
   295e0:	ldrb	r3, [r6]
   295e4:	cmp	r3, #0
   295e8:	beq	29600 <fb_scope_table_find@@Base+0xd0>
   295ec:	add	r5, r5, r5, lsl #5
   295f0:	subs	r2, r2, #1
   295f4:	add	r6, r6, #1
   295f8:	eor	r5, r5, r3
   295fc:	bne	295e0 <fb_scope_table_find@@Base+0xb0>
   29600:	eor	r2, sl, lr
   29604:	cmp	r4, r7
   29608:	eor	r2, r2, r5
   2960c:	mul	sl, r2, r9
   29610:	bne	2958c <fb_scope_table_find@@Base+0x5c>
   29614:	b	2969c <fb_scope_table_find@@Base+0x16c>
   29618:	cmp	r1, #0
   2961c:	beq	2969c <fb_scope_table_find@@Base+0x16c>
   29620:	movw	r5, #11863	; 0x2e57
   29624:	movw	lr, #15186	; 0x3b52
   29628:	movw	r8, #31153	; 0x79b1
   2962c:	mov	r7, r2
   29630:	mov	r6, r1
   29634:	movt	r5, #12137	; 0x2f69
   29638:	movt	lr, #12137	; 0x2f69
   2963c:	movt	r8, #40503	; 0x9e37
   29640:	ldr	r2, [r6, #4]
   29644:	mov	r0, r5
   29648:	ldr	r4, [r2, #4]
   2964c:	cmp	r4, #1
   29650:	beq	29680 <fb_scope_table_find@@Base+0x150>
   29654:	ldr	r2, [r2]
   29658:	rsb	r4, r4, #1
   2965c:	mov	r0, r5
   29660:	ldrb	r3, [r2]
   29664:	cmp	r3, #0
   29668:	beq	29680 <fb_scope_table_find@@Base+0x150>
   2966c:	add	r0, r0, r0, lsl #5
   29670:	adds	r4, r4, #1
   29674:	add	r2, r2, #1
   29678:	eor	r0, r0, r3
   2967c:	bne	29660 <fb_scope_table_find@@Base+0x130>
   29680:	adds	r7, r7, #1
   29684:	eor	r2, sl, lr
   29688:	ldrne	r6, [r6]
   2968c:	eor	r0, r2, r0
   29690:	mul	sl, r0, r8
   29694:	cmpne	r6, #0
   29698:	bne	29640 <fb_scope_table_find@@Base+0x110>
   2969c:	sub	r0, ip, #1
   296a0:	str	r1, [sp, #4]
   296a4:	mov	r1, #0
   296a8:	str	sl, [sp, #12]
   296ac:	str	r0, [sp, #16]
   296b0:	mov	r0, sl
   296b4:	str	r1, [sp, #24]
   296b8:	b	296d0 <fb_scope_table_find@@Base+0x1a0>
   296bc:	ldr	r1, [sp, #24]
   296c0:	ldr	r0, [sp, #12]
   296c4:	add	r1, r1, #1
   296c8:	str	r1, [sp, #24]
   296cc:	add	r0, r1, r0
   296d0:	ldr	r1, [sp, #16]
   296d4:	and	r0, r0, r1
   296d8:	ldr	r1, [sp, #20]
   296dc:	ldr	r6, [r1, r0, lsl #2]
   296e0:	cmp	r6, #2
   296e4:	beq	296bc <fb_scope_table_find@@Base+0x18c>
   296e8:	cmp	r6, #0
   296ec:	beq	29800 <fb_scope_table_find@@Base+0x2d0>
   296f0:	ldr	r1, [sp, #8]
   296f4:	ldr	r8, [r6]
   296f8:	cmp	r1, #0
   296fc:	ble	29788 <fb_scope_table_find@@Base+0x258>
   29700:	ldr	r0, [sp, #4]
   29704:	cmp	r8, #0
   29708:	beq	296bc <fb_scope_table_find@@Base+0x18c>
   2970c:	ldr	r3, [r8, #4]
   29710:	ldr	r2, [r3, #4]
   29714:	cmp	r2, r1
   29718:	bhi	296bc <fb_scope_table_find@@Base+0x18c>
   2971c:	cmp	r2, #0
   29720:	beq	29754 <fb_scope_table_find@@Base+0x224>
   29724:	ldr	r4, [r3]
   29728:	mov	r3, #0
   2972c:	ldrb	r5, [r0, r3]
   29730:	ldrb	r7, [r4, r3]
   29734:	cmp	r7, r5
   29738:	bne	296bc <fb_scope_table_find@@Base+0x18c>
   2973c:	add	r3, r3, #1
   29740:	cmp	r3, r2
   29744:	bcc	2972c <fb_scope_table_find@@Base+0x1fc>
   29748:	cmp	r2, r1
   2974c:	bne	29760 <fb_scope_table_find@@Base+0x230>
   29750:	b	297f0 <fb_scope_table_find@@Base+0x2c0>
   29754:	mov	r3, #0
   29758:	cmp	r2, r1
   2975c:	beq	297f0 <fb_scope_table_find@@Base+0x2c0>
   29760:	ldrb	r3, [r0, r3]
   29764:	cmp	r3, #46	; 0x2e
   29768:	bne	296bc <fb_scope_table_find@@Base+0x18c>
   2976c:	ldr	r8, [r8]
   29770:	add	r2, r2, #1
   29774:	add	r0, r0, r2
   29778:	sub	r1, r1, r2
   2977c:	cmp	r8, #0
   29780:	bne	2970c <fb_scope_table_find@@Base+0x1dc>
   29784:	b	296bc <fb_scope_table_find@@Base+0x18c>
   29788:	ldr	r9, [sp, #4]
   2978c:	mov	sl, r1
   29790:	cmp	r8, #0
   29794:	cmpne	r9, #0
   29798:	beq	297e4 <fb_scope_table_find@@Base+0x2b4>
   2979c:	ldr	r0, [r8, #4]
   297a0:	ldr	r1, [r9, #4]
   297a4:	ldr	r2, [r0, #4]
   297a8:	ldr	r3, [r1, #4]
   297ac:	cmp	r2, r3
   297b0:	bne	296bc <fb_scope_table_find@@Base+0x18c>
   297b4:	ldr	r1, [r1]
   297b8:	ldr	r0, [r0]
   297bc:	bl	14a60 <strncmp@plt>
   297c0:	cmp	r0, #0
   297c4:	bne	296bc <fb_scope_table_find@@Base+0x18c>
   297c8:	ldr	r9, [r9]
   297cc:	ldr	r8, [r8]
   297d0:	adds	sl, sl, #1
   297d4:	bne	29790 <fb_scope_table_find@@Base+0x260>
   297d8:	cmp	r8, #0
   297dc:	bne	296bc <fb_scope_table_find@@Base+0x18c>
   297e0:	b	29804 <fb_scope_table_find@@Base+0x2d4>
   297e4:	orrs	r0, r8, r9
   297e8:	bne	296bc <fb_scope_table_find@@Base+0x18c>
   297ec:	b	29804 <fb_scope_table_find@@Base+0x2d4>
   297f0:	ldr	r0, [r8]
   297f4:	cmp	r0, #0
   297f8:	bne	296bc <fb_scope_table_find@@Base+0x18c>
   297fc:	b	29804 <fb_scope_table_find@@Base+0x2d4>
   29800:	mov	r6, #0
   29804:	mov	r0, r6
   29808:	sub	sp, fp, #28
   2980c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00029810 <fb_scope_table_find_item@@Base>:
   29810:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29814:	add	fp, sp, #28
   29818:	sub	sp, sp, #12
   2981c:	ldr	r9, [r0]
   29820:	cmp	r9, #0
   29824:	beq	29994 <fb_scope_table_find_item@@Base+0x184>
   29828:	ldr	r1, [r1]
   2982c:	ldr	ip, [r0, #12]
   29830:	mov	r7, #0
   29834:	mov	r6, #0
   29838:	cmp	r1, #0
   2983c:	str	r1, [sp, #8]
   29840:	beq	298bc <fb_scope_table_find_item@@Base+0xac>
   29844:	ldr	r5, [sp, #8]
   29848:	movw	r4, #11863	; 0x2e57
   2984c:	movw	lr, #15186	; 0x3b52
   29850:	movw	r8, #31153	; 0x79b1
   29854:	mov	r6, #0
   29858:	movt	r4, #12137	; 0x2f69
   2985c:	movt	lr, #12137	; 0x2f69
   29860:	movt	r8, #40503	; 0x9e37
   29864:	ldr	r2, [r5, #4]
   29868:	mov	r1, r4
   2986c:	ldr	r0, [r2, #4]
   29870:	cmp	r0, #1
   29874:	beq	298a4 <fb_scope_table_find_item@@Base+0x94>
   29878:	ldr	r2, [r2]
   2987c:	rsb	r0, r0, #1
   29880:	mov	r1, r4
   29884:	ldrb	r3, [r2]
   29888:	cmp	r3, #0
   2988c:	beq	298a4 <fb_scope_table_find_item@@Base+0x94>
   29890:	add	r1, r1, r1, lsl #5
   29894:	adds	r0, r0, #1
   29898:	add	r2, r2, #1
   2989c:	eor	r1, r1, r3
   298a0:	bne	29884 <fb_scope_table_find_item@@Base+0x74>
   298a4:	ldr	r5, [r5]
   298a8:	eor	r0, r6, r1
   298ac:	eor	r0, r0, lr
   298b0:	mul	r6, r0, r8
   298b4:	cmp	r5, #0
   298b8:	bne	29864 <fb_scope_table_find_item@@Base+0x54>
   298bc:	ldr	r0, [sp, #8]
   298c0:	sub	r5, ip, #1
   298c4:	cmp	r0, #0
   298c8:	movwne	r0, #1
   298cc:	str	r0, [sp, #4]
   298d0:	mov	r0, r6
   298d4:	b	298e0 <fb_scope_table_find_item@@Base+0xd0>
   298d8:	add	r7, r7, #1
   298dc:	add	r0, r7, r6
   298e0:	and	r0, r0, r5
   298e4:	ldr	r4, [r9, r0, lsl #2]
   298e8:	cmp	r4, #2
   298ec:	beq	298d8 <fb_scope_table_find_item@@Base+0xc8>
   298f0:	cmp	r4, #0
   298f4:	beq	29994 <fb_scope_table_find_item@@Base+0x184>
   298f8:	ldr	r8, [r4]
   298fc:	ldr	r1, [sp, #8]
   29900:	cmp	r8, #0
   29904:	mov	r0, r8
   29908:	movwne	r0, #1
   2990c:	cmp	r1, #0
   29910:	beq	29980 <fb_scope_table_find_item@@Base+0x170>
   29914:	ldr	r1, [sp, #4]
   29918:	cmp	r8, #0
   2991c:	beq	29984 <fb_scope_table_find_item@@Base+0x174>
   29920:	ldr	sl, [sp, #8]
   29924:	ldr	r0, [r8, #4]
   29928:	ldr	r1, [sl, #4]
   2992c:	ldr	r2, [r0, #4]
   29930:	ldr	r3, [r1, #4]
   29934:	cmp	r2, r3
   29938:	bne	298d8 <fb_scope_table_find_item@@Base+0xc8>
   2993c:	ldr	r1, [r1]
   29940:	ldr	r0, [r0]
   29944:	bl	14a60 <strncmp@plt>
   29948:	cmp	r0, #0
   2994c:	bne	298d8 <fb_scope_table_find_item@@Base+0xc8>
   29950:	ldr	sl, [sl]
   29954:	ldr	r8, [r8]
   29958:	cmp	sl, #0
   2995c:	mov	r1, sl
   29960:	mov	r0, r8
   29964:	movwne	r1, #1
   29968:	cmp	r8, #0
   2996c:	movwne	r0, #1
   29970:	cmp	sl, #0
   29974:	cmpne	r8, #0
   29978:	bne	29924 <fb_scope_table_find_item@@Base+0x114>
   2997c:	b	29984 <fb_scope_table_find_item@@Base+0x174>
   29980:	ldr	r1, [sp, #4]
   29984:	cmp	r1, #0
   29988:	cmpeq	r0, #0
   2998c:	bne	298d8 <fb_scope_table_find_item@@Base+0xc8>
   29990:	b	29998 <fb_scope_table_find_item@@Base+0x188>
   29994:	mov	r4, #0
   29998:	mov	r0, r4
   2999c:	sub	sp, fp, #28
   299a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000299a4 <fb_scope_table_remove@@Base>:
   299a4:	b	299a8 <fb_scope_table_remove@@Base+0x4>
   299a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   299ac:	add	fp, sp, #28
   299b0:	sub	sp, sp, #28
   299b4:	ldr	r3, [r0]
   299b8:	cmp	r3, #0
   299bc:	str	r3, [sp, #24]
   299c0:	beq	29c84 <fb_scope_table_remove@@Base+0x2e0>
   299c4:	ldr	ip, [r0, #12]
   299c8:	cmp	r2, #1
   299cc:	mov	r9, #0
   299d0:	stmib	sp, {r0, r1, r2}
   299d4:	blt	29a90 <fb_scope_table_remove@@Base+0xec>
   299d8:	movw	r8, #11863	; 0x2e57
   299dc:	movw	lr, #15186	; 0x3b52
   299e0:	movw	r6, #31153	; 0x79b1
   299e4:	mov	r7, r2
   299e8:	mov	r4, r1
   299ec:	movt	r8, #12137	; 0x2f69
   299f0:	movt	lr, #12137	; 0x2f69
   299f4:	movt	r6, #40503	; 0x9e37
   299f8:	cmp	r7, #0
   299fc:	bne	29a18 <fb_scope_table_remove@@Base+0x74>
   29a00:	b	29a48 <fb_scope_table_remove@@Base+0xa4>
   29a04:	add	r0, r0, #1
   29a08:	add	r4, r4, r0
   29a0c:	sub	r7, r7, r0
   29a10:	cmp	r7, #0
   29a14:	beq	29a48 <fb_scope_table_remove@@Base+0xa4>
   29a18:	mov	r0, #0
   29a1c:	ldrb	r1, [r4, r0]
   29a20:	cmp	r1, #46	; 0x2e
   29a24:	beq	29a34 <fb_scope_table_remove@@Base+0x90>
   29a28:	add	r0, r0, #1
   29a2c:	cmp	r0, r7
   29a30:	bcc	29a1c <fb_scope_table_remove@@Base+0x78>
   29a34:	subs	r2, r0, #1
   29a38:	bne	29a50 <fb_scope_table_remove@@Base+0xac>
   29a3c:	mov	r0, #1
   29a40:	mov	r1, r8
   29a44:	b	29a78 <fb_scope_table_remove@@Base+0xd4>
   29a48:	mvn	r2, #0
   29a4c:	mov	r0, #0
   29a50:	mov	r1, r8
   29a54:	mov	r5, r4
   29a58:	ldrb	r3, [r5]
   29a5c:	cmp	r3, #0
   29a60:	beq	29a78 <fb_scope_table_remove@@Base+0xd4>
   29a64:	add	r1, r1, r1, lsl #5
   29a68:	subs	r2, r2, #1
   29a6c:	add	r5, r5, #1
   29a70:	eor	r1, r1, r3
   29a74:	bne	29a58 <fb_scope_table_remove@@Base+0xb4>
   29a78:	eor	r2, r9, lr
   29a7c:	cmp	r0, r7
   29a80:	eor	r1, r2, r1
   29a84:	mul	r9, r1, r6
   29a88:	bne	29a04 <fb_scope_table_remove@@Base+0x60>
   29a8c:	b	29b14 <fb_scope_table_remove@@Base+0x170>
   29a90:	cmp	r1, #0
   29a94:	beq	29b14 <fb_scope_table_remove@@Base+0x170>
   29a98:	movw	r5, #11863	; 0x2e57
   29a9c:	movw	lr, #15186	; 0x3b52
   29aa0:	movw	r8, #31153	; 0x79b1
   29aa4:	mov	r3, r2
   29aa8:	mov	r7, r1
   29aac:	movt	r5, #12137	; 0x2f69
   29ab0:	movt	lr, #12137	; 0x2f69
   29ab4:	movt	r8, #40503	; 0x9e37
   29ab8:	ldr	r1, [r7, #4]
   29abc:	mov	r0, r5
   29ac0:	ldr	r4, [r1, #4]
   29ac4:	cmp	r4, #1
   29ac8:	beq	29af8 <fb_scope_table_remove@@Base+0x154>
   29acc:	ldr	r1, [r1]
   29ad0:	rsb	r4, r4, #1
   29ad4:	mov	r0, r5
   29ad8:	ldrb	r2, [r1]
   29adc:	cmp	r2, #0
   29ae0:	beq	29af8 <fb_scope_table_remove@@Base+0x154>
   29ae4:	add	r0, r0, r0, lsl #5
   29ae8:	adds	r4, r4, #1
   29aec:	add	r1, r1, #1
   29af0:	eor	r0, r0, r2
   29af4:	bne	29ad8 <fb_scope_table_remove@@Base+0x134>
   29af8:	adds	r3, r3, #1
   29afc:	eor	r1, r9, lr
   29b00:	ldrne	r7, [r7]
   29b04:	eor	r0, r1, r0
   29b08:	mul	r9, r0, r8
   29b0c:	cmpne	r7, #0
   29b10:	bne	29ab8 <fb_scope_table_remove@@Base+0x114>
   29b14:	sub	r0, ip, #1
   29b18:	mov	r8, #0
   29b1c:	str	r0, [sp, #20]
   29b20:	mov	r0, r9
   29b24:	b	29b30 <fb_scope_table_remove@@Base+0x18c>
   29b28:	add	r8, r8, #1
   29b2c:	add	r0, r8, r9
   29b30:	ldr	r1, [sp, #20]
   29b34:	and	r1, r0, r1
   29b38:	ldr	r0, [sp, #24]
   29b3c:	str	r1, [sp, #16]
   29b40:	ldr	r7, [r0, r1, lsl #2]
   29b44:	cmp	r7, #2
   29b48:	beq	29b28 <fb_scope_table_remove@@Base+0x184>
   29b4c:	cmp	r7, #0
   29b50:	beq	29c84 <fb_scope_table_remove@@Base+0x2e0>
   29b54:	ldr	r1, [sp, #12]
   29b58:	ldr	sl, [r7]
   29b5c:	cmp	r1, #0
   29b60:	ble	29bec <fb_scope_table_remove@@Base+0x248>
   29b64:	ldr	r0, [sp, #8]
   29b68:	cmp	sl, #0
   29b6c:	beq	29b28 <fb_scope_table_remove@@Base+0x184>
   29b70:	ldr	r3, [sl, #4]
   29b74:	ldr	r2, [r3, #4]
   29b78:	cmp	r2, r1
   29b7c:	bhi	29b28 <fb_scope_table_remove@@Base+0x184>
   29b80:	cmp	r2, #0
   29b84:	beq	29bb8 <fb_scope_table_remove@@Base+0x214>
   29b88:	ldr	r5, [r3]
   29b8c:	mov	r3, #0
   29b90:	ldrb	r4, [r0, r3]
   29b94:	ldrb	r6, [r5, r3]
   29b98:	cmp	r6, r4
   29b9c:	bne	29b28 <fb_scope_table_remove@@Base+0x184>
   29ba0:	add	r3, r3, #1
   29ba4:	cmp	r3, r2
   29ba8:	bcc	29b90 <fb_scope_table_remove@@Base+0x1ec>
   29bac:	cmp	r2, r1
   29bb0:	bne	29bc4 <fb_scope_table_remove@@Base+0x220>
   29bb4:	b	29c54 <fb_scope_table_remove@@Base+0x2b0>
   29bb8:	mov	r3, #0
   29bbc:	cmp	r2, r1
   29bc0:	beq	29c54 <fb_scope_table_remove@@Base+0x2b0>
   29bc4:	ldrb	r3, [r0, r3]
   29bc8:	cmp	r3, #46	; 0x2e
   29bcc:	bne	29b28 <fb_scope_table_remove@@Base+0x184>
   29bd0:	ldr	sl, [sl]
   29bd4:	add	r2, r2, #1
   29bd8:	add	r0, r0, r2
   29bdc:	sub	r1, r1, r2
   29be0:	cmp	sl, #0
   29be4:	bne	29b70 <fb_scope_table_remove@@Base+0x1cc>
   29be8:	b	29b28 <fb_scope_table_remove@@Base+0x184>
   29bec:	ldr	r4, [sp, #8]
   29bf0:	mov	r5, r1
   29bf4:	cmp	sl, #0
   29bf8:	cmpne	r4, #0
   29bfc:	beq	29c48 <fb_scope_table_remove@@Base+0x2a4>
   29c00:	ldr	r0, [sl, #4]
   29c04:	ldr	r1, [r4, #4]
   29c08:	ldr	r2, [r0, #4]
   29c0c:	ldr	r3, [r1, #4]
   29c10:	cmp	r2, r3
   29c14:	bne	29b28 <fb_scope_table_remove@@Base+0x184>
   29c18:	ldr	r1, [r1]
   29c1c:	ldr	r0, [r0]
   29c20:	bl	14a60 <strncmp@plt>
   29c24:	cmp	r0, #0
   29c28:	bne	29b28 <fb_scope_table_remove@@Base+0x184>
   29c2c:	ldr	r4, [r4]
   29c30:	ldr	sl, [sl]
   29c34:	adds	r5, r5, #1
   29c38:	bne	29bf4 <fb_scope_table_remove@@Base+0x250>
   29c3c:	cmp	sl, #0
   29c40:	bne	29b28 <fb_scope_table_remove@@Base+0x184>
   29c44:	b	29c60 <fb_scope_table_remove@@Base+0x2bc>
   29c48:	orrs	r0, sl, r4
   29c4c:	bne	29b28 <fb_scope_table_remove@@Base+0x184>
   29c50:	b	29c60 <fb_scope_table_remove@@Base+0x2bc>
   29c54:	ldr	r0, [sl]
   29c58:	cmp	r0, #0
   29c5c:	bne	29b28 <fb_scope_table_remove@@Base+0x184>
   29c60:	ldr	r1, [sp, #24]
   29c64:	ldr	r2, [sp, #16]
   29c68:	mov	r0, #2
   29c6c:	str	r0, [r1, r2, lsl #2]
   29c70:	ldr	r1, [sp, #4]
   29c74:	ldr	r0, [r1, #8]
   29c78:	sub	r0, r0, #1
   29c7c:	str	r0, [r1, #8]
   29c80:	b	29c88 <fb_scope_table_remove@@Base+0x2e4>
   29c84:	mov	r7, #0
   29c88:	mov	r0, r7
   29c8c:	sub	sp, fp, #28
   29c90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00029c94 <fb_scope_table_remove_item@@Base>:
   29c94:	ldr	r1, [r1]
   29c98:	mov	r2, #0
   29c9c:	b	299a8 <fb_scope_table_remove@@Base+0x4>

00029ca0 <fb_scope_table_visit@@Base>:
   29ca0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29ca4:	add	fp, sp, #24
   29ca8:	mov	r6, r0
   29cac:	ldr	r0, [r0, #12]
   29cb0:	cmp	r0, #0
   29cb4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   29cb8:	ldr	r7, [r6]
   29cbc:	mov	r8, r2
   29cc0:	mov	r5, r1
   29cc4:	mov	r4, #0
   29cc8:	ldr	r1, [r7, r4, lsl #2]
   29ccc:	orr	r2, r1, #2
   29cd0:	cmp	r2, #2
   29cd4:	beq	29ce4 <fb_scope_table_visit@@Base+0x44>
   29cd8:	mov	r0, r8
   29cdc:	blx	r5
   29ce0:	ldr	r0, [r6, #12]
   29ce4:	add	r4, r4, #1
   29ce8:	cmp	r4, r0
   29cec:	bcc	29cc8 <fb_scope_table_visit@@Base+0x28>
   29cf0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029cf4 <fb_schema_table_clear@@Base>:
   29cf4:	push	{r4, sl, fp, lr}
   29cf8:	add	fp, sp, #8
   29cfc:	mov	r4, r0
   29d00:	ldr	r0, [r0]
   29d04:	cmp	r0, #0
   29d08:	beq	29d10 <fb_schema_table_clear@@Base+0x1c>
   29d0c:	bl	148f8 <free@plt>
   29d10:	vmov.i32	q8, #0	; 0x00000000
   29d14:	vst1.32	{d16-d17}, [r4]
   29d18:	pop	{r4, sl, fp, pc}

00029d1c <fb_schema_table_destroy@@Base>:
   29d1c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   29d20:	add	fp, sp, #24
   29d24:	mov	r4, r0
   29d28:	cmp	r1, #0
   29d2c:	ldrne	r0, [r4, #12]
   29d30:	cmpne	r0, #0
   29d34:	beq	29d70 <fb_schema_table_destroy@@Base+0x54>
   29d38:	ldr	r7, [r4]
   29d3c:	mov	r8, r2
   29d40:	mov	r6, r1
   29d44:	mov	r5, #0
   29d48:	ldr	r1, [r7, r5, lsl #2]
   29d4c:	orr	r2, r1, #2
   29d50:	cmp	r2, #2
   29d54:	beq	29d64 <fb_schema_table_destroy@@Base+0x48>
   29d58:	mov	r0, r8
   29d5c:	blx	r6
   29d60:	ldr	r0, [r4, #12]
   29d64:	add	r5, r5, #1
   29d68:	cmp	r5, r0
   29d6c:	bcc	29d48 <fb_schema_table_destroy@@Base+0x2c>
   29d70:	ldr	r0, [r4]
   29d74:	cmp	r0, #0
   29d78:	beq	29d80 <fb_schema_table_destroy@@Base+0x64>
   29d7c:	bl	148f8 <free@plt>
   29d80:	vmov.i32	q8, #0	; 0x00000000
   29d84:	vst1.32	{d16-d17}, [r4]
   29d88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00029d8c <fb_schema_table_init@@Base>:
   29d8c:	push	{r4, r5, fp, lr}
   29d90:	add	fp, sp, #8
   29d94:	mov	r4, r0
   29d98:	mov	r2, #4
   29d9c:	mov	r0, #179	; 0xb3
   29da0:	mul	r3, r2, r0
   29da4:	mov	r5, r2
   29da8:	lsl	r2, r2, #1
   29dac:	cmp	r1, r3, lsr #8
   29db0:	bhi	29da0 <fb_schema_table_init@@Base+0x14>
   29db4:	mov	r0, r5
   29db8:	mov	r1, #4
   29dbc:	bl	148c8 <calloc@plt>
   29dc0:	cmp	r0, #0
   29dc4:	str	r0, [r4]
   29dc8:	movne	r0, #0
   29dcc:	strne	r0, [r4, #4]
   29dd0:	strne	r0, [r4, #8]
   29dd4:	strne	r5, [r4, #12]
   29dd8:	popne	{r4, r5, fp, pc}
   29ddc:	mvn	r0, #0
   29de0:	pop	{r4, r5, fp, pc}

00029de4 <fb_schema_table_resize@@Base>:
   29de4:	b	29de8 <fb_schema_table_resize@@Base+0x4>
   29de8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   29dec:	add	fp, sp, #24
   29df0:	sub	sp, sp, #24
   29df4:	mov	r4, r0
   29df8:	ldr	r5, [r0]
   29dfc:	ldr	r0, [r0, #8]
   29e00:	mov	r2, #4
   29e04:	cmp	r0, r1
   29e08:	movhi	r1, r0
   29e0c:	mov	r0, #179	; 0xb3
   29e10:	mul	r3, r2, r0
   29e14:	mov	r6, r2
   29e18:	lsl	r2, r2, #1
   29e1c:	cmp	r1, r3, lsr #8
   29e20:	bhi	29e10 <fb_schema_table_resize@@Base+0x2c>
   29e24:	mov	r0, r6
   29e28:	mov	r1, #4
   29e2c:	bl	148c8 <calloc@plt>
   29e30:	cmp	r0, #0
   29e34:	str	r0, [sp, #8]
   29e38:	mvneq	r0, #0
   29e3c:	subeq	sp, fp, #24
   29e40:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   29e44:	mov	r7, #0
   29e48:	str	r6, [sp, #20]
   29e4c:	str	r7, [sp, #12]
   29e50:	str	r7, [sp, #16]
   29e54:	ldr	r0, [r4, #12]
   29e58:	cmp	r0, #0
   29e5c:	beq	29ea8 <fb_schema_table_resize@@Base+0xc4>
   29e60:	mov	r8, #3
   29e64:	add	r6, sp, #8
   29e68:	ldr	r3, [r5, r7, lsl #2]
   29e6c:	orr	r1, r3, #2
   29e70:	cmp	r1, #2
   29e74:	beq	29e98 <fb_schema_table_resize@@Base+0xb4>
   29e78:	ldr	r2, [r3, #144]	; 0x90
   29e7c:	ldr	r9, [r3, #148]	; 0x94
   29e80:	mov	r0, r6
   29e84:	str	r8, [sp]
   29e88:	mov	r1, r2
   29e8c:	mov	r2, r9
   29e90:	bl	29ed4 <fb_schema_table_insert@@Base+0x4>
   29e94:	ldr	r0, [r4, #12]
   29e98:	add	r7, r7, #1
   29e9c:	cmp	r7, r0
   29ea0:	bcc	29e68 <fb_schema_table_resize@@Base+0x84>
   29ea4:	ldr	r5, [r4]
   29ea8:	cmp	r5, #0
   29eac:	beq	29eb8 <fb_schema_table_resize@@Base+0xd4>
   29eb0:	mov	r0, r5
   29eb4:	bl	148f8 <free@plt>
   29eb8:	add	r0, sp, #8
   29ebc:	vld1.64	{d16-d17}, [r0]
   29ec0:	mov	r0, #0
   29ec4:	vst1.32	{d16-d17}, [r4]
   29ec8:	sub	sp, fp, #24
   29ecc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00029ed0 <fb_schema_table_insert@@Base>:
   29ed0:	b	29ed4 <fb_schema_table_insert@@Base+0x4>
   29ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29ed8:	add	fp, sp, #28
   29edc:	sub	sp, sp, #36	; 0x24
   29ee0:	cmp	r3, #2
   29ee4:	str	r1, [sp, #20]
   29ee8:	beq	2a05c <fb_schema_table_insert@@Base+0x18c>
   29eec:	mov	sl, r3
   29ef0:	cmp	r3, #1
   29ef4:	beq	2a07c <fb_schema_table_insert@@Base+0x1ac>
   29ef8:	cmp	sl, #0
   29efc:	beq	2a09c <fb_schema_table_insert@@Base+0x1cc>
   29f00:	mov	r7, r0
   29f04:	ldr	r0, [r0, #8]
   29f08:	mov	r1, #179	; 0xb3
   29f0c:	mov	r6, r2
   29f10:	ldr	r4, [r7, #12]
   29f14:	mul	r1, r4, r1
   29f18:	cmp	r0, r1, lsr #8
   29f1c:	bcc	29f38 <fb_schema_table_insert@@Base+0x68>
   29f20:	lsl	r1, r0, #1
   29f24:	mov	r0, r7
   29f28:	bl	29de8 <fb_schema_table_resize@@Base+0x4>
   29f2c:	cmp	r0, #0
   29f30:	bne	2a0bc <fb_schema_table_insert@@Base+0x1ec>
   29f34:	ldr	r4, [r7, #12]
   29f38:	add	r0, sp, #24
   29f3c:	ldr	r9, [r7]
   29f40:	movw	r1, #15186	; 0x3b52
   29f44:	mov	r2, r6
   29f48:	mov	r3, #0
   29f4c:	mov	r8, #0
   29f50:	str	r0, [sp, #4]
   29f54:	ldr	r0, [sp, #20]
   29f58:	movt	r1, #12137	; 0x2f69
   29f5c:	str	r1, [sp]
   29f60:	bl	3c888 <cmetrohash64_1@@Base>
   29f64:	ldr	r2, [fp, #8]
   29f68:	ldr	r1, [sp, #24]
   29f6c:	sub	r5, r4, #1
   29f70:	orr	r2, r2, #1
   29f74:	and	r0, r5, r1
   29f78:	cmp	r2, #3
   29f7c:	bne	29fb4 <fb_schema_table_insert@@Base+0xe4>
   29f80:	ldr	r2, [r7, #8]
   29f84:	add	r2, r2, #1
   29f88:	str	r2, [r7, #8]
   29f8c:	b	29f94 <fb_schema_table_insert@@Base+0xc4>
   29f90:	and	r0, r1, r5
   29f94:	mov	r7, r9
   29f98:	add	r1, r1, #1
   29f9c:	ldr	r0, [r7, r0, lsl #2]!
   29fa0:	orr	r0, r0, #2
   29fa4:	cmp	r0, #2
   29fa8:	bne	29f90 <fb_schema_table_insert@@Base+0xc0>
   29fac:	mov	r4, #0
   29fb0:	b	2a038 <fb_schema_table_insert@@Base+0x168>
   29fb4:	str	sl, [sp, #16]
   29fb8:	add	sl, r1, #1
   29fbc:	str	r7, [sp, #12]
   29fc0:	b	29fcc <fb_schema_table_insert@@Base+0xfc>
   29fc4:	and	r0, sl, r5
   29fc8:	add	sl, sl, #1
   29fcc:	mov	r7, r9
   29fd0:	ldr	r4, [r7, r0, lsl #2]!
   29fd4:	cmp	r4, #2
   29fd8:	beq	2a00c <fb_schema_table_insert@@Base+0x13c>
   29fdc:	cmp	r4, #0
   29fe0:	beq	2a018 <fb_schema_table_insert@@Base+0x148>
   29fe4:	ldr	r0, [r4, #148]	; 0x94
   29fe8:	cmp	r0, r6
   29fec:	bne	29fc4 <fb_schema_table_insert@@Base+0xf4>
   29ff0:	ldr	r1, [r4, #144]	; 0x90
   29ff4:	ldr	r0, [sp, #20]
   29ff8:	mov	r2, r6
   29ffc:	bl	1491c <memcmp@plt>
   2a000:	cmp	r0, #0
   2a004:	bne	29fc4 <fb_schema_table_insert@@Base+0xf4>
   2a008:	b	2a048 <fb_schema_table_insert@@Base+0x178>
   2a00c:	cmp	r8, #0
   2a010:	moveq	r8, r7
   2a014:	b	29fc4 <fb_schema_table_insert@@Base+0xf4>
   2a018:	ldr	r1, [sp, #12]
   2a01c:	ldr	sl, [sp, #16]
   2a020:	cmp	r8, #0
   2a024:	mov	r4, #0
   2a028:	movne	r7, r8
   2a02c:	ldr	r0, [r1, #8]
   2a030:	add	r0, r0, #1
   2a034:	str	r0, [r1, #8]
   2a038:	str	sl, [r7]
   2a03c:	mov	r0, r4
   2a040:	sub	sp, fp, #28
   2a044:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a048:	ldr	r0, [fp, #8]
   2a04c:	ldr	sl, [sp, #16]
   2a050:	cmp	r0, #0
   2a054:	streq	sl, [r7]
   2a058:	b	2a03c <fb_schema_table_insert@@Base+0x16c>
   2a05c:	ldr	r0, [pc, #140]	; 2a0f0 <fb_schema_table_insert@@Base+0x220>
   2a060:	ldr	r1, [pc, #140]	; 2a0f4 <fb_schema_table_insert@@Base+0x224>
   2a064:	ldr	r3, [pc, #140]	; 2a0f8 <fb_schema_table_insert@@Base+0x228>
   2a068:	mov	r2, #115	; 0x73
   2a06c:	add	r0, pc, r0
   2a070:	add	r1, pc, r1
   2a074:	add	r3, pc, r3
   2a078:	bl	14a78 <__assert_fail@plt>
   2a07c:	ldr	r0, [pc, #120]	; 2a0fc <fb_schema_table_insert@@Base+0x22c>
   2a080:	ldr	r1, [pc, #120]	; 2a100 <fb_schema_table_insert@@Base+0x230>
   2a084:	ldr	r3, [pc, #120]	; 2a104 <fb_schema_table_insert@@Base+0x234>
   2a088:	mov	r2, #116	; 0x74
   2a08c:	add	r0, pc, r0
   2a090:	add	r1, pc, r1
   2a094:	add	r3, pc, r3
   2a098:	bl	14a78 <__assert_fail@plt>
   2a09c:	ldr	r0, [pc, #64]	; 2a0e4 <fb_schema_table_insert@@Base+0x214>
   2a0a0:	ldr	r1, [pc, #64]	; 2a0e8 <fb_schema_table_insert@@Base+0x218>
   2a0a4:	ldr	r3, [pc, #64]	; 2a0ec <fb_schema_table_insert@@Base+0x21c>
   2a0a8:	mov	r2, #114	; 0x72
   2a0ac:	add	r0, pc, r0
   2a0b0:	add	r1, pc, r1
   2a0b4:	add	r3, pc, r3
   2a0b8:	bl	14a78 <__assert_fail@plt>
   2a0bc:	ldr	r0, [pc, #68]	; 2a108 <fb_schema_table_insert@@Base+0x238>
   2a0c0:	ldr	r0, [pc, r0]
   2a0c4:	ldr	r0, [r0]
   2a0c8:	ldr	r1, [pc, #60]	; 2a10c <fb_schema_table_insert@@Base+0x23c>
   2a0cc:	ldr	r2, [pc, #60]	; 2a110 <fb_schema_table_insert@@Base+0x240>
   2a0d0:	add	r1, pc, r1
   2a0d4:	add	r2, pc, r2
   2a0d8:	bl	149b8 <fprintf@plt>
   2a0dc:	mov	r0, #1
   2a0e0:	bl	14994 <exit@plt>
   2a0e4:			; <UNDEFINED> instruction: 0x0002d4b8
   2a0e8:	andeq	sp, r2, fp, asr #9
   2a0ec:	andeq	sp, r2, lr, lsr #10
   2a0f0:	andeq	sp, r2, r0, asr #11
   2a0f4:	andeq	sp, r2, fp, lsl #10
   2a0f8:	andeq	sp, r2, lr, ror #10
   2a0fc:			; <UNDEFINED> instruction: 0x0002d5b7
   2a100:	andeq	sp, r2, fp, ror #9
   2a104:	andeq	sp, r2, lr, asr #10
   2a108:	ldrdeq	r1, [r4], -ip
   2a10c:	andeq	sp, r2, r8, lsl #11
   2a110:	muleq	r2, fp, r5

0002a114 <fb_schema_table_insert_item@@Base>:
   2a114:	push	{r4, r5, fp, lr}
   2a118:	add	fp, sp, #8
   2a11c:	sub	sp, sp, #8
   2a120:	ldrd	r4, [r1, #144]	; 0x90
   2a124:	mov	r3, r1
   2a128:	str	r2, [sp]
   2a12c:	mov	r1, r4
   2a130:	mov	r2, r5
   2a134:	bl	29ed4 <fb_schema_table_insert@@Base+0x4>
   2a138:	sub	sp, fp, #8
   2a13c:	pop	{r4, r5, fp, pc}

0002a140 <fb_schema_table_find@@Base>:
   2a140:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a144:	add	fp, sp, #24
   2a148:	sub	sp, sp, #16
   2a14c:	ldr	r7, [r0]
   2a150:	cmp	r7, #0
   2a154:	beq	2a1d4 <fb_schema_table_find@@Base+0x94>
   2a158:	ldr	r4, [r0, #12]
   2a15c:	mov	r8, r1
   2a160:	movw	r1, #15186	; 0x3b52
   2a164:	add	r0, sp, #8
   2a168:	mov	r3, #0
   2a16c:	mov	r9, r2
   2a170:	movt	r1, #12137	; 0x2f69
   2a174:	str	r0, [sp, #4]
   2a178:	mov	r0, r8
   2a17c:	str	r1, [sp]
   2a180:	bl	3c888 <cmetrohash64_1@@Base>
   2a184:	ldr	r5, [sp, #8]
   2a188:	sub	r4, r4, #1
   2a18c:	b	2a194 <fb_schema_table_find@@Base+0x54>
   2a190:	add	r5, r5, #1
   2a194:	and	r0, r5, r4
   2a198:	ldr	r6, [r7, r0, lsl #2]
   2a19c:	cmp	r6, #2
   2a1a0:	beq	2a190 <fb_schema_table_find@@Base+0x50>
   2a1a4:	cmp	r6, #0
   2a1a8:	beq	2a1d4 <fb_schema_table_find@@Base+0x94>
   2a1ac:	ldr	r0, [r6, #148]	; 0x94
   2a1b0:	cmp	r0, r9
   2a1b4:	bne	2a190 <fb_schema_table_find@@Base+0x50>
   2a1b8:	ldr	r1, [r6, #144]	; 0x90
   2a1bc:	mov	r0, r8
   2a1c0:	mov	r2, r9
   2a1c4:	bl	1491c <memcmp@plt>
   2a1c8:	cmp	r0, #0
   2a1cc:	bne	2a190 <fb_schema_table_find@@Base+0x50>
   2a1d0:	b	2a1d8 <fb_schema_table_find@@Base+0x98>
   2a1d4:	mov	r6, #0
   2a1d8:	mov	r0, r6
   2a1dc:	sub	sp, fp, #24
   2a1e0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a1e4 <fb_schema_table_find_item@@Base>:
   2a1e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a1e8:	add	fp, sp, #24
   2a1ec:	sub	sp, sp, #16
   2a1f0:	ldr	r5, [r0]
   2a1f4:	cmp	r5, #0
   2a1f8:	beq	2a278 <fb_schema_table_find_item@@Base+0x94>
   2a1fc:	ldrd	r8, [r1, #144]	; 0x90
   2a200:	ldr	r4, [r0, #12]
   2a204:	movw	r1, #15186	; 0x3b52
   2a208:	add	r0, sp, #8
   2a20c:	mov	r3, #0
   2a210:	movt	r1, #12137	; 0x2f69
   2a214:	str	r0, [sp, #4]
   2a218:	str	r1, [sp]
   2a21c:	mov	r0, r8
   2a220:	mov	r2, r9
   2a224:	bl	3c888 <cmetrohash64_1@@Base>
   2a228:	ldr	r6, [sp, #8]
   2a22c:	sub	r7, r4, #1
   2a230:	b	2a238 <fb_schema_table_find_item@@Base+0x54>
   2a234:	add	r6, r6, #1
   2a238:	and	r0, r6, r7
   2a23c:	ldr	r4, [r5, r0, lsl #2]
   2a240:	cmp	r4, #2
   2a244:	beq	2a234 <fb_schema_table_find_item@@Base+0x50>
   2a248:	cmp	r4, #0
   2a24c:	beq	2a278 <fb_schema_table_find_item@@Base+0x94>
   2a250:	ldr	r0, [r4, #148]	; 0x94
   2a254:	cmp	r0, r9
   2a258:	bne	2a234 <fb_schema_table_find_item@@Base+0x50>
   2a25c:	ldr	r1, [r4, #144]	; 0x90
   2a260:	mov	r0, r8
   2a264:	mov	r2, r9
   2a268:	bl	1491c <memcmp@plt>
   2a26c:	cmp	r0, #0
   2a270:	bne	2a234 <fb_schema_table_find_item@@Base+0x50>
   2a274:	b	2a27c <fb_schema_table_find_item@@Base+0x98>
   2a278:	mov	r4, #0
   2a27c:	mov	r0, r4
   2a280:	sub	sp, fp, #24
   2a284:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a288 <fb_schema_table_remove@@Base>:
   2a288:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a28c:	add	fp, sp, #28
   2a290:	sub	sp, sp, #28
   2a294:	ldr	r4, [r0]
   2a298:	cmp	r4, #0
   2a29c:	beq	2a338 <fb_schema_table_remove@@Base+0xb0>
   2a2a0:	ldr	r5, [r0, #12]
   2a2a4:	mov	r9, r1
   2a2a8:	movw	r1, #15186	; 0x3b52
   2a2ac:	str	r0, [sp, #12]
   2a2b0:	add	r0, sp, #16
   2a2b4:	mov	r3, #0
   2a2b8:	mov	sl, r2
   2a2bc:	movt	r1, #12137	; 0x2f69
   2a2c0:	str	r0, [sp, #4]
   2a2c4:	mov	r0, r9
   2a2c8:	str	r1, [sp]
   2a2cc:	bl	3c888 <cmetrohash64_1@@Base>
   2a2d0:	ldr	r6, [sp, #16]
   2a2d4:	sub	r5, r5, #1
   2a2d8:	b	2a2e0 <fb_schema_table_remove@@Base+0x58>
   2a2dc:	add	r6, r6, #1
   2a2e0:	and	r8, r6, r5
   2a2e4:	ldr	r7, [r4, r8, lsl #2]
   2a2e8:	cmp	r7, #2
   2a2ec:	beq	2a2dc <fb_schema_table_remove@@Base+0x54>
   2a2f0:	cmp	r7, #0
   2a2f4:	beq	2a338 <fb_schema_table_remove@@Base+0xb0>
   2a2f8:	ldr	r0, [r7, #148]	; 0x94
   2a2fc:	cmp	r0, sl
   2a300:	bne	2a2dc <fb_schema_table_remove@@Base+0x54>
   2a304:	ldr	r1, [r7, #144]	; 0x90
   2a308:	mov	r0, r9
   2a30c:	mov	r2, sl
   2a310:	bl	1491c <memcmp@plt>
   2a314:	cmp	r0, #0
   2a318:	bne	2a2dc <fb_schema_table_remove@@Base+0x54>
   2a31c:	ldr	r1, [sp, #12]
   2a320:	mov	r0, #2
   2a324:	str	r0, [r4, r8, lsl #2]
   2a328:	ldr	r0, [r1, #8]
   2a32c:	sub	r0, r0, #1
   2a330:	str	r0, [r1, #8]
   2a334:	b	2a33c <fb_schema_table_remove@@Base+0xb4>
   2a338:	mov	r7, #0
   2a33c:	mov	r0, r7
   2a340:	sub	sp, fp, #28
   2a344:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002a348 <fb_schema_table_remove_item@@Base>:
   2a348:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a34c:	add	fp, sp, #28
   2a350:	sub	sp, sp, #28
   2a354:	ldr	r6, [r0]
   2a358:	cmp	r6, #0
   2a35c:	beq	2a3f8 <fb_schema_table_remove_item@@Base+0xb0>
   2a360:	ldrd	r8, [r1, #144]	; 0x90
   2a364:	ldr	r4, [r0, #12]
   2a368:	movw	r1, #15186	; 0x3b52
   2a36c:	str	r0, [sp, #12]
   2a370:	add	r0, sp, #16
   2a374:	mov	r3, #0
   2a378:	movt	r1, #12137	; 0x2f69
   2a37c:	str	r0, [sp, #4]
   2a380:	str	r1, [sp]
   2a384:	mov	r0, r8
   2a388:	mov	r2, r9
   2a38c:	bl	3c888 <cmetrohash64_1@@Base>
   2a390:	ldr	r7, [sp, #16]
   2a394:	sub	r4, r4, #1
   2a398:	b	2a3a0 <fb_schema_table_remove_item@@Base+0x58>
   2a39c:	add	r7, r7, #1
   2a3a0:	and	sl, r7, r4
   2a3a4:	ldr	r5, [r6, sl, lsl #2]
   2a3a8:	cmp	r5, #2
   2a3ac:	beq	2a39c <fb_schema_table_remove_item@@Base+0x54>
   2a3b0:	cmp	r5, #0
   2a3b4:	beq	2a3f8 <fb_schema_table_remove_item@@Base+0xb0>
   2a3b8:	ldr	r0, [r5, #148]	; 0x94
   2a3bc:	cmp	r0, r9
   2a3c0:	bne	2a39c <fb_schema_table_remove_item@@Base+0x54>
   2a3c4:	ldr	r1, [r5, #144]	; 0x90
   2a3c8:	mov	r0, r8
   2a3cc:	mov	r2, r9
   2a3d0:	bl	1491c <memcmp@plt>
   2a3d4:	cmp	r0, #0
   2a3d8:	bne	2a39c <fb_schema_table_remove_item@@Base+0x54>
   2a3dc:	ldr	r1, [sp, #12]
   2a3e0:	mov	r0, #2
   2a3e4:	str	r0, [r6, sl, lsl #2]
   2a3e8:	ldr	r0, [r1, #8]
   2a3ec:	sub	r0, r0, #1
   2a3f0:	str	r0, [r1, #8]
   2a3f4:	b	2a3fc <fb_schema_table_remove_item@@Base+0xb4>
   2a3f8:	mov	r5, #0
   2a3fc:	mov	r0, r5
   2a400:	sub	sp, fp, #28
   2a404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002a408 <fb_schema_table_visit@@Base>:
   2a408:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2a40c:	add	fp, sp, #24
   2a410:	mov	r6, r0
   2a414:	ldr	r0, [r0, #12]
   2a418:	cmp	r0, #0
   2a41c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   2a420:	ldr	r7, [r6]
   2a424:	mov	r8, r2
   2a428:	mov	r5, r1
   2a42c:	mov	r4, #0
   2a430:	ldr	r1, [r7, r4, lsl #2]
   2a434:	orr	r2, r1, #2
   2a438:	cmp	r2, #2
   2a43c:	beq	2a44c <fb_schema_table_visit@@Base+0x44>
   2a440:	mov	r0, r8
   2a444:	blx	r5
   2a448:	ldr	r0, [r6, #12]
   2a44c:	add	r4, r4, #1
   2a450:	cmp	r4, r0
   2a454:	bcc	2a430 <fb_schema_table_visit@@Base+0x28>
   2a458:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002a45c <__flatcc_fb_copy_path_n@@Base>:
   2a45c:	push	{r4, r5, r6, r7, fp, lr}
   2a460:	add	fp, sp, #16
   2a464:	mov	r4, r1
   2a468:	mov	r1, #0
   2a46c:	mov	r5, r0
   2a470:	mov	r7, #0
   2a474:	mov	r2, r4
   2a478:	bl	149f4 <memchr@plt>
   2a47c:	cmp	r0, #0
   2a480:	subne	r4, r0, r5
   2a484:	add	r0, r4, #1
   2a488:	bl	14964 <malloc@plt>
   2a48c:	mov	r6, r0
   2a490:	cmp	r0, #0
   2a494:	beq	2a4ac <__flatcc_fb_copy_path_n@@Base+0x50>
   2a498:	mov	r0, r6
   2a49c:	mov	r1, r5
   2a4a0:	mov	r2, r4
   2a4a4:	bl	14904 <memcpy@plt>
   2a4a8:	strb	r7, [r6, r4]
   2a4ac:	mov	r0, r6
   2a4b0:	pop	{r4, r5, r6, r7, fp, pc}

0002a4b4 <__flatcc_fb_copy_path@@Base>:
   2a4b4:	push	{r4, r5, r6, sl, fp, lr}
   2a4b8:	add	fp, sp, #16
   2a4bc:	mov	r5, r0
   2a4c0:	bl	149a0 <strlen@plt>
   2a4c4:	mov	r4, r0
   2a4c8:	add	r0, r0, #1
   2a4cc:	bl	14964 <malloc@plt>
   2a4d0:	mov	r6, r0
   2a4d4:	cmp	r0, #0
   2a4d8:	beq	2a4f4 <__flatcc_fb_copy_path@@Base+0x40>
   2a4dc:	mov	r0, r6
   2a4e0:	mov	r1, r5
   2a4e4:	mov	r2, r4
   2a4e8:	bl	14904 <memcpy@plt>
   2a4ec:	mov	r0, #0
   2a4f0:	strb	r0, [r6, r4]
   2a4f4:	mov	r0, r6
   2a4f8:	pop	{r4, r5, r6, sl, fp, pc}

0002a4fc <__flatcc_fb_chomp@@Base>:
   2a4fc:	push	{r4, r5, r6, r7, fp, lr}
   2a500:	add	fp, sp, #16
   2a504:	mov	r5, r2
   2a508:	mov	r4, r1
   2a50c:	mov	r7, r0
   2a510:	cmp	r2, #0
   2a514:	beq	2a550 <__flatcc_fb_chomp@@Base+0x54>
   2a518:	mov	r0, r5
   2a51c:	bl	149a0 <strlen@plt>
   2a520:	mov	r6, r0
   2a524:	cmp	r6, r4
   2a528:	bcs	2a548 <__flatcc_fb_chomp@@Base+0x4c>
   2a52c:	add	r0, r7, r4
   2a530:	mov	r1, r5
   2a534:	mov	r2, r6
   2a538:	sub	r0, r0, r6
   2a53c:	bl	14a60 <strncmp@plt>
   2a540:	cmp	r0, #0
   2a544:	subeq	r4, r4, r6
   2a548:	mov	r0, r4
   2a54c:	pop	{r4, r5, r6, r7, fp, pc}
   2a550:	mov	r6, #0
   2a554:	cmp	r6, r4
   2a558:	bcc	2a52c <__flatcc_fb_chomp@@Base+0x30>
   2a55c:	b	2a548 <__flatcc_fb_chomp@@Base+0x4c>

0002a560 <__flatcc_fb_create_join_path_n@@Base>:
   2a560:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a564:	add	fp, sp, #28
   2a568:	sub	sp, sp, #12
   2a56c:	mov	r6, r0
   2a570:	ldr	r0, [fp, #8]
   2a574:	mov	r7, r3
   2a578:	mov	r4, r2
   2a57c:	mov	r5, r1
   2a580:	cmp	r0, #0
   2a584:	beq	2a590 <__flatcc_fb_create_join_path_n@@Base+0x30>
   2a588:	bl	149a0 <strlen@plt>
   2a58c:	b	2a594 <__flatcc_fb_create_join_path_n@@Base+0x34>
   2a590:	mov	r0, #0
   2a594:	ldr	r8, [fp, #12]
   2a598:	cmp	r6, #0
   2a59c:	beq	2a5b8 <__flatcc_fb_create_join_path_n@@Base+0x58>
   2a5a0:	cmp	r7, #0
   2a5a4:	beq	2a5bc <__flatcc_fb_create_join_path_n@@Base+0x5c>
   2a5a8:	ldrb	r1, [r4]
   2a5ac:	cmp	r1, #47	; 0x2f
   2a5b0:	cmpne	r1, #92	; 0x5c
   2a5b4:	bne	2a67c <__flatcc_fb_create_join_path_n@@Base+0x11c>
   2a5b8:	mov	r5, #0
   2a5bc:	cmp	r8, #0
   2a5c0:	str	r4, [sp, #8]
   2a5c4:	cmpne	r5, #0
   2a5c8:	bne	2a5d4 <__flatcc_fb_create_join_path_n@@Base+0x74>
   2a5cc:	mov	r8, #0
   2a5d0:	b	2a5e8 <__flatcc_fb_create_join_path_n@@Base+0x88>
   2a5d4:	add	r1, r6, r5
   2a5d8:	ldrb	r1, [r1, #-1]
   2a5dc:	cmp	r1, #92	; 0x5c
   2a5e0:	cmpne	r1, #47	; 0x2f
   2a5e4:	moveq	r8, #0
   2a5e8:	add	r4, r5, #1
   2a5ec:	str	r0, [sp, #4]
   2a5f0:	str	r7, [sp]
   2a5f4:	add	sl, r4, r7
   2a5f8:	add	r9, sl, r0
   2a5fc:	add	r0, r9, r8
   2a600:	bl	14964 <malloc@plt>
   2a604:	mov	r7, r0
   2a608:	cmp	r0, #0
   2a60c:	beq	2a670 <__flatcc_fb_create_join_path_n@@Base+0x110>
   2a610:	mov	r0, r7
   2a614:	mov	r1, r6
   2a618:	mov	r2, r5
   2a61c:	bl	14904 <memcpy@plt>
   2a620:	cmp	r8, #0
   2a624:	beq	2a63c <__flatcc_fb_create_join_path_n@@Base+0xdc>
   2a628:	mov	r0, #47	; 0x2f
   2a62c:	strb	r0, [r7, r5]
   2a630:	mov	r5, r4
   2a634:	ldm	sp, {r2, r4}
   2a638:	b	2a64c <__flatcc_fb_create_join_path_n@@Base+0xec>
   2a63c:	ldr	r2, [sp]
   2a640:	ldr	r4, [sp, #4]
   2a644:	add	sl, r5, r2
   2a648:	add	r9, sl, r4
   2a64c:	ldr	r1, [sp, #8]
   2a650:	add	r0, r7, r5
   2a654:	bl	14904 <memcpy@plt>
   2a658:	ldr	r1, [fp, #8]
   2a65c:	add	r0, r7, sl
   2a660:	mov	r2, r4
   2a664:	bl	14904 <memcpy@plt>
   2a668:	mov	r0, #0
   2a66c:	strb	r0, [r7, r9]
   2a670:	mov	r0, r7
   2a674:	sub	sp, fp, #28
   2a678:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a67c:	cmp	r7, #2
   2a680:	bcc	2a5bc <__flatcc_fb_create_join_path_n@@Base+0x5c>
   2a684:	ldrb	r1, [r4, #1]
   2a688:	cmp	r1, #58	; 0x3a
   2a68c:	moveq	r5, #0
   2a690:	b	2a5bc <__flatcc_fb_create_join_path_n@@Base+0x5c>

0002a694 <__flatcc_fb_create_join_path@@Base>:
   2a694:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a698:	add	fp, sp, #24
   2a69c:	sub	sp, sp, #8
   2a6a0:	mov	r8, r3
   2a6a4:	mov	r9, r2
   2a6a8:	mov	r4, r1
   2a6ac:	mov	r6, r0
   2a6b0:	mov	r5, #0
   2a6b4:	cmp	r0, #0
   2a6b8:	mov	r7, #0
   2a6bc:	beq	2a6cc <__flatcc_fb_create_join_path@@Base+0x38>
   2a6c0:	mov	r0, r6
   2a6c4:	bl	149a0 <strlen@plt>
   2a6c8:	mov	r7, r0
   2a6cc:	cmp	r4, #0
   2a6d0:	beq	2a6e0 <__flatcc_fb_create_join_path@@Base+0x4c>
   2a6d4:	mov	r0, r4
   2a6d8:	bl	149a0 <strlen@plt>
   2a6dc:	mov	r5, r0
   2a6e0:	mov	r0, r6
   2a6e4:	mov	r1, r7
   2a6e8:	mov	r2, r4
   2a6ec:	mov	r3, r5
   2a6f0:	str	r9, [sp]
   2a6f4:	str	r8, [sp, #4]
   2a6f8:	bl	2a560 <__flatcc_fb_create_join_path_n@@Base>
   2a6fc:	sub	sp, fp, #24
   2a700:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a704 <__flatcc_fb_create_path_ext_n@@Base>:
   2a704:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a708:	add	fp, sp, #24
   2a70c:	mov	r4, r2
   2a710:	mov	r5, r1
   2a714:	mov	r8, r0
   2a718:	cmp	r2, #0
   2a71c:	beq	2a730 <__flatcc_fb_create_path_ext_n@@Base+0x2c>
   2a720:	mov	r0, r4
   2a724:	bl	149a0 <strlen@plt>
   2a728:	mov	r9, r0
   2a72c:	b	2a734 <__flatcc_fb_create_path_ext_n@@Base+0x30>
   2a730:	mov	r9, #0
   2a734:	add	r7, r9, r5
   2a738:	add	r0, r7, #1
   2a73c:	bl	14964 <malloc@plt>
   2a740:	mov	r6, r0
   2a744:	cmp	r0, #0
   2a748:	beq	2a774 <__flatcc_fb_create_path_ext_n@@Base+0x70>
   2a74c:	mov	r0, r6
   2a750:	mov	r1, r8
   2a754:	mov	r2, r5
   2a758:	bl	14904 <memcpy@plt>
   2a75c:	add	r0, r6, r5
   2a760:	mov	r1, r4
   2a764:	mov	r2, r9
   2a768:	bl	14904 <memcpy@plt>
   2a76c:	mov	r0, #0
   2a770:	strb	r0, [r6, r7]
   2a774:	mov	r0, r6
   2a778:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a77c <__flatcc_fb_create_path_ext@@Base>:
   2a77c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a780:	add	fp, sp, #24
   2a784:	mov	r8, r1
   2a788:	mov	r6, r0
   2a78c:	mov	r9, #0
   2a790:	cmp	r0, #0
   2a794:	mov	r7, #0
   2a798:	beq	2a7a8 <__flatcc_fb_create_path_ext@@Base+0x2c>
   2a79c:	mov	r0, r6
   2a7a0:	bl	149a0 <strlen@plt>
   2a7a4:	mov	r7, r0
   2a7a8:	cmp	r8, #0
   2a7ac:	beq	2a7bc <__flatcc_fb_create_path_ext@@Base+0x40>
   2a7b0:	mov	r0, r8
   2a7b4:	bl	149a0 <strlen@plt>
   2a7b8:	mov	r9, r0
   2a7bc:	add	r5, r9, r7
   2a7c0:	add	r0, r5, #1
   2a7c4:	bl	14964 <malloc@plt>
   2a7c8:	mov	r4, r0
   2a7cc:	cmp	r0, #0
   2a7d0:	beq	2a7fc <__flatcc_fb_create_path_ext@@Base+0x80>
   2a7d4:	mov	r0, r4
   2a7d8:	mov	r1, r6
   2a7dc:	mov	r2, r7
   2a7e0:	bl	14904 <memcpy@plt>
   2a7e4:	add	r0, r4, r7
   2a7e8:	mov	r1, r8
   2a7ec:	mov	r2, r9
   2a7f0:	bl	14904 <memcpy@plt>
   2a7f4:	mov	r0, #0
   2a7f8:	strb	r0, [r4, r5]
   2a7fc:	mov	r0, r4
   2a800:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a804 <__flatcc_fb_create_make_path_n@@Base>:
   2a804:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2a808:	add	fp, sp, #24
   2a80c:	mov	r6, r1
   2a810:	mov	r8, r0
   2a814:	cmp	r1, #0
   2a818:	beq	2a864 <__flatcc_fb_create_make_path_n@@Base+0x60>
   2a81c:	cmp	r6, #1
   2a820:	bne	2a8b0 <__flatcc_fb_create_make_path_n@@Base+0xac>
   2a824:	ldrb	r5, [r8]
   2a828:	cmp	r5, #92	; 0x5c
   2a82c:	cmpne	r5, #32
   2a830:	bne	2a864 <__flatcc_fb_create_make_path_n@@Base+0x60>
   2a834:	mov	r0, #3
   2a838:	bl	14964 <malloc@plt>
   2a83c:	cmp	r0, #0
   2a840:	beq	2a990 <__flatcc_fb_create_make_path_n@@Base+0x18c>
   2a844:	mov	r4, r0
   2a848:	strb	r5, [r0, #1]
   2a84c:	mov	r0, #92	; 0x5c
   2a850:	strb	r0, [r4]
   2a854:	mov	r0, #0
   2a858:	strb	r0, [r4, #2]
   2a85c:	mov	r0, r4
   2a860:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a864:	mov	r0, r8
   2a868:	mov	r1, #0
   2a86c:	mov	r2, r6
   2a870:	mov	r4, #0
   2a874:	bl	149f4 <memchr@plt>
   2a878:	cmp	r0, #0
   2a87c:	subne	r6, r0, r8
   2a880:	add	r0, r6, #1
   2a884:	bl	14964 <malloc@plt>
   2a888:	cmp	r0, #0
   2a88c:	beq	2a988 <__flatcc_fb_create_make_path_n@@Base+0x184>
   2a890:	mov	r1, r8
   2a894:	mov	r2, r6
   2a898:	mov	r7, r0
   2a89c:	bl	14904 <memcpy@plt>
   2a8a0:	mov	r0, #0
   2a8a4:	strb	r0, [r7, r6]
   2a8a8:	mov	r0, r7
   2a8ac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a8b0:	mov	r0, r8
   2a8b4:	sub	r5, r6, #1
   2a8b8:	ldrb	r9, [r0], #1
   2a8bc:	mov	r1, r5
   2a8c0:	mov	r2, r9
   2a8c4:	ldrb	r3, [r0], #1
   2a8c8:	eor	r4, r2, #92	; 0x5c
   2a8cc:	uxtb	r2, r2
   2a8d0:	cmp	r2, #32
   2a8d4:	eor	r7, r3, #32
   2a8d8:	mov	r2, r3
   2a8dc:	orr	r7, r4, r7
   2a8e0:	uxtb	r7, r7
   2a8e4:	clz	r7, r7
   2a8e8:	lsr	r7, r7, #5
   2a8ec:	add	r6, r6, r7
   2a8f0:	addeq	r6, r6, #1
   2a8f4:	subs	r1, r1, #1
   2a8f8:	bne	2a8c4 <__flatcc_fb_create_make_path_n@@Base+0xc0>
   2a8fc:	cmp	r3, #32
   2a900:	addeq	r6, r6, #1
   2a904:	add	r0, r6, #1
   2a908:	bl	14964 <malloc@plt>
   2a90c:	cmp	r0, #0
   2a910:	beq	2a990 <__flatcc_fb_create_make_path_n@@Base+0x18c>
   2a914:	mov	r4, r0
   2a918:	add	r0, r8, #1
   2a91c:	mov	r1, #0
   2a920:	mov	r2, #92	; 0x5c
   2a924:	uxtb	r3, r9
   2a928:	cmp	r3, #32
   2a92c:	beq	2a944 <__flatcc_fb_create_make_path_n@@Base+0x140>
   2a930:	cmp	r3, #92	; 0x5c
   2a934:	bne	2a950 <__flatcc_fb_create_make_path_n@@Base+0x14c>
   2a938:	ldrb	r3, [r0]
   2a93c:	cmp	r3, #32
   2a940:	bne	2a950 <__flatcc_fb_create_make_path_n@@Base+0x14c>
   2a944:	add	r3, r1, #1
   2a948:	strb	r2, [r4, r1]
   2a94c:	b	2a954 <__flatcc_fb_create_make_path_n@@Base+0x150>
   2a950:	mov	r3, r1
   2a954:	strb	r9, [r4, r3]
   2a958:	subs	r5, r5, #1
   2a95c:	add	r1, r3, #1
   2a960:	ldrb	r9, [r0], #1
   2a964:	bne	2a924 <__flatcc_fb_create_make_path_n@@Base+0x120>
   2a968:	cmp	r9, #32
   2a96c:	moveq	r0, #92	; 0x5c
   2a970:	strbeq	r0, [r4, r1]
   2a974:	addeq	r1, r3, #2
   2a978:	mov	r0, r4
   2a97c:	strb	r9, [r0, r1]!
   2a980:	mov	r1, #0
   2a984:	strb	r1, [r0, #1]
   2a988:	mov	r0, r4
   2a98c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2a990:	mov	r4, #0
   2a994:	mov	r0, r4
   2a998:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0002a99c <__flatcc_fb_create_make_path@@Base>:
   2a99c:	push	{r4, sl, fp, lr}
   2a9a0:	add	fp, sp, #8
   2a9a4:	mov	r4, r0
   2a9a8:	bl	149a0 <strlen@plt>
   2a9ac:	mov	r1, r0
   2a9b0:	mov	r0, r4
   2a9b4:	pop	{r4, sl, fp, lr}
   2a9b8:	b	2a804 <__flatcc_fb_create_make_path_n@@Base>

0002a9bc <__flatcc_fb_find_basename@@Base>:
   2a9bc:	cmp	r1, #0
   2a9c0:	subeq	r0, r0, r0
   2a9c4:	bxeq	lr
   2a9c8:	add	r2, r0, r1
   2a9cc:	sub	r1, r1, #1
   2a9d0:	ldrb	r2, [r2, #-1]
   2a9d4:	cmp	r2, #92	; 0x5c
   2a9d8:	cmpne	r2, #47	; 0x2f
   2a9dc:	bne	2a9bc <__flatcc_fb_find_basename@@Base>
   2a9e0:	add	r1, r0, r1
   2a9e4:	add	r1, r1, #1
   2a9e8:	sub	r0, r1, r0
   2a9ec:	bx	lr

0002a9f0 <__flatcc_fb_create_basename@@Base>:
   2a9f0:	push	{r4, r5, r6, r7, fp, lr}
   2a9f4:	add	fp, sp, #16
   2a9f8:	mov	r6, r2
   2a9fc:	mov	r2, r1
   2aa00:	cmp	r2, #0
   2aa04:	beq	2aa2c <__flatcc_fb_create_basename@@Base+0x3c>
   2aa08:	add	r3, r0, r2
   2aa0c:	sub	r2, r2, #1
   2aa10:	ldrb	r3, [r3, #-1]
   2aa14:	cmp	r3, #92	; 0x5c
   2aa18:	cmpne	r3, #47	; 0x2f
   2aa1c:	bne	2aa00 <__flatcc_fb_create_basename@@Base+0x10>
   2aa20:	add	r2, r0, r2
   2aa24:	add	r4, r2, #1
   2aa28:	b	2aa30 <__flatcc_fb_create_basename@@Base+0x40>
   2aa2c:	mov	r4, r0
   2aa30:	sub	r0, r0, r4
   2aa34:	cmp	r6, #0
   2aa38:	add	r5, r0, r1
   2aa3c:	beq	2aaa4 <__flatcc_fb_create_basename@@Base+0xb4>
   2aa40:	mov	r0, r6
   2aa44:	bl	149a0 <strlen@plt>
   2aa48:	mov	r7, r0
   2aa4c:	cmp	r7, r5
   2aa50:	bcs	2aa70 <__flatcc_fb_create_basename@@Base+0x80>
   2aa54:	add	r0, r4, r5
   2aa58:	mov	r1, r6
   2aa5c:	mov	r2, r7
   2aa60:	sub	r0, r0, r7
   2aa64:	bl	14a60 <strncmp@plt>
   2aa68:	cmp	r0, #0
   2aa6c:	subeq	r5, r5, r7
   2aa70:	add	r0, r5, #1
   2aa74:	bl	14964 <malloc@plt>
   2aa78:	mov	r6, r0
   2aa7c:	cmp	r0, #0
   2aa80:	beq	2aa9c <__flatcc_fb_create_basename@@Base+0xac>
   2aa84:	mov	r0, r6
   2aa88:	mov	r1, r4
   2aa8c:	mov	r2, r5
   2aa90:	bl	14904 <memcpy@plt>
   2aa94:	mov	r0, #0
   2aa98:	strb	r0, [r6, r5]
   2aa9c:	mov	r0, r6
   2aaa0:	pop	{r4, r5, r6, r7, fp, pc}
   2aaa4:	mov	r7, #0
   2aaa8:	cmp	r7, r5
   2aaac:	bcc	2aa54 <__flatcc_fb_create_basename@@Base+0x64>
   2aab0:	b	2aa70 <__flatcc_fb_create_basename@@Base+0x80>

0002aab4 <__flatcc_fb_read_file@@Base>:
   2aab4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2aab8:	add	fp, sp, #24
   2aabc:	sub	sp, sp, #8
   2aac0:	mov	r6, r1
   2aac4:	ldr	r1, [pc, #208]	; 2ab9c <__flatcc_fb_read_file@@Base+0xe8>
   2aac8:	add	r8, sp, #4
   2aacc:	cmp	r2, #0
   2aad0:	movne	r8, r2
   2aad4:	add	r1, pc, r1
   2aad8:	bl	148ec <fopen@plt>
   2aadc:	cmp	r0, #0
   2aae0:	beq	2ab84 <__flatcc_fb_read_file@@Base+0xd0>
   2aae4:	mov	r1, #0
   2aae8:	mov	r2, #2
   2aaec:	mov	r5, r0
   2aaf0:	bl	14a54 <fseek@plt>
   2aaf4:	mov	r0, r5
   2aaf8:	bl	14910 <ftell@plt>
   2aafc:	mov	r4, r0
   2ab00:	cmp	r6, #0
   2ab04:	str	r0, [r8]
   2ab08:	cmpne	r4, r6
   2ab0c:	bhi	2ab78 <__flatcc_fb_read_file@@Base+0xc4>
   2ab10:	mov	r0, r5
   2ab14:	bl	14934 <rewind@plt>
   2ab18:	cmp	r4, #0
   2ab1c:	mov	r0, r4
   2ab20:	movweq	r0, #1
   2ab24:	bl	14964 <malloc@plt>
   2ab28:	cmp	r0, #0
   2ab2c:	beq	2ab78 <__flatcc_fb_read_file@@Base+0xc4>
   2ab30:	mov	r6, r0
   2ab34:	mov	r1, #0
   2ab38:	mov	r7, r1
   2ab3c:	add	r0, r6, r1
   2ab40:	sub	r2, r4, r1
   2ab44:	mov	r1, #1
   2ab48:	mov	r3, r5
   2ab4c:	bl	14a48 <fread_unlocked@plt>
   2ab50:	add	r1, r0, r7
   2ab54:	cmp	r0, #0
   2ab58:	bne	2ab38 <__flatcc_fb_read_file@@Base+0x84>
   2ab5c:	mov	r0, r5
   2ab60:	bl	14a00 <fclose@plt>
   2ab64:	cmp	r4, r7
   2ab68:	beq	2ab8c <__flatcc_fb_read_file@@Base+0xd8>
   2ab6c:	mov	r0, r6
   2ab70:	bl	148f8 <free@plt>
   2ab74:	b	2ab88 <__flatcc_fb_read_file@@Base+0xd4>
   2ab78:	mov	r0, r5
   2ab7c:	bl	14a00 <fclose@plt>
   2ab80:	b	2ab88 <__flatcc_fb_read_file@@Base+0xd4>
   2ab84:	mov	r4, #0
   2ab88:	mov	r6, #0
   2ab8c:	str	r4, [r8]
   2ab90:	mov	r0, r6
   2ab94:	sub	sp, fp, #24
   2ab98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2ab9c:	andeq	ip, r2, r0, lsl #24

0002aba0 <__flatcc_fb_default_error_out@@Base>:
   2aba0:	mov	r0, r1
   2aba4:	ldr	r1, [pc, #12]	; 2abb8 <__flatcc_fb_default_error_out@@Base+0x18>
   2aba8:	ldr	r1, [pc, r1]
   2abac:	ldr	r3, [r1]
   2abb0:	mov	r1, #1
   2abb4:	b	1494c <fwrite@plt>
   2abb8:	strdeq	r1, [r4], -r4

0002abbc <__flatcc_fb_print_error@@Base>:
   2abbc:	sub	sp, sp, #8
   2abc0:	push	{r4, r5, fp, lr}
   2abc4:	add	fp, sp, #8
   2abc8:	sub	sp, sp, #208	; 0xd0
   2abcc:	mov	r5, r1
   2abd0:	mov	r4, r0
   2abd4:	str	r3, [fp, #12]
   2abd8:	str	r2, [fp, #8]
   2abdc:	add	r3, fp, #8
   2abe0:	add	r0, sp, #4
   2abe4:	mov	r1, #200	; 0xc8
   2abe8:	mov	r2, r5
   2abec:	str	r3, [fp, #-12]
   2abf0:	bl	14a30 <vsnprintf@plt>
   2abf4:	mov	r5, r0
   2abf8:	cmp	r0, #200	; 0xc8
   2abfc:	blt	2ac18 <__flatcc_fb_print_error@@Base+0x5c>
   2ac00:	mov	r0, #0
   2ac04:	mov	r5, #199	; 0xc7
   2ac08:	strb	r0, [sp, #203]	; 0xcb
   2ac0c:	movw	r0, #11822	; 0x2e2e
   2ac10:	movt	r0, #2606	; 0xa2e
   2ac14:	str	r0, [sp, #199]	; 0xc7
   2ac18:	ldr	r3, [r4, #12]
   2ac1c:	ldr	r4, [r4, #8]
   2ac20:	add	r1, sp, #4
   2ac24:	mov	r2, r5
   2ac28:	mov	r0, r3
   2ac2c:	blx	r4
   2ac30:	mov	r0, r5
   2ac34:	sub	sp, fp, #8
   2ac38:	pop	{r4, r5, fp, lr}
   2ac3c:	add	sp, sp, #8
   2ac40:	bx	lr

0002ac44 <__flatcc_error_find_file_of_token@@Base>:
   2ac44:	mov	r2, r0
   2ac48:	ldr	r0, [pc, #48]	; 2ac80 <__flatcc_error_find_file_of_token@@Base+0x3c>
   2ac4c:	add	r0, pc, r0
   2ac50:	b	2ac58 <__flatcc_error_find_file_of_token@@Base+0x14>
   2ac54:	ldr	r2, [r2]
   2ac58:	cmp	r2, #0
   2ac5c:	bxeq	lr
   2ac60:	ldr	r3, [r2, #20]
   2ac64:	cmp	r3, r1
   2ac68:	bhi	2ac54 <__flatcc_error_find_file_of_token@@Base+0x10>
   2ac6c:	ldr	r3, [r2, #24]
   2ac70:	cmp	r3, r1
   2ac74:	bls	2ac54 <__flatcc_error_find_file_of_token@@Base+0x10>
   2ac78:	ldr	r0, [r2, #520]	; 0x208
   2ac7c:	bx	lr
   2ac80:			; <UNDEFINED> instruction: 0x00015bb2

0002ac84 <__flatcc_error_report@@Base>:
   2ac84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ac88:	add	fp, sp, #24
   2ac8c:	sub	sp, sp, #40	; 0x28
   2ac90:	mov	r7, r0
   2ac94:	ldr	r5, [fp, #12]
   2ac98:	ldr	r0, [fp, #8]
   2ac9c:	cmp	r1, #0
   2aca0:	beq	2acac <__flatcc_error_report@@Base+0x28>
   2aca4:	cmp	r0, #0
   2aca8:	ldmeq	r1, {r0, r5}
   2acac:	ldr	r4, [pc, #532]	; 2aec8 <__flatcc_error_report@@Base+0x244>
   2acb0:	cmp	r0, #0
   2acb4:	moveq	r5, r0
   2acb8:	add	r4, pc, r4
   2acbc:	moveq	r0, r4
   2acc0:	cmp	r2, #0
   2acc4:	moveq	r2, r4
   2acc8:	cmp	r1, #0
   2accc:	beq	2ad0c <__flatcc_error_report@@Base+0x88>
   2acd0:	cmp	r3, #0
   2acd4:	bne	2ad0c <__flatcc_error_report@@Base+0x88>
   2acd8:	cmp	r7, #0
   2acdc:	beq	2adbc <__flatcc_error_report@@Base+0x138>
   2ace0:	mov	r3, r7
   2ace4:	ldr	r6, [r3, #20]
   2ace8:	cmp	r6, r1
   2acec:	bhi	2acfc <__flatcc_error_report@@Base+0x78>
   2acf0:	ldr	r6, [r3, #24]
   2acf4:	cmp	r6, r1
   2acf8:	bhi	2adb8 <__flatcc_error_report@@Base+0x134>
   2acfc:	ldr	r3, [r3]
   2ad00:	cmp	r3, #0
   2ad04:	bne	2ace4 <__flatcc_error_report@@Base+0x60>
   2ad08:	b	2adbc <__flatcc_error_report@@Base+0x138>
   2ad0c:	cmp	r1, #0
   2ad10:	cmpne	r3, #0
   2ad14:	bne	2ad64 <__flatcc_error_report@@Base+0xe0>
   2ad18:	orrs	r0, r1, r3
   2ad1c:	beq	2ada4 <__flatcc_error_report@@Base+0x120>
   2ad20:	cmp	r3, #0
   2ad24:	beq	2ade4 <__flatcc_error_report@@Base+0x160>
   2ad28:	ldr	r4, [pc, #432]	; 2aee0 <__flatcc_error_report@@Base+0x25c>
   2ad2c:	cmp	r7, #0
   2ad30:	add	r4, pc, r4
   2ad34:	beq	2ae88 <__flatcc_error_report@@Base+0x204>
   2ad38:	mov	r0, r7
   2ad3c:	ldr	r1, [r0, #20]
   2ad40:	cmp	r1, r3
   2ad44:	bhi	2ad54 <__flatcc_error_report@@Base+0xd0>
   2ad48:	ldr	r1, [r0, #24]
   2ad4c:	cmp	r1, r3
   2ad50:	bhi	2ae84 <__flatcc_error_report@@Base+0x200>
   2ad54:	ldr	r0, [r0]
   2ad58:	cmp	r0, #0
   2ad5c:	bne	2ad3c <__flatcc_error_report@@Base+0xb8>
   2ad60:	b	2ae88 <__flatcc_error_report@@Base+0x204>
   2ad64:	cmp	r7, #0
   2ad68:	beq	2adf8 <__flatcc_error_report@@Base+0x174>
   2ad6c:	ldr	lr, [pc, #352]	; 2aed4 <__flatcc_error_report@@Base+0x250>
   2ad70:	mov	r6, r7
   2ad74:	add	lr, pc, lr
   2ad78:	ldr	r4, [r6, #20]
   2ad7c:	cmp	r4, r1
   2ad80:	bhi	2ad90 <__flatcc_error_report@@Base+0x10c>
   2ad84:	ldr	r4, [r6, #24]
   2ad88:	cmp	r4, r1
   2ad8c:	bhi	2ae08 <__flatcc_error_report@@Base+0x184>
   2ad90:	ldr	r6, [r6]
   2ad94:	cmp	r6, #0
   2ad98:	bne	2ad78 <__flatcc_error_report@@Base+0xf4>
   2ad9c:	mov	ip, lr
   2ada0:	b	2ae0c <__flatcc_error_report@@Base+0x188>
   2ada4:	ldr	r1, [pc, #304]	; 2aedc <__flatcc_error_report@@Base+0x258>
   2ada8:	mov	r0, r7
   2adac:	add	r1, pc, r1
   2adb0:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2adb4:	b	2aeb4 <__flatcc_error_report@@Base+0x230>
   2adb8:	ldr	r4, [r3, #520]	; 0x208
   2adbc:	ldr	r3, [r1, #8]
   2adc0:	ldr	r1, [r1, #12]
   2adc4:	stm	sp, {r1, r5}
   2adc8:	str	r0, [sp, #8]
   2adcc:	str	r2, [sp, #12]
   2add0:	mov	r0, r7
   2add4:	mov	r2, r4
   2add8:	ldr	r1, [pc, #236]	; 2aecc <__flatcc_error_report@@Base+0x248>
   2addc:	add	r1, pc, r1
   2ade0:	b	2aeb0 <__flatcc_error_report@@Base+0x22c>
   2ade4:	ldr	r1, [pc, #252]	; 2aee8 <__flatcc_error_report@@Base+0x264>
   2ade8:	mov	r0, r7
   2adec:	add	r1, pc, r1
   2adf0:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2adf4:	b	2aeb4 <__flatcc_error_report@@Base+0x230>
   2adf8:	ldr	ip, [pc, #208]	; 2aed0 <__flatcc_error_report@@Base+0x24c>
   2adfc:	add	ip, pc, ip
   2ae00:	mov	lr, ip
   2ae04:	b	2ae3c <__flatcc_error_report@@Base+0x1b8>
   2ae08:	ldr	ip, [r6, #520]	; 0x208
   2ae0c:	mov	r4, r7
   2ae10:	ldr	r6, [r4, #20]
   2ae14:	cmp	r6, r3
   2ae18:	bhi	2ae28 <__flatcc_error_report@@Base+0x1a4>
   2ae1c:	ldr	r6, [r4, #24]
   2ae20:	cmp	r6, r3
   2ae24:	bhi	2ae38 <__flatcc_error_report@@Base+0x1b4>
   2ae28:	ldr	r4, [r4]
   2ae2c:	cmp	r4, #0
   2ae30:	bne	2ae10 <__flatcc_error_report@@Base+0x18c>
   2ae34:	b	2ae3c <__flatcc_error_report@@Base+0x1b8>
   2ae38:	ldr	lr, [r4, #520]	; 0x208
   2ae3c:	ldr	r8, [r1, #8]
   2ae40:	ldr	r1, [r1, #12]
   2ae44:	ldm	r3, {r6, r9}
   2ae48:	ldr	r4, [r3, #8]
   2ae4c:	ldr	r3, [r3, #12]
   2ae50:	str	r6, [sp, #32]
   2ae54:	stm	sp, {r1, r5}
   2ae58:	add	r1, sp, #8
   2ae5c:	stm	r1, {r0, r2, lr}
   2ae60:	str	r3, [sp, #24]
   2ae64:	str	r4, [sp, #20]
   2ae68:	str	r9, [sp, #28]
   2ae6c:	mov	r0, r7
   2ae70:	mov	r2, ip
   2ae74:	mov	r3, r8
   2ae78:	ldr	r1, [pc, #88]	; 2aed8 <__flatcc_error_report@@Base+0x254>
   2ae7c:	add	r1, pc, r1
   2ae80:	b	2aeb0 <__flatcc_error_report@@Base+0x22c>
   2ae84:	ldr	r4, [r0, #520]	; 0x208
   2ae88:	ldm	r3, {r0, r1, r6}
   2ae8c:	ldr	r3, [r3, #12]
   2ae90:	str	r3, [sp, #4]
   2ae94:	str	r0, [sp, #12]
   2ae98:	str	r6, [sp]
   2ae9c:	str	r1, [sp, #8]
   2aea0:	mov	r0, r7
   2aea4:	mov	r3, r4
   2aea8:	ldr	r1, [pc, #52]	; 2aee4 <__flatcc_error_report@@Base+0x260>
   2aeac:	add	r1, pc, r1
   2aeb0:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2aeb4:	ldr	r0, [r7, #108]	; 0x6c
   2aeb8:	add	r0, r0, #1
   2aebc:	str	r0, [r7, #108]	; 0x6c
   2aec0:	sub	sp, fp, #24
   2aec4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2aec8:	andeq	r5, r1, r6, asr #22
   2aecc:	strdeq	ip, [r2], -fp
   2aed0:	andeq	r5, r1, r2, lsl #20
   2aed4:	andeq	r5, r1, sl, lsl #21
   2aed8:	andeq	ip, r2, sl, ror r8
   2aedc:	andeq	ip, r2, sp, ror r9
   2aee0:	andeq	r5, r1, lr, asr #21
   2aee4:	andeq	ip, r2, r8, lsl #17
   2aee8:	andeq	ip, r2, r7, ror #18

0002aeec <error_ref_sym@@Base>:
   2aeec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2aef0:	add	fp, sp, #28
   2aef4:	sub	sp, sp, #76	; 0x4c
   2aef8:	mov	sl, r1
   2aefc:	cmp	r1, #0
   2af00:	beq	2af80 <error_ref_sym@@Base+0x94>
   2af04:	mov	r5, #50	; 0x32
   2af08:	mov	r8, #0
   2af0c:	add	r6, sp, #25
   2af10:	mov	r9, #46	; 0x2e
   2af14:	mov	r7, sl
   2af18:	str	r3, [sp, #12]
   2af1c:	str	r0, [sp, #16]
   2af20:	str	r2, [sp, #20]
   2af24:	ldr	r2, [r7, #4]
   2af28:	add	r0, r6, r8
   2af2c:	ldm	r2, {r1, r4}
   2af30:	cmp	r5, r4
   2af34:	movlt	r4, r5
   2af38:	mov	r2, r4
   2af3c:	bl	14904 <memcpy@plt>
   2af40:	add	r0, r4, r8
   2af44:	mvn	r1, r4
   2af48:	strb	r9, [r6, r0]
   2af4c:	add	r5, r5, r1
   2af50:	add	r8, r0, #1
   2af54:	ldr	r7, [r7]
   2af58:	cmp	r7, #0
   2af5c:	beq	2af68 <error_ref_sym@@Base+0x7c>
   2af60:	cmp	r5, #0
   2af64:	bgt	2af24 <error_ref_sym@@Base+0x38>
   2af68:	mov	r1, #0
   2af6c:	cmp	r5, #0
   2af70:	strb	r1, [r6, r8]
   2af74:	ble	2af8c <error_ref_sym@@Base+0xa0>
   2af78:	sub	r6, r0, r0, asr #31
   2af7c:	b	2af9c <error_ref_sym@@Base+0xb0>
   2af80:	mov	r6, #0
   2af84:	strb	r6, [sp, #25]
   2af88:	b	2afa8 <error_ref_sym@@Base+0xbc>
   2af8c:	movw	r0, #11822	; 0x2e2e
   2af90:	mov	r6, #50	; 0x32
   2af94:	movt	r0, #46	; 0x2e
   2af98:	str	r0, [sp, #72]	; 0x48
   2af9c:	ldr	r2, [sp, #20]
   2afa0:	ldr	r0, [sp, #16]
   2afa4:	ldr	r3, [sp, #12]
   2afa8:	cmp	r3, #0
   2afac:	ldr	r1, [sl, #4]
   2afb0:	add	r7, sp, #25
   2afb4:	ldrne	r3, [r3, #4]
   2afb8:	str	r7, [sp]
   2afbc:	str	r6, [sp, #4]
   2afc0:	moveq	r3, #0
   2afc4:	bl	2ac84 <__flatcc_error_report@@Base>
   2afc8:	sub	sp, fp, #28
   2afcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0002afd0 <__flatcc_fb_init_parser@@Base>:
   2afd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2afd4:	add	fp, sp, #28
   2afd8:	sub	sp, sp, #4
   2afdc:	mov	r7, r2
   2afe0:	mov	r9, r1
   2afe4:	mov	r1, #0
   2afe8:	mov	r2, #560	; 0x230
   2afec:	mov	r6, r3
   2aff0:	mov	r4, r0
   2aff4:	bl	149d0 <memset@plt>
   2aff8:	cmp	r6, #0
   2affc:	beq	2b010 <__flatcc_fb_init_parser@@Base+0x40>
   2b000:	ldr	r1, [fp, #8]
   2b004:	str	r6, [r4, #8]
   2b008:	str	r1, [r4, #12]
   2b00c:	b	2b01c <__flatcc_fb_init_parser@@Base+0x4c>
   2b010:	ldr	r0, [pc, #644]	; 2b29c <__flatcc_fb_init_parser@@Base+0x2cc>
   2b014:	ldr	r0, [pc, r0]
   2b018:	str	r0, [r4, #8]
   2b01c:	ldr	r5, [fp, #12]
   2b020:	add	r0, r4, #128	; 0x80
   2b024:	cmp	r9, #0
   2b028:	beq	2b03c <__flatcc_fb_init_parser@@Base+0x6c>
   2b02c:	mov	r1, r9
   2b030:	mov	r2, #224	; 0xe0
   2b034:	bl	14904 <memcpy@plt>
   2b038:	b	2b040 <__flatcc_fb_init_parser@@Base+0x70>
   2b03c:	bl	15be0 <flatcc_init_options@@Base>
   2b040:	cmp	r5, #0
   2b044:	addeq	r5, r4, #416	; 0x1a0
   2b048:	str	r5, [r4, #412]	; 0x19c
   2b04c:	ldr	r0, [r4, #192]	; 0xc0
   2b050:	cmp	r0, #8
   2b054:	bhi	2b22c <__flatcc_fb_init_parser@@Base+0x25c>
   2b058:	mov	r1, #1
   2b05c:	mov	r2, #276	; 0x114
   2b060:	tst	r2, r1, lsl r0
   2b064:	beq	2b22c <__flatcc_fb_init_parser@@Base+0x25c>
   2b068:	ldr	r0, [r4, #196]	; 0xc4
   2b06c:	cmp	r0, #8
   2b070:	bhi	2b240 <__flatcc_fb_init_parser@@Base+0x270>
   2b074:	mov	r1, #1
   2b078:	mov	r2, #276	; 0x114
   2b07c:	tst	r2, r1, lsl r0
   2b080:	beq	2b240 <__flatcc_fb_init_parser@@Base+0x270>
   2b084:	ldr	sl, [pc, #548]	; 2b2b0 <__flatcc_fb_init_parser@@Base+0x2e0>
   2b088:	cmp	r7, #0
   2b08c:	add	sl, pc, sl
   2b090:	movne	sl, r7
   2b094:	mov	r0, sl
   2b098:	bl	149a0 <strlen@plt>
   2b09c:	ldr	r2, [r9, #96]	; 0x60
   2b0a0:	mov	r6, r0
   2b0a4:	mov	r0, sl
   2b0a8:	mov	r1, r6
   2b0ac:	bl	2a9f0 <__flatcc_fb_create_basename@@Base>
   2b0b0:	cmp	r0, #0
   2b0b4:	str	r0, [r4, #512]	; 0x200
   2b0b8:	beq	2b274 <__flatcc_fb_init_parser@@Base+0x2a4>
   2b0bc:	mov	r5, r0
   2b0c0:	str	r6, [sp]
   2b0c4:	bl	149a0 <strlen@plt>
   2b0c8:	mov	r7, r0
   2b0cc:	mov	r0, r5
   2b0d0:	mov	r1, r7
   2b0d4:	bl	2a45c <__flatcc_fb_copy_path_n@@Base>
   2b0d8:	cmp	r0, #0
   2b0dc:	beq	2b274 <__flatcc_fb_init_parser@@Base+0x2a4>
   2b0e0:	mov	r5, r0
   2b0e4:	cmp	r7, #0
   2b0e8:	beq	2b118 <__flatcc_fb_init_parser@@Base+0x148>
   2b0ec:	mov	r6, #0
   2b0f0:	ldrb	r8, [r5, r6]
   2b0f4:	cmp	r8, #0
   2b0f8:	beq	2b118 <__flatcc_fb_init_parser@@Base+0x148>
   2b0fc:	bl	1497c <__ctype_toupper_loc@plt>
   2b100:	ldr	r0, [r0]
   2b104:	ldr	r0, [r0, r8, lsl #2]
   2b108:	strb	r0, [r5, r6]
   2b10c:	add	r6, r6, #1
   2b110:	cmp	r6, r7
   2b114:	bcc	2b0f0 <__flatcc_fb_init_parser@@Base+0x120>
   2b118:	str	r5, [r4, #516]	; 0x204
   2b11c:	str	r5, [r4, #496]	; 0x1f0
   2b120:	str	r7, [r4, #500]	; 0x1f4
   2b124:	mov	r0, sl
   2b128:	ldr	r2, [pc, #388]	; 2b2b4 <__flatcc_fb_init_parser@@Base+0x2e4>
   2b12c:	ldr	r1, [sp]
   2b130:	add	r2, pc, r2
   2b134:	bl	2a9f0 <__flatcc_fb_create_basename@@Base>
   2b138:	cmp	r0, #0
   2b13c:	str	r0, [r4, #520]	; 0x208
   2b140:	beq	2b274 <__flatcc_fb_init_parser@@Base+0x2a4>
   2b144:	ldr	r0, [r9, #192]	; 0xc0
   2b148:	cmp	r0, #0
   2b14c:	beq	2b15c <__flatcc_fb_init_parser@@Base+0x18c>
   2b150:	str	r0, [r4, #476]	; 0x1dc
   2b154:	bl	149a0 <strlen@plt>
   2b158:	str	r0, [r4, #480]	; 0x1e0
   2b15c:	ldr	r0, [r4, #412]	; 0x19c
   2b160:	mov	r1, #0
   2b164:	mov	r2, #0
   2b168:	mov	r5, #0
   2b16c:	bl	29530 <fb_scope_table_find@@Base>
   2b170:	mov	r6, r0
   2b174:	cmp	r0, #0
   2b178:	bne	2b1f0 <__flatcc_fb_init_parser@@Base+0x220>
   2b17c:	ldr	r6, [r4, #52]	; 0x34
   2b180:	ldr	r0, [r4, #44]	; 0x2c
   2b184:	add	r1, r6, #32
   2b188:	cmp	r1, r0
   2b18c:	bls	2b1c4 <__flatcc_fb_init_parser@@Base+0x1f4>
   2b190:	mov	r0, #65536	; 0x10000
   2b194:	mov	r1, #1
   2b198:	bl	148c8 <calloc@plt>
   2b19c:	cmp	r0, #0
   2b1a0:	beq	2b274 <__flatcc_fb_init_parser@@Base+0x2a4>
   2b1a4:	ldr	r2, [r4, #48]	; 0x30
   2b1a8:	mov	r1, r0
   2b1ac:	add	r6, r0, #16
   2b1b0:	str	r2, [r1], #48	; 0x30
   2b1b4:	add	r2, r0, #65536	; 0x10000
   2b1b8:	str	r2, [r4, #44]	; 0x2c
   2b1bc:	str	r0, [r4, #48]	; 0x30
   2b1c0:	str	r6, [r4, #52]	; 0x34
   2b1c4:	mov	r0, #0
   2b1c8:	str	r1, [r4, #52]	; 0x34
   2b1cc:	mov	r2, #1
   2b1d0:	str	r0, [r6]
   2b1d4:	ldr	r0, [r4, #476]	; 0x1dc
   2b1d8:	ldr	r1, [r4, #480]	; 0x1e0
   2b1dc:	str	r1, [r6, #24]
   2b1e0:	str	r0, [r6, #20]
   2b1e4:	mov	r1, r6
   2b1e8:	ldr	r0, [r4, #412]	; 0x19c
   2b1ec:	bl	29508 <fb_scope_table_insert_item@@Base>
   2b1f0:	str	r6, [r4, #544]	; 0x220
   2b1f4:	mov	r1, #0
   2b1f8:	mov	r2, #0
   2b1fc:	ldr	r0, [r4, #412]	; 0x19c
   2b200:	bl	29530 <fb_scope_table_find@@Base>
   2b204:	cmp	r6, r0
   2b208:	beq	2b268 <__flatcc_fb_init_parser@@Base+0x298>
   2b20c:	ldr	r0, [pc, #164]	; 2b2b8 <__flatcc_fb_init_parser@@Base+0x2e8>
   2b210:	ldr	r1, [pc, #164]	; 2b2bc <__flatcc_fb_init_parser@@Base+0x2ec>
   2b214:	ldr	r3, [pc, #164]	; 2b2c0 <__flatcc_fb_init_parser@@Base+0x2f0>
   2b218:	movw	r2, #1331	; 0x533
   2b21c:	add	r0, pc, r0
   2b220:	add	r1, pc, r1
   2b224:	add	r3, pc, r3
   2b228:	bl	14a78 <__assert_fail@plt>
   2b22c:	ldr	r1, [pc, #108]	; 2b2a0 <__flatcc_fb_init_parser@@Base+0x2d0>
   2b230:	ldr	r2, [pc, #108]	; 2b2a4 <__flatcc_fb_init_parser@@Base+0x2d4>
   2b234:	add	r1, pc, r1
   2b238:	add	r2, pc, r2
   2b23c:	b	2b250 <__flatcc_fb_init_parser@@Base+0x280>
   2b240:	ldr	r1, [pc, #96]	; 2b2a8 <__flatcc_fb_init_parser@@Base+0x2d8>
   2b244:	ldr	r2, [pc, #96]	; 2b2ac <__flatcc_fb_init_parser@@Base+0x2dc>
   2b248:	add	r1, pc, r1
   2b24c:	add	r2, pc, r2
   2b250:	mov	r0, r4
   2b254:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2b258:	ldr	r0, [r4, #108]	; 0x6c
   2b25c:	mvn	r5, #0
   2b260:	add	r0, r0, #1
   2b264:	str	r0, [r4, #108]	; 0x6c
   2b268:	mov	r0, r5
   2b26c:	sub	sp, fp, #28
   2b270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b274:	ldr	r0, [pc, #72]	; 2b2c4 <__flatcc_fb_init_parser@@Base+0x2f4>
   2b278:	mov	r1, #34	; 0x22
   2b27c:	mov	r2, #1
   2b280:	ldr	r0, [pc, r0]
   2b284:	ldr	r3, [r0]
   2b288:	ldr	r0, [pc, #56]	; 2b2c8 <__flatcc_fb_init_parser@@Base+0x2f8>
   2b28c:	add	r0, pc, r0
   2b290:	bl	1494c <fwrite@plt>
   2b294:	mov	r0, #1
   2b298:	bl	14994 <exit@plt>
   2b29c:	muleq	r4, r8, r0
   2b2a0:	strdeq	ip, [r2], -r5
   2b2a4:	andeq	ip, r2, sp, lsr r5
   2b2a8:	andeq	ip, r2, r1, ror #9
   2b2ac:	andeq	ip, r2, r1, ror #10
   2b2b0:	andeq	ip, r2, sl, asr r7
   2b2b4:	andeq	r5, r1, lr, asr #13
   2b2b8:	andeq	ip, r2, pc, asr #11
   2b2bc:	andeq	ip, r2, lr, lsl r6
   2b2c0:	andeq	ip, r2, r7, ror r6
   2b2c4:	andeq	r0, r4, ip, lsl lr
   2b2c8:	muleq	r1, fp, r0
   2b2cc:	nop	{0}

0002b2d0 <__flatcc_fb_parse@@Base>:
   2b2d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b2d4:	add	fp, sp, #28
   2b2d8:	sub	sp, sp, #84	; 0x54
   2b2dc:	mov	sl, r0
   2b2e0:	ldr	r0, [pc, #3860]	; 2c1fc <__flatcc_fb_parse@@Base+0xf2c>
   2b2e4:	cmp	r3, #0
   2b2e8:	mov	r4, sl
   2b2ec:	add	r0, pc, r0
   2b2f0:	str	r0, [r4, #68]!	; 0x44
   2b2f4:	mov	r0, #1
   2b2f8:	add	r7, pc, #928	; 0x3a0
   2b2fc:	add	r6, pc, #940	; 0x3ac
   2b300:	str	r1, [r4, #-8]
   2b304:	str	r0, [r4, #-4]
   2b308:	vld1.64	{d16-d17}, [r6 :128]
   2b30c:	vld1.64	{d18-d19}, [r7 :128]
   2b310:	ldr	r0, [pc, #4052]	; 2c2ec <__flatcc_fb_parse@@Base+0x101c>
   2b314:	str	r4, [sp, #32]
   2b318:	add	r0, pc, r0
   2b31c:	str	r0, [r4, #20]
   2b320:	add	r0, r4, #4
   2b324:	vst1.32	{d16-d17}, [r0]
   2b328:	add	r0, r4, #24
   2b32c:	vst1.32	{d18-d19}, [r0]
   2b330:	strne	r1, [sl, #16]
   2b334:	mov	r0, r1
   2b338:	mov	r1, r2
   2b33c:	mov	r2, sl
   2b340:	bl	2daa8 <__flatcc_fb_parse@@Base+0x27d8>
   2b344:	mov	r4, sl
   2b348:	ldr	r1, [r4, #40]!	; 0x28
   2b34c:	ldr	r0, [r4, #176]	; 0xb0
   2b350:	ldr	r7, [r4, #-20]	; 0xffffffec
   2b354:	str	r7, [r4]
   2b358:	str	r1, [r4, #-16]
   2b35c:	bl	14964 <malloc@plt>
   2b360:	cmp	r0, #0
   2b364:	str	r0, [r4, #72]	; 0x48
   2b368:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2b36c:	ldr	r0, [r7, #16]
   2b370:	movw	r1, #64565	; 0xfc35
   2b374:	movt	r1, #65535	; 0xffff
   2b378:	add	r1, r1, #7
   2b37c:	cmp	r0, r1
   2b380:	bne	2b394 <__flatcc_fb_parse@@Base+0xc4>
   2b384:	mov	r0, sl
   2b388:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b38c:	ldr	r7, [sl, #40]	; 0x28
   2b390:	ldr	r0, [r7, #16]
   2b394:	movw	r1, #64565	; 0xfc35
   2b398:	movt	r1, #65535	; 0xffff
   2b39c:	cmp	r0, r1
   2b3a0:	bne	2b71c <__flatcc_fb_parse@@Base+0x44c>
   2b3a4:	add	r0, sl, #36	; 0x24
   2b3a8:	add	r9, sl, #52	; 0x34
   2b3ac:	add	r8, sl, #108	; 0x6c
   2b3b0:	mov	r6, r7
   2b3b4:	str	r0, [fp, #-48]	; 0xffffffd0
   2b3b8:	add	r0, sl, #48	; 0x30
   2b3bc:	str	r0, [fp, #-52]	; 0xffffffcc
   2b3c0:	add	r0, sl, #44	; 0x2c
   2b3c4:	str	r0, [fp, #-44]	; 0xffffffd4
   2b3c8:	ldr	r5, [pc, #4028]	; 2c38c <__flatcc_fb_parse@@Base+0x10bc>
   2b3cc:	add	r5, pc, r5
   2b3d0:	mov	r0, sl
   2b3d4:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b3d8:	cmp	r6, #0
   2b3dc:	beq	2b710 <__flatcc_fb_parse@@Base+0x440>
   2b3e0:	ldr	r0, [sl, #140]	; 0x8c
   2b3e4:	cmp	r0, #0
   2b3e8:	beq	2b43c <__flatcc_fb_parse@@Base+0x16c>
   2b3ec:	cmp	r7, #0
   2b3f0:	beq	2b44c <__flatcc_fb_parse@@Base+0x17c>
   2b3f4:	ldr	r2, [r7]
   2b3f8:	ldr	r0, [r7, #4]
   2b3fc:	cmp	r2, #0
   2b400:	mov	r1, r2
   2b404:	moveq	r0, r2
   2b408:	moveq	r1, r5
   2b40c:	mov	r2, sl
   2b410:	ldr	r3, [r2, #20]
   2b414:	cmp	r3, r7
   2b418:	bhi	2b428 <__flatcc_fb_parse@@Base+0x158>
   2b41c:	ldr	r3, [r2, #24]
   2b420:	cmp	r3, r7
   2b424:	bhi	2b468 <__flatcc_fb_parse@@Base+0x198>
   2b428:	ldr	r2, [r2]
   2b42c:	cmp	r2, #0
   2b430:	bne	2b410 <__flatcc_fb_parse@@Base+0x140>
   2b434:	mov	r2, r5
   2b438:	b	2b46c <__flatcc_fb_parse@@Base+0x19c>
   2b43c:	ldr	r0, [r8]
   2b440:	cmp	r0, #9
   2b444:	ble	2b4ac <__flatcc_fb_parse@@Base+0x1dc>
   2b448:	b	2b710 <__flatcc_fb_parse@@Base+0x440>
   2b44c:	ldr	r1, [pc, #3900]	; 2c390 <__flatcc_fb_parse@@Base+0x10c0>
   2b450:	ldr	r2, [pc, #3900]	; 2c394 <__flatcc_fb_parse@@Base+0x10c4>
   2b454:	mov	r0, sl
   2b458:	add	r1, pc, r1
   2b45c:	add	r2, pc, r2
   2b460:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2b464:	b	2b498 <__flatcc_fb_parse@@Base+0x1c8>
   2b468:	ldr	r2, [r2, #520]	; 0x208
   2b46c:	ldr	r6, [r7, #12]
   2b470:	ldr	r3, [r7, #8]
   2b474:	str	r6, [sp]
   2b478:	stmib	sp, {r0, r1}
   2b47c:	ldr	r0, [pc, #3860]	; 2c398 <__flatcc_fb_parse@@Base+0x10c8>
   2b480:	add	r0, pc, r0
   2b484:	str	r0, [sp, #12]
   2b488:	mov	r0, sl
   2b48c:	ldr	r1, [pc, #3848]	; 2c39c <__flatcc_fb_parse@@Base+0x10cc>
   2b490:	add	r1, pc, r1
   2b494:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2b498:	ldr	r0, [r8]
   2b49c:	add	r0, r0, #1
   2b4a0:	str	r0, [r8]
   2b4a4:	cmp	r0, #9
   2b4a8:	bgt	2b710 <__flatcc_fb_parse@@Base+0x440>
   2b4ac:	ldr	r6, [r4]
   2b4b0:	ldr	r0, [r6, #16]
   2b4b4:	cmp	r0, #19
   2b4b8:	bne	2b4d0 <__flatcc_fb_parse@@Base+0x200>
   2b4bc:	mov	r0, sl
   2b4c0:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b4c4:	cmp	r6, #0
   2b4c8:	bne	2b5a4 <__flatcc_fb_parse@@Base+0x2d4>
   2b4cc:	b	2b578 <__flatcc_fb_parse@@Base+0x2a8>
   2b4d0:	cmp	r6, #0
   2b4d4:	beq	2b520 <__flatcc_fb_parse@@Base+0x250>
   2b4d8:	ldr	r2, [r6]
   2b4dc:	ldr	r0, [r6, #4]
   2b4e0:	cmp	r2, #0
   2b4e4:	mov	r1, r2
   2b4e8:	moveq	r0, r2
   2b4ec:	moveq	r1, r5
   2b4f0:	mov	r2, sl
   2b4f4:	ldr	r3, [r2, #20]
   2b4f8:	cmp	r3, r6
   2b4fc:	bhi	2b50c <__flatcc_fb_parse@@Base+0x23c>
   2b500:	ldr	r3, [r2, #24]
   2b504:	cmp	r3, r6
   2b508:	bhi	2b53c <__flatcc_fb_parse@@Base+0x26c>
   2b50c:	ldr	r2, [r2]
   2b510:	cmp	r2, #0
   2b514:	bne	2b4f4 <__flatcc_fb_parse@@Base+0x224>
   2b518:	mov	r2, r5
   2b51c:	b	2b540 <__flatcc_fb_parse@@Base+0x270>
   2b520:	ldr	r1, [pc, #4008]	; 2c4d0 <__flatcc_fb_parse@@Base+0x1200>
   2b524:	ldr	r2, [pc, #4008]	; 2c4d4 <__flatcc_fb_parse@@Base+0x1204>
   2b528:	mov	r0, sl
   2b52c:	add	r1, pc, r1
   2b530:	add	r2, pc, r2
   2b534:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2b538:	b	2b56c <__flatcc_fb_parse@@Base+0x29c>
   2b53c:	ldr	r2, [r2, #520]	; 0x208
   2b540:	ldr	r3, [r6, #8]
   2b544:	ldr	r6, [r6, #12]
   2b548:	str	r6, [sp]
   2b54c:	stmib	sp, {r0, r1}
   2b550:	ldr	r0, [pc, #3968]	; 2c4d8 <__flatcc_fb_parse@@Base+0x1208>
   2b554:	add	r0, pc, r0
   2b558:	str	r0, [sp, #12]
   2b55c:	mov	r0, sl
   2b560:	ldr	r1, [pc, #3956]	; 2c4dc <__flatcc_fb_parse@@Base+0x120c>
   2b564:	add	r1, pc, r1
   2b568:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2b56c:	ldr	r0, [r8]
   2b570:	add	r0, r0, #1
   2b574:	str	r0, [r8]
   2b578:	ldr	r0, [r4]
   2b57c:	ldr	r6, [r0, #16]
   2b580:	cmp	r6, #0
   2b584:	beq	2b5a4 <__flatcc_fb_parse@@Base+0x2d4>
   2b588:	mov	r0, sl
   2b58c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b590:	cmp	r6, #59	; 0x3b
   2b594:	bne	2b578 <__flatcc_fb_parse@@Base+0x2a8>
   2b598:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2b59c:	mov	r1, #0
   2b5a0:	str	r1, [r0]
   2b5a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b5a8:	ldr	r2, [r9]
   2b5ac:	ldr	r0, [r0]
   2b5b0:	add	r1, r2, #32
   2b5b4:	cmp	r1, r0
   2b5b8:	bls	2b5fc <__flatcc_fb_parse@@Base+0x32c>
   2b5bc:	mov	r0, #65536	; 0x10000
   2b5c0:	mov	r1, #1
   2b5c4:	mov	r6, r9
   2b5c8:	bl	148c8 <calloc@plt>
   2b5cc:	cmp	r0, #0
   2b5d0:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2b5d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b5d8:	mov	r1, r0
   2b5dc:	ldr	r2, [r3]
   2b5e0:	str	r2, [r1], #48	; 0x30
   2b5e4:	str	r0, [r3]
   2b5e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b5ec:	add	r2, r0, #16
   2b5f0:	add	r0, r0, #65536	; 0x10000
   2b5f4:	str	r2, [r6]
   2b5f8:	str	r0, [r3]
   2b5fc:	str	r1, [sl, #52]	; 0x34
   2b600:	mov	r1, r2
   2b604:	ldr	r0, [sl, #352]	; 0x160
   2b608:	str	r0, [r1], #8
   2b60c:	mov	r0, sl
   2b610:	str	r2, [sl, #352]	; 0x160
   2b614:	bl	32218 <__flatcc_fb_clear_parser@@Base+0x124>
   2b618:	ldr	r0, [sl, #40]	; 0x28
   2b61c:	ldr	r1, [r0, #16]
   2b620:	cmp	r1, #59	; 0x3b
   2b624:	bne	2b634 <__flatcc_fb_parse@@Base+0x364>
   2b628:	mov	r0, sl
   2b62c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b630:	b	2b6f8 <__flatcc_fb_parse@@Base+0x428>
   2b634:	cmp	r0, #0
   2b638:	beq	2b684 <__flatcc_fb_parse@@Base+0x3b4>
   2b63c:	ldr	r2, [r0]
   2b640:	ldr	r1, [r0, #4]
   2b644:	cmp	r2, #0
   2b648:	mov	r6, r2
   2b64c:	moveq	r1, r2
   2b650:	moveq	r6, r5
   2b654:	mov	r2, sl
   2b658:	ldr	r3, [r2, #20]
   2b65c:	cmp	r3, r0
   2b660:	bhi	2b670 <__flatcc_fb_parse@@Base+0x3a0>
   2b664:	ldr	r3, [r2, #24]
   2b668:	cmp	r3, r0
   2b66c:	bhi	2b6c0 <__flatcc_fb_parse@@Base+0x3f0>
   2b670:	ldr	r2, [r2]
   2b674:	cmp	r2, #0
   2b678:	bne	2b658 <__flatcc_fb_parse@@Base+0x388>
   2b67c:	mov	r2, r5
   2b680:	b	2b6c4 <__flatcc_fb_parse@@Base+0x3f4>
   2b684:	ldr	r1, [pc, #3928]	; 2c5e4 <__flatcc_fb_parse@@Base+0x1314>
   2b688:	ldr	r2, [pc, #3928]	; 2c5e8 <__flatcc_fb_parse@@Base+0x1318>
   2b68c:	mov	r0, sl
   2b690:	add	r1, pc, r1
   2b694:	add	r2, pc, r2
   2b698:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2b69c:	b	2b6ec <__flatcc_fb_parse@@Base+0x41c>
   2b6a0:	andeq	r0, r0, r5
	...
   2b6ac:			; <UNDEFINED> instruction: 0xfffffc2a
   2b6b0:	andeq	r0, r0, r4
	...
   2b6bc:	andeq	r0, r0, r9
   2b6c0:	ldr	r2, [r2, #520]	; 0x208
   2b6c4:	ldr	r3, [r0, #8]
   2b6c8:	ldr	r0, [r0, #12]
   2b6cc:	stm	sp, {r0, r1, r6}
   2b6d0:	ldr	r0, [pc, #3860]	; 2c5ec <__flatcc_fb_parse@@Base+0x131c>
   2b6d4:	add	r0, pc, r0
   2b6d8:	str	r0, [sp, #12]
   2b6dc:	mov	r0, sl
   2b6e0:	ldr	r1, [pc, #3848]	; 2c5f0 <__flatcc_fb_parse@@Base+0x1320>
   2b6e4:	add	r1, pc, r1
   2b6e8:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2b6ec:	ldr	r0, [r8]
   2b6f0:	add	r0, r0, #1
   2b6f4:	str	r0, [r8]
   2b6f8:	ldr	r6, [r4]
   2b6fc:	movw	r1, #64565	; 0xfc35
   2b700:	movt	r1, #65535	; 0xffff
   2b704:	ldr	r0, [r6, #16]
   2b708:	cmp	r0, r1
   2b70c:	beq	2b3d0 <__flatcc_fb_parse@@Base+0x100>
   2b710:	ldr	r7, [r4]
   2b714:	mov	r6, r9
   2b718:	b	2b73c <__flatcc_fb_parse@@Base+0x46c>
   2b71c:	add	r0, sl, #48	; 0x30
   2b720:	add	r6, sl, #52	; 0x34
   2b724:	add	r8, sl, #108	; 0x6c
   2b728:	str	r0, [fp, #-52]	; 0xffffffcc
   2b72c:	add	r0, sl, #36	; 0x24
   2b730:	str	r0, [fp, #-48]	; 0xffffffd0
   2b734:	add	r0, sl, #44	; 0x2c
   2b738:	str	r0, [fp, #-44]	; 0xffffffd4
   2b73c:	add	r0, sl, #476	; 0x1dc
   2b740:	str	r6, [fp, #-40]	; 0xffffffd8
   2b744:	str	r0, [sp, #36]	; 0x24
   2b748:	add	r0, sl, #400	; 0x190
   2b74c:	str	r0, [sp, #52]	; 0x34
   2b750:	add	r0, sl, #368	; 0x170
   2b754:	str	r0, [sp, #56]	; 0x38
   2b758:	add	r0, sl, #360	; 0x168
   2b75c:	str	r0, [sp, #44]	; 0x2c
   2b760:	add	r0, sl, #384	; 0x180
   2b764:	str	r0, [sp, #48]	; 0x30
   2b768:	add	r0, sl, #376	; 0x178
   2b76c:	str	r0, [sp, #40]	; 0x28
   2b770:	ldr	r1, [r7, #16]
   2b774:	cmp	r1, #0
   2b778:	beq	2d7cc <__flatcc_fb_parse@@Base+0x24fc>
   2b77c:	ldr	r0, [r8]
   2b780:	cmp	r0, #9
   2b784:	bgt	2d848 <__flatcc_fb_parse@@Base+0x2578>
   2b788:	mov	r9, r7
   2b78c:	cmp	r1, #4
   2b790:	bgt	2b8dc <__flatcc_fb_parse@@Base+0x60c>
   2b794:	movw	r0, #997	; 0x3e5
   2b798:	add	r0, r1, r0
   2b79c:	cmp	r0, #32
   2b7a0:	bhi	2c08c <__flatcc_fb_parse@@Base+0xdbc>
   2b7a4:	add	r1, pc, #4
   2b7a8:	ldr	r0, [r1, r0, lsl #2]
   2b7ac:	add	pc, r1, r0
   2b7b0:	andeq	r0, r0, r4, lsl #1
   2b7b4:	ldrdeq	r0, [r0], -ip
   2b7b8:	ldrdeq	r0, [r0], -ip
   2b7bc:	ldrdeq	r0, [r0], -ip
   2b7c0:	ldrdeq	r0, [r0], -ip
   2b7c4:	ldrdeq	r0, [r0], -ip
   2b7c8:	ldrdeq	r0, [r0], -ip
   2b7cc:	ldrdeq	r0, [r0], -ip
   2b7d0:	ldrdeq	r0, [r0], -ip
   2b7d4:	ldrdeq	r0, [r0], -ip
   2b7d8:	ldrdeq	r0, [r0], -ip
   2b7dc:	ldrdeq	r0, [r0], -ip
   2b7e0:	ldrdeq	r0, [r0], -ip
   2b7e4:	ldrdeq	r0, [r0], -ip
   2b7e8:	andeq	r0, r0, r0, asr #7
   2b7ec:	ldrdeq	r0, [r0], -ip
   2b7f0:	ldrdeq	r0, [r0], -ip
   2b7f4:	ldrdeq	r0, [r0], -ip
   2b7f8:	ldrdeq	r0, [r0], -ip
   2b7fc:	ldrdeq	r0, [r0], -ip
   2b800:	ldrdeq	r0, [r0], -ip
   2b804:	strdeq	r0, [r0], -r4
   2b808:	ldrdeq	r0, [r0], -ip
   2b80c:	ldrdeq	r0, [r0], -ip
   2b810:	andeq	r0, r0, ip, ror r4
   2b814:	ldrdeq	r0, [r0], -ip
   2b818:	andeq	r0, r0, r0, lsl r7
   2b81c:	andeq	r0, r0, ip, ror #14
   2b820:	ldrdeq	r0, [r0], -ip
   2b824:	muleq	r0, ip, r6
   2b828:	andeq	r0, r0, ip, lsl r3
   2b82c:	andeq	r0, r0, r0, lsr #10
   2b830:	andeq	r0, r0, ip, ror #3
   2b834:	mov	r0, sl
   2b838:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b83c:	ldr	r6, [sl, #52]	; 0x34
   2b840:	ldr	r0, [sl, #44]	; 0x2c
   2b844:	add	r1, r6, #128	; 0x80
   2b848:	cmp	r1, r0
   2b84c:	bls	2b890 <__flatcc_fb_parse@@Base+0x5c0>
   2b850:	mov	r0, #65536	; 0x10000
   2b854:	mov	r1, #1
   2b858:	bl	148c8 <calloc@plt>
   2b85c:	cmp	r0, #0
   2b860:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2b864:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b868:	mov	r1, r0
   2b86c:	add	r6, r0, #16
   2b870:	ldr	r2, [r3]
   2b874:	str	r2, [r1], #144	; 0x90
   2b878:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b87c:	str	r0, [r3]
   2b880:	add	r0, r0, #65536	; 0x10000
   2b884:	str	r6, [r2]
   2b888:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2b88c:	str	r0, [r2]
   2b890:	str	r1, [sl, #52]	; 0x34
   2b894:	mov	r1, #3
   2b898:	ldr	r0, [sl, #392]	; 0x188
   2b89c:	strh	r1, [r6, #8]
   2b8a0:	str	r0, [r6]
   2b8a4:	str	r6, [sl, #392]	; 0x188
   2b8a8:	ldr	r0, [sl, #544]	; 0x220
   2b8ac:	str	r0, [r6, #12]
   2b8b0:	ldr	r0, [sl, #36]	; 0x24
   2b8b4:	cmp	r0, #0
   2b8b8:	beq	2c200 <__flatcc_fb_parse@@Base+0xf30>
   2b8bc:	mov	r2, #0
   2b8c0:	mov	r1, r0
   2b8c4:	ldr	r0, [r0]
   2b8c8:	str	r2, [r1]
   2b8cc:	mov	r2, r1
   2b8d0:	cmp	r0, #0
   2b8d4:	bne	2b8c0 <__flatcc_fb_parse@@Base+0x5f0>
   2b8d8:	b	2c204 <__flatcc_fb_parse@@Base+0xf34>
   2b8dc:	cmp	r1, #26
   2b8e0:	bgt	2b930 <__flatcc_fb_parse@@Base+0x660>
   2b8e4:	cmp	r1, #5
   2b8e8:	beq	2c014 <__flatcc_fb_parse@@Base+0xd44>
   2b8ec:	cmp	r1, #7
   2b8f0:	bne	2c08c <__flatcc_fb_parse@@Base+0xdbc>
   2b8f4:	mov	r0, sl
   2b8f8:	cmp	r9, #0
   2b8fc:	beq	2c798 <__flatcc_fb_parse@@Base+0x14c8>
   2b900:	ldr	r1, [r0, #20]
   2b904:	cmp	r1, r9
   2b908:	bhi	2b918 <__flatcc_fb_parse@@Base+0x648>
   2b90c:	ldr	r1, [r0, #24]
   2b910:	cmp	r1, r9
   2b914:	bhi	2c840 <__flatcc_fb_parse@@Base+0x1570>
   2b918:	ldr	r0, [r0]
   2b91c:	cmp	r0, #0
   2b920:	bne	2b900 <__flatcc_fb_parse@@Base+0x630>
   2b924:	ldr	r2, [pc, #4068]	; 2c910 <__flatcc_fb_parse@@Base+0x1640>
   2b928:	add	r2, pc, r2
   2b92c:	b	2c844 <__flatcc_fb_parse@@Base+0x1574>
   2b930:	cmp	r1, #27
   2b934:	beq	2c050 <__flatcc_fb_parse@@Base+0xd80>
   2b938:	cmp	r1, #123	; 0x7b
   2b93c:	bne	2c08c <__flatcc_fb_parse@@Base+0xdbc>
   2b940:	cmp	r9, #0
   2b944:	beq	2c7ac <__flatcc_fb_parse@@Base+0x14dc>
   2b948:	ldr	r2, [r9]
   2b94c:	ldr	r0, [r9, #4]
   2b950:	ldr	r3, [pc, #4092]	; 2c954 <__flatcc_fb_parse@@Base+0x1684>
   2b954:	cmp	r2, #0
   2b958:	mov	r1, r2
   2b95c:	add	r3, pc, r3
   2b960:	moveq	r0, r2
   2b964:	moveq	r1, r3
   2b968:	mov	r2, sl
   2b96c:	ldr	r3, [r2, #20]
   2b970:	cmp	r3, r9
   2b974:	bhi	2b984 <__flatcc_fb_parse@@Base+0x6b4>
   2b978:	ldr	r3, [r2, #24]
   2b97c:	cmp	r3, r9
   2b980:	bhi	2c870 <__flatcc_fb_parse@@Base+0x15a0>
   2b984:	ldr	r2, [r2]
   2b988:	cmp	r2, #0
   2b98c:	bne	2b96c <__flatcc_fb_parse@@Base+0x69c>
   2b990:	ldr	r2, [pc, #4032]	; 2c958 <__flatcc_fb_parse@@Base+0x1688>
   2b994:	add	r2, pc, r2
   2b998:	b	2c874 <__flatcc_fb_parse@@Base+0x15a4>
   2b99c:	mov	r0, sl
   2b9a0:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b9a4:	ldr	r0, [sp, #56]	; 0x38
   2b9a8:	ldrh	r0, [r0]
   2b9ac:	cmp	r0, #0
   2b9b0:	beq	2b9d8 <__flatcc_fb_parse@@Base+0x708>
   2b9b4:	ldr	r0, [sl, #360]	; 0x168
   2b9b8:	ldr	r2, [sl, #364]	; 0x16c
   2b9bc:	ldr	r1, [sl, #40]	; 0x28
   2b9c0:	mov	r3, #0
   2b9c4:	stm	sp, {r0, r2}
   2b9c8:	mov	r0, sl
   2b9cc:	ldr	r2, [pc, #4068]	; 2c9b8 <__flatcc_fb_parse@@Base+0x16e8>
   2b9d0:	add	r2, pc, r2
   2b9d4:	bl	2ac84 <__flatcc_error_report@@Base>
   2b9d8:	ldr	r5, [r4]
   2b9dc:	ldr	r0, [r5, #16]
   2b9e0:	cmp	r0, #19
   2b9e4:	bne	2c0e8 <__flatcc_fb_parse@@Base+0xe18>
   2b9e8:	mov	r0, sl
   2b9ec:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2b9f0:	cmp	r5, #0
   2b9f4:	beq	2cc58 <__flatcc_fb_parse@@Base+0x1988>
   2b9f8:	ldr	r1, [sp, #44]	; 0x2c
   2b9fc:	ldr	r5, [sl, #40]	; 0x28
   2ba00:	mov	r0, sl
   2ba04:	bl	32218 <__flatcc_fb_clear_parser@@Base+0x124>
   2ba08:	ldr	r0, [sl, #360]	; 0x168
   2ba0c:	cmp	r0, #0
   2ba10:	beq	2d044 <__flatcc_fb_parse@@Base+0x1d74>
   2ba14:	ldr	r0, [sp, #44]	; 0x2c
   2ba18:	ldr	r0, [r0, #4]
   2ba1c:	cmp	r0, #4
   2ba20:	beq	2d044 <__flatcc_fb_parse@@Base+0x1d74>
   2ba24:	ldr	r0, [sp, #56]	; 0x38
   2ba28:	mov	r1, #1
   2ba2c:	cmp	r5, #0
   2ba30:	strh	r1, [r0]
   2ba34:	beq	2cfa4 <__flatcc_fb_parse@@Base+0x1cd4>
   2ba38:	ldr	r2, [r5]
   2ba3c:	ldr	r0, [r5, #4]
   2ba40:	ldr	r3, [pc, #4068]	; 2ca2c <__flatcc_fb_parse@@Base+0x175c>
   2ba44:	cmp	r2, #0
   2ba48:	mov	r1, r2
   2ba4c:	add	r3, pc, r3
   2ba50:	moveq	r0, r2
   2ba54:	moveq	r1, r3
   2ba58:	mov	r2, sl
   2ba5c:	ldr	r3, [r2, #20]
   2ba60:	cmp	r3, r5
   2ba64:	bhi	2ba74 <__flatcc_fb_parse@@Base+0x7a4>
   2ba68:	ldr	r3, [r2, #24]
   2ba6c:	cmp	r3, r5
   2ba70:	bhi	2d008 <__flatcc_fb_parse@@Base+0x1d38>
   2ba74:	ldr	r2, [r2]
   2ba78:	cmp	r2, #0
   2ba7c:	bne	2ba5c <__flatcc_fb_parse@@Base+0x78c>
   2ba80:	ldr	r2, [pc, #4036]	; 2ca4c <__flatcc_fb_parse@@Base+0x177c>
   2ba84:	add	r2, pc, r2
   2ba88:	b	2d00c <__flatcc_fb_parse@@Base+0x1d3c>
   2ba8c:	mov	r0, sl
   2ba90:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2ba94:	mov	r0, #0
   2ba98:	str	r0, [fp, #-36]	; 0xffffffdc
   2ba9c:	ldr	r5, [sl, #40]	; 0x28
   2baa0:	ldr	r1, [r5, #16]
   2baa4:	mov	r0, r5
   2baa8:	cmp	r1, #59	; 0x3b
   2baac:	bne	2c91c <__flatcc_fb_parse@@Base+0x164c>
   2bab0:	mov	r0, sl
   2bab4:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bab8:	cmp	r5, #0
   2babc:	beq	2c914 <__flatcc_fb_parse@@Base+0x1644>
   2bac0:	mov	r0, #0
   2bac4:	str	r0, [sl, #544]	; 0x220
   2bac8:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2bacc:	mov	r0, sl
   2bad0:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bad4:	ldr	r1, [sl, #52]	; 0x34
   2bad8:	ldr	r0, [sl, #44]	; 0x2c
   2badc:	add	r2, r1, #128	; 0x80
   2bae0:	cmp	r2, r0
   2bae4:	bls	2bb24 <__flatcc_fb_parse@@Base+0x854>
   2bae8:	mov	r0, #65536	; 0x10000
   2baec:	mov	r1, #1
   2baf0:	bl	148c8 <calloc@plt>
   2baf4:	cmp	r0, #0
   2baf8:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2bafc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bb00:	mov	r2, r0
   2bb04:	ldr	r1, [r3]
   2bb08:	str	r1, [r2], #144	; 0x90
   2bb0c:	str	r0, [r3]
   2bb10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bb14:	add	r1, r0, #16
   2bb18:	add	r0, r0, #65536	; 0x10000
   2bb1c:	str	r1, [r6]
   2bb20:	str	r0, [r3]
   2bb24:	str	r2, [sl, #52]	; 0x34
   2bb28:	mov	r2, #2
   2bb2c:	ldr	r0, [sl, #392]	; 0x188
   2bb30:	strh	r2, [r1, #8]
   2bb34:	str	r0, [r1]
   2bb38:	str	r1, [sl, #392]	; 0x188
   2bb3c:	ldr	r0, [sl, #544]	; 0x220
   2bb40:	str	r0, [r1, #12]
   2bb44:	ldr	r0, [sl, #36]	; 0x24
   2bb48:	cmp	r0, #0
   2bb4c:	beq	2c34c <__flatcc_fb_parse@@Base+0x107c>
   2bb50:	mov	r3, #0
   2bb54:	mov	r2, r0
   2bb58:	ldr	r0, [r0]
   2bb5c:	str	r3, [r2]
   2bb60:	mov	r3, r2
   2bb64:	cmp	r0, #0
   2bb68:	bne	2bb54 <__flatcc_fb_parse@@Base+0x884>
   2bb6c:	b	2c350 <__flatcc_fb_parse@@Base+0x1080>
   2bb70:	mov	r0, sl
   2bb74:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bb78:	ldr	r1, [sl, #52]	; 0x34
   2bb7c:	ldr	r0, [sl, #44]	; 0x2c
   2bb80:	add	r2, r1, #128	; 0x80
   2bb84:	cmp	r2, r0
   2bb88:	bls	2bbc8 <__flatcc_fb_parse@@Base+0x8f8>
   2bb8c:	mov	r0, #65536	; 0x10000
   2bb90:	mov	r1, #1
   2bb94:	bl	148c8 <calloc@plt>
   2bb98:	cmp	r0, #0
   2bb9c:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2bba0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bba4:	mov	r2, r0
   2bba8:	ldr	r1, [r3]
   2bbac:	str	r1, [r2], #144	; 0x90
   2bbb0:	str	r0, [r3]
   2bbb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bbb8:	add	r1, r0, #16
   2bbbc:	add	r0, r0, #65536	; 0x10000
   2bbc0:	str	r1, [r6]
   2bbc4:	str	r0, [r3]
   2bbc8:	str	r2, [sl, #52]	; 0x34
   2bbcc:	mov	r0, #0
   2bbd0:	ldr	r2, [sl, #392]	; 0x188
   2bbd4:	strh	r0, [r1, #8]
   2bbd8:	str	r2, [r1]
   2bbdc:	str	r1, [sl, #392]	; 0x188
   2bbe0:	ldr	r2, [sl, #544]	; 0x220
   2bbe4:	str	r2, [r1, #12]
   2bbe8:	ldr	r2, [sl, #36]	; 0x24
   2bbec:	cmp	r2, #0
   2bbf0:	beq	2bc10 <__flatcc_fb_parse@@Base+0x940>
   2bbf4:	mov	r3, #0
   2bbf8:	mov	r0, r2
   2bbfc:	ldr	r2, [r2]
   2bc00:	str	r3, [r0]
   2bc04:	mov	r3, r0
   2bc08:	cmp	r2, #0
   2bc0c:	bne	2bbf8 <__flatcc_fb_parse@@Base+0x928>
   2bc10:	str	r0, [r1, #32]
   2bc14:	mov	r0, #0
   2bc18:	str	r0, [sl, #36]	; 0x24
   2bc1c:	movw	r0, #64565	; 0xfc35
   2bc20:	movt	r0, #65535	; 0xffff
   2bc24:	sub	r2, r0, #12
   2bc28:	b	2c380 <__flatcc_fb_parse@@Base+0x10b0>
   2bc2c:	mov	r0, sl
   2bc30:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bc34:	ldr	r1, [sl, #52]	; 0x34
   2bc38:	ldr	r0, [sl, #44]	; 0x2c
   2bc3c:	add	r2, r1, #128	; 0x80
   2bc40:	cmp	r2, r0
   2bc44:	bls	2bc84 <__flatcc_fb_parse@@Base+0x9b4>
   2bc48:	mov	r0, #65536	; 0x10000
   2bc4c:	mov	r1, #1
   2bc50:	bl	148c8 <calloc@plt>
   2bc54:	cmp	r0, #0
   2bc58:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2bc5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bc60:	mov	r2, r0
   2bc64:	ldr	r1, [r3]
   2bc68:	str	r1, [r2], #144	; 0x90
   2bc6c:	str	r0, [r3]
   2bc70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2bc74:	add	r1, r0, #16
   2bc78:	add	r0, r0, #65536	; 0x10000
   2bc7c:	str	r1, [r6]
   2bc80:	str	r0, [r3]
   2bc84:	str	r2, [sl, #52]	; 0x34
   2bc88:	mov	r2, #1
   2bc8c:	ldr	r0, [sl, #392]	; 0x188
   2bc90:	strh	r2, [r1, #8]
   2bc94:	str	r0, [r1]
   2bc98:	str	r1, [sl, #392]	; 0x188
   2bc9c:	ldr	r0, [sl, #544]	; 0x220
   2bca0:	str	r0, [r1, #12]
   2bca4:	ldr	r0, [sl, #36]	; 0x24
   2bca8:	cmp	r0, #0
   2bcac:	beq	2c36c <__flatcc_fb_parse@@Base+0x109c>
   2bcb0:	mov	r3, #0
   2bcb4:	mov	r2, r0
   2bcb8:	ldr	r0, [r0]
   2bcbc:	str	r3, [r2]
   2bcc0:	mov	r3, r2
   2bcc4:	cmp	r0, #0
   2bcc8:	bne	2bcb4 <__flatcc_fb_parse@@Base+0x9e4>
   2bccc:	b	2c370 <__flatcc_fb_parse@@Base+0x10a0>
   2bcd0:	mov	r0, sl
   2bcd4:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bcd8:	ldr	r0, [sp, #48]	; 0x30
   2bcdc:	ldrh	r0, [r0]
   2bce0:	cmp	r0, #2
   2bce4:	bne	2bd0c <__flatcc_fb_parse@@Base+0xa3c>
   2bce8:	ldr	r0, [sl, #376]	; 0x178
   2bcec:	ldr	r2, [sl, #380]	; 0x17c
   2bcf0:	ldr	r1, [sl, #40]	; 0x28
   2bcf4:	mov	r3, #0
   2bcf8:	stm	sp, {r0, r2}
   2bcfc:	mov	r0, sl
   2bd00:	ldr	r2, [pc, #4052]	; 2ccdc <__flatcc_fb_parse@@Base+0x1a0c>
   2bd04:	add	r2, pc, r2
   2bd08:	bl	2ac84 <__flatcc_error_report@@Base>
   2bd0c:	ldr	r5, [r4]
   2bd10:	ldr	r0, [r5, #16]
   2bd14:	cmp	r0, #19
   2bd18:	bne	2c144 <__flatcc_fb_parse@@Base+0xe74>
   2bd1c:	mov	r0, sl
   2bd20:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bd24:	cmp	r5, #0
   2bd28:	beq	2ccb8 <__flatcc_fb_parse@@Base+0x19e8>
   2bd2c:	ldr	r1, [sp, #40]	; 0x28
   2bd30:	mov	r0, sl
   2bd34:	bl	32218 <__flatcc_fb_clear_parser@@Base+0x124>
   2bd38:	ldr	r0, [sl, #40]	; 0x28
   2bd3c:	ldr	r1, [r0, #16]
   2bd40:	cmp	r1, #59	; 0x3b
   2bd44:	beq	2d054 <__flatcc_fb_parse@@Base+0x1d84>
   2bd48:	cmp	r0, #0
   2bd4c:	beq	2ced4 <__flatcc_fb_parse@@Base+0x1c04>
   2bd50:	ldr	r2, [r0]
   2bd54:	ldr	r1, [r0, #4]
   2bd58:	ldr	r3, [pc, #4060]	; 2cd3c <__flatcc_fb_parse@@Base+0x1a6c>
   2bd5c:	cmp	r2, #0
   2bd60:	mov	r7, r2
   2bd64:	add	r3, pc, r3
   2bd68:	moveq	r1, r2
   2bd6c:	moveq	r7, r3
   2bd70:	mov	r2, sl
   2bd74:	ldr	r3, [r2, #20]
   2bd78:	cmp	r3, r0
   2bd7c:	bhi	2bd8c <__flatcc_fb_parse@@Base+0xabc>
   2bd80:	ldr	r3, [r2, #24]
   2bd84:	cmp	r3, r0
   2bd88:	bhi	2cfc4 <__flatcc_fb_parse@@Base+0x1cf4>
   2bd8c:	ldr	r2, [r2]
   2bd90:	cmp	r2, #0
   2bd94:	bne	2bd74 <__flatcc_fb_parse@@Base+0xaa4>
   2bd98:	ldr	r2, [pc, #4000]	; 2cd40 <__flatcc_fb_parse@@Base+0x1a70>
   2bd9c:	add	r2, pc, r2
   2bda0:	b	2cfc8 <__flatcc_fb_parse@@Base+0x1cf8>
   2bda4:	mov	r0, sl
   2bda8:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bdac:	ldr	r5, [sl, #52]	; 0x34
   2bdb0:	ldr	r0, [sl, #44]	; 0x2c
   2bdb4:	add	r1, r5, #128	; 0x80
   2bdb8:	cmp	r1, r0
   2bdbc:	bls	2bdfc <__flatcc_fb_parse@@Base+0xb2c>
   2bdc0:	mov	r0, #65536	; 0x10000
   2bdc4:	mov	r1, #1
   2bdc8:	bl	148c8 <calloc@plt>
   2bdcc:	cmp	r0, #0
   2bdd0:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2bdd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bdd8:	mov	r1, r0
   2bddc:	add	r5, r0, #16
   2bde0:	ldr	r2, [r3]
   2bde4:	str	r2, [r1], #144	; 0x90
   2bde8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2bdec:	str	r0, [r3]
   2bdf0:	add	r0, r0, #65536	; 0x10000
   2bdf4:	str	r5, [r6]
   2bdf8:	str	r0, [r2]
   2bdfc:	str	r1, [sl, #52]	; 0x34
   2be00:	mov	r1, #4
   2be04:	ldr	r0, [sl, #392]	; 0x188
   2be08:	strh	r1, [r5, #8]
   2be0c:	str	r0, [r5]
   2be10:	str	r5, [sl, #392]	; 0x188
   2be14:	ldr	r0, [sl, #544]	; 0x220
   2be18:	str	r0, [r5, #12]
   2be1c:	ldr	r0, [sl, #36]	; 0x24
   2be20:	cmp	r0, #0
   2be24:	beq	2c3a0 <__flatcc_fb_parse@@Base+0x10d0>
   2be28:	mov	r2, #0
   2be2c:	mov	r3, #0
   2be30:	mov	r1, r0
   2be34:	ldr	r0, [r0]
   2be38:	str	r2, [r1]
   2be3c:	mov	r2, r1
   2be40:	cmp	r0, #0
   2be44:	bne	2be30 <__flatcc_fb_parse@@Base+0xb60>
   2be48:	b	2c3a8 <__flatcc_fb_parse@@Base+0x10d8>
   2be4c:	mov	r0, sl
   2be50:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2be54:	ldr	r0, [sl, #400]	; 0x190
   2be58:	ldr	r5, [sl, #40]	; 0x28
   2be5c:	cmp	r0, #0
   2be60:	beq	2cbb4 <__flatcc_fb_parse@@Base+0x18e4>
   2be64:	cmp	r5, #0
   2be68:	beq	2c804 <__flatcc_fb_parse@@Base+0x1534>
   2be6c:	ldr	r2, [r5]
   2be70:	ldr	r0, [r5, #4]
   2be74:	ldr	r3, [pc, #4080]	; 2ce6c <__flatcc_fb_parse@@Base+0x1b9c>
   2be78:	cmp	r2, #0
   2be7c:	mov	r1, r2
   2be80:	add	r3, pc, r3
   2be84:	moveq	r0, r2
   2be88:	moveq	r1, r3
   2be8c:	mov	r2, sl
   2be90:	ldr	r3, [r2, #20]
   2be94:	cmp	r3, r5
   2be98:	bhi	2bea8 <__flatcc_fb_parse@@Base+0xbd8>
   2be9c:	ldr	r3, [r2, #24]
   2bea0:	cmp	r3, r5
   2bea4:	bhi	2cb78 <__flatcc_fb_parse@@Base+0x18a8>
   2bea8:	ldr	r2, [r2]
   2beac:	cmp	r2, #0
   2beb0:	bne	2be90 <__flatcc_fb_parse@@Base+0xbc0>
   2beb4:	ldr	r2, [pc, #4020]	; 2ce70 <__flatcc_fb_parse@@Base+0x1ba0>
   2beb8:	add	r2, pc, r2
   2bebc:	b	2cb7c <__flatcc_fb_parse@@Base+0x18ac>
   2bec0:	cmp	r9, #0
   2bec4:	beq	2c780 <__flatcc_fb_parse@@Base+0x14b0>
   2bec8:	ldr	r2, [r9]
   2becc:	ldr	r0, [r9, #4]
   2bed0:	ldr	r3, [pc, #4088]	; 2ced0 <__flatcc_fb_parse@@Base+0x1c00>
   2bed4:	cmp	r2, #0
   2bed8:	mov	r1, r2
   2bedc:	add	r3, pc, r3
   2bee0:	moveq	r0, r2
   2bee4:	moveq	r1, r3
   2bee8:	mov	r2, sl
   2beec:	ldr	r3, [r2, #20]
   2bef0:	cmp	r3, r9
   2bef4:	bhi	2bf04 <__flatcc_fb_parse@@Base+0xc34>
   2bef8:	ldr	r3, [r2, #24]
   2befc:	cmp	r3, r9
   2bf00:	bhi	2c820 <__flatcc_fb_parse@@Base+0x1550>
   2bf04:	ldr	r2, [r2]
   2bf08:	cmp	r2, #0
   2bf0c:	bne	2beec <__flatcc_fb_parse@@Base+0xc1c>
   2bf10:	ldr	r2, [pc, #4076]	; 2cf04 <__flatcc_fb_parse@@Base+0x1c34>
   2bf14:	add	r2, pc, r2
   2bf18:	b	2c824 <__flatcc_fb_parse@@Base+0x1554>
   2bf1c:	mov	r0, sl
   2bf20:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bf24:	ldr	r6, [sl, #52]	; 0x34
   2bf28:	ldr	r0, [sl, #44]	; 0x2c
   2bf2c:	add	r1, r6, #32
   2bf30:	cmp	r1, r0
   2bf34:	bls	2bf78 <__flatcc_fb_parse@@Base+0xca8>
   2bf38:	mov	r0, #65536	; 0x10000
   2bf3c:	mov	r1, #1
   2bf40:	bl	148c8 <calloc@plt>
   2bf44:	cmp	r0, #0
   2bf48:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2bf4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2bf50:	mov	r1, r0
   2bf54:	add	r6, r0, #16
   2bf58:	ldr	r2, [r3]
   2bf5c:	str	r2, [r1], #48	; 0x30
   2bf60:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2bf64:	str	r0, [r3]
   2bf68:	add	r0, r0, #65536	; 0x10000
   2bf6c:	str	r6, [r2]
   2bf70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2bf74:	str	r0, [r2]
   2bf78:	str	r1, [sl, #52]	; 0x34
   2bf7c:	ldr	r0, [sl, #356]	; 0x164
   2bf80:	str	r0, [r6]
   2bf84:	str	r6, [sl, #356]	; 0x164
   2bf88:	ldr	r5, [sl, #40]	; 0x28
   2bf8c:	ldr	r0, [r5, #16]
   2bf90:	cmp	r0, #19
   2bf94:	bne	2c1a0 <__flatcc_fb_parse@@Base+0xed0>
   2bf98:	mov	r0, sl
   2bf9c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2bfa0:	cmp	r5, #0
   2bfa4:	beq	2cd1c <__flatcc_fb_parse@@Base+0x1a4c>
   2bfa8:	add	r1, r6, #8
   2bfac:	mov	r0, sl
   2bfb0:	bl	32218 <__flatcc_fb_clear_parser@@Base+0x124>
   2bfb4:	ldr	r0, [r6, #12]
   2bfb8:	cmp	r0, #0
   2bfbc:	bne	2cd1c <__flatcc_fb_parse@@Base+0x1a4c>
   2bfc0:	ldr	r2, [r5]
   2bfc4:	ldr	r0, [r5, #4]
   2bfc8:	ldr	r3, [pc, #4080]	; 2cfc0 <__flatcc_fb_parse@@Base+0x1cf0>
   2bfcc:	cmp	r2, #0
   2bfd0:	mov	r1, r2
   2bfd4:	add	r3, pc, r3
   2bfd8:	moveq	r0, r2
   2bfdc:	moveq	r1, r3
   2bfe0:	mov	r2, sl
   2bfe4:	ldr	r3, [r2, #20]
   2bfe8:	cmp	r3, r5
   2bfec:	bhi	2bffc <__flatcc_fb_parse@@Base+0xd2c>
   2bff0:	ldr	r3, [r2, #24]
   2bff4:	cmp	r3, r5
   2bff8:	bhi	2cf64 <__flatcc_fb_parse@@Base+0x1c94>
   2bffc:	ldr	r2, [r2]
   2c000:	cmp	r2, #0
   2c004:	bne	2bfe4 <__flatcc_fb_parse@@Base+0xd14>
   2c008:	ldr	r2, [pc, #4080]	; 2d000 <__flatcc_fb_parse@@Base+0x1d30>
   2c00c:	add	r2, pc, r2
   2c010:	b	2cf68 <__flatcc_fb_parse@@Base+0x1c98>
   2c014:	mov	r0, sl
   2c018:	cmp	r9, #0
   2c01c:	beq	2c7c4 <__flatcc_fb_parse@@Base+0x14f4>
   2c020:	ldr	r1, [r0, #20]
   2c024:	cmp	r1, r9
   2c028:	bhi	2c038 <__flatcc_fb_parse@@Base+0xd68>
   2c02c:	ldr	r1, [r0, #24]
   2c030:	cmp	r1, r9
   2c034:	bhi	2c890 <__flatcc_fb_parse@@Base+0x15c0>
   2c038:	ldr	r0, [r0]
   2c03c:	cmp	r0, #0
   2c040:	bne	2c020 <__flatcc_fb_parse@@Base+0xd50>
   2c044:	ldr	r2, [pc, #4024]	; 2d004 <__flatcc_fb_parse@@Base+0x1d34>
   2c048:	add	r2, pc, r2
   2c04c:	b	2c894 <__flatcc_fb_parse@@Base+0x15c4>
   2c050:	mov	r0, sl
   2c054:	cmp	r9, #0
   2c058:	beq	2c7d8 <__flatcc_fb_parse@@Base+0x1508>
   2c05c:	ldr	r1, [r0, #20]
   2c060:	cmp	r1, r9
   2c064:	bhi	2c074 <__flatcc_fb_parse@@Base+0xda4>
   2c068:	ldr	r1, [r0, #24]
   2c06c:	cmp	r1, r9
   2c070:	bhi	2c8c0 <__flatcc_fb_parse@@Base+0x15f0>
   2c074:	ldr	r0, [r0]
   2c078:	cmp	r0, #0
   2c07c:	bne	2c05c <__flatcc_fb_parse@@Base+0xd8c>
   2c080:	ldr	r2, [pc, #4056]	; 2d060 <__flatcc_fb_parse@@Base+0x1d90>
   2c084:	add	r2, pc, r2
   2c088:	b	2c8c4 <__flatcc_fb_parse@@Base+0x15f4>
   2c08c:	cmp	r9, #0
   2c090:	beq	2c7ec <__flatcc_fb_parse@@Base+0x151c>
   2c094:	ldr	r2, [r9]
   2c098:	ldr	r0, [r9, #4]
   2c09c:	ldr	r3, [pc, #4032]	; 2d064 <__flatcc_fb_parse@@Base+0x1d94>
   2c0a0:	cmp	r2, #0
   2c0a4:	mov	r1, r2
   2c0a8:	add	r3, pc, r3
   2c0ac:	moveq	r0, r2
   2c0b0:	moveq	r1, r3
   2c0b4:	mov	r2, sl
   2c0b8:	ldr	r3, [r2, #20]
   2c0bc:	cmp	r3, r9
   2c0c0:	bhi	2c0d0 <__flatcc_fb_parse@@Base+0xe00>
   2c0c4:	ldr	r3, [r2, #24]
   2c0c8:	cmp	r3, r9
   2c0cc:	bhi	2c8f0 <__flatcc_fb_parse@@Base+0x1620>
   2c0d0:	ldr	r2, [r2]
   2c0d4:	cmp	r2, #0
   2c0d8:	bne	2c0b8 <__flatcc_fb_parse@@Base+0xde8>
   2c0dc:	ldr	r2, [pc, #4092]	; 2d0e0 <__flatcc_fb_parse@@Base+0x1e10>
   2c0e0:	add	r2, pc, r2
   2c0e4:	b	2c8f4 <__flatcc_fb_parse@@Base+0x1624>
   2c0e8:	cmp	r5, #0
   2c0ec:	beq	2c9bc <__flatcc_fb_parse@@Base+0x16ec>
   2c0f0:	ldr	r2, [r5]
   2c0f4:	ldr	r0, [r5, #4]
   2c0f8:	ldr	r3, [pc, #4068]	; 2d0e4 <__flatcc_fb_parse@@Base+0x1e14>
   2c0fc:	cmp	r2, #0
   2c100:	mov	r1, r2
   2c104:	add	r3, pc, r3
   2c108:	moveq	r0, r2
   2c10c:	moveq	r1, r3
   2c110:	mov	r2, sl
   2c114:	ldr	r3, [r2, #20]
   2c118:	cmp	r3, r5
   2c11c:	bhi	2c12c <__flatcc_fb_parse@@Base+0xe5c>
   2c120:	ldr	r3, [r2, #24]
   2c124:	cmp	r3, r5
   2c128:	bhi	2cc1c <__flatcc_fb_parse@@Base+0x194c>
   2c12c:	ldr	r2, [r2]
   2c130:	cmp	r2, #0
   2c134:	bne	2c114 <__flatcc_fb_parse@@Base+0xe44>
   2c138:	ldr	r2, [pc, #4080]	; 2d130 <__flatcc_fb_parse@@Base+0x1e60>
   2c13c:	add	r2, pc, r2
   2c140:	b	2cc20 <__flatcc_fb_parse@@Base+0x1950>
   2c144:	cmp	r5, #0
   2c148:	beq	2c9d8 <__flatcc_fb_parse@@Base+0x1708>
   2c14c:	ldr	r2, [r5]
   2c150:	ldr	r0, [r5, #4]
   2c154:	ldr	r3, [pc, #4084]	; 2d150 <__flatcc_fb_parse@@Base+0x1e80>
   2c158:	cmp	r2, #0
   2c15c:	mov	r1, r2
   2c160:	add	r3, pc, r3
   2c164:	moveq	r0, r2
   2c168:	moveq	r1, r3
   2c16c:	mov	r2, sl
   2c170:	ldr	r3, [r2, #20]
   2c174:	cmp	r3, r5
   2c178:	bhi	2c188 <__flatcc_fb_parse@@Base+0xeb8>
   2c17c:	ldr	r3, [r2, #24]
   2c180:	cmp	r3, r5
   2c184:	bhi	2cc7c <__flatcc_fb_parse@@Base+0x19ac>
   2c188:	ldr	r2, [r2]
   2c18c:	cmp	r2, #0
   2c190:	bne	2c170 <__flatcc_fb_parse@@Base+0xea0>
   2c194:	ldr	r2, [pc, #4052]	; 2d170 <__flatcc_fb_parse@@Base+0x1ea0>
   2c198:	add	r2, pc, r2
   2c19c:	b	2cc80 <__flatcc_fb_parse@@Base+0x19b0>
   2c1a0:	cmp	r5, #0
   2c1a4:	beq	2ca30 <__flatcc_fb_parse@@Base+0x1760>
   2c1a8:	ldr	r2, [r5]
   2c1ac:	ldr	r0, [r5, #4]
   2c1b0:	ldr	r3, [pc, #4088]	; 2d1b0 <__flatcc_fb_parse@@Base+0x1ee0>
   2c1b4:	cmp	r2, #0
   2c1b8:	mov	r1, r2
   2c1bc:	add	r3, pc, r3
   2c1c0:	moveq	r0, r2
   2c1c4:	moveq	r1, r3
   2c1c8:	mov	r2, sl
   2c1cc:	ldr	r3, [r2, #20]
   2c1d0:	cmp	r3, r5
   2c1d4:	bhi	2c1e4 <__flatcc_fb_parse@@Base+0xf14>
   2c1d8:	ldr	r3, [r2, #24]
   2c1dc:	cmp	r3, r5
   2c1e0:	bhi	2cce0 <__flatcc_fb_parse@@Base+0x1a10>
   2c1e4:	ldr	r2, [r2]
   2c1e8:	cmp	r2, #0
   2c1ec:	bne	2c1cc <__flatcc_fb_parse@@Base+0xefc>
   2c1f0:	ldr	r2, [pc, #4080]	; 2d1e8 <__flatcc_fb_parse@@Base+0x1f18>
   2c1f4:	add	r2, pc, r2
   2c1f8:	b	2cce4 <__flatcc_fb_parse@@Base+0x1a14>
   2c1fc:	andeq	ip, r2, r2, lsr #12
   2c200:	mov	r1, #0
   2c204:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2c208:	str	r1, [r6, #32]
   2c20c:	mov	r1, #0
   2c210:	str	r1, [r0]
   2c214:	ldr	r5, [r4]
   2c218:	ldr	r0, [r5, #16]
   2c21c:	cmp	r0, #9
   2c220:	bne	2c2f0 <__flatcc_fb_parse@@Base+0x1020>
   2c224:	mov	r0, sl
   2c228:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c22c:	cmp	r5, #0
   2c230:	str	r5, [r6, #4]
   2c234:	beq	2d6cc <__flatcc_fb_parse@@Base+0x23fc>
   2c238:	ldr	r5, [r4]
   2c23c:	ldr	r0, [r5, #16]
   2c240:	cmp	r0, #58	; 0x3a
   2c244:	bne	2d3cc <__flatcc_fb_parse@@Base+0x20fc>
   2c248:	mov	r0, sl
   2c24c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c250:	cmp	r5, #0
   2c254:	beq	2d3cc <__flatcc_fb_parse@@Base+0x20fc>
   2c258:	add	r1, r6, #40	; 0x28
   2c25c:	mov	r0, sl
   2c260:	bl	33b0c <__flatcc_fb_clear_parser@@Base+0x1a18>
   2c264:	ldrh	r1, [r6, #48]	; 0x30
   2c268:	ldr	r0, [r6, #40]	; 0x28
   2c26c:	cmp	r1, #8
   2c270:	bne	2cf08 <__flatcc_fb_parse@@Base+0x1c38>
   2c274:	ldr	r1, [r0, #16]
   2c278:	add	r1, r1, #996	; 0x3e4
   2c27c:	cmp	r1, #21
   2c280:	bhi	2d3cc <__flatcc_fb_parse@@Base+0x20fc>
   2c284:	movw	r3, #2051	; 0x803
   2c288:	mov	r2, #1
   2c28c:	movt	r3, #32
   2c290:	tst	r3, r2, lsl r1
   2c294:	beq	2d3cc <__flatcc_fb_parse@@Base+0x20fc>
   2c298:	ldr	r2, [r0]
   2c29c:	ldr	r1, [r0, #4]
   2c2a0:	ldr	r3, [pc, #4052]	; 2d27c <__flatcc_fb_parse@@Base+0x1fac>
   2c2a4:	cmp	r2, #0
   2c2a8:	mov	r7, r2
   2c2ac:	add	r3, pc, r3
   2c2b0:	moveq	r1, r2
   2c2b4:	moveq	r7, r3
   2c2b8:	mov	r2, sl
   2c2bc:	ldr	r3, [r2, #20]
   2c2c0:	cmp	r3, r0
   2c2c4:	bhi	2c2d4 <__flatcc_fb_parse@@Base+0x1004>
   2c2c8:	ldr	r3, [r2, #24]
   2c2cc:	cmp	r3, r0
   2c2d0:	bhi	2d174 <__flatcc_fb_parse@@Base+0x1ea4>
   2c2d4:	ldr	r2, [r2]
   2c2d8:	cmp	r2, #0
   2c2dc:	bne	2c2bc <__flatcc_fb_parse@@Base+0xfec>
   2c2e0:	ldr	r2, [pc, #4060]	; 2d2c4 <__flatcc_fb_parse@@Base+0x1ff4>
   2c2e4:	add	r2, pc, r2
   2c2e8:	b	2d178 <__flatcc_fb_parse@@Base+0x1ea8>
   2c2ec:	andeq	sp, r2, r2, asr #26
   2c2f0:	cmp	r5, #0
   2c2f4:	beq	2c9f4 <__flatcc_fb_parse@@Base+0x1724>
   2c2f8:	ldr	r2, [r5]
   2c2fc:	ldr	r0, [r5, #4]
   2c300:	ldr	r3, [pc, #4032]	; 2d2c8 <__flatcc_fb_parse@@Base+0x1ff8>
   2c304:	cmp	r2, #0
   2c308:	mov	r1, r2
   2c30c:	add	r3, pc, r3
   2c310:	moveq	r0, r2
   2c314:	moveq	r1, r3
   2c318:	mov	r2, sl
   2c31c:	ldr	r3, [r2, #20]
   2c320:	cmp	r3, r5
   2c324:	bhi	2c334 <__flatcc_fb_parse@@Base+0x1064>
   2c328:	ldr	r3, [r2, #24]
   2c32c:	cmp	r3, r5
   2c330:	bhi	2cdbc <__flatcc_fb_parse@@Base+0x1aec>
   2c334:	ldr	r2, [r2]
   2c338:	cmp	r2, #0
   2c33c:	bne	2c31c <__flatcc_fb_parse@@Base+0x104c>
   2c340:	ldr	r2, [pc, #3972]	; 2d2cc <__flatcc_fb_parse@@Base+0x1ffc>
   2c344:	add	r2, pc, r2
   2c348:	b	2cdc0 <__flatcc_fb_parse@@Base+0x1af0>
   2c34c:	mov	r2, #0
   2c350:	mov	r0, #0
   2c354:	str	r2, [r1, #32]
   2c358:	str	r0, [sl, #36]	; 0x24
   2c35c:	movw	r0, #64565	; 0xfc35
   2c360:	movt	r0, #65535	; 0xffff
   2c364:	add	r2, r0, #4
   2c368:	b	2c380 <__flatcc_fb_parse@@Base+0x10b0>
   2c36c:	mov	r2, #0
   2c370:	mov	r0, #0
   2c374:	str	r2, [r1, #32]
   2c378:	mvn	r2, #972	; 0x3cc
   2c37c:	str	r0, [sl, #36]	; 0x24
   2c380:	mov	r0, sl
   2c384:	bl	32504 <__flatcc_fb_clear_parser@@Base+0x410>
   2c388:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2c38c:	andeq	r5, r1, r2, lsr r4
   2c390:	ldrdeq	ip, [r2], -r1
   2c394:	andeq	ip, r2, ip, asr r5
   2c398:	andeq	ip, r2, r8, lsr r5
   2c39c:	andeq	ip, r2, r7, asr #4
   2c3a0:	mov	r1, #0
   2c3a4:	mov	r3, #0
   2c3a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2c3ac:	str	r1, [r5, #32]
   2c3b0:	str	r3, [r0]
   2c3b4:	ldr	r6, [r4]
   2c3b8:	ldr	r0, [r6, #16]
   2c3bc:	cmp	r0, #9
   2c3c0:	bne	2c724 <__flatcc_fb_parse@@Base+0x1454>
   2c3c4:	mov	r0, sl
   2c3c8:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c3cc:	str	r6, [r5, #4]
   2c3d0:	cmp	r6, #0
   2c3d4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2c3d8:	beq	2d288 <__flatcc_fb_parse@@Base+0x1fb8>
   2c3dc:	mov	r0, sl
   2c3e0:	bl	33218 <__flatcc_fb_clear_parser@@Base+0x1124>
   2c3e4:	str	r0, [r5, #28]
   2c3e8:	ldr	r7, [sl, #40]	; 0x28
   2c3ec:	ldr	r0, [r7, #16]
   2c3f0:	cmp	r0, #123	; 0x7b
   2c3f4:	bne	2cb1c <__flatcc_fb_parse@@Base+0x184c>
   2c3f8:	mov	r0, sl
   2c3fc:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c400:	cmp	r7, #0
   2c404:	beq	2d288 <__flatcc_fb_parse@@Base+0x1fb8>
   2c408:	ldr	r0, [r4]
   2c40c:	str	r7, [sp, #24]
   2c410:	str	r0, [sp, #28]
   2c414:	ldr	r0, [r0, #16]
   2c418:	cmp	r0, #9
   2c41c:	bne	2c6c4 <__flatcc_fb_parse@@Base+0x13f4>
   2c420:	ldr	r0, [r8]
   2c424:	cmp	r0, #9
   2c428:	bgt	2d288 <__flatcc_fb_parse@@Base+0x1fb8>
   2c42c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2c430:	mov	r3, r6
   2c434:	ldr	r6, [r6]
   2c438:	ldr	r0, [r0]
   2c43c:	add	r1, r6, #128	; 0x80
   2c440:	cmp	r1, r0
   2c444:	bls	2c488 <__flatcc_fb_parse@@Base+0x11b8>
   2c448:	mov	r0, #65536	; 0x10000
   2c44c:	mov	r1, #1
   2c450:	bl	148c8 <calloc@plt>
   2c454:	cmp	r0, #0
   2c458:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2c45c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c460:	mov	r1, r0
   2c464:	add	r6, r0, #16
   2c468:	ldr	r2, [r3]
   2c46c:	str	r2, [r1], #144	; 0x90
   2c470:	str	r0, [r3]
   2c474:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c478:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2c47c:	add	r0, r0, #65536	; 0x10000
   2c480:	str	r6, [r3]
   2c484:	str	r0, [r2]
   2c488:	str	r1, [r3]
   2c48c:	mov	r1, #5
   2c490:	ldr	r0, [r5, #20]
   2c494:	strh	r1, [r6, #8]
   2c498:	str	r0, [r6]
   2c49c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2c4a0:	str	r6, [r5, #20]
   2c4a4:	ldr	r0, [r0]
   2c4a8:	cmp	r0, #0
   2c4ac:	beq	2c4e0 <__flatcc_fb_parse@@Base+0x1210>
   2c4b0:	mov	r2, #0
   2c4b4:	mov	r1, r0
   2c4b8:	ldr	r0, [r0]
   2c4bc:	str	r2, [r1]
   2c4c0:	mov	r2, r1
   2c4c4:	cmp	r0, #0
   2c4c8:	bne	2c4b4 <__flatcc_fb_parse@@Base+0x11e4>
   2c4cc:	b	2c4e4 <__flatcc_fb_parse@@Base+0x1214>
   2c4d0:	strdeq	ip, [r2], -sp
   2c4d4:	andeq	ip, r2, r0, asr #9
   2c4d8:	muleq	r2, ip, r4
   2c4dc:	andeq	ip, r2, r3, ror r1
   2c4e0:	mov	r1, #0
   2c4e4:	mov	r0, #0
   2c4e8:	str	r1, [r6, #68]	; 0x44
   2c4ec:	sub	r1, fp, #32
   2c4f0:	str	r0, [sl, #36]	; 0x24
   2c4f4:	mov	r0, sl
   2c4f8:	bl	33098 <__flatcc_fb_clear_parser@@Base+0xfa4>
   2c4fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c500:	mov	r1, #12
   2c504:	strh	r1, [r6, #24]
   2c508:	str	r0, [r6, #16]
   2c50c:	ldr	r1, [r0]
   2c510:	cmp	r1, #0
   2c514:	beq	2c52c <__flatcc_fb_parse@@Base+0x125c>
   2c518:	mov	r0, r1
   2c51c:	ldr	r1, [r1]
   2c520:	cmp	r1, #0
   2c524:	bne	2c518 <__flatcc_fb_parse@@Base+0x1248>
   2c528:	str	r0, [fp, #-32]	; 0xffffffe0
   2c52c:	ldr	r0, [r0, #4]
   2c530:	str	r0, [r6, #4]
   2c534:	ldr	r7, [r4]
   2c538:	ldr	r0, [r7, #16]
   2c53c:	cmp	r0, #58	; 0x3a
   2c540:	bne	2c644 <__flatcc_fb_parse@@Base+0x1374>
   2c544:	mov	r0, sl
   2c548:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c54c:	cmp	r7, #0
   2c550:	beq	2c63c <__flatcc_fb_parse@@Base+0x136c>
   2c554:	add	r1, r6, #16
   2c558:	ldr	r0, [r1]
   2c55c:	ldr	r0, [r0]
   2c560:	cmp	r0, #0
   2c564:	beq	2c634 <__flatcc_fb_parse@@Base+0x1364>
   2c568:	ldr	r7, [sp, #28]
   2c56c:	str	r1, [sp, #20]
   2c570:	cmp	r7, #0
   2c574:	beq	2c5c8 <__flatcc_fb_parse@@Base+0x12f8>
   2c578:	ldm	r7, {r2, ip}
   2c57c:	ldr	r3, [pc, #3916]	; 2d4d0 <__flatcc_fb_parse@@Base+0x2200>
   2c580:	cmp	r2, #0
   2c584:	mov	r0, r2
   2c588:	add	r3, pc, r3
   2c58c:	moveq	ip, r2
   2c590:	moveq	r0, r3
   2c594:	mov	r2, sl
   2c598:	ldr	r3, [r2, #20]
   2c59c:	cmp	r3, r7
   2c5a0:	bhi	2c5b0 <__flatcc_fb_parse@@Base+0x12e0>
   2c5a4:	ldr	r3, [r2, #24]
   2c5a8:	cmp	r3, r7
   2c5ac:	bhi	2c5f4 <__flatcc_fb_parse@@Base+0x1324>
   2c5b0:	ldr	r2, [r2]
   2c5b4:	cmp	r2, #0
   2c5b8:	bne	2c598 <__flatcc_fb_parse@@Base+0x12c8>
   2c5bc:	ldr	r2, [pc, #3856]	; 2d4d4 <__flatcc_fb_parse@@Base+0x2204>
   2c5c0:	add	r2, pc, r2
   2c5c4:	b	2c5f8 <__flatcc_fb_parse@@Base+0x1328>
   2c5c8:	ldr	r1, [pc, #4088]	; 2d5c8 <__flatcc_fb_parse@@Base+0x22f8>
   2c5cc:	ldr	r2, [pc, #4088]	; 2d5cc <__flatcc_fb_parse@@Base+0x22fc>
   2c5d0:	mov	r0, sl
   2c5d4:	add	r1, pc, r1
   2c5d8:	add	r2, pc, r2
   2c5dc:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2c5e0:	b	2c624 <__flatcc_fb_parse@@Base+0x1354>
   2c5e4:	muleq	r2, r9, r0
   2c5e8:	andeq	ip, r2, sl, lsl #7
   2c5ec:	andeq	ip, r2, sl, asr #6
   2c5f0:	strdeq	fp, [r2], -r3
   2c5f4:	ldr	r2, [r2, #520]	; 0x208
   2c5f8:	ldr	r3, [r7, #8]
   2c5fc:	ldr	r7, [r7, #12]
   2c600:	stm	sp, {r7, ip}
   2c604:	str	r0, [sp, #8]
   2c608:	ldr	r0, [pc, #4032]	; 2d5d0 <__flatcc_fb_parse@@Base+0x2300>
   2c60c:	add	r0, pc, r0
   2c610:	str	r0, [sp, #12]
   2c614:	mov	r0, sl
   2c618:	ldr	r1, [pc, #4020]	; 2d5d4 <__flatcc_fb_parse@@Base+0x2304>
   2c61c:	add	r1, pc, r1
   2c620:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2c624:	ldr	r0, [r8]
   2c628:	ldr	r1, [sp, #20]
   2c62c:	add	r0, r0, #1
   2c630:	str	r0, [r8]
   2c634:	mov	r0, sl
   2c638:	bl	33b0c <__flatcc_fb_clear_parser@@Base+0x1a18>
   2c63c:	ldr	r7, [r4]
   2c640:	ldr	r0, [r7, #16]
   2c644:	cmp	r0, #61	; 0x3d
   2c648:	bne	2c674 <__flatcc_fb_parse@@Base+0x13a4>
   2c64c:	mov	r0, sl
   2c650:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c654:	cmp	r7, #0
   2c658:	beq	2c674 <__flatcc_fb_parse@@Base+0x13a4>
   2c65c:	ldr	r3, [pc, #4072]	; 2d64c <__flatcc_fb_parse@@Base+0x237c>
   2c660:	add	r1, r6, #48	; 0x30
   2c664:	mov	r0, sl
   2c668:	mov	r2, #0
   2c66c:	add	r3, pc, r3
   2c670:	bl	334d4 <__flatcc_fb_clear_parser@@Base+0x13e0>
   2c674:	ldr	r6, [r4]
   2c678:	ldr	r0, [r6, #16]
   2c67c:	cmp	r0, #44	; 0x2c
   2c680:	bne	2d1b4 <__flatcc_fb_parse@@Base+0x1ee4>
   2c684:	mov	r0, sl
   2c688:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c68c:	ldr	r0, [sl, #40]	; 0x28
   2c690:	ldr	r7, [sp, #24]
   2c694:	cmp	r6, #0
   2c698:	str	r0, [sp, #28]
   2c69c:	ldr	r0, [r0, #16]
   2c6a0:	beq	2d1c4 <__flatcc_fb_parse@@Base+0x1ef4>
   2c6a4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2c6a8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2c6ac:	mov	r2, #0
   2c6b0:	cmp	r0, #9
   2c6b4:	str	r2, [r1]
   2c6b8:	beq	2c420 <__flatcc_fb_parse@@Base+0x1150>
   2c6bc:	cmp	r0, #125	; 0x7d
   2c6c0:	beq	2d1dc <__flatcc_fb_parse@@Base+0x1f0c>
   2c6c4:	ldr	r7, [sp, #28]
   2c6c8:	cmp	r7, #0
   2c6cc:	beq	2d134 <__flatcc_fb_parse@@Base+0x1e64>
   2c6d0:	ldr	r2, [r7]
   2c6d4:	ldr	r0, [r7, #4]
   2c6d8:	ldr	r3, [pc, #4012]	; 2d68c <__flatcc_fb_parse@@Base+0x23bc>
   2c6dc:	cmp	r2, #0
   2c6e0:	mov	r1, r2
   2c6e4:	add	r3, pc, r3
   2c6e8:	moveq	r0, r2
   2c6ec:	moveq	r1, r3
   2c6f0:	mov	r2, sl
   2c6f4:	ldr	r3, [r2, #20]
   2c6f8:	cmp	r3, r7
   2c6fc:	bhi	2c70c <__flatcc_fb_parse@@Base+0x143c>
   2c700:	ldr	r3, [r2, #24]
   2c704:	cmp	r3, r7
   2c708:	bhi	2d23c <__flatcc_fb_parse@@Base+0x1f6c>
   2c70c:	ldr	r2, [r2]
   2c710:	cmp	r2, #0
   2c714:	bne	2c6f4 <__flatcc_fb_parse@@Base+0x1424>
   2c718:	ldr	r2, [pc, #4068]	; 2d704 <__flatcc_fb_parse@@Base+0x2434>
   2c71c:	add	r2, pc, r2
   2c720:	b	2d240 <__flatcc_fb_parse@@Base+0x1f70>
   2c724:	cmp	r6, #0
   2c728:	beq	2ca10 <__flatcc_fb_parse@@Base+0x1740>
   2c72c:	ldr	r2, [r6]
   2c730:	ldr	r0, [r6, #4]
   2c734:	ldr	r3, [pc, #4084]	; 2d730 <__flatcc_fb_parse@@Base+0x2460>
   2c738:	cmp	r2, #0
   2c73c:	mov	r1, r2
   2c740:	add	r3, pc, r3
   2c744:	moveq	r0, r2
   2c748:	moveq	r1, r3
   2c74c:	mov	r2, sl
   2c750:	ldr	r3, [r2, #20]
   2c754:	cmp	r3, r6
   2c758:	bhi	2c768 <__flatcc_fb_parse@@Base+0x1498>
   2c75c:	ldr	r3, [r2, #24]
   2c760:	cmp	r3, r6
   2c764:	bhi	2ce04 <__flatcc_fb_parse@@Base+0x1b34>
   2c768:	ldr	r2, [r2]
   2c76c:	cmp	r2, #0
   2c770:	bne	2c750 <__flatcc_fb_parse@@Base+0x1480>
   2c774:	ldr	r2, [pc, #4024]	; 2d734 <__flatcc_fb_parse@@Base+0x2464>
   2c778:	add	r2, pc, r2
   2c77c:	b	2ce08 <__flatcc_fb_parse@@Base+0x1b38>
   2c780:	ldr	r1, [pc, #4092]	; 2d784 <__flatcc_fb_parse@@Base+0x24b4>
   2c784:	ldr	r2, [pc, #4092]	; 2d788 <__flatcc_fb_parse@@Base+0x24b8>
   2c788:	mov	r0, sl
   2c78c:	add	r1, pc, r1
   2c790:	add	r2, pc, r2
   2c794:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2c798:	ldr	r1, [pc, #4092]	; 2d79c <__flatcc_fb_parse@@Base+0x24cc>
   2c79c:	ldr	r2, [pc, #4092]	; 2d7a0 <__flatcc_fb_parse@@Base+0x24d0>
   2c7a0:	add	r1, pc, r1
   2c7a4:	add	r2, pc, r2
   2c7a8:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2c7ac:	ldr	r1, [pc, #4080]	; 2d7a4 <__flatcc_fb_parse@@Base+0x24d4>
   2c7b0:	ldr	r2, [pc, #4080]	; 2d7a8 <__flatcc_fb_parse@@Base+0x24d8>
   2c7b4:	mov	r0, sl
   2c7b8:	add	r1, pc, r1
   2c7bc:	add	r2, pc, r2
   2c7c0:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2c7c4:	ldr	r1, [pc, #4064]	; 2d7ac <__flatcc_fb_parse@@Base+0x24dc>
   2c7c8:	ldr	r2, [pc, #4064]	; 2d7b0 <__flatcc_fb_parse@@Base+0x24e0>
   2c7cc:	add	r1, pc, r1
   2c7d0:	add	r2, pc, r2
   2c7d4:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2c7d8:	ldr	r1, [pc, #4052]	; 2d7b4 <__flatcc_fb_parse@@Base+0x24e4>
   2c7dc:	ldr	r2, [pc, #4052]	; 2d7b8 <__flatcc_fb_parse@@Base+0x24e8>
   2c7e0:	add	r1, pc, r1
   2c7e4:	add	r2, pc, r2
   2c7e8:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2c7ec:	ldr	r1, [pc, #4040]	; 2d7bc <__flatcc_fb_parse@@Base+0x24ec>
   2c7f0:	ldr	r2, [pc, #4040]	; 2d7c0 <__flatcc_fb_parse@@Base+0x24f0>
   2c7f4:	mov	r0, sl
   2c7f8:	add	r1, pc, r1
   2c7fc:	add	r2, pc, r2
   2c800:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2c804:	ldr	r1, [pc, #4024]	; 2d7c4 <__flatcc_fb_parse@@Base+0x24f4>
   2c808:	ldr	r2, [pc, #4024]	; 2d7c8 <__flatcc_fb_parse@@Base+0x24f8>
   2c80c:	mov	r0, sl
   2c810:	add	r1, pc, r1
   2c814:	add	r2, pc, r2
   2c818:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2c81c:	b	2cba8 <__flatcc_fb_parse@@Base+0x18d8>
   2c820:	ldr	r2, [r2, #520]	; 0x208
   2c824:	ldr	r7, [r9, #12]
   2c828:	ldr	r3, [r9, #8]
   2c82c:	str	r7, [sp]
   2c830:	stmib	sp, {r0, r1}
   2c834:	ldr	r0, [pc, #4092]	; 2d838 <__flatcc_fb_parse@@Base+0x2568>
   2c838:	add	r0, pc, r0
   2c83c:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2c840:	ldr	r2, [r0, #520]	; 0x208
   2c844:	ldr	r0, [r9, #12]
   2c848:	ldr	r3, [r9, #8]
   2c84c:	str	r0, [sp]
   2c850:	mov	r0, #1
   2c854:	str	r0, [sp, #4]
   2c858:	ldr	r0, [pc, #4080]	; 2d850 <__flatcc_fb_parse@@Base+0x2580>
   2c85c:	add	r0, pc, r0
   2c860:	str	r0, [sp, #8]
   2c864:	ldr	r0, [pc, #4072]	; 2d854 <__flatcc_fb_parse@@Base+0x2584>
   2c868:	add	r0, pc, r0
   2c86c:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2c870:	ldr	r2, [r2, #520]	; 0x208
   2c874:	ldr	r7, [r9, #12]
   2c878:	ldr	r3, [r9, #8]
   2c87c:	str	r7, [sp]
   2c880:	stmib	sp, {r0, r1}
   2c884:	ldr	r0, [pc, #4044]	; 2d858 <__flatcc_fb_parse@@Base+0x2588>
   2c888:	add	r0, pc, r0
   2c88c:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2c890:	ldr	r2, [r0, #520]	; 0x208
   2c894:	ldr	r0, [r9, #12]
   2c898:	ldr	r3, [r9, #8]
   2c89c:	str	r0, [sp]
   2c8a0:	mov	r0, #1
   2c8a4:	str	r0, [sp, #4]
   2c8a8:	ldr	r0, [pc, #4012]	; 2d85c <__flatcc_fb_parse@@Base+0x258c>
   2c8ac:	add	r0, pc, r0
   2c8b0:	str	r0, [sp, #8]
   2c8b4:	ldr	r0, [pc, #4088]	; 2d8b4 <__flatcc_fb_parse@@Base+0x25e4>
   2c8b8:	add	r0, pc, r0
   2c8bc:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2c8c0:	ldr	r2, [r0, #520]	; 0x208
   2c8c4:	ldr	r0, [r9, #12]
   2c8c8:	ldr	r3, [r9, #8]
   2c8cc:	str	r0, [sp]
   2c8d0:	mov	r0, #5
   2c8d4:	str	r0, [sp, #4]
   2c8d8:	ldr	r0, [pc, #4084]	; 2d8d4 <__flatcc_fb_parse@@Base+0x2604>
   2c8dc:	add	r0, pc, r0
   2c8e0:	str	r0, [sp, #8]
   2c8e4:	ldr	r0, [pc, #4076]	; 2d8d8 <__flatcc_fb_parse@@Base+0x2608>
   2c8e8:	add	r0, pc, r0
   2c8ec:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2c8f0:	ldr	r2, [r2, #520]	; 0x208
   2c8f4:	ldr	r7, [r9, #12]
   2c8f8:	ldr	r3, [r9, #8]
   2c8fc:	str	r7, [sp]
   2c900:	stmib	sp, {r0, r1}
   2c904:	ldr	r0, [pc, #4048]	; 2d8dc <__flatcc_fb_parse@@Base+0x260c>
   2c908:	add	r0, pc, r0
   2c90c:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2c910:	ldrdeq	r4, [r1], -r6
   2c914:	ldr	r0, [r4]
   2c918:	ldr	r1, [r0, #16]
   2c91c:	cmp	r1, #9
   2c920:	bne	2c95c <__flatcc_fb_parse@@Base+0x168c>
   2c924:	mov	r0, sl
   2c928:	sub	r1, fp, #36	; 0x24
   2c92c:	bl	33098 <__flatcc_fb_clear_parser@@Base+0xfa4>
   2c930:	mov	r2, #0
   2c934:	str	r2, [sl, #36]	; 0x24
   2c938:	ldr	r1, [sl, #40]	; 0x28
   2c93c:	ldr	r0, [r1, #16]
   2c940:	cmp	r0, #59	; 0x3b
   2c944:	bne	2ca50 <__flatcc_fb_parse@@Base+0x1780>
   2c948:	mov	r0, sl
   2c94c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2c950:	b	2ca6c <__flatcc_fb_parse@@Base+0x179c>
   2c954:	andeq	r4, r1, r2, lsr #29
   2c958:	andeq	r4, r1, sl, ror #28
   2c95c:	cmp	r0, #0
   2c960:	beq	2cc00 <__flatcc_fb_parse@@Base+0x1930>
   2c964:	ldr	r2, [r0]
   2c968:	ldr	r1, [r0, #4]
   2c96c:	ldr	r3, [pc, #4068]	; 2d958 <__flatcc_fb_parse@@Base+0x2688>
   2c970:	cmp	r2, #0
   2c974:	mov	r7, r2
   2c978:	add	r3, pc, r3
   2c97c:	moveq	r1, r2
   2c980:	moveq	r7, r3
   2c984:	mov	r2, sl
   2c988:	ldr	r3, [r2, #20]
   2c98c:	cmp	r3, r0
   2c990:	bhi	2c9a0 <__flatcc_fb_parse@@Base+0x16d0>
   2c994:	ldr	r3, [r2, #24]
   2c998:	cmp	r3, r0
   2c99c:	bhi	2ce74 <__flatcc_fb_parse@@Base+0x1ba4>
   2c9a0:	ldr	r2, [r2]
   2c9a4:	cmp	r2, #0
   2c9a8:	bne	2c988 <__flatcc_fb_parse@@Base+0x16b8>
   2c9ac:	ldr	r2, [pc, #4008]	; 2d95c <__flatcc_fb_parse@@Base+0x268c>
   2c9b0:	add	r2, pc, r2
   2c9b4:	b	2ce78 <__flatcc_fb_parse@@Base+0x1ba8>
   2c9b8:	andeq	ip, r2, r0, lsl r3
   2c9bc:	ldr	r1, [pc, #4056]	; 2d99c <__flatcc_fb_parse@@Base+0x26cc>
   2c9c0:	ldr	r2, [pc, #4056]	; 2d9a0 <__flatcc_fb_parse@@Base+0x26d0>
   2c9c4:	mov	r0, sl
   2c9c8:	add	r1, pc, r1
   2c9cc:	add	r2, pc, r2
   2c9d0:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2c9d4:	b	2cc4c <__flatcc_fb_parse@@Base+0x197c>
   2c9d8:	ldr	r1, [pc, #3996]	; 2d97c <__flatcc_fb_parse@@Base+0x26ac>
   2c9dc:	ldr	r2, [pc, #3996]	; 2d980 <__flatcc_fb_parse@@Base+0x26b0>
   2c9e0:	mov	r0, sl
   2c9e4:	add	r1, pc, r1
   2c9e8:	add	r2, pc, r2
   2c9ec:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2c9f0:	b	2ccac <__flatcc_fb_parse@@Base+0x19dc>
   2c9f4:	ldr	r1, [pc, #3924]	; 2d950 <__flatcc_fb_parse@@Base+0x2680>
   2c9f8:	ldr	r2, [pc, #3924]	; 2d954 <__flatcc_fb_parse@@Base+0x2684>
   2c9fc:	mov	r0, sl
   2ca00:	add	r1, pc, r1
   2ca04:	add	r2, pc, r2
   2ca08:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2ca0c:	b	2cdec <__flatcc_fb_parse@@Base+0x1b1c>
   2ca10:	ldr	r1, [pc, #3888]	; 2d948 <__flatcc_fb_parse@@Base+0x2678>
   2ca14:	ldr	r2, [pc, #3888]	; 2d94c <__flatcc_fb_parse@@Base+0x267c>
   2ca18:	mov	r0, sl
   2ca1c:	add	r1, pc, r1
   2ca20:	add	r2, pc, r2
   2ca24:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2ca28:	b	2ce34 <__flatcc_fb_parse@@Base+0x1b64>
   2ca2c:			; <UNDEFINED> instruction: 0x00014db2
   2ca30:	ldr	r1, [pc, #4004]	; 2d9dc <__flatcc_fb_parse@@Base+0x270c>
   2ca34:	ldr	r2, [pc, #4004]	; 2d9e0 <__flatcc_fb_parse@@Base+0x2710>
   2ca38:	mov	r0, sl
   2ca3c:	add	r1, pc, r1
   2ca40:	add	r2, pc, r2
   2ca44:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2ca48:	b	2cd10 <__flatcc_fb_parse@@Base+0x1a40>
   2ca4c:	andeq	r4, r1, sl, ror sp
   2ca50:	str	r2, [sp]
   2ca54:	str	r2, [sp, #4]
   2ca58:	mov	r0, sl
   2ca5c:	mov	r3, r5
   2ca60:	ldr	r2, [pc, #3848]	; 2d970 <__flatcc_fb_parse@@Base+0x26a0>
   2ca64:	add	r2, pc, r2
   2ca68:	bl	2ac84 <__flatcc_error_report@@Base>
   2ca6c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2ca70:	ldr	r0, [sl, #412]	; 0x19c
   2ca74:	mov	r2, #0
   2ca78:	mov	r1, r5
   2ca7c:	bl	29530 <fb_scope_table_find@@Base>
   2ca80:	mov	r6, r0
   2ca84:	cmp	r0, #0
   2ca88:	bne	2cb10 <__flatcc_fb_parse@@Base+0x1840>
   2ca8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2ca90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ca94:	ldr	r6, [r1]
   2ca98:	ldr	r0, [r0]
   2ca9c:	add	r1, r6, #32
   2caa0:	cmp	r1, r0
   2caa4:	bls	2cae8 <__flatcc_fb_parse@@Base+0x1818>
   2caa8:	mov	r0, #65536	; 0x10000
   2caac:	mov	r1, #1
   2cab0:	bl	148c8 <calloc@plt>
   2cab4:	cmp	r0, #0
   2cab8:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2cabc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2cac0:	mov	r1, r0
   2cac4:	add	r6, r0, #16
   2cac8:	ldr	r2, [r3]
   2cacc:	str	r2, [r1], #48	; 0x30
   2cad0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2cad4:	str	r0, [r3]
   2cad8:	add	r0, r0, #65536	; 0x10000
   2cadc:	str	r6, [r2]
   2cae0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2cae4:	str	r0, [r2]
   2cae8:	str	r1, [sl, #52]	; 0x34
   2caec:	ldr	r1, [sp, #36]	; 0x24
   2caf0:	str	r5, [r6]
   2caf4:	mov	r2, #1
   2caf8:	ldm	r1, {r0, r1}
   2cafc:	str	r1, [r6, #24]
   2cb00:	str	r0, [r6, #20]
   2cb04:	mov	r1, r6
   2cb08:	ldr	r0, [sl, #412]	; 0x19c
   2cb0c:	bl	29508 <fb_scope_table_insert_item@@Base>
   2cb10:	str	r6, [sl, #544]	; 0x220
   2cb14:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2cb18:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2cb1c:	cmp	r7, #0
   2cb20:	beq	2ceec <__flatcc_fb_parse@@Base+0x1c1c>
   2cb24:	ldr	r2, [r7]
   2cb28:	ldr	r0, [r7, #4]
   2cb2c:	ldr	r3, [pc, #3888]	; 2da64 <__flatcc_fb_parse@@Base+0x2794>
   2cb30:	cmp	r2, #0
   2cb34:	mov	r1, r2
   2cb38:	add	r3, pc, r3
   2cb3c:	moveq	r0, r2
   2cb40:	moveq	r1, r3
   2cb44:	mov	r2, sl
   2cb48:	ldr	r3, [r2, #20]
   2cb4c:	cmp	r3, r7
   2cb50:	bhi	2cb60 <__flatcc_fb_parse@@Base+0x1890>
   2cb54:	ldr	r3, [r2, #24]
   2cb58:	cmp	r3, r7
   2cb5c:	bhi	2cfe0 <__flatcc_fb_parse@@Base+0x1d10>
   2cb60:	ldr	r2, [r2]
   2cb64:	cmp	r2, #0
   2cb68:	bne	2cb48 <__flatcc_fb_parse@@Base+0x1878>
   2cb6c:	ldr	r2, [pc, #3828]	; 2da68 <__flatcc_fb_parse@@Base+0x2798>
   2cb70:	add	r2, pc, r2
   2cb74:	b	2cfe4 <__flatcc_fb_parse@@Base+0x1d14>
   2cb78:	ldr	r2, [r2, #520]	; 0x208
   2cb7c:	ldr	r7, [r5, #12]
   2cb80:	ldr	r3, [r5, #8]
   2cb84:	str	r7, [sp]
   2cb88:	stmib	sp, {r0, r1}
   2cb8c:	ldr	r0, [pc, #3636]	; 2d9c8 <__flatcc_fb_parse@@Base+0x26f8>
   2cb90:	add	r0, pc, r0
   2cb94:	str	r0, [sp, #12]
   2cb98:	mov	r0, sl
   2cb9c:	ldr	r1, [pc, #3624]	; 2d9cc <__flatcc_fb_parse@@Base+0x26fc>
   2cba0:	add	r1, pc, r1
   2cba4:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cba8:	ldr	r0, [r8]
   2cbac:	add	r0, r0, #1
   2cbb0:	str	r0, [r8]
   2cbb4:	ldr	r1, [sp, #52]	; 0x34
   2cbb8:	mov	r0, sl
   2cbbc:	bl	33098 <__flatcc_fb_clear_parser@@Base+0xfa4>
   2cbc0:	mov	r2, #0
   2cbc4:	str	r2, [sl, #36]	; 0x24
   2cbc8:	ldr	r0, [sl, #544]	; 0x220
   2cbcc:	ldr	r1, [sl, #40]	; 0x28
   2cbd0:	str	r0, [sl, #408]	; 0x198
   2cbd4:	ldr	r0, [r1, #16]
   2cbd8:	cmp	r0, #59	; 0x3b
   2cbdc:	beq	2d054 <__flatcc_fb_parse@@Base+0x1d84>
   2cbe0:	str	r2, [sp]
   2cbe4:	str	r2, [sp, #4]
   2cbe8:	mov	r0, sl
   2cbec:	mov	r3, r5
   2cbf0:	ldr	r2, [pc, #3544]	; 2d9d0 <__flatcc_fb_parse@@Base+0x2700>
   2cbf4:	add	r2, pc, r2
   2cbf8:	bl	2ac84 <__flatcc_error_report@@Base>
   2cbfc:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2cc00:	ldr	r1, [pc, #3424]	; 2d968 <__flatcc_fb_parse@@Base+0x2698>
   2cc04:	ldr	r2, [pc, #3424]	; 2d96c <__flatcc_fb_parse@@Base+0x269c>
   2cc08:	mov	r0, sl
   2cc0c:	add	r1, pc, r1
   2cc10:	add	r2, pc, r2
   2cc14:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cc18:	b	2cea0 <__flatcc_fb_parse@@Base+0x1bd0>
   2cc1c:	ldr	r2, [r2, #520]	; 0x208
   2cc20:	ldr	r7, [r5, #12]
   2cc24:	ldr	r3, [r5, #8]
   2cc28:	str	r7, [sp]
   2cc2c:	stmib	sp, {r0, r1}
   2cc30:	ldr	r0, [pc, #3420]	; 2d994 <__flatcc_fb_parse@@Base+0x26c4>
   2cc34:	add	r0, pc, r0
   2cc38:	str	r0, [sp, #12]
   2cc3c:	mov	r0, sl
   2cc40:	ldr	r1, [pc, #3408]	; 2d998 <__flatcc_fb_parse@@Base+0x26c8>
   2cc44:	add	r1, pc, r1
   2cc48:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cc4c:	ldr	r0, [r8]
   2cc50:	add	r0, r0, #1
   2cc54:	str	r0, [r8]
   2cc58:	ldr	r0, [r4]
   2cc5c:	ldr	r5, [r0, #16]
   2cc60:	cmp	r5, #0
   2cc64:	beq	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2cc68:	mov	r0, sl
   2cc6c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2cc70:	cmp	r5, #59	; 0x3b
   2cc74:	bne	2cc58 <__flatcc_fb_parse@@Base+0x1988>
   2cc78:	b	2d2bc <__flatcc_fb_parse@@Base+0x1fec>
   2cc7c:	ldr	r2, [r2, #520]	; 0x208
   2cc80:	ldr	r7, [r5, #12]
   2cc84:	ldr	r3, [r5, #8]
   2cc88:	str	r7, [sp]
   2cc8c:	stmib	sp, {r0, r1}
   2cc90:	ldr	r0, [pc, #3292]	; 2d974 <__flatcc_fb_parse@@Base+0x26a4>
   2cc94:	add	r0, pc, r0
   2cc98:	str	r0, [sp, #12]
   2cc9c:	mov	r0, sl
   2cca0:	ldr	r1, [pc, #3280]	; 2d978 <__flatcc_fb_parse@@Base+0x26a8>
   2cca4:	add	r1, pc, r1
   2cca8:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2ccac:	ldr	r0, [r8]
   2ccb0:	add	r0, r0, #1
   2ccb4:	str	r0, [r8]
   2ccb8:	ldr	r0, [r4]
   2ccbc:	ldr	r5, [r0, #16]
   2ccc0:	cmp	r5, #0
   2ccc4:	beq	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2ccc8:	mov	r0, sl
   2cccc:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2ccd0:	cmp	r5, #59	; 0x3b
   2ccd4:	bne	2ccb8 <__flatcc_fb_parse@@Base+0x19e8>
   2ccd8:	b	2d2bc <__flatcc_fb_parse@@Base+0x1fec>
   2ccdc:	andeq	fp, r2, lr, ror pc
   2cce0:	ldr	r2, [r2, #520]	; 0x208
   2cce4:	ldr	r7, [r5, #12]
   2cce8:	ldr	r3, [r5, #8]
   2ccec:	str	r7, [sp]
   2ccf0:	stmib	sp, {r0, r1}
   2ccf4:	ldr	r0, [pc, #3288]	; 2d9d4 <__flatcc_fb_parse@@Base+0x2704>
   2ccf8:	add	r0, pc, r0
   2ccfc:	str	r0, [sp, #12]
   2cd00:	mov	r0, sl
   2cd04:	ldr	r1, [pc, #3276]	; 2d9d8 <__flatcc_fb_parse@@Base+0x2708>
   2cd08:	add	r1, pc, r1
   2cd0c:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cd10:	ldr	r0, [r8]
   2cd14:	add	r0, r0, #1
   2cd18:	str	r0, [r8]
   2cd1c:	ldr	r0, [r4]
   2cd20:	ldr	r1, [r0, #16]
   2cd24:	cmp	r1, #59	; 0x3b
   2cd28:	bne	2cd44 <__flatcc_fb_parse@@Base+0x1a74>
   2cd2c:	mov	r0, sl
   2cd30:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2cd34:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2cd38:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2cd3c:	muleq	r1, sl, sl
   2cd40:	andeq	r4, r1, r2, ror #20
   2cd44:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2cd48:	cmp	r0, #0
   2cd4c:	beq	2cda4 <__flatcc_fb_parse@@Base+0x1ad4>
   2cd50:	ldr	r2, [r0]
   2cd54:	ldr	r1, [r0, #4]
   2cd58:	ldr	r3, [pc, #3212]	; 2d9ec <__flatcc_fb_parse@@Base+0x271c>
   2cd5c:	cmp	r2, #0
   2cd60:	mov	r7, r2
   2cd64:	add	r3, pc, r3
   2cd68:	moveq	r1, r2
   2cd6c:	moveq	r7, r3
   2cd70:	mov	r2, sl
   2cd74:	ldr	r3, [r2, #20]
   2cd78:	cmp	r3, r0
   2cd7c:	bhi	2cd8c <__flatcc_fb_parse@@Base+0x1abc>
   2cd80:	ldr	r3, [r2, #24]
   2cd84:	cmp	r3, r0
   2cd88:	bhi	2ce50 <__flatcc_fb_parse@@Base+0x1b80>
   2cd8c:	ldr	r2, [r2]
   2cd90:	cmp	r2, #0
   2cd94:	bne	2cd74 <__flatcc_fb_parse@@Base+0x1aa4>
   2cd98:	ldr	r2, [pc, #3152]	; 2d9f0 <__flatcc_fb_parse@@Base+0x2720>
   2cd9c:	add	r2, pc, r2
   2cda0:	b	2ce54 <__flatcc_fb_parse@@Base+0x1b84>
   2cda4:	ldr	r1, [pc, #3148]	; 2d9f8 <__flatcc_fb_parse@@Base+0x2728>
   2cda8:	ldr	r2, [pc, #3148]	; 2d9fc <__flatcc_fb_parse@@Base+0x272c>
   2cdac:	mov	r0, sl
   2cdb0:	add	r1, pc, r1
   2cdb4:	add	r2, pc, r2
   2cdb8:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2cdbc:	ldr	r2, [r2, #520]	; 0x208
   2cdc0:	ldr	r7, [r5, #12]
   2cdc4:	ldr	r3, [r5, #8]
   2cdc8:	str	r7, [sp]
   2cdcc:	stmib	sp, {r0, r1}
   2cdd0:	ldr	r0, [pc, #3112]	; 2da00 <__flatcc_fb_parse@@Base+0x2730>
   2cdd4:	add	r0, pc, r0
   2cdd8:	str	r0, [sp, #12]
   2cddc:	mov	r0, sl
   2cde0:	ldr	r1, [pc, #3100]	; 2da04 <__flatcc_fb_parse@@Base+0x2734>
   2cde4:	add	r1, pc, r1
   2cde8:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cdec:	ldr	r0, [r8]
   2cdf0:	add	r0, r0, #1
   2cdf4:	str	r0, [r8]
   2cdf8:	mov	r0, #0
   2cdfc:	str	r0, [r6, #4]
   2ce00:	b	2d6cc <__flatcc_fb_parse@@Base+0x23fc>
   2ce04:	ldr	r2, [r2, #520]	; 0x208
   2ce08:	ldr	r7, [r6, #12]
   2ce0c:	ldr	r3, [r6, #8]
   2ce10:	str	r7, [sp]
   2ce14:	stmib	sp, {r0, r1}
   2ce18:	ldr	r0, [pc, #3132]	; 2da5c <__flatcc_fb_parse@@Base+0x278c>
   2ce1c:	add	r0, pc, r0
   2ce20:	str	r0, [sp, #12]
   2ce24:	mov	r0, sl
   2ce28:	ldr	r1, [pc, #3120]	; 2da60 <__flatcc_fb_parse@@Base+0x2790>
   2ce2c:	add	r1, pc, r1
   2ce30:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2ce34:	ldr	r0, [r8]
   2ce38:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2ce3c:	add	r0, r0, #1
   2ce40:	str	r0, [r8]
   2ce44:	mov	r0, #0
   2ce48:	str	r0, [r5, #4]
   2ce4c:	b	2d288 <__flatcc_fb_parse@@Base+0x1fb8>
   2ce50:	ldr	r2, [r2, #520]	; 0x208
   2ce54:	ldr	r3, [r0, #8]
   2ce58:	ldr	r0, [r0, #12]
   2ce5c:	stm	sp, {r0, r1, r7}
   2ce60:	ldr	r0, [pc, #2956]	; 2d9f4 <__flatcc_fb_parse@@Base+0x2724>
   2ce64:	add	r0, pc, r0
   2ce68:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2ce6c:	andeq	r4, r1, lr, ror r9
   2ce70:	andeq	r4, r1, r6, asr #18
   2ce74:	ldr	r2, [r2, #520]	; 0x208
   2ce78:	ldr	r3, [r0, #8]
   2ce7c:	ldr	r0, [r0, #12]
   2ce80:	stm	sp, {r0, r1, r7}
   2ce84:	ldr	r0, [pc, #2772]	; 2d960 <__flatcc_fb_parse@@Base+0x2690>
   2ce88:	add	r0, pc, r0
   2ce8c:	str	r0, [sp, #12]
   2ce90:	mov	r0, sl
   2ce94:	ldr	r1, [pc, #2760]	; 2d964 <__flatcc_fb_parse@@Base+0x2694>
   2ce98:	add	r1, pc, r1
   2ce9c:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cea0:	ldr	r0, [r8]
   2cea4:	add	r0, r0, #1
   2cea8:	str	r0, [r8]
   2ceac:	ldr	r0, [r4]
   2ceb0:	ldr	r5, [r0, #16]
   2ceb4:	cmp	r5, #0
   2ceb8:	beq	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2cebc:	mov	r0, sl
   2cec0:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2cec4:	cmp	r5, #59	; 0x3b
   2cec8:	bne	2ceac <__flatcc_fb_parse@@Base+0x1bdc>
   2cecc:	b	2d2bc <__flatcc_fb_parse@@Base+0x1fec>
   2ced0:	andeq	r4, r1, r2, lsr #18
   2ced4:	ldr	r1, [pc, #2736]	; 2d98c <__flatcc_fb_parse@@Base+0x26bc>
   2ced8:	ldr	r2, [pc, #2736]	; 2d990 <__flatcc_fb_parse@@Base+0x26c0>
   2cedc:	mov	r0, sl
   2cee0:	add	r1, pc, r1
   2cee4:	add	r2, pc, r2
   2cee8:	b	2d0d8 <__flatcc_fb_parse@@Base+0x1e08>
   2ceec:	ldr	r1, [pc, #2944]	; 2da74 <__flatcc_fb_parse@@Base+0x27a4>
   2cef0:	ldr	r2, [pc, #2944]	; 2da78 <__flatcc_fb_parse@@Base+0x27a8>
   2cef4:	mov	r0, sl
   2cef8:	add	r1, pc, r1
   2cefc:	add	r2, pc, r2
   2cf00:	b	2d148 <__flatcc_fb_parse@@Base+0x1e78>
   2cf04:	andeq	r4, r1, sl, ror #17
   2cf08:	cmp	r0, #0
   2cf0c:	beq	2d154 <__flatcc_fb_parse@@Base+0x1e84>
   2cf10:	ldr	r2, [r0]
   2cf14:	ldr	r1, [r0, #4]
   2cf18:	ldr	r3, [pc, #2792]	; 2da08 <__flatcc_fb_parse@@Base+0x2738>
   2cf1c:	cmp	r2, #0
   2cf20:	mov	r7, r2
   2cf24:	add	r3, pc, r3
   2cf28:	moveq	r1, r2
   2cf2c:	moveq	r7, r3
   2cf30:	mov	r2, sl
   2cf34:	ldr	r3, [r2, #20]
   2cf38:	cmp	r3, r0
   2cf3c:	bhi	2cf4c <__flatcc_fb_parse@@Base+0x1c7c>
   2cf40:	ldr	r3, [r2, #24]
   2cf44:	cmp	r3, r0
   2cf48:	bhi	2d394 <__flatcc_fb_parse@@Base+0x20c4>
   2cf4c:	ldr	r2, [r2]
   2cf50:	cmp	r2, #0
   2cf54:	bne	2cf34 <__flatcc_fb_parse@@Base+0x1c64>
   2cf58:	ldr	r2, [pc, #2732]	; 2da0c <__flatcc_fb_parse@@Base+0x273c>
   2cf5c:	add	r2, pc, r2
   2cf60:	b	2d398 <__flatcc_fb_parse@@Base+0x20c8>
   2cf64:	ldr	r2, [r2, #520]	; 0x208
   2cf68:	ldr	r7, [r5, #12]
   2cf6c:	ldr	r3, [r5, #8]
   2cf70:	str	r7, [sp]
   2cf74:	stmib	sp, {r0, r1}
   2cf78:	ldr	r0, [pc, #2660]	; 2d9e4 <__flatcc_fb_parse@@Base+0x2714>
   2cf7c:	add	r0, pc, r0
   2cf80:	str	r0, [sp, #12]
   2cf84:	mov	r0, sl
   2cf88:	ldr	r1, [pc, #2648]	; 2d9e8 <__flatcc_fb_parse@@Base+0x2718>
   2cf8c:	add	r1, pc, r1
   2cf90:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cf94:	ldr	r0, [sl, #108]	; 0x6c
   2cf98:	add	r0, r0, #1
   2cf9c:	str	r0, [sl, #108]	; 0x6c
   2cfa0:	b	2cd1c <__flatcc_fb_parse@@Base+0x1a4c>
   2cfa4:	ldr	r1, [pc, #2560]	; 2d9ac <__flatcc_fb_parse@@Base+0x26dc>
   2cfa8:	ldr	r2, [pc, #2560]	; 2d9b0 <__flatcc_fb_parse@@Base+0x26e0>
   2cfac:	mov	r0, sl
   2cfb0:	add	r1, pc, r1
   2cfb4:	add	r2, pc, r2
   2cfb8:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2cfbc:	b	2d038 <__flatcc_fb_parse@@Base+0x1d68>
   2cfc0:	andeq	r4, r1, sl, lsr #16
   2cfc4:	ldr	r2, [r2, #520]	; 0x208
   2cfc8:	ldr	r3, [r0, #8]
   2cfcc:	ldr	r0, [r0, #12]
   2cfd0:	stm	sp, {r0, r1, r7}
   2cfd4:	ldr	r0, [pc, #2472]	; 2d984 <__flatcc_fb_parse@@Base+0x26b4>
   2cfd8:	add	r0, pc, r0
   2cfdc:	b	2d100 <__flatcc_fb_parse@@Base+0x1e30>
   2cfe0:	ldr	r2, [r2, #520]	; 0x208
   2cfe4:	ldr	r3, [r7, #8]
   2cfe8:	ldr	r7, [r7, #12]
   2cfec:	str	r7, [sp]
   2cff0:	stmib	sp, {r0, r1}
   2cff4:	ldr	r0, [pc, #2672]	; 2da6c <__flatcc_fb_parse@@Base+0x279c>
   2cff8:	add	r0, pc, r0
   2cffc:	b	2d258 <__flatcc_fb_parse@@Base+0x1f88>
   2d000:	strdeq	r4, [r1], -r2
   2d004:			; <UNDEFINED> instruction: 0x000147b6
   2d008:	ldr	r2, [r2, #520]	; 0x208
   2d00c:	ldr	r7, [r5, #12]
   2d010:	ldr	r3, [r5, #8]
   2d014:	str	r7, [sp]
   2d018:	stmib	sp, {r0, r1}
   2d01c:	ldr	r0, [pc, #2432]	; 2d9a4 <__flatcc_fb_parse@@Base+0x26d4>
   2d020:	add	r0, pc, r0
   2d024:	str	r0, [sp, #12]
   2d028:	mov	r0, sl
   2d02c:	ldr	r1, [pc, #2420]	; 2d9a8 <__flatcc_fb_parse@@Base+0x26d8>
   2d030:	add	r1, pc, r1
   2d034:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d038:	ldr	r0, [r8]
   2d03c:	add	r0, r0, #1
   2d040:	str	r0, [r8]
   2d044:	ldr	r0, [r4]
   2d048:	ldr	r1, [r0, #16]
   2d04c:	cmp	r1, #59	; 0x3b
   2d050:	bne	2d068 <__flatcc_fb_parse@@Base+0x1d98>
   2d054:	mov	r0, sl
   2d058:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d05c:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2d060:	andeq	r4, r1, sl, ror r7
   2d064:	andeq	r4, r1, r6, asr r7
   2d068:	cmp	r0, #0
   2d06c:	beq	2d0c4 <__flatcc_fb_parse@@Base+0x1df4>
   2d070:	ldr	r2, [r0]
   2d074:	ldr	r1, [r0, #4]
   2d078:	ldr	r3, [pc, #2356]	; 2d9b4 <__flatcc_fb_parse@@Base+0x26e4>
   2d07c:	cmp	r2, #0
   2d080:	mov	r7, r2
   2d084:	add	r3, pc, r3
   2d088:	moveq	r1, r2
   2d08c:	moveq	r7, r3
   2d090:	mov	r2, sl
   2d094:	ldr	r3, [r2, #20]
   2d098:	cmp	r3, r0
   2d09c:	bhi	2d0ac <__flatcc_fb_parse@@Base+0x1ddc>
   2d0a0:	ldr	r3, [r2, #24]
   2d0a4:	cmp	r3, r0
   2d0a8:	bhi	2d0e8 <__flatcc_fb_parse@@Base+0x1e18>
   2d0ac:	ldr	r2, [r2]
   2d0b0:	cmp	r2, #0
   2d0b4:	bne	2d094 <__flatcc_fb_parse@@Base+0x1dc4>
   2d0b8:	ldr	r2, [pc, #2296]	; 2d9b8 <__flatcc_fb_parse@@Base+0x26e8>
   2d0bc:	add	r2, pc, r2
   2d0c0:	b	2d0ec <__flatcc_fb_parse@@Base+0x1e1c>
   2d0c4:	ldr	r1, [pc, #2292]	; 2d9c0 <__flatcc_fb_parse@@Base+0x26f0>
   2d0c8:	ldr	r2, [pc, #2292]	; 2d9c4 <__flatcc_fb_parse@@Base+0x26f4>
   2d0cc:	mov	r0, sl
   2d0d0:	add	r1, pc, r1
   2d0d4:	add	r2, pc, r2
   2d0d8:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d0dc:	b	2d114 <__flatcc_fb_parse@@Base+0x1e44>
   2d0e0:	andeq	r4, r1, lr, lsl r7
   2d0e4:	strdeq	r4, [r1], -sl
   2d0e8:	ldr	r2, [r2, #520]	; 0x208
   2d0ec:	ldr	r3, [r0, #8]
   2d0f0:	ldr	r0, [r0, #12]
   2d0f4:	stm	sp, {r0, r1, r7}
   2d0f8:	ldr	r0, [pc, #2236]	; 2d9bc <__flatcc_fb_parse@@Base+0x26ec>
   2d0fc:	add	r0, pc, r0
   2d100:	str	r0, [sp, #12]
   2d104:	mov	r0, sl
   2d108:	ldr	r1, [pc, #2168]	; 2d988 <__flatcc_fb_parse@@Base+0x26b8>
   2d10c:	add	r1, pc, r1
   2d110:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d114:	ldr	r0, [r8]
   2d118:	add	r0, r0, #1
   2d11c:	str	r0, [r8]
   2d120:	ldr	r7, [r4]
   2d124:	cmp	r7, r9
   2d128:	bne	2b770 <__flatcc_fb_parse@@Base+0x4a0>
   2d12c:	b	2d83c <__flatcc_fb_parse@@Base+0x256c>
   2d130:	andeq	r4, r1, r2, asr #13
   2d134:	ldr	r1, [pc, #2372]	; 2da80 <__flatcc_fb_parse@@Base+0x27b0>
   2d138:	ldr	r2, [pc, #2372]	; 2da84 <__flatcc_fb_parse@@Base+0x27b4>
   2d13c:	mov	r0, sl
   2d140:	add	r1, pc, r1
   2d144:	add	r2, pc, r2
   2d148:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d14c:	b	2d26c <__flatcc_fb_parse@@Base+0x1f9c>
   2d150:	muleq	r1, lr, r6
   2d154:	ldr	r1, [pc, #2236]	; 2da18 <__flatcc_fb_parse@@Base+0x2748>
   2d158:	ldr	r2, [pc, #2236]	; 2da1c <__flatcc_fb_parse@@Base+0x274c>
   2d15c:	mov	r0, sl
   2d160:	add	r1, pc, r1
   2d164:	add	r2, pc, r2
   2d168:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d16c:	b	2d3c0 <__flatcc_fb_parse@@Base+0x20f0>
   2d170:	andeq	r4, r1, r6, ror #12
   2d174:	ldr	r2, [r2, #520]	; 0x208
   2d178:	ldr	r3, [r0, #8]
   2d17c:	ldr	r0, [r0, #12]
   2d180:	stm	sp, {r0, r1, r7}
   2d184:	ldr	r0, [pc, #2196]	; 2da20 <__flatcc_fb_parse@@Base+0x2750>
   2d188:	add	r0, pc, r0
   2d18c:	str	r0, [sp, #12]
   2d190:	mov	r0, sl
   2d194:	ldr	r1, [pc, #2184]	; 2da24 <__flatcc_fb_parse@@Base+0x2754>
   2d198:	add	r1, pc, r1
   2d19c:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d1a0:	ldr	r0, [sl, #108]	; 0x6c
   2d1a4:	add	r0, r0, #1
   2d1a8:	str	r0, [sl, #108]	; 0x6c
   2d1ac:	b	2d3cc <__flatcc_fb_parse@@Base+0x20fc>
   2d1b0:	andeq	r4, r1, r2, asr #12
   2d1b4:	str	r6, [sp, #28]
   2d1b8:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2d1bc:	ldr	r7, [sp, #24]
   2d1c0:	b	2d1c8 <__flatcc_fb_parse@@Base+0x1ef8>
   2d1c4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2d1c8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d1cc:	mov	r2, #0
   2d1d0:	cmp	r0, #125	; 0x7d
   2d1d4:	str	r2, [r1]
   2d1d8:	bne	2d1ec <__flatcc_fb_parse@@Base+0x1f1c>
   2d1dc:	mov	r0, sl
   2d1e0:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d1e4:	b	2d210 <__flatcc_fb_parse@@Base+0x1f40>
   2d1e8:	andeq	r4, r1, sl, lsl #12
   2d1ec:	mov	r0, #0
   2d1f0:	ldr	r1, [sp, #28]
   2d1f4:	mov	r3, r7
   2d1f8:	str	r0, [sp]
   2d1fc:	str	r0, [sp, #4]
   2d200:	mov	r0, sl
   2d204:	ldr	r2, [pc, #2172]	; 2da88 <__flatcc_fb_parse@@Base+0x27b8>
   2d208:	add	r2, pc, r2
   2d20c:	bl	2ac84 <__flatcc_error_report@@Base>
   2d210:	ldr	r1, [r5, #20]
   2d214:	cmp	r1, #0
   2d218:	beq	2d2d0 <__flatcc_fb_parse@@Base+0x2000>
   2d21c:	mov	r2, #0
   2d220:	mov	r0, r1
   2d224:	ldr	r1, [r1]
   2d228:	str	r2, [r0]
   2d22c:	mov	r2, r0
   2d230:	cmp	r1, #0
   2d234:	bne	2d220 <__flatcc_fb_parse@@Base+0x1f50>
   2d238:	b	2d2d4 <__flatcc_fb_parse@@Base+0x2004>
   2d23c:	ldr	r2, [r2, #520]	; 0x208
   2d240:	ldr	r3, [r7, #8]
   2d244:	ldr	r7, [r7, #12]
   2d248:	str	r7, [sp]
   2d24c:	stmib	sp, {r0, r1}
   2d250:	ldr	r0, [pc, #2084]	; 2da7c <__flatcc_fb_parse@@Base+0x27ac>
   2d254:	add	r0, pc, r0
   2d258:	str	r0, [sp, #12]
   2d25c:	mov	r0, sl
   2d260:	ldr	r1, [pc, #2056]	; 2da70 <__flatcc_fb_parse@@Base+0x27a0>
   2d264:	add	r1, pc, r1
   2d268:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d26c:	ldr	r0, [r8]
   2d270:	add	r0, r0, #1
   2d274:	str	r0, [r8]
   2d278:	b	2d288 <__flatcc_fb_parse@@Base+0x1fb8>
   2d27c:	andeq	r4, r1, r2, asr r5
   2d280:	mov	r0, sl
   2d284:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d288:	ldr	r0, [r4]
   2d28c:	ldr	r0, [r0, #16]
   2d290:	cmp	r0, #0
   2d294:	beq	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2d298:	cmp	r0, #125	; 0x7d
   2d29c:	beq	2d2bc <__flatcc_fb_parse@@Base+0x1fec>
   2d2a0:	cmp	r0, #59	; 0x3b
   2d2a4:	bne	2d280 <__flatcc_fb_parse@@Base+0x1fb0>
   2d2a8:	mov	r0, sl
   2d2ac:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d2b0:	mov	r0, #0
   2d2b4:	str	r0, [sl, #36]	; 0x24
   2d2b8:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2d2bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d2c0:	b	2d6f8 <__flatcc_fb_parse@@Base+0x2428>
   2d2c4:	andeq	r4, r1, sl, lsl r5
   2d2c8:	strdeq	r4, [r1], -r2
   2d2cc:			; <UNDEFINED> instruction: 0x000144ba
   2d2d0:	mov	r0, #0
   2d2d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2d2d8:	str	r0, [r5, #20]
   2d2dc:	ldr	r3, [r1]
   2d2e0:	ldr	r1, [r6]
   2d2e4:	add	r2, r1, #128	; 0x80
   2d2e8:	cmp	r2, r3
   2d2ec:	bls	2d330 <__flatcc_fb_parse@@Base+0x2060>
   2d2f0:	mov	r0, #65536	; 0x10000
   2d2f4:	mov	r1, #1
   2d2f8:	bl	148c8 <calloc@plt>
   2d2fc:	cmp	r0, #0
   2d300:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2d304:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d308:	mov	r2, r0
   2d30c:	ldr	r1, [r3]
   2d310:	str	r1, [r2], #144	; 0x90
   2d314:	str	r0, [r3]
   2d318:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d31c:	add	r1, r0, #16
   2d320:	add	r0, r0, #65536	; 0x10000
   2d324:	str	r1, [r6]
   2d328:	str	r0, [r3]
   2d32c:	ldr	r0, [r5, #20]
   2d330:	str	r2, [r6]
   2d334:	mov	r2, #5
   2d338:	strh	r2, [r1, #8]
   2d33c:	str	r0, [r1]
   2d340:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d344:	str	r1, [r5, #20]
   2d348:	ldr	r0, [r0]
   2d34c:	cmp	r0, #0
   2d350:	beq	2d374 <__flatcc_fb_parse@@Base+0x20a4>
   2d354:	mov	r3, #0
   2d358:	mov	r2, r0
   2d35c:	ldr	r0, [r0]
   2d360:	str	r3, [r2]
   2d364:	mov	r3, r2
   2d368:	cmp	r0, #0
   2d36c:	bne	2d358 <__flatcc_fb_parse@@Base+0x2088>
   2d370:	b	2d378 <__flatcc_fb_parse@@Base+0x20a8>
   2d374:	mov	r2, #0
   2d378:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d37c:	str	r2, [r1, #68]	; 0x44
   2d380:	mov	r2, #0
   2d384:	str	r2, [r0]
   2d388:	ldr	r0, [sp, #32]
   2d38c:	str	r0, [r1, #4]
   2d390:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2d394:	ldr	r2, [r2, #520]	; 0x208
   2d398:	ldr	r3, [r0, #8]
   2d39c:	ldr	r0, [r0, #12]
   2d3a0:	stm	sp, {r0, r1, r7}
   2d3a4:	ldr	r0, [pc, #1636]	; 2da10 <__flatcc_fb_parse@@Base+0x2740>
   2d3a8:	add	r0, pc, r0
   2d3ac:	str	r0, [sp, #12]
   2d3b0:	mov	r0, sl
   2d3b4:	ldr	r1, [pc, #1624]	; 2da14 <__flatcc_fb_parse@@Base+0x2744>
   2d3b8:	add	r1, pc, r1
   2d3bc:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d3c0:	ldr	r0, [r8]
   2d3c4:	add	r0, r0, #1
   2d3c8:	str	r0, [r8]
   2d3cc:	mov	r0, sl
   2d3d0:	bl	33218 <__flatcc_fb_clear_parser@@Base+0x1124>
   2d3d4:	str	r0, [r6, #28]
   2d3d8:	ldr	r5, [sl, #40]	; 0x28
   2d3dc:	ldr	r0, [r5, #16]
   2d3e0:	cmp	r0, #123	; 0x7b
   2d3e4:	bne	2d5d8 <__flatcc_fb_parse@@Base+0x2308>
   2d3e8:	mov	r0, sl
   2d3ec:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d3f0:	cmp	r5, #0
   2d3f4:	beq	2d6cc <__flatcc_fb_parse@@Base+0x23fc>
   2d3f8:	ldr	r7, [r4]
   2d3fc:	str	r5, [sp, #28]
   2d400:	ldr	r0, [r7, #16]
   2d404:	cmp	r0, #9
   2d408:	bne	2d56c <__flatcc_fb_parse@@Base+0x229c>
   2d40c:	mov	r0, sl
   2d410:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d414:	cmp	r7, #0
   2d418:	beq	2d6cc <__flatcc_fb_parse@@Base+0x23fc>
   2d41c:	ldr	r0, [r8]
   2d420:	cmp	r0, #9
   2d424:	bgt	2d6cc <__flatcc_fb_parse@@Base+0x23fc>
   2d428:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d42c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2d430:	mov	r5, r7
   2d434:	ldr	r7, [r3]
   2d438:	ldr	r0, [r0]
   2d43c:	add	r1, r7, #128	; 0x80
   2d440:	cmp	r1, r0
   2d444:	bls	2d488 <__flatcc_fb_parse@@Base+0x21b8>
   2d448:	mov	r0, #65536	; 0x10000
   2d44c:	mov	r1, #1
   2d450:	bl	148c8 <calloc@plt>
   2d454:	cmp	r0, #0
   2d458:	beq	2d920 <__flatcc_fb_parse@@Base+0x2650>
   2d45c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2d460:	mov	r1, r0
   2d464:	add	r7, r0, #16
   2d468:	ldr	r2, [r3]
   2d46c:	str	r2, [r1], #144	; 0x90
   2d470:	str	r0, [r3]
   2d474:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d478:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2d47c:	add	r0, r0, #65536	; 0x10000
   2d480:	str	r7, [r3]
   2d484:	str	r0, [r2]
   2d488:	str	r1, [r3]
   2d48c:	mov	r1, #5
   2d490:	ldr	r0, [r6, #20]
   2d494:	strh	r1, [r7, #8]
   2d498:	str	r0, [r7]
   2d49c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d4a0:	str	r7, [r6, #20]
   2d4a4:	ldr	r0, [r0]
   2d4a8:	cmp	r0, #0
   2d4ac:	beq	2d4d8 <__flatcc_fb_parse@@Base+0x2208>
   2d4b0:	mov	r2, #0
   2d4b4:	mov	r1, r0
   2d4b8:	ldr	r0, [r0]
   2d4bc:	str	r2, [r1]
   2d4c0:	mov	r2, r1
   2d4c4:	cmp	r0, #0
   2d4c8:	bne	2d4b4 <__flatcc_fb_parse@@Base+0x21e4>
   2d4cc:	b	2d4dc <__flatcc_fb_parse@@Base+0x220c>
   2d4d0:	andeq	r4, r1, r6, ror r2
   2d4d4:	andeq	r4, r1, lr, lsr r2
   2d4d8:	mov	r1, #0
   2d4dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d4e0:	str	r1, [r7, #68]	; 0x44
   2d4e4:	mov	r1, #0
   2d4e8:	str	r1, [r0]
   2d4ec:	str	r5, [r7, #4]
   2d4f0:	ldr	r5, [r4]
   2d4f4:	ldr	r0, [r5, #16]
   2d4f8:	cmp	r0, #61	; 0x3d
   2d4fc:	bne	2d530 <__flatcc_fb_parse@@Base+0x2260>
   2d500:	mov	r0, sl
   2d504:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d508:	cmp	r5, #0
   2d50c:	beq	2d528 <__flatcc_fb_parse@@Base+0x2258>
   2d510:	ldr	r3, [pc, #1340]	; 2da54 <__flatcc_fb_parse@@Base+0x2784>
   2d514:	add	r1, r7, #48	; 0x30
   2d518:	mov	r0, sl
   2d51c:	mov	r2, #0
   2d520:	add	r3, pc, r3
   2d524:	bl	334d4 <__flatcc_fb_clear_parser@@Base+0x13e0>
   2d528:	ldr	r5, [r4]
   2d52c:	ldr	r0, [r5, #16]
   2d530:	cmp	r0, #44	; 0x2c
   2d534:	bne	2d708 <__flatcc_fb_parse@@Base+0x2438>
   2d538:	mov	r0, sl
   2d53c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d540:	ldr	r7, [sl, #40]	; 0x28
   2d544:	cmp	r5, #0
   2d548:	ldr	r0, [r7, #16]
   2d54c:	beq	2d70c <__flatcc_fb_parse@@Base+0x243c>
   2d550:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d554:	mov	r2, #0
   2d558:	cmp	r0, #9
   2d55c:	str	r2, [r1]
   2d560:	beq	2d40c <__flatcc_fb_parse@@Base+0x213c>
   2d564:	cmp	r0, #125	; 0x7d
   2d568:	beq	2d724 <__flatcc_fb_parse@@Base+0x2454>
   2d56c:	cmp	r7, #0
   2d570:	beq	2d670 <__flatcc_fb_parse@@Base+0x23a0>
   2d574:	ldr	r2, [r7]
   2d578:	ldr	r0, [r7, #4]
   2d57c:	ldr	r3, [pc, #1212]	; 2da40 <__flatcc_fb_parse@@Base+0x2770>
   2d580:	cmp	r2, #0
   2d584:	mov	r1, r2
   2d588:	add	r3, pc, r3
   2d58c:	moveq	r0, r2
   2d590:	moveq	r1, r3
   2d594:	mov	r2, sl
   2d598:	ldr	r3, [r2, #20]
   2d59c:	cmp	r3, r7
   2d5a0:	bhi	2d5b0 <__flatcc_fb_parse@@Base+0x22e0>
   2d5a4:	ldr	r3, [r2, #24]
   2d5a8:	cmp	r3, r7
   2d5ac:	bhi	2d690 <__flatcc_fb_parse@@Base+0x23c0>
   2d5b0:	ldr	r2, [r2]
   2d5b4:	cmp	r2, #0
   2d5b8:	bne	2d598 <__flatcc_fb_parse@@Base+0x22c8>
   2d5bc:	ldr	r2, [pc, #1152]	; 2da44 <__flatcc_fb_parse@@Base+0x2774>
   2d5c0:	add	r2, pc, r2
   2d5c4:	b	2d694 <__flatcc_fb_parse@@Base+0x23c4>
   2d5c8:	andeq	fp, r2, r5, asr r1
   2d5cc:	ldrdeq	fp, [r2], -r4
   2d5d0:	andeq	fp, r2, r0, lsr #25
   2d5d4:	strheq	fp, [r2], -fp	; <UNPREDICTABLE>
   2d5d8:	cmp	r5, #0
   2d5dc:	beq	2d634 <__flatcc_fb_parse@@Base+0x2364>
   2d5e0:	ldr	r2, [r5]
   2d5e4:	ldr	r0, [r5, #4]
   2d5e8:	ldr	r3, [pc, #1080]	; 2da28 <__flatcc_fb_parse@@Base+0x2758>
   2d5ec:	cmp	r2, #0
   2d5f0:	mov	r1, r2
   2d5f4:	add	r3, pc, r3
   2d5f8:	moveq	r0, r2
   2d5fc:	moveq	r1, r3
   2d600:	mov	r2, sl
   2d604:	ldr	r3, [r2, #20]
   2d608:	cmp	r3, r5
   2d60c:	bhi	2d61c <__flatcc_fb_parse@@Base+0x234c>
   2d610:	ldr	r3, [r2, #24]
   2d614:	cmp	r3, r5
   2d618:	bhi	2d650 <__flatcc_fb_parse@@Base+0x2380>
   2d61c:	ldr	r2, [r2]
   2d620:	cmp	r2, #0
   2d624:	bne	2d604 <__flatcc_fb_parse@@Base+0x2334>
   2d628:	ldr	r2, [pc, #1020]	; 2da2c <__flatcc_fb_parse@@Base+0x275c>
   2d62c:	add	r2, pc, r2
   2d630:	b	2d654 <__flatcc_fb_parse@@Base+0x2384>
   2d634:	ldr	r1, [pc, #1020]	; 2da38 <__flatcc_fb_parse@@Base+0x2768>
   2d638:	ldr	r2, [pc, #1020]	; 2da3c <__flatcc_fb_parse@@Base+0x276c>
   2d63c:	mov	r0, sl
   2d640:	add	r1, pc, r1
   2d644:	add	r2, pc, r2
   2d648:	b	2d684 <__flatcc_fb_parse@@Base+0x23b4>
   2d64c:	andeq	fp, r2, r2, lsr #23
   2d650:	ldr	r2, [r2, #520]	; 0x208
   2d654:	ldr	r7, [r5, #12]
   2d658:	ldr	r3, [r5, #8]
   2d65c:	str	r7, [sp]
   2d660:	stmib	sp, {r0, r1}
   2d664:	ldr	r0, [pc, #964]	; 2da30 <__flatcc_fb_parse@@Base+0x2760>
   2d668:	add	r0, pc, r0
   2d66c:	b	2d6ac <__flatcc_fb_parse@@Base+0x23dc>
   2d670:	ldr	r1, [pc, #980]	; 2da4c <__flatcc_fb_parse@@Base+0x277c>
   2d674:	ldr	r2, [pc, #980]	; 2da50 <__flatcc_fb_parse@@Base+0x2780>
   2d678:	mov	r0, sl
   2d67c:	add	r1, pc, r1
   2d680:	add	r2, pc, r2
   2d684:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d688:	b	2d6c0 <__flatcc_fb_parse@@Base+0x23f0>
   2d68c:	andeq	r4, r1, sl, lsl r1
   2d690:	ldr	r2, [r2, #520]	; 0x208
   2d694:	ldr	r3, [r7, #8]
   2d698:	ldr	r7, [r7, #12]
   2d69c:	str	r7, [sp]
   2d6a0:	stmib	sp, {r0, r1}
   2d6a4:	ldr	r0, [pc, #924]	; 2da48 <__flatcc_fb_parse@@Base+0x2778>
   2d6a8:	add	r0, pc, r0
   2d6ac:	str	r0, [sp, #12]
   2d6b0:	mov	r0, sl
   2d6b4:	ldr	r1, [pc, #888]	; 2da34 <__flatcc_fb_parse@@Base+0x2764>
   2d6b8:	add	r1, pc, r1
   2d6bc:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d6c0:	ldr	r0, [r8]
   2d6c4:	add	r0, r0, #1
   2d6c8:	str	r0, [r8]
   2d6cc:	ldr	r0, [r4]
   2d6d0:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2d6d4:	ldr	r5, [r0, #16]
   2d6d8:	cmp	r5, #0
   2d6dc:	beq	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2d6e0:	mov	r0, sl
   2d6e4:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d6e8:	cmp	r5, #125	; 0x7d
   2d6ec:	bne	2d6cc <__flatcc_fb_parse@@Base+0x23fc>
   2d6f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2d6f4:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2d6f8:	mov	r1, #0
   2d6fc:	str	r1, [r0]
   2d700:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2d704:	andeq	r4, r1, r2, ror #1
   2d708:	mov	r7, r5
   2d70c:	ldr	r3, [sp, #28]
   2d710:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2d714:	mov	r2, #0
   2d718:	cmp	r0, #125	; 0x7d
   2d71c:	str	r2, [r1]
   2d720:	bne	2d738 <__flatcc_fb_parse@@Base+0x2468>
   2d724:	mov	r0, sl
   2d728:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   2d72c:	b	2d758 <__flatcc_fb_parse@@Base+0x2488>
   2d730:	strheq	r4, [r1], -lr
   2d734:	andeq	r4, r1, r6, lsl #1
   2d738:	mov	r0, #0
   2d73c:	mov	r1, r7
   2d740:	str	r0, [sp]
   2d744:	str	r0, [sp, #4]
   2d748:	mov	r0, sl
   2d74c:	ldr	r2, [pc, #772]	; 2da58 <__flatcc_fb_parse@@Base+0x2788>
   2d750:	add	r2, pc, r2
   2d754:	bl	2ac84 <__flatcc_error_report@@Base>
   2d758:	ldr	r0, [r6, #20]
   2d75c:	cmp	r0, #0
   2d760:	beq	2d78c <__flatcc_fb_parse@@Base+0x24bc>
   2d764:	mov	r2, #0
   2d768:	mov	r1, r0
   2d76c:	ldr	r0, [r0]
   2d770:	str	r2, [r1]
   2d774:	mov	r2, r1
   2d778:	cmp	r0, #0
   2d77c:	bne	2d768 <__flatcc_fb_parse@@Base+0x2498>
   2d780:	b	2d790 <__flatcc_fb_parse@@Base+0x24c0>
   2d784:	muleq	r2, sp, pc	; <UNPREDICTABLE>
   2d788:	andeq	fp, r2, r5, asr r3
   2d78c:	mov	r1, #0
   2d790:	str	r1, [r6, #20]
   2d794:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2d798:	b	2d120 <__flatcc_fb_parse@@Base+0x1e50>
   2d79c:	andeq	sl, r2, r9, lsl #31
   2d7a0:	andeq	fp, r2, fp, lsl #8
   2d7a4:	andeq	sl, r2, r1, ror pc
   2d7a8:	andeq	fp, r2, pc, asr r3
   2d7ac:	andeq	sl, r2, sp, asr pc
   2d7b0:	andeq	fp, r2, sp, lsr #7
   2d7b4:	andeq	sl, r2, r9, asr #30
   2d7b8:	strdeq	fp, [r2], -r3
   2d7bc:	andeq	sl, r2, r1, lsr pc
   2d7c0:	strdeq	fp, [r2], -r6
   2d7c4:	andeq	sl, r2, r9, lsl pc
   2d7c8:	andeq	fp, r2, r2, asr r5
   2d7cc:	ldr	r1, [sl, #356]	; 0x164
   2d7d0:	mov	r0, #0
   2d7d4:	mov	r2, #0
   2d7d8:	cmp	r1, #0
   2d7dc:	beq	2d7fc <__flatcc_fb_parse@@Base+0x252c>
   2d7e0:	mov	r3, #0
   2d7e4:	mov	r2, r1
   2d7e8:	ldr	r1, [r1]
   2d7ec:	str	r3, [r2]
   2d7f0:	mov	r3, r2
   2d7f4:	cmp	r1, #0
   2d7f8:	bne	2d7e4 <__flatcc_fb_parse@@Base+0x2514>
   2d7fc:	str	r2, [sl, #356]	; 0x164
   2d800:	ldr	r1, [sl, #392]	; 0x188
   2d804:	cmp	r1, #0
   2d808:	beq	2d828 <__flatcc_fb_parse@@Base+0x2558>
   2d80c:	mov	r2, #0
   2d810:	mov	r0, r1
   2d814:	ldr	r1, [r1]
   2d818:	str	r2, [r0]
   2d81c:	mov	r2, r0
   2d820:	cmp	r1, #0
   2d824:	bne	2d810 <__flatcc_fb_parse@@Base+0x2540>
   2d828:	str	r0, [sl, #392]	; 0x188
   2d82c:	ldr	r0, [sl, #108]	; 0x6c
   2d830:	sub	sp, fp, #28
   2d834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d838:	andeq	fp, r2, sp, lsr #5
   2d83c:	ldr	r0, [r8]
   2d840:	cmp	r0, #0
   2d844:	beq	2d860 <__flatcc_fb_parse@@Base+0x2590>
   2d848:	sub	sp, fp, #28
   2d84c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d850:	andeq	fp, r2, r9, lsr #4
   2d854:	andeq	fp, r2, r7, asr #6
   2d858:	muleq	r2, r3, r2
   2d85c:	ldrdeq	fp, [r2], -r9
   2d860:	cmp	r9, #0
   2d864:	beq	2d8b8 <__flatcc_fb_parse@@Base+0x25e8>
   2d868:	ldr	r3, [r9]
   2d86c:	ldr	r0, [r9, #4]
   2d870:	ldr	r2, [pc, #532]	; 2da8c <__flatcc_fb_parse@@Base+0x27bc>
   2d874:	cmp	r3, #0
   2d878:	add	r2, pc, r2
   2d87c:	mov	r1, r3
   2d880:	moveq	r0, r3
   2d884:	moveq	r1, r2
   2d888:	mov	r3, sl
   2d88c:	ldr	r7, [r3, #20]
   2d890:	cmp	r7, r9
   2d894:	bhi	2d8a4 <__flatcc_fb_parse@@Base+0x25d4>
   2d898:	ldr	r7, [r3, #24]
   2d89c:	cmp	r7, r9
   2d8a0:	bhi	2d8e0 <__flatcc_fb_parse@@Base+0x2610>
   2d8a4:	ldr	r3, [r3]
   2d8a8:	cmp	r3, #0
   2d8ac:	bne	2d88c <__flatcc_fb_parse@@Base+0x25bc>
   2d8b0:	b	2d8e4 <__flatcc_fb_parse@@Base+0x2614>
   2d8b4:	andeq	fp, r2, r5, asr #5
   2d8b8:	ldr	r1, [pc, #472]	; 2da98 <__flatcc_fb_parse@@Base+0x27c8>
   2d8bc:	ldr	r2, [pc, #472]	; 2da9c <__flatcc_fb_parse@@Base+0x27cc>
   2d8c0:	mov	r0, sl
   2d8c4:	add	r1, pc, r1
   2d8c8:	add	r2, pc, r2
   2d8cc:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d8d0:	b	2d90c <__flatcc_fb_parse@@Base+0x263c>
   2d8d4:	andeq	fp, r2, r0, lsl r3
   2d8d8:	andeq	fp, r2, pc, ror #5
   2d8dc:	andeq	fp, r2, sl, ror #5
   2d8e0:	ldr	r2, [r3, #520]	; 0x208
   2d8e4:	ldr	r3, [r9, #8]
   2d8e8:	ldr	r7, [r9, #12]
   2d8ec:	ldr	r6, [pc, #412]	; 2da90 <__flatcc_fb_parse@@Base+0x27c0>
   2d8f0:	add	r6, pc, r6
   2d8f4:	str	r7, [sp]
   2d8f8:	stmib	sp, {r0, r1, r6}
   2d8fc:	mov	r0, sl
   2d900:	ldr	r1, [pc, #396]	; 2da94 <__flatcc_fb_parse@@Base+0x27c4>
   2d904:	add	r1, pc, r1
   2d908:	bl	2abbc <__flatcc_fb_print_error@@Base>
   2d90c:	ldr	r0, [sl, #108]	; 0x6c
   2d910:	add	r0, r0, #1
   2d914:	str	r0, [sl, #108]	; 0x6c
   2d918:	sub	sp, fp, #28
   2d91c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d920:	ldr	r0, [pc, #376]	; 2daa0 <__flatcc_fb_parse@@Base+0x27d0>
   2d924:	mov	r1, #34	; 0x22
   2d928:	mov	r2, #1
   2d92c:	ldr	r0, [pc, r0]
   2d930:	ldr	r3, [r0]
   2d934:	ldr	r0, [pc, #360]	; 2daa4 <__flatcc_fb_parse@@Base+0x27d4>
   2d938:	add	r0, pc, r0
   2d93c:	bl	1494c <fwrite@plt>
   2d940:	mov	r0, #1
   2d944:	bl	14994 <exit@plt>
   2d948:	andeq	sl, r2, sp, lsl #26
   2d94c:	andeq	fp, r2, fp, lsr #16
   2d950:	andeq	sl, r2, r9, lsr #26
   2d954:	muleq	r2, r5, r7
   2d958:	andeq	r3, r1, r6, lsl #29
   2d95c:	andeq	r3, r1, lr, asr #28
   2d960:	muleq	r2, r0, sp
   2d964:	andeq	sl, r2, pc, lsr r8
   2d968:	andeq	sl, r2, sp, lsl fp
   2d96c:	andeq	fp, r2, r8
   2d970:	ldrdeq	fp, [r2], -r4
   2d974:	andeq	fp, r2, r9
   2d978:	andeq	sl, r2, r3, lsr sl
   2d97c:	andeq	sl, r2, r5, asr #26
   2d980:			; <UNDEFINED> instruction: 0x0002b2b5
   2d984:	andeq	sl, r2, ip, ror #25
   2d988:	andeq	sl, r2, fp, asr #11
   2d98c:	andeq	sl, r2, r9, asr #16
   2d990:	andeq	sl, r2, r0, ror #27
   2d994:	andeq	fp, r2, r8, asr #1
   2d998:	muleq	r2, r3, sl
   2d99c:	andeq	sl, r2, r1, ror #26
   2d9a0:	andeq	fp, r2, r0, lsr r3
   2d9a4:	andeq	sl, r2, r4, lsl #26
   2d9a8:	andeq	sl, r2, r7, lsr #13
   2d9ac:	andeq	sl, r2, r9, ror r7
   2d9b0:	andeq	sl, r2, r0, ror sp
   2d9b4:	andeq	r3, r1, sl, ror r7
   2d9b8:	andeq	r3, r1, r2, asr #14
   2d9bc:	andeq	sl, r2, sp, asr #24
   2d9c0:	andeq	sl, r2, r9, asr r6
   2d9c4:	andeq	sl, r2, r5, ror ip
   2d9c8:	ldrdeq	fp, [r2], -r6
   2d9cc:	andeq	sl, r2, r7, lsr fp
   2d9d0:	andeq	fp, r2, r8, lsl #3
   2d9d4:	andeq	fp, r2, r9, lsr #1
   2d9d8:	andeq	sl, r2, pc, asr #19
   2d9dc:	andeq	sl, r2, sp, ror #25
   2d9e0:	andeq	fp, r2, r1, ror #6
   2d9e4:	andeq	sl, r2, r7, asr #28
   2d9e8:	andeq	sl, r2, fp, asr #14
   2d9ec:	muleq	r1, sl, sl
   2d9f0:	andeq	r3, r1, r2, ror #20
   2d9f4:	andeq	sl, r2, lr, ror pc
   2d9f8:	andeq	sl, r2, r9, ror r9
   2d9fc:	andeq	fp, r2, lr, lsr #32
   2da00:	andeq	fp, r2, r5, asr #7
   2da04:	strdeq	sl, [r2], -r3
   2da08:	ldrdeq	r3, [r1], -sl
   2da0c:	andeq	r3, r1, r2, lsr #17
   2da10:	andeq	sl, r2, r6, lsl lr
   2da14:	andeq	sl, r2, pc, lsl r3
   2da18:	andeq	sl, r2, r9, asr #11
   2da1c:	andeq	fp, r2, sl, asr r0
   2da20:	andeq	fp, r2, r6, lsr r0
   2da24:	andeq	sl, r2, pc, lsr r5
   2da28:	andeq	r3, r1, sl, lsl #4
   2da2c:	ldrdeq	r3, [r1], -r2
   2da30:	andeq	sl, r2, sp, ror #22
   2da34:	andeq	sl, r2, pc, lsl r0
   2da38:	andeq	sl, r2, r9, ror #1
   2da3c:	muleq	r2, r1, fp
   2da40:	andeq	r3, r1, r6, ror r2
   2da44:	andeq	r3, r1, lr, lsr r2
   2da48:	andeq	sl, r2, fp, asr #22
   2da4c:	andeq	sl, r2, sp, lsr #1
   2da50:	andeq	sl, r2, r3, ror fp
   2da54:	andeq	sl, r2, lr, ror #25
   2da58:	ldrdeq	sl, [r2], -r9
   2da5c:	andeq	fp, r2, pc, lsr #8
   2da60:	andeq	sl, r2, fp, lsr #17
   2da64:	andeq	r3, r1, r6, asr #25
   2da68:	andeq	r3, r1, lr, lsl #25
   2da6c:	andeq	fp, r2, r9, ror r2
   2da70:	andeq	sl, r2, r3, ror r4
   2da74:	andeq	sl, r2, r1, lsr r8
   2da78:	andeq	fp, r2, r5, ror r3
   2da7c:	andeq	fp, r2, ip, lsr r0
   2da80:	andeq	sl, r2, r9, ror #11
   2da84:	andeq	fp, r2, ip, asr #2
   2da88:	ldrdeq	fp, [r2], -sp
   2da8c:	andeq	r2, r1, r6, lsl #31
   2da90:	strheq	sl, [r2], -r2
   2da94:	ldrdeq	r9, [r2], -r3
   2da98:	andeq	r9, r2, r5, ror #28
   2da9c:	ldrdeq	sl, [r2], -sl	; <UNPREDICTABLE>
   2daa0:	andeq	lr, r3, r0, ror r7
   2daa4:	andeq	r2, r1, pc, ror #19
   2daa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2daac:	add	fp, sp, #28
   2dab0:	sub	sp, sp, #60	; 0x3c
   2dab4:	mov	r6, r0
   2dab8:	add	r0, r0, r1
   2dabc:	cmp	r1, #0
   2dac0:	str	r2, [sp, #24]
   2dac4:	str	r0, [fp, #-32]	; 0xffffffe0
   2dac8:	beq	31c68 <__flatcc_fb_parse@@Base+0x6998>
   2dacc:	add	r0, r6, r1
   2dad0:	add	r9, r2, #60	; 0x3c
   2dad4:	add	r7, r2, #40	; 0x28
   2dad8:	add	ip, r2, #28
   2dadc:	add	sl, r2, #20
   2dae0:	sub	r1, r0, #1
   2dae4:	sub	r0, r0, #2
   2dae8:	str	r0, [sp, #12]
   2daec:	add	r0, r2, #64	; 0x40
   2daf0:	str	r1, [sp, #20]
   2daf4:	str	r0, [fp, #-40]	; 0xffffffd8
   2daf8:	add	r0, r2, #24
   2dafc:	str	r0, [fp, #-36]	; 0xffffffdc
   2db00:	movw	r0, #15934	; 0x3e3e
   2db04:	movt	r0, #61	; 0x3d
   2db08:	add	r0, r0, #65536	; 0x10000
   2db0c:	str	r0, [sp, #4]
   2db10:	add	r0, sp, #28
   2db14:	ldr	r8, [pc, #3876]	; 2ea40 <__flatcc_fb_parse@@Base+0x3770>
   2db18:	str	r9, [sp, #40]	; 0x28
   2db1c:	stm	r0, {r7, sl, ip}
   2db20:	add	r8, pc, r8
   2db24:	ldrb	r4, [r6]
   2db28:	cmp	r4, #126	; 0x7e
   2db2c:	bhi	2f8b8 <__flatcc_fb_parse@@Base+0x45e8>
   2db30:	add	r0, pc, #4
   2db34:	ldr	r1, [r0, r4, lsl #2]
   2db38:	add	pc, r0, r1
   2db3c:	andeq	r4, r0, ip, asr r1
   2db40:	andeq	r1, r0, ip, ror sp
   2db44:	andeq	r1, r0, ip, ror sp
   2db48:	andeq	r1, r0, ip, ror sp
   2db4c:	andeq	r1, r0, ip, ror sp
   2db50:	andeq	r1, r0, ip, ror sp
   2db54:	andeq	r1, r0, ip, ror sp
   2db58:	andeq	r1, r0, ip, ror sp
   2db5c:	andeq	r1, r0, ip, ror sp
   2db60:	andeq	r0, r0, r0, ror #22
   2db64:	andeq	r1, r0, ip, lsl #20
   2db68:	andeq	r1, r0, ip, ror sp
   2db6c:	andeq	r1, r0, ip, ror sp
   2db70:	andeq	r1, r0, r8, ror r3
   2db74:	andeq	r1, r0, ip, ror sp
   2db78:	andeq	r1, r0, ip, ror sp
   2db7c:	andeq	r1, r0, ip, ror sp
   2db80:	andeq	r1, r0, ip, ror sp
   2db84:	andeq	r1, r0, ip, ror sp
   2db88:	andeq	r1, r0, ip, ror sp
   2db8c:	andeq	r1, r0, ip, ror sp
   2db90:	andeq	r1, r0, ip, ror sp
   2db94:	andeq	r1, r0, ip, ror sp
   2db98:	andeq	r1, r0, ip, ror sp
   2db9c:	andeq	r1, r0, ip, ror sp
   2dba0:	andeq	r1, r0, ip, ror sp
   2dba4:	andeq	r1, r0, ip, ror sp
   2dba8:	andeq	r1, r0, ip, ror sp
   2dbac:	andeq	r1, r0, ip, ror sp
   2dbb0:	andeq	r1, r0, ip, ror sp
   2dbb4:	andeq	r1, r0, ip, ror sp
   2dbb8:	andeq	r1, r0, ip, ror sp
   2dbbc:	andeq	r0, r0, r0, ror #22
   2dbc0:	andeq	r0, r0, r0, ror #14
   2dbc4:	muleq	r0, r8, r3
   2dbc8:	andeq	r1, r0, ip, ror sp
   2dbcc:	andeq	r1, r0, ip, ror sp
   2dbd0:	andeq	r0, r0, r0, ror #14
   2dbd4:	andeq	r1, r0, r0, ror #18
   2dbd8:	andeq	r1, r0, ip, ror sp
   2dbdc:	andeq	r0, r0, ip, lsl #9
   2dbe0:	andeq	r0, r0, ip, lsl #9
   2dbe4:	andeq	r1, r0, r4, lsr fp
   2dbe8:	strheq	r1, [r0], -r0
   2dbec:	andeq	r0, r0, ip, lsl #9
   2dbf0:	andeq	r1, r0, r8, lsl #24
   2dbf4:	andeq	r1, r0, r8, asr #20
   2dbf8:	andeq	r1, r0, r4, asr r1
   2dbfc:			; <UNDEFINED> instruction: 0x000011b4
   2dc00:	andeq	r0, r0, r8, asr r5
   2dc04:	andeq	r0, r0, r8, asr r5
   2dc08:	andeq	r0, r0, r8, asr r5
   2dc0c:	andeq	r0, r0, r8, asr r5
   2dc10:	andeq	r0, r0, r8, asr r5
   2dc14:	andeq	r0, r0, r8, asr r5
   2dc18:	andeq	r0, r0, r8, asr r5
   2dc1c:	andeq	r0, r0, r8, asr r5
   2dc20:	andeq	r0, r0, r8, asr r5
   2dc24:	andeq	r1, r0, ip, lsr #4
   2dc28:	andeq	r0, r0, ip, lsl #9
   2dc2c:	andeq	r1, r0, r4
   2dc30:	andeq	r1, r0, r0, asr #25
   2dc34:	ldrdeq	r1, [r0], -r4
   2dc38:	andeq	r0, r0, ip, lsl #9
   2dc3c:	andeq	r1, r0, ip, ror sp
   2dc40:	strdeq	r0, [r0], -ip
   2dc44:	strdeq	r0, [r0], -ip
   2dc48:	strdeq	r0, [r0], -ip
   2dc4c:	strdeq	r0, [r0], -ip
   2dc50:	strdeq	r0, [r0], -ip
   2dc54:	strdeq	r0, [r0], -ip
   2dc58:	strdeq	r0, [r0], -ip
   2dc5c:	strdeq	r0, [r0], -ip
   2dc60:	strdeq	r0, [r0], -ip
   2dc64:	strdeq	r0, [r0], -ip
   2dc68:	strdeq	r0, [r0], -ip
   2dc6c:	strdeq	r0, [r0], -ip
   2dc70:	strdeq	r0, [r0], -ip
   2dc74:	strdeq	r0, [r0], -ip
   2dc78:	strdeq	r0, [r0], -ip
   2dc7c:	strdeq	r0, [r0], -ip
   2dc80:	strdeq	r0, [r0], -ip
   2dc84:	strdeq	r0, [r0], -ip
   2dc88:	strdeq	r0, [r0], -ip
   2dc8c:	strdeq	r0, [r0], -ip
   2dc90:	strdeq	r0, [r0], -ip
   2dc94:	strdeq	r0, [r0], -ip
   2dc98:	strdeq	r0, [r0], -ip
   2dc9c:	strdeq	r0, [r0], -ip
   2dca0:	strdeq	r0, [r0], -ip
   2dca4:	strdeq	r0, [r0], -ip
   2dca8:	andeq	r0, r0, ip, lsl #9
   2dcac:	andeq	r0, r0, ip, lsl #9
   2dcb0:	andeq	r0, r0, ip, lsl #9
   2dcb4:	andeq	r0, r0, r0, ror #14
   2dcb8:	strdeq	r0, [r0], -ip
   2dcbc:	andeq	r1, r0, ip, ror sp
   2dcc0:	strdeq	r0, [r0], -ip
   2dcc4:	strdeq	r0, [r0], -ip
   2dcc8:	strdeq	r0, [r0], -ip
   2dccc:	strdeq	r0, [r0], -ip
   2dcd0:	strdeq	r0, [r0], -ip
   2dcd4:	strdeq	r0, [r0], -ip
   2dcd8:	strdeq	r0, [r0], -ip
   2dcdc:	strdeq	r0, [r0], -ip
   2dce0:	strdeq	r0, [r0], -ip
   2dce4:	strdeq	r0, [r0], -ip
   2dce8:	strdeq	r0, [r0], -ip
   2dcec:	strdeq	r0, [r0], -ip
   2dcf0:	strdeq	r0, [r0], -ip
   2dcf4:	strdeq	r0, [r0], -ip
   2dcf8:	strdeq	r0, [r0], -ip
   2dcfc:	strdeq	r0, [r0], -ip
   2dd00:	strdeq	r0, [r0], -ip
   2dd04:	strdeq	r0, [r0], -ip
   2dd08:	strdeq	r0, [r0], -ip
   2dd0c:	strdeq	r0, [r0], -ip
   2dd10:	strdeq	r0, [r0], -ip
   2dd14:	strdeq	r0, [r0], -ip
   2dd18:	strdeq	r0, [r0], -ip
   2dd1c:	strdeq	r0, [r0], -ip
   2dd20:	strdeq	r0, [r0], -ip
   2dd24:	strdeq	r0, [r0], -ip
   2dd28:	andeq	r0, r0, ip, lsl #9
   2dd2c:	andeq	r1, r0, r0, lsl #21
   2dd30:	andeq	r0, r0, ip, lsl #9
   2dd34:	andeq	r0, r0, r0, ror #14
   2dd38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2dd3c:	add	r9, r6, #1
   2dd40:	lsl	r0, r4, #8
   2dd44:	cmp	r9, r1
   2dd48:	beq	2dd88 <__flatcc_fb_parse@@Base+0x2ab8>
   2dd4c:	ldrb	r1, [r9]
   2dd50:	ldrb	r2, [r8, r1]
   2dd54:	cmp	r2, #0
   2dd58:	beq	2dd8c <__flatcc_fb_parse@@Base+0x2abc>
   2dd5c:	orr	r0, r0, r1, lsl #16
   2dd60:	add	r1, r6, #2
   2dd64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2dd68:	cmp	r2, r1
   2dd6c:	beq	2dd88 <__flatcc_fb_parse@@Base+0x2ab8>
   2dd70:	ldrb	r2, [r1], #1
   2dd74:	ldrb	r2, [r8, r2]
   2dd78:	cmp	r2, #0
   2dd7c:	bne	2dd64 <__flatcc_fb_parse@@Base+0x2a94>
   2dd80:	sub	r9, r1, #1
   2dd84:	b	2dd8c <__flatcc_fb_parse@@Base+0x2abc>
   2dd88:	ldr	r9, [fp, #-32]	; 0xffffffe0
   2dd8c:	ldrb	r2, [r9, #-1]
   2dd90:	sub	r3, r9, r6
   2dd94:	mov	r1, #48	; 0x30
   2dd98:	uxtab	r1, r1, r3
   2dd9c:	str	r3, [sp, #44]	; 0x2c
   2dda0:	orr	r0, r0, r2, lsl #24
   2dda4:	orr	r0, r0, r1
   2dda8:	movw	r1, #29242	; 0x723a
   2ddac:	movt	r1, #25968	; 0x6570
   2ddb0:	cmp	r0, r1
   2ddb4:	ble	2de34 <__flatcc_fb_parse@@Base+0x2b64>
   2ddb8:	movw	r1, #26173	; 0x663d
   2ddbc:	movt	r1, #28265	; 0x6e69
   2ddc0:	cmp	r0, r1
   2ddc4:	bgt	2decc <__flatcc_fb_parse@@Base+0x2bfc>
   2ddc8:	movw	r1, #30004	; 0x7534
   2ddcc:	movt	r1, #26476	; 0x676c
   2ddd0:	cmp	r0, r1
   2ddd4:	ble	2e134 <__flatcc_fb_parse@@Base+0x2e64>
   2ddd8:	movw	r1, #29493	; 0x7335
   2dddc:	movt	r1, #26484	; 0x6774
   2dde0:	cmp	r0, r1
   2dde4:	ble	2e468 <__flatcc_fb_parse@@Base+0x3198>
   2dde8:	movw	r1, #29494	; 0x7336
   2ddec:	movt	r1, #26484	; 0x6774
   2ddf0:	cmp	r0, r1
   2ddf4:	beq	2e7f8 <__flatcc_fb_parse@@Base+0x3528>
   2ddf8:	movw	r1, #25140	; 0x6234
   2ddfc:	movt	r1, #27759	; 0x6c6f
   2de00:	cmp	r0, r1
   2de04:	beq	2e82c <__flatcc_fb_parse@@Base+0x355c>
   2de08:	movw	r1, #25908	; 0x6534
   2de0c:	movt	r1, #28014	; 0x6d6e
   2de10:	cmp	r0, r1
   2de14:	ldreq	r0, [r6]
   2de18:	movweq	r1, #28261	; 0x6e65
   2de1c:	movteq	r1, #28021	; 0x6d75
   2de20:	cmpeq	r0, r1
   2de24:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2de28:	mov	r5, r6
   2de2c:	mvn	r4, #996	; 0x3e4
   2de30:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2de34:	movw	r1, #30004	; 0x7534
   2de38:	movt	r1, #14441	; 0x3869
   2de3c:	cmp	r0, r1
   2de40:	ble	2df54 <__flatcc_fb_parse@@Base+0x2c84>
   2de44:	movw	r1, #29748	; 0x7434
   2de48:	movt	r1, #25953	; 0x6561
   2de4c:	cmp	r0, r1
   2de50:	ble	2e1ec <__flatcc_fb_parse@@Base+0x2f1c>
   2de54:	movw	r1, #26934	; 0x6936
   2de58:	movt	r1, #25966	; 0x656e
   2de5c:	cmp	r0, r1
   2de60:	ble	2e4a4 <__flatcc_fb_parse@@Base+0x31d4>
   2de64:	movw	r1, #26935	; 0x6937
   2de68:	movt	r1, #25966	; 0x656e
   2de6c:	cmp	r0, r1
   2de70:	beq	2e854 <__flatcc_fb_parse@@Base+0x3584>
   2de74:	movw	r1, #25654	; 0x6436
   2de78:	movt	r1, #25967	; 0x656f
   2de7c:	cmp	r0, r1
   2de80:	beq	2e888 <__flatcc_fb_parse@@Base+0x35b8>
   2de84:	ldr	ip, [sp, #36]	; 0x24
   2de88:	movw	r1, #29241	; 0x7239
   2de8c:	movt	r1, #25967	; 0x656f
   2de90:	cmp	r0, r1
   2de94:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2de98:	ldr	r0, [pc, #3948]	; 2ee0c <__flatcc_fb_parse@@Base+0x3b3c>
   2de9c:	mov	r1, r6
   2dea0:	mov	r2, #9
   2dea4:	add	r0, pc, r0
   2dea8:	bl	1491c <memcmp@plt>
   2deac:	ldr	ip, [sp, #36]	; 0x24
   2deb0:	cmp	r0, #0
   2deb4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2deb8:	movw	r0, #64572	; 0xfc3c
   2debc:	mov	r5, r6
   2dec0:	movt	r0, #65535	; 0xffff
   2dec4:	sub	r4, r0, #4
   2dec8:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2decc:	movw	r1, #30003	; 0x7533
   2ded0:	movt	r1, #29801	; 0x7469
   2ded4:	cmp	r0, r1
   2ded8:	ble	2e188 <__flatcc_fb_parse@@Base+0x2eb8>
   2dedc:	movw	r1, #26930	; 0x6932
   2dee0:	movt	r1, #29806	; 0x746e
   2dee4:	cmp	r0, r1
   2dee8:	ble	2e4f8 <__flatcc_fb_parse@@Base+0x3228>
   2deec:	movw	r1, #29494	; 0x7336
   2def0:	movt	r1, #29812	; 0x7474
   2def4:	cmp	r0, r1
   2def8:	beq	2e8bc <__flatcc_fb_parse@@Base+0x35ec>
   2defc:	movw	r1, #30006	; 0x7536
   2df00:	movt	r1, #29811	; 0x7473
   2df04:	cmp	r0, r1
   2df08:	beq	2e8e8 <__flatcc_fb_parse@@Base+0x3618>
   2df0c:	ldr	ip, [sp, #36]	; 0x24
   2df10:	movw	r1, #26931	; 0x6933
   2df14:	movt	r1, #29806	; 0x746e
   2df18:	cmp	r0, r1
   2df1c:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2df20:	ldr	r0, [pc, #4008]	; 2eed0 <__flatcc_fb_parse@@Base+0x3c00>
   2df24:	mov	r1, r6
   2df28:	mov	r2, #3
   2df2c:	add	r0, pc, r0
   2df30:	bl	1491c <memcmp@plt>
   2df34:	ldr	ip, [sp, #36]	; 0x24
   2df38:	cmp	r0, #0
   2df3c:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2df40:	movw	r0, #64572	; 0xfc3c
   2df44:	mov	r5, r6
   2df48:	movt	r0, #65535	; 0xffff
   2df4c:	sub	r4, r0, #30
   2df50:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2df54:	movw	r1, #26166	; 0x6636
   2df58:	movt	r1, #13420	; 0x346c
   2df5c:	cmp	r0, r1
   2df60:	bgt	2e238 <__flatcc_fb_parse@@Base+0x2f68>
   2df64:	movw	r1, #26932	; 0x6934
   2df68:	movt	r1, #12910	; 0x326e
   2df6c:	cmp	r0, r1
   2df70:	bgt	2e544 <__flatcc_fb_parse@@Base+0x3274>
   2df74:	movw	r1, #30006	; 0x7536
   2df78:	movt	r1, #12905	; 0x3269
   2df7c:	cmp	r0, r1
   2df80:	beq	2e91c <__flatcc_fb_parse@@Base+0x364c>
   2df84:	movw	r1, #26167	; 0x6637
   2df88:	movt	r1, #12908	; 0x326c
   2df8c:	cmp	r0, r1
   2df90:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2df94:	ldr	r0, [pc, #4068]	; 2ef80 <__flatcc_fb_parse@@Base+0x3cb0>
   2df98:	mov	r1, r6
   2df9c:	mov	r2, #7
   2dfa0:	add	r0, pc, r0
   2dfa4:	bl	1491c <memcmp@plt>
   2dfa8:	ldr	ip, [sp, #36]	; 0x24
   2dfac:	cmp	r0, #0
   2dfb0:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2dfb4:	movw	r0, #64572	; 0xfc3c
   2dfb8:	mov	r5, r6
   2dfbc:	movt	r0, #65535	; 0xffff
   2dfc0:	sub	r4, r0, #32
   2dfc4:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2dfc8:	ldr	r2, [ip]
   2dfcc:	ldr	r0, [sl]
   2dfd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2dfd4:	add	r5, r2, r2, lsl #2
   2dfd8:	add	r3, r0, r5, lsl #2
   2dfdc:	str	r3, [r1]
   2dfe0:	ldr	r1, [r7]
   2dfe4:	cmp	r1, r3
   2dfe8:	bne	2e054 <__flatcc_fb_parse@@Base+0x2d84>
   2dfec:	lsl	r1, r2, #1
   2dff0:	cmp	r2, #0
   2dff4:	mov	r8, sl
   2dff8:	mov	sl, r6
   2dffc:	mov	r6, ip
   2e000:	movweq	r1, #1024	; 0x400
   2e004:	str	r1, [ip]
   2e008:	add	r1, r1, r1, lsl #2
   2e00c:	lsl	r1, r1, #2
   2e010:	bl	14940 <realloc@plt>
   2e014:	cmp	r0, #0
   2e018:	str	r0, [r8]
   2e01c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2e020:	ldr	r1, [r6]
   2e024:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e028:	mov	ip, r6
   2e02c:	mov	r6, sl
   2e030:	mov	r2, r8
   2e034:	mov	sl, r8
   2e038:	add	r1, r1, r1, lsl #2
   2e03c:	add	r1, r0, r1, lsl #2
   2e040:	str	r1, [r3]
   2e044:	add	r1, r0, r5, lsl #2
   2e048:	str	r1, [r7]
   2e04c:	ldr	r8, [pc, #4088]	; 2f04c <__flatcc_fb_parse@@Base+0x3d7c>
   2e050:	add	r8, pc, r8
   2e054:	str	r6, [r1]
   2e058:	add	r0, r6, #1
   2e05c:	str	r4, [r1, #16]
   2e060:	mov	r2, #1
   2e064:	str	r2, [r1, #4]
   2e068:	add	r3, r6, #1
   2e06c:	mov	r6, r0
   2e070:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2e074:	ldr	r2, [r2]
   2e078:	str	r2, [r1, #8]
   2e07c:	ldr	r2, [r9]
   2e080:	sub	r2, r3, r2
   2e084:	str	r2, [r1, #12]
   2e088:	add	r1, r1, #20
   2e08c:	str	r1, [r7]
   2e090:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   2e094:	mov	r4, r6
   2e098:	ldrb	r0, [r4, #1]!
   2e09c:	sub	r1, r0, #48	; 0x30
   2e0a0:	uxtb	r1, r1
   2e0a4:	cmp	r1, #10
   2e0a8:	bcc	2e098 <__flatcc_fb_parse@@Base+0x2dc8>
   2e0ac:	ldr	r2, [sp, #20]
   2e0b0:	cmp	r0, #46	; 0x2e
   2e0b4:	mov	r5, r4
   2e0b8:	bne	2e0e4 <__flatcc_fb_parse@@Base+0x2e14>
   2e0bc:	cmp	r2, r4
   2e0c0:	beq	2f9d4 <__flatcc_fb_parse@@Base+0x4704>
   2e0c4:	ldrb	r1, [r4, #1]
   2e0c8:	add	r0, r4, #1
   2e0cc:	mov	r4, r0
   2e0d0:	sub	r1, r1, #48	; 0x30
   2e0d4:	uxtb	r1, r1
   2e0d8:	cmp	r1, #10
   2e0dc:	bcc	2e0bc <__flatcc_fb_parse@@Base+0x2dec>
   2e0e0:	mov	r4, r0
   2e0e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e0e8:	cmp	r4, r0
   2e0ec:	beq	2f9d4 <__flatcc_fb_parse@@Base+0x4704>
   2e0f0:	ldrb	r0, [r4]
   2e0f4:	orr	r0, r0, #32
   2e0f8:	cmp	r0, #101	; 0x65
   2e0fc:	bne	2f9d8 <__flatcc_fb_parse@@Base+0x4708>
   2e100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e104:	add	r1, r4, #1
   2e108:	cmp	r1, r0
   2e10c:	beq	2f9a4 <__flatcc_fb_parse@@Base+0x46d4>
   2e110:	ldrb	r0, [r1]
   2e114:	cmp	r0, #43	; 0x2b
   2e118:	beq	2f9a0 <__flatcc_fb_parse@@Base+0x46d0>
   2e11c:	cmp	r0, #45	; 0x2d
   2e120:	mov	r0, r1
   2e124:	movne	r0, r4
   2e128:	cmp	r2, r0
   2e12c:	bne	2f9ac <__flatcc_fb_parse@@Base+0x46dc>
   2e130:	b	2f9d4 <__flatcc_fb_parse@@Base+0x4704>
   2e134:	movw	r1, #24888	; 0x6138
   2e138:	movt	r1, #25972	; 0x6574
   2e13c:	cmp	r0, r1
   2e140:	bgt	2e384 <__flatcc_fb_parse@@Base+0x30b4>
   2e144:	movw	r1, #29243	; 0x723b
   2e148:	movt	r1, #25968	; 0x6570
   2e14c:	cmp	r0, r1
   2e150:	beq	2e6d0 <__flatcc_fb_parse@@Base+0x3400>
   2e154:	movw	r1, #29748	; 0x7434
   2e158:	movt	r1, #25970	; 0x6572
   2e15c:	cmp	r0, r1
   2e160:	ldreq	r0, [r6]
   2e164:	movweq	r1, #29300	; 0x7274
   2e168:	movteq	r1, #25973	; 0x6575
   2e16c:	cmpeq	r0, r1
   2e170:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e174:	movw	r0, #64572	; 0xfc3c
   2e178:	mov	r5, r6
   2e17c:	movt	r0, #65535	; 0xffff
   2e180:	sub	r4, r0, #24
   2e184:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e188:	movw	r1, #26174	; 0x663e
   2e18c:	movt	r1, #29289	; 0x7269
   2e190:	cmp	r0, r1
   2e194:	bgt	2e3c8 <__flatcc_fb_parse@@Base+0x30f8>
   2e198:	movw	r1, #26174	; 0x663e
   2e19c:	movt	r1, #28265	; 0x6e69
   2e1a0:	cmp	r0, r1
   2e1a4:	beq	2e704 <__flatcc_fb_parse@@Base+0x3434>
   2e1a8:	movw	r1, #30005	; 0x7535
   2e1ac:	movt	r1, #28270	; 0x6e6e
   2e1b0:	cmp	r0, r1
   2e1b4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e1b8:	ldr	r0, [pc, #4064]	; 2f1a0 <__flatcc_fb_parse@@Base+0x3ed0>
   2e1bc:	mov	r1, r6
   2e1c0:	mov	r2, #5
   2e1c4:	add	r0, pc, r0
   2e1c8:	bl	1491c <memcmp@plt>
   2e1cc:	ldr	ip, [sp, #36]	; 0x24
   2e1d0:	cmp	r0, #0
   2e1d4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e1d8:	movw	r0, #64572	; 0xfc3c
   2e1dc:	mov	r5, r6
   2e1e0:	movt	r0, #65535	; 0xffff
   2e1e4:	sub	r4, r0, #12
   2e1e8:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e1ec:	movw	r1, #26164	; 0x6634
   2e1f0:	movt	r1, #25953	; 0x6561
   2e1f4:	cmp	r0, r1
   2e1f8:	bgt	2e41c <__flatcc_fb_parse@@Base+0x314c>
   2e1fc:	movw	r1, #30005	; 0x7535
   2e200:	movt	r1, #14441	; 0x3869
   2e204:	cmp	r0, r1
   2e208:	beq	2e738 <__flatcc_fb_parse@@Base+0x3468>
   2e20c:	movw	r1, #26932	; 0x6934
   2e210:	movt	r1, #14446	; 0x386e
   2e214:	cmp	r0, r1
   2e218:	ldreq	r0, [r6]
   2e21c:	movweq	r1, #28265	; 0x6e69
   2e220:	movteq	r1, #14452	; 0x3874
   2e224:	cmpeq	r0, r1
   2e228:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e22c:	mov	r5, r6
   2e230:	mvn	r4, #992	; 0x3e0
   2e234:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e238:	movw	r1, #30005	; 0x7535
   2e23c:	movt	r1, #13929	; 0x3669
   2e240:	cmp	r0, r1
   2e244:	bgt	2e598 <__flatcc_fb_parse@@Base+0x32c8>
   2e248:	movw	r1, #26167	; 0x6637
   2e24c:	movt	r1, #13420	; 0x346c
   2e250:	cmp	r0, r1
   2e254:	beq	2e950 <__flatcc_fb_parse@@Base+0x3680>
   2e258:	movw	r1, #26933	; 0x6935
   2e25c:	movt	r1, #13422	; 0x346e
   2e260:	cmp	r0, r1
   2e264:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e268:	ldr	r0, [pc, #4048]	; 2f240 <__flatcc_fb_parse@@Base+0x3f70>
   2e26c:	mov	r1, r6
   2e270:	mov	r2, #5
   2e274:	add	r0, pc, r0
   2e278:	bl	1491c <memcmp@plt>
   2e27c:	ldr	ip, [sp, #36]	; 0x24
   2e280:	cmp	r0, #0
   2e284:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e288:	movw	r0, #64572	; 0xfc3c
   2e28c:	mov	r5, r6
   2e290:	movt	r0, #65535	; 0xffff
   2e294:	sub	r4, r0, #26
   2e298:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e29c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e2a0:	add	r5, r6, #1
   2e2a4:	cmp	r5, r0
   2e2a8:	beq	2e5ec <__flatcc_fb_parse@@Base+0x331c>
   2e2ac:	ldrb	r0, [r5]
   2e2b0:	cmp	r0, #61	; 0x3d
   2e2b4:	bne	2e5ec <__flatcc_fb_parse@@Base+0x331c>
   2e2b8:	ldr	r2, [ip]
   2e2bc:	ldr	r0, [sl]
   2e2c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e2c4:	add	r5, r2, r2, lsl #2
   2e2c8:	add	r3, r0, r5, lsl #2
   2e2cc:	str	r3, [r1]
   2e2d0:	ldr	r1, [r7]
   2e2d4:	cmp	r1, r3
   2e2d8:	bne	2e34c <__flatcc_fb_parse@@Base+0x307c>
   2e2dc:	lsl	r1, r2, #1
   2e2e0:	cmp	r2, #0
   2e2e4:	mov	r8, r9
   2e2e8:	mov	r9, sl
   2e2ec:	mov	sl, r6
   2e2f0:	mov	r6, ip
   2e2f4:	movweq	r1, #1024	; 0x400
   2e2f8:	str	r1, [ip]
   2e2fc:	add	r1, r1, r1, lsl #2
   2e300:	lsl	r1, r1, #2
   2e304:	bl	14940 <realloc@plt>
   2e308:	cmp	r0, #0
   2e30c:	str	r0, [r9]
   2e310:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2e314:	ldr	r1, [r6]
   2e318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e31c:	mov	ip, r6
   2e320:	mov	r6, sl
   2e324:	mov	r2, r9
   2e328:	mov	sl, r9
   2e32c:	mov	r9, r8
   2e330:	add	r1, r1, r1, lsl #2
   2e334:	add	r1, r0, r1, lsl #2
   2e338:	str	r1, [r3]
   2e33c:	add	r1, r0, r5, lsl #2
   2e340:	str	r1, [r7]
   2e344:	ldr	r8, [pc, #4028]	; 2f308 <__flatcc_fb_parse@@Base+0x4038>
   2e348:	add	r8, pc, r8
   2e34c:	orr	r0, r4, #15616	; 0x3d00
   2e350:	str	r6, [r1]
   2e354:	add	r3, r6, #1
   2e358:	add	r2, r6, #2
   2e35c:	str	r0, [r1, #16]
   2e360:	mov	r0, #2
   2e364:	mov	r6, r2
   2e368:	str	r0, [r1, #4]
   2e36c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e370:	ldr	r0, [r0]
   2e374:	str	r0, [r1, #8]
   2e378:	ldr	r0, [r9]
   2e37c:	sub	r0, r3, r0
   2e380:	b	30fc0 <__flatcc_fb_parse@@Base+0x5cf0>
   2e384:	movw	r1, #24889	; 0x6139
   2e388:	movt	r1, #25972	; 0x6574
   2e38c:	cmp	r0, r1
   2e390:	beq	2e764 <__flatcc_fb_parse@@Base+0x3494>
   2e394:	movw	r1, #25140	; 0x6234
   2e398:	movt	r1, #25977	; 0x6579
   2e39c:	cmp	r0, r1
   2e3a0:	ldreq	r0, [r6]
   2e3a4:	movweq	r1, #31074	; 0x7962
   2e3a8:	movteq	r1, #25972	; 0x6574
   2e3ac:	cmpeq	r0, r1
   2e3b0:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e3b4:	movw	r0, #64572	; 0xfc3c
   2e3b8:	mov	r5, r6
   2e3bc:	movt	r0, #65535	; 0xffff
   2e3c0:	sub	r4, r0, #34	; 0x22
   2e3c4:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e3c8:	movw	r1, #26175	; 0x663f
   2e3cc:	movt	r1, #29289	; 0x7269
   2e3d0:	cmp	r0, r1
   2e3d4:	beq	2e798 <__flatcc_fb_parse@@Base+0x34c8>
   2e3d8:	movw	r1, #29493	; 0x7335
   2e3dc:	movt	r1, #29800	; 0x7468
   2e3e0:	cmp	r0, r1
   2e3e4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e3e8:	ldr	r0, [pc, #4064]	; 2f3d0 <__flatcc_fb_parse@@Base+0x4100>
   2e3ec:	mov	r1, r6
   2e3f0:	mov	r2, #5
   2e3f4:	add	r0, pc, r0
   2e3f8:	bl	1491c <memcmp@plt>
   2e3fc:	ldr	ip, [sp, #36]	; 0x24
   2e400:	cmp	r0, #0
   2e404:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e408:	movw	r0, #64572	; 0xfc3c
   2e40c:	mov	r5, r6
   2e410:	movt	r0, #65535	; 0xffff
   2e414:	sub	r4, r0, #20
   2e418:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e41c:	movw	r1, #26165	; 0x6635
   2e420:	movt	r1, #25953	; 0x6561
   2e424:	cmp	r0, r1
   2e428:	beq	2e7c4 <__flatcc_fb_parse@@Base+0x34f4>
   2e42c:	movw	r1, #28217	; 0x6e39
   2e430:	movt	r1, #25953	; 0x6561
   2e434:	cmp	r0, r1
   2e438:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e43c:	ldr	r0, [pc, #4076]	; 2f430 <__flatcc_fb_parse@@Base+0x4160>
   2e440:	mov	r1, r6
   2e444:	mov	r2, #9
   2e448:	add	r0, pc, r0
   2e44c:	bl	1491c <memcmp@plt>
   2e450:	ldr	ip, [sp, #36]	; 0x24
   2e454:	cmp	r0, #0
   2e458:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e45c:	mov	r5, r6
   2e460:	mvn	r4, #968	; 0x3c8
   2e464:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e468:	movw	r1, #30005	; 0x7535
   2e46c:	movt	r1, #26476	; 0x676c
   2e470:	cmp	r0, r1
   2e474:	beq	2e984 <__flatcc_fb_parse@@Base+0x36b4>
   2e478:	movw	r1, #27700	; 0x6c34
   2e47c:	movt	r1, #26479	; 0x676f
   2e480:	cmp	r0, r1
   2e484:	ldreq	r0, [r6]
   2e488:	movweq	r1, #28524	; 0x6f6c
   2e48c:	movteq	r1, #26478	; 0x676e
   2e490:	cmpeq	r0, r1
   2e494:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e498:	mov	r5, r6
   2e49c:	mvn	r4, #988	; 0x3dc
   2e4a0:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e4a4:	movw	r1, #29749	; 0x7435
   2e4a8:	movt	r1, #25953	; 0x6561
   2e4ac:	cmp	r0, r1
   2e4b0:	beq	2e9b0 <__flatcc_fb_parse@@Base+0x36e0>
   2e4b4:	movw	r1, #30005	; 0x7535
   2e4b8:	movt	r1, #25954	; 0x6562
   2e4bc:	cmp	r0, r1
   2e4c0:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e4c4:	ldr	r0, [pc, #4040]	; 2f494 <__flatcc_fb_parse@@Base+0x41c4>
   2e4c8:	mov	r1, r6
   2e4cc:	mov	r2, #5
   2e4d0:	add	r0, pc, r0
   2e4d4:	bl	1491c <memcmp@plt>
   2e4d8:	ldr	ip, [sp, #36]	; 0x24
   2e4dc:	cmp	r0, #0
   2e4e0:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e4e4:	movw	r0, #64572	; 0xfc3c
   2e4e8:	mov	r5, r6
   2e4ec:	movt	r0, #65535	; 0xffff
   2e4f0:	sub	r4, r0, #18
   2e4f4:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e4f8:	movw	r1, #30004	; 0x7534
   2e4fc:	movt	r1, #29801	; 0x7469
   2e500:	cmp	r0, r1
   2e504:	beq	2e9e4 <__flatcc_fb_parse@@Base+0x3714>
   2e508:	movw	r1, #26165	; 0x6635
   2e50c:	movt	r1, #29804	; 0x746c
   2e510:	cmp	r0, r1
   2e514:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e518:	ldr	r0, [pc, #3960]	; 2f498 <__flatcc_fb_parse@@Base+0x41c8>
   2e51c:	mov	r1, r6
   2e520:	mov	r2, #5
   2e524:	add	r0, pc, r0
   2e528:	bl	1491c <memcmp@plt>
   2e52c:	ldr	ip, [sp, #36]	; 0x24
   2e530:	cmp	r0, #0
   2e534:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e538:	mov	r5, r6
   2e53c:	mvn	r4, #984	; 0x3d8
   2e540:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e544:	movw	r1, #26933	; 0x6935
   2e548:	movt	r1, #12910	; 0x326e
   2e54c:	cmp	r0, r1
   2e550:	beq	2ea0c <__flatcc_fb_parse@@Base+0x373c>
   2e554:	movw	r1, #30006	; 0x7536
   2e558:	movt	r1, #13417	; 0x3469
   2e55c:	cmp	r0, r1
   2e560:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e564:	ldr	r0, [pc, #4056]	; 2f544 <__flatcc_fb_parse@@Base+0x4274>
   2e568:	mov	r1, r6
   2e56c:	mov	r2, #6
   2e570:	add	r0, pc, r0
   2e574:	bl	1491c <memcmp@plt>
   2e578:	ldr	ip, [sp, #36]	; 0x24
   2e57c:	cmp	r0, #0
   2e580:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e584:	movw	r0, #64572	; 0xfc3c
   2e588:	mov	r5, r6
   2e58c:	movt	r0, #65535	; 0xffff
   2e590:	sub	r4, r0, #14
   2e594:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e598:	movw	r1, #30006	; 0x7536
   2e59c:	movt	r1, #13929	; 0x3669
   2e5a0:	cmp	r0, r1
   2e5a4:	beq	2ea44 <__flatcc_fb_parse@@Base+0x3774>
   2e5a8:	movw	r1, #26933	; 0x6935
   2e5ac:	movt	r1, #13934	; 0x366e
   2e5b0:	cmp	r0, r1
   2e5b4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e5b8:	ldr	r0, [pc, #4088]	; 2f5b8 <__flatcc_fb_parse@@Base+0x42e8>
   2e5bc:	mov	r1, r6
   2e5c0:	mov	r2, #5
   2e5c4:	add	r0, pc, r0
   2e5c8:	bl	1491c <memcmp@plt>
   2e5cc:	ldr	ip, [sp, #36]	; 0x24
   2e5d0:	cmp	r0, #0
   2e5d4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e5d8:	movw	r0, #64572	; 0xfc3c
   2e5dc:	mov	r5, r6
   2e5e0:	movt	r0, #65535	; 0xffff
   2e5e4:	sub	r4, r0, #28
   2e5e8:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e5ec:	mov	r0, sl
   2e5f0:	ldr	r2, [ip]
   2e5f4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e5f8:	mov	sl, r6
   2e5fc:	mov	lr, r0
   2e600:	ldr	r0, [r0]
   2e604:	add	r6, r2, r2, lsl #2
   2e608:	add	r3, r0, r6, lsl #2
   2e60c:	str	r3, [r1]
   2e610:	ldr	r1, [r7]
   2e614:	cmp	r1, r3
   2e618:	bne	2e678 <__flatcc_fb_parse@@Base+0x33a8>
   2e61c:	lsl	r1, r2, #1
   2e620:	cmp	r2, #0
   2e624:	mov	r8, ip
   2e628:	movweq	r1, #1024	; 0x400
   2e62c:	str	r1, [ip]
   2e630:	add	r1, r1, r1, lsl #2
   2e634:	lsl	r1, r1, #2
   2e638:	bl	14940 <realloc@plt>
   2e63c:	ldr	r1, [sp, #32]
   2e640:	cmp	r0, #0
   2e644:	str	r0, [r1]
   2e648:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2e64c:	ldr	r1, [r8]
   2e650:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2e654:	mov	ip, r8
   2e658:	ldr	lr, [sp, #32]
   2e65c:	add	r1, r1, r1, lsl #2
   2e660:	add	r1, r0, r1, lsl #2
   2e664:	str	r1, [r2]
   2e668:	add	r1, r0, r6, lsl #2
   2e66c:	str	r1, [r7]
   2e670:	ldr	r8, [pc, #4076]	; 2f664 <__flatcc_fb_parse@@Base+0x4394>
   2e674:	add	r8, pc, r8
   2e678:	mov	r0, #1
   2e67c:	str	sl, [r1]
   2e680:	str	r4, [r1, #16]
   2e684:	add	r2, sl, #1
   2e688:	mov	r6, r5
   2e68c:	mov	sl, lr
   2e690:	str	r0, [r1, #4]
   2e694:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e698:	b	30fb0 <__flatcc_fb_parse@@Base+0x5ce0>
   2e69c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e6a0:	add	r6, r6, #1
   2e6a4:	cmp	r6, r0
   2e6a8:	beq	31c90 <__flatcc_fb_parse@@Base+0x69c0>
   2e6ac:	ldrb	r0, [r6]
   2e6b0:	cmp	r0, #32
   2e6b4:	cmpne	r0, #9
   2e6b8:	bne	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   2e6bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e6c0:	add	r6, r6, #1
   2e6c4:	cmp	r0, r6
   2e6c8:	bne	2e6ac <__flatcc_fb_parse@@Base+0x33dc>
   2e6cc:	b	31c90 <__flatcc_fb_parse@@Base+0x69c0>
   2e6d0:	ldr	r0, [pc, #3984]	; 2f668 <__flatcc_fb_parse@@Base+0x4398>
   2e6d4:	mov	r1, r6
   2e6d8:	mov	r2, #11
   2e6dc:	add	r0, pc, r0
   2e6e0:	bl	1491c <memcmp@plt>
   2e6e4:	ldr	ip, [sp, #36]	; 0x24
   2e6e8:	cmp	r0, #0
   2e6ec:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e6f0:	movw	r0, #64572	; 0xfc3c
   2e6f4:	mov	r5, r6
   2e6f8:	movt	r0, #65535	; 0xffff
   2e6fc:	sub	r4, r0, #3
   2e700:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e704:	ldr	r0, [pc, #3936]	; 2f66c <__flatcc_fb_parse@@Base+0x439c>
   2e708:	mov	r1, r6
   2e70c:	mov	r2, #14
   2e710:	add	r0, pc, r0
   2e714:	bl	1491c <memcmp@plt>
   2e718:	ldr	ip, [sp, #36]	; 0x24
   2e71c:	cmp	r0, #0
   2e720:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e724:	movw	r0, #64572	; 0xfc3c
   2e728:	mov	r5, r6
   2e72c:	movt	r0, #65535	; 0xffff
   2e730:	sub	r4, r0, #2
   2e734:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e738:	ldr	r0, [pc, #4084]	; 2f734 <__flatcc_fb_parse@@Base+0x4464>
   2e73c:	mov	r1, r6
   2e740:	mov	r2, #5
   2e744:	add	r0, pc, r0
   2e748:	bl	1491c <memcmp@plt>
   2e74c:	ldr	ip, [sp, #36]	; 0x24
   2e750:	cmp	r0, #0
   2e754:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e758:	mov	r5, r6
   2e75c:	mvn	r4, #980	; 0x3d4
   2e760:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e764:	ldr	r0, [pc, #4044]	; 2f738 <__flatcc_fb_parse@@Base+0x4468>
   2e768:	mov	r1, r6
   2e76c:	mov	r2, #9
   2e770:	add	r0, pc, r0
   2e774:	bl	1491c <memcmp@plt>
   2e778:	ldr	ip, [sp, #36]	; 0x24
   2e77c:	cmp	r0, #0
   2e780:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e784:	movw	r0, #64572	; 0xfc3c
   2e788:	mov	r5, r6
   2e78c:	movt	r0, #65535	; 0xffff
   2e790:	sub	r4, r0, #6
   2e794:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e798:	ldr	r0, [pc, #3996]	; 2f73c <__flatcc_fb_parse@@Base+0x446c>
   2e79c:	mov	r1, r6
   2e7a0:	mov	r2, #15
   2e7a4:	add	r0, pc, r0
   2e7a8:	bl	1491c <memcmp@plt>
   2e7ac:	ldr	ip, [sp, #36]	; 0x24
   2e7b0:	cmp	r0, #0
   2e7b4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e7b8:	mov	r5, r6
   2e7bc:	mvn	r4, #964	; 0x3c4
   2e7c0:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e7c4:	ldr	r0, [pc, #3956]	; 2f740 <__flatcc_fb_parse@@Base+0x4470>
   2e7c8:	mov	r1, r6
   2e7cc:	mov	r2, #5
   2e7d0:	add	r0, pc, r0
   2e7d4:	bl	1491c <memcmp@plt>
   2e7d8:	ldr	ip, [sp, #36]	; 0x24
   2e7dc:	cmp	r0, #0
   2e7e0:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e7e4:	movw	r0, #64572	; 0xfc3c
   2e7e8:	mov	r5, r6
   2e7ec:	movt	r0, #65535	; 0xffff
   2e7f0:	sub	r4, r0, #22
   2e7f4:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e7f8:	ldr	r0, [pc, #4080]	; 2f7f0 <__flatcc_fb_parse@@Base+0x4520>
   2e7fc:	mov	r1, r6
   2e800:	mov	r2, #6
   2e804:	add	r0, pc, r0
   2e808:	bl	1491c <memcmp@plt>
   2e80c:	ldr	ip, [sp, #36]	; 0x24
   2e810:	cmp	r0, #0
   2e814:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e818:	movw	r0, #64572	; 0xfc3c
   2e81c:	mov	r5, r6
   2e820:	movt	r0, #65535	; 0xffff
   2e824:	sub	r4, r0, #10
   2e828:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e82c:	ldr	r0, [r6]
   2e830:	movw	r1, #28514	; 0x6f62
   2e834:	movt	r1, #27759	; 0x6c6f
   2e838:	cmp	r0, r1
   2e83c:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e840:	movw	r0, #64572	; 0xfc3c
   2e844:	mov	r5, r6
   2e848:	movt	r0, #65535	; 0xffff
   2e84c:	sub	r4, r0, #35	; 0x23
   2e850:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e854:	ldr	r0, [pc, #3992]	; 2f7f4 <__flatcc_fb_parse@@Base+0x4524>
   2e858:	mov	r1, r6
   2e85c:	mov	r2, #7
   2e860:	add	r0, pc, r0
   2e864:	bl	1491c <memcmp@plt>
   2e868:	ldr	ip, [sp, #36]	; 0x24
   2e86c:	cmp	r0, #0
   2e870:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e874:	movw	r0, #64572	; 0xfc3c
   2e878:	mov	r5, r6
   2e87c:	movt	r0, #65535	; 0xffff
   2e880:	sub	r4, r0, #7
   2e884:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e888:	ldr	r0, [pc, #3944]	; 2f7f8 <__flatcc_fb_parse@@Base+0x4528>
   2e88c:	mov	r1, r6
   2e890:	mov	r2, #6
   2e894:	add	r0, pc, r0
   2e898:	bl	1491c <memcmp@plt>
   2e89c:	ldr	ip, [sp, #36]	; 0x24
   2e8a0:	cmp	r0, #0
   2e8a4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e8a8:	movw	r0, #64572	; 0xfc3c
   2e8ac:	mov	r5, r6
   2e8b0:	movt	r0, #65535	; 0xffff
   2e8b4:	sub	r4, r0, #11
   2e8b8:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e8bc:	ldr	r0, [pc, #4064]	; 2f8a4 <__flatcc_fb_parse@@Base+0x45d4>
   2e8c0:	mov	r1, r6
   2e8c4:	mov	r2, #6
   2e8c8:	add	r0, pc, r0
   2e8cc:	bl	1491c <memcmp@plt>
   2e8d0:	ldr	ip, [sp, #36]	; 0x24
   2e8d4:	cmp	r0, #0
   2e8d8:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e8dc:	mov	r5, r6
   2e8e0:	mvn	r4, #972	; 0x3cc
   2e8e4:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e8e8:	ldr	r0, [pc, #4024]	; 2f8a8 <__flatcc_fb_parse@@Base+0x45d8>
   2e8ec:	mov	r1, r6
   2e8f0:	mov	r2, #6
   2e8f4:	add	r0, pc, r0
   2e8f8:	bl	1491c <memcmp@plt>
   2e8fc:	ldr	ip, [sp, #36]	; 0x24
   2e900:	cmp	r0, #0
   2e904:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e908:	movw	r0, #64572	; 0xfc3c
   2e90c:	mov	r5, r6
   2e910:	movt	r0, #65535	; 0xffff
   2e914:	sub	r4, r0, #8
   2e918:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e91c:	ldr	r0, [pc, #3976]	; 2f8ac <__flatcc_fb_parse@@Base+0x45dc>
   2e920:	mov	r1, r6
   2e924:	mov	r2, #6
   2e928:	add	r0, pc, r0
   2e92c:	bl	1491c <memcmp@plt>
   2e930:	ldr	ip, [sp, #36]	; 0x24
   2e934:	cmp	r0, #0
   2e938:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e93c:	movw	r0, #64572	; 0xfc3c
   2e940:	mov	r5, r6
   2e944:	movt	r0, #65535	; 0xffff
   2e948:	sub	r4, r0, #15
   2e94c:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e950:	ldr	r0, [pc, #3928]	; 2f8b0 <__flatcc_fb_parse@@Base+0x45e0>
   2e954:	mov	r1, r6
   2e958:	mov	r2, #7
   2e95c:	add	r0, pc, r0
   2e960:	bl	1491c <memcmp@plt>
   2e964:	ldr	ip, [sp, #36]	; 0x24
   2e968:	cmp	r0, #0
   2e96c:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e970:	movw	r0, #64572	; 0xfc3c
   2e974:	mov	r5, r6
   2e978:	movt	r0, #65535	; 0xffff
   2e97c:	sub	r4, r0, #31
   2e980:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e984:	ldr	r0, [pc, #3880]	; 2f8b4 <__flatcc_fb_parse@@Base+0x45e4>
   2e988:	mov	r1, r6
   2e98c:	mov	r2, #5
   2e990:	add	r0, pc, r0
   2e994:	bl	1491c <memcmp@plt>
   2e998:	ldr	ip, [sp, #36]	; 0x24
   2e99c:	cmp	r0, #0
   2e9a0:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e9a4:	mov	r5, r6
   2e9a8:	mvn	r4, #976	; 0x3d0
   2e9ac:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e9b0:	ldr	r0, [pc, #4068]	; 2f99c <__flatcc_fb_parse@@Base+0x46cc>
   2e9b4:	mov	r1, r6
   2e9b8:	mov	r2, #5
   2e9bc:	add	r0, pc, r0
   2e9c0:	bl	1491c <memcmp@plt>
   2e9c4:	ldr	ip, [sp, #36]	; 0x24
   2e9c8:	cmp	r0, #0
   2e9cc:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e9d0:	movw	r0, #64572	; 0xfc3c
   2e9d4:	mov	r5, r6
   2e9d8:	movt	r0, #65535	; 0xffff
   2e9dc:	sub	r4, r0, #19
   2e9e0:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2e9e4:	ldr	r0, [r6]
   2e9e8:	movw	r1, #26997	; 0x6975
   2e9ec:	movt	r1, #29806	; 0x746e
   2e9f0:	cmp	r0, r1
   2e9f4:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2e9f8:	movw	r0, #64572	; 0xfc3c
   2e9fc:	mov	r5, r6
   2ea00:	movt	r0, #65535	; 0xffff
   2ea04:	sub	r4, r0, #23
   2ea08:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2ea0c:	ldr	r0, [pc, #4024]	; 2f9cc <__flatcc_fb_parse@@Base+0x46fc>
   2ea10:	mov	r1, r6
   2ea14:	mov	r2, #5
   2ea18:	add	r0, pc, r0
   2ea1c:	bl	1491c <memcmp@plt>
   2ea20:	ldr	ip, [sp, #36]	; 0x24
   2ea24:	cmp	r0, #0
   2ea28:	bne	2ea64 <__flatcc_fb_parse@@Base+0x3794>
   2ea2c:	movw	r0, #64572	; 0xfc3c
   2ea30:	mov	r5, r6
   2ea34:	movt	r0, #65535	; 0xffff
   2ea38:	sub	r4, r0, #27
   2ea3c:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2ea40:	andeq	sl, r2, r8, ror #15
   2ea44:	ldr	r0, [pc, #3972]	; 2f9d0 <__flatcc_fb_parse@@Base+0x4700>
   2ea48:	mov	r1, r6
   2ea4c:	mov	r2, #6
   2ea50:	add	r0, pc, r0
   2ea54:	bl	1491c <memcmp@plt>
   2ea58:	ldr	ip, [sp, #36]	; 0x24
   2ea5c:	cmp	r0, #0
   2ea60:	beq	2fd8c <__flatcc_fb_parse@@Base+0x4abc>
   2ea64:	mov	r5, r6
   2ea68:	mov	r4, #9
   2ea6c:	ldr	r2, [ip]
   2ea70:	ldr	r0, [sl]
   2ea74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ea78:	mov	lr, sl
   2ea7c:	mov	sl, r7
   2ea80:	add	r6, r2, r2, lsl #2
   2ea84:	add	r3, r0, r6, lsl #2
   2ea88:	str	r3, [r1]
   2ea8c:	ldr	r1, [r7]
   2ea90:	cmp	r1, r3
   2ea94:	bne	2eaf4 <__flatcc_fb_parse@@Base+0x3824>
   2ea98:	lsl	r1, r2, #1
   2ea9c:	cmp	r2, #0
   2eaa0:	mov	r8, lr
   2eaa4:	mov	r7, ip
   2eaa8:	movweq	r1, #1024	; 0x400
   2eaac:	str	r1, [ip]
   2eab0:	add	r1, r1, r1, lsl #2
   2eab4:	lsl	r1, r1, #2
   2eab8:	bl	14940 <realloc@plt>
   2eabc:	cmp	r0, #0
   2eac0:	str	r0, [r8]
   2eac4:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2eac8:	ldr	r1, [r7]
   2eacc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ead0:	ldr	lr, [sp, #32]
   2ead4:	mov	ip, r7
   2ead8:	add	r1, r1, r1, lsl #2
   2eadc:	add	r1, r0, r1, lsl #2
   2eae0:	str	r1, [r2]
   2eae4:	add	r1, r0, r6, lsl #2
   2eae8:	str	r1, [sl]
   2eaec:	ldr	r8, [pc, #3960]	; 2fa6c <__flatcc_fb_parse@@Base+0x479c>
   2eaf0:	add	r8, pc, r8
   2eaf4:	ldr	r0, [sp, #44]	; 0x2c
   2eaf8:	str	r5, [r1]
   2eafc:	str	r4, [r1, #16]
   2eb00:	ldr	r3, [sp, #40]	; 0x28
   2eb04:	add	r2, r5, #1
   2eb08:	mov	r6, r9
   2eb0c:	mov	r7, sl
   2eb10:	str	r0, [r1, #4]
   2eb14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2eb18:	mov	r9, r3
   2eb1c:	ldr	r0, [r0]
   2eb20:	str	r0, [r1, #8]
   2eb24:	ldr	r0, [r3]
   2eb28:	sub	r0, r2, r0
   2eb2c:	str	r0, [r1, #12]
   2eb30:	add	r0, r1, #20
   2eb34:	str	r0, [sl]
   2eb38:	mov	sl, lr
   2eb3c:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   2eb40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2eb44:	add	r4, r6, #1
   2eb48:	cmp	r4, r0
   2eb4c:	beq	2fda0 <__flatcc_fb_parse@@Base+0x4ad0>
   2eb50:	ldrb	r0, [r4]
   2eb54:	cmp	r0, #61	; 0x3d
   2eb58:	beq	3073c <__flatcc_fb_parse@@Base+0x546c>
   2eb5c:	cmp	r0, #60	; 0x3c
   2eb60:	beq	307bc <__flatcc_fb_parse@@Base+0x54ec>
   2eb64:	cmp	r0, #45	; 0x2d
   2eb68:	bne	2fda0 <__flatcc_fb_parse@@Base+0x4ad0>
   2eb6c:	ldr	r2, [ip]
   2eb70:	ldr	r0, [sl]
   2eb74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eb78:	add	r4, r2, r2, lsl #2
   2eb7c:	add	r3, r0, r4, lsl #2
   2eb80:	str	r3, [r1]
   2eb84:	ldr	r1, [r7]
   2eb88:	cmp	r1, r3
   2eb8c:	bne	2ebdc <__flatcc_fb_parse@@Base+0x390c>
   2eb90:	lsl	r1, r2, #1
   2eb94:	cmp	r2, #0
   2eb98:	mov	r5, ip
   2eb9c:	movweq	r1, #1024	; 0x400
   2eba0:	str	r1, [ip]
   2eba4:	add	r1, r1, r1, lsl #2
   2eba8:	lsl	r1, r1, #2
   2ebac:	bl	14940 <realloc@plt>
   2ebb0:	cmp	r0, #0
   2ebb4:	str	r0, [sl]
   2ebb8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2ebbc:	ldr	r1, [r5]
   2ebc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ebc4:	mov	ip, r5
   2ebc8:	add	r1, r1, r1, lsl #2
   2ebcc:	add	r1, r0, r1, lsl #2
   2ebd0:	str	r1, [r2]
   2ebd4:	add	r1, r0, r4, lsl #2
   2ebd8:	str	r1, [r7]
   2ebdc:	add	r0, r6, #2
   2ebe0:	str	r6, [r1]
   2ebe4:	movw	r2, #11580	; 0x2d3c
   2ebe8:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2ebec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ebf0:	add	r4, r6, #1
   2ebf4:	cmp	r4, r0
   2ebf8:	beq	2fb0c <__flatcc_fb_parse@@Base+0x483c>
   2ebfc:	ldrb	r0, [r4]
   2ec00:	cmp	r0, #43	; 0x2b
   2ec04:	beq	30180 <__flatcc_fb_parse@@Base+0x4eb0>
   2ec08:	cmp	r0, #61	; 0x3d
   2ec0c:	bne	2fb0c <__flatcc_fb_parse@@Base+0x483c>
   2ec10:	ldr	r2, [ip]
   2ec14:	ldr	r0, [sl]
   2ec18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ec1c:	add	r4, r2, r2, lsl #2
   2ec20:	add	r3, r0, r4, lsl #2
   2ec24:	str	r3, [r1]
   2ec28:	ldr	r1, [r7]
   2ec2c:	cmp	r1, r3
   2ec30:	bne	2ec80 <__flatcc_fb_parse@@Base+0x39b0>
   2ec34:	lsl	r1, r2, #1
   2ec38:	cmp	r2, #0
   2ec3c:	mov	r5, ip
   2ec40:	movweq	r1, #1024	; 0x400
   2ec44:	str	r1, [ip]
   2ec48:	add	r1, r1, r1, lsl #2
   2ec4c:	lsl	r1, r1, #2
   2ec50:	bl	14940 <realloc@plt>
   2ec54:	cmp	r0, #0
   2ec58:	str	r0, [sl]
   2ec5c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2ec60:	ldr	r1, [r5]
   2ec64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ec68:	mov	ip, r5
   2ec6c:	add	r1, r1, r1, lsl #2
   2ec70:	add	r1, r0, r1, lsl #2
   2ec74:	str	r1, [r2]
   2ec78:	add	r1, r0, r4, lsl #2
   2ec7c:	str	r1, [r7]
   2ec80:	add	r0, r6, #2
   2ec84:	str	r6, [r1]
   2ec88:	movw	r2, #15659	; 0x3d2b
   2ec8c:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2ec90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ec94:	add	r4, r6, #1
   2ec98:	cmp	r4, r0
   2ec9c:	beq	2fe40 <__flatcc_fb_parse@@Base+0x4b70>
   2eca0:	ldrb	r0, [r4]
   2eca4:	cmp	r0, #42	; 0x2a
   2eca8:	beq	3086c <__flatcc_fb_parse@@Base+0x559c>
   2ecac:	cmp	r0, #61	; 0x3d
   2ecb0:	beq	308a0 <__flatcc_fb_parse@@Base+0x55d0>
   2ecb4:	cmp	r0, #47	; 0x2f
   2ecb8:	bne	2fe40 <__flatcc_fb_parse@@Base+0x4b70>
   2ecbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ecc0:	add	r0, r6, #2
   2ecc4:	cmp	r0, r1
   2ecc8:	beq	31150 <__flatcc_fb_parse@@Base+0x5e80>
   2eccc:	ldrb	r1, [r0]
   2ecd0:	sub	r2, r1, #33	; 0x21
   2ecd4:	sub	r1, r1, #47	; 0x2f
   2ecd8:	clz	r2, r2
   2ecdc:	clz	r1, r1
   2ece0:	lsr	r2, r2, #5
   2ece4:	lsr	r1, r1, #5
   2ece8:	orr	r1, r1, r2
   2ecec:	b	31154 <__flatcc_fb_parse@@Base+0x5e84>
   2ecf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ecf4:	add	r5, r6, #1
   2ecf8:	mov	r4, r6
   2ecfc:	cmp	r5, r0
   2ed00:	beq	2e098 <__flatcc_fb_parse@@Base+0x2dc8>
   2ed04:	ldrb	r0, [r5]
   2ed08:	mov	r4, r6
   2ed0c:	orr	r0, r0, #32
   2ed10:	cmp	r0, #120	; 0x78
   2ed14:	bne	2e098 <__flatcc_fb_parse@@Base+0x2dc8>
   2ed18:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2ed1c:	add	r0, r6, #2
   2ed20:	cmp	r0, r4
   2ed24:	beq	31088 <__flatcc_fb_parse@@Base+0x5db8>
   2ed28:	ldrb	r1, [r0]
   2ed2c:	sub	r2, r1, #48	; 0x30
   2ed30:	uxtb	r2, r2
   2ed34:	cmp	r2, #10
   2ed38:	bcc	2ed50 <__flatcc_fb_parse@@Base+0x3a80>
   2ed3c:	orr	r1, r1, #32
   2ed40:	sub	r1, r1, #97	; 0x61
   2ed44:	uxtb	r1, r1
   2ed48:	cmp	r1, #5
   2ed4c:	bhi	31084 <__flatcc_fb_parse@@Base+0x5db4>
   2ed50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ed54:	add	r0, r0, #1
   2ed58:	cmp	r1, r0
   2ed5c:	bne	2ed28 <__flatcc_fb_parse@@Base+0x3a58>
   2ed60:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2ed64:	b	31088 <__flatcc_fb_parse@@Base+0x5db8>
   2ed68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ed6c:	add	r4, r6, #1
   2ed70:	cmp	r4, r0
   2ed74:	beq	2fbac <__flatcc_fb_parse@@Base+0x48dc>
   2ed78:	ldrb	r0, [r4]
   2ed7c:	cmp	r0, #58	; 0x3a
   2ed80:	beq	300e4 <__flatcc_fb_parse@@Base+0x4e14>
   2ed84:	cmp	r0, #61	; 0x3d
   2ed88:	bne	2fbac <__flatcc_fb_parse@@Base+0x48dc>
   2ed8c:	ldr	r2, [ip]
   2ed90:	ldr	r0, [sl]
   2ed94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ed98:	add	r4, r2, r2, lsl #2
   2ed9c:	add	r3, r0, r4, lsl #2
   2eda0:	str	r3, [r1]
   2eda4:	ldr	r1, [r7]
   2eda8:	cmp	r1, r3
   2edac:	bne	2edfc <__flatcc_fb_parse@@Base+0x3b2c>
   2edb0:	lsl	r1, r2, #1
   2edb4:	cmp	r2, #0
   2edb8:	mov	r5, ip
   2edbc:	movweq	r1, #1024	; 0x400
   2edc0:	str	r1, [ip]
   2edc4:	add	r1, r1, r1, lsl #2
   2edc8:	lsl	r1, r1, #2
   2edcc:	bl	14940 <realloc@plt>
   2edd0:	cmp	r0, #0
   2edd4:	str	r0, [sl]
   2edd8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2eddc:	ldr	r1, [r5]
   2ede0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ede4:	mov	ip, r5
   2ede8:	add	r1, r1, r1, lsl #2
   2edec:	add	r1, r0, r1, lsl #2
   2edf0:	str	r1, [r2]
   2edf4:	add	r1, r0, r4, lsl #2
   2edf8:	str	r1, [r7]
   2edfc:	add	r0, r6, #2
   2ee00:	str	r6, [r1]
   2ee04:	movw	r2, #15674	; 0x3d3a
   2ee08:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2ee0c:	andeq	r9, r2, r9, lsr #21
   2ee10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ee14:	add	r4, r6, #1
   2ee18:	cmp	r4, r0
   2ee1c:	beq	2fc4c <__flatcc_fb_parse@@Base+0x497c>
   2ee20:	ldrb	r0, [r4]
   2ee24:	cmp	r0, #62	; 0x3e
   2ee28:	beq	30200 <__flatcc_fb_parse@@Base+0x4f30>
   2ee2c:	cmp	r0, #61	; 0x3d
   2ee30:	bne	2fc4c <__flatcc_fb_parse@@Base+0x497c>
   2ee34:	ldr	r2, [ip]
   2ee38:	ldr	r0, [sl]
   2ee3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ee40:	add	r4, r2, r2, lsl #2
   2ee44:	add	r3, r0, r4, lsl #2
   2ee48:	str	r3, [r1]
   2ee4c:	ldr	r1, [r7]
   2ee50:	cmp	r1, r3
   2ee54:	bne	2eea4 <__flatcc_fb_parse@@Base+0x3bd4>
   2ee58:	lsl	r1, r2, #1
   2ee5c:	cmp	r2, #0
   2ee60:	mov	r5, ip
   2ee64:	movweq	r1, #1024	; 0x400
   2ee68:	str	r1, [ip]
   2ee6c:	add	r1, r1, r1, lsl #2
   2ee70:	lsl	r1, r1, #2
   2ee74:	bl	14940 <realloc@plt>
   2ee78:	cmp	r0, #0
   2ee7c:	str	r0, [sl]
   2ee80:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2ee84:	ldr	r1, [r5]
   2ee88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ee8c:	mov	ip, r5
   2ee90:	add	r1, r1, r1, lsl #2
   2ee94:	add	r1, r0, r1, lsl #2
   2ee98:	str	r1, [r2]
   2ee9c:	add	r1, r0, r4, lsl #2
   2eea0:	str	r1, [r7]
   2eea4:	add	r0, r6, #2
   2eea8:	str	r6, [r1]
   2eeac:	movw	r2, #15678	; 0x3d3e
   2eeb0:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2eeb4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2eeb8:	add	r0, r6, #1
   2eebc:	cmp	r0, r1
   2eec0:	beq	2f568 <__flatcc_fb_parse@@Base+0x4298>
   2eec4:	ldrb	r1, [r6, #1]
   2eec8:	cmp	r1, #10
   2eecc:	b	2f560 <__flatcc_fb_parse@@Base+0x4290>
   2eed0:	strdeq	r8, [r2], -r5
   2eed4:	mov	r5, ip
   2eed8:	ldr	ip, [ip]
   2eedc:	ldr	r0, [sl]
   2eee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2eee4:	add	r4, ip, ip, lsl #2
   2eee8:	add	r3, r0, r4, lsl #2
   2eeec:	str	r3, [r1]
   2eef0:	ldr	r2, [r7]
   2eef4:	cmp	r2, r3
   2eef8:	bne	2ef40 <__flatcc_fb_parse@@Base+0x3c70>
   2eefc:	lsl	r2, ip, #1
   2ef00:	cmp	ip, #0
   2ef04:	movweq	r2, #1024	; 0x400
   2ef08:	add	r1, r2, r2, lsl #2
   2ef0c:	str	r2, [r5]
   2ef10:	lsl	r1, r1, #2
   2ef14:	bl	14940 <realloc@plt>
   2ef18:	cmp	r0, #0
   2ef1c:	str	r0, [sl]
   2ef20:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2ef24:	ldr	ip, [r5]
   2ef28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ef2c:	add	r2, ip, ip, lsl #2
   2ef30:	add	r2, r0, r2, lsl #2
   2ef34:	str	r2, [r1]
   2ef38:	add	r2, r0, r4, lsl #2
   2ef3c:	str	r2, [r7]
   2ef40:	mov	r3, #19
   2ef44:	str	r6, [r2]
   2ef48:	mov	r1, r7
   2ef4c:	add	r7, r6, #1
   2ef50:	str	r3, [r2, #16]
   2ef54:	mov	r3, #1
   2ef58:	str	r3, [r2, #4]
   2ef5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ef60:	ldr	r8, [r3]
   2ef64:	add	r3, r6, #1
   2ef68:	str	r8, [r2, #8]
   2ef6c:	ldr	r5, [r9]
   2ef70:	sub	r3, r3, r5
   2ef74:	str	r5, [sp, #44]	; 0x2c
   2ef78:	str	r3, [r2, #12]
   2ef7c:	b	2efac <__flatcc_fb_parse@@Base+0x3cdc>
   2ef80:	andeq	r9, r2, fp, lsl #19
   2ef84:	add	r4, sl, #1
   2ef88:	sub	r3, r7, sl
   2ef8c:	str	r6, [sp, #44]	; 0x2c
   2ef90:	str	sl, [r2]
   2ef94:	str	r3, [r2, #4]
   2ef98:	sub	r4, r4, r6
   2ef9c:	mov	r3, #18
   2efa0:	str	r8, [r2, #8]
   2efa4:	str	r4, [r2, #12]
   2efa8:	str	r3, [r2, #16]
   2efac:	add	r2, r2, #20
   2efb0:	mov	sl, r7
   2efb4:	str	r2, [r1]
   2efb8:	b	2f008 <__flatcc_fb_parse@@Base+0x3d38>
   2efbc:	mov	r4, #1
   2efc0:	add	r3, r5, #1
   2efc4:	str	lr, [sp, #44]	; 0x2c
   2efc8:	str	r5, [r2]
   2efcc:	add	r7, sl, #1
   2efd0:	stmib	r2, {r4, r8}
   2efd4:	sub	r3, r3, lr
   2efd8:	mov	sl, r7
   2efdc:	ldr	r9, [sp, #40]	; 0x28
   2efe0:	str	r3, [r2, #12]
   2efe4:	mov	r3, #6
   2efe8:	str	r3, [r2, #16]
   2efec:	add	r2, r2, #20
   2eff0:	str	r2, [r1]
   2eff4:	b	2f008 <__flatcc_fb_parse@@Base+0x3d38>
   2eff8:	mov	r8, ip
   2effc:	ldr	ip, [sp, #8]
   2f000:	add	r7, r6, #2
   2f004:	str	lr, [sp, #44]	; 0x2c
   2f008:	sub	r5, r7, #1
   2f00c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f010:	mov	r6, r7
   2f014:	cmp	r1, r7
   2f018:	beq	2f128 <__flatcc_fb_parse@@Base+0x3e58>
   2f01c:	ldrb	r3, [r6]
   2f020:	cmp	r3, #34	; 0x22
   2f024:	cmpne	r3, #92	; 0x5c
   2f028:	beq	2f050 <__flatcc_fb_parse@@Base+0x3d80>
   2f02c:	add	r5, r5, #1
   2f030:	mov	r4, #0
   2f034:	cmp	r3, #32
   2f038:	bcc	2f058 <__flatcc_fb_parse@@Base+0x3d88>
   2f03c:	add	r7, r6, #1
   2f040:	cmp	r3, #127	; 0x7f
   2f044:	bne	2f00c <__flatcc_fb_parse@@Base+0x3d3c>
   2f048:	b	2f058 <__flatcc_fb_parse@@Base+0x3d88>
   2f04c:			; <UNDEFINED> instruction: 0x0002a2b8
   2f050:	mov	r4, #0
   2f054:	mov	r5, r6
   2f058:	cmp	sl, r5
   2f05c:	beq	2f138 <__flatcc_fb_parse@@Base+0x3e68>
   2f060:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f064:	add	r7, ip, ip, lsl #2
   2f068:	add	r3, r0, r7, lsl #2
   2f06c:	cmp	r2, r3
   2f070:	str	r3, [r1]
   2f074:	beq	2f08c <__flatcc_fb_parse@@Base+0x3dbc>
   2f078:	mov	lr, ip
   2f07c:	ldr	ip, [sp, #28]
   2f080:	ldr	r1, [sp, #44]	; 0x2c
   2f084:	mov	r9, r8
   2f088:	b	2f0ec <__flatcc_fb_parse@@Base+0x3e1c>
   2f08c:	lsl	r2, ip, #1
   2f090:	cmp	ip, #0
   2f094:	ldr	r8, [sp, #36]	; 0x24
   2f098:	movweq	r2, #1024	; 0x400
   2f09c:	add	r1, r2, r2, lsl #2
   2f0a0:	lsl	r1, r1, #2
   2f0a4:	str	r2, [r8]
   2f0a8:	bl	14940 <realloc@plt>
   2f0ac:	ldr	r1, [sp, #32]
   2f0b0:	cmp	r0, #0
   2f0b4:	str	r0, [r1]
   2f0b8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f0bc:	ldr	r1, [r8]
   2f0c0:	ldr	ip, [sp, #28]
   2f0c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f0c8:	add	r2, r1, r1, lsl #2
   2f0cc:	mov	lr, r1
   2f0d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f0d4:	add	r2, r0, r2, lsl #2
   2f0d8:	str	r2, [r1]
   2f0dc:	add	r2, r0, r7, lsl #2
   2f0e0:	str	r2, [ip]
   2f0e4:	ldr	r1, [r9]
   2f0e8:	ldr	r9, [r3]
   2f0ec:	add	r7, sl, #1
   2f0f0:	sub	r3, r5, sl
   2f0f4:	str	r1, [sp, #44]	; 0x2c
   2f0f8:	str	sl, [r2]
   2f0fc:	mov	r8, r5
   2f100:	stmib	r2, {r3, r9}
   2f104:	sub	r7, r7, r1
   2f108:	mov	r3, #20
   2f10c:	str	r5, [sp, #16]
   2f110:	str	r7, [r2, #12]
   2f114:	str	r3, [r2, #16]
   2f118:	add	r2, r2, #20
   2f11c:	str	r2, [ip]
   2f120:	mov	ip, lr
   2f124:	b	2f144 <__flatcc_fb_parse@@Base+0x3e74>
   2f128:	ldr	r5, [fp, #-32]	; 0xffffffe0
   2f12c:	mov	r4, #1
   2f130:	cmp	sl, r5
   2f134:	bne	2f060 <__flatcc_fb_parse@@Base+0x3d90>
   2f138:	mov	r9, r8
   2f13c:	str	sl, [sp, #16]
   2f140:	mov	r8, r5
   2f144:	ldrb	r7, [r8]
   2f148:	cmp	r7, #34	; 0x22
   2f14c:	beq	2ff70 <__flatcc_fb_parse@@Base+0x4ca0>
   2f150:	cmp	r7, #0
   2f154:	mov	r3, r7
   2f158:	mvn	r4, r4
   2f15c:	mov	r8, r9
   2f160:	movwne	r3, #1
   2f164:	tst	r4, r3
   2f168:	beq	30034 <__flatcc_fb_parse@@Base+0x4d64>
   2f16c:	cmp	r7, #92	; 0x5c
   2f170:	bne	2f1a4 <__flatcc_fb_parse@@Base+0x3ed4>
   2f174:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f178:	ldr	r7, [sp, #28]
   2f17c:	add	r4, ip, ip, lsl #2
   2f180:	add	r3, r0, r4, lsl #2
   2f184:	cmp	r2, r3
   2f188:	str	r3, [r1]
   2f18c:	beq	2f244 <__flatcc_fb_parse@@Base+0x3f74>
   2f190:	ldr	r9, [sp, #32]
   2f194:	ldr	lr, [sp, #44]	; 0x2c
   2f198:	str	ip, [sp, #8]
   2f19c:	b	2f2a4 <__flatcc_fb_parse@@Base+0x3fd4>
   2f1a0:	ldrdeq	r8, [r1], -r9
   2f1a4:	mov	sl, r5
   2f1a8:	ldr	lr, [sp, #44]	; 0x2c
   2f1ac:	ldr	r5, [sp, #16]
   2f1b0:	cmp	r7, #13
   2f1b4:	cmpne	r7, #10
   2f1b8:	beq	30680 <__flatcc_fb_parse@@Base+0x53b0>
   2f1bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f1c0:	add	r4, ip, ip, lsl #2
   2f1c4:	add	r3, r0, r4, lsl #2
   2f1c8:	cmp	r2, r3
   2f1cc:	str	r3, [r1]
   2f1d0:	beq	2f1dc <__flatcc_fb_parse@@Base+0x3f0c>
   2f1d4:	ldr	r1, [sp, #28]
   2f1d8:	b	2efbc <__flatcc_fb_parse@@Base+0x3cec>
   2f1dc:	lsl	r2, ip, #1
   2f1e0:	cmp	ip, #0
   2f1e4:	ldr	r6, [sp, #36]	; 0x24
   2f1e8:	movweq	r2, #1024	; 0x400
   2f1ec:	add	r1, r2, r2, lsl #2
   2f1f0:	lsl	r1, r1, #2
   2f1f4:	str	r2, [r6]
   2f1f8:	bl	14940 <realloc@plt>
   2f1fc:	ldr	r1, [sp, #32]
   2f200:	cmp	r0, #0
   2f204:	str	r0, [r1]
   2f208:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f20c:	ldr	ip, [r6]
   2f210:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f214:	ldr	r3, [sp, #40]	; 0x28
   2f218:	add	r2, ip, ip, lsl #2
   2f21c:	add	r2, r0, r2, lsl #2
   2f220:	str	r2, [r1]
   2f224:	ldr	r1, [sp, #28]
   2f228:	add	r2, r0, r4, lsl #2
   2f22c:	str	r2, [r1]
   2f230:	ldr	lr, [r3]
   2f234:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f238:	ldr	r8, [r3]
   2f23c:	b	2efbc <__flatcc_fb_parse@@Base+0x3cec>
   2f240:	muleq	r1, r7, r5
   2f244:	lsl	r2, ip, #1
   2f248:	cmp	ip, #0
   2f24c:	ldr	r5, [sp, #36]	; 0x24
   2f250:	movweq	r2, #1024	; 0x400
   2f254:	add	r1, r2, r2, lsl #2
   2f258:	lsl	r1, r1, #2
   2f25c:	str	r2, [r5]
   2f260:	bl	14940 <realloc@plt>
   2f264:	ldr	r9, [sp, #32]
   2f268:	cmp	r0, #0
   2f26c:	str	r0, [r9]
   2f270:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f274:	ldr	r1, [r5]
   2f278:	add	r2, r1, r1, lsl #2
   2f27c:	str	r1, [sp, #8]
   2f280:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f284:	add	r2, r0, r2, lsl #2
   2f288:	str	r2, [r1]
   2f28c:	ldr	r1, [sp, #40]	; 0x28
   2f290:	add	r2, r0, r4, lsl #2
   2f294:	str	r2, [r7]
   2f298:	ldr	lr, [r1]
   2f29c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2f2a0:	ldr	r8, [r1]
   2f2a4:	ldr	r1, [sp, #16]
   2f2a8:	add	sl, r6, #1
   2f2ac:	mov	ip, r8
   2f2b0:	add	r4, r1, #1
   2f2b4:	sub	r3, sl, r1
   2f2b8:	stm	r2, {r1, r3}
   2f2bc:	sub	r4, r4, lr
   2f2c0:	mov	r1, #21
   2f2c4:	str	r8, [r2, #8]
   2f2c8:	str	r4, [r2, #12]
   2f2cc:	str	r1, [r2, #16]
   2f2d0:	ldr	r1, [sp, #20]
   2f2d4:	add	r2, r2, #20
   2f2d8:	str	r2, [r7]
   2f2dc:	cmp	r1, r6
   2f2e0:	beq	30c48 <__flatcc_fb_parse@@Base+0x5978>
   2f2e4:	ldrb	r7, [sl]
   2f2e8:	ldr	r9, [sp, #40]	; 0x28
   2f2ec:	ldr	r8, [pc, #4016]	; 302a4 <__flatcc_fb_parse@@Base+0x4fd4>
   2f2f0:	cmp	r7, #34	; 0x22
   2f2f4:	add	r8, pc, r8
   2f2f8:	bhi	2f398 <__flatcc_fb_parse@@Base+0x40c8>
   2f2fc:	add	r3, pc, #8
   2f300:	ldr	r4, [r3, r7, lsl #2]
   2f304:	add	pc, r3, r4
   2f308:	andeq	r9, r2, r0, asr #31
   2f30c:	andeq	r1, r0, ip, asr r9
   2f310:	muleq	r0, r4, r0
   2f314:	muleq	r0, r4, r0
   2f318:	muleq	r0, r4, r0
   2f31c:	muleq	r0, r4, r0
   2f320:	muleq	r0, r4, r0
   2f324:	muleq	r0, r4, r0
   2f328:	muleq	r0, r4, r0
   2f32c:	muleq	r0, r4, r0
   2f330:	muleq	r0, r4, r0
   2f334:	andeq	r0, r0, r4, lsr #1
   2f338:	muleq	r0, r4, r0
   2f33c:	muleq	r0, r4, r0
   2f340:	andeq	r0, r0, r8, asr #1
   2f344:	muleq	r0, r4, r0
   2f348:	muleq	r0, r4, r0
   2f34c:	muleq	r0, r4, r0
   2f350:	muleq	r0, r4, r0
   2f354:	muleq	r0, r4, r0
   2f358:	muleq	r0, r4, r0
   2f35c:	muleq	r0, r4, r0
   2f360:	muleq	r0, r4, r0
   2f364:	muleq	r0, r4, r0
   2f368:	muleq	r0, r4, r0
   2f36c:	muleq	r0, r4, r0
   2f370:	muleq	r0, r4, r0
   2f374:	muleq	r0, r4, r0
   2f378:	muleq	r0, r4, r0
   2f37c:	muleq	r0, r4, r0
   2f380:	muleq	r0, r4, r0
   2f384:	muleq	r0, r4, r0
   2f388:	muleq	r0, r4, r0
   2f38c:	muleq	r0, r4, r0
   2f390:	muleq	r0, r4, r0
   2f394:			; <UNDEFINED> instruction: 0xfffffcec
   2f398:	cmp	r7, #92	; 0x5c
   2f39c:	beq	2eff8 <__flatcc_fb_parse@@Base+0x3d28>
   2f3a0:	mov	r8, ip
   2f3a4:	ldr	ip, [sp, #8]
   2f3a8:	mov	r5, sl
   2f3ac:	b	2f1b0 <__flatcc_fb_parse@@Base+0x3ee0>
   2f3b0:	ldr	r1, [sp, #12]
   2f3b4:	ldr	r7, [fp, #-32]	; 0xffffffe0
   2f3b8:	cmp	r1, r6
   2f3bc:	beq	2f3f4 <__flatcc_fb_parse@@Base+0x4124>
   2f3c0:	ldrb	r3, [r6, #2]
   2f3c4:	add	r7, r6, #2
   2f3c8:	cmp	r3, #13
   2f3cc:	b	2f3f0 <__flatcc_fb_parse@@Base+0x4120>
   2f3d0:	andeq	r9, r2, r1, lsr r5
   2f3d4:	ldr	r1, [sp, #12]
   2f3d8:	ldr	r7, [fp, #-32]	; 0xffffffe0
   2f3dc:	cmp	r1, r6
   2f3e0:	beq	2f3f4 <__flatcc_fb_parse@@Base+0x4124>
   2f3e4:	ldrb	r3, [r6, #2]
   2f3e8:	add	r7, r6, #2
   2f3ec:	cmp	r3, #10
   2f3f0:	addeq	r7, r6, #3
   2f3f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2f3f8:	mov	r8, ip
   2f3fc:	add	r8, ip, #1
   2f400:	str	r8, [r1]
   2f404:	str	r7, [r9]
   2f408:	ldr	ip, [sp, #8]
   2f40c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f410:	add	r4, ip, ip, lsl #2
   2f414:	add	r3, r0, r4, lsl #2
   2f418:	cmp	r2, r3
   2f41c:	str	r3, [r1]
   2f420:	beq	2f434 <__flatcc_fb_parse@@Base+0x4164>
   2f424:	ldr	r1, [sp, #28]
   2f428:	mov	r6, r7
   2f42c:	b	2ef84 <__flatcc_fb_parse@@Base+0x3cb4>
   2f430:	strdeq	r1, [r1], -r0
   2f434:	lsl	r2, ip, #1
   2f438:	cmp	ip, #0
   2f43c:	ldr	r6, [sp, #36]	; 0x24
   2f440:	movweq	r2, #1024	; 0x400
   2f444:	add	r1, r2, r2, lsl #2
   2f448:	lsl	r1, r1, #2
   2f44c:	str	r2, [r6]
   2f450:	bl	14940 <realloc@plt>
   2f454:	ldr	r1, [sp, #32]
   2f458:	cmp	r0, #0
   2f45c:	str	r0, [r1]
   2f460:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f464:	ldr	ip, [r6]
   2f468:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f46c:	add	r2, ip, ip, lsl #2
   2f470:	add	r2, r0, r2, lsl #2
   2f474:	str	r2, [r1]
   2f478:	add	r2, r0, r4, lsl #2
   2f47c:	ldr	r1, [sp, #28]
   2f480:	str	r2, [r1]
   2f484:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f488:	ldr	r6, [r9]
   2f48c:	ldr	r8, [r3]
   2f490:	b	2ef84 <__flatcc_fb_parse@@Base+0x3cb4>
   2f494:	andeq	sl, r2, sl, lsl #23
   2f498:	andeq	r8, r1, r4, ror #18
   2f49c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2f4a0:	add	r0, r6, #1
   2f4a4:	cmp	r0, r4
   2f4a8:	beq	30354 <__flatcc_fb_parse@@Base+0x5084>
   2f4ac:	ldrb	r1, [r0]
   2f4b0:	cmp	r1, #38	; 0x26
   2f4b4:	beq	302a8 <__flatcc_fb_parse@@Base+0x4fd8>
   2f4b8:	cmp	r1, #61	; 0x3d
   2f4bc:	mov	r4, r0
   2f4c0:	bne	30354 <__flatcc_fb_parse@@Base+0x5084>
   2f4c4:	ldr	r2, [ip]
   2f4c8:	ldr	r0, [sl]
   2f4cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f4d0:	add	r4, r2, r2, lsl #2
   2f4d4:	add	r3, r0, r4, lsl #2
   2f4d8:	str	r3, [r1]
   2f4dc:	ldr	r1, [r7]
   2f4e0:	cmp	r1, r3
   2f4e4:	bne	2f534 <__flatcc_fb_parse@@Base+0x4264>
   2f4e8:	lsl	r1, r2, #1
   2f4ec:	cmp	r2, #0
   2f4f0:	mov	r5, ip
   2f4f4:	movweq	r1, #1024	; 0x400
   2f4f8:	str	r1, [ip]
   2f4fc:	add	r1, r1, r1, lsl #2
   2f500:	lsl	r1, r1, #2
   2f504:	bl	14940 <realloc@plt>
   2f508:	cmp	r0, #0
   2f50c:	str	r0, [sl]
   2f510:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f514:	ldr	r1, [r5]
   2f518:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f51c:	mov	ip, r5
   2f520:	add	r1, r1, r1, lsl #2
   2f524:	add	r1, r0, r1, lsl #2
   2f528:	str	r1, [r2]
   2f52c:	add	r1, r0, r4, lsl #2
   2f530:	str	r1, [r7]
   2f534:	add	r0, r6, #2
   2f538:	str	r6, [r1]
   2f53c:	movw	r2, #15654	; 0x3d26
   2f540:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2f544:	muleq	r1, sl, r2
   2f548:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2f54c:	add	r0, r6, #1
   2f550:	cmp	r0, r1
   2f554:	beq	2f568 <__flatcc_fb_parse@@Base+0x4298>
   2f558:	ldrb	r1, [r6, #1]
   2f55c:	cmp	r1, #13
   2f560:	addeq	r0, r6, #2
   2f564:	mov	r1, r0
   2f568:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2f56c:	mov	r6, r1
   2f570:	ldr	r0, [r2]
   2f574:	add	r0, r0, #1
   2f578:	str	r0, [r2]
   2f57c:	str	r1, [r9]
   2f580:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   2f584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f588:	add	r4, r6, #1
   2f58c:	cmp	r4, r0
   2f590:	beq	30efc <__flatcc_fb_parse@@Base+0x5c2c>
   2f594:	ldrb	r0, [r4]
   2f598:	sub	r1, r0, #48	; 0x30
   2f59c:	cmp	r1, #10
   2f5a0:	bcs	30e50 <__flatcc_fb_parse@@Base+0x5b80>
   2f5a4:	ldr	r2, [sp, #20]
   2f5a8:	mov	r5, r6
   2f5ac:	cmp	r2, r4
   2f5b0:	bne	2e0c4 <__flatcc_fb_parse@@Base+0x2df4>
   2f5b4:	b	2f9d4 <__flatcc_fb_parse@@Base+0x4704>
   2f5b8:	andeq	r9, r1, r5, asr r2
   2f5bc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2f5c0:	add	r0, r6, #1
   2f5c4:	cmp	r0, r4
   2f5c8:	beq	304a0 <__flatcc_fb_parse@@Base+0x51d0>
   2f5cc:	ldrb	r1, [r0]
   2f5d0:	cmp	r1, #124	; 0x7c
   2f5d4:	beq	303f4 <__flatcc_fb_parse@@Base+0x5124>
   2f5d8:	cmp	r1, #61	; 0x3d
   2f5dc:	mov	r4, r0
   2f5e0:	bne	304a0 <__flatcc_fb_parse@@Base+0x51d0>
   2f5e4:	ldr	r2, [ip]
   2f5e8:	ldr	r0, [sl]
   2f5ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f5f0:	add	r4, r2, r2, lsl #2
   2f5f4:	add	r3, r0, r4, lsl #2
   2f5f8:	str	r3, [r1]
   2f5fc:	ldr	r1, [r7]
   2f600:	cmp	r1, r3
   2f604:	bne	2f654 <__flatcc_fb_parse@@Base+0x4384>
   2f608:	lsl	r1, r2, #1
   2f60c:	cmp	r2, #0
   2f610:	mov	r5, ip
   2f614:	movweq	r1, #1024	; 0x400
   2f618:	str	r1, [ip]
   2f61c:	add	r1, r1, r1, lsl #2
   2f620:	lsl	r1, r1, #2
   2f624:	bl	14940 <realloc@plt>
   2f628:	cmp	r0, #0
   2f62c:	str	r0, [sl]
   2f630:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f634:	ldr	r1, [r5]
   2f638:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f63c:	mov	ip, r5
   2f640:	add	r1, r1, r1, lsl #2
   2f644:	add	r1, r0, r1, lsl #2
   2f648:	str	r1, [r2]
   2f64c:	add	r1, r0, r4, lsl #2
   2f650:	str	r1, [r7]
   2f654:	add	r0, r6, #2
   2f658:	str	r6, [r1]
   2f65c:	movw	r2, #15740	; 0x3d7c
   2f660:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2f664:	muleq	r2, r4, ip
   2f668:	andeq	r9, r2, fp, ror r2
   2f66c:	andeq	r9, r2, r3, asr r2
   2f670:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f674:	add	r4, r6, #1
   2f678:	cmp	r4, r0
   2f67c:	beq	2fcec <__flatcc_fb_parse@@Base+0x4a1c>
   2f680:	ldrb	r0, [r4]
   2f684:	cmp	r0, #42	; 0x2a
   2f688:	beq	30540 <__flatcc_fb_parse@@Base+0x5270>
   2f68c:	cmp	r0, #61	; 0x3d
   2f690:	bne	2fcec <__flatcc_fb_parse@@Base+0x4a1c>
   2f694:	ldr	r2, [ip]
   2f698:	ldr	r0, [sl]
   2f69c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f6a0:	add	r5, r2, r2, lsl #2
   2f6a4:	add	r3, r0, r5, lsl #2
   2f6a8:	str	r3, [r1]
   2f6ac:	ldr	r1, [r7]
   2f6b0:	cmp	r1, r3
   2f6b4:	bne	2f728 <__flatcc_fb_parse@@Base+0x4458>
   2f6b8:	lsl	r1, r2, #1
   2f6bc:	cmp	r2, #0
   2f6c0:	mov	r8, r9
   2f6c4:	mov	r9, sl
   2f6c8:	mov	sl, r6
   2f6cc:	mov	r6, ip
   2f6d0:	movweq	r1, #1024	; 0x400
   2f6d4:	str	r1, [ip]
   2f6d8:	add	r1, r1, r1, lsl #2
   2f6dc:	lsl	r1, r1, #2
   2f6e0:	bl	14940 <realloc@plt>
   2f6e4:	cmp	r0, #0
   2f6e8:	str	r0, [r9]
   2f6ec:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f6f0:	ldr	r1, [r6]
   2f6f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f6f8:	mov	ip, r6
   2f6fc:	mov	r6, sl
   2f700:	mov	r2, r9
   2f704:	mov	sl, r9
   2f708:	mov	r9, r8
   2f70c:	add	r1, r1, r1, lsl #2
   2f710:	add	r1, r0, r1, lsl #2
   2f714:	str	r1, [r3]
   2f718:	add	r1, r0, r5, lsl #2
   2f71c:	str	r1, [r7]
   2f720:	ldr	r8, [pc, #3924]	; 3067c <__flatcc_fb_parse@@Base+0x53ac>
   2f724:	add	r8, pc, r8
   2f728:	str	r6, [r1]
   2f72c:	movw	r0, #15658	; 0x3d2a
   2f730:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2f734:	ldrdeq	r9, [r1], -fp
   2f738:	ldrdeq	r9, [r2], -r3
   2f73c:	andeq	r9, r2, lr, asr #3
   2f740:	andeq	r9, r2, r8, asr #2
   2f744:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f748:	add	r4, r6, #1
   2f74c:	cmp	r4, r0
   2f750:	beq	2fed0 <__flatcc_fb_parse@@Base+0x4c00>
   2f754:	ldrb	r0, [r4]
   2f758:	cmp	r0, #45	; 0x2d
   2f75c:	beq	30920 <__flatcc_fb_parse@@Base+0x5650>
   2f760:	cmp	r0, #62	; 0x3e
   2f764:	beq	309a0 <__flatcc_fb_parse@@Base+0x56d0>
   2f768:	cmp	r0, #61	; 0x3d
   2f76c:	bne	2fed0 <__flatcc_fb_parse@@Base+0x4c00>
   2f770:	ldr	r2, [ip]
   2f774:	ldr	r0, [sl]
   2f778:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f77c:	add	r4, r2, r2, lsl #2
   2f780:	add	r3, r0, r4, lsl #2
   2f784:	str	r3, [r1]
   2f788:	ldr	r1, [r7]
   2f78c:	cmp	r1, r3
   2f790:	bne	2f7e0 <__flatcc_fb_parse@@Base+0x4510>
   2f794:	lsl	r1, r2, #1
   2f798:	cmp	r2, #0
   2f79c:	mov	r5, ip
   2f7a0:	movweq	r1, #1024	; 0x400
   2f7a4:	str	r1, [ip]
   2f7a8:	add	r1, r1, r1, lsl #2
   2f7ac:	lsl	r1, r1, #2
   2f7b0:	bl	14940 <realloc@plt>
   2f7b4:	cmp	r0, #0
   2f7b8:	str	r0, [sl]
   2f7bc:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f7c0:	ldr	r1, [r5]
   2f7c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f7c8:	mov	ip, r5
   2f7cc:	add	r1, r1, r1, lsl #2
   2f7d0:	add	r1, r0, r1, lsl #2
   2f7d4:	str	r1, [r2]
   2f7d8:	add	r1, r0, r4, lsl #2
   2f7dc:	str	r1, [r7]
   2f7e0:	add	r0, r6, #2
   2f7e4:	str	r6, [r1]
   2f7e8:	movw	r2, #15661	; 0x3d2d
   2f7ec:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2f7f0:	andeq	sl, r2, r9, asr #5
   2f7f4:	ldrdeq	r9, [r2], -fp
   2f7f8:	strdeq	r8, [r1], -sl
   2f7fc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2f800:	add	r0, r6, #1
   2f804:	cmp	r0, r4
   2f808:	beq	30ba0 <__flatcc_fb_parse@@Base+0x58d0>
   2f80c:	ldrb	r1, [r0]
   2f810:	cmp	r1, #61	; 0x3d
   2f814:	beq	305e0 <__flatcc_fb_parse@@Base+0x5310>
   2f818:	cmp	r1, #62	; 0x3e
   2f81c:	mov	r4, r0
   2f820:	bne	30ba0 <__flatcc_fb_parse@@Base+0x58d0>
   2f824:	ldr	r2, [ip]
   2f828:	ldr	r0, [sl]
   2f82c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f830:	add	r4, r2, r2, lsl #2
   2f834:	add	r3, r0, r4, lsl #2
   2f838:	str	r3, [r1]
   2f83c:	ldr	r1, [r7]
   2f840:	cmp	r1, r3
   2f844:	bne	2f894 <__flatcc_fb_parse@@Base+0x45c4>
   2f848:	lsl	r1, r2, #1
   2f84c:	cmp	r2, #0
   2f850:	mov	r5, ip
   2f854:	movweq	r1, #1024	; 0x400
   2f858:	str	r1, [ip]
   2f85c:	add	r1, r1, r1, lsl #2
   2f860:	lsl	r1, r1, #2
   2f864:	bl	14940 <realloc@plt>
   2f868:	cmp	r0, #0
   2f86c:	str	r0, [sl]
   2f870:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f874:	ldr	r1, [r5]
   2f878:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f87c:	mov	ip, r5
   2f880:	add	r1, r1, r1, lsl #2
   2f884:	add	r1, r0, r1, lsl #2
   2f888:	str	r1, [r2]
   2f88c:	add	r1, r0, r4, lsl #2
   2f890:	str	r1, [r7]
   2f894:	add	r0, r6, #2
   2f898:	str	r6, [r1]
   2f89c:	movw	r2, #15933	; 0x3e3d
   2f8a0:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   2f8a4:	andeq	r9, r2, lr, ror #29
   2f8a8:	andeq	r9, r2, r0, lsr r0
   2f8ac:	andeq	r8, r1, r9, ror #29
   2f8b0:	ldrdeq	r8, [r2], -r7
   2f8b4:	andeq	r8, r2, lr, lsl #31
   2f8b8:	add	sl, r6, #1
   2f8bc:	cmp	r4, #32
   2f8c0:	bcc	2f8cc <__flatcc_fb_parse@@Base+0x45fc>
   2f8c4:	cmp	r4, #127	; 0x7f
   2f8c8:	bne	2f8d8 <__flatcc_fb_parse@@Base+0x4608>
   2f8cc:	cmp	r4, #9
   2f8d0:	cmpne	r4, #32
   2f8d4:	bne	30d18 <__flatcc_fb_parse@@Base+0x5a48>
   2f8d8:	ldr	r0, [sp, #32]
   2f8dc:	ldr	r2, [ip]
   2f8e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f8e4:	ldr	r0, [r0]
   2f8e8:	add	r4, r2, r2, lsl #2
   2f8ec:	add	r3, r0, r4, lsl #2
   2f8f0:	str	r3, [r1]
   2f8f4:	ldr	r1, [r7]
   2f8f8:	cmp	r1, r3
   2f8fc:	bne	2f958 <__flatcc_fb_parse@@Base+0x4688>
   2f900:	lsl	r1, r2, #1
   2f904:	cmp	r2, #0
   2f908:	mov	r5, r6
   2f90c:	mov	r6, ip
   2f910:	movweq	r1, #1024	; 0x400
   2f914:	str	r1, [ip]
   2f918:	add	r1, r1, r1, lsl #2
   2f91c:	lsl	r1, r1, #2
   2f920:	bl	14940 <realloc@plt>
   2f924:	ldr	r1, [sp, #32]
   2f928:	cmp	r0, #0
   2f92c:	str	r0, [r1]
   2f930:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2f934:	ldr	r1, [r6]
   2f938:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f93c:	mov	ip, r6
   2f940:	mov	r6, r5
   2f944:	add	r1, r1, r1, lsl #2
   2f948:	add	r1, r0, r1, lsl #2
   2f94c:	str	r1, [r2]
   2f950:	add	r1, r0, r4, lsl #2
   2f954:	str	r1, [r7]
   2f958:	str	r6, [r1]
   2f95c:	mov	r0, #8
   2f960:	str	r0, [r1, #16]
   2f964:	mov	r0, #1
   2f968:	add	r2, r6, #1
   2f96c:	mov	r6, sl
   2f970:	str	r0, [r1, #4]
   2f974:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f978:	ldr	r0, [r0]
   2f97c:	str	r0, [r1, #8]
   2f980:	ldr	r0, [r9]
   2f984:	sub	r0, r2, r0
   2f988:	str	r0, [r1, #12]
   2f98c:	add	r0, r1, #20
   2f990:	str	r0, [r7]
   2f994:	ldr	sl, [sp, #32]
   2f998:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   2f99c:	ldrdeq	r9, [r2], -fp
   2f9a0:	mov	r0, r1
   2f9a4:	cmp	r2, r0
   2f9a8:	beq	2f9d4 <__flatcc_fb_parse@@Base+0x4704>
   2f9ac:	add	r4, r0, #1
   2f9b0:	ldrb	r0, [r0, #1]
   2f9b4:	sub	r0, r0, #48	; 0x30
   2f9b8:	uxtb	r0, r0
   2f9bc:	cmp	r0, #10
   2f9c0:	mov	r0, r4
   2f9c4:	bcc	2f9a4 <__flatcc_fb_parse@@Base+0x46d4>
   2f9c8:	b	2f9d8 <__flatcc_fb_parse@@Base+0x4708>
   2f9cc:	strdeq	r8, [r1], -sl
   2f9d0:	andeq	r8, r1, r8, asr #27
   2f9d4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   2f9d8:	mov	r9, sl
   2f9dc:	mov	sl, r6
   2f9e0:	ldr	r2, [ip]
   2f9e4:	ldr	r0, [r9]
   2f9e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f9ec:	cmp	r5, r4
   2f9f0:	add	r6, r2, r2, lsl #2
   2f9f4:	add	r3, r0, r6, lsl #2
   2f9f8:	str	r3, [r1]
   2f9fc:	ldr	r1, [r7]
   2fa00:	beq	2fa70 <__flatcc_fb_parse@@Base+0x47a0>
   2fa04:	cmp	r1, r3
   2fa08:	bne	2fa58 <__flatcc_fb_parse@@Base+0x4788>
   2fa0c:	lsl	r1, r2, #1
   2fa10:	cmp	r2, #0
   2fa14:	mov	r5, ip
   2fa18:	movweq	r1, #1024	; 0x400
   2fa1c:	str	r1, [ip]
   2fa20:	add	r1, r1, r1, lsl #2
   2fa24:	lsl	r1, r1, #2
   2fa28:	bl	14940 <realloc@plt>
   2fa2c:	cmp	r0, #0
   2fa30:	str	r0, [r9]
   2fa34:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2fa38:	ldr	r1, [r5]
   2fa3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2fa40:	mov	ip, r5
   2fa44:	add	r1, r1, r1, lsl #2
   2fa48:	add	r1, r0, r1, lsl #2
   2fa4c:	str	r1, [r2]
   2fa50:	add	r1, r0, r6, lsl #2
   2fa54:	str	r1, [r7]
   2fa58:	mov	r0, #11
   2fa5c:	str	sl, [r1]
   2fa60:	str	r0, [r1, #16]
   2fa64:	sub	r0, r4, sl
   2fa68:	b	2fae0 <__flatcc_fb_parse@@Base+0x4810>
   2fa6c:	andeq	r9, r2, r8, lsl r8
   2fa70:	cmp	r1, r3
   2fa74:	bne	2fad0 <__flatcc_fb_parse@@Base+0x4800>
   2fa78:	lsl	r1, r2, #1
   2fa7c:	cmp	r2, #0
   2fa80:	mov	r8, ip
   2fa84:	movweq	r1, #1024	; 0x400
   2fa88:	str	r1, [ip]
   2fa8c:	add	r1, r1, r1, lsl #2
   2fa90:	lsl	r1, r1, #2
   2fa94:	bl	14940 <realloc@plt>
   2fa98:	cmp	r0, #0
   2fa9c:	str	r0, [r9]
   2faa0:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2faa4:	ldr	r1, [r8]
   2faa8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2faac:	mov	ip, r8
   2fab0:	ldr	r9, [sp, #32]
   2fab4:	add	r1, r1, r1, lsl #2
   2fab8:	add	r1, r0, r1, lsl #2
   2fabc:	str	r1, [r2]
   2fac0:	add	r1, r0, r6, lsl #2
   2fac4:	str	r1, [r7]
   2fac8:	ldr	r8, [pc, #4088]	; 30ac8 <__flatcc_fb_parse@@Base+0x57f8>
   2facc:	add	r8, pc, r8
   2fad0:	mov	r0, #10
   2fad4:	str	sl, [r1]
   2fad8:	str	r0, [r1, #16]
   2fadc:	sub	r0, r5, sl
   2fae0:	str	r0, [r1, #4]
   2fae4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2fae8:	ldr	r3, [sp, #40]	; 0x28
   2faec:	add	r2, sl, #1
   2faf0:	mov	sl, r9
   2faf4:	mov	r6, r4
   2faf8:	ldr	r0, [r0]
   2fafc:	mov	r9, r3
   2fb00:	str	r0, [r1, #8]
   2fb04:	ldr	r0, [r3]
   2fb08:	b	30fbc <__flatcc_fb_parse@@Base+0x5cec>
   2fb0c:	ldr	r2, [ip]
   2fb10:	ldr	r0, [sl]
   2fb14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fb18:	add	r5, r2, r2, lsl #2
   2fb1c:	add	r3, r0, r5, lsl #2
   2fb20:	str	r3, [r1]
   2fb24:	ldr	r1, [r7]
   2fb28:	cmp	r1, r3
   2fb2c:	bne	2fba0 <__flatcc_fb_parse@@Base+0x48d0>
   2fb30:	lsl	r1, r2, #1
   2fb34:	cmp	r2, #0
   2fb38:	mov	r8, r9
   2fb3c:	mov	r9, sl
   2fb40:	mov	sl, r6
   2fb44:	mov	r6, ip
   2fb48:	movweq	r1, #1024	; 0x400
   2fb4c:	str	r1, [ip]
   2fb50:	add	r1, r1, r1, lsl #2
   2fb54:	lsl	r1, r1, #2
   2fb58:	bl	14940 <realloc@plt>
   2fb5c:	cmp	r0, #0
   2fb60:	str	r0, [r9]
   2fb64:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2fb68:	ldr	r1, [r6]
   2fb6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fb70:	mov	ip, r6
   2fb74:	mov	r6, sl
   2fb78:	mov	r2, r9
   2fb7c:	mov	sl, r9
   2fb80:	mov	r9, r8
   2fb84:	add	r1, r1, r1, lsl #2
   2fb88:	add	r1, r0, r1, lsl #2
   2fb8c:	str	r1, [r3]
   2fb90:	add	r1, r0, r5, lsl #2
   2fb94:	str	r1, [r7]
   2fb98:	ldr	r8, [pc, #3884]	; 30acc <__flatcc_fb_parse@@Base+0x57fc>
   2fb9c:	add	r8, pc, r8
   2fba0:	str	r6, [r1]
   2fba4:	mov	r0, #43	; 0x2b
   2fba8:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2fbac:	ldr	r2, [ip]
   2fbb0:	ldr	r0, [sl]
   2fbb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fbb8:	add	r5, r2, r2, lsl #2
   2fbbc:	add	r3, r0, r5, lsl #2
   2fbc0:	str	r3, [r1]
   2fbc4:	ldr	r1, [r7]
   2fbc8:	cmp	r1, r3
   2fbcc:	bne	2fc40 <__flatcc_fb_parse@@Base+0x4970>
   2fbd0:	lsl	r1, r2, #1
   2fbd4:	cmp	r2, #0
   2fbd8:	mov	r8, r9
   2fbdc:	mov	r9, sl
   2fbe0:	mov	sl, r6
   2fbe4:	mov	r6, ip
   2fbe8:	movweq	r1, #1024	; 0x400
   2fbec:	str	r1, [ip]
   2fbf0:	add	r1, r1, r1, lsl #2
   2fbf4:	lsl	r1, r1, #2
   2fbf8:	bl	14940 <realloc@plt>
   2fbfc:	cmp	r0, #0
   2fc00:	str	r0, [r9]
   2fc04:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2fc08:	ldr	r1, [r6]
   2fc0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fc10:	mov	ip, r6
   2fc14:	mov	r6, sl
   2fc18:	mov	r2, r9
   2fc1c:	mov	sl, r9
   2fc20:	mov	r9, r8
   2fc24:	add	r1, r1, r1, lsl #2
   2fc28:	add	r1, r0, r1, lsl #2
   2fc2c:	str	r1, [r3]
   2fc30:	add	r1, r0, r5, lsl #2
   2fc34:	str	r1, [r7]
   2fc38:	ldr	r8, [pc, #3728]	; 30ad0 <__flatcc_fb_parse@@Base+0x5800>
   2fc3c:	add	r8, pc, r8
   2fc40:	str	r6, [r1]
   2fc44:	mov	r0, #58	; 0x3a
   2fc48:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2fc4c:	ldr	r2, [ip]
   2fc50:	ldr	r0, [sl]
   2fc54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fc58:	add	r5, r2, r2, lsl #2
   2fc5c:	add	r3, r0, r5, lsl #2
   2fc60:	str	r3, [r1]
   2fc64:	ldr	r1, [r7]
   2fc68:	cmp	r1, r3
   2fc6c:	bne	2fce0 <__flatcc_fb_parse@@Base+0x4a10>
   2fc70:	lsl	r1, r2, #1
   2fc74:	cmp	r2, #0
   2fc78:	mov	r8, r9
   2fc7c:	mov	r9, sl
   2fc80:	mov	sl, r6
   2fc84:	mov	r6, ip
   2fc88:	movweq	r1, #1024	; 0x400
   2fc8c:	str	r1, [ip]
   2fc90:	add	r1, r1, r1, lsl #2
   2fc94:	lsl	r1, r1, #2
   2fc98:	bl	14940 <realloc@plt>
   2fc9c:	cmp	r0, #0
   2fca0:	str	r0, [r9]
   2fca4:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2fca8:	ldr	r1, [r6]
   2fcac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fcb0:	mov	ip, r6
   2fcb4:	mov	r6, sl
   2fcb8:	mov	r2, r9
   2fcbc:	mov	sl, r9
   2fcc0:	mov	r9, r8
   2fcc4:	add	r1, r1, r1, lsl #2
   2fcc8:	add	r1, r0, r1, lsl #2
   2fccc:	str	r1, [r3]
   2fcd0:	add	r1, r0, r5, lsl #2
   2fcd4:	str	r1, [r7]
   2fcd8:	ldr	r8, [pc, #3972]	; 30c64 <__flatcc_fb_parse@@Base+0x5994>
   2fcdc:	add	r8, pc, r8
   2fce0:	str	r6, [r1]
   2fce4:	mov	r0, #62	; 0x3e
   2fce8:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2fcec:	ldr	r2, [ip]
   2fcf0:	ldr	r0, [sl]
   2fcf4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fcf8:	add	r5, r2, r2, lsl #2
   2fcfc:	add	r3, r0, r5, lsl #2
   2fd00:	str	r3, [r1]
   2fd04:	ldr	r1, [r7]
   2fd08:	cmp	r1, r3
   2fd0c:	bne	2fd80 <__flatcc_fb_parse@@Base+0x4ab0>
   2fd10:	lsl	r1, r2, #1
   2fd14:	cmp	r2, #0
   2fd18:	mov	r8, r9
   2fd1c:	mov	r9, sl
   2fd20:	mov	sl, r6
   2fd24:	mov	r6, ip
   2fd28:	movweq	r1, #1024	; 0x400
   2fd2c:	str	r1, [ip]
   2fd30:	add	r1, r1, r1, lsl #2
   2fd34:	lsl	r1, r1, #2
   2fd38:	bl	14940 <realloc@plt>
   2fd3c:	cmp	r0, #0
   2fd40:	str	r0, [r9]
   2fd44:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2fd48:	ldr	r1, [r6]
   2fd4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fd50:	mov	ip, r6
   2fd54:	mov	r6, sl
   2fd58:	mov	r2, r9
   2fd5c:	mov	sl, r9
   2fd60:	mov	r9, r8
   2fd64:	add	r1, r1, r1, lsl #2
   2fd68:	add	r1, r0, r1, lsl #2
   2fd6c:	str	r1, [r3]
   2fd70:	add	r1, r0, r5, lsl #2
   2fd74:	str	r1, [r7]
   2fd78:	ldr	r8, [pc, #3988]	; 30d14 <__flatcc_fb_parse@@Base+0x5a44>
   2fd7c:	add	r8, pc, r8
   2fd80:	str	r6, [r1]
   2fd84:	mov	r0, #42	; 0x2a
   2fd88:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2fd8c:	movw	r0, #64572	; 0xfc3c
   2fd90:	mov	r5, r6
   2fd94:	movt	r0, #65535	; 0xffff
   2fd98:	sub	r4, r0, #16
   2fd9c:	b	2ea6c <__flatcc_fb_parse@@Base+0x379c>
   2fda0:	ldr	r2, [ip]
   2fda4:	ldr	r0, [sl]
   2fda8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fdac:	add	r5, r2, r2, lsl #2
   2fdb0:	add	r3, r0, r5, lsl #2
   2fdb4:	str	r3, [r1]
   2fdb8:	ldr	r1, [r7]
   2fdbc:	cmp	r1, r3
   2fdc0:	bne	2fe34 <__flatcc_fb_parse@@Base+0x4b64>
   2fdc4:	lsl	r1, r2, #1
   2fdc8:	cmp	r2, #0
   2fdcc:	mov	r8, r9
   2fdd0:	mov	r9, sl
   2fdd4:	mov	sl, r6
   2fdd8:	mov	r6, ip
   2fddc:	movweq	r1, #1024	; 0x400
   2fde0:	str	r1, [ip]
   2fde4:	add	r1, r1, r1, lsl #2
   2fde8:	lsl	r1, r1, #2
   2fdec:	bl	14940 <realloc@plt>
   2fdf0:	cmp	r0, #0
   2fdf4:	str	r0, [r9]
   2fdf8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2fdfc:	ldr	r1, [r6]
   2fe00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fe04:	mov	ip, r6
   2fe08:	mov	r6, sl
   2fe0c:	mov	r2, r9
   2fe10:	mov	sl, r9
   2fe14:	mov	r9, r8
   2fe18:	add	r1, r1, r1, lsl #2
   2fe1c:	add	r1, r0, r1, lsl #2
   2fe20:	str	r1, [r3]
   2fe24:	add	r1, r0, r5, lsl #2
   2fe28:	str	r1, [r7]
   2fe2c:	ldr	r8, [pc, #3960]	; 30dac <__flatcc_fb_parse@@Base+0x5adc>
   2fe30:	add	r8, pc, r8
   2fe34:	str	r6, [r1]
   2fe38:	mov	r0, #60	; 0x3c
   2fe3c:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2fe40:	ldr	r2, [ip]
   2fe44:	ldr	r0, [sl]
   2fe48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fe4c:	add	r5, r2, r2, lsl #2
   2fe50:	add	r3, r0, r5, lsl #2
   2fe54:	str	r3, [r1]
   2fe58:	ldr	r1, [r7]
   2fe5c:	cmp	r1, r3
   2fe60:	bne	2fec4 <__flatcc_fb_parse@@Base+0x4bf4>
   2fe64:	lsl	r1, r2, #1
   2fe68:	cmp	r2, #0
   2fe6c:	mov	sl, r6
   2fe70:	mov	r6, ip
   2fe74:	movweq	r1, #1024	; 0x400
   2fe78:	str	r1, [ip]
   2fe7c:	add	r1, r1, r1, lsl #2
   2fe80:	lsl	r1, r1, #2
   2fe84:	bl	14940 <realloc@plt>
   2fe88:	ldr	r1, [sp, #32]
   2fe8c:	cmp	r0, #0
   2fe90:	str	r0, [r1]
   2fe94:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2fe98:	mov	r2, r1
   2fe9c:	ldr	r1, [r6]
   2fea0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fea4:	mov	ip, r6
   2fea8:	mov	r6, sl
   2feac:	mov	sl, r2
   2feb0:	add	r1, r1, r1, lsl #2
   2feb4:	add	r1, r0, r1, lsl #2
   2feb8:	str	r1, [r3]
   2febc:	add	r1, r0, r5, lsl #2
   2fec0:	str	r1, [r7]
   2fec4:	mov	r0, #47	; 0x2f
   2fec8:	str	r6, [r1]
   2fecc:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2fed0:	ldr	r2, [ip]
   2fed4:	ldr	r0, [sl]
   2fed8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2fedc:	add	r5, r2, r2, lsl #2
   2fee0:	add	r3, r0, r5, lsl #2
   2fee4:	str	r3, [r1]
   2fee8:	ldr	r1, [r7]
   2feec:	cmp	r1, r3
   2fef0:	bne	2ff64 <__flatcc_fb_parse@@Base+0x4c94>
   2fef4:	lsl	r1, r2, #1
   2fef8:	cmp	r2, #0
   2fefc:	mov	r8, r9
   2ff00:	mov	r9, sl
   2ff04:	mov	sl, r6
   2ff08:	mov	r6, ip
   2ff0c:	movweq	r1, #1024	; 0x400
   2ff10:	str	r1, [ip]
   2ff14:	add	r1, r1, r1, lsl #2
   2ff18:	lsl	r1, r1, #2
   2ff1c:	bl	14940 <realloc@plt>
   2ff20:	cmp	r0, #0
   2ff24:	str	r0, [r9]
   2ff28:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2ff2c:	ldr	r1, [r6]
   2ff30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2ff34:	mov	ip, r6
   2ff38:	mov	r6, sl
   2ff3c:	mov	r2, r9
   2ff40:	mov	sl, r9
   2ff44:	mov	r9, r8
   2ff48:	add	r1, r1, r1, lsl #2
   2ff4c:	add	r1, r0, r1, lsl #2
   2ff50:	str	r1, [r3]
   2ff54:	add	r1, r0, r5, lsl #2
   2ff58:	str	r1, [r7]
   2ff5c:	ldr	r8, [pc, #3988]	; 30ef8 <__flatcc_fb_parse@@Base+0x5c28>
   2ff60:	add	r8, pc, r8
   2ff64:	str	r6, [r1]
   2ff68:	mov	r0, #45	; 0x2d
   2ff6c:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   2ff70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ff74:	ldr	r7, [sp, #28]
   2ff78:	ldr	sl, [sp, #32]
   2ff7c:	ldr	lr, [sp, #44]	; 0x2c
   2ff80:	ldr	r4, [sp, #16]
   2ff84:	add	r8, ip, ip, lsl #2
   2ff88:	mov	r5, r9
   2ff8c:	add	r3, r0, r8, lsl #2
   2ff90:	cmp	r2, r3
   2ff94:	str	r3, [r1]
   2ff98:	bne	2fff4 <__flatcc_fb_parse@@Base+0x4d24>
   2ff9c:	lsl	r2, ip, #1
   2ffa0:	cmp	ip, #0
   2ffa4:	ldr	r5, [sp, #36]	; 0x24
   2ffa8:	movweq	r2, #1024	; 0x400
   2ffac:	add	r1, r2, r2, lsl #2
   2ffb0:	lsl	r1, r1, #2
   2ffb4:	str	r2, [r5]
   2ffb8:	bl	14940 <realloc@plt>
   2ffbc:	cmp	r0, #0
   2ffc0:	str	r0, [sl]
   2ffc4:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   2ffc8:	ldr	r1, [r5]
   2ffcc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2ffd0:	add	r1, r1, r1, lsl #2
   2ffd4:	add	r1, r0, r1, lsl #2
   2ffd8:	str	r1, [r2]
   2ffdc:	add	r2, r0, r8, lsl #2
   2ffe0:	ldr	r0, [sp, #40]	; 0x28
   2ffe4:	str	r2, [r7]
   2ffe8:	ldr	lr, [r0]
   2ffec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2fff0:	ldr	r5, [r0]
   2fff4:	add	r6, r6, #1
   2fff8:	add	r1, r4, #1
   2fffc:	str	r4, [r2]
   30000:	sub	r0, r6, r4
   30004:	sub	r1, r1, lr
   30008:	stmib	r2, {r0, r5}
   3000c:	mov	r0, #22
   30010:	str	r1, [r2, #12]
   30014:	str	r0, [r2, #16]
   30018:	add	r0, r2, #20
   3001c:	ldr	r9, [sp, #40]	; 0x28
   30020:	ldr	ip, [sp, #36]	; 0x24
   30024:	str	r0, [r7]
   30028:	ldr	r8, [pc, #4012]	; 30fdc <__flatcc_fb_parse@@Base+0x5d0c>
   3002c:	add	r8, pc, r8
   30030:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   30034:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30038:	add	r4, ip, ip, lsl #2
   3003c:	str	r8, [sp, #16]
   30040:	ldr	r7, [sp, #28]
   30044:	ldr	r9, [sp, #40]	; 0x28
   30048:	ldr	sl, [sp, #32]
   3004c:	mov	r6, r5
   30050:	add	r3, r0, r4, lsl #2
   30054:	cmp	r2, r3
   30058:	str	r3, [r1]
   3005c:	ldr	r8, [pc, #3964]	; 30fe0 <__flatcc_fb_parse@@Base+0x5d10>
   30060:	ldr	lr, [sp, #44]	; 0x2c
   30064:	add	r8, pc, r8
   30068:	bne	300c4 <__flatcc_fb_parse@@Base+0x4df4>
   3006c:	lsl	r2, ip, #1
   30070:	cmp	ip, #0
   30074:	ldr	r5, [sp, #36]	; 0x24
   30078:	movweq	r2, #1024	; 0x400
   3007c:	add	r1, r2, r2, lsl #2
   30080:	lsl	r1, r1, #2
   30084:	str	r2, [r5]
   30088:	bl	14940 <realloc@plt>
   3008c:	cmp	r0, #0
   30090:	str	r0, [sl]
   30094:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30098:	ldr	r1, [r5]
   3009c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   300a0:	add	r1, r1, r1, lsl #2
   300a4:	add	r1, r0, r1, lsl #2
   300a8:	str	r1, [r2]
   300ac:	add	r2, r0, r4, lsl #2
   300b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   300b4:	str	r2, [r7]
   300b8:	ldr	lr, [r9]
   300bc:	ldr	r0, [r0]
   300c0:	str	r0, [sp, #16]
   300c4:	mov	r1, #0
   300c8:	str	r6, [r2]
   300cc:	add	r0, r6, #1
   300d0:	str	r1, [r2, #4]
   300d4:	ldr	r1, [sp, #16]
   300d8:	sub	r0, r0, lr
   300dc:	str	r1, [r2, #8]
   300e0:	b	30cf8 <__flatcc_fb_parse@@Base+0x5a28>
   300e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   300e8:	add	r4, r6, #2
   300ec:	cmp	r4, r0
   300f0:	beq	30a28 <__flatcc_fb_parse@@Base+0x5758>
   300f4:	ldrb	r0, [r4]
   300f8:	cmp	r0, #61	; 0x3d
   300fc:	bne	30a28 <__flatcc_fb_parse@@Base+0x5758>
   30100:	ldr	r2, [ip]
   30104:	ldr	r0, [sl]
   30108:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3010c:	add	r4, r2, r2, lsl #2
   30110:	add	r3, r0, r4, lsl #2
   30114:	str	r3, [r1]
   30118:	ldr	r1, [r7]
   3011c:	cmp	r1, r3
   30120:	bne	30170 <__flatcc_fb_parse@@Base+0x4ea0>
   30124:	lsl	r1, r2, #1
   30128:	cmp	r2, #0
   3012c:	mov	r5, ip
   30130:	movweq	r1, #1024	; 0x400
   30134:	str	r1, [ip]
   30138:	add	r1, r1, r1, lsl #2
   3013c:	lsl	r1, r1, #2
   30140:	bl	14940 <realloc@plt>
   30144:	cmp	r0, #0
   30148:	str	r0, [sl]
   3014c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30150:	ldr	r1, [r5]
   30154:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30158:	mov	ip, r5
   3015c:	add	r1, r1, r1, lsl #2
   30160:	add	r1, r0, r1, lsl #2
   30164:	str	r1, [r2]
   30168:	add	r1, r0, r4, lsl #2
   3016c:	str	r1, [r7]
   30170:	add	r0, r6, #3
   30174:	str	r6, [r1]
   30178:	movw	r2, #14906	; 0x3a3a
   3017c:	b	3085c <__flatcc_fb_parse@@Base+0x558c>
   30180:	ldr	r2, [ip]
   30184:	ldr	r0, [sl]
   30188:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3018c:	add	r4, r2, r2, lsl #2
   30190:	add	r3, r0, r4, lsl #2
   30194:	str	r3, [r1]
   30198:	ldr	r1, [r7]
   3019c:	cmp	r1, r3
   301a0:	bne	301f0 <__flatcc_fb_parse@@Base+0x4f20>
   301a4:	lsl	r1, r2, #1
   301a8:	cmp	r2, #0
   301ac:	mov	r5, ip
   301b0:	movweq	r1, #1024	; 0x400
   301b4:	str	r1, [ip]
   301b8:	add	r1, r1, r1, lsl #2
   301bc:	lsl	r1, r1, #2
   301c0:	bl	14940 <realloc@plt>
   301c4:	cmp	r0, #0
   301c8:	str	r0, [sl]
   301cc:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   301d0:	ldr	r1, [r5]
   301d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   301d8:	mov	ip, r5
   301dc:	add	r1, r1, r1, lsl #2
   301e0:	add	r1, r0, r1, lsl #2
   301e4:	str	r1, [r2]
   301e8:	add	r1, r0, r4, lsl #2
   301ec:	str	r1, [r7]
   301f0:	add	r0, r6, #2
   301f4:	str	r6, [r1]
   301f8:	movw	r2, #11051	; 0x2b2b
   301fc:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   30200:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30204:	add	r4, r6, #2
   30208:	cmp	r4, r0
   3020c:	beq	30db0 <__flatcc_fb_parse@@Base+0x5ae0>
   30210:	ldrb	r0, [r4]
   30214:	cmp	r0, #62	; 0x3e
   30218:	beq	312b0 <__flatcc_fb_parse@@Base+0x5fe0>
   3021c:	cmp	r0, #61	; 0x3d
   30220:	bne	30db0 <__flatcc_fb_parse@@Base+0x5ae0>
   30224:	ldr	r2, [ip]
   30228:	ldr	r0, [sl]
   3022c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30230:	add	r4, r2, r2, lsl #2
   30234:	add	r3, r0, r4, lsl #2
   30238:	str	r3, [r1]
   3023c:	ldr	r1, [r7]
   30240:	cmp	r1, r3
   30244:	bne	30294 <__flatcc_fb_parse@@Base+0x4fc4>
   30248:	lsl	r1, r2, #1
   3024c:	cmp	r2, #0
   30250:	mov	r5, ip
   30254:	movweq	r1, #1024	; 0x400
   30258:	str	r1, [ip]
   3025c:	add	r1, r1, r1, lsl #2
   30260:	lsl	r1, r1, #2
   30264:	bl	14940 <realloc@plt>
   30268:	cmp	r0, #0
   3026c:	str	r0, [sl]
   30270:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30274:	ldr	r1, [r5]
   30278:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3027c:	mov	ip, r5
   30280:	add	r1, r1, r1, lsl #2
   30284:	add	r1, r0, r1, lsl #2
   30288:	str	r1, [r2]
   3028c:	add	r1, r0, r4, lsl #2
   30290:	str	r1, [r7]
   30294:	add	r0, r6, #3
   30298:	str	r6, [r1]
   3029c:	movw	r2, #15934	; 0x3e3e
   302a0:	b	3085c <__flatcc_fb_parse@@Base+0x558c>
   302a4:	andeq	r9, r2, r4, lsl r0
   302a8:	ldr	r2, [ip]
   302ac:	ldr	r0, [sl]
   302b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   302b4:	add	r4, r2, r2, lsl #2
   302b8:	add	r3, r0, r4, lsl #2
   302bc:	str	r3, [r1]
   302c0:	ldr	r1, [r7]
   302c4:	cmp	r1, r3
   302c8:	bne	30318 <__flatcc_fb_parse@@Base+0x5048>
   302cc:	lsl	r1, r2, #1
   302d0:	cmp	r2, #0
   302d4:	mov	r5, ip
   302d8:	movweq	r1, #1024	; 0x400
   302dc:	str	r1, [ip]
   302e0:	add	r1, r1, r1, lsl #2
   302e4:	lsl	r1, r1, #2
   302e8:	bl	14940 <realloc@plt>
   302ec:	cmp	r0, #0
   302f0:	str	r0, [sl]
   302f4:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   302f8:	ldr	r1, [r5]
   302fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30300:	mov	ip, r5
   30304:	add	r1, r1, r1, lsl #2
   30308:	add	r1, r0, r1, lsl #2
   3030c:	str	r1, [r2]
   30310:	add	r1, r0, r4, lsl #2
   30314:	str	r1, [r7]
   30318:	movw	r0, #9766	; 0x2626
   3031c:	str	r6, [r1]
   30320:	add	r2, r6, #1
   30324:	add	r4, r6, #2
   30328:	str	r0, [r1, #16]
   3032c:	mov	r0, #2
   30330:	str	r0, [r1, #4]
   30334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30338:	ldr	r0, [r0]
   3033c:	str	r0, [r1, #8]
   30340:	ldr	r0, [r9]
   30344:	sub	r0, r2, r0
   30348:	str	r0, [r1, #12]
   3034c:	add	r0, r1, #20
   30350:	str	r0, [r7]
   30354:	ldr	r2, [ip]
   30358:	ldr	r0, [sl]
   3035c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30360:	add	r5, r2, r2, lsl #2
   30364:	add	r3, r0, r5, lsl #2
   30368:	str	r3, [r1]
   3036c:	ldr	r1, [r7]
   30370:	cmp	r1, r3
   30374:	bne	303e8 <__flatcc_fb_parse@@Base+0x5118>
   30378:	lsl	r1, r2, #1
   3037c:	cmp	r2, #0
   30380:	mov	r8, r9
   30384:	mov	r9, sl
   30388:	mov	sl, r6
   3038c:	mov	r6, ip
   30390:	movweq	r1, #1024	; 0x400
   30394:	str	r1, [ip]
   30398:	add	r1, r1, r1, lsl #2
   3039c:	lsl	r1, r1, #2
   303a0:	bl	14940 <realloc@plt>
   303a4:	cmp	r0, #0
   303a8:	str	r0, [r9]
   303ac:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   303b0:	ldr	r1, [r6]
   303b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   303b8:	mov	ip, r6
   303bc:	mov	r6, sl
   303c0:	mov	r2, r9
   303c4:	mov	sl, r9
   303c8:	mov	r9, r8
   303cc:	add	r1, r1, r1, lsl #2
   303d0:	add	r1, r0, r1, lsl #2
   303d4:	str	r1, [r3]
   303d8:	add	r1, r0, r5, lsl #2
   303dc:	str	r1, [r7]
   303e0:	ldr	r8, [pc, #3944]	; 31350 <__flatcc_fb_parse@@Base+0x6080>
   303e4:	add	r8, pc, r8
   303e8:	str	r6, [r1]
   303ec:	mov	r0, #38	; 0x26
   303f0:	b	30c3c <__flatcc_fb_parse@@Base+0x596c>
   303f4:	ldr	r2, [ip]
   303f8:	ldr	r0, [sl]
   303fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30400:	add	r4, r2, r2, lsl #2
   30404:	add	r3, r0, r4, lsl #2
   30408:	str	r3, [r1]
   3040c:	ldr	r1, [r7]
   30410:	cmp	r1, r3
   30414:	bne	30464 <__flatcc_fb_parse@@Base+0x5194>
   30418:	lsl	r1, r2, #1
   3041c:	cmp	r2, #0
   30420:	mov	r5, ip
   30424:	movweq	r1, #1024	; 0x400
   30428:	str	r1, [ip]
   3042c:	add	r1, r1, r1, lsl #2
   30430:	lsl	r1, r1, #2
   30434:	bl	14940 <realloc@plt>
   30438:	cmp	r0, #0
   3043c:	str	r0, [sl]
   30440:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30444:	ldr	r1, [r5]
   30448:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3044c:	mov	ip, r5
   30450:	add	r1, r1, r1, lsl #2
   30454:	add	r1, r0, r1, lsl #2
   30458:	str	r1, [r2]
   3045c:	add	r1, r0, r4, lsl #2
   30460:	str	r1, [r7]
   30464:	movw	r0, #31868	; 0x7c7c
   30468:	str	r6, [r1]
   3046c:	add	r2, r6, #1
   30470:	add	r4, r6, #2
   30474:	str	r0, [r1, #16]
   30478:	mov	r0, #2
   3047c:	str	r0, [r1, #4]
   30480:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30484:	ldr	r0, [r0]
   30488:	str	r0, [r1, #8]
   3048c:	ldr	r0, [r9]
   30490:	sub	r0, r2, r0
   30494:	str	r0, [r1, #12]
   30498:	add	r0, r1, #20
   3049c:	str	r0, [r7]
   304a0:	ldr	r2, [ip]
   304a4:	ldr	r0, [sl]
   304a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   304ac:	add	r5, r2, r2, lsl #2
   304b0:	add	r3, r0, r5, lsl #2
   304b4:	str	r3, [r1]
   304b8:	ldr	r1, [r7]
   304bc:	cmp	r1, r3
   304c0:	bne	30534 <__flatcc_fb_parse@@Base+0x5264>
   304c4:	lsl	r1, r2, #1
   304c8:	cmp	r2, #0
   304cc:	mov	r8, r9
   304d0:	mov	r9, sl
   304d4:	mov	sl, r6
   304d8:	mov	r6, ip
   304dc:	movweq	r1, #1024	; 0x400
   304e0:	str	r1, [ip]
   304e4:	add	r1, r1, r1, lsl #2
   304e8:	lsl	r1, r1, #2
   304ec:	bl	14940 <realloc@plt>
   304f0:	cmp	r0, #0
   304f4:	str	r0, [r9]
   304f8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   304fc:	ldr	r1, [r6]
   30500:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30504:	mov	ip, r6
   30508:	mov	r6, sl
   3050c:	mov	r2, r9
   30510:	mov	sl, r9
   30514:	mov	r9, r8
   30518:	add	r1, r1, r1, lsl #2
   3051c:	add	r1, r0, r1, lsl #2
   30520:	str	r1, [r3]
   30524:	add	r1, r0, r5, lsl #2
   30528:	str	r1, [r7]
   3052c:	ldr	r8, [pc, #3952]	; 314a4 <__flatcc_fb_parse@@Base+0x61d4>
   30530:	add	r8, pc, r8
   30534:	mov	r0, #124	; 0x7c
   30538:	str	r6, [r1]
   3053c:	b	30c3c <__flatcc_fb_parse@@Base+0x596c>
   30540:	ldr	r2, [ip]
   30544:	ldr	r0, [sl]
   30548:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3054c:	add	r5, r2, r2, lsl #2
   30550:	add	r3, r0, r5, lsl #2
   30554:	str	r3, [r1]
   30558:	ldr	r1, [r7]
   3055c:	cmp	r1, r3
   30560:	bne	305d4 <__flatcc_fb_parse@@Base+0x5304>
   30564:	lsl	r1, r2, #1
   30568:	cmp	r2, #0
   3056c:	mov	r8, r9
   30570:	mov	r9, sl
   30574:	mov	sl, r6
   30578:	mov	r6, ip
   3057c:	movweq	r1, #1024	; 0x400
   30580:	str	r1, [ip]
   30584:	add	r1, r1, r1, lsl #2
   30588:	lsl	r1, r1, #2
   3058c:	bl	14940 <realloc@plt>
   30590:	cmp	r0, #0
   30594:	str	r0, [r9]
   30598:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   3059c:	ldr	r1, [r6]
   305a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   305a4:	mov	ip, r6
   305a8:	mov	r6, sl
   305ac:	mov	r2, r9
   305b0:	mov	sl, r9
   305b4:	mov	r9, r8
   305b8:	add	r1, r1, r1, lsl #2
   305bc:	add	r1, r0, r1, lsl #2
   305c0:	str	r1, [r3]
   305c4:	add	r1, r0, r5, lsl #2
   305c8:	str	r1, [r7]
   305cc:	ldr	r8, [pc, #3968]	; 31554 <__flatcc_fb_parse@@Base+0x6284>
   305d0:	add	r8, pc, r8
   305d4:	str	r6, [r1]
   305d8:	movw	r0, #10794	; 0x2a2a
   305dc:	b	30f98 <__flatcc_fb_parse@@Base+0x5cc8>
   305e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   305e4:	add	r4, r6, #2
   305e8:	cmp	r4, r0
   305ec:	beq	30ad4 <__flatcc_fb_parse@@Base+0x5804>
   305f0:	ldrb	r0, [r4]
   305f4:	cmp	r0, #61	; 0x3d
   305f8:	bne	30ad4 <__flatcc_fb_parse@@Base+0x5804>
   305fc:	ldr	r2, [ip]
   30600:	ldr	r0, [sl]
   30604:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30608:	add	r4, r2, r2, lsl #2
   3060c:	add	r3, r0, r4, lsl #2
   30610:	str	r3, [r1]
   30614:	ldr	r1, [r7]
   30618:	cmp	r1, r3
   3061c:	bne	3066c <__flatcc_fb_parse@@Base+0x539c>
   30620:	lsl	r1, r2, #1
   30624:	cmp	r2, #0
   30628:	mov	r5, ip
   3062c:	movweq	r1, #1024	; 0x400
   30630:	str	r1, [ip]
   30634:	add	r1, r1, r1, lsl #2
   30638:	lsl	r1, r1, #2
   3063c:	bl	14940 <realloc@plt>
   30640:	cmp	r0, #0
   30644:	str	r0, [sl]
   30648:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   3064c:	ldr	r1, [r5]
   30650:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30654:	mov	ip, r5
   30658:	add	r1, r1, r1, lsl #2
   3065c:	add	r1, r0, r1, lsl #2
   30660:	str	r1, [r2]
   30664:	add	r1, r0, r4, lsl #2
   30668:	str	r1, [r7]
   3066c:	add	r0, r6, #3
   30670:	movw	r2, #15677	; 0x3d3d
   30674:	str	r6, [r1]
   30678:	b	3085c <__flatcc_fb_parse@@Base+0x558c>
   3067c:	andeq	r8, r2, r4, ror #23
   30680:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30684:	add	r4, ip, ip, lsl #2
   30688:	mov	r6, r8
   3068c:	ldr	r7, [sp, #28]
   30690:	ldr	r9, [sp, #40]	; 0x28
   30694:	add	r3, r0, r4, lsl #2
   30698:	cmp	r2, r3
   3069c:	str	r3, [r1]
   306a0:	ldr	r8, [pc, #4004]	; 3164c <__flatcc_fb_parse@@Base+0x637c>
   306a4:	add	r8, pc, r8
   306a8:	bne	30704 <__flatcc_fb_parse@@Base+0x5434>
   306ac:	lsl	r2, ip, #1
   306b0:	cmp	ip, #0
   306b4:	ldr	r6, [sp, #36]	; 0x24
   306b8:	movweq	r2, #1024	; 0x400
   306bc:	add	r1, r2, r2, lsl #2
   306c0:	lsl	r1, r1, #2
   306c4:	str	r2, [r6]
   306c8:	bl	14940 <realloc@plt>
   306cc:	ldr	r1, [sp, #32]
   306d0:	cmp	r0, #0
   306d4:	str	r0, [r1]
   306d8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   306dc:	ldr	r1, [r6]
   306e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   306e4:	add	r1, r1, r1, lsl #2
   306e8:	add	r1, r0, r1, lsl #2
   306ec:	str	r1, [r2]
   306f0:	add	r2, r0, r4, lsl #2
   306f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   306f8:	str	r2, [r7]
   306fc:	ldr	lr, [r9]
   30700:	ldr	r6, [r0]
   30704:	mov	r1, #0
   30708:	add	r0, sl, #1
   3070c:	str	sl, [r2]
   30710:	stmib	r2, {r1, r6}
   30714:	sub	r0, r0, lr
   30718:	mov	r6, sl
   3071c:	ldr	ip, [sp, #36]	; 0x24
   30720:	ldr	sl, [sp, #32]
   30724:	str	r0, [r2, #12]
   30728:	mov	r0, #23
   3072c:	str	r0, [r2, #16]
   30730:	add	r0, r2, #20
   30734:	str	r0, [r7]
   30738:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   3073c:	ldr	r2, [ip]
   30740:	ldr	r0, [sl]
   30744:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30748:	add	r4, r2, r2, lsl #2
   3074c:	add	r3, r0, r4, lsl #2
   30750:	str	r3, [r1]
   30754:	ldr	r1, [r7]
   30758:	cmp	r1, r3
   3075c:	bne	307ac <__flatcc_fb_parse@@Base+0x54dc>
   30760:	lsl	r1, r2, #1
   30764:	cmp	r2, #0
   30768:	mov	r5, ip
   3076c:	movweq	r1, #1024	; 0x400
   30770:	str	r1, [ip]
   30774:	add	r1, r1, r1, lsl #2
   30778:	lsl	r1, r1, #2
   3077c:	bl	14940 <realloc@plt>
   30780:	cmp	r0, #0
   30784:	str	r0, [sl]
   30788:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   3078c:	ldr	r1, [r5]
   30790:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30794:	mov	ip, r5
   30798:	add	r1, r1, r1, lsl #2
   3079c:	add	r1, r0, r1, lsl #2
   307a0:	str	r1, [r2]
   307a4:	add	r1, r0, r4, lsl #2
   307a8:	str	r1, [r7]
   307ac:	add	r0, r6, #2
   307b0:	str	r6, [r1]
   307b4:	movw	r2, #15676	; 0x3d3c
   307b8:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   307bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   307c0:	add	r4, r6, #2
   307c4:	cmp	r4, r0
   307c8:	beq	30fe4 <__flatcc_fb_parse@@Base+0x5d14>
   307cc:	ldrb	r0, [r4]
   307d0:	cmp	r0, #60	; 0x3c
   307d4:	beq	313fc <__flatcc_fb_parse@@Base+0x612c>
   307d8:	cmp	r0, #61	; 0x3d
   307dc:	bne	30fe4 <__flatcc_fb_parse@@Base+0x5d14>
   307e0:	ldr	r2, [ip]
   307e4:	ldr	r0, [sl]
   307e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   307ec:	add	r4, r2, r2, lsl #2
   307f0:	add	r3, r0, r4, lsl #2
   307f4:	str	r3, [r1]
   307f8:	ldr	r1, [r7]
   307fc:	cmp	r1, r3
   30800:	bne	30850 <__flatcc_fb_parse@@Base+0x5580>
   30804:	lsl	r1, r2, #1
   30808:	cmp	r2, #0
   3080c:	mov	r5, ip
   30810:	movweq	r1, #1024	; 0x400
   30814:	str	r1, [ip]
   30818:	add	r1, r1, r1, lsl #2
   3081c:	lsl	r1, r1, #2
   30820:	bl	14940 <realloc@plt>
   30824:	cmp	r0, #0
   30828:	str	r0, [sl]
   3082c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30830:	ldr	r1, [r5]
   30834:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30838:	mov	ip, r5
   3083c:	add	r1, r1, r1, lsl #2
   30840:	add	r1, r0, r1, lsl #2
   30844:	str	r1, [r2]
   30848:	add	r1, r0, r4, lsl #2
   3084c:	str	r1, [r7]
   30850:	add	r0, r6, #3
   30854:	str	r6, [r1]
   30858:	movw	r2, #15420	; 0x3c3c
   3085c:	movt	r2, #61	; 0x3d
   30860:	str	r2, [r1, #16]
   30864:	mov	r2, #3
   30868:	b	2e064 <__flatcc_fb_parse@@Base+0x2d94>
   3086c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   30870:	add	r0, r6, #2
   30874:	cmp	r0, r1
   30878:	beq	31200 <__flatcc_fb_parse@@Base+0x5f30>
   3087c:	ldrb	r1, [r0]
   30880:	sub	r2, r1, #33	; 0x21
   30884:	sub	r1, r1, #42	; 0x2a
   30888:	clz	r2, r2
   3088c:	clz	r1, r1
   30890:	lsr	r2, r2, #5
   30894:	lsr	r1, r1, #5
   30898:	orr	r1, r1, r2
   3089c:	b	31204 <__flatcc_fb_parse@@Base+0x5f34>
   308a0:	ldr	r2, [ip]
   308a4:	ldr	r0, [sl]
   308a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   308ac:	add	r4, r2, r2, lsl #2
   308b0:	add	r3, r0, r4, lsl #2
   308b4:	str	r3, [r1]
   308b8:	ldr	r1, [r7]
   308bc:	cmp	r1, r3
   308c0:	bne	30910 <__flatcc_fb_parse@@Base+0x5640>
   308c4:	lsl	r1, r2, #1
   308c8:	cmp	r2, #0
   308cc:	mov	r5, ip
   308d0:	movweq	r1, #1024	; 0x400
   308d4:	str	r1, [ip]
   308d8:	add	r1, r1, r1, lsl #2
   308dc:	lsl	r1, r1, #2
   308e0:	bl	14940 <realloc@plt>
   308e4:	cmp	r0, #0
   308e8:	str	r0, [sl]
   308ec:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   308f0:	ldr	r1, [r5]
   308f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   308f8:	mov	ip, r5
   308fc:	add	r1, r1, r1, lsl #2
   30900:	add	r1, r0, r1, lsl #2
   30904:	str	r1, [r2]
   30908:	add	r1, r0, r4, lsl #2
   3090c:	str	r1, [r7]
   30910:	add	r0, r6, #2
   30914:	movw	r2, #15663	; 0x3d2f
   30918:	str	r6, [r1]
   3091c:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   30920:	ldr	r2, [ip]
   30924:	ldr	r0, [sl]
   30928:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3092c:	add	r4, r2, r2, lsl #2
   30930:	add	r3, r0, r4, lsl #2
   30934:	str	r3, [r1]
   30938:	ldr	r1, [r7]
   3093c:	cmp	r1, r3
   30940:	bne	30990 <__flatcc_fb_parse@@Base+0x56c0>
   30944:	lsl	r1, r2, #1
   30948:	cmp	r2, #0
   3094c:	mov	r5, ip
   30950:	movweq	r1, #1024	; 0x400
   30954:	str	r1, [ip]
   30958:	add	r1, r1, r1, lsl #2
   3095c:	lsl	r1, r1, #2
   30960:	bl	14940 <realloc@plt>
   30964:	cmp	r0, #0
   30968:	str	r0, [sl]
   3096c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30970:	ldr	r1, [r5]
   30974:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30978:	mov	ip, r5
   3097c:	add	r1, r1, r1, lsl #2
   30980:	add	r1, r0, r1, lsl #2
   30984:	str	r1, [r2]
   30988:	add	r1, r0, r4, lsl #2
   3098c:	str	r1, [r7]
   30990:	add	r0, r6, #2
   30994:	str	r6, [r1]
   30998:	movw	r2, #11565	; 0x2d2d
   3099c:	b	30a1c <__flatcc_fb_parse@@Base+0x574c>
   309a0:	ldr	r2, [ip]
   309a4:	ldr	r0, [sl]
   309a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   309ac:	add	r4, r2, r2, lsl #2
   309b0:	add	r3, r0, r4, lsl #2
   309b4:	str	r3, [r1]
   309b8:	ldr	r1, [r7]
   309bc:	cmp	r1, r3
   309c0:	bne	30a10 <__flatcc_fb_parse@@Base+0x5740>
   309c4:	lsl	r1, r2, #1
   309c8:	cmp	r2, #0
   309cc:	mov	r5, ip
   309d0:	movweq	r1, #1024	; 0x400
   309d4:	str	r1, [ip]
   309d8:	add	r1, r1, r1, lsl #2
   309dc:	lsl	r1, r1, #2
   309e0:	bl	14940 <realloc@plt>
   309e4:	cmp	r0, #0
   309e8:	str	r0, [sl]
   309ec:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   309f0:	ldr	r1, [r5]
   309f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   309f8:	mov	ip, r5
   309fc:	add	r1, r1, r1, lsl #2
   30a00:	add	r1, r0, r1, lsl #2
   30a04:	str	r1, [r2]
   30a08:	add	r1, r0, r4, lsl #2
   30a0c:	str	r1, [r7]
   30a10:	add	r0, r6, #2
   30a14:	str	r6, [r1]
   30a18:	movw	r2, #15917	; 0x3e2d
   30a1c:	str	r2, [r1, #16]
   30a20:	mov	r2, #2
   30a24:	b	2e064 <__flatcc_fb_parse@@Base+0x2d94>
   30a28:	ldr	r2, [ip]
   30a2c:	ldr	r0, [sl]
   30a30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30a34:	add	r5, r2, r2, lsl #2
   30a38:	add	r3, r0, r5, lsl #2
   30a3c:	str	r3, [r1]
   30a40:	ldr	r1, [r7]
   30a44:	cmp	r1, r3
   30a48:	bne	30abc <__flatcc_fb_parse@@Base+0x57ec>
   30a4c:	lsl	r1, r2, #1
   30a50:	cmp	r2, #0
   30a54:	mov	r8, r9
   30a58:	mov	r9, sl
   30a5c:	mov	sl, r6
   30a60:	mov	r6, ip
   30a64:	movweq	r1, #1024	; 0x400
   30a68:	str	r1, [ip]
   30a6c:	add	r1, r1, r1, lsl #2
   30a70:	lsl	r1, r1, #2
   30a74:	bl	14940 <realloc@plt>
   30a78:	cmp	r0, #0
   30a7c:	str	r0, [r9]
   30a80:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30a84:	ldr	r1, [r6]
   30a88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30a8c:	mov	ip, r6
   30a90:	mov	r6, sl
   30a94:	mov	r2, r9
   30a98:	mov	sl, r9
   30a9c:	mov	r9, r8
   30aa0:	add	r1, r1, r1, lsl #2
   30aa4:	add	r1, r0, r1, lsl #2
   30aa8:	str	r1, [r3]
   30aac:	add	r1, r0, r5, lsl #2
   30ab0:	str	r1, [r7]
   30ab4:	ldr	r8, [pc, #4084]	; 31ab0 <__flatcc_fb_parse@@Base+0x67e0>
   30ab8:	add	r8, pc, r8
   30abc:	movw	r0, #14906	; 0x3a3a
   30ac0:	str	r6, [r1]
   30ac4:	b	313f0 <__flatcc_fb_parse@@Base+0x6120>
   30ac8:	andeq	r8, r2, ip, lsr r8
   30acc:	andeq	r8, r2, ip, ror #14
   30ad0:	andeq	r8, r2, ip, asr #13
   30ad4:	ldr	r2, [ip]
   30ad8:	ldr	r0, [sl]
   30adc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30ae0:	add	r5, r2, r2, lsl #2
   30ae4:	add	r3, r0, r5, lsl #2
   30ae8:	str	r3, [r1]
   30aec:	ldr	r1, [r7]
   30af0:	cmp	r1, r3
   30af4:	bne	30b68 <__flatcc_fb_parse@@Base+0x5898>
   30af8:	lsl	r1, r2, #1
   30afc:	cmp	r2, #0
   30b00:	mov	r8, r9
   30b04:	mov	r9, sl
   30b08:	mov	sl, r6
   30b0c:	mov	r6, ip
   30b10:	movweq	r1, #1024	; 0x400
   30b14:	str	r1, [ip]
   30b18:	add	r1, r1, r1, lsl #2
   30b1c:	lsl	r1, r1, #2
   30b20:	bl	14940 <realloc@plt>
   30b24:	cmp	r0, #0
   30b28:	str	r0, [r9]
   30b2c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30b30:	ldr	r1, [r6]
   30b34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30b38:	mov	ip, r6
   30b3c:	mov	r6, sl
   30b40:	mov	r2, r9
   30b44:	mov	sl, r9
   30b48:	mov	r9, r8
   30b4c:	add	r1, r1, r1, lsl #2
   30b50:	add	r1, r0, r1, lsl #2
   30b54:	str	r1, [r3]
   30b58:	add	r1, r0, r5, lsl #2
   30b5c:	str	r1, [r7]
   30b60:	ldr	r8, [pc, #3980]	; 31af4 <__flatcc_fb_parse@@Base+0x6824>
   30b64:	add	r8, pc, r8
   30b68:	movw	r0, #15677	; 0x3d3d
   30b6c:	str	r6, [r1]
   30b70:	add	r2, r6, #1
   30b74:	str	r0, [r1, #16]
   30b78:	mov	r0, #2
   30b7c:	str	r0, [r1, #4]
   30b80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30b84:	ldr	r0, [r0]
   30b88:	str	r0, [r1, #8]
   30b8c:	ldr	r0, [r9]
   30b90:	sub	r0, r2, r0
   30b94:	str	r0, [r1, #12]
   30b98:	add	r0, r1, #20
   30b9c:	str	r0, [r7]
   30ba0:	ldr	r2, [ip]
   30ba4:	ldr	r0, [sl]
   30ba8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30bac:	add	r5, r2, r2, lsl #2
   30bb0:	add	r3, r0, r5, lsl #2
   30bb4:	str	r3, [r1]
   30bb8:	ldr	r1, [r7]
   30bbc:	cmp	r1, r3
   30bc0:	bne	30c34 <__flatcc_fb_parse@@Base+0x5964>
   30bc4:	lsl	r1, r2, #1
   30bc8:	cmp	r2, #0
   30bcc:	mov	r8, r9
   30bd0:	mov	r9, sl
   30bd4:	mov	sl, r6
   30bd8:	mov	r6, ip
   30bdc:	movweq	r1, #1024	; 0x400
   30be0:	str	r1, [ip]
   30be4:	add	r1, r1, r1, lsl #2
   30be8:	lsl	r1, r1, #2
   30bec:	bl	14940 <realloc@plt>
   30bf0:	cmp	r0, #0
   30bf4:	str	r0, [r9]
   30bf8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30bfc:	ldr	r1, [r6]
   30c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30c04:	mov	ip, r6
   30c08:	mov	r6, sl
   30c0c:	mov	r2, r9
   30c10:	mov	sl, r9
   30c14:	mov	r9, r8
   30c18:	add	r1, r1, r1, lsl #2
   30c1c:	add	r1, r0, r1, lsl #2
   30c20:	str	r1, [r3]
   30c24:	add	r1, r0, r5, lsl #2
   30c28:	str	r1, [r7]
   30c2c:	ldr	r8, [pc, #3924]	; 31b88 <__flatcc_fb_parse@@Base+0x68b8>
   30c30:	add	r8, pc, r8
   30c34:	str	r6, [r1]
   30c38:	mov	r0, #61	; 0x3d
   30c3c:	str	r0, [r1, #16]
   30c40:	sub	r0, r4, r6
   30c44:	b	30fa0 <__flatcc_fb_parse@@Base+0x5cd0>
   30c48:	ldr	r6, [fp, #-32]	; 0xffffffe0
   30c4c:	ldr	r1, [sp, #40]	; 0x28
   30c50:	ldr	r8, [pc, #4088]	; 31c50 <__flatcc_fb_parse@@Base+0x6980>
   30c54:	mov	sl, r9
   30c58:	add	r8, pc, r8
   30c5c:	mov	r9, r1
   30c60:	b	30c74 <__flatcc_fb_parse@@Base+0x59a4>
   30c64:	andeq	r8, r2, ip, lsr #12
   30c68:	ldr	r7, [sp, #28]
   30c6c:	ldr	sl, [sp, #32]
   30c70:	add	r6, r6, #1
   30c74:	ldr	r5, [sp, #8]
   30c78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30c7c:	add	r4, r5, r5, lsl #2
   30c80:	add	r3, r0, r4, lsl #2
   30c84:	cmp	r2, r3
   30c88:	str	r3, [r1]
   30c8c:	bne	30ce4 <__flatcc_fb_parse@@Base+0x5a14>
   30c90:	lsl	r2, r5, #1
   30c94:	cmp	r5, #0
   30c98:	ldr	r5, [sp, #36]	; 0x24
   30c9c:	movweq	r2, #1024	; 0x400
   30ca0:	add	r1, r2, r2, lsl #2
   30ca4:	lsl	r1, r1, #2
   30ca8:	str	r2, [r5]
   30cac:	bl	14940 <realloc@plt>
   30cb0:	cmp	r0, #0
   30cb4:	str	r0, [sl]
   30cb8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30cbc:	ldr	r1, [r5]
   30cc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30cc4:	add	r1, r1, r1, lsl #2
   30cc8:	add	r1, r0, r1, lsl #2
   30ccc:	str	r1, [r2]
   30cd0:	add	r2, r0, r4, lsl #2
   30cd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30cd8:	str	r2, [r7]
   30cdc:	ldr	lr, [r9]
   30ce0:	ldr	ip, [r0]
   30ce4:	add	r0, r6, #1
   30ce8:	mov	r1, #0
   30cec:	str	r6, [r2]
   30cf0:	sub	r0, r0, lr
   30cf4:	stmib	r2, {r1, ip}
   30cf8:	str	r0, [r2, #12]
   30cfc:	mov	r0, #23
   30d00:	str	r0, [r2, #16]
   30d04:	add	r0, r2, #20
   30d08:	str	r0, [r7]
   30d0c:	ldr	ip, [sp, #36]	; 0x24
   30d10:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   30d14:	andeq	r8, r2, ip, lsl #11
   30d18:	ldr	r0, [sp, #32]
   30d1c:	ldr	r2, [ip]
   30d20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30d24:	ldr	r0, [r0]
   30d28:	add	r4, r2, r2, lsl #2
   30d2c:	add	r3, r0, r4, lsl #2
   30d30:	str	r3, [r1]
   30d34:	ldr	r1, [r7]
   30d38:	cmp	r1, r3
   30d3c:	bne	30da0 <__flatcc_fb_parse@@Base+0x5ad0>
   30d40:	lsl	r1, r2, #1
   30d44:	cmp	r2, #0
   30d48:	mov	r5, r6
   30d4c:	str	sl, [sp, #44]	; 0x2c
   30d50:	mov	r6, ip
   30d54:	movweq	r1, #1024	; 0x400
   30d58:	str	r1, [ip]
   30d5c:	add	r1, r1, r1, lsl #2
   30d60:	lsl	r1, r1, #2
   30d64:	bl	14940 <realloc@plt>
   30d68:	ldr	r1, [sp, #32]
   30d6c:	cmp	r0, #0
   30d70:	str	r0, [r1]
   30d74:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30d78:	ldr	r1, [r6]
   30d7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30d80:	ldr	sl, [sp, #44]	; 0x2c
   30d84:	mov	ip, r6
   30d88:	mov	r6, r5
   30d8c:	add	r1, r1, r1, lsl #2
   30d90:	add	r1, r0, r1, lsl #2
   30d94:	str	r1, [r2]
   30d98:	add	r1, r0, r4, lsl #2
   30d9c:	str	r1, [r7]
   30da0:	mov	r0, #5
   30da4:	str	r6, [r1]
   30da8:	b	2f960 <__flatcc_fb_parse@@Base+0x4690>
   30dac:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   30db0:	ldr	r2, [ip]
   30db4:	ldr	r0, [sl]
   30db8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30dbc:	add	r5, r2, r2, lsl #2
   30dc0:	add	r3, r0, r5, lsl #2
   30dc4:	str	r3, [r1]
   30dc8:	ldr	r1, [r7]
   30dcc:	cmp	r1, r3
   30dd0:	bne	30e44 <__flatcc_fb_parse@@Base+0x5b74>
   30dd4:	lsl	r1, r2, #1
   30dd8:	cmp	r2, #0
   30ddc:	mov	r8, r9
   30de0:	mov	r9, sl
   30de4:	mov	sl, r6
   30de8:	mov	r6, ip
   30dec:	movweq	r1, #1024	; 0x400
   30df0:	str	r1, [ip]
   30df4:	add	r1, r1, r1, lsl #2
   30df8:	lsl	r1, r1, #2
   30dfc:	bl	14940 <realloc@plt>
   30e00:	cmp	r0, #0
   30e04:	str	r0, [r9]
   30e08:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30e0c:	ldr	r1, [r6]
   30e10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30e14:	mov	ip, r6
   30e18:	mov	r6, sl
   30e1c:	mov	r2, r9
   30e20:	mov	sl, r9
   30e24:	mov	r9, r8
   30e28:	add	r1, r1, r1, lsl #2
   30e2c:	add	r1, r0, r1, lsl #2
   30e30:	str	r1, [r3]
   30e34:	add	r1, r0, r5, lsl #2
   30e38:	str	r1, [r7]
   30e3c:	ldr	r8, [pc, #3984]	; 31dd4 <__flatcc_fb_parse@@Base+0x6b04>
   30e40:	add	r8, pc, r8
   30e44:	str	r6, [r1]
   30e48:	movw	r0, #15934	; 0x3e3e
   30e4c:	b	313f0 <__flatcc_fb_parse@@Base+0x6120>
   30e50:	cmp	r0, #46	; 0x2e
   30e54:	bne	30efc <__flatcc_fb_parse@@Base+0x5c2c>
   30e58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30e5c:	add	r4, r6, #2
   30e60:	cmp	r4, r0
   30e64:	beq	31354 <__flatcc_fb_parse@@Base+0x6084>
   30e68:	ldrb	r0, [r4]
   30e6c:	cmp	r0, #46	; 0x2e
   30e70:	bne	31354 <__flatcc_fb_parse@@Base+0x6084>
   30e74:	ldr	r2, [ip]
   30e78:	ldr	r0, [sl]
   30e7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30e80:	add	r4, r2, r2, lsl #2
   30e84:	add	r3, r0, r4, lsl #2
   30e88:	str	r3, [r1]
   30e8c:	ldr	r1, [r7]
   30e90:	cmp	r1, r3
   30e94:	bne	30ee4 <__flatcc_fb_parse@@Base+0x5c14>
   30e98:	lsl	r1, r2, #1
   30e9c:	cmp	r2, #0
   30ea0:	mov	r5, ip
   30ea4:	movweq	r1, #1024	; 0x400
   30ea8:	str	r1, [ip]
   30eac:	add	r1, r1, r1, lsl #2
   30eb0:	lsl	r1, r1, #2
   30eb4:	bl	14940 <realloc@plt>
   30eb8:	cmp	r0, #0
   30ebc:	str	r0, [sl]
   30ec0:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30ec4:	ldr	r1, [r5]
   30ec8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   30ecc:	mov	ip, r5
   30ed0:	add	r1, r1, r1, lsl #2
   30ed4:	add	r1, r0, r1, lsl #2
   30ed8:	str	r1, [r2]
   30edc:	add	r1, r0, r4, lsl #2
   30ee0:	str	r1, [r7]
   30ee4:	movw	r2, #11822	; 0x2e2e
   30ee8:	add	r0, r6, #3
   30eec:	str	r6, [r1]
   30ef0:	movt	r2, #46	; 0x2e
   30ef4:	b	30860 <__flatcc_fb_parse@@Base+0x5590>
   30ef8:	andeq	r8, r2, r8, lsr #7
   30efc:	ldr	r2, [ip]
   30f00:	ldr	r0, [sl]
   30f04:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30f08:	add	r5, r2, r2, lsl #2
   30f0c:	add	r3, r0, r5, lsl #2
   30f10:	str	r3, [r1]
   30f14:	ldr	r1, [r7]
   30f18:	cmp	r1, r3
   30f1c:	bne	30f90 <__flatcc_fb_parse@@Base+0x5cc0>
   30f20:	lsl	r1, r2, #1
   30f24:	cmp	r2, #0
   30f28:	mov	r8, r9
   30f2c:	mov	r9, sl
   30f30:	mov	sl, r6
   30f34:	mov	r6, ip
   30f38:	movweq	r1, #1024	; 0x400
   30f3c:	str	r1, [ip]
   30f40:	add	r1, r1, r1, lsl #2
   30f44:	lsl	r1, r1, #2
   30f48:	bl	14940 <realloc@plt>
   30f4c:	cmp	r0, #0
   30f50:	str	r0, [r9]
   30f54:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   30f58:	ldr	r1, [r6]
   30f5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   30f60:	mov	ip, r6
   30f64:	mov	r6, sl
   30f68:	mov	r2, r9
   30f6c:	mov	sl, r9
   30f70:	mov	r9, r8
   30f74:	add	r1, r1, r1, lsl #2
   30f78:	add	r1, r0, r1, lsl #2
   30f7c:	str	r1, [r3]
   30f80:	add	r1, r0, r5, lsl #2
   30f84:	str	r1, [r7]
   30f88:	ldr	r8, [pc, #4092]	; 31f8c <__flatcc_fb_parse@@Base+0x6cbc>
   30f8c:	add	r8, pc, r8
   30f90:	str	r6, [r1]
   30f94:	mov	r0, #46	; 0x2e
   30f98:	str	r0, [r1, #16]
   30f9c:	mov	r0, #1
   30fa0:	str	r0, [r1, #4]
   30fa4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30fa8:	add	r2, r6, #1
   30fac:	mov	r6, r4
   30fb0:	ldr	r0, [r0]
   30fb4:	str	r0, [r1, #8]
   30fb8:	ldr	r0, [r9]
   30fbc:	sub	r0, r2, r0
   30fc0:	str	r0, [r1, #12]
   30fc4:	add	r0, r1, #20
   30fc8:	str	r0, [r7]
   30fcc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30fd0:	cmp	r6, r0
   30fd4:	bne	2db24 <__flatcc_fb_parse@@Base+0x2854>
   30fd8:	b	31c90 <__flatcc_fb_parse@@Base+0x69c0>
   30fdc:	ldrdeq	r8, [r2], -ip
   30fe0:	andeq	r8, r2, r4, lsr #5
   30fe4:	ldr	r2, [ip]
   30fe8:	ldr	r0, [sl]
   30fec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30ff0:	add	r5, r2, r2, lsl #2
   30ff4:	add	r3, r0, r5, lsl #2
   30ff8:	str	r3, [r1]
   30ffc:	ldr	r1, [r7]
   31000:	cmp	r1, r3
   31004:	bne	31078 <__flatcc_fb_parse@@Base+0x5da8>
   31008:	lsl	r1, r2, #1
   3100c:	cmp	r2, #0
   31010:	mov	r8, r9
   31014:	mov	r9, sl
   31018:	mov	sl, r6
   3101c:	mov	r6, ip
   31020:	movweq	r1, #1024	; 0x400
   31024:	str	r1, [ip]
   31028:	add	r1, r1, r1, lsl #2
   3102c:	lsl	r1, r1, #2
   31030:	bl	14940 <realloc@plt>
   31034:	cmp	r0, #0
   31038:	str	r0, [r9]
   3103c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31040:	ldr	r1, [r6]
   31044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31048:	mov	ip, r6
   3104c:	mov	r6, sl
   31050:	mov	r2, r9
   31054:	mov	sl, r9
   31058:	mov	r9, r8
   3105c:	add	r1, r1, r1, lsl #2
   31060:	add	r1, r0, r1, lsl #2
   31064:	str	r1, [r3]
   31068:	add	r1, r0, r5, lsl #2
   3106c:	str	r1, [r7]
   31070:	ldr	r8, [pc, #3928]	; 31fd0 <__flatcc_fb_parse@@Base+0x6d00>
   31074:	add	r8, pc, r8
   31078:	str	r6, [r1]
   3107c:	movw	r0, #15420	; 0x3c3c
   31080:	b	313f0 <__flatcc_fb_parse@@Base+0x6120>
   31084:	mov	r4, r0
   31088:	ldr	r2, [ip]
   3108c:	ldr	r0, [sl]
   31090:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31094:	ldr	r7, [sp, #28]
   31098:	str	r6, [sp, #44]	; 0x2c
   3109c:	mov	r6, sl
   310a0:	add	sl, r2, r2, lsl #2
   310a4:	add	r3, r0, sl, lsl #2
   310a8:	str	r3, [r1]
   310ac:	ldr	r1, [r7]
   310b0:	cmp	r1, r3
   310b4:	bne	31118 <__flatcc_fb_parse@@Base+0x5e48>
   310b8:	lsl	r1, r2, #1
   310bc:	cmp	r2, #0
   310c0:	mov	r8, r6
   310c4:	mov	r6, ip
   310c8:	movweq	r1, #1024	; 0x400
   310cc:	str	r1, [ip]
   310d0:	add	r1, r1, r1, lsl #2
   310d4:	lsl	r1, r1, #2
   310d8:	bl	14940 <realloc@plt>
   310dc:	cmp	r0, #0
   310e0:	str	r0, [r8]
   310e4:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   310e8:	ldr	r1, [r6]
   310ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   310f0:	ldr	r7, [sp, #28]
   310f4:	mov	ip, r6
   310f8:	ldr	r6, [sp, #32]
   310fc:	add	r1, r1, r1, lsl #2
   31100:	add	r1, r0, r1, lsl #2
   31104:	str	r1, [r2]
   31108:	add	r1, r0, sl, lsl #2
   3110c:	str	r1, [r7]
   31110:	ldr	r8, [pc, #3780]	; 31fdc <__flatcc_fb_parse@@Base+0x6d0c>
   31114:	add	r8, pc, r8
   31118:	ldr	r2, [sp, #44]	; 0x2c
   3111c:	mov	r0, #14
   31120:	mov	sl, r6
   31124:	mov	r6, r4
   31128:	str	r2, [r1]
   3112c:	str	r0, [r1, #16]
   31130:	sub	r0, r4, r2
   31134:	str	r0, [r1, #4]
   31138:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3113c:	ldr	r0, [r0]
   31140:	str	r0, [r1, #8]
   31144:	ldr	r0, [r9]
   31148:	sub	r0, r5, r0
   3114c:	b	30fc0 <__flatcc_fb_parse@@Base+0x5cf0>
   31150:	mov	r1, #0
   31154:	add	r9, r0, r1
   31158:	ldr	r1, [sp, #24]
   3115c:	sub	r0, r9, r6
   31160:	subs	r0, r0, #3
   31164:	clz	r0, r0
   31168:	lsr	r0, r0, #5
   3116c:	str	r0, [r1, #32]
   31170:	bne	31604 <__flatcc_fb_parse@@Base+0x6334>
   31174:	ldr	r2, [ip]
   31178:	ldr	r0, [sl]
   3117c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31180:	add	r5, r2, r2, lsl #2
   31184:	add	r3, r0, r5, lsl #2
   31188:	str	r3, [r1]
   3118c:	ldr	r1, [r7]
   31190:	cmp	r1, r3
   31194:	bne	311e4 <__flatcc_fb_parse@@Base+0x5f14>
   31198:	lsl	r1, r2, #1
   3119c:	cmp	r2, #0
   311a0:	mov	r4, ip
   311a4:	movweq	r1, #1024	; 0x400
   311a8:	str	r1, [ip]
   311ac:	add	r1, r1, r1, lsl #2
   311b0:	lsl	r1, r1, #2
   311b4:	bl	14940 <realloc@plt>
   311b8:	cmp	r0, #0
   311bc:	str	r0, [sl]
   311c0:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   311c4:	ldr	r1, [r4]
   311c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   311cc:	mov	ip, r4
   311d0:	add	r1, r1, r1, lsl #2
   311d4:	add	r1, r0, r1, lsl #2
   311d8:	str	r1, [r2]
   311dc:	add	r1, r0, r5, lsl #2
   311e0:	str	r1, [r7]
   311e4:	movw	r0, #64572	; 0xfc3c
   311e8:	str	r9, [r1]
   311ec:	add	r2, r9, #1
   311f0:	movt	r0, #65535	; 0xffff
   311f4:	str	r0, [r1, #16]
   311f8:	mov	r0, #0
   311fc:	b	318d4 <__flatcc_fb_parse@@Base+0x6604>
   31200:	mov	r1, #0
   31204:	add	r4, r0, r1
   31208:	ldr	r1, [sp, #24]
   3120c:	sub	r0, r4, r6
   31210:	subs	r0, r0, #3
   31214:	clz	r0, r0
   31218:	lsr	r0, r0, #5
   3121c:	str	r0, [r1, #32]
   31220:	bne	31914 <__flatcc_fb_parse@@Base+0x6644>
   31224:	ldr	r2, [ip]
   31228:	ldr	r0, [sl]
   3122c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31230:	add	r5, r2, r2, lsl #2
   31234:	add	r3, r0, r5, lsl #2
   31238:	str	r3, [r1]
   3123c:	ldr	r1, [r7]
   31240:	cmp	r1, r3
   31244:	bne	31294 <__flatcc_fb_parse@@Base+0x5fc4>
   31248:	lsl	r1, r2, #1
   3124c:	cmp	r2, #0
   31250:	mov	r6, ip
   31254:	movweq	r1, #1024	; 0x400
   31258:	str	r1, [ip]
   3125c:	add	r1, r1, r1, lsl #2
   31260:	lsl	r1, r1, #2
   31264:	bl	14940 <realloc@plt>
   31268:	cmp	r0, #0
   3126c:	str	r0, [sl]
   31270:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31274:	ldr	r1, [r6]
   31278:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3127c:	mov	ip, r6
   31280:	add	r1, r1, r1, lsl #2
   31284:	add	r1, r0, r1, lsl #2
   31288:	str	r1, [r2]
   3128c:	add	r1, r0, r5, lsl #2
   31290:	str	r1, [r7]
   31294:	movw	r0, #64572	; 0xfc3c
   31298:	str	r4, [r1]
   3129c:	add	r2, r4, #1
   312a0:	movt	r0, #65535	; 0xffff
   312a4:	str	r0, [r1, #16]
   312a8:	mov	r0, #0
   312ac:	b	31c28 <__flatcc_fb_parse@@Base+0x6958>
   312b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   312b4:	add	r4, r6, #3
   312b8:	cmp	r4, r0
   312bc:	beq	314a8 <__flatcc_fb_parse@@Base+0x61d8>
   312c0:	ldrb	r0, [r4]
   312c4:	cmp	r0, #61	; 0x3d
   312c8:	bne	314a8 <__flatcc_fb_parse@@Base+0x61d8>
   312cc:	ldr	r2, [ip]
   312d0:	ldr	r0, [sl]
   312d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   312d8:	add	r4, r2, r2, lsl #2
   312dc:	add	r3, r0, r4, lsl #2
   312e0:	str	r3, [r1]
   312e4:	ldr	r1, [r7]
   312e8:	cmp	r1, r3
   312ec:	bne	3133c <__flatcc_fb_parse@@Base+0x606c>
   312f0:	lsl	r1, r2, #1
   312f4:	cmp	r2, #0
   312f8:	mov	r5, ip
   312fc:	movweq	r1, #1024	; 0x400
   31300:	str	r1, [ip]
   31304:	add	r1, r1, r1, lsl #2
   31308:	lsl	r1, r1, #2
   3130c:	bl	14940 <realloc@plt>
   31310:	cmp	r0, #0
   31314:	str	r0, [sl]
   31318:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   3131c:	ldr	r1, [r5]
   31320:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31324:	mov	ip, r5
   31328:	add	r1, r1, r1, lsl #2
   3132c:	add	r1, r0, r1, lsl #2
   31330:	str	r1, [r2]
   31334:	add	r1, r0, r4, lsl #2
   31338:	str	r1, [r7]
   3133c:	movw	r2, #15934	; 0x3e3e
   31340:	add	r0, r6, #4
   31344:	str	r6, [r1]
   31348:	movt	r2, #15678	; 0x3d3e
   3134c:	b	31498 <__flatcc_fb_parse@@Base+0x61c8>
   31350:	andeq	r7, r2, r4, lsr #30
   31354:	ldr	r2, [ip]
   31358:	ldr	r0, [sl]
   3135c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31360:	add	r5, r2, r2, lsl #2
   31364:	add	r3, r0, r5, lsl #2
   31368:	str	r3, [r1]
   3136c:	ldr	r1, [r7]
   31370:	cmp	r1, r3
   31374:	bne	313e8 <__flatcc_fb_parse@@Base+0x6118>
   31378:	lsl	r1, r2, #1
   3137c:	cmp	r2, #0
   31380:	mov	r8, r9
   31384:	mov	r9, sl
   31388:	mov	sl, r6
   3138c:	mov	r6, ip
   31390:	movweq	r1, #1024	; 0x400
   31394:	str	r1, [ip]
   31398:	add	r1, r1, r1, lsl #2
   3139c:	lsl	r1, r1, #2
   313a0:	bl	14940 <realloc@plt>
   313a4:	cmp	r0, #0
   313a8:	str	r0, [r9]
   313ac:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   313b0:	ldr	r1, [r6]
   313b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   313b8:	mov	ip, r6
   313bc:	mov	r6, sl
   313c0:	mov	r2, r9
   313c4:	mov	sl, r9
   313c8:	mov	r9, r8
   313cc:	add	r1, r1, r1, lsl #2
   313d0:	add	r1, r0, r1, lsl #2
   313d4:	str	r1, [r3]
   313d8:	add	r1, r0, r5, lsl #2
   313dc:	str	r1, [r7]
   313e0:	ldr	r8, [pc, #3056]	; 31fd8 <__flatcc_fb_parse@@Base+0x6d08>
   313e4:	add	r8, pc, r8
   313e8:	str	r6, [r1]
   313ec:	movw	r0, #11822	; 0x2e2e
   313f0:	str	r0, [r1, #16]
   313f4:	mov	r0, #2
   313f8:	b	30fa0 <__flatcc_fb_parse@@Base+0x5cd0>
   313fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31400:	add	r4, r6, #3
   31404:	cmp	r4, r0
   31408:	beq	31558 <__flatcc_fb_parse@@Base+0x6288>
   3140c:	ldrb	r0, [r4]
   31410:	cmp	r0, #61	; 0x3d
   31414:	bne	31558 <__flatcc_fb_parse@@Base+0x6288>
   31418:	ldr	r2, [ip]
   3141c:	ldr	r0, [sl]
   31420:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31424:	add	r4, r2, r2, lsl #2
   31428:	add	r3, r0, r4, lsl #2
   3142c:	str	r3, [r1]
   31430:	ldr	r1, [r7]
   31434:	cmp	r1, r3
   31438:	bne	31488 <__flatcc_fb_parse@@Base+0x61b8>
   3143c:	lsl	r1, r2, #1
   31440:	cmp	r2, #0
   31444:	mov	r5, ip
   31448:	movweq	r1, #1024	; 0x400
   3144c:	str	r1, [ip]
   31450:	add	r1, r1, r1, lsl #2
   31454:	lsl	r1, r1, #2
   31458:	bl	14940 <realloc@plt>
   3145c:	cmp	r0, #0
   31460:	str	r0, [sl]
   31464:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31468:	ldr	r1, [r5]
   3146c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31470:	mov	ip, r5
   31474:	add	r1, r1, r1, lsl #2
   31478:	add	r1, r0, r1, lsl #2
   3147c:	str	r1, [r2]
   31480:	add	r1, r0, r4, lsl #2
   31484:	str	r1, [r7]
   31488:	movw	r2, #15420	; 0x3c3c
   3148c:	add	r0, r6, #4
   31490:	str	r6, [r1]
   31494:	movt	r2, #15676	; 0x3d3c
   31498:	str	r2, [r1, #16]
   3149c:	mov	r2, #4
   314a0:	b	2e064 <__flatcc_fb_parse@@Base+0x2d94>
   314a4:	ldrdeq	r7, [r2], -r8
   314a8:	ldr	r2, [ip]
   314ac:	ldr	r0, [sl]
   314b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   314b4:	add	r5, r2, r2, lsl #2
   314b8:	add	r3, r0, r5, lsl #2
   314bc:	str	r3, [r1]
   314c0:	ldr	r1, [r7]
   314c4:	cmp	r1, r3
   314c8:	bne	3153c <__flatcc_fb_parse@@Base+0x626c>
   314cc:	lsl	r1, r2, #1
   314d0:	cmp	r2, #0
   314d4:	mov	r8, r9
   314d8:	mov	r9, sl
   314dc:	mov	sl, r6
   314e0:	mov	r6, ip
   314e4:	movweq	r1, #1024	; 0x400
   314e8:	str	r1, [ip]
   314ec:	add	r1, r1, r1, lsl #2
   314f0:	lsl	r1, r1, #2
   314f4:	bl	14940 <realloc@plt>
   314f8:	cmp	r0, #0
   314fc:	str	r0, [r9]
   31500:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31504:	ldr	r1, [r6]
   31508:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3150c:	mov	ip, r6
   31510:	mov	r6, sl
   31514:	mov	r2, r9
   31518:	mov	sl, r9
   3151c:	mov	r9, r8
   31520:	add	r1, r1, r1, lsl #2
   31524:	add	r1, r0, r1, lsl #2
   31528:	str	r1, [r3]
   3152c:	add	r1, r0, r5, lsl #2
   31530:	str	r1, [r7]
   31534:	ldr	r8, [pc, #2712]	; 31fd4 <__flatcc_fb_parse@@Base+0x6d04>
   31538:	add	r8, pc, r8
   3153c:	mov	r0, #3
   31540:	str	r6, [r1]
   31544:	str	r0, [r1, #4]
   31548:	ldr	r0, [sp, #4]
   3154c:	str	r0, [r1, #16]
   31550:	b	30fa4 <__flatcc_fb_parse@@Base+0x5cd4>
   31554:	andeq	r7, r2, r8, lsr sp
   31558:	ldr	r2, [ip]
   3155c:	ldr	r0, [sl]
   31560:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31564:	add	r5, r2, r2, lsl #2
   31568:	add	r3, r0, r5, lsl #2
   3156c:	str	r3, [r1]
   31570:	ldr	r1, [r7]
   31574:	cmp	r1, r3
   31578:	bne	315ec <__flatcc_fb_parse@@Base+0x631c>
   3157c:	lsl	r1, r2, #1
   31580:	cmp	r2, #0
   31584:	mov	r8, r9
   31588:	mov	r9, sl
   3158c:	mov	sl, r6
   31590:	mov	r6, ip
   31594:	movweq	r1, #1024	; 0x400
   31598:	str	r1, [ip]
   3159c:	add	r1, r1, r1, lsl #2
   315a0:	lsl	r1, r1, #2
   315a4:	bl	14940 <realloc@plt>
   315a8:	cmp	r0, #0
   315ac:	str	r0, [r9]
   315b0:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   315b4:	ldr	r1, [r6]
   315b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   315bc:	mov	ip, r6
   315c0:	mov	r6, sl
   315c4:	mov	r2, r9
   315c8:	mov	sl, r9
   315cc:	mov	r9, r8
   315d0:	add	r1, r1, r1, lsl #2
   315d4:	add	r1, r0, r1, lsl #2
   315d8:	str	r1, [r3]
   315dc:	add	r1, r0, r5, lsl #2
   315e0:	str	r1, [r7]
   315e4:	ldr	r8, [pc, #2528]	; 31fcc <__flatcc_fb_parse@@Base+0x6cfc>
   315e8:	add	r8, pc, r8
   315ec:	movw	r0, #15420	; 0x3c3c
   315f0:	str	r6, [r1]
   315f4:	movt	r0, #60	; 0x3c
   315f8:	str	r0, [r1, #16]
   315fc:	mov	r0, #3
   31600:	b	30fa0 <__flatcc_fb_parse@@Base+0x5cd0>
   31604:	mov	r0, r9
   31608:	mov	r5, r0
   3160c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31610:	cmp	r0, r5
   31614:	beq	31650 <__flatcc_fb_parse@@Base+0x6380>
   31618:	mov	r0, r5
   3161c:	ldrb	r1, [r0], #1
   31620:	cmp	r1, #32
   31624:	bcc	31630 <__flatcc_fb_parse@@Base+0x6360>
   31628:	cmp	r1, #127	; 0x7f
   3162c:	bne	31608 <__flatcc_fb_parse@@Base+0x6338>
   31630:	sub	r6, r0, #1
   31634:	mov	r7, #0
   31638:	cmp	r9, r6
   3163c:	bne	31660 <__flatcc_fb_parse@@Base+0x6390>
   31640:	mov	sl, r6
   31644:	mov	r6, r9
   31648:	b	31740 <__flatcc_fb_parse@@Base+0x6470>
   3164c:	andeq	r7, r2, r4, ror #24
   31650:	ldr	r6, [fp, #-32]	; 0xffffffe0
   31654:	mov	r7, #1
   31658:	cmp	r9, r6
   3165c:	beq	31640 <__flatcc_fb_parse@@Base+0x6370>
   31660:	ldr	r0, [sp, #24]
   31664:	mov	sl, r6
   31668:	ldr	r0, [r0, #32]
   3166c:	cmp	r0, #0
   31670:	beq	31740 <__flatcc_fb_parse@@Base+0x6470>
   31674:	ldr	r0, [sp, #32]
   31678:	ldr	r2, [ip]
   3167c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31680:	ldr	r4, [sp, #28]
   31684:	ldr	r0, [r0]
   31688:	add	r6, r2, r2, lsl #2
   3168c:	add	r3, r0, r6, lsl #2
   31690:	str	r3, [r1]
   31694:	ldr	r1, [r4]
   31698:	cmp	r1, r3
   3169c:	bne	316fc <__flatcc_fb_parse@@Base+0x642c>
   316a0:	lsl	r1, r2, #1
   316a4:	cmp	r2, #0
   316a8:	mov	r8, ip
   316ac:	movweq	r1, #1024	; 0x400
   316b0:	str	r1, [ip]
   316b4:	add	r1, r1, r1, lsl #2
   316b8:	lsl	r1, r1, #2
   316bc:	bl	14940 <realloc@plt>
   316c0:	ldr	r1, [sp, #32]
   316c4:	cmp	r0, #0
   316c8:	str	r0, [r1]
   316cc:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   316d0:	ldr	r1, [r8]
   316d4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   316d8:	ldr	r4, [sp, #28]
   316dc:	mov	ip, r8
   316e0:	add	r1, r1, r1, lsl #2
   316e4:	add	r1, r0, r1, lsl #2
   316e8:	str	r1, [r2]
   316ec:	add	r1, r0, r6, lsl #2
   316f0:	str	r1, [r4]
   316f4:	ldr	r8, [pc, #2244]	; 31fc0 <__flatcc_fb_parse@@Base+0x6cf0>
   316f8:	add	r8, pc, r8
   316fc:	movw	r0, #64572	; 0xfc3c
   31700:	str	r9, [r1]
   31704:	add	r2, r9, #1
   31708:	mov	r6, sl
   3170c:	movt	r0, #65535	; 0xffff
   31710:	str	r0, [r1, #16]
   31714:	sub	r0, sl, r9
   31718:	str	r0, [r1, #4]
   3171c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31720:	ldr	r0, [r0]
   31724:	str	r0, [r1, #8]
   31728:	ldr	r0, [sp, #40]	; 0x28
   3172c:	ldr	r0, [r0]
   31730:	sub	r0, r2, r0
   31734:	str	r0, [r1, #12]
   31738:	add	r0, r1, #20
   3173c:	str	r0, [r4]
   31740:	cmp	r7, #0
   31744:	ldr	r7, [sp, #28]
   31748:	ldr	r9, [sp, #40]	; 0x28
   3174c:	ldr	r2, [sp, #32]
   31750:	bne	31f20 <__flatcc_fb_parse@@Base+0x6c50>
   31754:	ldrb	r0, [sl]
   31758:	cmp	r0, #13
   3175c:	cmpne	r0, #10
   31760:	beq	3181c <__flatcc_fb_parse@@Base+0x654c>
   31764:	cmp	r0, #0
   31768:	beq	31f20 <__flatcc_fb_parse@@Base+0x6c50>
   3176c:	ldrb	r0, [r6]
   31770:	add	r9, r5, #1
   31774:	cmp	r0, #32
   31778:	cmpne	r0, #9
   3177c:	bne	31834 <__flatcc_fb_parse@@Base+0x6564>
   31780:	ldr	r0, [sp, #24]
   31784:	ldr	r0, [r0, #32]
   31788:	cmp	r0, #0
   3178c:	beq	31604 <__flatcc_fb_parse@@Base+0x6334>
   31790:	ldr	r0, [r2]
   31794:	ldr	r2, [ip]
   31798:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3179c:	movw	r5, #64572	; 0xfc3c
   317a0:	movt	r5, #65535	; 0xffff
   317a4:	add	sl, r2, r2, lsl #2
   317a8:	add	r3, r0, sl, lsl #2
   317ac:	str	r3, [r1]
   317b0:	ldr	r1, [r7]
   317b4:	cmp	r1, r3
   317b8:	bne	318c4 <__flatcc_fb_parse@@Base+0x65f4>
   317bc:	lsl	r1, r2, #1
   317c0:	cmp	r2, #0
   317c4:	mov	r4, ip
   317c8:	movweq	r1, #1024	; 0x400
   317cc:	str	r1, [ip]
   317d0:	add	r1, r1, r1, lsl #2
   317d4:	lsl	r1, r1, #2
   317d8:	bl	14940 <realloc@plt>
   317dc:	ldr	r1, [sp, #32]
   317e0:	cmp	r0, #0
   317e4:	str	r0, [r1]
   317e8:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   317ec:	ldr	r1, [r4]
   317f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   317f4:	ldr	r7, [sp, #28]
   317f8:	movw	r5, #64572	; 0xfc3c
   317fc:	mov	ip, r4
   31800:	movt	r5, #65535	; 0xffff
   31804:	add	r1, r1, r1, lsl #2
   31808:	add	r1, r0, r1, lsl #2
   3180c:	str	r1, [r2]
   31810:	add	r1, r0, sl, lsl #2
   31814:	str	r1, [r7]
   31818:	b	318c4 <__flatcc_fb_parse@@Base+0x65f4>
   3181c:	ldr	r0, [sp, #24]
   31820:	mov	r1, #0
   31824:	mov	r6, sl
   31828:	mov	sl, r2
   3182c:	str	r1, [r0, #32]
   31830:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   31834:	mov	r8, r2
   31838:	ldr	r0, [r2]
   3183c:	ldr	r2, [ip]
   31840:	ldr	r5, [fp, #-36]	; 0xffffffdc
   31844:	mov	r1, r7
   31848:	add	r7, r2, r2, lsl #2
   3184c:	add	r3, r0, r7, lsl #2
   31850:	str	r3, [r5]
   31854:	mov	r5, #7
   31858:	ldr	r1, [r1]
   3185c:	cmp	r1, r3
   31860:	beq	3186c <__flatcc_fb_parse@@Base+0x659c>
   31864:	ldr	r7, [sp, #28]
   31868:	b	318bc <__flatcc_fb_parse@@Base+0x65ec>
   3186c:	lsl	r1, r2, #1
   31870:	cmp	r2, #0
   31874:	mov	r4, ip
   31878:	movweq	r1, #1024	; 0x400
   3187c:	str	r1, [ip]
   31880:	add	r1, r1, r1, lsl #2
   31884:	lsl	r1, r1, #2
   31888:	bl	14940 <realloc@plt>
   3188c:	cmp	r0, #0
   31890:	str	r0, [r8]
   31894:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31898:	ldr	r1, [r4]
   3189c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   318a0:	mov	ip, r4
   318a4:	add	r1, r1, r1, lsl #2
   318a8:	add	r1, r0, r1, lsl #2
   318ac:	str	r1, [r2]
   318b0:	add	r1, r0, r7, lsl #2
   318b4:	ldr	r7, [sp, #28]
   318b8:	str	r1, [r7]
   318bc:	ldr	r8, [pc, #1792]	; 31fc4 <__flatcc_fb_parse@@Base+0x6cf4>
   318c0:	add	r8, pc, r8
   318c4:	mov	r0, #1
   318c8:	str	r6, [r1]
   318cc:	str	r5, [r1, #16]
   318d0:	add	r2, r6, #1
   318d4:	str	r0, [r1, #4]
   318d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   318dc:	ldr	r0, [r0]
   318e0:	str	r0, [r1, #8]
   318e4:	ldr	r0, [sp, #40]	; 0x28
   318e8:	ldr	r0, [r0]
   318ec:	sub	r0, r2, r0
   318f0:	str	r0, [r1, #12]
   318f4:	add	r0, r1, #20
   318f8:	str	r0, [r7]
   318fc:	b	31604 <__flatcc_fb_parse@@Base+0x6334>
   31900:	ldr	r1, [fp, #-40]	; 0xffffffd8
   31904:	ldr	r0, [r1]
   31908:	add	r0, r0, #1
   3190c:	str	r0, [r1]
   31910:	str	r4, [r9]
   31914:	ldr	r5, [fp, #-32]	; 0xffffffe0
   31918:	cmp	r4, r5
   3191c:	beq	31968 <__flatcc_fb_parse@@Base+0x6698>
   31920:	sub	r5, r4, #1
   31924:	mov	r1, r4
   31928:	mov	r0, r1
   3192c:	ldrb	r1, [r1]
   31930:	cmp	r1, #32
   31934:	bcc	31a40 <__flatcc_fb_parse@@Base+0x6770>
   31938:	cmp	r1, #127	; 0x7f
   3193c:	beq	31a40 <__flatcc_fb_parse@@Base+0x6770>
   31940:	cmp	r1, #47	; 0x2f
   31944:	ldrbeq	r1, [r0, #-1]
   31948:	cmpeq	r1, #42	; 0x2a
   3194c:	beq	31968 <__flatcc_fb_parse@@Base+0x6698>
   31950:	ldr	r2, [fp, #-32]	; 0xffffffe0
   31954:	add	r1, r0, #1
   31958:	mov	r5, r0
   3195c:	cmp	r2, r1
   31960:	bne	31928 <__flatcc_fb_parse@@Base+0x6658>
   31964:	ldr	r5, [fp, #-32]	; 0xffffffe0
   31968:	cmp	r4, r5
   3196c:	beq	31a4c <__flatcc_fb_parse@@Base+0x677c>
   31970:	ldr	r0, [sp, #24]
   31974:	mov	r6, r5
   31978:	ldr	r0, [r0, #32]
   3197c:	cmp	r0, #0
   31980:	beq	31a50 <__flatcc_fb_parse@@Base+0x6780>
   31984:	ldr	r2, [ip]
   31988:	ldr	r0, [sl]
   3198c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31990:	add	r8, r2, r2, lsl #2
   31994:	add	r3, r0, r8, lsl #2
   31998:	str	r3, [r1]
   3199c:	ldr	r1, [r7]
   319a0:	cmp	r1, r3
   319a4:	bne	319f4 <__flatcc_fb_parse@@Base+0x6724>
   319a8:	lsl	r1, r2, #1
   319ac:	cmp	r2, #0
   319b0:	mov	r6, ip
   319b4:	movweq	r1, #1024	; 0x400
   319b8:	str	r1, [ip]
   319bc:	add	r1, r1, r1, lsl #2
   319c0:	lsl	r1, r1, #2
   319c4:	bl	14940 <realloc@plt>
   319c8:	cmp	r0, #0
   319cc:	str	r0, [sl]
   319d0:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   319d4:	ldr	r1, [r6]
   319d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   319dc:	mov	ip, r6
   319e0:	add	r1, r1, r1, lsl #2
   319e4:	add	r1, r0, r1, lsl #2
   319e8:	str	r1, [r2]
   319ec:	add	r1, r0, r8, lsl #2
   319f0:	str	r1, [r7]
   319f4:	movw	r0, #64572	; 0xfc3c
   319f8:	str	r4, [r1]
   319fc:	add	r2, r4, #1
   31a00:	mov	r6, r5
   31a04:	movt	r0, #65535	; 0xffff
   31a08:	str	r0, [r1, #16]
   31a0c:	sub	r0, r5, r4
   31a10:	str	r0, [r1, #4]
   31a14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31a18:	ldr	r0, [r0]
   31a1c:	str	r0, [r1, #8]
   31a20:	ldr	r0, [r9]
   31a24:	sub	r0, r2, r0
   31a28:	str	r0, [r1, #12]
   31a2c:	add	r0, r1, #20
   31a30:	str	r0, [r7]
   31a34:	ldr	r8, [pc, #1420]	; 31fc8 <__flatcc_fb_parse@@Base+0x6cf8>
   31a38:	add	r8, pc, r8
   31a3c:	b	31a50 <__flatcc_fb_parse@@Base+0x6780>
   31a40:	mov	r5, r0
   31a44:	cmp	r4, r5
   31a48:	bne	31970 <__flatcc_fb_parse@@Base+0x66a0>
   31a4c:	mov	r6, r4
   31a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31a54:	cmp	r5, r0
   31a58:	beq	31e6c <__flatcc_fb_parse@@Base+0x6b9c>
   31a5c:	ldrb	r0, [r5]
   31a60:	cmp	r0, #10
   31a64:	beq	31ab4 <__flatcc_fb_parse@@Base+0x67e4>
   31a68:	cmp	r0, #13
   31a6c:	beq	31ad0 <__flatcc_fb_parse@@Base+0x6800>
   31a70:	cmp	r0, #0
   31a74:	beq	31e70 <__flatcc_fb_parse@@Base+0x6ba0>
   31a78:	cmp	r0, #32
   31a7c:	bcc	31a88 <__flatcc_fb_parse@@Base+0x67b8>
   31a80:	cmp	r0, #127	; 0x7f
   31a84:	bne	31c54 <__flatcc_fb_parse@@Base+0x6984>
   31a88:	ldrb	r0, [r6]
   31a8c:	add	r4, r5, #1
   31a90:	cmp	r0, #32
   31a94:	cmpne	r0, #9
   31a98:	bne	31af8 <__flatcc_fb_parse@@Base+0x6828>
   31a9c:	ldr	r0, [sp, #24]
   31aa0:	ldr	r0, [r0, #32]
   31aa4:	cmp	r0, #0
   31aa8:	beq	31914 <__flatcc_fb_parse@@Base+0x6644>
   31aac:	b	31b8c <__flatcc_fb_parse@@Base+0x68bc>
   31ab0:	andeq	r7, r2, r0, asr r8
   31ab4:	ldr	r4, [fp, #-32]	; 0xffffffe0
   31ab8:	add	r0, r5, #1
   31abc:	cmp	r0, r4
   31ac0:	beq	31900 <__flatcc_fb_parse@@Base+0x6630>
   31ac4:	ldrb	r1, [r5, #1]
   31ac8:	cmp	r1, #13
   31acc:	b	31ae8 <__flatcc_fb_parse@@Base+0x6818>
   31ad0:	ldr	r4, [fp, #-32]	; 0xffffffe0
   31ad4:	add	r0, r5, #1
   31ad8:	cmp	r0, r4
   31adc:	beq	31900 <__flatcc_fb_parse@@Base+0x6630>
   31ae0:	ldrb	r1, [r5, #1]
   31ae4:	cmp	r1, #10
   31ae8:	addeq	r0, r5, #2
   31aec:	mov	r4, r0
   31af0:	b	31900 <__flatcc_fb_parse@@Base+0x6630>
   31af4:	andeq	r7, r2, r4, lsr #15
   31af8:	ldr	r2, [ip]
   31afc:	ldr	r0, [sl]
   31b00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31b04:	add	r5, r2, r2, lsl #2
   31b08:	add	r3, r0, r5, lsl #2
   31b0c:	str	r3, [r1]
   31b10:	ldr	r1, [r7]
   31b14:	cmp	r1, r3
   31b18:	bne	31b7c <__flatcc_fb_parse@@Base+0x68ac>
   31b1c:	lsl	r1, r2, #1
   31b20:	cmp	r2, #0
   31b24:	mov	sl, r6
   31b28:	mov	r6, ip
   31b2c:	movweq	r1, #1024	; 0x400
   31b30:	str	r1, [ip]
   31b34:	add	r1, r1, r1, lsl #2
   31b38:	lsl	r1, r1, #2
   31b3c:	bl	14940 <realloc@plt>
   31b40:	ldr	r1, [sp, #32]
   31b44:	cmp	r0, #0
   31b48:	str	r0, [r1]
   31b4c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31b50:	mov	r2, r1
   31b54:	ldr	r1, [r6]
   31b58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31b5c:	mov	ip, r6
   31b60:	mov	r6, sl
   31b64:	mov	sl, r2
   31b68:	add	r1, r1, r1, lsl #2
   31b6c:	add	r1, r0, r1, lsl #2
   31b70:	str	r1, [r3]
   31b74:	add	r1, r0, r5, lsl #2
   31b78:	str	r1, [r7]
   31b7c:	str	r6, [r1]
   31b80:	mov	r0, #7
   31b84:	b	31c1c <__flatcc_fb_parse@@Base+0x694c>
   31b88:	ldrdeq	r7, [r2], -r8
   31b8c:	ldr	r2, [ip]
   31b90:	ldr	r0, [sl]
   31b94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31b98:	add	r5, r2, r2, lsl #2
   31b9c:	add	r3, r0, r5, lsl #2
   31ba0:	str	r3, [r1]
   31ba4:	ldr	r1, [r7]
   31ba8:	cmp	r1, r3
   31bac:	bne	31c10 <__flatcc_fb_parse@@Base+0x6940>
   31bb0:	lsl	r1, r2, #1
   31bb4:	cmp	r2, #0
   31bb8:	mov	sl, r6
   31bbc:	mov	r6, ip
   31bc0:	movweq	r1, #1024	; 0x400
   31bc4:	str	r1, [ip]
   31bc8:	add	r1, r1, r1, lsl #2
   31bcc:	lsl	r1, r1, #2
   31bd0:	bl	14940 <realloc@plt>
   31bd4:	ldr	r1, [sp, #32]
   31bd8:	cmp	r0, #0
   31bdc:	str	r0, [r1]
   31be0:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31be4:	mov	r2, r1
   31be8:	ldr	r1, [r6]
   31bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31bf0:	mov	ip, r6
   31bf4:	mov	r6, sl
   31bf8:	mov	sl, r2
   31bfc:	add	r1, r1, r1, lsl #2
   31c00:	add	r1, r0, r1, lsl #2
   31c04:	str	r1, [r3]
   31c08:	add	r1, r0, r5, lsl #2
   31c0c:	str	r1, [r7]
   31c10:	movw	r0, #64572	; 0xfc3c
   31c14:	str	r6, [r1]
   31c18:	movt	r0, #65535	; 0xffff
   31c1c:	str	r0, [r1, #16]
   31c20:	mov	r0, #1
   31c24:	add	r2, r6, #1
   31c28:	str	r0, [r1, #4]
   31c2c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31c30:	ldr	r0, [r0]
   31c34:	str	r0, [r1, #8]
   31c38:	ldr	r0, [r9]
   31c3c:	sub	r0, r2, r0
   31c40:	str	r0, [r1, #12]
   31c44:	add	r0, r1, #20
   31c48:	str	r0, [r7]
   31c4c:	b	31914 <__flatcc_fb_parse@@Base+0x6644>
   31c50:			; <UNDEFINED> instruction: 0x000276b0
   31c54:	ldr	r0, [sp, #24]
   31c58:	mov	r1, #0
   31c5c:	add	r6, r5, #2
   31c60:	str	r1, [r0, #32]
   31c64:	b	30fcc <__flatcc_fb_parse@@Base+0x5cfc>
   31c68:	mov	r5, r6
   31c6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   31c70:	cmp	r5, r0
   31c74:	beq	31d20 <__flatcc_fb_parse@@Base+0x6a50>
   31c78:	ldrb	r0, [r5]
   31c7c:	ldr	r7, [sp, #24]
   31c80:	cmp	r0, #0
   31c84:	beq	31dd8 <__flatcc_fb_parse@@Base+0x6b08>
   31c88:	mov	r9, r5
   31c8c:	b	31d28 <__flatcc_fb_parse@@Base+0x6a58>
   31c90:	ldr	r9, [fp, #-32]	; 0xffffffe0
   31c94:	b	31d24 <__flatcc_fb_parse@@Base+0x6a54>
   31c98:	ldr	r2, [ip]
   31c9c:	ldr	r0, [sl]
   31ca0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31ca4:	add	r4, r2, r2, lsl #2
   31ca8:	add	r3, r0, r4, lsl #2
   31cac:	str	r3, [r1]
   31cb0:	ldr	r1, [r7]
   31cb4:	cmp	r1, r3
   31cb8:	bne	31d04 <__flatcc_fb_parse@@Base+0x6a34>
   31cbc:	lsl	r1, r2, #1
   31cc0:	cmp	r2, #0
   31cc4:	mov	r5, ip
   31cc8:	movweq	r1, #1024	; 0x400
   31ccc:	str	r1, [ip]
   31cd0:	add	r1, r1, r1, lsl #2
   31cd4:	lsl	r1, r1, #2
   31cd8:	bl	14940 <realloc@plt>
   31cdc:	cmp	r0, #0
   31ce0:	str	r0, [sl]
   31ce4:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31ce8:	ldr	r1, [r5]
   31cec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31cf0:	add	r1, r1, r1, lsl #2
   31cf4:	add	r1, r0, r1, lsl #2
   31cf8:	str	r1, [r2]
   31cfc:	add	r1, r0, r4, lsl #2
   31d00:	str	r1, [r7]
   31d04:	mov	r0, #0
   31d08:	str	r6, [r1]
   31d0c:	str	r0, [r1, #16]
   31d10:	str	r0, [r1, #4]
   31d14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31d18:	ldr	r0, [r0]
   31d1c:	b	31db0 <__flatcc_fb_parse@@Base+0x6ae0>
   31d20:	mov	r9, r5
   31d24:	ldr	r7, [sp, #24]
   31d28:	mov	r6, r7
   31d2c:	ldr	r1, [r6, #40]!	; 0x28
   31d30:	ldr	r2, [r6, #-12]
   31d34:	ldr	r0, [r6, #-20]	; 0xffffffec
   31d38:	mov	r5, r6
   31d3c:	add	r4, r2, r2, lsl #2
   31d40:	add	r3, r0, r4, lsl #2
   31d44:	str	r3, [r6, #-16]
   31d48:	cmp	r1, r3
   31d4c:	mov	r6, r9
   31d50:	bne	31d94 <__flatcc_fb_parse@@Base+0x6ac4>
   31d54:	lsl	r1, r2, #1
   31d58:	cmp	r2, #0
   31d5c:	movweq	r1, #1024	; 0x400
   31d60:	str	r1, [r7, #28]
   31d64:	add	r1, r1, r1, lsl #2
   31d68:	lsl	r1, r1, #2
   31d6c:	bl	14940 <realloc@plt>
   31d70:	cmp	r0, #0
   31d74:	str	r0, [r7, #20]
   31d78:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31d7c:	add	r1, r0, r4, lsl #2
   31d80:	str	r1, [r7, #40]	; 0x28
   31d84:	ldr	r2, [r7, #28]
   31d88:	add	r2, r2, r2, lsl #2
   31d8c:	add	r0, r0, r2, lsl #2
   31d90:	str	r0, [r7, #24]
   31d94:	mov	r0, #0
   31d98:	str	r6, [r1]
   31d9c:	add	r9, r7, #60	; 0x3c
   31da0:	str	r0, [r1, #16]
   31da4:	str	r0, [r1, #4]
   31da8:	ldr	r0, [r7, #64]	; 0x40
   31dac:	mov	r7, r5
   31db0:	str	r0, [r1, #8]
   31db4:	ldr	r0, [r9]
   31db8:	add	r2, r6, #1
   31dbc:	sub	r0, r2, r0
   31dc0:	str	r0, [r1, #12]
   31dc4:	add	r0, r1, #20
   31dc8:	str	r0, [r7]
   31dcc:	sub	sp, fp, #28
   31dd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31dd4:	andeq	r7, r2, r8, asr #9
   31dd8:	mov	r4, r6
   31ddc:	mov	r6, r7
   31de0:	ldr	r1, [r6, #40]!	; 0x28
   31de4:	ldr	r2, [r6, #-12]
   31de8:	ldr	r0, [r6, #-20]	; 0xffffffec
   31dec:	mov	r8, r6
   31df0:	add	r9, r2, r2, lsl #2
   31df4:	add	r3, r0, r9, lsl #2
   31df8:	str	r3, [r6, #-16]
   31dfc:	mov	r6, r4
   31e00:	cmp	r1, r3
   31e04:	bne	31e48 <__flatcc_fb_parse@@Base+0x6b78>
   31e08:	lsl	r1, r2, #1
   31e0c:	cmp	r2, #0
   31e10:	movweq	r1, #1024	; 0x400
   31e14:	str	r1, [r7, #28]
   31e18:	add	r1, r1, r1, lsl #2
   31e1c:	lsl	r1, r1, #2
   31e20:	bl	14940 <realloc@plt>
   31e24:	cmp	r0, #0
   31e28:	str	r0, [r7, #20]
   31e2c:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31e30:	add	r1, r0, r9, lsl #2
   31e34:	str	r1, [r7, #40]	; 0x28
   31e38:	ldr	r2, [r7, #28]
   31e3c:	add	r2, r2, r2, lsl #2
   31e40:	add	r0, r0, r2, lsl #2
   31e44:	str	r0, [r7, #24]
   31e48:	mov	r0, #0
   31e4c:	str	r6, [r1]
   31e50:	add	r9, r7, #60	; 0x3c
   31e54:	str	r0, [r1, #16]
   31e58:	sub	r0, r5, r6
   31e5c:	str	r0, [r1, #4]
   31e60:	ldr	r0, [r7, #64]	; 0x40
   31e64:	mov	r7, r8
   31e68:	b	31db0 <__flatcc_fb_parse@@Base+0x6ae0>
   31e6c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   31e70:	ldr	r2, [ip]
   31e74:	ldr	r0, [sl]
   31e78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31e7c:	add	r4, r2, r2, lsl #2
   31e80:	add	r3, r0, r4, lsl #2
   31e84:	str	r3, [r1]
   31e88:	ldr	r1, [r7]
   31e8c:	cmp	r1, r3
   31e90:	bne	31ee4 <__flatcc_fb_parse@@Base+0x6c14>
   31e94:	lsl	r1, r2, #1
   31e98:	cmp	r2, #0
   31e9c:	mov	r8, r6
   31ea0:	mov	r6, ip
   31ea4:	movweq	r1, #1024	; 0x400
   31ea8:	str	r1, [ip]
   31eac:	add	r1, r1, r1, lsl #2
   31eb0:	lsl	r1, r1, #2
   31eb4:	bl	14940 <realloc@plt>
   31eb8:	cmp	r0, #0
   31ebc:	str	r0, [sl]
   31ec0:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31ec4:	ldr	r1, [r6]
   31ec8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31ecc:	mov	r6, r8
   31ed0:	add	r1, r1, r1, lsl #2
   31ed4:	add	r1, r0, r1, lsl #2
   31ed8:	str	r1, [r2]
   31edc:	add	r1, r0, r4, lsl #2
   31ee0:	str	r1, [r7]
   31ee4:	mov	r0, #27
   31ee8:	str	r5, [r1]
   31eec:	add	r2, r5, #1
   31ef0:	str	r0, [r1, #16]
   31ef4:	mov	r0, #0
   31ef8:	str	r0, [r1, #4]
   31efc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31f00:	ldr	r0, [r0]
   31f04:	str	r0, [r1, #8]
   31f08:	ldr	r0, [r9]
   31f0c:	sub	r0, r2, r0
   31f10:	str	r0, [r1, #12]
   31f14:	add	r0, r1, #20
   31f18:	str	r0, [r7]
   31f1c:	b	31c6c <__flatcc_fb_parse@@Base+0x699c>
   31f20:	mov	r5, r2
   31f24:	ldr	r0, [r2]
   31f28:	ldr	r2, [ip]
   31f2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31f30:	add	r4, r2, r2, lsl #2
   31f34:	add	r3, r0, r4, lsl #2
   31f38:	str	r3, [r1]
   31f3c:	ldr	r1, [r7]
   31f40:	cmp	r1, r3
   31f44:	beq	31f50 <__flatcc_fb_parse@@Base+0x6c80>
   31f48:	mov	r5, sl
   31f4c:	b	31ee4 <__flatcc_fb_parse@@Base+0x6c14>
   31f50:	lsl	r1, r2, #1
   31f54:	cmp	r2, #0
   31f58:	mov	r8, ip
   31f5c:	movweq	r1, #1024	; 0x400
   31f60:	str	r1, [ip]
   31f64:	add	r1, r1, r1, lsl #2
   31f68:	lsl	r1, r1, #2
   31f6c:	bl	14940 <realloc@plt>
   31f70:	cmp	r0, #0
   31f74:	str	r0, [r5]
   31f78:	beq	31f90 <__flatcc_fb_parse@@Base+0x6cc0>
   31f7c:	ldr	r1, [r8]
   31f80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   31f84:	mov	r5, sl
   31f88:	b	31ed0 <__flatcc_fb_parse@@Base+0x6c00>
   31f8c:	andeq	r7, r2, ip, ror r3
   31f90:	ldr	r0, [pc, #32]	; 31fb8 <__flatcc_fb_parse@@Base+0x6ce8>
   31f94:	mov	r1, #34	; 0x22
   31f98:	mov	r2, #1
   31f9c:	ldr	r0, [pc, r0]
   31fa0:	ldr	r3, [r0]
   31fa4:	ldr	r0, [pc, #16]	; 31fbc <__flatcc_fb_parse@@Base+0x6cec>
   31fa8:	add	r0, pc, r0
   31fac:	bl	1494c <fwrite@plt>
   31fb0:	mov	r0, #1
   31fb4:	bl	14994 <exit@plt>
   31fb8:	andeq	sl, r3, r0, lsl #2
   31fbc:	andeq	lr, r0, pc, ror r3
   31fc0:	andeq	r6, r2, r0, lsl ip
   31fc4:	andeq	r6, r2, r8, asr #20
   31fc8:	ldrdeq	r6, [r2], -r0
   31fcc:	andeq	r6, r2, r0, lsr #26
   31fd0:	muleq	r2, r4, r2
   31fd4:	ldrdeq	r6, [r2], -r0
   31fd8:	andeq	r6, r2, r4, lsr #30
   31fdc:	strdeq	r7, [r2], -r4
   31fe0:	push	{r4, r5, r6, r7, fp, lr}
   31fe4:	add	fp, sp, #16
   31fe8:	mov	r4, r0
   31fec:	ldr	r0, [r0, #24]
   31ff0:	ldr	r6, [r4, #40]	; 0x28
   31ff4:	add	r1, r6, #20
   31ff8:	cmp	r1, r0
   31ffc:	str	r1, [r4, #40]	; 0x28
   32000:	beq	320d8 <__flatcc_fb_parse@@Base+0x6e08>
   32004:	sub	r7, r0, #20
   32008:	ldr	r0, [r6, #36]	; 0x24
   3200c:	add	r5, r6, #20
   32010:	cmn	r0, #964	; 0x3c4
   32014:	movne	r0, r5
   32018:	popne	{r4, r5, r6, r7, fp, pc}
   3201c:	ldr	r1, [r4, #52]	; 0x34
   32020:	ldr	r0, [r4, #44]	; 0x2c
   32024:	add	r2, r1, #16
   32028:	cmp	r2, r0
   3202c:	bls	32064 <__flatcc_fb_parse@@Base+0x6d94>
   32030:	mov	r0, #65536	; 0x10000
   32034:	mov	r1, #1
   32038:	bl	148c8 <calloc@plt>
   3203c:	cmp	r0, #0
   32040:	beq	320b0 <__flatcc_fb_parse@@Base+0x6de0>
   32044:	ldr	r1, [r4, #48]	; 0x30
   32048:	mov	r2, r0
   3204c:	add	r3, r0, #65536	; 0x10000
   32050:	str	r1, [r2], #32
   32054:	add	r1, r0, #16
   32058:	str	r3, [r4, #44]	; 0x2c
   3205c:	str	r0, [r4, #48]	; 0x30
   32060:	str	r1, [r4, #52]	; 0x34
   32064:	str	r2, [r4, #52]	; 0x34
   32068:	str	r5, [r1, #4]
   3206c:	cmp	r7, r5
   32070:	ldr	r0, [r4, #36]	; 0x24
   32074:	str	r0, [r1]
   32078:	add	r0, r6, #40	; 0x28
   3207c:	mov	r6, r5
   32080:	str	r1, [r4, #36]	; 0x24
   32084:	str	r0, [r4, #40]	; 0x28
   32088:	bne	32008 <__flatcc_fb_parse@@Base+0x6d38>
   3208c:	str	r5, [r4, #40]	; 0x28
   32090:	movw	r2, #341	; 0x155
   32094:	ldr	r0, [pc, #68]	; 320e0 <__flatcc_fb_parse@@Base+0x6e10>
   32098:	ldr	r1, [pc, #68]	; 320e4 <__flatcc_fb_parse@@Base+0x6e14>
   3209c:	ldr	r3, [pc, #68]	; 320e8 <__flatcc_fb_parse@@Base+0x6e18>
   320a0:	add	r0, pc, r0
   320a4:	add	r1, pc, r1
   320a8:	add	r3, pc, r3
   320ac:	bl	14a78 <__assert_fail@plt>
   320b0:	ldr	r0, [pc, #52]	; 320ec <__flatcc_fb_parse@@Base+0x6e1c>
   320b4:	mov	r1, #34	; 0x22
   320b8:	mov	r2, #1
   320bc:	ldr	r0, [pc, r0]
   320c0:	ldr	r3, [r0]
   320c4:	ldr	r0, [pc, #36]	; 320f0 <__flatcc_fb_parse@@Base+0x6e20>
   320c8:	add	r0, pc, r0
   320cc:	bl	1494c <fwrite@plt>
   320d0:	mov	r0, #1
   320d4:	bl	14994 <exit@plt>
   320d8:	mov	r5, r6
   320dc:	b	3208c <__flatcc_fb_parse@@Base+0x6dbc>
   320e0:	andeq	pc, r1, lr, lsl #10
   320e4:	muleq	r2, sl, r7
   320e8:	ldrdeq	r5, [r2], -sl
   320ec:	andeq	r9, r3, r0, ror #31
   320f0:	andeq	lr, r0, pc, asr r2

000320f4 <__flatcc_fb_clear_parser@@Base>:
   320f4:	push	{r4, r5, fp, lr}
   320f8:	add	fp, sp, #8
   320fc:	ldr	r5, [r0, #392]	; 0x188
   32100:	mov	r4, r0
   32104:	cmp	r5, #0
   32108:	bne	3211c <__flatcc_fb_clear_parser@@Base+0x28>
   3210c:	b	3213c <__flatcc_fb_clear_parser@@Base+0x48>
   32110:	ldr	r5, [r5]
   32114:	cmp	r5, #0
   32118:	beq	3213c <__flatcc_fb_clear_parser@@Base+0x48>
   3211c:	ldrh	r0, [r5, #8]
   32120:	cmp	r0, #4
   32124:	bhi	32110 <__flatcc_fb_clear_parser@@Base+0x1c>
   32128:	add	r0, r5, #56	; 0x38
   3212c:	bl	2870c <fb_symbol_table_clear@@Base>
   32130:	add	r0, r5, #72	; 0x48
   32134:	bl	3dbbc <fb_value_set_clear@@Base>
   32138:	b	32110 <__flatcc_fb_clear_parser@@Base+0x1c>
   3213c:	add	r0, r4, #448	; 0x1c0
   32140:	bl	29cf4 <fb_schema_table_clear@@Base>
   32144:	add	r0, r4, #432	; 0x1b0
   32148:	bl	3d454 <fb_name_table_clear@@Base>
   3214c:	add	r0, r4, #524	; 0x20c
   32150:	bl	28058 <ptr_set_clear@@Base>
   32154:	ldr	r0, [r4, #112]	; 0x70
   32158:	cmp	r0, #0
   3215c:	beq	32164 <__flatcc_fb_clear_parser@@Base+0x70>
   32160:	bl	148f8 <free@plt>
   32164:	ldr	r0, [r4, #20]
   32168:	cmp	r0, #0
   3216c:	beq	32174 <__flatcc_fb_clear_parser@@Base+0x80>
   32170:	bl	148f8 <free@plt>
   32174:	ldr	r0, [r4, #512]	; 0x200
   32178:	cmp	r0, #0
   3217c:	beq	32184 <__flatcc_fb_clear_parser@@Base+0x90>
   32180:	bl	148f8 <free@plt>
   32184:	ldr	r0, [r4, #516]	; 0x204
   32188:	cmp	r0, #0
   3218c:	beq	32194 <__flatcc_fb_clear_parser@@Base+0xa0>
   32190:	bl	148f8 <free@plt>
   32194:	ldr	r0, [r4, #520]	; 0x208
   32198:	cmp	r0, #0
   3219c:	beq	321a4 <__flatcc_fb_clear_parser@@Base+0xb0>
   321a0:	bl	148f8 <free@plt>
   321a4:	ldr	r0, [r4, #548]	; 0x224
   321a8:	cmp	r0, #0
   321ac:	beq	321b4 <__flatcc_fb_clear_parser@@Base+0xc0>
   321b0:	bl	148f8 <free@plt>
   321b4:	ldr	r1, [pc, #80]	; 3220c <__flatcc_fb_clear_parser@@Base+0x118>
   321b8:	add	r0, r4, #416	; 0x1a0
   321bc:	mov	r2, #0
   321c0:	add	r1, pc, r1
   321c4:	bl	28eb4 <fb_scope_table_destroy@@Base>
   321c8:	ldr	r0, [r4, #48]	; 0x30
   321cc:	cmp	r0, #0
   321d0:	beq	321e8 <__flatcc_fb_clear_parser@@Base+0xf4>
   321d4:	ldr	r5, [r0]
   321d8:	bl	148f8 <free@plt>
   321dc:	cmp	r5, #0
   321e0:	mov	r0, r5
   321e4:	bne	321d4 <__flatcc_fb_clear_parser@@Base+0xe0>
   321e8:	ldr	r0, [r4, #16]
   321ec:	cmp	r0, #0
   321f0:	beq	321f8 <__flatcc_fb_clear_parser@@Base+0x104>
   321f4:	bl	148f8 <free@plt>
   321f8:	mov	r0, r4
   321fc:	mov	r1, #0
   32200:	mov	r2, #560	; 0x230
   32204:	pop	{r4, r5, fp, lr}
   32208:	b	149d0 <memset@plt>
   3220c:	andeq	r0, r0, r8, asr #32
   32210:	add	r0, r1, #4
   32214:	b	2870c <fb_symbol_table_clear@@Base>
   32218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3221c:	add	fp, sp, #28
   32220:	sub	sp, sp, #20
   32224:	mov	r5, r0
   32228:	mov	r0, #2
   3222c:	mov	r8, #0
   32230:	mov	r4, r1
   32234:	mov	r9, #1
   32238:	strh	r0, [r1, #8]
   3223c:	str	r8, [r1]
   32240:	str	r8, [r1, #4]
   32244:	ldr	sl, [pc, #644]	; 324d0 <__flatcc_fb_clear_parser@@Base+0x3dc>
   32248:	ldr	r6, [pc, #644]	; 324d4 <__flatcc_fb_clear_parser@@Base+0x3e0>
   3224c:	ldr	r7, [pc, #644]	; 324d8 <__flatcc_fb_clear_parser@@Base+0x3e4>
   32250:	add	sl, pc, sl
   32254:	add	r6, pc, r6
   32258:	add	r7, pc, r7
   3225c:	b	32268 <__flatcc_fb_clear_parser@@Base+0x174>
   32260:	mov	r0, r5
   32264:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32268:	ldr	r1, [r5, #40]	; 0x28
   3226c:	ldr	r0, [r1, #16]
   32270:	sub	r0, r0, #6
   32274:	cmp	r0, #17
   32278:	bhi	323b0 <__flatcc_fb_clear_parser@@Base+0x2bc>
   3227c:	add	r2, pc, #4
   32280:	ldr	r0, [r2, r0, lsl #2]
   32284:	add	pc, r2, r0
   32288:	andeq	r0, r0, r8, asr #32
   3228c:	andeq	r0, r0, r8, lsr #2
   32290:	andeq	r0, r0, r8, lsr #2
   32294:	andeq	r0, r0, r8, lsr #2
   32298:	andeq	r0, r0, r8, lsr #2
   3229c:	andeq	r0, r0, r8, lsr #2
   322a0:	andeq	r0, r0, r8, lsr #2
   322a4:	andeq	r0, r0, r8, lsr #2
   322a8:	andeq	r0, r0, r8, lsr #2
   322ac:	andeq	r0, r0, r8, lsr #2
   322b0:	andeq	r0, r0, r8, lsr #2
   322b4:	andeq	r0, r0, r8, lsr #2
   322b8:	andeq	r0, r0, r8, lsl #1
   322bc:	andeq	r0, r0, r8, lsr #2
   322c0:	andeq	r0, r0, r0, lsr #1
   322c4:	strheq	r0, [r0], -r4
   322c8:	andeq	r0, r0, r0, asr r1
   322cc:	andeq	r0, r0, r0, asr r1
   322d0:	mov	r0, r5
   322d4:	cmp	r1, #0
   322d8:	strh	r9, [r4, #8]
   322dc:	beq	3235c <__flatcc_fb_clear_parser@@Base+0x268>
   322e0:	ldr	r2, [r0, #20]
   322e4:	cmp	r2, r1
   322e8:	bhi	322f8 <__flatcc_fb_clear_parser@@Base+0x204>
   322ec:	ldr	r2, [r0, #24]
   322f0:	cmp	r2, r1
   322f4:	bhi	32370 <__flatcc_fb_clear_parser@@Base+0x27c>
   322f8:	ldr	r0, [r0]
   322fc:	cmp	r0, #0
   32300:	bne	322e0 <__flatcc_fb_clear_parser@@Base+0x1ec>
   32304:	ldr	r2, [pc, #464]	; 324dc <__flatcc_fb_clear_parser@@Base+0x3e8>
   32308:	add	r2, pc, r2
   3230c:	b	32374 <__flatcc_fb_clear_parser@@Base+0x280>
   32310:	strh	r9, [r4, #8]
   32314:	str	r8, [sp]
   32318:	str	r8, [sp, #4]
   3231c:	mov	r0, r5
   32320:	mov	r2, r6
   32324:	b	32350 <__flatcc_fb_clear_parser@@Base+0x25c>
   32328:	ldr	r0, [r4]
   3232c:	cmp	r0, #0
   32330:	ldreq	r0, [r1]
   32334:	streq	r0, [r4]
   32338:	b	32260 <__flatcc_fb_clear_parser@@Base+0x16c>
   3233c:	mov	r0, r5
   32340:	mov	r2, r7
   32344:	strh	r9, [r4, #8]
   32348:	str	r8, [sp]
   3234c:	str	r8, [sp, #4]
   32350:	mov	r3, #0
   32354:	bl	2ac84 <__flatcc_error_report@@Base>
   32358:	b	32260 <__flatcc_fb_clear_parser@@Base+0x16c>
   3235c:	ldr	r1, [pc, #388]	; 324e8 <__flatcc_fb_clear_parser@@Base+0x3f4>
   32360:	mov	r2, sl
   32364:	add	r1, pc, r1
   32368:	bl	2abbc <__flatcc_fb_print_error@@Base>
   3236c:	b	323a0 <__flatcc_fb_clear_parser@@Base+0x2ac>
   32370:	ldr	r2, [r0, #520]	; 0x208
   32374:	ldr	r0, [r1, #12]
   32378:	ldr	r3, [r1, #8]
   3237c:	stm	sp, {r0, r9}
   32380:	ldr	r0, [pc, #344]	; 324e0 <__flatcc_fb_clear_parser@@Base+0x3ec>
   32384:	str	sl, [sp, #12]
   32388:	add	r0, pc, r0
   3238c:	str	r0, [sp, #8]
   32390:	mov	r0, r5
   32394:	ldr	r1, [pc, #328]	; 324e4 <__flatcc_fb_clear_parser@@Base+0x3f0>
   32398:	add	r1, pc, r1
   3239c:	bl	2abbc <__flatcc_fb_print_error@@Base>
   323a0:	ldr	r0, [r5, #108]	; 0x6c
   323a4:	add	r0, r0, #1
   323a8:	str	r0, [r5, #108]	; 0x6c
   323ac:	b	32260 <__flatcc_fb_clear_parser@@Base+0x16c>
   323b0:	mov	r0, #0
   323b4:	mov	r3, #0
   323b8:	str	r0, [sp]
   323bc:	str	r0, [sp, #4]
   323c0:	mov	r0, r5
   323c4:	ldr	r2, [pc, #288]	; 324ec <__flatcc_fb_clear_parser@@Base+0x3f8>
   323c8:	add	r2, pc, r2
   323cc:	bl	2ac84 <__flatcc_error_report@@Base>
   323d0:	mov	r0, #1
   323d4:	strh	r0, [r4, #8]
   323d8:	ldr	r0, [r4]
   323dc:	cmp	r0, #0
   323e0:	ldrne	r1, [r5, #40]	; 0x28
   323e4:	ldrne	r1, [r1]
   323e8:	subne	r0, r1, r0
   323ec:	strne	r0, [r4, #4]
   323f0:	ldr	r6, [r5, #40]	; 0x28
   323f4:	ldr	r0, [r6, #16]
   323f8:	cmp	r0, #22
   323fc:	bne	32418 <__flatcc_fb_clear_parser@@Base+0x324>
   32400:	mov	r0, r5
   32404:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32408:	cmp	r6, #0
   3240c:	beq	324c0 <__flatcc_fb_clear_parser@@Base+0x3cc>
   32410:	sub	sp, fp, #28
   32414:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32418:	cmp	r6, #0
   3241c:	beq	3246c <__flatcc_fb_clear_parser@@Base+0x378>
   32420:	ldr	r3, [r6]
   32424:	ldr	r0, [r6, #4]
   32428:	ldr	r2, [pc, #192]	; 324f0 <__flatcc_fb_clear_parser@@Base+0x3fc>
   3242c:	cmp	r3, #0
   32430:	add	r2, pc, r2
   32434:	mov	r1, r3
   32438:	moveq	r0, r3
   3243c:	moveq	r1, r2
   32440:	mov	r3, r5
   32444:	ldr	r7, [r3, #20]
   32448:	cmp	r7, r6
   3244c:	bhi	3245c <__flatcc_fb_clear_parser@@Base+0x368>
   32450:	ldr	r7, [r3, #24]
   32454:	cmp	r7, r6
   32458:	bhi	32488 <__flatcc_fb_clear_parser@@Base+0x394>
   3245c:	ldr	r3, [r3]
   32460:	cmp	r3, #0
   32464:	bne	32444 <__flatcc_fb_clear_parser@@Base+0x350>
   32468:	b	3248c <__flatcc_fb_clear_parser@@Base+0x398>
   3246c:	ldr	r1, [pc, #136]	; 324fc <__flatcc_fb_clear_parser@@Base+0x408>
   32470:	ldr	r2, [pc, #136]	; 32500 <__flatcc_fb_clear_parser@@Base+0x40c>
   32474:	mov	r0, r5
   32478:	add	r1, pc, r1
   3247c:	add	r2, pc, r2
   32480:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32484:	b	324b4 <__flatcc_fb_clear_parser@@Base+0x3c0>
   32488:	ldr	r2, [r3, #520]	; 0x208
   3248c:	ldr	r3, [r6, #8]
   32490:	ldr	r7, [r6, #12]
   32494:	ldr	r6, [pc, #88]	; 324f4 <__flatcc_fb_clear_parser@@Base+0x400>
   32498:	add	r6, pc, r6
   3249c:	str	r7, [sp]
   324a0:	stmib	sp, {r0, r1, r6}
   324a4:	mov	r0, r5
   324a8:	ldr	r1, [pc, #72]	; 324f8 <__flatcc_fb_clear_parser@@Base+0x404>
   324ac:	add	r1, pc, r1
   324b0:	bl	2abbc <__flatcc_fb_print_error@@Base>
   324b4:	ldr	r0, [r5, #108]	; 0x6c
   324b8:	add	r0, r0, #1
   324bc:	str	r0, [r5, #108]	; 0x6c
   324c0:	mov	r0, #1
   324c4:	strh	r0, [r4, #8]
   324c8:	sub	sp, fp, #28
   324cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   324d0:	andeq	r5, r2, fp, lsl #16
   324d4:	andeq	r5, r2, r3, lsr r8
   324d8:	andeq	r5, r2, r5, ror #15
   324dc:	strdeq	lr, [r0], -r6
   324e0:	strdeq	r5, [r2], -sp
   324e4:	andeq	r5, r2, pc, lsr r3
   324e8:	andeq	r5, r2, r5, asr #7
   324ec:	ldrdeq	r5, [r2], -lr
   324f0:	andeq	lr, r0, lr, asr #7
   324f4:	andeq	r5, r2, r9, lsr r6
   324f8:	andeq	r5, r2, fp, lsr #4
   324fc:			; <UNDEFINED> instruction: 0x000252b1
   32500:	andeq	r5, r2, r5, asr r6
   32504:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   32508:	add	fp, sp, #28
   3250c:	sub	sp, sp, #20
   32510:	ldr	r7, [r0, #40]	; 0x28
   32514:	mov	r4, r0
   32518:	ldr	r0, [r7, #16]
   3251c:	cmp	r0, #9
   32520:	bne	32db4 <__flatcc_fb_clear_parser@@Base+0xcc0>
   32524:	mov	r0, r4
   32528:	mov	r8, r2
   3252c:	mov	r5, r1
   32530:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32534:	cmp	r7, #0
   32538:	beq	32f44 <__flatcc_fb_clear_parser@@Base+0xe50>
   3253c:	mov	r0, r4
   32540:	str	r7, [r5, #4]
   32544:	bl	33218 <__flatcc_fb_clear_parser@@Base+0x1124>
   32548:	str	r0, [r5, #28]
   3254c:	ldr	r7, [r4, #40]	; 0x28
   32550:	ldr	r0, [r7, #16]
   32554:	cmp	r0, #123	; 0x7b
   32558:	bne	32e1c <__flatcc_fb_clear_parser@@Base+0xd28>
   3255c:	mov	r0, r4
   32560:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32564:	cmp	r7, #0
   32568:	beq	32f44 <__flatcc_fb_clear_parser@@Base+0xe50>
   3256c:	ldr	r6, [r4, #40]	; 0x28
   32570:	ldr	r0, [r6, #16]
   32574:	str	r6, [sp, #16]
   32578:	cmp	r0, #125	; 0x7d
   3257c:	beq	32e88 <__flatcc_fb_clear_parser@@Base+0xd94>
   32580:	mov	r9, #0
   32584:	ldr	r7, [r4, #52]	; 0x34
   32588:	ldr	r0, [r4, #44]	; 0x2c
   3258c:	add	r1, r7, #128	; 0x80
   32590:	cmp	r1, r0
   32594:	bls	325cc <__flatcc_fb_clear_parser@@Base+0x4d8>
   32598:	mov	r0, #65536	; 0x10000
   3259c:	mov	r1, #1
   325a0:	bl	148c8 <calloc@plt>
   325a4:	cmp	r0, #0
   325a8:	beq	32f84 <__flatcc_fb_clear_parser@@Base+0xe90>
   325ac:	ldr	r2, [r4, #48]	; 0x30
   325b0:	mov	r1, r0
   325b4:	add	r7, r0, #16
   325b8:	str	r2, [r1], #144	; 0x90
   325bc:	add	r2, r0, #65536	; 0x10000
   325c0:	str	r2, [r4, #44]	; 0x2c
   325c4:	str	r0, [r4, #48]	; 0x30
   325c8:	str	r7, [r4, #52]	; 0x34
   325cc:	str	r1, [r4, #52]	; 0x34
   325d0:	mov	r1, #5
   325d4:	ldr	r0, [r5, #20]
   325d8:	strh	r1, [r7, #8]
   325dc:	str	r0, [r7]
   325e0:	str	r7, [r5, #20]
   325e4:	ldr	r0, [r4, #36]	; 0x24
   325e8:	cmp	r0, #0
   325ec:	beq	32610 <__flatcc_fb_clear_parser@@Base+0x51c>
   325f0:	mov	r2, #0
   325f4:	mov	r1, r0
   325f8:	ldr	r0, [r0]
   325fc:	str	r2, [r1]
   32600:	mov	r2, r1
   32604:	cmp	r0, #0
   32608:	bne	325f4 <__flatcc_fb_clear_parser@@Base+0x500>
   3260c:	b	32614 <__flatcc_fb_clear_parser@@Base+0x520>
   32610:	mov	r1, #0
   32614:	str	r1, [r7, #68]	; 0x44
   32618:	str	r9, [r4, #36]	; 0x24
   3261c:	movw	r1, #64569	; 0xfc39
   32620:	ldr	sl, [r4, #40]	; 0x28
   32624:	movt	r1, #65535	; 0xffff
   32628:	cmp	r8, r1
   3262c:	ldr	r0, [sl, #16]
   32630:	bne	3273c <__flatcc_fb_clear_parser@@Base+0x648>
   32634:	cmp	r0, #9
   32638:	bne	327e8 <__flatcc_fb_clear_parser@@Base+0x6f4>
   3263c:	mov	r0, r4
   32640:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32644:	cmp	sl, #0
   32648:	beq	32d4c <__flatcc_fb_clear_parser@@Base+0xc58>
   3264c:	str	sl, [r7, #4]
   32650:	ldr	r6, [r4, #40]	; 0x28
   32654:	ldr	r0, [r6, #16]
   32658:	cmp	r0, #40	; 0x28
   3265c:	bne	328d0 <__flatcc_fb_clear_parser@@Base+0x7dc>
   32660:	mov	r0, r4
   32664:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32668:	cmp	r6, #0
   3266c:	beq	32d4c <__flatcc_fb_clear_parser@@Base+0xc58>
   32670:	add	r1, r7, #32
   32674:	mov	r0, r4
   32678:	bl	33b0c <__flatcc_fb_clear_parser@@Base+0x1a18>
   3267c:	ldr	r6, [r4, #40]	; 0x28
   32680:	ldr	r0, [r6, #16]
   32684:	cmp	r0, #41	; 0x29
   32688:	bne	329fc <__flatcc_fb_clear_parser@@Base+0x908>
   3268c:	mov	r0, r4
   32690:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32694:	cmp	r6, #0
   32698:	beq	32d4c <__flatcc_fb_clear_parser@@Base+0xc58>
   3269c:	ldr	r6, [r4, #40]	; 0x28
   326a0:	ldr	r0, [r6, #16]
   326a4:	cmp	r0, #58	; 0x3a
   326a8:	bne	32b74 <__flatcc_fb_clear_parser@@Base+0xa80>
   326ac:	mov	r0, r4
   326b0:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   326b4:	cmp	r6, #0
   326b8:	beq	32d4c <__flatcc_fb_clear_parser@@Base+0xc58>
   326bc:	add	r1, r7, #16
   326c0:	mov	r0, r4
   326c4:	bl	33b0c <__flatcc_fb_clear_parser@@Base+0x1a18>
   326c8:	ldr	r6, [r4, #40]	; 0x28
   326cc:	ldr	r0, [r6, #16]
   326d0:	cmp	r0, #61	; 0x3d
   326d4:	bne	32c34 <__flatcc_fb_clear_parser@@Base+0xb40>
   326d8:	mov	r0, r4
   326dc:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   326e0:	cmp	r6, #0
   326e4:	beq	32c34 <__flatcc_fb_clear_parser@@Base+0xb40>
   326e8:	ldr	r2, [r6]
   326ec:	ldr	r0, [r6, #4]
   326f0:	ldr	r3, [pc, #2348]	; 33024 <__flatcc_fb_clear_parser@@Base+0xf30>
   326f4:	cmp	r2, #0
   326f8:	mov	r1, r2
   326fc:	add	r3, pc, r3
   32700:	moveq	r0, r2
   32704:	moveq	r1, r3
   32708:	mov	r2, r4
   3270c:	ldr	r3, [r2, #20]
   32710:	cmp	r3, r6
   32714:	bhi	32724 <__flatcc_fb_clear_parser@@Base+0x630>
   32718:	ldr	r3, [r2, #24]
   3271c:	cmp	r3, r6
   32720:	bhi	32d04 <__flatcc_fb_clear_parser@@Base+0xc10>
   32724:	ldr	r2, [r2]
   32728:	cmp	r2, #0
   3272c:	bne	3270c <__flatcc_fb_clear_parser@@Base+0x618>
   32730:	ldr	r2, [pc, #2288]	; 33028 <__flatcc_fb_clear_parser@@Base+0xf34>
   32734:	add	r2, pc, r2
   32738:	b	32d08 <__flatcc_fb_clear_parser@@Base+0xc14>
   3273c:	cmp	r0, #9
   32740:	bne	32844 <__flatcc_fb_clear_parser@@Base+0x750>
   32744:	mov	r0, r4
   32748:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   3274c:	cmp	sl, #0
   32750:	beq	32b1c <__flatcc_fb_clear_parser@@Base+0xa28>
   32754:	str	sl, [r7, #4]
   32758:	ldr	r6, [r4, #40]	; 0x28
   3275c:	ldr	r0, [r6, #16]
   32760:	cmp	r0, #58	; 0x3a
   32764:	bne	3292c <__flatcc_fb_clear_parser@@Base+0x838>
   32768:	mov	r0, r4
   3276c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32770:	cmp	r6, #0
   32774:	beq	32b1c <__flatcc_fb_clear_parser@@Base+0xa28>
   32778:	add	r1, r7, #16
   3277c:	mov	r0, r4
   32780:	bl	33b0c <__flatcc_fb_clear_parser@@Base+0x1a18>
   32784:	ldr	r6, [r4, #40]	; 0x28
   32788:	ldr	r0, [r6, #16]
   3278c:	cmp	r0, #61	; 0x3d
   32790:	bne	327bc <__flatcc_fb_clear_parser@@Base+0x6c8>
   32794:	mov	r0, r4
   32798:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   3279c:	cmp	r6, #0
   327a0:	beq	327bc <__flatcc_fb_clear_parser@@Base+0x6c8>
   327a4:	ldr	r3, [pc, #2248]	; 33074 <__flatcc_fb_clear_parser@@Base+0xf80>
   327a8:	add	r1, r7, #48	; 0x30
   327ac:	mov	r0, r4
   327b0:	mov	r2, #2
   327b4:	add	r3, pc, r3
   327b8:	bl	334d4 <__flatcc_fb_clear_parser@@Base+0x13e0>
   327bc:	mov	r0, r4
   327c0:	bl	33218 <__flatcc_fb_clear_parser@@Base+0x1124>
   327c4:	str	r0, [r7, #64]	; 0x40
   327c8:	str	r9, [r4, #36]	; 0x24
   327cc:	ldr	r0, [r4, #40]	; 0x28
   327d0:	ldr	r1, [r0, #16]
   327d4:	cmp	r1, #59	; 0x3b
   327d8:	bne	32a58 <__flatcc_fb_clear_parser@@Base+0x964>
   327dc:	mov	r0, r4
   327e0:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   327e4:	b	32d78 <__flatcc_fb_clear_parser@@Base+0xc84>
   327e8:	cmp	sl, #0
   327ec:	beq	328a0 <__flatcc_fb_clear_parser@@Base+0x7ac>
   327f0:	ldr	r2, [sl]
   327f4:	ldr	r0, [sl, #4]
   327f8:	ldr	r3, [pc, #2000]	; 32fd0 <__flatcc_fb_clear_parser@@Base+0xedc>
   327fc:	cmp	r2, #0
   32800:	mov	r1, r2
   32804:	add	r3, pc, r3
   32808:	moveq	r0, r2
   3280c:	moveq	r1, r3
   32810:	mov	r2, r4
   32814:	ldr	r3, [r2, #20]
   32818:	cmp	r3, sl
   3281c:	bhi	3282c <__flatcc_fb_clear_parser@@Base+0x738>
   32820:	ldr	r3, [r2, #24]
   32824:	cmp	r3, sl
   32828:	bhi	32988 <__flatcc_fb_clear_parser@@Base+0x894>
   3282c:	ldr	r2, [r2]
   32830:	cmp	r2, #0
   32834:	bne	32814 <__flatcc_fb_clear_parser@@Base+0x720>
   32838:	ldr	r2, [pc, #1940]	; 32fd4 <__flatcc_fb_clear_parser@@Base+0xee0>
   3283c:	add	r2, pc, r2
   32840:	b	3298c <__flatcc_fb_clear_parser@@Base+0x898>
   32844:	cmp	sl, #0
   32848:	beq	328b8 <__flatcc_fb_clear_parser@@Base+0x7c4>
   3284c:	ldr	r2, [sl]
   32850:	ldr	r0, [sl, #4]
   32854:	ldr	r3, [pc, #2028]	; 33048 <__flatcc_fb_clear_parser@@Base+0xf54>
   32858:	cmp	r2, #0
   3285c:	mov	r1, r2
   32860:	add	r3, pc, r3
   32864:	moveq	r0, r2
   32868:	moveq	r1, r3
   3286c:	mov	r2, r4
   32870:	ldr	r3, [r2, #20]
   32874:	cmp	r3, sl
   32878:	bhi	32888 <__flatcc_fb_clear_parser@@Base+0x794>
   3287c:	ldr	r3, [r2, #24]
   32880:	cmp	r3, sl
   32884:	bhi	329a8 <__flatcc_fb_clear_parser@@Base+0x8b4>
   32888:	ldr	r2, [r2]
   3288c:	cmp	r2, #0
   32890:	bne	32870 <__flatcc_fb_clear_parser@@Base+0x77c>
   32894:	ldr	r2, [pc, #1968]	; 3304c <__flatcc_fb_clear_parser@@Base+0xf58>
   32898:	add	r2, pc, r2
   3289c:	b	329ac <__flatcc_fb_clear_parser@@Base+0x8b8>
   328a0:	ldr	r1, [pc, #1848]	; 32fe0 <__flatcc_fb_clear_parser@@Base+0xeec>
   328a4:	ldr	r2, [pc, #1848]	; 32fe4 <__flatcc_fb_clear_parser@@Base+0xef0>
   328a8:	mov	r0, r4
   328ac:	add	r1, pc, r1
   328b0:	add	r2, pc, r2
   328b4:	b	32cc4 <__flatcc_fb_clear_parser@@Base+0xbd0>
   328b8:	ldr	r1, [pc, #1944]	; 33058 <__flatcc_fb_clear_parser@@Base+0xf64>
   328bc:	ldr	r2, [pc, #1944]	; 3305c <__flatcc_fb_clear_parser@@Base+0xf68>
   328c0:	mov	r0, r4
   328c4:	add	r1, pc, r1
   328c8:	add	r2, pc, r2
   328cc:	b	329f4 <__flatcc_fb_clear_parser@@Base+0x900>
   328d0:	cmp	r6, #0
   328d4:	beq	329c8 <__flatcc_fb_clear_parser@@Base+0x8d4>
   328d8:	ldr	r2, [r6]
   328dc:	ldr	r0, [r6, #4]
   328e0:	ldr	r3, [pc, #1792]	; 32fe8 <__flatcc_fb_clear_parser@@Base+0xef4>
   328e4:	cmp	r2, #0
   328e8:	mov	r1, r2
   328ec:	add	r3, pc, r3
   328f0:	moveq	r0, r2
   328f4:	moveq	r1, r3
   328f8:	mov	r2, r4
   328fc:	ldr	r3, [r2, #20]
   32900:	cmp	r3, r6
   32904:	bhi	32914 <__flatcc_fb_clear_parser@@Base+0x820>
   32908:	ldr	r3, [r2, #24]
   3290c:	cmp	r3, r6
   32910:	bhi	32ab4 <__flatcc_fb_clear_parser@@Base+0x9c0>
   32914:	ldr	r2, [r2]
   32918:	cmp	r2, #0
   3291c:	bne	328fc <__flatcc_fb_clear_parser@@Base+0x808>
   32920:	ldr	r2, [pc, #1732]	; 32fec <__flatcc_fb_clear_parser@@Base+0xef8>
   32924:	add	r2, pc, r2
   32928:	b	32ab8 <__flatcc_fb_clear_parser@@Base+0x9c4>
   3292c:	cmp	r6, #0
   32930:	beq	329e0 <__flatcc_fb_clear_parser@@Base+0x8ec>
   32934:	ldr	r2, [r6]
   32938:	ldr	r0, [r6, #4]
   3293c:	ldr	r3, [pc, #1820]	; 33060 <__flatcc_fb_clear_parser@@Base+0xf6c>
   32940:	cmp	r2, #0
   32944:	mov	r1, r2
   32948:	add	r3, pc, r3
   3294c:	moveq	r0, r2
   32950:	moveq	r1, r3
   32954:	mov	r2, r4
   32958:	ldr	r3, [r2, #20]
   3295c:	cmp	r3, r6
   32960:	bhi	32970 <__flatcc_fb_clear_parser@@Base+0x87c>
   32964:	ldr	r3, [r2, #24]
   32968:	cmp	r3, r6
   3296c:	bhi	32ad4 <__flatcc_fb_clear_parser@@Base+0x9e0>
   32970:	ldr	r2, [r2]
   32974:	cmp	r2, #0
   32978:	bne	32958 <__flatcc_fb_clear_parser@@Base+0x864>
   3297c:	ldr	r2, [pc, #1760]	; 33064 <__flatcc_fb_clear_parser@@Base+0xf70>
   32980:	add	r2, pc, r2
   32984:	b	32ad8 <__flatcc_fb_clear_parser@@Base+0x9e4>
   32988:	ldr	r2, [r2, #520]	; 0x208
   3298c:	ldr	r7, [sl, #12]
   32990:	ldr	r3, [sl, #8]
   32994:	str	r7, [sp]
   32998:	stmib	sp, {r0, r1}
   3299c:	ldr	r0, [pc, #1588]	; 32fd8 <__flatcc_fb_clear_parser@@Base+0xee4>
   329a0:	add	r0, pc, r0
   329a4:	b	32d20 <__flatcc_fb_clear_parser@@Base+0xc2c>
   329a8:	ldr	r2, [r2, #520]	; 0x208
   329ac:	ldr	r7, [sl, #12]
   329b0:	ldr	r3, [sl, #8]
   329b4:	str	r7, [sp]
   329b8:	stmib	sp, {r0, r1}
   329bc:	ldr	r0, [pc, #1676]	; 33050 <__flatcc_fb_clear_parser@@Base+0xf5c>
   329c0:	add	r0, pc, r0
   329c4:	b	32af0 <__flatcc_fb_clear_parser@@Base+0x9fc>
   329c8:	ldr	r1, [pc, #1572]	; 32ff4 <__flatcc_fb_clear_parser@@Base+0xf00>
   329cc:	ldr	r2, [pc, #1572]	; 32ff8 <__flatcc_fb_clear_parser@@Base+0xf04>
   329d0:	mov	r0, r4
   329d4:	add	r1, pc, r1
   329d8:	add	r2, pc, r2
   329dc:	b	32cc4 <__flatcc_fb_clear_parser@@Base+0xbd0>
   329e0:	ldr	r1, [pc, #1668]	; 3306c <__flatcc_fb_clear_parser@@Base+0xf78>
   329e4:	ldr	r2, [pc, #1668]	; 33070 <__flatcc_fb_clear_parser@@Base+0xf7c>
   329e8:	mov	r0, r4
   329ec:	add	r1, pc, r1
   329f0:	add	r2, pc, r2
   329f4:	bl	2abbc <__flatcc_fb_print_error@@Base>
   329f8:	b	32b04 <__flatcc_fb_clear_parser@@Base+0xa10>
   329fc:	cmp	r6, #0
   32a00:	beq	32b40 <__flatcc_fb_clear_parser@@Base+0xa4c>
   32a04:	ldr	r2, [r6]
   32a08:	ldr	r0, [r6, #4]
   32a0c:	ldr	r3, [pc, #1512]	; 32ffc <__flatcc_fb_clear_parser@@Base+0xf08>
   32a10:	cmp	r2, #0
   32a14:	mov	r1, r2
   32a18:	add	r3, pc, r3
   32a1c:	moveq	r0, r2
   32a20:	moveq	r1, r3
   32a24:	mov	r2, r4
   32a28:	ldr	r3, [r2, #20]
   32a2c:	cmp	r3, r6
   32a30:	bhi	32a40 <__flatcc_fb_clear_parser@@Base+0x94c>
   32a34:	ldr	r3, [r2, #24]
   32a38:	cmp	r3, r6
   32a3c:	bhi	32bd0 <__flatcc_fb_clear_parser@@Base+0xadc>
   32a40:	ldr	r2, [r2]
   32a44:	cmp	r2, #0
   32a48:	bne	32a28 <__flatcc_fb_clear_parser@@Base+0x934>
   32a4c:	ldr	r2, [pc, #1452]	; 33000 <__flatcc_fb_clear_parser@@Base+0xf0c>
   32a50:	add	r2, pc, r2
   32a54:	b	32bd4 <__flatcc_fb_clear_parser@@Base+0xae0>
   32a58:	cmp	r0, #0
   32a5c:	beq	32b58 <__flatcc_fb_clear_parser@@Base+0xa64>
   32a60:	ldr	r2, [r0]
   32a64:	ldr	r1, [r0, #4]
   32a68:	ldr	r3, [pc, #1544]	; 33078 <__flatcc_fb_clear_parser@@Base+0xf84>
   32a6c:	cmp	r2, #0
   32a70:	mov	r7, r2
   32a74:	add	r3, pc, r3
   32a78:	moveq	r1, r2
   32a7c:	moveq	r7, r3
   32a80:	mov	r2, r4
   32a84:	ldr	r3, [r2, #20]
   32a88:	cmp	r3, r0
   32a8c:	bhi	32a9c <__flatcc_fb_clear_parser@@Base+0x9a8>
   32a90:	ldr	r3, [r2, #24]
   32a94:	cmp	r3, r0
   32a98:	bhi	32bf0 <__flatcc_fb_clear_parser@@Base+0xafc>
   32a9c:	ldr	r2, [r2]
   32aa0:	cmp	r2, #0
   32aa4:	bne	32a84 <__flatcc_fb_clear_parser@@Base+0x990>
   32aa8:	ldr	r2, [pc, #1484]	; 3307c <__flatcc_fb_clear_parser@@Base+0xf88>
   32aac:	add	r2, pc, r2
   32ab0:	b	32bf4 <__flatcc_fb_clear_parser@@Base+0xb00>
   32ab4:	ldr	r2, [r2, #520]	; 0x208
   32ab8:	ldr	r7, [r6, #12]
   32abc:	ldr	r3, [r6, #8]
   32ac0:	str	r7, [sp]
   32ac4:	stmib	sp, {r0, r1}
   32ac8:	ldr	r0, [pc, #1312]	; 32ff0 <__flatcc_fb_clear_parser@@Base+0xefc>
   32acc:	add	r0, pc, r0
   32ad0:	b	32d20 <__flatcc_fb_clear_parser@@Base+0xc2c>
   32ad4:	ldr	r2, [r2, #520]	; 0x208
   32ad8:	ldr	r7, [r6, #12]
   32adc:	ldr	r3, [r6, #8]
   32ae0:	str	r7, [sp]
   32ae4:	stmib	sp, {r0, r1}
   32ae8:	ldr	r0, [pc, #1400]	; 33068 <__flatcc_fb_clear_parser@@Base+0xf74>
   32aec:	add	r0, pc, r0
   32af0:	str	r0, [sp, #12]
   32af4:	mov	r0, r4
   32af8:	ldr	r1, [pc, #1364]	; 33054 <__flatcc_fb_clear_parser@@Base+0xf60>
   32afc:	add	r1, pc, r1
   32b00:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32b04:	ldr	r0, [r4, #108]	; 0x6c
   32b08:	add	r0, r0, #1
   32b0c:	str	r0, [r4, #108]	; 0x6c
   32b10:	b	32b1c <__flatcc_fb_clear_parser@@Base+0xa28>
   32b14:	mov	r0, r4
   32b18:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32b1c:	ldr	r0, [r4, #40]	; 0x28
   32b20:	ldr	r0, [r0, #16]
   32b24:	cmp	r0, #0
   32b28:	beq	32d78 <__flatcc_fb_clear_parser@@Base+0xc84>
   32b2c:	cmp	r0, #125	; 0x7d
   32b30:	beq	32d74 <__flatcc_fb_clear_parser@@Base+0xc80>
   32b34:	cmp	r0, #59	; 0x3b
   32b38:	bne	32b14 <__flatcc_fb_clear_parser@@Base+0xa20>
   32b3c:	b	32d6c <__flatcc_fb_clear_parser@@Base+0xc78>
   32b40:	ldr	r1, [pc, #1216]	; 33008 <__flatcc_fb_clear_parser@@Base+0xf14>
   32b44:	ldr	r2, [pc, #1216]	; 3300c <__flatcc_fb_clear_parser@@Base+0xf18>
   32b48:	mov	r0, r4
   32b4c:	add	r1, pc, r1
   32b50:	add	r2, pc, r2
   32b54:	b	32cc4 <__flatcc_fb_clear_parser@@Base+0xbd0>
   32b58:	ldr	r1, [pc, #1316]	; 33084 <__flatcc_fb_clear_parser@@Base+0xf90>
   32b5c:	ldr	r2, [pc, #1316]	; 33088 <__flatcc_fb_clear_parser@@Base+0xf94>
   32b60:	mov	r0, r4
   32b64:	add	r1, pc, r1
   32b68:	add	r2, pc, r2
   32b6c:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32b70:	b	32c1c <__flatcc_fb_clear_parser@@Base+0xb28>
   32b74:	cmp	r6, #0
   32b78:	beq	32cb0 <__flatcc_fb_clear_parser@@Base+0xbbc>
   32b7c:	ldr	r2, [r6]
   32b80:	ldr	r0, [r6, #4]
   32b84:	ldr	r3, [pc, #1156]	; 33010 <__flatcc_fb_clear_parser@@Base+0xf1c>
   32b88:	cmp	r2, #0
   32b8c:	mov	r1, r2
   32b90:	add	r3, pc, r3
   32b94:	moveq	r0, r2
   32b98:	moveq	r1, r3
   32b9c:	mov	r2, r4
   32ba0:	ldr	r3, [r2, #20]
   32ba4:	cmp	r3, r6
   32ba8:	bhi	32bb8 <__flatcc_fb_clear_parser@@Base+0xac4>
   32bac:	ldr	r3, [r2, #24]
   32bb0:	cmp	r3, r6
   32bb4:	bhi	32ccc <__flatcc_fb_clear_parser@@Base+0xbd8>
   32bb8:	ldr	r2, [r2]
   32bbc:	cmp	r2, #0
   32bc0:	bne	32ba0 <__flatcc_fb_clear_parser@@Base+0xaac>
   32bc4:	ldr	r2, [pc, #1096]	; 33014 <__flatcc_fb_clear_parser@@Base+0xf20>
   32bc8:	add	r2, pc, r2
   32bcc:	b	32cd0 <__flatcc_fb_clear_parser@@Base+0xbdc>
   32bd0:	ldr	r2, [r2, #520]	; 0x208
   32bd4:	ldr	r7, [r6, #12]
   32bd8:	ldr	r3, [r6, #8]
   32bdc:	str	r7, [sp]
   32be0:	stmib	sp, {r0, r1}
   32be4:	ldr	r0, [pc, #1048]	; 33004 <__flatcc_fb_clear_parser@@Base+0xf10>
   32be8:	add	r0, pc, r0
   32bec:	b	32d20 <__flatcc_fb_clear_parser@@Base+0xc2c>
   32bf0:	ldr	r2, [r2, #520]	; 0x208
   32bf4:	ldr	r3, [r0, #8]
   32bf8:	ldr	r0, [r0, #12]
   32bfc:	stm	sp, {r0, r1, r7}
   32c00:	ldr	r0, [pc, #1144]	; 33080 <__flatcc_fb_clear_parser@@Base+0xf8c>
   32c04:	add	r0, pc, r0
   32c08:	str	r0, [sp, #12]
   32c0c:	mov	r0, r4
   32c10:	ldr	r1, [pc, #1060]	; 3303c <__flatcc_fb_clear_parser@@Base+0xf48>
   32c14:	add	r1, pc, r1
   32c18:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32c1c:	ldr	r0, [r4, #108]	; 0x6c
   32c20:	add	r0, r0, #1
   32c24:	str	r0, [r4, #108]	; 0x6c
   32c28:	cmp	r0, #9
   32c2c:	ble	32d84 <__flatcc_fb_clear_parser@@Base+0xc90>
   32c30:	b	32f44 <__flatcc_fb_clear_parser@@Base+0xe50>
   32c34:	mov	r0, r4
   32c38:	bl	33218 <__flatcc_fb_clear_parser@@Base+0x1124>
   32c3c:	str	r0, [r7, #64]	; 0x40
   32c40:	str	r9, [r4, #36]	; 0x24
   32c44:	ldr	r0, [r4, #40]	; 0x28
   32c48:	ldr	r1, [r0, #16]
   32c4c:	cmp	r1, #59	; 0x3b
   32c50:	beq	327dc <__flatcc_fb_clear_parser@@Base+0x6e8>
   32c54:	cmp	r0, #0
   32c58:	beq	32cec <__flatcc_fb_clear_parser@@Base+0xbf8>
   32c5c:	ldr	r2, [r0]
   32c60:	ldr	r1, [r0, #4]
   32c64:	ldr	r3, [pc, #964]	; 33030 <__flatcc_fb_clear_parser@@Base+0xf3c>
   32c68:	cmp	r2, #0
   32c6c:	mov	r7, r2
   32c70:	add	r3, pc, r3
   32c74:	moveq	r1, r2
   32c78:	moveq	r7, r3
   32c7c:	mov	r2, r4
   32c80:	ldr	r3, [r2, #20]
   32c84:	cmp	r3, r0
   32c88:	bhi	32c98 <__flatcc_fb_clear_parser@@Base+0xba4>
   32c8c:	ldr	r3, [r2, #24]
   32c90:	cmp	r3, r0
   32c94:	bhi	32d98 <__flatcc_fb_clear_parser@@Base+0xca4>
   32c98:	ldr	r2, [r2]
   32c9c:	cmp	r2, #0
   32ca0:	bne	32c80 <__flatcc_fb_clear_parser@@Base+0xb8c>
   32ca4:	ldr	r2, [pc, #904]	; 33034 <__flatcc_fb_clear_parser@@Base+0xf40>
   32ca8:	add	r2, pc, r2
   32cac:	b	32d9c <__flatcc_fb_clear_parser@@Base+0xca8>
   32cb0:	ldr	r1, [pc, #868]	; 3301c <__flatcc_fb_clear_parser@@Base+0xf28>
   32cb4:	ldr	r2, [pc, #868]	; 33020 <__flatcc_fb_clear_parser@@Base+0xf2c>
   32cb8:	mov	r0, r4
   32cbc:	add	r1, pc, r1
   32cc0:	add	r2, pc, r2
   32cc4:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32cc8:	b	32d34 <__flatcc_fb_clear_parser@@Base+0xc40>
   32ccc:	ldr	r2, [r2, #520]	; 0x208
   32cd0:	ldr	r7, [r6, #12]
   32cd4:	ldr	r3, [r6, #8]
   32cd8:	str	r7, [sp]
   32cdc:	stmib	sp, {r0, r1}
   32ce0:	ldr	r0, [pc, #816]	; 33018 <__flatcc_fb_clear_parser@@Base+0xf24>
   32ce4:	add	r0, pc, r0
   32ce8:	b	32d20 <__flatcc_fb_clear_parser@@Base+0xc2c>
   32cec:	ldr	r1, [pc, #844]	; 33040 <__flatcc_fb_clear_parser@@Base+0xf4c>
   32cf0:	ldr	r2, [pc, #844]	; 33044 <__flatcc_fb_clear_parser@@Base+0xf50>
   32cf4:	mov	r0, r4
   32cf8:	add	r1, pc, r1
   32cfc:	add	r2, pc, r2
   32d00:	b	32b6c <__flatcc_fb_clear_parser@@Base+0xa78>
   32d04:	ldr	r2, [r2, #520]	; 0x208
   32d08:	ldr	r7, [r6, #12]
   32d0c:	ldr	r3, [r6, #8]
   32d10:	str	r7, [sp]
   32d14:	stmib	sp, {r0, r1}
   32d18:	ldr	r0, [pc, #780]	; 3302c <__flatcc_fb_clear_parser@@Base+0xf38>
   32d1c:	add	r0, pc, r0
   32d20:	str	r0, [sp, #12]
   32d24:	mov	r0, r4
   32d28:	ldr	r1, [pc, #684]	; 32fdc <__flatcc_fb_clear_parser@@Base+0xee8>
   32d2c:	add	r1, pc, r1
   32d30:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32d34:	ldr	r0, [r4, #108]	; 0x6c
   32d38:	add	r0, r0, #1
   32d3c:	str	r0, [r4, #108]	; 0x6c
   32d40:	b	32d4c <__flatcc_fb_clear_parser@@Base+0xc58>
   32d44:	mov	r0, r4
   32d48:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32d4c:	ldr	r0, [r4, #40]	; 0x28
   32d50:	ldr	r0, [r0, #16]
   32d54:	cmp	r0, #0
   32d58:	beq	32d78 <__flatcc_fb_clear_parser@@Base+0xc84>
   32d5c:	cmp	r0, #125	; 0x7d
   32d60:	beq	32d74 <__flatcc_fb_clear_parser@@Base+0xc80>
   32d64:	cmp	r0, #59	; 0x3b
   32d68:	bne	32d44 <__flatcc_fb_clear_parser@@Base+0xc50>
   32d6c:	mov	r0, r4
   32d70:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32d74:	str	r9, [r4, #36]	; 0x24
   32d78:	ldr	r0, [r4, #108]	; 0x6c
   32d7c:	cmp	r0, #9
   32d80:	bgt	32f44 <__flatcc_fb_clear_parser@@Base+0xe50>
   32d84:	ldr	r6, [r4, #40]	; 0x28
   32d88:	ldr	r0, [r6, #16]
   32d8c:	cmp	r0, #125	; 0x7d
   32d90:	bne	32584 <__flatcc_fb_clear_parser@@Base+0x490>
   32d94:	b	32e88 <__flatcc_fb_clear_parser@@Base+0xd94>
   32d98:	ldr	r2, [r2, #520]	; 0x208
   32d9c:	ldr	r3, [r0, #8]
   32da0:	ldr	r0, [r0, #12]
   32da4:	stm	sp, {r0, r1, r7}
   32da8:	ldr	r0, [pc, #648]	; 33038 <__flatcc_fb_clear_parser@@Base+0xf44>
   32dac:	add	r0, pc, r0
   32db0:	b	32c08 <__flatcc_fb_clear_parser@@Base+0xb14>
   32db4:	cmp	r7, #0
   32db8:	beq	32e08 <__flatcc_fb_clear_parser@@Base+0xd14>
   32dbc:	ldr	r3, [r7]
   32dc0:	ldr	r0, [r7, #4]
   32dc4:	ldr	r2, [pc, #480]	; 32fac <__flatcc_fb_clear_parser@@Base+0xeb8>
   32dc8:	cmp	r3, #0
   32dcc:	add	r2, pc, r2
   32dd0:	mov	r1, r3
   32dd4:	moveq	r0, r3
   32dd8:	moveq	r1, r2
   32ddc:	mov	r3, r4
   32de0:	ldr	r6, [r3, #20]
   32de4:	cmp	r6, r7
   32de8:	bhi	32df8 <__flatcc_fb_clear_parser@@Base+0xd04>
   32dec:	ldr	r6, [r3, #24]
   32df0:	cmp	r6, r7
   32df4:	bhi	32e70 <__flatcc_fb_clear_parser@@Base+0xd7c>
   32df8:	ldr	r3, [r3]
   32dfc:	cmp	r3, #0
   32e00:	bne	32de0 <__flatcc_fb_clear_parser@@Base+0xcec>
   32e04:	b	32e74 <__flatcc_fb_clear_parser@@Base+0xd80>
   32e08:	ldr	r1, [pc, #424]	; 32fb8 <__flatcc_fb_clear_parser@@Base+0xec4>
   32e0c:	ldr	r2, [pc, #424]	; 32fbc <__flatcc_fb_clear_parser@@Base+0xec8>
   32e10:	add	r1, pc, r1
   32e14:	add	r2, pc, r2
   32e18:	b	32f00 <__flatcc_fb_clear_parser@@Base+0xe0c>
   32e1c:	cmp	r7, #0
   32e20:	beq	32ef0 <__flatcc_fb_clear_parser@@Base+0xdfc>
   32e24:	ldr	r3, [r7]
   32e28:	ldr	r0, [r7, #4]
   32e2c:	ldr	r2, [pc, #396]	; 32fc0 <__flatcc_fb_clear_parser@@Base+0xecc>
   32e30:	cmp	r3, #0
   32e34:	add	r2, pc, r2
   32e38:	mov	r1, r3
   32e3c:	moveq	r0, r3
   32e40:	moveq	r1, r2
   32e44:	mov	r3, r4
   32e48:	ldr	r6, [r3, #20]
   32e4c:	cmp	r6, r7
   32e50:	bhi	32e60 <__flatcc_fb_clear_parser@@Base+0xd6c>
   32e54:	ldr	r6, [r3, #24]
   32e58:	cmp	r6, r7
   32e5c:	bhi	32f0c <__flatcc_fb_clear_parser@@Base+0xe18>
   32e60:	ldr	r3, [r3]
   32e64:	cmp	r3, #0
   32e68:	bne	32e48 <__flatcc_fb_clear_parser@@Base+0xd54>
   32e6c:	b	32f10 <__flatcc_fb_clear_parser@@Base+0xe1c>
   32e70:	ldr	r2, [r3, #520]	; 0x208
   32e74:	ldr	r3, [r7, #8]
   32e78:	ldr	r7, [r7, #12]
   32e7c:	ldr	r6, [pc, #300]	; 32fb0 <__flatcc_fb_clear_parser@@Base+0xebc>
   32e80:	add	r6, pc, r6
   32e84:	b	32f20 <__flatcc_fb_clear_parser@@Base+0xe2c>
   32e88:	mov	r0, r4
   32e8c:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32e90:	ldr	r3, [sp, #16]
   32e94:	cmp	r3, #0
   32e98:	beq	32ec4 <__flatcc_fb_clear_parser@@Base+0xdd0>
   32e9c:	cmp	r6, #0
   32ea0:	bne	32ec4 <__flatcc_fb_clear_parser@@Base+0xdd0>
   32ea4:	mov	r0, #0
   32ea8:	ldr	r1, [r4, #40]	; 0x28
   32eac:	str	r0, [sp]
   32eb0:	str	r0, [sp, #4]
   32eb4:	mov	r0, r4
   32eb8:	ldr	r2, [pc, #460]	; 3308c <__flatcc_fb_clear_parser@@Base+0xf98>
   32ebc:	add	r2, pc, r2
   32ec0:	bl	2ac84 <__flatcc_error_report@@Base>
   32ec4:	ldr	r0, [r5, #20]
   32ec8:	cmp	r0, #0
   32ecc:	beq	32f74 <__flatcc_fb_clear_parser@@Base+0xe80>
   32ed0:	mov	r2, #0
   32ed4:	mov	r1, r0
   32ed8:	ldr	r0, [r0]
   32edc:	str	r2, [r1]
   32ee0:	mov	r2, r1
   32ee4:	cmp	r0, #0
   32ee8:	bne	32ed4 <__flatcc_fb_clear_parser@@Base+0xde0>
   32eec:	b	32f78 <__flatcc_fb_clear_parser@@Base+0xe84>
   32ef0:	ldr	r1, [pc, #208]	; 32fc8 <__flatcc_fb_clear_parser@@Base+0xed4>
   32ef4:	ldr	r2, [pc, #208]	; 32fcc <__flatcc_fb_clear_parser@@Base+0xed8>
   32ef8:	add	r1, pc, r1
   32efc:	add	r2, pc, r2
   32f00:	mov	r0, r4
   32f04:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32f08:	b	32f38 <__flatcc_fb_clear_parser@@Base+0xe44>
   32f0c:	ldr	r2, [r3, #520]	; 0x208
   32f10:	ldr	r3, [r7, #8]
   32f14:	ldr	r7, [r7, #12]
   32f18:	ldr	r6, [pc, #164]	; 32fc4 <__flatcc_fb_clear_parser@@Base+0xed0>
   32f1c:	add	r6, pc, r6
   32f20:	str	r7, [sp]
   32f24:	stmib	sp, {r0, r1, r6}
   32f28:	mov	r0, r4
   32f2c:	ldr	r1, [pc, #128]	; 32fb4 <__flatcc_fb_clear_parser@@Base+0xec0>
   32f30:	add	r1, pc, r1
   32f34:	bl	2abbc <__flatcc_fb_print_error@@Base>
   32f38:	ldr	r0, [r4, #108]	; 0x6c
   32f3c:	add	r0, r0, #1
   32f40:	str	r0, [r4, #108]	; 0x6c
   32f44:	ldr	r0, [r4, #40]	; 0x28
   32f48:	ldr	r5, [r0, #16]
   32f4c:	cmp	r5, #0
   32f50:	beq	32f7c <__flatcc_fb_clear_parser@@Base+0xe88>
   32f54:	mov	r0, r4
   32f58:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   32f5c:	cmp	r5, #125	; 0x7d
   32f60:	bne	32f44 <__flatcc_fb_clear_parser@@Base+0xe50>
   32f64:	mov	r0, #0
   32f68:	str	r0, [r4, #36]	; 0x24
   32f6c:	sub	sp, fp, #28
   32f70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f74:	mov	r1, #0
   32f78:	str	r1, [r5, #20]
   32f7c:	sub	sp, fp, #28
   32f80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32f84:	ldr	r0, [pc, #260]	; 33090 <__flatcc_fb_clear_parser@@Base+0xf9c>
   32f88:	mov	r1, #34	; 0x22
   32f8c:	mov	r2, #1
   32f90:	ldr	r0, [pc, r0]
   32f94:	ldr	r3, [r0]
   32f98:	ldr	r0, [pc, #244]	; 33094 <__flatcc_fb_clear_parser@@Base+0xfa0>
   32f9c:	add	r0, pc, r0
   32fa0:	bl	1494c <fwrite@plt>
   32fa4:	mov	r0, #1
   32fa8:	bl	14994 <exit@plt>
   32fac:	andeq	sp, r0, r2, lsr sl
   32fb0:	andeq	r4, r2, r9, ror pc
   32fb4:	andeq	r4, r2, r7, lsr #15
   32fb8:	andeq	r4, r2, r9, lsl r9
   32fbc:	andeq	r4, r2, r5, ror #31
   32fc0:	andeq	sp, r0, sl, asr #19
   32fc4:	andeq	r4, r2, r0, lsl #30
   32fc8:	andeq	r4, r2, r1, lsr r8
   32fcc:	andeq	r4, r2, r0, lsr #30
   32fd0:	strdeq	sp, [r0], -sl
   32fd4:	andeq	sp, r0, r2, asr #31
   32fd8:	strdeq	r5, [r2], -fp
   32fdc:	andeq	r4, r2, fp, lsr #19
   32fe0:	andeq	r4, r2, sp, ror lr
   32fe4:	andeq	r5, r2, fp, ror #13
   32fe8:	andeq	sp, r0, r2, lsl pc
   32fec:	ldrdeq	sp, [r0], -sl
   32ff0:	andeq	r5, r2, sl, ror #9
   32ff4:	andeq	r4, r2, r5, asr sp
   32ff8:	ldrdeq	r5, [r2], -lr
   32ffc:	andeq	sp, r0, r6, ror #27
   33000:	andeq	sp, r0, lr, lsr #27
   33004:	strdeq	r5, [r2], -r3
   33008:	ldrdeq	r4, [r2], -sp
   3300c:	andeq	r5, r2, fp, lsl #9
   33010:	andeq	sp, r0, lr, ror #24
   33014:	andeq	sp, r0, r6, lsr ip
   33018:	andeq	r5, r2, lr, lsl r3
   3301c:	andeq	r4, r2, sp, ror #20
   33020:	andeq	r5, r2, r2, asr #6
   33024:	andeq	lr, r0, r2, lsl #2
   33028:	andeq	lr, r0, sl, asr #1
   3302c:	andeq	r5, r2, r9, lsl r3
   33030:	andeq	sp, r0, lr, lsl #23
   33034:	andeq	sp, r0, r6, asr fp
   33038:	andeq	r5, r2, pc, lsr #5
   3303c:	andeq	r4, r2, r3, asr #21
   33040:	andeq	r4, r2, r1, lsr sl
   33044:	andeq	r5, r2, pc, asr r3
   33048:	muleq	r0, lr, pc	; <UNPREDICTABLE>
   3304c:	andeq	sp, r0, r6, ror #30
   33050:	andeq	r5, r2, r1, asr r7
   33054:	ldrdeq	r4, [r2], -fp
   33058:	andeq	r4, r2, r5, ror #28
   3305c:	andeq	r5, r2, r9, asr #16
   33060:			; <UNDEFINED> instruction: 0x0000deb6
   33064:	andeq	sp, r0, lr, ror lr
   33068:	andeq	r5, r2, pc, lsr r6
   3306c:	andeq	r4, r2, sp, lsr sp
   33070:	andeq	r5, r2, fp, lsr r7
   33074:	andeq	r5, r2, r0, lsr #19
   33078:	andeq	sp, r0, sl, lsl #27
   3307c:	andeq	sp, r0, r2, asr sp
   33080:	andeq	r5, r2, r3, ror r5
   33084:	andeq	r4, r2, r5, asr #23
   33088:	andeq	r5, r2, pc, lsl #12
   3308c:	andeq	r4, r2, r9, ror pc
   33090:	andeq	r9, r3, ip, lsl #2
   33094:	andeq	sp, r0, fp, lsl #7
   33098:	push	{r4, r5, r6, r7, fp, lr}
   3309c:	add	fp, sp, #16
   330a0:	sub	sp, sp, #8
   330a4:	ldr	r6, [r0, #40]	; 0x28
   330a8:	mov	r7, r1
   330ac:	ldr	r3, [r0, #44]	; 0x2c
   330b0:	ldr	r1, [r0, #52]	; 0x34
   330b4:	mov	r4, r0
   330b8:	add	r2, r1, #16
   330bc:	cmp	r2, r3
   330c0:	bls	330f8 <__flatcc_fb_clear_parser@@Base+0x1004>
   330c4:	mov	r0, #65536	; 0x10000
   330c8:	mov	r1, #1
   330cc:	bl	148c8 <calloc@plt>
   330d0:	cmp	r0, #0
   330d4:	beq	331e4 <__flatcc_fb_clear_parser@@Base+0x10f0>
   330d8:	ldr	r1, [r4, #48]	; 0x30
   330dc:	mov	r2, r0
   330e0:	add	r3, r0, #65536	; 0x10000
   330e4:	str	r1, [r2], #32
   330e8:	add	r1, r0, #16
   330ec:	str	r3, [r4, #44]	; 0x2c
   330f0:	str	r0, [r4, #48]	; 0x30
   330f4:	str	r1, [r4, #52]	; 0x34
   330f8:	mov	r0, r4
   330fc:	str	r2, [r4, #52]	; 0x34
   33100:	str	r6, [r1, #4]
   33104:	str	r1, [r7]
   33108:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   3310c:	ldr	r5, [r4, #40]	; 0x28
   33110:	ldr	r0, [r5, #16]
   33114:	cmp	r0, #46	; 0x2e
   33118:	bne	331b0 <__flatcc_fb_clear_parser@@Base+0x10bc>
   3311c:	ldr	r6, [r7]
   33120:	mov	r0, r4
   33124:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33128:	cmp	r5, #0
   3312c:	beq	331b0 <__flatcc_fb_clear_parser@@Base+0x10bc>
   33130:	ldr	r5, [r4, #40]	; 0x28
   33134:	ldr	r0, [r5, #16]
   33138:	cmp	r0, #9
   3313c:	bne	331b8 <__flatcc_fb_clear_parser@@Base+0x10c4>
   33140:	ldr	r7, [r4, #52]	; 0x34
   33144:	ldr	r0, [r4, #44]	; 0x2c
   33148:	add	r1, r7, #16
   3314c:	cmp	r1, r0
   33150:	bls	33188 <__flatcc_fb_clear_parser@@Base+0x1094>
   33154:	mov	r0, #65536	; 0x10000
   33158:	mov	r1, #1
   3315c:	bl	148c8 <calloc@plt>
   33160:	cmp	r0, #0
   33164:	beq	331e4 <__flatcc_fb_clear_parser@@Base+0x10f0>
   33168:	ldr	r2, [r4, #48]	; 0x30
   3316c:	mov	r1, r0
   33170:	add	r7, r0, #16
   33174:	str	r2, [r1], #32
   33178:	add	r2, r0, #65536	; 0x10000
   3317c:	str	r2, [r4, #44]	; 0x2c
   33180:	str	r0, [r4, #48]	; 0x30
   33184:	str	r7, [r4, #52]	; 0x34
   33188:	mov	r0, r4
   3318c:	str	r1, [r4, #52]	; 0x34
   33190:	str	r5, [r7, #4]
   33194:	str	r7, [r6]
   33198:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   3319c:	ldr	r5, [r4, #40]	; 0x28
   331a0:	mov	r6, r7
   331a4:	ldr	r0, [r5, #16]
   331a8:	cmp	r0, #46	; 0x2e
   331ac:	beq	33120 <__flatcc_fb_clear_parser@@Base+0x102c>
   331b0:	sub	sp, fp, #16
   331b4:	pop	{r4, r5, r6, r7, fp, pc}
   331b8:	mov	r0, #0
   331bc:	mov	r1, r5
   331c0:	mov	r3, #0
   331c4:	str	r0, [sp]
   331c8:	str	r0, [sp, #4]
   331cc:	mov	r0, r4
   331d0:	ldr	r2, [pc, #60]	; 33214 <__flatcc_fb_clear_parser@@Base+0x1120>
   331d4:	add	r2, pc, r2
   331d8:	bl	2ac84 <__flatcc_error_report@@Base>
   331dc:	sub	sp, fp, #16
   331e0:	pop	{r4, r5, r6, r7, fp, pc}
   331e4:	ldr	r0, [pc, #32]	; 3320c <__flatcc_fb_clear_parser@@Base+0x1118>
   331e8:	mov	r1, #34	; 0x22
   331ec:	mov	r2, #1
   331f0:	ldr	r0, [pc, r0]
   331f4:	ldr	r3, [r0]
   331f8:	ldr	r0, [pc, #16]	; 33210 <__flatcc_fb_clear_parser@@Base+0x111c>
   331fc:	add	r0, pc, r0
   33200:	bl	1494c <fwrite@plt>
   33204:	mov	r0, #1
   33208:	bl	14994 <exit@plt>
   3320c:	andeq	r8, r3, ip, lsr #29
   33210:	andeq	sp, r0, fp, lsr #2
   33214:	andeq	r4, r2, r9, lsl #21
   33218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3321c:	add	fp, sp, #28
   33220:	sub	sp, sp, #20
   33224:	ldr	r5, [r0, #40]	; 0x28
   33228:	mov	r4, r0
   3322c:	mov	r6, #0
   33230:	ldr	r0, [r5, #16]
   33234:	cmp	r0, #40	; 0x28
   33238:	bne	3347c <__flatcc_fb_clear_parser@@Base+0x1388>
   3323c:	mov	r0, r4
   33240:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33244:	cmp	r5, #0
   33248:	beq	3347c <__flatcc_fb_clear_parser@@Base+0x1388>
   3324c:	ldr	r9, [r4, #40]	; 0x28
   33250:	mov	sl, #0
   33254:	mov	r7, #0
   33258:	ldr	r0, [r9, #16]
   3325c:	cmp	r0, #9
   33260:	bne	3340c <__flatcc_fb_clear_parser@@Base+0x1318>
   33264:	mov	r0, r4
   33268:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   3326c:	cmp	r9, #0
   33270:	mov	r7, #0
   33274:	beq	3340c <__flatcc_fb_clear_parser@@Base+0x1318>
   33278:	ldr	r8, [pc, #560]	; 334b0 <__flatcc_fb_clear_parser@@Base+0x13bc>
   3327c:	mov	r6, #0
   33280:	add	r8, pc, r8
   33284:	ldr	r7, [r4, #52]	; 0x34
   33288:	ldr	r0, [r4, #44]	; 0x2c
   3328c:	add	r1, r7, #32
   33290:	cmp	r1, r0
   33294:	bls	332cc <__flatcc_fb_clear_parser@@Base+0x11d8>
   33298:	mov	r0, #65536	; 0x10000
   3329c:	mov	r1, #1
   332a0:	bl	148c8 <calloc@plt>
   332a4:	cmp	r0, #0
   332a8:	beq	33488 <__flatcc_fb_clear_parser@@Base+0x1394>
   332ac:	ldr	r2, [r4, #48]	; 0x30
   332b0:	mov	r1, r0
   332b4:	add	r7, r0, #16
   332b8:	str	r2, [r1], #48	; 0x30
   332bc:	add	r2, r0, #65536	; 0x10000
   332c0:	str	r2, [r4, #44]	; 0x2c
   332c4:	str	r0, [r4, #48]	; 0x30
   332c8:	str	r7, [r4, #52]	; 0x34
   332cc:	str	r1, [r4, #52]	; 0x34
   332d0:	stm	r7, {r6, r9}
   332d4:	ldr	r6, [r4, #40]	; 0x28
   332d8:	ldr	r0, [r6, #16]
   332dc:	cmp	r0, #58	; 0x3a
   332e0:	bne	33308 <__flatcc_fb_clear_parser@@Base+0x1214>
   332e4:	mov	r0, r4
   332e8:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   332ec:	cmp	r6, #0
   332f0:	beq	33308 <__flatcc_fb_clear_parser@@Base+0x1214>
   332f4:	add	r1, r7, #8
   332f8:	mov	r0, r4
   332fc:	mov	r2, #1
   33300:	mov	r3, r8
   33304:	bl	334d4 <__flatcc_fb_clear_parser@@Base+0x13e0>
   33308:	ldr	r0, [r4, #108]	; 0x6c
   3330c:	cmp	r0, #9
   33310:	bgt	3335c <__flatcc_fb_clear_parser@@Base+0x1268>
   33314:	ldr	r6, [r4, #40]	; 0x28
   33318:	ldr	r0, [r6, #16]
   3331c:	cmp	r0, #44	; 0x2c
   33320:	bne	3340c <__flatcc_fb_clear_parser@@Base+0x1318>
   33324:	mov	r0, r4
   33328:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   3332c:	cmp	r6, #0
   33330:	beq	3340c <__flatcc_fb_clear_parser@@Base+0x1318>
   33334:	ldr	r9, [r4, #40]	; 0x28
   33338:	ldr	r0, [r9, #16]
   3333c:	cmp	r0, #9
   33340:	bne	33364 <__flatcc_fb_clear_parser@@Base+0x1270>
   33344:	mov	r0, r4
   33348:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   3334c:	cmp	r9, #0
   33350:	mov	r6, r7
   33354:	bne	33284 <__flatcc_fb_clear_parser@@Base+0x1190>
   33358:	b	3340c <__flatcc_fb_clear_parser@@Base+0x1318>
   3335c:	mov	r6, r7
   33360:	b	3347c <__flatcc_fb_clear_parser@@Base+0x1388>
   33364:	cmp	r9, #0
   33368:	beq	333b8 <__flatcc_fb_clear_parser@@Base+0x12c4>
   3336c:	ldr	r3, [r9]
   33370:	ldr	r0, [r9, #4]
   33374:	ldr	r2, [pc, #312]	; 334b4 <__flatcc_fb_clear_parser@@Base+0x13c0>
   33378:	cmp	r3, #0
   3337c:	add	r2, pc, r2
   33380:	mov	r1, r3
   33384:	moveq	r0, r3
   33388:	moveq	r1, r2
   3338c:	mov	r3, r4
   33390:	ldr	r6, [r3, #20]
   33394:	cmp	r6, r9
   33398:	bhi	333a8 <__flatcc_fb_clear_parser@@Base+0x12b4>
   3339c:	ldr	r6, [r3, #24]
   333a0:	cmp	r6, r9
   333a4:	bhi	333d4 <__flatcc_fb_clear_parser@@Base+0x12e0>
   333a8:	ldr	r3, [r3]
   333ac:	cmp	r3, #0
   333b0:	bne	33390 <__flatcc_fb_clear_parser@@Base+0x129c>
   333b4:	b	333d8 <__flatcc_fb_clear_parser@@Base+0x12e4>
   333b8:	ldr	r1, [pc, #256]	; 334c0 <__flatcc_fb_clear_parser@@Base+0x13cc>
   333bc:	ldr	r2, [pc, #256]	; 334c4 <__flatcc_fb_clear_parser@@Base+0x13d0>
   333c0:	mov	r0, r4
   333c4:	add	r1, pc, r1
   333c8:	add	r2, pc, r2
   333cc:	bl	2abbc <__flatcc_fb_print_error@@Base>
   333d0:	b	33400 <__flatcc_fb_clear_parser@@Base+0x130c>
   333d4:	ldr	r2, [r3, #520]	; 0x208
   333d8:	ldr	r3, [r9, #8]
   333dc:	ldr	r6, [r9, #12]
   333e0:	ldr	ip, [pc, #208]	; 334b8 <__flatcc_fb_clear_parser@@Base+0x13c4>
   333e4:	add	ip, pc, ip
   333e8:	str	r6, [sp]
   333ec:	stmib	sp, {r0, r1, ip}
   333f0:	mov	r0, r4
   333f4:	ldr	r1, [pc, #192]	; 334bc <__flatcc_fb_clear_parser@@Base+0x13c8>
   333f8:	add	r1, pc, r1
   333fc:	bl	2abbc <__flatcc_fb_print_error@@Base>
   33400:	ldr	r0, [r4, #108]	; 0x6c
   33404:	add	r0, r0, #1
   33408:	str	r0, [r4, #108]	; 0x6c
   3340c:	str	sl, [r4, #36]	; 0x24
   33410:	ldr	r1, [r4, #40]	; 0x28
   33414:	ldr	r0, [r1, #16]
   33418:	cmp	r0, #41	; 0x29
   3341c:	bne	33450 <__flatcc_fb_clear_parser@@Base+0x135c>
   33420:	mov	r0, r4
   33424:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33428:	cmp	r7, #0
   3342c:	beq	33478 <__flatcc_fb_clear_parser@@Base+0x1384>
   33430:	mov	r0, #0
   33434:	mov	r6, r7
   33438:	ldr	r7, [r7]
   3343c:	str	r0, [r6]
   33440:	mov	r0, r6
   33444:	cmp	r7, #0
   33448:	bne	33434 <__flatcc_fb_clear_parser@@Base+0x1340>
   3344c:	b	3347c <__flatcc_fb_clear_parser@@Base+0x1388>
   33450:	mov	r0, #0
   33454:	mov	r3, r5
   33458:	str	r0, [sp]
   3345c:	str	r0, [sp, #4]
   33460:	mov	r0, r4
   33464:	ldr	r2, [pc, #92]	; 334c8 <__flatcc_fb_clear_parser@@Base+0x13d4>
   33468:	add	r2, pc, r2
   3346c:	bl	2ac84 <__flatcc_error_report@@Base>
   33470:	cmp	r7, #0
   33474:	bne	33430 <__flatcc_fb_clear_parser@@Base+0x133c>
   33478:	mov	r6, #0
   3347c:	mov	r0, r6
   33480:	sub	sp, fp, #28
   33484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33488:	ldr	r0, [pc, #60]	; 334cc <__flatcc_fb_clear_parser@@Base+0x13d8>
   3348c:	mov	r1, #34	; 0x22
   33490:	mov	r2, #1
   33494:	ldr	r0, [pc, r0]
   33498:	ldr	r3, [r0]
   3349c:	ldr	r0, [pc, #44]	; 334d0 <__flatcc_fb_clear_parser@@Base+0x13dc>
   334a0:	add	r0, pc, r0
   334a4:	bl	1494c <fwrite@plt>
   334a8:	mov	r0, #1
   334ac:	bl	14994 <exit@plt>
   334b0:	ldrdeq	r4, [r2], -lr
   334b4:	andeq	sp, r0, r2, lsl #9
   334b8:	muleq	r2, sl, sl
   334bc:	ldrdeq	r4, [r2], -pc	; <UNPREDICTABLE>
   334c0:	andeq	r4, r2, r5, ror #6
   334c4:			; <UNDEFINED> instruction: 0x00024ab6
   334c8:	andeq	r4, r2, r3, asr #20
   334cc:	andeq	r8, r3, r8, lsl #24
   334d0:	andeq	ip, r0, r7, lsl #29
   334d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   334d8:	add	fp, sp, #28
   334dc:	sub	sp, sp, #36	; 0x24
   334e0:	ldr	r9, [r0, #40]	; 0x28
   334e4:	mov	r4, r0
   334e8:	mov	r7, r3
   334ec:	mov	r6, r2
   334f0:	mov	r8, r1
   334f4:	ldr	r0, [r9, #16]
   334f8:	cmp	r0, #45	; 0x2d
   334fc:	bne	33514 <__flatcc_fb_clear_parser@@Base+0x1420>
   33500:	mov	r0, r4
   33504:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33508:	ldr	r5, [r4, #40]	; 0x28
   3350c:	ldr	r0, [r5, #16]
   33510:	b	3351c <__flatcc_fb_clear_parser@@Base+0x1428>
   33514:	mov	r5, r9
   33518:	mov	r9, #0
   3351c:	sub	r1, r0, #9
   33520:	cmp	r1, #10
   33524:	bhi	3359c <__flatcc_fb_clear_parser@@Base+0x14a8>
   33528:	add	r0, pc, #4
   3352c:	ldr	r1, [r0, r1, lsl #2]
   33530:	add	pc, r0, r1
   33534:	andeq	r0, r0, ip, lsr #32
   33538:	muleq	r0, r0, r0
   3353c:	andeq	r0, r0, r4, lsr r1
   33540:	ldrdeq	r0, [r0], -r4
   33544:	ldrdeq	r0, [r0], -r4
   33548:	andeq	r0, r0, r8, lsr #3
   3354c:	ldrdeq	r0, [r0], -r4
   33550:	ldrdeq	r0, [r0], -r4
   33554:	ldrdeq	r0, [r0], -r4
   33558:	ldrdeq	r0, [r0], -r4
   3355c:			; <UNDEFINED> instruction: 0x000002b0
   33560:	mov	r0, r4
   33564:	mov	r1, r8
   33568:	bl	33098 <__flatcc_fb_clear_parser@@Base+0xfa4>
   3356c:	mov	r0, #13
   33570:	cmp	r9, #0
   33574:	strh	r0, [r8, #8]
   33578:	beq	3387c <__flatcc_fb_clear_parser@@Base+0x1788>
   3357c:	mov	r0, #1
   33580:	strh	r0, [r8, #8]
   33584:	mov	r0, #0
   33588:	str	r0, [sp]
   3358c:	str	r0, [sp, #4]
   33590:	ldr	r2, [pc, #1388]	; 33b04 <__flatcc_fb_clear_parser@@Base+0x1a10>
   33594:	add	r2, pc, r2
   33598:	b	33864 <__flatcc_fb_clear_parser@@Base+0x1770>
   3359c:	cmn	r0, #988	; 0x3dc
   335a0:	beq	33824 <__flatcc_fb_clear_parser@@Base+0x1730>
   335a4:	movw	r1, #64550	; 0xfc26
   335a8:	movt	r1, #65535	; 0xffff
   335ac:	cmp	r0, r1
   335b0:	bne	33808 <__flatcc_fb_clear_parser@@Base+0x1714>
   335b4:	mov	r0, #6
   335b8:	strh	r0, [r8, #8]
   335bc:	mov	r0, #0
   335c0:	b	33830 <__flatcc_fb_clear_parser@@Base+0x173c>
   335c4:	mov	r0, #5
   335c8:	strh	r0, [r8, #8]
   335cc:	ldr	ip, [r5, #4]
   335d0:	cmp	ip, #0
   335d4:	beq	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   335d8:	ldr	lr, [r5]
   335dc:	ldrb	r0, [lr]
   335e0:	str	r0, [sp, #28]
   335e4:	sub	r0, r0, #45	; 0x2d
   335e8:	clz	r0, r0
   335ec:	lsr	r1, r0, #5
   335f0:	cmp	ip, r1
   335f4:	beq	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   335f8:	add	r0, lr, ip
   335fc:	mov	r2, #0
   33600:	mov	r7, #0
   33604:	str	r0, [sp, #20]
   33608:	add	r0, lr, r1
   3360c:	str	r0, [sp, #24]
   33610:	mov	r0, #10
   33614:	ldrb	r3, [lr, r1]
   33618:	sub	r6, r3, #48	; 0x30
   3361c:	uxtb	r6, r6
   33620:	cmp	r6, #9
   33624:	bhi	338fc <__flatcc_fb_clear_parser@@Base+0x1808>
   33628:	add	r6, r7, r7, lsl #2
   3362c:	lsl	sl, r6, #1
   33630:	umlal	r3, sl, r2, r0
   33634:	subs	r6, r3, #48	; 0x30
   33638:	sbc	r3, sl, #0
   3363c:	subs	r2, r6, r2
   33640:	sbcs	r2, r3, r7
   33644:	bcc	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   33648:	add	r1, r1, #1
   3364c:	mov	r2, r6
   33650:	mov	r7, r3
   33654:	cmp	ip, r1
   33658:	bne	33614 <__flatcc_fb_clear_parser@@Base+0x1520>
   3365c:	ldr	r1, [sp, #20]
   33660:	mov	r0, #0
   33664:	b	3390c <__flatcc_fb_clear_parser@@Base+0x1818>
   33668:	mov	r0, #3
   3366c:	add	r1, sp, #32
   33670:	strh	r0, [r8, #8]
   33674:	ldr	r0, [r5]
   33678:	bl	149e8 <strtod@plt>
   3367c:	vstr	d0, [r8]
   33680:	ldm	r5, {r0, r1}
   33684:	ldr	r3, [sp, #32]
   33688:	add	r2, r0, r1
   3368c:	cmp	r3, r2
   33690:	beq	33884 <__flatcc_fb_clear_parser@@Base+0x1790>
   33694:	mov	r2, #1
   33698:	cmp	r0, #0
   3369c:	mov	r3, r4
   336a0:	strh	r2, [r8, #8]
   336a4:	moveq	r1, r0
   336a8:	ldr	r2, [pc, #1084]	; 33aec <__flatcc_fb_clear_parser@@Base+0x19f8>
   336ac:	add	r2, pc, r2
   336b0:	moveq	r0, r2
   336b4:	ldr	r7, [r3, #20]
   336b8:	cmp	r7, r5
   336bc:	bhi	336cc <__flatcc_fb_clear_parser@@Base+0x15d8>
   336c0:	ldr	r7, [r3, #24]
   336c4:	cmp	r7, r5
   336c8:	bhi	338cc <__flatcc_fb_clear_parser@@Base+0x17d8>
   336cc:	ldr	r3, [r3]
   336d0:	cmp	r3, #0
   336d4:	bne	336b4 <__flatcc_fb_clear_parser@@Base+0x15c0>
   336d8:	b	338d0 <__flatcc_fb_clear_parser@@Base+0x17dc>
   336dc:	mov	r0, #5
   336e0:	strh	r0, [r8, #8]
   336e4:	ldr	r1, [r5, #4]
   336e8:	cmp	r1, #0
   336ec:	beq	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   336f0:	ldr	r0, [r5]
   336f4:	ldrb	ip, [r0]
   336f8:	add	r1, r0, r1
   336fc:	sub	r2, ip, #45	; 0x2d
   33700:	clz	r2, r2
   33704:	lsr	r2, r2, #5
   33708:	add	r6, r0, r2
   3370c:	sub	r3, r1, r6
   33710:	cmp	r3, #2
   33714:	blt	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   33718:	ldrb	r3, [r6]
   3371c:	cmp	r3, #48	; 0x30
   33720:	bne	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   33724:	ldrb	r3, [r6, #1]
   33728:	orr	r3, r3, #32
   3372c:	cmp	r3, #120	; 0x78
   33730:	bne	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   33734:	add	r3, r6, #2
   33738:	sub	r7, r1, r3
   3373c:	cmp	r7, #16
   33740:	mov	r7, r1
   33744:	addgt	r7, r6, #18
   33748:	cmp	r3, r7
   3374c:	beq	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   33750:	rsb	r2, r2, #0
   33754:	str	r1, [sp, #24]
   33758:	str	ip, [sp, #28]
   3375c:	str	r7, [sp, #20]
   33760:	mov	r3, #0
   33764:	sub	r0, r2, r0
   33768:	mov	r2, #0
   3376c:	add	r0, r7, r0
   33770:	mov	r7, #2
   33774:	ldrb	lr, [r6, r7]
   33778:	mvn	r1, #86	; 0x56
   3377c:	adds	sl, r1, #39	; 0x27
   33780:	mvn	r1, #0
   33784:	adc	ip, r1, #0
   33788:	sub	r1, lr, #48	; 0x30
   3378c:	uxtb	r1, r1
   33790:	cmp	r1, #10
   33794:	bcc	337b4 <__flatcc_fb_clear_parser@@Base+0x16c0>
   33798:	orr	lr, lr, #32
   3379c:	mvn	sl, #86	; 0x56
   337a0:	mvn	ip, #0
   337a4:	sub	r1, lr, #97	; 0x61
   337a8:	uxtb	r1, r1
   337ac:	cmp	r1, #5
   337b0:	bhi	339b8 <__flatcc_fb_clear_parser@@Base+0x18c4>
   337b4:	lsl	r1, r3, #4
   337b8:	add	r7, r7, #1
   337bc:	orr	r1, r1, r2, lsr #28
   337c0:	adds	r2, sl, r2, lsl #4
   337c4:	adc	r1, r1, ip
   337c8:	adds	r2, r2, lr
   337cc:	adc	r3, r1, #0
   337d0:	cmp	r0, r7
   337d4:	bne	33774 <__flatcc_fb_clear_parser@@Base+0x1680>
   337d8:	ldr	r1, [sp, #20]
   337dc:	mov	r6, #1
   337e0:	b	339c0 <__flatcc_fb_clear_parser@@Base+0x18cc>
   337e4:	mov	r0, r4
   337e8:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   337ec:	mov	r0, r4
   337f0:	mov	r1, r8
   337f4:	bl	32218 <__flatcc_fb_clear_parser@@Base+0x124>
   337f8:	tst	r6, #1
   337fc:	bne	33840 <__flatcc_fb_clear_parser@@Base+0x174c>
   33800:	mov	r0, #1
   33804:	strh	r0, [r8, #8]
   33808:	mov	r0, #0
   3380c:	mov	r1, r5
   33810:	mov	r2, r7
   33814:	str	r0, [sp]
   33818:	str	r0, [sp, #4]
   3381c:	mov	r0, r4
   33820:	b	3386c <__flatcc_fb_clear_parser@@Base+0x1778>
   33824:	mov	r0, #6
   33828:	strh	r0, [r8, #8]
   3382c:	mov	r0, #1
   33830:	strb	r0, [r8]
   33834:	cmp	r9, #0
   33838:	bne	33a74 <__flatcc_fb_clear_parser@@Base+0x1980>
   3383c:	b	33aac <__flatcc_fb_clear_parser@@Base+0x19b8>
   33840:	cmp	r9, #0
   33844:	beq	3387c <__flatcc_fb_clear_parser@@Base+0x1788>
   33848:	mov	r0, #1
   3384c:	strh	r0, [r8, #8]
   33850:	mov	r0, #0
   33854:	str	r0, [sp]
   33858:	str	r0, [sp, #4]
   3385c:	ldr	r2, [pc, #668]	; 33b00 <__flatcc_fb_clear_parser@@Base+0x1a0c>
   33860:	add	r2, pc, r2
   33864:	mov	r0, r4
   33868:	mov	r1, r5
   3386c:	mov	r3, #0
   33870:	bl	2ac84 <__flatcc_error_report@@Base>
   33874:	sub	sp, fp, #28
   33878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3387c:	sub	sp, fp, #28
   33880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33884:	ldrb	r2, [r0]
   33888:	cmp	r2, #46	; 0x2e
   3388c:	bne	338e4 <__flatcc_fb_clear_parser@@Base+0x17f0>
   33890:	mov	r2, #1
   33894:	mov	r3, r4
   33898:	strh	r2, [r8, #8]
   3389c:	ldr	r2, [pc, #596]	; 33af8 <__flatcc_fb_clear_parser@@Base+0x1a04>
   338a0:	add	r2, pc, r2
   338a4:	ldr	r7, [r3, #20]
   338a8:	cmp	r7, r5
   338ac:	bhi	338bc <__flatcc_fb_clear_parser@@Base+0x17c8>
   338b0:	ldr	r7, [r3, #24]
   338b4:	cmp	r7, r5
   338b8:	bhi	3396c <__flatcc_fb_clear_parser@@Base+0x1878>
   338bc:	ldr	r3, [r3]
   338c0:	cmp	r3, #0
   338c4:	bne	338a4 <__flatcc_fb_clear_parser@@Base+0x17b0>
   338c8:	b	33970 <__flatcc_fb_clear_parser@@Base+0x187c>
   338cc:	ldr	r2, [r3, #520]	; 0x208
   338d0:	ldr	r3, [r5, #8]
   338d4:	ldr	r7, [r5, #12]
   338d8:	ldr	r6, [pc, #528]	; 33af0 <__flatcc_fb_clear_parser@@Base+0x19fc>
   338dc:	add	r6, pc, r6
   338e0:	b	33980 <__flatcc_fb_clear_parser@@Base+0x188c>
   338e4:	cmp	r9, #0
   338e8:	vnegne.f64	d16, d0
   338ec:	vstrne	d16, [r8]
   338f0:	cmp	r9, #0
   338f4:	bne	33a74 <__flatcc_fb_clear_parser@@Base+0x1980>
   338f8:	b	33aac <__flatcc_fb_clear_parser@@Base+0x19b8>
   338fc:	add	r1, lr, r1
   33900:	mov	r0, #1
   33904:	mov	r6, r2
   33908:	mov	r3, r7
   3390c:	cmp	r1, lr
   33910:	movne	r2, r1
   33914:	ldrne	r1, [sp, #24]
   33918:	cmpne	r2, r1
   3391c:	bne	33940 <__flatcc_fb_clear_parser@@Base+0x184c>
   33920:	mov	r0, #1
   33924:	strh	r0, [r8, #8]
   33928:	mov	r0, #0
   3392c:	str	r0, [sp]
   33930:	str	r0, [sp, #4]
   33934:	ldr	r2, [pc, #428]	; 33ae8 <__flatcc_fb_clear_parser@@Base+0x19f4>
   33938:	add	r2, pc, r2
   3393c:	b	33a44 <__flatcc_fb_clear_parser@@Base+0x1950>
   33940:	cmp	r0, #0
   33944:	beq	33acc <__flatcc_fb_clear_parser@@Base+0x19d8>
   33948:	ldrb	r0, [r2]
   3394c:	cmp	r0, #79	; 0x4f
   33950:	ble	33abc <__flatcc_fb_clear_parser@@Base+0x19c8>
   33954:	cmp	r0, #80	; 0x50
   33958:	beq	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   3395c:	cmp	r0, #101	; 0x65
   33960:	cmpne	r0, #112	; 0x70
   33964:	beq	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   33968:	b	33acc <__flatcc_fb_clear_parser@@Base+0x19d8>
   3396c:	ldr	r2, [r3, #520]	; 0x208
   33970:	ldr	r3, [r5, #8]
   33974:	ldr	r7, [r5, #12]
   33978:	ldr	r6, [pc, #380]	; 33afc <__flatcc_fb_clear_parser@@Base+0x1a08>
   3397c:	add	r6, pc, r6
   33980:	str	r0, [sp, #8]
   33984:	str	r7, [sp]
   33988:	str	r1, [sp, #4]
   3398c:	str	r6, [sp, #12]
   33990:	mov	r0, r4
   33994:	ldr	r1, [pc, #344]	; 33af4 <__flatcc_fb_clear_parser@@Base+0x1a00>
   33998:	add	r1, pc, r1
   3399c:	bl	2abbc <__flatcc_fb_print_error@@Base>
   339a0:	ldr	r0, [r4, #108]	; 0x6c
   339a4:	add	r0, r0, #1
   339a8:	str	r0, [r4, #108]	; 0x6c
   339ac:	cmp	r9, #0
   339b0:	bne	33a74 <__flatcc_fb_clear_parser@@Base+0x1980>
   339b4:	b	33aac <__flatcc_fb_clear_parser@@Base+0x19b8>
   339b8:	add	r1, r6, r7
   339bc:	mov	r6, #0
   339c0:	cmp	r7, #2
   339c4:	ldr	r7, [sp, #28]
   339c8:	ldr	r0, [sp, #24]
   339cc:	beq	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   339d0:	cmp	r1, r0
   339d4:	beq	33a1c <__flatcc_fb_clear_parser@@Base+0x1928>
   339d8:	ldrb	r0, [r1]
   339dc:	cmp	r6, #0
   339e0:	beq	33a08 <__flatcc_fb_clear_parser@@Base+0x1914>
   339e4:	sub	r1, r0, #48	; 0x30
   339e8:	uxtb	r1, r1
   339ec:	cmp	r1, #10
   339f0:	bcc	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   339f4:	orr	r0, r0, #32
   339f8:	sub	r1, r0, #97	; 0x61
   339fc:	uxtb	r1, r1
   33a00:	cmp	r1, #6
   33a04:	bcc	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   33a08:	cmp	r0, #46	; 0x2e
   33a0c:	beq	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   33a10:	cmp	r0, #80	; 0x50
   33a14:	cmpne	r0, #112	; 0x70
   33a18:	beq	33a28 <__flatcc_fb_clear_parser@@Base+0x1934>
   33a1c:	cmp	r7, #45	; 0x2d
   33a20:	strd	r2, [r8]
   33a24:	bne	33a54 <__flatcc_fb_clear_parser@@Base+0x1960>
   33a28:	mov	r0, #1
   33a2c:	strh	r0, [r8, #8]
   33a30:	mov	r0, #0
   33a34:	str	r0, [sp]
   33a38:	str	r0, [sp, #4]
   33a3c:	ldr	r2, [pc, #160]	; 33ae4 <__flatcc_fb_clear_parser@@Base+0x19f0>
   33a40:	add	r2, pc, r2
   33a44:	mov	r0, r4
   33a48:	mov	r1, r5
   33a4c:	mov	r3, #0
   33a50:	bl	2ac84 <__flatcc_error_report@@Base>
   33a54:	cmp	r9, #0
   33a58:	beq	33aac <__flatcc_fb_clear_parser@@Base+0x19b8>
   33a5c:	mov	r0, #4
   33a60:	strh	r0, [r8, #8]
   33a64:	ldrd	r0, [r8]
   33a68:	rsbs	r0, r0, #0
   33a6c:	rsc	r1, r1, #0
   33a70:	strd	r0, [r8]
   33a74:	ldrh	r0, [r8, #8]
   33a78:	cmp	r0, #6
   33a7c:	bne	33aac <__flatcc_fb_clear_parser@@Base+0x19b8>
   33a80:	mov	r0, #1
   33a84:	mov	r1, r5
   33a88:	mov	r3, #0
   33a8c:	strh	r0, [r8, #8]
   33a90:	mov	r0, #0
   33a94:	str	r0, [sp]
   33a98:	str	r0, [sp, #4]
   33a9c:	mov	r0, r4
   33aa0:	ldr	r2, [pc, #96]	; 33b08 <__flatcc_fb_clear_parser@@Base+0x1a14>
   33aa4:	add	r2, pc, r2
   33aa8:	bl	2ac84 <__flatcc_error_report@@Base>
   33aac:	mov	r0, r4
   33ab0:	sub	sp, fp, #28
   33ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33ab8:	b	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33abc:	cmp	r0, #46	; 0x2e
   33ac0:	beq	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   33ac4:	cmp	r0, #69	; 0x45
   33ac8:	beq	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   33acc:	str	r6, [r8]
   33ad0:	str	r3, [r8, #4]
   33ad4:	ldr	r0, [sp, #28]
   33ad8:	cmp	r0, #45	; 0x2d
   33adc:	beq	33920 <__flatcc_fb_clear_parser@@Base+0x182c>
   33ae0:	b	33a54 <__flatcc_fb_clear_parser@@Base+0x1960>
   33ae4:	andeq	r4, r2, sp, ror #9
   33ae8:	andeq	r4, r2, r0, lsl r6
   33aec:	andeq	sp, r0, r2, asr r1
   33af0:	andeq	r4, r2, r3, lsl #13
   33af4:	andeq	r3, r2, pc, lsr sp
   33af8:	andeq	ip, r0, lr, asr pc
   33afc:	strdeq	r4, [r2], -r8
   33b00:	andeq	r4, r2, sl, ror #12
   33b04:	andeq	r4, r2, r8, asr r9
   33b08:	andeq	r4, r2, r6, ror #8
   33b0c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33b10:	add	fp, sp, #24
   33b14:	sub	sp, sp, #8
   33b18:	ldr	r8, [r0, #40]	; 0x28
   33b1c:	mov	r4, r0
   33b20:	mov	r0, #1
   33b24:	mov	r6, r1
   33b28:	mov	r7, #0
   33b2c:	strh	r0, [r1, #8]
   33b30:	ldr	r0, [r8, #16]
   33b34:	cmp	r0, #91	; 0x5b
   33b38:	bne	33b94 <__flatcc_fb_clear_parser@@Base+0x1aa0>
   33b3c:	mov	r7, #0
   33b40:	mov	r5, r8
   33b44:	mov	r0, r4
   33b48:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33b4c:	cmp	r5, #0
   33b50:	beq	33b68 <__flatcc_fb_clear_parser@@Base+0x1a74>
   33b54:	ldr	r5, [r4, #40]	; 0x28
   33b58:	add	r7, r7, #1
   33b5c:	ldr	r0, [r5, #16]
   33b60:	cmp	r0, #91	; 0x5b
   33b64:	beq	33b44 <__flatcc_fb_clear_parser@@Base+0x1a50>
   33b68:	cmp	r7, #2
   33b6c:	bcc	33b94 <__flatcc_fb_clear_parser@@Base+0x1aa0>
   33b70:	mov	r0, #0
   33b74:	mov	r1, r8
   33b78:	mov	r3, #0
   33b7c:	str	r0, [sp]
   33b80:	str	r0, [sp, #4]
   33b84:	mov	r0, r4
   33b88:	ldr	r2, [pc, #420]	; 33d34 <__flatcc_fb_clear_parser@@Base+0x1c40>
   33b8c:	add	r2, pc, r2
   33b90:	bl	2ac84 <__flatcc_error_report@@Base>
   33b94:	ldr	r1, [r4, #40]	; 0x28
   33b98:	movw	r2, #999	; 0x3e7
   33b9c:	ldr	r0, [r1, #16]
   33ba0:	add	r2, r0, r2
   33ba4:	cmp	r2, #27
   33ba8:	bhi	33cc4 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   33bac:	movw	r5, #55291	; 0xd7fb
   33bb0:	mov	r3, #1
   33bb4:	movt	r5, #2430	; 0x97e
   33bb8:	tst	r5, r3, lsl r2
   33bbc:	beq	33ca8 <__flatcc_fb_clear_parser@@Base+0x1bb4>
   33bc0:	mov	r0, #7
   33bc4:	cmp	r7, #0
   33bc8:	str	r1, [r6]
   33bcc:	movweq	r0, #8
   33bd0:	strh	r0, [r6, #8]
   33bd4:	mov	r0, r4
   33bd8:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33bdc:	rsb	r6, r7, #0
   33be0:	ldr	r5, [r4, #40]	; 0x28
   33be4:	ldr	r0, [r5, #16]
   33be8:	cmp	r0, #93	; 0x5d
   33bec:	bne	33c10 <__flatcc_fb_clear_parser@@Base+0x1b1c>
   33bf0:	mov	r0, r4
   33bf4:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33bf8:	cmp	r5, #0
   33bfc:	beq	33c10 <__flatcc_fb_clear_parser@@Base+0x1b1c>
   33c00:	add	r6, r6, #1
   33c04:	cmp	r6, #1
   33c08:	bne	33be0 <__flatcc_fb_clear_parser@@Base+0x1aec>
   33c0c:	b	33c18 <__flatcc_fb_clear_parser@@Base+0x1b24>
   33c10:	cmp	r6, #0
   33c14:	beq	33c3c <__flatcc_fb_clear_parser@@Base+0x1b48>
   33c18:	mov	r0, #0
   33c1c:	mov	r1, #0
   33c20:	mov	r3, r8
   33c24:	str	r0, [sp]
   33c28:	str	r0, [sp, #4]
   33c2c:	mov	r0, r4
   33c30:	ldr	r2, [pc, #264]	; 33d40 <__flatcc_fb_clear_parser@@Base+0x1c4c>
   33c34:	add	r2, pc, r2
   33c38:	bl	2ac84 <__flatcc_error_report@@Base>
   33c3c:	ldr	r6, [r4, #40]	; 0x28
   33c40:	ldr	r0, [r6, #16]
   33c44:	cmp	r0, #93	; 0x5d
   33c48:	bne	33ca0 <__flatcc_fb_clear_parser@@Base+0x1bac>
   33c4c:	mov	r0, r4
   33c50:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33c54:	cmp	r6, #0
   33c58:	beq	33ca0 <__flatcc_fb_clear_parser@@Base+0x1bac>
   33c5c:	mov	r0, #0
   33c60:	mov	r1, r6
   33c64:	mov	r3, r8
   33c68:	str	r0, [sp]
   33c6c:	str	r0, [sp, #4]
   33c70:	mov	r0, r4
   33c74:	ldr	r2, [pc, #200]	; 33d44 <__flatcc_fb_clear_parser@@Base+0x1c50>
   33c78:	add	r2, pc, r2
   33c7c:	bl	2ac84 <__flatcc_error_report@@Base>
   33c80:	ldr	r5, [r4, #40]	; 0x28
   33c84:	ldr	r0, [r5, #16]
   33c88:	cmp	r0, #93	; 0x5d
   33c8c:	bne	33ca0 <__flatcc_fb_clear_parser@@Base+0x1bac>
   33c90:	mov	r0, r4
   33c94:	bl	31fe0 <__flatcc_fb_parse@@Base+0x6d10>
   33c98:	cmp	r5, #0
   33c9c:	bne	33c80 <__flatcc_fb_clear_parser@@Base+0x1b8c>
   33ca0:	sub	sp, fp, #24
   33ca4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33ca8:	cmp	r2, #25
   33cac:	bne	33cc4 <__flatcc_fb_clear_parser@@Base+0x1bd0>
   33cb0:	mov	r0, #9
   33cb4:	cmp	r7, #0
   33cb8:	str	r1, [r6]
   33cbc:	movweq	r0, #10
   33cc0:	b	33bd0 <__flatcc_fb_clear_parser@@Base+0x1adc>
   33cc4:	cmp	r0, #9
   33cc8:	beq	33cec <__flatcc_fb_clear_parser@@Base+0x1bf8>
   33ccc:	cmp	r0, #93	; 0x5d
   33cd0:	bne	33d0c <__flatcc_fb_clear_parser@@Base+0x1c18>
   33cd4:	mov	r0, #0
   33cd8:	str	r0, [sp]
   33cdc:	str	r0, [sp, #4]
   33ce0:	ldr	r2, [pc, #80]	; 33d38 <__flatcc_fb_clear_parser@@Base+0x1c44>
   33ce4:	add	r2, pc, r2
   33ce8:	b	33d20 <__flatcc_fb_clear_parser@@Base+0x1c2c>
   33cec:	mov	r0, r4
   33cf0:	mov	r1, r6
   33cf4:	bl	33098 <__flatcc_fb_clear_parser@@Base+0xfa4>
   33cf8:	mov	r0, #11
   33cfc:	cmp	r7, #0
   33d00:	movweq	r0, #12
   33d04:	strh	r0, [r6, #8]
   33d08:	b	33bdc <__flatcc_fb_clear_parser@@Base+0x1ae8>
   33d0c:	mov	r0, #0
   33d10:	str	r0, [sp]
   33d14:	str	r0, [sp, #4]
   33d18:	ldr	r2, [pc, #28]	; 33d3c <__flatcc_fb_clear_parser@@Base+0x1c48>
   33d1c:	add	r2, pc, r2
   33d20:	mov	r0, r4
   33d24:	mov	r1, #0
   33d28:	mov	r3, #0
   33d2c:	bl	2ac84 <__flatcc_error_report@@Base>
   33d30:	b	33bdc <__flatcc_fb_clear_parser@@Base+0x1ae8>
   33d34:	strdeq	r4, [r2], -r2
   33d38:	andeq	r4, r2, r2, asr #7
   33d3c:	andeq	r4, r2, r6, lsr #7
   33d40:	andeq	r4, r2, r5, lsr #9
   33d44:	andeq	r4, r2, r2, lsl #9

00033d48 <__flatcc_fb_build_schema@@Base>:
   33d48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   33d4c:	add	fp, sp, #28
   33d50:	sub	sp, sp, #220	; 0xdc
   33d54:	mov	r9, r0
   33d58:	add	r0, r0, #524	; 0x20c
   33d5c:	add	r8, r9, #352	; 0x160
   33d60:	str	r0, [sp, #16]
   33d64:	mov	r1, r8
   33d68:	bl	284dc <ptr_set_find_item@@Base>
   33d6c:	cmp	r0, #0
   33d70:	beq	35bc4 <__flatcc_fb_build_schema@@Base+0x1e7c>
   33d74:	ldr	r6, [r9, #392]	; 0x188
   33d78:	cmp	r6, #0
   33d7c:	beq	33e84 <__flatcc_fb_build_schema@@Base+0x13c>
   33d80:	movw	r7, #403	; 0x193
   33d84:	movw	sl, #40389	; 0x9dc5
   33d88:	movt	r7, #256	; 0x100
   33d8c:	movt	sl, #33052	; 0x811c
   33d90:	ldrh	r0, [r6, #8]
   33d94:	cmp	r0, #4
   33d98:	bhi	33e78 <__flatcc_fb_build_schema@@Base+0x130>
   33d9c:	ldr	r0, [r6, #12]
   33da0:	mov	r1, sl
   33da4:	cmp	r0, #0
   33da8:	beq	33dfc <__flatcc_fb_build_schema@@Base+0xb4>
   33dac:	ldr	r2, [r0]
   33db0:	mov	r1, sl
   33db4:	cmp	r2, #0
   33db8:	beq	33dfc <__flatcc_fb_build_schema@@Base+0xb4>
   33dbc:	mov	r1, sl
   33dc0:	ldr	r4, [r2, #4]
   33dc4:	ldr	r3, [r4, #4]
   33dc8:	cmp	r3, #0
   33dcc:	beq	33de8 <__flatcc_fb_build_schema@@Base+0xa0>
   33dd0:	ldr	r4, [r4]
   33dd4:	ldrb	r5, [r4], #1
   33dd8:	subs	r3, r3, #1
   33ddc:	eor	r1, r1, r5
   33de0:	mul	r1, r1, r7
   33de4:	bne	33dd4 <__flatcc_fb_build_schema@@Base+0x8c>
   33de8:	ldr	r2, [r2]
   33dec:	eor	r1, r1, #46	; 0x2e
   33df0:	mul	r1, r1, r7
   33df4:	cmp	r2, #0
   33df8:	bne	33dc0 <__flatcc_fb_build_schema@@Base+0x78>
   33dfc:	ldr	r3, [r6, #4]
   33e00:	ldr	r2, [r3, #4]
   33e04:	cmp	r2, #0
   33e08:	beq	33e24 <__flatcc_fb_build_schema@@Base+0xdc>
   33e0c:	ldr	r3, [r3]
   33e10:	ldrb	r5, [r3], #1
   33e14:	subs	r2, r2, #1
   33e18:	eor	r1, r1, r5
   33e1c:	mul	r1, r1, r7
   33e20:	bne	33e10 <__flatcc_fb_build_schema@@Base+0xc8>
   33e24:	cmp	r1, #0
   33e28:	str	r8, [r6, #16]
   33e2c:	moveq	r1, sl
   33e30:	cmp	r0, #0
   33e34:	str	r1, [r6, #88]	; 0x58
   33e38:	beq	33e78 <__flatcc_fb_build_schema@@Base+0x130>
   33e3c:	add	r0, r0, #4
   33e40:	mov	r1, r6
   33e44:	mov	r2, #1
   33e48:	bl	28b28 <fb_symbol_table_insert_item@@Base>
   33e4c:	cmp	r0, #0
   33e50:	beq	33e78 <__flatcc_fb_build_schema@@Base+0x130>
   33e54:	ldr	r3, [r0, #4]
   33e58:	mov	r0, #0
   33e5c:	ldr	r1, [r6, #4]
   33e60:	str	r0, [sp]
   33e64:	str	r0, [sp, #4]
   33e68:	mov	r0, r9
   33e6c:	ldr	r2, [pc, #4008]	; 34e1c <__flatcc_fb_build_schema@@Base+0x10d4>
   33e70:	add	r2, pc, r2
   33e74:	bl	2ac84 <__flatcc_error_report@@Base>
   33e78:	ldr	r6, [r6]
   33e7c:	cmp	r6, #0
   33e80:	bne	33d90 <__flatcc_fb_build_schema@@Base+0x48>
   33e84:	ldr	r5, [r9, #356]	; 0x164
   33e88:	cmp	r5, #0
   33e8c:	beq	33edc <__flatcc_fb_build_schema@@Base+0x194>
   33e90:	ldr	r6, [pc, #3976]	; 34e20 <__flatcc_fb_build_schema@@Base+0x10d8>
   33e94:	add	r6, pc, r6
   33e98:	ldr	r0, [r9, #412]	; 0x19c
   33e9c:	mov	r1, r5
   33ea0:	mov	r2, #1
   33ea4:	add	r0, r0, #16
   33ea8:	bl	3d874 <fb_name_table_insert_item@@Base>
   33eac:	cmp	r0, #0
   33eb0:	beq	33ed0 <__flatcc_fb_build_schema@@Base+0x188>
   33eb4:	ldrd	r0, [r5, #8]
   33eb8:	mov	r2, r6
   33ebc:	mov	r3, #0
   33ec0:	stm	sp, {r0, r1}
   33ec4:	mov	r0, r9
   33ec8:	mov	r1, #0
   33ecc:	bl	2ac84 <__flatcc_error_report@@Base>
   33ed0:	ldr	r5, [r5]
   33ed4:	cmp	r5, #0
   33ed8:	bne	33e98 <__flatcc_fb_build_schema@@Base+0x150>
   33edc:	ldr	r7, [pc, #3904]	; 34e24 <__flatcc_fb_build_schema@@Base+0x10dc>
   33ee0:	mov	r8, #0
   33ee4:	mov	r4, #2
   33ee8:	mov	r6, #0
   33eec:	add	r7, pc, r7
   33ef0:	ldr	r5, [r9, #52]	; 0x34
   33ef4:	ldr	r0, [r9, #44]	; 0x2c
   33ef8:	add	r1, r5, #32
   33efc:	cmp	r1, r0
   33f00:	bls	33f38 <__flatcc_fb_build_schema@@Base+0x1f0>
   33f04:	mov	r0, #65536	; 0x10000
   33f08:	mov	r1, #1
   33f0c:	bl	148c8 <calloc@plt>
   33f10:	cmp	r0, #0
   33f14:	beq	35b98 <__flatcc_fb_build_schema@@Base+0x1e50>
   33f18:	ldr	r2, [r9, #48]	; 0x30
   33f1c:	mov	r1, r0
   33f20:	add	r5, r0, #16
   33f24:	str	r2, [r1], #48	; 0x30
   33f28:	add	r2, r0, #65536	; 0x10000
   33f2c:	str	r2, [r9, #44]	; 0x2c
   33f30:	str	r0, [r9, #48]	; 0x30
   33f34:	str	r5, [r9, #52]	; 0x34
   33f38:	ldr	r0, [r7, r6, lsl #2]
   33f3c:	str	r1, [r9, #52]	; 0x34
   33f40:	str	r6, [r5, #24]
   33f44:	str	r0, [r5, #8]
   33f48:	bl	149a0 <strlen@plt>
   33f4c:	str	r0, [r5, #12]
   33f50:	strh	r4, [r5, #16]
   33f54:	str	r8, [r5]
   33f58:	mov	r1, r5
   33f5c:	mov	r2, #1
   33f60:	ldr	r0, [r9, #412]	; 0x19c
   33f64:	add	r0, r0, #16
   33f68:	bl	3d874 <fb_name_table_insert_item@@Base>
   33f6c:	cmp	r0, #0
   33f70:	strne	r6, [r0, #24]
   33f74:	add	r6, r6, #1
   33f78:	cmp	r6, #12
   33f7c:	bcc	33ef0 <__flatcc_fb_build_schema@@Base+0x1a8>
   33f80:	ldr	r0, [r9, #184]	; 0xb8
   33f84:	cmp	r0, #0
   33f88:	bne	33fc8 <__flatcc_fb_build_schema@@Base+0x280>
   33f8c:	ldr	r5, [r9, #392]	; 0x188
   33f90:	cmp	r5, #0
   33f94:	beq	35824 <__flatcc_fb_build_schema@@Base+0x1adc>
   33f98:	mov	r4, #1
   33f9c:	ldrh	r0, [r5, #8]
   33fa0:	cmp	r0, #3
   33fa4:	bne	33fbc <__flatcc_fb_build_schema@@Base+0x274>
   33fa8:	mov	r0, r9
   33fac:	mov	r1, r5
   33fb0:	bl	35d34 <__flatcc_fb_build_schema@@Base+0x1fec>
   33fb4:	cmp	r0, #0
   33fb8:	strhne	r4, [r5, #48]	; 0x30
   33fbc:	ldr	r5, [r5]
   33fc0:	cmp	r5, #0
   33fc4:	bne	33f9c <__flatcc_fb_build_schema@@Base+0x254>
   33fc8:	ldr	r6, [r9, #392]	; 0x188
   33fcc:	cmp	r6, #0
   33fd0:	beq	35824 <__flatcc_fb_build_schema@@Base+0x1adc>
   33fd4:	ldr	sl, [pc, #4028]	; 34f98 <__flatcc_fb_build_schema@@Base+0x1250>
   33fd8:	ldr	r7, [pc, #4028]	; 34f9c <__flatcc_fb_build_schema@@Base+0x1254>
   33fdc:	mov	r4, #1
   33fe0:	mov	r5, #0
   33fe4:	add	sl, pc, sl
   33fe8:	add	r7, pc, r7
   33fec:	ldrh	r0, [r6, #8]
   33ff0:	cmp	r0, #4
   33ff4:	bhi	343a8 <__flatcc_fb_build_schema@@Base+0x660>
   33ff8:	add	r1, pc, #4
   33ffc:	ldr	r0, [r1, r0, lsl #2]
   34000:	add	pc, r1, r0
   34004:	andeq	r0, r0, r4, rrx
   34008:	andeq	r0, r0, r4, lsl r0
   3400c:	andeq	r0, r0, r4, rrx
   34010:	andeq	r0, r0, r4, asr #32
   34014:	andeq	r0, r0, r0, asr r0
   34018:	ldrh	r0, [r6, #48]	; 0x30
   3401c:	cmp	r0, #0
   34020:	beq	34078 <__flatcc_fb_build_schema@@Base+0x330>
   34024:	ldr	r1, [r6, #4]
   34028:	mov	r0, r9
   3402c:	mov	r2, r7
   34030:	mov	r3, #0
   34034:	str	r5, [sp]
   34038:	str	r5, [sp, #4]
   3403c:	bl	2ac84 <__flatcc_error_report@@Base>
   34040:	strh	r4, [r6, #48]	; 0x30
   34044:	b	34068 <__flatcc_fb_build_schema@@Base+0x320>
   34048:	ldr	r0, [r9, #184]	; 0xb8
   3404c:	cmp	r0, #0
   34050:	beq	34068 <__flatcc_fb_build_schema@@Base+0x320>
   34054:	mov	r0, r9
   34058:	mov	r1, r6
   3405c:	bl	35d34 <__flatcc_fb_build_schema@@Base+0x1fec>
   34060:	cmp	r0, #0
   34064:	strhne	r4, [r6, #48]	; 0x30
   34068:	ldr	r6, [r6]
   3406c:	cmp	r6, #0
   34070:	bne	33fec <__flatcc_fb_build_schema@@Base+0x2a4>
   34074:	b	343d8 <__flatcc_fb_build_schema@@Base+0x690>
   34078:	ldr	r1, [r6, #28]
   3407c:	mov	r0, r9
   34080:	mov	r2, #16
   34084:	add	r3, sp, #64	; 0x40
   34088:	bl	36af8 <__flatcc_fb_build_schema@@Base+0x2db0>
   3408c:	strh	r0, [r6, #92]	; 0x5c
   34090:	ldr	r0, [sp, #80]	; 0x50
   34094:	cmp	r0, #0
   34098:	beq	34114 <__flatcc_fb_build_schema@@Base+0x3cc>
   3409c:	ldrd	r0, [r0, #8]
   340a0:	subs	r2, r0, #1
   340a4:	sbc	r3, r1, #0
   340a8:	orrs	r7, r0, r1
   340ac:	beq	340ec <__flatcc_fb_build_schema@@Base+0x3a4>
   340b0:	rsbs	r2, r2, #255	; 0xff
   340b4:	rscs	r2, r3, #0
   340b8:	bcc	340ec <__flatcc_fb_build_schema@@Base+0x3a4>
   340bc:	mov	r3, #0
   340c0:	mov	r2, #1
   340c4:	eor	r7, r2, r0
   340c8:	eor	r4, r3, r1
   340cc:	orrs	r7, r7, r4
   340d0:	beq	34110 <__flatcc_fb_build_schema@@Base+0x3c8>
   340d4:	lsl	r3, r3, #1
   340d8:	orr	r3, r3, r2, lsr #31
   340dc:	lsl	r2, r2, #1
   340e0:	subs	r7, r0, r2
   340e4:	sbcs	r7, r1, r3
   340e8:	bcs	340c4 <__flatcc_fb_build_schema@@Base+0x37c>
   340ec:	ldr	r1, [r6, #4]
   340f0:	str	r5, [sp]
   340f4:	str	r5, [sp, #4]
   340f8:	mov	r0, r9
   340fc:	mov	r3, #0
   34100:	ldr	r2, [pc, #3980]	; 35094 <__flatcc_fb_build_schema@@Base+0x134c>
   34104:	add	r2, pc, r2
   34108:	bl	2ac84 <__flatcc_error_report@@Base>
   3410c:	b	34114 <__flatcc_fb_build_schema@@Base+0x3cc>
   34110:	strh	r0, [r6, #104]	; 0x68
   34114:	ldr	r8, [r6, #20]
   34118:	cmp	r8, #0
   3411c:	beq	342b4 <__flatcc_fb_build_schema@@Base+0x56c>
   34120:	add	r4, r6, #56	; 0x38
   34124:	mov	r7, #0
   34128:	b	34184 <__flatcc_fb_build_schema@@Base+0x43c>
   3412c:	ldr	r1, [r8, #16]
   34130:	ldr	r2, [pc, #4056]	; 35110 <__flatcc_fb_build_schema@@Base+0x13c8>
   34134:	mov	r0, r9
   34138:	mov	r3, r8
   3413c:	add	r2, pc, r2
   34140:	bl	2aeec <error_ref_sym@@Base>
   34144:	mov	r0, #1
   34148:	strh	r0, [r8, #24]
   3414c:	b	34280 <__flatcc_fb_build_schema@@Base+0x538>
   34150:	ldr	r2, [r9, #152]	; 0x98
   34154:	cmp	r2, #0
   34158:	beq	34350 <__flatcc_fb_build_schema@@Base+0x608>
   3415c:	cmp	r1, #3
   34160:	bne	34370 <__flatcc_fb_build_schema@@Base+0x628>
   34164:	ldrb	r0, [r8, #72]	; 0x48
   34168:	tst	r0, #128	; 0x80
   3416c:	beq	34254 <__flatcc_fb_build_schema@@Base+0x50c>
   34170:	ldr	r0, [r9, #148]	; 0x94
   34174:	cmp	r0, #0
   34178:	beq	34330 <__flatcc_fb_build_schema@@Base+0x5e8>
   3417c:	add	r7, r7, #1
   34180:	b	34254 <__flatcc_fb_build_schema@@Base+0x50c>
   34184:	mov	r0, r4
   34188:	mov	r1, r8
   3418c:	mov	r2, #1
   34190:	bl	28b28 <fb_symbol_table_insert_item@@Base>
   34194:	cmp	r0, #0
   34198:	beq	341b8 <__flatcc_fb_build_schema@@Base+0x470>
   3419c:	ldr	r3, [r0, #4]
   341a0:	ldr	r1, [r8, #4]
   341a4:	str	r5, [sp]
   341a8:	str	r5, [sp, #4]
   341ac:	mov	r0, r9
   341b0:	mov	r2, sl
   341b4:	b	3427c <__flatcc_fb_build_schema@@Base+0x534>
   341b8:	ldrh	r0, [r8, #8]
   341bc:	cmp	r0, #5
   341c0:	bne	342c4 <__flatcc_fb_build_schema@@Base+0x57c>
   341c4:	ldr	r0, [r9, #168]	; 0xa8
   341c8:	ldr	r3, [r9, #172]	; 0xac
   341cc:	ldr	r1, [r8, #64]	; 0x40
   341d0:	cmp	r3, #0
   341d4:	movwne	r3, #128	; 0x80
   341d8:	cmp	r0, #0
   341dc:	mov	r0, r9
   341e0:	orrne	r3, r3, #4
   341e4:	mov	r2, r3
   341e8:	add	r3, sp, #64	; 0x40
   341ec:	bl	36af8 <__flatcc_fb_build_schema@@Base+0x2db0>
   341f0:	strh	r0, [r8, #72]	; 0x48
   341f4:	ldrh	r1, [r8, #24]
   341f8:	cmp	r1, #8
   341fc:	beq	3424c <__flatcc_fb_build_schema@@Base+0x504>
   34200:	cmp	r1, #12
   34204:	bne	342e0 <__flatcc_fb_build_schema@@Base+0x598>
   34208:	ldr	r2, [r8, #16]
   3420c:	ldr	r1, [r6, #12]
   34210:	mov	r0, r9
   34214:	mov	r3, #0
   34218:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   3421c:	cmp	r0, #0
   34220:	beq	3412c <__flatcc_fb_build_schema@@Base+0x3e4>
   34224:	mov	r1, #14
   34228:	strh	r1, [r8, #24]
   3422c:	str	r0, [r8, #16]
   34230:	ldrh	r1, [r0, #8]
   34234:	cmp	r1, #1
   34238:	bne	34150 <__flatcc_fb_build_schema@@Base+0x408>
   3423c:	ldrb	r0, [r8, #72]	; 0x48
   34240:	tst	r0, #128	; 0x80
   34244:	beq	34254 <__flatcc_fb_build_schema@@Base+0x50c>
   34248:	b	34330 <__flatcc_fb_build_schema@@Base+0x5e8>
   3424c:	ubfx	r0, r0, #7, #1
   34250:	add	r7, r7, r0
   34254:	ldrh	r0, [r8, #56]	; 0x38
   34258:	cmp	r0, #0
   3425c:	beq	34280 <__flatcc_fb_build_schema@@Base+0x538>
   34260:	ldr	r1, [r8, #4]
   34264:	str	r5, [sp]
   34268:	str	r5, [sp, #4]
   3426c:	mov	r0, r9
   34270:	mov	r3, #0
   34274:	ldr	r2, [pc, #3980]	; 35208 <__flatcc_fb_build_schema@@Base+0x14c0>
   34278:	add	r2, pc, r2
   3427c:	bl	2ac84 <__flatcc_error_report@@Base>
   34280:	ldr	r8, [r8]
   34284:	cmp	r8, #0
   34288:	bne	34184 <__flatcc_fb_build_schema@@Base+0x43c>
   3428c:	cmp	r7, #0
   34290:	beq	342b4 <__flatcc_fb_build_schema@@Base+0x56c>
   34294:	ldrh	r0, [r6, #10]
   34298:	cmp	r7, #2
   3429c:	orr	r0, r0, #8
   342a0:	strh	r0, [r6, #10]
   342a4:	blt	342b4 <__flatcc_fb_build_schema@@Base+0x56c>
   342a8:	ldr	r0, [r9, #156]	; 0x9c
   342ac:	cmp	r0, #0
   342b0:	beq	342fc <__flatcc_fb_build_schema@@Base+0x5b4>
   342b4:	ldr	r7, [pc, #4048]	; 3528c <__flatcc_fb_build_schema@@Base+0x1544>
   342b8:	mov	r4, #1
   342bc:	add	r7, pc, r7
   342c0:	b	34068 <__flatcc_fb_build_schema@@Base+0x320>
   342c4:	ldr	r1, [r8, #4]
   342c8:	str	r5, [sp]
   342cc:	str	r5, [sp, #4]
   342d0:	mov	r0, r9
   342d4:	ldr	r2, [pc, #4088]	; 352d4 <__flatcc_fb_build_schema@@Base+0x158c>
   342d8:	add	r2, pc, r2
   342dc:	b	34314 <__flatcc_fb_build_schema@@Base+0x5cc>
   342e0:	ldr	r1, [r8, #4]
   342e4:	str	r5, [sp]
   342e8:	str	r5, [sp, #4]
   342ec:	mov	r0, r9
   342f0:	ldr	r2, [pc, #4064]	; 352d8 <__flatcc_fb_build_schema@@Base+0x1590>
   342f4:	add	r2, pc, r2
   342f8:	b	34314 <__flatcc_fb_build_schema@@Base+0x5cc>
   342fc:	ldr	r1, [r6, #4]
   34300:	str	r5, [sp]
   34304:	str	r5, [sp, #4]
   34308:	mov	r0, r9
   3430c:	ldr	r2, [pc, #4092]	; 35310 <__flatcc_fb_build_schema@@Base+0x15c8>
   34310:	add	r2, pc, r2
   34314:	mov	r3, #0
   34318:	bl	2ac84 <__flatcc_error_report@@Base>
   3431c:	ldr	r7, [pc, #4080]	; 35314 <__flatcc_fb_build_schema@@Base+0x15cc>
   34320:	mov	r4, #1
   34324:	strh	r4, [r6, #48]	; 0x30
   34328:	add	r7, pc, r7
   3432c:	b	34068 <__flatcc_fb_build_schema@@Base+0x320>
   34330:	ldr	r1, [r8, #4]
   34334:	str	r5, [sp]
   34338:	str	r5, [sp, #4]
   3433c:	mov	r0, r9
   34340:	mov	r3, #0
   34344:	ldr	r2, [pc, #4044]	; 35318 <__flatcc_fb_build_schema@@Base+0x15d0>
   34348:	add	r2, pc, r2
   3434c:	b	3438c <__flatcc_fb_build_schema@@Base+0x644>
   34350:	ldr	r3, [r0, #4]
   34354:	ldr	r1, [r8, #4]
   34358:	str	r5, [sp]
   3435c:	str	r5, [sp, #4]
   34360:	mov	r0, r9
   34364:	ldr	r2, [pc, #4092]	; 35368 <__flatcc_fb_build_schema@@Base+0x1620>
   34368:	add	r2, pc, r2
   3436c:	b	3438c <__flatcc_fb_build_schema@@Base+0x644>
   34370:	ldr	r3, [r0, #4]
   34374:	ldr	r1, [r8, #4]
   34378:	str	r5, [sp]
   3437c:	str	r5, [sp, #4]
   34380:	mov	r0, r9
   34384:	ldr	r2, [pc, #4064]	; 3536c <__flatcc_fb_build_schema@@Base+0x1624>
   34388:	add	r2, pc, r2
   3438c:	bl	2ac84 <__flatcc_error_report@@Base>
   34390:	mov	r4, #1
   34394:	strh	r4, [r8, #24]
   34398:	ldr	r7, [pc, #4048]	; 35370 <__flatcc_fb_build_schema@@Base+0x1628>
   3439c:	strh	r4, [r6, #48]	; 0x30
   343a0:	add	r7, pc, r7
   343a4:	b	34068 <__flatcc_fb_build_schema@@Base+0x320>
   343a8:	mov	r0, #0
   343ac:	ldr	r1, [r6, #4]
   343b0:	mov	r3, #0
   343b4:	str	r0, [sp]
   343b8:	str	r0, [sp, #4]
   343bc:	mov	r0, r9
   343c0:	ldr	r2, [pc, #4012]	; 35374 <__flatcc_fb_build_schema@@Base+0x162c>
   343c4:	add	r2, pc, r2
   343c8:	bl	2ac84 <__flatcc_error_report@@Base>
   343cc:	mvn	r0, #0
   343d0:	sub	sp, fp, #28
   343d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   343d8:	ldr	r5, [r9, #392]	; 0x188
   343dc:	cmp	r5, #0
   343e0:	beq	35824 <__flatcc_fb_build_schema@@Base+0x1adc>
   343e4:	mov	r4, #1
   343e8:	ldrh	r0, [r5, #8]
   343ec:	cmp	r0, #1
   343f0:	bne	34414 <__flatcc_fb_build_schema@@Base+0x6cc>
   343f4:	ldrh	r0, [r5, #48]	; 0x30
   343f8:	cmp	r0, #1
   343fc:	beq	34414 <__flatcc_fb_build_schema@@Base+0x6cc>
   34400:	mov	r0, r9
   34404:	mov	r1, r5
   34408:	bl	365ac <__flatcc_fb_build_schema@@Base+0x2864>
   3440c:	cmp	r0, #0
   34410:	strhne	r4, [r5, #48]	; 0x30
   34414:	ldr	r5, [r5]
   34418:	cmp	r5, #0
   3441c:	bne	343e8 <__flatcc_fb_build_schema@@Base+0x6a0>
   34420:	ldr	r7, [r9, #392]	; 0x188
   34424:	cmp	r7, #0
   34428:	beq	35824 <__flatcc_fb_build_schema@@Base+0x1adc>
   3442c:	add	r0, r9, #216	; 0xd8
   34430:	mov	sl, #0
   34434:	str	r0, [sp, #24]
   34438:	ldr	r8, [pc, #4072]	; 35428 <__flatcc_fb_build_schema@@Base+0x16e0>
   3443c:	add	r8, pc, r8
   34440:	ldrh	r0, [r7, #8]
   34444:	cmp	r0, #2
   34448:	beq	353d4 <__flatcc_fb_build_schema@@Base+0x168c>
   3444c:	cmp	r0, #0
   34450:	bne	35818 <__flatcc_fb_build_schema@@Base+0x1ad0>
   34454:	ldrh	r0, [r7, #48]	; 0x30
   34458:	cmp	r0, #1
   3445c:	beq	35818 <__flatcc_fb_build_schema@@Base+0x1ad0>
   34460:	cmp	r0, #0
   34464:	bne	35be4 <__flatcc_fb_build_schema@@Base+0x1e9c>
   34468:	ldr	r1, [r7, #28]
   3446c:	mov	r0, r9
   34470:	mov	r2, #8
   34474:	add	r3, sp, #64	; 0x40
   34478:	bl	36af8 <__flatcc_fb_build_schema@@Base+0x2db0>
   3447c:	strh	r0, [r7, #92]	; 0x5c
   34480:	str	r7, [sp, #48]	; 0x30
   34484:	ldr	r6, [r7, #20]
   34488:	cmp	r6, #0
   3448c:	beq	355fc <__flatcc_fb_build_schema@@Base+0x18b4>
   34490:	mov	r0, #0
   34494:	add	r4, r7, #56	; 0x38
   34498:	mov	r7, #0
   3449c:	mov	r5, #0
   344a0:	str	r0, [sp, #40]	; 0x28
   344a4:	mov	r0, #0
   344a8:	str	r4, [sp, #28]
   344ac:	str	r0, [sp, #20]
   344b0:	mov	r0, #0
   344b4:	str	r0, [sp, #32]
   344b8:	mov	r0, #0
   344bc:	str	r0, [sp, #52]	; 0x34
   344c0:	mov	r0, #0
   344c4:	str	r0, [sp, #56]	; 0x38
   344c8:	mov	r0, #0
   344cc:	str	r0, [sp, #36]	; 0x24
   344d0:	b	35378 <__flatcc_fb_build_schema@@Base+0x1630>
   344d4:	ldrh	r0, [r6, #8]
   344d8:	cmp	r0, #5
   344dc:	bne	35734 <__flatcc_fb_build_schema@@Base+0x19ec>
   344e0:	ldrh	r0, [r6, #24]
   344e4:	sub	r1, r0, #7
   344e8:	cmp	r1, #2
   344ec:	bcs	3451c <__flatcc_fb_build_schema@@Base+0x7d4>
   344f0:	ldr	r0, [r6, #16]
   344f4:	movw	r1, #999	; 0x3e7
   344f8:	ldr	r0, [r0, #16]
   344fc:	add	r1, r0, r1
   34500:	mov	r0, #0
   34504:	cmp	r1, #27
   34508:	ldrls	r0, [pc, #4076]	; 354fc <__flatcc_fb_build_schema@@Base+0x17b4>
   3450c:	addls	r0, pc, r0
   34510:	ldrls	r0, [r0, r1, lsl #2]
   34514:	str	r0, [r6, #16]
   34518:	b	34524 <__flatcc_fb_build_schema@@Base+0x7dc>
   3451c:	cmp	r0, #1
   34520:	beq	353b0 <__flatcc_fb_build_schema@@Base+0x1668>
   34524:	ldr	r1, [r6, #64]	; 0x40
   34528:	mov	r0, r9
   3452c:	movw	r2, #4038	; 0xfc6
   34530:	add	r3, sp, #64	; 0x40
   34534:	str	r5, [sp, #60]	; 0x3c
   34538:	str	r7, [sp, #44]	; 0x2c
   3453c:	bl	36af8 <__flatcc_fb_build_schema@@Base+0x2db0>
   34540:	strh	r0, [r6, #72]	; 0x48
   34544:	ldr	r7, [sp, #48]	; 0x30
   34548:	ldr	r5, [sp, #88]	; 0x58
   3454c:	cmp	r5, #0
   34550:	beq	34588 <__flatcc_fb_build_schema@@Base+0x840>
   34554:	ldrh	r0, [r6, #24]
   34558:	cmp	r0, #7
   3455c:	ldreq	r0, [r6, #16]
   34560:	cmpeq	r0, #4
   34564:	beq	347d0 <__flatcc_fb_build_schema@@Base+0xa88>
   34568:	ldr	r1, [r5, #4]
   3456c:	str	sl, [sp]
   34570:	str	sl, [sp, #4]
   34574:	mov	r0, r9
   34578:	mov	r3, #0
   3457c:	ldr	r2, [pc, #3964]	; 35500 <__flatcc_fb_build_schema@@Base+0x17b8>
   34580:	add	r2, pc, r2
   34584:	bl	2ac84 <__flatcc_error_report@@Base>
   34588:	ldrh	r0, [r6, #72]	; 0x48
   3458c:	tst	r0, #256	; 0x100
   34590:	bne	345a8 <__flatcc_fb_build_schema@@Base+0x860>
   34594:	ldr	r7, [sp, #44]	; 0x2c
   34598:	ldr	r5, [sp, #60]	; 0x3c
   3459c:	tst	r0, #1024	; 0x400
   345a0:	bne	345e8 <__flatcc_fb_build_schema@@Base+0x8a0>
   345a4:	b	34620 <__flatcc_fb_build_schema@@Base+0x8d8>
   345a8:	ldrh	r1, [r6, #24]
   345ac:	ldr	r7, [sp, #44]	; 0x2c
   345b0:	ldr	r5, [sp, #60]	; 0x3c
   345b4:	cmp	r1, #8
   345b8:	bne	345e0 <__flatcc_fb_build_schema@@Base+0x898>
   345bc:	ldr	r1, [r6, #4]
   345c0:	str	sl, [sp]
   345c4:	str	sl, [sp, #4]
   345c8:	mov	r0, r9
   345cc:	mov	r3, #0
   345d0:	ldr	r2, [pc, #4068]	; 355bc <__flatcc_fb_build_schema@@Base+0x1874>
   345d4:	add	r2, pc, r2
   345d8:	bl	2ac84 <__flatcc_error_report@@Base>
   345dc:	ldrh	r0, [r6, #72]	; 0x48
   345e0:	tst	r0, #1024	; 0x400
   345e4:	beq	34620 <__flatcc_fb_build_schema@@Base+0x8d8>
   345e8:	ldrh	r1, [r6, #24]
   345ec:	cmp	r1, #7
   345f0:	ldreq	r1, [r6, #16]
   345f4:	cmpeq	r1, #4
   345f8:	beq	34620 <__flatcc_fb_build_schema@@Base+0x8d8>
   345fc:	ldr	r1, [r6, #4]
   34600:	str	sl, [sp]
   34604:	str	sl, [sp, #4]
   34608:	mov	r0, r9
   3460c:	mov	r3, #0
   34610:	ldr	r2, [pc, #4056]	; 355f0 <__flatcc_fb_build_schema@@Base+0x18a8>
   34614:	add	r2, pc, r2
   34618:	bl	2ac84 <__flatcc_error_report@@Base>
   3461c:	ldrh	r0, [r6, #72]	; 0x48
   34620:	tst	r0, #2048	; 0x800
   34624:	beq	34660 <__flatcc_fb_build_schema@@Base+0x918>
   34628:	ldrh	r1, [r6, #24]
   3462c:	cmp	r1, #7
   34630:	ldreq	r1, [r6, #16]
   34634:	cmpeq	r1, #4
   34638:	beq	34660 <__flatcc_fb_build_schema@@Base+0x918>
   3463c:	ldr	r1, [r6, #4]
   34640:	str	sl, [sp]
   34644:	str	sl, [sp, #4]
   34648:	mov	r0, r9
   3464c:	mov	r3, #0
   34650:	ldr	r2, [pc, #3996]	; 355f4 <__flatcc_fb_build_schema@@Base+0x18ac>
   34654:	add	r2, pc, r2
   34658:	bl	2ac84 <__flatcc_error_report@@Base>
   3465c:	ldrh	r0, [r6, #72]	; 0x48
   34660:	and	r0, r0, #3072	; 0xc00
   34664:	cmp	r0, #3072	; 0xc00
   34668:	bne	3468c <__flatcc_fb_build_schema@@Base+0x944>
   3466c:	ldr	r1, [r6, #4]
   34670:	str	sl, [sp]
   34674:	str	sl, [sp, #4]
   34678:	mov	r0, r9
   3467c:	mov	r3, #0
   34680:	ldr	r2, [pc, #3952]	; 355f8 <__flatcc_fb_build_schema@@Base+0x18b0>
   34684:	add	r2, pc, r2
   34688:	bl	2ac84 <__flatcc_error_report@@Base>
   3468c:	ldr	r8, [sp, #68]	; 0x44
   34690:	mov	sl, #0
   34694:	orrs	r0, r7, r5
   34698:	bne	346c4 <__flatcc_fb_build_schema@@Base+0x97c>
   3469c:	cmp	r8, #0
   346a0:	beq	346c4 <__flatcc_fb_build_schema@@Base+0x97c>
   346a4:	ldr	r0, [sp, #24]
   346a8:	mov	r1, #0
   346ac:	ldr	r2, [r0]
   346b0:	ldr	r0, [r9, #112]	; 0x70
   346b4:	str	r0, [sp, #40]	; 0x28
   346b8:	bl	149d0 <memset@plt>
   346bc:	mov	r0, #1
   346c0:	str	r0, [sp, #36]	; 0x24
   346c4:	ldr	r0, [sp, #56]	; 0x38
   346c8:	cmp	r0, #0
   346cc:	bne	3474c <__flatcc_fb_build_schema@@Base+0xa04>
   346d0:	ldr	r0, [sp, #24]
   346d4:	ldrd	r0, [r0]
   346d8:	subs	r0, r7, r0
   346dc:	sbcs	r0, r5, r1
   346e0:	bcs	34714 <__flatcc_fb_build_schema@@Base+0x9cc>
   346e4:	mov	r0, #0
   346e8:	str	r0, [sp, #56]	; 0x38
   346ec:	ldr	r0, [sp, #36]	; 0x24
   346f0:	cmp	r0, #0
   346f4:	bne	34744 <__flatcc_fb_build_schema@@Base+0x9fc>
   346f8:	mov	r1, #0
   346fc:	mov	r2, #0
   34700:	uxth	r0, r7
   34704:	str	r1, [sp, #56]	; 0x38
   34708:	str	r0, [r6, #96]	; 0x60
   3470c:	str	r2, [r6, #100]	; 0x64
   34710:	b	34744 <__flatcc_fb_build_schema@@Base+0x9fc>
   34714:	mov	r0, #0
   34718:	ldr	r1, [r6, #4]
   3471c:	mov	r3, #0
   34720:	mov	sl, #0
   34724:	str	r0, [sp]
   34728:	str	r0, [sp, #4]
   3472c:	mov	r0, r9
   34730:	ldr	r2, [pc, #4088]	; 35730 <__flatcc_fb_build_schema@@Base+0x19e8>
   34734:	add	r2, pc, r2
   34738:	bl	2ac84 <__flatcc_error_report@@Base>
   3473c:	mov	r0, #1
   34740:	str	r0, [sp, #56]	; 0x38
   34744:	adds	r7, r7, #1
   34748:	adc	r5, r5, #0
   3474c:	ldrh	r0, [r6, #24]
   34750:	sub	r0, r0, #7
   34754:	cmp	r0, #5
   34758:	bhi	34a78 <__flatcc_fb_build_schema@@Base+0xd30>
   3475c:	add	r1, pc, #4
   34760:	ldr	r0, [r1, r0, lsl #2]
   34764:	add	pc, r1, r0
   34768:	andeq	r0, r0, r8, lsl r0
   3476c:			; <UNDEFINED> instruction: 0x000001b8
   34770:	andeq	r0, r0, r0, ror #2
   34774:	andeq	r0, r0, ip, lsl #3
   34778:	strheq	r0, [r0], -r8
   3477c:	muleq	r0, r4, r2
   34780:	str	r5, [sp, #60]	; 0x3c
   34784:	mov	r5, #0
   34788:	str	r5, [r6, #92]	; 0x5c
   3478c:	ldr	r0, [r6, #16]
   34790:	ldr	r1, [pc, #4072]	; 35780 <__flatcc_fb_build_schema@@Base+0x1a38>
   34794:	add	r1, pc, r1
   34798:	ldr	r0, [r1, r0, lsl #2]
   3479c:	str	r0, [r6, #88]	; 0x58
   347a0:	strh	r0, [r6, #74]	; 0x4a
   347a4:	ldrh	r0, [r6, #56]	; 0x38
   347a8:	cmp	r0, #0
   347ac:	beq	34af4 <__flatcc_fb_build_schema@@Base+0xdac>
   347b0:	mov	sl, #0
   347b4:	ldr	r1, [r6, #4]
   347b8:	mov	r0, r9
   347bc:	str	sl, [sp]
   347c0:	str	sl, [sp, #4]
   347c4:	ldr	r2, [pc, #4024]	; 35784 <__flatcc_fb_build_schema@@Base+0x1a3c>
   347c8:	add	r2, pc, r2
   347cc:	b	34f74 <__flatcc_fb_build_schema@@Base+0x122c>
   347d0:	ldrh	r0, [r5, #16]
   347d4:	cmp	r0, #2
   347d8:	bne	34588 <__flatcc_fb_build_schema@@Base+0x840>
   347dc:	ldr	sl, [r7, #12]
   347e0:	ldr	r8, [r5, #8]
   347e4:	ldr	r1, [r5, #12]
   347e8:	sub	r0, r1, #1
   347ec:	add	r2, r0, #1
   347f0:	cmp	r2, #1
   347f4:	blt	34c18 <__flatcc_fb_build_schema@@Base+0xed0>
   347f8:	ldrb	r2, [r8, r0]
   347fc:	sub	r0, r0, #1
   34800:	cmp	r2, #46	; 0x2e
   34804:	bne	347ec <__flatcc_fb_build_schema@@Base+0xaa4>
   34808:	add	r2, r8, r0
   3480c:	sub	r1, r1, #1
   34810:	add	r2, r2, #2
   34814:	str	r2, [sp, #12]
   34818:	add	r2, r0, #1
   3481c:	b	34c1c <__flatcc_fb_build_schema@@Base+0xed4>
   34820:	ldr	r0, [sp, #48]	; 0x30
   34824:	ldr	r2, [r6, #16]
   34828:	mov	r3, #0
   3482c:	str	r5, [sp, #60]	; 0x3c
   34830:	ldr	r1, [r0, #12]
   34834:	mov	r0, r9
   34838:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   3483c:	cmp	r0, #0
   34840:	beq	34ac8 <__flatcc_fb_build_schema@@Base+0xd80>
   34844:	mov	r5, r0
   34848:	ldrh	r0, [r0, #8]
   3484c:	cmp	r0, #4
   34850:	bhi	34df8 <__flatcc_fb_build_schema@@Base+0x10b0>
   34854:	cmp	r0, #2
   34858:	beq	34df8 <__flatcc_fb_build_schema@@Base+0x10b0>
   3485c:	ldrh	r0, [r6, #56]	; 0x38
   34860:	cmp	r0, #0
   34864:	bne	34f58 <__flatcc_fb_build_schema@@Base+0x1210>
   34868:	mov	r0, #15
   3486c:	str	r5, [r6, #16]
   34870:	mov	ip, #0
   34874:	strh	r0, [r6, #24]
   34878:	ldrd	r0, [r5, #112]	; 0x70
   3487c:	strd	r0, [r6, #88]	; 0x58
   34880:	ldrh	r0, [r5, #104]	; 0x68
   34884:	strh	r0, [r6, #74]	; 0x4a
   34888:	ldr	r0, [sp, #56]	; 0x38
   3488c:	cmp	r0, #0
   34890:	ldrheq	r0, [r5, #8]
   34894:	cmpeq	r0, #4
   34898:	bne	34b08 <__flatcc_fb_build_schema@@Base+0xdc0>
   3489c:	ldr	r0, [sp, #36]	; 0x24
   348a0:	mov	ip, #0
   348a4:	cmp	r0, #0
   348a8:	uxtheq	r0, r7
   348ac:	streq	r0, [r6, #96]	; 0x60
   348b0:	streq	sl, [r6, #100]	; 0x64
   348b4:	adds	r7, r7, #1
   348b8:	ldr	r0, [sp, #60]	; 0x3c
   348bc:	adc	r0, r0, #0
   348c0:	str	r0, [sp, #60]	; 0x3c
   348c4:	b	34b1c <__flatcc_fb_build_schema@@Base+0xdd4>
   348c8:	ldrh	r0, [r6, #56]	; 0x38
   348cc:	cmp	r0, #0
   348d0:	beq	34aec <__flatcc_fb_build_schema@@Base+0xda4>
   348d4:	mov	sl, #0
   348d8:	ldr	r1, [r6, #4]
   348dc:	mov	r0, r9
   348e0:	str	sl, [sp]
   348e4:	str	sl, [sp, #4]
   348e8:	ldr	r2, [pc, #3936]	; 35850 <__flatcc_fb_build_schema@@Base+0x1b08>
   348ec:	add	r2, pc, r2
   348f0:	b	34a94 <__flatcc_fb_build_schema@@Base+0xd4c>
   348f4:	ldrh	r0, [r6, #56]	; 0x38
   348f8:	cmp	r0, #0
   348fc:	beq	34afc <__flatcc_fb_build_schema@@Base+0xdb4>
   34900:	mov	sl, #0
   34904:	ldr	r1, [r6, #4]
   34908:	mov	r0, r9
   3490c:	str	sl, [sp]
   34910:	str	sl, [sp, #4]
   34914:	ldr	r2, [pc, #3896]	; 35854 <__flatcc_fb_build_schema@@Base+0x1b0c>
   34918:	add	r2, pc, r2
   3491c:	b	34a94 <__flatcc_fb_build_schema@@Base+0xd4c>
   34920:	ldrh	r0, [r6, #56]	; 0x38
   34924:	ldr	r1, [sp, #48]	; 0x30
   34928:	str	r5, [sp, #60]	; 0x3c
   3492c:	add	r5, r6, #48	; 0x30
   34930:	cmp	r0, #13
   34934:	bne	34998 <__flatcc_fb_build_schema@@Base+0xc50>
   34938:	ldr	r2, [r5]
   3493c:	ldr	r1, [r1, #12]
   34940:	str	sl, [fp, #-36]	; 0xffffffdc
   34944:	cmp	r2, #0
   34948:	beq	35c28 <__flatcc_fb_build_schema@@Base+0x1ee0>
   3494c:	mov	r0, r9
   34950:	sub	r3, fp, #36	; 0x24
   34954:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   34958:	cmp	r0, #0
   3495c:	beq	34ab4 <__flatcc_fb_build_schema@@Base+0xd6c>
   34960:	ldrh	r1, [r0, #8]
   34964:	cmp	r1, #3
   34968:	bne	34ab4 <__flatcc_fb_build_schema@@Base+0xd6c>
   3496c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   34970:	add	r0, r0, #56	; 0x38
   34974:	ldr	r2, [r1, #4]
   34978:	ldm	r2, {r1, r2}
   3497c:	bl	28b58 <fb_symbol_table_find@@Base>
   34980:	cmp	r0, #0
   34984:	beq	34ab4 <__flatcc_fb_build_schema@@Base+0xd6c>
   34988:	add	r0, r0, #48	; 0x30
   3498c:	vld1.64	{d16-d17}, [r0]
   34990:	vst1.64	{d16-d17}, [r5]
   34994:	ldrh	r0, [r6, #56]	; 0x38
   34998:	cmp	r0, #0
   3499c:	bne	349b8 <__flatcc_fb_build_schema@@Base+0xc70>
   349a0:	mov	r0, #5
   349a4:	mov	sl, #0
   349a8:	strh	r0, [r6, #56]	; 0x38
   349ac:	mov	r0, #0
   349b0:	str	r0, [r5]
   349b4:	str	r0, [r5, #4]
   349b8:	ldr	r2, [r6, #16]
   349bc:	mov	r0, r9
   349c0:	mov	r1, r6
   349c4:	mov	r3, r5
   349c8:	bl	36ed4 <__flatcc_fb_coerce_scalar_type@@Base>
   349cc:	cmp	r0, #0
   349d0:	bne	34ae0 <__flatcc_fb_build_schema@@Base+0xd98>
   349d4:	mov	r5, #0
   349d8:	mov	ip, #1
   349dc:	str	r5, [r6, #92]	; 0x5c
   349e0:	ldr	r0, [r6, #16]
   349e4:	ldr	r1, [pc, #4092]	; 359e8 <__flatcc_fb_build_schema@@Base+0x1ca0>
   349e8:	add	r1, pc, r1
   349ec:	ldr	r0, [r1, r0, lsl #2]
   349f0:	str	r0, [r6, #88]	; 0x58
   349f4:	strh	r0, [r6, #74]	; 0x4a
   349f8:	b	34b08 <__flatcc_fb_build_schema@@Base+0xdc0>
   349fc:	ldr	r4, [sp, #48]	; 0x30
   34a00:	ldr	r2, [r6, #16]
   34a04:	mov	r0, r9
   34a08:	mov	r3, #0
   34a0c:	str	r5, [sp, #60]	; 0x3c
   34a10:	ldr	r1, [r4, #12]
   34a14:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   34a18:	cmp	r0, #0
   34a1c:	beq	34b50 <__flatcc_fb_build_schema@@Base+0xe08>
   34a20:	mov	r5, r0
   34a24:	ldrh	r0, [r0, #8]
   34a28:	cmp	r0, #4
   34a2c:	bhi	35028 <__flatcc_fb_build_schema@@Base+0x12e0>
   34a30:	add	r1, pc, #8
   34a34:	mov	ip, #0
   34a38:	ldr	r0, [r1, r0, lsl #2]
   34a3c:	add	pc, r1, r0
   34a40:	andeq	r0, r0, r0, lsr #8
   34a44:	andeq	r0, r0, r0, lsr #8
   34a48:	andeq	r0, r0, r4, lsl r0
   34a4c:	andeq	r0, r0, r8, ror #7
   34a50:	andeq	r0, r0, r0, lsr #8
   34a54:	mov	sl, #0
   34a58:	ldr	r3, [r5, #4]
   34a5c:	ldr	r1, [r6, #4]
   34a60:	mov	r0, r9
   34a64:	str	sl, [sp]
   34a68:	str	sl, [sp, #4]
   34a6c:	ldr	r2, [pc, #4052]	; 35a48 <__flatcc_fb_build_schema@@Base+0x1d00>
   34a70:	add	r2, pc, r2
   34a74:	b	34f78 <__flatcc_fb_build_schema@@Base+0x1230>
   34a78:	mov	sl, #0
   34a7c:	ldr	r1, [r6, #4]
   34a80:	mov	r0, r9
   34a84:	str	sl, [sp]
   34a88:	str	sl, [sp, #4]
   34a8c:	ldr	r2, [pc, #4024]	; 35a4c <__flatcc_fb_build_schema@@Base+0x1d04>
   34a90:	add	r2, pc, r2
   34a94:	mov	r3, #0
   34a98:	bl	2ac84 <__flatcc_error_report@@Base>
   34a9c:	mov	r0, #1
   34aa0:	strh	r0, [r6, #24]
   34aa4:	ldr	r8, [pc, #4004]	; 35a50 <__flatcc_fb_build_schema@@Base+0x1d08>
   34aa8:	ldr	r4, [sp, #28]
   34aac:	add	r8, pc, r8
   34ab0:	b	353b0 <__flatcc_fb_build_schema@@Base+0x1668>
   34ab4:	ldr	r1, [r6, #48]	; 0x30
   34ab8:	ldr	r2, [pc, #3988]	; 35a54 <__flatcc_fb_build_schema@@Base+0x1d0c>
   34abc:	mov	r0, r9
   34ac0:	add	r2, pc, r2
   34ac4:	b	34ad8 <__flatcc_fb_build_schema@@Base+0xd90>
   34ac8:	ldr	r1, [r6, #16]
   34acc:	ldr	r2, [pc, #3972]	; 35a58 <__flatcc_fb_build_schema@@Base+0x1d10>
   34ad0:	mov	r0, r9
   34ad4:	add	r2, pc, r2
   34ad8:	mov	r3, r6
   34adc:	bl	2aeec <error_ref_sym@@Base>
   34ae0:	mov	r0, #1
   34ae4:	strh	r0, [r6, #24]
   34ae8:	b	34b78 <__flatcc_fb_build_schema@@Base+0xe30>
   34aec:	str	r5, [sp, #60]	; 0x3c
   34af0:	mov	r5, #0
   34af4:	mov	ip, #0
   34af8:	b	34b08 <__flatcc_fb_build_schema@@Base+0xdc0>
   34afc:	ldr	ip, [r9, #164]	; 0xa4
   34b00:	str	r5, [sp, #60]	; 0x3c
   34b04:	mov	r5, #0
   34b08:	ldr	r0, [sp, #56]	; 0x38
   34b0c:	cmp	r0, #0
   34b10:	beq	34b1c <__flatcc_fb_build_schema@@Base+0xdd4>
   34b14:	mov	sl, #0
   34b18:	b	34bc8 <__flatcc_fb_build_schema@@Base+0xe80>
   34b1c:	cmp	r8, #0
   34b20:	beq	34b80 <__flatcc_fb_build_schema@@Base+0xe38>
   34b24:	ldr	r0, [sp, #36]	; 0x24
   34b28:	cmp	r0, #0
   34b2c:	bne	34b80 <__flatcc_fb_build_schema@@Base+0xe38>
   34b30:	mov	sl, #0
   34b34:	ldr	r1, [r8, #4]
   34b38:	mov	r0, r9
   34b3c:	str	sl, [sp]
   34b40:	str	sl, [sp, #4]
   34b44:	ldr	r2, [pc, #4092]	; 35b48 <__flatcc_fb_build_schema@@Base+0x1e00>
   34b48:	add	r2, pc, r2
   34b4c:	b	34bb0 <__flatcc_fb_build_schema@@Base+0xe68>
   34b50:	ldr	r1, [r6, #16]
   34b54:	ldr	r2, [pc, #4080]	; 35b4c <__flatcc_fb_build_schema@@Base+0x1e04>
   34b58:	mov	r0, r9
   34b5c:	mov	r3, r6
   34b60:	add	r2, pc, r2
   34b64:	bl	2aeec <error_ref_sym@@Base>
   34b68:	mov	r1, #1
   34b6c:	mov	r0, #1
   34b70:	str	r0, [sp, #56]	; 0x38
   34b74:	strh	r1, [r6, #24]
   34b78:	mov	sl, #0
   34b7c:	b	34f84 <__flatcc_fb_build_schema@@Base+0x123c>
   34b80:	cmp	r8, #0
   34b84:	bne	34d8c <__flatcc_fb_build_schema@@Base+0x1044>
   34b88:	ldr	r0, [sp, #36]	; 0x24
   34b8c:	cmp	r0, #0
   34b90:	beq	34d8c <__flatcc_fb_build_schema@@Base+0x1044>
   34b94:	mov	sl, #0
   34b98:	ldr	r1, [r6, #4]
   34b9c:	mov	r0, r9
   34ba0:	str	sl, [sp]
   34ba4:	str	sl, [sp, #4]
   34ba8:	ldr	r2, [pc, #4068]	; 35b94 <__flatcc_fb_build_schema@@Base+0x1e4c>
   34bac:	add	r2, pc, r2
   34bb0:	mov	r3, #0
   34bb4:	mov	r4, ip
   34bb8:	bl	2ac84 <__flatcc_error_report@@Base>
   34bbc:	mov	r0, #1
   34bc0:	mov	ip, r4
   34bc4:	str	r0, [sp, #56]	; 0x38
   34bc8:	ldr	r8, [pc, #4080]	; 35bc0 <__flatcc_fb_build_schema@@Base+0x1e78>
   34bcc:	ldr	r5, [sp, #60]	; 0x3c
   34bd0:	add	r8, pc, r8
   34bd4:	ldrb	r0, [r6, #72]	; 0x48
   34bd8:	ldr	r4, [sp, #28]
   34bdc:	tst	r0, #128	; 0x80
   34be0:	beq	353b0 <__flatcc_fb_build_schema@@Base+0x1668>
   34be4:	ldr	r0, [sp, #20]
   34be8:	cmp	ip, #0
   34bec:	add	r0, r0, #1
   34bf0:	str	r0, [sp, #20]
   34bf4:	bne	353b0 <__flatcc_fb_build_schema@@Base+0x1668>
   34bf8:	ldr	r1, [r6, #4]
   34bfc:	str	sl, [sp]
   34c00:	str	sl, [sp, #4]
   34c04:	mov	r0, r9
   34c08:	mov	r3, #0
   34c0c:	ldr	r2, [pc, #4080]	; 35c04 <__flatcc_fb_build_schema@@Base+0x1ebc>
   34c10:	add	r2, pc, r2
   34c14:	b	353ac <__flatcc_fb_build_schema@@Base+0x1664>
   34c18:	str	r8, [sp, #12]
   34c1c:	sub	r0, r1, r2
   34c20:	cmp	sl, #0
   34c24:	str	r0, [sp, #8]
   34c28:	beq	34cf8 <__flatcc_fb_build_schema@@Base+0xfb0>
   34c2c:	cmp	r2, #0
   34c30:	bne	34cf8 <__flatcc_fb_build_schema@@Base+0xfb0>
   34c34:	ldr	r1, [sp, #12]
   34c38:	ldr	r2, [sp, #8]
   34c3c:	add	r0, sl, #4
   34c40:	bl	28b58 <fb_symbol_table_find@@Base>
   34c44:	cmp	r0, #0
   34c48:	beq	34c70 <__flatcc_fb_build_schema@@Base+0xf28>
   34c4c:	mov	r8, r0
   34c50:	ldrh	r0, [r0, #8]
   34c54:	cmp	r0, #4
   34c58:	bhi	34c70 <__flatcc_fb_build_schema@@Base+0xf28>
   34c5c:	ldr	r1, [r8, #16]
   34c60:	ldr	r0, [sp, #16]
   34c64:	bl	284dc <ptr_set_find_item@@Base>
   34c68:	cmp	r0, #0
   34c6c:	bne	34d38 <__flatcc_fb_build_schema@@Base+0xff0>
   34c70:	ldr	r0, [sl]
   34c74:	cmp	r0, #0
   34c78:	beq	34d60 <__flatcc_fb_build_schema@@Base+0x1018>
   34c7c:	mov	r4, #0
   34c80:	ldr	r0, [r0]
   34c84:	mov	r1, r4
   34c88:	add	r4, r4, #1
   34c8c:	cmp	r0, #0
   34c90:	bne	34c80 <__flatcc_fb_build_schema@@Base+0xf38>
   34c94:	rsb	r7, r1, #0
   34c98:	ldr	r0, [r9, #412]	; 0x19c
   34c9c:	cmp	r4, #2
   34ca0:	blt	34cd4 <__flatcc_fb_build_schema@@Base+0xf8c>
   34ca4:	cmp	r0, #0
   34ca8:	beq	34cbc <__flatcc_fb_build_schema@@Base+0xf74>
   34cac:	ldr	r1, [sl]
   34cb0:	mov	r2, r7
   34cb4:	bl	29530 <fb_scope_table_find@@Base>
   34cb8:	b	34cc0 <__flatcc_fb_build_schema@@Base+0xf78>
   34cbc:	mov	r0, #0
   34cc0:	sub	r4, r4, #1
   34cc4:	add	r7, r7, #1
   34cc8:	cmp	r0, #0
   34ccc:	beq	34c98 <__flatcc_fb_build_schema@@Base+0xf50>
   34cd0:	b	34ce8 <__flatcc_fb_build_schema@@Base+0xfa0>
   34cd4:	cmp	r0, #0
   34cd8:	beq	34d60 <__flatcc_fb_build_schema@@Base+0x1018>
   34cdc:	mov	r1, #0
   34ce0:	mov	r2, #0
   34ce4:	bl	29530 <fb_scope_table_find@@Base>
   34ce8:	cmp	r0, #0
   34cec:	mov	sl, r0
   34cf0:	bne	34c34 <__flatcc_fb_build_schema@@Base+0xeec>
   34cf4:	b	34d60 <__flatcc_fb_build_schema@@Base+0x1018>
   34cf8:	ldr	r0, [r9, #412]	; 0x19c
   34cfc:	cmp	r0, #0
   34d00:	beq	34d60 <__flatcc_fb_build_schema@@Base+0x1018>
   34d04:	cmp	r2, #0
   34d08:	moveq	r8, r2
   34d0c:	mov	r1, r8
   34d10:	bl	29530 <fb_scope_table_find@@Base>
   34d14:	cmp	r0, #0
   34d18:	beq	34d60 <__flatcc_fb_build_schema@@Base+0x1018>
   34d1c:	ldr	r1, [sp, #12]
   34d20:	ldr	r2, [sp, #8]
   34d24:	add	r0, r0, #4
   34d28:	bl	28b58 <fb_symbol_table_find@@Base>
   34d2c:	mov	r8, r0
   34d30:	cmp	r0, #0
   34d34:	beq	34d60 <__flatcc_fb_build_schema@@Base+0x1018>
   34d38:	ldrh	r0, [r8, #8]
   34d3c:	cmp	r0, #0
   34d40:	beq	34d58 <__flatcc_fb_build_schema@@Base+0x1010>
   34d44:	ldr	r1, [r9, #176]	; 0xb0
   34d48:	cmp	r1, #0
   34d4c:	beq	351ac <__flatcc_fb_build_schema@@Base+0x1464>
   34d50:	cmp	r0, #1
   34d54:	bne	351d0 <__flatcc_fb_build_schema@@Base+0x1488>
   34d58:	str	r8, [r6, #104]	; 0x68
   34d5c:	b	34d84 <__flatcc_fb_build_schema@@Base+0x103c>
   34d60:	ldr	r0, [r5, #8]
   34d64:	ldr	r2, [r5, #12]
   34d68:	ldr	r1, [r5, #4]
   34d6c:	mov	r3, #0
   34d70:	stm	sp, {r0, r2}
   34d74:	mov	r0, r9
   34d78:	ldr	r2, [pc, #3792]	; 35c50 <__flatcc_fb_build_schema@@Base+0x1f08>
   34d7c:	add	r2, pc, r2
   34d80:	bl	2ac84 <__flatcc_error_report@@Base>
   34d84:	mov	sl, #0
   34d88:	b	34588 <__flatcc_fb_build_schema@@Base+0x840>
   34d8c:	cmp	r8, #0
   34d90:	beq	35098 <__flatcc_fb_build_schema@@Base+0x1350>
   34d94:	ldrh	r0, [r8, #16]
   34d98:	cmp	r0, #5
   34d9c:	bne	35114 <__flatcc_fb_build_schema@@Base+0x13cc>
   34da0:	ldr	r2, [sp, #24]
   34da4:	ldrd	r0, [r8, #8]
   34da8:	ldrd	r2, [r2]
   34dac:	subs	r2, r0, r2
   34db0:	sbcs	r1, r1, r3
   34db4:	bcs	35158 <__flatcc_fb_build_schema@@Base+0x1410>
   34db8:	uxth	r0, r0
   34dbc:	mov	r2, #1
   34dc0:	str	r0, [r6, #96]	; 0x60
   34dc4:	str	sl, [r6, #100]	; 0x64
   34dc8:	ldr	r3, [sp, #32]
   34dcc:	ldr	r4, [sp, #52]	; 0x34
   34dd0:	subs	r1, r3, r0
   34dd4:	sbcs	r1, r4, #0
   34dd8:	mov	r1, #0
   34ddc:	movwcc	r1, #1
   34de0:	cmp	r1, #0
   34de4:	movne	r3, r0
   34de8:	movwne	r4, #0
   34dec:	str	r3, [sp, #32]
   34df0:	str	r4, [sp, #52]	; 0x34
   34df4:	b	3509c <__flatcc_fb_build_schema@@Base+0x1354>
   34df8:	mov	sl, #0
   34dfc:	ldr	r1, [r6, #4]
   34e00:	ldr	r3, [r6, #16]
   34e04:	mov	r0, r9
   34e08:	str	sl, [sp]
   34e0c:	str	sl, [sp, #4]
   34e10:	ldr	r2, [pc, #3680]	; 35c78 <__flatcc_fb_build_schema@@Base+0x1f30>
   34e14:	add	r2, pc, r2
   34e18:	b	34f78 <__flatcc_fb_build_schema@@Base+0x1230>
   34e1c:	andeq	r4, r2, sl, asr r6
   34e20:	andeq	r4, r2, r2, asr r6
   34e24:	andeq	r7, r3, r8, ror #31
   34e28:	ldrb	r0, [r6, #73]	; 0x49
   34e2c:	tst	r0, #1
   34e30:	beq	34e5c <__flatcc_fb_build_schema@@Base+0x1114>
   34e34:	mov	r0, #0
   34e38:	ldr	r1, [r6, #4]
   34e3c:	mov	r3, #0
   34e40:	mov	sl, #0
   34e44:	str	r0, [sp]
   34e48:	str	r0, [sp, #4]
   34e4c:	mov	r0, r9
   34e50:	ldr	r2, [pc, #3592]	; 35c60 <__flatcc_fb_build_schema@@Base+0x1f18>
   34e54:	add	r2, pc, r2
   34e58:	bl	2ac84 <__flatcc_error_report@@Base>
   34e5c:	ldr	ip, [r9, #148]	; 0x94
   34e60:	mov	r0, #14
   34e64:	str	r5, [r6, #16]
   34e68:	strh	r0, [r6, #24]
   34e6c:	ldrd	r0, [r5, #112]	; 0x70
   34e70:	strd	r0, [r6, #88]	; 0x58
   34e74:	ldrh	r0, [r5, #104]	; 0x68
   34e78:	ldr	r1, [sp, #56]	; 0x38
   34e7c:	strh	r0, [r6, #74]	; 0x4a
   34e80:	cmp	r1, #0
   34e84:	ldrh	r0, [r5, #8]
   34e88:	cmpeq	r0, #4
   34e8c:	bne	34eb4 <__flatcc_fb_build_schema@@Base+0x116c>
   34e90:	ldr	r1, [sp, #36]	; 0x24
   34e94:	cmp	r1, #0
   34e98:	uxtheq	r2, r7
   34e9c:	streq	r2, [r6, #96]	; 0x60
   34ea0:	streq	sl, [r6, #100]	; 0x64
   34ea4:	adds	r7, r7, #1
   34ea8:	ldr	r1, [sp, #60]	; 0x3c
   34eac:	adc	r1, r1, #0
   34eb0:	str	r1, [sp, #60]	; 0x3c
   34eb4:	ldrh	r1, [r6, #56]	; 0x38
   34eb8:	add	r3, r6, #48	; 0x30
   34ebc:	cmp	r1, #0
   34ec0:	beq	34fa0 <__flatcc_fb_build_schema@@Base+0x1258>
   34ec4:	cmp	r0, #3
   34ec8:	bne	34f58 <__flatcc_fb_build_schema@@Base+0x1210>
   34ecc:	cmp	r1, #13
   34ed0:	str	ip, [sp, #44]	; 0x2c
   34ed4:	bne	3504c <__flatcc_fb_build_schema@@Base+0x1304>
   34ed8:	ldr	r0, [r3]
   34edc:	ldr	r1, [r4, #12]
   34ee0:	str	r3, [sp, #12]
   34ee4:	str	sl, [fp, #-36]	; 0xffffffdc
   34ee8:	cmp	r0, #0
   34eec:	beq	35c28 <__flatcc_fb_build_schema@@Base+0x1ee0>
   34ef0:	mov	r4, r0
   34ef4:	mov	r0, r9
   34ef8:	sub	r3, fp, #36	; 0x24
   34efc:	mov	r2, r4
   34f00:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   34f04:	cmp	r0, #0
   34f08:	beq	34f18 <__flatcc_fb_build_schema@@Base+0x11d0>
   34f0c:	ldrh	r1, [r0, #8]
   34f10:	cmp	r1, #3
   34f14:	beq	34f28 <__flatcc_fb_build_schema@@Base+0x11e0>
   34f18:	ldr	r0, [r4]
   34f1c:	cmp	r0, #0
   34f20:	mov	r0, r5
   34f24:	bne	35144 <__flatcc_fb_build_schema@@Base+0x13fc>
   34f28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   34f2c:	add	r0, r0, #56	; 0x38
   34f30:	ldr	r2, [r1, #4]
   34f34:	ldm	r2, {r1, r2}
   34f38:	bl	28b58 <fb_symbol_table_find@@Base>
   34f3c:	cmp	r0, #0
   34f40:	beq	35144 <__flatcc_fb_build_schema@@Base+0x13fc>
   34f44:	add	r0, r0, #48	; 0x30
   34f48:	vld1.64	{d16-d17}, [r0]
   34f4c:	ldr	r0, [sp, #12]
   34f50:	vst1.64	{d16-d17}, [r0]
   34f54:	b	3508c <__flatcc_fb_build_schema@@Base+0x1344>
   34f58:	mov	sl, #0
   34f5c:	ldr	r1, [r6, #4]
   34f60:	mov	r0, r9
   34f64:	str	sl, [sp]
   34f68:	str	sl, [sp, #4]
   34f6c:	ldr	r2, [pc, #3312]	; 35c64 <__flatcc_fb_build_schema@@Base+0x1f1c>
   34f70:	add	r2, pc, r2
   34f74:	mov	r3, #0
   34f78:	bl	2ac84 <__flatcc_error_report@@Base>
   34f7c:	mov	r0, #1
   34f80:	strh	r0, [r6, #24]
   34f84:	ldr	r8, [pc, #3280]	; 35c5c <__flatcc_fb_build_schema@@Base+0x1f14>
   34f88:	ldr	r5, [sp, #60]	; 0x3c
   34f8c:	ldr	r4, [sp, #28]
   34f90:	add	r8, pc, r8
   34f94:	b	353b0 <__flatcc_fb_build_schema@@Base+0x1668>
   34f98:	andeq	r4, r2, r3, lsr #23
   34f9c:	andeq	r4, r2, ip, lsr #22
   34fa0:	cmp	r0, #3
   34fa4:	bne	34b08 <__flatcc_fb_build_schema@@Base+0xdc0>
   34fa8:	mov	r0, #5
   34fac:	mov	r1, r5
   34fb0:	str	ip, [sp, #44]	; 0x2c
   34fb4:	mov	sl, #0
   34fb8:	mov	r4, r3
   34fbc:	strh	r0, [r6, #56]	; 0x38
   34fc0:	mov	r0, #0
   34fc4:	str	r0, [r3]
   34fc8:	str	r0, [r3, #4]
   34fcc:	mov	r0, r9
   34fd0:	ldr	r2, [r5, #40]	; 0x28
   34fd4:	bl	36ed4 <__flatcc_fb_coerce_scalar_type@@Base>
   34fd8:	cmp	r0, #0
   34fdc:	bne	34ae0 <__flatcc_fb_build_schema@@Base+0xd98>
   34fe0:	ldr	r0, [r9, #212]	; 0xd4
   34fe4:	cmp	r0, #0
   34fe8:	beq	3508c <__flatcc_fb_build_schema@@Base+0x1344>
   34fec:	ldr	r0, [r6, #16]
   34ff0:	mov	r1, r4
   34ff4:	add	r0, r0, #72	; 0x48
   34ff8:	bl	3e140 <fb_value_set_find_item@@Base>
   34ffc:	cmp	r0, #0
   35000:	bne	3508c <__flatcc_fb_build_schema@@Base+0x1344>
   35004:	mov	sl, #0
   35008:	ldr	r3, [r5, #4]
   3500c:	ldr	r1, [r6, #4]
   35010:	mov	r0, r9
   35014:	str	sl, [sp]
   35018:	str	sl, [sp, #4]
   3501c:	ldr	r2, [pc, #3152]	; 35c74 <__flatcc_fb_build_schema@@Base+0x1f2c>
   35020:	add	r2, pc, r2
   35024:	b	34f78 <__flatcc_fb_build_schema@@Base+0x1230>
   35028:	mov	sl, #0
   3502c:	ldr	r3, [r5, #4]
   35030:	ldr	r1, [r6, #4]
   35034:	mov	r0, r9
   35038:	str	sl, [sp]
   3503c:	str	sl, [sp, #4]
   35040:	ldr	r2, [pc, #3104]	; 35c68 <__flatcc_fb_build_schema@@Base+0x1f20>
   35044:	add	r2, pc, r2
   35048:	b	34f78 <__flatcc_fb_build_schema@@Base+0x1230>
   3504c:	ldr	r2, [r5, #40]	; 0x28
   35050:	mov	r0, r9
   35054:	mov	r1, r6
   35058:	mov	r4, r3
   3505c:	bl	36ed4 <__flatcc_fb_coerce_scalar_type@@Base>
   35060:	cmp	r0, #0
   35064:	bne	34ae0 <__flatcc_fb_build_schema@@Base+0xd98>
   35068:	ldr	r0, [r9, #212]	; 0xd4
   3506c:	cmp	r0, #0
   35070:	beq	3508c <__flatcc_fb_build_schema@@Base+0x1344>
   35074:	ldr	r0, [r6, #16]
   35078:	mov	r1, r4
   3507c:	add	r0, r0, #72	; 0x48
   35080:	bl	3e140 <fb_value_set_find_item@@Base>
   35084:	cmp	r0, #0
   35088:	beq	352dc <__flatcc_fb_build_schema@@Base+0x1594>
   3508c:	ldr	ip, [sp, #44]	; 0x2c
   35090:	b	34b08 <__flatcc_fb_build_schema@@Base+0xdc0>
   35094:	andeq	r4, r2, sl, lsr sl
   35098:	mov	r2, #1
   3509c:	mov	r0, #0
   350a0:	str	r0, [sp, #56]	; 0x38
   350a4:	ldr	r0, [sp, #36]	; 0x24
   350a8:	cmp	r0, #0
   350ac:	beq	34b14 <__flatcc_fb_build_schema@@Base+0xdcc>
   350b0:	mov	r4, r6
   350b4:	ldr	r1, [sp, #40]	; 0x28
   350b8:	ldr	r0, [r4, #96]!	; 0x60
   350bc:	ldrb	r1, [r1, r0]
   350c0:	cmp	r1, #0
   350c4:	beq	351f4 <__flatcc_fb_build_schema@@Base+0x14ac>
   350c8:	cmp	r1, #2
   350cc:	str	ip, [sp, #44]	; 0x2c
   350d0:	bne	3520c <__flatcc_fb_build_schema@@Base+0x14c4>
   350d4:	mov	sl, #0
   350d8:	ldr	r1, [r8, #4]
   350dc:	mov	r0, r9
   350e0:	mov	r3, #0
   350e4:	str	sl, [sp]
   350e8:	str	sl, [sp, #4]
   350ec:	ldr	r2, [pc, #2968]	; 35c8c <__flatcc_fb_build_schema@@Base+0x1f44>
   350f0:	add	r2, pc, r2
   350f4:	bl	2ac84 <__flatcc_error_report@@Base>
   350f8:	mov	r0, #1
   350fc:	str	r0, [sp, #56]	; 0x38
   35100:	ldr	r8, [pc, #2952]	; 35c90 <__flatcc_fb_build_schema@@Base+0x1f48>
   35104:	ldr	r5, [sp, #60]	; 0x3c
   35108:	add	r8, pc, r8
   3510c:	b	35360 <__flatcc_fb_build_schema@@Base+0x1618>
   35110:	muleq	r2, r1, sl
   35114:	ldr	r1, [r8, #4]
   35118:	ldr	r5, [sp, #60]	; 0x3c
   3511c:	mov	r4, ip
   35120:	cmp	r0, #4
   35124:	mov	sl, #0
   35128:	bne	35178 <__flatcc_fb_build_schema@@Base+0x1430>
   3512c:	str	sl, [sp]
   35130:	str	sl, [sp, #4]
   35134:	mov	r0, r9
   35138:	ldr	r2, [pc, #2880]	; 35c80 <__flatcc_fb_build_schema@@Base+0x1f38>
   3513c:	add	r2, pc, r2
   35140:	b	3518c <__flatcc_fb_build_schema@@Base+0x1444>
   35144:	ldr	r1, [r6, #48]	; 0x30
   35148:	ldr	r2, [pc, #2844]	; 35c6c <__flatcc_fb_build_schema@@Base+0x1f24>
   3514c:	mov	r0, r9
   35150:	add	r2, pc, r2
   35154:	b	34ad8 <__flatcc_fb_build_schema@@Base+0xd90>
   35158:	mov	sl, #0
   3515c:	ldr	r1, [r6, #4]
   35160:	mov	r0, r9
   35164:	str	sl, [sp]
   35168:	str	sl, [sp, #4]
   3516c:	ldr	r2, [pc, #2824]	; 35c7c <__flatcc_fb_build_schema@@Base+0x1f34>
   35170:	add	r2, pc, r2
   35174:	b	34bb0 <__flatcc_fb_build_schema@@Base+0xe68>
   35178:	str	sl, [sp]
   3517c:	str	sl, [sp, #4]
   35180:	mov	r0, r9
   35184:	ldr	r2, [pc, #2812]	; 35c88 <__flatcc_fb_build_schema@@Base+0x1f40>
   35188:	add	r2, pc, r2
   3518c:	mov	r3, #0
   35190:	bl	2ac84 <__flatcc_error_report@@Base>
   35194:	mov	r0, #1
   35198:	mov	ip, r4
   3519c:	str	r0, [sp, #56]	; 0x38
   351a0:	ldr	r8, [pc, #2780]	; 35c84 <__flatcc_fb_build_schema@@Base+0x1f3c>
   351a4:	add	r8, pc, r8
   351a8:	b	34bd4 <__flatcc_fb_build_schema@@Base+0xe8c>
   351ac:	mov	sl, #0
   351b0:	ldr	r3, [r8, #4]
   351b4:	ldr	r1, [r5, #4]
   351b8:	mov	r0, r9
   351bc:	str	sl, [sp]
   351c0:	str	sl, [sp, #4]
   351c4:	ldr	r2, [pc, #2696]	; 35c54 <__flatcc_fb_build_schema@@Base+0x1f0c>
   351c8:	add	r2, pc, r2
   351cc:	b	34584 <__flatcc_fb_build_schema@@Base+0x83c>
   351d0:	mov	sl, #0
   351d4:	ldr	r3, [r8, #4]
   351d8:	ldr	r1, [r5, #4]
   351dc:	mov	r0, r9
   351e0:	str	sl, [sp]
   351e4:	str	sl, [sp, #4]
   351e8:	ldr	r2, [pc, #2664]	; 35c58 <__flatcc_fb_build_schema@@Base+0x1f10>
   351ec:	add	r2, pc, r2
   351f0:	b	34584 <__flatcc_fb_build_schema@@Base+0x83c>
   351f4:	ldr	r1, [sp, #40]	; 0x28
   351f8:	strb	r2, [r1, r0]
   351fc:	cmp	r5, #0
   35200:	bne	3523c <__flatcc_fb_build_schema@@Base+0x14f4>
   35204:	b	34b14 <__flatcc_fb_build_schema@@Base+0xdcc>
   35208:	andeq	r4, r2, lr, ror #20
   3520c:	mov	r0, #0
   35210:	ldr	r1, [r8, #4]
   35214:	mov	r3, #0
   35218:	str	r0, [sp]
   3521c:	str	r0, [sp, #4]
   35220:	mov	r0, r9
   35224:	ldr	r2, [pc, #2664]	; 35c94 <__flatcc_fb_build_schema@@Base+0x1f4c>
   35228:	add	r2, pc, r2
   3522c:	bl	2ac84 <__flatcc_error_report@@Base>
   35230:	ldr	ip, [sp, #44]	; 0x2c
   35234:	cmp	r5, #0
   35238:	beq	34b14 <__flatcc_fb_build_schema@@Base+0xdcc>
   3523c:	ldrh	r0, [r5, #8]
   35240:	cmp	r0, #4
   35244:	bne	34b14 <__flatcc_fb_build_schema@@Base+0xdcc>
   35248:	str	ip, [sp, #44]	; 0x2c
   3524c:	ldrh	r0, [r6, #24]
   35250:	ldr	r5, [sp, #60]	; 0x3c
   35254:	ldrd	r2, [r4]
   35258:	rsbs	r1, r2, #1
   3525c:	rscs	r1, r3, #0
   35260:	bcc	35290 <__flatcc_fb_build_schema@@Base+0x1548>
   35264:	mov	sl, #0
   35268:	ldr	r1, [r8, #4]
   3526c:	cmp	r0, #11
   35270:	str	sl, [sp]
   35274:	str	sl, [sp, #4]
   35278:	ldr	r2, [pc, #2584]	; 35c98 <__flatcc_fb_build_schema@@Base+0x1f50>
   3527c:	ldr	r0, [pc, #2584]	; 35c9c <__flatcc_fb_build_schema@@Base+0x1f54>
   35280:	add	r2, pc, r2
   35284:	add	r0, pc, r0
   35288:	b	35340 <__flatcc_fb_build_schema@@Base+0x15f8>
   3528c:	andeq	r4, r2, r8, asr r8
   35290:	sub	r1, r2, #1
   35294:	ldr	r2, [sp, #40]	; 0x28
   35298:	ldrb	r2, [r2, r1]
   3529c:	cmp	r2, #0
   352a0:	beq	352fc <__flatcc_fb_build_schema@@Base+0x15b4>
   352a4:	cmp	r2, #2
   352a8:	bne	3531c <__flatcc_fb_build_schema@@Base+0x15d4>
   352ac:	mov	sl, #0
   352b0:	ldr	r1, [r8, #4]
   352b4:	cmp	r0, #11
   352b8:	str	sl, [sp]
   352bc:	str	sl, [sp, #4]
   352c0:	ldr	r2, [pc, #2520]	; 35ca0 <__flatcc_fb_build_schema@@Base+0x1f58>
   352c4:	ldr	r0, [pc, #2520]	; 35ca4 <__flatcc_fb_build_schema@@Base+0x1f5c>
   352c8:	add	r2, pc, r2
   352cc:	add	r0, pc, r0
   352d0:	b	35340 <__flatcc_fb_build_schema@@Base+0x15f8>
   352d4:	ldrdeq	r4, [r2], -r1
   352d8:			; <UNDEFINED> instruction: 0x000249b8
   352dc:	mov	sl, #0
   352e0:	ldr	r1, [r6, #4]
   352e4:	mov	r0, r9
   352e8:	str	sl, [sp]
   352ec:	str	sl, [sp, #4]
   352f0:	ldr	r2, [pc, #2424]	; 35c70 <__flatcc_fb_build_schema@@Base+0x1f28>
   352f4:	add	r2, pc, r2
   352f8:	b	34f74 <__flatcc_fb_build_schema@@Base+0x122c>
   352fc:	ldr	r2, [sp, #40]	; 0x28
   35300:	mov	r0, #2
   35304:	mov	sl, #0
   35308:	strb	r0, [r2, r1]
   3530c:	b	35358 <__flatcc_fb_build_schema@@Base+0x1610>
   35310:	andeq	r4, r2, r7, lsl #20
   35314:	andeq	r4, r2, ip, ror #15
   35318:	strdeq	r4, [r2], -r7
   3531c:	mov	sl, #0
   35320:	ldr	r1, [r8, #4]
   35324:	cmp	r0, #11
   35328:	str	sl, [sp]
   3532c:	str	sl, [sp, #4]
   35330:	ldr	r2, [pc, #2416]	; 35ca8 <__flatcc_fb_build_schema@@Base+0x1f60>
   35334:	ldr	r0, [pc, #2416]	; 35cac <__flatcc_fb_build_schema@@Base+0x1f64>
   35338:	add	r2, pc, r2
   3533c:	add	r0, pc, r0
   35340:	moveq	r2, r0
   35344:	mov	r0, r9
   35348:	mov	r3, #0
   3534c:	bl	2ac84 <__flatcc_error_report@@Base>
   35350:	mov	r0, #1
   35354:	str	r0, [sp, #56]	; 0x38
   35358:	ldr	r8, [pc, #2384]	; 35cb0 <__flatcc_fb_build_schema@@Base+0x1f68>
   3535c:	add	r8, pc, r8
   35360:	ldr	ip, [sp, #44]	; 0x2c
   35364:	b	34bd4 <__flatcc_fb_build_schema@@Base+0xe8c>
   35368:	andeq	r4, r2, r8, lsl #18
   3536c:	andeq	r4, r2, r3, ror r8
   35370:	andeq	r4, r2, r4, ror r7
   35374:	andeq	r4, r2, ip, lsr r1
   35378:	mov	r0, r4
   3537c:	mov	r1, r6
   35380:	mov	r2, #1
   35384:	bl	28b28 <fb_symbol_table_insert_item@@Base>
   35388:	cmp	r0, #0
   3538c:	beq	344d4 <__flatcc_fb_build_schema@@Base+0x78c>
   35390:	ldr	r3, [r0, #4]
   35394:	ldr	r1, [r6, #4]
   35398:	str	sl, [sp]
   3539c:	str	sl, [sp, #4]
   353a0:	mov	r0, r9
   353a4:	ldr	r2, [pc, #2204]	; 35c48 <__flatcc_fb_build_schema@@Base+0x1f00>
   353a8:	add	r2, pc, r2
   353ac:	bl	2ac84 <__flatcc_error_report@@Base>
   353b0:	ldr	r6, [r6]
   353b4:	cmp	r6, #0
   353b8:	bne	35378 <__flatcc_fb_build_schema@@Base+0x1630>
   353bc:	ldr	r1, [sp, #56]	; 0x38
   353c0:	ldr	r2, [sp, #20]
   353c4:	mov	r0, #0
   353c8:	cmp	r1, #0
   353cc:	bne	35640 <__flatcc_fb_build_schema@@Base+0x18f8>
   353d0:	b	35628 <__flatcc_fb_build_schema@@Base+0x18e0>
   353d4:	ldrh	r0, [r7, #48]	; 0x30
   353d8:	cmp	r0, #1
   353dc:	beq	35818 <__flatcc_fb_build_schema@@Base+0x1ad0>
   353e0:	cmp	r0, #0
   353e4:	bne	35c08 <__flatcc_fb_build_schema@@Base+0x1ec0>
   353e8:	ldr	r0, [r7, #28]
   353ec:	cmp	r0, #0
   353f0:	beq	35414 <__flatcc_fb_build_schema@@Base+0x16cc>
   353f4:	ldr	r1, [r7, #4]
   353f8:	str	sl, [sp]
   353fc:	str	sl, [sp, #4]
   35400:	mov	r0, r9
   35404:	mov	r3, #0
   35408:	ldr	r2, [pc, #2224]	; 35cc0 <__flatcc_fb_build_schema@@Base+0x1f78>
   3540c:	add	r2, pc, r2
   35410:	bl	2ac84 <__flatcc_error_report@@Base>
   35414:	ldr	r5, [r7, #20]
   35418:	cmp	r5, #0
   3541c:	beq	35818 <__flatcc_fb_build_schema@@Base+0x1ad0>
   35420:	add	r6, r7, #56	; 0x38
   35424:	b	354c4 <__flatcc_fb_build_schema@@Base+0x177c>
   35428:			; <UNDEFINED> instruction: 0x000254b8
   3542c:	str	r0, [r5, #32]
   35430:	mov	r0, #14
   35434:	mov	r3, #0
   35438:	strh	r0, [r5, #40]	; 0x28
   3543c:	mov	r0, r9
   35440:	ldr	r2, [r5, #16]
   35444:	ldr	r1, [r7, #12]
   35448:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   3544c:	cmp	r0, #0
   35450:	beq	35480 <__flatcc_fb_build_schema@@Base+0x1738>
   35454:	ldrh	r1, [r0, #8]
   35458:	cmp	r1, #0
   3545c:	beq	35494 <__flatcc_fb_build_schema@@Base+0x174c>
   35460:	ldr	r3, [r0, #4]
   35464:	ldr	r1, [r5, #4]
   35468:	str	sl, [sp]
   3546c:	str	sl, [sp, #4]
   35470:	mov	r0, r9
   35474:	ldr	r2, [pc, #2140]	; 35cd8 <__flatcc_fb_build_schema@@Base+0x1f90>
   35478:	add	r2, pc, r2
   3547c:	b	355b4 <__flatcc_fb_build_schema@@Base+0x186c>
   35480:	ldr	r1, [r5, #16]
   35484:	ldr	r2, [pc, #2120]	; 35cd4 <__flatcc_fb_build_schema@@Base+0x1f8c>
   35488:	mov	r0, r9
   3548c:	add	r2, pc, r2
   35490:	b	355d0 <__flatcc_fb_build_schema@@Base+0x1888>
   35494:	str	sl, [r5, #88]	; 0x58
   35498:	str	sl, [r5, #92]	; 0x5c
   3549c:	str	r0, [r5, #16]
   354a0:	mov	r0, #14
   354a4:	mov	r2, #4
   354a8:	add	r3, sp, #64	; 0x40
   354ac:	strh	r0, [r5, #24]
   354b0:	mov	r0, r9
   354b4:	ldr	r1, [r5, #64]	; 0x40
   354b8:	bl	36af8 <__flatcc_fb_build_schema@@Base+0x2db0>
   354bc:	strh	r0, [r5, #72]	; 0x48
   354c0:	b	355e0 <__flatcc_fb_build_schema@@Base+0x1898>
   354c4:	mov	r0, r6
   354c8:	mov	r1, r5
   354cc:	mov	r2, #1
   354d0:	bl	28b28 <fb_symbol_table_insert_item@@Base>
   354d4:	cmp	r0, #0
   354d8:	beq	35504 <__flatcc_fb_build_schema@@Base+0x17bc>
   354dc:	ldr	r3, [r0, #4]
   354e0:	ldr	r1, [r5, #4]
   354e4:	mov	r0, r9
   354e8:	mov	r2, r8
   354ec:	str	sl, [sp]
   354f0:	str	sl, [sp, #4]
   354f4:	bl	2ac84 <__flatcc_error_report@@Base>
   354f8:	b	355e0 <__flatcc_fb_build_schema@@Base+0x1898>
   354fc:	andeq	r5, r2, ip, asr #11
   35500:	strdeq	r5, [r2], -r3
   35504:	ldrh	r0, [r5, #8]
   35508:	cmp	r0, #5
   3550c:	bne	3575c <__flatcc_fb_build_schema@@Base+0x1a14>
   35510:	ldrh	r0, [r5, #56]	; 0x38
   35514:	cmp	r0, #0
   35518:	beq	3553c <__flatcc_fb_build_schema@@Base+0x17f4>
   3551c:	ldr	r1, [r5, #4]
   35520:	str	sl, [sp]
   35524:	str	sl, [sp, #4]
   35528:	mov	r0, r9
   3552c:	mov	r3, #0
   35530:	ldr	r2, [pc, #1932]	; 35cc4 <__flatcc_fb_build_schema@@Base+0x1f7c>
   35534:	add	r2, pc, r2
   35538:	bl	2ac84 <__flatcc_error_report@@Base>
   3553c:	ldrh	r0, [r5, #24]
   35540:	cmp	r0, #1
   35544:	beq	355e0 <__flatcc_fb_build_schema@@Base+0x1898>
   35548:	cmp	r0, #12
   3554c:	beq	35570 <__flatcc_fb_build_schema@@Base+0x1828>
   35550:	ldr	r1, [r5, #4]
   35554:	str	sl, [sp]
   35558:	str	sl, [sp, #4]
   3555c:	mov	r0, r9
   35560:	mov	r3, #0
   35564:	ldr	r2, [pc, #1884]	; 35cc8 <__flatcc_fb_build_schema@@Base+0x1f80>
   35568:	add	r2, pc, r2
   3556c:	bl	2ac84 <__flatcc_error_report@@Base>
   35570:	ldr	r2, [r5, #32]
   35574:	ldr	r1, [r7, #12]
   35578:	mov	r0, r9
   3557c:	mov	r3, #0
   35580:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   35584:	cmp	r0, #0
   35588:	beq	355c0 <__flatcc_fb_build_schema@@Base+0x1878>
   3558c:	ldrh	r1, [r0, #8]
   35590:	cmp	r1, #0
   35594:	beq	3542c <__flatcc_fb_build_schema@@Base+0x16e4>
   35598:	ldr	r3, [r0, #4]
   3559c:	ldr	r1, [r5, #4]
   355a0:	str	sl, [sp]
   355a4:	str	sl, [sp, #4]
   355a8:	mov	r0, r9
   355ac:	ldr	r2, [pc, #1820]	; 35cd0 <__flatcc_fb_build_schema@@Base+0x1f88>
   355b0:	add	r2, pc, r2
   355b4:	bl	2ac84 <__flatcc_error_report@@Base>
   355b8:	b	355d8 <__flatcc_fb_build_schema@@Base+0x1890>
   355bc:	andeq	r4, r2, r8, lsl sl
   355c0:	ldr	r1, [r5, #32]
   355c4:	ldr	r2, [pc, #1792]	; 35ccc <__flatcc_fb_build_schema@@Base+0x1f84>
   355c8:	mov	r0, r9
   355cc:	add	r2, pc, r2
   355d0:	mov	r3, r5
   355d4:	bl	2aeec <error_ref_sym@@Base>
   355d8:	mov	r0, #1
   355dc:	strh	r0, [r5, #24]
   355e0:	ldr	r5, [r5]
   355e4:	cmp	r5, #0
   355e8:	bne	354c4 <__flatcc_fb_build_schema@@Base+0x177c>
   355ec:	b	35818 <__flatcc_fb_build_schema@@Base+0x1ad0>
   355f0:	andeq	r4, r2, r0, lsl sl
   355f4:	andeq	r4, r2, ip, lsl #20
   355f8:	andeq	r4, r2, fp, lsl sl
   355fc:	mov	r0, #0
   35600:	mov	r2, #0
   35604:	mov	r7, #0
   35608:	mov	r5, #0
   3560c:	str	r0, [sp, #40]	; 0x28
   35610:	mov	r0, #0
   35614:	str	r0, [sp, #32]
   35618:	mov	r0, #0
   3561c:	str	r0, [sp, #52]	; 0x34
   35620:	mov	r0, #0
   35624:	str	r0, [sp, #36]	; 0x24
   35628:	ldr	r0, [sp, #48]	; 0x30
   3562c:	mov	r1, #0
   35630:	str	r7, [r0, #96]	; 0x60
   35634:	str	r5, [r0, #100]	; 0x64
   35638:	mov	r0, #1
   3563c:	str	r1, [sp, #56]	; 0x38
   35640:	ldr	r1, [sp, #32]
   35644:	subs	r1, r1, r7
   35648:	ldr	r1, [sp, #52]	; 0x34
   3564c:	sbcs	r1, r1, r5
   35650:	bcc	35728 <__flatcc_fb_build_schema@@Base+0x19e0>
   35654:	orrs	r1, r7, r5
   35658:	beq	35728 <__flatcc_fb_build_schema@@Base+0x19e0>
   3565c:	cmp	r0, #0
   35660:	ldr	r7, [sp, #48]	; 0x30
   35664:	ldrne	r0, [sp, #36]	; 0x24
   35668:	cmpne	r0, #0
   3566c:	beq	357ac <__flatcc_fb_build_schema@@Base+0x1a64>
   35670:	ldr	r0, [sp, #32]
   35674:	ldr	r1, [sp, #52]	; 0x34
   35678:	orrs	r0, r0, r1
   3567c:	mov	r0, #1
   35680:	str	r0, [sp, #56]	; 0x38
   35684:	beq	357ac <__flatcc_fb_build_schema@@Base+0x1a64>
   35688:	str	r2, [sp, #20]
   3568c:	ldr	r1, [sp, #40]	; 0x28
   35690:	ldr	r2, [sp, #32]
   35694:	mov	r5, #0
   35698:	mov	r4, #10
   3569c:	mov	r6, #0
   356a0:	ldrb	r0, [r1, r5]
   356a4:	cmp	r0, #0
   356a8:	bne	3570c <__flatcc_fb_build_schema@@Base+0x19c4>
   356ac:	cmp	r4, #0
   356b0:	beq	35788 <__flatcc_fb_build_schema@@Base+0x1a40>
   356b4:	ldr	r1, [pc, #1532]	; 35cb8 <__flatcc_fb_build_schema@@Base+0x1f70>
   356b8:	mov	sl, r8
   356bc:	add	r8, sp, #112	; 0x70
   356c0:	mov	r2, r5
   356c4:	mov	r3, r6
   356c8:	mov	r0, r8
   356cc:	add	r1, pc, r1
   356d0:	bl	14a24 <sprintf@plt>
   356d4:	ldr	r1, [r7, #4]
   356d8:	mov	r0, #0
   356dc:	mov	r2, r8
   356e0:	mov	r3, #0
   356e4:	mov	r8, sl
   356e8:	mov	sl, #0
   356ec:	str	r0, [sp]
   356f0:	mov	r0, #0
   356f4:	str	r0, [sp, #4]
   356f8:	mov	r0, r9
   356fc:	bl	2ac84 <__flatcc_error_report@@Base>
   35700:	ldr	r2, [sp, #32]
   35704:	ldr	r1, [sp, #40]	; 0x28
   35708:	sub	r4, r4, #1
   3570c:	adds	r5, r5, #1
   35710:	adc	r6, r6, #0
   35714:	subs	r0, r5, r2
   35718:	ldr	r0, [sp, #52]	; 0x34
   3571c:	sbcs	r0, r6, r0
   35720:	bcc	356a0 <__flatcc_fb_build_schema@@Base+0x1958>
   35724:	b	357a8 <__flatcc_fb_build_schema@@Base+0x1a60>
   35728:	ldr	r7, [sp, #48]	; 0x30
   3572c:	b	357ac <__flatcc_fb_build_schema@@Base+0x1a64>
   35730:	andeq	r4, r2, r2, lsr #19
   35734:	ldr	r1, [r6, #4]
   35738:	str	sl, [sp]
   3573c:	str	sl, [sp, #4]
   35740:	mov	r0, r9
   35744:	mov	r3, #0
   35748:	ldr	r2, [pc, #1276]	; 35c4c <__flatcc_fb_build_schema@@Base+0x1f04>
   3574c:	add	r2, pc, r2
   35750:	bl	2ac84 <__flatcc_error_report@@Base>
   35754:	ldr	r7, [sp, #48]	; 0x30
   35758:	b	35810 <__flatcc_fb_build_schema@@Base+0x1ac8>
   3575c:	ldr	r1, [r5, #4]
   35760:	str	sl, [sp]
   35764:	str	sl, [sp, #4]
   35768:	mov	r0, r9
   3576c:	mov	r3, #0
   35770:	ldr	r2, [pc, #1380]	; 35cdc <__flatcc_fb_build_schema@@Base+0x1f94>
   35774:	add	r2, pc, r2
   35778:	bl	2ac84 <__flatcc_error_report@@Base>
   3577c:	b	35810 <__flatcc_fb_build_schema@@Base+0x1ac8>
   35780:	andeq	r5, r2, r4, lsl r3
   35784:	andeq	r4, r2, r0, ror #18
   35788:	ldr	r1, [r7, #4]
   3578c:	str	sl, [sp]
   35790:	str	sl, [sp, #4]
   35794:	mov	r0, r9
   35798:	mov	r3, #0
   3579c:	ldr	r2, [pc, #1296]	; 35cb4 <__flatcc_fb_build_schema@@Base+0x1f6c>
   357a0:	add	r2, pc, r2
   357a4:	bl	2ac84 <__flatcc_error_report@@Base>
   357a8:	ldr	r2, [sp, #20]
   357ac:	mov	r0, #0
   357b0:	cmp	r2, #0
   357b4:	beq	357fc <__flatcc_fb_build_schema@@Base+0x1ab4>
   357b8:	ldrh	r1, [r7, #10]
   357bc:	cmp	r2, #2
   357c0:	orr	r1, r1, #8
   357c4:	strh	r1, [r7, #10]
   357c8:	blt	357fc <__flatcc_fb_build_schema@@Base+0x1ab4>
   357cc:	ldr	r1, [r9, #156]	; 0x9c
   357d0:	cmp	r1, #0
   357d4:	bne	357fc <__flatcc_fb_build_schema@@Base+0x1ab4>
   357d8:	ldr	r1, [r7, #4]
   357dc:	str	sl, [sp]
   357e0:	str	sl, [sp, #4]
   357e4:	mov	r0, r9
   357e8:	mov	r3, #0
   357ec:	ldr	r2, [pc, #1224]	; 35cbc <__flatcc_fb_build_schema@@Base+0x1f74>
   357f0:	add	r2, pc, r2
   357f4:	bl	2ac84 <__flatcc_error_report@@Base>
   357f8:	mvn	r0, #0
   357fc:	ldr	r1, [sp, #56]	; 0x38
   35800:	cmp	r1, #0
   35804:	bne	35810 <__flatcc_fb_build_schema@@Base+0x1ac8>
   35808:	cmp	r0, #0
   3580c:	beq	35818 <__flatcc_fb_build_schema@@Base+0x1ad0>
   35810:	mov	r0, #1
   35814:	strh	r0, [r7, #48]	; 0x30
   35818:	ldr	r7, [r7]
   3581c:	cmp	r7, #0
   35820:	bne	34440 <__flatcc_fb_build_schema@@Base+0x6f8>
   35824:	ldr	r0, [r9, #396]	; 0x18c
   35828:	cmp	r0, #0
   3582c:	beq	35858 <__flatcc_fb_build_schema@@Base+0x1b10>
   35830:	mov	r2, #0
   35834:	mov	r1, r0
   35838:	ldr	r0, [r0, #120]	; 0x78
   3583c:	str	r2, [r1, #120]	; 0x78
   35840:	mov	r2, r1
   35844:	cmp	r0, #0
   35848:	bne	35834 <__flatcc_fb_build_schema@@Base+0x1aec>
   3584c:	b	3585c <__flatcc_fb_build_schema@@Base+0x1b14>
   35850:	andeq	r4, r2, r9, lsl #17
   35854:	andeq	r4, r2, sl, lsr r8
   35858:	mov	r1, #0
   3585c:	str	r1, [r9, #396]	; 0x18c
   35860:	ldr	r0, [r9, #392]	; 0x188
   35864:	cmp	r0, #0
   35868:	beq	35a90 <__flatcc_fb_build_schema@@Base+0x1d48>
   3586c:	add	lr, sp, #112	; 0x70
   35870:	add	r5, sp, #64	; 0x40
   35874:	vmov.i32	q8, #0	; 0x00000000
   35878:	mov	r6, #0
   3587c:	movw	r3, #65535	; 0xffff
   35880:	mov	r8, #1
   35884:	movw	r2, #34432	; 0x8680
   35888:	add	r1, lr, #32
   3588c:	str	r1, [sp, #52]	; 0x34
   35890:	add	r1, lr, #16
   35894:	str	r1, [sp, #60]	; 0x3c
   35898:	add	r1, r5, #16
   3589c:	str	r1, [sp, #56]	; 0x38
   358a0:	ldrh	r1, [r0, #8]
   358a4:	cmp	r1, #0
   358a8:	bne	35a84 <__flatcc_fb_build_schema@@Base+0x1d3c>
   358ac:	ldrb	r1, [r0, #92]	; 0x5c
   358b0:	ldr	sl, [r0, #20]
   358b4:	tst	r1, #8
   358b8:	bne	359b0 <__flatcc_fb_build_schema@@Base+0x1c68>
   358bc:	mov	r1, lr
   358c0:	mov	r7, #32
   358c4:	cmp	sl, #0
   358c8:	vst1.64	{d16-d17}, [r1], r7
   358cc:	str	r6, [r1]
   358d0:	ldr	r1, [sp, #60]	; 0x3c
   358d4:	vst1.64	{d16-d17}, [r1]
   358d8:	ldr	r1, [sp, #56]	; 0x38
   358dc:	vst1.64	{d16-d17}, [r1]
   358e0:	mov	r1, r5
   358e4:	vst1.64	{d16-d17}, [r1], r7
   358e8:	str	r6, [r1]
   358ec:	beq	359ec <__flatcc_fb_build_schema@@Base+0x1ca4>
   358f0:	mov	ip, sl
   358f4:	ldrh	r1, [ip, #24]
   358f8:	cmp	r1, #15
   358fc:	bhi	359a0 <__flatcc_fb_build_schema@@Base+0x1c58>
   35900:	tst	r2, r8, lsl r1
   35904:	beq	35960 <__flatcc_fb_build_schema@@Base+0x1c18>
   35908:	ldr	r4, [r9, #192]	; 0xc0
   3590c:	tst	r4, r3
   35910:	beq	35b74 <__flatcc_fb_build_schema@@Base+0x1e2c>
   35914:	ubfx	r1, r4, #1, #15
   35918:	clz	r1, r1
   3591c:	rsb	r1, r1, #32
   35920:	uxth	r4, r1
   35924:	cmp	r4, #7
   35928:	movcs	r1, #7
   3592c:	uxth	r1, r1
   35930:	ldr	r4, [lr, r1, lsl #2]
   35934:	cmp	r4, #0
   35938:	ldrne	r4, [r5, r1, lsl #2]
   3593c:	strne	ip, [r4]
   35940:	streq	ip, [lr, r1, lsl #2]
   35944:	add	r1, r5, r1, lsl #2
   35948:	add	r4, ip, #108	; 0x6c
   3594c:	str	r4, [r1]
   35950:	ldr	ip, [ip]
   35954:	cmp	ip, #0
   35958:	bne	358f4 <__flatcc_fb_build_schema@@Base+0x1bac>
   3595c:	b	359ec <__flatcc_fb_build_schema@@Base+0x1ca4>
   35960:	cmp	r1, #14
   35964:	bne	35998 <__flatcc_fb_build_schema@@Base+0x1c50>
   35968:	ldr	r1, [ip, #16]
   3596c:	ldrh	r4, [r1, #8]
   35970:	cmp	r4, #1
   35974:	beq	35988 <__flatcc_fb_build_schema@@Base+0x1c40>
   35978:	cmp	r4, #4
   3597c:	beq	35908 <__flatcc_fb_build_schema@@Base+0x1bc0>
   35980:	cmp	r4, #3
   35984:	bne	35908 <__flatcc_fb_build_schema@@Base+0x1bc0>
   35988:	ldrh	r4, [r1, #104]	; 0x68
   3598c:	tst	r4, r3
   35990:	bne	35914 <__flatcc_fb_build_schema@@Base+0x1bcc>
   35994:	b	35b74 <__flatcc_fb_build_schema@@Base+0x1e2c>
   35998:	cmp	r1, #1
   3599c:	beq	35a5c <__flatcc_fb_build_schema@@Base+0x1d14>
   359a0:	ldrh	r4, [ip, #74]	; 0x4a
   359a4:	tst	r4, r3
   359a8:	bne	35914 <__flatcc_fb_build_schema@@Base+0x1bcc>
   359ac:	b	35b74 <__flatcc_fb_build_schema@@Base+0x1e2c>
   359b0:	cmp	sl, #0
   359b4:	mov	r1, lr
   359b8:	str	r6, [sp, #112]	; 0x70
   359bc:	beq	359d8 <__flatcc_fb_build_schema@@Base+0x1c90>
   359c0:	mov	r1, lr
   359c4:	str	sl, [r1]
   359c8:	mov	r1, sl
   359cc:	ldr	sl, [r1], #108	; 0x6c
   359d0:	cmp	sl, #0
   359d4:	bne	359c4 <__flatcc_fb_build_schema@@Base+0x1c7c>
   359d8:	str	r6, [r1]
   359dc:	ldr	r1, [sp, #112]	; 0x70
   359e0:	str	r1, [r0, #24]
   359e4:	b	35a84 <__flatcc_fb_build_schema@@Base+0x1d3c>
   359e8:	andeq	r5, r2, r0, asr #1
   359ec:	ldr	r1, [sp, #52]	; 0x34
   359f0:	mov	r4, #8
   359f4:	str	r1, [sp, #96]	; 0x60
   359f8:	uxth	r7, r4
   359fc:	mov	r4, r7
   35a00:	cmp	r4, #0
   35a04:	beq	35a20 <__flatcc_fb_build_schema@@Base+0x1cd8>
   35a08:	sub	r4, r4, #1
   35a0c:	uxth	r1, r4
   35a10:	ldr	r1, [lr, r1, lsl #2]
   35a14:	cmp	r1, #0
   35a18:	beq	35a00 <__flatcc_fb_build_schema@@Base+0x1cb8>
   35a1c:	b	35a24 <__flatcc_fb_build_schema@@Base+0x1cdc>
   35a20:	mov	r4, #0
   35a24:	ldr	r1, [r5, r7, lsl #2]
   35a28:	uxth	r7, r4
   35a2c:	ldr	r6, [lr, r7, lsl #2]
   35a30:	cmp	r7, #0
   35a34:	str	r6, [r1]
   35a38:	bne	359f8 <__flatcc_fb_build_schema@@Base+0x1cb0>
   35a3c:	ldr	r7, [sp, #144]	; 0x90
   35a40:	mov	r6, #0
   35a44:	b	35a80 <__flatcc_fb_build_schema@@Base+0x1d38>
   35a48:	muleq	r2, r2, r7
   35a4c:	andeq	r4, r2, r4, lsl r9
   35a50:	andeq	r4, r2, r8, asr #28
   35a54:	andeq	r4, r2, r6, lsr r6
   35a58:	andeq	r4, r2, r1, asr r8
   35a5c:	sub	r1, fp, #36	; 0x24
   35a60:	str	r6, [fp, #-36]	; 0xffffffdc
   35a64:	str	sl, [r1]
   35a68:	mov	r1, sl
   35a6c:	ldr	sl, [r1], #108	; 0x6c
   35a70:	cmp	sl, #0
   35a74:	bne	35a64 <__flatcc_fb_build_schema@@Base+0x1d1c>
   35a78:	ldr	r7, [fp, #-36]	; 0xffffffdc
   35a7c:	str	r6, [r1]
   35a80:	str	r7, [r0, #24]
   35a84:	ldr	r0, [r0]
   35a88:	cmp	r0, #0
   35a8c:	bne	358a0 <__flatcc_fb_build_schema@@Base+0x1b58>
   35a90:	ldr	r2, [r9, #400]	; 0x190
   35a94:	cmp	r2, #0
   35a98:	beq	35ae0 <__flatcc_fb_build_schema@@Base+0x1d98>
   35a9c:	ldr	r1, [r9, #408]	; 0x198
   35aa0:	mov	r0, r9
   35aa4:	mov	r3, #0
   35aa8:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   35aac:	cmp	r0, #0
   35ab0:	str	r0, [r9, #404]	; 0x194
   35ab4:	beq	35b14 <__flatcc_fb_build_schema@@Base+0x1dcc>
   35ab8:	ldr	r2, [r9, #176]	; 0xb0
   35abc:	ldrh	r1, [r0, #8]
   35ac0:	cmp	r2, #0
   35ac4:	beq	35b24 <__flatcc_fb_build_schema@@Base+0x1ddc>
   35ac8:	cmp	r1, #2
   35acc:	bcc	35b50 <__flatcc_fb_build_schema@@Base+0x1e08>
   35ad0:	ldr	r1, [r9, #400]	; 0x190
   35ad4:	ldr	r2, [pc, #524]	; 35ce8 <__flatcc_fb_build_schema@@Base+0x1fa0>
   35ad8:	add	r2, pc, r2
   35adc:	b	35b38 <__flatcc_fb_build_schema@@Base+0x1df0>
   35ae0:	ldr	r0, [r9, #208]	; 0xd0
   35ae4:	cmp	r0, #0
   35ae8:	beq	35b5c <__flatcc_fb_build_schema@@Base+0x1e14>
   35aec:	mov	r0, #0
   35af0:	mov	r1, #0
   35af4:	mov	r3, #0
   35af8:	str	r0, [sp]
   35afc:	str	r0, [sp, #4]
   35b00:	mov	r0, r9
   35b04:	ldr	r2, [pc, #468]	; 35ce0 <__flatcc_fb_build_schema@@Base+0x1f98>
   35b08:	add	r2, pc, r2
   35b0c:	bl	2ac84 <__flatcc_error_report@@Base>
   35b10:	b	35b5c <__flatcc_fb_build_schema@@Base+0x1e14>
   35b14:	ldr	r1, [r9, #400]	; 0x190
   35b18:	ldr	r2, [pc, #452]	; 35ce4 <__flatcc_fb_build_schema@@Base+0x1f9c>
   35b1c:	add	r2, pc, r2
   35b20:	b	35b38 <__flatcc_fb_build_schema@@Base+0x1df0>
   35b24:	cmp	r1, #0
   35b28:	beq	35b50 <__flatcc_fb_build_schema@@Base+0x1e08>
   35b2c:	ldr	r1, [r9, #400]	; 0x190
   35b30:	ldr	r2, [pc, #436]	; 35cec <__flatcc_fb_build_schema@@Base+0x1fa4>
   35b34:	add	r2, pc, r2
   35b38:	mov	r0, r9
   35b3c:	mov	r3, #0
   35b40:	bl	2aeec <error_ref_sym@@Base>
   35b44:	b	35b54 <__flatcc_fb_build_schema@@Base+0x1e0c>
   35b48:	andeq	r4, r2, r4, lsl #17
   35b4c:	andeq	r4, r2, pc, lsr r6
   35b50:	str	r0, [r9, #404]	; 0x194
   35b54:	mov	r0, #0
   35b58:	str	r0, [r9, #400]	; 0x190
   35b5c:	ldr	r0, [r9, #108]	; 0x6c
   35b60:	clz	r1, r0
   35b64:	lsr	r1, r1, #5
   35b68:	str	r1, [r9, #120]	; 0x78
   35b6c:	sub	sp, fp, #28
   35b70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35b74:	ldr	r0, [pc, #428]	; 35d28 <__flatcc_fb_build_schema@@Base+0x1fe0>
   35b78:	ldr	r1, [pc, #428]	; 35d2c <__flatcc_fb_build_schema@@Base+0x1fe4>
   35b7c:	ldr	r3, [pc, #428]	; 35d30 <__flatcc_fb_build_schema@@Base+0x1fe8>
   35b80:	movw	r2, #1521	; 0x5f1
   35b84:	add	r0, pc, r0
   35b88:	add	r1, pc, r1
   35b8c:	add	r3, pc, r3
   35b90:	bl	14a78 <__assert_fail@plt>
   35b94:	andeq	r4, r2, sp, asr r8
   35b98:	ldr	r0, [pc, #348]	; 35cfc <__flatcc_fb_build_schema@@Base+0x1fb4>
   35b9c:	mov	r1, #34	; 0x22
   35ba0:	mov	r2, #1
   35ba4:	ldr	r0, [pc, r0]
   35ba8:	ldr	r3, [r0]
   35bac:	ldr	r0, [pc, #332]	; 35d00 <__flatcc_fb_build_schema@@Base+0x1fb8>
   35bb0:	add	r0, pc, r0
   35bb4:	bl	1494c <fwrite@plt>
   35bb8:	mov	r0, #1
   35bbc:	bl	14994 <exit@plt>
   35bc0:	andeq	r4, r2, r4, lsr #26
   35bc4:	ldr	r0, [pc, #292]	; 35cf0 <__flatcc_fb_build_schema@@Base+0x1fa8>
   35bc8:	ldr	r1, [pc, #292]	; 35cf4 <__flatcc_fb_build_schema@@Base+0x1fac>
   35bcc:	ldr	r3, [pc, #292]	; 35cf8 <__flatcc_fb_build_schema@@Base+0x1fb0>
   35bd0:	movw	r2, #1558	; 0x616
   35bd4:	add	r0, pc, r0
   35bd8:	add	r1, pc, r1
   35bdc:	add	r3, pc, r3
   35be0:	bl	14a78 <__assert_fail@plt>
   35be4:	ldr	r0, [pc, #280]	; 35d04 <__flatcc_fb_build_schema@@Base+0x1fbc>
   35be8:	ldr	r1, [pc, #280]	; 35d08 <__flatcc_fb_build_schema@@Base+0x1fc0>
   35bec:	ldr	r3, [pc, #280]	; 35d0c <__flatcc_fb_build_schema@@Base+0x1fc4>
   35bf0:	movw	r2, #770	; 0x302
   35bf4:	add	r0, pc, r0
   35bf8:	add	r1, pc, r1
   35bfc:	add	r3, pc, r3
   35c00:	bl	14a78 <__assert_fail@plt>
   35c04:	andeq	r4, r2, sl, ror #21
   35c08:	ldr	r0, [pc, #268]	; 35d1c <__flatcc_fb_build_schema@@Base+0x1fd4>
   35c0c:	ldr	r1, [pc, #268]	; 35d20 <__flatcc_fb_build_schema@@Base+0x1fd8>
   35c10:	ldr	r3, [pc, #268]	; 35d24 <__flatcc_fb_build_schema@@Base+0x1fdc>
   35c14:	movw	r2, #1129	; 0x469
   35c18:	add	r0, pc, r0
   35c1c:	add	r1, pc, r1
   35c20:	add	r3, pc, r3
   35c24:	bl	14a78 <__assert_fail@plt>
   35c28:	ldr	r0, [pc, #224]	; 35d10 <__flatcc_fb_build_schema@@Base+0x1fc8>
   35c2c:	ldr	r1, [pc, #224]	; 35d14 <__flatcc_fb_build_schema@@Base+0x1fcc>
   35c30:	ldr	r3, [pc, #224]	; 35d18 <__flatcc_fb_build_schema@@Base+0x1fd0>
   35c34:	movw	r2, #347	; 0x15b
   35c38:	add	r0, pc, r0
   35c3c:	add	r1, pc, r1
   35c40:	add	r3, pc, r3
   35c44:	bl	14a78 <__assert_fail@plt>
   35c48:	strdeq	r3, [r2], -sp
   35c4c:	andeq	r3, r2, fp, ror r8
   35c50:	andeq	r4, r2, r4, lsr sl
   35c54:	andeq	r4, r2, r3, lsl #12
   35c58:	andeq	r4, r2, sl, lsl #12
   35c5c:	andeq	r4, r2, r4, ror #18
   35c60:	andeq	r4, r2, r8, ror r3
   35c64:	andeq	r4, r2, r4, ror #5
   35c68:	andeq	r4, r2, sl, ror #3
   35c6c:	andeq	r4, r2, r0, lsr r1
   35c70:			; <UNDEFINED> instruction: 0x00023fbc
   35c74:	andeq	r4, r2, r0, asr #5
   35c78:	andeq	r4, r2, r5, asr #10
   35c7c:	ldrdeq	r4, [r2], -r3
   35c80:	andeq	r4, r2, r5, lsr #6
   35c84:	andeq	r4, r2, r0, asr r7
   35c88:	strdeq	r4, [r2], -r9
   35c8c:	andeq	r4, r2, sp, lsr #7
   35c90:	andeq	r4, r2, ip, ror #15
   35c94:	andeq	r4, r2, fp, lsr #5
   35c98:	ldrdeq	r4, [r2], -r3
   35c9c:	andeq	r4, r2, pc, ror r2
   35ca0:	andeq	r4, r2, r5, lsr r3
   35ca4:	ldrdeq	r4, [r2], -r0
   35ca8:	andeq	r4, r2, r4, ror r3
   35cac:	andeq	r4, r2, fp, lsl r3
   35cb0:	muleq	r2, r8, r5
   35cb4:	andeq	r3, r2, fp, lsl #31
   35cb8:	andeq	r4, r2, r5, ror r0
   35cbc:	andeq	r3, r2, r7, lsr #10
   35cc0:	andeq	r4, r2, r4, asr #9
   35cc4:	andeq	r4, r2, r0, ror #7
   35cc8:	andeq	r4, r2, ip, ror #7
   35ccc:	andeq	r4, r2, r5, asr #7
   35cd0:	andeq	r4, r2, r3, lsl r4
   35cd4:	andeq	r4, r2, sp, ror #10
   35cd8:			; <UNDEFINED> instruction: 0x000245b4
   35cdc:	andeq	r3, r2, r3, asr r8
   35ce0:	andeq	r2, r2, sl, lsr #20
   35ce4:	andeq	r2, r2, sp, lsr #20
   35ce8:	andeq	r2, r2, r5, lsl #21
   35cec:	andeq	r2, r2, pc, asr #20
   35cf0:	andeq	r2, r2, r4, lsr r8
   35cf4:	andeq	r2, r2, r6, ror #16
   35cf8:	andeq	r2, r2, r2, asr #17
   35cfc:	strdeq	r6, [r3], -r8
   35d00:	andeq	sl, r0, r7, ror r7
   35d04:	andeq	r3, r2, r2, lsr #7
   35d08:	andeq	r2, r2, r6, asr #16
   35d0c:	andeq	r3, r2, r3, ror #6
   35d10:	strdeq	r3, [r2], -r5
   35d14:	andeq	r2, r2, r2, lsl #16
   35d18:	strdeq	r3, [r2], -r1
   35d1c:	andeq	r3, r2, lr, ror r3
   35d20:	andeq	r2, r2, r2, lsr #16
   35d24:	andeq	r3, r2, r3, ror ip
   35d28:	ldrdeq	r3, [r2], -pc	; <UNPREDICTABLE>
   35d2c:			; <UNDEFINED> instruction: 0x000228b6
   35d30:	ldrdeq	r3, [r2], -sp
   35d34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   35d38:	add	fp, sp, #28
   35d3c:	sub	sp, sp, #108	; 0x6c
   35d40:	ldrh	sl, [r1, #8]
   35d44:	mov	r8, r1
   35d48:	mov	r4, r0
   35d4c:	cmp	sl, #4
   35d50:	bne	35d7c <__flatcc_fb_build_schema@@Base+0x2034>
   35d54:	ldrh	r0, [r8, #48]	; 0x30
   35d58:	cmp	r0, #0
   35d5c:	beq	35dbc <__flatcc_fb_build_schema@@Base+0x2074>
   35d60:	mov	r0, #0
   35d64:	ldr	r1, [r8, #4]
   35d68:	str	r0, [sp]
   35d6c:	str	r0, [sp, #4]
   35d70:	ldr	r2, [pc, #2000]	; 36548 <__flatcc_fb_build_schema@@Base+0x2800>
   35d74:	add	r2, pc, r2
   35d78:	b	35f38 <__flatcc_fb_build_schema@@Base+0x21f0>
   35d7c:	cmp	sl, #3
   35d80:	bne	36518 <__flatcc_fb_build_schema@@Base+0x27d0>
   35d84:	ldrh	r0, [r8, #48]	; 0x30
   35d88:	cmp	r0, #8
   35d8c:	beq	35ddc <__flatcc_fb_build_schema@@Base+0x2094>
   35d90:	cmp	r0, #0
   35d94:	bne	35f20 <__flatcc_fb_build_schema@@Base+0x21d8>
   35d98:	mov	r0, #1
   35d9c:	strh	r0, [r8, #48]	; 0x30
   35da0:	mov	r0, #0
   35da4:	ldr	r1, [r8, #4]
   35da8:	str	r0, [sp]
   35dac:	str	r0, [sp, #4]
   35db0:	ldr	r2, [pc, #1920]	; 36538 <__flatcc_fb_build_schema@@Base+0x27f0>
   35db4:	add	r2, pc, r2
   35db8:	b	35f38 <__flatcc_fb_build_schema@@Base+0x21f0>
   35dbc:	mov	r0, #1
   35dc0:	mov	r1, #0
   35dc4:	strd	r0, [r8, #112]	; 0x70
   35dc8:	mov	r1, #4
   35dcc:	str	r1, [r8, #40]	; 0x28
   35dd0:	mov	r1, #8
   35dd4:	strh	r1, [r8, #48]	; 0x30
   35dd8:	b	35e1c <__flatcc_fb_build_schema@@Base+0x20d4>
   35ddc:	ldr	r0, [r8, #40]	; 0x28
   35de0:	movw	r1, #999	; 0x3e7
   35de4:	ldr	r0, [r0, #16]
   35de8:	add	r2, r0, r1
   35dec:	mov	r1, #0
   35df0:	mov	r0, #0
   35df4:	cmp	r2, #27
   35df8:	ldrls	r1, [pc, #1852]	; 3653c <__flatcc_fb_build_schema@@Base+0x27f4>
   35dfc:	str	r0, [r8, #116]	; 0x74
   35e00:	addls	r1, pc, r1
   35e04:	ldrls	r1, [r1, r2, lsl #2]
   35e08:	str	r1, [r8, #40]	; 0x28
   35e0c:	ldr	r0, [pc, #1836]	; 36540 <__flatcc_fb_build_schema@@Base+0x27f8>
   35e10:	add	r0, pc, r0
   35e14:	ldr	r0, [r0, r1, lsl #2]
   35e18:	str	r0, [r8, #112]	; 0x70
   35e1c:	strh	r0, [r8, #104]	; 0x68
   35e20:	add	r3, sp, #60	; 0x3c
   35e24:	mov	r0, r4
   35e28:	mov	r2, #32
   35e2c:	ldr	r1, [r8, #28]
   35e30:	bl	36af8 <__flatcc_fb_build_schema@@Base+0x2db0>
   35e34:	mov	r1, #0
   35e38:	tst	r0, #32
   35e3c:	strh	r0, [r8, #92]	; 0x5c
   35e40:	str	r1, [sp, #32]
   35e44:	beq	35e64 <__flatcc_fb_build_schema@@Base+0x211c>
   35e48:	mov	r0, #0
   35e4c:	str	r0, [sp, #44]	; 0x2c
   35e50:	str	r0, [sp, #40]	; 0x28
   35e54:	mov	r0, #5
   35e58:	strh	r0, [sp, #48]	; 0x30
   35e5c:	mov	r0, #1
   35e60:	str	r0, [sp, #32]
   35e64:	ldr	r2, [r8, #40]	; 0x28
   35e68:	cmp	r2, #5
   35e6c:	bne	35e84 <__flatcc_fb_build_schema@@Base+0x213c>
   35e70:	mov	r0, #6
   35e74:	strh	r0, [sp, #48]	; 0x30
   35e78:	mov	r0, #0
   35e7c:	strb	r0, [sp, #40]	; 0x28
   35e80:	b	35ecc <__flatcc_fb_build_schema@@Base+0x2184>
   35e84:	mov	r6, #0
   35e88:	mov	r0, #4
   35e8c:	add	r3, sp, #40	; 0x28
   35e90:	mov	r1, r8
   35e94:	str	r6, [sp, #44]	; 0x2c
   35e98:	str	r6, [sp, #40]	; 0x28
   35e9c:	strh	r0, [sp, #48]	; 0x30
   35ea0:	mov	r0, r4
   35ea4:	bl	36ed4 <__flatcc_fb_coerce_scalar_type@@Base>
   35ea8:	cmp	r0, #0
   35eac:	beq	35ecc <__flatcc_fb_build_schema@@Base+0x2184>
   35eb0:	str	r6, [sp]
   35eb4:	str	r6, [sp, #4]
   35eb8:	mov	r0, r4
   35ebc:	mov	r1, #0
   35ec0:	ldr	r2, [pc, #1668]	; 3654c <__flatcc_fb_build_schema@@Base+0x2804>
   35ec4:	add	r2, pc, r2
   35ec8:	b	35f3c <__flatcc_fb_build_schema@@Base+0x21f4>
   35ecc:	ldr	r6, [r8, #20]
   35ed0:	cmp	r6, #0
   35ed4:	beq	363e0 <__flatcc_fb_build_schema@@Base+0x2698>
   35ed8:	ldr	r1, [sp, #40]	; 0x28
   35edc:	ldr	r0, [sp, #44]	; 0x2c
   35ee0:	add	r5, r4, #68	; 0x44
   35ee4:	mov	r7, #0
   35ee8:	mov	r9, #1
   35eec:	str	sl, [sp, #16]
   35ef0:	mov	r2, r1
   35ef4:	str	r1, [sp, #28]
   35ef8:	lsr	r1, r1, #8
   35efc:	orr	r1, r1, r0, lsl #24
   35f00:	lsr	r0, r0, #8
   35f04:	str	r1, [sp, #24]
   35f08:	add	r1, r8, #72	; 0x48
   35f0c:	str	r0, [sp, #20]
   35f10:	str	r1, [sp, #12]
   35f14:	add	r1, r8, #56	; 0x38
   35f18:	str	r1, [sp, #36]	; 0x24
   35f1c:	b	36314 <__flatcc_fb_build_schema@@Base+0x25cc>
   35f20:	mov	r0, #0
   35f24:	ldr	r1, [r8, #4]
   35f28:	str	r0, [sp]
   35f2c:	str	r0, [sp, #4]
   35f30:	ldr	r2, [pc, #1548]	; 36544 <__flatcc_fb_build_schema@@Base+0x27fc>
   35f34:	add	r2, pc, r2
   35f38:	mov	r0, r4
   35f3c:	mov	r3, #0
   35f40:	bl	2ac84 <__flatcc_error_report@@Base>
   35f44:	mvn	r9, #0
   35f48:	mov	r0, r9
   35f4c:	sub	sp, fp, #28
   35f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35f54:	strh	r7, [r6, #24]
   35f58:	ldrh	r0, [r6, #56]	; 0x38
   35f5c:	cmp	r9, #0
   35f60:	cmpeq	r0, #0
   35f64:	bne	360ac <__flatcc_fb_build_schema@@Base+0x2364>
   35f68:	ldrh	r0, [sp, #48]	; 0x30
   35f6c:	cmp	r0, #4
   35f70:	beq	3604c <__flatcc_fb_build_schema@@Base+0x2304>
   35f74:	cmp	r0, #6
   35f78:	beq	36014 <__flatcc_fb_build_schema@@Base+0x22cc>
   35f7c:	cmp	r0, #5
   35f80:	bne	360a8 <__flatcc_fb_build_schema@@Base+0x2360>
   35f84:	ldr	r2, [r8, #40]	; 0x28
   35f88:	ldr	r0, [sp, #40]	; 0x28
   35f8c:	ldr	r1, [sp, #44]	; 0x2c
   35f90:	cmp	r2, #6
   35f94:	andeq	r2, r0, r1
   35f98:	cmneq	r2, #1
   35f9c:	bne	36098 <__flatcc_fb_build_schema@@Base+0x2350>
   35fa0:	ldr	r1, [r6, #4]
   35fa4:	str	r7, [sp]
   35fa8:	str	r7, [sp, #4]
   35fac:	mov	r0, r4
   35fb0:	ldr	r2, [pc, #1456]	; 36568 <__flatcc_fb_build_schema@@Base+0x2820>
   35fb4:	add	r2, pc, r2
   35fb8:	b	36088 <__flatcc_fb_build_schema@@Base+0x2340>
   35fbc:	ldr	r2, [r6, #16]
   35fc0:	ldr	r1, [r8, #12]
   35fc4:	mov	r0, r4
   35fc8:	mov	r3, #0
   35fcc:	bl	36d1c <__flatcc_fb_build_schema@@Base+0x2fd4>
   35fd0:	cmp	r0, #0
   35fd4:	beq	362d8 <__flatcc_fb_build_schema@@Base+0x2590>
   35fd8:	ldrh	r1, [r0, #8]
   35fdc:	cmp	r1, #2
   35fe0:	bcs	362f4 <__flatcc_fb_build_schema@@Base+0x25ac>
   35fe4:	str	r7, [r6, #88]	; 0x58
   35fe8:	str	r7, [r6, #92]	; 0x5c
   35fec:	str	r0, [r6, #16]
   35ff0:	mov	r0, #14
   35ff4:	strh	r0, [r6, #24]
   35ff8:	b	35f58 <__flatcc_fb_build_schema@@Base+0x2210>
   35ffc:	str	r7, [sp]
   36000:	str	r7, [sp, #4]
   36004:	mov	r0, r4
   36008:	ldr	r2, [pc, #1356]	; 3655c <__flatcc_fb_build_schema@@Base+0x2814>
   3600c:	add	r2, pc, r2
   36010:	b	363bc <__flatcc_fb_build_schema@@Base+0x2674>
   36014:	ldrb	r0, [sp, #40]	; 0x28
   36018:	cmp	r0, #1
   3601c:	bne	36040 <__flatcc_fb_build_schema@@Base+0x22f8>
   36020:	ldr	r1, [r6, #4]
   36024:	str	r7, [sp]
   36028:	str	r7, [sp, #4]
   3602c:	mov	r0, r4
   36030:	mov	r3, #0
   36034:	ldr	r2, [pc, #1332]	; 36570 <__flatcc_fb_build_schema@@Base+0x2828>
   36038:	add	r2, pc, r2
   3603c:	bl	2ac84 <__flatcc_error_report@@Base>
   36040:	mov	r0, #1
   36044:	strb	r0, [sp, #40]	; 0x28
   36048:	b	360a8 <__flatcc_fb_build_schema@@Base+0x2360>
   3604c:	ldr	r2, [r8, #40]	; 0x28
   36050:	ldr	r0, [sp, #40]	; 0x28
   36054:	ldr	r1, [sp, #44]	; 0x2c
   36058:	cmp	r2, #6
   3605c:	mvneq	r2, #-2147483648	; 0x80000000
   36060:	mvneq	r3, r0
   36064:	eoreq	r2, r1, r2
   36068:	orrseq	r2, r3, r2
   3606c:	bne	36098 <__flatcc_fb_build_schema@@Base+0x2350>
   36070:	ldr	r1, [r6, #4]
   36074:	str	r7, [sp]
   36078:	str	r7, [sp, #4]
   3607c:	mov	r0, r4
   36080:	ldr	r2, [pc, #1252]	; 3656c <__flatcc_fb_build_schema@@Base+0x2824>
   36084:	add	r2, pc, r2
   36088:	mov	r3, #0
   3608c:	bl	2ac84 <__flatcc_error_report@@Base>
   36090:	ldr	r0, [sp, #40]	; 0x28
   36094:	ldr	r1, [sp, #44]	; 0x2c
   36098:	adds	r0, r0, #1
   3609c:	str	r0, [sp, #40]	; 0x28
   360a0:	adc	r0, r1, #0
   360a4:	str	r0, [sp, #44]	; 0x2c
   360a8:	ldrh	r0, [r6, #56]	; 0x38
   360ac:	ldr	r1, [sp, #32]
   360b0:	add	sl, r6, #48	; 0x30
   360b4:	cmp	r1, #0
   360b8:	beq	36150 <__flatcc_fb_build_schema@@Base+0x2408>
   360bc:	cmp	r0, #0
   360c0:	add	r1, sp, #40	; 0x28
   360c4:	beq	360d8 <__flatcc_fb_build_schema@@Base+0x2390>
   360c8:	cmp	r0, #5
   360cc:	bne	36440 <__flatcc_fb_build_schema@@Base+0x26f8>
   360d0:	vld1.64	{d16-d17}, [sl]
   360d4:	vst1.64	{d16-d17}, [r1]
   360d8:	ldr	r0, [r8, #40]	; 0x28
   360dc:	ldr	r1, [pc, #1172]	; 36578 <__flatcc_fb_build_schema@@Base+0x2830>
   360e0:	ldr	r2, [sp, #44]	; 0x2c
   360e4:	add	r1, pc, r1
   360e8:	ldr	r1, [r1, r0, lsl #2]
   360ec:	ldr	r0, [sp, #40]	; 0x28
   360f0:	subs	r1, r0, r1, lsl #3
   360f4:	sbcs	r1, r2, #0
   360f8:	bcs	36404 <__flatcc_fb_build_schema@@Base+0x26bc>
   360fc:	mov	r7, #1
   36100:	sub	r1, r0, #32
   36104:	lsl	r2, r7, r0
   36108:	rsb	r0, r0, #32
   3610c:	cmp	r1, #0
   36110:	lsr	r3, r7, r0
   36114:	movwge	r2, #0
   36118:	mov	r0, #5
   3611c:	lslge	r3, r7, r1
   36120:	mov	r1, r6
   36124:	strd	r2, [sl]
   36128:	strh	r0, [r6, #56]	; 0x38
   3612c:	mov	r0, r4
   36130:	mov	r3, sl
   36134:	ldr	r2, [r8, #40]	; 0x28
   36138:	bl	36ed4 <__flatcc_fb_coerce_scalar_type@@Base>
   3613c:	cmp	r0, #0
   36140:	bne	36404 <__flatcc_fb_build_schema@@Base+0x26bc>
   36144:	cmp	r9, #0
   36148:	bne	36234 <__flatcc_fb_build_schema@@Base+0x24ec>
   3614c:	b	36190 <__flatcc_fb_build_schema@@Base+0x2448>
   36150:	cmp	r0, #0
   36154:	add	r7, sp, #40	; 0x28
   36158:	beq	36180 <__flatcc_fb_build_schema@@Base+0x2438>
   3615c:	vld1.64	{d16-d17}, [sl]
   36160:	mov	r0, r4
   36164:	mov	r1, r6
   36168:	mov	r3, r7
   3616c:	vst1.64	{d16-d17}, [r7]
   36170:	ldr	r2, [r8, #40]	; 0x28
   36174:	bl	36ed4 <__flatcc_fb_coerce_scalar_type@@Base>
   36178:	cmp	r0, #0
   3617c:	bne	35f44 <__flatcc_fb_build_schema@@Base+0x21fc>
   36180:	vld1.64	{d16-d17}, [r7]
   36184:	vst1.64	{d16-d17}, [sl]
   36188:	cmp	r9, #0
   3618c:	bne	36234 <__flatcc_fb_build_schema@@Base+0x24ec>
   36190:	ldr	r0, [r4, #180]	; 0xb4
   36194:	cmp	r0, #0
   36198:	beq	36234 <__flatcc_fb_build_schema@@Base+0x24ec>
   3619c:	ldrh	r0, [sp, #48]	; 0x30
   361a0:	cmp	r0, #4
   361a4:	beq	361ec <__flatcc_fb_build_schema@@Base+0x24a4>
   361a8:	cmp	r0, #6
   361ac:	beq	36220 <__flatcc_fb_build_schema@@Base+0x24d8>
   361b0:	cmp	r0, #5
   361b4:	bne	36234 <__flatcc_fb_build_schema@@Base+0x24ec>
   361b8:	ldr	r0, [sp, #20]
   361bc:	ldr	r1, [sp, #28]
   361c0:	ldr	r2, [sp, #24]
   361c4:	ldr	r3, [sp, #44]	; 0x2c
   361c8:	lsl	r0, r0, #8
   361cc:	uxtb	r1, r1
   361d0:	orr	r0, r0, r2, lsr #24
   361d4:	orr	r1, r1, r2, lsl #8
   361d8:	ldr	r2, [sp, #40]	; 0x28
   361dc:	subs	r1, r1, r2
   361e0:	sbcs	r0, r0, r3
   361e4:	bcc	36234 <__flatcc_fb_build_schema@@Base+0x24ec>
   361e8:	b	3645c <__flatcc_fb_build_schema@@Base+0x2714>
   361ec:	ldr	r0, [sp, #20]
   361f0:	ldr	r1, [sp, #28]
   361f4:	ldr	r2, [sp, #24]
   361f8:	ldr	r3, [sp, #44]	; 0x2c
   361fc:	lsl	r0, r0, #8
   36200:	uxtb	r1, r1
   36204:	orr	r0, r0, r2, lsr #24
   36208:	orr	r1, r1, r2, lsl #8
   3620c:	ldr	r2, [sp, #40]	; 0x28
   36210:	subs	r1, r1, r2
   36214:	sbcs	r0, r0, r3
   36218:	blt	36234 <__flatcc_fb_build_schema@@Base+0x24ec>
   3621c:	b	3645c <__flatcc_fb_build_schema@@Base+0x2714>
   36220:	ldr	r0, [sp, #28]
   36224:	ldrb	r1, [sp, #40]	; 0x28
   36228:	uxtb	r0, r0
   3622c:	cmp	r1, r0
   36230:	bls	364a8 <__flatcc_fb_build_schema@@Base+0x2760>
   36234:	ldr	r0, [sp, #12]
   36238:	mov	r9, r5
   3623c:	mov	r5, r4
   36240:	ldr	r4, [sp, #40]	; 0x28
   36244:	ldr	r7, [sp, #44]	; 0x2c
   36248:	mov	r1, sl
   3624c:	mov	r2, #1
   36250:	bl	3e038 <fb_value_set_insert_item@@Base>
   36254:	ldr	sl, [sp, #16]
   36258:	cmp	r0, #0
   3625c:	beq	36274 <__flatcc_fb_build_schema@@Base+0x252c>
   36260:	cmp	sl, #4
   36264:	beq	36420 <__flatcc_fb_build_schema@@Base+0x26d8>
   36268:	ldrh	r0, [r6, #10]
   3626c:	orr	r0, r0, #4
   36270:	strh	r0, [r6, #10]
   36274:	lsr	r0, r4, #8
   36278:	str	r4, [sp, #28]
   3627c:	orr	r0, r0, r7, lsl #24
   36280:	str	r0, [sp, #24]
   36284:	lsr	r0, r7, #8
   36288:	str	r0, [sp, #20]
   3628c:	ldr	r0, [r6, #64]	; 0x40
   36290:	cmp	r0, #0
   36294:	beq	362c8 <__flatcc_fb_build_schema@@Base+0x2580>
   36298:	mov	r7, #0
   3629c:	ldr	r1, [r6, #4]
   362a0:	mov	r0, r5
   362a4:	mov	r3, #0
   362a8:	mov	r4, r5
   362ac:	str	r7, [sp]
   362b0:	str	r7, [sp, #4]
   362b4:	ldr	r2, [pc, #724]	; 36590 <__flatcc_fb_build_schema@@Base+0x2848>
   362b8:	add	r2, pc, r2
   362bc:	bl	2ac84 <__flatcc_error_report@@Base>
   362c0:	mov	r5, r9
   362c4:	b	363cc <__flatcc_fb_build_schema@@Base+0x2684>
   362c8:	mov	r4, r5
   362cc:	mov	r5, r9
   362d0:	mov	r7, #0
   362d4:	b	363cc <__flatcc_fb_build_schema@@Base+0x2684>
   362d8:	ldr	r1, [r6, #16]
   362dc:	ldr	r2, [pc, #636]	; 36560 <__flatcc_fb_build_schema@@Base+0x2818>
   362e0:	mov	r0, r4
   362e4:	mov	r3, r6
   362e8:	add	r2, pc, r2
   362ec:	bl	2aeec <error_ref_sym@@Base>
   362f0:	b	363c4 <__flatcc_fb_build_schema@@Base+0x267c>
   362f4:	ldr	r3, [r0, #4]
   362f8:	ldr	r1, [r6, #4]
   362fc:	str	r7, [sp]
   36300:	str	r7, [sp, #4]
   36304:	mov	r0, r4
   36308:	ldr	r2, [pc, #596]	; 36564 <__flatcc_fb_build_schema@@Base+0x281c>
   3630c:	add	r2, pc, r2
   36310:	b	363c0 <__flatcc_fb_build_schema@@Base+0x2678>
   36314:	ldr	r0, [sp, #36]	; 0x24
   36318:	mov	r1, r6
   3631c:	mov	r2, #1
   36320:	bl	28b28 <fb_symbol_table_insert_item@@Base>
   36324:	cmp	r0, #0
   36328:	beq	36354 <__flatcc_fb_build_schema@@Base+0x260c>
   3632c:	ldr	r3, [r0, #4]
   36330:	ldr	r1, [r6, #4]
   36334:	cmp	r3, r5
   36338:	beq	363a8 <__flatcc_fb_build_schema@@Base+0x2660>
   3633c:	str	r7, [sp]
   36340:	str	r7, [sp, #4]
   36344:	mov	r0, r4
   36348:	ldr	r2, [pc, #516]	; 36554 <__flatcc_fb_build_schema@@Base+0x280c>
   3634c:	add	r2, pc, r2
   36350:	b	363c0 <__flatcc_fb_build_schema@@Base+0x2678>
   36354:	ldrh	r0, [r6, #8]
   36358:	cmp	r0, #5
   3635c:	bne	363e8 <__flatcc_fb_build_schema@@Base+0x26a0>
   36360:	ldr	r0, [r6, #64]	; 0x40
   36364:	cmp	r0, #0
   36368:	bne	364f8 <__flatcc_fb_build_schema@@Base+0x27b0>
   3636c:	cmp	sl, #4
   36370:	bne	35f58 <__flatcc_fb_build_schema@@Base+0x2210>
   36374:	ldr	r1, [r6, #4]
   36378:	cmp	r1, r5
   3637c:	beq	35f54 <__flatcc_fb_build_schema@@Base+0x220c>
   36380:	ldrh	r0, [r6, #24]
   36384:	cmp	r0, #1
   36388:	beq	363cc <__flatcc_fb_build_schema@@Base+0x2684>
   3638c:	cmp	r0, #12
   36390:	beq	35fbc <__flatcc_fb_build_schema@@Base+0x2274>
   36394:	cmp	r0, #10
   36398:	bne	35ffc <__flatcc_fb_build_schema@@Base+0x22b4>
   3639c:	str	r7, [r6, #88]	; 0x58
   363a0:	str	r7, [r6, #92]	; 0x5c
   363a4:	b	35f58 <__flatcc_fb_build_schema@@Base+0x2210>
   363a8:	str	r7, [sp]
   363ac:	str	r7, [sp, #4]
   363b0:	mov	r0, r4
   363b4:	ldr	r2, [pc, #404]	; 36550 <__flatcc_fb_build_schema@@Base+0x2808>
   363b8:	add	r2, pc, r2
   363bc:	mov	r3, #0
   363c0:	bl	2ac84 <__flatcc_error_report@@Base>
   363c4:	mov	r0, #1
   363c8:	strh	r0, [r6, #24]
   363cc:	ldr	r6, [r6]
   363d0:	mov	r9, #0
   363d4:	cmp	r6, #0
   363d8:	bne	36314 <__flatcc_fb_build_schema@@Base+0x25cc>
   363dc:	b	35f48 <__flatcc_fb_build_schema@@Base+0x2200>
   363e0:	mov	r9, #0
   363e4:	b	35f48 <__flatcc_fb_build_schema@@Base+0x2200>
   363e8:	mov	r0, #0
   363ec:	ldr	r1, [r6, #4]
   363f0:	str	r0, [sp]
   363f4:	str	r0, [sp, #4]
   363f8:	ldr	r2, [pc, #344]	; 36558 <__flatcc_fb_build_schema@@Base+0x2810>
   363fc:	add	r2, pc, r2
   36400:	b	35f38 <__flatcc_fb_build_schema@@Base+0x21f0>
   36404:	mov	r0, #0
   36408:	ldr	r1, [r6, #4]
   3640c:	str	r0, [sp]
   36410:	str	r0, [sp, #4]
   36414:	ldr	r2, [pc, #352]	; 3657c <__flatcc_fb_build_schema@@Base+0x2834>
   36418:	add	r2, pc, r2
   3641c:	b	35f38 <__flatcc_fb_build_schema@@Base+0x21f0>
   36420:	mov	r0, #0
   36424:	ldr	r1, [r6, #4]
   36428:	str	r0, [sp]
   3642c:	str	r0, [sp, #4]
   36430:	mov	r0, r5
   36434:	ldr	r2, [pc, #324]	; 36580 <__flatcc_fb_build_schema@@Base+0x2838>
   36438:	add	r2, pc, r2
   3643c:	b	364e0 <__flatcc_fb_build_schema@@Base+0x2798>
   36440:	mov	r0, #0
   36444:	ldr	r1, [r6, #4]
   36448:	str	r0, [sp]
   3644c:	str	r0, [sp, #4]
   36450:	ldr	r2, [pc, #284]	; 36574 <__flatcc_fb_build_schema@@Base+0x282c>
   36454:	add	r2, pc, r2
   36458:	b	35f38 <__flatcc_fb_build_schema@@Base+0x21f0>
   3645c:	ldr	r0, [sp, #16]
   36460:	cmp	r0, #4
   36464:	bne	3648c <__flatcc_fb_build_schema@@Base+0x2744>
   36468:	ldr	r0, [sp, #28]
   3646c:	ldr	r1, [sp, #20]
   36470:	ldr	r2, [sp, #24]
   36474:	uxtb	r0, r0
   36478:	lsl	r1, r1, #8
   3647c:	orr	r0, r0, r2, lsl #8
   36480:	orr	r1, r1, r2, lsr #24
   36484:	orrs	r0, r0, r1
   36488:	beq	364c4 <__flatcc_fb_build_schema@@Base+0x277c>
   3648c:	mov	r0, #0
   36490:	ldr	r1, [r6, #4]
   36494:	str	r0, [sp]
   36498:	str	r0, [sp, #4]
   3649c:	ldr	r2, [pc, #228]	; 36588 <__flatcc_fb_build_schema@@Base+0x2840>
   364a0:	add	r2, pc, r2
   364a4:	b	364dc <__flatcc_fb_build_schema@@Base+0x2794>
   364a8:	mov	r0, #0
   364ac:	ldr	r1, [r6, #4]
   364b0:	str	r0, [sp]
   364b4:	str	r0, [sp, #4]
   364b8:	ldr	r2, [pc, #204]	; 3658c <__flatcc_fb_build_schema@@Base+0x2844>
   364bc:	add	r2, pc, r2
   364c0:	b	364dc <__flatcc_fb_build_schema@@Base+0x2794>
   364c4:	mov	r0, #0
   364c8:	ldr	r1, [r6, #4]
   364cc:	str	r0, [sp]
   364d0:	str	r0, [sp, #4]
   364d4:	ldr	r2, [pc, #168]	; 36584 <__flatcc_fb_build_schema@@Base+0x283c>
   364d8:	add	r2, pc, r2
   364dc:	mov	r0, r4
   364e0:	mov	r3, #0
   364e4:	bl	2ac84 <__flatcc_error_report@@Base>
   364e8:	mov	r0, #1
   364ec:	mvn	r9, #0
   364f0:	strh	r0, [r6, #56]	; 0x38
   364f4:	b	35f48 <__flatcc_fb_build_schema@@Base+0x2200>
   364f8:	ldr	r0, [pc, #160]	; 365a0 <__flatcc_fb_build_schema@@Base+0x2858>
   364fc:	ldr	r1, [pc, #160]	; 365a4 <__flatcc_fb_build_schema@@Base+0x285c>
   36500:	ldr	r3, [pc, #160]	; 365a8 <__flatcc_fb_build_schema@@Base+0x2860>
   36504:	movw	r2, #1315	; 0x523
   36508:	add	r0, pc, r0
   3650c:	add	r1, pc, r1
   36510:	add	r3, pc, r3
   36514:	bl	14a78 <__assert_fail@plt>
   36518:	ldr	r0, [pc, #116]	; 36594 <__flatcc_fb_build_schema@@Base+0x284c>
   3651c:	ldr	r1, [pc, #116]	; 36598 <__flatcc_fb_build_schema@@Base+0x2850>
   36520:	ldr	r3, [pc, #116]	; 3659c <__flatcc_fb_build_schema@@Base+0x2854>
   36524:	movw	r2, #1229	; 0x4cd
   36528:	add	r0, pc, r0
   3652c:	add	r1, pc, r1
   36530:	add	r3, pc, r3
   36534:	bl	14a78 <__assert_fail@plt>
   36538:	andeq	r2, r2, r7, lsl #17
   3653c:	ldrdeq	r3, [r2], -r8
   36540:	muleq	r2, r8, ip
   36544:	andeq	r2, r2, sp, lsl r7
   36548:	andeq	r2, r2, lr, lsl #18
   3654c:	strdeq	r2, [r2], -sp
   36550:	andeq	r2, r2, r7, asr #6
   36554:	ldrdeq	r2, [r2], -r0
   36558:	andeq	r2, r2, fp, lsr r3
   3655c:	andeq	r2, r2, sl, ror #14
   36560:	ldrdeq	r2, [r2], -r5
   36564:	ldrdeq	r2, [r2], -pc	; <UNPREDICTABLE>
   36568:	andeq	r2, r2, sp, ror r8
   3656c:	andeq	r2, r2, sl, asr #15
   36570:	andeq	r2, r2, r1, lsr r8
   36574:	andeq	r2, r2, r2, asr #8
   36578:	andeq	r3, r2, r4, asr #19
   3657c:			; <UNDEFINED> instruction: 0x000224b9
   36580:	andeq	r2, r2, r4, ror r5
   36584:	andeq	r2, r2, ip, lsr #8
   36588:	andeq	r2, r2, r5, lsr #9
   3658c:			; <UNDEFINED> instruction: 0x000224b0
   36590:	andeq	r2, r2, lr, lsr r7
   36594:	ldrdeq	r0, [r1], -r5
   36598:	andeq	r1, r2, r2, lsl pc
   3659c:	ldrdeq	r2, [r2], -r5
   365a0:	andeq	r2, r2, r8, asr r2
   365a4:	andeq	r1, r2, r2, lsr pc
   365a8:	strdeq	r2, [r2], -r5
   365ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   365b0:	add	fp, sp, #28
   365b4:	sub	sp, sp, #28
   365b8:	mov	r9, r0
   365bc:	ldrh	r0, [r1, #8]
   365c0:	cmp	r0, #1
   365c4:	bne	36a3c <__flatcc_fb_build_schema@@Base+0x2cf4>
   365c8:	ldrh	r0, [r1, #10]
   365cc:	tst	r0, #1
   365d0:	bne	36a5c <__flatcc_fb_build_schema@@Base+0x2d14>
   365d4:	mov	r4, #0
   365d8:	tst	r0, #2
   365dc:	bne	36a08 <__flatcc_fb_build_schema@@Base+0x2cc0>
   365e0:	ldr	r2, [r1, #120]	; 0x78
   365e4:	cmp	r2, #0
   365e8:	bne	36a7c <__flatcc_fb_build_schema@@Base+0x2d34>
   365ec:	orr	r0, r0, #1
   365f0:	str	r1, [sp, #12]
   365f4:	strh	r0, [r1, #10]
   365f8:	ldr	r8, [r1, #20]
   365fc:	cmp	r8, #0
   36600:	beq	36844 <__flatcc_fb_build_schema@@Base+0x2afc>
   36604:	add	r0, r1, #112	; 0x70
   36608:	mov	r6, #0
   3660c:	mov	r5, #1
   36610:	str	r9, [sp, #16]
   36614:	str	r0, [sp, #24]
   36618:	ldr	r0, [r9, #116]	; 0x74
   3661c:	cmp	r0, #100	; 0x64
   36620:	bge	36970 <__flatcc_fb_build_schema@@Base+0x2c28>
   36624:	ldrh	r1, [r8, #24]
   36628:	mvn	r4, #0
   3662c:	str	r5, [sp, #20]
   36630:	cmp	r1, #8
   36634:	beq	36664 <__flatcc_fb_build_schema@@Base+0x291c>
   36638:	cmp	r1, #14
   3663c:	bne	3699c <__flatcc_fb_build_schema@@Base+0x2c54>
   36640:	ldr	r7, [r8, #16]
   36644:	ldrh	r1, [r7, #8]
   36648:	cmp	r1, #1
   3664c:	beq	366bc <__flatcc_fb_build_schema@@Base+0x2974>
   36650:	cmp	r1, #3
   36654:	bne	369e4 <__flatcc_fb_build_schema@@Base+0x2c9c>
   36658:	ldr	ip, [r7, #112]	; 0x70
   3665c:	ldr	sl, [r7, #116]	; 0x74
   36660:	b	366b0 <__flatcc_fb_build_schema@@Base+0x2968>
   36664:	ldr	r3, [r8, #16]
   36668:	movw	r1, #999	; 0x3e7
   3666c:	ldr	r0, [r3, #16]
   36670:	add	r0, r0, r1
   36674:	cmp	r0, #28
   36678:	bcs	369c0 <__flatcc_fb_build_schema@@Base+0x2c78>
   3667c:	movw	r2, #55291	; 0xd7fb
   36680:	mov	r1, #1
   36684:	movt	r2, #2430	; 0x97e
   36688:	tst	r1, r2, lsr r0
   3668c:	beq	369c0 <__flatcc_fb_build_schema@@Base+0x2c78>
   36690:	ldr	r1, [pc, #1040]	; 36aa8 <__flatcc_fb_build_schema@@Base+0x2d60>
   36694:	mov	sl, #0
   36698:	add	r1, pc, r1
   3669c:	ldr	r0, [r1, r0, lsl #2]
   366a0:	str	r0, [r8, #16]
   366a4:	ldr	r1, [pc, #1024]	; 36aac <__flatcc_fb_build_schema@@Base+0x2d64>
   366a8:	add	r1, pc, r1
   366ac:	ldr	ip, [r1, r0, lsl #2]
   366b0:	strh	ip, [r8, #74]	; 0x4a
   366b4:	mov	lr, ip
   366b8:	b	36738 <__flatcc_fb_build_schema@@Base+0x29f0>
   366bc:	ldrh	r1, [r7, #10]
   366c0:	tst	r1, #1
   366c4:	bne	36a14 <__flatcc_fb_build_schema@@Base+0x2ccc>
   366c8:	tst	r1, #2
   366cc:	bne	36728 <__flatcc_fb_build_schema@@Base+0x29e0>
   366d0:	ldr	r1, [r9, #188]	; 0xbc
   366d4:	cmp	r1, #0
   366d8:	beq	36700 <__flatcc_fb_build_schema@@Base+0x29b8>
   366dc:	ldr	r3, [r7, #4]
   366e0:	ldr	r1, [r8, #4]
   366e4:	str	r6, [sp]
   366e8:	str	r6, [sp, #4]
   366ec:	mov	r0, r9
   366f0:	ldr	r2, [pc, #956]	; 36ab4 <__flatcc_fb_build_schema@@Base+0x2d6c>
   366f4:	add	r2, pc, r2
   366f8:	bl	2ac84 <__flatcc_error_report@@Base>
   366fc:	ldr	r0, [r9, #116]	; 0x74
   36700:	add	r0, r0, #1
   36704:	mov	r1, r7
   36708:	str	r0, [r9, #116]	; 0x74
   3670c:	mov	r0, r9
   36710:	bl	365ac <__flatcc_fb_build_schema@@Base+0x2864>
   36714:	ldr	r1, [r9, #116]	; 0x74
   36718:	cmp	r0, #0
   3671c:	sub	r1, r1, #1
   36720:	str	r1, [r9, #116]	; 0x74
   36724:	bne	36a34 <__flatcc_fb_build_schema@@Base+0x2cec>
   36728:	ldrh	lr, [r7, #104]	; 0x68
   3672c:	strh	lr, [r8, #74]	; 0x4a
   36730:	ldr	ip, [r7, #112]	; 0x70
   36734:	ldr	sl, [r7, #116]	; 0x74
   36738:	uxth	r7, lr
   3673c:	str	ip, [r8, #88]	; 0x58
   36740:	str	sl, [r8, #92]	; 0x5c
   36744:	subs	r5, r7, #1
   36748:	sbc	r4, r6, #0
   3674c:	cmp	r7, #0
   36750:	beq	368ec <__flatcc_fb_build_schema@@Base+0x2ba4>
   36754:	rsbs	r0, r5, #255	; 0xff
   36758:	rscs	r0, r4, #0
   3675c:	bcc	368ec <__flatcc_fb_build_schema@@Base+0x2ba4>
   36760:	ldr	r0, [sp, #24]
   36764:	mov	r6, #0
   36768:	mov	r3, #1
   3676c:	ldrd	r0, [r0]
   36770:	eor	r2, r3, r7
   36774:	orrs	r2, r2, r6
   36778:	beq	36798 <__flatcc_fb_build_schema@@Base+0x2a50>
   3677c:	lsl	r6, r6, #1
   36780:	orr	r6, r6, r3, lsr #31
   36784:	lsl	r3, r3, #1
   36788:	subs	r9, r7, r3
   3678c:	rscs	r2, r6, #0
   36790:	bcs	36770 <__flatcc_fb_build_schema@@Base+0x2a28>
   36794:	b	368ec <__flatcc_fb_build_schema@@Base+0x2ba4>
   36798:	adds	r2, r5, r0
   3679c:	mov	r6, #0
   367a0:	adc	r3, r4, r1
   367a4:	rsbs	r4, r7, #0
   367a8:	and	r4, r2, r4
   367ac:	sbc	r2, r6, #0
   367b0:	and	r5, r3, r2
   367b4:	subs	r2, r4, r0
   367b8:	sbcs	r2, r5, r1
   367bc:	strd	r4, [r8, #80]	; 0x50
   367c0:	bcc	36950 <__flatcc_fb_build_schema@@Base+0x2c08>
   367c4:	adds	r4, ip, r4
   367c8:	adcs	r5, sl, r5
   367cc:	adc	r2, r6, #0
   367d0:	cmp	r2, #1
   367d4:	beq	36950 <__flatcc_fb_build_schema@@Base+0x2c08>
   367d8:	ldr	r9, [sp, #16]
   367dc:	subs	r0, r4, r0
   367e0:	sbcs	r0, r5, r1
   367e4:	bcc	367f4 <__flatcc_fb_build_schema@@Base+0x2aac>
   367e8:	subs	r0, r4, #65536	; 0x10000
   367ec:	sbcs	r0, r5, #0
   367f0:	bcc	36818 <__flatcc_fb_build_schema@@Base+0x2ad0>
   367f4:	ldr	r1, [r8, #4]
   367f8:	str	r6, [sp]
   367fc:	str	r6, [sp, #4]
   36800:	mov	r0, r9
   36804:	mov	r3, #0
   36808:	ldr	r2, [pc, #688]	; 36ac0 <__flatcc_fb_build_schema@@Base+0x2d78>
   3680c:	add	r2, pc, r2
   36810:	bl	2ac84 <__flatcc_error_report@@Base>
   36814:	ldrh	lr, [r8, #74]	; 0x4a
   36818:	ldr	r0, [sp, #24]
   3681c:	strd	r4, [r0]
   36820:	uxth	r0, lr
   36824:	ldr	r5, [sp, #20]
   36828:	ldr	r8, [r8]
   3682c:	uxth	r1, r5
   36830:	cmp	r1, r0
   36834:	movcc	r5, lr
   36838:	cmp	r8, #0
   3683c:	bne	36618 <__flatcc_fb_build_schema@@Base+0x28d0>
   36840:	b	36848 <__flatcc_fb_build_schema@@Base+0x2b00>
   36844:	mov	r5, #1
   36848:	ldr	r7, [sp, #12]
   3684c:	ldrh	r0, [r7, #104]	; 0x68
   36850:	cmp	r0, #0
   36854:	beq	36888 <__flatcc_fb_build_schema@@Base+0x2b40>
   36858:	uxth	r1, r5
   3685c:	cmp	r1, r0
   36860:	bls	36890 <__flatcc_fb_build_schema@@Base+0x2b48>
   36864:	mov	r0, #0
   36868:	ldr	r1, [r7, #4]
   3686c:	mov	r3, #0
   36870:	str	r0, [sp]
   36874:	str	r0, [sp, #4]
   36878:	mov	r0, r9
   3687c:	ldr	r2, [pc, #576]	; 36ac4 <__flatcc_fb_build_schema@@Base+0x2d7c>
   36880:	add	r2, pc, r2
   36884:	bl	2ac84 <__flatcc_error_report@@Base>
   36888:	mov	r0, r5
   3688c:	strh	r5, [r7, #104]	; 0x68
   36890:	uxth	r0, r0
   36894:	mov	r2, #0
   36898:	subs	r1, r0, #1
   3689c:	sbc	r2, r2, #0
   368a0:	cmp	r0, #0
   368a4:	beq	368ec <__flatcc_fb_build_schema@@Base+0x2ba4>
   368a8:	rsbs	r3, r1, #255	; 0xff
   368ac:	rscs	r3, r2, #0
   368b0:	bcc	368ec <__flatcc_fb_build_schema@@Base+0x2ba4>
   368b4:	mov	r3, r7
   368b8:	mov	r4, #0
   368bc:	mov	r5, #1
   368c0:	ldr	lr, [r3, #112]!	; 0x70
   368c4:	ldr	ip, [r3, #4]
   368c8:	eor	r6, r5, r0
   368cc:	orrs	r6, r6, r4
   368d0:	beq	3690c <__flatcc_fb_build_schema@@Base+0x2bc4>
   368d4:	lsl	r4, r4, #1
   368d8:	orr	r4, r4, r5, lsr #31
   368dc:	lsl	r5, r5, #1
   368e0:	subs	r6, r0, r5
   368e4:	rscs	r6, r4, #0
   368e8:	bcs	368c8 <__flatcc_fb_build_schema@@Base+0x2b80>
   368ec:	ldr	r0, [pc, #504]	; 36aec <__flatcc_fb_build_schema@@Base+0x2da4>
   368f0:	ldr	r1, [pc, #504]	; 36af0 <__flatcc_fb_build_schema@@Base+0x2da8>
   368f4:	ldr	r3, [pc, #504]	; 36af4 <__flatcc_fb_build_schema@@Base+0x2dac>
   368f8:	mov	r2, #108	; 0x6c
   368fc:	add	r0, pc, r0
   36900:	add	r1, pc, r1
   36904:	add	r3, pc, r3
   36908:	bl	14a78 <__assert_fail@plt>
   3690c:	adds	r1, r1, lr
   36910:	mov	r4, #0
   36914:	adc	r2, r2, ip
   36918:	rsbs	r0, r0, #0
   3691c:	and	r0, r1, r0
   36920:	sbc	r1, r4, #0
   36924:	and	r1, r2, r1
   36928:	strd	r0, [r3]
   3692c:	movw	r1, #65532	; 0xfffc
   36930:	ldrh	r0, [r7, #10]
   36934:	and	r0, r0, r1
   36938:	orr	r0, r0, #2
   3693c:	strh	r0, [r7, #10]
   36940:	ldr	r0, [r9, #396]	; 0x18c
   36944:	str	r0, [r7, #120]	; 0x78
   36948:	str	r7, [r9, #396]	; 0x18c
   3694c:	b	36a08 <__flatcc_fb_build_schema@@Base+0x2cc0>
   36950:	mov	r0, #0
   36954:	ldr	r1, [r8, #4]
   36958:	str	r0, [sp]
   3695c:	str	r0, [sp, #4]
   36960:	ldr	r2, [pc, #340]	; 36abc <__flatcc_fb_build_schema@@Base+0x2d74>
   36964:	ldr	r0, [sp, #16]
   36968:	add	r2, pc, r2
   3696c:	b	3698c <__flatcc_fb_build_schema@@Base+0x2c44>
   36970:	mov	r0, #0
   36974:	mov	r1, #0
   36978:	str	r0, [sp]
   3697c:	str	r0, [sp, #4]
   36980:	mov	r0, r9
   36984:	ldr	r2, [pc, #272]	; 36a9c <__flatcc_fb_build_schema@@Base+0x2d54>
   36988:	add	r2, pc, r2
   3698c:	mov	r3, #0
   36990:	bl	2ac84 <__flatcc_error_report@@Base>
   36994:	mvn	r4, #0
   36998:	b	36a08 <__flatcc_fb_build_schema@@Base+0x2cc0>
   3699c:	cmp	r1, #1
   369a0:	beq	36a08 <__flatcc_fb_build_schema@@Base+0x2cc0>
   369a4:	mov	r0, #0
   369a8:	ldr	r1, [r8, #4]
   369ac:	str	r0, [sp]
   369b0:	str	r0, [sp, #4]
   369b4:	ldr	r2, [pc, #228]	; 36aa0 <__flatcc_fb_build_schema@@Base+0x2d58>
   369b8:	add	r2, pc, r2
   369bc:	b	369fc <__flatcc_fb_build_schema@@Base+0x2cb4>
   369c0:	mov	r0, #0
   369c4:	str	r0, [r8, #16]
   369c8:	ldr	r1, [r8, #4]
   369cc:	str	r0, [sp]
   369d0:	str	r0, [sp, #4]
   369d4:	ldr	r2, [pc, #200]	; 36aa4 <__flatcc_fb_build_schema@@Base+0x2d5c>
   369d8:	add	r2, pc, r2
   369dc:	mov	r0, r9
   369e0:	b	36a04 <__flatcc_fb_build_schema@@Base+0x2cbc>
   369e4:	mov	r0, #0
   369e8:	ldr	r1, [r8, #4]
   369ec:	str	r0, [sp]
   369f0:	str	r0, [sp, #4]
   369f4:	ldr	r2, [pc, #188]	; 36ab8 <__flatcc_fb_build_schema@@Base+0x2d70>
   369f8:	add	r2, pc, r2
   369fc:	mov	r0, r9
   36a00:	mov	r3, #0
   36a04:	bl	2ac84 <__flatcc_error_report@@Base>
   36a08:	mov	r0, r4
   36a0c:	sub	sp, fp, #28
   36a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36a14:	mov	r0, #0
   36a18:	ldr	r3, [r7, #4]
   36a1c:	ldr	r1, [r8, #4]
   36a20:	str	r0, [sp]
   36a24:	str	r0, [sp, #4]
   36a28:	ldr	r2, [pc, #128]	; 36ab0 <__flatcc_fb_build_schema@@Base+0x2d68>
   36a2c:	add	r2, pc, r2
   36a30:	b	369dc <__flatcc_fb_build_schema@@Base+0x2c94>
   36a34:	mov	r4, r0
   36a38:	b	36a08 <__flatcc_fb_build_schema@@Base+0x2cc0>
   36a3c:	ldr	r0, [pc, #132]	; 36ac8 <__flatcc_fb_build_schema@@Base+0x2d80>
   36a40:	ldr	r1, [pc, #132]	; 36acc <__flatcc_fb_build_schema@@Base+0x2d84>
   36a44:	ldr	r3, [pc, #132]	; 36ad0 <__flatcc_fb_build_schema@@Base+0x2d88>
   36a48:	movw	r2, #502	; 0x1f6
   36a4c:	add	r0, pc, r0
   36a50:	add	r1, pc, r1
   36a54:	add	r3, pc, r3
   36a58:	bl	14a78 <__assert_fail@plt>
   36a5c:	ldr	r0, [pc, #112]	; 36ad4 <__flatcc_fb_build_schema@@Base+0x2d8c>
   36a60:	ldr	r1, [pc, #112]	; 36ad8 <__flatcc_fb_build_schema@@Base+0x2d90>
   36a64:	ldr	r3, [pc, #112]	; 36adc <__flatcc_fb_build_schema@@Base+0x2d94>
   36a68:	mov	r2, #504	; 0x1f8
   36a6c:	add	r0, pc, r0
   36a70:	add	r1, pc, r1
   36a74:	add	r3, pc, r3
   36a78:	bl	14a78 <__assert_fail@plt>
   36a7c:	ldr	r0, [pc, #92]	; 36ae0 <__flatcc_fb_build_schema@@Base+0x2d98>
   36a80:	ldr	r1, [pc, #92]	; 36ae4 <__flatcc_fb_build_schema@@Base+0x2d9c>
   36a84:	ldr	r3, [pc, #92]	; 36ae8 <__flatcc_fb_build_schema@@Base+0x2da0>
   36a88:	mov	r2, #508	; 0x1fc
   36a8c:	add	r0, pc, r0
   36a90:	add	r1, pc, r1
   36a94:	add	r3, pc, r3
   36a98:	bl	14a78 <__assert_fail@plt>
   36a9c:	andeq	r2, r2, r5, lsr r4
   36aa0:	andeq	r2, r2, lr, asr #8
   36aa4:	andeq	r2, r2, lr, lsr #8
   36aa8:			; <UNDEFINED> instruction: 0x000234b0
   36aac:	andeq	r3, r2, r0, lsl #8
   36ab0:	andeq	r2, r2, sl, ror #7
   36ab4:	andeq	r2, r2, r2, asr #14
   36ab8:	andeq	r2, r2, r5, lsl #9
   36abc:	andeq	r2, r2, r8, lsr r5
   36ac0:	andeq	r2, r2, r9, lsr #13
   36ac4:	andeq	r2, r2, r8, ror #12
   36ac8:	andeq	r0, r1, lr, asr #11
   36acc:	andeq	r1, r2, lr, ror #19
   36ad0:	strdeq	r2, [r2], -pc	; <UNPREDICTABLE>
   36ad4:	andeq	r2, r2, pc, lsl r3
   36ad8:	andeq	r1, r2, lr, asr #19
   36adc:	ldrdeq	r2, [r2], -pc	; <UNPREDICTABLE>
   36ae0:	andeq	r2, r2, r6, lsr #6
   36ae4:	andeq	r1, r2, lr, lsr #19
   36ae8:			; <UNDEFINED> instruction: 0x000222bf
   36aec:	andeq	r2, r2, r7, lsr #12
   36af0:	andeq	r1, r2, lr, lsr fp
   36af4:	andeq	r2, r2, r5, lsr r6
   36af8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36afc:	add	fp, sp, #28
   36b00:	sub	sp, sp, #12
   36b04:	mov	r5, r1
   36b08:	mov	r4, r0
   36b0c:	vmov.i32	q8, #0	; 0x00000000
   36b10:	mov	r0, #32
   36b14:	mov	r1, r3
   36b18:	vst1.32	{d16-d17}, [r1], r0
   36b1c:	add	r0, r3, #16
   36b20:	cmp	r5, #0
   36b24:	vst1.32	{d16-d17}, [r1]
   36b28:	vst1.32	{d16-d17}, [r0]
   36b2c:	beq	36cf0 <__flatcc_fb_build_schema@@Base+0x2fa8>
   36b30:	mov	r6, r3
   36b34:	mov	r7, r2
   36b38:	mov	sl, #0
   36b3c:	mvn	r8, #98	; 0x62
   36b40:	mov	r9, #0
   36b44:	b	36c08 <__flatcc_fb_build_schema@@Base+0x2ec0>
   36b48:	movw	r1, #3500	; 0xdac
   36b4c:	str	r5, [r6, r0, lsl #2]
   36b50:	tst	r3, r1, lsr r0
   36b54:	ldrhne	r1, [r5, #16]
   36b58:	cmpne	r1, #0
   36b5c:	bne	36bec <__flatcc_fb_build_schema@@Base+0x2ea4>
   36b60:	sub	r0, r0, #1
   36b64:	cmp	r0, #8
   36b68:	bhi	36cac <__flatcc_fb_build_schema@@Base+0x2f64>
   36b6c:	add	r1, pc, #4
   36b70:	ldr	r0, [r1, r0, lsl #2]
   36b74:	add	pc, r1, r0
   36b78:	andeq	r0, r0, r4, lsr #32
   36b7c:	andeq	r0, r0, r4, lsr r1
   36b80:	andeq	r0, r0, r4, lsr r1
   36b84:	andeq	r0, r0, r4, lsr #32
   36b88:	andeq	r0, r0, r4, lsr r1
   36b8c:	andeq	r0, r0, ip, asr #32
   36b90:	andeq	r0, r0, r4, lsr r1
   36b94:	andeq	r0, r0, r4, lsr r1
   36b98:	andeq	r0, r0, ip, asr #32
   36b9c:	ldrh	r0, [r5, #16]
   36ba0:	cmp	r0, #5
   36ba4:	beq	36cac <__flatcc_fb_build_schema@@Base+0x2f64>
   36ba8:	ldr	r1, [r5, #4]
   36bac:	str	sl, [sp]
   36bb0:	str	sl, [sp, #4]
   36bb4:	mov	r0, r4
   36bb8:	ldr	r2, [pc, #340]	; 36d14 <__flatcc_fb_build_schema@@Base+0x2fcc>
   36bbc:	add	r2, pc, r2
   36bc0:	b	36ca4 <__flatcc_fb_build_schema@@Base+0x2f5c>
   36bc4:	ldrh	r0, [r5, #16]
   36bc8:	cmp	r0, #2
   36bcc:	beq	36cac <__flatcc_fb_build_schema@@Base+0x2f64>
   36bd0:	ldr	r1, [r5, #4]
   36bd4:	str	sl, [sp]
   36bd8:	str	sl, [sp, #4]
   36bdc:	mov	r0, r4
   36be0:	ldr	r2, [pc, #296]	; 36d10 <__flatcc_fb_build_schema@@Base+0x2fc8>
   36be4:	add	r2, pc, r2
   36be8:	b	36ca4 <__flatcc_fb_build_schema@@Base+0x2f5c>
   36bec:	ldr	r1, [r5, #4]
   36bf0:	str	sl, [sp]
   36bf4:	str	sl, [sp, #4]
   36bf8:	mov	r0, r4
   36bfc:	ldr	r2, [pc, #264]	; 36d0c <__flatcc_fb_build_schema@@Base+0x2fc4>
   36c00:	add	r2, pc, r2
   36c04:	b	36ca4 <__flatcc_fb_build_schema@@Base+0x2f5c>
   36c08:	ldr	r0, [r5, #4]
   36c0c:	ldm	r0, {r1, r2}
   36c10:	ldr	r0, [r4, #412]	; 0x19c
   36c14:	add	r0, r0, #16
   36c18:	bl	3d8a0 <fb_name_table_find@@Base>
   36c1c:	cmp	r0, #0
   36c20:	beq	36c70 <__flatcc_fb_build_schema@@Base+0x2f28>
   36c24:	ldr	r0, [r0, #24]
   36c28:	cmp	r0, #0
   36c2c:	beq	36cac <__flatcc_fb_build_schema@@Base+0x2f64>
   36c30:	mov	r1, #1
   36c34:	tst	r7, r1, lsl r0
   36c38:	beq	36c8c <__flatcc_fb_build_schema@@Base+0x2f44>
   36c3c:	ldr	r2, [r6, r0, lsl #2]
   36c40:	mov	r3, #1
   36c44:	lsl	r1, r3, r0
   36c48:	orr	r9, r9, r1
   36c4c:	cmp	r2, #0
   36c50:	beq	36b48 <__flatcc_fb_build_schema@@Base+0x2e00>
   36c54:	ldr	r1, [r5, #4]
   36c58:	str	sl, [sp]
   36c5c:	str	sl, [sp, #4]
   36c60:	mov	r0, r4
   36c64:	ldr	r2, [pc, #156]	; 36d08 <__flatcc_fb_build_schema@@Base+0x2fc0>
   36c68:	add	r2, pc, r2
   36c6c:	b	36ca4 <__flatcc_fb_build_schema@@Base+0x2f5c>
   36c70:	ldr	r1, [r5, #4]
   36c74:	str	sl, [sp]
   36c78:	str	sl, [sp, #4]
   36c7c:	mov	r0, r4
   36c80:	ldr	r2, [pc, #120]	; 36d00 <__flatcc_fb_build_schema@@Base+0x2fb8>
   36c84:	add	r2, pc, r2
   36c88:	b	36ca4 <__flatcc_fb_build_schema@@Base+0x2f5c>
   36c8c:	ldr	r1, [r5, #4]
   36c90:	str	sl, [sp]
   36c94:	str	sl, [sp, #4]
   36c98:	mov	r0, r4
   36c9c:	ldr	r2, [pc, #96]	; 36d04 <__flatcc_fb_build_schema@@Base+0x2fbc>
   36ca0:	add	r2, pc, r2
   36ca4:	mov	r3, #0
   36ca8:	bl	2ac84 <__flatcc_error_report@@Base>
   36cac:	ldr	r5, [r5]
   36cb0:	cmp	r8, #0
   36cb4:	addne	r8, r8, #1
   36cb8:	cmpne	r5, #0
   36cbc:	bne	36c08 <__flatcc_fb_build_schema@@Base+0x2ec0>
   36cc0:	cmp	r5, #0
   36cc4:	beq	36cf4 <__flatcc_fb_build_schema@@Base+0x2fac>
   36cc8:	mov	r0, #0
   36ccc:	ldr	r1, [r5, #4]
   36cd0:	mov	r3, #0
   36cd4:	str	r0, [sp]
   36cd8:	str	r0, [sp, #4]
   36cdc:	mov	r0, r4
   36ce0:	ldr	r2, [pc, #48]	; 36d18 <__flatcc_fb_build_schema@@Base+0x2fd0>
   36ce4:	add	r2, pc, r2
   36ce8:	bl	2ac84 <__flatcc_error_report@@Base>
   36cec:	b	36cf4 <__flatcc_fb_build_schema@@Base+0x2fac>
   36cf0:	mov	r9, #0
   36cf4:	uxth	r0, r9
   36cf8:	sub	sp, fp, #28
   36cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36d00:	muleq	r2, r5, sp
   36d04:	muleq	r2, r8, sp
   36d08:	strdeq	r1, [r2], -sp
   36d0c:	andeq	r1, r2, fp, lsl #29
   36d10:	andeq	r1, r2, pc, asr #29
   36d14:	andeq	r1, r2, r8, lsl pc
   36d18:	andeq	r1, r2, ip, lsl lr
   36d1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36d20:	add	fp, sp, #28
   36d24:	sub	sp, sp, #4
   36d28:	mov	r5, r1
   36d2c:	mov	sl, r0
   36d30:	cmp	r2, #0
   36d34:	beq	36d60 <__flatcc_fb_build_schema@@Base+0x3018>
   36d38:	mov	r7, #0
   36d3c:	mov	r1, r2
   36d40:	mov	r0, #0
   36d44:	mov	r6, r0
   36d48:	mov	r0, r1
   36d4c:	ldr	r1, [r1]
   36d50:	add	r7, r7, #1
   36d54:	cmp	r1, #0
   36d58:	bne	36d44 <__flatcc_fb_build_schema@@Base+0x2ffc>
   36d5c:	b	36d6c <__flatcc_fb_build_schema@@Base+0x3024>
   36d60:	mov	r6, #0
   36d64:	mov	r0, #0
   36d68:	mov	r7, #0
   36d6c:	cmp	r3, #0
   36d70:	mov	r9, #0
   36d74:	moveq	r6, r0
   36d78:	strne	r0, [r3]
   36d7c:	subne	r7, r7, #1
   36d80:	cmp	r6, #0
   36d84:	beq	36ec8 <__flatcc_fb_build_schema@@Base+0x3180>
   36d88:	cmp	r5, #0
   36d8c:	beq	36e60 <__flatcc_fb_build_schema@@Base+0x3118>
   36d90:	cmp	r7, #1
   36d94:	bne	36e60 <__flatcc_fb_build_schema@@Base+0x3118>
   36d98:	add	r8, sl, #524	; 0x20c
   36d9c:	ldr	r0, [r6, #4]
   36da0:	ldm	r0, {r1, r2}
   36da4:	add	r0, r5, #4
   36da8:	bl	28b58 <fb_symbol_table_find@@Base>
   36dac:	cmp	r0, #0
   36db0:	beq	36dd8 <__flatcc_fb_build_schema@@Base+0x3090>
   36db4:	mov	r9, r0
   36db8:	ldrh	r0, [r0, #8]
   36dbc:	cmp	r0, #4
   36dc0:	bhi	36dd8 <__flatcc_fb_build_schema@@Base+0x3090>
   36dc4:	ldr	r1, [r9, #16]
   36dc8:	mov	r0, r8
   36dcc:	bl	284dc <ptr_set_find_item@@Base>
   36dd0:	cmp	r0, #0
   36dd4:	bne	36ec8 <__flatcc_fb_build_schema@@Base+0x3180>
   36dd8:	ldr	r0, [r5]
   36ddc:	cmp	r0, #0
   36de0:	beq	36ec4 <__flatcc_fb_build_schema@@Base+0x317c>
   36de4:	mov	r4, #0
   36de8:	ldr	r0, [r0]
   36dec:	mov	r1, r4
   36df0:	add	r4, r4, #1
   36df4:	cmp	r0, #0
   36df8:	bne	36de8 <__flatcc_fb_build_schema@@Base+0x30a0>
   36dfc:	rsb	r7, r1, #0
   36e00:	ldr	r0, [sl, #412]	; 0x19c
   36e04:	cmp	r4, #2
   36e08:	blt	36e3c <__flatcc_fb_build_schema@@Base+0x30f4>
   36e0c:	cmp	r0, #0
   36e10:	beq	36e24 <__flatcc_fb_build_schema@@Base+0x30dc>
   36e14:	ldr	r1, [r5]
   36e18:	mov	r2, r7
   36e1c:	bl	29530 <fb_scope_table_find@@Base>
   36e20:	b	36e28 <__flatcc_fb_build_schema@@Base+0x30e0>
   36e24:	mov	r0, #0
   36e28:	sub	r4, r4, #1
   36e2c:	add	r7, r7, #1
   36e30:	cmp	r0, #0
   36e34:	beq	36e00 <__flatcc_fb_build_schema@@Base+0x30b8>
   36e38:	b	36e50 <__flatcc_fb_build_schema@@Base+0x3108>
   36e3c:	cmp	r0, #0
   36e40:	beq	36ec4 <__flatcc_fb_build_schema@@Base+0x317c>
   36e44:	mov	r1, #0
   36e48:	mov	r2, #0
   36e4c:	bl	29530 <fb_scope_table_find@@Base>
   36e50:	cmp	r0, #0
   36e54:	mov	r5, r0
   36e58:	bne	36d9c <__flatcc_fb_build_schema@@Base+0x3054>
   36e5c:	b	36ec4 <__flatcc_fb_build_schema@@Base+0x317c>
   36e60:	ldr	r0, [sl, #412]	; 0x19c
   36e64:	cmp	r0, #0
   36e68:	beq	36ec8 <__flatcc_fb_build_schema@@Base+0x3180>
   36e6c:	subs	r1, r7, #1
   36e70:	movne	r1, r2
   36e74:	rsb	r2, r7, #1
   36e78:	bl	29530 <fb_scope_table_find@@Base>
   36e7c:	cmp	r0, #0
   36e80:	beq	36ec8 <__flatcc_fb_build_schema@@Base+0x3180>
   36e84:	ldr	r2, [r6, #4]
   36e88:	add	r0, r0, #4
   36e8c:	ldm	r2, {r1, r2}
   36e90:	bl	28b58 <fb_symbol_table_find@@Base>
   36e94:	cmp	r0, #0
   36e98:	beq	36ec4 <__flatcc_fb_build_schema@@Base+0x317c>
   36e9c:	mov	r9, r0
   36ea0:	ldrh	r0, [r0, #8]
   36ea4:	cmp	r0, #4
   36ea8:	bhi	36ec4 <__flatcc_fb_build_schema@@Base+0x317c>
   36eac:	ldr	r1, [r9, #16]
   36eb0:	add	r0, sl, #524	; 0x20c
   36eb4:	bl	284dc <ptr_set_find_item@@Base>
   36eb8:	cmp	r0, #0
   36ebc:	moveq	r9, #0
   36ec0:	b	36ec8 <__flatcc_fb_build_schema@@Base+0x3180>
   36ec4:	mov	r9, #0
   36ec8:	mov	r0, r9
   36ecc:	sub	sp, fp, #28
   36ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00036ed4 <__flatcc_fb_coerce_scalar_type@@Base>:
   36ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   36ed8:	add	fp, sp, #28
   36edc:	sub	sp, sp, #20
   36ee0:	mov	r4, r3
   36ee4:	mov	sl, r0
   36ee8:	mov	r5, #0
   36eec:	ldrh	r0, [r4, #8]!
   36ef0:	cmp	r0, #2
   36ef4:	bcc	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36ef8:	mov	r7, r3
   36efc:	mov	r6, r1
   36f00:	cmp	r0, #4
   36f04:	bne	36f30 <__flatcc_fb_coerce_scalar_type@@Base+0x5c>
   36f08:	ldrd	r8, [r7]
   36f0c:	mvn	r0, #127	; 0x7f
   36f10:	mvn	r3, #0
   36f14:	add	r1, r0, #127	; 0x7f
   36f18:	mov	r0, #4
   36f1c:	subs	r1, r1, r8
   36f20:	sbcs	r1, r3, r9
   36f24:	movlt	r0, #5
   36f28:	strhlt	r0, [r4]
   36f2c:	b	36f90 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   36f30:	cmp	r2, #5
   36f34:	beq	36f90 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   36f38:	cmp	r0, #6
   36f3c:	bne	36f90 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   36f40:	ldr	r0, [sl, #144]	; 0x90
   36f44:	cmp	r0, #0
   36f48:	beq	36f8c <__flatcc_fb_coerce_scalar_type@@Base+0xb8>
   36f4c:	mov	r0, #0
   36f50:	str	r0, [r7, #4]
   36f54:	mov	r0, #5
   36f58:	strh	r0, [r7, #8]
   36f5c:	ldrb	r1, [r7]
   36f60:	cmp	r1, #2
   36f64:	str	r1, [r7]
   36f68:	bcc	36f90 <__flatcc_fb_coerce_scalar_type@@Base+0xbc>
   36f6c:	ldr	r0, [pc, #1492]	; 37548 <__flatcc_fb_coerce_scalar_type@@Base+0x674>
   36f70:	ldr	r1, [pc, #1492]	; 3754c <__flatcc_fb_coerce_scalar_type@@Base+0x678>
   36f74:	ldr	r3, [pc, #1492]	; 37550 <__flatcc_fb_coerce_scalar_type@@Base+0x67c>
   36f78:	mov	r2, #52	; 0x34
   36f7c:	add	r0, pc, r0
   36f80:	add	r1, pc, r1
   36f84:	add	r3, pc, r3
   36f88:	bl	14a78 <__assert_fail@plt>
   36f8c:	mov	r0, #6
   36f90:	sub	r1, r2, #1
   36f94:	cmp	r1, #10
   36f98:	bhi	37248 <__flatcc_fb_coerce_scalar_type@@Base+0x374>
   36f9c:	add	r2, pc, #4
   36fa0:	ldr	r1, [r2, r1, lsl #2]
   36fa4:	add	pc, r2, r1
   36fa8:	andeq	r0, r0, ip, lsr #32
   36fac:	andeq	r0, r0, ip, ror r1
   36fb0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   36fb4:	andeq	r0, r0, r4, lsl #2
   36fb8:	andeq	r0, r0, r0, asr r0
   36fbc:	andeq	r0, r0, ip, lsr #3
   36fc0:	andeq	r0, r0, r4, ror #3
   36fc4:	andeq	r0, r0, r8, lsr r1
   36fc8:	andeq	r0, r0, r8, lsr #4
   36fcc:	muleq	r0, r8, r0
   36fd0:	andeq	r0, r0, ip, ror #4
   36fd4:	cmp	r0, #5
   36fd8:	beq	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   36fdc:	mov	r0, #0
   36fe0:	ldr	r1, [r6, #4]
   36fe4:	str	r0, [sp]
   36fe8:	str	r0, [sp, #4]
   36fec:	ldr	r2, [pc, #1264]	; 374e4 <__flatcc_fb_coerce_scalar_type@@Base+0x610>
   36ff0:	add	r2, pc, r2
   36ff4:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   36ff8:	cmp	r0, #6
   36ffc:	beq	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   37000:	cmp	r0, #5
   37004:	bne	372b8 <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   37008:	ldr	r0, [sl, #144]	; 0x90
   3700c:	cmp	r0, #0
   37010:	beq	372b8 <__flatcc_fb_coerce_scalar_type@@Base+0x3e4>
   37014:	ldrd	r0, [r7]
   37018:	subs	r0, r0, #2
   3701c:	sbcs	r0, r1, #0
   37020:	bcc	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   37024:	mov	r0, #0
   37028:	ldr	r1, [r6, #4]
   3702c:	str	r0, [sp]
   37030:	str	r0, [sp, #4]
   37034:	ldr	r2, [pc, #1264]	; 3752c <__flatcc_fb_coerce_scalar_type@@Base+0x658>
   37038:	add	r2, pc, r2
   3703c:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37040:	cmp	r0, #3
   37044:	beq	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   37048:	cmp	r0, #5
   3704c:	beq	373d0 <__flatcc_fb_coerce_scalar_type@@Base+0x4fc>
   37050:	cmp	r0, #4
   37054:	bne	3742c <__flatcc_fb_coerce_scalar_type@@Base+0x558>
   37058:	ldrd	r8, [r7]
   3705c:	mov	r0, r8
   37060:	mov	r1, r9
   37064:	bl	3e710 <fb_value_set_visit@@Base+0x3b4>
   37068:	str	r0, [sp, #16]
   3706c:	str	r1, [sp, #12]
   37070:	bl	3ea38 <fb_value_set_visit@@Base+0x6dc>
   37074:	b	373ec <__flatcc_fb_coerce_scalar_type@@Base+0x518>
   37078:	cmp	r0, #5
   3707c:	bne	37264 <__flatcc_fb_coerce_scalar_type@@Base+0x390>
   37080:	ldrd	r0, [r7]
   37084:	subs	r0, r0, #65536	; 0x10000
   37088:	sbcs	r0, r1, #0
   3708c:	bcc	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   37090:	mov	r0, #0
   37094:	ldr	r1, [r6, #4]
   37098:	str	r0, [sp]
   3709c:	str	r0, [sp, #4]
   370a0:	ldr	r2, [pc, #1100]	; 374f4 <__flatcc_fb_coerce_scalar_type@@Base+0x620>
   370a4:	add	r2, pc, r2
   370a8:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   370ac:	cmp	r0, #5
   370b0:	bne	37280 <__flatcc_fb_coerce_scalar_type@@Base+0x3ac>
   370b4:	ldrd	r0, [r7]
   370b8:	subs	r0, r0, #256	; 0x100
   370bc:	sbcs	r0, r1, #0
   370c0:	bcc	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   370c4:	mov	r0, #0
   370c8:	ldr	r1, [r6, #4]
   370cc:	str	r0, [sp]
   370d0:	str	r0, [sp, #4]
   370d4:	ldr	r2, [pc, #1056]	; 374fc <__flatcc_fb_coerce_scalar_type@@Base+0x628>
   370d8:	add	r2, pc, r2
   370dc:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   370e0:	cmp	r0, #5
   370e4:	beq	372d4 <__flatcc_fb_coerce_scalar_type@@Base+0x400>
   370e8:	cmp	r0, #4
   370ec:	bne	37360 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   370f0:	ldrd	r0, [r7]
   370f4:	mvn	r3, #32768	; 0x8000
   370f8:	mvn	r2, #0
   370fc:	subs	r0, r3, r0
   37100:	sbcs	r0, r2, r1
   37104:	blt	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   37108:	mov	r0, #0
   3710c:	ldr	r1, [r6, #4]
   37110:	str	r0, [sp]
   37114:	str	r0, [sp, #4]
   37118:	ldr	r2, [pc, #1012]	; 37514 <__flatcc_fb_coerce_scalar_type@@Base+0x640>
   3711c:	add	r2, pc, r2
   37120:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37124:	cmp	r0, #5
   37128:	bne	3729c <__flatcc_fb_coerce_scalar_type@@Base+0x3c8>
   3712c:	ldr	r0, [r7, #4]
   37130:	cmp	r0, #0
   37134:	beq	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   37138:	mov	r0, #0
   3713c:	ldr	r1, [r6, #4]
   37140:	str	r0, [sp]
   37144:	str	r0, [sp, #4]
   37148:	ldr	r2, [pc, #924]	; 374ec <__flatcc_fb_coerce_scalar_type@@Base+0x618>
   3714c:	add	r2, pc, r2
   37150:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37154:	cmp	r0, #4
   37158:	beq	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   3715c:	cmp	r0, #5
   37160:	bne	3737c <__flatcc_fb_coerce_scalar_type@@Base+0x4a8>
   37164:	ldr	r0, [r7, #4]
   37168:	cmn	r0, #1
   3716c:	bgt	37358 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   37170:	mov	r0, #0
   37174:	ldr	r1, [r6, #4]
   37178:	str	r0, [sp]
   3717c:	str	r0, [sp, #4]
   37180:	ldr	r2, [pc, #888]	; 37500 <__flatcc_fb_coerce_scalar_type@@Base+0x62c>
   37184:	add	r2, pc, r2
   37188:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3718c:	cmp	r0, #5
   37190:	beq	37300 <__flatcc_fb_coerce_scalar_type@@Base+0x42c>
   37194:	cmp	r0, #4
   37198:	bne	37398 <__flatcc_fb_coerce_scalar_type@@Base+0x4c4>
   3719c:	ldrd	r0, [r7]
   371a0:	mvn	r3, #-2147483648	; 0x80000000
   371a4:	mvn	r2, #0
   371a8:	subs	r0, r3, r0
   371ac:	sbcs	r0, r2, r1
   371b0:	blt	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   371b4:	mov	r0, #0
   371b8:	ldr	r1, [r6, #4]
   371bc:	str	r0, [sp]
   371c0:	str	r0, [sp, #4]
   371c4:	ldr	r2, [pc, #828]	; 37508 <__flatcc_fb_coerce_scalar_type@@Base+0x634>
   371c8:	add	r2, pc, r2
   371cc:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   371d0:	cmp	r0, #5
   371d4:	beq	3732c <__flatcc_fb_coerce_scalar_type@@Base+0x458>
   371d8:	cmp	r0, #4
   371dc:	bne	373b4 <__flatcc_fb_coerce_scalar_type@@Base+0x4e0>
   371e0:	ldrd	r0, [r7]
   371e4:	mvn	r3, #128	; 0x80
   371e8:	mvn	r2, #0
   371ec:	subs	r0, r3, r0
   371f0:	sbcs	r0, r2, r1
   371f4:	blt	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   371f8:	mov	r0, #0
   371fc:	ldr	r1, [r6, #4]
   37200:	str	r0, [sp]
   37204:	str	r0, [sp, #4]
   37208:	ldr	r2, [pc, #784]	; 37520 <__flatcc_fb_coerce_scalar_type@@Base+0x64c>
   3720c:	add	r2, pc, r2
   37210:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37214:	cmp	r0, #3
   37218:	beq	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   3721c:	cmp	r0, #5
   37220:	beq	37448 <__flatcc_fb_coerce_scalar_type@@Base+0x574>
   37224:	cmp	r0, #4
   37228:	bne	374a8 <__flatcc_fb_coerce_scalar_type@@Base+0x5d4>
   3722c:	ldrd	r8, [r7]
   37230:	mov	r0, r8
   37234:	mov	r1, r9
   37238:	bl	3e944 <fb_value_set_visit@@Base+0x5e8>
   3723c:	str	r0, [sp, #16]
   37240:	bl	3ea0c <fb_value_set_visit@@Base+0x6b0>
   37244:	b	37460 <__flatcc_fb_coerce_scalar_type@@Base+0x58c>
   37248:	mov	r0, #0
   3724c:	ldr	r1, [r6, #4]
   37250:	str	r0, [sp]
   37254:	str	r0, [sp, #4]
   37258:	ldr	r2, [pc, #740]	; 37544 <__flatcc_fb_coerce_scalar_type@@Base+0x670>
   3725c:	add	r2, pc, r2
   37260:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37264:	mov	r0, #0
   37268:	ldr	r1, [r6, #4]
   3726c:	str	r0, [sp]
   37270:	str	r0, [sp, #4]
   37274:	ldr	r2, [pc, #628]	; 374f0 <__flatcc_fb_coerce_scalar_type@@Base+0x61c>
   37278:	add	r2, pc, r2
   3727c:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37280:	mov	r0, #0
   37284:	ldr	r1, [r6, #4]
   37288:	str	r0, [sp]
   3728c:	str	r0, [sp, #4]
   37290:	ldr	r2, [pc, #608]	; 374f8 <__flatcc_fb_coerce_scalar_type@@Base+0x624>
   37294:	add	r2, pc, r2
   37298:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3729c:	mov	r0, #0
   372a0:	ldr	r1, [r6, #4]
   372a4:	str	r0, [sp]
   372a8:	str	r0, [sp, #4]
   372ac:	ldr	r2, [pc, #564]	; 374e8 <__flatcc_fb_coerce_scalar_type@@Base+0x614>
   372b0:	add	r2, pc, r2
   372b4:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   372b8:	mov	r0, #0
   372bc:	ldr	r1, [r6, #4]
   372c0:	str	r0, [sp]
   372c4:	str	r0, [sp, #4]
   372c8:	ldr	r2, [pc, #608]	; 37530 <__flatcc_fb_coerce_scalar_type@@Base+0x65c>
   372cc:	add	r2, pc, r2
   372d0:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   372d4:	ldrd	r0, [r7]
   372d8:	subs	r0, r0, #32768	; 0x8000
   372dc:	sbcs	r0, r1, #0
   372e0:	blt	37358 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   372e4:	mov	r0, #0
   372e8:	ldr	r1, [r6, #4]
   372ec:	str	r0, [sp]
   372f0:	str	r0, [sp, #4]
   372f4:	ldr	r2, [pc, #540]	; 37518 <__flatcc_fb_coerce_scalar_type@@Base+0x644>
   372f8:	add	r2, pc, r2
   372fc:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37300:	ldrd	r0, [r7]
   37304:	subs	r0, r0, #-2147483648	; 0x80000000
   37308:	sbcs	r0, r1, #0
   3730c:	blt	37358 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   37310:	mov	r0, #0
   37314:	ldr	r1, [r6, #4]
   37318:	str	r0, [sp]
   3731c:	str	r0, [sp, #4]
   37320:	ldr	r2, [pc, #484]	; 3750c <__flatcc_fb_coerce_scalar_type@@Base+0x638>
   37324:	add	r2, pc, r2
   37328:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3732c:	ldrd	r0, [r7]
   37330:	subs	r0, r0, #128	; 0x80
   37334:	sbcs	r0, r1, #0
   37338:	blt	37358 <__flatcc_fb_coerce_scalar_type@@Base+0x484>
   3733c:	mov	r0, #0
   37340:	ldr	r1, [r6, #4]
   37344:	str	r0, [sp]
   37348:	str	r0, [sp, #4]
   3734c:	ldr	r2, [pc, #464]	; 37524 <__flatcc_fb_coerce_scalar_type@@Base+0x650>
   37350:	add	r2, pc, r2
   37354:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37358:	mov	r0, #4
   3735c:	b	374d4 <__flatcc_fb_coerce_scalar_type@@Base+0x600>
   37360:	mov	r0, #0
   37364:	ldr	r1, [r6, #4]
   37368:	str	r0, [sp]
   3736c:	str	r0, [sp, #4]
   37370:	ldr	r2, [pc, #420]	; 3751c <__flatcc_fb_coerce_scalar_type@@Base+0x648>
   37374:	add	r2, pc, r2
   37378:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3737c:	mov	r0, #0
   37380:	ldr	r1, [r6, #4]
   37384:	str	r0, [sp]
   37388:	str	r0, [sp, #4]
   3738c:	ldr	r2, [pc, #368]	; 37504 <__flatcc_fb_coerce_scalar_type@@Base+0x630>
   37390:	add	r2, pc, r2
   37394:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37398:	mov	r0, #0
   3739c:	ldr	r1, [r6, #4]
   373a0:	str	r0, [sp]
   373a4:	str	r0, [sp, #4]
   373a8:	ldr	r2, [pc, #352]	; 37510 <__flatcc_fb_coerce_scalar_type@@Base+0x63c>
   373ac:	add	r2, pc, r2
   373b0:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   373b4:	mov	r0, #0
   373b8:	ldr	r1, [r6, #4]
   373bc:	str	r0, [sp]
   373c0:	str	r0, [sp, #4]
   373c4:	ldr	r2, [pc, #348]	; 37528 <__flatcc_fb_coerce_scalar_type@@Base+0x654>
   373c8:	add	r2, pc, r2
   373cc:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   373d0:	ldrd	r8, [r7]
   373d4:	mov	r0, r8
   373d8:	mov	r1, r9
   373dc:	bl	3e6fc <fb_value_set_visit@@Base+0x3a0>
   373e0:	str	r0, [sp, #16]
   373e4:	str	r1, [sp, #12]
   373e8:	bl	3eaa8 <fb_value_set_visit@@Base+0x74c>
   373ec:	eor	r1, r9, r1
   373f0:	eor	r0, r8, r0
   373f4:	orrs	r0, r0, r1
   373f8:	bne	37410 <__flatcc_fb_coerce_scalar_type@@Base+0x53c>
   373fc:	ldr	r0, [sp, #16]
   37400:	ldr	r1, [sp, #12]
   37404:	vmov	d16, r0, r1
   37408:	mov	r0, #3
   3740c:	b	37480 <__flatcc_fb_coerce_scalar_type@@Base+0x5ac>
   37410:	mov	r0, #0
   37414:	ldr	r1, [r6, #4]
   37418:	str	r0, [sp]
   3741c:	str	r0, [sp, #4]
   37420:	ldr	r2, [pc, #268]	; 37534 <__flatcc_fb_coerce_scalar_type@@Base+0x660>
   37424:	add	r2, pc, r2
   37428:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   3742c:	mov	r0, #0
   37430:	ldr	r1, [r6, #4]
   37434:	str	r0, [sp]
   37438:	str	r0, [sp, #4]
   3743c:	ldr	r2, [pc, #244]	; 37538 <__flatcc_fb_coerce_scalar_type@@Base+0x664>
   37440:	add	r2, pc, r2
   37444:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   37448:	ldrd	r8, [r7]
   3744c:	mov	r0, r8
   37450:	mov	r1, r9
   37454:	bl	3e934 <fb_value_set_visit@@Base+0x5d8>
   37458:	str	r0, [sp, #16]
   3745c:	bl	3ea68 <fb_value_set_visit@@Base+0x70c>
   37460:	eor	r1, r9, r1
   37464:	eor	r0, r8, r0
   37468:	orrs	r0, r0, r1
   3746c:	bne	3748c <__flatcc_fb_coerce_scalar_type@@Base+0x5b8>
   37470:	ldr	r0, [sp, #16]
   37474:	vmov	s0, r0
   37478:	mov	r0, #3
   3747c:	vcvt.f64.f32	d16, s0
   37480:	strh	r0, [r7, #8]
   37484:	vstr	d16, [r7]
   37488:	b	374d8 <__flatcc_fb_coerce_scalar_type@@Base+0x604>
   3748c:	mov	r0, #0
   37490:	ldr	r1, [r6, #4]
   37494:	str	r0, [sp]
   37498:	str	r0, [sp, #4]
   3749c:	ldr	r2, [pc, #152]	; 3753c <__flatcc_fb_coerce_scalar_type@@Base+0x668>
   374a0:	add	r2, pc, r2
   374a4:	b	374c0 <__flatcc_fb_coerce_scalar_type@@Base+0x5ec>
   374a8:	mov	r0, #0
   374ac:	ldr	r1, [r6, #4]
   374b0:	str	r0, [sp]
   374b4:	str	r0, [sp, #4]
   374b8:	ldr	r2, [pc, #128]	; 37540 <__flatcc_fb_coerce_scalar_type@@Base+0x66c>
   374bc:	add	r2, pc, r2
   374c0:	mov	r0, sl
   374c4:	mov	r3, #0
   374c8:	bl	2ac84 <__flatcc_error_report@@Base>
   374cc:	mov	r0, #1
   374d0:	mvn	r5, #0
   374d4:	strh	r0, [r4]
   374d8:	mov	r0, r5
   374dc:	sub	sp, fp, #28
   374e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   374e4:	andeq	r2, r2, r5, lsr #25
   374e8:	andeq	r2, r2, r9, lsl sl
   374ec:			; <UNDEFINED> instruction: 0x00022bb5
   374f0:	andeq	r2, r2, r6, lsr #21
   374f4:			; <UNDEFINED> instruction: 0x00022cb4
   374f8:	andeq	r2, r2, r3, ror #21
   374fc:	ldrdeq	r2, [r2], -r7
   37500:	andeq	r2, r2, r8, asr #24
   37504:	andeq	r2, r2, fp, asr sl
   37508:	andeq	r2, r2, sp, asr #24
   3750c:	andeq	r2, r2, sp, lsl #22
   37510:	andeq	r2, r2, r0, lsr #21
   37514:	andeq	r2, r2, sp, asr sp
   37518:	muleq	r2, pc, fp	; <UNPREDICTABLE>
   3751c:	andeq	r2, r2, r0, asr #22
   37520:	ldrdeq	r2, [r2], -r7
   37524:	andeq	r2, r2, pc, lsr #23
   37528:	andeq	r2, r2, r2, asr fp
   3752c:	andeq	r2, r2, pc, lsl #30
   37530:			; <UNDEFINED> instruction: 0x00022cb9
   37534:	muleq	r2, r7, fp
   37538:	andeq	r2, r2, fp, lsr #23
   3753c:	andeq	r2, r2, r4, lsl #23
   37540:	muleq	r2, r7, fp
   37544:	andeq	r2, r2, pc, lsr #28
   37548:	andeq	r2, r2, ip, lsr ip
   3754c:	andeq	r2, r2, r7, asr ip
   37550:			; <UNDEFINED> instruction: 0x00022cb0

00037554 <flatcc_builder_default_alloc@@Base>:
   37554:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   37558:	add	fp, sp, #24
   3755c:	mov	r4, r1
   37560:	cmp	r2, #0
   37564:	beq	375b0 <flatcc_builder_default_alloc@@Base+0x5c>
   37568:	ldr	r0, [fp, #8]
   3756c:	mov	r8, r3
   37570:	sub	r1, r0, #1
   37574:	cmp	r1, #6
   37578:	bhi	375dc <flatcc_builder_default_alloc@@Base+0x88>
   3757c:	add	r3, pc, #8
   37580:	mov	r0, #256	; 0x100
   37584:	ldr	r1, [r3, r1, lsl #2]
   37588:	add	pc, r3, r1
   3758c:	andeq	r0, r0, r4, rrx
   37590:	andeq	r0, r0, r0, asr r0
   37594:	andeq	r0, r0, r0, asr r0
   37598:	andeq	r0, r0, ip, lsl r0
   3759c:	andeq	r0, r0, r8, asr r0
   375a0:	andeq	r0, r0, r0, asr r0
   375a4:	andeq	r0, r0, r0, rrx
   375a8:	mov	r0, #288	; 0x120
   375ac:	b	375f0 <flatcc_builder_default_alloc@@Base+0x9c>
   375b0:	ldr	r0, [r4]
   375b4:	cmp	r0, #0
   375b8:	moveq	r6, #0
   375bc:	moveq	r0, r6
   375c0:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   375c4:	bl	148f8 <free@plt>
   375c8:	mov	r6, #0
   375cc:	mov	r0, r6
   375d0:	str	r6, [r4]
   375d4:	str	r6, [r4, #4]
   375d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   375dc:	mov	r0, #32
   375e0:	b	375f0 <flatcc_builder_default_alloc@@Base+0x9c>
   375e4:	mov	r0, r2
   375e8:	b	375f0 <flatcc_builder_default_alloc@@Base+0x9c>
   375ec:	mov	r0, #64	; 0x40
   375f0:	mov	r7, r0
   375f4:	lsl	r0, r0, #1
   375f8:	cmp	r7, r2
   375fc:	bcc	375f0 <flatcc_builder_default_alloc@@Base+0x9c>
   37600:	ldr	r0, [r4, #4]
   37604:	mov	r6, #0
   37608:	cmp	r0, r2
   3760c:	lsrcs	r0, r0, #1
   37610:	cmpcs	r0, r7
   37614:	bcs	3764c <flatcc_builder_default_alloc@@Base+0xf8>
   37618:	ldr	r0, [r4]
   3761c:	mov	r1, r7
   37620:	bl	14940 <realloc@plt>
   37624:	cmp	r0, #0
   37628:	mvneq	r6, #0
   3762c:	moveq	r0, r6
   37630:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   37634:	cmp	r8, #0
   37638:	mov	r5, r0
   3763c:	ldrne	r1, [r4, #4]
   37640:	cmpne	r7, r1
   37644:	bhi	37654 <flatcc_builder_default_alloc@@Base+0x100>
   37648:	stm	r4, {r5, r7}
   3764c:	mov	r0, r6
   37650:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   37654:	add	r0, r5, r1
   37658:	sub	r2, r7, r1
   3765c:	mov	r1, #0
   37660:	bl	149d0 <memset@plt>
   37664:	b	37648 <flatcc_builder_default_alloc@@Base+0xf4>

00037668 <flatcc_builder_flush_vtable_cache@@Base>:
   37668:	push	{r4, r5, fp, lr}
   3766c:	add	fp, sp, #8
   37670:	mov	r4, r0
   37674:	ldr	r0, [r0, #116]	; 0x74
   37678:	cmp	r0, #0
   3767c:	popeq	{r4, r5, fp, pc}
   37680:	ldr	r0, [r4, #92]	; 0x5c
   37684:	ldr	r2, [r4, #96]	; 0x60
   37688:	mov	r1, #0
   3768c:	mov	r5, #0
   37690:	bl	149d0 <memset@plt>
   37694:	mov	r0, #16
   37698:	str	r5, [r4, #120]	; 0x78
   3769c:	str	r0, [r4, #124]	; 0x7c
   376a0:	pop	{r4, r5, fp, pc}

000376a4 <flatcc_builder_custom_init@@Base>:
   376a4:	push	{r4, r5, r6, r7, fp, lr}
   376a8:	add	fp, sp, #16
   376ac:	mov	r6, r2
   376b0:	mov	r7, r1
   376b4:	mov	r1, #0
   376b8:	mov	r2, #232	; 0xe8
   376bc:	mov	r5, r3
   376c0:	mov	r4, r0
   376c4:	bl	149d0 <memset@plt>
   376c8:	ldr	r0, [fp, #8]
   376cc:	cmp	r7, #0
   376d0:	bne	376e8 <flatcc_builder_custom_init@@Base+0x44>
   376d4:	mov	r1, #1
   376d8:	add	r6, r4, #188	; 0xbc
   376dc:	str	r1, [r4, #184]	; 0xb8
   376e0:	ldr	r7, [pc, #40]	; 37710 <flatcc_builder_custom_init@@Base+0x6c>
   376e4:	ldr	r7, [pc, r7]
   376e8:	ldr	r1, [pc, #36]	; 37714 <flatcc_builder_custom_init@@Base+0x70>
   376ec:	cmp	r5, #0
   376f0:	ldr	r1, [pc, r1]
   376f4:	str	r6, [r4, #36]	; 0x24
   376f8:	str	r0, [r4, #40]	; 0x28
   376fc:	mov	r0, #0
   37700:	str	r7, [r4, #44]	; 0x2c
   37704:	movne	r1, r5
   37708:	str	r1, [r4, #48]	; 0x30
   3770c:	pop	{r4, r5, r6, r7, fp, pc}
   37710:	andeq	r4, r3, ip, asr #19
   37714:			; <UNDEFINED> instruction: 0x000349b4

00037718 <flatcc_builder_init@@Base>:
   37718:	push	{r4, r5, fp, lr}
   3771c:	add	fp, sp, #8
   37720:	mov	r1, #0
   37724:	mov	r2, #232	; 0xe8
   37728:	mov	r4, r0
   3772c:	mov	r5, #0
   37730:	bl	149d0 <memset@plt>
   37734:	mov	r0, #1
   37738:	str	r0, [r4, #184]	; 0xb8
   3773c:	add	r0, r4, #188	; 0xbc
   37740:	ldr	r1, [pc, #32]	; 37768 <flatcc_builder_init@@Base+0x50>
   37744:	ldr	r1, [pc, r1]
   37748:	ldr	r2, [pc, #28]	; 3776c <flatcc_builder_init@@Base+0x54>
   3774c:	ldr	r2, [pc, r2]
   37750:	str	r0, [r4, #36]	; 0x24
   37754:	mov	r0, #0
   37758:	str	r5, [r4, #40]	; 0x28
   3775c:	str	r2, [r4, #44]	; 0x2c
   37760:	str	r1, [r4, #48]	; 0x30
   37764:	pop	{r4, r5, fp, pc}
   37768:	andeq	r4, r3, r0, ror #18
   3776c:	andeq	r4, r3, r4, ror #18

00037770 <flatcc_builder_custom_reset@@Base>:
   37770:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   37774:	add	fp, sp, #24
   37778:	sub	sp, sp, #8
   3777c:	mov	r9, r2
   37780:	mov	r8, r1
   37784:	mov	r4, r0
   37788:	add	r7, r0, #52	; 0x34
   3778c:	mov	r5, #0
   37790:	ldr	r0, [r7]
   37794:	cmp	r0, #0
   37798:	beq	377e0 <flatcc_builder_custom_reset@@Base+0x70>
   3779c:	cmp	r9, #0
   377a0:	cmpne	r5, #5
   377a4:	beq	377d0 <flatcc_builder_custom_reset@@Base+0x60>
   377a8:	ldr	r0, [r4, #40]	; 0x28
   377ac:	ldr	r6, [r4, #48]	; 0x30
   377b0:	mov	r1, r7
   377b4:	mov	r2, #1
   377b8:	mov	r3, #1
   377bc:	str	r5, [sp]
   377c0:	blx	r6
   377c4:	cmp	r0, #0
   377c8:	bne	37880 <flatcc_builder_custom_reset@@Base+0x110>
   377cc:	ldr	r0, [r7]
   377d0:	ldr	r2, [r7, #4]
   377d4:	mov	r1, #0
   377d8:	bl	149d0 <memset@plt>
   377dc:	b	377ec <flatcc_builder_custom_reset@@Base+0x7c>
   377e0:	ldr	r0, [r7, #4]
   377e4:	cmp	r0, #0
   377e8:	bne	37890 <flatcc_builder_custom_reset@@Base+0x120>
   377ec:	add	r5, r5, #1
   377f0:	add	r7, r7, #8
   377f4:	cmp	r5, #8
   377f8:	bcc	37790 <flatcc_builder_custom_reset@@Base+0x20>
   377fc:	mov	r0, #0
   37800:	vmov.i32	q8, #0	; 0x00000000
   37804:	mov	r5, #0
   37808:	str	r0, [r4, #120]	; 0x78
   3780c:	ldr	r1, [r4, #124]	; 0x7c
   37810:	cmp	r1, #0
   37814:	movne	r1, #16
   37818:	strne	r1, [r4, #124]	; 0x7c
   3781c:	add	r1, r4, #148	; 0x94
   37820:	strh	r0, [r4, #128]	; 0x80
   37824:	str	r0, [r4, #136]	; 0x88
   37828:	str	r0, [r4, #140]	; 0x8c
   3782c:	str	r0, [r4, #32]
   37830:	cmp	r8, #0
   37834:	vst1.32	{d16-d17}, [r1]
   37838:	ldr	r2, [r4, #60]	; 0x3c
   3783c:	ldr	r1, [r4, #52]	; 0x34
   37840:	ldr	r3, [r4, #76]	; 0x4c
   37844:	str	r2, [r4, #16]
   37848:	str	r0, [r4, #20]
   3784c:	str	r0, [r4, #24]
   37850:	movne	r0, #0
   37854:	str	r3, [r4]
   37858:	str	r1, [r4, #4]
   3785c:	strne	r0, [r4, #172]	; 0xac
   37860:	strne	r0, [r4, #176]	; 0xb0
   37864:	strne	r0, [r4, #180]	; 0xb4
   37868:	ldr	r0, [r4, #184]	; 0xb8
   3786c:	cmp	r0, #0
   37870:	beq	37884 <flatcc_builder_custom_reset@@Base+0x114>
   37874:	add	r0, r4, #188	; 0xbc
   37878:	bl	3c354 <flatcc_emitter_reset@@Base>
   3787c:	b	37884 <flatcc_builder_custom_reset@@Base+0x114>
   37880:	mvn	r5, #0
   37884:	mov	r0, r5
   37888:	sub	sp, fp, #24
   3788c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37890:	ldr	r0, [pc, #24]	; 378b0 <flatcc_builder_custom_reset@@Base+0x140>
   37894:	ldr	r1, [pc, #24]	; 378b4 <flatcc_builder_custom_reset@@Base+0x144>
   37898:	ldr	r3, [pc, #24]	; 378b8 <flatcc_builder_custom_reset@@Base+0x148>
   3789c:	movw	r2, #434	; 0x1b2
   378a0:	add	r0, pc, r0
   378a4:	add	r1, pc, r1
   378a8:	add	r3, pc, r3
   378ac:	bl	14a78 <__assert_fail@plt>
   378b0:	andeq	r2, r2, r0, lsl #20
   378b4:	andeq	r2, r2, lr, lsl #20
   378b8:	andeq	r2, r2, r7, ror #20

000378bc <flatcc_builder_reset@@Base>:
   378bc:	push	{r4, sl, fp, lr}
   378c0:	add	fp, sp, #8
   378c4:	mov	r4, r0
   378c8:	ldr	r0, [r0, #52]	; 0x34
   378cc:	ldr	r2, [r4, #56]	; 0x38
   378d0:	cmp	r0, #0
   378d4:	beq	378e4 <flatcc_builder_reset@@Base+0x28>
   378d8:	mov	r1, #0
   378dc:	bl	149d0 <memset@plt>
   378e0:	b	378ec <flatcc_builder_reset@@Base+0x30>
   378e4:	cmp	r2, #0
   378e8:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   378ec:	ldr	r0, [r4, #60]	; 0x3c
   378f0:	ldr	r2, [r4, #64]	; 0x40
   378f4:	cmp	r0, #0
   378f8:	beq	37908 <flatcc_builder_reset@@Base+0x4c>
   378fc:	mov	r1, #0
   37900:	bl	149d0 <memset@plt>
   37904:	b	37910 <flatcc_builder_reset@@Base+0x54>
   37908:	cmp	r2, #0
   3790c:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   37910:	ldr	r0, [r4, #68]	; 0x44
   37914:	ldr	r2, [r4, #72]	; 0x48
   37918:	cmp	r0, #0
   3791c:	beq	3792c <flatcc_builder_reset@@Base+0x70>
   37920:	mov	r1, #0
   37924:	bl	149d0 <memset@plt>
   37928:	b	37934 <flatcc_builder_reset@@Base+0x78>
   3792c:	cmp	r2, #0
   37930:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   37934:	ldr	r0, [r4, #76]	; 0x4c
   37938:	ldr	r2, [r4, #80]	; 0x50
   3793c:	cmp	r0, #0
   37940:	beq	37950 <flatcc_builder_reset@@Base+0x94>
   37944:	mov	r1, #0
   37948:	bl	149d0 <memset@plt>
   3794c:	b	37958 <flatcc_builder_reset@@Base+0x9c>
   37950:	cmp	r2, #0
   37954:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   37958:	ldr	r0, [r4, #84]	; 0x54
   3795c:	ldr	r2, [r4, #88]	; 0x58
   37960:	cmp	r0, #0
   37964:	beq	37974 <flatcc_builder_reset@@Base+0xb8>
   37968:	mov	r1, #0
   3796c:	bl	149d0 <memset@plt>
   37970:	b	3797c <flatcc_builder_reset@@Base+0xc0>
   37974:	cmp	r2, #0
   37978:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   3797c:	ldr	r0, [r4, #92]	; 0x5c
   37980:	ldr	r2, [r4, #96]	; 0x60
   37984:	cmp	r0, #0
   37988:	beq	37998 <flatcc_builder_reset@@Base+0xdc>
   3798c:	mov	r1, #0
   37990:	bl	149d0 <memset@plt>
   37994:	b	379a0 <flatcc_builder_reset@@Base+0xe4>
   37998:	cmp	r2, #0
   3799c:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   379a0:	ldr	r0, [r4, #100]	; 0x64
   379a4:	ldr	r2, [r4, #104]	; 0x68
   379a8:	cmp	r0, #0
   379ac:	beq	379bc <flatcc_builder_reset@@Base+0x100>
   379b0:	mov	r1, #0
   379b4:	bl	149d0 <memset@plt>
   379b8:	b	379c4 <flatcc_builder_reset@@Base+0x108>
   379bc:	cmp	r2, #0
   379c0:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   379c4:	ldr	r0, [r4, #108]	; 0x6c
   379c8:	ldr	r2, [r4, #112]	; 0x70
   379cc:	cmp	r0, #0
   379d0:	beq	379e0 <flatcc_builder_reset@@Base+0x124>
   379d4:	mov	r1, #0
   379d8:	bl	149d0 <memset@plt>
   379dc:	b	379e8 <flatcc_builder_reset@@Base+0x12c>
   379e0:	cmp	r2, #0
   379e4:	bne	37a54 <flatcc_builder_reset@@Base+0x198>
   379e8:	mov	r0, #0
   379ec:	str	r0, [r4, #120]	; 0x78
   379f0:	ldr	r1, [r4, #124]	; 0x7c
   379f4:	cmp	r1, #0
   379f8:	movne	r1, #16
   379fc:	strne	r1, [r4, #124]	; 0x7c
   37a00:	vmov.i32	q8, #0	; 0x00000000
   37a04:	add	r1, r4, #148	; 0x94
   37a08:	strh	r0, [r4, #128]	; 0x80
   37a0c:	str	r0, [r4, #136]	; 0x88
   37a10:	str	r0, [r4, #140]	; 0x8c
   37a14:	str	r0, [r4, #32]
   37a18:	vst1.32	{d16-d17}, [r1]
   37a1c:	ldr	r1, [r4, #184]	; 0xb8
   37a20:	ldr	ip, [r4, #52]	; 0x34
   37a24:	ldr	r2, [r4, #60]	; 0x3c
   37a28:	ldr	r3, [r4, #76]	; 0x4c
   37a2c:	cmp	r1, #0
   37a30:	str	r2, [r4, #16]
   37a34:	str	r0, [r4, #20]
   37a38:	str	r0, [r4, #24]
   37a3c:	stm	r4, {r3, ip}
   37a40:	beq	37a4c <flatcc_builder_reset@@Base+0x190>
   37a44:	add	r0, r4, #188	; 0xbc
   37a48:	bl	3c354 <flatcc_emitter_reset@@Base>
   37a4c:	mov	r0, #0
   37a50:	pop	{r4, sl, fp, pc}
   37a54:	ldr	r0, [pc, #24]	; 37a74 <flatcc_builder_reset@@Base+0x1b8>
   37a58:	ldr	r1, [pc, #24]	; 37a78 <flatcc_builder_reset@@Base+0x1bc>
   37a5c:	ldr	r3, [pc, #24]	; 37a7c <flatcc_builder_reset@@Base+0x1c0>
   37a60:	movw	r2, #434	; 0x1b2
   37a64:	add	r0, pc, r0
   37a68:	add	r1, pc, r1
   37a6c:	add	r3, pc, r3
   37a70:	bl	14a78 <__assert_fail@plt>
   37a74:	andeq	r2, r2, ip, lsr r8
   37a78:	andeq	r2, r2, sl, asr #16
   37a7c:	andeq	r2, r2, r3, lsr #17

00037a80 <flatcc_builder_clear@@Base>:
   37a80:	push	{r4, sl, fp, lr}
   37a84:	add	fp, sp, #8
   37a88:	sub	sp, sp, #8
   37a8c:	mov	r4, r0
   37a90:	ldr	r0, [r0, #40]	; 0x28
   37a94:	mov	r1, #0
   37a98:	mov	r2, #0
   37a9c:	mov	r3, #0
   37aa0:	ldr	ip, [r4, #48]	; 0x30
   37aa4:	str	r1, [sp]
   37aa8:	add	r1, r4, #52	; 0x34
   37aac:	blx	ip
   37ab0:	ldr	r0, [r4, #40]	; 0x28
   37ab4:	ldr	ip, [r4, #48]	; 0x30
   37ab8:	mov	r1, #1
   37abc:	mov	r2, #0
   37ac0:	mov	r3, #0
   37ac4:	str	r1, [sp]
   37ac8:	add	r1, r4, #60	; 0x3c
   37acc:	blx	ip
   37ad0:	ldr	r0, [r4, #40]	; 0x28
   37ad4:	ldr	ip, [r4, #48]	; 0x30
   37ad8:	mov	r1, #2
   37adc:	mov	r2, #0
   37ae0:	mov	r3, #0
   37ae4:	str	r1, [sp]
   37ae8:	add	r1, r4, #68	; 0x44
   37aec:	blx	ip
   37af0:	ldr	r0, [r4, #40]	; 0x28
   37af4:	ldr	ip, [r4, #48]	; 0x30
   37af8:	mov	r1, #3
   37afc:	mov	r2, #0
   37b00:	mov	r3, #0
   37b04:	str	r1, [sp]
   37b08:	add	r1, r4, #76	; 0x4c
   37b0c:	blx	ip
   37b10:	ldr	r0, [r4, #40]	; 0x28
   37b14:	ldr	ip, [r4, #48]	; 0x30
   37b18:	mov	r1, #4
   37b1c:	mov	r2, #0
   37b20:	mov	r3, #0
   37b24:	str	r1, [sp]
   37b28:	add	r1, r4, #84	; 0x54
   37b2c:	blx	ip
   37b30:	ldr	r0, [r4, #40]	; 0x28
   37b34:	ldr	ip, [r4, #48]	; 0x30
   37b38:	mov	r1, #5
   37b3c:	mov	r2, #0
   37b40:	mov	r3, #0
   37b44:	str	r1, [sp]
   37b48:	add	r1, r4, #92	; 0x5c
   37b4c:	blx	ip
   37b50:	ldr	r0, [r4, #40]	; 0x28
   37b54:	ldr	ip, [r4, #48]	; 0x30
   37b58:	mov	r1, #6
   37b5c:	mov	r2, #0
   37b60:	mov	r3, #0
   37b64:	str	r1, [sp]
   37b68:	add	r1, r4, #100	; 0x64
   37b6c:	blx	ip
   37b70:	ldr	r0, [r4, #40]	; 0x28
   37b74:	ldr	ip, [r4, #48]	; 0x30
   37b78:	mov	r1, #7
   37b7c:	mov	r2, #0
   37b80:	mov	r3, #0
   37b84:	str	r1, [sp]
   37b88:	add	r1, r4, #108	; 0x6c
   37b8c:	blx	ip
   37b90:	ldr	r0, [r4, #184]	; 0xb8
   37b94:	cmp	r0, #0
   37b98:	beq	37ba4 <flatcc_builder_clear@@Base+0x124>
   37b9c:	add	r0, r4, #188	; 0xbc
   37ba0:	bl	3c420 <flatcc_emitter_clear@@Base>
   37ba4:	mov	r0, r4
   37ba8:	mov	r1, #0
   37bac:	mov	r2, #232	; 0xe8
   37bb0:	sub	sp, fp, #8
   37bb4:	pop	{r4, sl, fp, lr}
   37bb8:	b	149d0 <memset@plt>

00037bbc <flatcc_builder_enter_user_frame_ptr@@Base>:
   37bbc:	push	{r4, r5, r6, r7, fp, lr}
   37bc0:	add	fp, sp, #16
   37bc4:	sub	sp, sp, #8
   37bc8:	mov	r4, r0
   37bcc:	ldr	r0, [r0, #112]	; 0x70
   37bd0:	add	r1, r1, #7
   37bd4:	ldr	r7, [r4, #228]	; 0xe4
   37bd8:	bic	r5, r1, #3
   37bdc:	add	r6, r4, #108	; 0x6c
   37be0:	add	r2, r7, r5
   37be4:	cmp	r2, r0
   37be8:	bls	37c10 <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   37bec:	ldr	r0, [r4, #40]	; 0x28
   37bf0:	ldr	ip, [r4, #48]	; 0x30
   37bf4:	mov	r1, #7
   37bf8:	mov	r3, #0
   37bfc:	str	r1, [sp]
   37c00:	mov	r1, r6
   37c04:	blx	ip
   37c08:	cmp	r0, #0
   37c0c:	bne	37c5c <flatcc_builder_enter_user_frame_ptr@@Base+0xa0>
   37c10:	ldr	r0, [r6]
   37c14:	adds	r6, r0, r7
   37c18:	beq	37c4c <flatcc_builder_enter_user_frame_ptr@@Base+0x90>
   37c1c:	mov	r0, r6
   37c20:	mov	r1, #0
   37c24:	mov	r2, r5
   37c28:	bl	149d0 <memset@plt>
   37c2c:	ldr	r0, [r4, #224]	; 0xe0
   37c30:	str	r0, [r6], #4
   37c34:	ldr	r0, [r4, #228]	; 0xe4
   37c38:	add	r1, r0, #4
   37c3c:	add	r0, r0, r5
   37c40:	str	r1, [r4, #224]	; 0xe0
   37c44:	str	r0, [r4, #228]	; 0xe4
   37c48:	b	37c50 <flatcc_builder_enter_user_frame_ptr@@Base+0x94>
   37c4c:	mov	r6, #0
   37c50:	mov	r0, r6
   37c54:	sub	sp, fp, #16
   37c58:	pop	{r4, r5, r6, r7, fp, pc}
   37c5c:	ldr	r0, [pc, #24]	; 37c7c <flatcc_builder_enter_user_frame_ptr@@Base+0xc0>
   37c60:	ldr	r1, [pc, #24]	; 37c80 <flatcc_builder_enter_user_frame_ptr@@Base+0xc4>
   37c64:	ldr	r3, [pc, #24]	; 37c84 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   37c68:	mov	r2, #308	; 0x134
   37c6c:	add	r0, pc, r0
   37c70:	add	r1, pc, r1
   37c74:	add	r3, pc, r3
   37c78:	bl	14a78 <__assert_fail@plt>
   37c7c:	andeq	r9, r1, r2, asr #18
   37c80:	andeq	r2, r2, r2, asr #12
   37c84:	andeq	r3, r2, r5, lsr r6

00037c88 <flatcc_builder_enter_user_frame@@Base>:
   37c88:	push	{r4, r5, r6, r7, fp, lr}
   37c8c:	add	fp, sp, #16
   37c90:	sub	sp, sp, #8
   37c94:	mov	r4, r0
   37c98:	ldr	r0, [r0, #112]	; 0x70
   37c9c:	add	r1, r1, #7
   37ca0:	ldr	r7, [r4, #228]	; 0xe4
   37ca4:	bic	r5, r1, #3
   37ca8:	add	r6, r4, #108	; 0x6c
   37cac:	add	r2, r7, r5
   37cb0:	cmp	r2, r0
   37cb4:	bls	37cdc <flatcc_builder_enter_user_frame@@Base+0x54>
   37cb8:	ldr	r0, [r4, #40]	; 0x28
   37cbc:	ldr	ip, [r4, #48]	; 0x30
   37cc0:	mov	r1, #7
   37cc4:	mov	r3, #0
   37cc8:	str	r1, [sp]
   37ccc:	mov	r1, r6
   37cd0:	blx	ip
   37cd4:	cmp	r0, #0
   37cd8:	bne	37d24 <flatcc_builder_enter_user_frame@@Base+0x9c>
   37cdc:	ldr	r0, [r6]
   37ce0:	adds	r6, r0, r7
   37ce4:	moveq	r0, #0
   37ce8:	subeq	sp, fp, #16
   37cec:	popeq	{r4, r5, r6, r7, fp, pc}
   37cf0:	mov	r0, r6
   37cf4:	mov	r1, #0
   37cf8:	mov	r2, r5
   37cfc:	bl	149d0 <memset@plt>
   37d00:	ldr	r0, [r4, #224]	; 0xe0
   37d04:	str	r0, [r6]
   37d08:	ldr	r1, [r4, #228]	; 0xe4
   37d0c:	add	r0, r1, #4
   37d10:	add	r1, r1, r5
   37d14:	str	r0, [r4, #224]	; 0xe0
   37d18:	str	r1, [r4, #228]	; 0xe4
   37d1c:	sub	sp, fp, #16
   37d20:	pop	{r4, r5, r6, r7, fp, pc}
   37d24:	ldr	r0, [pc, #24]	; 37d44 <flatcc_builder_enter_user_frame@@Base+0xbc>
   37d28:	ldr	r1, [pc, #24]	; 37d48 <flatcc_builder_enter_user_frame@@Base+0xc0>
   37d2c:	ldr	r3, [pc, #24]	; 37d4c <flatcc_builder_enter_user_frame@@Base+0xc4>
   37d30:	mov	r2, #308	; 0x134
   37d34:	add	r0, pc, r0
   37d38:	add	r1, pc, r1
   37d3c:	add	r3, pc, r3
   37d40:	bl	14a78 <__assert_fail@plt>
   37d44:	andeq	r9, r1, sl, ror r8
   37d48:	andeq	r2, r2, sl, ror r5
   37d4c:	andeq	r3, r2, sp, ror #10

00037d50 <flatcc_builder_exit_user_frame@@Base>:
   37d50:	ldr	r1, [r0, #224]	; 0xe0
   37d54:	cmp	r1, #0
   37d58:	subne	r2, r1, #4
   37d5c:	strne	r2, [r0, #228]	; 0xe4
   37d60:	ldrne	r2, [r0, #108]	; 0x6c
   37d64:	addne	r1, r2, r1
   37d68:	ldrne	r1, [r1, #-4]
   37d6c:	strne	r1, [r0, #224]	; 0xe0
   37d70:	movne	r0, r1
   37d74:	bxne	lr
   37d78:	push	{fp, lr}
   37d7c:	mov	fp, sp
   37d80:	ldr	r0, [pc, #24]	; 37da0 <flatcc_builder_exit_user_frame@@Base+0x50>
   37d84:	ldr	r1, [pc, #24]	; 37da4 <flatcc_builder_exit_user_frame@@Base+0x54>
   37d88:	ldr	r3, [pc, #24]	; 37da8 <flatcc_builder_exit_user_frame@@Base+0x58>
   37d8c:	movw	r2, #542	; 0x21e
   37d90:	add	r0, pc, r0
   37d94:	add	r1, pc, r1
   37d98:	add	r3, pc, r3
   37d9c:	bl	14a78 <__assert_fail@plt>
   37da0:			; <UNDEFINED> instruction: 0x000225bd
   37da4:	andeq	r2, r2, lr, lsl r5
   37da8:	andeq	r2, r2, lr, asr #11

00037dac <flatcc_builder_exit_user_frame_at@@Base>:
   37dac:	push	{fp, lr}
   37db0:	mov	fp, sp
   37db4:	ldr	r2, [r0, #224]	; 0xe0
   37db8:	cmp	r2, r1
   37dbc:	bcc	37e08 <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   37dc0:	cmp	r1, #0
   37dc4:	str	r1, [r0, #224]	; 0xe0
   37dc8:	subne	r2, r1, #4
   37dcc:	strne	r2, [r0, #228]	; 0xe4
   37dd0:	ldrne	r2, [r0, #108]	; 0x6c
   37dd4:	addne	r1, r2, r1
   37dd8:	ldrne	r1, [r1, #-4]
   37ddc:	strne	r1, [r0, #224]	; 0xe0
   37de0:	movne	r0, r1
   37de4:	popne	{fp, pc}
   37de8:	ldr	r0, [pc, #68]	; 37e34 <flatcc_builder_exit_user_frame_at@@Base+0x88>
   37dec:	ldr	r1, [pc, #68]	; 37e38 <flatcc_builder_exit_user_frame_at@@Base+0x8c>
   37df0:	ldr	r3, [pc, #68]	; 37e3c <flatcc_builder_exit_user_frame_at@@Base+0x90>
   37df4:	movw	r2, #542	; 0x21e
   37df8:	add	r0, pc, r0
   37dfc:	add	r1, pc, r1
   37e00:	add	r3, pc, r3
   37e04:	bl	14a78 <__assert_fail@plt>
   37e08:	ldr	r0, [pc, #24]	; 37e28 <flatcc_builder_exit_user_frame_at@@Base+0x7c>
   37e0c:	ldr	r1, [pc, #24]	; 37e2c <flatcc_builder_exit_user_frame_at@@Base+0x80>
   37e10:	ldr	r3, [pc, #24]	; 37e30 <flatcc_builder_exit_user_frame_at@@Base+0x84>
   37e14:	movw	r2, #551	; 0x227
   37e18:	add	r0, pc, r0
   37e1c:	add	r1, pc, r1
   37e20:	add	r3, pc, r3
   37e24:	bl	14a78 <__assert_fail@plt>
   37e28:	andeq	r2, r2, r8, lsl #11
   37e2c:	muleq	r2, r6, r4
   37e30:	muleq	r2, pc, r5	; <UNPREDICTABLE>
   37e34:	andeq	r2, r2, r5, asr r5
   37e38:			; <UNDEFINED> instruction: 0x000224b6
   37e3c:	andeq	r2, r2, r6, ror #10

00037e40 <flatcc_builder_get_current_user_frame@@Base>:
   37e40:	ldr	r0, [r0, #224]	; 0xe0
   37e44:	bx	lr

00037e48 <flatcc_builder_get_user_frame_ptr@@Base>:
   37e48:	ldr	r0, [r0, #108]	; 0x6c
   37e4c:	add	r0, r0, r1
   37e50:	bx	lr

00037e54 <flatcc_builder_embed_buffer@@Base>:
   37e54:	push	{r4, r5, r6, r7, fp, lr}
   37e58:	add	fp, sp, #16
   37e5c:	sub	sp, sp, #88	; 0x58
   37e60:	mov	r4, r0
   37e64:	ldr	r0, [fp, #8]
   37e68:	mov	r5, r3
   37e6c:	mov	r7, r2
   37e70:	mov	r2, r1
   37e74:	sub	r1, fp, #18
   37e78:	strh	r0, [fp, #-18]	; 0xffffffee
   37e7c:	mov	r0, r4
   37e80:	ldr	r3, [r4, #152]	; 0x98
   37e84:	cmp	r3, #0
   37e88:	movwne	r3, #1
   37e8c:	bl	37fe0 <flatcc_builder_embed_buffer@@Base+0x18c>
   37e90:	ldr	r1, [fp, #12]
   37e94:	ldrh	r3, [fp, #-18]	; 0xffffffee
   37e98:	ldr	r0, [r4, #136]	; 0x88
   37e9c:	mov	r2, #0
   37ea0:	str	r2, [sp, #8]
   37ea4:	str	r2, [sp, #12]
   37ea8:	and	r1, r1, #2
   37eac:	sub	r3, r3, #1
   37eb0:	add	r1, r5, r1, lsl #1
   37eb4:	sub	r1, r0, r1
   37eb8:	and	r3, r1, r3
   37ebc:	add	r1, r3, r5
   37ec0:	str	r1, [fp, #-24]	; 0xffffffe8
   37ec4:	ldr	r1, [r4, #152]	; 0x98
   37ec8:	cmp	r1, #0
   37ecc:	mov	r1, #0
   37ed0:	beq	37ef0 <flatcc_builder_embed_buffer@@Base+0x9c>
   37ed4:	sub	r1, fp, #24
   37ed8:	mov	r2, #1
   37edc:	str	r1, [sp, #16]
   37ee0:	mov	r1, #4
   37ee4:	str	r1, [sp, #8]
   37ee8:	str	r1, [sp, #20]
   37eec:	str	r2, [sp, #12]
   37ef0:	cmp	r5, #0
   37ef4:	beq	37f18 <flatcc_builder_embed_buffer@@Base+0xc4>
   37ef8:	add	r6, sp, #8
   37efc:	add	r1, r1, r5
   37f00:	add	r6, r6, r2, lsl #3
   37f04:	add	r2, r2, #1
   37f08:	str	r1, [sp, #8]
   37f0c:	str	r7, [r6, #8]
   37f10:	str	r5, [r6, #12]
   37f14:	str	r2, [sp, #12]
   37f18:	cmp	r3, #0
   37f1c:	beq	37f48 <flatcc_builder_embed_buffer@@Base+0xf4>
   37f20:	add	r1, r1, r3
   37f24:	add	r7, sp, #8
   37f28:	str	r1, [sp, #8]
   37f2c:	add	r7, r7, r2, lsl #3
   37f30:	add	r2, r2, #1
   37f34:	ldr	r6, [pc, #136]	; 37fc4 <flatcc_builder_embed_buffer@@Base+0x170>
   37f38:	ldr	r6, [pc, r6]
   37f3c:	str	r6, [r7, #8]
   37f40:	str	r3, [r7, #12]
   37f44:	str	r2, [sp, #12]
   37f48:	cmp	r1, #0
   37f4c:	ble	37fa4 <flatcc_builder_embed_buffer@@Base+0x150>
   37f50:	sub	r5, r0, r1
   37f54:	ldr	r0, [r4, #36]	; 0x24
   37f58:	ldr	r7, [r4, #44]	; 0x2c
   37f5c:	str	r1, [sp]
   37f60:	add	r1, sp, #8
   37f64:	add	r1, r1, #8
   37f68:	mov	r3, r5
   37f6c:	blx	r7
   37f70:	cmp	r0, #0
   37f74:	streq	r5, [r4, #136]	; 0x88
   37f78:	moveq	r0, r5
   37f7c:	subeq	sp, fp, #16
   37f80:	popeq	{r4, r5, r6, r7, fp, pc}
   37f84:	ldr	r0, [pc, #72]	; 37fd4 <flatcc_builder_embed_buffer@@Base+0x180>
   37f88:	ldr	r1, [pc, #72]	; 37fd8 <flatcc_builder_embed_buffer@@Base+0x184>
   37f8c:	ldr	r3, [pc, #72]	; 37fdc <flatcc_builder_embed_buffer@@Base+0x188>
   37f90:	movw	r2, #651	; 0x28b
   37f94:	add	r0, pc, r0
   37f98:	add	r1, pc, r1
   37f9c:	add	r3, pc, r3
   37fa0:	bl	14a78 <__assert_fail@plt>
   37fa4:	ldr	r0, [pc, #28]	; 37fc8 <flatcc_builder_embed_buffer@@Base+0x174>
   37fa8:	ldr	r1, [pc, #28]	; 37fcc <flatcc_builder_embed_buffer@@Base+0x178>
   37fac:	ldr	r3, [pc, #28]	; 37fd0 <flatcc_builder_embed_buffer@@Base+0x17c>
   37fb0:	movw	r2, #647	; 0x287
   37fb4:	add	r0, pc, r0
   37fb8:	add	r1, pc, r1
   37fbc:	add	r3, pc, r3
   37fc0:	bl	14a78 <__assert_fail@plt>
   37fc4:	andeq	r4, r3, r0, ror #2
   37fc8:	strdeq	r9, [r1], -sl
   37fcc:	strdeq	r2, [r2], -sl
   37fd0:	andeq	r3, r2, r2, ror r3
   37fd4:	andeq	r9, r1, sl, lsl r6
   37fd8:	andeq	r2, r2, sl, lsl r3
   37fdc:	muleq	r2, r2, r3
   37fe0:	push	{r4, sl, fp, lr}
   37fe4:	add	fp, sp, #8
   37fe8:	sub	sp, sp, #80	; 0x50
   37fec:	cmp	r2, #0
   37ff0:	bne	38000 <flatcc_builder_embed_buffer@@Base+0x1ac>
   37ff4:	ldrh	r2, [r0, #132]	; 0x84
   37ff8:	cmp	r2, #0
   37ffc:	movweq	r2, #1
   38000:	ldrh	r4, [r1]
   38004:	cmp	r4, #4
   38008:	movwcc	r4, #4
   3800c:	cmpcs	r4, r2
   38010:	bcs	38020 <flatcc_builder_embed_buffer@@Base+0x1cc>
   38014:	cmp	r4, r2
   38018:	movcc	r4, r2
   3801c:	strh	r4, [r1]
   38020:	cmp	r3, #0
   38024:	bne	38098 <flatcc_builder_embed_buffer@@Base+0x244>
   38028:	ldr	r4, [r0, #140]	; 0x8c
   3802c:	sub	r1, r2, #1
   38030:	ands	r1, r4, r1
   38034:	beq	38098 <flatcc_builder_embed_buffer@@Base+0x244>
   38038:	mov	r2, #1
   3803c:	str	r1, [sp, #8]
   38040:	str	r1, [sp, #20]
   38044:	cmn	r1, #1
   38048:	str	r2, [sp, #12]
   3804c:	ldr	r2, [pc, #172]	; 38100 <flatcc_builder_embed_buffer@@Base+0x2ac>
   38050:	ldr	r2, [pc, r2]
   38054:	str	r2, [sp, #16]
   38058:	add	r2, r1, r4
   3805c:	str	r2, [r0, #140]	; 0x8c
   38060:	ble	380a0 <flatcc_builder_embed_buffer@@Base+0x24c>
   38064:	ldr	r2, [r0, #36]	; 0x24
   38068:	ldr	ip, [r0, #44]	; 0x2c
   3806c:	add	r0, sp, #8
   38070:	str	r1, [sp]
   38074:	mov	r3, r4
   38078:	add	r1, r0, #8
   3807c:	mov	r0, r2
   38080:	mov	r2, #1
   38084:	blx	ip
   38088:	cmp	r0, #0
   3808c:	bne	380c0 <flatcc_builder_embed_buffer@@Base+0x26c>
   38090:	cmn	r4, #1
   38094:	beq	380e0 <flatcc_builder_embed_buffer@@Base+0x28c>
   38098:	sub	sp, fp, #8
   3809c:	pop	{r4, sl, fp, pc}
   380a0:	ldr	r0, [pc, #92]	; 38104 <flatcc_builder_embed_buffer@@Base+0x2b0>
   380a4:	ldr	r1, [pc, #92]	; 38108 <flatcc_builder_embed_buffer@@Base+0x2b4>
   380a8:	ldr	r3, [pc, #92]	; 3810c <flatcc_builder_embed_buffer@@Base+0x2b8>
   380ac:	movw	r2, #673	; 0x2a1
   380b0:	add	r0, pc, r0
   380b4:	add	r1, pc, r1
   380b8:	add	r3, pc, r3
   380bc:	bl	14a78 <__assert_fail@plt>
   380c0:	ldr	r0, [pc, #72]	; 38110 <flatcc_builder_embed_buffer@@Base+0x2bc>
   380c4:	ldr	r1, [pc, #72]	; 38114 <flatcc_builder_embed_buffer@@Base+0x2c0>
   380c8:	ldr	r3, [pc, #72]	; 38118 <flatcc_builder_embed_buffer@@Base+0x2c4>
   380cc:	movw	r2, #677	; 0x2a5
   380d0:	add	r0, pc, r0
   380d4:	add	r1, pc, r1
   380d8:	add	r3, pc, r3
   380dc:	bl	14a78 <__assert_fail@plt>
   380e0:	ldr	r0, [pc, #52]	; 3811c <flatcc_builder_embed_buffer@@Base+0x2c8>
   380e4:	ldr	r1, [pc, #52]	; 38120 <flatcc_builder_embed_buffer@@Base+0x2cc>
   380e8:	ldr	r3, [pc, #52]	; 38124 <flatcc_builder_embed_buffer@@Base+0x2d0>
   380ec:	movw	r2, #702	; 0x2be
   380f0:	add	r0, pc, r0
   380f4:	add	r1, pc, r1
   380f8:	add	r3, pc, r3
   380fc:	bl	14a78 <__assert_fail@plt>
   38100:	andeq	r4, r3, r8, asr #32
   38104:	strdeq	r9, [r1], -lr
   38108:	strdeq	r2, [r2], -lr
   3810c:	andeq	r3, r2, r2, lsr r3
   38110:	ldrdeq	r9, [r1], -lr
   38114:	ldrdeq	r2, [r2], -lr
   38118:	andeq	r3, r2, r2, lsl r3
   3811c:			; <UNDEFINED> instruction: 0x000194be
   38120:			; <UNDEFINED> instruction: 0x000221be
   38124:	strdeq	r3, [r2], -r4

00038128 <flatcc_builder_create_buffer@@Base>:
   38128:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3812c:	add	fp, sp, #28
   38130:	sub	sp, sp, #100	; 0x64
   38134:	ldr	r8, [fp, #12]
   38138:	mov	r4, r0
   3813c:	ldr	r0, [fp, #8]
   38140:	mov	r7, r1
   38144:	mov	r5, #0
   38148:	mov	r9, r3
   3814c:	sub	r1, fp, #30
   38150:	str	r5, [sp, #12]
   38154:	and	r6, r8, #1
   38158:	strh	r0, [fp, #-30]	; 0xffffffe2
   3815c:	mov	r0, r4
   38160:	mov	r3, r6
   38164:	bl	37fe0 <flatcc_builder_embed_buffer@@Base+0x18c>
   38168:	ldrh	r0, [r4, #128]	; 0x80
   3816c:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   38170:	cmp	r0, r1
   38174:	strhcc	r1, [r4, #128]	; 0x80
   38178:	cmp	r7, #0
   3817c:	stmib	sp, {r6, r9}
   38180:	beq	3819c <flatcc_builder_create_buffer@@Base+0x74>
   38184:	ldr	r5, [r7]
   38188:	cmp	r5, #0
   3818c:	str	r5, [sp, #12]
   38190:	movwne	r5, #1
   38194:	lsl	r7, r5, #2
   38198:	b	381a0 <flatcc_builder_create_buffer@@Base+0x78>
   3819c:	mov	r7, #0
   381a0:	ldr	r9, [r4, #136]	; 0x88
   381a4:	mov	sl, #4
   381a8:	mvn	r6, #3
   381ac:	mov	r3, #0
   381b0:	ands	ip, r8, #3
   381b4:	and	r2, sl, r8, lsl #1
   381b8:	str	r3, [sp, #20]
   381bc:	str	r3, [sp, #16]
   381c0:	sub	r2, r6, r2
   381c4:	sub	r6, r1, #1
   381c8:	mov	r1, #4
   381cc:	add	r2, r2, r9
   381d0:	sub	r2, r2, r7
   381d4:	beq	381f8 <flatcc_builder_create_buffer@@Base+0xd0>
   381d8:	sub	r1, fp, #40	; 0x28
   381dc:	mov	r3, #1
   381e0:	str	r1, [sp, #24]
   381e4:	mov	r1, #4
   381e8:	str	r1, [sp, #16]
   381ec:	str	r1, [sp, #28]
   381f0:	mov	r1, #8
   381f4:	str	r3, [sp, #20]
   381f8:	add	lr, sp, #16
   381fc:	and	r6, r2, r6
   38200:	sub	r0, fp, #36	; 0x24
   38204:	str	r1, [sp, #16]
   38208:	cmp	r5, #0
   3820c:	add	r2, lr, r3, lsl #3
   38210:	str	r0, [r2, #8]
   38214:	str	sl, [r2, #12]
   38218:	add	r2, r3, #1
   3821c:	str	r2, [sp, #20]
   38220:	beq	38244 <flatcc_builder_create_buffer@@Base+0x11c>
   38224:	add	r1, r1, r7
   38228:	add	r0, lr, r2, lsl #3
   3822c:	add	r2, sp, #12
   38230:	str	r1, [sp, #16]
   38234:	str	r2, [r0, #8]
   38238:	orr	r2, r3, #2
   3823c:	str	r7, [r0, #12]
   38240:	str	r2, [sp, #20]
   38244:	cmp	r6, #0
   38248:	beq	38270 <flatcc_builder_create_buffer@@Base+0x148>
   3824c:	add	r1, r1, r6
   38250:	add	r0, lr, r2, lsl #3
   38254:	add	r2, r2, #1
   38258:	str	r1, [sp, #16]
   3825c:	ldr	r3, [pc, #224]	; 38344 <flatcc_builder_create_buffer@@Base+0x21c>
   38260:	ldr	r3, [pc, r3]
   38264:	str	r3, [r0, #8]
   38268:	str	r6, [r0, #12]
   3826c:	str	r2, [sp, #20]
   38270:	ldr	r5, [sp, #4]
   38274:	sub	r7, r9, r1
   38278:	cmp	ip, #0
   3827c:	mov	r6, #144	; 0x90
   38280:	ldr	r3, [sp, #8]
   38284:	mov	r0, r7
   38288:	addne	r0, r0, #4
   3828c:	cmp	r5, #0
   38290:	sub	r3, r3, r0
   38294:	movweq	r6, #140	; 0x8c
   38298:	cmp	r1, #0
   3829c:	ldr	r6, [r4, r6]
   382a0:	str	r3, [fp, #-36]	; 0xffffffdc
   382a4:	sub	r0, r6, r0
   382a8:	str	r0, [fp, #-40]	; 0xffffffd8
   382ac:	ble	38304 <flatcc_builder_create_buffer@@Base+0x1dc>
   382b0:	ldr	r0, [r4, #36]	; 0x24
   382b4:	ldr	r6, [r4, #44]	; 0x2c
   382b8:	str	r1, [sp]
   382bc:	add	r1, lr, #8
   382c0:	mov	r3, r7
   382c4:	blx	r6
   382c8:	cmp	r0, #0
   382cc:	bne	38324 <flatcc_builder_create_buffer@@Base+0x1fc>
   382d0:	cmp	r7, #0
   382d4:	str	r7, [r4, #136]	; 0x88
   382d8:	movne	r0, r7
   382dc:	subne	sp, fp, #28
   382e0:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   382e4:	ldr	r0, [pc, #116]	; 38360 <flatcc_builder_create_buffer@@Base+0x238>
   382e8:	ldr	r1, [pc, #116]	; 38364 <flatcc_builder_create_buffer@@Base+0x23c>
   382ec:	ldr	r3, [pc, #116]	; 38368 <flatcc_builder_create_buffer@@Base+0x240>
   382f0:	mov	r2, #772	; 0x304
   382f4:	add	r0, pc, r0
   382f8:	add	r1, pc, r1
   382fc:	add	r3, pc, r3
   38300:	bl	14a78 <__assert_fail@plt>
   38304:	ldr	r0, [pc, #60]	; 38348 <flatcc_builder_create_buffer@@Base+0x220>
   38308:	ldr	r1, [pc, #60]	; 3834c <flatcc_builder_create_buffer@@Base+0x224>
   3830c:	ldr	r3, [pc, #60]	; 38350 <flatcc_builder_create_buffer@@Base+0x228>
   38310:	movw	r2, #647	; 0x287
   38314:	add	r0, pc, r0
   38318:	add	r1, pc, r1
   3831c:	add	r3, pc, r3
   38320:	bl	14a78 <__assert_fail@plt>
   38324:	ldr	r0, [pc, #40]	; 38354 <flatcc_builder_create_buffer@@Base+0x22c>
   38328:	ldr	r1, [pc, #40]	; 38358 <flatcc_builder_create_buffer@@Base+0x230>
   3832c:	ldr	r3, [pc, #40]	; 3835c <flatcc_builder_create_buffer@@Base+0x234>
   38330:	movw	r2, #651	; 0x28b
   38334:	add	r0, pc, r0
   38338:	add	r1, pc, r1
   3833c:	add	r3, pc, r3
   38340:	bl	14a78 <__assert_fail@plt>
   38344:	andeq	r3, r3, r8, lsr lr
   38348:	muleq	r1, sl, r2
   3834c:	muleq	r2, sl, pc	; <UNPREDICTABLE>
   38350:	andeq	r3, r2, r2, lsl r0
   38354:	andeq	r9, r1, sl, ror r2
   38358:	andeq	r1, r2, sl, ror pc
   3835c:	strdeq	r2, [r2], -r2	; <UNPREDICTABLE>
   38360:			; <UNDEFINED> instruction: 0x000192ba
   38364:			; <UNDEFINED> instruction: 0x00021fba
   38368:	andeq	r2, r2, r8, lsl #2

0003836c <flatcc_builder_create_struct@@Base>:
   3836c:	push	{r4, r5, r6, sl, fp, lr}
   38370:	add	fp, sp, #16
   38374:	sub	sp, sp, #80	; 0x50
   38378:	cmp	r3, #0
   3837c:	beq	38454 <flatcc_builder_create_struct@@Base+0xe8>
   38380:	mov	r5, r0
   38384:	ldrh	r0, [r0, #128]	; 0x80
   38388:	mov	r4, #0
   3838c:	cmp	r0, r3
   38390:	strhcc	r3, [r5, #128]	; 0x80
   38394:	sub	r3, r3, #1
   38398:	cmp	r2, #0
   3839c:	ldr	r0, [r5, #136]	; 0x88
   383a0:	str	r4, [sp, #12]
   383a4:	str	r4, [sp, #8]
   383a8:	movne	r4, #1
   383ac:	strne	r1, [sp, #16]
   383b0:	strne	r2, [sp, #8]
   383b4:	strne	r2, [sp, #20]
   383b8:	strne	r4, [sp, #12]
   383bc:	sub	r6, r0, r2
   383c0:	and	r3, r6, r3
   383c4:	cmp	r3, #0
   383c8:	beq	383f4 <flatcc_builder_create_struct@@Base+0x88>
   383cc:	add	r2, r3, r2
   383d0:	add	r1, sp, #8
   383d4:	str	r2, [sp, #8]
   383d8:	add	r1, r1, r4, lsl #3
   383dc:	add	r4, r4, #1
   383e0:	ldr	r6, [pc, #172]	; 38494 <flatcc_builder_create_struct@@Base+0x128>
   383e4:	ldr	r6, [pc, r6]
   383e8:	str	r6, [r1, #8]
   383ec:	str	r3, [r1, #12]
   383f0:	str	r4, [sp, #12]
   383f4:	cmp	r2, #0
   383f8:	ble	38474 <flatcc_builder_create_struct@@Base+0x108>
   383fc:	sub	r6, r0, r2
   38400:	ldr	r0, [r5, #36]	; 0x24
   38404:	ldr	ip, [r5, #44]	; 0x2c
   38408:	add	r1, sp, #8
   3840c:	str	r2, [sp]
   38410:	mov	r2, r4
   38414:	add	r1, r1, #8
   38418:	mov	r3, r6
   3841c:	blx	ip
   38420:	cmp	r0, #0
   38424:	streq	r6, [r5, #136]	; 0x88
   38428:	moveq	r0, r6
   3842c:	subeq	sp, fp, #16
   38430:	popeq	{r4, r5, r6, sl, fp, pc}
   38434:	ldr	r0, [pc, #116]	; 384b0 <flatcc_builder_create_struct@@Base+0x144>
   38438:	ldr	r1, [pc, #116]	; 384b4 <flatcc_builder_create_struct@@Base+0x148>
   3843c:	ldr	r3, [pc, #116]	; 384b8 <flatcc_builder_create_struct@@Base+0x14c>
   38440:	movw	r2, #651	; 0x28b
   38444:	add	r0, pc, r0
   38448:	add	r1, pc, r1
   3844c:	add	r3, pc, r3
   38450:	bl	14a78 <__assert_fail@plt>
   38454:	ldr	r0, [pc, #60]	; 38498 <flatcc_builder_create_struct@@Base+0x12c>
   38458:	ldr	r1, [pc, #60]	; 3849c <flatcc_builder_create_struct@@Base+0x130>
   3845c:	ldr	r3, [pc, #60]	; 384a0 <flatcc_builder_create_struct@@Base+0x134>
   38460:	movw	r2, #783	; 0x30f
   38464:	add	r0, pc, r0
   38468:	add	r1, pc, r1
   3846c:	add	r3, pc, r3
   38470:	bl	14a78 <__assert_fail@plt>
   38474:	ldr	r0, [pc, #40]	; 384a4 <flatcc_builder_create_struct@@Base+0x138>
   38478:	ldr	r1, [pc, #40]	; 384a8 <flatcc_builder_create_struct@@Base+0x13c>
   3847c:	ldr	r3, [pc, #40]	; 384ac <flatcc_builder_create_struct@@Base+0x140>
   38480:	movw	r2, #647	; 0x287
   38484:	add	r0, pc, r0
   38488:	add	r1, pc, r1
   3848c:	add	r3, pc, r3
   38490:	bl	14a78 <__assert_fail@plt>
   38494:			; <UNDEFINED> instruction: 0x00033cb4
   38498:	andeq	r2, r2, r3, lsr #32
   3849c:	andeq	r1, r2, sl, asr #28
   384a0:	andeq	r2, r2, r6, lsr #32
   384a4:	andeq	r9, r1, sl, lsr #2
   384a8:	andeq	r1, r2, sl, lsr #28
   384ac:	andeq	r2, r2, r2, lsr #29
   384b0:	andeq	r9, r1, sl, ror #2
   384b4:	andeq	r1, r2, sl, ror #28
   384b8:	andeq	r2, r2, r2, ror #29

000384bc <flatcc_builder_start_buffer@@Base>:
   384bc:	push	{r4, r5, r6, r7, fp, lr}
   384c0:	add	fp, sp, #16
   384c4:	mov	r5, r1
   384c8:	ldrh	r1, [r0, #128]	; 0x80
   384cc:	mov	r6, r3
   384d0:	mov	r7, r2
   384d4:	mov	r4, r0
   384d8:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   384dc:	mov	r1, r0
   384e0:	mvn	r0, #0
   384e4:	cmp	r1, #0
   384e8:	popne	{r4, r5, r6, r7, fp, pc}
   384ec:	mov	r0, #1
   384f0:	cmp	r5, #0
   384f4:	strh	r0, [r4, #128]	; 0x80
   384f8:	ldrh	r1, [r4, #132]	; 0x84
   384fc:	ldr	r2, [r4, #32]
   38500:	strh	r1, [r2, #34]	; 0x22
   38504:	strh	r7, [r4, #132]	; 0x84
   38508:	ldrh	r1, [r4, #164]	; 0xa4
   3850c:	ldr	r2, [r4, #32]
   38510:	strh	r1, [r2, #32]
   38514:	strh	r6, [r4, #164]	; 0xa4
   38518:	ldr	r1, [r4, #32]
   3851c:	ldr	r2, [r4, #144]	; 0x90
   38520:	str	r2, [r1, #20]
   38524:	ldr	r1, [r4, #32]
   38528:	ldr	r2, [r4, #152]	; 0x98
   3852c:	str	r2, [r1, #28]
   38530:	ldr	r3, [r4, #148]	; 0x94
   38534:	ldr	r1, [r4, #32]
   38538:	ldr	r2, [r4, #136]	; 0x88
   3853c:	ldr	r7, [r4, #168]	; 0xa8
   38540:	add	r6, r3, #1
   38544:	str	r2, [r4, #144]	; 0x90
   38548:	str	r6, [r4, #148]	; 0x94
   3854c:	str	r3, [r4, #152]	; 0x98
   38550:	str	r7, [r1, #16]
   38554:	ldr	r1, [pc, #28]	; 38578 <flatcc_builder_start_buffer@@Base+0xbc>
   38558:	ldr	r1, [pc, r1]
   3855c:	movne	r1, r5
   38560:	ldr	r1, [r1]
   38564:	str	r1, [r4, #168]	; 0xa8
   38568:	ldr	r1, [r4, #32]
   3856c:	strh	r0, [r1, #14]
   38570:	mov	r0, #0
   38574:	pop	{r4, r5, r6, r7, fp, pc}
   38578:	andeq	r3, r3, r0, asr #22
   3857c:	push	{r4, r5, r6, r7, fp, lr}
   38580:	add	fp, sp, #16
   38584:	sub	sp, sp, #8
   38588:	mov	r5, r1
   3858c:	ldr	r1, [r0, #156]	; 0x9c
   38590:	ldr	r2, [r0, #160]	; 0xa0
   38594:	mov	r4, r0
   38598:	add	r0, r1, #1
   3859c:	cmp	r1, r2
   385a0:	str	r0, [r4, #156]	; 0x9c
   385a4:	bge	385b8 <flatcc_builder_start_buffer@@Base+0xfc>
   385a8:	ldr	r0, [r4, #32]
   385ac:	add	r0, r0, #36	; 0x24
   385b0:	str	r0, [r4, #32]
   385b4:	b	3864c <flatcc_builder_start_buffer@@Base+0x190>
   385b8:	ldr	r2, [r4, #176]	; 0xb0
   385bc:	mvn	r6, #0
   385c0:	cmp	r2, #1
   385c4:	cmpge	r1, r2
   385c8:	bge	38684 <flatcc_builder_start_buffer@@Base+0x1c8>
   385cc:	add	r7, r0, r0, lsl #3
   385d0:	ldr	r0, [r4, #88]	; 0x58
   385d4:	lsl	r2, r7, #2
   385d8:	cmp	r2, r0
   385dc:	bls	38604 <flatcc_builder_start_buffer@@Base+0x148>
   385e0:	ldr	r0, [r4, #40]	; 0x28
   385e4:	ldr	ip, [r4, #48]	; 0x30
   385e8:	mov	r3, #4
   385ec:	add	r1, r4, #84	; 0x54
   385f0:	str	r3, [sp]
   385f4:	mov	r3, #0
   385f8:	blx	ip
   385fc:	cmp	r0, #0
   38600:	bne	38690 <flatcc_builder_start_buffer@@Base+0x1d4>
   38604:	ldr	r1, [r4, #84]	; 0x54
   38608:	mvn	r0, #35	; 0x23
   3860c:	add	r0, r0, r7, lsl #2
   38610:	adds	r0, r0, r1
   38614:	str	r0, [r4, #32]
   38618:	beq	38684 <flatcc_builder_start_buffer@@Base+0x1c8>
   3861c:	ldr	r1, [r4, #88]	; 0x58
   38620:	movw	r3, #36409	; 0x8e39
   38624:	ldr	r2, [r4, #176]	; 0xb0
   38628:	movt	r3, #14563	; 0x38e3
   3862c:	umull	r1, r3, r1, r3
   38630:	lsr	r1, r3, #3
   38634:	cmp	r2, r3, lsr #3
   38638:	mov	r3, r1
   3863c:	movlt	r3, r2
   38640:	cmp	r2, #0
   38644:	movle	r3, r1
   38648:	str	r3, [r4, #160]	; 0xa0
   3864c:	ldr	r1, [r4, #20]
   38650:	mvn	r3, #3
   38654:	mov	r6, #0
   38658:	str	r1, [r0, #8]
   3865c:	ldrh	r2, [r4, #130]	; 0x82
   38660:	strh	r2, [r0, #12]
   38664:	strh	r5, [r4, #130]	; 0x82
   38668:	ldr	r2, [r4, #28]
   3866c:	stm	r0, {r2, r3}
   38670:	add	r0, r1, r2
   38674:	str	r6, [r4, #20]
   38678:	add	r0, r0, #7
   3867c:	bic	r0, r0, #7
   38680:	str	r0, [r4, #28]
   38684:	mov	r0, r6
   38688:	sub	sp, fp, #16
   3868c:	pop	{r4, r5, r6, r7, fp, pc}
   38690:	ldr	r0, [pc, #24]	; 386b0 <flatcc_builder_start_buffer@@Base+0x1f4>
   38694:	ldr	r1, [pc, #24]	; 386b4 <flatcc_builder_start_buffer@@Base+0x1f8>
   38698:	ldr	r3, [pc, #24]	; 386b8 <flatcc_builder_start_buffer@@Base+0x1fc>
   3869c:	mov	r2, #308	; 0x134
   386a0:	add	r0, pc, r0
   386a4:	add	r1, pc, r1
   386a8:	add	r3, pc, r3
   386ac:	bl	14a78 <__assert_fail@plt>
   386b0:	andeq	r8, r1, lr, lsl #30
   386b4:	andeq	r1, r2, lr, lsl #24
   386b8:	andeq	r2, r2, r1, lsl #24

000386bc <flatcc_builder_end_buffer@@Base>:
   386bc:	push	{r4, r5, r6, sl, fp, lr}
   386c0:	add	fp, sp, #16
   386c4:	sub	sp, sp, #8
   386c8:	mov	r4, r0
   386cc:	ldr	r0, [r0, #32]
   386d0:	ldrh	r0, [r0, #14]
   386d4:	cmp	r0, #1
   386d8:	bne	387cc <flatcc_builder_end_buffer@@Base+0x110>
   386dc:	mov	r3, r1
   386e0:	ldr	r1, [r4, #152]	; 0x98
   386e4:	ldrh	r0, [r4, #164]	; 0xa4
   386e8:	ldrh	r2, [r4, #132]	; 0x84
   386ec:	cmp	r1, #0
   386f0:	ldrh	r1, [r4, #128]	; 0x80
   386f4:	and	r0, r0, #2
   386f8:	orrne	r0, r0, #1
   386fc:	cmp	r1, r2
   38700:	movcc	r1, r2
   38704:	strhcc	r2, [r4, #128]	; 0x80
   38708:	str	r0, [sp, #4]
   3870c:	mov	r0, r4
   38710:	str	r1, [sp]
   38714:	add	r1, r4, #168	; 0xa8
   38718:	bl	38128 <flatcc_builder_create_buffer@@Base>
   3871c:	mov	r6, r0
   38720:	cmp	r0, #0
   38724:	beq	387c0 <flatcc_builder_end_buffer@@Base+0x104>
   38728:	ldr	r1, [r4, #32]
   3872c:	ldr	r0, [r4, #16]
   38730:	ldr	r2, [r4, #20]
   38734:	ldr	r3, [r1, #20]
   38738:	str	r3, [r4, #144]	; 0x90
   3873c:	ldr	r3, [r1, #28]
   38740:	str	r3, [r4, #152]	; 0x98
   38744:	ldr	r3, [r1, #16]
   38748:	str	r3, [r4, #168]	; 0xa8
   3874c:	ldrh	r1, [r1, #32]
   38750:	strh	r1, [r4, #164]	; 0xa4
   38754:	mov	r1, #0
   38758:	bl	149d0 <memset@plt>
   3875c:	ldr	r0, [r4, #32]
   38760:	ldr	r1, [r4, #60]	; 0x3c
   38764:	ldr	r2, [r4, #64]	; 0x40
   38768:	ldr	r3, [r0, #8]
   3876c:	str	r3, [r4, #20]
   38770:	ldr	r3, [r0]
   38774:	str	r3, [r4, #28]
   38778:	add	r1, r1, r3
   3877c:	ldr	r5, [r0, #4]
   38780:	str	r1, [r4, #16]
   38784:	sub	r1, r2, r3
   38788:	cmp	r1, r5
   3878c:	movhi	r1, r5
   38790:	str	r1, [r4, #24]
   38794:	ldrh	r1, [r4, #130]	; 0x82
   38798:	ldrh	r2, [r4, #128]	; 0x80
   3879c:	cmp	r2, r1
   387a0:	strhcc	r1, [r4, #128]	; 0x80
   387a4:	ldrh	r1, [r0, #12]
   387a8:	sub	r0, r0, #36	; 0x24
   387ac:	str	r0, [r4, #32]
   387b0:	strh	r1, [r4, #130]	; 0x82
   387b4:	ldr	r0, [r4, #156]	; 0x9c
   387b8:	sub	r0, r0, #1
   387bc:	str	r0, [r4, #156]	; 0x9c
   387c0:	mov	r0, r6
   387c4:	sub	sp, fp, #16
   387c8:	pop	{r4, r5, r6, sl, fp, pc}
   387cc:	ldr	r0, [pc, #24]	; 387ec <flatcc_builder_end_buffer@@Base+0x130>
   387d0:	ldr	r1, [pc, #24]	; 387f0 <flatcc_builder_end_buffer@@Base+0x134>
   387d4:	ldr	r3, [pc, #24]	; 387f4 <flatcc_builder_end_buffer@@Base+0x138>
   387d8:	movw	r2, #838	; 0x346
   387dc:	add	r0, pc, r0
   387e0:	add	r1, pc, r1
   387e4:	add	r3, pc, r3
   387e8:	bl	14a78 <__assert_fail@plt>
   387ec:	andeq	r1, r2, ip, lsl sp
   387f0:	ldrdeq	r1, [r2], -r2
   387f4:	andeq	r1, r2, r0, asr #26

000387f8 <flatcc_builder_start_struct@@Base>:
   387f8:	push	{r4, r5, r6, r7, fp, lr}
   387fc:	add	fp, sp, #16
   38800:	sub	sp, sp, #8
   38804:	mov	r6, r1
   38808:	mov	r1, r2
   3880c:	mov	r4, r0
   38810:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   38814:	mov	r5, #0
   38818:	cmp	r0, #0
   3881c:	bne	388cc <flatcc_builder_start_struct@@Base+0xd4>
   38820:	ldr	r2, [r4, #32]
   38824:	mov	r0, #2
   38828:	mvn	r7, #3
   3882c:	strh	r0, [r2, #14]
   38830:	ldr	r1, [r4, #28]
   38834:	ldr	r3, [r4, #64]	; 0x40
   38838:	ldr	r0, [r4, #60]	; 0x3c
   3883c:	sub	r3, r3, r1
   38840:	add	r0, r0, r1
   38844:	cmn	r3, #4
   38848:	str	r0, [r4, #16]
   3884c:	movcs	r3, r7
   38850:	str	r3, [r4, #24]
   38854:	str	r7, [r2, #4]
   38858:	ldr	r7, [r4, #20]
   3885c:	add	r2, r7, r6
   38860:	cmp	r2, r3
   38864:	str	r2, [r4, #20]
   38868:	bcc	388c8 <flatcc_builder_start_struct@@Base+0xd0>
   3886c:	ldr	r0, [r4, #40]	; 0x28
   38870:	ldr	r6, [r4, #48]	; 0x30
   38874:	add	r1, r1, r2
   38878:	mov	r3, #1
   3887c:	str	r3, [sp]
   38880:	add	r2, r1, #1
   38884:	add	r1, r4, #60	; 0x3c
   38888:	mov	r3, #1
   3888c:	blx	r6
   38890:	cmp	r0, #0
   38894:	bne	388cc <flatcc_builder_start_struct@@Base+0xd4>
   38898:	ldr	r1, [r4, #28]
   3889c:	ldr	r0, [r4, #60]	; 0x3c
   388a0:	ldr	r3, [r4, #64]	; 0x40
   388a4:	ldr	r2, [r4, #32]
   388a8:	add	r0, r0, r1
   388ac:	sub	r1, r3, r1
   388b0:	mvn	r3, #3
   388b4:	cmn	r1, #4
   388b8:	str	r0, [r4, #16]
   388bc:	movcs	r1, r3
   388c0:	str	r1, [r4, #24]
   388c4:	str	r3, [r2, #4]
   388c8:	add	r5, r0, r7
   388cc:	mov	r0, r5
   388d0:	sub	sp, fp, #16
   388d4:	pop	{r4, r5, r6, r7, fp, pc}

000388d8 <flatcc_builder_struct_edit@@Base>:
   388d8:	ldr	r0, [r0, #16]
   388dc:	bx	lr

000388e0 <flatcc_builder_end_struct@@Base>:
   388e0:	push	{r4, r5, fp, lr}
   388e4:	add	fp, sp, #8
   388e8:	mov	r4, r0
   388ec:	ldr	r0, [r0, #32]
   388f0:	ldrh	r0, [r0, #14]
   388f4:	cmp	r0, #2
   388f8:	bne	38998 <flatcc_builder_end_struct@@Base+0xb8>
   388fc:	ldrh	r3, [r4, #130]	; 0x82
   38900:	ldr	r1, [r4, #16]
   38904:	ldr	r2, [r4, #20]
   38908:	mov	r0, r4
   3890c:	bl	3836c <flatcc_builder_create_struct@@Base>
   38910:	mov	r5, r0
   38914:	cmp	r0, #0
   38918:	beq	38990 <flatcc_builder_end_struct@@Base+0xb0>
   3891c:	ldr	r0, [r4, #16]
   38920:	ldr	r2, [r4, #20]
   38924:	mov	r1, #0
   38928:	bl	149d0 <memset@plt>
   3892c:	ldr	r0, [r4, #32]
   38930:	ldr	r1, [r4, #60]	; 0x3c
   38934:	ldr	ip, [r4, #64]	; 0x40
   38938:	ldr	r3, [r0, #8]
   3893c:	str	r3, [r4, #20]
   38940:	ldr	r3, [r0]
   38944:	str	r3, [r4, #28]
   38948:	add	r1, r1, r3
   3894c:	ldr	r2, [r0, #4]
   38950:	str	r1, [r4, #16]
   38954:	sub	r1, ip, r3
   38958:	cmp	r1, r2
   3895c:	movhi	r1, r2
   38960:	str	r1, [r4, #24]
   38964:	ldrh	r1, [r4, #130]	; 0x82
   38968:	ldrh	r2, [r4, #128]	; 0x80
   3896c:	cmp	r2, r1
   38970:	strhcc	r1, [r4, #128]	; 0x80
   38974:	ldrh	r1, [r0, #12]
   38978:	sub	r0, r0, #36	; 0x24
   3897c:	str	r0, [r4, #32]
   38980:	strh	r1, [r4, #130]	; 0x82
   38984:	ldr	r0, [r4, #156]	; 0x9c
   38988:	sub	r0, r0, #1
   3898c:	str	r0, [r4, #156]	; 0x9c
   38990:	mov	r0, r5
   38994:	pop	{r4, r5, fp, pc}
   38998:	ldr	r0, [pc, #24]	; 389b8 <flatcc_builder_end_struct@@Base+0xd8>
   3899c:	ldr	r1, [pc, #24]	; 389bc <flatcc_builder_end_struct@@Base+0xdc>
   389a0:	ldr	r3, [pc, #24]	; 389c0 <flatcc_builder_end_struct@@Base+0xe0>
   389a4:	mov	r2, #872	; 0x368
   389a8:	add	r0, pc, r0
   389ac:	add	r1, pc, r1
   389b0:	add	r3, pc, r3
   389b4:	bl	14a78 <__assert_fail@plt>
   389b8:	ldrdeq	r1, [r2], -r5
   389bc:	andeq	r1, r2, r6, lsl #18
   389c0:	strdeq	r1, [r2], -r9

000389c4 <flatcc_builder_extend_vector@@Base>:
   389c4:	push	{r4, r5, fp, lr}
   389c8:	add	fp, sp, #8
   389cc:	sub	sp, sp, #8
   389d0:	mov	r4, r0
   389d4:	ldr	r0, [r0, #32]
   389d8:	ldr	r2, [r0, #20]
   389dc:	adds	r2, r2, r1
   389e0:	bcs	38a98 <flatcc_builder_extend_vector@@Base+0xd4>
   389e4:	ldr	r3, [r0, #24]
   389e8:	cmp	r2, r3
   389ec:	bhi	38a98 <flatcc_builder_extend_vector@@Base+0xd4>
   389f0:	str	r2, [r0, #20]
   389f4:	ldr	r2, [r4, #32]
   389f8:	ldr	r5, [r4, #20]
   389fc:	ldr	r0, [r4, #24]
   38a00:	ldr	r2, [r2, #16]
   38a04:	mla	r1, r2, r1, r5
   38a08:	cmp	r1, r0
   38a0c:	str	r1, [r4, #20]
   38a10:	bcs	38a1c <flatcc_builder_extend_vector@@Base+0x58>
   38a14:	ldr	r0, [r4, #16]
   38a18:	b	38a8c <flatcc_builder_extend_vector@@Base+0xc8>
   38a1c:	ldr	r2, [r4, #28]
   38a20:	ldr	r0, [r4, #40]	; 0x28
   38a24:	ldr	ip, [r4, #48]	; 0x30
   38a28:	mov	r3, #1
   38a2c:	str	r3, [sp]
   38a30:	mov	r3, #1
   38a34:	add	r1, r1, r2
   38a38:	add	r2, r1, #1
   38a3c:	add	r1, r4, #60	; 0x3c
   38a40:	blx	ip
   38a44:	mov	r1, r0
   38a48:	mov	r0, #0
   38a4c:	cmp	r1, #0
   38a50:	beq	38a5c <flatcc_builder_extend_vector@@Base+0x98>
   38a54:	sub	sp, fp, #8
   38a58:	pop	{r4, r5, fp, pc}
   38a5c:	ldr	r1, [r4, #28]
   38a60:	ldr	r0, [r4, #60]	; 0x3c
   38a64:	ldr	r3, [r4, #64]	; 0x40
   38a68:	ldr	r2, [r4, #32]
   38a6c:	add	r0, r0, r1
   38a70:	sub	r1, r3, r1
   38a74:	mvn	r3, #3
   38a78:	cmn	r1, #4
   38a7c:	str	r0, [r4, #16]
   38a80:	movcs	r1, r3
   38a84:	str	r1, [r4, #24]
   38a88:	str	r3, [r2, #4]
   38a8c:	add	r0, r0, r5
   38a90:	sub	sp, fp, #8
   38a94:	pop	{r4, r5, fp, pc}
   38a98:	ldr	r0, [pc, #24]	; 38ab8 <flatcc_builder_extend_vector@@Base+0xf4>
   38a9c:	ldr	r1, [pc, #24]	; 38abc <flatcc_builder_extend_vector@@Base+0xf8>
   38aa0:	ldr	r3, [pc, #24]	; 38ac0 <flatcc_builder_extend_vector@@Base+0xfc>
   38aa4:	mov	r2, #892	; 0x37c
   38aa8:	add	r0, pc, r0
   38aac:	add	r1, pc, r1
   38ab0:	add	r3, pc, r3
   38ab4:	bl	14a78 <__assert_fail@plt>
   38ab8:	ldrdeq	r2, [r2], -r0
   38abc:	andeq	r1, r2, r6, lsl #16
   38ac0:	andeq	r2, r2, r3, ror #17

00038ac4 <flatcc_builder_vector_push@@Base>:
   38ac4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38ac8:	add	fp, sp, #24
   38acc:	sub	sp, sp, #8
   38ad0:	mov	r5, r0
   38ad4:	ldr	r0, [r0, #32]
   38ad8:	mov	r8, r1
   38adc:	ldrh	r1, [r0, #14]
   38ae0:	cmp	r1, #4
   38ae4:	bne	38bbc <flatcc_builder_vector_push@@Base+0xf8>
   38ae8:	ldr	r1, [r0, #20]
   38aec:	ldr	r2, [r0, #24]
   38af0:	cmp	r1, r2
   38af4:	bhi	38bdc <flatcc_builder_vector_push@@Base+0x118>
   38af8:	add	r1, r1, #1
   38afc:	str	r1, [r0, #20]
   38b00:	ldr	r1, [r5, #32]
   38b04:	ldr	r4, [r5, #20]
   38b08:	ldr	r0, [r5, #24]
   38b0c:	ldr	r6, [r1, #16]
   38b10:	add	r1, r4, r6
   38b14:	cmp	r1, r0
   38b18:	str	r1, [r5, #20]
   38b1c:	bcs	38b40 <flatcc_builder_vector_push@@Base+0x7c>
   38b20:	ldr	r0, [r5, #16]
   38b24:	adds	r7, r0, r4
   38b28:	beq	38bac <flatcc_builder_vector_push@@Base+0xe8>
   38b2c:	mov	r0, r7
   38b30:	mov	r1, r8
   38b34:	mov	r2, r6
   38b38:	bl	14904 <memcpy@plt>
   38b3c:	b	38bb0 <flatcc_builder_vector_push@@Base+0xec>
   38b40:	ldr	r2, [r5, #28]
   38b44:	ldr	r0, [r5, #40]	; 0x28
   38b48:	ldr	r7, [r5, #48]	; 0x30
   38b4c:	mov	r3, #1
   38b50:	str	r3, [sp]
   38b54:	mov	r3, #1
   38b58:	add	r1, r1, r2
   38b5c:	add	r2, r1, #1
   38b60:	add	r1, r5, #60	; 0x3c
   38b64:	blx	r7
   38b68:	mov	r7, #0
   38b6c:	cmp	r0, #0
   38b70:	bne	38bb0 <flatcc_builder_vector_push@@Base+0xec>
   38b74:	ldr	r1, [r5, #28]
   38b78:	ldr	r0, [r5, #60]	; 0x3c
   38b7c:	ldr	r3, [r5, #64]	; 0x40
   38b80:	ldr	r2, [r5, #32]
   38b84:	add	r0, r0, r1
   38b88:	sub	r1, r3, r1
   38b8c:	mvn	r3, #3
   38b90:	cmn	r1, #4
   38b94:	str	r0, [r5, #16]
   38b98:	movcs	r1, r3
   38b9c:	str	r1, [r5, #24]
   38ba0:	str	r3, [r2, #4]
   38ba4:	adds	r7, r0, r4
   38ba8:	bne	38b2c <flatcc_builder_vector_push@@Base+0x68>
   38bac:	mov	r7, #0
   38bb0:	mov	r0, r7
   38bb4:	sub	sp, fp, #24
   38bb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38bbc:	ldr	r0, [pc, #56]	; 38bfc <flatcc_builder_vector_push@@Base+0x138>
   38bc0:	ldr	r1, [pc, #56]	; 38c00 <flatcc_builder_vector_push@@Base+0x13c>
   38bc4:	ldr	r3, [pc, #56]	; 38c04 <flatcc_builder_vector_push@@Base+0x140>
   38bc8:	movw	r2, #907	; 0x38b
   38bcc:	add	r0, pc, r0
   38bd0:	add	r1, pc, r1
   38bd4:	add	r3, pc, r3
   38bd8:	bl	14a78 <__assert_fail@plt>
   38bdc:	ldr	r0, [pc, #36]	; 38c08 <flatcc_builder_vector_push@@Base+0x144>
   38be0:	ldr	r1, [pc, #36]	; 38c0c <flatcc_builder_vector_push@@Base+0x148>
   38be4:	ldr	r3, [pc, #36]	; 38c10 <flatcc_builder_vector_push@@Base+0x14c>
   38be8:	mov	r2, #908	; 0x38c
   38bec:	add	r0, pc, r0
   38bf0:	add	r1, pc, r1
   38bf4:	add	r3, pc, r3
   38bf8:	bl	14a78 <__assert_fail@plt>
   38bfc:	andeq	r1, r2, r0, lsr #20
   38c00:	andeq	r1, r2, r2, ror #13
   38c04:	andeq	r1, r2, r4, asr #20
   38c08:	andeq	r1, r2, pc, ror #20
   38c0c:	andeq	r1, r2, r2, asr #13
   38c10:	andeq	r1, r2, r4, lsr #20

00038c14 <flatcc_builder_append_vector@@Base>:
   38c14:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   38c18:	add	fp, sp, #24
   38c1c:	sub	sp, sp, #8
   38c20:	mov	r6, r0
   38c24:	ldr	r0, [r0, #32]
   38c28:	mov	r8, r1
   38c2c:	ldrh	r1, [r0, #14]
   38c30:	cmp	r1, #4
   38c34:	bne	38d34 <flatcc_builder_append_vector@@Base+0x120>
   38c38:	ldr	r1, [r0, #20]
   38c3c:	mov	r5, r2
   38c40:	adds	r1, r1, r2
   38c44:	bcs	38d14 <flatcc_builder_append_vector@@Base+0x100>
   38c48:	ldr	r2, [r0, #24]
   38c4c:	cmp	r1, r2
   38c50:	bhi	38d14 <flatcc_builder_append_vector@@Base+0x100>
   38c54:	str	r1, [r0, #20]
   38c58:	ldr	r1, [r6, #32]
   38c5c:	ldr	r4, [r6, #20]
   38c60:	ldr	r0, [r6, #24]
   38c64:	ldr	r9, [r1, #16]
   38c68:	mla	r1, r9, r5, r4
   38c6c:	cmp	r1, r0
   38c70:	str	r1, [r6, #20]
   38c74:	bcs	38c98 <flatcc_builder_append_vector@@Base+0x84>
   38c78:	ldr	r0, [r6, #16]
   38c7c:	adds	r7, r0, r4
   38c80:	beq	38d04 <flatcc_builder_append_vector@@Base+0xf0>
   38c84:	mul	r2, r9, r5
   38c88:	mov	r0, r7
   38c8c:	mov	r1, r8
   38c90:	bl	14904 <memcpy@plt>
   38c94:	b	38d08 <flatcc_builder_append_vector@@Base+0xf4>
   38c98:	ldr	r2, [r6, #28]
   38c9c:	ldr	r0, [r6, #40]	; 0x28
   38ca0:	ldr	r7, [r6, #48]	; 0x30
   38ca4:	mov	r3, #1
   38ca8:	str	r3, [sp]
   38cac:	mov	r3, #1
   38cb0:	add	r1, r1, r2
   38cb4:	add	r2, r1, #1
   38cb8:	add	r1, r6, #60	; 0x3c
   38cbc:	blx	r7
   38cc0:	mov	r7, #0
   38cc4:	cmp	r0, #0
   38cc8:	bne	38d08 <flatcc_builder_append_vector@@Base+0xf4>
   38ccc:	ldr	r1, [r6, #28]
   38cd0:	ldr	r0, [r6, #60]	; 0x3c
   38cd4:	ldr	r3, [r6, #64]	; 0x40
   38cd8:	ldr	r2, [r6, #32]
   38cdc:	add	r0, r0, r1
   38ce0:	sub	r1, r3, r1
   38ce4:	mvn	r3, #3
   38ce8:	cmn	r1, #4
   38cec:	str	r0, [r6, #16]
   38cf0:	movcs	r1, r3
   38cf4:	str	r1, [r6, #24]
   38cf8:	str	r3, [r2, #4]
   38cfc:	adds	r7, r0, r4
   38d00:	bne	38c84 <flatcc_builder_append_vector@@Base+0x70>
   38d04:	mov	r7, #0
   38d08:	mov	r0, r7
   38d0c:	sub	sp, fp, #24
   38d10:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   38d14:	ldr	r0, [pc, #68]	; 38d60 <flatcc_builder_append_vector@@Base+0x14c>
   38d18:	ldr	r1, [pc, #68]	; 38d64 <flatcc_builder_append_vector@@Base+0x150>
   38d1c:	ldr	r3, [pc, #68]	; 38d68 <flatcc_builder_append_vector@@Base+0x154>
   38d20:	mov	r2, #892	; 0x37c
   38d24:	add	r0, pc, r0
   38d28:	add	r1, pc, r1
   38d2c:	add	r3, pc, r3
   38d30:	bl	14a78 <__assert_fail@plt>
   38d34:	ldr	r0, [pc, #24]	; 38d54 <flatcc_builder_append_vector@@Base+0x140>
   38d38:	ldr	r1, [pc, #24]	; 38d58 <flatcc_builder_append_vector@@Base+0x144>
   38d3c:	ldr	r3, [pc, #24]	; 38d5c <flatcc_builder_append_vector@@Base+0x148>
   38d40:	movw	r2, #915	; 0x393
   38d44:	add	r0, pc, r0
   38d48:	add	r1, pc, r1
   38d4c:	add	r3, pc, r3
   38d50:	bl	14a78 <__assert_fail@plt>
   38d54:	andeq	r1, r2, r8, lsr #17
   38d58:	andeq	r1, r2, sl, ror #10
   38d5c:	andeq	r1, r2, ip, asr #18
   38d60:	andeq	r2, r2, r4, asr r6
   38d64:	andeq	r1, r2, sl, lsl #11
   38d68:	andeq	r2, r2, r7, ror #12

00038d6c <flatcc_builder_extend_offset_vector@@Base>:
   38d6c:	push	{r4, r5, fp, lr}
   38d70:	add	fp, sp, #8
   38d74:	sub	sp, sp, #8
   38d78:	mov	r4, r0
   38d7c:	ldr	r0, [r0, #32]
   38d80:	ldr	r2, [r0, #20]
   38d84:	adds	r2, r2, r1
   38d88:	cmpcc	r2, #1073741824	; 0x40000000
   38d8c:	bcc	38db0 <flatcc_builder_extend_offset_vector@@Base+0x44>
   38d90:	ldr	r0, [pc, #184]	; 38e50 <flatcc_builder_extend_offset_vector@@Base+0xe4>
   38d94:	ldr	r1, [pc, #184]	; 38e54 <flatcc_builder_extend_offset_vector@@Base+0xe8>
   38d98:	ldr	r3, [pc, #184]	; 38e58 <flatcc_builder_extend_offset_vector@@Base+0xec>
   38d9c:	mov	r2, #892	; 0x37c
   38da0:	add	r0, pc, r0
   38da4:	add	r1, pc, r1
   38da8:	add	r3, pc, r3
   38dac:	bl	14a78 <__assert_fail@plt>
   38db0:	str	r2, [r0, #20]
   38db4:	ldr	r5, [r4, #20]
   38db8:	ldr	r0, [r4, #24]
   38dbc:	add	r1, r5, r1, lsl #2
   38dc0:	cmp	r1, r0
   38dc4:	str	r1, [r4, #20]
   38dc8:	bcs	38dd4 <flatcc_builder_extend_offset_vector@@Base+0x68>
   38dcc:	ldr	r0, [r4, #16]
   38dd0:	b	38e44 <flatcc_builder_extend_offset_vector@@Base+0xd8>
   38dd4:	ldr	r2, [r4, #28]
   38dd8:	ldr	r0, [r4, #40]	; 0x28
   38ddc:	ldr	ip, [r4, #48]	; 0x30
   38de0:	mov	r3, #1
   38de4:	str	r3, [sp]
   38de8:	mov	r3, #1
   38dec:	add	r1, r1, r2
   38df0:	add	r2, r1, #1
   38df4:	add	r1, r4, #60	; 0x3c
   38df8:	blx	ip
   38dfc:	mov	r1, r0
   38e00:	mov	r0, #0
   38e04:	cmp	r1, #0
   38e08:	beq	38e14 <flatcc_builder_extend_offset_vector@@Base+0xa8>
   38e0c:	sub	sp, fp, #8
   38e10:	pop	{r4, r5, fp, pc}
   38e14:	ldr	r1, [r4, #28]
   38e18:	ldr	r0, [r4, #60]	; 0x3c
   38e1c:	ldr	r3, [r4, #64]	; 0x40
   38e20:	ldr	r2, [r4, #32]
   38e24:	add	r0, r0, r1
   38e28:	sub	r1, r3, r1
   38e2c:	mvn	r3, #3
   38e30:	cmn	r1, #4
   38e34:	str	r0, [r4, #16]
   38e38:	movcs	r1, r3
   38e3c:	str	r1, [r4, #24]
   38e40:	str	r3, [r2, #4]
   38e44:	add	r0, r0, r5
   38e48:	sub	sp, fp, #8
   38e4c:	pop	{r4, r5, fp, pc}
   38e50:	ldrdeq	r2, [r2], -r8
   38e54:	andeq	r1, r2, lr, lsl #10
   38e58:	andeq	r2, r2, fp, ror #11

00038e5c <flatcc_builder_offset_vector_push@@Base>:
   38e5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38e60:	add	fp, sp, #24
   38e64:	sub	sp, sp, #8
   38e68:	mov	r6, r0
   38e6c:	ldr	r0, [r0, #32]
   38e70:	mov	r8, r1
   38e74:	ldrh	r1, [r0, #14]
   38e78:	cmp	r1, #5
   38e7c:	bne	38f30 <flatcc_builder_offset_vector_push@@Base+0xd4>
   38e80:	ldr	r1, [r0, #20]
   38e84:	mov	r5, #0
   38e88:	cmn	r1, #-1073741823	; 0xc0000001
   38e8c:	beq	38f24 <flatcc_builder_offset_vector_push@@Base+0xc8>
   38e90:	add	r1, r1, #1
   38e94:	str	r1, [r0, #20]
   38e98:	ldr	r7, [r6, #20]
   38e9c:	ldr	r0, [r6, #24]
   38ea0:	add	r1, r7, #4
   38ea4:	cmp	r1, r0
   38ea8:	str	r1, [r6, #20]
   38eac:	bcs	38eb8 <flatcc_builder_offset_vector_push@@Base+0x5c>
   38eb0:	ldr	r0, [r6, #16]
   38eb4:	b	38f18 <flatcc_builder_offset_vector_push@@Base+0xbc>
   38eb8:	ldr	r1, [r6, #28]
   38ebc:	ldr	r0, [r6, #40]	; 0x28
   38ec0:	ldr	r4, [r6, #48]	; 0x30
   38ec4:	mov	r2, #1
   38ec8:	mov	r3, #1
   38ecc:	str	r2, [sp]
   38ed0:	add	r1, r7, r1
   38ed4:	add	r2, r1, #5
   38ed8:	add	r1, r6, #60	; 0x3c
   38edc:	blx	r4
   38ee0:	cmp	r0, #0
   38ee4:	bne	38f24 <flatcc_builder_offset_vector_push@@Base+0xc8>
   38ee8:	ldr	r1, [r6, #28]
   38eec:	ldr	r0, [r6, #60]	; 0x3c
   38ef0:	ldr	r3, [r6, #64]	; 0x40
   38ef4:	ldr	r2, [r6, #32]
   38ef8:	add	r0, r0, r1
   38efc:	sub	r1, r3, r1
   38f00:	mvn	r3, #3
   38f04:	cmn	r1, #4
   38f08:	str	r0, [r6, #16]
   38f0c:	movcs	r1, r3
   38f10:	str	r1, [r6, #24]
   38f14:	str	r3, [r2, #4]
   38f18:	adds	r0, r0, r7
   38f1c:	movne	r5, r0
   38f20:	strne	r8, [r0]
   38f24:	mov	r0, r5
   38f28:	sub	sp, fp, #24
   38f2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38f30:	ldr	r0, [pc, #24]	; 38f50 <flatcc_builder_offset_vector_push@@Base+0xf4>
   38f34:	ldr	r1, [pc, #24]	; 38f54 <flatcc_builder_offset_vector_push@@Base+0xf8>
   38f38:	ldr	r3, [pc, #24]	; 38f58 <flatcc_builder_offset_vector_push@@Base+0xfc>
   38f3c:	movw	r2, #934	; 0x3a6
   38f40:	add	r0, pc, r0
   38f44:	add	r1, pc, r1
   38f48:	add	r3, pc, r3
   38f4c:	bl	14a78 <__assert_fail@plt>
   38f50:	andeq	r1, r2, r5, lsr #15
   38f54:	andeq	r1, r2, lr, ror #6
   38f58:	ldrdeq	r1, [r2], -r0

00038f5c <flatcc_builder_append_offset_vector@@Base>:
   38f5c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38f60:	add	fp, sp, #24
   38f64:	sub	sp, sp, #8
   38f68:	mov	r6, r0
   38f6c:	ldr	r0, [r0, #32]
   38f70:	mov	r8, r1
   38f74:	ldrh	r1, [r0, #14]
   38f78:	cmp	r1, #5
   38f7c:	bne	3906c <flatcc_builder_append_offset_vector@@Base+0x110>
   38f80:	ldr	r1, [r0, #20]
   38f84:	mov	r5, r2
   38f88:	adds	r1, r1, r2
   38f8c:	cmpcc	r1, #1073741824	; 0x40000000
   38f90:	bcc	38fb4 <flatcc_builder_append_offset_vector@@Base+0x58>
   38f94:	ldr	r0, [pc, #252]	; 39098 <flatcc_builder_append_offset_vector@@Base+0x13c>
   38f98:	ldr	r1, [pc, #252]	; 3909c <flatcc_builder_append_offset_vector@@Base+0x140>
   38f9c:	ldr	r3, [pc, #252]	; 390a0 <flatcc_builder_append_offset_vector@@Base+0x144>
   38fa0:	mov	r2, #892	; 0x37c
   38fa4:	add	r0, pc, r0
   38fa8:	add	r1, pc, r1
   38fac:	add	r3, pc, r3
   38fb0:	bl	14a78 <__assert_fail@plt>
   38fb4:	str	r1, [r0, #20]
   38fb8:	ldr	r4, [r6, #20]
   38fbc:	ldr	r0, [r6, #24]
   38fc0:	add	r1, r4, r5, lsl #2
   38fc4:	cmp	r1, r0
   38fc8:	str	r1, [r6, #20]
   38fcc:	bcs	38ff0 <flatcc_builder_append_offset_vector@@Base+0x94>
   38fd0:	ldr	r0, [r6, #16]
   38fd4:	adds	r7, r0, r4
   38fd8:	beq	3905c <flatcc_builder_append_offset_vector@@Base+0x100>
   38fdc:	lsl	r2, r5, #2
   38fe0:	mov	r0, r7
   38fe4:	mov	r1, r8
   38fe8:	bl	14904 <memcpy@plt>
   38fec:	b	39060 <flatcc_builder_append_offset_vector@@Base+0x104>
   38ff0:	ldr	r2, [r6, #28]
   38ff4:	ldr	r0, [r6, #40]	; 0x28
   38ff8:	ldr	r7, [r6, #48]	; 0x30
   38ffc:	mov	r3, #1
   39000:	str	r3, [sp]
   39004:	mov	r3, #1
   39008:	add	r1, r1, r2
   3900c:	add	r2, r1, #1
   39010:	add	r1, r6, #60	; 0x3c
   39014:	blx	r7
   39018:	mov	r7, #0
   3901c:	cmp	r0, #0
   39020:	bne	39060 <flatcc_builder_append_offset_vector@@Base+0x104>
   39024:	ldr	r1, [r6, #28]
   39028:	ldr	r0, [r6, #60]	; 0x3c
   3902c:	ldr	r3, [r6, #64]	; 0x40
   39030:	ldr	r2, [r6, #32]
   39034:	add	r0, r0, r1
   39038:	sub	r1, r3, r1
   3903c:	mvn	r3, #3
   39040:	cmn	r1, #4
   39044:	str	r0, [r6, #16]
   39048:	movcs	r1, r3
   3904c:	str	r1, [r6, #24]
   39050:	str	r3, [r2, #4]
   39054:	adds	r7, r0, r4
   39058:	bne	38fdc <flatcc_builder_append_offset_vector@@Base+0x80>
   3905c:	mov	r7, #0
   39060:	mov	r0, r7
   39064:	sub	sp, fp, #24
   39068:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3906c:	ldr	r0, [pc, #24]	; 3908c <flatcc_builder_append_offset_vector@@Base+0x130>
   39070:	ldr	r1, [pc, #24]	; 39090 <flatcc_builder_append_offset_vector@@Base+0x134>
   39074:	ldr	r3, [pc, #24]	; 39094 <flatcc_builder_append_offset_vector@@Base+0x138>
   39078:	mov	r2, #948	; 0x3b4
   3907c:	add	r0, pc, r0
   39080:	add	r1, pc, r1
   39084:	add	r3, pc, r3
   39088:	bl	14a78 <__assert_fail@plt>
   3908c:	andeq	r1, r2, r9, ror #12
   39090:	andeq	r1, r2, r2, lsr r2
   39094:	strdeq	r1, [r2], -r6
   39098:	ldrdeq	r2, [r2], -r4
   3909c:	andeq	r1, r2, sl, lsl #6
   390a0:	andeq	r2, r2, r7, ror #7

000390a4 <flatcc_builder_extend_string@@Base>:
   390a4:	push	{r4, r5, fp, lr}
   390a8:	add	fp, sp, #8
   390ac:	sub	sp, sp, #8
   390b0:	mov	r4, r0
   390b4:	ldr	r0, [r0, #32]
   390b8:	ldrh	r2, [r0, #14]
   390bc:	cmp	r2, #6
   390c0:	bne	39170 <flatcc_builder_extend_string@@Base+0xcc>
   390c4:	ldr	r2, [r0, #20]
   390c8:	adds	r2, r2, r1
   390cc:	bcs	39190 <flatcc_builder_extend_string@@Base+0xec>
   390d0:	str	r2, [r0, #20]
   390d4:	ldr	r5, [r4, #20]
   390d8:	ldr	r0, [r4, #24]
   390dc:	add	r1, r5, r1
   390e0:	cmp	r1, r0
   390e4:	str	r1, [r4, #20]
   390e8:	bcs	390f4 <flatcc_builder_extend_string@@Base+0x50>
   390ec:	ldr	r0, [r4, #16]
   390f0:	b	39164 <flatcc_builder_extend_string@@Base+0xc0>
   390f4:	ldr	r2, [r4, #28]
   390f8:	ldr	r0, [r4, #40]	; 0x28
   390fc:	ldr	ip, [r4, #48]	; 0x30
   39100:	mov	r3, #1
   39104:	str	r3, [sp]
   39108:	mov	r3, #1
   3910c:	add	r1, r1, r2
   39110:	add	r2, r1, #1
   39114:	add	r1, r4, #60	; 0x3c
   39118:	blx	ip
   3911c:	mov	r1, r0
   39120:	mov	r0, #0
   39124:	cmp	r1, #0
   39128:	beq	39134 <flatcc_builder_extend_string@@Base+0x90>
   3912c:	sub	sp, fp, #8
   39130:	pop	{r4, r5, fp, pc}
   39134:	ldr	r1, [r4, #28]
   39138:	ldr	r0, [r4, #60]	; 0x3c
   3913c:	ldr	r3, [r4, #64]	; 0x40
   39140:	ldr	r2, [r4, #32]
   39144:	add	r0, r0, r1
   39148:	sub	r1, r3, r1
   3914c:	mvn	r3, #3
   39150:	cmn	r1, #4
   39154:	str	r0, [r4, #16]
   39158:	movcs	r1, r3
   3915c:	str	r1, [r4, #24]
   39160:	str	r3, [r2, #4]
   39164:	add	r0, r0, r5
   39168:	sub	sp, fp, #8
   3916c:	pop	{r4, r5, fp, pc}
   39170:	ldr	r0, [pc, #56]	; 391b0 <flatcc_builder_extend_string@@Base+0x10c>
   39174:	ldr	r1, [pc, #56]	; 391b4 <flatcc_builder_extend_string@@Base+0x110>
   39178:	ldr	r3, [pc, #56]	; 391b8 <flatcc_builder_extend_string@@Base+0x114>
   3917c:	movw	r2, #957	; 0x3bd
   39180:	add	r0, pc, r0
   39184:	add	r1, pc, r1
   39188:	add	r3, pc, r3
   3918c:	bl	14a78 <__assert_fail@plt>
   39190:	ldr	r0, [pc, #36]	; 391bc <flatcc_builder_extend_string@@Base+0x118>
   39194:	ldr	r1, [pc, #36]	; 391c0 <flatcc_builder_extend_string@@Base+0x11c>
   39198:	ldr	r3, [pc, #36]	; 391c4 <flatcc_builder_extend_string@@Base+0x120>
   3919c:	mov	r2, #892	; 0x37c
   391a0:	add	r0, pc, r0
   391a4:	add	r1, pc, r1
   391a8:	add	r3, pc, r3
   391ac:	bl	14a78 <__assert_fail@plt>
   391b0:	andeq	r1, r2, lr, ror #12
   391b4:	andeq	r1, r2, lr, lsr #2
   391b8:	muleq	r2, r2, r6
   391bc:	ldrdeq	r2, [r2], -r8
   391c0:	andeq	r1, r2, lr, lsl #2
   391c4:	andeq	r2, r2, fp, ror #3

000391c8 <flatcc_builder_append_string@@Base>:
   391c8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   391cc:	add	fp, sp, #24
   391d0:	sub	sp, sp, #8
   391d4:	mov	r6, r0
   391d8:	ldr	r0, [r0, #32]
   391dc:	mov	r8, r1
   391e0:	ldrh	r1, [r0, #14]
   391e4:	cmp	r1, #6
   391e8:	bne	392b4 <flatcc_builder_append_string@@Base+0xec>
   391ec:	ldr	r1, [r0, #20]
   391f0:	mov	r4, r2
   391f4:	adds	r1, r1, r2
   391f8:	bcs	392d4 <flatcc_builder_append_string@@Base+0x10c>
   391fc:	str	r1, [r0, #20]
   39200:	ldr	r5, [r6, #20]
   39204:	ldr	r0, [r6, #24]
   39208:	add	r1, r5, r4
   3920c:	cmp	r1, r0
   39210:	str	r1, [r6, #20]
   39214:	bcs	39238 <flatcc_builder_append_string@@Base+0x70>
   39218:	ldr	r0, [r6, #16]
   3921c:	adds	r7, r0, r5
   39220:	beq	392a4 <flatcc_builder_append_string@@Base+0xdc>
   39224:	mov	r0, r7
   39228:	mov	r1, r8
   3922c:	mov	r2, r4
   39230:	bl	14904 <memcpy@plt>
   39234:	b	392a8 <flatcc_builder_append_string@@Base+0xe0>
   39238:	ldr	r2, [r6, #28]
   3923c:	ldr	r0, [r6, #40]	; 0x28
   39240:	ldr	r7, [r6, #48]	; 0x30
   39244:	mov	r3, #1
   39248:	str	r3, [sp]
   3924c:	mov	r3, #1
   39250:	add	r1, r1, r2
   39254:	add	r2, r1, #1
   39258:	add	r1, r6, #60	; 0x3c
   3925c:	blx	r7
   39260:	mov	r7, #0
   39264:	cmp	r0, #0
   39268:	bne	392a8 <flatcc_builder_append_string@@Base+0xe0>
   3926c:	ldr	r1, [r6, #28]
   39270:	ldr	r0, [r6, #60]	; 0x3c
   39274:	ldr	r3, [r6, #64]	; 0x40
   39278:	ldr	r2, [r6, #32]
   3927c:	add	r0, r0, r1
   39280:	sub	r1, r3, r1
   39284:	mvn	r3, #3
   39288:	cmn	r1, #4
   3928c:	str	r0, [r6, #16]
   39290:	movcs	r1, r3
   39294:	str	r1, [r6, #24]
   39298:	str	r3, [r2, #4]
   3929c:	adds	r7, r0, r5
   392a0:	bne	39224 <flatcc_builder_append_string@@Base+0x5c>
   392a4:	mov	r7, #0
   392a8:	mov	r0, r7
   392ac:	sub	sp, fp, #24
   392b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   392b4:	ldr	r0, [pc, #56]	; 392f4 <flatcc_builder_append_string@@Base+0x12c>
   392b8:	ldr	r1, [pc, #56]	; 392f8 <flatcc_builder_append_string@@Base+0x130>
   392bc:	ldr	r3, [pc, #56]	; 392fc <flatcc_builder_append_string@@Base+0x134>
   392c0:	movw	r2, #966	; 0x3c6
   392c4:	add	r0, pc, r0
   392c8:	add	r1, pc, r1
   392cc:	add	r3, pc, r3
   392d0:	bl	14a78 <__assert_fail@plt>
   392d4:	ldr	r0, [pc, #36]	; 39300 <flatcc_builder_append_string@@Base+0x138>
   392d8:	ldr	r1, [pc, #36]	; 39304 <flatcc_builder_append_string@@Base+0x13c>
   392dc:	ldr	r3, [pc, #36]	; 39308 <flatcc_builder_append_string@@Base+0x140>
   392e0:	mov	r2, #892	; 0x37c
   392e4:	add	r0, pc, r0
   392e8:	add	r1, pc, r1
   392ec:	add	r3, pc, r3
   392f0:	bl	14a78 <__assert_fail@plt>
   392f4:	andeq	r1, r2, sl, lsr #10
   392f8:	andeq	r0, r2, sl, ror #31
   392fc:	andeq	r1, r2, sp, lsl #11
   39300:	muleq	r2, r4, r0
   39304:	andeq	r0, r2, sl, asr #31
   39308:	andeq	r2, r2, r7, lsr #1

0003930c <flatcc_builder_append_string_str@@Base>:
   3930c:	push	{r4, r5, fp, lr}
   39310:	add	fp, sp, #8
   39314:	mov	r5, r0
   39318:	mov	r0, r1
   3931c:	mov	r4, r1
   39320:	bl	149a0 <strlen@plt>
   39324:	mov	r2, r0
   39328:	mov	r0, r5
   3932c:	mov	r1, r4
   39330:	pop	{r4, r5, fp, lr}
   39334:	b	391c8 <flatcc_builder_append_string@@Base>

00039338 <flatcc_builder_append_string_strn@@Base>:
   39338:	push	{r4, r5, r6, sl, fp, lr}
   3933c:	add	fp, sp, #16
   39340:	mov	r6, r0
   39344:	mov	r5, r1
   39348:	mov	r0, r1
   3934c:	mov	r1, #0
   39350:	mov	r4, r2
   39354:	bl	149f4 <memchr@plt>
   39358:	cmp	r0, #0
   3935c:	mov	r1, r5
   39360:	subne	r4, r0, r5
   39364:	mov	r0, r6
   39368:	mov	r2, r4
   3936c:	pop	{r4, r5, r6, sl, fp, lr}
   39370:	b	391c8 <flatcc_builder_append_string@@Base>

00039374 <flatcc_builder_truncate_vector@@Base>:
   39374:	push	{fp, lr}
   39378:	mov	fp, sp
   3937c:	ldr	r2, [r0, #32]
   39380:	ldrh	r3, [r2, #14]
   39384:	cmp	r3, #4
   39388:	bne	393d0 <flatcc_builder_truncate_vector@@Base+0x5c>
   3938c:	ldr	r3, [r2, #20]
   39390:	cmp	r3, r1
   39394:	bcc	393f0 <flatcc_builder_truncate_vector@@Base+0x7c>
   39398:	sub	r3, r3, r1
   3939c:	str	r3, [r2, #20]
   393a0:	ldr	r2, [r0, #32]
   393a4:	ldr	r3, [r0, #20]
   393a8:	ldr	ip, [r0, #16]
   393ac:	ldr	r2, [r2, #16]
   393b0:	mls	r3, r2, r1, r3
   393b4:	mul	r2, r2, r1
   393b8:	mov	r1, #0
   393bc:	str	r3, [r0, #20]
   393c0:	add	r0, ip, r3
   393c4:	bl	149d0 <memset@plt>
   393c8:	mov	r0, #0
   393cc:	pop	{fp, pc}
   393d0:	ldr	r0, [pc, #56]	; 39410 <flatcc_builder_truncate_vector@@Base+0x9c>
   393d4:	ldr	r1, [pc, #56]	; 39414 <flatcc_builder_truncate_vector@@Base+0xa0>
   393d8:	ldr	r3, [pc, #56]	; 39418 <flatcc_builder_truncate_vector@@Base+0xa4>
   393dc:	movw	r2, #985	; 0x3d9
   393e0:	add	r0, pc, r0
   393e4:	add	r1, pc, r1
   393e8:	add	r3, pc, r3
   393ec:	bl	14a78 <__assert_fail@plt>
   393f0:	ldr	r0, [pc, #36]	; 3941c <flatcc_builder_truncate_vector@@Base+0xa8>
   393f4:	ldr	r1, [pc, #36]	; 39420 <flatcc_builder_truncate_vector@@Base+0xac>
   393f8:	ldr	r3, [pc, #36]	; 39424 <flatcc_builder_truncate_vector@@Base+0xb0>
   393fc:	movw	r2, #986	; 0x3da
   39400:	add	r0, pc, r0
   39404:	add	r1, pc, r1
   39408:	add	r3, pc, r3
   3940c:	bl	14a78 <__assert_fail@plt>
   39410:	andeq	r1, r2, ip, lsl #4
   39414:	andeq	r0, r2, lr, asr #29
   39418:			; <UNDEFINED> instruction: 0x000214be
   3941c:	andeq	r1, r2, r5, ror #9
   39420:	andeq	r0, r2, lr, lsr #29
   39424:	muleq	r2, lr, r4

00039428 <flatcc_builder_truncate_offset_vector@@Base>:
   39428:	push	{fp, lr}
   3942c:	mov	fp, sp
   39430:	ldr	r2, [r0, #32]
   39434:	ldrh	r3, [r2, #14]
   39438:	cmp	r3, #5
   3943c:	bne	39484 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   39440:	ldr	r3, [r2, #20]
   39444:	cmp	r3, r1
   39448:	bcc	394a4 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   3944c:	sub	r3, r3, r1
   39450:	str	r3, [r2, #20]
   39454:	ldr	r2, [r0, #32]
   39458:	ldr	r3, [r0, #20]
   3945c:	ldr	ip, [r0, #16]
   39460:	ldr	r2, [r2, #16]
   39464:	mls	r3, r2, r1, r3
   39468:	mul	r2, r2, r1
   3946c:	mov	r1, #0
   39470:	str	r3, [r0, #20]
   39474:	add	r0, ip, r3
   39478:	bl	149d0 <memset@plt>
   3947c:	mov	r0, #0
   39480:	pop	{fp, pc}
   39484:	ldr	r0, [pc, #56]	; 394c4 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   39488:	ldr	r1, [pc, #56]	; 394c8 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   3948c:	ldr	r3, [pc, #56]	; 394cc <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   39490:	movw	r2, #994	; 0x3e2
   39494:	add	r0, pc, r0
   39498:	add	r1, pc, r1
   3949c:	add	r3, pc, r3
   394a0:	bl	14a78 <__assert_fail@plt>
   394a4:	ldr	r0, [pc, #36]	; 394d0 <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   394a8:	ldr	r1, [pc, #36]	; 394d4 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   394ac:	ldr	r3, [pc, #36]	; 394d8 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   394b0:	movw	r2, #995	; 0x3e3
   394b4:	add	r0, pc, r0
   394b8:	add	r1, pc, r1
   394bc:	add	r3, pc, r3
   394c0:	bl	14a78 <__assert_fail@plt>
   394c4:	andeq	r1, r2, r1, asr r2
   394c8:	andeq	r0, r2, sl, lsl lr
   394cc:	andeq	r1, r2, sp, ror #8
   394d0:	muleq	r2, fp, r4
   394d4:	strdeq	r0, [r2], -sl
   394d8:	andeq	r1, r2, sp, asr #8

000394dc <flatcc_builder_truncate_string@@Base>:
   394dc:	push	{fp, lr}
   394e0:	mov	fp, sp
   394e4:	mov	r2, r1
   394e8:	ldr	r1, [r0, #32]
   394ec:	ldrh	r3, [r1, #14]
   394f0:	cmp	r3, #6
   394f4:	bne	39530 <flatcc_builder_truncate_string@@Base+0x54>
   394f8:	ldr	r3, [r1, #20]
   394fc:	cmp	r3, r2
   39500:	bcc	39550 <flatcc_builder_truncate_string@@Base+0x74>
   39504:	sub	r3, r3, r2
   39508:	str	r3, [r1, #20]
   3950c:	ldr	r3, [r0, #20]
   39510:	ldr	r1, [r0, #16]
   39514:	sub	r3, r3, r2
   39518:	str	r3, [r0, #20]
   3951c:	add	r0, r1, r3
   39520:	mov	r1, #0
   39524:	bl	149d0 <memset@plt>
   39528:	mov	r0, #0
   3952c:	pop	{fp, pc}
   39530:	ldr	r0, [pc, #56]	; 39570 <flatcc_builder_truncate_string@@Base+0x94>
   39534:	ldr	r1, [pc, #56]	; 39574 <flatcc_builder_truncate_string@@Base+0x98>
   39538:	ldr	r3, [pc, #56]	; 39578 <flatcc_builder_truncate_string@@Base+0x9c>
   3953c:	movw	r2, #1003	; 0x3eb
   39540:	add	r0, pc, r0
   39544:	add	r1, pc, r1
   39548:	add	r3, pc, r3
   3954c:	bl	14a78 <__assert_fail@plt>
   39550:	ldr	r0, [pc, #36]	; 3957c <flatcc_builder_truncate_string@@Base+0xa0>
   39554:	ldr	r1, [pc, #36]	; 39580 <flatcc_builder_truncate_string@@Base+0xa4>
   39558:	ldr	r3, [pc, #36]	; 39584 <flatcc_builder_truncate_string@@Base+0xa8>
   3955c:	mov	r2, #1004	; 0x3ec
   39560:	add	r0, pc, r0
   39564:	add	r1, pc, r1
   39568:	add	r3, pc, r3
   3956c:	bl	14a78 <__assert_fail@plt>
   39570:	andeq	r1, r2, lr, lsr #5
   39574:	andeq	r0, r2, lr, ror #26
   39578:	andeq	r1, r2, r2, asr #8
   3957c:	andeq	r1, r2, r9, ror #8
   39580:	andeq	r0, r2, lr, asr #26
   39584:	andeq	r1, r2, r2, lsr #8

00039588 <flatcc_builder_start_vector@@Base>:
   39588:	push	{r4, r5, r6, r7, fp, lr}
   3958c:	add	fp, sp, #16
   39590:	mov	r7, #4
   39594:	cmp	r2, #4
   39598:	mov	r6, r1
   3959c:	mov	r5, r3
   395a0:	mov	r4, r0
   395a4:	movls	r2, r7
   395a8:	mov	r1, r2
   395ac:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   395b0:	mov	r1, r0
   395b4:	mvn	r0, #0
   395b8:	cmp	r1, #0
   395bc:	popne	{r4, r5, r6, r7, fp, pc}
   395c0:	ldr	r0, [r4, #32]
   395c4:	str	r6, [r0, #16]
   395c8:	mov	r0, #0
   395cc:	ldr	r1, [r4, #32]
   395d0:	str	r0, [r1, #20]
   395d4:	ldr	r1, [r4, #32]
   395d8:	str	r5, [r1, #24]
   395dc:	ldr	r1, [r4, #32]
   395e0:	strh	r7, [r1, #14]
   395e4:	ldr	r2, [r4, #28]
   395e8:	ldr	r3, [r4, #60]	; 0x3c
   395ec:	ldr	r7, [r4, #64]	; 0x40
   395f0:	add	r3, r3, r2
   395f4:	sub	r2, r7, r2
   395f8:	str	r3, [r4, #16]
   395fc:	mvn	r3, #3
   39600:	cmn	r2, #4
   39604:	movcs	r2, r3
   39608:	str	r2, [r4, #24]
   3960c:	str	r3, [r1, #4]
   39610:	pop	{r4, r5, r6, r7, fp, pc}

00039614 <flatcc_builder_start_offset_vector@@Base>:
   39614:	push	{r4, r5, fp, lr}
   39618:	add	fp, sp, #8
   3961c:	mov	r1, #4
   39620:	mov	r4, r0
   39624:	mov	r5, #4
   39628:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   3962c:	mov	r1, r0
   39630:	mvn	r0, #0
   39634:	cmp	r1, #0
   39638:	popne	{r4, r5, fp, pc}
   3963c:	ldr	r0, [r4, #32]
   39640:	mov	r2, #5
   39644:	str	r5, [r0, #16]
   39648:	mov	r0, #0
   3964c:	ldr	r1, [r4, #32]
   39650:	str	r0, [r1, #20]
   39654:	ldr	r1, [r4, #32]
   39658:	strh	r2, [r1, #14]
   3965c:	ldr	r2, [r4, #28]
   39660:	ldr	r3, [r4, #60]	; 0x3c
   39664:	ldr	r5, [r4, #64]	; 0x40
   39668:	add	r3, r3, r2
   3966c:	sub	r2, r5, r2
   39670:	str	r3, [r4, #16]
   39674:	mvn	r3, #3
   39678:	cmn	r2, #4
   3967c:	movcs	r2, r3
   39680:	str	r2, [r4, #24]
   39684:	str	r3, [r1, #4]
   39688:	pop	{r4, r5, fp, pc}

0003968c <flatcc_builder_create_offset_vector@@Base>:
   3968c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   39690:	add	fp, sp, #24
   39694:	sub	sp, sp, #8
   39698:	mov	r8, r1
   3969c:	mov	r1, #4
   396a0:	mov	r6, r2
   396a4:	mov	r4, r0
   396a8:	mov	r7, #4
   396ac:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   396b0:	cmp	r0, #0
   396b4:	beq	396c4 <flatcc_builder_create_offset_vector@@Base+0x38>
   396b8:	mov	r0, #0
   396bc:	sub	sp, fp, #24
   396c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   396c4:	ldr	r0, [r4, #32]
   396c8:	mov	r1, #0
   396cc:	str	r7, [r0, #16]
   396d0:	ldr	r0, [r4, #32]
   396d4:	str	r1, [r0, #20]
   396d8:	mov	r1, #5
   396dc:	ldr	r0, [r4, #32]
   396e0:	strh	r1, [r0, #14]
   396e4:	ldr	r1, [r4, #28]
   396e8:	ldr	r2, [r4, #60]	; 0x3c
   396ec:	ldr	r3, [r4, #64]	; 0x40
   396f0:	add	r2, r2, r1
   396f4:	sub	r1, r3, r1
   396f8:	str	r2, [r4, #16]
   396fc:	mvn	r2, #3
   39700:	cmn	r1, #4
   39704:	movcs	r1, r2
   39708:	str	r1, [r4, #24]
   3970c:	str	r2, [r0, #4]
   39710:	ldr	r1, [r0, #20]
   39714:	adds	r1, r1, r6
   39718:	cmpcc	r1, #1073741824	; 0x40000000
   3971c:	bcc	39740 <flatcc_builder_create_offset_vector@@Base+0xb4>
   39720:	ldr	r0, [pc, #200]	; 397f0 <flatcc_builder_create_offset_vector@@Base+0x164>
   39724:	ldr	r1, [pc, #200]	; 397f4 <flatcc_builder_create_offset_vector@@Base+0x168>
   39728:	ldr	r3, [pc, #200]	; 397f8 <flatcc_builder_create_offset_vector@@Base+0x16c>
   3972c:	mov	r2, #892	; 0x37c
   39730:	add	r0, pc, r0
   39734:	add	r1, pc, r1
   39738:	add	r3, pc, r3
   3973c:	bl	14a78 <__assert_fail@plt>
   39740:	str	r1, [r0, #20]
   39744:	ldr	r7, [r4, #20]
   39748:	ldr	r0, [r4, #24]
   3974c:	add	r1, r7, r6, lsl #2
   39750:	cmp	r1, r0
   39754:	str	r1, [r4, #20]
   39758:	bcs	3976c <flatcc_builder_create_offset_vector@@Base+0xe0>
   3975c:	ldr	r0, [r4, #16]
   39760:	adds	r0, r0, r7
   39764:	bne	397d4 <flatcc_builder_create_offset_vector@@Base+0x148>
   39768:	b	396b8 <flatcc_builder_create_offset_vector@@Base+0x2c>
   3976c:	ldr	r2, [r4, #28]
   39770:	ldr	r0, [r4, #40]	; 0x28
   39774:	ldr	r5, [r4, #48]	; 0x30
   39778:	mov	r3, #1
   3977c:	str	r3, [sp]
   39780:	mov	r3, #1
   39784:	add	r1, r1, r2
   39788:	add	r2, r1, #1
   3978c:	add	r1, r4, #60	; 0x3c
   39790:	blx	r5
   39794:	cmp	r0, #0
   39798:	bne	396b8 <flatcc_builder_create_offset_vector@@Base+0x2c>
   3979c:	ldr	r1, [r4, #28]
   397a0:	ldr	r0, [r4, #60]	; 0x3c
   397a4:	ldr	r3, [r4, #64]	; 0x40
   397a8:	ldr	r2, [r4, #32]
   397ac:	add	r0, r0, r1
   397b0:	sub	r1, r3, r1
   397b4:	mvn	r3, #3
   397b8:	cmn	r1, #4
   397bc:	str	r0, [r4, #16]
   397c0:	movcs	r1, r3
   397c4:	str	r1, [r4, #24]
   397c8:	str	r3, [r2, #4]
   397cc:	adds	r0, r0, r7
   397d0:	beq	396b8 <flatcc_builder_create_offset_vector@@Base+0x2c>
   397d4:	lsl	r2, r6, #2
   397d8:	mov	r1, r8
   397dc:	bl	14904 <memcpy@plt>
   397e0:	mov	r0, r4
   397e4:	sub	sp, fp, #24
   397e8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   397ec:	b	397fc <flatcc_builder_end_offset_vector@@Base>
   397f0:	andeq	r1, r2, r8, asr #24
   397f4:	andeq	r0, r2, lr, ror fp
   397f8:	andeq	r1, r2, fp, asr ip

000397fc <flatcc_builder_end_offset_vector@@Base>:
   397fc:	push	{r4, r5, fp, lr}
   39800:	add	fp, sp, #8
   39804:	mov	r4, r0
   39808:	ldr	r0, [r0, #32]
   3980c:	ldrh	r1, [r0, #14]
   39810:	cmp	r1, #5
   39814:	bne	398b4 <flatcc_builder_end_offset_vector@@Base+0xb8>
   39818:	ldr	r2, [r0, #20]
   3981c:	ldr	r1, [r4, #16]
   39820:	mov	r0, r4
   39824:	mov	r3, #0
   39828:	bl	3a920 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3982c:	mov	r5, r0
   39830:	cmp	r0, #0
   39834:	beq	398ac <flatcc_builder_end_offset_vector@@Base+0xb0>
   39838:	ldr	r0, [r4, #16]
   3983c:	ldr	r2, [r4, #20]
   39840:	mov	r1, #0
   39844:	bl	149d0 <memset@plt>
   39848:	ldr	r0, [r4, #32]
   3984c:	ldr	r1, [r4, #60]	; 0x3c
   39850:	ldr	ip, [r4, #64]	; 0x40
   39854:	ldr	r3, [r0, #8]
   39858:	str	r3, [r4, #20]
   3985c:	ldr	r3, [r0]
   39860:	str	r3, [r4, #28]
   39864:	add	r1, r1, r3
   39868:	ldr	r2, [r0, #4]
   3986c:	str	r1, [r4, #16]
   39870:	sub	r1, ip, r3
   39874:	cmp	r1, r2
   39878:	movhi	r1, r2
   3987c:	str	r1, [r4, #24]
   39880:	ldrh	r1, [r4, #130]	; 0x82
   39884:	ldrh	r2, [r4, #128]	; 0x80
   39888:	cmp	r2, r1
   3988c:	strhcc	r1, [r4, #128]	; 0x80
   39890:	ldrh	r1, [r0, #12]
   39894:	sub	r0, r0, #36	; 0x24
   39898:	str	r0, [r4, #32]
   3989c:	strh	r1, [r4, #130]	; 0x82
   398a0:	ldr	r0, [r4, #156]	; 0x9c
   398a4:	sub	r0, r0, #1
   398a8:	str	r0, [r4, #156]	; 0x9c
   398ac:	mov	r0, r5
   398b0:	pop	{r4, r5, fp, pc}
   398b4:	ldr	r0, [pc, #24]	; 398d4 <flatcc_builder_end_offset_vector@@Base+0xd8>
   398b8:	ldr	r1, [pc, #24]	; 398d8 <flatcc_builder_end_offset_vector@@Base+0xdc>
   398bc:	ldr	r3, [pc, #24]	; 398dc <flatcc_builder_end_offset_vector@@Base+0xe0>
   398c0:	movw	r2, #1480	; 0x5c8
   398c4:	add	r0, pc, r0
   398c8:	add	r1, pc, r1
   398cc:	add	r3, pc, r3
   398d0:	bl	14a78 <__assert_fail@plt>
   398d4:	andeq	r0, r2, r1, lsr #28
   398d8:	andeq	r0, r2, sl, ror #19
   398dc:	andeq	r1, r2, r8, asr #8

000398e0 <flatcc_builder_start_string@@Base>:
   398e0:	push	{r4, r5, fp, lr}
   398e4:	add	fp, sp, #8
   398e8:	mov	r1, #1
   398ec:	mov	r4, r0
   398f0:	mov	r5, #1
   398f4:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   398f8:	mov	r1, r0
   398fc:	mvn	r0, #0
   39900:	cmp	r1, #0
   39904:	popne	{r4, r5, fp, pc}
   39908:	ldr	r0, [r4, #32]
   3990c:	mov	r2, #6
   39910:	str	r5, [r0, #16]
   39914:	mov	r0, #0
   39918:	ldr	r1, [r4, #32]
   3991c:	str	r0, [r1, #20]
   39920:	ldr	r1, [r4, #32]
   39924:	strh	r2, [r1, #14]
   39928:	ldr	r2, [r4, #28]
   3992c:	ldr	r3, [r4, #60]	; 0x3c
   39930:	ldr	r5, [r4, #64]	; 0x40
   39934:	add	r3, r3, r2
   39938:	sub	r2, r5, r2
   3993c:	str	r3, [r4, #16]
   39940:	mvn	r3, #3
   39944:	cmn	r2, #4
   39948:	movcs	r2, r3
   3994c:	str	r2, [r4, #24]
   39950:	str	r3, [r1, #4]
   39954:	pop	{r4, r5, fp, pc}

00039958 <flatcc_builder_reserve_table@@Base>:
   39958:	push	{r4, r5, r6, sl, fp, lr}
   3995c:	add	fp, sp, #16
   39960:	sub	sp, sp, #8
   39964:	cmn	r1, #1
   39968:	ble	39a3c <flatcc_builder_reserve_table@@Base+0xe4>
   3996c:	mov	r4, r0
   39970:	ldr	r0, [r0, #32]
   39974:	mov	r5, r1
   39978:	ldr	r1, [r4, #56]	; 0x38
   3997c:	ldrh	r2, [r0, #28]
   39980:	ldr	r0, [r0, #16]
   39984:	add	r6, r0, r2, lsl #1
   39988:	add	r0, r6, r5, lsl #1
   3998c:	add	r2, r0, #4
   39990:	cmp	r2, r1
   39994:	bls	399bc <flatcc_builder_reserve_table@@Base+0x64>
   39998:	ldr	r0, [r4, #40]	; 0x28
   3999c:	ldr	ip, [r4, #48]	; 0x30
   399a0:	mov	r3, #0
   399a4:	add	r1, r4, #52	; 0x34
   399a8:	str	r3, [sp]
   399ac:	mov	r3, #1
   399b0:	blx	ip
   399b4:	cmp	r0, #0
   399b8:	bne	39a5c <flatcc_builder_reserve_table@@Base+0x104>
   399bc:	ldr	r0, [r4, #52]	; 0x34
   399c0:	adds	r0, r0, r6
   399c4:	str	r0, [r4, #4]
   399c8:	mvneq	r0, #0
   399cc:	subeq	sp, fp, #16
   399d0:	popeq	{r4, r5, r6, sl, fp, pc}
   399d4:	add	r0, r0, #4
   399d8:	lsl	r1, r5, #1
   399dc:	str	r0, [r4, #4]
   399e0:	ldr	r0, [r4, #32]
   399e4:	ldr	r3, [r4, #80]	; 0x50
   399e8:	ldr	r5, [r0, #20]
   399ec:	orr	r0, r1, #1
   399f0:	add	r2, r5, r0
   399f4:	cmp	r2, r3
   399f8:	bls	39a20 <flatcc_builder_reserve_table@@Base+0xc8>
   399fc:	ldr	r0, [r4, #40]	; 0x28
   39a00:	ldr	r6, [r4, #48]	; 0x30
   39a04:	mov	r3, #3
   39a08:	add	r1, r4, #76	; 0x4c
   39a0c:	str	r3, [sp]
   39a10:	mov	r3, #0
   39a14:	blx	r6
   39a18:	cmp	r0, #0
   39a1c:	bne	39a5c <flatcc_builder_reserve_table@@Base+0x104>
   39a20:	ldr	r0, [r4, #76]	; 0x4c
   39a24:	adds	r0, r0, r5
   39a28:	str	r0, [r4]
   39a2c:	mov	r0, #0
   39a30:	mvneq	r0, #0
   39a34:	sub	sp, fp, #16
   39a38:	pop	{r4, r5, r6, sl, fp, pc}
   39a3c:	ldr	r0, [pc, #56]	; 39a7c <flatcc_builder_reserve_table@@Base+0x124>
   39a40:	ldr	r1, [pc, #56]	; 39a80 <flatcc_builder_reserve_table@@Base+0x128>
   39a44:	ldr	r3, [pc, #56]	; 39a84 <flatcc_builder_reserve_table@@Base+0x12c>
   39a48:	movw	r2, #1065	; 0x429
   39a4c:	add	r0, pc, r0
   39a50:	add	r1, pc, r1
   39a54:	add	r3, pc, r3
   39a58:	bl	14a78 <__assert_fail@plt>
   39a5c:	ldr	r0, [pc, #36]	; 39a88 <flatcc_builder_reserve_table@@Base+0x130>
   39a60:	ldr	r1, [pc, #36]	; 39a8c <flatcc_builder_reserve_table@@Base+0x134>
   39a64:	ldr	r3, [pc, #36]	; 39a90 <flatcc_builder_reserve_table@@Base+0x138>
   39a68:	mov	r2, #308	; 0x134
   39a6c:	add	r0, pc, r0
   39a70:	add	r1, pc, r1
   39a74:	add	r3, pc, r3
   39a78:	bl	14a78 <__assert_fail@plt>
   39a7c:	andeq	r0, r2, r0, ror #31
   39a80:	andeq	r0, r2, r2, ror #16
   39a84:	muleq	r2, r7, pc	; <UNPREDICTABLE>
   39a88:	andeq	r7, r1, r2, asr #22
   39a8c:	andeq	r0, r2, r2, asr #16
   39a90:	andeq	r1, r2, r5, lsr r8

00039a94 <flatcc_builder_start_table@@Base>:
   39a94:	push	{r4, r5, r6, r7, fp, lr}
   39a98:	add	fp, sp, #16
   39a9c:	sub	sp, sp, #8
   39aa0:	mov	r6, r1
   39aa4:	mov	r1, #4
   39aa8:	mov	r4, r0
   39aac:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   39ab0:	mvn	r5, #0
   39ab4:	cmp	r0, #0
   39ab8:	beq	39ac8 <flatcc_builder_start_table@@Base+0x34>
   39abc:	mov	r0, r5
   39ac0:	sub	sp, fp, #16
   39ac4:	pop	{r4, r5, r6, r7, fp, pc}
   39ac8:	mov	r1, r4
   39acc:	ldr	r2, [r4, #4]
   39ad0:	ldr	r3, [r4, #32]
   39ad4:	ldr	r0, [r1, #52]!	; 0x34
   39ad8:	sub	r0, r2, r0
   39adc:	str	r0, [r3, #16]
   39ae0:	ldr	r0, [r4]
   39ae4:	ldr	r3, [r4, #76]	; 0x4c
   39ae8:	ldr	r2, [r4, #32]
   39aec:	sub	r0, r0, r3
   39af0:	mov	r3, #0
   39af4:	str	r0, [r2, #20]
   39af8:	ldr	r0, [r4, #12]
   39afc:	ldr	r2, [r4, #32]
   39b00:	str	r0, [r2, #24]
   39b04:	ldr	r0, [r4, #32]
   39b08:	ldrh	r2, [r4, #8]
   39b0c:	strh	r2, [r0, #28]
   39b10:	movw	r0, #15186	; 0x3b52
   39b14:	strh	r3, [r4, #8]
   39b18:	mov	r2, #3
   39b1c:	movt	r0, #12137	; 0x2f69
   39b20:	str	r0, [r4, #12]
   39b24:	ldr	r0, [r4, #32]
   39b28:	strh	r2, [r0, #14]
   39b2c:	ldrh	r2, [r0, #28]
   39b30:	ldr	r0, [r0, #16]
   39b34:	add	r7, r0, r2, lsl #1
   39b38:	add	r0, r7, r6, lsl #1
   39b3c:	add	r2, r0, #4
   39b40:	ldr	r0, [r4, #56]	; 0x38
   39b44:	cmp	r2, r0
   39b48:	bls	39b68 <flatcc_builder_start_table@@Base+0xd4>
   39b4c:	ldr	r0, [r4, #40]	; 0x28
   39b50:	ldr	ip, [r4, #48]	; 0x30
   39b54:	str	r3, [sp]
   39b58:	mov	r3, #1
   39b5c:	blx	ip
   39b60:	cmp	r0, #0
   39b64:	bne	39c0c <flatcc_builder_start_table@@Base+0x178>
   39b68:	ldr	r0, [r4, #52]	; 0x34
   39b6c:	adds	r0, r0, r7
   39b70:	str	r0, [r4, #4]
   39b74:	beq	39abc <flatcc_builder_start_table@@Base+0x28>
   39b78:	add	r0, r0, #4
   39b7c:	lsl	r1, r6, #1
   39b80:	str	r0, [r4, #4]
   39b84:	ldr	r0, [r4, #32]
   39b88:	ldr	r3, [r4, #80]	; 0x50
   39b8c:	ldr	r6, [r0, #20]
   39b90:	orr	r0, r1, #1
   39b94:	add	r2, r6, r0
   39b98:	cmp	r2, r3
   39b9c:	bls	39bc4 <flatcc_builder_start_table@@Base+0x130>
   39ba0:	ldr	r0, [r4, #40]	; 0x28
   39ba4:	ldr	r7, [r4, #48]	; 0x30
   39ba8:	mov	r3, #3
   39bac:	add	r1, r4, #76	; 0x4c
   39bb0:	str	r3, [sp]
   39bb4:	mov	r3, #0
   39bb8:	blx	r7
   39bbc:	cmp	r0, #0
   39bc0:	bne	39c0c <flatcc_builder_start_table@@Base+0x178>
   39bc4:	ldr	r0, [r4, #76]	; 0x4c
   39bc8:	adds	r0, r0, r6
   39bcc:	str	r0, [r4]
   39bd0:	beq	39abc <flatcc_builder_start_table@@Base+0x28>
   39bd4:	ldr	r0, [r4, #28]
   39bd8:	ldr	r2, [r4, #60]	; 0x3c
   39bdc:	ldr	r3, [r4, #64]	; 0x40
   39be0:	ldr	r1, [r4, #32]
   39be4:	mov	r5, #0
   39be8:	add	r2, r2, r0
   39bec:	sub	r0, r3, r0
   39bf0:	str	r2, [r4, #16]
   39bf4:	movw	r2, #65532	; 0xfffc
   39bf8:	cmp	r0, r2
   39bfc:	movcs	r0, r2
   39c00:	str	r0, [r4, #24]
   39c04:	str	r2, [r1, #4]
   39c08:	b	39abc <flatcc_builder_start_table@@Base+0x28>
   39c0c:	ldr	r0, [pc, #24]	; 39c2c <flatcc_builder_start_table@@Base+0x198>
   39c10:	ldr	r1, [pc, #24]	; 39c30 <flatcc_builder_start_table@@Base+0x19c>
   39c14:	ldr	r3, [pc, #24]	; 39c34 <flatcc_builder_start_table@@Base+0x1a0>
   39c18:	mov	r2, #308	; 0x134
   39c1c:	add	r0, pc, r0
   39c20:	add	r1, pc, r1
   39c24:	add	r3, pc, r3
   39c28:	bl	14a78 <__assert_fail@plt>
   39c2c:	muleq	r1, r2, r9
   39c30:	muleq	r2, r2, r6
   39c34:	andeq	r1, r2, r5, lsl #13

00039c38 <flatcc_builder_create_vtable@@Base>:
   39c38:	push	{r4, r5, fp, lr}
   39c3c:	add	fp, sp, #8
   39c40:	sub	sp, sp, #80	; 0x50
   39c44:	mov	r3, r2
   39c48:	mov	r2, #0
   39c4c:	mov	r4, r0
   39c50:	cmp	r3, #0
   39c54:	str	r2, [sp, #12]
   39c58:	str	r2, [sp, #8]
   39c5c:	movne	r2, #1
   39c60:	strne	r1, [sp, #16]
   39c64:	strne	r3, [sp, #8]
   39c68:	strne	r3, [sp, #20]
   39c6c:	strne	r2, [sp, #12]
   39c70:	ldr	r0, [r4, #152]	; 0x98
   39c74:	cmp	r0, #0
   39c78:	bne	39c88 <flatcc_builder_create_vtable@@Base+0x50>
   39c7c:	ldr	r0, [r4, #180]	; 0xb4
   39c80:	cmp	r0, #0
   39c84:	beq	39cd4 <flatcc_builder_create_vtable@@Base+0x9c>
   39c88:	cmp	r3, #0
   39c8c:	beq	39d18 <flatcc_builder_create_vtable@@Base+0xe0>
   39c90:	ldr	r0, [r4, #136]	; 0x88
   39c94:	ldr	ip, [r4, #44]	; 0x2c
   39c98:	add	r1, sp, #8
   39c9c:	add	r1, r1, #8
   39ca0:	sub	r5, r0, r3
   39ca4:	ldr	r0, [r4, #36]	; 0x24
   39ca8:	str	r3, [sp]
   39cac:	mov	r3, r5
   39cb0:	blx	ip
   39cb4:	cmp	r0, #0
   39cb8:	bne	39d38 <flatcc_builder_create_vtable@@Base+0x100>
   39cbc:	cmp	r5, #0
   39cc0:	str	r5, [r4, #136]	; 0x88
   39cc4:	beq	39d0c <flatcc_builder_create_vtable@@Base+0xd4>
   39cc8:	add	r0, r5, #1
   39ccc:	sub	sp, fp, #8
   39cd0:	pop	{r4, r5, fp, pc}
   39cd4:	ldr	r5, [r4, #140]	; 0x8c
   39cd8:	ldr	r0, [r4, #36]	; 0x24
   39cdc:	ldr	ip, [r4, #44]	; 0x2c
   39ce0:	add	r1, r5, r3
   39ce4:	str	r1, [r4, #140]	; 0x8c
   39ce8:	add	r1, sp, #8
   39cec:	str	r3, [sp]
   39cf0:	mov	r3, r5
   39cf4:	add	r1, r1, #8
   39cf8:	blx	ip
   39cfc:	cmp	r0, #0
   39d00:	bne	39d58 <flatcc_builder_create_vtable@@Base+0x120>
   39d04:	adds	r0, r5, #1
   39d08:	bne	39ccc <flatcc_builder_create_vtable@@Base+0x94>
   39d0c:	mov	r0, #0
   39d10:	sub	sp, fp, #8
   39d14:	pop	{r4, r5, fp, pc}
   39d18:	ldr	r0, [pc, #100]	; 39d84 <flatcc_builder_create_vtable@@Base+0x14c>
   39d1c:	ldr	r1, [pc, #100]	; 39d88 <flatcc_builder_create_vtable@@Base+0x150>
   39d20:	ldr	r3, [pc, #100]	; 39d8c <flatcc_builder_create_vtable@@Base+0x154>
   39d24:	movw	r2, #647	; 0x287
   39d28:	add	r0, pc, r0
   39d2c:	add	r1, pc, r1
   39d30:	add	r3, pc, r3
   39d34:	bl	14a78 <__assert_fail@plt>
   39d38:	ldr	r0, [pc, #80]	; 39d90 <flatcc_builder_create_vtable@@Base+0x158>
   39d3c:	ldr	r1, [pc, #80]	; 39d94 <flatcc_builder_create_vtable@@Base+0x15c>
   39d40:	ldr	r3, [pc, #80]	; 39d98 <flatcc_builder_create_vtable@@Base+0x160>
   39d44:	movw	r2, #651	; 0x28b
   39d48:	add	r0, pc, r0
   39d4c:	add	r1, pc, r1
   39d50:	add	r3, pc, r3
   39d54:	bl	14a78 <__assert_fail@plt>
   39d58:	ldr	r0, [pc, #24]	; 39d78 <flatcc_builder_create_vtable@@Base+0x140>
   39d5c:	ldr	r1, [pc, #24]	; 39d7c <flatcc_builder_create_vtable@@Base+0x144>
   39d60:	ldr	r3, [pc, #24]	; 39d80 <flatcc_builder_create_vtable@@Base+0x148>
   39d64:	movw	r2, #677	; 0x2a5
   39d68:	add	r0, pc, r0
   39d6c:	add	r1, pc, r1
   39d70:	add	r3, pc, r3
   39d74:	bl	14a78 <__assert_fail@plt>
   39d78:	andeq	r7, r1, r6, asr #16
   39d7c:	andeq	r0, r2, r6, asr #10
   39d80:	andeq	r1, r2, sl, ror r6
   39d84:	andeq	r7, r1, r6, lsl #17
   39d88:	andeq	r0, r2, r6, lsl #11
   39d8c:	strdeq	r1, [r2], -lr
   39d90:	andeq	r7, r1, r6, ror #16
   39d94:	andeq	r0, r2, r6, ror #10
   39d98:	ldrdeq	r1, [r2], -lr

00039d9c <flatcc_builder_create_cached_vtable@@Base>:
   39d9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39da0:	add	fp, sp, #28
   39da4:	sub	sp, sp, #20
   39da8:	mov	sl, r0
   39dac:	ldr	r0, [r0, #116]	; 0x74
   39db0:	mov	r8, r3
   39db4:	mov	r5, r2
   39db8:	str	r1, [sp, #16]
   39dbc:	cmp	r0, #0
   39dc0:	beq	39e64 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   39dc4:	ldr	r1, [sl, #92]	; 0x5c
   39dc8:	rsb	r0, r0, #32
   39dcc:	lsr	r0, r8, r0
   39dd0:	add	r6, r1, r0, lsl #2
   39dd4:	cmp	r6, #0
   39dd8:	beq	39f28 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   39ddc:	ldr	r7, [r6]
   39de0:	str	r6, [sp, #12]
   39de4:	cmp	r7, #0
   39de8:	beq	39f30 <flatcc_builder_create_cached_vtable@@Base+0x194>
   39dec:	ldr	r4, [sl, #68]	; 0x44
   39df0:	ldr	r8, [sl, #100]	; 0x64
   39df4:	mov	r0, #0
   39df8:	str	r0, [sp, #8]
   39dfc:	add	r9, r8, r7
   39e00:	mov	r1, r4
   39e04:	ldr	r0, [r9, #8]
   39e08:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   39e0c:	cmp	r0, r5
   39e10:	bne	39e28 <flatcc_builder_create_cached_vtable@@Base+0x8c>
   39e14:	ldr	r0, [sp, #16]
   39e18:	mov	r2, r5
   39e1c:	bl	1491c <memcmp@plt>
   39e20:	cmp	r0, #0
   39e24:	beq	39e3c <flatcc_builder_create_cached_vtable@@Base+0xa0>
   39e28:	ldr	r7, [r9, #12]!
   39e2c:	cmp	r7, #0
   39e30:	mov	r6, r9
   39e34:	bne	39dfc <flatcc_builder_create_cached_vtable@@Base+0x60>
   39e38:	b	39f20 <flatcc_builder_create_cached_vtable@@Base+0x184>
   39e3c:	ldr	r0, [sl, #152]	; 0x98
   39e40:	ldr	r1, [r9, #4]
   39e44:	cmp	r1, r0
   39e48:	beq	3a094 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   39e4c:	mov	r6, r9
   39e50:	mov	r0, r9
   39e54:	ldr	r7, [r6, #12]!
   39e58:	cmp	r7, #0
   39e5c:	bne	39df8 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   39e60:	b	39f34 <flatcc_builder_create_cached_vtable@@Base+0x198>
   39e64:	ldr	r0, [sl, #124]	; 0x7c
   39e68:	cmp	r0, #0
   39e6c:	bne	3a0e0 <flatcc_builder_create_cached_vtable@@Base+0x344>
   39e70:	ldr	r0, [sl, #104]	; 0x68
   39e74:	add	r7, sl, #100	; 0x64
   39e78:	cmp	r0, #15
   39e7c:	bhi	39ea8 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   39e80:	ldr	r0, [sl, #40]	; 0x28
   39e84:	ldr	r6, [sl, #48]	; 0x30
   39e88:	mov	r1, #6
   39e8c:	mov	r2, #16
   39e90:	mov	r3, #0
   39e94:	str	r1, [sp]
   39e98:	mov	r1, r7
   39e9c:	blx	r6
   39ea0:	cmp	r0, #0
   39ea4:	bne	3a0c0 <flatcc_builder_create_cached_vtable@@Base+0x324>
   39ea8:	ldr	r0, [r7]
   39eac:	mov	r7, #0
   39eb0:	cmp	r0, #0
   39eb4:	beq	39fd4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39eb8:	mov	r0, #16
   39ebc:	mov	r2, #5
   39ec0:	add	r1, sl, #92	; 0x5c
   39ec4:	mov	r3, #1
   39ec8:	mov	r4, #256	; 0x100
   39ecc:	str	r0, [sl, #124]	; 0x7c
   39ed0:	ldr	r0, [sl, #40]	; 0x28
   39ed4:	ldr	r6, [sl, #48]	; 0x30
   39ed8:	str	r2, [sp]
   39edc:	mov	r2, #256	; 0x100
   39ee0:	blx	r6
   39ee4:	cmp	r0, #0
   39ee8:	bne	39fd4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39eec:	ldr	r0, [sl, #96]	; 0x60
   39ef0:	mov	r1, r4
   39ef4:	lsl	r4, r4, #1
   39ef8:	cmp	r0, r1, lsl #1
   39efc:	bcs	39ef0 <flatcc_builder_create_cached_vtable@@Base+0x154>
   39f00:	lsr	r1, r1, #2
   39f04:	mvn	r0, #0
   39f08:	mov	r2, #1
   39f0c:	add	r0, r0, #1
   39f10:	cmp	r1, r2, lsl r0
   39f14:	bhi	39f0c <flatcc_builder_create_cached_vtable@@Base+0x170>
   39f18:	str	r0, [sl, #116]	; 0x74
   39f1c:	b	39dc4 <flatcc_builder_create_cached_vtable@@Base+0x28>
   39f20:	ldr	r9, [sp, #8]
   39f24:	b	39f34 <flatcc_builder_create_cached_vtable@@Base+0x198>
   39f28:	mov	r7, #0
   39f2c:	b	39fd4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39f30:	mov	r9, #0
   39f34:	ldr	r4, [sl, #124]	; 0x7c
   39f38:	ldr	r0, [sl, #104]	; 0x68
   39f3c:	add	r7, sl, #100	; 0x64
   39f40:	add	r2, r4, #16
   39f44:	cmp	r2, r0
   39f48:	bls	39f70 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
   39f4c:	ldr	r0, [sl, #40]	; 0x28
   39f50:	ldr	r6, [sl, #48]	; 0x30
   39f54:	mov	r1, #6
   39f58:	mov	r3, #0
   39f5c:	str	r1, [sp]
   39f60:	mov	r1, r7
   39f64:	blx	r6
   39f68:	cmp	r0, #0
   39f6c:	bne	3a0c0 <flatcc_builder_create_cached_vtable@@Base+0x324>
   39f70:	ldr	r0, [r7]
   39f74:	mov	r7, #0
   39f78:	adds	r4, r0, r4
   39f7c:	beq	39fd4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39f80:	ldr	r0, [sl, #124]	; 0x7c
   39f84:	ldr	r1, [sl, #152]	; 0x98
   39f88:	add	r2, r0, #16
   39f8c:	str	r2, [sl, #124]	; 0x7c
   39f90:	ldr	r2, [sp, #12]
   39f94:	str	r1, [r4, #4]
   39f98:	ldr	r1, [r2]
   39f9c:	str	r1, [r4, #12]
   39fa0:	ldr	r1, [sp, #16]
   39fa4:	str	r0, [r2]
   39fa8:	mov	r0, sl
   39fac:	mov	r2, r5
   39fb0:	bl	39c38 <flatcc_builder_create_vtable@@Base>
   39fb4:	cmp	r0, #0
   39fb8:	str	r0, [r4]
   39fbc:	beq	39fd4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   39fc0:	cmp	r9, #0
   39fc4:	beq	39fe0 <flatcc_builder_create_cached_vtable@@Base+0x244>
   39fc8:	ldr	r0, [r9, #8]
   39fcc:	str	r0, [r4, #8]
   39fd0:	ldr	r7, [r4]
   39fd4:	mov	r0, r7
   39fd8:	sub	sp, fp, #28
   39fdc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39fe0:	ldr	r6, [sl, #120]	; 0x78
   39fe4:	ldr	r0, [sl, #172]	; 0xac
   39fe8:	add	r2, r6, r5
   39fec:	cmp	r0, #0
   39ff0:	beq	3a02c <flatcc_builder_create_cached_vtable@@Base+0x290>
   39ff4:	cmp	r0, r2
   39ff8:	bcs	3a02c <flatcc_builder_create_cached_vtable@@Base+0x290>
   39ffc:	ldr	r0, [sl, #116]	; 0x74
   3a000:	cmp	r0, #0
   3a004:	beq	39fd0 <flatcc_builder_create_cached_vtable@@Base+0x234>
   3a008:	ldr	r0, [sl, #92]	; 0x5c
   3a00c:	ldr	r2, [sl, #96]	; 0x60
   3a010:	mov	r1, #0
   3a014:	mov	r5, #0
   3a018:	bl	149d0 <memset@plt>
   3a01c:	mov	r0, #16
   3a020:	str	r5, [sl, #120]	; 0x78
   3a024:	str	r0, [sl, #124]	; 0x7c
   3a028:	b	39fd0 <flatcc_builder_create_cached_vtable@@Base+0x234>
   3a02c:	ldr	r0, [sl, #72]	; 0x48
   3a030:	add	r7, sl, #68	; 0x44
   3a034:	cmp	r2, r0
   3a038:	bls	3a060 <flatcc_builder_create_cached_vtable@@Base+0x2c4>
   3a03c:	ldr	r0, [sl, #40]	; 0x28
   3a040:	ldr	ip, [sl, #48]	; 0x30
   3a044:	mov	r1, #2
   3a048:	mov	r3, #0
   3a04c:	str	r1, [sp]
   3a050:	mov	r1, r7
   3a054:	blx	ip
   3a058:	cmp	r0, #0
   3a05c:	bne	3a0c0 <flatcc_builder_create_cached_vtable@@Base+0x324>
   3a060:	ldr	r0, [r7]
   3a064:	adds	r0, r0, r6
   3a068:	beq	3a08c <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   3a06c:	ldr	r1, [sl, #120]	; 0x78
   3a070:	mov	r2, r5
   3a074:	str	r1, [r4, #8]
   3a078:	add	r1, r1, r5
   3a07c:	str	r1, [sl, #120]	; 0x78
   3a080:	ldr	r1, [sp, #16]
   3a084:	bl	14904 <memcpy@plt>
   3a088:	b	39fd0 <flatcc_builder_create_cached_vtable@@Base+0x234>
   3a08c:	mvn	r7, #0
   3a090:	b	39fd4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   3a094:	ldr	r0, [sp, #12]
   3a098:	cmp	r6, r0
   3a09c:	beq	3a0b8 <flatcc_builder_create_cached_vtable@@Base+0x31c>
   3a0a0:	mov	r1, r0
   3a0a4:	ldr	r0, [r9, #12]
   3a0a8:	str	r0, [r6]
   3a0ac:	ldr	r0, [r1]
   3a0b0:	str	r0, [r9, #12]
   3a0b4:	str	r7, [r1]
   3a0b8:	ldr	r7, [r9]
   3a0bc:	b	39fd4 <flatcc_builder_create_cached_vtable@@Base+0x238>
   3a0c0:	ldr	r0, [pc, #68]	; 3a10c <flatcc_builder_create_cached_vtable@@Base+0x370>
   3a0c4:	ldr	r1, [pc, #68]	; 3a110 <flatcc_builder_create_cached_vtable@@Base+0x374>
   3a0c8:	ldr	r3, [pc, #68]	; 3a114 <flatcc_builder_create_cached_vtable@@Base+0x378>
   3a0cc:	mov	r2, #308	; 0x134
   3a0d0:	add	r0, pc, r0
   3a0d4:	add	r1, pc, r1
   3a0d8:	add	r3, pc, r3
   3a0dc:	bl	14a78 <__assert_fail@plt>
   3a0e0:	ldr	r0, [pc, #24]	; 3a100 <flatcc_builder_create_cached_vtable@@Base+0x364>
   3a0e4:	ldr	r1, [pc, #24]	; 3a104 <flatcc_builder_create_cached_vtable@@Base+0x368>
   3a0e8:	ldr	r3, [pc, #24]	; 3a108 <flatcc_builder_create_cached_vtable@@Base+0x36c>
   3a0ec:	movw	r2, #342	; 0x156
   3a0f0:	add	r0, pc, r0
   3a0f4:	add	r1, pc, r1
   3a0f8:	add	r3, pc, r3
   3a0fc:	bl	14a78 <__assert_fail@plt>
   3a100:	andeq	r1, r2, r3, asr #6
   3a104:			; <UNDEFINED> instruction: 0x000201be
   3a108:	andeq	r1, r2, sl, asr #6
   3a10c:	ldrdeq	r7, [r1], -lr
   3a110:	ldrdeq	r0, [r2], -lr
   3a114:	ldrdeq	r1, [r2], -r1	; <UNPREDICTABLE>

0003a118 <flatcc_builder_create_table@@Base>:
   3a118:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a11c:	add	fp, sp, #24
   3a120:	sub	sp, sp, #80	; 0x50
   3a124:	ldr	r5, [fp, #12]
   3a128:	cmn	r5, #1
   3a12c:	ble	3a280 <flatcc_builder_create_table@@Base+0x168>
   3a130:	ldr	ip, [fp, #16]
   3a134:	tst	ip, #1
   3a138:	beq	3a2a0 <flatcc_builder_create_table@@Base+0x188>
   3a13c:	mov	r8, r0
   3a140:	ldrh	r0, [r0, #128]	; 0x80
   3a144:	cmp	r3, #4
   3a148:	movls	r3, #4
   3a14c:	cmp	r0, r3
   3a150:	strhcc	r3, [r8, #128]	; 0x80
   3a154:	sub	r3, r3, #1
   3a158:	cmp	r5, #1
   3a15c:	ldr	r4, [r8, #136]	; 0x88
   3a160:	sub	r0, r4, r2
   3a164:	and	r0, r0, r3
   3a168:	add	r3, ip, r0
   3a16c:	mvn	ip, #3
   3a170:	sub	r6, ip, r2
   3a174:	add	r4, r6, r4
   3a178:	add	r6, r4, #1
   3a17c:	sub	r3, r6, r3
   3a180:	str	r3, [fp, #-28]	; 0xffffffe4
   3a184:	blt	3a1b0 <flatcc_builder_create_table@@Base+0x98>
   3a188:	ldr	r3, [fp, #8]
   3a18c:	sub	r6, r4, r0
   3a190:	sub	r4, ip, r6
   3a194:	ldrh	r6, [r3], #2
   3a198:	subs	r5, r5, #1
   3a19c:	ldr	r7, [r6, r1]
   3a1a0:	add	r7, r4, r7
   3a1a4:	sub	r7, r7, r6
   3a1a8:	str	r7, [r6, r1]
   3a1ac:	bne	3a194 <flatcc_builder_create_table@@Base+0x7c>
   3a1b0:	sub	r3, fp, #28
   3a1b4:	mov	r4, #4
   3a1b8:	cmp	r2, #0
   3a1bc:	str	r3, [sp, #12]
   3a1c0:	mov	r3, #1
   3a1c4:	str	r4, [sp, #4]
   3a1c8:	str	r4, [sp, #16]
   3a1cc:	str	r3, [sp, #8]
   3a1d0:	beq	3a1ec <flatcc_builder_create_table@@Base+0xd4>
   3a1d4:	mov	r3, #2
   3a1d8:	add	r4, r2, #4
   3a1dc:	str	r1, [sp, #20]
   3a1e0:	str	r2, [sp, #24]
   3a1e4:	str	r3, [sp, #8]
   3a1e8:	str	r4, [sp, #4]
   3a1ec:	cmp	r0, #0
   3a1f0:	beq	3a21c <flatcc_builder_create_table@@Base+0x104>
   3a1f4:	add	r4, r4, r0
   3a1f8:	add	r1, sp, #4
   3a1fc:	str	r4, [sp, #4]
   3a200:	add	r1, r1, r3, lsl #3
   3a204:	add	r3, r3, #1
   3a208:	ldr	r2, [pc, #208]	; 3a2e0 <flatcc_builder_create_table@@Base+0x1c8>
   3a20c:	ldr	r2, [pc, r2]
   3a210:	str	r2, [r1, #8]
   3a214:	str	r0, [r1, #12]
   3a218:	str	r3, [sp, #8]
   3a21c:	cmp	r4, #0
   3a220:	ble	3a2c0 <flatcc_builder_create_table@@Base+0x1a8>
   3a224:	ldr	r0, [r8, #136]	; 0x88
   3a228:	ldr	r7, [r8, #44]	; 0x2c
   3a22c:	add	r1, sp, #4
   3a230:	mov	r2, r3
   3a234:	add	r1, r1, #8
   3a238:	sub	r5, r0, r4
   3a23c:	ldr	r0, [r8, #36]	; 0x24
   3a240:	str	r4, [sp]
   3a244:	mov	r3, r5
   3a248:	blx	r7
   3a24c:	cmp	r0, #0
   3a250:	streq	r5, [r8, #136]	; 0x88
   3a254:	moveq	r0, r5
   3a258:	subeq	sp, fp, #24
   3a25c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3a260:	ldr	r0, [pc, #160]	; 3a308 <flatcc_builder_create_table@@Base+0x1f0>
   3a264:	ldr	r1, [pc, #160]	; 3a30c <flatcc_builder_create_table@@Base+0x1f4>
   3a268:	ldr	r3, [pc, #160]	; 3a310 <flatcc_builder_create_table@@Base+0x1f8>
   3a26c:	movw	r2, #651	; 0x28b
   3a270:	add	r0, pc, r0
   3a274:	add	r1, pc, r1
   3a278:	add	r3, pc, r3
   3a27c:	bl	14a78 <__assert_fail@plt>
   3a280:	ldr	r0, [pc, #92]	; 3a2e4 <flatcc_builder_create_table@@Base+0x1cc>
   3a284:	ldr	r1, [pc, #92]	; 3a2e8 <flatcc_builder_create_table@@Base+0x1d0>
   3a288:	ldr	r3, [pc, #92]	; 3a2ec <flatcc_builder_create_table@@Base+0x1d4>
   3a28c:	movw	r2, #1237	; 0x4d5
   3a290:	add	r0, pc, r0
   3a294:	add	r1, pc, r1
   3a298:	add	r3, pc, r3
   3a29c:	bl	14a78 <__assert_fail@plt>
   3a2a0:	ldr	r0, [pc, #72]	; 3a2f0 <flatcc_builder_create_table@@Base+0x1d8>
   3a2a4:	ldr	r1, [pc, #72]	; 3a2f4 <flatcc_builder_create_table@@Base+0x1dc>
   3a2a8:	ldr	r3, [pc, #72]	; 3a2f8 <flatcc_builder_create_table@@Base+0x1e0>
   3a2ac:	movw	r2, #1243	; 0x4db
   3a2b0:	add	r0, pc, r0
   3a2b4:	add	r1, pc, r1
   3a2b8:	add	r3, pc, r3
   3a2bc:	bl	14a78 <__assert_fail@plt>
   3a2c0:	ldr	r0, [pc, #52]	; 3a2fc <flatcc_builder_create_table@@Base+0x1e4>
   3a2c4:	ldr	r1, [pc, #52]	; 3a300 <flatcc_builder_create_table@@Base+0x1e8>
   3a2c8:	ldr	r3, [pc, #52]	; 3a304 <flatcc_builder_create_table@@Base+0x1ec>
   3a2cc:	movw	r2, #647	; 0x287
   3a2d0:	add	r0, pc, r0
   3a2d4:	add	r1, pc, r1
   3a2d8:	add	r3, pc, r3
   3a2dc:	bl	14a78 <__assert_fail@plt>
   3a2e0:	andeq	r1, r3, ip, lsl #29
   3a2e4:	muleq	r2, r5, r7
   3a2e8:	andeq	r0, r2, lr, lsl r0
   3a2ec:	muleq	r2, pc, r7	; <UNPREDICTABLE>
   3a2f0:	andeq	r0, r2, r3, lsr #16
   3a2f4:	strdeq	pc, [r1], -lr
   3a2f8:	andeq	r0, r2, pc, ror r7
   3a2fc:	ldrdeq	r7, [r1], -lr
   3a300:	ldrdeq	pc, [r1], -lr
   3a304:	andeq	r1, r2, r6, asr r0
   3a308:	andeq	r7, r1, lr, lsr r3
   3a30c:	andeq	r0, r2, lr, lsr r0
   3a310:	strheq	r1, [r2], -r6

0003a314 <flatcc_builder_check_required_field@@Base>:
   3a314:	ldr	r2, [r0, #32]
   3a318:	ldrh	r2, [r2, #14]
   3a31c:	cmp	r2, #3
   3a320:	bne	3a350 <flatcc_builder_check_required_field@@Base+0x3c>
   3a324:	ldrh	r3, [r0, #8]
   3a328:	mov	r2, #0
   3a32c:	cmp	r3, r1
   3a330:	bls	3a348 <flatcc_builder_check_required_field@@Base+0x34>
   3a334:	ldr	r0, [r0, #4]
   3a338:	add	r0, r0, r1, lsl #1
   3a33c:	ldrh	r2, [r0]
   3a340:	cmp	r2, #0
   3a344:	movwne	r2, #1
   3a348:	mov	r0, r2
   3a34c:	bx	lr
   3a350:	push	{fp, lr}
   3a354:	mov	fp, sp
   3a358:	ldr	r0, [pc, #24]	; 3a378 <flatcc_builder_check_required_field@@Base+0x64>
   3a35c:	ldr	r1, [pc, #24]	; 3a37c <flatcc_builder_check_required_field@@Base+0x68>
   3a360:	ldr	r3, [pc, #24]	; 3a380 <flatcc_builder_check_required_field@@Base+0x6c>
   3a364:	movw	r2, #1272	; 0x4f8
   3a368:	add	r0, pc, r0
   3a36c:	add	r1, pc, r1
   3a370:	add	r3, pc, r3
   3a374:	bl	14a78 <__assert_fail@plt>
   3a378:	andeq	r0, r2, r6, ror r7
   3a37c:	andeq	pc, r1, r6, asr #30
   3a380:	muleq	r2, r9, r7

0003a384 <flatcc_builder_check_union_field@@Base>:
   3a384:	mov	r2, r0
   3a388:	ldr	r0, [r0, #32]
   3a38c:	ldrh	r0, [r0, #14]
   3a390:	cmp	r0, #3
   3a394:	bne	3a3f4 <flatcc_builder_check_union_field@@Base+0x70>
   3a398:	cmp	r1, #0
   3a39c:	mov	r0, #0
   3a3a0:	ldrhne	r3, [r2, #8]
   3a3a4:	cmpne	r3, r1
   3a3a8:	bhi	3a3b0 <flatcc_builder_check_union_field@@Base+0x2c>
   3a3ac:	bx	lr
   3a3b0:	ldr	r0, [r2, #4]
   3a3b4:	add	r0, r0, r1, lsl #1
   3a3b8:	ldrh	r1, [r0, #-2]
   3a3bc:	cmp	r1, #0
   3a3c0:	beq	3a3e4 <flatcc_builder_check_union_field@@Base+0x60>
   3a3c4:	ldr	r2, [r2, #16]
   3a3c8:	ldrh	r0, [r0]
   3a3cc:	ldrb	r1, [r2, r1]
   3a3d0:	cmp	r1, #0
   3a3d4:	beq	3a3e8 <flatcc_builder_check_union_field@@Base+0x64>
   3a3d8:	cmp	r0, #0
   3a3dc:	movwne	r0, #1
   3a3e0:	bx	lr
   3a3e4:	ldrh	r0, [r0]
   3a3e8:	clz	r0, r0
   3a3ec:	lsr	r0, r0, #5
   3a3f0:	bx	lr
   3a3f4:	push	{fp, lr}
   3a3f8:	mov	fp, sp
   3a3fc:	ldr	r0, [pc, #24]	; 3a41c <flatcc_builder_check_union_field@@Base+0x98>
   3a400:	ldr	r1, [pc, #24]	; 3a420 <flatcc_builder_check_union_field@@Base+0x9c>
   3a404:	ldr	r3, [pc, #24]	; 3a424 <flatcc_builder_check_union_field@@Base+0xa0>
   3a408:	movw	r2, #1279	; 0x4ff
   3a40c:	add	r0, pc, r0
   3a410:	add	r1, pc, r1
   3a414:	add	r3, pc, r3
   3a418:	bl	14a78 <__assert_fail@plt>
   3a41c:	ldrdeq	r0, [r2], -r2
   3a420:	andeq	pc, r1, r2, lsr #29
   3a424:	andeq	r0, r2, r8, asr #14

0003a428 <flatcc_builder_check_required@@Base>:
   3a428:	push	{fp, lr}
   3a42c:	mov	fp, sp
   3a430:	mov	r3, r0
   3a434:	ldr	r0, [r0, #32]
   3a438:	ldrh	r0, [r0, #14]
   3a43c:	cmp	r0, #3
   3a440:	bne	3a498 <flatcc_builder_check_required@@Base+0x70>
   3a444:	ldrh	ip, [r3, #8]
   3a448:	mov	r0, #0
   3a44c:	cmp	ip, r2
   3a450:	movge	r0, #1
   3a454:	cmpge	r2, #1
   3a458:	bge	3a460 <flatcc_builder_check_required@@Base+0x38>
   3a45c:	pop	{fp, pc}
   3a460:	ldr	ip, [r3, #4]
   3a464:	mov	lr, #0
   3a468:	b	3a47c <flatcc_builder_check_required@@Base+0x54>
   3a46c:	add	lr, lr, #1
   3a470:	add	r1, r1, #2
   3a474:	cmp	lr, r2
   3a478:	popge	{fp, pc}
   3a47c:	ldrh	r3, [r1]
   3a480:	add	r3, ip, r3, lsl #1
   3a484:	ldrh	r3, [r3]
   3a488:	cmp	r3, #0
   3a48c:	bne	3a46c <flatcc_builder_check_required@@Base+0x44>
   3a490:	mov	r0, #0
   3a494:	pop	{fp, pc}
   3a498:	ldr	r0, [pc, #24]	; 3a4b8 <flatcc_builder_check_required@@Base+0x90>
   3a49c:	ldr	r1, [pc, #24]	; 3a4bc <flatcc_builder_check_required@@Base+0x94>
   3a4a0:	ldr	r3, [pc, #24]	; 3a4c0 <flatcc_builder_check_required@@Base+0x98>
   3a4a4:	movw	r2, #1297	; 0x511
   3a4a8:	add	r0, pc, r0
   3a4ac:	add	r1, pc, r1
   3a4b0:	add	r3, pc, r3
   3a4b4:	bl	14a78 <__assert_fail@plt>
   3a4b8:	andeq	r0, r2, r6, lsr r6
   3a4bc:	andeq	pc, r1, r6, lsl #28
   3a4c0:	strdeq	r0, [r2], -ip

0003a4c4 <flatcc_builder_end_table@@Base>:
   3a4c4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a4c8:	add	fp, sp, #24
   3a4cc:	sub	sp, sp, #16
   3a4d0:	mov	r4, r0
   3a4d4:	ldr	r0, [r0, #32]
   3a4d8:	ldrh	r0, [r0, #14]
   3a4dc:	cmp	r0, #3
   3a4e0:	bne	3a65c <flatcc_builder_end_table@@Base+0x198>
   3a4e4:	ldrh	r0, [r4, #8]
   3a4e8:	ldr	r5, [r4, #4]
   3a4ec:	mov	r1, #4
   3a4f0:	movw	r2, #31153	; 0x79b1
   3a4f4:	movt	r2, #40503	; 0x9e37
   3a4f8:	add	r0, r1, r0, lsl #1
   3a4fc:	strh	r0, [r5, #-4]!
   3a500:	ldrh	r1, [r4, #20]
   3a504:	uxth	r6, r0
   3a508:	add	r1, r1, #4
   3a50c:	strh	r1, [r5, #2]
   3a510:	uxth	r1, r1
   3a514:	ldr	r0, [r4, #12]
   3a518:	eor	r0, r0, r6
   3a51c:	mul	r0, r0, r2
   3a520:	eor	r0, r0, r1
   3a524:	mov	r1, r5
   3a528:	mul	r3, r0, r2
   3a52c:	mov	r0, r4
   3a530:	mov	r2, r6
   3a534:	str	r3, [r4, #12]
   3a538:	bl	39d9c <flatcc_builder_create_cached_vtable@@Base>
   3a53c:	cmp	r0, #0
   3a540:	beq	3a64c <flatcc_builder_end_table@@Base+0x188>
   3a544:	mov	r7, r0
   3a548:	mov	r0, r5
   3a54c:	mov	r1, #0
   3a550:	mov	r2, r6
   3a554:	mov	r8, #0
   3a558:	bl	149d0 <memset@plt>
   3a55c:	ldr	r5, [r4, #32]
   3a560:	ldr	r0, [r4, #76]	; 0x4c
   3a564:	ldr	r6, [r4]
   3a568:	ldrh	r3, [r4, #130]	; 0x82
   3a56c:	ldr	r1, [r4, #16]
   3a570:	ldr	r2, [r4, #20]
   3a574:	ldr	r5, [r5, #20]
   3a578:	add	r0, r0, r5
   3a57c:	sub	r6, r6, r0
   3a580:	asr	r6, r6, #1
   3a584:	stm	sp, {r0, r6, r7}
   3a588:	mov	r0, r4
   3a58c:	bl	3a118 <flatcc_builder_create_table@@Base>
   3a590:	cmp	r0, #0
   3a594:	beq	3a650 <flatcc_builder_end_table@@Base+0x18c>
   3a598:	ldr	r1, [r4, #32]
   3a59c:	mov	r5, r0
   3a5a0:	ldr	r0, [r4, #16]
   3a5a4:	ldr	r2, [r4, #20]
   3a5a8:	ldr	r3, [r4, #52]	; 0x34
   3a5ac:	ldr	r7, [r1, #24]
   3a5b0:	str	r7, [r4, #12]
   3a5b4:	ldrh	r7, [r1, #28]
   3a5b8:	strh	r7, [r4, #8]
   3a5bc:	ldr	r7, [r1, #16]
   3a5c0:	add	r3, r3, r7
   3a5c4:	str	r3, [r4, #4]
   3a5c8:	ldr	r3, [r4, #76]	; 0x4c
   3a5cc:	ldr	r1, [r1, #20]
   3a5d0:	add	r1, r3, r1
   3a5d4:	str	r1, [r4]
   3a5d8:	mov	r1, #0
   3a5dc:	bl	149d0 <memset@plt>
   3a5e0:	ldr	r0, [r4, #32]
   3a5e4:	ldr	r1, [r4, #60]	; 0x3c
   3a5e8:	ldr	r2, [r4, #64]	; 0x40
   3a5ec:	mov	r8, r5
   3a5f0:	ldr	r3, [r0, #8]
   3a5f4:	str	r3, [r4, #20]
   3a5f8:	ldr	r3, [r0]
   3a5fc:	str	r3, [r4, #28]
   3a600:	add	r1, r1, r3
   3a604:	ldr	r7, [r0, #4]
   3a608:	str	r1, [r4, #16]
   3a60c:	sub	r1, r2, r3
   3a610:	cmp	r1, r7
   3a614:	movhi	r1, r7
   3a618:	str	r1, [r4, #24]
   3a61c:	ldrh	r1, [r4, #130]	; 0x82
   3a620:	ldrh	r2, [r4, #128]	; 0x80
   3a624:	cmp	r2, r1
   3a628:	strhcc	r1, [r4, #128]	; 0x80
   3a62c:	ldrh	r1, [r0, #12]
   3a630:	sub	r0, r0, #36	; 0x24
   3a634:	str	r0, [r4, #32]
   3a638:	strh	r1, [r4, #130]	; 0x82
   3a63c:	ldr	r0, [r4, #156]	; 0x9c
   3a640:	sub	r0, r0, #1
   3a644:	str	r0, [r4, #156]	; 0x9c
   3a648:	b	3a650 <flatcc_builder_end_table@@Base+0x18c>
   3a64c:	mov	r8, #0
   3a650:	mov	r0, r8
   3a654:	sub	sp, fp, #24
   3a658:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3a65c:	ldr	r0, [pc, #24]	; 3a67c <flatcc_builder_end_table@@Base+0x1b8>
   3a660:	ldr	r1, [pc, #24]	; 3a680 <flatcc_builder_end_table@@Base+0x1bc>
   3a664:	ldr	r3, [pc, #24]	; 3a684 <flatcc_builder_end_table@@Base+0x1c0>
   3a668:	movw	r2, #1317	; 0x525
   3a66c:	add	r0, pc, r0
   3a670:	add	r1, pc, r1
   3a674:	add	r3, pc, r3
   3a678:	bl	14a78 <__assert_fail@plt>
   3a67c:	andeq	r0, r2, r2, ror r4
   3a680:	andeq	pc, r1, r2, asr #24
   3a684:	muleq	r2, r2, r5

0003a688 <flatcc_builder_create_vector@@Base>:
   3a688:	push	{r4, r5, r6, r7, fp, lr}
   3a68c:	add	fp, sp, #16
   3a690:	sub	sp, sp, #80	; 0x50
   3a694:	mov	r7, r0
   3a698:	ldr	r0, [fp, #12]
   3a69c:	cmp	r2, r0
   3a6a0:	bhi	3a7a0 <flatcc_builder_create_vector@@Base+0x118>
   3a6a4:	ldr	r0, [fp, #8]
   3a6a8:	mov	r4, r2
   3a6ac:	ldrh	r2, [r7, #128]	; 0x80
   3a6b0:	mov	r5, #4
   3a6b4:	cmp	r0, #4
   3a6b8:	movls	r0, r5
   3a6bc:	cmp	r2, r0
   3a6c0:	sub	r2, fp, #20
   3a6c4:	strhcc	r0, [r7, #128]	; 0x80
   3a6c8:	str	r4, [fp, #-20]	; 0xffffffec
   3a6cc:	sub	r0, r0, #1
   3a6d0:	ldr	ip, [r7, #136]	; 0x88
   3a6d4:	str	r2, [sp, #12]
   3a6d8:	mov	r2, #1
   3a6dc:	str	r5, [sp, #4]
   3a6e0:	str	r5, [sp, #16]
   3a6e4:	str	r2, [sp, #8]
   3a6e8:	mls	r6, r3, r4, ip
   3a6ec:	mul	r3, r3, r4
   3a6f0:	and	r0, r6, r0
   3a6f4:	cmp	r3, #0
   3a6f8:	beq	3a714 <flatcc_builder_create_vector@@Base+0x8c>
   3a6fc:	mov	r2, #2
   3a700:	add	r5, r3, #4
   3a704:	str	r1, [sp, #20]
   3a708:	str	r3, [sp, #24]
   3a70c:	str	r2, [sp, #8]
   3a710:	str	r5, [sp, #4]
   3a714:	cmp	r0, #0
   3a718:	beq	3a744 <flatcc_builder_create_vector@@Base+0xbc>
   3a71c:	add	r5, r5, r0
   3a720:	add	r1, sp, #4
   3a724:	str	r5, [sp, #4]
   3a728:	add	r1, r1, r2, lsl #3
   3a72c:	add	r2, r2, #1
   3a730:	ldr	r3, [pc, #168]	; 3a7e0 <flatcc_builder_create_vector@@Base+0x158>
   3a734:	ldr	r3, [pc, r3]
   3a738:	str	r3, [r1, #8]
   3a73c:	str	r0, [r1, #12]
   3a740:	str	r2, [sp, #8]
   3a744:	cmp	r5, #0
   3a748:	ble	3a7c0 <flatcc_builder_create_vector@@Base+0x138>
   3a74c:	ldr	r0, [r7, #36]	; 0x24
   3a750:	ldr	r6, [r7, #44]	; 0x2c
   3a754:	add	r1, sp, #4
   3a758:	sub	r4, ip, r5
   3a75c:	str	r5, [sp]
   3a760:	add	r1, r1, #8
   3a764:	mov	r3, r4
   3a768:	blx	r6
   3a76c:	cmp	r0, #0
   3a770:	streq	r4, [r7, #136]	; 0x88
   3a774:	moveq	r0, r4
   3a778:	subeq	sp, fp, #16
   3a77c:	popeq	{r4, r5, r6, r7, fp, pc}
   3a780:	ldr	r0, [pc, #116]	; 3a7fc <flatcc_builder_create_vector@@Base+0x174>
   3a784:	ldr	r1, [pc, #116]	; 3a800 <flatcc_builder_create_vector@@Base+0x178>
   3a788:	ldr	r3, [pc, #116]	; 3a804 <flatcc_builder_create_vector@@Base+0x17c>
   3a78c:	movw	r2, #651	; 0x28b
   3a790:	add	r0, pc, r0
   3a794:	add	r1, pc, r1
   3a798:	add	r3, pc, r3
   3a79c:	bl	14a78 <__assert_fail@plt>
   3a7a0:	ldr	r0, [pc, #60]	; 3a7e4 <flatcc_builder_create_vector@@Base+0x15c>
   3a7a4:	ldr	r1, [pc, #60]	; 3a7e8 <flatcc_builder_create_vector@@Base+0x160>
   3a7a8:	ldr	r3, [pc, #60]	; 3a7ec <flatcc_builder_create_vector@@Base+0x164>
   3a7ac:	movw	r2, #1365	; 0x555
   3a7b0:	add	r0, pc, r0
   3a7b4:	add	r1, pc, r1
   3a7b8:	add	r3, pc, r3
   3a7bc:	bl	14a78 <__assert_fail@plt>
   3a7c0:	ldr	r0, [pc, #40]	; 3a7f0 <flatcc_builder_create_vector@@Base+0x168>
   3a7c4:	ldr	r1, [pc, #40]	; 3a7f4 <flatcc_builder_create_vector@@Base+0x16c>
   3a7c8:	ldr	r3, [pc, #40]	; 3a7f8 <flatcc_builder_create_vector@@Base+0x170>
   3a7cc:	movw	r2, #647	; 0x287
   3a7d0:	add	r0, pc, r0
   3a7d4:	add	r1, pc, r1
   3a7d8:	add	r3, pc, r3
   3a7dc:	bl	14a78 <__assert_fail@plt>
   3a7e0:	andeq	r1, r3, r4, ror #18
   3a7e4:	muleq	r2, r8, r4
   3a7e8:	strdeq	pc, [r1], -lr
   3a7ec:	andeq	r0, r2, r3, lsr #9
   3a7f0:	ldrdeq	r6, [r1], -lr
   3a7f4:	ldrdeq	pc, [r1], -lr
   3a7f8:	andeq	r0, r2, r6, asr fp
   3a7fc:	andeq	r6, r1, lr, lsl lr
   3a800:	andeq	pc, r1, lr, lsl fp	; <UNPREDICTABLE>
   3a804:	muleq	r2, r6, fp

0003a808 <flatcc_builder_end_vector@@Base>:
   3a808:	push	{r4, r5, fp, lr}
   3a80c:	add	fp, sp, #8
   3a810:	sub	sp, sp, #8
   3a814:	mov	r4, r0
   3a818:	ldr	r0, [r0, #32]
   3a81c:	ldrh	r1, [r0, #14]
   3a820:	cmp	r1, #4
   3a824:	bne	3a8d8 <flatcc_builder_end_vector@@Base+0xd0>
   3a828:	ldr	r3, [r0, #16]
   3a82c:	ldr	r2, [r0, #20]
   3a830:	ldr	r0, [r0, #24]
   3a834:	ldr	r1, [r4, #16]
   3a838:	ldrh	r5, [r4, #130]	; 0x82
   3a83c:	str	r0, [sp, #4]
   3a840:	mov	r0, r4
   3a844:	str	r5, [sp]
   3a848:	bl	3a688 <flatcc_builder_create_vector@@Base>
   3a84c:	mov	r5, r0
   3a850:	cmp	r0, #0
   3a854:	beq	3a8cc <flatcc_builder_end_vector@@Base+0xc4>
   3a858:	ldr	r0, [r4, #16]
   3a85c:	ldr	r2, [r4, #20]
   3a860:	mov	r1, #0
   3a864:	bl	149d0 <memset@plt>
   3a868:	ldr	r0, [r4, #32]
   3a86c:	ldr	r1, [r4, #60]	; 0x3c
   3a870:	ldr	ip, [r4, #64]	; 0x40
   3a874:	ldr	r3, [r0, #8]
   3a878:	str	r3, [r4, #20]
   3a87c:	ldr	r3, [r0]
   3a880:	str	r3, [r4, #28]
   3a884:	add	r1, r1, r3
   3a888:	ldr	r2, [r0, #4]
   3a88c:	str	r1, [r4, #16]
   3a890:	sub	r1, ip, r3
   3a894:	cmp	r1, r2
   3a898:	movhi	r1, r2
   3a89c:	str	r1, [r4, #24]
   3a8a0:	ldrh	r1, [r4, #130]	; 0x82
   3a8a4:	ldrh	r2, [r4, #128]	; 0x80
   3a8a8:	cmp	r2, r1
   3a8ac:	strhcc	r1, [r4, #128]	; 0x80
   3a8b0:	ldrh	r1, [r0, #12]
   3a8b4:	sub	r0, r0, #36	; 0x24
   3a8b8:	str	r0, [r4, #32]
   3a8bc:	strh	r1, [r4, #130]	; 0x82
   3a8c0:	ldr	r0, [r4, #156]	; 0x9c
   3a8c4:	sub	r0, r0, #1
   3a8c8:	str	r0, [r4, #156]	; 0x9c
   3a8cc:	mov	r0, r5
   3a8d0:	sub	sp, fp, #8
   3a8d4:	pop	{r4, r5, fp, pc}
   3a8d8:	ldr	r0, [pc, #24]	; 3a8f8 <flatcc_builder_end_vector@@Base+0xf0>
   3a8dc:	ldr	r1, [pc, #24]	; 3a8fc <flatcc_builder_end_vector@@Base+0xf4>
   3a8e0:	ldr	r3, [pc, #24]	; 3a900 <flatcc_builder_end_vector@@Base+0xf8>
   3a8e4:	movw	r2, #1400	; 0x578
   3a8e8:	add	r0, pc, r0
   3a8ec:	add	r1, pc, r1
   3a8f0:	add	r3, pc, r3
   3a8f4:	bl	14a78 <__assert_fail@plt>
   3a8f8:	andeq	pc, r1, r4, lsl #26
   3a8fc:	andeq	pc, r1, r6, asr #19
   3a900:	andeq	r0, r2, r1, ror #7

0003a904 <flatcc_builder_vector_count@@Base>:
   3a904:	ldr	r0, [r0, #32]
   3a908:	ldr	r0, [r0, #20]
   3a90c:	bx	lr

0003a910 <flatcc_builder_vector_edit@@Base>:
   3a910:	ldr	r0, [r0, #16]
   3a914:	bx	lr

0003a918 <flatcc_builder_create_offset_vector_direct@@Base>:
   3a918:	mov	r3, #0
   3a91c:	b	3a920 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3a920:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3a924:	add	fp, sp, #24
   3a928:	sub	sp, sp, #80	; 0x50
   3a92c:	mov	r6, #0
   3a930:	cmn	r2, #-1073741823	; 0xc0000001
   3a934:	bhi	3aa70 <flatcc_builder_create_offset_vector_direct@@Base+0x158>
   3a938:	mov	r8, r0
   3a93c:	ldrh	r0, [r0, #128]	; 0x80
   3a940:	sub	r7, fp, #28
   3a944:	mov	r5, #4
   3a948:	mov	r4, #1
   3a94c:	cmp	r0, #3
   3a950:	movls	r0, #4
   3a954:	strhls	r0, [r8, #128]	; 0x80
   3a958:	str	r2, [fp, #-28]	; 0xffffffe4
   3a95c:	ldr	ip, [r8, #136]	; 0x88
   3a960:	str	r7, [sp, #12]
   3a964:	mov	r7, #0
   3a968:	str	r5, [sp, #4]
   3a96c:	str	r5, [sp, #16]
   3a970:	str	r4, [sp, #8]
   3a974:	cmp	r7, r2, lsl #2
   3a978:	and	r6, ip, #3
   3a97c:	beq	3a99c <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   3a980:	lsl	r7, r2, #2
   3a984:	mov	r4, #2
   3a988:	str	r1, [sp, #20]
   3a98c:	add	r5, r7, #4
   3a990:	str	r7, [sp, #24]
   3a994:	str	r4, [sp, #8]
   3a998:	str	r5, [sp, #4]
   3a99c:	cmp	r6, #0
   3a9a0:	beq	3a9cc <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   3a9a4:	add	r5, r5, r6
   3a9a8:	add	r7, sp, #4
   3a9ac:	str	r5, [sp, #4]
   3a9b0:	add	r7, r7, r4, lsl #3
   3a9b4:	add	r4, r4, #1
   3a9b8:	ldr	r0, [pc, #348]	; 3ab1c <flatcc_builder_create_offset_vector_direct@@Base+0x204>
   3a9bc:	ldr	r0, [pc, r0]
   3a9c0:	str	r0, [r7, #8]
   3a9c4:	str	r6, [r7, #12]
   3a9c8:	str	r4, [sp, #8]
   3a9cc:	cmp	r2, #0
   3a9d0:	beq	3aa38 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
   3a9d4:	mvn	r0, #3
   3a9d8:	mov	r6, #0
   3a9dc:	sub	r0, r0, ip
   3a9e0:	add	r0, r0, r5
   3a9e4:	ldr	r7, [r1, r6, lsl #2]
   3a9e8:	cmp	r7, #0
   3a9ec:	beq	3aa10 <flatcc_builder_create_offset_vector_direct@@Base+0xf8>
   3a9f0:	add	r7, r0, r7
   3a9f4:	cmp	r3, #0
   3a9f8:	str	r7, [r1, r6, lsl #2]
   3a9fc:	beq	3aa24 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   3aa00:	ldrb	r7, [r3, r6]
   3aa04:	cmp	r7, #0
   3aa08:	bne	3aa24 <flatcc_builder_create_offset_vector_direct@@Base+0x10c>
   3aa0c:	b	3aa7c <flatcc_builder_create_offset_vector_direct@@Base+0x164>
   3aa10:	cmp	r3, #0
   3aa14:	beq	3aabc <flatcc_builder_create_offset_vector_direct@@Base+0x1a4>
   3aa18:	ldrb	r7, [r3, r6]
   3aa1c:	cmp	r7, #0
   3aa20:	bne	3aa9c <flatcc_builder_create_offset_vector_direct@@Base+0x184>
   3aa24:	add	r6, r6, #1
   3aa28:	sub	r0, r0, #4
   3aa2c:	cmp	r6, r2
   3aa30:	bcc	3a9e4 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   3aa34:	ldr	ip, [r8, #136]	; 0x88
   3aa38:	cmp	r5, #0
   3aa3c:	ble	3aadc <flatcc_builder_create_offset_vector_direct@@Base+0x1c4>
   3aa40:	ldr	r0, [r8, #36]	; 0x24
   3aa44:	ldr	r7, [r8, #44]	; 0x2c
   3aa48:	add	r1, sp, #4
   3aa4c:	sub	r6, ip, r5
   3aa50:	mov	r2, r4
   3aa54:	str	r5, [sp]
   3aa58:	add	r1, r1, #8
   3aa5c:	mov	r3, r6
   3aa60:	blx	r7
   3aa64:	cmp	r0, #0
   3aa68:	bne	3aafc <flatcc_builder_create_offset_vector_direct@@Base+0x1e4>
   3aa6c:	str	r6, [r8, #136]	; 0x88
   3aa70:	mov	r0, r6
   3aa74:	sub	sp, fp, #24
   3aa78:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3aa7c:	ldr	r0, [pc, #156]	; 3ab20 <flatcc_builder_create_offset_vector_direct@@Base+0x208>
   3aa80:	ldr	r1, [pc, #156]	; 3ab24 <flatcc_builder_create_offset_vector_direct@@Base+0x20c>
   3aa84:	ldr	r3, [pc, #156]	; 3ab28 <flatcc_builder_create_offset_vector_direct@@Base+0x210>
   3aa88:	movw	r2, #1457	; 0x5b1
   3aa8c:	add	r0, pc, r0
   3aa90:	add	r1, pc, r1
   3aa94:	add	r3, pc, r3
   3aa98:	bl	14a78 <__assert_fail@plt>
   3aa9c:	ldr	r0, [pc, #136]	; 3ab2c <flatcc_builder_create_offset_vector_direct@@Base+0x214>
   3aaa0:	ldr	r1, [pc, #136]	; 3ab30 <flatcc_builder_create_offset_vector_direct@@Base+0x218>
   3aaa4:	ldr	r3, [pc, #136]	; 3ab34 <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
   3aaa8:	movw	r2, #1461	; 0x5b5
   3aaac:	add	r0, pc, r0
   3aab0:	add	r1, pc, r1
   3aab4:	add	r3, pc, r3
   3aab8:	bl	14a78 <__assert_fail@plt>
   3aabc:	ldr	r0, [pc, #116]	; 3ab38 <flatcc_builder_create_offset_vector_direct@@Base+0x220>
   3aac0:	ldr	r1, [pc, #116]	; 3ab3c <flatcc_builder_create_offset_vector_direct@@Base+0x224>
   3aac4:	ldr	r3, [pc, #116]	; 3ab40 <flatcc_builder_create_offset_vector_direct@@Base+0x228>
   3aac8:	movw	r2, #1463	; 0x5b7
   3aacc:	add	r0, pc, r0
   3aad0:	add	r1, pc, r1
   3aad4:	add	r3, pc, r3
   3aad8:	bl	14a78 <__assert_fail@plt>
   3aadc:	ldr	r0, [pc, #96]	; 3ab44 <flatcc_builder_create_offset_vector_direct@@Base+0x22c>
   3aae0:	ldr	r1, [pc, #96]	; 3ab48 <flatcc_builder_create_offset_vector_direct@@Base+0x230>
   3aae4:	ldr	r3, [pc, #96]	; 3ab4c <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   3aae8:	movw	r2, #647	; 0x287
   3aaec:	add	r0, pc, r0
   3aaf0:	add	r1, pc, r1
   3aaf4:	add	r3, pc, r3
   3aaf8:	bl	14a78 <__assert_fail@plt>
   3aafc:	ldr	r0, [pc, #76]	; 3ab50 <flatcc_builder_create_offset_vector_direct@@Base+0x238>
   3ab00:	ldr	r1, [pc, #76]	; 3ab54 <flatcc_builder_create_offset_vector_direct@@Base+0x23c>
   3ab04:	ldr	r3, [pc, #76]	; 3ab58 <flatcc_builder_create_offset_vector_direct@@Base+0x240>
   3ab08:	movw	r2, #651	; 0x28b
   3ab0c:	add	r0, pc, r0
   3ab10:	add	r1, pc, r1
   3ab14:	add	r3, pc, r3
   3ab18:	bl	14a78 <__assert_fail@plt>
   3ab1c:	ldrdeq	r1, [r3], -ip
   3ab20:	ldrdeq	r0, [r2], -r7
   3ab24:	andeq	pc, r1, r2, lsr #16
   3ab28:	ldrdeq	r0, [r2], -sp
   3ab2c:	andeq	r0, r2, r8, asr #20
   3ab30:	andeq	pc, r1, r2, lsl #16
   3ab34:			; <UNDEFINED> instruction: 0x000209bd
   3ab38:	andeq	r6, r1, r2, ror #21
   3ab3c:	andeq	pc, r1, r2, ror #15
   3ab40:	muleq	r2, sp, r9
   3ab44:	andeq	r6, r1, r2, asr #21
   3ab48:	andeq	pc, r1, r2, asr #15
   3ab4c:	andeq	r0, r2, sl, lsr r8
   3ab50:	andeq	r6, r1, r2, lsr #21
   3ab54:	andeq	pc, r1, r2, lsr #15
   3ab58:	andeq	r0, r2, sl, lsl r8

0003ab5c <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3ab5c:	push	{r4, r5, fp, lr}
   3ab60:	add	fp, sp, #8
   3ab64:	mov	r4, r0
   3ab68:	ldr	r0, [r0, #32]
   3ab6c:	mov	r3, r1
   3ab70:	ldrh	r1, [r0, #14]
   3ab74:	cmp	r1, #5
   3ab78:	bne	3ac14 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   3ab7c:	ldr	r2, [r0, #20]
   3ab80:	ldr	r1, [r4, #16]
   3ab84:	mov	r0, r4
   3ab88:	bl	3a920 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3ab8c:	mov	r5, r0
   3ab90:	cmp	r0, #0
   3ab94:	beq	3ac0c <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   3ab98:	ldr	r0, [r4, #16]
   3ab9c:	ldr	r2, [r4, #20]
   3aba0:	mov	r1, #0
   3aba4:	bl	149d0 <memset@plt>
   3aba8:	ldr	r0, [r4, #32]
   3abac:	ldr	r1, [r4, #60]	; 0x3c
   3abb0:	ldr	ip, [r4, #64]	; 0x40
   3abb4:	ldr	r3, [r0, #8]
   3abb8:	str	r3, [r4, #20]
   3abbc:	ldr	r3, [r0]
   3abc0:	str	r3, [r4, #28]
   3abc4:	add	r1, r1, r3
   3abc8:	ldr	r2, [r0, #4]
   3abcc:	str	r1, [r4, #16]
   3abd0:	sub	r1, ip, r3
   3abd4:	cmp	r1, r2
   3abd8:	movhi	r1, r2
   3abdc:	str	r1, [r4, #24]
   3abe0:	ldrh	r1, [r4, #130]	; 0x82
   3abe4:	ldrh	r2, [r4, #128]	; 0x80
   3abe8:	cmp	r2, r1
   3abec:	strhcc	r1, [r4, #128]	; 0x80
   3abf0:	ldrh	r1, [r0, #12]
   3abf4:	sub	r0, r0, #36	; 0x24
   3abf8:	str	r0, [r4, #32]
   3abfc:	strh	r1, [r4, #130]	; 0x82
   3ac00:	ldr	r0, [r4, #156]	; 0x9c
   3ac04:	sub	r0, r0, #1
   3ac08:	str	r0, [r4, #156]	; 0x9c
   3ac0c:	mov	r0, r5
   3ac10:	pop	{r4, r5, fp, pc}
   3ac14:	ldr	r0, [pc, #24]	; 3ac34 <flatcc_builder_end_offset_vector_for_unions@@Base+0xd8>
   3ac18:	ldr	r1, [pc, #24]	; 3ac38 <flatcc_builder_end_offset_vector_for_unions@@Base+0xdc>
   3ac1c:	ldr	r3, [pc, #24]	; 3ac3c <flatcc_builder_end_offset_vector_for_unions@@Base+0xe0>
   3ac20:	movw	r2, #1493	; 0x5d5
   3ac24:	add	r0, pc, r0
   3ac28:	add	r1, pc, r1
   3ac2c:	add	r3, pc, r3
   3ac30:	bl	14a78 <__assert_fail@plt>
   3ac34:	andeq	pc, r1, r1, asr #21
   3ac38:	andeq	pc, r1, sl, lsl #13
   3ac3c:	andeq	r0, r2, r2, lsr r1

0003ac40 <flatcc_builder_offset_vector_edit@@Base>:
   3ac40:	ldr	r0, [r0, #16]
   3ac44:	bx	lr

0003ac48 <flatcc_builder_offset_vector_count@@Base>:
   3ac48:	ldr	r0, [r0, #32]
   3ac4c:	ldr	r0, [r0, #20]
   3ac50:	bx	lr

0003ac54 <flatcc_builder_table_add_union@@Base>:
   3ac54:	push	{r4, r5, r6, r7, fp, lr}
   3ac58:	add	fp, sp, #16
   3ac5c:	mov	r5, r0
   3ac60:	ldr	r0, [r0, #32]
   3ac64:	ldrh	r0, [r0, #14]
   3ac68:	cmp	r0, #3
   3ac6c:	bne	3acf4 <flatcc_builder_table_add_union@@Base+0xa0>
   3ac70:	mov	r7, r3
   3ac74:	mov	r4, r2
   3ac78:	mov	r6, r1
   3ac7c:	cmp	r3, #0
   3ac80:	beq	3ac90 <flatcc_builder_table_add_union@@Base+0x3c>
   3ac84:	uxtb	r0, r4
   3ac88:	cmp	r0, #0
   3ac8c:	beq	3ad14 <flatcc_builder_table_add_union@@Base+0xc0>
   3ac90:	cmp	r7, #0
   3ac94:	beq	3acb0 <flatcc_builder_table_add_union@@Base+0x5c>
   3ac98:	mov	r0, r5
   3ac9c:	mov	r1, r6
   3aca0:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   3aca4:	cmp	r0, #0
   3aca8:	beq	3ad34 <flatcc_builder_table_add_union@@Base+0xe0>
   3acac:	str	r7, [r0]
   3acb0:	sub	r1, r6, #1
   3acb4:	mov	r0, r5
   3acb8:	mov	r2, #1
   3acbc:	mov	r3, #1
   3acc0:	bl	3af38 <flatcc_builder_table_add@@Base>
   3acc4:	cmp	r0, #0
   3acc8:	strbne	r4, [r0]
   3accc:	movne	r0, #0
   3acd0:	popne	{r4, r5, r6, r7, fp, pc}
   3acd4:	ldr	r0, [pc, #156]	; 3ad78 <flatcc_builder_table_add_union@@Base+0x124>
   3acd8:	ldr	r1, [pc, #156]	; 3ad7c <flatcc_builder_table_add_union@@Base+0x128>
   3acdc:	ldr	r3, [pc, #156]	; 3ad80 <flatcc_builder_table_add_union@@Base+0x12c>
   3ace0:	movw	r2, #1526	; 0x5f6
   3ace4:	add	r0, pc, r0
   3ace8:	add	r1, pc, r1
   3acec:	add	r3, pc, r3
   3acf0:	bl	14a78 <__assert_fail@plt>
   3acf4:	ldr	r0, [pc, #88]	; 3ad54 <flatcc_builder_table_add_union@@Base+0x100>
   3acf8:	ldr	r1, [pc, #88]	; 3ad58 <flatcc_builder_table_add_union@@Base+0x104>
   3acfc:	ldr	r3, [pc, #88]	; 3ad5c <flatcc_builder_table_add_union@@Base+0x108>
   3ad00:	movw	r2, #1518	; 0x5ee
   3ad04:	add	r0, pc, r0
   3ad08:	add	r1, pc, r1
   3ad0c:	add	r3, pc, r3
   3ad10:	bl	14a78 <__assert_fail@plt>
   3ad14:	ldr	r0, [pc, #68]	; 3ad60 <flatcc_builder_table_add_union@@Base+0x10c>
   3ad18:	ldr	r1, [pc, #68]	; 3ad64 <flatcc_builder_table_add_union@@Base+0x110>
   3ad1c:	ldr	r3, [pc, #68]	; 3ad68 <flatcc_builder_table_add_union@@Base+0x114>
   3ad20:	movw	r2, #1519	; 0x5ef
   3ad24:	add	r0, pc, r0
   3ad28:	add	r1, pc, r1
   3ad2c:	add	r3, pc, r3
   3ad30:	bl	14a78 <__assert_fail@plt>
   3ad34:	ldr	r0, [pc, #48]	; 3ad6c <flatcc_builder_table_add_union@@Base+0x118>
   3ad38:	ldr	r1, [pc, #48]	; 3ad70 <flatcc_builder_table_add_union@@Base+0x11c>
   3ad3c:	ldr	r3, [pc, #48]	; 3ad74 <flatcc_builder_table_add_union@@Base+0x120>
   3ad40:	movw	r2, #1522	; 0x5f2
   3ad44:	add	r0, pc, r0
   3ad48:	add	r1, pc, r1
   3ad4c:	add	r3, pc, r3
   3ad50:	bl	14a78 <__assert_fail@plt>
   3ad54:	ldrdeq	pc, [r1], -sl
   3ad58:	andeq	pc, r1, sl, lsr #11
   3ad5c:	andeq	r0, r2, r4, asr #1
   3ad60:	andeq	r0, r2, r4, lsl #2
   3ad64:	andeq	pc, r1, sl, lsl #11
   3ad68:	andeq	r0, r2, r4, lsr #1
   3ad6c:	andeq	r0, r2, r6, lsl #2
   3ad70:	andeq	pc, r1, sl, ror #10
   3ad74:	andeq	r0, r2, r4, lsl #1
   3ad78:	andeq	r0, r2, r0, ror r1
   3ad7c:	andeq	pc, r1, sl, asr #11
   3ad80:	andeq	r0, r2, r4, ror #1

0003ad84 <flatcc_builder_table_add_offset@@Base>:
   3ad84:	push	{r4, r5, r6, r7, fp, lr}
   3ad88:	add	fp, sp, #16
   3ad8c:	sub	sp, sp, #8
   3ad90:	mov	r4, r0
   3ad94:	ldr	r0, [r0, #32]
   3ad98:	ldrh	r0, [r0, #14]
   3ad9c:	cmp	r0, #3
   3ada0:	bne	3aeb4 <flatcc_builder_table_add_offset@@Base+0x130>
   3ada4:	movw	r0, #32765	; 0x7ffd
   3ada8:	mov	r5, r1
   3adac:	cmp	r1, r0
   3adb0:	bcs	3aed4 <flatcc_builder_table_add_offset@@Base+0x150>
   3adb4:	ldr	r0, [r4, #4]
   3adb8:	add	r1, r0, r5, lsl #1
   3adbc:	ldrh	r1, [r1]
   3adc0:	cmp	r1, #0
   3adc4:	bne	3aef4 <flatcc_builder_table_add_offset@@Base+0x170>
   3adc8:	ldr	r2, [r4, #20]
   3adcc:	ldr	r1, [r4, #12]
   3add0:	ldr	r3, [r4, #24]
   3add4:	add	r2, r2, #3
   3add8:	eor	r1, r1, r5
   3addc:	bic	r6, r2, #3
   3ade0:	movw	r2, #31153	; 0x79b1
   3ade4:	movt	r2, #40503	; 0x9e37
   3ade8:	add	r7, r6, #4
   3adec:	mul	r1, r1, r2
   3adf0:	cmp	r7, r3
   3adf4:	str	r7, [r4, #20]
   3adf8:	eor	r1, r1, #4
   3adfc:	mul	r1, r1, r2
   3ae00:	str	r1, [r4, #12]
   3ae04:	bls	3ae78 <flatcc_builder_table_add_offset@@Base+0xf4>
   3ae08:	ldr	r1, [r4, #28]
   3ae0c:	ldr	r0, [r4, #40]	; 0x28
   3ae10:	ldr	ip, [r4, #48]	; 0x30
   3ae14:	mov	r2, #1
   3ae18:	mov	r3, #1
   3ae1c:	str	r2, [sp]
   3ae20:	add	r2, r1, r7
   3ae24:	add	r1, r4, #60	; 0x3c
   3ae28:	blx	ip
   3ae2c:	mov	r1, r0
   3ae30:	mov	r0, #0
   3ae34:	cmp	r1, #0
   3ae38:	beq	3ae44 <flatcc_builder_table_add_offset@@Base+0xc0>
   3ae3c:	sub	sp, fp, #16
   3ae40:	pop	{r4, r5, r6, r7, fp, pc}
   3ae44:	ldr	r0, [r4, #28]
   3ae48:	ldr	r2, [r4, #60]	; 0x3c
   3ae4c:	ldr	r3, [r4, #64]	; 0x40
   3ae50:	ldr	r1, [r4, #32]
   3ae54:	add	r2, r2, r0
   3ae58:	sub	r0, r3, r0
   3ae5c:	str	r2, [r4, #16]
   3ae60:	movw	r2, #65532	; 0xfffc
   3ae64:	cmp	r0, r2
   3ae68:	movcs	r0, r2
   3ae6c:	str	r0, [r4, #24]
   3ae70:	str	r2, [r1, #4]
   3ae74:	ldr	r0, [r4, #4]
   3ae78:	uxth	r1, r5
   3ae7c:	add	r0, r0, r1, lsl #1
   3ae80:	strh	r7, [r0]
   3ae84:	ldrh	r0, [r4, #8]
   3ae88:	cmp	r0, r1
   3ae8c:	addls	r0, r5, #1
   3ae90:	strhls	r0, [r4, #8]
   3ae94:	ldr	r0, [r4]
   3ae98:	add	r1, r0, #2
   3ae9c:	str	r1, [r4]
   3aea0:	strh	r6, [r0]
   3aea4:	ldr	r0, [r4, #16]
   3aea8:	add	r0, r0, r6
   3aeac:	sub	sp, fp, #16
   3aeb0:	pop	{r4, r5, r6, r7, fp, pc}
   3aeb4:	ldr	r0, [pc, #88]	; 3af14 <flatcc_builder_table_add_offset@@Base+0x190>
   3aeb8:	ldr	r1, [pc, #88]	; 3af18 <flatcc_builder_table_add_offset@@Base+0x194>
   3aebc:	ldr	r3, [pc, #88]	; 3af1c <flatcc_builder_table_add_offset@@Base+0x198>
   3aec0:	movw	r2, #1811	; 0x713
   3aec4:	add	r0, pc, r0
   3aec8:	add	r1, pc, r1
   3aecc:	add	r3, pc, r3
   3aed0:	bl	14a78 <__assert_fail@plt>
   3aed4:	ldr	r0, [pc, #68]	; 3af20 <flatcc_builder_table_add_offset@@Base+0x19c>
   3aed8:	ldr	r1, [pc, #68]	; 3af24 <flatcc_builder_table_add_offset@@Base+0x1a0>
   3aedc:	ldr	r3, [pc, #68]	; 3af28 <flatcc_builder_table_add_offset@@Base+0x1a4>
   3aee0:	movw	r2, #1812	; 0x714
   3aee4:	add	r0, pc, r0
   3aee8:	add	r1, pc, r1
   3aeec:	add	r3, pc, r3
   3aef0:	bl	14a78 <__assert_fail@plt>
   3aef4:	ldr	r0, [pc, #48]	; 3af2c <flatcc_builder_table_add_offset@@Base+0x1a8>
   3aef8:	ldr	r1, [pc, #48]	; 3af30 <flatcc_builder_table_add_offset@@Base+0x1ac>
   3aefc:	ldr	r3, [pc, #48]	; 3af34 <flatcc_builder_table_add_offset@@Base+0x1b0>
   3af00:	movw	r2, #1819	; 0x71b
   3af04:	add	r0, pc, r0
   3af08:	add	r1, pc, r1
   3af0c:	add	r3, pc, r3
   3af10:	bl	14a78 <__assert_fail@plt>
   3af14:	andeq	pc, r1, sl, lsl ip	; <UNPREDICTABLE>
   3af18:	andeq	pc, r1, sl, ror #7
   3af1c:	andeq	r0, r2, r6, lsl #6
   3af20:	andeq	r0, r2, lr, ror #4
   3af24:	andeq	pc, r1, sl, asr #7
   3af28:	andeq	r0, r2, r6, ror #5
   3af2c:	andeq	r6, r1, sl, lsr #13
   3af30:	andeq	pc, r1, sl, lsr #7
   3af34:	andeq	r0, r2, r6, asr #5

0003af38 <flatcc_builder_table_add@@Base>:
   3af38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3af3c:	add	fp, sp, #24
   3af40:	sub	sp, sp, #8
   3af44:	mov	r4, r0
   3af48:	ldr	r0, [r0, #32]
   3af4c:	ldrh	r0, [r0, #14]
   3af50:	cmp	r0, #3
   3af54:	bne	3b074 <flatcc_builder_table_add@@Base+0x13c>
   3af58:	movw	r0, #32765	; 0x7ffd
   3af5c:	mov	r8, r1
   3af60:	cmp	r1, r0
   3af64:	bcs	3b094 <flatcc_builder_table_add@@Base+0x15c>
   3af68:	ldrh	r0, [r4, #130]	; 0x82
   3af6c:	cmp	r0, r3
   3af70:	strhcc	r3, [r4, #130]	; 0x82
   3af74:	ldr	r0, [r4, #4]
   3af78:	add	r1, r0, r8, lsl #1
   3af7c:	ldrh	r1, [r1]
   3af80:	cmp	r1, #0
   3af84:	bne	3b0b4 <flatcc_builder_table_add@@Base+0x17c>
   3af88:	ldr	r1, [r4, #12]
   3af8c:	movw	r7, #31153	; 0x79b1
   3af90:	ldr	r6, [r4, #20]
   3af94:	ldr	r5, [r4, #24]
   3af98:	movt	r7, #40503	; 0x9e37
   3af9c:	eor	r1, r1, r8
   3afa0:	mul	r1, r1, r7
   3afa4:	eor	r1, r1, r2
   3afa8:	mul	r1, r1, r7
   3afac:	str	r1, [r4, #12]
   3afb0:	add	r1, r3, r6
   3afb4:	rsb	r3, r3, #0
   3afb8:	sub	r1, r1, #1
   3afbc:	and	r6, r1, r3
   3afc0:	add	r1, r6, r2
   3afc4:	cmp	r1, r5
   3afc8:	str	r1, [r4, #20]
   3afcc:	bcc	3b044 <flatcc_builder_table_add@@Base+0x10c>
   3afd0:	ldr	r2, [r4, #28]
   3afd4:	ldr	r0, [r4, #40]	; 0x28
   3afd8:	ldr	r7, [r4, #48]	; 0x30
   3afdc:	mov	r3, #1
   3afe0:	str	r3, [sp]
   3afe4:	mov	r3, #1
   3afe8:	add	r1, r1, r2
   3afec:	add	r2, r1, #1
   3aff0:	add	r1, r4, #60	; 0x3c
   3aff4:	blx	r7
   3aff8:	mov	r1, r0
   3affc:	mov	r0, #0
   3b000:	cmp	r1, #0
   3b004:	beq	3b010 <flatcc_builder_table_add@@Base+0xd8>
   3b008:	sub	sp, fp, #24
   3b00c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b010:	ldr	r0, [r4, #28]
   3b014:	ldr	r2, [r4, #60]	; 0x3c
   3b018:	ldr	r3, [r4, #64]	; 0x40
   3b01c:	ldr	r1, [r4, #32]
   3b020:	add	r2, r2, r0
   3b024:	sub	r0, r3, r0
   3b028:	str	r2, [r4, #16]
   3b02c:	movw	r2, #65532	; 0xfffc
   3b030:	cmp	r0, r2
   3b034:	movcs	r0, r2
   3b038:	str	r0, [r4, #24]
   3b03c:	str	r2, [r1, #4]
   3b040:	ldr	r0, [r4, #4]
   3b044:	uxth	r1, r8
   3b048:	add	r2, r6, #4
   3b04c:	add	r0, r0, r1, lsl #1
   3b050:	strh	r2, [r0]
   3b054:	ldrh	r0, [r4, #8]
   3b058:	cmp	r0, r1
   3b05c:	addls	r0, r8, #1
   3b060:	strhls	r0, [r4, #8]
   3b064:	ldr	r0, [r4, #16]
   3b068:	add	r0, r0, r6
   3b06c:	sub	sp, fp, #24
   3b070:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3b074:	ldr	r0, [pc, #88]	; 3b0d4 <flatcc_builder_table_add@@Base+0x19c>
   3b078:	ldr	r1, [pc, #88]	; 3b0d8 <flatcc_builder_table_add@@Base+0x1a0>
   3b07c:	ldr	r3, [pc, #88]	; 3b0dc <flatcc_builder_table_add@@Base+0x1a4>
   3b080:	movw	r2, #1773	; 0x6ed
   3b084:	add	r0, pc, r0
   3b088:	add	r1, pc, r1
   3b08c:	add	r3, pc, r3
   3b090:	bl	14a78 <__assert_fail@plt>
   3b094:	ldr	r0, [pc, #68]	; 3b0e0 <flatcc_builder_table_add@@Base+0x1a8>
   3b098:	ldr	r1, [pc, #68]	; 3b0e4 <flatcc_builder_table_add@@Base+0x1ac>
   3b09c:	ldr	r3, [pc, #68]	; 3b0e8 <flatcc_builder_table_add@@Base+0x1b0>
   3b0a0:	movw	r2, #1774	; 0x6ee
   3b0a4:	add	r0, pc, r0
   3b0a8:	add	r1, pc, r1
   3b0ac:	add	r3, pc, r3
   3b0b0:	bl	14a78 <__assert_fail@plt>
   3b0b4:	ldr	r0, [pc, #48]	; 3b0ec <flatcc_builder_table_add@@Base+0x1b4>
   3b0b8:	ldr	r1, [pc, #48]	; 3b0f0 <flatcc_builder_table_add@@Base+0x1b8>
   3b0bc:	ldr	r3, [pc, #48]	; 3b0f4 <flatcc_builder_table_add@@Base+0x1bc>
   3b0c0:	movw	r2, #1784	; 0x6f8
   3b0c4:	add	r0, pc, r0
   3b0c8:	add	r1, pc, r1
   3b0cc:	add	r3, pc, r3
   3b0d0:	bl	14a78 <__assert_fail@plt>
   3b0d4:	andeq	pc, r1, sl, asr sl	; <UNPREDICTABLE>
   3b0d8:	andeq	pc, r1, sl, lsr #4
   3b0dc:	andeq	r0, r2, ip, ror r0
   3b0e0:	andeq	r0, r2, lr, lsr #1
   3b0e4:	andeq	pc, r1, sl, lsl #4
   3b0e8:	andeq	r0, r2, ip, asr r0
   3b0ec:	andeq	r6, r1, sl, ror #9
   3b0f0:	andeq	pc, r1, sl, ror #3
   3b0f4:	andeq	r0, r2, ip, lsr r0

0003b0f8 <flatcc_builder_table_add_union_vector@@Base>:
   3b0f8:	push	{r4, r5, r6, r7, fp, lr}
   3b0fc:	add	fp, sp, #16
   3b100:	mov	r6, r0
   3b104:	ldr	r0, [r0, #32]
   3b108:	ldrh	r0, [r0, #14]
   3b10c:	cmp	r0, #3
   3b110:	bne	3b178 <flatcc_builder_table_add_union_vector@@Base+0x80>
   3b114:	clz	r0, r3
   3b118:	mov	r5, r1
   3b11c:	clz	r1, r2
   3b120:	mov	r4, r3
   3b124:	mov	r7, r2
   3b128:	lsr	r0, r0, #5
   3b12c:	lsr	r1, r1, #5
   3b130:	cmp	r1, r0
   3b134:	bne	3b198 <flatcc_builder_table_add_union_vector@@Base+0xa0>
   3b138:	cmp	r7, #0
   3b13c:	beq	3b170 <flatcc_builder_table_add_union_vector@@Base+0x78>
   3b140:	sub	r1, r5, #1
   3b144:	mov	r0, r6
   3b148:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   3b14c:	cmp	r0, #0
   3b150:	beq	3b1b8 <flatcc_builder_table_add_union_vector@@Base+0xc0>
   3b154:	str	r7, [r0]
   3b158:	mov	r0, r6
   3b15c:	mov	r1, r5
   3b160:	bl	3ad84 <flatcc_builder_table_add_offset@@Base>
   3b164:	cmp	r0, #0
   3b168:	beq	3b1d8 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   3b16c:	str	r4, [r0]
   3b170:	mov	r0, #0
   3b174:	pop	{r4, r5, r6, r7, fp, pc}
   3b178:	ldr	r0, [pc, #120]	; 3b1f8 <flatcc_builder_table_add_union_vector@@Base+0x100>
   3b17c:	ldr	r1, [pc, #120]	; 3b1fc <flatcc_builder_table_add_union_vector@@Base+0x104>
   3b180:	ldr	r3, [pc, #120]	; 3b200 <flatcc_builder_table_add_union_vector@@Base+0x108>
   3b184:	mov	r2, #1536	; 0x600
   3b188:	add	r0, pc, r0
   3b18c:	add	r1, pc, r1
   3b190:	add	r3, pc, r3
   3b194:	bl	14a78 <__assert_fail@plt>
   3b198:	ldr	r0, [pc, #100]	; 3b204 <flatcc_builder_table_add_union_vector@@Base+0x10c>
   3b19c:	ldr	r1, [pc, #100]	; 3b208 <flatcc_builder_table_add_union_vector@@Base+0x110>
   3b1a0:	ldr	r3, [pc, #100]	; 3b20c <flatcc_builder_table_add_union_vector@@Base+0x114>
   3b1a4:	movw	r2, #1537	; 0x601
   3b1a8:	add	r0, pc, r0
   3b1ac:	add	r1, pc, r1
   3b1b0:	add	r3, pc, r3
   3b1b4:	bl	14a78 <__assert_fail@plt>
   3b1b8:	ldr	r0, [pc, #80]	; 3b210 <flatcc_builder_table_add_union_vector@@Base+0x118>
   3b1bc:	ldr	r1, [pc, #80]	; 3b214 <flatcc_builder_table_add_union_vector@@Base+0x11c>
   3b1c0:	ldr	r3, [pc, #80]	; 3b218 <flatcc_builder_table_add_union_vector@@Base+0x120>
   3b1c4:	movw	r2, #1540	; 0x604
   3b1c8:	add	r0, pc, r0
   3b1cc:	add	r1, pc, r1
   3b1d0:	add	r3, pc, r3
   3b1d4:	bl	14a78 <__assert_fail@plt>
   3b1d8:	ldr	r0, [pc, #60]	; 3b21c <flatcc_builder_table_add_union_vector@@Base+0x124>
   3b1dc:	ldr	r1, [pc, #60]	; 3b220 <flatcc_builder_table_add_union_vector@@Base+0x128>
   3b1e0:	ldr	r3, [pc, #60]	; 3b224 <flatcc_builder_table_add_union_vector@@Base+0x12c>
   3b1e4:	movw	r2, #1544	; 0x608
   3b1e8:	add	r0, pc, r0
   3b1ec:	add	r1, pc, r1
   3b1f0:	add	r3, pc, r3
   3b1f4:	bl	14a78 <__assert_fail@plt>
   3b1f8:	andeq	pc, r1, r6, asr r9	; <UNPREDICTABLE>
   3b1fc:	andeq	pc, r1, r6, lsr #2
   3b200:	ldrdeq	pc, [r1], -r0
   3b204:	andeq	pc, r1, fp, lsl sp	; <UNPREDICTABLE>
   3b208:	andeq	pc, r1, r6, lsl #2
   3b20c:			; <UNDEFINED> instruction: 0x0001fcb0
   3b210:	andeq	pc, r1, r2, lsl #25
   3b214:	andeq	pc, r1, r6, ror #1
   3b218:	muleq	r1, r0, ip
   3b21c:	andeq	pc, r1, r2, ror #24
   3b220:	andeq	pc, r1, r6, asr #1
   3b224:	andeq	pc, r1, r0, ror ip	; <UNPREDICTABLE>

0003b228 <flatcc_builder_create_union_vector@@Base>:
   3b228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b22c:	add	fp, sp, #28
   3b230:	sub	sp, sp, #12
   3b234:	mov	r7, #0
   3b238:	mov	r4, r1
   3b23c:	mov	r5, r0
   3b240:	mov	sl, r3
   3b244:	mov	r9, r2
   3b248:	mov	r6, #4
   3b24c:	str	r7, [r0]
   3b250:	str	r7, [r0, #4]
   3b254:	mov	r0, r1
   3b258:	mov	r1, #4
   3b25c:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   3b260:	cmp	r0, #0
   3b264:	beq	3b270 <flatcc_builder_create_union_vector@@Base+0x48>
   3b268:	sub	sp, fp, #28
   3b26c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b270:	ldr	r0, [r4, #32]
   3b274:	mov	r1, #5
   3b278:	str	r6, [r0, #16]
   3b27c:	ldr	r0, [r4, #32]
   3b280:	str	r7, [r0, #20]
   3b284:	ldr	r0, [r4, #32]
   3b288:	strh	r1, [r0, #14]
   3b28c:	ldr	r1, [r4, #28]
   3b290:	ldr	r2, [r4, #60]	; 0x3c
   3b294:	ldr	r3, [r4, #64]	; 0x40
   3b298:	add	r2, r2, r1
   3b29c:	sub	r1, r3, r1
   3b2a0:	str	r2, [r4, #16]
   3b2a4:	mvn	r2, #3
   3b2a8:	cmn	r1, #4
   3b2ac:	movcs	r1, r2
   3b2b0:	str	r1, [r4, #24]
   3b2b4:	str	r2, [r0, #4]
   3b2b8:	ldr	r1, [r0, #20]
   3b2bc:	adds	r1, r1, sl
   3b2c0:	cmpcc	r1, #1073741824	; 0x40000000
   3b2c4:	bcc	3b2e8 <flatcc_builder_create_union_vector@@Base+0xc0>
   3b2c8:	ldr	r0, [pc, #556]	; 3b4fc <flatcc_builder_create_union_vector@@Base+0x2d4>
   3b2cc:	ldr	r1, [pc, #556]	; 3b500 <flatcc_builder_create_union_vector@@Base+0x2d8>
   3b2d0:	ldr	r3, [pc, #556]	; 3b504 <flatcc_builder_create_union_vector@@Base+0x2dc>
   3b2d4:	mov	r2, #892	; 0x37c
   3b2d8:	add	r0, pc, r0
   3b2dc:	add	r1, pc, r1
   3b2e0:	add	r3, pc, r3
   3b2e4:	bl	14a78 <__assert_fail@plt>
   3b2e8:	str	r1, [r0, #20]
   3b2ec:	ldr	r7, [r4, #20]
   3b2f0:	ldr	r0, [r4, #24]
   3b2f4:	add	r1, r7, sl, lsl #2
   3b2f8:	cmp	r1, r0
   3b2fc:	str	r1, [r4, #20]
   3b300:	bcs	3b314 <flatcc_builder_create_union_vector@@Base+0xec>
   3b304:	ldr	r1, [r4, #16]
   3b308:	adds	r2, r1, r7
   3b30c:	bne	3b37c <flatcc_builder_create_union_vector@@Base+0x154>
   3b310:	b	3b268 <flatcc_builder_create_union_vector@@Base+0x40>
   3b314:	ldr	r2, [r4, #28]
   3b318:	ldr	r0, [r4, #40]	; 0x28
   3b31c:	ldr	r6, [r4, #48]	; 0x30
   3b320:	mov	r3, #1
   3b324:	str	r3, [sp]
   3b328:	mov	r3, #1
   3b32c:	add	r1, r1, r2
   3b330:	add	r2, r1, #1
   3b334:	add	r1, r4, #60	; 0x3c
   3b338:	blx	r6
   3b33c:	cmp	r0, #0
   3b340:	bne	3b268 <flatcc_builder_create_union_vector@@Base+0x40>
   3b344:	ldr	r0, [r4, #28]
   3b348:	ldr	r1, [r4, #60]	; 0x3c
   3b34c:	ldr	r3, [r4, #64]	; 0x40
   3b350:	ldr	r2, [r4, #32]
   3b354:	add	r1, r1, r0
   3b358:	sub	r0, r3, r0
   3b35c:	mvn	r3, #3
   3b360:	cmn	r0, #4
   3b364:	str	r1, [r4, #16]
   3b368:	movcs	r0, r3
   3b36c:	str	r0, [r4, #24]
   3b370:	str	r3, [r2, #4]
   3b374:	adds	r2, r1, r7
   3b378:	beq	3b268 <flatcc_builder_create_union_vector@@Base+0x40>
   3b37c:	ldr	r7, [r4, #20]
   3b380:	add	r2, r7, sl
   3b384:	cmp	r2, r0
   3b388:	str	r2, [r4, #20]
   3b38c:	bcc	3b3f0 <flatcc_builder_create_union_vector@@Base+0x1c8>
   3b390:	ldr	r1, [r4, #28]
   3b394:	ldr	r0, [r4, #40]	; 0x28
   3b398:	ldr	r6, [r4, #48]	; 0x30
   3b39c:	mov	r3, #1
   3b3a0:	str	r3, [sp]
   3b3a4:	mov	r3, #1
   3b3a8:	add	r1, r2, r1
   3b3ac:	add	r2, r1, #1
   3b3b0:	add	r1, r4, #60	; 0x3c
   3b3b4:	blx	r6
   3b3b8:	cmp	r0, #0
   3b3bc:	bne	3b268 <flatcc_builder_create_union_vector@@Base+0x40>
   3b3c0:	ldr	r0, [r4, #28]
   3b3c4:	ldr	r1, [r4, #60]	; 0x3c
   3b3c8:	ldr	r3, [r4, #64]	; 0x40
   3b3cc:	ldr	r2, [r4, #32]
   3b3d0:	add	r1, r1, r0
   3b3d4:	sub	r0, r3, r0
   3b3d8:	mvn	r3, #3
   3b3dc:	cmn	r0, #4
   3b3e0:	str	r1, [r4, #16]
   3b3e4:	movcs	r0, r3
   3b3e8:	str	r0, [r4, #24]
   3b3ec:	str	r3, [r2, #4]
   3b3f0:	adds	r8, r1, r7
   3b3f4:	beq	3b268 <flatcc_builder_create_union_vector@@Base+0x40>
   3b3f8:	cmp	sl, #0
   3b3fc:	beq	3b42c <flatcc_builder_create_union_vector@@Base+0x204>
   3b400:	add	r0, r9, #4
   3b404:	mov	r2, sl
   3b408:	mov	r3, r1
   3b40c:	mov	r7, r8
   3b410:	ldrb	r6, [r0, #-4]
   3b414:	subs	r2, r2, #1
   3b418:	strb	r6, [r7], #1
   3b41c:	ldr	r6, [r0]
   3b420:	add	r0, r0, #8
   3b424:	str	r6, [r3], #4
   3b428:	bne	3b410 <flatcc_builder_create_union_vector@@Base+0x1e8>
   3b42c:	mov	r0, r4
   3b430:	mov	r2, sl
   3b434:	mov	r3, r8
   3b438:	bl	3a920 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3b43c:	mov	r7, r0
   3b440:	mov	r9, #0
   3b444:	cmp	r0, #0
   3b448:	beq	3b474 <flatcc_builder_create_union_vector@@Base+0x24c>
   3b44c:	mvn	r0, #0
   3b450:	mov	r1, #1
   3b454:	mov	r2, sl
   3b458:	mov	r3, #1
   3b45c:	str	r1, [sp]
   3b460:	str	r0, [sp, #4]
   3b464:	mov	r0, r4
   3b468:	mov	r1, r8
   3b46c:	bl	3a688 <flatcc_builder_create_vector@@Base>
   3b470:	b	3b478 <flatcc_builder_create_union_vector@@Base+0x250>
   3b474:	mov	r0, #0
   3b478:	orr	r1, r9, r7
   3b47c:	stm	r5, {r0, r1}
   3b480:	mov	r1, #0
   3b484:	ldr	r0, [r4, #16]
   3b488:	ldr	r2, [r4, #20]
   3b48c:	bl	149d0 <memset@plt>
   3b490:	ldr	r0, [r4, #32]
   3b494:	ldr	r1, [r4, #60]	; 0x3c
   3b498:	ldr	r2, [r4, #64]	; 0x40
   3b49c:	ldr	r3, [r0, #8]
   3b4a0:	str	r3, [r4, #20]
   3b4a4:	ldr	r3, [r0]
   3b4a8:	str	r3, [r4, #28]
   3b4ac:	add	r1, r1, r3
   3b4b0:	ldr	r7, [r0, #4]
   3b4b4:	str	r1, [r4, #16]
   3b4b8:	sub	r1, r2, r3
   3b4bc:	cmp	r1, r7
   3b4c0:	movhi	r1, r7
   3b4c4:	str	r1, [r4, #24]
   3b4c8:	ldrh	r1, [r4, #130]	; 0x82
   3b4cc:	ldrh	r2, [r4, #128]	; 0x80
   3b4d0:	cmp	r2, r1
   3b4d4:	strhcc	r1, [r4, #128]	; 0x80
   3b4d8:	ldrh	r1, [r0, #12]
   3b4dc:	sub	r0, r0, #36	; 0x24
   3b4e0:	str	r0, [r4, #32]
   3b4e4:	strh	r1, [r4, #130]	; 0x82
   3b4e8:	ldr	r0, [r4, #156]	; 0x9c
   3b4ec:	sub	r0, r0, #1
   3b4f0:	str	r0, [r4, #156]	; 0x9c
   3b4f4:	sub	sp, fp, #28
   3b4f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b4fc:	andeq	r0, r2, r0, lsr #1
   3b500:	ldrdeq	lr, [r1], -r6
   3b504:	strheq	r0, [r2], -r3

0003b508 <flatcc_builder_create_union_vector_direct@@Base>:
   3b508:	push	{r4, r5, r6, r7, fp, lr}
   3b50c:	add	fp, sp, #16
   3b510:	sub	sp, sp, #8
   3b514:	ldr	r7, [fp, #8]
   3b518:	mov	r5, r2
   3b51c:	mov	r4, r0
   3b520:	mov	r0, #0
   3b524:	mov	r6, r1
   3b528:	str	r0, [r4]
   3b52c:	str	r0, [r4, #4]
   3b530:	mov	r0, r1
   3b534:	mov	r1, r3
   3b538:	mov	r3, r5
   3b53c:	mov	r2, r7
   3b540:	bl	3a920 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3b544:	cmp	r0, #0
   3b548:	str	r0, [r4, #4]
   3b54c:	beq	3b578 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   3b550:	mvn	r0, #0
   3b554:	mov	r1, #1
   3b558:	mov	r2, r7
   3b55c:	mov	r3, #1
   3b560:	str	r1, [sp]
   3b564:	str	r0, [sp, #4]
   3b568:	mov	r0, r6
   3b56c:	mov	r1, r5
   3b570:	bl	3a688 <flatcc_builder_create_vector@@Base>
   3b574:	str	r0, [r4]
   3b578:	sub	sp, fp, #16
   3b57c:	pop	{r4, r5, r6, r7, fp, pc}

0003b580 <flatcc_builder_start_union_vector@@Base>:
   3b580:	push	{r4, sl, fp, lr}
   3b584:	add	fp, sp, #8
   3b588:	mov	r1, #4
   3b58c:	mov	r4, r0
   3b590:	bl	3857c <flatcc_builder_start_buffer@@Base+0xc0>
   3b594:	mov	r1, r0
   3b598:	mvn	r0, #0
   3b59c:	cmp	r1, #0
   3b5a0:	popne	{r4, sl, fp, pc}
   3b5a4:	ldr	r0, [r4, #32]
   3b5a8:	mov	r1, #8
   3b5ac:	mov	r2, #7
   3b5b0:	str	r1, [r0, #16]
   3b5b4:	mov	r0, #0
   3b5b8:	ldr	r1, [r4, #32]
   3b5bc:	str	r0, [r1, #20]
   3b5c0:	ldr	r1, [r4, #32]
   3b5c4:	strh	r2, [r1, #14]
   3b5c8:	ldr	r2, [r4, #28]
   3b5cc:	ldr	r3, [r4, #60]	; 0x3c
   3b5d0:	ldr	ip, [r4, #64]	; 0x40
   3b5d4:	add	r3, r3, r2
   3b5d8:	sub	r2, ip, r2
   3b5dc:	str	r3, [r4, #16]
   3b5e0:	mvn	r3, #3
   3b5e4:	cmn	r2, #4
   3b5e8:	movcs	r2, r3
   3b5ec:	str	r2, [r4, #24]
   3b5f0:	str	r3, [r1, #4]
   3b5f4:	pop	{r4, sl, fp, pc}

0003b5f8 <flatcc_builder_end_union_vector@@Base>:
   3b5f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3b5fc:	add	fp, sp, #28
   3b600:	sub	sp, sp, #12
   3b604:	mov	sl, r0
   3b608:	mov	r0, #0
   3b60c:	mov	r4, r1
   3b610:	str	r0, [sl]
   3b614:	str	r0, [sl, #4]
   3b618:	ldr	r0, [r1, #32]
   3b61c:	ldrh	r1, [r0, #14]
   3b620:	cmp	r1, #7
   3b624:	bne	3b7c8 <flatcc_builder_end_union_vector@@Base+0x1d0>
   3b628:	ldr	r6, [r0, #20]
   3b62c:	ldr	r7, [r4, #20]
   3b630:	ldr	r2, [r4, #24]
   3b634:	add	r0, r6, r6, lsl #2
   3b638:	add	r1, r7, r0
   3b63c:	cmp	r1, r2
   3b640:	str	r1, [r4, #20]
   3b644:	bcs	3b658 <flatcc_builder_end_union_vector@@Base+0x60>
   3b648:	ldr	r0, [r4, #16]
   3b64c:	adds	r1, r0, r7
   3b650:	bne	3b6c0 <flatcc_builder_end_union_vector@@Base+0xc8>
   3b654:	b	3b7c0 <flatcc_builder_end_union_vector@@Base+0x1c8>
   3b658:	ldr	r2, [r4, #28]
   3b65c:	ldr	r0, [r4, #40]	; 0x28
   3b660:	ldr	r5, [r4, #48]	; 0x30
   3b664:	mov	r3, #1
   3b668:	str	r3, [sp]
   3b66c:	mov	r3, #1
   3b670:	add	r1, r1, r2
   3b674:	add	r2, r1, #1
   3b678:	add	r1, r4, #60	; 0x3c
   3b67c:	blx	r5
   3b680:	cmp	r0, #0
   3b684:	bne	3b7c0 <flatcc_builder_end_union_vector@@Base+0x1c8>
   3b688:	ldr	r1, [r4, #28]
   3b68c:	ldr	r0, [r4, #60]	; 0x3c
   3b690:	ldr	r3, [r4, #64]	; 0x40
   3b694:	ldr	r2, [r4, #32]
   3b698:	add	r0, r0, r1
   3b69c:	sub	r1, r3, r1
   3b6a0:	mvn	r3, #3
   3b6a4:	cmn	r1, #4
   3b6a8:	str	r0, [r4, #16]
   3b6ac:	movcs	r1, r3
   3b6b0:	str	r1, [r4, #24]
   3b6b4:	str	r3, [r2, #4]
   3b6b8:	adds	r1, r0, r7
   3b6bc:	beq	3b7c0 <flatcc_builder_end_union_vector@@Base+0x1c8>
   3b6c0:	add	r8, r1, r6, lsl #2
   3b6c4:	cmp	r6, #0
   3b6c8:	beq	3b6f8 <flatcc_builder_end_union_vector@@Base+0x100>
   3b6cc:	add	r0, r0, #4
   3b6d0:	mov	r2, r6
   3b6d4:	mov	r3, r1
   3b6d8:	mov	r7, r8
   3b6dc:	ldrb	r5, [r0, #-4]
   3b6e0:	subs	r2, r2, #1
   3b6e4:	strb	r5, [r7], #1
   3b6e8:	ldr	r5, [r0]
   3b6ec:	add	r0, r0, #8
   3b6f0:	str	r5, [r3], #4
   3b6f4:	bne	3b6dc <flatcc_builder_end_union_vector@@Base+0xe4>
   3b6f8:	mov	r0, r4
   3b6fc:	mov	r2, r6
   3b700:	mov	r3, r8
   3b704:	bl	3a920 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   3b708:	mov	r7, r0
   3b70c:	mov	r9, #0
   3b710:	cmp	r0, #0
   3b714:	beq	3b740 <flatcc_builder_end_union_vector@@Base+0x148>
   3b718:	mvn	r0, #0
   3b71c:	mov	r1, #1
   3b720:	mov	r2, r6
   3b724:	mov	r3, #1
   3b728:	str	r1, [sp]
   3b72c:	str	r0, [sp, #4]
   3b730:	mov	r0, r4
   3b734:	mov	r1, r8
   3b738:	bl	3a688 <flatcc_builder_create_vector@@Base>
   3b73c:	b	3b744 <flatcc_builder_end_union_vector@@Base+0x14c>
   3b740:	mov	r0, #0
   3b744:	orr	r1, r9, r7
   3b748:	stm	sl, {r0, r1}
   3b74c:	mov	r1, #0
   3b750:	ldr	r0, [r4, #16]
   3b754:	ldr	r2, [r4, #20]
   3b758:	bl	149d0 <memset@plt>
   3b75c:	ldr	r0, [r4, #32]
   3b760:	ldr	r1, [r4, #60]	; 0x3c
   3b764:	ldr	r2, [r4, #64]	; 0x40
   3b768:	ldr	r3, [r0, #8]
   3b76c:	str	r3, [r4, #20]
   3b770:	ldr	r3, [r0]
   3b774:	str	r3, [r4, #28]
   3b778:	add	r1, r1, r3
   3b77c:	ldr	r7, [r0, #4]
   3b780:	str	r1, [r4, #16]
   3b784:	sub	r1, r2, r3
   3b788:	cmp	r1, r7
   3b78c:	movhi	r1, r7
   3b790:	str	r1, [r4, #24]
   3b794:	ldrh	r1, [r4, #130]	; 0x82
   3b798:	ldrh	r2, [r4, #128]	; 0x80
   3b79c:	cmp	r2, r1
   3b7a0:	strhcc	r1, [r4, #128]	; 0x80
   3b7a4:	ldrh	r1, [r0, #12]
   3b7a8:	sub	r0, r0, #36	; 0x24
   3b7ac:	str	r0, [r4, #32]
   3b7b0:	strh	r1, [r4, #130]	; 0x82
   3b7b4:	ldr	r0, [r4, #156]	; 0x9c
   3b7b8:	sub	r0, r0, #1
   3b7bc:	str	r0, [r4, #156]	; 0x9c
   3b7c0:	sub	sp, fp, #28
   3b7c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b7c8:	ldr	r0, [pc, #24]	; 3b7e8 <flatcc_builder_end_union_vector@@Base+0x1f0>
   3b7cc:	ldr	r1, [pc, #24]	; 3b7ec <flatcc_builder_end_union_vector@@Base+0x1f4>
   3b7d0:	ldr	r3, [pc, #24]	; 3b7f0 <flatcc_builder_end_union_vector@@Base+0x1f8>
   3b7d4:	movw	r2, #1617	; 0x651
   3b7d8:	add	r0, pc, r0
   3b7dc:	add	r1, pc, r1
   3b7e0:	add	r3, pc, r3
   3b7e4:	bl	14a78 <__assert_fail@plt>
   3b7e8:	andeq	pc, r1, r3, lsl r7	; <UNPREDICTABLE>
   3b7ec:	ldrdeq	lr, [r1], -r6
   3b7f0:	andeq	pc, r1, sp, lsr r7	; <UNPREDICTABLE>

0003b7f4 <flatcc_builder_union_vector_count@@Base>:
   3b7f4:	ldr	r0, [r0, #32]
   3b7f8:	ldr	r0, [r0, #20]
   3b7fc:	bx	lr

0003b800 <flatcc_builder_union_vector_edit@@Base>:
   3b800:	ldr	r0, [r0, #16]
   3b804:	bx	lr

0003b808 <flatcc_builder_extend_union_vector@@Base>:
   3b808:	push	{r4, r5, fp, lr}
   3b80c:	add	fp, sp, #8
   3b810:	sub	sp, sp, #8
   3b814:	mov	r4, r0
   3b818:	ldr	r0, [r0, #32]
   3b81c:	ldr	r2, [r0, #20]
   3b820:	adds	r2, r2, r1
   3b824:	cmpcc	r2, #536870912	; 0x20000000
   3b828:	bcc	3b84c <flatcc_builder_extend_union_vector@@Base+0x44>
   3b82c:	ldr	r0, [pc, #184]	; 3b8ec <flatcc_builder_extend_union_vector@@Base+0xe4>
   3b830:	ldr	r1, [pc, #184]	; 3b8f0 <flatcc_builder_extend_union_vector@@Base+0xe8>
   3b834:	ldr	r3, [pc, #184]	; 3b8f4 <flatcc_builder_extend_union_vector@@Base+0xec>
   3b838:	mov	r2, #892	; 0x37c
   3b83c:	add	r0, pc, r0
   3b840:	add	r1, pc, r1
   3b844:	add	r3, pc, r3
   3b848:	bl	14a78 <__assert_fail@plt>
   3b84c:	str	r2, [r0, #20]
   3b850:	ldr	r5, [r4, #20]
   3b854:	ldr	r0, [r4, #24]
   3b858:	add	r1, r5, r1, lsl #3
   3b85c:	cmp	r1, r0
   3b860:	str	r1, [r4, #20]
   3b864:	bcs	3b870 <flatcc_builder_extend_union_vector@@Base+0x68>
   3b868:	ldr	r0, [r4, #16]
   3b86c:	b	3b8e0 <flatcc_builder_extend_union_vector@@Base+0xd8>
   3b870:	ldr	r2, [r4, #28]
   3b874:	ldr	r0, [r4, #40]	; 0x28
   3b878:	ldr	ip, [r4, #48]	; 0x30
   3b87c:	mov	r3, #1
   3b880:	str	r3, [sp]
   3b884:	mov	r3, #1
   3b888:	add	r1, r1, r2
   3b88c:	add	r2, r1, #1
   3b890:	add	r1, r4, #60	; 0x3c
   3b894:	blx	ip
   3b898:	mov	r1, r0
   3b89c:	mov	r0, #0
   3b8a0:	cmp	r1, #0
   3b8a4:	beq	3b8b0 <flatcc_builder_extend_union_vector@@Base+0xa8>
   3b8a8:	sub	sp, fp, #8
   3b8ac:	pop	{r4, r5, fp, pc}
   3b8b0:	ldr	r1, [r4, #28]
   3b8b4:	ldr	r0, [r4, #60]	; 0x3c
   3b8b8:	ldr	r3, [r4, #64]	; 0x40
   3b8bc:	ldr	r2, [r4, #32]
   3b8c0:	add	r0, r0, r1
   3b8c4:	sub	r1, r3, r1
   3b8c8:	mvn	r3, #3
   3b8cc:	cmn	r1, #4
   3b8d0:	str	r0, [r4, #16]
   3b8d4:	movcs	r1, r3
   3b8d8:	str	r1, [r4, #24]
   3b8dc:	str	r3, [r2, #4]
   3b8e0:	add	r0, r0, r5
   3b8e4:	sub	sp, fp, #8
   3b8e8:	pop	{r4, r5, fp, pc}
   3b8ec:	andeq	pc, r1, ip, lsr fp	; <UNPREDICTABLE>
   3b8f0:	andeq	lr, r1, r2, ror sl
   3b8f4:	andeq	pc, r1, pc, asr #22

0003b8f8 <flatcc_builder_truncate_union_vector@@Base>:
   3b8f8:	push	{fp, lr}
   3b8fc:	mov	fp, sp
   3b900:	ldr	r2, [r0, #32]
   3b904:	ldrh	r3, [r2, #14]
   3b908:	cmp	r3, #7
   3b90c:	bne	3b954 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   3b910:	ldr	r3, [r2, #20]
   3b914:	cmp	r3, r1
   3b918:	bcc	3b974 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   3b91c:	sub	r3, r3, r1
   3b920:	str	r3, [r2, #20]
   3b924:	ldr	r2, [r0, #32]
   3b928:	ldr	r3, [r0, #20]
   3b92c:	ldr	ip, [r0, #16]
   3b930:	ldr	r2, [r2, #16]
   3b934:	mls	r3, r2, r1, r3
   3b938:	mul	r2, r2, r1
   3b93c:	mov	r1, #0
   3b940:	str	r3, [r0, #20]
   3b944:	add	r0, ip, r3
   3b948:	bl	149d0 <memset@plt>
   3b94c:	mov	r0, #0
   3b950:	pop	{fp, pc}
   3b954:	ldr	r0, [pc, #56]	; 3b994 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   3b958:	ldr	r1, [pc, #56]	; 3b998 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   3b95c:	ldr	r3, [pc, #56]	; 3b99c <flatcc_builder_truncate_union_vector@@Base+0xa4>
   3b960:	movw	r2, #1665	; 0x681
   3b964:	add	r0, pc, r0
   3b968:	add	r1, pc, r1
   3b96c:	add	r3, pc, r3
   3b970:	bl	14a78 <__assert_fail@plt>
   3b974:	ldr	r0, [pc, #36]	; 3b9a0 <flatcc_builder_truncate_union_vector@@Base+0xa8>
   3b978:	ldr	r1, [pc, #36]	; 3b9a4 <flatcc_builder_truncate_union_vector@@Base+0xac>
   3b97c:	ldr	r3, [pc, #36]	; 3b9a8 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   3b980:	movw	r2, #1666	; 0x682
   3b984:	add	r0, pc, r0
   3b988:	add	r1, pc, r1
   3b98c:	add	r3, pc, r3
   3b990:	bl	14a78 <__assert_fail@plt>
   3b994:	andeq	pc, r1, r7, lsl #11
   3b998:	andeq	lr, r1, sl, asr #18
   3b99c:	andeq	pc, r1, r4, lsl #12
   3b9a0:	andeq	lr, r1, fp, asr #31
   3b9a4:	andeq	lr, r1, sl, lsr #18
   3b9a8:	andeq	pc, r1, r4, ror #11

0003b9ac <flatcc_builder_union_vector_push@@Base>:
   3b9ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3b9b0:	add	fp, sp, #24
   3b9b4:	sub	sp, sp, #8
   3b9b8:	mov	r7, r0
   3b9bc:	ldr	r0, [r0, #32]
   3b9c0:	mov	r9, r1
   3b9c4:	ldrh	r1, [r0, #14]
   3b9c8:	cmp	r1, #7
   3b9cc:	bne	3ba88 <flatcc_builder_union_vector_push@@Base+0xdc>
   3b9d0:	ldr	r1, [r0, #20]
   3b9d4:	mov	r6, #0
   3b9d8:	cmn	r1, #-536870911	; 0xe0000001
   3b9dc:	beq	3ba7c <flatcc_builder_union_vector_push@@Base+0xd0>
   3b9e0:	add	r1, r1, #1
   3b9e4:	mov	r8, r2
   3b9e8:	str	r1, [r0, #20]
   3b9ec:	ldr	r4, [r7, #20]
   3b9f0:	ldr	r0, [r7, #24]
   3b9f4:	add	r1, r4, #8
   3b9f8:	cmp	r1, r0
   3b9fc:	str	r1, [r7, #20]
   3ba00:	bcs	3ba0c <flatcc_builder_union_vector_push@@Base+0x60>
   3ba04:	ldr	r0, [r7, #16]
   3ba08:	b	3ba6c <flatcc_builder_union_vector_push@@Base+0xc0>
   3ba0c:	ldr	r1, [r7, #28]
   3ba10:	ldr	r0, [r7, #40]	; 0x28
   3ba14:	ldr	r5, [r7, #48]	; 0x30
   3ba18:	mov	r2, #1
   3ba1c:	mov	r3, #1
   3ba20:	str	r2, [sp]
   3ba24:	add	r1, r4, r1
   3ba28:	add	r2, r1, #9
   3ba2c:	add	r1, r7, #60	; 0x3c
   3ba30:	blx	r5
   3ba34:	cmp	r0, #0
   3ba38:	bne	3ba7c <flatcc_builder_union_vector_push@@Base+0xd0>
   3ba3c:	ldr	r1, [r7, #28]
   3ba40:	ldr	r0, [r7, #60]	; 0x3c
   3ba44:	ldr	r3, [r7, #64]	; 0x40
   3ba48:	ldr	r2, [r7, #32]
   3ba4c:	add	r0, r0, r1
   3ba50:	sub	r1, r3, r1
   3ba54:	mvn	r3, #3
   3ba58:	cmn	r1, #4
   3ba5c:	str	r0, [r7, #16]
   3ba60:	movcs	r1, r3
   3ba64:	str	r1, [r7, #24]
   3ba68:	str	r3, [r2, #4]
   3ba6c:	adds	r0, r0, r4
   3ba70:	movne	r6, r0
   3ba74:	strne	r9, [r0]
   3ba78:	strne	r8, [r0, #4]
   3ba7c:	mov	r0, r6
   3ba80:	sub	sp, fp, #24
   3ba84:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3ba88:	ldr	r0, [pc, #24]	; 3baa8 <flatcc_builder_union_vector_push@@Base+0xfc>
   3ba8c:	ldr	r1, [pc, #24]	; 3baac <flatcc_builder_union_vector_push@@Base+0x100>
   3ba90:	ldr	r3, [pc, #24]	; 3bab0 <flatcc_builder_union_vector_push@@Base+0x104>
   3ba94:	movw	r2, #1677	; 0x68d
   3ba98:	add	r0, pc, r0
   3ba9c:	add	r1, pc, r1
   3baa0:	add	r3, pc, r3
   3baa4:	bl	14a78 <__assert_fail@plt>
   3baa8:	andeq	pc, r1, r3, asr r4	; <UNPREDICTABLE>
   3baac:	andeq	lr, r1, r6, lsl r8
   3bab0:	andeq	pc, r1, r5, lsl r5	; <UNPREDICTABLE>

0003bab4 <flatcc_builder_append_union_vector@@Base>:
   3bab4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3bab8:	add	fp, sp, #24
   3babc:	sub	sp, sp, #8
   3bac0:	mov	r6, r0
   3bac4:	ldr	r0, [r0, #32]
   3bac8:	mov	r8, r1
   3bacc:	ldrh	r1, [r0, #14]
   3bad0:	cmp	r1, #7
   3bad4:	bne	3bbc4 <flatcc_builder_append_union_vector@@Base+0x110>
   3bad8:	ldr	r1, [r0, #20]
   3badc:	mov	r5, r2
   3bae0:	adds	r1, r1, r2
   3bae4:	cmpcc	r1, #536870912	; 0x20000000
   3bae8:	bcc	3bb0c <flatcc_builder_append_union_vector@@Base+0x58>
   3baec:	ldr	r0, [pc, #252]	; 3bbf0 <flatcc_builder_append_union_vector@@Base+0x13c>
   3baf0:	ldr	r1, [pc, #252]	; 3bbf4 <flatcc_builder_append_union_vector@@Base+0x140>
   3baf4:	ldr	r3, [pc, #252]	; 3bbf8 <flatcc_builder_append_union_vector@@Base+0x144>
   3baf8:	mov	r2, #892	; 0x37c
   3bafc:	add	r0, pc, r0
   3bb00:	add	r1, pc, r1
   3bb04:	add	r3, pc, r3
   3bb08:	bl	14a78 <__assert_fail@plt>
   3bb0c:	str	r1, [r0, #20]
   3bb10:	ldr	r4, [r6, #20]
   3bb14:	ldr	r0, [r6, #24]
   3bb18:	add	r1, r4, r5, lsl #3
   3bb1c:	cmp	r1, r0
   3bb20:	str	r1, [r6, #20]
   3bb24:	bcs	3bb48 <flatcc_builder_append_union_vector@@Base+0x94>
   3bb28:	ldr	r0, [r6, #16]
   3bb2c:	adds	r7, r0, r4
   3bb30:	beq	3bbb4 <flatcc_builder_append_union_vector@@Base+0x100>
   3bb34:	lsl	r2, r5, #3
   3bb38:	mov	r0, r7
   3bb3c:	mov	r1, r8
   3bb40:	bl	14904 <memcpy@plt>
   3bb44:	b	3bbb8 <flatcc_builder_append_union_vector@@Base+0x104>
   3bb48:	ldr	r2, [r6, #28]
   3bb4c:	ldr	r0, [r6, #40]	; 0x28
   3bb50:	ldr	r7, [r6, #48]	; 0x30
   3bb54:	mov	r3, #1
   3bb58:	str	r3, [sp]
   3bb5c:	mov	r3, #1
   3bb60:	add	r1, r1, r2
   3bb64:	add	r2, r1, #1
   3bb68:	add	r1, r6, #60	; 0x3c
   3bb6c:	blx	r7
   3bb70:	mov	r7, #0
   3bb74:	cmp	r0, #0
   3bb78:	bne	3bbb8 <flatcc_builder_append_union_vector@@Base+0x104>
   3bb7c:	ldr	r1, [r6, #28]
   3bb80:	ldr	r0, [r6, #60]	; 0x3c
   3bb84:	ldr	r3, [r6, #64]	; 0x40
   3bb88:	ldr	r2, [r6, #32]
   3bb8c:	add	r0, r0, r1
   3bb90:	sub	r1, r3, r1
   3bb94:	mvn	r3, #3
   3bb98:	cmn	r1, #4
   3bb9c:	str	r0, [r6, #16]
   3bba0:	movcs	r1, r3
   3bba4:	str	r1, [r6, #24]
   3bba8:	str	r3, [r2, #4]
   3bbac:	adds	r7, r0, r4
   3bbb0:	bne	3bb34 <flatcc_builder_append_union_vector@@Base+0x80>
   3bbb4:	mov	r7, #0
   3bbb8:	mov	r0, r7
   3bbbc:	sub	sp, fp, #24
   3bbc0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3bbc4:	ldr	r0, [pc, #24]	; 3bbe4 <flatcc_builder_append_union_vector@@Base+0x130>
   3bbc8:	ldr	r1, [pc, #24]	; 3bbe8 <flatcc_builder_append_union_vector@@Base+0x134>
   3bbcc:	ldr	r3, [pc, #24]	; 3bbec <flatcc_builder_append_union_vector@@Base+0x138>
   3bbd0:	movw	r2, #1692	; 0x69c
   3bbd4:	add	r0, pc, r0
   3bbd8:	add	r1, pc, r1
   3bbdc:	add	r3, pc, r3
   3bbe0:	bl	14a78 <__assert_fail@plt>
   3bbe4:	andeq	pc, r1, r7, lsl r3	; <UNPREDICTABLE>
   3bbe8:	ldrdeq	lr, [r1], -sl
   3bbec:	andeq	pc, r1, r6, asr #8
   3bbf0:	andeq	pc, r1, ip, ror r8	; <UNPREDICTABLE>
   3bbf4:			; <UNDEFINED> instruction: 0x0001e7b2
   3bbf8:	andeq	pc, r1, pc, lsl #17

0003bbfc <flatcc_builder_create_string@@Base>:
   3bbfc:	push	{r4, r5, r6, sl, fp, lr}
   3bc00:	add	fp, sp, #16
   3bc04:	sub	sp, sp, #80	; 0x50
   3bc08:	str	r2, [fp, #-20]	; 0xffffffec
   3bc0c:	mvn	r5, r2
   3bc10:	mov	r6, r0
   3bc14:	mov	r3, #1
   3bc18:	cmp	r2, #0
   3bc1c:	ldr	ip, [r0, #136]	; 0x88
   3bc20:	sub	r0, fp, #20
   3bc24:	str	r0, [sp, #12]
   3bc28:	mov	r0, #4
   3bc2c:	str	r0, [sp, #4]
   3bc30:	str	r0, [sp, #16]
   3bc34:	str	r3, [sp, #8]
   3bc38:	add	r5, ip, r5
   3bc3c:	and	r5, r5, #3
   3bc40:	add	r5, r5, #1
   3bc44:	beq	3bc60 <flatcc_builder_create_string@@Base+0x64>
   3bc48:	mov	r3, #2
   3bc4c:	add	r0, r2, #4
   3bc50:	str	r1, [sp, #20]
   3bc54:	str	r2, [sp, #24]
   3bc58:	str	r3, [sp, #8]
   3bc5c:	str	r0, [sp, #4]
   3bc60:	add	r1, r0, r5
   3bc64:	add	lr, sp, #4
   3bc68:	str	r1, [sp, #4]
   3bc6c:	add	r0, lr, r3, lsl #3
   3bc70:	cmp	r1, #0
   3bc74:	ldr	r2, [pc, #132]	; 3bd00 <flatcc_builder_create_string@@Base+0x104>
   3bc78:	ldr	r2, [pc, r2]
   3bc7c:	str	r2, [r0, #8]
   3bc80:	add	r2, r3, #1
   3bc84:	str	r5, [r0, #12]
   3bc88:	str	r2, [sp, #8]
   3bc8c:	ble	3bce0 <flatcc_builder_create_string@@Base+0xe4>
   3bc90:	ldr	r0, [r6, #36]	; 0x24
   3bc94:	ldr	r4, [r6, #44]	; 0x2c
   3bc98:	sub	r5, ip, r1
   3bc9c:	str	r1, [sp]
   3bca0:	add	r1, lr, #8
   3bca4:	mov	r3, r5
   3bca8:	blx	r4
   3bcac:	cmp	r0, #0
   3bcb0:	streq	r5, [r6, #136]	; 0x88
   3bcb4:	moveq	r0, r5
   3bcb8:	subeq	sp, fp, #16
   3bcbc:	popeq	{r4, r5, r6, sl, fp, pc}
   3bcc0:	ldr	r0, [pc, #72]	; 3bd10 <flatcc_builder_create_string@@Base+0x114>
   3bcc4:	ldr	r1, [pc, #72]	; 3bd14 <flatcc_builder_create_string@@Base+0x118>
   3bcc8:	ldr	r3, [pc, #72]	; 3bd18 <flatcc_builder_create_string@@Base+0x11c>
   3bccc:	movw	r2, #651	; 0x28b
   3bcd0:	add	r0, pc, r0
   3bcd4:	add	r1, pc, r1
   3bcd8:	add	r3, pc, r3
   3bcdc:	bl	14a78 <__assert_fail@plt>
   3bce0:	ldr	r0, [pc, #28]	; 3bd04 <flatcc_builder_create_string@@Base+0x108>
   3bce4:	ldr	r1, [pc, #28]	; 3bd08 <flatcc_builder_create_string@@Base+0x10c>
   3bce8:	ldr	r3, [pc, #28]	; 3bd0c <flatcc_builder_create_string@@Base+0x110>
   3bcec:	movw	r2, #647	; 0x287
   3bcf0:	add	r0, pc, r0
   3bcf4:	add	r1, pc, r1
   3bcf8:	add	r3, pc, r3
   3bcfc:	bl	14a78 <__assert_fail@plt>
   3bd00:	andeq	r0, r3, r0, lsr #8
   3bd04:			; <UNDEFINED> instruction: 0x000158be
   3bd08:			; <UNDEFINED> instruction: 0x0001e5be
   3bd0c:	andeq	pc, r1, r6, lsr r6	; <UNPREDICTABLE>
   3bd10:	ldrdeq	r5, [r1], -lr
   3bd14:	ldrdeq	lr, [r1], -lr	; <UNPREDICTABLE>
   3bd18:	andeq	pc, r1, r6, asr r6	; <UNPREDICTABLE>

0003bd1c <flatcc_builder_create_string_str@@Base>:
   3bd1c:	push	{r4, r5, fp, lr}
   3bd20:	add	fp, sp, #8
   3bd24:	mov	r5, r0
   3bd28:	mov	r0, r1
   3bd2c:	mov	r4, r1
   3bd30:	bl	149a0 <strlen@plt>
   3bd34:	mov	r2, r0
   3bd38:	mov	r0, r5
   3bd3c:	mov	r1, r4
   3bd40:	pop	{r4, r5, fp, lr}
   3bd44:	b	3bbfc <flatcc_builder_create_string@@Base>

0003bd48 <flatcc_builder_create_string_strn@@Base>:
   3bd48:	push	{r4, r5, r6, sl, fp, lr}
   3bd4c:	add	fp, sp, #16
   3bd50:	mov	r6, r0
   3bd54:	mov	r5, r1
   3bd58:	mov	r0, r1
   3bd5c:	mov	r1, #0
   3bd60:	mov	r4, r2
   3bd64:	bl	149f4 <memchr@plt>
   3bd68:	cmp	r0, #0
   3bd6c:	mov	r1, r5
   3bd70:	subne	r4, r0, r5
   3bd74:	mov	r0, r6
   3bd78:	mov	r2, r4
   3bd7c:	pop	{r4, r5, r6, sl, fp, lr}
   3bd80:	b	3bbfc <flatcc_builder_create_string@@Base>

0003bd84 <flatcc_builder_end_string@@Base>:
   3bd84:	push	{r4, r5, fp, lr}
   3bd88:	add	fp, sp, #8
   3bd8c:	mov	r4, r0
   3bd90:	ldr	r0, [r0, #32]
   3bd94:	ldrh	r1, [r0, #14]
   3bd98:	cmp	r1, #6
   3bd9c:	bne	3be44 <flatcc_builder_end_string@@Base+0xc0>
   3bda0:	ldr	r2, [r0, #20]
   3bda4:	ldr	r0, [r4, #20]
   3bda8:	cmp	r2, r0
   3bdac:	bne	3be64 <flatcc_builder_end_string@@Base+0xe0>
   3bdb0:	ldr	r1, [r4, #16]
   3bdb4:	mov	r0, r4
   3bdb8:	bl	3bbfc <flatcc_builder_create_string@@Base>
   3bdbc:	mov	r5, r0
   3bdc0:	cmp	r0, #0
   3bdc4:	beq	3be3c <flatcc_builder_end_string@@Base+0xb8>
   3bdc8:	ldr	r0, [r4, #16]
   3bdcc:	ldr	r2, [r4, #20]
   3bdd0:	mov	r1, #0
   3bdd4:	bl	149d0 <memset@plt>
   3bdd8:	ldr	r0, [r4, #32]
   3bddc:	ldr	r1, [r4, #60]	; 0x3c
   3bde0:	ldr	ip, [r4, #64]	; 0x40
   3bde4:	ldr	r3, [r0, #8]
   3bde8:	str	r3, [r4, #20]
   3bdec:	ldr	r3, [r0]
   3bdf0:	str	r3, [r4, #28]
   3bdf4:	add	r1, r1, r3
   3bdf8:	ldr	r2, [r0, #4]
   3bdfc:	str	r1, [r4, #16]
   3be00:	sub	r1, ip, r3
   3be04:	cmp	r1, r2
   3be08:	movhi	r1, r2
   3be0c:	str	r1, [r4, #24]
   3be10:	ldrh	r1, [r4, #130]	; 0x82
   3be14:	ldrh	r2, [r4, #128]	; 0x80
   3be18:	cmp	r2, r1
   3be1c:	strhcc	r1, [r4, #128]	; 0x80
   3be20:	ldrh	r1, [r0, #12]
   3be24:	sub	r0, r0, #36	; 0x24
   3be28:	str	r0, [r4, #32]
   3be2c:	strh	r1, [r4, #130]	; 0x82
   3be30:	ldr	r0, [r4, #156]	; 0x9c
   3be34:	sub	r0, r0, #1
   3be38:	str	r0, [r4, #156]	; 0x9c
   3be3c:	mov	r0, r5
   3be40:	pop	{r4, r5, fp, pc}
   3be44:	ldr	r0, [pc, #56]	; 3be84 <flatcc_builder_end_string@@Base+0x100>
   3be48:	ldr	r1, [pc, #56]	; 3be88 <flatcc_builder_end_string@@Base+0x104>
   3be4c:	ldr	r3, [pc, #56]	; 3be8c <flatcc_builder_end_string@@Base+0x108>
   3be50:	movw	r2, #1732	; 0x6c4
   3be54:	add	r0, pc, r0
   3be58:	add	r1, pc, r1
   3be5c:	add	r3, pc, r3
   3be60:	bl	14a78 <__assert_fail@plt>
   3be64:	ldr	r0, [pc, #36]	; 3be90 <flatcc_builder_end_string@@Base+0x10c>
   3be68:	ldr	r1, [pc, #36]	; 3be94 <flatcc_builder_end_string@@Base+0x110>
   3be6c:	ldr	r3, [pc, #36]	; 3be98 <flatcc_builder_end_string@@Base+0x114>
   3be70:	movw	r2, #1733	; 0x6c5
   3be74:	add	r0, pc, r0
   3be78:	add	r1, pc, r1
   3be7c:	add	r3, pc, r3
   3be80:	bl	14a78 <__assert_fail@plt>
   3be84:	muleq	r1, sl, r9
   3be88:	andeq	lr, r1, sl, asr r4
   3be8c:	andeq	pc, r1, r5, asr #4
   3be90:	andeq	pc, r1, r0, ror r2	; <UNPREDICTABLE>
   3be94:	andeq	lr, r1, sl, lsr r4
   3be98:	andeq	pc, r1, r5, lsr #4

0003be9c <flatcc_builder_string_edit@@Base>:
   3be9c:	ldr	r0, [r0, #16]
   3bea0:	bx	lr

0003bea4 <flatcc_builder_string_len@@Base>:
   3bea4:	ldr	r0, [r0, #32]
   3bea8:	ldr	r0, [r0, #20]
   3beac:	bx	lr

0003beb0 <flatcc_builder_table_edit@@Base>:
   3beb0:	ldr	r2, [r0, #32]
   3beb4:	ldrh	r2, [r2, #14]
   3beb8:	cmp	r2, #3
   3bebc:	ldreq	r2, [r0, #16]
   3bec0:	ldreq	r0, [r0, #20]
   3bec4:	addeq	r0, r2, r0
   3bec8:	subeq	r0, r0, r1
   3becc:	bxeq	lr
   3bed0:	push	{fp, lr}
   3bed4:	mov	fp, sp
   3bed8:	ldr	r0, [pc, #24]	; 3bef8 <flatcc_builder_table_edit@@Base+0x48>
   3bedc:	ldr	r1, [pc, #24]	; 3befc <flatcc_builder_table_edit@@Base+0x4c>
   3bee0:	ldr	r3, [pc, #24]	; 3bf00 <flatcc_builder_table_edit@@Base+0x50>
   3bee4:	movw	r2, #1794	; 0x702
   3bee8:	add	r0, pc, r0
   3beec:	add	r1, pc, r1
   3bef0:	add	r3, pc, r3
   3bef4:	bl	14a78 <__assert_fail@plt>
   3bef8:	strdeq	lr, [r1], -r6
   3befc:	andeq	lr, r1, r6, asr #7
   3bf00:	andeq	pc, r1, r6, lsr #5

0003bf04 <flatcc_builder_table_add_copy@@Base>:
   3bf04:	push	{r4, r5, r6, sl, fp, lr}
   3bf08:	add	fp, sp, #16
   3bf0c:	mov	r4, r3
   3bf10:	ldr	r3, [fp, #8]
   3bf14:	mov	r5, r2
   3bf18:	mov	r2, r4
   3bf1c:	bl	3af38 <flatcc_builder_table_add@@Base>
   3bf20:	mov	r6, r0
   3bf24:	cmp	r0, #0
   3bf28:	beq	3bf3c <flatcc_builder_table_add_copy@@Base+0x38>
   3bf2c:	mov	r0, r6
   3bf30:	mov	r1, r5
   3bf34:	mov	r2, r4
   3bf38:	bl	14904 <memcpy@plt>
   3bf3c:	mov	r0, r6
   3bf40:	pop	{r4, r5, r6, sl, fp, pc}

0003bf44 <flatcc_builder_push_buffer_alignment@@Base>:
   3bf44:	ldrh	r1, [r0, #128]	; 0x80
   3bf48:	mov	r2, #4
   3bf4c:	strh	r2, [r0, #128]	; 0x80
   3bf50:	mov	r0, r1
   3bf54:	bx	lr

0003bf58 <flatcc_builder_pop_buffer_alignment@@Base>:
   3bf58:	ldrh	r2, [r0, #128]	; 0x80
   3bf5c:	cmp	r2, r1
   3bf60:	strhcc	r1, [r0, #128]	; 0x80
   3bf64:	bx	lr

0003bf68 <flatcc_builder_get_buffer_alignment@@Base>:
   3bf68:	ldrh	r0, [r0, #128]	; 0x80
   3bf6c:	bx	lr

0003bf70 <flatcc_builder_set_vtable_clustering@@Base>:
   3bf70:	clz	r1, r1
   3bf74:	lsr	r1, r1, #5
   3bf78:	str	r1, [r0, #180]	; 0xb4
   3bf7c:	bx	lr

0003bf80 <flatcc_builder_set_block_align@@Base>:
   3bf80:	strh	r1, [r0, #132]	; 0x84
   3bf84:	bx	lr

0003bf88 <flatcc_builder_get_level@@Base>:
   3bf88:	ldr	r0, [r0, #156]	; 0x9c
   3bf8c:	bx	lr

0003bf90 <flatcc_builder_set_max_level@@Base>:
   3bf90:	str	r1, [r0, #176]	; 0xb0
   3bf94:	ldr	r2, [r0, #160]	; 0xa0
   3bf98:	cmp	r2, r1
   3bf9c:	strlt	r1, [r0, #160]	; 0xa0
   3bfa0:	bx	lr

0003bfa4 <flatcc_builder_get_buffer_size@@Base>:
   3bfa4:	ldr	r1, [r0, #136]	; 0x88
   3bfa8:	ldr	r0, [r0, #140]	; 0x8c
   3bfac:	sub	r0, r0, r1
   3bfb0:	bx	lr

0003bfb4 <flatcc_builder_get_buffer_start@@Base>:
   3bfb4:	ldr	r0, [r0, #136]	; 0x88
   3bfb8:	bx	lr

0003bfbc <flatcc_builder_get_buffer_end@@Base>:
   3bfbc:	ldr	r0, [r0, #140]	; 0x8c
   3bfc0:	bx	lr

0003bfc4 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3bfc4:	str	r1, [r0, #172]	; 0xac
   3bfc8:	bx	lr

0003bfcc <flatcc_builder_set_identifier@@Base>:
   3bfcc:	ldr	r2, [pc, #20]	; 3bfe8 <flatcc_builder_set_identifier@@Base+0x1c>
   3bfd0:	cmp	r1, #0
   3bfd4:	ldr	r2, [pc, r2]
   3bfd8:	movne	r2, r1
   3bfdc:	ldr	r1, [r2]
   3bfe0:	str	r1, [r0, #168]	; 0xa8
   3bfe4:	bx	lr
   3bfe8:	andeq	r0, r3, r4, asr #1

0003bfec <flatcc_builder_get_type@@Base>:
   3bfec:	ldr	r0, [r0, #32]
   3bff0:	cmp	r0, #0
   3bff4:	ldrhne	r0, [r0, #14]
   3bff8:	moveq	r0, #0
   3bffc:	bx	lr

0003c000 <flatcc_builder_get_type_at@@Base>:
   3c000:	mov	r2, r0
   3c004:	cmp	r1, #1
   3c008:	mov	r0, #0
   3c00c:	ldrge	r3, [r2, #156]	; 0x9c
   3c010:	cmpge	r3, r1
   3c014:	bge	3c01c <flatcc_builder_get_type_at@@Base+0x1c>
   3c018:	bx	lr
   3c01c:	sub	r0, r1, r3
   3c020:	ldr	r1, [r2, #32]
   3c024:	add	r0, r0, r0, lsl #3
   3c028:	add	r0, r1, r0, lsl #2
   3c02c:	ldrh	r0, [r0, #14]
   3c030:	bx	lr

0003c034 <flatcc_builder_get_direct_buffer@@Base>:
   3c034:	ldr	r2, [r0, #184]	; 0xb8
   3c038:	cmp	r2, #0
   3c03c:	beq	3c050 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   3c040:	ldr	r2, [r0, #188]	; 0xbc
   3c044:	ldr	r3, [r0, #192]	; 0xc0
   3c048:	cmp	r2, r3
   3c04c:	beq	3c068 <flatcc_builder_get_direct_buffer@@Base+0x34>
   3c050:	cmp	r1, #0
   3c054:	moveq	r0, #0
   3c058:	bxeq	lr
   3c05c:	mov	r0, #0
   3c060:	str	r0, [r1]
   3c064:	bx	lr
   3c068:	cmp	r1, #0
   3c06c:	ldrne	r2, [r0, #212]	; 0xd4
   3c070:	strne	r2, [r1]
   3c074:	ldr	r0, [r0, #196]	; 0xc4
   3c078:	bx	lr

0003c07c <flatcc_builder_copy_buffer@@Base>:
   3c07c:	push	{fp, lr}
   3c080:	mov	fp, sp
   3c084:	ldr	r3, [r0, #184]	; 0xb8
   3c088:	cmp	r3, #0
   3c08c:	beq	3c0c0 <flatcc_builder_copy_buffer@@Base+0x44>
   3c090:	add	r0, r0, #188	; 0xbc
   3c094:	bl	3c7cc <flatcc_emitter_copy_buffer@@Base>
   3c098:	cmp	r0, #0
   3c09c:	popne	{fp, pc}
   3c0a0:	ldr	r0, [pc, #32]	; 3c0c8 <flatcc_builder_copy_buffer@@Base+0x4c>
   3c0a4:	ldr	r1, [pc, #32]	; 3c0cc <flatcc_builder_copy_buffer@@Base+0x50>
   3c0a8:	ldr	r3, [pc, #32]	; 3c0d0 <flatcc_builder_copy_buffer@@Base+0x54>
   3c0ac:	movw	r2, #1926	; 0x786
   3c0b0:	add	r0, pc, r0
   3c0b4:	add	r1, pc, r1
   3c0b8:	add	r3, pc, r3
   3c0bc:	bl	14a78 <__assert_fail@plt>
   3c0c0:	mov	r0, #0
   3c0c4:	pop	{fp, pc}
   3c0c8:	andeq	lr, r1, sp, ror #8
   3c0cc:	strdeq	lr, [r1], -lr	; <UNPREDICTABLE>
   3c0d0:	andeq	pc, r1, r9, ror #2

0003c0d4 <flatcc_builder_finalize_buffer@@Base>:
   3c0d4:	push	{r4, r5, r6, sl, fp, lr}
   3c0d8:	add	fp, sp, #16
   3c0dc:	mov	r5, r0
   3c0e0:	ldr	r0, [r0, #136]	; 0x88
   3c0e4:	cmp	r1, #0
   3c0e8:	ldr	r2, [r5, #140]	; 0x8c
   3c0ec:	sub	r4, r2, r0
   3c0f0:	mov	r0, r4
   3c0f4:	strne	r4, [r1]
   3c0f8:	bl	14964 <malloc@plt>
   3c0fc:	cmp	r0, #0
   3c100:	beq	3c150 <flatcc_builder_finalize_buffer@@Base+0x7c>
   3c104:	mov	r6, r0
   3c108:	ldr	r0, [r5, #184]	; 0xb8
   3c10c:	cmp	r0, #0
   3c110:	beq	3c170 <flatcc_builder_finalize_buffer@@Base+0x9c>
   3c114:	add	r0, r5, #188	; 0xbc
   3c118:	mov	r1, r6
   3c11c:	mov	r2, r4
   3c120:	bl	3c7cc <flatcc_emitter_copy_buffer@@Base>
   3c124:	cmp	r0, #0
   3c128:	movne	r0, r6
   3c12c:	popne	{r4, r5, r6, sl, fp, pc}
   3c130:	ldr	r0, [pc, #88]	; 3c190 <flatcc_builder_finalize_buffer@@Base+0xbc>
   3c134:	ldr	r1, [pc, #88]	; 3c194 <flatcc_builder_finalize_buffer@@Base+0xc0>
   3c138:	ldr	r3, [pc, #88]	; 3c198 <flatcc_builder_finalize_buffer@@Base+0xc4>
   3c13c:	movw	r2, #1926	; 0x786
   3c140:	add	r0, pc, r0
   3c144:	add	r1, pc, r1
   3c148:	add	r3, pc, r3
   3c14c:	bl	14a78 <__assert_fail@plt>
   3c150:	ldr	r0, [pc, #80]	; 3c1a8 <flatcc_builder_finalize_buffer@@Base+0xd4>
   3c154:	ldr	r1, [pc, #80]	; 3c1ac <flatcc_builder_finalize_buffer@@Base+0xd8>
   3c158:	ldr	r3, [pc, #80]	; 3c1b0 <flatcc_builder_finalize_buffer@@Base+0xdc>
   3c15c:	movw	r2, #1944	; 0x798
   3c160:	add	r0, pc, r0
   3c164:	add	r1, pc, r1
   3c168:	add	r3, pc, r3
   3c16c:	bl	14a78 <__assert_fail@plt>
   3c170:	ldr	r0, [pc, #36]	; 3c19c <flatcc_builder_finalize_buffer@@Base+0xc8>
   3c174:	ldr	r1, [pc, #36]	; 3c1a0 <flatcc_builder_finalize_buffer@@Base+0xcc>
   3c178:	ldr	r3, [pc, #36]	; 3c1a4 <flatcc_builder_finalize_buffer@@Base+0xd0>
   3c17c:	movw	r2, #1948	; 0x79c
   3c180:	add	r0, pc, r0
   3c184:	add	r1, pc, r1
   3c188:	add	r3, pc, r3
   3c18c:	bl	14a78 <__assert_fail@plt>
   3c190:	ldrdeq	lr, [r1], -sp
   3c194:	andeq	lr, r1, lr, ror #2
   3c198:	ldrdeq	pc, [r1], -r9
   3c19c:	andeq	r5, r1, lr, lsr #8
   3c1a0:	andeq	lr, r1, lr, lsr #2
   3c1a4:	ldrdeq	pc, [r1], -lr
   3c1a8:	andeq	r5, r1, lr, asr #8
   3c1ac:	andeq	lr, r1, lr, asr #2
   3c1b0:	strdeq	pc, [r1], -lr

0003c1b4 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3c1b4:	push	{r4, r5, r6, r7, fp, lr}
   3c1b8:	add	fp, sp, #16
   3c1bc:	sub	sp, sp, #8
   3c1c0:	mov	r5, r0
   3c1c4:	mov	r4, r1
   3c1c8:	ldr	r0, [r0, #136]	; 0x88
   3c1cc:	ldr	r1, [r5, #140]	; 0x8c
   3c1d0:	cmp	r4, #0
   3c1d4:	sub	r0, r1, r0
   3c1d8:	mov	r1, #0
   3c1dc:	strne	r0, [r4]
   3c1e0:	ldrh	r2, [r5, #128]	; 0x80
   3c1e4:	str	r1, [sp, #4]
   3c1e8:	add	r0, r0, r2
   3c1ec:	cmp	r2, #4
   3c1f0:	mov	r1, r2
   3c1f4:	rsb	r2, r2, #0
   3c1f8:	sub	r0, r0, #1
   3c1fc:	movls	r1, #4
   3c200:	and	r7, r0, r2
   3c204:	add	r0, sp, #4
   3c208:	mov	r2, r7
   3c20c:	bl	149c4 <posix_memalign@plt>
   3c210:	ldr	r6, [sp, #4]
   3c214:	cmp	r0, #0
   3c218:	cmpne	r6, #0
   3c21c:	bne	3c26c <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   3c220:	cmp	r6, #0
   3c224:	beq	3c274 <flatcc_builder_finalize_aligned_buffer@@Base+0xc0>
   3c228:	ldr	r0, [r5, #184]	; 0xb8
   3c22c:	cmp	r0, #0
   3c230:	beq	3c26c <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   3c234:	add	r0, r5, #188	; 0xbc
   3c238:	mov	r1, r6
   3c23c:	mov	r2, r7
   3c240:	bl	3c7cc <flatcc_emitter_copy_buffer@@Base>
   3c244:	cmp	r0, #0
   3c248:	bne	3c280 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   3c24c:	ldr	r0, [pc, #56]	; 3c28c <flatcc_builder_finalize_aligned_buffer@@Base+0xd8>
   3c250:	ldr	r1, [pc, #56]	; 3c290 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   3c254:	ldr	r3, [pc, #56]	; 3c294 <flatcc_builder_finalize_aligned_buffer@@Base+0xe0>
   3c258:	movw	r2, #1926	; 0x786
   3c25c:	add	r0, pc, r0
   3c260:	add	r1, pc, r1
   3c264:	add	r3, pc, r3
   3c268:	bl	14a78 <__assert_fail@plt>
   3c26c:	mov	r0, r6
   3c270:	bl	148f8 <free@plt>
   3c274:	mov	r6, #0
   3c278:	cmp	r4, #0
   3c27c:	strne	r6, [r4]
   3c280:	mov	r0, r6
   3c284:	sub	sp, fp, #16
   3c288:	pop	{r4, r5, r6, r7, fp, pc}
   3c28c:	andeq	lr, r1, r1, asr #5
   3c290:	andeq	lr, r1, r2, asr r0
   3c294:			; <UNDEFINED> instruction: 0x0001efbd

0003c298 <flatcc_builder_aligned_alloc@@Base>:
   3c298:	push	{fp, lr}
   3c29c:	mov	fp, sp
   3c2a0:	sub	sp, sp, #8
   3c2a4:	mov	r2, r1
   3c2a8:	mov	r1, r0
   3c2ac:	mov	r0, #0
   3c2b0:	cmp	r1, #4
   3c2b4:	str	r0, [sp, #4]
   3c2b8:	add	r0, sp, #4
   3c2bc:	movls	r1, #4
   3c2c0:	bl	149c4 <posix_memalign@plt>
   3c2c4:	mov	r1, r0
   3c2c8:	ldr	r0, [sp, #4]
   3c2cc:	cmp	r1, #0
   3c2d0:	cmpne	r0, #0
   3c2d4:	bne	3c2e0 <flatcc_builder_aligned_alloc@@Base+0x48>
   3c2d8:	mov	sp, fp
   3c2dc:	pop	{fp, pc}
   3c2e0:	bl	148f8 <free@plt>
   3c2e4:	mov	r0, #0
   3c2e8:	str	r0, [sp, #4]
   3c2ec:	mov	sp, fp
   3c2f0:	pop	{fp, pc}

0003c2f4 <flatcc_builder_aligned_free@@Base>:
   3c2f4:	b	148f8 <free@plt>

0003c2f8 <flatcc_builder_get_emit_context@@Base>:
   3c2f8:	ldr	r0, [r0, #36]	; 0x24
   3c2fc:	bx	lr

0003c300 <flatcc_emitter_recycle_page@@Base>:
   3c300:	ldr	r3, [r0]
   3c304:	mov	r2, r0
   3c308:	mvn	r0, #0
   3c30c:	cmp	r3, r1
   3c310:	ldrne	r2, [r2, #4]
   3c314:	cmpne	r2, r1
   3c318:	bne	3c320 <flatcc_emitter_recycle_page@@Base+0x20>
   3c31c:	bx	lr
   3c320:	ldr	r0, [r1, #2944]	; 0xb80
   3c324:	ldr	r2, [r1, #2948]	; 0xb84
   3c328:	str	r2, [r0, #2948]	; 0xb84
   3c32c:	ldr	r2, [r1, #2948]	; 0xb84
   3c330:	str	r0, [r2, #2944]	; 0xb80
   3c334:	ldr	r0, [r3, #2948]	; 0xb84
   3c338:	str	r3, [r1, #2944]	; 0xb80
   3c33c:	str	r0, [r1, #2948]	; 0xb84
   3c340:	str	r1, [r0, #2944]	; 0xb80
   3c344:	ldr	r0, [r1, #2944]	; 0xb80
   3c348:	str	r1, [r0, #2948]	; 0xb84
   3c34c:	mov	r0, #0
   3c350:	bx	lr

0003c354 <flatcc_emitter_reset@@Base>:
   3c354:	push	{r4, sl, fp, lr}
   3c358:	add	fp, sp, #8
   3c35c:	ldr	r1, [r0]
   3c360:	cmp	r1, #0
   3c364:	beq	3c41c <flatcc_emitter_reset@@Base+0xc8>
   3c368:	mov	r4, r0
   3c36c:	add	r2, r1, #1472	; 0x5c0
   3c370:	mov	r0, #1472	; 0x5c0
   3c374:	mov	r3, #0
   3c378:	stmib	r4, {r1, r2}
   3c37c:	str	r0, [r4, #12]
   3c380:	str	r2, [r4, #16]
   3c384:	str	r0, [r4, #20]
   3c388:	movw	r0, #64064	; 0xfa40
   3c38c:	movt	r0, #65535	; 0xffff
   3c390:	str	r0, [r1, #2952]	; 0xb88
   3c394:	ldr	r2, [r4, #32]
   3c398:	ldr	r0, [r4, #24]
   3c39c:	cmp	r2, #0
   3c3a0:	moveq	r2, r0
   3c3a4:	streq	r0, [r4, #32]
   3c3a8:	str	r3, [r4, #24]
   3c3ac:	add	r2, r2, r2, lsl #1
   3c3b0:	lsr	r2, r2, #2
   3c3b4:	add	r0, r2, r0, lsr #2
   3c3b8:	str	r0, [r4, #32]
   3c3bc:	ldr	r2, [r4, #28]
   3c3c0:	cmp	r2, r0, lsl #1
   3c3c4:	bls	3c41c <flatcc_emitter_reset@@Base+0xc8>
   3c3c8:	mov	r2, r1
   3c3cc:	ldr	r0, [r2, #2944]!	; 0xb80
   3c3d0:	cmp	r0, r1
   3c3d4:	beq	3c41c <flatcc_emitter_reset@@Base+0xc8>
   3c3d8:	ldr	r3, [r0, #2944]	; 0xb80
   3c3dc:	str	r3, [r2]
   3c3e0:	ldr	r2, [r0, #2944]	; 0xb80
   3c3e4:	str	r1, [r2, #2948]	; 0xb84
   3c3e8:	bl	148f8 <free@plt>
   3c3ec:	ldr	r0, [r4, #28]
   3c3f0:	ldr	r1, [r4, #32]
   3c3f4:	sub	r0, r0, #2944	; 0xb80
   3c3f8:	cmp	r0, r1, lsl #1
   3c3fc:	str	r0, [r4, #28]
   3c400:	popls	{r4, sl, fp, pc}
   3c404:	ldr	r1, [r4, #4]
   3c408:	ldr	r3, [r4]
   3c40c:	mov	r2, r1
   3c410:	ldr	r0, [r2, #2944]!	; 0xb80
   3c414:	cmp	r0, r3
   3c418:	bne	3c3d8 <flatcc_emitter_reset@@Base+0x84>
   3c41c:	pop	{r4, sl, fp, pc}

0003c420 <flatcc_emitter_clear@@Base>:
   3c420:	push	{r4, r5, r6, sl, fp, lr}
   3c424:	add	fp, sp, #16
   3c428:	ldr	r5, [r0]
   3c42c:	cmp	r5, #0
   3c430:	popeq	{r4, r5, r6, sl, fp, pc}
   3c434:	mov	r4, r0
   3c438:	ldr	r0, [r5, #2948]	; 0xb84
   3c43c:	mov	r6, #0
   3c440:	str	r6, [r0, #2944]	; 0xb80
   3c444:	b	3c454 <flatcc_emitter_clear@@Base+0x34>
   3c448:	mov	r5, r0
   3c44c:	ldr	r0, [r0, #2948]	; 0xb84
   3c450:	bl	148f8 <free@plt>
   3c454:	ldr	r0, [r5, #2944]	; 0xb80
   3c458:	cmp	r0, #0
   3c45c:	bne	3c448 <flatcc_emitter_clear@@Base+0x28>
   3c460:	mov	r0, r5
   3c464:	bl	148f8 <free@plt>
   3c468:	vmov.i32	q8, #0	; 0x00000000
   3c46c:	add	r0, r4, #16
   3c470:	vst1.32	{d16-d17}, [r0]
   3c474:	mov	r0, #32
   3c478:	vst1.32	{d16-d17}, [r4], r0
   3c47c:	str	r6, [r4]
   3c480:	pop	{r4, r5, r6, sl, fp, pc}

0003c484 <flatcc_emitter@@Base>:
   3c484:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c488:	add	fp, sp, #28
   3c48c:	sub	sp, sp, #4
   3c490:	mov	r6, r0
   3c494:	mov	r7, r1
   3c498:	ldr	r0, [r0, #24]
   3c49c:	ldr	r1, [fp, #8]
   3c4a0:	mov	r4, r2
   3c4a4:	cmn	r3, #1
   3c4a8:	mov	r9, r6
   3c4ac:	add	r0, r0, r1
   3c4b0:	str	r0, [r6, #24]
   3c4b4:	ble	3c5f4 <flatcc_emitter@@Base+0x170>
   3c4b8:	ldr	r0, [r9, #20]!
   3c4bc:	cmp	r0, r1
   3c4c0:	bcs	3c768 <flatcc_emitter@@Base+0x2e4>
   3c4c4:	mov	r8, #0
   3c4c8:	cmp	r4, #0
   3c4cc:	beq	3c7c0 <flatcc_emitter@@Base+0x33c>
   3c4d0:	movw	sl, #64064	; 0xfa40
   3c4d4:	movt	sl, #65535	; 0xffff
   3c4d8:	ldr	r8, [r7, #4]
   3c4dc:	cmp	r8, #0
   3c4e0:	beq	3c5e4 <flatcc_emitter@@Base+0x160>
   3c4e4:	ldr	r9, [r7]
   3c4e8:	cmp	r8, r0
   3c4ec:	mov	r5, r8
   3c4f0:	bls	3c5b0 <flatcc_emitter@@Base+0x12c>
   3c4f4:	mov	r5, r0
   3c4f8:	cmp	r5, #0
   3c4fc:	bne	3c5b0 <flatcc_emitter@@Base+0x12c>
   3c500:	ldr	r5, [r6, #4]
   3c504:	cmp	r5, #0
   3c508:	beq	3c51c <flatcc_emitter@@Base+0x98>
   3c50c:	ldr	r0, [r5, #2944]	; 0xb80
   3c510:	ldr	r1, [r6]
   3c514:	cmp	r0, r1
   3c518:	bne	3c554 <flatcc_emitter@@Base+0xd0>
   3c51c:	movw	r0, #2956	; 0xb8c
   3c520:	bl	14964 <malloc@plt>
   3c524:	cmp	r0, #0
   3c528:	beq	3c778 <flatcc_emitter@@Base+0x2f4>
   3c52c:	ldr	r1, [r6, #28]
   3c530:	cmp	r5, #0
   3c534:	add	r1, r1, #2944	; 0xb80
   3c538:	str	r1, [r6, #28]
   3c53c:	beq	3c580 <flatcc_emitter@@Base+0xfc>
   3c540:	ldr	r1, [r6]
   3c544:	str	r1, [r0, #2944]	; 0xb80
   3c548:	str	r5, [r0, #2948]	; 0xb84
   3c54c:	str	r0, [r1, #2948]	; 0xb84
   3c550:	str	r0, [r5, #2944]	; 0xb80
   3c554:	mov	r5, #2944	; 0xb80
   3c558:	str	r0, [r6, #4]
   3c55c:	str	r0, [r6, #16]
   3c560:	str	r5, [r6, #20]
   3c564:	ldr	r1, [r0, #2948]	; 0xb84
   3c568:	ldr	r1, [r1, #2952]	; 0xb88
   3c56c:	add	r1, r1, #2944	; 0xb80
   3c570:	str	r1, [r0, #2952]	; 0xb88
   3c574:	cmp	r8, r5
   3c578:	bhi	3c4f8 <flatcc_emitter@@Base+0x74>
   3c57c:	b	3c5ac <flatcc_emitter@@Base+0x128>
   3c580:	add	r1, r0, #1472	; 0x5c0
   3c584:	mov	r5, #1472	; 0x5c0
   3c588:	str	r0, [r6]
   3c58c:	stmib	r6, {r0, r1, r5}
   3c590:	str	r1, [r6, #16]
   3c594:	str	r5, [r6, #20]
   3c598:	str	r0, [r0, #2944]	; 0xb80
   3c59c:	str	r0, [r0, #2948]	; 0xb84
   3c5a0:	str	sl, [r0, #2952]	; 0xb88
   3c5a4:	cmp	r8, r5
   3c5a8:	bhi	3c4f8 <flatcc_emitter@@Base+0x74>
   3c5ac:	mov	r5, r8
   3c5b0:	ldr	r0, [r6, #16]
   3c5b4:	mov	r1, r9
   3c5b8:	mov	r2, r5
   3c5bc:	bl	14904 <memcpy@plt>
   3c5c0:	ldr	r0, [r6, #16]
   3c5c4:	ldr	r1, [r6, #20]
   3c5c8:	add	r9, r9, r5
   3c5cc:	subs	r8, r8, r5
   3c5d0:	add	r2, r0, r5
   3c5d4:	sub	r0, r1, r5
   3c5d8:	str	r2, [r6, #16]
   3c5dc:	str	r0, [r6, #20]
   3c5e0:	bne	3c4e8 <flatcc_emitter@@Base+0x64>
   3c5e4:	subs	r4, r4, #1
   3c5e8:	add	r7, r7, #8
   3c5ec:	bne	3c4d8 <flatcc_emitter@@Base+0x54>
   3c5f0:	b	3c760 <flatcc_emitter@@Base+0x2dc>
   3c5f4:	ldr	r0, [r9, #12]!
   3c5f8:	cmp	r0, r1
   3c5fc:	bcs	3c780 <flatcc_emitter@@Base+0x2fc>
   3c600:	mov	r8, #0
   3c604:	cmp	r4, #0
   3c608:	beq	3c7c0 <flatcc_emitter@@Base+0x33c>
   3c60c:	add	r0, r7, r4, lsl #3
   3c610:	movw	sl, #2952	; 0xb88
   3c614:	ldr	r8, [r0, #-4]
   3c618:	sub	r1, r0, #8
   3c61c:	str	r1, [sp]
   3c620:	cmp	r8, #0
   3c624:	beq	3c754 <flatcc_emitter@@Base+0x2d0>
   3c628:	ldr	r0, [sp]
   3c62c:	ldr	r0, [r0]
   3c630:	add	r7, r0, r8
   3c634:	ldr	r1, [r9]
   3c638:	cmp	r8, r1
   3c63c:	bls	3c724 <flatcc_emitter@@Base+0x2a0>
   3c640:	cmp	r1, #0
   3c644:	mov	r5, r1
   3c648:	bne	3c728 <flatcc_emitter@@Base+0x2a4>
   3c64c:	ldr	r5, [r6]
   3c650:	cmp	r5, #0
   3c654:	beq	3c680 <flatcc_emitter@@Base+0x1fc>
   3c658:	ldr	r0, [r5, #2948]	; 0xb84
   3c65c:	ldr	r1, [r6, #4]
   3c660:	cmp	r0, r1
   3c664:	beq	3c680 <flatcc_emitter@@Base+0x1fc>
   3c668:	ldr	r1, [r5, #2952]	; 0xb88
   3c66c:	mov	r2, r0
   3c670:	sub	r1, r1, #2944	; 0xb80
   3c674:	str	r1, [r2, #2952]!	; 0xb88
   3c678:	str	r0, [r6]
   3c67c:	b	3c6c0 <flatcc_emitter@@Base+0x23c>
   3c680:	movw	r0, #2956	; 0xb8c
   3c684:	bl	14964 <malloc@plt>
   3c688:	cmp	r0, #0
   3c68c:	beq	3c778 <flatcc_emitter@@Base+0x2f4>
   3c690:	ldr	r1, [r6, #28]
   3c694:	cmp	r5, #0
   3c698:	add	r1, r1, #2944	; 0xb80
   3c69c:	str	r1, [r6, #28]
   3c6a0:	beq	3c6ec <flatcc_emitter@@Base+0x268>
   3c6a4:	ldr	r1, [r6, #4]
   3c6a8:	add	r2, r0, sl
   3c6ac:	str	r5, [r0, #2944]	; 0xb80
   3c6b0:	str	r1, [r0, #2948]	; 0xb84
   3c6b4:	str	r0, [r5, #2948]	; 0xb84
   3c6b8:	str	r0, [r1, #2944]	; 0xb80
   3c6bc:	str	r0, [r6]
   3c6c0:	add	r3, r0, #2944	; 0xb80
   3c6c4:	mov	r1, #2944	; 0xb80
   3c6c8:	str	r3, [r6, #8]
   3c6cc:	str	r1, [r6, #12]
   3c6d0:	ldr	r0, [r0, #2944]	; 0xb80
   3c6d4:	ldr	r0, [r0, #2952]	; 0xb88
   3c6d8:	sub	r0, r0, #2944	; 0xb80
   3c6dc:	str	r0, [r2]
   3c6e0:	cmp	r8, r1
   3c6e4:	bhi	3c640 <flatcc_emitter@@Base+0x1bc>
   3c6e8:	b	3c724 <flatcc_emitter@@Base+0x2a0>
   3c6ec:	add	r2, r0, #1472	; 0x5c0
   3c6f0:	mov	r1, #1472	; 0x5c0
   3c6f4:	str	r0, [r6]
   3c6f8:	stmib	r6, {r0, r2}
   3c6fc:	str	r1, [r6, #12]
   3c700:	str	r2, [r6, #16]
   3c704:	movw	r2, #64064	; 0xfa40
   3c708:	str	r1, [r6, #20]
   3c70c:	str	r0, [r0, #2944]	; 0xb80
   3c710:	str	r0, [r0, #2948]	; 0xb84
   3c714:	movt	r2, #65535	; 0xffff
   3c718:	str	r2, [r0, #2952]	; 0xb88
   3c71c:	cmp	r8, r1
   3c720:	bhi	3c640 <flatcc_emitter@@Base+0x1bc>
   3c724:	mov	r5, r8
   3c728:	sub	r0, r1, r5
   3c72c:	sub	r7, r7, r5
   3c730:	mov	r2, r5
   3c734:	str	r0, [r6, #12]
   3c738:	mov	r1, r7
   3c73c:	ldr	r0, [r6, #8]
   3c740:	sub	r0, r0, r5
   3c744:	str	r0, [r6, #8]
   3c748:	bl	14904 <memcpy@plt>
   3c74c:	subs	r8, r8, r5
   3c750:	bne	3c634 <flatcc_emitter@@Base+0x1b0>
   3c754:	ldr	r0, [sp]
   3c758:	subs	r4, r4, #1
   3c75c:	bne	3c614 <flatcc_emitter@@Base+0x190>
   3c760:	mov	r8, #0
   3c764:	b	3c7c0 <flatcc_emitter@@Base+0x33c>
   3c768:	ldr	r5, [r6, #16]
   3c76c:	add	r2, r5, r1
   3c770:	str	r2, [r6, #16]
   3c774:	b	3c78c <flatcc_emitter@@Base+0x308>
   3c778:	mvn	r8, #0
   3c77c:	b	3c7c0 <flatcc_emitter@@Base+0x33c>
   3c780:	ldr	r2, [r6, #8]
   3c784:	sub	r5, r2, r1
   3c788:	str	r5, [r6, #8]
   3c78c:	sub	r0, r0, r1
   3c790:	mov	r8, #0
   3c794:	cmp	r4, #0
   3c798:	str	r0, [r9]
   3c79c:	beq	3c7c0 <flatcc_emitter@@Base+0x33c>
   3c7a0:	ldm	r7, {r1, r2}
   3c7a4:	mov	r0, r5
   3c7a8:	bl	14904 <memcpy@plt>
   3c7ac:	ldr	r0, [r7, #4]
   3c7b0:	add	r7, r7, #8
   3c7b4:	subs	r4, r4, #1
   3c7b8:	add	r5, r5, r0
   3c7bc:	bne	3c7a0 <flatcc_emitter@@Base+0x31c>
   3c7c0:	mov	r0, r8
   3c7c4:	sub	sp, fp, #28
   3c7c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c7cc <flatcc_emitter_copy_buffer@@Base>:
   3c7cc:	push	{r4, r5, r6, sl, fp, lr}
   3c7d0:	add	fp, sp, #16
   3c7d4:	mov	r3, r2
   3c7d8:	ldr	r2, [r0, #24]
   3c7dc:	mov	r5, #0
   3c7e0:	cmp	r2, r3
   3c7e4:	bhi	3c86c <flatcc_emitter_copy_buffer@@Base+0xa0>
   3c7e8:	mov	r4, r0
   3c7ec:	ldr	r0, [r0]
   3c7f0:	cmp	r0, #0
   3c7f4:	beq	3c86c <flatcc_emitter_copy_buffer@@Base+0xa0>
   3c7f8:	mov	r6, r1
   3c7fc:	ldr	r1, [r4, #4]
   3c800:	cmp	r0, r1
   3c804:	beq	3c874 <flatcc_emitter_copy_buffer@@Base+0xa8>
   3c808:	ldr	r0, [r4, #12]
   3c80c:	ldr	r1, [r4, #8]
   3c810:	rsb	r5, r0, #2944	; 0xb80
   3c814:	mov	r0, r6
   3c818:	mov	r2, r5
   3c81c:	bl	14904 <memcpy@plt>
   3c820:	ldm	r4, {r0, r1}
   3c824:	add	r5, r6, r5
   3c828:	ldr	r6, [r0, #2944]	; 0xb80
   3c82c:	cmp	r6, r1
   3c830:	beq	3c858 <flatcc_emitter_copy_buffer@@Base+0x8c>
   3c834:	mov	r0, r5
   3c838:	mov	r1, r6
   3c83c:	mov	r2, #2944	; 0xb80
   3c840:	bl	14904 <memcpy@plt>
   3c844:	ldr	r6, [r6, #2944]	; 0xb80
   3c848:	ldr	r0, [r4, #4]
   3c84c:	add	r5, r5, #2944	; 0xb80
   3c850:	cmp	r6, r0
   3c854:	bne	3c834 <flatcc_emitter_copy_buffer@@Base+0x68>
   3c858:	ldr	r0, [r4, #20]
   3c85c:	mov	r1, r6
   3c860:	rsb	r2, r0, #2944	; 0xb80
   3c864:	mov	r0, r5
   3c868:	bl	14904 <memcpy@plt>
   3c86c:	mov	r0, r5
   3c870:	pop	{r4, r5, r6, sl, fp, pc}
   3c874:	ldr	r1, [r4, #8]
   3c878:	mov	r0, r6
   3c87c:	bl	14904 <memcpy@plt>
   3c880:	mov	r0, r6
   3c884:	pop	{r4, r5, r6, sl, fp, pc}

0003c888 <cmetrohash64_1@@Base>:
   3c888:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c88c:	add	fp, sp, #28
   3c890:	sub	sp, sp, #44	; 0x2c
   3c894:	ldr	r1, [fp, #8]
   3c898:	movw	r5, #37345	; 0x91e1
   3c89c:	mov	r7, r2
   3c8a0:	mov	r6, r3
   3c8a4:	movw	r8, #56283	; 0xdbdb
   3c8a8:	movt	r5, #51258	; 0xc83a
   3c8ac:	movt	r8, #34376	; 0x8648
   3c8b0:	umlal	r7, r6, r1, r5
   3c8b4:	movw	r5, #24283	; 0x5edb
   3c8b8:	movw	r1, #23867	; 0x5d3b
   3c8bc:	movt	r5, #44806	; 0xaf06
   3c8c0:	movt	r1, #24802	; 0x60e2
   3c8c4:	adds	sl, r7, r5
   3c8c8:	movw	r5, #49211	; 0xc03b
   3c8cc:	adc	r4, r6, r1
   3c8d0:	subs	r1, r2, #32
   3c8d4:	add	r6, r0, r2
   3c8d8:	movt	r5, #31710	; 0x7bde
   3c8dc:	sbcs	r1, r3, #0
   3c8e0:	str	r6, [sp, #4]
   3c8e4:	bcc	3cbac <cmetrohash64_1@@Base+0x324>
   3c8e8:	movw	r8, #28837	; 0x70a5
   3c8ec:	sub	r1, r6, #32
   3c8f0:	mov	lr, sl
   3c8f4:	mov	r5, r4
   3c8f8:	str	sl, [fp, #-32]	; 0xffffffe0
   3c8fc:	str	r4, [sp, #36]	; 0x24
   3c900:	str	sl, [sp, #32]
   3c904:	str	r4, [sp, #28]
   3c908:	str	sl, [sp]
   3c90c:	str	r4, [sp, #8]
   3c910:	str	r1, [sp, #12]
   3c914:	mov	r1, r4
   3c918:	movt	r8, #12120	; 0x2f58
   3c91c:	ldr	r2, [r0]
   3c920:	ldr	r7, [r0, #8]
   3c924:	str	r1, [sp, #24]
   3c928:	ldr	r1, [sp, #32]
   3c92c:	movw	r6, #56283	; 0xdbdb
   3c930:	ldr	r9, [r0, #12]
   3c934:	movw	r3, #37345	; 0x91e1
   3c938:	mov	r4, sl
   3c93c:	mov	ip, lr
   3c940:	movt	r6, #34376	; 0x8648
   3c944:	movt	r3, #51258	; 0xc83a
   3c948:	mov	lr, r3
   3c94c:	ldr	r3, [r0, #28]
   3c950:	str	r2, [sp, #20]
   3c954:	ldr	r2, [r0, #4]
   3c958:	str	r2, [sp, #16]
   3c95c:	umull	r7, r2, r7, r6
   3c960:	adds	r7, r7, r1
   3c964:	ldr	r1, [sp, #28]
   3c968:	mla	r2, r9, r6, r2
   3c96c:	mov	r9, r5
   3c970:	ldr	r5, [sp, #36]	; 0x24
   3c974:	lsl	r6, r7, #3
   3c978:	lsr	r7, r7, #29
   3c97c:	adc	r2, r2, r1
   3c980:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3c984:	orr	r6, r6, r2, lsr #29
   3c988:	orr	r2, r7, r2, lsl #3
   3c98c:	adds	sl, r2, r1
   3c990:	ldr	r2, [r0, #24]
   3c994:	adc	r6, r6, r5
   3c998:	str	sl, [sp, #32]
   3c99c:	str	r6, [sp, #28]
   3c9a0:	umull	r2, r7, r2, r8
   3c9a4:	mla	r3, r3, r8, r7
   3c9a8:	adds	r1, r2, r1
   3c9ac:	adc	r2, r3, r5
   3c9b0:	lsl	r3, r1, #3
   3c9b4:	lsr	r1, r1, #29
   3c9b8:	orr	r1, r1, r2, lsl #3
   3c9bc:	orr	r3, r3, r2, lsr #29
   3c9c0:	adds	r1, r1, sl
   3c9c4:	str	r1, [fp, #-32]	; 0xffffffe0
   3c9c8:	adc	r1, r3, r6
   3c9cc:	str	r1, [sp, #36]	; 0x24
   3c9d0:	ldr	r1, [sp, #20]
   3c9d4:	umull	r2, r3, r1, lr
   3c9d8:	ldr	r1, [sp, #16]
   3c9dc:	adds	r2, r2, r4
   3c9e0:	lsl	r4, r2, #3
   3c9e4:	lsr	r2, r2, #29
   3c9e8:	mla	r3, r1, lr, r3
   3c9ec:	ldr	r1, [sp, #24]
   3c9f0:	adc	r3, r3, r1
   3c9f4:	orr	r2, r2, r3, lsl #3
   3c9f8:	orr	r4, r4, r3, lsr #29
   3c9fc:	movw	r3, #49211	; 0xc03b
   3ca00:	adds	sl, r2, ip
   3ca04:	ldr	r2, [r0, #16]
   3ca08:	movt	r3, #31710	; 0x7bde
   3ca0c:	adc	r1, r4, r9
   3ca10:	ldr	r4, [r0, #20]
   3ca14:	mov	r6, r3
   3ca18:	add	r0, r0, #32
   3ca1c:	umull	r2, r3, r2, r3
   3ca20:	adds	r2, r2, ip
   3ca24:	mla	r3, r4, r6, r3
   3ca28:	lsl	r7, r2, #3
   3ca2c:	adc	r3, r3, r9
   3ca30:	lsr	r2, r2, #29
   3ca34:	orr	r2, r2, r3, lsl #3
   3ca38:	orr	r4, r7, r3, lsr #29
   3ca3c:	adds	lr, r2, sl
   3ca40:	ldr	r2, [sp, #12]
   3ca44:	adc	r5, r4, r1
   3ca48:	cmp	r0, r2
   3ca4c:	bls	3c91c <cmetrohash64_1@@Base+0x94>
   3ca50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3ca54:	ldr	r3, [sp, #36]	; 0x24
   3ca58:	ldr	ip, [sp, #32]
   3ca5c:	movw	r6, #37345	; 0x91e1
   3ca60:	str	sl, [sp, #20]
   3ca64:	movw	r9, #56283	; 0xdbdb
   3ca68:	str	r1, [sp, #24]
   3ca6c:	movt	r6, #51258	; 0xc83a
   3ca70:	movt	r9, #34376	; 0x8648
   3ca74:	adds	r2, r2, sl
   3ca78:	ldr	sl, [sp, #28]
   3ca7c:	adc	r3, r3, r1
   3ca80:	umull	r2, r4, r2, r6
   3ca84:	mla	r3, r3, r6, r4
   3ca88:	adds	r2, r2, ip
   3ca8c:	lsl	r4, r2, #31
   3ca90:	adc	r3, r3, sl
   3ca94:	orr	r4, r4, r3, lsr #1
   3ca98:	lsl	r3, r3, #31
   3ca9c:	umull	r4, r7, r4, r9
   3caa0:	orr	r2, r3, r2, lsr #1
   3caa4:	mla	r2, r2, r9, r7
   3caa8:	eor	r3, r4, lr
   3caac:	eor	r8, r2, r5
   3cab0:	ldr	r5, [sp, #20]
   3cab4:	adds	r7, r3, ip
   3cab8:	adc	r4, r8, sl
   3cabc:	umull	r7, r2, r7, r9
   3cac0:	mla	r2, r4, r9, r2
   3cac4:	adds	r7, r7, r5
   3cac8:	adc	r2, r2, r1
   3cacc:	lsl	r4, r7, #31
   3cad0:	ldr	r1, [sp, #36]	; 0x24
   3cad4:	orr	r4, r4, r2, lsr #1
   3cad8:	lsl	r2, r2, #31
   3cadc:	umull	lr, r4, r4, r6
   3cae0:	orr	r2, r2, r7, lsr #1
   3cae4:	mla	r2, r2, r6, r4
   3cae8:	eor	r2, r2, r1
   3caec:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3caf0:	eor	r9, lr, r1
   3caf4:	movw	r1, #56283	; 0xdbdb
   3caf8:	adds	r7, r9, ip
   3cafc:	movt	r1, #34376	; 0x8648
   3cb00:	mov	ip, r2
   3cb04:	adc	lr, r2, sl
   3cb08:	umull	r7, r2, r7, r1
   3cb0c:	adds	r7, r7, r3
   3cb10:	mla	r2, lr, r1, r2
   3cb14:	adc	r2, r2, r8
   3cb18:	lsl	r4, r7, #31
   3cb1c:	adds	r3, r3, r5
   3cb20:	orr	r4, r4, r2, lsr #1
   3cb24:	lsl	r2, r2, #31
   3cb28:	umull	r1, r4, r4, r6
   3cb2c:	orr	r2, r2, r7, lsr #1
   3cb30:	umull	r3, r7, r3, r6
   3cb34:	mla	lr, r2, r6, r4
   3cb38:	ldr	r2, [sp, #24]
   3cb3c:	str	r1, [fp, #-32]	; 0xffffffe0
   3cb40:	adc	r4, r8, r2
   3cb44:	adds	r1, r9, r3
   3cb48:	movw	r8, #56283	; 0xdbdb
   3cb4c:	mla	r4, r4, r6, r7
   3cb50:	lsl	r7, r1, #31
   3cb54:	movt	r8, #34376	; 0x8648
   3cb58:	ldr	r6, [sp, #4]
   3cb5c:	adc	r3, ip, r4
   3cb60:	orr	r7, r7, r3, lsr #1
   3cb64:	lsl	r3, r3, #31
   3cb68:	orr	r1, r3, r1, lsr #1
   3cb6c:	eor	r3, sl, r2
   3cb70:	ldr	r2, [sp, #32]
   3cb74:	umull	r7, r4, r7, r8
   3cb78:	ldr	sl, [sp]
   3cb7c:	mla	r1, r1, r8, r4
   3cb80:	ldr	r4, [sp, #8]
   3cb84:	eor	r1, r3, r1
   3cb88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3cb8c:	eor	r1, r1, lr
   3cb90:	eor	r2, r2, r5
   3cb94:	movw	r5, #49211	; 0xc03b
   3cb98:	eor	r2, r2, r7
   3cb9c:	movt	r5, #31710	; 0x7bde
   3cba0:	eor	r2, r2, r3
   3cba4:	adds	sl, r2, sl
   3cba8:	adc	r4, r1, r4
   3cbac:	sub	r1, r6, r0
   3cbb0:	cmp	r1, #16
   3cbb4:	blt	3cd00 <cmetrohash64_1@@Base+0x478>
   3cbb8:	ldr	r1, [r0, #8]
   3cbbc:	ldr	r2, [r0, #12]
   3cbc0:	ldr	r7, [r0]
   3cbc4:	ldr	lr, [r0, #4]
   3cbc8:	str	r4, [sp, #8]
   3cbcc:	movw	r9, #18043	; 0x467b
   3cbd0:	str	sl, [sp]
   3cbd4:	movt	r9, #12846	; 0x322e
   3cbd8:	umull	r1, r3, r1, r8
   3cbdc:	mla	r2, r2, r8, r3
   3cbe0:	adds	r1, r1, sl
   3cbe4:	adc	r2, r2, r4
   3cbe8:	lsl	r3, r2, #31
   3cbec:	orr	ip, r3, r1, lsr #1
   3cbf0:	lsl	r1, r1, #31
   3cbf4:	orr	r6, r1, r2, lsr #1
   3cbf8:	umull	r3, r2, r6, r5
   3cbfc:	mla	r1, ip, r5, r2
   3cc00:	mov	r2, r0
   3cc04:	str	r1, [fp, #-32]	; 0xffffffe0
   3cc08:	movw	r1, #37345	; 0x91e1
   3cc0c:	movt	r1, #51258	; 0xc83a
   3cc10:	umull	r7, r4, r7, r1
   3cc14:	mov	r0, r1
   3cc18:	mla	r5, lr, r1, r4
   3cc1c:	ldr	r1, [sp, #8]
   3cc20:	adds	r7, r7, sl
   3cc24:	mov	r0, r2
   3cc28:	lsl	r4, r7, #31
   3cc2c:	add	r0, r0, #16
   3cc30:	adc	r5, r5, r1
   3cc34:	mov	r1, #1610612736	; 0x60000000
   3cc38:	orr	r4, r4, r5, lsr #1
   3cc3c:	umull	lr, r2, r4, r1
   3cc40:	movw	r1, #51407	; 0xc8cf
   3cc44:	movt	r1, #17989	; 0x4645
   3cc48:	mla	r1, r4, r1, r2
   3cc4c:	lsl	r2, r5, #31
   3cc50:	orr	r2, r2, r7, lsr #1
   3cc54:	add	r5, r2, r2, lsl #1
   3cc58:	add	r1, r1, r5, lsl #29
   3cc5c:	umull	r7, r5, r4, r9
   3cc60:	movw	r7, #42186	; 0xa4ca
   3cc64:	movt	r7, #26887	; 0x6907
   3cc68:	mla	r5, r4, r7, r5
   3cc6c:	mla	r5, r2, r9, r5
   3cc70:	ldr	r9, [fp, #-32]	; 0xffffffe0
   3cc74:	orr	r5, lr, r5, lsr #3
   3cc78:	mov	lr, r8
   3cc7c:	adds	r7, r3, r5
   3cc80:	movw	r5, #30400	; 0x76c0
   3cc84:	str	r7, [sp, #36]	; 0x24
   3cc88:	umull	sl, r7, r4, r8
   3cc8c:	movt	r5, #50814	; 0xc67e
   3cc90:	adc	r1, r9, r1
   3cc94:	mla	r2, r2, r8, r7
   3cc98:	eor	r8, r1, r2
   3cc9c:	mov	r2, #-536870912	; 0xe0000000
   3cca0:	umull	r2, r7, r6, r2
   3cca4:	mla	r5, r6, r5, r7
   3cca8:	movw	r7, #46599	; 0xb607
   3ccac:	movt	r7, #13299	; 0x33f3
   3ccb0:	sub	r5, r5, ip, lsl #29
   3ccb4:	umull	r1, r4, r6, r7
   3ccb8:	movw	r1, #45150	; 0xb05e
   3ccbc:	movt	r1, #5864	; 0x16e8
   3ccc0:	mla	r1, r6, r1, r4
   3ccc4:	ldr	r6, [sp, #4]
   3ccc8:	ldr	r4, [sp, #8]
   3cccc:	mla	r1, ip, r7, r1
   3ccd0:	orr	r1, r2, r1, lsr #3
   3ccd4:	ldr	r2, [sp, #36]	; 0x24
   3ccd8:	eor	r2, r2, sl
   3ccdc:	ldr	sl, [sp]
   3cce0:	adds	r1, r1, r2
   3cce4:	adc	r2, r5, r8
   3cce8:	eor	r1, r1, r3
   3ccec:	eor	r2, r2, r9
   3ccf0:	adds	sl, r1, sl
   3ccf4:	sub	r1, r6, r0
   3ccf8:	adc	r4, r2, r4
   3ccfc:	b	3cd04 <cmetrohash64_1@@Base+0x47c>
   3cd00:	mov	lr, r8
   3cd04:	movw	ip, #28837	; 0x70a5
   3cd08:	cmp	r1, #8
   3cd0c:	movt	ip, #12120	; 0x2f58
   3cd10:	bge	3cdf0 <cmetrohash64_1@@Base+0x568>
   3cd14:	cmp	r1, #4
   3cd18:	bge	3ce40 <cmetrohash64_1@@Base+0x5b8>
   3cd1c:	cmp	r1, #2
   3cd20:	blt	3cd5c <cmetrohash64_1@@Base+0x4d4>
   3cd24:	ldrb	r1, [r0]
   3cd28:	ldrb	r2, [r0, #1]
   3cd2c:	add	r0, r0, #2
   3cd30:	orr	r1, r1, r2, lsl #8
   3cd34:	umlal	sl, r4, r1, ip
   3cd38:	lsr	r2, sl, #13
   3cd3c:	lsl	r1, sl, #19
   3cd40:	orr	r2, r2, r4, lsl #19
   3cd44:	orr	r1, r1, r4, lsr #13
   3cd48:	umull	r2, r3, r2, lr
   3cd4c:	mla	r1, r1, lr, r3
   3cd50:	eor	sl, r2, sl
   3cd54:	eor	r4, r1, r4
   3cd58:	sub	r1, r6, r0
   3cd5c:	ldr	r2, [fp, #12]
   3cd60:	cmp	r1, #1
   3cd64:	blt	3cd90 <cmetrohash64_1@@Base+0x508>
   3cd68:	ldrb	r0, [r0]
   3cd6c:	umlal	sl, r4, r0, ip
   3cd70:	lsr	r1, sl, #25
   3cd74:	lsl	r0, sl, #7
   3cd78:	orr	r1, r1, r4, lsl #7
   3cd7c:	orr	r0, r0, r4, lsr #25
   3cd80:	umull	r1, r3, r1, lr
   3cd84:	mla	r0, r0, lr, r3
   3cd88:	eor	sl, r1, sl
   3cd8c:	eor	r4, r0, r4
   3cd90:	lsl	r0, sl, #31
   3cd94:	movw	r1, #37345	; 0x91e1
   3cd98:	lsl	r7, r4, #31
   3cd9c:	orr	r0, r0, r4, lsr #1
   3cda0:	orr	r7, r7, sl, lsr #1
   3cda4:	movt	r1, #51258	; 0xc83a
   3cda8:	eor	r0, r0, sl
   3cdac:	mov	r6, r1
   3cdb0:	eor	r7, r7, r4
   3cdb4:	movw	r4, #18672	; 0x48f0
   3cdb8:	umull	r1, r3, r0, r1
   3cdbc:	movt	r4, #25629	; 0x641d
   3cdc0:	mla	r3, r7, r6, r3
   3cdc4:	mov	r6, #-2147483648	; 0x80000000
   3cdc8:	umull	r6, r5, r0, r6
   3cdcc:	mla	r0, r0, r4, r5
   3cdd0:	add	r0, r0, r7, lsl #31
   3cdd4:	eor	r0, r0, r3
   3cdd8:	str	r0, [r2, #4]
   3cddc:	orr	r0, r6, r3, lsr #1
   3cde0:	eor	r0, r0, r1
   3cde4:	str	r0, [r2]
   3cde8:	sub	sp, fp, #28
   3cdec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3cdf0:	ldr	r1, [r0]
   3cdf4:	ldr	r2, [r0, #4]
   3cdf8:	add	r0, r0, #8
   3cdfc:	umull	r1, r3, r1, ip
   3ce00:	mla	r2, r2, ip, r3
   3ce04:	adds	r1, r1, sl
   3ce08:	adc	r2, r2, r4
   3ce0c:	lsl	r3, r1, #31
   3ce10:	mov	r4, r6
   3ce14:	orr	r3, r3, r2, lsr #1
   3ce18:	lsl	r6, r2, #31
   3ce1c:	umull	r3, r7, r3, lr
   3ce20:	orr	r6, r6, r1, lsr #1
   3ce24:	mla	r7, r6, lr, r7
   3ce28:	mov	r6, r4
   3ce2c:	eor	sl, r3, r1
   3ce30:	eor	r4, r7, r2
   3ce34:	sub	r1, r6, r0
   3ce38:	cmp	r1, #4
   3ce3c:	blt	3cd1c <cmetrohash64_1@@Base+0x494>
   3ce40:	ldr	r1, [r0], #4
   3ce44:	umlal	sl, r4, r1, ip
   3ce48:	lsr	r2, sl, #15
   3ce4c:	lsl	r1, sl, #17
   3ce50:	orr	r2, r2, r4, lsl #17
   3ce54:	orr	r1, r1, r4, lsr #15
   3ce58:	umull	r2, r3, r2, lr
   3ce5c:	mla	r1, r1, lr, r3
   3ce60:	eor	sl, r2, sl
   3ce64:	eor	r4, r1, r4
   3ce68:	sub	r1, r6, r0
   3ce6c:	cmp	r1, #2
   3ce70:	bge	3cd24 <cmetrohash64_1@@Base+0x49c>
   3ce74:	b	3cd5c <cmetrohash64_1@@Base+0x4d4>

0003ce78 <cmetrohash64_2@@Base>:
   3ce78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ce7c:	add	fp, sp, #28
   3ce80:	sub	sp, sp, #36	; 0x24
   3ce84:	ldr	r1, [fp, #8]
   3ce88:	movw	sl, #6389	; 0x18f5
   3ce8c:	movw	r5, #52149	; 0xcbb5
   3ce90:	mov	r7, r2
   3ce94:	mov	r6, r3
   3ce98:	movw	r4, #827	; 0x33b
   3ce9c:	add	ip, r0, r2
   3cea0:	movt	sl, #54992	; 0xd6d0
   3cea4:	movt	r5, #56292	; 0xdbe4
   3cea8:	movt	r4, #41642	; 0xa2aa
   3ceac:	str	ip, [sp, #12]
   3ceb0:	umlal	r7, r6, r1, sl
   3ceb4:	movw	r1, #13310	; 0x33fe
   3ceb8:	adds	r5, r7, r5
   3cebc:	movt	r1, #21180	; 0x52bc
   3cec0:	movw	r7, #12225	; 0x2fc1
   3cec4:	adc	lr, r6, r1
   3cec8:	movw	r6, #23337	; 0x5b29
   3cecc:	subs	r1, r2, #32
   3ced0:	movt	r7, #25241	; 0x6299
   3ced4:	movt	r6, #12476	; 0x30bc
   3ced8:	sbcs	r1, r3, #0
   3cedc:	bcc	3d178 <cmetrohash64_2@@Base+0x300>
   3cee0:	sub	r1, ip, #32
   3cee4:	mov	r9, r0
   3cee8:	mov	ip, r5
   3ceec:	mov	r8, lr
   3cef0:	mov	r0, r5
   3cef4:	mov	r4, lr
   3cef8:	mov	r6, lr
   3cefc:	mov	r2, lr
   3cf00:	str	lr, [sp, #28]
   3cf04:	str	r5, [sp, #32]
   3cf08:	str	r5, [sp, #4]
   3cf0c:	str	lr, [sp]
   3cf10:	str	r1, [sp, #16]
   3cf14:	ldr	r1, [r9, #4]
   3cf18:	ldr	r7, [r9, #8]
   3cf1c:	movw	r2, #827	; 0x33b
   3cf20:	str	r6, [sp, #20]
   3cf24:	ldr	lr, [r9]
   3cf28:	movt	r2, #41642	; 0xa2aa
   3cf2c:	mov	r3, r2
   3cf30:	str	r1, [sp, #24]
   3cf34:	mov	r1, r5
   3cf38:	ldr	r5, [r9, #12]
   3cf3c:	umull	r7, r2, r7, r2
   3cf40:	adds	r7, r7, r0
   3cf44:	ldr	r0, [sp, #28]
   3cf48:	lsl	r6, r7, #3
   3cf4c:	lsr	r7, r7, #29
   3cf50:	mla	r2, r5, r3, r2
   3cf54:	movw	r3, #23337	; 0x5b29
   3cf58:	adc	r2, r2, r4
   3cf5c:	movt	r3, #12476	; 0x30bc
   3cf60:	orr	r6, r6, r2, lsr #29
   3cf64:	orr	r2, r7, r2, lsl #3
   3cf68:	adds	r5, r2, ip
   3cf6c:	ldr	r2, [r9, #24]
   3cf70:	adc	r4, r6, r0
   3cf74:	mov	r6, r3
   3cf78:	umull	r2, r7, r2, r3
   3cf7c:	ldr	r3, [r9, #28]
   3cf80:	adds	r2, r2, ip
   3cf84:	mla	r3, r3, r6, r7
   3cf88:	lsl	r7, r2, #3
   3cf8c:	lsr	r2, r2, #29
   3cf90:	adc	r3, r3, r0
   3cf94:	mov	r0, r5
   3cf98:	orr	r2, r2, r3, lsl #3
   3cf9c:	orr	r7, r7, r3, lsr #29
   3cfa0:	adds	ip, r2, r5
   3cfa4:	adc	r2, r7, r4
   3cfa8:	ldr	r7, [sp, #24]
   3cfac:	str	r2, [sp, #28]
   3cfb0:	umull	r2, r3, lr, sl
   3cfb4:	ldr	lr, [sp, #32]
   3cfb8:	adds	r2, r2, r1
   3cfbc:	ldr	r1, [sp, #20]
   3cfc0:	mla	r3, r7, sl, r3
   3cfc4:	ldr	r7, [r9, #20]
   3cfc8:	adc	r1, r3, r1
   3cfcc:	lsl	r3, r2, #3
   3cfd0:	lsr	r2, r2, #29
   3cfd4:	orr	r3, r3, r1, lsr #29
   3cfd8:	orr	r1, r2, r1, lsl #3
   3cfdc:	ldr	r2, [r9, #16]
   3cfe0:	add	r9, r9, #32
   3cfe4:	adds	r5, r1, lr
   3cfe8:	movw	r1, #12225	; 0x2fc1
   3cfec:	movt	r1, #25241	; 0x6299
   3cff0:	adc	r6, r3, r8
   3cff4:	umull	r2, r3, r2, r1
   3cff8:	mla	r3, r7, r1, r3
   3cffc:	adds	r2, r2, lr
   3d000:	lsl	r7, r2, #3
   3d004:	adc	r3, r3, r8
   3d008:	lsr	r2, r2, #29
   3d00c:	orr	r2, r2, r3, lsl #3
   3d010:	orr	r7, r7, r3, lsr #29
   3d014:	adds	r1, r2, r5
   3d018:	str	r1, [sp, #32]
   3d01c:	ldr	r1, [sp, #16]
   3d020:	adc	r8, r7, r6
   3d024:	cmp	r9, r1
   3d028:	bls	3cf14 <cmetrohash64_2@@Base+0x9c>
   3d02c:	ldr	lr, [sp, #28]
   3d030:	adds	r2, ip, r5
   3d034:	movw	r1, #827	; 0x33b
   3d038:	str	r0, [sp, #8]
   3d03c:	str	ip, [sp, #20]
   3d040:	str	r5, [sp, #24]
   3d044:	umull	r2, r7, r2, sl
   3d048:	movt	r1, #41642	; 0xa2aa
   3d04c:	adc	r3, lr, r6
   3d050:	adds	r2, r2, r0
   3d054:	mov	r0, r1
   3d058:	mla	r3, r3, sl, r7
   3d05c:	lsl	r7, r2, #2
   3d060:	lsr	r2, r2, #30
   3d064:	adc	r3, r3, r4
   3d068:	orr	r2, r2, r3, lsl #2
   3d06c:	orr	r7, r7, r3, lsr #30
   3d070:	umull	r2, r3, r2, r1
   3d074:	mla	r3, r7, r1, r3
   3d078:	mov	r1, r4
   3d07c:	eor	ip, r3, r8
   3d080:	ldr	r3, [sp, #32]
   3d084:	ldr	r8, [sp, #8]
   3d088:	eor	r2, r2, r3
   3d08c:	adds	r7, r2, r8
   3d090:	adc	r4, ip, r4
   3d094:	umull	r7, r3, r7, r0
   3d098:	mla	r3, r4, r0, r3
   3d09c:	adds	r4, r7, r5
   3d0a0:	lsl	r7, r4, #2
   3d0a4:	adc	r3, r3, r6
   3d0a8:	lsr	r4, r4, #30
   3d0ac:	orr	r7, r7, r3, lsr #30
   3d0b0:	orr	r3, r4, r3, lsl #2
   3d0b4:	umull	r3, r4, r3, sl
   3d0b8:	mla	r4, r7, sl, r4
   3d0bc:	eor	lr, r4, lr
   3d0c0:	ldr	r4, [sp, #20]
   3d0c4:	eor	r3, r3, r4
   3d0c8:	adds	r5, r3, r8
   3d0cc:	adc	r4, lr, r1
   3d0d0:	umull	r5, r7, r5, r0
   3d0d4:	eor	r1, r1, r6
   3d0d8:	mla	r4, r4, r0, r7
   3d0dc:	ldr	r0, [sp, #24]
   3d0e0:	adds	r5, r5, r2
   3d0e4:	adc	r4, r4, ip
   3d0e8:	lsl	r7, r5, #2
   3d0ec:	lsr	r5, r5, #30
   3d0f0:	orr	r7, r7, r4, lsr #30
   3d0f4:	orr	r4, r5, r4, lsl #2
   3d0f8:	umull	r8, r5, r4, sl
   3d0fc:	adds	r2, r2, r0
   3d100:	mla	r5, r7, sl, r5
   3d104:	adc	r7, ip, r6
   3d108:	umull	r2, r4, r2, sl
   3d10c:	ldr	ip, [sp, #12]
   3d110:	movw	r6, #23337	; 0x5b29
   3d114:	mla	r7, r7, sl, r4
   3d118:	adds	r2, r3, r2
   3d11c:	movw	r4, #827	; 0x33b
   3d120:	movt	r6, #12476	; 0x30bc
   3d124:	adc	r3, lr, r7
   3d128:	lsl	r7, r2, #2
   3d12c:	lsr	r2, r2, #30
   3d130:	movt	r4, #41642	; 0xa2aa
   3d134:	ldr	lr, [sp]
   3d138:	orr	r2, r2, r3, lsl #2
   3d13c:	orr	r7, r7, r3, lsr #30
   3d140:	umull	r2, r3, r2, r4
   3d144:	mla	r3, r7, r4, r3
   3d148:	movw	r7, #12225	; 0x2fc1
   3d14c:	eor	r1, r1, r3
   3d150:	ldr	r3, [sp, #8]
   3d154:	movt	r7, #25241	; 0x6299
   3d158:	eor	r1, r1, r5
   3d15c:	ldr	r5, [sp, #4]
   3d160:	eor	r3, r3, r0
   3d164:	mov	r0, r9
   3d168:	eor	r2, r3, r2
   3d16c:	eor	r2, r2, r8
   3d170:	adds	r5, r2, r5
   3d174:	adc	lr, r1, lr
   3d178:	movw	r9, #50575	; 0xc58f
   3d17c:	sub	r1, ip, r0
   3d180:	movt	r9, #43271	; 0xa907
   3d184:	cmp	r1, #16
   3d188:	blt	3d2e0 <cmetrohash64_2@@Base+0x468>
   3d18c:	ldr	r4, [r0, #12]
   3d190:	ldr	r1, [r0]
   3d194:	ldr	r3, [r0, #4]
   3d198:	mov	r2, r6
   3d19c:	movw	r6, #50575	; 0xc58f
   3d1a0:	ldr	r8, [r0, #8]
   3d1a4:	add	r0, r0, #16
   3d1a8:	movt	r6, #43271	; 0xa907
   3d1ac:	str	r4, [sp, #32]
   3d1b0:	umull	r1, r4, r1, r7
   3d1b4:	mla	r3, r3, r7, r4
   3d1b8:	adds	r1, r1, r5
   3d1bc:	adc	sl, r3, lr
   3d1c0:	lsr	r4, r1, #29
   3d1c4:	mov	r3, #1073741824	; 0x40000000
   3d1c8:	lsl	r1, r1, #3
   3d1cc:	orr	r4, r4, sl, lsl #3
   3d1d0:	orr	r1, r1, sl, lsr #29
   3d1d4:	mov	sl, r5
   3d1d8:	umull	r9, r3, r4, r3
   3d1dc:	mla	r3, r4, r6, r3
   3d1e0:	mov	r6, #1073741824	; 0x40000000
   3d1e4:	mla	ip, r1, r6, r3
   3d1e8:	movw	r3, #5693	; 0x163d
   3d1ec:	movt	r3, #42015	; 0xa41f
   3d1f0:	umull	r5, r6, r4, r3
   3d1f4:	movw	r5, #4606	; 0x11fe
   3d1f8:	movt	r5, #10469	; 0x28e5
   3d1fc:	mla	r5, r4, r5, r6
   3d200:	mla	r5, r1, r3, r5
   3d204:	ldr	r3, [sp, #32]
   3d208:	orr	r9, r9, r5, lsr #2
   3d20c:	umull	r5, r6, r8, r7
   3d210:	adds	r5, r5, sl
   3d214:	mla	r6, r3, r7, r6
   3d218:	lsl	r7, r5, #3
   3d21c:	lsr	r5, r5, #29
   3d220:	adc	r6, r6, lr
   3d224:	orr	r5, r5, r6, lsl #3
   3d228:	orr	r7, r7, r6, lsr #29
   3d22c:	umull	r8, r3, r5, r2
   3d230:	adds	r6, r8, r9
   3d234:	mla	r3, r7, r2, r3
   3d238:	str	r6, [sp, #32]
   3d23c:	umull	r6, r4, r4, r2
   3d240:	adc	ip, r3, ip
   3d244:	mla	r1, r1, r2, r4
   3d248:	str	r6, [sp, #28]
   3d24c:	eor	r9, ip, r1
   3d250:	mov	r1, #1073741824	; 0x40000000
   3d254:	umull	r2, r4, r5, r1
   3d258:	movw	r1, #35620	; 0x8b24
   3d25c:	movt	r1, #22827	; 0x592b
   3d260:	mla	r1, r5, r1, r4
   3d264:	movw	r4, #11409	; 0x2c91
   3d268:	movt	r4, #25774	; 0x64ae
   3d26c:	add	r6, r1, r7, lsl #30
   3d270:	mov	r1, lr
   3d274:	umull	ip, lr, r5, r4
   3d278:	movw	r4, #11461	; 0x2cc5
   3d27c:	movt	r4, #2375	; 0x947
   3d280:	ldr	ip, [sp, #12]
   3d284:	mla	r5, r5, r4, lr
   3d288:	mov	lr, r1
   3d28c:	movw	r1, #11409	; 0x2c91
   3d290:	movw	r4, #827	; 0x33b
   3d294:	movt	r1, #25774	; 0x64ae
   3d298:	movt	r4, #41642	; 0xa2aa
   3d29c:	mla	r7, r7, r1, r5
   3d2a0:	ldr	r1, [sp, #32]
   3d2a4:	mov	r5, sl
   3d2a8:	movw	sl, #6389	; 0x18f5
   3d2ac:	orr	r2, r2, r7, lsr #2
   3d2b0:	ldr	r7, [sp, #28]
   3d2b4:	movt	sl, #54992	; 0xd6d0
   3d2b8:	eor	r7, r1, r7
   3d2bc:	adds	r2, r2, r7
   3d2c0:	adc	r1, r6, r9
   3d2c4:	eor	r2, r2, r8
   3d2c8:	movw	r9, #50575	; 0xc58f
   3d2cc:	eor	r1, r1, r3
   3d2d0:	adds	r5, r2, r5
   3d2d4:	movt	r9, #43271	; 0xa907
   3d2d8:	adc	lr, r1, lr
   3d2dc:	sub	r1, ip, r0
   3d2e0:	cmp	r1, #8
   3d2e4:	blt	3d33c <cmetrohash64_2@@Base+0x4c4>
   3d2e8:	ldr	r1, [r0]
   3d2ec:	ldr	r2, [r0, #4]
   3d2f0:	movw	r8, #23337	; 0x5b29
   3d2f4:	add	r0, r0, #8
   3d2f8:	movt	r8, #12476	; 0x30bc
   3d2fc:	umull	r1, r3, r1, r8
   3d300:	mla	r2, r2, r8, r3
   3d304:	adds	r1, r1, r5
   3d308:	adc	r2, r2, lr
   3d30c:	lsl	r3, r1, #28
   3d310:	orr	r3, r3, r2, lsr #4
   3d314:	lsl	r6, r2, #28
   3d318:	umull	r3, r7, r3, r4
   3d31c:	orr	r6, r6, r1, lsr #4
   3d320:	mla	r7, r6, r4, r7
   3d324:	eor	r5, r3, r1
   3d328:	sub	r1, ip, r0
   3d32c:	eor	lr, r7, r2
   3d330:	cmp	r1, #4
   3d334:	bge	3d34c <cmetrohash64_2@@Base+0x4d4>
   3d338:	b	3d378 <cmetrohash64_2@@Base+0x500>
   3d33c:	movw	r8, #23337	; 0x5b29
   3d340:	movt	r8, #12476	; 0x30bc
   3d344:	cmp	r1, #4
   3d348:	blt	3d378 <cmetrohash64_2@@Base+0x500>
   3d34c:	ldr	r1, [r0], #4
   3d350:	umlal	r5, lr, r1, r8
   3d354:	lsr	r2, r5, #15
   3d358:	lsl	r1, r5, #17
   3d35c:	orr	r2, r2, lr, lsl #17
   3d360:	orr	r1, r1, lr, lsr #15
   3d364:	umull	r2, r3, r2, r4
   3d368:	mla	r1, r1, r4, r3
   3d36c:	eor	r5, r2, r5
   3d370:	eor	lr, r1, lr
   3d374:	sub	r1, ip, r0
   3d378:	cmp	r1, #2
   3d37c:	blt	3d3b8 <cmetrohash64_2@@Base+0x540>
   3d380:	ldrb	r1, [r0]
   3d384:	ldrb	r2, [r0, #1]
   3d388:	add	r0, r0, #2
   3d38c:	orr	r1, r1, r2, lsl #8
   3d390:	umlal	r5, lr, r1, r8
   3d394:	lsr	r2, r5, #15
   3d398:	lsl	r1, r5, #17
   3d39c:	orr	r2, r2, lr, lsl #17
   3d3a0:	orr	r1, r1, lr, lsr #15
   3d3a4:	umull	r2, r3, r2, r4
   3d3a8:	mla	r1, r1, r4, r3
   3d3ac:	eor	r5, r2, r5
   3d3b0:	eor	lr, r1, lr
   3d3b4:	sub	r1, ip, r0
   3d3b8:	ldr	ip, [fp, #12]
   3d3bc:	cmp	r1, #1
   3d3c0:	blt	3d3ec <cmetrohash64_2@@Base+0x574>
   3d3c4:	ldrb	r0, [r0]
   3d3c8:	umlal	r5, lr, r0, r8
   3d3cc:	lsr	r1, r5, #23
   3d3d0:	lsl	r0, r5, #9
   3d3d4:	orr	r1, r1, lr, lsl #9
   3d3d8:	orr	r0, r0, lr, lsr #23
   3d3dc:	umull	r1, r2, r1, r4
   3d3e0:	mla	r0, r0, r4, r2
   3d3e4:	eor	r5, r1, r5
   3d3e8:	eor	lr, r0, lr
   3d3ec:	lsr	r1, r5, #28
   3d3f0:	movw	r6, #536	; 0x218
   3d3f4:	mov	r7, #1073741824	; 0x40000000
   3d3f8:	lsl	r0, r5, #4
   3d3fc:	orr	r1, r1, lr, lsl #4
   3d400:	movt	r6, #3449	; 0xd79
   3d404:	orr	r0, r0, lr, lsr #28
   3d408:	eor	r1, r1, r5
   3d40c:	adds	r5, r7, #-1073741824	; 0xc0000000
   3d410:	eor	r0, r0, lr
   3d414:	adc	r6, r9, r6
   3d418:	umull	r4, r7, r1, r5
   3d41c:	umull	r2, r3, r1, sl
   3d420:	mla	r1, r1, r6, r7
   3d424:	mla	r3, r0, sl, r3
   3d428:	mla	r0, r0, r5, r1
   3d42c:	orr	r0, r0, r3, lsr #29
   3d430:	eor	r0, r0, r3
   3d434:	str	r0, [ip, #4]
   3d438:	lsr	r0, r2, #29
   3d43c:	orr	r0, r0, r3, lsl #3
   3d440:	orr	r0, r0, r4
   3d444:	eor	r0, r0, r2
   3d448:	str	r0, [ip]
   3d44c:	sub	sp, fp, #28
   3d450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003d454 <fb_name_table_clear@@Base>:
   3d454:	push	{r4, sl, fp, lr}
   3d458:	add	fp, sp, #8
   3d45c:	mov	r4, r0
   3d460:	ldr	r0, [r0]
   3d464:	cmp	r0, #0
   3d468:	beq	3d470 <fb_name_table_clear@@Base+0x1c>
   3d46c:	bl	148f8 <free@plt>
   3d470:	vmov.i32	q8, #0	; 0x00000000
   3d474:	vst1.32	{d16-d17}, [r4]
   3d478:	pop	{r4, sl, fp, pc}

0003d47c <fb_name_table_destroy@@Base>:
   3d47c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d480:	add	fp, sp, #24
   3d484:	mov	r4, r0
   3d488:	cmp	r1, #0
   3d48c:	ldrne	r0, [r4, #12]
   3d490:	cmpne	r0, #0
   3d494:	beq	3d4d0 <fb_name_table_destroy@@Base+0x54>
   3d498:	ldr	r7, [r4]
   3d49c:	mov	r8, r2
   3d4a0:	mov	r6, r1
   3d4a4:	mov	r5, #0
   3d4a8:	ldr	r1, [r7, r5, lsl #2]
   3d4ac:	orr	r2, r1, #2
   3d4b0:	cmp	r2, #2
   3d4b4:	beq	3d4c4 <fb_name_table_destroy@@Base+0x48>
   3d4b8:	mov	r0, r8
   3d4bc:	blx	r6
   3d4c0:	ldr	r0, [r4, #12]
   3d4c4:	add	r5, r5, #1
   3d4c8:	cmp	r5, r0
   3d4cc:	bcc	3d4a8 <fb_name_table_destroy@@Base+0x2c>
   3d4d0:	ldr	r0, [r4]
   3d4d4:	cmp	r0, #0
   3d4d8:	beq	3d4e0 <fb_name_table_destroy@@Base+0x64>
   3d4dc:	bl	148f8 <free@plt>
   3d4e0:	vmov.i32	q8, #0	; 0x00000000
   3d4e4:	vst1.32	{d16-d17}, [r4]
   3d4e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003d4ec <fb_name_table_init@@Base>:
   3d4ec:	push	{r4, r5, fp, lr}
   3d4f0:	add	fp, sp, #8
   3d4f4:	mov	r4, r0
   3d4f8:	mov	r2, #4
   3d4fc:	mov	r0, #179	; 0xb3
   3d500:	mul	r3, r2, r0
   3d504:	mov	r5, r2
   3d508:	lsl	r2, r2, #1
   3d50c:	cmp	r1, r3, lsr #8
   3d510:	bhi	3d500 <fb_name_table_init@@Base+0x14>
   3d514:	mov	r0, r5
   3d518:	mov	r1, #4
   3d51c:	bl	148c8 <calloc@plt>
   3d520:	cmp	r0, #0
   3d524:	str	r0, [r4]
   3d528:	movne	r0, #0
   3d52c:	strne	r0, [r4, #4]
   3d530:	strne	r0, [r4, #8]
   3d534:	strne	r5, [r4, #12]
   3d538:	popne	{r4, r5, fp, pc}
   3d53c:	mvn	r0, #0
   3d540:	pop	{r4, r5, fp, pc}

0003d544 <fb_name_table_resize@@Base>:
   3d544:	b	3d548 <fb_name_table_resize@@Base+0x4>
   3d548:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d54c:	add	fp, sp, #24
   3d550:	sub	sp, sp, #24
   3d554:	mov	r4, r0
   3d558:	ldr	r5, [r0]
   3d55c:	ldr	r0, [r0, #8]
   3d560:	mov	r2, #4
   3d564:	cmp	r0, r1
   3d568:	movhi	r1, r0
   3d56c:	mov	r0, #179	; 0xb3
   3d570:	mul	r3, r2, r0
   3d574:	mov	r6, r2
   3d578:	lsl	r2, r2, #1
   3d57c:	cmp	r1, r3, lsr #8
   3d580:	bhi	3d570 <fb_name_table_resize@@Base+0x2c>
   3d584:	mov	r0, r6
   3d588:	mov	r1, #4
   3d58c:	bl	148c8 <calloc@plt>
   3d590:	cmp	r0, #0
   3d594:	str	r0, [sp, #8]
   3d598:	mvneq	r0, #0
   3d59c:	subeq	sp, fp, #24
   3d5a0:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   3d5a4:	mov	r7, #0
   3d5a8:	str	r6, [sp, #20]
   3d5ac:	str	r7, [sp, #12]
   3d5b0:	str	r7, [sp, #16]
   3d5b4:	ldr	r0, [r4, #12]
   3d5b8:	cmp	r0, #0
   3d5bc:	beq	3d608 <fb_name_table_resize@@Base+0xc4>
   3d5c0:	mov	r8, #3
   3d5c4:	add	r6, sp, #8
   3d5c8:	ldr	r3, [r5, r7, lsl #2]
   3d5cc:	orr	r1, r3, #2
   3d5d0:	cmp	r1, #2
   3d5d4:	beq	3d5f8 <fb_name_table_resize@@Base+0xb4>
   3d5d8:	ldr	r2, [r3, #8]
   3d5dc:	ldr	r9, [r3, #12]
   3d5e0:	mov	r0, r6
   3d5e4:	str	r8, [sp]
   3d5e8:	mov	r1, r2
   3d5ec:	mov	r2, r9
   3d5f0:	bl	3d634 <fb_name_table_insert@@Base+0x4>
   3d5f4:	ldr	r0, [r4, #12]
   3d5f8:	add	r7, r7, #1
   3d5fc:	cmp	r7, r0
   3d600:	bcc	3d5c8 <fb_name_table_resize@@Base+0x84>
   3d604:	ldr	r5, [r4]
   3d608:	cmp	r5, #0
   3d60c:	beq	3d618 <fb_name_table_resize@@Base+0xd4>
   3d610:	mov	r0, r5
   3d614:	bl	148f8 <free@plt>
   3d618:	add	r0, sp, #8
   3d61c:	vld1.64	{d16-d17}, [r0]
   3d620:	mov	r0, #0
   3d624:	vst1.32	{d16-d17}, [r4]
   3d628:	sub	sp, fp, #24
   3d62c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003d630 <fb_name_table_insert@@Base>:
   3d630:	b	3d634 <fb_name_table_insert@@Base+0x4>
   3d634:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d638:	add	fp, sp, #28
   3d63c:	sub	sp, sp, #36	; 0x24
   3d640:	cmp	r3, #2
   3d644:	str	r1, [sp, #20]
   3d648:	beq	3d7bc <fb_name_table_insert@@Base+0x18c>
   3d64c:	mov	sl, r3
   3d650:	cmp	r3, #1
   3d654:	beq	3d7dc <fb_name_table_insert@@Base+0x1ac>
   3d658:	cmp	sl, #0
   3d65c:	beq	3d7fc <fb_name_table_insert@@Base+0x1cc>
   3d660:	mov	r7, r0
   3d664:	ldr	r0, [r0, #8]
   3d668:	mov	r1, #179	; 0xb3
   3d66c:	mov	r6, r2
   3d670:	ldr	r4, [r7, #12]
   3d674:	mul	r1, r4, r1
   3d678:	cmp	r0, r1, lsr #8
   3d67c:	bcc	3d698 <fb_name_table_insert@@Base+0x68>
   3d680:	lsl	r1, r0, #1
   3d684:	mov	r0, r7
   3d688:	bl	3d548 <fb_name_table_resize@@Base+0x4>
   3d68c:	cmp	r0, #0
   3d690:	bne	3d81c <fb_name_table_insert@@Base+0x1ec>
   3d694:	ldr	r4, [r7, #12]
   3d698:	add	r0, sp, #24
   3d69c:	ldr	r9, [r7]
   3d6a0:	movw	r1, #15186	; 0x3b52
   3d6a4:	mov	r2, r6
   3d6a8:	mov	r3, #0
   3d6ac:	mov	r8, #0
   3d6b0:	str	r0, [sp, #4]
   3d6b4:	ldr	r0, [sp, #20]
   3d6b8:	movt	r1, #12137	; 0x2f69
   3d6bc:	str	r1, [sp]
   3d6c0:	bl	3c888 <cmetrohash64_1@@Base>
   3d6c4:	ldr	r2, [fp, #8]
   3d6c8:	ldr	r1, [sp, #24]
   3d6cc:	sub	r5, r4, #1
   3d6d0:	orr	r2, r2, #1
   3d6d4:	and	r0, r5, r1
   3d6d8:	cmp	r2, #3
   3d6dc:	bne	3d714 <fb_name_table_insert@@Base+0xe4>
   3d6e0:	ldr	r2, [r7, #8]
   3d6e4:	add	r2, r2, #1
   3d6e8:	str	r2, [r7, #8]
   3d6ec:	b	3d6f4 <fb_name_table_insert@@Base+0xc4>
   3d6f0:	and	r0, r1, r5
   3d6f4:	mov	r7, r9
   3d6f8:	add	r1, r1, #1
   3d6fc:	ldr	r0, [r7, r0, lsl #2]!
   3d700:	orr	r0, r0, #2
   3d704:	cmp	r0, #2
   3d708:	bne	3d6f0 <fb_name_table_insert@@Base+0xc0>
   3d70c:	mov	r4, #0
   3d710:	b	3d798 <fb_name_table_insert@@Base+0x168>
   3d714:	str	sl, [sp, #16]
   3d718:	add	sl, r1, #1
   3d71c:	str	r7, [sp, #12]
   3d720:	b	3d72c <fb_name_table_insert@@Base+0xfc>
   3d724:	and	r0, sl, r5
   3d728:	add	sl, sl, #1
   3d72c:	mov	r7, r9
   3d730:	ldr	r4, [r7, r0, lsl #2]!
   3d734:	cmp	r4, #2
   3d738:	beq	3d76c <fb_name_table_insert@@Base+0x13c>
   3d73c:	cmp	r4, #0
   3d740:	beq	3d778 <fb_name_table_insert@@Base+0x148>
   3d744:	ldr	r0, [r4, #12]
   3d748:	cmp	r0, r6
   3d74c:	bne	3d724 <fb_name_table_insert@@Base+0xf4>
   3d750:	ldr	r1, [r4, #8]
   3d754:	ldr	r0, [sp, #20]
   3d758:	mov	r2, r6
   3d75c:	bl	1491c <memcmp@plt>
   3d760:	cmp	r0, #0
   3d764:	bne	3d724 <fb_name_table_insert@@Base+0xf4>
   3d768:	b	3d7a8 <fb_name_table_insert@@Base+0x178>
   3d76c:	cmp	r8, #0
   3d770:	moveq	r8, r7
   3d774:	b	3d724 <fb_name_table_insert@@Base+0xf4>
   3d778:	ldr	r1, [sp, #12]
   3d77c:	ldr	sl, [sp, #16]
   3d780:	cmp	r8, #0
   3d784:	mov	r4, #0
   3d788:	movne	r7, r8
   3d78c:	ldr	r0, [r1, #8]
   3d790:	add	r0, r0, #1
   3d794:	str	r0, [r1, #8]
   3d798:	str	sl, [r7]
   3d79c:	mov	r0, r4
   3d7a0:	sub	sp, fp, #28
   3d7a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d7a8:	ldr	r0, [fp, #8]
   3d7ac:	ldr	sl, [sp, #16]
   3d7b0:	cmp	r0, #0
   3d7b4:	streq	sl, [r7]
   3d7b8:	b	3d79c <fb_name_table_insert@@Base+0x16c>
   3d7bc:	ldr	r0, [pc, #140]	; 3d850 <fb_name_table_insert@@Base+0x220>
   3d7c0:	ldr	r1, [pc, #140]	; 3d854 <fb_name_table_insert@@Base+0x224>
   3d7c4:	ldr	r3, [pc, #140]	; 3d858 <fb_name_table_insert@@Base+0x228>
   3d7c8:	mov	r2, #115	; 0x73
   3d7cc:	add	r0, pc, r0
   3d7d0:	add	r1, pc, r1
   3d7d4:	add	r3, pc, r3
   3d7d8:	bl	14a78 <__assert_fail@plt>
   3d7dc:	ldr	r0, [pc, #120]	; 3d85c <fb_name_table_insert@@Base+0x22c>
   3d7e0:	ldr	r1, [pc, #120]	; 3d860 <fb_name_table_insert@@Base+0x230>
   3d7e4:	ldr	r3, [pc, #120]	; 3d864 <fb_name_table_insert@@Base+0x234>
   3d7e8:	mov	r2, #116	; 0x74
   3d7ec:	add	r0, pc, r0
   3d7f0:	add	r1, pc, r1
   3d7f4:	add	r3, pc, r3
   3d7f8:	bl	14a78 <__assert_fail@plt>
   3d7fc:	ldr	r0, [pc, #64]	; 3d844 <fb_name_table_insert@@Base+0x214>
   3d800:	ldr	r1, [pc, #64]	; 3d848 <fb_name_table_insert@@Base+0x218>
   3d804:	ldr	r3, [pc, #64]	; 3d84c <fb_name_table_insert@@Base+0x21c>
   3d808:	mov	r2, #114	; 0x72
   3d80c:	add	r0, pc, r0
   3d810:	add	r1, pc, r1
   3d814:	add	r3, pc, r3
   3d818:	bl	14a78 <__assert_fail@plt>
   3d81c:	ldr	r0, [pc, #68]	; 3d868 <fb_name_table_insert@@Base+0x238>
   3d820:	ldr	r0, [pc, r0]
   3d824:	ldr	r0, [r0]
   3d828:	ldr	r1, [pc, #60]	; 3d86c <fb_name_table_insert@@Base+0x23c>
   3d82c:	ldr	r2, [pc, #60]	; 3d870 <fb_name_table_insert@@Base+0x240>
   3d830:	add	r1, pc, r1
   3d834:	add	r2, pc, r2
   3d838:	bl	149b8 <fprintf@plt>
   3d83c:	mov	r0, #1
   3d840:	bl	14994 <exit@plt>
   3d844:	andeq	r9, r1, r8, asr sp
   3d848:	andeq	r9, r1, fp, ror #26
   3d84c:	andeq	r9, r1, lr, asr #27
   3d850:	andeq	r9, r1, r0, ror #28
   3d854:	andeq	r9, r1, fp, lsr #27
   3d858:	andeq	r9, r1, lr, lsl #28
   3d85c:	andeq	r9, r1, r7, asr lr
   3d860:	andeq	r9, r1, fp, lsl #27
   3d864:	andeq	r9, r1, lr, ror #27
   3d868:	andeq	lr, r2, ip, ror r8
   3d86c:	andeq	r9, r1, r8, lsr #28
   3d870:	andeq	r9, r1, fp, lsr lr

0003d874 <fb_name_table_insert_item@@Base>:
   3d874:	push	{r4, r5, fp, lr}
   3d878:	add	fp, sp, #8
   3d87c:	sub	sp, sp, #8
   3d880:	ldrd	r4, [r1, #8]
   3d884:	mov	r3, r1
   3d888:	str	r2, [sp]
   3d88c:	mov	r1, r4
   3d890:	mov	r2, r5
   3d894:	bl	3d634 <fb_name_table_insert@@Base+0x4>
   3d898:	sub	sp, fp, #8
   3d89c:	pop	{r4, r5, fp, pc}

0003d8a0 <fb_name_table_find@@Base>:
   3d8a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d8a4:	add	fp, sp, #24
   3d8a8:	sub	sp, sp, #16
   3d8ac:	ldr	r7, [r0]
   3d8b0:	cmp	r7, #0
   3d8b4:	beq	3d934 <fb_name_table_find@@Base+0x94>
   3d8b8:	ldr	r4, [r0, #12]
   3d8bc:	mov	r8, r1
   3d8c0:	movw	r1, #15186	; 0x3b52
   3d8c4:	add	r0, sp, #8
   3d8c8:	mov	r3, #0
   3d8cc:	mov	r9, r2
   3d8d0:	movt	r1, #12137	; 0x2f69
   3d8d4:	str	r0, [sp, #4]
   3d8d8:	mov	r0, r8
   3d8dc:	str	r1, [sp]
   3d8e0:	bl	3c888 <cmetrohash64_1@@Base>
   3d8e4:	ldr	r5, [sp, #8]
   3d8e8:	sub	r4, r4, #1
   3d8ec:	b	3d8f4 <fb_name_table_find@@Base+0x54>
   3d8f0:	add	r5, r5, #1
   3d8f4:	and	r0, r5, r4
   3d8f8:	ldr	r6, [r7, r0, lsl #2]
   3d8fc:	cmp	r6, #2
   3d900:	beq	3d8f0 <fb_name_table_find@@Base+0x50>
   3d904:	cmp	r6, #0
   3d908:	beq	3d934 <fb_name_table_find@@Base+0x94>
   3d90c:	ldr	r0, [r6, #12]
   3d910:	cmp	r0, r9
   3d914:	bne	3d8f0 <fb_name_table_find@@Base+0x50>
   3d918:	ldr	r1, [r6, #8]
   3d91c:	mov	r0, r8
   3d920:	mov	r2, r9
   3d924:	bl	1491c <memcmp@plt>
   3d928:	cmp	r0, #0
   3d92c:	bne	3d8f0 <fb_name_table_find@@Base+0x50>
   3d930:	b	3d938 <fb_name_table_find@@Base+0x98>
   3d934:	mov	r6, #0
   3d938:	mov	r0, r6
   3d93c:	sub	sp, fp, #24
   3d940:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003d944 <fb_name_table_find_item@@Base>:
   3d944:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3d948:	add	fp, sp, #24
   3d94c:	sub	sp, sp, #16
   3d950:	ldr	r5, [r0]
   3d954:	cmp	r5, #0
   3d958:	beq	3d9d8 <fb_name_table_find_item@@Base+0x94>
   3d95c:	ldrd	r8, [r1, #8]
   3d960:	ldr	r4, [r0, #12]
   3d964:	movw	r1, #15186	; 0x3b52
   3d968:	add	r0, sp, #8
   3d96c:	mov	r3, #0
   3d970:	movt	r1, #12137	; 0x2f69
   3d974:	str	r0, [sp, #4]
   3d978:	str	r1, [sp]
   3d97c:	mov	r0, r8
   3d980:	mov	r2, r9
   3d984:	bl	3c888 <cmetrohash64_1@@Base>
   3d988:	ldr	r6, [sp, #8]
   3d98c:	sub	r7, r4, #1
   3d990:	b	3d998 <fb_name_table_find_item@@Base+0x54>
   3d994:	add	r6, r6, #1
   3d998:	and	r0, r6, r7
   3d99c:	ldr	r4, [r5, r0, lsl #2]
   3d9a0:	cmp	r4, #2
   3d9a4:	beq	3d994 <fb_name_table_find_item@@Base+0x50>
   3d9a8:	cmp	r4, #0
   3d9ac:	beq	3d9d8 <fb_name_table_find_item@@Base+0x94>
   3d9b0:	ldr	r0, [r4, #12]
   3d9b4:	cmp	r0, r9
   3d9b8:	bne	3d994 <fb_name_table_find_item@@Base+0x50>
   3d9bc:	ldr	r1, [r4, #8]
   3d9c0:	mov	r0, r8
   3d9c4:	mov	r2, r9
   3d9c8:	bl	1491c <memcmp@plt>
   3d9cc:	cmp	r0, #0
   3d9d0:	bne	3d994 <fb_name_table_find_item@@Base+0x50>
   3d9d4:	b	3d9dc <fb_name_table_find_item@@Base+0x98>
   3d9d8:	mov	r4, #0
   3d9dc:	mov	r0, r4
   3d9e0:	sub	sp, fp, #24
   3d9e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003d9e8 <fb_name_table_remove@@Base>:
   3d9e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d9ec:	add	fp, sp, #28
   3d9f0:	sub	sp, sp, #28
   3d9f4:	ldr	r4, [r0]
   3d9f8:	cmp	r4, #0
   3d9fc:	beq	3da98 <fb_name_table_remove@@Base+0xb0>
   3da00:	ldr	r5, [r0, #12]
   3da04:	mov	r9, r1
   3da08:	movw	r1, #15186	; 0x3b52
   3da0c:	str	r0, [sp, #12]
   3da10:	add	r0, sp, #16
   3da14:	mov	r3, #0
   3da18:	mov	sl, r2
   3da1c:	movt	r1, #12137	; 0x2f69
   3da20:	str	r0, [sp, #4]
   3da24:	mov	r0, r9
   3da28:	str	r1, [sp]
   3da2c:	bl	3c888 <cmetrohash64_1@@Base>
   3da30:	ldr	r6, [sp, #16]
   3da34:	sub	r5, r5, #1
   3da38:	b	3da40 <fb_name_table_remove@@Base+0x58>
   3da3c:	add	r6, r6, #1
   3da40:	and	r8, r6, r5
   3da44:	ldr	r7, [r4, r8, lsl #2]
   3da48:	cmp	r7, #2
   3da4c:	beq	3da3c <fb_name_table_remove@@Base+0x54>
   3da50:	cmp	r7, #0
   3da54:	beq	3da98 <fb_name_table_remove@@Base+0xb0>
   3da58:	ldr	r0, [r7, #12]
   3da5c:	cmp	r0, sl
   3da60:	bne	3da3c <fb_name_table_remove@@Base+0x54>
   3da64:	ldr	r1, [r7, #8]
   3da68:	mov	r0, r9
   3da6c:	mov	r2, sl
   3da70:	bl	1491c <memcmp@plt>
   3da74:	cmp	r0, #0
   3da78:	bne	3da3c <fb_name_table_remove@@Base+0x54>
   3da7c:	ldr	r1, [sp, #12]
   3da80:	mov	r0, #2
   3da84:	str	r0, [r4, r8, lsl #2]
   3da88:	ldr	r0, [r1, #8]
   3da8c:	sub	r0, r0, #1
   3da90:	str	r0, [r1, #8]
   3da94:	b	3da9c <fb_name_table_remove@@Base+0xb4>
   3da98:	mov	r7, #0
   3da9c:	mov	r0, r7
   3daa0:	sub	sp, fp, #28
   3daa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003daa8 <fb_name_table_remove_item@@Base>:
   3daa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3daac:	add	fp, sp, #28
   3dab0:	sub	sp, sp, #28
   3dab4:	ldr	r6, [r0]
   3dab8:	cmp	r6, #0
   3dabc:	beq	3db58 <fb_name_table_remove_item@@Base+0xb0>
   3dac0:	ldrd	r8, [r1, #8]
   3dac4:	ldr	r4, [r0, #12]
   3dac8:	movw	r1, #15186	; 0x3b52
   3dacc:	str	r0, [sp, #12]
   3dad0:	add	r0, sp, #16
   3dad4:	mov	r3, #0
   3dad8:	movt	r1, #12137	; 0x2f69
   3dadc:	str	r0, [sp, #4]
   3dae0:	str	r1, [sp]
   3dae4:	mov	r0, r8
   3dae8:	mov	r2, r9
   3daec:	bl	3c888 <cmetrohash64_1@@Base>
   3daf0:	ldr	r7, [sp, #16]
   3daf4:	sub	r4, r4, #1
   3daf8:	b	3db00 <fb_name_table_remove_item@@Base+0x58>
   3dafc:	add	r7, r7, #1
   3db00:	and	sl, r7, r4
   3db04:	ldr	r5, [r6, sl, lsl #2]
   3db08:	cmp	r5, #2
   3db0c:	beq	3dafc <fb_name_table_remove_item@@Base+0x54>
   3db10:	cmp	r5, #0
   3db14:	beq	3db58 <fb_name_table_remove_item@@Base+0xb0>
   3db18:	ldr	r0, [r5, #12]
   3db1c:	cmp	r0, r9
   3db20:	bne	3dafc <fb_name_table_remove_item@@Base+0x54>
   3db24:	ldr	r1, [r5, #8]
   3db28:	mov	r0, r8
   3db2c:	mov	r2, r9
   3db30:	bl	1491c <memcmp@plt>
   3db34:	cmp	r0, #0
   3db38:	bne	3dafc <fb_name_table_remove_item@@Base+0x54>
   3db3c:	ldr	r1, [sp, #12]
   3db40:	mov	r0, #2
   3db44:	str	r0, [r6, sl, lsl #2]
   3db48:	ldr	r0, [r1, #8]
   3db4c:	sub	r0, r0, #1
   3db50:	str	r0, [r1, #8]
   3db54:	b	3db5c <fb_name_table_remove_item@@Base+0xb4>
   3db58:	mov	r5, #0
   3db5c:	mov	r0, r5
   3db60:	sub	sp, fp, #28
   3db64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003db68 <fb_name_table_visit@@Base>:
   3db68:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3db6c:	add	fp, sp, #24
   3db70:	mov	r6, r0
   3db74:	ldr	r0, [r0, #12]
   3db78:	cmp	r0, #0
   3db7c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3db80:	ldr	r7, [r6]
   3db84:	mov	r8, r2
   3db88:	mov	r5, r1
   3db8c:	mov	r4, #0
   3db90:	ldr	r1, [r7, r4, lsl #2]
   3db94:	orr	r2, r1, #2
   3db98:	cmp	r2, #2
   3db9c:	beq	3dbac <fb_name_table_visit@@Base+0x44>
   3dba0:	mov	r0, r8
   3dba4:	blx	r5
   3dba8:	ldr	r0, [r6, #12]
   3dbac:	add	r4, r4, #1
   3dbb0:	cmp	r4, r0
   3dbb4:	bcc	3db90 <fb_name_table_visit@@Base+0x28>
   3dbb8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003dbbc <fb_value_set_clear@@Base>:
   3dbbc:	push	{r4, sl, fp, lr}
   3dbc0:	add	fp, sp, #8
   3dbc4:	mov	r4, r0
   3dbc8:	ldr	r0, [r0]
   3dbcc:	cmp	r0, #0
   3dbd0:	beq	3dbd8 <fb_value_set_clear@@Base+0x1c>
   3dbd4:	bl	148f8 <free@plt>
   3dbd8:	vmov.i32	q8, #0	; 0x00000000
   3dbdc:	vst1.32	{d16-d17}, [r4]
   3dbe0:	pop	{r4, sl, fp, pc}

0003dbe4 <fb_value_set_destroy@@Base>:
   3dbe4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3dbe8:	add	fp, sp, #24
   3dbec:	mov	r4, r0
   3dbf0:	cmp	r1, #0
   3dbf4:	ldrne	r0, [r4, #12]
   3dbf8:	cmpne	r0, #0
   3dbfc:	beq	3dc38 <fb_value_set_destroy@@Base+0x54>
   3dc00:	ldr	r7, [r4]
   3dc04:	mov	r8, r2
   3dc08:	mov	r6, r1
   3dc0c:	mov	r5, #0
   3dc10:	ldr	r1, [r7, r5, lsl #2]
   3dc14:	orr	r2, r1, #2
   3dc18:	cmp	r2, #2
   3dc1c:	beq	3dc2c <fb_value_set_destroy@@Base+0x48>
   3dc20:	mov	r0, r8
   3dc24:	blx	r6
   3dc28:	ldr	r0, [r4, #12]
   3dc2c:	add	r5, r5, #1
   3dc30:	cmp	r5, r0
   3dc34:	bcc	3dc10 <fb_value_set_destroy@@Base+0x2c>
   3dc38:	ldr	r0, [r4]
   3dc3c:	cmp	r0, #0
   3dc40:	beq	3dc48 <fb_value_set_destroy@@Base+0x64>
   3dc44:	bl	148f8 <free@plt>
   3dc48:	vmov.i32	q8, #0	; 0x00000000
   3dc4c:	vst1.32	{d16-d17}, [r4]
   3dc50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003dc54 <fb_value_set_init@@Base>:
   3dc54:	push	{r4, r5, fp, lr}
   3dc58:	add	fp, sp, #8
   3dc5c:	mov	r4, r0
   3dc60:	mov	r2, #4
   3dc64:	mov	r0, #179	; 0xb3
   3dc68:	mul	r3, r2, r0
   3dc6c:	mov	r5, r2
   3dc70:	lsl	r2, r2, #1
   3dc74:	cmp	r1, r3, lsr #8
   3dc78:	bhi	3dc68 <fb_value_set_init@@Base+0x14>
   3dc7c:	mov	r0, r5
   3dc80:	mov	r1, #4
   3dc84:	bl	148c8 <calloc@plt>
   3dc88:	cmp	r0, #0
   3dc8c:	str	r0, [r4]
   3dc90:	movne	r0, #0
   3dc94:	strne	r0, [r4, #4]
   3dc98:	strne	r0, [r4, #8]
   3dc9c:	strne	r5, [r4, #12]
   3dca0:	popne	{r4, r5, fp, pc}
   3dca4:	mvn	r0, #0
   3dca8:	pop	{r4, r5, fp, pc}

0003dcac <fb_value_set_resize@@Base>:
   3dcac:	b	3dcb0 <fb_value_set_resize@@Base+0x4>
   3dcb0:	push	{r4, r5, r6, r7, fp, lr}
   3dcb4:	add	fp, sp, #16
   3dcb8:	sub	sp, sp, #16
   3dcbc:	mov	r4, r0
   3dcc0:	ldr	r5, [r0]
   3dcc4:	ldr	r0, [r0, #8]
   3dcc8:	mov	r2, #4
   3dccc:	cmp	r0, r1
   3dcd0:	movhi	r1, r0
   3dcd4:	mov	r0, #179	; 0xb3
   3dcd8:	mul	r3, r2, r0
   3dcdc:	mov	r6, r2
   3dce0:	lsl	r2, r2, #1
   3dce4:	cmp	r1, r3, lsr #8
   3dce8:	bhi	3dcd8 <fb_value_set_resize@@Base+0x2c>
   3dcec:	mov	r0, r6
   3dcf0:	mov	r1, #4
   3dcf4:	bl	148c8 <calloc@plt>
   3dcf8:	cmp	r0, #0
   3dcfc:	str	r0, [sp]
   3dd00:	mvneq	r0, #0
   3dd04:	subeq	sp, fp, #16
   3dd08:	popeq	{r4, r5, r6, r7, fp, pc}
   3dd0c:	mov	r7, #0
   3dd10:	str	r6, [sp, #12]
   3dd14:	str	r7, [sp, #4]
   3dd18:	str	r7, [sp, #8]
   3dd1c:	ldr	r0, [r4, #12]
   3dd20:	cmp	r0, #0
   3dd24:	beq	3dd60 <fb_value_set_resize@@Base+0xb4>
   3dd28:	mov	r6, sp
   3dd2c:	ldr	r1, [r5, r7, lsl #2]
   3dd30:	orr	r2, r1, #2
   3dd34:	cmp	r2, #2
   3dd38:	beq	3dd50 <fb_value_set_resize@@Base+0xa4>
   3dd3c:	mov	r0, r6
   3dd40:	mov	r2, r1
   3dd44:	mov	r3, #3
   3dd48:	bl	3dd94 <fb_value_set_insert@@Base+0xc>
   3dd4c:	ldr	r0, [r4, #12]
   3dd50:	add	r7, r7, #1
   3dd54:	cmp	r7, r0
   3dd58:	bcc	3dd2c <fb_value_set_resize@@Base+0x80>
   3dd5c:	ldr	r5, [r4]
   3dd60:	cmp	r5, #0
   3dd64:	beq	3dd70 <fb_value_set_resize@@Base+0xc4>
   3dd68:	mov	r0, r5
   3dd6c:	bl	148f8 <free@plt>
   3dd70:	mov	r0, sp
   3dd74:	vld1.64	{d16-d17}, [r0]
   3dd78:	mov	r0, #0
   3dd7c:	vst1.32	{d16-d17}, [r4]
   3dd80:	sub	sp, fp, #16
   3dd84:	pop	{r4, r5, r6, r7, fp, pc}

0003dd88 <fb_value_set_insert@@Base>:
   3dd88:	mov	r2, r3
   3dd8c:	ldr	r3, [sp]
   3dd90:	b	3dd94 <fb_value_set_insert@@Base+0xc>
   3dd94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3dd98:	add	fp, sp, #28
   3dd9c:	sub	sp, sp, #12
   3dda0:	cmp	r2, #2
   3dda4:	beq	3df80 <fb_value_set_insert@@Base+0x1f8>
   3dda8:	mov	r5, r2
   3ddac:	cmp	r2, #1
   3ddb0:	beq	3dfa0 <fb_value_set_insert@@Base+0x218>
   3ddb4:	cmp	r5, #0
   3ddb8:	beq	3dfc0 <fb_value_set_insert@@Base+0x238>
   3ddbc:	mov	sl, r1
   3ddc0:	mov	r8, r0
   3ddc4:	ldr	r1, [r0, #8]
   3ddc8:	ldr	r0, [r0, #12]
   3ddcc:	mov	r2, #179	; 0xb3
   3ddd0:	mov	r6, r3
   3ddd4:	mul	r2, r0, r2
   3ddd8:	cmp	r1, r2, lsr #8
   3dddc:	bcc	3ddf8 <fb_value_set_insert@@Base+0x70>
   3dde0:	lsl	r1, r1, #1
   3dde4:	mov	r0, r8
   3dde8:	bl	3dcb0 <fb_value_set_resize@@Base+0x4>
   3ddec:	cmp	r0, #0
   3ddf0:	bne	3dfe0 <fb_value_set_insert@@Base+0x258>
   3ddf4:	ldr	r0, [r8, #12]
   3ddf8:	ldrh	r3, [sl, #8]
   3ddfc:	ldr	r4, [r8]
   3de00:	sub	r9, r0, #1
   3de04:	cmp	r3, #6
   3de08:	beq	3de48 <fb_value_set_insert@@Base+0xc0>
   3de0c:	cmp	r3, #5
   3de10:	beq	3de34 <fb_value_set_insert@@Base+0xac>
   3de14:	mov	r2, #0
   3de18:	cmp	r3, #4
   3de1c:	bne	3de64 <fb_value_set_insert@@Base+0xdc>
   3de20:	ldr	r0, [sl]
   3de24:	movw	r2, #15188	; 0x3b54
   3de28:	movt	r2, #12137	; 0x2f69
   3de2c:	add	r2, r2, #2
   3de30:	b	3de54 <fb_value_set_insert@@Base+0xcc>
   3de34:	ldr	r0, [sl]
   3de38:	movw	r2, #15188	; 0x3b54
   3de3c:	movt	r2, #12137	; 0x2f69
   3de40:	add	r2, r2, #3
   3de44:	b	3de54 <fb_value_set_insert@@Base+0xcc>
   3de48:	ldrb	r0, [sl]
   3de4c:	movw	r2, #15188	; 0x3b54
   3de50:	movt	r2, #12137	; 0x2f69
   3de54:	eor	r0, r0, r2
   3de58:	movw	r2, #31153	; 0x79b1
   3de5c:	movt	r2, #40503	; 0x9e37
   3de60:	mul	r2, r0, r2
   3de64:	orr	r7, r6, #1
   3de68:	and	r0, r2, r9
   3de6c:	cmp	r7, #3
   3de70:	bne	3dea8 <fb_value_set_insert@@Base+0x120>
   3de74:	ldr	r3, [r8, #8]
   3de78:	add	r3, r3, #1
   3de7c:	str	r3, [r8, #8]
   3de80:	add	r3, r2, #1
   3de84:	b	3de90 <fb_value_set_insert@@Base+0x108>
   3de88:	and	r0, r3, r9
   3de8c:	add	r3, r3, #1
   3de90:	mov	r2, r4
   3de94:	ldr	r0, [r2, r0, lsl #2]!
   3de98:	orr	r0, r0, #2
   3de9c:	cmp	r0, #2
   3dea0:	bne	3de88 <fb_value_set_insert@@Base+0x100>
   3dea4:	b	3df70 <fb_value_set_insert@@Base+0x1e8>
   3dea8:	str	r6, [sp, #4]
   3deac:	add	r7, r2, #1
   3deb0:	mov	r6, #0
   3deb4:	str	r5, [sp, #8]
   3deb8:	b	3dec4 <fb_value_set_insert@@Base+0x13c>
   3debc:	and	r0, r7, r9
   3dec0:	add	r7, r7, #1
   3dec4:	mov	r2, r4
   3dec8:	ldr	r0, [r2, r0, lsl #2]!
   3decc:	cmp	r0, #2
   3ded0:	beq	3df24 <fb_value_set_insert@@Base+0x19c>
   3ded4:	cmp	r0, #0
   3ded8:	beq	3df58 <fb_value_set_insert@@Base+0x1d0>
   3dedc:	ldrh	r5, [r0, #8]
   3dee0:	cmp	r3, r5
   3dee4:	bne	3debc <fb_value_set_insert@@Base+0x134>
   3dee8:	cmp	r3, #4
   3deec:	beq	3df00 <fb_value_set_insert@@Base+0x178>
   3def0:	cmp	r3, #6
   3def4:	beq	3df30 <fb_value_set_insert@@Base+0x1a8>
   3def8:	cmp	r3, #5
   3defc:	bne	3debc <fb_value_set_insert@@Base+0x134>
   3df00:	ldr	ip, [r0]
   3df04:	ldr	r5, [r0, #4]
   3df08:	ldr	lr, [sl]
   3df0c:	ldr	r1, [sl, #4]
   3df10:	eor	r1, r1, r5
   3df14:	eor	r5, lr, ip
   3df18:	orrs	r1, r5, r1
   3df1c:	bne	3debc <fb_value_set_insert@@Base+0x134>
   3df20:	b	3df40 <fb_value_set_insert@@Base+0x1b8>
   3df24:	cmp	r6, #0
   3df28:	moveq	r6, r2
   3df2c:	b	3debc <fb_value_set_insert@@Base+0x134>
   3df30:	ldrb	r1, [r0]
   3df34:	ldrb	r5, [sl]
   3df38:	cmp	r5, r1
   3df3c:	bne	3debc <fb_value_set_insert@@Base+0x134>
   3df40:	ldr	r1, [sp, #4]
   3df44:	ldr	r5, [sp, #8]
   3df48:	cmp	r1, #0
   3df4c:	streq	r5, [r2]
   3df50:	sub	sp, fp, #28
   3df54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3df58:	ldr	r0, [r8, #8]
   3df5c:	ldr	r5, [sp, #8]
   3df60:	cmp	r6, #0
   3df64:	movne	r2, r6
   3df68:	add	r0, r0, #1
   3df6c:	str	r0, [r8, #8]
   3df70:	mov	r0, #0
   3df74:	str	r5, [r2]
   3df78:	sub	sp, fp, #28
   3df7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3df80:	ldr	r0, [pc, #140]	; 3e014 <fb_value_set_insert@@Base+0x28c>
   3df84:	ldr	r1, [pc, #140]	; 3e018 <fb_value_set_insert@@Base+0x290>
   3df88:	ldr	r3, [pc, #140]	; 3e01c <fb_value_set_insert@@Base+0x294>
   3df8c:	mov	r2, #115	; 0x73
   3df90:	add	r0, pc, r0
   3df94:	add	r1, pc, r1
   3df98:	add	r3, pc, r3
   3df9c:	bl	14a78 <__assert_fail@plt>
   3dfa0:	ldr	r0, [pc, #120]	; 3e020 <fb_value_set_insert@@Base+0x298>
   3dfa4:	ldr	r1, [pc, #120]	; 3e024 <fb_value_set_insert@@Base+0x29c>
   3dfa8:	ldr	r3, [pc, #120]	; 3e028 <fb_value_set_insert@@Base+0x2a0>
   3dfac:	mov	r2, #116	; 0x74
   3dfb0:	add	r0, pc, r0
   3dfb4:	add	r1, pc, r1
   3dfb8:	add	r3, pc, r3
   3dfbc:	bl	14a78 <__assert_fail@plt>
   3dfc0:	ldr	r0, [pc, #64]	; 3e008 <fb_value_set_insert@@Base+0x280>
   3dfc4:	ldr	r1, [pc, #64]	; 3e00c <fb_value_set_insert@@Base+0x284>
   3dfc8:	ldr	r3, [pc, #64]	; 3e010 <fb_value_set_insert@@Base+0x288>
   3dfcc:	mov	r2, #114	; 0x72
   3dfd0:	add	r0, pc, r0
   3dfd4:	add	r1, pc, r1
   3dfd8:	add	r3, pc, r3
   3dfdc:	bl	14a78 <__assert_fail@plt>
   3dfe0:	ldr	r0, [pc, #68]	; 3e02c <fb_value_set_insert@@Base+0x2a4>
   3dfe4:	ldr	r0, [pc, r0]
   3dfe8:	ldr	r0, [r0]
   3dfec:	ldr	r1, [pc, #60]	; 3e030 <fb_value_set_insert@@Base+0x2a8>
   3dff0:	ldr	r2, [pc, #60]	; 3e034 <fb_value_set_insert@@Base+0x2ac>
   3dff4:	add	r1, pc, r1
   3dff8:	add	r2, pc, r2
   3dffc:	bl	149b8 <fprintf@plt>
   3e000:	mov	r0, #1
   3e004:	bl	14994 <exit@plt>
   3e008:	muleq	r1, r4, r5
   3e00c:	andeq	r9, r1, r7, lsr #11
   3e010:	andeq	r9, r1, sl, lsl #12
   3e014:	muleq	r1, ip, r6
   3e018:	andeq	r9, r1, r7, ror #11
   3e01c:	andeq	r9, r1, sl, asr #12
   3e020:	muleq	r1, r3, r6
   3e024:	andeq	r9, r1, r7, asr #11
   3e028:	andeq	r9, r1, sl, lsr #12
   3e02c:	strheq	lr, [r2], -r8
   3e030:	andeq	r9, r1, r4, ror #12
   3e034:	andeq	r9, r1, r7, ror r6

0003e038 <fb_value_set_insert_item@@Base>:
   3e038:	mov	r3, r2
   3e03c:	mov	r2, r1
   3e040:	b	3dd94 <fb_value_set_insert@@Base+0xc>

0003e044 <fb_value_set_find@@Base>:
   3e044:	push	{r4, r5, r6, r7, fp, lr}
   3e048:	add	fp, sp, #16
   3e04c:	ldr	ip, [r0]
   3e050:	cmp	ip, #0
   3e054:	beq	3e138 <fb_value_set_find@@Base+0xf4>
   3e058:	ldrh	lr, [r1, #8]
   3e05c:	ldr	r0, [r0, #12]
   3e060:	cmp	lr, #6
   3e064:	beq	3e090 <fb_value_set_find@@Base+0x4c>
   3e068:	cmp	lr, #5
   3e06c:	beq	3e0a0 <fb_value_set_find@@Base+0x5c>
   3e070:	mov	r2, #0
   3e074:	cmp	lr, #4
   3e078:	bne	3e0c0 <fb_value_set_find@@Base+0x7c>
   3e07c:	ldr	r2, [r1]
   3e080:	movw	r3, #15188	; 0x3b54
   3e084:	movt	r3, #12137	; 0x2f69
   3e088:	add	r3, r3, #2
   3e08c:	b	3e0b0 <fb_value_set_find@@Base+0x6c>
   3e090:	ldrb	r2, [r1]
   3e094:	movw	r3, #15188	; 0x3b54
   3e098:	movt	r3, #12137	; 0x2f69
   3e09c:	b	3e0b0 <fb_value_set_find@@Base+0x6c>
   3e0a0:	ldr	r2, [r1]
   3e0a4:	movw	r3, #15188	; 0x3b54
   3e0a8:	movt	r3, #12137	; 0x2f69
   3e0ac:	add	r3, r3, #3
   3e0b0:	eor	r2, r2, r3
   3e0b4:	movw	r3, #31153	; 0x79b1
   3e0b8:	movt	r3, #40503	; 0x9e37
   3e0bc:	mul	r2, r2, r3
   3e0c0:	sub	r3, r0, #1
   3e0c4:	b	3e0cc <fb_value_set_find@@Base+0x88>
   3e0c8:	add	r2, r2, #1
   3e0cc:	and	r0, r2, r3
   3e0d0:	ldr	r0, [ip, r0, lsl #2]
   3e0d4:	cmp	r0, #2
   3e0d8:	beq	3e0c8 <fb_value_set_find@@Base+0x84>
   3e0dc:	cmp	r0, #0
   3e0e0:	beq	3e138 <fb_value_set_find@@Base+0xf4>
   3e0e4:	ldrh	r4, [r0, #8]
   3e0e8:	cmp	lr, r4
   3e0ec:	bne	3e0c8 <fb_value_set_find@@Base+0x84>
   3e0f0:	cmp	lr, #4
   3e0f4:	beq	3e108 <fb_value_set_find@@Base+0xc4>
   3e0f8:	cmp	lr, #6
   3e0fc:	beq	3e124 <fb_value_set_find@@Base+0xe0>
   3e100:	cmp	lr, #5
   3e104:	bne	3e0c8 <fb_value_set_find@@Base+0x84>
   3e108:	ldrd	r4, [r0]
   3e10c:	ldrd	r6, [r1]
   3e110:	eor	r5, r7, r5
   3e114:	eor	r4, r6, r4
   3e118:	orrs	r4, r4, r5
   3e11c:	popeq	{r4, r5, r6, r7, fp, pc}
   3e120:	b	3e0c8 <fb_value_set_find@@Base+0x84>
   3e124:	ldrb	r4, [r0]
   3e128:	ldrb	r5, [r1]
   3e12c:	cmp	r5, r4
   3e130:	bne	3e0c8 <fb_value_set_find@@Base+0x84>
   3e134:	pop	{r4, r5, r6, r7, fp, pc}
   3e138:	mov	r0, #0
   3e13c:	pop	{r4, r5, r6, r7, fp, pc}

0003e140 <fb_value_set_find_item@@Base>:
   3e140:	push	{r4, r5, r6, r7, fp, lr}
   3e144:	add	fp, sp, #16
   3e148:	ldr	ip, [r0]
   3e14c:	cmp	ip, #0
   3e150:	beq	3e234 <fb_value_set_find_item@@Base+0xf4>
   3e154:	ldrh	lr, [r1, #8]
   3e158:	ldr	r0, [r0, #12]
   3e15c:	cmp	lr, #6
   3e160:	beq	3e18c <fb_value_set_find_item@@Base+0x4c>
   3e164:	cmp	lr, #5
   3e168:	beq	3e19c <fb_value_set_find_item@@Base+0x5c>
   3e16c:	mov	r2, #0
   3e170:	cmp	lr, #4
   3e174:	bne	3e1bc <fb_value_set_find_item@@Base+0x7c>
   3e178:	ldr	r2, [r1]
   3e17c:	movw	r3, #15188	; 0x3b54
   3e180:	movt	r3, #12137	; 0x2f69
   3e184:	add	r3, r3, #2
   3e188:	b	3e1ac <fb_value_set_find_item@@Base+0x6c>
   3e18c:	ldrb	r2, [r1]
   3e190:	movw	r3, #15188	; 0x3b54
   3e194:	movt	r3, #12137	; 0x2f69
   3e198:	b	3e1ac <fb_value_set_find_item@@Base+0x6c>
   3e19c:	ldr	r2, [r1]
   3e1a0:	movw	r3, #15188	; 0x3b54
   3e1a4:	movt	r3, #12137	; 0x2f69
   3e1a8:	add	r3, r3, #3
   3e1ac:	eor	r2, r2, r3
   3e1b0:	movw	r3, #31153	; 0x79b1
   3e1b4:	movt	r3, #40503	; 0x9e37
   3e1b8:	mul	r2, r2, r3
   3e1bc:	sub	r3, r0, #1
   3e1c0:	b	3e1c8 <fb_value_set_find_item@@Base+0x88>
   3e1c4:	add	r2, r2, #1
   3e1c8:	and	r0, r2, r3
   3e1cc:	ldr	r0, [ip, r0, lsl #2]
   3e1d0:	cmp	r0, #2
   3e1d4:	beq	3e1c4 <fb_value_set_find_item@@Base+0x84>
   3e1d8:	cmp	r0, #0
   3e1dc:	beq	3e234 <fb_value_set_find_item@@Base+0xf4>
   3e1e0:	ldrh	r4, [r0, #8]
   3e1e4:	cmp	lr, r4
   3e1e8:	bne	3e1c4 <fb_value_set_find_item@@Base+0x84>
   3e1ec:	cmp	lr, #4
   3e1f0:	beq	3e204 <fb_value_set_find_item@@Base+0xc4>
   3e1f4:	cmp	lr, #6
   3e1f8:	beq	3e220 <fb_value_set_find_item@@Base+0xe0>
   3e1fc:	cmp	lr, #5
   3e200:	bne	3e1c4 <fb_value_set_find_item@@Base+0x84>
   3e204:	ldrd	r4, [r0]
   3e208:	ldrd	r6, [r1]
   3e20c:	eor	r5, r7, r5
   3e210:	eor	r4, r6, r4
   3e214:	orrs	r4, r4, r5
   3e218:	popeq	{r4, r5, r6, r7, fp, pc}
   3e21c:	b	3e1c4 <fb_value_set_find_item@@Base+0x84>
   3e220:	ldrb	r4, [r0]
   3e224:	ldrb	r5, [r1]
   3e228:	cmp	r5, r4
   3e22c:	bne	3e1c4 <fb_value_set_find_item@@Base+0x84>
   3e230:	pop	{r4, r5, r6, r7, fp, pc}
   3e234:	mov	r0, #0
   3e238:	pop	{r4, r5, r6, r7, fp, pc}

0003e23c <fb_value_set_remove@@Base>:
   3e23c:	b	3e240 <fb_value_set_remove@@Base+0x4>
   3e240:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3e244:	add	fp, sp, #24
   3e248:	ldr	ip, [r0]
   3e24c:	cmp	ip, #0
   3e250:	beq	3e34c <fb_value_set_remove@@Base+0x110>
   3e254:	ldrh	lr, [r1, #8]
   3e258:	ldr	r2, [r0, #12]
   3e25c:	cmp	lr, #6
   3e260:	beq	3e28c <fb_value_set_remove@@Base+0x50>
   3e264:	cmp	lr, #5
   3e268:	beq	3e29c <fb_value_set_remove@@Base+0x60>
   3e26c:	mov	r3, #0
   3e270:	cmp	lr, #4
   3e274:	bne	3e2bc <fb_value_set_remove@@Base+0x80>
   3e278:	ldr	r3, [r1]
   3e27c:	movw	r4, #15188	; 0x3b54
   3e280:	movt	r4, #12137	; 0x2f69
   3e284:	add	r4, r4, #2
   3e288:	b	3e2ac <fb_value_set_remove@@Base+0x70>
   3e28c:	ldrb	r3, [r1]
   3e290:	movw	r4, #15188	; 0x3b54
   3e294:	movt	r4, #12137	; 0x2f69
   3e298:	b	3e2ac <fb_value_set_remove@@Base+0x70>
   3e29c:	ldr	r3, [r1]
   3e2a0:	movw	r4, #15188	; 0x3b54
   3e2a4:	movt	r4, #12137	; 0x2f69
   3e2a8:	add	r4, r4, #3
   3e2ac:	eor	r3, r3, r4
   3e2b0:	movw	r4, #31153	; 0x79b1
   3e2b4:	movt	r4, #40503	; 0x9e37
   3e2b8:	mul	r3, r3, r4
   3e2bc:	sub	r4, r2, #1
   3e2c0:	b	3e2c8 <fb_value_set_remove@@Base+0x8c>
   3e2c4:	add	r3, r3, #1
   3e2c8:	and	r5, r3, r4
   3e2cc:	ldr	r2, [ip, r5, lsl #2]
   3e2d0:	cmp	r2, #2
   3e2d4:	beq	3e2c4 <fb_value_set_remove@@Base+0x88>
   3e2d8:	cmp	r2, #0
   3e2dc:	beq	3e34c <fb_value_set_remove@@Base+0x110>
   3e2e0:	ldrh	r6, [r2, #8]
   3e2e4:	cmp	lr, r6
   3e2e8:	bne	3e2c4 <fb_value_set_remove@@Base+0x88>
   3e2ec:	cmp	lr, #4
   3e2f0:	beq	3e304 <fb_value_set_remove@@Base+0xc8>
   3e2f4:	cmp	lr, #6
   3e2f8:	beq	3e320 <fb_value_set_remove@@Base+0xe4>
   3e2fc:	cmp	lr, #5
   3e300:	bne	3e2c4 <fb_value_set_remove@@Base+0x88>
   3e304:	ldrd	r6, [r2]
   3e308:	ldrd	r8, [r1]
   3e30c:	eor	r7, r9, r7
   3e310:	eor	r6, r8, r6
   3e314:	orrs	r6, r6, r7
   3e318:	bne	3e2c4 <fb_value_set_remove@@Base+0x88>
   3e31c:	b	3e330 <fb_value_set_remove@@Base+0xf4>
   3e320:	ldrb	r6, [r2]
   3e324:	ldrb	r7, [r1]
   3e328:	cmp	r7, r6
   3e32c:	bne	3e2c4 <fb_value_set_remove@@Base+0x88>
   3e330:	mov	r1, #2
   3e334:	str	r1, [ip, r5, lsl #2]
   3e338:	ldr	r1, [r0, #8]
   3e33c:	sub	r1, r1, #1
   3e340:	str	r1, [r0, #8]
   3e344:	mov	r0, r2
   3e348:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3e34c:	mov	r2, #0
   3e350:	mov	r0, r2
   3e354:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0003e358 <fb_value_set_remove_item@@Base>:
   3e358:	b	3e240 <fb_value_set_remove@@Base+0x4>

0003e35c <fb_value_set_visit@@Base>:
   3e35c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e360:	add	fp, sp, #24
   3e364:	mov	r6, r0
   3e368:	ldr	r0, [r0, #12]
   3e36c:	cmp	r0, #0
   3e370:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e374:	ldr	r7, [r6]
   3e378:	mov	r8, r2
   3e37c:	mov	r5, r1
   3e380:	mov	r4, #0
   3e384:	ldr	r1, [r7, r4, lsl #2]
   3e388:	orr	r2, r1, #2
   3e38c:	cmp	r2, #2
   3e390:	beq	3e3a0 <fb_value_set_visit@@Base+0x44>
   3e394:	mov	r0, r8
   3e398:	blx	r5
   3e39c:	ldr	r0, [r6, #12]
   3e3a0:	add	r4, r4, #1
   3e3a4:	cmp	r4, r0
   3e3a8:	bcc	3e384 <fb_value_set_visit@@Base+0x28>
   3e3ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e3b0:	eor	r1, r1, #-2147483648	; 0x80000000
   3e3b4:	b	3e3bc <fb_value_set_visit@@Base+0x60>
   3e3b8:	eor	r3, r3, #-2147483648	; 0x80000000
   3e3bc:	push	{r4, r5, lr}
   3e3c0:	lsl	r4, r1, #1
   3e3c4:	lsl	r5, r3, #1
   3e3c8:	teq	r4, r5
   3e3cc:	teqeq	r0, r2
   3e3d0:	orrsne	ip, r4, r0
   3e3d4:	orrsne	ip, r5, r2
   3e3d8:	mvnsne	ip, r4, asr #21
   3e3dc:	mvnsne	ip, r5, asr #21
   3e3e0:	beq	3e5cc <fb_value_set_visit@@Base+0x270>
   3e3e4:	lsr	r4, r4, #21
   3e3e8:	rsbs	r5, r4, r5, lsr #21
   3e3ec:	rsblt	r5, r5, #0
   3e3f0:	ble	3e410 <fb_value_set_visit@@Base+0xb4>
   3e3f4:	add	r4, r4, r5
   3e3f8:	eor	r2, r0, r2
   3e3fc:	eor	r3, r1, r3
   3e400:	eor	r0, r2, r0
   3e404:	eor	r1, r3, r1
   3e408:	eor	r2, r0, r2
   3e40c:	eor	r3, r1, r3
   3e410:	cmp	r5, #54	; 0x36
   3e414:	pophi	{r4, r5, pc}
   3e418:	tst	r1, #-2147483648	; 0x80000000
   3e41c:	lsl	r1, r1, #12
   3e420:	mov	ip, #1048576	; 0x100000
   3e424:	orr	r1, ip, r1, lsr #12
   3e428:	beq	3e434 <fb_value_set_visit@@Base+0xd8>
   3e42c:	rsbs	r0, r0, #0
   3e430:	rsc	r1, r1, #0
   3e434:	tst	r3, #-2147483648	; 0x80000000
   3e438:	lsl	r3, r3, #12
   3e43c:	orr	r3, ip, r3, lsr #12
   3e440:	beq	3e44c <fb_value_set_visit@@Base+0xf0>
   3e444:	rsbs	r2, r2, #0
   3e448:	rsc	r3, r3, #0
   3e44c:	teq	r4, r5
   3e450:	beq	3e5b4 <fb_value_set_visit@@Base+0x258>
   3e454:	sub	r4, r4, #1
   3e458:	rsbs	lr, r5, #32
   3e45c:	blt	3e478 <fb_value_set_visit@@Base+0x11c>
   3e460:	lsl	ip, r2, lr
   3e464:	adds	r0, r0, r2, lsr r5
   3e468:	adc	r1, r1, #0
   3e46c:	adds	r0, r0, r3, lsl lr
   3e470:	adcs	r1, r1, r3, asr r5
   3e474:	b	3e494 <fb_value_set_visit@@Base+0x138>
   3e478:	sub	r5, r5, #32
   3e47c:	add	lr, lr, #32
   3e480:	cmp	r2, #1
   3e484:	lsl	ip, r3, lr
   3e488:	orrcs	ip, ip, #2
   3e48c:	adds	r0, r0, r3, asr r5
   3e490:	adcs	r1, r1, r3, asr #31
   3e494:	and	r5, r1, #-2147483648	; 0x80000000
   3e498:	bpl	3e4a8 <fb_value_set_visit@@Base+0x14c>
   3e49c:	rsbs	ip, ip, #0
   3e4a0:	rscs	r0, r0, #0
   3e4a4:	rsc	r1, r1, #0
   3e4a8:	cmp	r1, #1048576	; 0x100000
   3e4ac:	bcc	3e4ec <fb_value_set_visit@@Base+0x190>
   3e4b0:	cmp	r1, #2097152	; 0x200000
   3e4b4:	bcc	3e4d4 <fb_value_set_visit@@Base+0x178>
   3e4b8:	lsrs	r1, r1, #1
   3e4bc:	rrxs	r0, r0
   3e4c0:	rrx	ip, ip
   3e4c4:	add	r4, r4, #1
   3e4c8:	lsl	r2, r4, #21
   3e4cc:	cmn	r2, #4194304	; 0x400000
   3e4d0:	bcs	3e62c <fb_value_set_visit@@Base+0x2d0>
   3e4d4:	cmp	ip, #-2147483648	; 0x80000000
   3e4d8:	lsrseq	ip, r0, #1
   3e4dc:	adcs	r0, r0, #0
   3e4e0:	adc	r1, r1, r4, lsl #20
   3e4e4:	orr	r1, r1, r5
   3e4e8:	pop	{r4, r5, pc}
   3e4ec:	lsls	ip, ip, #1
   3e4f0:	adcs	r0, r0, r0
   3e4f4:	adc	r1, r1, r1
   3e4f8:	tst	r1, #1048576	; 0x100000
   3e4fc:	sub	r4, r4, #1
   3e500:	bne	3e4d4 <fb_value_set_visit@@Base+0x178>
   3e504:	teq	r1, #0
   3e508:	moveq	r1, r0
   3e50c:	moveq	r0, #0
   3e510:	clz	r3, r1
   3e514:	addeq	r3, r3, #32
   3e518:	sub	r3, r3, #11
   3e51c:	subs	r2, r3, #32
   3e520:	bge	3e544 <fb_value_set_visit@@Base+0x1e8>
   3e524:	adds	r2, r2, #12
   3e528:	ble	3e540 <fb_value_set_visit@@Base+0x1e4>
   3e52c:	add	ip, r2, #20
   3e530:	rsb	r2, r2, #12
   3e534:	lsl	r0, r1, ip
   3e538:	lsr	r1, r1, r2
   3e53c:	b	3e554 <fb_value_set_visit@@Base+0x1f8>
   3e540:	add	r2, r2, #20
   3e544:	rsble	ip, r2, #32
   3e548:	lsl	r1, r1, r2
   3e54c:	orrle	r1, r1, r0, lsr ip
   3e550:	lslle	r0, r0, r2
   3e554:	subs	r4, r4, r3
   3e558:	addge	r1, r1, r4, lsl #20
   3e55c:	orrge	r1, r1, r5
   3e560:	popge	{r4, r5, pc}
   3e564:	mvn	r4, r4
   3e568:	subs	r4, r4, #31
   3e56c:	bge	3e5a8 <fb_value_set_visit@@Base+0x24c>
   3e570:	adds	r4, r4, #12
   3e574:	bgt	3e590 <fb_value_set_visit@@Base+0x234>
   3e578:	add	r4, r4, #20
   3e57c:	rsb	r2, r4, #32
   3e580:	lsr	r0, r0, r4
   3e584:	orr	r0, r0, r1, lsl r2
   3e588:	orr	r1, r5, r1, lsr r4
   3e58c:	pop	{r4, r5, pc}
   3e590:	rsb	r4, r4, #12
   3e594:	rsb	r2, r4, #32
   3e598:	lsr	r0, r0, r2
   3e59c:	orr	r0, r0, r1, lsl r4
   3e5a0:	mov	r1, r5
   3e5a4:	pop	{r4, r5, pc}
   3e5a8:	lsr	r0, r1, r4
   3e5ac:	mov	r1, r5
   3e5b0:	pop	{r4, r5, pc}
   3e5b4:	teq	r4, #0
   3e5b8:	eor	r3, r3, #1048576	; 0x100000
   3e5bc:	eoreq	r1, r1, #1048576	; 0x100000
   3e5c0:	addeq	r4, r4, #1
   3e5c4:	subne	r5, r5, #1
   3e5c8:	b	3e454 <fb_value_set_visit@@Base+0xf8>
   3e5cc:	mvns	ip, r4, asr #21
   3e5d0:	mvnsne	ip, r5, asr #21
   3e5d4:	beq	3e63c <fb_value_set_visit@@Base+0x2e0>
   3e5d8:	teq	r4, r5
   3e5dc:	teqeq	r0, r2
   3e5e0:	beq	3e5f4 <fb_value_set_visit@@Base+0x298>
   3e5e4:	orrs	ip, r4, r0
   3e5e8:	moveq	r1, r3
   3e5ec:	moveq	r0, r2
   3e5f0:	pop	{r4, r5, pc}
   3e5f4:	teq	r1, r3
   3e5f8:	movne	r1, #0
   3e5fc:	movne	r0, #0
   3e600:	popne	{r4, r5, pc}
   3e604:	lsrs	ip, r4, #21
   3e608:	bne	3e61c <fb_value_set_visit@@Base+0x2c0>
   3e60c:	lsls	r0, r0, #1
   3e610:	adcs	r1, r1, r1
   3e614:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3e618:	pop	{r4, r5, pc}
   3e61c:	adds	r4, r4, #4194304	; 0x400000
   3e620:	addcc	r1, r1, #1048576	; 0x100000
   3e624:	popcc	{r4, r5, pc}
   3e628:	and	r5, r1, #-2147483648	; 0x80000000
   3e62c:	orr	r1, r5, #2130706432	; 0x7f000000
   3e630:	orr	r1, r1, #15728640	; 0xf00000
   3e634:	mov	r0, #0
   3e638:	pop	{r4, r5, pc}
   3e63c:	mvns	ip, r4, asr #21
   3e640:	movne	r1, r3
   3e644:	movne	r0, r2
   3e648:	mvnseq	ip, r5, asr #21
   3e64c:	movne	r3, r1
   3e650:	movne	r2, r0
   3e654:	orrs	r4, r0, r1, lsl #12
   3e658:	orrseq	r5, r2, r3, lsl #12
   3e65c:	teqeq	r1, r3
   3e660:	orrne	r1, r1, #524288	; 0x80000
   3e664:	pop	{r4, r5, pc}
   3e668:	teq	r0, #0
   3e66c:	moveq	r1, #0
   3e670:	bxeq	lr
   3e674:	push	{r4, r5, lr}
   3e678:	mov	r4, #1024	; 0x400
   3e67c:	add	r4, r4, #50	; 0x32
   3e680:	mov	r5, #0
   3e684:	mov	r1, #0
   3e688:	b	3e504 <fb_value_set_visit@@Base+0x1a8>
   3e68c:	teq	r0, #0
   3e690:	moveq	r1, #0
   3e694:	bxeq	lr
   3e698:	push	{r4, r5, lr}
   3e69c:	mov	r4, #1024	; 0x400
   3e6a0:	add	r4, r4, #50	; 0x32
   3e6a4:	ands	r5, r0, #-2147483648	; 0x80000000
   3e6a8:	rsbmi	r0, r0, #0
   3e6ac:	mov	r1, #0
   3e6b0:	b	3e504 <fb_value_set_visit@@Base+0x1a8>
   3e6b4:	lsls	r2, r0, #1
   3e6b8:	asr	r1, r2, #3
   3e6bc:	rrx	r1, r1
   3e6c0:	lsl	r0, r2, #28
   3e6c4:	andsne	r3, r2, #-16777216	; 0xff000000
   3e6c8:	teqne	r3, #-16777216	; 0xff000000
   3e6cc:	eorne	r1, r1, #939524096	; 0x38000000
   3e6d0:	bxne	lr
   3e6d4:	bics	r2, r2, #-16777216	; 0xff000000
   3e6d8:	bxeq	lr
   3e6dc:	teq	r3, #-16777216	; 0xff000000
   3e6e0:	orreq	r1, r1, #524288	; 0x80000
   3e6e4:	bxeq	lr
   3e6e8:	push	{r4, r5, lr}
   3e6ec:	mov	r4, #896	; 0x380
   3e6f0:	and	r5, r1, #-2147483648	; 0x80000000
   3e6f4:	bic	r1, r1, #-2147483648	; 0x80000000
   3e6f8:	b	3e504 <fb_value_set_visit@@Base+0x1a8>
   3e6fc:	orrs	r2, r0, r1
   3e700:	bxeq	lr
   3e704:	push	{r4, r5, lr}
   3e708:	mov	r5, #0
   3e70c:	b	3e72c <fb_value_set_visit@@Base+0x3d0>
   3e710:	orrs	r2, r0, r1
   3e714:	bxeq	lr
   3e718:	push	{r4, r5, lr}
   3e71c:	ands	r5, r1, #-2147483648	; 0x80000000
   3e720:	bpl	3e72c <fb_value_set_visit@@Base+0x3d0>
   3e724:	rsbs	r0, r0, #0
   3e728:	rsc	r1, r1, #0
   3e72c:	mov	r4, #1024	; 0x400
   3e730:	add	r4, r4, #50	; 0x32
   3e734:	lsrs	ip, r1, #22
   3e738:	beq	3e4a8 <fb_value_set_visit@@Base+0x14c>
   3e73c:	mov	r2, #3
   3e740:	lsrs	ip, ip, #3
   3e744:	addne	r2, r2, #3
   3e748:	lsrs	ip, ip, #3
   3e74c:	addne	r2, r2, #3
   3e750:	add	r2, r2, ip, lsr #3
   3e754:	rsb	r3, r2, #32
   3e758:	lsl	ip, r0, r3
   3e75c:	lsr	r0, r0, r2
   3e760:	orr	r0, r0, r1, lsl r3
   3e764:	lsr	r1, r1, r2
   3e768:	add	r4, r4, r2
   3e76c:	b	3e4a8 <fb_value_set_visit@@Base+0x14c>
   3e770:	eor	r0, r0, #-2147483648	; 0x80000000
   3e774:	b	3e77c <fb_value_set_visit@@Base+0x420>
   3e778:	eor	r1, r1, #-2147483648	; 0x80000000
   3e77c:	lsls	r2, r0, #1
   3e780:	lslsne	r3, r1, #1
   3e784:	teqne	r2, r3
   3e788:	mvnsne	ip, r2, asr #24
   3e78c:	mvnsne	ip, r3, asr #24
   3e790:	beq	3e888 <fb_value_set_visit@@Base+0x52c>
   3e794:	lsr	r2, r2, #24
   3e798:	rsbs	r3, r2, r3, lsr #24
   3e79c:	addgt	r2, r2, r3
   3e7a0:	eorgt	r1, r0, r1
   3e7a4:	eorgt	r0, r1, r0
   3e7a8:	eorgt	r1, r0, r1
   3e7ac:	rsblt	r3, r3, #0
   3e7b0:	cmp	r3, #25
   3e7b4:	bxhi	lr
   3e7b8:	tst	r0, #-2147483648	; 0x80000000
   3e7bc:	orr	r0, r0, #8388608	; 0x800000
   3e7c0:	bic	r0, r0, #-16777216	; 0xff000000
   3e7c4:	rsbne	r0, r0, #0
   3e7c8:	tst	r1, #-2147483648	; 0x80000000
   3e7cc:	orr	r1, r1, #8388608	; 0x800000
   3e7d0:	bic	r1, r1, #-16777216	; 0xff000000
   3e7d4:	rsbne	r1, r1, #0
   3e7d8:	teq	r2, r3
   3e7dc:	beq	3e870 <fb_value_set_visit@@Base+0x514>
   3e7e0:	sub	r2, r2, #1
   3e7e4:	adds	r0, r0, r1, asr r3
   3e7e8:	rsb	r3, r3, #32
   3e7ec:	lsl	r1, r1, r3
   3e7f0:	and	r3, r0, #-2147483648	; 0x80000000
   3e7f4:	bpl	3e800 <fb_value_set_visit@@Base+0x4a4>
   3e7f8:	rsbs	r1, r1, #0
   3e7fc:	rsc	r0, r0, #0
   3e800:	cmp	r0, #8388608	; 0x800000
   3e804:	bcc	3e838 <fb_value_set_visit@@Base+0x4dc>
   3e808:	cmp	r0, #16777216	; 0x1000000
   3e80c:	bcc	3e824 <fb_value_set_visit@@Base+0x4c8>
   3e810:	lsrs	r0, r0, #1
   3e814:	rrx	r1, r1
   3e818:	add	r2, r2, #1
   3e81c:	cmp	r2, #254	; 0xfe
   3e820:	bcs	3e8dc <fb_value_set_visit@@Base+0x580>
   3e824:	cmp	r1, #-2147483648	; 0x80000000
   3e828:	adc	r0, r0, r2, lsl #23
   3e82c:	biceq	r0, r0, #1
   3e830:	orr	r0, r0, r3
   3e834:	bx	lr
   3e838:	lsls	r1, r1, #1
   3e83c:	adc	r0, r0, r0
   3e840:	tst	r0, #8388608	; 0x800000
   3e844:	sub	r2, r2, #1
   3e848:	bne	3e824 <fb_value_set_visit@@Base+0x4c8>
   3e84c:	clz	ip, r0
   3e850:	sub	ip, ip, #8
   3e854:	subs	r2, r2, ip
   3e858:	lsl	r0, r0, ip
   3e85c:	addge	r0, r0, r2, lsl #23
   3e860:	rsblt	r2, r2, #0
   3e864:	orrge	r0, r0, r3
   3e868:	orrlt	r0, r3, r0, lsr r2
   3e86c:	bx	lr
   3e870:	teq	r2, #0
   3e874:	eor	r1, r1, #8388608	; 0x800000
   3e878:	eoreq	r0, r0, #8388608	; 0x800000
   3e87c:	addeq	r2, r2, #1
   3e880:	subne	r3, r3, #1
   3e884:	b	3e7e0 <fb_value_set_visit@@Base+0x484>
   3e888:	lsl	r3, r1, #1
   3e88c:	mvns	ip, r2, asr #24
   3e890:	mvnsne	ip, r3, asr #24
   3e894:	beq	3e8e8 <fb_value_set_visit@@Base+0x58c>
   3e898:	teq	r2, r3
   3e89c:	beq	3e8ac <fb_value_set_visit@@Base+0x550>
   3e8a0:	teq	r2, #0
   3e8a4:	moveq	r0, r1
   3e8a8:	bx	lr
   3e8ac:	teq	r0, r1
   3e8b0:	movne	r0, #0
   3e8b4:	bxne	lr
   3e8b8:	tst	r2, #-16777216	; 0xff000000
   3e8bc:	bne	3e8cc <fb_value_set_visit@@Base+0x570>
   3e8c0:	lsls	r0, r0, #1
   3e8c4:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3e8c8:	bx	lr
   3e8cc:	adds	r2, r2, #33554432	; 0x2000000
   3e8d0:	addcc	r0, r0, #8388608	; 0x800000
   3e8d4:	bxcc	lr
   3e8d8:	and	r3, r0, #-2147483648	; 0x80000000
   3e8dc:	orr	r0, r3, #2130706432	; 0x7f000000
   3e8e0:	orr	r0, r0, #8388608	; 0x800000
   3e8e4:	bx	lr
   3e8e8:	mvns	r2, r2, asr #24
   3e8ec:	movne	r0, r1
   3e8f0:	mvnseq	r3, r3, asr #24
   3e8f4:	movne	r1, r0
   3e8f8:	lsls	r2, r0, #9
   3e8fc:	lslseq	r3, r1, #9
   3e900:	teqeq	r0, r1
   3e904:	orrne	r0, r0, #4194304	; 0x400000
   3e908:	bx	lr
   3e90c:	mov	r3, #0
   3e910:	b	3e91c <fb_value_set_visit@@Base+0x5c0>
   3e914:	ands	r3, r0, #-2147483648	; 0x80000000
   3e918:	rsbmi	r0, r0, #0
   3e91c:	movs	ip, r0
   3e920:	bxeq	lr
   3e924:	orr	r3, r3, #1258291200	; 0x4b000000
   3e928:	mov	r1, r0
   3e92c:	mov	r0, #0
   3e930:	b	3e974 <fb_value_set_visit@@Base+0x618>
   3e934:	orrs	r2, r0, r1
   3e938:	bxeq	lr
   3e93c:	mov	r3, #0
   3e940:	b	3e95c <fb_value_set_visit@@Base+0x600>
   3e944:	orrs	r2, r0, r1
   3e948:	bxeq	lr
   3e94c:	ands	r3, r1, #-2147483648	; 0x80000000
   3e950:	bpl	3e95c <fb_value_set_visit@@Base+0x600>
   3e954:	rsbs	r0, r0, #0
   3e958:	rsc	r1, r1, #0
   3e95c:	movs	ip, r1
   3e960:	moveq	ip, r0
   3e964:	moveq	r1, r0
   3e968:	moveq	r0, #0
   3e96c:	orr	r3, r3, #1526726656	; 0x5b000000
   3e970:	subeq	r3, r3, #268435456	; 0x10000000
   3e974:	sub	r3, r3, #8388608	; 0x800000
   3e978:	clz	r2, ip
   3e97c:	subs	r2, r2, #8
   3e980:	sub	r3, r3, r2, lsl #23
   3e984:	blt	3e9a4 <fb_value_set_visit@@Base+0x648>
   3e988:	add	r3, r3, r1, lsl r2
   3e98c:	lsl	ip, r0, r2
   3e990:	rsb	r2, r2, #32
   3e994:	cmp	ip, #-2147483648	; 0x80000000
   3e998:	adc	r0, r3, r0, lsr r2
   3e99c:	biceq	r0, r0, #1
   3e9a0:	bx	lr
   3e9a4:	add	r2, r2, #32
   3e9a8:	lsl	ip, r1, r2
   3e9ac:	rsb	r2, r2, #32
   3e9b0:	orrs	r0, r0, ip, lsl #1
   3e9b4:	adc	r0, r3, r1, lsr r2
   3e9b8:	biceq	r0, r0, ip, lsr #31
   3e9bc:	bx	lr
   3e9c0:	cmp	r3, #0
   3e9c4:	cmpeq	r2, #0
   3e9c8:	bne	3e9e0 <fb_value_set_visit@@Base+0x684>
   3e9cc:	cmp	r1, #0
   3e9d0:	cmpeq	r0, #0
   3e9d4:	mvnne	r1, #0
   3e9d8:	mvnne	r0, #0
   3e9dc:	b	3e9fc <fb_value_set_visit@@Base+0x6a0>
   3e9e0:	sub	sp, sp, #8
   3e9e4:	push	{sp, lr}
   3e9e8:	bl	3eae8 <fb_value_set_visit@@Base+0x78c>
   3e9ec:	ldr	lr, [sp, #4]
   3e9f0:	add	sp, sp, #8
   3e9f4:	pop	{r2, r3}
   3e9f8:	bx	lr
   3e9fc:	push	{r1, lr}
   3ea00:	mov	r0, #8
   3ea04:	bl	148d4 <raise@plt>
   3ea08:	pop	{r1, pc}
   3ea0c:	vmov	s15, r0
   3ea10:	vcmpe.f32	s15, #0.0
   3ea14:	vmrs	APSR_nzcv, fpscr
   3ea18:	bmi	3ea20 <fb_value_set_visit@@Base+0x6c4>
   3ea1c:	b	3ea68 <fb_value_set_visit@@Base+0x70c>
   3ea20:	push	{r4, lr}
   3ea24:	eor	r0, r0, #-2147483648	; 0x80000000
   3ea28:	bl	3ea68 <fb_value_set_visit@@Base+0x70c>
   3ea2c:	rsbs	r0, r0, #0
   3ea30:	rsc	r1, r1, #0
   3ea34:	pop	{r4, pc}
   3ea38:	vmov	d7, r0, r1
   3ea3c:	vcmpe.f64	d7, #0.0
   3ea40:	vmrs	APSR_nzcv, fpscr
   3ea44:	bmi	3ea4c <fb_value_set_visit@@Base+0x6f0>
   3ea48:	b	3eaa8 <fb_value_set_visit@@Base+0x74c>
   3ea4c:	push	{r4, lr}
   3ea50:	eor	r1, r1, #-2147483648	; 0x80000000
   3ea54:	bl	3eaa8 <fb_value_set_visit@@Base+0x74c>
   3ea58:	rsbs	r0, r0, #0
   3ea5c:	rsc	r1, r1, #0
   3ea60:	pop	{r4, pc}
   3ea64:	andeq	r0, r0, r0
   3ea68:	vmov	s15, r0
   3ea6c:	vldr	d5, [pc, #36]	; 3ea98 <fb_value_set_visit@@Base+0x73c>
   3ea70:	vcvt.f64.f32	d6, s15
   3ea74:	vldr	d7, [pc, #36]	; 3eaa0 <fb_value_set_visit@@Base+0x744>
   3ea78:	vmul.f64	d7, d6, d7
   3ea7c:	vcvt.u32.f64	s14, d7
   3ea80:	vcvt.f64.u32	d4, s14
   3ea84:	vmov	r1, s14
   3ea88:	vmls.f64	d6, d4, d5
   3ea8c:	vcvt.u32.f64	s15, d6
   3ea90:	vmov	r0, s15
   3ea94:	bx	lr
   3ea98:	andeq	r0, r0, r0
   3ea9c:	mvnsmi	r0, r0
   3eaa0:	andeq	r0, r0, r0
   3eaa4:	ldclcc	0, cr0, [r0]
   3eaa8:	vmov	d6, r0, r1
   3eaac:	vldr	d7, [pc, #36]	; 3ead8 <fb_value_set_visit@@Base+0x77c>
   3eab0:	vldr	d5, [pc, #40]	; 3eae0 <fb_value_set_visit@@Base+0x784>
   3eab4:	vmul.f64	d7, d6, d7
   3eab8:	vcvt.u32.f64	s14, d7
   3eabc:	vcvt.f64.u32	d4, s14
   3eac0:	vmov	r1, s14
   3eac4:	vmls.f64	d6, d4, d5
   3eac8:	vcvt.u32.f64	s15, d6
   3eacc:	vmov	r0, s15
   3ead0:	bx	lr
   3ead4:	nop			; (mov r0, r0)
   3ead8:	andeq	r0, r0, r0
   3eadc:	ldclcc	0, cr0, [r0]
   3eae0:	andeq	r0, r0, r0
   3eae4:	mvnsmi	r0, r0
   3eae8:	cmp	r1, r3
   3eaec:	cmpeq	r0, r2
   3eaf0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3eaf4:	mov	r4, r0
   3eaf8:	movcc	r0, #0
   3eafc:	mov	r5, r1
   3eb00:	ldr	lr, [sp, #36]	; 0x24
   3eb04:	movcc	r1, r0
   3eb08:	bcc	3ec04 <fb_value_set_visit@@Base+0x8a8>
   3eb0c:	cmp	r3, #0
   3eb10:	clzeq	ip, r2
   3eb14:	clzne	ip, r3
   3eb18:	addeq	ip, ip, #32
   3eb1c:	cmp	r5, #0
   3eb20:	clzeq	r1, r4
   3eb24:	addeq	r1, r1, #32
   3eb28:	clzne	r1, r5
   3eb2c:	sub	ip, ip, r1
   3eb30:	sub	sl, ip, #32
   3eb34:	lsl	r9, r3, ip
   3eb38:	rsb	fp, ip, #32
   3eb3c:	orr	r9, r9, r2, lsl sl
   3eb40:	orr	r9, r9, r2, lsr fp
   3eb44:	lsl	r8, r2, ip
   3eb48:	cmp	r5, r9
   3eb4c:	cmpeq	r4, r8
   3eb50:	movcc	r0, #0
   3eb54:	movcc	r1, r0
   3eb58:	bcc	3eb74 <fb_value_set_visit@@Base+0x818>
   3eb5c:	mov	r0, #1
   3eb60:	subs	r4, r4, r8
   3eb64:	lsl	r1, r0, sl
   3eb68:	orr	r1, r1, r0, lsr fp
   3eb6c:	lsl	r0, r0, ip
   3eb70:	sbc	r5, r5, r9
   3eb74:	cmp	ip, #0
   3eb78:	beq	3ec04 <fb_value_set_visit@@Base+0x8a8>
   3eb7c:	lsr	r6, r8, #1
   3eb80:	orr	r6, r6, r9, lsl #31
   3eb84:	lsr	r7, r9, #1
   3eb88:	mov	r2, ip
   3eb8c:	b	3ebb0 <fb_value_set_visit@@Base+0x854>
   3eb90:	subs	r3, r4, r6
   3eb94:	sbc	r8, r5, r7
   3eb98:	adds	r3, r3, r3
   3eb9c:	adc	r8, r8, r8
   3eba0:	adds	r4, r3, #1
   3eba4:	adc	r5, r8, #0
   3eba8:	subs	r2, r2, #1
   3ebac:	beq	3ebcc <fb_value_set_visit@@Base+0x870>
   3ebb0:	cmp	r5, r7
   3ebb4:	cmpeq	r4, r6
   3ebb8:	bcs	3eb90 <fb_value_set_visit@@Base+0x834>
   3ebbc:	adds	r4, r4, r4
   3ebc0:	adc	r5, r5, r5
   3ebc4:	subs	r2, r2, #1
   3ebc8:	bne	3ebb0 <fb_value_set_visit@@Base+0x854>
   3ebcc:	lsr	r3, r4, ip
   3ebd0:	orr	r3, r3, r5, lsl fp
   3ebd4:	lsr	r2, r5, ip
   3ebd8:	orr	r3, r3, r5, lsr sl
   3ebdc:	adds	r0, r0, r4
   3ebe0:	mov	r4, r3
   3ebe4:	lsl	r3, r2, ip
   3ebe8:	orr	r3, r3, r4, lsl sl
   3ebec:	lsl	ip, r4, ip
   3ebf0:	orr	r3, r3, r4, lsr fp
   3ebf4:	adc	r1, r1, r5
   3ebf8:	subs	r0, r0, ip
   3ebfc:	mov	r5, r2
   3ec00:	sbc	r1, r1, r3
   3ec04:	cmp	lr, #0
   3ec08:	strdne	r4, [lr]
   3ec0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003ec10 <__libc_csu_init@@Base>:
   3ec10:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3ec14:	mov	r7, r0
   3ec18:	ldr	r6, [pc, #72]	; 3ec68 <__libc_csu_init@@Base+0x58>
   3ec1c:	ldr	r5, [pc, #72]	; 3ec6c <__libc_csu_init@@Base+0x5c>
   3ec20:	add	r6, pc, r6
   3ec24:	add	r5, pc, r5
   3ec28:	sub	r6, r6, r5
   3ec2c:	mov	r8, r1
   3ec30:	mov	r9, r2
   3ec34:	bl	148a8 <calloc@plt-0x20>
   3ec38:	asrs	r6, r6, #2
   3ec3c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ec40:	mov	r4, #0
   3ec44:	add	r4, r4, #1
   3ec48:	ldr	r3, [r5], #4
   3ec4c:	mov	r2, r9
   3ec50:	mov	r1, r8
   3ec54:	mov	r0, r7
   3ec58:	blx	r3
   3ec5c:	cmp	r6, r4
   3ec60:	bne	3ec44 <__libc_csu_init@@Base+0x34>
   3ec64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3ec68:	andeq	sp, r2, r4, lsl #2
   3ec6c:	strdeq	sp, [r2], -ip

0003ec70 <__libc_csu_fini@@Base>:
   3ec70:	bx	lr

Disassembly of section .fini:

0003ec74 <.fini>:
   3ec74:	push	{r3, lr}
   3ec78:	pop	{r3, pc}
