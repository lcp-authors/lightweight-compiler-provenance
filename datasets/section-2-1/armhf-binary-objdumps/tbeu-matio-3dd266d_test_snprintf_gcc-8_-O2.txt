
../repos/tbeu-matio-3dd266d/test/test_snprintf:     file format elf32-littlearm


Disassembly of section .init:

00010424 <.init>:
   10424:	push	{r3, lr}
   10428:	bl	10ae8 <abort@plt+0x638>
   1042c:	pop	{r3, pc}

Disassembly of section .plt:

00010430 <strcmp@plt-0x14>:
   10430:	push	{lr}		; (str lr, [sp, #-4]!)
   10434:	ldr	lr, [pc, #4]	; 10440 <strcmp@plt-0x4>
   10438:	add	lr, pc, lr
   1043c:	ldr	pc, [lr, #8]!
   10440:	andeq	r0, r1, r0, asr #23

00010444 <strcmp@plt>:
   10444:	add	ip, pc, #0, 12
   10448:	add	ip, ip, #16, 20	; 0x10000
   1044c:	ldr	pc, [ip, #3008]!	; 0xbc0

00010450 <printf@plt>:
   10450:	add	ip, pc, #0, 12
   10454:	add	ip, ip, #16, 20	; 0x10000
   10458:	ldr	pc, [ip, #3000]!	; 0xbb8

0001045c <memcpy@plt>:
   1045c:	add	ip, pc, #0, 12
   10460:	add	ip, ip, #16, 20	; 0x10000
   10464:	ldr	pc, [ip, #2992]!	; 0xbb0

00010468 <pow@plt>:
   10468:	add	ip, pc, #0, 12
   1046c:	add	ip, ip, #16, 20	; 0x10000
   10470:	ldr	pc, [ip, #2984]!	; 0xba8

00010474 <puts@plt>:
   10474:	add	ip, pc, #0, 12
   10478:	add	ip, ip, #16, 20	; 0x10000
   1047c:	ldr	pc, [ip, #2976]!	; 0xba0

00010480 <__libc_start_main@plt>:
   10480:	add	ip, pc, #0, 12
   10484:	add	ip, ip, #16, 20	; 0x10000
   10488:	ldr	pc, [ip, #2968]!	; 0xb98

0001048c <__gmon_start__@plt>:
   1048c:	add	ip, pc, #0, 12
   10490:	add	ip, ip, #16, 20	; 0x10000
   10494:	ldr	pc, [ip, #2960]!	; 0xb90

00010498 <snprintf@plt>:
   10498:	add	ip, pc, #0, 12
   1049c:	add	ip, ip, #16, 20	; 0x10000
   104a0:	ldr	pc, [ip, #2952]!	; 0xb88

000104a4 <sprintf@plt>:
   104a4:	add	ip, pc, #0, 12
   104a8:	add	ip, ip, #16, 20	; 0x10000
   104ac:	ldr	pc, [ip, #2944]!	; 0xb80

000104b0 <abort@plt>:
   104b0:	add	ip, pc, #0, 12
   104b4:	add	ip, ip, #16, 20	; 0x10000
   104b8:	ldr	pc, [ip, #2936]!	; 0xb78

Disassembly of section .text:

000104c0 <.text>:
   104c0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   104c4:	mov	r2, #112	; 0x70
   104c8:	ldr	r5, [pc, #1448]	; 10a78 <abort@plt+0x5c8>
   104cc:	strd	r6, [sp, #8]
   104d0:	strd	r8, [sp, #16]
   104d4:	strd	sl, [sp, #24]
   104d8:	str	lr, [sp, #32]
   104dc:	add	r5, pc, r5
   104e0:	vpush	{d8-d10}
   104e4:	sub	sp, sp, #2400	; 0x960
   104e8:	ldrd	r6, [r5]
   104ec:	sub	sp, sp, #12
   104f0:	add	r3, sp, #248	; 0xf8
   104f4:	ldrd	r8, [r5, #8]
   104f8:	mov	r0, r3
   104fc:	str	r3, [sp, #28]
   10500:	add	r3, sp, #72	; 0x48
   10504:	ldr	sl, [pc, #1392]	; 10a7c <abort@plt+0x5cc>
   10508:	str	r3, [sp, #36]	; 0x24
   1050c:	strd	r6, [sp, #184]	; 0xb8
   10510:	ldrd	r6, [r5, #24]
   10514:	add	sl, pc, sl
   10518:	mov	r1, sl
   1051c:	strd	r6, [sp, #8]
   10520:	ldrd	r6, [r5, #16]
   10524:	strd	r8, [sp, #192]	; 0xc0
   10528:	ldrd	r8, [r5, #32]
   1052c:	strd	r6, [sp, #200]	; 0xc8
   10530:	ldrd	r6, [sp, #8]
   10534:	strd	r6, [sp, #208]	; 0xd0
   10538:	ldrd	r6, [r5, #48]	; 0x30
   1053c:	strd	r8, [sp, #216]	; 0xd8
   10540:	ldrd	r8, [r5, #56]	; 0x38
   10544:	strd	r6, [sp, #8]
   10548:	ldrd	r6, [r5, #40]	; 0x28
   1054c:	strd	r6, [sp, #224]	; 0xe0
   10550:	ldrd	r6, [sp, #8]
   10554:	strd	r8, [sp, #240]	; 0xf0
   10558:	strd	r6, [sp, #232]	; 0xe8
   1055c:	add	r6, sl, #112	; 0x70
   10560:	bl	1045c <memcpy@plt>
   10564:	ldr	r7, [sp, #36]	; 0x24
   10568:	add	r2, r5, #64	; 0x40
   1056c:	add	r1, sp, #104	; 0x68
   10570:	mov	lr, r1
   10574:	add	r3, r5, #108	; 0x6c
   10578:	ldrd	r8, [sl, #112]	; 0x70
   1057c:	ldrd	sl, [r2, #8]
   10580:	ldr	ip, [r2, #40]	; 0x28
   10584:	strd	r8, [r7]
   10588:	ldrd	r8, [r2, #16]
   1058c:	strd	sl, [lr], #-8
   10590:	ldrd	sl, [r2, #32]
   10594:	str	lr, [sp, #32]
   10598:	ldr	r7, [r3, #40]	; 0x28
   1059c:	strd	r8, [lr, #16]
   105a0:	ldrd	r8, [r2, #24]
   105a4:	str	ip, [lr, #40]	; 0x28
   105a8:	add	ip, sp, #140	; 0x8c
   105ac:	ldr	r2, [sp, #36]	; 0x24
   105b0:	str	ip, [sp, #44]	; 0x2c
   105b4:	add	ip, r5, #152	; 0x98
   105b8:	str	r7, [sp, #180]	; 0xb4
   105bc:	strd	r8, [lr, #24]
   105c0:	ldrd	r8, [r5, #64]	; 0x40
   105c4:	strd	sl, [lr, #32]
   105c8:	ldrd	sl, [r6, #8]
   105cc:	ldrd	r6, [r6, #16]
   105d0:	strd	r8, [sp, #96]	; 0x60
   105d4:	ldrd	r8, [r3, #8]
   105d8:	strd	sl, [r2, #8]
   105dc:	ldr	r1, [sp, #44]	; 0x2c
   105e0:	strd	r6, [r2, #16]
   105e4:	ldrd	r6, [r3, #16]
   105e8:	ldr	r0, [pc, #1168]	; 10a80 <abort@plt+0x5d0>
   105ec:	strd	r8, [r1, #8]
   105f0:	ldrd	r8, [r3, #24]
   105f4:	strd	r6, [r1, #16]
   105f8:	ldrd	r2, [r3, #32]
   105fc:	add	r0, pc, r0
   10600:	ldrd	r6, [r5, #108]	; 0x6c
   10604:	strd	r8, [r1, #24]
   10608:	ldrd	r8, [r5, #152]	; 0x98
   1060c:	add	r5, sp, #52	; 0x34
   10610:	strd	r2, [r1, #32]
   10614:	ldrd	r2, [ip, #8]
   10618:	str	r5, [sp, #40]	; 0x28
   1061c:	ldr	r1, [ip, #16]
   10620:	strd	r8, [sp, #52]	; 0x34
   10624:	strd	r2, [sp, #60]	; 0x3c
   10628:	strd	r6, [sp, #140]	; 0x8c
   1062c:	str	r1, [sp, #68]	; 0x44
   10630:	bl	10474 <puts@plt>
   10634:	ldr	r7, [sp, #184]	; 0xb8
   10638:	cmp	r7, #0
   1063c:	beq	10a4c <abort@plt+0x59c>
   10640:	ldr	r2, [pc, #1084]	; 10a84 <abort@plt+0x5d4>
   10644:	add	r4, sp, #184	; 0xb8
   10648:	mov	r6, #0
   1064c:	mov	fp, r6
   10650:	add	r5, sp, #360	; 0x168
   10654:	ldr	r3, [sp, #28]
   10658:	str	r4, [sp, #24]
   1065c:	add	r4, sp, #1376	; 0x560
   10660:	add	r4, r4, #8
   10664:	add	r2, pc, r2
   10668:	str	r2, [sp, #20]
   1066c:	ldr	r2, [pc, #1044]	; 10a88 <abort@plt+0x5d8>
   10670:	vldr	d9, [r3]
   10674:	add	r2, pc, r2
   10678:	str	r2, [sp, #8]
   1067c:	vcmp.f64	d9, #0.0
   10680:	vmrs	APSR_nzcv, fpscr
   10684:	beq	1073c <abort@plt+0x28c>
   10688:	ldr	r3, [sp, #28]
   1068c:	vmov.f64	d8, d9
   10690:	add	sl, r3, #8
   10694:	b	106c8 <abort@plt+0x218>
   10698:	cmp	r9, r8
   1069c:	mov	r3, r7
   106a0:	ldr	r0, [sp, #8]
   106a4:	mov	r2, r8
   106a8:	mov	r1, r9
   106ac:	beq	106b8 <abort@plt+0x208>
   106b0:	add	fp, fp, #1
   106b4:	bl	10450 <printf@plt>
   106b8:	vldmia	sl!, {d8}
   106bc:	vcmp.f64	d8, #0.0
   106c0:	vmrs	APSR_nzcv, fpscr
   106c4:	beq	1073c <abort@plt+0x28c>
   106c8:	mov	r1, #0
   106cc:	mov	r2, r7
   106d0:	vstr	d8, [sp]
   106d4:	mov	r0, r1
   106d8:	add	r6, r6, #1
   106dc:	bl	10498 <snprintf@plt>
   106e0:	mov	r9, r0
   106e4:	mov	r2, r7
   106e8:	vstr	d8, [sp]
   106ec:	mov	r1, #1024	; 0x400
   106f0:	mov	r0, r5
   106f4:	bl	10498 <snprintf@plt>
   106f8:	mov	r8, r0
   106fc:	vmov	r2, r3, d8
   10700:	mov	r1, r7
   10704:	mov	r0, r4
   10708:	bl	104a4 <sprintf@plt>
   1070c:	mov	r1, r4
   10710:	mov	r0, r5
   10714:	bl	10444 <strcmp@plt>
   10718:	cmp	r0, #0
   1071c:	beq	10698 <abort@plt+0x1e8>
   10720:	mov	r3, r4
   10724:	mov	r2, r5
   10728:	ldr	r0, [sp, #20]
   1072c:	mov	r1, r7
   10730:	add	fp, fp, #1
   10734:	bl	10450 <printf@plt>
   10738:	b	10698 <abort@plt+0x1e8>
   1073c:	ldr	r3, [sp, #24]
   10740:	ldr	r7, [r3, #4]!
   10744:	cmp	r7, #0
   10748:	str	r3, [sp, #24]
   1074c:	bne	1067c <abort@plt+0x1cc>
   10750:	ldr	r8, [sp, #96]	; 0x60
   10754:	cmp	r8, #0
   10758:	beq	10870 <abort@plt+0x3c0>
   1075c:	ldr	r3, [sp, #32]
   10760:	str	fp, [sp, #8]
   10764:	mov	fp, r6
   10768:	str	r3, [sp, #24]
   1076c:	ldr	r3, [pc, #792]	; 10a8c <abort@plt+0x5dc>
   10770:	add	r3, pc, r3
   10774:	str	r3, [sp, #32]
   10778:	ldr	r3, [pc, #784]	; 10a90 <abort@plt+0x5e0>
   1077c:	add	r3, pc, r3
   10780:	str	r3, [sp, #20]
   10784:	ldr	r3, [sp, #72]	; 0x48
   10788:	str	r3, [sp, #28]
   1078c:	ldr	r3, [sp, #28]
   10790:	cmp	r3, #0
   10794:	beq	10854 <abort@plt+0x3a4>
   10798:	ldr	r6, [sp, #28]
   1079c:	ldr	sl, [sp, #36]	; 0x24
   107a0:	b	107d8 <abort@plt+0x328>
   107a4:	cmp	r9, r7
   107a8:	mov	r3, r8
   107ac:	ldr	r0, [sp, #20]
   107b0:	mov	r2, r7
   107b4:	mov	r1, r9
   107b8:	beq	107cc <abort@plt+0x31c>
   107bc:	ldr	ip, [sp, #8]
   107c0:	add	ip, ip, #1
   107c4:	str	ip, [sp, #8]
   107c8:	bl	10450 <printf@plt>
   107cc:	ldr	r6, [sl, #4]!
   107d0:	cmp	r6, #0
   107d4:	beq	10854 <abort@plt+0x3a4>
   107d8:	mov	r1, #0
   107dc:	mov	r3, r6
   107e0:	mov	r0, r1
   107e4:	mov	r2, r8
   107e8:	bl	10498 <snprintf@plt>
   107ec:	mov	r9, r0
   107f0:	mov	r3, r6
   107f4:	mov	r2, r8
   107f8:	mov	r1, #1024	; 0x400
   107fc:	mov	r0, r5
   10800:	add	fp, fp, #1
   10804:	bl	10498 <snprintf@plt>
   10808:	mov	r7, r0
   1080c:	mov	r2, r6
   10810:	mov	r1, r8
   10814:	mov	r0, r4
   10818:	bl	104a4 <sprintf@plt>
   1081c:	mov	r1, r4
   10820:	mov	r0, r5
   10824:	bl	10444 <strcmp@plt>
   10828:	cmp	r0, #0
   1082c:	beq	107a4 <abort@plt+0x2f4>
   10830:	ldr	r3, [sp, #8]
   10834:	mov	r2, r5
   10838:	mov	r1, r8
   1083c:	ldr	r0, [sp, #32]
   10840:	add	r3, r3, #1
   10844:	str	r3, [sp, #8]
   10848:	mov	r3, r4
   1084c:	bl	10450 <printf@plt>
   10850:	b	107a4 <abort@plt+0x2f4>
   10854:	ldr	r3, [sp, #24]
   10858:	ldr	r8, [r3, #4]!
   1085c:	cmp	r8, #0
   10860:	str	r3, [sp, #24]
   10864:	bne	1078c <abort@plt+0x2dc>
   10868:	mov	r6, fp
   1086c:	ldr	fp, [sp, #8]
   10870:	ldr	r8, [sp, #140]	; 0x8c
   10874:	cmp	r8, #0
   10878:	beq	10960 <abort@plt+0x4b0>
   1087c:	ldr	r3, [sp, #44]	; 0x2c
   10880:	str	fp, [sp, #8]
   10884:	str	r3, [sp, #24]
   10888:	ldr	r3, [pc, #516]	; 10a94 <abort@plt+0x5e4>
   1088c:	add	r3, pc, r3
   10890:	str	r3, [sp, #32]
   10894:	ldr	r3, [pc, #508]	; 10a98 <abort@plt+0x5e8>
   10898:	add	r3, pc, r3
   1089c:	str	r3, [sp, #20]
   108a0:	ldr	r3, [sp, #52]	; 0x34
   108a4:	str	r3, [sp, #28]
   108a8:	ldr	r3, [sp, #28]
   108ac:	cmp	r3, #0
   108b0:	beq	10948 <abort@plt+0x498>
   108b4:	ldr	r7, [sp, #28]
   108b8:	ldr	fp, [sp, #40]	; 0x28
   108bc:	mov	r1, #0
   108c0:	mov	r3, r7
   108c4:	mov	r0, r1
   108c8:	mov	r2, r8
   108cc:	bl	10498 <snprintf@plt>
   108d0:	mov	sl, r0
   108d4:	mov	r3, r7
   108d8:	mov	r2, r8
   108dc:	mov	r1, #1024	; 0x400
   108e0:	mov	r0, r5
   108e4:	add	r6, r6, #1
   108e8:	bl	10498 <snprintf@plt>
   108ec:	mov	r9, r0
   108f0:	mov	r2, r7
   108f4:	mov	r1, r8
   108f8:	mov	r0, r4
   108fc:	bl	104a4 <sprintf@plt>
   10900:	mov	r1, r4
   10904:	mov	r0, r5
   10908:	bl	10444 <strcmp@plt>
   1090c:	cmp	r0, #0
   10910:	bne	10a28 <abort@plt+0x578>
   10914:	cmp	sl, r9
   10918:	mov	r3, r8
   1091c:	ldr	r0, [sp, #20]
   10920:	mov	r2, r9
   10924:	mov	r1, sl
   10928:	beq	1093c <abort@plt+0x48c>
   1092c:	ldr	ip, [sp, #8]
   10930:	add	ip, ip, #1
   10934:	str	ip, [sp, #8]
   10938:	bl	10450 <printf@plt>
   1093c:	ldr	r7, [fp, #4]!
   10940:	cmp	r7, #0
   10944:	bne	108bc <abort@plt+0x40c>
   10948:	ldr	r3, [sp, #24]
   1094c:	ldr	r8, [r3, #4]!
   10950:	cmp	r8, #0
   10954:	str	r3, [sp, #24]
   10958:	bne	108a8 <abort@plt+0x3f8>
   1095c:	ldr	fp, [sp, #8]
   10960:	mov	r2, r6
   10964:	mov	r1, fp
   10968:	ldr	r0, [pc, #300]	; 10a9c <abort@plt+0x5ec>
   1096c:	mov	r6, #0
   10970:	ldr	r7, [pc, #296]	; 10aa0 <abort@plt+0x5f0>
   10974:	vldr	d10, [pc, #236]	; 10a68 <abort@plt+0x5b8>
   10978:	add	r0, pc, r0
   1097c:	bl	10450 <printf@plt>
   10980:	ldr	r0, [pc, #284]	; 10aa4 <abort@plt+0x5f4>
   10984:	add	r7, pc, r7
   10988:	vldr	d9, [pc, #224]	; 10a70 <abort@plt+0x5c0>
   1098c:	add	r0, pc, r0
   10990:	bl	10474 <puts@plt>
   10994:	b	109a4 <abort@plt+0x4f4>
   10998:	add	r6, r6, #1
   1099c:	cmp	r6, #100	; 0x64
   109a0:	beq	10a00 <abort@plt+0x550>
   109a4:	vmov	s15, r6
   109a8:	vmov.f64	d0, d10
   109ac:	vcvt.f64.s32	d1, s15
   109b0:	bl	10468 <pow@plt>
   109b4:	vmul.f64	d8, d0, d9
   109b8:	mov	r2, r7
   109bc:	mov	r1, #1024	; 0x400
   109c0:	mov	r0, r5
   109c4:	vstr	d8, [sp]
   109c8:	bl	10498 <snprintf@plt>
   109cc:	vmov	r2, r3, d8
   109d0:	mov	r1, r7
   109d4:	mov	r0, r4
   109d8:	bl	104a4 <sprintf@plt>
   109dc:	mov	r1, r4
   109e0:	mov	r0, r5
   109e4:	bl	10444 <strcmp@plt>
   109e8:	cmp	r0, #0
   109ec:	beq	10998 <abort@plt+0x4e8>
   109f0:	ldr	r0, [pc, #176]	; 10aa8 <abort@plt+0x5f8>
   109f4:	sub	r1, r6, #1
   109f8:	add	r0, pc, r0
   109fc:	bl	10450 <printf@plt>
   10a00:	mov	r0, #0
   10a04:	add	sp, sp, #2400	; 0x960
   10a08:	add	sp, sp, #12
   10a0c:	vpop	{d8-d10}
   10a10:	ldrd	r4, [sp]
   10a14:	ldrd	r6, [sp, #8]
   10a18:	ldrd	r8, [sp, #16]
   10a1c:	ldrd	sl, [sp, #24]
   10a20:	add	sp, sp, #32
   10a24:	pop	{pc}		; (ldr pc, [sp], #4)
   10a28:	ldr	r3, [sp, #8]
   10a2c:	mov	r2, r5
   10a30:	mov	r1, r8
   10a34:	ldr	r0, [sp, #32]
   10a38:	add	r3, r3, #1
   10a3c:	str	r3, [sp, #8]
   10a40:	mov	r3, r4
   10a44:	bl	10450 <printf@plt>
   10a48:	b	10914 <abort@plt+0x464>
   10a4c:	add	r4, sp, #1376	; 0x560
   10a50:	mov	r6, r7
   10a54:	add	r5, sp, #360	; 0x168
   10a58:	mov	fp, r7
   10a5c:	add	r4, r4, #8
   10a60:	b	10750 <abort@plt+0x2a0>
   10a64:	nop	{0}
   10a68:	andeq	r0, r0, r0
   10a6c:	eormi	r0, r4, r0
   10a70:	smlsldcc	pc, r6, pc, r6	; <UNPREDICTABLE>
   10a74:	svccc	0x00bf9add
   10a78:	andeq	r0, r1, ip, asr fp
   10a7c:	strdeq	r0, [r0], -r4
   10a80:	muleq	r0, r4, r6
   10a84:	andeq	r0, r0, r4, ror #12
   10a88:	muleq	r0, ip, r6
   10a8c:	andeq	r0, r0, r8, asr r5
   10a90:	muleq	r0, r4, r5
   10a94:	andeq	r0, r0, ip, lsr r4
   10a98:	andeq	r0, r0, r8, ror r4
   10a9c:			; <UNDEFINED> instruction: 0x000003b8
   10aa0:	andeq	r0, r0, ip, ror #7
   10aa4:	andeq	r0, r0, r0, asr #7
   10aa8:	andeq	r0, r0, r0, lsl #7
   10aac:	mov	fp, #0
   10ab0:	mov	lr, #0
   10ab4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ab8:	mov	r2, sp
   10abc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ac0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ac4:	ldr	ip, [pc, #16]	; 10adc <abort@plt+0x62c>
   10ac8:	push	{ip}		; (str ip, [sp, #-4]!)
   10acc:	ldr	r0, [pc, #12]	; 10ae0 <abort@plt+0x630>
   10ad0:	ldr	r3, [pc, #12]	; 10ae4 <abort@plt+0x634>
   10ad4:	bl	10480 <__libc_start_main@plt>
   10ad8:	bl	104b0 <abort@plt>
   10adc:	strdeq	r0, [r1], -ip
   10ae0:	andeq	r0, r1, r0, asr #9
   10ae4:	muleq	r1, ip, fp
   10ae8:	ldr	r3, [pc, #20]	; 10b04 <abort@plt+0x654>
   10aec:	ldr	r2, [pc, #20]	; 10b08 <abort@plt+0x658>
   10af0:	add	r3, pc, r3
   10af4:	ldr	r2, [r3, r2]
   10af8:	cmp	r2, #0
   10afc:	bxeq	lr
   10b00:	b	1048c <__gmon_start__@plt>
   10b04:	andeq	r0, r1, r8, lsl #10
   10b08:	andeq	r0, r0, r4, lsr r0
   10b0c:	ldr	r0, [pc, #24]	; 10b2c <abort@plt+0x67c>
   10b10:	ldr	r3, [pc, #24]	; 10b30 <abort@plt+0x680>
   10b14:	cmp	r3, r0
   10b18:	bxeq	lr
   10b1c:	ldr	r3, [pc, #16]	; 10b34 <abort@plt+0x684>
   10b20:	cmp	r3, #0
   10b24:	bxeq	lr
   10b28:	bx	r3
   10b2c:	andeq	r1, r2, ip, ror #1
   10b30:	andeq	r1, r2, ip, ror #1
   10b34:	andeq	r0, r0, r0
   10b38:	ldr	r0, [pc, #36]	; 10b64 <abort@plt+0x6b4>
   10b3c:	ldr	r1, [pc, #36]	; 10b68 <abort@plt+0x6b8>
   10b40:	sub	r1, r1, r0
   10b44:	asr	r1, r1, #2
   10b48:	add	r1, r1, r1, lsr #31
   10b4c:	asrs	r1, r1, #1
   10b50:	bxeq	lr
   10b54:	ldr	r3, [pc, #16]	; 10b6c <abort@plt+0x6bc>
   10b58:	cmp	r3, #0
   10b5c:	bxeq	lr
   10b60:	bx	r3
   10b64:	andeq	r1, r2, ip, ror #1
   10b68:	andeq	r1, r2, ip, ror #1
   10b6c:	andeq	r0, r0, r0
   10b70:	push	{r4, lr}
   10b74:	ldr	r4, [pc, #24]	; 10b94 <abort@plt+0x6e4>
   10b78:	ldrb	r3, [r4]
   10b7c:	cmp	r3, #0
   10b80:	popne	{r4, pc}
   10b84:	bl	10b0c <abort@plt+0x65c>
   10b88:	mov	r3, #1
   10b8c:	strb	r3, [r4]
   10b90:	pop	{r4, pc}
   10b94:	andeq	r1, r2, ip, ror #1
   10b98:	b	10b38 <abort@plt+0x688>
   10b9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ba0:	mov	r7, r0
   10ba4:	ldr	r6, [pc, #72]	; 10bf4 <abort@plt+0x744>
   10ba8:	ldr	r5, [pc, #72]	; 10bf8 <abort@plt+0x748>
   10bac:	add	r6, pc, r6
   10bb0:	add	r5, pc, r5
   10bb4:	sub	r6, r6, r5
   10bb8:	mov	r8, r1
   10bbc:	mov	r9, r2
   10bc0:	bl	10424 <strcmp@plt-0x20>
   10bc4:	asrs	r6, r6, #2
   10bc8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bcc:	mov	r4, #0
   10bd0:	add	r4, r4, #1
   10bd4:	ldr	r3, [r5], #4
   10bd8:	mov	r2, r9
   10bdc:	mov	r1, r8
   10be0:	mov	r0, r7
   10be4:	blx	r3
   10be8:	cmp	r6, r4
   10bec:	bne	10bd0 <abort@plt+0x720>
   10bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bf4:	andeq	r0, r1, r8, asr r3
   10bf8:	andeq	r0, r1, r0, asr r3
   10bfc:	bx	lr

Disassembly of section .fini:

00010c00 <.fini>:
   10c00:	push	{r3, lr}
   10c04:	pop	{r3, pc}
