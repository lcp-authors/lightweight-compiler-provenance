
../repos/prog2/MT1E1-1.1:     file format elf32-littlearm


Disassembly of section .init:

00010b14 <.init>:
   10b14:	push	{r3, lr}
   10b18:	bl	10e04 <_start@@Base+0x3c>
   10b1c:	pop	{r3, pc}

Disassembly of section .plt:

00010b20 <calloc@plt-0x14>:
   10b20:	push	{lr}		; (str lr, [sp, #-4]!)
   10b24:	ldr	lr, [pc, #4]	; 10b30 <calloc@plt-0x4>
   10b28:	add	lr, pc, lr
   10b2c:	ldr	pc, [lr, #8]!
   10b30:	ldrdeq	r1, [r1], -r0

00010b34 <calloc@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #69632	; 0x11000
   10b3c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b40 <strcmp@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #69632	; 0x11000
   10b48:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b4c <strtol@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b58 <printf@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b64 <fopen@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b70 <free@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b7c <fgets@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b88 <memcpy@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1176]!	; 0x498

00010b94 <realloc@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1168]!	; 0x490

00010ba0 <strcpy@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1160]!	; 0x488

00010bac <puts@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1152]!	; 0x480

00010bb8 <malloc@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1144]!	; 0x478

00010bc4 <__libc_start_main@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1136]!	; 0x470

00010bd0 <__gmon_start__@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1128]!	; 0x468

00010bdc <feof@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1120]!	; 0x460

00010be8 <strlen@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1112]!	; 0x458

00010bf4 <strchr@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1104]!	; 0x450

00010c00 <fclose@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #69632	; 0x11000
   10c08:	ldr	pc, [ip, #1096]!	; 0x448

00010c0c <abort@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #69632	; 0x11000
   10c14:	ldr	pc, [ip, #1088]!	; 0x440

Disassembly of section .text:

00010c18 <main@@Base>:
   10c18:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10c1c:	ldr	r4, [pc, #380]	; 10da0 <main@@Base+0x188>
   10c20:	strd	r6, [sp, #8]
   10c24:	ldr	r0, [pc, #376]	; 10da4 <main@@Base+0x18c>
   10c28:	strd	r8, [sp, #16]
   10c2c:	strd	sl, [sp, #24]
   10c30:	add	r4, pc, r4
   10c34:	str	lr, [sp, #32]
   10c38:	sub	sp, sp, #4
   10c3c:	mov	r1, r4
   10c40:	add	r0, pc, r0
   10c44:	bl	10b64 <fopen@plt>
   10c48:	mov	r8, r0
   10c4c:	ldr	r0, [pc, #340]	; 10da8 <main@@Base+0x190>
   10c50:	mov	r1, r4
   10c54:	add	r0, pc, r0
   10c58:	bl	10b64 <fopen@plt>
   10c5c:	mov	r7, r0
   10c60:	ldr	r0, [pc, #324]	; 10dac <main@@Base+0x194>
   10c64:	mov	r1, r4
   10c68:	add	r0, pc, r0
   10c6c:	bl	10b64 <fopen@plt>
   10c70:	mov	r6, r0
   10c74:	mov	r0, r8
   10c78:	bl	110c4 <lerAtores@@Base>
   10c7c:	mov	r4, r0
   10c80:	mov	r0, r7
   10c84:	bl	1114c <lerFilmes@@Base>
   10c88:	mov	r5, r0
   10c8c:	mov	r0, r6
   10c90:	bl	1114c <lerFilmes@@Base>
   10c94:	mov	r9, r0
   10c98:	mov	r0, r4
   10c9c:	bl	11334 <vetor_tamanho@@Base>
   10ca0:	mov	r1, r0
   10ca4:	ldr	r0, [pc, #260]	; 10db0 <main@@Base+0x198>
   10ca8:	add	r0, pc, r0
   10cac:	bl	10b58 <printf@plt>
   10cb0:	mov	r0, r4
   10cb4:	bl	10eb8 <retira_duplicados@@Base>
   10cb8:	mov	r0, r4
   10cbc:	bl	11334 <vetor_tamanho@@Base>
   10cc0:	mov	r1, r0
   10cc4:	ldr	r0, [pc, #232]	; 10db4 <main@@Base+0x19c>
   10cc8:	add	r0, pc, r0
   10ccc:	bl	10b58 <printf@plt>
   10cd0:	mov	r1, r9
   10cd4:	mov	r0, r5
   10cd8:	bl	10f5c <interseta@@Base>
   10cdc:	subs	fp, r0, #0
   10ce0:	beq	10d80 <main@@Base+0x168>
   10ce4:	bl	11334 <vetor_tamanho@@Base>
   10ce8:	mov	r1, r0
   10cec:	ldr	r0, [pc, #196]	; 10db8 <main@@Base+0x1a0>
   10cf0:	add	r0, pc, r0
   10cf4:	bl	10b58 <printf@plt>
   10cf8:	mov	r1, #2000	; 0x7d0
   10cfc:	mov	r0, r5
   10d00:	bl	1102c <anteriores@@Base>
   10d04:	subs	sl, r0, #0
   10d08:	beq	10d90 <main@@Base+0x178>
   10d0c:	bl	11334 <vetor_tamanho@@Base>
   10d10:	mov	r1, r0
   10d14:	ldr	r0, [pc, #160]	; 10dbc <main@@Base+0x1a4>
   10d18:	add	r0, pc, r0
   10d1c:	bl	10b58 <printf@plt>
   10d20:	mov	r0, r4
   10d24:	bl	11208 <vetor_apaga@@Base>
   10d28:	mov	r0, fp
   10d2c:	bl	11208 <vetor_apaga@@Base>
   10d30:	mov	r0, sl
   10d34:	bl	11208 <vetor_apaga@@Base>
   10d38:	mov	r0, r5
   10d3c:	bl	116e4 <lista_apaga@@Base>
   10d40:	mov	r0, r9
   10d44:	bl	116e4 <lista_apaga@@Base>
   10d48:	mov	r0, r8
   10d4c:	bl	10c00 <fclose@plt>
   10d50:	mov	r0, r7
   10d54:	bl	10c00 <fclose@plt>
   10d58:	mov	r0, r6
   10d5c:	bl	10c00 <fclose@plt>
   10d60:	mov	r0, #0
   10d64:	add	sp, sp, #4
   10d68:	ldrd	r4, [sp]
   10d6c:	ldrd	r6, [sp, #8]
   10d70:	ldrd	r8, [sp, #16]
   10d74:	ldrd	sl, [sp, #24]
   10d78:	add	sp, sp, #32
   10d7c:	pop	{pc}		; (ldr pc, [sp], #4)
   10d80:	ldr	r0, [pc, #56]	; 10dc0 <main@@Base+0x1a8>
   10d84:	add	r0, pc, r0
   10d88:	bl	10bac <puts@plt>
   10d8c:	b	10cf8 <main@@Base+0xe0>
   10d90:	ldr	r0, [pc, #44]	; 10dc4 <main@@Base+0x1ac>
   10d94:	add	r0, pc, r0
   10d98:	bl	10bac <puts@plt>
   10d9c:	b	10d20 <main@@Base+0x108>
   10da0:	ldrdeq	r0, [r0], -r4
   10da4:	andeq	r0, r0, r8, asr #29
   10da8:	andeq	r0, r0, r0, asr #29
   10dac:			; <UNDEFINED> instruction: 0x00000eb8
   10db0:	andeq	r0, r0, r4, lsl #29
   10db4:	andeq	r0, r0, r8, ror lr
   10db8:	andeq	r0, r0, ip, ror #28
   10dbc:	andeq	r0, r0, ip, ror lr
   10dc0:	strdeq	r0, [r0], -r8
   10dc4:	andeq	r0, r0, r4, lsr #28

00010dc8 <_start@@Base>:
   10dc8:	mov	fp, #0
   10dcc:	mov	lr, #0
   10dd0:	pop	{r1}		; (ldr r1, [sp], #4)
   10dd4:	mov	r2, sp
   10dd8:	push	{r2}		; (str r2, [sp, #-4]!)
   10ddc:	push	{r0}		; (str r0, [sp, #-4]!)
   10de0:	ldr	ip, [pc, #16]	; 10df8 <_start@@Base+0x30>
   10de4:	push	{ip}		; (str ip, [sp, #-4]!)
   10de8:	ldr	r0, [pc, #12]	; 10dfc <_start@@Base+0x34>
   10dec:	ldr	r3, [pc, #12]	; 10e00 <_start@@Base+0x38>
   10df0:	bl	10bc4 <__libc_start_main@plt>
   10df4:	bl	10c0c <abort@plt>
   10df8:	strdeq	r1, [r1], -ip
   10dfc:	andeq	r0, r1, r8, lsl ip
   10e00:	muleq	r1, ip, sl
   10e04:	ldr	r3, [pc, #20]	; 10e20 <_start@@Base+0x58>
   10e08:	ldr	r2, [pc, #20]	; 10e24 <_start@@Base+0x5c>
   10e0c:	add	r3, pc, r3
   10e10:	ldr	r2, [r3, r2]
   10e14:	cmp	r2, #0
   10e18:	bxeq	lr
   10e1c:	b	10bd0 <__gmon_start__@plt>
   10e20:	andeq	r1, r1, ip, ror #3
   10e24:	andeq	r0, r0, r8, asr r0
   10e28:	ldr	r0, [pc, #24]	; 10e48 <_start@@Base+0x80>
   10e2c:	ldr	r3, [pc, #24]	; 10e4c <_start@@Base+0x84>
   10e30:	cmp	r3, r0
   10e34:	bxeq	lr
   10e38:	ldr	r3, [pc, #16]	; 10e50 <_start@@Base+0x88>
   10e3c:	cmp	r3, #0
   10e40:	bxeq	lr
   10e44:	bx	r3
   10e48:	andeq	r2, r2, r4, rrx
   10e4c:	andeq	r2, r2, r4, rrx
   10e50:	andeq	r0, r0, r0
   10e54:	ldr	r0, [pc, #36]	; 10e80 <_start@@Base+0xb8>
   10e58:	ldr	r1, [pc, #36]	; 10e84 <_start@@Base+0xbc>
   10e5c:	sub	r1, r1, r0
   10e60:	asr	r1, r1, #2
   10e64:	add	r1, r1, r1, lsr #31
   10e68:	asrs	r1, r1, #1
   10e6c:	bxeq	lr
   10e70:	ldr	r3, [pc, #16]	; 10e88 <_start@@Base+0xc0>
   10e74:	cmp	r3, #0
   10e78:	bxeq	lr
   10e7c:	bx	r3
   10e80:	andeq	r2, r2, r4, rrx
   10e84:	andeq	r2, r2, r4, rrx
   10e88:	andeq	r0, r0, r0
   10e8c:	push	{r4, lr}
   10e90:	ldr	r4, [pc, #24]	; 10eb0 <_start@@Base+0xe8>
   10e94:	ldrb	r3, [r4]
   10e98:	cmp	r3, #0
   10e9c:	popne	{r4, pc}
   10ea0:	bl	10e28 <_start@@Base+0x60>
   10ea4:	mov	r3, #1
   10ea8:	strb	r3, [r4]
   10eac:	pop	{r4, pc}
   10eb0:	andeq	r2, r2, r4, rrx
   10eb4:	b	10e54 <_start@@Base+0x8c>

00010eb8 <retira_duplicados@@Base>:
   10eb8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10ebc:	mov	r5, r0
   10ec0:	strd	r6, [sp, #8]
   10ec4:	mov	r7, #0
   10ec8:	str	r8, [sp, #16]
   10ecc:	str	lr, [sp, #20]
   10ed0:	mov	r0, r5
   10ed4:	bl	11334 <vetor_tamanho@@Base>
   10ed8:	sub	r0, r0, #1
   10edc:	cmp	r0, r7
   10ee0:	ble	10f48 <retira_duplicados@@Base+0x90>
   10ee4:	add	r8, r7, #1
   10ee8:	mov	r4, r8
   10eec:	mov	r0, r5
   10ef0:	bl	11334 <vetor_tamanho@@Base>
   10ef4:	cmp	r0, r4
   10ef8:	mov	r1, r7
   10efc:	mov	r0, r5
   10f00:	ble	10f40 <retira_duplicados@@Base+0x88>
   10f04:	bl	11344 <vetor_elemento@@Base>
   10f08:	mov	r6, r0
   10f0c:	mov	r1, r4
   10f10:	mov	r0, r5
   10f14:	bl	11344 <vetor_elemento@@Base>
   10f18:	mov	r1, r0
   10f1c:	mov	r0, r6
   10f20:	bl	10b40 <strcmp@plt>
   10f24:	cmp	r0, #0
   10f28:	addne	r4, r4, #1
   10f2c:	bne	10eec <retira_duplicados@@Base+0x34>
   10f30:	mov	r1, r4
   10f34:	mov	r0, r5
   10f38:	bl	11470 <vetor_remove@@Base>
   10f3c:	b	10eec <retira_duplicados@@Base+0x34>
   10f40:	mov	r7, r8
   10f44:	b	10ed0 <retira_duplicados@@Base+0x18>
   10f48:	ldrd	r4, [sp]
   10f4c:	ldrd	r6, [sp, #8]
   10f50:	ldr	r8, [sp, #16]
   10f54:	add	sp, sp, #20
   10f58:	pop	{pc}		; (ldr pc, [sp], #4)

00010f5c <interseta@@Base>:
   10f5c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10f60:	strd	r6, [sp, #8]
   10f64:	mov	r6, r1
   10f68:	strd	r8, [sp, #16]
   10f6c:	mov	r8, r0
   10f70:	str	sl, [sp, #24]
   10f74:	str	lr, [sp, #28]
   10f78:	bl	111d4 <vetor_novo@@Base>
   10f7c:	ldr	r4, [r8]
   10f80:	mov	sl, r0
   10f84:	ldr	r3, [r8, #8]
   10f88:	cmp	r3, #0
   10f8c:	cmple	r4, #0
   10f90:	beq	11010 <interseta@@Base+0xb4>
   10f94:	mov	r9, #0
   10f98:	mov	r5, r9
   10f9c:	b	10fb4 <interseta@@Base+0x58>
   10fa0:	ldr	r4, [r4, #4]
   10fa4:	ldr	r3, [r8, #8]
   10fa8:	cmp	r3, r5
   10fac:	cmple	r4, #0
   10fb0:	beq	11010 <interseta@@Base+0xb4>
   10fb4:	mov	r2, #0
   10fb8:	mov	r0, r6
   10fbc:	ldr	r1, [r4]
   10fc0:	bl	118a8 <lista_pesquisa@@Base>
   10fc4:	mov	r2, #0
   10fc8:	add	r5, r5, #1
   10fcc:	cmp	r0, r2
   10fd0:	mov	r0, r6
   10fd4:	beq	10fa0 <interseta@@Base+0x44>
   10fd8:	ldr	r7, [r4]
   10fdc:	mov	r1, r7
   10fe0:	bl	118a8 <lista_pesquisa@@Base>
   10fe4:	ldr	r1, [r0]
   10fe8:	mov	r0, r7
   10fec:	bl	10b40 <strcmp@plt>
   10ff0:	cmp	r0, #0
   10ff4:	bne	10fa0 <interseta@@Base+0x44>
   10ff8:	mov	r2, r9
   10ffc:	mov	r0, sl
   11000:	ldr	r1, [r4]
   11004:	add	r9, r9, #1
   11008:	bl	11378 <vetor_insere@@Base>
   1100c:	b	10fa0 <interseta@@Base+0x44>
   11010:	mov	r0, sl
   11014:	ldrd	r4, [sp]
   11018:	ldrd	r6, [sp, #8]
   1101c:	ldrd	r8, [sp, #16]
   11020:	ldr	sl, [sp, #24]
   11024:	add	sp, sp, #28
   11028:	pop	{pc}		; (ldr pc, [sp], #4)

0001102c <anteriores@@Base>:
   1102c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11030:	mov	r4, r0
   11034:	strd	r6, [sp, #8]
   11038:	mov	r6, r1
   1103c:	str	r8, [sp, #16]
   11040:	str	lr, [sp, #20]
   11044:	bl	111d4 <vetor_novo@@Base>
   11048:	ldr	r4, [r4]
   1104c:	mov	r7, r0
   11050:	cmp	r4, #0
   11054:	bne	11068 <anteriores@@Base+0x3c>
   11058:	b	110ac <anteriores@@Base+0x80>
   1105c:	ldr	r4, [r4, #4]
   11060:	cmp	r4, #0
   11064:	beq	110ac <anteriores@@Base+0x80>
   11068:	ldr	r5, [r4]
   1106c:	mov	r0, r5
   11070:	bl	10be8 <strlen@plt>
   11074:	sub	r0, r0, #5
   11078:	mov	r2, #10
   1107c:	add	r0, r5, r0
   11080:	mov	r1, #0
   11084:	bl	10b4c <strtol@plt>
   11088:	cmp	r6, r0
   1108c:	ble	1105c <anteriores@@Base+0x30>
   11090:	mov	r0, r7
   11094:	ldr	r1, [r4]
   11098:	ldr	r2, [r7]
   1109c:	bl	11378 <vetor_insere@@Base>
   110a0:	ldr	r4, [r4, #4]
   110a4:	cmp	r4, #0
   110a8:	bne	11068 <anteriores@@Base+0x3c>
   110ac:	mov	r0, r7
   110b0:	ldrd	r4, [sp]
   110b4:	ldrd	r6, [sp, #8]
   110b8:	ldr	r8, [sp, #16]
   110bc:	add	sp, sp, #20
   110c0:	pop	{pc}		; (ldr pc, [sp], #4)

000110c4 <lerAtores@@Base>:
   110c4:	strd	r4, [sp, #-20]!	; 0xffffffec
   110c8:	subs	r5, r0, #0
   110cc:	strd	r6, [sp, #8]
   110d0:	moveq	r6, r5
   110d4:	str	lr, [sp, #16]
   110d8:	sub	sp, sp, #260	; 0x104
   110dc:	beq	11134 <lerAtores@@Base+0x70>
   110e0:	bl	111d4 <vetor_novo@@Base>
   110e4:	mov	r6, r0
   110e8:	mov	r4, sp
   110ec:	b	11118 <lerAtores@@Base+0x54>
   110f0:	bl	10b7c <fgets@plt>
   110f4:	mov	r1, #10
   110f8:	mov	r0, r4
   110fc:	bl	10bf4 <strchr@plt>
   11100:	subs	r3, r0, #0
   11104:	mov	r1, r4
   11108:	mov	r0, r6
   1110c:	strbne	r7, [r3]
   11110:	ldr	r2, [r6]
   11114:	bl	11378 <vetor_insere@@Base>
   11118:	mov	r0, r5
   1111c:	bl	10bdc <feof@plt>
   11120:	subs	r7, r0, #0
   11124:	mov	r2, r5
   11128:	mov	r1, #255	; 0xff
   1112c:	mov	r0, r4
   11130:	beq	110f0 <lerAtores@@Base+0x2c>
   11134:	mov	r0, r6
   11138:	add	sp, sp, #260	; 0x104
   1113c:	ldrd	r4, [sp]
   11140:	ldrd	r6, [sp, #8]
   11144:	add	sp, sp, #16
   11148:	pop	{pc}		; (ldr pc, [sp], #4)

0001114c <lerFilmes@@Base>:
   1114c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11150:	subs	r5, r0, #0
   11154:	strd	r6, [sp, #8]
   11158:	moveq	r7, r5
   1115c:	str	lr, [sp, #16]
   11160:	sub	sp, sp, #260	; 0x104
   11164:	beq	111bc <lerFilmes@@Base+0x70>
   11168:	bl	116b0 <lista_nova@@Base>
   1116c:	mov	r7, r0
   11170:	mov	r4, sp
   11174:	b	111a0 <lerFilmes@@Base+0x54>
   11178:	bl	10b7c <fgets@plt>
   1117c:	mov	r1, #10
   11180:	mov	r0, r4
   11184:	bl	10bf4 <strchr@plt>
   11188:	subs	r3, r0, #0
   1118c:	mov	r2, #0
   11190:	mov	r1, r4
   11194:	mov	r0, r7
   11198:	strbne	r6, [r3]
   1119c:	bl	1176c <lista_insere@@Base>
   111a0:	mov	r0, r5
   111a4:	bl	10bdc <feof@plt>
   111a8:	subs	r6, r0, #0
   111ac:	mov	r2, r5
   111b0:	mov	r1, #255	; 0xff
   111b4:	mov	r0, r4
   111b8:	beq	11178 <lerFilmes@@Base+0x2c>
   111bc:	mov	r0, r7
   111c0:	add	sp, sp, #260	; 0x104
   111c4:	ldrd	r4, [sp]
   111c8:	ldrd	r6, [sp, #8]
   111cc:	add	sp, sp, #16
   111d0:	pop	{pc}		; (ldr pc, [sp], #4)

000111d4 <vetor_novo@@Base>:
   111d4:	mov	r0, #12
   111d8:	str	r4, [sp, #-8]!
   111dc:	str	lr, [sp, #4]
   111e0:	bl	10bb8 <malloc@plt>
   111e4:	cmp	r0, #0
   111e8:	beq	111fc <vetor_novo@@Base+0x28>
   111ec:	mov	r3, #0
   111f0:	str	r3, [r0]
   111f4:	str	r3, [r0, #4]
   111f8:	str	r3, [r0, #8]
   111fc:	ldr	r4, [sp]
   11200:	add	sp, sp, #4
   11204:	pop	{pc}		; (ldr pc, [sp], #4)

00011208 <vetor_apaga@@Base>:
   11208:	strd	r4, [sp, #-16]!
   1120c:	subs	r5, r0, #0
   11210:	str	r6, [sp, #8]
   11214:	str	lr, [sp, #12]
   11218:	beq	11268 <vetor_apaga@@Base+0x60>
   1121c:	ldr	r3, [r5]
   11220:	cmp	r3, #0
   11224:	ble	11248 <vetor_apaga@@Base+0x40>
   11228:	mov	r4, #0
   1122c:	ldr	r3, [r5, #8]
   11230:	ldr	r0, [r3, r4, lsl #2]
   11234:	add	r4, r4, #1
   11238:	bl	10b70 <free@plt>
   1123c:	ldr	r3, [r5]
   11240:	cmp	r3, r4
   11244:	bgt	1122c <vetor_apaga@@Base+0x24>
   11248:	ldr	r0, [r5, #8]
   1124c:	bl	10b70 <free@plt>
   11250:	mov	r0, r5
   11254:	ldrd	r4, [sp]
   11258:	ldr	r6, [sp, #8]
   1125c:	ldr	lr, [sp, #12]
   11260:	add	sp, sp, #16
   11264:	b	10b70 <free@plt>
   11268:	ldrd	r4, [sp]
   1126c:	ldr	r6, [sp, #8]
   11270:	add	sp, sp, #12
   11274:	pop	{pc}		; (ldr pc, [sp], #4)

00011278 <vetor_atribui@@Base>:
   11278:	cmp	r0, #0
   1127c:	lsrne	r3, r1, #31
   11280:	moveq	r3, #1
   11284:	cmp	r3, #0
   11288:	bne	1132c <vetor_atribui@@Base+0xb4>
   1128c:	ldr	r3, [r0]
   11290:	cmp	r3, r1
   11294:	ble	1132c <vetor_atribui@@Base+0xb4>
   11298:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1129c:	mov	r5, r0
   112a0:	mov	r0, r2
   112a4:	mov	r4, r1
   112a8:	strd	r6, [sp, #8]
   112ac:	mov	r6, r2
   112b0:	strd	r8, [sp, #16]
   112b4:	str	sl, [sp, #24]
   112b8:	str	lr, [sp, #28]
   112bc:	bl	10be8 <strlen@plt>
   112c0:	ldr	r8, [r5, #8]
   112c4:	mov	r9, r0
   112c8:	ldr	r7, [r8, r4, lsl #2]
   112cc:	mov	r0, r7
   112d0:	bl	10be8 <strlen@plt>
   112d4:	cmp	r0, r9
   112d8:	bcc	11304 <vetor_atribui@@Base+0x8c>
   112dc:	mov	r1, r6
   112e0:	mov	r0, r7
   112e4:	bl	10ba0 <strcpy@plt>
   112e8:	mov	r0, r4
   112ec:	ldrd	r4, [sp]
   112f0:	ldrd	r6, [sp, #8]
   112f4:	ldrd	r8, [sp, #16]
   112f8:	ldr	sl, [sp, #24]
   112fc:	add	sp, sp, #28
   11300:	pop	{pc}		; (ldr pc, [sp], #4)
   11304:	mov	r0, r7
   11308:	add	r1, r9, #1
   1130c:	bl	10b94 <realloc@plt>
   11310:	ldr	r3, [r5, #8]
   11314:	str	r0, [r8, r4, lsl #2]
   11318:	ldr	r7, [r3, r4, lsl #2]
   1131c:	cmp	r7, #0
   11320:	bne	112dc <vetor_atribui@@Base+0x64>
   11324:	mvn	r0, #0
   11328:	b	112ec <vetor_atribui@@Base+0x74>
   1132c:	mvn	r0, #0
   11330:	bx	lr

00011334 <vetor_tamanho@@Base>:
   11334:	cmp	r0, #0
   11338:	ldrne	r0, [r0]
   1133c:	mvneq	r0, #0
   11340:	bx	lr

00011344 <vetor_elemento@@Base>:
   11344:	cmp	r0, #0
   11348:	lsrne	r3, r1, #31
   1134c:	moveq	r3, #1
   11350:	cmp	r3, #0
   11354:	bne	11370 <vetor_elemento@@Base+0x2c>
   11358:	ldr	r2, [r0]
   1135c:	cmp	r2, r1
   11360:	ble	11370 <vetor_elemento@@Base+0x2c>
   11364:	ldr	r3, [r0, #8]
   11368:	ldr	r0, [r3, r1, lsl #2]
   1136c:	bx	lr
   11370:	mov	r0, #0
   11374:	bx	lr

00011378 <vetor_insere@@Base>:
   11378:	cmp	r0, #0
   1137c:	lsrne	r3, r2, #31
   11380:	moveq	r3, #1
   11384:	cmp	r3, #0
   11388:	bne	11468 <vetor_insere@@Base+0xf0>
   1138c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11390:	strd	r6, [sp, #8]
   11394:	ldr	r6, [r0]
   11398:	str	r8, [sp, #16]
   1139c:	str	lr, [sp, #20]
   113a0:	cmp	r6, r2
   113a4:	blt	11460 <vetor_insere@@Base+0xe8>
   113a8:	ldmib	r0, {r3, r5}
   113ac:	mov	r7, r0
   113b0:	mov	r8, r1
   113b4:	mov	r4, r2
   113b8:	cmp	r6, r3
   113bc:	beq	11428 <vetor_insere@@Base+0xb0>
   113c0:	cmp	r4, r6
   113c4:	addlt	r3, r5, r6, lsl #2
   113c8:	addlt	r2, r5, r4, lsl #2
   113cc:	bge	113e0 <vetor_insere@@Base+0x68>
   113d0:	ldr	ip, [r3, #-4]
   113d4:	str	ip, [r3], #-4
   113d8:	cmp	r2, r3
   113dc:	bne	113d0 <vetor_insere@@Base+0x58>
   113e0:	mov	r0, r8
   113e4:	bl	10be8 <strlen@plt>
   113e8:	add	r0, r0, #1
   113ec:	mov	r1, #1
   113f0:	bl	10b34 <calloc@plt>
   113f4:	cmp	r0, #0
   113f8:	str	r0, [r5, r4, lsl #2]
   113fc:	beq	11460 <vetor_insere@@Base+0xe8>
   11400:	mov	r1, r8
   11404:	bl	10ba0 <strcpy@plt>
   11408:	add	r1, r6, #1
   1140c:	mov	r0, r4
   11410:	str	r1, [r7]
   11414:	ldrd	r4, [sp]
   11418:	ldrd	r6, [sp, #8]
   1141c:	ldr	r8, [sp, #16]
   11420:	add	sp, sp, #20
   11424:	pop	{pc}		; (ldr pc, [sp], #4)
   11428:	cmp	r6, #0
   1142c:	mov	r0, r5
   11430:	lslne	r3, r6, #1
   11434:	moveq	r3, #1
   11438:	moveq	r1, #4
   1143c:	lslne	r1, r6, #3
   11440:	str	r3, [r7, #4]
   11444:	bl	10b94 <realloc@plt>
   11448:	cmp	r0, #0
   1144c:	mov	r5, r0
   11450:	str	r0, [r7, #8]
   11454:	beq	11460 <vetor_insere@@Base+0xe8>
   11458:	ldr	r6, [r7]
   1145c:	b	113c0 <vetor_insere@@Base+0x48>
   11460:	mvn	r0, #0
   11464:	b	11414 <vetor_insere@@Base+0x9c>
   11468:	mvn	r0, #0
   1146c:	bx	lr

00011470 <vetor_remove@@Base>:
   11470:	cmp	r0, #0
   11474:	lsrne	r3, r1, #31
   11478:	moveq	r3, #1
   1147c:	cmp	r3, #0
   11480:	bne	11500 <vetor_remove@@Base+0x90>
   11484:	ldr	r3, [r0]
   11488:	cmp	r3, r1
   1148c:	ble	11500 <vetor_remove@@Base+0x90>
   11490:	ldr	r3, [r0, #8]
   11494:	strd	r4, [sp, #-16]!
   11498:	mov	r5, r0
   1149c:	mov	r4, r1
   114a0:	ldr	r0, [r3, r1, lsl #2]
   114a4:	str	r6, [sp, #8]
   114a8:	lsl	r6, r1, #2
   114ac:	str	lr, [sp, #12]
   114b0:	bl	10b70 <free@plt>
   114b4:	ldr	r0, [r5]
   114b8:	add	r1, r4, #1
   114bc:	cmp	r1, r0
   114c0:	bge	114e4 <vetor_remove@@Base+0x74>
   114c4:	ldr	r3, [r5, #8]
   114c8:	sub	r1, r3, #4
   114cc:	add	r3, r3, r6
   114d0:	add	r1, r1, r0, lsl #2
   114d4:	ldr	r2, [r3, #4]
   114d8:	str	r2, [r3], #4
   114dc:	cmp	r3, r1
   114e0:	bne	114d4 <vetor_remove@@Base+0x64>
   114e4:	sub	r3, r0, #1
   114e8:	ldr	r6, [sp, #8]
   114ec:	mov	r0, #0
   114f0:	str	r3, [r5]
   114f4:	ldrd	r4, [sp]
   114f8:	add	sp, sp, #12
   114fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11500:	mvn	r0, #0
   11504:	bx	lr

00011508 <vetor_pesquisa@@Base>:
   11508:	cmp	r0, #0
   1150c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11510:	strd	r6, [sp, #8]
   11514:	str	r8, [sp, #16]
   11518:	str	lr, [sp, #20]
   1151c:	beq	11578 <vetor_pesquisa@@Base+0x70>
   11520:	ldr	r7, [r0]
   11524:	cmp	r7, #0
   11528:	ble	11578 <vetor_pesquisa@@Base+0x70>
   1152c:	ldr	r5, [r0, #8]
   11530:	mov	r6, r1
   11534:	mov	r4, #0
   11538:	sub	r5, r5, #4
   1153c:	b	1154c <vetor_pesquisa@@Base+0x44>
   11540:	add	r4, r4, #1
   11544:	cmp	r7, r4
   11548:	beq	11578 <vetor_pesquisa@@Base+0x70>
   1154c:	mov	r1, r6
   11550:	ldr	r0, [r5, #4]!
   11554:	bl	10b40 <strcmp@plt>
   11558:	cmp	r0, #0
   1155c:	bne	11540 <vetor_pesquisa@@Base+0x38>
   11560:	mov	r0, r4
   11564:	ldrd	r4, [sp]
   11568:	ldrd	r6, [sp, #8]
   1156c:	ldr	r8, [sp, #16]
   11570:	add	sp, sp, #20
   11574:	pop	{pc}		; (ldr pc, [sp], #4)
   11578:	mvn	r4, #0
   1157c:	b	11560 <vetor_pesquisa@@Base+0x58>

00011580 <vetor_ordena@@Base>:
   11580:	cmp	r0, #0
   11584:	beq	11628 <vetor_ordena@@Base+0xa8>
   11588:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1158c:	strd	r6, [sp, #8]
   11590:	strd	sl, [sp, #24]
   11594:	ldr	sl, [r0]
   11598:	strd	r8, [sp, #16]
   1159c:	str	lr, [sp, #32]
   115a0:	sub	sp, sp, #12
   115a4:	cmp	sl, #1
   115a8:	ble	11608 <vetor_ordena@@Base+0x88>
   115ac:	ldr	r3, [r0, #8]
   115b0:	mov	r8, #1
   115b4:	mov	r9, r3
   115b8:	str	r3, [sp, #4]
   115bc:	ldr	r7, [r9, #4]!
   115c0:	mov	r5, r8
   115c4:	mov	r4, r9
   115c8:	ldr	r6, [r4, #-4]
   115cc:	mov	r0, r7
   115d0:	mov	fp, r4
   115d4:	mov	r1, r6
   115d8:	bl	10b40 <strcmp@plt>
   115dc:	cmp	r0, #0
   115e0:	bge	115f8 <vetor_ordena@@Base+0x78>
   115e4:	subs	r5, r5, #1
   115e8:	str	r6, [r4]
   115ec:	sub	r4, fp, #4
   115f0:	bne	115c8 <vetor_ordena@@Base+0x48>
   115f4:	ldr	fp, [sp, #4]
   115f8:	add	r8, r8, #1
   115fc:	str	r7, [fp]
   11600:	cmp	r8, sl
   11604:	bne	115bc <vetor_ordena@@Base+0x3c>
   11608:	mov	r0, #0
   1160c:	add	sp, sp, #12
   11610:	ldrd	r4, [sp]
   11614:	ldrd	r6, [sp, #8]
   11618:	ldrd	r8, [sp, #16]
   1161c:	ldrd	sl, [sp, #24]
   11620:	add	sp, sp, #32
   11624:	pop	{pc}		; (ldr pc, [sp], #4)
   11628:	mvn	r0, #0
   1162c:	bx	lr

00011630 <novo_str@@Base>:
   11630:	strd	r4, [sp, #-16]!
   11634:	mov	r5, r0
   11638:	mov	r0, #12
   1163c:	str	r6, [sp, #8]
   11640:	str	lr, [sp, #12]
   11644:	bl	10bb8 <malloc@plt>
   11648:	subs	r4, r0, #0
   1164c:	beq	1168c <novo_str@@Base+0x5c>
   11650:	mov	r0, r5
   11654:	bl	10be8 <strlen@plt>
   11658:	add	r6, r0, #1
   1165c:	mov	r0, r6
   11660:	bl	10bb8 <malloc@plt>
   11664:	cmp	r0, #0
   11668:	mov	r3, r0
   1166c:	str	r0, [r4]
   11670:	beq	116a0 <novo_str@@Base+0x70>
   11674:	mov	r2, r6
   11678:	mov	r1, r5
   1167c:	bl	10b88 <memcpy@plt>
   11680:	mov	r3, #0
   11684:	str	r3, [r4, #4]
   11688:	str	r3, [r4, #8]
   1168c:	mov	r0, r4
   11690:	ldrd	r4, [sp]
   11694:	ldr	r6, [sp, #8]
   11698:	add	sp, sp, #12
   1169c:	pop	{pc}		; (ldr pc, [sp], #4)
   116a0:	mov	r0, r4
   116a4:	mov	r4, r3
   116a8:	bl	10b70 <free@plt>
   116ac:	b	1168c <novo_str@@Base+0x5c>

000116b0 <lista_nova@@Base>:
   116b0:	mov	r0, #12
   116b4:	str	r4, [sp, #-8]!
   116b8:	str	lr, [sp, #4]
   116bc:	bl	10bb8 <malloc@plt>
   116c0:	cmp	r0, #0
   116c4:	beq	116d8 <lista_nova@@Base+0x28>
   116c8:	mov	r3, #0
   116cc:	str	r3, [r0]
   116d0:	str	r3, [r0, #4]
   116d4:	str	r3, [r0, #8]
   116d8:	ldr	r4, [sp]
   116dc:	add	sp, sp, #4
   116e0:	pop	{pc}		; (ldr pc, [sp], #4)

000116e4 <lista_apaga@@Base>:
   116e4:	strd	r4, [sp, #-16]!
   116e8:	subs	r5, r0, #0
   116ec:	str	r6, [sp, #8]
   116f0:	str	lr, [sp, #12]
   116f4:	bne	11710 <lista_apaga@@Base+0x2c>
   116f8:	b	11734 <lista_apaga@@Base+0x50>
   116fc:	ldm	r4, {r0, r3}
   11700:	str	r3, [r5]
   11704:	bl	10b70 <free@plt>
   11708:	mov	r0, r4
   1170c:	bl	10b70 <free@plt>
   11710:	ldr	r4, [r5]
   11714:	cmp	r4, #0
   11718:	bne	116fc <lista_apaga@@Base+0x18>
   1171c:	mov	r0, r5
   11720:	ldrd	r4, [sp]
   11724:	ldr	r6, [sp, #8]
   11728:	ldr	lr, [sp, #12]
   1172c:	add	sp, sp, #16
   11730:	b	10b70 <free@plt>
   11734:	ldrd	r4, [sp]
   11738:	ldr	r6, [sp, #8]
   1173c:	add	sp, sp, #12
   11740:	pop	{pc}		; (ldr pc, [sp], #4)

00011744 <lista_tamanho@@Base>:
   11744:	cmp	r0, #0
   11748:	ldrne	r0, [r0, #8]
   1174c:	mvneq	r0, #0
   11750:	bx	lr

00011754 <lista_inicio@@Base>:
   11754:	cmp	r0, #0
   11758:	ldrne	r0, [r0]
   1175c:	bx	lr

00011760 <lista_fim@@Base>:
   11760:	cmp	r0, #0
   11764:	ldrne	r0, [r0, #4]
   11768:	bx	lr

0001176c <lista_insere@@Base>:
   1176c:	cmp	r1, #0
   11770:	cmpne	r0, #0
   11774:	beq	1182c <lista_insere@@Base+0xc0>
   11778:	strd	r4, [sp, #-16]!
   1177c:	mov	r5, r0
   11780:	mov	r0, r1
   11784:	mov	r4, r2
   11788:	str	r6, [sp, #8]
   1178c:	str	lr, [sp, #12]
   11790:	bl	11630 <novo_str@@Base>
   11794:	cmp	r0, #0
   11798:	beq	117f0 <lista_insere@@Base+0x84>
   1179c:	cmp	r4, #0
   117a0:	ldr	r2, [r5]
   117a4:	ldr	r3, [r5, #8]
   117a8:	add	r3, r3, #1
   117ac:	str	r3, [r5, #8]
   117b0:	beq	11804 <lista_insere@@Base+0x98>
   117b4:	cmp	r4, r2
   117b8:	streq	r4, [r0, #4]
   117bc:	streq	r0, [r4, #8]
   117c0:	streq	r0, [r5]
   117c4:	beq	117e0 <lista_insere@@Base+0x74>
   117c8:	ldr	r3, [r4, #8]
   117cc:	str	r4, [r0, #4]
   117d0:	str	r3, [r0, #8]
   117d4:	ldr	r3, [r4, #8]
   117d8:	str	r0, [r3, #4]
   117dc:	str	r0, [r4, #8]
   117e0:	ldrd	r4, [sp]
   117e4:	ldr	r6, [sp, #8]
   117e8:	add	sp, sp, #12
   117ec:	pop	{pc}		; (ldr pc, [sp], #4)
   117f0:	ldrd	r4, [sp]
   117f4:	mov	r0, #0
   117f8:	ldr	r6, [sp, #8]
   117fc:	add	sp, sp, #12
   11800:	pop	{pc}		; (ldr pc, [sp], #4)
   11804:	cmp	r2, #0
   11808:	ldr	r6, [sp, #8]
   1180c:	ldrne	r3, [r5, #4]
   11810:	streq	r0, [r5]
   11814:	strne	r3, [r0, #8]
   11818:	strne	r0, [r3, #4]
   1181c:	str	r0, [r5, #4]
   11820:	ldrd	r4, [sp]
   11824:	add	sp, sp, #12
   11828:	pop	{pc}		; (ldr pc, [sp], #4)
   1182c:	mov	r0, #0
   11830:	bx	lr

00011834 <lista_remove@@Base>:
   11834:	cmp	r1, #0
   11838:	cmpne	r0, #0
   1183c:	strd	r4, [sp, #-16]!
   11840:	moveq	r5, #0
   11844:	str	r6, [sp, #8]
   11848:	str	lr, [sp, #12]
   1184c:	beq	11894 <lista_remove@@Base+0x60>
   11850:	ldr	r3, [r0, #8]
   11854:	mov	r4, r1
   11858:	ldr	r2, [r1, #8]
   1185c:	ldr	r5, [r1, #4]
   11860:	sub	r3, r3, #1
   11864:	cmp	r2, #0
   11868:	str	r3, [r0, #8]
   1186c:	strne	r5, [r2, #4]
   11870:	ldrne	r5, [r1, #4]
   11874:	streq	r5, [r0]
   11878:	cmp	r5, #0
   1187c:	streq	r2, [r0, #4]
   11880:	strne	r2, [r5, #8]
   11884:	ldr	r0, [r1]
   11888:	bl	10b70 <free@plt>
   1188c:	mov	r0, r4
   11890:	bl	10b70 <free@plt>
   11894:	mov	r0, r5
   11898:	ldrd	r4, [sp]
   1189c:	ldr	r6, [sp, #8]
   118a0:	add	sp, sp, #12
   118a4:	pop	{pc}		; (ldr pc, [sp], #4)

000118a8 <lista_pesquisa@@Base>:
   118a8:	strd	r4, [sp, #-16]!
   118ac:	clz	r4, r1
   118b0:	cmp	r0, #0
   118b4:	lsr	r4, r4, #5
   118b8:	moveq	r4, #1
   118bc:	str	r6, [sp, #8]
   118c0:	str	lr, [sp, #12]
   118c4:	cmp	r4, #0
   118c8:	movne	r4, #0
   118cc:	bne	11914 <lista_pesquisa@@Base+0x6c>
   118d0:	cmp	r2, #1
   118d4:	bhi	11914 <lista_pesquisa@@Base+0x6c>
   118d8:	cmp	r2, #0
   118dc:	mov	r5, r1
   118e0:	bne	11928 <lista_pesquisa@@Base+0x80>
   118e4:	ldr	r4, [r0]
   118e8:	cmp	r4, #0
   118ec:	bne	11900 <lista_pesquisa@@Base+0x58>
   118f0:	b	11914 <lista_pesquisa@@Base+0x6c>
   118f4:	ldr	r4, [r4, #4]
   118f8:	cmp	r4, #0
   118fc:	beq	11914 <lista_pesquisa@@Base+0x6c>
   11900:	mov	r1, r5
   11904:	ldr	r0, [r4]
   11908:	bl	10b40 <strcmp@plt>
   1190c:	cmp	r0, #0
   11910:	bne	118f4 <lista_pesquisa@@Base+0x4c>
   11914:	mov	r0, r4
   11918:	ldrd	r4, [sp]
   1191c:	ldr	r6, [sp, #8]
   11920:	add	sp, sp, #12
   11924:	pop	{pc}		; (ldr pc, [sp], #4)
   11928:	ldr	r4, [r0, #4]
   1192c:	cmp	r4, #0
   11930:	bne	11944 <lista_pesquisa@@Base+0x9c>
   11934:	b	11914 <lista_pesquisa@@Base+0x6c>
   11938:	ldr	r4, [r4, #8]
   1193c:	cmp	r4, #0
   11940:	beq	11914 <lista_pesquisa@@Base+0x6c>
   11944:	mov	r1, r5
   11948:	ldr	r0, [r4]
   1194c:	bl	10b40 <strcmp@plt>
   11950:	cmp	r0, #0
   11954:	bne	11938 <lista_pesquisa@@Base+0x90>
   11958:	b	11914 <lista_pesquisa@@Base+0x6c>

0001195c <lista_ordena@@Base>:
   1195c:	cmp	r0, #0
   11960:	beq	119ec <lista_ordena@@Base+0x90>
   11964:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11968:	strd	r6, [sp, #8]
   1196c:	ldr	r6, [r0]
   11970:	str	r8, [sp, #16]
   11974:	str	lr, [sp, #20]
   11978:	ldr	r7, [r6, #4]
   1197c:	cmp	r7, #0
   11980:	beq	119d4 <lista_ordena@@Base+0x78>
   11984:	mov	r5, r6
   11988:	mov	r4, r7
   1198c:	ldr	r0, [r4]
   11990:	ldr	r1, [r5]
   11994:	bl	10b40 <strcmp@plt>
   11998:	cmp	r0, #0
   1199c:	movlt	r5, r4
   119a0:	ldr	r4, [r4, #4]
   119a4:	cmp	r4, #0
   119a8:	bne	1198c <lista_ordena@@Base+0x30>
   119ac:	cmp	r6, r5
   119b0:	beq	119c4 <lista_ordena@@Base+0x68>
   119b4:	ldr	r2, [r5]
   119b8:	ldr	r3, [r6]
   119bc:	str	r2, [r6]
   119c0:	str	r3, [r5]
   119c4:	mov	r6, r7
   119c8:	ldr	r7, [r6, #4]
   119cc:	cmp	r7, #0
   119d0:	bne	11984 <lista_ordena@@Base+0x28>
   119d4:	mov	r0, r7
   119d8:	ldrd	r4, [sp]
   119dc:	ldrd	r6, [sp, #8]
   119e0:	ldr	r8, [sp, #16]
   119e4:	add	sp, sp, #20
   119e8:	pop	{pc}		; (ldr pc, [sp], #4)
   119ec:	mvn	r0, #0
   119f0:	bx	lr

000119f4 <lista_inverte@@Base>:
   119f4:	strd	r4, [sp, #-12]!
   119f8:	subs	r5, r0, #0
   119fc:	str	lr, [sp, #8]
   11a00:	beq	11a94 <lista_inverte@@Base+0xa0>
   11a04:	ldr	r4, [r5, #8]
   11a08:	cmp	r4, #1
   11a0c:	movle	r0, #0
   11a10:	ble	11a80 <lista_inverte@@Base+0x8c>
   11a14:	ldr	r1, [r5]
   11a18:	cmp	r4, #2
   11a1c:	ldr	r3, [r1, #4]
   11a20:	beq	11a8c <lista_inverte@@Base+0x98>
   11a24:	sub	r4, r4, #2
   11a28:	mov	ip, #0
   11a2c:	b	11a34 <lista_inverte@@Base+0x40>
   11a30:	mov	r3, r2
   11a34:	ldmib	r3, {r2, lr}
   11a38:	add	ip, ip, #1
   11a3c:	cmp	r4, ip
   11a40:	str	r2, [lr, #4]
   11a44:	str	lr, [r2, #8]
   11a48:	str	r1, [r3, #4]
   11a4c:	str	r3, [r1, #8]
   11a50:	mov	r1, r3
   11a54:	bne	11a30 <lista_inverte@@Base+0x3c>
   11a58:	ldr	r2, [r5, #4]
   11a5c:	mov	r1, #0
   11a60:	mov	r0, r1
   11a64:	ldr	ip, [r2, #8]
   11a68:	str	ip, [r5, #4]
   11a6c:	str	r1, [ip, #4]
   11a70:	str	r3, [r2, #4]
   11a74:	str	r1, [r2, #8]
   11a78:	str	r2, [r3, #8]
   11a7c:	str	r2, [r5]
   11a80:	ldrd	r4, [sp]
   11a84:	add	sp, sp, #8
   11a88:	pop	{pc}		; (ldr pc, [sp], #4)
   11a8c:	mov	r3, r1
   11a90:	b	11a58 <lista_inverte@@Base+0x64>
   11a94:	mvn	r0, #0
   11a98:	b	11a80 <lista_inverte@@Base+0x8c>

00011a9c <__libc_csu_init@@Base>:
   11a9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11aa0:	mov	r7, r0
   11aa4:	ldr	r6, [pc, #72]	; 11af4 <__libc_csu_init@@Base+0x58>
   11aa8:	ldr	r5, [pc, #72]	; 11af8 <__libc_csu_init@@Base+0x5c>
   11aac:	add	r6, pc, r6
   11ab0:	add	r5, pc, r5
   11ab4:	sub	r6, r6, r5
   11ab8:	mov	r8, r1
   11abc:	mov	r9, r2
   11ac0:	bl	10b14 <calloc@plt-0x20>
   11ac4:	asrs	r6, r6, #2
   11ac8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11acc:	mov	r4, #0
   11ad0:	add	r4, r4, #1
   11ad4:	ldr	r3, [r5], #4
   11ad8:	mov	r2, r9
   11adc:	mov	r1, r8
   11ae0:	mov	r0, r7
   11ae4:	blx	r3
   11ae8:	cmp	r6, r4
   11aec:	bne	11ad0 <__libc_csu_init@@Base+0x34>
   11af0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11af4:	andeq	r0, r1, r0, ror #8
   11af8:	andeq	r0, r1, r8, asr r4

00011afc <__libc_csu_fini@@Base>:
   11afc:	bx	lr

Disassembly of section .fini:

00011b00 <.fini>:
   11b00:	push	{r3, lr}
   11b04:	pop	{r3, pc}
