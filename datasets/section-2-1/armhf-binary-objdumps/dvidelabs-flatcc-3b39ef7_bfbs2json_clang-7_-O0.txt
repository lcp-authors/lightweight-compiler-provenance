
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

000108e0 <.init>:
   108e0:	push	{r3, lr}
   108e4:	bl	109fc <_start@@Base+0x3c>
   108e8:	pop	{r3, pc}

Disassembly of section .plt:

000108ec <printf@plt-0x14>:
   108ec:	push	{lr}		; (str lr, [sp, #-4]!)
   108f0:	ldr	lr, [pc, #4]	; 108fc <printf@plt-0x4>
   108f4:	add	lr, pc, lr
   108f8:	ldr	pc, [lr, #8]!
   108fc:	andeq	r5, r1, r4, lsl #14

00010900 <printf@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #86016	; 0x15000
   10908:	ldr	pc, [ip, #1796]!	; 0x704

0001090c <fopen@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #86016	; 0x15000
   10914:	ldr	pc, [ip, #1788]!	; 0x6fc

00010918 <free@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #86016	; 0x15000
   10920:	ldr	pc, [ip, #1780]!	; 0x6f4

00010924 <ftell@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #86016	; 0x15000
   1092c:	ldr	pc, [ip, #1772]!	; 0x6ec

00010930 <rewind@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #86016	; 0x15000
   10938:	ldr	pc, [ip, #1764]!	; 0x6e4

0001093c <fread@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #86016	; 0x15000
   10944:	ldr	pc, [ip, #1756]!	; 0x6dc

00010948 <malloc@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #86016	; 0x15000
   10950:	ldr	pc, [ip, #1748]!	; 0x6d4

00010954 <__libc_start_main@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #86016	; 0x15000
   1095c:	ldr	pc, [ip, #1740]!	; 0x6cc

00010960 <__gmon_start__@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #86016	; 0x15000
   10968:	ldr	pc, [ip, #1732]!	; 0x6c4

0001096c <exit@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #86016	; 0x15000
   10974:	ldr	pc, [ip, #1724]!	; 0x6bc

00010978 <fprintf@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #86016	; 0x15000
   10980:	ldr	pc, [ip, #1716]!	; 0x6b4

00010984 <strncpy@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #86016	; 0x15000
   1098c:	ldr	pc, [ip, #1708]!	; 0x6ac

00010990 <fclose@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #86016	; 0x15000
   10998:	ldr	pc, [ip, #1700]!	; 0x6a4

0001099c <fseek@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #86016	; 0x15000
   109a4:	ldr	pc, [ip, #1692]!	; 0x69c

000109a8 <abort@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #86016	; 0x15000
   109b0:	ldr	pc, [ip, #1684]!	; 0x694

000109b4 <__assert_fail@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #86016	; 0x15000
   109bc:	ldr	pc, [ip, #1676]!	; 0x68c

Disassembly of section .text:

000109c0 <_start@@Base>:
   109c0:	mov	fp, #0
   109c4:	mov	lr, #0
   109c8:	pop	{r1}		; (ldr r1, [sp], #4)
   109cc:	mov	r2, sp
   109d0:	push	{r2}		; (str r2, [sp, #-4]!)
   109d4:	push	{r0}		; (str r0, [sp, #-4]!)
   109d8:	ldr	ip, [pc, #16]	; 109f0 <_start@@Base+0x30>
   109dc:	push	{ip}		; (str ip, [sp, #-4]!)
   109e0:	ldr	r0, [pc, #12]	; 109f4 <_start@@Base+0x34>
   109e4:	ldr	r3, [pc, #12]	; 109f8 <_start@@Base+0x38>
   109e8:	bl	10954 <__libc_start_main@plt>
   109ec:	bl	109a8 <abort@plt>
   109f0:	andeq	r4, r1, r0, lsl sl
   109f4:	andeq	r4, r1, r4, lsl #11
   109f8:			; <UNDEFINED> instruction: 0x000149b0
   109fc:	ldr	r3, [pc, #20]	; 10a18 <_start@@Base+0x58>
   10a00:	ldr	r2, [pc, #20]	; 10a1c <_start@@Base+0x5c>
   10a04:	add	r3, pc, r3
   10a08:	ldr	r2, [r3, r2]
   10a0c:	cmp	r2, #0
   10a10:	bxeq	lr
   10a14:	b	10960 <__gmon_start__@plt>
   10a18:	strdeq	r5, [r1], -r4
   10a1c:	andeq	r0, r0, r0, asr r0
   10a20:	ldr	r0, [pc, #24]	; 10a40 <_start@@Base+0x80>
   10a24:	ldr	r3, [pc, #24]	; 10a44 <_start@@Base+0x84>
   10a28:	cmp	r3, r0
   10a2c:	bxeq	lr
   10a30:	ldr	r3, [pc, #16]	; 10a48 <_start@@Base+0x88>
   10a34:	cmp	r3, #0
   10a38:	bxeq	lr
   10a3c:	bx	r3
   10a40:	andeq	r6, r2, ip, asr r0
   10a44:	andeq	r6, r2, ip, asr r0
   10a48:	andeq	r0, r0, r0
   10a4c:	ldr	r0, [pc, #36]	; 10a78 <_start@@Base+0xb8>
   10a50:	ldr	r1, [pc, #36]	; 10a7c <_start@@Base+0xbc>
   10a54:	sub	r1, r1, r0
   10a58:	asr	r1, r1, #2
   10a5c:	add	r1, r1, r1, lsr #31
   10a60:	asrs	r1, r1, #1
   10a64:	bxeq	lr
   10a68:	ldr	r3, [pc, #16]	; 10a80 <_start@@Base+0xc0>
   10a6c:	cmp	r3, #0
   10a70:	bxeq	lr
   10a74:	bx	r3
   10a78:	andeq	r6, r2, ip, asr r0
   10a7c:	andeq	r6, r2, ip, asr r0
   10a80:	andeq	r0, r0, r0
   10a84:	push	{r4, lr}
   10a88:	ldr	r4, [pc, #24]	; 10aa8 <_start@@Base+0xe8>
   10a8c:	ldrb	r3, [r4]
   10a90:	cmp	r3, #0
   10a94:	popne	{r4, pc}
   10a98:	bl	10a20 <_start@@Base+0x60>
   10a9c:	mov	r3, #1
   10aa0:	strb	r3, [r4]
   10aa4:	pop	{r4, pc}
   10aa8:	andeq	r6, r2, ip, asr r0
   10aac:	b	10a4c <_start@@Base+0x8c>

00010ab0 <print_type@@Base>:
   10ab0:	push	{fp, lr}
   10ab4:	mov	fp, sp
   10ab8:	sub	sp, sp, #56	; 0x38
   10abc:	ldr	r1, [pc, #332]	; 10c10 <print_type@@Base+0x160>
   10ac0:	add	r1, pc, r1
   10ac4:	str	r0, [fp, #-4]
   10ac8:	movw	r0, #1
   10acc:	str	r0, [fp, #-8]
   10ad0:	mov	r0, r1
   10ad4:	bl	10900 <printf@plt>
   10ad8:	ldr	r1, [fp, #-4]
   10adc:	str	r0, [fp, #-12]
   10ae0:	mov	r0, r1
   10ae4:	bl	10c30 <print_type@@Base+0x180>
   10ae8:	cmp	r0, #0
   10aec:	beq	10b40 <print_type@@Base+0x90>
   10af0:	ldr	r0, [fp, #-8]
   10af4:	cmp	r0, #0
   10af8:	bne	10b0c <print_type@@Base+0x5c>
   10afc:	ldr	r0, [pc, #272]	; 10c14 <print_type@@Base+0x164>
   10b00:	add	r0, pc, r0
   10b04:	bl	10900 <printf@plt>
   10b08:	str	r0, [fp, #-16]
   10b0c:	ldr	r0, [fp, #-4]
   10b10:	bl	10ed8 <print_type@@Base+0x428>
   10b14:	sxtb	r0, r0
   10b18:	bl	10cfc <print_type@@Base+0x24c>
   10b1c:	ldr	lr, [pc, #244]	; 10c18 <print_type@@Base+0x168>
   10b20:	add	lr, pc, lr
   10b24:	str	r0, [fp, #-20]	; 0xffffffec
   10b28:	mov	r0, lr
   10b2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10b30:	bl	10900 <printf@plt>
   10b34:	movw	r1, #0
   10b38:	str	r1, [fp, #-8]
   10b3c:	str	r0, [fp, #-24]	; 0xffffffe8
   10b40:	ldr	r0, [fp, #-4]
   10b44:	bl	10fcc <print_type@@Base+0x51c>
   10b48:	cmp	r0, #0
   10b4c:	beq	10ba0 <print_type@@Base+0xf0>
   10b50:	ldr	r0, [fp, #-8]
   10b54:	cmp	r0, #0
   10b58:	bne	10b6c <print_type@@Base+0xbc>
   10b5c:	ldr	r0, [pc, #184]	; 10c1c <print_type@@Base+0x16c>
   10b60:	add	r0, pc, r0
   10b64:	bl	10900 <printf@plt>
   10b68:	str	r0, [sp, #28]
   10b6c:	ldr	r0, [fp, #-4]
   10b70:	bl	10ed8 <print_type@@Base+0x428>
   10b74:	sxtb	r0, r0
   10b78:	bl	10cfc <print_type@@Base+0x24c>
   10b7c:	ldr	lr, [pc, #156]	; 10c20 <print_type@@Base+0x170>
   10b80:	add	lr, pc, lr
   10b84:	str	r0, [sp, #24]
   10b88:	mov	r0, lr
   10b8c:	ldr	r1, [sp, #24]
   10b90:	bl	10900 <printf@plt>
   10b94:	movw	r1, #0
   10b98:	str	r1, [fp, #-8]
   10b9c:	str	r0, [sp, #20]
   10ba0:	ldr	r0, [fp, #-4]
   10ba4:	bl	11098 <print_type@@Base+0x5e8>
   10ba8:	cmp	r0, #0
   10bac:	beq	10bf8 <print_type@@Base+0x148>
   10bb0:	ldr	r0, [fp, #-8]
   10bb4:	cmp	r0, #0
   10bb8:	bne	10bcc <print_type@@Base+0x11c>
   10bbc:	ldr	r0, [pc, #96]	; 10c24 <print_type@@Base+0x174>
   10bc0:	add	r0, pc, r0
   10bc4:	bl	10900 <printf@plt>
   10bc8:	str	r0, [sp, #16]
   10bcc:	ldr	r0, [fp, #-4]
   10bd0:	bl	11164 <print_type@@Base+0x6b4>
   10bd4:	ldr	lr, [pc, #76]	; 10c28 <print_type@@Base+0x178>
   10bd8:	add	lr, pc, lr
   10bdc:	str	r0, [sp, #12]
   10be0:	mov	r0, lr
   10be4:	ldr	r1, [sp, #12]
   10be8:	bl	10900 <printf@plt>
   10bec:	movw	r1, #0
   10bf0:	str	r1, [fp, #-8]
   10bf4:	str	r0, [sp, #8]
   10bf8:	ldr	r0, [pc, #44]	; 10c2c <print_type@@Base+0x17c>
   10bfc:	add	r0, pc, r0
   10c00:	bl	10900 <printf@plt>
   10c04:	str	r0, [sp, #4]
   10c08:	mov	sp, fp
   10c0c:	pop	{fp, pc}
   10c10:	andeq	r3, r0, r8, asr pc
   10c14:	andeq	r3, r0, sl, lsl pc
   10c18:	strdeq	r3, [r0], -ip
   10c1c:			; <UNDEFINED> instruction: 0x00003eba
   10c20:	andeq	r3, r0, sp, lsr #29
   10c24:	andeq	r3, r0, sl, asr lr
   10c28:	andeq	r3, r0, r4, ror #28
   10c2c:	andeq	r3, r0, fp, asr #28
   10c30:	push	{fp, lr}
   10c34:	mov	fp, sp
   10c38:	sub	sp, sp, #16
   10c3c:	str	r0, [fp, #-4]
   10c40:	movw	r0, #0
   10c44:	strh	r0, [fp, #-6]
   10c48:	ldr	r0, [fp, #-4]
   10c4c:	movw	r1, #0
   10c50:	cmp	r0, r1
   10c54:	beq	10c60 <print_type@@Base+0x1b0>
   10c58:	b	10c5c <print_type@@Base+0x1ac>
   10c5c:	b	10c80 <print_type@@Base+0x1d0>
   10c60:	ldr	r0, [pc, #136]	; 10cf0 <print_type@@Base+0x240>
   10c64:	add	r0, pc, r0
   10c68:	ldr	r1, [pc, #132]	; 10cf4 <print_type@@Base+0x244>
   10c6c:	add	r1, pc, r1
   10c70:	ldr	r2, [pc, #128]	; 10cf8 <print_type@@Base+0x248>
   10c74:	add	r3, pc, r2
   10c78:	movw	r2, #147	; 0x93
   10c7c:	bl	109b4 <__assert_fail@plt>
   10c80:	mov	r0, #0
   10c84:	strh	r0, [sp, #8]
   10c88:	ldr	r0, [fp, #-4]
   10c8c:	str	r0, [sp]
   10c90:	bl	14640 <main@@Base+0xbc>
   10c94:	ldr	lr, [sp]
   10c98:	sub	r0, lr, r0
   10c9c:	str	r0, [sp, #4]
   10ca0:	ldr	r0, [sp, #4]
   10ca4:	bl	14664 <main@@Base+0xe0>
   10ca8:	ldrh	lr, [sp, #8]
   10cac:	add	lr, lr, #3
   10cb0:	lsl	lr, lr, #1
   10cb4:	cmp	r0, lr
   10cb8:	bcc	10cd4 <print_type@@Base+0x224>
   10cbc:	ldr	r0, [sp, #4]
   10cc0:	ldrh	r1, [sp, #8]
   10cc4:	add	r0, r0, r1, lsl #1
   10cc8:	add	r0, r0, #4
   10ccc:	bl	14664 <main@@Base+0xe0>
   10cd0:	strh	r0, [fp, #-6]
   10cd4:	ldrh	r0, [fp, #-6]
   10cd8:	cmp	r0, #0
   10cdc:	movw	r0, #0
   10ce0:	movne	r0, #1
   10ce4:	and	r0, r0, #1
   10ce8:	mov	sp, fp
   10cec:	pop	{fp, pc}
   10cf0:	strdeq	r4, [r0], -sl
   10cf4:	andeq	r4, r0, r8, lsl r1
   10cf8:	andeq	r4, r0, r5, lsl #3
   10cfc:	sub	sp, sp, #12
   10d00:	strb	r0, [sp, #7]
   10d04:	ldrsb	r0, [sp, #7]
   10d08:	cmp	r0, #16
   10d0c:	str	r0, [sp]
   10d10:	bhi	10e78 <print_type@@Base+0x3c8>
   10d14:	add	r0, pc, #8
   10d18:	ldr	r1, [sp]
   10d1c:	ldr	r2, [r0, r1, lsl #2]
   10d20:	add	pc, r0, r2
   10d24:	andeq	r0, r0, r4, asr #32
   10d28:	andeq	r0, r0, r4, asr r0
   10d2c:	andeq	r0, r0, r4, rrx
   10d30:	andeq	r0, r0, r4, ror r0
   10d34:	andeq	r0, r0, r4, lsl #1
   10d38:	muleq	r0, r4, r0
   10d3c:	andeq	r0, r0, r4, lsr #1
   10d40:	strheq	r0, [r0], -r4
   10d44:	andeq	r0, r0, r4, asr #1
   10d48:	ldrdeq	r0, [r0], -r4
   10d4c:	andeq	r0, r0, r4, ror #1
   10d50:	strdeq	r0, [r0], -r4
   10d54:	andeq	r0, r0, r4, lsl #2
   10d58:	andeq	r0, r0, r4, lsl r1
   10d5c:	andeq	r0, r0, r4, lsr #2
   10d60:	andeq	r0, r0, r4, lsr r1
   10d64:	andeq	r0, r0, r4, asr #2
   10d68:	ldr	r0, [pc, #352]	; 10ed0 <print_type@@Base+0x420>
   10d6c:	add	r0, pc, r0
   10d70:	str	r0, [sp, #8]
   10d74:	b	10e84 <print_type@@Base+0x3d4>
   10d78:	ldr	r0, [pc, #332]	; 10ecc <print_type@@Base+0x41c>
   10d7c:	add	r0, pc, r0
   10d80:	str	r0, [sp, #8]
   10d84:	b	10e84 <print_type@@Base+0x3d4>
   10d88:	ldr	r0, [pc, #312]	; 10ec8 <print_type@@Base+0x418>
   10d8c:	add	r0, pc, r0
   10d90:	str	r0, [sp, #8]
   10d94:	b	10e84 <print_type@@Base+0x3d4>
   10d98:	ldr	r0, [pc, #292]	; 10ec4 <print_type@@Base+0x414>
   10d9c:	add	r0, pc, r0
   10da0:	str	r0, [sp, #8]
   10da4:	b	10e84 <print_type@@Base+0x3d4>
   10da8:	ldr	r0, [pc, #272]	; 10ec0 <print_type@@Base+0x410>
   10dac:	add	r0, pc, r0
   10db0:	str	r0, [sp, #8]
   10db4:	b	10e84 <print_type@@Base+0x3d4>
   10db8:	ldr	r0, [pc, #252]	; 10ebc <print_type@@Base+0x40c>
   10dbc:	add	r0, pc, r0
   10dc0:	str	r0, [sp, #8]
   10dc4:	b	10e84 <print_type@@Base+0x3d4>
   10dc8:	ldr	r0, [pc, #232]	; 10eb8 <print_type@@Base+0x408>
   10dcc:	add	r0, pc, r0
   10dd0:	str	r0, [sp, #8]
   10dd4:	b	10e84 <print_type@@Base+0x3d4>
   10dd8:	ldr	r0, [pc, #212]	; 10eb4 <print_type@@Base+0x404>
   10ddc:	add	r0, pc, r0
   10de0:	str	r0, [sp, #8]
   10de4:	b	10e84 <print_type@@Base+0x3d4>
   10de8:	ldr	r0, [pc, #192]	; 10eb0 <print_type@@Base+0x400>
   10dec:	add	r0, pc, r0
   10df0:	str	r0, [sp, #8]
   10df4:	b	10e84 <print_type@@Base+0x3d4>
   10df8:	ldr	r0, [pc, #172]	; 10eac <print_type@@Base+0x3fc>
   10dfc:	add	r0, pc, r0
   10e00:	str	r0, [sp, #8]
   10e04:	b	10e84 <print_type@@Base+0x3d4>
   10e08:	ldr	r0, [pc, #152]	; 10ea8 <print_type@@Base+0x3f8>
   10e0c:	add	r0, pc, r0
   10e10:	str	r0, [sp, #8]
   10e14:	b	10e84 <print_type@@Base+0x3d4>
   10e18:	ldr	r0, [pc, #132]	; 10ea4 <print_type@@Base+0x3f4>
   10e1c:	add	r0, pc, r0
   10e20:	str	r0, [sp, #8]
   10e24:	b	10e84 <print_type@@Base+0x3d4>
   10e28:	ldr	r0, [pc, #112]	; 10ea0 <print_type@@Base+0x3f0>
   10e2c:	add	r0, pc, r0
   10e30:	str	r0, [sp, #8]
   10e34:	b	10e84 <print_type@@Base+0x3d4>
   10e38:	ldr	r0, [pc, #92]	; 10e9c <print_type@@Base+0x3ec>
   10e3c:	add	r0, pc, r0
   10e40:	str	r0, [sp, #8]
   10e44:	b	10e84 <print_type@@Base+0x3d4>
   10e48:	ldr	r0, [pc, #72]	; 10e98 <print_type@@Base+0x3e8>
   10e4c:	add	r0, pc, r0
   10e50:	str	r0, [sp, #8]
   10e54:	b	10e84 <print_type@@Base+0x3d4>
   10e58:	ldr	r0, [pc, #52]	; 10e94 <print_type@@Base+0x3e4>
   10e5c:	add	r0, pc, r0
   10e60:	str	r0, [sp, #8]
   10e64:	b	10e84 <print_type@@Base+0x3d4>
   10e68:	ldr	r0, [pc, #32]	; 10e90 <print_type@@Base+0x3e0>
   10e6c:	add	r0, pc, r0
   10e70:	str	r0, [sp, #8]
   10e74:	b	10e84 <print_type@@Base+0x3d4>
   10e78:	ldr	r0, [pc, #84]	; 10ed4 <print_type@@Base+0x424>
   10e7c:	add	r0, pc, r0
   10e80:	str	r0, [sp, #8]
   10e84:	ldr	r0, [sp, #8]
   10e88:	add	sp, sp, #12
   10e8c:	bx	lr
   10e90:	andeq	r4, r0, r6, lsl r0
   10e94:	andeq	r4, r0, r2, lsr #32
   10e98:	andeq	r4, r0, fp, lsr #32
   10e9c:	andeq	r4, r0, r4, lsr r0
   10ea0:	andeq	r4, r0, sp, lsr r0
   10ea4:	andeq	r4, r0, r7, asr #32
   10ea8:	andeq	r4, r0, r1, asr r0
   10eac:	andeq	r4, r0, r2, rrx
   10eb0:	andeq	r4, r0, ip, rrx
   10eb4:	andeq	r4, r0, sp, ror r0
   10eb8:	andeq	r4, r0, r5, lsl #1
   10ebc:	muleq	r0, r6, r0
   10ec0:	muleq	r0, pc, r0	; <UNPREDICTABLE>
   10ec4:	strheq	r4, [r0], -r0
   10ec8:	strheq	r4, [r0], -sl
   10ecc:	andeq	r4, r0, r4, asr #1
   10ed0:	andeq	r4, r0, pc, asr #1
   10ed4:	andeq	r3, r0, r2, lsl lr
   10ed8:	push	{fp, lr}
   10edc:	mov	fp, sp
   10ee0:	sub	sp, sp, #24
   10ee4:	str	r0, [fp, #-4]
   10ee8:	movw	r0, #0
   10eec:	strh	r0, [fp, #-6]
   10ef0:	ldr	r0, [fp, #-4]
   10ef4:	movw	r1, #0
   10ef8:	cmp	r0, r1
   10efc:	beq	10f08 <print_type@@Base+0x458>
   10f00:	b	10f04 <print_type@@Base+0x454>
   10f04:	b	10f28 <print_type@@Base+0x478>
   10f08:	ldr	r0, [pc, #176]	; 10fc0 <print_type@@Base+0x510>
   10f0c:	add	r0, pc, r0
   10f10:	ldr	r1, [pc, #172]	; 10fc4 <print_type@@Base+0x514>
   10f14:	add	r1, pc, r1
   10f18:	ldr	r2, [pc, #168]	; 10fc8 <print_type@@Base+0x518>
   10f1c:	add	r3, pc, r2
   10f20:	movw	r2, #147	; 0x93
   10f24:	bl	109b4 <__assert_fail@plt>
   10f28:	mov	r0, #0
   10f2c:	strh	r0, [fp, #-8]
   10f30:	ldr	r0, [fp, #-4]
   10f34:	str	r0, [sp, #8]
   10f38:	bl	14640 <main@@Base+0xbc>
   10f3c:	ldr	lr, [sp, #8]
   10f40:	sub	r0, lr, r0
   10f44:	str	r0, [sp, #12]
   10f48:	ldr	r0, [sp, #12]
   10f4c:	bl	14664 <main@@Base+0xe0>
   10f50:	ldrh	lr, [fp, #-8]
   10f54:	add	lr, lr, #3
   10f58:	lsl	lr, lr, #1
   10f5c:	cmp	r0, lr
   10f60:	bcc	10f7c <print_type@@Base+0x4cc>
   10f64:	ldr	r0, [sp, #12]
   10f68:	ldrh	r1, [fp, #-8]
   10f6c:	add	r0, r0, r1, lsl #1
   10f70:	add	r0, r0, #4
   10f74:	bl	14664 <main@@Base+0xe0>
   10f78:	strh	r0, [fp, #-6]
   10f7c:	ldrh	r0, [fp, #-6]
   10f80:	cmp	r0, #0
   10f84:	beq	10fa4 <print_type@@Base+0x4f4>
   10f88:	ldr	r0, [fp, #-4]
   10f8c:	ldrh	r1, [fp, #-6]
   10f90:	add	r0, r0, r1
   10f94:	bl	146b4 <main@@Base+0x130>
   10f98:	sxtb	r0, r0
   10f9c:	str	r0, [sp, #4]
   10fa0:	b	10fb0 <print_type@@Base+0x500>
   10fa4:	movw	r0, #0
   10fa8:	str	r0, [sp, #4]
   10fac:	b	10fb0 <print_type@@Base+0x500>
   10fb0:	ldr	r0, [sp, #4]
   10fb4:	sxtb	r0, r0
   10fb8:	mov	sp, fp
   10fbc:	pop	{fp, pc}
   10fc0:	andeq	r3, r0, r2, asr lr
   10fc4:	andeq	r3, r0, r0, ror lr
   10fc8:	andeq	r3, r0, ip, ror #30
   10fcc:	push	{fp, lr}
   10fd0:	mov	fp, sp
   10fd4:	sub	sp, sp, #16
   10fd8:	str	r0, [fp, #-4]
   10fdc:	movw	r0, #0
   10fe0:	strh	r0, [fp, #-6]
   10fe4:	ldr	r0, [fp, #-4]
   10fe8:	movw	r1, #0
   10fec:	cmp	r0, r1
   10ff0:	beq	10ffc <print_type@@Base+0x54c>
   10ff4:	b	10ff8 <print_type@@Base+0x548>
   10ff8:	b	1101c <print_type@@Base+0x56c>
   10ffc:	ldr	r0, [pc, #136]	; 1108c <print_type@@Base+0x5dc>
   11000:	add	r0, pc, r0
   11004:	ldr	r1, [pc, #132]	; 11090 <print_type@@Base+0x5e0>
   11008:	add	r1, pc, r1
   1100c:	ldr	r2, [pc, #128]	; 11094 <print_type@@Base+0x5e4>
   11010:	add	r3, pc, r2
   11014:	movw	r2, #148	; 0x94
   11018:	bl	109b4 <__assert_fail@plt>
   1101c:	mov	r0, #1
   11020:	strh	r0, [sp, #8]
   11024:	ldr	r0, [fp, #-4]
   11028:	str	r0, [sp]
   1102c:	bl	14640 <main@@Base+0xbc>
   11030:	ldr	lr, [sp]
   11034:	sub	r0, lr, r0
   11038:	str	r0, [sp, #4]
   1103c:	ldr	r0, [sp, #4]
   11040:	bl	14664 <main@@Base+0xe0>
   11044:	ldrh	lr, [sp, #8]
   11048:	add	lr, lr, #3
   1104c:	lsl	lr, lr, #1
   11050:	cmp	r0, lr
   11054:	bcc	11070 <print_type@@Base+0x5c0>
   11058:	ldr	r0, [sp, #4]
   1105c:	ldrh	r1, [sp, #8]
   11060:	add	r0, r0, r1, lsl #1
   11064:	add	r0, r0, #4
   11068:	bl	14664 <main@@Base+0xe0>
   1106c:	strh	r0, [fp, #-6]
   11070:	ldrh	r0, [fp, #-6]
   11074:	cmp	r0, #0
   11078:	movw	r0, #0
   1107c:	movne	r0, #1
   11080:	and	r0, r0, #1
   11084:	mov	sp, fp
   11088:	pop	{fp, pc}
   1108c:	andeq	r3, r0, lr, asr sp
   11090:	andeq	r3, r0, ip, ror sp
   11094:	andeq	r3, r0, r6, asr #29
   11098:	push	{fp, lr}
   1109c:	mov	fp, sp
   110a0:	sub	sp, sp, #16
   110a4:	str	r0, [fp, #-4]
   110a8:	movw	r0, #0
   110ac:	strh	r0, [fp, #-6]
   110b0:	ldr	r0, [fp, #-4]
   110b4:	movw	r1, #0
   110b8:	cmp	r0, r1
   110bc:	beq	110c8 <print_type@@Base+0x618>
   110c0:	b	110c4 <print_type@@Base+0x614>
   110c4:	b	110e8 <print_type@@Base+0x638>
   110c8:	ldr	r0, [pc, #136]	; 11158 <print_type@@Base+0x6a8>
   110cc:	add	r0, pc, r0
   110d0:	ldr	r1, [pc, #132]	; 1115c <print_type@@Base+0x6ac>
   110d4:	add	r1, pc, r1
   110d8:	ldr	r2, [pc, #128]	; 11160 <print_type@@Base+0x6b0>
   110dc:	add	r3, pc, r2
   110e0:	movw	r2, #149	; 0x95
   110e4:	bl	109b4 <__assert_fail@plt>
   110e8:	mov	r0, #2
   110ec:	strh	r0, [sp, #8]
   110f0:	ldr	r0, [fp, #-4]
   110f4:	str	r0, [sp]
   110f8:	bl	14640 <main@@Base+0xbc>
   110fc:	ldr	lr, [sp]
   11100:	sub	r0, lr, r0
   11104:	str	r0, [sp, #4]
   11108:	ldr	r0, [sp, #4]
   1110c:	bl	14664 <main@@Base+0xe0>
   11110:	ldrh	lr, [sp, #8]
   11114:	add	lr, lr, #3
   11118:	lsl	lr, lr, #1
   1111c:	cmp	r0, lr
   11120:	bcc	1113c <print_type@@Base+0x68c>
   11124:	ldr	r0, [sp, #4]
   11128:	ldrh	r1, [sp, #8]
   1112c:	add	r0, r0, r1, lsl #1
   11130:	add	r0, r0, #4
   11134:	bl	14664 <main@@Base+0xe0>
   11138:	strh	r0, [fp, #-6]
   1113c:	ldrh	r0, [fp, #-6]
   11140:	cmp	r0, #0
   11144:	movw	r0, #0
   11148:	movne	r0, #1
   1114c:	and	r0, r0, #1
   11150:	mov	sp, fp
   11154:	pop	{fp, pc}
   11158:	muleq	r0, r2, ip
   1115c:			; <UNDEFINED> instruction: 0x00003cb0
   11160:	andeq	r3, r0, sl, lsr lr
   11164:	push	{fp, lr}
   11168:	mov	fp, sp
   1116c:	sub	sp, sp, #24
   11170:	str	r0, [fp, #-4]
   11174:	movw	r0, #0
   11178:	strh	r0, [fp, #-6]
   1117c:	ldr	r0, [fp, #-4]
   11180:	movw	r1, #0
   11184:	cmp	r0, r1
   11188:	beq	11194 <print_type@@Base+0x6e4>
   1118c:	b	11190 <print_type@@Base+0x6e0>
   11190:	b	111b4 <print_type@@Base+0x704>
   11194:	ldr	r0, [pc, #168]	; 11244 <print_type@@Base+0x794>
   11198:	add	r0, pc, r0
   1119c:	ldr	r1, [pc, #164]	; 11248 <print_type@@Base+0x798>
   111a0:	add	r1, pc, r1
   111a4:	ldr	r2, [pc, #160]	; 1124c <print_type@@Base+0x79c>
   111a8:	add	r3, pc, r2
   111ac:	movw	r2, #149	; 0x95
   111b0:	bl	109b4 <__assert_fail@plt>
   111b4:	mov	r0, #2
   111b8:	strh	r0, [fp, #-8]
   111bc:	ldr	r0, [fp, #-4]
   111c0:	str	r0, [sp, #8]
   111c4:	bl	14640 <main@@Base+0xbc>
   111c8:	ldr	lr, [sp, #8]
   111cc:	sub	r0, lr, r0
   111d0:	str	r0, [sp, #12]
   111d4:	ldr	r0, [sp, #12]
   111d8:	bl	14664 <main@@Base+0xe0>
   111dc:	ldrh	lr, [fp, #-8]
   111e0:	add	lr, lr, #3
   111e4:	lsl	lr, lr, #1
   111e8:	cmp	r0, lr
   111ec:	bcc	11208 <print_type@@Base+0x758>
   111f0:	ldr	r0, [sp, #12]
   111f4:	ldrh	r1, [fp, #-8]
   111f8:	add	r0, r0, r1, lsl #1
   111fc:	add	r0, r0, #4
   11200:	bl	14664 <main@@Base+0xe0>
   11204:	strh	r0, [fp, #-6]
   11208:	ldrh	r0, [fp, #-6]
   1120c:	cmp	r0, #0
   11210:	beq	1122c <print_type@@Base+0x77c>
   11214:	ldr	r0, [fp, #-4]
   11218:	ldrh	r1, [fp, #-6]
   1121c:	add	r0, r0, r1
   11220:	bl	146f0 <main@@Base+0x16c>
   11224:	str	r0, [sp, #4]
   11228:	b	11238 <print_type@@Base+0x788>
   1122c:	mvn	r0, #0
   11230:	str	r0, [sp, #4]
   11234:	b	11238 <print_type@@Base+0x788>
   11238:	ldr	r0, [sp, #4]
   1123c:	mov	sp, fp
   11240:	pop	{fp, pc}
   11244:	andeq	r3, r0, r6, asr #23
   11248:	andeq	r3, r0, r4, ror #23
   1124c:	andeq	r3, r0, ip, lsr #27

00011250 <print_object@@Base>:
   11250:	push	{fp, lr}
   11254:	mov	fp, sp
   11258:	sub	sp, sp, #104	; 0x68
   1125c:	str	r0, [fp, #-4]
   11260:	ldr	r0, [fp, #-4]
   11264:	bl	115e0 <print_object@@Base+0x390>
   11268:	str	r0, [fp, #-8]
   1126c:	ldr	r0, [fp, #-4]
   11270:	bl	11700 <print_object@@Base+0x4b0>
   11274:	ldr	lr, [pc, #784]	; 1158c <print_object@@Base+0x33c>
   11278:	add	lr, pc, lr
   1127c:	str	r0, [fp, #-20]	; 0xffffffec
   11280:	mov	r0, lr
   11284:	ldr	r1, [fp, #-20]	; 0xffffffec
   11288:	bl	10900 <printf@plt>
   1128c:	ldr	r1, [pc, #756]	; 11588 <print_object@@Base+0x338>
   11290:	add	r1, pc, r1
   11294:	str	r0, [fp, #-24]	; 0xffffffe8
   11298:	mov	r0, r1
   1129c:	bl	10900 <printf@plt>
   112a0:	movw	r1, #0
   112a4:	str	r1, [fp, #-16]
   112a8:	str	r0, [fp, #-28]	; 0xffffffe4
   112ac:	ldr	r0, [fp, #-16]
   112b0:	ldr	r1, [fp, #-8]
   112b4:	str	r0, [fp, #-32]	; 0xffffffe0
   112b8:	mov	r0, r1
   112bc:	bl	11820 <print_object@@Base+0x5d0>
   112c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   112c4:	cmp	r1, r0
   112c8:	bcs	1149c <print_object@@Base+0x24c>
   112cc:	ldr	r0, [fp, #-16]
   112d0:	cmp	r0, #0
   112d4:	bls	112e8 <print_object@@Base+0x98>
   112d8:	ldr	r0, [pc, #716]	; 115ac <print_object@@Base+0x35c>
   112dc:	add	r0, pc, r0
   112e0:	bl	10900 <printf@plt>
   112e4:	str	r0, [fp, #-36]	; 0xffffffdc
   112e8:	ldr	r0, [fp, #-8]
   112ec:	ldr	r1, [fp, #-16]
   112f0:	bl	11870 <print_object@@Base+0x620>
   112f4:	str	r0, [fp, #-12]
   112f8:	ldr	r0, [fp, #-12]
   112fc:	bl	11900 <print_object@@Base+0x6b0>
   11300:	ldr	r1, [pc, #680]	; 115b0 <print_object@@Base+0x360>
   11304:	add	r1, pc, r1
   11308:	str	r0, [fp, #-40]	; 0xffffffd8
   1130c:	mov	r0, r1
   11310:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11314:	bl	10900 <printf@plt>
   11318:	ldr	r1, [fp, #-12]
   1131c:	str	r0, [fp, #-44]	; 0xffffffd4
   11320:	mov	r0, r1
   11324:	bl	11a20 <print_object@@Base+0x7d0>
   11328:	bl	10ab0 <print_type@@Base>
   1132c:	ldr	r0, [fp, #-12]
   11330:	bl	11b3c <print_object@@Base+0x8ec>
   11334:	cmp	r0, #0
   11338:	beq	1135c <print_object@@Base+0x10c>
   1133c:	ldr	r0, [fp, #-12]
   11340:	bl	11c08 <print_object@@Base+0x9b8>
   11344:	ldr	lr, [pc, #616]	; 115b4 <print_object@@Base+0x364>
   11348:	add	lr, pc, lr
   1134c:	uxth	r1, r0
   11350:	mov	r0, lr
   11354:	bl	10900 <printf@plt>
   11358:	str	r0, [fp, #-48]	; 0xffffffd0
   1135c:	ldr	r0, [fp, #-12]
   11360:	bl	11cfc <print_object@@Base+0xaac>
   11364:	cmp	r0, #0
   11368:	beq	113a0 <print_object@@Base+0x150>
   1136c:	ldr	r0, [fp, #-12]
   11370:	bl	11dc8 <print_object@@Base+0xb78>
   11374:	ldr	lr, [pc, #572]	; 115b8 <print_object@@Base+0x368>
   11378:	add	lr, pc, lr
   1137c:	ldr	r2, [pc, #600]	; 115dc <print_object@@Base+0x38c>
   11380:	add	r2, pc, r2
   11384:	str	r0, [sp, #52]	; 0x34
   11388:	mov	r0, r2
   1138c:	ldr	r2, [sp, #52]	; 0x34
   11390:	mov	r3, r1
   11394:	str	lr, [sp, #48]	; 0x30
   11398:	bl	10900 <printf@plt>
   1139c:	str	r0, [sp, #44]	; 0x2c
   113a0:	ldr	r0, [fp, #-12]
   113a4:	bl	11ed0 <print_object@@Base+0xc80>
   113a8:	cmp	r0, #0
   113ac:	beq	113cc <print_object@@Base+0x17c>
   113b0:	ldr	r0, [fp, #-12]
   113b4:	bl	11fa0 <print_object@@Base+0xd50>
   113b8:	ldr	r0, [pc, #508]	; 115bc <print_object@@Base+0x36c>
   113bc:	add	r0, pc, r0
   113c0:	vmov	r2, r3, d0
   113c4:	bl	10900 <printf@plt>
   113c8:	str	r0, [sp, #40]	; 0x28
   113cc:	ldr	r0, [fp, #-12]
   113d0:	bl	1209c <print_object@@Base+0xe4c>
   113d4:	cmp	r0, #0
   113d8:	beq	11424 <print_object@@Base+0x1d4>
   113dc:	ldr	r0, [fp, #-12]
   113e0:	bl	12168 <print_object@@Base+0xf18>
   113e4:	ldr	lr, [pc, #468]	; 115c0 <print_object@@Base+0x370>
   113e8:	add	lr, pc, lr
   113ec:	ldr	r1, [pc, #464]	; 115c4 <print_object@@Base+0x374>
   113f0:	add	r1, pc, r1
   113f4:	ldr	r2, [pc, #460]	; 115c8 <print_object@@Base+0x378>
   113f8:	add	r2, pc, r2
   113fc:	and	r0, r0, #255	; 0xff
   11400:	cmp	r0, #0
   11404:	movw	r0, #0
   11408:	movne	r0, #1
   1140c:	tst	r0, #1
   11410:	movne	r2, r1
   11414:	mov	r0, lr
   11418:	mov	r1, r2
   1141c:	bl	10900 <printf@plt>
   11420:	str	r0, [sp, #36]	; 0x24
   11424:	ldr	r0, [fp, #-12]
   11428:	bl	1225c <print_object@@Base+0x100c>
   1142c:	cmp	r0, #0
   11430:	beq	1147c <print_object@@Base+0x22c>
   11434:	ldr	r0, [fp, #-12]
   11438:	bl	12328 <print_object@@Base+0x10d8>
   1143c:	ldr	lr, [pc, #392]	; 115cc <print_object@@Base+0x37c>
   11440:	add	lr, pc, lr
   11444:	ldr	r1, [pc, #388]	; 115d0 <print_object@@Base+0x380>
   11448:	add	r1, pc, r1
   1144c:	ldr	r2, [pc, #384]	; 115d4 <print_object@@Base+0x384>
   11450:	add	r2, pc, r2
   11454:	and	r0, r0, #255	; 0xff
   11458:	cmp	r0, #0
   1145c:	movw	r0, #0
   11460:	movne	r0, #1
   11464:	tst	r0, #1
   11468:	movne	r2, r1
   1146c:	mov	r0, lr
   11470:	mov	r1, r2
   11474:	bl	10900 <printf@plt>
   11478:	str	r0, [sp, #32]
   1147c:	ldr	r0, [pc, #340]	; 115d8 <print_object@@Base+0x388>
   11480:	add	r0, pc, r0
   11484:	bl	10900 <printf@plt>
   11488:	str	r0, [sp, #28]
   1148c:	ldr	r0, [fp, #-16]
   11490:	add	r0, r0, #1
   11494:	str	r0, [fp, #-16]
   11498:	b	112ac <print_object@@Base+0x5c>
   1149c:	ldr	r0, [pc, #236]	; 11590 <print_object@@Base+0x340>
   114a0:	add	r0, pc, r0
   114a4:	bl	10900 <printf@plt>
   114a8:	ldr	lr, [fp, #-4]
   114ac:	str	r0, [sp, #24]
   114b0:	mov	r0, lr
   114b4:	bl	1241c <print_object@@Base+0x11cc>
   114b8:	cmp	r0, #0
   114bc:	beq	11508 <print_object@@Base+0x2b8>
   114c0:	ldr	r0, [fp, #-4]
   114c4:	bl	124e8 <print_object@@Base+0x1298>
   114c8:	ldr	lr, [pc, #196]	; 11594 <print_object@@Base+0x344>
   114cc:	add	lr, pc, lr
   114d0:	ldr	r1, [pc, #192]	; 11598 <print_object@@Base+0x348>
   114d4:	add	r1, pc, r1
   114d8:	ldr	r2, [pc, #188]	; 1159c <print_object@@Base+0x34c>
   114dc:	add	r2, pc, r2
   114e0:	and	r0, r0, #255	; 0xff
   114e4:	cmp	r0, #0
   114e8:	movw	r0, #0
   114ec:	movne	r0, #1
   114f0:	tst	r0, #1
   114f4:	movne	r2, r1
   114f8:	mov	r0, lr
   114fc:	mov	r1, r2
   11500:	bl	10900 <printf@plt>
   11504:	str	r0, [sp, #20]
   11508:	ldr	r0, [fp, #-4]
   1150c:	bl	125dc <print_object@@Base+0x138c>
   11510:	cmp	r0, #0
   11514:	beq	1153c <print_object@@Base+0x2ec>
   11518:	ldr	r0, [fp, #-4]
   1151c:	bl	126a8 <print_object@@Base+0x1458>
   11520:	ldr	lr, [pc, #120]	; 115a0 <print_object@@Base+0x350>
   11524:	add	lr, pc, lr
   11528:	str	r0, [sp, #16]
   1152c:	mov	r0, lr
   11530:	ldr	r1, [sp, #16]
   11534:	bl	10900 <printf@plt>
   11538:	str	r0, [sp, #12]
   1153c:	ldr	r0, [fp, #-4]
   11540:	bl	12794 <print_object@@Base+0x1544>
   11544:	cmp	r0, #0
   11548:	beq	11570 <print_object@@Base+0x320>
   1154c:	ldr	r0, [fp, #-4]
   11550:	bl	12860 <print_object@@Base+0x1610>
   11554:	ldr	lr, [pc, #72]	; 115a4 <print_object@@Base+0x354>
   11558:	add	lr, pc, lr
   1155c:	str	r0, [sp, #8]
   11560:	mov	r0, lr
   11564:	ldr	r1, [sp, #8]
   11568:	bl	10900 <printf@plt>
   1156c:	str	r0, [sp, #4]
   11570:	ldr	r0, [pc, #48]	; 115a8 <print_object@@Base+0x358>
   11574:	add	r0, pc, r0
   11578:	bl	10900 <printf@plt>
   1157c:	str	r0, [sp]
   11580:	mov	sp, fp
   11584:	pop	{fp, pc}
   11588:	andeq	r3, r0, r6, asr #15
   1158c:	ldrdeq	r3, [r0], -r1
   11590:	andeq	r3, r0, r4, lsr r6
   11594:	andeq	r3, r0, sl, lsl #12
   11598:	andeq	r3, r0, fp, ror #11
   1159c:	andeq	r3, r0, r8, ror #11
   115a0:	andeq	r3, r0, r2, asr #11
   115a4:	muleq	r0, sp, r5
   115a8:	ldrdeq	r3, [r0], -r3	; <UNPREDICTABLE>
   115ac:	andeq	r3, r0, lr, lsr r7
   115b0:	andeq	r3, r0, lr, asr r7
   115b4:	andeq	r3, r0, pc, lsr #14
   115b8:	andeq	r3, r0, r9, lsl #14
   115bc:	ldrdeq	r3, [r0], -sp
   115c0:	andeq	r3, r0, r8, asr #13
   115c4:	andeq	r3, r0, pc, asr #13
   115c8:	andeq	r3, r0, ip, asr #13
   115cc:	andeq	r3, r0, sl, lsl #13
   115d0:	andeq	r3, r0, r7, ror r6
   115d4:	andeq	r3, r0, r4, ror r6
   115d8:	andeq	r3, r0, r7, asr #11
   115dc:	andeq	r3, r0, r1, lsl #14
   115e0:	push	{fp, lr}
   115e4:	mov	fp, sp
   115e8:	sub	sp, sp, #24
   115ec:	str	r0, [fp, #-4]
   115f0:	movw	r0, #0
   115f4:	strh	r0, [fp, #-10]
   115f8:	ldr	r0, [fp, #-4]
   115fc:	movw	r1, #0
   11600:	cmp	r0, r1
   11604:	beq	11610 <print_object@@Base+0x3c0>
   11608:	b	1160c <print_object@@Base+0x3bc>
   1160c:	b	11630 <print_object@@Base+0x3e0>
   11610:	ldr	r0, [pc, #208]	; 116e8 <print_object@@Base+0x498>
   11614:	add	r0, pc, r0
   11618:	ldr	r1, [pc, #204]	; 116ec <print_object@@Base+0x49c>
   1161c:	add	r1, pc, r1
   11620:	ldr	r2, [pc, #200]	; 116f0 <print_object@@Base+0x4a0>
   11624:	add	r3, pc, r2
   11628:	movw	r2, #224	; 0xe0
   1162c:	bl	109b4 <__assert_fail@plt>
   11630:	mov	r0, #1
   11634:	strh	r0, [sp, #12]
   11638:	ldr	r0, [fp, #-4]
   1163c:	str	r0, [sp, #4]
   11640:	bl	14640 <main@@Base+0xbc>
   11644:	ldr	lr, [sp, #4]
   11648:	sub	r0, lr, r0
   1164c:	str	r0, [sp, #8]
   11650:	ldr	r0, [sp, #8]
   11654:	bl	14664 <main@@Base+0xe0>
   11658:	ldrh	lr, [sp, #12]
   1165c:	add	lr, lr, #3
   11660:	lsl	lr, lr, #1
   11664:	cmp	r0, lr
   11668:	bcc	11684 <print_object@@Base+0x434>
   1166c:	ldr	r0, [sp, #8]
   11670:	ldrh	r1, [sp, #12]
   11674:	add	r0, r0, r1, lsl #1
   11678:	add	r0, r0, #4
   1167c:	bl	14664 <main@@Base+0xe0>
   11680:	strh	r0, [fp, #-10]
   11684:	ldrsh	r0, [fp, #-10]
   11688:	cmp	r0, #0
   1168c:	beq	116c8 <print_object@@Base+0x478>
   11690:	ldr	r0, [fp, #-4]
   11694:	ldrh	r1, [fp, #-10]
   11698:	add	r0, r0, r1
   1169c:	str	r0, [fp, #-8]
   116a0:	ldr	r0, [fp, #-8]
   116a4:	add	r0, r0, #4
   116a8:	ldr	r1, [fp, #-8]
   116ac:	str	r0, [sp]
   116b0:	mov	r0, r1
   116b4:	bl	14728 <main@@Base+0x1a4>
   116b8:	ldr	r1, [sp]
   116bc:	add	r0, r1, r0
   116c0:	mov	sp, fp
   116c4:	pop	{fp, pc}
   116c8:	ldr	r0, [pc, #36]	; 116f4 <print_object@@Base+0x4a4>
   116cc:	add	r0, pc, r0
   116d0:	ldr	r1, [pc, #32]	; 116f8 <print_object@@Base+0x4a8>
   116d4:	add	r1, pc, r1
   116d8:	ldr	r2, [pc, #28]	; 116fc <print_object@@Base+0x4ac>
   116dc:	add	r3, pc, r2
   116e0:	movw	r2, #224	; 0xe0
   116e4:	bl	109b4 <__assert_fail@plt>
   116e8:	andeq	r3, r0, sl, asr #14
   116ec:	andeq	r3, r0, r8, ror #14
   116f0:	andeq	r3, r0, r7, ror #18
   116f4:	andeq	r3, r0, sl, lsl #18
   116f8:			; <UNDEFINED> instruction: 0x000036b0
   116fc:	andeq	r3, r0, pc, lsr #17
   11700:	push	{fp, lr}
   11704:	mov	fp, sp
   11708:	sub	sp, sp, #24
   1170c:	str	r0, [fp, #-4]
   11710:	movw	r0, #0
   11714:	strh	r0, [fp, #-10]
   11718:	ldr	r0, [fp, #-4]
   1171c:	movw	r1, #0
   11720:	cmp	r0, r1
   11724:	beq	11730 <print_object@@Base+0x4e0>
   11728:	b	1172c <print_object@@Base+0x4dc>
   1172c:	b	11750 <print_object@@Base+0x500>
   11730:	ldr	r0, [pc, #208]	; 11808 <print_object@@Base+0x5b8>
   11734:	add	r0, pc, r0
   11738:	ldr	r1, [pc, #204]	; 1180c <print_object@@Base+0x5bc>
   1173c:	add	r1, pc, r1
   11740:	ldr	r2, [pc, #200]	; 11810 <print_object@@Base+0x5c0>
   11744:	add	r3, pc, r2
   11748:	movw	r2, #218	; 0xda
   1174c:	bl	109b4 <__assert_fail@plt>
   11750:	mov	r0, #0
   11754:	strh	r0, [sp, #12]
   11758:	ldr	r0, [fp, #-4]
   1175c:	str	r0, [sp, #4]
   11760:	bl	14640 <main@@Base+0xbc>
   11764:	ldr	lr, [sp, #4]
   11768:	sub	r0, lr, r0
   1176c:	str	r0, [sp, #8]
   11770:	ldr	r0, [sp, #8]
   11774:	bl	14664 <main@@Base+0xe0>
   11778:	ldrh	lr, [sp, #12]
   1177c:	add	lr, lr, #3
   11780:	lsl	lr, lr, #1
   11784:	cmp	r0, lr
   11788:	bcc	117a4 <print_object@@Base+0x554>
   1178c:	ldr	r0, [sp, #8]
   11790:	ldrh	r1, [sp, #12]
   11794:	add	r0, r0, r1, lsl #1
   11798:	add	r0, r0, #4
   1179c:	bl	14664 <main@@Base+0xe0>
   117a0:	strh	r0, [fp, #-10]
   117a4:	ldrsh	r0, [fp, #-10]
   117a8:	cmp	r0, #0
   117ac:	beq	117e8 <print_object@@Base+0x598>
   117b0:	ldr	r0, [fp, #-4]
   117b4:	ldrh	r1, [fp, #-10]
   117b8:	add	r0, r0, r1
   117bc:	str	r0, [fp, #-8]
   117c0:	ldr	r0, [fp, #-8]
   117c4:	add	r0, r0, #4
   117c8:	ldr	r1, [fp, #-8]
   117cc:	str	r0, [sp]
   117d0:	mov	r0, r1
   117d4:	bl	14728 <main@@Base+0x1a4>
   117d8:	ldr	r1, [sp]
   117dc:	add	r0, r1, r0
   117e0:	mov	sp, fp
   117e4:	pop	{fp, pc}
   117e8:	ldr	r0, [pc, #36]	; 11814 <print_object@@Base+0x5c4>
   117ec:	add	r0, pc, r0
   117f0:	ldr	r1, [pc, #32]	; 11818 <print_object@@Base+0x5c8>
   117f4:	add	r1, pc, r1
   117f8:	ldr	r2, [pc, #28]	; 1181c <print_object@@Base+0x5cc>
   117fc:	add	r3, pc, r2
   11800:	movw	r2, #218	; 0xda
   11804:	bl	109b4 <__assert_fail@plt>
   11808:	andeq	r3, r0, sl, lsr #12
   1180c:	andeq	r3, r0, r8, asr #12
   11810:			; <UNDEFINED> instruction: 0x000038b3
   11814:	andeq	r3, r0, sl, ror #15
   11818:	muleq	r0, r0, r5
   1181c:	strdeq	r3, [r0], -fp
   11820:	push	{fp, lr}
   11824:	mov	fp, sp
   11828:	sub	sp, sp, #8
   1182c:	str	r0, [sp, #4]
   11830:	ldr	r0, [sp, #4]
   11834:	movw	r1, #0
   11838:	cmp	r0, r1
   1183c:	beq	11858 <print_object@@Base+0x608>
   11840:	ldr	r0, [sp, #4]
   11844:	mvn	r1, #3
   11848:	add	r0, r0, r1
   1184c:	bl	14728 <main@@Base+0x1a4>
   11850:	str	r0, [sp]
   11854:	b	11864 <print_object@@Base+0x614>
   11858:	movw	r0, #0
   1185c:	str	r0, [sp]
   11860:	b	11864 <print_object@@Base+0x614>
   11864:	ldr	r0, [sp]
   11868:	mov	sp, fp
   1186c:	pop	{fp, pc}
   11870:	push	{fp, lr}
   11874:	mov	fp, sp
   11878:	sub	sp, sp, #16
   1187c:	str	r0, [fp, #-4]
   11880:	str	r1, [sp, #8]
   11884:	ldr	r0, [fp, #-4]
   11888:	ldr	r1, [sp, #8]
   1188c:	add	r0, r0, r1, lsl #2
   11890:	str	r0, [sp, #4]
   11894:	ldr	r0, [fp, #-4]
   11898:	bl	14760 <main@@Base+0x1dc>
   1189c:	ldr	r1, [sp, #8]
   118a0:	cmp	r0, r1
   118a4:	bls	118b0 <print_object@@Base+0x660>
   118a8:	b	118ac <print_object@@Base+0x65c>
   118ac:	b	118d0 <print_object@@Base+0x680>
   118b0:	ldr	r0, [pc, #60]	; 118f4 <print_object@@Base+0x6a4>
   118b4:	add	r0, pc, r0
   118b8:	ldr	r1, [pc, #56]	; 118f8 <print_object@@Base+0x6a8>
   118bc:	add	r1, pc, r1
   118c0:	ldr	r2, [pc, #52]	; 118fc <print_object@@Base+0x6ac>
   118c4:	add	r3, pc, r2
   118c8:	movw	r2, #192	; 0xc0
   118cc:	bl	109b4 <__assert_fail@plt>
   118d0:	ldr	r0, [sp, #4]
   118d4:	ldr	r1, [sp, #4]
   118d8:	str	r0, [sp]
   118dc:	mov	r0, r1
   118e0:	bl	14728 <main@@Base+0x1a4>
   118e4:	ldr	r1, [sp]
   118e8:	add	r0, r1, r0
   118ec:	mov	sp, fp
   118f0:	pop	{fp, pc}
   118f4:	muleq	r0, sp, r7
   118f8:	andeq	r3, r0, r8, asr #9
   118fc:	andeq	r3, r0, r4, asr #15
   11900:	push	{fp, lr}
   11904:	mov	fp, sp
   11908:	sub	sp, sp, #24
   1190c:	str	r0, [fp, #-4]
   11910:	movw	r0, #0
   11914:	strh	r0, [fp, #-10]
   11918:	ldr	r0, [fp, #-4]
   1191c:	movw	r1, #0
   11920:	cmp	r0, r1
   11924:	beq	11930 <print_object@@Base+0x6e0>
   11928:	b	1192c <print_object@@Base+0x6dc>
   1192c:	b	11950 <print_object@@Base+0x700>
   11930:	ldr	r0, [pc, #208]	; 11a08 <print_object@@Base+0x7b8>
   11934:	add	r0, pc, r0
   11938:	ldr	r1, [pc, #204]	; 11a0c <print_object@@Base+0x7bc>
   1193c:	add	r1, pc, r1
   11940:	ldr	r2, [pc, #200]	; 11a10 <print_object@@Base+0x7c0>
   11944:	add	r3, pc, r2
   11948:	movw	r2, #195	; 0xc3
   1194c:	bl	109b4 <__assert_fail@plt>
   11950:	mov	r0, #0
   11954:	strh	r0, [sp, #12]
   11958:	ldr	r0, [fp, #-4]
   1195c:	str	r0, [sp, #4]
   11960:	bl	14640 <main@@Base+0xbc>
   11964:	ldr	lr, [sp, #4]
   11968:	sub	r0, lr, r0
   1196c:	str	r0, [sp, #8]
   11970:	ldr	r0, [sp, #8]
   11974:	bl	14664 <main@@Base+0xe0>
   11978:	ldrh	lr, [sp, #12]
   1197c:	add	lr, lr, #3
   11980:	lsl	lr, lr, #1
   11984:	cmp	r0, lr
   11988:	bcc	119a4 <print_object@@Base+0x754>
   1198c:	ldr	r0, [sp, #8]
   11990:	ldrh	r1, [sp, #12]
   11994:	add	r0, r0, r1, lsl #1
   11998:	add	r0, r0, #4
   1199c:	bl	14664 <main@@Base+0xe0>
   119a0:	strh	r0, [fp, #-10]
   119a4:	ldrsh	r0, [fp, #-10]
   119a8:	cmp	r0, #0
   119ac:	beq	119e8 <print_object@@Base+0x798>
   119b0:	ldr	r0, [fp, #-4]
   119b4:	ldrh	r1, [fp, #-10]
   119b8:	add	r0, r0, r1
   119bc:	str	r0, [fp, #-8]
   119c0:	ldr	r0, [fp, #-8]
   119c4:	add	r0, r0, #4
   119c8:	ldr	r1, [fp, #-8]
   119cc:	str	r0, [sp]
   119d0:	mov	r0, r1
   119d4:	bl	14728 <main@@Base+0x1a4>
   119d8:	ldr	r1, [sp]
   119dc:	add	r0, r1, r0
   119e0:	mov	sp, fp
   119e4:	pop	{fp, pc}
   119e8:	ldr	r0, [pc, #36]	; 11a14 <print_object@@Base+0x7c4>
   119ec:	add	r0, pc, r0
   119f0:	ldr	r1, [pc, #32]	; 11a18 <print_object@@Base+0x7c8>
   119f4:	add	r1, pc, r1
   119f8:	ldr	r2, [pc, #28]	; 11a1c <print_object@@Base+0x7cc>
   119fc:	add	r3, pc, r2
   11a00:	movw	r2, #195	; 0xc3
   11a04:	bl	109b4 <__assert_fail@plt>
   11a08:	andeq	r3, r0, sl, lsr #8
   11a0c:	andeq	r3, r0, r8, asr #8
   11a10:	muleq	r0, r5, r7
   11a14:	andeq	r3, r0, sl, ror #11
   11a18:	muleq	r0, r0, r3
   11a1c:	ldrdeq	r3, [r0], -sp
   11a20:	push	{fp, lr}
   11a24:	mov	fp, sp
   11a28:	sub	sp, sp, #24
   11a2c:	str	r0, [fp, #-4]
   11a30:	movw	r0, #0
   11a34:	strh	r0, [fp, #-10]
   11a38:	ldr	r0, [fp, #-4]
   11a3c:	movw	r1, #0
   11a40:	cmp	r0, r1
   11a44:	beq	11a50 <print_object@@Base+0x800>
   11a48:	b	11a4c <print_object@@Base+0x7fc>
   11a4c:	b	11a70 <print_object@@Base+0x820>
   11a50:	ldr	r0, [pc, #204]	; 11b24 <print_object@@Base+0x8d4>
   11a54:	add	r0, pc, r0
   11a58:	ldr	r1, [pc, #200]	; 11b28 <print_object@@Base+0x8d8>
   11a5c:	add	r1, pc, r1
   11a60:	ldr	r2, [pc, #196]	; 11b2c <print_object@@Base+0x8dc>
   11a64:	add	r3, pc, r2
   11a68:	movw	r2, #201	; 0xc9
   11a6c:	bl	109b4 <__assert_fail@plt>
   11a70:	mov	r0, #1
   11a74:	strh	r0, [sp, #12]
   11a78:	ldr	r0, [fp, #-4]
   11a7c:	str	r0, [sp, #4]
   11a80:	bl	14640 <main@@Base+0xbc>
   11a84:	ldr	lr, [sp, #4]
   11a88:	sub	r0, lr, r0
   11a8c:	str	r0, [sp, #8]
   11a90:	ldr	r0, [sp, #8]
   11a94:	bl	14664 <main@@Base+0xe0>
   11a98:	ldrh	lr, [sp, #12]
   11a9c:	add	lr, lr, #3
   11aa0:	lsl	lr, lr, #1
   11aa4:	cmp	r0, lr
   11aa8:	bcc	11ac4 <print_object@@Base+0x874>
   11aac:	ldr	r0, [sp, #8]
   11ab0:	ldrh	r1, [sp, #12]
   11ab4:	add	r0, r0, r1, lsl #1
   11ab8:	add	r0, r0, #4
   11abc:	bl	14664 <main@@Base+0xe0>
   11ac0:	strh	r0, [fp, #-10]
   11ac4:	ldrsh	r0, [fp, #-10]
   11ac8:	cmp	r0, #0
   11acc:	beq	11b04 <print_object@@Base+0x8b4>
   11ad0:	ldr	r0, [fp, #-4]
   11ad4:	ldrh	r1, [fp, #-10]
   11ad8:	add	r0, r0, r1
   11adc:	str	r0, [fp, #-8]
   11ae0:	ldr	r0, [fp, #-8]
   11ae4:	ldr	r1, [fp, #-8]
   11ae8:	str	r0, [sp]
   11aec:	mov	r0, r1
   11af0:	bl	14728 <main@@Base+0x1a4>
   11af4:	ldr	r1, [sp]
   11af8:	add	r0, r1, r0
   11afc:	mov	sp, fp
   11b00:	pop	{fp, pc}
   11b04:	ldr	r0, [pc, #36]	; 11b30 <print_object@@Base+0x8e0>
   11b08:	add	r0, pc, r0
   11b0c:	ldr	r1, [pc, #32]	; 11b34 <print_object@@Base+0x8e4>
   11b10:	add	r1, pc, r1
   11b14:	ldr	r2, [pc, #28]	; 11b38 <print_object@@Base+0x8e8>
   11b18:	add	r3, pc, r2
   11b1c:	movw	r2, #201	; 0xc9
   11b20:	bl	109b4 <__assert_fail@plt>
   11b24:	andeq	r3, r0, sl, lsl #6
   11b28:	andeq	r3, r0, r8, lsr #6
   11b2c:			; <UNDEFINED> instruction: 0x000036ba
   11b30:	andeq	r3, r0, lr, asr #9
   11b34:	andeq	r3, r0, r4, ror r2
   11b38:	andeq	r3, r0, r6, lsl #12
   11b3c:	push	{fp, lr}
   11b40:	mov	fp, sp
   11b44:	sub	sp, sp, #16
   11b48:	str	r0, [fp, #-4]
   11b4c:	movw	r0, #0
   11b50:	strh	r0, [fp, #-6]
   11b54:	ldr	r0, [fp, #-4]
   11b58:	movw	r1, #0
   11b5c:	cmp	r0, r1
   11b60:	beq	11b6c <print_object@@Base+0x91c>
   11b64:	b	11b68 <print_object@@Base+0x918>
   11b68:	b	11b8c <print_object@@Base+0x93c>
   11b6c:	ldr	r0, [pc, #136]	; 11bfc <print_object@@Base+0x9ac>
   11b70:	add	r0, pc, r0
   11b74:	ldr	r1, [pc, #132]	; 11c00 <print_object@@Base+0x9b0>
   11b78:	add	r1, pc, r1
   11b7c:	ldr	r2, [pc, #128]	; 11c04 <print_object@@Base+0x9b4>
   11b80:	add	r3, pc, r2
   11b84:	movw	r2, #202	; 0xca
   11b88:	bl	109b4 <__assert_fail@plt>
   11b8c:	mov	r0, #2
   11b90:	strh	r0, [sp, #8]
   11b94:	ldr	r0, [fp, #-4]
   11b98:	str	r0, [sp]
   11b9c:	bl	14640 <main@@Base+0xbc>
   11ba0:	ldr	lr, [sp]
   11ba4:	sub	r0, lr, r0
   11ba8:	str	r0, [sp, #4]
   11bac:	ldr	r0, [sp, #4]
   11bb0:	bl	14664 <main@@Base+0xe0>
   11bb4:	ldrh	lr, [sp, #8]
   11bb8:	add	lr, lr, #3
   11bbc:	lsl	lr, lr, #1
   11bc0:	cmp	r0, lr
   11bc4:	bcc	11be0 <print_object@@Base+0x990>
   11bc8:	ldr	r0, [sp, #4]
   11bcc:	ldrh	r1, [sp, #8]
   11bd0:	add	r0, r0, r1, lsl #1
   11bd4:	add	r0, r0, #4
   11bd8:	bl	14664 <main@@Base+0xe0>
   11bdc:	strh	r0, [fp, #-6]
   11be0:	ldrh	r0, [fp, #-6]
   11be4:	cmp	r0, #0
   11be8:	movw	r0, #0
   11bec:	movne	r0, #1
   11bf0:	and	r0, r0, #1
   11bf4:	mov	sp, fp
   11bf8:	pop	{fp, pc}
   11bfc:	andeq	r3, r0, lr, ror #3
   11c00:	andeq	r3, r0, ip, lsl #4
   11c04:	andeq	r3, r0, r6, ror #11
   11c08:	push	{fp, lr}
   11c0c:	mov	fp, sp
   11c10:	sub	sp, sp, #24
   11c14:	str	r0, [fp, #-4]
   11c18:	movw	r0, #0
   11c1c:	strh	r0, [fp, #-6]
   11c20:	ldr	r0, [fp, #-4]
   11c24:	movw	r1, #0
   11c28:	cmp	r0, r1
   11c2c:	beq	11c38 <print_object@@Base+0x9e8>
   11c30:	b	11c34 <print_object@@Base+0x9e4>
   11c34:	b	11c58 <print_object@@Base+0xa08>
   11c38:	ldr	r0, [pc, #176]	; 11cf0 <print_object@@Base+0xaa0>
   11c3c:	add	r0, pc, r0
   11c40:	ldr	r1, [pc, #172]	; 11cf4 <print_object@@Base+0xaa4>
   11c44:	add	r1, pc, r1
   11c48:	ldr	r2, [pc, #168]	; 11cf8 <print_object@@Base+0xaa8>
   11c4c:	add	r3, pc, r2
   11c50:	movw	r2, #202	; 0xca
   11c54:	bl	109b4 <__assert_fail@plt>
   11c58:	mov	r0, #2
   11c5c:	strh	r0, [fp, #-8]
   11c60:	ldr	r0, [fp, #-4]
   11c64:	str	r0, [sp, #8]
   11c68:	bl	14640 <main@@Base+0xbc>
   11c6c:	ldr	lr, [sp, #8]
   11c70:	sub	r0, lr, r0
   11c74:	str	r0, [sp, #12]
   11c78:	ldr	r0, [sp, #12]
   11c7c:	bl	14664 <main@@Base+0xe0>
   11c80:	ldrh	lr, [fp, #-8]
   11c84:	add	lr, lr, #3
   11c88:	lsl	lr, lr, #1
   11c8c:	cmp	r0, lr
   11c90:	bcc	11cac <print_object@@Base+0xa5c>
   11c94:	ldr	r0, [sp, #12]
   11c98:	ldrh	r1, [fp, #-8]
   11c9c:	add	r0, r0, r1, lsl #1
   11ca0:	add	r0, r0, #4
   11ca4:	bl	14664 <main@@Base+0xe0>
   11ca8:	strh	r0, [fp, #-6]
   11cac:	ldrh	r0, [fp, #-6]
   11cb0:	cmp	r0, #0
   11cb4:	beq	11cd4 <print_object@@Base+0xa84>
   11cb8:	ldr	r0, [fp, #-4]
   11cbc:	ldrh	r1, [fp, #-6]
   11cc0:	add	r0, r0, r1
   11cc4:	bl	147b0 <main@@Base+0x22c>
   11cc8:	uxth	r0, r0
   11ccc:	str	r0, [sp, #4]
   11cd0:	b	11ce0 <print_object@@Base+0xa90>
   11cd4:	movw	r0, #0
   11cd8:	str	r0, [sp, #4]
   11cdc:	b	11ce0 <print_object@@Base+0xa90>
   11ce0:	ldr	r0, [sp, #4]
   11ce4:	uxth	r0, r0
   11ce8:	mov	sp, fp
   11cec:	pop	{fp, pc}
   11cf0:	andeq	r3, r0, r2, lsr #2
   11cf4:	andeq	r3, r0, r0, asr #2
   11cf8:	andeq	r3, r0, r7, asr r5
   11cfc:	push	{fp, lr}
   11d00:	mov	fp, sp
   11d04:	sub	sp, sp, #16
   11d08:	str	r0, [fp, #-4]
   11d0c:	movw	r0, #0
   11d10:	strh	r0, [fp, #-6]
   11d14:	ldr	r0, [fp, #-4]
   11d18:	movw	r1, #0
   11d1c:	cmp	r0, r1
   11d20:	beq	11d2c <print_object@@Base+0xadc>
   11d24:	b	11d28 <print_object@@Base+0xad8>
   11d28:	b	11d4c <print_object@@Base+0xafc>
   11d2c:	ldr	r0, [pc, #136]	; 11dbc <print_object@@Base+0xb6c>
   11d30:	add	r0, pc, r0
   11d34:	ldr	r1, [pc, #132]	; 11dc0 <print_object@@Base+0xb70>
   11d38:	add	r1, pc, r1
   11d3c:	ldr	r2, [pc, #128]	; 11dc4 <print_object@@Base+0xb74>
   11d40:	add	r3, pc, r2
   11d44:	movw	r2, #204	; 0xcc
   11d48:	bl	109b4 <__assert_fail@plt>
   11d4c:	mov	r0, #4
   11d50:	strh	r0, [sp, #8]
   11d54:	ldr	r0, [fp, #-4]
   11d58:	str	r0, [sp]
   11d5c:	bl	14640 <main@@Base+0xbc>
   11d60:	ldr	lr, [sp]
   11d64:	sub	r0, lr, r0
   11d68:	str	r0, [sp, #4]
   11d6c:	ldr	r0, [sp, #4]
   11d70:	bl	14664 <main@@Base+0xe0>
   11d74:	ldrh	lr, [sp, #8]
   11d78:	add	lr, lr, #3
   11d7c:	lsl	lr, lr, #1
   11d80:	cmp	r0, lr
   11d84:	bcc	11da0 <print_object@@Base+0xb50>
   11d88:	ldr	r0, [sp, #4]
   11d8c:	ldrh	r1, [sp, #8]
   11d90:	add	r0, r0, r1, lsl #1
   11d94:	add	r0, r0, #4
   11d98:	bl	14664 <main@@Base+0xe0>
   11d9c:	strh	r0, [fp, #-6]
   11da0:	ldrh	r0, [fp, #-6]
   11da4:	cmp	r0, #0
   11da8:	movw	r0, #0
   11dac:	movne	r0, #1
   11db0:	and	r0, r0, #1
   11db4:	mov	sp, fp
   11db8:	pop	{fp, pc}
   11dbc:	andeq	r3, r0, lr, lsr #32
   11dc0:	andeq	r3, r0, ip, asr #32
   11dc4:	muleq	r0, sl, r4
   11dc8:	push	{fp, lr}
   11dcc:	mov	fp, sp
   11dd0:	sub	sp, sp, #32
   11dd4:	str	r0, [fp, #-4]
   11dd8:	movw	r0, #0
   11ddc:	strh	r0, [fp, #-6]
   11de0:	ldr	r0, [fp, #-4]
   11de4:	movw	r1, #0
   11de8:	cmp	r0, r1
   11dec:	beq	11df8 <print_object@@Base+0xba8>
   11df0:	b	11df4 <print_object@@Base+0xba4>
   11df4:	b	11e18 <print_object@@Base+0xbc8>
   11df8:	ldr	r0, [pc, #196]	; 11ec4 <print_object@@Base+0xc74>
   11dfc:	add	r0, pc, r0
   11e00:	ldr	r1, [pc, #192]	; 11ec8 <print_object@@Base+0xc78>
   11e04:	add	r1, pc, r1
   11e08:	ldr	r2, [pc, #188]	; 11ecc <print_object@@Base+0xc7c>
   11e0c:	add	r3, pc, r2
   11e10:	movw	r2, #204	; 0xcc
   11e14:	bl	109b4 <__assert_fail@plt>
   11e18:	mov	r0, #4
   11e1c:	strh	r0, [fp, #-8]
   11e20:	ldr	r0, [fp, #-4]
   11e24:	str	r0, [sp, #16]
   11e28:	bl	14640 <main@@Base+0xbc>
   11e2c:	ldr	lr, [sp, #16]
   11e30:	sub	r0, lr, r0
   11e34:	str	r0, [fp, #-12]
   11e38:	ldr	r0, [fp, #-12]
   11e3c:	bl	14664 <main@@Base+0xe0>
   11e40:	ldrh	lr, [fp, #-8]
   11e44:	add	lr, lr, #3
   11e48:	lsl	lr, lr, #1
   11e4c:	cmp	r0, lr
   11e50:	bcc	11e6c <print_object@@Base+0xc1c>
   11e54:	ldr	r0, [fp, #-12]
   11e58:	ldrh	r1, [fp, #-8]
   11e5c:	add	r0, r0, r1, lsl #1
   11e60:	add	r0, r0, #4
   11e64:	bl	14664 <main@@Base+0xe0>
   11e68:	strh	r0, [fp, #-6]
   11e6c:	ldrh	r0, [fp, #-6]
   11e70:	cmp	r0, #0
   11e74:	beq	11e94 <print_object@@Base+0xc44>
   11e78:	ldr	r0, [fp, #-4]
   11e7c:	ldrh	r1, [fp, #-6]
   11e80:	add	r0, r0, r1
   11e84:	bl	147ec <main@@Base+0x268>
   11e88:	str	r0, [sp, #12]
   11e8c:	str	r1, [sp, #8]
   11e90:	b	11ea8 <print_object@@Base+0xc58>
   11e94:	mov	r0, #0
   11e98:	mov	r1, r0
   11e9c:	str	r1, [sp, #12]
   11ea0:	str	r0, [sp, #8]
   11ea4:	b	11ea8 <print_object@@Base+0xc58>
   11ea8:	ldr	r0, [sp, #8]
   11eac:	ldr	r1, [sp, #12]
   11eb0:	str	r0, [sp, #4]
   11eb4:	mov	r0, r1
   11eb8:	ldr	r1, [sp, #4]
   11ebc:	mov	sp, fp
   11ec0:	pop	{fp, pc}
   11ec4:	andeq	r2, r0, r2, ror #30
   11ec8:	andeq	r2, r0, r0, lsl #31
   11ecc:	andeq	r3, r0, r8, lsl r4
   11ed0:	push	{fp, lr}
   11ed4:	mov	fp, sp
   11ed8:	sub	sp, sp, #16
   11edc:	str	r0, [fp, #-4]
   11ee0:	movw	r0, #0
   11ee4:	strh	r0, [fp, #-6]
   11ee8:	ldr	r0, [fp, #-4]
   11eec:	movw	r1, #0
   11ef0:	cmp	r0, r1
   11ef4:	beq	11f00 <print_object@@Base+0xcb0>
   11ef8:	b	11efc <print_object@@Base+0xcac>
   11efc:	b	11f20 <print_object@@Base+0xcd0>
   11f00:	ldr	r0, [pc, #136]	; 11f90 <print_object@@Base+0xd40>
   11f04:	add	r0, pc, r0
   11f08:	ldr	r1, [pc, #132]	; 11f94 <print_object@@Base+0xd44>
   11f0c:	add	r1, pc, r1
   11f10:	ldr	r2, [pc, #128]	; 11f98 <print_object@@Base+0xd48>
   11f14:	add	r3, pc, r2
   11f18:	movw	r2, #205	; 0xcd
   11f1c:	bl	109b4 <__assert_fail@plt>
   11f20:	mov	r0, #5
   11f24:	strh	r0, [sp, #8]
   11f28:	ldr	r0, [fp, #-4]
   11f2c:	str	r0, [sp]
   11f30:	bl	14640 <main@@Base+0xbc>
   11f34:	ldr	lr, [sp]
   11f38:	sub	r0, lr, r0
   11f3c:	str	r0, [sp, #4]
   11f40:	ldr	r0, [sp, #4]
   11f44:	bl	14664 <main@@Base+0xe0>
   11f48:	ldrh	lr, [sp, #8]
   11f4c:	add	lr, lr, #3
   11f50:	lsl	lr, lr, #1
   11f54:	cmp	r0, lr
   11f58:	bcc	11f74 <print_object@@Base+0xd24>
   11f5c:	ldr	r0, [sp, #4]
   11f60:	ldrh	r1, [sp, #8]
   11f64:	add	r0, r0, r1, lsl #1
   11f68:	add	r0, r0, #4
   11f6c:	bl	14664 <main@@Base+0xe0>
   11f70:	strh	r0, [fp, #-6]
   11f74:	ldrh	r0, [fp, #-6]
   11f78:	cmp	r0, #0
   11f7c:	movw	r0, #0
   11f80:	movne	r0, #1
   11f84:	and	r0, r0, #1
   11f88:	mov	sp, fp
   11f8c:	pop	{fp, pc}
   11f90:	andeq	r2, r0, sl, asr lr
   11f94:	andeq	r2, r0, r8, ror lr
   11f98:	andeq	r3, r0, r3, asr r3
   11f9c:	nop	{0}
   11fa0:	push	{fp, lr}
   11fa4:	mov	fp, sp
   11fa8:	sub	sp, sp, #24
   11fac:	str	r0, [fp, #-4]
   11fb0:	movw	r0, #0
   11fb4:	strh	r0, [fp, #-6]
   11fb8:	ldr	r0, [fp, #-4]
   11fbc:	movw	r1, #0
   11fc0:	cmp	r0, r1
   11fc4:	beq	11fd0 <print_object@@Base+0xd80>
   11fc8:	b	11fcc <print_object@@Base+0xd7c>
   11fcc:	b	11ff0 <print_object@@Base+0xda0>
   11fd0:	ldr	r0, [pc, #184]	; 12090 <print_object@@Base+0xe40>
   11fd4:	add	r0, pc, r0
   11fd8:	ldr	r1, [pc, #180]	; 12094 <print_object@@Base+0xe44>
   11fdc:	add	r1, pc, r1
   11fe0:	ldr	r2, [pc, #176]	; 12098 <print_object@@Base+0xe48>
   11fe4:	add	r3, pc, r2
   11fe8:	movw	r2, #205	; 0xcd
   11fec:	bl	109b4 <__assert_fail@plt>
   11ff0:	mov	r0, #5
   11ff4:	strh	r0, [fp, #-8]
   11ff8:	ldr	r0, [fp, #-4]
   11ffc:	str	r0, [sp, #8]
   12000:	bl	14640 <main@@Base+0xbc>
   12004:	ldr	lr, [sp, #8]
   12008:	sub	r0, lr, r0
   1200c:	str	r0, [sp, #12]
   12010:	ldr	r0, [sp, #12]
   12014:	bl	14664 <main@@Base+0xe0>
   12018:	ldrh	lr, [fp, #-8]
   1201c:	add	lr, lr, #3
   12020:	lsl	lr, lr, #1
   12024:	cmp	r0, lr
   12028:	bcc	12044 <print_object@@Base+0xdf4>
   1202c:	ldr	r0, [sp, #12]
   12030:	ldrh	r1, [fp, #-8]
   12034:	add	r0, r0, r1, lsl #1
   12038:	add	r0, r0, #4
   1203c:	bl	14664 <main@@Base+0xe0>
   12040:	strh	r0, [fp, #-6]
   12044:	ldrh	r0, [fp, #-6]
   12048:	cmp	r0, #0
   1204c:	beq	12068 <print_object@@Base+0xe18>
   12050:	ldr	r0, [fp, #-4]
   12054:	ldrh	r1, [fp, #-6]
   12058:	add	r0, r0, r1
   1205c:	bl	1483c <main@@Base+0x2b8>
   12060:	vstr	d0, [sp]
   12064:	b	12074 <print_object@@Base+0xe24>
   12068:	vldr	d16, [pc, #24]	; 12088 <print_object@@Base+0xe38>
   1206c:	vstr	d16, [sp]
   12070:	b	12074 <print_object@@Base+0xe24>
   12074:	vldr	d16, [sp]
   12078:	vmov.f64	d0, d16
   1207c:	mov	sp, fp
   12080:	pop	{fp, pc}
   12084:	nop	{0}
	...
   12090:	andeq	r2, r0, sl, lsl #27
   12094:	andeq	r2, r0, r8, lsr #27
   12098:	andeq	r3, r0, sl, asr #5
   1209c:	push	{fp, lr}
   120a0:	mov	fp, sp
   120a4:	sub	sp, sp, #16
   120a8:	str	r0, [fp, #-4]
   120ac:	movw	r0, #0
   120b0:	strh	r0, [fp, #-6]
   120b4:	ldr	r0, [fp, #-4]
   120b8:	movw	r1, #0
   120bc:	cmp	r0, r1
   120c0:	beq	120cc <print_object@@Base+0xe7c>
   120c4:	b	120c8 <print_object@@Base+0xe78>
   120c8:	b	120ec <print_object@@Base+0xe9c>
   120cc:	ldr	r0, [pc, #136]	; 1215c <print_object@@Base+0xf0c>
   120d0:	add	r0, pc, r0
   120d4:	ldr	r1, [pc, #132]	; 12160 <print_object@@Base+0xf10>
   120d8:	add	r1, pc, r1
   120dc:	ldr	r2, [pc, #128]	; 12164 <print_object@@Base+0xf14>
   120e0:	add	r3, pc, r2
   120e4:	movw	r2, #207	; 0xcf
   120e8:	bl	109b4 <__assert_fail@plt>
   120ec:	mov	r0, #7
   120f0:	strh	r0, [sp, #8]
   120f4:	ldr	r0, [fp, #-4]
   120f8:	str	r0, [sp]
   120fc:	bl	14640 <main@@Base+0xbc>
   12100:	ldr	lr, [sp]
   12104:	sub	r0, lr, r0
   12108:	str	r0, [sp, #4]
   1210c:	ldr	r0, [sp, #4]
   12110:	bl	14664 <main@@Base+0xe0>
   12114:	ldrh	lr, [sp, #8]
   12118:	add	lr, lr, #3
   1211c:	lsl	lr, lr, #1
   12120:	cmp	r0, lr
   12124:	bcc	12140 <print_object@@Base+0xef0>
   12128:	ldr	r0, [sp, #4]
   1212c:	ldrh	r1, [sp, #8]
   12130:	add	r0, r0, r1, lsl #1
   12134:	add	r0, r0, #4
   12138:	bl	14664 <main@@Base+0xe0>
   1213c:	strh	r0, [fp, #-6]
   12140:	ldrh	r0, [fp, #-6]
   12144:	cmp	r0, #0
   12148:	movw	r0, #0
   1214c:	movne	r0, #1
   12150:	and	r0, r0, #1
   12154:	mov	sp, fp
   12158:	pop	{fp, pc}
   1215c:	andeq	r2, r0, lr, lsl #25
   12160:	andeq	r2, r0, ip, lsr #25
   12164:	andeq	r3, r0, sp, lsl #4
   12168:	push	{fp, lr}
   1216c:	mov	fp, sp
   12170:	sub	sp, sp, #24
   12174:	str	r0, [fp, #-4]
   12178:	movw	r0, #0
   1217c:	strh	r0, [fp, #-6]
   12180:	ldr	r0, [fp, #-4]
   12184:	movw	r1, #0
   12188:	cmp	r0, r1
   1218c:	beq	12198 <print_object@@Base+0xf48>
   12190:	b	12194 <print_object@@Base+0xf44>
   12194:	b	121b8 <print_object@@Base+0xf68>
   12198:	ldr	r0, [pc, #176]	; 12250 <print_object@@Base+0x1000>
   1219c:	add	r0, pc, r0
   121a0:	ldr	r1, [pc, #172]	; 12254 <print_object@@Base+0x1004>
   121a4:	add	r1, pc, r1
   121a8:	ldr	r2, [pc, #168]	; 12258 <print_object@@Base+0x1008>
   121ac:	add	r3, pc, r2
   121b0:	movw	r2, #207	; 0xcf
   121b4:	bl	109b4 <__assert_fail@plt>
   121b8:	mov	r0, #7
   121bc:	strh	r0, [fp, #-8]
   121c0:	ldr	r0, [fp, #-4]
   121c4:	str	r0, [sp, #8]
   121c8:	bl	14640 <main@@Base+0xbc>
   121cc:	ldr	lr, [sp, #8]
   121d0:	sub	r0, lr, r0
   121d4:	str	r0, [sp, #12]
   121d8:	ldr	r0, [sp, #12]
   121dc:	bl	14664 <main@@Base+0xe0>
   121e0:	ldrh	lr, [fp, #-8]
   121e4:	add	lr, lr, #3
   121e8:	lsl	lr, lr, #1
   121ec:	cmp	r0, lr
   121f0:	bcc	1220c <print_object@@Base+0xfbc>
   121f4:	ldr	r0, [sp, #12]
   121f8:	ldrh	r1, [fp, #-8]
   121fc:	add	r0, r0, r1, lsl #1
   12200:	add	r0, r0, #4
   12204:	bl	14664 <main@@Base+0xe0>
   12208:	strh	r0, [fp, #-6]
   1220c:	ldrh	r0, [fp, #-6]
   12210:	cmp	r0, #0
   12214:	beq	12234 <print_object@@Base+0xfe4>
   12218:	ldr	r0, [fp, #-4]
   1221c:	ldrh	r1, [fp, #-6]
   12220:	add	r0, r0, r1
   12224:	bl	1487c <main@@Base+0x2f8>
   12228:	and	r0, r0, #255	; 0xff
   1222c:	str	r0, [sp, #4]
   12230:	b	12240 <print_object@@Base+0xff0>
   12234:	movw	r0, #0
   12238:	str	r0, [sp, #4]
   1223c:	b	12240 <print_object@@Base+0xff0>
   12240:	ldr	r0, [sp, #4]
   12244:	and	r0, r0, #255	; 0xff
   12248:	mov	sp, fp
   1224c:	pop	{fp, pc}
   12250:	andeq	r2, r0, r2, asr #23
   12254:	andeq	r2, r0, r0, ror #23
   12258:	andeq	r3, r0, r4, lsl #3
   1225c:	push	{fp, lr}
   12260:	mov	fp, sp
   12264:	sub	sp, sp, #16
   12268:	str	r0, [fp, #-4]
   1226c:	movw	r0, #0
   12270:	strh	r0, [fp, #-6]
   12274:	ldr	r0, [fp, #-4]
   12278:	movw	r1, #0
   1227c:	cmp	r0, r1
   12280:	beq	1228c <print_object@@Base+0x103c>
   12284:	b	12288 <print_object@@Base+0x1038>
   12288:	b	122ac <print_object@@Base+0x105c>
   1228c:	ldr	r0, [pc, #136]	; 1231c <print_object@@Base+0x10cc>
   12290:	add	r0, pc, r0
   12294:	ldr	r1, [pc, #132]	; 12320 <print_object@@Base+0x10d0>
   12298:	add	r1, pc, r1
   1229c:	ldr	r2, [pc, #128]	; 12324 <print_object@@Base+0x10d4>
   122a0:	add	r3, pc, r2
   122a4:	movw	r2, #208	; 0xd0
   122a8:	bl	109b4 <__assert_fail@plt>
   122ac:	mov	r0, #8
   122b0:	strh	r0, [sp, #8]
   122b4:	ldr	r0, [fp, #-4]
   122b8:	str	r0, [sp]
   122bc:	bl	14640 <main@@Base+0xbc>
   122c0:	ldr	lr, [sp]
   122c4:	sub	r0, lr, r0
   122c8:	str	r0, [sp, #4]
   122cc:	ldr	r0, [sp, #4]
   122d0:	bl	14664 <main@@Base+0xe0>
   122d4:	ldrh	lr, [sp, #8]
   122d8:	add	lr, lr, #3
   122dc:	lsl	lr, lr, #1
   122e0:	cmp	r0, lr
   122e4:	bcc	12300 <print_object@@Base+0x10b0>
   122e8:	ldr	r0, [sp, #4]
   122ec:	ldrh	r1, [sp, #8]
   122f0:	add	r0, r0, r1, lsl #1
   122f4:	add	r0, r0, #4
   122f8:	bl	14664 <main@@Base+0xe0>
   122fc:	strh	r0, [fp, #-6]
   12300:	ldrh	r0, [fp, #-6]
   12304:	cmp	r0, #0
   12308:	movw	r0, #0
   1230c:	movne	r0, #1
   12310:	and	r0, r0, #1
   12314:	mov	sp, fp
   12318:	pop	{fp, pc}
   1231c:	andeq	r2, r0, lr, asr #21
   12320:	andeq	r2, r0, ip, ror #21
   12324:	ldrdeq	r3, [r0], -r7
   12328:	push	{fp, lr}
   1232c:	mov	fp, sp
   12330:	sub	sp, sp, #24
   12334:	str	r0, [fp, #-4]
   12338:	movw	r0, #0
   1233c:	strh	r0, [fp, #-6]
   12340:	ldr	r0, [fp, #-4]
   12344:	movw	r1, #0
   12348:	cmp	r0, r1
   1234c:	beq	12358 <print_object@@Base+0x1108>
   12350:	b	12354 <print_object@@Base+0x1104>
   12354:	b	12378 <print_object@@Base+0x1128>
   12358:	ldr	r0, [pc, #176]	; 12410 <print_object@@Base+0x11c0>
   1235c:	add	r0, pc, r0
   12360:	ldr	r1, [pc, #172]	; 12414 <print_object@@Base+0x11c4>
   12364:	add	r1, pc, r1
   12368:	ldr	r2, [pc, #168]	; 12418 <print_object@@Base+0x11c8>
   1236c:	add	r3, pc, r2
   12370:	movw	r2, #208	; 0xd0
   12374:	bl	109b4 <__assert_fail@plt>
   12378:	mov	r0, #8
   1237c:	strh	r0, [fp, #-8]
   12380:	ldr	r0, [fp, #-4]
   12384:	str	r0, [sp, #8]
   12388:	bl	14640 <main@@Base+0xbc>
   1238c:	ldr	lr, [sp, #8]
   12390:	sub	r0, lr, r0
   12394:	str	r0, [sp, #12]
   12398:	ldr	r0, [sp, #12]
   1239c:	bl	14664 <main@@Base+0xe0>
   123a0:	ldrh	lr, [fp, #-8]
   123a4:	add	lr, lr, #3
   123a8:	lsl	lr, lr, #1
   123ac:	cmp	r0, lr
   123b0:	bcc	123cc <print_object@@Base+0x117c>
   123b4:	ldr	r0, [sp, #12]
   123b8:	ldrh	r1, [fp, #-8]
   123bc:	add	r0, r0, r1, lsl #1
   123c0:	add	r0, r0, #4
   123c4:	bl	14664 <main@@Base+0xe0>
   123c8:	strh	r0, [fp, #-6]
   123cc:	ldrh	r0, [fp, #-6]
   123d0:	cmp	r0, #0
   123d4:	beq	123f4 <print_object@@Base+0x11a4>
   123d8:	ldr	r0, [fp, #-4]
   123dc:	ldrh	r1, [fp, #-6]
   123e0:	add	r0, r0, r1
   123e4:	bl	1487c <main@@Base+0x2f8>
   123e8:	and	r0, r0, #255	; 0xff
   123ec:	str	r0, [sp, #4]
   123f0:	b	12400 <print_object@@Base+0x11b0>
   123f4:	movw	r0, #0
   123f8:	str	r0, [sp, #4]
   123fc:	b	12400 <print_object@@Base+0x11b0>
   12400:	ldr	r0, [sp, #4]
   12404:	and	r0, r0, #255	; 0xff
   12408:	mov	sp, fp
   1240c:	pop	{fp, pc}
   12410:	andeq	r2, r0, r2, lsl #20
   12414:	andeq	r2, r0, r0, lsr #20
   12418:	andeq	r3, r0, r9, asr #32
   1241c:	push	{fp, lr}
   12420:	mov	fp, sp
   12424:	sub	sp, sp, #16
   12428:	str	r0, [fp, #-4]
   1242c:	movw	r0, #0
   12430:	strh	r0, [fp, #-6]
   12434:	ldr	r0, [fp, #-4]
   12438:	movw	r1, #0
   1243c:	cmp	r0, r1
   12440:	beq	1244c <print_object@@Base+0x11fc>
   12444:	b	12448 <print_object@@Base+0x11f8>
   12448:	b	1246c <print_object@@Base+0x121c>
   1244c:	ldr	r0, [pc, #136]	; 124dc <print_object@@Base+0x128c>
   12450:	add	r0, pc, r0
   12454:	ldr	r1, [pc, #132]	; 124e0 <print_object@@Base+0x1290>
   12458:	add	r1, pc, r1
   1245c:	ldr	r2, [pc, #128]	; 124e4 <print_object@@Base+0x1294>
   12460:	add	r3, pc, r2
   12464:	movw	r2, #225	; 0xe1
   12468:	bl	109b4 <__assert_fail@plt>
   1246c:	mov	r0, #2
   12470:	strh	r0, [sp, #8]
   12474:	ldr	r0, [fp, #-4]
   12478:	str	r0, [sp]
   1247c:	bl	14640 <main@@Base+0xbc>
   12480:	ldr	lr, [sp]
   12484:	sub	r0, lr, r0
   12488:	str	r0, [sp, #4]
   1248c:	ldr	r0, [sp, #4]
   12490:	bl	14664 <main@@Base+0xe0>
   12494:	ldrh	lr, [sp, #8]
   12498:	add	lr, lr, #3
   1249c:	lsl	lr, lr, #1
   124a0:	cmp	r0, lr
   124a4:	bcc	124c0 <print_object@@Base+0x1270>
   124a8:	ldr	r0, [sp, #4]
   124ac:	ldrh	r1, [sp, #8]
   124b0:	add	r0, r0, r1, lsl #1
   124b4:	add	r0, r0, #4
   124b8:	bl	14664 <main@@Base+0xe0>
   124bc:	strh	r0, [fp, #-6]
   124c0:	ldrh	r0, [fp, #-6]
   124c4:	cmp	r0, #0
   124c8:	movw	r0, #0
   124cc:	movne	r0, #1
   124d0:	and	r0, r0, #1
   124d4:	mov	sp, fp
   124d8:	pop	{fp, pc}
   124dc:	andeq	r2, r0, lr, lsl #18
   124e0:	andeq	r2, r0, ip, lsr #18
   124e4:	muleq	r0, r7, pc	; <UNPREDICTABLE>
   124e8:	push	{fp, lr}
   124ec:	mov	fp, sp
   124f0:	sub	sp, sp, #24
   124f4:	str	r0, [fp, #-4]
   124f8:	movw	r0, #0
   124fc:	strh	r0, [fp, #-6]
   12500:	ldr	r0, [fp, #-4]
   12504:	movw	r1, #0
   12508:	cmp	r0, r1
   1250c:	beq	12518 <print_object@@Base+0x12c8>
   12510:	b	12514 <print_object@@Base+0x12c4>
   12514:	b	12538 <print_object@@Base+0x12e8>
   12518:	ldr	r0, [pc, #176]	; 125d0 <print_object@@Base+0x1380>
   1251c:	add	r0, pc, r0
   12520:	ldr	r1, [pc, #172]	; 125d4 <print_object@@Base+0x1384>
   12524:	add	r1, pc, r1
   12528:	ldr	r2, [pc, #168]	; 125d8 <print_object@@Base+0x1388>
   1252c:	add	r3, pc, r2
   12530:	movw	r2, #225	; 0xe1
   12534:	bl	109b4 <__assert_fail@plt>
   12538:	mov	r0, #2
   1253c:	strh	r0, [fp, #-8]
   12540:	ldr	r0, [fp, #-4]
   12544:	str	r0, [sp, #8]
   12548:	bl	14640 <main@@Base+0xbc>
   1254c:	ldr	lr, [sp, #8]
   12550:	sub	r0, lr, r0
   12554:	str	r0, [sp, #12]
   12558:	ldr	r0, [sp, #12]
   1255c:	bl	14664 <main@@Base+0xe0>
   12560:	ldrh	lr, [fp, #-8]
   12564:	add	lr, lr, #3
   12568:	lsl	lr, lr, #1
   1256c:	cmp	r0, lr
   12570:	bcc	1258c <print_object@@Base+0x133c>
   12574:	ldr	r0, [sp, #12]
   12578:	ldrh	r1, [fp, #-8]
   1257c:	add	r0, r0, r1, lsl #1
   12580:	add	r0, r0, #4
   12584:	bl	14664 <main@@Base+0xe0>
   12588:	strh	r0, [fp, #-6]
   1258c:	ldrh	r0, [fp, #-6]
   12590:	cmp	r0, #0
   12594:	beq	125b4 <print_object@@Base+0x1364>
   12598:	ldr	r0, [fp, #-4]
   1259c:	ldrh	r1, [fp, #-6]
   125a0:	add	r0, r0, r1
   125a4:	bl	1487c <main@@Base+0x2f8>
   125a8:	and	r0, r0, #255	; 0xff
   125ac:	str	r0, [sp, #4]
   125b0:	b	125c0 <print_object@@Base+0x1370>
   125b4:	movw	r0, #0
   125b8:	str	r0, [sp, #4]
   125bc:	b	125c0 <print_object@@Base+0x1370>
   125c0:	ldr	r0, [sp, #4]
   125c4:	and	r0, r0, #255	; 0xff
   125c8:	mov	sp, fp
   125cc:	pop	{fp, pc}
   125d0:	andeq	r2, r0, r2, asr #16
   125d4:	andeq	r2, r0, r0, ror #16
   125d8:	andeq	r2, r0, r1, lsl pc
   125dc:	push	{fp, lr}
   125e0:	mov	fp, sp
   125e4:	sub	sp, sp, #16
   125e8:	str	r0, [fp, #-4]
   125ec:	movw	r0, #0
   125f0:	strh	r0, [fp, #-6]
   125f4:	ldr	r0, [fp, #-4]
   125f8:	movw	r1, #0
   125fc:	cmp	r0, r1
   12600:	beq	1260c <print_object@@Base+0x13bc>
   12604:	b	12608 <print_object@@Base+0x13b8>
   12608:	b	1262c <print_object@@Base+0x13dc>
   1260c:	ldr	r0, [pc, #136]	; 1269c <print_object@@Base+0x144c>
   12610:	add	r0, pc, r0
   12614:	ldr	r1, [pc, #132]	; 126a0 <print_object@@Base+0x1450>
   12618:	add	r1, pc, r1
   1261c:	ldr	r2, [pc, #128]	; 126a4 <print_object@@Base+0x1454>
   12620:	add	r3, pc, r2
   12624:	movw	r2, #226	; 0xe2
   12628:	bl	109b4 <__assert_fail@plt>
   1262c:	mov	r0, #3
   12630:	strh	r0, [sp, #8]
   12634:	ldr	r0, [fp, #-4]
   12638:	str	r0, [sp]
   1263c:	bl	14640 <main@@Base+0xbc>
   12640:	ldr	lr, [sp]
   12644:	sub	r0, lr, r0
   12648:	str	r0, [sp, #4]
   1264c:	ldr	r0, [sp, #4]
   12650:	bl	14664 <main@@Base+0xe0>
   12654:	ldrh	lr, [sp, #8]
   12658:	add	lr, lr, #3
   1265c:	lsl	lr, lr, #1
   12660:	cmp	r0, lr
   12664:	bcc	12680 <print_object@@Base+0x1430>
   12668:	ldr	r0, [sp, #4]
   1266c:	ldrh	r1, [sp, #8]
   12670:	add	r0, r0, r1, lsl #1
   12674:	add	r0, r0, #4
   12678:	bl	14664 <main@@Base+0xe0>
   1267c:	strh	r0, [fp, #-6]
   12680:	ldrh	r0, [fp, #-6]
   12684:	cmp	r0, #0
   12688:	movw	r0, #0
   1268c:	movne	r0, #1
   12690:	and	r0, r0, #1
   12694:	mov	sp, fp
   12698:	pop	{fp, pc}
   1269c:	andeq	r2, r0, lr, asr #14
   126a0:	andeq	r2, r0, ip, ror #14
   126a4:	andeq	r2, r0, r7, ror #28
   126a8:	push	{fp, lr}
   126ac:	mov	fp, sp
   126b0:	sub	sp, sp, #24
   126b4:	str	r0, [fp, #-4]
   126b8:	movw	r0, #0
   126bc:	strh	r0, [fp, #-6]
   126c0:	ldr	r0, [fp, #-4]
   126c4:	movw	r1, #0
   126c8:	cmp	r0, r1
   126cc:	beq	126d8 <print_object@@Base+0x1488>
   126d0:	b	126d4 <print_object@@Base+0x1484>
   126d4:	b	126f8 <print_object@@Base+0x14a8>
   126d8:	ldr	r0, [pc, #168]	; 12788 <print_object@@Base+0x1538>
   126dc:	add	r0, pc, r0
   126e0:	ldr	r1, [pc, #164]	; 1278c <print_object@@Base+0x153c>
   126e4:	add	r1, pc, r1
   126e8:	ldr	r2, [pc, #160]	; 12790 <print_object@@Base+0x1540>
   126ec:	add	r3, pc, r2
   126f0:	movw	r2, #226	; 0xe2
   126f4:	bl	109b4 <__assert_fail@plt>
   126f8:	mov	r0, #3
   126fc:	strh	r0, [fp, #-8]
   12700:	ldr	r0, [fp, #-4]
   12704:	str	r0, [sp, #8]
   12708:	bl	14640 <main@@Base+0xbc>
   1270c:	ldr	lr, [sp, #8]
   12710:	sub	r0, lr, r0
   12714:	str	r0, [sp, #12]
   12718:	ldr	r0, [sp, #12]
   1271c:	bl	14664 <main@@Base+0xe0>
   12720:	ldrh	lr, [fp, #-8]
   12724:	add	lr, lr, #3
   12728:	lsl	lr, lr, #1
   1272c:	cmp	r0, lr
   12730:	bcc	1274c <print_object@@Base+0x14fc>
   12734:	ldr	r0, [sp, #12]
   12738:	ldrh	r1, [fp, #-8]
   1273c:	add	r0, r0, r1, lsl #1
   12740:	add	r0, r0, #4
   12744:	bl	14664 <main@@Base+0xe0>
   12748:	strh	r0, [fp, #-6]
   1274c:	ldrh	r0, [fp, #-6]
   12750:	cmp	r0, #0
   12754:	beq	12770 <print_object@@Base+0x1520>
   12758:	ldr	r0, [fp, #-4]
   1275c:	ldrh	r1, [fp, #-6]
   12760:	add	r0, r0, r1
   12764:	bl	146f0 <main@@Base+0x16c>
   12768:	str	r0, [sp, #4]
   1276c:	b	1277c <print_object@@Base+0x152c>
   12770:	movw	r0, #0
   12774:	str	r0, [sp, #4]
   12778:	b	1277c <print_object@@Base+0x152c>
   1277c:	ldr	r0, [sp, #4]
   12780:	mov	sp, fp
   12784:	pop	{fp, pc}
   12788:	andeq	r2, r0, r2, lsl #13
   1278c:	andeq	r2, r0, r0, lsr #13
   12790:	andeq	r2, r0, r0, ror #27
   12794:	push	{fp, lr}
   12798:	mov	fp, sp
   1279c:	sub	sp, sp, #16
   127a0:	str	r0, [fp, #-4]
   127a4:	movw	r0, #0
   127a8:	strh	r0, [fp, #-6]
   127ac:	ldr	r0, [fp, #-4]
   127b0:	movw	r1, #0
   127b4:	cmp	r0, r1
   127b8:	beq	127c4 <print_object@@Base+0x1574>
   127bc:	b	127c0 <print_object@@Base+0x1570>
   127c0:	b	127e4 <print_object@@Base+0x1594>
   127c4:	ldr	r0, [pc, #136]	; 12854 <print_object@@Base+0x1604>
   127c8:	add	r0, pc, r0
   127cc:	ldr	r1, [pc, #132]	; 12858 <print_object@@Base+0x1608>
   127d0:	add	r1, pc, r1
   127d4:	ldr	r2, [pc, #128]	; 1285c <print_object@@Base+0x160c>
   127d8:	add	r3, pc, r2
   127dc:	movw	r2, #227	; 0xe3
   127e0:	bl	109b4 <__assert_fail@plt>
   127e4:	mov	r0, #4
   127e8:	strh	r0, [sp, #8]
   127ec:	ldr	r0, [fp, #-4]
   127f0:	str	r0, [sp]
   127f4:	bl	14640 <main@@Base+0xbc>
   127f8:	ldr	lr, [sp]
   127fc:	sub	r0, lr, r0
   12800:	str	r0, [sp, #4]
   12804:	ldr	r0, [sp, #4]
   12808:	bl	14664 <main@@Base+0xe0>
   1280c:	ldrh	lr, [sp, #8]
   12810:	add	lr, lr, #3
   12814:	lsl	lr, lr, #1
   12818:	cmp	r0, lr
   1281c:	bcc	12838 <print_object@@Base+0x15e8>
   12820:	ldr	r0, [sp, #4]
   12824:	ldrh	r1, [sp, #8]
   12828:	add	r0, r0, r1, lsl #1
   1282c:	add	r0, r0, #4
   12830:	bl	14664 <main@@Base+0xe0>
   12834:	strh	r0, [fp, #-6]
   12838:	ldrh	r0, [fp, #-6]
   1283c:	cmp	r0, #0
   12840:	movw	r0, #0
   12844:	movne	r0, #1
   12848:	and	r0, r0, #1
   1284c:	mov	sp, fp
   12850:	pop	{fp, pc}
   12854:	muleq	r0, r6, r5
   12858:			; <UNDEFINED> instruction: 0x000025b4
   1285c:	andeq	r2, r0, r2, lsr sp
   12860:	push	{fp, lr}
   12864:	mov	fp, sp
   12868:	sub	sp, sp, #24
   1286c:	str	r0, [fp, #-4]
   12870:	movw	r0, #0
   12874:	strh	r0, [fp, #-6]
   12878:	ldr	r0, [fp, #-4]
   1287c:	movw	r1, #0
   12880:	cmp	r0, r1
   12884:	beq	12890 <print_object@@Base+0x1640>
   12888:	b	1288c <print_object@@Base+0x163c>
   1288c:	b	128b0 <print_object@@Base+0x1660>
   12890:	ldr	r0, [pc, #168]	; 12940 <print_object@@Base+0x16f0>
   12894:	add	r0, pc, r0
   12898:	ldr	r1, [pc, #164]	; 12944 <print_object@@Base+0x16f4>
   1289c:	add	r1, pc, r1
   128a0:	ldr	r2, [pc, #160]	; 12948 <print_object@@Base+0x16f8>
   128a4:	add	r3, pc, r2
   128a8:	movw	r2, #227	; 0xe3
   128ac:	bl	109b4 <__assert_fail@plt>
   128b0:	mov	r0, #4
   128b4:	strh	r0, [fp, #-8]
   128b8:	ldr	r0, [fp, #-4]
   128bc:	str	r0, [sp, #8]
   128c0:	bl	14640 <main@@Base+0xbc>
   128c4:	ldr	lr, [sp, #8]
   128c8:	sub	r0, lr, r0
   128cc:	str	r0, [sp, #12]
   128d0:	ldr	r0, [sp, #12]
   128d4:	bl	14664 <main@@Base+0xe0>
   128d8:	ldrh	lr, [fp, #-8]
   128dc:	add	lr, lr, #3
   128e0:	lsl	lr, lr, #1
   128e4:	cmp	r0, lr
   128e8:	bcc	12904 <print_object@@Base+0x16b4>
   128ec:	ldr	r0, [sp, #12]
   128f0:	ldrh	r1, [fp, #-8]
   128f4:	add	r0, r0, r1, lsl #1
   128f8:	add	r0, r0, #4
   128fc:	bl	14664 <main@@Base+0xe0>
   12900:	strh	r0, [fp, #-6]
   12904:	ldrh	r0, [fp, #-6]
   12908:	cmp	r0, #0
   1290c:	beq	12928 <print_object@@Base+0x16d8>
   12910:	ldr	r0, [fp, #-4]
   12914:	ldrh	r1, [fp, #-6]
   12918:	add	r0, r0, r1
   1291c:	bl	146f0 <main@@Base+0x16c>
   12920:	str	r0, [sp, #4]
   12924:	b	12934 <print_object@@Base+0x16e4>
   12928:	movw	r0, #0
   1292c:	str	r0, [sp, #4]
   12930:	b	12934 <print_object@@Base+0x16e4>
   12934:	ldr	r0, [sp, #4]
   12938:	mov	sp, fp
   1293c:	pop	{fp, pc}
   12940:	andeq	r2, r0, sl, asr #9
   12944:	andeq	r2, r0, r8, ror #9
   12948:	andeq	r2, r0, fp, lsr #25

0001294c <print_enum@@Base>:
   1294c:	push	{fp, lr}
   12950:	mov	fp, sp
   12954:	sub	sp, sp, #80	; 0x50
   12958:	str	r0, [fp, #-4]
   1295c:	ldr	r0, [fp, #-4]
   12960:	bl	12b90 <print_enum@@Base+0x244>
   12964:	ldr	lr, [pc, #496]	; 12b5c <print_enum@@Base+0x210>
   12968:	add	lr, pc, lr
   1296c:	str	r0, [fp, #-20]	; 0xffffffec
   12970:	mov	r0, lr
   12974:	ldr	r1, [fp, #-20]	; 0xffffffec
   12978:	bl	10900 <printf@plt>
   1297c:	ldr	r1, [fp, #-4]
   12980:	str	r0, [fp, #-24]	; 0xffffffe8
   12984:	mov	r0, r1
   12988:	bl	12cb0 <print_enum@@Base+0x364>
   1298c:	ldr	r1, [pc, #452]	; 12b58 <print_enum@@Base+0x20c>
   12990:	add	r1, pc, r1
   12994:	str	r0, [fp, #-8]
   12998:	mov	r0, r1
   1299c:	bl	10900 <printf@plt>
   129a0:	movw	r1, #0
   129a4:	str	r1, [fp, #-16]
   129a8:	str	r0, [fp, #-28]	; 0xffffffe4
   129ac:	ldr	r0, [fp, #-16]
   129b0:	ldr	r1, [fp, #-8]
   129b4:	str	r0, [fp, #-32]	; 0xffffffe0
   129b8:	mov	r0, r1
   129bc:	bl	12dd0 <print_enum@@Base+0x484>
   129c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   129c4:	cmp	r1, r0
   129c8:	bcs	12ab4 <print_enum@@Base+0x168>
   129cc:	ldr	r0, [fp, #-8]
   129d0:	ldr	r1, [fp, #-16]
   129d4:	bl	12e20 <print_enum@@Base+0x4d4>
   129d8:	str	r0, [fp, #-12]
   129dc:	ldr	r0, [fp, #-16]
   129e0:	cmp	r0, #0
   129e4:	bls	129f8 <print_enum@@Base+0xac>
   129e8:	ldr	r0, [pc, #392]	; 12b78 <print_enum@@Base+0x22c>
   129ec:	add	r0, pc, r0
   129f0:	bl	10900 <printf@plt>
   129f4:	str	r0, [fp, #-36]	; 0xffffffdc
   129f8:	ldr	r0, [fp, #-12]
   129fc:	bl	12eb0 <print_enum@@Base+0x564>
   12a00:	ldr	lr, [pc, #372]	; 12b7c <print_enum@@Base+0x230>
   12a04:	add	lr, pc, lr
   12a08:	str	r0, [sp, #40]	; 0x28
   12a0c:	mov	r0, lr
   12a10:	ldr	r1, [sp, #40]	; 0x28
   12a14:	bl	10900 <printf@plt>
   12a18:	ldr	r1, [fp, #-12]
   12a1c:	str	r0, [sp, #36]	; 0x24
   12a20:	mov	r0, r1
   12a24:	bl	12fd0 <print_enum@@Base+0x684>
   12a28:	cmp	r0, #0
   12a2c:	beq	12a64 <print_enum@@Base+0x118>
   12a30:	ldr	r0, [fp, #-12]
   12a34:	bl	1309c <print_enum@@Base+0x750>
   12a38:	ldr	lr, [pc, #320]	; 12b80 <print_enum@@Base+0x234>
   12a3c:	add	lr, pc, lr
   12a40:	ldr	r2, [pc, #324]	; 12b8c <print_enum@@Base+0x240>
   12a44:	add	r2, pc, r2
   12a48:	str	r0, [sp, #32]
   12a4c:	mov	r0, r2
   12a50:	ldr	r2, [sp, #32]
   12a54:	mov	r3, r1
   12a58:	str	lr, [sp, #28]
   12a5c:	bl	10900 <printf@plt>
   12a60:	str	r0, [sp, #24]
   12a64:	ldr	r0, [fp, #-12]
   12a68:	bl	131a4 <print_enum@@Base+0x858>
   12a6c:	cmp	r0, #0
   12a70:	beq	12a94 <print_enum@@Base+0x148>
   12a74:	ldr	r0, [pc, #264]	; 12b84 <print_enum@@Base+0x238>
   12a78:	add	r0, pc, r0
   12a7c:	bl	10900 <printf@plt>
   12a80:	ldr	lr, [fp, #-12]
   12a84:	str	r0, [sp, #20]
   12a88:	mov	r0, lr
   12a8c:	bl	13270 <print_enum@@Base+0x924>
   12a90:	bl	11250 <print_object@@Base>
   12a94:	ldr	r0, [pc, #236]	; 12b88 <print_enum@@Base+0x23c>
   12a98:	add	r0, pc, r0
   12a9c:	bl	10900 <printf@plt>
   12aa0:	str	r0, [sp, #16]
   12aa4:	ldr	r0, [fp, #-16]
   12aa8:	add	r0, r0, #1
   12aac:	str	r0, [fp, #-16]
   12ab0:	b	129ac <print_enum@@Base+0x60>
   12ab4:	ldr	r0, [pc, #164]	; 12b60 <print_enum@@Base+0x214>
   12ab8:	add	r0, pc, r0
   12abc:	bl	10900 <printf@plt>
   12ac0:	ldr	lr, [fp, #-4]
   12ac4:	str	r0, [sp, #12]
   12ac8:	mov	r0, lr
   12acc:	bl	13374 <print_enum@@Base+0xa28>
   12ad0:	cmp	r0, #0
   12ad4:	beq	12b20 <print_enum@@Base+0x1d4>
   12ad8:	ldr	r0, [fp, #-4]
   12adc:	bl	13440 <print_enum@@Base+0xaf4>
   12ae0:	ldr	lr, [pc, #124]	; 12b64 <print_enum@@Base+0x218>
   12ae4:	add	lr, pc, lr
   12ae8:	ldr	r1, [pc, #120]	; 12b68 <print_enum@@Base+0x21c>
   12aec:	add	r1, pc, r1
   12af0:	ldr	r2, [pc, #116]	; 12b6c <print_enum@@Base+0x220>
   12af4:	add	r2, pc, r2
   12af8:	and	r0, r0, #255	; 0xff
   12afc:	cmp	r0, #0
   12b00:	movw	r0, #0
   12b04:	movne	r0, #1
   12b08:	tst	r0, #1
   12b0c:	movne	r2, r1
   12b10:	mov	r0, lr
   12b14:	mov	r1, r2
   12b18:	bl	10900 <printf@plt>
   12b1c:	str	r0, [sp, #8]
   12b20:	ldr	r0, [pc, #76]	; 12b74 <print_enum@@Base+0x228>
   12b24:	add	r0, pc, r0
   12b28:	bl	10900 <printf@plt>
   12b2c:	ldr	lr, [fp, #-4]
   12b30:	str	r0, [sp, #4]
   12b34:	mov	r0, lr
   12b38:	bl	13534 <print_enum@@Base+0xbe8>
   12b3c:	bl	10ab0 <print_type@@Base>
   12b40:	ldr	r0, [pc, #40]	; 12b70 <print_enum@@Base+0x224>
   12b44:	add	r0, pc, r0
   12b48:	bl	10900 <printf@plt>
   12b4c:	str	r0, [sp]
   12b50:	mov	sp, fp
   12b54:	pop	{fp, pc}
   12b58:	andeq	r2, r0, r4, ror r1
   12b5c:	andeq	r2, r0, r1, ror #1
   12b60:	andeq	r2, r0, ip, lsl r0
   12b64:	andeq	r2, r0, r5, asr #32
   12b68:	ldrdeq	r1, [r0], -r3
   12b6c:	ldrdeq	r1, [r0], -r0
   12b70:	andeq	r1, r0, r3, lsl #30
   12b74:	andeq	r2, r0, r4, lsl r0
   12b78:	andeq	r2, r0, lr, lsr #32
   12b7c:	andeq	r2, r0, r5, asr #32
   12b80:	ldrdeq	r2, [r0], -r4
   12b84:	andeq	r2, r0, r6, lsr #1
   12b88:	andeq	r1, r0, pc, lsr #31
   12b8c:	andeq	r2, r0, ip, asr #1
   12b90:	push	{fp, lr}
   12b94:	mov	fp, sp
   12b98:	sub	sp, sp, #24
   12b9c:	str	r0, [fp, #-4]
   12ba0:	movw	r0, #0
   12ba4:	strh	r0, [fp, #-10]
   12ba8:	ldr	r0, [fp, #-4]
   12bac:	movw	r1, #0
   12bb0:	cmp	r0, r1
   12bb4:	beq	12bc0 <print_enum@@Base+0x274>
   12bb8:	b	12bbc <print_enum@@Base+0x270>
   12bbc:	b	12be0 <print_enum@@Base+0x294>
   12bc0:	ldr	r0, [pc, #208]	; 12c98 <print_enum@@Base+0x34c>
   12bc4:	add	r0, pc, r0
   12bc8:	ldr	r1, [pc, #204]	; 12c9c <print_enum@@Base+0x350>
   12bcc:	add	r1, pc, r1
   12bd0:	ldr	r2, [pc, #200]	; 12ca0 <print_enum@@Base+0x354>
   12bd4:	add	r3, pc, r2
   12bd8:	movw	r2, #177	; 0xb1
   12bdc:	bl	109b4 <__assert_fail@plt>
   12be0:	mov	r0, #0
   12be4:	strh	r0, [sp, #12]
   12be8:	ldr	r0, [fp, #-4]
   12bec:	str	r0, [sp, #4]
   12bf0:	bl	14640 <main@@Base+0xbc>
   12bf4:	ldr	lr, [sp, #4]
   12bf8:	sub	r0, lr, r0
   12bfc:	str	r0, [sp, #8]
   12c00:	ldr	r0, [sp, #8]
   12c04:	bl	14664 <main@@Base+0xe0>
   12c08:	ldrh	lr, [sp, #12]
   12c0c:	add	lr, lr, #3
   12c10:	lsl	lr, lr, #1
   12c14:	cmp	r0, lr
   12c18:	bcc	12c34 <print_enum@@Base+0x2e8>
   12c1c:	ldr	r0, [sp, #8]
   12c20:	ldrh	r1, [sp, #12]
   12c24:	add	r0, r0, r1, lsl #1
   12c28:	add	r0, r0, #4
   12c2c:	bl	14664 <main@@Base+0xe0>
   12c30:	strh	r0, [fp, #-10]
   12c34:	ldrsh	r0, [fp, #-10]
   12c38:	cmp	r0, #0
   12c3c:	beq	12c78 <print_enum@@Base+0x32c>
   12c40:	ldr	r0, [fp, #-4]
   12c44:	ldrh	r1, [fp, #-10]
   12c48:	add	r0, r0, r1
   12c4c:	str	r0, [fp, #-8]
   12c50:	ldr	r0, [fp, #-8]
   12c54:	add	r0, r0, #4
   12c58:	ldr	r1, [fp, #-8]
   12c5c:	str	r0, [sp]
   12c60:	mov	r0, r1
   12c64:	bl	14728 <main@@Base+0x1a4>
   12c68:	ldr	r1, [sp]
   12c6c:	add	r0, r1, r0
   12c70:	mov	sp, fp
   12c74:	pop	{fp, pc}
   12c78:	ldr	r0, [pc, #36]	; 12ca4 <print_enum@@Base+0x358>
   12c7c:	add	r0, pc, r0
   12c80:	ldr	r1, [pc, #32]	; 12ca8 <print_enum@@Base+0x35c>
   12c84:	add	r1, pc, r1
   12c88:	ldr	r2, [pc, #28]	; 12cac <print_enum@@Base+0x360>
   12c8c:	add	r3, pc, r2
   12c90:	movw	r2, #177	; 0xb1
   12c94:	bl	109b4 <__assert_fail@plt>
   12c98:	muleq	r0, sl, r1
   12c9c:			; <UNDEFINED> instruction: 0x000021b8
   12ca0:			; <UNDEFINED> instruction: 0x000029b9
   12ca4:	andeq	r2, r0, sl, asr r3
   12ca8:	andeq	r2, r0, r0, lsl #2
   12cac:	andeq	r2, r0, r1, lsl #18
   12cb0:	push	{fp, lr}
   12cb4:	mov	fp, sp
   12cb8:	sub	sp, sp, #24
   12cbc:	str	r0, [fp, #-4]
   12cc0:	movw	r0, #0
   12cc4:	strh	r0, [fp, #-10]
   12cc8:	ldr	r0, [fp, #-4]
   12ccc:	movw	r1, #0
   12cd0:	cmp	r0, r1
   12cd4:	beq	12ce0 <print_enum@@Base+0x394>
   12cd8:	b	12cdc <print_enum@@Base+0x390>
   12cdc:	b	12d00 <print_enum@@Base+0x3b4>
   12ce0:	ldr	r0, [pc, #208]	; 12db8 <print_enum@@Base+0x46c>
   12ce4:	add	r0, pc, r0
   12ce8:	ldr	r1, [pc, #204]	; 12dbc <print_enum@@Base+0x470>
   12cec:	add	r1, pc, r1
   12cf0:	ldr	r2, [pc, #200]	; 12dc0 <print_enum@@Base+0x474>
   12cf4:	add	r3, pc, r2
   12cf8:	movw	r2, #183	; 0xb7
   12cfc:	bl	109b4 <__assert_fail@plt>
   12d00:	mov	r0, #1
   12d04:	strh	r0, [sp, #12]
   12d08:	ldr	r0, [fp, #-4]
   12d0c:	str	r0, [sp, #4]
   12d10:	bl	14640 <main@@Base+0xbc>
   12d14:	ldr	lr, [sp, #4]
   12d18:	sub	r0, lr, r0
   12d1c:	str	r0, [sp, #8]
   12d20:	ldr	r0, [sp, #8]
   12d24:	bl	14664 <main@@Base+0xe0>
   12d28:	ldrh	lr, [sp, #12]
   12d2c:	add	lr, lr, #3
   12d30:	lsl	lr, lr, #1
   12d34:	cmp	r0, lr
   12d38:	bcc	12d54 <print_enum@@Base+0x408>
   12d3c:	ldr	r0, [sp, #8]
   12d40:	ldrh	r1, [sp, #12]
   12d44:	add	r0, r0, r1, lsl #1
   12d48:	add	r0, r0, #4
   12d4c:	bl	14664 <main@@Base+0xe0>
   12d50:	strh	r0, [fp, #-10]
   12d54:	ldrsh	r0, [fp, #-10]
   12d58:	cmp	r0, #0
   12d5c:	beq	12d98 <print_enum@@Base+0x44c>
   12d60:	ldr	r0, [fp, #-4]
   12d64:	ldrh	r1, [fp, #-10]
   12d68:	add	r0, r0, r1
   12d6c:	str	r0, [fp, #-8]
   12d70:	ldr	r0, [fp, #-8]
   12d74:	add	r0, r0, #4
   12d78:	ldr	r1, [fp, #-8]
   12d7c:	str	r0, [sp]
   12d80:	mov	r0, r1
   12d84:	bl	14728 <main@@Base+0x1a4>
   12d88:	ldr	r1, [sp]
   12d8c:	add	r0, r1, r0
   12d90:	mov	sp, fp
   12d94:	pop	{fp, pc}
   12d98:	ldr	r0, [pc, #36]	; 12dc4 <print_enum@@Base+0x478>
   12d9c:	add	r0, pc, r0
   12da0:	ldr	r1, [pc, #32]	; 12dc8 <print_enum@@Base+0x47c>
   12da4:	add	r1, pc, r1
   12da8:	ldr	r2, [pc, #28]	; 12dcc <print_enum@@Base+0x480>
   12dac:	add	r3, pc, r2
   12db0:	movw	r2, #183	; 0xb7
   12db4:	bl	109b4 <__assert_fail@plt>
   12db8:	andeq	r2, r0, sl, ror r0
   12dbc:	muleq	r0, r8, r0
   12dc0:	ldrdeq	r2, [r0], -ip
   12dc4:	andeq	r2, r0, sl, lsr r2
   12dc8:	andeq	r1, r0, r0, ror #31
   12dcc:	andeq	r2, r0, r4, lsr #16
   12dd0:	push	{fp, lr}
   12dd4:	mov	fp, sp
   12dd8:	sub	sp, sp, #8
   12ddc:	str	r0, [sp, #4]
   12de0:	ldr	r0, [sp, #4]
   12de4:	movw	r1, #0
   12de8:	cmp	r0, r1
   12dec:	beq	12e08 <print_enum@@Base+0x4bc>
   12df0:	ldr	r0, [sp, #4]
   12df4:	mvn	r1, #3
   12df8:	add	r0, r0, r1
   12dfc:	bl	14728 <main@@Base+0x1a4>
   12e00:	str	r0, [sp]
   12e04:	b	12e14 <print_enum@@Base+0x4c8>
   12e08:	movw	r0, #0
   12e0c:	str	r0, [sp]
   12e10:	b	12e14 <print_enum@@Base+0x4c8>
   12e14:	ldr	r0, [sp]
   12e18:	mov	sp, fp
   12e1c:	pop	{fp, pc}
   12e20:	push	{fp, lr}
   12e24:	mov	fp, sp
   12e28:	sub	sp, sp, #16
   12e2c:	str	r0, [fp, #-4]
   12e30:	str	r1, [sp, #8]
   12e34:	ldr	r0, [fp, #-4]
   12e38:	ldr	r1, [sp, #8]
   12e3c:	add	r0, r0, r1, lsl #2
   12e40:	str	r0, [sp, #4]
   12e44:	ldr	r0, [fp, #-4]
   12e48:	bl	14760 <main@@Base+0x1dc>
   12e4c:	ldr	r1, [sp, #8]
   12e50:	cmp	r0, r1
   12e54:	bls	12e60 <print_enum@@Base+0x514>
   12e58:	b	12e5c <print_enum@@Base+0x510>
   12e5c:	b	12e80 <print_enum@@Base+0x534>
   12e60:	ldr	r0, [pc, #60]	; 12ea4 <print_enum@@Base+0x558>
   12e64:	add	r0, pc, r0
   12e68:	ldr	r1, [pc, #56]	; 12ea8 <print_enum@@Base+0x55c>
   12e6c:	add	r1, pc, r1
   12e70:	ldr	r2, [pc, #52]	; 12eac <print_enum@@Base+0x560>
   12e74:	add	r3, pc, r2
   12e78:	movw	r2, #156	; 0x9c
   12e7c:	bl	109b4 <__assert_fail@plt>
   12e80:	ldr	r0, [sp, #4]
   12e84:	ldr	r1, [sp, #4]
   12e88:	str	r0, [sp]
   12e8c:	mov	r0, r1
   12e90:	bl	14728 <main@@Base+0x1a4>
   12e94:	ldr	r1, [sp]
   12e98:	add	r0, r1, r0
   12e9c:	mov	sp, fp
   12ea0:	pop	{fp, pc}
   12ea4:	andeq	r2, r0, sp, ror #3
   12ea8:	andeq	r1, r0, r8, lsl pc
   12eac:	andeq	r2, r0, r5, lsr #15
   12eb0:	push	{fp, lr}
   12eb4:	mov	fp, sp
   12eb8:	sub	sp, sp, #24
   12ebc:	str	r0, [fp, #-4]
   12ec0:	movw	r0, #0
   12ec4:	strh	r0, [fp, #-10]
   12ec8:	ldr	r0, [fp, #-4]
   12ecc:	movw	r1, #0
   12ed0:	cmp	r0, r1
   12ed4:	beq	12ee0 <print_enum@@Base+0x594>
   12ed8:	b	12edc <print_enum@@Base+0x590>
   12edc:	b	12f00 <print_enum@@Base+0x5b4>
   12ee0:	ldr	r0, [pc, #208]	; 12fb8 <print_enum@@Base+0x66c>
   12ee4:	add	r0, pc, r0
   12ee8:	ldr	r1, [pc, #204]	; 12fbc <print_enum@@Base+0x670>
   12eec:	add	r1, pc, r1
   12ef0:	ldr	r2, [pc, #200]	; 12fc0 <print_enum@@Base+0x674>
   12ef4:	add	r3, pc, r2
   12ef8:	movw	r2, #159	; 0x9f
   12efc:	bl	109b4 <__assert_fail@plt>
   12f00:	mov	r0, #0
   12f04:	strh	r0, [sp, #12]
   12f08:	ldr	r0, [fp, #-4]
   12f0c:	str	r0, [sp, #4]
   12f10:	bl	14640 <main@@Base+0xbc>
   12f14:	ldr	lr, [sp, #4]
   12f18:	sub	r0, lr, r0
   12f1c:	str	r0, [sp, #8]
   12f20:	ldr	r0, [sp, #8]
   12f24:	bl	14664 <main@@Base+0xe0>
   12f28:	ldrh	lr, [sp, #12]
   12f2c:	add	lr, lr, #3
   12f30:	lsl	lr, lr, #1
   12f34:	cmp	r0, lr
   12f38:	bcc	12f54 <print_enum@@Base+0x608>
   12f3c:	ldr	r0, [sp, #8]
   12f40:	ldrh	r1, [sp, #12]
   12f44:	add	r0, r0, r1, lsl #1
   12f48:	add	r0, r0, #4
   12f4c:	bl	14664 <main@@Base+0xe0>
   12f50:	strh	r0, [fp, #-10]
   12f54:	ldrsh	r0, [fp, #-10]
   12f58:	cmp	r0, #0
   12f5c:	beq	12f98 <print_enum@@Base+0x64c>
   12f60:	ldr	r0, [fp, #-4]
   12f64:	ldrh	r1, [fp, #-10]
   12f68:	add	r0, r0, r1
   12f6c:	str	r0, [fp, #-8]
   12f70:	ldr	r0, [fp, #-8]
   12f74:	add	r0, r0, #4
   12f78:	ldr	r1, [fp, #-8]
   12f7c:	str	r0, [sp]
   12f80:	mov	r0, r1
   12f84:	bl	14728 <main@@Base+0x1a4>
   12f88:	ldr	r1, [sp]
   12f8c:	add	r0, r1, r0
   12f90:	mov	sp, fp
   12f94:	pop	{fp, pc}
   12f98:	ldr	r0, [pc, #36]	; 12fc4 <print_enum@@Base+0x678>
   12f9c:	add	r0, pc, r0
   12fa0:	ldr	r1, [pc, #32]	; 12fc8 <print_enum@@Base+0x67c>
   12fa4:	add	r1, pc, r1
   12fa8:	ldr	r2, [pc, #28]	; 12fcc <print_enum@@Base+0x680>
   12fac:	add	r3, pc, r2
   12fb0:	movw	r2, #159	; 0x9f
   12fb4:	bl	109b4 <__assert_fail@plt>
   12fb8:	andeq	r1, r0, sl, ror lr
   12fbc:	muleq	r0, r8, lr
   12fc0:	andeq	r2, r0, ip, ror r7
   12fc4:	andeq	r2, r0, sl, lsr r0
   12fc8:	andeq	r1, r0, r0, ror #27
   12fcc:	andeq	r2, r0, r4, asr #13
   12fd0:	push	{fp, lr}
   12fd4:	mov	fp, sp
   12fd8:	sub	sp, sp, #16
   12fdc:	str	r0, [fp, #-4]
   12fe0:	movw	r0, #0
   12fe4:	strh	r0, [fp, #-6]
   12fe8:	ldr	r0, [fp, #-4]
   12fec:	movw	r1, #0
   12ff0:	cmp	r0, r1
   12ff4:	beq	13000 <print_enum@@Base+0x6b4>
   12ff8:	b	12ffc <print_enum@@Base+0x6b0>
   12ffc:	b	13020 <print_enum@@Base+0x6d4>
   13000:	ldr	r0, [pc, #136]	; 13090 <print_enum@@Base+0x744>
   13004:	add	r0, pc, r0
   13008:	ldr	r1, [pc, #132]	; 13094 <print_enum@@Base+0x748>
   1300c:	add	r1, pc, r1
   13010:	ldr	r2, [pc, #128]	; 13098 <print_enum@@Base+0x74c>
   13014:	add	r3, pc, r2
   13018:	movw	r2, #160	; 0xa0
   1301c:	bl	109b4 <__assert_fail@plt>
   13020:	mov	r0, #1
   13024:	strh	r0, [sp, #8]
   13028:	ldr	r0, [fp, #-4]
   1302c:	str	r0, [sp]
   13030:	bl	14640 <main@@Base+0xbc>
   13034:	ldr	lr, [sp]
   13038:	sub	r0, lr, r0
   1303c:	str	r0, [sp, #4]
   13040:	ldr	r0, [sp, #4]
   13044:	bl	14664 <main@@Base+0xe0>
   13048:	ldrh	lr, [sp, #8]
   1304c:	add	lr, lr, #3
   13050:	lsl	lr, lr, #1
   13054:	cmp	r0, lr
   13058:	bcc	13074 <print_enum@@Base+0x728>
   1305c:	ldr	r0, [sp, #4]
   13060:	ldrh	r1, [sp, #8]
   13064:	add	r0, r0, r1, lsl #1
   13068:	add	r0, r0, #4
   1306c:	bl	14664 <main@@Base+0xe0>
   13070:	strh	r0, [fp, #-6]
   13074:	ldrh	r0, [fp, #-6]
   13078:	cmp	r0, #0
   1307c:	movw	r0, #0
   13080:	movne	r0, #1
   13084:	and	r0, r0, #1
   13088:	mov	sp, fp
   1308c:	pop	{fp, pc}
   13090:	andeq	r1, r0, sl, asr sp
   13094:	andeq	r1, r0, r8, ror sp
   13098:	andeq	r2, r0, r5, lsr #13
   1309c:	push	{fp, lr}
   130a0:	mov	fp, sp
   130a4:	sub	sp, sp, #32
   130a8:	str	r0, [fp, #-4]
   130ac:	movw	r0, #0
   130b0:	strh	r0, [fp, #-6]
   130b4:	ldr	r0, [fp, #-4]
   130b8:	movw	r1, #0
   130bc:	cmp	r0, r1
   130c0:	beq	130cc <print_enum@@Base+0x780>
   130c4:	b	130c8 <print_enum@@Base+0x77c>
   130c8:	b	130ec <print_enum@@Base+0x7a0>
   130cc:	ldr	r0, [pc, #196]	; 13198 <print_enum@@Base+0x84c>
   130d0:	add	r0, pc, r0
   130d4:	ldr	r1, [pc, #192]	; 1319c <print_enum@@Base+0x850>
   130d8:	add	r1, pc, r1
   130dc:	ldr	r2, [pc, #188]	; 131a0 <print_enum@@Base+0x854>
   130e0:	add	r3, pc, r2
   130e4:	movw	r2, #160	; 0xa0
   130e8:	bl	109b4 <__assert_fail@plt>
   130ec:	mov	r0, #1
   130f0:	strh	r0, [fp, #-8]
   130f4:	ldr	r0, [fp, #-4]
   130f8:	str	r0, [sp, #16]
   130fc:	bl	14640 <main@@Base+0xbc>
   13100:	ldr	lr, [sp, #16]
   13104:	sub	r0, lr, r0
   13108:	str	r0, [fp, #-12]
   1310c:	ldr	r0, [fp, #-12]
   13110:	bl	14664 <main@@Base+0xe0>
   13114:	ldrh	lr, [fp, #-8]
   13118:	add	lr, lr, #3
   1311c:	lsl	lr, lr, #1
   13120:	cmp	r0, lr
   13124:	bcc	13140 <print_enum@@Base+0x7f4>
   13128:	ldr	r0, [fp, #-12]
   1312c:	ldrh	r1, [fp, #-8]
   13130:	add	r0, r0, r1, lsl #1
   13134:	add	r0, r0, #4
   13138:	bl	14664 <main@@Base+0xe0>
   1313c:	strh	r0, [fp, #-6]
   13140:	ldrh	r0, [fp, #-6]
   13144:	cmp	r0, #0
   13148:	beq	13168 <print_enum@@Base+0x81c>
   1314c:	ldr	r0, [fp, #-4]
   13150:	ldrh	r1, [fp, #-6]
   13154:	add	r0, r0, r1
   13158:	bl	147ec <main@@Base+0x268>
   1315c:	str	r0, [sp, #12]
   13160:	str	r1, [sp, #8]
   13164:	b	1317c <print_enum@@Base+0x830>
   13168:	mov	r0, #0
   1316c:	mov	r1, r0
   13170:	str	r1, [sp, #12]
   13174:	str	r0, [sp, #8]
   13178:	b	1317c <print_enum@@Base+0x830>
   1317c:	ldr	r0, [sp, #8]
   13180:	ldr	r1, [sp, #12]
   13184:	str	r0, [sp, #4]
   13188:	mov	r0, r1
   1318c:	ldr	r1, [sp, #4]
   13190:	mov	sp, fp
   13194:	pop	{fp, pc}
   13198:	andeq	r1, r0, lr, lsl #25
   1319c:	andeq	r1, r0, ip, lsr #25
   131a0:	andeq	r2, r0, sp, lsl r6
   131a4:	push	{fp, lr}
   131a8:	mov	fp, sp
   131ac:	sub	sp, sp, #16
   131b0:	str	r0, [fp, #-4]
   131b4:	movw	r0, #0
   131b8:	strh	r0, [fp, #-6]
   131bc:	ldr	r0, [fp, #-4]
   131c0:	movw	r1, #0
   131c4:	cmp	r0, r1
   131c8:	beq	131d4 <print_enum@@Base+0x888>
   131cc:	b	131d0 <print_enum@@Base+0x884>
   131d0:	b	131f4 <print_enum@@Base+0x8a8>
   131d4:	ldr	r0, [pc, #136]	; 13264 <print_enum@@Base+0x918>
   131d8:	add	r0, pc, r0
   131dc:	ldr	r1, [pc, #132]	; 13268 <print_enum@@Base+0x91c>
   131e0:	add	r1, pc, r1
   131e4:	ldr	r2, [pc, #128]	; 1326c <print_enum@@Base+0x920>
   131e8:	add	r3, pc, r2
   131ec:	movw	r2, #167	; 0xa7
   131f0:	bl	109b4 <__assert_fail@plt>
   131f4:	mov	r0, #2
   131f8:	strh	r0, [sp, #8]
   131fc:	ldr	r0, [fp, #-4]
   13200:	str	r0, [sp]
   13204:	bl	14640 <main@@Base+0xbc>
   13208:	ldr	lr, [sp]
   1320c:	sub	r0, lr, r0
   13210:	str	r0, [sp, #4]
   13214:	ldr	r0, [sp, #4]
   13218:	bl	14664 <main@@Base+0xe0>
   1321c:	ldrh	lr, [sp, #8]
   13220:	add	lr, lr, #3
   13224:	lsl	lr, lr, #1
   13228:	cmp	r0, lr
   1322c:	bcc	13248 <print_enum@@Base+0x8fc>
   13230:	ldr	r0, [sp, #4]
   13234:	ldrh	r1, [sp, #8]
   13238:	add	r0, r0, r1, lsl #1
   1323c:	add	r0, r0, #4
   13240:	bl	14664 <main@@Base+0xe0>
   13244:	strh	r0, [fp, #-6]
   13248:	ldrh	r0, [fp, #-6]
   1324c:	cmp	r0, #0
   13250:	movw	r0, #0
   13254:	movne	r0, #1
   13258:	and	r0, r0, #1
   1325c:	mov	sp, fp
   13260:	pop	{fp, pc}
   13264:	andeq	r1, r0, r6, lsl #23
   13268:	andeq	r1, r0, r4, lsr #23
   1326c:	andeq	r2, r0, r2, asr r5
   13270:	push	{fp, lr}
   13274:	mov	fp, sp
   13278:	sub	sp, sp, #32
   1327c:	str	r0, [fp, #-8]
   13280:	movw	r0, #0
   13284:	strh	r0, [fp, #-14]
   13288:	ldr	r0, [fp, #-8]
   1328c:	movw	r1, #0
   13290:	cmp	r0, r1
   13294:	beq	132a0 <print_enum@@Base+0x954>
   13298:	b	1329c <print_enum@@Base+0x950>
   1329c:	b	132c0 <print_enum@@Base+0x974>
   132a0:	ldr	r0, [pc, #192]	; 13368 <print_enum@@Base+0xa1c>
   132a4:	add	r0, pc, r0
   132a8:	ldr	r1, [pc, #188]	; 1336c <print_enum@@Base+0xa20>
   132ac:	add	r1, pc, r1
   132b0:	ldr	r2, [pc, #184]	; 13370 <print_enum@@Base+0xa24>
   132b4:	add	r3, pc, r2
   132b8:	movw	r2, #167	; 0xa7
   132bc:	bl	109b4 <__assert_fail@plt>
   132c0:	mov	r0, #2
   132c4:	strh	r0, [sp, #16]
   132c8:	ldr	r0, [fp, #-8]
   132cc:	str	r0, [sp, #8]
   132d0:	bl	14640 <main@@Base+0xbc>
   132d4:	ldr	lr, [sp, #8]
   132d8:	sub	r0, lr, r0
   132dc:	str	r0, [sp, #12]
   132e0:	ldr	r0, [sp, #12]
   132e4:	bl	14664 <main@@Base+0xe0>
   132e8:	ldrh	lr, [sp, #16]
   132ec:	add	lr, lr, #3
   132f0:	lsl	lr, lr, #1
   132f4:	cmp	r0, lr
   132f8:	bcc	13314 <print_enum@@Base+0x9c8>
   132fc:	ldr	r0, [sp, #12]
   13300:	ldrh	r1, [sp, #16]
   13304:	add	r0, r0, r1, lsl #1
   13308:	add	r0, r0, #4
   1330c:	bl	14664 <main@@Base+0xe0>
   13310:	strh	r0, [fp, #-14]
   13314:	ldrsh	r0, [fp, #-14]
   13318:	cmp	r0, #0
   1331c:	beq	13354 <print_enum@@Base+0xa08>
   13320:	ldr	r0, [fp, #-8]
   13324:	ldrh	r1, [fp, #-14]
   13328:	add	r0, r0, r1
   1332c:	str	r0, [fp, #-12]
   13330:	ldr	r0, [fp, #-12]
   13334:	ldr	r1, [fp, #-12]
   13338:	str	r0, [sp, #4]
   1333c:	mov	r0, r1
   13340:	bl	14728 <main@@Base+0x1a4>
   13344:	ldr	r1, [sp, #4]
   13348:	add	r0, r1, r0
   1334c:	str	r0, [fp, #-4]
   13350:	b	1335c <print_enum@@Base+0xa10>
   13354:	movw	r0, #0
   13358:	str	r0, [fp, #-4]
   1335c:	ldr	r0, [fp, #-4]
   13360:	mov	sp, fp
   13364:	pop	{fp, pc}
   13368:			; <UNDEFINED> instruction: 0x00001aba
   1336c:	ldrdeq	r1, [r0], -r8
   13370:	andeq	r2, r0, fp, asr #9
   13374:	push	{fp, lr}
   13378:	mov	fp, sp
   1337c:	sub	sp, sp, #16
   13380:	str	r0, [fp, #-4]
   13384:	movw	r0, #0
   13388:	strh	r0, [fp, #-6]
   1338c:	ldr	r0, [fp, #-4]
   13390:	movw	r1, #0
   13394:	cmp	r0, r1
   13398:	beq	133a4 <print_enum@@Base+0xa58>
   1339c:	b	133a0 <print_enum@@Base+0xa54>
   133a0:	b	133c4 <print_enum@@Base+0xa78>
   133a4:	ldr	r0, [pc, #136]	; 13434 <print_enum@@Base+0xae8>
   133a8:	add	r0, pc, r0
   133ac:	ldr	r1, [pc, #132]	; 13438 <print_enum@@Base+0xaec>
   133b0:	add	r1, pc, r1
   133b4:	ldr	r2, [pc, #128]	; 1343c <print_enum@@Base+0xaf0>
   133b8:	add	r3, pc, r2
   133bc:	movw	r2, #184	; 0xb8
   133c0:	bl	109b4 <__assert_fail@plt>
   133c4:	mov	r0, #2
   133c8:	strh	r0, [sp, #8]
   133cc:	ldr	r0, [fp, #-4]
   133d0:	str	r0, [sp]
   133d4:	bl	14640 <main@@Base+0xbc>
   133d8:	ldr	lr, [sp]
   133dc:	sub	r0, lr, r0
   133e0:	str	r0, [sp, #4]
   133e4:	ldr	r0, [sp, #4]
   133e8:	bl	14664 <main@@Base+0xe0>
   133ec:	ldrh	lr, [sp, #8]
   133f0:	add	lr, lr, #3
   133f4:	lsl	lr, lr, #1
   133f8:	cmp	r0, lr
   133fc:	bcc	13418 <print_enum@@Base+0xacc>
   13400:	ldr	r0, [sp, #4]
   13404:	ldrh	r1, [sp, #8]
   13408:	add	r0, r0, r1, lsl #1
   1340c:	add	r0, r0, #4
   13410:	bl	14664 <main@@Base+0xe0>
   13414:	strh	r0, [fp, #-6]
   13418:	ldrh	r0, [fp, #-6]
   1341c:	cmp	r0, #0
   13420:	movw	r0, #0
   13424:	movne	r0, #1
   13428:	and	r0, r0, #1
   1342c:	mov	sp, fp
   13430:	pop	{fp, pc}
   13434:			; <UNDEFINED> instruction: 0x000019b6
   13438:	ldrdeq	r1, [r0], -r4
   1343c:	andeq	r2, r0, r7, lsl r4
   13440:	push	{fp, lr}
   13444:	mov	fp, sp
   13448:	sub	sp, sp, #24
   1344c:	str	r0, [fp, #-4]
   13450:	movw	r0, #0
   13454:	strh	r0, [fp, #-6]
   13458:	ldr	r0, [fp, #-4]
   1345c:	movw	r1, #0
   13460:	cmp	r0, r1
   13464:	beq	13470 <print_enum@@Base+0xb24>
   13468:	b	1346c <print_enum@@Base+0xb20>
   1346c:	b	13490 <print_enum@@Base+0xb44>
   13470:	ldr	r0, [pc, #176]	; 13528 <print_enum@@Base+0xbdc>
   13474:	add	r0, pc, r0
   13478:	ldr	r1, [pc, #172]	; 1352c <print_enum@@Base+0xbe0>
   1347c:	add	r1, pc, r1
   13480:	ldr	r2, [pc, #168]	; 13530 <print_enum@@Base+0xbe4>
   13484:	add	r3, pc, r2
   13488:	movw	r2, #184	; 0xb8
   1348c:	bl	109b4 <__assert_fail@plt>
   13490:	mov	r0, #2
   13494:	strh	r0, [fp, #-8]
   13498:	ldr	r0, [fp, #-4]
   1349c:	str	r0, [sp, #8]
   134a0:	bl	14640 <main@@Base+0xbc>
   134a4:	ldr	lr, [sp, #8]
   134a8:	sub	r0, lr, r0
   134ac:	str	r0, [sp, #12]
   134b0:	ldr	r0, [sp, #12]
   134b4:	bl	14664 <main@@Base+0xe0>
   134b8:	ldrh	lr, [fp, #-8]
   134bc:	add	lr, lr, #3
   134c0:	lsl	lr, lr, #1
   134c4:	cmp	r0, lr
   134c8:	bcc	134e4 <print_enum@@Base+0xb98>
   134cc:	ldr	r0, [sp, #12]
   134d0:	ldrh	r1, [fp, #-8]
   134d4:	add	r0, r0, r1, lsl #1
   134d8:	add	r0, r0, #4
   134dc:	bl	14664 <main@@Base+0xe0>
   134e0:	strh	r0, [fp, #-6]
   134e4:	ldrh	r0, [fp, #-6]
   134e8:	cmp	r0, #0
   134ec:	beq	1350c <print_enum@@Base+0xbc0>
   134f0:	ldr	r0, [fp, #-4]
   134f4:	ldrh	r1, [fp, #-6]
   134f8:	add	r0, r0, r1
   134fc:	bl	1487c <main@@Base+0x2f8>
   13500:	and	r0, r0, #255	; 0xff
   13504:	str	r0, [sp, #4]
   13508:	b	13518 <print_enum@@Base+0xbcc>
   1350c:	movw	r0, #0
   13510:	str	r0, [sp, #4]
   13514:	b	13518 <print_enum@@Base+0xbcc>
   13518:	ldr	r0, [sp, #4]
   1351c:	and	r0, r0, #255	; 0xff
   13520:	mov	sp, fp
   13524:	pop	{fp, pc}
   13528:	andeq	r1, r0, sl, ror #17
   1352c:	andeq	r1, r0, r8, lsl #18
   13530:	andeq	r2, r0, ip, lsl #7
   13534:	push	{fp, lr}
   13538:	mov	fp, sp
   1353c:	sub	sp, sp, #24
   13540:	str	r0, [fp, #-4]
   13544:	movw	r0, #0
   13548:	strh	r0, [fp, #-10]
   1354c:	ldr	r0, [fp, #-4]
   13550:	movw	r1, #0
   13554:	cmp	r0, r1
   13558:	beq	13564 <print_enum@@Base+0xc18>
   1355c:	b	13560 <print_enum@@Base+0xc14>
   13560:	b	13584 <print_enum@@Base+0xc38>
   13564:	ldr	r0, [pc, #204]	; 13638 <print_enum@@Base+0xcec>
   13568:	add	r0, pc, r0
   1356c:	ldr	r1, [pc, #200]	; 1363c <print_enum@@Base+0xcf0>
   13570:	add	r1, pc, r1
   13574:	ldr	r2, [pc, #196]	; 13640 <print_enum@@Base+0xcf4>
   13578:	add	r3, pc, r2
   1357c:	movw	r2, #185	; 0xb9
   13580:	bl	109b4 <__assert_fail@plt>
   13584:	mov	r0, #3
   13588:	strh	r0, [sp, #12]
   1358c:	ldr	r0, [fp, #-4]
   13590:	str	r0, [sp, #4]
   13594:	bl	14640 <main@@Base+0xbc>
   13598:	ldr	lr, [sp, #4]
   1359c:	sub	r0, lr, r0
   135a0:	str	r0, [sp, #8]
   135a4:	ldr	r0, [sp, #8]
   135a8:	bl	14664 <main@@Base+0xe0>
   135ac:	ldrh	lr, [sp, #12]
   135b0:	add	lr, lr, #3
   135b4:	lsl	lr, lr, #1
   135b8:	cmp	r0, lr
   135bc:	bcc	135d8 <print_enum@@Base+0xc8c>
   135c0:	ldr	r0, [sp, #8]
   135c4:	ldrh	r1, [sp, #12]
   135c8:	add	r0, r0, r1, lsl #1
   135cc:	add	r0, r0, #4
   135d0:	bl	14664 <main@@Base+0xe0>
   135d4:	strh	r0, [fp, #-10]
   135d8:	ldrsh	r0, [fp, #-10]
   135dc:	cmp	r0, #0
   135e0:	beq	13618 <print_enum@@Base+0xccc>
   135e4:	ldr	r0, [fp, #-4]
   135e8:	ldrh	r1, [fp, #-10]
   135ec:	add	r0, r0, r1
   135f0:	str	r0, [fp, #-8]
   135f4:	ldr	r0, [fp, #-8]
   135f8:	ldr	r1, [fp, #-8]
   135fc:	str	r0, [sp]
   13600:	mov	r0, r1
   13604:	bl	14728 <main@@Base+0x1a4>
   13608:	ldr	r1, [sp]
   1360c:	add	r0, r1, r0
   13610:	mov	sp, fp
   13614:	pop	{fp, pc}
   13618:	ldr	r0, [pc, #36]	; 13644 <print_enum@@Base+0xcf8>
   1361c:	add	r0, pc, r0
   13620:	ldr	r1, [pc, #32]	; 13648 <print_enum@@Base+0xcfc>
   13624:	add	r1, pc, r1
   13628:	ldr	r2, [pc, #28]	; 1364c <print_enum@@Base+0xd00>
   1362c:	add	r3, pc, r2
   13630:	movw	r2, #185	; 0xb9
   13634:	bl	109b4 <__assert_fail@plt>
   13638:	strdeq	r1, [r0], -r6
   1363c:	andeq	r1, r0, r4, lsl r8
   13640:	ldrdeq	r2, [r0], -sp
   13644:			; <UNDEFINED> instruction: 0x000019ba
   13648:	andeq	r1, r0, r0, ror #14
   1364c:	andeq	r2, r0, r9, lsr #4

00013650 <print_schema@@Base>:
   13650:	push	{fp, lr}
   13654:	mov	fp, sp
   13658:	sub	sp, sp, #80	; 0x50
   1365c:	str	r0, [fp, #-4]
   13660:	ldr	r0, [fp, #-4]
   13664:	bl	13880 <print_schema@@Base+0x230>
   13668:	ldr	lr, [pc, #488]	; 13858 <print_schema@@Base+0x208>
   1366c:	add	lr, pc, lr
   13670:	str	r0, [fp, #-8]
   13674:	mov	r0, lr
   13678:	bl	10900 <printf@plt>
   1367c:	ldr	lr, [pc, #464]	; 13854 <print_schema@@Base+0x204>
   13680:	add	lr, pc, lr
   13684:	str	r0, [fp, #-20]	; 0xffffffec
   13688:	mov	r0, lr
   1368c:	bl	10900 <printf@plt>
   13690:	movw	lr, #0
   13694:	str	lr, [fp, #-16]
   13698:	str	r0, [fp, #-24]	; 0xffffffe8
   1369c:	ldr	r0, [fp, #-16]
   136a0:	ldr	r1, [fp, #-8]
   136a4:	str	r0, [fp, #-28]	; 0xffffffe4
   136a8:	mov	r0, r1
   136ac:	bl	139a0 <print_schema@@Base+0x350>
   136b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136b4:	cmp	r1, r0
   136b8:	bcs	136f8 <print_schema@@Base+0xa8>
   136bc:	ldr	r0, [fp, #-16]
   136c0:	cmp	r0, #0
   136c4:	bls	136d8 <print_schema@@Base+0x88>
   136c8:	ldr	r0, [pc, #428]	; 1387c <print_schema@@Base+0x22c>
   136cc:	add	r0, pc, r0
   136d0:	bl	10900 <printf@plt>
   136d4:	str	r0, [fp, #-32]	; 0xffffffe0
   136d8:	ldr	r0, [fp, #-8]
   136dc:	ldr	r1, [fp, #-16]
   136e0:	bl	139f0 <print_schema@@Base+0x3a0>
   136e4:	bl	11250 <print_object@@Base>
   136e8:	ldr	r0, [fp, #-16]
   136ec:	add	r0, r0, #1
   136f0:	str	r0, [fp, #-16]
   136f4:	b	1369c <print_schema@@Base+0x4c>
   136f8:	ldr	r0, [pc, #352]	; 13860 <print_schema@@Base+0x210>
   136fc:	add	r0, pc, r0
   13700:	bl	10900 <printf@plt>
   13704:	ldr	lr, [fp, #-4]
   13708:	str	r0, [fp, #-36]	; 0xffffffdc
   1370c:	mov	r0, lr
   13710:	bl	13a80 <print_schema@@Base+0x430>
   13714:	ldr	lr, [pc, #320]	; 1385c <print_schema@@Base+0x20c>
   13718:	add	lr, pc, lr
   1371c:	str	r0, [fp, #-12]
   13720:	mov	r0, lr
   13724:	bl	10900 <printf@plt>
   13728:	movw	lr, #0
   1372c:	str	lr, [fp, #-16]
   13730:	str	r0, [sp, #40]	; 0x28
   13734:	ldr	r0, [fp, #-16]
   13738:	ldr	r1, [fp, #-12]
   1373c:	str	r0, [sp, #36]	; 0x24
   13740:	mov	r0, r1
   13744:	bl	12dd0 <print_enum@@Base+0x484>
   13748:	ldr	r1, [sp, #36]	; 0x24
   1374c:	cmp	r1, r0
   13750:	bcs	13790 <print_schema@@Base+0x140>
   13754:	ldr	r0, [fp, #-16]
   13758:	cmp	r0, #0
   1375c:	bls	13770 <print_schema@@Base+0x120>
   13760:	ldr	r0, [pc, #272]	; 13878 <print_schema@@Base+0x228>
   13764:	add	r0, pc, r0
   13768:	bl	10900 <printf@plt>
   1376c:	str	r0, [sp, #32]
   13770:	ldr	r0, [fp, #-12]
   13774:	ldr	r1, [fp, #-16]
   13778:	bl	13ba0 <print_schema@@Base+0x550>
   1377c:	bl	1294c <print_enum@@Base>
   13780:	ldr	r0, [fp, #-16]
   13784:	add	r0, r0, #1
   13788:	str	r0, [fp, #-16]
   1378c:	b	13734 <print_schema@@Base+0xe4>
   13790:	ldr	r0, [pc, #204]	; 13864 <print_schema@@Base+0x214>
   13794:	add	r0, pc, r0
   13798:	bl	10900 <printf@plt>
   1379c:	ldr	lr, [fp, #-4]
   137a0:	str	r0, [sp, #28]
   137a4:	mov	r0, lr
   137a8:	bl	13c30 <print_schema@@Base+0x5e0>
   137ac:	cmp	r0, #0
   137b0:	beq	137d8 <print_schema@@Base+0x188>
   137b4:	ldr	r0, [fp, #-4]
   137b8:	bl	13cfc <print_schema@@Base+0x6ac>
   137bc:	ldr	lr, [pc, #164]	; 13868 <print_schema@@Base+0x218>
   137c0:	add	lr, pc, lr
   137c4:	str	r0, [sp, #24]
   137c8:	mov	r0, lr
   137cc:	ldr	r1, [sp, #24]
   137d0:	bl	10900 <printf@plt>
   137d4:	str	r0, [sp, #20]
   137d8:	ldr	r0, [fp, #-4]
   137dc:	bl	13e04 <print_schema@@Base+0x7b4>
   137e0:	cmp	r0, #0
   137e4:	beq	1380c <print_schema@@Base+0x1bc>
   137e8:	ldr	r0, [fp, #-4]
   137ec:	bl	13ed0 <print_schema@@Base+0x880>
   137f0:	ldr	lr, [pc, #116]	; 1386c <print_schema@@Base+0x21c>
   137f4:	add	lr, pc, lr
   137f8:	str	r0, [sp, #16]
   137fc:	mov	r0, lr
   13800:	ldr	r1, [sp, #16]
   13804:	bl	10900 <printf@plt>
   13808:	str	r0, [sp, #12]
   1380c:	ldr	r0, [fp, #-4]
   13810:	bl	13fd8 <print_schema@@Base+0x988>
   13814:	cmp	r0, #0
   13818:	beq	1383c <print_schema@@Base+0x1ec>
   1381c:	ldr	r0, [pc, #76]	; 13870 <print_schema@@Base+0x220>
   13820:	add	r0, pc, r0
   13824:	bl	10900 <printf@plt>
   13828:	ldr	lr, [fp, #-4]
   1382c:	str	r0, [sp, #8]
   13830:	mov	r0, lr
   13834:	bl	140a4 <print_schema@@Base+0xa54>
   13838:	bl	11250 <print_object@@Base>
   1383c:	ldr	r0, [pc, #48]	; 13874 <print_schema@@Base+0x224>
   13840:	add	r0, pc, r0
   13844:	bl	10900 <printf@plt>
   13848:	str	r0, [sp, #4]
   1384c:	mov	sp, fp
   13850:	pop	{fp, pc}
   13854:	andeq	r1, r0, ip, asr #9
   13858:	andeq	r1, r0, ip, lsr #7
   1385c:	andeq	r1, r0, r0, asr #8
   13860:	ldrdeq	r1, [r0], -r8
   13864:	andeq	r1, r0, r0, asr #6
   13868:	andeq	r1, r0, r3, lsr #7
   1386c:	andeq	r1, r0, r2, lsl #7
   13870:	andeq	r1, r0, r7, ror #6
   13874:	andeq	r1, r0, r6, asr r3
   13878:			; <UNDEFINED> instruction: 0x000012b6
   1387c:	andeq	r1, r0, lr, asr #6
   13880:	push	{fp, lr}
   13884:	mov	fp, sp
   13888:	sub	sp, sp, #24
   1388c:	str	r0, [fp, #-4]
   13890:	movw	r0, #0
   13894:	strh	r0, [fp, #-10]
   13898:	ldr	r0, [fp, #-4]
   1389c:	movw	r1, #0
   138a0:	cmp	r0, r1
   138a4:	beq	138b0 <print_schema@@Base+0x260>
   138a8:	b	138ac <print_schema@@Base+0x25c>
   138ac:	b	138d0 <print_schema@@Base+0x280>
   138b0:	ldr	r0, [pc, #208]	; 13988 <print_schema@@Base+0x338>
   138b4:	add	r0, pc, r0
   138b8:	ldr	r1, [pc, #204]	; 1398c <print_schema@@Base+0x33c>
   138bc:	add	r1, pc, r1
   138c0:	ldr	r2, [pc, #200]	; 13990 <print_schema@@Base+0x340>
   138c4:	add	r3, pc, r2
   138c8:	movw	r2, #237	; 0xed
   138cc:	bl	109b4 <__assert_fail@plt>
   138d0:	mov	r0, #0
   138d4:	strh	r0, [sp, #12]
   138d8:	ldr	r0, [fp, #-4]
   138dc:	str	r0, [sp, #4]
   138e0:	bl	14640 <main@@Base+0xbc>
   138e4:	ldr	lr, [sp, #4]
   138e8:	sub	r0, lr, r0
   138ec:	str	r0, [sp, #8]
   138f0:	ldr	r0, [sp, #8]
   138f4:	bl	14664 <main@@Base+0xe0>
   138f8:	ldrh	lr, [sp, #12]
   138fc:	add	lr, lr, #3
   13900:	lsl	lr, lr, #1
   13904:	cmp	r0, lr
   13908:	bcc	13924 <print_schema@@Base+0x2d4>
   1390c:	ldr	r0, [sp, #8]
   13910:	ldrh	r1, [sp, #12]
   13914:	add	r0, r0, r1, lsl #1
   13918:	add	r0, r0, #4
   1391c:	bl	14664 <main@@Base+0xe0>
   13920:	strh	r0, [fp, #-10]
   13924:	ldrsh	r0, [fp, #-10]
   13928:	cmp	r0, #0
   1392c:	beq	13968 <print_schema@@Base+0x318>
   13930:	ldr	r0, [fp, #-4]
   13934:	ldrh	r1, [fp, #-10]
   13938:	add	r0, r0, r1
   1393c:	str	r0, [fp, #-8]
   13940:	ldr	r0, [fp, #-8]
   13944:	add	r0, r0, #4
   13948:	ldr	r1, [fp, #-8]
   1394c:	str	r0, [sp]
   13950:	mov	r0, r1
   13954:	bl	14728 <main@@Base+0x1a4>
   13958:	ldr	r1, [sp]
   1395c:	add	r0, r1, r0
   13960:	mov	sp, fp
   13964:	pop	{fp, pc}
   13968:	ldr	r0, [pc, #36]	; 13994 <print_schema@@Base+0x344>
   1396c:	add	r0, pc, r0
   13970:	ldr	r1, [pc, #32]	; 13998 <print_schema@@Base+0x348>
   13974:	add	r1, pc, r1
   13978:	ldr	r2, [pc, #28]	; 1399c <print_schema@@Base+0x34c>
   1397c:	add	r3, pc, r2
   13980:	movw	r2, #237	; 0xed
   13984:	bl	109b4 <__assert_fail@plt>
   13988:	andeq	r1, r0, sl, lsr #9
   1398c:	andeq	r1, r0, r8, asr #9
   13990:	andeq	r1, r0, r2, ror #31
   13994:	andeq	r1, r0, sl, ror #12
   13998:	andeq	r1, r0, r0, lsl r4
   1399c:	andeq	r1, r0, sl, lsr #30
   139a0:	push	{fp, lr}
   139a4:	mov	fp, sp
   139a8:	sub	sp, sp, #8
   139ac:	str	r0, [sp, #4]
   139b0:	ldr	r0, [sp, #4]
   139b4:	movw	r1, #0
   139b8:	cmp	r0, r1
   139bc:	beq	139d8 <print_schema@@Base+0x388>
   139c0:	ldr	r0, [sp, #4]
   139c4:	mvn	r1, #3
   139c8:	add	r0, r0, r1
   139cc:	bl	14728 <main@@Base+0x1a4>
   139d0:	str	r0, [sp]
   139d4:	b	139e4 <print_schema@@Base+0x394>
   139d8:	movw	r0, #0
   139dc:	str	r0, [sp]
   139e0:	b	139e4 <print_schema@@Base+0x394>
   139e4:	ldr	r0, [sp]
   139e8:	mov	sp, fp
   139ec:	pop	{fp, pc}
   139f0:	push	{fp, lr}
   139f4:	mov	fp, sp
   139f8:	sub	sp, sp, #16
   139fc:	str	r0, [fp, #-4]
   13a00:	str	r1, [sp, #8]
   13a04:	ldr	r0, [fp, #-4]
   13a08:	ldr	r1, [sp, #8]
   13a0c:	add	r0, r0, r1, lsl #2
   13a10:	str	r0, [sp, #4]
   13a14:	ldr	r0, [fp, #-4]
   13a18:	bl	14760 <main@@Base+0x1dc>
   13a1c:	ldr	r1, [sp, #8]
   13a20:	cmp	r0, r1
   13a24:	bls	13a30 <print_schema@@Base+0x3e0>
   13a28:	b	13a2c <print_schema@@Base+0x3dc>
   13a2c:	b	13a50 <print_schema@@Base+0x400>
   13a30:	ldr	r0, [pc, #60]	; 13a74 <print_schema@@Base+0x424>
   13a34:	add	r0, pc, r0
   13a38:	ldr	r1, [pc, #56]	; 13a78 <print_schema@@Base+0x428>
   13a3c:	add	r1, pc, r1
   13a40:	ldr	r2, [pc, #52]	; 13a7c <print_schema@@Base+0x42c>
   13a44:	add	r3, pc, r2
   13a48:	movw	r2, #215	; 0xd7
   13a4c:	bl	109b4 <__assert_fail@plt>
   13a50:	ldr	r0, [sp, #4]
   13a54:	ldr	r1, [sp, #4]
   13a58:	str	r0, [sp]
   13a5c:	mov	r0, r1
   13a60:	bl	14728 <main@@Base+0x1a4>
   13a64:	ldr	r1, [sp]
   13a68:	add	r0, r1, r0
   13a6c:	mov	sp, fp
   13a70:	pop	{fp, pc}
   13a74:	andeq	r1, r0, sp, lsl r6
   13a78:	andeq	r1, r0, r8, asr #6
   13a7c:	andeq	r1, r0, pc, lsr #29
   13a80:	push	{fp, lr}
   13a84:	mov	fp, sp
   13a88:	sub	sp, sp, #24
   13a8c:	str	r0, [fp, #-4]
   13a90:	movw	r0, #0
   13a94:	strh	r0, [fp, #-10]
   13a98:	ldr	r0, [fp, #-4]
   13a9c:	movw	r1, #0
   13aa0:	cmp	r0, r1
   13aa4:	beq	13ab0 <print_schema@@Base+0x460>
   13aa8:	b	13aac <print_schema@@Base+0x45c>
   13aac:	b	13ad0 <print_schema@@Base+0x480>
   13ab0:	ldr	r0, [pc, #208]	; 13b88 <print_schema@@Base+0x538>
   13ab4:	add	r0, pc, r0
   13ab8:	ldr	r1, [pc, #204]	; 13b8c <print_schema@@Base+0x53c>
   13abc:	add	r1, pc, r1
   13ac0:	ldr	r2, [pc, #200]	; 13b90 <print_schema@@Base+0x540>
   13ac4:	add	r3, pc, r2
   13ac8:	movw	r2, #238	; 0xee
   13acc:	bl	109b4 <__assert_fail@plt>
   13ad0:	mov	r0, #1
   13ad4:	strh	r0, [sp, #12]
   13ad8:	ldr	r0, [fp, #-4]
   13adc:	str	r0, [sp, #4]
   13ae0:	bl	14640 <main@@Base+0xbc>
   13ae4:	ldr	lr, [sp, #4]
   13ae8:	sub	r0, lr, r0
   13aec:	str	r0, [sp, #8]
   13af0:	ldr	r0, [sp, #8]
   13af4:	bl	14664 <main@@Base+0xe0>
   13af8:	ldrh	lr, [sp, #12]
   13afc:	add	lr, lr, #3
   13b00:	lsl	lr, lr, #1
   13b04:	cmp	r0, lr
   13b08:	bcc	13b24 <print_schema@@Base+0x4d4>
   13b0c:	ldr	r0, [sp, #8]
   13b10:	ldrh	r1, [sp, #12]
   13b14:	add	r0, r0, r1, lsl #1
   13b18:	add	r0, r0, #4
   13b1c:	bl	14664 <main@@Base+0xe0>
   13b20:	strh	r0, [fp, #-10]
   13b24:	ldrsh	r0, [fp, #-10]
   13b28:	cmp	r0, #0
   13b2c:	beq	13b68 <print_schema@@Base+0x518>
   13b30:	ldr	r0, [fp, #-4]
   13b34:	ldrh	r1, [fp, #-10]
   13b38:	add	r0, r0, r1
   13b3c:	str	r0, [fp, #-8]
   13b40:	ldr	r0, [fp, #-8]
   13b44:	add	r0, r0, #4
   13b48:	ldr	r1, [fp, #-8]
   13b4c:	str	r0, [sp]
   13b50:	mov	r0, r1
   13b54:	bl	14728 <main@@Base+0x1a4>
   13b58:	ldr	r1, [sp]
   13b5c:	add	r0, r1, r0
   13b60:	mov	sp, fp
   13b64:	pop	{fp, pc}
   13b68:	ldr	r0, [pc, #36]	; 13b94 <print_schema@@Base+0x544>
   13b6c:	add	r0, pc, r0
   13b70:	ldr	r1, [pc, #32]	; 13b98 <print_schema@@Base+0x548>
   13b74:	add	r1, pc, r1
   13b78:	ldr	r2, [pc, #28]	; 13b9c <print_schema@@Base+0x54c>
   13b7c:	add	r3, pc, r2
   13b80:	movw	r2, #238	; 0xee
   13b84:	bl	109b4 <__assert_fail@plt>
   13b88:	andeq	r1, r0, sl, lsr #5
   13b8c:	andeq	r1, r0, r8, asr #5
   13b90:	andeq	r1, r0, r3, lsl #29
   13b94:	andeq	r1, r0, sl, ror #8
   13b98:	andeq	r1, r0, r0, lsl r2
   13b9c:	andeq	r1, r0, fp, asr #27
   13ba0:	push	{fp, lr}
   13ba4:	mov	fp, sp
   13ba8:	sub	sp, sp, #16
   13bac:	str	r0, [fp, #-4]
   13bb0:	str	r1, [sp, #8]
   13bb4:	ldr	r0, [fp, #-4]
   13bb8:	ldr	r1, [sp, #8]
   13bbc:	add	r0, r0, r1, lsl #2
   13bc0:	str	r0, [sp, #4]
   13bc4:	ldr	r0, [fp, #-4]
   13bc8:	bl	14760 <main@@Base+0x1dc>
   13bcc:	ldr	r1, [sp, #8]
   13bd0:	cmp	r0, r1
   13bd4:	bls	13be0 <print_schema@@Base+0x590>
   13bd8:	b	13bdc <print_schema@@Base+0x58c>
   13bdc:	b	13c00 <print_schema@@Base+0x5b0>
   13be0:	ldr	r0, [pc, #60]	; 13c24 <print_schema@@Base+0x5d4>
   13be4:	add	r0, pc, r0
   13be8:	ldr	r1, [pc, #56]	; 13c28 <print_schema@@Base+0x5d8>
   13bec:	add	r1, pc, r1
   13bf0:	ldr	r2, [pc, #52]	; 13c2c <print_schema@@Base+0x5dc>
   13bf4:	add	r3, pc, r2
   13bf8:	movw	r2, #174	; 0xae
   13bfc:	bl	109b4 <__assert_fail@plt>
   13c00:	ldr	r0, [sp, #4]
   13c04:	ldr	r1, [sp, #4]
   13c08:	str	r0, [sp]
   13c0c:	mov	r0, r1
   13c10:	bl	14728 <main@@Base+0x1a4>
   13c14:	ldr	r1, [sp]
   13c18:	add	r0, r1, r0
   13c1c:	mov	sp, fp
   13c20:	pop	{fp, pc}
   13c24:	andeq	r1, r0, sp, ror #8
   13c28:	muleq	r0, r8, r1
   13c2c:	muleq	r0, ip, sp
   13c30:	push	{fp, lr}
   13c34:	mov	fp, sp
   13c38:	sub	sp, sp, #16
   13c3c:	str	r0, [fp, #-4]
   13c40:	movw	r0, #0
   13c44:	strh	r0, [fp, #-6]
   13c48:	ldr	r0, [fp, #-4]
   13c4c:	movw	r1, #0
   13c50:	cmp	r0, r1
   13c54:	beq	13c60 <print_schema@@Base+0x610>
   13c58:	b	13c5c <print_schema@@Base+0x60c>
   13c5c:	b	13c80 <print_schema@@Base+0x630>
   13c60:	ldr	r0, [pc, #136]	; 13cf0 <print_schema@@Base+0x6a0>
   13c64:	add	r0, pc, r0
   13c68:	ldr	r1, [pc, #132]	; 13cf4 <print_schema@@Base+0x6a4>
   13c6c:	add	r1, pc, r1
   13c70:	ldr	r2, [pc, #128]	; 13cf8 <print_schema@@Base+0x6a8>
   13c74:	add	r3, pc, r2
   13c78:	movw	r2, #239	; 0xef
   13c7c:	bl	109b4 <__assert_fail@plt>
   13c80:	mov	r0, #2
   13c84:	strh	r0, [sp, #8]
   13c88:	ldr	r0, [fp, #-4]
   13c8c:	str	r0, [sp]
   13c90:	bl	14640 <main@@Base+0xbc>
   13c94:	ldr	lr, [sp]
   13c98:	sub	r0, lr, r0
   13c9c:	str	r0, [sp, #4]
   13ca0:	ldr	r0, [sp, #4]
   13ca4:	bl	14664 <main@@Base+0xe0>
   13ca8:	ldrh	lr, [sp, #8]
   13cac:	add	lr, lr, #3
   13cb0:	lsl	lr, lr, #1
   13cb4:	cmp	r0, lr
   13cb8:	bcc	13cd4 <print_schema@@Base+0x684>
   13cbc:	ldr	r0, [sp, #4]
   13cc0:	ldrh	r1, [sp, #8]
   13cc4:	add	r0, r0, r1, lsl #1
   13cc8:	add	r0, r0, #4
   13ccc:	bl	14664 <main@@Base+0xe0>
   13cd0:	strh	r0, [fp, #-6]
   13cd4:	ldrh	r0, [fp, #-6]
   13cd8:	cmp	r0, #0
   13cdc:	movw	r0, #0
   13ce0:	movne	r0, #1
   13ce4:	and	r0, r0, #1
   13ce8:	mov	sp, fp
   13cec:	pop	{fp, pc}
   13cf0:	strdeq	r1, [r0], -sl
   13cf4:	andeq	r1, r0, r8, lsl r1
   13cf8:	andeq	r1, r0, sl, ror #26
   13cfc:	push	{fp, lr}
   13d00:	mov	fp, sp
   13d04:	sub	sp, sp, #32
   13d08:	str	r0, [fp, #-8]
   13d0c:	movw	r0, #0
   13d10:	strh	r0, [fp, #-14]
   13d14:	ldr	r0, [fp, #-8]
   13d18:	movw	r1, #0
   13d1c:	cmp	r0, r1
   13d20:	beq	13d2c <print_schema@@Base+0x6dc>
   13d24:	b	13d28 <print_schema@@Base+0x6d8>
   13d28:	b	13d4c <print_schema@@Base+0x6fc>
   13d2c:	ldr	r0, [pc, #196]	; 13df8 <print_schema@@Base+0x7a8>
   13d30:	add	r0, pc, r0
   13d34:	ldr	r1, [pc, #192]	; 13dfc <print_schema@@Base+0x7ac>
   13d38:	add	r1, pc, r1
   13d3c:	ldr	r2, [pc, #188]	; 13e00 <print_schema@@Base+0x7b0>
   13d40:	add	r3, pc, r2
   13d44:	movw	r2, #239	; 0xef
   13d48:	bl	109b4 <__assert_fail@plt>
   13d4c:	mov	r0, #2
   13d50:	strh	r0, [sp, #16]
   13d54:	ldr	r0, [fp, #-8]
   13d58:	str	r0, [sp, #8]
   13d5c:	bl	14640 <main@@Base+0xbc>
   13d60:	ldr	lr, [sp, #8]
   13d64:	sub	r0, lr, r0
   13d68:	str	r0, [sp, #12]
   13d6c:	ldr	r0, [sp, #12]
   13d70:	bl	14664 <main@@Base+0xe0>
   13d74:	ldrh	lr, [sp, #16]
   13d78:	add	lr, lr, #3
   13d7c:	lsl	lr, lr, #1
   13d80:	cmp	r0, lr
   13d84:	bcc	13da0 <print_schema@@Base+0x750>
   13d88:	ldr	r0, [sp, #12]
   13d8c:	ldrh	r1, [sp, #16]
   13d90:	add	r0, r0, r1, lsl #1
   13d94:	add	r0, r0, #4
   13d98:	bl	14664 <main@@Base+0xe0>
   13d9c:	strh	r0, [fp, #-14]
   13da0:	ldrsh	r0, [fp, #-14]
   13da4:	cmp	r0, #0
   13da8:	beq	13de4 <print_schema@@Base+0x794>
   13dac:	ldr	r0, [fp, #-8]
   13db0:	ldrh	r1, [fp, #-14]
   13db4:	add	r0, r0, r1
   13db8:	str	r0, [fp, #-12]
   13dbc:	ldr	r0, [fp, #-12]
   13dc0:	add	r0, r0, #4
   13dc4:	ldr	r1, [fp, #-12]
   13dc8:	str	r0, [sp, #4]
   13dcc:	mov	r0, r1
   13dd0:	bl	14728 <main@@Base+0x1a4>
   13dd4:	ldr	r1, [sp, #4]
   13dd8:	add	r0, r1, r0
   13ddc:	str	r0, [fp, #-4]
   13de0:	b	13dec <print_schema@@Base+0x79c>
   13de4:	movw	r0, #0
   13de8:	str	r0, [fp, #-4]
   13dec:	ldr	r0, [fp, #-4]
   13df0:	mov	sp, fp
   13df4:	pop	{fp, pc}
   13df8:	andeq	r1, r0, lr, lsr #32
   13dfc:	andeq	r1, r0, ip, asr #32
   13e00:	andeq	r1, r0, r5, ror #25
   13e04:	push	{fp, lr}
   13e08:	mov	fp, sp
   13e0c:	sub	sp, sp, #16
   13e10:	str	r0, [fp, #-4]
   13e14:	movw	r0, #0
   13e18:	strh	r0, [fp, #-6]
   13e1c:	ldr	r0, [fp, #-4]
   13e20:	movw	r1, #0
   13e24:	cmp	r0, r1
   13e28:	beq	13e34 <print_schema@@Base+0x7e4>
   13e2c:	b	13e30 <print_schema@@Base+0x7e0>
   13e30:	b	13e54 <print_schema@@Base+0x804>
   13e34:	ldr	r0, [pc, #136]	; 13ec4 <print_schema@@Base+0x874>
   13e38:	add	r0, pc, r0
   13e3c:	ldr	r1, [pc, #132]	; 13ec8 <print_schema@@Base+0x878>
   13e40:	add	r1, pc, r1
   13e44:	ldr	r2, [pc, #128]	; 13ecc <print_schema@@Base+0x87c>
   13e48:	add	r3, pc, r2
   13e4c:	movw	r2, #240	; 0xf0
   13e50:	bl	109b4 <__assert_fail@plt>
   13e54:	mov	r0, #3
   13e58:	strh	r0, [sp, #8]
   13e5c:	ldr	r0, [fp, #-4]
   13e60:	str	r0, [sp]
   13e64:	bl	14640 <main@@Base+0xbc>
   13e68:	ldr	lr, [sp]
   13e6c:	sub	r0, lr, r0
   13e70:	str	r0, [sp, #4]
   13e74:	ldr	r0, [sp, #4]
   13e78:	bl	14664 <main@@Base+0xe0>
   13e7c:	ldrh	lr, [sp, #8]
   13e80:	add	lr, lr, #3
   13e84:	lsl	lr, lr, #1
   13e88:	cmp	r0, lr
   13e8c:	bcc	13ea8 <print_schema@@Base+0x858>
   13e90:	ldr	r0, [sp, #4]
   13e94:	ldrh	r1, [sp, #8]
   13e98:	add	r0, r0, r1, lsl #1
   13e9c:	add	r0, r0, #4
   13ea0:	bl	14664 <main@@Base+0xe0>
   13ea4:	strh	r0, [fp, #-6]
   13ea8:	ldrh	r0, [fp, #-6]
   13eac:	cmp	r0, #0
   13eb0:	movw	r0, #0
   13eb4:	movne	r0, #1
   13eb8:	and	r0, r0, #1
   13ebc:	mov	sp, fp
   13ec0:	pop	{fp, pc}
   13ec4:	andeq	r0, r0, r6, lsr #30
   13ec8:	andeq	r0, r0, r4, asr #30
   13ecc:	andeq	r1, r0, sl, lsr #24
   13ed0:	push	{fp, lr}
   13ed4:	mov	fp, sp
   13ed8:	sub	sp, sp, #32
   13edc:	str	r0, [fp, #-8]
   13ee0:	movw	r0, #0
   13ee4:	strh	r0, [fp, #-14]
   13ee8:	ldr	r0, [fp, #-8]
   13eec:	movw	r1, #0
   13ef0:	cmp	r0, r1
   13ef4:	beq	13f00 <print_schema@@Base+0x8b0>
   13ef8:	b	13efc <print_schema@@Base+0x8ac>
   13efc:	b	13f20 <print_schema@@Base+0x8d0>
   13f00:	ldr	r0, [pc, #196]	; 13fcc <print_schema@@Base+0x97c>
   13f04:	add	r0, pc, r0
   13f08:	ldr	r1, [pc, #192]	; 13fd0 <print_schema@@Base+0x980>
   13f0c:	add	r1, pc, r1
   13f10:	ldr	r2, [pc, #188]	; 13fd4 <print_schema@@Base+0x984>
   13f14:	add	r3, pc, r2
   13f18:	movw	r2, #240	; 0xf0
   13f1c:	bl	109b4 <__assert_fail@plt>
   13f20:	mov	r0, #3
   13f24:	strh	r0, [sp, #16]
   13f28:	ldr	r0, [fp, #-8]
   13f2c:	str	r0, [sp, #8]
   13f30:	bl	14640 <main@@Base+0xbc>
   13f34:	ldr	lr, [sp, #8]
   13f38:	sub	r0, lr, r0
   13f3c:	str	r0, [sp, #12]
   13f40:	ldr	r0, [sp, #12]
   13f44:	bl	14664 <main@@Base+0xe0>
   13f48:	ldrh	lr, [sp, #16]
   13f4c:	add	lr, lr, #3
   13f50:	lsl	lr, lr, #1
   13f54:	cmp	r0, lr
   13f58:	bcc	13f74 <print_schema@@Base+0x924>
   13f5c:	ldr	r0, [sp, #12]
   13f60:	ldrh	r1, [sp, #16]
   13f64:	add	r0, r0, r1, lsl #1
   13f68:	add	r0, r0, #4
   13f6c:	bl	14664 <main@@Base+0xe0>
   13f70:	strh	r0, [fp, #-14]
   13f74:	ldrsh	r0, [fp, #-14]
   13f78:	cmp	r0, #0
   13f7c:	beq	13fb8 <print_schema@@Base+0x968>
   13f80:	ldr	r0, [fp, #-8]
   13f84:	ldrh	r1, [fp, #-14]
   13f88:	add	r0, r0, r1
   13f8c:	str	r0, [fp, #-12]
   13f90:	ldr	r0, [fp, #-12]
   13f94:	add	r0, r0, #4
   13f98:	ldr	r1, [fp, #-12]
   13f9c:	str	r0, [sp, #4]
   13fa0:	mov	r0, r1
   13fa4:	bl	14728 <main@@Base+0x1a4>
   13fa8:	ldr	r1, [sp, #4]
   13fac:	add	r0, r1, r0
   13fb0:	str	r0, [fp, #-4]
   13fb4:	b	13fc0 <print_schema@@Base+0x970>
   13fb8:	movw	r0, #0
   13fbc:	str	r0, [fp, #-4]
   13fc0:	ldr	r0, [fp, #-4]
   13fc4:	mov	sp, fp
   13fc8:	pop	{fp, pc}
   13fcc:	andeq	r0, r0, sl, asr lr
   13fd0:	andeq	r0, r0, r8, ror lr
   13fd4:	andeq	r1, r0, r3, lsr #23
   13fd8:	push	{fp, lr}
   13fdc:	mov	fp, sp
   13fe0:	sub	sp, sp, #16
   13fe4:	str	r0, [fp, #-4]
   13fe8:	movw	r0, #0
   13fec:	strh	r0, [fp, #-6]
   13ff0:	ldr	r0, [fp, #-4]
   13ff4:	movw	r1, #0
   13ff8:	cmp	r0, r1
   13ffc:	beq	14008 <print_schema@@Base+0x9b8>
   14000:	b	14004 <print_schema@@Base+0x9b4>
   14004:	b	14028 <print_schema@@Base+0x9d8>
   14008:	ldr	r0, [pc, #136]	; 14098 <print_schema@@Base+0xa48>
   1400c:	add	r0, pc, r0
   14010:	ldr	r1, [pc, #132]	; 1409c <print_schema@@Base+0xa4c>
   14014:	add	r1, pc, r1
   14018:	ldr	r2, [pc, #128]	; 140a0 <print_schema@@Base+0xa50>
   1401c:	add	r3, pc, r2
   14020:	movw	r2, #241	; 0xf1
   14024:	bl	109b4 <__assert_fail@plt>
   14028:	mov	r0, #4
   1402c:	strh	r0, [sp, #8]
   14030:	ldr	r0, [fp, #-4]
   14034:	str	r0, [sp]
   14038:	bl	14640 <main@@Base+0xbc>
   1403c:	ldr	lr, [sp]
   14040:	sub	r0, lr, r0
   14044:	str	r0, [sp, #4]
   14048:	ldr	r0, [sp, #4]
   1404c:	bl	14664 <main@@Base+0xe0>
   14050:	ldrh	lr, [sp, #8]
   14054:	add	lr, lr, #3
   14058:	lsl	lr, lr, #1
   1405c:	cmp	r0, lr
   14060:	bcc	1407c <print_schema@@Base+0xa2c>
   14064:	ldr	r0, [sp, #4]
   14068:	ldrh	r1, [sp, #8]
   1406c:	add	r0, r0, r1, lsl #1
   14070:	add	r0, r0, #4
   14074:	bl	14664 <main@@Base+0xe0>
   14078:	strh	r0, [fp, #-6]
   1407c:	ldrh	r0, [fp, #-6]
   14080:	cmp	r0, #0
   14084:	movw	r0, #0
   14088:	movne	r0, #1
   1408c:	and	r0, r0, #1
   14090:	mov	sp, fp
   14094:	pop	{fp, pc}
   14098:	andeq	r0, r0, r2, asr sp
   1409c:	andeq	r0, r0, r0, ror sp
   140a0:	andeq	r1, r0, r6, ror #21
   140a4:	push	{fp, lr}
   140a8:	mov	fp, sp
   140ac:	sub	sp, sp, #32
   140b0:	str	r0, [fp, #-8]
   140b4:	movw	r0, #0
   140b8:	strh	r0, [fp, #-14]
   140bc:	ldr	r0, [fp, #-8]
   140c0:	movw	r1, #0
   140c4:	cmp	r0, r1
   140c8:	beq	140d4 <print_schema@@Base+0xa84>
   140cc:	b	140d0 <print_schema@@Base+0xa80>
   140d0:	b	140f4 <print_schema@@Base+0xaa4>
   140d4:	ldr	r0, [pc, #192]	; 1419c <print_schema@@Base+0xb4c>
   140d8:	add	r0, pc, r0
   140dc:	ldr	r1, [pc, #188]	; 141a0 <print_schema@@Base+0xb50>
   140e0:	add	r1, pc, r1
   140e4:	ldr	r2, [pc, #184]	; 141a4 <print_schema@@Base+0xb54>
   140e8:	add	r3, pc, r2
   140ec:	movw	r2, #241	; 0xf1
   140f0:	bl	109b4 <__assert_fail@plt>
   140f4:	mov	r0, #4
   140f8:	strh	r0, [sp, #16]
   140fc:	ldr	r0, [fp, #-8]
   14100:	str	r0, [sp, #8]
   14104:	bl	14640 <main@@Base+0xbc>
   14108:	ldr	lr, [sp, #8]
   1410c:	sub	r0, lr, r0
   14110:	str	r0, [sp, #12]
   14114:	ldr	r0, [sp, #12]
   14118:	bl	14664 <main@@Base+0xe0>
   1411c:	ldrh	lr, [sp, #16]
   14120:	add	lr, lr, #3
   14124:	lsl	lr, lr, #1
   14128:	cmp	r0, lr
   1412c:	bcc	14148 <print_schema@@Base+0xaf8>
   14130:	ldr	r0, [sp, #12]
   14134:	ldrh	r1, [sp, #16]
   14138:	add	r0, r0, r1, lsl #1
   1413c:	add	r0, r0, #4
   14140:	bl	14664 <main@@Base+0xe0>
   14144:	strh	r0, [fp, #-14]
   14148:	ldrsh	r0, [fp, #-14]
   1414c:	cmp	r0, #0
   14150:	beq	14188 <print_schema@@Base+0xb38>
   14154:	ldr	r0, [fp, #-8]
   14158:	ldrh	r1, [fp, #-14]
   1415c:	add	r0, r0, r1
   14160:	str	r0, [fp, #-12]
   14164:	ldr	r0, [fp, #-12]
   14168:	ldr	r1, [fp, #-12]
   1416c:	str	r0, [sp, #4]
   14170:	mov	r0, r1
   14174:	bl	14728 <main@@Base+0x1a4>
   14178:	ldr	r1, [sp, #4]
   1417c:	add	r0, r1, r0
   14180:	str	r0, [fp, #-4]
   14184:	b	14190 <print_schema@@Base+0xb40>
   14188:	movw	r0, #0
   1418c:	str	r0, [fp, #-4]
   14190:	ldr	r0, [fp, #-4]
   14194:	mov	sp, fp
   14198:	pop	{fp, pc}
   1419c:	andeq	r0, r0, r6, lsl #25
   141a0:	andeq	r0, r0, r4, lsr #25
   141a4:	andeq	r1, r0, r1, ror #20

000141a8 <load_and_dump_schema@@Base>:
   141a8:	push	{fp, lr}
   141ac:	mov	fp, sp
   141b0:	sub	sp, sp, #40	; 0x28
   141b4:	str	r0, [fp, #-4]
   141b8:	mvn	r0, #0
   141bc:	str	r0, [fp, #-16]
   141c0:	ldr	r0, [fp, #-4]
   141c4:	movw	r1, #10000	; 0x2710
   141c8:	sub	r2, fp, #12
   141cc:	bl	14318 <load_and_dump_schema@@Base+0x170>
   141d0:	str	r0, [fp, #-8]
   141d4:	ldr	r0, [fp, #-8]
   141d8:	movw	r1, #0
   141dc:	cmp	r0, r1
   141e0:	bne	14208 <load_and_dump_schema@@Base+0x60>
   141e4:	ldr	r0, [pc, #268]	; 142f8 <load_and_dump_schema@@Base+0x150>
   141e8:	add	r1, pc, r0
   141ec:	ldr	r0, [pc, #264]	; 142fc <load_and_dump_schema@@Base+0x154>
   141f0:	ldr	r0, [pc, r0]
   141f4:	ldr	r0, [r0]
   141f8:	ldr	r2, [fp, #-4]
   141fc:	bl	10978 <fprintf@plt>
   14200:	str	r0, [sp, #16]
   14204:	b	142d4 <load_and_dump_schema@@Base+0x12c>
   14208:	ldr	r0, [fp, #-12]
   1420c:	cmp	r0, #12
   14210:	bcs	14238 <load_and_dump_schema@@Base+0x90>
   14214:	ldr	r0, [pc, #244]	; 14310 <load_and_dump_schema@@Base+0x168>
   14218:	add	r1, pc, r0
   1421c:	ldr	r0, [pc, #240]	; 14314 <load_and_dump_schema@@Base+0x16c>
   14220:	ldr	r0, [pc, r0]
   14224:	ldr	r0, [r0]
   14228:	ldr	r2, [fp, #-4]
   1422c:	bl	10978 <fprintf@plt>
   14230:	str	r0, [sp, #12]
   14234:	b	142d4 <load_and_dump_schema@@Base+0x12c>
   14238:	ldr	r0, [fp, #-8]
   1423c:	bl	14508 <load_and_dump_schema@@Base+0x360>
   14240:	str	r0, [sp, #20]
   14244:	ldr	r0, [sp, #20]
   14248:	movw	lr, #0
   1424c:	cmp	r0, lr
   14250:	bne	14294 <load_and_dump_schema@@Base+0xec>
   14254:	ldr	r0, [fp, #-8]
   14258:	add	r0, r0, #4
   1425c:	bl	14508 <load_and_dump_schema@@Base+0x360>
   14260:	str	r0, [sp, #20]
   14264:	ldr	r0, [sp, #20]
   14268:	movw	lr, #0
   1426c:	cmp	r0, lr
   14270:	beq	14290 <load_and_dump_schema@@Base+0xe8>
   14274:	ldr	r0, [pc, #132]	; 14300 <load_and_dump_schema@@Base+0x158>
   14278:	add	r1, pc, r0
   1427c:	ldr	r0, [pc, #128]	; 14304 <load_and_dump_schema@@Base+0x15c>
   14280:	ldr	r0, [pc, r0]
   14284:	ldr	r0, [r0]
   14288:	bl	10978 <fprintf@plt>
   1428c:	str	r0, [sp, #8]
   14290:	b	14294 <load_and_dump_schema@@Base+0xec>
   14294:	ldr	r0, [sp, #20]
   14298:	movw	r1, #0
   1429c:	cmp	r0, r1
   142a0:	bne	142c4 <load_and_dump_schema@@Base+0x11c>
   142a4:	ldr	r0, [pc, #92]	; 14308 <load_and_dump_schema@@Base+0x160>
   142a8:	add	r1, pc, r0
   142ac:	ldr	r0, [pc, #88]	; 1430c <load_and_dump_schema@@Base+0x164>
   142b0:	ldr	r0, [pc, r0]
   142b4:	ldr	r0, [r0]
   142b8:	bl	10978 <fprintf@plt>
   142bc:	str	r0, [sp, #4]
   142c0:	b	142d4 <load_and_dump_schema@@Base+0x12c>
   142c4:	ldr	r0, [sp, #20]
   142c8:	bl	13650 <print_schema@@Base>
   142cc:	movw	r0, #0
   142d0:	str	r0, [fp, #-16]
   142d4:	ldr	r0, [fp, #-8]
   142d8:	movw	r1, #0
   142dc:	cmp	r0, r1
   142e0:	beq	142ec <load_and_dump_schema@@Base+0x144>
   142e4:	ldr	r0, [fp, #-8]
   142e8:	bl	10918 <free@plt>
   142ec:	ldr	r0, [fp, #-16]
   142f0:	mov	sp, fp
   142f4:	pop	{fp, pc}
   142f8:			; <UNDEFINED> instruction: 0x000009b1
   142fc:	andeq	r1, r1, r4, asr lr
   14300:	andeq	r0, r0, sl, ror #18
   14304:	andeq	r1, r1, r4, asr #27
   14308:	andeq	r0, r0, r3, ror #18
   1430c:	muleq	r1, r4, sp
   14310:	andeq	r0, r0, sl, lsr #19
   14314:	andeq	r1, r1, r4, lsr #28
   14318:	push	{fp, lr}
   1431c:	mov	fp, sp
   14320:	sub	sp, sp, #64	; 0x40
   14324:	str	r0, [fp, #-8]
   14328:	str	r1, [fp, #-12]
   1432c:	str	r2, [fp, #-16]
   14330:	ldr	r0, [fp, #-16]
   14334:	movw	r1, #0
   14338:	cmp	r0, r1
   1433c:	beq	1434c <load_and_dump_schema@@Base+0x1a4>
   14340:	ldr	r0, [fp, #-16]
   14344:	str	r0, [sp, #20]
   14348:	b	14358 <load_and_dump_schema@@Base+0x1b0>
   1434c:	add	r0, sp, #28
   14350:	str	r0, [sp, #20]
   14354:	b	14358 <load_and_dump_schema@@Base+0x1b0>
   14358:	ldr	r0, [sp, #20]
   1435c:	ldr	r1, [pc, #416]	; 14504 <load_and_dump_schema@@Base+0x35c>
   14360:	add	r1, pc, r1
   14364:	str	r0, [fp, #-16]
   14368:	ldr	r0, [fp, #-8]
   1436c:	bl	1090c <fopen@plt>
   14370:	str	r0, [fp, #-20]	; 0xffffffec
   14374:	movw	r0, #0
   14378:	str	r0, [fp, #-24]	; 0xffffffe8
   1437c:	str	r0, [sp, #24]
   14380:	ldr	r1, [fp, #-20]	; 0xffffffec
   14384:	cmp	r1, r0
   14388:	bne	14390 <load_and_dump_schema@@Base+0x1e8>
   1438c:	b	144b0 <load_and_dump_schema@@Base+0x308>
   14390:	ldr	r0, [fp, #-20]	; 0xffffffec
   14394:	movw	r1, #0
   14398:	movw	r2, #2
   1439c:	bl	1099c <fseek@plt>
   143a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   143a4:	str	r0, [sp, #16]
   143a8:	mov	r0, r1
   143ac:	bl	10924 <ftell@plt>
   143b0:	str	r0, [fp, #-24]	; 0xffffffe8
   143b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143b8:	ldr	r1, [fp, #-16]
   143bc:	str	r0, [r1]
   143c0:	ldr	r0, [fp, #-12]
   143c4:	cmp	r0, #0
   143c8:	bls	143e0 <load_and_dump_schema@@Base+0x238>
   143cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143d0:	ldr	r1, [fp, #-12]
   143d4:	cmp	r0, r1
   143d8:	bls	143e0 <load_and_dump_schema@@Base+0x238>
   143dc:	b	144b0 <load_and_dump_schema@@Base+0x308>
   143e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   143e4:	bl	10930 <rewind@plt>
   143e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143ec:	cmp	r0, #0
   143f0:	beq	14400 <load_and_dump_schema@@Base+0x258>
   143f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   143f8:	str	r0, [sp, #12]
   143fc:	b	1440c <load_and_dump_schema@@Base+0x264>
   14400:	movw	r0, #1
   14404:	str	r0, [sp, #12]
   14408:	b	1440c <load_and_dump_schema@@Base+0x264>
   1440c:	ldr	r0, [sp, #12]
   14410:	bl	10948 <malloc@plt>
   14414:	str	r0, [sp, #24]
   14418:	ldr	r0, [sp, #24]
   1441c:	movw	lr, #0
   14420:	cmp	r0, lr
   14424:	bne	1442c <load_and_dump_schema@@Base+0x284>
   14428:	b	144b0 <load_and_dump_schema@@Base+0x308>
   1442c:	movw	r0, #0
   14430:	str	r0, [fp, #-28]	; 0xffffffe4
   14434:	ldr	r0, [sp, #24]
   14438:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1443c:	add	r0, r0, r1
   14440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14444:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14448:	sub	r2, r1, r2
   1444c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14450:	movw	r1, #1
   14454:	bl	1093c <fread@plt>
   14458:	str	r0, [sp, #32]
   1445c:	cmp	r0, #0
   14460:	beq	14478 <load_and_dump_schema@@Base+0x2d0>
   14464:	ldr	r0, [sp, #32]
   14468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1446c:	add	r0, r1, r0
   14470:	str	r0, [fp, #-28]	; 0xffffffe4
   14474:	b	14434 <load_and_dump_schema@@Base+0x28c>
   14478:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1447c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14480:	cmp	r0, r1
   14484:	beq	1448c <load_and_dump_schema@@Base+0x2e4>
   14488:	b	144b0 <load_and_dump_schema@@Base+0x308>
   1448c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14490:	bl	10990 <fclose@plt>
   14494:	ldr	lr, [fp, #-24]	; 0xffffffe8
   14498:	ldr	r1, [fp, #-16]
   1449c:	str	lr, [r1]
   144a0:	ldr	r1, [sp, #24]
   144a4:	str	r1, [fp, #-4]
   144a8:	str	r0, [sp, #8]
   144ac:	b	144f8 <load_and_dump_schema@@Base+0x350>
   144b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   144b4:	movw	r1, #0
   144b8:	cmp	r0, r1
   144bc:	beq	144cc <load_and_dump_schema@@Base+0x324>
   144c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   144c4:	bl	10990 <fclose@plt>
   144c8:	str	r0, [sp, #4]
   144cc:	ldr	r0, [sp, #24]
   144d0:	movw	r1, #0
   144d4:	cmp	r0, r1
   144d8:	beq	144e4 <load_and_dump_schema@@Base+0x33c>
   144dc:	ldr	r0, [sp, #24]
   144e0:	bl	10918 <free@plt>
   144e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   144e8:	ldr	r1, [fp, #-16]
   144ec:	str	r0, [r1]
   144f0:	movw	r0, #0
   144f4:	str	r0, [fp, #-4]
   144f8:	ldr	r0, [fp, #-4]
   144fc:	mov	sp, fp
   14500:	pop	{fp, pc}
   14504:	andeq	r1, r0, fp, lsr r8
   14508:	push	{fp, lr}
   1450c:	mov	fp, sp
   14510:	sub	sp, sp, #16
   14514:	ldr	r1, [pc, #100]	; 14580 <load_and_dump_schema@@Base+0x3d8>
   14518:	add	r1, pc, r1
   1451c:	str	r0, [fp, #-4]
   14520:	str	r1, [sp, #8]
   14524:	ldr	r0, [fp, #-4]
   14528:	movw	r1, #0
   1452c:	cmp	r0, r1
   14530:	beq	14548 <load_and_dump_schema@@Base+0x3a0>
   14534:	ldr	r0, [fp, #-4]
   14538:	ldr	r1, [sp, #8]
   1453c:	bl	148b8 <main@@Base+0x334>
   14540:	cmp	r0, #0
   14544:	bne	14554 <load_and_dump_schema@@Base+0x3ac>
   14548:	movw	r0, #0
   1454c:	str	r0, [sp, #4]
   14550:	b	14574 <load_and_dump_schema@@Base+0x3cc>
   14554:	ldr	r0, [fp, #-4]
   14558:	ldr	r1, [fp, #-4]
   1455c:	str	r0, [sp]
   14560:	mov	r0, r1
   14564:	bl	14728 <main@@Base+0x1a4>
   14568:	ldr	r1, [sp]
   1456c:	add	r0, r1, r0
   14570:	str	r0, [sp, #4]
   14574:	ldr	r0, [sp, #4]
   14578:	mov	sp, fp
   1457c:	pop	{fp, pc}
   14580:	andeq	r1, r0, r6, lsl #13

00014584 <main@@Base>:
   14584:	push	{fp, lr}
   14588:	mov	fp, sp
   1458c:	sub	sp, sp, #24
   14590:	movw	r2, #0
   14594:	str	r2, [fp, #-4]
   14598:	str	r0, [fp, #-8]
   1459c:	str	r1, [sp, #12]
   145a0:	ldr	r0, [fp, #-8]
   145a4:	cmp	r0, #2
   145a8:	beq	14614 <main@@Base+0x90>
   145ac:	ldr	r0, [pc, #132]	; 14638 <main@@Base+0xb4>
   145b0:	add	r1, pc, r0
   145b4:	ldr	r0, [pc, #128]	; 1463c <main@@Base+0xb8>
   145b8:	ldr	r0, [pc, r0]
   145bc:	ldr	r0, [r0]
   145c0:	bl	10978 <fprintf@plt>
   145c4:	ldr	r1, [pc, #100]	; 14630 <main@@Base+0xac>
   145c8:	add	r1, pc, r1
   145cc:	ldr	lr, [pc, #96]	; 14634 <main@@Base+0xb0>
   145d0:	ldr	lr, [pc, lr]
   145d4:	ldr	lr, [lr]
   145d8:	str	r0, [sp, #8]
   145dc:	mov	r0, lr
   145e0:	bl	10978 <fprintf@plt>
   145e4:	ldr	r1, [pc, #60]	; 14628 <main@@Base+0xa4>
   145e8:	add	r1, pc, r1
   145ec:	ldr	lr, [pc, #56]	; 1462c <main@@Base+0xa8>
   145f0:	ldr	lr, [pc, lr]
   145f4:	ldr	lr, [lr]
   145f8:	str	r0, [sp, #4]
   145fc:	mov	r0, lr
   14600:	bl	10978 <fprintf@plt>
   14604:	mvn	r1, #0
   14608:	str	r0, [sp]
   1460c:	mov	r0, r1
   14610:	bl	1096c <exit@plt>
   14614:	ldr	r0, [sp, #12]
   14618:	ldr	r0, [r0, #4]
   1461c:	bl	141a8 <load_and_dump_schema@@Base>
   14620:	mov	sp, fp
   14624:	pop	{fp, pc}
   14628:	andeq	r0, r0, r7, lsr #13
   1462c:	andeq	r1, r1, r4, asr sl
   14630:	andeq	r0, r0, ip, ror r6
   14634:	andeq	r1, r1, r4, ror sl
   14638:	andeq	r0, r0, r7, ror r6
   1463c:	andeq	r1, r1, ip, lsl #21
   14640:	push	{fp, lr}
   14644:	mov	fp, sp
   14648:	sub	sp, sp, #8
   1464c:	str	r0, [sp, #4]
   14650:	ldr	r0, [sp, #4]
   14654:	ldr	r0, [r0]
   14658:	bl	1468c <main@@Base+0x108>
   1465c:	mov	sp, fp
   14660:	pop	{fp, pc}
   14664:	push	{fp, lr}
   14668:	mov	fp, sp
   1466c:	sub	sp, sp, #8
   14670:	str	r0, [sp, #4]
   14674:	ldr	r0, [sp, #4]
   14678:	ldrh	r0, [r0]
   1467c:	bl	146a0 <main@@Base+0x11c>
   14680:	uxth	r0, r0
   14684:	mov	sp, fp
   14688:	pop	{fp, pc}
   1468c:	sub	sp, sp, #4
   14690:	str	r0, [sp]
   14694:	ldr	r0, [sp]
   14698:	add	sp, sp, #4
   1469c:	bx	lr
   146a0:	sub	sp, sp, #4
   146a4:	strh	r0, [sp, #2]
   146a8:	ldrh	r0, [sp, #2]
   146ac:	add	sp, sp, #4
   146b0:	bx	lr
   146b4:	push	{fp, lr}
   146b8:	mov	fp, sp
   146bc:	sub	sp, sp, #8
   146c0:	str	r0, [sp, #4]
   146c4:	ldr	r0, [sp, #4]
   146c8:	ldrsb	r0, [r0]
   146cc:	bl	146dc <main@@Base+0x158>
   146d0:	sxtb	r0, r0
   146d4:	mov	sp, fp
   146d8:	pop	{fp, pc}
   146dc:	sub	sp, sp, #4
   146e0:	strb	r0, [sp, #3]
   146e4:	ldrsb	r0, [sp, #3]
   146e8:	add	sp, sp, #4
   146ec:	bx	lr
   146f0:	push	{fp, lr}
   146f4:	mov	fp, sp
   146f8:	sub	sp, sp, #8
   146fc:	str	r0, [sp, #4]
   14700:	ldr	r0, [sp, #4]
   14704:	ldr	r0, [r0]
   14708:	bl	14714 <main@@Base+0x190>
   1470c:	mov	sp, fp
   14710:	pop	{fp, pc}
   14714:	sub	sp, sp, #4
   14718:	str	r0, [sp]
   1471c:	ldr	r0, [sp]
   14720:	add	sp, sp, #4
   14724:	bx	lr
   14728:	push	{fp, lr}
   1472c:	mov	fp, sp
   14730:	sub	sp, sp, #8
   14734:	str	r0, [sp, #4]
   14738:	ldr	r0, [sp, #4]
   1473c:	ldr	r0, [r0]
   14740:	bl	1474c <main@@Base+0x1c8>
   14744:	mov	sp, fp
   14748:	pop	{fp, pc}
   1474c:	sub	sp, sp, #4
   14750:	str	r0, [sp]
   14754:	ldr	r0, [sp]
   14758:	add	sp, sp, #4
   1475c:	bx	lr
   14760:	push	{fp, lr}
   14764:	mov	fp, sp
   14768:	sub	sp, sp, #8
   1476c:	str	r0, [sp, #4]
   14770:	ldr	r0, [sp, #4]
   14774:	movw	r1, #0
   14778:	cmp	r0, r1
   1477c:	beq	14798 <main@@Base+0x214>
   14780:	ldr	r0, [sp, #4]
   14784:	mvn	r1, #3
   14788:	add	r0, r0, r1
   1478c:	bl	14728 <main@@Base+0x1a4>
   14790:	str	r0, [sp]
   14794:	b	147a4 <main@@Base+0x220>
   14798:	movw	r0, #0
   1479c:	str	r0, [sp]
   147a0:	b	147a4 <main@@Base+0x220>
   147a4:	ldr	r0, [sp]
   147a8:	mov	sp, fp
   147ac:	pop	{fp, pc}
   147b0:	push	{fp, lr}
   147b4:	mov	fp, sp
   147b8:	sub	sp, sp, #8
   147bc:	str	r0, [sp, #4]
   147c0:	ldr	r0, [sp, #4]
   147c4:	ldrh	r0, [r0]
   147c8:	bl	147d8 <main@@Base+0x254>
   147cc:	uxth	r0, r0
   147d0:	mov	sp, fp
   147d4:	pop	{fp, pc}
   147d8:	sub	sp, sp, #4
   147dc:	strh	r0, [sp, #2]
   147e0:	ldrh	r0, [sp, #2]
   147e4:	add	sp, sp, #4
   147e8:	bx	lr
   147ec:	push	{fp, lr}
   147f0:	mov	fp, sp
   147f4:	sub	sp, sp, #8
   147f8:	str	r0, [sp, #4]
   147fc:	ldr	r0, [sp, #4]
   14800:	ldr	r1, [r0]
   14804:	ldr	r0, [r0, #4]
   14808:	str	r0, [sp]
   1480c:	mov	r0, r1
   14810:	ldr	r1, [sp]
   14814:	bl	14820 <main@@Base+0x29c>
   14818:	mov	sp, fp
   1481c:	pop	{fp, pc}
   14820:	sub	sp, sp, #8
   14824:	str	r0, [sp]
   14828:	str	r1, [sp, #4]
   1482c:	ldr	r0, [sp]
   14830:	ldr	r1, [sp, #4]
   14834:	add	sp, sp, #8
   14838:	bx	lr
   1483c:	push	{fp, lr}
   14840:	mov	fp, sp
   14844:	sub	sp, sp, #8
   14848:	str	r0, [sp, #4]
   1484c:	ldr	r0, [sp, #4]
   14850:	vldr	d0, [r0]
   14854:	bl	14860 <main@@Base+0x2dc>
   14858:	mov	sp, fp
   1485c:	pop	{fp, pc}
   14860:	sub	sp, sp, #16
   14864:	vstr	d0, [sp, #8]
   14868:	vldr	d0, [sp, #8]
   1486c:	vstr	d0, [sp]
   14870:	vldr	d0, [sp]
   14874:	add	sp, sp, #16
   14878:	bx	lr
   1487c:	push	{fp, lr}
   14880:	mov	fp, sp
   14884:	sub	sp, sp, #8
   14888:	str	r0, [sp, #4]
   1488c:	ldr	r0, [sp, #4]
   14890:	ldrb	r0, [r0]
   14894:	bl	148a4 <main@@Base+0x320>
   14898:	and	r0, r0, #255	; 0xff
   1489c:	mov	sp, fp
   148a0:	pop	{fp, pc}
   148a4:	sub	sp, sp, #4
   148a8:	strb	r0, [sp, #3]
   148ac:	ldrb	r0, [sp, #3]
   148b0:	add	sp, sp, #4
   148b4:	bx	lr
   148b8:	push	{fp, lr}
   148bc:	mov	fp, sp
   148c0:	sub	sp, sp, #32
   148c4:	str	r0, [fp, #-8]
   148c8:	str	r1, [fp, #-12]
   148cc:	movw	r0, #0
   148d0:	str	r0, [sp, #12]
   148d4:	ldr	r1, [fp, #-12]
   148d8:	cmp	r1, r0
   148dc:	bne	148ec <main@@Base+0x368>
   148e0:	movw	r0, #1
   148e4:	str	r0, [fp, #-4]
   148e8:	b	14958 <main@@Base+0x3d4>
   148ec:	add	r0, sp, #12
   148f0:	ldr	r1, [fp, #-12]
   148f4:	movw	r2, #4
   148f8:	bl	10984 <strncpy@plt>
   148fc:	ldr	r1, [sp, #12]
   14900:	str	r0, [sp, #8]
   14904:	mov	r0, r1
   14908:	bl	14964 <main@@Base+0x3e0>
   1490c:	str	r0, [sp, #12]
   14910:	ldr	r0, [fp, #-8]
   14914:	add	r0, r0, #4
   14918:	bl	14978 <main@@Base+0x3f4>
   1491c:	str	r0, [sp, #16]
   14920:	ldr	r0, [sp, #12]
   14924:	cmp	r0, #0
   14928:	movw	r0, #1
   1492c:	str	r0, [sp, #4]
   14930:	beq	1494c <main@@Base+0x3c8>
   14934:	ldr	r0, [sp, #16]
   14938:	ldr	r1, [sp, #12]
   1493c:	cmp	r0, r1
   14940:	movw	r0, #0
   14944:	moveq	r0, #1
   14948:	str	r0, [sp, #4]
   1494c:	ldr	r0, [sp, #4]
   14950:	and	r0, r0, #1
   14954:	str	r0, [fp, #-4]
   14958:	ldr	r0, [fp, #-4]
   1495c:	mov	sp, fp
   14960:	pop	{fp, pc}
   14964:	sub	sp, sp, #4
   14968:	str	r0, [sp]
   1496c:	ldr	r0, [sp]
   14970:	add	sp, sp, #4
   14974:	bx	lr
   14978:	push	{fp, lr}
   1497c:	mov	fp, sp
   14980:	sub	sp, sp, #8
   14984:	str	r0, [sp, #4]
   14988:	ldr	r0, [sp, #4]
   1498c:	ldr	r0, [r0]
   14990:	bl	1499c <main@@Base+0x418>
   14994:	mov	sp, fp
   14998:	pop	{fp, pc}
   1499c:	sub	sp, sp, #4
   149a0:	str	r0, [sp]
   149a4:	ldr	r0, [sp]
   149a8:	add	sp, sp, #4
   149ac:	bx	lr

000149b0 <__libc_csu_init@@Base>:
   149b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   149b4:	mov	r7, r0
   149b8:	ldr	r6, [pc, #72]	; 14a08 <__libc_csu_init@@Base+0x58>
   149bc:	ldr	r5, [pc, #72]	; 14a0c <__libc_csu_init@@Base+0x5c>
   149c0:	add	r6, pc, r6
   149c4:	add	r5, pc, r5
   149c8:	sub	r6, r6, r5
   149cc:	mov	r8, r1
   149d0:	mov	r9, r2
   149d4:	bl	108e0 <printf@plt-0x20>
   149d8:	asrs	r6, r6, #2
   149dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   149e0:	mov	r4, #0
   149e4:	add	r4, r4, #1
   149e8:	ldr	r3, [r5], #4
   149ec:	mov	r2, r9
   149f0:	mov	r1, r8
   149f4:	mov	r0, r7
   149f8:	blx	r3
   149fc:	cmp	r6, r4
   14a00:	bne	149e4 <__libc_csu_init@@Base+0x34>
   14a04:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a08:	andeq	r1, r1, r4, asr #10
   14a0c:	andeq	r1, r1, ip, lsr r5

00014a10 <__libc_csu_fini@@Base>:
   14a10:	bx	lr

Disassembly of section .fini:

00014a14 <.fini>:
   14a14:	push	{r3, lr}
   14a18:	pop	{r3, pc}
