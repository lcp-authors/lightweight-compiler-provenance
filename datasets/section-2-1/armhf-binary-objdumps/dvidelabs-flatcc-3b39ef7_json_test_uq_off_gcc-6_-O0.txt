
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uq_off:     file format elf32-littlearm


Disassembly of section .init:

000144f4 <.init>:
   144f4:	push	{r3, lr}
   144f8:	bl	1465c <_start@@Base+0x3c>
   144fc:	pop	{r3, pc}

Disassembly of section .plt:

00014500 <raise@plt-0x14>:
   14500:	push	{lr}		; (str lr, [sp, #-4]!)
   14504:	ldr	lr, [pc, #4]	; 14510 <raise@plt-0x4>
   14508:	add	lr, pc, lr
   1450c:	ldr	pc, [lr, #8]!
   14510:	strdeq	sp, [r4], -r0

00014514 <raise@plt>:
   14514:	add	ip, pc, #0, 12
   14518:	add	ip, ip, #315392	; 0x4d000
   1451c:	ldr	pc, [ip, #2800]!	; 0xaf0

00014520 <strcmp@plt>:
   14520:	add	ip, pc, #0, 12
   14524:	add	ip, ip, #315392	; 0x4d000
   14528:	ldr	pc, [ip, #2792]!	; 0xae8

0001452c <memmove@plt>:
   1452c:	add	ip, pc, #0, 12
   14530:	add	ip, ip, #315392	; 0x4d000
   14534:	ldr	pc, [ip, #2784]!	; 0xae0

00014538 <free@plt>:
   14538:	add	ip, pc, #0, 12
   1453c:	add	ip, ip, #315392	; 0x4d000
   14540:	ldr	pc, [ip, #2776]!	; 0xad8

00014544 <memcpy@plt>:
   14544:	add	ip, pc, #0, 12
   14548:	add	ip, ip, #315392	; 0x4d000
   1454c:	ldr	pc, [ip, #2768]!	; 0xad0

00014550 <memcmp@plt>:
   14550:	add	ip, pc, #0, 12
   14554:	add	ip, ip, #315392	; 0x4d000
   14558:	ldr	pc, [ip, #2760]!	; 0xac8

0001455c <realloc@plt>:
   1455c:	add	ip, pc, #0, 12
   14560:	add	ip, ip, #315392	; 0x4d000
   14564:	ldr	pc, [ip, #2752]!	; 0xac0

00014568 <fwrite@plt>:
   14568:	add	ip, pc, #0, 12
   1456c:	add	ip, ip, #315392	; 0x4d000
   14570:	ldr	pc, [ip, #2744]!	; 0xab8

00014574 <malloc@plt>:
   14574:	add	ip, pc, #0, 12
   14578:	add	ip, ip, #315392	; 0x4d000
   1457c:	ldr	pc, [ip, #2736]!	; 0xab0

00014580 <__libc_start_main@plt>:
   14580:	add	ip, pc, #0, 12
   14584:	add	ip, ip, #315392	; 0x4d000
   14588:	ldr	pc, [ip, #2728]!	; 0xaa8

0001458c <__gmon_start__@plt>:
   1458c:	add	ip, pc, #0, 12
   14590:	add	ip, ip, #315392	; 0x4d000
   14594:	ldr	pc, [ip, #2720]!	; 0xaa0

00014598 <strlen@plt>:
   14598:	add	ip, pc, #0, 12
   1459c:	add	ip, ip, #315392	; 0x4d000
   145a0:	ldr	pc, [ip, #2712]!	; 0xa98

000145a4 <fprintf@plt>:
   145a4:	add	ip, pc, #0, 12
   145a8:	add	ip, ip, #315392	; 0x4d000
   145ac:	ldr	pc, [ip, #2704]!	; 0xa90

000145b0 <posix_memalign@plt>:
   145b0:	add	ip, pc, #0, 12
   145b4:	add	ip, ip, #315392	; 0x4d000
   145b8:	ldr	pc, [ip, #2696]!	; 0xa88

000145bc <memset@plt>:
   145bc:	add	ip, pc, #0, 12
   145c0:	add	ip, ip, #315392	; 0x4d000
   145c4:	ldr	pc, [ip, #2688]!	; 0xa80

000145c8 <strncpy@plt>:
   145c8:	add	ip, pc, #0, 12
   145cc:	add	ip, ip, #315392	; 0x4d000
   145d0:	ldr	pc, [ip, #2680]!	; 0xa78

000145d4 <strtod@plt>:
   145d4:	add	ip, pc, #0, 12
   145d8:	add	ip, ip, #315392	; 0x4d000
   145dc:	ldr	pc, [ip, #2672]!	; 0xa70

000145e0 <memchr@plt>:
   145e0:	add	ip, pc, #0, 12
   145e4:	add	ip, ip, #315392	; 0x4d000
   145e8:	ldr	pc, [ip, #2664]!	; 0xa68

000145ec <fputc@plt>:
   145ec:	add	ip, pc, #0, 12
   145f0:	add	ip, ip, #315392	; 0x4d000
   145f4:	ldr	pc, [ip, #2656]!	; 0xa60

000145f8 <sprintf@plt>:
   145f8:	add	ip, pc, #0, 12
   145fc:	add	ip, ip, #315392	; 0x4d000
   14600:	ldr	pc, [ip, #2648]!	; 0xa58

00014604 <abort@plt>:
   14604:	add	ip, pc, #0, 12
   14608:	add	ip, ip, #315392	; 0x4d000
   1460c:	ldr	pc, [ip, #2640]!	; 0xa50

00014610 <__assert_fail@plt>:
   14610:	add	ip, pc, #0, 12
   14614:	add	ip, ip, #315392	; 0x4d000
   14618:	ldr	pc, [ip, #2632]!	; 0xa48

Disassembly of section .text:

00014620 <_start@@Base>:
   14620:	mov	fp, #0
   14624:	mov	lr, #0
   14628:	pop	{r1}		; (ldr r1, [sp], #4)
   1462c:	mov	r2, sp
   14630:	push	{r2}		; (str r2, [sp, #-4]!)
   14634:	push	{r0}		; (str r0, [sp, #-4]!)
   14638:	ldr	ip, [pc, #16]	; 14650 <_start@@Base+0x30>
   1463c:	push	{ip}		; (str ip, [sp, #-4]!)
   14640:	ldr	r0, [pc, #12]	; 14654 <_start@@Base+0x34>
   14644:	ldr	r3, [pc, #12]	; 14658 <_start@@Base+0x38>
   14648:	bl	14580 <__libc_start_main@plt>
   1464c:	bl	14604 <abort@plt>
   14650:	andeq	fp, r4, r8, asr #18
   14654:	andeq	sl, r2, r0, lsl #26
   14658:	andeq	fp, r4, r8, ror #17
   1465c:	ldr	r3, [pc, #20]	; 14678 <_start@@Base+0x58>
   14660:	ldr	r2, [pc, #20]	; 1467c <_start@@Base+0x5c>
   14664:	add	r3, pc, r3
   14668:	ldr	r2, [r3, r2]
   1466c:	cmp	r2, #0
   14670:	bxeq	lr
   14674:	b	1458c <__gmon_start__@plt>
   14678:	muleq	r4, r4, r9
   1467c:	andeq	r0, r0, ip, rrx
   14680:	ldr	r3, [pc, #28]	; 146a4 <_start@@Base+0x84>
   14684:	ldr	r0, [pc, #28]	; 146a8 <_start@@Base+0x88>
   14688:	sub	r3, r3, r0
   1468c:	cmp	r3, #6
   14690:	bxls	lr
   14694:	ldr	r3, [pc, #16]	; 146ac <_start@@Base+0x8c>
   14698:	cmp	r3, #0
   1469c:	bxeq	lr
   146a0:	bx	r3
   146a4:	andeq	r2, r6, fp, lsr #9
   146a8:	andeq	r2, r6, r8, lsr #9
   146ac:	andeq	r0, r0, r0
   146b0:	ldr	r1, [pc, #36]	; 146dc <_start@@Base+0xbc>
   146b4:	ldr	r0, [pc, #36]	; 146e0 <_start@@Base+0xc0>
   146b8:	sub	r1, r1, r0
   146bc:	asr	r1, r1, #2
   146c0:	add	r1, r1, r1, lsr #31
   146c4:	asrs	r1, r1, #1
   146c8:	bxeq	lr
   146cc:	ldr	r3, [pc, #16]	; 146e4 <_start@@Base+0xc4>
   146d0:	cmp	r3, #0
   146d4:	bxeq	lr
   146d8:	bx	r3
   146dc:	andeq	r2, r6, r8, lsr #9
   146e0:	andeq	r2, r6, r8, lsr #9
   146e4:	andeq	r0, r0, r0
   146e8:	push	{r4, lr}
   146ec:	ldr	r4, [pc, #24]	; 1470c <_start@@Base+0xec>
   146f0:	ldrb	r3, [r4]
   146f4:	cmp	r3, #0
   146f8:	popne	{r4, pc}
   146fc:	bl	14680 <_start@@Base+0x60>
   14700:	mov	r3, #1
   14704:	strb	r3, [r4]
   14708:	pop	{r4, pc}
   1470c:	andeq	r2, r6, r8, lsr #9
   14710:	ldr	r0, [pc, #40]	; 14740 <_start@@Base+0x120>
   14714:	ldr	r3, [r0]
   14718:	cmp	r3, #0
   1471c:	bne	14724 <_start@@Base+0x104>
   14720:	b	146b0 <_start@@Base+0x90>
   14724:	ldr	r3, [pc, #24]	; 14744 <_start@@Base+0x124>
   14728:	cmp	r3, #0
   1472c:	beq	14720 <_start@@Base+0x100>
   14730:	push	{r4, lr}
   14734:	blx	r3
   14738:	pop	{r4, lr}
   1473c:	b	146b0 <_start@@Base+0x90>
   14740:	andeq	r1, r6, r4, ror #29
   14744:	andeq	r0, r0, r0
   14748:	push	{fp}		; (str fp, [sp, #-4]!)
   1474c:	add	fp, sp, #0
   14750:	sub	sp, sp, #12
   14754:	mov	r3, r0
   14758:	strb	r3, [fp, #-5]
   1475c:	ldrb	r3, [fp, #-5]
   14760:	mov	r0, r3
   14764:	add	sp, fp, #0
   14768:	pop	{fp}		; (ldr fp, [sp], #4)
   1476c:	bx	lr
   14770:	push	{fp, lr}
   14774:	add	fp, sp, #4
   14778:	sub	sp, sp, #8
   1477c:	str	r0, [fp, #-8]
   14780:	mov	r3, r1
   14784:	strb	r3, [fp, #-9]
   14788:	ldrb	r3, [fp, #-9]
   1478c:	mov	r0, r3
   14790:	bl	14748 <_start@@Base+0x128>
   14794:	mov	r3, r0
   14798:	mov	r2, r3
   1479c:	ldr	r3, [fp, #-8]
   147a0:	strb	r2, [r3]
   147a4:	nop			; (mov r0, r0)
   147a8:	sub	sp, fp, #4
   147ac:	pop	{fp, pc}
   147b0:	push	{fp}		; (str fp, [sp, #-4]!)
   147b4:	add	fp, sp, #0
   147b8:	sub	sp, sp, #12
   147bc:	mov	r3, r0
   147c0:	strh	r3, [fp, #-6]
   147c4:	ldrh	r3, [fp, #-6]
   147c8:	mov	r0, r3
   147cc:	add	sp, fp, #0
   147d0:	pop	{fp}		; (ldr fp, [sp], #4)
   147d4:	bx	lr
   147d8:	push	{fp, lr}
   147dc:	add	fp, sp, #4
   147e0:	sub	sp, sp, #8
   147e4:	str	r0, [fp, #-8]
   147e8:	mov	r3, r1
   147ec:	strh	r3, [fp, #-10]
   147f0:	ldrh	r3, [fp, #-10]
   147f4:	mov	r0, r3
   147f8:	bl	147b0 <_start@@Base+0x190>
   147fc:	mov	r3, r0
   14800:	mov	r2, r3
   14804:	ldr	r3, [fp, #-8]
   14808:	strh	r2, [r3]
   1480c:	nop			; (mov r0, r0)
   14810:	sub	sp, fp, #4
   14814:	pop	{fp, pc}
   14818:	push	{fp}		; (str fp, [sp, #-4]!)
   1481c:	add	fp, sp, #0
   14820:	sub	sp, sp, #12
   14824:	str	r0, [fp, #-8]
   14828:	ldr	r3, [fp, #-8]
   1482c:	mov	r0, r3
   14830:	add	sp, fp, #0
   14834:	pop	{fp}		; (ldr fp, [sp], #4)
   14838:	bx	lr
   1483c:	push	{fp, lr}
   14840:	add	fp, sp, #4
   14844:	sub	sp, sp, #8
   14848:	str	r0, [fp, #-8]
   1484c:	str	r1, [fp, #-12]
   14850:	ldr	r0, [fp, #-12]
   14854:	bl	14818 <_start@@Base+0x1f8>
   14858:	mov	r2, r0
   1485c:	ldr	r3, [fp, #-8]
   14860:	str	r2, [r3]
   14864:	nop			; (mov r0, r0)
   14868:	sub	sp, fp, #4
   1486c:	pop	{fp, pc}
   14870:	push	{fp}		; (str fp, [sp, #-4]!)
   14874:	add	fp, sp, #0
   14878:	sub	sp, sp, #12
   1487c:	strd	r0, [fp, #-12]
   14880:	ldrd	r2, [fp, #-12]
   14884:	mov	r0, r2
   14888:	mov	r1, r3
   1488c:	add	sp, fp, #0
   14890:	pop	{fp}		; (ldr fp, [sp], #4)
   14894:	bx	lr
   14898:	push	{fp, lr}
   1489c:	add	fp, sp, #4
   148a0:	sub	sp, sp, #16
   148a4:	str	r0, [fp, #-8]
   148a8:	strd	r2, [fp, #-20]	; 0xffffffec
   148ac:	ldrd	r0, [fp, #-20]	; 0xffffffec
   148b0:	bl	14870 <_start@@Base+0x250>
   148b4:	mov	r2, r0
   148b8:	mov	r3, r1
   148bc:	ldr	r1, [fp, #-8]
   148c0:	strd	r2, [r1]
   148c4:	nop			; (mov r0, r0)
   148c8:	sub	sp, fp, #4
   148cc:	pop	{fp, pc}
   148d0:	push	{fp}		; (str fp, [sp, #-4]!)
   148d4:	add	fp, sp, #0
   148d8:	sub	sp, sp, #12
   148dc:	mov	r3, r0
   148e0:	strb	r3, [fp, #-5]
   148e4:	ldrsb	r3, [fp, #-5]
   148e8:	mov	r0, r3
   148ec:	add	sp, fp, #0
   148f0:	pop	{fp}		; (ldr fp, [sp], #4)
   148f4:	bx	lr
   148f8:	push	{fp, lr}
   148fc:	add	fp, sp, #4
   14900:	sub	sp, sp, #8
   14904:	str	r0, [fp, #-8]
   14908:	mov	r3, r1
   1490c:	strb	r3, [fp, #-9]
   14910:	ldrsb	r3, [fp, #-9]
   14914:	mov	r0, r3
   14918:	bl	148d0 <_start@@Base+0x2b0>
   1491c:	mov	r3, r0
   14920:	mov	r2, r3
   14924:	ldr	r3, [fp, #-8]
   14928:	strb	r2, [r3]
   1492c:	nop			; (mov r0, r0)
   14930:	sub	sp, fp, #4
   14934:	pop	{fp, pc}
   14938:	push	{fp}		; (str fp, [sp, #-4]!)
   1493c:	add	fp, sp, #0
   14940:	sub	sp, sp, #12
   14944:	mov	r3, r0
   14948:	strh	r3, [fp, #-6]
   1494c:	ldrsh	r3, [fp, #-6]
   14950:	mov	r0, r3
   14954:	add	sp, fp, #0
   14958:	pop	{fp}		; (ldr fp, [sp], #4)
   1495c:	bx	lr
   14960:	push	{fp, lr}
   14964:	add	fp, sp, #4
   14968:	sub	sp, sp, #8
   1496c:	str	r0, [fp, #-8]
   14970:	mov	r3, r1
   14974:	strh	r3, [fp, #-10]
   14978:	ldrsh	r3, [fp, #-10]
   1497c:	mov	r0, r3
   14980:	bl	14938 <_start@@Base+0x318>
   14984:	mov	r3, r0
   14988:	mov	r2, r3
   1498c:	ldr	r3, [fp, #-8]
   14990:	strh	r2, [r3]
   14994:	nop			; (mov r0, r0)
   14998:	sub	sp, fp, #4
   1499c:	pop	{fp, pc}
   149a0:	push	{fp}		; (str fp, [sp, #-4]!)
   149a4:	add	fp, sp, #0
   149a8:	sub	sp, sp, #12
   149ac:	str	r0, [fp, #-8]
   149b0:	ldr	r3, [fp, #-8]
   149b4:	mov	r0, r3
   149b8:	add	sp, fp, #0
   149bc:	pop	{fp}		; (ldr fp, [sp], #4)
   149c0:	bx	lr
   149c4:	push	{fp, lr}
   149c8:	add	fp, sp, #4
   149cc:	sub	sp, sp, #8
   149d0:	str	r0, [fp, #-8]
   149d4:	str	r1, [fp, #-12]
   149d8:	ldr	r0, [fp, #-12]
   149dc:	bl	149a0 <_start@@Base+0x380>
   149e0:	mov	r2, r0
   149e4:	ldr	r3, [fp, #-8]
   149e8:	str	r2, [r3]
   149ec:	nop			; (mov r0, r0)
   149f0:	sub	sp, fp, #4
   149f4:	pop	{fp, pc}
   149f8:	push	{fp}		; (str fp, [sp, #-4]!)
   149fc:	add	fp, sp, #0
   14a00:	sub	sp, sp, #12
   14a04:	strd	r0, [fp, #-12]
   14a08:	ldrd	r2, [fp, #-12]
   14a0c:	mov	r0, r2
   14a10:	mov	r1, r3
   14a14:	add	sp, fp, #0
   14a18:	pop	{fp}		; (ldr fp, [sp], #4)
   14a1c:	bx	lr
   14a20:	push	{fp, lr}
   14a24:	add	fp, sp, #4
   14a28:	sub	sp, sp, #16
   14a2c:	str	r0, [fp, #-8]
   14a30:	strd	r2, [fp, #-20]	; 0xffffffec
   14a34:	ldrd	r0, [fp, #-20]	; 0xffffffec
   14a38:	bl	149f8 <_start@@Base+0x3d8>
   14a3c:	mov	r2, r0
   14a40:	mov	r3, r1
   14a44:	ldr	r1, [fp, #-8]
   14a48:	strd	r2, [r1]
   14a4c:	nop			; (mov r0, r0)
   14a50:	sub	sp, fp, #4
   14a54:	pop	{fp, pc}
   14a58:	push	{fp}		; (str fp, [sp, #-4]!)
   14a5c:	add	fp, sp, #0
   14a60:	sub	sp, sp, #20
   14a64:	vstr	s0, [fp, #-16]
   14a68:	ldr	r3, [fp, #-16]
   14a6c:	str	r3, [fp, #-8]
   14a70:	ldr	r3, [fp, #-8]
   14a74:	str	r3, [fp, #-8]
   14a78:	ldr	r3, [fp, #-8]
   14a7c:	vmov	s15, r3
   14a80:	vmov.f32	s0, s15
   14a84:	add	sp, fp, #0
   14a88:	pop	{fp}		; (ldr fp, [sp], #4)
   14a8c:	bx	lr
   14a90:	push	{fp, lr}
   14a94:	add	fp, sp, #4
   14a98:	sub	sp, sp, #8
   14a9c:	str	r0, [fp, #-8]
   14aa0:	vstr	s0, [fp, #-12]
   14aa4:	vldr	s0, [fp, #-12]
   14aa8:	bl	14a58 <_start@@Base+0x438>
   14aac:	vmov.f32	s15, s0
   14ab0:	ldr	r3, [fp, #-8]
   14ab4:	vstr	s15, [r3]
   14ab8:	nop			; (mov r0, r0)
   14abc:	sub	sp, fp, #4
   14ac0:	pop	{fp, pc}
   14ac4:	push	{fp}		; (str fp, [sp, #-4]!)
   14ac8:	add	fp, sp, #0
   14acc:	sub	sp, sp, #20
   14ad0:	vstr	d0, [fp, #-20]	; 0xffffffec
   14ad4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   14ad8:	strd	r2, [fp, #-12]
   14adc:	ldrd	r2, [fp, #-12]
   14ae0:	strd	r2, [fp, #-12]
   14ae4:	ldrd	r2, [fp, #-12]
   14ae8:	vmov	d7, r2, r3
   14aec:	vmov.f64	d0, d7
   14af0:	add	sp, fp, #0
   14af4:	pop	{fp}		; (ldr fp, [sp], #4)
   14af8:	bx	lr
   14afc:	push	{fp, lr}
   14b00:	add	fp, sp, #4
   14b04:	sub	sp, sp, #16
   14b08:	str	r0, [fp, #-8]
   14b0c:	vstr	d0, [fp, #-20]	; 0xffffffec
   14b10:	vldr	d0, [fp, #-20]	; 0xffffffec
   14b14:	bl	14ac4 <_start@@Base+0x4a4>
   14b18:	vmov.f64	d7, d0
   14b1c:	ldr	r3, [fp, #-8]
   14b20:	vstr	d7, [r3]
   14b24:	nop			; (mov r0, r0)
   14b28:	sub	sp, fp, #4
   14b2c:	pop	{fp, pc}
   14b30:	push	{fp}		; (str fp, [sp, #-4]!)
   14b34:	add	fp, sp, #0
   14b38:	sub	sp, sp, #12
   14b3c:	mov	r3, r0
   14b40:	strb	r3, [fp, #-5]
   14b44:	ldrb	r3, [fp, #-5]
   14b48:	mov	r0, r3
   14b4c:	add	sp, fp, #0
   14b50:	pop	{fp}		; (ldr fp, [sp], #4)
   14b54:	bx	lr
   14b58:	push	{fp, lr}
   14b5c:	add	fp, sp, #4
   14b60:	sub	sp, sp, #8
   14b64:	str	r0, [fp, #-8]
   14b68:	mov	r3, r1
   14b6c:	strb	r3, [fp, #-9]
   14b70:	ldrb	r3, [fp, #-9]
   14b74:	mov	r0, r3
   14b78:	bl	14b30 <_start@@Base+0x510>
   14b7c:	mov	r3, r0
   14b80:	mov	r2, r3
   14b84:	ldr	r3, [fp, #-8]
   14b88:	strb	r2, [r3]
   14b8c:	nop			; (mov r0, r0)
   14b90:	sub	sp, fp, #4
   14b94:	pop	{fp, pc}
   14b98:	push	{fp, lr}
   14b9c:	add	fp, sp, #4
   14ba0:	sub	sp, sp, #16
   14ba4:	str	r0, [fp, #-8]
   14ba8:	str	r1, [fp, #-12]
   14bac:	str	r2, [fp, #-16]
   14bb0:	str	r3, [fp, #-20]	; 0xffffffec
   14bb4:	mov	r2, #40	; 0x28
   14bb8:	mov	r1, #0
   14bbc:	ldr	r0, [fp, #-8]
   14bc0:	bl	145bc <memset@plt>
   14bc4:	ldr	r3, [fp, #-8]
   14bc8:	ldr	r2, [fp, #-12]
   14bcc:	str	r2, [r3]
   14bd0:	ldr	r3, [fp, #-8]
   14bd4:	ldr	r2, [fp, #-16]
   14bd8:	str	r2, [r3, #4]
   14bdc:	ldr	r3, [fp, #-8]
   14be0:	mov	r2, #1
   14be4:	str	r2, [r3, #12]
   14be8:	ldr	r3, [fp, #-8]
   14bec:	ldr	r2, [fp, #4]
   14bf0:	str	r2, [r3, #8]
   14bf4:	ldr	r3, [fp, #-8]
   14bf8:	ldr	r2, [fp, #-16]
   14bfc:	str	r2, [r3, #24]
   14c00:	ldr	r3, [fp, #-8]
   14c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   14c08:	str	r2, [r3, #28]
   14c0c:	ldr	r3, [fp, #-8]
   14c10:	ldr	r2, [fp, #-16]
   14c14:	str	r2, [r3, #32]
   14c18:	nop			; (mov r0, r0)
   14c1c:	sub	sp, fp, #4
   14c20:	pop	{fp, pc}
   14c24:	push	{fp, lr}
   14c28:	add	fp, sp, #4
   14c2c:	sub	sp, sp, #16
   14c30:	str	r0, [fp, #-8]
   14c34:	str	r1, [fp, #-12]
   14c38:	str	r2, [fp, #-16]
   14c3c:	ldr	r2, [fp, #-16]
   14c40:	ldr	r3, [fp, #-12]
   14c44:	sub	r3, r2, r3
   14c48:	cmp	r3, #1
   14c4c:	ble	14c98 <_start@@Base+0x678>
   14c50:	ldr	r3, [fp, #-12]
   14c54:	ldrb	r3, [r3]
   14c58:	cmp	r3, #32
   14c5c:	bls	14c68 <_start@@Base+0x648>
   14c60:	ldr	r3, [fp, #-12]
   14c64:	b	14cac <_start@@Base+0x68c>
   14c68:	ldr	r3, [fp, #-12]
   14c6c:	ldrb	r3, [r3]
   14c70:	cmp	r3, #32
   14c74:	bne	14c98 <_start@@Base+0x678>
   14c78:	ldr	r3, [fp, #-12]
   14c7c:	add	r3, r3, #1
   14c80:	ldrb	r3, [r3]
   14c84:	cmp	r3, #32
   14c88:	bls	14c98 <_start@@Base+0x678>
   14c8c:	ldr	r3, [fp, #-12]
   14c90:	add	r3, r3, #1
   14c94:	b	14cac <_start@@Base+0x68c>
   14c98:	ldr	r2, [fp, #-16]
   14c9c:	ldr	r1, [fp, #-12]
   14ca0:	ldr	r0, [fp, #-8]
   14ca4:	bl	39d18 <flatcc_json_parser_space_ext@@Base>
   14ca8:	mov	r3, r0
   14cac:	mov	r0, r3
   14cb0:	sub	sp, fp, #4
   14cb4:	pop	{fp, pc}
   14cb8:	push	{fp, lr}
   14cbc:	add	fp, sp, #4
   14cc0:	sub	sp, sp, #16
   14cc4:	str	r0, [fp, #-8]
   14cc8:	str	r1, [fp, #-12]
   14ccc:	str	r2, [fp, #-16]
   14cd0:	ldr	r2, [fp, #-12]
   14cd4:	ldr	r3, [fp, #-16]
   14cd8:	cmp	r2, r3
   14cdc:	bne	14ce8 <_start@@Base+0x6c8>
   14ce0:	ldr	r3, [fp, #-12]
   14ce4:	b	14d24 <_start@@Base+0x704>
   14ce8:	ldr	r3, [fp, #-12]
   14cec:	ldrb	r3, [r3]
   14cf0:	cmp	r3, #34	; 0x22
   14cf4:	bne	14d0c <_start@@Base+0x6ec>
   14cf8:	ldr	r3, [fp, #-12]
   14cfc:	add	r3, r3, #1
   14d00:	str	r3, [fp, #-12]
   14d04:	ldr	r3, [fp, #-12]
   14d08:	b	14d24 <_start@@Base+0x704>
   14d0c:	mov	r3, #5
   14d10:	ldr	r2, [fp, #-16]
   14d14:	ldr	r1, [fp, #-12]
   14d18:	ldr	r0, [fp, #-8]
   14d1c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   14d20:	mov	r3, r0
   14d24:	mov	r0, r3
   14d28:	sub	sp, fp, #4
   14d2c:	pop	{fp, pc}
   14d30:	push	{r4, r5, r6, r7, r8, r9, fp}
   14d34:	add	fp, sp, #24
   14d38:	sub	sp, sp, #60	; 0x3c
   14d3c:	str	r0, [fp, #-48]	; 0xffffffd0
   14d40:	str	r1, [fp, #-52]	; 0xffffffcc
   14d44:	mov	r2, #0
   14d48:	mov	r3, #0
   14d4c:	strd	r2, [fp, #-36]	; 0xffffffdc
   14d50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14d54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14d58:	sub	r3, r2, r3
   14d5c:	str	r3, [fp, #-40]	; 0xffffffd8
   14d60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d64:	cmp	r3, #8
   14d68:	bls	14d74 <_start@@Base+0x754>
   14d6c:	mov	r3, #8
   14d70:	str	r3, [fp, #-40]	; 0xffffffd8
   14d74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14d78:	cmp	r3, #8
   14d7c:	addls	pc, pc, r3, lsl #2
   14d80:	b	14f58 <_start@@Base+0x938>
   14d84:	b	14f58 <_start@@Base+0x938>
   14d88:	b	14f18 <_start@@Base+0x8f8>
   14d8c:	b	14ed8 <_start@@Base+0x8b8>
   14d90:	b	14e98 <_start@@Base+0x878>
   14d94:	b	14e58 <_start@@Base+0x838>
   14d98:	b	14e2c <_start@@Base+0x80c>
   14d9c:	b	14dfc <_start@@Base+0x7dc>
   14da0:	b	14dcc <_start@@Base+0x7ac>
   14da4:	b	14da8 <_start@@Base+0x788>
   14da8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14dac:	add	r3, r3, #7
   14db0:	ldrb	r3, [r3]
   14db4:	uxtb	r0, r3
   14db8:	mov	r1, #0
   14dbc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14dc0:	orr	r2, r2, r0
   14dc4:	orr	r3, r3, r1
   14dc8:	strd	r2, [fp, #-36]	; 0xffffffdc
   14dcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14dd0:	add	r3, r3, #6
   14dd4:	ldrb	r3, [r3]
   14dd8:	uxtb	r2, r3
   14ddc:	mov	r3, #0
   14de0:	lsl	r5, r3, #8
   14de4:	orr	r5, r5, r2, lsr #24
   14de8:	lsl	r4, r2, #8
   14dec:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14df0:	orr	r2, r2, r4
   14df4:	orr	r3, r3, r5
   14df8:	strd	r2, [fp, #-36]	; 0xffffffdc
   14dfc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e00:	add	r3, r3, #5
   14e04:	ldrb	r3, [r3]
   14e08:	uxtb	r2, r3
   14e0c:	mov	r3, #0
   14e10:	lsl	r7, r3, #16
   14e14:	orr	r7, r7, r2, lsr #16
   14e18:	lsl	r6, r2, #16
   14e1c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e20:	orr	r2, r2, r6
   14e24:	orr	r3, r3, r7
   14e28:	strd	r2, [fp, #-36]	; 0xffffffdc
   14e2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e30:	add	r3, r3, #4
   14e34:	ldrb	r3, [r3]
   14e38:	uxtb	r2, r3
   14e3c:	mov	r3, #0
   14e40:	lsr	r9, r2, #8
   14e44:	lsl	r8, r2, #24
   14e48:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e4c:	orr	r2, r2, r8
   14e50:	orr	r3, r3, r9
   14e54:	strd	r2, [fp, #-36]	; 0xffffffdc
   14e58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e5c:	add	r3, r3, #3
   14e60:	ldrb	r3, [r3]
   14e64:	uxtb	r2, r3
   14e68:	mov	r3, #0
   14e6c:	mov	r3, r2
   14e70:	str	r3, [fp, #-56]	; 0xffffffc8
   14e74:	mov	r3, #0
   14e78:	str	r3, [fp, #-60]	; 0xffffffc4
   14e7c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14e80:	ldrd	r0, [fp, #-60]	; 0xffffffc4
   14e84:	orr	r0, r0, r2
   14e88:	orr	r1, r1, r3
   14e8c:	mov	r2, r0
   14e90:	mov	r3, r1
   14e94:	strd	r2, [fp, #-36]	; 0xffffffdc
   14e98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14e9c:	add	r3, r3, #2
   14ea0:	ldrb	r3, [r3]
   14ea4:	uxtb	r2, r3
   14ea8:	mov	r3, #0
   14eac:	lsl	r3, r2, #8
   14eb0:	str	r3, [fp, #-64]	; 0xffffffc0
   14eb4:	mov	r3, #0
   14eb8:	str	r3, [fp, #-68]	; 0xffffffbc
   14ebc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14ec0:	ldrd	r0, [fp, #-68]	; 0xffffffbc
   14ec4:	orr	r0, r0, r2
   14ec8:	orr	r1, r1, r3
   14ecc:	mov	r2, r0
   14ed0:	mov	r3, r1
   14ed4:	strd	r2, [fp, #-36]	; 0xffffffdc
   14ed8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14edc:	add	r3, r3, #1
   14ee0:	ldrb	r3, [r3]
   14ee4:	uxtb	r2, r3
   14ee8:	mov	r3, #0
   14eec:	lsl	r3, r2, #16
   14ef0:	str	r3, [fp, #-72]	; 0xffffffb8
   14ef4:	mov	r3, #0
   14ef8:	str	r3, [fp, #-76]	; 0xffffffb4
   14efc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f00:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   14f04:	orr	r0, r0, r2
   14f08:	orr	r1, r1, r3
   14f0c:	mov	r2, r0
   14f10:	mov	r3, r1
   14f14:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14f1c:	ldrb	r3, [r3]
   14f20:	uxtb	r2, r3
   14f24:	mov	r3, #0
   14f28:	lsl	r3, r2, #24
   14f2c:	str	r3, [fp, #-80]	; 0xffffffb0
   14f30:	mov	r3, #0
   14f34:	str	r3, [fp, #-84]	; 0xffffffac
   14f38:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f3c:	ldrd	r0, [fp, #-84]	; 0xffffffac
   14f40:	orr	r0, r0, r2
   14f44:	orr	r1, r1, r3
   14f48:	mov	r2, r0
   14f4c:	mov	r3, r1
   14f50:	strd	r2, [fp, #-36]	; 0xffffffdc
   14f54:	nop			; (mov r0, r0)
   14f58:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   14f5c:	mov	r0, r2
   14f60:	mov	r1, r3
   14f64:	sub	sp, fp, #24
   14f68:	pop	{r4, r5, r6, r7, r8, r9, fp}
   14f6c:	bx	lr
   14f70:	push	{fp, lr}
   14f74:	add	fp, sp, #4
   14f78:	sub	sp, sp, #16
   14f7c:	str	r0, [fp, #-16]
   14f80:	str	r1, [fp, #-20]	; 0xffffffec
   14f84:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f88:	ldr	r3, [fp, #-16]
   14f8c:	sub	r3, r2, r3
   14f90:	str	r3, [fp, #-8]
   14f94:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f98:	ldr	r0, [fp, #-16]
   14f9c:	bl	14d30 <_start@@Base+0x710>
   14fa0:	mov	r2, r0
   14fa4:	mov	r3, r1
   14fa8:	mov	r0, r2
   14fac:	mov	r1, r3
   14fb0:	sub	sp, fp, #4
   14fb4:	pop	{fp, pc}
   14fb8:	push	{fp}		; (str fp, [sp, #-4]!)
   14fbc:	add	fp, sp, #0
   14fc0:	sub	sp, sp, #28
   14fc4:	str	r0, [fp, #-16]
   14fc8:	str	r1, [fp, #-20]	; 0xffffffec
   14fcc:	str	r2, [fp, #-24]	; 0xffffffe8
   14fd0:	str	r3, [fp, #-28]	; 0xffffffe4
   14fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fd8:	str	r3, [fp, #-8]
   14fdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fe4:	sub	r2, r2, r3
   14fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14fec:	cmp	r2, r3
   14ff0:	bgt	14ffc <_start@@Base+0x9dc>
   14ff4:	ldr	r3, [fp, #-8]
   14ff8:	b	1502c <_start@@Base+0xa0c>
   14ffc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15000:	ldr	r2, [fp, #-20]	; 0xffffffec
   15004:	add	r3, r2, r3
   15008:	ldrb	r3, [r3]
   1500c:	cmp	r3, #46	; 0x2e
   15010:	beq	1501c <_start@@Base+0x9fc>
   15014:	ldr	r3, [fp, #-8]
   15018:	b	1502c <_start@@Base+0xa0c>
   1501c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15020:	add	r3, r3, #1
   15024:	ldr	r2, [fp, #-20]	; 0xffffffec
   15028:	add	r3, r2, r3
   1502c:	mov	r0, r3
   15030:	add	sp, fp, #0
   15034:	pop	{fp}		; (ldr fp, [sp], #4)
   15038:	bx	lr
   1503c:	push	{fp, lr}
   15040:	add	fp, sp, #4
   15044:	sub	sp, sp, #16
   15048:	str	r0, [fp, #-8]
   1504c:	str	r1, [fp, #-12]
   15050:	str	r2, [fp, #-16]
   15054:	ldr	r2, [fp, #-16]
   15058:	ldr	r1, [fp, #-12]
   1505c:	ldr	r0, [fp, #-8]
   15060:	bl	14cb8 <_start@@Base+0x698>
   15064:	str	r0, [fp, #-12]
   15068:	ldr	r2, [fp, #-16]
   1506c:	ldr	r1, [fp, #-12]
   15070:	ldr	r0, [fp, #-8]
   15074:	bl	14c24 <_start@@Base+0x604>
   15078:	str	r0, [fp, #-12]
   1507c:	ldr	r3, [fp, #-12]
   15080:	mov	r0, r3
   15084:	sub	sp, fp, #4
   15088:	pop	{fp, pc}
   1508c:	push	{fp, lr}
   15090:	add	fp, sp, #4
   15094:	sub	sp, sp, #16
   15098:	str	r0, [fp, #-8]
   1509c:	str	r1, [fp, #-12]
   150a0:	str	r2, [fp, #-16]
   150a4:	str	r3, [fp, #-20]	; 0xffffffec
   150a8:	ldr	r2, [fp, #-12]
   150ac:	ldr	r3, [fp, #-16]
   150b0:	cmp	r2, r3
   150b4:	beq	150c8 <_start@@Base+0xaa8>
   150b8:	ldr	r3, [fp, #-12]
   150bc:	ldrb	r3, [r3]
   150c0:	cmp	r3, #123	; 0x7b
   150c4:	beq	150f0 <_start@@Base+0xad0>
   150c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   150cc:	mov	r2, #0
   150d0:	str	r2, [r3]
   150d4:	mov	r3, #21
   150d8:	ldr	r2, [fp, #-16]
   150dc:	ldr	r1, [fp, #-12]
   150e0:	ldr	r0, [fp, #-8]
   150e4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   150e8:	mov	r3, r0
   150ec:	b	15168 <_start@@Base+0xb48>
   150f0:	ldr	r3, [fp, #-12]
   150f4:	add	r3, r3, #1
   150f8:	ldr	r2, [fp, #-16]
   150fc:	mov	r1, r3
   15100:	ldr	r0, [fp, #-8]
   15104:	bl	14c24 <_start@@Base+0x604>
   15108:	str	r0, [fp, #-12]
   1510c:	ldr	r2, [fp, #-12]
   15110:	ldr	r3, [fp, #-16]
   15114:	cmp	r2, r3
   15118:	beq	15158 <_start@@Base+0xb38>
   1511c:	ldr	r3, [fp, #-12]
   15120:	ldrb	r3, [r3]
   15124:	cmp	r3, #125	; 0x7d
   15128:	bne	15158 <_start@@Base+0xb38>
   1512c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15130:	mov	r2, #0
   15134:	str	r2, [r3]
   15138:	ldr	r3, [fp, #-12]
   1513c:	add	r3, r3, #1
   15140:	ldr	r2, [fp, #-16]
   15144:	mov	r1, r3
   15148:	ldr	r0, [fp, #-8]
   1514c:	bl	14c24 <_start@@Base+0x604>
   15150:	mov	r3, r0
   15154:	b	15168 <_start@@Base+0xb48>
   15158:	ldr	r3, [fp, #-20]	; 0xffffffec
   1515c:	mov	r2, #1
   15160:	str	r2, [r3]
   15164:	ldr	r3, [fp, #-12]
   15168:	mov	r0, r3
   1516c:	sub	sp, fp, #4
   15170:	pop	{fp, pc}
   15174:	push	{fp, lr}
   15178:	add	fp, sp, #4
   1517c:	sub	sp, sp, #16
   15180:	str	r0, [fp, #-8]
   15184:	str	r1, [fp, #-12]
   15188:	str	r2, [fp, #-16]
   1518c:	str	r3, [fp, #-20]	; 0xffffffec
   15190:	ldr	r2, [fp, #-16]
   15194:	ldr	r1, [fp, #-12]
   15198:	ldr	r0, [fp, #-8]
   1519c:	bl	14c24 <_start@@Base+0x604>
   151a0:	str	r0, [fp, #-12]
   151a4:	ldr	r2, [fp, #-12]
   151a8:	ldr	r3, [fp, #-16]
   151ac:	cmp	r2, r3
   151b0:	bne	151c8 <_start@@Base+0xba8>
   151b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   151b8:	mov	r2, #0
   151bc:	str	r2, [r3]
   151c0:	ldr	r3, [fp, #-12]
   151c4:	b	152d0 <_start@@Base+0xcb0>
   151c8:	ldr	r3, [fp, #-12]
   151cc:	ldrb	r3, [r3]
   151d0:	cmp	r3, #44	; 0x2c
   151d4:	beq	15230 <_start@@Base+0xc10>
   151d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   151dc:	mov	r2, #0
   151e0:	str	r2, [r3]
   151e4:	ldr	r3, [fp, #-12]
   151e8:	ldrb	r3, [r3]
   151ec:	cmp	r3, #125	; 0x7d
   151f0:	beq	15210 <_start@@Base+0xbf0>
   151f4:	mov	r3, #10
   151f8:	ldr	r2, [fp, #-16]
   151fc:	ldr	r1, [fp, #-12]
   15200:	ldr	r0, [fp, #-8]
   15204:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15208:	mov	r3, r0
   1520c:	b	152d0 <_start@@Base+0xcb0>
   15210:	ldr	r3, [fp, #-12]
   15214:	add	r3, r3, #1
   15218:	ldr	r2, [fp, #-16]
   1521c:	mov	r1, r3
   15220:	ldr	r0, [fp, #-8]
   15224:	bl	14c24 <_start@@Base+0x604>
   15228:	mov	r3, r0
   1522c:	b	152d0 <_start@@Base+0xcb0>
   15230:	ldr	r3, [fp, #-12]
   15234:	add	r3, r3, #1
   15238:	ldr	r2, [fp, #-16]
   1523c:	mov	r1, r3
   15240:	ldr	r0, [fp, #-8]
   15244:	bl	14c24 <_start@@Base+0x604>
   15248:	str	r0, [fp, #-12]
   1524c:	ldr	r2, [fp, #-12]
   15250:	ldr	r3, [fp, #-16]
   15254:	cmp	r2, r3
   15258:	bne	15284 <_start@@Base+0xc64>
   1525c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15260:	mov	r2, #0
   15264:	str	r2, [r3]
   15268:	mov	r3, #10
   1526c:	ldr	r2, [fp, #-16]
   15270:	ldr	r1, [fp, #-12]
   15274:	ldr	r0, [fp, #-8]
   15278:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1527c:	mov	r3, r0
   15280:	b	152d0 <_start@@Base+0xcb0>
   15284:	ldr	r3, [fp, #-12]
   15288:	ldrb	r3, [r3]
   1528c:	cmp	r3, #125	; 0x7d
   15290:	bne	152c0 <_start@@Base+0xca0>
   15294:	ldr	r3, [fp, #-20]	; 0xffffffec
   15298:	mov	r2, #0
   1529c:	str	r2, [r3]
   152a0:	ldr	r3, [fp, #-12]
   152a4:	add	r3, r3, #1
   152a8:	ldr	r2, [fp, #-16]
   152ac:	mov	r1, r3
   152b0:	ldr	r0, [fp, #-8]
   152b4:	bl	14c24 <_start@@Base+0x604>
   152b8:	mov	r3, r0
   152bc:	b	152d0 <_start@@Base+0xcb0>
   152c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   152c4:	mov	r2, #1
   152c8:	str	r2, [r3]
   152cc:	ldr	r3, [fp, #-12]
   152d0:	mov	r0, r3
   152d4:	sub	sp, fp, #4
   152d8:	pop	{fp, pc}
   152dc:	push	{fp, lr}
   152e0:	add	fp, sp, #4
   152e4:	sub	sp, sp, #16
   152e8:	str	r0, [fp, #-8]
   152ec:	str	r1, [fp, #-12]
   152f0:	str	r2, [fp, #-16]
   152f4:	str	r3, [fp, #-20]	; 0xffffffec
   152f8:	ldr	r2, [fp, #-12]
   152fc:	ldr	r3, [fp, #-16]
   15300:	cmp	r2, r3
   15304:	beq	15318 <_start@@Base+0xcf8>
   15308:	ldr	r3, [fp, #-12]
   1530c:	ldrb	r3, [r3]
   15310:	cmp	r3, #91	; 0x5b
   15314:	beq	15340 <_start@@Base+0xd20>
   15318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1531c:	mov	r2, #0
   15320:	str	r2, [r3]
   15324:	mov	r3, #22
   15328:	ldr	r2, [fp, #-16]
   1532c:	ldr	r1, [fp, #-12]
   15330:	ldr	r0, [fp, #-8]
   15334:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15338:	mov	r3, r0
   1533c:	b	153b8 <_start@@Base+0xd98>
   15340:	ldr	r3, [fp, #-12]
   15344:	add	r3, r3, #1
   15348:	ldr	r2, [fp, #-16]
   1534c:	mov	r1, r3
   15350:	ldr	r0, [fp, #-8]
   15354:	bl	14c24 <_start@@Base+0x604>
   15358:	str	r0, [fp, #-12]
   1535c:	ldr	r2, [fp, #-12]
   15360:	ldr	r3, [fp, #-16]
   15364:	cmp	r2, r3
   15368:	beq	153a8 <_start@@Base+0xd88>
   1536c:	ldr	r3, [fp, #-12]
   15370:	ldrb	r3, [r3]
   15374:	cmp	r3, #93	; 0x5d
   15378:	bne	153a8 <_start@@Base+0xd88>
   1537c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15380:	mov	r2, #0
   15384:	str	r2, [r3]
   15388:	ldr	r3, [fp, #-12]
   1538c:	add	r3, r3, #1
   15390:	ldr	r2, [fp, #-16]
   15394:	mov	r1, r3
   15398:	ldr	r0, [fp, #-8]
   1539c:	bl	14c24 <_start@@Base+0x604>
   153a0:	mov	r3, r0
   153a4:	b	153b8 <_start@@Base+0xd98>
   153a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   153ac:	mov	r2, #1
   153b0:	str	r2, [r3]
   153b4:	ldr	r3, [fp, #-12]
   153b8:	mov	r0, r3
   153bc:	sub	sp, fp, #4
   153c0:	pop	{fp, pc}
   153c4:	push	{fp, lr}
   153c8:	add	fp, sp, #4
   153cc:	sub	sp, sp, #16
   153d0:	str	r0, [fp, #-8]
   153d4:	str	r1, [fp, #-12]
   153d8:	str	r2, [fp, #-16]
   153dc:	str	r3, [fp, #-20]	; 0xffffffec
   153e0:	ldr	r2, [fp, #-16]
   153e4:	ldr	r1, [fp, #-12]
   153e8:	ldr	r0, [fp, #-8]
   153ec:	bl	14c24 <_start@@Base+0x604>
   153f0:	str	r0, [fp, #-12]
   153f4:	ldr	r2, [fp, #-12]
   153f8:	ldr	r3, [fp, #-16]
   153fc:	cmp	r2, r3
   15400:	bne	15418 <_start@@Base+0xdf8>
   15404:	ldr	r3, [fp, #-20]	; 0xffffffec
   15408:	mov	r2, #0
   1540c:	str	r2, [r3]
   15410:	ldr	r3, [fp, #-12]
   15414:	b	15520 <_start@@Base+0xf00>
   15418:	ldr	r3, [fp, #-12]
   1541c:	ldrb	r3, [r3]
   15420:	cmp	r3, #44	; 0x2c
   15424:	beq	15480 <_start@@Base+0xe60>
   15428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1542c:	mov	r2, #0
   15430:	str	r2, [r3]
   15434:	ldr	r3, [fp, #-12]
   15438:	ldrb	r3, [r3]
   1543c:	cmp	r3, #93	; 0x5d
   15440:	beq	15460 <_start@@Base+0xe40>
   15444:	mov	r3, #9
   15448:	ldr	r2, [fp, #-16]
   1544c:	ldr	r1, [fp, #-12]
   15450:	ldr	r0, [fp, #-8]
   15454:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15458:	mov	r3, r0
   1545c:	b	15520 <_start@@Base+0xf00>
   15460:	ldr	r3, [fp, #-12]
   15464:	add	r3, r3, #1
   15468:	ldr	r2, [fp, #-16]
   1546c:	mov	r1, r3
   15470:	ldr	r0, [fp, #-8]
   15474:	bl	14c24 <_start@@Base+0x604>
   15478:	mov	r3, r0
   1547c:	b	15520 <_start@@Base+0xf00>
   15480:	ldr	r3, [fp, #-12]
   15484:	add	r3, r3, #1
   15488:	ldr	r2, [fp, #-16]
   1548c:	mov	r1, r3
   15490:	ldr	r0, [fp, #-8]
   15494:	bl	14c24 <_start@@Base+0x604>
   15498:	str	r0, [fp, #-12]
   1549c:	ldr	r2, [fp, #-12]
   154a0:	ldr	r3, [fp, #-16]
   154a4:	cmp	r2, r3
   154a8:	bne	154d4 <_start@@Base+0xeb4>
   154ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   154b0:	mov	r2, #0
   154b4:	str	r2, [r3]
   154b8:	mov	r3, #9
   154bc:	ldr	r2, [fp, #-16]
   154c0:	ldr	r1, [fp, #-12]
   154c4:	ldr	r0, [fp, #-8]
   154c8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   154cc:	mov	r3, r0
   154d0:	b	15520 <_start@@Base+0xf00>
   154d4:	ldr	r3, [fp, #-12]
   154d8:	ldrb	r3, [r3]
   154dc:	cmp	r3, #93	; 0x5d
   154e0:	bne	15510 <_start@@Base+0xef0>
   154e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   154e8:	mov	r2, #0
   154ec:	str	r2, [r3]
   154f0:	ldr	r3, [fp, #-12]
   154f4:	add	r3, r3, #1
   154f8:	ldr	r2, [fp, #-16]
   154fc:	mov	r1, r3
   15500:	ldr	r0, [fp, #-8]
   15504:	bl	14c24 <_start@@Base+0x604>
   15508:	mov	r3, r0
   1550c:	b	15520 <_start@@Base+0xf00>
   15510:	ldr	r3, [fp, #-20]	; 0xffffffec
   15514:	mov	r2, #1
   15518:	str	r2, [r3]
   1551c:	ldr	r3, [fp, #-12]
   15520:	mov	r0, r3
   15524:	sub	sp, fp, #4
   15528:	pop	{fp, pc}
   1552c:	push	{fp, lr}
   15530:	add	fp, sp, #4
   15534:	sub	sp, sp, #24
   15538:	str	r0, [fp, #-16]
   1553c:	str	r1, [fp, #-20]	; 0xffffffec
   15540:	str	r2, [fp, #-24]	; 0xffffffe8
   15544:	str	r3, [fp, #-28]	; 0xffffffe4
   15548:	ldr	r3, [fp, #-20]	; 0xffffffec
   1554c:	str	r3, [fp, #-8]
   15550:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15554:	ldr	r3, [fp, #-20]	; 0xffffffec
   15558:	sub	r2, r2, r3
   1555c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15560:	cmp	r2, r3
   15564:	bgt	15570 <_start@@Base+0xf50>
   15568:	ldr	r3, [fp, #-8]
   1556c:	b	15614 <_start@@Base+0xff4>
   15570:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15574:	ldr	r2, [fp, #-20]	; 0xffffffec
   15578:	add	r3, r2, r3
   1557c:	ldrb	r3, [r3]
   15580:	cmp	r3, #34	; 0x22
   15584:	beq	15590 <_start@@Base+0xf70>
   15588:	ldr	r3, [fp, #-8]
   1558c:	b	15614 <_start@@Base+0xff4>
   15590:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15594:	add	r3, r3, #1
   15598:	ldr	r2, [fp, #-20]	; 0xffffffec
   1559c:	add	r3, r2, r3
   155a0:	str	r3, [fp, #-20]	; 0xffffffec
   155a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   155a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   155ac:	ldr	r0, [fp, #-16]
   155b0:	bl	14c24 <_start@@Base+0x604>
   155b4:	str	r0, [fp, #-20]	; 0xffffffec
   155b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   155bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155c0:	cmp	r2, r3
   155c4:	beq	155fc <_start@@Base+0xfdc>
   155c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   155cc:	ldrb	r3, [r3]
   155d0:	cmp	r3, #58	; 0x3a
   155d4:	bne	155fc <_start@@Base+0xfdc>
   155d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   155dc:	add	r3, r3, #1
   155e0:	str	r3, [fp, #-20]	; 0xffffffec
   155e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   155e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   155ec:	ldr	r0, [fp, #-16]
   155f0:	bl	14c24 <_start@@Base+0x604>
   155f4:	mov	r3, r0
   155f8:	b	15614 <_start@@Base+0xff4>
   155fc:	mov	r3, #4
   15600:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15604:	ldr	r1, [fp, #-20]	; 0xffffffec
   15608:	ldr	r0, [fp, #-16]
   1560c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15610:	mov	r3, r0
   15614:	mov	r0, r3
   15618:	sub	sp, fp, #4
   1561c:	pop	{fp, pc}
   15620:	push	{fp, lr}
   15624:	add	fp, sp, #4
   15628:	sub	sp, sp, #16
   1562c:	str	r0, [fp, #-8]
   15630:	str	r1, [fp, #-12]
   15634:	str	r2, [fp, #-16]
   15638:	str	r3, [fp, #-20]	; 0xffffffec
   1563c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15640:	cmp	r3, #0
   15644:	beq	15664 <_start@@Base+0x1044>
   15648:	mov	r3, #8
   1564c:	ldr	r2, [fp, #-16]
   15650:	ldr	r1, [fp, #-12]
   15654:	ldr	r0, [fp, #-8]
   15658:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1565c:	mov	r3, r0
   15660:	b	15674 <_start@@Base+0x1054>
   15664:	ldr	r1, [fp, #12]
   15668:	ldrd	r2, [fp, #4]
   1566c:	strd	r2, [r1]
   15670:	ldr	r3, [fp, #-12]
   15674:	mov	r0, r3
   15678:	sub	sp, fp, #4
   1567c:	pop	{fp, pc}
   15680:	push	{fp, lr}
   15684:	add	fp, sp, #4
   15688:	sub	sp, sp, #16
   1568c:	str	r0, [fp, #-8]
   15690:	str	r1, [fp, #-12]
   15694:	str	r2, [fp, #-16]
   15698:	str	r3, [fp, #-20]	; 0xffffffec
   1569c:	ldr	r3, [fp, #-20]	; 0xffffffec
   156a0:	cmp	r3, #0
   156a4:	beq	156c4 <_start@@Base+0x10a4>
   156a8:	mov	r3, #8
   156ac:	ldr	r2, [fp, #-16]
   156b0:	ldr	r1, [fp, #-12]
   156b4:	ldr	r0, [fp, #-8]
   156b8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   156bc:	mov	r3, r0
   156c0:	b	156f0 <_start@@Base+0x10d0>
   156c4:	ldr	r2, [fp, #4]
   156c8:	ldr	r3, [fp, #8]
   156cc:	orr	r3, r2, r3
   156d0:	cmp	r3, #0
   156d4:	movne	r3, #1
   156d8:	moveq	r3, #0
   156dc:	uxtb	r3, r3
   156e0:	mov	r2, r3
   156e4:	ldr	r3, [fp, #12]
   156e8:	strb	r2, [r3]
   156ec:	ldr	r3, [fp, #-12]
   156f0:	mov	r0, r3
   156f4:	sub	sp, fp, #4
   156f8:	pop	{fp, pc}
   156fc:	push	{fp, lr}
   15700:	add	fp, sp, #4
   15704:	sub	sp, sp, #16
   15708:	str	r0, [fp, #-8]
   1570c:	str	r1, [fp, #-12]
   15710:	str	r2, [fp, #-16]
   15714:	str	r3, [fp, #-20]	; 0xffffffec
   15718:	ldr	r3, [fp, #-20]	; 0xffffffec
   1571c:	cmp	r3, #0
   15720:	beq	15740 <_start@@Base+0x1120>
   15724:	mov	r3, #8
   15728:	ldr	r2, [fp, #-16]
   1572c:	ldr	r1, [fp, #-12]
   15730:	ldr	r0, [fp, #-8]
   15734:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15738:	mov	r3, r0
   1573c:	b	15784 <_start@@Base+0x1164>
   15740:	ldrd	r2, [fp, #4]
   15744:	mvn	r0, #0
   15748:	mov	r1, #0
   1574c:	cmp	r3, r1
   15750:	cmpeq	r2, r0
   15754:	bls	15774 <_start@@Base+0x1154>
   15758:	mov	r3, #7
   1575c:	ldr	r2, [fp, #-16]
   15760:	ldr	r1, [fp, #-12]
   15764:	ldr	r0, [fp, #-8]
   15768:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1576c:	mov	r3, r0
   15770:	b	15784 <_start@@Base+0x1164>
   15774:	ldr	r2, [fp, #4]
   15778:	ldr	r3, [fp, #12]
   1577c:	str	r2, [r3]
   15780:	ldr	r3, [fp, #-12]
   15784:	mov	r0, r3
   15788:	sub	sp, fp, #4
   1578c:	pop	{fp, pc}
   15790:	push	{fp, lr}
   15794:	add	fp, sp, #4
   15798:	sub	sp, sp, #16
   1579c:	str	r0, [fp, #-8]
   157a0:	str	r1, [fp, #-12]
   157a4:	str	r2, [fp, #-16]
   157a8:	str	r3, [fp, #-20]	; 0xffffffec
   157ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   157b0:	cmp	r3, #0
   157b4:	beq	157d4 <_start@@Base+0x11b4>
   157b8:	mov	r3, #8
   157bc:	ldr	r2, [fp, #-16]
   157c0:	ldr	r1, [fp, #-12]
   157c4:	ldr	r0, [fp, #-8]
   157c8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   157cc:	mov	r3, r0
   157d0:	b	15818 <_start@@Base+0x11f8>
   157d4:	ldrd	r2, [fp, #4]
   157d8:	ldr	r0, [pc, #68]	; 15824 <_start@@Base+0x1204>
   157dc:	mov	r1, #0
   157e0:	cmp	r3, r1
   157e4:	cmpeq	r2, r0
   157e8:	bls	15808 <_start@@Base+0x11e8>
   157ec:	mov	r3, #7
   157f0:	ldr	r2, [fp, #-16]
   157f4:	ldr	r1, [fp, #-12]
   157f8:	ldr	r0, [fp, #-8]
   157fc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15800:	mov	r3, r0
   15804:	b	15818 <_start@@Base+0x11f8>
   15808:	ldrh	r2, [fp, #4]
   1580c:	ldr	r3, [fp, #12]
   15810:	strh	r2, [r3]
   15814:	ldr	r3, [fp, #-12]
   15818:	mov	r0, r3
   1581c:	sub	sp, fp, #4
   15820:	pop	{fp, pc}
   15824:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   15828:	push	{fp, lr}
   1582c:	add	fp, sp, #4
   15830:	sub	sp, sp, #16
   15834:	str	r0, [fp, #-8]
   15838:	str	r1, [fp, #-12]
   1583c:	str	r2, [fp, #-16]
   15840:	str	r3, [fp, #-20]	; 0xffffffec
   15844:	ldr	r3, [fp, #-20]	; 0xffffffec
   15848:	cmp	r3, #0
   1584c:	beq	1586c <_start@@Base+0x124c>
   15850:	mov	r3, #8
   15854:	ldr	r2, [fp, #-16]
   15858:	ldr	r1, [fp, #-12]
   1585c:	ldr	r0, [fp, #-8]
   15860:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15864:	mov	r3, r0
   15868:	b	158a8 <_start@@Base+0x1288>
   1586c:	ldrd	r2, [fp, #4]
   15870:	cmp	r3, #0
   15874:	cmpeq	r2, #255	; 0xff
   15878:	bls	15898 <_start@@Base+0x1278>
   1587c:	mov	r3, #7
   15880:	ldr	r2, [fp, #-16]
   15884:	ldr	r1, [fp, #-12]
   15888:	ldr	r0, [fp, #-8]
   1588c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15890:	mov	r3, r0
   15894:	b	158a8 <_start@@Base+0x1288>
   15898:	ldrb	r2, [fp, #4]
   1589c:	ldr	r3, [fp, #12]
   158a0:	strb	r2, [r3]
   158a4:	ldr	r3, [fp, #-12]
   158a8:	mov	r0, r3
   158ac:	sub	sp, fp, #4
   158b0:	pop	{fp, pc}
   158b4:	push	{fp, lr}
   158b8:	add	fp, sp, #4
   158bc:	sub	sp, sp, #16
   158c0:	str	r0, [fp, #-8]
   158c4:	str	r1, [fp, #-12]
   158c8:	str	r2, [fp, #-16]
   158cc:	str	r3, [fp, #-20]	; 0xffffffec
   158d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   158d4:	cmp	r3, #0
   158d8:	beq	15920 <_start@@Base+0x1300>
   158dc:	ldrd	r2, [fp, #4]
   158e0:	cmp	r3, #-2147483648	; 0x80000000
   158e4:	cmpeq	r2, #0
   158e8:	bls	15908 <_start@@Base+0x12e8>
   158ec:	mov	r3, #8
   158f0:	ldr	r2, [fp, #-16]
   158f4:	ldr	r1, [fp, #-12]
   158f8:	ldr	r0, [fp, #-8]
   158fc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15900:	mov	r3, r0
   15904:	b	1595c <_start@@Base+0x133c>
   15908:	ldrd	r2, [fp, #4]
   1590c:	rsbs	r2, r2, #0
   15910:	rsc	r3, r3, #0
   15914:	ldr	r1, [fp, #12]
   15918:	strd	r2, [r1]
   1591c:	b	15958 <_start@@Base+0x1338>
   15920:	ldrd	r2, [fp, #4]
   15924:	cmp	r2, #0
   15928:	sbcs	r3, r3, #0
   1592c:	bge	1594c <_start@@Base+0x132c>
   15930:	mov	r3, #7
   15934:	ldr	r2, [fp, #-16]
   15938:	ldr	r1, [fp, #-12]
   1593c:	ldr	r0, [fp, #-8]
   15940:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15944:	mov	r3, r0
   15948:	b	1595c <_start@@Base+0x133c>
   1594c:	ldrd	r2, [fp, #4]
   15950:	ldr	r1, [fp, #12]
   15954:	strd	r2, [r1]
   15958:	ldr	r3, [fp, #-12]
   1595c:	mov	r0, r3
   15960:	sub	sp, fp, #4
   15964:	pop	{fp, pc}
   15968:	push	{fp, lr}
   1596c:	add	fp, sp, #4
   15970:	sub	sp, sp, #16
   15974:	str	r0, [fp, #-8]
   15978:	str	r1, [fp, #-12]
   1597c:	str	r2, [fp, #-16]
   15980:	str	r3, [fp, #-20]	; 0xffffffec
   15984:	ldr	r3, [fp, #-20]	; 0xffffffec
   15988:	cmp	r3, #0
   1598c:	beq	159d4 <_start@@Base+0x13b4>
   15990:	ldrd	r2, [fp, #4]
   15994:	cmp	r3, #0
   15998:	cmpeq	r2, #-2147483648	; 0x80000000
   1599c:	bls	159bc <_start@@Base+0x139c>
   159a0:	mov	r3, #8
   159a4:	ldr	r2, [fp, #-16]
   159a8:	ldr	r1, [fp, #-12]
   159ac:	ldr	r0, [fp, #-8]
   159b0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   159b4:	mov	r3, r0
   159b8:	b	15a18 <_start@@Base+0x13f8>
   159bc:	ldr	r3, [fp, #4]
   159c0:	rsb	r3, r3, #0
   159c4:	mov	r2, r3
   159c8:	ldr	r3, [fp, #12]
   159cc:	str	r2, [r3]
   159d0:	b	15a14 <_start@@Base+0x13f4>
   159d4:	ldrd	r2, [fp, #4]
   159d8:	mvn	r0, #-2147483648	; 0x80000000
   159dc:	mov	r1, #0
   159e0:	cmp	r3, r1
   159e4:	cmpeq	r2, r0
   159e8:	bls	15a08 <_start@@Base+0x13e8>
   159ec:	mov	r3, #7
   159f0:	ldr	r2, [fp, #-16]
   159f4:	ldr	r1, [fp, #-12]
   159f8:	ldr	r0, [fp, #-8]
   159fc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15a00:	mov	r3, r0
   15a04:	b	15a18 <_start@@Base+0x13f8>
   15a08:	ldr	r2, [fp, #4]
   15a0c:	ldr	r3, [fp, #12]
   15a10:	str	r2, [r3]
   15a14:	ldr	r3, [fp, #-12]
   15a18:	mov	r0, r3
   15a1c:	sub	sp, fp, #4
   15a20:	pop	{fp, pc}
   15a24:	push	{fp, lr}
   15a28:	add	fp, sp, #4
   15a2c:	sub	sp, sp, #16
   15a30:	str	r0, [fp, #-8]
   15a34:	str	r1, [fp, #-12]
   15a38:	str	r2, [fp, #-16]
   15a3c:	str	r3, [fp, #-20]	; 0xffffffec
   15a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   15a44:	cmp	r3, #0
   15a48:	beq	15a94 <_start@@Base+0x1474>
   15a4c:	ldrd	r2, [fp, #4]
   15a50:	cmp	r3, #0
   15a54:	cmpeq	r2, #32768	; 0x8000
   15a58:	bls	15a78 <_start@@Base+0x1458>
   15a5c:	mov	r3, #8
   15a60:	ldr	r2, [fp, #-16]
   15a64:	ldr	r1, [fp, #-12]
   15a68:	ldr	r0, [fp, #-8]
   15a6c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15a70:	mov	r3, r0
   15a74:	b	15ad8 <_start@@Base+0x14b8>
   15a78:	ldrh	r3, [fp, #4]
   15a7c:	rsb	r3, r3, #0
   15a80:	uxth	r3, r3
   15a84:	sxth	r2, r3
   15a88:	ldr	r3, [fp, #12]
   15a8c:	strh	r2, [r3]
   15a90:	b	15ad4 <_start@@Base+0x14b4>
   15a94:	ldrd	r2, [fp, #4]
   15a98:	ldr	r0, [pc, #68]	; 15ae4 <_start@@Base+0x14c4>
   15a9c:	mov	r1, #0
   15aa0:	cmp	r3, r1
   15aa4:	cmpeq	r2, r0
   15aa8:	bls	15ac8 <_start@@Base+0x14a8>
   15aac:	mov	r3, #7
   15ab0:	ldr	r2, [fp, #-16]
   15ab4:	ldr	r1, [fp, #-12]
   15ab8:	ldr	r0, [fp, #-8]
   15abc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15ac0:	mov	r3, r0
   15ac4:	b	15ad8 <_start@@Base+0x14b8>
   15ac8:	ldrsh	r2, [fp, #4]
   15acc:	ldr	r3, [fp, #12]
   15ad0:	strh	r2, [r3]
   15ad4:	ldr	r3, [fp, #-12]
   15ad8:	mov	r0, r3
   15adc:	sub	sp, fp, #4
   15ae0:	pop	{fp, pc}
   15ae4:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   15ae8:	push	{fp, lr}
   15aec:	add	fp, sp, #4
   15af0:	sub	sp, sp, #16
   15af4:	str	r0, [fp, #-8]
   15af8:	str	r1, [fp, #-12]
   15afc:	str	r2, [fp, #-16]
   15b00:	str	r3, [fp, #-20]	; 0xffffffec
   15b04:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b08:	cmp	r3, #0
   15b0c:	beq	15b58 <_start@@Base+0x1538>
   15b10:	ldrd	r2, [fp, #4]
   15b14:	cmp	r3, #0
   15b18:	cmpeq	r2, #128	; 0x80
   15b1c:	bls	15b3c <_start@@Base+0x151c>
   15b20:	mov	r3, #8
   15b24:	ldr	r2, [fp, #-16]
   15b28:	ldr	r1, [fp, #-12]
   15b2c:	ldr	r0, [fp, #-8]
   15b30:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15b34:	mov	r3, r0
   15b38:	b	15b94 <_start@@Base+0x1574>
   15b3c:	ldrb	r3, [fp, #4]
   15b40:	rsb	r3, r3, #0
   15b44:	uxtb	r3, r3
   15b48:	sxtb	r2, r3
   15b4c:	ldr	r3, [fp, #12]
   15b50:	strb	r2, [r3]
   15b54:	b	15b90 <_start@@Base+0x1570>
   15b58:	ldrd	r2, [fp, #4]
   15b5c:	cmp	r3, #0
   15b60:	cmpeq	r2, #127	; 0x7f
   15b64:	bls	15b84 <_start@@Base+0x1564>
   15b68:	mov	r3, #7
   15b6c:	ldr	r2, [fp, #-16]
   15b70:	ldr	r1, [fp, #-12]
   15b74:	ldr	r0, [fp, #-8]
   15b78:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15b7c:	mov	r3, r0
   15b80:	b	15b94 <_start@@Base+0x1574>
   15b84:	ldrsb	r2, [fp, #4]
   15b88:	ldr	r3, [fp, #12]
   15b8c:	strb	r2, [r3]
   15b90:	ldr	r3, [fp, #-12]
   15b94:	mov	r0, r3
   15b98:	sub	sp, fp, #4
   15b9c:	pop	{fp, pc}
   15ba0:	push	{fp, lr}
   15ba4:	add	fp, sp, #4
   15ba8:	sub	sp, sp, #16
   15bac:	str	r0, [fp, #-8]
   15bb0:	str	r1, [fp, #-12]
   15bb4:	str	r2, [fp, #-16]
   15bb8:	str	r3, [fp, #-20]	; 0xffffffec
   15bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bc0:	cmp	r3, #0
   15bc4:	beq	15bdc <_start@@Base+0x15bc>
   15bc8:	ldrd	r0, [fp, #4]
   15bcc:	bl	4b6e8 <flatcc_json_printer_clear@@Base+0xa24>
   15bd0:	mov	r3, r0
   15bd4:	eor	r2, r3, #-2147483648	; 0x80000000
   15bd8:	b	15be8 <_start@@Base+0x15c8>
   15bdc:	ldrd	r0, [fp, #4]
   15be0:	bl	4b6e8 <flatcc_json_printer_clear@@Base+0xa24>
   15be4:	mov	r2, r0
   15be8:	ldr	r3, [fp, #12]
   15bec:	str	r2, [r3]
   15bf0:	ldr	r3, [fp, #-12]
   15bf4:	mov	r0, r3
   15bf8:	sub	sp, fp, #4
   15bfc:	pop	{fp, pc}
   15c00:	push	{fp, lr}
   15c04:	add	fp, sp, #4
   15c08:	sub	sp, sp, #16
   15c0c:	str	r0, [fp, #-8]
   15c10:	str	r1, [fp, #-12]
   15c14:	str	r2, [fp, #-16]
   15c18:	str	r3, [fp, #-20]	; 0xffffffec
   15c1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c20:	cmp	r3, #0
   15c24:	beq	15c40 <_start@@Base+0x1620>
   15c28:	ldrd	r0, [fp, #4]
   15c2c:	bl	4b4b0 <flatcc_json_printer_clear@@Base+0x7ec>
   15c30:	mov	r2, r0
   15c34:	mov	r3, r1
   15c38:	eor	r3, r3, #-2147483648	; 0x80000000
   15c3c:	b	15c50 <_start@@Base+0x1630>
   15c40:	ldrd	r0, [fp, #4]
   15c44:	bl	4b4b0 <flatcc_json_printer_clear@@Base+0x7ec>
   15c48:	mov	r2, r0
   15c4c:	mov	r3, r1
   15c50:	ldr	r1, [fp, #12]
   15c54:	strd	r2, [r1]
   15c58:	ldr	r3, [fp, #-12]
   15c5c:	mov	r0, r3
   15c60:	sub	sp, fp, #4
   15c64:	pop	{fp, pc}
   15c68:	push	{fp, lr}
   15c6c:	add	fp, sp, #4
   15c70:	sub	sp, sp, #16
   15c74:	str	r0, [fp, #-8]
   15c78:	str	r1, [fp, #-12]
   15c7c:	str	r2, [fp, #-16]
   15c80:	ldr	r2, [fp, #-16]
   15c84:	ldr	r3, [fp, #-12]
   15c88:	sub	r3, r2, r3
   15c8c:	cmp	r3, #3
   15c90:	ble	15cc4 <_start@@Base+0x16a4>
   15c94:	mov	r2, #4
   15c98:	ldr	r3, [pc, #72]	; 15ce8 <_start@@Base+0x16c8>
   15c9c:	add	r3, pc, r3
   15ca0:	mov	r1, r3
   15ca4:	ldr	r0, [fp, #-12]
   15ca8:	bl	14550 <memcmp@plt>
   15cac:	mov	r3, r0
   15cb0:	cmp	r3, #0
   15cb4:	bne	15cc4 <_start@@Base+0x16a4>
   15cb8:	ldr	r3, [fp, #-12]
   15cbc:	add	r3, r3, #4
   15cc0:	b	15cdc <_start@@Base+0x16bc>
   15cc4:	mov	r3, #26
   15cc8:	ldr	r2, [fp, #-16]
   15ccc:	ldr	r1, [fp, #-12]
   15cd0:	ldr	r0, [fp, #-8]
   15cd4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   15cd8:	mov	r3, r0
   15cdc:	mov	r0, r3
   15ce0:	sub	sp, fp, #4
   15ce4:	pop	{fp, pc}
   15ce8:			; <UNDEFINED> instruction: 0x00035cbc
   15cec:	push	{fp, lr}
   15cf0:	add	fp, sp, #4
   15cf4:	sub	sp, sp, #56	; 0x38
   15cf8:	str	r0, [fp, #-32]	; 0xffffffe0
   15cfc:	str	r1, [fp, #-36]	; 0xffffffdc
   15d00:	str	r2, [fp, #-40]	; 0xffffffd8
   15d04:	str	r3, [fp, #-44]	; 0xffffffd4
   15d08:	mov	r2, #0
   15d0c:	mov	r3, #0
   15d10:	strd	r2, [fp, #-20]	; 0xffffffec
   15d14:	mov	r3, #0
   15d18:	str	r3, [fp, #-24]	; 0xffffffe8
   15d1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d20:	str	r3, [fp, #-8]
   15d24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d28:	mov	r2, #0
   15d2c:	mov	r3, #0
   15d30:	strd	r2, [r1]
   15d34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15d38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15d3c:	cmp	r2, r3
   15d40:	bne	15d4c <_start@@Base+0x172c>
   15d44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15d48:	b	15db4 <_start@@Base+0x1794>
   15d4c:	sub	r2, fp, #24
   15d50:	sub	r3, fp, #20
   15d54:	str	r3, [sp]
   15d58:	mov	r3, r2
   15d5c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15d60:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15d64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d68:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   15d6c:	str	r0, [fp, #-36]	; 0xffffffdc
   15d70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15d74:	ldr	r3, [fp, #-8]
   15d78:	cmp	r2, r3
   15d7c:	beq	15db0 <_start@@Base+0x1790>
   15d80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d84:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15d88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d8c:	str	r1, [sp, #8]
   15d90:	strd	r2, [sp]
   15d94:	mov	r3, r0
   15d98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15d9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15da0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15da4:	bl	15620 <_start@@Base+0x1000>
   15da8:	mov	r3, r0
   15dac:	b	15db4 <_start@@Base+0x1794>
   15db0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15db4:	mov	r0, r3
   15db8:	sub	sp, fp, #4
   15dbc:	pop	{fp, pc}
   15dc0:	push	{fp, lr}
   15dc4:	add	fp, sp, #4
   15dc8:	sub	sp, sp, #56	; 0x38
   15dcc:	str	r0, [fp, #-32]	; 0xffffffe0
   15dd0:	str	r1, [fp, #-36]	; 0xffffffdc
   15dd4:	str	r2, [fp, #-40]	; 0xffffffd8
   15dd8:	str	r3, [fp, #-44]	; 0xffffffd4
   15ddc:	mov	r2, #0
   15de0:	mov	r3, #0
   15de4:	strd	r2, [fp, #-20]	; 0xffffffec
   15de8:	mov	r3, #0
   15dec:	str	r3, [fp, #-24]	; 0xffffffe8
   15df0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15df4:	str	r3, [fp, #-8]
   15df8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dfc:	mov	r2, #0
   15e00:	str	r2, [r3]
   15e04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15e08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15e0c:	cmp	r2, r3
   15e10:	bne	15e1c <_start@@Base+0x17fc>
   15e14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e18:	b	15e84 <_start@@Base+0x1864>
   15e1c:	sub	r2, fp, #24
   15e20:	sub	r3, fp, #20
   15e24:	str	r3, [sp]
   15e28:	mov	r3, r2
   15e2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e38:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   15e3c:	str	r0, [fp, #-36]	; 0xffffffdc
   15e40:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15e44:	ldr	r3, [fp, #-8]
   15e48:	cmp	r2, r3
   15e4c:	beq	15e80 <_start@@Base+0x1860>
   15e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e54:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15e58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15e5c:	str	r1, [sp, #8]
   15e60:	strd	r2, [sp]
   15e64:	mov	r3, r0
   15e68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15e6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15e70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e74:	bl	156fc <_start@@Base+0x10dc>
   15e78:	mov	r3, r0
   15e7c:	b	15e84 <_start@@Base+0x1864>
   15e80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e84:	mov	r0, r3
   15e88:	sub	sp, fp, #4
   15e8c:	pop	{fp, pc}
   15e90:	push	{fp, lr}
   15e94:	add	fp, sp, #4
   15e98:	sub	sp, sp, #56	; 0x38
   15e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   15ea0:	str	r1, [fp, #-36]	; 0xffffffdc
   15ea4:	str	r2, [fp, #-40]	; 0xffffffd8
   15ea8:	str	r3, [fp, #-44]	; 0xffffffd4
   15eac:	mov	r2, #0
   15eb0:	mov	r3, #0
   15eb4:	strd	r2, [fp, #-20]	; 0xffffffec
   15eb8:	mov	r3, #0
   15ebc:	str	r3, [fp, #-24]	; 0xffffffe8
   15ec0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ec4:	str	r3, [fp, #-8]
   15ec8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ecc:	mov	r2, #0
   15ed0:	strh	r2, [r3]
   15ed4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15ed8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15edc:	cmp	r2, r3
   15ee0:	bne	15eec <_start@@Base+0x18cc>
   15ee4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ee8:	b	15f54 <_start@@Base+0x1934>
   15eec:	sub	r2, fp, #24
   15ef0:	sub	r3, fp, #20
   15ef4:	str	r3, [sp]
   15ef8:	mov	r3, r2
   15efc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f08:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   15f0c:	str	r0, [fp, #-36]	; 0xffffffdc
   15f10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15f14:	ldr	r3, [fp, #-8]
   15f18:	cmp	r2, r3
   15f1c:	beq	15f50 <_start@@Base+0x1930>
   15f20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f24:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15f28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f2c:	str	r1, [sp, #8]
   15f30:	strd	r2, [sp]
   15f34:	mov	r3, r0
   15f38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15f40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f44:	bl	15790 <_start@@Base+0x1170>
   15f48:	mov	r3, r0
   15f4c:	b	15f54 <_start@@Base+0x1934>
   15f50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f54:	mov	r0, r3
   15f58:	sub	sp, fp, #4
   15f5c:	pop	{fp, pc}
   15f60:	push	{fp, lr}
   15f64:	add	fp, sp, #4
   15f68:	sub	sp, sp, #56	; 0x38
   15f6c:	str	r0, [fp, #-32]	; 0xffffffe0
   15f70:	str	r1, [fp, #-36]	; 0xffffffdc
   15f74:	str	r2, [fp, #-40]	; 0xffffffd8
   15f78:	str	r3, [fp, #-44]	; 0xffffffd4
   15f7c:	mov	r2, #0
   15f80:	mov	r3, #0
   15f84:	strd	r2, [fp, #-20]	; 0xffffffec
   15f88:	mov	r3, #0
   15f8c:	str	r3, [fp, #-24]	; 0xffffffe8
   15f90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f94:	str	r3, [fp, #-8]
   15f98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15f9c:	mov	r2, #0
   15fa0:	strb	r2, [r3]
   15fa4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15fa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15fac:	cmp	r2, r3
   15fb0:	bne	15fbc <_start@@Base+0x199c>
   15fb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15fb8:	b	16024 <_start@@Base+0x1a04>
   15fbc:	sub	r2, fp, #24
   15fc0:	sub	r3, fp, #20
   15fc4:	str	r3, [sp]
   15fc8:	mov	r3, r2
   15fcc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15fd0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15fd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15fd8:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   15fdc:	str	r0, [fp, #-36]	; 0xffffffdc
   15fe0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15fe4:	ldr	r3, [fp, #-8]
   15fe8:	cmp	r2, r3
   15fec:	beq	16020 <_start@@Base+0x1a00>
   15ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ff4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   15ff8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ffc:	str	r1, [sp, #8]
   16000:	strd	r2, [sp]
   16004:	mov	r3, r0
   16008:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1600c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16014:	bl	15828 <_start@@Base+0x1208>
   16018:	mov	r3, r0
   1601c:	b	16024 <_start@@Base+0x1a04>
   16020:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16024:	mov	r0, r3
   16028:	sub	sp, fp, #4
   1602c:	pop	{fp, pc}
   16030:	push	{fp, lr}
   16034:	add	fp, sp, #4
   16038:	sub	sp, sp, #56	; 0x38
   1603c:	str	r0, [fp, #-32]	; 0xffffffe0
   16040:	str	r1, [fp, #-36]	; 0xffffffdc
   16044:	str	r2, [fp, #-40]	; 0xffffffd8
   16048:	str	r3, [fp, #-44]	; 0xffffffd4
   1604c:	mov	r2, #0
   16050:	mov	r3, #0
   16054:	strd	r2, [fp, #-20]	; 0xffffffec
   16058:	mov	r3, #0
   1605c:	str	r3, [fp, #-24]	; 0xffffffe8
   16060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16064:	str	r3, [fp, #-8]
   16068:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1606c:	mov	r2, #0
   16070:	mov	r3, #0
   16074:	strd	r2, [r1]
   16078:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1607c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16080:	cmp	r2, r3
   16084:	bne	16090 <_start@@Base+0x1a70>
   16088:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1608c:	b	160f8 <_start@@Base+0x1ad8>
   16090:	sub	r2, fp, #24
   16094:	sub	r3, fp, #20
   16098:	str	r3, [sp]
   1609c:	mov	r3, r2
   160a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   160a4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   160a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160ac:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   160b0:	str	r0, [fp, #-36]	; 0xffffffdc
   160b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   160b8:	ldr	r3, [fp, #-8]
   160bc:	cmp	r2, r3
   160c0:	beq	160f4 <_start@@Base+0x1ad4>
   160c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   160cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160d0:	str	r1, [sp, #8]
   160d4:	strd	r2, [sp]
   160d8:	mov	r3, r0
   160dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   160e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   160e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160e8:	bl	158b4 <_start@@Base+0x1294>
   160ec:	mov	r3, r0
   160f0:	b	160f8 <_start@@Base+0x1ad8>
   160f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160f8:	mov	r0, r3
   160fc:	sub	sp, fp, #4
   16100:	pop	{fp, pc}
   16104:	push	{fp, lr}
   16108:	add	fp, sp, #4
   1610c:	sub	sp, sp, #56	; 0x38
   16110:	str	r0, [fp, #-32]	; 0xffffffe0
   16114:	str	r1, [fp, #-36]	; 0xffffffdc
   16118:	str	r2, [fp, #-40]	; 0xffffffd8
   1611c:	str	r3, [fp, #-44]	; 0xffffffd4
   16120:	mov	r2, #0
   16124:	mov	r3, #0
   16128:	strd	r2, [fp, #-20]	; 0xffffffec
   1612c:	mov	r3, #0
   16130:	str	r3, [fp, #-24]	; 0xffffffe8
   16134:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16138:	str	r3, [fp, #-8]
   1613c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16140:	mov	r2, #0
   16144:	str	r2, [r3]
   16148:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1614c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16150:	cmp	r2, r3
   16154:	bne	16160 <_start@@Base+0x1b40>
   16158:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1615c:	b	161c8 <_start@@Base+0x1ba8>
   16160:	sub	r2, fp, #24
   16164:	sub	r3, fp, #20
   16168:	str	r3, [sp]
   1616c:	mov	r3, r2
   16170:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16174:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1617c:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   16180:	str	r0, [fp, #-36]	; 0xffffffdc
   16184:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16188:	ldr	r3, [fp, #-8]
   1618c:	cmp	r2, r3
   16190:	beq	161c4 <_start@@Base+0x1ba4>
   16194:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16198:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1619c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   161a0:	str	r1, [sp, #8]
   161a4:	strd	r2, [sp]
   161a8:	mov	r3, r0
   161ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   161b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   161b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   161b8:	bl	15968 <_start@@Base+0x1348>
   161bc:	mov	r3, r0
   161c0:	b	161c8 <_start@@Base+0x1ba8>
   161c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   161c8:	mov	r0, r3
   161cc:	sub	sp, fp, #4
   161d0:	pop	{fp, pc}
   161d4:	push	{fp, lr}
   161d8:	add	fp, sp, #4
   161dc:	sub	sp, sp, #56	; 0x38
   161e0:	str	r0, [fp, #-32]	; 0xffffffe0
   161e4:	str	r1, [fp, #-36]	; 0xffffffdc
   161e8:	str	r2, [fp, #-40]	; 0xffffffd8
   161ec:	str	r3, [fp, #-44]	; 0xffffffd4
   161f0:	mov	r2, #0
   161f4:	mov	r3, #0
   161f8:	strd	r2, [fp, #-20]	; 0xffffffec
   161fc:	mov	r3, #0
   16200:	str	r3, [fp, #-24]	; 0xffffffe8
   16204:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16208:	str	r3, [fp, #-8]
   1620c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16210:	mov	r2, #0
   16214:	strh	r2, [r3]
   16218:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1621c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16220:	cmp	r2, r3
   16224:	bne	16230 <_start@@Base+0x1c10>
   16228:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1622c:	b	16298 <_start@@Base+0x1c78>
   16230:	sub	r2, fp, #24
   16234:	sub	r3, fp, #20
   16238:	str	r3, [sp]
   1623c:	mov	r3, r2
   16240:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16244:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16248:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1624c:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   16250:	str	r0, [fp, #-36]	; 0xffffffdc
   16254:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16258:	ldr	r3, [fp, #-8]
   1625c:	cmp	r2, r3
   16260:	beq	16294 <_start@@Base+0x1c74>
   16264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16268:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1626c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16270:	str	r1, [sp, #8]
   16274:	strd	r2, [sp]
   16278:	mov	r3, r0
   1627c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16280:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16284:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16288:	bl	15a24 <_start@@Base+0x1404>
   1628c:	mov	r3, r0
   16290:	b	16298 <_start@@Base+0x1c78>
   16294:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16298:	mov	r0, r3
   1629c:	sub	sp, fp, #4
   162a0:	pop	{fp, pc}
   162a4:	push	{fp, lr}
   162a8:	add	fp, sp, #4
   162ac:	sub	sp, sp, #56	; 0x38
   162b0:	str	r0, [fp, #-32]	; 0xffffffe0
   162b4:	str	r1, [fp, #-36]	; 0xffffffdc
   162b8:	str	r2, [fp, #-40]	; 0xffffffd8
   162bc:	str	r3, [fp, #-44]	; 0xffffffd4
   162c0:	mov	r2, #0
   162c4:	mov	r3, #0
   162c8:	strd	r2, [fp, #-20]	; 0xffffffec
   162cc:	mov	r3, #0
   162d0:	str	r3, [fp, #-24]	; 0xffffffe8
   162d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162d8:	str	r3, [fp, #-8]
   162dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   162e0:	mov	r2, #0
   162e4:	strb	r2, [r3]
   162e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   162ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   162f0:	cmp	r2, r3
   162f4:	bne	16300 <_start@@Base+0x1ce0>
   162f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162fc:	b	16368 <_start@@Base+0x1d48>
   16300:	sub	r2, fp, #24
   16304:	sub	r3, fp, #20
   16308:	str	r3, [sp]
   1630c:	mov	r3, r2
   16310:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16314:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16318:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1631c:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   16320:	str	r0, [fp, #-36]	; 0xffffffdc
   16324:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16328:	ldr	r3, [fp, #-8]
   1632c:	cmp	r2, r3
   16330:	beq	16364 <_start@@Base+0x1d44>
   16334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16338:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1633c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16340:	str	r1, [sp, #8]
   16344:	strd	r2, [sp]
   16348:	mov	r3, r0
   1634c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16350:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16358:	bl	15ae8 <_start@@Base+0x14c8>
   1635c:	mov	r3, r0
   16360:	b	16368 <_start@@Base+0x1d48>
   16364:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16368:	mov	r0, r3
   1636c:	sub	sp, fp, #4
   16370:	pop	{fp, pc}
   16374:	push	{fp, lr}
   16378:	add	fp, sp, #4
   1637c:	sub	sp, sp, #24
   16380:	str	r0, [fp, #-16]
   16384:	str	r1, [fp, #-20]	; 0xffffffec
   16388:	str	r2, [fp, #-24]	; 0xffffffe8
   1638c:	str	r3, [fp, #-28]	; 0xffffffe4
   16390:	ldr	r3, [fp, #-20]	; 0xffffffec
   16394:	str	r3, [fp, #-8]
   16398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1639c:	ldr	r3, [fp, #-20]	; 0xffffffec
   163a0:	sub	r3, r2, r3
   163a4:	cmp	r3, #3
   163a8:	ble	163e8 <_start@@Base+0x1dc8>
   163ac:	mov	r2, #4
   163b0:	ldr	r3, [pc, #200]	; 16480 <_start@@Base+0x1e60>
   163b4:	add	r3, pc, r3
   163b8:	mov	r1, r3
   163bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   163c0:	bl	14550 <memcmp@plt>
   163c4:	mov	r3, r0
   163c8:	cmp	r3, #0
   163cc:	bne	163e8 <_start@@Base+0x1dc8>
   163d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   163d4:	mov	r2, #1
   163d8:	strb	r2, [r3]
   163dc:	ldr	r3, [fp, #-8]
   163e0:	add	r3, r3, #4
   163e4:	b	16474 <_start@@Base+0x1e54>
   163e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   163ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   163f0:	sub	r3, r2, r3
   163f4:	cmp	r3, #4
   163f8:	ble	16438 <_start@@Base+0x1e18>
   163fc:	mov	r2, #5
   16400:	ldr	r3, [pc, #124]	; 16484 <_start@@Base+0x1e64>
   16404:	add	r3, pc, r3
   16408:	mov	r1, r3
   1640c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16410:	bl	14550 <memcmp@plt>
   16414:	mov	r3, r0
   16418:	cmp	r3, #0
   1641c:	bne	16438 <_start@@Base+0x1e18>
   16420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16424:	mov	r2, #0
   16428:	strb	r2, [r3]
   1642c:	ldr	r3, [fp, #-8]
   16430:	add	r3, r3, #5
   16434:	b	16474 <_start@@Base+0x1e54>
   16438:	sub	r3, fp, #9
   1643c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16440:	ldr	r1, [fp, #-20]	; 0xffffffec
   16444:	ldr	r0, [fp, #-16]
   16448:	bl	15f60 <_start@@Base+0x1940>
   1644c:	str	r0, [fp, #-20]	; 0xffffffec
   16450:	ldrb	r3, [fp, #-9]
   16454:	cmp	r3, #0
   16458:	movne	r3, #1
   1645c:	moveq	r3, #0
   16460:	uxtb	r3, r3
   16464:	mov	r2, r3
   16468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1646c:	strb	r2, [r3]
   16470:	ldr	r3, [fp, #-20]	; 0xffffffec
   16474:	mov	r0, r3
   16478:	sub	sp, fp, #4
   1647c:	pop	{fp, pc}
   16480:	andeq	r5, r3, ip, lsr #11
   16484:	andeq	r5, r3, r4, ror #10
   16488:	push	{r4, fp, lr}
   1648c:	add	fp, sp, #8
   16490:	sub	sp, sp, #68	; 0x44
   16494:	str	r0, [fp, #-48]	; 0xffffffd0
   16498:	str	r1, [fp, #-52]	; 0xffffffcc
   1649c:	str	r2, [fp, #-56]	; 0xffffffc8
   164a0:	str	r3, [fp, #-60]	; 0xffffffc4
   164a4:	mov	r2, #0
   164a8:	mov	r3, #0
   164ac:	strd	r2, [fp, #-28]	; 0xffffffe4
   164b0:	ldr	r1, [fp, #4]
   164b4:	mov	r2, #0
   164b8:	mov	r3, #0
   164bc:	strd	r2, [r1]
   164c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   164c4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   164c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   164cc:	bl	1503c <_start@@Base+0xa1c>
   164d0:	str	r0, [fp, #-52]	; 0xffffffcc
   164d4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   164d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   164dc:	cmp	r2, r3
   164e0:	bne	164ec <_start@@Base+0x1ecc>
   164e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   164e8:	b	1660c <_start@@Base+0x1fec>
   164ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   164f0:	str	r3, [fp, #-16]
   164f4:	ldr	r3, [fp, #-16]
   164f8:	ldr	r4, [r3]
   164fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16500:	str	r3, [fp, #-20]	; 0xffffffec
   16504:	sub	r2, fp, #40	; 0x28
   16508:	sub	r3, fp, #44	; 0x2c
   1650c:	str	r3, [sp, #4]
   16510:	sub	r3, fp, #36	; 0x24
   16514:	str	r3, [sp]
   16518:	mov	r3, r2
   1651c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16520:	ldr	r1, [fp, #-20]	; 0xffffffec
   16524:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16528:	blx	r4
   1652c:	str	r0, [fp, #-52]	; 0xffffffcc
   16530:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16534:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16538:	cmp	r2, r3
   1653c:	bne	16548 <_start@@Base+0x1f28>
   16540:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16544:	b	1660c <_start@@Base+0x1fec>
   16548:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1654c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16550:	cmp	r2, r3
   16554:	bne	16574 <_start@@Base+0x1f54>
   16558:	ldr	r3, [fp, #-16]
   1655c:	add	r3, r3, #4
   16560:	str	r3, [fp, #-16]
   16564:	ldr	r3, [fp, #-16]
   16568:	ldr	r3, [r3]
   1656c:	cmp	r3, #0
   16570:	bne	164f4 <_start@@Base+0x1ed4>
   16574:	ldr	r2, [fp, #-20]	; 0xffffffec
   16578:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1657c:	cmp	r2, r3
   16580:	bne	165a0 <_start@@Base+0x1f80>
   16584:	mov	r3, #23
   16588:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1658c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16590:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16594:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   16598:	mov	r3, r0
   1659c:	b	1660c <_start@@Base+0x1fec>
   165a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   165a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   165a8:	sub	r1, fp, #28
   165ac:	str	r1, [sp, #8]
   165b0:	strd	r2, [sp]
   165b4:	mov	r3, r0
   165b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   165bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   165c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   165c4:	bl	15620 <_start@@Base+0x1000>
   165c8:	mov	r2, r0
   165cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165d0:	cmp	r2, r3
   165d4:	bne	165e0 <_start@@Base+0x1fc0>
   165d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   165dc:	b	1660c <_start@@Base+0x1fec>
   165e0:	ldr	r3, [fp, #4]
   165e4:	ldrd	r0, [r3]
   165e8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   165ec:	adds	r2, r2, r0
   165f0:	adc	r3, r3, r1
   165f4:	ldr	r1, [fp, #4]
   165f8:	strd	r2, [r1]
   165fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16600:	cmp	r3, #0
   16604:	bne	164ec <_start@@Base+0x1ecc>
   16608:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1660c:	mov	r0, r3
   16610:	sub	sp, fp, #8
   16614:	pop	{r4, fp, pc}
   16618:	push	{r4, fp, lr}
   1661c:	add	fp, sp, #8
   16620:	sub	sp, sp, #68	; 0x44
   16624:	str	r0, [fp, #-48]	; 0xffffffd0
   16628:	str	r1, [fp, #-52]	; 0xffffffcc
   1662c:	str	r2, [fp, #-56]	; 0xffffffc8
   16630:	str	r3, [fp, #-60]	; 0xffffffc4
   16634:	mov	r3, #0
   16638:	str	r3, [fp, #-24]	; 0xffffffe8
   1663c:	ldr	r3, [fp, #4]
   16640:	mov	r2, #0
   16644:	str	r2, [r3]
   16648:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1664c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16650:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16654:	bl	1503c <_start@@Base+0xa1c>
   16658:	str	r0, [fp, #-52]	; 0xffffffcc
   1665c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16660:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16664:	cmp	r2, r3
   16668:	bne	16674 <_start@@Base+0x2054>
   1666c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16670:	b	16790 <_start@@Base+0x2170>
   16674:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16678:	str	r3, [fp, #-16]
   1667c:	ldr	r3, [fp, #-16]
   16680:	ldr	r4, [r3]
   16684:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16688:	str	r3, [fp, #-20]	; 0xffffffec
   1668c:	sub	r2, fp, #40	; 0x28
   16690:	sub	r3, fp, #44	; 0x2c
   16694:	str	r3, [sp, #4]
   16698:	sub	r3, fp, #36	; 0x24
   1669c:	str	r3, [sp]
   166a0:	mov	r3, r2
   166a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   166a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   166ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166b0:	blx	r4
   166b4:	str	r0, [fp, #-52]	; 0xffffffcc
   166b8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   166bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   166c0:	cmp	r2, r3
   166c4:	bne	166d0 <_start@@Base+0x20b0>
   166c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   166cc:	b	16790 <_start@@Base+0x2170>
   166d0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   166d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   166d8:	cmp	r2, r3
   166dc:	bne	166fc <_start@@Base+0x20dc>
   166e0:	ldr	r3, [fp, #-16]
   166e4:	add	r3, r3, #4
   166e8:	str	r3, [fp, #-16]
   166ec:	ldr	r3, [fp, #-16]
   166f0:	ldr	r3, [r3]
   166f4:	cmp	r3, #0
   166f8:	bne	1667c <_start@@Base+0x205c>
   166fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   16700:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16704:	cmp	r2, r3
   16708:	bne	16728 <_start@@Base+0x2108>
   1670c:	mov	r3, #23
   16710:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16714:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16718:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1671c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   16720:	mov	r3, r0
   16724:	b	16790 <_start@@Base+0x2170>
   16728:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1672c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16730:	sub	r1, fp, #24
   16734:	str	r1, [sp, #8]
   16738:	strd	r2, [sp]
   1673c:	mov	r3, r0
   16740:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16744:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16748:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1674c:	bl	156fc <_start@@Base+0x10dc>
   16750:	mov	r2, r0
   16754:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16758:	cmp	r2, r3
   1675c:	bne	16768 <_start@@Base+0x2148>
   16760:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16764:	b	16790 <_start@@Base+0x2170>
   16768:	ldr	r3, [fp, #4]
   1676c:	ldr	r2, [r3]
   16770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16774:	add	r2, r2, r3
   16778:	ldr	r3, [fp, #4]
   1677c:	str	r2, [r3]
   16780:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16784:	cmp	r3, #0
   16788:	bne	16674 <_start@@Base+0x2054>
   1678c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16790:	mov	r0, r3
   16794:	sub	sp, fp, #8
   16798:	pop	{r4, fp, pc}
   1679c:	push	{r4, fp, lr}
   167a0:	add	fp, sp, #8
   167a4:	sub	sp, sp, #68	; 0x44
   167a8:	str	r0, [fp, #-48]	; 0xffffffd0
   167ac:	str	r1, [fp, #-52]	; 0xffffffcc
   167b0:	str	r2, [fp, #-56]	; 0xffffffc8
   167b4:	str	r3, [fp, #-60]	; 0xffffffc4
   167b8:	mov	r3, #0
   167bc:	strh	r3, [fp, #-22]	; 0xffffffea
   167c0:	ldr	r3, [fp, #4]
   167c4:	mov	r2, #0
   167c8:	strh	r2, [r3]
   167cc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   167d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   167d4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167d8:	bl	1503c <_start@@Base+0xa1c>
   167dc:	str	r0, [fp, #-52]	; 0xffffffcc
   167e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   167e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   167e8:	cmp	r2, r3
   167ec:	bne	167f8 <_start@@Base+0x21d8>
   167f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   167f4:	b	16918 <_start@@Base+0x22f8>
   167f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   167fc:	str	r3, [fp, #-16]
   16800:	ldr	r3, [fp, #-16]
   16804:	ldr	r4, [r3]
   16808:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1680c:	str	r3, [fp, #-20]	; 0xffffffec
   16810:	sub	r2, fp, #40	; 0x28
   16814:	sub	r3, fp, #44	; 0x2c
   16818:	str	r3, [sp, #4]
   1681c:	sub	r3, fp, #36	; 0x24
   16820:	str	r3, [sp]
   16824:	mov	r3, r2
   16828:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1682c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16830:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16834:	blx	r4
   16838:	str	r0, [fp, #-52]	; 0xffffffcc
   1683c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16840:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16844:	cmp	r2, r3
   16848:	bne	16854 <_start@@Base+0x2234>
   1684c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16850:	b	16918 <_start@@Base+0x22f8>
   16854:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16858:	ldr	r3, [fp, #-20]	; 0xffffffec
   1685c:	cmp	r2, r3
   16860:	bne	16880 <_start@@Base+0x2260>
   16864:	ldr	r3, [fp, #-16]
   16868:	add	r3, r3, #4
   1686c:	str	r3, [fp, #-16]
   16870:	ldr	r3, [fp, #-16]
   16874:	ldr	r3, [r3]
   16878:	cmp	r3, #0
   1687c:	bne	16800 <_start@@Base+0x21e0>
   16880:	ldr	r2, [fp, #-20]	; 0xffffffec
   16884:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16888:	cmp	r2, r3
   1688c:	bne	168ac <_start@@Base+0x228c>
   16890:	mov	r3, #23
   16894:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16898:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1689c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   168a0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   168a4:	mov	r3, r0
   168a8:	b	16918 <_start@@Base+0x22f8>
   168ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   168b0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   168b4:	sub	r1, fp, #22
   168b8:	str	r1, [sp, #8]
   168bc:	strd	r2, [sp]
   168c0:	mov	r3, r0
   168c4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   168c8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   168cc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   168d0:	bl	15790 <_start@@Base+0x1170>
   168d4:	mov	r2, r0
   168d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   168dc:	cmp	r2, r3
   168e0:	bne	168ec <_start@@Base+0x22cc>
   168e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   168e8:	b	16918 <_start@@Base+0x22f8>
   168ec:	ldr	r3, [fp, #4]
   168f0:	ldrh	r2, [r3]
   168f4:	ldrh	r3, [fp, #-22]	; 0xffffffea
   168f8:	add	r3, r2, r3
   168fc:	uxth	r2, r3
   16900:	ldr	r3, [fp, #4]
   16904:	strh	r2, [r3]
   16908:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1690c:	cmp	r3, #0
   16910:	bne	167f8 <_start@@Base+0x21d8>
   16914:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16918:	mov	r0, r3
   1691c:	sub	sp, fp, #8
   16920:	pop	{r4, fp, pc}
   16924:	push	{r4, fp, lr}
   16928:	add	fp, sp, #8
   1692c:	sub	sp, sp, #68	; 0x44
   16930:	str	r0, [fp, #-48]	; 0xffffffd0
   16934:	str	r1, [fp, #-52]	; 0xffffffcc
   16938:	str	r2, [fp, #-56]	; 0xffffffc8
   1693c:	str	r3, [fp, #-60]	; 0xffffffc4
   16940:	mov	r3, #0
   16944:	strb	r3, [fp, #-21]	; 0xffffffeb
   16948:	ldr	r3, [fp, #4]
   1694c:	mov	r2, #0
   16950:	strb	r2, [r3]
   16954:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16958:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1695c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16960:	bl	1503c <_start@@Base+0xa1c>
   16964:	str	r0, [fp, #-52]	; 0xffffffcc
   16968:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1696c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16970:	cmp	r2, r3
   16974:	bne	16980 <_start@@Base+0x2360>
   16978:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1697c:	b	16aa0 <_start@@Base+0x2480>
   16980:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16984:	str	r3, [fp, #-16]
   16988:	ldr	r3, [fp, #-16]
   1698c:	ldr	r4, [r3]
   16990:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16994:	str	r3, [fp, #-20]	; 0xffffffec
   16998:	sub	r2, fp, #40	; 0x28
   1699c:	sub	r3, fp, #44	; 0x2c
   169a0:	str	r3, [sp, #4]
   169a4:	sub	r3, fp, #36	; 0x24
   169a8:	str	r3, [sp]
   169ac:	mov	r3, r2
   169b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   169b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   169b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   169bc:	blx	r4
   169c0:	str	r0, [fp, #-52]	; 0xffffffcc
   169c4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   169c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   169cc:	cmp	r2, r3
   169d0:	bne	169dc <_start@@Base+0x23bc>
   169d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   169d8:	b	16aa0 <_start@@Base+0x2480>
   169dc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   169e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   169e4:	cmp	r2, r3
   169e8:	bne	16a08 <_start@@Base+0x23e8>
   169ec:	ldr	r3, [fp, #-16]
   169f0:	add	r3, r3, #4
   169f4:	str	r3, [fp, #-16]
   169f8:	ldr	r3, [fp, #-16]
   169fc:	ldr	r3, [r3]
   16a00:	cmp	r3, #0
   16a04:	bne	16988 <_start@@Base+0x2368>
   16a08:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16a10:	cmp	r2, r3
   16a14:	bne	16a34 <_start@@Base+0x2414>
   16a18:	mov	r3, #23
   16a1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16a20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16a24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16a28:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   16a2c:	mov	r3, r0
   16a30:	b	16aa0 <_start@@Base+0x2480>
   16a34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16a38:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16a3c:	sub	r1, fp, #21
   16a40:	str	r1, [sp, #8]
   16a44:	strd	r2, [sp]
   16a48:	mov	r3, r0
   16a4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16a50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16a54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16a58:	bl	15828 <_start@@Base+0x1208>
   16a5c:	mov	r2, r0
   16a60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a64:	cmp	r2, r3
   16a68:	bne	16a74 <_start@@Base+0x2454>
   16a6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a70:	b	16aa0 <_start@@Base+0x2480>
   16a74:	ldr	r3, [fp, #4]
   16a78:	ldrb	r2, [r3]
   16a7c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   16a80:	add	r3, r2, r3
   16a84:	uxtb	r2, r3
   16a88:	ldr	r3, [fp, #4]
   16a8c:	strb	r2, [r3]
   16a90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16a94:	cmp	r3, #0
   16a98:	bne	16980 <_start@@Base+0x2360>
   16a9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16aa0:	mov	r0, r3
   16aa4:	sub	sp, fp, #8
   16aa8:	pop	{r4, fp, pc}
   16aac:	push	{r4, fp, lr}
   16ab0:	add	fp, sp, #8
   16ab4:	sub	sp, sp, #68	; 0x44
   16ab8:	str	r0, [fp, #-48]	; 0xffffffd0
   16abc:	str	r1, [fp, #-52]	; 0xffffffcc
   16ac0:	str	r2, [fp, #-56]	; 0xffffffc8
   16ac4:	str	r3, [fp, #-60]	; 0xffffffc4
   16ac8:	mov	r2, #0
   16acc:	mov	r3, #0
   16ad0:	strd	r2, [fp, #-28]	; 0xffffffe4
   16ad4:	ldr	r1, [fp, #4]
   16ad8:	mov	r2, #0
   16adc:	mov	r3, #0
   16ae0:	strd	r2, [r1]
   16ae4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ae8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16aec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16af0:	bl	1503c <_start@@Base+0xa1c>
   16af4:	str	r0, [fp, #-52]	; 0xffffffcc
   16af8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16afc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16b00:	cmp	r2, r3
   16b04:	bne	16b10 <_start@@Base+0x24f0>
   16b08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b0c:	b	16c30 <_start@@Base+0x2610>
   16b10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16b14:	str	r3, [fp, #-16]
   16b18:	ldr	r3, [fp, #-16]
   16b1c:	ldr	r4, [r3]
   16b20:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b24:	str	r3, [fp, #-20]	; 0xffffffec
   16b28:	sub	r2, fp, #40	; 0x28
   16b2c:	sub	r3, fp, #44	; 0x2c
   16b30:	str	r3, [sp, #4]
   16b34:	sub	r3, fp, #36	; 0x24
   16b38:	str	r3, [sp]
   16b3c:	mov	r3, r2
   16b40:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16b44:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b48:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b4c:	blx	r4
   16b50:	str	r0, [fp, #-52]	; 0xffffffcc
   16b54:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16b58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16b5c:	cmp	r2, r3
   16b60:	bne	16b6c <_start@@Base+0x254c>
   16b64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16b68:	b	16c30 <_start@@Base+0x2610>
   16b6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b74:	cmp	r2, r3
   16b78:	bne	16b98 <_start@@Base+0x2578>
   16b7c:	ldr	r3, [fp, #-16]
   16b80:	add	r3, r3, #4
   16b84:	str	r3, [fp, #-16]
   16b88:	ldr	r3, [fp, #-16]
   16b8c:	ldr	r3, [r3]
   16b90:	cmp	r3, #0
   16b94:	bne	16b18 <_start@@Base+0x24f8>
   16b98:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b9c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16ba0:	cmp	r2, r3
   16ba4:	bne	16bc4 <_start@@Base+0x25a4>
   16ba8:	mov	r3, #23
   16bac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16bb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16bb4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16bb8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   16bbc:	mov	r3, r0
   16bc0:	b	16c30 <_start@@Base+0x2610>
   16bc4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16bc8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16bcc:	sub	r1, fp, #28
   16bd0:	str	r1, [sp, #8]
   16bd4:	strd	r2, [sp]
   16bd8:	mov	r3, r0
   16bdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16be0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16be4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16be8:	bl	158b4 <_start@@Base+0x1294>
   16bec:	mov	r2, r0
   16bf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16bf4:	cmp	r2, r3
   16bf8:	bne	16c04 <_start@@Base+0x25e4>
   16bfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c00:	b	16c30 <_start@@Base+0x2610>
   16c04:	ldr	r3, [fp, #4]
   16c08:	ldrd	r0, [r3]
   16c0c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16c10:	adds	r2, r2, r0
   16c14:	adc	r3, r3, r1
   16c18:	ldr	r1, [fp, #4]
   16c1c:	strd	r2, [r1]
   16c20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16c24:	cmp	r3, #0
   16c28:	bne	16b10 <_start@@Base+0x24f0>
   16c2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16c30:	mov	r0, r3
   16c34:	sub	sp, fp, #8
   16c38:	pop	{r4, fp, pc}
   16c3c:	push	{r4, fp, lr}
   16c40:	add	fp, sp, #8
   16c44:	sub	sp, sp, #68	; 0x44
   16c48:	str	r0, [fp, #-48]	; 0xffffffd0
   16c4c:	str	r1, [fp, #-52]	; 0xffffffcc
   16c50:	str	r2, [fp, #-56]	; 0xffffffc8
   16c54:	str	r3, [fp, #-60]	; 0xffffffc4
   16c58:	mov	r3, #0
   16c5c:	str	r3, [fp, #-24]	; 0xffffffe8
   16c60:	ldr	r3, [fp, #4]
   16c64:	mov	r2, #0
   16c68:	str	r2, [r3]
   16c6c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16c70:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c78:	bl	1503c <_start@@Base+0xa1c>
   16c7c:	str	r0, [fp, #-52]	; 0xffffffcc
   16c80:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16c84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16c88:	cmp	r2, r3
   16c8c:	bne	16c98 <_start@@Base+0x2678>
   16c90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16c94:	b	16db4 <_start@@Base+0x2794>
   16c98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16c9c:	str	r3, [fp, #-16]
   16ca0:	ldr	r3, [fp, #-16]
   16ca4:	ldr	r4, [r3]
   16ca8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16cac:	str	r3, [fp, #-20]	; 0xffffffec
   16cb0:	sub	r2, fp, #40	; 0x28
   16cb4:	sub	r3, fp, #44	; 0x2c
   16cb8:	str	r3, [sp, #4]
   16cbc:	sub	r3, fp, #36	; 0x24
   16cc0:	str	r3, [sp]
   16cc4:	mov	r3, r2
   16cc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ccc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16cd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16cd4:	blx	r4
   16cd8:	str	r0, [fp, #-52]	; 0xffffffcc
   16cdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16ce0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ce4:	cmp	r2, r3
   16ce8:	bne	16cf4 <_start@@Base+0x26d4>
   16cec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16cf0:	b	16db4 <_start@@Base+0x2794>
   16cf4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16cfc:	cmp	r2, r3
   16d00:	bne	16d20 <_start@@Base+0x2700>
   16d04:	ldr	r3, [fp, #-16]
   16d08:	add	r3, r3, #4
   16d0c:	str	r3, [fp, #-16]
   16d10:	ldr	r3, [fp, #-16]
   16d14:	ldr	r3, [r3]
   16d18:	cmp	r3, #0
   16d1c:	bne	16ca0 <_start@@Base+0x2680>
   16d20:	ldr	r2, [fp, #-20]	; 0xffffffec
   16d24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16d28:	cmp	r2, r3
   16d2c:	bne	16d4c <_start@@Base+0x272c>
   16d30:	mov	r3, #23
   16d34:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d38:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16d3c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16d40:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   16d44:	mov	r3, r0
   16d48:	b	16db4 <_start@@Base+0x2794>
   16d4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16d50:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16d54:	sub	r1, fp, #24
   16d58:	str	r1, [sp, #8]
   16d5c:	strd	r2, [sp]
   16d60:	mov	r3, r0
   16d64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d68:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16d6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16d70:	bl	15968 <_start@@Base+0x1348>
   16d74:	mov	r2, r0
   16d78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d7c:	cmp	r2, r3
   16d80:	bne	16d8c <_start@@Base+0x276c>
   16d84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16d88:	b	16db4 <_start@@Base+0x2794>
   16d8c:	ldr	r3, [fp, #4]
   16d90:	ldr	r2, [r3]
   16d94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d98:	add	r2, r2, r3
   16d9c:	ldr	r3, [fp, #4]
   16da0:	str	r2, [r3]
   16da4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16da8:	cmp	r3, #0
   16dac:	bne	16c98 <_start@@Base+0x2678>
   16db0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16db4:	mov	r0, r3
   16db8:	sub	sp, fp, #8
   16dbc:	pop	{r4, fp, pc}
   16dc0:	push	{r4, fp, lr}
   16dc4:	add	fp, sp, #8
   16dc8:	sub	sp, sp, #68	; 0x44
   16dcc:	str	r0, [fp, #-48]	; 0xffffffd0
   16dd0:	str	r1, [fp, #-52]	; 0xffffffcc
   16dd4:	str	r2, [fp, #-56]	; 0xffffffc8
   16dd8:	str	r3, [fp, #-60]	; 0xffffffc4
   16ddc:	mov	r3, #0
   16de0:	strh	r3, [fp, #-22]	; 0xffffffea
   16de4:	ldr	r3, [fp, #4]
   16de8:	mov	r2, #0
   16dec:	strh	r2, [r3]
   16df0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16df4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16df8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16dfc:	bl	1503c <_start@@Base+0xa1c>
   16e00:	str	r0, [fp, #-52]	; 0xffffffcc
   16e04:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16e08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16e0c:	cmp	r2, r3
   16e10:	bne	16e1c <_start@@Base+0x27fc>
   16e14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16e18:	b	16f48 <_start@@Base+0x2928>
   16e1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16e20:	str	r3, [fp, #-16]
   16e24:	ldr	r3, [fp, #-16]
   16e28:	ldr	r4, [r3]
   16e2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16e30:	str	r3, [fp, #-20]	; 0xffffffec
   16e34:	sub	r2, fp, #40	; 0x28
   16e38:	sub	r3, fp, #44	; 0x2c
   16e3c:	str	r3, [sp, #4]
   16e40:	sub	r3, fp, #36	; 0x24
   16e44:	str	r3, [sp]
   16e48:	mov	r3, r2
   16e4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16e50:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16e58:	blx	r4
   16e5c:	str	r0, [fp, #-52]	; 0xffffffcc
   16e60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16e64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16e68:	cmp	r2, r3
   16e6c:	bne	16e78 <_start@@Base+0x2858>
   16e70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16e74:	b	16f48 <_start@@Base+0x2928>
   16e78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e80:	cmp	r2, r3
   16e84:	bne	16ea4 <_start@@Base+0x2884>
   16e88:	ldr	r3, [fp, #-16]
   16e8c:	add	r3, r3, #4
   16e90:	str	r3, [fp, #-16]
   16e94:	ldr	r3, [fp, #-16]
   16e98:	ldr	r3, [r3]
   16e9c:	cmp	r3, #0
   16ea0:	bne	16e24 <_start@@Base+0x2804>
   16ea4:	ldr	r2, [fp, #-20]	; 0xffffffec
   16ea8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16eac:	cmp	r2, r3
   16eb0:	bne	16ed0 <_start@@Base+0x28b0>
   16eb4:	mov	r3, #23
   16eb8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ebc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16ec0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16ec4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   16ec8:	mov	r3, r0
   16ecc:	b	16f48 <_start@@Base+0x2928>
   16ed0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16ed4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16ed8:	sub	r1, fp, #22
   16edc:	str	r1, [sp, #8]
   16ee0:	strd	r2, [sp]
   16ee4:	mov	r3, r0
   16ee8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16eec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16ef0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16ef4:	bl	15a24 <_start@@Base+0x1404>
   16ef8:	mov	r2, r0
   16efc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f00:	cmp	r2, r3
   16f04:	bne	16f10 <_start@@Base+0x28f0>
   16f08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16f0c:	b	16f48 <_start@@Base+0x2928>
   16f10:	ldr	r3, [fp, #4]
   16f14:	ldrsh	r3, [r3]
   16f18:	uxth	r2, r3
   16f1c:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   16f20:	uxth	r3, r3
   16f24:	add	r3, r2, r3
   16f28:	uxth	r3, r3
   16f2c:	sxth	r2, r3
   16f30:	ldr	r3, [fp, #4]
   16f34:	strh	r2, [r3]
   16f38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16f3c:	cmp	r3, #0
   16f40:	bne	16e1c <_start@@Base+0x27fc>
   16f44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f48:	mov	r0, r3
   16f4c:	sub	sp, fp, #8
   16f50:	pop	{r4, fp, pc}
   16f54:	push	{r4, fp, lr}
   16f58:	add	fp, sp, #8
   16f5c:	sub	sp, sp, #68	; 0x44
   16f60:	str	r0, [fp, #-48]	; 0xffffffd0
   16f64:	str	r1, [fp, #-52]	; 0xffffffcc
   16f68:	str	r2, [fp, #-56]	; 0xffffffc8
   16f6c:	str	r3, [fp, #-60]	; 0xffffffc4
   16f70:	mov	r3, #0
   16f74:	strb	r3, [fp, #-21]	; 0xffffffeb
   16f78:	ldr	r3, [fp, #4]
   16f7c:	mov	r2, #0
   16f80:	strb	r2, [r3]
   16f84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16f88:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16f8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f90:	bl	1503c <_start@@Base+0xa1c>
   16f94:	str	r0, [fp, #-52]	; 0xffffffcc
   16f98:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16f9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16fa0:	cmp	r2, r3
   16fa4:	bne	16fb0 <_start@@Base+0x2990>
   16fa8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16fac:	b	170dc <_start@@Base+0x2abc>
   16fb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16fb4:	str	r3, [fp, #-16]
   16fb8:	ldr	r3, [fp, #-16]
   16fbc:	ldr	r4, [r3]
   16fc0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16fc4:	str	r3, [fp, #-20]	; 0xffffffec
   16fc8:	sub	r2, fp, #40	; 0x28
   16fcc:	sub	r3, fp, #44	; 0x2c
   16fd0:	str	r3, [sp, #4]
   16fd4:	sub	r3, fp, #36	; 0x24
   16fd8:	str	r3, [sp]
   16fdc:	mov	r3, r2
   16fe0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16fe4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16fe8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16fec:	blx	r4
   16ff0:	str	r0, [fp, #-52]	; 0xffffffcc
   16ff4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16ff8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16ffc:	cmp	r2, r3
   17000:	bne	1700c <_start@@Base+0x29ec>
   17004:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17008:	b	170dc <_start@@Base+0x2abc>
   1700c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17010:	ldr	r3, [fp, #-20]	; 0xffffffec
   17014:	cmp	r2, r3
   17018:	bne	17038 <_start@@Base+0x2a18>
   1701c:	ldr	r3, [fp, #-16]
   17020:	add	r3, r3, #4
   17024:	str	r3, [fp, #-16]
   17028:	ldr	r3, [fp, #-16]
   1702c:	ldr	r3, [r3]
   17030:	cmp	r3, #0
   17034:	bne	16fb8 <_start@@Base+0x2998>
   17038:	ldr	r2, [fp, #-20]	; 0xffffffec
   1703c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17040:	cmp	r2, r3
   17044:	bne	17064 <_start@@Base+0x2a44>
   17048:	mov	r3, #23
   1704c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17050:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17054:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17058:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1705c:	mov	r3, r0
   17060:	b	170dc <_start@@Base+0x2abc>
   17064:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17068:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1706c:	sub	r1, fp, #21
   17070:	str	r1, [sp, #8]
   17074:	strd	r2, [sp]
   17078:	mov	r3, r0
   1707c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17080:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17084:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17088:	bl	15ae8 <_start@@Base+0x14c8>
   1708c:	mov	r2, r0
   17090:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17094:	cmp	r2, r3
   17098:	bne	170a4 <_start@@Base+0x2a84>
   1709c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   170a0:	b	170dc <_start@@Base+0x2abc>
   170a4:	ldr	r3, [fp, #4]
   170a8:	ldrsb	r3, [r3]
   170ac:	uxtb	r2, r3
   170b0:	ldrsb	r3, [fp, #-21]	; 0xffffffeb
   170b4:	uxtb	r3, r3
   170b8:	add	r3, r2, r3
   170bc:	uxtb	r3, r3
   170c0:	sxtb	r2, r3
   170c4:	ldr	r3, [fp, #4]
   170c8:	strb	r2, [r3]
   170cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   170d0:	cmp	r3, #0
   170d4:	bne	16fb0 <_start@@Base+0x2990>
   170d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170dc:	mov	r0, r3
   170e0:	sub	sp, fp, #8
   170e4:	pop	{r4, fp, pc}
   170e8:	push	{r4, fp, lr}
   170ec:	add	fp, sp, #8
   170f0:	sub	sp, sp, #68	; 0x44
   170f4:	str	r0, [fp, #-48]	; 0xffffffd0
   170f8:	str	r1, [fp, #-52]	; 0xffffffcc
   170fc:	str	r2, [fp, #-56]	; 0xffffffc8
   17100:	str	r3, [fp, #-60]	; 0xffffffc4
   17104:	mov	r3, #0
   17108:	strb	r3, [fp, #-21]	; 0xffffffeb
   1710c:	ldr	r3, [fp, #4]
   17110:	mov	r2, #0
   17114:	strb	r2, [r3]
   17118:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1711c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17120:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17124:	bl	1503c <_start@@Base+0xa1c>
   17128:	str	r0, [fp, #-52]	; 0xffffffcc
   1712c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17130:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17134:	cmp	r2, r3
   17138:	bne	17144 <_start@@Base+0x2b24>
   1713c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17140:	b	17264 <_start@@Base+0x2c44>
   17144:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17148:	str	r3, [fp, #-16]
   1714c:	ldr	r3, [fp, #-16]
   17150:	ldr	r4, [r3]
   17154:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17158:	str	r3, [fp, #-20]	; 0xffffffec
   1715c:	sub	r2, fp, #40	; 0x28
   17160:	sub	r3, fp, #44	; 0x2c
   17164:	str	r3, [sp, #4]
   17168:	sub	r3, fp, #36	; 0x24
   1716c:	str	r3, [sp]
   17170:	mov	r3, r2
   17174:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17178:	ldr	r1, [fp, #-20]	; 0xffffffec
   1717c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17180:	blx	r4
   17184:	str	r0, [fp, #-52]	; 0xffffffcc
   17188:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1718c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17190:	cmp	r2, r3
   17194:	bne	171a0 <_start@@Base+0x2b80>
   17198:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1719c:	b	17264 <_start@@Base+0x2c44>
   171a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   171a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   171a8:	cmp	r2, r3
   171ac:	bne	171cc <_start@@Base+0x2bac>
   171b0:	ldr	r3, [fp, #-16]
   171b4:	add	r3, r3, #4
   171b8:	str	r3, [fp, #-16]
   171bc:	ldr	r3, [fp, #-16]
   171c0:	ldr	r3, [r3]
   171c4:	cmp	r3, #0
   171c8:	bne	1714c <_start@@Base+0x2b2c>
   171cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   171d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171d4:	cmp	r2, r3
   171d8:	bne	171f8 <_start@@Base+0x2bd8>
   171dc:	mov	r3, #23
   171e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   171e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   171e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   171ec:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   171f0:	mov	r3, r0
   171f4:	b	17264 <_start@@Base+0x2c44>
   171f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   171fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17200:	sub	r1, fp, #21
   17204:	str	r1, [sp, #8]
   17208:	strd	r2, [sp]
   1720c:	mov	r3, r0
   17210:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17214:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17218:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1721c:	bl	15680 <_start@@Base+0x1060>
   17220:	mov	r2, r0
   17224:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17228:	cmp	r2, r3
   1722c:	bne	17238 <_start@@Base+0x2c18>
   17230:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17234:	b	17264 <_start@@Base+0x2c44>
   17238:	ldr	r3, [fp, #4]
   1723c:	ldrb	r2, [r3]
   17240:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   17244:	add	r3, r2, r3
   17248:	uxtb	r2, r3
   1724c:	ldr	r3, [fp, #4]
   17250:	strb	r2, [r3]
   17254:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17258:	cmp	r3, #0
   1725c:	bne	17144 <_start@@Base+0x2b24>
   17260:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17264:	mov	r0, r3
   17268:	sub	sp, fp, #8
   1726c:	pop	{r4, fp, pc}
   17270:	push	{r4, fp, lr}
   17274:	add	fp, sp, #8
   17278:	sub	sp, sp, #68	; 0x44
   1727c:	str	r0, [fp, #-48]	; 0xffffffd0
   17280:	str	r1, [fp, #-52]	; 0xffffffcc
   17284:	str	r2, [fp, #-56]	; 0xffffffc8
   17288:	str	r3, [fp, #-60]	; 0xffffffc4
   1728c:	mov	r3, #0
   17290:	str	r3, [fp, #-24]	; 0xffffffe8
   17294:	ldr	r3, [fp, #4]
   17298:	mov	r2, #0
   1729c:	str	r2, [r3]
   172a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   172a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   172a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   172ac:	bl	1503c <_start@@Base+0xa1c>
   172b0:	str	r0, [fp, #-52]	; 0xffffffcc
   172b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   172b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   172bc:	cmp	r2, r3
   172c0:	bne	172cc <_start@@Base+0x2cac>
   172c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172c8:	b	173e8 <_start@@Base+0x2dc8>
   172cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   172d0:	str	r3, [fp, #-16]
   172d4:	ldr	r3, [fp, #-16]
   172d8:	ldr	r4, [r3]
   172dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172e0:	str	r3, [fp, #-20]	; 0xffffffec
   172e4:	sub	r2, fp, #40	; 0x28
   172e8:	sub	r3, fp, #44	; 0x2c
   172ec:	str	r3, [sp, #4]
   172f0:	sub	r3, fp, #36	; 0x24
   172f4:	str	r3, [sp]
   172f8:	mov	r3, r2
   172fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17300:	ldr	r1, [fp, #-20]	; 0xffffffec
   17304:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17308:	blx	r4
   1730c:	str	r0, [fp, #-52]	; 0xffffffcc
   17310:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17314:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17318:	cmp	r2, r3
   1731c:	bne	17328 <_start@@Base+0x2d08>
   17320:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17324:	b	173e8 <_start@@Base+0x2dc8>
   17328:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1732c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17330:	cmp	r2, r3
   17334:	bne	17354 <_start@@Base+0x2d34>
   17338:	ldr	r3, [fp, #-16]
   1733c:	add	r3, r3, #4
   17340:	str	r3, [fp, #-16]
   17344:	ldr	r3, [fp, #-16]
   17348:	ldr	r3, [r3]
   1734c:	cmp	r3, #0
   17350:	bne	172d4 <_start@@Base+0x2cb4>
   17354:	ldr	r2, [fp, #-20]	; 0xffffffec
   17358:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1735c:	cmp	r2, r3
   17360:	bne	17380 <_start@@Base+0x2d60>
   17364:	mov	r3, #23
   17368:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1736c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17370:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17374:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   17378:	mov	r3, r0
   1737c:	b	173e8 <_start@@Base+0x2dc8>
   17380:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17384:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17388:	sub	r1, fp, #24
   1738c:	str	r1, [sp, #8]
   17390:	strd	r2, [sp]
   17394:	mov	r3, r0
   17398:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1739c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   173a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   173a4:	bl	15ba0 <_start@@Base+0x1580>
   173a8:	mov	r2, r0
   173ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   173b0:	cmp	r2, r3
   173b4:	bne	173c0 <_start@@Base+0x2da0>
   173b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   173bc:	b	173e8 <_start@@Base+0x2dc8>
   173c0:	ldr	r3, [fp, #4]
   173c4:	vldr	s14, [r3]
   173c8:	vldr	s15, [fp, #-24]	; 0xffffffe8
   173cc:	vadd.f32	s15, s14, s15
   173d0:	ldr	r3, [fp, #4]
   173d4:	vstr	s15, [r3]
   173d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   173dc:	cmp	r3, #0
   173e0:	bne	172cc <_start@@Base+0x2cac>
   173e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   173e8:	mov	r0, r3
   173ec:	sub	sp, fp, #8
   173f0:	pop	{r4, fp, pc}
   173f4:	push	{r4, fp, lr}
   173f8:	add	fp, sp, #8
   173fc:	sub	sp, sp, #68	; 0x44
   17400:	str	r0, [fp, #-48]	; 0xffffffd0
   17404:	str	r1, [fp, #-52]	; 0xffffffcc
   17408:	str	r2, [fp, #-56]	; 0xffffffc8
   1740c:	str	r3, [fp, #-60]	; 0xffffffc4
   17410:	mov	r2, #0
   17414:	mov	r3, #0
   17418:	strd	r2, [fp, #-28]	; 0xffffffe4
   1741c:	ldr	r1, [fp, #4]
   17420:	mov	r2, #0
   17424:	mov	r3, #0
   17428:	strd	r2, [r1]
   1742c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17430:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17434:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17438:	bl	1503c <_start@@Base+0xa1c>
   1743c:	str	r0, [fp, #-52]	; 0xffffffcc
   17440:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17444:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17448:	cmp	r2, r3
   1744c:	bne	17458 <_start@@Base+0x2e38>
   17450:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17454:	b	17574 <_start@@Base+0x2f54>
   17458:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1745c:	str	r3, [fp, #-16]
   17460:	ldr	r3, [fp, #-16]
   17464:	ldr	r4, [r3]
   17468:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1746c:	str	r3, [fp, #-20]	; 0xffffffec
   17470:	sub	r2, fp, #40	; 0x28
   17474:	sub	r3, fp, #44	; 0x2c
   17478:	str	r3, [sp, #4]
   1747c:	sub	r3, fp, #36	; 0x24
   17480:	str	r3, [sp]
   17484:	mov	r3, r2
   17488:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1748c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17490:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17494:	blx	r4
   17498:	str	r0, [fp, #-52]	; 0xffffffcc
   1749c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   174a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   174a4:	cmp	r2, r3
   174a8:	bne	174b4 <_start@@Base+0x2e94>
   174ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   174b0:	b	17574 <_start@@Base+0x2f54>
   174b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   174b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   174bc:	cmp	r2, r3
   174c0:	bne	174e0 <_start@@Base+0x2ec0>
   174c4:	ldr	r3, [fp, #-16]
   174c8:	add	r3, r3, #4
   174cc:	str	r3, [fp, #-16]
   174d0:	ldr	r3, [fp, #-16]
   174d4:	ldr	r3, [r3]
   174d8:	cmp	r3, #0
   174dc:	bne	17460 <_start@@Base+0x2e40>
   174e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   174e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   174e8:	cmp	r2, r3
   174ec:	bne	1750c <_start@@Base+0x2eec>
   174f0:	mov	r3, #23
   174f4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   174f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   174fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17500:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   17504:	mov	r3, r0
   17508:	b	17574 <_start@@Base+0x2f54>
   1750c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17510:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   17514:	sub	r1, fp, #28
   17518:	str	r1, [sp, #8]
   1751c:	strd	r2, [sp]
   17520:	mov	r3, r0
   17524:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17528:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1752c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17530:	bl	15c00 <_start@@Base+0x15e0>
   17534:	mov	r2, r0
   17538:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1753c:	cmp	r2, r3
   17540:	bne	1754c <_start@@Base+0x2f2c>
   17544:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17548:	b	17574 <_start@@Base+0x2f54>
   1754c:	ldr	r3, [fp, #4]
   17550:	vldr	d6, [r3]
   17554:	vldr	d7, [fp, #-28]	; 0xffffffe4
   17558:	vadd.f64	d7, d6, d7
   1755c:	ldr	r3, [fp, #4]
   17560:	vstr	d7, [r3]
   17564:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17568:	cmp	r3, #0
   1756c:	bne	17458 <_start@@Base+0x2e38>
   17570:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17574:	mov	r0, r3
   17578:	sub	sp, fp, #8
   1757c:	pop	{r4, fp, pc}
   17580:	push	{fp, lr}
   17584:	add	fp, sp, #4
   17588:	sub	sp, sp, #48	; 0x30
   1758c:	str	r0, [fp, #-32]	; 0xffffffe0
   17590:	str	r1, [fp, #-36]	; 0xffffffdc
   17594:	str	r2, [fp, #-40]	; 0xffffffd8
   17598:	str	r3, [fp, #-44]	; 0xffffffd4
   1759c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175a0:	str	r3, [fp, #-8]
   175a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   175a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   175ac:	bl	14f70 <_start@@Base+0x950>
   175b0:	strd	r0, [fp, #-20]	; 0xffffffec
   175b4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   175b8:	mov	r0, #0
   175bc:	mvn	r1, #255	; 0xff
   175c0:	and	r2, r2, r0
   175c4:	and	r3, r3, r1
   175c8:	add	r1, pc, #336	; 0x150
   175cc:	ldrd	r0, [r1]
   175d0:	cmp	r3, r1
   175d4:	cmpeq	r2, r0
   175d8:	bne	17634 <_start@@Base+0x3014>
   175dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175e0:	str	r3, [fp, #-24]	; 0xffffffe8
   175e4:	ldr	r3, [fp, #8]
   175e8:	str	r3, [sp]
   175ec:	mov	r3, #3
   175f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   175f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   175fc:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   17600:	str	r0, [fp, #-36]	; 0xffffffdc
   17604:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1760c:	cmp	r2, r3
   17610:	beq	1763c <_start@@Base+0x301c>
   17614:	ldr	r1, [fp, #4]
   17618:	mov	r2, #17
   1761c:	mov	r3, #0
   17620:	strd	r2, [r1]
   17624:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17628:	mov	r2, #0
   1762c:	str	r2, [r3]
   17630:	b	1770c <_start@@Base+0x30ec>
   17634:	nop			; (mov r0, r0)
   17638:	b	17640 <_start@@Base+0x3020>
   1763c:	nop			; (mov r0, r0)
   17640:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17644:	add	r1, pc, #220	; 0xdc
   17648:	ldrd	r0, [r1]
   1764c:	cmp	r3, r1
   17650:	cmpeq	r2, r0
   17654:	bne	17704 <_start@@Base+0x30e4>
   17658:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1765c:	add	r3, r3, #8
   17660:	str	r3, [fp, #-36]	; 0xffffffdc
   17664:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17668:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1766c:	bl	14f70 <_start@@Base+0x950>
   17670:	strd	r0, [fp, #-20]	; 0xffffffec
   17674:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17678:	mov	r0, #0
   1767c:	ldr	r1, [pc, #172]	; 17730 <_start@@Base+0x3110>
   17680:	and	r2, r2, r0
   17684:	and	r3, r3, r1
   17688:	mov	r0, #0
   1768c:	ldr	r1, [pc, #160]	; 17734 <_start@@Base+0x3114>
   17690:	cmp	r3, r1
   17694:	cmpeq	r2, r0
   17698:	bne	176fc <_start@@Base+0x30dc>
   1769c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   176a0:	str	r3, [fp, #-24]	; 0xffffffe8
   176a4:	ldr	r3, [fp, #8]
   176a8:	str	r3, [sp]
   176ac:	mov	r3, #2
   176b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   176b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   176b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   176bc:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   176c0:	str	r0, [fp, #-36]	; 0xffffffdc
   176c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   176c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   176cc:	cmp	r2, r3
   176d0:	beq	176f4 <_start@@Base+0x30d4>
   176d4:	ldr	r1, [fp, #4]
   176d8:	mov	r2, #0
   176dc:	mov	r3, #0
   176e0:	strd	r2, [r1]
   176e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   176e8:	mov	r2, #0
   176ec:	str	r2, [r3]
   176f0:	b	1770c <_start@@Base+0x30ec>
   176f4:	ldr	r3, [fp, #-8]
   176f8:	b	17710 <_start@@Base+0x30f0>
   176fc:	ldr	r3, [fp, #-8]
   17700:	b	17710 <_start@@Base+0x30f0>
   17704:	ldr	r3, [fp, #-8]
   17708:	b	17710 <_start@@Base+0x30f0>
   1770c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17710:	mov	r0, r3
   17714:	sub	sp, fp, #4
   17718:	pop	{fp, pc}
   1771c:	nop			; (mov r0, r0)
   17720:	andeq	r0, r0, r0
   17724:	strbtmi	r6, [pc], -r0, lsl #30
   17728:	strbvc	r6, [r4, #-1366]!	; 0xfffffaaa
   1772c:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   17730:			; <UNDEFINED> instruction: 0xffff0000
   17734:	cmnvs	ip, r0
   17738:	push	{fp, lr}
   1773c:	add	fp, sp, #4
   17740:	sub	sp, sp, #24
   17744:	str	r0, [fp, #-16]
   17748:	str	r1, [fp, #-20]	; 0xffffffec
   1774c:	str	r2, [fp, #-24]	; 0xffffffe8
   17750:	str	r3, [fp, #-28]	; 0xffffffe4
   17754:	sub	r3, fp, #8
   17758:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1775c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17760:	ldr	r0, [fp, #-16]
   17764:	bl	1508c <_start@@Base+0xa6c>
   17768:	str	r0, [fp, #-20]	; 0xffffffec
   1776c:	b	1779c <_start@@Base+0x317c>
   17770:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17774:	ldr	r1, [fp, #-20]	; 0xffffffec
   17778:	ldr	r0, [fp, #-16]
   1777c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   17780:	str	r0, [fp, #-20]	; 0xffffffec
   17784:	sub	r3, fp, #8
   17788:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1778c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17790:	ldr	r0, [fp, #-16]
   17794:	bl	15174 <_start@@Base+0xb54>
   17798:	str	r0, [fp, #-20]	; 0xffffffec
   1779c:	ldr	r3, [fp, #-8]
   177a0:	cmp	r3, #0
   177a4:	bne	17770 <_start@@Base+0x3150>
   177a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   177ac:	mov	r0, r3
   177b0:	sub	sp, fp, #4
   177b4:	pop	{fp, pc}
   177b8:	push	{fp, lr}
   177bc:	add	fp, sp, #4
   177c0:	sub	sp, sp, #24
   177c4:	str	r0, [fp, #-16]
   177c8:	str	r1, [fp, #-20]	; 0xffffffec
   177cc:	str	r2, [fp, #-24]	; 0xffffffe8
   177d0:	str	r3, [fp, #-28]	; 0xffffffe4
   177d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   177d8:	mov	r2, #0
   177dc:	str	r2, [r3]
   177e0:	ldr	r3, [fp, #-16]
   177e4:	ldr	r3, [r3]
   177e8:	mov	r2, #1
   177ec:	mov	r1, #0
   177f0:	mov	r0, r3
   177f4:	bl	2deac <flatcc_builder_start_struct@@Base>
   177f8:	str	r0, [fp, #-8]
   177fc:	ldr	r3, [fp, #-8]
   17800:	cmp	r3, #0
   17804:	beq	17864 <_start@@Base+0x3244>
   17808:	ldr	r3, [fp, #-8]
   1780c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17810:	ldr	r1, [fp, #-20]	; 0xffffffec
   17814:	ldr	r0, [fp, #-16]
   17818:	bl	17738 <_start@@Base+0x3118>
   1781c:	str	r0, [fp, #-20]	; 0xffffffec
   17820:	ldr	r2, [fp, #-20]	; 0xffffffec
   17824:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17828:	cmp	r2, r3
   1782c:	beq	17868 <_start@@Base+0x3248>
   17830:	ldr	r3, [fp, #-16]
   17834:	ldr	r3, [r3]
   17838:	mov	r0, r3
   1783c:	bl	2df4c <flatcc_builder_end_struct@@Base>
   17840:	mov	r2, r0
   17844:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17848:	str	r2, [r3]
   1784c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17850:	ldr	r3, [r3]
   17854:	cmp	r3, #0
   17858:	beq	17868 <_start@@Base+0x3248>
   1785c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17860:	b	17880 <_start@@Base+0x3260>
   17864:	nop			; (mov r0, r0)
   17868:	mov	r3, #33	; 0x21
   1786c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17870:	ldr	r1, [fp, #-20]	; 0xffffffec
   17874:	ldr	r0, [fp, #-16]
   17878:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1787c:	mov	r3, r0
   17880:	mov	r0, r3
   17884:	sub	sp, fp, #4
   17888:	pop	{fp, pc}
   1788c:	push	{fp}		; (str fp, [sp, #-4]!)
   17890:	add	fp, sp, #0
   17894:	sub	sp, sp, #20
   17898:	str	r0, [fp, #-8]
   1789c:	str	r1, [fp, #-12]
   178a0:	str	r2, [fp, #-16]
   178a4:	str	r3, [fp, #-20]	; 0xffffffec
   178a8:	ldr	r3, [fp, #-12]
   178ac:	mov	r0, r3
   178b0:	add	sp, fp, #0
   178b4:	pop	{fp}		; (ldr fp, [sp], #4)
   178b8:	bx	lr
   178bc:	push	{fp}		; (str fp, [sp, #-4]!)
   178c0:	add	fp, sp, #0
   178c4:	sub	sp, sp, #20
   178c8:	str	r0, [fp, #-8]
   178cc:	str	r1, [fp, #-12]
   178d0:	str	r2, [fp, #-16]
   178d4:	str	r3, [fp, #-20]	; 0xffffffec
   178d8:	ldr	r3, [fp, #-12]
   178dc:	mov	r0, r3
   178e0:	add	sp, fp, #0
   178e4:	pop	{fp}		; (ldr fp, [sp], #4)
   178e8:	bx	lr
   178ec:	push	{fp}		; (str fp, [sp, #-4]!)
   178f0:	add	fp, sp, #0
   178f4:	sub	sp, sp, #20
   178f8:	str	r0, [fp, #-8]
   178fc:	str	r1, [fp, #-12]
   17900:	str	r2, [fp, #-16]
   17904:	str	r3, [fp, #-20]	; 0xffffffec
   17908:	ldr	r3, [fp, #-12]
   1790c:	mov	r0, r3
   17910:	add	sp, fp, #0
   17914:	pop	{fp}		; (ldr fp, [sp], #4)
   17918:	bx	lr
   1791c:	push	{fp}		; (str fp, [sp, #-4]!)
   17920:	add	fp, sp, #0
   17924:	sub	sp, sp, #20
   17928:	str	r0, [fp, #-8]
   1792c:	str	r1, [fp, #-12]
   17930:	str	r2, [fp, #-16]
   17934:	str	r3, [fp, #-20]	; 0xffffffec
   17938:	ldr	r3, [fp, #-12]
   1793c:	mov	r0, r3
   17940:	add	sp, fp, #0
   17944:	pop	{fp}		; (ldr fp, [sp], #4)
   17948:	bx	lr
   1794c:	push	{fp}		; (str fp, [sp, #-4]!)
   17950:	add	fp, sp, #0
   17954:	sub	sp, sp, #20
   17958:	str	r0, [fp, #-8]
   1795c:	str	r1, [fp, #-12]
   17960:	str	r2, [fp, #-16]
   17964:	str	r3, [fp, #-20]	; 0xffffffec
   17968:	ldr	r3, [fp, #-12]
   1796c:	mov	r0, r3
   17970:	add	sp, fp, #0
   17974:	pop	{fp}		; (ldr fp, [sp], #4)
   17978:	bx	lr
   1797c:	push	{fp, lr}
   17980:	add	fp, sp, #4
   17984:	sub	sp, sp, #48	; 0x30
   17988:	str	r0, [fp, #-32]	; 0xffffffe0
   1798c:	str	r1, [fp, #-36]	; 0xffffffdc
   17990:	str	r2, [fp, #-40]	; 0xffffffd8
   17994:	str	r3, [fp, #-44]	; 0xffffffd4
   17998:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1799c:	str	r3, [fp, #-8]
   179a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   179a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   179a8:	bl	14f70 <_start@@Base+0x950>
   179ac:	strd	r0, [fp, #-20]	; 0xffffffec
   179b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   179b4:	add	r1, pc, #212	; 0xd4
   179b8:	ldrd	r0, [r1]
   179bc:	cmp	r3, r1
   179c0:	cmpeq	r2, r0
   179c4:	bne	17a7c <_start@@Base+0x345c>
   179c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   179cc:	add	r3, r3, #8
   179d0:	str	r3, [fp, #-36]	; 0xffffffdc
   179d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   179d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   179dc:	bl	14f70 <_start@@Base+0x950>
   179e0:	strd	r0, [fp, #-20]	; 0xffffffec
   179e4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   179e8:	mov	r0, #0
   179ec:	mvn	r1, #255	; 0xff
   179f0:	and	r2, r2, r0
   179f4:	and	r3, r3, r1
   179f8:	add	r1, pc, #152	; 0x98
   179fc:	ldrd	r0, [r1]
   17a00:	cmp	r3, r1
   17a04:	cmpeq	r2, r0
   17a08:	bne	17a74 <_start@@Base+0x3454>
   17a0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a10:	str	r3, [fp, #-24]	; 0xffffffe8
   17a14:	mov	r3, #3
   17a18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a24:	bl	14fb8 <_start@@Base+0x998>
   17a28:	str	r0, [fp, #-36]	; 0xffffffdc
   17a2c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17a30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17a34:	cmp	r2, r3
   17a38:	beq	17a6c <_start@@Base+0x344c>
   17a3c:	ldr	r3, [fp, #8]
   17a40:	str	r3, [sp, #4]
   17a44:	ldr	r3, [fp, #4]
   17a48:	str	r3, [sp]
   17a4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17a50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17a54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17a58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17a5c:	bl	17580 <_start@@Base+0x2f60>
   17a60:	str	r0, [fp, #-36]	; 0xffffffdc
   17a64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a68:	b	17a80 <_start@@Base+0x3460>
   17a6c:	ldr	r3, [fp, #-8]
   17a70:	b	17a80 <_start@@Base+0x3460>
   17a74:	ldr	r3, [fp, #-8]
   17a78:	b	17a80 <_start@@Base+0x3460>
   17a7c:	ldr	r3, [fp, #-8]
   17a80:	mov	r0, r3
   17a84:	sub	sp, fp, #4
   17a88:	pop	{fp, pc}
   17a8c:	nop			; (mov r0, r0)
   17a90:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   17a94:	ldrbtmi	r6, [r2], -sp, ror #30
   17a98:	andeq	r0, r0, r0
   17a9c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   17aa0:	push	{fp, lr}
   17aa4:	add	fp, sp, #4
   17aa8:	sub	sp, sp, #48	; 0x30
   17aac:	str	r0, [fp, #-32]	; 0xffffffe0
   17ab0:	str	r1, [fp, #-36]	; 0xffffffdc
   17ab4:	str	r2, [fp, #-40]	; 0xffffffd8
   17ab8:	str	r3, [fp, #-44]	; 0xffffffd4
   17abc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ac0:	str	r3, [fp, #-8]
   17ac4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17ac8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17acc:	bl	14f70 <_start@@Base+0x950>
   17ad0:	strd	r0, [fp, #-20]	; 0xffffffec
   17ad4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17ad8:	add	r1, pc, #384	; 0x180
   17adc:	ldrd	r0, [r1]
   17ae0:	cmp	r3, r1
   17ae4:	cmpeq	r2, r0
   17ae8:	bne	17c4c <_start@@Base+0x362c>
   17aec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17af0:	add	r3, r3, #8
   17af4:	str	r3, [fp, #-36]	; 0xffffffdc
   17af8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17afc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b00:	bl	14f70 <_start@@Base+0x950>
   17b04:	strd	r0, [fp, #-20]	; 0xffffffec
   17b08:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17b0c:	add	r1, pc, #340	; 0x154
   17b10:	ldrd	r0, [r1]
   17b14:	cmp	r3, r1
   17b18:	cmpeq	r2, r0
   17b1c:	bne	17c44 <_start@@Base+0x3624>
   17b20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b24:	add	r3, r3, #8
   17b28:	str	r3, [fp, #-36]	; 0xffffffdc
   17b2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b30:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b34:	bl	14f70 <_start@@Base+0x950>
   17b38:	strd	r0, [fp, #-20]	; 0xffffffec
   17b3c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17b40:	add	r1, pc, #296	; 0x128
   17b44:	ldrd	r0, [r1]
   17b48:	cmp	r3, r1
   17b4c:	cmpeq	r2, r0
   17b50:	bne	17c3c <_start@@Base+0x361c>
   17b54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b58:	add	r3, r3, #8
   17b5c:	str	r3, [fp, #-36]	; 0xffffffdc
   17b60:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b68:	bl	14f70 <_start@@Base+0x950>
   17b6c:	strd	r0, [fp, #-20]	; 0xffffffec
   17b70:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17b74:	add	r1, pc, #252	; 0xfc
   17b78:	ldrd	r0, [r1]
   17b7c:	cmp	r3, r1
   17b80:	cmpeq	r2, r0
   17b84:	bne	17c34 <_start@@Base+0x3614>
   17b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17b8c:	add	r3, r3, #8
   17b90:	str	r3, [fp, #-36]	; 0xffffffdc
   17b94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17b98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17b9c:	bl	14f70 <_start@@Base+0x950>
   17ba0:	strd	r0, [fp, #-20]	; 0xffffffec
   17ba4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17ba8:	mov	r0, #0
   17bac:	mov	r1, #-16777216	; 0xff000000
   17bb0:	and	r2, r2, r0
   17bb4:	and	r3, r3, r1
   17bb8:	cmp	r3, #1694498816	; 0x65000000
   17bbc:	cmpeq	r2, #0
   17bc0:	bne	17c2c <_start@@Base+0x360c>
   17bc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17bc8:	str	r3, [fp, #-24]	; 0xffffffe8
   17bcc:	mov	r3, #1
   17bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17bd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17bdc:	bl	14fb8 <_start@@Base+0x998>
   17be0:	str	r0, [fp, #-36]	; 0xffffffdc
   17be4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17bec:	cmp	r2, r3
   17bf0:	beq	17c24 <_start@@Base+0x3604>
   17bf4:	ldr	r3, [fp, #8]
   17bf8:	str	r3, [sp, #4]
   17bfc:	ldr	r3, [fp, #4]
   17c00:	str	r3, [sp]
   17c04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17c08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17c0c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17c10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17c14:	bl	17580 <_start@@Base+0x2f60>
   17c18:	str	r0, [fp, #-36]	; 0xffffffdc
   17c1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17c20:	b	17c50 <_start@@Base+0x3630>
   17c24:	ldr	r3, [fp, #-8]
   17c28:	b	17c50 <_start@@Base+0x3630>
   17c2c:	ldr	r3, [fp, #-8]
   17c30:	b	17c50 <_start@@Base+0x3630>
   17c34:	ldr	r3, [fp, #-8]
   17c38:	b	17c50 <_start@@Base+0x3630>
   17c3c:	ldr	r3, [fp, #-8]
   17c40:	b	17c50 <_start@@Base+0x3630>
   17c44:	ldr	r3, [fp, #-8]
   17c48:	b	17c50 <_start@@Base+0x3630>
   17c4c:	ldr	r3, [fp, #-8]
   17c50:	mov	r0, r3
   17c54:	sub	sp, fp, #4
   17c58:	pop	{fp, pc}
   17c5c:	nop			; (mov r0, r0)
   17c60:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   17c64:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   17c68:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   17c6c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   17c70:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   17c74:	cmnpl	r0, #-1073741800	; 0xc0000018
   17c78:	cmnvs	ip, #100, 10	; 0x19000000
   17c7c:	svcvs	0x006d496e
   17c80:	push	{fp}		; (str fp, [sp, #-4]!)
   17c84:	add	fp, sp, #0
   17c88:	sub	sp, sp, #20
   17c8c:	str	r0, [fp, #-8]
   17c90:	str	r1, [fp, #-12]
   17c94:	str	r2, [fp, #-16]
   17c98:	str	r3, [fp, #-20]	; 0xffffffec
   17c9c:	ldr	r3, [fp, #-12]
   17ca0:	mov	r0, r3
   17ca4:	add	sp, fp, #0
   17ca8:	pop	{fp}		; (ldr fp, [sp], #4)
   17cac:	bx	lr
   17cb0:	push	{fp}		; (str fp, [sp, #-4]!)
   17cb4:	add	fp, sp, #0
   17cb8:	sub	sp, sp, #20
   17cbc:	str	r0, [fp, #-8]
   17cc0:	str	r1, [fp, #-12]
   17cc4:	str	r2, [fp, #-16]
   17cc8:	str	r3, [fp, #-20]	; 0xffffffec
   17ccc:	ldr	r3, [fp, #-12]
   17cd0:	mov	r0, r3
   17cd4:	add	sp, fp, #0
   17cd8:	pop	{fp}		; (ldr fp, [sp], #4)
   17cdc:	bx	lr
   17ce0:	push	{fp}		; (str fp, [sp, #-4]!)
   17ce4:	add	fp, sp, #0
   17ce8:	sub	sp, sp, #20
   17cec:	str	r0, [fp, #-8]
   17cf0:	str	r1, [fp, #-12]
   17cf4:	str	r2, [fp, #-16]
   17cf8:	str	r3, [fp, #-20]	; 0xffffffec
   17cfc:	ldr	r3, [fp, #-12]
   17d00:	mov	r0, r3
   17d04:	add	sp, fp, #0
   17d08:	pop	{fp}		; (ldr fp, [sp], #4)
   17d0c:	bx	lr
   17d10:	push	{fp}		; (str fp, [sp, #-4]!)
   17d14:	add	fp, sp, #0
   17d18:	sub	sp, sp, #20
   17d1c:	str	r0, [fp, #-8]
   17d20:	str	r1, [fp, #-12]
   17d24:	str	r2, [fp, #-16]
   17d28:	str	r3, [fp, #-20]	; 0xffffffec
   17d2c:	ldr	r3, [fp, #-12]
   17d30:	mov	r0, r3
   17d34:	add	sp, fp, #0
   17d38:	pop	{fp}		; (ldr fp, [sp], #4)
   17d3c:	bx	lr
   17d40:	push	{fp}		; (str fp, [sp, #-4]!)
   17d44:	add	fp, sp, #0
   17d48:	sub	sp, sp, #20
   17d4c:	str	r0, [fp, #-8]
   17d50:	str	r1, [fp, #-12]
   17d54:	str	r2, [fp, #-16]
   17d58:	str	r3, [fp, #-20]	; 0xffffffec
   17d5c:	ldr	r3, [fp, #-12]
   17d60:	mov	r0, r3
   17d64:	add	sp, fp, #0
   17d68:	pop	{fp}		; (ldr fp, [sp], #4)
   17d6c:	bx	lr
   17d70:	push	{fp, lr}
   17d74:	add	fp, sp, #4
   17d78:	sub	sp, sp, #48	; 0x30
   17d7c:	str	r0, [fp, #-32]	; 0xffffffe0
   17d80:	str	r1, [fp, #-36]	; 0xffffffdc
   17d84:	str	r2, [fp, #-40]	; 0xffffffd8
   17d88:	str	r3, [fp, #-44]	; 0xffffffd4
   17d8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17d90:	str	r3, [fp, #-8]
   17d94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17d98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17d9c:	bl	14f70 <_start@@Base+0x950>
   17da0:	strd	r0, [fp, #-20]	; 0xffffffec
   17da4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17da8:	add	r1, pc, #208	; 0xd0
   17dac:	ldrd	r0, [r1]
   17db0:	cmp	r3, r1
   17db4:	cmpeq	r2, r0
   17db8:	bne	17e70 <_start@@Base+0x3850>
   17dbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17dc0:	add	r3, r3, #8
   17dc4:	str	r3, [fp, #-36]	; 0xffffffdc
   17dc8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17dcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17dd0:	bl	14f70 <_start@@Base+0x950>
   17dd4:	strd	r0, [fp, #-20]	; 0xffffffec
   17dd8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17ddc:	mov	r0, #0
   17de0:	mvn	r1, #255	; 0xff
   17de4:	and	r2, r2, r0
   17de8:	and	r3, r3, r1
   17dec:	add	r1, pc, #148	; 0x94
   17df0:	ldrd	r0, [r1]
   17df4:	cmp	r3, r1
   17df8:	cmpeq	r2, r0
   17dfc:	bne	17e68 <_start@@Base+0x3848>
   17e00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e04:	str	r3, [fp, #-24]	; 0xffffffe8
   17e08:	mov	r3, #3
   17e0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e18:	bl	14fb8 <_start@@Base+0x998>
   17e1c:	str	r0, [fp, #-36]	; 0xffffffdc
   17e20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e28:	cmp	r2, r3
   17e2c:	beq	17e60 <_start@@Base+0x3840>
   17e30:	ldr	r3, [fp, #8]
   17e34:	str	r3, [sp, #4]
   17e38:	ldr	r3, [fp, #4]
   17e3c:	str	r3, [sp]
   17e40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17e44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17e48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17e4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17e50:	bl	17580 <_start@@Base+0x2f60>
   17e54:	str	r0, [fp, #-36]	; 0xffffffdc
   17e58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17e5c:	b	17e74 <_start@@Base+0x3854>
   17e60:	ldr	r3, [fp, #-8]
   17e64:	b	17e74 <_start@@Base+0x3854>
   17e68:	ldr	r3, [fp, #-8]
   17e6c:	b	17e74 <_start@@Base+0x3854>
   17e70:	ldr	r3, [fp, #-8]
   17e74:	mov	r0, r3
   17e78:	sub	sp, fp, #4
   17e7c:	pop	{fp, pc}
   17e80:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   17e84:	ldrbtmi	r6, [r2], -sp, ror #30
   17e88:	andeq	r0, r0, r0
   17e8c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   17e90:	push	{fp, lr}
   17e94:	add	fp, sp, #4
   17e98:	sub	sp, sp, #48	; 0x30
   17e9c:	str	r0, [fp, #-32]	; 0xffffffe0
   17ea0:	str	r1, [fp, #-36]	; 0xffffffdc
   17ea4:	str	r2, [fp, #-40]	; 0xffffffd8
   17ea8:	str	r3, [fp, #-44]	; 0xffffffd4
   17eac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17eb0:	str	r3, [fp, #-8]
   17eb4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17eb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17ebc:	bl	14f70 <_start@@Base+0x950>
   17ec0:	strd	r0, [fp, #-20]	; 0xffffffec
   17ec4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17ec8:	add	r1, pc, #384	; 0x180
   17ecc:	ldrd	r0, [r1]
   17ed0:	cmp	r3, r1
   17ed4:	cmpeq	r2, r0
   17ed8:	bne	1803c <_start@@Base+0x3a1c>
   17edc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17ee0:	add	r3, r3, #8
   17ee4:	str	r3, [fp, #-36]	; 0xffffffdc
   17ee8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17eec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17ef0:	bl	14f70 <_start@@Base+0x950>
   17ef4:	strd	r0, [fp, #-20]	; 0xffffffec
   17ef8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17efc:	add	r1, pc, #340	; 0x154
   17f00:	ldrd	r0, [r1]
   17f04:	cmp	r3, r1
   17f08:	cmpeq	r2, r0
   17f0c:	bne	18034 <_start@@Base+0x3a14>
   17f10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f14:	add	r3, r3, #8
   17f18:	str	r3, [fp, #-36]	; 0xffffffdc
   17f1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f24:	bl	14f70 <_start@@Base+0x950>
   17f28:	strd	r0, [fp, #-20]	; 0xffffffec
   17f2c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17f30:	add	r1, pc, #296	; 0x128
   17f34:	ldrd	r0, [r1]
   17f38:	cmp	r3, r1
   17f3c:	cmpeq	r2, r0
   17f40:	bne	1802c <_start@@Base+0x3a0c>
   17f44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f48:	add	r3, r3, #8
   17f4c:	str	r3, [fp, #-36]	; 0xffffffdc
   17f50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f54:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f58:	bl	14f70 <_start@@Base+0x950>
   17f5c:	strd	r0, [fp, #-20]	; 0xffffffec
   17f60:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17f64:	add	r1, pc, #252	; 0xfc
   17f68:	ldrd	r0, [r1]
   17f6c:	cmp	r3, r1
   17f70:	cmpeq	r2, r0
   17f74:	bne	18024 <_start@@Base+0x3a04>
   17f78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17f7c:	add	r3, r3, #8
   17f80:	str	r3, [fp, #-36]	; 0xffffffdc
   17f84:	ldr	r1, [fp, #-40]	; 0xffffffd8
   17f88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17f8c:	bl	14f70 <_start@@Base+0x950>
   17f90:	strd	r0, [fp, #-20]	; 0xffffffec
   17f94:	ldrd	r2, [fp, #-20]	; 0xffffffec
   17f98:	mov	r0, #0
   17f9c:	mov	r1, #-16777216	; 0xff000000
   17fa0:	and	r2, r2, r0
   17fa4:	and	r3, r3, r1
   17fa8:	cmp	r3, #1694498816	; 0x65000000
   17fac:	cmpeq	r2, #0
   17fb0:	bne	1801c <_start@@Base+0x39fc>
   17fb4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17fb8:	str	r3, [fp, #-24]	; 0xffffffe8
   17fbc:	mov	r3, #1
   17fc0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17fcc:	bl	14fb8 <_start@@Base+0x998>
   17fd0:	str	r0, [fp, #-36]	; 0xffffffdc
   17fd4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17fdc:	cmp	r2, r3
   17fe0:	beq	18014 <_start@@Base+0x39f4>
   17fe4:	ldr	r3, [fp, #8]
   17fe8:	str	r3, [sp, #4]
   17fec:	ldr	r3, [fp, #4]
   17ff0:	str	r3, [sp]
   17ff4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ff8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17ffc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18004:	bl	17580 <_start@@Base+0x2f60>
   18008:	str	r0, [fp, #-36]	; 0xffffffdc
   1800c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18010:	b	18040 <_start@@Base+0x3a20>
   18014:	ldr	r3, [fp, #-8]
   18018:	b	18040 <_start@@Base+0x3a20>
   1801c:	ldr	r3, [fp, #-8]
   18020:	b	18040 <_start@@Base+0x3a20>
   18024:	ldr	r3, [fp, #-8]
   18028:	b	18040 <_start@@Base+0x3a20>
   1802c:	ldr	r3, [fp, #-8]
   18030:	b	18040 <_start@@Base+0x3a20>
   18034:	ldr	r3, [fp, #-8]
   18038:	b	18040 <_start@@Base+0x3a20>
   1803c:	ldr	r3, [fp, #-8]
   18040:	mov	r0, r3
   18044:	sub	sp, fp, #4
   18048:	pop	{fp, pc}
   1804c:	nop			; (mov r0, r0)
   18050:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   18054:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   18058:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   1805c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   18060:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   18064:	cmnpl	r0, #-1073741800	; 0xc0000018
   18068:	cmnvs	ip, #100, 10	; 0x19000000
   1806c:	svcvs	0x006d496e
   18070:	push	{fp}		; (str fp, [sp, #-4]!)
   18074:	add	fp, sp, #0
   18078:	sub	sp, sp, #20
   1807c:	str	r0, [fp, #-8]
   18080:	str	r1, [fp, #-12]
   18084:	str	r2, [fp, #-16]
   18088:	str	r3, [fp, #-20]	; 0xffffffec
   1808c:	ldr	r3, [fp, #-12]
   18090:	mov	r0, r3
   18094:	add	sp, fp, #0
   18098:	pop	{fp}		; (ldr fp, [sp], #4)
   1809c:	bx	lr
   180a0:	push	{fp}		; (str fp, [sp, #-4]!)
   180a4:	add	fp, sp, #0
   180a8:	sub	sp, sp, #20
   180ac:	str	r0, [fp, #-8]
   180b0:	str	r1, [fp, #-12]
   180b4:	str	r2, [fp, #-16]
   180b8:	str	r3, [fp, #-20]	; 0xffffffec
   180bc:	ldr	r3, [fp, #-12]
   180c0:	mov	r0, r3
   180c4:	add	sp, fp, #0
   180c8:	pop	{fp}		; (ldr fp, [sp], #4)
   180cc:	bx	lr
   180d0:	push	{fp}		; (str fp, [sp, #-4]!)
   180d4:	add	fp, sp, #0
   180d8:	sub	sp, sp, #20
   180dc:	str	r0, [fp, #-8]
   180e0:	str	r1, [fp, #-12]
   180e4:	str	r2, [fp, #-16]
   180e8:	str	r3, [fp, #-20]	; 0xffffffec
   180ec:	ldr	r3, [fp, #-12]
   180f0:	mov	r0, r3
   180f4:	add	sp, fp, #0
   180f8:	pop	{fp}		; (ldr fp, [sp], #4)
   180fc:	bx	lr
   18100:	push	{fp}		; (str fp, [sp, #-4]!)
   18104:	add	fp, sp, #0
   18108:	sub	sp, sp, #20
   1810c:	str	r0, [fp, #-8]
   18110:	str	r1, [fp, #-12]
   18114:	str	r2, [fp, #-16]
   18118:	str	r3, [fp, #-20]	; 0xffffffec
   1811c:	ldr	r3, [fp, #-12]
   18120:	mov	r0, r3
   18124:	add	sp, fp, #0
   18128:	pop	{fp}		; (ldr fp, [sp], #4)
   1812c:	bx	lr
   18130:	push	{fp}		; (str fp, [sp, #-4]!)
   18134:	add	fp, sp, #0
   18138:	sub	sp, sp, #20
   1813c:	str	r0, [fp, #-8]
   18140:	str	r1, [fp, #-12]
   18144:	str	r2, [fp, #-16]
   18148:	str	r3, [fp, #-20]	; 0xffffffec
   1814c:	ldr	r3, [fp, #-12]
   18150:	mov	r0, r3
   18154:	add	sp, fp, #0
   18158:	pop	{fp}		; (ldr fp, [sp], #4)
   1815c:	bx	lr
   18160:	push	{fp}		; (str fp, [sp, #-4]!)
   18164:	add	fp, sp, #0
   18168:	sub	sp, sp, #20
   1816c:	str	r0, [fp, #-8]
   18170:	str	r1, [fp, #-12]
   18174:	str	r2, [fp, #-16]
   18178:	str	r3, [fp, #-20]	; 0xffffffec
   1817c:	ldr	r3, [fp, #-12]
   18180:	mov	r0, r3
   18184:	add	sp, fp, #0
   18188:	pop	{fp}		; (ldr fp, [sp], #4)
   1818c:	bx	lr
   18190:	push	{fp}		; (str fp, [sp, #-4]!)
   18194:	add	fp, sp, #0
   18198:	sub	sp, sp, #20
   1819c:	str	r0, [fp, #-8]
   181a0:	str	r1, [fp, #-12]
   181a4:	str	r2, [fp, #-16]
   181a8:	str	r3, [fp, #-20]	; 0xffffffec
   181ac:	ldr	r3, [fp, #-12]
   181b0:	mov	r0, r3
   181b4:	add	sp, fp, #0
   181b8:	pop	{fp}		; (ldr fp, [sp], #4)
   181bc:	bx	lr
   181c0:	push	{fp, lr}
   181c4:	add	fp, sp, #4
   181c8:	sub	sp, sp, #24
   181cc:	str	r0, [fp, #-16]
   181d0:	str	r1, [fp, #-20]	; 0xffffffec
   181d4:	str	r2, [fp, #-24]	; 0xffffffe8
   181d8:	str	r3, [fp, #-28]	; 0xffffffe4
   181dc:	sub	r3, fp, #8
   181e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   181e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   181e8:	ldr	r0, [fp, #-16]
   181ec:	bl	1508c <_start@@Base+0xa6c>
   181f0:	str	r0, [fp, #-20]	; 0xffffffec
   181f4:	b	18224 <_start@@Base+0x3c04>
   181f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   181fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   18200:	ldr	r0, [fp, #-16]
   18204:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   18208:	str	r0, [fp, #-20]	; 0xffffffec
   1820c:	sub	r3, fp, #8
   18210:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18214:	ldr	r1, [fp, #-20]	; 0xffffffec
   18218:	ldr	r0, [fp, #-16]
   1821c:	bl	15174 <_start@@Base+0xb54>
   18220:	str	r0, [fp, #-20]	; 0xffffffec
   18224:	ldr	r3, [fp, #-8]
   18228:	cmp	r3, #0
   1822c:	bne	181f8 <_start@@Base+0x3bd8>
   18230:	ldr	r3, [fp, #-20]	; 0xffffffec
   18234:	mov	r0, r3
   18238:	sub	sp, fp, #4
   1823c:	pop	{fp, pc}
   18240:	push	{fp, lr}
   18244:	add	fp, sp, #4
   18248:	sub	sp, sp, #24
   1824c:	str	r0, [fp, #-16]
   18250:	str	r1, [fp, #-20]	; 0xffffffec
   18254:	str	r2, [fp, #-24]	; 0xffffffe8
   18258:	str	r3, [fp, #-28]	; 0xffffffe4
   1825c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18260:	mov	r2, #0
   18264:	str	r2, [r3]
   18268:	ldr	r3, [fp, #-16]
   1826c:	ldr	r3, [r3]
   18270:	mov	r2, #1
   18274:	mov	r1, #0
   18278:	mov	r0, r3
   1827c:	bl	2deac <flatcc_builder_start_struct@@Base>
   18280:	str	r0, [fp, #-8]
   18284:	ldr	r3, [fp, #-8]
   18288:	cmp	r3, #0
   1828c:	beq	182ec <_start@@Base+0x3ccc>
   18290:	ldr	r3, [fp, #-8]
   18294:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18298:	ldr	r1, [fp, #-20]	; 0xffffffec
   1829c:	ldr	r0, [fp, #-16]
   182a0:	bl	181c0 <_start@@Base+0x3ba0>
   182a4:	str	r0, [fp, #-20]	; 0xffffffec
   182a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   182ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   182b0:	cmp	r2, r3
   182b4:	beq	182f0 <_start@@Base+0x3cd0>
   182b8:	ldr	r3, [fp, #-16]
   182bc:	ldr	r3, [r3]
   182c0:	mov	r0, r3
   182c4:	bl	2df4c <flatcc_builder_end_struct@@Base>
   182c8:	mov	r2, r0
   182cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   182d0:	str	r2, [r3]
   182d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   182d8:	ldr	r3, [r3]
   182dc:	cmp	r3, #0
   182e0:	beq	182f0 <_start@@Base+0x3cd0>
   182e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   182e8:	b	18308 <_start@@Base+0x3ce8>
   182ec:	nop			; (mov r0, r0)
   182f0:	mov	r3, #33	; 0x21
   182f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   182f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   182fc:	ldr	r0, [fp, #-16]
   18300:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   18304:	mov	r3, r0
   18308:	mov	r0, r3
   1830c:	sub	sp, fp, #4
   18310:	pop	{fp, pc}
   18314:	push	{fp, lr}
   18318:	add	fp, sp, #4
   1831c:	sub	sp, sp, #24
   18320:	str	r0, [fp, #-16]
   18324:	str	r1, [fp, #-20]	; 0xffffffec
   18328:	str	r2, [fp, #-24]	; 0xffffffe8
   1832c:	str	r3, [fp, #-28]	; 0xffffffe4
   18330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18334:	mov	r2, #0
   18338:	str	r2, [r3]
   1833c:	ldr	r3, [fp, #-16]
   18340:	ldr	r3, [r3]
   18344:	mov	r1, #0
   18348:	mov	r0, r3
   1834c:	bl	2ec40 <flatcc_builder_start_table@@Base>
   18350:	mov	r3, r0
   18354:	cmp	r3, #0
   18358:	bne	18408 <_start@@Base+0x3de8>
   1835c:	sub	r3, fp, #8
   18360:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18364:	ldr	r1, [fp, #-20]	; 0xffffffec
   18368:	ldr	r0, [fp, #-16]
   1836c:	bl	1508c <_start@@Base+0xa6c>
   18370:	str	r0, [fp, #-20]	; 0xffffffec
   18374:	b	183b8 <_start@@Base+0x3d98>
   18378:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1837c:	ldr	r1, [fp, #-20]	; 0xffffffec
   18380:	ldr	r0, [fp, #-16]
   18384:	bl	14cb8 <_start@@Base+0x698>
   18388:	str	r0, [fp, #-20]	; 0xffffffec
   1838c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18390:	ldr	r1, [fp, #-20]	; 0xffffffec
   18394:	ldr	r0, [fp, #-16]
   18398:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1839c:	str	r0, [fp, #-20]	; 0xffffffec
   183a0:	sub	r3, fp, #8
   183a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   183a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   183ac:	ldr	r0, [fp, #-16]
   183b0:	bl	15174 <_start@@Base+0xb54>
   183b4:	str	r0, [fp, #-20]	; 0xffffffec
   183b8:	ldr	r3, [fp, #-8]
   183bc:	cmp	r3, #0
   183c0:	bne	18378 <_start@@Base+0x3d58>
   183c4:	ldr	r3, [fp, #-16]
   183c8:	ldr	r3, [r3, #20]
   183cc:	cmp	r3, #0
   183d0:	bne	18410 <_start@@Base+0x3df0>
   183d4:	ldr	r3, [fp, #-16]
   183d8:	ldr	r3, [r3]
   183dc:	mov	r0, r3
   183e0:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   183e4:	mov	r2, r0
   183e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183ec:	str	r2, [r3]
   183f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   183f4:	ldr	r3, [r3]
   183f8:	cmp	r3, #0
   183fc:	beq	18418 <_start@@Base+0x3df8>
   18400:	ldr	r3, [fp, #-20]	; 0xffffffec
   18404:	b	18434 <_start@@Base+0x3e14>
   18408:	nop			; (mov r0, r0)
   1840c:	b	1841c <_start@@Base+0x3dfc>
   18410:	nop			; (mov r0, r0)
   18414:	b	1841c <_start@@Base+0x3dfc>
   18418:	nop			; (mov r0, r0)
   1841c:	mov	r3, #33	; 0x21
   18420:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18424:	ldr	r1, [fp, #-20]	; 0xffffffec
   18428:	ldr	r0, [fp, #-16]
   1842c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   18430:	mov	r3, r0
   18434:	mov	r0, r3
   18438:	sub	sp, fp, #4
   1843c:	pop	{fp, pc}
   18440:	push	{fp, lr}
   18444:	add	fp, sp, #4
   18448:	sub	sp, sp, #24
   1844c:	str	r0, [fp, #-16]
   18450:	str	r1, [fp, #-20]	; 0xffffffec
   18454:	str	r2, [fp, #-24]	; 0xffffffe8
   18458:	str	r3, [fp, #-28]	; 0xffffffe4
   1845c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18460:	mov	r2, #0
   18464:	str	r2, [r3]
   18468:	ldr	r3, [fp, #-16]
   1846c:	ldr	r3, [r3]
   18470:	mov	r1, #0
   18474:	mov	r0, r3
   18478:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1847c:	mov	r3, r0
   18480:	cmp	r3, #0
   18484:	bne	18534 <_start@@Base+0x3f14>
   18488:	sub	r3, fp, #8
   1848c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18490:	ldr	r1, [fp, #-20]	; 0xffffffec
   18494:	ldr	r0, [fp, #-16]
   18498:	bl	1508c <_start@@Base+0xa6c>
   1849c:	str	r0, [fp, #-20]	; 0xffffffec
   184a0:	b	184e4 <_start@@Base+0x3ec4>
   184a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   184ac:	ldr	r0, [fp, #-16]
   184b0:	bl	14cb8 <_start@@Base+0x698>
   184b4:	str	r0, [fp, #-20]	; 0xffffffec
   184b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   184c0:	ldr	r0, [fp, #-16]
   184c4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   184c8:	str	r0, [fp, #-20]	; 0xffffffec
   184cc:	sub	r3, fp, #8
   184d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   184d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   184d8:	ldr	r0, [fp, #-16]
   184dc:	bl	15174 <_start@@Base+0xb54>
   184e0:	str	r0, [fp, #-20]	; 0xffffffec
   184e4:	ldr	r3, [fp, #-8]
   184e8:	cmp	r3, #0
   184ec:	bne	184a4 <_start@@Base+0x3e84>
   184f0:	ldr	r3, [fp, #-16]
   184f4:	ldr	r3, [r3, #20]
   184f8:	cmp	r3, #0
   184fc:	bne	1853c <_start@@Base+0x3f1c>
   18500:	ldr	r3, [fp, #-16]
   18504:	ldr	r3, [r3]
   18508:	mov	r0, r3
   1850c:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   18510:	mov	r2, r0
   18514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18518:	str	r2, [r3]
   1851c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18520:	ldr	r3, [r3]
   18524:	cmp	r3, #0
   18528:	beq	18544 <_start@@Base+0x3f24>
   1852c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18530:	b	18560 <_start@@Base+0x3f40>
   18534:	nop			; (mov r0, r0)
   18538:	b	18548 <_start@@Base+0x3f28>
   1853c:	nop			; (mov r0, r0)
   18540:	b	18548 <_start@@Base+0x3f28>
   18544:	nop			; (mov r0, r0)
   18548:	mov	r3, #33	; 0x21
   1854c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18550:	ldr	r1, [fp, #-20]	; 0xffffffec
   18554:	ldr	r0, [fp, #-16]
   18558:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1855c:	mov	r3, r0
   18560:	mov	r0, r3
   18564:	sub	sp, fp, #4
   18568:	pop	{fp, pc}
   1856c:	push	{fp, lr}
   18570:	add	fp, sp, #4
   18574:	sub	sp, sp, #16
   18578:	str	r0, [fp, #-8]
   1857c:	str	r1, [fp, #-12]
   18580:	str	r2, [fp, #-16]
   18584:	strb	r3, [fp, #-17]	; 0xffffffef
   18588:	ldr	r3, [fp, #4]
   1858c:	mov	r2, #0
   18590:	str	r2, [r3]
   18594:	ldrb	r3, [fp, #-17]	; 0xffffffef
   18598:	cmp	r3, #0
   1859c:	beq	185ac <_start@@Base+0x3f8c>
   185a0:	cmp	r3, #1
   185a4:	beq	185c4 <_start@@Base+0x3fa4>
   185a8:	b	185f4 <_start@@Base+0x3fd4>
   185ac:	ldr	r2, [fp, #-16]
   185b0:	ldr	r1, [fp, #-12]
   185b4:	ldr	r0, [fp, #-8]
   185b8:	bl	15c68 <_start@@Base+0x1648>
   185bc:	mov	r3, r0
   185c0:	b	18674 <_start@@Base+0x4054>
   185c4:	ldr	r3, [fp, #4]
   185c8:	ldr	r2, [fp, #-16]
   185cc:	ldr	r1, [fp, #-12]
   185d0:	ldr	r0, [fp, #-8]
   185d4:	bl	18314 <_start@@Base+0x3cf4>
   185d8:	str	r0, [fp, #-12]
   185dc:	nop			; (mov r0, r0)
   185e0:	ldr	r3, [fp, #-8]
   185e4:	ldr	r3, [r3, #20]
   185e8:	cmp	r3, #0
   185ec:	beq	18644 <_start@@Base+0x4024>
   185f0:	b	1863c <_start@@Base+0x401c>
   185f4:	ldr	r3, [fp, #-8]
   185f8:	ldr	r3, [r3, #8]
   185fc:	and	r3, r3, #1
   18600:	cmp	r3, #0
   18604:	bne	18624 <_start@@Base+0x4004>
   18608:	mov	r3, #15
   1860c:	ldr	r2, [fp, #-16]
   18610:	ldr	r1, [fp, #-12]
   18614:	ldr	r0, [fp, #-8]
   18618:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1861c:	mov	r3, r0
   18620:	b	18674 <_start@@Base+0x4054>
   18624:	ldr	r2, [fp, #-16]
   18628:	ldr	r1, [fp, #-12]
   1862c:	ldr	r0, [fp, #-8]
   18630:	bl	3b2b8 <flatcc_json_parser_generic_json@@Base>
   18634:	mov	r3, r0
   18638:	b	18674 <_start@@Base+0x4054>
   1863c:	ldr	r3, [fp, #-12]
   18640:	b	18674 <_start@@Base+0x4054>
   18644:	ldr	r3, [fp, #4]
   18648:	ldr	r3, [r3]
   1864c:	cmp	r3, #0
   18650:	bne	18670 <_start@@Base+0x4050>
   18654:	mov	r3, #33	; 0x21
   18658:	ldr	r2, [fp, #-16]
   1865c:	ldr	r1, [fp, #-12]
   18660:	ldr	r0, [fp, #-8]
   18664:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   18668:	mov	r3, r0
   1866c:	b	18674 <_start@@Base+0x4054>
   18670:	ldr	r3, [fp, #-12]
   18674:	mov	r0, r3
   18678:	sub	sp, fp, #4
   1867c:	pop	{fp, pc}
   18680:	push	{fp}		; (str fp, [sp, #-4]!)
   18684:	add	fp, sp, #0
   18688:	sub	sp, sp, #12
   1868c:	mov	r3, r0
   18690:	strb	r3, [fp, #-5]
   18694:	ldrb	r3, [fp, #-5]
   18698:	cmp	r3, #0
   1869c:	beq	186ac <_start@@Base+0x408c>
   186a0:	cmp	r3, #1
   186a4:	beq	186b4 <_start@@Base+0x4094>
   186a8:	b	186bc <_start@@Base+0x409c>
   186ac:	mov	r3, #1
   186b0:	b	186c0 <_start@@Base+0x40a0>
   186b4:	mov	r3, #1
   186b8:	b	186c0 <_start@@Base+0x40a0>
   186bc:	mov	r3, #0
   186c0:	mov	r0, r3
   186c4:	add	sp, fp, #0
   186c8:	pop	{fp}		; (ldr fp, [sp], #4)
   186cc:	bx	lr
   186d0:	push	{fp, lr}
   186d4:	add	fp, sp, #4
   186d8:	sub	sp, sp, #48	; 0x30
   186dc:	str	r0, [fp, #-32]	; 0xffffffe0
   186e0:	str	r1, [fp, #-36]	; 0xffffffdc
   186e4:	str	r2, [fp, #-40]	; 0xffffffd8
   186e8:	str	r3, [fp, #-44]	; 0xffffffd4
   186ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   186f0:	str	r3, [fp, #-8]
   186f4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   186f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   186fc:	bl	14f70 <_start@@Base+0x950>
   18700:	strd	r0, [fp, #-20]	; 0xffffffec
   18704:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18708:	add	r1, pc, #400	; 0x190
   1870c:	ldrd	r0, [r1]
   18710:	cmp	r3, r1
   18714:	cmpeq	r2, r0
   18718:	bne	187fc <_start@@Base+0x41dc>
   1871c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18720:	add	r3, r3, #8
   18724:	str	r3, [fp, #-36]	; 0xffffffdc
   18728:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1872c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18730:	bl	14f70 <_start@@Base+0x950>
   18734:	strd	r0, [fp, #-20]	; 0xffffffec
   18738:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1873c:	add	r1, pc, #356	; 0x164
   18740:	ldrd	r0, [r1]
   18744:	cmp	r3, r1
   18748:	cmpeq	r2, r0
   1874c:	bne	187f4 <_start@@Base+0x41d4>
   18750:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18754:	add	r3, r3, #8
   18758:	str	r3, [fp, #-36]	; 0xffffffdc
   1875c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18760:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18764:	bl	14f70 <_start@@Base+0x950>
   18768:	strd	r0, [fp, #-20]	; 0xffffffec
   1876c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18770:	mov	r0, #0
   18774:	mov	r1, #-16777216	; 0xff000000
   18778:	and	r2, r2, r0
   1877c:	and	r3, r3, r1
   18780:	cmp	r3, #1694498816	; 0x65000000
   18784:	cmpeq	r2, #0
   18788:	bne	187ec <_start@@Base+0x41cc>
   1878c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18790:	str	r3, [fp, #-24]	; 0xffffffe8
   18794:	ldr	r3, [fp, #8]
   18798:	str	r3, [sp]
   1879c:	mov	r3, #1
   187a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   187a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   187a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   187ac:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   187b0:	str	r0, [fp, #-36]	; 0xffffffdc
   187b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   187b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   187bc:	cmp	r2, r3
   187c0:	beq	187e4 <_start@@Base+0x41c4>
   187c4:	ldr	r1, [fp, #4]
   187c8:	mov	r2, #1
   187cc:	mov	r3, #0
   187d0:	strd	r2, [r1]
   187d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   187d8:	mov	r2, #0
   187dc:	str	r2, [r3]
   187e0:	b	1888c <_start@@Base+0x426c>
   187e4:	ldr	r3, [fp, #-8]
   187e8:	b	18890 <_start@@Base+0x4270>
   187ec:	ldr	r3, [fp, #-8]
   187f0:	b	18890 <_start@@Base+0x4270>
   187f4:	ldr	r3, [fp, #-8]
   187f8:	b	18890 <_start@@Base+0x4270>
   187fc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18800:	mov	r0, #0
   18804:	mvn	r1, #0
   18808:	and	r2, r2, r0
   1880c:	and	r3, r3, r1
   18810:	add	r1, pc, #152	; 0x98
   18814:	ldrd	r0, [r1]
   18818:	cmp	r3, r1
   1881c:	cmpeq	r2, r0
   18820:	bne	18884 <_start@@Base+0x4264>
   18824:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18828:	str	r3, [fp, #-24]	; 0xffffffe8
   1882c:	ldr	r3, [fp, #8]
   18830:	str	r3, [sp]
   18834:	mov	r3, #4
   18838:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1883c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18840:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18844:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18848:	str	r0, [fp, #-36]	; 0xffffffdc
   1884c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18854:	cmp	r2, r3
   18858:	beq	1887c <_start@@Base+0x425c>
   1885c:	ldr	r1, [fp, #4]
   18860:	mov	r2, #0
   18864:	mov	r3, #0
   18868:	strd	r2, [r1]
   1886c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18870:	mov	r2, #0
   18874:	str	r2, [r3]
   18878:	b	1888c <_start@@Base+0x426c>
   1887c:	ldr	r3, [fp, #-8]
   18880:	b	18890 <_start@@Base+0x4270>
   18884:	ldr	r3, [fp, #-8]
   18888:	b	18890 <_start@@Base+0x4270>
   1888c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18890:	mov	r0, r3
   18894:	sub	sp, fp, #4
   18898:	pop	{fp, pc}
   1889c:	nop			; (mov r0, r0)
   188a0:	rsbvc	r6, r5, #116, 28	; 0x740
   188a4:	stmdbmi	lr!, {r0, r5, r6, ip, lr}^
   188a8:	cmnvc	r0, #-1073741800	; 0xc0000018
   188ac:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   188b0:	andeq	r0, r0, r0
   188b4:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   188b8:	push	{fp, lr}
   188bc:	add	fp, sp, #4
   188c0:	sub	sp, sp, #48	; 0x30
   188c4:	str	r0, [fp, #-32]	; 0xffffffe0
   188c8:	str	r1, [fp, #-36]	; 0xffffffdc
   188cc:	str	r2, [fp, #-40]	; 0xffffffd8
   188d0:	str	r3, [fp, #-44]	; 0xffffffd4
   188d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   188d8:	str	r3, [fp, #-8]
   188dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   188e0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   188e4:	bl	14f70 <_start@@Base+0x950>
   188e8:	strd	r0, [fp, #-20]	; 0xffffffec
   188ec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   188f0:	add	r1, pc, #456	; 0x1c8
   188f4:	ldrd	r0, [r1]
   188f8:	cmp	r3, r1
   188fc:	cmpeq	r2, r0
   18900:	bhi	18994 <_start@@Base+0x4374>
   18904:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18908:	mov	r0, #0
   1890c:	mvn	r1, #0
   18910:	and	r2, r2, r0
   18914:	and	r3, r3, r1
   18918:	add	r1, pc, #424	; 0x1a8
   1891c:	ldrd	r0, [r1]
   18920:	cmp	r3, r1
   18924:	cmpeq	r2, r0
   18928:	bne	1898c <_start@@Base+0x436c>
   1892c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18930:	str	r3, [fp, #-24]	; 0xffffffe8
   18934:	ldr	r3, [fp, #8]
   18938:	str	r3, [sp]
   1893c:	mov	r3, #4
   18940:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18944:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18948:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1894c:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18950:	str	r0, [fp, #-36]	; 0xffffffdc
   18954:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18958:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1895c:	cmp	r2, r3
   18960:	beq	18984 <_start@@Base+0x4364>
   18964:	ldr	r1, [fp, #4]
   18968:	mvn	r2, #11
   1896c:	mvn	r3, #0
   18970:	strd	r2, [r1]
   18974:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18978:	mov	r2, #1
   1897c:	str	r2, [r3]
   18980:	b	18aac <_start@@Base+0x448c>
   18984:	ldr	r3, [fp, #-8]
   18988:	b	18ab0 <_start@@Base+0x4490>
   1898c:	ldr	r3, [fp, #-8]
   18990:	b	18ab0 <_start@@Base+0x4490>
   18994:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18998:	mov	r0, #0
   1899c:	mvn	r1, #0
   189a0:	and	r2, r2, r0
   189a4:	and	r3, r3, r1
   189a8:	add	r1, pc, #288	; 0x120
   189ac:	ldrd	r0, [r1]
   189b0:	cmp	r3, r1
   189b4:	cmpeq	r2, r0
   189b8:	bne	18a1c <_start@@Base+0x43fc>
   189bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   189c0:	str	r3, [fp, #-24]	; 0xffffffe8
   189c4:	ldr	r3, [fp, #8]
   189c8:	str	r3, [sp]
   189cc:	mov	r3, #4
   189d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   189d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   189d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   189dc:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   189e0:	str	r0, [fp, #-36]	; 0xffffffdc
   189e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   189e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   189ec:	cmp	r2, r3
   189f0:	beq	18a14 <_start@@Base+0x43f4>
   189f4:	ldr	r1, [fp, #4]
   189f8:	mvn	r2, #9
   189fc:	mvn	r3, #0
   18a00:	strd	r2, [r1]
   18a04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a08:	mov	r2, #1
   18a0c:	str	r2, [r3]
   18a10:	b	18aac <_start@@Base+0x448c>
   18a14:	ldr	r3, [fp, #-8]
   18a18:	b	18ab0 <_start@@Base+0x4490>
   18a1c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18a20:	mov	r0, #0
   18a24:	mvn	r1, #0
   18a28:	and	r2, r2, r0
   18a2c:	and	r3, r3, r1
   18a30:	add	r1, pc, #160	; 0xa0
   18a34:	ldrd	r0, [r1]
   18a38:	cmp	r3, r1
   18a3c:	cmpeq	r2, r0
   18a40:	bne	18aa4 <_start@@Base+0x4484>
   18a44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18a48:	str	r3, [fp, #-24]	; 0xffffffe8
   18a4c:	ldr	r3, [fp, #8]
   18a50:	str	r3, [sp]
   18a54:	mov	r3, #4
   18a58:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18a5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18a60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18a64:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18a68:	str	r0, [fp, #-36]	; 0xffffffdc
   18a6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18a74:	cmp	r2, r3
   18a78:	beq	18a9c <_start@@Base+0x447c>
   18a7c:	ldr	r1, [fp, #4]
   18a80:	mvn	r2, #10
   18a84:	mvn	r3, #0
   18a88:	strd	r2, [r1]
   18a8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18a90:	mov	r2, #1
   18a94:	str	r2, [r3]
   18a98:	b	18aac <_start@@Base+0x448c>
   18a9c:	ldr	r3, [fp, #-8]
   18aa0:	b	18ab0 <_start@@Base+0x4490>
   18aa4:	ldr	r3, [fp, #-8]
   18aa8:	b	18ab0 <_start@@Base+0x4490>
   18aac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ab0:	mov	r0, r3
   18ab4:	sub	sp, fp, #4
   18ab8:	pop	{fp, pc}
   18abc:	nop			; (mov r0, r0)
   18ac0:			; <UNDEFINED> instruction: 0xffffffff
   18ac4:	mcrvs	7, 3, r6, cr5, cr1, {1}
   18ac8:	andeq	r0, r0, r0
   18acc:	mcrvs	7, 3, r6, cr5, cr1, {1}
   18ad0:	andeq	r0, r0, r0
   18ad4:	mcrvs	7, 3, r6, cr5, cr3, {1}
   18ad8:	andeq	r0, r0, r0
   18adc:	mcrvs	7, 3, r6, cr5, cr2, {1}
   18ae0:	push	{fp, lr}
   18ae4:	add	fp, sp, #4
   18ae8:	sub	sp, sp, #48	; 0x30
   18aec:	str	r0, [fp, #-32]	; 0xffffffe0
   18af0:	str	r1, [fp, #-36]	; 0xffffffdc
   18af4:	str	r2, [fp, #-40]	; 0xffffffd8
   18af8:	str	r3, [fp, #-44]	; 0xffffffd4
   18afc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18b00:	str	r3, [fp, #-8]
   18b04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18b08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b0c:	bl	14f70 <_start@@Base+0x950>
   18b10:	strd	r0, [fp, #-20]	; 0xffffffec
   18b14:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18b18:	add	r1, pc, #624	; 0x270
   18b1c:	ldrd	r0, [r1]
   18b20:	cmp	r3, r1
   18b24:	cmpeq	r2, r0
   18b28:	bhi	18bbc <_start@@Base+0x459c>
   18b2c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18b30:	mov	r0, #0
   18b34:	mvn	r1, #0
   18b38:	and	r2, r2, r0
   18b3c:	and	r3, r3, r1
   18b40:	add	r1, pc, #592	; 0x250
   18b44:	ldrd	r0, [r1]
   18b48:	cmp	r3, r1
   18b4c:	cmpeq	r2, r0
   18b50:	bne	18bb4 <_start@@Base+0x4594>
   18b54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18b58:	str	r3, [fp, #-24]	; 0xffffffe8
   18b5c:	ldr	r3, [fp, #8]
   18b60:	str	r3, [sp]
   18b64:	mov	r3, #4
   18b68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18b6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18b74:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18b78:	str	r0, [fp, #-36]	; 0xffffffdc
   18b7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18b84:	cmp	r2, r3
   18b88:	beq	18bac <_start@@Base+0x458c>
   18b8c:	ldr	r1, [fp, #4]
   18b90:	mov	r2, #2
   18b94:	mov	r3, #0
   18b98:	strd	r2, [r1]
   18b9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ba0:	mov	r2, #0
   18ba4:	str	r2, [r3]
   18ba8:	b	18d7c <_start@@Base+0x475c>
   18bac:	ldr	r3, [fp, #-8]
   18bb0:	b	18d80 <_start@@Base+0x4760>
   18bb4:	ldr	r3, [fp, #-8]
   18bb8:	b	18d80 <_start@@Base+0x4760>
   18bbc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18bc0:	add	r1, pc, #472	; 0x1d8
   18bc4:	ldrd	r0, [r1]
   18bc8:	cmp	r3, r1
   18bcc:	cmpeq	r2, r0
   18bd0:	bhi	18c64 <_start@@Base+0x4644>
   18bd4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18bd8:	mov	r0, #0
   18bdc:	mvn	r1, #0
   18be0:	and	r2, r2, r0
   18be4:	and	r3, r3, r1
   18be8:	add	r1, pc, #440	; 0x1b8
   18bec:	ldrd	r0, [r1]
   18bf0:	cmp	r3, r1
   18bf4:	cmpeq	r2, r0
   18bf8:	bne	18c5c <_start@@Base+0x463c>
   18bfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18c00:	str	r3, [fp, #-24]	; 0xffffffe8
   18c04:	ldr	r3, [fp, #8]
   18c08:	str	r3, [sp]
   18c0c:	mov	r3, #4
   18c10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18c14:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c1c:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18c20:	str	r0, [fp, #-36]	; 0xffffffdc
   18c24:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18c2c:	cmp	r2, r3
   18c30:	beq	18c54 <_start@@Base+0x4634>
   18c34:	ldr	r1, [fp, #4]
   18c38:	mov	r2, #42	; 0x2a
   18c3c:	mov	r3, #0
   18c40:	strd	r2, [r1]
   18c44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18c48:	mov	r2, #0
   18c4c:	str	r2, [r3]
   18c50:	b	18d7c <_start@@Base+0x475c>
   18c54:	ldr	r3, [fp, #-8]
   18c58:	b	18d80 <_start@@Base+0x4760>
   18c5c:	ldr	r3, [fp, #-8]
   18c60:	b	18d80 <_start@@Base+0x4760>
   18c64:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18c68:	mvn	r0, #255	; 0xff
   18c6c:	mvn	r1, #0
   18c70:	and	r2, r2, r0
   18c74:	and	r3, r3, r1
   18c78:	add	r1, pc, #304	; 0x130
   18c7c:	ldrd	r0, [r1]
   18c80:	cmp	r3, r1
   18c84:	cmpeq	r2, r0
   18c88:	bne	18cec <_start@@Base+0x46cc>
   18c8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18c90:	str	r3, [fp, #-24]	; 0xffffffe8
   18c94:	ldr	r3, [fp, #8]
   18c98:	str	r3, [sp]
   18c9c:	mov	r3, #7
   18ca0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ca4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ca8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18cac:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18cb0:	str	r0, [fp, #-36]	; 0xffffffdc
   18cb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18cbc:	cmp	r2, r3
   18cc0:	beq	18ce4 <_start@@Base+0x46c4>
   18cc4:	ldr	r1, [fp, #4]
   18cc8:	mvn	r2, #0
   18ccc:	mvn	r3, #0
   18cd0:	strd	r2, [r1]
   18cd4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18cd8:	mov	r2, #1
   18cdc:	str	r2, [r3]
   18ce0:	b	18d7c <_start@@Base+0x475c>
   18ce4:	ldr	r3, [fp, #-8]
   18ce8:	b	18d80 <_start@@Base+0x4760>
   18cec:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18cf0:	ldr	r0, [pc, #200]	; 18dc0 <_start@@Base+0x47a0>
   18cf4:	mvn	r1, #0
   18cf8:	and	r2, r2, r0
   18cfc:	and	r3, r3, r1
   18d00:	add	r1, pc, #176	; 0xb0
   18d04:	ldrd	r0, [r1]
   18d08:	cmp	r3, r1
   18d0c:	cmpeq	r2, r0
   18d10:	bne	18d74 <_start@@Base+0x4754>
   18d14:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18d18:	str	r3, [fp, #-24]	; 0xffffffe8
   18d1c:	ldr	r3, [fp, #8]
   18d20:	str	r3, [sp]
   18d24:	mov	r3, #6
   18d28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18d2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18d34:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18d38:	str	r0, [fp, #-36]	; 0xffffffdc
   18d3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18d40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18d44:	cmp	r2, r3
   18d48:	beq	18d6c <_start@@Base+0x474c>
   18d4c:	ldr	r1, [fp, #4]
   18d50:	mvn	r2, #1
   18d54:	mvn	r3, #0
   18d58:	strd	r2, [r1]
   18d5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18d60:	mov	r2, #1
   18d64:	str	r2, [r3]
   18d68:	b	18d7c <_start@@Base+0x475c>
   18d6c:	ldr	r3, [fp, #-8]
   18d70:	b	18d80 <_start@@Base+0x4760>
   18d74:	ldr	r3, [fp, #-8]
   18d78:	b	18d80 <_start@@Base+0x4760>
   18d7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18d80:	mov	r0, r3
   18d84:	sub	sp, fp, #4
   18d88:	pop	{fp, pc}
   18d8c:	nop			; (mov r0, r0)
   18d90:			; <UNDEFINED> instruction: 0xffffffff
   18d94:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   18d98:	andeq	r0, r0, r0
   18d9c:	stmdbvs	lr!, {r0, r4, r5, sl, ip, sp, lr}^
   18da0:	strbvs	pc, [r6, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   18da4:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   18da8:	andeq	r0, r0, r0
   18dac:	stmdbvs	lr!, {r1, r4, r5, sl, ip, sp, lr}^
   18db0:	strbvs	r3, [r7, #-512]!	; 0xfffffe00
   18db4:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   18db8:	strbvs	r0, [r7, #-0]!
   18dbc:	stmdbvs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
   18dc0:			; <UNDEFINED> instruction: 0xffff0000
   18dc4:	push	{fp, lr}
   18dc8:	add	fp, sp, #4
   18dcc:	sub	sp, sp, #48	; 0x30
   18dd0:	str	r0, [fp, #-32]	; 0xffffffe0
   18dd4:	str	r1, [fp, #-36]	; 0xffffffdc
   18dd8:	str	r2, [fp, #-40]	; 0xffffffd8
   18ddc:	str	r3, [fp, #-44]	; 0xffffffd4
   18de0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18de4:	str	r3, [fp, #-8]
   18de8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18dec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18df0:	bl	14f70 <_start@@Base+0x950>
   18df4:	strd	r0, [fp, #-20]	; 0xffffffec
   18df8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18dfc:	add	r1, pc, #452	; 0x1c4
   18e00:	ldrd	r0, [r1]
   18e04:	cmp	r3, r1
   18e08:	cmpeq	r2, r0
   18e0c:	bhi	18ea0 <_start@@Base+0x4880>
   18e10:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18e14:	mov	r0, #0
   18e18:	mvn	r1, #0
   18e1c:	and	r2, r2, r0
   18e20:	and	r3, r3, r1
   18e24:	add	r1, pc, #420	; 0x1a4
   18e28:	ldrd	r0, [r1]
   18e2c:	cmp	r3, r1
   18e30:	cmpeq	r2, r0
   18e34:	bne	18e98 <_start@@Base+0x4878>
   18e38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18e3c:	str	r3, [fp, #-24]	; 0xffffffe8
   18e40:	ldr	r3, [fp, #8]
   18e44:	str	r3, [sp]
   18e48:	mov	r3, #4
   18e4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18e50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e54:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18e58:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18e5c:	str	r0, [fp, #-36]	; 0xffffffdc
   18e60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e68:	cmp	r2, r3
   18e6c:	beq	18e90 <_start@@Base+0x4870>
   18e70:	ldr	r1, [fp, #4]
   18e74:	mov	r2, #3
   18e78:	mov	r3, #0
   18e7c:	strd	r2, [r1]
   18e80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18e84:	mov	r2, #0
   18e88:	str	r2, [r3]
   18e8c:	b	18fb8 <_start@@Base+0x4998>
   18e90:	ldr	r3, [fp, #-8]
   18e94:	b	18fbc <_start@@Base+0x499c>
   18e98:	ldr	r3, [fp, #-8]
   18e9c:	b	18fbc <_start@@Base+0x499c>
   18ea0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18ea4:	ldr	r0, [pc, #324]	; 18ff0 <_start@@Base+0x49d0>
   18ea8:	mvn	r1, #0
   18eac:	and	r2, r2, r0
   18eb0:	and	r3, r3, r1
   18eb4:	add	r1, pc, #284	; 0x11c
   18eb8:	ldrd	r0, [r1]
   18ebc:	cmp	r3, r1
   18ec0:	cmpeq	r2, r0
   18ec4:	bne	18f28 <_start@@Base+0x4908>
   18ec8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18ecc:	str	r3, [fp, #-24]	; 0xffffffe8
   18ed0:	ldr	r3, [fp, #8]
   18ed4:	str	r3, [sp]
   18ed8:	mov	r3, #6
   18edc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18ee0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18ee8:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18eec:	str	r0, [fp, #-36]	; 0xffffffdc
   18ef0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18ef4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ef8:	cmp	r2, r3
   18efc:	beq	18f20 <_start@@Base+0x4900>
   18f00:	ldr	r1, [fp, #4]
   18f04:	mvn	r2, #1
   18f08:	mvn	r3, #0
   18f0c:	strd	r2, [r1]
   18f10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18f14:	mov	r2, #1
   18f18:	str	r2, [r3]
   18f1c:	b	18fb8 <_start@@Base+0x4998>
   18f20:	ldr	r3, [fp, #-8]
   18f24:	b	18fbc <_start@@Base+0x499c>
   18f28:	ldrd	r2, [fp, #-20]	; 0xffffffec
   18f2c:	mov	r0, #0
   18f30:	mvn	r1, #0
   18f34:	and	r2, r2, r0
   18f38:	and	r3, r3, r1
   18f3c:	add	r1, pc, #156	; 0x9c
   18f40:	ldrd	r0, [r1]
   18f44:	cmp	r3, r1
   18f48:	cmpeq	r2, r0
   18f4c:	bne	18fb0 <_start@@Base+0x4990>
   18f50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18f54:	str	r3, [fp, #-24]	; 0xffffffe8
   18f58:	ldr	r3, [fp, #8]
   18f5c:	str	r3, [sp]
   18f60:	mov	r3, #4
   18f64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18f70:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   18f74:	str	r0, [fp, #-36]	; 0xffffffdc
   18f78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f80:	cmp	r2, r3
   18f84:	beq	18fa8 <_start@@Base+0x4988>
   18f88:	ldr	r1, [fp, #4]
   18f8c:	add	r3, pc, #84	; 0x54
   18f90:	ldrd	r2, [r3]
   18f94:	strd	r2, [r1]
   18f98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18f9c:	mov	r2, #0
   18fa0:	str	r2, [r3]
   18fa4:	b	18fb8 <_start@@Base+0x4998>
   18fa8:	ldr	r3, [fp, #-8]
   18fac:	b	18fbc <_start@@Base+0x499c>
   18fb0:	ldr	r3, [fp, #-8]
   18fb4:	b	18fbc <_start@@Base+0x499c>
   18fb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18fbc:	mov	r0, r3
   18fc0:	sub	sp, fp, #4
   18fc4:	pop	{fp, pc}
   18fc8:			; <UNDEFINED> instruction: 0xffffffff
   18fcc:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   18fd0:	andeq	r0, r0, r0
   18fd4:	stmdavs	r5!, {r0, r4, r5, fp, ip, sp, lr}^
   18fd8:	strbvs	r0, [r7, #-0]!
   18fdc:	stmdavs	r5!, {r1, r2, r3, r5, r6, fp, ip, sp, lr}^
   18fe0:	andeq	r0, r0, r0
   18fe4:	stmdavs	r5!, {r1, r4, r5, fp, ip, sp, lr}^
   18fe8:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   18fec:	andeq	r0, r0, r0
   18ff0:			; <UNDEFINED> instruction: 0xffff0000
   18ff4:	push	{fp, lr}
   18ff8:	add	fp, sp, #4
   18ffc:	sub	sp, sp, #48	; 0x30
   19000:	str	r0, [fp, #-32]	; 0xffffffe0
   19004:	str	r1, [fp, #-36]	; 0xffffffdc
   19008:	str	r2, [fp, #-40]	; 0xffffffd8
   1900c:	str	r3, [fp, #-44]	; 0xffffffd4
   19010:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19014:	str	r3, [fp, #-8]
   19018:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1901c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19020:	bl	14f70 <_start@@Base+0x950>
   19024:	strd	r0, [fp, #-20]	; 0xffffffec
   19028:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1902c:	add	r1, pc, #452	; 0x1c4
   19030:	ldrd	r0, [r1]
   19034:	cmp	r3, r1
   19038:	cmpeq	r2, r0
   1903c:	bhi	190d0 <_start@@Base+0x4ab0>
   19040:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19044:	mov	r0, #0
   19048:	mvn	r1, #0
   1904c:	and	r2, r2, r0
   19050:	and	r3, r3, r1
   19054:	add	r1, pc, #420	; 0x1a4
   19058:	ldrd	r0, [r1]
   1905c:	cmp	r3, r1
   19060:	cmpeq	r2, r0
   19064:	bne	190c8 <_start@@Base+0x4aa8>
   19068:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1906c:	str	r3, [fp, #-24]	; 0xffffffe8
   19070:	ldr	r3, [fp, #8]
   19074:	str	r3, [sp]
   19078:	mov	r3, #4
   1907c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19080:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19084:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19088:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   1908c:	str	r0, [fp, #-36]	; 0xffffffdc
   19090:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19094:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19098:	cmp	r2, r3
   1909c:	beq	190c0 <_start@@Base+0x4aa0>
   190a0:	ldr	r1, [fp, #4]
   190a4:	mov	r2, #8
   190a8:	mov	r3, #0
   190ac:	strd	r2, [r1]
   190b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   190b4:	mov	r2, #0
   190b8:	str	r2, [r3]
   190bc:	b	191e8 <_start@@Base+0x4bc8>
   190c0:	ldr	r3, [fp, #-8]
   190c4:	b	191ec <_start@@Base+0x4bcc>
   190c8:	ldr	r3, [fp, #-8]
   190cc:	b	191ec <_start@@Base+0x4bcc>
   190d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   190d4:	mov	r0, #0
   190d8:	mvn	r1, #255	; 0xff
   190dc:	and	r2, r2, r0
   190e0:	and	r3, r3, r1
   190e4:	add	r1, pc, #284	; 0x11c
   190e8:	ldrd	r0, [r1]
   190ec:	cmp	r3, r1
   190f0:	cmpeq	r2, r0
   190f4:	bne	19158 <_start@@Base+0x4b38>
   190f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   190fc:	str	r3, [fp, #-24]	; 0xffffffe8
   19100:	ldr	r3, [fp, #8]
   19104:	str	r3, [sp]
   19108:	mov	r3, #3
   1910c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19114:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19118:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   1911c:	str	r0, [fp, #-36]	; 0xffffffdc
   19120:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19128:	cmp	r2, r3
   1912c:	beq	19150 <_start@@Base+0x4b30>
   19130:	ldr	r1, [fp, #4]
   19134:	mov	r2, #1
   19138:	mov	r3, #0
   1913c:	strd	r2, [r1]
   19140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19144:	mov	r2, #0
   19148:	str	r2, [r3]
   1914c:	b	191e8 <_start@@Base+0x4bc8>
   19150:	ldr	r3, [fp, #-8]
   19154:	b	191ec <_start@@Base+0x4bcc>
   19158:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1915c:	mov	r0, #-16777216	; 0xff000000
   19160:	mvn	r1, #0
   19164:	and	r2, r2, r0
   19168:	and	r3, r3, r1
   1916c:	add	r1, pc, #156	; 0x9c
   19170:	ldrd	r0, [r1]
   19174:	cmp	r3, r1
   19178:	cmpeq	r2, r0
   1917c:	bne	191e0 <_start@@Base+0x4bc0>
   19180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19184:	str	r3, [fp, #-24]	; 0xffffffe8
   19188:	ldr	r3, [fp, #8]
   1918c:	str	r3, [sp]
   19190:	mov	r3, #5
   19194:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19198:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1919c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   191a0:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   191a4:	str	r0, [fp, #-36]	; 0xffffffdc
   191a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   191ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   191b0:	cmp	r2, r3
   191b4:	beq	191d8 <_start@@Base+0x4bb8>
   191b8:	ldr	r1, [fp, #4]
   191bc:	mov	r2, #2
   191c0:	mov	r3, #0
   191c4:	strd	r2, [r1]
   191c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   191cc:	mov	r2, #0
   191d0:	str	r2, [r3]
   191d4:	b	191e8 <_start@@Base+0x4bc8>
   191d8:	ldr	r3, [fp, #-8]
   191dc:	b	191ec <_start@@Base+0x4bcc>
   191e0:	ldr	r3, [fp, #-8]
   191e4:	b	191ec <_start@@Base+0x4bcc>
   191e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191ec:	mov	r0, r3
   191f0:	sub	sp, fp, #4
   191f4:	pop	{fp, pc}
   191f8:	ldclvs	15, cr15, [pc, #1020]!	; 195fc <_start@@Base+0x4fdc>
   191fc:	ldrbmi	r6, [r2, -r5, ror #10]!
   19200:	andeq	r0, r0, r0
   19204:	rsbmi	r7, ip, #423624704	; 0x19400000
   19208:	andeq	r0, r0, r0
   1920c:	rsbpl	r6, r5, #0, 8
   19210:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   19214:	ldrbmi	r6, [r2, -r5, ror #10]!
   19218:	push	{fp, lr}
   1921c:	add	fp, sp, #4
   19220:	sub	sp, sp, #16
   19224:	str	r0, [fp, #-8]
   19228:	str	r1, [fp, #-12]
   1922c:	str	r2, [fp, #-16]
   19230:	strb	r3, [fp, #-17]	; 0xffffffef
   19234:	ldr	r3, [fp, #4]
   19238:	mov	r2, #0
   1923c:	str	r2, [r3]
   19240:	ldrb	r3, [fp, #-17]	; 0xffffffef
   19244:	cmp	r3, #4
   19248:	addls	pc, pc, r3, lsl #2
   1924c:	b	192ec <_start@@Base+0x4ccc>
   19250:	b	19264 <_start@@Base+0x4c44>
   19254:	b	1927c <_start@@Base+0x4c5c>
   19258:	b	19298 <_start@@Base+0x4c78>
   1925c:	b	192b4 <_start@@Base+0x4c94>
   19260:	b	192d0 <_start@@Base+0x4cb0>
   19264:	ldr	r2, [fp, #-16]
   19268:	ldr	r1, [fp, #-12]
   1926c:	ldr	r0, [fp, #-8]
   19270:	bl	15c68 <_start@@Base+0x1648>
   19274:	mov	r3, r0
   19278:	b	1937c <_start@@Base+0x4d5c>
   1927c:	ldr	r3, [fp, #4]
   19280:	ldr	r2, [fp, #-16]
   19284:	ldr	r1, [fp, #-12]
   19288:	ldr	r0, [fp, #-8]
   1928c:	bl	1e4c4 <_start@@Base+0x9ea4>
   19290:	str	r0, [fp, #-12]
   19294:	b	19334 <_start@@Base+0x4d14>
   19298:	ldr	r3, [fp, #4]
   1929c:	ldr	r2, [fp, #-16]
   192a0:	ldr	r1, [fp, #-12]
   192a4:	ldr	r0, [fp, #-8]
   192a8:	bl	1a0b8 <_start@@Base+0x5a98>
   192ac:	str	r0, [fp, #-12]
   192b0:	b	19334 <_start@@Base+0x4d14>
   192b4:	ldr	r3, [fp, #4]
   192b8:	ldr	r2, [fp, #-16]
   192bc:	ldr	r1, [fp, #-12]
   192c0:	ldr	r0, [fp, #-8]
   192c4:	bl	18440 <_start@@Base+0x3e20>
   192c8:	str	r0, [fp, #-12]
   192cc:	b	19334 <_start@@Base+0x4d14>
   192d0:	ldr	r3, [fp, #4]
   192d4:	ldr	r2, [fp, #-16]
   192d8:	ldr	r1, [fp, #-12]
   192dc:	ldr	r0, [fp, #-8]
   192e0:	bl	1c228 <_start@@Base+0x7c08>
   192e4:	str	r0, [fp, #-12]
   192e8:	b	19334 <_start@@Base+0x4d14>
   192ec:	ldr	r3, [fp, #-8]
   192f0:	ldr	r3, [r3, #8]
   192f4:	and	r3, r3, #1
   192f8:	cmp	r3, #0
   192fc:	bne	1931c <_start@@Base+0x4cfc>
   19300:	mov	r3, #15
   19304:	ldr	r2, [fp, #-16]
   19308:	ldr	r1, [fp, #-12]
   1930c:	ldr	r0, [fp, #-8]
   19310:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   19314:	mov	r3, r0
   19318:	b	1937c <_start@@Base+0x4d5c>
   1931c:	ldr	r2, [fp, #-16]
   19320:	ldr	r1, [fp, #-12]
   19324:	ldr	r0, [fp, #-8]
   19328:	bl	3b2b8 <flatcc_json_parser_generic_json@@Base>
   1932c:	mov	r3, r0
   19330:	b	1937c <_start@@Base+0x4d5c>
   19334:	ldr	r3, [fp, #-8]
   19338:	ldr	r3, [r3, #20]
   1933c:	cmp	r3, #0
   19340:	beq	1934c <_start@@Base+0x4d2c>
   19344:	ldr	r3, [fp, #-12]
   19348:	b	1937c <_start@@Base+0x4d5c>
   1934c:	ldr	r3, [fp, #4]
   19350:	ldr	r3, [r3]
   19354:	cmp	r3, #0
   19358:	bne	19378 <_start@@Base+0x4d58>
   1935c:	mov	r3, #33	; 0x21
   19360:	ldr	r2, [fp, #-16]
   19364:	ldr	r1, [fp, #-12]
   19368:	ldr	r0, [fp, #-8]
   1936c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   19370:	mov	r3, r0
   19374:	b	1937c <_start@@Base+0x4d5c>
   19378:	ldr	r3, [fp, #-12]
   1937c:	mov	r0, r3
   19380:	sub	sp, fp, #4
   19384:	pop	{fp, pc}
   19388:	push	{fp}		; (str fp, [sp, #-4]!)
   1938c:	add	fp, sp, #0
   19390:	sub	sp, sp, #12
   19394:	mov	r3, r0
   19398:	strb	r3, [fp, #-5]
   1939c:	ldrb	r3, [fp, #-5]
   193a0:	cmp	r3, #4
   193a4:	addls	pc, pc, r3, lsl #2
   193a8:	b	193e8 <_start@@Base+0x4dc8>
   193ac:	b	193c0 <_start@@Base+0x4da0>
   193b0:	b	193c8 <_start@@Base+0x4da8>
   193b4:	b	193d0 <_start@@Base+0x4db0>
   193b8:	b	193d8 <_start@@Base+0x4db8>
   193bc:	b	193e0 <_start@@Base+0x4dc0>
   193c0:	mov	r3, #1
   193c4:	b	193ec <_start@@Base+0x4dcc>
   193c8:	mov	r3, #1
   193cc:	b	193ec <_start@@Base+0x4dcc>
   193d0:	mov	r3, #1
   193d4:	b	193ec <_start@@Base+0x4dcc>
   193d8:	mov	r3, #1
   193dc:	b	193ec <_start@@Base+0x4dcc>
   193e0:	mov	r3, #1
   193e4:	b	193ec <_start@@Base+0x4dcc>
   193e8:	mov	r3, #0
   193ec:	mov	r0, r3
   193f0:	add	sp, fp, #0
   193f4:	pop	{fp}		; (ldr fp, [sp], #4)
   193f8:	bx	lr
   193fc:	push	{fp, lr}
   19400:	add	fp, sp, #4
   19404:	sub	sp, sp, #48	; 0x30
   19408:	str	r0, [fp, #-32]	; 0xffffffe0
   1940c:	str	r1, [fp, #-36]	; 0xffffffdc
   19410:	str	r2, [fp, #-40]	; 0xffffffd8
   19414:	str	r3, [fp, #-44]	; 0xffffffd4
   19418:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1941c:	str	r3, [fp, #-8]
   19420:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19424:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19428:	bl	14f70 <_start@@Base+0x950>
   1942c:	strd	r0, [fp, #-20]	; 0xffffffec
   19430:	ldrd	r2, [fp, #-20]	; 0xffffffec
   19434:	add	r1, pc, #836	; 0x344
   19438:	ldrd	r0, [r1]
   1943c:	cmp	r3, r1
   19440:	cmpeq	r2, r0
   19444:	bhi	194d8 <_start@@Base+0x4eb8>
   19448:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1944c:	mov	r0, #0
   19450:	mvn	r1, #255	; 0xff
   19454:	and	r2, r2, r0
   19458:	and	r3, r3, r1
   1945c:	add	r1, pc, #804	; 0x324
   19460:	ldrd	r0, [r1]
   19464:	cmp	r3, r1
   19468:	cmpeq	r2, r0
   1946c:	bne	194d0 <_start@@Base+0x4eb0>
   19470:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19474:	str	r3, [fp, #-24]	; 0xffffffe8
   19478:	ldr	r3, [fp, #8]
   1947c:	str	r3, [sp]
   19480:	mov	r3, #3
   19484:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1948c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19490:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   19494:	str	r0, [fp, #-36]	; 0xffffffdc
   19498:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1949c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   194a0:	cmp	r2, r3
   194a4:	beq	194c8 <_start@@Base+0x4ea8>
   194a8:	ldr	r1, [fp, #4]
   194ac:	mov	r2, #4
   194b0:	mov	r3, #0
   194b4:	strd	r2, [r1]
   194b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   194bc:	mov	r2, #0
   194c0:	str	r2, [r3]
   194c4:	b	19770 <_start@@Base+0x5150>
   194c8:	ldr	r3, [fp, #-8]
   194cc:	b	19774 <_start@@Base+0x5154>
   194d0:	ldr	r3, [fp, #-8]
   194d4:	b	19774 <_start@@Base+0x5154>
   194d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   194dc:	add	r1, pc, #684	; 0x2ac
   194e0:	ldrd	r0, [r1]
   194e4:	cmp	r3, r1
   194e8:	cmpeq	r2, r0
   194ec:	bne	19548 <_start@@Base+0x4f28>
   194f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   194f4:	str	r3, [fp, #-24]	; 0xffffffe8
   194f8:	ldr	r3, [fp, #8]
   194fc:	str	r3, [sp]
   19500:	mov	r3, #8
   19504:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19508:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1950c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19510:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   19514:	str	r0, [fp, #-36]	; 0xffffffdc
   19518:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1951c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19520:	cmp	r2, r3
   19524:	beq	195c8 <_start@@Base+0x4fa8>
   19528:	ldr	r1, [fp, #4]
   1952c:	mov	r2, #3
   19530:	mov	r3, #0
   19534:	strd	r2, [r1]
   19538:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1953c:	mov	r2, #0
   19540:	str	r2, [r3]
   19544:	b	19770 <_start@@Base+0x5150>
   19548:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1954c:	mvn	r0, #255	; 0xff
   19550:	mvn	r1, #0
   19554:	and	r2, r2, r0
   19558:	and	r3, r3, r1
   1955c:	add	r1, pc, #564	; 0x234
   19560:	ldrd	r0, [r1]
   19564:	cmp	r3, r1
   19568:	cmpeq	r2, r0
   1956c:	bne	195d0 <_start@@Base+0x4fb0>
   19570:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19574:	str	r3, [fp, #-24]	; 0xffffffe8
   19578:	ldr	r3, [fp, #8]
   1957c:	str	r3, [sp]
   19580:	mov	r3, #7
   19584:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19588:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1958c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19590:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   19594:	str	r0, [fp, #-36]	; 0xffffffdc
   19598:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1959c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   195a0:	cmp	r2, r3
   195a4:	beq	195d8 <_start@@Base+0x4fb8>
   195a8:	ldr	r1, [fp, #4]
   195ac:	mov	r2, #1
   195b0:	mov	r3, #0
   195b4:	strd	r2, [r1]
   195b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   195bc:	mov	r2, #0
   195c0:	str	r2, [r3]
   195c4:	b	19770 <_start@@Base+0x5150>
   195c8:	nop			; (mov r0, r0)
   195cc:	b	195dc <_start@@Base+0x4fbc>
   195d0:	nop			; (mov r0, r0)
   195d4:	b	195dc <_start@@Base+0x4fbc>
   195d8:	nop			; (mov r0, r0)
   195dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   195e0:	mov	r0, #0
   195e4:	mvn	r1, #0
   195e8:	and	r2, r2, r0
   195ec:	and	r3, r3, r1
   195f0:	add	r1, pc, #424	; 0x1a8
   195f4:	ldrd	r0, [r1]
   195f8:	cmp	r3, r1
   195fc:	cmpeq	r2, r0
   19600:	bne	1965c <_start@@Base+0x503c>
   19604:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19608:	str	r3, [fp, #-24]	; 0xffffffe8
   1960c:	ldr	r3, [fp, #8]
   19610:	str	r3, [sp]
   19614:	mov	r3, #4
   19618:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1961c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19620:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19624:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   19628:	str	r0, [fp, #-36]	; 0xffffffdc
   1962c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19634:	cmp	r2, r3
   19638:	beq	19664 <_start@@Base+0x5044>
   1963c:	ldr	r1, [fp, #4]
   19640:	mov	r2, #0
   19644:	mov	r3, #0
   19648:	strd	r2, [r1]
   1964c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19650:	mov	r2, #0
   19654:	str	r2, [r3]
   19658:	b	19770 <_start@@Base+0x5150>
   1965c:	nop			; (mov r0, r0)
   19660:	b	19668 <_start@@Base+0x5048>
   19664:	nop			; (mov r0, r0)
   19668:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1966c:	add	r1, pc, #308	; 0x134
   19670:	ldrd	r0, [r1]
   19674:	cmp	r3, r1
   19678:	cmpeq	r2, r0
   1967c:	bne	19768 <_start@@Base+0x5148>
   19680:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19684:	add	r3, r3, #8
   19688:	str	r3, [fp, #-36]	; 0xffffffdc
   1968c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19690:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19694:	bl	14f70 <_start@@Base+0x950>
   19698:	strd	r0, [fp, #-20]	; 0xffffffec
   1969c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   196a0:	add	r1, pc, #264	; 0x108
   196a4:	ldrd	r0, [r1]
   196a8:	cmp	r3, r1
   196ac:	cmpeq	r2, r0
   196b0:	bne	19760 <_start@@Base+0x5140>
   196b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196b8:	add	r3, r3, #8
   196bc:	str	r3, [fp, #-36]	; 0xffffffdc
   196c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   196c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   196c8:	bl	14f70 <_start@@Base+0x950>
   196cc:	strd	r0, [fp, #-20]	; 0xffffffec
   196d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   196d4:	mvn	r0, #255	; 0xff
   196d8:	mvn	r1, #0
   196dc:	and	r2, r2, r0
   196e0:	and	r3, r3, r1
   196e4:	add	r1, pc, #204	; 0xcc
   196e8:	ldrd	r0, [r1]
   196ec:	cmp	r3, r1
   196f0:	cmpeq	r2, r0
   196f4:	bne	19758 <_start@@Base+0x5138>
   196f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196fc:	str	r3, [fp, #-24]	; 0xffffffe8
   19700:	ldr	r3, [fp, #8]
   19704:	str	r3, [sp]
   19708:	mov	r3, #7
   1970c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19718:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   1971c:	str	r0, [fp, #-36]	; 0xffffffdc
   19720:	ldr	r2, [fp, #-36]	; 0xffffffdc
   19724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19728:	cmp	r2, r3
   1972c:	beq	19750 <_start@@Base+0x5130>
   19730:	ldr	r1, [fp, #4]
   19734:	mov	r2, #2
   19738:	mov	r3, #0
   1973c:	strd	r2, [r1]
   19740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19744:	mov	r2, #0
   19748:	str	r2, [r3]
   1974c:	b	19770 <_start@@Base+0x5150>
   19750:	ldr	r3, [fp, #-8]
   19754:	b	19774 <_start@@Base+0x5154>
   19758:	ldr	r3, [fp, #-8]
   1975c:	b	19774 <_start@@Base+0x5154>
   19760:	ldr	r3, [fp, #-8]
   19764:	b	19774 <_start@@Base+0x5154>
   19768:	ldr	r3, [fp, #-8]
   1976c:	b	19774 <_start@@Base+0x5154>
   19770:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19774:	mov	r0, r3
   19778:	sub	sp, fp, #4
   1977c:	pop	{fp, pc}
   19780:	strbtvc	r7, [r5], #-511	; 0xfffffe01
   19784:	stclmi	14, cr6, [pc, #-460]!	; 195c0 <_start@@Base+0x4fa0>
   19788:	andeq	r0, r0, r0
   1978c:	cmnmi	ip, r0, lsl #8
   19790:	strbtvc	r7, [r5], #-562	; 0xfffffdce
   19794:	stclmi	14, cr6, [pc, #-460]!	; 195d0 <_start@@Base+0x4fb0>
   19798:	strbtvc	r7, [r5], #-512	; 0xfffffe00
   1979c:	stclmi	14, cr6, [pc, #-460]!	; 195d8 <_start@@Base+0x4fb8>
   197a0:	andeq	r0, r0, r0
   197a4:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   197a8:	cmnpl	r9, #112, 26	; 0x1c00
   197ac:	strbtpl	r7, [r5], #-884	; 0xfffffc8c
   197b0:	rsbvs	r6, ip, #364904448	; 0x15c00000
   197b4:	cfstrdvs	mvd5, [r5], #-388	; 0xfffffe7c
   197b8:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   197bc:	ldmdbvs	r4!, {r0, r2, r6, fp, sp, lr}^
   197c0:	push	{fp, lr}
   197c4:	add	fp, sp, #4
   197c8:	sub	sp, sp, #48	; 0x30
   197cc:	str	r0, [fp, #-32]	; 0xffffffe0
   197d0:	str	r1, [fp, #-36]	; 0xffffffdc
   197d4:	str	r2, [fp, #-40]	; 0xffffffd8
   197d8:	str	r3, [fp, #-44]	; 0xffffffd4
   197dc:	sub	r3, fp, #24
   197e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   197e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   197e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   197ec:	bl	1508c <_start@@Base+0xa6c>
   197f0:	str	r0, [fp, #-36]	; 0xffffffdc
   197f4:	b	19a5c <_start@@Base+0x543c>
   197f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   197fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19800:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19804:	bl	14cb8 <_start@@Base+0x698>
   19808:	str	r0, [fp, #-36]	; 0xffffffdc
   1980c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19810:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19814:	bl	14f70 <_start@@Base+0x950>
   19818:	strd	r0, [fp, #-12]
   1981c:	ldrd	r2, [fp, #-12]
   19820:	mov	r0, #0
   19824:	mov	r1, #-16777216	; 0xff000000
   19828:	and	r2, r2, r0
   1982c:	and	r3, r3, r1
   19830:	cmp	r3, #1644167168	; 0x62000000
   19834:	cmpeq	r2, #0
   19838:	bne	19928 <_start@@Base+0x5308>
   1983c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19840:	str	r3, [fp, #-16]
   19844:	mov	r3, #1
   19848:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1984c:	ldr	r1, [fp, #-16]
   19850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19854:	bl	1552c <_start@@Base+0xf0c>
   19858:	str	r0, [fp, #-36]	; 0xffffffdc
   1985c:	ldr	r2, [fp, #-16]
   19860:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19864:	cmp	r2, r3
   19868:	beq	19910 <_start@@Base+0x52f0>
   1986c:	mov	r3, #0
   19870:	strb	r3, [fp, #-25]	; 0xffffffe7
   19874:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19878:	add	r3, r3, #2
   1987c:	str	r3, [fp, #-20]	; 0xffffffec
   19880:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19884:	str	r3, [fp, #-16]
   19888:	sub	r3, fp, #25
   1988c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19890:	ldr	r1, [fp, #-16]
   19894:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19898:	bl	162a4 <_start@@Base+0x1c84>
   1989c:	str	r0, [fp, #-36]	; 0xffffffdc
   198a0:	ldr	r2, [fp, #-16]
   198a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   198a8:	cmp	r2, r3
   198ac:	bne	198fc <_start@@Base+0x52dc>
   198b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   198b4:	str	r3, [fp, #-16]
   198b8:	sub	r3, fp, #25
   198bc:	str	r3, [sp]
   198c0:	ldr	r3, [pc, #460]	; 19a94 <_start@@Base+0x5474>
   198c4:	add	r3, pc, r3
   198c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   198cc:	ldr	r1, [fp, #-16]
   198d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   198d4:	bl	16f54 <_start@@Base+0x2934>
   198d8:	str	r0, [fp, #-36]	; 0xffffffdc
   198dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   198e0:	ldr	r3, [fp, #-16]
   198e4:	cmp	r2, r3
   198e8:	beq	19a70 <_start@@Base+0x5450>
   198ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   198f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   198f4:	cmp	r2, r3
   198f8:	beq	19a70 <_start@@Base+0x5450>
   198fc:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   19900:	mov	r1, r3
   19904:	ldr	r0, [fp, #-20]	; 0xffffffec
   19908:	bl	148f8 <_start@@Base+0x2d8>
   1990c:	b	19a44 <_start@@Base+0x5424>
   19910:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19914:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1991c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   19920:	str	r0, [fp, #-36]	; 0xffffffdc
   19924:	b	19a44 <_start@@Base+0x5424>
   19928:	ldrd	r2, [fp, #-12]
   1992c:	mov	r0, #0
   19930:	mov	r1, #-16777216	; 0xff000000
   19934:	and	r2, r2, r0
   19938:	and	r3, r3, r1
   1993c:	cmp	r3, #1627389952	; 0x61000000
   19940:	cmpeq	r2, #0
   19944:	bne	19a30 <_start@@Base+0x5410>
   19948:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1994c:	str	r3, [fp, #-16]
   19950:	mov	r3, #1
   19954:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19958:	ldr	r1, [fp, #-16]
   1995c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19960:	bl	1552c <_start@@Base+0xf0c>
   19964:	str	r0, [fp, #-36]	; 0xffffffdc
   19968:	ldr	r2, [fp, #-16]
   1996c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19970:	cmp	r2, r3
   19974:	beq	19a18 <_start@@Base+0x53f8>
   19978:	mov	r3, #0
   1997c:	strh	r3, [fp, #-28]	; 0xffffffe4
   19980:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19984:	str	r3, [fp, #-20]	; 0xffffffec
   19988:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1998c:	str	r3, [fp, #-16]
   19990:	sub	r3, fp, #28
   19994:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19998:	ldr	r1, [fp, #-16]
   1999c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199a0:	bl	161d4 <_start@@Base+0x1bb4>
   199a4:	str	r0, [fp, #-36]	; 0xffffffdc
   199a8:	ldr	r2, [fp, #-16]
   199ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   199b0:	cmp	r2, r3
   199b4:	bne	19a04 <_start@@Base+0x53e4>
   199b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   199bc:	str	r3, [fp, #-16]
   199c0:	sub	r3, fp, #28
   199c4:	str	r3, [sp]
   199c8:	ldr	r3, [pc, #200]	; 19a98 <_start@@Base+0x5478>
   199cc:	add	r3, pc, r3
   199d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   199d4:	ldr	r1, [fp, #-16]
   199d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   199dc:	bl	16dc0 <_start@@Base+0x27a0>
   199e0:	str	r0, [fp, #-36]	; 0xffffffdc
   199e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   199e8:	ldr	r3, [fp, #-16]
   199ec:	cmp	r2, r3
   199f0:	beq	19a70 <_start@@Base+0x5450>
   199f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   199f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   199fc:	cmp	r2, r3
   19a00:	beq	19a70 <_start@@Base+0x5450>
   19a04:	ldrsh	r3, [fp, #-28]	; 0xffffffe4
   19a08:	mov	r1, r3
   19a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19a10:	bl	14960 <_start@@Base+0x340>
   19a14:	b	19a44 <_start@@Base+0x5424>
   19a18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a1c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a24:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   19a28:	str	r0, [fp, #-36]	; 0xffffffdc
   19a2c:	b	19a44 <_start@@Base+0x5424>
   19a30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a3c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   19a40:	str	r0, [fp, #-36]	; 0xffffffdc
   19a44:	sub	r3, fp, #24
   19a48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a54:	bl	15174 <_start@@Base+0xb54>
   19a58:	str	r0, [fp, #-36]	; 0xffffffdc
   19a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19a60:	cmp	r3, #0
   19a64:	bne	197f8 <_start@@Base+0x51d8>
   19a68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19a6c:	b	19a88 <_start@@Base+0x5468>
   19a70:	mov	r3, #33	; 0x21
   19a74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19a78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19a80:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   19a84:	mov	r3, r0
   19a88:	mov	r0, r3
   19a8c:	sub	sp, fp, #4
   19a90:	pop	{fp, pc}
   19a94:	andeq	r8, r4, r4, asr #15
   19a98:	andeq	r8, r4, r8, asr #13
   19a9c:	push	{fp, lr}
   19aa0:	add	fp, sp, #4
   19aa4:	sub	sp, sp, #24
   19aa8:	str	r0, [fp, #-16]
   19aac:	str	r1, [fp, #-20]	; 0xffffffec
   19ab0:	str	r2, [fp, #-24]	; 0xffffffe8
   19ab4:	str	r3, [fp, #-28]	; 0xffffffe4
   19ab8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19abc:	mov	r2, #0
   19ac0:	str	r2, [r3]
   19ac4:	ldr	r3, [fp, #-16]
   19ac8:	ldr	r3, [r3]
   19acc:	mov	r2, #2
   19ad0:	mov	r1, #4
   19ad4:	mov	r0, r3
   19ad8:	bl	2deac <flatcc_builder_start_struct@@Base>
   19adc:	str	r0, [fp, #-8]
   19ae0:	ldr	r3, [fp, #-8]
   19ae4:	cmp	r3, #0
   19ae8:	beq	19b48 <_start@@Base+0x5528>
   19aec:	ldr	r3, [fp, #-8]
   19af0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19af4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19af8:	ldr	r0, [fp, #-16]
   19afc:	bl	197c0 <_start@@Base+0x51a0>
   19b00:	str	r0, [fp, #-20]	; 0xffffffec
   19b04:	ldr	r2, [fp, #-20]	; 0xffffffec
   19b08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19b0c:	cmp	r2, r3
   19b10:	beq	19b4c <_start@@Base+0x552c>
   19b14:	ldr	r3, [fp, #-16]
   19b18:	ldr	r3, [r3]
   19b1c:	mov	r0, r3
   19b20:	bl	2df4c <flatcc_builder_end_struct@@Base>
   19b24:	mov	r2, r0
   19b28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b2c:	str	r2, [r3]
   19b30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b34:	ldr	r3, [r3]
   19b38:	cmp	r3, #0
   19b3c:	beq	19b4c <_start@@Base+0x552c>
   19b40:	ldr	r3, [fp, #-20]	; 0xffffffec
   19b44:	b	19b64 <_start@@Base+0x5544>
   19b48:	nop			; (mov r0, r0)
   19b4c:	mov	r3, #33	; 0x21
   19b50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b54:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b58:	ldr	r0, [fp, #-16]
   19b5c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   19b60:	mov	r3, r0
   19b64:	mov	r0, r3
   19b68:	sub	sp, fp, #4
   19b6c:	pop	{fp, pc}
   19b70:	push	{fp, lr}
   19b74:	add	fp, sp, #4
   19b78:	sub	sp, sp, #24
   19b7c:	str	r0, [fp, #-16]
   19b80:	str	r1, [fp, #-20]	; 0xffffffec
   19b84:	str	r2, [fp, #-24]	; 0xffffffe8
   19b88:	str	r3, [fp, #-28]	; 0xffffffe4
   19b8c:	sub	r3, fp, #8
   19b90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b94:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b98:	ldr	r0, [fp, #-16]
   19b9c:	bl	1508c <_start@@Base+0xa6c>
   19ba0:	str	r0, [fp, #-20]	; 0xffffffec
   19ba4:	b	19bd4 <_start@@Base+0x55b4>
   19ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bac:	ldr	r1, [fp, #-20]	; 0xffffffec
   19bb0:	ldr	r0, [fp, #-16]
   19bb4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   19bb8:	str	r0, [fp, #-20]	; 0xffffffec
   19bbc:	sub	r3, fp, #8
   19bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19bc8:	ldr	r0, [fp, #-16]
   19bcc:	bl	15174 <_start@@Base+0xb54>
   19bd0:	str	r0, [fp, #-20]	; 0xffffffec
   19bd4:	ldr	r3, [fp, #-8]
   19bd8:	cmp	r3, #0
   19bdc:	bne	19ba8 <_start@@Base+0x5588>
   19be0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19be4:	mov	r0, r3
   19be8:	sub	sp, fp, #4
   19bec:	pop	{fp, pc}
   19bf0:	push	{fp, lr}
   19bf4:	add	fp, sp, #4
   19bf8:	sub	sp, sp, #24
   19bfc:	str	r0, [fp, #-16]
   19c00:	str	r1, [fp, #-20]	; 0xffffffec
   19c04:	str	r2, [fp, #-24]	; 0xffffffe8
   19c08:	str	r3, [fp, #-28]	; 0xffffffe4
   19c0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c10:	mov	r2, #0
   19c14:	str	r2, [r3]
   19c18:	ldr	r3, [fp, #-16]
   19c1c:	ldr	r3, [r3]
   19c20:	mov	r2, #1
   19c24:	mov	r1, #0
   19c28:	mov	r0, r3
   19c2c:	bl	2deac <flatcc_builder_start_struct@@Base>
   19c30:	str	r0, [fp, #-8]
   19c34:	ldr	r3, [fp, #-8]
   19c38:	cmp	r3, #0
   19c3c:	beq	19c9c <_start@@Base+0x567c>
   19c40:	ldr	r3, [fp, #-8]
   19c44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19c48:	ldr	r1, [fp, #-20]	; 0xffffffec
   19c4c:	ldr	r0, [fp, #-16]
   19c50:	bl	19b70 <_start@@Base+0x5550>
   19c54:	str	r0, [fp, #-20]	; 0xffffffec
   19c58:	ldr	r2, [fp, #-20]	; 0xffffffec
   19c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c60:	cmp	r2, r3
   19c64:	beq	19ca0 <_start@@Base+0x5680>
   19c68:	ldr	r3, [fp, #-16]
   19c6c:	ldr	r3, [r3]
   19c70:	mov	r0, r3
   19c74:	bl	2df4c <flatcc_builder_end_struct@@Base>
   19c78:	mov	r2, r0
   19c7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c80:	str	r2, [r3]
   19c84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c88:	ldr	r3, [r3]
   19c8c:	cmp	r3, #0
   19c90:	beq	19ca0 <_start@@Base+0x5680>
   19c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   19c98:	b	19cb8 <_start@@Base+0x5698>
   19c9c:	nop			; (mov r0, r0)
   19ca0:	mov	r3, #33	; 0x21
   19ca4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ca8:	ldr	r1, [fp, #-20]	; 0xffffffec
   19cac:	ldr	r0, [fp, #-16]
   19cb0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   19cb4:	mov	r3, r0
   19cb8:	mov	r0, r3
   19cbc:	sub	sp, fp, #4
   19cc0:	pop	{fp, pc}
   19cc4:	push	{fp, lr}
   19cc8:	add	fp, sp, #4
   19ccc:	sub	sp, sp, #24
   19cd0:	str	r0, [fp, #-16]
   19cd4:	str	r1, [fp, #-20]	; 0xffffffec
   19cd8:	str	r2, [fp, #-24]	; 0xffffffe8
   19cdc:	str	r3, [fp, #-28]	; 0xffffffe4
   19ce0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ce4:	mov	r2, #0
   19ce8:	str	r2, [r3]
   19cec:	ldr	r3, [fp, #-16]
   19cf0:	ldr	r3, [r3]
   19cf4:	mov	r1, #0
   19cf8:	mov	r0, r3
   19cfc:	bl	2ec40 <flatcc_builder_start_table@@Base>
   19d00:	mov	r3, r0
   19d04:	cmp	r3, #0
   19d08:	bne	19db8 <_start@@Base+0x5798>
   19d0c:	sub	r3, fp, #8
   19d10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d14:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d18:	ldr	r0, [fp, #-16]
   19d1c:	bl	1508c <_start@@Base+0xa6c>
   19d20:	str	r0, [fp, #-20]	; 0xffffffec
   19d24:	b	19d68 <_start@@Base+0x5748>
   19d28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d30:	ldr	r0, [fp, #-16]
   19d34:	bl	14cb8 <_start@@Base+0x698>
   19d38:	str	r0, [fp, #-20]	; 0xffffffec
   19d3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d40:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d44:	ldr	r0, [fp, #-16]
   19d48:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   19d4c:	str	r0, [fp, #-20]	; 0xffffffec
   19d50:	sub	r3, fp, #8
   19d54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d58:	ldr	r1, [fp, #-20]	; 0xffffffec
   19d5c:	ldr	r0, [fp, #-16]
   19d60:	bl	15174 <_start@@Base+0xb54>
   19d64:	str	r0, [fp, #-20]	; 0xffffffec
   19d68:	ldr	r3, [fp, #-8]
   19d6c:	cmp	r3, #0
   19d70:	bne	19d28 <_start@@Base+0x5708>
   19d74:	ldr	r3, [fp, #-16]
   19d78:	ldr	r3, [r3, #20]
   19d7c:	cmp	r3, #0
   19d80:	bne	19dc0 <_start@@Base+0x57a0>
   19d84:	ldr	r3, [fp, #-16]
   19d88:	ldr	r3, [r3]
   19d8c:	mov	r0, r3
   19d90:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   19d94:	mov	r2, r0
   19d98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d9c:	str	r2, [r3]
   19da0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19da4:	ldr	r3, [r3]
   19da8:	cmp	r3, #0
   19dac:	beq	19dc8 <_start@@Base+0x57a8>
   19db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   19db4:	b	19de4 <_start@@Base+0x57c4>
   19db8:	nop			; (mov r0, r0)
   19dbc:	b	19dcc <_start@@Base+0x57ac>
   19dc0:	nop			; (mov r0, r0)
   19dc4:	b	19dcc <_start@@Base+0x57ac>
   19dc8:	nop			; (mov r0, r0)
   19dcc:	mov	r3, #33	; 0x21
   19dd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19dd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19dd8:	ldr	r0, [fp, #-16]
   19ddc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   19de0:	mov	r3, r0
   19de4:	mov	r0, r3
   19de8:	sub	sp, fp, #4
   19dec:	pop	{fp, pc}
   19df0:	push	{fp, lr}
   19df4:	add	fp, sp, #4
   19df8:	sub	sp, sp, #40	; 0x28
   19dfc:	str	r0, [fp, #-32]	; 0xffffffe0
   19e00:	str	r1, [fp, #-36]	; 0xffffffdc
   19e04:	str	r2, [fp, #-40]	; 0xffffffd8
   19e08:	str	r3, [fp, #-44]	; 0xffffffd4
   19e0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19e10:	mov	r2, #0
   19e14:	str	r2, [r3]
   19e18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19e1c:	ldr	r3, [r3]
   19e20:	mov	r1, #1
   19e24:	mov	r0, r3
   19e28:	bl	2ec40 <flatcc_builder_start_table@@Base>
   19e2c:	mov	r3, r0
   19e30:	cmp	r3, #0
   19e34:	bne	19fa8 <_start@@Base+0x5988>
   19e38:	sub	r3, fp, #24
   19e3c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19e40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e48:	bl	1508c <_start@@Base+0xa6c>
   19e4c:	str	r0, [fp, #-36]	; 0xffffffdc
   19e50:	b	19f58 <_start@@Base+0x5938>
   19e54:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19e58:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19e5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19e60:	bl	14cb8 <_start@@Base+0x698>
   19e64:	str	r0, [fp, #-36]	; 0xffffffdc
   19e68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19e6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19e70:	bl	14f70 <_start@@Base+0x950>
   19e74:	strd	r0, [fp, #-12]
   19e78:	ldrd	r2, [fp, #-12]
   19e7c:	mov	r0, #-16777216	; 0xff000000
   19e80:	mvn	r1, #0
   19e84:	and	r2, r2, r0
   19e88:	and	r3, r3, r1
   19e8c:	add	r1, pc, #340	; 0x154
   19e90:	ldrd	r0, [r1]
   19e94:	cmp	r3, r1
   19e98:	cmpeq	r2, r0
   19e9c:	bne	19f2c <_start@@Base+0x590c>
   19ea0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ea4:	str	r3, [fp, #-16]
   19ea8:	mov	r3, #5
   19eac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19eb0:	ldr	r1, [fp, #-16]
   19eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19eb8:	bl	1552c <_start@@Base+0xf0c>
   19ebc:	str	r0, [fp, #-36]	; 0xffffffdc
   19ec0:	ldr	r2, [fp, #-16]
   19ec4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19ec8:	cmp	r2, r3
   19ecc:	beq	19f14 <_start@@Base+0x58f4>
   19ed0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ed4:	ldr	r0, [r3]
   19ed8:	mov	r3, #1
   19edc:	mov	r2, #0
   19ee0:	mov	r1, #0
   19ee4:	bl	31134 <flatcc_builder_table_add@@Base>
   19ee8:	str	r0, [fp, #-20]	; 0xffffffec
   19eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   19ef0:	cmp	r3, #0
   19ef4:	beq	19fb0 <_start@@Base+0x5990>
   19ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19efc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f00:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f08:	bl	19b70 <_start@@Base+0x5550>
   19f0c:	str	r0, [fp, #-36]	; 0xffffffdc
   19f10:	b	19f40 <_start@@Base+0x5920>
   19f14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f20:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   19f24:	str	r0, [fp, #-36]	; 0xffffffdc
   19f28:	b	19f40 <_start@@Base+0x5920>
   19f2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f38:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   19f3c:	str	r0, [fp, #-36]	; 0xffffffdc
   19f40:	sub	r3, fp, #24
   19f44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19f48:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f50:	bl	15174 <_start@@Base+0xb54>
   19f54:	str	r0, [fp, #-36]	; 0xffffffdc
   19f58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19f5c:	cmp	r3, #0
   19f60:	bne	19e54 <_start@@Base+0x5834>
   19f64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f68:	ldr	r3, [r3, #20]
   19f6c:	cmp	r3, #0
   19f70:	bne	19fb8 <_start@@Base+0x5998>
   19f74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19f78:	ldr	r3, [r3]
   19f7c:	mov	r0, r3
   19f80:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   19f84:	mov	r2, r0
   19f88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19f8c:	str	r2, [r3]
   19f90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19f94:	ldr	r3, [r3]
   19f98:	cmp	r3, #0
   19f9c:	beq	19fc0 <_start@@Base+0x59a0>
   19fa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19fa4:	b	19fdc <_start@@Base+0x59bc>
   19fa8:	nop			; (mov r0, r0)
   19fac:	b	19fc4 <_start@@Base+0x59a4>
   19fb0:	nop			; (mov r0, r0)
   19fb4:	b	19fc4 <_start@@Base+0x59a4>
   19fb8:	nop			; (mov r0, r0)
   19fbc:	b	19fc4 <_start@@Base+0x59a4>
   19fc0:	nop			; (mov r0, r0)
   19fc4:	mov	r3, #33	; 0x21
   19fc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   19fcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19fd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fd4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   19fd8:	mov	r3, r0
   19fdc:	mov	r0, r3
   19fe0:	sub	sp, fp, #4
   19fe4:	pop	{fp, pc}
   19fe8:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   19fec:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   19ff0:	push	{fp, lr}
   19ff4:	add	fp, sp, #4
   19ff8:	sub	sp, sp, #48	; 0x30
   19ffc:	str	r0, [fp, #-32]	; 0xffffffe0
   1a000:	str	r1, [fp, #-36]	; 0xffffffdc
   1a004:	str	r2, [fp, #-40]	; 0xffffffd8
   1a008:	str	r3, [fp, #-44]	; 0xffffffd4
   1a00c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a010:	str	r3, [fp, #-8]
   1a014:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a018:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a01c:	bl	14f70 <_start@@Base+0x950>
   1a020:	strd	r0, [fp, #-20]	; 0xffffffec
   1a024:	ldrd	r2, [fp, #-20]	; 0xffffffec
   1a028:	mov	r0, #0
   1a02c:	mov	r1, #-16777216	; 0xff000000
   1a030:	and	r2, r2, r0
   1a034:	and	r3, r3, r1
   1a038:	cmp	r3, #2013265920	; 0x78000000
   1a03c:	cmpeq	r2, #0
   1a040:	bne	1a0a8 <_start@@Base+0x5a88>
   1a044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a048:	str	r3, [fp, #-24]	; 0xffffffe8
   1a04c:	ldr	r3, [fp, #8]
   1a050:	str	r3, [sp]
   1a054:	mov	r3, #1
   1a058:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a05c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a064:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   1a068:	str	r0, [fp, #-36]	; 0xffffffdc
   1a06c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a074:	cmp	r2, r3
   1a078:	beq	1a0a0 <_start@@Base+0x5a80>
   1a07c:	ldr	r1, [fp, #4]
   1a080:	mov	r2, #0
   1a084:	mov	r3, #0
   1a088:	strd	r2, [r1]
   1a08c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a090:	mov	r2, #0
   1a094:	str	r2, [r3]
   1a098:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a09c:	b	1a0ac <_start@@Base+0x5a8c>
   1a0a0:	ldr	r3, [fp, #-8]
   1a0a4:	b	1a0ac <_start@@Base+0x5a8c>
   1a0a8:	ldr	r3, [fp, #-8]
   1a0ac:	mov	r0, r3
   1a0b0:	sub	sp, fp, #4
   1a0b4:	pop	{fp, pc}
   1a0b8:	push	{fp, lr}
   1a0bc:	add	fp, sp, #4
   1a0c0:	sub	sp, sp, #48	; 0x30
   1a0c4:	str	r0, [fp, #-32]	; 0xffffffe0
   1a0c8:	str	r1, [fp, #-36]	; 0xffffffdc
   1a0cc:	str	r2, [fp, #-40]	; 0xffffffd8
   1a0d0:	str	r3, [fp, #-44]	; 0xffffffd4
   1a0d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a0d8:	mov	r2, #0
   1a0dc:	str	r2, [r3]
   1a0e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a0e4:	ldr	r3, [r3]
   1a0e8:	mov	r1, #4
   1a0ec:	mov	r0, r3
   1a0f0:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1a0f4:	mov	r3, r0
   1a0f8:	cmp	r3, #0
   1a0fc:	bne	1a71c <_start@@Base+0x60fc>
   1a100:	sub	r3, fp, #24
   1a104:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a108:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a110:	bl	1508c <_start@@Base+0xa6c>
   1a114:	str	r0, [fp, #-36]	; 0xffffffdc
   1a118:	b	1a6cc <_start@@Base+0x60ac>
   1a11c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a120:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a128:	bl	14cb8 <_start@@Base+0x698>
   1a12c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a130:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a134:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a138:	bl	14f70 <_start@@Base+0x950>
   1a13c:	strd	r0, [fp, #-12]
   1a140:	ldrd	r2, [fp, #-12]
   1a144:	ldr	r0, [pc, #1008]	; 1a53c <_start@@Base+0x5f1c>
   1a148:	mvn	r1, #0
   1a14c:	and	r2, r2, r0
   1a150:	and	r3, r3, r1
   1a154:	add	r1, pc, #956	; 0x3bc
   1a158:	ldrd	r0, [r1]
   1a15c:	cmp	r3, r1
   1a160:	cmpeq	r2, r0
   1a164:	bne	1a278 <_start@@Base+0x5c58>
   1a168:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a16c:	str	r3, [fp, #-16]
   1a170:	mov	r3, #6
   1a174:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a178:	ldr	r1, [fp, #-16]
   1a17c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a180:	bl	1552c <_start@@Base+0xf0c>
   1a184:	str	r0, [fp, #-36]	; 0xffffffdc
   1a188:	ldr	r2, [fp, #-16]
   1a18c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a190:	cmp	r2, r3
   1a194:	beq	1a3b0 <_start@@Base+0x5d90>
   1a198:	mov	r3, #0
   1a19c:	strb	r3, [fp, #-25]	; 0xffffffe7
   1a1a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1a4:	str	r3, [fp, #-16]
   1a1a8:	sub	r3, fp, #25
   1a1ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a1b0:	ldr	r1, [fp, #-16]
   1a1b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1b8:	bl	162a4 <_start@@Base+0x1c84>
   1a1bc:	str	r0, [fp, #-36]	; 0xffffffdc
   1a1c0:	ldr	r2, [fp, #-16]
   1a1c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1c8:	cmp	r2, r3
   1a1cc:	bne	1a21c <_start@@Base+0x5bfc>
   1a1d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a1d4:	str	r3, [fp, #-16]
   1a1d8:	sub	r3, fp, #25
   1a1dc:	str	r3, [sp]
   1a1e0:	ldr	r3, [pc, #840]	; 1a530 <_start@@Base+0x5f10>
   1a1e4:	add	r3, pc, r3
   1a1e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a1ec:	ldr	r1, [fp, #-16]
   1a1f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1f4:	bl	16f54 <_start@@Base+0x2934>
   1a1f8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a1fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a200:	ldr	r3, [fp, #-16]
   1a204:	cmp	r2, r3
   1a208:	beq	1a750 <_start@@Base+0x6130>
   1a20c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a210:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a214:	cmp	r2, r3
   1a218:	beq	1a750 <_start@@Base+0x6130>
   1a21c:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   1a220:	cmp	r3, #2
   1a224:	bne	1a23c <_start@@Base+0x5c1c>
   1a228:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a22c:	ldr	r3, [r3, #8]
   1a230:	and	r3, r3, #2
   1a234:	cmp	r3, #0
   1a238:	beq	1a6b0 <_start@@Base+0x6090>
   1a23c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a240:	ldr	r0, [r3]
   1a244:	mov	r3, #1
   1a248:	mov	r2, #1
   1a24c:	mov	r1, #1
   1a250:	bl	31134 <flatcc_builder_table_add@@Base>
   1a254:	str	r0, [fp, #-20]	; 0xffffffec
   1a258:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a25c:	cmp	r3, #0
   1a260:	beq	1a724 <_start@@Base+0x6104>
   1a264:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   1a268:	mov	r1, r3
   1a26c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a270:	bl	148f8 <_start@@Base+0x2d8>
   1a274:	b	1a6b0 <_start@@Base+0x6090>
   1a278:	ldrd	r2, [fp, #-12]
   1a27c:	mov	r0, #-16777216	; 0xff000000
   1a280:	mvn	r1, #0
   1a284:	and	r2, r2, r0
   1a288:	and	r3, r3, r1
   1a28c:	add	r1, pc, #652	; 0x28c
   1a290:	ldrd	r0, [r1]
   1a294:	cmp	r3, r1
   1a298:	cmpeq	r2, r0
   1a29c:	bne	1a3b8 <_start@@Base+0x5d98>
   1a2a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a2a4:	str	r3, [fp, #-16]
   1a2a8:	mov	r3, #5
   1a2ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a2b0:	ldr	r1, [fp, #-16]
   1a2b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a2b8:	bl	1552c <_start@@Base+0xf0c>
   1a2bc:	str	r0, [fp, #-36]	; 0xffffffdc
   1a2c0:	ldr	r2, [fp, #-16]
   1a2c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a2c8:	cmp	r2, r3
   1a2cc:	beq	1a3c0 <_start@@Base+0x5da0>
   1a2d0:	mov	r3, #0
   1a2d4:	strb	r3, [fp, #-26]	; 0xffffffe6
   1a2d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a2dc:	str	r3, [fp, #-16]
   1a2e0:	sub	r3, fp, #26
   1a2e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a2e8:	ldr	r1, [fp, #-16]
   1a2ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a2f0:	bl	162a4 <_start@@Base+0x1c84>
   1a2f4:	str	r0, [fp, #-36]	; 0xffffffdc
   1a2f8:	ldr	r2, [fp, #-16]
   1a2fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a300:	cmp	r2, r3
   1a304:	bne	1a354 <_start@@Base+0x5d34>
   1a308:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a30c:	str	r3, [fp, #-16]
   1a310:	sub	r3, fp, #26
   1a314:	str	r3, [sp]
   1a318:	ldr	r3, [pc, #532]	; 1a534 <_start@@Base+0x5f14>
   1a31c:	add	r3, pc, r3
   1a320:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a324:	ldr	r1, [fp, #-16]
   1a328:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a32c:	bl	16f54 <_start@@Base+0x2934>
   1a330:	str	r0, [fp, #-36]	; 0xffffffdc
   1a334:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a338:	ldr	r3, [fp, #-16]
   1a33c:	cmp	r2, r3
   1a340:	beq	1a750 <_start@@Base+0x6130>
   1a344:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a348:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a34c:	cmp	r2, r3
   1a350:	beq	1a750 <_start@@Base+0x6130>
   1a354:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
   1a358:	cmp	r3, #2
   1a35c:	bne	1a374 <_start@@Base+0x5d54>
   1a360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a364:	ldr	r3, [r3, #8]
   1a368:	and	r3, r3, #2
   1a36c:	cmp	r3, #0
   1a370:	beq	1a6b0 <_start@@Base+0x6090>
   1a374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a378:	ldr	r0, [r3]
   1a37c:	mov	r3, #1
   1a380:	mov	r2, #1
   1a384:	mov	r1, #0
   1a388:	bl	31134 <flatcc_builder_table_add@@Base>
   1a38c:	str	r0, [fp, #-20]	; 0xffffffec
   1a390:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a394:	cmp	r3, #0
   1a398:	beq	1a72c <_start@@Base+0x610c>
   1a39c:	ldrsb	r3, [fp, #-26]	; 0xffffffe6
   1a3a0:	mov	r1, r3
   1a3a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a3a8:	bl	148f8 <_start@@Base+0x2d8>
   1a3ac:	b	1a6b0 <_start@@Base+0x6090>
   1a3b0:	nop			; (mov r0, r0)
   1a3b4:	b	1a3c4 <_start@@Base+0x5da4>
   1a3b8:	nop			; (mov r0, r0)
   1a3bc:	b	1a3c4 <_start@@Base+0x5da4>
   1a3c0:	nop			; (mov r0, r0)
   1a3c4:	ldrd	r2, [fp, #-12]
   1a3c8:	mov	r0, #0
   1a3cc:	mvn	r1, #255	; 0xff
   1a3d0:	and	r2, r2, r0
   1a3d4:	and	r3, r3, r1
   1a3d8:	add	r1, pc, #328	; 0x148
   1a3dc:	ldrd	r0, [r1]
   1a3e0:	cmp	r3, r1
   1a3e4:	cmpeq	r2, r0
   1a3e8:	bne	1a548 <_start@@Base+0x5f28>
   1a3ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a3f0:	str	r3, [fp, #-16]
   1a3f4:	mov	r3, #3
   1a3f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a3fc:	ldr	r1, [fp, #-16]
   1a400:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a404:	bl	1552c <_start@@Base+0xf0c>
   1a408:	str	r0, [fp, #-36]	; 0xffffffdc
   1a40c:	ldr	r2, [fp, #-16]
   1a410:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a414:	cmp	r2, r3
   1a418:	beq	1a4fc <_start@@Base+0x5edc>
   1a41c:	mov	r3, #0
   1a420:	strb	r3, [fp, #-27]	; 0xffffffe5
   1a424:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a428:	str	r3, [fp, #-16]
   1a42c:	sub	r3, fp, #27
   1a430:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a434:	ldr	r1, [fp, #-16]
   1a438:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a43c:	bl	15f60 <_start@@Base+0x1940>
   1a440:	str	r0, [fp, #-36]	; 0xffffffdc
   1a444:	ldr	r2, [fp, #-16]
   1a448:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a44c:	cmp	r2, r3
   1a450:	bne	1a4a0 <_start@@Base+0x5e80>
   1a454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a458:	str	r3, [fp, #-16]
   1a45c:	sub	r3, fp, #27
   1a460:	str	r3, [sp]
   1a464:	ldr	r3, [pc, #204]	; 1a538 <_start@@Base+0x5f18>
   1a468:	add	r3, pc, r3
   1a46c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a470:	ldr	r1, [fp, #-16]
   1a474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a478:	bl	16924 <_start@@Base+0x2304>
   1a47c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a480:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a484:	ldr	r3, [fp, #-16]
   1a488:	cmp	r2, r3
   1a48c:	beq	1a750 <_start@@Base+0x6130>
   1a490:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a494:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a498:	cmp	r2, r3
   1a49c:	beq	1a750 <_start@@Base+0x6130>
   1a4a0:	ldrb	r3, [fp, #-27]	; 0xffffffe5
   1a4a4:	cmp	r3, #2
   1a4a8:	bne	1a4c0 <_start@@Base+0x5ea0>
   1a4ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4b0:	ldr	r3, [r3, #8]
   1a4b4:	and	r3, r3, #2
   1a4b8:	cmp	r3, #0
   1a4bc:	beq	1a6b4 <_start@@Base+0x6094>
   1a4c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a4c4:	ldr	r0, [r3]
   1a4c8:	mov	r3, #1
   1a4cc:	mov	r2, #1
   1a4d0:	mov	r1, #3
   1a4d4:	bl	31134 <flatcc_builder_table_add@@Base>
   1a4d8:	str	r0, [fp, #-20]	; 0xffffffec
   1a4dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a4e0:	cmp	r3, #0
   1a4e4:	beq	1a734 <_start@@Base+0x6114>
   1a4e8:	ldrb	r3, [fp, #-27]	; 0xffffffe5
   1a4ec:	mov	r1, r3
   1a4f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4f4:	bl	14770 <_start@@Base+0x150>
   1a4f8:	b	1a6b4 <_start@@Base+0x6094>
   1a4fc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a500:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a504:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a508:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1a50c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a510:	b	1a6b4 <_start@@Base+0x6094>
   1a514:	nop			; (mov r0, r0)
   1a518:	eorsvc	r0, r2, #0
   1a51c:	cmnvs	pc, #28416	; 0x6f00
   1a520:	andvc	r0, r0, #0
   1a524:	cmnvs	pc, #28416	; 0x6f00
   1a528:	andeq	r0, r0, r0
   1a52c:	strbvc	r3, [r3, #-512]!	; 0xfffffe00
   1a530:			; <UNDEFINED> instruction: 0x00047ebc
   1a534:	muleq	r4, r4, sp
   1a538:	andeq	r7, r4, r8, asr ip
   1a53c:			; <UNDEFINED> instruction: 0xffff0000
   1a540:	strbvc	r0, [r3, #-0]!
   1a544:	andeq	r7, r4, r0, ror #21
   1a548:	ldrd	r2, [fp, #-12]
   1a54c:	mov	r0, #0
   1a550:	ldr	r1, [pc, #-28]	; 1a53c <_start@@Base+0x5f1c>
   1a554:	and	r2, r2, r0
   1a558:	and	r3, r3, r1
   1a55c:	mov	r0, #0
   1a560:	ldr	r1, [pc, #-40]	; 1a540 <_start@@Base+0x5f20>
   1a564:	cmp	r3, r1
   1a568:	cmpeq	r2, r0
   1a56c:	bne	1a698 <_start@@Base+0x6078>
   1a570:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a574:	str	r3, [fp, #-16]
   1a578:	mov	r3, #2
   1a57c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a580:	ldr	r1, [fp, #-16]
   1a584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a588:	bl	1552c <_start@@Base+0xf0c>
   1a58c:	str	r0, [fp, #-36]	; 0xffffffdc
   1a590:	ldr	r2, [fp, #-16]
   1a594:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a598:	cmp	r2, r3
   1a59c:	beq	1a680 <_start@@Base+0x6060>
   1a5a0:	mov	r3, #0
   1a5a4:	strb	r3, [fp, #-28]	; 0xffffffe4
   1a5a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a5ac:	str	r3, [fp, #-16]
   1a5b0:	sub	r3, fp, #28
   1a5b4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a5b8:	ldr	r1, [fp, #-16]
   1a5bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5c0:	bl	15f60 <_start@@Base+0x1940>
   1a5c4:	str	r0, [fp, #-36]	; 0xffffffdc
   1a5c8:	ldr	r2, [fp, #-16]
   1a5cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a5d0:	cmp	r2, r3
   1a5d4:	bne	1a624 <_start@@Base+0x6004>
   1a5d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a5dc:	str	r3, [fp, #-16]
   1a5e0:	sub	r3, fp, #28
   1a5e4:	str	r3, [sp]
   1a5e8:	ldr	r3, [pc, #-172]	; 1a544 <_start@@Base+0x5f24>
   1a5ec:	add	r3, pc, r3
   1a5f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a5f4:	ldr	r1, [fp, #-16]
   1a5f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5fc:	bl	16924 <_start@@Base+0x2304>
   1a600:	str	r0, [fp, #-36]	; 0xffffffdc
   1a604:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a608:	ldr	r3, [fp, #-16]
   1a60c:	cmp	r2, r3
   1a610:	beq	1a750 <_start@@Base+0x6130>
   1a614:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1a618:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a61c:	cmp	r2, r3
   1a620:	beq	1a750 <_start@@Base+0x6130>
   1a624:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   1a628:	cmp	r3, #2
   1a62c:	bne	1a644 <_start@@Base+0x6024>
   1a630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a634:	ldr	r3, [r3, #8]
   1a638:	and	r3, r3, #2
   1a63c:	cmp	r3, #0
   1a640:	beq	1a6b4 <_start@@Base+0x6094>
   1a644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a648:	ldr	r0, [r3]
   1a64c:	mov	r3, #1
   1a650:	mov	r2, #1
   1a654:	mov	r1, #2
   1a658:	bl	31134 <flatcc_builder_table_add@@Base>
   1a65c:	str	r0, [fp, #-20]	; 0xffffffec
   1a660:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a664:	cmp	r3, #0
   1a668:	beq	1a73c <_start@@Base+0x611c>
   1a66c:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   1a670:	mov	r1, r3
   1a674:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a678:	bl	14770 <_start@@Base+0x150>
   1a67c:	b	1a6b4 <_start@@Base+0x6094>
   1a680:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a684:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a688:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a68c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1a690:	str	r0, [fp, #-36]	; 0xffffffdc
   1a694:	b	1a6b4 <_start@@Base+0x6094>
   1a698:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a69c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a6a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6a4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1a6a8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a6ac:	b	1a6b4 <_start@@Base+0x6094>
   1a6b0:	nop			; (mov r0, r0)
   1a6b4:	sub	r3, fp, #24
   1a6b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a6bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a6c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a6c4:	bl	15174 <_start@@Base+0xb54>
   1a6c8:	str	r0, [fp, #-36]	; 0xffffffdc
   1a6cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a6d0:	cmp	r3, #0
   1a6d4:	bne	1a11c <_start@@Base+0x5afc>
   1a6d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a6dc:	ldr	r3, [r3, #20]
   1a6e0:	cmp	r3, #0
   1a6e4:	bne	1a744 <_start@@Base+0x6124>
   1a6e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a6ec:	ldr	r3, [r3]
   1a6f0:	mov	r0, r3
   1a6f4:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1a6f8:	mov	r2, r0
   1a6fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a700:	str	r2, [r3]
   1a704:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a708:	ldr	r3, [r3]
   1a70c:	cmp	r3, #0
   1a710:	beq	1a74c <_start@@Base+0x612c>
   1a714:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a718:	b	1a768 <_start@@Base+0x6148>
   1a71c:	nop			; (mov r0, r0)
   1a720:	b	1a750 <_start@@Base+0x6130>
   1a724:	nop			; (mov r0, r0)
   1a728:	b	1a750 <_start@@Base+0x6130>
   1a72c:	nop			; (mov r0, r0)
   1a730:	b	1a750 <_start@@Base+0x6130>
   1a734:	nop			; (mov r0, r0)
   1a738:	b	1a750 <_start@@Base+0x6130>
   1a73c:	nop			; (mov r0, r0)
   1a740:	b	1a750 <_start@@Base+0x6130>
   1a744:	nop			; (mov r0, r0)
   1a748:	b	1a750 <_start@@Base+0x6130>
   1a74c:	nop			; (mov r0, r0)
   1a750:	mov	r3, #33	; 0x21
   1a754:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a758:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a75c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a760:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1a764:	mov	r3, r0
   1a768:	mov	r0, r3
   1a76c:	sub	sp, fp, #4
   1a770:	pop	{fp, pc}
   1a774:	push	{fp, lr}
   1a778:	add	fp, sp, #4
   1a77c:	sub	sp, sp, #88	; 0x58
   1a780:	str	r0, [fp, #-72]	; 0xffffffb8
   1a784:	str	r1, [fp, #-76]	; 0xffffffb4
   1a788:	str	r2, [fp, #-80]	; 0xffffffb0
   1a78c:	str	r3, [fp, #-84]	; 0xffffffac
   1a790:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a794:	mov	r2, #0
   1a798:	str	r2, [r3]
   1a79c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a7a0:	ldr	r3, [r3]
   1a7a4:	mov	r1, #6
   1a7a8:	mov	r0, r3
   1a7ac:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1a7b0:	mov	r3, r0
   1a7b4:	cmp	r3, #0
   1a7b8:	bne	1b0a4 <_start@@Base+0x6a84>
   1a7bc:	sub	r3, fp, #24
   1a7c0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a7c4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a7c8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a7cc:	bl	1508c <_start@@Base+0xa6c>
   1a7d0:	str	r0, [fp, #-76]	; 0xffffffb4
   1a7d4:	b	1b054 <_start@@Base+0x6a34>
   1a7d8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a7dc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a7e0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a7e4:	bl	14cb8 <_start@@Base+0x698>
   1a7e8:	str	r0, [fp, #-76]	; 0xffffffb4
   1a7ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   1a7f0:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1a7f4:	bl	14f70 <_start@@Base+0x950>
   1a7f8:	strd	r0, [fp, #-12]
   1a7fc:	ldrd	r2, [fp, #-12]
   1a800:	add	r1, pc, #936	; 0x3a8
   1a804:	ldrd	r0, [r1]
   1a808:	cmp	r3, r1
   1a80c:	cmpeq	r2, r0
   1a810:	bhi	1a8e0 <_start@@Base+0x62c0>
   1a814:	ldrd	r2, [fp, #-12]
   1a818:	ldr	r0, [pc, #952]	; 1abd8 <_start@@Base+0x65b8>
   1a81c:	mvn	r1, #0
   1a820:	and	r2, r2, r0
   1a824:	and	r3, r3, r1
   1a828:	add	r1, pc, #904	; 0x388
   1a82c:	ldrd	r0, [r1]
   1a830:	cmp	r3, r1
   1a834:	cmpeq	r2, r0
   1a838:	bne	1a8c8 <_start@@Base+0x62a8>
   1a83c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a840:	str	r3, [fp, #-16]
   1a844:	mov	r3, #6
   1a848:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a84c:	ldr	r1, [fp, #-16]
   1a850:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a854:	bl	1552c <_start@@Base+0xf0c>
   1a858:	str	r0, [fp, #-76]	; 0xffffffb4
   1a85c:	ldr	r2, [fp, #-16]
   1a860:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a864:	cmp	r2, r3
   1a868:	beq	1a8b0 <_start@@Base+0x6290>
   1a86c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a870:	ldr	r0, [r3]
   1a874:	mov	r3, #1
   1a878:	mov	r2, #0
   1a87c:	mov	r1, #0
   1a880:	bl	31134 <flatcc_builder_table_add@@Base>
   1a884:	str	r0, [fp, #-20]	; 0xffffffec
   1a888:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a88c:	cmp	r3, #0
   1a890:	beq	1b0ac <_start@@Base+0x6a8c>
   1a894:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a898:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a89c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a8a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a8a4:	bl	181c0 <_start@@Base+0x3ba0>
   1a8a8:	str	r0, [fp, #-76]	; 0xffffffb4
   1a8ac:	b	1b03c <_start@@Base+0x6a1c>
   1a8b0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a8b4:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a8b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a8bc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1a8c0:	str	r0, [fp, #-76]	; 0xffffffb4
   1a8c4:	b	1b03c <_start@@Base+0x6a1c>
   1a8c8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a8cc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1a8d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a8d4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1a8d8:	str	r0, [fp, #-76]	; 0xffffffb4
   1a8dc:	b	1b03c <_start@@Base+0x6a1c>
   1a8e0:	ldrd	r2, [fp, #-12]
   1a8e4:	add	r1, pc, #724	; 0x2d4
   1a8e8:	ldrd	r0, [r1]
   1a8ec:	cmp	r3, r1
   1a8f0:	cmpeq	r2, r0
   1a8f4:	bhi	1abe4 <_start@@Base+0x65c4>
   1a8f8:	ldrd	r2, [fp, #-12]
   1a8fc:	mvn	r0, #255	; 0xff
   1a900:	mvn	r1, #0
   1a904:	and	r2, r2, r0
   1a908:	and	r3, r3, r1
   1a90c:	add	r1, pc, #692	; 0x2b4
   1a910:	ldrd	r0, [r1]
   1a914:	cmp	r3, r1
   1a918:	cmpeq	r2, r0
   1a91c:	bne	1aa48 <_start@@Base+0x6428>
   1a920:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a924:	str	r3, [fp, #-16]
   1a928:	mov	r3, #7
   1a92c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a930:	ldr	r1, [fp, #-16]
   1a934:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a938:	bl	1552c <_start@@Base+0xf0c>
   1a93c:	str	r0, [fp, #-76]	; 0xffffffb4
   1a940:	ldr	r2, [fp, #-16]
   1a944:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a948:	cmp	r2, r3
   1a94c:	beq	1aa30 <_start@@Base+0x6410>
   1a950:	mov	r2, #0
   1a954:	mov	r3, #0
   1a958:	strd	r2, [fp, #-36]	; 0xffffffdc
   1a95c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a960:	str	r3, [fp, #-16]
   1a964:	sub	r3, fp, #36	; 0x24
   1a968:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a96c:	ldr	r1, [fp, #-16]
   1a970:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a974:	bl	16030 <_start@@Base+0x1a10>
   1a978:	str	r0, [fp, #-76]	; 0xffffffb4
   1a97c:	ldr	r2, [fp, #-16]
   1a980:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a984:	cmp	r2, r3
   1a988:	bne	1a9d8 <_start@@Base+0x63b8>
   1a98c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a990:	str	r3, [fp, #-16]
   1a994:	sub	r3, fp, #36	; 0x24
   1a998:	str	r3, [sp]
   1a99c:	ldr	r3, [pc, #568]	; 1abdc <_start@@Base+0x65bc>
   1a9a0:	add	r3, pc, r3
   1a9a4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1a9a8:	ldr	r1, [fp, #-16]
   1a9ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a9b0:	bl	16aac <_start@@Base+0x248c>
   1a9b4:	str	r0, [fp, #-76]	; 0xffffffb4
   1a9b8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a9bc:	ldr	r3, [fp, #-16]
   1a9c0:	cmp	r2, r3
   1a9c4:	beq	1b0e8 <_start@@Base+0x6ac8>
   1a9c8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1a9cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a9d0:	cmp	r2, r3
   1a9d4:	beq	1b0e8 <_start@@Base+0x6ac8>
   1a9d8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1a9dc:	orrs	r3, r2, r3
   1a9e0:	bne	1a9f8 <_start@@Base+0x63d8>
   1a9e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a9e8:	ldr	r3, [r3, #8]
   1a9ec:	and	r3, r3, #2
   1a9f0:	cmp	r3, #0
   1a9f4:	beq	1b03c <_start@@Base+0x6a1c>
   1a9f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a9fc:	ldr	r0, [r3]
   1aa00:	mov	r3, #8
   1aa04:	mov	r2, #8
   1aa08:	mov	r1, #2
   1aa0c:	bl	31134 <flatcc_builder_table_add@@Base>
   1aa10:	str	r0, [fp, #-20]	; 0xffffffec
   1aa14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa18:	cmp	r3, #0
   1aa1c:	beq	1b0b4 <_start@@Base+0x6a94>
   1aa20:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1aa24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aa28:	bl	14a20 <_start@@Base+0x400>
   1aa2c:	b	1b03c <_start@@Base+0x6a1c>
   1aa30:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aa34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1aa38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aa3c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1aa40:	str	r0, [fp, #-76]	; 0xffffffb4
   1aa44:	b	1b03c <_start@@Base+0x6a1c>
   1aa48:	ldrd	r2, [fp, #-12]
   1aa4c:	ldr	r0, [pc, #388]	; 1abd8 <_start@@Base+0x65b8>
   1aa50:	mvn	r1, #0
   1aa54:	and	r2, r2, r0
   1aa58:	and	r3, r3, r1
   1aa5c:	add	r1, pc, #364	; 0x16c
   1aa60:	ldrd	r0, [r1]
   1aa64:	cmp	r3, r1
   1aa68:	cmpeq	r2, r0
   1aa6c:	bne	1ab98 <_start@@Base+0x6578>
   1aa70:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aa74:	str	r3, [fp, #-16]
   1aa78:	mov	r3, #6
   1aa7c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aa80:	ldr	r1, [fp, #-16]
   1aa84:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aa88:	bl	1552c <_start@@Base+0xf0c>
   1aa8c:	str	r0, [fp, #-76]	; 0xffffffb4
   1aa90:	ldr	r2, [fp, #-16]
   1aa94:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aa98:	cmp	r2, r3
   1aa9c:	beq	1ab80 <_start@@Base+0x6560>
   1aaa0:	mov	r2, #0
   1aaa4:	mov	r3, #0
   1aaa8:	strd	r2, [fp, #-44]	; 0xffffffd4
   1aaac:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aab0:	str	r3, [fp, #-16]
   1aab4:	sub	r3, fp, #44	; 0x2c
   1aab8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aabc:	ldr	r1, [fp, #-16]
   1aac0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aac4:	bl	16030 <_start@@Base+0x1a10>
   1aac8:	str	r0, [fp, #-76]	; 0xffffffb4
   1aacc:	ldr	r2, [fp, #-16]
   1aad0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aad4:	cmp	r2, r3
   1aad8:	bne	1ab28 <_start@@Base+0x6508>
   1aadc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1aae0:	str	r3, [fp, #-16]
   1aae4:	sub	r3, fp, #44	; 0x2c
   1aae8:	str	r3, [sp]
   1aaec:	ldr	r3, [pc, #236]	; 1abe0 <_start@@Base+0x65c0>
   1aaf0:	add	r3, pc, r3
   1aaf4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aaf8:	ldr	r1, [fp, #-16]
   1aafc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ab00:	bl	16aac <_start@@Base+0x248c>
   1ab04:	str	r0, [fp, #-76]	; 0xffffffb4
   1ab08:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ab0c:	ldr	r3, [fp, #-16]
   1ab10:	cmp	r2, r3
   1ab14:	beq	1b0e8 <_start@@Base+0x6ac8>
   1ab18:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ab1c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ab20:	cmp	r2, r3
   1ab24:	beq	1b0e8 <_start@@Base+0x6ac8>
   1ab28:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ab2c:	orrs	r3, r2, r3
   1ab30:	bne	1ab48 <_start@@Base+0x6528>
   1ab34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ab38:	ldr	r3, [r3, #8]
   1ab3c:	and	r3, r3, #2
   1ab40:	cmp	r3, #0
   1ab44:	beq	1b03c <_start@@Base+0x6a1c>
   1ab48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ab4c:	ldr	r0, [r3]
   1ab50:	mov	r3, #8
   1ab54:	mov	r2, #8
   1ab58:	mov	r1, #1
   1ab5c:	bl	31134 <flatcc_builder_table_add@@Base>
   1ab60:	str	r0, [fp, #-20]	; 0xffffffec
   1ab64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ab68:	cmp	r3, #0
   1ab6c:	beq	1b0bc <_start@@Base+0x6a9c>
   1ab70:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1ab74:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ab78:	bl	14a20 <_start@@Base+0x400>
   1ab7c:	b	1b03c <_start@@Base+0x6a1c>
   1ab80:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ab84:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ab88:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ab8c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ab90:	str	r0, [fp, #-76]	; 0xffffffb4
   1ab94:	b	1b03c <_start@@Base+0x6a1c>
   1ab98:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ab9c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1aba0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aba4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1aba8:	str	r0, [fp, #-76]	; 0xffffffb4
   1abac:	b	1b03c <_start@@Base+0x6a1c>
   1abb0:	strdvs	pc, [fp, #-255]!	; 0xffffff01
   1abb4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1abb8:	cmnvs	ip, r0
   1abbc:	strbvs	r6, [ip, -r2, ror #30]!
   1abc0:	strdvs	r3, [ip, #-47]!	; 0xffffffd1
   1abc4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1abc8:	cmnvs	ip, r0, lsl #4
   1abcc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1abd0:	cmnvs	ip, r0
   1abd4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1abd8:			; <UNDEFINED> instruction: 0xffff0000
   1abdc:	andeq	r7, r4, r8, lsr r7
   1abe0:	strdeq	r7, [r4], -r8
   1abe4:	ldrd	r2, [fp, #-12]
   1abe8:	add	r1, pc, #712	; 0x2c8
   1abec:	ldrd	r0, [r1]
   1abf0:	cmp	r3, r1
   1abf4:	cmpeq	r2, r0
   1abf8:	bhi	1ad64 <_start@@Base+0x6744>
   1abfc:	ldrd	r2, [fp, #-12]
   1ac00:	mvn	r0, #255	; 0xff
   1ac04:	mvn	r1, #0
   1ac08:	and	r2, r2, r0
   1ac0c:	and	r3, r3, r1
   1ac10:	add	r1, pc, #680	; 0x2a8
   1ac14:	ldrd	r0, [r1]
   1ac18:	cmp	r3, r1
   1ac1c:	cmpeq	r2, r0
   1ac20:	bne	1ad4c <_start@@Base+0x672c>
   1ac24:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ac28:	str	r3, [fp, #-16]
   1ac2c:	mov	r3, #7
   1ac30:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ac34:	ldr	r1, [fp, #-16]
   1ac38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ac3c:	bl	1552c <_start@@Base+0xf0c>
   1ac40:	str	r0, [fp, #-76]	; 0xffffffb4
   1ac44:	ldr	r2, [fp, #-16]
   1ac48:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ac4c:	cmp	r2, r3
   1ac50:	beq	1ad34 <_start@@Base+0x6714>
   1ac54:	mov	r3, #0
   1ac58:	str	r3, [fp, #-48]	; 0xffffffd0
   1ac5c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ac60:	str	r3, [fp, #-16]
   1ac64:	sub	r3, fp, #48	; 0x30
   1ac68:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ac6c:	ldr	r1, [fp, #-16]
   1ac70:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ac74:	bl	16104 <_start@@Base+0x1ae4>
   1ac78:	str	r0, [fp, #-76]	; 0xffffffb4
   1ac7c:	ldr	r2, [fp, #-16]
   1ac80:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ac84:	cmp	r2, r3
   1ac88:	bne	1acd8 <_start@@Base+0x66b8>
   1ac8c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ac90:	str	r3, [fp, #-16]
   1ac94:	sub	r3, fp, #48	; 0x30
   1ac98:	str	r3, [sp]
   1ac9c:	ldr	r3, [pc, #556]	; 1aed0 <_start@@Base+0x68b0>
   1aca0:	add	r3, pc, r3
   1aca4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aca8:	ldr	r1, [fp, #-16]
   1acac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1acb0:	bl	16c3c <_start@@Base+0x261c>
   1acb4:	str	r0, [fp, #-76]	; 0xffffffb4
   1acb8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1acbc:	ldr	r3, [fp, #-16]
   1acc0:	cmp	r2, r3
   1acc4:	beq	1b0e8 <_start@@Base+0x6ac8>
   1acc8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1accc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1acd0:	cmp	r2, r3
   1acd4:	beq	1b0e8 <_start@@Base+0x6ac8>
   1acd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1acdc:	cmp	r3, #0
   1ace0:	bne	1acf8 <_start@@Base+0x66d8>
   1ace4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ace8:	ldr	r3, [r3, #8]
   1acec:	and	r3, r3, #2
   1acf0:	cmp	r3, #0
   1acf4:	beq	1b03c <_start@@Base+0x6a1c>
   1acf8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1acfc:	ldr	r0, [r3]
   1ad00:	mov	r3, #4
   1ad04:	mov	r2, #4
   1ad08:	mov	r1, #3
   1ad0c:	bl	31134 <flatcc_builder_table_add@@Base>
   1ad10:	str	r0, [fp, #-20]	; 0xffffffec
   1ad14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ad18:	cmp	r3, #0
   1ad1c:	beq	1b0c4 <_start@@Base+0x6aa4>
   1ad20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ad24:	mov	r1, r3
   1ad28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad2c:	bl	149c4 <_start@@Base+0x3a4>
   1ad30:	b	1b03c <_start@@Base+0x6a1c>
   1ad34:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ad38:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ad3c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ad40:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ad44:	str	r0, [fp, #-76]	; 0xffffffb4
   1ad48:	b	1b03c <_start@@Base+0x6a1c>
   1ad4c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ad50:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1ad54:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ad58:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ad5c:	str	r0, [fp, #-76]	; 0xffffffb4
   1ad60:	b	1b03c <_start@@Base+0x6a1c>
   1ad64:	ldrd	r2, [fp, #-12]
   1ad68:	mvn	r0, #255	; 0xff
   1ad6c:	mvn	r1, #0
   1ad70:	and	r2, r2, r0
   1ad74:	and	r3, r3, r1
   1ad78:	add	r1, pc, #328	; 0x148
   1ad7c:	ldrd	r0, [r1]
   1ad80:	cmp	r3, r1
   1ad84:	cmpeq	r2, r0
   1ad88:	bne	1aed8 <_start@@Base+0x68b8>
   1ad8c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1ad90:	str	r3, [fp, #-16]
   1ad94:	mov	r3, #7
   1ad98:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ad9c:	ldr	r1, [fp, #-16]
   1ada0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ada4:	bl	1552c <_start@@Base+0xf0c>
   1ada8:	str	r0, [fp, #-76]	; 0xffffffb4
   1adac:	ldr	r2, [fp, #-16]
   1adb0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1adb4:	cmp	r2, r3
   1adb8:	beq	1ae9c <_start@@Base+0x687c>
   1adbc:	mov	r2, #0
   1adc0:	mov	r3, #0
   1adc4:	strd	r2, [fp, #-60]	; 0xffffffc4
   1adc8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1adcc:	str	r3, [fp, #-16]
   1add0:	sub	r3, fp, #60	; 0x3c
   1add4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1add8:	ldr	r1, [fp, #-16]
   1addc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ade0:	bl	16030 <_start@@Base+0x1a10>
   1ade4:	str	r0, [fp, #-76]	; 0xffffffb4
   1ade8:	ldr	r2, [fp, #-16]
   1adec:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1adf0:	cmp	r2, r3
   1adf4:	bne	1ae44 <_start@@Base+0x6824>
   1adf8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1adfc:	str	r3, [fp, #-16]
   1ae00:	sub	r3, fp, #60	; 0x3c
   1ae04:	str	r3, [sp]
   1ae08:	ldr	r3, [pc, #196]	; 1aed4 <_start@@Base+0x68b4>
   1ae0c:	add	r3, pc, r3
   1ae10:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1ae14:	ldr	r1, [fp, #-16]
   1ae18:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1ae1c:	bl	16aac <_start@@Base+0x248c>
   1ae20:	str	r0, [fp, #-76]	; 0xffffffb4
   1ae24:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ae28:	ldr	r3, [fp, #-16]
   1ae2c:	cmp	r2, r3
   1ae30:	beq	1b0e8 <_start@@Base+0x6ac8>
   1ae34:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1ae38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ae3c:	cmp	r2, r3
   1ae40:	beq	1b0e8 <_start@@Base+0x6ac8>
   1ae44:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1ae48:	orrs	r3, r2, r3
   1ae4c:	bne	1ae64 <_start@@Base+0x6844>
   1ae50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ae54:	ldr	r3, [r3, #8]
   1ae58:	and	r3, r3, #2
   1ae5c:	cmp	r3, #0
   1ae60:	beq	1b03c <_start@@Base+0x6a1c>
   1ae64:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1ae68:	ldr	r0, [r3]
   1ae6c:	mov	r3, #8
   1ae70:	mov	r2, #8
   1ae74:	mov	r1, #5
   1ae78:	bl	31134 <flatcc_builder_table_add@@Base>
   1ae7c:	str	r0, [fp, #-20]	; 0xffffffec
   1ae80:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ae84:	cmp	r3, #0
   1ae88:	beq	1b0cc <_start@@Base+0x6aac>
   1ae8c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   1ae90:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ae94:	bl	14a20 <_start@@Base+0x400>
   1ae98:	b	1b03c <_start@@Base+0x6a1c>
   1ae9c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1aea0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1aea4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1aea8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1aeac:	str	r0, [fp, #-76]	; 0xffffffb4
   1aeb0:	b	1b03c <_start@@Base+0x6a1c>
   1aeb4:	nop			; (mov r0, r0)
   1aeb8:	strdvs	r3, [ip, #-63]!	; 0xffffffc1
   1aebc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1aec0:	cmnvs	ip, r0, lsl #6
   1aec4:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1aec8:	cmnvs	ip, r0, lsl #10
   1aecc:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1aed0:	andeq	r7, r4, r8, asr r4
   1aed4:	strdeq	r7, [r4], -r8
   1aed8:	ldrd	r2, [fp, #-12]
   1aedc:	mvn	r0, #255	; 0xff
   1aee0:	mvn	r1, #0
   1aee4:	and	r2, r2, r0
   1aee8:	and	r3, r3, r1
   1aeec:	add	r1, pc, #540	; 0x21c
   1aef0:	ldrd	r0, [r1]
   1aef4:	cmp	r3, r1
   1aef8:	cmpeq	r2, r0
   1aefc:	bne	1b028 <_start@@Base+0x6a08>
   1af00:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1af04:	str	r3, [fp, #-16]
   1af08:	mov	r3, #7
   1af0c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1af10:	ldr	r1, [fp, #-16]
   1af14:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1af18:	bl	1552c <_start@@Base+0xf0c>
   1af1c:	str	r0, [fp, #-76]	; 0xffffffb4
   1af20:	ldr	r2, [fp, #-16]
   1af24:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1af28:	cmp	r2, r3
   1af2c:	beq	1b010 <_start@@Base+0x69f0>
   1af30:	mov	r2, #0
   1af34:	mov	r3, #0
   1af38:	strd	r2, [fp, #-68]	; 0xffffffbc
   1af3c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1af40:	str	r3, [fp, #-16]
   1af44:	sub	r3, fp, #68	; 0x44
   1af48:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1af4c:	ldr	r1, [fp, #-16]
   1af50:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1af54:	bl	16030 <_start@@Base+0x1a10>
   1af58:	str	r0, [fp, #-76]	; 0xffffffb4
   1af5c:	ldr	r2, [fp, #-16]
   1af60:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1af64:	cmp	r2, r3
   1af68:	bne	1afb8 <_start@@Base+0x6998>
   1af6c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1af70:	str	r3, [fp, #-16]
   1af74:	sub	r3, fp, #68	; 0x44
   1af78:	str	r3, [sp]
   1af7c:	ldr	r3, [pc, #404]	; 1b118 <_start@@Base+0x6af8>
   1af80:	add	r3, pc, r3
   1af84:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1af88:	ldr	r1, [fp, #-16]
   1af8c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1af90:	bl	16aac <_start@@Base+0x248c>
   1af94:	str	r0, [fp, #-76]	; 0xffffffb4
   1af98:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1af9c:	ldr	r3, [fp, #-16]
   1afa0:	cmp	r2, r3
   1afa4:	beq	1b0e8 <_start@@Base+0x6ac8>
   1afa8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1afac:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1afb0:	cmp	r2, r3
   1afb4:	beq	1b0e8 <_start@@Base+0x6ac8>
   1afb8:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1afbc:	orrs	r3, r2, r3
   1afc0:	bne	1afd8 <_start@@Base+0x69b8>
   1afc4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1afc8:	ldr	r3, [r3, #8]
   1afcc:	and	r3, r3, #2
   1afd0:	cmp	r3, #0
   1afd4:	beq	1b03c <_start@@Base+0x6a1c>
   1afd8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1afdc:	ldr	r0, [r3]
   1afe0:	mov	r3, #8
   1afe4:	mov	r2, #8
   1afe8:	mov	r1, #4
   1afec:	bl	31134 <flatcc_builder_table_add@@Base>
   1aff0:	str	r0, [fp, #-20]	; 0xffffffec
   1aff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aff8:	cmp	r3, #0
   1affc:	beq	1b0d4 <_start@@Base+0x6ab4>
   1b000:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1b004:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b008:	bl	14a20 <_start@@Base+0x400>
   1b00c:	b	1b03c <_start@@Base+0x6a1c>
   1b010:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b014:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b018:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b01c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b020:	str	r0, [fp, #-76]	; 0xffffffb4
   1b024:	b	1b03c <_start@@Base+0x6a1c>
   1b028:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b02c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b030:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b034:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b038:	str	r0, [fp, #-76]	; 0xffffffb4
   1b03c:	sub	r3, fp, #24
   1b040:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b044:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b048:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b04c:	bl	15174 <_start@@Base+0xb54>
   1b050:	str	r0, [fp, #-76]	; 0xffffffb4
   1b054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b058:	cmp	r3, #0
   1b05c:	bne	1a7d8 <_start@@Base+0x61b8>
   1b060:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b064:	ldr	r3, [r3, #20]
   1b068:	cmp	r3, #0
   1b06c:	bne	1b0dc <_start@@Base+0x6abc>
   1b070:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1b074:	ldr	r3, [r3]
   1b078:	mov	r0, r3
   1b07c:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1b080:	mov	r2, r0
   1b084:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b088:	str	r2, [r3]
   1b08c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1b090:	ldr	r3, [r3]
   1b094:	cmp	r3, #0
   1b098:	beq	1b0e4 <_start@@Base+0x6ac4>
   1b09c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b0a0:	b	1b100 <_start@@Base+0x6ae0>
   1b0a4:	nop			; (mov r0, r0)
   1b0a8:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0ac:	nop			; (mov r0, r0)
   1b0b0:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0b4:	nop			; (mov r0, r0)
   1b0b8:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0bc:	nop			; (mov r0, r0)
   1b0c0:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0c4:	nop			; (mov r0, r0)
   1b0c8:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0cc:	nop			; (mov r0, r0)
   1b0d0:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0d4:	nop			; (mov r0, r0)
   1b0d8:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0dc:	nop			; (mov r0, r0)
   1b0e0:	b	1b0e8 <_start@@Base+0x6ac8>
   1b0e4:	nop			; (mov r0, r0)
   1b0e8:	mov	r3, #33	; 0x21
   1b0ec:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1b0f0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1b0f4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1b0f8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1b0fc:	mov	r3, r0
   1b100:	mov	r0, r3
   1b104:	sub	sp, fp, #4
   1b108:	pop	{fp, pc}
   1b10c:	nop			; (mov r0, r0)
   1b110:	cmnvs	ip, r0, lsl #8
   1b114:	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, r9, sp, lr}^
   1b118:	muleq	r4, r0, r1
   1b11c:	push	{fp, lr}
   1b120:	add	fp, sp, #4
   1b124:	sub	sp, sp, #72	; 0x48
   1b128:	str	r0, [fp, #-56]	; 0xffffffc8
   1b12c:	str	r1, [fp, #-60]	; 0xffffffc4
   1b130:	str	r2, [fp, #-64]	; 0xffffffc0
   1b134:	str	r3, [fp, #-68]	; 0xffffffbc
   1b138:	sub	r3, fp, #24
   1b13c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b140:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b144:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b148:	bl	1508c <_start@@Base+0xa6c>
   1b14c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b150:	b	1b850 <_start@@Base+0x7230>
   1b154:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b158:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b15c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b160:	bl	14cb8 <_start@@Base+0x698>
   1b164:	str	r0, [fp, #-60]	; 0xffffffc4
   1b168:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b16c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1b170:	bl	14f70 <_start@@Base+0x950>
   1b174:	strd	r0, [fp, #-12]
   1b178:	ldrd	r2, [fp, #-12]
   1b17c:	add	r1, pc, #796	; 0x31c
   1b180:	ldrd	r0, [r1]
   1b184:	cmp	r3, r1
   1b188:	cmpeq	r2, r0
   1b18c:	bhi	1b3d4 <_start@@Base+0x6db4>
   1b190:	ldrd	r2, [fp, #-12]
   1b194:	mov	r0, #-16777216	; 0xff000000
   1b198:	mvn	r1, #0
   1b19c:	and	r2, r2, r0
   1b1a0:	and	r3, r3, r1
   1b1a4:	add	r1, pc, #764	; 0x2fc
   1b1a8:	ldrd	r0, [r1]
   1b1ac:	cmp	r3, r1
   1b1b0:	cmpeq	r2, r0
   1b1b4:	bne	1b2a4 <_start@@Base+0x6c84>
   1b1b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b1bc:	str	r3, [fp, #-16]
   1b1c0:	mov	r3, #5
   1b1c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b1c8:	ldr	r1, [fp, #-16]
   1b1cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b1d0:	bl	1552c <_start@@Base+0xf0c>
   1b1d4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b1d8:	ldr	r2, [fp, #-16]
   1b1dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b1e0:	cmp	r2, r3
   1b1e4:	beq	1b28c <_start@@Base+0x6c6c>
   1b1e8:	mov	r3, #0
   1b1ec:	strb	r3, [fp, #-25]	; 0xffffffe7
   1b1f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b1f4:	add	r3, r3, #24
   1b1f8:	str	r3, [fp, #-20]	; 0xffffffec
   1b1fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b200:	str	r3, [fp, #-16]
   1b204:	sub	r3, fp, #25
   1b208:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b20c:	ldr	r1, [fp, #-16]
   1b210:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b214:	bl	162a4 <_start@@Base+0x1c84>
   1b218:	str	r0, [fp, #-60]	; 0xffffffc4
   1b21c:	ldr	r2, [fp, #-16]
   1b220:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b224:	cmp	r2, r3
   1b228:	bne	1b278 <_start@@Base+0x6c58>
   1b22c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b230:	str	r3, [fp, #-16]
   1b234:	sub	r3, fp, #25
   1b238:	str	r3, [sp]
   1b23c:	ldr	r3, [pc, #636]	; 1b4c0 <_start@@Base+0x6ea0>
   1b240:	add	r3, pc, r3
   1b244:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b248:	ldr	r1, [fp, #-16]
   1b24c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b250:	bl	16f54 <_start@@Base+0x2934>
   1b254:	str	r0, [fp, #-60]	; 0xffffffc4
   1b258:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b25c:	ldr	r3, [fp, #-16]
   1b260:	cmp	r2, r3
   1b264:	beq	1b864 <_start@@Base+0x7244>
   1b268:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b26c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b270:	cmp	r2, r3
   1b274:	beq	1b864 <_start@@Base+0x7244>
   1b278:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   1b27c:	mov	r1, r3
   1b280:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b284:	bl	148f8 <_start@@Base+0x2d8>
   1b288:	b	1b838 <_start@@Base+0x7218>
   1b28c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b290:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b294:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b298:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b29c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b2a0:	b	1b838 <_start@@Base+0x7218>
   1b2a4:	ldrd	r2, [fp, #-12]
   1b2a8:	mov	r0, #-16777216	; 0xff000000
   1b2ac:	mvn	r1, #0
   1b2b0:	and	r2, r2, r0
   1b2b4:	and	r3, r3, r1
   1b2b8:	add	r1, pc, #496	; 0x1f0
   1b2bc:	ldrd	r0, [r1]
   1b2c0:	cmp	r3, r1
   1b2c4:	cmpeq	r2, r0
   1b2c8:	bne	1b3bc <_start@@Base+0x6d9c>
   1b2cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b2d0:	str	r3, [fp, #-16]
   1b2d4:	mov	r3, #5
   1b2d8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b2dc:	ldr	r1, [fp, #-16]
   1b2e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b2e4:	bl	1552c <_start@@Base+0xf0c>
   1b2e8:	str	r0, [fp, #-60]	; 0xffffffc4
   1b2ec:	ldr	r2, [fp, #-16]
   1b2f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b2f4:	cmp	r2, r3
   1b2f8:	beq	1b3a4 <_start@@Base+0x6d84>
   1b2fc:	mov	r2, #0
   1b300:	mov	r3, #0
   1b304:	strd	r2, [fp, #-36]	; 0xffffffdc
   1b308:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b30c:	add	r3, r3, #16
   1b310:	str	r3, [fp, #-20]	; 0xffffffec
   1b314:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b318:	str	r3, [fp, #-16]
   1b31c:	sub	r3, fp, #36	; 0x24
   1b320:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b324:	ldr	r1, [fp, #-16]
   1b328:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b32c:	bl	3af80 <flatcc_json_parser_double@@Base>
   1b330:	str	r0, [fp, #-60]	; 0xffffffc4
   1b334:	ldr	r2, [fp, #-16]
   1b338:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b33c:	cmp	r2, r3
   1b340:	bne	1b390 <_start@@Base+0x6d70>
   1b344:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b348:	str	r3, [fp, #-16]
   1b34c:	sub	r3, fp, #36	; 0x24
   1b350:	str	r3, [sp]
   1b354:	ldr	r3, [pc, #360]	; 1b4c4 <_start@@Base+0x6ea4>
   1b358:	add	r3, pc, r3
   1b35c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b360:	ldr	r1, [fp, #-16]
   1b364:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b368:	bl	173f4 <_start@@Base+0x2dd4>
   1b36c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b370:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b374:	ldr	r3, [fp, #-16]
   1b378:	cmp	r2, r3
   1b37c:	beq	1b864 <_start@@Base+0x7244>
   1b380:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b384:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b388:	cmp	r2, r3
   1b38c:	beq	1b864 <_start@@Base+0x7244>
   1b390:	vldr	d7, [fp, #-36]	; 0xffffffdc
   1b394:	vmov.f64	d0, d7
   1b398:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b39c:	bl	14afc <_start@@Base+0x4dc>
   1b3a0:	b	1b838 <_start@@Base+0x7218>
   1b3a4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b3a8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b3ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b3b0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b3b4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b3b8:	b	1b838 <_start@@Base+0x7218>
   1b3bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b3c0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b3c4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b3c8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b3cc:	str	r0, [fp, #-60]	; 0xffffffc4
   1b3d0:	b	1b838 <_start@@Base+0x7218>
   1b3d4:	ldrd	r2, [fp, #-12]
   1b3d8:	mvn	r0, #0
   1b3dc:	mvn	r1, #-2013265920	; 0x88000000
   1b3e0:	cmp	r3, r1
   1b3e4:	cmpeq	r2, r0
   1b3e8:	bhi	1b4d4 <_start@@Base+0x6eb4>
   1b3ec:	ldrd	r2, [fp, #-12]
   1b3f0:	mov	r0, #-16777216	; 0xff000000
   1b3f4:	mvn	r1, #0
   1b3f8:	and	r2, r2, r0
   1b3fc:	and	r3, r3, r1
   1b400:	add	r1, pc, #176	; 0xb0
   1b404:	ldrd	r0, [r1]
   1b408:	cmp	r3, r1
   1b40c:	cmpeq	r2, r0
   1b410:	bne	1b484 <_start@@Base+0x6e64>
   1b414:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b418:	str	r3, [fp, #-16]
   1b41c:	mov	r3, #5
   1b420:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b424:	ldr	r1, [fp, #-16]
   1b428:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b42c:	bl	1552c <_start@@Base+0xf0c>
   1b430:	str	r0, [fp, #-60]	; 0xffffffc4
   1b434:	ldr	r2, [fp, #-16]
   1b438:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b43c:	cmp	r2, r3
   1b440:	beq	1b46c <_start@@Base+0x6e4c>
   1b444:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b448:	add	r3, r3, #26
   1b44c:	str	r3, [fp, #-20]	; 0xffffffec
   1b450:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b454:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b458:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b45c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b460:	bl	197c0 <_start@@Base+0x51a0>
   1b464:	str	r0, [fp, #-60]	; 0xffffffc4
   1b468:	b	1b838 <_start@@Base+0x7218>
   1b46c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b470:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b474:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b478:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b47c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b480:	b	1b838 <_start@@Base+0x7218>
   1b484:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b488:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b48c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b490:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b494:	str	r0, [fp, #-60]	; 0xffffffc4
   1b498:	b	1b838 <_start@@Base+0x7218>
   1b49c:	nop			; (mov r0, r0)
   1b4a0:	rscscc	pc, pc, #1020	; 0x3fc
   1b4a4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b4a8:	andcc	r0, r0, #0
   1b4ac:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b4b0:	mrscc	r0, (UNDEF: 0)
   1b4b4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b4b8:	movwcc	r0, #0
   1b4bc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1b4c0:	andeq	r6, r4, r0, ror #29
   1b4c4:	ldrdeq	r6, [r4], -r8
   1b4c8:	andeq	r6, r4, ip, lsr #23
   1b4cc:	muleq	r4, r4, sl
   1b4d0:	muleq	r4, r4, r9
   1b4d4:	ldrd	r2, [fp, #-12]
   1b4d8:	mvn	r0, #0
   1b4dc:	mvn	r1, #-2030043136	; 0x87000000
   1b4e0:	cmp	r3, r1
   1b4e4:	cmpeq	r2, r0
   1b4e8:	bhi	1b60c <_start@@Base+0x6fec>
   1b4ec:	ldrd	r2, [fp, #-12]
   1b4f0:	mov	r0, #0
   1b4f4:	mov	r1, #-16777216	; 0xff000000
   1b4f8:	and	r2, r2, r0
   1b4fc:	and	r3, r3, r1
   1b500:	cmp	r3, #2013265920	; 0x78000000
   1b504:	cmpeq	r2, #0
   1b508:	bne	1b5f4 <_start@@Base+0x6fd4>
   1b50c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b510:	str	r3, [fp, #-16]
   1b514:	mov	r3, #1
   1b518:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b51c:	ldr	r1, [fp, #-16]
   1b520:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b524:	bl	1552c <_start@@Base+0xf0c>
   1b528:	str	r0, [fp, #-60]	; 0xffffffc4
   1b52c:	ldr	r2, [fp, #-16]
   1b530:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b534:	cmp	r2, r3
   1b538:	beq	1b5dc <_start@@Base+0x6fbc>
   1b53c:	mov	r3, #0
   1b540:	str	r3, [fp, #-40]	; 0xffffffd8
   1b544:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b548:	str	r3, [fp, #-20]	; 0xffffffec
   1b54c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b550:	str	r3, [fp, #-16]
   1b554:	sub	r3, fp, #40	; 0x28
   1b558:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b55c:	ldr	r1, [fp, #-16]
   1b560:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b564:	bl	3b120 <flatcc_json_parser_float@@Base>
   1b568:	str	r0, [fp, #-60]	; 0xffffffc4
   1b56c:	ldr	r2, [fp, #-16]
   1b570:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b574:	cmp	r2, r3
   1b578:	bne	1b5c8 <_start@@Base+0x6fa8>
   1b57c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b580:	str	r3, [fp, #-16]
   1b584:	sub	r3, fp, #40	; 0x28
   1b588:	str	r3, [sp]
   1b58c:	ldr	r3, [pc, #-204]	; 1b4c8 <_start@@Base+0x6ea8>
   1b590:	add	r3, pc, r3
   1b594:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b598:	ldr	r1, [fp, #-16]
   1b59c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b5a0:	bl	17270 <_start@@Base+0x2c50>
   1b5a4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b5a8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b5ac:	ldr	r3, [fp, #-16]
   1b5b0:	cmp	r2, r3
   1b5b4:	beq	1b864 <_start@@Base+0x7244>
   1b5b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b5bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b5c0:	cmp	r2, r3
   1b5c4:	beq	1b864 <_start@@Base+0x7244>
   1b5c8:	vldr	s15, [fp, #-40]	; 0xffffffd8
   1b5cc:	vmov.f32	s0, s15
   1b5d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5d4:	bl	14a90 <_start@@Base+0x470>
   1b5d8:	b	1b838 <_start@@Base+0x7218>
   1b5dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b5e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b5e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b5e8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b5ec:	str	r0, [fp, #-60]	; 0xffffffc4
   1b5f0:	b	1b838 <_start@@Base+0x7218>
   1b5f4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b5f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b5fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b600:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b604:	str	r0, [fp, #-60]	; 0xffffffc4
   1b608:	b	1b838 <_start@@Base+0x7218>
   1b60c:	ldrd	r2, [fp, #-12]
   1b610:	mov	r0, #0
   1b614:	mov	r1, #-16777216	; 0xff000000
   1b618:	and	r2, r2, r0
   1b61c:	and	r3, r3, r1
   1b620:	cmp	r3, #2046820352	; 0x7a000000
   1b624:	cmpeq	r2, #0
   1b628:	bne	1b718 <_start@@Base+0x70f8>
   1b62c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b630:	str	r3, [fp, #-16]
   1b634:	mov	r3, #1
   1b638:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b63c:	ldr	r1, [fp, #-16]
   1b640:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b644:	bl	1552c <_start@@Base+0xf0c>
   1b648:	str	r0, [fp, #-60]	; 0xffffffc4
   1b64c:	ldr	r2, [fp, #-16]
   1b650:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b654:	cmp	r2, r3
   1b658:	beq	1b700 <_start@@Base+0x70e0>
   1b65c:	mov	r3, #0
   1b660:	str	r3, [fp, #-44]	; 0xffffffd4
   1b664:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b668:	add	r3, r3, #8
   1b66c:	str	r3, [fp, #-20]	; 0xffffffec
   1b670:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b674:	str	r3, [fp, #-16]
   1b678:	sub	r3, fp, #44	; 0x2c
   1b67c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b680:	ldr	r1, [fp, #-16]
   1b684:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b688:	bl	3b120 <flatcc_json_parser_float@@Base>
   1b68c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b690:	ldr	r2, [fp, #-16]
   1b694:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b698:	cmp	r2, r3
   1b69c:	bne	1b6ec <_start@@Base+0x70cc>
   1b6a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b6a4:	str	r3, [fp, #-16]
   1b6a8:	sub	r3, fp, #44	; 0x2c
   1b6ac:	str	r3, [sp]
   1b6b0:	ldr	r3, [pc, #-492]	; 1b4cc <_start@@Base+0x6eac>
   1b6b4:	add	r3, pc, r3
   1b6b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b6bc:	ldr	r1, [fp, #-16]
   1b6c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b6c4:	bl	17270 <_start@@Base+0x2c50>
   1b6c8:	str	r0, [fp, #-60]	; 0xffffffc4
   1b6cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b6d0:	ldr	r3, [fp, #-16]
   1b6d4:	cmp	r2, r3
   1b6d8:	beq	1b864 <_start@@Base+0x7244>
   1b6dc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b6e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b6e4:	cmp	r2, r3
   1b6e8:	beq	1b864 <_start@@Base+0x7244>
   1b6ec:	vldr	s15, [fp, #-44]	; 0xffffffd4
   1b6f0:	vmov.f32	s0, s15
   1b6f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b6f8:	bl	14a90 <_start@@Base+0x470>
   1b6fc:	b	1b838 <_start@@Base+0x7218>
   1b700:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b704:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b708:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b70c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b710:	str	r0, [fp, #-60]	; 0xffffffc4
   1b714:	b	1b838 <_start@@Base+0x7218>
   1b718:	ldrd	r2, [fp, #-12]
   1b71c:	mov	r0, #0
   1b720:	mov	r1, #-16777216	; 0xff000000
   1b724:	and	r2, r2, r0
   1b728:	and	r3, r3, r1
   1b72c:	cmp	r3, #2030043136	; 0x79000000
   1b730:	cmpeq	r2, #0
   1b734:	bne	1b824 <_start@@Base+0x7204>
   1b738:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b73c:	str	r3, [fp, #-16]
   1b740:	mov	r3, #1
   1b744:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b748:	ldr	r1, [fp, #-16]
   1b74c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b750:	bl	1552c <_start@@Base+0xf0c>
   1b754:	str	r0, [fp, #-60]	; 0xffffffc4
   1b758:	ldr	r2, [fp, #-16]
   1b75c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b760:	cmp	r2, r3
   1b764:	beq	1b80c <_start@@Base+0x71ec>
   1b768:	mov	r3, #0
   1b76c:	str	r3, [fp, #-48]	; 0xffffffd0
   1b770:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b774:	add	r3, r3, #4
   1b778:	str	r3, [fp, #-20]	; 0xffffffec
   1b77c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b780:	str	r3, [fp, #-16]
   1b784:	sub	r3, fp, #48	; 0x30
   1b788:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b78c:	ldr	r1, [fp, #-16]
   1b790:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b794:	bl	3b120 <flatcc_json_parser_float@@Base>
   1b798:	str	r0, [fp, #-60]	; 0xffffffc4
   1b79c:	ldr	r2, [fp, #-16]
   1b7a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b7a4:	cmp	r2, r3
   1b7a8:	bne	1b7f8 <_start@@Base+0x71d8>
   1b7ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b7b0:	str	r3, [fp, #-16]
   1b7b4:	sub	r3, fp, #48	; 0x30
   1b7b8:	str	r3, [sp]
   1b7bc:	ldr	r3, [pc, #-756]	; 1b4d0 <_start@@Base+0x6eb0>
   1b7c0:	add	r3, pc, r3
   1b7c4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b7c8:	ldr	r1, [fp, #-16]
   1b7cc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b7d0:	bl	17270 <_start@@Base+0x2c50>
   1b7d4:	str	r0, [fp, #-60]	; 0xffffffc4
   1b7d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b7dc:	ldr	r3, [fp, #-16]
   1b7e0:	cmp	r2, r3
   1b7e4:	beq	1b864 <_start@@Base+0x7244>
   1b7e8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1b7ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b7f0:	cmp	r2, r3
   1b7f4:	beq	1b864 <_start@@Base+0x7244>
   1b7f8:	vldr	s15, [fp, #-48]	; 0xffffffd0
   1b7fc:	vmov.f32	s0, s15
   1b800:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b804:	bl	14a90 <_start@@Base+0x470>
   1b808:	b	1b838 <_start@@Base+0x7218>
   1b80c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b810:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b814:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b818:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b81c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b820:	b	1b838 <_start@@Base+0x7218>
   1b824:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b828:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b82c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b830:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1b834:	str	r0, [fp, #-60]	; 0xffffffc4
   1b838:	sub	r3, fp, #24
   1b83c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b840:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b844:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b848:	bl	15174 <_start@@Base+0xb54>
   1b84c:	str	r0, [fp, #-60]	; 0xffffffc4
   1b850:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b854:	cmp	r3, #0
   1b858:	bne	1b154 <_start@@Base+0x6b34>
   1b85c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b860:	b	1b87c <_start@@Base+0x725c>
   1b864:	mov	r3, #33	; 0x21
   1b868:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1b86c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b870:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b874:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1b878:	mov	r3, r0
   1b87c:	mov	r0, r3
   1b880:	sub	sp, fp, #4
   1b884:	pop	{fp, pc}
   1b888:	push	{fp, lr}
   1b88c:	add	fp, sp, #4
   1b890:	sub	sp, sp, #24
   1b894:	str	r0, [fp, #-16]
   1b898:	str	r1, [fp, #-20]	; 0xffffffec
   1b89c:	str	r2, [fp, #-24]	; 0xffffffe8
   1b8a0:	str	r3, [fp, #-28]	; 0xffffffe4
   1b8a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b8a8:	mov	r2, #0
   1b8ac:	str	r2, [r3]
   1b8b0:	ldr	r3, [fp, #-16]
   1b8b4:	ldr	r3, [r3]
   1b8b8:	mov	r2, #16
   1b8bc:	mov	r1, #32
   1b8c0:	mov	r0, r3
   1b8c4:	bl	2deac <flatcc_builder_start_struct@@Base>
   1b8c8:	str	r0, [fp, #-8]
   1b8cc:	ldr	r3, [fp, #-8]
   1b8d0:	cmp	r3, #0
   1b8d4:	beq	1b934 <_start@@Base+0x7314>
   1b8d8:	ldr	r3, [fp, #-8]
   1b8dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b8e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b8e4:	ldr	r0, [fp, #-16]
   1b8e8:	bl	1b11c <_start@@Base+0x6afc>
   1b8ec:	str	r0, [fp, #-20]	; 0xffffffec
   1b8f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b8f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b8f8:	cmp	r2, r3
   1b8fc:	beq	1b938 <_start@@Base+0x7318>
   1b900:	ldr	r3, [fp, #-16]
   1b904:	ldr	r3, [r3]
   1b908:	mov	r0, r3
   1b90c:	bl	2df4c <flatcc_builder_end_struct@@Base>
   1b910:	mov	r2, r0
   1b914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b918:	str	r2, [r3]
   1b91c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b920:	ldr	r3, [r3]
   1b924:	cmp	r3, #0
   1b928:	beq	1b938 <_start@@Base+0x7318>
   1b92c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b930:	b	1b950 <_start@@Base+0x7330>
   1b934:	nop			; (mov r0, r0)
   1b938:	mov	r3, #33	; 0x21
   1b93c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b940:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b944:	ldr	r0, [fp, #-16]
   1b948:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1b94c:	mov	r3, r0
   1b950:	mov	r0, r3
   1b954:	sub	sp, fp, #4
   1b958:	pop	{fp, pc}
   1b95c:	push	{fp, lr}
   1b960:	add	fp, sp, #4
   1b964:	sub	sp, sp, #56	; 0x38
   1b968:	str	r0, [fp, #-40]	; 0xffffffd8
   1b96c:	str	r1, [fp, #-44]	; 0xffffffd4
   1b970:	str	r2, [fp, #-48]	; 0xffffffd0
   1b974:	str	r3, [fp, #-52]	; 0xffffffcc
   1b978:	sub	r3, fp, #24
   1b97c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b980:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b984:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b988:	bl	1508c <_start@@Base+0xa6c>
   1b98c:	str	r0, [fp, #-44]	; 0xffffffd4
   1b990:	b	1bbf8 <_start@@Base+0x75d8>
   1b994:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b998:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b99c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b9a0:	bl	14cb8 <_start@@Base+0x698>
   1b9a4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b9a8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b9ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b9b0:	bl	14f70 <_start@@Base+0x950>
   1b9b4:	strd	r0, [fp, #-12]
   1b9b8:	ldrd	r2, [fp, #-12]
   1b9bc:	mov	r0, #0
   1b9c0:	ldr	r1, [pc, #624]	; 1bc38 <_start@@Base+0x7618>
   1b9c4:	and	r2, r2, r0
   1b9c8:	and	r3, r3, r1
   1b9cc:	mov	r0, #0
   1b9d0:	ldr	r1, [pc, #612]	; 1bc3c <_start@@Base+0x761c>
   1b9d4:	cmp	r3, r1
   1b9d8:	cmpeq	r2, r0
   1b9dc:	bne	1bac8 <_start@@Base+0x74a8>
   1b9e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b9e4:	str	r3, [fp, #-16]
   1b9e8:	mov	r3, #2
   1b9ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1b9f0:	ldr	r1, [fp, #-16]
   1b9f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b9f8:	bl	1552c <_start@@Base+0xf0c>
   1b9fc:	str	r0, [fp, #-44]	; 0xffffffd4
   1ba00:	ldr	r2, [fp, #-16]
   1ba04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba08:	cmp	r2, r3
   1ba0c:	beq	1bab0 <_start@@Base+0x7490>
   1ba10:	mov	r3, #0
   1ba14:	str	r3, [fp, #-28]	; 0xffffffe4
   1ba18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1ba1c:	str	r3, [fp, #-20]	; 0xffffffec
   1ba20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba24:	str	r3, [fp, #-16]
   1ba28:	sub	r3, fp, #28
   1ba2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ba30:	ldr	r1, [fp, #-16]
   1ba34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba38:	bl	15dc0 <_start@@Base+0x17a0>
   1ba3c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ba40:	ldr	r2, [fp, #-16]
   1ba44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba48:	cmp	r2, r3
   1ba4c:	bne	1ba9c <_start@@Base+0x747c>
   1ba50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ba54:	str	r3, [fp, #-16]
   1ba58:	sub	r3, fp, #28
   1ba5c:	str	r3, [sp]
   1ba60:	ldr	r3, [pc, #472]	; 1bc40 <_start@@Base+0x7620>
   1ba64:	add	r3, pc, r3
   1ba68:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ba6c:	ldr	r1, [fp, #-16]
   1ba70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ba74:	bl	16618 <_start@@Base+0x1ff8>
   1ba78:	str	r0, [fp, #-44]	; 0xffffffd4
   1ba7c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ba80:	ldr	r3, [fp, #-16]
   1ba84:	cmp	r2, r3
   1ba88:	beq	1bc0c <_start@@Base+0x75ec>
   1ba8c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ba90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ba94:	cmp	r2, r3
   1ba98:	beq	1bc0c <_start@@Base+0x75ec>
   1ba9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1baa0:	mov	r1, r3
   1baa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1baa8:	bl	1483c <_start@@Base+0x21c>
   1baac:	b	1bbe0 <_start@@Base+0x75c0>
   1bab0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bab4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bab8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1babc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1bac0:	str	r0, [fp, #-44]	; 0xffffffd4
   1bac4:	b	1bbe0 <_start@@Base+0x75c0>
   1bac8:	ldrd	r2, [fp, #-12]
   1bacc:	add	r1, pc, #348	; 0x15c
   1bad0:	ldrd	r0, [r1]
   1bad4:	cmp	r3, r1
   1bad8:	cmpeq	r2, r0
   1badc:	bne	1bbcc <_start@@Base+0x75ac>
   1bae0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bae4:	str	r3, [fp, #-16]
   1bae8:	mov	r3, #8
   1baec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1baf0:	ldr	r1, [fp, #-16]
   1baf4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1baf8:	bl	1552c <_start@@Base+0xf0c>
   1bafc:	str	r0, [fp, #-44]	; 0xffffffd4
   1bb00:	ldr	r2, [fp, #-16]
   1bb04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb08:	cmp	r2, r3
   1bb0c:	beq	1bbb4 <_start@@Base+0x7594>
   1bb10:	mov	r3, #0
   1bb14:	str	r3, [fp, #-32]	; 0xffffffe0
   1bb18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bb1c:	add	r3, r3, #4
   1bb20:	str	r3, [fp, #-20]	; 0xffffffec
   1bb24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb28:	str	r3, [fp, #-16]
   1bb2c:	sub	r3, fp, #32
   1bb30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bb34:	ldr	r1, [fp, #-16]
   1bb38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb3c:	bl	15dc0 <_start@@Base+0x17a0>
   1bb40:	str	r0, [fp, #-44]	; 0xffffffd4
   1bb44:	ldr	r2, [fp, #-16]
   1bb48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb4c:	cmp	r2, r3
   1bb50:	bne	1bba0 <_start@@Base+0x7580>
   1bb54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb58:	str	r3, [fp, #-16]
   1bb5c:	sub	r3, fp, #32
   1bb60:	str	r3, [sp]
   1bb64:	ldr	r3, [pc, #216]	; 1bc44 <_start@@Base+0x7624>
   1bb68:	add	r3, pc, r3
   1bb6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bb70:	ldr	r1, [fp, #-16]
   1bb74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bb78:	bl	16618 <_start@@Base+0x1ff8>
   1bb7c:	str	r0, [fp, #-44]	; 0xffffffd4
   1bb80:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bb84:	ldr	r3, [fp, #-16]
   1bb88:	cmp	r2, r3
   1bb8c:	beq	1bc0c <_start@@Base+0x75ec>
   1bb90:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1bb94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bb98:	cmp	r2, r3
   1bb9c:	beq	1bc0c <_start@@Base+0x75ec>
   1bba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bba4:	mov	r1, r3
   1bba8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1bbac:	bl	1483c <_start@@Base+0x21c>
   1bbb0:	b	1bbe0 <_start@@Base+0x75c0>
   1bbb4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bbb8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bbbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bbc0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1bbc4:	str	r0, [fp, #-44]	; 0xffffffd4
   1bbc8:	b	1bbe0 <_start@@Base+0x75c0>
   1bbcc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bbd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bbd4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bbd8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1bbdc:	str	r0, [fp, #-44]	; 0xffffffd4
   1bbe0:	sub	r3, fp, #24
   1bbe4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bbe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bbec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bbf0:	bl	15174 <_start@@Base+0xb54>
   1bbf4:	str	r0, [fp, #-44]	; 0xffffffd4
   1bbf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bbfc:	cmp	r3, #0
   1bc00:	bne	1b994 <_start@@Base+0x7374>
   1bc04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bc08:	b	1bc24 <_start@@Base+0x7604>
   1bc0c:	mov	r3, #33	; 0x21
   1bc10:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bc14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bc18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc1c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1bc20:	mov	r3, r0
   1bc24:	mov	r0, r3
   1bc28:	sub	sp, fp, #4
   1bc2c:	pop	{fp, pc}
   1bc30:	cmnvs	lr, r5, ror #6
   1bc34:	strbtvs	r7, [r9], #-884	; 0xfffffc8c
   1bc38:			; <UNDEFINED> instruction: 0xffff0000
   1bc3c:	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
   1bc40:	strdeq	r6, [r4], -ip
   1bc44:	andeq	r6, r4, r4, lsl #12
   1bc48:	push	{fp, lr}
   1bc4c:	add	fp, sp, #4
   1bc50:	sub	sp, sp, #24
   1bc54:	str	r0, [fp, #-16]
   1bc58:	str	r1, [fp, #-20]	; 0xffffffec
   1bc5c:	str	r2, [fp, #-24]	; 0xffffffe8
   1bc60:	str	r3, [fp, #-28]	; 0xffffffe4
   1bc64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bc68:	mov	r2, #0
   1bc6c:	str	r2, [r3]
   1bc70:	ldr	r3, [fp, #-16]
   1bc74:	ldr	r3, [r3]
   1bc78:	mov	r2, #4
   1bc7c:	mov	r1, #8
   1bc80:	mov	r0, r3
   1bc84:	bl	2deac <flatcc_builder_start_struct@@Base>
   1bc88:	str	r0, [fp, #-8]
   1bc8c:	ldr	r3, [fp, #-8]
   1bc90:	cmp	r3, #0
   1bc94:	beq	1bcf4 <_start@@Base+0x76d4>
   1bc98:	ldr	r3, [fp, #-8]
   1bc9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bca0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bca4:	ldr	r0, [fp, #-16]
   1bca8:	bl	1b95c <_start@@Base+0x733c>
   1bcac:	str	r0, [fp, #-20]	; 0xffffffec
   1bcb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bcb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcb8:	cmp	r2, r3
   1bcbc:	beq	1bcf8 <_start@@Base+0x76d8>
   1bcc0:	ldr	r3, [fp, #-16]
   1bcc4:	ldr	r3, [r3]
   1bcc8:	mov	r0, r3
   1bccc:	bl	2df4c <flatcc_builder_end_struct@@Base>
   1bcd0:	mov	r2, r0
   1bcd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bcd8:	str	r2, [r3]
   1bcdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bce0:	ldr	r3, [r3]
   1bce4:	cmp	r3, #0
   1bce8:	beq	1bcf8 <_start@@Base+0x76d8>
   1bcec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bcf0:	b	1bd10 <_start@@Base+0x76f0>
   1bcf4:	nop			; (mov r0, r0)
   1bcf8:	mov	r3, #33	; 0x21
   1bcfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1bd00:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bd04:	ldr	r0, [fp, #-16]
   1bd08:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1bd0c:	mov	r3, r0
   1bd10:	mov	r0, r3
   1bd14:	sub	sp, fp, #4
   1bd18:	pop	{fp, pc}
   1bd1c:	push	{fp, lr}
   1bd20:	add	fp, sp, #4
   1bd24:	sub	sp, sp, #64	; 0x40
   1bd28:	str	r0, [fp, #-48]	; 0xffffffd0
   1bd2c:	str	r1, [fp, #-52]	; 0xffffffcc
   1bd30:	str	r2, [fp, #-56]	; 0xffffffc8
   1bd34:	str	r3, [fp, #-60]	; 0xffffffc4
   1bd38:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1bd3c:	mov	r2, #0
   1bd40:	str	r2, [r3]
   1bd44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bd48:	ldr	r3, [r3]
   1bd4c:	mov	r1, #3
   1bd50:	mov	r0, r3
   1bd54:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1bd58:	mov	r3, r0
   1bd5c:	cmp	r3, #0
   1bd60:	bne	1c1e0 <_start@@Base+0x7bc0>
   1bd64:	sub	r3, fp, #28
   1bd68:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bd6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bd70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bd74:	bl	1508c <_start@@Base+0xa6c>
   1bd78:	str	r0, [fp, #-52]	; 0xffffffcc
   1bd7c:	b	1c190 <_start@@Base+0x7b70>
   1bd80:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bd84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bd88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bd8c:	bl	14cb8 <_start@@Base+0x698>
   1bd90:	str	r0, [fp, #-52]	; 0xffffffcc
   1bd94:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1bd98:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1bd9c:	bl	14f70 <_start@@Base+0x950>
   1bda0:	strd	r0, [fp, #-12]
   1bda4:	ldrd	r2, [fp, #-12]
   1bda8:	mvn	r0, #0
   1bdac:	ldr	r1, [pc, #924]	; 1c150 <_start@@Base+0x7b30>
   1bdb0:	cmp	r3, r1
   1bdb4:	cmpeq	r2, r0
   1bdb8:	bhi	1bf24 <_start@@Base+0x7904>
   1bdbc:	ldrd	r2, [fp, #-12]
   1bdc0:	mov	r0, #-16777216	; 0xff000000
   1bdc4:	mvn	r1, #0
   1bdc8:	and	r2, r2, r0
   1bdcc:	and	r3, r3, r1
   1bdd0:	add	r1, pc, #872	; 0x368
   1bdd4:	ldrd	r0, [r1]
   1bdd8:	cmp	r3, r1
   1bddc:	cmpeq	r2, r0
   1bde0:	bne	1bf0c <_start@@Base+0x78ec>
   1bde4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bde8:	str	r3, [fp, #-16]
   1bdec:	mov	r3, #5
   1bdf0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bdf4:	ldr	r1, [fp, #-16]
   1bdf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bdfc:	bl	1552c <_start@@Base+0xf0c>
   1be00:	str	r0, [fp, #-52]	; 0xffffffcc
   1be04:	ldr	r2, [fp, #-16]
   1be08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1be0c:	cmp	r2, r3
   1be10:	beq	1bef4 <_start@@Base+0x78d4>
   1be14:	mov	r3, #0
   1be18:	strh	r3, [fp, #-34]	; 0xffffffde
   1be1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1be20:	str	r3, [fp, #-16]
   1be24:	sub	r3, fp, #34	; 0x22
   1be28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1be2c:	ldr	r1, [fp, #-16]
   1be30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be34:	bl	15e90 <_start@@Base+0x1870>
   1be38:	str	r0, [fp, #-52]	; 0xffffffcc
   1be3c:	ldr	r2, [fp, #-16]
   1be40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1be44:	cmp	r2, r3
   1be48:	bne	1be98 <_start@@Base+0x7878>
   1be4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1be50:	str	r3, [fp, #-16]
   1be54:	sub	r3, fp, #34	; 0x22
   1be58:	str	r3, [sp]
   1be5c:	ldr	r3, [pc, #752]	; 1c154 <_start@@Base+0x7b34>
   1be60:	add	r3, pc, r3
   1be64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1be68:	ldr	r1, [fp, #-16]
   1be6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1be70:	bl	1679c <_start@@Base+0x217c>
   1be74:	str	r0, [fp, #-52]	; 0xffffffcc
   1be78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1be7c:	ldr	r3, [fp, #-16]
   1be80:	cmp	r2, r3
   1be84:	beq	1c204 <_start@@Base+0x7be4>
   1be88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1be8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1be90:	cmp	r2, r3
   1be94:	beq	1c204 <_start@@Base+0x7be4>
   1be98:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1be9c:	cmp	r3, #0
   1bea0:	bne	1beb8 <_start@@Base+0x7898>
   1bea4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bea8:	ldr	r3, [r3, #8]
   1beac:	and	r3, r3, #2
   1beb0:	cmp	r3, #0
   1beb4:	beq	1c178 <_start@@Base+0x7b58>
   1beb8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bebc:	ldr	r0, [r3]
   1bec0:	mov	r3, #2
   1bec4:	mov	r2, #2
   1bec8:	mov	r1, #2
   1becc:	bl	31134 <flatcc_builder_table_add@@Base>
   1bed0:	str	r0, [fp, #-20]	; 0xffffffec
   1bed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bed8:	cmp	r3, #0
   1bedc:	beq	1c1e8 <_start@@Base+0x7bc8>
   1bee0:	ldrh	r3, [fp, #-34]	; 0xffffffde
   1bee4:	mov	r1, r3
   1bee8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1beec:	bl	147d8 <_start@@Base+0x1b8>
   1bef0:	b	1c178 <_start@@Base+0x7b58>
   1bef4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bef8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1befc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf00:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1bf04:	str	r0, [fp, #-52]	; 0xffffffcc
   1bf08:	b	1c178 <_start@@Base+0x7b58>
   1bf0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bf10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1bf14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf18:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1bf1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1bf20:	b	1c178 <_start@@Base+0x7b58>
   1bf24:	ldrd	r2, [fp, #-12]
   1bf28:	mov	r0, #0
   1bf2c:	mvn	r1, #255	; 0xff
   1bf30:	and	r2, r2, r0
   1bf34:	and	r3, r3, r1
   1bf38:	add	r1, pc, #520	; 0x208
   1bf3c:	ldrd	r0, [r1]
   1bf40:	cmp	r3, r1
   1bf44:	cmpeq	r2, r0
   1bf48:	bne	1c074 <_start@@Base+0x7a54>
   1bf4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bf50:	str	r3, [fp, #-16]
   1bf54:	mov	r3, #3
   1bf58:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bf5c:	ldr	r1, [fp, #-16]
   1bf60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bf64:	bl	1552c <_start@@Base+0xf0c>
   1bf68:	str	r0, [fp, #-52]	; 0xffffffcc
   1bf6c:	ldr	r2, [fp, #-16]
   1bf70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bf74:	cmp	r2, r3
   1bf78:	beq	1c05c <_start@@Base+0x7a3c>
   1bf7c:	mov	r2, #0
   1bf80:	mov	r3, #0
   1bf84:	strd	r2, [fp, #-44]	; 0xffffffd4
   1bf88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bf8c:	str	r3, [fp, #-16]
   1bf90:	sub	r3, fp, #44	; 0x2c
   1bf94:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bf98:	ldr	r1, [fp, #-16]
   1bf9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bfa0:	bl	16030 <_start@@Base+0x1a10>
   1bfa4:	str	r0, [fp, #-52]	; 0xffffffcc
   1bfa8:	ldr	r2, [fp, #-16]
   1bfac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bfb0:	cmp	r2, r3
   1bfb4:	bne	1c004 <_start@@Base+0x79e4>
   1bfb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1bfbc:	str	r3, [fp, #-16]
   1bfc0:	sub	r3, fp, #44	; 0x2c
   1bfc4:	str	r3, [sp]
   1bfc8:	ldr	r3, [pc, #392]	; 1c158 <_start@@Base+0x7b38>
   1bfcc:	add	r3, pc, r3
   1bfd0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bfd4:	ldr	r1, [fp, #-16]
   1bfd8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bfdc:	bl	16aac <_start@@Base+0x248c>
   1bfe0:	str	r0, [fp, #-52]	; 0xffffffcc
   1bfe4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bfe8:	ldr	r3, [fp, #-16]
   1bfec:	cmp	r2, r3
   1bff0:	beq	1c204 <_start@@Base+0x7be4>
   1bff4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bff8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1bffc:	cmp	r2, r3
   1c000:	beq	1c204 <_start@@Base+0x7be4>
   1c004:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1c008:	orrs	r3, r2, r3
   1c00c:	bne	1c024 <_start@@Base+0x7a04>
   1c010:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c014:	ldr	r3, [r3, #8]
   1c018:	and	r3, r3, #2
   1c01c:	cmp	r3, #0
   1c020:	beq	1c178 <_start@@Base+0x7b58>
   1c024:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c028:	ldr	r0, [r3]
   1c02c:	mov	r3, #8
   1c030:	mov	r2, #8
   1c034:	mov	r1, #1
   1c038:	bl	31134 <flatcc_builder_table_add@@Base>
   1c03c:	str	r0, [fp, #-20]	; 0xffffffec
   1c040:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c044:	cmp	r3, #0
   1c048:	beq	1c1f0 <_start@@Base+0x7bd0>
   1c04c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1c050:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c054:	bl	14a20 <_start@@Base+0x400>
   1c058:	b	1c178 <_start@@Base+0x7b58>
   1c05c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c060:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c064:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c068:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c06c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c070:	b	1c178 <_start@@Base+0x7b58>
   1c074:	ldrd	r2, [fp, #-12]
   1c078:	mov	r0, #0
   1c07c:	ldr	r1, [pc, #216]	; 1c15c <_start@@Base+0x7b3c>
   1c080:	and	r2, r2, r0
   1c084:	and	r3, r3, r1
   1c088:	mov	r0, #0
   1c08c:	ldr	r1, [pc, #204]	; 1c160 <_start@@Base+0x7b40>
   1c090:	cmp	r3, r1
   1c094:	cmpeq	r2, r0
   1c098:	bne	1c164 <_start@@Base+0x7b44>
   1c09c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c0a0:	str	r3, [fp, #-16]
   1c0a4:	mov	r3, #2
   1c0a8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c0ac:	ldr	r1, [fp, #-16]
   1c0b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c0b4:	bl	1552c <_start@@Base+0xf0c>
   1c0b8:	str	r0, [fp, #-52]	; 0xffffffcc
   1c0bc:	ldr	r2, [fp, #-16]
   1c0c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c0c4:	cmp	r2, r3
   1c0c8:	beq	1c124 <_start@@Base+0x7b04>
   1c0cc:	sub	r3, fp, #32
   1c0d0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c0d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c0d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c0dc:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   1c0e0:	str	r0, [fp, #-52]	; 0xffffffcc
   1c0e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0e8:	cmp	r3, #0
   1c0ec:	beq	1c204 <_start@@Base+0x7be4>
   1c0f0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c0f4:	ldr	r3, [r3]
   1c0f8:	mov	r1, #0
   1c0fc:	mov	r0, r3
   1c100:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1c104:	str	r0, [fp, #-24]	; 0xffffffe8
   1c108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c10c:	cmp	r3, #0
   1c110:	beq	1c204 <_start@@Base+0x7be4>
   1c114:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c11c:	str	r2, [r3]
   1c120:	b	1c178 <_start@@Base+0x7b58>
   1c124:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c128:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c12c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c130:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c134:	str	r0, [fp, #-52]	; 0xffffffcc
   1c138:	b	1c178 <_start@@Base+0x7b58>
   1c13c:	nop			; (mov r0, r0)
   1c140:	strvc	r0, [r0], #-0
   1c144:	cmnvs	pc, #461373440	; 0x1b800000
   1c148:	andeq	r0, r0, r0
   1c14c:	strbtvc	r6, [r1], -r0, lsl #24
   1c150:	stmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^
   1c154:	andeq	r6, r4, r8, lsl r3
   1c158:			; <UNDEFINED> instruction: 0x000461b8
   1c15c:			; <UNDEFINED> instruction: 0xffff0000
   1c160:	stmdbvs	r4!, {}^	; <UNPREDICTABLE>
   1c164:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c168:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c16c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c170:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c174:	str	r0, [fp, #-52]	; 0xffffffcc
   1c178:	sub	r3, fp, #28
   1c17c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c180:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c184:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c188:	bl	15174 <_start@@Base+0xb54>
   1c18c:	str	r0, [fp, #-52]	; 0xffffffcc
   1c190:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c194:	cmp	r3, #0
   1c198:	bne	1bd80 <_start@@Base+0x7760>
   1c19c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c1a0:	ldr	r3, [r3, #20]
   1c1a4:	cmp	r3, #0
   1c1a8:	bne	1c1f8 <_start@@Base+0x7bd8>
   1c1ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c1b0:	ldr	r3, [r3]
   1c1b4:	mov	r0, r3
   1c1b8:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1c1bc:	mov	r2, r0
   1c1c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c1c4:	str	r2, [r3]
   1c1c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c1cc:	ldr	r3, [r3]
   1c1d0:	cmp	r3, #0
   1c1d4:	beq	1c200 <_start@@Base+0x7be0>
   1c1d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c1dc:	b	1c21c <_start@@Base+0x7bfc>
   1c1e0:	nop			; (mov r0, r0)
   1c1e4:	b	1c204 <_start@@Base+0x7be4>
   1c1e8:	nop			; (mov r0, r0)
   1c1ec:	b	1c204 <_start@@Base+0x7be4>
   1c1f0:	nop			; (mov r0, r0)
   1c1f4:	b	1c204 <_start@@Base+0x7be4>
   1c1f8:	nop			; (mov r0, r0)
   1c1fc:	b	1c204 <_start@@Base+0x7be4>
   1c200:	nop			; (mov r0, r0)
   1c204:	mov	r3, #33	; 0x21
   1c208:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c20c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c210:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c214:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1c218:	mov	r3, r0
   1c21c:	mov	r0, r3
   1c220:	sub	sp, fp, #4
   1c224:	pop	{fp, pc}
   1c228:	push	{fp, lr}
   1c22c:	add	fp, sp, #4
   1c230:	sub	sp, sp, #72	; 0x48
   1c234:	str	r0, [fp, #-40]	; 0xffffffd8
   1c238:	str	r1, [fp, #-44]	; 0xffffffd4
   1c23c:	str	r2, [fp, #-48]	; 0xffffffd0
   1c240:	str	r3, [fp, #-52]	; 0xffffffcc
   1c244:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c248:	mov	r2, #0
   1c24c:	str	r2, [r3]
   1c250:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c254:	ldr	r3, [r3]
   1c258:	mov	r1, #4
   1c25c:	mov	r0, r3
   1c260:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1c264:	mov	r3, r0
   1c268:	cmp	r3, #0
   1c26c:	bne	1c6a8 <_start@@Base+0x8088>
   1c270:	sub	r3, fp, #32
   1c274:	str	r3, [sp]
   1c278:	mov	r3, #1
   1c27c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c280:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c288:	bl	3bf3c <flatcc_json_parser_prepare_unions@@Base>
   1c28c:	mov	r2, r0
   1c290:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1c294:	cmp	r2, r3
   1c298:	beq	1c6b0 <_start@@Base+0x8090>
   1c29c:	sub	r3, fp, #24
   1c2a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c2a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c2a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c2ac:	bl	1508c <_start@@Base+0xa6c>
   1c2b0:	str	r0, [fp, #-44]	; 0xffffffd4
   1c2b4:	b	1c640 <_start@@Base+0x8020>
   1c2b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c2bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c2c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c2c4:	bl	14cb8 <_start@@Base+0x698>
   1c2c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1c2cc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c2d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c2d4:	bl	14f70 <_start@@Base+0x950>
   1c2d8:	strd	r0, [fp, #-12]
   1c2dc:	ldrd	r2, [fp, #-12]
   1c2e0:	add	r1, pc, #984	; 0x3d8
   1c2e4:	ldrd	r0, [r1]
   1c2e8:	cmp	r3, r1
   1c2ec:	cmpeq	r2, r0
   1c2f0:	bne	1c3e8 <_start@@Base+0x7dc8>
   1c2f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c2f8:	add	r3, r3, #8
   1c2fc:	str	r3, [fp, #-44]	; 0xffffffd4
   1c300:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1c304:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c308:	bl	14f70 <_start@@Base+0x950>
   1c30c:	strd	r0, [fp, #-12]
   1c310:	ldrd	r2, [fp, #-12]
   1c314:	mov	r0, #0
   1c318:	mvn	r1, #0
   1c31c:	and	r2, r2, r0
   1c320:	and	r3, r3, r1
   1c324:	add	r1, pc, #924	; 0x39c
   1c328:	ldrd	r0, [r1]
   1c32c:	cmp	r3, r1
   1c330:	cmpeq	r2, r0
   1c334:	bne	1c3d0 <_start@@Base+0x7db0>
   1c338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c33c:	str	r3, [fp, #-16]
   1c340:	mov	r3, #4
   1c344:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c348:	ldr	r1, [fp, #-16]
   1c34c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c350:	bl	1552c <_start@@Base+0xf0c>
   1c354:	str	r0, [fp, #-44]	; 0xffffffd4
   1c358:	ldr	r2, [fp, #-16]
   1c35c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c360:	cmp	r2, r3
   1c364:	beq	1c3b8 <_start@@Base+0x7d98>
   1c368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c36c:	ldr	r2, [pc, #884]	; 1c6e8 <_start@@Base+0x80c8>
   1c370:	add	r2, pc, r2
   1c374:	str	r2, [sp, #16]
   1c378:	ldr	r2, [pc, #876]	; 1c6ec <_start@@Base+0x80cc>
   1c37c:	add	r2, pc, r2
   1c380:	str	r2, [sp, #12]
   1c384:	ldr	r2, [pc, #868]	; 1c6f0 <_start@@Base+0x80d0>
   1c388:	add	r2, pc, r2
   1c38c:	str	r2, [sp, #8]
   1c390:	str	r3, [sp, #4]
   1c394:	mov	r3, #3
   1c398:	str	r3, [sp]
   1c39c:	mov	r3, #0
   1c3a0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c3a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c3a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c3ac:	bl	3c848 <flatcc_json_parser_union_type_vector@@Base>
   1c3b0:	str	r0, [fp, #-44]	; 0xffffffd4
   1c3b4:	b	1c628 <_start@@Base+0x8008>
   1c3b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c3bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c3c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c3c4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c3c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1c3cc:	b	1c628 <_start@@Base+0x8008>
   1c3d0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c3d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c3d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c3dc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c3e0:	str	r0, [fp, #-44]	; 0xffffffd4
   1c3e4:	b	1c628 <_start@@Base+0x8008>
   1c3e8:	ldrd	r2, [fp, #-12]
   1c3ec:	mvn	r0, #255	; 0xff
   1c3f0:	mvn	r1, #0
   1c3f4:	and	r2, r2, r0
   1c3f8:	and	r3, r3, r1
   1c3fc:	add	r1, pc, #716	; 0x2cc
   1c400:	ldrd	r0, [r1]
   1c404:	cmp	r3, r1
   1c408:	cmpeq	r2, r0
   1c40c:	bne	1c478 <_start@@Base+0x7e58>
   1c410:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c414:	str	r3, [fp, #-16]
   1c418:	mov	r3, #7
   1c41c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c420:	ldr	r1, [fp, #-16]
   1c424:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c428:	bl	1552c <_start@@Base+0xf0c>
   1c42c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c430:	ldr	r2, [fp, #-16]
   1c434:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c438:	cmp	r2, r3
   1c43c:	beq	1c480 <_start@@Base+0x7e60>
   1c440:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c444:	ldr	r2, [pc, #680]	; 1c6f4 <_start@@Base+0x80d4>
   1c448:	add	r2, pc, r2
   1c44c:	str	r2, [sp, #8]
   1c450:	str	r3, [sp, #4]
   1c454:	mov	r3, #3
   1c458:	str	r3, [sp]
   1c45c:	mov	r3, #0
   1c460:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c464:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c46c:	bl	3c6f4 <flatcc_json_parser_union_vector@@Base>
   1c470:	str	r0, [fp, #-44]	; 0xffffffd4
   1c474:	b	1c628 <_start@@Base+0x8008>
   1c478:	nop			; (mov r0, r0)
   1c47c:	b	1c484 <_start@@Base+0x7e64>
   1c480:	nop			; (mov r0, r0)
   1c484:	ldrd	r2, [fp, #-12]
   1c488:	ldr	r0, [pc, #616]	; 1c6f8 <_start@@Base+0x80d8>
   1c48c:	mvn	r1, #0
   1c490:	and	r2, r2, r0
   1c494:	and	r3, r3, r1
   1c498:	add	r1, pc, #568	; 0x238
   1c49c:	ldrd	r0, [r1]
   1c4a0:	cmp	r3, r1
   1c4a4:	cmpeq	r2, r0
   1c4a8:	bne	1c54c <_start@@Base+0x7f2c>
   1c4ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c4b0:	str	r3, [fp, #-16]
   1c4b4:	mov	r3, #6
   1c4b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c4bc:	ldr	r1, [fp, #-16]
   1c4c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c4c4:	bl	1552c <_start@@Base+0xf0c>
   1c4c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1c4cc:	ldr	r2, [fp, #-16]
   1c4d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c4d4:	cmp	r2, r3
   1c4d8:	beq	1c534 <_start@@Base+0x7f14>
   1c4dc:	sub	r3, fp, #28
   1c4e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c4e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c4e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c4ec:	bl	1c724 <_start@@Base+0x8104>
   1c4f0:	str	r0, [fp, #-44]	; 0xffffffd4
   1c4f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c4f8:	cmp	r3, #0
   1c4fc:	beq	1c700 <_start@@Base+0x80e0>
   1c500:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c504:	ldr	r3, [r3]
   1c508:	mov	r1, #0
   1c50c:	mov	r0, r3
   1c510:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1c514:	str	r0, [fp, #-20]	; 0xffffffec
   1c518:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c51c:	cmp	r3, #0
   1c520:	beq	1c700 <_start@@Base+0x80e0>
   1c524:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c52c:	str	r2, [r3]
   1c530:	b	1c628 <_start@@Base+0x8008>
   1c534:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c538:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c53c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c540:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c544:	str	r0, [fp, #-44]	; 0xffffffd4
   1c548:	b	1c628 <_start@@Base+0x8008>
   1c54c:	ldrd	r2, [fp, #-12]
   1c550:	mov	r0, #-16777216	; 0xff000000
   1c554:	mvn	r1, #0
   1c558:	and	r2, r2, r0
   1c55c:	and	r3, r3, r1
   1c560:	add	r1, pc, #376	; 0x178
   1c564:	ldrd	r0, [r1]
   1c568:	cmp	r3, r1
   1c56c:	cmpeq	r2, r0
   1c570:	bne	1c614 <_start@@Base+0x7ff4>
   1c574:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c578:	str	r3, [fp, #-16]
   1c57c:	mov	r3, #5
   1c580:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c584:	ldr	r1, [fp, #-16]
   1c588:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c58c:	bl	1552c <_start@@Base+0xf0c>
   1c590:	str	r0, [fp, #-44]	; 0xffffffd4
   1c594:	ldr	r2, [fp, #-16]
   1c598:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c59c:	cmp	r2, r3
   1c5a0:	beq	1c5fc <_start@@Base+0x7fdc>
   1c5a4:	sub	r3, fp, #28
   1c5a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c5ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c5b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c5b4:	bl	24468 <_start@@Base+0xfe48>
   1c5b8:	str	r0, [fp, #-44]	; 0xffffffd4
   1c5bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5c0:	cmp	r3, #0
   1c5c4:	beq	1c700 <_start@@Base+0x80e0>
   1c5c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c5cc:	ldr	r3, [r3]
   1c5d0:	mov	r1, #1
   1c5d4:	mov	r0, r3
   1c5d8:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1c5dc:	str	r0, [fp, #-20]	; 0xffffffec
   1c5e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5e4:	cmp	r3, #0
   1c5e8:	beq	1c700 <_start@@Base+0x80e0>
   1c5ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c5f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c5f4:	str	r2, [r3]
   1c5f8:	b	1c628 <_start@@Base+0x8008>
   1c5fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c600:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c604:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c608:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c60c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c610:	b	1c628 <_start@@Base+0x8008>
   1c614:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c618:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c61c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c620:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1c624:	str	r0, [fp, #-44]	; 0xffffffd4
   1c628:	sub	r3, fp, #24
   1c62c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c630:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c638:	bl	15174 <_start@@Base+0xb54>
   1c63c:	str	r0, [fp, #-44]	; 0xffffffd4
   1c640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c644:	cmp	r3, #0
   1c648:	bne	1c2b8 <_start@@Base+0x7c98>
   1c64c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c650:	ldr	r3, [r3, #20]
   1c654:	cmp	r3, #0
   1c658:	bne	1c6b8 <_start@@Base+0x8098>
   1c65c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c660:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c664:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c668:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c66c:	bl	3bff4 <flatcc_json_parser_finalize_unions@@Base>
   1c670:	str	r0, [fp, #-44]	; 0xffffffd4
   1c674:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1c678:	ldr	r3, [r3]
   1c67c:	mov	r0, r3
   1c680:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1c684:	mov	r2, r0
   1c688:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c68c:	str	r2, [r3]
   1c690:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c694:	ldr	r3, [r3]
   1c698:	cmp	r3, #0
   1c69c:	beq	1c6fc <_start@@Base+0x80dc>
   1c6a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c6a4:	b	1c718 <_start@@Base+0x80f8>
   1c6a8:	nop			; (mov r0, r0)
   1c6ac:	b	1c700 <_start@@Base+0x80e0>
   1c6b0:	nop			; (mov r0, r0)
   1c6b4:	b	1c700 <_start@@Base+0x80e0>
   1c6b8:	nop			; (mov r0, r0)
   1c6bc:	b	1c700 <_start@@Base+0x80e0>
   1c6c0:	cmnvs	lr, pc, asr r9
   1c6c4:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1c6c8:	andeq	r0, r0, r0
   1c6cc:	ldrbtvc	r7, [r9], #-101	; 0xffffff9b
   1c6d0:	cmnvs	lr, r0, lsl #18
   1c6d4:	stclvs	14, cr6, [r1, #-484]!	; 0xfffffe1c
   1c6d8:	ldmdbvs	r8!, {}^	; <UNPREDICTABLE>
   1c6dc:	rsbsvc	r6, r2, r6, ror #10
   1c6e0:	strvs	r0, [r0, #-0]
   1c6e4:	stclvs	6, cr7, [pc, #-420]!	; 1c548 <_start@@Base+0x7f28>
   1c6e8:			; <UNDEFINED> instruction: 0xffffd010
   1c6ec:			; <UNDEFINED> instruction: 0xffffce94
   1c6f0:	andeq	r5, r4, r8, lsl #28
   1c6f4:			; <UNDEFINED> instruction: 0xffffcdc8
   1c6f8:			; <UNDEFINED> instruction: 0xffff0000
   1c6fc:	nop			; (mov r0, r0)
   1c700:	mov	r3, #33	; 0x21
   1c704:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c708:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c70c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c710:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1c714:	mov	r3, r0
   1c718:	mov	r0, r3
   1c71c:	sub	sp, fp, #4
   1c720:	pop	{fp, pc}
   1c724:	push	{fp, lr}
   1c728:	add	fp, sp, #4
   1c72c:	sub	sp, sp, #40	; 0x28
   1c730:	str	r0, [fp, #-32]	; 0xffffffe0
   1c734:	str	r1, [fp, #-36]	; 0xffffffdc
   1c738:	str	r2, [fp, #-40]	; 0xffffffd8
   1c73c:	str	r3, [fp, #-44]	; 0xffffffd4
   1c740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1c744:	mov	r2, #0
   1c748:	str	r2, [r3]
   1c74c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c750:	ldr	r3, [r3]
   1c754:	mov	r1, #3
   1c758:	mov	r0, r3
   1c75c:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1c760:	mov	r3, r0
   1c764:	cmp	r3, #0
   1c768:	bne	1cafc <_start@@Base+0x84dc>
   1c76c:	sub	r3, fp, #24
   1c770:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c774:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c77c:	bl	1508c <_start@@Base+0xa6c>
   1c780:	str	r0, [fp, #-36]	; 0xffffffdc
   1c784:	b	1caac <_start@@Base+0x848c>
   1c788:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c78c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c790:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c794:	bl	14cb8 <_start@@Base+0x698>
   1c798:	str	r0, [fp, #-36]	; 0xffffffdc
   1c79c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c7a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7a4:	bl	14f70 <_start@@Base+0x950>
   1c7a8:	strd	r0, [fp, #-12]
   1c7ac:	ldrd	r2, [fp, #-12]
   1c7b0:	add	r1, pc, #896	; 0x380
   1c7b4:	ldrd	r0, [r1]
   1c7b8:	cmp	r3, r1
   1c7bc:	cmpeq	r2, r0
   1c7c0:	bne	1ca80 <_start@@Base+0x8460>
   1c7c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c7c8:	add	r3, r3, #8
   1c7cc:	str	r3, [fp, #-36]	; 0xffffffdc
   1c7d0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c7d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c7d8:	bl	14f70 <_start@@Base+0x950>
   1c7dc:	strd	r0, [fp, #-12]
   1c7e0:	ldrd	r2, [fp, #-12]
   1c7e4:	add	r1, pc, #852	; 0x354
   1c7e8:	ldrd	r0, [r1]
   1c7ec:	cmp	r3, r1
   1c7f0:	cmpeq	r2, r0
   1c7f4:	bne	1ca68 <_start@@Base+0x8448>
   1c7f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c7fc:	add	r3, r3, #8
   1c800:	str	r3, [fp, #-36]	; 0xffffffdc
   1c804:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1c808:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c80c:	bl	14f70 <_start@@Base+0x950>
   1c810:	strd	r0, [fp, #-12]
   1c814:	ldrd	r2, [fp, #-12]
   1c818:	ldr	r0, [pc, #832]	; 1cb60 <_start@@Base+0x8540>
   1c81c:	mvn	r1, #0
   1c820:	and	r2, r2, r0
   1c824:	and	r3, r3, r1
   1c828:	add	r1, pc, #792	; 0x318
   1c82c:	ldrd	r0, [r1]
   1c830:	cmp	r3, r1
   1c834:	cmpeq	r2, r0
   1c838:	bne	1c8c4 <_start@@Base+0x82a4>
   1c83c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c840:	str	r3, [fp, #-16]
   1c844:	mov	r3, #6
   1c848:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c84c:	ldr	r1, [fp, #-16]
   1c850:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c854:	bl	1552c <_start@@Base+0xf0c>
   1c858:	str	r0, [fp, #-36]	; 0xffffffdc
   1c85c:	ldr	r2, [fp, #-16]
   1c860:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c864:	cmp	r2, r3
   1c868:	beq	1c974 <_start@@Base+0x8354>
   1c86c:	sub	r3, fp, #28
   1c870:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c874:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c87c:	bl	1d7c0 <_start@@Base+0x91a0>
   1c880:	str	r0, [fp, #-36]	; 0xffffffdc
   1c884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c888:	cmp	r3, #0
   1c88c:	beq	1cb10 <_start@@Base+0x84f0>
   1c890:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c894:	ldr	r3, [r3]
   1c898:	mov	r1, #1
   1c89c:	mov	r0, r3
   1c8a0:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1c8a4:	str	r0, [fp, #-20]	; 0xffffffec
   1c8a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c8ac:	cmp	r3, #0
   1c8b0:	beq	1cb10 <_start@@Base+0x84f0>
   1c8b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c8bc:	str	r2, [r3]
   1c8c0:	b	1ca94 <_start@@Base+0x8474>
   1c8c4:	ldrd	r2, [fp, #-12]
   1c8c8:	mov	r0, #-16777216	; 0xff000000
   1c8cc:	mvn	r1, #0
   1c8d0:	and	r2, r2, r0
   1c8d4:	and	r3, r3, r1
   1c8d8:	add	r1, pc, #624	; 0x270
   1c8dc:	ldrd	r0, [r1]
   1c8e0:	cmp	r3, r1
   1c8e4:	cmpeq	r2, r0
   1c8e8:	bne	1c97c <_start@@Base+0x835c>
   1c8ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c8f0:	str	r3, [fp, #-16]
   1c8f4:	mov	r3, #5
   1c8f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c8fc:	ldr	r1, [fp, #-16]
   1c900:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c904:	bl	1552c <_start@@Base+0xf0c>
   1c908:	str	r0, [fp, #-36]	; 0xffffffdc
   1c90c:	ldr	r2, [fp, #-16]
   1c910:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c914:	cmp	r2, r3
   1c918:	beq	1c984 <_start@@Base+0x8364>
   1c91c:	sub	r3, fp, #28
   1c920:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c924:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c92c:	bl	1cb64 <_start@@Base+0x8544>
   1c930:	str	r0, [fp, #-36]	; 0xffffffdc
   1c934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c938:	cmp	r3, #0
   1c93c:	beq	1cb10 <_start@@Base+0x84f0>
   1c940:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c944:	ldr	r3, [r3]
   1c948:	mov	r1, #0
   1c94c:	mov	r0, r3
   1c950:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1c954:	str	r0, [fp, #-20]	; 0xffffffec
   1c958:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c95c:	cmp	r3, #0
   1c960:	beq	1cb10 <_start@@Base+0x84f0>
   1c964:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c968:	ldr	r3, [fp, #-20]	; 0xffffffec
   1c96c:	str	r2, [r3]
   1c970:	b	1ca94 <_start@@Base+0x8474>
   1c974:	nop			; (mov r0, r0)
   1c978:	b	1c988 <_start@@Base+0x8368>
   1c97c:	nop			; (mov r0, r0)
   1c980:	b	1c988 <_start@@Base+0x8368>
   1c984:	nop			; (mov r0, r0)
   1c988:	ldrd	r2, [fp, #-12]
   1c98c:	ldr	r0, [pc, #460]	; 1cb60 <_start@@Base+0x8540>
   1c990:	mvn	r1, #0
   1c994:	and	r2, r2, r0
   1c998:	and	r3, r3, r1
   1c99c:	add	r1, pc, #436	; 0x1b4
   1c9a0:	ldrd	r0, [r1]
   1c9a4:	cmp	r3, r1
   1c9a8:	cmpeq	r2, r0
   1c9ac:	bne	1ca50 <_start@@Base+0x8430>
   1c9b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c9b4:	str	r3, [fp, #-16]
   1c9b8:	mov	r3, #6
   1c9bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c9c0:	ldr	r1, [fp, #-16]
   1c9c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9c8:	bl	1552c <_start@@Base+0xf0c>
   1c9cc:	str	r0, [fp, #-36]	; 0xffffffdc
   1c9d0:	ldr	r2, [fp, #-16]
   1c9d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c9d8:	cmp	r2, r3
   1c9dc:	beq	1ca38 <_start@@Base+0x8418>
   1c9e0:	sub	r3, fp, #28
   1c9e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1c9e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1c9ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9f0:	bl	1dc08 <_start@@Base+0x95e8>
   1c9f4:	str	r0, [fp, #-36]	; 0xffffffdc
   1c9f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c9fc:	cmp	r3, #0
   1ca00:	beq	1cb10 <_start@@Base+0x84f0>
   1ca04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca08:	ldr	r3, [r3]
   1ca0c:	mov	r1, #2
   1ca10:	mov	r0, r3
   1ca14:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1ca18:	str	r0, [fp, #-20]	; 0xffffffec
   1ca1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca20:	cmp	r3, #0
   1ca24:	beq	1cb10 <_start@@Base+0x84f0>
   1ca28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ca2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ca30:	str	r2, [r3]
   1ca34:	b	1ca94 <_start@@Base+0x8474>
   1ca38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ca40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ca44:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ca48:	str	r0, [fp, #-36]	; 0xffffffdc
   1ca4c:	b	1ca94 <_start@@Base+0x8474>
   1ca50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ca58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ca5c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ca60:	str	r0, [fp, #-36]	; 0xffffffdc
   1ca64:	b	1ca94 <_start@@Base+0x8474>
   1ca68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca6c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ca70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ca74:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ca78:	str	r0, [fp, #-36]	; 0xffffffdc
   1ca7c:	b	1ca94 <_start@@Base+0x8474>
   1ca80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ca88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ca8c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ca90:	str	r0, [fp, #-36]	; 0xffffffdc
   1ca94:	sub	r3, fp, #24
   1ca98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ca9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1caa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1caa4:	bl	15174 <_start@@Base+0xb54>
   1caa8:	str	r0, [fp, #-36]	; 0xffffffdc
   1caac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cab0:	cmp	r3, #0
   1cab4:	bne	1c788 <_start@@Base+0x8168>
   1cab8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cabc:	ldr	r3, [r3, #20]
   1cac0:	cmp	r3, #0
   1cac4:	bne	1cb04 <_start@@Base+0x84e4>
   1cac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cacc:	ldr	r3, [r3]
   1cad0:	mov	r0, r3
   1cad4:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1cad8:	mov	r2, r0
   1cadc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cae0:	str	r2, [r3]
   1cae4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cae8:	ldr	r3, [r3]
   1caec:	cmp	r3, #0
   1caf0:	beq	1cb0c <_start@@Base+0x84ec>
   1caf4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1caf8:	b	1cb28 <_start@@Base+0x8508>
   1cafc:	nop			; (mov r0, r0)
   1cb00:	b	1cb10 <_start@@Base+0x84f0>
   1cb04:	nop			; (mov r0, r0)
   1cb08:	b	1cb10 <_start@@Base+0x84f0>
   1cb0c:	nop			; (mov r0, r0)
   1cb10:	mov	r3, #33	; 0x21
   1cb14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cb18:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1cb1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cb20:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1cb24:	mov	r3, r0
   1cb28:	mov	r0, r3
   1cb2c:	sub	sp, fp, #4
   1cb30:	pop	{fp, pc}
   1cb34:	nop			; (mov r0, r0)
   1cb38:	bvs	1cf88f8 <__bss_end__@@Base+0x1c9644c>
   1cb3c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1cb40:	ldmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
   1cb44:	rsbsvc	r6, r2, r6, ror #10
   1cb48:	ldrvs	r0, [r2, -r0]!
   1cb4c:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1cb50:	strvs	r0, [r0, -r0]
   1cb54:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1cb58:	ldrvs	r0, [r3, -r0]!
   1cb5c:	rsbsvc	r6, r3, #1802240	; 0x1b8000
   1cb60:			; <UNDEFINED> instruction: 0xffff0000
   1cb64:	push	{fp, lr}
   1cb68:	add	fp, sp, #4
   1cb6c:	sub	sp, sp, #96	; 0x60
   1cb70:	str	r0, [fp, #-80]	; 0xffffffb0
   1cb74:	str	r1, [fp, #-84]	; 0xffffffac
   1cb78:	str	r2, [fp, #-88]	; 0xffffffa8
   1cb7c:	str	r3, [fp, #-92]	; 0xffffffa4
   1cb80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1cb84:	mov	r2, #0
   1cb88:	str	r2, [r3]
   1cb8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cb90:	ldr	r3, [r3]
   1cb94:	mov	r1, #9
   1cb98:	mov	r0, r3
   1cb9c:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1cba0:	mov	r3, r0
   1cba4:	cmp	r3, #0
   1cba8:	bne	1d73c <_start@@Base+0x911c>
   1cbac:	sub	r3, fp, #28
   1cbb0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cbb4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cbb8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cbbc:	bl	1508c <_start@@Base+0xa6c>
   1cbc0:	str	r0, [fp, #-84]	; 0xffffffac
   1cbc4:	b	1d6ec <_start@@Base+0x90cc>
   1cbc8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cbcc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cbd0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cbd4:	bl	14cb8 <_start@@Base+0x698>
   1cbd8:	str	r0, [fp, #-84]	; 0xffffffac
   1cbdc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1cbe0:	ldr	r0, [fp, #-84]	; 0xffffffac
   1cbe4:	bl	14f70 <_start@@Base+0x950>
   1cbe8:	strd	r0, [fp, #-12]
   1cbec:	ldrd	r2, [fp, #-12]
   1cbf0:	add	r1, pc, #928	; 0x3a0
   1cbf4:	ldrd	r0, [r1]
   1cbf8:	cmp	r3, r1
   1cbfc:	cmpeq	r2, r0
   1cc00:	bhi	1d0a0 <_start@@Base+0x8a80>
   1cc04:	ldrd	r2, [fp, #-12]
   1cc08:	add	r1, pc, #912	; 0x390
   1cc0c:	ldrd	r0, [r1]
   1cc10:	cmp	r3, r1
   1cc14:	cmpeq	r2, r0
   1cc18:	bne	1cd98 <_start@@Base+0x8778>
   1cc1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cc20:	add	r3, r3, #8
   1cc24:	str	r3, [fp, #-84]	; 0xffffffac
   1cc28:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1cc2c:	ldr	r0, [fp, #-84]	; 0xffffffac
   1cc30:	bl	14f70 <_start@@Base+0x950>
   1cc34:	strd	r0, [fp, #-12]
   1cc38:	ldrd	r2, [fp, #-12]
   1cc3c:	mov	r0, #0
   1cc40:	mov	r1, #-16777216	; 0xff000000
   1cc44:	and	r2, r2, r0
   1cc48:	and	r3, r3, r1
   1cc4c:	cmp	r3, #889192448	; 0x35000000
   1cc50:	cmpeq	r2, #0
   1cc54:	bne	1cd80 <_start@@Base+0x8760>
   1cc58:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cc5c:	str	r3, [fp, #-16]
   1cc60:	mov	r3, #1
   1cc64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cc68:	ldr	r1, [fp, #-16]
   1cc6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cc70:	bl	1552c <_start@@Base+0xf0c>
   1cc74:	str	r0, [fp, #-84]	; 0xffffffac
   1cc78:	ldr	r2, [fp, #-16]
   1cc7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cc80:	cmp	r2, r3
   1cc84:	beq	1cd68 <_start@@Base+0x8748>
   1cc88:	mov	r3, #0
   1cc8c:	str	r3, [fp, #-36]	; 0xffffffdc
   1cc90:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cc94:	str	r3, [fp, #-16]
   1cc98:	sub	r3, fp, #36	; 0x24
   1cc9c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cca0:	ldr	r1, [fp, #-16]
   1cca4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cca8:	bl	15dc0 <_start@@Base+0x17a0>
   1ccac:	str	r0, [fp, #-84]	; 0xffffffac
   1ccb0:	ldr	r2, [fp, #-16]
   1ccb4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ccb8:	cmp	r2, r3
   1ccbc:	bne	1cd0c <_start@@Base+0x86ec>
   1ccc0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ccc4:	str	r3, [fp, #-16]
   1ccc8:	sub	r3, fp, #36	; 0x24
   1cccc:	str	r3, [sp]
   1ccd0:	ldr	r3, [pc, #736]	; 1cfb8 <_start@@Base+0x8998>
   1ccd4:	add	r3, pc, r3
   1ccd8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ccdc:	ldr	r1, [fp, #-16]
   1cce0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cce4:	bl	16618 <_start@@Base+0x1ff8>
   1cce8:	str	r0, [fp, #-84]	; 0xffffffac
   1ccec:	ldr	r2, [fp, #-84]	; 0xffffffac
   1ccf0:	ldr	r3, [fp, #-16]
   1ccf4:	cmp	r2, r3
   1ccf8:	beq	1d79c <_start@@Base+0x917c>
   1ccfc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1cd00:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cd04:	cmp	r2, r3
   1cd08:	beq	1d79c <_start@@Base+0x917c>
   1cd0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cd10:	cmp	r3, #0
   1cd14:	bne	1cd2c <_start@@Base+0x870c>
   1cd18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cd1c:	ldr	r3, [r3, #8]
   1cd20:	and	r3, r3, #2
   1cd24:	cmp	r3, #0
   1cd28:	beq	1d6d4 <_start@@Base+0x90b4>
   1cd2c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cd30:	ldr	r0, [r3]
   1cd34:	mov	r3, #4
   1cd38:	mov	r2, #4
   1cd3c:	mov	r1, #1
   1cd40:	bl	31134 <flatcc_builder_table_add@@Base>
   1cd44:	str	r0, [fp, #-20]	; 0xffffffec
   1cd48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cd4c:	cmp	r3, #0
   1cd50:	beq	1d744 <_start@@Base+0x9124>
   1cd54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cd58:	mov	r1, r3
   1cd5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cd60:	bl	1483c <_start@@Base+0x21c>
   1cd64:	b	1d6d4 <_start@@Base+0x90b4>
   1cd68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cd6c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cd70:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cd74:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1cd78:	str	r0, [fp, #-84]	; 0xffffffac
   1cd7c:	b	1d6d4 <_start@@Base+0x90b4>
   1cd80:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cd84:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cd88:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cd8c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1cd90:	str	r0, [fp, #-84]	; 0xffffffac
   1cd94:	b	1d6d4 <_start@@Base+0x90b4>
   1cd98:	ldrd	r2, [fp, #-12]
   1cd9c:	mov	r0, #0
   1cda0:	mvn	r1, #0
   1cda4:	and	r2, r2, r0
   1cda8:	and	r3, r3, r1
   1cdac:	add	r1, pc, #500	; 0x1f4
   1cdb0:	ldrd	r0, [r1]
   1cdb4:	cmp	r3, r1
   1cdb8:	cmpeq	r2, r0
   1cdbc:	bne	1ce48 <_start@@Base+0x8828>
   1cdc0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cdc4:	str	r3, [fp, #-16]
   1cdc8:	mov	r3, #4
   1cdcc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cdd0:	ldr	r1, [fp, #-16]
   1cdd4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cdd8:	bl	1552c <_start@@Base+0xf0c>
   1cddc:	str	r0, [fp, #-84]	; 0xffffffac
   1cde0:	ldr	r2, [fp, #-16]
   1cde4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cde8:	cmp	r2, r3
   1cdec:	beq	1ce50 <_start@@Base+0x8830>
   1cdf0:	sub	r3, fp, #32
   1cdf4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cdf8:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cdfc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ce00:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   1ce04:	str	r0, [fp, #-84]	; 0xffffffac
   1ce08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ce0c:	cmp	r3, #0
   1ce10:	beq	1d79c <_start@@Base+0x917c>
   1ce14:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1ce18:	ldr	r3, [r3]
   1ce1c:	mov	r1, #0
   1ce20:	mov	r0, r3
   1ce24:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1ce28:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce30:	cmp	r3, #0
   1ce34:	beq	1d79c <_start@@Base+0x917c>
   1ce38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ce3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ce40:	str	r2, [r3]
   1ce44:	b	1d6d4 <_start@@Base+0x90b4>
   1ce48:	nop			; (mov r0, r0)
   1ce4c:	b	1ce54 <_start@@Base+0x8834>
   1ce50:	nop			; (mov r0, r0)
   1ce54:	ldrd	r2, [fp, #-12]
   1ce58:	add	r1, pc, #336	; 0x150
   1ce5c:	ldrd	r0, [r1]
   1ce60:	cmp	r3, r1
   1ce64:	cmpeq	r2, r0
   1ce68:	bne	1cfc0 <_start@@Base+0x89a0>
   1ce6c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ce70:	str	r3, [fp, #-16]
   1ce74:	mov	r3, #8
   1ce78:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ce7c:	ldr	r1, [fp, #-16]
   1ce80:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1ce84:	bl	1552c <_start@@Base+0xf0c>
   1ce88:	str	r0, [fp, #-84]	; 0xffffffac
   1ce8c:	ldr	r2, [fp, #-16]
   1ce90:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ce94:	cmp	r2, r3
   1ce98:	beq	1cf7c <_start@@Base+0x895c>
   1ce9c:	mov	r2, #0
   1cea0:	mov	r3, #0
   1cea4:	strd	r2, [fp, #-44]	; 0xffffffd4
   1cea8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ceac:	str	r3, [fp, #-16]
   1ceb0:	sub	r3, fp, #44	; 0x2c
   1ceb4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1ceb8:	ldr	r1, [fp, #-16]
   1cebc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cec0:	bl	16030 <_start@@Base+0x1a10>
   1cec4:	str	r0, [fp, #-84]	; 0xffffffac
   1cec8:	ldr	r2, [fp, #-16]
   1cecc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ced0:	cmp	r2, r3
   1ced4:	bne	1cf24 <_start@@Base+0x8904>
   1ced8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cedc:	str	r3, [fp, #-16]
   1cee0:	sub	r3, fp, #44	; 0x2c
   1cee4:	str	r3, [sp]
   1cee8:	ldr	r3, [pc, #204]	; 1cfbc <_start@@Base+0x899c>
   1ceec:	add	r3, pc, r3
   1cef0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cef4:	ldr	r1, [fp, #-16]
   1cef8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cefc:	bl	16aac <_start@@Base+0x248c>
   1cf00:	str	r0, [fp, #-84]	; 0xffffffac
   1cf04:	ldr	r2, [fp, #-84]	; 0xffffffac
   1cf08:	ldr	r3, [fp, #-16]
   1cf0c:	cmp	r2, r3
   1cf10:	beq	1d79c <_start@@Base+0x917c>
   1cf14:	ldr	r2, [fp, #-84]	; 0xffffffac
   1cf18:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1cf1c:	cmp	r2, r3
   1cf20:	beq	1d79c <_start@@Base+0x917c>
   1cf24:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1cf28:	orrs	r3, r2, r3
   1cf2c:	bne	1cf44 <_start@@Base+0x8924>
   1cf30:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cf34:	ldr	r3, [r3, #8]
   1cf38:	and	r3, r3, #2
   1cf3c:	cmp	r3, #0
   1cf40:	beq	1d6d4 <_start@@Base+0x90b4>
   1cf44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1cf48:	ldr	r0, [r3]
   1cf4c:	mov	r3, #8
   1cf50:	mov	r2, #8
   1cf54:	mov	r1, #3
   1cf58:	bl	31134 <flatcc_builder_table_add@@Base>
   1cf5c:	str	r0, [fp, #-20]	; 0xffffffec
   1cf60:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf64:	cmp	r3, #0
   1cf68:	beq	1d768 <_start@@Base+0x9148>
   1cf6c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   1cf70:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cf74:	bl	14a20 <_start@@Base+0x400>
   1cf78:	b	1d6d4 <_start@@Base+0x90b4>
   1cf7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cf80:	ldr	r1, [fp, #-84]	; 0xffffffac
   1cf84:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1cf88:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1cf8c:	str	r0, [fp, #-84]	; 0xffffffac
   1cf90:	b	1d6d4 <_start@@Base+0x90b4>
   1cf94:	nop			; (mov r0, r0)
   1cf98:			; <UNDEFINED> instruction: 0xffffffff
   1cf9c:	cmnvs	r3, #-2013265919	; 0x88000001
   1cfa0:	teqcc	r2, r4, lsr r3
   1cfa4:	cmnvs	r1, r1, ror #2
   1cfa8:	andeq	r0, r0, r0
   1cfac:	cmnvs	r1, r1, ror #2
   1cfb0:	teqcc	r2, r4, lsr r3
   1cfb4:	rsbvs	r6, r2, #536870918	; 0x20000006
   1cfb8:	andeq	r5, r4, ip, asr #9
   1cfbc:	andeq	r5, r4, r0, asr #5
   1cfc0:	ldrd	r2, [fp, #-12]
   1cfc4:	mov	r0, #0
   1cfc8:	mvn	r1, #0
   1cfcc:	and	r2, r2, r0
   1cfd0:	and	r3, r3, r1
   1cfd4:	add	r1, pc, #876	; 0x36c
   1cfd8:	ldrd	r0, [r1]
   1cfdc:	cmp	r3, r1
   1cfe0:	cmpeq	r2, r0
   1cfe4:	bne	1d088 <_start@@Base+0x8a68>
   1cfe8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1cfec:	str	r3, [fp, #-16]
   1cff0:	mov	r3, #4
   1cff4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1cff8:	ldr	r1, [fp, #-16]
   1cffc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d000:	bl	1552c <_start@@Base+0xf0c>
   1d004:	str	r0, [fp, #-84]	; 0xffffffac
   1d008:	ldr	r2, [fp, #-16]
   1d00c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d010:	cmp	r2, r3
   1d014:	beq	1d070 <_start@@Base+0x8a50>
   1d018:	sub	r3, fp, #32
   1d01c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d020:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d024:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d028:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   1d02c:	str	r0, [fp, #-84]	; 0xffffffac
   1d030:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d034:	cmp	r3, #0
   1d038:	beq	1d79c <_start@@Base+0x917c>
   1d03c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d040:	ldr	r3, [r3]
   1d044:	mov	r1, #2
   1d048:	mov	r0, r3
   1d04c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1d050:	str	r0, [fp, #-24]	; 0xffffffe8
   1d054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d058:	cmp	r3, #0
   1d05c:	beq	1d79c <_start@@Base+0x917c>
   1d060:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d068:	str	r2, [r3]
   1d06c:	b	1d6d4 <_start@@Base+0x90b4>
   1d070:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d074:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d078:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d07c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d080:	str	r0, [fp, #-84]	; 0xffffffac
   1d084:	b	1d6d4 <_start@@Base+0x90b4>
   1d088:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d08c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d090:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d094:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d098:	str	r0, [fp, #-84]	; 0xffffffac
   1d09c:	b	1d6d4 <_start@@Base+0x90b4>
   1d0a0:	ldrd	r2, [fp, #-12]
   1d0a4:	add	r1, pc, #676	; 0x2a4
   1d0a8:	ldrd	r0, [r1]
   1d0ac:	cmp	r3, r1
   1d0b0:	cmpeq	r2, r0
   1d0b4:	bne	1d360 <_start@@Base+0x8d40>
   1d0b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d0bc:	str	r3, [fp, #-16]
   1d0c0:	mov	r3, #8
   1d0c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d0c8:	ldr	r1, [fp, #-16]
   1d0cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d0d0:	bl	1552c <_start@@Base+0xf0c>
   1d0d4:	str	r0, [fp, #-84]	; 0xffffffac
   1d0d8:	ldr	r2, [fp, #-16]
   1d0dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d0e0:	cmp	r2, r3
   1d0e4:	beq	1d1c8 <_start@@Base+0x8ba8>
   1d0e8:	mov	r2, #0
   1d0ec:	mov	r3, #0
   1d0f0:	strd	r2, [fp, #-52]	; 0xffffffcc
   1d0f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d0f8:	str	r3, [fp, #-16]
   1d0fc:	sub	r3, fp, #52	; 0x34
   1d100:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d104:	ldr	r1, [fp, #-16]
   1d108:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d10c:	bl	16030 <_start@@Base+0x1a10>
   1d110:	str	r0, [fp, #-84]	; 0xffffffac
   1d114:	ldr	r2, [fp, #-16]
   1d118:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d11c:	cmp	r2, r3
   1d120:	bne	1d170 <_start@@Base+0x8b50>
   1d124:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d128:	str	r3, [fp, #-16]
   1d12c:	sub	r3, fp, #52	; 0x34
   1d130:	str	r3, [sp]
   1d134:	ldr	r3, [pc, #540]	; 1d358 <_start@@Base+0x8d38>
   1d138:	add	r3, pc, r3
   1d13c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d140:	ldr	r1, [fp, #-16]
   1d144:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d148:	bl	16aac <_start@@Base+0x248c>
   1d14c:	str	r0, [fp, #-84]	; 0xffffffac
   1d150:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d154:	ldr	r3, [fp, #-16]
   1d158:	cmp	r2, r3
   1d15c:	beq	1d79c <_start@@Base+0x917c>
   1d160:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d164:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d168:	cmp	r2, r3
   1d16c:	beq	1d79c <_start@@Base+0x917c>
   1d170:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1d174:	orrs	r3, r2, r3
   1d178:	bne	1d190 <_start@@Base+0x8b70>
   1d17c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d180:	ldr	r3, [r3, #8]
   1d184:	and	r3, r3, #2
   1d188:	cmp	r3, #0
   1d18c:	beq	1d6d4 <_start@@Base+0x90b4>
   1d190:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d194:	ldr	r0, [r3]
   1d198:	mov	r3, #8
   1d19c:	mov	r2, #8
   1d1a0:	mov	r1, #5
   1d1a4:	bl	31134 <flatcc_builder_table_add@@Base>
   1d1a8:	str	r0, [fp, #-20]	; 0xffffffec
   1d1ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d1b0:	cmp	r3, #0
   1d1b4:	beq	1d770 <_start@@Base+0x9150>
   1d1b8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   1d1bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d1c0:	bl	14a20 <_start@@Base+0x400>
   1d1c4:	b	1d6d4 <_start@@Base+0x90b4>
   1d1c8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d1cc:	add	r3, r3, #8
   1d1d0:	str	r3, [fp, #-84]	; 0xffffffac
   1d1d4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1d1d8:	ldr	r0, [fp, #-84]	; 0xffffffac
   1d1dc:	bl	14f70 <_start@@Base+0x950>
   1d1e0:	strd	r0, [fp, #-12]
   1d1e4:	ldrd	r2, [fp, #-12]
   1d1e8:	mov	r0, #0
   1d1ec:	mov	r1, #-16777216	; 0xff000000
   1d1f0:	and	r2, r2, r0
   1d1f4:	and	r3, r3, r1
   1d1f8:	cmp	r3, #889192448	; 0x35000000
   1d1fc:	cmpeq	r2, #0
   1d200:	bne	1d32c <_start@@Base+0x8d0c>
   1d204:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d208:	str	r3, [fp, #-16]
   1d20c:	mov	r3, #1
   1d210:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d214:	ldr	r1, [fp, #-16]
   1d218:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d21c:	bl	1552c <_start@@Base+0xf0c>
   1d220:	str	r0, [fp, #-84]	; 0xffffffac
   1d224:	ldr	r2, [fp, #-16]
   1d228:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d22c:	cmp	r2, r3
   1d230:	beq	1d314 <_start@@Base+0x8cf4>
   1d234:	mov	r3, #0
   1d238:	str	r3, [fp, #-56]	; 0xffffffc8
   1d23c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d240:	str	r3, [fp, #-16]
   1d244:	sub	r3, fp, #56	; 0x38
   1d248:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d24c:	ldr	r1, [fp, #-16]
   1d250:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d254:	bl	15dc0 <_start@@Base+0x17a0>
   1d258:	str	r0, [fp, #-84]	; 0xffffffac
   1d25c:	ldr	r2, [fp, #-16]
   1d260:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d264:	cmp	r2, r3
   1d268:	bne	1d2b8 <_start@@Base+0x8c98>
   1d26c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d270:	str	r3, [fp, #-16]
   1d274:	sub	r3, fp, #56	; 0x38
   1d278:	str	r3, [sp]
   1d27c:	ldr	r3, [pc, #216]	; 1d35c <_start@@Base+0x8d3c>
   1d280:	add	r3, pc, r3
   1d284:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d288:	ldr	r1, [fp, #-16]
   1d28c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d290:	bl	16618 <_start@@Base+0x1ff8>
   1d294:	str	r0, [fp, #-84]	; 0xffffffac
   1d298:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d29c:	ldr	r3, [fp, #-16]
   1d2a0:	cmp	r2, r3
   1d2a4:	beq	1d79c <_start@@Base+0x917c>
   1d2a8:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d2ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d2b0:	cmp	r2, r3
   1d2b4:	beq	1d79c <_start@@Base+0x917c>
   1d2b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d2bc:	cmp	r3, #0
   1d2c0:	bne	1d2d8 <_start@@Base+0x8cb8>
   1d2c4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d2c8:	ldr	r3, [r3, #8]
   1d2cc:	and	r3, r3, #2
   1d2d0:	cmp	r3, #0
   1d2d4:	beq	1d6d4 <_start@@Base+0x90b4>
   1d2d8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d2dc:	ldr	r0, [r3]
   1d2e0:	mov	r3, #4
   1d2e4:	mov	r2, #4
   1d2e8:	mov	r1, #6
   1d2ec:	bl	31134 <flatcc_builder_table_add@@Base>
   1d2f0:	str	r0, [fp, #-20]	; 0xffffffec
   1d2f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d2f8:	cmp	r3, #0
   1d2fc:	beq	1d778 <_start@@Base+0x9158>
   1d300:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d304:	mov	r1, r3
   1d308:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d30c:	bl	1483c <_start@@Base+0x21c>
   1d310:	b	1d6d4 <_start@@Base+0x90b4>
   1d314:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d318:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d31c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d320:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d324:	str	r0, [fp, #-84]	; 0xffffffac
   1d328:	b	1d6d4 <_start@@Base+0x90b4>
   1d32c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d330:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d334:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d338:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d33c:	str	r0, [fp, #-84]	; 0xffffffac
   1d340:	b	1d6d4 <_start@@Base+0x90b4>
   1d344:	nop			; (mov r0, r0)
   1d348:	andeq	r0, r0, r0
   1d34c:	rsbvs	r6, r2, #536870918	; 0x20000006
   1d350:	teqcc	r2, r4, lsr r3
   1d354:	cmnvs	r3, #-1946157055	; 0x8c000001
   1d358:	andeq	r5, r4, r0, lsl #1
   1d35c:	andeq	r4, r4, r4, asr #30
   1d360:	ldrd	r2, [fp, #-12]
   1d364:	mov	r0, #0
   1d368:	mvn	r1, #0
   1d36c:	and	r2, r2, r0
   1d370:	and	r3, r3, r1
   1d374:	add	r1, pc, #980	; 0x3d4
   1d378:	ldrd	r0, [r1]
   1d37c:	cmp	r3, r1
   1d380:	cmpeq	r2, r0
   1d384:	bne	1d410 <_start@@Base+0x8df0>
   1d388:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d38c:	str	r3, [fp, #-16]
   1d390:	mov	r3, #4
   1d394:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d398:	ldr	r1, [fp, #-16]
   1d39c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d3a0:	bl	1552c <_start@@Base+0xf0c>
   1d3a4:	str	r0, [fp, #-84]	; 0xffffffac
   1d3a8:	ldr	r2, [fp, #-16]
   1d3ac:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d3b0:	cmp	r2, r3
   1d3b4:	beq	1d418 <_start@@Base+0x8df8>
   1d3b8:	sub	r3, fp, #32
   1d3bc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d3c0:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d3c4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d3c8:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   1d3cc:	str	r0, [fp, #-84]	; 0xffffffac
   1d3d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3d4:	cmp	r3, #0
   1d3d8:	beq	1d79c <_start@@Base+0x917c>
   1d3dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d3e0:	ldr	r3, [r3]
   1d3e4:	mov	r1, #4
   1d3e8:	mov	r0, r3
   1d3ec:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1d3f0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d3f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d3f8:	cmp	r3, #0
   1d3fc:	beq	1d79c <_start@@Base+0x917c>
   1d400:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1d408:	str	r2, [r3]
   1d40c:	b	1d6d4 <_start@@Base+0x90b4>
   1d410:	nop			; (mov r0, r0)
   1d414:	b	1d41c <_start@@Base+0x8dfc>
   1d418:	nop			; (mov r0, r0)
   1d41c:	ldrd	r2, [fp, #-12]
   1d420:	add	r1, pc, #816	; 0x330
   1d424:	ldrd	r0, [r1]
   1d428:	cmp	r3, r1
   1d42c:	cmpeq	r2, r0
   1d430:	bne	1d6c0 <_start@@Base+0x90a0>
   1d434:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d438:	str	r3, [fp, #-16]
   1d43c:	mov	r3, #8
   1d440:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d444:	ldr	r1, [fp, #-16]
   1d448:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d44c:	bl	1552c <_start@@Base+0xf0c>
   1d450:	str	r0, [fp, #-84]	; 0xffffffac
   1d454:	ldr	r2, [fp, #-16]
   1d458:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d45c:	cmp	r2, r3
   1d460:	beq	1d544 <_start@@Base+0x8f24>
   1d464:	mov	r2, #0
   1d468:	mov	r3, #0
   1d46c:	strd	r2, [fp, #-68]	; 0xffffffbc
   1d470:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d474:	str	r3, [fp, #-16]
   1d478:	sub	r3, fp, #68	; 0x44
   1d47c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d480:	ldr	r1, [fp, #-16]
   1d484:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d488:	bl	16030 <_start@@Base+0x1a10>
   1d48c:	str	r0, [fp, #-84]	; 0xffffffac
   1d490:	ldr	r2, [fp, #-16]
   1d494:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d498:	cmp	r2, r3
   1d49c:	bne	1d4ec <_start@@Base+0x8ecc>
   1d4a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d4a4:	str	r3, [fp, #-16]
   1d4a8:	sub	r3, fp, #68	; 0x44
   1d4ac:	str	r3, [sp]
   1d4b0:	ldr	r3, [pc, #680]	; 1d760 <_start@@Base+0x9140>
   1d4b4:	add	r3, pc, r3
   1d4b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d4bc:	ldr	r1, [fp, #-16]
   1d4c0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d4c4:	bl	16aac <_start@@Base+0x248c>
   1d4c8:	str	r0, [fp, #-84]	; 0xffffffac
   1d4cc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d4d0:	ldr	r3, [fp, #-16]
   1d4d4:	cmp	r2, r3
   1d4d8:	beq	1d79c <_start@@Base+0x917c>
   1d4dc:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d4e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d4e4:	cmp	r2, r3
   1d4e8:	beq	1d79c <_start@@Base+0x917c>
   1d4ec:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1d4f0:	orrs	r3, r2, r3
   1d4f4:	bne	1d50c <_start@@Base+0x8eec>
   1d4f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d4fc:	ldr	r3, [r3, #8]
   1d500:	and	r3, r3, #2
   1d504:	cmp	r3, #0
   1d508:	beq	1d6d4 <_start@@Base+0x90b4>
   1d50c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d510:	ldr	r0, [r3]
   1d514:	mov	r3, #8
   1d518:	mov	r2, #8
   1d51c:	mov	r1, #7
   1d520:	bl	31134 <flatcc_builder_table_add@@Base>
   1d524:	str	r0, [fp, #-20]	; 0xffffffec
   1d528:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d52c:	cmp	r3, #0
   1d530:	beq	1d780 <_start@@Base+0x9160>
   1d534:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   1d538:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d53c:	bl	14a20 <_start@@Base+0x400>
   1d540:	b	1d6d4 <_start@@Base+0x90b4>
   1d544:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d548:	add	r3, r3, #8
   1d54c:	str	r3, [fp, #-84]	; 0xffffffac
   1d550:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1d554:	ldr	r0, [fp, #-84]	; 0xffffffac
   1d558:	bl	14f70 <_start@@Base+0x950>
   1d55c:	strd	r0, [fp, #-12]
   1d560:	ldrd	r2, [fp, #-12]
   1d564:	mov	r0, #0
   1d568:	mov	r1, #-16777216	; 0xff000000
   1d56c:	and	r2, r2, r0
   1d570:	and	r3, r3, r1
   1d574:	cmp	r3, #889192448	; 0x35000000
   1d578:	cmpeq	r2, #0
   1d57c:	bne	1d6a8 <_start@@Base+0x9088>
   1d580:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d584:	str	r3, [fp, #-16]
   1d588:	mov	r3, #1
   1d58c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d590:	ldr	r1, [fp, #-16]
   1d594:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d598:	bl	1552c <_start@@Base+0xf0c>
   1d59c:	str	r0, [fp, #-84]	; 0xffffffac
   1d5a0:	ldr	r2, [fp, #-16]
   1d5a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d5a8:	cmp	r2, r3
   1d5ac:	beq	1d690 <_start@@Base+0x9070>
   1d5b0:	mov	r3, #0
   1d5b4:	str	r3, [fp, #-72]	; 0xffffffb8
   1d5b8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d5bc:	str	r3, [fp, #-16]
   1d5c0:	sub	r3, fp, #72	; 0x48
   1d5c4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d5c8:	ldr	r1, [fp, #-16]
   1d5cc:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d5d0:	bl	15dc0 <_start@@Base+0x17a0>
   1d5d4:	str	r0, [fp, #-84]	; 0xffffffac
   1d5d8:	ldr	r2, [fp, #-16]
   1d5dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d5e0:	cmp	r2, r3
   1d5e4:	bne	1d634 <_start@@Base+0x9014>
   1d5e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d5ec:	str	r3, [fp, #-16]
   1d5f0:	sub	r3, fp, #72	; 0x48
   1d5f4:	str	r3, [sp]
   1d5f8:	ldr	r3, [pc, #356]	; 1d764 <_start@@Base+0x9144>
   1d5fc:	add	r3, pc, r3
   1d600:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d604:	ldr	r1, [fp, #-16]
   1d608:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d60c:	bl	16618 <_start@@Base+0x1ff8>
   1d610:	str	r0, [fp, #-84]	; 0xffffffac
   1d614:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d618:	ldr	r3, [fp, #-16]
   1d61c:	cmp	r2, r3
   1d620:	beq	1d79c <_start@@Base+0x917c>
   1d624:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d628:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1d62c:	cmp	r2, r3
   1d630:	beq	1d79c <_start@@Base+0x917c>
   1d634:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d638:	cmp	r3, #0
   1d63c:	bne	1d654 <_start@@Base+0x9034>
   1d640:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d644:	ldr	r3, [r3, #8]
   1d648:	and	r3, r3, #2
   1d64c:	cmp	r3, #0
   1d650:	beq	1d6d4 <_start@@Base+0x90b4>
   1d654:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d658:	ldr	r0, [r3]
   1d65c:	mov	r3, #4
   1d660:	mov	r2, #4
   1d664:	mov	r1, #8
   1d668:	bl	31134 <flatcc_builder_table_add@@Base>
   1d66c:	str	r0, [fp, #-20]	; 0xffffffec
   1d670:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d674:	cmp	r3, #0
   1d678:	beq	1d788 <_start@@Base+0x9168>
   1d67c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1d680:	mov	r1, r3
   1d684:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d688:	bl	1483c <_start@@Base+0x21c>
   1d68c:	b	1d6d4 <_start@@Base+0x90b4>
   1d690:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d694:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d698:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d69c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d6a0:	str	r0, [fp, #-84]	; 0xffffffac
   1d6a4:	b	1d6d4 <_start@@Base+0x90b4>
   1d6a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d6ac:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d6b0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d6b4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d6b8:	str	r0, [fp, #-84]	; 0xffffffac
   1d6bc:	b	1d6d4 <_start@@Base+0x90b4>
   1d6c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d6c4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d6c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d6cc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d6d0:	str	r0, [fp, #-84]	; 0xffffffac
   1d6d4:	sub	r3, fp, #28
   1d6d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d6dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d6e0:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d6e4:	bl	15174 <_start@@Base+0xb54>
   1d6e8:	str	r0, [fp, #-84]	; 0xffffffac
   1d6ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d6f0:	cmp	r3, #0
   1d6f4:	bne	1cbc8 <_start@@Base+0x85a8>
   1d6f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d6fc:	ldr	r3, [r3, #20]
   1d700:	cmp	r3, #0
   1d704:	bne	1d790 <_start@@Base+0x9170>
   1d708:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1d70c:	ldr	r3, [r3]
   1d710:	mov	r0, r3
   1d714:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1d718:	mov	r2, r0
   1d71c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1d720:	str	r2, [r3]
   1d724:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1d728:	ldr	r3, [r3]
   1d72c:	cmp	r3, #0
   1d730:	beq	1d798 <_start@@Base+0x9178>
   1d734:	ldr	r3, [fp, #-84]	; 0xffffffac
   1d738:	b	1d7b4 <_start@@Base+0x9194>
   1d73c:	nop			; (mov r0, r0)
   1d740:	b	1d79c <_start@@Base+0x917c>
   1d744:	nop			; (mov r0, r0)
   1d748:	b	1d79c <_start@@Base+0x917c>
   1d74c:	nop			; (mov r0, r0)
   1d750:	andeq	r0, r0, r0
   1d754:	cmnvs	r3, #-1946157055	; 0x8c000001
   1d758:	teqcc	r2, r4, lsr r3
   1d75c:	strbtvs	r6, [r4], #-1124	; 0xfffffb9c
   1d760:	andeq	r4, r4, ip, lsl sp
   1d764:	andeq	r4, r4, r0, ror #23
   1d768:	nop			; (mov r0, r0)
   1d76c:	b	1d79c <_start@@Base+0x917c>
   1d770:	nop			; (mov r0, r0)
   1d774:	b	1d79c <_start@@Base+0x917c>
   1d778:	nop			; (mov r0, r0)
   1d77c:	b	1d79c <_start@@Base+0x917c>
   1d780:	nop			; (mov r0, r0)
   1d784:	b	1d79c <_start@@Base+0x917c>
   1d788:	nop			; (mov r0, r0)
   1d78c:	b	1d79c <_start@@Base+0x917c>
   1d790:	nop			; (mov r0, r0)
   1d794:	b	1d79c <_start@@Base+0x917c>
   1d798:	nop			; (mov r0, r0)
   1d79c:	mov	r3, #33	; 0x21
   1d7a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d7a4:	ldr	r1, [fp, #-84]	; 0xffffffac
   1d7a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d7ac:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1d7b0:	mov	r3, r0
   1d7b4:	mov	r0, r3
   1d7b8:	sub	sp, fp, #4
   1d7bc:	pop	{fp, pc}
   1d7c0:	push	{fp, lr}
   1d7c4:	add	fp, sp, #4
   1d7c8:	sub	sp, sp, #64	; 0x40
   1d7cc:	str	r0, [fp, #-48]	; 0xffffffd0
   1d7d0:	str	r1, [fp, #-52]	; 0xffffffcc
   1d7d4:	str	r2, [fp, #-56]	; 0xffffffc8
   1d7d8:	str	r3, [fp, #-60]	; 0xffffffc4
   1d7dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d7e0:	mov	r2, #0
   1d7e4:	str	r2, [r3]
   1d7e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d7ec:	ldr	r3, [r3]
   1d7f0:	mov	r1, #2
   1d7f4:	mov	r0, r3
   1d7f8:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1d7fc:	mov	r3, r0
   1d800:	cmp	r3, #0
   1d804:	bne	1dba0 <_start@@Base+0x9580>
   1d808:	sub	r3, fp, #24
   1d80c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d810:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d814:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d818:	bl	1508c <_start@@Base+0xa6c>
   1d81c:	str	r0, [fp, #-52]	; 0xffffffcc
   1d820:	b	1db50 <_start@@Base+0x9530>
   1d824:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d828:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d82c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d830:	bl	14cb8 <_start@@Base+0x698>
   1d834:	str	r0, [fp, #-52]	; 0xffffffcc
   1d838:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d83c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d840:	bl	14f70 <_start@@Base+0x950>
   1d844:	strd	r0, [fp, #-12]
   1d848:	ldrd	r2, [fp, #-12]
   1d84c:	add	r1, pc, #916	; 0x394
   1d850:	ldrd	r0, [r1]
   1d854:	cmp	r3, r1
   1d858:	cmpeq	r2, r0
   1d85c:	bne	1db24 <_start@@Base+0x9504>
   1d860:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d864:	add	r3, r3, #8
   1d868:	str	r3, [fp, #-52]	; 0xffffffcc
   1d86c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d870:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d874:	bl	14f70 <_start@@Base+0x950>
   1d878:	strd	r0, [fp, #-12]
   1d87c:	ldrd	r2, [fp, #-12]
   1d880:	mvn	r0, #255	; 0xff
   1d884:	mvn	r1, #0
   1d888:	and	r2, r2, r0
   1d88c:	and	r3, r3, r1
   1d890:	add	r1, pc, #856	; 0x358
   1d894:	ldrd	r0, [r1]
   1d898:	cmp	r3, r1
   1d89c:	cmpeq	r2, r0
   1d8a0:	bne	1d9cc <_start@@Base+0x93ac>
   1d8a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d8a8:	str	r3, [fp, #-16]
   1d8ac:	mov	r3, #7
   1d8b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d8b4:	ldr	r1, [fp, #-16]
   1d8b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d8bc:	bl	1552c <_start@@Base+0xf0c>
   1d8c0:	str	r0, [fp, #-52]	; 0xffffffcc
   1d8c4:	ldr	r2, [fp, #-16]
   1d8c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d8cc:	cmp	r2, r3
   1d8d0:	beq	1d9b4 <_start@@Base+0x9394>
   1d8d4:	mov	r2, #0
   1d8d8:	mov	r3, #0
   1d8dc:	strd	r2, [fp, #-36]	; 0xffffffdc
   1d8e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d8e4:	str	r3, [fp, #-16]
   1d8e8:	sub	r3, fp, #36	; 0x24
   1d8ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d8f0:	ldr	r1, [fp, #-16]
   1d8f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d8f8:	bl	16030 <_start@@Base+0x1a10>
   1d8fc:	str	r0, [fp, #-52]	; 0xffffffcc
   1d900:	ldr	r2, [fp, #-16]
   1d904:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d908:	cmp	r2, r3
   1d90c:	bne	1d95c <_start@@Base+0x933c>
   1d910:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d914:	str	r3, [fp, #-16]
   1d918:	sub	r3, fp, #36	; 0x24
   1d91c:	str	r3, [sp]
   1d920:	ldr	r3, [pc, #728]	; 1dc00 <_start@@Base+0x95e0>
   1d924:	add	r3, pc, r3
   1d928:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d92c:	ldr	r1, [fp, #-16]
   1d930:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d934:	bl	16aac <_start@@Base+0x248c>
   1d938:	str	r0, [fp, #-52]	; 0xffffffcc
   1d93c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d940:	ldr	r3, [fp, #-16]
   1d944:	cmp	r2, r3
   1d948:	beq	1dbc4 <_start@@Base+0x95a4>
   1d94c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1d950:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d954:	cmp	r2, r3
   1d958:	beq	1dbc4 <_start@@Base+0x95a4>
   1d95c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d960:	orrs	r3, r2, r3
   1d964:	bne	1d97c <_start@@Base+0x935c>
   1d968:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d96c:	ldr	r3, [r3, #8]
   1d970:	and	r3, r3, #2
   1d974:	cmp	r3, #0
   1d978:	beq	1db38 <_start@@Base+0x9518>
   1d97c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1d980:	ldr	r0, [r3]
   1d984:	mov	r3, #8
   1d988:	mov	r2, #8
   1d98c:	mov	r1, #0
   1d990:	bl	31134 <flatcc_builder_table_add@@Base>
   1d994:	str	r0, [fp, #-20]	; 0xffffffec
   1d998:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d99c:	cmp	r3, #0
   1d9a0:	beq	1dba8 <_start@@Base+0x9588>
   1d9a4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1d9a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d9ac:	bl	14a20 <_start@@Base+0x400>
   1d9b0:	b	1db38 <_start@@Base+0x9518>
   1d9b4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d9b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1d9bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d9c0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1d9c4:	str	r0, [fp, #-52]	; 0xffffffcc
   1d9c8:	b	1db38 <_start@@Base+0x9518>
   1d9cc:	ldrd	r2, [fp, #-12]
   1d9d0:	add	r1, pc, #544	; 0x220
   1d9d4:	ldrd	r0, [r1]
   1d9d8:	cmp	r3, r1
   1d9dc:	cmpeq	r2, r0
   1d9e0:	bne	1db0c <_start@@Base+0x94ec>
   1d9e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1d9e8:	str	r3, [fp, #-16]
   1d9ec:	mov	r3, #8
   1d9f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1d9f4:	ldr	r1, [fp, #-16]
   1d9f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1d9fc:	bl	1552c <_start@@Base+0xf0c>
   1da00:	str	r0, [fp, #-52]	; 0xffffffcc
   1da04:	ldr	r2, [fp, #-16]
   1da08:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da0c:	cmp	r2, r3
   1da10:	beq	1daf4 <_start@@Base+0x94d4>
   1da14:	mov	r3, #0
   1da18:	str	r3, [fp, #-40]	; 0xffffffd8
   1da1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da20:	str	r3, [fp, #-16]
   1da24:	sub	r3, fp, #40	; 0x28
   1da28:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1da2c:	ldr	r1, [fp, #-16]
   1da30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1da34:	bl	15dc0 <_start@@Base+0x17a0>
   1da38:	str	r0, [fp, #-52]	; 0xffffffcc
   1da3c:	ldr	r2, [fp, #-16]
   1da40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da44:	cmp	r2, r3
   1da48:	bne	1da98 <_start@@Base+0x9478>
   1da4c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1da50:	str	r3, [fp, #-16]
   1da54:	sub	r3, fp, #40	; 0x28
   1da58:	str	r3, [sp]
   1da5c:	ldr	r3, [pc, #416]	; 1dc04 <_start@@Base+0x95e4>
   1da60:	add	r3, pc, r3
   1da64:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1da68:	ldr	r1, [fp, #-16]
   1da6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1da70:	bl	16618 <_start@@Base+0x1ff8>
   1da74:	str	r0, [fp, #-52]	; 0xffffffcc
   1da78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1da7c:	ldr	r3, [fp, #-16]
   1da80:	cmp	r2, r3
   1da84:	beq	1dbc4 <_start@@Base+0x95a4>
   1da88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1da8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1da90:	cmp	r2, r3
   1da94:	beq	1dbc4 <_start@@Base+0x95a4>
   1da98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1da9c:	cmp	r3, #0
   1daa0:	bne	1dab8 <_start@@Base+0x9498>
   1daa4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1daa8:	ldr	r3, [r3, #8]
   1daac:	and	r3, r3, #2
   1dab0:	cmp	r3, #0
   1dab4:	beq	1db38 <_start@@Base+0x9518>
   1dab8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dabc:	ldr	r0, [r3]
   1dac0:	mov	r3, #4
   1dac4:	mov	r2, #4
   1dac8:	mov	r1, #1
   1dacc:	bl	31134 <flatcc_builder_table_add@@Base>
   1dad0:	str	r0, [fp, #-20]	; 0xffffffec
   1dad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dad8:	cmp	r3, #0
   1dadc:	beq	1dbb0 <_start@@Base+0x9590>
   1dae0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dae4:	mov	r1, r3
   1dae8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1daec:	bl	1483c <_start@@Base+0x21c>
   1daf0:	b	1db38 <_start@@Base+0x9518>
   1daf4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1daf8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dafc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1db00:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1db04:	str	r0, [fp, #-52]	; 0xffffffcc
   1db08:	b	1db38 <_start@@Base+0x9518>
   1db0c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1db10:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1db14:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1db18:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1db1c:	str	r0, [fp, #-52]	; 0xffffffcc
   1db20:	b	1db38 <_start@@Base+0x9518>
   1db24:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1db28:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1db2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1db30:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1db34:	str	r0, [fp, #-52]	; 0xffffffcc
   1db38:	sub	r3, fp, #24
   1db3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1db40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1db44:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1db48:	bl	15174 <_start@@Base+0xb54>
   1db4c:	str	r0, [fp, #-52]	; 0xffffffcc
   1db50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1db54:	cmp	r3, #0
   1db58:	bne	1d824 <_start@@Base+0x9204>
   1db5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1db60:	ldr	r3, [r3, #20]
   1db64:	cmp	r3, #0
   1db68:	bne	1dbb8 <_start@@Base+0x9598>
   1db6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1db70:	ldr	r3, [r3]
   1db74:	mov	r0, r3
   1db78:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1db7c:	mov	r2, r0
   1db80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1db84:	str	r2, [r3]
   1db88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1db8c:	ldr	r3, [r3]
   1db90:	cmp	r3, #0
   1db94:	beq	1dbc0 <_start@@Base+0x95a0>
   1db98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1db9c:	b	1dbdc <_start@@Base+0x95bc>
   1dba0:	nop			; (mov r0, r0)
   1dba4:	b	1dbc4 <_start@@Base+0x95a4>
   1dba8:	nop			; (mov r0, r0)
   1dbac:	b	1dbc4 <_start@@Base+0x95a4>
   1dbb0:	nop			; (mov r0, r0)
   1dbb4:	b	1dbc4 <_start@@Base+0x95a4>
   1dbb8:	nop			; (mov r0, r0)
   1dbbc:	b	1dbc4 <_start@@Base+0x95a4>
   1dbc0:	nop			; (mov r0, r0)
   1dbc4:	mov	r3, #33	; 0x21
   1dbc8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1dbcc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1dbd0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1dbd4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1dbd8:	mov	r3, r0
   1dbdc:	mov	r0, r3
   1dbe0:	sub	sp, fp, #4
   1dbe4:	pop	{fp, pc}
   1dbe8:	svcpl	0x00626262
   1dbec:	cmnvs	r1, r1, ror #2
   1dbf0:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1dbf4:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1dbf8:	cmnvs	r2, pc, asr r4
   1dbfc:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1dc00:	andeq	r4, r4, r4, asr #17
   1dc04:	muleq	r4, r4, r7
   1dc08:	push	{fp, lr}
   1dc0c:	add	fp, sp, #4
   1dc10:	sub	sp, sp, #56	; 0x38
   1dc14:	str	r0, [fp, #-40]	; 0xffffffd8
   1dc18:	str	r1, [fp, #-44]	; 0xffffffd4
   1dc1c:	str	r2, [fp, #-48]	; 0xffffffd0
   1dc20:	str	r3, [fp, #-52]	; 0xffffffcc
   1dc24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dc28:	mov	r2, #0
   1dc2c:	str	r2, [r3]
   1dc30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dc34:	ldr	r3, [r3]
   1dc38:	mov	r1, #2
   1dc3c:	mov	r0, r3
   1dc40:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1dc44:	mov	r3, r0
   1dc48:	cmp	r3, #0
   1dc4c:	bne	1e044 <_start@@Base+0x9a24>
   1dc50:	sub	r3, fp, #24
   1dc54:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dc58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dc5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dc60:	bl	1508c <_start@@Base+0xa6c>
   1dc64:	str	r0, [fp, #-44]	; 0xffffffd4
   1dc68:	b	1dff4 <_start@@Base+0x99d4>
   1dc6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dc70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dc74:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dc78:	bl	14cb8 <_start@@Base+0x698>
   1dc7c:	str	r0, [fp, #-44]	; 0xffffffd4
   1dc80:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dc84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dc88:	bl	14f70 <_start@@Base+0x950>
   1dc8c:	strd	r0, [fp, #-12]
   1dc90:	ldrd	r2, [fp, #-12]
   1dc94:	add	r1, pc, #972	; 0x3cc
   1dc98:	ldrd	r0, [r1]
   1dc9c:	cmp	r3, r1
   1dca0:	cmpeq	r2, r0
   1dca4:	bne	1dfc8 <_start@@Base+0x99a8>
   1dca8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dcac:	add	r3, r3, #8
   1dcb0:	str	r3, [fp, #-44]	; 0xffffffd4
   1dcb4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dcb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dcbc:	bl	14f70 <_start@@Base+0x950>
   1dcc0:	strd	r0, [fp, #-12]
   1dcc4:	ldrd	r2, [fp, #-12]
   1dcc8:	add	r1, pc, #928	; 0x3a0
   1dccc:	ldrd	r0, [r1]
   1dcd0:	cmp	r3, r1
   1dcd4:	cmpeq	r2, r0
   1dcd8:	bne	1de60 <_start@@Base+0x9840>
   1dcdc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dce0:	add	r3, r3, #8
   1dce4:	str	r3, [fp, #-44]	; 0xffffffd4
   1dce8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1dcec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1dcf0:	bl	14f70 <_start@@Base+0x950>
   1dcf4:	strd	r0, [fp, #-12]
   1dcf8:	ldrd	r2, [fp, #-12]
   1dcfc:	mov	r0, #-16777216	; 0xff000000
   1dd00:	mvn	r1, #0
   1dd04:	and	r2, r2, r0
   1dd08:	and	r3, r3, r1
   1dd0c:	add	r1, pc, #868	; 0x364
   1dd10:	ldrd	r0, [r1]
   1dd14:	cmp	r3, r1
   1dd18:	cmpeq	r2, r0
   1dd1c:	bne	1de48 <_start@@Base+0x9828>
   1dd20:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dd24:	str	r3, [fp, #-16]
   1dd28:	mov	r3, #5
   1dd2c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dd30:	ldr	r1, [fp, #-16]
   1dd34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dd38:	bl	1552c <_start@@Base+0xf0c>
   1dd3c:	str	r0, [fp, #-44]	; 0xffffffd4
   1dd40:	ldr	r2, [fp, #-16]
   1dd44:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dd48:	cmp	r2, r3
   1dd4c:	beq	1de30 <_start@@Base+0x9810>
   1dd50:	mov	r3, #0
   1dd54:	str	r3, [fp, #-28]	; 0xffffffe4
   1dd58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dd5c:	str	r3, [fp, #-16]
   1dd60:	sub	r3, fp, #28
   1dd64:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dd68:	ldr	r1, [fp, #-16]
   1dd6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dd70:	bl	15dc0 <_start@@Base+0x17a0>
   1dd74:	str	r0, [fp, #-44]	; 0xffffffd4
   1dd78:	ldr	r2, [fp, #-16]
   1dd7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dd80:	cmp	r2, r3
   1dd84:	bne	1ddd4 <_start@@Base+0x97b4>
   1dd88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dd8c:	str	r3, [fp, #-16]
   1dd90:	sub	r3, fp, #28
   1dd94:	str	r3, [sp]
   1dd98:	ldr	r3, [pc, #744]	; 1e088 <_start@@Base+0x9a68>
   1dd9c:	add	r3, pc, r3
   1dda0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dda4:	ldr	r1, [fp, #-16]
   1dda8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ddac:	bl	16618 <_start@@Base+0x1ff8>
   1ddb0:	str	r0, [fp, #-44]	; 0xffffffd4
   1ddb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ddb8:	ldr	r3, [fp, #-16]
   1ddbc:	cmp	r2, r3
   1ddc0:	beq	1e094 <_start@@Base+0x9a74>
   1ddc4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ddc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ddcc:	cmp	r2, r3
   1ddd0:	beq	1e094 <_start@@Base+0x9a74>
   1ddd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ddd8:	cmp	r3, #0
   1dddc:	bne	1ddf4 <_start@@Base+0x97d4>
   1dde0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dde4:	ldr	r3, [r3, #8]
   1dde8:	and	r3, r3, #2
   1ddec:	cmp	r3, #0
   1ddf0:	beq	1dfdc <_start@@Base+0x99bc>
   1ddf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ddf8:	ldr	r0, [r3]
   1ddfc:	mov	r3, #4
   1de00:	mov	r2, #4
   1de04:	mov	r1, #1
   1de08:	bl	31134 <flatcc_builder_table_add@@Base>
   1de0c:	str	r0, [fp, #-20]	; 0xffffffec
   1de10:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de14:	cmp	r3, #0
   1de18:	beq	1e04c <_start@@Base+0x9a2c>
   1de1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de20:	mov	r1, r3
   1de24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1de28:	bl	1483c <_start@@Base+0x21c>
   1de2c:	b	1dfdc <_start@@Base+0x99bc>
   1de30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1de34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1de38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1de3c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1de40:	str	r0, [fp, #-44]	; 0xffffffd4
   1de44:	b	1dfdc <_start@@Base+0x99bc>
   1de48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1de4c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1de50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1de54:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1de58:	str	r0, [fp, #-44]	; 0xffffffd4
   1de5c:	b	1dfdc <_start@@Base+0x99bc>
   1de60:	ldrd	r2, [fp, #-12]
   1de64:	mvn	r0, #255	; 0xff
   1de68:	mvn	r1, #0
   1de6c:	and	r2, r2, r0
   1de70:	and	r3, r3, r1
   1de74:	add	r1, pc, #516	; 0x204
   1de78:	ldrd	r0, [r1]
   1de7c:	cmp	r3, r1
   1de80:	cmpeq	r2, r0
   1de84:	bne	1dfb0 <_start@@Base+0x9990>
   1de88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1de8c:	str	r3, [fp, #-16]
   1de90:	mov	r3, #7
   1de94:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1de98:	ldr	r1, [fp, #-16]
   1de9c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dea0:	bl	1552c <_start@@Base+0xf0c>
   1dea4:	str	r0, [fp, #-44]	; 0xffffffd4
   1dea8:	ldr	r2, [fp, #-16]
   1deac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1deb0:	cmp	r2, r3
   1deb4:	beq	1df98 <_start@@Base+0x9978>
   1deb8:	mov	r2, #0
   1debc:	mov	r3, #0
   1dec0:	strd	r2, [fp, #-36]	; 0xffffffdc
   1dec4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1dec8:	str	r3, [fp, #-16]
   1decc:	sub	r3, fp, #36	; 0x24
   1ded0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1ded4:	ldr	r1, [fp, #-16]
   1ded8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dedc:	bl	16030 <_start@@Base+0x1a10>
   1dee0:	str	r0, [fp, #-44]	; 0xffffffd4
   1dee4:	ldr	r2, [fp, #-16]
   1dee8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1deec:	cmp	r2, r3
   1def0:	bne	1df40 <_start@@Base+0x9920>
   1def4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1def8:	str	r3, [fp, #-16]
   1defc:	sub	r3, fp, #36	; 0x24
   1df00:	str	r3, [sp]
   1df04:	ldr	r3, [pc, #384]	; 1e08c <_start@@Base+0x9a6c>
   1df08:	add	r3, pc, r3
   1df0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1df10:	ldr	r1, [fp, #-16]
   1df14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1df18:	bl	16aac <_start@@Base+0x248c>
   1df1c:	str	r0, [fp, #-44]	; 0xffffffd4
   1df20:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1df24:	ldr	r3, [fp, #-16]
   1df28:	cmp	r2, r3
   1df2c:	beq	1e094 <_start@@Base+0x9a74>
   1df30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1df34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1df38:	cmp	r2, r3
   1df3c:	beq	1e094 <_start@@Base+0x9a74>
   1df40:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1df44:	orrs	r3, r2, r3
   1df48:	bne	1df60 <_start@@Base+0x9940>
   1df4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1df50:	ldr	r3, [r3, #8]
   1df54:	and	r3, r3, #2
   1df58:	cmp	r3, #0
   1df5c:	beq	1dfdc <_start@@Base+0x99bc>
   1df60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1df64:	ldr	r0, [r3]
   1df68:	mov	r3, #8
   1df6c:	mov	r2, #8
   1df70:	mov	r1, #0
   1df74:	bl	31134 <flatcc_builder_table_add@@Base>
   1df78:	str	r0, [fp, #-20]	; 0xffffffec
   1df7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df80:	cmp	r3, #0
   1df84:	beq	1e054 <_start@@Base+0x9a34>
   1df88:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   1df8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1df90:	bl	14a20 <_start@@Base+0x400>
   1df94:	b	1dfdc <_start@@Base+0x99bc>
   1df98:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1df9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dfa0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfa4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1dfa8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dfac:	b	1dfdc <_start@@Base+0x99bc>
   1dfb0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dfb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dfb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfbc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1dfc0:	str	r0, [fp, #-44]	; 0xffffffd4
   1dfc4:	b	1dfdc <_start@@Base+0x99bc>
   1dfc8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dfcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dfd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfd4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1dfd8:	str	r0, [fp, #-44]	; 0xffffffd4
   1dfdc:	sub	r3, fp, #24
   1dfe0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1dfe4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1dfe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfec:	bl	15174 <_start@@Base+0xb54>
   1dff0:	str	r0, [fp, #-44]	; 0xffffffd4
   1dff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dff8:	cmp	r3, #0
   1dffc:	bne	1dc6c <_start@@Base+0x964c>
   1e000:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e004:	ldr	r3, [r3, #20]
   1e008:	cmp	r3, #0
   1e00c:	bne	1e05c <_start@@Base+0x9a3c>
   1e010:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e014:	ldr	r3, [r3]
   1e018:	mov	r0, r3
   1e01c:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1e020:	mov	r2, r0
   1e024:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e028:	str	r2, [r3]
   1e02c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e030:	ldr	r3, [r3]
   1e034:	cmp	r3, #0
   1e038:	beq	1e090 <_start@@Base+0x9a70>
   1e03c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e040:	b	1e0ac <_start@@Base+0x9a8c>
   1e044:	nop			; (mov r0, r0)
   1e048:	b	1e094 <_start@@Base+0x9a74>
   1e04c:	nop			; (mov r0, r0)
   1e050:	b	1e094 <_start@@Base+0x9a74>
   1e054:	nop			; (mov r0, r0)
   1e058:	b	1e094 <_start@@Base+0x9a74>
   1e05c:	nop			; (mov r0, r0)
   1e060:	b	1e094 <_start@@Base+0x9a74>
   1e064:	nop			; (mov r0, r0)
   1e068:	svcpl	0x00626262
   1e06c:	cmnvs	r1, r1, ror #2
   1e070:	cmnvs	r2, pc, asr r4
   1e074:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e078:	movwvc	r0, #0
   1e07c:	cmnvc	r4, #112, 10	; 0x1c000000
   1e080:	ldrbvs	r7, [r0, #-768]!	; 0xfffffd00
   1e084:	subsvs	r7, pc, #116, 6	; 0xd0000001
   1e088:	andeq	r4, r4, r4, ror #8
   1e08c:	andeq	r4, r4, r4, lsl #6
   1e090:	nop			; (mov r0, r0)
   1e094:	mov	r3, #33	; 0x21
   1e098:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1e09c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1e0a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e0a4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1e0a8:	mov	r3, r0
   1e0ac:	mov	r0, r3
   1e0b0:	sub	sp, fp, #4
   1e0b4:	pop	{fp, pc}
   1e0b8:	push	{fp, lr}
   1e0bc:	add	fp, sp, #4
   1e0c0:	sub	sp, sp, #48	; 0x30
   1e0c4:	str	r0, [fp, #-32]	; 0xffffffe0
   1e0c8:	str	r1, [fp, #-36]	; 0xffffffdc
   1e0cc:	str	r2, [fp, #-40]	; 0xffffffd8
   1e0d0:	str	r3, [fp, #-44]	; 0xffffffd4
   1e0d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e0d8:	mov	r2, #0
   1e0dc:	str	r2, [r3]
   1e0e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e0e4:	ldr	r3, [r3]
   1e0e8:	mov	r1, #3
   1e0ec:	mov	r0, r3
   1e0f0:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1e0f4:	mov	r3, r0
   1e0f8:	cmp	r3, #0
   1e0fc:	bne	1e468 <_start@@Base+0x9e48>
   1e100:	sub	r3, fp, #24
   1e104:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e108:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e110:	bl	1508c <_start@@Base+0xa6c>
   1e114:	str	r0, [fp, #-36]	; 0xffffffdc
   1e118:	b	1e418 <_start@@Base+0x9df8>
   1e11c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e120:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e124:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e128:	bl	14cb8 <_start@@Base+0x698>
   1e12c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e130:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1e134:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e138:	bl	14f70 <_start@@Base+0x950>
   1e13c:	strd	r0, [fp, #-12]
   1e140:	ldrd	r2, [fp, #-12]
   1e144:	add	r1, pc, #852	; 0x354
   1e148:	ldrd	r0, [r1]
   1e14c:	cmp	r3, r1
   1e150:	cmpeq	r2, r0
   1e154:	bhi	1e244 <_start@@Base+0x9c24>
   1e158:	ldrd	r2, [fp, #-12]
   1e15c:	mov	r0, #0
   1e160:	mvn	r1, #0
   1e164:	and	r2, r2, r0
   1e168:	and	r3, r3, r1
   1e16c:	add	r1, pc, #820	; 0x334
   1e170:	ldrd	r0, [r1]
   1e174:	cmp	r3, r1
   1e178:	cmpeq	r2, r0
   1e17c:	bne	1e22c <_start@@Base+0x9c0c>
   1e180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e184:	str	r3, [fp, #-16]
   1e188:	mov	r3, #4
   1e18c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e190:	ldr	r1, [fp, #-16]
   1e194:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e198:	bl	1552c <_start@@Base+0xf0c>
   1e19c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e1a0:	ldr	r2, [fp, #-16]
   1e1a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e1a8:	cmp	r2, r3
   1e1ac:	beq	1e214 <_start@@Base+0x9bf4>
   1e1b0:	sub	r2, fp, #28
   1e1b4:	mov	r3, #0
   1e1b8:	str	r3, [sp]
   1e1bc:	mov	r3, r2
   1e1c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e1c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e1c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e1cc:	bl	3bacc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e1d0:	str	r0, [fp, #-36]	; 0xffffffdc
   1e1d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1d8:	cmp	r3, #0
   1e1dc:	beq	1e47c <_start@@Base+0x9e5c>
   1e1e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e1e4:	ldr	r3, [r3]
   1e1e8:	mov	r1, #0
   1e1ec:	mov	r0, r3
   1e1f0:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1e1f4:	str	r0, [fp, #-20]	; 0xffffffec
   1e1f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e1fc:	cmp	r3, #0
   1e200:	beq	1e47c <_start@@Base+0x9e5c>
   1e204:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e20c:	str	r2, [r3]
   1e210:	b	1e400 <_start@@Base+0x9de0>
   1e214:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e218:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e220:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e224:	str	r0, [fp, #-36]	; 0xffffffdc
   1e228:	b	1e400 <_start@@Base+0x9de0>
   1e22c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e230:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e234:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e238:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e23c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e240:	b	1e400 <_start@@Base+0x9de0>
   1e244:	ldrd	r2, [fp, #-12]
   1e248:	mvn	r0, #255	; 0xff
   1e24c:	mvn	r1, #0
   1e250:	and	r2, r2, r0
   1e254:	and	r3, r3, r1
   1e258:	add	r1, pc, #592	; 0x250
   1e25c:	ldrd	r0, [r1]
   1e260:	cmp	r3, r1
   1e264:	cmpeq	r2, r0
   1e268:	bne	1e318 <_start@@Base+0x9cf8>
   1e26c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e270:	str	r3, [fp, #-16]
   1e274:	mov	r3, #7
   1e278:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e27c:	ldr	r1, [fp, #-16]
   1e280:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e284:	bl	1552c <_start@@Base+0xf0c>
   1e288:	str	r0, [fp, #-36]	; 0xffffffdc
   1e28c:	ldr	r2, [fp, #-16]
   1e290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e294:	cmp	r2, r3
   1e298:	beq	1e300 <_start@@Base+0x9ce0>
   1e29c:	sub	r2, fp, #28
   1e2a0:	mov	r3, #1
   1e2a4:	str	r3, [sp]
   1e2a8:	mov	r3, r2
   1e2ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e2b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e2b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e2b8:	bl	3bacc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e2bc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e2c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e2c4:	cmp	r3, #0
   1e2c8:	beq	1e47c <_start@@Base+0x9e5c>
   1e2cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2d0:	ldr	r3, [r3]
   1e2d4:	mov	r1, #1
   1e2d8:	mov	r0, r3
   1e2dc:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1e2e0:	str	r0, [fp, #-20]	; 0xffffffec
   1e2e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2e8:	cmp	r3, #0
   1e2ec:	beq	1e47c <_start@@Base+0x9e5c>
   1e2f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e2f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e2f8:	str	r2, [r3]
   1e2fc:	b	1e400 <_start@@Base+0x9de0>
   1e300:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e304:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e308:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e30c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e310:	str	r0, [fp, #-36]	; 0xffffffdc
   1e314:	b	1e400 <_start@@Base+0x9de0>
   1e318:	ldrd	r2, [fp, #-12]
   1e31c:	ldr	r0, [pc, #412]	; 1e4c0 <_start@@Base+0x9ea0>
   1e320:	mvn	r1, #0
   1e324:	and	r2, r2, r0
   1e328:	and	r3, r3, r1
   1e32c:	add	r1, pc, #388	; 0x184
   1e330:	ldrd	r0, [r1]
   1e334:	cmp	r3, r1
   1e338:	cmpeq	r2, r0
   1e33c:	bne	1e3ec <_start@@Base+0x9dcc>
   1e340:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e344:	str	r3, [fp, #-16]
   1e348:	mov	r3, #6
   1e34c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e350:	ldr	r1, [fp, #-16]
   1e354:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e358:	bl	1552c <_start@@Base+0xf0c>
   1e35c:	str	r0, [fp, #-36]	; 0xffffffdc
   1e360:	ldr	r2, [fp, #-16]
   1e364:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e368:	cmp	r2, r3
   1e36c:	beq	1e3d4 <_start@@Base+0x9db4>
   1e370:	sub	r2, fp, #28
   1e374:	mov	r3, #0
   1e378:	str	r3, [sp]
   1e37c:	mov	r3, r2
   1e380:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e384:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e388:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e38c:	bl	3bacc <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1e390:	str	r0, [fp, #-36]	; 0xffffffdc
   1e394:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e398:	cmp	r3, #0
   1e39c:	beq	1e47c <_start@@Base+0x9e5c>
   1e3a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e3a4:	ldr	r3, [r3]
   1e3a8:	mov	r1, #2
   1e3ac:	mov	r0, r3
   1e3b0:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1e3b4:	str	r0, [fp, #-20]	; 0xffffffec
   1e3b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3bc:	cmp	r3, #0
   1e3c0:	beq	1e47c <_start@@Base+0x9e5c>
   1e3c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e3c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e3cc:	str	r2, [r3]
   1e3d0:	b	1e400 <_start@@Base+0x9de0>
   1e3d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e3d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e3dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e3e0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e3e4:	str	r0, [fp, #-36]	; 0xffffffdc
   1e3e8:	b	1e400 <_start@@Base+0x9de0>
   1e3ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e3f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e3f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e3f8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e3fc:	str	r0, [fp, #-36]	; 0xffffffdc
   1e400:	sub	r3, fp, #24
   1e404:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e408:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e40c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e410:	bl	15174 <_start@@Base+0xb54>
   1e414:	str	r0, [fp, #-36]	; 0xffffffdc
   1e418:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e41c:	cmp	r3, #0
   1e420:	bne	1e11c <_start@@Base+0x9afc>
   1e424:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e428:	ldr	r3, [r3, #20]
   1e42c:	cmp	r3, #0
   1e430:	bne	1e470 <_start@@Base+0x9e50>
   1e434:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e438:	ldr	r3, [r3]
   1e43c:	mov	r0, r3
   1e440:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   1e444:	mov	r2, r0
   1e448:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e44c:	str	r2, [r3]
   1e450:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e454:	ldr	r3, [r3]
   1e458:	cmp	r3, #0
   1e45c:	beq	1e478 <_start@@Base+0x9e58>
   1e460:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e464:	b	1e494 <_start@@Base+0x9e74>
   1e468:	nop			; (mov r0, r0)
   1e46c:	b	1e47c <_start@@Base+0x9e5c>
   1e470:	nop			; (mov r0, r0)
   1e474:	b	1e47c <_start@@Base+0x9e5c>
   1e478:	nop			; (mov r0, r0)
   1e47c:	mov	r3, #33	; 0x21
   1e480:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1e484:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e488:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1e48c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   1e490:	mov	r3, r0
   1e494:	mov	r0, r3
   1e498:	sub	sp, fp, #4
   1e49c:	pop	{fp, pc}
   1e4a0:	strbvs	pc, [r3, #-4095]!	; 0xfffff001	; <UNPREDICTABLE>
   1e4a4:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1e4a8:	andeq	r0, r0, r0
   1e4ac:	strbtvs	r7, [r1], #-1121	; 0xfffffb9f
   1e4b0:	cmnvs	r4, r0, lsl #2
   1e4b4:	ldrbvc	r6, [r2, #-3172]!	; 0xfffff39c
   1e4b8:	strbvs	r0, [r4, #-0]!
   1e4bc:	mcrvs	3, 3, r7, cr5, cr4, {3}
   1e4c0:			; <UNDEFINED> instruction: 0xffff0000
   1e4c4:	push	{fp, lr}
   1e4c8:	add	fp, sp, #4
   1e4cc:	sub	sp, sp, #160	; 0xa0
   1e4d0:	str	r0, [fp, #-136]	; 0xffffff78
   1e4d4:	str	r1, [fp, #-140]	; 0xffffff74
   1e4d8:	str	r2, [fp, #-144]	; 0xffffff70
   1e4dc:	str	r3, [fp, #-148]	; 0xffffff6c
   1e4e0:	ldr	r3, [fp, #-148]	; 0xffffff6c
   1e4e4:	mov	r2, #0
   1e4e8:	str	r2, [r3]
   1e4ec:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e4f0:	ldr	r3, [r3]
   1e4f4:	mov	r1, #36	; 0x24
   1e4f8:	mov	r0, r3
   1e4fc:	bl	2ec40 <flatcc_builder_start_table@@Base>
   1e500:	mov	r3, r0
   1e504:	cmp	r3, #0
   1e508:	bne	21d9c <_start@@Base+0xd77c>
   1e50c:	sub	r3, fp, #36	; 0x24
   1e510:	str	r3, [sp]
   1e514:	mov	r3, #1
   1e518:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e51c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e520:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e524:	bl	3bf3c <flatcc_json_parser_prepare_unions@@Base>
   1e528:	mov	r2, r0
   1e52c:	ldr	r3, [fp, #-144]	; 0xffffff70
   1e530:	cmp	r2, r3
   1e534:	beq	21da4 <_start@@Base+0xd784>
   1e538:	sub	r3, fp, #28
   1e53c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e540:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e544:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e548:	bl	1508c <_start@@Base+0xa6c>
   1e54c:	str	r0, [fp, #-140]	; 0xffffff74
   1e550:	b	21cf8 <_start@@Base+0xd6d8>
   1e554:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e558:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e55c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e560:	bl	14cb8 <_start@@Base+0x698>
   1e564:	str	r0, [fp, #-140]	; 0xffffff74
   1e568:	ldr	r1, [fp, #-144]	; 0xffffff70
   1e56c:	ldr	r0, [fp, #-140]	; 0xffffff74
   1e570:	bl	14f70 <_start@@Base+0x950>
   1e574:	strd	r0, [fp, #-12]
   1e578:	ldrd	r2, [fp, #-12]
   1e57c:	add	r1, pc, #796	; 0x31c
   1e580:	ldrd	r0, [r1]
   1e584:	cmp	r3, r1
   1e588:	cmpeq	r2, r0
   1e58c:	bhi	1f770 <_start@@Base+0xb150>
   1e590:	ldrd	r2, [fp, #-12]
   1e594:	add	r1, pc, #780	; 0x30c
   1e598:	ldrd	r0, [r1]
   1e59c:	cmp	r3, r1
   1e5a0:	cmpeq	r2, r0
   1e5a4:	bhi	1ef70 <_start@@Base+0xa950>
   1e5a8:	ldrd	r2, [fp, #-12]
   1e5ac:	add	r1, pc, #764	; 0x2fc
   1e5b0:	ldrd	r0, [r1]
   1e5b4:	cmp	r3, r1
   1e5b8:	cmpeq	r2, r0
   1e5bc:	bhi	1e7f0 <_start@@Base+0xa1d0>
   1e5c0:	ldrd	r2, [fp, #-12]
   1e5c4:	mov	r0, #-16777216	; 0xff000000
   1e5c8:	mvn	r1, #0
   1e5cc:	and	r2, r2, r0
   1e5d0:	and	r3, r3, r1
   1e5d4:	add	r1, pc, #732	; 0x2dc
   1e5d8:	ldrd	r0, [r1]
   1e5dc:	cmp	r3, r1
   1e5e0:	cmpeq	r2, r0
   1e5e4:	bne	1e688 <_start@@Base+0xa068>
   1e5e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e5ec:	str	r3, [fp, #-16]
   1e5f0:	mov	r3, #5
   1e5f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e5f8:	ldr	r1, [fp, #-16]
   1e5fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e600:	bl	1552c <_start@@Base+0xf0c>
   1e604:	str	r0, [fp, #-140]	; 0xffffff74
   1e608:	ldr	r2, [fp, #-16]
   1e60c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e610:	cmp	r2, r3
   1e614:	beq	1e670 <_start@@Base+0xa050>
   1e618:	sub	r3, fp, #32
   1e61c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e620:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e624:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e628:	bl	1e4c4 <_start@@Base+0x9ea4>
   1e62c:	str	r0, [fp, #-140]	; 0xffffff74
   1e630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e634:	cmp	r3, #0
   1e638:	beq	21ef0 <_start@@Base+0xd8d0>
   1e63c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e640:	ldr	r3, [r3]
   1e644:	mov	r1, #12
   1e648:	mov	r0, r3
   1e64c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1e650:	str	r0, [fp, #-20]	; 0xffffffec
   1e654:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e658:	cmp	r3, #0
   1e65c:	beq	21ef0 <_start@@Base+0xd8d0>
   1e660:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e664:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e668:	str	r2, [r3]
   1e66c:	b	21ce0 <_start@@Base+0xd6c0>
   1e670:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e674:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e678:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e67c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e680:	str	r0, [fp, #-140]	; 0xffffff74
   1e684:	b	21ce0 <_start@@Base+0xd6c0>
   1e688:	ldrd	r2, [fp, #-12]
   1e68c:	mov	r0, #-16777216	; 0xff000000
   1e690:	mvn	r1, #0
   1e694:	and	r2, r2, r0
   1e698:	and	r3, r3, r1
   1e69c:	add	r1, pc, #540	; 0x21c
   1e6a0:	ldrd	r0, [r1]
   1e6a4:	cmp	r3, r1
   1e6a8:	cmpeq	r2, r0
   1e6ac:	bne	1e7d8 <_start@@Base+0xa1b8>
   1e6b0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e6b4:	str	r3, [fp, #-16]
   1e6b8:	mov	r3, #5
   1e6bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e6c0:	ldr	r1, [fp, #-16]
   1e6c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e6c8:	bl	1552c <_start@@Base+0xf0c>
   1e6cc:	str	r0, [fp, #-140]	; 0xffffff74
   1e6d0:	ldr	r2, [fp, #-16]
   1e6d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e6d8:	cmp	r2, r3
   1e6dc:	beq	1e7c0 <_start@@Base+0xa1a0>
   1e6e0:	mov	r3, #0
   1e6e4:	strb	r3, [fp, #-37]	; 0xffffffdb
   1e6e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e6ec:	str	r3, [fp, #-16]
   1e6f0:	sub	r3, fp, #37	; 0x25
   1e6f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e6f8:	ldr	r1, [fp, #-16]
   1e6fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e700:	bl	162a4 <_start@@Base+0x1c84>
   1e704:	str	r0, [fp, #-140]	; 0xffffff74
   1e708:	ldr	r2, [fp, #-16]
   1e70c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e710:	cmp	r2, r3
   1e714:	bne	1e764 <_start@@Base+0xa144>
   1e718:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e71c:	str	r3, [fp, #-16]
   1e720:	sub	r3, fp, #37	; 0x25
   1e724:	str	r3, [sp]
   1e728:	ldr	r3, [pc, #416]	; 1e8d0 <_start@@Base+0xa2b0>
   1e72c:	add	r3, pc, r3
   1e730:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e734:	ldr	r1, [fp, #-16]
   1e738:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e73c:	bl	16f54 <_start@@Base+0x2934>
   1e740:	str	r0, [fp, #-140]	; 0xffffff74
   1e744:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e748:	ldr	r3, [fp, #-16]
   1e74c:	cmp	r2, r3
   1e750:	beq	21ef0 <_start@@Base+0xd8d0>
   1e754:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e758:	ldr	r3, [fp, #-144]	; 0xffffff70
   1e75c:	cmp	r2, r3
   1e760:	beq	21ef0 <_start@@Base+0xd8d0>
   1e764:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
   1e768:	cmp	r3, #8
   1e76c:	bne	1e784 <_start@@Base+0xa164>
   1e770:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e774:	ldr	r3, [r3, #8]
   1e778:	and	r3, r3, #2
   1e77c:	cmp	r3, #0
   1e780:	beq	21ce0 <_start@@Base+0xd6c0>
   1e784:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e788:	ldr	r0, [r3]
   1e78c:	mov	r3, #1
   1e790:	mov	r2, #1
   1e794:	mov	r1, #6
   1e798:	bl	31134 <flatcc_builder_table_add@@Base>
   1e79c:	str	r0, [fp, #-24]	; 0xffffffe8
   1e7a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e7a4:	cmp	r3, #0
   1e7a8:	beq	21dac <_start@@Base+0xd78c>
   1e7ac:	ldrsb	r3, [fp, #-37]	; 0xffffffdb
   1e7b0:	mov	r1, r3
   1e7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7b8:	bl	148f8 <_start@@Base+0x2d8>
   1e7bc:	b	21ce0 <_start@@Base+0xd6c0>
   1e7c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e7c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e7c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e7cc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e7d0:	str	r0, [fp, #-140]	; 0xffffff74
   1e7d4:	b	21ce0 <_start@@Base+0xd6c0>
   1e7d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e7dc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e7e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e7e4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1e7e8:	str	r0, [fp, #-140]	; 0xffffff74
   1e7ec:	b	21ce0 <_start@@Base+0xd6c0>
   1e7f0:	ldrd	r2, [fp, #-12]
   1e7f4:	mvn	r0, #0
   1e7f8:	ldr	r1, [pc, #212]	; 1e8d4 <_start@@Base+0xa2b4>
   1e7fc:	cmp	r3, r1
   1e800:	cmpeq	r2, r0
   1e804:	bhi	1ea40 <_start@@Base+0xa420>
   1e808:	ldrd	r2, [fp, #-12]
   1e80c:	mov	r0, #0
   1e810:	mvn	r1, #0
   1e814:	and	r2, r2, r0
   1e818:	and	r3, r3, r1
   1e81c:	add	r1, pc, #164	; 0xa4
   1e820:	ldrd	r0, [r1]
   1e824:	cmp	r3, r1
   1e828:	cmpeq	r2, r0
   1e82c:	bne	1ea28 <_start@@Base+0xa408>
   1e830:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e834:	str	r3, [fp, #-16]
   1e838:	mov	r3, #4
   1e83c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e840:	ldr	r1, [fp, #-16]
   1e844:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e848:	bl	1552c <_start@@Base+0xf0c>
   1e84c:	str	r0, [fp, #-140]	; 0xffffff74
   1e850:	ldr	r2, [fp, #-16]
   1e854:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e858:	cmp	r2, r3
   1e85c:	beq	1ea10 <_start@@Base+0xa3f0>
   1e860:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e864:	ldr	r0, [r3]
   1e868:	mvn	r3, #0
   1e86c:	mov	r2, #1
   1e870:	mov	r1, #1
   1e874:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   1e878:	mov	r3, r0
   1e87c:	cmp	r3, #0
   1e880:	bne	21db4 <_start@@Base+0xd794>
   1e884:	sub	r3, fp, #28
   1e888:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e88c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e890:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e894:	bl	152dc <_start@@Base+0xcbc>
   1e898:	str	r0, [fp, #-140]	; 0xffffff74
   1e89c:	b	1e9ac <_start@@Base+0xa38c>
   1e8a0:	cmnvs	r2, r0, ror #4
   1e8a4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1e8a8:			; <UNDEFINED> instruction: 0xffffffff
   1e8ac:	cdpvs	13, 6, cr6, cr1, cr4, {3}
   1e8b0:			; <UNDEFINED> instruction: 0xffffffff
   1e8b4:			; <UNDEFINED> instruction: 0x666c6577
   1e8b8:	stmdbvc	r0, {}	; <UNPREDICTABLE>
   1e8bc:	strbvs	r6, [lr, #-1389]!	; 0xfffffa93
   1e8c0:	andvc	r0, r0, #0
   1e8c4:	cmnvs	pc, #28416	; 0x6f00
   1e8c8:	andeq	r0, r0, r0
   1e8cc:			; <UNDEFINED> instruction: 0x666c6578
   1e8d0:	andeq	r3, r4, ip, ror #21
   1e8d4:	stmdavs	pc!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}^	; <UNPREDICTABLE>
   1e8d8:	ldrdeq	r3, [r4], -ip
   1e8dc:	mov	r3, #0
   1e8e0:	strb	r3, [fp, #-38]	; 0xffffffda
   1e8e4:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e8e8:	ldr	r3, [r3]
   1e8ec:	mov	r1, #1
   1e8f0:	mov	r0, r3
   1e8f4:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   1e8f8:	str	r0, [fp, #-24]	; 0xffffffe8
   1e8fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e900:	cmp	r3, #0
   1e904:	beq	21dbc <_start@@Base+0xd79c>
   1e908:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e90c:	str	r3, [fp, #-16]
   1e910:	sub	r3, fp, #38	; 0x26
   1e914:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e918:	ldr	r1, [fp, #-16]
   1e91c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e920:	bl	15f60 <_start@@Base+0x1940>
   1e924:	str	r0, [fp, #-140]	; 0xffffff74
   1e928:	ldr	r2, [fp, #-16]
   1e92c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e930:	cmp	r2, r3
   1e934:	bne	1e984 <_start@@Base+0xa364>
   1e938:	ldr	r3, [fp, #-140]	; 0xffffff74
   1e93c:	str	r3, [fp, #-16]
   1e940:	sub	r3, fp, #38	; 0x26
   1e944:	str	r3, [sp]
   1e948:	ldr	r3, [pc, #-120]	; 1e8d8 <_start@@Base+0xa2b8>
   1e94c:	add	r3, pc, r3
   1e950:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e954:	ldr	r1, [fp, #-16]
   1e958:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e95c:	bl	16924 <_start@@Base+0x2304>
   1e960:	str	r0, [fp, #-140]	; 0xffffff74
   1e964:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e968:	ldr	r3, [fp, #-16]
   1e96c:	cmp	r2, r3
   1e970:	beq	21dbc <_start@@Base+0xd79c>
   1e974:	ldr	r2, [fp, #-140]	; 0xffffff74
   1e978:	ldr	r3, [fp, #-144]	; 0xffffff70
   1e97c:	cmp	r2, r3
   1e980:	beq	21dbc <_start@@Base+0xd79c>
   1e984:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1e988:	mov	r1, r3
   1e98c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e990:	bl	14770 <_start@@Base+0x150>
   1e994:	sub	r3, fp, #28
   1e998:	ldr	r2, [fp, #-144]	; 0xffffff70
   1e99c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1e9a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1e9a4:	bl	153c4 <_start@@Base+0xda4>
   1e9a8:	str	r0, [fp, #-140]	; 0xffffff74
   1e9ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e9b0:	cmp	r3, #0
   1e9b4:	bne	1e8dc <_start@@Base+0xa2bc>
   1e9b8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e9bc:	ldr	r3, [r3]
   1e9c0:	mov	r0, r3
   1e9c4:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   1e9c8:	mov	r3, r0
   1e9cc:	str	r3, [fp, #-32]	; 0xffffffe0
   1e9d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e9d4:	cmp	r3, #0
   1e9d8:	beq	21ef0 <_start@@Base+0xd8d0>
   1e9dc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1e9e0:	ldr	r3, [r3]
   1e9e4:	mov	r1, #30
   1e9e8:	mov	r0, r3
   1e9ec:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1e9f0:	str	r0, [fp, #-20]	; 0xffffffec
   1e9f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e9f8:	cmp	r3, #0
   1e9fc:	beq	21ef0 <_start@@Base+0xd8d0>
   1ea00:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ea04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea08:	str	r2, [r3]
   1ea0c:	b	21ce0 <_start@@Base+0xd6c0>
   1ea10:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ea14:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ea18:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ea1c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ea20:	str	r0, [fp, #-140]	; 0xffffff74
   1ea24:	b	21ce0 <_start@@Base+0xd6c0>
   1ea28:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ea2c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ea30:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ea34:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ea38:	str	r0, [fp, #-140]	; 0xffffff74
   1ea3c:	b	21ce0 <_start@@Base+0xd6c0>
   1ea40:	ldrd	r2, [fp, #-12]
   1ea44:	add	r1, pc, #924	; 0x39c
   1ea48:	ldrd	r0, [r1]
   1ea4c:	cmp	r3, r1
   1ea50:	cmpeq	r2, r0
   1ea54:	bhi	1ebc0 <_start@@Base+0xa5a0>
   1ea58:	ldrd	r2, [fp, #-12]
   1ea5c:	mov	r0, #0
   1ea60:	ldr	r1, [pc, #912]	; 1edf8 <_start@@Base+0xa7d8>
   1ea64:	and	r2, r2, r0
   1ea68:	and	r3, r3, r1
   1ea6c:	mov	r0, #0
   1ea70:	ldr	r1, [pc, #900]	; 1edfc <_start@@Base+0xa7dc>
   1ea74:	cmp	r3, r1
   1ea78:	cmpeq	r2, r0
   1ea7c:	bne	1eba8 <_start@@Base+0xa588>
   1ea80:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ea84:	str	r3, [fp, #-16]
   1ea88:	mov	r3, #2
   1ea8c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ea90:	ldr	r1, [fp, #-16]
   1ea94:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ea98:	bl	1552c <_start@@Base+0xf0c>
   1ea9c:	str	r0, [fp, #-140]	; 0xffffff74
   1eaa0:	ldr	r2, [fp, #-16]
   1eaa4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eaa8:	cmp	r2, r3
   1eaac:	beq	1eb90 <_start@@Base+0xa570>
   1eab0:	mov	r3, #0
   1eab4:	strh	r3, [fp, #-40]	; 0xffffffd8
   1eab8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eabc:	str	r3, [fp, #-16]
   1eac0:	sub	r3, fp, #40	; 0x28
   1eac4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eac8:	ldr	r1, [fp, #-16]
   1eacc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ead0:	bl	161d4 <_start@@Base+0x1bb4>
   1ead4:	str	r0, [fp, #-140]	; 0xffffff74
   1ead8:	ldr	r2, [fp, #-16]
   1eadc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eae0:	cmp	r2, r3
   1eae4:	bne	1eb34 <_start@@Base+0xa514>
   1eae8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eaec:	str	r3, [fp, #-16]
   1eaf0:	sub	r3, fp, #40	; 0x28
   1eaf4:	str	r3, [sp]
   1eaf8:	ldr	r3, [pc, #768]	; 1ee00 <_start@@Base+0xa7e0>
   1eafc:	add	r3, pc, r3
   1eb00:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eb04:	ldr	r1, [fp, #-16]
   1eb08:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eb0c:	bl	16dc0 <_start@@Base+0x27a0>
   1eb10:	str	r0, [fp, #-140]	; 0xffffff74
   1eb14:	ldr	r2, [fp, #-140]	; 0xffffff74
   1eb18:	ldr	r3, [fp, #-16]
   1eb1c:	cmp	r2, r3
   1eb20:	beq	21ef0 <_start@@Base+0xd8d0>
   1eb24:	ldr	r2, [fp, #-140]	; 0xffffff74
   1eb28:	ldr	r3, [fp, #-144]	; 0xffffff70
   1eb2c:	cmp	r2, r3
   1eb30:	beq	21ef0 <_start@@Base+0xd8d0>
   1eb34:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
   1eb38:	cmp	r3, #100	; 0x64
   1eb3c:	bne	1eb54 <_start@@Base+0xa534>
   1eb40:	ldr	r3, [fp, #-136]	; 0xffffff78
   1eb44:	ldr	r3, [r3, #8]
   1eb48:	and	r3, r3, #2
   1eb4c:	cmp	r3, #0
   1eb50:	beq	21ce0 <_start@@Base+0xd6c0>
   1eb54:	ldr	r3, [fp, #-136]	; 0xffffff78
   1eb58:	ldr	r0, [r3]
   1eb5c:	mov	r3, #2
   1eb60:	mov	r2, #2
   1eb64:	mov	r1, #2
   1eb68:	bl	31134 <flatcc_builder_table_add@@Base>
   1eb6c:	str	r0, [fp, #-24]	; 0xffffffe8
   1eb70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eb74:	cmp	r3, #0
   1eb78:	beq	21dc4 <_start@@Base+0xd7a4>
   1eb7c:	ldrsh	r3, [fp, #-40]	; 0xffffffd8
   1eb80:	mov	r1, r3
   1eb84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb88:	bl	14960 <_start@@Base+0x340>
   1eb8c:	b	21ce0 <_start@@Base+0xd6c0>
   1eb90:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eb94:	ldr	r1, [fp, #-140]	; 0xffffff74
   1eb98:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eb9c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1eba0:	str	r0, [fp, #-140]	; 0xffffff74
   1eba4:	b	21ce0 <_start@@Base+0xd6c0>
   1eba8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ebac:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ebb0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ebb4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ebb8:	str	r0, [fp, #-140]	; 0xffffff74
   1ebbc:	b	21ce0 <_start@@Base+0xd6c0>
   1ebc0:	ldrd	r2, [fp, #-12]
   1ebc4:	add	r1, pc, #548	; 0x224
   1ebc8:	ldrd	r0, [r1]
   1ebcc:	cmp	r3, r1
   1ebd0:	cmpeq	r2, r0
   1ebd4:	bne	1ee08 <_start@@Base+0xa7e8>
   1ebd8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ebdc:	add	r3, r3, #8
   1ebe0:	str	r3, [fp, #-140]	; 0xffffff74
   1ebe4:	ldr	r1, [fp, #-144]	; 0xffffff70
   1ebe8:	ldr	r0, [fp, #-140]	; 0xffffff74
   1ebec:	bl	14f70 <_start@@Base+0x950>
   1ebf0:	strd	r0, [fp, #-12]
   1ebf4:	ldrd	r2, [fp, #-12]
   1ebf8:	mov	r0, #0
   1ebfc:	mov	r1, #-16777216	; 0xff000000
   1ec00:	and	r2, r2, r0
   1ec04:	and	r3, r3, r1
   1ec08:	cmp	r3, #2030043136	; 0x79000000
   1ec0c:	cmpeq	r2, #0
   1ec10:	bne	1edd0 <_start@@Base+0xa7b0>
   1ec14:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ec18:	str	r3, [fp, #-16]
   1ec1c:	mov	r3, #1
   1ec20:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ec24:	ldr	r1, [fp, #-16]
   1ec28:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ec2c:	bl	1552c <_start@@Base+0xf0c>
   1ec30:	str	r0, [fp, #-140]	; 0xffffff74
   1ec34:	ldr	r2, [fp, #-16]
   1ec38:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ec3c:	cmp	r2, r3
   1ec40:	beq	1edb8 <_start@@Base+0xa798>
   1ec44:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ec48:	ldr	r0, [r3]
   1ec4c:	mvn	r3, #0
   1ec50:	mov	r2, #1
   1ec54:	mov	r1, #1
   1ec58:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   1ec5c:	mov	r3, r0
   1ec60:	cmp	r3, #0
   1ec64:	bne	21dcc <_start@@Base+0xd7ac>
   1ec68:	sub	r3, fp, #28
   1ec6c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ec70:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ec74:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ec78:	bl	152dc <_start@@Base+0xcbc>
   1ec7c:	str	r0, [fp, #-140]	; 0xffffff74
   1ec80:	b	1ed54 <_start@@Base+0xa734>
   1ec84:	mov	r3, #0
   1ec88:	strb	r3, [fp, #-41]	; 0xffffffd7
   1ec8c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ec90:	ldr	r3, [r3]
   1ec94:	mov	r1, #1
   1ec98:	mov	r0, r3
   1ec9c:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   1eca0:	str	r0, [fp, #-24]	; 0xffffffe8
   1eca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eca8:	cmp	r3, #0
   1ecac:	beq	21dd4 <_start@@Base+0xd7b4>
   1ecb0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ecb4:	str	r3, [fp, #-16]
   1ecb8:	sub	r3, fp, #41	; 0x29
   1ecbc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ecc0:	ldr	r1, [fp, #-16]
   1ecc4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ecc8:	bl	15f60 <_start@@Base+0x1940>
   1eccc:	str	r0, [fp, #-140]	; 0xffffff74
   1ecd0:	ldr	r2, [fp, #-16]
   1ecd4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ecd8:	cmp	r2, r3
   1ecdc:	bne	1ed2c <_start@@Base+0xa70c>
   1ece0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ece4:	str	r3, [fp, #-16]
   1ece8:	sub	r3, fp, #41	; 0x29
   1ecec:	str	r3, [sp]
   1ecf0:	ldr	r3, [pc, #268]	; 1ee04 <_start@@Base+0xa7e4>
   1ecf4:	add	r3, pc, r3
   1ecf8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ecfc:	ldr	r1, [fp, #-16]
   1ed00:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ed04:	bl	16924 <_start@@Base+0x2304>
   1ed08:	str	r0, [fp, #-140]	; 0xffffff74
   1ed0c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ed10:	ldr	r3, [fp, #-16]
   1ed14:	cmp	r2, r3
   1ed18:	beq	21dd4 <_start@@Base+0xd7b4>
   1ed1c:	ldr	r2, [fp, #-140]	; 0xffffff74
   1ed20:	ldr	r3, [fp, #-144]	; 0xffffff70
   1ed24:	cmp	r2, r3
   1ed28:	beq	21dd4 <_start@@Base+0xd7b4>
   1ed2c:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   1ed30:	mov	r1, r3
   1ed34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed38:	bl	14770 <_start@@Base+0x150>
   1ed3c:	sub	r3, fp, #28
   1ed40:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ed44:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ed48:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ed4c:	bl	153c4 <_start@@Base+0xda4>
   1ed50:	str	r0, [fp, #-140]	; 0xffffff74
   1ed54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ed58:	cmp	r3, #0
   1ed5c:	bne	1ec84 <_start@@Base+0xa664>
   1ed60:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ed64:	ldr	r3, [r3]
   1ed68:	mov	r0, r3
   1ed6c:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   1ed70:	mov	r3, r0
   1ed74:	str	r3, [fp, #-32]	; 0xffffffe0
   1ed78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ed7c:	cmp	r3, #0
   1ed80:	beq	21ef0 <_start@@Base+0xd8d0>
   1ed84:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ed88:	ldr	r3, [r3]
   1ed8c:	mov	r1, #5
   1ed90:	mov	r0, r3
   1ed94:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1ed98:	str	r0, [fp, #-20]	; 0xffffffec
   1ed9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eda0:	cmp	r3, #0
   1eda4:	beq	21ef0 <_start@@Base+0xd8d0>
   1eda8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1edac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1edb0:	str	r2, [r3]
   1edb4:	b	21ce0 <_start@@Base+0xd6c0>
   1edb8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1edbc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1edc0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1edc4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1edc8:	str	r0, [fp, #-140]	; 0xffffff74
   1edcc:	b	21ce0 <_start@@Base+0xd6c0>
   1edd0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1edd4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1edd8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eddc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ede0:	str	r0, [fp, #-140]	; 0xffffff74
   1ede4:	b	21ce0 <_start@@Base+0xd6c0>
   1ede8:	mrcvs	15, 3, r6, cr4, cr1, {3}
   1edec:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1edf0:	mrcvs	15, 3, r6, cr4, cr2, {3}
   1edf4:	stmdbvs	lr!, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
   1edf8:			; <UNDEFINED> instruction: 0xffff0000
   1edfc:	ldmdavs	r0!, {}^	; <UNPREDICTABLE>
   1ee00:	andeq	r3, r4, r8, lsr r7
   1ee04:	andeq	r3, r4, ip, asr #10
   1ee08:	ldrd	r2, [fp, #-12]
   1ee0c:	mov	r0, #0
   1ee10:	mvn	r1, #0
   1ee14:	and	r2, r2, r0
   1ee18:	and	r3, r3, r1
   1ee1c:	add	r1, pc, #956	; 0x3bc
   1ee20:	ldrd	r0, [r1]
   1ee24:	cmp	r3, r1
   1ee28:	cmpeq	r2, r0
   1ee2c:	bne	1ef58 <_start@@Base+0xa938>
   1ee30:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee34:	str	r3, [fp, #-16]
   1ee38:	mov	r3, #4
   1ee3c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ee40:	ldr	r1, [fp, #-16]
   1ee44:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ee48:	bl	1552c <_start@@Base+0xf0c>
   1ee4c:	str	r0, [fp, #-140]	; 0xffffff74
   1ee50:	ldr	r2, [fp, #-16]
   1ee54:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee58:	cmp	r2, r3
   1ee5c:	beq	1ef40 <_start@@Base+0xa920>
   1ee60:	mov	r3, #0
   1ee64:	strh	r3, [fp, #-44]	; 0xffffffd4
   1ee68:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee6c:	str	r3, [fp, #-16]
   1ee70:	sub	r3, fp, #44	; 0x2c
   1ee74:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ee78:	ldr	r1, [fp, #-16]
   1ee7c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ee80:	bl	161d4 <_start@@Base+0x1bb4>
   1ee84:	str	r0, [fp, #-140]	; 0xffffff74
   1ee88:	ldr	r2, [fp, #-16]
   1ee8c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee90:	cmp	r2, r3
   1ee94:	bne	1eee4 <_start@@Base+0xa8c4>
   1ee98:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ee9c:	str	r3, [fp, #-16]
   1eea0:	sub	r3, fp, #44	; 0x2c
   1eea4:	str	r3, [sp]
   1eea8:	ldr	r3, [pc, #872]	; 1f218 <_start@@Base+0xabf8>
   1eeac:	add	r3, pc, r3
   1eeb0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1eeb4:	ldr	r1, [fp, #-16]
   1eeb8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1eebc:	bl	16dc0 <_start@@Base+0x27a0>
   1eec0:	str	r0, [fp, #-140]	; 0xffffff74
   1eec4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1eec8:	ldr	r3, [fp, #-16]
   1eecc:	cmp	r2, r3
   1eed0:	beq	21ef0 <_start@@Base+0xd8d0>
   1eed4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1eed8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1eedc:	cmp	r2, r3
   1eee0:	beq	21ef0 <_start@@Base+0xd8d0>
   1eee4:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   1eee8:	cmp	r3, #150	; 0x96
   1eeec:	bne	1ef04 <_start@@Base+0xa8e4>
   1eef0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1eef4:	ldr	r3, [r3, #8]
   1eef8:	and	r3, r3, #2
   1eefc:	cmp	r3, #0
   1ef00:	beq	21ce0 <_start@@Base+0xd6c0>
   1ef04:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ef08:	ldr	r0, [r3]
   1ef0c:	mov	r3, #2
   1ef10:	mov	r2, #2
   1ef14:	mov	r1, #1
   1ef18:	bl	31134 <flatcc_builder_table_add@@Base>
   1ef1c:	str	r0, [fp, #-24]	; 0xffffffe8
   1ef20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ef24:	cmp	r3, #0
   1ef28:	beq	21ddc <_start@@Base+0xd7bc>
   1ef2c:	ldrsh	r3, [fp, #-44]	; 0xffffffd4
   1ef30:	mov	r1, r3
   1ef34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef38:	bl	14960 <_start@@Base+0x340>
   1ef3c:	b	21ce0 <_start@@Base+0xd6c0>
   1ef40:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ef44:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ef48:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ef4c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ef50:	str	r0, [fp, #-140]	; 0xffffff74
   1ef54:	b	21ce0 <_start@@Base+0xd6c0>
   1ef58:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ef5c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ef60:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ef64:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1ef68:	str	r0, [fp, #-140]	; 0xffffff74
   1ef6c:	b	21ce0 <_start@@Base+0xd6c0>
   1ef70:	ldrd	r2, [fp, #-12]
   1ef74:	add	r1, pc, #620	; 0x26c
   1ef78:	ldrd	r0, [r1]
   1ef7c:	cmp	r3, r1
   1ef80:	cmpeq	r2, r0
   1ef84:	bhi	1f2e8 <_start@@Base+0xacc8>
   1ef88:	ldrd	r2, [fp, #-12]
   1ef8c:	add	r1, pc, #604	; 0x25c
   1ef90:	ldrd	r0, [r1]
   1ef94:	cmp	r3, r1
   1ef98:	cmpeq	r2, r0
   1ef9c:	bhi	1f080 <_start@@Base+0xaa60>
   1efa0:	ldrd	r2, [fp, #-12]
   1efa4:	mov	r0, #0
   1efa8:	mvn	r1, #0
   1efac:	and	r2, r2, r0
   1efb0:	and	r3, r3, r1
   1efb4:	add	r1, pc, #572	; 0x23c
   1efb8:	ldrd	r0, [r1]
   1efbc:	cmp	r3, r1
   1efc0:	cmpeq	r2, r0
   1efc4:	bne	1f068 <_start@@Base+0xaa48>
   1efc8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1efcc:	str	r3, [fp, #-16]
   1efd0:	mov	r3, #4
   1efd4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1efd8:	ldr	r1, [fp, #-16]
   1efdc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1efe0:	bl	1552c <_start@@Base+0xf0c>
   1efe4:	str	r0, [fp, #-140]	; 0xffffff74
   1efe8:	ldr	r2, [fp, #-16]
   1efec:	ldr	r3, [fp, #-140]	; 0xffffff74
   1eff0:	cmp	r2, r3
   1eff4:	beq	1f050 <_start@@Base+0xaa30>
   1eff8:	sub	r3, fp, #32
   1effc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f000:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f004:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f008:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   1f00c:	str	r0, [fp, #-140]	; 0xffffff74
   1f010:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f014:	cmp	r3, #0
   1f018:	beq	21ef0 <_start@@Base+0xd8d0>
   1f01c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f020:	ldr	r3, [r3]
   1f024:	mov	r1, #3
   1f028:	mov	r0, r3
   1f02c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1f030:	str	r0, [fp, #-20]	; 0xffffffec
   1f034:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f038:	cmp	r3, #0
   1f03c:	beq	21ef0 <_start@@Base+0xd8d0>
   1f040:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f044:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f048:	str	r2, [r3]
   1f04c:	b	21ce0 <_start@@Base+0xd6c0>
   1f050:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f054:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f058:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f05c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f060:	str	r0, [fp, #-140]	; 0xffffff74
   1f064:	b	21ce0 <_start@@Base+0xd6c0>
   1f068:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f06c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f070:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f074:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f078:	str	r0, [fp, #-140]	; 0xffffff74
   1f07c:	b	21ce0 <_start@@Base+0xd6c0>
   1f080:	ldrd	r2, [fp, #-12]
   1f084:	add	r1, pc, #372	; 0x174
   1f088:	ldrd	r0, [r1]
   1f08c:	cmp	r3, r1
   1f090:	cmpeq	r2, r0
   1f094:	bne	1f21c <_start@@Base+0xabfc>
   1f098:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f09c:	add	r3, r3, #8
   1f0a0:	str	r3, [fp, #-140]	; 0xffffff74
   1f0a4:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f0a8:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f0ac:	bl	14f70 <_start@@Base+0x950>
   1f0b0:	strd	r0, [fp, #-12]
   1f0b4:	ldrd	r2, [fp, #-12]
   1f0b8:	add	r1, pc, #328	; 0x148
   1f0bc:	ldrd	r0, [r1]
   1f0c0:	cmp	r3, r1
   1f0c4:	cmpeq	r2, r0
   1f0c8:	bne	1f1c8 <_start@@Base+0xaba8>
   1f0cc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f0d0:	add	r3, r3, #8
   1f0d4:	str	r3, [fp, #-140]	; 0xffffff74
   1f0d8:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f0dc:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f0e0:	bl	14f70 <_start@@Base+0x950>
   1f0e4:	strd	r0, [fp, #-12]
   1f0e8:	ldrd	r2, [fp, #-12]
   1f0ec:	mov	r0, #-16777216	; 0xff000000
   1f0f0:	mvn	r1, #0
   1f0f4:	and	r2, r2, r0
   1f0f8:	and	r3, r3, r1
   1f0fc:	add	r1, pc, #268	; 0x10c
   1f100:	ldrd	r0, [r1]
   1f104:	cmp	r3, r1
   1f108:	cmpeq	r2, r0
   1f10c:	bne	1f1b0 <_start@@Base+0xab90>
   1f110:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f114:	str	r3, [fp, #-16]
   1f118:	mov	r3, #5
   1f11c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f120:	ldr	r1, [fp, #-16]
   1f124:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f128:	bl	1552c <_start@@Base+0xf0c>
   1f12c:	str	r0, [fp, #-140]	; 0xffffff74
   1f130:	ldr	r2, [fp, #-16]
   1f134:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f138:	cmp	r2, r3
   1f13c:	beq	1f198 <_start@@Base+0xab78>
   1f140:	sub	r3, fp, #32
   1f144:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f148:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f14c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f150:	bl	18314 <_start@@Base+0x3cf4>
   1f154:	str	r0, [fp, #-140]	; 0xffffff74
   1f158:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f15c:	cmp	r3, #0
   1f160:	beq	21ef0 <_start@@Base+0xd8d0>
   1f164:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f168:	ldr	r3, [r3]
   1f16c:	mov	r1, #34	; 0x22
   1f170:	mov	r0, r3
   1f174:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1f178:	str	r0, [fp, #-20]	; 0xffffffec
   1f17c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f180:	cmp	r3, #0
   1f184:	beq	21ef0 <_start@@Base+0xd8d0>
   1f188:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f18c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f190:	str	r2, [r3]
   1f194:	b	21ce0 <_start@@Base+0xd6c0>
   1f198:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f19c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f1a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f1a4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f1a8:	str	r0, [fp, #-140]	; 0xffffff74
   1f1ac:	b	21ce0 <_start@@Base+0xd6c0>
   1f1b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f1b4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f1b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f1bc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f1c0:	str	r0, [fp, #-140]	; 0xffffff74
   1f1c4:	b	21ce0 <_start@@Base+0xd6c0>
   1f1c8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f1cc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f1d0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f1d4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f1d8:	str	r0, [fp, #-140]	; 0xffffff74
   1f1dc:	b	21ce0 <_start@@Base+0xd6c0>
   1f1e0:	andeq	r0, r0, r0
   1f1e4:	stclvs	14, cr6, [r1, #-388]!	; 0xfffffe7c
   1f1e8:			; <UNDEFINED> instruction: 0xffffffff
   1f1ec:	strbtvc	r7, [r5], #-883	; 0xfffffc8d
   1f1f0:	cdpvs	15, 7, cr5, cr4, cr13, {3}
   1f1f4:	rsbvc	r7, r1, r5, ror #4
   1f1f8:	andeq	r0, r0, r0
   1f1fc:	cdpvs	13, 6, cr6, cr1, cr5, {3}
   1f200:	cdpvs	15, 7, cr5, cr4, cr14, {3}
   1f204:	rsbvc	r7, r1, r5, ror #4
   1f208:	rsbvc	r6, r1, r5, ror #6
   1f20c:	smcvs	54867	; 0xd653
   1f210:	strvc	r0, [r0], #-0
   1f214:	svcpl	0x00746573
   1f218:	andeq	r3, r4, r0, lsr #7
   1f21c:	ldrd	r2, [fp, #-12]
   1f220:	mov	r0, #0
   1f224:	mvn	r1, #255	; 0xff
   1f228:	and	r2, r2, r0
   1f22c:	and	r3, r3, r1
   1f230:	add	r1, pc, #832	; 0x340
   1f234:	ldrd	r0, [r1]
   1f238:	cmp	r3, r1
   1f23c:	cmpeq	r2, r0
   1f240:	bne	1f2d0 <_start@@Base+0xacb0>
   1f244:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f248:	str	r3, [fp, #-16]
   1f24c:	mov	r3, #3
   1f250:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f254:	ldr	r1, [fp, #-16]
   1f258:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f25c:	bl	1552c <_start@@Base+0xf0c>
   1f260:	str	r0, [fp, #-140]	; 0xffffff74
   1f264:	ldr	r2, [fp, #-16]
   1f268:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f26c:	cmp	r2, r3
   1f270:	beq	1f2b8 <_start@@Base+0xac98>
   1f274:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f278:	ldr	r0, [r3]
   1f27c:	mov	r3, #16
   1f280:	mov	r2, #32
   1f284:	mov	r1, #0
   1f288:	bl	31134 <flatcc_builder_table_add@@Base>
   1f28c:	str	r0, [fp, #-24]	; 0xffffffe8
   1f290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f294:	cmp	r3, #0
   1f298:	beq	21de4 <_start@@Base+0xd7c4>
   1f29c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f2a0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f2a4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f2a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f2ac:	bl	1b11c <_start@@Base+0x6afc>
   1f2b0:	str	r0, [fp, #-140]	; 0xffffff74
   1f2b4:	b	21ce0 <_start@@Base+0xd6c0>
   1f2b8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f2bc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f2c0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f2c4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f2c8:	str	r0, [fp, #-140]	; 0xffffff74
   1f2cc:	b	21ce0 <_start@@Base+0xd6c0>
   1f2d0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f2d4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f2d8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f2dc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f2e0:	str	r0, [fp, #-140]	; 0xffffff74
   1f2e4:	b	21ce0 <_start@@Base+0xd6c0>
   1f2e8:	ldrd	r2, [fp, #-12]
   1f2ec:	mov	r0, #-16777216	; 0xff000000
   1f2f0:	mvn	r1, #0
   1f2f4:	and	r2, r2, r0
   1f2f8:	and	r3, r3, r1
   1f2fc:	add	r1, pc, #636	; 0x27c
   1f300:	ldrd	r0, [r1]
   1f304:	cmp	r3, r1
   1f308:	cmpeq	r2, r0
   1f30c:	bne	1f438 <_start@@Base+0xae18>
   1f310:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f314:	str	r3, [fp, #-16]
   1f318:	mov	r3, #5
   1f31c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f320:	ldr	r1, [fp, #-16]
   1f324:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f328:	bl	1552c <_start@@Base+0xf0c>
   1f32c:	str	r0, [fp, #-140]	; 0xffffff74
   1f330:	ldr	r2, [fp, #-16]
   1f334:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f338:	cmp	r2, r3
   1f33c:	beq	1f4c8 <_start@@Base+0xaea8>
   1f340:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f344:	ldr	r0, [r3]
   1f348:	mvn	r3, #-1073741824	; 0xc0000000
   1f34c:	mov	r2, #2
   1f350:	mov	r1, #4
   1f354:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   1f358:	mov	r3, r0
   1f35c:	cmp	r3, #0
   1f360:	bne	21dec <_start@@Base+0xd7cc>
   1f364:	sub	r3, fp, #28
   1f368:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f36c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f370:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f374:	bl	152dc <_start@@Base+0xcbc>
   1f378:	str	r0, [fp, #-140]	; 0xffffff74
   1f37c:	b	1f3d4 <_start@@Base+0xadb4>
   1f380:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f384:	ldr	r3, [r3]
   1f388:	mov	r1, #1
   1f38c:	mov	r0, r3
   1f390:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   1f394:	str	r0, [fp, #-24]	; 0xffffffe8
   1f398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f39c:	cmp	r3, #0
   1f3a0:	beq	21df4 <_start@@Base+0xd7d4>
   1f3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f3a8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f3ac:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f3b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f3b4:	bl	197c0 <_start@@Base+0x51a0>
   1f3b8:	str	r0, [fp, #-140]	; 0xffffff74
   1f3bc:	sub	r3, fp, #28
   1f3c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f3c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f3c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f3cc:	bl	153c4 <_start@@Base+0xda4>
   1f3d0:	str	r0, [fp, #-140]	; 0xffffff74
   1f3d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f3d8:	cmp	r3, #0
   1f3dc:	bne	1f380 <_start@@Base+0xad60>
   1f3e0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f3e4:	ldr	r3, [r3]
   1f3e8:	mov	r0, r3
   1f3ec:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   1f3f0:	mov	r3, r0
   1f3f4:	str	r3, [fp, #-32]	; 0xffffffe0
   1f3f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f3fc:	cmp	r3, #0
   1f400:	beq	21ef0 <_start@@Base+0xd8d0>
   1f404:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f408:	ldr	r3, [r3]
   1f40c:	mov	r1, #9
   1f410:	mov	r0, r3
   1f414:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1f418:	str	r0, [fp, #-20]	; 0xffffffec
   1f41c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f420:	cmp	r3, #0
   1f424:	beq	21ef0 <_start@@Base+0xd8d0>
   1f428:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f42c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f430:	str	r2, [r3]
   1f434:	b	21ce0 <_start@@Base+0xd6c0>
   1f438:	ldrd	r2, [fp, #-12]
   1f43c:	mov	r0, #0
   1f440:	mvn	r1, #0
   1f444:	and	r2, r2, r0
   1f448:	and	r3, r3, r1
   1f44c:	add	r1, pc, #308	; 0x134
   1f450:	ldrd	r0, [r1]
   1f454:	cmp	r3, r1
   1f458:	cmpeq	r2, r0
   1f45c:	bne	1f4d0 <_start@@Base+0xaeb0>
   1f460:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f464:	str	r3, [fp, #-16]
   1f468:	mov	r3, #4
   1f46c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f470:	ldr	r1, [fp, #-16]
   1f474:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f478:	bl	1552c <_start@@Base+0xf0c>
   1f47c:	str	r0, [fp, #-140]	; 0xffffff74
   1f480:	ldr	r2, [fp, #-16]
   1f484:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f488:	cmp	r2, r3
   1f48c:	beq	1f4d8 <_start@@Base+0xaeb8>
   1f490:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f494:	ldr	r2, [pc, #252]	; 1f598 <_start@@Base+0xaf78>
   1f498:	add	r2, pc, r2
   1f49c:	str	r2, [sp, #8]
   1f4a0:	str	r3, [sp, #4]
   1f4a4:	mov	r3, #8
   1f4a8:	str	r3, [sp]
   1f4ac:	mov	r3, #0
   1f4b0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f4b4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f4b8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f4bc:	bl	3c074 <flatcc_json_parser_union@@Base>
   1f4c0:	str	r0, [fp, #-140]	; 0xffffff74
   1f4c4:	b	21ce0 <_start@@Base+0xd6c0>
   1f4c8:	nop			; (mov r0, r0)
   1f4cc:	b	1f4dc <_start@@Base+0xaebc>
   1f4d0:	nop			; (mov r0, r0)
   1f4d4:	b	1f4dc <_start@@Base+0xaebc>
   1f4d8:	nop			; (mov r0, r0)
   1f4dc:	ldrd	r2, [fp, #-12]
   1f4e0:	mov	r0, #-16777216	; 0xff000000
   1f4e4:	mvn	r1, #0
   1f4e8:	and	r2, r2, r0
   1f4ec:	and	r3, r3, r1
   1f4f0:	add	r1, pc, #152	; 0x98
   1f4f4:	ldrd	r0, [r1]
   1f4f8:	cmp	r3, r1
   1f4fc:	cmpeq	r2, r0
   1f500:	bne	1f654 <_start@@Base+0xb034>
   1f504:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f508:	str	r3, [fp, #-16]
   1f50c:	mov	r3, #5
   1f510:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f514:	ldr	r1, [fp, #-16]
   1f518:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f51c:	bl	1552c <_start@@Base+0xf0c>
   1f520:	str	r0, [fp, #-140]	; 0xffffff74
   1f524:	ldr	r2, [fp, #-16]
   1f528:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f52c:	cmp	r2, r3
   1f530:	beq	1f65c <_start@@Base+0xb03c>
   1f534:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f538:	ldr	r0, [r3]
   1f53c:	mvn	r3, #-1073741824	; 0xc0000000
   1f540:	mov	r2, #2
   1f544:	mov	r1, #4
   1f548:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   1f54c:	mov	r3, r0
   1f550:	cmp	r3, #0
   1f554:	bne	21dfc <_start@@Base+0xd7dc>
   1f558:	sub	r3, fp, #28
   1f55c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f560:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f564:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f568:	bl	152dc <_start@@Base+0xcbc>
   1f56c:	str	r0, [fp, #-140]	; 0xffffff74
   1f570:	b	1f5f0 <_start@@Base+0xafd0>
   1f574:	nop			; (mov r0, r0)
   1f578:	andeq	r0, r0, r0
   1f57c:	rsbvc	r7, pc, r0, lsl #6
   1f580:	strcc	r0, [r0], #-0
   1f584:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f588:	andeq	r0, r0, r0
   1f58c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f590:	strcc	r0, [r0, #-0]
   1f594:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f598:			; <UNDEFINED> instruction: 0xffff9d78
   1f59c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f5a0:	ldr	r3, [r3]
   1f5a4:	mov	r1, #1
   1f5a8:	mov	r0, r3
   1f5ac:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   1f5b0:	str	r0, [fp, #-24]	; 0xffffffe8
   1f5b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f5b8:	cmp	r3, #0
   1f5bc:	beq	21e04 <_start@@Base+0xd7e4>
   1f5c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f5c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f5c8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f5cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f5d0:	bl	197c0 <_start@@Base+0x51a0>
   1f5d4:	str	r0, [fp, #-140]	; 0xffffff74
   1f5d8:	sub	r3, fp, #28
   1f5dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f5e0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f5e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f5e8:	bl	153c4 <_start@@Base+0xda4>
   1f5ec:	str	r0, [fp, #-140]	; 0xffffff74
   1f5f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f5f4:	cmp	r3, #0
   1f5f8:	bne	1f59c <_start@@Base+0xaf7c>
   1f5fc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f600:	ldr	r3, [r3]
   1f604:	mov	r0, r3
   1f608:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   1f60c:	mov	r3, r0
   1f610:	str	r3, [fp, #-32]	; 0xffffffe0
   1f614:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f618:	cmp	r3, #0
   1f61c:	beq	21ef0 <_start@@Base+0xd8d0>
   1f620:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f624:	ldr	r3, [r3]
   1f628:	mov	r1, #31
   1f62c:	mov	r0, r3
   1f630:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1f634:	str	r0, [fp, #-20]	; 0xffffffec
   1f638:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f63c:	cmp	r3, #0
   1f640:	beq	21ef0 <_start@@Base+0xd8d0>
   1f644:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f64c:	str	r2, [r3]
   1f650:	b	21ce0 <_start@@Base+0xd6c0>
   1f654:	nop			; (mov r0, r0)
   1f658:	b	1f660 <_start@@Base+0xb040>
   1f65c:	nop			; (mov r0, r0)
   1f660:	ldrd	r2, [fp, #-12]
   1f664:	add	r1, pc, #812	; 0x32c
   1f668:	ldrd	r0, [r1]
   1f66c:	cmp	r3, r1
   1f670:	cmpeq	r2, r0
   1f674:	bne	1f758 <_start@@Base+0xb138>
   1f678:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f67c:	add	r3, r3, #8
   1f680:	str	r3, [fp, #-140]	; 0xffffff74
   1f684:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f688:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f68c:	bl	14f70 <_start@@Base+0x950>
   1f690:	strd	r0, [fp, #-12]
   1f694:	ldrd	r2, [fp, #-12]
   1f698:	mov	r0, #0
   1f69c:	mov	r1, #-16777216	; 0xff000000
   1f6a0:	and	r2, r2, r0
   1f6a4:	and	r3, r3, r1
   1f6a8:	cmp	r3, #1694498816	; 0x65000000
   1f6ac:	cmpeq	r2, #0
   1f6b0:	bne	1f740 <_start@@Base+0xb120>
   1f6b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f6b8:	str	r3, [fp, #-16]
   1f6bc:	mov	r3, #1
   1f6c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f6c4:	ldr	r1, [fp, #-16]
   1f6c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f6cc:	bl	1552c <_start@@Base+0xf0c>
   1f6d0:	str	r0, [fp, #-140]	; 0xffffff74
   1f6d4:	ldr	r2, [fp, #-16]
   1f6d8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f6dc:	cmp	r2, r3
   1f6e0:	beq	1f728 <_start@@Base+0xb108>
   1f6e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f6e8:	ldr	r2, [pc, #720]	; 1f9c0 <_start@@Base+0xb3a0>
   1f6ec:	add	r2, pc, r2
   1f6f0:	str	r2, [sp, #12]
   1f6f4:	ldr	r2, [pc, #712]	; 1f9c4 <_start@@Base+0xb3a4>
   1f6f8:	add	r2, pc, r2
   1f6fc:	str	r2, [sp, #8]
   1f700:	str	r3, [sp, #4]
   1f704:	mov	r3, #8
   1f708:	str	r3, [sp]
   1f70c:	mov	r3, #0
   1f710:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f714:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f718:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f71c:	bl	3c244 <flatcc_json_parser_union_type@@Base>
   1f720:	str	r0, [fp, #-140]	; 0xffffff74
   1f724:	b	21ce0 <_start@@Base+0xd6c0>
   1f728:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f72c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f730:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f734:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f738:	str	r0, [fp, #-140]	; 0xffffff74
   1f73c:	b	21ce0 <_start@@Base+0xd6c0>
   1f740:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f744:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f748:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f74c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f750:	str	r0, [fp, #-140]	; 0xffffff74
   1f754:	b	21ce0 <_start@@Base+0xd6c0>
   1f758:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f75c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f760:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f764:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1f768:	str	r0, [fp, #-140]	; 0xffffff74
   1f76c:	b	21ce0 <_start@@Base+0xd6c0>
   1f770:	ldrd	r2, [fp, #-12]
   1f774:	add	r1, pc, #548	; 0x224
   1f778:	ldrd	r0, [r1]
   1f77c:	cmp	r3, r1
   1f780:	cmpeq	r2, r0
   1f784:	bhi	207a0 <_start@@Base+0xc180>
   1f788:	ldrd	r2, [fp, #-12]
   1f78c:	add	r1, pc, #532	; 0x214
   1f790:	ldrd	r0, [r1]
   1f794:	cmp	r3, r1
   1f798:	cmpeq	r2, r0
   1f79c:	bne	200c4 <_start@@Base+0xbaa4>
   1f7a0:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f7a4:	add	r3, r3, #8
   1f7a8:	str	r3, [fp, #-140]	; 0xffffff74
   1f7ac:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f7b0:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f7b4:	bl	14f70 <_start@@Base+0x950>
   1f7b8:	strd	r0, [fp, #-12]
   1f7bc:	ldrd	r2, [fp, #-12]
   1f7c0:	add	r1, pc, #488	; 0x1e8
   1f7c4:	ldrd	r0, [r1]
   1f7c8:	cmp	r3, r1
   1f7cc:	cmpeq	r2, r0
   1f7d0:	bhi	1fb9c <_start@@Base+0xb57c>
   1f7d4:	ldrd	r2, [fp, #-12]
   1f7d8:	add	r1, pc, #472	; 0x1d8
   1f7dc:	ldrd	r0, [r1]
   1f7e0:	cmp	r3, r1
   1f7e4:	cmpeq	r2, r0
   1f7e8:	bne	1f990 <_start@@Base+0xb370>
   1f7ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f7f0:	str	r3, [fp, #-16]
   1f7f4:	mov	r3, #8
   1f7f8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f7fc:	ldr	r1, [fp, #-16]
   1f800:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f804:	bl	1552c <_start@@Base+0xf0c>
   1f808:	str	r0, [fp, #-140]	; 0xffffff74
   1f80c:	ldr	r2, [fp, #-16]
   1f810:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f814:	cmp	r2, r3
   1f818:	beq	1f9cc <_start@@Base+0xb3ac>
   1f81c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f820:	ldr	r0, [r3]
   1f824:	mvn	r3, #0
   1f828:	mov	r2, #1
   1f82c:	mov	r1, #1
   1f830:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   1f834:	mov	r3, r0
   1f838:	cmp	r3, #0
   1f83c:	bne	21e0c <_start@@Base+0xd7ec>
   1f840:	sub	r3, fp, #28
   1f844:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f848:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f84c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f850:	bl	152dc <_start@@Base+0xcbc>
   1f854:	str	r0, [fp, #-140]	; 0xffffff74
   1f858:	b	1f92c <_start@@Base+0xb30c>
   1f85c:	mov	r3, #0
   1f860:	strb	r3, [fp, #-45]	; 0xffffffd3
   1f864:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f868:	ldr	r3, [r3]
   1f86c:	mov	r1, #1
   1f870:	mov	r0, r3
   1f874:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   1f878:	str	r0, [fp, #-24]	; 0xffffffe8
   1f87c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f880:	cmp	r3, #0
   1f884:	beq	21e14 <_start@@Base+0xd7f4>
   1f888:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f88c:	str	r3, [fp, #-16]
   1f890:	sub	r3, fp, #45	; 0x2d
   1f894:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f898:	ldr	r1, [fp, #-16]
   1f89c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f8a0:	bl	16374 <_start@@Base+0x1d54>
   1f8a4:	str	r0, [fp, #-140]	; 0xffffff74
   1f8a8:	ldr	r2, [fp, #-16]
   1f8ac:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f8b0:	cmp	r2, r3
   1f8b4:	bne	1f904 <_start@@Base+0xb2e4>
   1f8b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f8bc:	str	r3, [fp, #-16]
   1f8c0:	sub	r3, fp, #45	; 0x2d
   1f8c4:	str	r3, [sp]
   1f8c8:	ldr	r3, [pc, #248]	; 1f9c8 <_start@@Base+0xb3a8>
   1f8cc:	add	r3, pc, r3
   1f8d0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f8d4:	ldr	r1, [fp, #-16]
   1f8d8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f8dc:	bl	170e8 <_start@@Base+0x2ac8>
   1f8e0:	str	r0, [fp, #-140]	; 0xffffff74
   1f8e4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f8e8:	ldr	r3, [fp, #-16]
   1f8ec:	cmp	r2, r3
   1f8f0:	beq	21e14 <_start@@Base+0xd7f4>
   1f8f4:	ldr	r2, [fp, #-140]	; 0xffffff74
   1f8f8:	ldr	r3, [fp, #-144]	; 0xffffff70
   1f8fc:	cmp	r2, r3
   1f900:	beq	21e14 <_start@@Base+0xd7f4>
   1f904:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1f908:	mov	r1, r3
   1f90c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f910:	bl	14b58 <_start@@Base+0x538>
   1f914:	sub	r3, fp, #28
   1f918:	ldr	r2, [fp, #-144]	; 0xffffff70
   1f91c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1f920:	ldr	r0, [fp, #-136]	; 0xffffff78
   1f924:	bl	153c4 <_start@@Base+0xda4>
   1f928:	str	r0, [fp, #-140]	; 0xffffff74
   1f92c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f930:	cmp	r3, #0
   1f934:	bne	1f85c <_start@@Base+0xb23c>
   1f938:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f93c:	ldr	r3, [r3]
   1f940:	mov	r0, r3
   1f944:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   1f948:	mov	r3, r0
   1f94c:	str	r3, [fp, #-32]	; 0xffffffe0
   1f950:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f954:	cmp	r3, #0
   1f958:	beq	21ef0 <_start@@Base+0xd8d0>
   1f95c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1f960:	ldr	r3, [r3]
   1f964:	mov	r1, #24
   1f968:	mov	r0, r3
   1f96c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1f970:	str	r0, [fp, #-20]	; 0xffffffec
   1f974:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f978:	cmp	r3, #0
   1f97c:	beq	21ef0 <_start@@Base+0xd8d0>
   1f980:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f984:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f988:	str	r2, [r3]
   1f98c:	b	21ce0 <_start@@Base+0xd6c0>
   1f990:	nop			; (mov r0, r0)
   1f994:	b	1f9d0 <_start@@Base+0xb3b0>
   1f998:	svcpl	0x00747970
   1f99c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f9a0:	shsub8vs	pc, r2, pc	; <UNPREDICTABLE>
   1f9a4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f9a8:	cmnvs	r2, r1, ror #4
   1f9ac:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   1f9b0:	ldrbtvc	r6, [r2], #-2413	; 0xfffff693
   1f9b4:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1f9b8:	svcvs	0x006f6c73
   1f9bc:	stmdbvc	pc!, {r1, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1f9c0:			; <UNDEFINED> instruction: 0xffff9b24
   1f9c4:	andeq	r2, r4, r0, ror #22
   1f9c8:	muleq	r4, ip, r9
   1f9cc:	nop			; (mov r0, r0)
   1f9d0:	ldrd	r2, [fp, #-12]
   1f9d4:	add	r1, pc, #876	; 0x36c
   1f9d8:	ldrd	r0, [r1]
   1f9dc:	cmp	r3, r1
   1f9e0:	cmpeq	r2, r0
   1f9e4:	bne	1fb84 <_start@@Base+0xb564>
   1f9e8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1f9ec:	add	r3, r3, #8
   1f9f0:	str	r3, [fp, #-140]	; 0xffffff74
   1f9f4:	ldr	r1, [fp, #-144]	; 0xffffff70
   1f9f8:	ldr	r0, [fp, #-140]	; 0xffffff74
   1f9fc:	bl	14f70 <_start@@Base+0x950>
   1fa00:	strd	r0, [fp, #-12]
   1fa04:	ldrd	r2, [fp, #-12]
   1fa08:	mvn	r0, #255	; 0xff
   1fa0c:	mvn	r1, #0
   1fa10:	and	r2, r2, r0
   1fa14:	and	r3, r3, r1
   1fa18:	add	r1, pc, #816	; 0x330
   1fa1c:	ldrd	r0, [r1]
   1fa20:	cmp	r3, r1
   1fa24:	cmpeq	r2, r0
   1fa28:	bne	1fb6c <_start@@Base+0xb54c>
   1fa2c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa30:	str	r3, [fp, #-16]
   1fa34:	mov	r3, #7
   1fa38:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fa3c:	ldr	r1, [fp, #-16]
   1fa40:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fa44:	bl	1552c <_start@@Base+0xf0c>
   1fa48:	str	r0, [fp, #-140]	; 0xffffff74
   1fa4c:	ldr	r2, [fp, #-16]
   1fa50:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fa54:	cmp	r2, r3
   1fa58:	beq	1fb54 <_start@@Base+0xb534>
   1fa5c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fa60:	ldr	r0, [r3]
   1fa64:	mvn	r3, #-536870912	; 0xe0000000
   1fa68:	mov	r2, #4
   1fa6c:	mov	r1, #8
   1fa70:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   1fa74:	mov	r3, r0
   1fa78:	cmp	r3, #0
   1fa7c:	bne	21e1c <_start@@Base+0xd7fc>
   1fa80:	sub	r3, fp, #28
   1fa84:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fa88:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fa8c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fa90:	bl	152dc <_start@@Base+0xcbc>
   1fa94:	str	r0, [fp, #-140]	; 0xffffff74
   1fa98:	b	1faf0 <_start@@Base+0xb4d0>
   1fa9c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1faa0:	ldr	r3, [r3]
   1faa4:	mov	r1, #1
   1faa8:	mov	r0, r3
   1faac:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   1fab0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fab8:	cmp	r3, #0
   1fabc:	beq	21e24 <_start@@Base+0xd804>
   1fac0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fac4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fac8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1facc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fad0:	bl	1b95c <_start@@Base+0x733c>
   1fad4:	str	r0, [fp, #-140]	; 0xffffff74
   1fad8:	sub	r3, fp, #28
   1fadc:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fae0:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fae4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fae8:	bl	153c4 <_start@@Base+0xda4>
   1faec:	str	r0, [fp, #-140]	; 0xffffff74
   1faf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1faf4:	cmp	r3, #0
   1faf8:	bne	1fa9c <_start@@Base+0xb47c>
   1fafc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fb00:	ldr	r3, [r3]
   1fb04:	mov	r0, r3
   1fb08:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   1fb0c:	mov	r3, r0
   1fb10:	str	r3, [fp, #-32]	; 0xffffffe0
   1fb14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb18:	cmp	r3, #0
   1fb1c:	beq	21ef0 <_start@@Base+0xd8d0>
   1fb20:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fb24:	ldr	r3, [r3]
   1fb28:	mov	r1, #29
   1fb2c:	mov	r0, r3
   1fb30:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1fb34:	str	r0, [fp, #-20]	; 0xffffffec
   1fb38:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb3c:	cmp	r3, #0
   1fb40:	beq	21ef0 <_start@@Base+0xd8d0>
   1fb44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fb48:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb4c:	str	r2, [r3]
   1fb50:	b	21ce0 <_start@@Base+0xd6c0>
   1fb54:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb58:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb5c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb60:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1fb64:	str	r0, [fp, #-140]	; 0xffffff74
   1fb68:	b	21ce0 <_start@@Base+0xd6c0>
   1fb6c:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb70:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb74:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb78:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1fb7c:	str	r0, [fp, #-140]	; 0xffffff74
   1fb80:	b	21ce0 <_start@@Base+0xd6c0>
   1fb84:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fb88:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fb8c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fb90:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1fb94:	str	r0, [fp, #-140]	; 0xffffff74
   1fb98:	b	21ce0 <_start@@Base+0xd6c0>
   1fb9c:	ldrd	r2, [fp, #-12]
   1fba0:	add	r1, pc, #432	; 0x1b0
   1fba4:	ldrd	r0, [r1]
   1fba8:	cmp	r3, r1
   1fbac:	cmpeq	r2, r0
   1fbb0:	bne	1fef0 <_start@@Base+0xb8d0>
   1fbb4:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fbb8:	add	r3, r3, #8
   1fbbc:	str	r3, [fp, #-140]	; 0xffffff74
   1fbc0:	ldr	r1, [fp, #-144]	; 0xffffff70
   1fbc4:	ldr	r0, [fp, #-140]	; 0xffffff74
   1fbc8:	bl	14f70 <_start@@Base+0x950>
   1fbcc:	strd	r0, [fp, #-12]
   1fbd0:	ldrd	r2, [fp, #-12]
   1fbd4:	mov	r0, #0
   1fbd8:	ldr	r1, [pc, #384]	; 1fd60 <_start@@Base+0xb740>
   1fbdc:	and	r2, r2, r0
   1fbe0:	and	r3, r3, r1
   1fbe4:	mov	r0, #0
   1fbe8:	ldr	r1, [pc, #372]	; 1fd64 <_start@@Base+0xb744>
   1fbec:	cmp	r3, r1
   1fbf0:	cmpeq	r2, r0
   1fbf4:	bne	1fd68 <_start@@Base+0xb748>
   1fbf8:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fbfc:	str	r3, [fp, #-16]
   1fc00:	mov	r3, #2
   1fc04:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fc08:	ldr	r1, [fp, #-16]
   1fc0c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fc10:	bl	1552c <_start@@Base+0xf0c>
   1fc14:	str	r0, [fp, #-140]	; 0xffffff74
   1fc18:	ldr	r2, [fp, #-16]
   1fc1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fc20:	cmp	r2, r3
   1fc24:	beq	1fd30 <_start@@Base+0xb710>
   1fc28:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fc2c:	ldr	r3, [r3]
   1fc30:	mov	r0, r3
   1fc34:	bl	2ea54 <flatcc_builder_start_offset_vector@@Base>
   1fc38:	mov	r3, r0
   1fc3c:	cmp	r3, #0
   1fc40:	bne	21e2c <_start@@Base+0xd80c>
   1fc44:	sub	r3, fp, #28
   1fc48:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fc4c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fc50:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fc54:	bl	152dc <_start@@Base+0xcbc>
   1fc58:	str	r0, [fp, #-140]	; 0xffffff74
   1fc5c:	b	1fccc <_start@@Base+0xb6ac>
   1fc60:	sub	r3, fp, #32
   1fc64:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fc68:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fc6c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fc70:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   1fc74:	str	r0, [fp, #-140]	; 0xffffff74
   1fc78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc7c:	cmp	r3, #0
   1fc80:	beq	21ef0 <_start@@Base+0xd8d0>
   1fc84:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fc88:	ldr	r3, [r3]
   1fc8c:	mov	r1, #1
   1fc90:	mov	r0, r3
   1fc94:	bl	2e300 <flatcc_builder_extend_offset_vector@@Base>
   1fc98:	str	r0, [fp, #-20]	; 0xffffffec
   1fc9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fca0:	cmp	r3, #0
   1fca4:	beq	21ef0 <_start@@Base+0xd8d0>
   1fca8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fcac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fcb0:	str	r2, [r3]
   1fcb4:	sub	r3, fp, #28
   1fcb8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fcbc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fcc0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fcc4:	bl	153c4 <_start@@Base+0xda4>
   1fcc8:	str	r0, [fp, #-140]	; 0xffffff74
   1fccc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fcd0:	cmp	r3, #0
   1fcd4:	bne	1fc60 <_start@@Base+0xb640>
   1fcd8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fcdc:	ldr	r3, [r3]
   1fce0:	mov	r0, r3
   1fce4:	bl	300a8 <flatcc_builder_end_offset_vector@@Base>
   1fce8:	mov	r3, r0
   1fcec:	str	r3, [fp, #-32]	; 0xffffffe0
   1fcf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fcf4:	cmp	r3, #0
   1fcf8:	beq	21ef0 <_start@@Base+0xd8d0>
   1fcfc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fd00:	ldr	r3, [r3]
   1fd04:	mov	r1, #28
   1fd08:	mov	r0, r3
   1fd0c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1fd10:	str	r0, [fp, #-20]	; 0xffffffec
   1fd14:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd18:	cmp	r3, #0
   1fd1c:	beq	21ef0 <_start@@Base+0xd8d0>
   1fd20:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fd24:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fd28:	str	r2, [r3]
   1fd2c:	b	21ce0 <_start@@Base+0xd6c0>
   1fd30:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fd34:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fd38:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fd3c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1fd40:	str	r0, [fp, #-140]	; 0xffffff74
   1fd44:	b	21ce0 <_start@@Base+0xd6c0>
   1fd48:	svcvs	0x00727465
   1fd4c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1fd50:	strbvc	r7, [r3, #-1024]!	; 0xfffffc00
   1fd54:	ldrbtvs	r7, [r3], #-1138	; 0xfffffb8e
   1fd58:	ldrbtvc	r6, [r2], #-2414	; 0xfffff692
   1fd5c:	stmdbvc	pc!, {r0, r1, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   1fd60:			; <UNDEFINED> instruction: 0xffff0000
   1fd64:	ldrvs	r0, [r2, -r0]!
   1fd68:	ldrd	r2, [fp, #-12]
   1fd6c:	mov	r0, #0
   1fd70:	mov	r1, #-16777216	; 0xff000000
   1fd74:	and	r2, r2, r0
   1fd78:	and	r3, r3, r1
   1fd7c:	cmp	r3, #1728053248	; 0x67000000
   1fd80:	cmpeq	r2, #0
   1fd84:	bne	1fed8 <_start@@Base+0xb8b8>
   1fd88:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fd8c:	str	r3, [fp, #-16]
   1fd90:	mov	r3, #1
   1fd94:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fd98:	ldr	r1, [fp, #-16]
   1fd9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fda0:	bl	1552c <_start@@Base+0xf0c>
   1fda4:	str	r0, [fp, #-140]	; 0xffffff74
   1fda8:	ldr	r2, [fp, #-16]
   1fdac:	ldr	r3, [fp, #-140]	; 0xffffff74
   1fdb0:	cmp	r2, r3
   1fdb4:	beq	1fec0 <_start@@Base+0xb8a0>
   1fdb8:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fdbc:	ldr	r3, [r3]
   1fdc0:	mov	r0, r3
   1fdc4:	bl	2ea54 <flatcc_builder_start_offset_vector@@Base>
   1fdc8:	mov	r3, r0
   1fdcc:	cmp	r3, #0
   1fdd0:	bne	21e34 <_start@@Base+0xd814>
   1fdd4:	sub	r3, fp, #28
   1fdd8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fddc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fde0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fde4:	bl	152dc <_start@@Base+0xcbc>
   1fde8:	str	r0, [fp, #-140]	; 0xffffff74
   1fdec:	b	1fe5c <_start@@Base+0xb83c>
   1fdf0:	sub	r3, fp, #32
   1fdf4:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fdf8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fdfc:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fe00:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   1fe04:	str	r0, [fp, #-140]	; 0xffffff74
   1fe08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fe0c:	cmp	r3, #0
   1fe10:	beq	21ef0 <_start@@Base+0xd8d0>
   1fe14:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fe18:	ldr	r3, [r3]
   1fe1c:	mov	r1, #1
   1fe20:	mov	r0, r3
   1fe24:	bl	2e300 <flatcc_builder_extend_offset_vector@@Base>
   1fe28:	str	r0, [fp, #-20]	; 0xffffffec
   1fe2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe30:	cmp	r3, #0
   1fe34:	beq	21ef0 <_start@@Base+0xd8d0>
   1fe38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fe3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fe40:	str	r2, [r3]
   1fe44:	sub	r3, fp, #28
   1fe48:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fe4c:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fe50:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fe54:	bl	153c4 <_start@@Base+0xda4>
   1fe58:	str	r0, [fp, #-140]	; 0xffffff74
   1fe5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fe60:	cmp	r3, #0
   1fe64:	bne	1fdf0 <_start@@Base+0xb7d0>
   1fe68:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fe6c:	ldr	r3, [r3]
   1fe70:	mov	r0, r3
   1fe74:	bl	300a8 <flatcc_builder_end_offset_vector@@Base>
   1fe78:	mov	r3, r0
   1fe7c:	str	r3, [fp, #-32]	; 0xffffffe0
   1fe80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fe84:	cmp	r3, #0
   1fe88:	beq	21ef0 <_start@@Base+0xd8d0>
   1fe8c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1fe90:	ldr	r3, [r3]
   1fe94:	mov	r1, #10
   1fe98:	mov	r0, r3
   1fe9c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   1fea0:	str	r0, [fp, #-20]	; 0xffffffec
   1fea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fea8:	cmp	r3, #0
   1feac:	beq	21ef0 <_start@@Base+0xd8d0>
   1feb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1feb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1feb8:	str	r2, [r3]
   1febc:	b	21ce0 <_start@@Base+0xd6c0>
   1fec0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fec4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fec8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fecc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1fed0:	str	r0, [fp, #-140]	; 0xffffff74
   1fed4:	b	21ce0 <_start@@Base+0xd6c0>
   1fed8:	ldr	r2, [fp, #-144]	; 0xffffff70
   1fedc:	ldr	r1, [fp, #-140]	; 0xffffff74
   1fee0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1fee4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   1fee8:	str	r0, [fp, #-140]	; 0xffffff74
   1feec:	b	21ce0 <_start@@Base+0xd6c0>
   1fef0:	ldrd	r2, [fp, #-12]
   1fef4:	add	r1, pc, #756	; 0x2f4
   1fef8:	ldrd	r0, [r1]
   1fefc:	cmp	r3, r1
   1ff00:	cmpeq	r2, r0
   1ff04:	bne	200ac <_start@@Base+0xba8c>
   1ff08:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ff0c:	add	r3, r3, #8
   1ff10:	str	r3, [fp, #-140]	; 0xffffff74
   1ff14:	ldr	r1, [fp, #-144]	; 0xffffff70
   1ff18:	ldr	r0, [fp, #-140]	; 0xffffff74
   1ff1c:	bl	14f70 <_start@@Base+0x950>
   1ff20:	strd	r0, [fp, #-12]
   1ff24:	ldrd	r2, [fp, #-12]
   1ff28:	mov	r0, #0
   1ff2c:	mov	r1, #-16777216	; 0xff000000
   1ff30:	and	r2, r2, r0
   1ff34:	and	r3, r3, r1
   1ff38:	cmp	r3, #1929379840	; 0x73000000
   1ff3c:	cmpeq	r2, #0
   1ff40:	bne	20094 <_start@@Base+0xba74>
   1ff44:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ff48:	str	r3, [fp, #-16]
   1ff4c:	mov	r3, #1
   1ff50:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ff54:	ldr	r1, [fp, #-16]
   1ff58:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ff5c:	bl	1552c <_start@@Base+0xf0c>
   1ff60:	str	r0, [fp, #-140]	; 0xffffff74
   1ff64:	ldr	r2, [fp, #-16]
   1ff68:	ldr	r3, [fp, #-140]	; 0xffffff74
   1ff6c:	cmp	r2, r3
   1ff70:	beq	2007c <_start@@Base+0xba5c>
   1ff74:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ff78:	ldr	r3, [r3]
   1ff7c:	mov	r0, r3
   1ff80:	bl	2ea54 <flatcc_builder_start_offset_vector@@Base>
   1ff84:	mov	r3, r0
   1ff88:	cmp	r3, #0
   1ff8c:	bne	21e3c <_start@@Base+0xd81c>
   1ff90:	sub	r3, fp, #28
   1ff94:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ff98:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ff9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ffa0:	bl	152dc <_start@@Base+0xcbc>
   1ffa4:	str	r0, [fp, #-140]	; 0xffffff74
   1ffa8:	b	20018 <_start@@Base+0xb9f8>
   1ffac:	sub	r3, fp, #32
   1ffb0:	ldr	r2, [fp, #-144]	; 0xffffff70
   1ffb4:	ldr	r1, [fp, #-140]	; 0xffffff74
   1ffb8:	ldr	r0, [fp, #-136]	; 0xffffff78
   1ffbc:	bl	1e4c4 <_start@@Base+0x9ea4>
   1ffc0:	str	r0, [fp, #-140]	; 0xffffff74
   1ffc4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ffc8:	cmp	r3, #0
   1ffcc:	beq	21ef0 <_start@@Base+0xd8d0>
   1ffd0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1ffd4:	ldr	r3, [r3]
   1ffd8:	mov	r1, #1
   1ffdc:	mov	r0, r3
   1ffe0:	bl	2e300 <flatcc_builder_extend_offset_vector@@Base>
   1ffe4:	str	r0, [fp, #-20]	; 0xffffffec
   1ffe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ffec:	cmp	r3, #0
   1fff0:	beq	21ef0 <_start@@Base+0xd8d0>
   1fff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1fff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fffc:	str	r2, [r3]
   20000:	sub	r3, fp, #28
   20004:	ldr	r2, [fp, #-144]	; 0xffffff70
   20008:	ldr	r1, [fp, #-140]	; 0xffffff74
   2000c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20010:	bl	153c4 <_start@@Base+0xda4>
   20014:	str	r0, [fp, #-140]	; 0xffffff74
   20018:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2001c:	cmp	r3, #0
   20020:	bne	1ffac <_start@@Base+0xb98c>
   20024:	ldr	r3, [fp, #-136]	; 0xffffff78
   20028:	ldr	r3, [r3]
   2002c:	mov	r0, r3
   20030:	bl	300a8 <flatcc_builder_end_offset_vector@@Base>
   20034:	mov	r3, r0
   20038:	str	r3, [fp, #-32]	; 0xffffffe0
   2003c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20040:	cmp	r3, #0
   20044:	beq	21ef0 <_start@@Base+0xd8d0>
   20048:	ldr	r3, [fp, #-136]	; 0xffffff78
   2004c:	ldr	r3, [r3]
   20050:	mov	r1, #11
   20054:	mov	r0, r3
   20058:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   2005c:	str	r0, [fp, #-20]	; 0xffffffec
   20060:	ldr	r3, [fp, #-20]	; 0xffffffec
   20064:	cmp	r3, #0
   20068:	beq	21ef0 <_start@@Base+0xd8d0>
   2006c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20070:	ldr	r3, [fp, #-20]	; 0xffffffec
   20074:	str	r2, [r3]
   20078:	b	21ce0 <_start@@Base+0xd6c0>
   2007c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20080:	ldr	r1, [fp, #-140]	; 0xffffff74
   20084:	ldr	r0, [fp, #-136]	; 0xffffff78
   20088:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2008c:	str	r0, [fp, #-140]	; 0xffffff74
   20090:	b	21ce0 <_start@@Base+0xd6c0>
   20094:	ldr	r2, [fp, #-144]	; 0xffffff70
   20098:	ldr	r1, [fp, #-140]	; 0xffffff74
   2009c:	ldr	r0, [fp, #-136]	; 0xffffff78
   200a0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   200a4:	str	r0, [fp, #-140]	; 0xffffff74
   200a8:	b	21ce0 <_start@@Base+0xd6c0>
   200ac:	ldr	r2, [fp, #-144]	; 0xffffff70
   200b0:	ldr	r1, [fp, #-140]	; 0xffffff74
   200b4:	ldr	r0, [fp, #-136]	; 0xffffff78
   200b8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   200bc:	str	r0, [fp, #-140]	; 0xffffff74
   200c0:	b	21ce0 <_start@@Base+0xd6c0>
   200c4:	ldrd	r2, [fp, #-12]
   200c8:	add	r1, pc, #296	; 0x128
   200cc:	ldrd	r0, [r1]
   200d0:	cmp	r3, r1
   200d4:	cmpeq	r2, r0
   200d8:	bhi	20368 <_start@@Base+0xbd48>
   200dc:	ldrd	r2, [fp, #-12]
   200e0:	add	r1, pc, #280	; 0x118
   200e4:	ldrd	r0, [r1]
   200e8:	cmp	r3, r1
   200ec:	cmpeq	r2, r0
   200f0:	bne	20210 <_start@@Base+0xbbf0>
   200f4:	ldr	r3, [fp, #-140]	; 0xffffff74
   200f8:	add	r3, r3, #8
   200fc:	str	r3, [fp, #-140]	; 0xffffff74
   20100:	ldr	r1, [fp, #-144]	; 0xffffff70
   20104:	ldr	r0, [fp, #-140]	; 0xffffff74
   20108:	bl	14f70 <_start@@Base+0x950>
   2010c:	strd	r0, [fp, #-12]
   20110:	ldrd	r2, [fp, #-12]
   20114:	mov	r0, #0
   20118:	ldr	r1, [pc, #232]	; 20208 <_start@@Base+0xbbe8>
   2011c:	and	r2, r2, r0
   20120:	and	r3, r3, r1
   20124:	mov	r0, #0
   20128:	ldr	r1, [pc, #220]	; 2020c <_start@@Base+0xbbec>
   2012c:	cmp	r3, r1
   20130:	cmpeq	r2, r0
   20134:	bne	201d8 <_start@@Base+0xbbb8>
   20138:	ldr	r3, [fp, #-140]	; 0xffffff74
   2013c:	str	r3, [fp, #-16]
   20140:	mov	r3, #2
   20144:	ldr	r2, [fp, #-144]	; 0xffffff70
   20148:	ldr	r1, [fp, #-16]
   2014c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20150:	bl	1552c <_start@@Base+0xf0c>
   20154:	str	r0, [fp, #-140]	; 0xffffff74
   20158:	ldr	r2, [fp, #-16]
   2015c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20160:	cmp	r2, r3
   20164:	beq	201c0 <_start@@Base+0xbba0>
   20168:	sub	r3, fp, #32
   2016c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20170:	ldr	r1, [fp, #-140]	; 0xffffff74
   20174:	ldr	r0, [fp, #-136]	; 0xffffff78
   20178:	bl	1e0b8 <_start@@Base+0x9a98>
   2017c:	str	r0, [fp, #-140]	; 0xffffff74
   20180:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20184:	cmp	r3, #0
   20188:	beq	21ef0 <_start@@Base+0xd8d0>
   2018c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20190:	ldr	r3, [r3]
   20194:	mov	r1, #35	; 0x23
   20198:	mov	r0, r3
   2019c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   201a0:	str	r0, [fp, #-20]	; 0xffffffec
   201a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   201a8:	cmp	r3, #0
   201ac:	beq	21ef0 <_start@@Base+0xd8d0>
   201b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   201b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   201b8:	str	r2, [r3]
   201bc:	b	21ce0 <_start@@Base+0xd6c0>
   201c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   201c4:	ldr	r1, [fp, #-140]	; 0xffffff74
   201c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   201cc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   201d0:	str	r0, [fp, #-140]	; 0xffffff74
   201d4:	b	21ce0 <_start@@Base+0xd6c0>
   201d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   201dc:	ldr	r1, [fp, #-140]	; 0xffffff74
   201e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   201e4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   201e8:	str	r0, [fp, #-140]	; 0xffffff74
   201ec:	b	21ce0 <_start@@Base+0xd6c0>
   201f0:	cmnvs	r2, r5, ror #24
   201f4:	stmdbvc	pc!, {r2, r4, r5, r6, r9, sl, sp, lr}^	; <UNPREDICTABLE>
   201f8:	strbvs	r7, [sp, #-115]!	; 0xffffff8d
   201fc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20200:	rsbvs	r7, r1, #-1811939327	; 0x94000001
   20204:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20208:			; <UNDEFINED> instruction: 0xffff0000
   2020c:	ldrtcc	r0, [r4], -r0
   20210:	ldrd	r2, [fp, #-12]
   20214:	add	r1, pc, #972	; 0x3cc
   20218:	ldrd	r0, [r1]
   2021c:	cmp	r3, r1
   20220:	cmpeq	r2, r0
   20224:	bne	20350 <_start@@Base+0xbd30>
   20228:	ldr	r3, [fp, #-140]	; 0xffffff74
   2022c:	str	r3, [fp, #-16]
   20230:	mov	r3, #8
   20234:	ldr	r2, [fp, #-144]	; 0xffffff70
   20238:	ldr	r1, [fp, #-16]
   2023c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20240:	bl	1552c <_start@@Base+0xf0c>
   20244:	str	r0, [fp, #-140]	; 0xffffff74
   20248:	ldr	r2, [fp, #-16]
   2024c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20250:	cmp	r2, r3
   20254:	beq	20338 <_start@@Base+0xbd18>
   20258:	mov	r3, #0
   2025c:	strb	r3, [fp, #-46]	; 0xffffffd2
   20260:	ldr	r3, [fp, #-140]	; 0xffffff74
   20264:	str	r3, [fp, #-16]
   20268:	sub	r3, fp, #46	; 0x2e
   2026c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20270:	ldr	r1, [fp, #-16]
   20274:	ldr	r0, [fp, #-136]	; 0xffffff78
   20278:	bl	16374 <_start@@Base+0x1d54>
   2027c:	str	r0, [fp, #-140]	; 0xffffff74
   20280:	ldr	r2, [fp, #-16]
   20284:	ldr	r3, [fp, #-140]	; 0xffffff74
   20288:	cmp	r2, r3
   2028c:	bne	202dc <_start@@Base+0xbcbc>
   20290:	ldr	r3, [fp, #-140]	; 0xffffff74
   20294:	str	r3, [fp, #-16]
   20298:	sub	r3, fp, #46	; 0x2e
   2029c:	str	r3, [sp]
   202a0:	ldr	r3, [pc, #868]	; 2060c <_start@@Base+0xbfec>
   202a4:	add	r3, pc, r3
   202a8:	ldr	r2, [fp, #-144]	; 0xffffff70
   202ac:	ldr	r1, [fp, #-16]
   202b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   202b4:	bl	170e8 <_start@@Base+0x2ac8>
   202b8:	str	r0, [fp, #-140]	; 0xffffff74
   202bc:	ldr	r2, [fp, #-140]	; 0xffffff74
   202c0:	ldr	r3, [fp, #-16]
   202c4:	cmp	r2, r3
   202c8:	beq	21ef0 <_start@@Base+0xd8d0>
   202cc:	ldr	r2, [fp, #-140]	; 0xffffff74
   202d0:	ldr	r3, [fp, #-144]	; 0xffffff70
   202d4:	cmp	r2, r3
   202d8:	beq	21ef0 <_start@@Base+0xd8d0>
   202dc:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   202e0:	cmp	r3, #1
   202e4:	bne	202fc <_start@@Base+0xbcdc>
   202e8:	ldr	r3, [fp, #-136]	; 0xffffff78
   202ec:	ldr	r3, [r3, #8]
   202f0:	and	r3, r3, #2
   202f4:	cmp	r3, #0
   202f8:	beq	21ce0 <_start@@Base+0xd6c0>
   202fc:	ldr	r3, [fp, #-136]	; 0xffffff78
   20300:	ldr	r0, [r3]
   20304:	mov	r3, #1
   20308:	mov	r2, #1
   2030c:	mov	r1, #15
   20310:	bl	31134 <flatcc_builder_table_add@@Base>
   20314:	str	r0, [fp, #-24]	; 0xffffffe8
   20318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2031c:	cmp	r3, #0
   20320:	beq	21e44 <_start@@Base+0xd824>
   20324:	ldrb	r3, [fp, #-46]	; 0xffffffd2
   20328:	mov	r1, r3
   2032c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20330:	bl	14b58 <_start@@Base+0x538>
   20334:	b	21ce0 <_start@@Base+0xd6c0>
   20338:	ldr	r2, [fp, #-144]	; 0xffffff70
   2033c:	ldr	r1, [fp, #-140]	; 0xffffff74
   20340:	ldr	r0, [fp, #-136]	; 0xffffff78
   20344:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20348:	str	r0, [fp, #-140]	; 0xffffff74
   2034c:	b	21ce0 <_start@@Base+0xd6c0>
   20350:	ldr	r2, [fp, #-144]	; 0xffffff70
   20354:	ldr	r1, [fp, #-140]	; 0xffffff74
   20358:	ldr	r0, [fp, #-136]	; 0xffffff78
   2035c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20360:	str	r0, [fp, #-140]	; 0xffffff74
   20364:	b	21ce0 <_start@@Base+0xd6c0>
   20368:	ldrd	r2, [fp, #-12]
   2036c:	add	r1, pc, #636	; 0x27c
   20370:	ldrd	r0, [r1]
   20374:	cmp	r3, r1
   20378:	cmpeq	r2, r0
   2037c:	bhi	204a4 <_start@@Base+0xbe84>
   20380:	ldrd	r2, [fp, #-12]
   20384:	add	r1, pc, #620	; 0x26c
   20388:	ldrd	r0, [r1]
   2038c:	cmp	r3, r1
   20390:	cmpeq	r2, r0
   20394:	bne	2048c <_start@@Base+0xbe6c>
   20398:	ldr	r3, [fp, #-140]	; 0xffffff74
   2039c:	add	r3, r3, #8
   203a0:	str	r3, [fp, #-140]	; 0xffffff74
   203a4:	ldr	r1, [fp, #-144]	; 0xffffff70
   203a8:	ldr	r0, [fp, #-140]	; 0xffffff74
   203ac:	bl	14f70 <_start@@Base+0x950>
   203b0:	strd	r0, [fp, #-12]
   203b4:	ldrd	r2, [fp, #-12]
   203b8:	mov	r0, #0
   203bc:	mov	r1, #-16777216	; 0xff000000
   203c0:	and	r2, r2, r0
   203c4:	and	r3, r3, r1
   203c8:	cmp	r3, #2030043136	; 0x79000000
   203cc:	cmpeq	r2, #0
   203d0:	bne	20474 <_start@@Base+0xbe54>
   203d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   203d8:	str	r3, [fp, #-16]
   203dc:	mov	r3, #1
   203e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   203e4:	ldr	r1, [fp, #-16]
   203e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   203ec:	bl	1552c <_start@@Base+0xf0c>
   203f0:	str	r0, [fp, #-140]	; 0xffffff74
   203f4:	ldr	r2, [fp, #-16]
   203f8:	ldr	r3, [fp, #-140]	; 0xffffff74
   203fc:	cmp	r2, r3
   20400:	beq	2045c <_start@@Base+0xbe3c>
   20404:	sub	r3, fp, #32
   20408:	ldr	r2, [fp, #-144]	; 0xffffff70
   2040c:	ldr	r1, [fp, #-140]	; 0xffffff74
   20410:	ldr	r0, [fp, #-136]	; 0xffffff78
   20414:	bl	1bd1c <_start@@Base+0x76fc>
   20418:	str	r0, [fp, #-140]	; 0xffffff74
   2041c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   20420:	cmp	r3, #0
   20424:	beq	21ef0 <_start@@Base+0xd8d0>
   20428:	ldr	r3, [fp, #-136]	; 0xffffff78
   2042c:	ldr	r3, [r3]
   20430:	mov	r1, #14
   20434:	mov	r0, r3
   20438:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   2043c:	str	r0, [fp, #-20]	; 0xffffffec
   20440:	ldr	r3, [fp, #-20]	; 0xffffffec
   20444:	cmp	r3, #0
   20448:	beq	21ef0 <_start@@Base+0xd8d0>
   2044c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20450:	ldr	r3, [fp, #-20]	; 0xffffffec
   20454:	str	r2, [r3]
   20458:	b	21ce0 <_start@@Base+0xd6c0>
   2045c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20460:	ldr	r1, [fp, #-140]	; 0xffffff74
   20464:	ldr	r0, [fp, #-136]	; 0xffffff78
   20468:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2046c:	str	r0, [fp, #-140]	; 0xffffff74
   20470:	b	21ce0 <_start@@Base+0xd6c0>
   20474:	ldr	r2, [fp, #-144]	; 0xffffff70
   20478:	ldr	r1, [fp, #-140]	; 0xffffff74
   2047c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20480:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20484:	str	r0, [fp, #-140]	; 0xffffff74
   20488:	b	21ce0 <_start@@Base+0xd6c0>
   2048c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20490:	ldr	r1, [fp, #-140]	; 0xffffff74
   20494:	ldr	r0, [fp, #-136]	; 0xffffff78
   20498:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2049c:	str	r0, [fp, #-140]	; 0xffffff74
   204a0:	b	21ce0 <_start@@Base+0xd6c0>
   204a4:	ldrd	r2, [fp, #-12]
   204a8:	ldr	r0, [pc, #352]	; 20610 <_start@@Base+0xbff0>
   204ac:	mvn	r1, #0
   204b0:	and	r2, r2, r0
   204b4:	and	r3, r3, r1
   204b8:	add	r1, pc, #320	; 0x140
   204bc:	ldrd	r0, [r1]
   204c0:	cmp	r3, r1
   204c4:	cmpeq	r2, r0
   204c8:	bne	20630 <_start@@Base+0xc010>
   204cc:	ldr	r3, [fp, #-140]	; 0xffffff74
   204d0:	str	r3, [fp, #-16]
   204d4:	mov	r3, #6
   204d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   204dc:	ldr	r1, [fp, #-16]
   204e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   204e4:	bl	1552c <_start@@Base+0xf0c>
   204e8:	str	r0, [fp, #-140]	; 0xffffff74
   204ec:	ldr	r2, [fp, #-16]
   204f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   204f4:	cmp	r2, r3
   204f8:	beq	20618 <_start@@Base+0xbff8>
   204fc:	mov	r3, #0
   20500:	str	r3, [fp, #-52]	; 0xffffffcc
   20504:	ldr	r3, [fp, #-140]	; 0xffffff74
   20508:	str	r3, [fp, #-16]
   2050c:	sub	r3, fp, #52	; 0x34
   20510:	ldr	r2, [fp, #-144]	; 0xffffff70
   20514:	ldr	r1, [fp, #-16]
   20518:	ldr	r0, [fp, #-136]	; 0xffffff78
   2051c:	bl	3b120 <flatcc_json_parser_float@@Base>
   20520:	str	r0, [fp, #-140]	; 0xffffff74
   20524:	ldr	r2, [fp, #-16]
   20528:	ldr	r3, [fp, #-140]	; 0xffffff74
   2052c:	cmp	r2, r3
   20530:	bne	20580 <_start@@Base+0xbf60>
   20534:	ldr	r3, [fp, #-140]	; 0xffffff74
   20538:	str	r3, [fp, #-16]
   2053c:	sub	r3, fp, #52	; 0x34
   20540:	str	r3, [sp]
   20544:	ldr	r3, [pc, #200]	; 20614 <_start@@Base+0xbff4>
   20548:	add	r3, pc, r3
   2054c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20550:	ldr	r1, [fp, #-16]
   20554:	ldr	r0, [fp, #-136]	; 0xffffff78
   20558:	bl	17270 <_start@@Base+0x2c50>
   2055c:	str	r0, [fp, #-140]	; 0xffffff74
   20560:	ldr	r2, [fp, #-140]	; 0xffffff74
   20564:	ldr	r3, [fp, #-16]
   20568:	cmp	r2, r3
   2056c:	beq	21ef0 <_start@@Base+0xd8d0>
   20570:	ldr	r2, [fp, #-140]	; 0xffffff74
   20574:	ldr	r3, [fp, #-144]	; 0xffffff70
   20578:	cmp	r2, r3
   2057c:	beq	21ef0 <_start@@Base+0xd8d0>
   20580:	vldr	s15, [fp, #-52]	; 0xffffffcc
   20584:	vldr	s14, [pc, #124]	; 20608 <_start@@Base+0xbfe8>
   20588:	vcmp.f32	s15, s14
   2058c:	vmrs	APSR_nzcv, fpscr
   20590:	bne	205a8 <_start@@Base+0xbf88>
   20594:	ldr	r3, [fp, #-136]	; 0xffffff78
   20598:	ldr	r3, [r3, #8]
   2059c:	and	r3, r3, #2
   205a0:	cmp	r3, #0
   205a4:	beq	21ce0 <_start@@Base+0xd6c0>
   205a8:	ldr	r3, [fp, #-136]	; 0xffffff78
   205ac:	ldr	r0, [r3]
   205b0:	mov	r3, #4
   205b4:	mov	r2, #4
   205b8:	mov	r1, #26
   205bc:	bl	31134 <flatcc_builder_table_add@@Base>
   205c0:	str	r0, [fp, #-24]	; 0xffffffe8
   205c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205c8:	cmp	r3, #0
   205cc:	beq	21e4c <_start@@Base+0xd82c>
   205d0:	vldr	s15, [fp, #-52]	; 0xffffffcc
   205d4:	vmov.f32	s0, s15
   205d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   205dc:	bl	14a90 <_start@@Base+0x470>
   205e0:	b	21ce0 <_start@@Base+0xd6c0>
   205e4:	nop			; (mov r0, r0)
   205e8:	rsbvs	r6, pc, #108, 30	; 0x1b0
   205ec:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   205f0:	ldrbvs	pc, [pc, #4095]!	; 215f7 <_start@@Base+0xcfd7>	; <UNPREDICTABLE>
   205f4:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   205f8:	strbvs	r7, [sp, #-116]!	; 0xffffff8c
   205fc:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20600:	ldrtvs	r0, [r2], -r0
   20604:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20608:	submi	r0, r0, r0
   2060c:	ldrdeq	r1, [r4], -r0
   20610:			; <UNDEFINED> instruction: 0xffff0000
   20614:	andeq	r1, r4, r8, lsr sp
   20618:	ldr	r2, [fp, #-144]	; 0xffffff70
   2061c:	ldr	r1, [fp, #-140]	; 0xffffff74
   20620:	ldr	r0, [fp, #-136]	; 0xffffff78
   20624:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20628:	str	r0, [fp, #-140]	; 0xffffff74
   2062c:	b	21ce0 <_start@@Base+0xd6c0>
   20630:	ldrd	r2, [fp, #-12]
   20634:	mov	r0, #-16777216	; 0xff000000
   20638:	mvn	r1, #0
   2063c:	and	r2, r2, r0
   20640:	and	r3, r3, r1
   20644:	add	r1, pc, #732	; 0x2dc
   20648:	ldrd	r0, [r1]
   2064c:	cmp	r3, r1
   20650:	cmpeq	r2, r0
   20654:	bne	20788 <_start@@Base+0xc168>
   20658:	ldr	r3, [fp, #-140]	; 0xffffff74
   2065c:	str	r3, [fp, #-16]
   20660:	mov	r3, #5
   20664:	ldr	r2, [fp, #-144]	; 0xffffff70
   20668:	ldr	r1, [fp, #-16]
   2066c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20670:	bl	1552c <_start@@Base+0xf0c>
   20674:	str	r0, [fp, #-140]	; 0xffffff74
   20678:	ldr	r2, [fp, #-16]
   2067c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20680:	cmp	r2, r3
   20684:	beq	20770 <_start@@Base+0xc150>
   20688:	mov	r3, #0
   2068c:	str	r3, [fp, #-56]	; 0xffffffc8
   20690:	ldr	r3, [fp, #-140]	; 0xffffff74
   20694:	str	r3, [fp, #-16]
   20698:	sub	r3, fp, #56	; 0x38
   2069c:	ldr	r2, [fp, #-144]	; 0xffffff70
   206a0:	ldr	r1, [fp, #-16]
   206a4:	ldr	r0, [fp, #-136]	; 0xffffff78
   206a8:	bl	3b120 <flatcc_json_parser_float@@Base>
   206ac:	str	r0, [fp, #-140]	; 0xffffff74
   206b0:	ldr	r2, [fp, #-16]
   206b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   206b8:	cmp	r2, r3
   206bc:	bne	2070c <_start@@Base+0xc0ec>
   206c0:	ldr	r3, [fp, #-140]	; 0xffffff74
   206c4:	str	r3, [fp, #-16]
   206c8:	sub	r3, fp, #56	; 0x38
   206cc:	str	r3, [sp]
   206d0:	ldr	r3, [pc, #620]	; 20944 <_start@@Base+0xc324>
   206d4:	add	r3, pc, r3
   206d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   206dc:	ldr	r1, [fp, #-16]
   206e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   206e4:	bl	17270 <_start@@Base+0x2c50>
   206e8:	str	r0, [fp, #-140]	; 0xffffff74
   206ec:	ldr	r2, [fp, #-140]	; 0xffffff74
   206f0:	ldr	r3, [fp, #-16]
   206f4:	cmp	r2, r3
   206f8:	beq	21ef0 <_start@@Base+0xd8d0>
   206fc:	ldr	r2, [fp, #-140]	; 0xffffff74
   20700:	ldr	r3, [fp, #-144]	; 0xffffff70
   20704:	cmp	r2, r3
   20708:	beq	21ef0 <_start@@Base+0xd8d0>
   2070c:	vldr	s15, [fp, #-56]	; 0xffffffc8
   20710:	vldr	s14, [pc, #552]	; 20940 <_start@@Base+0xc320>
   20714:	vcmp.f32	s15, s14
   20718:	vmrs	APSR_nzcv, fpscr
   2071c:	bne	20734 <_start@@Base+0xc114>
   20720:	ldr	r3, [fp, #-136]	; 0xffffff78
   20724:	ldr	r3, [r3, #8]
   20728:	and	r3, r3, #2
   2072c:	cmp	r3, #0
   20730:	beq	21ce0 <_start@@Base+0xd6c0>
   20734:	ldr	r3, [fp, #-136]	; 0xffffff78
   20738:	ldr	r0, [r3]
   2073c:	mov	r3, #4
   20740:	mov	r2, #4
   20744:	mov	r1, #25
   20748:	bl	31134 <flatcc_builder_table_add@@Base>
   2074c:	str	r0, [fp, #-24]	; 0xffffffe8
   20750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20754:	cmp	r3, #0
   20758:	beq	21e54 <_start@@Base+0xd834>
   2075c:	vldr	s15, [fp, #-56]	; 0xffffffc8
   20760:	vmov.f32	s0, s15
   20764:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20768:	bl	14a90 <_start@@Base+0x470>
   2076c:	b	21ce0 <_start@@Base+0xd6c0>
   20770:	ldr	r2, [fp, #-144]	; 0xffffff70
   20774:	ldr	r1, [fp, #-140]	; 0xffffff74
   20778:	ldr	r0, [fp, #-136]	; 0xffffff78
   2077c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20780:	str	r0, [fp, #-140]	; 0xffffff74
   20784:	b	21ce0 <_start@@Base+0xd6c0>
   20788:	ldr	r2, [fp, #-144]	; 0xffffff70
   2078c:	ldr	r1, [fp, #-140]	; 0xffffff74
   20790:	ldr	r0, [fp, #-136]	; 0xffffff78
   20794:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20798:	str	r0, [fp, #-140]	; 0xffffff74
   2079c:	b	21ce0 <_start@@Base+0xd6c0>
   207a0:	ldrd	r2, [fp, #-12]
   207a4:	add	r1, pc, #388	; 0x184
   207a8:	ldrd	r0, [r1]
   207ac:	cmp	r3, r1
   207b0:	cmpeq	r2, r0
   207b4:	bhi	20950 <_start@@Base+0xc330>
   207b8:	ldrd	r2, [fp, #-12]
   207bc:	ldr	r0, [pc, #388]	; 20948 <_start@@Base+0xc328>
   207c0:	mvn	r1, #0
   207c4:	and	r2, r2, r0
   207c8:	and	r3, r3, r1
   207cc:	add	r1, pc, #356	; 0x164
   207d0:	ldrd	r0, [r1]
   207d4:	cmp	r3, r1
   207d8:	cmpeq	r2, r0
   207dc:	bne	2090c <_start@@Base+0xc2ec>
   207e0:	ldr	r3, [fp, #-140]	; 0xffffff74
   207e4:	str	r3, [fp, #-16]
   207e8:	mov	r3, #6
   207ec:	ldr	r2, [fp, #-144]	; 0xffffff70
   207f0:	ldr	r1, [fp, #-16]
   207f4:	ldr	r0, [fp, #-136]	; 0xffffff78
   207f8:	bl	1552c <_start@@Base+0xf0c>
   207fc:	str	r0, [fp, #-140]	; 0xffffff74
   20800:	ldr	r2, [fp, #-16]
   20804:	ldr	r3, [fp, #-140]	; 0xffffff74
   20808:	cmp	r2, r3
   2080c:	beq	208f4 <_start@@Base+0xc2d4>
   20810:	mov	r3, #0
   20814:	str	r3, [fp, #-60]	; 0xffffffc4
   20818:	ldr	r3, [fp, #-140]	; 0xffffff74
   2081c:	str	r3, [fp, #-16]
   20820:	sub	r3, fp, #60	; 0x3c
   20824:	ldr	r2, [fp, #-144]	; 0xffffff70
   20828:	ldr	r1, [fp, #-16]
   2082c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20830:	bl	3b120 <flatcc_json_parser_float@@Base>
   20834:	str	r0, [fp, #-140]	; 0xffffff74
   20838:	ldr	r2, [fp, #-16]
   2083c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20840:	cmp	r2, r3
   20844:	bne	20894 <_start@@Base+0xc274>
   20848:	ldr	r3, [fp, #-140]	; 0xffffff74
   2084c:	str	r3, [fp, #-16]
   20850:	sub	r3, fp, #60	; 0x3c
   20854:	str	r3, [sp]
   20858:	ldr	r3, [pc, #236]	; 2094c <_start@@Base+0xc32c>
   2085c:	add	r3, pc, r3
   20860:	ldr	r2, [fp, #-144]	; 0xffffff70
   20864:	ldr	r1, [fp, #-16]
   20868:	ldr	r0, [fp, #-136]	; 0xffffff78
   2086c:	bl	17270 <_start@@Base+0x2c50>
   20870:	str	r0, [fp, #-140]	; 0xffffff74
   20874:	ldr	r2, [fp, #-140]	; 0xffffff74
   20878:	ldr	r3, [fp, #-16]
   2087c:	cmp	r2, r3
   20880:	beq	21ef0 <_start@@Base+0xd8d0>
   20884:	ldr	r2, [fp, #-140]	; 0xffffff74
   20888:	ldr	r3, [fp, #-144]	; 0xffffff70
   2088c:	cmp	r2, r3
   20890:	beq	21ef0 <_start@@Base+0xd8d0>
   20894:	vldr	s15, [fp, #-60]	; 0xffffffc4
   20898:	vcmp.f32	s15, #0.0
   2089c:	vmrs	APSR_nzcv, fpscr
   208a0:	bne	208b8 <_start@@Base+0xc298>
   208a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   208a8:	ldr	r3, [r3, #8]
   208ac:	and	r3, r3, #2
   208b0:	cmp	r3, #0
   208b4:	beq	21ce0 <_start@@Base+0xd6c0>
   208b8:	ldr	r3, [fp, #-136]	; 0xffffff78
   208bc:	ldr	r0, [r3]
   208c0:	mov	r3, #4
   208c4:	mov	r2, #4
   208c8:	mov	r1, #27
   208cc:	bl	31134 <flatcc_builder_table_add@@Base>
   208d0:	str	r0, [fp, #-24]	; 0xffffffe8
   208d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   208d8:	cmp	r3, #0
   208dc:	beq	21e5c <_start@@Base+0xd83c>
   208e0:	vldr	s15, [fp, #-60]	; 0xffffffc4
   208e4:	vmov.f32	s0, s15
   208e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   208ec:	bl	14a90 <_start@@Base+0x470>
   208f0:	b	21ce0 <_start@@Base+0xd6c0>
   208f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   208f8:	ldr	r1, [fp, #-140]	; 0xffffff74
   208fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   20900:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20904:	str	r0, [fp, #-140]	; 0xffffff74
   20908:	b	21ce0 <_start@@Base+0xd6c0>
   2090c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20910:	ldr	r1, [fp, #-140]	; 0xffffff74
   20914:	ldr	r0, [fp, #-136]	; 0xffffff78
   20918:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2091c:	str	r0, [fp, #-140]	; 0xffffff74
   20920:	b	21ce0 <_start@@Base+0xd6c0>
   20924:	nop			; (mov r0, r0)
   20928:	strvs	r0, [r0], -r0
   2092c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20930:	stmdavs	r1!, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}^
   20934:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20938:	ldrtvs	r0, [r3], -r0
   2093c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20940:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   20944:			; <UNDEFINED> instruction: 0x00041bb8
   20948:			; <UNDEFINED> instruction: 0xffff0000
   2094c:	andeq	r1, r4, ip, lsr sl
   20950:	ldrd	r2, [fp, #-12]
   20954:	add	r1, pc, #764	; 0x2fc
   20958:	ldrd	r0, [r1]
   2095c:	cmp	r3, r1
   20960:	cmpeq	r2, r0
   20964:	bne	214ec <_start@@Base+0xcecc>
   20968:	ldr	r3, [fp, #-140]	; 0xffffff74
   2096c:	add	r3, r3, #8
   20970:	str	r3, [fp, #-140]	; 0xffffff74
   20974:	ldr	r1, [fp, #-144]	; 0xffffff70
   20978:	ldr	r0, [fp, #-140]	; 0xffffff74
   2097c:	bl	14f70 <_start@@Base+0x950>
   20980:	strd	r0, [fp, #-12]
   20984:	ldrd	r2, [fp, #-12]
   20988:	add	r1, pc, #720	; 0x2d0
   2098c:	ldrd	r0, [r1]
   20990:	cmp	r3, r1
   20994:	cmpeq	r2, r0
   20998:	bhi	20c78 <_start@@Base+0xc658>
   2099c:	ldrd	r2, [fp, #-12]
   209a0:	add	r1, pc, #704	; 0x2c0
   209a4:	ldrd	r0, [r1]
   209a8:	cmp	r3, r1
   209ac:	cmpeq	r2, r0
   209b0:	bne	20c40 <_start@@Base+0xc620>
   209b4:	ldr	r3, [fp, #-140]	; 0xffffff74
   209b8:	str	r3, [fp, #-16]
   209bc:	mov	r3, #8
   209c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   209c4:	ldr	r1, [fp, #-16]
   209c8:	ldr	r0, [fp, #-136]	; 0xffffff78
   209cc:	bl	1552c <_start@@Base+0xf0c>
   209d0:	str	r0, [fp, #-140]	; 0xffffff74
   209d4:	ldr	r2, [fp, #-16]
   209d8:	ldr	r3, [fp, #-140]	; 0xffffff74
   209dc:	cmp	r2, r3
   209e0:	beq	20ac4 <_start@@Base+0xc4a4>
   209e4:	mov	r3, #0
   209e8:	str	r3, [fp, #-64]	; 0xffffffc0
   209ec:	ldr	r3, [fp, #-140]	; 0xffffff74
   209f0:	str	r3, [fp, #-16]
   209f4:	sub	r3, fp, #64	; 0x40
   209f8:	ldr	r2, [fp, #-144]	; 0xffffff70
   209fc:	ldr	r1, [fp, #-16]
   20a00:	ldr	r0, [fp, #-136]	; 0xffffff78
   20a04:	bl	16104 <_start@@Base+0x1ae4>
   20a08:	str	r0, [fp, #-140]	; 0xffffff74
   20a0c:	ldr	r2, [fp, #-16]
   20a10:	ldr	r3, [fp, #-140]	; 0xffffff74
   20a14:	cmp	r2, r3
   20a18:	bne	20a68 <_start@@Base+0xc448>
   20a1c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20a20:	str	r3, [fp, #-16]
   20a24:	sub	r3, fp, #64	; 0x40
   20a28:	str	r3, [sp]
   20a2c:	ldr	r3, [pc, #572]	; 20c70 <_start@@Base+0xc650>
   20a30:	add	r3, pc, r3
   20a34:	ldr	r2, [fp, #-144]	; 0xffffff70
   20a38:	ldr	r1, [fp, #-16]
   20a3c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20a40:	bl	16c3c <_start@@Base+0x261c>
   20a44:	str	r0, [fp, #-140]	; 0xffffff74
   20a48:	ldr	r2, [fp, #-140]	; 0xffffff74
   20a4c:	ldr	r3, [fp, #-16]
   20a50:	cmp	r2, r3
   20a54:	beq	21ef0 <_start@@Base+0xd8d0>
   20a58:	ldr	r2, [fp, #-140]	; 0xffffff74
   20a5c:	ldr	r3, [fp, #-144]	; 0xffffff70
   20a60:	cmp	r2, r3
   20a64:	beq	21ef0 <_start@@Base+0xd8d0>
   20a68:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20a6c:	cmp	r3, #0
   20a70:	bne	20a88 <_start@@Base+0xc468>
   20a74:	ldr	r3, [fp, #-136]	; 0xffffff78
   20a78:	ldr	r3, [r3, #8]
   20a7c:	and	r3, r3, #2
   20a80:	cmp	r3, #0
   20a84:	beq	21ce0 <_start@@Base+0xd6c0>
   20a88:	ldr	r3, [fp, #-136]	; 0xffffff78
   20a8c:	ldr	r0, [r3]
   20a90:	mov	r3, #4
   20a94:	mov	r2, #4
   20a98:	mov	r1, #16
   20a9c:	bl	31134 <flatcc_builder_table_add@@Base>
   20aa0:	str	r0, [fp, #-24]	; 0xffffffe8
   20aa4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20aa8:	cmp	r3, #0
   20aac:	beq	21e64 <_start@@Base+0xd844>
   20ab0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20ab4:	mov	r1, r3
   20ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20abc:	bl	149c4 <_start@@Base+0x3a4>
   20ac0:	b	21ce0 <_start@@Base+0xd6c0>
   20ac4:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ac8:	add	r3, r3, #8
   20acc:	str	r3, [fp, #-140]	; 0xffffff74
   20ad0:	ldr	r1, [fp, #-144]	; 0xffffff70
   20ad4:	ldr	r0, [fp, #-140]	; 0xffffff74
   20ad8:	bl	14f70 <_start@@Base+0x950>
   20adc:	strd	r0, [fp, #-12]
   20ae0:	ldrd	r2, [fp, #-12]
   20ae4:	mov	r0, #0
   20ae8:	mov	r1, #-16777216	; 0xff000000
   20aec:	and	r2, r2, r0
   20af0:	and	r3, r3, r1
   20af4:	cmp	r3, #1627389952	; 0x61000000
   20af8:	cmpeq	r2, #0
   20afc:	bne	20c28 <_start@@Base+0xc608>
   20b00:	ldr	r3, [fp, #-140]	; 0xffffff74
   20b04:	str	r3, [fp, #-16]
   20b08:	mov	r3, #1
   20b0c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20b10:	ldr	r1, [fp, #-16]
   20b14:	ldr	r0, [fp, #-136]	; 0xffffff78
   20b18:	bl	1552c <_start@@Base+0xf0c>
   20b1c:	str	r0, [fp, #-140]	; 0xffffff74
   20b20:	ldr	r2, [fp, #-16]
   20b24:	ldr	r3, [fp, #-140]	; 0xffffff74
   20b28:	cmp	r2, r3
   20b2c:	beq	20c10 <_start@@Base+0xc5f0>
   20b30:	mov	r3, #0
   20b34:	str	r3, [fp, #-68]	; 0xffffffbc
   20b38:	ldr	r3, [fp, #-140]	; 0xffffff74
   20b3c:	str	r3, [fp, #-16]
   20b40:	sub	r3, fp, #68	; 0x44
   20b44:	ldr	r2, [fp, #-144]	; 0xffffff70
   20b48:	ldr	r1, [fp, #-16]
   20b4c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20b50:	bl	16104 <_start@@Base+0x1ae4>
   20b54:	str	r0, [fp, #-140]	; 0xffffff74
   20b58:	ldr	r2, [fp, #-16]
   20b5c:	ldr	r3, [fp, #-140]	; 0xffffff74
   20b60:	cmp	r2, r3
   20b64:	bne	20bb4 <_start@@Base+0xc594>
   20b68:	ldr	r3, [fp, #-140]	; 0xffffff74
   20b6c:	str	r3, [fp, #-16]
   20b70:	sub	r3, fp, #68	; 0x44
   20b74:	str	r3, [sp]
   20b78:	ldr	r3, [pc, #244]	; 20c74 <_start@@Base+0xc654>
   20b7c:	add	r3, pc, r3
   20b80:	ldr	r2, [fp, #-144]	; 0xffffff70
   20b84:	ldr	r1, [fp, #-16]
   20b88:	ldr	r0, [fp, #-136]	; 0xffffff78
   20b8c:	bl	16c3c <_start@@Base+0x261c>
   20b90:	str	r0, [fp, #-140]	; 0xffffff74
   20b94:	ldr	r2, [fp, #-140]	; 0xffffff74
   20b98:	ldr	r3, [fp, #-16]
   20b9c:	cmp	r2, r3
   20ba0:	beq	21ef0 <_start@@Base+0xd8d0>
   20ba4:	ldr	r2, [fp, #-140]	; 0xffffff74
   20ba8:	ldr	r3, [fp, #-144]	; 0xffffff70
   20bac:	cmp	r2, r3
   20bb0:	beq	21ef0 <_start@@Base+0xd8d0>
   20bb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20bb8:	cmp	r3, #0
   20bbc:	bne	20bd4 <_start@@Base+0xc5b4>
   20bc0:	ldr	r3, [fp, #-136]	; 0xffffff78
   20bc4:	ldr	r3, [r3, #8]
   20bc8:	and	r3, r3, #2
   20bcc:	cmp	r3, #0
   20bd0:	beq	21ce0 <_start@@Base+0xd6c0>
   20bd4:	ldr	r3, [fp, #-136]	; 0xffffff78
   20bd8:	ldr	r0, [r3]
   20bdc:	mov	r3, #4
   20be0:	mov	r2, #4
   20be4:	mov	r1, #20
   20be8:	bl	31134 <flatcc_builder_table_add@@Base>
   20bec:	str	r0, [fp, #-24]	; 0xffffffe8
   20bf0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20bf4:	cmp	r3, #0
   20bf8:	beq	21e6c <_start@@Base+0xd84c>
   20bfc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20c00:	mov	r1, r3
   20c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20c08:	bl	149c4 <_start@@Base+0x3a4>
   20c0c:	b	21ce0 <_start@@Base+0xd6c0>
   20c10:	ldr	r2, [fp, #-144]	; 0xffffff70
   20c14:	ldr	r1, [fp, #-140]	; 0xffffff74
   20c18:	ldr	r0, [fp, #-136]	; 0xffffff78
   20c1c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20c20:	str	r0, [fp, #-140]	; 0xffffff74
   20c24:	b	21ce0 <_start@@Base+0xd6c0>
   20c28:	ldr	r2, [fp, #-144]	; 0xffffff70
   20c2c:	ldr	r1, [fp, #-140]	; 0xffffff74
   20c30:	ldr	r0, [fp, #-136]	; 0xffffff78
   20c34:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20c38:	str	r0, [fp, #-140]	; 0xffffff74
   20c3c:	b	21ce0 <_start@@Base+0xd6c0>
   20c40:	ldr	r2, [fp, #-144]	; 0xffffff70
   20c44:	ldr	r1, [fp, #-140]	; 0xffffff74
   20c48:	ldr	r0, [fp, #-136]	; 0xffffff78
   20c4c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20c50:	str	r0, [fp, #-140]	; 0xffffff74
   20c54:	b	21ce0 <_start@@Base+0xd6c0>
   20c58:	stmdavs	r1!, {r3, r5, r6, r8, r9, ip, sp, lr}^
   20c5c:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   20c60:			; <UNDEFINED> instruction: 0x666e7630
   20c64:	teqvc	r6, #1593835520	; 0x5f000000
   20c68:			; <UNDEFINED> instruction: 0x666e7631
   20c6c:	teqvc	r3, #-268435451	; 0xf0000005
   20c70:	andeq	r1, r4, r4, ror r8
   20c74:	andeq	r1, r4, r4, lsr r7
   20c78:	ldrd	r2, [fp, #-12]
   20c7c:	add	r1, pc, #716	; 0x2cc
   20c80:	ldrd	r0, [r1]
   20c84:	cmp	r3, r1
   20c88:	cmpeq	r2, r0
   20c8c:	bhi	20f68 <_start@@Base+0xc948>
   20c90:	ldrd	r2, [fp, #-12]
   20c94:	add	r1, pc, #700	; 0x2bc
   20c98:	ldrd	r0, [r1]
   20c9c:	cmp	r3, r1
   20ca0:	cmpeq	r2, r0
   20ca4:	bne	20f34 <_start@@Base+0xc914>
   20ca8:	ldr	r3, [fp, #-140]	; 0xffffff74
   20cac:	str	r3, [fp, #-16]
   20cb0:	mov	r3, #8
   20cb4:	ldr	r2, [fp, #-144]	; 0xffffff70
   20cb8:	ldr	r1, [fp, #-16]
   20cbc:	ldr	r0, [fp, #-136]	; 0xffffff78
   20cc0:	bl	1552c <_start@@Base+0xf0c>
   20cc4:	str	r0, [fp, #-140]	; 0xffffff74
   20cc8:	ldr	r2, [fp, #-16]
   20ccc:	ldr	r3, [fp, #-140]	; 0xffffff74
   20cd0:	cmp	r2, r3
   20cd4:	beq	20db8 <_start@@Base+0xc798>
   20cd8:	mov	r2, #0
   20cdc:	mov	r3, #0
   20ce0:	strd	r2, [fp, #-76]	; 0xffffffb4
   20ce4:	ldr	r3, [fp, #-140]	; 0xffffff74
   20ce8:	str	r3, [fp, #-16]
   20cec:	sub	r3, fp, #76	; 0x4c
   20cf0:	ldr	r2, [fp, #-144]	; 0xffffff70
   20cf4:	ldr	r1, [fp, #-16]
   20cf8:	ldr	r0, [fp, #-136]	; 0xffffff78
   20cfc:	bl	16030 <_start@@Base+0x1a10>
   20d00:	str	r0, [fp, #-140]	; 0xffffff74
   20d04:	ldr	r2, [fp, #-16]
   20d08:	ldr	r3, [fp, #-140]	; 0xffffff74
   20d0c:	cmp	r2, r3
   20d10:	bne	20d60 <_start@@Base+0xc740>
   20d14:	ldr	r3, [fp, #-140]	; 0xffffff74
   20d18:	str	r3, [fp, #-16]
   20d1c:	sub	r3, fp, #76	; 0x4c
   20d20:	str	r3, [sp]
   20d24:	ldr	r3, [pc, #564]	; 20f60 <_start@@Base+0xc940>
   20d28:	add	r3, pc, r3
   20d2c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20d30:	ldr	r1, [fp, #-16]
   20d34:	ldr	r0, [fp, #-136]	; 0xffffff78
   20d38:	bl	16aac <_start@@Base+0x248c>
   20d3c:	str	r0, [fp, #-140]	; 0xffffff74
   20d40:	ldr	r2, [fp, #-140]	; 0xffffff74
   20d44:	ldr	r3, [fp, #-16]
   20d48:	cmp	r2, r3
   20d4c:	beq	21ef0 <_start@@Base+0xd8d0>
   20d50:	ldr	r2, [fp, #-140]	; 0xffffff74
   20d54:	ldr	r3, [fp, #-144]	; 0xffffff70
   20d58:	cmp	r2, r3
   20d5c:	beq	21ef0 <_start@@Base+0xd8d0>
   20d60:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   20d64:	orrs	r3, r2, r3
   20d68:	bne	20d80 <_start@@Base+0xc760>
   20d6c:	ldr	r3, [fp, #-136]	; 0xffffff78
   20d70:	ldr	r3, [r3, #8]
   20d74:	and	r3, r3, #2
   20d78:	cmp	r3, #0
   20d7c:	beq	21ce0 <_start@@Base+0xd6c0>
   20d80:	ldr	r3, [fp, #-136]	; 0xffffff78
   20d84:	ldr	r0, [r3]
   20d88:	mov	r3, #8
   20d8c:	mov	r2, #8
   20d90:	mov	r1, #18
   20d94:	bl	31134 <flatcc_builder_table_add@@Base>
   20d98:	str	r0, [fp, #-24]	; 0xffffffe8
   20d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20da0:	cmp	r3, #0
   20da4:	beq	21e74 <_start@@Base+0xd854>
   20da8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   20dac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20db0:	bl	14a20 <_start@@Base+0x400>
   20db4:	b	21ce0 <_start@@Base+0xd6c0>
   20db8:	ldr	r3, [fp, #-140]	; 0xffffff74
   20dbc:	add	r3, r3, #8
   20dc0:	str	r3, [fp, #-140]	; 0xffffff74
   20dc4:	ldr	r1, [fp, #-144]	; 0xffffff70
   20dc8:	ldr	r0, [fp, #-140]	; 0xffffff74
   20dcc:	bl	14f70 <_start@@Base+0x950>
   20dd0:	strd	r0, [fp, #-12]
   20dd4:	ldrd	r2, [fp, #-12]
   20dd8:	mov	r0, #0
   20ddc:	mov	r1, #-16777216	; 0xff000000
   20de0:	and	r2, r2, r0
   20de4:	and	r3, r3, r1
   20de8:	cmp	r3, #1627389952	; 0x61000000
   20dec:	cmpeq	r2, #0
   20df0:	bne	20f1c <_start@@Base+0xc8fc>
   20df4:	ldr	r3, [fp, #-140]	; 0xffffff74
   20df8:	str	r3, [fp, #-16]
   20dfc:	mov	r3, #1
   20e00:	ldr	r2, [fp, #-144]	; 0xffffff70
   20e04:	ldr	r1, [fp, #-16]
   20e08:	ldr	r0, [fp, #-136]	; 0xffffff78
   20e0c:	bl	1552c <_start@@Base+0xf0c>
   20e10:	str	r0, [fp, #-140]	; 0xffffff74
   20e14:	ldr	r2, [fp, #-16]
   20e18:	ldr	r3, [fp, #-140]	; 0xffffff74
   20e1c:	cmp	r2, r3
   20e20:	beq	20f04 <_start@@Base+0xc8e4>
   20e24:	mov	r2, #0
   20e28:	mov	r3, #0
   20e2c:	strd	r2, [fp, #-84]	; 0xffffffac
   20e30:	ldr	r3, [fp, #-140]	; 0xffffff74
   20e34:	str	r3, [fp, #-16]
   20e38:	sub	r3, fp, #84	; 0x54
   20e3c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20e40:	ldr	r1, [fp, #-16]
   20e44:	ldr	r0, [fp, #-136]	; 0xffffff78
   20e48:	bl	16030 <_start@@Base+0x1a10>
   20e4c:	str	r0, [fp, #-140]	; 0xffffff74
   20e50:	ldr	r2, [fp, #-16]
   20e54:	ldr	r3, [fp, #-140]	; 0xffffff74
   20e58:	cmp	r2, r3
   20e5c:	bne	20eac <_start@@Base+0xc88c>
   20e60:	ldr	r3, [fp, #-140]	; 0xffffff74
   20e64:	str	r3, [fp, #-16]
   20e68:	sub	r3, fp, #84	; 0x54
   20e6c:	str	r3, [sp]
   20e70:	ldr	r3, [pc, #236]	; 20f64 <_start@@Base+0xc944>
   20e74:	add	r3, pc, r3
   20e78:	ldr	r2, [fp, #-144]	; 0xffffff70
   20e7c:	ldr	r1, [fp, #-16]
   20e80:	ldr	r0, [fp, #-136]	; 0xffffff78
   20e84:	bl	16aac <_start@@Base+0x248c>
   20e88:	str	r0, [fp, #-140]	; 0xffffff74
   20e8c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20e90:	ldr	r3, [fp, #-16]
   20e94:	cmp	r2, r3
   20e98:	beq	21ef0 <_start@@Base+0xd8d0>
   20e9c:	ldr	r2, [fp, #-140]	; 0xffffff74
   20ea0:	ldr	r3, [fp, #-144]	; 0xffffff70
   20ea4:	cmp	r2, r3
   20ea8:	beq	21ef0 <_start@@Base+0xd8d0>
   20eac:	ldrd	r2, [fp, #-84]	; 0xffffffac
   20eb0:	orrs	r3, r2, r3
   20eb4:	bne	20ecc <_start@@Base+0xc8ac>
   20eb8:	ldr	r3, [fp, #-136]	; 0xffffff78
   20ebc:	ldr	r3, [r3, #8]
   20ec0:	and	r3, r3, #2
   20ec4:	cmp	r3, #0
   20ec8:	beq	21ce0 <_start@@Base+0xd6c0>
   20ecc:	ldr	r3, [fp, #-136]	; 0xffffff78
   20ed0:	ldr	r0, [r3]
   20ed4:	mov	r3, #8
   20ed8:	mov	r2, #8
   20edc:	mov	r1, #22
   20ee0:	bl	31134 <flatcc_builder_table_add@@Base>
   20ee4:	str	r0, [fp, #-24]	; 0xffffffe8
   20ee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20eec:	cmp	r3, #0
   20ef0:	beq	21e7c <_start@@Base+0xd85c>
   20ef4:	ldrd	r2, [fp, #-84]	; 0xffffffac
   20ef8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20efc:	bl	14a20 <_start@@Base+0x400>
   20f00:	b	21ce0 <_start@@Base+0xd6c0>
   20f04:	ldr	r2, [fp, #-144]	; 0xffffff70
   20f08:	ldr	r1, [fp, #-140]	; 0xffffff74
   20f0c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20f10:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20f14:	str	r0, [fp, #-140]	; 0xffffff74
   20f18:	b	21ce0 <_start@@Base+0xd6c0>
   20f1c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20f20:	ldr	r1, [fp, #-140]	; 0xffffff74
   20f24:	ldr	r0, [fp, #-136]	; 0xffffff78
   20f28:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20f2c:	str	r0, [fp, #-140]	; 0xffffff74
   20f30:	b	21ce0 <_start@@Base+0xd6c0>
   20f34:	ldr	r2, [fp, #-144]	; 0xffffff70
   20f38:	ldr	r1, [fp, #-140]	; 0xffffff74
   20f3c:	ldr	r0, [fp, #-136]	; 0xffffff78
   20f40:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   20f44:	str	r0, [fp, #-140]	; 0xffffff74
   20f48:	b	21ce0 <_start@@Base+0xd6c0>
   20f4c:	nop			; (mov r0, r0)
   20f50:			; <UNDEFINED> instruction: 0x666e7630
   20f54:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   20f58:			; <UNDEFINED> instruction: 0x666e7631
   20f5c:	teqvc	r6, #1593835520	; 0x5f000000
   20f60:	muleq	r4, r4, r5
   20f64:	andeq	r1, r4, r4, asr r4
   20f68:	ldrd	r2, [fp, #-12]
   20f6c:	add	r1, pc, #964	; 0x3c4
   20f70:	ldrd	r0, [r1]
   20f74:	cmp	r3, r1
   20f78:	cmpeq	r2, r0
   20f7c:	bne	2120c <_start@@Base+0xcbec>
   20f80:	ldr	r3, [fp, #-140]	; 0xffffff74
   20f84:	str	r3, [fp, #-16]
   20f88:	mov	r3, #8
   20f8c:	ldr	r2, [fp, #-144]	; 0xffffff70
   20f90:	ldr	r1, [fp, #-16]
   20f94:	ldr	r0, [fp, #-136]	; 0xffffff78
   20f98:	bl	1552c <_start@@Base+0xf0c>
   20f9c:	str	r0, [fp, #-140]	; 0xffffff74
   20fa0:	ldr	r2, [fp, #-16]
   20fa4:	ldr	r3, [fp, #-140]	; 0xffffff74
   20fa8:	cmp	r2, r3
   20fac:	beq	21090 <_start@@Base+0xca70>
   20fb0:	mov	r3, #0
   20fb4:	str	r3, [fp, #-88]	; 0xffffffa8
   20fb8:	ldr	r3, [fp, #-140]	; 0xffffff74
   20fbc:	str	r3, [fp, #-16]
   20fc0:	sub	r3, fp, #88	; 0x58
   20fc4:	ldr	r2, [fp, #-144]	; 0xffffff70
   20fc8:	ldr	r1, [fp, #-16]
   20fcc:	ldr	r0, [fp, #-136]	; 0xffffff78
   20fd0:	bl	15dc0 <_start@@Base+0x17a0>
   20fd4:	str	r0, [fp, #-140]	; 0xffffff74
   20fd8:	ldr	r2, [fp, #-16]
   20fdc:	ldr	r3, [fp, #-140]	; 0xffffff74
   20fe0:	cmp	r2, r3
   20fe4:	bne	21034 <_start@@Base+0xca14>
   20fe8:	ldr	r3, [fp, #-140]	; 0xffffff74
   20fec:	str	r3, [fp, #-16]
   20ff0:	sub	r3, fp, #88	; 0x58
   20ff4:	str	r3, [sp]
   20ff8:	ldr	r3, [pc, #840]	; 21348 <_start@@Base+0xcd28>
   20ffc:	add	r3, pc, r3
   21000:	ldr	r2, [fp, #-144]	; 0xffffff70
   21004:	ldr	r1, [fp, #-16]
   21008:	ldr	r0, [fp, #-136]	; 0xffffff78
   2100c:	bl	16618 <_start@@Base+0x1ff8>
   21010:	str	r0, [fp, #-140]	; 0xffffff74
   21014:	ldr	r2, [fp, #-140]	; 0xffffff74
   21018:	ldr	r3, [fp, #-16]
   2101c:	cmp	r2, r3
   21020:	beq	21ef0 <_start@@Base+0xd8d0>
   21024:	ldr	r2, [fp, #-140]	; 0xffffff74
   21028:	ldr	r3, [fp, #-144]	; 0xffffff70
   2102c:	cmp	r2, r3
   21030:	beq	21ef0 <_start@@Base+0xd8d0>
   21034:	ldr	r3, [fp, #-88]	; 0xffffffa8
   21038:	cmp	r3, #0
   2103c:	bne	21054 <_start@@Base+0xca34>
   21040:	ldr	r3, [fp, #-136]	; 0xffffff78
   21044:	ldr	r3, [r3, #8]
   21048:	and	r3, r3, #2
   2104c:	cmp	r3, #0
   21050:	beq	21ce0 <_start@@Base+0xd6c0>
   21054:	ldr	r3, [fp, #-136]	; 0xffffff78
   21058:	ldr	r0, [r3]
   2105c:	mov	r3, #4
   21060:	mov	r2, #4
   21064:	mov	r1, #17
   21068:	bl	31134 <flatcc_builder_table_add@@Base>
   2106c:	str	r0, [fp, #-24]	; 0xffffffe8
   21070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21074:	cmp	r3, #0
   21078:	beq	21e84 <_start@@Base+0xd864>
   2107c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   21080:	mov	r1, r3
   21084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21088:	bl	1483c <_start@@Base+0x21c>
   2108c:	b	21ce0 <_start@@Base+0xd6c0>
   21090:	ldr	r3, [fp, #-140]	; 0xffffff74
   21094:	add	r3, r3, #8
   21098:	str	r3, [fp, #-140]	; 0xffffff74
   2109c:	ldr	r1, [fp, #-144]	; 0xffffff70
   210a0:	ldr	r0, [fp, #-140]	; 0xffffff74
   210a4:	bl	14f70 <_start@@Base+0x950>
   210a8:	strd	r0, [fp, #-12]
   210ac:	ldrd	r2, [fp, #-12]
   210b0:	mov	r0, #0
   210b4:	mov	r1, #-16777216	; 0xff000000
   210b8:	and	r2, r2, r0
   210bc:	and	r3, r3, r1
   210c0:	cmp	r3, #1627389952	; 0x61000000
   210c4:	cmpeq	r2, #0
   210c8:	bne	211f4 <_start@@Base+0xcbd4>
   210cc:	ldr	r3, [fp, #-140]	; 0xffffff74
   210d0:	str	r3, [fp, #-16]
   210d4:	mov	r3, #1
   210d8:	ldr	r2, [fp, #-144]	; 0xffffff70
   210dc:	ldr	r1, [fp, #-16]
   210e0:	ldr	r0, [fp, #-136]	; 0xffffff78
   210e4:	bl	1552c <_start@@Base+0xf0c>
   210e8:	str	r0, [fp, #-140]	; 0xffffff74
   210ec:	ldr	r2, [fp, #-16]
   210f0:	ldr	r3, [fp, #-140]	; 0xffffff74
   210f4:	cmp	r2, r3
   210f8:	beq	211dc <_start@@Base+0xcbbc>
   210fc:	mov	r3, #0
   21100:	str	r3, [fp, #-92]	; 0xffffffa4
   21104:	ldr	r3, [fp, #-140]	; 0xffffff74
   21108:	str	r3, [fp, #-16]
   2110c:	sub	r3, fp, #92	; 0x5c
   21110:	ldr	r2, [fp, #-144]	; 0xffffff70
   21114:	ldr	r1, [fp, #-16]
   21118:	ldr	r0, [fp, #-136]	; 0xffffff78
   2111c:	bl	15dc0 <_start@@Base+0x17a0>
   21120:	str	r0, [fp, #-140]	; 0xffffff74
   21124:	ldr	r2, [fp, #-16]
   21128:	ldr	r3, [fp, #-140]	; 0xffffff74
   2112c:	cmp	r2, r3
   21130:	bne	21180 <_start@@Base+0xcb60>
   21134:	ldr	r3, [fp, #-140]	; 0xffffff74
   21138:	str	r3, [fp, #-16]
   2113c:	sub	r3, fp, #92	; 0x5c
   21140:	str	r3, [sp]
   21144:	ldr	r3, [pc, #512]	; 2134c <_start@@Base+0xcd2c>
   21148:	add	r3, pc, r3
   2114c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21150:	ldr	r1, [fp, #-16]
   21154:	ldr	r0, [fp, #-136]	; 0xffffff78
   21158:	bl	16618 <_start@@Base+0x1ff8>
   2115c:	str	r0, [fp, #-140]	; 0xffffff74
   21160:	ldr	r2, [fp, #-140]	; 0xffffff74
   21164:	ldr	r3, [fp, #-16]
   21168:	cmp	r2, r3
   2116c:	beq	21ef0 <_start@@Base+0xd8d0>
   21170:	ldr	r2, [fp, #-140]	; 0xffffff74
   21174:	ldr	r3, [fp, #-144]	; 0xffffff70
   21178:	cmp	r2, r3
   2117c:	beq	21ef0 <_start@@Base+0xd8d0>
   21180:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21184:	cmp	r3, #0
   21188:	bne	211a0 <_start@@Base+0xcb80>
   2118c:	ldr	r3, [fp, #-136]	; 0xffffff78
   21190:	ldr	r3, [r3, #8]
   21194:	and	r3, r3, #2
   21198:	cmp	r3, #0
   2119c:	beq	21ce0 <_start@@Base+0xd6c0>
   211a0:	ldr	r3, [fp, #-136]	; 0xffffff78
   211a4:	ldr	r0, [r3]
   211a8:	mov	r3, #4
   211ac:	mov	r2, #4
   211b0:	mov	r1, #21
   211b4:	bl	31134 <flatcc_builder_table_add@@Base>
   211b8:	str	r0, [fp, #-24]	; 0xffffffe8
   211bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   211c0:	cmp	r3, #0
   211c4:	beq	21e8c <_start@@Base+0xd86c>
   211c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   211cc:	mov	r1, r3
   211d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   211d4:	bl	1483c <_start@@Base+0x21c>
   211d8:	b	21ce0 <_start@@Base+0xd6c0>
   211dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   211e0:	ldr	r1, [fp, #-140]	; 0xffffff74
   211e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   211e8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   211ec:	str	r0, [fp, #-140]	; 0xffffff74
   211f0:	b	21ce0 <_start@@Base+0xd6c0>
   211f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   211f8:	ldr	r1, [fp, #-140]	; 0xffffff74
   211fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   21200:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   21204:	str	r0, [fp, #-140]	; 0xffffff74
   21208:	b	21ce0 <_start@@Base+0xd6c0>
   2120c:	ldrd	r2, [fp, #-12]
   21210:	add	r1, pc, #296	; 0x128
   21214:	ldrd	r0, [r1]
   21218:	cmp	r3, r1
   2121c:	cmpeq	r2, r0
   21220:	bne	214d4 <_start@@Base+0xceb4>
   21224:	ldr	r3, [fp, #-140]	; 0xffffff74
   21228:	str	r3, [fp, #-16]
   2122c:	mov	r3, #8
   21230:	ldr	r2, [fp, #-144]	; 0xffffff70
   21234:	ldr	r1, [fp, #-16]
   21238:	ldr	r0, [fp, #-136]	; 0xffffff78
   2123c:	bl	1552c <_start@@Base+0xf0c>
   21240:	str	r0, [fp, #-140]	; 0xffffff74
   21244:	ldr	r2, [fp, #-16]
   21248:	ldr	r3, [fp, #-140]	; 0xffffff74
   2124c:	cmp	r2, r3
   21250:	beq	21358 <_start@@Base+0xcd38>
   21254:	mov	r2, #0
   21258:	mov	r3, #0
   2125c:	strd	r2, [fp, #-100]	; 0xffffff9c
   21260:	ldr	r3, [fp, #-140]	; 0xffffff74
   21264:	str	r3, [fp, #-16]
   21268:	sub	r3, fp, #100	; 0x64
   2126c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21270:	ldr	r1, [fp, #-16]
   21274:	ldr	r0, [fp, #-136]	; 0xffffff78
   21278:	bl	15cec <_start@@Base+0x16cc>
   2127c:	str	r0, [fp, #-140]	; 0xffffff74
   21280:	ldr	r2, [fp, #-16]
   21284:	ldr	r3, [fp, #-140]	; 0xffffff74
   21288:	cmp	r2, r3
   2128c:	bne	212dc <_start@@Base+0xccbc>
   21290:	ldr	r3, [fp, #-140]	; 0xffffff74
   21294:	str	r3, [fp, #-16]
   21298:	sub	r3, fp, #100	; 0x64
   2129c:	str	r3, [sp]
   212a0:	ldr	r3, [pc, #168]	; 21350 <_start@@Base+0xcd30>
   212a4:	add	r3, pc, r3
   212a8:	ldr	r2, [fp, #-144]	; 0xffffff70
   212ac:	ldr	r1, [fp, #-16]
   212b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   212b4:	bl	16488 <_start@@Base+0x1e68>
   212b8:	str	r0, [fp, #-140]	; 0xffffff74
   212bc:	ldr	r2, [fp, #-140]	; 0xffffff74
   212c0:	ldr	r3, [fp, #-16]
   212c4:	cmp	r2, r3
   212c8:	beq	21ef0 <_start@@Base+0xd8d0>
   212cc:	ldr	r2, [fp, #-140]	; 0xffffff74
   212d0:	ldr	r3, [fp, #-144]	; 0xffffff70
   212d4:	cmp	r2, r3
   212d8:	beq	21ef0 <_start@@Base+0xd8d0>
   212dc:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   212e0:	orrs	r3, r2, r3
   212e4:	bne	212fc <_start@@Base+0xccdc>
   212e8:	ldr	r3, [fp, #-136]	; 0xffffff78
   212ec:	ldr	r3, [r3, #8]
   212f0:	and	r3, r3, #2
   212f4:	cmp	r3, #0
   212f8:	beq	21ce0 <_start@@Base+0xd6c0>
   212fc:	ldr	r3, [fp, #-136]	; 0xffffff78
   21300:	ldr	r0, [r3]
   21304:	mov	r3, #8
   21308:	mov	r2, #8
   2130c:	mov	r1, #19
   21310:	bl	31134 <flatcc_builder_table_add@@Base>
   21314:	str	r0, [fp, #-24]	; 0xffffffe8
   21318:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2131c:	cmp	r3, #0
   21320:	beq	21e94 <_start@@Base+0xd874>
   21324:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   21328:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2132c:	bl	14898 <_start@@Base+0x278>
   21330:	b	21ce0 <_start@@Base+0xd6c0>
   21334:	nop			; (mov r0, r0)
   21338:			; <UNDEFINED> instruction: 0x666e7631
   2133c:	ldrvc	r3, [r3, #-607]!	; 0xfffffda1
   21340:			; <UNDEFINED> instruction: 0x666e7631
   21344:	ldrvc	r3, [r6, #-1119]!	; 0xfffffba1
   21348:	ldrdeq	r1, [r4], -r8
   2134c:	muleq	r4, r8, r1
   21350:	andeq	r1, r4, r8, asr #32
   21354:	andeq	r0, r4, r4, ror #29
   21358:	ldr	r3, [fp, #-140]	; 0xffffff74
   2135c:	add	r3, r3, #8
   21360:	str	r3, [fp, #-140]	; 0xffffff74
   21364:	ldr	r1, [fp, #-144]	; 0xffffff70
   21368:	ldr	r0, [fp, #-140]	; 0xffffff74
   2136c:	bl	14f70 <_start@@Base+0x950>
   21370:	strd	r0, [fp, #-12]
   21374:	ldrd	r2, [fp, #-12]
   21378:	mov	r0, #0
   2137c:	mov	r1, #-16777216	; 0xff000000
   21380:	and	r2, r2, r0
   21384:	and	r3, r3, r1
   21388:	cmp	r3, #1627389952	; 0x61000000
   2138c:	cmpeq	r2, #0
   21390:	bne	214bc <_start@@Base+0xce9c>
   21394:	ldr	r3, [fp, #-140]	; 0xffffff74
   21398:	str	r3, [fp, #-16]
   2139c:	mov	r3, #1
   213a0:	ldr	r2, [fp, #-144]	; 0xffffff70
   213a4:	ldr	r1, [fp, #-16]
   213a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   213ac:	bl	1552c <_start@@Base+0xf0c>
   213b0:	str	r0, [fp, #-140]	; 0xffffff74
   213b4:	ldr	r2, [fp, #-16]
   213b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   213bc:	cmp	r2, r3
   213c0:	beq	214a4 <_start@@Base+0xce84>
   213c4:	mov	r2, #0
   213c8:	mov	r3, #0
   213cc:	strd	r2, [fp, #-108]	; 0xffffff94
   213d0:	ldr	r3, [fp, #-140]	; 0xffffff74
   213d4:	str	r3, [fp, #-16]
   213d8:	sub	r3, fp, #108	; 0x6c
   213dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   213e0:	ldr	r1, [fp, #-16]
   213e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   213e8:	bl	15cec <_start@@Base+0x16cc>
   213ec:	str	r0, [fp, #-140]	; 0xffffff74
   213f0:	ldr	r2, [fp, #-16]
   213f4:	ldr	r3, [fp, #-140]	; 0xffffff74
   213f8:	cmp	r2, r3
   213fc:	bne	2144c <_start@@Base+0xce2c>
   21400:	ldr	r3, [fp, #-140]	; 0xffffff74
   21404:	str	r3, [fp, #-16]
   21408:	sub	r3, fp, #108	; 0x6c
   2140c:	str	r3, [sp]
   21410:	ldr	r3, [pc, #-196]	; 21354 <_start@@Base+0xcd34>
   21414:	add	r3, pc, r3
   21418:	ldr	r2, [fp, #-144]	; 0xffffff70
   2141c:	ldr	r1, [fp, #-16]
   21420:	ldr	r0, [fp, #-136]	; 0xffffff78
   21424:	bl	16488 <_start@@Base+0x1e68>
   21428:	str	r0, [fp, #-140]	; 0xffffff74
   2142c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21430:	ldr	r3, [fp, #-16]
   21434:	cmp	r2, r3
   21438:	beq	21ef0 <_start@@Base+0xd8d0>
   2143c:	ldr	r2, [fp, #-140]	; 0xffffff74
   21440:	ldr	r3, [fp, #-144]	; 0xffffff70
   21444:	cmp	r2, r3
   21448:	beq	21ef0 <_start@@Base+0xd8d0>
   2144c:	ldrd	r2, [fp, #-108]	; 0xffffff94
   21450:	orrs	r3, r2, r3
   21454:	bne	2146c <_start@@Base+0xce4c>
   21458:	ldr	r3, [fp, #-136]	; 0xffffff78
   2145c:	ldr	r3, [r3, #8]
   21460:	and	r3, r3, #2
   21464:	cmp	r3, #0
   21468:	beq	21ce0 <_start@@Base+0xd6c0>
   2146c:	ldr	r3, [fp, #-136]	; 0xffffff78
   21470:	ldr	r0, [r3]
   21474:	mov	r3, #8
   21478:	mov	r2, #8
   2147c:	mov	r1, #23
   21480:	bl	31134 <flatcc_builder_table_add@@Base>
   21484:	str	r0, [fp, #-24]	; 0xffffffe8
   21488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2148c:	cmp	r3, #0
   21490:	beq	21e9c <_start@@Base+0xd87c>
   21494:	ldrd	r2, [fp, #-108]	; 0xffffff94
   21498:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2149c:	bl	14898 <_start@@Base+0x278>
   214a0:	b	21ce0 <_start@@Base+0xd6c0>
   214a4:	ldr	r2, [fp, #-144]	; 0xffffff70
   214a8:	ldr	r1, [fp, #-140]	; 0xffffff74
   214ac:	ldr	r0, [fp, #-136]	; 0xffffff78
   214b0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   214b4:	str	r0, [fp, #-140]	; 0xffffff74
   214b8:	b	21ce0 <_start@@Base+0xd6c0>
   214bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   214c0:	ldr	r1, [fp, #-140]	; 0xffffff74
   214c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   214c8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   214cc:	str	r0, [fp, #-140]	; 0xffffff74
   214d0:	b	21ce0 <_start@@Base+0xd6c0>
   214d4:	ldr	r2, [fp, #-144]	; 0xffffff70
   214d8:	ldr	r1, [fp, #-140]	; 0xffffff74
   214dc:	ldr	r0, [fp, #-136]	; 0xffffff78
   214e0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   214e4:	str	r0, [fp, #-140]	; 0xffffff74
   214e8:	b	21ce0 <_start@@Base+0xd6c0>
   214ec:	ldrd	r2, [fp, #-12]
   214f0:	add	r1, pc, #816	; 0x330
   214f4:	ldrd	r0, [r1]
   214f8:	cmp	r3, r1
   214fc:	cmpeq	r2, r0
   21500:	bhi	2184c <_start@@Base+0xd22c>
   21504:	ldrd	r2, [fp, #-12]
   21508:	add	r1, pc, #800	; 0x320
   2150c:	ldrd	r0, [r1]
   21510:	cmp	r3, r1
   21514:	cmpeq	r2, r0
   21518:	bne	2180c <_start@@Base+0xd1ec>
   2151c:	ldr	r3, [fp, #-140]	; 0xffffff74
   21520:	add	r3, r3, #8
   21524:	str	r3, [fp, #-140]	; 0xffffff74
   21528:	ldr	r1, [fp, #-144]	; 0xffffff70
   2152c:	ldr	r0, [fp, #-140]	; 0xffffff74
   21530:	bl	14f70 <_start@@Base+0x950>
   21534:	strd	r0, [fp, #-12]
   21538:	ldrd	r2, [fp, #-12]
   2153c:	add	r1, pc, #756	; 0x2f4
   21540:	ldrd	r0, [r1]
   21544:	cmp	r3, r1
   21548:	cmpeq	r2, r0
   2154c:	bne	217f4 <_start@@Base+0xd1d4>
   21550:	ldr	r3, [fp, #-140]	; 0xffffff74
   21554:	add	r3, r3, #8
   21558:	str	r3, [fp, #-140]	; 0xffffff74
   2155c:	ldr	r1, [fp, #-144]	; 0xffffff70
   21560:	ldr	r0, [fp, #-140]	; 0xffffff74
   21564:	bl	14f70 <_start@@Base+0x950>
   21568:	strd	r0, [fp, #-12]
   2156c:	ldrd	r2, [fp, #-12]
   21570:	mov	r0, #0
   21574:	mvn	r1, #0
   21578:	and	r2, r2, r0
   2157c:	and	r3, r3, r1
   21580:	add	r1, pc, #696	; 0x2b8
   21584:	ldrd	r0, [r1]
   21588:	cmp	r3, r1
   2158c:	cmpeq	r2, r0
   21590:	bne	217dc <_start@@Base+0xd1bc>
   21594:	ldr	r3, [fp, #-140]	; 0xffffff74
   21598:	str	r3, [fp, #-16]
   2159c:	mov	r3, #4
   215a0:	ldr	r2, [fp, #-144]	; 0xffffff70
   215a4:	ldr	r1, [fp, #-16]
   215a8:	ldr	r0, [fp, #-136]	; 0xffffff78
   215ac:	bl	1552c <_start@@Base+0xf0c>
   215b0:	str	r0, [fp, #-140]	; 0xffffff74
   215b4:	ldr	r2, [fp, #-16]
   215b8:	ldr	r3, [fp, #-140]	; 0xffffff74
   215bc:	cmp	r2, r3
   215c0:	beq	217c4 <_start@@Base+0xd1a4>
   215c4:	ldr	r2, [fp, #-140]	; 0xffffff74
   215c8:	ldr	r3, [fp, #-144]	; 0xffffff70
   215cc:	cmp	r2, r3
   215d0:	beq	2171c <_start@@Base+0xd0fc>
   215d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   215d8:	ldrb	r3, [r3]
   215dc:	cmp	r3, #91	; 0x5b
   215e0:	bne	2171c <_start@@Base+0xd0fc>
   215e4:	ldr	r3, [fp, #-136]	; 0xffffff78
   215e8:	ldr	r0, [r3]
   215ec:	mvn	r3, #0
   215f0:	mov	r2, #1
   215f4:	mov	r1, #1
   215f8:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   215fc:	mov	r3, r0
   21600:	cmp	r3, #0
   21604:	bne	21ea4 <_start@@Base+0xd884>
   21608:	sub	r3, fp, #28
   2160c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21610:	ldr	r1, [fp, #-140]	; 0xffffff74
   21614:	ldr	r0, [fp, #-136]	; 0xffffff78
   21618:	bl	152dc <_start@@Base+0xcbc>
   2161c:	str	r0, [fp, #-140]	; 0xffffff74
   21620:	b	216f4 <_start@@Base+0xd0d4>
   21624:	mov	r3, #0
   21628:	strb	r3, [fp, #-109]	; 0xffffff93
   2162c:	ldr	r3, [fp, #-136]	; 0xffffff78
   21630:	ldr	r3, [r3]
   21634:	mov	r1, #1
   21638:	mov	r0, r3
   2163c:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   21640:	str	r0, [fp, #-24]	; 0xffffffe8
   21644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21648:	cmp	r3, #0
   2164c:	beq	21eac <_start@@Base+0xd88c>
   21650:	ldr	r3, [fp, #-140]	; 0xffffff74
   21654:	str	r3, [fp, #-16]
   21658:	sub	r3, fp, #109	; 0x6d
   2165c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21660:	ldr	r1, [fp, #-16]
   21664:	ldr	r0, [fp, #-136]	; 0xffffff78
   21668:	bl	15f60 <_start@@Base+0x1940>
   2166c:	str	r0, [fp, #-140]	; 0xffffff74
   21670:	ldr	r2, [fp, #-16]
   21674:	ldr	r3, [fp, #-140]	; 0xffffff74
   21678:	cmp	r2, r3
   2167c:	bne	216cc <_start@@Base+0xd0ac>
   21680:	ldr	r3, [fp, #-140]	; 0xffffff74
   21684:	str	r3, [fp, #-16]
   21688:	sub	r3, fp, #109	; 0x6d
   2168c:	str	r3, [sp]
   21690:	ldr	r3, [pc, #432]	; 21848 <_start@@Base+0xd228>
   21694:	add	r3, pc, r3
   21698:	ldr	r2, [fp, #-144]	; 0xffffff70
   2169c:	ldr	r1, [fp, #-16]
   216a0:	ldr	r0, [fp, #-136]	; 0xffffff78
   216a4:	bl	16924 <_start@@Base+0x2304>
   216a8:	str	r0, [fp, #-140]	; 0xffffff74
   216ac:	ldr	r2, [fp, #-140]	; 0xffffff74
   216b0:	ldr	r3, [fp, #-16]
   216b4:	cmp	r2, r3
   216b8:	beq	21eac <_start@@Base+0xd88c>
   216bc:	ldr	r2, [fp, #-140]	; 0xffffff74
   216c0:	ldr	r3, [fp, #-144]	; 0xffffff70
   216c4:	cmp	r2, r3
   216c8:	beq	21eac <_start@@Base+0xd88c>
   216cc:	ldrb	r3, [fp, #-109]	; 0xffffff93
   216d0:	mov	r1, r3
   216d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   216d8:	bl	14770 <_start@@Base+0x150>
   216dc:	sub	r3, fp, #28
   216e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   216e4:	ldr	r1, [fp, #-140]	; 0xffffff74
   216e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   216ec:	bl	153c4 <_start@@Base+0xda4>
   216f0:	str	r0, [fp, #-140]	; 0xffffff74
   216f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   216f8:	cmp	r3, #0
   216fc:	bne	21624 <_start@@Base+0xd004>
   21700:	ldr	r3, [fp, #-136]	; 0xffffff78
   21704:	ldr	r3, [r3]
   21708:	mov	r0, r3
   2170c:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   21710:	mov	r3, r0
   21714:	str	r3, [fp, #-32]	; 0xffffffe0
   21718:	b	21784 <_start@@Base+0xd164>
   2171c:	ldr	r3, [fp, #-136]	; 0xffffff78
   21720:	ldr	r0, [r3]
   21724:	mov	r3, #0
   21728:	mov	r2, #0
   2172c:	mov	r1, #0
   21730:	bl	2dbfc <flatcc_builder_start_buffer@@Base>
   21734:	mov	r3, r0
   21738:	cmp	r3, #0
   2173c:	bne	21eb4 <_start@@Base+0xd894>
   21740:	sub	r3, fp, #32
   21744:	ldr	r2, [fp, #-144]	; 0xffffff70
   21748:	ldr	r1, [fp, #-140]	; 0xffffff74
   2174c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21750:	bl	1e4c4 <_start@@Base+0x9ea4>
   21754:	str	r0, [fp, #-140]	; 0xffffff74
   21758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2175c:	cmp	r3, #0
   21760:	beq	21ebc <_start@@Base+0xd89c>
   21764:	ldr	r3, [fp, #-136]	; 0xffffff78
   21768:	ldr	r3, [r3]
   2176c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21770:	mov	r1, r2
   21774:	mov	r0, r3
   21778:	bl	2dd54 <flatcc_builder_end_buffer@@Base>
   2177c:	mov	r3, r0
   21780:	str	r3, [fp, #-32]	; 0xffffffe0
   21784:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21788:	cmp	r3, #0
   2178c:	beq	21ef0 <_start@@Base+0xd8d0>
   21790:	ldr	r3, [fp, #-136]	; 0xffffff78
   21794:	ldr	r3, [r3]
   21798:	mov	r1, #13
   2179c:	mov	r0, r3
   217a0:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   217a4:	str	r0, [fp, #-20]	; 0xffffffec
   217a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   217ac:	cmp	r3, #0
   217b0:	beq	21ef0 <_start@@Base+0xd8d0>
   217b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   217b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   217bc:	str	r2, [r3]
   217c0:	b	21ce0 <_start@@Base+0xd6c0>
   217c4:	ldr	r2, [fp, #-144]	; 0xffffff70
   217c8:	ldr	r1, [fp, #-140]	; 0xffffff74
   217cc:	ldr	r0, [fp, #-136]	; 0xffffff78
   217d0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   217d4:	str	r0, [fp, #-140]	; 0xffffff74
   217d8:	b	21ce0 <_start@@Base+0xd6c0>
   217dc:	ldr	r2, [fp, #-144]	; 0xffffff70
   217e0:	ldr	r1, [fp, #-140]	; 0xffffff74
   217e4:	ldr	r0, [fp, #-136]	; 0xffffff78
   217e8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   217ec:	str	r0, [fp, #-140]	; 0xffffff74
   217f0:	b	21ce0 <_start@@Base+0xd6c0>
   217f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   217f8:	ldr	r1, [fp, #-140]	; 0xffffff74
   217fc:	ldr	r0, [fp, #-136]	; 0xffffff78
   21800:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   21804:	str	r0, [fp, #-140]	; 0xffffff74
   21808:	b	21ce0 <_start@@Base+0xd6c0>
   2180c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21810:	ldr	r1, [fp, #-140]	; 0xffffff74
   21814:	ldr	r0, [fp, #-136]	; 0xffffff78
   21818:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2181c:	str	r0, [fp, #-140]	; 0xffffff74
   21820:	b	21ce0 <_start@@Base+0xd6c0>
   21824:	nop			; (mov r0, r0)
   21828:	svcvs	0x00725f6e
   2182c:			; <UNDEFINED> instruction: 0x76656374
   21830:	mcrvs	3, 3, r7, cr5, cr4, {3}
   21834:	strbtvc	r7, [r5], #-884	; 0xfffffc8c
   21838:	cmnvs	r4, r5, ror r2
   2183c:	strbvs	r6, [r4, #-1644]!	; 0xfffff994
   21840:	andeq	r0, r0, r0
   21844:			; <UNDEFINED> instruction: 0x66666572
   21848:	andeq	r0, r4, r0, ror ip
   2184c:	ldrd	r2, [fp, #-12]
   21850:	add	r1, pc, #752	; 0x2f0
   21854:	ldrd	r0, [r1]
   21858:	cmp	r3, r1
   2185c:	cmpeq	r2, r0
   21860:	bne	21ccc <_start@@Base+0xd6ac>
   21864:	ldr	r3, [fp, #-140]	; 0xffffff74
   21868:	add	r3, r3, #8
   2186c:	str	r3, [fp, #-140]	; 0xffffff74
   21870:	ldr	r1, [fp, #-144]	; 0xffffff70
   21874:	ldr	r0, [fp, #-140]	; 0xffffff74
   21878:	bl	14f70 <_start@@Base+0x950>
   2187c:	strd	r0, [fp, #-12]
   21880:	ldrd	r2, [fp, #-12]
   21884:	add	r1, pc, #708	; 0x2c4
   21888:	ldrd	r0, [r1]
   2188c:	cmp	r3, r1
   21890:	cmpeq	r2, r0
   21894:	bne	21aac <_start@@Base+0xd48c>
   21898:	ldr	r3, [fp, #-140]	; 0xffffff74
   2189c:	add	r3, r3, #8
   218a0:	str	r3, [fp, #-140]	; 0xffffff74
   218a4:	ldr	r1, [fp, #-144]	; 0xffffff70
   218a8:	ldr	r0, [fp, #-140]	; 0xffffff74
   218ac:	bl	14f70 <_start@@Base+0x950>
   218b0:	strd	r0, [fp, #-12]
   218b4:	ldrd	r2, [fp, #-12]
   218b8:	mov	r0, #0
   218bc:	mov	r1, #-16777216	; 0xff000000
   218c0:	and	r2, r2, r0
   218c4:	and	r3, r3, r1
   218c8:	cmp	r3, #1929379840	; 0x73000000
   218cc:	cmpeq	r2, #0
   218d0:	bne	21a94 <_start@@Base+0xd474>
   218d4:	ldr	r3, [fp, #-140]	; 0xffffff74
   218d8:	str	r3, [fp, #-16]
   218dc:	mov	r3, #1
   218e0:	ldr	r2, [fp, #-144]	; 0xffffff70
   218e4:	ldr	r1, [fp, #-16]
   218e8:	ldr	r0, [fp, #-136]	; 0xffffff78
   218ec:	bl	1552c <_start@@Base+0xf0c>
   218f0:	str	r0, [fp, #-140]	; 0xffffff74
   218f4:	ldr	r2, [fp, #-16]
   218f8:	ldr	r3, [fp, #-140]	; 0xffffff74
   218fc:	cmp	r2, r3
   21900:	beq	21a7c <_start@@Base+0xd45c>
   21904:	ldr	r3, [fp, #-136]	; 0xffffff78
   21908:	ldr	r0, [r3]
   2190c:	mvn	r3, #-536870912	; 0xe0000000
   21910:	mov	r2, #8
   21914:	mov	r1, #8
   21918:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   2191c:	mov	r3, r0
   21920:	cmp	r3, #0
   21924:	bne	21ec4 <_start@@Base+0xd8a4>
   21928:	sub	r3, fp, #28
   2192c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21930:	ldr	r1, [fp, #-140]	; 0xffffff74
   21934:	ldr	r0, [fp, #-136]	; 0xffffff78
   21938:	bl	152dc <_start@@Base+0xcbc>
   2193c:	str	r0, [fp, #-140]	; 0xffffff74
   21940:	b	21a18 <_start@@Base+0xd3f8>
   21944:	mov	r2, #0
   21948:	mov	r3, #0
   2194c:	strd	r2, [fp, #-124]	; 0xffffff84
   21950:	ldr	r3, [fp, #-136]	; 0xffffff78
   21954:	ldr	r3, [r3]
   21958:	mov	r1, #1
   2195c:	mov	r0, r3
   21960:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   21964:	str	r0, [fp, #-24]	; 0xffffffe8
   21968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2196c:	cmp	r3, #0
   21970:	beq	21ecc <_start@@Base+0xd8ac>
   21974:	ldr	r3, [fp, #-140]	; 0xffffff74
   21978:	str	r3, [fp, #-16]
   2197c:	sub	r3, fp, #124	; 0x7c
   21980:	ldr	r2, [fp, #-144]	; 0xffffff70
   21984:	ldr	r1, [fp, #-16]
   21988:	ldr	r0, [fp, #-136]	; 0xffffff78
   2198c:	bl	3af80 <flatcc_json_parser_double@@Base>
   21990:	str	r0, [fp, #-140]	; 0xffffff74
   21994:	ldr	r2, [fp, #-16]
   21998:	ldr	r3, [fp, #-140]	; 0xffffff74
   2199c:	cmp	r2, r3
   219a0:	bne	219f0 <_start@@Base+0xd3d0>
   219a4:	ldr	r3, [fp, #-140]	; 0xffffff74
   219a8:	str	r3, [fp, #-16]
   219ac:	sub	r3, fp, #124	; 0x7c
   219b0:	str	r3, [sp]
   219b4:	ldr	r3, [pc, #420]	; 21b60 <_start@@Base+0xd540>
   219b8:	add	r3, pc, r3
   219bc:	ldr	r2, [fp, #-144]	; 0xffffff70
   219c0:	ldr	r1, [fp, #-16]
   219c4:	ldr	r0, [fp, #-136]	; 0xffffff78
   219c8:	bl	173f4 <_start@@Base+0x2dd4>
   219cc:	str	r0, [fp, #-140]	; 0xffffff74
   219d0:	ldr	r2, [fp, #-140]	; 0xffffff74
   219d4:	ldr	r3, [fp, #-16]
   219d8:	cmp	r2, r3
   219dc:	beq	21ecc <_start@@Base+0xd8ac>
   219e0:	ldr	r2, [fp, #-140]	; 0xffffff74
   219e4:	ldr	r3, [fp, #-144]	; 0xffffff70
   219e8:	cmp	r2, r3
   219ec:	beq	21ecc <_start@@Base+0xd8ac>
   219f0:	vldr	d7, [fp, #-124]	; 0xffffff84
   219f4:	vmov.f64	d0, d7
   219f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   219fc:	bl	14afc <_start@@Base+0x4dc>
   21a00:	sub	r3, fp, #28
   21a04:	ldr	r2, [fp, #-144]	; 0xffffff70
   21a08:	ldr	r1, [fp, #-140]	; 0xffffff74
   21a0c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21a10:	bl	153c4 <_start@@Base+0xda4>
   21a14:	str	r0, [fp, #-140]	; 0xffffff74
   21a18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21a1c:	cmp	r3, #0
   21a20:	bne	21944 <_start@@Base+0xd324>
   21a24:	ldr	r3, [fp, #-136]	; 0xffffff78
   21a28:	ldr	r3, [r3]
   21a2c:	mov	r0, r3
   21a30:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   21a34:	mov	r3, r0
   21a38:	str	r3, [fp, #-32]	; 0xffffffe0
   21a3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21a40:	cmp	r3, #0
   21a44:	beq	21ef0 <_start@@Base+0xd8d0>
   21a48:	ldr	r3, [fp, #-136]	; 0xffffff78
   21a4c:	ldr	r3, [r3]
   21a50:	mov	r1, #33	; 0x21
   21a54:	mov	r0, r3
   21a58:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   21a5c:	str	r0, [fp, #-20]	; 0xffffffec
   21a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   21a64:	cmp	r3, #0
   21a68:	beq	21ef0 <_start@@Base+0xd8d0>
   21a6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21a70:	ldr	r3, [fp, #-20]	; 0xffffffec
   21a74:	str	r2, [r3]
   21a78:	b	21ce0 <_start@@Base+0xd6c0>
   21a7c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21a80:	ldr	r1, [fp, #-140]	; 0xffffff74
   21a84:	ldr	r0, [fp, #-136]	; 0xffffff78
   21a88:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   21a8c:	str	r0, [fp, #-140]	; 0xffffff74
   21a90:	b	21ce0 <_start@@Base+0xd6c0>
   21a94:	ldr	r2, [fp, #-144]	; 0xffffff70
   21a98:	ldr	r1, [fp, #-140]	; 0xffffff74
   21a9c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21aa0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   21aa4:	str	r0, [fp, #-140]	; 0xffffff74
   21aa8:	b	21ce0 <_start@@Base+0xd6c0>
   21aac:	ldrd	r2, [fp, #-12]
   21ab0:	mvn	r0, #255	; 0xff
   21ab4:	mvn	r1, #0
   21ab8:	and	r2, r2, r0
   21abc:	and	r3, r3, r1
   21ac0:	add	r1, pc, #144	; 0x90
   21ac4:	ldrd	r0, [r1]
   21ac8:	cmp	r3, r1
   21acc:	cmpeq	r2, r0
   21ad0:	bne	21cb4 <_start@@Base+0xd694>
   21ad4:	ldr	r3, [fp, #-140]	; 0xffffff74
   21ad8:	str	r3, [fp, #-16]
   21adc:	mov	r3, #7
   21ae0:	ldr	r2, [fp, #-144]	; 0xffffff70
   21ae4:	ldr	r1, [fp, #-16]
   21ae8:	ldr	r0, [fp, #-136]	; 0xffffff78
   21aec:	bl	1552c <_start@@Base+0xf0c>
   21af0:	str	r0, [fp, #-140]	; 0xffffff74
   21af4:	ldr	r2, [fp, #-16]
   21af8:	ldr	r3, [fp, #-140]	; 0xffffff74
   21afc:	cmp	r2, r3
   21b00:	beq	21c9c <_start@@Base+0xd67c>
   21b04:	ldr	r3, [fp, #-136]	; 0xffffff78
   21b08:	ldr	r0, [r3]
   21b0c:	mvn	r3, #-536870912	; 0xe0000000
   21b10:	mov	r2, #8
   21b14:	mov	r1, #8
   21b18:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   21b1c:	mov	r3, r0
   21b20:	cmp	r3, #0
   21b24:	bne	21ed4 <_start@@Base+0xd8b4>
   21b28:	sub	r3, fp, #28
   21b2c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21b30:	ldr	r1, [fp, #-140]	; 0xffffff74
   21b34:	ldr	r0, [fp, #-136]	; 0xffffff78
   21b38:	bl	152dc <_start@@Base+0xcbc>
   21b3c:	str	r0, [fp, #-140]	; 0xffffff74
   21b40:	b	21c38 <_start@@Base+0xd618>
   21b44:	nop			; (mov r0, r0)
   21b48:	svcvs	0x00725f6f
   21b4c:			; <UNDEFINED> instruction: 0x76656374
   21b50:	strbvc	r6, [r2, #-3173]!	; 0xfffff39b
   21b54:	ldrbvs	r6, [pc], -pc, ror #8
   21b58:	cdpvs	3, 6, cr7, cr7, cr0, {0}
   21b5c:	ldrbvs	r6, [pc], -pc, ror #24
   21b60:	andeq	r0, r4, r8, asr r9
   21b64:	andeq	r0, r4, r0, asr #14
   21b68:	mov	r2, #0
   21b6c:	mov	r3, #0
   21b70:	strd	r2, [fp, #-132]	; 0xffffff7c
   21b74:	ldr	r3, [fp, #-136]	; 0xffffff78
   21b78:	ldr	r3, [r3]
   21b7c:	mov	r1, #1
   21b80:	mov	r0, r3
   21b84:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   21b88:	str	r0, [fp, #-24]	; 0xffffffe8
   21b8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21b90:	cmp	r3, #0
   21b94:	beq	21edc <_start@@Base+0xd8bc>
   21b98:	ldr	r3, [fp, #-140]	; 0xffffff74
   21b9c:	str	r3, [fp, #-16]
   21ba0:	sub	r3, fp, #132	; 0x84
   21ba4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21ba8:	ldr	r1, [fp, #-16]
   21bac:	ldr	r0, [fp, #-136]	; 0xffffff78
   21bb0:	bl	16030 <_start@@Base+0x1a10>
   21bb4:	str	r0, [fp, #-140]	; 0xffffff74
   21bb8:	ldr	r2, [fp, #-16]
   21bbc:	ldr	r3, [fp, #-140]	; 0xffffff74
   21bc0:	cmp	r2, r3
   21bc4:	bne	21c14 <_start@@Base+0xd5f4>
   21bc8:	ldr	r3, [fp, #-140]	; 0xffffff74
   21bcc:	str	r3, [fp, #-16]
   21bd0:	sub	r3, fp, #132	; 0x84
   21bd4:	str	r3, [sp]
   21bd8:	ldr	r3, [pc, #-124]	; 21b64 <_start@@Base+0xd544>
   21bdc:	add	r3, pc, r3
   21be0:	ldr	r2, [fp, #-144]	; 0xffffff70
   21be4:	ldr	r1, [fp, #-16]
   21be8:	ldr	r0, [fp, #-136]	; 0xffffff78
   21bec:	bl	16aac <_start@@Base+0x248c>
   21bf0:	str	r0, [fp, #-140]	; 0xffffff74
   21bf4:	ldr	r2, [fp, #-140]	; 0xffffff74
   21bf8:	ldr	r3, [fp, #-16]
   21bfc:	cmp	r2, r3
   21c00:	beq	21edc <_start@@Base+0xd8bc>
   21c04:	ldr	r2, [fp, #-140]	; 0xffffff74
   21c08:	ldr	r3, [fp, #-144]	; 0xffffff70
   21c0c:	cmp	r2, r3
   21c10:	beq	21edc <_start@@Base+0xd8bc>
   21c14:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   21c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21c1c:	bl	14a20 <_start@@Base+0x400>
   21c20:	sub	r3, fp, #28
   21c24:	ldr	r2, [fp, #-144]	; 0xffffff70
   21c28:	ldr	r1, [fp, #-140]	; 0xffffff74
   21c2c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21c30:	bl	153c4 <_start@@Base+0xda4>
   21c34:	str	r0, [fp, #-140]	; 0xffffff74
   21c38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21c3c:	cmp	r3, #0
   21c40:	bne	21b68 <_start@@Base+0xd548>
   21c44:	ldr	r3, [fp, #-136]	; 0xffffff78
   21c48:	ldr	r3, [r3]
   21c4c:	mov	r0, r3
   21c50:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   21c54:	mov	r3, r0
   21c58:	str	r3, [fp, #-32]	; 0xffffffe0
   21c5c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21c60:	cmp	r3, #0
   21c64:	beq	21ef0 <_start@@Base+0xd8d0>
   21c68:	ldr	r3, [fp, #-136]	; 0xffffff78
   21c6c:	ldr	r3, [r3]
   21c70:	mov	r1, #32
   21c74:	mov	r0, r3
   21c78:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   21c7c:	str	r0, [fp, #-20]	; 0xffffffec
   21c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   21c84:	cmp	r3, #0
   21c88:	beq	21ef0 <_start@@Base+0xd8d0>
   21c8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   21c94:	str	r2, [r3]
   21c98:	b	21ce0 <_start@@Base+0xd6c0>
   21c9c:	ldr	r2, [fp, #-144]	; 0xffffff70
   21ca0:	ldr	r1, [fp, #-140]	; 0xffffff74
   21ca4:	ldr	r0, [fp, #-136]	; 0xffffff78
   21ca8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   21cac:	str	r0, [fp, #-140]	; 0xffffff74
   21cb0:	b	21ce0 <_start@@Base+0xd6c0>
   21cb4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21cb8:	ldr	r1, [fp, #-140]	; 0xffffff74
   21cbc:	ldr	r0, [fp, #-136]	; 0xffffff78
   21cc0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   21cc4:	str	r0, [fp, #-140]	; 0xffffff74
   21cc8:	b	21ce0 <_start@@Base+0xd6c0>
   21ccc:	ldr	r2, [fp, #-144]	; 0xffffff70
   21cd0:	ldr	r1, [fp, #-140]	; 0xffffff74
   21cd4:	ldr	r0, [fp, #-136]	; 0xffffff78
   21cd8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   21cdc:	str	r0, [fp, #-140]	; 0xffffff74
   21ce0:	sub	r3, fp, #28
   21ce4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21ce8:	ldr	r1, [fp, #-140]	; 0xffffff74
   21cec:	ldr	r0, [fp, #-136]	; 0xffffff78
   21cf0:	bl	15174 <_start@@Base+0xb54>
   21cf4:	str	r0, [fp, #-140]	; 0xffffff74
   21cf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   21cfc:	cmp	r3, #0
   21d00:	bne	1e554 <_start@@Base+0x9f34>
   21d04:	ldr	r3, [fp, #-136]	; 0xffffff78
   21d08:	ldr	r3, [r3, #20]
   21d0c:	cmp	r3, #0
   21d10:	bne	21ee4 <_start@@Base+0xd8c4>
   21d14:	ldr	r3, [fp, #-136]	; 0xffffff78
   21d18:	ldr	r3, [r3]
   21d1c:	mov	r1, #3
   21d20:	mov	r0, r3
   21d24:	bl	2f4a8 <flatcc_builder_check_required_field@@Base>
   21d28:	mov	r3, r0
   21d2c:	cmp	r3, #0
   21d30:	bne	21d50 <_start@@Base+0xd730>
   21d34:	mov	r3, #29
   21d38:	ldr	r2, [fp, #-144]	; 0xffffff70
   21d3c:	ldr	r1, [fp, #-140]	; 0xffffff74
   21d40:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d44:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   21d48:	str	r0, [fp, #-140]	; 0xffffff74
   21d4c:	b	21ef0 <_start@@Base+0xd8d0>
   21d50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   21d54:	ldr	r2, [fp, #-144]	; 0xffffff70
   21d58:	ldr	r1, [fp, #-140]	; 0xffffff74
   21d5c:	ldr	r0, [fp, #-136]	; 0xffffff78
   21d60:	bl	3bff4 <flatcc_json_parser_finalize_unions@@Base>
   21d64:	str	r0, [fp, #-140]	; 0xffffff74
   21d68:	ldr	r3, [fp, #-136]	; 0xffffff78
   21d6c:	ldr	r3, [r3]
   21d70:	mov	r0, r3
   21d74:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   21d78:	mov	r2, r0
   21d7c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   21d80:	str	r2, [r3]
   21d84:	ldr	r3, [fp, #-148]	; 0xffffff6c
   21d88:	ldr	r3, [r3]
   21d8c:	cmp	r3, #0
   21d90:	beq	21eec <_start@@Base+0xd8cc>
   21d94:	ldr	r3, [fp, #-140]	; 0xffffff74
   21d98:	b	21f08 <_start@@Base+0xd8e8>
   21d9c:	nop			; (mov r0, r0)
   21da0:	b	21ef0 <_start@@Base+0xd8d0>
   21da4:	nop			; (mov r0, r0)
   21da8:	b	21ef0 <_start@@Base+0xd8d0>
   21dac:	nop			; (mov r0, r0)
   21db0:	b	21ef0 <_start@@Base+0xd8d0>
   21db4:	nop			; (mov r0, r0)
   21db8:	b	21ef0 <_start@@Base+0xd8d0>
   21dbc:	nop			; (mov r0, r0)
   21dc0:	b	21ef0 <_start@@Base+0xd8d0>
   21dc4:	nop			; (mov r0, r0)
   21dc8:	b	21ef0 <_start@@Base+0xd8d0>
   21dcc:	nop			; (mov r0, r0)
   21dd0:	b	21ef0 <_start@@Base+0xd8d0>
   21dd4:	nop			; (mov r0, r0)
   21dd8:	b	21ef0 <_start@@Base+0xd8d0>
   21ddc:	nop			; (mov r0, r0)
   21de0:	b	21ef0 <_start@@Base+0xd8d0>
   21de4:	nop			; (mov r0, r0)
   21de8:	b	21ef0 <_start@@Base+0xd8d0>
   21dec:	nop			; (mov r0, r0)
   21df0:	b	21ef0 <_start@@Base+0xd8d0>
   21df4:	nop			; (mov r0, r0)
   21df8:	b	21ef0 <_start@@Base+0xd8d0>
   21dfc:	nop			; (mov r0, r0)
   21e00:	b	21ef0 <_start@@Base+0xd8d0>
   21e04:	nop			; (mov r0, r0)
   21e08:	b	21ef0 <_start@@Base+0xd8d0>
   21e0c:	nop			; (mov r0, r0)
   21e10:	b	21ef0 <_start@@Base+0xd8d0>
   21e14:	nop			; (mov r0, r0)
   21e18:	b	21ef0 <_start@@Base+0xd8d0>
   21e1c:	nop			; (mov r0, r0)
   21e20:	b	21ef0 <_start@@Base+0xd8d0>
   21e24:	nop			; (mov r0, r0)
   21e28:	b	21ef0 <_start@@Base+0xd8d0>
   21e2c:	nop			; (mov r0, r0)
   21e30:	b	21ef0 <_start@@Base+0xd8d0>
   21e34:	nop			; (mov r0, r0)
   21e38:	b	21ef0 <_start@@Base+0xd8d0>
   21e3c:	nop			; (mov r0, r0)
   21e40:	b	21ef0 <_start@@Base+0xd8d0>
   21e44:	nop			; (mov r0, r0)
   21e48:	b	21ef0 <_start@@Base+0xd8d0>
   21e4c:	nop			; (mov r0, r0)
   21e50:	b	21ef0 <_start@@Base+0xd8d0>
   21e54:	nop			; (mov r0, r0)
   21e58:	b	21ef0 <_start@@Base+0xd8d0>
   21e5c:	nop			; (mov r0, r0)
   21e60:	b	21ef0 <_start@@Base+0xd8d0>
   21e64:	nop			; (mov r0, r0)
   21e68:	b	21ef0 <_start@@Base+0xd8d0>
   21e6c:	nop			; (mov r0, r0)
   21e70:	b	21ef0 <_start@@Base+0xd8d0>
   21e74:	nop			; (mov r0, r0)
   21e78:	b	21ef0 <_start@@Base+0xd8d0>
   21e7c:	nop			; (mov r0, r0)
   21e80:	b	21ef0 <_start@@Base+0xd8d0>
   21e84:	nop			; (mov r0, r0)
   21e88:	b	21ef0 <_start@@Base+0xd8d0>
   21e8c:	nop			; (mov r0, r0)
   21e90:	b	21ef0 <_start@@Base+0xd8d0>
   21e94:	nop			; (mov r0, r0)
   21e98:	b	21ef0 <_start@@Base+0xd8d0>
   21e9c:	nop			; (mov r0, r0)
   21ea0:	b	21ef0 <_start@@Base+0xd8d0>
   21ea4:	nop			; (mov r0, r0)
   21ea8:	b	21ef0 <_start@@Base+0xd8d0>
   21eac:	nop			; (mov r0, r0)
   21eb0:	b	21ef0 <_start@@Base+0xd8d0>
   21eb4:	nop			; (mov r0, r0)
   21eb8:	b	21ef0 <_start@@Base+0xd8d0>
   21ebc:	nop			; (mov r0, r0)
   21ec0:	b	21ef0 <_start@@Base+0xd8d0>
   21ec4:	nop			; (mov r0, r0)
   21ec8:	b	21ef0 <_start@@Base+0xd8d0>
   21ecc:	nop			; (mov r0, r0)
   21ed0:	b	21ef0 <_start@@Base+0xd8d0>
   21ed4:	nop			; (mov r0, r0)
   21ed8:	b	21ef0 <_start@@Base+0xd8d0>
   21edc:	nop			; (mov r0, r0)
   21ee0:	b	21ef0 <_start@@Base+0xd8d0>
   21ee4:	nop			; (mov r0, r0)
   21ee8:	b	21ef0 <_start@@Base+0xd8d0>
   21eec:	nop			; (mov r0, r0)
   21ef0:	mov	r3, #33	; 0x21
   21ef4:	ldr	r2, [fp, #-144]	; 0xffffff70
   21ef8:	ldr	r1, [fp, #-140]	; 0xffffff74
   21efc:	ldr	r0, [fp, #-136]	; 0xffffff78
   21f00:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   21f04:	mov	r3, r0
   21f08:	mov	r0, r3
   21f0c:	sub	sp, fp, #4
   21f10:	pop	{fp, pc}
   21f14:	push	{fp, lr}
   21f18:	add	fp, sp, #4
   21f1c:	sub	sp, sp, #128	; 0x80
   21f20:	str	r0, [fp, #-112]	; 0xffffff90
   21f24:	str	r1, [fp, #-116]	; 0xffffff8c
   21f28:	str	r2, [fp, #-120]	; 0xffffff88
   21f2c:	str	r3, [fp, #-124]	; 0xffffff84
   21f30:	ldr	r3, [fp, #-124]	; 0xffffff84
   21f34:	mov	r2, #0
   21f38:	str	r2, [r3]
   21f3c:	ldr	r3, [fp, #-112]	; 0xffffff90
   21f40:	ldr	r3, [r3]
   21f44:	mov	r1, #12
   21f48:	mov	r0, r3
   21f4c:	bl	2ec40 <flatcc_builder_start_table@@Base>
   21f50:	mov	r3, r0
   21f54:	cmp	r3, #0
   21f58:	bne	23318 <_start@@Base+0xecf8>
   21f5c:	sub	r3, fp, #32
   21f60:	ldr	r2, [fp, #-120]	; 0xffffff88
   21f64:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21f68:	ldr	r0, [fp, #-112]	; 0xffffff90
   21f6c:	bl	1508c <_start@@Base+0xa6c>
   21f70:	str	r0, [fp, #-116]	; 0xffffff8c
   21f74:	b	232c8 <_start@@Base+0xeca8>
   21f78:	ldr	r2, [fp, #-120]	; 0xffffff88
   21f7c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   21f80:	ldr	r0, [fp, #-112]	; 0xffffff90
   21f84:	bl	14cb8 <_start@@Base+0x698>
   21f88:	str	r0, [fp, #-116]	; 0xffffff8c
   21f8c:	ldr	r1, [fp, #-120]	; 0xffffff88
   21f90:	ldr	r0, [fp, #-116]	; 0xffffff8c
   21f94:	bl	14f70 <_start@@Base+0x950>
   21f98:	strd	r0, [fp, #-12]
   21f9c:	ldrd	r2, [fp, #-12]
   21fa0:	mvn	r0, #0
   21fa4:	ldr	r1, [pc, #764]	; 222a8 <_start@@Base+0xdc88>
   21fa8:	cmp	r3, r1
   21fac:	cmpeq	r2, r0
   21fb0:	bhi	22710 <_start@@Base+0xe0f0>
   21fb4:	ldrd	r2, [fp, #-12]
   21fb8:	add	r1, pc, #720	; 0x2d0
   21fbc:	ldrd	r0, [r1]
   21fc0:	cmp	r3, r1
   21fc4:	cmpeq	r2, r0
   21fc8:	bhi	222b4 <_start@@Base+0xdc94>
   21fcc:	ldrd	r2, [fp, #-12]
   21fd0:	mov	r0, #0
   21fd4:	mvn	r1, #255	; 0xff
   21fd8:	and	r2, r2, r0
   21fdc:	and	r3, r3, r1
   21fe0:	add	r1, pc, #688	; 0x2b0
   21fe4:	ldrd	r0, [r1]
   21fe8:	cmp	r3, r1
   21fec:	cmpeq	r2, r0
   21ff0:	bne	22124 <_start@@Base+0xdb04>
   21ff4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   21ff8:	str	r3, [fp, #-16]
   21ffc:	mov	r3, #3
   22000:	ldr	r2, [fp, #-120]	; 0xffffff88
   22004:	ldr	r1, [fp, #-16]
   22008:	ldr	r0, [fp, #-112]	; 0xffffff90
   2200c:	bl	1552c <_start@@Base+0xf0c>
   22010:	str	r0, [fp, #-116]	; 0xffffff8c
   22014:	ldr	r2, [fp, #-16]
   22018:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2201c:	cmp	r2, r3
   22020:	beq	2210c <_start@@Base+0xdaec>
   22024:	mov	r2, #0
   22028:	mov	r3, #0
   2202c:	strd	r2, [fp, #-44]	; 0xffffffd4
   22030:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22034:	str	r3, [fp, #-16]
   22038:	sub	r3, fp, #44	; 0x2c
   2203c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22040:	ldr	r1, [fp, #-16]
   22044:	ldr	r0, [fp, #-112]	; 0xffffff90
   22048:	bl	3af80 <flatcc_json_parser_double@@Base>
   2204c:	str	r0, [fp, #-116]	; 0xffffff8c
   22050:	ldr	r2, [fp, #-16]
   22054:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22058:	cmp	r2, r3
   2205c:	bne	220ac <_start@@Base+0xda8c>
   22060:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22064:	str	r3, [fp, #-16]
   22068:	sub	r3, fp, #44	; 0x2c
   2206c:	str	r3, [sp]
   22070:	ldr	r3, [pc, #564]	; 222ac <_start@@Base+0xdc8c>
   22074:	add	r3, pc, r3
   22078:	ldr	r2, [fp, #-120]	; 0xffffff88
   2207c:	ldr	r1, [fp, #-16]
   22080:	ldr	r0, [fp, #-112]	; 0xffffff90
   22084:	bl	173f4 <_start@@Base+0x2dd4>
   22088:	str	r0, [fp, #-116]	; 0xffffff8c
   2208c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22090:	ldr	r3, [fp, #-16]
   22094:	cmp	r2, r3
   22098:	beq	2339c <_start@@Base+0xed7c>
   2209c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   220a0:	ldr	r3, [fp, #-120]	; 0xffffff88
   220a4:	cmp	r2, r3
   220a8:	beq	2339c <_start@@Base+0xed7c>
   220ac:	vldr	d7, [fp, #-44]	; 0xffffffd4
   220b0:	vcmp.f64	d7, #0.0
   220b4:	vmrs	APSR_nzcv, fpscr
   220b8:	bne	220d0 <_start@@Base+0xdab0>
   220bc:	ldr	r3, [fp, #-112]	; 0xffffff90
   220c0:	ldr	r3, [r3, #8]
   220c4:	and	r3, r3, #2
   220c8:	cmp	r3, #0
   220cc:	beq	232b0 <_start@@Base+0xec90>
   220d0:	ldr	r3, [fp, #-112]	; 0xffffff90
   220d4:	ldr	r0, [r3]
   220d8:	mov	r3, #8
   220dc:	mov	r2, #8
   220e0:	mov	r1, #9
   220e4:	bl	31134 <flatcc_builder_table_add@@Base>
   220e8:	str	r0, [fp, #-20]	; 0xffffffec
   220ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   220f0:	cmp	r3, #0
   220f4:	beq	23320 <_start@@Base+0xed00>
   220f8:	vldr	d7, [fp, #-44]	; 0xffffffd4
   220fc:	vmov.f64	d0, d7
   22100:	ldr	r0, [fp, #-20]	; 0xffffffec
   22104:	bl	14afc <_start@@Base+0x4dc>
   22108:	b	232b0 <_start@@Base+0xec90>
   2210c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22110:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22114:	ldr	r0, [fp, #-112]	; 0xffffff90
   22118:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2211c:	str	r0, [fp, #-116]	; 0xffffff8c
   22120:	b	232b0 <_start@@Base+0xec90>
   22124:	ldrd	r2, [fp, #-12]
   22128:	mov	r0, #0
   2212c:	mvn	r1, #255	; 0xff
   22130:	and	r2, r2, r0
   22134:	and	r3, r3, r1
   22138:	add	r1, pc, #352	; 0x160
   2213c:	ldrd	r0, [r1]
   22140:	cmp	r3, r1
   22144:	cmpeq	r2, r0
   22148:	bne	22278 <_start@@Base+0xdc58>
   2214c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22150:	str	r3, [fp, #-16]
   22154:	mov	r3, #3
   22158:	ldr	r2, [fp, #-120]	; 0xffffff88
   2215c:	ldr	r1, [fp, #-16]
   22160:	ldr	r0, [fp, #-112]	; 0xffffff90
   22164:	bl	1552c <_start@@Base+0xf0c>
   22168:	str	r0, [fp, #-116]	; 0xffffff8c
   2216c:	ldr	r2, [fp, #-16]
   22170:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22174:	cmp	r2, r3
   22178:	beq	22260 <_start@@Base+0xdc40>
   2217c:	mov	r3, #0
   22180:	str	r3, [fp, #-48]	; 0xffffffd0
   22184:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22188:	str	r3, [fp, #-16]
   2218c:	sub	r3, fp, #48	; 0x30
   22190:	ldr	r2, [fp, #-120]	; 0xffffff88
   22194:	ldr	r1, [fp, #-16]
   22198:	ldr	r0, [fp, #-112]	; 0xffffff90
   2219c:	bl	3b120 <flatcc_json_parser_float@@Base>
   221a0:	str	r0, [fp, #-116]	; 0xffffff8c
   221a4:	ldr	r2, [fp, #-16]
   221a8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   221ac:	cmp	r2, r3
   221b0:	bne	22200 <_start@@Base+0xdbe0>
   221b4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   221b8:	str	r3, [fp, #-16]
   221bc:	sub	r3, fp, #48	; 0x30
   221c0:	str	r3, [sp]
   221c4:	ldr	r3, [pc, #228]	; 222b0 <_start@@Base+0xdc90>
   221c8:	add	r3, pc, r3
   221cc:	ldr	r2, [fp, #-120]	; 0xffffff88
   221d0:	ldr	r1, [fp, #-16]
   221d4:	ldr	r0, [fp, #-112]	; 0xffffff90
   221d8:	bl	17270 <_start@@Base+0x2c50>
   221dc:	str	r0, [fp, #-116]	; 0xffffff8c
   221e0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   221e4:	ldr	r3, [fp, #-16]
   221e8:	cmp	r2, r3
   221ec:	beq	2339c <_start@@Base+0xed7c>
   221f0:	ldr	r2, [fp, #-116]	; 0xffffff8c
   221f4:	ldr	r3, [fp, #-120]	; 0xffffff88
   221f8:	cmp	r2, r3
   221fc:	beq	2339c <_start@@Base+0xed7c>
   22200:	vldr	s15, [fp, #-48]	; 0xffffffd0
   22204:	vcmp.f32	s15, #0.0
   22208:	vmrs	APSR_nzcv, fpscr
   2220c:	bne	22224 <_start@@Base+0xdc04>
   22210:	ldr	r3, [fp, #-112]	; 0xffffff90
   22214:	ldr	r3, [r3, #8]
   22218:	and	r3, r3, #2
   2221c:	cmp	r3, #0
   22220:	beq	232b0 <_start@@Base+0xec90>
   22224:	ldr	r3, [fp, #-112]	; 0xffffff90
   22228:	ldr	r0, [r3]
   2222c:	mov	r3, #4
   22230:	mov	r2, #4
   22234:	mov	r1, #8
   22238:	bl	31134 <flatcc_builder_table_add@@Base>
   2223c:	str	r0, [fp, #-20]	; 0xffffffec
   22240:	ldr	r3, [fp, #-20]	; 0xffffffec
   22244:	cmp	r3, #0
   22248:	beq	23328 <_start@@Base+0xed08>
   2224c:	vldr	s15, [fp, #-48]	; 0xffffffd0
   22250:	vmov.f32	s0, s15
   22254:	ldr	r0, [fp, #-20]	; 0xffffffec
   22258:	bl	14a90 <_start@@Base+0x470>
   2225c:	b	232b0 <_start@@Base+0xec90>
   22260:	ldr	r2, [fp, #-120]	; 0xffffff88
   22264:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22268:	ldr	r0, [fp, #-112]	; 0xffffff90
   2226c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22270:	str	r0, [fp, #-116]	; 0xffffff8c
   22274:	b	232b0 <_start@@Base+0xec90>
   22278:	ldr	r2, [fp, #-120]	; 0xffffff88
   2227c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22280:	ldr	r0, [fp, #-112]	; 0xffffff90
   22284:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22288:	str	r0, [fp, #-116]	; 0xffffff8c
   2228c:	b	232b0 <_start@@Base+0xec90>
   22290:			; <UNDEFINED> instruction: 0xffffffff
   22294:	ldmdbvs	r1!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
   22298:	andeq	r0, r0, r0
   2229c:	ldrtvs	r3, [r6], -r0, lsl #8
   222a0:	andeq	r0, r0, r0
   222a4:	ldrtvs	r3, [r3], -r0, lsl #4
   222a8:	ldmdbvs	r7!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, sp, lr, pc}
   222ac:			; <UNDEFINED> instruction: 0x000402b4
   222b0:	andeq	r0, r4, ip, ror #2
   222b4:	ldrd	r2, [fp, #-12]
   222b8:	add	r1, pc, #712	; 0x2c8
   222bc:	ldrd	r0, [r1]
   222c0:	cmp	r3, r1
   222c4:	cmpeq	r2, r0
   222c8:	bhi	22434 <_start@@Base+0xde14>
   222cc:	ldrd	r2, [fp, #-12]
   222d0:	mov	r0, #0
   222d4:	mvn	r1, #255	; 0xff
   222d8:	and	r2, r2, r0
   222dc:	and	r3, r3, r1
   222e0:	add	r1, pc, #680	; 0x2a8
   222e4:	ldrd	r0, [r1]
   222e8:	cmp	r3, r1
   222ec:	cmpeq	r2, r0
   222f0:	bne	2241c <_start@@Base+0xddfc>
   222f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   222f8:	str	r3, [fp, #-16]
   222fc:	mov	r3, #3
   22300:	ldr	r2, [fp, #-120]	; 0xffffff88
   22304:	ldr	r1, [fp, #-16]
   22308:	ldr	r0, [fp, #-112]	; 0xffffff90
   2230c:	bl	1552c <_start@@Base+0xf0c>
   22310:	str	r0, [fp, #-116]	; 0xffffff8c
   22314:	ldr	r2, [fp, #-16]
   22318:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2231c:	cmp	r2, r3
   22320:	beq	22404 <_start@@Base+0xdde4>
   22324:	mov	r3, #0
   22328:	strh	r3, [fp, #-50]	; 0xffffffce
   2232c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22330:	str	r3, [fp, #-16]
   22334:	sub	r3, fp, #50	; 0x32
   22338:	ldr	r2, [fp, #-120]	; 0xffffff88
   2233c:	ldr	r1, [fp, #-16]
   22340:	ldr	r0, [fp, #-112]	; 0xffffff90
   22344:	bl	161d4 <_start@@Base+0x1bb4>
   22348:	str	r0, [fp, #-116]	; 0xffffff8c
   2234c:	ldr	r2, [fp, #-16]
   22350:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22354:	cmp	r2, r3
   22358:	bne	223a8 <_start@@Base+0xdd88>
   2235c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22360:	str	r3, [fp, #-16]
   22364:	sub	r3, fp, #50	; 0x32
   22368:	str	r3, [sp]
   2236c:	ldr	r3, [pc, #556]	; 225a0 <_start@@Base+0xdf80>
   22370:	add	r3, pc, r3
   22374:	ldr	r2, [fp, #-120]	; 0xffffff88
   22378:	ldr	r1, [fp, #-16]
   2237c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22380:	bl	16dc0 <_start@@Base+0x27a0>
   22384:	str	r0, [fp, #-116]	; 0xffffff8c
   22388:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2238c:	ldr	r3, [fp, #-16]
   22390:	cmp	r2, r3
   22394:	beq	2339c <_start@@Base+0xed7c>
   22398:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2239c:	ldr	r3, [fp, #-120]	; 0xffffff88
   223a0:	cmp	r2, r3
   223a4:	beq	2339c <_start@@Base+0xed7c>
   223a8:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   223ac:	cmp	r3, #0
   223b0:	bne	223c8 <_start@@Base+0xdda8>
   223b4:	ldr	r3, [fp, #-112]	; 0xffffff90
   223b8:	ldr	r3, [r3, #8]
   223bc:	and	r3, r3, #2
   223c0:	cmp	r3, #0
   223c4:	beq	232b0 <_start@@Base+0xec90>
   223c8:	ldr	r3, [fp, #-112]	; 0xffffff90
   223cc:	ldr	r0, [r3]
   223d0:	mov	r3, #2
   223d4:	mov	r2, #2
   223d8:	mov	r1, #2
   223dc:	bl	31134 <flatcc_builder_table_add@@Base>
   223e0:	str	r0, [fp, #-20]	; 0xffffffec
   223e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   223e8:	cmp	r3, #0
   223ec:	beq	23330 <_start@@Base+0xed10>
   223f0:	ldrsh	r3, [fp, #-50]	; 0xffffffce
   223f4:	mov	r1, r3
   223f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   223fc:	bl	14960 <_start@@Base+0x340>
   22400:	b	232b0 <_start@@Base+0xec90>
   22404:	ldr	r2, [fp, #-120]	; 0xffffff88
   22408:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2240c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22410:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22414:	str	r0, [fp, #-116]	; 0xffffff8c
   22418:	b	232b0 <_start@@Base+0xec90>
   2241c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22420:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22424:	ldr	r0, [fp, #-112]	; 0xffffff90
   22428:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2242c:	str	r0, [fp, #-116]	; 0xffffff8c
   22430:	b	232b0 <_start@@Base+0xec90>
   22434:	ldrd	r2, [fp, #-12]
   22438:	mov	r0, #0
   2243c:	mvn	r1, #255	; 0xff
   22440:	and	r2, r2, r0
   22444:	and	r3, r3, r1
   22448:	add	r1, pc, #328	; 0x148
   2244c:	ldrd	r0, [r1]
   22450:	cmp	r3, r1
   22454:	cmpeq	r2, r0
   22458:	bne	225a8 <_start@@Base+0xdf88>
   2245c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22460:	str	r3, [fp, #-16]
   22464:	mov	r3, #3
   22468:	ldr	r2, [fp, #-120]	; 0xffffff88
   2246c:	ldr	r1, [fp, #-16]
   22470:	ldr	r0, [fp, #-112]	; 0xffffff90
   22474:	bl	1552c <_start@@Base+0xf0c>
   22478:	str	r0, [fp, #-116]	; 0xffffff8c
   2247c:	ldr	r2, [fp, #-16]
   22480:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22484:	cmp	r2, r3
   22488:	beq	2256c <_start@@Base+0xdf4c>
   2248c:	mov	r2, #0
   22490:	mov	r3, #0
   22494:	strd	r2, [fp, #-60]	; 0xffffffc4
   22498:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2249c:	str	r3, [fp, #-16]
   224a0:	sub	r3, fp, #60	; 0x3c
   224a4:	ldr	r2, [fp, #-120]	; 0xffffff88
   224a8:	ldr	r1, [fp, #-16]
   224ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   224b0:	bl	16030 <_start@@Base+0x1a10>
   224b4:	str	r0, [fp, #-116]	; 0xffffff8c
   224b8:	ldr	r2, [fp, #-16]
   224bc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   224c0:	cmp	r2, r3
   224c4:	bne	22514 <_start@@Base+0xdef4>
   224c8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   224cc:	str	r3, [fp, #-16]
   224d0:	sub	r3, fp, #60	; 0x3c
   224d4:	str	r3, [sp]
   224d8:	ldr	r3, [pc, #196]	; 225a4 <_start@@Base+0xdf84>
   224dc:	add	r3, pc, r3
   224e0:	ldr	r2, [fp, #-120]	; 0xffffff88
   224e4:	ldr	r1, [fp, #-16]
   224e8:	ldr	r0, [fp, #-112]	; 0xffffff90
   224ec:	bl	16aac <_start@@Base+0x248c>
   224f0:	str	r0, [fp, #-116]	; 0xffffff8c
   224f4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   224f8:	ldr	r3, [fp, #-16]
   224fc:	cmp	r2, r3
   22500:	beq	2339c <_start@@Base+0xed7c>
   22504:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22508:	ldr	r3, [fp, #-120]	; 0xffffff88
   2250c:	cmp	r2, r3
   22510:	beq	2339c <_start@@Base+0xed7c>
   22514:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   22518:	orrs	r3, r2, r3
   2251c:	bne	22534 <_start@@Base+0xdf14>
   22520:	ldr	r3, [fp, #-112]	; 0xffffff90
   22524:	ldr	r3, [r3, #8]
   22528:	and	r3, r3, #2
   2252c:	cmp	r3, #0
   22530:	beq	232b0 <_start@@Base+0xec90>
   22534:	ldr	r3, [fp, #-112]	; 0xffffff90
   22538:	ldr	r0, [r3]
   2253c:	mov	r3, #8
   22540:	mov	r2, #8
   22544:	mov	r1, #6
   22548:	bl	31134 <flatcc_builder_table_add@@Base>
   2254c:	str	r0, [fp, #-20]	; 0xffffffec
   22550:	ldr	r3, [fp, #-20]	; 0xffffffec
   22554:	cmp	r3, #0
   22558:	beq	23338 <_start@@Base+0xed18>
   2255c:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   22560:	ldr	r0, [fp, #-20]	; 0xffffffec
   22564:	bl	14a20 <_start@@Base+0x400>
   22568:	b	232b0 <_start@@Base+0xec90>
   2256c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22570:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22574:	ldr	r0, [fp, #-112]	; 0xffffff90
   22578:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2257c:	str	r0, [fp, #-116]	; 0xffffff8c
   22580:	b	232b0 <_start@@Base+0xec90>
   22584:	nop			; (mov r0, r0)
   22588:			; <UNDEFINED> instruction: 0xffffffff
   2258c:	ldmdbvs	r3!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, ip, sp}
   22590:	andeq	r0, r0, r0
   22594:	ldmdbvs	r1!, {r9, sl, ip, sp}
   22598:	andeq	r0, r0, r0
   2259c:	ldmdbvs	r6!, {sl, ip, sp}
   225a0:	ldrdeq	pc, [r3], -r0
   225a4:	andeq	pc, r3, r0, ror lr	; <UNPREDICTABLE>
   225a8:	ldrd	r2, [fp, #-12]
   225ac:	mov	r0, #0
   225b0:	mvn	r1, #255	; 0xff
   225b4:	and	r2, r2, r0
   225b8:	and	r3, r3, r1
   225bc:	add	r1, pc, #740	; 0x2e4
   225c0:	ldrd	r0, [r1]
   225c4:	cmp	r3, r1
   225c8:	cmpeq	r2, r0
   225cc:	bne	226f8 <_start@@Base+0xe0d8>
   225d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   225d4:	str	r3, [fp, #-16]
   225d8:	mov	r3, #3
   225dc:	ldr	r2, [fp, #-120]	; 0xffffff88
   225e0:	ldr	r1, [fp, #-16]
   225e4:	ldr	r0, [fp, #-112]	; 0xffffff90
   225e8:	bl	1552c <_start@@Base+0xf0c>
   225ec:	str	r0, [fp, #-116]	; 0xffffff8c
   225f0:	ldr	r2, [fp, #-16]
   225f4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   225f8:	cmp	r2, r3
   225fc:	beq	226e0 <_start@@Base+0xe0c0>
   22600:	mov	r3, #0
   22604:	str	r3, [fp, #-64]	; 0xffffffc0
   22608:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2260c:	str	r3, [fp, #-16]
   22610:	sub	r3, fp, #64	; 0x40
   22614:	ldr	r2, [fp, #-120]	; 0xffffff88
   22618:	ldr	r1, [fp, #-16]
   2261c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22620:	bl	16104 <_start@@Base+0x1ae4>
   22624:	str	r0, [fp, #-116]	; 0xffffff8c
   22628:	ldr	r2, [fp, #-16]
   2262c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22630:	cmp	r2, r3
   22634:	bne	22684 <_start@@Base+0xe064>
   22638:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2263c:	str	r3, [fp, #-16]
   22640:	sub	r3, fp, #64	; 0x40
   22644:	str	r3, [sp]
   22648:	ldr	r3, [pc, #624]	; 228c0 <_start@@Base+0xe2a0>
   2264c:	add	r3, pc, r3
   22650:	ldr	r2, [fp, #-120]	; 0xffffff88
   22654:	ldr	r1, [fp, #-16]
   22658:	ldr	r0, [fp, #-112]	; 0xffffff90
   2265c:	bl	16c3c <_start@@Base+0x261c>
   22660:	str	r0, [fp, #-116]	; 0xffffff8c
   22664:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22668:	ldr	r3, [fp, #-16]
   2266c:	cmp	r2, r3
   22670:	beq	2339c <_start@@Base+0xed7c>
   22674:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22678:	ldr	r3, [fp, #-120]	; 0xffffff88
   2267c:	cmp	r2, r3
   22680:	beq	2339c <_start@@Base+0xed7c>
   22684:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22688:	cmp	r3, #0
   2268c:	bne	226a4 <_start@@Base+0xe084>
   22690:	ldr	r3, [fp, #-112]	; 0xffffff90
   22694:	ldr	r3, [r3, #8]
   22698:	and	r3, r3, #2
   2269c:	cmp	r3, #0
   226a0:	beq	232b0 <_start@@Base+0xec90>
   226a4:	ldr	r3, [fp, #-112]	; 0xffffff90
   226a8:	ldr	r0, [r3]
   226ac:	mov	r3, #4
   226b0:	mov	r2, #4
   226b4:	mov	r1, #4
   226b8:	bl	31134 <flatcc_builder_table_add@@Base>
   226bc:	str	r0, [fp, #-20]	; 0xffffffec
   226c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   226c4:	cmp	r3, #0
   226c8:	beq	23340 <_start@@Base+0xed20>
   226cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   226d0:	mov	r1, r3
   226d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   226d8:	bl	149c4 <_start@@Base+0x3a4>
   226dc:	b	232b0 <_start@@Base+0xec90>
   226e0:	ldr	r2, [fp, #-120]	; 0xffffff88
   226e4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   226e8:	ldr	r0, [fp, #-112]	; 0xffffff90
   226ec:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   226f0:	str	r0, [fp, #-116]	; 0xffffff8c
   226f4:	b	232b0 <_start@@Base+0xec90>
   226f8:	ldr	r2, [fp, #-120]	; 0xffffff88
   226fc:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22700:	ldr	r0, [fp, #-112]	; 0xffffff90
   22704:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22708:	str	r0, [fp, #-116]	; 0xffffff8c
   2270c:	b	232b0 <_start@@Base+0xec90>
   22710:	ldrd	r2, [fp, #-12]
   22714:	add	r1, pc, #404	; 0x194
   22718:	ldrd	r0, [r1]
   2271c:	cmp	r3, r1
   22720:	cmpeq	r2, r0
   22724:	bhi	22ba4 <_start@@Base+0xe584>
   22728:	ldrd	r2, [fp, #-12]
   2272c:	add	r1, pc, #388	; 0x184
   22730:	ldrd	r0, [r1]
   22734:	cmp	r3, r1
   22738:	cmpeq	r2, r0
   2273c:	bhi	228d0 <_start@@Base+0xe2b0>
   22740:	ldrd	r2, [fp, #-12]
   22744:	mov	r0, #0
   22748:	ldr	r1, [pc, #372]	; 228c4 <_start@@Base+0xe2a4>
   2274c:	and	r2, r2, r0
   22750:	and	r3, r3, r1
   22754:	mov	r0, #0
   22758:	ldr	r1, [pc, #360]	; 228c8 <_start@@Base+0xe2a8>
   2275c:	cmp	r3, r1
   22760:	cmpeq	r2, r0
   22764:	bne	22890 <_start@@Base+0xe270>
   22768:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2276c:	str	r3, [fp, #-16]
   22770:	mov	r3, #2
   22774:	ldr	r2, [fp, #-120]	; 0xffffff88
   22778:	ldr	r1, [fp, #-16]
   2277c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22780:	bl	1552c <_start@@Base+0xf0c>
   22784:	str	r0, [fp, #-116]	; 0xffffff8c
   22788:	ldr	r2, [fp, #-16]
   2278c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22790:	cmp	r2, r3
   22794:	beq	22878 <_start@@Base+0xe258>
   22798:	mov	r3, #0
   2279c:	strb	r3, [fp, #-65]	; 0xffffffbf
   227a0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   227a4:	str	r3, [fp, #-16]
   227a8:	sub	r3, fp, #65	; 0x41
   227ac:	ldr	r2, [fp, #-120]	; 0xffffff88
   227b0:	ldr	r1, [fp, #-16]
   227b4:	ldr	r0, [fp, #-112]	; 0xffffff90
   227b8:	bl	162a4 <_start@@Base+0x1c84>
   227bc:	str	r0, [fp, #-116]	; 0xffffff8c
   227c0:	ldr	r2, [fp, #-16]
   227c4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   227c8:	cmp	r2, r3
   227cc:	bne	2281c <_start@@Base+0xe1fc>
   227d0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   227d4:	str	r3, [fp, #-16]
   227d8:	sub	r3, fp, #65	; 0x41
   227dc:	str	r3, [sp]
   227e0:	ldr	r3, [pc, #228]	; 228cc <_start@@Base+0xe2ac>
   227e4:	add	r3, pc, r3
   227e8:	ldr	r2, [fp, #-120]	; 0xffffff88
   227ec:	ldr	r1, [fp, #-16]
   227f0:	ldr	r0, [fp, #-112]	; 0xffffff90
   227f4:	bl	16f54 <_start@@Base+0x2934>
   227f8:	str	r0, [fp, #-116]	; 0xffffff8c
   227fc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22800:	ldr	r3, [fp, #-16]
   22804:	cmp	r2, r3
   22808:	beq	2339c <_start@@Base+0xed7c>
   2280c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22810:	ldr	r3, [fp, #-120]	; 0xffffff88
   22814:	cmp	r2, r3
   22818:	beq	2339c <_start@@Base+0xed7c>
   2281c:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
   22820:	cmp	r3, #0
   22824:	bne	2283c <_start@@Base+0xe21c>
   22828:	ldr	r3, [fp, #-112]	; 0xffffff90
   2282c:	ldr	r3, [r3, #8]
   22830:	and	r3, r3, #2
   22834:	cmp	r3, #0
   22838:	beq	232b0 <_start@@Base+0xec90>
   2283c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22840:	ldr	r0, [r3]
   22844:	mov	r3, #1
   22848:	mov	r2, #1
   2284c:	mov	r1, #0
   22850:	bl	31134 <flatcc_builder_table_add@@Base>
   22854:	str	r0, [fp, #-20]	; 0xffffffec
   22858:	ldr	r3, [fp, #-20]	; 0xffffffec
   2285c:	cmp	r3, #0
   22860:	beq	23348 <_start@@Base+0xed28>
   22864:	ldrsb	r3, [fp, #-65]	; 0xffffffbf
   22868:	mov	r1, r3
   2286c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22870:	bl	148f8 <_start@@Base+0x2d8>
   22874:	b	232b0 <_start@@Base+0xec90>
   22878:	ldr	r2, [fp, #-120]	; 0xffffff88
   2287c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22880:	ldr	r0, [fp, #-112]	; 0xffffff90
   22884:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22888:	str	r0, [fp, #-116]	; 0xffffff8c
   2288c:	b	232b0 <_start@@Base+0xec90>
   22890:	ldr	r2, [fp, #-120]	; 0xffffff88
   22894:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22898:	ldr	r0, [fp, #-112]	; 0xffffff90
   2289c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   228a0:	str	r0, [fp, #-116]	; 0xffffff8c
   228a4:	b	232b0 <_start@@Base+0xec90>
   228a8:	andeq	r0, r0, r0
   228ac:	ldmdbvs	r3!, {r9, ip, sp}
   228b0:			; <UNDEFINED> instruction: 0xffffffff
   228b4:	ldrvc	r3, [r6, #-1023]!	; 0xfffffc01
   228b8:			; <UNDEFINED> instruction: 0xffffffff
   228bc:	ldrvc	r3, [r1, #-1535]!	; 0xfffffa01
   228c0:	andeq	pc, r3, ip, lsl #26
   228c4:			; <UNDEFINED> instruction: 0xffff0000
   228c8:	ldmdbvs	r8!, {}	; <UNPREDICTABLE>
   228cc:	andeq	pc, r3, r0, lsl #23
   228d0:	ldrd	r2, [fp, #-12]
   228d4:	mov	r0, #0
   228d8:	mvn	r1, #255	; 0xff
   228dc:	and	r2, r2, r0
   228e0:	and	r3, r3, r1
   228e4:	add	r1, pc, #668	; 0x29c
   228e8:	ldrd	r0, [r1]
   228ec:	cmp	r3, r1
   228f0:	cmpeq	r2, r0
   228f4:	bne	22a20 <_start@@Base+0xe400>
   228f8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   228fc:	str	r3, [fp, #-16]
   22900:	mov	r3, #3
   22904:	ldr	r2, [fp, #-120]	; 0xffffff88
   22908:	ldr	r1, [fp, #-16]
   2290c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22910:	bl	1552c <_start@@Base+0xf0c>
   22914:	str	r0, [fp, #-116]	; 0xffffff8c
   22918:	ldr	r2, [fp, #-16]
   2291c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22920:	cmp	r2, r3
   22924:	beq	22a08 <_start@@Base+0xe3e8>
   22928:	mov	r3, #0
   2292c:	str	r3, [fp, #-72]	; 0xffffffb8
   22930:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22934:	str	r3, [fp, #-16]
   22938:	sub	r3, fp, #72	; 0x48
   2293c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22940:	ldr	r1, [fp, #-16]
   22944:	ldr	r0, [fp, #-112]	; 0xffffff90
   22948:	bl	15dc0 <_start@@Base+0x17a0>
   2294c:	str	r0, [fp, #-116]	; 0xffffff8c
   22950:	ldr	r2, [fp, #-16]
   22954:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22958:	cmp	r2, r3
   2295c:	bne	229ac <_start@@Base+0xe38c>
   22960:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22964:	str	r3, [fp, #-16]
   22968:	sub	r3, fp, #72	; 0x48
   2296c:	str	r3, [sp]
   22970:	ldr	r3, [pc, #544]	; 22b98 <_start@@Base+0xe578>
   22974:	add	r3, pc, r3
   22978:	ldr	r2, [fp, #-120]	; 0xffffff88
   2297c:	ldr	r1, [fp, #-16]
   22980:	ldr	r0, [fp, #-112]	; 0xffffff90
   22984:	bl	16618 <_start@@Base+0x1ff8>
   22988:	str	r0, [fp, #-116]	; 0xffffff8c
   2298c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22990:	ldr	r3, [fp, #-16]
   22994:	cmp	r2, r3
   22998:	beq	2339c <_start@@Base+0xed7c>
   2299c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   229a0:	ldr	r3, [fp, #-120]	; 0xffffff88
   229a4:	cmp	r2, r3
   229a8:	beq	2339c <_start@@Base+0xed7c>
   229ac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   229b0:	cmp	r3, #0
   229b4:	bne	229cc <_start@@Base+0xe3ac>
   229b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   229bc:	ldr	r3, [r3, #8]
   229c0:	and	r3, r3, #2
   229c4:	cmp	r3, #0
   229c8:	beq	232b0 <_start@@Base+0xec90>
   229cc:	ldr	r3, [fp, #-112]	; 0xffffff90
   229d0:	ldr	r0, [r3]
   229d4:	mov	r3, #4
   229d8:	mov	r2, #4
   229dc:	mov	r1, #5
   229e0:	bl	31134 <flatcc_builder_table_add@@Base>
   229e4:	str	r0, [fp, #-20]	; 0xffffffec
   229e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   229ec:	cmp	r3, #0
   229f0:	beq	23350 <_start@@Base+0xed30>
   229f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   229f8:	mov	r1, r3
   229fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   22a00:	bl	1483c <_start@@Base+0x21c>
   22a04:	b	232b0 <_start@@Base+0xec90>
   22a08:	ldr	r2, [fp, #-120]	; 0xffffff88
   22a0c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22a10:	ldr	r0, [fp, #-112]	; 0xffffff90
   22a14:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22a18:	str	r0, [fp, #-116]	; 0xffffff8c
   22a1c:	b	232b0 <_start@@Base+0xec90>
   22a20:	ldrd	r2, [fp, #-12]
   22a24:	mov	r0, #0
   22a28:	mvn	r1, #255	; 0xff
   22a2c:	and	r2, r2, r0
   22a30:	and	r3, r3, r1
   22a34:	add	r1, pc, #340	; 0x154
   22a38:	ldrd	r0, [r1]
   22a3c:	cmp	r3, r1
   22a40:	cmpeq	r2, r0
   22a44:	bne	22b70 <_start@@Base+0xe550>
   22a48:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22a4c:	str	r3, [fp, #-16]
   22a50:	mov	r3, #3
   22a54:	ldr	r2, [fp, #-120]	; 0xffffff88
   22a58:	ldr	r1, [fp, #-16]
   22a5c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22a60:	bl	1552c <_start@@Base+0xf0c>
   22a64:	str	r0, [fp, #-116]	; 0xffffff8c
   22a68:	ldr	r2, [fp, #-16]
   22a6c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22a70:	cmp	r2, r3
   22a74:	beq	22b58 <_start@@Base+0xe538>
   22a78:	mov	r3, #0
   22a7c:	strh	r3, [fp, #-74]	; 0xffffffb6
   22a80:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22a84:	str	r3, [fp, #-16]
   22a88:	sub	r3, fp, #74	; 0x4a
   22a8c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22a90:	ldr	r1, [fp, #-16]
   22a94:	ldr	r0, [fp, #-112]	; 0xffffff90
   22a98:	bl	15e90 <_start@@Base+0x1870>
   22a9c:	str	r0, [fp, #-116]	; 0xffffff8c
   22aa0:	ldr	r2, [fp, #-16]
   22aa4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22aa8:	cmp	r2, r3
   22aac:	bne	22afc <_start@@Base+0xe4dc>
   22ab0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22ab4:	str	r3, [fp, #-16]
   22ab8:	sub	r3, fp, #74	; 0x4a
   22abc:	str	r3, [sp]
   22ac0:	ldr	r3, [pc, #212]	; 22b9c <_start@@Base+0xe57c>
   22ac4:	add	r3, pc, r3
   22ac8:	ldr	r2, [fp, #-120]	; 0xffffff88
   22acc:	ldr	r1, [fp, #-16]
   22ad0:	ldr	r0, [fp, #-112]	; 0xffffff90
   22ad4:	bl	1679c <_start@@Base+0x217c>
   22ad8:	str	r0, [fp, #-116]	; 0xffffff8c
   22adc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22ae0:	ldr	r3, [fp, #-16]
   22ae4:	cmp	r2, r3
   22ae8:	beq	2339c <_start@@Base+0xed7c>
   22aec:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22af0:	ldr	r3, [fp, #-120]	; 0xffffff88
   22af4:	cmp	r2, r3
   22af8:	beq	2339c <_start@@Base+0xed7c>
   22afc:	ldrh	r3, [fp, #-74]	; 0xffffffb6
   22b00:	cmp	r3, #0
   22b04:	bne	22b1c <_start@@Base+0xe4fc>
   22b08:	ldr	r3, [fp, #-112]	; 0xffffff90
   22b0c:	ldr	r3, [r3, #8]
   22b10:	and	r3, r3, #2
   22b14:	cmp	r3, #0
   22b18:	beq	232b0 <_start@@Base+0xec90>
   22b1c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22b20:	ldr	r0, [r3]
   22b24:	mov	r3, #2
   22b28:	mov	r2, #2
   22b2c:	mov	r1, #3
   22b30:	bl	31134 <flatcc_builder_table_add@@Base>
   22b34:	str	r0, [fp, #-20]	; 0xffffffec
   22b38:	ldr	r3, [fp, #-20]	; 0xffffffec
   22b3c:	cmp	r3, #0
   22b40:	beq	23358 <_start@@Base+0xed38>
   22b44:	ldrh	r3, [fp, #-74]	; 0xffffffb6
   22b48:	mov	r1, r3
   22b4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22b50:	bl	147d8 <_start@@Base+0x1b8>
   22b54:	b	232b0 <_start@@Base+0xec90>
   22b58:	ldr	r2, [fp, #-120]	; 0xffffff88
   22b5c:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22b60:	ldr	r0, [fp, #-112]	; 0xffffff90
   22b64:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22b68:	str	r0, [fp, #-116]	; 0xffffff8c
   22b6c:	b	232b0 <_start@@Base+0xec90>
   22b70:	ldr	r2, [fp, #-120]	; 0xffffff88
   22b74:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22b78:	ldr	r0, [fp, #-112]	; 0xffffff90
   22b7c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22b80:	str	r0, [fp, #-116]	; 0xffffff8c
   22b84:	b	232b0 <_start@@Base+0xec90>
   22b88:	andeq	r0, r0, r0
   22b8c:	ldrvc	r3, [r3, #-512]!	; 0xfffffe00
   22b90:	andeq	r0, r0, r0
   22b94:	ldrvc	r3, [r1, #-1536]!	; 0xfffffa00
   22b98:	strdeq	pc, [r3], -ip
   22b9c:			; <UNDEFINED> instruction: 0x0003f8b8
   22ba0:	ldrvc	pc, [r7, #-4095]!	; 0xfffff001
   22ba4:	ldrd	r2, [fp, #-12]
   22ba8:	mvn	r0, #0
   22bac:	ldr	r1, [pc, #-20]	; 22ba0 <_start@@Base+0xe580>
   22bb0:	cmp	r3, r1
   22bb4:	cmpeq	r2, r0
   22bb8:	bhi	22d24 <_start@@Base+0xe704>
   22bbc:	ldrd	r2, [fp, #-12]
   22bc0:	mov	r0, #0
   22bc4:	mvn	r1, #255	; 0xff
   22bc8:	and	r2, r2, r0
   22bcc:	and	r3, r3, r1
   22bd0:	add	r1, pc, #872	; 0x368
   22bd4:	ldrd	r0, [r1]
   22bd8:	cmp	r3, r1
   22bdc:	cmpeq	r2, r0
   22be0:	bne	22d0c <_start@@Base+0xe6ec>
   22be4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22be8:	str	r3, [fp, #-16]
   22bec:	mov	r3, #3
   22bf0:	ldr	r2, [fp, #-120]	; 0xffffff88
   22bf4:	ldr	r1, [fp, #-16]
   22bf8:	ldr	r0, [fp, #-112]	; 0xffffff90
   22bfc:	bl	1552c <_start@@Base+0xf0c>
   22c00:	str	r0, [fp, #-116]	; 0xffffff8c
   22c04:	ldr	r2, [fp, #-16]
   22c08:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22c0c:	cmp	r2, r3
   22c10:	beq	22cf4 <_start@@Base+0xe6d4>
   22c14:	mov	r2, #0
   22c18:	mov	r3, #0
   22c1c:	strd	r2, [fp, #-84]	; 0xffffffac
   22c20:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22c24:	str	r3, [fp, #-16]
   22c28:	sub	r3, fp, #84	; 0x54
   22c2c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22c30:	ldr	r1, [fp, #-16]
   22c34:	ldr	r0, [fp, #-112]	; 0xffffff90
   22c38:	bl	15cec <_start@@Base+0x16cc>
   22c3c:	str	r0, [fp, #-116]	; 0xffffff8c
   22c40:	ldr	r2, [fp, #-16]
   22c44:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22c48:	cmp	r2, r3
   22c4c:	bne	22c9c <_start@@Base+0xe67c>
   22c50:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22c54:	str	r3, [fp, #-16]
   22c58:	sub	r3, fp, #84	; 0x54
   22c5c:	str	r3, [sp]
   22c60:	ldr	r3, [pc, #744]	; 22f50 <_start@@Base+0xe930>
   22c64:	add	r3, pc, r3
   22c68:	ldr	r2, [fp, #-120]	; 0xffffff88
   22c6c:	ldr	r1, [fp, #-16]
   22c70:	ldr	r0, [fp, #-112]	; 0xffffff90
   22c74:	bl	16488 <_start@@Base+0x1e68>
   22c78:	str	r0, [fp, #-116]	; 0xffffff8c
   22c7c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22c80:	ldr	r3, [fp, #-16]
   22c84:	cmp	r2, r3
   22c88:	beq	2339c <_start@@Base+0xed7c>
   22c8c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22c90:	ldr	r3, [fp, #-120]	; 0xffffff88
   22c94:	cmp	r2, r3
   22c98:	beq	2339c <_start@@Base+0xed7c>
   22c9c:	ldrd	r2, [fp, #-84]	; 0xffffffac
   22ca0:	orrs	r3, r2, r3
   22ca4:	bne	22cbc <_start@@Base+0xe69c>
   22ca8:	ldr	r3, [fp, #-112]	; 0xffffff90
   22cac:	ldr	r3, [r3, #8]
   22cb0:	and	r3, r3, #2
   22cb4:	cmp	r3, #0
   22cb8:	beq	232b0 <_start@@Base+0xec90>
   22cbc:	ldr	r3, [fp, #-112]	; 0xffffff90
   22cc0:	ldr	r0, [r3]
   22cc4:	mov	r3, #8
   22cc8:	mov	r2, #8
   22ccc:	mov	r1, #7
   22cd0:	bl	31134 <flatcc_builder_table_add@@Base>
   22cd4:	str	r0, [fp, #-20]	; 0xffffffec
   22cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   22cdc:	cmp	r3, #0
   22ce0:	beq	23360 <_start@@Base+0xed40>
   22ce4:	ldrd	r2, [fp, #-84]	; 0xffffffac
   22ce8:	ldr	r0, [fp, #-20]	; 0xffffffec
   22cec:	bl	14898 <_start@@Base+0x278>
   22cf0:	b	232b0 <_start@@Base+0xec90>
   22cf4:	ldr	r2, [fp, #-120]	; 0xffffff88
   22cf8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22cfc:	ldr	r0, [fp, #-112]	; 0xffffff90
   22d00:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22d04:	str	r0, [fp, #-116]	; 0xffffff8c
   22d08:	b	232b0 <_start@@Base+0xec90>
   22d0c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22d10:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22d14:	ldr	r0, [fp, #-112]	; 0xffffff90
   22d18:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22d1c:	str	r0, [fp, #-116]	; 0xffffff8c
   22d20:	b	232b0 <_start@@Base+0xec90>
   22d24:	ldrd	r2, [fp, #-12]
   22d28:	mvn	r0, #0
   22d2c:	ldr	r1, [pc, #544]	; 22f54 <_start@@Base+0xe934>
   22d30:	cmp	r3, r1
   22d34:	cmpeq	r2, r0
   22d38:	bhi	22ea4 <_start@@Base+0xe884>
   22d3c:	ldrd	r2, [fp, #-12]
   22d40:	mov	r0, #0
   22d44:	ldr	r1, [pc, #536]	; 22f64 <_start@@Base+0xe944>
   22d48:	and	r2, r2, r0
   22d4c:	and	r3, r3, r1
   22d50:	mov	r0, #0
   22d54:	ldr	r1, [pc, #508]	; 22f58 <_start@@Base+0xe938>
   22d58:	cmp	r3, r1
   22d5c:	cmpeq	r2, r0
   22d60:	bne	22e8c <_start@@Base+0xe86c>
   22d64:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22d68:	str	r3, [fp, #-16]
   22d6c:	mov	r3, #2
   22d70:	ldr	r2, [fp, #-120]	; 0xffffff88
   22d74:	ldr	r1, [fp, #-16]
   22d78:	ldr	r0, [fp, #-112]	; 0xffffff90
   22d7c:	bl	1552c <_start@@Base+0xf0c>
   22d80:	str	r0, [fp, #-116]	; 0xffffff8c
   22d84:	ldr	r2, [fp, #-16]
   22d88:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22d8c:	cmp	r2, r3
   22d90:	beq	22e74 <_start@@Base+0xe854>
   22d94:	mov	r3, #0
   22d98:	strb	r3, [fp, #-85]	; 0xffffffab
   22d9c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22da0:	str	r3, [fp, #-16]
   22da4:	sub	r3, fp, #85	; 0x55
   22da8:	ldr	r2, [fp, #-120]	; 0xffffff88
   22dac:	ldr	r1, [fp, #-16]
   22db0:	ldr	r0, [fp, #-112]	; 0xffffff90
   22db4:	bl	15f60 <_start@@Base+0x1940>
   22db8:	str	r0, [fp, #-116]	; 0xffffff8c
   22dbc:	ldr	r2, [fp, #-16]
   22dc0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22dc4:	cmp	r2, r3
   22dc8:	bne	22e18 <_start@@Base+0xe7f8>
   22dcc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22dd0:	str	r3, [fp, #-16]
   22dd4:	sub	r3, fp, #85	; 0x55
   22dd8:	str	r3, [sp]
   22ddc:	ldr	r3, [pc, #376]	; 22f5c <_start@@Base+0xe93c>
   22de0:	add	r3, pc, r3
   22de4:	ldr	r2, [fp, #-120]	; 0xffffff88
   22de8:	ldr	r1, [fp, #-16]
   22dec:	ldr	r0, [fp, #-112]	; 0xffffff90
   22df0:	bl	16924 <_start@@Base+0x2304>
   22df4:	str	r0, [fp, #-116]	; 0xffffff8c
   22df8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22dfc:	ldr	r3, [fp, #-16]
   22e00:	cmp	r2, r3
   22e04:	beq	2339c <_start@@Base+0xed7c>
   22e08:	ldr	r2, [fp, #-116]	; 0xffffff8c
   22e0c:	ldr	r3, [fp, #-120]	; 0xffffff88
   22e10:	cmp	r2, r3
   22e14:	beq	2339c <_start@@Base+0xed7c>
   22e18:	ldrb	r3, [fp, #-85]	; 0xffffffab
   22e1c:	cmp	r3, #0
   22e20:	bne	22e38 <_start@@Base+0xe818>
   22e24:	ldr	r3, [fp, #-112]	; 0xffffff90
   22e28:	ldr	r3, [r3, #8]
   22e2c:	and	r3, r3, #2
   22e30:	cmp	r3, #0
   22e34:	beq	232b0 <_start@@Base+0xec90>
   22e38:	ldr	r3, [fp, #-112]	; 0xffffff90
   22e3c:	ldr	r0, [r3]
   22e40:	mov	r3, #1
   22e44:	mov	r2, #1
   22e48:	mov	r1, #1
   22e4c:	bl	31134 <flatcc_builder_table_add@@Base>
   22e50:	str	r0, [fp, #-20]	; 0xffffffec
   22e54:	ldr	r3, [fp, #-20]	; 0xffffffec
   22e58:	cmp	r3, #0
   22e5c:	beq	23368 <_start@@Base+0xed48>
   22e60:	ldrb	r3, [fp, #-85]	; 0xffffffab
   22e64:	mov	r1, r3
   22e68:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e6c:	bl	14770 <_start@@Base+0x150>
   22e70:	b	232b0 <_start@@Base+0xec90>
   22e74:	ldr	r2, [fp, #-120]	; 0xffffff88
   22e78:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22e7c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22e80:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22e84:	str	r0, [fp, #-116]	; 0xffffff8c
   22e88:	b	232b0 <_start@@Base+0xec90>
   22e8c:	ldr	r2, [fp, #-120]	; 0xffffff88
   22e90:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22e94:	ldr	r0, [fp, #-112]	; 0xffffff90
   22e98:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   22e9c:	str	r0, [fp, #-116]	; 0xffffff8c
   22ea0:	b	232b0 <_start@@Base+0xec90>
   22ea4:	ldrd	r2, [fp, #-12]
   22ea8:	mov	r0, #0
   22eac:	mvn	r1, #0
   22eb0:	and	r2, r2, r0
   22eb4:	and	r3, r3, r1
   22eb8:	add	r1, pc, #136	; 0x88
   22ebc:	ldrd	r0, [r1]
   22ec0:	cmp	r3, r1
   22ec4:	cmpeq	r2, r0
   22ec8:	bne	230bc <_start@@Base+0xea9c>
   22ecc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22ed0:	str	r3, [fp, #-16]
   22ed4:	mov	r3, #4
   22ed8:	ldr	r2, [fp, #-120]	; 0xffffff88
   22edc:	ldr	r1, [fp, #-16]
   22ee0:	ldr	r0, [fp, #-112]	; 0xffffff90
   22ee4:	bl	1552c <_start@@Base+0xf0c>
   22ee8:	str	r0, [fp, #-116]	; 0xffffff8c
   22eec:	ldr	r2, [fp, #-16]
   22ef0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22ef4:	cmp	r2, r3
   22ef8:	beq	230a4 <_start@@Base+0xea84>
   22efc:	ldr	r3, [fp, #-112]	; 0xffffff90
   22f00:	ldr	r0, [r3]
   22f04:	mvn	r3, #-536870912	; 0xe0000000
   22f08:	mov	r2, #8
   22f0c:	mov	r1, #8
   22f10:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   22f14:	mov	r3, r0
   22f18:	cmp	r3, #0
   22f1c:	bne	23370 <_start@@Base+0xed50>
   22f20:	sub	r3, fp, #32
   22f24:	ldr	r2, [fp, #-120]	; 0xffffff88
   22f28:	ldr	r1, [fp, #-116]	; 0xffffff8c
   22f2c:	ldr	r0, [fp, #-112]	; 0xffffff90
   22f30:	bl	152dc <_start@@Base+0xcbc>
   22f34:	str	r0, [fp, #-116]	; 0xffffff8c
   22f38:	b	23044 <_start@@Base+0xea24>
   22f3c:	nop			; (mov r0, r0)
   22f40:	andeq	r0, r0, r0
   22f44:	ldrvc	r3, [r6, #-1024]!	; 0xfffffc00
   22f48:	andeq	r0, r0, r0
   22f4c:			; <UNDEFINED> instruction: 0x76663634
   22f50:	andeq	pc, r3, r4, lsr #14
   22f54:	shsub8vc	pc, r7, pc	; <UNPREDICTABLE>
   22f58:	ldrvc	r0, [r8, #-0]!
   22f5c:			; <UNDEFINED> instruction: 0x0003f5b4
   22f60:			; <UNDEFINED> instruction: 0x0003f3bc
   22f64:			; <UNDEFINED> instruction: 0xffff0000
   22f68:	ldrtvc	r0, [r8], -r0
   22f6c:	andeq	pc, r3, r8, ror #3
   22f70:	mov	r2, #0
   22f74:	mov	r3, #0
   22f78:	strd	r2, [fp, #-100]	; 0xffffff9c
   22f7c:	ldr	r3, [fp, #-112]	; 0xffffff90
   22f80:	ldr	r3, [r3]
   22f84:	mov	r1, #1
   22f88:	mov	r0, r3
   22f8c:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   22f90:	str	r0, [fp, #-20]	; 0xffffffec
   22f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   22f98:	cmp	r3, #0
   22f9c:	beq	23378 <_start@@Base+0xed58>
   22fa0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22fa4:	str	r3, [fp, #-16]
   22fa8:	sub	r3, fp, #100	; 0x64
   22fac:	ldr	r2, [fp, #-120]	; 0xffffff88
   22fb0:	ldr	r1, [fp, #-16]
   22fb4:	ldr	r0, [fp, #-112]	; 0xffffff90
   22fb8:	bl	3af80 <flatcc_json_parser_double@@Base>
   22fbc:	str	r0, [fp, #-116]	; 0xffffff8c
   22fc0:	ldr	r2, [fp, #-16]
   22fc4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22fc8:	cmp	r2, r3
   22fcc:	bne	2301c <_start@@Base+0xe9fc>
   22fd0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   22fd4:	str	r3, [fp, #-16]
   22fd8:	sub	r3, fp, #100	; 0x64
   22fdc:	str	r3, [sp]
   22fe0:	ldr	r3, [pc, #-136]	; 22f60 <_start@@Base+0xe940>
   22fe4:	add	r3, pc, r3
   22fe8:	ldr	r2, [fp, #-120]	; 0xffffff88
   22fec:	ldr	r1, [fp, #-16]
   22ff0:	ldr	r0, [fp, #-112]	; 0xffffff90
   22ff4:	bl	173f4 <_start@@Base+0x2dd4>
   22ff8:	str	r0, [fp, #-116]	; 0xffffff8c
   22ffc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   23000:	ldr	r3, [fp, #-16]
   23004:	cmp	r2, r3
   23008:	beq	23378 <_start@@Base+0xed58>
   2300c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   23010:	ldr	r3, [fp, #-120]	; 0xffffff88
   23014:	cmp	r2, r3
   23018:	beq	23378 <_start@@Base+0xed58>
   2301c:	vldr	d7, [fp, #-100]	; 0xffffff9c
   23020:	vmov.f64	d0, d7
   23024:	ldr	r0, [fp, #-20]	; 0xffffffec
   23028:	bl	14afc <_start@@Base+0x4dc>
   2302c:	sub	r3, fp, #32
   23030:	ldr	r2, [fp, #-120]	; 0xffffff88
   23034:	ldr	r1, [fp, #-116]	; 0xffffff8c
   23038:	ldr	r0, [fp, #-112]	; 0xffffff90
   2303c:	bl	153c4 <_start@@Base+0xda4>
   23040:	str	r0, [fp, #-116]	; 0xffffff8c
   23044:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23048:	cmp	r3, #0
   2304c:	bne	22f70 <_start@@Base+0xe950>
   23050:	ldr	r3, [fp, #-112]	; 0xffffff90
   23054:	ldr	r3, [r3]
   23058:	mov	r0, r3
   2305c:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   23060:	str	r0, [fp, #-24]	; 0xffffffe8
   23064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23068:	cmp	r3, #0
   2306c:	beq	2339c <_start@@Base+0xed7c>
   23070:	ldr	r3, [fp, #-112]	; 0xffffff90
   23074:	ldr	r3, [r3]
   23078:	mov	r1, #11
   2307c:	mov	r0, r3
   23080:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   23084:	str	r0, [fp, #-28]	; 0xffffffe4
   23088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2308c:	cmp	r3, #0
   23090:	beq	2339c <_start@@Base+0xed7c>
   23094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23098:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2309c:	str	r2, [r3]
   230a0:	b	232b0 <_start@@Base+0xec90>
   230a4:	ldr	r2, [fp, #-120]	; 0xffffff88
   230a8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   230ac:	ldr	r0, [fp, #-112]	; 0xffffff90
   230b0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   230b4:	str	r0, [fp, #-116]	; 0xffffff8c
   230b8:	b	232b0 <_start@@Base+0xec90>
   230bc:	ldrd	r2, [fp, #-12]
   230c0:	mov	r0, #0
   230c4:	ldr	r1, [pc, #-360]	; 22f64 <_start@@Base+0xe944>
   230c8:	and	r2, r2, r0
   230cc:	and	r3, r3, r1
   230d0:	mov	r0, #0
   230d4:	ldr	r1, [pc, #-372]	; 22f68 <_start@@Base+0xe948>
   230d8:	cmp	r3, r1
   230dc:	cmpeq	r2, r0
   230e0:	bne	2329c <_start@@Base+0xec7c>
   230e4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   230e8:	str	r3, [fp, #-16]
   230ec:	mov	r3, #2
   230f0:	ldr	r2, [fp, #-120]	; 0xffffff88
   230f4:	ldr	r1, [fp, #-16]
   230f8:	ldr	r0, [fp, #-112]	; 0xffffff90
   230fc:	bl	1552c <_start@@Base+0xf0c>
   23100:	str	r0, [fp, #-116]	; 0xffffff8c
   23104:	ldr	r2, [fp, #-16]
   23108:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2310c:	cmp	r2, r3
   23110:	beq	23284 <_start@@Base+0xec64>
   23114:	ldr	r3, [fp, #-112]	; 0xffffff90
   23118:	ldr	r0, [r3]
   2311c:	mvn	r3, #0
   23120:	mov	r2, #1
   23124:	mov	r1, #1
   23128:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   2312c:	mov	r3, r0
   23130:	cmp	r3, #0
   23134:	bne	23380 <_start@@Base+0xed60>
   23138:	sub	r3, fp, #32
   2313c:	ldr	r2, [fp, #-120]	; 0xffffff88
   23140:	ldr	r1, [fp, #-116]	; 0xffffff8c
   23144:	ldr	r0, [fp, #-112]	; 0xffffff90
   23148:	bl	152dc <_start@@Base+0xcbc>
   2314c:	str	r0, [fp, #-116]	; 0xffffff8c
   23150:	b	23224 <_start@@Base+0xec04>
   23154:	mov	r3, #0
   23158:	strb	r3, [fp, #-101]	; 0xffffff9b
   2315c:	ldr	r3, [fp, #-112]	; 0xffffff90
   23160:	ldr	r3, [r3]
   23164:	mov	r1, #1
   23168:	mov	r0, r3
   2316c:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   23170:	str	r0, [fp, #-20]	; 0xffffffec
   23174:	ldr	r3, [fp, #-20]	; 0xffffffec
   23178:	cmp	r3, #0
   2317c:	beq	23388 <_start@@Base+0xed68>
   23180:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23184:	str	r3, [fp, #-16]
   23188:	sub	r3, fp, #101	; 0x65
   2318c:	ldr	r2, [fp, #-120]	; 0xffffff88
   23190:	ldr	r1, [fp, #-16]
   23194:	ldr	r0, [fp, #-112]	; 0xffffff90
   23198:	bl	162a4 <_start@@Base+0x1c84>
   2319c:	str	r0, [fp, #-116]	; 0xffffff8c
   231a0:	ldr	r2, [fp, #-16]
   231a4:	ldr	r3, [fp, #-116]	; 0xffffff8c
   231a8:	cmp	r2, r3
   231ac:	bne	231fc <_start@@Base+0xebdc>
   231b0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   231b4:	str	r3, [fp, #-16]
   231b8:	sub	r3, fp, #101	; 0x65
   231bc:	str	r3, [sp]
   231c0:	ldr	r3, [pc, #-604]	; 22f6c <_start@@Base+0xe94c>
   231c4:	add	r3, pc, r3
   231c8:	ldr	r2, [fp, #-120]	; 0xffffff88
   231cc:	ldr	r1, [fp, #-16]
   231d0:	ldr	r0, [fp, #-112]	; 0xffffff90
   231d4:	bl	16f54 <_start@@Base+0x2934>
   231d8:	str	r0, [fp, #-116]	; 0xffffff8c
   231dc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   231e0:	ldr	r3, [fp, #-16]
   231e4:	cmp	r2, r3
   231e8:	beq	23388 <_start@@Base+0xed68>
   231ec:	ldr	r2, [fp, #-116]	; 0xffffff8c
   231f0:	ldr	r3, [fp, #-120]	; 0xffffff88
   231f4:	cmp	r2, r3
   231f8:	beq	23388 <_start@@Base+0xed68>
   231fc:	ldrsb	r3, [fp, #-101]	; 0xffffff9b
   23200:	mov	r1, r3
   23204:	ldr	r0, [fp, #-20]	; 0xffffffec
   23208:	bl	148f8 <_start@@Base+0x2d8>
   2320c:	sub	r3, fp, #32
   23210:	ldr	r2, [fp, #-120]	; 0xffffff88
   23214:	ldr	r1, [fp, #-116]	; 0xffffff8c
   23218:	ldr	r0, [fp, #-112]	; 0xffffff90
   2321c:	bl	153c4 <_start@@Base+0xda4>
   23220:	str	r0, [fp, #-116]	; 0xffffff8c
   23224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   23228:	cmp	r3, #0
   2322c:	bne	23154 <_start@@Base+0xeb34>
   23230:	ldr	r3, [fp, #-112]	; 0xffffff90
   23234:	ldr	r3, [r3]
   23238:	mov	r0, r3
   2323c:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   23240:	str	r0, [fp, #-24]	; 0xffffffe8
   23244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23248:	cmp	r3, #0
   2324c:	beq	2339c <_start@@Base+0xed7c>
   23250:	ldr	r3, [fp, #-112]	; 0xffffff90
   23254:	ldr	r3, [r3]
   23258:	mov	r1, #10
   2325c:	mov	r0, r3
   23260:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   23264:	str	r0, [fp, #-28]	; 0xffffffe4
   23268:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2326c:	cmp	r3, #0
   23270:	beq	2339c <_start@@Base+0xed7c>
   23274:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2327c:	str	r2, [r3]
   23280:	b	232b0 <_start@@Base+0xec90>
   23284:	ldr	r2, [fp, #-120]	; 0xffffff88
   23288:	ldr	r1, [fp, #-116]	; 0xffffff8c
   2328c:	ldr	r0, [fp, #-112]	; 0xffffff90
   23290:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   23294:	str	r0, [fp, #-116]	; 0xffffff8c
   23298:	b	232b0 <_start@@Base+0xec90>
   2329c:	ldr	r2, [fp, #-120]	; 0xffffff88
   232a0:	ldr	r1, [fp, #-116]	; 0xffffff8c
   232a4:	ldr	r0, [fp, #-112]	; 0xffffff90
   232a8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   232ac:	str	r0, [fp, #-116]	; 0xffffff8c
   232b0:	sub	r3, fp, #32
   232b4:	ldr	r2, [fp, #-120]	; 0xffffff88
   232b8:	ldr	r1, [fp, #-116]	; 0xffffff8c
   232bc:	ldr	r0, [fp, #-112]	; 0xffffff90
   232c0:	bl	15174 <_start@@Base+0xb54>
   232c4:	str	r0, [fp, #-116]	; 0xffffff8c
   232c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   232cc:	cmp	r3, #0
   232d0:	bne	21f78 <_start@@Base+0xd958>
   232d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   232d8:	ldr	r3, [r3, #20]
   232dc:	cmp	r3, #0
   232e0:	bne	23390 <_start@@Base+0xed70>
   232e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   232e8:	ldr	r3, [r3]
   232ec:	mov	r0, r3
   232f0:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   232f4:	mov	r2, r0
   232f8:	ldr	r3, [fp, #-124]	; 0xffffff84
   232fc:	str	r2, [r3]
   23300:	ldr	r3, [fp, #-124]	; 0xffffff84
   23304:	ldr	r3, [r3]
   23308:	cmp	r3, #0
   2330c:	beq	23398 <_start@@Base+0xed78>
   23310:	ldr	r3, [fp, #-116]	; 0xffffff8c
   23314:	b	233b4 <_start@@Base+0xed94>
   23318:	nop			; (mov r0, r0)
   2331c:	b	2339c <_start@@Base+0xed7c>
   23320:	nop			; (mov r0, r0)
   23324:	b	2339c <_start@@Base+0xed7c>
   23328:	nop			; (mov r0, r0)
   2332c:	b	2339c <_start@@Base+0xed7c>
   23330:	nop			; (mov r0, r0)
   23334:	b	2339c <_start@@Base+0xed7c>
   23338:	nop			; (mov r0, r0)
   2333c:	b	2339c <_start@@Base+0xed7c>
   23340:	nop			; (mov r0, r0)
   23344:	b	2339c <_start@@Base+0xed7c>
   23348:	nop			; (mov r0, r0)
   2334c:	b	2339c <_start@@Base+0xed7c>
   23350:	nop			; (mov r0, r0)
   23354:	b	2339c <_start@@Base+0xed7c>
   23358:	nop			; (mov r0, r0)
   2335c:	b	2339c <_start@@Base+0xed7c>
   23360:	nop			; (mov r0, r0)
   23364:	b	2339c <_start@@Base+0xed7c>
   23368:	nop			; (mov r0, r0)
   2336c:	b	2339c <_start@@Base+0xed7c>
   23370:	nop			; (mov r0, r0)
   23374:	b	2339c <_start@@Base+0xed7c>
   23378:	nop			; (mov r0, r0)
   2337c:	b	2339c <_start@@Base+0xed7c>
   23380:	nop			; (mov r0, r0)
   23384:	b	2339c <_start@@Base+0xed7c>
   23388:	nop			; (mov r0, r0)
   2338c:	b	2339c <_start@@Base+0xed7c>
   23390:	nop			; (mov r0, r0)
   23394:	b	2339c <_start@@Base+0xed7c>
   23398:	nop			; (mov r0, r0)
   2339c:	mov	r3, #33	; 0x21
   233a0:	ldr	r2, [fp, #-120]	; 0xffffff88
   233a4:	ldr	r1, [fp, #-116]	; 0xffffff8c
   233a8:	ldr	r0, [fp, #-112]	; 0xffffff90
   233ac:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   233b0:	mov	r3, r0
   233b4:	mov	r0, r3
   233b8:	sub	sp, fp, #4
   233bc:	pop	{fp, pc}
   233c0:	push	{fp, lr}
   233c4:	add	fp, sp, #4
   233c8:	sub	sp, sp, #48	; 0x30
   233cc:	str	r0, [fp, #-32]	; 0xffffffe0
   233d0:	str	r1, [fp, #-36]	; 0xffffffdc
   233d4:	str	r2, [fp, #-40]	; 0xffffffd8
   233d8:	str	r3, [fp, #-44]	; 0xffffffd4
   233dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   233e0:	mov	r2, #0
   233e4:	str	r2, [r3]
   233e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   233ec:	ldr	r3, [r3]
   233f0:	mov	r1, #1
   233f4:	mov	r0, r3
   233f8:	bl	2ec40 <flatcc_builder_start_table@@Base>
   233fc:	mov	r3, r0
   23400:	cmp	r3, #0
   23404:	bne	236ac <_start@@Base+0xf08c>
   23408:	sub	r3, fp, #24
   2340c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23410:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23414:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23418:	bl	1508c <_start@@Base+0xa6c>
   2341c:	str	r0, [fp, #-36]	; 0xffffffdc
   23420:	b	2365c <_start@@Base+0xf03c>
   23424:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23428:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2342c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23430:	bl	14cb8 <_start@@Base+0x698>
   23434:	str	r0, [fp, #-36]	; 0xffffffdc
   23438:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2343c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23440:	bl	14f70 <_start@@Base+0x950>
   23444:	strd	r0, [fp, #-12]
   23448:	ldrd	r2, [fp, #-12]
   2344c:	add	r1, pc, #668	; 0x29c
   23450:	ldrd	r0, [r1]
   23454:	cmp	r3, r1
   23458:	cmpeq	r2, r0
   2345c:	bne	23630 <_start@@Base+0xf010>
   23460:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23464:	add	r3, r3, #8
   23468:	str	r3, [fp, #-36]	; 0xffffffdc
   2346c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23474:	bl	14f70 <_start@@Base+0x950>
   23478:	strd	r0, [fp, #-12]
   2347c:	ldrd	r2, [fp, #-12]
   23480:	add	r1, pc, #624	; 0x270
   23484:	ldrd	r0, [r1]
   23488:	cmp	r3, r1
   2348c:	cmpeq	r2, r0
   23490:	bne	23618 <_start@@Base+0xeff8>
   23494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23498:	add	r3, r3, #8
   2349c:	str	r3, [fp, #-36]	; 0xffffffdc
   234a0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   234a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   234a8:	bl	14f70 <_start@@Base+0x950>
   234ac:	strd	r0, [fp, #-12]
   234b0:	ldrd	r2, [fp, #-12]
   234b4:	mov	r0, #0
   234b8:	mvn	r1, #255	; 0xff
   234bc:	and	r2, r2, r0
   234c0:	and	r3, r3, r1
   234c4:	add	r1, pc, #564	; 0x234
   234c8:	ldrd	r0, [r1]
   234cc:	cmp	r3, r1
   234d0:	cmpeq	r2, r0
   234d4:	bne	23600 <_start@@Base+0xefe0>
   234d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   234dc:	str	r3, [fp, #-16]
   234e0:	mov	r3, #3
   234e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   234e8:	ldr	r1, [fp, #-16]
   234ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   234f0:	bl	1552c <_start@@Base+0xf0c>
   234f4:	str	r0, [fp, #-36]	; 0xffffffdc
   234f8:	ldr	r2, [fp, #-16]
   234fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23500:	cmp	r2, r3
   23504:	beq	235e8 <_start@@Base+0xefc8>
   23508:	mov	r3, #0
   2350c:	str	r3, [fp, #-28]	; 0xffffffe4
   23510:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23514:	str	r3, [fp, #-16]
   23518:	sub	r3, fp, #28
   2351c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23520:	ldr	r1, [fp, #-16]
   23524:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23528:	bl	16104 <_start@@Base+0x1ae4>
   2352c:	str	r0, [fp, #-36]	; 0xffffffdc
   23530:	ldr	r2, [fp, #-16]
   23534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23538:	cmp	r2, r3
   2353c:	bne	2358c <_start@@Base+0xef6c>
   23540:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23544:	str	r3, [fp, #-16]
   23548:	sub	r3, fp, #28
   2354c:	str	r3, [sp]
   23550:	ldr	r3, [pc, #432]	; 23708 <_start@@Base+0xf0e8>
   23554:	add	r3, pc, r3
   23558:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2355c:	ldr	r1, [fp, #-16]
   23560:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23564:	bl	16c3c <_start@@Base+0x261c>
   23568:	str	r0, [fp, #-36]	; 0xffffffdc
   2356c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23570:	ldr	r3, [fp, #-16]
   23574:	cmp	r2, r3
   23578:	beq	236c8 <_start@@Base+0xf0a8>
   2357c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23580:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23584:	cmp	r2, r3
   23588:	beq	236c8 <_start@@Base+0xf0a8>
   2358c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23590:	cmp	r3, #0
   23594:	bne	235ac <_start@@Base+0xef8c>
   23598:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2359c:	ldr	r3, [r3, #8]
   235a0:	and	r3, r3, #2
   235a4:	cmp	r3, #0
   235a8:	beq	23644 <_start@@Base+0xf024>
   235ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   235b0:	ldr	r0, [r3]
   235b4:	mov	r3, #4
   235b8:	mov	r2, #4
   235bc:	mov	r1, #0
   235c0:	bl	31134 <flatcc_builder_table_add@@Base>
   235c4:	str	r0, [fp, #-20]	; 0xffffffec
   235c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   235cc:	cmp	r3, #0
   235d0:	beq	236b4 <_start@@Base+0xf094>
   235d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   235d8:	mov	r1, r3
   235dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   235e0:	bl	149c4 <_start@@Base+0x3a4>
   235e4:	b	23644 <_start@@Base+0xf024>
   235e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   235ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   235f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   235f4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   235f8:	str	r0, [fp, #-36]	; 0xffffffdc
   235fc:	b	23644 <_start@@Base+0xf024>
   23600:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23604:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23608:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2360c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   23610:	str	r0, [fp, #-36]	; 0xffffffdc
   23614:	b	23644 <_start@@Base+0xf024>
   23618:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2361c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23620:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23624:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   23628:	str	r0, [fp, #-36]	; 0xffffffdc
   2362c:	b	23644 <_start@@Base+0xf024>
   23630:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23634:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23638:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2363c:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   23640:	str	r0, [fp, #-36]	; 0xffffffdc
   23644:	sub	r3, fp, #24
   23648:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2364c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23650:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23654:	bl	15174 <_start@@Base+0xb54>
   23658:	str	r0, [fp, #-36]	; 0xffffffdc
   2365c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23660:	cmp	r3, #0
   23664:	bne	23424 <_start@@Base+0xee04>
   23668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2366c:	ldr	r3, [r3, #20]
   23670:	cmp	r3, #0
   23674:	bne	236bc <_start@@Base+0xf09c>
   23678:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2367c:	ldr	r3, [r3]
   23680:	mov	r0, r3
   23684:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   23688:	mov	r2, r0
   2368c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23690:	str	r2, [r3]
   23694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23698:	ldr	r3, [r3]
   2369c:	cmp	r3, #0
   236a0:	beq	236c4 <_start@@Base+0xf0a4>
   236a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   236a8:	b	236e0 <_start@@Base+0xf0c0>
   236ac:	nop			; (mov r0, r0)
   236b0:	b	236c8 <_start@@Base+0xf0a8>
   236b4:	nop			; (mov r0, r0)
   236b8:	b	236c8 <_start@@Base+0xf0a8>
   236bc:	nop			; (mov r0, r0)
   236c0:	b	236c8 <_start@@Base+0xf0a8>
   236c4:	nop			; (mov r0, r0)
   236c8:	mov	r3, #33	; 0x21
   236cc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   236d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   236d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   236d8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   236dc:	mov	r3, r0
   236e0:	mov	r0, r3
   236e4:	sub	sp, fp, #4
   236e8:	pop	{fp, pc}
   236ec:	nop			; (mov r0, r0)
   236f0:	ldrbvs	r6, [pc], #-372	; 236f8 <_start@@Base+0xf0d8>
   236f4:	cmnvc	r7, #456	; 0x1c8
   236f8:	svcpl	0x0064616d
   236fc:	strbtvc	r6, [r1], #-875	; 0xfffffc95
   23700:	andeq	r0, r0, r0
   23704:	cmnvs	r7, r0, lsl #10
   23708:	andeq	lr, r3, r4, ror #28
   2370c:	push	{fp, lr}
   23710:	add	fp, sp, #4
   23714:	sub	sp, sp, #48	; 0x30
   23718:	str	r0, [fp, #-32]	; 0xffffffe0
   2371c:	str	r1, [fp, #-36]	; 0xffffffdc
   23720:	str	r2, [fp, #-40]	; 0xffffffd8
   23724:	str	r3, [fp, #-44]	; 0xffffffd4
   23728:	sub	r3, fp, #24
   2372c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23730:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23734:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23738:	bl	1508c <_start@@Base+0xa6c>
   2373c:	str	r0, [fp, #-36]	; 0xffffffdc
   23740:	b	238f0 <_start@@Base+0xf2d0>
   23744:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23748:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2374c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23750:	bl	14cb8 <_start@@Base+0x698>
   23754:	str	r0, [fp, #-36]	; 0xffffffdc
   23758:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2375c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23760:	bl	14f70 <_start@@Base+0x950>
   23764:	strd	r0, [fp, #-12]
   23768:	ldrd	r2, [fp, #-12]
   2376c:	add	r1, pc, #436	; 0x1b4
   23770:	ldrd	r0, [r1]
   23774:	cmp	r3, r1
   23778:	cmpeq	r2, r0
   2377c:	bne	238c4 <_start@@Base+0xf2a4>
   23780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23784:	add	r3, r3, #8
   23788:	str	r3, [fp, #-36]	; 0xffffffdc
   2378c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23790:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23794:	bl	14f70 <_start@@Base+0x950>
   23798:	strd	r0, [fp, #-12]
   2379c:	ldrd	r2, [fp, #-12]
   237a0:	mov	r0, #0
   237a4:	mvn	r1, #255	; 0xff
   237a8:	and	r2, r2, r0
   237ac:	and	r3, r3, r1
   237b0:	add	r1, pc, #376	; 0x178
   237b4:	ldrd	r0, [r1]
   237b8:	cmp	r3, r1
   237bc:	cmpeq	r2, r0
   237c0:	bne	238ac <_start@@Base+0xf28c>
   237c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   237c8:	str	r3, [fp, #-16]
   237cc:	mov	r3, #3
   237d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   237d4:	ldr	r1, [fp, #-16]
   237d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   237dc:	bl	1552c <_start@@Base+0xf0c>
   237e0:	str	r0, [fp, #-36]	; 0xffffffdc
   237e4:	ldr	r2, [fp, #-16]
   237e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   237ec:	cmp	r2, r3
   237f0:	beq	23894 <_start@@Base+0xf274>
   237f4:	mov	r3, #0
   237f8:	strh	r3, [fp, #-26]	; 0xffffffe6
   237fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23800:	str	r3, [fp, #-20]	; 0xffffffec
   23804:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23808:	str	r3, [fp, #-16]
   2380c:	sub	r3, fp, #26
   23810:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23814:	ldr	r1, [fp, #-16]
   23818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2381c:	bl	15e90 <_start@@Base+0x1870>
   23820:	str	r0, [fp, #-36]	; 0xffffffdc
   23824:	ldr	r2, [fp, #-16]
   23828:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2382c:	cmp	r2, r3
   23830:	bne	23880 <_start@@Base+0xf260>
   23834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23838:	str	r3, [fp, #-16]
   2383c:	sub	r3, fp, #26
   23840:	str	r3, [sp]
   23844:	ldr	r3, [pc, #236]	; 23938 <_start@@Base+0xf318>
   23848:	add	r3, pc, r3
   2384c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23850:	ldr	r1, [fp, #-16]
   23854:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23858:	bl	1679c <_start@@Base+0x217c>
   2385c:	str	r0, [fp, #-36]	; 0xffffffdc
   23860:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23864:	ldr	r3, [fp, #-16]
   23868:	cmp	r2, r3
   2386c:	beq	23904 <_start@@Base+0xf2e4>
   23870:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23874:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23878:	cmp	r2, r3
   2387c:	beq	23904 <_start@@Base+0xf2e4>
   23880:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   23884:	mov	r1, r3
   23888:	ldr	r0, [fp, #-20]	; 0xffffffec
   2388c:	bl	147d8 <_start@@Base+0x1b8>
   23890:	b	238d8 <_start@@Base+0xf2b8>
   23894:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23898:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2389c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   238a0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   238a4:	str	r0, [fp, #-36]	; 0xffffffdc
   238a8:	b	238d8 <_start@@Base+0xf2b8>
   238ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   238b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   238b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   238b8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   238bc:	str	r0, [fp, #-36]	; 0xffffffdc
   238c0:	b	238d8 <_start@@Base+0xf2b8>
   238c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   238c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   238cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   238d0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   238d4:	str	r0, [fp, #-36]	; 0xffffffdc
   238d8:	sub	r3, fp, #24
   238dc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   238e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   238e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   238e8:	bl	15174 <_start@@Base+0xb54>
   238ec:	str	r0, [fp, #-36]	; 0xffffffdc
   238f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238f4:	cmp	r3, #0
   238f8:	bne	23744 <_start@@Base+0xf124>
   238fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23900:	b	2391c <_start@@Base+0xf2fc>
   23904:	mov	r3, #33	; 0x21
   23908:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2390c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23914:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   23918:	mov	r3, r0
   2391c:	mov	r0, r3
   23920:	sub	sp, fp, #4
   23924:	pop	{fp, pc}
   23928:	svcpl	0x006c656e
   2392c:	stmdavs	r1!, {r1, r4, r5, r6, r8, fp, sp, lr}^
   23930:	andeq	r0, r0, r0
   23934:	ldrbvs	r6, [r4, -r0, lsl #16]!
   23938:	andeq	lr, r3, ip, ror fp
   2393c:	push	{fp, lr}
   23940:	add	fp, sp, #4
   23944:	sub	sp, sp, #24
   23948:	str	r0, [fp, #-16]
   2394c:	str	r1, [fp, #-20]	; 0xffffffec
   23950:	str	r2, [fp, #-24]	; 0xffffffe8
   23954:	str	r3, [fp, #-28]	; 0xffffffe4
   23958:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2395c:	mov	r2, #0
   23960:	str	r2, [r3]
   23964:	ldr	r3, [fp, #-16]
   23968:	ldr	r3, [r3]
   2396c:	mov	r2, #2
   23970:	mov	r1, #2
   23974:	mov	r0, r3
   23978:	bl	2deac <flatcc_builder_start_struct@@Base>
   2397c:	str	r0, [fp, #-8]
   23980:	ldr	r3, [fp, #-8]
   23984:	cmp	r3, #0
   23988:	beq	239e8 <_start@@Base+0xf3c8>
   2398c:	ldr	r3, [fp, #-8]
   23990:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23994:	ldr	r1, [fp, #-20]	; 0xffffffec
   23998:	ldr	r0, [fp, #-16]
   2399c:	bl	2370c <_start@@Base+0xf0ec>
   239a0:	str	r0, [fp, #-20]	; 0xffffffec
   239a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   239a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   239ac:	cmp	r2, r3
   239b0:	beq	239ec <_start@@Base+0xf3cc>
   239b4:	ldr	r3, [fp, #-16]
   239b8:	ldr	r3, [r3]
   239bc:	mov	r0, r3
   239c0:	bl	2df4c <flatcc_builder_end_struct@@Base>
   239c4:	mov	r2, r0
   239c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   239cc:	str	r2, [r3]
   239d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   239d4:	ldr	r3, [r3]
   239d8:	cmp	r3, #0
   239dc:	beq	239ec <_start@@Base+0xf3cc>
   239e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   239e4:	b	23a04 <_start@@Base+0xf3e4>
   239e8:	nop			; (mov r0, r0)
   239ec:	mov	r3, #33	; 0x21
   239f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   239f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   239f8:	ldr	r0, [fp, #-16]
   239fc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   23a00:	mov	r3, r0
   23a04:	mov	r0, r3
   23a08:	sub	sp, fp, #4
   23a0c:	pop	{fp, pc}
   23a10:	push	{fp, lr}
   23a14:	add	fp, sp, #4
   23a18:	sub	sp, sp, #48	; 0x30
   23a1c:	str	r0, [fp, #-32]	; 0xffffffe0
   23a20:	str	r1, [fp, #-36]	; 0xffffffdc
   23a24:	str	r2, [fp, #-40]	; 0xffffffd8
   23a28:	str	r3, [fp, #-44]	; 0xffffffd4
   23a2c:	sub	r3, fp, #24
   23a30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23a34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23a3c:	bl	1508c <_start@@Base+0xa6c>
   23a40:	str	r0, [fp, #-36]	; 0xffffffdc
   23a44:	b	23bf4 <_start@@Base+0xf5d4>
   23a48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23a4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23a54:	bl	14cb8 <_start@@Base+0x698>
   23a58:	str	r0, [fp, #-36]	; 0xffffffdc
   23a5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23a60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23a64:	bl	14f70 <_start@@Base+0x950>
   23a68:	strd	r0, [fp, #-12]
   23a6c:	ldrd	r2, [fp, #-12]
   23a70:	add	r1, pc, #440	; 0x1b8
   23a74:	ldrd	r0, [r1]
   23a78:	cmp	r3, r1
   23a7c:	cmpeq	r2, r0
   23a80:	bne	23bc8 <_start@@Base+0xf5a8>
   23a84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23a88:	add	r3, r3, #8
   23a8c:	str	r3, [fp, #-36]	; 0xffffffdc
   23a90:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23a94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23a98:	bl	14f70 <_start@@Base+0x950>
   23a9c:	strd	r0, [fp, #-12]
   23aa0:	ldrd	r2, [fp, #-12]
   23aa4:	mov	r0, #0
   23aa8:	ldr	r1, [pc, #392]	; 23c38 <_start@@Base+0xf618>
   23aac:	and	r2, r2, r0
   23ab0:	and	r3, r3, r1
   23ab4:	mov	r0, #0
   23ab8:	ldr	r1, [pc, #380]	; 23c3c <_start@@Base+0xf61c>
   23abc:	cmp	r3, r1
   23ac0:	cmpeq	r2, r0
   23ac4:	bne	23bb0 <_start@@Base+0xf590>
   23ac8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23acc:	str	r3, [fp, #-16]
   23ad0:	mov	r3, #2
   23ad4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23ad8:	ldr	r1, [fp, #-16]
   23adc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23ae0:	bl	1552c <_start@@Base+0xf0c>
   23ae4:	str	r0, [fp, #-36]	; 0xffffffdc
   23ae8:	ldr	r2, [fp, #-16]
   23aec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23af0:	cmp	r2, r3
   23af4:	beq	23b98 <_start@@Base+0xf578>
   23af8:	mov	r3, #0
   23afc:	str	r3, [fp, #-28]	; 0xffffffe4
   23b00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23b04:	str	r3, [fp, #-20]	; 0xffffffec
   23b08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23b0c:	str	r3, [fp, #-16]
   23b10:	sub	r3, fp, #28
   23b14:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b18:	ldr	r1, [fp, #-16]
   23b1c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b20:	bl	16104 <_start@@Base+0x1ae4>
   23b24:	str	r0, [fp, #-36]	; 0xffffffdc
   23b28:	ldr	r2, [fp, #-16]
   23b2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23b30:	cmp	r2, r3
   23b34:	bne	23b84 <_start@@Base+0xf564>
   23b38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23b3c:	str	r3, [fp, #-16]
   23b40:	sub	r3, fp, #28
   23b44:	str	r3, [sp]
   23b48:	ldr	r3, [pc, #240]	; 23c40 <_start@@Base+0xf620>
   23b4c:	add	r3, pc, r3
   23b50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b54:	ldr	r1, [fp, #-16]
   23b58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23b5c:	bl	16c3c <_start@@Base+0x261c>
   23b60:	str	r0, [fp, #-36]	; 0xffffffdc
   23b64:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23b68:	ldr	r3, [fp, #-16]
   23b6c:	cmp	r2, r3
   23b70:	beq	23c08 <_start@@Base+0xf5e8>
   23b74:	ldr	r2, [fp, #-36]	; 0xffffffdc
   23b78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   23b7c:	cmp	r2, r3
   23b80:	beq	23c08 <_start@@Base+0xf5e8>
   23b84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23b88:	mov	r1, r3
   23b8c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23b90:	bl	149c4 <_start@@Base+0x3a4>
   23b94:	b	23bdc <_start@@Base+0xf5bc>
   23b98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23b9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23ba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23ba4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   23ba8:	str	r0, [fp, #-36]	; 0xffffffdc
   23bac:	b	23bdc <_start@@Base+0xf5bc>
   23bb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23bb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23bbc:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   23bc0:	str	r0, [fp, #-36]	; 0xffffffdc
   23bc4:	b	23bdc <_start@@Base+0xf5bc>
   23bc8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23bcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23bd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23bd4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   23bd8:	str	r0, [fp, #-36]	; 0xffffffdc
   23bdc:	sub	r3, fp, #24
   23be0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23be4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23be8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23bec:	bl	15174 <_start@@Base+0xb54>
   23bf0:	str	r0, [fp, #-36]	; 0xffffffdc
   23bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23bf8:	cmp	r3, #0
   23bfc:	bne	23a48 <_start@@Base+0xf428>
   23c00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23c04:	b	23c20 <_start@@Base+0xf600>
   23c08:	mov	r3, #33	; 0x21
   23c0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   23c10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   23c14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   23c18:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   23c1c:	mov	r3, r0
   23c20:	mov	r0, r3
   23c24:	sub	sp, fp, #4
   23c28:	pop	{fp, pc}
   23c2c:	nop			; (mov r0, r0)
   23c30:	cmpvc	pc, #1342177286	; 0x50000006
   23c34:	rsbvs	r6, pc, #428	; 0x1ac
   23c38:			; <UNDEFINED> instruction: 0xffff0000
   23c3c:	cmnvs	r4, r0
   23c40:	andeq	lr, r3, r4, lsl #17
   23c44:	push	{fp, lr}
   23c48:	add	fp, sp, #4
   23c4c:	sub	sp, sp, #24
   23c50:	str	r0, [fp, #-16]
   23c54:	str	r1, [fp, #-20]	; 0xffffffec
   23c58:	str	r2, [fp, #-24]	; 0xffffffe8
   23c5c:	str	r3, [fp, #-28]	; 0xffffffe4
   23c60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23c64:	mov	r2, #0
   23c68:	str	r2, [r3]
   23c6c:	ldr	r3, [fp, #-16]
   23c70:	ldr	r3, [r3]
   23c74:	mov	r2, #4
   23c78:	mov	r1, #4
   23c7c:	mov	r0, r3
   23c80:	bl	2deac <flatcc_builder_start_struct@@Base>
   23c84:	str	r0, [fp, #-8]
   23c88:	ldr	r3, [fp, #-8]
   23c8c:	cmp	r3, #0
   23c90:	beq	23cf0 <_start@@Base+0xf6d0>
   23c94:	ldr	r3, [fp, #-8]
   23c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23c9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23ca0:	ldr	r0, [fp, #-16]
   23ca4:	bl	23a10 <_start@@Base+0xf3f0>
   23ca8:	str	r0, [fp, #-20]	; 0xffffffec
   23cac:	ldr	r2, [fp, #-20]	; 0xffffffec
   23cb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23cb4:	cmp	r2, r3
   23cb8:	beq	23cf4 <_start@@Base+0xf6d4>
   23cbc:	ldr	r3, [fp, #-16]
   23cc0:	ldr	r3, [r3]
   23cc4:	mov	r0, r3
   23cc8:	bl	2df4c <flatcc_builder_end_struct@@Base>
   23ccc:	mov	r2, r0
   23cd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23cd4:	str	r2, [r3]
   23cd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23cdc:	ldr	r3, [r3]
   23ce0:	cmp	r3, #0
   23ce4:	beq	23cf4 <_start@@Base+0xf6d4>
   23ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   23cec:	b	23d0c <_start@@Base+0xf6ec>
   23cf0:	nop			; (mov r0, r0)
   23cf4:	mov	r3, #33	; 0x21
   23cf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23cfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23d00:	ldr	r0, [fp, #-16]
   23d04:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   23d08:	mov	r3, r0
   23d0c:	mov	r0, r3
   23d10:	sub	sp, fp, #4
   23d14:	pop	{fp, pc}
   23d18:	push	{fp, lr}
   23d1c:	add	fp, sp, #4
   23d20:	sub	sp, sp, #16
   23d24:	str	r0, [fp, #-8]
   23d28:	str	r1, [fp, #-12]
   23d2c:	str	r2, [fp, #-16]
   23d30:	strb	r3, [fp, #-17]	; 0xffffffef
   23d34:	ldr	r3, [fp, #4]
   23d38:	mov	r2, #0
   23d3c:	str	r2, [r3]
   23d40:	ldrb	r3, [fp, #-17]	; 0xffffffef
   23d44:	cmp	r3, #9
   23d48:	beq	23ddc <_start@@Base+0xf7bc>
   23d4c:	cmp	r3, #9
   23d50:	bgt	23d70 <_start@@Base+0xf750>
   23d54:	cmp	r3, #2
   23d58:	beq	23da4 <_start@@Base+0xf784>
   23d5c:	cmp	r3, #8
   23d60:	beq	23dc0 <_start@@Base+0xf7a0>
   23d64:	cmp	r3, #0
   23d68:	beq	23d8c <_start@@Base+0xf76c>
   23d6c:	b	23e4c <_start@@Base+0xf82c>
   23d70:	cmp	r3, #11
   23d74:	beq	23e14 <_start@@Base+0xf7f4>
   23d78:	cmp	r3, #11
   23d7c:	blt	23df8 <_start@@Base+0xf7d8>
   23d80:	cmp	r3, #255	; 0xff
   23d84:	beq	23e30 <_start@@Base+0xf810>
   23d88:	b	23e4c <_start@@Base+0xf82c>
   23d8c:	ldr	r2, [fp, #-16]
   23d90:	ldr	r1, [fp, #-12]
   23d94:	ldr	r0, [fp, #-8]
   23d98:	bl	15c68 <_start@@Base+0x1648>
   23d9c:	mov	r3, r0
   23da0:	b	23edc <_start@@Base+0xf8bc>
   23da4:	ldr	r3, [fp, #4]
   23da8:	ldr	r2, [fp, #-16]
   23dac:	ldr	r1, [fp, #-12]
   23db0:	ldr	r0, [fp, #-8]
   23db4:	bl	233c0 <_start@@Base+0xeda0>
   23db8:	str	r0, [fp, #-12]
   23dbc:	b	23e94 <_start@@Base+0xf874>
   23dc0:	ldr	r3, [fp, #4]
   23dc4:	ldr	r2, [fp, #-16]
   23dc8:	ldr	r1, [fp, #-12]
   23dcc:	ldr	r0, [fp, #-8]
   23dd0:	bl	2393c <_start@@Base+0xf31c>
   23dd4:	str	r0, [fp, #-12]
   23dd8:	b	23e94 <_start@@Base+0xf874>
   23ddc:	ldr	r3, [fp, #4]
   23de0:	ldr	r2, [fp, #-16]
   23de4:	ldr	r1, [fp, #-12]
   23de8:	ldr	r0, [fp, #-8]
   23dec:	bl	23c44 <_start@@Base+0xf624>
   23df0:	str	r0, [fp, #-12]
   23df4:	b	23e94 <_start@@Base+0xf874>
   23df8:	ldr	r3, [fp, #4]
   23dfc:	ldr	r2, [fp, #-16]
   23e00:	ldr	r1, [fp, #-12]
   23e04:	ldr	r0, [fp, #-8]
   23e08:	bl	23c44 <_start@@Base+0xf624>
   23e0c:	str	r0, [fp, #-12]
   23e10:	b	23e94 <_start@@Base+0xf874>
   23e14:	ldr	r3, [fp, #4]
   23e18:	ldr	r2, [fp, #-16]
   23e1c:	ldr	r1, [fp, #-12]
   23e20:	ldr	r0, [fp, #-8]
   23e24:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   23e28:	str	r0, [fp, #-12]
   23e2c:	b	23e94 <_start@@Base+0xf874>
   23e30:	ldr	r3, [fp, #4]
   23e34:	ldr	r2, [fp, #-16]
   23e38:	ldr	r1, [fp, #-12]
   23e3c:	ldr	r0, [fp, #-8]
   23e40:	bl	3bd40 <flatcc_json_parser_build_string@@Base>
   23e44:	str	r0, [fp, #-12]
   23e48:	b	23e94 <_start@@Base+0xf874>
   23e4c:	ldr	r3, [fp, #-8]
   23e50:	ldr	r3, [r3, #8]
   23e54:	and	r3, r3, #1
   23e58:	cmp	r3, #0
   23e5c:	bne	23e7c <_start@@Base+0xf85c>
   23e60:	mov	r3, #15
   23e64:	ldr	r2, [fp, #-16]
   23e68:	ldr	r1, [fp, #-12]
   23e6c:	ldr	r0, [fp, #-8]
   23e70:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   23e74:	mov	r3, r0
   23e78:	b	23edc <_start@@Base+0xf8bc>
   23e7c:	ldr	r2, [fp, #-16]
   23e80:	ldr	r1, [fp, #-12]
   23e84:	ldr	r0, [fp, #-8]
   23e88:	bl	3b2b8 <flatcc_json_parser_generic_json@@Base>
   23e8c:	mov	r3, r0
   23e90:	b	23edc <_start@@Base+0xf8bc>
   23e94:	ldr	r3, [fp, #-8]
   23e98:	ldr	r3, [r3, #20]
   23e9c:	cmp	r3, #0
   23ea0:	beq	23eac <_start@@Base+0xf88c>
   23ea4:	ldr	r3, [fp, #-12]
   23ea8:	b	23edc <_start@@Base+0xf8bc>
   23eac:	ldr	r3, [fp, #4]
   23eb0:	ldr	r3, [r3]
   23eb4:	cmp	r3, #0
   23eb8:	bne	23ed8 <_start@@Base+0xf8b8>
   23ebc:	mov	r3, #33	; 0x21
   23ec0:	ldr	r2, [fp, #-16]
   23ec4:	ldr	r1, [fp, #-12]
   23ec8:	ldr	r0, [fp, #-8]
   23ecc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   23ed0:	mov	r3, r0
   23ed4:	b	23edc <_start@@Base+0xf8bc>
   23ed8:	ldr	r3, [fp, #-12]
   23edc:	mov	r0, r3
   23ee0:	sub	sp, fp, #4
   23ee4:	pop	{fp, pc}
   23ee8:	push	{fp}		; (str fp, [sp, #-4]!)
   23eec:	add	fp, sp, #0
   23ef0:	sub	sp, sp, #12
   23ef4:	mov	r3, r0
   23ef8:	strb	r3, [fp, #-5]
   23efc:	ldrb	r3, [fp, #-5]
   23f00:	cmp	r3, #9
   23f04:	beq	23f60 <_start@@Base+0xf940>
   23f08:	cmp	r3, #9
   23f0c:	bgt	23f2c <_start@@Base+0xf90c>
   23f10:	cmp	r3, #2
   23f14:	beq	23f50 <_start@@Base+0xf930>
   23f18:	cmp	r3, #8
   23f1c:	beq	23f58 <_start@@Base+0xf938>
   23f20:	cmp	r3, #0
   23f24:	beq	23f48 <_start@@Base+0xf928>
   23f28:	b	23f80 <_start@@Base+0xf960>
   23f2c:	cmp	r3, #11
   23f30:	beq	23f70 <_start@@Base+0xf950>
   23f34:	cmp	r3, #11
   23f38:	blt	23f68 <_start@@Base+0xf948>
   23f3c:	cmp	r3, #255	; 0xff
   23f40:	beq	23f78 <_start@@Base+0xf958>
   23f44:	b	23f80 <_start@@Base+0xf960>
   23f48:	mov	r3, #1
   23f4c:	b	23f84 <_start@@Base+0xf964>
   23f50:	mov	r3, #1
   23f54:	b	23f84 <_start@@Base+0xf964>
   23f58:	mov	r3, #1
   23f5c:	b	23f84 <_start@@Base+0xf964>
   23f60:	mov	r3, #1
   23f64:	b	23f84 <_start@@Base+0xf964>
   23f68:	mov	r3, #1
   23f6c:	b	23f84 <_start@@Base+0xf964>
   23f70:	mov	r3, #1
   23f74:	b	23f84 <_start@@Base+0xf964>
   23f78:	mov	r3, #1
   23f7c:	b	23f84 <_start@@Base+0xf964>
   23f80:	mov	r3, #0
   23f84:	mov	r0, r3
   23f88:	add	sp, fp, #0
   23f8c:	pop	{fp}		; (ldr fp, [sp], #4)
   23f90:	bx	lr
   23f94:	push	{fp, lr}
   23f98:	add	fp, sp, #4
   23f9c:	sub	sp, sp, #48	; 0x30
   23fa0:	str	r0, [fp, #-32]	; 0xffffffe0
   23fa4:	str	r1, [fp, #-36]	; 0xffffffdc
   23fa8:	str	r2, [fp, #-40]	; 0xffffffd8
   23fac:	str	r3, [fp, #-44]	; 0xffffffd4
   23fb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   23fb4:	str	r3, [fp, #-8]
   23fb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   23fbc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   23fc0:	bl	14f70 <_start@@Base+0x950>
   23fc4:	strd	r0, [fp, #-20]	; 0xffffffec
   23fc8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23fcc:	add	r1, pc, #932	; 0x3a4
   23fd0:	ldrd	r0, [r1]
   23fd4:	cmp	r3, r1
   23fd8:	cmpeq	r2, r0
   23fdc:	bhi	241a0 <_start@@Base+0xfb80>
   23fe0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23fe4:	add	r1, pc, #916	; 0x394
   23fe8:	ldrd	r0, [r1]
   23fec:	cmp	r3, r1
   23ff0:	cmpeq	r2, r0
   23ff4:	bhi	24088 <_start@@Base+0xfa68>
   23ff8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   23ffc:	mov	r0, #-16777216	; 0xff000000
   24000:	mvn	r1, #0
   24004:	and	r2, r2, r0
   24008:	and	r3, r3, r1
   2400c:	add	r1, pc, #884	; 0x374
   24010:	ldrd	r0, [r1]
   24014:	cmp	r3, r1
   24018:	cmpeq	r2, r0
   2401c:	bne	24080 <_start@@Base+0xfa60>
   24020:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24024:	str	r3, [fp, #-24]	; 0xffffffe8
   24028:	ldr	r3, [fp, #8]
   2402c:	str	r3, [sp]
   24030:	mov	r3, #5
   24034:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24038:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2403c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24040:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   24044:	str	r0, [fp, #-36]	; 0xffffffdc
   24048:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2404c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24050:	cmp	r2, r3
   24054:	beq	24078 <_start@@Base+0xfa58>
   24058:	ldr	r1, [fp, #4]
   2405c:	mov	r2, #9
   24060:	mov	r3, #0
   24064:	strd	r2, [r1]
   24068:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2406c:	mov	r2, #0
   24070:	str	r2, [r3]
   24074:	b	2444c <_start@@Base+0xfe2c>
   24078:	ldr	r3, [fp, #-8]
   2407c:	b	24450 <_start@@Base+0xfe30>
   24080:	ldr	r3, [fp, #-8]
   24084:	b	24450 <_start@@Base+0xfe30>
   24088:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2408c:	mov	r0, #-16777216	; 0xff000000
   24090:	mvn	r1, #0
   24094:	and	r2, r2, r0
   24098:	and	r3, r3, r1
   2409c:	add	r1, pc, #748	; 0x2ec
   240a0:	ldrd	r0, [r1]
   240a4:	cmp	r3, r1
   240a8:	cmpeq	r2, r0
   240ac:	bne	24110 <_start@@Base+0xfaf0>
   240b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   240b4:	str	r3, [fp, #-24]	; 0xffffffe8
   240b8:	ldr	r3, [fp, #8]
   240bc:	str	r3, [sp]
   240c0:	mov	r3, #5
   240c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   240c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   240cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   240d0:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   240d4:	str	r0, [fp, #-36]	; 0xffffffdc
   240d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   240dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   240e0:	cmp	r2, r3
   240e4:	beq	24108 <_start@@Base+0xfae8>
   240e8:	ldr	r1, [fp, #4]
   240ec:	mov	r2, #2
   240f0:	mov	r3, #0
   240f4:	strd	r2, [r1]
   240f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   240fc:	mov	r2, #0
   24100:	str	r2, [r3]
   24104:	b	2444c <_start@@Base+0xfe2c>
   24108:	ldr	r3, [fp, #-8]
   2410c:	b	24450 <_start@@Base+0xfe30>
   24110:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24114:	mvn	r0, #255	; 0xff
   24118:	mvn	r1, #0
   2411c:	and	r2, r2, r0
   24120:	and	r3, r3, r1
   24124:	add	r1, pc, #620	; 0x26c
   24128:	ldrd	r0, [r1]
   2412c:	cmp	r3, r1
   24130:	cmpeq	r2, r0
   24134:	bne	24198 <_start@@Base+0xfb78>
   24138:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2413c:	str	r3, [fp, #-24]	; 0xffffffe8
   24140:	ldr	r3, [fp, #8]
   24144:	str	r3, [sp]
   24148:	mov	r3, #7
   2414c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24150:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24154:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24158:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   2415c:	str	r0, [fp, #-36]	; 0xffffffdc
   24160:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24168:	cmp	r2, r3
   2416c:	beq	24190 <_start@@Base+0xfb70>
   24170:	ldr	r1, [fp, #4]
   24174:	mov	r2, #10
   24178:	mov	r3, #0
   2417c:	strd	r2, [r1]
   24180:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24184:	mov	r2, #0
   24188:	str	r2, [r3]
   2418c:	b	2444c <_start@@Base+0xfe2c>
   24190:	ldr	r3, [fp, #-8]
   24194:	b	24450 <_start@@Base+0xfe30>
   24198:	ldr	r3, [fp, #-8]
   2419c:	b	24450 <_start@@Base+0xfe30>
   241a0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   241a4:	add	r1, pc, #500	; 0x1f4
   241a8:	ldrd	r0, [r1]
   241ac:	cmp	r3, r1
   241b0:	cmpeq	r2, r0
   241b4:	bhi	24248 <_start@@Base+0xfc28>
   241b8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   241bc:	mov	r0, #0
   241c0:	mvn	r1, #0
   241c4:	and	r2, r2, r0
   241c8:	and	r3, r3, r1
   241cc:	add	r1, pc, #468	; 0x1d4
   241d0:	ldrd	r0, [r1]
   241d4:	cmp	r3, r1
   241d8:	cmpeq	r2, r0
   241dc:	bne	24240 <_start@@Base+0xfc20>
   241e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   241e4:	str	r3, [fp, #-24]	; 0xffffffe8
   241e8:	ldr	r3, [fp, #8]
   241ec:	str	r3, [sp]
   241f0:	mov	r3, #4
   241f4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   241f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   241fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24200:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   24204:	str	r0, [fp, #-36]	; 0xffffffdc
   24208:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2420c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24210:	cmp	r2, r3
   24214:	beq	24238 <_start@@Base+0xfc18>
   24218:	ldr	r1, [fp, #4]
   2421c:	mov	r2, #0
   24220:	mov	r3, #0
   24224:	strd	r2, [r1]
   24228:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2422c:	mov	r2, #0
   24230:	str	r2, [r3]
   24234:	b	2444c <_start@@Base+0xfe2c>
   24238:	ldr	r3, [fp, #-8]
   2423c:	b	24450 <_start@@Base+0xfe30>
   24240:	ldr	r3, [fp, #-8]
   24244:	b	24450 <_start@@Base+0xfe30>
   24248:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2424c:	add	r1, pc, #348	; 0x15c
   24250:	ldrd	r0, [r1]
   24254:	cmp	r3, r1
   24258:	cmpeq	r2, r0
   2425c:	bhi	242f0 <_start@@Base+0xfcd0>
   24260:	ldrd	r2, [fp, #-20]	; 0xffffffec
   24264:	mov	r0, #-16777216	; 0xff000000
   24268:	mvn	r1, #0
   2426c:	and	r2, r2, r0
   24270:	and	r3, r3, r1
   24274:	add	r1, pc, #316	; 0x13c
   24278:	ldrd	r0, [r1]
   2427c:	cmp	r3, r1
   24280:	cmpeq	r2, r0
   24284:	bne	242e8 <_start@@Base+0xfcc8>
   24288:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2428c:	str	r3, [fp, #-24]	; 0xffffffe8
   24290:	ldr	r3, [fp, #8]
   24294:	str	r3, [sp]
   24298:	mov	r3, #5
   2429c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   242a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   242a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   242a8:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   242ac:	str	r0, [fp, #-36]	; 0xffffffdc
   242b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   242b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   242b8:	cmp	r2, r3
   242bc:	beq	242e0 <_start@@Base+0xfcc0>
   242c0:	ldr	r1, [fp, #4]
   242c4:	mov	r2, #11
   242c8:	mov	r3, #0
   242cc:	strd	r2, [r1]
   242d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   242d4:	mov	r2, #0
   242d8:	str	r2, [r3]
   242dc:	b	2444c <_start@@Base+0xfe2c>
   242e0:	ldr	r3, [fp, #-8]
   242e4:	b	24450 <_start@@Base+0xfe30>
   242e8:	ldr	r3, [fp, #-8]
   242ec:	b	24450 <_start@@Base+0xfe30>
   242f0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   242f4:	ldr	r0, [pc, #204]	; 243c8 <_start@@Base+0xfda8>
   242f8:	mvn	r1, #0
   242fc:	and	r2, r2, r0
   24300:	and	r3, r3, r1
   24304:	add	r1, pc, #180	; 0xb4
   24308:	ldrd	r0, [r1]
   2430c:	cmp	r3, r1
   24310:	cmpeq	r2, r0
   24314:	bne	243cc <_start@@Base+0xfdac>
   24318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2431c:	str	r3, [fp, #-24]	; 0xffffffe8
   24320:	ldr	r3, [fp, #8]
   24324:	str	r3, [sp]
   24328:	mov	r3, #6
   2432c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24334:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24338:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   2433c:	str	r0, [fp, #-36]	; 0xffffffdc
   24340:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24348:	cmp	r2, r3
   2434c:	beq	24370 <_start@@Base+0xfd50>
   24350:	ldr	r1, [fp, #4]
   24354:	mov	r2, #255	; 0xff
   24358:	mov	r3, #0
   2435c:	strd	r2, [r1]
   24360:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24364:	mov	r2, #0
   24368:	str	r2, [r3]
   2436c:	b	2444c <_start@@Base+0xfe2c>
   24370:	ldr	r3, [fp, #-8]
   24374:	b	24450 <_start@@Base+0xfe30>
   24378:			; <UNDEFINED> instruction: 0xffffffff
   2437c:	cdpmi	14, 4, cr4, cr15, cr4, {2}
   24380:			; <UNDEFINED> instruction: 0x46616dff
   24384:	rsbmi	r6, pc, #428	; 0x1ac
   24388:	strvs	r0, [r0, #-0]
   2438c:	rsbmi	r6, r5, #108, 24	; 0x6c00
   24390:	cdpvs	0, 0, cr0, cr0, cr0, {0}
   24394:	ldclmi	12, cr4, [r5, #-388]!	; 0xfffffe7c
   24398:	strbtmi	r6, [r1], -r0, lsl #28
   2439c:	rsbmi	r6, pc, #428	; 0x1ac
   243a0:	ldrshvc	pc, [pc, #255]	; 244a7 <_start@@Base+0xfe87>	; <UNPREDICTABLE>
   243a4:	svcmi	0x00746865
   243a8:	andeq	r0, r0, r0
   243ac:	cdpmi	14, 4, cr4, cr15, cr5, {2}
   243b0:	cdpvs	5, 7, cr6, cr10, cr11, {3}
   243b4:	rsbpl	r7, r1, #117	; 0x75
   243b8:	andvc	r0, r0, #0
   243bc:	svcmi	0x00746865
   243c0:	strbvs	r0, [r4, #-0]!
   243c4:	strbpl	r7, [lr, #-1395]!	; 0xfffffa8d
   243c8:			; <UNDEFINED> instruction: 0xffff0000
   243cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   243d0:	add	r1, pc, #136	; 0x88
   243d4:	ldrd	r0, [r1]
   243d8:	cmp	r3, r1
   243dc:	cmpeq	r2, r0
   243e0:	bne	24444 <_start@@Base+0xfe24>
   243e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   243e8:	str	r3, [fp, #-24]	; 0xffffffe8
   243ec:	ldr	r3, [fp, #8]
   243f0:	str	r3, [sp]
   243f4:	mov	r3, #8
   243f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   243fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   24400:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24404:	bl	3a970 <flatcc_json_parser_match_constant@@Base>
   24408:	str	r0, [fp, #-36]	; 0xffffffdc
   2440c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24410:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24414:	cmp	r2, r3
   24418:	beq	2443c <_start@@Base+0xfe1c>
   2441c:	ldr	r1, [fp, #4]
   24420:	mov	r2, #8
   24424:	mov	r3, #0
   24428:	strd	r2, [r1]
   2442c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24430:	mov	r2, #0
   24434:	str	r2, [r3]
   24438:	b	2444c <_start@@Base+0xfe2c>
   2443c:	ldr	r3, [fp, #-8]
   24440:	b	24450 <_start@@Base+0xfe30>
   24444:	ldr	r3, [fp, #-8]
   24448:	b	24450 <_start@@Base+0xfe30>
   2444c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24450:	mov	r0, r3
   24454:	sub	sp, fp, #4
   24458:	pop	{fp, pc}
   2445c:	nop			; (mov r0, r0)
   24460:	cdpvs	5, 7, cr6, cr10, cr12, {3}
   24464:	rsbpl	r7, r1, #117	; 0x75
   24468:	push	{fp, lr}
   2446c:	add	fp, sp, #4
   24470:	sub	sp, sp, #64	; 0x40
   24474:	str	r0, [fp, #-32]	; 0xffffffe0
   24478:	str	r1, [fp, #-36]	; 0xffffffdc
   2447c:	str	r2, [fp, #-40]	; 0xffffffd8
   24480:	str	r3, [fp, #-44]	; 0xffffffd4
   24484:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24488:	mov	r2, #0
   2448c:	str	r2, [r3]
   24490:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24494:	ldr	r3, [r3]
   24498:	mov	r1, #10
   2449c:	mov	r0, r3
   244a0:	bl	2ec40 <flatcc_builder_start_table@@Base>
   244a4:	mov	r3, r0
   244a8:	cmp	r3, #0
   244ac:	bne	24f58 <_start@@Base+0x10938>
   244b0:	sub	r3, fp, #24
   244b4:	str	r3, [sp]
   244b8:	mov	r3, #5
   244bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   244c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   244c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244c8:	bl	3bf3c <flatcc_json_parser_prepare_unions@@Base>
   244cc:	mov	r2, r0
   244d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   244d4:	cmp	r2, r3
   244d8:	beq	24f60 <_start@@Base+0x10940>
   244dc:	sub	r3, fp, #20
   244e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   244e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   244e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   244ec:	bl	1508c <_start@@Base+0xa6c>
   244f0:	str	r0, [fp, #-36]	; 0xffffffdc
   244f4:	b	24ef0 <_start@@Base+0x108d0>
   244f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   244fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24500:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24504:	bl	14cb8 <_start@@Base+0x698>
   24508:	str	r0, [fp, #-36]	; 0xffffffdc
   2450c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24510:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24514:	bl	14f70 <_start@@Base+0x950>
   24518:	strd	r0, [fp, #-12]
   2451c:	ldrd	r2, [fp, #-12]
   24520:	add	r1, pc, #888	; 0x378
   24524:	ldrd	r0, [r1]
   24528:	cmp	r3, r1
   2452c:	cmpeq	r2, r0
   24530:	bhi	248ec <_start@@Base+0x102cc>
   24534:	ldrd	r2, [fp, #-12]
   24538:	add	r1, pc, #872	; 0x368
   2453c:	ldrd	r0, [r1]
   24540:	cmp	r3, r1
   24544:	cmpeq	r2, r0
   24548:	bne	246dc <_start@@Base+0x100bc>
   2454c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24550:	add	r3, r3, #8
   24554:	str	r3, [fp, #-36]	; 0xffffffdc
   24558:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2455c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24560:	bl	14f70 <_start@@Base+0x950>
   24564:	strd	r0, [fp, #-12]
   24568:	ldrd	r2, [fp, #-12]
   2456c:	mvn	r0, #255	; 0xff
   24570:	mvn	r1, #0
   24574:	and	r2, r2, r0
   24578:	and	r3, r3, r1
   2457c:	add	r1, pc, #812	; 0x32c
   24580:	ldrd	r0, [r1]
   24584:	cmp	r3, r1
   24588:	cmpeq	r2, r0
   2458c:	bne	2461c <_start@@Base+0xfffc>
   24590:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24594:	str	r3, [fp, #-16]
   24598:	mov	r3, #7
   2459c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   245a0:	ldr	r1, [fp, #-16]
   245a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   245a8:	bl	1552c <_start@@Base+0xf0c>
   245ac:	str	r0, [fp, #-36]	; 0xffffffdc
   245b0:	ldr	r2, [fp, #-16]
   245b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   245b8:	cmp	r2, r3
   245bc:	beq	24604 <_start@@Base+0xffe4>
   245c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   245c4:	ldr	r2, [pc, #764]	; 248c8 <_start@@Base+0x102a8>
   245c8:	add	r2, pc, r2
   245cc:	str	r2, [sp, #12]
   245d0:	ldr	r2, [pc, #756]	; 248cc <_start@@Base+0x102ac>
   245d4:	add	r2, pc, r2
   245d8:	str	r2, [sp, #8]
   245dc:	str	r3, [sp, #4]
   245e0:	mov	r3, #3
   245e4:	str	r3, [sp]
   245e8:	mov	r3, #1
   245ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   245f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   245f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   245f8:	bl	3c244 <flatcc_json_parser_union_type@@Base>
   245fc:	str	r0, [fp, #-36]	; 0xffffffdc
   24600:	b	24ed8 <_start@@Base+0x108b8>
   24604:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24608:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2460c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24610:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24614:	str	r0, [fp, #-36]	; 0xffffffdc
   24618:	b	24ed8 <_start@@Base+0x108b8>
   2461c:	ldrd	r2, [fp, #-12]
   24620:	mov	r0, #0
   24624:	ldr	r1, [pc, #676]	; 248d0 <_start@@Base+0x102b0>
   24628:	and	r2, r2, r0
   2462c:	and	r3, r3, r1
   24630:	mov	r0, #0
   24634:	ldr	r1, [pc, #664]	; 248d4 <_start@@Base+0x102b4>
   24638:	cmp	r3, r1
   2463c:	cmpeq	r2, r0
   24640:	bne	246c4 <_start@@Base+0x100a4>
   24644:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24648:	str	r3, [fp, #-16]
   2464c:	mov	r3, #2
   24650:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24654:	ldr	r1, [fp, #-16]
   24658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2465c:	bl	1552c <_start@@Base+0xf0c>
   24660:	str	r0, [fp, #-36]	; 0xffffffdc
   24664:	ldr	r2, [fp, #-16]
   24668:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2466c:	cmp	r2, r3
   24670:	beq	246ac <_start@@Base+0x1008c>
   24674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24678:	ldr	r2, [pc, #600]	; 248d8 <_start@@Base+0x102b8>
   2467c:	add	r2, pc, r2
   24680:	str	r2, [sp, #8]
   24684:	str	r3, [sp, #4]
   24688:	mov	r3, #3
   2468c:	str	r3, [sp]
   24690:	mov	r3, #1
   24694:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24698:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2469c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   246a0:	bl	3c074 <flatcc_json_parser_union@@Base>
   246a4:	str	r0, [fp, #-36]	; 0xffffffdc
   246a8:	b	24ed8 <_start@@Base+0x108b8>
   246ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   246b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   246b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   246b8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   246bc:	str	r0, [fp, #-36]	; 0xffffffdc
   246c0:	b	24ed8 <_start@@Base+0x108b8>
   246c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   246c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   246cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   246d0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   246d4:	str	r0, [fp, #-36]	; 0xffffffdc
   246d8:	b	24ed8 <_start@@Base+0x108b8>
   246dc:	ldrd	r2, [fp, #-12]
   246e0:	add	r1, pc, #464	; 0x1d0
   246e4:	ldrd	r0, [r1]
   246e8:	cmp	r3, r1
   246ec:	cmpeq	r2, r0
   246f0:	bne	247dc <_start@@Base+0x101bc>
   246f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   246f8:	add	r3, r3, #8
   246fc:	str	r3, [fp, #-36]	; 0xffffffdc
   24700:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24704:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24708:	bl	14f70 <_start@@Base+0x950>
   2470c:	strd	r0, [fp, #-12]
   24710:	ldrd	r2, [fp, #-12]
   24714:	mov	r0, #0
   24718:	ldr	r1, [pc, #432]	; 248d0 <_start@@Base+0x102b0>
   2471c:	and	r2, r2, r0
   24720:	and	r3, r3, r1
   24724:	mov	r0, #0
   24728:	ldr	r1, [pc, #428]	; 248dc <_start@@Base+0x102bc>
   2472c:	cmp	r3, r1
   24730:	cmpeq	r2, r0
   24734:	bne	247c4 <_start@@Base+0x101a4>
   24738:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2473c:	str	r3, [fp, #-16]
   24740:	mov	r3, #2
   24744:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24748:	ldr	r1, [fp, #-16]
   2474c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24750:	bl	1552c <_start@@Base+0xf0c>
   24754:	str	r0, [fp, #-36]	; 0xffffffdc
   24758:	ldr	r2, [fp, #-16]
   2475c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24760:	cmp	r2, r3
   24764:	beq	247ac <_start@@Base+0x1018c>
   24768:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2476c:	ldr	r2, [pc, #364]	; 248e0 <_start@@Base+0x102c0>
   24770:	add	r2, pc, r2
   24774:	str	r2, [sp, #12]
   24778:	ldr	r2, [pc, #356]	; 248e4 <_start@@Base+0x102c4>
   2477c:	add	r2, pc, r2
   24780:	str	r2, [sp, #8]
   24784:	str	r3, [sp, #4]
   24788:	mov	r3, #7
   2478c:	str	r3, [sp]
   24790:	mov	r3, #3
   24794:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24798:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2479c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   247a0:	bl	3c244 <flatcc_json_parser_union_type@@Base>
   247a4:	str	r0, [fp, #-36]	; 0xffffffdc
   247a8:	b	24ed8 <_start@@Base+0x108b8>
   247ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   247b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   247b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   247b8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   247bc:	str	r0, [fp, #-36]	; 0xffffffdc
   247c0:	b	24ed8 <_start@@Base+0x108b8>
   247c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   247c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   247cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   247d0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   247d4:	str	r0, [fp, #-36]	; 0xffffffdc
   247d8:	b	24ed8 <_start@@Base+0x108b8>
   247dc:	ldrd	r2, [fp, #-12]
   247e0:	mov	r0, #-16777216	; 0xff000000
   247e4:	mvn	r1, #0
   247e8:	and	r2, r2, r0
   247ec:	and	r3, r3, r1
   247f0:	add	r1, pc, #200	; 0xc8
   247f4:	ldrd	r0, [r1]
   247f8:	cmp	r3, r1
   247fc:	cmpeq	r2, r0
   24800:	bne	24884 <_start@@Base+0x10264>
   24804:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24808:	str	r3, [fp, #-16]
   2480c:	mov	r3, #5
   24810:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24814:	ldr	r1, [fp, #-16]
   24818:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2481c:	bl	1552c <_start@@Base+0xf0c>
   24820:	str	r0, [fp, #-36]	; 0xffffffdc
   24824:	ldr	r2, [fp, #-16]
   24828:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2482c:	cmp	r2, r3
   24830:	beq	2486c <_start@@Base+0x1024c>
   24834:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24838:	ldr	r2, [pc, #168]	; 248e8 <_start@@Base+0x102c8>
   2483c:	add	r2, pc, r2
   24840:	str	r2, [sp, #8]
   24844:	str	r3, [sp, #4]
   24848:	mov	r3, #7
   2484c:	str	r3, [sp]
   24850:	mov	r3, #3
   24854:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24858:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2485c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24860:	bl	3c074 <flatcc_json_parser_union@@Base>
   24864:	str	r0, [fp, #-36]	; 0xffffffdc
   24868:	b	24ed8 <_start@@Base+0x108b8>
   2486c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24870:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24874:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24878:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   2487c:	str	r0, [fp, #-36]	; 0xffffffdc
   24880:	b	24ed8 <_start@@Base+0x108b8>
   24884:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24888:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2488c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24890:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24894:	str	r0, [fp, #-36]	; 0xffffffdc
   24898:	b	24ed8 <_start@@Base+0x108b8>
   2489c:	nop			; (mov r0, r0)
   248a0:	cmnvs	r3, r4, ror #8
   248a4:	cmnvs	r8, #-2147483620	; 0x8000001c
   248a8:	strbvs	r6, [pc, -r9, ror #28]!
   248ac:	cmnvs	lr, r1, ror #8
   248b0:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   248b4:	cmnvc	r4, #116, 30	; 0x1d0
   248b8:	svcvs	0x005f7479
   248bc:	cmnvs	r1, #6464	; 0x1940
   248c0:	svcvs	0x00000000
   248c4:	cmnvs	r1, #6464	; 0x1940
   248c8:			; <UNDEFINED> instruction: 0xfffff748
   248cc:	andeq	sp, r3, r8, lsl #28
   248d0:			; <UNDEFINED> instruction: 0xffff0000
   248d4:	cmnvc	r4, #0
   248d8:			; <UNDEFINED> instruction: 0xfffff694
   248dc:	rsbvc	r0, r5, r0
   248e0:			; <UNDEFINED> instruction: 0xfffff5a0
   248e4:	andeq	sp, r3, r0, ror ip
   248e8:			; <UNDEFINED> instruction: 0xfffff4d4
   248ec:	ldrd	r2, [fp, #-12]
   248f0:	add	r1, pc, #952	; 0x3b8
   248f4:	ldrd	r0, [r1]
   248f8:	cmp	r3, r1
   248fc:	cmpeq	r2, r0
   24900:	bhi	24ad0 <_start@@Base+0x104b0>
   24904:	ldrd	r2, [fp, #-12]
   24908:	add	r1, pc, #936	; 0x3a8
   2490c:	ldrd	r0, [r1]
   24910:	cmp	r3, r1
   24914:	cmpeq	r2, r0
   24918:	bne	24ab8 <_start@@Base+0x10498>
   2491c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24920:	add	r3, r3, #8
   24924:	str	r3, [fp, #-36]	; 0xffffffdc
   24928:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2492c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24930:	bl	14f70 <_start@@Base+0x950>
   24934:	strd	r0, [fp, #-12]
   24938:	ldrd	r2, [fp, #-12]
   2493c:	mvn	r0, #255	; 0xff
   24940:	mvn	r1, #0
   24944:	and	r2, r2, r0
   24948:	and	r3, r3, r1
   2494c:	add	r1, pc, #876	; 0x36c
   24950:	ldrd	r0, [r1]
   24954:	cmp	r3, r1
   24958:	cmpeq	r2, r0
   2495c:	bne	249f8 <_start@@Base+0x103d8>
   24960:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24964:	str	r3, [fp, #-16]
   24968:	mov	r3, #7
   2496c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24970:	ldr	r1, [fp, #-16]
   24974:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24978:	bl	1552c <_start@@Base+0xf0c>
   2497c:	str	r0, [fp, #-36]	; 0xffffffdc
   24980:	ldr	r2, [fp, #-16]
   24984:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24988:	cmp	r2, r3
   2498c:	beq	249e0 <_start@@Base+0x103c0>
   24990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24994:	ldr	r2, [pc, #844]	; 24ce8 <_start@@Base+0x106c8>
   24998:	add	r2, pc, r2
   2499c:	str	r2, [sp, #16]
   249a0:	ldr	r2, [pc, #836]	; 24cec <_start@@Base+0x106cc>
   249a4:	add	r2, pc, r2
   249a8:	str	r2, [sp, #12]
   249ac:	ldr	r2, [pc, #828]	; 24cf0 <_start@@Base+0x106d0>
   249b0:	add	r2, pc, r2
   249b4:	str	r2, [sp, #8]
   249b8:	str	r3, [sp, #4]
   249bc:	mov	r3, #9
   249c0:	str	r3, [sp]
   249c4:	mov	r3, #4
   249c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   249cc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   249d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   249d4:	bl	3c848 <flatcc_json_parser_union_type_vector@@Base>
   249d8:	str	r0, [fp, #-36]	; 0xffffffdc
   249dc:	b	24ed8 <_start@@Base+0x108b8>
   249e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   249e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   249e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   249ec:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   249f0:	str	r0, [fp, #-36]	; 0xffffffdc
   249f4:	b	24ed8 <_start@@Base+0x108b8>
   249f8:	ldrd	r2, [fp, #-12]
   249fc:	mov	r0, #0
   24a00:	ldr	r1, [pc, #748]	; 24cf4 <_start@@Base+0x106d4>
   24a04:	and	r2, r2, r0
   24a08:	and	r3, r3, r1
   24a0c:	mov	r0, #0
   24a10:	ldr	r1, [pc, #736]	; 24cf8 <_start@@Base+0x106d8>
   24a14:	cmp	r3, r1
   24a18:	cmpeq	r2, r0
   24a1c:	bne	24aa0 <_start@@Base+0x10480>
   24a20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24a24:	str	r3, [fp, #-16]
   24a28:	mov	r3, #2
   24a2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a30:	ldr	r1, [fp, #-16]
   24a34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a38:	bl	1552c <_start@@Base+0xf0c>
   24a3c:	str	r0, [fp, #-36]	; 0xffffffdc
   24a40:	ldr	r2, [fp, #-16]
   24a44:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24a48:	cmp	r2, r3
   24a4c:	beq	24a88 <_start@@Base+0x10468>
   24a50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24a54:	ldr	r2, [pc, #672]	; 24cfc <_start@@Base+0x106dc>
   24a58:	add	r2, pc, r2
   24a5c:	str	r2, [sp, #8]
   24a60:	str	r3, [sp, #4]
   24a64:	mov	r3, #9
   24a68:	str	r3, [sp]
   24a6c:	mov	r3, #4
   24a70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24a78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a7c:	bl	3c6f4 <flatcc_json_parser_union_vector@@Base>
   24a80:	str	r0, [fp, #-36]	; 0xffffffdc
   24a84:	b	24ed8 <_start@@Base+0x108b8>
   24a88:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24a8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24a90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24a94:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24a98:	str	r0, [fp, #-36]	; 0xffffffdc
   24a9c:	b	24ed8 <_start@@Base+0x108b8>
   24aa0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24aa4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24aa8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24aac:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24ab0:	str	r0, [fp, #-36]	; 0xffffffdc
   24ab4:	b	24ed8 <_start@@Base+0x108b8>
   24ab8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24abc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24ac0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ac4:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24ac8:	str	r0, [fp, #-36]	; 0xffffffdc
   24acc:	b	24ed8 <_start@@Base+0x108b8>
   24ad0:	ldrd	r2, [fp, #-12]
   24ad4:	add	r1, pc, #492	; 0x1ec
   24ad8:	ldrd	r0, [r1]
   24adc:	cmp	r3, r1
   24ae0:	cmpeq	r2, r0
   24ae4:	bne	24d24 <_start@@Base+0x10704>
   24ae8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24aec:	add	r3, r3, #8
   24af0:	str	r3, [fp, #-36]	; 0xffffffdc
   24af4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24af8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24afc:	bl	14f70 <_start@@Base+0x950>
   24b00:	strd	r0, [fp, #-12]
   24b04:	ldrd	r2, [fp, #-12]
   24b08:	add	r1, pc, #448	; 0x1c0
   24b0c:	ldrd	r0, [r1]
   24b10:	cmp	r3, r1
   24b14:	cmpeq	r2, r0
   24b18:	bne	24c04 <_start@@Base+0x105e4>
   24b1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b20:	add	r3, r3, #8
   24b24:	str	r3, [fp, #-36]	; 0xffffffdc
   24b28:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24b2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24b30:	bl	14f70 <_start@@Base+0x950>
   24b34:	strd	r0, [fp, #-12]
   24b38:	ldrd	r2, [fp, #-12]
   24b3c:	mov	r0, #0
   24b40:	mvn	r1, #255	; 0xff
   24b44:	and	r2, r2, r0
   24b48:	and	r3, r3, r1
   24b4c:	add	r1, pc, #388	; 0x184
   24b50:	ldrd	r0, [r1]
   24b54:	cmp	r3, r1
   24b58:	cmpeq	r2, r0
   24b5c:	bne	24bec <_start@@Base+0x105cc>
   24b60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b64:	str	r3, [fp, #-16]
   24b68:	mov	r3, #3
   24b6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24b70:	ldr	r1, [fp, #-16]
   24b74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24b78:	bl	1552c <_start@@Base+0xf0c>
   24b7c:	str	r0, [fp, #-36]	; 0xffffffdc
   24b80:	ldr	r2, [fp, #-16]
   24b84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24b88:	cmp	r2, r3
   24b8c:	beq	24bd4 <_start@@Base+0x105b4>
   24b90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24b94:	ldr	r2, [pc, #356]	; 24d00 <_start@@Base+0x106e0>
   24b98:	add	r2, pc, r2
   24b9c:	str	r2, [sp, #12]
   24ba0:	ldr	r2, [pc, #348]	; 24d04 <_start@@Base+0x106e4>
   24ba4:	add	r2, pc, r2
   24ba8:	str	r2, [sp, #8]
   24bac:	str	r3, [sp, #4]
   24bb0:	mov	r3, #1
   24bb4:	str	r3, [sp]
   24bb8:	mov	r3, #0
   24bbc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24bc0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24bc8:	bl	3c244 <flatcc_json_parser_union_type@@Base>
   24bcc:	str	r0, [fp, #-36]	; 0xffffffdc
   24bd0:	b	24ed8 <_start@@Base+0x108b8>
   24bd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24bd8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24bdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24be0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24be4:	str	r0, [fp, #-36]	; 0xffffffdc
   24be8:	b	24ed8 <_start@@Base+0x108b8>
   24bec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24bf0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24bf4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24bf8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24bfc:	str	r0, [fp, #-36]	; 0xffffffdc
   24c00:	b	24ed8 <_start@@Base+0x108b8>
   24c04:	ldrd	r2, [fp, #-12]
   24c08:	ldr	r0, [pc, #228]	; 24cf4 <_start@@Base+0x106d4>
   24c0c:	mvn	r1, #0
   24c10:	and	r2, r2, r0
   24c14:	and	r3, r3, r1
   24c18:	add	r1, pc, #192	; 0xc0
   24c1c:	ldrd	r0, [r1]
   24c20:	cmp	r3, r1
   24c24:	cmpeq	r2, r0
   24c28:	bne	24d0c <_start@@Base+0x106ec>
   24c2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c30:	str	r3, [fp, #-16]
   24c34:	mov	r3, #6
   24c38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24c3c:	ldr	r1, [fp, #-16]
   24c40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24c44:	bl	1552c <_start@@Base+0xf0c>
   24c48:	str	r0, [fp, #-36]	; 0xffffffdc
   24c4c:	ldr	r2, [fp, #-16]
   24c50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24c54:	cmp	r2, r3
   24c58:	beq	24c94 <_start@@Base+0x10674>
   24c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c60:	ldr	r2, [pc, #160]	; 24d08 <_start@@Base+0x106e8>
   24c64:	add	r2, pc, r2
   24c68:	str	r2, [sp, #8]
   24c6c:	str	r3, [sp, #4]
   24c70:	mov	r3, #1
   24c74:	str	r3, [sp]
   24c78:	mov	r3, #0
   24c7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24c80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24c84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24c88:	bl	3c074 <flatcc_json_parser_union@@Base>
   24c8c:	str	r0, [fp, #-36]	; 0xffffffdc
   24c90:	b	24ed8 <_start@@Base+0x108b8>
   24c94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24c98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24c9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ca0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24ca4:	str	r0, [fp, #-36]	; 0xffffffdc
   24ca8:	b	24ed8 <_start@@Base+0x108b8>
   24cac:	nop			; (mov r0, r0)
   24cb0:	svcpl	0x00636860
   24cb4:			; <UNDEFINED> instruction: 0x6d61696e
   24cb8:	cmnvs	r3, r5, ror #8
   24cbc:	cmnvs	r8, #-2147483620	; 0x8000001c
   24cc0:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   24cc4:	rsbsvc	r5, r3, #116, 30	; 0x1d0
   24cc8:	svcpl	0x00636861
   24ccc:			; <UNDEFINED> instruction: 0x6d61696e
   24cd0:	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
   24cd4:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   24cd8:	andeq	r0, r0, r0
   24cdc:	ldmdbvc	r0!, {r8, sl, sp, lr}^
   24ce0:	ldrbvs	r0, [r2, #-0]!
   24ce4:	rsbvc	r6, r1, #116, 6	; 0xd0000001
   24ce8:			; <UNDEFINED> instruction: 0xfffff548
   24cec:			; <UNDEFINED> instruction: 0xfffff36c
   24cf0:	andeq	sp, r3, ip, asr #20
   24cf4:			; <UNDEFINED> instruction: 0xffff0000
   24cf8:	rsbsvc	r0, r3, #0
   24cfc:			; <UNDEFINED> instruction: 0xfffff2b8
   24d00:			; <UNDEFINED> instruction: 0xfffff178
   24d04:	andeq	sp, r3, r8, ror #16
   24d08:			; <UNDEFINED> instruction: 0xfffff0ac
   24d0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24d10:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24d14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d18:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24d1c:	str	r0, [fp, #-36]	; 0xffffffdc
   24d20:	b	24ed8 <_start@@Base+0x108b8>
   24d24:	ldrd	r2, [fp, #-12]
   24d28:	add	r1, pc, #616	; 0x268
   24d2c:	ldrd	r0, [r1]
   24d30:	cmp	r3, r1
   24d34:	cmpeq	r2, r0
   24d38:	bne	24ec4 <_start@@Base+0x108a4>
   24d3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24d40:	add	r3, r3, #8
   24d44:	str	r3, [fp, #-36]	; 0xffffffdc
   24d48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   24d4c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24d50:	bl	14f70 <_start@@Base+0x950>
   24d54:	strd	r0, [fp, #-12]
   24d58:	ldrd	r2, [fp, #-12]
   24d5c:	ldr	r0, [pc, #580]	; 24fa8 <_start@@Base+0x10988>
   24d60:	mvn	r1, #0
   24d64:	and	r2, r2, r0
   24d68:	and	r3, r3, r1
   24d6c:	add	r1, pc, #556	; 0x22c
   24d70:	ldrd	r0, [r1]
   24d74:	cmp	r3, r1
   24d78:	cmpeq	r2, r0
   24d7c:	bne	24e0c <_start@@Base+0x107ec>
   24d80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24d84:	str	r3, [fp, #-16]
   24d88:	mov	r3, #6
   24d8c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24d90:	ldr	r1, [fp, #-16]
   24d94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24d98:	bl	1552c <_start@@Base+0xf0c>
   24d9c:	str	r0, [fp, #-36]	; 0xffffffdc
   24da0:	ldr	r2, [fp, #-16]
   24da4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24da8:	cmp	r2, r3
   24dac:	beq	24df4 <_start@@Base+0x107d4>
   24db0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24db4:	ldr	r2, [pc, #496]	; 24fac <_start@@Base+0x1098c>
   24db8:	add	r2, pc, r2
   24dbc:	str	r2, [sp, #12]
   24dc0:	ldr	r2, [pc, #488]	; 24fb0 <_start@@Base+0x10990>
   24dc4:	add	r2, pc, r2
   24dc8:	str	r2, [sp, #8]
   24dcc:	str	r3, [sp, #4]
   24dd0:	mov	r3, #5
   24dd4:	str	r3, [sp]
   24dd8:	mov	r3, #2
   24ddc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24de0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24de4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24de8:	bl	3c244 <flatcc_json_parser_union_type@@Base>
   24dec:	str	r0, [fp, #-36]	; 0xffffffdc
   24df0:	b	24ed8 <_start@@Base+0x108b8>
   24df4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24df8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24dfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e00:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24e04:	str	r0, [fp, #-36]	; 0xffffffdc
   24e08:	b	24ed8 <_start@@Base+0x108b8>
   24e0c:	ldrd	r2, [fp, #-12]
   24e10:	mov	r0, #0
   24e14:	mov	r1, #-16777216	; 0xff000000
   24e18:	and	r2, r2, r0
   24e1c:	and	r3, r3, r1
   24e20:	cmp	r3, #1795162112	; 0x6b000000
   24e24:	cmpeq	r2, #0
   24e28:	bne	24eac <_start@@Base+0x1088c>
   24e2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24e30:	str	r3, [fp, #-16]
   24e34:	mov	r3, #1
   24e38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24e3c:	ldr	r1, [fp, #-16]
   24e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e44:	bl	1552c <_start@@Base+0xf0c>
   24e48:	str	r0, [fp, #-36]	; 0xffffffdc
   24e4c:	ldr	r2, [fp, #-16]
   24e50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24e54:	cmp	r2, r3
   24e58:	beq	24e94 <_start@@Base+0x10874>
   24e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24e60:	ldr	r2, [pc, #332]	; 24fb4 <_start@@Base+0x10994>
   24e64:	add	r2, pc, r2
   24e68:	str	r2, [sp, #8]
   24e6c:	str	r3, [sp, #4]
   24e70:	mov	r3, #5
   24e74:	str	r3, [sp]
   24e78:	mov	r3, #2
   24e7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24e80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24e84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24e88:	bl	3c074 <flatcc_json_parser_union@@Base>
   24e8c:	str	r0, [fp, #-36]	; 0xffffffdc
   24e90:	b	24ed8 <_start@@Base+0x108b8>
   24e94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24e98:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24e9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ea0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24ea4:	str	r0, [fp, #-36]	; 0xffffffdc
   24ea8:	b	24ed8 <_start@@Base+0x108b8>
   24eac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24eb0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24eb8:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24ebc:	str	r0, [fp, #-36]	; 0xffffffdc
   24ec0:	b	24ed8 <_start@@Base+0x108b8>
   24ec4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24ec8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24ecc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ed0:	bl	3aaf8 <flatcc_json_parser_unmatched_symbol@@Base>
   24ed4:	str	r0, [fp, #-36]	; 0xffffffdc
   24ed8:	sub	r3, fp, #20
   24edc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24ee0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24ee8:	bl	15174 <_start@@Base+0xb54>
   24eec:	str	r0, [fp, #-36]	; 0xffffffdc
   24ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   24ef4:	cmp	r3, #0
   24ef8:	bne	244f8 <_start@@Base+0xfed8>
   24efc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f00:	ldr	r3, [r3, #20]
   24f04:	cmp	r3, #0
   24f08:	bne	24f68 <_start@@Base+0x10948>
   24f0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24f10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24f14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f1c:	bl	3bff4 <flatcc_json_parser_finalize_unions@@Base>
   24f20:	str	r0, [fp, #-36]	; 0xffffffdc
   24f24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24f28:	ldr	r3, [r3]
   24f2c:	mov	r0, r3
   24f30:	bl	2f7a4 <flatcc_builder_end_table@@Base>
   24f34:	mov	r2, r0
   24f38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24f3c:	str	r2, [r3]
   24f40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24f44:	ldr	r3, [r3]
   24f48:	cmp	r3, #0
   24f4c:	beq	24f70 <_start@@Base+0x10950>
   24f50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24f54:	b	24f8c <_start@@Base+0x1096c>
   24f58:	nop			; (mov r0, r0)
   24f5c:	b	24f74 <_start@@Base+0x10954>
   24f60:	nop			; (mov r0, r0)
   24f64:	b	24f74 <_start@@Base+0x10954>
   24f68:	nop			; (mov r0, r0)
   24f6c:	b	24f74 <_start@@Base+0x10954>
   24f70:	nop			; (mov r0, r0)
   24f74:	mov	r3, #33	; 0x21
   24f78:	ldr	r2, [fp, #-40]	; 0xffffffd8
   24f7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24f80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24f84:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   24f88:	mov	r3, r0
   24f8c:	mov	r0, r3
   24f90:	sub	sp, fp, #4
   24f94:	pop	{fp, pc}
   24f98:	svcpl	0x006b6963
   24f9c:	cmnvc	r9, #1694498816	; 0x65000000
   24fa0:	rsbvc	r0, r5, r0
   24fa4:	blvs	1802190 <__bss_end__@@Base+0x179fce4>
   24fa8:			; <UNDEFINED> instruction: 0xffff0000
   24fac:			; <UNDEFINED> instruction: 0xffffef58
   24fb0:	andeq	sp, r3, r8, asr r6
   24fb4:			; <UNDEFINED> instruction: 0xffffeeac
   24fb8:	push	{fp}		; (str fp, [sp, #-4]!)
   24fbc:	add	fp, sp, #0
   24fc0:	sub	sp, sp, #20
   24fc4:	str	r0, [fp, #-8]
   24fc8:	str	r1, [fp, #-12]
   24fcc:	str	r2, [fp, #-16]
   24fd0:	str	r3, [fp, #-20]	; 0xffffffec
   24fd4:	ldr	r3, [fp, #-12]
   24fd8:	mov	r0, r3
   24fdc:	add	sp, fp, #0
   24fe0:	pop	{fp}		; (ldr fp, [sp], #4)
   24fe4:	bx	lr
   24fe8:	push	{fp, lr}
   24fec:	add	fp, sp, #4
   24ff0:	sub	sp, sp, #48	; 0x30
   24ff4:	str	r0, [fp, #-32]	; 0xffffffe0
   24ff8:	str	r1, [fp, #-36]	; 0xffffffdc
   24ffc:	str	r2, [fp, #-40]	; 0xffffffd8
   25000:	str	r3, [fp, #-44]	; 0xffffffd4
   25004:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25008:	str	r3, [fp, #-8]
   2500c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25010:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25014:	bl	14f70 <_start@@Base+0x950>
   25018:	strd	r0, [fp, #-20]	; 0xffffffec
   2501c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25020:	add	r1, pc, #912	; 0x390
   25024:	ldrd	r0, [r1]
   25028:	cmp	r3, r1
   2502c:	cmpeq	r2, r0
   25030:	bhi	25200 <_start@@Base+0x10be0>
   25034:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25038:	add	r1, pc, #896	; 0x380
   2503c:	ldrd	r0, [r1]
   25040:	cmp	r3, r1
   25044:	cmpeq	r2, r0
   25048:	bhi	250e0 <_start@@Base+0x10ac0>
   2504c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25050:	mov	r0, #0
   25054:	mvn	r1, #255	; 0xff
   25058:	and	r2, r2, r0
   2505c:	and	r3, r3, r1
   25060:	add	r1, pc, #864	; 0x360
   25064:	ldrd	r0, [r1]
   25068:	cmp	r3, r1
   2506c:	cmpeq	r2, r0
   25070:	bne	250d8 <_start@@Base+0x10ab8>
   25074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25078:	str	r3, [fp, #-24]	; 0xffffffe8
   2507c:	mov	r3, #3
   25080:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25084:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2508c:	bl	14fb8 <_start@@Base+0x998>
   25090:	str	r0, [fp, #-36]	; 0xffffffdc
   25094:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2509c:	cmp	r2, r3
   250a0:	beq	250d0 <_start@@Base+0x10ab0>
   250a4:	ldr	r3, [fp, #8]
   250a8:	str	r3, [sp, #4]
   250ac:	ldr	r3, [fp, #4]
   250b0:	str	r3, [sp]
   250b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   250b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   250bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   250c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   250c4:	bl	193fc <_start@@Base+0x4ddc>
   250c8:	str	r0, [fp, #-36]	; 0xffffffdc
   250cc:	b	254ec <_start@@Base+0x10ecc>
   250d0:	ldr	r3, [fp, #-8]
   250d4:	b	254f0 <_start@@Base+0x10ed0>
   250d8:	ldr	r3, [fp, #-8]
   250dc:	b	254f0 <_start@@Base+0x10ed0>
   250e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   250e4:	mov	r0, #0
   250e8:	mvn	r1, #255	; 0xff
   250ec:	and	r2, r2, r0
   250f0:	and	r3, r3, r1
   250f4:	add	r1, pc, #724	; 0x2d4
   250f8:	ldrd	r0, [r1]
   250fc:	cmp	r3, r1
   25100:	cmpeq	r2, r0
   25104:	bne	2516c <_start@@Base+0x10b4c>
   25108:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2510c:	str	r3, [fp, #-24]	; 0xffffffe8
   25110:	mov	r3, #3
   25114:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2511c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25120:	bl	14fb8 <_start@@Base+0x998>
   25124:	str	r0, [fp, #-36]	; 0xffffffdc
   25128:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2512c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25130:	cmp	r2, r3
   25134:	beq	25164 <_start@@Base+0x10b44>
   25138:	ldr	r3, [fp, #8]
   2513c:	str	r3, [sp, #4]
   25140:	ldr	r3, [fp, #4]
   25144:	str	r3, [sp]
   25148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2514c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25150:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25154:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25158:	bl	186d0 <_start@@Base+0x40b0>
   2515c:	str	r0, [fp, #-36]	; 0xffffffdc
   25160:	b	254ec <_start@@Base+0x10ecc>
   25164:	ldr	r3, [fp, #-8]
   25168:	b	254f0 <_start@@Base+0x10ed0>
   2516c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25170:	mov	r0, #-16777216	; 0xff000000
   25174:	mvn	r1, #0
   25178:	and	r2, r2, r0
   2517c:	and	r3, r3, r1
   25180:	add	r1, pc, #592	; 0x250
   25184:	ldrd	r0, [r1]
   25188:	cmp	r3, r1
   2518c:	cmpeq	r2, r0
   25190:	bne	251f8 <_start@@Base+0x10bd8>
   25194:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25198:	str	r3, [fp, #-24]	; 0xffffffe8
   2519c:	mov	r3, #5
   251a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   251a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   251a8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251ac:	bl	14fb8 <_start@@Base+0x998>
   251b0:	str	r0, [fp, #-36]	; 0xffffffdc
   251b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   251b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   251bc:	cmp	r2, r3
   251c0:	beq	251f0 <_start@@Base+0x10bd0>
   251c4:	ldr	r3, [fp, #8]
   251c8:	str	r3, [sp, #4]
   251cc:	ldr	r3, [fp, #4]
   251d0:	str	r3, [sp]
   251d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   251d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   251dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   251e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   251e4:	bl	18ff4 <_start@@Base+0x49d4>
   251e8:	str	r0, [fp, #-36]	; 0xffffffdc
   251ec:	b	254ec <_start@@Base+0x10ecc>
   251f0:	ldr	r3, [fp, #-8]
   251f4:	b	254f0 <_start@@Base+0x10ed0>
   251f8:	ldr	r3, [fp, #-8]
   251fc:	b	254f0 <_start@@Base+0x10ed0>
   25200:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25204:	add	r1, pc, #468	; 0x1d4
   25208:	ldrd	r0, [r1]
   2520c:	cmp	r3, r1
   25210:	cmpeq	r2, r0
   25214:	bhi	2529c <_start@@Base+0x10c7c>
   25218:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2521c:	add	r1, pc, #452	; 0x1c4
   25220:	ldrd	r0, [r1]
   25224:	cmp	r3, r1
   25228:	cmpeq	r2, r0
   2522c:	bne	25294 <_start@@Base+0x10c74>
   25230:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25234:	str	r3, [fp, #-24]	; 0xffffffe8
   25238:	mov	r3, #8
   2523c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25240:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25244:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25248:	bl	14fb8 <_start@@Base+0x998>
   2524c:	str	r0, [fp, #-36]	; 0xffffffdc
   25250:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25254:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25258:	cmp	r2, r3
   2525c:	beq	2528c <_start@@Base+0x10c6c>
   25260:	ldr	r3, [fp, #8]
   25264:	str	r3, [sp, #4]
   25268:	ldr	r3, [fp, #4]
   2526c:	str	r3, [sp]
   25270:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25274:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25278:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2527c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25280:	bl	18dc4 <_start@@Base+0x47a4>
   25284:	str	r0, [fp, #-36]	; 0xffffffdc
   25288:	b	254ec <_start@@Base+0x10ecc>
   2528c:	ldr	r3, [fp, #-8]
   25290:	b	254f0 <_start@@Base+0x10ed0>
   25294:	ldr	r3, [fp, #-8]
   25298:	b	254f0 <_start@@Base+0x10ed0>
   2529c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   252a0:	add	r1, pc, #328	; 0x148
   252a4:	ldrd	r0, [r1]
   252a8:	cmp	r3, r1
   252ac:	cmpeq	r2, r0
   252b0:	bhi	25338 <_start@@Base+0x10d18>
   252b4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   252b8:	add	r1, pc, #312	; 0x138
   252bc:	ldrd	r0, [r1]
   252c0:	cmp	r3, r1
   252c4:	cmpeq	r2, r0
   252c8:	bne	25330 <_start@@Base+0x10d10>
   252cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   252d0:	str	r3, [fp, #-24]	; 0xffffffe8
   252d4:	mov	r3, #8
   252d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   252dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   252e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   252e4:	bl	14fb8 <_start@@Base+0x998>
   252e8:	str	r0, [fp, #-36]	; 0xffffffdc
   252ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   252f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   252f4:	cmp	r2, r3
   252f8:	beq	25328 <_start@@Base+0x10d08>
   252fc:	ldr	r3, [fp, #8]
   25300:	str	r3, [sp, #4]
   25304:	ldr	r3, [fp, #4]
   25308:	str	r3, [sp]
   2530c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25310:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25314:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25318:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2531c:	bl	18ae0 <_start@@Base+0x44c0>
   25320:	str	r0, [fp, #-36]	; 0xffffffdc
   25324:	b	254ec <_start@@Base+0x10ecc>
   25328:	ldr	r3, [fp, #-8]
   2532c:	b	254f0 <_start@@Base+0x10ed0>
   25330:	ldr	r3, [fp, #-8]
   25334:	b	254f0 <_start@@Base+0x10ed0>
   25338:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2533c:	add	r1, pc, #188	; 0xbc
   25340:	ldrd	r0, [r1]
   25344:	cmp	r3, r1
   25348:	cmpeq	r2, r0
   2534c:	bne	253ac <_start@@Base+0x10d8c>
   25350:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25354:	str	r3, [fp, #-24]	; 0xffffffe8
   25358:	mov	r3, #8
   2535c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25364:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25368:	bl	14fb8 <_start@@Base+0x998>
   2536c:	str	r0, [fp, #-36]	; 0xffffffdc
   25370:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25378:	cmp	r2, r3
   2537c:	beq	25418 <_start@@Base+0x10df8>
   25380:	ldr	r3, [fp, #8]
   25384:	str	r3, [sp, #4]
   25388:	ldr	r3, [fp, #4]
   2538c:	str	r3, [sp]
   25390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25394:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25398:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2539c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   253a0:	bl	188b8 <_start@@Base+0x4298>
   253a4:	str	r0, [fp, #-36]	; 0xffffffdc
   253a8:	b	254ec <_start@@Base+0x10ecc>
   253ac:	nop			; (mov r0, r0)
   253b0:	b	2541c <_start@@Base+0x10dfc>
   253b4:	nop			; (mov r0, r0)
   253b8:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   253bc:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   253c0:	ldrshvc	pc, [pc, #255]	; 254c7 <_start@@Base+0x10ea7>	; <UNPREDICTABLE>
   253c4:	cmnmi	pc, #28416	; 0x6f00
   253c8:	andeq	r0, r0, r0
   253cc:	cmnmi	lr, r0, lsl #18
   253d0:	andeq	r0, r0, r0
   253d4:	strbtmi	r6, [pc], -r0, lsl #30
   253d8:	andvc	r0, r0, #0
   253dc:	cmnmi	pc, #28416	; 0x6f00
   253e0:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   253e4:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   253e8:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   253ec:	stmdavs	r5!, {r0, r1, r2, r3, r4, r6, fp, ip, sp, lr}^
   253f0:	strbvs	r7, [lr, #-1388]!	; 0xfffffa94
   253f4:	mcrvs	7, 3, r6, cr5, cr15, {2}
   253f8:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   253fc:	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
   25400:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   25404:	mcrvs	7, 3, r6, cr5, cr15, {2}
   25408:	cfldrdvs	mvd7, [r0, #-484]!	; 0xfffffe1c
   2540c:	cdpvs	4, 6, cr7, cr15, cr5, {3}
   25410:	andeq	r0, r0, r0
   25414:	strbvs	r7, [lr, #-1389]!	; 0xfffffa93
   25418:	nop			; (mov r0, r0)
   2541c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25420:	sub	r1, pc, #32
   25424:	ldrd	r0, [r1]
   25428:	cmp	r3, r1
   2542c:	cmpeq	r2, r0
   25430:	bne	254e4 <_start@@Base+0x10ec4>
   25434:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25438:	add	r3, r3, #8
   2543c:	str	r3, [fp, #-36]	; 0xffffffdc
   25440:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25444:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25448:	bl	14f70 <_start@@Base+0x950>
   2544c:	strd	r0, [fp, #-20]	; 0xffffffec
   25450:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25454:	mov	r0, #0
   25458:	mvn	r1, #0
   2545c:	and	r2, r2, r0
   25460:	and	r3, r3, r1
   25464:	sub	r1, pc, #92	; 0x5c
   25468:	ldrd	r0, [r1]
   2546c:	cmp	r3, r1
   25470:	cmpeq	r2, r0
   25474:	bne	254dc <_start@@Base+0x10ebc>
   25478:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2547c:	str	r3, [fp, #-24]	; 0xffffffe8
   25480:	mov	r3, #4
   25484:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2548c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25490:	bl	14fb8 <_start@@Base+0x998>
   25494:	str	r0, [fp, #-36]	; 0xffffffdc
   25498:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2549c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   254a0:	cmp	r2, r3
   254a4:	beq	254d4 <_start@@Base+0x10eb4>
   254a8:	ldr	r3, [fp, #8]
   254ac:	str	r3, [sp, #4]
   254b0:	ldr	r3, [fp, #4]
   254b4:	str	r3, [sp]
   254b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   254bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   254c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   254c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   254c8:	bl	19ff0 <_start@@Base+0x59d0>
   254cc:	str	r0, [fp, #-36]	; 0xffffffdc
   254d0:	b	254ec <_start@@Base+0x10ecc>
   254d4:	ldr	r3, [fp, #-8]
   254d8:	b	254f0 <_start@@Base+0x10ed0>
   254dc:	ldr	r3, [fp, #-8]
   254e0:	b	254f0 <_start@@Base+0x10ed0>
   254e4:	ldr	r3, [fp, #-8]
   254e8:	b	254f0 <_start@@Base+0x10ed0>
   254ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   254f0:	mov	r0, r3
   254f4:	sub	sp, fp, #4
   254f8:	pop	{fp, pc}
   254fc:	push	{fp}		; (str fp, [sp, #-4]!)
   25500:	add	fp, sp, #0
   25504:	sub	sp, sp, #20
   25508:	str	r0, [fp, #-8]
   2550c:	str	r1, [fp, #-12]
   25510:	str	r2, [fp, #-16]
   25514:	str	r3, [fp, #-20]	; 0xffffffec
   25518:	ldr	r3, [fp, #-12]
   2551c:	mov	r0, r3
   25520:	add	sp, fp, #0
   25524:	pop	{fp}		; (ldr fp, [sp], #4)
   25528:	bx	lr
   2552c:	push	{fp}		; (str fp, [sp, #-4]!)
   25530:	add	fp, sp, #0
   25534:	sub	sp, sp, #20
   25538:	str	r0, [fp, #-8]
   2553c:	str	r1, [fp, #-12]
   25540:	str	r2, [fp, #-16]
   25544:	str	r3, [fp, #-20]	; 0xffffffec
   25548:	ldr	r3, [fp, #-12]
   2554c:	mov	r0, r3
   25550:	add	sp, fp, #0
   25554:	pop	{fp}		; (ldr fp, [sp], #4)
   25558:	bx	lr
   2555c:	push	{fp, lr}
   25560:	add	fp, sp, #4
   25564:	sub	sp, sp, #48	; 0x30
   25568:	str	r0, [fp, #-32]	; 0xffffffe0
   2556c:	str	r1, [fp, #-36]	; 0xffffffdc
   25570:	str	r2, [fp, #-40]	; 0xffffffd8
   25574:	str	r3, [fp, #-44]	; 0xffffffd4
   25578:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2557c:	str	r3, [fp, #-8]
   25580:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25584:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25588:	bl	14f70 <_start@@Base+0x950>
   2558c:	strd	r0, [fp, #-20]	; 0xffffffec
   25590:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25594:	add	r1, pc, #204	; 0xcc
   25598:	ldrd	r0, [r1]
   2559c:	cmp	r3, r1
   255a0:	cmpeq	r2, r0
   255a4:	bne	25654 <_start@@Base+0x11034>
   255a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   255ac:	add	r3, r3, #8
   255b0:	str	r3, [fp, #-36]	; 0xffffffdc
   255b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   255b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   255bc:	bl	14f70 <_start@@Base+0x950>
   255c0:	strd	r0, [fp, #-20]	; 0xffffffec
   255c4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   255c8:	mov	r0, #0
   255cc:	mov	r1, #-16777216	; 0xff000000
   255d0:	and	r2, r2, r0
   255d4:	and	r3, r3, r1
   255d8:	cmp	r3, #1912602624	; 0x72000000
   255dc:	cmpeq	r2, #0
   255e0:	bne	2564c <_start@@Base+0x1102c>
   255e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   255e8:	str	r3, [fp, #-24]	; 0xffffffe8
   255ec:	mov	r3, #1
   255f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   255f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   255f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   255fc:	bl	14fb8 <_start@@Base+0x998>
   25600:	str	r0, [fp, #-36]	; 0xffffffdc
   25604:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2560c:	cmp	r2, r3
   25610:	beq	25644 <_start@@Base+0x11024>
   25614:	ldr	r3, [fp, #8]
   25618:	str	r3, [sp, #4]
   2561c:	ldr	r3, [fp, #4]
   25620:	str	r3, [sp]
   25624:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25628:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2562c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25630:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25634:	bl	23f94 <_start@@Base+0xf974>
   25638:	str	r0, [fp, #-36]	; 0xffffffdc
   2563c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25640:	b	25658 <_start@@Base+0x11038>
   25644:	ldr	r3, [fp, #-8]
   25648:	b	25658 <_start@@Base+0x11038>
   2564c:	ldr	r3, [fp, #-8]
   25650:	b	25658 <_start@@Base+0x11038>
   25654:	ldr	r3, [fp, #-8]
   25658:	mov	r0, r3
   2565c:	sub	sp, fp, #4
   25660:	pop	{fp, pc}
   25664:	nop			; (mov r0, r0)
   25668:	cmnvs	r3, r5, ror #8
   2566c:	cmnmi	r8, #-2147483620	; 0x8000001c
   25670:	push	{fp, lr}
   25674:	add	fp, sp, #4
   25678:	sub	sp, sp, #48	; 0x30
   2567c:	str	r0, [fp, #-32]	; 0xffffffe0
   25680:	str	r1, [fp, #-36]	; 0xffffffdc
   25684:	str	r2, [fp, #-40]	; 0xffffffd8
   25688:	str	r3, [fp, #-44]	; 0xffffffd4
   2568c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25690:	str	r3, [fp, #-8]
   25694:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25698:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2569c:	bl	14f70 <_start@@Base+0x950>
   256a0:	strd	r0, [fp, #-20]	; 0xffffffec
   256a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   256a8:	add	r1, pc, #208	; 0xd0
   256ac:	ldrd	r0, [r1]
   256b0:	cmp	r3, r1
   256b4:	cmpeq	r2, r0
   256b8:	bne	25770 <_start@@Base+0x11150>
   256bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   256c0:	add	r3, r3, #8
   256c4:	str	r3, [fp, #-36]	; 0xffffffdc
   256c8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   256cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   256d0:	bl	14f70 <_start@@Base+0x950>
   256d4:	strd	r0, [fp, #-20]	; 0xffffffec
   256d8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   256dc:	mov	r0, #0
   256e0:	mvn	r1, #255	; 0xff
   256e4:	and	r2, r2, r0
   256e8:	and	r3, r3, r1
   256ec:	add	r1, pc, #148	; 0x94
   256f0:	ldrd	r0, [r1]
   256f4:	cmp	r3, r1
   256f8:	cmpeq	r2, r0
   256fc:	bne	25768 <_start@@Base+0x11148>
   25700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25704:	str	r3, [fp, #-24]	; 0xffffffe8
   25708:	mov	r3, #3
   2570c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25714:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25718:	bl	14fb8 <_start@@Base+0x998>
   2571c:	str	r0, [fp, #-36]	; 0xffffffdc
   25720:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25728:	cmp	r2, r3
   2572c:	beq	25760 <_start@@Base+0x11140>
   25730:	ldr	r3, [fp, #8]
   25734:	str	r3, [sp, #4]
   25738:	ldr	r3, [fp, #4]
   2573c:	str	r3, [sp]
   25740:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25744:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25748:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2574c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25750:	bl	17580 <_start@@Base+0x2f60>
   25754:	str	r0, [fp, #-36]	; 0xffffffdc
   25758:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2575c:	b	25774 <_start@@Base+0x11154>
   25760:	ldr	r3, [fp, #-8]
   25764:	b	25774 <_start@@Base+0x11154>
   25768:	ldr	r3, [fp, #-8]
   2576c:	b	25774 <_start@@Base+0x11154>
   25770:	ldr	r3, [fp, #-8]
   25774:	mov	r0, r3
   25778:	sub	sp, fp, #4
   2577c:	pop	{fp, pc}
   25780:	stmdbmi	lr!, {r2, r3, r5, r6, r8, r9, sp, lr}^
   25784:	ldrbtmi	r6, [r2], -sp, ror #30
   25788:	andeq	r0, r0, r0
   2578c:	strbvc	r6, [r4, #-1280]!	; 0xfffffb00
   25790:	push	{fp, lr}
   25794:	add	fp, sp, #4
   25798:	sub	sp, sp, #48	; 0x30
   2579c:	str	r0, [fp, #-32]	; 0xffffffe0
   257a0:	str	r1, [fp, #-36]	; 0xffffffdc
   257a4:	str	r2, [fp, #-40]	; 0xffffffd8
   257a8:	str	r3, [fp, #-44]	; 0xffffffd4
   257ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   257b0:	str	r3, [fp, #-8]
   257b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   257b8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   257bc:	bl	14f70 <_start@@Base+0x950>
   257c0:	strd	r0, [fp, #-20]	; 0xffffffec
   257c4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   257c8:	add	r1, pc, #784	; 0x310
   257cc:	ldrd	r0, [r1]
   257d0:	cmp	r3, r1
   257d4:	cmpeq	r2, r0
   257d8:	bhi	258e0 <_start@@Base+0x112c0>
   257dc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   257e0:	add	r1, pc, #768	; 0x300
   257e4:	ldrd	r0, [r1]
   257e8:	cmp	r3, r1
   257ec:	cmpeq	r2, r0
   257f0:	bne	258d8 <_start@@Base+0x112b8>
   257f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   257f8:	add	r3, r3, #8
   257fc:	str	r3, [fp, #-36]	; 0xffffffdc
   25800:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25804:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25808:	bl	14f70 <_start@@Base+0x950>
   2580c:	strd	r0, [fp, #-20]	; 0xffffffec
   25810:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25814:	add	r1, pc, #724	; 0x2d4
   25818:	ldrd	r0, [r1]
   2581c:	cmp	r3, r1
   25820:	cmpeq	r2, r0
   25824:	bne	258d0 <_start@@Base+0x112b0>
   25828:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2582c:	add	r3, r3, #8
   25830:	str	r3, [fp, #-36]	; 0xffffffdc
   25834:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25838:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2583c:	bl	14f70 <_start@@Base+0x950>
   25840:	strd	r0, [fp, #-20]	; 0xffffffec
   25844:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25848:	mov	r0, #0
   2584c:	mov	r1, #-16777216	; 0xff000000
   25850:	and	r2, r2, r0
   25854:	and	r3, r3, r1
   25858:	cmp	r3, #1912602624	; 0x72000000
   2585c:	cmpeq	r2, #0
   25860:	bne	258c8 <_start@@Base+0x112a8>
   25864:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25868:	str	r3, [fp, #-24]	; 0xffffffe8
   2586c:	mov	r3, #1
   25870:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25878:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2587c:	bl	14fb8 <_start@@Base+0x998>
   25880:	str	r0, [fp, #-36]	; 0xffffffdc
   25884:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25888:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2588c:	cmp	r2, r3
   25890:	beq	258c0 <_start@@Base+0x112a0>
   25894:	ldr	r3, [fp, #8]
   25898:	str	r3, [sp, #4]
   2589c:	ldr	r3, [fp, #4]
   258a0:	str	r3, [sp]
   258a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   258a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   258ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   258b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   258b4:	bl	23f94 <_start@@Base+0xf974>
   258b8:	str	r0, [fp, #-36]	; 0xffffffdc
   258bc:	b	26130 <_start@@Base+0x11b10>
   258c0:	ldr	r3, [fp, #-8]
   258c4:	b	26134 <_start@@Base+0x11b14>
   258c8:	ldr	r3, [fp, #-8]
   258cc:	b	26134 <_start@@Base+0x11b14>
   258d0:	ldr	r3, [fp, #-8]
   258d4:	b	26134 <_start@@Base+0x11b14>
   258d8:	ldr	r3, [fp, #-8]
   258dc:	b	26134 <_start@@Base+0x11b14>
   258e0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   258e4:	add	r1, pc, #524	; 0x20c
   258e8:	ldrd	r0, [r1]
   258ec:	cmp	r3, r1
   258f0:	cmpeq	r2, r0
   258f4:	bne	25fb4 <_start@@Base+0x11994>
   258f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   258fc:	add	r3, r3, #8
   25900:	str	r3, [fp, #-36]	; 0xffffffdc
   25904:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25908:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2590c:	bl	14f70 <_start@@Base+0x950>
   25910:	strd	r0, [fp, #-20]	; 0xffffffec
   25914:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25918:	add	r1, pc, #480	; 0x1e0
   2591c:	ldrd	r0, [r1]
   25920:	cmp	r3, r1
   25924:	cmpeq	r2, r0
   25928:	bhi	25c00 <_start@@Base+0x115e0>
   2592c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25930:	add	r1, pc, #464	; 0x1d0
   25934:	ldrd	r0, [r1]
   25938:	cmp	r3, r1
   2593c:	cmpeq	r2, r0
   25940:	bhi	25a14 <_start@@Base+0x113f4>
   25944:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25948:	add	r1, pc, #448	; 0x1c0
   2594c:	ldrd	r0, [r1]
   25950:	cmp	r3, r1
   25954:	cmpeq	r2, r0
   25958:	bne	25a0c <_start@@Base+0x113ec>
   2595c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25960:	add	r3, r3, #8
   25964:	str	r3, [fp, #-36]	; 0xffffffdc
   25968:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2596c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25970:	bl	14f70 <_start@@Base+0x950>
   25974:	strd	r0, [fp, #-20]	; 0xffffffec
   25978:	ldrd	r2, [fp, #-20]	; 0xffffffec
   2597c:	mov	r0, #0
   25980:	ldr	r1, [pc, #416]	; 25b28 <_start@@Base+0x11508>
   25984:	and	r2, r2, r0
   25988:	and	r3, r3, r1
   2598c:	mov	r0, #0
   25990:	ldr	r1, [pc, #404]	; 25b2c <_start@@Base+0x1150c>
   25994:	cmp	r3, r1
   25998:	cmpeq	r2, r0
   2599c:	bne	25a04 <_start@@Base+0x113e4>
   259a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   259a4:	str	r3, [fp, #-24]	; 0xffffffe8
   259a8:	mov	r3, #2
   259ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   259b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   259b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   259b8:	bl	14fb8 <_start@@Base+0x998>
   259bc:	str	r0, [fp, #-36]	; 0xffffffdc
   259c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   259c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   259c8:	cmp	r2, r3
   259cc:	beq	259fc <_start@@Base+0x113dc>
   259d0:	ldr	r3, [fp, #8]
   259d4:	str	r3, [sp, #4]
   259d8:	ldr	r3, [fp, #4]
   259dc:	str	r3, [sp]
   259e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   259e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   259e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   259ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   259f0:	bl	193fc <_start@@Base+0x4ddc>
   259f4:	str	r0, [fp, #-36]	; 0xffffffdc
   259f8:	b	26130 <_start@@Base+0x11b10>
   259fc:	ldr	r3, [fp, #-8]
   25a00:	b	26134 <_start@@Base+0x11b14>
   25a04:	ldr	r3, [fp, #-8]
   25a08:	b	26134 <_start@@Base+0x11b14>
   25a0c:	ldr	r3, [fp, #-8]
   25a10:	b	26134 <_start@@Base+0x11b14>
   25a14:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25a18:	add	r1, pc, #248	; 0xf8
   25a1c:	ldrd	r0, [r1]
   25a20:	cmp	r3, r1
   25a24:	cmpeq	r2, r0
   25a28:	bne	25b30 <_start@@Base+0x11510>
   25a2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25a30:	add	r3, r3, #8
   25a34:	str	r3, [fp, #-36]	; 0xffffffdc
   25a38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25a3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25a40:	bl	14f70 <_start@@Base+0x950>
   25a44:	strd	r0, [fp, #-20]	; 0xffffffec
   25a48:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25a4c:	mov	r0, #0
   25a50:	mvn	r1, #0
   25a54:	and	r2, r2, r0
   25a58:	and	r3, r3, r1
   25a5c:	add	r1, pc, #188	; 0xbc
   25a60:	ldrd	r0, [r1]
   25a64:	cmp	r3, r1
   25a68:	cmpeq	r2, r0
   25a6c:	bne	25ad4 <_start@@Base+0x114b4>
   25a70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25a74:	str	r3, [fp, #-24]	; 0xffffffe8
   25a78:	mov	r3, #4
   25a7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25a84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25a88:	bl	14fb8 <_start@@Base+0x998>
   25a8c:	str	r0, [fp, #-36]	; 0xffffffdc
   25a90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25a94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25a98:	cmp	r2, r3
   25a9c:	beq	25acc <_start@@Base+0x114ac>
   25aa0:	ldr	r3, [fp, #8]
   25aa4:	str	r3, [sp, #4]
   25aa8:	ldr	r3, [fp, #4]
   25aac:	str	r3, [sp]
   25ab0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25ab4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25ab8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25abc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25ac0:	bl	18ff4 <_start@@Base+0x49d4>
   25ac4:	str	r0, [fp, #-36]	; 0xffffffdc
   25ac8:	b	26130 <_start@@Base+0x11b10>
   25acc:	ldr	r3, [fp, #-8]
   25ad0:	b	26134 <_start@@Base+0x11b14>
   25ad4:	ldr	r3, [fp, #-8]
   25ad8:	b	26134 <_start@@Base+0x11b14>
   25adc:	nop			; (mov r0, r0)
   25ae0:	stclvs	14, cr2, [r5, #-272]!	; 0xfffffef0
   25ae4:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   25ae8:	cmnvs	r3, lr, lsr #18
   25aec:			; <UNDEFINED> instruction: 0x46616e74
   25af0:	cmnvs	r3, r5, ror #8
   25af4:	cmnmi	r8, #-2147483620	; 0x8000001c
   25af8:	stclvs	14, cr2, [r5, #-276]!	; 0xfffffeec
   25afc:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   25b00:	stclvs	14, cr2, [r5], #-412	; 0xfffffe64
   25b04:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25b08:	stclvs	14, cr2, [r5], #-264	; 0xfffffef8
   25b0c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25b10:	stclvs	14, cr2, [r5], #-260	; 0xfffffefc
   25b14:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25b18:	stclvs	14, cr2, [r5], #-268	; 0xfffffef4
   25b1c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25b20:	andeq	r0, r0, r0
   25b24:	svcvs	0x006c6f72
   25b28:			; <UNDEFINED> instruction: 0xffff0000
   25b2c:	cdpvs	0, 7, cr0, cr9, cr0, {0}
   25b30:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25b34:	add	r1, pc, #852	; 0x354
   25b38:	ldrd	r0, [r1]
   25b3c:	cmp	r3, r1
   25b40:	cmpeq	r2, r0
   25b44:	bne	25bf8 <_start@@Base+0x115d8>
   25b48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25b4c:	add	r3, r3, #8
   25b50:	str	r3, [fp, #-36]	; 0xffffffdc
   25b54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25b58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25b5c:	bl	14f70 <_start@@Base+0x950>
   25b60:	strd	r0, [fp, #-20]	; 0xffffffec
   25b64:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25b68:	mov	r0, #0
   25b6c:	ldr	r1, [pc, #860]	; 25ed0 <_start@@Base+0x118b0>
   25b70:	and	r2, r2, r0
   25b74:	and	r3, r3, r1
   25b78:	mov	r0, #0
   25b7c:	ldr	r1, [pc, #848]	; 25ed4 <_start@@Base+0x118b4>
   25b80:	cmp	r3, r1
   25b84:	cmpeq	r2, r0
   25b88:	bne	25bf0 <_start@@Base+0x115d0>
   25b8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25b90:	str	r3, [fp, #-24]	; 0xffffffe8
   25b94:	mov	r3, #2
   25b98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25b9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25ba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25ba4:	bl	14fb8 <_start@@Base+0x998>
   25ba8:	str	r0, [fp, #-36]	; 0xffffffdc
   25bac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25bb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25bb4:	cmp	r2, r3
   25bb8:	beq	25be8 <_start@@Base+0x115c8>
   25bbc:	ldr	r3, [fp, #8]
   25bc0:	str	r3, [sp, #4]
   25bc4:	ldr	r3, [fp, #4]
   25bc8:	str	r3, [sp]
   25bcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25bd4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25bdc:	bl	186d0 <_start@@Base+0x40b0>
   25be0:	str	r0, [fp, #-36]	; 0xffffffdc
   25be4:	b	26130 <_start@@Base+0x11b10>
   25be8:	ldr	r3, [fp, #-8]
   25bec:	b	26134 <_start@@Base+0x11b14>
   25bf0:	ldr	r3, [fp, #-8]
   25bf4:	b	26134 <_start@@Base+0x11b14>
   25bf8:	ldr	r3, [fp, #-8]
   25bfc:	b	26134 <_start@@Base+0x11b14>
   25c00:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25c04:	add	r1, pc, #652	; 0x28c
   25c08:	ldrd	r0, [r1]
   25c0c:	cmp	r3, r1
   25c10:	cmpeq	r2, r0
   25c14:	bhi	25ce8 <_start@@Base+0x116c8>
   25c18:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25c1c:	add	r1, pc, #628	; 0x274
   25c20:	ldrd	r0, [r1]
   25c24:	cmp	r3, r1
   25c28:	cmpeq	r2, r0
   25c2c:	bne	25ce0 <_start@@Base+0x116c0>
   25c30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25c34:	add	r3, r3, #8
   25c38:	str	r3, [fp, #-36]	; 0xffffffdc
   25c3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25c40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25c44:	bl	14f70 <_start@@Base+0x950>
   25c48:	strd	r0, [fp, #-20]	; 0xffffffec
   25c4c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25c50:	mvn	r0, #255	; 0xff
   25c54:	mvn	r1, #0
   25c58:	and	r2, r2, r0
   25c5c:	and	r3, r3, r1
   25c60:	add	r1, pc, #568	; 0x238
   25c64:	ldrd	r0, [r1]
   25c68:	cmp	r3, r1
   25c6c:	cmpeq	r2, r0
   25c70:	bne	25cd8 <_start@@Base+0x116b8>
   25c74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25c78:	str	r3, [fp, #-24]	; 0xffffffe8
   25c7c:	mov	r3, #7
   25c80:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25c84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25c8c:	bl	14fb8 <_start@@Base+0x998>
   25c90:	str	r0, [fp, #-36]	; 0xffffffdc
   25c94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25c98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c9c:	cmp	r2, r3
   25ca0:	beq	25cd0 <_start@@Base+0x116b0>
   25ca4:	ldr	r3, [fp, #8]
   25ca8:	str	r3, [sp, #4]
   25cac:	ldr	r3, [fp, #4]
   25cb0:	str	r3, [sp]
   25cb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25cb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25cbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25cc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25cc4:	bl	18dc4 <_start@@Base+0x47a4>
   25cc8:	str	r0, [fp, #-36]	; 0xffffffdc
   25ccc:	b	26130 <_start@@Base+0x11b10>
   25cd0:	ldr	r3, [fp, #-8]
   25cd4:	b	26134 <_start@@Base+0x11b14>
   25cd8:	ldr	r3, [fp, #-8]
   25cdc:	b	26134 <_start@@Base+0x11b14>
   25ce0:	ldr	r3, [fp, #-8]
   25ce4:	b	26134 <_start@@Base+0x11b14>
   25ce8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25cec:	add	r1, pc, #436	; 0x1b4
   25cf0:	ldrd	r0, [r1]
   25cf4:	cmp	r3, r1
   25cf8:	cmpeq	r2, r0
   25cfc:	bhi	25dd0 <_start@@Base+0x117b0>
   25d00:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25d04:	add	r1, pc, #420	; 0x1a4
   25d08:	ldrd	r0, [r1]
   25d0c:	cmp	r3, r1
   25d10:	cmpeq	r2, r0
   25d14:	bne	25dc8 <_start@@Base+0x117a8>
   25d18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25d1c:	add	r3, r3, #8
   25d20:	str	r3, [fp, #-36]	; 0xffffffdc
   25d24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25d28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25d2c:	bl	14f70 <_start@@Base+0x950>
   25d30:	strd	r0, [fp, #-20]	; 0xffffffec
   25d34:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25d38:	mvn	r0, #255	; 0xff
   25d3c:	mvn	r1, #0
   25d40:	and	r2, r2, r0
   25d44:	and	r3, r3, r1
   25d48:	add	r1, pc, #360	; 0x168
   25d4c:	ldrd	r0, [r1]
   25d50:	cmp	r3, r1
   25d54:	cmpeq	r2, r0
   25d58:	bne	25dc0 <_start@@Base+0x117a0>
   25d5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25d60:	str	r3, [fp, #-24]	; 0xffffffe8
   25d64:	mov	r3, #7
   25d68:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25d6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25d70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25d74:	bl	14fb8 <_start@@Base+0x998>
   25d78:	str	r0, [fp, #-36]	; 0xffffffdc
   25d7c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d84:	cmp	r2, r3
   25d88:	beq	25db8 <_start@@Base+0x11798>
   25d8c:	ldr	r3, [fp, #8]
   25d90:	str	r3, [sp, #4]
   25d94:	ldr	r3, [fp, #4]
   25d98:	str	r3, [sp]
   25d9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25da0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25da4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25da8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25dac:	bl	18ae0 <_start@@Base+0x44c0>
   25db0:	str	r0, [fp, #-36]	; 0xffffffdc
   25db4:	b	26130 <_start@@Base+0x11b10>
   25db8:	ldr	r3, [fp, #-8]
   25dbc:	b	26134 <_start@@Base+0x11b14>
   25dc0:	ldr	r3, [fp, #-8]
   25dc4:	b	26134 <_start@@Base+0x11b14>
   25dc8:	ldr	r3, [fp, #-8]
   25dcc:	b	26134 <_start@@Base+0x11b14>
   25dd0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25dd4:	add	r1, pc, #228	; 0xe4
   25dd8:	ldrd	r0, [r1]
   25ddc:	cmp	r3, r1
   25de0:	cmpeq	r2, r0
   25de4:	bne	25fac <_start@@Base+0x1198c>
   25de8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25dec:	add	r3, r3, #8
   25df0:	str	r3, [fp, #-36]	; 0xffffffdc
   25df4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25df8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25dfc:	bl	14f70 <_start@@Base+0x950>
   25e00:	strd	r0, [fp, #-20]	; 0xffffffec
   25e04:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25e08:	mvn	r0, #255	; 0xff
   25e0c:	mvn	r1, #0
   25e10:	and	r2, r2, r0
   25e14:	and	r3, r3, r1
   25e18:	add	r1, pc, #168	; 0xa8
   25e1c:	ldrd	r0, [r1]
   25e20:	cmp	r3, r1
   25e24:	cmpeq	r2, r0
   25e28:	bne	25e88 <_start@@Base+0x11868>
   25e2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25e30:	str	r3, [fp, #-24]	; 0xffffffe8
   25e34:	mov	r3, #7
   25e38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25e40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e44:	bl	14fb8 <_start@@Base+0x998>
   25e48:	str	r0, [fp, #-36]	; 0xffffffdc
   25e4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e54:	cmp	r2, r3
   25e58:	beq	25ed8 <_start@@Base+0x118b8>
   25e5c:	ldr	r3, [fp, #8]
   25e60:	str	r3, [sp, #4]
   25e64:	ldr	r3, [fp, #4]
   25e68:	str	r3, [sp]
   25e6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25e70:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25e74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25e78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25e7c:	bl	188b8 <_start@@Base+0x4298>
   25e80:	str	r0, [fp, #-36]	; 0xffffffdc
   25e84:	b	26130 <_start@@Base+0x11b10>
   25e88:	nop			; (mov r0, r0)
   25e8c:	b	25edc <_start@@Base+0x118bc>
   25e90:	stclvs	14, cr2, [r5], #-280	; 0xfffffee8
   25e94:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25e98:	stclvs	14, cr2, [r5], #-416	; 0xfffffe60
   25e9c:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25ea0:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25ea4:	ldrbvs	r5, [r8, #-3941]!	; 0xfffff09b
   25ea8:	stclvs	14, cr2, [r5], #-436	; 0xfffffe4c
   25eac:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25eb0:	stclvs	14, cr2, [r5], #-420	; 0xfffffe5c
   25eb4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25eb8:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25ebc:	cdpvs	15, 7, cr5, cr4, cr5, {3}
   25ec0:	stclvs	14, cr2, [r5], #-440	; 0xfffffe48
   25ec4:	stmdavc	r1!, {r4, r5, r6, r8, sl, fp, sp, lr}^
   25ec8:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   25ecc:	strbvs	r5, [r7, #-3941]!	; 0xfffff09b
   25ed0:			; <UNDEFINED> instruction: 0xffff0000
   25ed4:	svcvs	0x006f0000
   25ed8:	nop			; (mov r0, r0)
   25edc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25ee0:	add	r1, pc, #600	; 0x258
   25ee4:	ldrd	r0, [r1]
   25ee8:	cmp	r3, r1
   25eec:	cmpeq	r2, r0
   25ef0:	bne	25fa4 <_start@@Base+0x11984>
   25ef4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25ef8:	add	r3, r3, #8
   25efc:	str	r3, [fp, #-36]	; 0xffffffdc
   25f00:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25f04:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25f08:	bl	14f70 <_start@@Base+0x950>
   25f0c:	strd	r0, [fp, #-20]	; 0xffffffec
   25f10:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25f14:	mov	r0, #0
   25f18:	mvn	r1, #255	; 0xff
   25f1c:	and	r2, r2, r0
   25f20:	and	r3, r3, r1
   25f24:	add	r1, pc, #540	; 0x21c
   25f28:	ldrd	r0, [r1]
   25f2c:	cmp	r3, r1
   25f30:	cmpeq	r2, r0
   25f34:	bne	25f9c <_start@@Base+0x1197c>
   25f38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25f3c:	str	r3, [fp, #-24]	; 0xffffffe8
   25f40:	mov	r3, #3
   25f44:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25f48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25f4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25f50:	bl	14fb8 <_start@@Base+0x998>
   25f54:	str	r0, [fp, #-36]	; 0xffffffdc
   25f58:	ldr	r2, [fp, #-36]	; 0xffffffdc
   25f5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25f60:	cmp	r2, r3
   25f64:	beq	25f94 <_start@@Base+0x11974>
   25f68:	ldr	r3, [fp, #8]
   25f6c:	str	r3, [sp, #4]
   25f70:	ldr	r3, [fp, #4]
   25f74:	str	r3, [sp]
   25f78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25f7c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   25f80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25f84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   25f88:	bl	19ff0 <_start@@Base+0x59d0>
   25f8c:	str	r0, [fp, #-36]	; 0xffffffdc
   25f90:	b	26130 <_start@@Base+0x11b10>
   25f94:	ldr	r3, [fp, #-8]
   25f98:	b	26134 <_start@@Base+0x11b14>
   25f9c:	ldr	r3, [fp, #-8]
   25fa0:	b	26134 <_start@@Base+0x11b14>
   25fa4:	ldr	r3, [fp, #-8]
   25fa8:	b	26134 <_start@@Base+0x11b14>
   25fac:	ldr	r3, [fp, #-8]
   25fb0:	b	26134 <_start@@Base+0x11b14>
   25fb4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25fb8:	add	r1, pc, #400	; 0x190
   25fbc:	ldrd	r0, [r1]
   25fc0:	cmp	r3, r1
   25fc4:	cmpeq	r2, r0
   25fc8:	bne	26128 <_start@@Base+0x11b08>
   25fcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   25fd0:	add	r3, r3, #8
   25fd4:	str	r3, [fp, #-36]	; 0xffffffdc
   25fd8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   25fdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   25fe0:	bl	14f70 <_start@@Base+0x950>
   25fe4:	strd	r0, [fp, #-20]	; 0xffffffec
   25fe8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   25fec:	add	r1, pc, #356	; 0x164
   25ff0:	ldrd	r0, [r1]
   25ff4:	cmp	r3, r1
   25ff8:	cmpeq	r2, r0
   25ffc:	bne	26120 <_start@@Base+0x11b00>
   26000:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26004:	add	r3, r3, #8
   26008:	str	r3, [fp, #-36]	; 0xffffffdc
   2600c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26010:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26014:	bl	14f70 <_start@@Base+0x950>
   26018:	strd	r0, [fp, #-20]	; 0xffffffec
   2601c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26020:	add	r1, pc, #312	; 0x138
   26024:	ldrd	r0, [r1]
   26028:	cmp	r3, r1
   2602c:	cmpeq	r2, r0
   26030:	bne	26118 <_start@@Base+0x11af8>
   26034:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26038:	add	r3, r3, #8
   2603c:	str	r3, [fp, #-36]	; 0xffffffdc
   26040:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26044:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26048:	bl	14f70 <_start@@Base+0x950>
   2604c:	strd	r0, [fp, #-20]	; 0xffffffec
   26050:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26054:	add	r1, pc, #268	; 0x10c
   26058:	ldrd	r0, [r1]
   2605c:	cmp	r3, r1
   26060:	cmpeq	r2, r0
   26064:	bne	26110 <_start@@Base+0x11af0>
   26068:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2606c:	add	r3, r3, #8
   26070:	str	r3, [fp, #-36]	; 0xffffffdc
   26074:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26078:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2607c:	bl	14f70 <_start@@Base+0x950>
   26080:	strd	r0, [fp, #-20]	; 0xffffffec
   26084:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26088:	mov	r0, #0
   2608c:	mov	r1, #-16777216	; 0xff000000
   26090:	and	r2, r2, r0
   26094:	and	r3, r3, r1
   26098:	cmp	r3, #1694498816	; 0x65000000
   2609c:	cmpeq	r2, #0
   260a0:	bne	26108 <_start@@Base+0x11ae8>
   260a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   260a8:	str	r3, [fp, #-24]	; 0xffffffe8
   260ac:	mov	r3, #1
   260b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   260b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   260b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   260bc:	bl	14fb8 <_start@@Base+0x998>
   260c0:	str	r0, [fp, #-36]	; 0xffffffdc
   260c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   260c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   260cc:	cmp	r2, r3
   260d0:	beq	26100 <_start@@Base+0x11ae0>
   260d4:	ldr	r3, [fp, #8]
   260d8:	str	r3, [sp, #4]
   260dc:	ldr	r3, [fp, #4]
   260e0:	str	r3, [sp]
   260e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   260e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   260ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   260f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   260f4:	bl	17580 <_start@@Base+0x2f60>
   260f8:	str	r0, [fp, #-36]	; 0xffffffdc
   260fc:	b	26130 <_start@@Base+0x11b10>
   26100:	ldr	r3, [fp, #-8]
   26104:	b	26134 <_start@@Base+0x11b14>
   26108:	ldr	r3, [fp, #-8]
   2610c:	b	26134 <_start@@Base+0x11b14>
   26110:	ldr	r3, [fp, #-8]
   26114:	b	26134 <_start@@Base+0x11b14>
   26118:	ldr	r3, [fp, #-8]
   2611c:	b	26134 <_start@@Base+0x11b14>
   26120:	ldr	r3, [fp, #-8]
   26124:	b	26134 <_start@@Base+0x11b14>
   26128:	ldr	r3, [fp, #-8]
   2612c:	b	26134 <_start@@Base+0x11b14>
   26130:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26134:	mov	r0, r3
   26138:	sub	sp, fp, #4
   2613c:	pop	{fp, pc}
   26140:	rsbsvc	r7, r4, r5, ror #18
   26144:	svcvs	0x0074656d
   26148:	andeq	r0, r0, r0
   2614c:	cdpvs	13, 7, cr6, cr5, cr0, {0}
   26150:	stclvs	14, cr2, [r5, #-316]!	; 0xfffffec4
   26154:	ldclmi	7, cr4, [r9, #-388]!	; 0xfffffe7c
   26158:	cdpmi	13, 6, cr6, cr1, cr5, {3}
   2615c:	strbtvc	r6, [r8], #-1394	; 0xfffffa8e
   26160:	strvs	r4, [lr, #-1650]!	; 0xfffff98e
   26164:	cmnpl	r0, #-1073741800	; 0xc0000018
   26168:	cmnvs	ip, #100, 10	; 0x19000000
   2616c:	svcvs	0x006d496e
   26170:	push	{fp, lr}
   26174:	add	fp, sp, #4
   26178:	sub	sp, sp, #72	; 0x48
   2617c:	str	r0, [fp, #-56]	; 0xffffffc8
   26180:	str	r1, [fp, #-60]	; 0xffffffc4
   26184:	str	r2, [fp, #-64]	; 0xffffffc0
   26188:	str	r3, [fp, #-68]	; 0xffffffbc
   2618c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   26190:	cmp	r3, #0
   26194:	bne	261a0 <_start@@Base+0x11b80>
   26198:	sub	r3, fp, #44	; 0x2c
   2619c:	b	261a4 <_start@@Base+0x11b84>
   261a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   261a4:	str	r3, [fp, #-60]	; 0xffffffc4
   261a8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   261ac:	ldr	r3, [fp, #-68]	; 0xffffffbc
   261b0:	add	r2, r2, r3
   261b4:	ldr	r3, [fp, #4]
   261b8:	str	r3, [sp]
   261bc:	mov	r3, r2
   261c0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   261c4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   261c8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   261cc:	bl	14b98 <_start@@Base+0x578>
   261d0:	mov	r3, #0
   261d4:	mov	r2, #0
   261d8:	ldr	r1, [pc, #148]	; 26274 <_start@@Base+0x11c54>
   261dc:	add	r1, pc, r1
   261e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   261e4:	bl	2dbfc <flatcc_builder_start_buffer@@Base>
   261e8:	mov	r3, r0
   261ec:	cmp	r3, #0
   261f0:	beq	261fc <_start@@Base+0x11bdc>
   261f4:	mvn	r3, #0
   261f8:	b	26268 <_start@@Base+0x11c48>
   261fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26200:	ldr	r3, [fp, #-68]	; 0xffffffbc
   26204:	add	r2, r2, r3
   26208:	sub	r3, fp, #48	; 0x30
   2620c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   26210:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26214:	bl	1e4c4 <_start@@Base+0x9ea4>
   26218:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2621c:	ldr	r3, [r3, #20]
   26220:	cmp	r3, #0
   26224:	beq	26234 <_start@@Base+0x11c14>
   26228:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2622c:	ldr	r3, [r3, #20]
   26230:	b	26268 <_start@@Base+0x11c48>
   26234:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26238:	mov	r1, r3
   2623c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   26240:	bl	2dd54 <flatcc_builder_end_buffer@@Base>
   26244:	mov	r3, r0
   26248:	cmp	r3, #0
   2624c:	bne	26258 <_start@@Base+0x11c38>
   26250:	mvn	r3, #0
   26254:	b	26268 <_start@@Base+0x11c48>
   26258:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2625c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   26260:	str	r2, [r3, #36]	; 0x24
   26264:	mov	r3, #0
   26268:	mov	r0, r3
   2626c:	sub	sp, fp, #4
   26270:	pop	{fp, pc}
   26274:	muleq	r2, r4, r7
   26278:	push	{fp}		; (str fp, [sp, #-4]!)
   2627c:	add	fp, sp, #0
   26280:	sub	sp, sp, #12
   26284:	str	r0, [fp, #-8]
   26288:	str	r1, [fp, #-12]
   2628c:	ldr	r3, [fp, #-12]
   26290:	cmp	r3, #0
   26294:	movne	r3, #1
   26298:	moveq	r3, #0
   2629c:	uxtb	r3, r3
   262a0:	mov	r2, r3
   262a4:	ldr	r3, [fp, #-8]
   262a8:	strb	r2, [r3, #26]
   262ac:	nop			; (mov r0, r0)
   262b0:	add	sp, fp, #0
   262b4:	pop	{fp}		; (ldr fp, [sp], #4)
   262b8:	bx	lr
   262bc:	push	{fp}		; (str fp, [sp, #-4]!)
   262c0:	add	fp, sp, #0
   262c4:	sub	sp, sp, #12
   262c8:	str	r0, [fp, #-8]
   262cc:	str	r1, [fp, #-12]
   262d0:	ldr	r3, [fp, #-12]
   262d4:	cmp	r3, #0
   262d8:	movne	r3, #1
   262dc:	moveq	r3, #0
   262e0:	uxtb	r3, r3
   262e4:	mov	r2, r3
   262e8:	ldr	r3, [fp, #-8]
   262ec:	strb	r2, [r3, #27]
   262f0:	nop			; (mov r0, r0)
   262f4:	add	sp, fp, #0
   262f8:	pop	{fp}		; (ldr fp, [sp], #4)
   262fc:	bx	lr
   26300:	push	{fp}		; (str fp, [sp, #-4]!)
   26304:	add	fp, sp, #0
   26308:	sub	sp, sp, #12
   2630c:	str	r0, [fp, #-8]
   26310:	mov	r3, r1
   26314:	strb	r3, [fp, #-9]
   26318:	ldr	r3, [fp, #-8]
   2631c:	ldrb	r2, [fp, #-9]
   26320:	strb	r2, [r3, #25]
   26324:	nop			; (mov r0, r0)
   26328:	add	sp, fp, #0
   2632c:	pop	{fp}		; (ldr fp, [sp], #4)
   26330:	bx	lr
   26334:	push	{fp, lr}
   26338:	add	fp, sp, #4
   2633c:	sub	sp, sp, #8
   26340:	str	r0, [fp, #-8]
   26344:	mov	r1, #2
   26348:	ldr	r0, [fp, #-8]
   2634c:	bl	26300 <_start@@Base+0x11ce0>
   26350:	mov	r1, #1
   26354:	ldr	r0, [fp, #-8]
   26358:	bl	26278 <_start@@Base+0x11c58>
   2635c:	mov	r1, #0
   26360:	ldr	r0, [fp, #-8]
   26364:	bl	262bc <_start@@Base+0x11c9c>
   26368:	nop			; (mov r0, r0)
   2636c:	sub	sp, fp, #4
   26370:	pop	{fp, pc}
   26374:	push	{fp, lr}
   26378:	add	fp, sp, #4
   2637c:	sub	sp, sp, #8
   26380:	str	r0, [fp, #-8]
   26384:	str	r1, [fp, #-12]
   26388:	ldr	r3, [fp, #-12]
   2638c:	and	r3, r3, #1
   26390:	cmp	r3, #0
   26394:	movne	r3, #1
   26398:	moveq	r3, #0
   2639c:	uxtb	r3, r3
   263a0:	mov	r2, r3
   263a4:	ldr	r3, [fp, #-8]
   263a8:	strb	r2, [r3, #26]
   263ac:	ldr	r3, [fp, #-12]
   263b0:	and	r3, r3, #2
   263b4:	cmp	r3, #0
   263b8:	movne	r3, #1
   263bc:	moveq	r3, #0
   263c0:	uxtb	r3, r3
   263c4:	mov	r2, r3
   263c8:	ldr	r3, [fp, #-8]
   263cc:	strb	r2, [r3, #27]
   263d0:	ldr	r3, [fp, #-12]
   263d4:	and	r3, r3, #4
   263d8:	cmp	r3, #0
   263dc:	movne	r3, #1
   263e0:	moveq	r3, #0
   263e4:	uxtb	r3, r3
   263e8:	mov	r2, r3
   263ec:	ldr	r3, [fp, #-8]
   263f0:	strb	r2, [r3, #28]
   263f4:	ldr	r3, [fp, #-12]
   263f8:	and	r3, r3, #8
   263fc:	cmp	r3, #0
   26400:	movne	r3, #1
   26404:	moveq	r3, #0
   26408:	uxtb	r3, r3
   2640c:	mov	r2, r3
   26410:	ldr	r3, [fp, #-8]
   26414:	strb	r2, [r3, #29]
   26418:	ldr	r3, [fp, #-12]
   2641c:	and	r3, r3, #16
   26420:	cmp	r3, #0
   26424:	beq	26434 <_start@@Base+0x11e14>
   26428:	mov	r1, #2
   2642c:	ldr	r0, [fp, #-8]
   26430:	bl	26300 <_start@@Base+0x11ce0>
   26434:	ldr	r3, [fp, #-12]
   26438:	and	r3, r3, #32
   2643c:	cmp	r3, #0
   26440:	beq	2644c <_start@@Base+0x11e2c>
   26444:	ldr	r0, [fp, #-8]
   26448:	bl	26334 <_start@@Base+0x11d14>
   2644c:	nop			; (mov r0, r0)
   26450:	sub	sp, fp, #4
   26454:	pop	{fp, pc}
   26458:	push	{fp, lr}
   2645c:	add	fp, sp, #4
   26460:	sub	sp, sp, #16
   26464:	str	r0, [fp, #-8]
   26468:	strd	r2, [fp, #-20]	; 0xffffffec
   2646c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   26470:	orrs	r1, r2, r3
   26474:	beq	26488 <_start@@Base+0x11e68>
   26478:	cmp	r3, #0
   2647c:	cmpeq	r2, #17
   26480:	beq	264a4 <_start@@Base+0x11e84>
   26484:	b	264c0 <_start@@Base+0x11ea0>
   26488:	mov	r2, #10
   2648c:	ldr	r3, [pc, #72]	; 264dc <_start@@Base+0x11ebc>
   26490:	add	r3, pc, r3
   26494:	mov	r1, r3
   26498:	ldr	r0, [fp, #-8]
   2649c:	bl	429a4 <flatcc_json_printer_enum@@Base>
   264a0:	b	264d0 <_start@@Base+0x11eb0>
   264a4:	mov	r2, #3
   264a8:	ldr	r3, [pc, #48]	; 264e0 <_start@@Base+0x11ec0>
   264ac:	add	r3, pc, r3
   264b0:	mov	r1, r3
   264b4:	ldr	r0, [fp, #-8]
   264b8:	bl	429a4 <flatcc_json_printer_enum@@Base>
   264bc:	b	264d0 <_start@@Base+0x11eb0>
   264c0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   264c4:	ldr	r0, [fp, #-8]
   264c8:	bl	428b8 <flatcc_json_printer_int64@@Base>
   264cc:	nop			; (mov r0, r0)
   264d0:	nop			; (mov r0, r0)
   264d4:	sub	sp, fp, #4
   264d8:	pop	{fp, pc}
   264dc:	andeq	r5, r2, r8, ror #9
   264e0:	ldrdeq	r5, [r2], -r8
   264e4:	push	{fp}		; (str fp, [sp, #-4]!)
   264e8:	add	fp, sp, #0
   264ec:	sub	sp, sp, #12
   264f0:	str	r0, [fp, #-8]
   264f4:	str	r1, [fp, #-12]
   264f8:	nop			; (mov r0, r0)
   264fc:	add	sp, fp, #0
   26500:	pop	{fp}		; (ldr fp, [sp], #4)
   26504:	bx	lr
   26508:	push	{fp, lr}
   2650c:	add	fp, sp, #4
   26510:	sub	sp, sp, #8
   26514:	str	r0, [fp, #-8]
   26518:	str	r1, [fp, #-12]
   2651c:	ldr	r3, [fp, #-12]
   26520:	cmn	r3, #11
   26524:	beq	26554 <_start@@Base+0x11f34>
   26528:	cmn	r3, #10
   2652c:	beq	26570 <_start@@Base+0x11f50>
   26530:	cmn	r3, #12
   26534:	bne	2658c <_start@@Base+0x11f6c>
   26538:	mov	r2, #4
   2653c:	ldr	r3, [pc, #100]	; 265a8 <_start@@Base+0x11f88>
   26540:	add	r3, pc, r3
   26544:	mov	r1, r3
   26548:	ldr	r0, [fp, #-8]
   2654c:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26550:	b	2659c <_start@@Base+0x11f7c>
   26554:	mov	r2, #4
   26558:	ldr	r3, [pc, #76]	; 265ac <_start@@Base+0x11f8c>
   2655c:	add	r3, pc, r3
   26560:	mov	r1, r3
   26564:	ldr	r0, [fp, #-8]
   26568:	bl	429a4 <flatcc_json_printer_enum@@Base>
   2656c:	b	2659c <_start@@Base+0x11f7c>
   26570:	mov	r2, #4
   26574:	ldr	r3, [pc, #52]	; 265b0 <_start@@Base+0x11f90>
   26578:	add	r3, pc, r3
   2657c:	mov	r1, r3
   26580:	ldr	r0, [fp, #-8]
   26584:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26588:	b	2659c <_start@@Base+0x11f7c>
   2658c:	ldr	r1, [fp, #-12]
   26590:	ldr	r0, [fp, #-8]
   26594:	bl	4286c <flatcc_json_printer_int32@@Base>
   26598:	nop			; (mov r0, r0)
   2659c:	nop			; (mov r0, r0)
   265a0:	sub	sp, fp, #4
   265a4:	pop	{fp, pc}
   265a8:	andeq	r5, r2, r8, asr #8
   265ac:	andeq	r5, r2, r4, lsr r4
   265b0:	andeq	r5, r2, r0, lsr #8
   265b4:	push	{fp, lr}
   265b8:	add	fp, sp, #4
   265bc:	sub	sp, sp, #8
   265c0:	str	r0, [fp, #-8]
   265c4:	str	r1, [fp, #-12]
   265c8:	ldr	r3, [fp, #-12]
   265cc:	cmn	r3, #1
   265d0:	beq	26618 <_start@@Base+0x11ff8>
   265d4:	cmn	r3, #1
   265d8:	bgt	265e8 <_start@@Base+0x11fc8>
   265dc:	cmn	r3, #2
   265e0:	beq	265fc <_start@@Base+0x11fdc>
   265e4:	b	2666c <_start@@Base+0x1204c>
   265e8:	cmp	r3, #2
   265ec:	beq	26634 <_start@@Base+0x12014>
   265f0:	cmp	r3, #42	; 0x2a
   265f4:	beq	26650 <_start@@Base+0x12030>
   265f8:	b	2666c <_start@@Base+0x1204c>
   265fc:	mov	r2, #6
   26600:	ldr	r3, [pc, #128]	; 26688 <_start@@Base+0x12068>
   26604:	add	r3, pc, r3
   26608:	mov	r1, r3
   2660c:	ldr	r0, [fp, #-8]
   26610:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26614:	b	2667c <_start@@Base+0x1205c>
   26618:	mov	r2, #7
   2661c:	ldr	r3, [pc, #104]	; 2668c <_start@@Base+0x1206c>
   26620:	add	r3, pc, r3
   26624:	mov	r1, r3
   26628:	ldr	r0, [fp, #-8]
   2662c:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26630:	b	2667c <_start@@Base+0x1205c>
   26634:	mov	r2, #4
   26638:	ldr	r3, [pc, #80]	; 26690 <_start@@Base+0x12070>
   2663c:	add	r3, pc, r3
   26640:	mov	r1, r3
   26644:	ldr	r0, [fp, #-8]
   26648:	bl	429a4 <flatcc_json_printer_enum@@Base>
   2664c:	b	2667c <_start@@Base+0x1205c>
   26650:	mov	r2, #4
   26654:	ldr	r3, [pc, #56]	; 26694 <_start@@Base+0x12074>
   26658:	add	r3, pc, r3
   2665c:	mov	r1, r3
   26660:	ldr	r0, [fp, #-8]
   26664:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26668:	b	2667c <_start@@Base+0x1205c>
   2666c:	ldr	r1, [fp, #-12]
   26670:	ldr	r0, [fp, #-8]
   26674:	bl	4286c <flatcc_json_printer_int32@@Base>
   26678:	nop			; (mov r0, r0)
   2667c:	nop			; (mov r0, r0)
   26680:	sub	sp, fp, #4
   26684:	pop	{fp, pc}
   26688:	muleq	r2, ip, r3
   2668c:	andeq	r5, r2, r8, lsl #7
   26690:	andeq	r5, r2, r4, ror r3
   26694:	andeq	r5, r2, r0, ror #6
   26698:	push	{fp, lr}
   2669c:	add	fp, sp, #4
   266a0:	sub	sp, sp, #8
   266a4:	str	r0, [fp, #-8]
   266a8:	str	r1, [fp, #-12]
   266ac:	ldr	r3, [fp, #-12]
   266b0:	cmp	r3, #3
   266b4:	beq	266e8 <_start@@Base+0x120c8>
   266b8:	ldr	r2, [pc, #124]	; 2673c <_start@@Base+0x1211c>
   266bc:	cmp	r3, r2
   266c0:	beq	26704 <_start@@Base+0x120e4>
   266c4:	cmn	r3, #2
   266c8:	bne	26720 <_start@@Base+0x12100>
   266cc:	mov	r2, #6
   266d0:	ldr	r3, [pc, #104]	; 26740 <_start@@Base+0x12120>
   266d4:	add	r3, pc, r3
   266d8:	mov	r1, r3
   266dc:	ldr	r0, [fp, #-8]
   266e0:	bl	429a4 <flatcc_json_printer_enum@@Base>
   266e4:	b	26730 <_start@@Base+0x12110>
   266e8:	mov	r2, #4
   266ec:	ldr	r3, [pc, #80]	; 26744 <_start@@Base+0x12124>
   266f0:	add	r3, pc, r3
   266f4:	mov	r1, r3
   266f8:	ldr	r0, [fp, #-8]
   266fc:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26700:	b	26730 <_start@@Base+0x12110>
   26704:	mov	r2, #4
   26708:	ldr	r3, [pc, #56]	; 26748 <_start@@Base+0x12128>
   2670c:	add	r3, pc, r3
   26710:	mov	r1, r3
   26714:	ldr	r0, [fp, #-8]
   26718:	bl	429a4 <flatcc_json_printer_enum@@Base>
   2671c:	b	26730 <_start@@Base+0x12110>
   26720:	ldr	r1, [fp, #-12]
   26724:	ldr	r0, [fp, #-8]
   26728:	bl	4286c <flatcc_json_printer_int32@@Base>
   2672c:	nop			; (mov r0, r0)
   26730:	nop			; (mov r0, r0)
   26734:	sub	sp, fp, #4
   26738:	pop	{fp, pc}
   2673c:	cdpvc	14, 10, cr11, cr15, cr15, {5}
   26740:	andeq	r5, r2, ip, ror #5
   26744:	ldrdeq	r5, [r2], -r8
   26748:	andeq	r5, r2, r4, asr #5
   2674c:	push	{fp, lr}
   26750:	add	fp, sp, #4
   26754:	sub	sp, sp, #24
   26758:	str	r0, [fp, #-24]	; 0xffffffe8
   2675c:	mov	r3, r1
   26760:	strb	r3, [fp, #-25]	; 0xffffffe7
   26764:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   26768:	strb	r3, [fp, #-9]
   2676c:	ldrb	r2, [fp, #-9]
   26770:	ldrb	r3, [fp, #-9]
   26774:	sub	r3, r3, #1
   26778:	and	r3, r3, r2
   2677c:	cmp	r3, #0
   26780:	movne	r3, #1
   26784:	moveq	r3, #0
   26788:	uxtb	r3, r3
   2678c:	str	r3, [fp, #-16]
   26790:	mov	r3, #0
   26794:	str	r3, [fp, #-8]
   26798:	ldrb	r3, [fp, #-9]
   2679c:	and	r3, r3, #244	; 0xf4
   267a0:	cmp	r3, #0
   267a4:	bne	267b4 <_start@@Base+0x12194>
   267a8:	ldrb	r3, [fp, #-9]
   267ac:	cmp	r3, #0
   267b0:	bne	267c8 <_start@@Base+0x121a8>
   267b4:	ldrsb	r3, [fp, #-25]	; 0xffffffe7
   267b8:	mov	r1, r3
   267bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267c0:	bl	427c4 <flatcc_json_printer_int8@@Base>
   267c4:	b	26870 <_start@@Base+0x12250>
   267c8:	ldr	r1, [fp, #-16]
   267cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267d0:	bl	429dc <flatcc_json_printer_delimit_enum_flags@@Base>
   267d4:	ldrb	r3, [fp, #-9]
   267d8:	and	r3, r3, #1
   267dc:	cmp	r3, #0
   267e0:	beq	26804 <_start@@Base+0x121e4>
   267e4:	ldr	r1, [fp, #-8]
   267e8:	add	r3, r1, #1
   267ec:	str	r3, [fp, #-8]
   267f0:	mov	r3, #3
   267f4:	ldr	r2, [pc, #124]	; 26878 <_start@@Base+0x12258>
   267f8:	add	r2, pc, r2
   267fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26800:	bl	42a54 <flatcc_json_printer_enum_flag@@Base>
   26804:	ldrb	r3, [fp, #-9]
   26808:	and	r3, r3, #2
   2680c:	cmp	r3, #0
   26810:	beq	26834 <_start@@Base+0x12214>
   26814:	ldr	r1, [fp, #-8]
   26818:	add	r3, r1, #1
   2681c:	str	r3, [fp, #-8]
   26820:	mov	r3, #5
   26824:	ldr	r2, [pc, #80]	; 2687c <_start@@Base+0x1225c>
   26828:	add	r2, pc, r2
   2682c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26830:	bl	42a54 <flatcc_json_printer_enum_flag@@Base>
   26834:	ldrb	r3, [fp, #-9]
   26838:	and	r3, r3, #8
   2683c:	cmp	r3, #0
   26840:	beq	26864 <_start@@Base+0x12244>
   26844:	ldr	r1, [fp, #-8]
   26848:	add	r3, r1, #1
   2684c:	str	r3, [fp, #-8]
   26850:	mov	r3, #4
   26854:	ldr	r2, [pc, #36]	; 26880 <_start@@Base+0x12260>
   26858:	add	r2, pc, r2
   2685c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26860:	bl	42a54 <flatcc_json_printer_enum_flag@@Base>
   26864:	ldr	r1, [fp, #-16]
   26868:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2686c:	bl	429dc <flatcc_json_printer_delimit_enum_flags@@Base>
   26870:	sub	sp, fp, #4
   26874:	pop	{fp, pc}
   26878:	andeq	r5, r2, r0, ror #3
   2687c:			; <UNDEFINED> instruction: 0x000251b4
   26880:	andeq	r5, r2, ip, lsl #3
   26884:	push	{fp, lr}
   26888:	add	fp, sp, #4
   2688c:	sub	sp, sp, #8
   26890:	str	r0, [fp, #-8]
   26894:	str	r1, [fp, #-12]
   26898:	ldr	r3, [fp, #-12]
   2689c:	cmp	r3, #0
   268a0:	bne	268c0 <_start@@Base+0x122a0>
   268a4:	mov	r2, #1
   268a8:	ldr	r3, [pc, #44]	; 268dc <_start@@Base+0x122bc>
   268ac:	add	r3, pc, r3
   268b0:	mov	r1, r3
   268b4:	ldr	r0, [fp, #-8]
   268b8:	bl	429a4 <flatcc_json_printer_enum@@Base>
   268bc:	b	268d0 <_start@@Base+0x122b0>
   268c0:	ldr	r1, [fp, #-12]
   268c4:	ldr	r0, [fp, #-8]
   268c8:	bl	4286c <flatcc_json_printer_int32@@Base>
   268cc:	nop			; (mov r0, r0)
   268d0:	nop			; (mov r0, r0)
   268d4:	sub	sp, fp, #4
   268d8:	pop	{fp, pc}
   268dc:	andeq	r5, r2, r0, asr #2
   268e0:	push	{fp, lr}
   268e4:	add	fp, sp, #4
   268e8:	sub	sp, sp, #8
   268ec:	str	r0, [fp, #-8]
   268f0:	mov	r3, r1
   268f4:	strb	r3, [fp, #-9]
   268f8:	ldrb	r3, [fp, #-9]
   268fc:	cmp	r3, #1
   26900:	bne	26920 <_start@@Base+0x12300>
   26904:	mov	r2, #17
   26908:	ldr	r3, [pc, #56]	; 26948 <_start@@Base+0x12328>
   2690c:	add	r3, pc, r3
   26910:	mov	r1, r3
   26914:	ldr	r0, [fp, #-8]
   26918:	bl	429a4 <flatcc_json_printer_enum@@Base>
   2691c:	b	2693c <_start@@Base+0x1231c>
   26920:	mov	r2, #4
   26924:	ldr	r3, [pc, #32]	; 2694c <_start@@Base+0x1232c>
   26928:	add	r3, pc, r3
   2692c:	mov	r1, r3
   26930:	ldr	r0, [fp, #-8]
   26934:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26938:	nop			; (mov r0, r0)
   2693c:	nop			; (mov r0, r0)
   26940:	sub	sp, fp, #4
   26944:	pop	{fp, pc}
   26948:	andeq	r5, r2, r4, ror #1
   2694c:	ldrdeq	r5, [r2], -ip
   26950:	push	{fp, lr}
   26954:	add	fp, sp, #4
   26958:	sub	sp, sp, #8
   2695c:	str	r0, [fp, #-8]
   26960:	str	r1, [fp, #-12]
   26964:	ldr	r3, [fp, #-12]
   26968:	ldrb	r3, [r3, #8]
   2696c:	cmp	r3, #1
   26970:	beq	26978 <_start@@Base+0x12358>
   26974:	b	26994 <_start@@Base+0x12374>
   26978:	ldr	r3, [pc, #32]	; 269a0 <_start@@Base+0x12380>
   2697c:	add	r3, pc, r3
   26980:	mov	r2, r3
   26984:	ldr	r1, [fp, #-12]
   26988:	ldr	r0, [fp, #-8]
   2698c:	bl	49bac <flatcc_json_printer_union_table@@Base>
   26990:	nop			; (mov r0, r0)
   26994:	nop			; (mov r0, r0)
   26998:	sub	sp, fp, #4
   2699c:	pop	{fp, pc}
   269a0:	andeq	r0, r0, ip, lsr r7
   269a4:	push	{fp, lr}
   269a8:	add	fp, sp, #4
   269ac:	sub	sp, sp, #8
   269b0:	str	r0, [fp, #-8]
   269b4:	mov	r3, r1
   269b8:	strb	r3, [fp, #-9]
   269bc:	ldrb	r3, [fp, #-9]
   269c0:	sub	r3, r3, #1
   269c4:	cmp	r3, #3
   269c8:	addls	pc, pc, r3, lsl #2
   269cc:	b	26a50 <_start@@Base+0x12430>
   269d0:	b	269e0 <_start@@Base+0x123c0>
   269d4:	b	269fc <_start@@Base+0x123dc>
   269d8:	b	26a18 <_start@@Base+0x123f8>
   269dc:	b	26a34 <_start@@Base+0x12414>
   269e0:	mov	r2, #7
   269e4:	ldr	r3, [pc, #140]	; 26a78 <_start@@Base+0x12458>
   269e8:	add	r3, pc, r3
   269ec:	mov	r1, r3
   269f0:	ldr	r0, [fp, #-8]
   269f4:	bl	429a4 <flatcc_json_printer_enum@@Base>
   269f8:	b	26a6c <_start@@Base+0x1244c>
   269fc:	mov	r2, #23
   26a00:	ldr	r3, [pc, #116]	; 26a7c <_start@@Base+0x1245c>
   26a04:	add	r3, pc, r3
   26a08:	mov	r1, r3
   26a0c:	ldr	r0, [fp, #-8]
   26a10:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26a14:	b	26a6c <_start@@Base+0x1244c>
   26a18:	mov	r2, #8
   26a1c:	ldr	r3, [pc, #92]	; 26a80 <_start@@Base+0x12460>
   26a20:	add	r3, pc, r3
   26a24:	mov	r1, r3
   26a28:	ldr	r0, [fp, #-8]
   26a2c:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26a30:	b	26a6c <_start@@Base+0x1244c>
   26a34:	mov	r2, #3
   26a38:	ldr	r3, [pc, #68]	; 26a84 <_start@@Base+0x12464>
   26a3c:	add	r3, pc, r3
   26a40:	mov	r1, r3
   26a44:	ldr	r0, [fp, #-8]
   26a48:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26a4c:	b	26a6c <_start@@Base+0x1244c>
   26a50:	mov	r2, #4
   26a54:	ldr	r3, [pc, #44]	; 26a88 <_start@@Base+0x12468>
   26a58:	add	r3, pc, r3
   26a5c:	mov	r1, r3
   26a60:	ldr	r0, [fp, #-8]
   26a64:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26a68:	nop			; (mov r0, r0)
   26a6c:	nop			; (mov r0, r0)
   26a70:	sub	sp, fp, #4
   26a74:	pop	{fp, pc}
   26a78:	andeq	r5, r2, r4, lsr #32
   26a7c:	andeq	r5, r2, r0, lsl r0
   26a80:	andeq	r5, r2, ip
   26a84:	strdeq	r4, [r2], -ip
   26a88:	andeq	r4, r2, ip, lsr #31
   26a8c:	push	{fp, lr}
   26a90:	add	fp, sp, #4
   26a94:	sub	sp, sp, #8
   26a98:	str	r0, [fp, #-8]
   26a9c:	str	r1, [fp, #-12]
   26aa0:	ldr	r3, [fp, #-12]
   26aa4:	ldrb	r3, [r3, #8]
   26aa8:	sub	r3, r3, #1
   26aac:	cmp	r3, #3
   26ab0:	addls	pc, pc, r3, lsl #2
   26ab4:	b	26b38 <_start@@Base+0x12518>
   26ab8:	b	26ac8 <_start@@Base+0x124a8>
   26abc:	b	26ae4 <_start@@Base+0x124c4>
   26ac0:	b	26b00 <_start@@Base+0x124e0>
   26ac4:	b	26b1c <_start@@Base+0x124fc>
   26ac8:	ldr	r3, [pc, #120]	; 26b48 <_start@@Base+0x12528>
   26acc:	add	r3, pc, r3
   26ad0:	mov	r2, r3
   26ad4:	ldr	r1, [fp, #-12]
   26ad8:	ldr	r0, [fp, #-8]
   26adc:	bl	49bac <flatcc_json_printer_union_table@@Base>
   26ae0:	b	26b3c <_start@@Base+0x1251c>
   26ae4:	ldr	r3, [pc, #96]	; 26b4c <_start@@Base+0x1252c>
   26ae8:	add	r3, pc, r3
   26aec:	mov	r2, r3
   26af0:	ldr	r1, [fp, #-12]
   26af4:	ldr	r0, [fp, #-8]
   26af8:	bl	49bac <flatcc_json_printer_union_table@@Base>
   26afc:	b	26b3c <_start@@Base+0x1251c>
   26b00:	ldr	r3, [pc, #72]	; 26b50 <_start@@Base+0x12530>
   26b04:	add	r3, pc, r3
   26b08:	mov	r2, r3
   26b0c:	ldr	r1, [fp, #-12]
   26b10:	ldr	r0, [fp, #-8]
   26b14:	bl	49bac <flatcc_json_printer_union_table@@Base>
   26b18:	b	26b3c <_start@@Base+0x1251c>
   26b1c:	ldr	r3, [pc, #48]	; 26b54 <_start@@Base+0x12534>
   26b20:	add	r3, pc, r3
   26b24:	mov	r2, r3
   26b28:	ldr	r1, [fp, #-12]
   26b2c:	ldr	r0, [fp, #-8]
   26b30:	bl	49bac <flatcc_json_printer_union_table@@Base>
   26b34:	b	26b3c <_start@@Base+0x1251c>
   26b38:	nop			; (mov r0, r0)
   26b3c:	nop			; (mov r0, r0)
   26b40:	sub	sp, fp, #4
   26b44:	pop	{fp, pc}
   26b48:	andeq	r0, r0, r0, ror lr
   26b4c:	muleq	r0, r0, r6
   26b50:	ldrdeq	r0, [r0], -r8
   26b54:	andeq	r0, r0, r8, asr r9
   26b58:	push	{fp, lr}
   26b5c:	add	fp, sp, #4
   26b60:	sub	sp, sp, #8
   26b64:	str	r0, [fp, #-8]
   26b68:	mov	r3, r1
   26b6c:	strb	r3, [fp, #-9]
   26b70:	ldrb	r3, [fp, #-9]
   26b74:	cmp	r3, #9
   26b78:	beq	26bec <_start@@Base+0x125cc>
   26b7c:	cmp	r3, #9
   26b80:	bgt	26b98 <_start@@Base+0x12578>
   26b84:	cmp	r3, #2
   26b88:	beq	26bb4 <_start@@Base+0x12594>
   26b8c:	cmp	r3, #8
   26b90:	beq	26bd0 <_start@@Base+0x125b0>
   26b94:	b	26c5c <_start@@Base+0x1263c>
   26b98:	cmp	r3, #11
   26b9c:	beq	26c24 <_start@@Base+0x12604>
   26ba0:	cmp	r3, #11
   26ba4:	blt	26c08 <_start@@Base+0x125e8>
   26ba8:	cmp	r3, #255	; 0xff
   26bac:	beq	26c40 <_start@@Base+0x12620>
   26bb0:	b	26c5c <_start@@Base+0x1263c>
   26bb4:	mov	r2, #5
   26bb8:	ldr	r3, [pc, #196]	; 26c84 <_start@@Base+0x12664>
   26bbc:	add	r3, pc, r3
   26bc0:	mov	r1, r3
   26bc4:	ldr	r0, [fp, #-8]
   26bc8:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26bcc:	b	26c78 <_start@@Base+0x12658>
   26bd0:	mov	r2, #8
   26bd4:	ldr	r3, [pc, #172]	; 26c88 <_start@@Base+0x12668>
   26bd8:	add	r3, pc, r3
   26bdc:	mov	r1, r3
   26be0:	ldr	r0, [fp, #-8]
   26be4:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26be8:	b	26c78 <_start@@Base+0x12658>
   26bec:	mov	r2, #5
   26bf0:	ldr	r3, [pc, #148]	; 26c8c <_start@@Base+0x1266c>
   26bf4:	add	r3, pc, r3
   26bf8:	mov	r1, r3
   26bfc:	ldr	r0, [fp, #-8]
   26c00:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26c04:	b	26c78 <_start@@Base+0x12658>
   26c08:	mov	r2, #7
   26c0c:	ldr	r3, [pc, #124]	; 26c90 <_start@@Base+0x12670>
   26c10:	add	r3, pc, r3
   26c14:	mov	r1, r3
   26c18:	ldr	r0, [fp, #-8]
   26c1c:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26c20:	b	26c78 <_start@@Base+0x12658>
   26c24:	mov	r2, #5
   26c28:	ldr	r3, [pc, #100]	; 26c94 <_start@@Base+0x12674>
   26c2c:	add	r3, pc, r3
   26c30:	mov	r1, r3
   26c34:	ldr	r0, [fp, #-8]
   26c38:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26c3c:	b	26c78 <_start@@Base+0x12658>
   26c40:	mov	r2, #6
   26c44:	ldr	r3, [pc, #76]	; 26c98 <_start@@Base+0x12678>
   26c48:	add	r3, pc, r3
   26c4c:	mov	r1, r3
   26c50:	ldr	r0, [fp, #-8]
   26c54:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26c58:	b	26c78 <_start@@Base+0x12658>
   26c5c:	mov	r2, #4
   26c60:	ldr	r3, [pc, #52]	; 26c9c <_start@@Base+0x1267c>
   26c64:	add	r3, pc, r3
   26c68:	mov	r1, r3
   26c6c:	ldr	r0, [fp, #-8]
   26c70:	bl	429a4 <flatcc_json_printer_enum@@Base>
   26c74:	nop			; (mov r0, r0)
   26c78:	nop			; (mov r0, r0)
   26c7c:	sub	sp, fp, #4
   26c80:	pop	{fp, pc}
   26c84:	andeq	r4, r2, r0, lsl #29
   26c88:	andeq	r4, r2, ip, ror #28
   26c8c:	andeq	r4, r2, ip, asr lr
   26c90:	andeq	r4, r2, r8, asr #28
   26c94:	andeq	r4, r2, r4, lsr lr
   26c98:	andeq	r4, r2, r0, lsr #28
   26c9c:	andeq	r4, r2, r0, lsr #27
   26ca0:	push	{fp, lr}
   26ca4:	add	fp, sp, #4
   26ca8:	sub	sp, sp, #8
   26cac:	str	r0, [fp, #-8]
   26cb0:	str	r1, [fp, #-12]
   26cb4:	ldr	r3, [fp, #-12]
   26cb8:	ldrb	r3, [r3, #8]
   26cbc:	cmp	r3, #9
   26cc0:	beq	26d34 <_start@@Base+0x12714>
   26cc4:	cmp	r3, #9
   26cc8:	bgt	26ce0 <_start@@Base+0x126c0>
   26ccc:	cmp	r3, #2
   26cd0:	beq	26cfc <_start@@Base+0x126dc>
   26cd4:	cmp	r3, #8
   26cd8:	beq	26d18 <_start@@Base+0x126f8>
   26cdc:	b	26d8c <_start@@Base+0x1276c>
   26ce0:	cmp	r3, #11
   26ce4:	beq	26d6c <_start@@Base+0x1274c>
   26ce8:	cmp	r3, #11
   26cec:	blt	26d50 <_start@@Base+0x12730>
   26cf0:	cmp	r3, #255	; 0xff
   26cf4:	beq	26d7c <_start@@Base+0x1275c>
   26cf8:	b	26d8c <_start@@Base+0x1276c>
   26cfc:	ldr	r3, [pc, #148]	; 26d98 <_start@@Base+0x12778>
   26d00:	add	r3, pc, r3
   26d04:	mov	r2, r3
   26d08:	ldr	r1, [fp, #-12]
   26d0c:	ldr	r0, [fp, #-8]
   26d10:	bl	49bac <flatcc_json_printer_union_table@@Base>
   26d14:	b	26d8c <_start@@Base+0x1276c>
   26d18:	ldr	r3, [pc, #124]	; 26d9c <_start@@Base+0x1277c>
   26d1c:	add	r3, pc, r3
   26d20:	mov	r2, r3
   26d24:	ldr	r1, [fp, #-12]
   26d28:	ldr	r0, [fp, #-8]
   26d2c:	bl	49bf8 <flatcc_json_printer_union_struct@@Base>
   26d30:	b	26d8c <_start@@Base+0x1276c>
   26d34:	ldr	r3, [pc, #100]	; 26da0 <_start@@Base+0x12780>
   26d38:	add	r3, pc, r3
   26d3c:	mov	r2, r3
   26d40:	ldr	r1, [fp, #-12]
   26d44:	ldr	r0, [fp, #-8]
   26d48:	bl	49bf8 <flatcc_json_printer_union_struct@@Base>
   26d4c:	b	26d8c <_start@@Base+0x1276c>
   26d50:	ldr	r3, [pc, #76]	; 26da4 <_start@@Base+0x12784>
   26d54:	add	r3, pc, r3
   26d58:	mov	r2, r3
   26d5c:	ldr	r1, [fp, #-12]
   26d60:	ldr	r0, [fp, #-8]
   26d64:	bl	49bf8 <flatcc_json_printer_union_struct@@Base>
   26d68:	b	26d8c <_start@@Base+0x1276c>
   26d6c:	ldr	r1, [fp, #-12]
   26d70:	ldr	r0, [fp, #-8]
   26d74:	bl	49cd4 <flatcc_json_printer_union_string@@Base>
   26d78:	b	26d8c <_start@@Base+0x1276c>
   26d7c:	ldr	r1, [fp, #-12]
   26d80:	ldr	r0, [fp, #-8]
   26d84:	bl	49cd4 <flatcc_json_printer_union_string@@Base>
   26d88:	nop			; (mov r0, r0)
   26d8c:	nop			; (mov r0, r0)
   26d90:	sub	sp, fp, #4
   26d94:	pop	{fp, pc}
   26d98:	andeq	r1, r0, ip, lsl r5
   26d9c:	andeq	r0, r0, r4, lsl #6
   26da0:	andeq	r0, r0, r4, lsr r3
   26da4:	andeq	r0, r0, r8, lsl r3
   26da8:	push	{fp}		; (str fp, [sp, #-4]!)
   26dac:	add	fp, sp, #0
   26db0:	sub	sp, sp, #12
   26db4:	str	r0, [fp, #-8]
   26db8:	str	r1, [fp, #-12]
   26dbc:	nop			; (mov r0, r0)
   26dc0:	add	sp, fp, #0
   26dc4:	pop	{fp}		; (ldr fp, [sp], #4)
   26dc8:	bx	lr
   26dcc:	push	{fp, lr}
   26dd0:	add	fp, sp, #4
   26dd4:	sub	sp, sp, #16
   26dd8:	str	r0, [fp, #-8]
   26ddc:	str	r1, [fp, #-12]
   26de0:	mov	r3, #1
   26de4:	str	r3, [sp, #4]
   26de8:	ldr	r3, [pc, #76]	; 26e3c <_start@@Base+0x1281c>
   26dec:	add	r3, pc, r3
   26df0:	str	r3, [sp]
   26df4:	mov	r3, #0
   26df8:	ldr	r2, [fp, #-12]
   26dfc:	mov	r1, #0
   26e00:	ldr	r0, [fp, #-8]
   26e04:	bl	44794 <flatcc_json_printer_int16_struct_field@@Base>
   26e08:	mov	r3, #1
   26e0c:	str	r3, [sp, #4]
   26e10:	ldr	r3, [pc, #40]	; 26e40 <_start@@Base+0x12820>
   26e14:	add	r3, pc, r3
   26e18:	str	r3, [sp]
   26e1c:	mov	r3, #2
   26e20:	ldr	r2, [fp, #-12]
   26e24:	mov	r1, #1
   26e28:	ldr	r0, [fp, #-8]
   26e2c:	bl	446e4 <flatcc_json_printer_int8_struct_field@@Base>
   26e30:	nop			; (mov r0, r0)
   26e34:	sub	sp, fp, #4
   26e38:	pop	{fp, pc}
   26e3c:	andeq	r4, r2, r4, lsl #25
   26e40:	andeq	r4, r2, r0, ror #24
   26e44:	push	{fp}		; (str fp, [sp, #-4]!)
   26e48:	add	fp, sp, #0
   26e4c:	sub	sp, sp, #12
   26e50:	str	r0, [fp, #-8]
   26e54:	str	r1, [fp, #-12]
   26e58:	nop			; (mov r0, r0)
   26e5c:	add	sp, fp, #0
   26e60:	pop	{fp}		; (ldr fp, [sp], #4)
   26e64:	bx	lr
   26e68:	push	{fp, lr}
   26e6c:	add	fp, sp, #4
   26e70:	sub	sp, sp, #24
   26e74:	str	r0, [fp, #-8]
   26e78:	str	r1, [fp, #-12]
   26e7c:	mov	r3, #1
   26e80:	str	r3, [sp, #4]
   26e84:	ldr	r3, [pc, #260]	; 26f90 <_start@@Base+0x12970>
   26e88:	add	r3, pc, r3
   26e8c:	str	r3, [sp]
   26e90:	mov	r3, #0
   26e94:	ldr	r2, [fp, #-12]
   26e98:	mov	r1, #0
   26e9c:	ldr	r0, [fp, #-8]
   26ea0:	bl	44a44 <flatcc_json_printer_float_struct_field@@Base>
   26ea4:	mov	r3, #1
   26ea8:	str	r3, [sp, #4]
   26eac:	ldr	r3, [pc, #224]	; 26f94 <_start@@Base+0x12974>
   26eb0:	add	r3, pc, r3
   26eb4:	str	r3, [sp]
   26eb8:	mov	r3, #4
   26ebc:	ldr	r2, [fp, #-12]
   26ec0:	mov	r1, #1
   26ec4:	ldr	r0, [fp, #-8]
   26ec8:	bl	44a44 <flatcc_json_printer_float_struct_field@@Base>
   26ecc:	mov	r3, #1
   26ed0:	str	r3, [sp, #4]
   26ed4:	ldr	r3, [pc, #188]	; 26f98 <_start@@Base+0x12978>
   26ed8:	add	r3, pc, r3
   26edc:	str	r3, [sp]
   26ee0:	mov	r3, #8
   26ee4:	ldr	r2, [fp, #-12]
   26ee8:	mov	r1, #2
   26eec:	ldr	r0, [fp, #-8]
   26ef0:	bl	44a44 <flatcc_json_printer_float_struct_field@@Base>
   26ef4:	mov	r3, #5
   26ef8:	str	r3, [sp, #4]
   26efc:	ldr	r3, [pc, #152]	; 26f9c <_start@@Base+0x1297c>
   26f00:	add	r3, pc, r3
   26f04:	str	r3, [sp]
   26f08:	mov	r3, #16
   26f0c:	ldr	r2, [fp, #-12]
   26f10:	mov	r1, #3
   26f14:	ldr	r0, [fp, #-8]
   26f18:	bl	44af4 <flatcc_json_printer_double_struct_field@@Base>
   26f1c:	ldr	r3, [pc, #124]	; 26fa0 <_start@@Base+0x12980>
   26f20:	add	r3, pc, r3
   26f24:	str	r3, [sp, #8]
   26f28:	mov	r3, #5
   26f2c:	str	r3, [sp, #4]
   26f30:	ldr	r3, [pc, #108]	; 26fa4 <_start@@Base+0x12984>
   26f34:	add	r3, pc, r3
   26f38:	str	r3, [sp]
   26f3c:	mov	r3, #24
   26f40:	ldr	r2, [fp, #-12]
   26f44:	mov	r1, #4
   26f48:	ldr	r0, [fp, #-8]
   26f4c:	bl	44ee4 <flatcc_json_printer_int8_enum_struct_field@@Base>
   26f50:	ldr	r3, [pc, #80]	; 26fa8 <_start@@Base+0x12988>
   26f54:	add	r3, pc, r3
   26f58:	str	r3, [sp, #8]
   26f5c:	mov	r3, #5
   26f60:	str	r3, [sp, #4]
   26f64:	ldr	r3, [pc, #64]	; 26fac <_start@@Base+0x1298c>
   26f68:	add	r3, pc, r3
   26f6c:	str	r3, [sp]
   26f70:	mov	r3, #26
   26f74:	ldr	r2, [fp, #-12]
   26f78:	mov	r1, #5
   26f7c:	ldr	r0, [fp, #-8]
   26f80:	bl	49d14 <flatcc_json_printer_embedded_struct_field@@Base>
   26f84:	nop			; (mov r0, r0)
   26f88:	sub	sp, fp, #4
   26f8c:	pop	{fp, pc}
   26f90:	andeq	r4, r2, r4, ror #22
   26f94:	andeq	r4, r2, r8, asr #23
   26f98:	andeq	r4, r2, r4, lsr #23
   26f9c:	andeq	r4, r2, r0, lsl #23
   26fa0:			; <UNDEFINED> instruction: 0xfffff824
   26fa4:	andeq	r4, r2, r4, asr fp
   26fa8:			; <UNDEFINED> instruction: 0xfffffe70
   26fac:	andeq	r4, r2, r8, lsr #22
   26fb0:	push	{fp, lr}
   26fb4:	add	fp, sp, #4
   26fb8:	sub	sp, sp, #16
   26fbc:	str	r0, [fp, #-8]
   26fc0:	str	r1, [fp, #-12]
   26fc4:	mov	r3, #2
   26fc8:	str	r3, [sp, #4]
   26fcc:	ldr	r3, [pc, #76]	; 27020 <_start@@Base+0x12a00>
   26fd0:	add	r3, pc, r3
   26fd4:	str	r3, [sp]
   26fd8:	mov	r3, #0
   26fdc:	ldr	r2, [fp, #-12]
   26fe0:	mov	r1, #0
   26fe4:	ldr	r0, [fp, #-8]
   26fe8:	bl	44594 <flatcc_json_printer_uint32_struct_field@@Base>
   26fec:	mov	r3, #8
   26ff0:	str	r3, [sp, #4]
   26ff4:	ldr	r3, [pc, #40]	; 27024 <_start@@Base+0x12a04>
   26ff8:	add	r3, pc, r3
   26ffc:	str	r3, [sp]
   27000:	mov	r3, #4
   27004:	ldr	r2, [fp, #-12]
   27008:	mov	r1, #1
   2700c:	ldr	r0, [fp, #-8]
   27010:	bl	44594 <flatcc_json_printer_uint32_struct_field@@Base>
   27014:	nop			; (mov r0, r0)
   27018:	sub	sp, fp, #4
   2701c:	pop	{fp, pc}
   27020:	andeq	r4, r2, r8, asr #21
   27024:	andeq	r4, r2, r4, lsr #21
   27028:	push	{fp, lr}
   2702c:	add	fp, sp, #4
   27030:	sub	sp, sp, #16
   27034:	str	r0, [fp, #-8]
   27038:	str	r1, [fp, #-12]
   2703c:	mov	r3, #11
   27040:	str	r3, [sp, #4]
   27044:	ldr	r3, [pc, #36]	; 27070 <_start@@Base+0x12a50>
   27048:	add	r3, pc, r3
   2704c:	str	r3, [sp]
   27050:	mov	r3, #0
   27054:	ldr	r2, [fp, #-12]
   27058:	mov	r1, #0
   2705c:	ldr	r0, [fp, #-8]
   27060:	bl	444e4 <flatcc_json_printer_uint16_struct_field@@Base>
   27064:	nop			; (mov r0, r0)
   27068:	sub	sp, fp, #4
   2706c:	pop	{fp, pc}
   27070:	andeq	r4, r2, r0, ror #20
   27074:	push	{fp, lr}
   27078:	add	fp, sp, #4
   2707c:	sub	sp, sp, #16
   27080:	str	r0, [fp, #-8]
   27084:	str	r1, [fp, #-12]
   27088:	mov	r3, #10
   2708c:	str	r3, [sp, #4]
   27090:	ldr	r3, [pc, #36]	; 270bc <_start@@Base+0x12a9c>
   27094:	add	r3, pc, r3
   27098:	str	r3, [sp]
   2709c:	mov	r3, #0
   270a0:	ldr	r2, [fp, #-12]
   270a4:	mov	r1, #0
   270a8:	ldr	r0, [fp, #-8]
   270ac:	bl	44844 <flatcc_json_printer_int32_struct_field@@Base>
   270b0:	nop			; (mov r0, r0)
   270b4:	sub	sp, fp, #4
   270b8:	pop	{fp, pc}
   270bc:	andeq	r4, r2, r0, lsr #20
   270c0:	push	{fp}		; (str fp, [sp, #-4]!)
   270c4:	add	fp, sp, #0
   270c8:	sub	sp, sp, #12
   270cc:	str	r0, [fp, #-8]
   270d0:	str	r1, [fp, #-12]
   270d4:	nop			; (mov r0, r0)
   270d8:	add	sp, fp, #0
   270dc:	pop	{fp}		; (ldr fp, [sp], #4)
   270e0:	bx	lr
   270e4:	push	{fp}		; (str fp, [sp, #-4]!)
   270e8:	add	fp, sp, #0
   270ec:	sub	sp, sp, #12
   270f0:	str	r0, [fp, #-8]
   270f4:	str	r1, [fp, #-12]
   270f8:	nop			; (mov r0, r0)
   270fc:	add	sp, fp, #0
   27100:	pop	{fp}		; (ldr fp, [sp], #4)
   27104:	bx	lr
   27108:	push	{fp}		; (str fp, [sp, #-4]!)
   2710c:	add	fp, sp, #0
   27110:	sub	sp, sp, #12
   27114:	str	r0, [fp, #-8]
   27118:	str	r1, [fp, #-12]
   2711c:	nop			; (mov r0, r0)
   27120:	add	sp, fp, #0
   27124:	pop	{fp}		; (ldr fp, [sp], #4)
   27128:	bx	lr
   2712c:	push	{fp, lr}
   27130:	add	fp, sp, #4
   27134:	sub	sp, sp, #16
   27138:	str	r0, [fp, #-8]
   2713c:	str	r1, [fp, #-12]
   27140:	ldr	r3, [pc, #48]	; 27178 <_start@@Base+0x12b58>
   27144:	add	r3, pc, r3
   27148:	str	r3, [sp, #4]
   2714c:	mov	r3, #5
   27150:	str	r3, [sp]
   27154:	ldr	r3, [pc, #32]	; 2717c <_start@@Base+0x12b5c>
   27158:	add	r3, pc, r3
   2715c:	mov	r2, #0
   27160:	ldr	r1, [fp, #-12]
   27164:	ldr	r0, [fp, #-8]
   27168:	bl	49e28 <flatcc_json_printer_struct_field@@Base>
   2716c:	nop			; (mov r0, r0)
   27170:	sub	sp, fp, #4
   27174:	pop	{fp, pc}
   27178:			; <UNDEFINED> instruction: 0xfffffcf8
   2717c:	andeq	r4, r2, r8, ror #18
   27180:	push	{fp, lr}
   27184:	add	fp, sp, #4
   27188:	sub	sp, sp, #24
   2718c:	str	r0, [fp, #-8]
   27190:	str	r1, [fp, #-12]
   27194:	ldr	r3, [pc, #188]	; 27258 <_start@@Base+0x12c38>
   27198:	add	r3, pc, r3
   2719c:	str	r3, [sp, #8]
   271a0:	mov	r3, #2
   271a4:	str	r3, [sp, #4]
   271a8:	mov	r3, #5
   271ac:	str	r3, [sp]
   271b0:	ldr	r3, [pc, #164]	; 2725c <_start@@Base+0x12c3c>
   271b4:	add	r3, pc, r3
   271b8:	mov	r2, #0
   271bc:	ldr	r1, [fp, #-12]
   271c0:	ldr	r0, [fp, #-8]
   271c4:	bl	43e30 <flatcc_json_printer_int8_enum_field@@Base>
   271c8:	ldr	r3, [pc, #144]	; 27260 <_start@@Base+0x12c40>
   271cc:	add	r3, pc, r3
   271d0:	str	r3, [sp, #8]
   271d4:	mov	r3, #2
   271d8:	str	r3, [sp, #4]
   271dc:	mov	r3, #6
   271e0:	str	r3, [sp]
   271e4:	ldr	r3, [pc, #120]	; 27264 <_start@@Base+0x12c44>
   271e8:	add	r3, pc, r3
   271ec:	mov	r2, #1
   271f0:	ldr	r1, [fp, #-12]
   271f4:	ldr	r0, [fp, #-8]
   271f8:	bl	43e30 <flatcc_json_printer_int8_enum_field@@Base>
   271fc:	mov	r3, #2
   27200:	str	r3, [sp, #4]
   27204:	mov	r3, #2
   27208:	str	r3, [sp]
   2720c:	ldr	r3, [pc, #84]	; 27268 <_start@@Base+0x12c48>
   27210:	add	r3, pc, r3
   27214:	mov	r2, #2
   27218:	ldr	r1, [fp, #-12]
   2721c:	ldr	r0, [fp, #-8]
   27220:	bl	42dc4 <flatcc_json_printer_uint8_field@@Base>
   27224:	mov	r3, #2
   27228:	str	r3, [sp, #4]
   2722c:	mov	r3, #3
   27230:	str	r3, [sp]
   27234:	ldr	r3, [pc, #48]	; 2726c <_start@@Base+0x12c4c>
   27238:	add	r3, pc, r3
   2723c:	mov	r2, #3
   27240:	ldr	r1, [fp, #-12]
   27244:	ldr	r0, [fp, #-8]
   27248:	bl	42dc4 <flatcc_json_printer_uint8_field@@Base>
   2724c:	nop			; (mov r0, r0)
   27250:	sub	sp, fp, #4
   27254:	pop	{fp, pc}
   27258:			; <UNDEFINED> instruction: 0xfffff5ac
   2725c:	andeq	r4, r2, r4, lsl r9
   27260:			; <UNDEFINED> instruction: 0xfffff578
   27264:	andeq	r4, r2, r8, ror #17
   27268:	andeq	r4, r2, r8, asr #17
   2726c:	andeq	r4, r2, r4, lsr #17
   27270:	push	{fp, lr}
   27274:	add	fp, sp, #4
   27278:	sub	sp, sp, #32
   2727c:	str	r0, [fp, #-8]
   27280:	str	r1, [fp, #-12]
   27284:	ldr	r3, [pc, #300]	; 273b8 <_start@@Base+0x12d98>
   27288:	add	r3, pc, r3
   2728c:	str	r3, [sp, #4]
   27290:	mov	r3, #6
   27294:	str	r3, [sp]
   27298:	ldr	r3, [pc, #284]	; 273bc <_start@@Base+0x12d9c>
   2729c:	add	r3, pc, r3
   272a0:	mov	r2, #0
   272a4:	ldr	r1, [fp, #-12]
   272a8:	ldr	r0, [fp, #-8]
   272ac:	bl	49e28 <flatcc_json_printer_struct_field@@Base>
   272b0:	ldr	r3, [pc, #264]	; 273c0 <_start@@Base+0x12da0>
   272b4:	add	r3, pc, r3
   272b8:	str	r3, [sp, #16]
   272bc:	mov	r2, #0
   272c0:	mov	r3, #0
   272c4:	strd	r2, [sp, #8]
   272c8:	mov	r3, #6
   272cc:	str	r3, [sp]
   272d0:	ldr	r3, [pc, #236]	; 273c4 <_start@@Base+0x12da4>
   272d4:	add	r3, pc, r3
   272d8:	mov	r2, #1
   272dc:	ldr	r1, [fp, #-12]
   272e0:	ldr	r0, [fp, #-8]
   272e4:	bl	441cc <flatcc_json_printer_int64_enum_field@@Base>
   272e8:	ldr	r3, [pc, #216]	; 273c8 <_start@@Base+0x12da8>
   272ec:	add	r3, pc, r3
   272f0:	str	r3, [sp, #16]
   272f4:	mov	r2, #0
   272f8:	mov	r3, #0
   272fc:	strd	r2, [sp, #8]
   27300:	mov	r3, #7
   27304:	str	r3, [sp]
   27308:	ldr	r3, [pc, #188]	; 273cc <_start@@Base+0x12dac>
   2730c:	add	r3, pc, r3
   27310:	mov	r2, #2
   27314:	ldr	r1, [fp, #-12]
   27318:	ldr	r0, [fp, #-8]
   2731c:	bl	441cc <flatcc_json_printer_int64_enum_field@@Base>
   27320:	mov	r3, #0
   27324:	str	r3, [sp, #4]
   27328:	mov	r3, #7
   2732c:	str	r3, [sp]
   27330:	ldr	r3, [pc, #152]	; 273d0 <_start@@Base+0x12db0>
   27334:	add	r3, pc, r3
   27338:	mov	r2, #3
   2733c:	ldr	r1, [fp, #-12]
   27340:	ldr	r0, [fp, #-8]
   27344:	bl	43418 <flatcc_json_printer_int32_field@@Base>
   27348:	ldr	r3, [pc, #132]	; 273d4 <_start@@Base+0x12db4>
   2734c:	add	r3, pc, r3
   27350:	str	r3, [sp, #16]
   27354:	mov	r2, #0
   27358:	mov	r3, #0
   2735c:	strd	r2, [sp, #8]
   27360:	mov	r3, #7
   27364:	str	r3, [sp]
   27368:	ldr	r3, [pc, #104]	; 273d8 <_start@@Base+0x12db8>
   2736c:	add	r3, pc, r3
   27370:	mov	r2, #4
   27374:	ldr	r1, [fp, #-12]
   27378:	ldr	r0, [fp, #-8]
   2737c:	bl	441cc <flatcc_json_printer_int64_enum_field@@Base>
   27380:	mov	r2, #0
   27384:	mov	r3, #0
   27388:	strd	r2, [sp, #8]
   2738c:	mov	r3, #7
   27390:	str	r3, [sp]
   27394:	ldr	r3, [pc, #64]	; 273dc <_start@@Base+0x12dbc>
   27398:	add	r3, pc, r3
   2739c:	mov	r2, #5
   273a0:	ldr	r1, [fp, #-12]
   273a4:	ldr	r0, [fp, #-8]
   273a8:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   273ac:	nop			; (mov r0, r0)
   273b0:	sub	sp, fp, #4
   273b4:	pop	{fp, pc}
   273b8:			; <UNDEFINED> instruction: 0xfffffb18
   273bc:	andeq	r4, r2, r4, asr #16
   273c0:			; <UNDEFINED> instruction: 0xfffff19c
   273c4:	andeq	r4, r2, r4, lsl r8
   273c8:			; <UNDEFINED> instruction: 0xfffff164
   273cc:	andeq	r4, r2, r4, ror #15
   273d0:	andeq	r4, r2, r4, asr #15
   273d4:			; <UNDEFINED> instruction: 0xfffff104
   273d8:	muleq	r2, r4, r7
   273dc:	andeq	r4, r2, r0, ror r7
   273e0:	push	{fp, lr}
   273e4:	add	fp, sp, #4
   273e8:	sub	sp, sp, #24
   273ec:	str	r0, [fp, #-8]
   273f0:	str	r1, [fp, #-12]
   273f4:	mov	r3, #2
   273f8:	str	r3, [sp]
   273fc:	ldr	r3, [pc, #112]	; 27474 <_start@@Base+0x12e54>
   27400:	add	r3, pc, r3
   27404:	mov	r2, #0
   27408:	ldr	r1, [fp, #-12]
   2740c:	ldr	r0, [fp, #-8]
   27410:	bl	42c4c <flatcc_json_printer_string_field@@Base>
   27414:	mov	r2, #0
   27418:	mov	r3, #0
   2741c:	strd	r2, [sp, #8]
   27420:	mov	r3, #3
   27424:	str	r3, [sp]
   27428:	ldr	r3, [pc, #72]	; 27478 <_start@@Base+0x12e58>
   2742c:	add	r3, pc, r3
   27430:	mov	r2, #1
   27434:	ldr	r1, [fp, #-12]
   27438:	ldr	r0, [fp, #-8]
   2743c:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   27440:	mov	r3, #0
   27444:	str	r3, [sp, #4]
   27448:	mov	r3, #5
   2744c:	str	r3, [sp]
   27450:	ldr	r3, [pc, #36]	; 2747c <_start@@Base+0x12e5c>
   27454:	add	r3, pc, r3
   27458:	mov	r2, #2
   2745c:	ldr	r1, [fp, #-12]
   27460:	ldr	r0, [fp, #-8]
   27464:	bl	42ed4 <flatcc_json_printer_uint16_field@@Base>
   27468:	nop			; (mov r0, r0)
   2746c:	sub	sp, fp, #4
   27470:	pop	{fp, pc}
   27474:	muleq	r2, r8, r6
   27478:	andeq	r4, r2, r4, ror #13
   2747c:	andeq	r4, r2, r0, asr #13
   27480:	push	{fp, lr}
   27484:	add	fp, sp, #4
   27488:	sub	sp, sp, #24
   2748c:	str	r0, [fp, #-8]
   27490:	str	r1, [fp, #-12]
   27494:	ldr	r3, [pc, #148]	; 27530 <_start@@Base+0x12f10>
   27498:	add	r3, pc, r3
   2749c:	str	r3, [sp, #4]
   274a0:	mov	r3, #6
   274a4:	str	r3, [sp]
   274a8:	ldr	r3, [pc, #132]	; 27534 <_start@@Base+0x12f14>
   274ac:	add	r3, pc, r3
   274b0:	mov	r2, #0
   274b4:	ldr	r1, [fp, #-12]
   274b8:	ldr	r0, [fp, #-8]
   274bc:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   274c0:	ldr	r3, [pc, #112]	; 27538 <_start@@Base+0x12f18>
   274c4:	add	r3, pc, r3
   274c8:	str	r3, [sp, #4]
   274cc:	mov	r3, #5
   274d0:	str	r3, [sp]
   274d4:	ldr	r3, [pc, #96]	; 2753c <_start@@Base+0x12f1c>
   274d8:	add	r3, pc, r3
   274dc:	mov	r2, #1
   274e0:	ldr	r1, [fp, #-12]
   274e4:	ldr	r0, [fp, #-8]
   274e8:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   274ec:	ldr	r3, [pc, #76]	; 27540 <_start@@Base+0x12f20>
   274f0:	add	r3, pc, r3
   274f4:	str	r3, [sp, #8]
   274f8:	ldr	r3, [pc, #68]	; 27544 <_start@@Base+0x12f24>
   274fc:	add	r3, pc, r3
   27500:	str	r3, [sp, #4]
   27504:	mov	r3, #7
   27508:	str	r3, [sp]
   2750c:	ldr	r3, [pc, #52]	; 27548 <_start@@Base+0x12f28>
   27510:	add	r3, pc, r3
   27514:	mov	r2, #3
   27518:	ldr	r1, [fp, #-12]
   2751c:	ldr	r0, [fp, #-8]
   27520:	bl	493d8 <flatcc_json_printer_union_vector_field@@Base>
   27524:	nop			; (mov r0, r0)
   27528:	sub	sp, fp, #4
   2752c:	pop	{fp, pc}
   27530:	andeq	r0, r0, ip, lsr #1
   27534:	andeq	r4, r2, r0, ror r6
   27538:	andeq	r0, r0, r4, lsr #27
   2753c:	andeq	r4, r2, ip, asr #12
   27540:			; <UNDEFINED> instruction: 0xfffff594
   27544:			; <UNDEFINED> instruction: 0xfffff4a0
   27548:	andeq	r4, r2, ip, lsl r6
   2754c:	push	{fp, lr}
   27550:	add	fp, sp, #4
   27554:	sub	sp, sp, #16
   27558:	str	r0, [fp, #-8]
   2755c:	str	r1, [fp, #-12]
   27560:	ldr	r3, [pc, #136]	; 275f0 <_start@@Base+0x12fd0>
   27564:	add	r3, pc, r3
   27568:	str	r3, [sp, #4]
   2756c:	mov	r3, #21
   27570:	str	r3, [sp]
   27574:	ldr	r3, [pc, #120]	; 275f4 <_start@@Base+0x12fd4>
   27578:	add	r3, pc, r3
   2757c:	mov	r2, #0
   27580:	ldr	r1, [fp, #-12]
   27584:	ldr	r0, [fp, #-8]
   27588:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   2758c:	ldr	r3, [pc, #100]	; 275f8 <_start@@Base+0x12fd8>
   27590:	add	r3, pc, r3
   27594:	str	r3, [sp, #4]
   27598:	mov	r3, #22
   2759c:	str	r3, [sp]
   275a0:	ldr	r3, [pc, #84]	; 275fc <_start@@Base+0x12fdc>
   275a4:	add	r3, pc, r3
   275a8:	mov	r2, #1
   275ac:	ldr	r1, [fp, #-12]
   275b0:	ldr	r0, [fp, #-8]
   275b4:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   275b8:	ldr	r3, [pc, #64]	; 27600 <_start@@Base+0x12fe0>
   275bc:	add	r3, pc, r3
   275c0:	str	r3, [sp, #4]
   275c4:	mov	r3, #22
   275c8:	str	r3, [sp]
   275cc:	ldr	r3, [pc, #48]	; 27604 <_start@@Base+0x12fe4>
   275d0:	add	r3, pc, r3
   275d4:	mov	r2, #2
   275d8:	ldr	r1, [fp, #-12]
   275dc:	ldr	r0, [fp, #-8]
   275e0:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   275e4:	nop			; (mov r0, r0)
   275e8:	sub	sp, fp, #4
   275ec:	pop	{fp, pc}
   275f0:	muleq	r0, ip, r0
   275f4:			; <UNDEFINED> instruction: 0x000245bc
   275f8:	andeq	r0, r0, r0, lsl r2
   275fc:	andeq	r4, r2, r8, lsr #11
   27600:	andeq	r0, r0, r0, ror #4
   27604:	muleq	r2, r4, r5
   27608:	push	{fp, lr}
   2760c:	add	fp, sp, #4
   27610:	sub	sp, sp, #24
   27614:	str	r0, [fp, #-8]
   27618:	str	r1, [fp, #-12]
   2761c:	mov	r3, #4
   27620:	str	r3, [sp]
   27624:	ldr	r3, [pc, #344]	; 27784 <_start@@Base+0x13164>
   27628:	add	r3, pc, r3
   2762c:	mov	r2, #0
   27630:	ldr	r1, [fp, #-12]
   27634:	ldr	r0, [fp, #-8]
   27638:	bl	42c4c <flatcc_json_printer_string_field@@Base>
   2763c:	mov	r3, #0
   27640:	str	r3, [sp, #4]
   27644:	mov	r3, #9
   27648:	str	r3, [sp]
   2764c:	ldr	r3, [pc, #308]	; 27788 <_start@@Base+0x13168>
   27650:	add	r3, pc, r3
   27654:	mov	r2, #1
   27658:	ldr	r1, [fp, #-12]
   2765c:	ldr	r0, [fp, #-8]
   27660:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   27664:	mov	r3, #4
   27668:	str	r3, [sp]
   2766c:	ldr	r3, [pc, #280]	; 2778c <_start@@Base+0x1316c>
   27670:	add	r3, pc, r3
   27674:	mov	r2, #2
   27678:	ldr	r1, [fp, #-12]
   2767c:	ldr	r0, [fp, #-8]
   27680:	bl	42c4c <flatcc_json_printer_string_field@@Base>
   27684:	mov	r2, #0
   27688:	mov	r3, #0
   2768c:	strd	r2, [sp, #8]
   27690:	mov	r3, #8
   27694:	str	r3, [sp]
   27698:	ldr	r3, [pc, #240]	; 27790 <_start@@Base+0x13170>
   2769c:	add	r3, pc, r3
   276a0:	mov	r2, #3
   276a4:	ldr	r1, [fp, #-12]
   276a8:	ldr	r0, [fp, #-8]
   276ac:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   276b0:	mov	r3, #4
   276b4:	str	r3, [sp]
   276b8:	ldr	r3, [pc, #212]	; 27794 <_start@@Base+0x13174>
   276bc:	add	r3, pc, r3
   276c0:	mov	r2, #4
   276c4:	ldr	r1, [fp, #-12]
   276c8:	ldr	r0, [fp, #-8]
   276cc:	bl	42c4c <flatcc_json_printer_string_field@@Base>
   276d0:	mov	r2, #0
   276d4:	mov	r3, #0
   276d8:	strd	r2, [sp, #8]
   276dc:	mov	r3, #8
   276e0:	str	r3, [sp]
   276e4:	ldr	r3, [pc, #172]	; 27798 <_start@@Base+0x13178>
   276e8:	add	r3, pc, r3
   276ec:	mov	r2, #5
   276f0:	ldr	r1, [fp, #-12]
   276f4:	ldr	r0, [fp, #-8]
   276f8:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   276fc:	mov	r3, #0
   27700:	str	r3, [sp, #4]
   27704:	mov	r3, #9
   27708:	str	r3, [sp]
   2770c:	ldr	r3, [pc, #136]	; 2779c <_start@@Base+0x1317c>
   27710:	add	r3, pc, r3
   27714:	mov	r2, #6
   27718:	ldr	r1, [fp, #-12]
   2771c:	ldr	r0, [fp, #-8]
   27720:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   27724:	mov	r2, #0
   27728:	mov	r3, #0
   2772c:	strd	r2, [sp, #8]
   27730:	mov	r3, #8
   27734:	str	r3, [sp]
   27738:	ldr	r3, [pc, #96]	; 277a0 <_start@@Base+0x13180>
   2773c:	add	r3, pc, r3
   27740:	mov	r2, #7
   27744:	ldr	r1, [fp, #-12]
   27748:	ldr	r0, [fp, #-8]
   2774c:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   27750:	mov	r3, #0
   27754:	str	r3, [sp, #4]
   27758:	mov	r3, #9
   2775c:	str	r3, [sp]
   27760:	ldr	r3, [pc, #60]	; 277a4 <_start@@Base+0x13184>
   27764:	add	r3, pc, r3
   27768:	mov	r2, #8
   2776c:	ldr	r1, [fp, #-12]
   27770:	ldr	r0, [fp, #-8]
   27774:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   27778:	nop			; (mov r0, r0)
   2777c:	sub	sp, fp, #4
   27780:	pop	{fp, pc}
   27784:	andeq	r4, r2, r4, asr r5
   27788:	andeq	r4, r2, r4, lsr r5
   2778c:	andeq	r4, r2, r0, lsr #10
   27790:	strdeq	r4, [r2], -ip
   27794:	andeq	r4, r2, r8, ror #9
   27798:	andeq	r4, r2, r4, asr #9
   2779c:	andeq	r4, r2, r8, lsr #9
   277a0:	andeq	r4, r2, r8, lsl #9
   277a4:	andeq	r4, r2, ip, ror #8
   277a8:	push	{fp, lr}
   277ac:	add	fp, sp, #4
   277b0:	sub	sp, sp, #24
   277b4:	str	r0, [fp, #-8]
   277b8:	str	r1, [fp, #-12]
   277bc:	mov	r2, #0
   277c0:	mov	r3, #0
   277c4:	strd	r2, [sp, #8]
   277c8:	mov	r3, #15
   277cc:	str	r3, [sp]
   277d0:	ldr	r3, [pc, #68]	; 2781c <_start@@Base+0x131fc>
   277d4:	add	r3, pc, r3
   277d8:	mov	r2, #0
   277dc:	ldr	r1, [fp, #-12]
   277e0:	ldr	r0, [fp, #-8]
   277e4:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   277e8:	mov	r3, #0
   277ec:	str	r3, [sp, #4]
   277f0:	mov	r3, #16
   277f4:	str	r3, [sp]
   277f8:	ldr	r3, [pc, #32]	; 27820 <_start@@Base+0x13200>
   277fc:	add	r3, pc, r3
   27800:	mov	r2, #1
   27804:	ldr	r1, [fp, #-12]
   27808:	ldr	r0, [fp, #-8]
   2780c:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   27810:	nop			; (mov r0, r0)
   27814:	sub	sp, fp, #4
   27818:	pop	{fp, pc}
   2781c:	andeq	r4, r2, r8, lsl #8
   27820:	strdeq	r4, [r2], -r0
   27824:	push	{fp, lr}
   27828:	add	fp, sp, #4
   2782c:	sub	sp, sp, #24
   27830:	str	r0, [fp, #-8]
   27834:	str	r1, [fp, #-12]
   27838:	mov	r2, #0
   2783c:	mov	r3, #0
   27840:	strd	r2, [sp, #8]
   27844:	mov	r3, #15
   27848:	str	r3, [sp]
   2784c:	ldr	r3, [pc, #68]	; 27898 <_start@@Base+0x13278>
   27850:	add	r3, pc, r3
   27854:	mov	r2, #0
   27858:	ldr	r1, [fp, #-12]
   2785c:	ldr	r0, [fp, #-8]
   27860:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   27864:	mov	r3, #0
   27868:	str	r3, [sp, #4]
   2786c:	mov	r3, #21
   27870:	str	r3, [sp]
   27874:	ldr	r3, [pc, #32]	; 2789c <_start@@Base+0x1327c>
   27878:	add	r3, pc, r3
   2787c:	mov	r2, #1
   27880:	ldr	r1, [fp, #-12]
   27884:	ldr	r0, [fp, #-8]
   27888:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   2788c:	nop			; (mov r0, r0)
   27890:	sub	sp, fp, #4
   27894:	pop	{fp, pc}
   27898:	andeq	r4, r2, ip, lsl #7
   2789c:	andeq	r4, r2, r8, lsl #7
   278a0:	push	{fp, lr}
   278a4:	add	fp, sp, #4
   278a8:	sub	sp, sp, #16
   278ac:	str	r0, [fp, #-8]
   278b0:	str	r1, [fp, #-12]
   278b4:	mov	r3, #0
   278b8:	str	r3, [sp, #4]
   278bc:	mov	r3, #4
   278c0:	str	r3, [sp]
   278c4:	ldr	r3, [pc, #108]	; 27938 <_start@@Base+0x13318>
   278c8:	add	r3, pc, r3
   278cc:	mov	r2, #0
   278d0:	ldr	r1, [fp, #-12]
   278d4:	ldr	r0, [fp, #-8]
   278d8:	bl	42cf4 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   278dc:	mov	r3, #1
   278e0:	str	r3, [sp, #4]
   278e4:	mov	r3, #7
   278e8:	str	r3, [sp]
   278ec:	ldr	r3, [pc, #72]	; 2793c <_start@@Base+0x1331c>
   278f0:	add	r3, pc, r3
   278f4:	mov	r2, #1
   278f8:	ldr	r1, [fp, #-12]
   278fc:	ldr	r0, [fp, #-8]
   27900:	bl	42cf4 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   27904:	mov	r3, #0
   27908:	str	r3, [sp, #4]
   2790c:	mov	r3, #6
   27910:	str	r3, [sp]
   27914:	ldr	r3, [pc, #36]	; 27940 <_start@@Base+0x13320>
   27918:	add	r3, pc, r3
   2791c:	mov	r2, #2
   27920:	ldr	r1, [fp, #-12]
   27924:	ldr	r0, [fp, #-8]
   27928:	bl	42cf4 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2792c:	nop			; (mov r0, r0)
   27930:	sub	sp, fp, #4
   27934:	pop	{fp, pc}
   27938:	andeq	r4, r2, r0, asr r3
   2793c:	andeq	r4, r2, r0, lsr r3
   27940:	andeq	r4, r2, r0, lsl r3
   27944:	push	{fp, lr}
   27948:	add	fp, sp, #4
   2794c:	sub	sp, sp, #24
   27950:	str	r0, [fp, #-8]
   27954:	str	r1, [fp, #-12]
   27958:	ldr	r3, [pc, #1416]	; 27ee8 <_start@@Base+0x138c8>
   2795c:	add	r3, pc, r3
   27960:	str	r3, [sp, #4]
   27964:	mov	r3, #3
   27968:	str	r3, [sp]
   2796c:	ldr	r3, [pc, #1400]	; 27eec <_start@@Base+0x138cc>
   27970:	add	r3, pc, r3
   27974:	mov	r2, #0
   27978:	ldr	r1, [fp, #-12]
   2797c:	ldr	r0, [fp, #-8]
   27980:	bl	49e28 <flatcc_json_printer_struct_field@@Base>
   27984:	mov	r3, #150	; 0x96
   27988:	str	r3, [sp, #4]
   2798c:	mov	r3, #4
   27990:	str	r3, [sp]
   27994:	ldr	r3, [pc, #1364]	; 27ef0 <_start@@Base+0x138d0>
   27998:	add	r3, pc, r3
   2799c:	mov	r2, #1
   279a0:	ldr	r1, [fp, #-12]
   279a4:	ldr	r0, [fp, #-8]
   279a8:	bl	43308 <flatcc_json_printer_int16_field@@Base>
   279ac:	mov	r3, #100	; 0x64
   279b0:	str	r3, [sp, #4]
   279b4:	mov	r3, #2
   279b8:	str	r3, [sp]
   279bc:	ldr	r3, [pc, #1328]	; 27ef4 <_start@@Base+0x138d4>
   279c0:	add	r3, pc, r3
   279c4:	mov	r2, #2
   279c8:	ldr	r1, [fp, #-12]
   279cc:	ldr	r0, [fp, #-8]
   279d0:	bl	43308 <flatcc_json_printer_int16_field@@Base>
   279d4:	mov	r3, #4
   279d8:	str	r3, [sp]
   279dc:	ldr	r3, [pc, #1300]	; 27ef8 <_start@@Base+0x138d8>
   279e0:	add	r3, pc, r3
   279e4:	mov	r2, #3
   279e8:	ldr	r1, [fp, #-12]
   279ec:	ldr	r0, [fp, #-8]
   279f0:	bl	42c4c <flatcc_json_printer_string_field@@Base>
   279f4:	mov	r3, #9
   279f8:	str	r3, [sp]
   279fc:	ldr	r3, [pc, #1272]	; 27efc <_start@@Base+0x138dc>
   27a00:	add	r3, pc, r3
   27a04:	mov	r2, #5
   27a08:	ldr	r1, [fp, #-12]
   27a0c:	ldr	r0, [fp, #-8]
   27a10:	bl	455a8 <flatcc_json_printer_uint8_vector_field@@Base>
   27a14:	ldr	r3, [pc, #1252]	; 27f00 <_start@@Base+0x138e0>
   27a18:	add	r3, pc, r3
   27a1c:	str	r3, [sp, #8]
   27a20:	mov	r3, #8
   27a24:	str	r3, [sp, #4]
   27a28:	mov	r3, #5
   27a2c:	str	r3, [sp]
   27a30:	ldr	r3, [pc, #1228]	; 27f04 <_start@@Base+0x138e4>
   27a34:	add	r3, pc, r3
   27a38:	mov	r2, #6
   27a3c:	ldr	r1, [fp, #-12]
   27a40:	ldr	r0, [fp, #-8]
   27a44:	bl	43e30 <flatcc_json_printer_int8_enum_field@@Base>
   27a48:	ldr	r3, [pc, #1208]	; 27f08 <_start@@Base+0x138e8>
   27a4c:	add	r3, pc, r3
   27a50:	str	r3, [sp, #8]
   27a54:	ldr	r3, [pc, #1200]	; 27f0c <_start@@Base+0x138ec>
   27a58:	add	r3, pc, r3
   27a5c:	str	r3, [sp, #4]
   27a60:	mov	r3, #4
   27a64:	str	r3, [sp]
   27a68:	ldr	r3, [pc, #1184]	; 27f10 <_start@@Base+0x138f0>
   27a6c:	add	r3, pc, r3
   27a70:	mov	r2, #8
   27a74:	ldr	r1, [fp, #-12]
   27a78:	ldr	r0, [fp, #-8]
   27a7c:	bl	498a0 <flatcc_json_printer_union_field@@Base>
   27a80:	ldr	r3, [pc, #1164]	; 27f14 <_start@@Base+0x138f4>
   27a84:	add	r3, pc, r3
   27a88:	str	r3, [sp, #8]
   27a8c:	mov	r3, #4
   27a90:	str	r3, [sp, #4]
   27a94:	mov	r3, #5
   27a98:	str	r3, [sp]
   27a9c:	ldr	r3, [pc, #1140]	; 27f18 <_start@@Base+0x138f8>
   27aa0:	add	r3, pc, r3
   27aa4:	mov	r2, #9
   27aa8:	ldr	r1, [fp, #-12]
   27aac:	ldr	r0, [fp, #-8]
   27ab0:	bl	48c3c <flatcc_json_printer_struct_vector_field@@Base>
   27ab4:	mov	r3, #17
   27ab8:	str	r3, [sp]
   27abc:	ldr	r3, [pc, #1112]	; 27f1c <_start@@Base+0x138fc>
   27ac0:	add	r3, pc, r3
   27ac4:	mov	r2, #10
   27ac8:	ldr	r1, [fp, #-12]
   27acc:	ldr	r0, [fp, #-8]
   27ad0:	bl	48fa8 <flatcc_json_printer_string_vector_field@@Base>
   27ad4:	ldr	r3, [pc, #1092]	; 27f20 <_start@@Base+0x13900>
   27ad8:	add	r3, pc, r3
   27adc:	str	r3, [sp, #4]
   27ae0:	mov	r3, #17
   27ae4:	str	r3, [sp]
   27ae8:	ldr	r3, [pc, #1076]	; 27f24 <_start@@Base+0x13904>
   27aec:	add	r3, pc, r3
   27af0:	mov	r2, #11
   27af4:	ldr	r1, [fp, #-12]
   27af8:	ldr	r0, [fp, #-8]
   27afc:	bl	491f8 <flatcc_json_printer_table_vector_field@@Base>
   27b00:	ldr	r3, [pc, #1056]	; 27f28 <_start@@Base+0x13908>
   27b04:	add	r3, pc, r3
   27b08:	str	r3, [sp, #4]
   27b0c:	mov	r3, #5
   27b10:	str	r3, [sp]
   27b14:	ldr	r3, [pc, #1040]	; 27f2c <_start@@Base+0x1390c>
   27b18:	add	r3, pc, r3
   27b1c:	mov	r2, #12
   27b20:	ldr	r1, [fp, #-12]
   27b24:	ldr	r0, [fp, #-8]
   27b28:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   27b2c:	ldr	r3, [pc, #1020]	; 27f30 <_start@@Base+0x13910>
   27b30:	add	r3, pc, r3
   27b34:	str	r3, [sp, #8]
   27b38:	mov	r3, #0
   27b3c:	str	r3, [sp, #4]
   27b40:	mov	r3, #20
   27b44:	str	r3, [sp]
   27b48:	ldr	r3, [pc, #996]	; 27f34 <_start@@Base+0x13914>
   27b4c:	add	r3, pc, r3
   27b50:	mov	r2, #13
   27b54:	ldr	r1, [fp, #-12]
   27b58:	ldr	r0, [fp, #-8]
   27b5c:	bl	4a4a0 <flatcc_json_printer_table_as_nested_root@@Base>
   27b60:	ldr	r3, [pc, #976]	; 27f38 <_start@@Base+0x13918>
   27b64:	add	r3, pc, r3
   27b68:	str	r3, [sp, #4]
   27b6c:	mov	r3, #9
   27b70:	str	r3, [sp]
   27b74:	ldr	r3, [pc, #960]	; 27f3c <_start@@Base+0x1391c>
   27b78:	add	r3, pc, r3
   27b7c:	mov	r2, #14
   27b80:	ldr	r1, [fp, #-12]
   27b84:	ldr	r0, [fp, #-8]
   27b88:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   27b8c:	mov	r3, #1
   27b90:	str	r3, [sp, #4]
   27b94:	mov	r3, #8
   27b98:	str	r3, [sp]
   27b9c:	ldr	r3, [pc, #924]	; 27f40 <_start@@Base+0x13920>
   27ba0:	add	r3, pc, r3
   27ba4:	mov	r2, #15
   27ba8:	ldr	r1, [fp, #-12]
   27bac:	ldr	r0, [fp, #-8]
   27bb0:	bl	4362c <flatcc_json_printer_bool_field@@Base>
   27bb4:	mov	r3, #0
   27bb8:	str	r3, [sp, #4]
   27bbc:	mov	r3, #16
   27bc0:	str	r3, [sp]
   27bc4:	ldr	r3, [pc, #888]	; 27f44 <_start@@Base+0x13924>
   27bc8:	add	r3, pc, r3
   27bcc:	mov	r2, #16
   27bd0:	ldr	r1, [fp, #-12]
   27bd4:	ldr	r0, [fp, #-8]
   27bd8:	bl	43418 <flatcc_json_printer_int32_field@@Base>
   27bdc:	mov	r3, #0
   27be0:	str	r3, [sp, #4]
   27be4:	mov	r3, #16
   27be8:	str	r3, [sp]
   27bec:	ldr	r3, [pc, #852]	; 27f48 <_start@@Base+0x13928>
   27bf0:	add	r3, pc, r3
   27bf4:	mov	r2, #17
   27bf8:	ldr	r1, [fp, #-12]
   27bfc:	ldr	r0, [fp, #-8]
   27c00:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   27c04:	mov	r2, #0
   27c08:	mov	r3, #0
   27c0c:	strd	r2, [sp, #8]
   27c10:	mov	r3, #16
   27c14:	str	r3, [sp]
   27c18:	ldr	r3, [pc, #812]	; 27f4c <_start@@Base+0x1392c>
   27c1c:	add	r3, pc, r3
   27c20:	mov	r2, #18
   27c24:	ldr	r1, [fp, #-12]
   27c28:	ldr	r0, [fp, #-8]
   27c2c:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   27c30:	mov	r2, #0
   27c34:	mov	r3, #0
   27c38:	strd	r2, [sp, #8]
   27c3c:	mov	r3, #16
   27c40:	str	r3, [sp]
   27c44:	ldr	r3, [pc, #772]	; 27f50 <_start@@Base+0x13930>
   27c48:	add	r3, pc, r3
   27c4c:	mov	r2, #19
   27c50:	ldr	r1, [fp, #-12]
   27c54:	ldr	r0, [fp, #-8]
   27c58:	bl	430ec <flatcc_json_printer_uint64_field@@Base>
   27c5c:	mov	r3, #0
   27c60:	str	r3, [sp, #4]
   27c64:	mov	r3, #17
   27c68:	str	r3, [sp]
   27c6c:	ldr	r3, [pc, #736]	; 27f54 <_start@@Base+0x13934>
   27c70:	add	r3, pc, r3
   27c74:	mov	r2, #20
   27c78:	ldr	r1, [fp, #-12]
   27c7c:	ldr	r0, [fp, #-8]
   27c80:	bl	43418 <flatcc_json_printer_int32_field@@Base>
   27c84:	mov	r3, #0
   27c88:	str	r3, [sp, #4]
   27c8c:	mov	r3, #17
   27c90:	str	r3, [sp]
   27c94:	ldr	r3, [pc, #700]	; 27f58 <_start@@Base+0x13938>
   27c98:	add	r3, pc, r3
   27c9c:	mov	r2, #21
   27ca0:	ldr	r1, [fp, #-12]
   27ca4:	ldr	r0, [fp, #-8]
   27ca8:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   27cac:	mov	r2, #0
   27cb0:	mov	r3, #0
   27cb4:	strd	r2, [sp, #8]
   27cb8:	mov	r3, #17
   27cbc:	str	r3, [sp]
   27cc0:	ldr	r3, [pc, #660]	; 27f5c <_start@@Base+0x1393c>
   27cc4:	add	r3, pc, r3
   27cc8:	mov	r2, #22
   27ccc:	ldr	r1, [fp, #-12]
   27cd0:	ldr	r0, [fp, #-8]
   27cd4:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   27cd8:	mov	r2, #0
   27cdc:	mov	r3, #0
   27ce0:	strd	r2, [sp, #8]
   27ce4:	mov	r3, #17
   27ce8:	str	r3, [sp]
   27cec:	ldr	r3, [pc, #620]	; 27f60 <_start@@Base+0x13940>
   27cf0:	add	r3, pc, r3
   27cf4:	mov	r2, #23
   27cf8:	ldr	r1, [fp, #-12]
   27cfc:	ldr	r0, [fp, #-8]
   27d00:	bl	430ec <flatcc_json_printer_uint64_field@@Base>
   27d04:	mov	r3, #16
   27d08:	str	r3, [sp]
   27d0c:	ldr	r3, [pc, #592]	; 27f64 <_start@@Base+0x13944>
   27d10:	add	r3, pc, r3
   27d14:	mov	r2, #24
   27d18:	ldr	r1, [fp, #-12]
   27d1c:	ldr	r0, [fp, #-8]
   27d20:	bl	46a88 <flatcc_json_printer_bool_vector_field@@Base>
   27d24:	mov	r3, #5
   27d28:	str	r3, [sp]
   27d2c:	vldr	s0, [pc, #424]	; 27edc <_start@@Base+0x138bc>
   27d30:	ldr	r3, [pc, #560]	; 27f68 <_start@@Base+0x13948>
   27d34:	add	r3, pc, r3
   27d38:	mov	r2, #25
   27d3c:	ldr	r1, [fp, #-12]
   27d40:	ldr	r0, [fp, #-8]
   27d44:	bl	4373c <flatcc_json_printer_float_field@@Base>
   27d48:	mov	r3, #6
   27d4c:	str	r3, [sp]
   27d50:	vldr	s0, [pc, #392]	; 27ee0 <_start@@Base+0x138c0>
   27d54:	ldr	r3, [pc, #528]	; 27f6c <_start@@Base+0x1394c>
   27d58:	add	r3, pc, r3
   27d5c:	mov	r2, #26
   27d60:	ldr	r1, [fp, #-12]
   27d64:	ldr	r0, [fp, #-8]
   27d68:	bl	4373c <flatcc_json_printer_float_field@@Base>
   27d6c:	mov	r3, #6
   27d70:	str	r3, [sp]
   27d74:	vldr	s0, [pc, #360]	; 27ee4 <_start@@Base+0x138c4>
   27d78:	ldr	r3, [pc, #496]	; 27f70 <_start@@Base+0x13950>
   27d7c:	add	r3, pc, r3
   27d80:	mov	r2, #27
   27d84:	ldr	r1, [fp, #-12]
   27d88:	ldr	r0, [fp, #-8]
   27d8c:	bl	4373c <flatcc_json_printer_float_field@@Base>
   27d90:	mov	r3, #18
   27d94:	str	r3, [sp]
   27d98:	ldr	r3, [pc, #468]	; 27f74 <_start@@Base+0x13954>
   27d9c:	add	r3, pc, r3
   27da0:	mov	r2, #28
   27da4:	ldr	r1, [fp, #-12]
   27da8:	ldr	r0, [fp, #-8]
   27dac:	bl	48fa8 <flatcc_json_printer_string_vector_field@@Base>
   27db0:	ldr	r3, [pc, #448]	; 27f78 <_start@@Base+0x13958>
   27db4:	add	r3, pc, r3
   27db8:	str	r3, [sp, #8]
   27dbc:	mov	r3, #8
   27dc0:	str	r3, [sp, #4]
   27dc4:	mov	r3, #23
   27dc8:	str	r3, [sp]
   27dcc:	ldr	r3, [pc, #424]	; 27f7c <_start@@Base+0x1395c>
   27dd0:	add	r3, pc, r3
   27dd4:	mov	r2, #29
   27dd8:	ldr	r1, [fp, #-12]
   27ddc:	ldr	r0, [fp, #-8]
   27de0:	bl	48c3c <flatcc_json_printer_struct_vector_field@@Base>
   27de4:	mov	r3, #4
   27de8:	str	r3, [sp]
   27dec:	ldr	r3, [pc, #396]	; 27f80 <_start@@Base+0x13960>
   27df0:	add	r3, pc, r3
   27df4:	mov	r2, #30
   27df8:	ldr	r1, [fp, #-12]
   27dfc:	ldr	r0, [fp, #-8]
   27e00:	bl	455a8 <flatcc_json_printer_uint8_vector_field@@Base>
   27e04:	ldr	r3, [pc, #376]	; 27f84 <_start@@Base+0x13964>
   27e08:	add	r3, pc, r3
   27e0c:	str	r3, [sp, #8]
   27e10:	mov	r3, #4
   27e14:	str	r3, [sp, #4]
   27e18:	mov	r3, #5
   27e1c:	str	r3, [sp]
   27e20:	ldr	r3, [pc, #352]	; 27f88 <_start@@Base+0x13968>
   27e24:	add	r3, pc, r3
   27e28:	mov	r2, #31
   27e2c:	ldr	r1, [fp, #-12]
   27e30:	ldr	r0, [fp, #-8]
   27e34:	bl	48c3c <flatcc_json_printer_struct_vector_field@@Base>
   27e38:	mov	r3, #15
   27e3c:	str	r3, [sp]
   27e40:	ldr	r3, [pc, #324]	; 27f8c <_start@@Base+0x1396c>
   27e44:	add	r3, pc, r3
   27e48:	mov	r2, #32
   27e4c:	ldr	r1, [fp, #-12]
   27e50:	ldr	r0, [fp, #-8]
   27e54:	bl	467fc <flatcc_json_printer_int64_vector_field@@Base>
   27e58:	mov	r3, #17
   27e5c:	str	r3, [sp]
   27e60:	ldr	r3, [pc, #296]	; 27f90 <_start@@Base+0x13970>
   27e64:	add	r3, pc, r3
   27e68:	mov	r2, #33	; 0x21
   27e6c:	ldr	r1, [fp, #-12]
   27e70:	ldr	r0, [fp, #-8]
   27e74:	bl	46fd0 <flatcc_json_printer_double_vector_field@@Base>
   27e78:	ldr	r3, [pc, #276]	; 27f94 <_start@@Base+0x13974>
   27e7c:	add	r3, pc, r3
   27e80:	str	r3, [sp, #4]
   27e84:	mov	r3, #21
   27e88:	str	r3, [sp]
   27e8c:	ldr	r3, [pc, #260]	; 27f98 <_start@@Base+0x13978>
   27e90:	add	r3, pc, r3
   27e94:	mov	r2, #34	; 0x22
   27e98:	ldr	r1, [fp, #-12]
   27e9c:	ldr	r0, [fp, #-8]
   27ea0:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   27ea4:	ldr	r3, [pc, #240]	; 27f9c <_start@@Base+0x1397c>
   27ea8:	add	r3, pc, r3
   27eac:	str	r3, [sp, #4]
   27eb0:	mov	r3, #10
   27eb4:	str	r3, [sp]
   27eb8:	ldr	r3, [pc, #224]	; 27fa0 <_start@@Base+0x13980>
   27ebc:	add	r3, pc, r3
   27ec0:	mov	r2, #35	; 0x23
   27ec4:	ldr	r1, [fp, #-12]
   27ec8:	ldr	r0, [fp, #-8]
   27ecc:	bl	497f0 <flatcc_json_printer_table_field@@Base>
   27ed0:	nop			; (mov r0, r0)
   27ed4:	sub	sp, fp, #4
   27ed8:	pop	{fp, pc}
   27edc:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   27ee0:	submi	r0, r0, r0
   27ee4:	andeq	r0, r0, r0
   27ee8:			; <UNDEFINED> instruction: 0xfffff504
   27eec:	andeq	r4, r2, r0, asr #5
   27ef0:	muleq	r2, ip, r2
   27ef4:	andeq	r4, r2, ip, ror r2
   27ef8:	andeq	r4, r2, r0, ror #4
   27efc:	andeq	r4, r2, r8, asr #4
   27f00:			; <UNDEFINED> instruction: 0xffffed2c
   27f04:	muleq	r2, r4, r0
   27f08:			; <UNDEFINED> instruction: 0xfffff038
   27f0c:			; <UNDEFINED> instruction: 0xffffef44
   27f10:	andeq	r4, r2, r8, ror #3
   27f14:			; <UNDEFINED> instruction: 0xfffff340
   27f18:			; <UNDEFINED> instruction: 0x000241bc
   27f1c:	andeq	r4, r2, r4, lsr #3
   27f20:			; <UNDEFINED> instruction: 0xfffffe64
   27f24:	andeq	r4, r2, ip, lsl #3
   27f28:			; <UNDEFINED> instruction: 0xfffffe38
   27f2c:	andeq	r4, r2, r4, ror r1
   27f30:			; <UNDEFINED> instruction: 0xfffffe0c
   27f34:	andeq	r4, r2, r8, asr #2
   27f38:			; <UNDEFINED> instruction: 0xfffff874
   27f3c:	andeq	r4, r2, r4, lsr r1
   27f40:	andeq	r4, r2, r8, lsl r1
   27f44:	strdeq	r4, [r2], -ip
   27f48:	andeq	r4, r2, r8, ror #1
   27f4c:	ldrdeq	r4, [r2], -r0
   27f50:	strheq	r4, [r2], -r8
   27f54:	andeq	r4, r2, r4, lsr #1
   27f58:	muleq	r2, r0, r0
   27f5c:	andeq	r4, r2, r8, ror r0
   27f60:	andeq	r4, r2, r0, rrx
   27f64:	andeq	r4, r2, r4, asr r0
   27f68:	andeq	r4, r2, r4, asr #32
   27f6c:	andeq	r4, r2, r8, lsr #32
   27f70:	andeq	r4, r2, ip
   27f74:	strdeq	r3, [r2], -r4
   27f78:			; <UNDEFINED> instruction: 0xfffff1f4
   27f7c:	ldrdeq	r3, [r2], -r4
   27f80:	andeq	r3, r2, ip, asr #31
   27f84:			; <UNDEFINED> instruction: 0xffffefbc
   27f88:	andeq	r3, r2, r0, lsr #31
   27f8c:	andeq	r3, r2, r8, lsl #31
   27f90:	andeq	r3, r2, r8, ror pc
   27f94:			; <UNDEFINED> instruction: 0xfffff23c
   27f98:	andeq	r3, r2, r0, ror #30
   27f9c:			; <UNDEFINED> instruction: 0xfffff9f0
   27fa0:	andeq	r3, r2, ip, asr #30
   27fa4:	push	{fp, lr}
   27fa8:	add	fp, sp, #4
   27fac:	sub	sp, sp, #24
   27fb0:	str	r0, [fp, #-8]
   27fb4:	str	r1, [fp, #-12]
   27fb8:	str	r2, [fp, #-16]
   27fbc:	str	r3, [fp, #-20]	; 0xffffffec
   27fc0:	ldr	r3, [pc, #40]	; 27ff0 <_start@@Base+0x139d0>
   27fc4:	add	r3, pc, r3
   27fc8:	str	r3, [sp]
   27fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   27fd0:	ldr	r2, [fp, #-16]
   27fd4:	ldr	r1, [fp, #-12]
   27fd8:	ldr	r0, [fp, #-8]
   27fdc:	bl	4a214 <flatcc_json_printer_table_as_root@@Base>
   27fe0:	mov	r3, r0
   27fe4:	mov	r0, r3
   27fe8:	sub	sp, fp, #4
   27fec:	pop	{fp, pc}
   27ff0:			; <UNDEFINED> instruction: 0xfffff978
   27ff4:	push	{fp, lr}
   27ff8:	add	fp, sp, #4
   27ffc:	sub	sp, sp, #24
   28000:	str	r0, [fp, #-8]
   28004:	str	r1, [fp, #-12]
   28008:	mov	r3, #0
   2800c:	str	r3, [sp, #4]
   28010:	mov	r3, #2
   28014:	str	r3, [sp]
   28018:	ldr	r3, [pc, #468]	; 281f4 <_start@@Base+0x13bd4>
   2801c:	add	r3, pc, r3
   28020:	mov	r2, #0
   28024:	ldr	r1, [fp, #-12]
   28028:	ldr	r0, [fp, #-8]
   2802c:	bl	431f8 <flatcc_json_printer_int8_field@@Base>
   28030:	mov	r3, #0
   28034:	str	r3, [sp, #4]
   28038:	mov	r3, #2
   2803c:	str	r3, [sp]
   28040:	ldr	r3, [pc, #432]	; 281f8 <_start@@Base+0x13bd8>
   28044:	add	r3, pc, r3
   28048:	mov	r2, #1
   2804c:	ldr	r1, [fp, #-12]
   28050:	ldr	r0, [fp, #-8]
   28054:	bl	42dc4 <flatcc_json_printer_uint8_field@@Base>
   28058:	mov	r3, #0
   2805c:	str	r3, [sp, #4]
   28060:	mov	r3, #3
   28064:	str	r3, [sp]
   28068:	ldr	r3, [pc, #396]	; 281fc <_start@@Base+0x13bdc>
   2806c:	add	r3, pc, r3
   28070:	mov	r2, #2
   28074:	ldr	r1, [fp, #-12]
   28078:	ldr	r0, [fp, #-8]
   2807c:	bl	43308 <flatcc_json_printer_int16_field@@Base>
   28080:	mov	r3, #0
   28084:	str	r3, [sp, #4]
   28088:	mov	r3, #3
   2808c:	str	r3, [sp]
   28090:	ldr	r3, [pc, #360]	; 28200 <_start@@Base+0x13be0>
   28094:	add	r3, pc, r3
   28098:	mov	r2, #3
   2809c:	ldr	r1, [fp, #-12]
   280a0:	ldr	r0, [fp, #-8]
   280a4:	bl	42ed4 <flatcc_json_printer_uint16_field@@Base>
   280a8:	mov	r3, #0
   280ac:	str	r3, [sp, #4]
   280b0:	mov	r3, #3
   280b4:	str	r3, [sp]
   280b8:	ldr	r3, [pc, #324]	; 28204 <_start@@Base+0x13be4>
   280bc:	add	r3, pc, r3
   280c0:	mov	r2, #4
   280c4:	ldr	r1, [fp, #-12]
   280c8:	ldr	r0, [fp, #-8]
   280cc:	bl	43418 <flatcc_json_printer_int32_field@@Base>
   280d0:	mov	r3, #0
   280d4:	str	r3, [sp, #4]
   280d8:	mov	r3, #3
   280dc:	str	r3, [sp]
   280e0:	ldr	r3, [pc, #288]	; 28208 <_start@@Base+0x13be8>
   280e4:	add	r3, pc, r3
   280e8:	mov	r2, #5
   280ec:	ldr	r1, [fp, #-12]
   280f0:	ldr	r0, [fp, #-8]
   280f4:	bl	42fe4 <flatcc_json_printer_uint32_field@@Base>
   280f8:	mov	r2, #0
   280fc:	mov	r3, #0
   28100:	strd	r2, [sp, #8]
   28104:	mov	r3, #3
   28108:	str	r3, [sp]
   2810c:	ldr	r3, [pc, #248]	; 2820c <_start@@Base+0x13bec>
   28110:	add	r3, pc, r3
   28114:	mov	r2, #6
   28118:	ldr	r1, [fp, #-12]
   2811c:	ldr	r0, [fp, #-8]
   28120:	bl	43520 <flatcc_json_printer_int64_field@@Base>
   28124:	mov	r2, #0
   28128:	mov	r3, #0
   2812c:	strd	r2, [sp, #8]
   28130:	mov	r3, #3
   28134:	str	r3, [sp]
   28138:	ldr	r3, [pc, #208]	; 28210 <_start@@Base+0x13bf0>
   2813c:	add	r3, pc, r3
   28140:	mov	r2, #7
   28144:	ldr	r1, [fp, #-12]
   28148:	ldr	r0, [fp, #-8]
   2814c:	bl	430ec <flatcc_json_printer_uint64_field@@Base>
   28150:	mov	r3, #3
   28154:	str	r3, [sp]
   28158:	vldr	s0, [pc, #144]	; 281f0 <_start@@Base+0x13bd0>
   2815c:	ldr	r3, [pc, #176]	; 28214 <_start@@Base+0x13bf4>
   28160:	add	r3, pc, r3
   28164:	mov	r2, #8
   28168:	ldr	r1, [fp, #-12]
   2816c:	ldr	r0, [fp, #-8]
   28170:	bl	4373c <flatcc_json_printer_float_field@@Base>
   28174:	mov	r3, #3
   28178:	str	r3, [sp]
   2817c:	vldr	d0, [pc, #100]	; 281e8 <_start@@Base+0x13bc8>
   28180:	ldr	r3, [pc, #144]	; 28218 <_start@@Base+0x13bf8>
   28184:	add	r3, pc, r3
   28188:	mov	r2, #9
   2818c:	ldr	r1, [fp, #-12]
   28190:	ldr	r0, [fp, #-8]
   28194:	bl	43854 <flatcc_json_printer_double_field@@Base>
   28198:	mov	r3, #2
   2819c:	str	r3, [sp]
   281a0:	ldr	r3, [pc, #116]	; 2821c <_start@@Base+0x13bfc>
   281a4:	add	r3, pc, r3
   281a8:	mov	r2, #10
   281ac:	ldr	r1, [fp, #-12]
   281b0:	ldr	r0, [fp, #-8]
   281b4:	bl	46018 <flatcc_json_printer_int8_vector_field@@Base>
   281b8:	mov	r3, #4
   281bc:	str	r3, [sp]
   281c0:	ldr	r3, [pc, #88]	; 28220 <_start@@Base+0x13c00>
   281c4:	add	r3, pc, r3
   281c8:	mov	r2, #11
   281cc:	ldr	r1, [fp, #-12]
   281d0:	ldr	r0, [fp, #-8]
   281d4:	bl	46fd0 <flatcc_json_printer_double_vector_field@@Base>
   281d8:	nop			; (mov r0, r0)
   281dc:	sub	sp, fp, #4
   281e0:	pop	{fp, pc}
   281e4:	nop			; (mov r0, r0)
	...
   281f4:	strdeq	r3, [r2], -r8
   281f8:	ldrdeq	r3, [r2], -r4
   281fc:			; <UNDEFINED> instruction: 0x00023db0
   28200:	andeq	r3, r2, ip, lsl #27
   28204:	andeq	r3, r2, r8, ror #26
   28208:	andeq	r3, r2, r4, asr #26
   2820c:	andeq	r3, r2, ip, lsl sp
   28210:	strdeq	r3, [r2], -r4
   28214:	ldrdeq	r3, [r2], -r4
   28218:			; <UNDEFINED> instruction: 0x00023cb4
   2821c:	muleq	r2, r8, ip
   28220:	andeq	r3, r2, ip, ror ip
   28224:	push	{fp, lr}
   28228:	add	fp, sp, #4
   2822c:	sub	sp, sp, #16
   28230:	str	r0, [fp, #-8]
   28234:	str	r1, [fp, #-12]
   28238:	mov	r3, #0
   2823c:	str	r3, [sp, #4]
   28240:	mov	r3, #19
   28244:	str	r3, [sp]
   28248:	ldr	r3, [pc, #28]	; 2826c <_start@@Base+0x13c4c>
   2824c:	add	r3, pc, r3
   28250:	mov	r2, #0
   28254:	ldr	r1, [fp, #-12]
   28258:	ldr	r0, [fp, #-8]
   2825c:	bl	43418 <flatcc_json_printer_int32_field@@Base>
   28260:	nop			; (mov r0, r0)
   28264:	sub	sp, fp, #4
   28268:	pop	{fp, pc}
   2826c:	strdeq	r3, [r2], -ip
   28270:	push	{fp, lr}
   28274:	add	fp, sp, #4
   28278:	sub	sp, sp, #24
   2827c:	str	r0, [fp, #-8]
   28280:	str	r1, [fp, #-12]
   28284:	ldr	r3, [pc, #284]	; 283a8 <_start@@Base+0x13d88>
   28288:	add	r3, pc, r3
   2828c:	str	r3, [sp, #8]
   28290:	ldr	r3, [pc, #276]	; 283ac <_start@@Base+0x13d8c>
   28294:	add	r3, pc, r3
   28298:	str	r3, [sp, #4]
   2829c:	mov	r3, #14
   282a0:	str	r3, [sp]
   282a4:	ldr	r3, [pc, #260]	; 283b0 <_start@@Base+0x13d90>
   282a8:	add	r3, pc, r3
   282ac:	mov	r2, #1
   282b0:	ldr	r1, [fp, #-12]
   282b4:	ldr	r0, [fp, #-8]
   282b8:	bl	498a0 <flatcc_json_printer_union_field@@Base>
   282bc:	ldr	r3, [pc, #240]	; 283b4 <_start@@Base+0x13d94>
   282c0:	add	r3, pc, r3
   282c4:	str	r3, [sp, #8]
   282c8:	ldr	r3, [pc, #232]	; 283b8 <_start@@Base+0x13d98>
   282cc:	add	r3, pc, r3
   282d0:	str	r3, [sp, #4]
   282d4:	mov	r3, #10
   282d8:	str	r3, [sp]
   282dc:	ldr	r3, [pc, #216]	; 283bc <_start@@Base+0x13d9c>
   282e0:	add	r3, pc, r3
   282e4:	mov	r2, #3
   282e8:	ldr	r1, [fp, #-12]
   282ec:	ldr	r0, [fp, #-8]
   282f0:	bl	498a0 <flatcc_json_printer_union_field@@Base>
   282f4:	ldr	r3, [pc, #196]	; 283c0 <_start@@Base+0x13da0>
   282f8:	add	r3, pc, r3
   282fc:	str	r3, [sp, #8]
   28300:	ldr	r3, [pc, #188]	; 283c4 <_start@@Base+0x13da4>
   28304:	add	r3, pc, r3
   28308:	str	r3, [sp, #4]
   2830c:	mov	r3, #9
   28310:	str	r3, [sp]
   28314:	ldr	r3, [pc, #172]	; 283c8 <_start@@Base+0x13da8>
   28318:	add	r3, pc, r3
   2831c:	mov	r2, #5
   28320:	ldr	r1, [fp, #-12]
   28324:	ldr	r0, [fp, #-8]
   28328:	bl	498a0 <flatcc_json_printer_union_field@@Base>
   2832c:	ldr	r3, [pc, #152]	; 283cc <_start@@Base+0x13dac>
   28330:	add	r3, pc, r3
   28334:	str	r3, [sp, #8]
   28338:	ldr	r3, [pc, #144]	; 283d0 <_start@@Base+0x13db0>
   2833c:	add	r3, pc, r3
   28340:	str	r3, [sp, #4]
   28344:	mov	r3, #5
   28348:	str	r3, [sp]
   2834c:	ldr	r3, [pc, #128]	; 283d4 <_start@@Base+0x13db4>
   28350:	add	r3, pc, r3
   28354:	mov	r2, #7
   28358:	ldr	r1, [fp, #-12]
   2835c:	ldr	r0, [fp, #-8]
   28360:	bl	498a0 <flatcc_json_printer_union_field@@Base>
   28364:	ldr	r3, [pc, #108]	; 283d8 <_start@@Base+0x13db8>
   28368:	add	r3, pc, r3
   2836c:	str	r3, [sp, #8]
   28370:	ldr	r3, [pc, #100]	; 283dc <_start@@Base+0x13dbc>
   28374:	add	r3, pc, r3
   28378:	str	r3, [sp, #4]
   2837c:	mov	r3, #10
   28380:	str	r3, [sp]
   28384:	ldr	r3, [pc, #84]	; 283e0 <_start@@Base+0x13dc0>
   28388:	add	r3, pc, r3
   2838c:	mov	r2, #9
   28390:	ldr	r1, [fp, #-12]
   28394:	ldr	r0, [fp, #-8]
   28398:	bl	493d8 <flatcc_json_printer_union_vector_field@@Base>
   2839c:	nop			; (mov r0, r0)
   283a0:	sub	sp, fp, #4
   283a4:	pop	{fp, pc}
   283a8:			; <UNDEFINED> instruction: 0xffffea10
   283ac:			; <UNDEFINED> instruction: 0xffffe8bc
   283b0:			; <UNDEFINED> instruction: 0x00023bb4
   283b4:			; <UNDEFINED> instruction: 0xffffe9d8
   283b8:			; <UNDEFINED> instruction: 0xffffe884
   283bc:	andeq	r3, r2, ip, lsl #23
   283c0:			; <UNDEFINED> instruction: 0xffffe9a0
   283c4:			; <UNDEFINED> instruction: 0xffffe84c
   283c8:	andeq	r3, r2, r0, ror #22
   283cc:			; <UNDEFINED> instruction: 0xffffe968
   283d0:			; <UNDEFINED> instruction: 0xffffe814
   283d4:	andeq	r3, r2, r4, lsr fp
   283d8:			; <UNDEFINED> instruction: 0xffffe930
   283dc:			; <UNDEFINED> instruction: 0xffffe7dc
   283e0:	andeq	r3, r2, r4, lsl #22
   283e4:	push	{fp, lr}
   283e8:	add	fp, sp, #4
   283ec:	sub	sp, sp, #64	; 0x40
   283f0:	str	r0, [fp, #-56]	; 0xffffffc8
   283f4:	str	r1, [fp, #-60]	; 0xffffffc4
   283f8:	str	r2, [fp, #-64]	; 0xffffffc0
   283fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   28400:	cmp	r3, #0
   28404:	bne	2841c <_start@@Base+0x13dfc>
   28408:	sub	r3, fp, #52	; 0x34
   2840c:	str	r3, [fp, #-56]	; 0xffffffc8
   28410:	mov	r1, #0
   28414:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28418:	bl	4a6fc <flatcc_json_printer_init@@Base>
   2841c:	ldr	r3, [pc, #32]	; 28444 <_start@@Base+0x13e24>
   28420:	add	r3, pc, r3
   28424:	ldr	r2, [fp, #-64]	; 0xffffffc0
   28428:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2842c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   28430:	bl	27fa4 <_start@@Base+0x13984>
   28434:	mov	r3, r0
   28438:	mov	r0, r3
   2843c:	sub	sp, fp, #4
   28440:	pop	{fp, pc}
   28444:	andeq	r3, r2, r0, asr r5
   28448:	push	{fp, lr}
   2844c:	add	fp, sp, #4
   28450:	sub	sp, sp, #8
   28454:	str	r0, [fp, #-8]
   28458:	ldr	r3, [fp, #-8]
   2845c:	ldrb	r3, [r3, #12]
   28460:	cmp	r3, #1
   28464:	bne	28484 <_start@@Base+0x13e64>
   28468:	ldr	r3, [pc, #36]	; 28494 <_start@@Base+0x13e74>
   2846c:	add	r3, pc, r3
   28470:	mov	r1, r3
   28474:	ldr	r0, [fp, #-8]
   28478:	bl	34004 <flatcc_verify_union_table@@Base>
   2847c:	mov	r3, r0
   28480:	b	28488 <_start@@Base+0x13e68>
   28484:	mov	r3, #0
   28488:	mov	r0, r3
   2848c:	sub	sp, fp, #4
   28490:	pop	{fp, pc}
   28494:	ldrdeq	r0, [r0], -ip
   28498:	push	{fp, lr}
   2849c:	add	fp, sp, #4
   284a0:	sub	sp, sp, #8
   284a4:	str	r0, [fp, #-8]
   284a8:	ldr	r3, [fp, #-8]
   284ac:	ldrb	r3, [r3, #12]
   284b0:	sub	r3, r3, #1
   284b4:	cmp	r3, #3
   284b8:	addls	pc, pc, r3, lsl #2
   284bc:	b	28540 <_start@@Base+0x13f20>
   284c0:	b	284d0 <_start@@Base+0x13eb0>
   284c4:	b	284ec <_start@@Base+0x13ecc>
   284c8:	b	28508 <_start@@Base+0x13ee8>
   284cc:	b	28524 <_start@@Base+0x13f04>
   284d0:	ldr	r3, [pc, #120]	; 28550 <_start@@Base+0x13f30>
   284d4:	add	r3, pc, r3
   284d8:	mov	r1, r3
   284dc:	ldr	r0, [fp, #-8]
   284e0:	bl	34004 <flatcc_verify_union_table@@Base>
   284e4:	mov	r3, r0
   284e8:	b	28544 <_start@@Base+0x13f24>
   284ec:	ldr	r3, [pc, #96]	; 28554 <_start@@Base+0x13f34>
   284f0:	add	r3, pc, r3
   284f4:	mov	r1, r3
   284f8:	ldr	r0, [fp, #-8]
   284fc:	bl	34004 <flatcc_verify_union_table@@Base>
   28500:	mov	r3, r0
   28504:	b	28544 <_start@@Base+0x13f24>
   28508:	ldr	r3, [pc, #72]	; 28558 <_start@@Base+0x13f38>
   2850c:	add	r3, pc, r3
   28510:	mov	r1, r3
   28514:	ldr	r0, [fp, #-8]
   28518:	bl	34004 <flatcc_verify_union_table@@Base>
   2851c:	mov	r3, r0
   28520:	b	28544 <_start@@Base+0x13f24>
   28524:	ldr	r3, [pc, #48]	; 2855c <_start@@Base+0x13f3c>
   28528:	add	r3, pc, r3
   2852c:	mov	r1, r3
   28530:	ldr	r0, [fp, #-8]
   28534:	bl	34004 <flatcc_verify_union_table@@Base>
   28538:	mov	r3, r0
   2853c:	b	28544 <_start@@Base+0x13f24>
   28540:	mov	r3, #0
   28544:	mov	r0, r3
   28548:	sub	sp, fp, #4
   2854c:	pop	{fp, pc}
   28550:	andeq	r0, r0, r8, lsr #19
   28554:	andeq	r0, r0, r0, lsl r2
   28558:	andeq	r0, r0, r0, ror #2
   2855c:	andeq	r0, r0, r0, ror r4
   28560:	push	{fp, lr}
   28564:	add	fp, sp, #4
   28568:	sub	sp, sp, #8
   2856c:	str	r0, [fp, #-8]
   28570:	ldr	r3, [fp, #-8]
   28574:	ldrb	r3, [r3, #12]
   28578:	cmp	r3, #9
   2857c:	beq	285ec <_start@@Base+0x13fcc>
   28580:	cmp	r3, #9
   28584:	bgt	2859c <_start@@Base+0x13f7c>
   28588:	cmp	r3, #2
   2858c:	beq	285b8 <_start@@Base+0x13f98>
   28590:	cmp	r3, #8
   28594:	beq	285d4 <_start@@Base+0x13fb4>
   28598:	b	2863c <_start@@Base+0x1401c>
   2859c:	cmp	r3, #11
   285a0:	beq	2861c <_start@@Base+0x13ffc>
   285a4:	cmp	r3, #11
   285a8:	blt	28604 <_start@@Base+0x13fe4>
   285ac:	cmp	r3, #255	; 0xff
   285b0:	beq	2862c <_start@@Base+0x1400c>
   285b4:	b	2863c <_start@@Base+0x1401c>
   285b8:	ldr	r3, [pc, #140]	; 2864c <_start@@Base+0x1402c>
   285bc:	add	r3, pc, r3
   285c0:	mov	r1, r3
   285c4:	ldr	r0, [fp, #-8]
   285c8:	bl	34004 <flatcc_verify_union_table@@Base>
   285cc:	mov	r3, r0
   285d0:	b	28640 <_start@@Base+0x14020>
   285d4:	mov	r2, #2
   285d8:	mov	r1, #2
   285dc:	ldr	r0, [fp, #-8]
   285e0:	bl	34068 <flatcc_verify_union_struct@@Base>
   285e4:	mov	r3, r0
   285e8:	b	28640 <_start@@Base+0x14020>
   285ec:	mov	r2, #4
   285f0:	mov	r1, #4
   285f4:	ldr	r0, [fp, #-8]
   285f8:	bl	34068 <flatcc_verify_union_struct@@Base>
   285fc:	mov	r3, r0
   28600:	b	28640 <_start@@Base+0x14020>
   28604:	mov	r2, #4
   28608:	mov	r1, #4
   2860c:	ldr	r0, [fp, #-8]
   28610:	bl	34068 <flatcc_verify_union_struct@@Base>
   28614:	mov	r3, r0
   28618:	b	28640 <_start@@Base+0x14020>
   2861c:	ldr	r0, [fp, #-8]
   28620:	bl	340bc <flatcc_verify_union_string@@Base>
   28624:	mov	r3, r0
   28628:	b	28640 <_start@@Base+0x14020>
   2862c:	ldr	r0, [fp, #-8]
   28630:	bl	340bc <flatcc_verify_union_string@@Base>
   28634:	mov	r3, r0
   28638:	b	28640 <_start@@Base+0x14020>
   2863c:	mov	r3, #0
   28640:	mov	r0, r3
   28644:	sub	sp, fp, #4
   28648:	pop	{fp, pc}
   2864c:	andeq	r1, r0, r4, asr #3
   28650:	push	{fp}		; (str fp, [sp, #-4]!)
   28654:	add	fp, sp, #0
   28658:	sub	sp, sp, #12
   2865c:	str	r0, [fp, #-8]
   28660:	mov	r3, #0
   28664:	mov	r0, r3
   28668:	add	sp, fp, #0
   2866c:	pop	{fp}		; (ldr fp, [sp], #4)
   28670:	bx	lr
   28674:	push	{fp}		; (str fp, [sp, #-4]!)
   28678:	add	fp, sp, #0
   2867c:	sub	sp, sp, #12
   28680:	str	r0, [fp, #-8]
   28684:	mov	r3, #0
   28688:	mov	r0, r3
   2868c:	add	sp, fp, #0
   28690:	pop	{fp}		; (ldr fp, [sp], #4)
   28694:	bx	lr
   28698:	push	{fp}		; (str fp, [sp, #-4]!)
   2869c:	add	fp, sp, #0
   286a0:	sub	sp, sp, #12
   286a4:	str	r0, [fp, #-8]
   286a8:	mov	r3, #0
   286ac:	mov	r0, r3
   286b0:	add	sp, fp, #0
   286b4:	pop	{fp}		; (ldr fp, [sp], #4)
   286b8:	bx	lr
   286bc:	push	{fp, lr}
   286c0:	add	fp, sp, #4
   286c4:	sub	sp, sp, #16
   286c8:	str	r0, [fp, #-16]
   286cc:	mov	r3, #1
   286d0:	mov	r2, #0
   286d4:	mov	r1, #0
   286d8:	ldr	r0, [fp, #-16]
   286dc:	bl	33c0c <flatcc_verify_field@@Base>
   286e0:	str	r0, [fp, #-8]
   286e4:	ldr	r3, [fp, #-8]
   286e8:	cmp	r3, #0
   286ec:	beq	286f8 <_start@@Base+0x140d8>
   286f0:	ldr	r3, [fp, #-8]
   286f4:	b	286fc <_start@@Base+0x140dc>
   286f8:	mov	r3, #0
   286fc:	mov	r0, r3
   28700:	sub	sp, fp, #4
   28704:	pop	{fp, pc}
   28708:	push	{fp, lr}
   2870c:	add	fp, sp, #4
   28710:	sub	sp, sp, #16
   28714:	str	r0, [fp, #-16]
   28718:	mov	r3, #1
   2871c:	mov	r2, #1
   28720:	mov	r1, #0
   28724:	ldr	r0, [fp, #-16]
   28728:	bl	33c0c <flatcc_verify_field@@Base>
   2872c:	str	r0, [fp, #-8]
   28730:	ldr	r3, [fp, #-8]
   28734:	cmp	r3, #0
   28738:	beq	28744 <_start@@Base+0x14124>
   2873c:	ldr	r3, [fp, #-8]
   28740:	b	287cc <_start@@Base+0x141ac>
   28744:	mov	r3, #1
   28748:	mov	r2, #1
   2874c:	mov	r1, #1
   28750:	ldr	r0, [fp, #-16]
   28754:	bl	33c0c <flatcc_verify_field@@Base>
   28758:	str	r0, [fp, #-8]
   2875c:	ldr	r3, [fp, #-8]
   28760:	cmp	r3, #0
   28764:	beq	28770 <_start@@Base+0x14150>
   28768:	ldr	r3, [fp, #-8]
   2876c:	b	287cc <_start@@Base+0x141ac>
   28770:	mov	r3, #1
   28774:	mov	r2, #1
   28778:	mov	r1, #2
   2877c:	ldr	r0, [fp, #-16]
   28780:	bl	33c0c <flatcc_verify_field@@Base>
   28784:	str	r0, [fp, #-8]
   28788:	ldr	r3, [fp, #-8]
   2878c:	cmp	r3, #0
   28790:	beq	2879c <_start@@Base+0x1417c>
   28794:	ldr	r3, [fp, #-8]
   28798:	b	287cc <_start@@Base+0x141ac>
   2879c:	mov	r3, #1
   287a0:	mov	r2, #1
   287a4:	mov	r1, #3
   287a8:	ldr	r0, [fp, #-16]
   287ac:	bl	33c0c <flatcc_verify_field@@Base>
   287b0:	str	r0, [fp, #-8]
   287b4:	ldr	r3, [fp, #-8]
   287b8:	cmp	r3, #0
   287bc:	beq	287c8 <_start@@Base+0x141a8>
   287c0:	ldr	r3, [fp, #-8]
   287c4:	b	287cc <_start@@Base+0x141ac>
   287c8:	mov	r3, #0
   287cc:	mov	r0, r3
   287d0:	sub	sp, fp, #4
   287d4:	pop	{fp, pc}
   287d8:	push	{fp, lr}
   287dc:	add	fp, sp, #4
   287e0:	sub	sp, sp, #16
   287e4:	str	r0, [fp, #-16]
   287e8:	mov	r3, #1
   287ec:	mov	r2, #0
   287f0:	mov	r1, #0
   287f4:	ldr	r0, [fp, #-16]
   287f8:	bl	33c0c <flatcc_verify_field@@Base>
   287fc:	str	r0, [fp, #-8]
   28800:	ldr	r3, [fp, #-8]
   28804:	cmp	r3, #0
   28808:	beq	28814 <_start@@Base+0x141f4>
   2880c:	ldr	r3, [fp, #-8]
   28810:	b	288f4 <_start@@Base+0x142d4>
   28814:	mov	r3, #8
   28818:	mov	r2, #8
   2881c:	mov	r1, #1
   28820:	ldr	r0, [fp, #-16]
   28824:	bl	33c0c <flatcc_verify_field@@Base>
   28828:	str	r0, [fp, #-8]
   2882c:	ldr	r3, [fp, #-8]
   28830:	cmp	r3, #0
   28834:	beq	28840 <_start@@Base+0x14220>
   28838:	ldr	r3, [fp, #-8]
   2883c:	b	288f4 <_start@@Base+0x142d4>
   28840:	mov	r3, #8
   28844:	mov	r2, #8
   28848:	mov	r1, #2
   2884c:	ldr	r0, [fp, #-16]
   28850:	bl	33c0c <flatcc_verify_field@@Base>
   28854:	str	r0, [fp, #-8]
   28858:	ldr	r3, [fp, #-8]
   2885c:	cmp	r3, #0
   28860:	beq	2886c <_start@@Base+0x1424c>
   28864:	ldr	r3, [fp, #-8]
   28868:	b	288f4 <_start@@Base+0x142d4>
   2886c:	mov	r3, #4
   28870:	mov	r2, #4
   28874:	mov	r1, #3
   28878:	ldr	r0, [fp, #-16]
   2887c:	bl	33c0c <flatcc_verify_field@@Base>
   28880:	str	r0, [fp, #-8]
   28884:	ldr	r3, [fp, #-8]
   28888:	cmp	r3, #0
   2888c:	beq	28898 <_start@@Base+0x14278>
   28890:	ldr	r3, [fp, #-8]
   28894:	b	288f4 <_start@@Base+0x142d4>
   28898:	mov	r3, #8
   2889c:	mov	r2, #8
   288a0:	mov	r1, #4
   288a4:	ldr	r0, [fp, #-16]
   288a8:	bl	33c0c <flatcc_verify_field@@Base>
   288ac:	str	r0, [fp, #-8]
   288b0:	ldr	r3, [fp, #-8]
   288b4:	cmp	r3, #0
   288b8:	beq	288c4 <_start@@Base+0x142a4>
   288bc:	ldr	r3, [fp, #-8]
   288c0:	b	288f4 <_start@@Base+0x142d4>
   288c4:	mov	r3, #8
   288c8:	mov	r2, #8
   288cc:	mov	r1, #5
   288d0:	ldr	r0, [fp, #-16]
   288d4:	bl	33c0c <flatcc_verify_field@@Base>
   288d8:	str	r0, [fp, #-8]
   288dc:	ldr	r3, [fp, #-8]
   288e0:	cmp	r3, #0
   288e4:	beq	288f0 <_start@@Base+0x142d0>
   288e8:	ldr	r3, [fp, #-8]
   288ec:	b	288f4 <_start@@Base+0x142d4>
   288f0:	mov	r3, #0
   288f4:	mov	r0, r3
   288f8:	sub	sp, fp, #4
   288fc:	pop	{fp, pc}
   28900:	push	{fp, lr}
   28904:	add	fp, sp, #4
   28908:	sub	sp, sp, #16
   2890c:	str	r0, [fp, #-16]
   28910:	mov	r2, #0
   28914:	mov	r1, #0
   28918:	ldr	r0, [fp, #-16]
   2891c:	bl	33c84 <flatcc_verify_string_field@@Base>
   28920:	str	r0, [fp, #-8]
   28924:	ldr	r3, [fp, #-8]
   28928:	cmp	r3, #0
   2892c:	beq	28938 <_start@@Base+0x14318>
   28930:	ldr	r3, [fp, #-8]
   28934:	b	28994 <_start@@Base+0x14374>
   28938:	mov	r3, #8
   2893c:	mov	r2, #8
   28940:	mov	r1, #1
   28944:	ldr	r0, [fp, #-16]
   28948:	bl	33c0c <flatcc_verify_field@@Base>
   2894c:	str	r0, [fp, #-8]
   28950:	ldr	r3, [fp, #-8]
   28954:	cmp	r3, #0
   28958:	beq	28964 <_start@@Base+0x14344>
   2895c:	ldr	r3, [fp, #-8]
   28960:	b	28994 <_start@@Base+0x14374>
   28964:	mov	r3, #2
   28968:	mov	r2, #2
   2896c:	mov	r1, #2
   28970:	ldr	r0, [fp, #-16]
   28974:	bl	33c0c <flatcc_verify_field@@Base>
   28978:	str	r0, [fp, #-8]
   2897c:	ldr	r3, [fp, #-8]
   28980:	cmp	r3, #0
   28984:	beq	28990 <_start@@Base+0x14370>
   28988:	ldr	r3, [fp, #-8]
   2898c:	b	28994 <_start@@Base+0x14374>
   28990:	mov	r3, #0
   28994:	mov	r0, r3
   28998:	sub	sp, fp, #4
   2899c:	pop	{fp, pc}
   289a0:	push	{fp, lr}
   289a4:	add	fp, sp, #4
   289a8:	sub	sp, sp, #16
   289ac:	str	r0, [fp, #-16]
   289b0:	ldr	r3, [pc, #152]	; 28a50 <_start@@Base+0x14430>
   289b4:	add	r3, pc, r3
   289b8:	mov	r2, #0
   289bc:	mov	r1, #0
   289c0:	ldr	r0, [fp, #-16]
   289c4:	bl	33e8c <flatcc_verify_table_field@@Base>
   289c8:	str	r0, [fp, #-8]
   289cc:	ldr	r3, [fp, #-8]
   289d0:	cmp	r3, #0
   289d4:	beq	289e0 <_start@@Base+0x143c0>
   289d8:	ldr	r3, [fp, #-8]
   289dc:	b	28a44 <_start@@Base+0x14424>
   289e0:	ldr	r3, [pc, #108]	; 28a54 <_start@@Base+0x14434>
   289e4:	add	r3, pc, r3
   289e8:	mov	r2, #0
   289ec:	mov	r1, #1
   289f0:	ldr	r0, [fp, #-16]
   289f4:	bl	33e8c <flatcc_verify_table_field@@Base>
   289f8:	str	r0, [fp, #-8]
   289fc:	ldr	r3, [fp, #-8]
   28a00:	cmp	r3, #0
   28a04:	beq	28a10 <_start@@Base+0x143f0>
   28a08:	ldr	r3, [fp, #-8]
   28a0c:	b	28a44 <_start@@Base+0x14424>
   28a10:	ldr	r3, [pc, #64]	; 28a58 <_start@@Base+0x14438>
   28a14:	add	r3, pc, r3
   28a18:	mov	r2, #0
   28a1c:	mov	r1, #3
   28a20:	ldr	r0, [fp, #-16]
   28a24:	bl	34a28 <flatcc_verify_union_vector_field@@Base>
   28a28:	str	r0, [fp, #-8]
   28a2c:	ldr	r3, [fp, #-8]
   28a30:	cmp	r3, #0
   28a34:	beq	28a40 <_start@@Base+0x14420>
   28a38:	ldr	r3, [fp, #-8]
   28a3c:	b	28a44 <_start@@Base+0x14424>
   28a40:	mov	r3, #0
   28a44:	mov	r0, r3
   28a48:	sub	sp, fp, #4
   28a4c:	pop	{fp, pc}
   28a50:	andeq	r0, r0, r0, lsr #1
   28a54:	andeq	r0, r0, r8, ror #27
   28a58:			; <UNDEFINED> instruction: 0xfffffa7c
   28a5c:	push	{fp, lr}
   28a60:	add	fp, sp, #4
   28a64:	sub	sp, sp, #16
   28a68:	str	r0, [fp, #-16]
   28a6c:	ldr	r3, [pc, #152]	; 28b0c <_start@@Base+0x144ec>
   28a70:	add	r3, pc, r3
   28a74:	mov	r2, #0
   28a78:	mov	r1, #0
   28a7c:	ldr	r0, [fp, #-16]
   28a80:	bl	33e8c <flatcc_verify_table_field@@Base>
   28a84:	str	r0, [fp, #-8]
   28a88:	ldr	r3, [fp, #-8]
   28a8c:	cmp	r3, #0
   28a90:	beq	28a9c <_start@@Base+0x1447c>
   28a94:	ldr	r3, [fp, #-8]
   28a98:	b	28b00 <_start@@Base+0x144e0>
   28a9c:	ldr	r3, [pc, #108]	; 28b10 <_start@@Base+0x144f0>
   28aa0:	add	r3, pc, r3
   28aa4:	mov	r2, #0
   28aa8:	mov	r1, #1
   28aac:	ldr	r0, [fp, #-16]
   28ab0:	bl	33e8c <flatcc_verify_table_field@@Base>
   28ab4:	str	r0, [fp, #-8]
   28ab8:	ldr	r3, [fp, #-8]
   28abc:	cmp	r3, #0
   28ac0:	beq	28acc <_start@@Base+0x144ac>
   28ac4:	ldr	r3, [fp, #-8]
   28ac8:	b	28b00 <_start@@Base+0x144e0>
   28acc:	ldr	r3, [pc, #64]	; 28b14 <_start@@Base+0x144f4>
   28ad0:	add	r3, pc, r3
   28ad4:	mov	r2, #0
   28ad8:	mov	r1, #2
   28adc:	ldr	r0, [fp, #-16]
   28ae0:	bl	33e8c <flatcc_verify_table_field@@Base>
   28ae4:	str	r0, [fp, #-8]
   28ae8:	ldr	r3, [fp, #-8]
   28aec:	cmp	r3, #0
   28af0:	beq	28afc <_start@@Base+0x144dc>
   28af4:	ldr	r3, [fp, #-8]
   28af8:	b	28b00 <_start@@Base+0x144e0>
   28afc:	mov	r3, #0
   28b00:	mov	r0, r3
   28b04:	sub	sp, fp, #4
   28b08:	pop	{fp, pc}
   28b0c:	andeq	r0, r0, r0, lsr #1
   28b10:	andeq	r0, r0, r0, lsl r2
   28b14:	andeq	r0, r0, r8, asr r2
   28b18:	push	{fp, lr}
   28b1c:	add	fp, sp, #4
   28b20:	sub	sp, sp, #16
   28b24:	str	r0, [fp, #-16]
   28b28:	mov	r2, #0
   28b2c:	mov	r1, #0
   28b30:	ldr	r0, [fp, #-16]
   28b34:	bl	33c84 <flatcc_verify_string_field@@Base>
   28b38:	str	r0, [fp, #-8]
   28b3c:	ldr	r3, [fp, #-8]
   28b40:	cmp	r3, #0
   28b44:	beq	28b50 <_start@@Base+0x14530>
   28b48:	ldr	r3, [fp, #-8]
   28b4c:	b	28cac <_start@@Base+0x1468c>
   28b50:	mov	r3, #4
   28b54:	mov	r2, #4
   28b58:	mov	r1, #1
   28b5c:	ldr	r0, [fp, #-16]
   28b60:	bl	33c0c <flatcc_verify_field@@Base>
   28b64:	str	r0, [fp, #-8]
   28b68:	ldr	r3, [fp, #-8]
   28b6c:	cmp	r3, #0
   28b70:	beq	28b7c <_start@@Base+0x1455c>
   28b74:	ldr	r3, [fp, #-8]
   28b78:	b	28cac <_start@@Base+0x1468c>
   28b7c:	mov	r2, #0
   28b80:	mov	r1, #2
   28b84:	ldr	r0, [fp, #-16]
   28b88:	bl	33c84 <flatcc_verify_string_field@@Base>
   28b8c:	str	r0, [fp, #-8]
   28b90:	ldr	r3, [fp, #-8]
   28b94:	cmp	r3, #0
   28b98:	beq	28ba4 <_start@@Base+0x14584>
   28b9c:	ldr	r3, [fp, #-8]
   28ba0:	b	28cac <_start@@Base+0x1468c>
   28ba4:	mov	r3, #8
   28ba8:	mov	r2, #8
   28bac:	mov	r1, #3
   28bb0:	ldr	r0, [fp, #-16]
   28bb4:	bl	33c0c <flatcc_verify_field@@Base>
   28bb8:	str	r0, [fp, #-8]
   28bbc:	ldr	r3, [fp, #-8]
   28bc0:	cmp	r3, #0
   28bc4:	beq	28bd0 <_start@@Base+0x145b0>
   28bc8:	ldr	r3, [fp, #-8]
   28bcc:	b	28cac <_start@@Base+0x1468c>
   28bd0:	mov	r2, #0
   28bd4:	mov	r1, #4
   28bd8:	ldr	r0, [fp, #-16]
   28bdc:	bl	33c84 <flatcc_verify_string_field@@Base>
   28be0:	str	r0, [fp, #-8]
   28be4:	ldr	r3, [fp, #-8]
   28be8:	cmp	r3, #0
   28bec:	beq	28bf8 <_start@@Base+0x145d8>
   28bf0:	ldr	r3, [fp, #-8]
   28bf4:	b	28cac <_start@@Base+0x1468c>
   28bf8:	mov	r3, #8
   28bfc:	mov	r2, #8
   28c00:	mov	r1, #5
   28c04:	ldr	r0, [fp, #-16]
   28c08:	bl	33c0c <flatcc_verify_field@@Base>
   28c0c:	str	r0, [fp, #-8]
   28c10:	ldr	r3, [fp, #-8]
   28c14:	cmp	r3, #0
   28c18:	beq	28c24 <_start@@Base+0x14604>
   28c1c:	ldr	r3, [fp, #-8]
   28c20:	b	28cac <_start@@Base+0x1468c>
   28c24:	mov	r3, #4
   28c28:	mov	r2, #4
   28c2c:	mov	r1, #6
   28c30:	ldr	r0, [fp, #-16]
   28c34:	bl	33c0c <flatcc_verify_field@@Base>
   28c38:	str	r0, [fp, #-8]
   28c3c:	ldr	r3, [fp, #-8]
   28c40:	cmp	r3, #0
   28c44:	beq	28c50 <_start@@Base+0x14630>
   28c48:	ldr	r3, [fp, #-8]
   28c4c:	b	28cac <_start@@Base+0x1468c>
   28c50:	mov	r3, #8
   28c54:	mov	r2, #8
   28c58:	mov	r1, #7
   28c5c:	ldr	r0, [fp, #-16]
   28c60:	bl	33c0c <flatcc_verify_field@@Base>
   28c64:	str	r0, [fp, #-8]
   28c68:	ldr	r3, [fp, #-8]
   28c6c:	cmp	r3, #0
   28c70:	beq	28c7c <_start@@Base+0x1465c>
   28c74:	ldr	r3, [fp, #-8]
   28c78:	b	28cac <_start@@Base+0x1468c>
   28c7c:	mov	r3, #4
   28c80:	mov	r2, #4
   28c84:	mov	r1, #8
   28c88:	ldr	r0, [fp, #-16]
   28c8c:	bl	33c0c <flatcc_verify_field@@Base>
   28c90:	str	r0, [fp, #-8]
   28c94:	ldr	r3, [fp, #-8]
   28c98:	cmp	r3, #0
   28c9c:	beq	28ca8 <_start@@Base+0x14688>
   28ca0:	ldr	r3, [fp, #-8]
   28ca4:	b	28cac <_start@@Base+0x1468c>
   28ca8:	mov	r3, #0
   28cac:	mov	r0, r3
   28cb0:	sub	sp, fp, #4
   28cb4:	pop	{fp, pc}
   28cb8:	push	{fp, lr}
   28cbc:	add	fp, sp, #4
   28cc0:	sub	sp, sp, #16
   28cc4:	str	r0, [fp, #-16]
   28cc8:	mov	r3, #8
   28ccc:	mov	r2, #8
   28cd0:	mov	r1, #0
   28cd4:	ldr	r0, [fp, #-16]
   28cd8:	bl	33c0c <flatcc_verify_field@@Base>
   28cdc:	str	r0, [fp, #-8]
   28ce0:	ldr	r3, [fp, #-8]
   28ce4:	cmp	r3, #0
   28ce8:	beq	28cf4 <_start@@Base+0x146d4>
   28cec:	ldr	r3, [fp, #-8]
   28cf0:	b	28d24 <_start@@Base+0x14704>
   28cf4:	mov	r3, #4
   28cf8:	mov	r2, #4
   28cfc:	mov	r1, #1
   28d00:	ldr	r0, [fp, #-16]
   28d04:	bl	33c0c <flatcc_verify_field@@Base>
   28d08:	str	r0, [fp, #-8]
   28d0c:	ldr	r3, [fp, #-8]
   28d10:	cmp	r3, #0
   28d14:	beq	28d20 <_start@@Base+0x14700>
   28d18:	ldr	r3, [fp, #-8]
   28d1c:	b	28d24 <_start@@Base+0x14704>
   28d20:	mov	r3, #0
   28d24:	mov	r0, r3
   28d28:	sub	sp, fp, #4
   28d2c:	pop	{fp, pc}
   28d30:	push	{fp, lr}
   28d34:	add	fp, sp, #4
   28d38:	sub	sp, sp, #16
   28d3c:	str	r0, [fp, #-16]
   28d40:	mov	r3, #8
   28d44:	mov	r2, #8
   28d48:	mov	r1, #0
   28d4c:	ldr	r0, [fp, #-16]
   28d50:	bl	33c0c <flatcc_verify_field@@Base>
   28d54:	str	r0, [fp, #-8]
   28d58:	ldr	r3, [fp, #-8]
   28d5c:	cmp	r3, #0
   28d60:	beq	28d6c <_start@@Base+0x1474c>
   28d64:	ldr	r3, [fp, #-8]
   28d68:	b	28d9c <_start@@Base+0x1477c>
   28d6c:	mov	r3, #4
   28d70:	mov	r2, #4
   28d74:	mov	r1, #1
   28d78:	ldr	r0, [fp, #-16]
   28d7c:	bl	33c0c <flatcc_verify_field@@Base>
   28d80:	str	r0, [fp, #-8]
   28d84:	ldr	r3, [fp, #-8]
   28d88:	cmp	r3, #0
   28d8c:	beq	28d98 <_start@@Base+0x14778>
   28d90:	ldr	r3, [fp, #-8]
   28d94:	b	28d9c <_start@@Base+0x1477c>
   28d98:	mov	r3, #0
   28d9c:	mov	r0, r3
   28da0:	sub	sp, fp, #4
   28da4:	pop	{fp, pc}
   28da8:	push	{fp, lr}
   28dac:	add	fp, sp, #4
   28db0:	sub	sp, sp, #24
   28db4:	str	r0, [fp, #-16]
   28db8:	mvn	r3, #0
   28dbc:	str	r3, [sp, #4]
   28dc0:	mov	r3, #1
   28dc4:	str	r3, [sp]
   28dc8:	mov	r3, #1
   28dcc:	mov	r2, #0
   28dd0:	mov	r1, #0
   28dd4:	ldr	r0, [fp, #-16]
   28dd8:	bl	33d28 <flatcc_verify_vector_field@@Base>
   28ddc:	str	r0, [fp, #-8]
   28de0:	ldr	r3, [fp, #-8]
   28de4:	cmp	r3, #0
   28de8:	beq	28df4 <_start@@Base+0x147d4>
   28dec:	ldr	r3, [fp, #-8]
   28df0:	b	28e74 <_start@@Base+0x14854>
   28df4:	mvn	r3, #0
   28df8:	str	r3, [sp, #4]
   28dfc:	mov	r3, #1
   28e00:	str	r3, [sp]
   28e04:	mov	r3, #1
   28e08:	mov	r2, #0
   28e0c:	mov	r1, #1
   28e10:	ldr	r0, [fp, #-16]
   28e14:	bl	33d28 <flatcc_verify_vector_field@@Base>
   28e18:	str	r0, [fp, #-8]
   28e1c:	ldr	r3, [fp, #-8]
   28e20:	cmp	r3, #0
   28e24:	beq	28e30 <_start@@Base+0x14810>
   28e28:	ldr	r3, [fp, #-8]
   28e2c:	b	28e74 <_start@@Base+0x14854>
   28e30:	ldr	r3, [pc, #72]	; 28e80 <_start@@Base+0x14860>
   28e34:	add	r3, pc, r3
   28e38:	str	r3, [sp, #4]
   28e3c:	mov	r3, #1
   28e40:	str	r3, [sp]
   28e44:	mov	r3, #0
   28e48:	mov	r2, #0
   28e4c:	mov	r1, #2
   28e50:	ldr	r0, [fp, #-16]
   28e54:	bl	34670 <flatcc_verify_table_as_nested_root@@Base>
   28e58:	str	r0, [fp, #-8]
   28e5c:	ldr	r3, [fp, #-8]
   28e60:	cmp	r3, #0
   28e64:	beq	28e70 <_start@@Base+0x14850>
   28e68:	ldr	r3, [fp, #-8]
   28e6c:	b	28e74 <_start@@Base+0x14854>
   28e70:	mov	r3, #0
   28e74:	mov	r0, r3
   28e78:	sub	sp, fp, #4
   28e7c:	pop	{fp, pc}
   28e80:	andeq	r0, r0, r8, asr #32
   28e84:	push	{fp, lr}
   28e88:	add	fp, sp, #4
   28e8c:	sub	sp, sp, #24
   28e90:	str	r0, [fp, #-16]
   28e94:	mov	r3, #16
   28e98:	mov	r2, #32
   28e9c:	mov	r1, #0
   28ea0:	ldr	r0, [fp, #-16]
   28ea4:	bl	33c0c <flatcc_verify_field@@Base>
   28ea8:	str	r0, [fp, #-8]
   28eac:	ldr	r3, [fp, #-8]
   28eb0:	cmp	r3, #0
   28eb4:	beq	28ec0 <_start@@Base+0x148a0>
   28eb8:	ldr	r3, [fp, #-8]
   28ebc:	b	29510 <_start@@Base+0x14ef0>
   28ec0:	mov	r3, #2
   28ec4:	mov	r2, #2
   28ec8:	mov	r1, #2
   28ecc:	ldr	r0, [fp, #-16]
   28ed0:	bl	33c0c <flatcc_verify_field@@Base>
   28ed4:	str	r0, [fp, #-8]
   28ed8:	ldr	r3, [fp, #-8]
   28edc:	cmp	r3, #0
   28ee0:	beq	28eec <_start@@Base+0x148cc>
   28ee4:	ldr	r3, [fp, #-8]
   28ee8:	b	29510 <_start@@Base+0x14ef0>
   28eec:	mov	r3, #2
   28ef0:	mov	r2, #2
   28ef4:	mov	r1, #1
   28ef8:	ldr	r0, [fp, #-16]
   28efc:	bl	33c0c <flatcc_verify_field@@Base>
   28f00:	str	r0, [fp, #-8]
   28f04:	ldr	r3, [fp, #-8]
   28f08:	cmp	r3, #0
   28f0c:	beq	28f18 <_start@@Base+0x148f8>
   28f10:	ldr	r3, [fp, #-8]
   28f14:	b	29510 <_start@@Base+0x14ef0>
   28f18:	mov	r2, #1
   28f1c:	mov	r1, #3
   28f20:	ldr	r0, [fp, #-16]
   28f24:	bl	33c84 <flatcc_verify_string_field@@Base>
   28f28:	str	r0, [fp, #-8]
   28f2c:	ldr	r3, [fp, #-8]
   28f30:	cmp	r3, #0
   28f34:	beq	28f40 <_start@@Base+0x14920>
   28f38:	ldr	r3, [fp, #-8]
   28f3c:	b	29510 <_start@@Base+0x14ef0>
   28f40:	mov	r3, #1
   28f44:	mov	r2, #1
   28f48:	mov	r1, #6
   28f4c:	ldr	r0, [fp, #-16]
   28f50:	bl	33c0c <flatcc_verify_field@@Base>
   28f54:	str	r0, [fp, #-8]
   28f58:	ldr	r3, [fp, #-8]
   28f5c:	cmp	r3, #0
   28f60:	beq	28f6c <_start@@Base+0x1494c>
   28f64:	ldr	r3, [fp, #-8]
   28f68:	b	29510 <_start@@Base+0x14ef0>
   28f6c:	mvn	r3, #0
   28f70:	str	r3, [sp, #4]
   28f74:	mov	r3, #1
   28f78:	str	r3, [sp]
   28f7c:	mov	r3, #1
   28f80:	mov	r2, #0
   28f84:	mov	r1, #5
   28f88:	ldr	r0, [fp, #-16]
   28f8c:	bl	33d28 <flatcc_verify_vector_field@@Base>
   28f90:	str	r0, [fp, #-8]
   28f94:	ldr	r3, [fp, #-8]
   28f98:	cmp	r3, #0
   28f9c:	beq	28fa8 <_start@@Base+0x14988>
   28fa0:	ldr	r3, [fp, #-8]
   28fa4:	b	29510 <_start@@Base+0x14ef0>
   28fa8:	ldr	r3, [pc, #1388]	; 2951c <_start@@Base+0x14efc>
   28fac:	add	r3, pc, r3
   28fb0:	mov	r2, #0
   28fb4:	mov	r1, #11
   28fb8:	ldr	r0, [fp, #-16]
   28fbc:	bl	33f48 <flatcc_verify_table_vector_field@@Base>
   28fc0:	str	r0, [fp, #-8]
   28fc4:	ldr	r3, [fp, #-8]
   28fc8:	cmp	r3, #0
   28fcc:	beq	28fd8 <_start@@Base+0x149b8>
   28fd0:	ldr	r3, [fp, #-8]
   28fd4:	b	29510 <_start@@Base+0x14ef0>
   28fd8:	mov	r2, #0
   28fdc:	mov	r1, #10
   28fe0:	ldr	r0, [fp, #-16]
   28fe4:	bl	33de8 <flatcc_verify_string_vector_field@@Base>
   28fe8:	str	r0, [fp, #-8]
   28fec:	ldr	r3, [fp, #-8]
   28ff0:	cmp	r3, #0
   28ff4:	beq	29000 <_start@@Base+0x149e0>
   28ff8:	ldr	r3, [fp, #-8]
   28ffc:	b	29510 <_start@@Base+0x14ef0>
   29000:	mov	r2, #0
   29004:	mov	r1, #28
   29008:	ldr	r0, [fp, #-16]
   2900c:	bl	33de8 <flatcc_verify_string_vector_field@@Base>
   29010:	str	r0, [fp, #-8]
   29014:	ldr	r3, [fp, #-8]
   29018:	cmp	r3, #0
   2901c:	beq	29028 <_start@@Base+0x14a08>
   29020:	ldr	r3, [fp, #-8]
   29024:	b	29510 <_start@@Base+0x14ef0>
   29028:	mvn	r3, #0
   2902c:	str	r3, [sp, #4]
   29030:	mov	r3, #1
   29034:	str	r3, [sp]
   29038:	mov	r3, #1
   2903c:	mov	r2, #0
   29040:	mov	r1, #24
   29044:	ldr	r0, [fp, #-16]
   29048:	bl	33d28 <flatcc_verify_vector_field@@Base>
   2904c:	str	r0, [fp, #-8]
   29050:	ldr	r3, [fp, #-8]
   29054:	cmp	r3, #0
   29058:	beq	29064 <_start@@Base+0x14a44>
   2905c:	ldr	r3, [fp, #-8]
   29060:	b	29510 <_start@@Base+0x14ef0>
   29064:	mvn	r3, #-536870912	; 0xe0000000
   29068:	str	r3, [sp, #4]
   2906c:	mov	r3, #4
   29070:	str	r3, [sp]
   29074:	mov	r3, #8
   29078:	mov	r2, #0
   2907c:	mov	r1, #29
   29080:	ldr	r0, [fp, #-16]
   29084:	bl	33d28 <flatcc_verify_vector_field@@Base>
   29088:	str	r0, [fp, #-8]
   2908c:	ldr	r3, [fp, #-8]
   29090:	cmp	r3, #0
   29094:	beq	290a0 <_start@@Base+0x14a80>
   29098:	ldr	r3, [fp, #-8]
   2909c:	b	29510 <_start@@Base+0x14ef0>
   290a0:	ldr	r3, [pc, #1144]	; 29520 <_start@@Base+0x14f00>
   290a4:	add	r3, pc, r3
   290a8:	mov	r2, #0
   290ac:	mov	r1, #12
   290b0:	ldr	r0, [fp, #-16]
   290b4:	bl	33e8c <flatcc_verify_table_field@@Base>
   290b8:	str	r0, [fp, #-8]
   290bc:	ldr	r3, [fp, #-8]
   290c0:	cmp	r3, #0
   290c4:	beq	290d0 <_start@@Base+0x14ab0>
   290c8:	ldr	r3, [fp, #-8]
   290cc:	b	29510 <_start@@Base+0x14ef0>
   290d0:	ldr	r3, [pc, #1100]	; 29524 <_start@@Base+0x14f04>
   290d4:	add	r3, pc, r3
   290d8:	mov	r2, #0
   290dc:	mov	r1, #8
   290e0:	ldr	r0, [fp, #-16]
   290e4:	bl	347cc <flatcc_verify_union_field@@Base>
   290e8:	str	r0, [fp, #-8]
   290ec:	ldr	r3, [fp, #-8]
   290f0:	cmp	r3, #0
   290f4:	beq	29100 <_start@@Base+0x14ae0>
   290f8:	ldr	r3, [fp, #-8]
   290fc:	b	29510 <_start@@Base+0x14ef0>
   29100:	mvn	r3, #-1073741824	; 0xc0000000
   29104:	str	r3, [sp, #4]
   29108:	mov	r3, #2
   2910c:	str	r3, [sp]
   29110:	mov	r3, #4
   29114:	mov	r2, #0
   29118:	mov	r1, #9
   2911c:	ldr	r0, [fp, #-16]
   29120:	bl	33d28 <flatcc_verify_vector_field@@Base>
   29124:	str	r0, [fp, #-8]
   29128:	ldr	r3, [fp, #-8]
   2912c:	cmp	r3, #0
   29130:	beq	2913c <_start@@Base+0x14b1c>
   29134:	ldr	r3, [fp, #-8]
   29138:	b	29510 <_start@@Base+0x14ef0>
   2913c:	mvn	r3, #-1073741824	; 0xc0000000
   29140:	str	r3, [sp, #4]
   29144:	mov	r3, #2
   29148:	str	r3, [sp]
   2914c:	mov	r3, #4
   29150:	mov	r2, #0
   29154:	mov	r1, #31
   29158:	ldr	r0, [fp, #-16]
   2915c:	bl	33d28 <flatcc_verify_vector_field@@Base>
   29160:	str	r0, [fp, #-8]
   29164:	ldr	r3, [fp, #-8]
   29168:	cmp	r3, #0
   2916c:	beq	29178 <_start@@Base+0x14b58>
   29170:	ldr	r3, [fp, #-8]
   29174:	b	29510 <_start@@Base+0x14ef0>
   29178:	ldr	r3, [pc, #936]	; 29528 <_start@@Base+0x14f08>
   2917c:	add	r3, pc, r3
   29180:	str	r3, [sp, #4]
   29184:	mov	r3, #1
   29188:	str	r3, [sp]
   2918c:	mov	r3, #0
   29190:	mov	r2, #0
   29194:	mov	r1, #13
   29198:	ldr	r0, [fp, #-16]
   2919c:	bl	34670 <flatcc_verify_table_as_nested_root@@Base>
   291a0:	str	r0, [fp, #-8]
   291a4:	ldr	r3, [fp, #-8]
   291a8:	cmp	r3, #0
   291ac:	beq	291b8 <_start@@Base+0x14b98>
   291b0:	ldr	r3, [fp, #-8]
   291b4:	b	29510 <_start@@Base+0x14ef0>
   291b8:	ldr	r3, [pc, #876]	; 2952c <_start@@Base+0x14f0c>
   291bc:	add	r3, pc, r3
   291c0:	mov	r2, #0
   291c4:	mov	r1, #14
   291c8:	ldr	r0, [fp, #-16]
   291cc:	bl	33e8c <flatcc_verify_table_field@@Base>
   291d0:	str	r0, [fp, #-8]
   291d4:	ldr	r3, [fp, #-8]
   291d8:	cmp	r3, #0
   291dc:	beq	291e8 <_start@@Base+0x14bc8>
   291e0:	ldr	r3, [fp, #-8]
   291e4:	b	29510 <_start@@Base+0x14ef0>
   291e8:	mov	r3, #1
   291ec:	mov	r2, #1
   291f0:	mov	r1, #15
   291f4:	ldr	r0, [fp, #-16]
   291f8:	bl	33c0c <flatcc_verify_field@@Base>
   291fc:	str	r0, [fp, #-8]
   29200:	ldr	r3, [fp, #-8]
   29204:	cmp	r3, #0
   29208:	beq	29214 <_start@@Base+0x14bf4>
   2920c:	ldr	r3, [fp, #-8]
   29210:	b	29510 <_start@@Base+0x14ef0>
   29214:	mov	r3, #4
   29218:	mov	r2, #4
   2921c:	mov	r1, #16
   29220:	ldr	r0, [fp, #-16]
   29224:	bl	33c0c <flatcc_verify_field@@Base>
   29228:	str	r0, [fp, #-8]
   2922c:	ldr	r3, [fp, #-8]
   29230:	cmp	r3, #0
   29234:	beq	29240 <_start@@Base+0x14c20>
   29238:	ldr	r3, [fp, #-8]
   2923c:	b	29510 <_start@@Base+0x14ef0>
   29240:	mov	r3, #4
   29244:	mov	r2, #4
   29248:	mov	r1, #17
   2924c:	ldr	r0, [fp, #-16]
   29250:	bl	33c0c <flatcc_verify_field@@Base>
   29254:	str	r0, [fp, #-8]
   29258:	ldr	r3, [fp, #-8]
   2925c:	cmp	r3, #0
   29260:	beq	2926c <_start@@Base+0x14c4c>
   29264:	ldr	r3, [fp, #-8]
   29268:	b	29510 <_start@@Base+0x14ef0>
   2926c:	mov	r3, #8
   29270:	mov	r2, #8
   29274:	mov	r1, #18
   29278:	ldr	r0, [fp, #-16]
   2927c:	bl	33c0c <flatcc_verify_field@@Base>
   29280:	str	r0, [fp, #-8]
   29284:	ldr	r3, [fp, #-8]
   29288:	cmp	r3, #0
   2928c:	beq	29298 <_start@@Base+0x14c78>
   29290:	ldr	r3, [fp, #-8]
   29294:	b	29510 <_start@@Base+0x14ef0>
   29298:	mov	r3, #8
   2929c:	mov	r2, #8
   292a0:	mov	r1, #19
   292a4:	ldr	r0, [fp, #-16]
   292a8:	bl	33c0c <flatcc_verify_field@@Base>
   292ac:	str	r0, [fp, #-8]
   292b0:	ldr	r3, [fp, #-8]
   292b4:	cmp	r3, #0
   292b8:	beq	292c4 <_start@@Base+0x14ca4>
   292bc:	ldr	r3, [fp, #-8]
   292c0:	b	29510 <_start@@Base+0x14ef0>
   292c4:	mov	r3, #4
   292c8:	mov	r2, #4
   292cc:	mov	r1, #20
   292d0:	ldr	r0, [fp, #-16]
   292d4:	bl	33c0c <flatcc_verify_field@@Base>
   292d8:	str	r0, [fp, #-8]
   292dc:	ldr	r3, [fp, #-8]
   292e0:	cmp	r3, #0
   292e4:	beq	292f0 <_start@@Base+0x14cd0>
   292e8:	ldr	r3, [fp, #-8]
   292ec:	b	29510 <_start@@Base+0x14ef0>
   292f0:	mov	r3, #4
   292f4:	mov	r2, #4
   292f8:	mov	r1, #21
   292fc:	ldr	r0, [fp, #-16]
   29300:	bl	33c0c <flatcc_verify_field@@Base>
   29304:	str	r0, [fp, #-8]
   29308:	ldr	r3, [fp, #-8]
   2930c:	cmp	r3, #0
   29310:	beq	2931c <_start@@Base+0x14cfc>
   29314:	ldr	r3, [fp, #-8]
   29318:	b	29510 <_start@@Base+0x14ef0>
   2931c:	mov	r3, #8
   29320:	mov	r2, #8
   29324:	mov	r1, #22
   29328:	ldr	r0, [fp, #-16]
   2932c:	bl	33c0c <flatcc_verify_field@@Base>
   29330:	str	r0, [fp, #-8]
   29334:	ldr	r3, [fp, #-8]
   29338:	cmp	r3, #0
   2933c:	beq	29348 <_start@@Base+0x14d28>
   29340:	ldr	r3, [fp, #-8]
   29344:	b	29510 <_start@@Base+0x14ef0>
   29348:	mov	r3, #8
   2934c:	mov	r2, #8
   29350:	mov	r1, #23
   29354:	ldr	r0, [fp, #-16]
   29358:	bl	33c0c <flatcc_verify_field@@Base>
   2935c:	str	r0, [fp, #-8]
   29360:	ldr	r3, [fp, #-8]
   29364:	cmp	r3, #0
   29368:	beq	29374 <_start@@Base+0x14d54>
   2936c:	ldr	r3, [fp, #-8]
   29370:	b	29510 <_start@@Base+0x14ef0>
   29374:	mov	r3, #4
   29378:	mov	r2, #4
   2937c:	mov	r1, #25
   29380:	ldr	r0, [fp, #-16]
   29384:	bl	33c0c <flatcc_verify_field@@Base>
   29388:	str	r0, [fp, #-8]
   2938c:	ldr	r3, [fp, #-8]
   29390:	cmp	r3, #0
   29394:	beq	293a0 <_start@@Base+0x14d80>
   29398:	ldr	r3, [fp, #-8]
   2939c:	b	29510 <_start@@Base+0x14ef0>
   293a0:	mov	r3, #4
   293a4:	mov	r2, #4
   293a8:	mov	r1, #26
   293ac:	ldr	r0, [fp, #-16]
   293b0:	bl	33c0c <flatcc_verify_field@@Base>
   293b4:	str	r0, [fp, #-8]
   293b8:	ldr	r3, [fp, #-8]
   293bc:	cmp	r3, #0
   293c0:	beq	293cc <_start@@Base+0x14dac>
   293c4:	ldr	r3, [fp, #-8]
   293c8:	b	29510 <_start@@Base+0x14ef0>
   293cc:	mov	r3, #4
   293d0:	mov	r2, #4
   293d4:	mov	r1, #27
   293d8:	ldr	r0, [fp, #-16]
   293dc:	bl	33c0c <flatcc_verify_field@@Base>
   293e0:	str	r0, [fp, #-8]
   293e4:	ldr	r3, [fp, #-8]
   293e8:	cmp	r3, #0
   293ec:	beq	293f8 <_start@@Base+0x14dd8>
   293f0:	ldr	r3, [fp, #-8]
   293f4:	b	29510 <_start@@Base+0x14ef0>
   293f8:	mvn	r3, #0
   293fc:	str	r3, [sp, #4]
   29400:	mov	r3, #1
   29404:	str	r3, [sp]
   29408:	mov	r3, #1
   2940c:	mov	r2, #0
   29410:	mov	r1, #30
   29414:	ldr	r0, [fp, #-16]
   29418:	bl	33d28 <flatcc_verify_vector_field@@Base>
   2941c:	str	r0, [fp, #-8]
   29420:	ldr	r3, [fp, #-8]
   29424:	cmp	r3, #0
   29428:	beq	29434 <_start@@Base+0x14e14>
   2942c:	ldr	r3, [fp, #-8]
   29430:	b	29510 <_start@@Base+0x14ef0>
   29434:	mvn	r3, #-536870912	; 0xe0000000
   29438:	str	r3, [sp, #4]
   2943c:	mov	r3, #8
   29440:	str	r3, [sp]
   29444:	mov	r3, #8
   29448:	mov	r2, #0
   2944c:	mov	r1, #32
   29450:	ldr	r0, [fp, #-16]
   29454:	bl	33d28 <flatcc_verify_vector_field@@Base>
   29458:	str	r0, [fp, #-8]
   2945c:	ldr	r3, [fp, #-8]
   29460:	cmp	r3, #0
   29464:	beq	29470 <_start@@Base+0x14e50>
   29468:	ldr	r3, [fp, #-8]
   2946c:	b	29510 <_start@@Base+0x14ef0>
   29470:	mvn	r3, #-536870912	; 0xe0000000
   29474:	str	r3, [sp, #4]
   29478:	mov	r3, #8
   2947c:	str	r3, [sp]
   29480:	mov	r3, #8
   29484:	mov	r2, #0
   29488:	mov	r1, #33	; 0x21
   2948c:	ldr	r0, [fp, #-16]
   29490:	bl	33d28 <flatcc_verify_vector_field@@Base>
   29494:	str	r0, [fp, #-8]
   29498:	ldr	r3, [fp, #-8]
   2949c:	cmp	r3, #0
   294a0:	beq	294ac <_start@@Base+0x14e8c>
   294a4:	ldr	r3, [fp, #-8]
   294a8:	b	29510 <_start@@Base+0x14ef0>
   294ac:	ldr	r3, [pc, #124]	; 29530 <_start@@Base+0x14f10>
   294b0:	add	r3, pc, r3
   294b4:	mov	r2, #0
   294b8:	mov	r1, #34	; 0x22
   294bc:	ldr	r0, [fp, #-16]
   294c0:	bl	33e8c <flatcc_verify_table_field@@Base>
   294c4:	str	r0, [fp, #-8]
   294c8:	ldr	r3, [fp, #-8]
   294cc:	cmp	r3, #0
   294d0:	beq	294dc <_start@@Base+0x14ebc>
   294d4:	ldr	r3, [fp, #-8]
   294d8:	b	29510 <_start@@Base+0x14ef0>
   294dc:	ldr	r3, [pc, #80]	; 29534 <_start@@Base+0x14f14>
   294e0:	add	r3, pc, r3
   294e4:	mov	r2, #0
   294e8:	mov	r1, #35	; 0x23
   294ec:	ldr	r0, [fp, #-16]
   294f0:	bl	33e8c <flatcc_verify_table_field@@Base>
   294f4:	str	r0, [fp, #-8]
   294f8:	ldr	r3, [fp, #-8]
   294fc:	cmp	r3, #0
   29500:	beq	2950c <_start@@Base+0x14eec>
   29504:	ldr	r3, [fp, #-8]
   29508:	b	29510 <_start@@Base+0x14ef0>
   2950c:	mov	r3, #0
   29510:	mov	r0, r3
   29514:	sub	sp, fp, #4
   29518:	pop	{fp, pc}
   2951c:			; <UNDEFINED> instruction: 0xfffffed0
   29520:			; <UNDEFINED> instruction: 0xfffffdd8
   29524:			; <UNDEFINED> instruction: 0xfffff3bc
   29528:			; <UNDEFINED> instruction: 0xfffffd00
   2952c:			; <UNDEFINED> instruction: 0xfffff73c
   29530:			; <UNDEFINED> instruction: 0xfffff198
   29534:			; <UNDEFINED> instruction: 0xfffff8c0
   29538:	push	{fp, lr}
   2953c:	add	fp, sp, #4
   29540:	sub	sp, sp, #24
   29544:	str	r0, [fp, #-16]
   29548:	mov	r3, #1
   2954c:	mov	r2, #1
   29550:	mov	r1, #0
   29554:	ldr	r0, [fp, #-16]
   29558:	bl	33c0c <flatcc_verify_field@@Base>
   2955c:	str	r0, [fp, #-8]
   29560:	ldr	r3, [fp, #-8]
   29564:	cmp	r3, #0
   29568:	beq	29574 <_start@@Base+0x14f54>
   2956c:	ldr	r3, [fp, #-8]
   29570:	b	2977c <_start@@Base+0x1515c>
   29574:	mov	r3, #1
   29578:	mov	r2, #1
   2957c:	mov	r1, #1
   29580:	ldr	r0, [fp, #-16]
   29584:	bl	33c0c <flatcc_verify_field@@Base>
   29588:	str	r0, [fp, #-8]
   2958c:	ldr	r3, [fp, #-8]
   29590:	cmp	r3, #0
   29594:	beq	295a0 <_start@@Base+0x14f80>
   29598:	ldr	r3, [fp, #-8]
   2959c:	b	2977c <_start@@Base+0x1515c>
   295a0:	mov	r3, #2
   295a4:	mov	r2, #2
   295a8:	mov	r1, #2
   295ac:	ldr	r0, [fp, #-16]
   295b0:	bl	33c0c <flatcc_verify_field@@Base>
   295b4:	str	r0, [fp, #-8]
   295b8:	ldr	r3, [fp, #-8]
   295bc:	cmp	r3, #0
   295c0:	beq	295cc <_start@@Base+0x14fac>
   295c4:	ldr	r3, [fp, #-8]
   295c8:	b	2977c <_start@@Base+0x1515c>
   295cc:	mov	r3, #2
   295d0:	mov	r2, #2
   295d4:	mov	r1, #3
   295d8:	ldr	r0, [fp, #-16]
   295dc:	bl	33c0c <flatcc_verify_field@@Base>
   295e0:	str	r0, [fp, #-8]
   295e4:	ldr	r3, [fp, #-8]
   295e8:	cmp	r3, #0
   295ec:	beq	295f8 <_start@@Base+0x14fd8>
   295f0:	ldr	r3, [fp, #-8]
   295f4:	b	2977c <_start@@Base+0x1515c>
   295f8:	mov	r3, #4
   295fc:	mov	r2, #4
   29600:	mov	r1, #4
   29604:	ldr	r0, [fp, #-16]
   29608:	bl	33c0c <flatcc_verify_field@@Base>
   2960c:	str	r0, [fp, #-8]
   29610:	ldr	r3, [fp, #-8]
   29614:	cmp	r3, #0
   29618:	beq	29624 <_start@@Base+0x15004>
   2961c:	ldr	r3, [fp, #-8]
   29620:	b	2977c <_start@@Base+0x1515c>
   29624:	mov	r3, #4
   29628:	mov	r2, #4
   2962c:	mov	r1, #5
   29630:	ldr	r0, [fp, #-16]
   29634:	bl	33c0c <flatcc_verify_field@@Base>
   29638:	str	r0, [fp, #-8]
   2963c:	ldr	r3, [fp, #-8]
   29640:	cmp	r3, #0
   29644:	beq	29650 <_start@@Base+0x15030>
   29648:	ldr	r3, [fp, #-8]
   2964c:	b	2977c <_start@@Base+0x1515c>
   29650:	mov	r3, #8
   29654:	mov	r2, #8
   29658:	mov	r1, #6
   2965c:	ldr	r0, [fp, #-16]
   29660:	bl	33c0c <flatcc_verify_field@@Base>
   29664:	str	r0, [fp, #-8]
   29668:	ldr	r3, [fp, #-8]
   2966c:	cmp	r3, #0
   29670:	beq	2967c <_start@@Base+0x1505c>
   29674:	ldr	r3, [fp, #-8]
   29678:	b	2977c <_start@@Base+0x1515c>
   2967c:	mov	r3, #8
   29680:	mov	r2, #8
   29684:	mov	r1, #7
   29688:	ldr	r0, [fp, #-16]
   2968c:	bl	33c0c <flatcc_verify_field@@Base>
   29690:	str	r0, [fp, #-8]
   29694:	ldr	r3, [fp, #-8]
   29698:	cmp	r3, #0
   2969c:	beq	296a8 <_start@@Base+0x15088>
   296a0:	ldr	r3, [fp, #-8]
   296a4:	b	2977c <_start@@Base+0x1515c>
   296a8:	mov	r3, #4
   296ac:	mov	r2, #4
   296b0:	mov	r1, #8
   296b4:	ldr	r0, [fp, #-16]
   296b8:	bl	33c0c <flatcc_verify_field@@Base>
   296bc:	str	r0, [fp, #-8]
   296c0:	ldr	r3, [fp, #-8]
   296c4:	cmp	r3, #0
   296c8:	beq	296d4 <_start@@Base+0x150b4>
   296cc:	ldr	r3, [fp, #-8]
   296d0:	b	2977c <_start@@Base+0x1515c>
   296d4:	mov	r3, #8
   296d8:	mov	r2, #8
   296dc:	mov	r1, #9
   296e0:	ldr	r0, [fp, #-16]
   296e4:	bl	33c0c <flatcc_verify_field@@Base>
   296e8:	str	r0, [fp, #-8]
   296ec:	ldr	r3, [fp, #-8]
   296f0:	cmp	r3, #0
   296f4:	beq	29700 <_start@@Base+0x150e0>
   296f8:	ldr	r3, [fp, #-8]
   296fc:	b	2977c <_start@@Base+0x1515c>
   29700:	mvn	r3, #0
   29704:	str	r3, [sp, #4]
   29708:	mov	r3, #1
   2970c:	str	r3, [sp]
   29710:	mov	r3, #1
   29714:	mov	r2, #0
   29718:	mov	r1, #10
   2971c:	ldr	r0, [fp, #-16]
   29720:	bl	33d28 <flatcc_verify_vector_field@@Base>
   29724:	str	r0, [fp, #-8]
   29728:	ldr	r3, [fp, #-8]
   2972c:	cmp	r3, #0
   29730:	beq	2973c <_start@@Base+0x1511c>
   29734:	ldr	r3, [fp, #-8]
   29738:	b	2977c <_start@@Base+0x1515c>
   2973c:	mvn	r3, #-536870912	; 0xe0000000
   29740:	str	r3, [sp, #4]
   29744:	mov	r3, #8
   29748:	str	r3, [sp]
   2974c:	mov	r3, #8
   29750:	mov	r2, #0
   29754:	mov	r1, #11
   29758:	ldr	r0, [fp, #-16]
   2975c:	bl	33d28 <flatcc_verify_vector_field@@Base>
   29760:	str	r0, [fp, #-8]
   29764:	ldr	r3, [fp, #-8]
   29768:	cmp	r3, #0
   2976c:	beq	29778 <_start@@Base+0x15158>
   29770:	ldr	r3, [fp, #-8]
   29774:	b	2977c <_start@@Base+0x1515c>
   29778:	mov	r3, #0
   2977c:	mov	r0, r3
   29780:	sub	sp, fp, #4
   29784:	pop	{fp, pc}
   29788:	push	{fp, lr}
   2978c:	add	fp, sp, #4
   29790:	sub	sp, sp, #16
   29794:	str	r0, [fp, #-16]
   29798:	mov	r3, #4
   2979c:	mov	r2, #4
   297a0:	mov	r1, #0
   297a4:	ldr	r0, [fp, #-16]
   297a8:	bl	33c0c <flatcc_verify_field@@Base>
   297ac:	str	r0, [fp, #-8]
   297b0:	ldr	r3, [fp, #-8]
   297b4:	cmp	r3, #0
   297b8:	beq	297c4 <_start@@Base+0x151a4>
   297bc:	ldr	r3, [fp, #-8]
   297c0:	b	297c8 <_start@@Base+0x151a8>
   297c4:	mov	r3, #0
   297c8:	mov	r0, r3
   297cc:	sub	sp, fp, #4
   297d0:	pop	{fp, pc}
   297d4:	push	{fp, lr}
   297d8:	add	fp, sp, #4
   297dc:	sub	sp, sp, #16
   297e0:	str	r0, [fp, #-16]
   297e4:	ldr	r3, [pc, #248]	; 298e4 <_start@@Base+0x152c4>
   297e8:	add	r3, pc, r3
   297ec:	mov	r2, #0
   297f0:	mov	r1, #1
   297f4:	ldr	r0, [fp, #-16]
   297f8:	bl	347cc <flatcc_verify_union_field@@Base>
   297fc:	str	r0, [fp, #-8]
   29800:	ldr	r3, [fp, #-8]
   29804:	cmp	r3, #0
   29808:	beq	29814 <_start@@Base+0x151f4>
   2980c:	ldr	r3, [fp, #-8]
   29810:	b	298d8 <_start@@Base+0x152b8>
   29814:	ldr	r3, [pc, #204]	; 298e8 <_start@@Base+0x152c8>
   29818:	add	r3, pc, r3
   2981c:	mov	r2, #0
   29820:	mov	r1, #3
   29824:	ldr	r0, [fp, #-16]
   29828:	bl	347cc <flatcc_verify_union_field@@Base>
   2982c:	str	r0, [fp, #-8]
   29830:	ldr	r3, [fp, #-8]
   29834:	cmp	r3, #0
   29838:	beq	29844 <_start@@Base+0x15224>
   2983c:	ldr	r3, [fp, #-8]
   29840:	b	298d8 <_start@@Base+0x152b8>
   29844:	ldr	r3, [pc, #160]	; 298ec <_start@@Base+0x152cc>
   29848:	add	r3, pc, r3
   2984c:	mov	r2, #0
   29850:	mov	r1, #5
   29854:	ldr	r0, [fp, #-16]
   29858:	bl	347cc <flatcc_verify_union_field@@Base>
   2985c:	str	r0, [fp, #-8]
   29860:	ldr	r3, [fp, #-8]
   29864:	cmp	r3, #0
   29868:	beq	29874 <_start@@Base+0x15254>
   2986c:	ldr	r3, [fp, #-8]
   29870:	b	298d8 <_start@@Base+0x152b8>
   29874:	ldr	r3, [pc, #116]	; 298f0 <_start@@Base+0x152d0>
   29878:	add	r3, pc, r3
   2987c:	mov	r2, #0
   29880:	mov	r1, #7
   29884:	ldr	r0, [fp, #-16]
   29888:	bl	347cc <flatcc_verify_union_field@@Base>
   2988c:	str	r0, [fp, #-8]
   29890:	ldr	r3, [fp, #-8]
   29894:	cmp	r3, #0
   29898:	beq	298a4 <_start@@Base+0x15284>
   2989c:	ldr	r3, [fp, #-8]
   298a0:	b	298d8 <_start@@Base+0x152b8>
   298a4:	ldr	r3, [pc, #72]	; 298f4 <_start@@Base+0x152d4>
   298a8:	add	r3, pc, r3
   298ac:	mov	r2, #0
   298b0:	mov	r1, #9
   298b4:	ldr	r0, [fp, #-16]
   298b8:	bl	34a28 <flatcc_verify_union_vector_field@@Base>
   298bc:	str	r0, [fp, #-8]
   298c0:	ldr	r3, [fp, #-8]
   298c4:	cmp	r3, #0
   298c8:	beq	298d4 <_start@@Base+0x152b4>
   298cc:	ldr	r3, [fp, #-8]
   298d0:	b	298d8 <_start@@Base+0x152b8>
   298d4:	mov	r3, #0
   298d8:	mov	r0, r3
   298dc:	sub	sp, fp, #4
   298e0:	pop	{fp, pc}
   298e4:			; <UNDEFINED> instruction: 0xffffed70
   298e8:			; <UNDEFINED> instruction: 0xffffed40
   298ec:			; <UNDEFINED> instruction: 0xffffed10
   298f0:			; <UNDEFINED> instruction: 0xffffece0
   298f4:			; <UNDEFINED> instruction: 0xffffecb0
   298f8:	push	{fp, lr}
   298fc:	add	fp, sp, #4
   29900:	sub	sp, sp, #48	; 0x30
   29904:	str	r0, [fp, #-40]	; 0xffffffd8
   29908:	str	r1, [fp, #-44]	; 0xffffffd4
   2990c:	str	r2, [fp, #-48]	; 0xffffffd0
   29910:	str	r3, [fp, #-52]	; 0xffffffcc
   29914:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29918:	str	r3, [fp, #-12]
   2991c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29920:	cmp	r3, #0
   29924:	beq	29940 <_start@@Base+0x15320>
   29928:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2992c:	ldr	r3, [pc, #440]	; 29aec <_start@@Base+0x154cc>
   29930:	add	r3, pc, r3
   29934:	mov	r1, r3
   29938:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2993c:	bl	145a4 <fprintf@plt>
   29940:	mov	r3, #0
   29944:	str	r3, [fp, #-8]
   29948:	b	29a7c <_start@@Base+0x1545c>
   2994c:	ldr	r3, [fp, #-8]
   29950:	and	r3, r3, #15
   29954:	cmp	r3, #0
   29958:	bne	299a0 <_start@@Base+0x15380>
   2995c:	ldr	r3, [fp, #-8]
   29960:	cmp	r3, #0
   29964:	beq	29984 <_start@@Base+0x15364>
   29968:	sub	r3, fp, #32
   2996c:	mov	r2, r3
   29970:	ldr	r3, [pc, #376]	; 29af0 <_start@@Base+0x154d0>
   29974:	add	r3, pc, r3
   29978:	mov	r1, r3
   2997c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29980:	bl	145a4 <fprintf@plt>
   29984:	ldr	r2, [fp, #-8]
   29988:	ldr	r3, [pc, #356]	; 29af4 <_start@@Base+0x154d4>
   2998c:	add	r3, pc, r3
   29990:	mov	r1, r3
   29994:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29998:	bl	145a4 <fprintf@plt>
   2999c:	b	299bc <_start@@Base+0x1539c>
   299a0:	ldr	r3, [fp, #-8]
   299a4:	and	r3, r3, #7
   299a8:	cmp	r3, #0
   299ac:	bne	299bc <_start@@Base+0x1539c>
   299b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   299b4:	mov	r0, #32
   299b8:	bl	145ec <fputc@plt>
   299bc:	ldr	r2, [fp, #-12]
   299c0:	ldr	r3, [fp, #-8]
   299c4:	add	r3, r2, r3
   299c8:	ldrb	r3, [r3]
   299cc:	mov	r2, r3
   299d0:	ldr	r3, [pc, #288]	; 29af8 <_start@@Base+0x154d8>
   299d4:	add	r3, pc, r3
   299d8:	mov	r1, r3
   299dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   299e0:	bl	145a4 <fprintf@plt>
   299e4:	ldr	r2, [fp, #-12]
   299e8:	ldr	r3, [fp, #-8]
   299ec:	add	r3, r2, r3
   299f0:	ldrb	r3, [r3]
   299f4:	cmp	r3, #31
   299f8:	bls	29a14 <_start@@Base+0x153f4>
   299fc:	ldr	r2, [fp, #-12]
   29a00:	ldr	r3, [fp, #-8]
   29a04:	add	r3, r2, r3
   29a08:	ldrb	r3, [r3]
   29a0c:	cmp	r3, #126	; 0x7e
   29a10:	bls	29a30 <_start@@Base+0x15410>
   29a14:	ldr	r3, [fp, #-8]
   29a18:	and	r3, r3, #15
   29a1c:	sub	r2, fp, #4
   29a20:	add	r3, r2, r3
   29a24:	mov	r2, #46	; 0x2e
   29a28:	strb	r2, [r3, #-28]	; 0xffffffe4
   29a2c:	b	29a54 <_start@@Base+0x15434>
   29a30:	ldr	r3, [fp, #-8]
   29a34:	and	r3, r3, #15
   29a38:	ldr	r1, [fp, #-12]
   29a3c:	ldr	r2, [fp, #-8]
   29a40:	add	r2, r1, r2
   29a44:	ldrb	r2, [r2]
   29a48:	sub	r1, fp, #4
   29a4c:	add	r3, r1, r3
   29a50:	strb	r2, [r3, #-28]	; 0xffffffe4
   29a54:	ldr	r3, [fp, #-8]
   29a58:	and	r3, r3, #15
   29a5c:	add	r3, r3, #1
   29a60:	sub	r2, fp, #4
   29a64:	add	r3, r2, r3
   29a68:	mov	r2, #0
   29a6c:	strb	r2, [r3, #-28]	; 0xffffffe4
   29a70:	ldr	r3, [fp, #-8]
   29a74:	add	r3, r3, #1
   29a78:	str	r3, [fp, #-8]
   29a7c:	ldr	r2, [fp, #-8]
   29a80:	ldr	r3, [fp, #-48]	; 0xffffffd0
   29a84:	cmp	r2, r3
   29a88:	bcc	2994c <_start@@Base+0x1532c>
   29a8c:	b	29ab4 <_start@@Base+0x15494>
   29a90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   29a94:	mov	r2, #3
   29a98:	mov	r1, #1
   29a9c:	ldr	r0, [pc, #88]	; 29afc <_start@@Base+0x154dc>
   29aa0:	add	r0, pc, r0
   29aa4:	bl	14568 <fwrite@plt>
   29aa8:	ldr	r3, [fp, #-8]
   29aac:	add	r3, r3, #1
   29ab0:	str	r3, [fp, #-8]
   29ab4:	ldr	r3, [fp, #-8]
   29ab8:	and	r3, r3, #15
   29abc:	cmp	r3, #0
   29ac0:	bne	29a90 <_start@@Base+0x15470>
   29ac4:	sub	r3, fp, #32
   29ac8:	mov	r2, r3
   29acc:	ldr	r3, [pc, #44]	; 29b00 <_start@@Base+0x154e0>
   29ad0:	add	r3, pc, r3
   29ad4:	mov	r1, r3
   29ad8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   29adc:	bl	145a4 <fprintf@plt>
   29ae0:	nop			; (mov r0, r0)
   29ae4:	sub	sp, fp, #4
   29ae8:	pop	{fp, pc}
   29aec:	andeq	r2, r2, r8, ror #10
   29af0:	andeq	r2, r2, ip, lsr #10
   29af4:	andeq	r2, r2, ip, lsl r5
   29af8:	ldrdeq	r2, [r2], -ip
   29afc:	andeq	r2, r2, r8, lsl r4
   29b00:	ldrdeq	r2, [r2], -r0

00029b04 <test_json@@Base>:
   29b04:	push	{r4, r5, fp, lr}
   29b08:	add	fp, sp, #12
   29b0c:	sub	sp, sp, #384	; 0x180
   29b10:	str	r0, [fp, #-368]	; 0xfffffe90
   29b14:	str	r1, [fp, #-372]	; 0xfffffe8c
   29b18:	str	r2, [fp, #-376]	; 0xfffffe88
   29b1c:	str	r3, [fp, #-380]	; 0xfffffe84
   29b20:	ldr	r4, [pc, #1056]	; 29f48 <test_json@@Base+0x444>
   29b24:	add	r4, pc, r4
   29b28:	mvn	r3, #0
   29b2c:	str	r3, [fp, #-16]
   29b30:	mov	r3, #0
   29b34:	str	r3, [fp, #-20]	; 0xffffffec
   29b38:	mov	r3, #0
   29b3c:	str	r3, [fp, #-28]	; 0xffffffe4
   29b40:	sub	r3, fp, #276	; 0x114
   29b44:	str	r3, [fp, #-32]	; 0xffffffe0
   29b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29b4c:	bl	2c6dc <flatcc_builder_init@@Base>
   29b50:	sub	r3, fp, #364	; 0x16c
   29b54:	mov	r1, #0
   29b58:	mov	r0, r3
   29b5c:	bl	4ab10 <flatcc_json_printer_init_dynamic_buffer@@Base>
   29b60:	sub	r3, fp, #364	; 0x16c
   29b64:	ldr	r1, [fp, #8]
   29b68:	mov	r0, r3
   29b6c:	bl	26374 <_start@@Base+0x11d54>
   29b70:	ldr	r0, [fp, #-372]	; 0xfffffe8c
   29b74:	bl	14598 <strlen@plt>
   29b78:	ldr	r3, [fp, #-368]	; 0xfffffe90
   29b7c:	ldr	r3, [r3]
   29b80:	ldr	r2, [fp, #-368]	; 0xfffffe90
   29b84:	ldr	r2, [r2, #4]
   29b88:	sub	r1, fp, #316	; 0x13c
   29b8c:	str	r2, [sp, #8]
   29b90:	str	r3, [sp, #4]
   29b94:	ldr	r3, [fp, #4]
   29b98:	str	r3, [sp]
   29b9c:	mov	r3, r0
   29ba0:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   29ba4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29ba8:	bl	3ccb8 <flatcc_json_parser_table_as_root@@Base>
   29bac:	str	r0, [fp, #-36]	; 0xffffffdc
   29bb0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   29bb4:	ldr	r3, [fp, #-380]	; 0xfffffe84
   29bb8:	cmp	r2, r3
   29bbc:	beq	29d5c <test_json@@Base+0x258>
   29bc0:	ldr	r3, [fp, #-380]	; 0xfffffe84
   29bc4:	cmp	r3, #0
   29bc8:	beq	29ca8 <test_json@@Base+0x1a4>
   29bcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29bd0:	cmp	r3, #0
   29bd4:	beq	29c58 <test_json@@Base+0x154>
   29bd8:	ldr	r3, [pc, #876]	; 29f4c <test_json@@Base+0x448>
   29bdc:	ldr	r3, [r4, r3]
   29be0:	ldr	r5, [r3]
   29be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29be8:	bl	398c4 <flatcc_json_parser_error_string@@Base>
   29bec:	mov	r3, r0
   29bf0:	ldr	r2, [fp, #12]
   29bf4:	ldr	r1, [pc, #852]	; 29f50 <test_json@@Base+0x44c>
   29bf8:	add	r1, pc, r1
   29bfc:	mov	r0, r5
   29c00:	bl	145a4 <fprintf@plt>
   29c04:	ldr	r3, [pc, #832]	; 29f4c <test_json@@Base+0x448>
   29c08:	ldr	r3, [r4, r3]
   29c0c:	ldr	r5, [r3]
   29c10:	ldr	r0, [fp, #-380]	; 0xfffffe84
   29c14:	bl	398c4 <flatcc_json_parser_error_string@@Base>
   29c18:	mov	r3, r0
   29c1c:	mov	r2, r3
   29c20:	ldr	r3, [pc, #812]	; 29f54 <test_json@@Base+0x450>
   29c24:	add	r3, pc, r3
   29c28:	mov	r1, r3
   29c2c:	mov	r0, r5
   29c30:	bl	145a4 <fprintf@plt>
   29c34:	ldr	r3, [pc, #784]	; 29f4c <test_json@@Base+0x448>
   29c38:	ldr	r3, [r4, r3]
   29c3c:	ldr	r3, [r3]
   29c40:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   29c44:	ldr	r1, [pc, #780]	; 29f58 <test_json@@Base+0x454>
   29c48:	add	r1, pc, r1
   29c4c:	mov	r0, r3
   29c50:	bl	145a4 <fprintf@plt>
   29c54:	b	29cf4 <test_json@@Base+0x1f0>
   29c58:	ldr	r3, [pc, #748]	; 29f4c <test_json@@Base+0x448>
   29c5c:	ldr	r3, [r4, r3]
   29c60:	ldr	r5, [r3]
   29c64:	ldr	r0, [fp, #-380]	; 0xfffffe84
   29c68:	bl	398c4 <flatcc_json_parser_error_string@@Base>
   29c6c:	mov	r3, r0
   29c70:	ldr	r2, [fp, #12]
   29c74:	ldr	r1, [pc, #736]	; 29f5c <test_json@@Base+0x458>
   29c78:	add	r1, pc, r1
   29c7c:	mov	r0, r5
   29c80:	bl	145a4 <fprintf@plt>
   29c84:	ldr	r3, [pc, #704]	; 29f4c <test_json@@Base+0x448>
   29c88:	ldr	r3, [r4, r3]
   29c8c:	ldr	r3, [r3]
   29c90:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   29c94:	ldr	r1, [pc, #708]	; 29f60 <test_json@@Base+0x45c>
   29c98:	add	r1, pc, r1
   29c9c:	mov	r0, r3
   29ca0:	bl	145a4 <fprintf@plt>
   29ca4:	b	29cf4 <test_json@@Base+0x1f0>
   29ca8:	ldr	r3, [pc, #668]	; 29f4c <test_json@@Base+0x448>
   29cac:	ldr	r3, [r4, r3]
   29cb0:	ldr	r5, [r3]
   29cb4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29cb8:	bl	398c4 <flatcc_json_parser_error_string@@Base>
   29cbc:	mov	r3, r0
   29cc0:	ldr	r2, [fp, #12]
   29cc4:	ldr	r1, [pc, #664]	; 29f64 <test_json@@Base+0x460>
   29cc8:	add	r1, pc, r1
   29ccc:	mov	r0, r5
   29cd0:	bl	145a4 <fprintf@plt>
   29cd4:	ldr	r3, [pc, #624]	; 29f4c <test_json@@Base+0x448>
   29cd8:	ldr	r3, [r4, r3]
   29cdc:	ldr	r3, [r3]
   29ce0:	ldr	r2, [fp, #-372]	; 0xfffffe8c
   29ce4:	ldr	r1, [pc, #636]	; 29f68 <test_json@@Base+0x464>
   29ce8:	add	r1, pc, r1
   29cec:	mov	r0, r3
   29cf0:	bl	145a4 <fprintf@plt>
   29cf4:	mov	r3, #0
   29cf8:	str	r3, [fp, #-24]	; 0xffffffe8
   29cfc:	b	29d24 <test_json@@Base+0x220>
   29d00:	ldr	r3, [pc, #580]	; 29f4c <test_json@@Base+0x448>
   29d04:	ldr	r3, [r4, r3]
   29d08:	ldr	r3, [r3]
   29d0c:	mov	r1, r3
   29d10:	mov	r0, #32
   29d14:	bl	145ec <fputc@plt>
   29d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29d1c:	add	r3, r3, #1
   29d20:	str	r3, [fp, #-24]	; 0xffffffe8
   29d24:	ldr	r3, [fp, #-300]	; 0xfffffed4
   29d28:	sub	r2, r3, #1
   29d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29d30:	cmp	r2, r3
   29d34:	bgt	29d00 <test_json@@Base+0x1fc>
   29d38:	ldr	r3, [pc, #524]	; 29f4c <test_json@@Base+0x448>
   29d3c:	ldr	r3, [r4, r3]
   29d40:	ldr	r3, [r3]
   29d44:	mov	r2, #2
   29d48:	mov	r1, #1
   29d4c:	ldr	r0, [pc, #536]	; 29f6c <test_json@@Base+0x468>
   29d50:	add	r0, pc, r0
   29d54:	bl	14568 <fwrite@plt>
   29d58:	b	29f04 <test_json@@Base+0x400>
   29d5c:	ldr	r3, [fp, #-380]	; 0xfffffe84
   29d60:	cmp	r3, #0
   29d64:	beq	29d74 <test_json@@Base+0x270>
   29d68:	mov	r3, #0
   29d6c:	str	r3, [fp, #-16]
   29d70:	b	29ee0 <test_json@@Base+0x3dc>
   29d74:	sub	r3, fp, #40	; 0x28
   29d78:	mov	r1, r3
   29d7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29d80:	bl	31a48 <flatcc_builder_finalize_aligned_buffer@@Base>
   29d84:	str	r0, [fp, #-20]	; 0xffffffec
   29d88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   29d8c:	ldr	r3, [fp, #-368]	; 0xfffffe90
   29d90:	ldr	r2, [r3]
   29d94:	ldr	r3, [fp, #-368]	; 0xfffffe90
   29d98:	ldr	r3, [r3, #12]
   29d9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   29da0:	bl	3443c <flatcc_verify_table_as_root@@Base>
   29da4:	str	r0, [fp, #-16]
   29da8:	ldr	r3, [fp, #-16]
   29dac:	cmp	r3, #0
   29db0:	beq	29df0 <test_json@@Base+0x2ec>
   29db4:	ldr	r3, [pc, #400]	; 29f4c <test_json@@Base+0x448>
   29db8:	ldr	r3, [r4, r3]
   29dbc:	ldr	r5, [r3]
   29dc0:	ldr	r0, [fp, #-16]
   29dc4:	bl	328d8 <flatcc_verify_error_string@@Base>
   29dc8:	mov	r3, r0
   29dcc:	str	r3, [sp]
   29dd0:	ldr	r3, [fp, #12]
   29dd4:	ldr	r2, [pc, #404]	; 29f70 <test_json@@Base+0x46c>
   29dd8:	add	r2, pc, r2
   29ddc:	ldr	r1, [pc, #400]	; 29f74 <test_json@@Base+0x470>
   29de0:	add	r1, pc, r1
   29de4:	mov	r0, r5
   29de8:	bl	145a4 <fprintf@plt>
   29dec:	b	29f04 <test_json@@Base+0x400>
   29df0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29df4:	ldr	r3, [fp, #-368]	; 0xfffffe90
   29df8:	ldr	r1, [r3]
   29dfc:	ldr	r3, [fp, #-368]	; 0xfffffe90
   29e00:	ldr	r3, [r3, #8]
   29e04:	sub	r0, fp, #364	; 0x16c
   29e08:	str	r3, [sp]
   29e0c:	mov	r3, r1
   29e10:	ldr	r1, [fp, #-20]	; 0xffffffec
   29e14:	bl	4a214 <flatcc_json_printer_table_as_root@@Base>
   29e18:	sub	r2, fp, #44	; 0x2c
   29e1c:	sub	r3, fp, #364	; 0x16c
   29e20:	mov	r1, r2
   29e24:	mov	r0, r3
   29e28:	bl	4ac14 <flatcc_json_printer_get_buffer@@Base>
   29e2c:	str	r0, [fp, #-28]	; 0xffffffe4
   29e30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   29e34:	cmp	r3, #0
   29e38:	beq	29e54 <test_json@@Base+0x350>
   29e3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29e40:	ldr	r0, [fp, #-376]	; 0xfffffe88
   29e44:	bl	14520 <strcmp@plt>
   29e48:	mov	r3, r0
   29e4c:	cmp	r3, #0
   29e50:	beq	29ed8 <test_json@@Base+0x3d4>
   29e54:	ldr	r3, [pc, #240]	; 29f4c <test_json@@Base+0x448>
   29e58:	ldr	r3, [r4, r3]
   29e5c:	ldr	r3, [r3]
   29e60:	ldr	r2, [fp, #12]
   29e64:	ldr	r1, [pc, #268]	; 29f78 <test_json@@Base+0x474>
   29e68:	add	r1, pc, r1
   29e6c:	mov	r0, r3
   29e70:	bl	145a4 <fprintf@plt>
   29e74:	ldr	r3, [pc, #208]	; 29f4c <test_json@@Base+0x448>
   29e78:	ldr	r3, [r4, r3]
   29e7c:	ldr	r3, [r3]
   29e80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29e84:	ldr	r1, [pc, #240]	; 29f7c <test_json@@Base+0x478>
   29e88:	add	r1, pc, r1
   29e8c:	mov	r0, r3
   29e90:	bl	145a4 <fprintf@plt>
   29e94:	ldr	r3, [pc, #176]	; 29f4c <test_json@@Base+0x448>
   29e98:	ldr	r3, [r4, r3]
   29e9c:	ldr	r3, [r3]
   29ea0:	mov	r2, #10
   29ea4:	mov	r1, #1
   29ea8:	ldr	r0, [pc, #208]	; 29f80 <test_json@@Base+0x47c>
   29eac:	add	r0, pc, r0
   29eb0:	bl	14568 <fwrite@plt>
   29eb4:	ldr	r3, [pc, #144]	; 29f4c <test_json@@Base+0x448>
   29eb8:	ldr	r3, [r4, r3]
   29ebc:	ldr	r3, [r3]
   29ec0:	ldr	r2, [fp, #-376]	; 0xfffffe88
   29ec4:	ldr	r1, [pc, #184]	; 29f84 <test_json@@Base+0x480>
   29ec8:	add	r1, pc, r1
   29ecc:	mov	r0, r3
   29ed0:	bl	145a4 <fprintf@plt>
   29ed4:	b	29f04 <test_json@@Base+0x400>
   29ed8:	mov	r3, #0
   29edc:	str	r3, [fp, #-16]
   29ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   29ee4:	bl	31b64 <flatcc_builder_aligned_free@@Base>
   29ee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   29eec:	bl	2c990 <flatcc_builder_clear@@Base>
   29ef0:	sub	r3, fp, #364	; 0x16c
   29ef4:	mov	r0, r3
   29ef8:	bl	4acc4 <flatcc_json_printer_clear@@Base>
   29efc:	ldr	r3, [fp, #-16]
   29f00:	b	29f3c <test_json@@Base+0x438>
   29f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   29f08:	cmp	r3, #0
   29f0c:	beq	29f30 <test_json@@Base+0x42c>
   29f10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29f14:	ldr	r3, [pc, #48]	; 29f4c <test_json@@Base+0x448>
   29f18:	ldr	r3, [r4, r3]
   29f1c:	ldr	r3, [r3]
   29f20:	ldr	r1, [fp, #-20]	; 0xffffffec
   29f24:	ldr	r0, [pc, #92]	; 29f88 <test_json@@Base+0x484>
   29f28:	add	r0, pc, r0
   29f2c:	bl	298f8 <_start@@Base+0x152d8>
   29f30:	mvn	r3, #0
   29f34:	str	r3, [fp, #-16]
   29f38:	b	29ee0 <test_json@@Base+0x3dc>
   29f3c:	mov	r0, r3
   29f40:	sub	sp, fp, #12
   29f44:	pop	{r4, r5, fp, pc}
   29f48:	ldrdeq	r8, [r3], -r4
   29f4c:	andeq	r0, r0, r8, rrx
   29f50:	ldrdeq	r2, [r2], -r4
   29f54:	ldrdeq	r2, [r2], -r0
   29f58:	andeq	r2, r2, ip, asr #5
   29f5c:	andeq	r2, r2, r0, lsr #5
   29f60:	andeq	r2, r2, ip, ror r2
   29f64:	muleq	r2, r0, r2
   29f68:	andeq	r2, r2, ip, lsr #4
   29f6c:	andeq	r2, r2, ip, lsr #4
   29f70:	andeq	r2, r2, r8, lsr #3
   29f74:	andeq	r2, r2, r4, lsl #4
   29f78:	andeq	r2, r2, r4, lsr #3
   29f7c:	andeq	r2, r2, ip, lsl #1
   29f80:	muleq	r2, r8, r1
   29f84:	andeq	r2, r2, ip, asr #32
   29f88:	andeq	r2, r2, r8, lsr #2

00029f8c <edge_case_tests@@Base>:
   29f8c:	push	{fp, lr}
   29f90:	add	fp, sp, #4
   29f94:	sub	sp, sp, #24
   29f98:	mov	r3, #0
   29f9c:	str	r3, [fp, #-8]
   29fa0:	ldr	r3, [pc, #632]	; 2a220 <edge_case_tests@@Base+0x294>
   29fa4:	add	r3, pc, r3
   29fa8:	str	r3, [fp, #-12]
   29fac:	mov	r3, #158	; 0x9e
   29fb0:	str	r3, [sp, #8]
   29fb4:	mov	r3, #0
   29fb8:	str	r3, [sp, #4]
   29fbc:	mov	r3, #0
   29fc0:	str	r3, [sp]
   29fc4:	mov	r3, #0
   29fc8:	ldr	r2, [pc, #596]	; 2a224 <edge_case_tests@@Base+0x298>
   29fcc:	add	r2, pc, r2
   29fd0:	ldr	r1, [pc, #592]	; 2a228 <edge_case_tests@@Base+0x29c>
   29fd4:	add	r1, pc, r1
   29fd8:	ldr	r0, [fp, #-12]
   29fdc:	bl	29b04 <test_json@@Base>
   29fe0:	mov	r2, r0
   29fe4:	ldr	r3, [fp, #-8]
   29fe8:	orr	r3, r3, r2
   29fec:	str	r3, [fp, #-8]
   29ff0:	mov	r3, #168	; 0xa8
   29ff4:	str	r3, [sp, #8]
   29ff8:	mov	r3, #0
   29ffc:	str	r3, [sp, #4]
   2a000:	mov	r3, #2
   2a004:	str	r3, [sp]
   2a008:	mov	r3, #0
   2a00c:	ldr	r2, [pc, #536]	; 2a22c <edge_case_tests@@Base+0x2a0>
   2a010:	add	r2, pc, r2
   2a014:	ldr	r1, [pc, #532]	; 2a230 <edge_case_tests@@Base+0x2a4>
   2a018:	add	r1, pc, r1
   2a01c:	ldr	r0, [fp, #-12]
   2a020:	bl	29b04 <test_json@@Base>
   2a024:	mov	r2, r0
   2a028:	ldr	r3, [fp, #-8]
   2a02c:	orr	r3, r3, r2
   2a030:	str	r3, [fp, #-8]
   2a034:	mov	r3, #172	; 0xac
   2a038:	str	r3, [sp, #8]
   2a03c:	mov	r3, #2
   2a040:	str	r3, [sp, #4]
   2a044:	mov	r3, #0
   2a048:	str	r3, [sp]
   2a04c:	mov	r3, #0
   2a050:	ldr	r2, [pc, #476]	; 2a234 <edge_case_tests@@Base+0x2a8>
   2a054:	add	r2, pc, r2
   2a058:	ldr	r1, [pc, #472]	; 2a238 <edge_case_tests@@Base+0x2ac>
   2a05c:	add	r1, pc, r1
   2a060:	ldr	r0, [fp, #-12]
   2a064:	bl	29b04 <test_json@@Base>
   2a068:	mov	r2, r0
   2a06c:	ldr	r3, [fp, #-8]
   2a070:	orr	r3, r3, r2
   2a074:	str	r3, [fp, #-8]
   2a078:	mov	r3, #176	; 0xb0
   2a07c:	str	r3, [sp, #8]
   2a080:	mov	r3, #4
   2a084:	str	r3, [sp, #4]
   2a088:	mov	r3, #2
   2a08c:	str	r3, [sp]
   2a090:	mov	r3, #0
   2a094:	ldr	r2, [pc, #416]	; 2a23c <edge_case_tests@@Base+0x2b0>
   2a098:	add	r2, pc, r2
   2a09c:	ldr	r1, [pc, #412]	; 2a240 <edge_case_tests@@Base+0x2b4>
   2a0a0:	add	r1, pc, r1
   2a0a4:	ldr	r0, [fp, #-12]
   2a0a8:	bl	29b04 <test_json@@Base>
   2a0ac:	mov	r2, r0
   2a0b0:	ldr	r3, [fp, #-8]
   2a0b4:	orr	r3, r3, r2
   2a0b8:	str	r3, [fp, #-8]
   2a0bc:	mov	r3, #180	; 0xb4
   2a0c0:	str	r3, [sp, #8]
   2a0c4:	mov	r3, #8
   2a0c8:	str	r3, [sp, #4]
   2a0cc:	mov	r3, #0
   2a0d0:	str	r3, [sp]
   2a0d4:	mov	r3, #0
   2a0d8:	ldr	r2, [pc, #356]	; 2a244 <edge_case_tests@@Base+0x2b8>
   2a0dc:	add	r2, pc, r2
   2a0e0:	ldr	r1, [pc, #352]	; 2a248 <edge_case_tests@@Base+0x2bc>
   2a0e4:	add	r1, pc, r1
   2a0e8:	ldr	r0, [fp, #-12]
   2a0ec:	bl	29b04 <test_json@@Base>
   2a0f0:	mov	r2, r0
   2a0f4:	ldr	r3, [fp, #-8]
   2a0f8:	orr	r3, r3, r2
   2a0fc:	str	r3, [fp, #-8]
   2a100:	mov	r3, #195	; 0xc3
   2a104:	str	r3, [sp, #8]
   2a108:	mov	r3, #0
   2a10c:	str	r3, [sp, #4]
   2a110:	mov	r3, #2
   2a114:	str	r3, [sp]
   2a118:	mov	r3, #0
   2a11c:	ldr	r2, [pc, #296]	; 2a24c <edge_case_tests@@Base+0x2c0>
   2a120:	add	r2, pc, r2
   2a124:	ldr	r1, [pc, #292]	; 2a250 <edge_case_tests@@Base+0x2c4>
   2a128:	add	r1, pc, r1
   2a12c:	ldr	r0, [fp, #-12]
   2a130:	bl	29b04 <test_json@@Base>
   2a134:	mov	r2, r0
   2a138:	ldr	r3, [fp, #-8]
   2a13c:	orr	r3, r3, r2
   2a140:	str	r3, [fp, #-8]
   2a144:	mov	r3, #199	; 0xc7
   2a148:	str	r3, [sp, #8]
   2a14c:	mov	r3, #0
   2a150:	str	r3, [sp, #4]
   2a154:	mov	r3, #1
   2a158:	str	r3, [sp]
   2a15c:	mov	r3, #0
   2a160:	ldr	r2, [pc, #236]	; 2a254 <edge_case_tests@@Base+0x2c8>
   2a164:	add	r2, pc, r2
   2a168:	ldr	r1, [pc, #232]	; 2a258 <edge_case_tests@@Base+0x2cc>
   2a16c:	add	r1, pc, r1
   2a170:	ldr	r0, [fp, #-12]
   2a174:	bl	29b04 <test_json@@Base>
   2a178:	mov	r2, r0
   2a17c:	ldr	r3, [fp, #-8]
   2a180:	orr	r3, r3, r2
   2a184:	str	r3, [fp, #-8]
   2a188:	mov	r3, #203	; 0xcb
   2a18c:	str	r3, [sp, #8]
   2a190:	mov	r3, #1
   2a194:	str	r3, [sp, #4]
   2a198:	mov	r3, #1
   2a19c:	str	r3, [sp]
   2a1a0:	mov	r3, #0
   2a1a4:	ldr	r2, [pc, #176]	; 2a25c <edge_case_tests@@Base+0x2d0>
   2a1a8:	add	r2, pc, r2
   2a1ac:	ldr	r1, [pc, #172]	; 2a260 <edge_case_tests@@Base+0x2d4>
   2a1b0:	add	r1, pc, r1
   2a1b4:	ldr	r0, [fp, #-12]
   2a1b8:	bl	29b04 <test_json@@Base>
   2a1bc:	mov	r2, r0
   2a1c0:	ldr	r3, [fp, #-8]
   2a1c4:	orr	r3, r3, r2
   2a1c8:	str	r3, [fp, #-8]
   2a1cc:	mov	r3, #209	; 0xd1
   2a1d0:	str	r3, [sp, #8]
   2a1d4:	mov	r3, #0
   2a1d8:	str	r3, [sp, #4]
   2a1dc:	mov	r3, #1
   2a1e0:	str	r3, [sp]
   2a1e4:	mov	r3, #0
   2a1e8:	ldr	r2, [pc, #116]	; 2a264 <edge_case_tests@@Base+0x2d8>
   2a1ec:	add	r2, pc, r2
   2a1f0:	ldr	r1, [pc, #112]	; 2a268 <edge_case_tests@@Base+0x2dc>
   2a1f4:	add	r1, pc, r1
   2a1f8:	ldr	r0, [fp, #-12]
   2a1fc:	bl	29b04 <test_json@@Base>
   2a200:	mov	r2, r0
   2a204:	ldr	r3, [fp, #-8]
   2a208:	orr	r3, r3, r2
   2a20c:	str	r3, [fp, #-8]
   2a210:	ldr	r3, [fp, #-8]
   2a214:	mov	r0, r3
   2a218:	sub	sp, fp, #4
   2a21c:	pop	{fp, pc}
   2a220:	andeq	r7, r3, ip, lsr pc
   2a224:	muleq	r2, r4, r0
   2a228:	andeq	r2, r2, ip, lsr #1
   2a22c:	andeq	r2, r2, r8, lsr #1
   2a230:	andeq	r2, r2, r4, asr #1
   2a234:	andeq	r2, r2, ip, lsr #1
   2a238:	andeq	r2, r2, r4, asr #1
   2a23c:	strheq	r2, [r2], -r0
   2a240:	andeq	r2, r2, ip, lsr r0
   2a244:	andeq	r2, r2, r0, lsl #1
   2a248:	andeq	r2, r2, ip, lsl #3
   2a24c:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   2a250:	andeq	r2, r2, ip, ror #2
   2a254:	andeq	r2, r2, r8, asr r1
   2a258:	andeq	r2, r2, ip, ror #2
   2a25c:	andeq	r2, r2, r4, ror #2
   2a260:	andeq	r2, r2, r8, lsr #2
   2a264:	ldrdeq	r2, [r2], -r0
   2a268:	andeq	r2, r2, r0, lsr r1

0002a26c <error_case_tests@@Base>:
   2a26c:	push	{fp, lr}
   2a270:	add	fp, sp, #4
   2a274:	sub	sp, sp, #24
   2a278:	mov	r3, #0
   2a27c:	str	r3, [fp, #-8]
   2a280:	ldr	r3, [pc, #788]	; 2a59c <error_case_tests@@Base+0x330>
   2a284:	add	r3, pc, r3
   2a288:	str	r3, [fp, #-12]
   2a28c:	ldr	r3, [pc, #780]	; 2a5a0 <error_case_tests@@Base+0x334>
   2a290:	str	r3, [sp, #8]
   2a294:	mov	r3, #0
   2a298:	str	r3, [sp, #4]
   2a29c:	mov	r3, #0
   2a2a0:	str	r3, [sp]
   2a2a4:	mov	r3, #13
   2a2a8:	mov	r2, #0
   2a2ac:	ldr	r1, [pc, #752]	; 2a5a4 <error_case_tests@@Base+0x338>
   2a2b0:	add	r1, pc, r1
   2a2b4:	ldr	r0, [fp, #-12]
   2a2b8:	bl	29b04 <test_json@@Base>
   2a2bc:	mov	r2, r0
   2a2c0:	ldr	r3, [fp, #-8]
   2a2c4:	orr	r3, r3, r2
   2a2c8:	str	r3, [fp, #-8]
   2a2cc:	ldr	r3, [pc, #724]	; 2a5a8 <error_case_tests@@Base+0x33c>
   2a2d0:	str	r3, [sp, #8]
   2a2d4:	mov	r3, #0
   2a2d8:	str	r3, [sp, #4]
   2a2dc:	mov	r3, #0
   2a2e0:	str	r3, [sp]
   2a2e4:	mov	r3, #13
   2a2e8:	mov	r2, #0
   2a2ec:	ldr	r1, [pc, #696]	; 2a5ac <error_case_tests@@Base+0x340>
   2a2f0:	add	r1, pc, r1
   2a2f4:	ldr	r0, [fp, #-12]
   2a2f8:	bl	29b04 <test_json@@Base>
   2a2fc:	mov	r2, r0
   2a300:	ldr	r3, [fp, #-8]
   2a304:	orr	r3, r3, r2
   2a308:	str	r3, [fp, #-8]
   2a30c:	ldr	r3, [pc, #668]	; 2a5b0 <error_case_tests@@Base+0x344>
   2a310:	str	r3, [sp, #8]
   2a314:	mov	r3, #0
   2a318:	str	r3, [sp, #4]
   2a31c:	mov	r3, #0
   2a320:	str	r3, [sp]
   2a324:	mov	r3, #13
   2a328:	mov	r2, #0
   2a32c:	ldr	r1, [pc, #640]	; 2a5b4 <error_case_tests@@Base+0x348>
   2a330:	add	r1, pc, r1
   2a334:	ldr	r0, [fp, #-12]
   2a338:	bl	29b04 <test_json@@Base>
   2a33c:	mov	r2, r0
   2a340:	ldr	r3, [fp, #-8]
   2a344:	orr	r3, r3, r2
   2a348:	str	r3, [fp, #-8]
   2a34c:	ldr	r3, [pc, #612]	; 2a5b8 <error_case_tests@@Base+0x34c>
   2a350:	str	r3, [sp, #8]
   2a354:	mov	r3, #0
   2a358:	str	r3, [sp, #4]
   2a35c:	mov	r3, #0
   2a360:	str	r3, [sp]
   2a364:	mov	r3, #13
   2a368:	mov	r2, #0
   2a36c:	ldr	r1, [pc, #584]	; 2a5bc <error_case_tests@@Base+0x350>
   2a370:	add	r1, pc, r1
   2a374:	ldr	r0, [fp, #-12]
   2a378:	bl	29b04 <test_json@@Base>
   2a37c:	mov	r2, r0
   2a380:	ldr	r3, [fp, #-8]
   2a384:	orr	r3, r3, r2
   2a388:	str	r3, [fp, #-8]
   2a38c:	ldr	r3, [pc, #556]	; 2a5c0 <error_case_tests@@Base+0x354>
   2a390:	str	r3, [sp, #8]
   2a394:	mov	r3, #0
   2a398:	str	r3, [sp, #4]
   2a39c:	mov	r3, #0
   2a3a0:	str	r3, [sp]
   2a3a4:	mov	r3, #13
   2a3a8:	mov	r2, #0
   2a3ac:	ldr	r1, [pc, #528]	; 2a5c4 <error_case_tests@@Base+0x358>
   2a3b0:	add	r1, pc, r1
   2a3b4:	ldr	r0, [fp, #-12]
   2a3b8:	bl	29b04 <test_json@@Base>
   2a3bc:	mov	r2, r0
   2a3c0:	ldr	r3, [fp, #-8]
   2a3c4:	orr	r3, r3, r2
   2a3c8:	str	r3, [fp, #-8]
   2a3cc:	mov	r3, #296	; 0x128
   2a3d0:	str	r3, [sp, #8]
   2a3d4:	mov	r3, #0
   2a3d8:	str	r3, [sp, #4]
   2a3dc:	mov	r3, #0
   2a3e0:	str	r3, [sp]
   2a3e4:	mov	r3, #13
   2a3e8:	mov	r2, #0
   2a3ec:	ldr	r1, [pc, #468]	; 2a5c8 <error_case_tests@@Base+0x35c>
   2a3f0:	add	r1, pc, r1
   2a3f4:	ldr	r0, [fp, #-12]
   2a3f8:	bl	29b04 <test_json@@Base>
   2a3fc:	mov	r2, r0
   2a400:	ldr	r3, [fp, #-8]
   2a404:	orr	r3, r3, r2
   2a408:	str	r3, [fp, #-8]
   2a40c:	ldr	r3, [pc, #440]	; 2a5cc <error_case_tests@@Base+0x360>
   2a410:	str	r3, [sp, #8]
   2a414:	mov	r3, #0
   2a418:	str	r3, [sp, #4]
   2a41c:	mov	r3, #0
   2a420:	str	r3, [sp]
   2a424:	mov	r3, #13
   2a428:	mov	r2, #0
   2a42c:	ldr	r1, [pc, #412]	; 2a5d0 <error_case_tests@@Base+0x364>
   2a430:	add	r1, pc, r1
   2a434:	ldr	r0, [fp, #-12]
   2a438:	bl	29b04 <test_json@@Base>
   2a43c:	mov	r2, r0
   2a440:	ldr	r3, [fp, #-8]
   2a444:	orr	r3, r3, r2
   2a448:	str	r3, [fp, #-8]
   2a44c:	ldr	r3, [pc, #384]	; 2a5d4 <error_case_tests@@Base+0x368>
   2a450:	str	r3, [sp, #8]
   2a454:	mov	r3, #0
   2a458:	str	r3, [sp, #4]
   2a45c:	mov	r3, #0
   2a460:	str	r3, [sp]
   2a464:	mov	r3, #13
   2a468:	mov	r2, #0
   2a46c:	ldr	r1, [pc, #356]	; 2a5d8 <error_case_tests@@Base+0x36c>
   2a470:	add	r1, pc, r1
   2a474:	ldr	r0, [fp, #-12]
   2a478:	bl	29b04 <test_json@@Base>
   2a47c:	mov	r2, r0
   2a480:	ldr	r3, [fp, #-8]
   2a484:	orr	r3, r3, r2
   2a488:	str	r3, [fp, #-8]
   2a48c:	ldr	r3, [pc, #328]	; 2a5dc <error_case_tests@@Base+0x370>
   2a490:	str	r3, [sp, #8]
   2a494:	mov	r3, #0
   2a498:	str	r3, [sp, #4]
   2a49c:	mov	r3, #0
   2a4a0:	str	r3, [sp]
   2a4a4:	mov	r3, #13
   2a4a8:	mov	r2, #0
   2a4ac:	ldr	r1, [pc, #300]	; 2a5e0 <error_case_tests@@Base+0x374>
   2a4b0:	add	r1, pc, r1
   2a4b4:	ldr	r0, [fp, #-12]
   2a4b8:	bl	29b04 <test_json@@Base>
   2a4bc:	mov	r2, r0
   2a4c0:	ldr	r3, [fp, #-8]
   2a4c4:	orr	r3, r3, r2
   2a4c8:	str	r3, [fp, #-8]
   2a4cc:	ldr	r3, [pc, #272]	; 2a5e4 <error_case_tests@@Base+0x378>
   2a4d0:	str	r3, [sp, #8]
   2a4d4:	mov	r3, #0
   2a4d8:	str	r3, [sp, #4]
   2a4dc:	mov	r3, #0
   2a4e0:	str	r3, [sp]
   2a4e4:	mov	r3, #5
   2a4e8:	mov	r2, #0
   2a4ec:	ldr	r1, [pc, #244]	; 2a5e8 <error_case_tests@@Base+0x37c>
   2a4f0:	add	r1, pc, r1
   2a4f4:	ldr	r0, [fp, #-12]
   2a4f8:	bl	29b04 <test_json@@Base>
   2a4fc:	mov	r2, r0
   2a500:	ldr	r3, [fp, #-8]
   2a504:	orr	r3, r3, r2
   2a508:	str	r3, [fp, #-8]
   2a50c:	ldr	r3, [pc, #216]	; 2a5ec <error_case_tests@@Base+0x380>
   2a510:	str	r3, [sp, #8]
   2a514:	mov	r3, #0
   2a518:	str	r3, [sp, #4]
   2a51c:	mov	r3, #0
   2a520:	str	r3, [sp]
   2a524:	mov	r3, #5
   2a528:	mov	r2, #0
   2a52c:	ldr	r1, [pc, #188]	; 2a5f0 <error_case_tests@@Base+0x384>
   2a530:	add	r1, pc, r1
   2a534:	ldr	r0, [fp, #-12]
   2a538:	bl	29b04 <test_json@@Base>
   2a53c:	mov	r2, r0
   2a540:	ldr	r3, [fp, #-8]
   2a544:	orr	r3, r3, r2
   2a548:	str	r3, [fp, #-8]
   2a54c:	ldr	r3, [pc, #160]	; 2a5f4 <error_case_tests@@Base+0x388>
   2a550:	str	r3, [sp, #8]
   2a554:	mov	r3, #0
   2a558:	str	r3, [sp, #4]
   2a55c:	mov	r3, #0
   2a560:	str	r3, [sp]
   2a564:	mov	r3, #5
   2a568:	mov	r2, #0
   2a56c:	ldr	r1, [pc, #132]	; 2a5f8 <error_case_tests@@Base+0x38c>
   2a570:	add	r1, pc, r1
   2a574:	ldr	r0, [fp, #-12]
   2a578:	bl	29b04 <test_json@@Base>
   2a57c:	mov	r2, r0
   2a580:	ldr	r3, [fp, #-8]
   2a584:	orr	r3, r3, r2
   2a588:	str	r3, [fp, #-8]
   2a58c:	ldr	r3, [fp, #-8]
   2a590:	mov	r0, r3
   2a594:	sub	sp, fp, #4
   2a598:	pop	{fp, pc}
   2a59c:	andeq	r7, r3, ip, asr ip
   2a5a0:	andeq	r0, r0, sp, lsl r1
   2a5a4:	andeq	r2, r2, r8, ror #1
   2a5a8:	andeq	r0, r0, pc, lsl r1
   2a5ac:	andeq	r2, r2, r4, asr #1
   2a5b0:	andeq	r0, r0, r1, lsr #2
   2a5b4:	andeq	r2, r2, r8, ror #1
   2a5b8:	andeq	r0, r0, r3, lsr #2
   2a5bc:	andeq	r2, r2, r8, lsl #2
   2a5c0:	andeq	r0, r0, r5, lsr #2
   2a5c4:	andeq	r2, r2, r0, lsr #2
   2a5c8:	andeq	r2, r2, r8, lsr r1
   2a5cc:	andeq	r0, r0, fp, lsr #2
   2a5d0:	muleq	r2, r8, r1
   2a5d4:	andeq	r0, r0, pc, lsr #2
   2a5d8:	strdeq	r2, [r2], -r4
   2a5dc:	andeq	r0, r0, r3, lsr r1
   2a5e0:	andeq	r2, r2, ip, ror r2
   2a5e4:	andeq	r0, r0, r7, lsr r1
   2a5e8:	andeq	r2, r2, r4, lsl #6
   2a5ec:	andeq	r0, r0, sl, lsr r1
   2a5f0:	ldrdeq	r2, [r2], -ip
   2a5f4:	andeq	r0, r0, sp, lsr r1
   2a5f8:	andeq	r2, r2, r4, asr #5

0002a5fc <base64_tests@@Base>:
   2a5fc:	push	{fp, lr}
   2a600:	add	fp, sp, #4
   2a604:	sub	sp, sp, #24
   2a608:	mov	r3, #0
   2a60c:	str	r3, [fp, #-8]
   2a610:	ldr	r3, [pc, #556]	; 2a844 <base64_tests@@Base+0x248>
   2a614:	add	r3, pc, r3
   2a618:	str	r3, [fp, #-12]
   2a61c:	ldr	r3, [pc, #548]	; 2a848 <base64_tests@@Base+0x24c>
   2a620:	str	r3, [sp, #8]
   2a624:	mov	r3, #0
   2a628:	str	r3, [sp, #4]
   2a62c:	mov	r3, #0
   2a630:	str	r3, [sp]
   2a634:	mov	r3, #0
   2a638:	ldr	r2, [pc, #524]	; 2a84c <base64_tests@@Base+0x250>
   2a63c:	add	r2, pc, r2
   2a640:	ldr	r1, [pc, #520]	; 2a850 <base64_tests@@Base+0x254>
   2a644:	add	r1, pc, r1
   2a648:	ldr	r0, [fp, #-12]
   2a64c:	bl	29b04 <test_json@@Base>
   2a650:	mov	r2, r0
   2a654:	ldr	r3, [fp, #-8]
   2a658:	orr	r3, r3, r2
   2a65c:	str	r3, [fp, #-8]
   2a660:	mov	r3, #372	; 0x174
   2a664:	str	r3, [sp, #8]
   2a668:	mov	r3, #0
   2a66c:	str	r3, [sp, #4]
   2a670:	mov	r3, #0
   2a674:	str	r3, [sp]
   2a678:	mov	r3, #0
   2a67c:	ldr	r2, [pc, #464]	; 2a854 <base64_tests@@Base+0x258>
   2a680:	add	r2, pc, r2
   2a684:	ldr	r1, [pc, #460]	; 2a858 <base64_tests@@Base+0x25c>
   2a688:	add	r1, pc, r1
   2a68c:	ldr	r0, [fp, #-12]
   2a690:	bl	29b04 <test_json@@Base>
   2a694:	mov	r2, r0
   2a698:	ldr	r3, [fp, #-8]
   2a69c:	orr	r3, r3, r2
   2a6a0:	str	r3, [fp, #-8]
   2a6a4:	mov	r3, #376	; 0x178
   2a6a8:	str	r3, [sp, #8]
   2a6ac:	mov	r3, #0
   2a6b0:	str	r3, [sp, #4]
   2a6b4:	mov	r3, #0
   2a6b8:	str	r3, [sp]
   2a6bc:	mov	r3, #0
   2a6c0:	ldr	r2, [pc, #404]	; 2a85c <base64_tests@@Base+0x260>
   2a6c4:	add	r2, pc, r2
   2a6c8:	ldr	r1, [pc, #400]	; 2a860 <base64_tests@@Base+0x264>
   2a6cc:	add	r1, pc, r1
   2a6d0:	ldr	r0, [fp, #-12]
   2a6d4:	bl	29b04 <test_json@@Base>
   2a6d8:	mov	r2, r0
   2a6dc:	ldr	r3, [fp, #-8]
   2a6e0:	orr	r3, r3, r2
   2a6e4:	str	r3, [fp, #-8]
   2a6e8:	ldr	r3, [pc, #372]	; 2a864 <base64_tests@@Base+0x268>
   2a6ec:	str	r3, [sp, #8]
   2a6f0:	mov	r3, #0
   2a6f4:	str	r3, [sp, #4]
   2a6f8:	mov	r3, #0
   2a6fc:	str	r3, [sp]
   2a700:	mov	r3, #0
   2a704:	ldr	r2, [pc, #348]	; 2a868 <base64_tests@@Base+0x26c>
   2a708:	add	r2, pc, r2
   2a70c:	ldr	r1, [pc, #344]	; 2a86c <base64_tests@@Base+0x270>
   2a710:	add	r1, pc, r1
   2a714:	ldr	r0, [fp, #-12]
   2a718:	bl	29b04 <test_json@@Base>
   2a71c:	mov	r2, r0
   2a720:	ldr	r3, [fp, #-8]
   2a724:	orr	r3, r3, r2
   2a728:	str	r3, [fp, #-8]
   2a72c:	ldr	r3, [pc, #316]	; 2a870 <base64_tests@@Base+0x274>
   2a730:	str	r3, [sp, #8]
   2a734:	mov	r3, #0
   2a738:	str	r3, [sp, #4]
   2a73c:	mov	r3, #0
   2a740:	str	r3, [sp]
   2a744:	mov	r3, #0
   2a748:	ldr	r2, [pc, #292]	; 2a874 <base64_tests@@Base+0x278>
   2a74c:	add	r2, pc, r2
   2a750:	ldr	r1, [pc, #288]	; 2a878 <base64_tests@@Base+0x27c>
   2a754:	add	r1, pc, r1
   2a758:	ldr	r0, [fp, #-12]
   2a75c:	bl	29b04 <test_json@@Base>
   2a760:	mov	r2, r0
   2a764:	ldr	r3, [fp, #-8]
   2a768:	orr	r3, r3, r2
   2a76c:	str	r3, [fp, #-8]
   2a770:	ldr	r3, [pc, #260]	; 2a87c <base64_tests@@Base+0x280>
   2a774:	str	r3, [sp, #8]
   2a778:	mov	r3, #0
   2a77c:	str	r3, [sp, #4]
   2a780:	mov	r3, #0
   2a784:	str	r3, [sp]
   2a788:	mov	r3, #0
   2a78c:	ldr	r2, [pc, #236]	; 2a880 <base64_tests@@Base+0x284>
   2a790:	add	r2, pc, r2
   2a794:	ldr	r1, [pc, #232]	; 2a884 <base64_tests@@Base+0x288>
   2a798:	add	r1, pc, r1
   2a79c:	ldr	r0, [fp, #-12]
   2a7a0:	bl	29b04 <test_json@@Base>
   2a7a4:	mov	r2, r0
   2a7a8:	ldr	r3, [fp, #-8]
   2a7ac:	orr	r3, r3, r2
   2a7b0:	str	r3, [fp, #-8]
   2a7b4:	mov	r3, #388	; 0x184
   2a7b8:	str	r3, [sp, #8]
   2a7bc:	mov	r3, #0
   2a7c0:	str	r3, [sp, #4]
   2a7c4:	mov	r3, #0
   2a7c8:	str	r3, [sp]
   2a7cc:	mov	r3, #31
   2a7d0:	mov	r2, #0
   2a7d4:	ldr	r1, [pc, #172]	; 2a888 <base64_tests@@Base+0x28c>
   2a7d8:	add	r1, pc, r1
   2a7dc:	ldr	r0, [fp, #-12]
   2a7e0:	bl	29b04 <test_json@@Base>
   2a7e4:	mov	r2, r0
   2a7e8:	ldr	r3, [fp, #-8]
   2a7ec:	orr	r3, r3, r2
   2a7f0:	str	r3, [fp, #-8]
   2a7f4:	ldr	r3, [pc, #144]	; 2a88c <base64_tests@@Base+0x290>
   2a7f8:	str	r3, [sp, #8]
   2a7fc:	mov	r3, #0
   2a800:	str	r3, [sp, #4]
   2a804:	mov	r3, #0
   2a808:	str	r3, [sp]
   2a80c:	mov	r3, #32
   2a810:	mov	r2, #0
   2a814:	ldr	r1, [pc, #116]	; 2a890 <base64_tests@@Base+0x294>
   2a818:	add	r1, pc, r1
   2a81c:	ldr	r0, [fp, #-12]
   2a820:	bl	29b04 <test_json@@Base>
   2a824:	mov	r2, r0
   2a828:	ldr	r3, [fp, #-8]
   2a82c:	orr	r3, r3, r2
   2a830:	str	r3, [fp, #-8]
   2a834:	ldr	r3, [fp, #-8]
   2a838:	mov	r0, r3
   2a83c:	sub	sp, fp, #4
   2a840:	pop	{fp, pc}
   2a844:	andeq	r7, r3, ip, asr #17
   2a848:	andeq	r0, r0, r1, ror r1
   2a84c:	andeq	r1, r2, ip, lsl #22
   2a850:	andeq	r2, r2, r8, lsr #4
   2a854:	andeq	r2, r2, r4, lsl #4
   2a858:	andeq	r2, r2, r0, lsr #4
   2a85c:	andeq	r2, r2, ip, lsl #4
   2a860:			; <UNDEFINED> instruction: 0x000222b8
   2a864:	andeq	r0, r0, fp, ror r1
   2a868:	andeq	r2, r2, r8, lsr r3
   2a86c:	andeq	r2, r2, r8, ror #7
   2a870:	andeq	r0, r0, lr, ror r1
   2a874:	andeq	r2, r2, r4, lsl #3
   2a878:	andeq	r2, r2, r0, ror #8
   2a87c:	andeq	r0, r0, r1, lsl #3
   2a880:			; <UNDEFINED> instruction: 0x000222b0
   2a884:	ldrdeq	r2, [r2], -r4
   2a888:	andeq	r2, r2, r0, asr r5
   2a88c:	andeq	r0, r0, r7, lsl #3
   2a890:	andeq	r2, r2, ip, asr #11

0002a894 <mixed_type_union_tests@@Base>:
   2a894:	push	{fp, lr}
   2a898:	add	fp, sp, #4
   2a89c:	sub	sp, sp, #24
   2a8a0:	mov	r3, #0
   2a8a4:	str	r3, [fp, #-8]
   2a8a8:	ldr	r3, [pc, #496]	; 2aaa0 <mixed_type_union_tests@@Base+0x20c>
   2a8ac:	add	r3, pc, r3
   2a8b0:	str	r3, [fp, #-12]
   2a8b4:	mov	r3, #432	; 0x1b0
   2a8b8:	str	r3, [sp, #8]
   2a8bc:	mov	r3, #0
   2a8c0:	str	r3, [sp, #4]
   2a8c4:	mov	r3, #0
   2a8c8:	str	r3, [sp]
   2a8cc:	mov	r3, #0
   2a8d0:	ldr	r2, [pc, #460]	; 2aaa4 <mixed_type_union_tests@@Base+0x210>
   2a8d4:	add	r2, pc, r2
   2a8d8:	ldr	r1, [pc, #456]	; 2aaa8 <mixed_type_union_tests@@Base+0x214>
   2a8dc:	add	r1, pc, r1
   2a8e0:	ldr	r0, [fp, #-12]
   2a8e4:	bl	29b04 <test_json@@Base>
   2a8e8:	mov	r2, r0
   2a8ec:	ldr	r3, [fp, #-8]
   2a8f0:	orr	r3, r3, r2
   2a8f4:	str	r3, [fp, #-8]
   2a8f8:	ldr	r3, [pc, #428]	; 2aaac <mixed_type_union_tests@@Base+0x218>
   2a8fc:	str	r3, [sp, #8]
   2a900:	mov	r3, #0
   2a904:	str	r3, [sp, #4]
   2a908:	mov	r3, #0
   2a90c:	str	r3, [sp]
   2a910:	mov	r3, #0
   2a914:	ldr	r2, [pc, #404]	; 2aab0 <mixed_type_union_tests@@Base+0x21c>
   2a918:	add	r2, pc, r2
   2a91c:	ldr	r1, [pc, #400]	; 2aab4 <mixed_type_union_tests@@Base+0x220>
   2a920:	add	r1, pc, r1
   2a924:	ldr	r0, [fp, #-12]
   2a928:	bl	29b04 <test_json@@Base>
   2a92c:	mov	r2, r0
   2a930:	ldr	r3, [fp, #-8]
   2a934:	orr	r3, r3, r2
   2a938:	str	r3, [fp, #-8]
   2a93c:	ldr	r3, [pc, #372]	; 2aab8 <mixed_type_union_tests@@Base+0x224>
   2a940:	str	r3, [sp, #8]
   2a944:	mov	r3, #0
   2a948:	str	r3, [sp, #4]
   2a94c:	mov	r3, #0
   2a950:	str	r3, [sp]
   2a954:	mov	r3, #0
   2a958:	ldr	r2, [pc, #348]	; 2aabc <mixed_type_union_tests@@Base+0x228>
   2a95c:	add	r2, pc, r2
   2a960:	ldr	r1, [pc, #344]	; 2aac0 <mixed_type_union_tests@@Base+0x22c>
   2a964:	add	r1, pc, r1
   2a968:	ldr	r0, [fp, #-12]
   2a96c:	bl	29b04 <test_json@@Base>
   2a970:	mov	r2, r0
   2a974:	ldr	r3, [fp, #-8]
   2a978:	orr	r3, r3, r2
   2a97c:	str	r3, [fp, #-8]
   2a980:	ldr	r3, [pc, #316]	; 2aac4 <mixed_type_union_tests@@Base+0x230>
   2a984:	str	r3, [sp, #8]
   2a988:	mov	r3, #0
   2a98c:	str	r3, [sp, #4]
   2a990:	mov	r3, #0
   2a994:	str	r3, [sp]
   2a998:	mov	r3, #0
   2a99c:	ldr	r2, [pc, #292]	; 2aac8 <mixed_type_union_tests@@Base+0x234>
   2a9a0:	add	r2, pc, r2
   2a9a4:	ldr	r1, [pc, #288]	; 2aacc <mixed_type_union_tests@@Base+0x238>
   2a9a8:	add	r1, pc, r1
   2a9ac:	ldr	r0, [fp, #-12]
   2a9b0:	bl	29b04 <test_json@@Base>
   2a9b4:	mov	r2, r0
   2a9b8:	ldr	r3, [fp, #-8]
   2a9bc:	orr	r3, r3, r2
   2a9c0:	str	r3, [fp, #-8]
   2a9c4:	ldr	r3, [pc, #260]	; 2aad0 <mixed_type_union_tests@@Base+0x23c>
   2a9c8:	str	r3, [sp, #8]
   2a9cc:	mov	r3, #0
   2a9d0:	str	r3, [sp, #4]
   2a9d4:	mov	r3, #0
   2a9d8:	str	r3, [sp]
   2a9dc:	mov	r3, #0
   2a9e0:	ldr	r2, [pc, #236]	; 2aad4 <mixed_type_union_tests@@Base+0x240>
   2a9e4:	add	r2, pc, r2
   2a9e8:	ldr	r1, [pc, #232]	; 2aad8 <mixed_type_union_tests@@Base+0x244>
   2a9ec:	add	r1, pc, r1
   2a9f0:	ldr	r0, [fp, #-12]
   2a9f4:	bl	29b04 <test_json@@Base>
   2a9f8:	mov	r2, r0
   2a9fc:	ldr	r3, [fp, #-8]
   2aa00:	orr	r3, r3, r2
   2aa04:	str	r3, [fp, #-8]
   2aa08:	ldr	r3, [pc, #204]	; 2aadc <mixed_type_union_tests@@Base+0x248>
   2aa0c:	str	r3, [sp, #8]
   2aa10:	mov	r3, #0
   2aa14:	str	r3, [sp, #4]
   2aa18:	mov	r3, #0
   2aa1c:	str	r3, [sp]
   2aa20:	mov	r3, #0
   2aa24:	ldr	r2, [pc, #180]	; 2aae0 <mixed_type_union_tests@@Base+0x24c>
   2aa28:	add	r2, pc, r2
   2aa2c:	ldr	r1, [pc, #176]	; 2aae4 <mixed_type_union_tests@@Base+0x250>
   2aa30:	add	r1, pc, r1
   2aa34:	ldr	r0, [fp, #-12]
   2aa38:	bl	29b04 <test_json@@Base>
   2aa3c:	mov	r2, r0
   2aa40:	ldr	r3, [fp, #-8]
   2aa44:	orr	r3, r3, r2
   2aa48:	str	r3, [fp, #-8]
   2aa4c:	ldr	r3, [pc, #148]	; 2aae8 <mixed_type_union_tests@@Base+0x254>
   2aa50:	str	r3, [sp, #8]
   2aa54:	mov	r3, #0
   2aa58:	str	r3, [sp, #4]
   2aa5c:	mov	r3, #0
   2aa60:	str	r3, [sp]
   2aa64:	mov	r3, #0
   2aa68:	ldr	r2, [pc, #124]	; 2aaec <mixed_type_union_tests@@Base+0x258>
   2aa6c:	add	r2, pc, r2
   2aa70:	ldr	r1, [pc, #120]	; 2aaf0 <mixed_type_union_tests@@Base+0x25c>
   2aa74:	add	r1, pc, r1
   2aa78:	ldr	r0, [fp, #-12]
   2aa7c:	bl	29b04 <test_json@@Base>
   2aa80:	mov	r2, r0
   2aa84:	ldr	r3, [fp, #-8]
   2aa88:	orr	r3, r3, r2
   2aa8c:	str	r3, [fp, #-8]
   2aa90:	ldr	r3, [fp, #-8]
   2aa94:	mov	r0, r3
   2aa98:	sub	sp, fp, #4
   2aa9c:	pop	{fp, pc}
   2aaa0:	andeq	r7, r3, r4, asr r6
   2aaa4:	andeq	r2, r2, ip, asr #11
   2aaa8:	andeq	r2, r2, ip, lsl #12
   2aaac:			; <UNDEFINED> instruction: 0x000001b5
   2aab0:	andeq	r2, r2, r0, lsr #12
   2aab4:	muleq	r2, r0, r6
   2aab8:			; <UNDEFINED> instruction: 0x000001ba
   2aabc:	ldrdeq	r2, [r2], -ip
   2aac0:	ldrdeq	r2, [r2], -r0
   2aac4:	andeq	r0, r0, r1, asr #3
   2aac8:	andeq	r2, r2, ip, lsr #14
   2aacc:	andeq	r2, r2, r0, ror #15
   2aad0:	andeq	r0, r0, sl, asr #3
   2aad4:	andeq	r2, r2, r4, lsl #17
   2aad8:	andeq	r2, r2, ip, asr r9
   2aadc:	ldrdeq	r0, [r0], -r5
   2aae0:	andeq	r2, r2, r8, lsr #20
   2aae4:	andeq	r2, r2, r8, ror #22
   2aae8:	ldrdeq	r0, [r0], -sl
   2aaec:	andeq	r2, r2, ip, asr #9
   2aaf0:	andeq	r2, r2, r8, lsr #25

0002aaf4 <union_vector_tests@@Base>:
   2aaf4:	push	{fp, lr}
   2aaf8:	add	fp, sp, #4
   2aafc:	sub	sp, sp, #24
   2ab00:	mov	r3, #0
   2ab04:	str	r3, [fp, #-8]
   2ab08:	ldr	r3, [pc, #428]	; 2acbc <union_vector_tests@@Base+0x1c8>
   2ab0c:	add	r3, pc, r3
   2ab10:	str	r3, [fp, #-12]
   2ab14:	ldr	r3, [pc, #420]	; 2acc0 <union_vector_tests@@Base+0x1cc>
   2ab18:	str	r3, [sp, #8]
   2ab1c:	mov	r3, #0
   2ab20:	str	r3, [sp, #4]
   2ab24:	mov	r3, #0
   2ab28:	str	r3, [sp]
   2ab2c:	mov	r3, #0
   2ab30:	ldr	r2, [pc, #396]	; 2acc4 <union_vector_tests@@Base+0x1d0>
   2ab34:	add	r2, pc, r2
   2ab38:	ldr	r1, [pc, #392]	; 2acc8 <union_vector_tests@@Base+0x1d4>
   2ab3c:	add	r1, pc, r1
   2ab40:	ldr	r0, [fp, #-12]
   2ab44:	bl	29b04 <test_json@@Base>
   2ab48:	mov	r2, r0
   2ab4c:	ldr	r3, [fp, #-8]
   2ab50:	orr	r3, r3, r2
   2ab54:	str	r3, [fp, #-8]
   2ab58:	mov	r3, #488	; 0x1e8
   2ab5c:	str	r3, [sp, #8]
   2ab60:	mov	r3, #0
   2ab64:	str	r3, [sp, #4]
   2ab68:	mov	r3, #0
   2ab6c:	str	r3, [sp]
   2ab70:	mov	r3, #0
   2ab74:	ldr	r2, [pc, #336]	; 2accc <union_vector_tests@@Base+0x1d8>
   2ab78:	add	r2, pc, r2
   2ab7c:	ldr	r1, [pc, #332]	; 2acd0 <union_vector_tests@@Base+0x1dc>
   2ab80:	add	r1, pc, r1
   2ab84:	ldr	r0, [fp, #-12]
   2ab88:	bl	29b04 <test_json@@Base>
   2ab8c:	mov	r2, r0
   2ab90:	ldr	r3, [fp, #-8]
   2ab94:	orr	r3, r3, r2
   2ab98:	str	r3, [fp, #-8]
   2ab9c:	ldr	r3, [pc, #304]	; 2acd4 <union_vector_tests@@Base+0x1e0>
   2aba0:	str	r3, [sp, #8]
   2aba4:	mov	r3, #0
   2aba8:	str	r3, [sp, #4]
   2abac:	mov	r3, #0
   2abb0:	str	r3, [sp]
   2abb4:	mov	r3, #0
   2abb8:	ldr	r2, [pc, #280]	; 2acd8 <union_vector_tests@@Base+0x1e4>
   2abbc:	add	r2, pc, r2
   2abc0:	ldr	r1, [pc, #276]	; 2acdc <union_vector_tests@@Base+0x1e8>
   2abc4:	add	r1, pc, r1
   2abc8:	ldr	r0, [fp, #-12]
   2abcc:	bl	29b04 <test_json@@Base>
   2abd0:	mov	r2, r0
   2abd4:	ldr	r3, [fp, #-8]
   2abd8:	orr	r3, r3, r2
   2abdc:	str	r3, [fp, #-8]
   2abe0:	ldr	r3, [pc, #248]	; 2ace0 <union_vector_tests@@Base+0x1ec>
   2abe4:	str	r3, [sp, #8]
   2abe8:	mov	r3, #0
   2abec:	str	r3, [sp, #4]
   2abf0:	mov	r3, #0
   2abf4:	str	r3, [sp]
   2abf8:	mov	r3, #0
   2abfc:	ldr	r2, [pc, #224]	; 2ace4 <union_vector_tests@@Base+0x1f0>
   2ac00:	add	r2, pc, r2
   2ac04:	ldr	r1, [pc, #220]	; 2ace8 <union_vector_tests@@Base+0x1f4>
   2ac08:	add	r1, pc, r1
   2ac0c:	ldr	r0, [fp, #-12]
   2ac10:	bl	29b04 <test_json@@Base>
   2ac14:	mov	r2, r0
   2ac18:	ldr	r3, [fp, #-8]
   2ac1c:	orr	r3, r3, r2
   2ac20:	str	r3, [fp, #-8]
   2ac24:	ldr	r3, [pc, #192]	; 2acec <union_vector_tests@@Base+0x1f8>
   2ac28:	str	r3, [sp, #8]
   2ac2c:	mov	r3, #0
   2ac30:	str	r3, [sp, #4]
   2ac34:	mov	r3, #0
   2ac38:	str	r3, [sp]
   2ac3c:	mov	r3, #0
   2ac40:	ldr	r2, [pc, #168]	; 2acf0 <union_vector_tests@@Base+0x1fc>
   2ac44:	add	r2, pc, r2
   2ac48:	ldr	r1, [pc, #164]	; 2acf4 <union_vector_tests@@Base+0x200>
   2ac4c:	add	r1, pc, r1
   2ac50:	ldr	r0, [fp, #-12]
   2ac54:	bl	29b04 <test_json@@Base>
   2ac58:	mov	r2, r0
   2ac5c:	ldr	r3, [fp, #-8]
   2ac60:	orr	r3, r3, r2
   2ac64:	str	r3, [fp, #-8]
   2ac68:	mov	r3, #500	; 0x1f4
   2ac6c:	str	r3, [sp, #8]
   2ac70:	mov	r3, #0
   2ac74:	str	r3, [sp, #4]
   2ac78:	mov	r3, #0
   2ac7c:	str	r3, [sp]
   2ac80:	mov	r3, #0
   2ac84:	ldr	r2, [pc, #108]	; 2acf8 <union_vector_tests@@Base+0x204>
   2ac88:	add	r2, pc, r2
   2ac8c:	ldr	r1, [pc, #104]	; 2acfc <union_vector_tests@@Base+0x208>
   2ac90:	add	r1, pc, r1
   2ac94:	ldr	r0, [fp, #-12]
   2ac98:	bl	29b04 <test_json@@Base>
   2ac9c:	mov	r2, r0
   2aca0:	ldr	r3, [fp, #-8]
   2aca4:	orr	r3, r3, r2
   2aca8:	str	r3, [fp, #-8]
   2acac:	ldr	r3, [fp, #-8]
   2acb0:	mov	r0, r3
   2acb4:	sub	sp, fp, #4
   2acb8:	pop	{fp, pc}
   2acbc:	andeq	r7, r3, r4, ror #7
   2acc0:	andeq	r0, r0, r5, ror #3
   2acc4:	andeq	r2, r2, r8, ror ip
   2acc8:	andeq	r2, r2, r8, lsr #25
   2accc:	andeq	r2, r2, ip, lsr #25
   2acd0:	ldrdeq	r2, [r2], -r0
   2acd4:	andeq	r0, r0, fp, ror #3
   2acd8:	andeq	r2, r2, r8, asr #25
   2acdc:	andeq	r2, r2, r4, lsl #26
   2ace0:	andeq	r0, r0, lr, ror #3
   2ace4:	andeq	r2, r2, r8, lsl sp
   2ace8:	andeq	r2, r2, ip, ror sp
   2acec:	strdeq	r0, [r0], -r1
   2acf0:	andeq	r2, r2, r8, ror #22
   2acf4:			; <UNDEFINED> instruction: 0x00022db8
   2acf8:			; <UNDEFINED> instruction: 0x00022dbc
   2acfc:	andeq	r2, r2, r0, lsl lr

0002ad00 <main@@Base>:
   2ad00:	push	{fp, lr}
   2ad04:	add	fp, sp, #4
   2ad08:	sub	sp, sp, #24
   2ad0c:	mov	r3, #0
   2ad10:	str	r3, [fp, #-8]
   2ad14:	ldr	r3, [pc, #2792]	; 2b804 <main@@Base+0xb04>
   2ad18:	add	r3, pc, r3
   2ad1c:	str	r3, [fp, #-12]
   2ad20:	bl	29f8c <edge_case_tests@@Base>
   2ad24:	mov	r2, r0
   2ad28:	ldr	r3, [fp, #-8]
   2ad2c:	orr	r3, r3, r2
   2ad30:	str	r3, [fp, #-8]
   2ad34:	bl	2a26c <error_case_tests@@Base>
   2ad38:	mov	r2, r0
   2ad3c:	ldr	r3, [fp, #-8]
   2ad40:	orr	r3, r3, r2
   2ad44:	str	r3, [fp, #-8]
   2ad48:	bl	2aaf4 <union_vector_tests@@Base>
   2ad4c:	mov	r2, r0
   2ad50:	ldr	r3, [fp, #-8]
   2ad54:	orr	r3, r3, r2
   2ad58:	str	r3, [fp, #-8]
   2ad5c:	bl	2a5fc <base64_tests@@Base>
   2ad60:	mov	r2, r0
   2ad64:	ldr	r3, [fp, #-8]
   2ad68:	orr	r3, r3, r2
   2ad6c:	str	r3, [fp, #-8]
   2ad70:	bl	2a894 <mixed_type_union_tests@@Base>
   2ad74:	mov	r2, r0
   2ad78:	ldr	r3, [fp, #-8]
   2ad7c:	orr	r3, r3, r2
   2ad80:	str	r3, [fp, #-8]
   2ad84:	ldr	r3, [pc, #2684]	; 2b808 <main@@Base+0xb08>
   2ad88:	str	r3, [sp, #8]
   2ad8c:	mov	r3, #0
   2ad90:	str	r3, [sp, #4]
   2ad94:	mov	r3, #0
   2ad98:	str	r3, [sp]
   2ad9c:	mov	r3, #0
   2ada0:	ldr	r2, [pc, #2660]	; 2b80c <main@@Base+0xb0c>
   2ada4:	add	r2, pc, r2
   2ada8:	ldr	r1, [pc, #2656]	; 2b810 <main@@Base+0xb10>
   2adac:	add	r1, pc, r1
   2adb0:	ldr	r0, [fp, #-12]
   2adb4:	bl	29b04 <test_json@@Base>
   2adb8:	mov	r2, r0
   2adbc:	ldr	r3, [fp, #-8]
   2adc0:	orr	r3, r3, r2
   2adc4:	str	r3, [fp, #-8]
   2adc8:	mov	r3, #528	; 0x210
   2adcc:	str	r3, [sp, #8]
   2add0:	mov	r3, #0
   2add4:	str	r3, [sp, #4]
   2add8:	mov	r3, #0
   2addc:	str	r3, [sp]
   2ade0:	mov	r3, #0
   2ade4:	ldr	r2, [pc, #2600]	; 2b814 <main@@Base+0xb14>
   2ade8:	add	r2, pc, r2
   2adec:	ldr	r1, [pc, #2596]	; 2b818 <main@@Base+0xb18>
   2adf0:	add	r1, pc, r1
   2adf4:	ldr	r0, [fp, #-12]
   2adf8:	bl	29b04 <test_json@@Base>
   2adfc:	mov	r2, r0
   2ae00:	ldr	r3, [fp, #-8]
   2ae04:	orr	r3, r3, r2
   2ae08:	str	r3, [fp, #-8]
   2ae0c:	ldr	r3, [pc, #2568]	; 2b81c <main@@Base+0xb1c>
   2ae10:	str	r3, [sp, #8]
   2ae14:	mov	r3, #0
   2ae18:	str	r3, [sp, #4]
   2ae1c:	mov	r3, #0
   2ae20:	str	r3, [sp]
   2ae24:	mov	r3, #0
   2ae28:	ldr	r2, [pc, #2544]	; 2b820 <main@@Base+0xb20>
   2ae2c:	add	r2, pc, r2
   2ae30:	ldr	r1, [pc, #2540]	; 2b824 <main@@Base+0xb24>
   2ae34:	add	r1, pc, r1
   2ae38:	ldr	r0, [fp, #-12]
   2ae3c:	bl	29b04 <test_json@@Base>
   2ae40:	mov	r2, r0
   2ae44:	ldr	r3, [fp, #-8]
   2ae48:	orr	r3, r3, r2
   2ae4c:	str	r3, [fp, #-8]
   2ae50:	ldr	r3, [pc, #2512]	; 2b828 <main@@Base+0xb28>
   2ae54:	str	r3, [sp, #8]
   2ae58:	mov	r3, #0
   2ae5c:	str	r3, [sp, #4]
   2ae60:	mov	r3, #0
   2ae64:	str	r3, [sp]
   2ae68:	mov	r3, #0
   2ae6c:	ldr	r2, [pc, #2488]	; 2b82c <main@@Base+0xb2c>
   2ae70:	add	r2, pc, r2
   2ae74:	ldr	r1, [pc, #2484]	; 2b830 <main@@Base+0xb30>
   2ae78:	add	r1, pc, r1
   2ae7c:	ldr	r0, [fp, #-12]
   2ae80:	bl	29b04 <test_json@@Base>
   2ae84:	mov	r2, r0
   2ae88:	ldr	r3, [fp, #-8]
   2ae8c:	orr	r3, r3, r2
   2ae90:	str	r3, [fp, #-8]
   2ae94:	ldr	r3, [pc, #2456]	; 2b834 <main@@Base+0xb34>
   2ae98:	str	r3, [sp, #8]
   2ae9c:	mov	r3, #0
   2aea0:	str	r3, [sp, #4]
   2aea4:	mov	r3, #0
   2aea8:	str	r3, [sp]
   2aeac:	mov	r3, #0
   2aeb0:	ldr	r2, [pc, #2432]	; 2b838 <main@@Base+0xb38>
   2aeb4:	add	r2, pc, r2
   2aeb8:	ldr	r1, [pc, #2428]	; 2b83c <main@@Base+0xb3c>
   2aebc:	add	r1, pc, r1
   2aec0:	ldr	r0, [fp, #-12]
   2aec4:	bl	29b04 <test_json@@Base>
   2aec8:	mov	r2, r0
   2aecc:	ldr	r3, [fp, #-8]
   2aed0:	orr	r3, r3, r2
   2aed4:	str	r3, [fp, #-8]
   2aed8:	mov	r3, #540	; 0x21c
   2aedc:	str	r3, [sp, #8]
   2aee0:	mov	r3, #0
   2aee4:	str	r3, [sp, #4]
   2aee8:	mov	r3, #0
   2aeec:	str	r3, [sp]
   2aef0:	mov	r3, #0
   2aef4:	ldr	r2, [pc, #2372]	; 2b840 <main@@Base+0xb40>
   2aef8:	add	r2, pc, r2
   2aefc:	ldr	r1, [pc, #2368]	; 2b844 <main@@Base+0xb44>
   2af00:	add	r1, pc, r1
   2af04:	ldr	r0, [fp, #-12]
   2af08:	bl	29b04 <test_json@@Base>
   2af0c:	mov	r2, r0
   2af10:	ldr	r3, [fp, #-8]
   2af14:	orr	r3, r3, r2
   2af18:	str	r3, [fp, #-8]
   2af1c:	ldr	r3, [pc, #2340]	; 2b848 <main@@Base+0xb48>
   2af20:	str	r3, [sp, #8]
   2af24:	mov	r3, #0
   2af28:	str	r3, [sp, #4]
   2af2c:	mov	r3, #0
   2af30:	str	r3, [sp]
   2af34:	mov	r3, #0
   2af38:	ldr	r2, [pc, #2316]	; 2b84c <main@@Base+0xb4c>
   2af3c:	add	r2, pc, r2
   2af40:	ldr	r1, [pc, #2312]	; 2b850 <main@@Base+0xb50>
   2af44:	add	r1, pc, r1
   2af48:	ldr	r0, [fp, #-12]
   2af4c:	bl	29b04 <test_json@@Base>
   2af50:	mov	r2, r0
   2af54:	ldr	r3, [fp, #-8]
   2af58:	orr	r3, r3, r2
   2af5c:	str	r3, [fp, #-8]
   2af60:	ldr	r3, [pc, #2284]	; 2b854 <main@@Base+0xb54>
   2af64:	str	r3, [sp, #8]
   2af68:	mov	r3, #0
   2af6c:	str	r3, [sp, #4]
   2af70:	mov	r3, #0
   2af74:	str	r3, [sp]
   2af78:	mov	r3, #0
   2af7c:	ldr	r2, [pc, #2260]	; 2b858 <main@@Base+0xb58>
   2af80:	add	r2, pc, r2
   2af84:	ldr	r1, [pc, #2256]	; 2b85c <main@@Base+0xb5c>
   2af88:	add	r1, pc, r1
   2af8c:	ldr	r0, [fp, #-12]
   2af90:	bl	29b04 <test_json@@Base>
   2af94:	mov	r2, r0
   2af98:	ldr	r3, [fp, #-8]
   2af9c:	orr	r3, r3, r2
   2afa0:	str	r3, [fp, #-8]
   2afa4:	ldr	r3, [pc, #2228]	; 2b860 <main@@Base+0xb60>
   2afa8:	str	r3, [sp, #8]
   2afac:	mov	r3, #0
   2afb0:	str	r3, [sp, #4]
   2afb4:	mov	r3, #0
   2afb8:	str	r3, [sp]
   2afbc:	mov	r3, #0
   2afc0:	ldr	r2, [pc, #2204]	; 2b864 <main@@Base+0xb64>
   2afc4:	add	r2, pc, r2
   2afc8:	ldr	r1, [pc, #2200]	; 2b868 <main@@Base+0xb68>
   2afcc:	add	r1, pc, r1
   2afd0:	ldr	r0, [fp, #-12]
   2afd4:	bl	29b04 <test_json@@Base>
   2afd8:	mov	r2, r0
   2afdc:	ldr	r3, [fp, #-8]
   2afe0:	orr	r3, r3, r2
   2afe4:	str	r3, [fp, #-8]
   2afe8:	ldr	r3, [pc, #2172]	; 2b86c <main@@Base+0xb6c>
   2afec:	str	r3, [sp, #8]
   2aff0:	mov	r3, #0
   2aff4:	str	r3, [sp, #4]
   2aff8:	mov	r3, #0
   2affc:	str	r3, [sp]
   2b000:	mov	r3, #0
   2b004:	ldr	r2, [pc, #2148]	; 2b870 <main@@Base+0xb70>
   2b008:	add	r2, pc, r2
   2b00c:	ldr	r1, [pc, #2144]	; 2b874 <main@@Base+0xb74>
   2b010:	add	r1, pc, r1
   2b014:	ldr	r0, [fp, #-12]
   2b018:	bl	29b04 <test_json@@Base>
   2b01c:	mov	r2, r0
   2b020:	ldr	r3, [fp, #-8]
   2b024:	orr	r3, r3, r2
   2b028:	str	r3, [fp, #-8]
   2b02c:	mov	r3, #604	; 0x25c
   2b030:	str	r3, [sp, #8]
   2b034:	mov	r3, #0
   2b038:	str	r3, [sp, #4]
   2b03c:	mov	r3, #0
   2b040:	str	r3, [sp]
   2b044:	mov	r3, #0
   2b048:	ldr	r2, [pc, #2088]	; 2b878 <main@@Base+0xb78>
   2b04c:	add	r2, pc, r2
   2b050:	ldr	r1, [pc, #2084]	; 2b87c <main@@Base+0xb7c>
   2b054:	add	r1, pc, r1
   2b058:	ldr	r0, [fp, #-12]
   2b05c:	bl	29b04 <test_json@@Base>
   2b060:	mov	r2, r0
   2b064:	ldr	r3, [fp, #-8]
   2b068:	orr	r3, r3, r2
   2b06c:	str	r3, [fp, #-8]
   2b070:	ldr	r3, [pc, #2056]	; 2b880 <main@@Base+0xb80>
   2b074:	str	r3, [sp, #8]
   2b078:	mov	r3, #0
   2b07c:	str	r3, [sp, #4]
   2b080:	mov	r3, #0
   2b084:	str	r3, [sp]
   2b088:	mov	r3, #0
   2b08c:	ldr	r2, [pc, #2032]	; 2b884 <main@@Base+0xb84>
   2b090:	add	r2, pc, r2
   2b094:	ldr	r1, [pc, #2028]	; 2b888 <main@@Base+0xb88>
   2b098:	add	r1, pc, r1
   2b09c:	ldr	r0, [fp, #-12]
   2b0a0:	bl	29b04 <test_json@@Base>
   2b0a4:	mov	r2, r0
   2b0a8:	ldr	r3, [fp, #-8]
   2b0ac:	orr	r3, r3, r2
   2b0b0:	str	r3, [fp, #-8]
   2b0b4:	ldr	r3, [pc, #2000]	; 2b88c <main@@Base+0xb8c>
   2b0b8:	str	r3, [sp, #8]
   2b0bc:	mov	r3, #0
   2b0c0:	str	r3, [sp, #4]
   2b0c4:	mov	r3, #0
   2b0c8:	str	r3, [sp]
   2b0cc:	mov	r3, #0
   2b0d0:	ldr	r2, [pc, #1976]	; 2b890 <main@@Base+0xb90>
   2b0d4:	add	r2, pc, r2
   2b0d8:	ldr	r1, [pc, #1972]	; 2b894 <main@@Base+0xb94>
   2b0dc:	add	r1, pc, r1
   2b0e0:	ldr	r0, [fp, #-12]
   2b0e4:	bl	29b04 <test_json@@Base>
   2b0e8:	mov	r2, r0
   2b0ec:	ldr	r3, [fp, #-8]
   2b0f0:	orr	r3, r3, r2
   2b0f4:	str	r3, [fp, #-8]
   2b0f8:	ldr	r3, [pc, #1944]	; 2b898 <main@@Base+0xb98>
   2b0fc:	str	r3, [sp, #8]
   2b100:	mov	r3, #0
   2b104:	str	r3, [sp, #4]
   2b108:	mov	r3, #0
   2b10c:	str	r3, [sp]
   2b110:	mov	r3, #0
   2b114:	ldr	r2, [pc, #1920]	; 2b89c <main@@Base+0xb9c>
   2b118:	add	r2, pc, r2
   2b11c:	ldr	r1, [pc, #1916]	; 2b8a0 <main@@Base+0xba0>
   2b120:	add	r1, pc, r1
   2b124:	ldr	r0, [fp, #-12]
   2b128:	bl	29b04 <test_json@@Base>
   2b12c:	mov	r2, r0
   2b130:	ldr	r3, [fp, #-8]
   2b134:	orr	r3, r3, r2
   2b138:	str	r3, [fp, #-8]
   2b13c:	mov	r3, #616	; 0x268
   2b140:	str	r3, [sp, #8]
   2b144:	mov	r3, #0
   2b148:	str	r3, [sp, #4]
   2b14c:	mov	r3, #0
   2b150:	str	r3, [sp]
   2b154:	mov	r3, #0
   2b158:	ldr	r2, [pc, #1860]	; 2b8a4 <main@@Base+0xba4>
   2b15c:	add	r2, pc, r2
   2b160:	ldr	r1, [pc, #1856]	; 2b8a8 <main@@Base+0xba8>
   2b164:	add	r1, pc, r1
   2b168:	ldr	r0, [fp, #-12]
   2b16c:	bl	29b04 <test_json@@Base>
   2b170:	mov	r2, r0
   2b174:	ldr	r3, [fp, #-8]
   2b178:	orr	r3, r3, r2
   2b17c:	str	r3, [fp, #-8]
   2b180:	ldr	r3, [pc, #1828]	; 2b8ac <main@@Base+0xbac>
   2b184:	str	r3, [sp, #8]
   2b188:	mov	r3, #0
   2b18c:	str	r3, [sp, #4]
   2b190:	mov	r3, #0
   2b194:	str	r3, [sp]
   2b198:	mov	r3, #0
   2b19c:	ldr	r2, [pc, #1804]	; 2b8b0 <main@@Base+0xbb0>
   2b1a0:	add	r2, pc, r2
   2b1a4:	ldr	r1, [pc, #1800]	; 2b8b4 <main@@Base+0xbb4>
   2b1a8:	add	r1, pc, r1
   2b1ac:	ldr	r0, [fp, #-12]
   2b1b0:	bl	29b04 <test_json@@Base>
   2b1b4:	mov	r2, r0
   2b1b8:	ldr	r3, [fp, #-8]
   2b1bc:	orr	r3, r3, r2
   2b1c0:	str	r3, [fp, #-8]
   2b1c4:	ldr	r3, [pc, #1772]	; 2b8b8 <main@@Base+0xbb8>
   2b1c8:	str	r3, [sp, #8]
   2b1cc:	mov	r3, #0
   2b1d0:	str	r3, [sp, #4]
   2b1d4:	mov	r3, #0
   2b1d8:	str	r3, [sp]
   2b1dc:	mov	r3, #0
   2b1e0:	ldr	r2, [pc, #1748]	; 2b8bc <main@@Base+0xbbc>
   2b1e4:	add	r2, pc, r2
   2b1e8:	ldr	r1, [pc, #1744]	; 2b8c0 <main@@Base+0xbc0>
   2b1ec:	add	r1, pc, r1
   2b1f0:	ldr	r0, [fp, #-12]
   2b1f4:	bl	29b04 <test_json@@Base>
   2b1f8:	mov	r2, r0
   2b1fc:	ldr	r3, [fp, #-8]
   2b200:	orr	r3, r3, r2
   2b204:	str	r3, [fp, #-8]
   2b208:	ldr	r3, [pc, #1716]	; 2b8c4 <main@@Base+0xbc4>
   2b20c:	str	r3, [sp, #8]
   2b210:	mov	r3, #0
   2b214:	str	r3, [sp, #4]
   2b218:	mov	r3, #0
   2b21c:	str	r3, [sp]
   2b220:	mov	r3, #0
   2b224:	ldr	r2, [pc, #1692]	; 2b8c8 <main@@Base+0xbc8>
   2b228:	add	r2, pc, r2
   2b22c:	ldr	r1, [pc, #1688]	; 2b8cc <main@@Base+0xbcc>
   2b230:	add	r1, pc, r1
   2b234:	ldr	r0, [fp, #-12]
   2b238:	bl	29b04 <test_json@@Base>
   2b23c:	mov	r2, r0
   2b240:	ldr	r3, [fp, #-8]
   2b244:	orr	r3, r3, r2
   2b248:	str	r3, [fp, #-8]
   2b24c:	mov	r3, #628	; 0x274
   2b250:	str	r3, [sp, #8]
   2b254:	mov	r3, #0
   2b258:	str	r3, [sp, #4]
   2b25c:	mov	r3, #0
   2b260:	str	r3, [sp]
   2b264:	mov	r3, #0
   2b268:	ldr	r2, [pc, #1632]	; 2b8d0 <main@@Base+0xbd0>
   2b26c:	add	r2, pc, r2
   2b270:	ldr	r1, [pc, #1628]	; 2b8d4 <main@@Base+0xbd4>
   2b274:	add	r1, pc, r1
   2b278:	ldr	r0, [fp, #-12]
   2b27c:	bl	29b04 <test_json@@Base>
   2b280:	mov	r2, r0
   2b284:	ldr	r3, [fp, #-8]
   2b288:	orr	r3, r3, r2
   2b28c:	str	r3, [fp, #-8]
   2b290:	ldr	r3, [pc, #1600]	; 2b8d8 <main@@Base+0xbd8>
   2b294:	str	r3, [sp, #8]
   2b298:	mov	r3, #0
   2b29c:	str	r3, [sp, #4]
   2b2a0:	mov	r3, #0
   2b2a4:	str	r3, [sp]
   2b2a8:	mov	r3, #0
   2b2ac:	ldr	r2, [pc, #1576]	; 2b8dc <main@@Base+0xbdc>
   2b2b0:	add	r2, pc, r2
   2b2b4:	ldr	r1, [pc, #1572]	; 2b8e0 <main@@Base+0xbe0>
   2b2b8:	add	r1, pc, r1
   2b2bc:	ldr	r0, [fp, #-12]
   2b2c0:	bl	29b04 <test_json@@Base>
   2b2c4:	mov	r2, r0
   2b2c8:	ldr	r3, [fp, #-8]
   2b2cc:	orr	r3, r3, r2
   2b2d0:	str	r3, [fp, #-8]
   2b2d4:	ldr	r3, [pc, #1544]	; 2b8e4 <main@@Base+0xbe4>
   2b2d8:	str	r3, [sp, #8]
   2b2dc:	mov	r3, #0
   2b2e0:	str	r3, [sp, #4]
   2b2e4:	mov	r3, #0
   2b2e8:	str	r3, [sp]
   2b2ec:	mov	r3, #0
   2b2f0:	ldr	r2, [pc, #1520]	; 2b8e8 <main@@Base+0xbe8>
   2b2f4:	add	r2, pc, r2
   2b2f8:	ldr	r1, [pc, #1516]	; 2b8ec <main@@Base+0xbec>
   2b2fc:	add	r1, pc, r1
   2b300:	ldr	r0, [fp, #-12]
   2b304:	bl	29b04 <test_json@@Base>
   2b308:	mov	r2, r0
   2b30c:	ldr	r3, [fp, #-8]
   2b310:	orr	r3, r3, r2
   2b314:	str	r3, [fp, #-8]
   2b318:	ldr	r3, [pc, #1488]	; 2b8f0 <main@@Base+0xbf0>
   2b31c:	str	r3, [sp, #8]
   2b320:	mov	r3, #0
   2b324:	str	r3, [sp, #4]
   2b328:	mov	r3, #0
   2b32c:	str	r3, [sp]
   2b330:	mov	r3, #0
   2b334:	ldr	r2, [pc, #1464]	; 2b8f4 <main@@Base+0xbf4>
   2b338:	add	r2, pc, r2
   2b33c:	ldr	r1, [pc, #1460]	; 2b8f8 <main@@Base+0xbf8>
   2b340:	add	r1, pc, r1
   2b344:	ldr	r0, [fp, #-12]
   2b348:	bl	29b04 <test_json@@Base>
   2b34c:	mov	r2, r0
   2b350:	ldr	r3, [fp, #-8]
   2b354:	orr	r3, r3, r2
   2b358:	str	r3, [fp, #-8]
   2b35c:	ldr	r3, [pc, #1432]	; 2b8fc <main@@Base+0xbfc>
   2b360:	str	r3, [sp, #8]
   2b364:	mov	r3, #0
   2b368:	str	r3, [sp, #4]
   2b36c:	mov	r3, #0
   2b370:	str	r3, [sp]
   2b374:	mov	r3, #0
   2b378:	ldr	r2, [pc, #1408]	; 2b900 <main@@Base+0xc00>
   2b37c:	add	r2, pc, r2
   2b380:	ldr	r1, [pc, #1404]	; 2b904 <main@@Base+0xc04>
   2b384:	add	r1, pc, r1
   2b388:	ldr	r0, [fp, #-12]
   2b38c:	bl	29b04 <test_json@@Base>
   2b390:	mov	r2, r0
   2b394:	ldr	r3, [fp, #-8]
   2b398:	orr	r3, r3, r2
   2b39c:	str	r3, [fp, #-8]
   2b3a0:	ldr	r3, [pc, #1376]	; 2b908 <main@@Base+0xc08>
   2b3a4:	str	r3, [sp, #8]
   2b3a8:	mov	r3, #0
   2b3ac:	str	r3, [sp, #4]
   2b3b0:	mov	r3, #0
   2b3b4:	str	r3, [sp]
   2b3b8:	mov	r3, #0
   2b3bc:	ldr	r2, [pc, #1352]	; 2b90c <main@@Base+0xc0c>
   2b3c0:	add	r2, pc, r2
   2b3c4:	ldr	r1, [pc, #1348]	; 2b910 <main@@Base+0xc10>
   2b3c8:	add	r1, pc, r1
   2b3cc:	ldr	r0, [fp, #-12]
   2b3d0:	bl	29b04 <test_json@@Base>
   2b3d4:	mov	r2, r0
   2b3d8:	ldr	r3, [fp, #-8]
   2b3dc:	orr	r3, r3, r2
   2b3e0:	str	r3, [fp, #-8]
   2b3e4:	ldr	r3, [pc, #1320]	; 2b914 <main@@Base+0xc14>
   2b3e8:	str	r3, [sp, #8]
   2b3ec:	mov	r3, #0
   2b3f0:	str	r3, [sp, #4]
   2b3f4:	mov	r3, #0
   2b3f8:	str	r3, [sp]
   2b3fc:	mov	r3, #0
   2b400:	ldr	r2, [pc, #1296]	; 2b918 <main@@Base+0xc18>
   2b404:	add	r2, pc, r2
   2b408:	ldr	r1, [pc, #1292]	; 2b91c <main@@Base+0xc1c>
   2b40c:	add	r1, pc, r1
   2b410:	ldr	r0, [fp, #-12]
   2b414:	bl	29b04 <test_json@@Base>
   2b418:	mov	r2, r0
   2b41c:	ldr	r3, [fp, #-8]
   2b420:	orr	r3, r3, r2
   2b424:	str	r3, [fp, #-8]
   2b428:	mov	r3, #716	; 0x2cc
   2b42c:	str	r3, [sp, #8]
   2b430:	mov	r3, #0
   2b434:	str	r3, [sp, #4]
   2b438:	mov	r3, #0
   2b43c:	str	r3, [sp]
   2b440:	mov	r3, #0
   2b444:	ldr	r2, [pc, #1236]	; 2b920 <main@@Base+0xc20>
   2b448:	add	r2, pc, r2
   2b44c:	ldr	r1, [pc, #1232]	; 2b924 <main@@Base+0xc24>
   2b450:	add	r1, pc, r1
   2b454:	ldr	r0, [fp, #-12]
   2b458:	bl	29b04 <test_json@@Base>
   2b45c:	mov	r2, r0
   2b460:	ldr	r3, [fp, #-8]
   2b464:	orr	r3, r3, r2
   2b468:	str	r3, [fp, #-8]
   2b46c:	ldr	r3, [pc, #1204]	; 2b928 <main@@Base+0xc28>
   2b470:	str	r3, [sp, #8]
   2b474:	mov	r3, #0
   2b478:	str	r3, [sp, #4]
   2b47c:	mov	r3, #0
   2b480:	str	r3, [sp]
   2b484:	mov	r3, #0
   2b488:	ldr	r2, [pc, #1180]	; 2b92c <main@@Base+0xc2c>
   2b48c:	add	r2, pc, r2
   2b490:	ldr	r1, [pc, #1176]	; 2b930 <main@@Base+0xc30>
   2b494:	add	r1, pc, r1
   2b498:	ldr	r0, [fp, #-12]
   2b49c:	bl	29b04 <test_json@@Base>
   2b4a0:	mov	r2, r0
   2b4a4:	ldr	r3, [fp, #-8]
   2b4a8:	orr	r3, r3, r2
   2b4ac:	str	r3, [fp, #-8]
   2b4b0:	ldr	r3, [pc, #1148]	; 2b934 <main@@Base+0xc34>
   2b4b4:	str	r3, [sp, #8]
   2b4b8:	mov	r3, #0
   2b4bc:	str	r3, [sp, #4]
   2b4c0:	mov	r3, #0
   2b4c4:	str	r3, [sp]
   2b4c8:	mov	r3, #0
   2b4cc:	ldr	r2, [pc, #1124]	; 2b938 <main@@Base+0xc38>
   2b4d0:	add	r2, pc, r2
   2b4d4:	ldr	r1, [pc, #1120]	; 2b93c <main@@Base+0xc3c>
   2b4d8:	add	r1, pc, r1
   2b4dc:	ldr	r0, [fp, #-12]
   2b4e0:	bl	29b04 <test_json@@Base>
   2b4e4:	mov	r2, r0
   2b4e8:	ldr	r3, [fp, #-8]
   2b4ec:	orr	r3, r3, r2
   2b4f0:	str	r3, [fp, #-8]
   2b4f4:	ldr	r3, [pc, #1092]	; 2b940 <main@@Base+0xc40>
   2b4f8:	str	r3, [sp, #8]
   2b4fc:	mov	r3, #0
   2b500:	str	r3, [sp, #4]
   2b504:	mov	r3, #0
   2b508:	str	r3, [sp]
   2b50c:	mov	r3, #0
   2b510:	ldr	r2, [pc, #1068]	; 2b944 <main@@Base+0xc44>
   2b514:	add	r2, pc, r2
   2b518:	ldr	r1, [pc, #1064]	; 2b948 <main@@Base+0xc48>
   2b51c:	add	r1, pc, r1
   2b520:	ldr	r0, [fp, #-12]
   2b524:	bl	29b04 <test_json@@Base>
   2b528:	mov	r2, r0
   2b52c:	ldr	r3, [fp, #-8]
   2b530:	orr	r3, r3, r2
   2b534:	str	r3, [fp, #-8]
   2b538:	ldr	r3, [pc, #1036]	; 2b94c <main@@Base+0xc4c>
   2b53c:	str	r3, [sp, #8]
   2b540:	mov	r3, #0
   2b544:	str	r3, [sp, #4]
   2b548:	mov	r3, #0
   2b54c:	str	r3, [sp]
   2b550:	mov	r3, #0
   2b554:	ldr	r2, [pc, #1012]	; 2b950 <main@@Base+0xc50>
   2b558:	add	r2, pc, r2
   2b55c:	ldr	r1, [pc, #1008]	; 2b954 <main@@Base+0xc54>
   2b560:	add	r1, pc, r1
   2b564:	ldr	r0, [fp, #-12]
   2b568:	bl	29b04 <test_json@@Base>
   2b56c:	mov	r2, r0
   2b570:	ldr	r3, [fp, #-8]
   2b574:	orr	r3, r3, r2
   2b578:	str	r3, [fp, #-8]
   2b57c:	ldr	r3, [pc, #980]	; 2b958 <main@@Base+0xc58>
   2b580:	str	r3, [sp, #8]
   2b584:	mov	r3, #0
   2b588:	str	r3, [sp, #4]
   2b58c:	mov	r3, #0
   2b590:	str	r3, [sp]
   2b594:	mov	r3, #0
   2b598:	ldr	r2, [pc, #956]	; 2b95c <main@@Base+0xc5c>
   2b59c:	add	r2, pc, r2
   2b5a0:	ldr	r1, [pc, #952]	; 2b960 <main@@Base+0xc60>
   2b5a4:	add	r1, pc, r1
   2b5a8:	ldr	r0, [fp, #-12]
   2b5ac:	bl	29b04 <test_json@@Base>
   2b5b0:	mov	r2, r0
   2b5b4:	ldr	r3, [fp, #-8]
   2b5b8:	orr	r3, r3, r2
   2b5bc:	str	r3, [fp, #-8]
   2b5c0:	ldr	r3, [pc, #924]	; 2b964 <main@@Base+0xc64>
   2b5c4:	str	r3, [sp, #8]
   2b5c8:	mov	r3, #0
   2b5cc:	str	r3, [sp, #4]
   2b5d0:	mov	r3, #0
   2b5d4:	str	r3, [sp]
   2b5d8:	mov	r3, #0
   2b5dc:	ldr	r2, [pc, #900]	; 2b968 <main@@Base+0xc68>
   2b5e0:	add	r2, pc, r2
   2b5e4:	ldr	r1, [pc, #896]	; 2b96c <main@@Base+0xc6c>
   2b5e8:	add	r1, pc, r1
   2b5ec:	ldr	r0, [fp, #-12]
   2b5f0:	bl	29b04 <test_json@@Base>
   2b5f4:	mov	r2, r0
   2b5f8:	ldr	r3, [fp, #-8]
   2b5fc:	orr	r3, r3, r2
   2b600:	str	r3, [fp, #-8]
   2b604:	mov	r3, #776	; 0x308
   2b608:	str	r3, [sp, #8]
   2b60c:	mov	r3, #0
   2b610:	str	r3, [sp, #4]
   2b614:	mov	r3, #0
   2b618:	str	r3, [sp]
   2b61c:	mov	r3, #0
   2b620:	ldr	r2, [pc, #840]	; 2b970 <main@@Base+0xc70>
   2b624:	add	r2, pc, r2
   2b628:	ldr	r1, [pc, #836]	; 2b974 <main@@Base+0xc74>
   2b62c:	add	r1, pc, r1
   2b630:	ldr	r0, [fp, #-12]
   2b634:	bl	29b04 <test_json@@Base>
   2b638:	mov	r2, r0
   2b63c:	ldr	r3, [fp, #-8]
   2b640:	orr	r3, r3, r2
   2b644:	str	r3, [fp, #-8]
   2b648:	ldr	r3, [pc, #808]	; 2b978 <main@@Base+0xc78>
   2b64c:	str	r3, [sp, #8]
   2b650:	mov	r3, #0
   2b654:	str	r3, [sp, #4]
   2b658:	mov	r3, #0
   2b65c:	str	r3, [sp]
   2b660:	mov	r3, #0
   2b664:	ldr	r2, [pc, #784]	; 2b97c <main@@Base+0xc7c>
   2b668:	add	r2, pc, r2
   2b66c:	ldr	r1, [pc, #780]	; 2b980 <main@@Base+0xc80>
   2b670:	add	r1, pc, r1
   2b674:	ldr	r0, [fp, #-12]
   2b678:	bl	29b04 <test_json@@Base>
   2b67c:	mov	r2, r0
   2b680:	ldr	r3, [fp, #-8]
   2b684:	orr	r3, r3, r2
   2b688:	str	r3, [fp, #-8]
   2b68c:	ldr	r3, [pc, #752]	; 2b984 <main@@Base+0xc84>
   2b690:	str	r3, [sp, #8]
   2b694:	mov	r3, #0
   2b698:	str	r3, [sp, #4]
   2b69c:	mov	r3, #0
   2b6a0:	str	r3, [sp]
   2b6a4:	mov	r3, #0
   2b6a8:	ldr	r2, [pc, #728]	; 2b988 <main@@Base+0xc88>
   2b6ac:	add	r2, pc, r2
   2b6b0:	ldr	r1, [pc, #724]	; 2b98c <main@@Base+0xc8c>
   2b6b4:	add	r1, pc, r1
   2b6b8:	ldr	r0, [fp, #-12]
   2b6bc:	bl	29b04 <test_json@@Base>
   2b6c0:	mov	r2, r0
   2b6c4:	ldr	r3, [fp, #-8]
   2b6c8:	orr	r3, r3, r2
   2b6cc:	str	r3, [fp, #-8]
   2b6d0:	ldr	r3, [pc, #696]	; 2b990 <main@@Base+0xc90>
   2b6d4:	str	r3, [sp, #8]
   2b6d8:	mov	r3, #0
   2b6dc:	str	r3, [sp, #4]
   2b6e0:	mov	r3, #0
   2b6e4:	str	r3, [sp]
   2b6e8:	mov	r3, #0
   2b6ec:	ldr	r2, [pc, #672]	; 2b994 <main@@Base+0xc94>
   2b6f0:	add	r2, pc, r2
   2b6f4:	ldr	r1, [pc, #668]	; 2b998 <main@@Base+0xc98>
   2b6f8:	add	r1, pc, r1
   2b6fc:	ldr	r0, [fp, #-12]
   2b700:	bl	29b04 <test_json@@Base>
   2b704:	mov	r2, r0
   2b708:	ldr	r3, [fp, #-8]
   2b70c:	orr	r3, r3, r2
   2b710:	str	r3, [fp, #-8]
   2b714:	mov	r3, #796	; 0x31c
   2b718:	str	r3, [sp, #8]
   2b71c:	mov	r3, #0
   2b720:	str	r3, [sp, #4]
   2b724:	mov	r3, #0
   2b728:	str	r3, [sp]
   2b72c:	mov	r3, #0
   2b730:	ldr	r2, [pc, #612]	; 2b99c <main@@Base+0xc9c>
   2b734:	add	r2, pc, r2
   2b738:	ldr	r1, [pc, #608]	; 2b9a0 <main@@Base+0xca0>
   2b73c:	add	r1, pc, r1
   2b740:	ldr	r0, [fp, #-12]
   2b744:	bl	29b04 <test_json@@Base>
   2b748:	mov	r2, r0
   2b74c:	ldr	r3, [fp, #-8]
   2b750:	orr	r3, r3, r2
   2b754:	str	r3, [fp, #-8]
   2b758:	ldr	r3, [pc, #580]	; 2b9a4 <main@@Base+0xca4>
   2b75c:	str	r3, [sp, #8]
   2b760:	mov	r3, #0
   2b764:	str	r3, [sp, #4]
   2b768:	mov	r3, #0
   2b76c:	str	r3, [sp]
   2b770:	mov	r3, #0
   2b774:	ldr	r2, [pc, #556]	; 2b9a8 <main@@Base+0xca8>
   2b778:	add	r2, pc, r2
   2b77c:	ldr	r1, [pc, #552]	; 2b9ac <main@@Base+0xcac>
   2b780:	add	r1, pc, r1
   2b784:	ldr	r0, [fp, #-12]
   2b788:	bl	29b04 <test_json@@Base>
   2b78c:	mov	r2, r0
   2b790:	ldr	r3, [fp, #-8]
   2b794:	orr	r3, r3, r2
   2b798:	str	r3, [fp, #-8]
   2b79c:	ldr	r3, [pc, #524]	; 2b9b0 <main@@Base+0xcb0>
   2b7a0:	str	r3, [sp, #8]
   2b7a4:	mov	r3, #0
   2b7a8:	str	r3, [sp, #4]
   2b7ac:	mov	r3, #0
   2b7b0:	str	r3, [sp]
   2b7b4:	mov	r3, #0
   2b7b8:	ldr	r2, [pc, #500]	; 2b9b4 <main@@Base+0xcb4>
   2b7bc:	add	r2, pc, r2
   2b7c0:	ldr	r1, [pc, #496]	; 2b9b8 <main@@Base+0xcb8>
   2b7c4:	add	r1, pc, r1
   2b7c8:	ldr	r0, [fp, #-12]
   2b7cc:	bl	29b04 <test_json@@Base>
   2b7d0:	mov	r2, r0
   2b7d4:	ldr	r3, [fp, #-8]
   2b7d8:	orr	r3, r3, r2
   2b7dc:	str	r3, [fp, #-8]
   2b7e0:	ldr	r3, [fp, #-8]
   2b7e4:	cmp	r3, #0
   2b7e8:	beq	2b7f4 <main@@Base+0xaf4>
   2b7ec:	mvn	r3, #0
   2b7f0:	b	2b7f8 <main@@Base+0xaf8>
   2b7f4:	mov	r3, #0
   2b7f8:	mov	r0, r3
   2b7fc:	sub	sp, fp, #4
   2b800:	pop	{fp, pc}
   2b804:	andeq	r7, r3, r8, asr #3
   2b808:	andeq	r0, r0, sp, lsl #4
   2b80c:	andeq	r1, r2, r4, lsr #7
   2b810:	andeq	r2, r2, ip, asr sp
   2b814:	andeq	r2, r2, r8, lsr sp
   2b818:	andeq	r2, r2, r4, asr sp
   2b81c:	andeq	r0, r0, r3, lsl r2
   2b820:	andeq	r2, r2, r0, asr #26
   2b824:	andeq	r2, r2, ip, asr sp
   2b828:	andeq	r0, r0, r6, lsl r2
   2b82c:	andeq	r2, r2, r8, asr #26
   2b830:	andeq	r2, r2, ip, ror #26
   2b834:	andeq	r0, r0, r9, lsl r2
   2b838:	andeq	r2, r2, r4, lsl #26
   2b83c:	andeq	r2, r2, ip, asr sp
   2b840:	andeq	r2, r2, r8, lsr #24
   2b844:	andeq	r2, r2, r4, asr sp
   2b848:	andeq	r0, r0, pc, lsl r2
   2b84c:	andeq	r2, r2, r0, lsr ip
   2b850:	andeq	r2, r2, r8, lsr sp
   2b854:	andeq	r0, r0, r3, lsr #4
   2b858:	andeq	r1, r2, r8, asr #3
   2b85c:	andeq	r2, r2, r0, lsr #26
   2b860:	andeq	r0, r0, r7, lsr #4
   2b864:	andeq	r1, r2, r4, lsl #3
   2b868:	andeq	r1, r2, r0, lsl r1
   2b86c:	andeq	r0, r0, r9, asr r2
   2b870:	andeq	r2, r2, r8, lsl fp
   2b874:	andeq	r2, r2, r0, asr #25
   2b878:	andeq	r2, r2, r0, lsr #22
   2b87c:	andeq	r2, r2, r0, lsr #25
   2b880:	andeq	r0, r0, pc, asr r2
   2b884:	andeq	r2, r2, r8, lsl #25
   2b888:	andeq	r2, r2, r8, lsr #25
   2b88c:	andeq	r0, r0, r2, ror #4
   2b890:	andeq	r2, r2, r4, ror #21
   2b894:	andeq	r2, r2, r8, lsl #25
   2b898:	andeq	r0, r0, r5, ror #4
   2b89c:	andeq	r2, r2, r0, ror ip
   2b8a0:	andeq	r2, r2, r8, lsl #25
   2b8a4:	andeq	r2, r2, r0, ror ip
   2b8a8:	andeq	r2, r2, r8, lsl #25
   2b8ac:	andeq	r0, r0, fp, ror #4
   2b8b0:	andeq	r2, r2, r0, ror ip
   2b8b4:	andeq	r2, r2, r8, lsl #25
   2b8b8:	andeq	r0, r0, lr, ror #4
   2b8bc:	andeq	r2, r2, ip, lsr r9
   2b8c0:	andeq	r2, r2, r8, ror #24
   2b8c4:	andeq	r0, r0, r1, ror r2
   2b8c8:	strdeq	r2, [r2], -r8
   2b8cc:	andeq	r2, r2, r0, asr ip
   2b8d0:	andeq	r2, r2, r0, asr ip
   2b8d4:	andeq	r2, r2, r4, ror #24
   2b8d8:	andeq	r0, r0, r7, ror r2
   2b8dc:	andeq	r2, r2, ip, lsl #24
   2b8e0:	andeq	r2, r2, r0, lsr #24
   2b8e4:	andeq	r0, r0, sl, ror r2
   2b8e8:	andeq	r2, r2, r0, lsl ip
   2b8ec:	andeq	r2, r2, r0, asr ip
   2b8f0:	andeq	r0, r0, lr, ror r2
   2b8f4:	andeq	r2, r2, r8, ror #24
   2b8f8:	andeq	r2, r2, ip, lsr #25
   2b8fc:	andeq	r0, r0, r2, lsl #5
   2b900:	andeq	r2, r2, r8, asr #25
   2b904:	andeq	r2, r2, r4, lsr #26
   2b908:	andeq	r0, r0, r6, lsl #5
   2b90c:	andeq	r0, r2, r8, lsl #27
   2b910:	andeq	r2, r2, r0, asr sp
   2b914:	andeq	r0, r0, r9, lsl #5
   2b918:	andeq	r0, r2, r4, asr #26
   2b91c:	andeq	r2, r2, r8, lsr sp
   2b920:	andeq	r2, r2, r4, lsr #26
   2b924:	andeq	r2, r2, ip, ror sp
   2b928:	ldrdeq	r0, [r0], -fp
   2b92c:			; <UNDEFINED> instruction: 0x00022db0
   2b930:	ldrdeq	r2, [r2], -r8
   2b934:	ldrdeq	r0, [r0], -lr
   2b938:	ldrdeq	r2, [r2], -ip
   2b93c:	andeq	r2, r2, r8, ror #27
   2b940:	andeq	r0, r0, r2, ror #5
   2b944:	andeq	r2, r2, r8, asr #27
   2b948:	andeq	r2, r2, r4, lsl #28
   2b94c:	andeq	r0, r0, lr, ror #5
   2b950:	andeq	r2, r2, r4, lsl #27
   2b954:	andeq	r2, r2, r8, lsl #28
   2b958:	strdeq	r0, [r0], -lr
   2b95c:	andeq	r2, r2, ip, ror #28
   2b960:	andeq	r2, r2, r8, lsl #29
   2b964:	andeq	r0, r0, r2, lsl #6
   2b968:	andeq	r2, r2, r4, ror lr
   2b96c:	muleq	r2, r8, lr
   2b970:	andeq	r2, r2, ip, lsl #29
   2b974:	strdeq	r2, [r2], -r4
   2b978:	andeq	r0, r0, sp, lsl #6
   2b97c:	andeq	r0, r2, r0, ror #21
   2b980:	andeq	r2, r2, ip, lsr #30
   2b984:	andeq	r0, r0, r2, lsl r3
   2b988:	andeq	r2, r2, r8, ror #30
   2b98c:	ldrdeq	r2, [r2], -r0
   2b990:	andeq	r0, r0, r7, lsl r3
   2b994:	andeq	r3, r2, r0, lsl r0
   2b998:	andeq	r3, r2, r8, lsl #1
   2b99c:	ldrdeq	r3, [r2], -r8
   2b9a0:	andeq	r3, r2, r0, asr #2
   2b9a4:	andeq	r0, r0, r1, lsr #6
   2b9a8:	andeq	r3, r2, r0, lsl #3
   2b9ac:	strdeq	r3, [r2], -r8
   2b9b0:	andeq	r0, r0, r6, lsr #6
   2b9b4:	andeq	r3, r2, r8, asr #4
   2b9b8:	andeq	r3, r2, r4, asr #5
   2b9bc:	push	{fp, lr}
   2b9c0:	add	fp, sp, #4
   2b9c4:	sub	sp, sp, #16
   2b9c8:	str	r0, [fp, #-16]
   2b9cc:	str	r1, [fp, #-20]	; 0xffffffec
   2b9d0:	mov	r3, #0
   2b9d4:	str	r3, [fp, #-12]
   2b9d8:	ldr	r3, [fp, #-16]
   2b9dc:	cmp	r3, #3
   2b9e0:	bhi	2b9ec <main@@Base+0xcec>
   2b9e4:	mov	r3, #4
   2b9e8:	str	r3, [fp, #-16]
   2b9ec:	sub	r3, fp, #12
   2b9f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b9f4:	ldr	r1, [fp, #-16]
   2b9f8:	mov	r0, r3
   2b9fc:	bl	145b0 <posix_memalign@plt>
   2ba00:	str	r0, [fp, #-8]
   2ba04:	ldr	r3, [fp, #-8]
   2ba08:	cmp	r3, #0
   2ba0c:	beq	2ba30 <main@@Base+0xd30>
   2ba10:	ldr	r3, [fp, #-12]
   2ba14:	cmp	r3, #0
   2ba18:	beq	2ba30 <main@@Base+0xd30>
   2ba1c:	ldr	r3, [fp, #-12]
   2ba20:	mov	r0, r3
   2ba24:	bl	14538 <free@plt>
   2ba28:	mov	r3, #0
   2ba2c:	str	r3, [fp, #-12]
   2ba30:	ldr	r3, [fp, #-12]
   2ba34:	mov	r0, r3
   2ba38:	sub	sp, fp, #4
   2ba3c:	pop	{fp, pc}
   2ba40:	push	{fp}		; (str fp, [sp, #-4]!)
   2ba44:	add	fp, sp, #0
   2ba48:	sub	sp, sp, #12
   2ba4c:	str	r0, [fp, #-8]
   2ba50:	ldr	r3, [fp, #-8]
   2ba54:	mov	r0, r3
   2ba58:	add	sp, fp, #0
   2ba5c:	pop	{fp}		; (ldr fp, [sp], #4)
   2ba60:	bx	lr
   2ba64:	push	{fp}		; (str fp, [sp, #-4]!)
   2ba68:	add	fp, sp, #0
   2ba6c:	sub	sp, sp, #12
   2ba70:	mov	r3, r0
   2ba74:	strb	r3, [fp, #-5]
   2ba78:	ldrb	r3, [fp, #-5]
   2ba7c:	mov	r0, r3
   2ba80:	add	sp, fp, #0
   2ba84:	pop	{fp}		; (ldr fp, [sp], #4)
   2ba88:	bx	lr
   2ba8c:	push	{fp}		; (str fp, [sp, #-4]!)
   2ba90:	add	fp, sp, #0
   2ba94:	sub	sp, sp, #12
   2ba98:	str	r0, [fp, #-8]
   2ba9c:	ldr	r3, [fp, #-8]
   2baa0:	mov	r0, r3
   2baa4:	add	sp, fp, #0
   2baa8:	pop	{fp}		; (ldr fp, [sp], #4)
   2baac:	bx	lr
   2bab0:	push	{fp}		; (str fp, [sp, #-4]!)
   2bab4:	add	fp, sp, #0
   2bab8:	sub	sp, sp, #12
   2babc:	str	r0, [fp, #-8]
   2bac0:	str	r1, [fp, #-12]
   2bac4:	ldr	r3, [fp, #-8]
   2bac8:	ldr	r2, [r3]
   2bacc:	ldr	r3, [fp, #-8]
   2bad0:	ldr	r3, [r3, #4]
   2bad4:	cmp	r2, r3
   2bad8:	bne	2bb04 <main@@Base+0xe04>
   2badc:	ldr	r3, [fp, #-12]
   2bae0:	cmp	r3, #0
   2bae4:	beq	2baf8 <main@@Base+0xdf8>
   2bae8:	ldr	r3, [fp, #-8]
   2baec:	ldr	r2, [r3, #24]
   2baf0:	ldr	r3, [fp, #-12]
   2baf4:	str	r2, [r3]
   2baf8:	ldr	r3, [fp, #-8]
   2bafc:	ldr	r3, [r3, #8]
   2bb00:	b	2bb20 <main@@Base+0xe20>
   2bb04:	ldr	r3, [fp, #-12]
   2bb08:	cmp	r3, #0
   2bb0c:	beq	2bb1c <main@@Base+0xe1c>
   2bb10:	ldr	r3, [fp, #-12]
   2bb14:	mov	r2, #0
   2bb18:	str	r2, [r3]
   2bb1c:	mov	r3, #0
   2bb20:	mov	r0, r3
   2bb24:	add	sp, fp, #0
   2bb28:	pop	{fp}		; (ldr fp, [sp], #4)
   2bb2c:	bx	lr
   2bb30:	push	{fp, lr}
   2bb34:	add	fp, sp, #4
   2bb38:	sub	sp, sp, #16
   2bb3c:	str	r0, [fp, #-16]
   2bb40:	str	r1, [fp, #-20]	; 0xffffffec
   2bb44:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bb48:	mov	r1, #0
   2bb4c:	ldr	r0, [fp, #-16]
   2bb50:	bl	145e0 <memchr@plt>
   2bb54:	str	r0, [fp, #-8]
   2bb58:	ldr	r3, [fp, #-8]
   2bb5c:	cmp	r3, #0
   2bb60:	beq	2bb74 <main@@Base+0xe74>
   2bb64:	ldr	r2, [fp, #-8]
   2bb68:	ldr	r3, [fp, #-16]
   2bb6c:	sub	r3, r2, r3
   2bb70:	b	2bb78 <main@@Base+0xe78>
   2bb74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb78:	mov	r0, r3
   2bb7c:	sub	sp, fp, #4
   2bb80:	pop	{fp, pc}

0002bb84 <flatcc_builder_default_alloc@@Base>:
   2bb84:	push	{fp, lr}
   2bb88:	add	fp, sp, #4
   2bb8c:	sub	sp, sp, #24
   2bb90:	str	r0, [fp, #-16]
   2bb94:	str	r1, [fp, #-20]	; 0xffffffec
   2bb98:	str	r2, [fp, #-24]	; 0xffffffe8
   2bb9c:	str	r3, [fp, #-28]	; 0xffffffe4
   2bba0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bba4:	cmp	r3, #0
   2bba8:	bne	2bbec <flatcc_builder_default_alloc@@Base+0x68>
   2bbac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbb0:	ldr	r3, [r3]
   2bbb4:	cmp	r3, #0
   2bbb8:	beq	2bbe4 <flatcc_builder_default_alloc@@Base+0x60>
   2bbbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbc0:	ldr	r3, [r3]
   2bbc4:	mov	r0, r3
   2bbc8:	bl	14538 <free@plt>
   2bbcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbd0:	mov	r2, #0
   2bbd4:	str	r2, [r3]
   2bbd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbdc:	mov	r2, #0
   2bbe0:	str	r2, [r3, #4]
   2bbe4:	mov	r3, #0
   2bbe8:	b	2bd40 <flatcc_builder_default_alloc@@Base+0x1bc>
   2bbec:	ldr	r3, [fp, #4]
   2bbf0:	sub	r3, r3, #1
   2bbf4:	cmp	r3, #6
   2bbf8:	addls	pc, pc, r3, lsl #2
   2bbfc:	b	2bc4c <flatcc_builder_default_alloc@@Base+0xc8>
   2bc00:	b	2bc1c <flatcc_builder_default_alloc@@Base+0x98>
   2bc04:	b	2bc4c <flatcc_builder_default_alloc@@Base+0xc8>
   2bc08:	b	2bc4c <flatcc_builder_default_alloc@@Base+0xc8>
   2bc0c:	b	2bc34 <flatcc_builder_default_alloc@@Base+0xb0>
   2bc10:	b	2bc28 <flatcc_builder_default_alloc@@Base+0xa4>
   2bc14:	b	2bc4c <flatcc_builder_default_alloc@@Base+0xc8>
   2bc18:	b	2bc40 <flatcc_builder_default_alloc@@Base+0xbc>
   2bc1c:	mov	r3, #256	; 0x100
   2bc20:	str	r3, [fp, #-8]
   2bc24:	b	2bc58 <flatcc_builder_default_alloc@@Base+0xd4>
   2bc28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bc2c:	str	r3, [fp, #-8]
   2bc30:	b	2bc58 <flatcc_builder_default_alloc@@Base+0xd4>
   2bc34:	mov	r3, #288	; 0x120
   2bc38:	str	r3, [fp, #-8]
   2bc3c:	b	2bc58 <flatcc_builder_default_alloc@@Base+0xd4>
   2bc40:	mov	r3, #64	; 0x40
   2bc44:	str	r3, [fp, #-8]
   2bc48:	b	2bc58 <flatcc_builder_default_alloc@@Base+0xd4>
   2bc4c:	mov	r3, #32
   2bc50:	str	r3, [fp, #-8]
   2bc54:	nop			; (mov r0, r0)
   2bc58:	b	2bc68 <flatcc_builder_default_alloc@@Base+0xe4>
   2bc5c:	ldr	r3, [fp, #-8]
   2bc60:	lsl	r3, r3, #1
   2bc64:	str	r3, [fp, #-8]
   2bc68:	ldr	r2, [fp, #-8]
   2bc6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bc70:	cmp	r2, r3
   2bc74:	bcc	2bc5c <flatcc_builder_default_alloc@@Base+0xd8>
   2bc78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc7c:	ldr	r2, [r3, #4]
   2bc80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bc84:	cmp	r2, r3
   2bc88:	bcc	2bcac <flatcc_builder_default_alloc@@Base+0x128>
   2bc8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bc90:	ldr	r3, [r3, #4]
   2bc94:	lsr	r2, r3, #1
   2bc98:	ldr	r3, [fp, #-8]
   2bc9c:	cmp	r2, r3
   2bca0:	bcc	2bcac <flatcc_builder_default_alloc@@Base+0x128>
   2bca4:	mov	r3, #0
   2bca8:	b	2bd40 <flatcc_builder_default_alloc@@Base+0x1bc>
   2bcac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcb0:	ldr	r3, [r3]
   2bcb4:	ldr	r1, [fp, #-8]
   2bcb8:	mov	r0, r3
   2bcbc:	bl	1455c <realloc@plt>
   2bcc0:	str	r0, [fp, #-12]
   2bcc4:	ldr	r3, [fp, #-12]
   2bcc8:	cmp	r3, #0
   2bccc:	bne	2bcd8 <flatcc_builder_default_alloc@@Base+0x154>
   2bcd0:	mvn	r3, #0
   2bcd4:	b	2bd40 <flatcc_builder_default_alloc@@Base+0x1bc>
   2bcd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2bcdc:	cmp	r3, #0
   2bce0:	beq	2bd24 <flatcc_builder_default_alloc@@Base+0x1a0>
   2bce4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bce8:	ldr	r2, [r3, #4]
   2bcec:	ldr	r3, [fp, #-8]
   2bcf0:	cmp	r2, r3
   2bcf4:	bcs	2bd24 <flatcc_builder_default_alloc@@Base+0x1a0>
   2bcf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcfc:	ldr	r3, [r3, #4]
   2bd00:	ldr	r2, [fp, #-12]
   2bd04:	add	r0, r2, r3
   2bd08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd0c:	ldr	r3, [r3, #4]
   2bd10:	ldr	r2, [fp, #-8]
   2bd14:	sub	r3, r2, r3
   2bd18:	mov	r2, r3
   2bd1c:	mov	r1, #0
   2bd20:	bl	145bc <memset@plt>
   2bd24:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd28:	ldr	r2, [fp, #-12]
   2bd2c:	str	r2, [r3]
   2bd30:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd34:	ldr	r2, [fp, #-8]
   2bd38:	str	r2, [r3, #4]
   2bd3c:	mov	r3, #0
   2bd40:	mov	r0, r3
   2bd44:	sub	sp, fp, #4
   2bd48:	pop	{fp, pc}
   2bd4c:	push	{fp}		; (str fp, [sp, #-4]!)
   2bd50:	add	fp, sp, #0
   2bd54:	sub	sp, sp, #20
   2bd58:	str	r0, [fp, #-16]
   2bd5c:	str	r1, [fp, #-20]	; 0xffffffec
   2bd60:	ldr	r3, [fp, #-16]
   2bd64:	add	r3, r3, #52	; 0x34
   2bd68:	add	r3, r3, #8
   2bd6c:	str	r3, [fp, #-8]
   2bd70:	ldr	r3, [fp, #-16]
   2bd74:	ldr	r2, [r3, #60]	; 0x3c
   2bd78:	ldr	r3, [fp, #-16]
   2bd7c:	ldr	r3, [r3, #28]
   2bd80:	add	r2, r2, r3
   2bd84:	ldr	r3, [fp, #-16]
   2bd88:	str	r2, [r3, #16]
   2bd8c:	ldr	r3, [fp, #-8]
   2bd90:	ldr	r2, [r3, #4]
   2bd94:	ldr	r3, [fp, #-16]
   2bd98:	ldr	r3, [r3, #28]
   2bd9c:	sub	r2, r2, r3
   2bda0:	ldr	r3, [fp, #-16]
   2bda4:	str	r2, [r3, #24]
   2bda8:	ldr	r3, [fp, #-16]
   2bdac:	ldr	r2, [r3, #24]
   2bdb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bdb4:	cmp	r2, r3
   2bdb8:	bls	2bdc8 <flatcc_builder_default_alloc@@Base+0x244>
   2bdbc:	ldr	r3, [fp, #-16]
   2bdc0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bdc4:	str	r2, [r3, #24]
   2bdc8:	ldr	r3, [fp, #-16]
   2bdcc:	ldr	r3, [r3, #32]
   2bdd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bdd4:	str	r2, [r3, #4]
   2bdd8:	nop			; (mov r0, r0)
   2bddc:	add	sp, fp, #0
   2bde0:	pop	{fp}		; (ldr fp, [sp], #4)
   2bde4:	bx	lr
   2bde8:	push	{r4, fp, lr}
   2bdec:	add	fp, sp, #8
   2bdf0:	sub	sp, sp, #36	; 0x24
   2bdf4:	str	r0, [fp, #-24]	; 0xffffffe8
   2bdf8:	str	r1, [fp, #-28]	; 0xffffffe4
   2bdfc:	str	r2, [fp, #-32]	; 0xffffffe0
   2be00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be04:	add	r3, r3, #52	; 0x34
   2be08:	add	r3, r3, #8
   2be0c:	str	r3, [fp, #-16]
   2be10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be14:	ldr	r4, [r3, #48]	; 0x30
   2be18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be1c:	ldr	r0, [r3, #40]	; 0x28
   2be20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be24:	ldr	r2, [r3, #28]
   2be28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2be2c:	add	r2, r2, r3
   2be30:	mov	r3, #1
   2be34:	str	r3, [sp]
   2be38:	mov	r3, #1
   2be3c:	ldr	r1, [fp, #-16]
   2be40:	blx	r4
   2be44:	mov	r3, r0
   2be48:	cmp	r3, #0
   2be4c:	beq	2be58 <flatcc_builder_default_alloc@@Base+0x2d4>
   2be50:	mvn	r3, #0
   2be54:	b	2be68 <flatcc_builder_default_alloc@@Base+0x2e4>
   2be58:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2be5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2be60:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   2be64:	mov	r3, #0
   2be68:	mov	r0, r3
   2be6c:	sub	sp, fp, #8
   2be70:	pop	{r4, fp, pc}
   2be74:	push	{fp, lr}
   2be78:	add	fp, sp, #4
   2be7c:	sub	sp, sp, #16
   2be80:	str	r0, [fp, #-16]
   2be84:	str	r1, [fp, #-20]	; 0xffffffec
   2be88:	ldr	r3, [fp, #-16]
   2be8c:	ldr	r3, [r3, #20]
   2be90:	str	r3, [fp, #-8]
   2be94:	ldr	r3, [fp, #-16]
   2be98:	ldr	r2, [r3, #20]
   2be9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bea0:	add	r2, r2, r3
   2bea4:	ldr	r3, [fp, #-16]
   2bea8:	str	r2, [r3, #20]
   2beac:	ldr	r3, [fp, #-16]
   2beb0:	ldr	r2, [r3, #20]
   2beb4:	ldr	r3, [fp, #-16]
   2beb8:	ldr	r3, [r3, #24]
   2bebc:	cmp	r2, r3
   2bec0:	bcc	2bef4 <flatcc_builder_default_alloc@@Base+0x370>
   2bec4:	ldr	r3, [fp, #-16]
   2bec8:	ldr	r3, [r3, #20]
   2becc:	add	r3, r3, #1
   2bed0:	mvn	r2, #3
   2bed4:	mov	r1, r3
   2bed8:	ldr	r0, [fp, #-16]
   2bedc:	bl	2bde8 <flatcc_builder_default_alloc@@Base+0x264>
   2bee0:	mov	r3, r0
   2bee4:	cmp	r3, #0
   2bee8:	beq	2bef4 <flatcc_builder_default_alloc@@Base+0x370>
   2beec:	mov	r3, #0
   2bef0:	b	2bf04 <flatcc_builder_default_alloc@@Base+0x380>
   2bef4:	ldr	r3, [fp, #-16]
   2bef8:	ldr	r2, [r3, #16]
   2befc:	ldr	r3, [fp, #-8]
   2bf00:	add	r3, r2, r3
   2bf04:	mov	r0, r3
   2bf08:	sub	sp, fp, #4
   2bf0c:	pop	{fp, pc}
   2bf10:	push	{fp, lr}
   2bf14:	add	fp, sp, #4
   2bf18:	sub	sp, sp, #8
   2bf1c:	str	r0, [fp, #-8]
   2bf20:	str	r1, [fp, #-12]
   2bf24:	ldr	r3, [fp, #-8]
   2bf28:	ldr	r2, [r3, #20]
   2bf2c:	ldr	r3, [fp, #-12]
   2bf30:	sub	r2, r2, r3
   2bf34:	ldr	r3, [fp, #-8]
   2bf38:	str	r2, [r3, #20]
   2bf3c:	ldr	r3, [fp, #-8]
   2bf40:	ldr	r2, [r3, #16]
   2bf44:	ldr	r3, [fp, #-8]
   2bf48:	ldr	r3, [r3, #20]
   2bf4c:	add	r3, r2, r3
   2bf50:	ldr	r2, [fp, #-12]
   2bf54:	mov	r1, #0
   2bf58:	mov	r0, r3
   2bf5c:	bl	145bc <memset@plt>
   2bf60:	nop			; (mov r0, r0)
   2bf64:	sub	sp, fp, #4
   2bf68:	pop	{fp, pc}
   2bf6c:	push	{fp, lr}
   2bf70:	add	fp, sp, #4
   2bf74:	sub	sp, sp, #24
   2bf78:	str	r0, [fp, #-16]
   2bf7c:	str	r1, [fp, #-20]	; 0xffffffec
   2bf80:	str	r2, [fp, #-24]	; 0xffffffe8
   2bf84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bf88:	ldr	r0, [fp, #-16]
   2bf8c:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   2bf90:	str	r0, [fp, #-8]
   2bf94:	ldr	r3, [fp, #-8]
   2bf98:	cmp	r3, #0
   2bf9c:	bne	2bfa8 <flatcc_builder_default_alloc@@Base+0x424>
   2bfa0:	mov	r3, #0
   2bfa4:	b	2bfbc <flatcc_builder_default_alloc@@Base+0x438>
   2bfa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2bfac:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bfb0:	ldr	r0, [fp, #-8]
   2bfb4:	bl	14544 <memcpy@plt>
   2bfb8:	ldr	r3, [fp, #-8]
   2bfbc:	mov	r0, r3
   2bfc0:	sub	sp, fp, #4
   2bfc4:	pop	{fp, pc}
   2bfc8:	push	{fp, lr}
   2bfcc:	add	fp, sp, #4
   2bfd0:	sub	sp, sp, #24
   2bfd4:	str	r0, [fp, #-16]
   2bfd8:	str	r1, [fp, #-20]	; 0xffffffec
   2bfdc:	strh	r2, [fp, #-22]	; 0xffffffea
   2bfe0:	strh	r3, [fp, #-24]	; 0xffffffe8
   2bfe4:	ldr	r3, [fp, #-16]
   2bfe8:	ldr	r2, [r3, #20]
   2bfec:	ldrh	r3, [fp, #-22]	; 0xffffffea
   2bff0:	add	r3, r2, r3
   2bff4:	sub	r3, r3, #1
   2bff8:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2bffc:	rsb	r2, r2, #0
   2c000:	and	r3, r3, r2
   2c004:	str	r3, [fp, #-8]
   2c008:	ldr	r2, [fp, #-8]
   2c00c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c010:	add	r2, r2, r3
   2c014:	ldr	r3, [fp, #-16]
   2c018:	str	r2, [r3, #20]
   2c01c:	ldr	r3, [fp, #-16]
   2c020:	ldr	r2, [r3, #20]
   2c024:	ldr	r3, [fp, #-16]
   2c028:	ldr	r3, [r3, #24]
   2c02c:	cmp	r2, r3
   2c030:	bcc	2c064 <flatcc_builder_default_alloc@@Base+0x4e0>
   2c034:	ldr	r3, [fp, #-16]
   2c038:	ldr	r3, [r3, #20]
   2c03c:	add	r3, r3, #1
   2c040:	ldr	r2, [pc, #136]	; 2c0d0 <flatcc_builder_default_alloc@@Base+0x54c>
   2c044:	mov	r1, r3
   2c048:	ldr	r0, [fp, #-16]
   2c04c:	bl	2bde8 <flatcc_builder_default_alloc@@Base+0x264>
   2c050:	mov	r3, r0
   2c054:	cmp	r3, #0
   2c058:	beq	2c064 <flatcc_builder_default_alloc@@Base+0x4e0>
   2c05c:	mov	r3, #0
   2c060:	b	2c0c4 <flatcc_builder_default_alloc@@Base+0x540>
   2c064:	ldr	r3, [fp, #-16]
   2c068:	ldr	r2, [r3, #4]
   2c06c:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   2c070:	lsl	r3, r3, #1
   2c074:	add	r3, r2, r3
   2c078:	ldr	r2, [fp, #-8]
   2c07c:	uxth	r2, r2
   2c080:	add	r2, r2, #4
   2c084:	uxth	r2, r2
   2c088:	strh	r2, [r3]
   2c08c:	ldr	r3, [fp, #-16]
   2c090:	ldrh	r3, [r3, #8]
   2c094:	ldrh	r2, [fp, #-24]	; 0xffffffe8
   2c098:	cmp	r2, r3
   2c09c:	bcc	2c0b4 <flatcc_builder_default_alloc@@Base+0x530>
   2c0a0:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   2c0a4:	add	r3, r3, #1
   2c0a8:	uxth	r2, r3
   2c0ac:	ldr	r3, [fp, #-16]
   2c0b0:	strh	r2, [r3, #8]
   2c0b4:	ldr	r3, [fp, #-16]
   2c0b8:	ldr	r2, [r3, #16]
   2c0bc:	ldr	r3, [fp, #-8]
   2c0c0:	add	r3, r2, r3
   2c0c4:	mov	r0, r3
   2c0c8:	sub	sp, fp, #4
   2c0cc:	pop	{fp, pc}
   2c0d0:	strdeq	pc, [r0], -ip
   2c0d4:	push	{fp, lr}
   2c0d8:	add	fp, sp, #4
   2c0dc:	sub	sp, sp, #16
   2c0e0:	str	r0, [fp, #-16]
   2c0e4:	mov	r3, r1
   2c0e8:	strh	r3, [fp, #-18]	; 0xffffffee
   2c0ec:	ldr	r3, [fp, #-16]
   2c0f0:	ldr	r3, [r3, #20]
   2c0f4:	add	r3, r3, #3
   2c0f8:	bic	r3, r3, #3
   2c0fc:	str	r3, [fp, #-8]
   2c100:	ldr	r3, [fp, #-8]
   2c104:	add	r2, r3, #4
   2c108:	ldr	r3, [fp, #-16]
   2c10c:	str	r2, [r3, #20]
   2c110:	ldr	r3, [fp, #-16]
   2c114:	ldr	r2, [r3, #20]
   2c118:	ldr	r3, [fp, #-16]
   2c11c:	ldr	r3, [r3, #24]
   2c120:	cmp	r2, r3
   2c124:	bls	2c154 <flatcc_builder_default_alloc@@Base+0x5d0>
   2c128:	ldr	r3, [fp, #-16]
   2c12c:	ldr	r3, [r3, #20]
   2c130:	ldr	r2, [pc, #168]	; 2c1e0 <flatcc_builder_default_alloc@@Base+0x65c>
   2c134:	mov	r1, r3
   2c138:	ldr	r0, [fp, #-16]
   2c13c:	bl	2bde8 <flatcc_builder_default_alloc@@Base+0x264>
   2c140:	mov	r3, r0
   2c144:	cmp	r3, #0
   2c148:	beq	2c154 <flatcc_builder_default_alloc@@Base+0x5d0>
   2c14c:	mov	r3, #0
   2c150:	b	2c1d4 <flatcc_builder_default_alloc@@Base+0x650>
   2c154:	ldr	r3, [fp, #-16]
   2c158:	ldr	r2, [r3, #4]
   2c15c:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2c160:	lsl	r3, r3, #1
   2c164:	add	r3, r2, r3
   2c168:	ldr	r2, [fp, #-8]
   2c16c:	uxth	r2, r2
   2c170:	add	r2, r2, #4
   2c174:	uxth	r2, r2
   2c178:	strh	r2, [r3]
   2c17c:	ldr	r3, [fp, #-16]
   2c180:	ldrh	r3, [r3, #8]
   2c184:	ldrh	r2, [fp, #-18]	; 0xffffffee
   2c188:	cmp	r2, r3
   2c18c:	bcc	2c1a4 <flatcc_builder_default_alloc@@Base+0x620>
   2c190:	ldrh	r3, [fp, #-18]	; 0xffffffee
   2c194:	add	r3, r3, #1
   2c198:	uxth	r2, r3
   2c19c:	ldr	r3, [fp, #-16]
   2c1a0:	strh	r2, [r3, #8]
   2c1a4:	ldr	r3, [fp, #-16]
   2c1a8:	ldr	r3, [r3]
   2c1ac:	add	r1, r3, #2
   2c1b0:	ldr	r2, [fp, #-16]
   2c1b4:	str	r1, [r2]
   2c1b8:	ldr	r2, [fp, #-8]
   2c1bc:	uxth	r2, r2
   2c1c0:	strh	r2, [r3]
   2c1c4:	ldr	r3, [fp, #-16]
   2c1c8:	ldr	r2, [r3, #16]
   2c1cc:	ldr	r3, [fp, #-8]
   2c1d0:	add	r3, r2, r3
   2c1d4:	mov	r0, r3
   2c1d8:	sub	sp, fp, #4
   2c1dc:	pop	{fp, pc}
   2c1e0:	strdeq	pc, [r0], -ip
   2c1e4:	push	{r4, fp, lr}
   2c1e8:	add	fp, sp, #8
   2c1ec:	sub	sp, sp, #36	; 0x24
   2c1f0:	str	r0, [fp, #-24]	; 0xffffffe8
   2c1f4:	str	r1, [fp, #-28]	; 0xffffffe4
   2c1f8:	str	r2, [fp, #-32]	; 0xffffffe0
   2c1fc:	str	r3, [fp, #-36]	; 0xffffffdc
   2c200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c204:	add	r2, r3, #52	; 0x34
   2c208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c20c:	lsl	r3, r3, #3
   2c210:	add	r3, r2, r3
   2c214:	str	r3, [fp, #-16]
   2c218:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c21c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c220:	add	r2, r2, r3
   2c224:	ldr	r3, [fp, #-16]
   2c228:	ldr	r3, [r3, #4]
   2c22c:	cmp	r2, r3
   2c230:	bls	2c290 <flatcc_builder_default_alloc@@Base+0x70c>
   2c234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c238:	ldr	r4, [r3, #48]	; 0x30
   2c23c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c240:	ldr	r0, [r3, #40]	; 0x28
   2c244:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c248:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c24c:	add	r2, r2, r3
   2c250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c254:	str	r3, [sp]
   2c258:	ldr	r3, [fp, #4]
   2c25c:	ldr	r1, [fp, #-16]
   2c260:	blx	r4
   2c264:	mov	r3, r0
   2c268:	cmp	r3, #0
   2c26c:	beq	2c290 <flatcc_builder_default_alloc@@Base+0x70c>
   2c270:	ldr	r3, [pc, #56]	; 2c2b0 <flatcc_builder_default_alloc@@Base+0x72c>
   2c274:	add	r3, pc, r3
   2c278:	mov	r2, #308	; 0x134
   2c27c:	ldr	r1, [pc, #48]	; 2c2b4 <flatcc_builder_default_alloc@@Base+0x730>
   2c280:	add	r1, pc, r1
   2c284:	ldr	r0, [pc, #44]	; 2c2b8 <flatcc_builder_default_alloc@@Base+0x734>
   2c288:	add	r0, pc, r0
   2c28c:	bl	14610 <__assert_fail@plt>
   2c290:	ldr	r3, [fp, #-16]
   2c294:	ldr	r3, [r3]
   2c298:	mov	r2, r3
   2c29c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c2a0:	add	r3, r2, r3
   2c2a4:	mov	r0, r3
   2c2a8:	sub	sp, fp, #8
   2c2ac:	pop	{r4, fp, pc}
   2c2b0:	ldrdeq	r2, [r2], -ip
   2c2b4:	muleq	r2, ip, sl
   2c2b8:	strdeq	r2, [r2], -r4
   2c2bc:	push	{fp, lr}
   2c2c0:	add	fp, sp, #4
   2c2c4:	sub	sp, sp, #24
   2c2c8:	str	r0, [fp, #-16]
   2c2cc:	str	r1, [fp, #-20]	; 0xffffffec
   2c2d0:	ldr	r3, [fp, #-16]
   2c2d4:	ldr	r3, [r3, #32]
   2c2d8:	ldr	r2, [r3, #16]
   2c2dc:	ldr	r3, [fp, #-16]
   2c2e0:	ldr	r3, [r3, #32]
   2c2e4:	ldrh	r3, [r3, #28]
   2c2e8:	lsl	r3, r3, #1
   2c2ec:	add	r3, r2, r3
   2c2f0:	str	r3, [fp, #-8]
   2c2f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c2f8:	add	r3, r3, #2
   2c2fc:	lsl	r3, r3, #1
   2c300:	str	r3, [fp, #-12]
   2c304:	mov	r3, #1
   2c308:	str	r3, [sp]
   2c30c:	ldr	r3, [fp, #-12]
   2c310:	ldr	r2, [fp, #-8]
   2c314:	mov	r1, #0
   2c318:	ldr	r0, [fp, #-16]
   2c31c:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2c320:	mov	r2, r0
   2c324:	ldr	r3, [fp, #-16]
   2c328:	str	r2, [r3, #4]
   2c32c:	ldr	r3, [fp, #-16]
   2c330:	ldr	r3, [r3, #4]
   2c334:	cmp	r3, #0
   2c338:	bne	2c344 <flatcc_builder_default_alloc@@Base+0x7c0>
   2c33c:	mvn	r3, #0
   2c340:	b	2c3bc <flatcc_builder_default_alloc@@Base+0x838>
   2c344:	ldr	r3, [fp, #-16]
   2c348:	ldr	r3, [r3, #4]
   2c34c:	add	r2, r3, #4
   2c350:	ldr	r3, [fp, #-16]
   2c354:	str	r2, [r3, #4]
   2c358:	ldr	r3, [fp, #-16]
   2c35c:	ldr	r3, [r3, #32]
   2c360:	ldr	r3, [r3, #20]
   2c364:	str	r3, [fp, #-8]
   2c368:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c36c:	lsl	r3, r3, #1
   2c370:	add	r3, r3, #1
   2c374:	str	r3, [fp, #-12]
   2c378:	mov	r3, #0
   2c37c:	str	r3, [sp]
   2c380:	ldr	r3, [fp, #-12]
   2c384:	ldr	r2, [fp, #-8]
   2c388:	mov	r1, #3
   2c38c:	ldr	r0, [fp, #-16]
   2c390:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2c394:	mov	r2, r0
   2c398:	ldr	r3, [fp, #-16]
   2c39c:	str	r2, [r3]
   2c3a0:	ldr	r3, [fp, #-16]
   2c3a4:	ldr	r3, [r3]
   2c3a8:	cmp	r3, #0
   2c3ac:	bne	2c3b8 <flatcc_builder_default_alloc@@Base+0x834>
   2c3b0:	mvn	r3, #0
   2c3b4:	b	2c3bc <flatcc_builder_default_alloc@@Base+0x838>
   2c3b8:	mov	r3, #0
   2c3bc:	mov	r0, r3
   2c3c0:	sub	sp, fp, #4
   2c3c4:	pop	{fp, pc}
   2c3c8:	push	{r4, fp, lr}
   2c3cc:	add	fp, sp, #8
   2c3d0:	sub	sp, sp, #36	; 0x24
   2c3d4:	str	r0, [fp, #-32]	; 0xffffffe0
   2c3d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c3dc:	add	r3, r3, #52	; 0x34
   2c3e0:	add	r3, r3, #40	; 0x28
   2c3e4:	str	r3, [fp, #-24]	; 0xffffffe8
   2c3e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c3ec:	ldr	r3, [r3, #124]	; 0x7c
   2c3f0:	cmp	r3, #0
   2c3f4:	beq	2c418 <flatcc_builder_default_alloc@@Base+0x894>
   2c3f8:	ldr	r3, [pc, #280]	; 2c518 <flatcc_builder_default_alloc@@Base+0x994>
   2c3fc:	add	r3, pc, r3
   2c400:	ldr	r2, [pc, #276]	; 2c51c <flatcc_builder_default_alloc@@Base+0x998>
   2c404:	ldr	r1, [pc, #276]	; 2c520 <flatcc_builder_default_alloc@@Base+0x99c>
   2c408:	add	r1, pc, r1
   2c40c:	ldr	r0, [pc, #272]	; 2c524 <flatcc_builder_default_alloc@@Base+0x9a0>
   2c410:	add	r0, pc, r0
   2c414:	bl	14610 <__assert_fail@plt>
   2c418:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c41c:	ldr	r2, [r3, #124]	; 0x7c
   2c420:	mov	r3, #0
   2c424:	str	r3, [sp]
   2c428:	mov	r3, #16
   2c42c:	mov	r1, #6
   2c430:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c434:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2c438:	mov	r3, r0
   2c43c:	cmp	r3, #0
   2c440:	bne	2c44c <flatcc_builder_default_alloc@@Base+0x8c8>
   2c444:	mvn	r3, #0
   2c448:	b	2c50c <flatcc_builder_default_alloc@@Base+0x988>
   2c44c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c450:	mov	r2, #16
   2c454:	str	r2, [r3, #124]	; 0x7c
   2c458:	mov	r3, #256	; 0x100
   2c45c:	str	r3, [fp, #-16]
   2c460:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c464:	ldr	r4, [r3, #48]	; 0x30
   2c468:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c46c:	ldr	r0, [r3, #40]	; 0x28
   2c470:	mov	r3, #5
   2c474:	str	r3, [sp]
   2c478:	mov	r3, #1
   2c47c:	ldr	r2, [fp, #-16]
   2c480:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c484:	blx	r4
   2c488:	mov	r3, r0
   2c48c:	cmp	r3, #0
   2c490:	beq	2c4a8 <flatcc_builder_default_alloc@@Base+0x924>
   2c494:	mvn	r3, #0
   2c498:	b	2c50c <flatcc_builder_default_alloc@@Base+0x988>
   2c49c:	ldr	r3, [fp, #-16]
   2c4a0:	lsl	r3, r3, #1
   2c4a4:	str	r3, [fp, #-16]
   2c4a8:	ldr	r3, [fp, #-16]
   2c4ac:	lsl	r2, r3, #1
   2c4b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c4b4:	ldr	r3, [r3, #4]
   2c4b8:	cmp	r2, r3
   2c4bc:	bls	2c49c <flatcc_builder_default_alloc@@Base+0x918>
   2c4c0:	ldr	r3, [fp, #-16]
   2c4c4:	lsr	r3, r3, #2
   2c4c8:	str	r3, [fp, #-16]
   2c4cc:	mov	r3, #0
   2c4d0:	str	r3, [fp, #-20]	; 0xffffffec
   2c4d4:	b	2c4e4 <flatcc_builder_default_alloc@@Base+0x960>
   2c4d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c4dc:	add	r3, r3, #1
   2c4e0:	str	r3, [fp, #-20]	; 0xffffffec
   2c4e4:	mov	r2, #1
   2c4e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c4ec:	lsl	r2, r2, r3
   2c4f0:	ldr	r3, [fp, #-16]
   2c4f4:	cmp	r2, r3
   2c4f8:	bcc	2c4d8 <flatcc_builder_default_alloc@@Base+0x954>
   2c4fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c500:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c504:	str	r2, [r3, #116]	; 0x74
   2c508:	mov	r3, #0
   2c50c:	mov	r0, r3
   2c510:	sub	sp, fp, #8
   2c514:	pop	{r4, fp, pc}
   2c518:	andeq	r2, r2, r8, asr #26
   2c51c:	andeq	r0, r0, r6, asr r1
   2c520:	andeq	r2, r2, r4, lsl r9
   2c524:	andeq	r2, r2, r0, ror r9
   2c528:	push	{fp, lr}
   2c52c:	add	fp, sp, #4
   2c530:	sub	sp, sp, #16
   2c534:	str	r0, [fp, #-16]
   2c538:	str	r1, [fp, #-20]	; 0xffffffec
   2c53c:	ldr	r3, [fp, #-16]
   2c540:	ldr	r3, [r3, #116]	; 0x74
   2c544:	cmp	r3, #0
   2c548:	bne	2c568 <flatcc_builder_default_alloc@@Base+0x9e4>
   2c54c:	ldr	r0, [fp, #-16]
   2c550:	bl	2c3c8 <flatcc_builder_default_alloc@@Base+0x844>
   2c554:	mov	r3, r0
   2c558:	cmp	r3, #0
   2c55c:	beq	2c568 <flatcc_builder_default_alloc@@Base+0x9e4>
   2c560:	mov	r3, #0
   2c564:	b	2c594 <flatcc_builder_default_alloc@@Base+0xa10>
   2c568:	ldr	r3, [fp, #-16]
   2c56c:	ldr	r3, [r3, #92]	; 0x5c
   2c570:	str	r3, [fp, #-8]
   2c574:	ldr	r3, [fp, #-16]
   2c578:	ldr	r3, [r3, #116]	; 0x74
   2c57c:	rsb	r3, r3, #32
   2c580:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c584:	lsr	r3, r2, r3
   2c588:	lsl	r3, r3, #2
   2c58c:	ldr	r2, [fp, #-8]
   2c590:	add	r3, r2, r3
   2c594:	mov	r0, r3
   2c598:	sub	sp, fp, #4
   2c59c:	pop	{fp, pc}

0002c5a0 <flatcc_builder_flush_vtable_cache@@Base>:
   2c5a0:	push	{fp, lr}
   2c5a4:	add	fp, sp, #4
   2c5a8:	sub	sp, sp, #16
   2c5ac:	str	r0, [fp, #-16]
   2c5b0:	ldr	r3, [fp, #-16]
   2c5b4:	add	r3, r3, #52	; 0x34
   2c5b8:	add	r3, r3, #40	; 0x28
   2c5bc:	str	r3, [fp, #-8]
   2c5c0:	ldr	r3, [fp, #-16]
   2c5c4:	ldr	r3, [r3, #116]	; 0x74
   2c5c8:	cmp	r3, #0
   2c5cc:	beq	2c608 <flatcc_builder_flush_vtable_cache@@Base+0x68>
   2c5d0:	ldr	r3, [fp, #-8]
   2c5d4:	ldr	r0, [r3]
   2c5d8:	ldr	r3, [fp, #-8]
   2c5dc:	ldr	r3, [r3, #4]
   2c5e0:	mov	r2, r3
   2c5e4:	mov	r1, #0
   2c5e8:	bl	145bc <memset@plt>
   2c5ec:	ldr	r3, [fp, #-16]
   2c5f0:	mov	r2, #16
   2c5f4:	str	r2, [r3, #124]	; 0x7c
   2c5f8:	ldr	r3, [fp, #-16]
   2c5fc:	mov	r2, #0
   2c600:	str	r2, [r3, #120]	; 0x78
   2c604:	b	2c60c <flatcc_builder_flush_vtable_cache@@Base+0x6c>
   2c608:	nop			; (mov r0, r0)
   2c60c:	sub	sp, fp, #4
   2c610:	pop	{fp, pc}

0002c614 <flatcc_builder_custom_init@@Base>:
   2c614:	push	{r4, fp, lr}
   2c618:	add	fp, sp, #8
   2c61c:	sub	sp, sp, #20
   2c620:	str	r0, [fp, #-16]
   2c624:	str	r1, [fp, #-20]	; 0xffffffec
   2c628:	str	r2, [fp, #-24]	; 0xffffffe8
   2c62c:	str	r3, [fp, #-28]	; 0xffffffe4
   2c630:	ldr	r4, [pc, #152]	; 2c6d0 <flatcc_builder_custom_init@@Base+0xbc>
   2c634:	add	r4, pc, r4
   2c638:	mov	r2, #232	; 0xe8
   2c63c:	mov	r1, #0
   2c640:	ldr	r0, [fp, #-16]
   2c644:	bl	145bc <memset@plt>
   2c648:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c64c:	cmp	r3, #0
   2c650:	bne	2c678 <flatcc_builder_custom_init@@Base+0x64>
   2c654:	ldr	r3, [fp, #-16]
   2c658:	mov	r2, #1
   2c65c:	str	r2, [r3, #184]	; 0xb8
   2c660:	ldr	r3, [pc, #108]	; 2c6d4 <flatcc_builder_custom_init@@Base+0xc0>
   2c664:	ldr	r3, [r4, r3]
   2c668:	str	r3, [fp, #-20]	; 0xffffffec
   2c66c:	ldr	r3, [fp, #-16]
   2c670:	add	r3, r3, #188	; 0xbc
   2c674:	str	r3, [fp, #-24]	; 0xffffffe8
   2c678:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c67c:	cmp	r3, #0
   2c680:	bne	2c690 <flatcc_builder_custom_init@@Base+0x7c>
   2c684:	ldr	r3, [pc, #76]	; 2c6d8 <flatcc_builder_custom_init@@Base+0xc4>
   2c688:	ldr	r3, [r4, r3]
   2c68c:	str	r3, [fp, #-28]	; 0xffffffe4
   2c690:	ldr	r3, [fp, #-16]
   2c694:	ldr	r2, [fp, #4]
   2c698:	str	r2, [r3, #40]	; 0x28
   2c69c:	ldr	r3, [fp, #-16]
   2c6a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2c6a4:	str	r2, [r3, #48]	; 0x30
   2c6a8:	ldr	r3, [fp, #-16]
   2c6ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c6b0:	str	r2, [r3, #36]	; 0x24
   2c6b4:	ldr	r3, [fp, #-16]
   2c6b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c6bc:	str	r2, [r3, #44]	; 0x2c
   2c6c0:	mov	r3, #0
   2c6c4:	mov	r0, r3
   2c6c8:	sub	sp, fp, #8
   2c6cc:	pop	{r4, fp, pc}
   2c6d0:	andeq	r5, r3, r4, asr #19
   2c6d4:	andeq	r0, r0, r8, ror r0
   2c6d8:	andeq	r0, r0, r0, ror r0

0002c6dc <flatcc_builder_init@@Base>:
   2c6dc:	push	{fp, lr}
   2c6e0:	add	fp, sp, #4
   2c6e4:	sub	sp, sp, #16
   2c6e8:	str	r0, [fp, #-8]
   2c6ec:	mov	r3, #0
   2c6f0:	str	r3, [sp]
   2c6f4:	mov	r3, #0
   2c6f8:	mov	r2, #0
   2c6fc:	mov	r1, #0
   2c700:	ldr	r0, [fp, #-8]
   2c704:	bl	2c614 <flatcc_builder_custom_init@@Base>
   2c708:	mov	r3, r0
   2c70c:	mov	r0, r3
   2c710:	sub	sp, fp, #4
   2c714:	pop	{fp, pc}

0002c718 <flatcc_builder_custom_reset@@Base>:
   2c718:	push	{r4, fp, lr}
   2c71c:	add	fp, sp, #8
   2c720:	sub	sp, sp, #36	; 0x24
   2c724:	str	r0, [fp, #-24]	; 0xffffffe8
   2c728:	str	r1, [fp, #-28]	; 0xffffffe4
   2c72c:	str	r2, [fp, #-32]	; 0xffffffe0
   2c730:	mov	r3, #0
   2c734:	str	r3, [fp, #-16]
   2c738:	b	2c814 <flatcc_builder_custom_reset@@Base+0xfc>
   2c73c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c740:	add	r2, r3, #52	; 0x34
   2c744:	ldr	r3, [fp, #-16]
   2c748:	lsl	r3, r3, #3
   2c74c:	add	r3, r2, r3
   2c750:	str	r3, [fp, #-20]	; 0xffffffec
   2c754:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c758:	ldr	r3, [r3]
   2c75c:	cmp	r3, #0
   2c760:	beq	2c7d8 <flatcc_builder_custom_reset@@Base+0xc0>
   2c764:	ldr	r3, [fp, #-16]
   2c768:	cmp	r3, #5
   2c76c:	beq	2c7b8 <flatcc_builder_custom_reset@@Base+0xa0>
   2c770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c774:	cmp	r3, #0
   2c778:	beq	2c7b8 <flatcc_builder_custom_reset@@Base+0xa0>
   2c77c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c780:	ldr	r4, [r3, #48]	; 0x30
   2c784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c788:	ldr	r0, [r3, #40]	; 0x28
   2c78c:	ldr	r3, [fp, #-16]
   2c790:	str	r3, [sp]
   2c794:	mov	r3, #1
   2c798:	mov	r2, #1
   2c79c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c7a0:	blx	r4
   2c7a4:	mov	r3, r0
   2c7a8:	cmp	r3, #0
   2c7ac:	beq	2c7b8 <flatcc_builder_custom_reset@@Base+0xa0>
   2c7b0:	mvn	r3, #0
   2c7b4:	b	2c944 <flatcc_builder_custom_reset@@Base+0x22c>
   2c7b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c7bc:	ldr	r0, [r3]
   2c7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c7c4:	ldr	r3, [r3, #4]
   2c7c8:	mov	r2, r3
   2c7cc:	mov	r1, #0
   2c7d0:	bl	145bc <memset@plt>
   2c7d4:	b	2c808 <flatcc_builder_custom_reset@@Base+0xf0>
   2c7d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c7dc:	ldr	r3, [r3, #4]
   2c7e0:	cmp	r3, #0
   2c7e4:	beq	2c808 <flatcc_builder_custom_reset@@Base+0xf0>
   2c7e8:	ldr	r3, [pc, #352]	; 2c950 <flatcc_builder_custom_reset@@Base+0x238>
   2c7ec:	add	r3, pc, r3
   2c7f0:	ldr	r2, [pc, #348]	; 2c954 <flatcc_builder_custom_reset@@Base+0x23c>
   2c7f4:	ldr	r1, [pc, #348]	; 2c958 <flatcc_builder_custom_reset@@Base+0x240>
   2c7f8:	add	r1, pc, r1
   2c7fc:	ldr	r0, [pc, #344]	; 2c95c <flatcc_builder_custom_reset@@Base+0x244>
   2c800:	add	r0, pc, r0
   2c804:	bl	14610 <__assert_fail@plt>
   2c808:	ldr	r3, [fp, #-16]
   2c80c:	add	r3, r3, #1
   2c810:	str	r3, [fp, #-16]
   2c814:	ldr	r3, [fp, #-16]
   2c818:	cmp	r3, #7
   2c81c:	ble	2c73c <flatcc_builder_custom_reset@@Base+0x24>
   2c820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c824:	mov	r2, #0
   2c828:	str	r2, [r3, #120]	; 0x78
   2c82c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c830:	ldr	r3, [r3, #124]	; 0x7c
   2c834:	cmp	r3, #0
   2c838:	beq	2c848 <flatcc_builder_custom_reset@@Base+0x130>
   2c83c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c840:	mov	r2, #16
   2c844:	str	r2, [r3, #124]	; 0x7c
   2c848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c84c:	mov	r2, #0
   2c850:	strh	r2, [r3, #128]	; 0x80
   2c854:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c858:	mov	r2, #0
   2c85c:	str	r2, [r3, #136]	; 0x88
   2c860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c864:	mov	r2, #0
   2c868:	str	r2, [r3, #140]	; 0x8c
   2c86c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c870:	mov	r2, #0
   2c874:	str	r2, [r3, #156]	; 0x9c
   2c878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c87c:	mov	r2, #0
   2c880:	str	r2, [r3, #160]	; 0xa0
   2c884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c888:	mov	r2, #0
   2c88c:	str	r2, [r3, #20]
   2c890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c894:	mov	r2, #0
   2c898:	str	r2, [r3, #24]
   2c89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8a0:	mov	r2, #0
   2c8a4:	str	r2, [r3, #148]	; 0x94
   2c8a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8ac:	mov	r2, #0
   2c8b0:	str	r2, [r3, #152]	; 0x98
   2c8b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8b8:	ldr	r2, [r3, #60]	; 0x3c
   2c8bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8c0:	str	r2, [r3, #16]
   2c8c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8c8:	ldr	r2, [r3, #76]	; 0x4c
   2c8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8d0:	str	r2, [r3]
   2c8d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8d8:	ldr	r2, [r3, #52]	; 0x34
   2c8dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8e0:	str	r2, [r3, #4]
   2c8e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c8e8:	mov	r2, #0
   2c8ec:	str	r2, [r3, #32]
   2c8f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c8f4:	cmp	r3, #0
   2c8f8:	beq	2c920 <flatcc_builder_custom_reset@@Base+0x208>
   2c8fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c900:	mov	r2, #0
   2c904:	str	r2, [r3, #172]	; 0xac
   2c908:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c90c:	mov	r2, #0
   2c910:	str	r2, [r3, #176]	; 0xb0
   2c914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c918:	mov	r2, #0
   2c91c:	str	r2, [r3, #180]	; 0xb4
   2c920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c924:	ldr	r3, [r3, #184]	; 0xb8
   2c928:	cmp	r3, #0
   2c92c:	beq	2c940 <flatcc_builder_custom_reset@@Base+0x228>
   2c930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c934:	add	r3, r3, #188	; 0xbc
   2c938:	mov	r0, r3
   2c93c:	bl	3223c <flatcc_emitter_reset@@Base>
   2c940:	mov	r3, #0
   2c944:	mov	r0, r3
   2c948:	sub	sp, fp, #8
   2c94c:	pop	{r4, fp, pc}
   2c950:	andeq	r2, r2, r4, ror r9
   2c954:			; <UNDEFINED> instruction: 0x000001b2
   2c958:	andeq	r2, r2, r4, lsr #10
   2c95c:	muleq	r2, r0, r5

0002c960 <flatcc_builder_reset@@Base>:
   2c960:	push	{fp, lr}
   2c964:	add	fp, sp, #4
   2c968:	sub	sp, sp, #8
   2c96c:	str	r0, [fp, #-8]
   2c970:	mov	r2, #0
   2c974:	mov	r1, #0
   2c978:	ldr	r0, [fp, #-8]
   2c97c:	bl	2c718 <flatcc_builder_custom_reset@@Base>
   2c980:	mov	r3, r0
   2c984:	mov	r0, r3
   2c988:	sub	sp, fp, #4
   2c98c:	pop	{fp, pc}

0002c990 <flatcc_builder_clear@@Base>:
   2c990:	push	{r4, fp, lr}
   2c994:	add	fp, sp, #8
   2c998:	sub	sp, sp, #28
   2c99c:	str	r0, [fp, #-24]	; 0xffffffe8
   2c9a0:	mov	r3, #0
   2c9a4:	str	r3, [fp, #-16]
   2c9a8:	b	2c9f8 <flatcc_builder_clear@@Base+0x68>
   2c9ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c9b0:	add	r2, r3, #52	; 0x34
   2c9b4:	ldr	r3, [fp, #-16]
   2c9b8:	lsl	r3, r3, #3
   2c9bc:	add	r3, r2, r3
   2c9c0:	str	r3, [fp, #-20]	; 0xffffffec
   2c9c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c9c8:	ldr	r4, [r3, #48]	; 0x30
   2c9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2c9d0:	ldr	r0, [r3, #40]	; 0x28
   2c9d4:	ldr	r3, [fp, #-16]
   2c9d8:	str	r3, [sp]
   2c9dc:	mov	r3, #0
   2c9e0:	mov	r2, #0
   2c9e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c9e8:	blx	r4
   2c9ec:	ldr	r3, [fp, #-16]
   2c9f0:	add	r3, r3, #1
   2c9f4:	str	r3, [fp, #-16]
   2c9f8:	ldr	r3, [fp, #-16]
   2c9fc:	cmp	r3, #7
   2ca00:	ble	2c9ac <flatcc_builder_clear@@Base+0x1c>
   2ca04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca08:	ldr	r3, [r3, #184]	; 0xb8
   2ca0c:	cmp	r3, #0
   2ca10:	beq	2ca24 <flatcc_builder_clear@@Base+0x94>
   2ca14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ca18:	add	r3, r3, #188	; 0xbc
   2ca1c:	mov	r0, r3
   2ca20:	bl	323c8 <flatcc_emitter_clear@@Base>
   2ca24:	mov	r2, #232	; 0xe8
   2ca28:	mov	r1, #0
   2ca2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ca30:	bl	145bc <memset@plt>
   2ca34:	nop			; (mov r0, r0)
   2ca38:	sub	sp, fp, #8
   2ca3c:	pop	{r4, fp, pc}
   2ca40:	push	{fp}		; (str fp, [sp, #-4]!)
   2ca44:	add	fp, sp, #0
   2ca48:	sub	sp, sp, #12
   2ca4c:	str	r0, [fp, #-8]
   2ca50:	mov	r3, r1
   2ca54:	strh	r3, [fp, #-10]
   2ca58:	ldr	r3, [fp, #-8]
   2ca5c:	ldrh	r3, [r3, #128]	; 0x80
   2ca60:	ldrh	r2, [fp, #-10]
   2ca64:	cmp	r2, r3
   2ca68:	bls	2ca78 <flatcc_builder_clear@@Base+0xe8>
   2ca6c:	ldr	r3, [fp, #-8]
   2ca70:	ldrh	r2, [fp, #-10]
   2ca74:	strh	r2, [r3, #128]	; 0x80
   2ca78:	nop			; (mov r0, r0)
   2ca7c:	add	sp, fp, #0
   2ca80:	pop	{fp}		; (ldr fp, [sp], #4)
   2ca84:	bx	lr
   2ca88:	push	{fp}		; (str fp, [sp, #-4]!)
   2ca8c:	add	fp, sp, #0
   2ca90:	sub	sp, sp, #12
   2ca94:	str	r0, [fp, #-8]
   2ca98:	mov	r3, r1
   2ca9c:	strh	r3, [fp, #-10]
   2caa0:	ldr	r3, [fp, #-8]
   2caa4:	ldrh	r3, [r3]
   2caa8:	ldrh	r2, [fp, #-10]
   2caac:	cmp	r2, r3
   2cab0:	bls	2cac0 <flatcc_builder_clear@@Base+0x130>
   2cab4:	ldr	r3, [fp, #-8]
   2cab8:	ldrh	r2, [fp, #-10]
   2cabc:	strh	r2, [r3]
   2cac0:	nop			; (mov r0, r0)
   2cac4:	add	sp, fp, #0
   2cac8:	pop	{fp}		; (ldr fp, [sp], #4)
   2cacc:	bx	lr

0002cad0 <flatcc_builder_enter_user_frame_ptr@@Base>:
   2cad0:	push	{fp, lr}
   2cad4:	add	fp, sp, #4
   2cad8:	sub	sp, sp, #24
   2cadc:	str	r0, [fp, #-16]
   2cae0:	str	r1, [fp, #-20]	; 0xffffffec
   2cae4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cae8:	add	r3, r3, #3
   2caec:	bic	r3, r3, #3
   2caf0:	add	r3, r3, #4
   2caf4:	str	r3, [fp, #-20]	; 0xffffffec
   2caf8:	ldr	r3, [fp, #-16]
   2cafc:	ldr	r2, [r3, #228]	; 0xe4
   2cb00:	mov	r3, #0
   2cb04:	str	r3, [sp]
   2cb08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb0c:	mov	r1, #7
   2cb10:	ldr	r0, [fp, #-16]
   2cb14:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2cb18:	str	r0, [fp, #-8]
   2cb1c:	ldr	r3, [fp, #-8]
   2cb20:	cmp	r3, #0
   2cb24:	bne	2cb30 <flatcc_builder_enter_user_frame_ptr@@Base+0x60>
   2cb28:	mov	r3, #0
   2cb2c:	b	2cb88 <flatcc_builder_enter_user_frame_ptr@@Base+0xb8>
   2cb30:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cb34:	mov	r1, #0
   2cb38:	ldr	r0, [fp, #-8]
   2cb3c:	bl	145bc <memset@plt>
   2cb40:	ldr	r3, [fp, #-8]
   2cb44:	add	r2, r3, #4
   2cb48:	str	r2, [fp, #-8]
   2cb4c:	ldr	r2, [fp, #-16]
   2cb50:	ldr	r2, [r2, #224]	; 0xe0
   2cb54:	str	r2, [r3]
   2cb58:	ldr	r3, [fp, #-16]
   2cb5c:	ldr	r3, [r3, #228]	; 0xe4
   2cb60:	add	r2, r3, #4
   2cb64:	ldr	r3, [fp, #-16]
   2cb68:	str	r2, [r3, #224]	; 0xe0
   2cb6c:	ldr	r3, [fp, #-16]
   2cb70:	ldr	r2, [r3, #228]	; 0xe4
   2cb74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cb78:	add	r2, r2, r3
   2cb7c:	ldr	r3, [fp, #-16]
   2cb80:	str	r2, [r3, #228]	; 0xe4
   2cb84:	ldr	r3, [fp, #-8]
   2cb88:	mov	r0, r3
   2cb8c:	sub	sp, fp, #4
   2cb90:	pop	{fp, pc}

0002cb94 <flatcc_builder_enter_user_frame@@Base>:
   2cb94:	push	{fp, lr}
   2cb98:	add	fp, sp, #4
   2cb9c:	sub	sp, sp, #24
   2cba0:	str	r0, [fp, #-16]
   2cba4:	str	r1, [fp, #-20]	; 0xffffffec
   2cba8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbac:	add	r3, r3, #3
   2cbb0:	bic	r3, r3, #3
   2cbb4:	add	r3, r3, #4
   2cbb8:	str	r3, [fp, #-20]	; 0xffffffec
   2cbbc:	ldr	r3, [fp, #-16]
   2cbc0:	ldr	r2, [r3, #228]	; 0xe4
   2cbc4:	mov	r3, #0
   2cbc8:	str	r3, [sp]
   2cbcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cbd0:	mov	r1, #7
   2cbd4:	ldr	r0, [fp, #-16]
   2cbd8:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2cbdc:	str	r0, [fp, #-8]
   2cbe0:	ldr	r3, [fp, #-8]
   2cbe4:	cmp	r3, #0
   2cbe8:	bne	2cbf4 <flatcc_builder_enter_user_frame@@Base+0x60>
   2cbec:	mov	r3, #0
   2cbf0:	b	2cc50 <flatcc_builder_enter_user_frame@@Base+0xbc>
   2cbf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2cbf8:	mov	r1, #0
   2cbfc:	ldr	r0, [fp, #-8]
   2cc00:	bl	145bc <memset@plt>
   2cc04:	ldr	r3, [fp, #-8]
   2cc08:	add	r2, r3, #4
   2cc0c:	str	r2, [fp, #-8]
   2cc10:	ldr	r2, [fp, #-16]
   2cc14:	ldr	r2, [r2, #224]	; 0xe0
   2cc18:	str	r2, [r3]
   2cc1c:	ldr	r3, [fp, #-16]
   2cc20:	ldr	r3, [r3, #228]	; 0xe4
   2cc24:	add	r2, r3, #4
   2cc28:	ldr	r3, [fp, #-16]
   2cc2c:	str	r2, [r3, #224]	; 0xe0
   2cc30:	ldr	r3, [fp, #-16]
   2cc34:	ldr	r2, [r3, #228]	; 0xe4
   2cc38:	ldr	r3, [fp, #-20]	; 0xffffffec
   2cc3c:	add	r2, r2, r3
   2cc40:	ldr	r3, [fp, #-16]
   2cc44:	str	r2, [r3, #228]	; 0xe4
   2cc48:	ldr	r3, [fp, #-16]
   2cc4c:	ldr	r3, [r3, #224]	; 0xe0
   2cc50:	mov	r0, r3
   2cc54:	sub	sp, fp, #4
   2cc58:	pop	{fp, pc}

0002cc5c <flatcc_builder_exit_user_frame@@Base>:
   2cc5c:	push	{fp, lr}
   2cc60:	add	fp, sp, #4
   2cc64:	sub	sp, sp, #16
   2cc68:	str	r0, [fp, #-16]
   2cc6c:	ldr	r3, [fp, #-16]
   2cc70:	ldr	r3, [r3, #224]	; 0xe0
   2cc74:	cmp	r3, #0
   2cc78:	bne	2cc9c <flatcc_builder_exit_user_frame@@Base+0x40>
   2cc7c:	ldr	r3, [pc, #104]	; 2ccec <flatcc_builder_exit_user_frame@@Base+0x90>
   2cc80:	add	r3, pc, r3
   2cc84:	ldr	r2, [pc, #100]	; 2ccf0 <flatcc_builder_exit_user_frame@@Base+0x94>
   2cc88:	ldr	r1, [pc, #100]	; 2ccf4 <flatcc_builder_exit_user_frame@@Base+0x98>
   2cc8c:	add	r1, pc, r1
   2cc90:	ldr	r0, [pc, #96]	; 2ccf8 <flatcc_builder_exit_user_frame@@Base+0x9c>
   2cc94:	add	r0, pc, r0
   2cc98:	bl	14610 <__assert_fail@plt>
   2cc9c:	ldr	r3, [fp, #-16]
   2cca0:	ldr	r2, [r3, #108]	; 0x6c
   2cca4:	ldr	r3, [fp, #-16]
   2cca8:	ldr	r3, [r3, #224]	; 0xe0
   2ccac:	add	r3, r2, r3
   2ccb0:	str	r3, [fp, #-8]
   2ccb4:	ldr	r3, [fp, #-16]
   2ccb8:	ldr	r3, [r3, #224]	; 0xe0
   2ccbc:	sub	r2, r3, #4
   2ccc0:	ldr	r3, [fp, #-16]
   2ccc4:	str	r2, [r3, #228]	; 0xe4
   2ccc8:	ldr	r3, [fp, #-8]
   2cccc:	ldr	r2, [r3, #-4]
   2ccd0:	ldr	r3, [fp, #-16]
   2ccd4:	str	r2, [r3, #224]	; 0xe0
   2ccd8:	ldr	r3, [fp, #-16]
   2ccdc:	ldr	r3, [r3, #224]	; 0xe0
   2cce0:	mov	r0, r3
   2cce4:	sub	sp, fp, #4
   2cce8:	pop	{fp, pc}
   2ccec:	strdeq	r2, [r2], -ip
   2ccf0:	andeq	r0, r0, lr, lsl r2
   2ccf4:	muleq	r2, r0, r0
   2ccf8:	andeq	r2, r2, r0, lsl r1

0002ccfc <flatcc_builder_exit_user_frame_at@@Base>:
   2ccfc:	push	{fp, lr}
   2cd00:	add	fp, sp, #4
   2cd04:	sub	sp, sp, #8
   2cd08:	str	r0, [fp, #-8]
   2cd0c:	str	r1, [fp, #-12]
   2cd10:	ldr	r3, [fp, #-8]
   2cd14:	ldr	r2, [r3, #224]	; 0xe0
   2cd18:	ldr	r3, [fp, #-12]
   2cd1c:	cmp	r2, r3
   2cd20:	bcs	2cd44 <flatcc_builder_exit_user_frame_at@@Base+0x48>
   2cd24:	ldr	r3, [pc, #60]	; 2cd68 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   2cd28:	add	r3, pc, r3
   2cd2c:	ldr	r2, [pc, #56]	; 2cd6c <flatcc_builder_exit_user_frame_at@@Base+0x70>
   2cd30:	ldr	r1, [pc, #56]	; 2cd70 <flatcc_builder_exit_user_frame_at@@Base+0x74>
   2cd34:	add	r1, pc, r1
   2cd38:	ldr	r0, [pc, #52]	; 2cd74 <flatcc_builder_exit_user_frame_at@@Base+0x78>
   2cd3c:	add	r0, pc, r0
   2cd40:	bl	14610 <__assert_fail@plt>
   2cd44:	ldr	r3, [fp, #-8]
   2cd48:	ldr	r2, [fp, #-12]
   2cd4c:	str	r2, [r3, #224]	; 0xe0
   2cd50:	ldr	r0, [fp, #-8]
   2cd54:	bl	2cc5c <flatcc_builder_exit_user_frame@@Base>
   2cd58:	mov	r3, r0
   2cd5c:	mov	r0, r3
   2cd60:	sub	sp, fp, #4
   2cd64:	pop	{fp, pc}
   2cd68:	andeq	r2, r2, r4, ror r4
   2cd6c:	andeq	r0, r0, r7, lsr #4
   2cd70:	andeq	r1, r2, r8, ror #31
   2cd74:	andeq	r2, r2, r4, lsl #1

0002cd78 <flatcc_builder_get_current_user_frame@@Base>:
   2cd78:	push	{fp}		; (str fp, [sp, #-4]!)
   2cd7c:	add	fp, sp, #0
   2cd80:	sub	sp, sp, #12
   2cd84:	str	r0, [fp, #-8]
   2cd88:	ldr	r3, [fp, #-8]
   2cd8c:	ldr	r3, [r3, #224]	; 0xe0
   2cd90:	mov	r0, r3
   2cd94:	add	sp, fp, #0
   2cd98:	pop	{fp}		; (ldr fp, [sp], #4)
   2cd9c:	bx	lr

0002cda0 <flatcc_builder_get_user_frame_ptr@@Base>:
   2cda0:	push	{fp}		; (str fp, [sp, #-4]!)
   2cda4:	add	fp, sp, #0
   2cda8:	sub	sp, sp, #12
   2cdac:	str	r0, [fp, #-8]
   2cdb0:	str	r1, [fp, #-12]
   2cdb4:	ldr	r3, [fp, #-8]
   2cdb8:	ldr	r2, [r3, #108]	; 0x6c
   2cdbc:	ldr	r3, [fp, #-12]
   2cdc0:	add	r3, r2, r3
   2cdc4:	mov	r0, r3
   2cdc8:	add	sp, fp, #0
   2cdcc:	pop	{fp}		; (ldr fp, [sp], #4)
   2cdd0:	bx	lr
   2cdd4:	push	{fp, lr}
   2cdd8:	add	fp, sp, #4
   2cddc:	sub	sp, sp, #16
   2cde0:	str	r0, [fp, #-8]
   2cde4:	mov	r3, r1
   2cde8:	strh	r3, [fp, #-10]
   2cdec:	ldr	r3, [fp, #-8]
   2cdf0:	ldr	r3, [r3, #156]	; 0x9c
   2cdf4:	add	r2, r3, #1
   2cdf8:	ldr	r3, [fp, #-8]
   2cdfc:	str	r2, [r3, #156]	; 0x9c
   2ce00:	ldr	r3, [fp, #-8]
   2ce04:	ldr	r2, [r3, #156]	; 0x9c
   2ce08:	ldr	r3, [fp, #-8]
   2ce0c:	ldr	r3, [r3, #160]	; 0xa0
   2ce10:	cmp	r2, r3
   2ce14:	ble	2cf04 <flatcc_builder_get_user_frame_ptr@@Base+0x164>
   2ce18:	ldr	r3, [fp, #-8]
   2ce1c:	ldr	r3, [r3, #176]	; 0xb0
   2ce20:	cmp	r3, #0
   2ce24:	ble	2ce48 <flatcc_builder_get_user_frame_ptr@@Base+0xa8>
   2ce28:	ldr	r3, [fp, #-8]
   2ce2c:	ldr	r2, [r3, #156]	; 0x9c
   2ce30:	ldr	r3, [fp, #-8]
   2ce34:	ldr	r3, [r3, #176]	; 0xb0
   2ce38:	cmp	r2, r3
   2ce3c:	ble	2ce48 <flatcc_builder_get_user_frame_ptr@@Base+0xa8>
   2ce40:	mvn	r3, #0
   2ce44:	b	2cfa4 <flatcc_builder_get_user_frame_ptr@@Base+0x204>
   2ce48:	ldr	r3, [fp, #-8]
   2ce4c:	ldr	r3, [r3, #156]	; 0x9c
   2ce50:	sub	r3, r3, #1
   2ce54:	mov	r2, r3
   2ce58:	mov	r3, r2
   2ce5c:	lsl	r3, r3, #3
   2ce60:	add	r3, r3, r2
   2ce64:	lsl	r3, r3, #2
   2ce68:	mov	r2, r3
   2ce6c:	mov	r3, #0
   2ce70:	str	r3, [sp]
   2ce74:	mov	r3, #36	; 0x24
   2ce78:	mov	r1, #4
   2ce7c:	ldr	r0, [fp, #-8]
   2ce80:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2ce84:	mov	r2, r0
   2ce88:	ldr	r3, [fp, #-8]
   2ce8c:	str	r2, [r3, #32]
   2ce90:	ldr	r3, [fp, #-8]
   2ce94:	ldr	r3, [r3, #32]
   2ce98:	cmp	r3, #0
   2ce9c:	bne	2cea8 <flatcc_builder_get_user_frame_ptr@@Base+0x108>
   2cea0:	mvn	r3, #0
   2cea4:	b	2cfa4 <flatcc_builder_get_user_frame_ptr@@Base+0x204>
   2cea8:	ldr	r3, [fp, #-8]
   2ceac:	ldr	r3, [r3, #88]	; 0x58
   2ceb0:	ldr	r2, [pc, #248]	; 2cfb0 <flatcc_builder_get_user_frame_ptr@@Base+0x210>
   2ceb4:	umull	r2, r3, r2, r3
   2ceb8:	lsr	r3, r3, #3
   2cebc:	mov	r2, r3
   2cec0:	ldr	r3, [fp, #-8]
   2cec4:	str	r2, [r3, #160]	; 0xa0
   2cec8:	ldr	r3, [fp, #-8]
   2cecc:	ldr	r3, [r3, #176]	; 0xb0
   2ced0:	cmp	r3, #0
   2ced4:	ble	2cf18 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   2ced8:	ldr	r3, [fp, #-8]
   2cedc:	ldr	r2, [r3, #176]	; 0xb0
   2cee0:	ldr	r3, [fp, #-8]
   2cee4:	ldr	r3, [r3, #160]	; 0xa0
   2cee8:	cmp	r2, r3
   2ceec:	bge	2cf18 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   2cef0:	ldr	r3, [fp, #-8]
   2cef4:	ldr	r2, [r3, #176]	; 0xb0
   2cef8:	ldr	r3, [fp, #-8]
   2cefc:	str	r2, [r3, #160]	; 0xa0
   2cf00:	b	2cf18 <flatcc_builder_get_user_frame_ptr@@Base+0x178>
   2cf04:	ldr	r3, [fp, #-8]
   2cf08:	ldr	r3, [r3, #32]
   2cf0c:	add	r2, r3, #36	; 0x24
   2cf10:	ldr	r3, [fp, #-8]
   2cf14:	str	r2, [r3, #32]
   2cf18:	ldr	r3, [fp, #-8]
   2cf1c:	ldr	r3, [r3, #32]
   2cf20:	ldr	r2, [fp, #-8]
   2cf24:	ldr	r2, [r2, #20]
   2cf28:	str	r2, [r3, #8]
   2cf2c:	ldr	r3, [fp, #-8]
   2cf30:	ldr	r3, [r3, #32]
   2cf34:	ldr	r2, [fp, #-8]
   2cf38:	ldrh	r2, [r2, #130]	; 0x82
   2cf3c:	strh	r2, [r3, #12]
   2cf40:	ldr	r3, [fp, #-8]
   2cf44:	ldrh	r2, [fp, #-10]
   2cf48:	strh	r2, [r3, #130]	; 0x82
   2cf4c:	ldr	r3, [fp, #-8]
   2cf50:	ldr	r3, [r3, #32]
   2cf54:	ldr	r2, [fp, #-8]
   2cf58:	ldr	r2, [r2, #28]
   2cf5c:	str	r2, [r3]
   2cf60:	ldr	r3, [fp, #-8]
   2cf64:	ldr	r3, [r3, #32]
   2cf68:	mvn	r2, #3
   2cf6c:	str	r2, [r3, #4]
   2cf70:	ldr	r3, [fp, #-8]
   2cf74:	ldr	r2, [r3, #28]
   2cf78:	ldr	r3, [fp, #-8]
   2cf7c:	ldr	r3, [r3, #20]
   2cf80:	add	r3, r2, r3
   2cf84:	add	r3, r3, #7
   2cf88:	bic	r2, r3, #7
   2cf8c:	ldr	r3, [fp, #-8]
   2cf90:	str	r2, [r3, #28]
   2cf94:	ldr	r3, [fp, #-8]
   2cf98:	mov	r2, #0
   2cf9c:	str	r2, [r3, #20]
   2cfa0:	mov	r3, #0
   2cfa4:	mov	r0, r3
   2cfa8:	sub	sp, fp, #4
   2cfac:	pop	{fp, pc}
   2cfb0:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   2cfb4:	push	{fp, lr}
   2cfb8:	add	fp, sp, #4
   2cfbc:	sub	sp, sp, #8
   2cfc0:	str	r0, [fp, #-8]
   2cfc4:	ldr	r3, [fp, #-8]
   2cfc8:	ldr	r0, [r3, #16]
   2cfcc:	ldr	r3, [fp, #-8]
   2cfd0:	ldr	r3, [r3, #20]
   2cfd4:	mov	r2, r3
   2cfd8:	mov	r1, #0
   2cfdc:	bl	145bc <memset@plt>
   2cfe0:	ldr	r3, [fp, #-8]
   2cfe4:	ldr	r3, [r3, #32]
   2cfe8:	ldr	r2, [r3, #8]
   2cfec:	ldr	r3, [fp, #-8]
   2cff0:	str	r2, [r3, #20]
   2cff4:	ldr	r3, [fp, #-8]
   2cff8:	ldr	r3, [r3, #32]
   2cffc:	ldr	r2, [r3]
   2d000:	ldr	r3, [fp, #-8]
   2d004:	str	r2, [r3, #28]
   2d008:	ldr	r3, [fp, #-8]
   2d00c:	ldr	r3, [r3, #32]
   2d010:	ldr	r3, [r3, #4]
   2d014:	mov	r1, r3
   2d018:	ldr	r0, [fp, #-8]
   2d01c:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   2d020:	ldr	r3, [fp, #-8]
   2d024:	ldrh	r3, [r3, #130]	; 0x82
   2d028:	mov	r1, r3
   2d02c:	ldr	r0, [fp, #-8]
   2d030:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   2d034:	ldr	r3, [fp, #-8]
   2d038:	ldr	r3, [r3, #32]
   2d03c:	ldrh	r2, [r3, #12]
   2d040:	ldr	r3, [fp, #-8]
   2d044:	strh	r2, [r3, #130]	; 0x82
   2d048:	ldr	r3, [fp, #-8]
   2d04c:	ldr	r3, [r3, #32]
   2d050:	sub	r2, r3, #36	; 0x24
   2d054:	ldr	r3, [fp, #-8]
   2d058:	str	r2, [r3, #32]
   2d05c:	ldr	r3, [fp, #-8]
   2d060:	ldr	r3, [r3, #156]	; 0x9c
   2d064:	sub	r2, r3, #1
   2d068:	ldr	r3, [fp, #-8]
   2d06c:	str	r2, [r3, #156]	; 0x9c
   2d070:	nop			; (mov r0, r0)
   2d074:	sub	sp, fp, #4
   2d078:	pop	{fp, pc}
   2d07c:	push	{fp}		; (str fp, [sp, #-4]!)
   2d080:	add	fp, sp, #0
   2d084:	sub	sp, sp, #20
   2d088:	str	r0, [fp, #-8]
   2d08c:	str	r1, [fp, #-12]
   2d090:	mov	r3, r2
   2d094:	strh	r3, [fp, #-14]
   2d098:	ldr	r3, [fp, #-8]
   2d09c:	ldr	r3, [r3, #136]	; 0x88
   2d0a0:	mov	r2, r3
   2d0a4:	ldr	r3, [fp, #-12]
   2d0a8:	sub	r3, r2, r3
   2d0ac:	ldrh	r2, [fp, #-14]
   2d0b0:	sub	r2, r2, #1
   2d0b4:	and	r3, r3, r2
   2d0b8:	mov	r0, r3
   2d0bc:	add	sp, fp, #0
   2d0c0:	pop	{fp}		; (ldr fp, [sp], #4)
   2d0c4:	bx	lr
   2d0c8:	push	{fp}		; (str fp, [sp, #-4]!)
   2d0cc:	add	fp, sp, #0
   2d0d0:	sub	sp, sp, #12
   2d0d4:	str	r0, [fp, #-8]
   2d0d8:	mov	r3, r1
   2d0dc:	strh	r3, [fp, #-10]
   2d0e0:	ldr	r3, [fp, #-8]
   2d0e4:	ldr	r2, [r3, #140]	; 0x8c
   2d0e8:	ldrh	r3, [fp, #-10]
   2d0ec:	sub	r3, r3, #1
   2d0f0:	and	r3, r3, r2
   2d0f4:	mov	r0, r3
   2d0f8:	add	sp, fp, #0
   2d0fc:	pop	{fp}		; (ldr fp, [sp], #4)
   2d100:	bx	lr
   2d104:	push	{r4, fp, lr}
   2d108:	add	fp, sp, #8
   2d10c:	sub	sp, sp, #28
   2d110:	str	r0, [fp, #-24]	; 0xffffffe8
   2d114:	str	r1, [fp, #-28]	; 0xffffffe4
   2d118:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d11c:	ldr	r3, [r3, #136]	; 0x88
   2d120:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d124:	ldr	r2, [r2]
   2d128:	sub	r3, r3, r2
   2d12c:	str	r3, [fp, #-16]
   2d130:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d134:	ldr	r2, [r3, #136]	; 0x88
   2d138:	ldr	r3, [fp, #-16]
   2d13c:	cmp	r2, r3
   2d140:	bgt	2d164 <flatcc_builder_get_user_frame_ptr@@Base+0x3c4>
   2d144:	ldr	r3, [pc, #152]	; 2d1e4 <flatcc_builder_get_user_frame_ptr@@Base+0x444>
   2d148:	add	r3, pc, r3
   2d14c:	ldr	r2, [pc, #148]	; 2d1e8 <flatcc_builder_get_user_frame_ptr@@Base+0x448>
   2d150:	ldr	r1, [pc, #148]	; 2d1ec <flatcc_builder_get_user_frame_ptr@@Base+0x44c>
   2d154:	add	r1, pc, r1
   2d158:	ldr	r0, [pc, #144]	; 2d1f0 <flatcc_builder_get_user_frame_ptr@@Base+0x450>
   2d15c:	add	r0, pc, r0
   2d160:	bl	14610 <__assert_fail@plt>
   2d164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d168:	ldr	r4, [r3, #44]	; 0x2c
   2d16c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d170:	ldr	r0, [r3, #36]	; 0x24
   2d174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d178:	add	r1, r3, #8
   2d17c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d180:	ldr	r2, [r3, #4]
   2d184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d188:	ldr	r3, [r3]
   2d18c:	str	r3, [sp]
   2d190:	ldr	r3, [fp, #-16]
   2d194:	blx	r4
   2d198:	mov	r3, r0
   2d19c:	cmp	r3, #0
   2d1a0:	beq	2d1c4 <flatcc_builder_get_user_frame_ptr@@Base+0x424>
   2d1a4:	ldr	r3, [pc, #72]	; 2d1f4 <flatcc_builder_get_user_frame_ptr@@Base+0x454>
   2d1a8:	add	r3, pc, r3
   2d1ac:	ldr	r2, [pc, #68]	; 2d1f8 <flatcc_builder_get_user_frame_ptr@@Base+0x458>
   2d1b0:	ldr	r1, [pc, #68]	; 2d1fc <flatcc_builder_get_user_frame_ptr@@Base+0x45c>
   2d1b4:	add	r1, pc, r1
   2d1b8:	ldr	r0, [pc, #64]	; 2d200 <flatcc_builder_get_user_frame_ptr@@Base+0x460>
   2d1bc:	add	r0, pc, r0
   2d1c0:	bl	14610 <__assert_fail@plt>
   2d1c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d1c8:	ldr	r2, [fp, #-16]
   2d1cc:	str	r2, [r3, #136]	; 0x88
   2d1d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d1d4:	ldr	r3, [r3, #136]	; 0x88
   2d1d8:	mov	r0, r3
   2d1dc:	sub	sp, fp, #8
   2d1e0:	pop	{r4, fp, pc}
   2d1e4:	muleq	r2, r4, r0
   2d1e8:	andeq	r0, r0, r7, lsl #5
   2d1ec:	andeq	r1, r2, r8, asr #23
   2d1f0:	andeq	r1, r2, r0, lsr #24
   2d1f4:	andeq	r2, r2, r4, lsr r0
   2d1f8:	andeq	r0, r0, fp, lsl #5
   2d1fc:	andeq	r1, r2, r8, ror #22
   2d200:	andeq	r1, r2, r0, asr #23
   2d204:	push	{r4, fp, lr}
   2d208:	add	fp, sp, #8
   2d20c:	sub	sp, sp, #28
   2d210:	str	r0, [fp, #-24]	; 0xffffffe8
   2d214:	str	r1, [fp, #-28]	; 0xffffffe4
   2d218:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d21c:	ldr	r3, [r3, #140]	; 0x8c
   2d220:	str	r3, [fp, #-16]
   2d224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d228:	ldr	r3, [r3]
   2d22c:	mov	r2, r3
   2d230:	ldr	r3, [fp, #-16]
   2d234:	add	r2, r2, r3
   2d238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d23c:	str	r2, [r3, #140]	; 0x8c
   2d240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d244:	ldr	r2, [r3, #140]	; 0x8c
   2d248:	ldr	r3, [fp, #-16]
   2d24c:	cmp	r2, r3
   2d250:	bge	2d274 <flatcc_builder_get_user_frame_ptr@@Base+0x4d4>
   2d254:	ldr	r3, [pc, #140]	; 2d2e8 <flatcc_builder_get_user_frame_ptr@@Base+0x548>
   2d258:	add	r3, pc, r3
   2d25c:	ldr	r2, [pc, #136]	; 2d2ec <flatcc_builder_get_user_frame_ptr@@Base+0x54c>
   2d260:	ldr	r1, [pc, #136]	; 2d2f0 <flatcc_builder_get_user_frame_ptr@@Base+0x550>
   2d264:	add	r1, pc, r1
   2d268:	ldr	r0, [pc, #132]	; 2d2f4 <flatcc_builder_get_user_frame_ptr@@Base+0x554>
   2d26c:	add	r0, pc, r0
   2d270:	bl	14610 <__assert_fail@plt>
   2d274:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d278:	ldr	r4, [r3, #44]	; 0x2c
   2d27c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d280:	ldr	r0, [r3, #36]	; 0x24
   2d284:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d288:	add	r1, r3, #8
   2d28c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d290:	ldr	r2, [r3, #4]
   2d294:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d298:	ldr	r3, [r3]
   2d29c:	str	r3, [sp]
   2d2a0:	ldr	r3, [fp, #-16]
   2d2a4:	blx	r4
   2d2a8:	mov	r3, r0
   2d2ac:	cmp	r3, #0
   2d2b0:	beq	2d2d4 <flatcc_builder_get_user_frame_ptr@@Base+0x534>
   2d2b4:	ldr	r3, [pc, #60]	; 2d2f8 <flatcc_builder_get_user_frame_ptr@@Base+0x558>
   2d2b8:	add	r3, pc, r3
   2d2bc:	ldr	r2, [pc, #56]	; 2d2fc <flatcc_builder_get_user_frame_ptr@@Base+0x55c>
   2d2c0:	ldr	r1, [pc, #56]	; 2d300 <flatcc_builder_get_user_frame_ptr@@Base+0x560>
   2d2c4:	add	r1, pc, r1
   2d2c8:	ldr	r0, [pc, #52]	; 2d304 <flatcc_builder_get_user_frame_ptr@@Base+0x564>
   2d2cc:	add	r0, pc, r0
   2d2d0:	bl	14610 <__assert_fail@plt>
   2d2d4:	ldr	r3, [fp, #-16]
   2d2d8:	add	r3, r3, #1
   2d2dc:	mov	r0, r3
   2d2e0:	sub	sp, fp, #8
   2d2e4:	pop	{r4, fp, pc}
   2d2e8:	andeq	r1, r2, r8, ror pc
   2d2ec:	andeq	r0, r0, r1, lsr #5
   2d2f0:			; <UNDEFINED> instruction: 0x00021ab8
   2d2f4:	andeq	r1, r2, r0, lsl fp
   2d2f8:	andeq	r1, r2, r8, lsl pc
   2d2fc:	andeq	r0, r0, r5, lsr #5
   2d300:	andeq	r1, r2, r8, asr sl
   2d304:			; <UNDEFINED> instruction: 0x00021ab0
   2d308:	push	{r4, fp, lr}
   2d30c:	add	fp, sp, #8
   2d310:	sub	sp, sp, #100	; 0x64
   2d314:	str	r0, [fp, #-96]	; 0xffffffa0
   2d318:	str	r1, [fp, #-100]	; 0xffffff9c
   2d31c:	str	r3, [fp, #-108]	; 0xffffff94
   2d320:	strh	r2, [fp, #-102]	; 0xffffff9a
   2d324:	ldr	r4, [pc, #320]	; 2d46c <flatcc_builder_get_user_frame_ptr@@Base+0x6cc>
   2d328:	add	r4, pc, r4
   2d32c:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2d330:	cmp	r3, #0
   2d334:	bne	2d35c <flatcc_builder_get_user_frame_ptr@@Base+0x5bc>
   2d338:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2d33c:	ldrh	r3, [r3, #132]	; 0x84
   2d340:	cmp	r3, #0
   2d344:	beq	2d354 <flatcc_builder_get_user_frame_ptr@@Base+0x5b4>
   2d348:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2d34c:	ldrh	r3, [r3, #132]	; 0x84
   2d350:	b	2d360 <flatcc_builder_get_user_frame_ptr@@Base+0x5c0>
   2d354:	mov	r3, #1
   2d358:	b	2d360 <flatcc_builder_get_user_frame_ptr@@Base+0x5c0>
   2d35c:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2d360:	strh	r3, [fp, #-102]	; 0xffffff9a
   2d364:	mov	r1, #4
   2d368:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2d36c:	bl	2ca88 <flatcc_builder_clear@@Base+0xf8>
   2d370:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2d374:	mov	r1, r3
   2d378:	ldr	r0, [fp, #-100]	; 0xffffff9c
   2d37c:	bl	2ca88 <flatcc_builder_clear@@Base+0xf8>
   2d380:	ldr	r3, [fp, #-108]	; 0xffffff94
   2d384:	cmp	r3, #0
   2d388:	bne	2d45c <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   2d38c:	ldrh	r3, [fp, #-102]	; 0xffffff9a
   2d390:	mov	r1, r3
   2d394:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2d398:	bl	2d0c8 <flatcc_builder_get_user_frame_ptr@@Base+0x328>
   2d39c:	str	r0, [fp, #-16]
   2d3a0:	ldr	r3, [fp, #-16]
   2d3a4:	cmp	r3, #0
   2d3a8:	beq	2d45c <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   2d3ac:	mov	r3, #0
   2d3b0:	str	r3, [fp, #-88]	; 0xffffffa8
   2d3b4:	mov	r3, #0
   2d3b8:	str	r3, [fp, #-84]	; 0xffffffac
   2d3bc:	ldr	r3, [fp, #-16]
   2d3c0:	cmp	r3, #0
   2d3c4:	beq	2d420 <flatcc_builder_get_user_frame_ptr@@Base+0x680>
   2d3c8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2d3cc:	ldr	r3, [fp, #-16]
   2d3d0:	add	r3, r2, r3
   2d3d4:	str	r3, [fp, #-88]	; 0xffffffa8
   2d3d8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d3dc:	add	r3, r3, #1
   2d3e0:	lsl	r3, r3, #3
   2d3e4:	sub	r2, fp, #12
   2d3e8:	add	r3, r2, r3
   2d3ec:	ldr	r2, [pc, #124]	; 2d470 <flatcc_builder_get_user_frame_ptr@@Base+0x6d0>
   2d3f0:	ldr	r2, [r4, r2]
   2d3f4:	str	r2, [r3, #-76]	; 0xffffffb4
   2d3f8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d3fc:	add	r3, r3, #1
   2d400:	lsl	r3, r3, #3
   2d404:	sub	r2, fp, #12
   2d408:	add	r3, r2, r3
   2d40c:	ldr	r2, [fp, #-16]
   2d410:	str	r2, [r3, #-72]	; 0xffffffb8
   2d414:	ldr	r3, [fp, #-84]	; 0xffffffac
   2d418:	add	r3, r3, #1
   2d41c:	str	r3, [fp, #-84]	; 0xffffffac
   2d420:	sub	r3, fp, #88	; 0x58
   2d424:	mov	r1, r3
   2d428:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2d42c:	bl	2d204 <flatcc_builder_get_user_frame_ptr@@Base+0x464>
   2d430:	mov	r3, r0
   2d434:	cmp	r3, #0
   2d438:	bne	2d45c <flatcc_builder_get_user_frame_ptr@@Base+0x6bc>
   2d43c:	ldr	r3, [pc, #48]	; 2d474 <flatcc_builder_get_user_frame_ptr@@Base+0x6d4>
   2d440:	add	r3, pc, r3
   2d444:	ldr	r2, [pc, #44]	; 2d478 <flatcc_builder_get_user_frame_ptr@@Base+0x6d8>
   2d448:	ldr	r1, [pc, #44]	; 2d47c <flatcc_builder_get_user_frame_ptr@@Base+0x6dc>
   2d44c:	add	r1, pc, r1
   2d450:	ldr	r0, [pc, #40]	; 2d480 <flatcc_builder_get_user_frame_ptr@@Base+0x6e0>
   2d454:	add	r0, pc, r0
   2d458:	bl	14610 <__assert_fail@plt>
   2d45c:	mov	r3, #0
   2d460:	mov	r0, r3
   2d464:	sub	sp, fp, #8
   2d468:	pop	{r4, fp, pc}
   2d46c:	ldrdeq	r4, [r3], -r0
   2d470:	andeq	r0, r0, r4, rrx
   2d474:	andeq	r1, r2, r0, lsl #27
   2d478:			; <UNDEFINED> instruction: 0x000002be
   2d47c:	ldrdeq	r1, [r2], -r0
   2d480:	andeq	r1, r2, r8, lsr #18

0002d484 <flatcc_builder_embed_buffer@@Base>:
   2d484:	push	{r4, fp, lr}
   2d488:	add	fp, sp, #8
   2d48c:	sub	sp, sp, #108	; 0x6c
   2d490:	str	r0, [fp, #-104]	; 0xffffff98
   2d494:	str	r2, [fp, #-112]	; 0xffffff90
   2d498:	str	r3, [fp, #-116]	; 0xffffff8c
   2d49c:	strh	r1, [fp, #-106]	; 0xffffff96
   2d4a0:	ldr	r4, [pc, #492]	; 2d694 <flatcc_builder_embed_buffer@@Base+0x210>
   2d4a4:	add	r4, pc, r4
   2d4a8:	ldr	r3, [fp, #8]
   2d4ac:	and	r3, r3, #2
   2d4b0:	str	r3, [fp, #-16]
   2d4b4:	ldr	r3, [fp, #-104]	; 0xffffff98
   2d4b8:	ldr	r3, [r3, #152]	; 0x98
   2d4bc:	cmp	r3, #0
   2d4c0:	movne	r3, #1
   2d4c4:	moveq	r3, #0
   2d4c8:	uxtb	r3, r3
   2d4cc:	ldrh	r2, [fp, #-106]	; 0xffffff96
   2d4d0:	add	r1, fp, #4
   2d4d4:	ldr	r0, [fp, #-104]	; 0xffffff98
   2d4d8:	bl	2d308 <flatcc_builder_get_user_frame_ptr@@Base+0x568>
   2d4dc:	mov	r3, r0
   2d4e0:	cmp	r3, #0
   2d4e4:	beq	2d4f0 <flatcc_builder_embed_buffer@@Base+0x6c>
   2d4e8:	mov	r3, #0
   2d4ec:	b	2d688 <flatcc_builder_embed_buffer@@Base+0x204>
   2d4f0:	ldr	r3, [fp, #-16]
   2d4f4:	cmp	r3, #0
   2d4f8:	beq	2d504 <flatcc_builder_embed_buffer@@Base+0x80>
   2d4fc:	mov	r2, #4
   2d500:	b	2d508 <flatcc_builder_embed_buffer@@Base+0x84>
   2d504:	mov	r2, #0
   2d508:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2d50c:	add	r3, r2, r3
   2d510:	ldrh	r2, [fp, #4]
   2d514:	mov	r1, r3
   2d518:	ldr	r0, [fp, #-104]	; 0xffffff98
   2d51c:	bl	2d07c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2d520:	str	r0, [fp, #-20]	; 0xffffffec
   2d524:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2d528:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d52c:	add	r3, r2, r3
   2d530:	mov	r0, r3
   2d534:	bl	2ba40 <main@@Base+0xd40>
   2d538:	mov	r3, r0
   2d53c:	str	r3, [fp, #-24]	; 0xffffffe8
   2d540:	mov	r3, #0
   2d544:	str	r3, [fp, #-96]	; 0xffffffa0
   2d548:	mov	r3, #0
   2d54c:	str	r3, [fp, #-92]	; 0xffffffa4
   2d550:	ldr	r3, [fp, #-104]	; 0xffffff98
   2d554:	ldr	r3, [r3, #152]	; 0x98
   2d558:	cmp	r3, #0
   2d55c:	beq	2d5b0 <flatcc_builder_embed_buffer@@Base+0x12c>
   2d560:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2d564:	add	r3, r3, #4
   2d568:	str	r3, [fp, #-96]	; 0xffffffa0
   2d56c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d570:	add	r3, r3, #1
   2d574:	lsl	r3, r3, #3
   2d578:	sub	r2, fp, #12
   2d57c:	add	r3, r2, r3
   2d580:	sub	r2, fp, #24
   2d584:	str	r2, [r3, #-84]	; 0xffffffac
   2d588:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d58c:	add	r3, r3, #1
   2d590:	lsl	r3, r3, #3
   2d594:	sub	r2, fp, #12
   2d598:	add	r3, r2, r3
   2d59c:	mov	r2, #4
   2d5a0:	str	r2, [r3, #-80]	; 0xffffffb0
   2d5a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d5a8:	add	r3, r3, #1
   2d5ac:	str	r3, [fp, #-92]	; 0xffffffa4
   2d5b0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2d5b4:	cmp	r3, #0
   2d5b8:	beq	2d610 <flatcc_builder_embed_buffer@@Base+0x18c>
   2d5bc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2d5c0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2d5c4:	add	r3, r2, r3
   2d5c8:	str	r3, [fp, #-96]	; 0xffffffa0
   2d5cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d5d0:	add	r3, r3, #1
   2d5d4:	lsl	r3, r3, #3
   2d5d8:	sub	r2, fp, #12
   2d5dc:	add	r3, r2, r3
   2d5e0:	ldr	r2, [fp, #-112]	; 0xffffff90
   2d5e4:	str	r2, [r3, #-84]	; 0xffffffac
   2d5e8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d5ec:	add	r3, r3, #1
   2d5f0:	lsl	r3, r3, #3
   2d5f4:	sub	r2, fp, #12
   2d5f8:	add	r3, r2, r3
   2d5fc:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2d600:	str	r2, [r3, #-80]	; 0xffffffb0
   2d604:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d608:	add	r3, r3, #1
   2d60c:	str	r3, [fp, #-92]	; 0xffffffa4
   2d610:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d614:	cmp	r3, #0
   2d618:	beq	2d674 <flatcc_builder_embed_buffer@@Base+0x1f0>
   2d61c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2d620:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d624:	add	r3, r2, r3
   2d628:	str	r3, [fp, #-96]	; 0xffffffa0
   2d62c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d630:	add	r3, r3, #1
   2d634:	lsl	r3, r3, #3
   2d638:	sub	r2, fp, #12
   2d63c:	add	r3, r2, r3
   2d640:	ldr	r2, [pc, #80]	; 2d698 <flatcc_builder_embed_buffer@@Base+0x214>
   2d644:	ldr	r2, [r4, r2]
   2d648:	str	r2, [r3, #-84]	; 0xffffffac
   2d64c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d650:	add	r3, r3, #1
   2d654:	lsl	r3, r3, #3
   2d658:	sub	r2, fp, #12
   2d65c:	add	r3, r2, r3
   2d660:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d664:	str	r2, [r3, #-80]	; 0xffffffb0
   2d668:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2d66c:	add	r3, r3, #1
   2d670:	str	r3, [fp, #-92]	; 0xffffffa4
   2d674:	sub	r3, fp, #96	; 0x60
   2d678:	mov	r1, r3
   2d67c:	ldr	r0, [fp, #-104]	; 0xffffff98
   2d680:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2d684:	mov	r3, r0
   2d688:	mov	r0, r3
   2d68c:	sub	sp, fp, #8
   2d690:	pop	{r4, fp, pc}
   2d694:	andeq	r4, r3, r4, asr fp
   2d698:	andeq	r0, r0, r4, rrx

0002d69c <flatcc_builder_create_buffer@@Base>:
   2d69c:	push	{r4, fp, lr}
   2d6a0:	add	fp, sp, #8
   2d6a4:	sub	sp, sp, #132	; 0x84
   2d6a8:	str	r0, [fp, #-128]	; 0xffffff80
   2d6ac:	str	r1, [fp, #-132]	; 0xffffff7c
   2d6b0:	str	r3, [fp, #-140]	; 0xffffff74
   2d6b4:	strh	r2, [fp, #-134]	; 0xffffff7a
   2d6b8:	ldr	r4, [pc, #932]	; 2da64 <flatcc_builder_create_buffer@@Base+0x3c8>
   2d6bc:	add	r4, pc, r4
   2d6c0:	mov	r3, #0
   2d6c4:	str	r3, [fp, #-16]
   2d6c8:	mov	r3, #0
   2d6cc:	str	r3, [fp, #-120]	; 0xffffff88
   2d6d0:	ldr	r3, [fp, #8]
   2d6d4:	and	r3, r3, #1
   2d6d8:	cmp	r3, #0
   2d6dc:	movne	r3, #1
   2d6e0:	moveq	r3, #0
   2d6e4:	uxtb	r3, r3
   2d6e8:	str	r3, [fp, #-20]	; 0xffffffec
   2d6ec:	ldr	r3, [fp, #8]
   2d6f0:	and	r3, r3, #2
   2d6f4:	cmp	r3, #0
   2d6f8:	movne	r3, #1
   2d6fc:	moveq	r3, #0
   2d700:	uxtb	r3, r3
   2d704:	str	r3, [fp, #-24]	; 0xffffffe8
   2d708:	ldrh	r2, [fp, #-134]	; 0xffffff7a
   2d70c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d710:	add	r1, fp, #4
   2d714:	ldr	r0, [fp, #-128]	; 0xffffff80
   2d718:	bl	2d308 <flatcc_builder_get_user_frame_ptr@@Base+0x568>
   2d71c:	mov	r3, r0
   2d720:	cmp	r3, #0
   2d724:	beq	2d730 <flatcc_builder_create_buffer@@Base+0x94>
   2d728:	mov	r3, #0
   2d72c:	b	2da58 <flatcc_builder_create_buffer@@Base+0x3bc>
   2d730:	ldrh	r3, [fp, #4]
   2d734:	mov	r1, r3
   2d738:	ldr	r0, [fp, #-128]	; 0xffffff80
   2d73c:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   2d740:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2d744:	cmp	r3, #0
   2d748:	beq	2d780 <flatcc_builder_create_buffer@@Base+0xe4>
   2d74c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   2d750:	ldr	r3, [r3]
   2d754:	str	r3, [fp, #-120]	; 0xffffff88
   2d758:	ldr	r3, [fp, #-120]	; 0xffffff88
   2d75c:	mov	r0, r3
   2d760:	bl	2ba8c <main@@Base+0xd8c>
   2d764:	mov	r3, r0
   2d768:	str	r3, [fp, #-120]	; 0xffffff88
   2d76c:	ldr	r3, [fp, #-120]	; 0xffffff88
   2d770:	mov	r0, r3
   2d774:	bl	2ba40 <main@@Base+0xd40>
   2d778:	mov	r3, r0
   2d77c:	str	r3, [fp, #-120]	; 0xffffff88
   2d780:	ldr	r3, [fp, #-120]	; 0xffffff88
   2d784:	cmp	r3, #0
   2d788:	beq	2d794 <flatcc_builder_create_buffer@@Base+0xf8>
   2d78c:	mov	r3, #4
   2d790:	b	2d798 <flatcc_builder_create_buffer@@Base+0xfc>
   2d794:	mov	r3, #0
   2d798:	str	r3, [fp, #-16]
   2d79c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7a0:	cmp	r3, #0
   2d7a4:	beq	2d7b0 <flatcc_builder_create_buffer@@Base+0x114>
   2d7a8:	mov	r2, #4
   2d7ac:	b	2d7b4 <flatcc_builder_create_buffer@@Base+0x118>
   2d7b0:	mov	r2, #0
   2d7b4:	ldr	r3, [fp, #-16]
   2d7b8:	add	r3, r2, r3
   2d7bc:	add	r3, r3, #4
   2d7c0:	ldrh	r2, [fp, #4]
   2d7c4:	mov	r1, r3
   2d7c8:	ldr	r0, [fp, #-128]	; 0xffffff80
   2d7cc:	bl	2d07c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2d7d0:	str	r0, [fp, #-28]	; 0xffffffe4
   2d7d4:	mov	r3, #0
   2d7d8:	str	r3, [fp, #-116]	; 0xffffff8c
   2d7dc:	mov	r3, #0
   2d7e0:	str	r3, [fp, #-112]	; 0xffffff90
   2d7e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d7e8:	cmp	r3, #0
   2d7ec:	bne	2d7fc <flatcc_builder_create_buffer@@Base+0x160>
   2d7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d7f4:	cmp	r3, #0
   2d7f8:	beq	2d84c <flatcc_builder_create_buffer@@Base+0x1b0>
   2d7fc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2d800:	add	r3, r3, #4
   2d804:	str	r3, [fp, #-116]	; 0xffffff8c
   2d808:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d80c:	add	r3, r3, #1
   2d810:	lsl	r3, r3, #3
   2d814:	sub	r2, fp, #12
   2d818:	add	r3, r2, r3
   2d81c:	sub	r2, fp, #44	; 0x2c
   2d820:	str	r2, [r3, #-104]	; 0xffffff98
   2d824:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d828:	add	r3, r3, #1
   2d82c:	lsl	r3, r3, #3
   2d830:	sub	r2, fp, #12
   2d834:	add	r3, r2, r3
   2d838:	mov	r2, #4
   2d83c:	str	r2, [r3, #-100]	; 0xffffff9c
   2d840:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d844:	add	r3, r3, #1
   2d848:	str	r3, [fp, #-112]	; 0xffffff90
   2d84c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2d850:	add	r3, r3, #4
   2d854:	str	r3, [fp, #-116]	; 0xffffff8c
   2d858:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d85c:	add	r3, r3, #1
   2d860:	lsl	r3, r3, #3
   2d864:	sub	r2, fp, #12
   2d868:	add	r3, r2, r3
   2d86c:	sub	r2, fp, #40	; 0x28
   2d870:	str	r2, [r3, #-104]	; 0xffffff98
   2d874:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d878:	add	r3, r3, #1
   2d87c:	lsl	r3, r3, #3
   2d880:	sub	r2, fp, #12
   2d884:	add	r3, r2, r3
   2d888:	mov	r2, #4
   2d88c:	str	r2, [r3, #-100]	; 0xffffff9c
   2d890:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d894:	add	r3, r3, #1
   2d898:	str	r3, [fp, #-112]	; 0xffffff90
   2d89c:	ldr	r3, [fp, #-16]
   2d8a0:	cmp	r3, #0
   2d8a4:	beq	2d8fc <flatcc_builder_create_buffer@@Base+0x260>
   2d8a8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2d8ac:	ldr	r3, [fp, #-16]
   2d8b0:	add	r3, r2, r3
   2d8b4:	str	r3, [fp, #-116]	; 0xffffff8c
   2d8b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d8bc:	add	r3, r3, #1
   2d8c0:	lsl	r3, r3, #3
   2d8c4:	sub	r2, fp, #12
   2d8c8:	add	r3, r2, r3
   2d8cc:	sub	r2, fp, #120	; 0x78
   2d8d0:	str	r2, [r3, #-104]	; 0xffffff98
   2d8d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d8d8:	add	r3, r3, #1
   2d8dc:	lsl	r3, r3, #3
   2d8e0:	sub	r2, fp, #12
   2d8e4:	add	r3, r2, r3
   2d8e8:	ldr	r2, [fp, #-16]
   2d8ec:	str	r2, [r3, #-100]	; 0xffffff9c
   2d8f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d8f4:	add	r3, r3, #1
   2d8f8:	str	r3, [fp, #-112]	; 0xffffff90
   2d8fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d900:	cmp	r3, #0
   2d904:	beq	2d960 <flatcc_builder_create_buffer@@Base+0x2c4>
   2d908:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2d90c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d910:	add	r3, r2, r3
   2d914:	str	r3, [fp, #-116]	; 0xffffff8c
   2d918:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d91c:	add	r3, r3, #1
   2d920:	lsl	r3, r3, #3
   2d924:	sub	r2, fp, #12
   2d928:	add	r3, r2, r3
   2d92c:	ldr	r2, [pc, #308]	; 2da68 <flatcc_builder_create_buffer@@Base+0x3cc>
   2d930:	ldr	r2, [r4, r2]
   2d934:	str	r2, [r3, #-104]	; 0xffffff98
   2d938:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d93c:	add	r3, r3, #1
   2d940:	lsl	r3, r3, #3
   2d944:	sub	r2, fp, #12
   2d948:	add	r3, r2, r3
   2d94c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d950:	str	r2, [r3, #-100]	; 0xffffff9c
   2d954:	ldr	r3, [fp, #-112]	; 0xffffff90
   2d958:	add	r3, r3, #1
   2d95c:	str	r3, [fp, #-112]	; 0xffffff90
   2d960:	ldr	r3, [fp, #-128]	; 0xffffff80
   2d964:	ldr	r3, [r3, #136]	; 0x88
   2d968:	mov	r2, r3
   2d96c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2d970:	sub	r2, r2, r3
   2d974:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d978:	cmp	r3, #0
   2d97c:	bne	2d98c <flatcc_builder_create_buffer@@Base+0x2f0>
   2d980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d984:	cmp	r3, #0
   2d988:	beq	2d994 <flatcc_builder_create_buffer@@Base+0x2f8>
   2d98c:	mov	r3, #4
   2d990:	b	2d998 <flatcc_builder_create_buffer@@Base+0x2fc>
   2d994:	mov	r3, #0
   2d998:	add	r3, r2, r3
   2d99c:	str	r3, [fp, #-32]	; 0xffffffe0
   2d9a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d9a4:	cmp	r3, #0
   2d9a8:	beq	2d9d4 <flatcc_builder_create_buffer@@Base+0x338>
   2d9ac:	ldr	r3, [fp, #-128]	; 0xffffff80
   2d9b0:	ldr	r3, [r3, #144]	; 0x90
   2d9b4:	mov	r2, r3
   2d9b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d9bc:	sub	r3, r2, r3
   2d9c0:	mov	r0, r3
   2d9c4:	bl	2ba40 <main@@Base+0xd40>
   2d9c8:	mov	r3, r0
   2d9cc:	str	r3, [fp, #-44]	; 0xffffffd4
   2d9d0:	b	2d9f8 <flatcc_builder_create_buffer@@Base+0x35c>
   2d9d4:	ldr	r3, [fp, #-128]	; 0xffffff80
   2d9d8:	ldr	r3, [r3, #140]	; 0x8c
   2d9dc:	mov	r2, r3
   2d9e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d9e4:	sub	r3, r2, r3
   2d9e8:	mov	r0, r3
   2d9ec:	bl	2ba40 <main@@Base+0xd40>
   2d9f0:	mov	r3, r0
   2d9f4:	str	r3, [fp, #-44]	; 0xffffffd4
   2d9f8:	ldr	r2, [fp, #-140]	; 0xffffff74
   2d9fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2da00:	sub	r3, r2, r3
   2da04:	mov	r0, r3
   2da08:	bl	2ba40 <main@@Base+0xd40>
   2da0c:	mov	r3, r0
   2da10:	str	r3, [fp, #-40]	; 0xffffffd8
   2da14:	sub	r3, fp, #116	; 0x74
   2da18:	mov	r1, r3
   2da1c:	ldr	r0, [fp, #-128]	; 0xffffff80
   2da20:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2da24:	str	r0, [fp, #-36]	; 0xffffffdc
   2da28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2da2c:	cmp	r3, #0
   2da30:	bne	2da54 <flatcc_builder_create_buffer@@Base+0x3b8>
   2da34:	ldr	r3, [pc, #48]	; 2da6c <flatcc_builder_create_buffer@@Base+0x3d0>
   2da38:	add	r3, pc, r3
   2da3c:	mov	r2, #772	; 0x304
   2da40:	ldr	r1, [pc, #40]	; 2da70 <flatcc_builder_create_buffer@@Base+0x3d4>
   2da44:	add	r1, pc, r1
   2da48:	ldr	r0, [pc, #36]	; 2da74 <flatcc_builder_create_buffer@@Base+0x3d8>
   2da4c:	add	r0, pc, r0
   2da50:	bl	14610 <__assert_fail@plt>
   2da54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2da58:	mov	r0, r3
   2da5c:	sub	sp, fp, #8
   2da60:	pop	{r4, fp, pc}
   2da64:	andeq	r4, r3, ip, lsr r9
   2da68:	andeq	r0, r0, r4, rrx
   2da6c:			; <UNDEFINED> instruction: 0x000217b0
   2da70:	ldrdeq	r1, [r2], -r8
   2da74:	andeq	r1, r2, r0, lsr r3

0002da78 <flatcc_builder_create_struct@@Base>:
   2da78:	push	{r4, fp, lr}
   2da7c:	add	fp, sp, #8
   2da80:	sub	sp, sp, #100	; 0x64
   2da84:	str	r0, [fp, #-96]	; 0xffffffa0
   2da88:	str	r1, [fp, #-100]	; 0xffffff9c
   2da8c:	str	r2, [fp, #-104]	; 0xffffff98
   2da90:	strh	r3, [fp, #-106]	; 0xffffff96
   2da94:	ldr	r4, [pc, #328]	; 2dbe4 <flatcc_builder_create_struct@@Base+0x16c>
   2da98:	add	r4, pc, r4
   2da9c:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2daa0:	cmp	r3, #0
   2daa4:	bne	2dac8 <flatcc_builder_create_struct@@Base+0x50>
   2daa8:	ldr	r3, [pc, #312]	; 2dbe8 <flatcc_builder_create_struct@@Base+0x170>
   2daac:	add	r3, pc, r3
   2dab0:	ldr	r2, [pc, #308]	; 2dbec <flatcc_builder_create_struct@@Base+0x174>
   2dab4:	ldr	r1, [pc, #308]	; 2dbf0 <flatcc_builder_create_struct@@Base+0x178>
   2dab8:	add	r1, pc, r1
   2dabc:	ldr	r0, [pc, #304]	; 2dbf4 <flatcc_builder_create_struct@@Base+0x17c>
   2dac0:	add	r0, pc, r0
   2dac4:	bl	14610 <__assert_fail@plt>
   2dac8:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2dacc:	mov	r1, r3
   2dad0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2dad4:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   2dad8:	ldrh	r3, [fp, #-106]	; 0xffffff96
   2dadc:	mov	r2, r3
   2dae0:	ldr	r1, [fp, #-104]	; 0xffffff98
   2dae4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2dae8:	bl	2d07c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2daec:	str	r0, [fp, #-16]
   2daf0:	mov	r3, #0
   2daf4:	str	r3, [fp, #-88]	; 0xffffffa8
   2daf8:	mov	r3, #0
   2dafc:	str	r3, [fp, #-84]	; 0xffffffac
   2db00:	ldr	r3, [fp, #-104]	; 0xffffff98
   2db04:	cmp	r3, #0
   2db08:	beq	2db60 <flatcc_builder_create_struct@@Base+0xe8>
   2db0c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2db10:	ldr	r3, [fp, #-104]	; 0xffffff98
   2db14:	add	r3, r2, r3
   2db18:	str	r3, [fp, #-88]	; 0xffffffa8
   2db1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db20:	add	r3, r3, #1
   2db24:	lsl	r3, r3, #3
   2db28:	sub	r2, fp, #12
   2db2c:	add	r3, r2, r3
   2db30:	ldr	r2, [fp, #-100]	; 0xffffff9c
   2db34:	str	r2, [r3, #-76]	; 0xffffffb4
   2db38:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db3c:	add	r3, r3, #1
   2db40:	lsl	r3, r3, #3
   2db44:	sub	r2, fp, #12
   2db48:	add	r3, r2, r3
   2db4c:	ldr	r2, [fp, #-104]	; 0xffffff98
   2db50:	str	r2, [r3, #-72]	; 0xffffffb8
   2db54:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db58:	add	r3, r3, #1
   2db5c:	str	r3, [fp, #-84]	; 0xffffffac
   2db60:	ldr	r3, [fp, #-16]
   2db64:	cmp	r3, #0
   2db68:	beq	2dbc4 <flatcc_builder_create_struct@@Base+0x14c>
   2db6c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2db70:	ldr	r3, [fp, #-16]
   2db74:	add	r3, r2, r3
   2db78:	str	r3, [fp, #-88]	; 0xffffffa8
   2db7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2db80:	add	r3, r3, #1
   2db84:	lsl	r3, r3, #3
   2db88:	sub	r2, fp, #12
   2db8c:	add	r3, r2, r3
   2db90:	ldr	r2, [pc, #96]	; 2dbf8 <flatcc_builder_create_struct@@Base+0x180>
   2db94:	ldr	r2, [r4, r2]
   2db98:	str	r2, [r3, #-76]	; 0xffffffb4
   2db9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   2dba0:	add	r3, r3, #1
   2dba4:	lsl	r3, r3, #3
   2dba8:	sub	r2, fp, #12
   2dbac:	add	r3, r2, r3
   2dbb0:	ldr	r2, [fp, #-16]
   2dbb4:	str	r2, [r3, #-72]	; 0xffffffb8
   2dbb8:	ldr	r3, [fp, #-84]	; 0xffffffac
   2dbbc:	add	r3, r3, #1
   2dbc0:	str	r3, [fp, #-84]	; 0xffffffac
   2dbc4:	sub	r3, fp, #88	; 0x58
   2dbc8:	mov	r1, r3
   2dbcc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2dbd0:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2dbd4:	mov	r3, r0
   2dbd8:	mov	r0, r3
   2dbdc:	sub	sp, fp, #8
   2dbe0:	pop	{r4, fp, pc}
   2dbe4:	andeq	r4, r3, r0, ror #10
   2dbe8:	andeq	r1, r2, ip, asr r7
   2dbec:	andeq	r0, r0, pc, lsl #6
   2dbf0:	andeq	r1, r2, r4, ror #4
   2dbf4:	andeq	r1, r2, r0, lsr #6
   2dbf8:	andeq	r0, r0, r4, rrx

0002dbfc <flatcc_builder_start_buffer@@Base>:
   2dbfc:	push	{r4, fp, lr}
   2dc00:	add	fp, sp, #8
   2dc04:	sub	sp, sp, #20
   2dc08:	str	r0, [fp, #-16]
   2dc0c:	str	r1, [fp, #-20]	; 0xffffffec
   2dc10:	str	r3, [fp, #-28]	; 0xffffffe4
   2dc14:	strh	r2, [fp, #-22]	; 0xffffffea
   2dc18:	ldr	r4, [pc, #300]	; 2dd4c <flatcc_builder_start_buffer@@Base+0x150>
   2dc1c:	add	r4, pc, r4
   2dc20:	ldr	r3, [fp, #-16]
   2dc24:	ldrh	r3, [r3, #128]	; 0x80
   2dc28:	mov	r1, r3
   2dc2c:	ldr	r0, [fp, #-16]
   2dc30:	bl	2cdd4 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2dc34:	mov	r3, r0
   2dc38:	cmp	r3, #0
   2dc3c:	beq	2dc48 <flatcc_builder_start_buffer@@Base+0x4c>
   2dc40:	mvn	r3, #0
   2dc44:	b	2dd40 <flatcc_builder_start_buffer@@Base+0x144>
   2dc48:	ldr	r3, [fp, #-16]
   2dc4c:	mov	r2, #1
   2dc50:	strh	r2, [r3, #128]	; 0x80
   2dc54:	ldr	r3, [fp, #-16]
   2dc58:	ldr	r3, [r3, #32]
   2dc5c:	ldr	r2, [fp, #-16]
   2dc60:	ldrh	r2, [r2, #132]	; 0x84
   2dc64:	strh	r2, [r3, #34]	; 0x22
   2dc68:	ldr	r3, [fp, #-16]
   2dc6c:	ldrh	r2, [fp, #-22]	; 0xffffffea
   2dc70:	strh	r2, [r3, #132]	; 0x84
   2dc74:	ldr	r3, [fp, #-16]
   2dc78:	ldr	r3, [r3, #32]
   2dc7c:	ldr	r2, [fp, #-16]
   2dc80:	ldrh	r2, [r2, #164]	; 0xa4
   2dc84:	strh	r2, [r3, #32]
   2dc88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2dc8c:	uxth	r2, r3
   2dc90:	ldr	r3, [fp, #-16]
   2dc94:	strh	r2, [r3, #164]	; 0xa4
   2dc98:	ldr	r3, [fp, #-16]
   2dc9c:	ldr	r3, [r3, #32]
   2dca0:	ldr	r2, [fp, #-16]
   2dca4:	ldr	r2, [r2, #144]	; 0x90
   2dca8:	str	r2, [r3, #20]
   2dcac:	ldr	r3, [fp, #-16]
   2dcb0:	ldr	r3, [r3, #32]
   2dcb4:	ldr	r2, [fp, #-16]
   2dcb8:	ldr	r2, [r2, #152]	; 0x98
   2dcbc:	str	r2, [r3, #28]
   2dcc0:	ldr	r3, [fp, #-16]
   2dcc4:	ldr	r2, [r3, #136]	; 0x88
   2dcc8:	ldr	r3, [fp, #-16]
   2dccc:	str	r2, [r3, #144]	; 0x90
   2dcd0:	ldr	r3, [fp, #-16]
   2dcd4:	ldr	r3, [r3, #148]	; 0x94
   2dcd8:	add	r1, r3, #1
   2dcdc:	ldr	r2, [fp, #-16]
   2dce0:	str	r1, [r2, #148]	; 0x94
   2dce4:	ldr	r2, [fp, #-16]
   2dce8:	str	r3, [r2, #152]	; 0x98
   2dcec:	ldr	r3, [fp, #-16]
   2dcf0:	ldr	r3, [r3, #32]
   2dcf4:	ldr	r2, [fp, #-16]
   2dcf8:	ldr	r2, [r2, #168]	; 0xa8
   2dcfc:	str	r2, [r3, #16]
   2dd00:	ldr	r3, [fp, #-16]
   2dd04:	add	r2, r3, #168	; 0xa8
   2dd08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dd0c:	cmp	r3, #0
   2dd10:	beq	2dd1c <flatcc_builder_start_buffer@@Base+0x120>
   2dd14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dd18:	b	2dd24 <flatcc_builder_start_buffer@@Base+0x128>
   2dd1c:	ldr	r3, [pc, #44]	; 2dd50 <flatcc_builder_start_buffer@@Base+0x154>
   2dd20:	ldr	r3, [r4, r3]
   2dd24:	ldr	r3, [r3]
   2dd28:	str	r3, [r2]
   2dd2c:	ldr	r3, [fp, #-16]
   2dd30:	ldr	r3, [r3, #32]
   2dd34:	mov	r2, #1
   2dd38:	strh	r2, [r3, #14]
   2dd3c:	mov	r3, #0
   2dd40:	mov	r0, r3
   2dd44:	sub	sp, fp, #8
   2dd48:	pop	{r4, fp, pc}
   2dd4c:	ldrdeq	r4, [r3], -ip
   2dd50:	andeq	r0, r0, r4, rrx

0002dd54 <flatcc_builder_end_buffer@@Base>:
   2dd54:	push	{fp, lr}
   2dd58:	add	fp, sp, #4
   2dd5c:	sub	sp, sp, #24
   2dd60:	str	r0, [fp, #-16]
   2dd64:	str	r1, [fp, #-20]	; 0xffffffec
   2dd68:	ldr	r3, [fp, #-16]
   2dd6c:	ldrh	r3, [r3, #164]	; 0xa4
   2dd70:	and	r3, r3, #2
   2dd74:	str	r3, [fp, #-8]
   2dd78:	ldr	r3, [fp, #-16]
   2dd7c:	ldr	r3, [r3, #152]	; 0x98
   2dd80:	cmp	r3, #0
   2dd84:	movne	r3, #1
   2dd88:	moveq	r3, #0
   2dd8c:	uxtb	r3, r3
   2dd90:	mov	r2, r3
   2dd94:	ldr	r3, [fp, #-8]
   2dd98:	orr	r3, r3, r2
   2dd9c:	str	r3, [fp, #-8]
   2dda0:	ldr	r3, [fp, #-16]
   2dda4:	ldr	r3, [r3, #32]
   2dda8:	ldrh	r3, [r3, #14]
   2ddac:	cmp	r3, #1
   2ddb0:	beq	2ddd4 <flatcc_builder_end_buffer@@Base+0x80>
   2ddb4:	ldr	r3, [pc, #224]	; 2de9c <flatcc_builder_end_buffer@@Base+0x148>
   2ddb8:	add	r3, pc, r3
   2ddbc:	ldr	r2, [pc, #220]	; 2dea0 <flatcc_builder_end_buffer@@Base+0x14c>
   2ddc0:	ldr	r1, [pc, #220]	; 2dea4 <flatcc_builder_end_buffer@@Base+0x150>
   2ddc4:	add	r1, pc, r1
   2ddc8:	ldr	r0, [pc, #216]	; 2dea8 <flatcc_builder_end_buffer@@Base+0x154>
   2ddcc:	add	r0, pc, r0
   2ddd0:	bl	14610 <__assert_fail@plt>
   2ddd4:	ldr	r3, [fp, #-16]
   2ddd8:	ldrh	r3, [r3, #132]	; 0x84
   2dddc:	mov	r1, r3
   2dde0:	ldr	r0, [fp, #-16]
   2dde4:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   2dde8:	ldr	r3, [fp, #-16]
   2ddec:	add	r1, r3, #168	; 0xa8
   2ddf0:	ldr	r3, [fp, #-16]
   2ddf4:	ldrh	r0, [r3, #132]	; 0x84
   2ddf8:	ldr	r3, [fp, #-16]
   2ddfc:	ldrh	r3, [r3, #128]	; 0x80
   2de00:	ldr	r2, [fp, #-8]
   2de04:	str	r2, [sp, #4]
   2de08:	str	r3, [sp]
   2de0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2de10:	mov	r2, r0
   2de14:	ldr	r0, [fp, #-16]
   2de18:	bl	2d69c <flatcc_builder_create_buffer@@Base>
   2de1c:	str	r0, [fp, #-12]
   2de20:	ldr	r3, [fp, #-12]
   2de24:	cmp	r3, #0
   2de28:	bne	2de34 <flatcc_builder_end_buffer@@Base+0xe0>
   2de2c:	mov	r3, #0
   2de30:	b	2de90 <flatcc_builder_end_buffer@@Base+0x13c>
   2de34:	ldr	r3, [fp, #-16]
   2de38:	ldr	r3, [r3, #32]
   2de3c:	ldr	r2, [r3, #20]
   2de40:	ldr	r3, [fp, #-16]
   2de44:	str	r2, [r3, #144]	; 0x90
   2de48:	ldr	r3, [fp, #-16]
   2de4c:	ldr	r3, [r3, #32]
   2de50:	ldr	r2, [r3, #28]
   2de54:	ldr	r3, [fp, #-16]
   2de58:	str	r2, [r3, #152]	; 0x98
   2de5c:	ldr	r3, [fp, #-16]
   2de60:	ldr	r3, [r3, #32]
   2de64:	ldr	r2, [r3, #16]
   2de68:	ldr	r3, [fp, #-16]
   2de6c:	str	r2, [r3, #168]	; 0xa8
   2de70:	ldr	r3, [fp, #-16]
   2de74:	ldr	r3, [r3, #32]
   2de78:	ldrh	r2, [r3, #32]
   2de7c:	ldr	r3, [fp, #-16]
   2de80:	strh	r2, [r3, #164]	; 0xa4
   2de84:	ldr	r0, [fp, #-16]
   2de88:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2de8c:	ldr	r3, [fp, #-12]
   2de90:	mov	r0, r3
   2de94:	sub	sp, fp, #4
   2de98:	pop	{fp, pc}
   2de9c:	andeq	r1, r2, r0, ror r4
   2dea0:	andeq	r0, r0, r6, asr #6
   2dea4:	andeq	r0, r2, r8, asr pc
   2dea8:	andeq	r1, r2, r0, lsr #32

0002deac <flatcc_builder_start_struct@@Base>:
   2deac:	push	{fp, lr}
   2deb0:	add	fp, sp, #4
   2deb4:	sub	sp, sp, #16
   2deb8:	str	r0, [fp, #-8]
   2debc:	str	r1, [fp, #-12]
   2dec0:	mov	r3, r2
   2dec4:	strh	r3, [fp, #-14]
   2dec8:	ldrh	r3, [fp, #-14]
   2decc:	mov	r1, r3
   2ded0:	ldr	r0, [fp, #-8]
   2ded4:	bl	2cdd4 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2ded8:	mov	r3, r0
   2dedc:	cmp	r3, #0
   2dee0:	beq	2deec <flatcc_builder_start_struct@@Base+0x40>
   2dee4:	mov	r3, #0
   2dee8:	b	2df18 <flatcc_builder_start_struct@@Base+0x6c>
   2deec:	ldr	r3, [fp, #-8]
   2def0:	ldr	r3, [r3, #32]
   2def4:	mov	r2, #2
   2def8:	strh	r2, [r3, #14]
   2defc:	mvn	r1, #3
   2df00:	ldr	r0, [fp, #-8]
   2df04:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   2df08:	ldr	r1, [fp, #-12]
   2df0c:	ldr	r0, [fp, #-8]
   2df10:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   2df14:	mov	r3, r0
   2df18:	mov	r0, r3
   2df1c:	sub	sp, fp, #4
   2df20:	pop	{fp, pc}

0002df24 <flatcc_builder_struct_edit@@Base>:
   2df24:	push	{fp}		; (str fp, [sp, #-4]!)
   2df28:	add	fp, sp, #0
   2df2c:	sub	sp, sp, #12
   2df30:	str	r0, [fp, #-8]
   2df34:	ldr	r3, [fp, #-8]
   2df38:	ldr	r3, [r3, #16]
   2df3c:	mov	r0, r3
   2df40:	add	sp, fp, #0
   2df44:	pop	{fp}		; (ldr fp, [sp], #4)
   2df48:	bx	lr

0002df4c <flatcc_builder_end_struct@@Base>:
   2df4c:	push	{fp, lr}
   2df50:	add	fp, sp, #4
   2df54:	sub	sp, sp, #16
   2df58:	str	r0, [fp, #-16]
   2df5c:	ldr	r3, [fp, #-16]
   2df60:	ldr	r3, [r3, #32]
   2df64:	ldrh	r3, [r3, #14]
   2df68:	cmp	r3, #2
   2df6c:	beq	2df90 <flatcc_builder_end_struct@@Base+0x44>
   2df70:	ldr	r3, [pc, #104]	; 2dfe0 <flatcc_builder_end_struct@@Base+0x94>
   2df74:	add	r3, pc, r3
   2df78:	mov	r2, #872	; 0x368
   2df7c:	ldr	r1, [pc, #96]	; 2dfe4 <flatcc_builder_end_struct@@Base+0x98>
   2df80:	add	r1, pc, r1
   2df84:	ldr	r0, [pc, #92]	; 2dfe8 <flatcc_builder_end_struct@@Base+0x9c>
   2df88:	add	r0, pc, r0
   2df8c:	bl	14610 <__assert_fail@plt>
   2df90:	ldr	r3, [fp, #-16]
   2df94:	ldr	r1, [r3, #16]
   2df98:	ldr	r3, [fp, #-16]
   2df9c:	ldr	r2, [r3, #20]
   2dfa0:	ldr	r3, [fp, #-16]
   2dfa4:	ldrh	r3, [r3, #130]	; 0x82
   2dfa8:	ldr	r0, [fp, #-16]
   2dfac:	bl	2da78 <flatcc_builder_create_struct@@Base>
   2dfb0:	str	r0, [fp, #-8]
   2dfb4:	ldr	r3, [fp, #-8]
   2dfb8:	cmp	r3, #0
   2dfbc:	bne	2dfc8 <flatcc_builder_end_struct@@Base+0x7c>
   2dfc0:	mov	r3, #0
   2dfc4:	b	2dfd4 <flatcc_builder_end_struct@@Base+0x88>
   2dfc8:	ldr	r0, [fp, #-16]
   2dfcc:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2dfd0:	ldr	r3, [fp, #-8]
   2dfd4:	mov	r0, r3
   2dfd8:	sub	sp, fp, #4
   2dfdc:	pop	{fp, pc}
   2dfe0:	ldrdeq	r1, [r2], -r0
   2dfe4:	muleq	r2, ip, sp
   2dfe8:	muleq	r2, r0, lr
   2dfec:	push	{fp, lr}
   2dff0:	add	fp, sp, #4
   2dff4:	sub	sp, sp, #24
   2dff8:	str	r0, [fp, #-16]
   2dffc:	str	r1, [fp, #-20]	; 0xffffffec
   2e000:	str	r2, [fp, #-24]	; 0xffffffe8
   2e004:	ldr	r3, [fp, #-16]
   2e008:	ldr	r3, [r3, #32]
   2e00c:	ldr	r3, [r3, #20]
   2e010:	str	r3, [fp, #-8]
   2e014:	ldr	r2, [fp, #-8]
   2e018:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e01c:	add	r3, r2, r3
   2e020:	str	r3, [fp, #-12]
   2e024:	ldr	r2, [fp, #-8]
   2e028:	ldr	r3, [fp, #-12]
   2e02c:	cmp	r2, r3
   2e030:	bhi	2e044 <flatcc_builder_end_struct@@Base+0xf8>
   2e034:	ldr	r2, [fp, #-12]
   2e038:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e03c:	cmp	r2, r3
   2e040:	bls	2e08c <flatcc_builder_end_struct@@Base+0x140>
   2e044:	ldr	r2, [fp, #-8]
   2e048:	ldr	r3, [fp, #-12]
   2e04c:	cmp	r2, r3
   2e050:	bhi	2e064 <flatcc_builder_end_struct@@Base+0x118>
   2e054:	ldr	r2, [fp, #-12]
   2e058:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e05c:	cmp	r2, r3
   2e060:	bls	2e084 <flatcc_builder_end_struct@@Base+0x138>
   2e064:	ldr	r3, [pc, #64]	; 2e0ac <flatcc_builder_end_struct@@Base+0x160>
   2e068:	add	r3, pc, r3
   2e06c:	mov	r2, #892	; 0x37c
   2e070:	ldr	r1, [pc, #56]	; 2e0b0 <flatcc_builder_end_struct@@Base+0x164>
   2e074:	add	r1, pc, r1
   2e078:	ldr	r0, [pc, #52]	; 2e0b4 <flatcc_builder_end_struct@@Base+0x168>
   2e07c:	add	r0, pc, r0
   2e080:	bl	14610 <__assert_fail@plt>
   2e084:	mvn	r3, #0
   2e088:	b	2e0a0 <flatcc_builder_end_struct@@Base+0x154>
   2e08c:	ldr	r3, [fp, #-16]
   2e090:	ldr	r3, [r3, #32]
   2e094:	ldr	r2, [fp, #-12]
   2e098:	str	r2, [r3, #20]
   2e09c:	mov	r3, #0
   2e0a0:	mov	r0, r3
   2e0a4:	sub	sp, fp, #4
   2e0a8:	pop	{fp, pc}
   2e0ac:	strdeq	r1, [r2], -r8
   2e0b0:	andeq	r0, r2, r8, lsr #25
   2e0b4:	andeq	r0, r2, r8, asr #27

0002e0b8 <flatcc_builder_extend_vector@@Base>:
   2e0b8:	push	{fp, lr}
   2e0bc:	add	fp, sp, #4
   2e0c0:	sub	sp, sp, #8
   2e0c4:	str	r0, [fp, #-8]
   2e0c8:	str	r1, [fp, #-12]
   2e0cc:	ldr	r3, [fp, #-8]
   2e0d0:	ldr	r3, [r3, #32]
   2e0d4:	ldr	r3, [r3, #24]
   2e0d8:	mov	r2, r3
   2e0dc:	ldr	r1, [fp, #-12]
   2e0e0:	ldr	r0, [fp, #-8]
   2e0e4:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   2e0e8:	mov	r3, r0
   2e0ec:	cmp	r3, #0
   2e0f0:	beq	2e0fc <flatcc_builder_extend_vector@@Base+0x44>
   2e0f4:	mov	r3, #0
   2e0f8:	b	2e120 <flatcc_builder_extend_vector@@Base+0x68>
   2e0fc:	ldr	r3, [fp, #-8]
   2e100:	ldr	r3, [r3, #32]
   2e104:	ldr	r3, [r3, #16]
   2e108:	ldr	r2, [fp, #-12]
   2e10c:	mul	r3, r2, r3
   2e110:	mov	r1, r3
   2e114:	ldr	r0, [fp, #-8]
   2e118:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   2e11c:	mov	r3, r0
   2e120:	mov	r0, r3
   2e124:	sub	sp, fp, #4
   2e128:	pop	{fp, pc}

0002e12c <flatcc_builder_vector_push@@Base>:
   2e12c:	push	{fp, lr}
   2e130:	add	fp, sp, #4
   2e134:	sub	sp, sp, #8
   2e138:	str	r0, [fp, #-8]
   2e13c:	str	r1, [fp, #-12]
   2e140:	ldr	r3, [fp, #-8]
   2e144:	ldr	r3, [r3, #32]
   2e148:	ldrh	r3, [r3, #14]
   2e14c:	cmp	r3, #4
   2e150:	beq	2e174 <flatcc_builder_vector_push@@Base+0x48>
   2e154:	ldr	r3, [pc, #200]	; 2e224 <flatcc_builder_vector_push@@Base+0xf8>
   2e158:	add	r3, pc, r3
   2e15c:	ldr	r2, [pc, #196]	; 2e228 <flatcc_builder_vector_push@@Base+0xfc>
   2e160:	ldr	r1, [pc, #196]	; 2e22c <flatcc_builder_vector_push@@Base+0x100>
   2e164:	add	r1, pc, r1
   2e168:	ldr	r0, [pc, #192]	; 2e230 <flatcc_builder_vector_push@@Base+0x104>
   2e16c:	add	r0, pc, r0
   2e170:	bl	14610 <__assert_fail@plt>
   2e174:	ldr	r3, [fp, #-8]
   2e178:	ldr	r3, [r3, #32]
   2e17c:	ldr	r2, [r3, #20]
   2e180:	ldr	r3, [fp, #-8]
   2e184:	ldr	r3, [r3, #32]
   2e188:	ldr	r3, [r3, #24]
   2e18c:	cmp	r2, r3
   2e190:	bls	2e1dc <flatcc_builder_vector_push@@Base+0xb0>
   2e194:	ldr	r3, [fp, #-8]
   2e198:	ldr	r3, [r3, #32]
   2e19c:	ldr	r2, [r3, #20]
   2e1a0:	ldr	r3, [fp, #-8]
   2e1a4:	ldr	r3, [r3, #32]
   2e1a8:	ldr	r3, [r3, #24]
   2e1ac:	cmp	r2, r3
   2e1b0:	bls	2e1d4 <flatcc_builder_vector_push@@Base+0xa8>
   2e1b4:	ldr	r3, [pc, #120]	; 2e234 <flatcc_builder_vector_push@@Base+0x108>
   2e1b8:	add	r3, pc, r3
   2e1bc:	mov	r2, #908	; 0x38c
   2e1c0:	ldr	r1, [pc, #112]	; 2e238 <flatcc_builder_vector_push@@Base+0x10c>
   2e1c4:	add	r1, pc, r1
   2e1c8:	ldr	r0, [pc, #108]	; 2e23c <flatcc_builder_vector_push@@Base+0x110>
   2e1cc:	add	r0, pc, r0
   2e1d0:	bl	14610 <__assert_fail@plt>
   2e1d4:	mov	r3, #0
   2e1d8:	b	2e218 <flatcc_builder_vector_push@@Base+0xec>
   2e1dc:	ldr	r3, [fp, #-8]
   2e1e0:	ldr	r3, [r3, #32]
   2e1e4:	ldr	r2, [fp, #-8]
   2e1e8:	ldr	r2, [r2, #32]
   2e1ec:	ldr	r2, [r2, #20]
   2e1f0:	add	r2, r2, #1
   2e1f4:	str	r2, [r3, #20]
   2e1f8:	ldr	r3, [fp, #-8]
   2e1fc:	ldr	r3, [r3, #32]
   2e200:	ldr	r3, [r3, #16]
   2e204:	mov	r2, r3
   2e208:	ldr	r1, [fp, #-12]
   2e20c:	ldr	r0, [fp, #-8]
   2e210:	bl	2bf6c <flatcc_builder_default_alloc@@Base+0x3e8>
   2e214:	mov	r3, r0
   2e218:	mov	r0, r3
   2e21c:	sub	sp, fp, #4
   2e220:	pop	{fp, pc}
   2e224:	andeq	r1, r2, ip, lsl r1
   2e228:	andeq	r0, r0, fp, lsl #7
   2e22c:			; <UNDEFINED> instruction: 0x00020bb8
   2e230:	strdeq	r0, [r2], -r4
   2e234:	strheq	r1, [r2], -ip
   2e238:	andeq	r0, r2, r8, asr fp
   2e23c:	andeq	r0, r2, r0, asr #25

0002e240 <flatcc_builder_append_vector@@Base>:
   2e240:	push	{fp, lr}
   2e244:	add	fp, sp, #4
   2e248:	sub	sp, sp, #16
   2e24c:	str	r0, [fp, #-8]
   2e250:	str	r1, [fp, #-12]
   2e254:	str	r2, [fp, #-16]
   2e258:	ldr	r3, [fp, #-8]
   2e25c:	ldr	r3, [r3, #32]
   2e260:	ldrh	r3, [r3, #14]
   2e264:	cmp	r3, #4
   2e268:	beq	2e28c <flatcc_builder_append_vector@@Base+0x4c>
   2e26c:	ldr	r3, [pc, #124]	; 2e2f0 <flatcc_builder_append_vector@@Base+0xb0>
   2e270:	add	r3, pc, r3
   2e274:	ldr	r2, [pc, #120]	; 2e2f4 <flatcc_builder_append_vector@@Base+0xb4>
   2e278:	ldr	r1, [pc, #120]	; 2e2f8 <flatcc_builder_append_vector@@Base+0xb8>
   2e27c:	add	r1, pc, r1
   2e280:	ldr	r0, [pc, #116]	; 2e2fc <flatcc_builder_append_vector@@Base+0xbc>
   2e284:	add	r0, pc, r0
   2e288:	bl	14610 <__assert_fail@plt>
   2e28c:	ldr	r3, [fp, #-8]
   2e290:	ldr	r3, [r3, #32]
   2e294:	ldr	r3, [r3, #24]
   2e298:	mov	r2, r3
   2e29c:	ldr	r1, [fp, #-16]
   2e2a0:	ldr	r0, [fp, #-8]
   2e2a4:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   2e2a8:	mov	r3, r0
   2e2ac:	cmp	r3, #0
   2e2b0:	beq	2e2bc <flatcc_builder_append_vector@@Base+0x7c>
   2e2b4:	mov	r3, #0
   2e2b8:	b	2e2e4 <flatcc_builder_append_vector@@Base+0xa4>
   2e2bc:	ldr	r3, [fp, #-8]
   2e2c0:	ldr	r3, [r3, #32]
   2e2c4:	ldr	r3, [r3, #16]
   2e2c8:	ldr	r2, [fp, #-16]
   2e2cc:	mul	r3, r2, r3
   2e2d0:	mov	r2, r3
   2e2d4:	ldr	r1, [fp, #-12]
   2e2d8:	ldr	r0, [fp, #-8]
   2e2dc:	bl	2bf6c <flatcc_builder_default_alloc@@Base+0x3e8>
   2e2e0:	mov	r3, r0
   2e2e4:	mov	r0, r3
   2e2e8:	sub	sp, fp, #4
   2e2ec:	pop	{fp, pc}
   2e2f0:	andeq	r1, r2, r0, lsr #32
   2e2f4:	muleq	r0, r3, r3
   2e2f8:	andeq	r0, r2, r0, lsr #21
   2e2fc:	ldrdeq	r0, [r2], -ip

0002e300 <flatcc_builder_extend_offset_vector@@Base>:
   2e300:	push	{fp, lr}
   2e304:	add	fp, sp, #4
   2e308:	sub	sp, sp, #8
   2e30c:	str	r0, [fp, #-8]
   2e310:	str	r1, [fp, #-12]
   2e314:	mvn	r2, #-1073741824	; 0xc0000000
   2e318:	ldr	r1, [fp, #-12]
   2e31c:	ldr	r0, [fp, #-8]
   2e320:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   2e324:	mov	r3, r0
   2e328:	cmp	r3, #0
   2e32c:	beq	2e338 <flatcc_builder_extend_offset_vector@@Base+0x38>
   2e330:	mov	r3, #0
   2e334:	b	2e350 <flatcc_builder_extend_offset_vector@@Base+0x50>
   2e338:	ldr	r3, [fp, #-12]
   2e33c:	lsl	r3, r3, #2
   2e340:	mov	r1, r3
   2e344:	ldr	r0, [fp, #-8]
   2e348:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   2e34c:	mov	r3, r0
   2e350:	mov	r0, r3
   2e354:	sub	sp, fp, #4
   2e358:	pop	{fp, pc}

0002e35c <flatcc_builder_offset_vector_push@@Base>:
   2e35c:	push	{fp, lr}
   2e360:	add	fp, sp, #4
   2e364:	sub	sp, sp, #16
   2e368:	str	r0, [fp, #-16]
   2e36c:	str	r1, [fp, #-20]	; 0xffffffec
   2e370:	ldr	r3, [fp, #-16]
   2e374:	ldr	r3, [r3, #32]
   2e378:	ldrh	r3, [r3, #14]
   2e37c:	cmp	r3, #5
   2e380:	beq	2e3a4 <flatcc_builder_offset_vector_push@@Base+0x48>
   2e384:	ldr	r3, [pc, #144]	; 2e41c <flatcc_builder_offset_vector_push@@Base+0xc0>
   2e388:	add	r3, pc, r3
   2e38c:	ldr	r2, [pc, #140]	; 2e420 <flatcc_builder_offset_vector_push@@Base+0xc4>
   2e390:	ldr	r1, [pc, #140]	; 2e424 <flatcc_builder_offset_vector_push@@Base+0xc8>
   2e394:	add	r1, pc, r1
   2e398:	ldr	r0, [pc, #136]	; 2e428 <flatcc_builder_offset_vector_push@@Base+0xcc>
   2e39c:	add	r0, pc, r0
   2e3a0:	bl	14610 <__assert_fail@plt>
   2e3a4:	ldr	r3, [fp, #-16]
   2e3a8:	ldr	r3, [r3, #32]
   2e3ac:	ldr	r3, [r3, #20]
   2e3b0:	cmn	r3, #-1073741823	; 0xc0000001
   2e3b4:	bne	2e3c0 <flatcc_builder_offset_vector_push@@Base+0x64>
   2e3b8:	mov	r3, #0
   2e3bc:	b	2e410 <flatcc_builder_offset_vector_push@@Base+0xb4>
   2e3c0:	ldr	r3, [fp, #-16]
   2e3c4:	ldr	r3, [r3, #32]
   2e3c8:	ldr	r2, [fp, #-16]
   2e3cc:	ldr	r2, [r2, #32]
   2e3d0:	ldr	r2, [r2, #20]
   2e3d4:	add	r2, r2, #1
   2e3d8:	str	r2, [r3, #20]
   2e3dc:	mov	r1, #4
   2e3e0:	ldr	r0, [fp, #-16]
   2e3e4:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   2e3e8:	str	r0, [fp, #-8]
   2e3ec:	ldr	r3, [fp, #-8]
   2e3f0:	cmp	r3, #0
   2e3f4:	bne	2e400 <flatcc_builder_offset_vector_push@@Base+0xa4>
   2e3f8:	mov	r3, #0
   2e3fc:	b	2e410 <flatcc_builder_offset_vector_push@@Base+0xb4>
   2e400:	ldr	r3, [fp, #-8]
   2e404:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e408:	str	r2, [r3]
   2e40c:	ldr	r3, [fp, #-8]
   2e410:	mov	r0, r3
   2e414:	sub	sp, fp, #4
   2e418:	pop	{fp, pc}
   2e41c:	andeq	r0, r2, r8, lsr #30
   2e420:	andeq	r0, r0, r6, lsr #7
   2e424:	andeq	r0, r2, r8, lsl #19
   2e428:	andeq	r0, r2, r0, lsr fp

0002e42c <flatcc_builder_append_offset_vector@@Base>:
   2e42c:	push	{fp, lr}
   2e430:	add	fp, sp, #4
   2e434:	sub	sp, sp, #16
   2e438:	str	r0, [fp, #-8]
   2e43c:	str	r1, [fp, #-12]
   2e440:	str	r2, [fp, #-16]
   2e444:	ldr	r3, [fp, #-8]
   2e448:	ldr	r3, [r3, #32]
   2e44c:	ldrh	r3, [r3, #14]
   2e450:	cmp	r3, #5
   2e454:	beq	2e478 <flatcc_builder_append_offset_vector@@Base+0x4c>
   2e458:	ldr	r3, [pc, #100]	; 2e4c4 <flatcc_builder_append_offset_vector@@Base+0x98>
   2e45c:	add	r3, pc, r3
   2e460:	mov	r2, #948	; 0x3b4
   2e464:	ldr	r1, [pc, #92]	; 2e4c8 <flatcc_builder_append_offset_vector@@Base+0x9c>
   2e468:	add	r1, pc, r1
   2e46c:	ldr	r0, [pc, #88]	; 2e4cc <flatcc_builder_append_offset_vector@@Base+0xa0>
   2e470:	add	r0, pc, r0
   2e474:	bl	14610 <__assert_fail@plt>
   2e478:	mvn	r2, #-1073741824	; 0xc0000000
   2e47c:	ldr	r1, [fp, #-16]
   2e480:	ldr	r0, [fp, #-8]
   2e484:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   2e488:	mov	r3, r0
   2e48c:	cmp	r3, #0
   2e490:	beq	2e49c <flatcc_builder_append_offset_vector@@Base+0x70>
   2e494:	mov	r3, #0
   2e498:	b	2e4b8 <flatcc_builder_append_offset_vector@@Base+0x8c>
   2e49c:	ldr	r3, [fp, #-16]
   2e4a0:	lsl	r3, r3, #2
   2e4a4:	mov	r2, r3
   2e4a8:	ldr	r1, [fp, #-12]
   2e4ac:	ldr	r0, [fp, #-8]
   2e4b0:	bl	2bf6c <flatcc_builder_default_alloc@@Base+0x3e8>
   2e4b4:	mov	r3, r0
   2e4b8:	mov	r0, r3
   2e4bc:	sub	sp, fp, #4
   2e4c0:	pop	{fp, pc}
   2e4c4:	andeq	r0, r2, r8, ror lr
   2e4c8:			; <UNDEFINED> instruction: 0x000208b4
   2e4cc:	andeq	r0, r2, ip, asr sl

0002e4d0 <flatcc_builder_extend_string@@Base>:
   2e4d0:	push	{fp, lr}
   2e4d4:	add	fp, sp, #4
   2e4d8:	sub	sp, sp, #8
   2e4dc:	str	r0, [fp, #-8]
   2e4e0:	str	r1, [fp, #-12]
   2e4e4:	ldr	r3, [fp, #-8]
   2e4e8:	ldr	r3, [r3, #32]
   2e4ec:	ldrh	r3, [r3, #14]
   2e4f0:	cmp	r3, #6
   2e4f4:	beq	2e518 <flatcc_builder_extend_string@@Base+0x48>
   2e4f8:	ldr	r3, [pc, #88]	; 2e558 <flatcc_builder_extend_string@@Base+0x88>
   2e4fc:	add	r3, pc, r3
   2e500:	ldr	r2, [pc, #84]	; 2e55c <flatcc_builder_extend_string@@Base+0x8c>
   2e504:	ldr	r1, [pc, #84]	; 2e560 <flatcc_builder_extend_string@@Base+0x90>
   2e508:	add	r1, pc, r1
   2e50c:	ldr	r0, [pc, #80]	; 2e564 <flatcc_builder_extend_string@@Base+0x94>
   2e510:	add	r0, pc, r0
   2e514:	bl	14610 <__assert_fail@plt>
   2e518:	mvn	r2, #0
   2e51c:	ldr	r1, [fp, #-12]
   2e520:	ldr	r0, [fp, #-8]
   2e524:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   2e528:	mov	r3, r0
   2e52c:	cmp	r3, #0
   2e530:	beq	2e53c <flatcc_builder_extend_string@@Base+0x6c>
   2e534:	mov	r3, #0
   2e538:	b	2e54c <flatcc_builder_extend_string@@Base+0x7c>
   2e53c:	ldr	r1, [fp, #-12]
   2e540:	ldr	r0, [fp, #-8]
   2e544:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   2e548:	mov	r3, r0
   2e54c:	mov	r0, r3
   2e550:	sub	sp, fp, #4
   2e554:	pop	{fp, pc}
   2e558:	strdeq	r0, [r2], -ip
   2e55c:			; <UNDEFINED> instruction: 0x000003bd
   2e560:	andeq	r0, r2, r4, lsl r8
   2e564:	strdeq	r0, [r2], -r0	; <UNPREDICTABLE>

0002e568 <flatcc_builder_append_string@@Base>:
   2e568:	push	{fp, lr}
   2e56c:	add	fp, sp, #4
   2e570:	sub	sp, sp, #16
   2e574:	str	r0, [fp, #-8]
   2e578:	str	r1, [fp, #-12]
   2e57c:	str	r2, [fp, #-16]
   2e580:	ldr	r3, [fp, #-8]
   2e584:	ldr	r3, [r3, #32]
   2e588:	ldrh	r3, [r3, #14]
   2e58c:	cmp	r3, #6
   2e590:	beq	2e5b4 <flatcc_builder_append_string@@Base+0x4c>
   2e594:	ldr	r3, [pc, #92]	; 2e5f8 <flatcc_builder_append_string@@Base+0x90>
   2e598:	add	r3, pc, r3
   2e59c:	ldr	r2, [pc, #88]	; 2e5fc <flatcc_builder_append_string@@Base+0x94>
   2e5a0:	ldr	r1, [pc, #88]	; 2e600 <flatcc_builder_append_string@@Base+0x98>
   2e5a4:	add	r1, pc, r1
   2e5a8:	ldr	r0, [pc, #84]	; 2e604 <flatcc_builder_append_string@@Base+0x9c>
   2e5ac:	add	r0, pc, r0
   2e5b0:	bl	14610 <__assert_fail@plt>
   2e5b4:	mvn	r2, #0
   2e5b8:	ldr	r1, [fp, #-16]
   2e5bc:	ldr	r0, [fp, #-8]
   2e5c0:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   2e5c4:	mov	r3, r0
   2e5c8:	cmp	r3, #0
   2e5cc:	beq	2e5d8 <flatcc_builder_append_string@@Base+0x70>
   2e5d0:	mov	r3, #0
   2e5d4:	b	2e5ec <flatcc_builder_append_string@@Base+0x84>
   2e5d8:	ldr	r2, [fp, #-16]
   2e5dc:	ldr	r1, [fp, #-12]
   2e5e0:	ldr	r0, [fp, #-8]
   2e5e4:	bl	2bf6c <flatcc_builder_default_alloc@@Base+0x3e8>
   2e5e8:	mov	r3, r0
   2e5ec:	mov	r0, r3
   2e5f0:	sub	sp, fp, #4
   2e5f4:	pop	{fp, pc}
   2e5f8:	andeq	r0, r2, r0, lsl #27
   2e5fc:	andeq	r0, r0, r6, asr #7
   2e600:	andeq	r0, r2, r8, ror r7
   2e604:	andeq	r0, r2, r4, asr r9

0002e608 <flatcc_builder_append_string_str@@Base>:
   2e608:	push	{fp, lr}
   2e60c:	add	fp, sp, #4
   2e610:	sub	sp, sp, #8
   2e614:	str	r0, [fp, #-8]
   2e618:	str	r1, [fp, #-12]
   2e61c:	ldr	r0, [fp, #-12]
   2e620:	bl	14598 <strlen@plt>
   2e624:	mov	r3, r0
   2e628:	mov	r2, r3
   2e62c:	ldr	r1, [fp, #-12]
   2e630:	ldr	r0, [fp, #-8]
   2e634:	bl	2e568 <flatcc_builder_append_string@@Base>
   2e638:	mov	r3, r0
   2e63c:	mov	r0, r3
   2e640:	sub	sp, fp, #4
   2e644:	pop	{fp, pc}

0002e648 <flatcc_builder_append_string_strn@@Base>:
   2e648:	push	{fp, lr}
   2e64c:	add	fp, sp, #4
   2e650:	sub	sp, sp, #16
   2e654:	str	r0, [fp, #-8]
   2e658:	str	r1, [fp, #-12]
   2e65c:	str	r2, [fp, #-16]
   2e660:	ldr	r1, [fp, #-16]
   2e664:	ldr	r0, [fp, #-12]
   2e668:	bl	2bb30 <main@@Base+0xe30>
   2e66c:	mov	r3, r0
   2e670:	mov	r2, r3
   2e674:	ldr	r1, [fp, #-12]
   2e678:	ldr	r0, [fp, #-8]
   2e67c:	bl	2e568 <flatcc_builder_append_string@@Base>
   2e680:	mov	r3, r0
   2e684:	mov	r0, r3
   2e688:	sub	sp, fp, #4
   2e68c:	pop	{fp, pc}

0002e690 <flatcc_builder_truncate_vector@@Base>:
   2e690:	push	{fp, lr}
   2e694:	add	fp, sp, #4
   2e698:	sub	sp, sp, #8
   2e69c:	str	r0, [fp, #-8]
   2e6a0:	str	r1, [fp, #-12]
   2e6a4:	ldr	r3, [fp, #-8]
   2e6a8:	ldr	r3, [r3, #32]
   2e6ac:	ldrh	r3, [r3, #14]
   2e6b0:	cmp	r3, #4
   2e6b4:	beq	2e6d8 <flatcc_builder_truncate_vector@@Base+0x48>
   2e6b8:	ldr	r3, [pc, #192]	; 2e780 <flatcc_builder_truncate_vector@@Base+0xf0>
   2e6bc:	add	r3, pc, r3
   2e6c0:	ldr	r2, [pc, #188]	; 2e784 <flatcc_builder_truncate_vector@@Base+0xf4>
   2e6c4:	ldr	r1, [pc, #188]	; 2e788 <flatcc_builder_truncate_vector@@Base+0xf8>
   2e6c8:	add	r1, pc, r1
   2e6cc:	ldr	r0, [pc, #184]	; 2e78c <flatcc_builder_truncate_vector@@Base+0xfc>
   2e6d0:	add	r0, pc, r0
   2e6d4:	bl	14610 <__assert_fail@plt>
   2e6d8:	ldr	r3, [fp, #-8]
   2e6dc:	ldr	r3, [r3, #32]
   2e6e0:	ldr	r2, [r3, #20]
   2e6e4:	ldr	r3, [fp, #-12]
   2e6e8:	cmp	r2, r3
   2e6ec:	bcs	2e730 <flatcc_builder_truncate_vector@@Base+0xa0>
   2e6f0:	ldr	r3, [fp, #-8]
   2e6f4:	ldr	r3, [r3, #32]
   2e6f8:	ldr	r2, [r3, #20]
   2e6fc:	ldr	r3, [fp, #-12]
   2e700:	cmp	r2, r3
   2e704:	bcs	2e728 <flatcc_builder_truncate_vector@@Base+0x98>
   2e708:	ldr	r3, [pc, #128]	; 2e790 <flatcc_builder_truncate_vector@@Base+0x100>
   2e70c:	add	r3, pc, r3
   2e710:	ldr	r2, [pc, #124]	; 2e794 <flatcc_builder_truncate_vector@@Base+0x104>
   2e714:	ldr	r1, [pc, #124]	; 2e798 <flatcc_builder_truncate_vector@@Base+0x108>
   2e718:	add	r1, pc, r1
   2e71c:	ldr	r0, [pc, #120]	; 2e79c <flatcc_builder_truncate_vector@@Base+0x10c>
   2e720:	add	r0, pc, r0
   2e724:	bl	14610 <__assert_fail@plt>
   2e728:	mvn	r3, #0
   2e72c:	b	2e774 <flatcc_builder_truncate_vector@@Base+0xe4>
   2e730:	ldr	r3, [fp, #-8]
   2e734:	ldr	r3, [r3, #32]
   2e738:	ldr	r2, [fp, #-8]
   2e73c:	ldr	r2, [r2, #32]
   2e740:	ldr	r1, [r2, #20]
   2e744:	ldr	r2, [fp, #-12]
   2e748:	sub	r2, r1, r2
   2e74c:	str	r2, [r3, #20]
   2e750:	ldr	r3, [fp, #-8]
   2e754:	ldr	r3, [r3, #32]
   2e758:	ldr	r3, [r3, #16]
   2e75c:	ldr	r2, [fp, #-12]
   2e760:	mul	r3, r2, r3
   2e764:	mov	r1, r3
   2e768:	ldr	r0, [fp, #-8]
   2e76c:	bl	2bf10 <flatcc_builder_default_alloc@@Base+0x38c>
   2e770:	mov	r3, #0
   2e774:	mov	r0, r3
   2e778:	sub	sp, fp, #4
   2e77c:	pop	{fp, pc}
   2e780:	andeq	r0, r2, ip, ror ip
   2e784:	ldrdeq	r0, [r0], -r9
   2e788:	andeq	r0, r2, r4, asr r6
   2e78c:	muleq	r2, r0, r7
   2e790:	andeq	r0, r2, ip, lsr #24
   2e794:	ldrdeq	r0, [r0], -sl
   2e798:	andeq	r0, r2, r4, lsl #12
   2e79c:	andeq	r0, r2, ip, lsl #16

0002e7a0 <flatcc_builder_truncate_offset_vector@@Base>:
   2e7a0:	push	{fp, lr}
   2e7a4:	add	fp, sp, #4
   2e7a8:	sub	sp, sp, #8
   2e7ac:	str	r0, [fp, #-8]
   2e7b0:	str	r1, [fp, #-12]
   2e7b4:	ldr	r3, [fp, #-8]
   2e7b8:	ldr	r3, [r3, #32]
   2e7bc:	ldrh	r3, [r3, #14]
   2e7c0:	cmp	r3, #5
   2e7c4:	beq	2e7e8 <flatcc_builder_truncate_offset_vector@@Base+0x48>
   2e7c8:	ldr	r3, [pc, #192]	; 2e890 <flatcc_builder_truncate_offset_vector@@Base+0xf0>
   2e7cc:	add	r3, pc, r3
   2e7d0:	ldr	r2, [pc, #188]	; 2e894 <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   2e7d4:	ldr	r1, [pc, #188]	; 2e898 <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   2e7d8:	add	r1, pc, r1
   2e7dc:	ldr	r0, [pc, #184]	; 2e89c <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   2e7e0:	add	r0, pc, r0
   2e7e4:	bl	14610 <__assert_fail@plt>
   2e7e8:	ldr	r3, [fp, #-8]
   2e7ec:	ldr	r3, [r3, #32]
   2e7f0:	ldr	r2, [r3, #20]
   2e7f4:	ldr	r3, [fp, #-12]
   2e7f8:	cmp	r2, r3
   2e7fc:	bcs	2e840 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   2e800:	ldr	r3, [fp, #-8]
   2e804:	ldr	r3, [r3, #32]
   2e808:	ldr	r2, [r3, #20]
   2e80c:	ldr	r3, [fp, #-12]
   2e810:	cmp	r2, r3
   2e814:	bcs	2e838 <flatcc_builder_truncate_offset_vector@@Base+0x98>
   2e818:	ldr	r3, [pc, #128]	; 2e8a0 <flatcc_builder_truncate_offset_vector@@Base+0x100>
   2e81c:	add	r3, pc, r3
   2e820:	ldr	r2, [pc, #124]	; 2e8a4 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   2e824:	ldr	r1, [pc, #124]	; 2e8a8 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   2e828:	add	r1, pc, r1
   2e82c:	ldr	r0, [pc, #120]	; 2e8ac <flatcc_builder_truncate_offset_vector@@Base+0x10c>
   2e830:	add	r0, pc, r0
   2e834:	bl	14610 <__assert_fail@plt>
   2e838:	mvn	r3, #0
   2e83c:	b	2e884 <flatcc_builder_truncate_offset_vector@@Base+0xe4>
   2e840:	ldr	r3, [fp, #-8]
   2e844:	ldr	r3, [r3, #32]
   2e848:	ldr	r2, [fp, #-8]
   2e84c:	ldr	r2, [r2, #32]
   2e850:	ldr	r1, [r2, #20]
   2e854:	ldr	r2, [fp, #-12]
   2e858:	sub	r2, r1, r2
   2e85c:	str	r2, [r3, #20]
   2e860:	ldr	r3, [fp, #-8]
   2e864:	ldr	r3, [r3, #32]
   2e868:	ldr	r3, [r3, #16]
   2e86c:	ldr	r2, [fp, #-12]
   2e870:	mul	r3, r2, r3
   2e874:	mov	r1, r3
   2e878:	ldr	r0, [fp, #-8]
   2e87c:	bl	2bf10 <flatcc_builder_default_alloc@@Base+0x38c>
   2e880:	mov	r3, #0
   2e884:	mov	r0, r3
   2e888:	sub	sp, fp, #4
   2e88c:	pop	{fp, pc}
   2e890:	andeq	r0, r2, ip, lsl #23
   2e894:	andeq	r0, r0, r2, ror #7
   2e898:	andeq	r0, r2, r4, asr #10
   2e89c:	andeq	r0, r2, ip, ror #13
   2e8a0:	andeq	r0, r2, ip, lsr fp
   2e8a4:	andeq	r0, r0, r3, ror #7
   2e8a8:	strdeq	r0, [r2], -r4
   2e8ac:	andeq	r0, r2, r0, lsr #14

0002e8b0 <flatcc_builder_truncate_string@@Base>:
   2e8b0:	push	{fp, lr}
   2e8b4:	add	fp, sp, #4
   2e8b8:	sub	sp, sp, #8
   2e8bc:	str	r0, [fp, #-8]
   2e8c0:	str	r1, [fp, #-12]
   2e8c4:	ldr	r3, [fp, #-8]
   2e8c8:	ldr	r3, [r3, #32]
   2e8cc:	ldrh	r3, [r3, #14]
   2e8d0:	cmp	r3, #6
   2e8d4:	beq	2e8f8 <flatcc_builder_truncate_string@@Base+0x48>
   2e8d8:	ldr	r3, [pc, #172]	; 2e98c <flatcc_builder_truncate_string@@Base+0xdc>
   2e8dc:	add	r3, pc, r3
   2e8e0:	ldr	r2, [pc, #168]	; 2e990 <flatcc_builder_truncate_string@@Base+0xe0>
   2e8e4:	ldr	r1, [pc, #168]	; 2e994 <flatcc_builder_truncate_string@@Base+0xe4>
   2e8e8:	add	r1, pc, r1
   2e8ec:	ldr	r0, [pc, #164]	; 2e998 <flatcc_builder_truncate_string@@Base+0xe8>
   2e8f0:	add	r0, pc, r0
   2e8f4:	bl	14610 <__assert_fail@plt>
   2e8f8:	ldr	r3, [fp, #-8]
   2e8fc:	ldr	r3, [r3, #32]
   2e900:	ldr	r2, [r3, #20]
   2e904:	ldr	r3, [fp, #-12]
   2e908:	cmp	r2, r3
   2e90c:	bcs	2e950 <flatcc_builder_truncate_string@@Base+0xa0>
   2e910:	ldr	r3, [fp, #-8]
   2e914:	ldr	r3, [r3, #32]
   2e918:	ldr	r2, [r3, #20]
   2e91c:	ldr	r3, [fp, #-12]
   2e920:	cmp	r2, r3
   2e924:	bcs	2e948 <flatcc_builder_truncate_string@@Base+0x98>
   2e928:	ldr	r3, [pc, #108]	; 2e99c <flatcc_builder_truncate_string@@Base+0xec>
   2e92c:	add	r3, pc, r3
   2e930:	mov	r2, #1004	; 0x3ec
   2e934:	ldr	r1, [pc, #100]	; 2e9a0 <flatcc_builder_truncate_string@@Base+0xf0>
   2e938:	add	r1, pc, r1
   2e93c:	ldr	r0, [pc, #96]	; 2e9a4 <flatcc_builder_truncate_string@@Base+0xf4>
   2e940:	add	r0, pc, r0
   2e944:	bl	14610 <__assert_fail@plt>
   2e948:	mvn	r3, #0
   2e94c:	b	2e980 <flatcc_builder_truncate_string@@Base+0xd0>
   2e950:	ldr	r3, [fp, #-8]
   2e954:	ldr	r3, [r3, #32]
   2e958:	ldr	r2, [fp, #-8]
   2e95c:	ldr	r2, [r2, #32]
   2e960:	ldr	r1, [r2, #20]
   2e964:	ldr	r2, [fp, #-12]
   2e968:	sub	r2, r1, r2
   2e96c:	str	r2, [r3, #20]
   2e970:	ldr	r1, [fp, #-12]
   2e974:	ldr	r0, [fp, #-8]
   2e978:	bl	2bf10 <flatcc_builder_default_alloc@@Base+0x38c>
   2e97c:	mov	r3, #0
   2e980:	mov	r0, r3
   2e984:	sub	sp, fp, #4
   2e988:	pop	{fp, pc}
   2e98c:	andeq	r0, r2, r4, lsr #21
   2e990:	andeq	r0, r0, fp, ror #7
   2e994:	andeq	r0, r2, r4, lsr r4
   2e998:	andeq	r0, r2, r0, lsl r6
   2e99c:	andeq	r0, r2, r4, asr sl
   2e9a0:	andeq	r0, r2, r4, ror #7
   2e9a4:	andeq	r0, r2, ip, asr #12

0002e9a8 <flatcc_builder_start_vector@@Base>:
   2e9a8:	push	{fp, lr}
   2e9ac:	add	fp, sp, #4
   2e9b0:	sub	sp, sp, #16
   2e9b4:	str	r0, [fp, #-8]
   2e9b8:	str	r1, [fp, #-12]
   2e9bc:	str	r3, [fp, #-20]	; 0xffffffec
   2e9c0:	strh	r2, [fp, #-14]
   2e9c4:	sub	r3, fp, #14
   2e9c8:	mov	r1, #4
   2e9cc:	mov	r0, r3
   2e9d0:	bl	2ca88 <flatcc_builder_clear@@Base+0xf8>
   2e9d4:	ldrh	r3, [fp, #-14]
   2e9d8:	mov	r1, r3
   2e9dc:	ldr	r0, [fp, #-8]
   2e9e0:	bl	2cdd4 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2e9e4:	mov	r3, r0
   2e9e8:	cmp	r3, #0
   2e9ec:	beq	2e9f8 <flatcc_builder_start_vector@@Base+0x50>
   2e9f0:	mvn	r3, #0
   2e9f4:	b	2ea48 <flatcc_builder_start_vector@@Base+0xa0>
   2e9f8:	ldr	r3, [fp, #-8]
   2e9fc:	ldr	r3, [r3, #32]
   2ea00:	ldr	r2, [fp, #-12]
   2ea04:	str	r2, [r3, #16]
   2ea08:	ldr	r3, [fp, #-8]
   2ea0c:	ldr	r3, [r3, #32]
   2ea10:	mov	r2, #0
   2ea14:	str	r2, [r3, #20]
   2ea18:	ldr	r3, [fp, #-8]
   2ea1c:	ldr	r3, [r3, #32]
   2ea20:	ldr	r2, [fp, #-20]	; 0xffffffec
   2ea24:	str	r2, [r3, #24]
   2ea28:	ldr	r3, [fp, #-8]
   2ea2c:	ldr	r3, [r3, #32]
   2ea30:	mov	r2, #4
   2ea34:	strh	r2, [r3, #14]
   2ea38:	mvn	r1, #3
   2ea3c:	ldr	r0, [fp, #-8]
   2ea40:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   2ea44:	mov	r3, #0
   2ea48:	mov	r0, r3
   2ea4c:	sub	sp, fp, #4
   2ea50:	pop	{fp, pc}

0002ea54 <flatcc_builder_start_offset_vector@@Base>:
   2ea54:	push	{fp, lr}
   2ea58:	add	fp, sp, #4
   2ea5c:	sub	sp, sp, #8
   2ea60:	str	r0, [fp, #-8]
   2ea64:	mov	r1, #4
   2ea68:	ldr	r0, [fp, #-8]
   2ea6c:	bl	2cdd4 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2ea70:	mov	r3, r0
   2ea74:	cmp	r3, #0
   2ea78:	beq	2ea84 <flatcc_builder_start_offset_vector@@Base+0x30>
   2ea7c:	mvn	r3, #0
   2ea80:	b	2eac4 <flatcc_builder_start_offset_vector@@Base+0x70>
   2ea84:	ldr	r3, [fp, #-8]
   2ea88:	ldr	r3, [r3, #32]
   2ea8c:	mov	r2, #4
   2ea90:	str	r2, [r3, #16]
   2ea94:	ldr	r3, [fp, #-8]
   2ea98:	ldr	r3, [r3, #32]
   2ea9c:	mov	r2, #0
   2eaa0:	str	r2, [r3, #20]
   2eaa4:	ldr	r3, [fp, #-8]
   2eaa8:	ldr	r3, [r3, #32]
   2eaac:	mov	r2, #5
   2eab0:	strh	r2, [r3, #14]
   2eab4:	mvn	r1, #3
   2eab8:	ldr	r0, [fp, #-8]
   2eabc:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   2eac0:	mov	r3, #0
   2eac4:	mov	r0, r3
   2eac8:	sub	sp, fp, #4
   2eacc:	pop	{fp, pc}

0002ead0 <flatcc_builder_create_offset_vector@@Base>:
   2ead0:	push	{fp, lr}
   2ead4:	add	fp, sp, #4
   2ead8:	sub	sp, sp, #24
   2eadc:	str	r0, [fp, #-16]
   2eae0:	str	r1, [fp, #-20]	; 0xffffffec
   2eae4:	str	r2, [fp, #-24]	; 0xffffffe8
   2eae8:	ldr	r0, [fp, #-16]
   2eaec:	bl	2ea54 <flatcc_builder_start_offset_vector@@Base>
   2eaf0:	mov	r3, r0
   2eaf4:	cmp	r3, #0
   2eaf8:	beq	2eb04 <flatcc_builder_create_offset_vector@@Base+0x34>
   2eafc:	mov	r3, #0
   2eb00:	b	2eb4c <flatcc_builder_create_offset_vector@@Base+0x7c>
   2eb04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2eb08:	ldr	r0, [fp, #-16]
   2eb0c:	bl	2e300 <flatcc_builder_extend_offset_vector@@Base>
   2eb10:	str	r0, [fp, #-8]
   2eb14:	ldr	r3, [fp, #-8]
   2eb18:	cmp	r3, #0
   2eb1c:	bne	2eb28 <flatcc_builder_create_offset_vector@@Base+0x58>
   2eb20:	mov	r3, #0
   2eb24:	b	2eb4c <flatcc_builder_create_offset_vector@@Base+0x7c>
   2eb28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb2c:	lsl	r3, r3, #2
   2eb30:	mov	r2, r3
   2eb34:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eb38:	ldr	r0, [fp, #-8]
   2eb3c:	bl	14544 <memcpy@plt>
   2eb40:	ldr	r0, [fp, #-16]
   2eb44:	bl	300a8 <flatcc_builder_end_offset_vector@@Base>
   2eb48:	mov	r3, r0
   2eb4c:	mov	r0, r3
   2eb50:	sub	sp, fp, #4
   2eb54:	pop	{fp, pc}

0002eb58 <flatcc_builder_start_string@@Base>:
   2eb58:	push	{fp, lr}
   2eb5c:	add	fp, sp, #4
   2eb60:	sub	sp, sp, #8
   2eb64:	str	r0, [fp, #-8]
   2eb68:	mov	r1, #1
   2eb6c:	ldr	r0, [fp, #-8]
   2eb70:	bl	2cdd4 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2eb74:	mov	r3, r0
   2eb78:	cmp	r3, #0
   2eb7c:	beq	2eb88 <flatcc_builder_start_string@@Base+0x30>
   2eb80:	mvn	r3, #0
   2eb84:	b	2ebc8 <flatcc_builder_start_string@@Base+0x70>
   2eb88:	ldr	r3, [fp, #-8]
   2eb8c:	ldr	r3, [r3, #32]
   2eb90:	mov	r2, #1
   2eb94:	str	r2, [r3, #16]
   2eb98:	ldr	r3, [fp, #-8]
   2eb9c:	ldr	r3, [r3, #32]
   2eba0:	mov	r2, #0
   2eba4:	str	r2, [r3, #20]
   2eba8:	ldr	r3, [fp, #-8]
   2ebac:	ldr	r3, [r3, #32]
   2ebb0:	mov	r2, #6
   2ebb4:	strh	r2, [r3, #14]
   2ebb8:	mvn	r1, #3
   2ebbc:	ldr	r0, [fp, #-8]
   2ebc0:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   2ebc4:	mov	r3, #0
   2ebc8:	mov	r0, r3
   2ebcc:	sub	sp, fp, #4
   2ebd0:	pop	{fp, pc}

0002ebd4 <flatcc_builder_reserve_table@@Base>:
   2ebd4:	push	{fp, lr}
   2ebd8:	add	fp, sp, #4
   2ebdc:	sub	sp, sp, #8
   2ebe0:	str	r0, [fp, #-8]
   2ebe4:	str	r1, [fp, #-12]
   2ebe8:	ldr	r3, [fp, #-12]
   2ebec:	cmp	r3, #0
   2ebf0:	bge	2ec14 <flatcc_builder_reserve_table@@Base+0x40>
   2ebf4:	ldr	r3, [pc, #52]	; 2ec30 <flatcc_builder_reserve_table@@Base+0x5c>
   2ebf8:	add	r3, pc, r3
   2ebfc:	ldr	r2, [pc, #48]	; 2ec34 <flatcc_builder_reserve_table@@Base+0x60>
   2ec00:	ldr	r1, [pc, #48]	; 2ec38 <flatcc_builder_reserve_table@@Base+0x64>
   2ec04:	add	r1, pc, r1
   2ec08:	ldr	r0, [pc, #44]	; 2ec3c <flatcc_builder_reserve_table@@Base+0x68>
   2ec0c:	add	r0, pc, r0
   2ec10:	bl	14610 <__assert_fail@plt>
   2ec14:	ldr	r1, [fp, #-12]
   2ec18:	ldr	r0, [fp, #-8]
   2ec1c:	bl	2c2bc <flatcc_builder_default_alloc@@Base+0x738>
   2ec20:	mov	r3, r0
   2ec24:	mov	r0, r3
   2ec28:	sub	sp, fp, #4
   2ec2c:	pop	{fp, pc}
   2ec30:	andeq	r0, r2, r8, lsr #15
   2ec34:	andeq	r0, r0, r9, lsr #8
   2ec38:	andeq	r0, r2, r8, lsl r1
   2ec3c:	andeq	r0, r2, r4, lsr #7

0002ec40 <flatcc_builder_start_table@@Base>:
   2ec40:	push	{fp, lr}
   2ec44:	add	fp, sp, #4
   2ec48:	sub	sp, sp, #8
   2ec4c:	str	r0, [fp, #-8]
   2ec50:	str	r1, [fp, #-12]
   2ec54:	mov	r1, #4
   2ec58:	ldr	r0, [fp, #-8]
   2ec5c:	bl	2cdd4 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   2ec60:	mov	r3, r0
   2ec64:	cmp	r3, #0
   2ec68:	beq	2ec74 <flatcc_builder_start_table@@Base+0x34>
   2ec6c:	mvn	r3, #0
   2ec70:	b	2ed48 <flatcc_builder_start_table@@Base+0x108>
   2ec74:	ldr	r3, [fp, #-8]
   2ec78:	ldr	r3, [r3, #32]
   2ec7c:	ldr	r2, [fp, #-8]
   2ec80:	ldr	r2, [r2, #4]
   2ec84:	mov	r1, r2
   2ec88:	ldr	r2, [fp, #-8]
   2ec8c:	ldr	r2, [r2, #52]	; 0x34
   2ec90:	sub	r2, r1, r2
   2ec94:	str	r2, [r3, #16]
   2ec98:	ldr	r3, [fp, #-8]
   2ec9c:	ldr	r3, [r3, #32]
   2eca0:	ldr	r2, [fp, #-8]
   2eca4:	ldr	r2, [r2]
   2eca8:	mov	r1, r2
   2ecac:	ldr	r2, [fp, #-8]
   2ecb0:	ldr	r2, [r2, #76]	; 0x4c
   2ecb4:	sub	r2, r1, r2
   2ecb8:	str	r2, [r3, #20]
   2ecbc:	ldr	r3, [fp, #-8]
   2ecc0:	ldr	r3, [r3, #32]
   2ecc4:	ldr	r2, [fp, #-8]
   2ecc8:	ldr	r2, [r2, #12]
   2eccc:	str	r2, [r3, #24]
   2ecd0:	ldr	r3, [fp, #-8]
   2ecd4:	ldr	r3, [r3, #32]
   2ecd8:	ldr	r2, [fp, #-8]
   2ecdc:	ldrh	r2, [r2, #8]
   2ece0:	strh	r2, [r3, #28]
   2ece4:	ldr	r3, [fp, #-8]
   2ece8:	mov	r2, #0
   2ecec:	str	r2, [r3, #12]
   2ecf0:	ldr	r3, [fp, #-8]
   2ecf4:	ldr	r2, [pc, #88]	; 2ed54 <flatcc_builder_start_table@@Base+0x114>
   2ecf8:	str	r2, [r3, #12]
   2ecfc:	ldr	r3, [fp, #-8]
   2ed00:	mov	r2, #0
   2ed04:	strh	r2, [r3, #8]
   2ed08:	ldr	r3, [fp, #-8]
   2ed0c:	ldr	r3, [r3, #32]
   2ed10:	mov	r2, #3
   2ed14:	strh	r2, [r3, #14]
   2ed18:	ldr	r1, [fp, #-12]
   2ed1c:	ldr	r0, [fp, #-8]
   2ed20:	bl	2c2bc <flatcc_builder_default_alloc@@Base+0x738>
   2ed24:	mov	r3, r0
   2ed28:	cmp	r3, #0
   2ed2c:	beq	2ed38 <flatcc_builder_start_table@@Base+0xf8>
   2ed30:	mvn	r3, #0
   2ed34:	b	2ed48 <flatcc_builder_start_table@@Base+0x108>
   2ed38:	ldr	r1, [pc, #24]	; 2ed58 <flatcc_builder_start_table@@Base+0x118>
   2ed3c:	ldr	r0, [fp, #-8]
   2ed40:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   2ed44:	mov	r3, #0
   2ed48:	mov	r0, r3
   2ed4c:	sub	sp, fp, #4
   2ed50:	pop	{fp, pc}
   2ed54:	svccs	0x00693b52
   2ed58:	strdeq	pc, [r0], -ip

0002ed5c <flatcc_builder_create_vtable@@Base>:
   2ed5c:	push	{fp, lr}
   2ed60:	add	fp, sp, #4
   2ed64:	sub	sp, sp, #96	; 0x60
   2ed68:	str	r0, [fp, #-88]	; 0xffffffa8
   2ed6c:	str	r1, [fp, #-92]	; 0xffffffa4
   2ed70:	mov	r3, r2
   2ed74:	strh	r3, [fp, #-94]	; 0xffffffa2
   2ed78:	mov	r3, #0
   2ed7c:	str	r3, [fp, #-80]	; 0xffffffb0
   2ed80:	mov	r3, #0
   2ed84:	str	r3, [fp, #-76]	; 0xffffffb4
   2ed88:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   2ed8c:	cmp	r3, #0
   2ed90:	beq	2ede8 <flatcc_builder_create_vtable@@Base+0x8c>
   2ed94:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2ed98:	ldrh	r3, [fp, #-94]	; 0xffffffa2
   2ed9c:	add	r3, r2, r3
   2eda0:	str	r3, [fp, #-80]	; 0xffffffb0
   2eda4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2eda8:	add	r3, r3, #1
   2edac:	lsl	r3, r3, #3
   2edb0:	sub	r2, fp, #4
   2edb4:	add	r3, r2, r3
   2edb8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2edbc:	str	r2, [r3, #-76]	; 0xffffffb4
   2edc0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2edc4:	ldrh	r2, [fp, #-94]	; 0xffffffa2
   2edc8:	add	r3, r3, #1
   2edcc:	lsl	r3, r3, #3
   2edd0:	sub	r1, fp, #4
   2edd4:	add	r3, r1, r3
   2edd8:	str	r2, [r3, #-72]	; 0xffffffb8
   2eddc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2ede0:	add	r3, r3, #1
   2ede4:	str	r3, [fp, #-76]	; 0xffffffb4
   2ede8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2edec:	ldr	r3, [r3, #152]	; 0x98
   2edf0:	cmp	r3, #0
   2edf4:	bne	2ee30 <flatcc_builder_create_vtable@@Base+0xd4>
   2edf8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   2edfc:	ldr	r3, [r3, #180]	; 0xb4
   2ee00:	cmp	r3, #0
   2ee04:	bne	2ee30 <flatcc_builder_create_vtable@@Base+0xd4>
   2ee08:	sub	r3, fp, #80	; 0x50
   2ee0c:	mov	r1, r3
   2ee10:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2ee14:	bl	2d204 <flatcc_builder_get_user_frame_ptr@@Base+0x464>
   2ee18:	str	r0, [fp, #-8]
   2ee1c:	ldr	r3, [fp, #-8]
   2ee20:	cmp	r3, #0
   2ee24:	bne	2ee64 <flatcc_builder_create_vtable@@Base+0x108>
   2ee28:	mov	r3, #0
   2ee2c:	b	2ee68 <flatcc_builder_create_vtable@@Base+0x10c>
   2ee30:	sub	r3, fp, #80	; 0x50
   2ee34:	mov	r1, r3
   2ee38:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2ee3c:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2ee40:	str	r0, [fp, #-8]
   2ee44:	ldr	r3, [fp, #-8]
   2ee48:	cmp	r3, #0
   2ee4c:	bne	2ee58 <flatcc_builder_create_vtable@@Base+0xfc>
   2ee50:	mov	r3, #0
   2ee54:	b	2ee68 <flatcc_builder_create_vtable@@Base+0x10c>
   2ee58:	ldr	r3, [fp, #-8]
   2ee5c:	add	r3, r3, #1
   2ee60:	str	r3, [fp, #-8]
   2ee64:	ldr	r3, [fp, #-8]
   2ee68:	mov	r0, r3
   2ee6c:	sub	sp, fp, #4
   2ee70:	pop	{fp, pc}

0002ee74 <flatcc_builder_create_cached_vtable@@Base>:
   2ee74:	push	{fp, lr}
   2ee78:	add	fp, sp, #4
   2ee7c:	sub	sp, sp, #48	; 0x30
   2ee80:	str	r0, [fp, #-32]	; 0xffffffe0
   2ee84:	str	r1, [fp, #-36]	; 0xffffffdc
   2ee88:	str	r3, [fp, #-44]	; 0xffffffd4
   2ee8c:	strh	r2, [fp, #-38]	; 0xffffffda
   2ee90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ee94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ee98:	bl	2c528 <flatcc_builder_default_alloc@@Base+0x9a4>
   2ee9c:	str	r0, [fp, #-20]	; 0xffffffec
   2eea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eea4:	cmp	r3, #0
   2eea8:	bne	2eeb4 <flatcc_builder_create_cached_vtable@@Base+0x40>
   2eeac:	mov	r3, #0
   2eeb0:	b	2f178 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2eeb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2eeb8:	str	r3, [fp, #-12]
   2eebc:	ldr	r3, [fp, #-12]
   2eec0:	ldr	r3, [r3]
   2eec4:	str	r3, [fp, #-16]
   2eec8:	mov	r3, #0
   2eecc:	str	r3, [fp, #-8]
   2eed0:	b	2efd4 <flatcc_builder_create_cached_vtable@@Base+0x160>
   2eed4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eed8:	ldr	r2, [r3, #100]	; 0x64
   2eedc:	ldr	r3, [fp, #-16]
   2eee0:	add	r3, r2, r3
   2eee4:	str	r3, [fp, #-24]	; 0xffffffe8
   2eee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eeec:	ldr	r2, [r3, #68]	; 0x44
   2eef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eef4:	ldr	r3, [r3, #8]
   2eef8:	add	r3, r2, r3
   2eefc:	str	r3, [fp, #-28]	; 0xffffffe4
   2ef00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ef04:	ldrh	r3, [r3]
   2ef08:	ldrh	r2, [fp, #-38]	; 0xffffffda
   2ef0c:	cmp	r2, r3
   2ef10:	bne	2ef34 <flatcc_builder_create_cached_vtable@@Base+0xc0>
   2ef14:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2ef18:	mov	r2, r3
   2ef1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ef20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2ef24:	bl	14550 <memcmp@plt>
   2ef28:	mov	r3, r0
   2ef2c:	cmp	r3, #0
   2ef30:	beq	2ef50 <flatcc_builder_create_cached_vtable@@Base+0xdc>
   2ef34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef38:	add	r3, r3, #12
   2ef3c:	str	r3, [fp, #-12]
   2ef40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef44:	ldr	r3, [r3, #12]
   2ef48:	str	r3, [fp, #-16]
   2ef4c:	b	2efd4 <flatcc_builder_create_cached_vtable@@Base+0x160>
   2ef50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef54:	ldr	r2, [r3, #4]
   2ef58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ef5c:	ldr	r3, [r3, #152]	; 0x98
   2ef60:	cmp	r2, r3
   2ef64:	beq	2ef8c <flatcc_builder_create_cached_vtable@@Base+0x118>
   2ef68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef6c:	str	r3, [fp, #-8]
   2ef70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef74:	add	r3, r3, #12
   2ef78:	str	r3, [fp, #-12]
   2ef7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ef80:	ldr	r3, [r3, #12]
   2ef84:	str	r3, [fp, #-16]
   2ef88:	b	2efd4 <flatcc_builder_create_cached_vtable@@Base+0x160>
   2ef8c:	ldr	r2, [fp, #-12]
   2ef90:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ef94:	cmp	r2, r3
   2ef98:	beq	2efc8 <flatcc_builder_create_cached_vtable@@Base+0x154>
   2ef9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2efa0:	ldr	r2, [r3, #12]
   2efa4:	ldr	r3, [fp, #-12]
   2efa8:	str	r2, [r3]
   2efac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2efb0:	ldr	r2, [r3]
   2efb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2efb8:	str	r2, [r3, #12]
   2efbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2efc0:	ldr	r2, [fp, #-16]
   2efc4:	str	r2, [r3]
   2efc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2efcc:	ldr	r3, [r3]
   2efd0:	b	2f178 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2efd4:	ldr	r3, [fp, #-16]
   2efd8:	cmp	r3, #0
   2efdc:	bne	2eed4 <flatcc_builder_create_cached_vtable@@Base+0x60>
   2efe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2efe4:	ldr	r2, [r3, #124]	; 0x7c
   2efe8:	mov	r3, #0
   2efec:	str	r3, [sp]
   2eff0:	mov	r3, #16
   2eff4:	mov	r1, #6
   2eff8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2effc:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2f000:	str	r0, [fp, #-24]	; 0xffffffe8
   2f004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f008:	cmp	r3, #0
   2f00c:	bne	2f018 <flatcc_builder_create_cached_vtable@@Base+0x1a4>
   2f010:	mov	r3, #0
   2f014:	b	2f178 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2f018:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f01c:	ldr	r3, [r3, #124]	; 0x7c
   2f020:	str	r3, [fp, #-16]
   2f024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f028:	ldr	r3, [r3, #124]	; 0x7c
   2f02c:	add	r2, r3, #16
   2f030:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f034:	str	r2, [r3, #124]	; 0x7c
   2f038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f03c:	ldr	r2, [r3, #152]	; 0x98
   2f040:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f044:	str	r2, [r3, #4]
   2f048:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f04c:	ldr	r2, [r3]
   2f050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f054:	str	r2, [r3, #12]
   2f058:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f05c:	ldr	r2, [fp, #-16]
   2f060:	str	r2, [r3]
   2f064:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2f068:	mov	r2, r3
   2f06c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f074:	bl	2ed5c <flatcc_builder_create_vtable@@Base>
   2f078:	mov	r2, r0
   2f07c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f080:	str	r2, [r3]
   2f084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f088:	ldr	r3, [r3]
   2f08c:	cmp	r3, #0
   2f090:	bne	2f09c <flatcc_builder_create_cached_vtable@@Base+0x228>
   2f094:	mov	r3, #0
   2f098:	b	2f178 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2f09c:	ldr	r3, [fp, #-8]
   2f0a0:	cmp	r3, #0
   2f0a4:	beq	2f0bc <flatcc_builder_create_cached_vtable@@Base+0x248>
   2f0a8:	ldr	r3, [fp, #-8]
   2f0ac:	ldr	r2, [r3, #8]
   2f0b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f0b4:	str	r2, [r3, #8]
   2f0b8:	b	2f170 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   2f0bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f0c0:	ldr	r3, [r3, #172]	; 0xac
   2f0c4:	cmp	r3, #0
   2f0c8:	beq	2f0f8 <flatcc_builder_create_cached_vtable@@Base+0x284>
   2f0cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f0d0:	ldr	r2, [r3, #172]	; 0xac
   2f0d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f0d8:	ldr	r1, [r3, #120]	; 0x78
   2f0dc:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2f0e0:	add	r3, r1, r3
   2f0e4:	cmp	r2, r3
   2f0e8:	bcs	2f0f8 <flatcc_builder_create_cached_vtable@@Base+0x284>
   2f0ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f0f0:	bl	2c5a0 <flatcc_builder_flush_vtable_cache@@Base>
   2f0f4:	b	2f170 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   2f0f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f0fc:	ldr	r2, [r3, #120]	; 0x78
   2f100:	ldrh	r1, [fp, #-38]	; 0xffffffda
   2f104:	mov	r3, #0
   2f108:	str	r3, [sp]
   2f10c:	mov	r3, r1
   2f110:	mov	r1, #2
   2f114:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f118:	bl	2c1e4 <flatcc_builder_default_alloc@@Base+0x660>
   2f11c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f120:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f124:	cmp	r3, #0
   2f128:	bne	2f134 <flatcc_builder_create_cached_vtable@@Base+0x2c0>
   2f12c:	mvn	r3, #0
   2f130:	b	2f178 <flatcc_builder_create_cached_vtable@@Base+0x304>
   2f134:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f138:	ldr	r2, [r3, #120]	; 0x78
   2f13c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f140:	str	r2, [r3, #8]
   2f144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f148:	ldr	r2, [r3, #120]	; 0x78
   2f14c:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2f150:	add	r2, r2, r3
   2f154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f158:	str	r2, [r3, #120]	; 0x78
   2f15c:	ldrh	r3, [fp, #-38]	; 0xffffffda
   2f160:	mov	r2, r3
   2f164:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f168:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f16c:	bl	14544 <memcpy@plt>
   2f170:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f174:	ldr	r3, [r3]
   2f178:	mov	r0, r3
   2f17c:	sub	sp, fp, #4
   2f180:	pop	{fp, pc}

0002f184 <flatcc_builder_create_table@@Base>:
   2f184:	push	{r4, fp, lr}
   2f188:	add	fp, sp, #8
   2f18c:	sub	sp, sp, #124	; 0x7c
   2f190:	str	r0, [fp, #-120]	; 0xffffff88
   2f194:	str	r1, [fp, #-124]	; 0xffffff84
   2f198:	str	r2, [fp, #-128]	; 0xffffff80
   2f19c:	strh	r3, [fp, #-130]	; 0xffffff7e
   2f1a0:	ldr	r4, [pc, #728]	; 2f480 <flatcc_builder_create_table@@Base+0x2fc>
   2f1a4:	add	r4, pc, r4
   2f1a8:	ldr	r3, [fp, #8]
   2f1ac:	cmp	r3, #0
   2f1b0:	bge	2f1d4 <flatcc_builder_create_table@@Base+0x50>
   2f1b4:	ldr	r3, [pc, #712]	; 2f484 <flatcc_builder_create_table@@Base+0x300>
   2f1b8:	add	r3, pc, r3
   2f1bc:	ldr	r2, [pc, #708]	; 2f488 <flatcc_builder_create_table@@Base+0x304>
   2f1c0:	ldr	r1, [pc, #708]	; 2f48c <flatcc_builder_create_table@@Base+0x308>
   2f1c4:	add	r1, pc, r1
   2f1c8:	ldr	r0, [pc, #704]	; 2f490 <flatcc_builder_create_table@@Base+0x30c>
   2f1cc:	add	r0, pc, r0
   2f1d0:	bl	14610 <__assert_fail@plt>
   2f1d4:	ldr	r3, [fp, #12]
   2f1d8:	and	r3, r3, #1
   2f1dc:	cmp	r3, #0
   2f1e0:	bne	2f204 <flatcc_builder_create_table@@Base+0x80>
   2f1e4:	ldr	r3, [pc, #680]	; 2f494 <flatcc_builder_create_table@@Base+0x310>
   2f1e8:	add	r3, pc, r3
   2f1ec:	ldr	r2, [pc, #676]	; 2f498 <flatcc_builder_create_table@@Base+0x314>
   2f1f0:	ldr	r1, [pc, #676]	; 2f49c <flatcc_builder_create_table@@Base+0x318>
   2f1f4:	add	r1, pc, r1
   2f1f8:	ldr	r0, [pc, #672]	; 2f4a0 <flatcc_builder_create_table@@Base+0x31c>
   2f1fc:	add	r0, pc, r0
   2f200:	bl	14610 <__assert_fail@plt>
   2f204:	sub	r3, fp, #130	; 0x82
   2f208:	mov	r1, #4
   2f20c:	mov	r0, r3
   2f210:	bl	2ca88 <flatcc_builder_clear@@Base+0xf8>
   2f214:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   2f218:	mov	r1, r3
   2f21c:	ldr	r0, [fp, #-120]	; 0xffffff88
   2f220:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   2f224:	ldrh	r3, [fp, #-130]	; 0xffffff7e
   2f228:	mov	r2, r3
   2f22c:	ldr	r1, [fp, #-128]	; 0xffffff80
   2f230:	ldr	r0, [fp, #-120]	; 0xffffff88
   2f234:	bl	2d07c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2f238:	str	r0, [fp, #-20]	; 0xffffffec
   2f23c:	ldr	r3, [fp, #-120]	; 0xffffff88
   2f240:	ldr	r3, [r3, #136]	; 0x88
   2f244:	mov	r1, r3
   2f248:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f24c:	ldr	r3, [fp, #-128]	; 0xffffff80
   2f250:	add	r3, r2, r3
   2f254:	sub	r3, r1, r3
   2f258:	sub	r3, r3, #4
   2f25c:	str	r3, [fp, #-24]	; 0xffffffe8
   2f260:	ldr	r3, [fp, #12]
   2f264:	sub	r3, r3, #1
   2f268:	str	r3, [fp, #-28]	; 0xffffffe4
   2f26c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f270:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f274:	sub	r3, r2, r3
   2f278:	str	r3, [fp, #-32]	; 0xffffffe0
   2f27c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f280:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f284:	sub	r2, r2, r3
   2f288:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f28c:	cmp	r2, r3
   2f290:	beq	2f29c <flatcc_builder_create_table@@Base+0x118>
   2f294:	mvn	r3, #0
   2f298:	b	2f474 <flatcc_builder_create_table@@Base+0x2f0>
   2f29c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f2a0:	bl	2ba40 <main@@Base+0xd40>
   2f2a4:	mov	r3, r0
   2f2a8:	str	r3, [fp, #-44]	; 0xffffffd4
   2f2ac:	mov	r3, #0
   2f2b0:	str	r3, [fp, #-16]
   2f2b4:	b	2f32c <flatcc_builder_create_table@@Base+0x1a8>
   2f2b8:	ldr	r3, [fp, #-16]
   2f2bc:	lsl	r3, r3, #1
   2f2c0:	ldr	r2, [fp, #4]
   2f2c4:	add	r3, r2, r3
   2f2c8:	ldrh	r3, [r3]
   2f2cc:	mov	r2, r3
   2f2d0:	ldr	r3, [fp, #-124]	; 0xffffff84
   2f2d4:	add	r3, r2, r3
   2f2d8:	str	r3, [fp, #-36]	; 0xffffffdc
   2f2dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f2e0:	ldr	r2, [r3]
   2f2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f2e8:	sub	r3, r2, r3
   2f2ec:	ldr	r2, [fp, #-16]
   2f2f0:	lsl	r2, r2, #1
   2f2f4:	ldr	r1, [fp, #4]
   2f2f8:	add	r2, r1, r2
   2f2fc:	ldrh	r2, [r2]
   2f300:	sub	r3, r3, r2
   2f304:	sub	r3, r3, #4
   2f308:	str	r3, [fp, #-40]	; 0xffffffd8
   2f30c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f310:	bl	2ba40 <main@@Base+0xd40>
   2f314:	mov	r2, r0
   2f318:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f31c:	str	r2, [r3]
   2f320:	ldr	r3, [fp, #-16]
   2f324:	add	r3, r3, #1
   2f328:	str	r3, [fp, #-16]
   2f32c:	ldr	r2, [fp, #-16]
   2f330:	ldr	r3, [fp, #8]
   2f334:	cmp	r2, r3
   2f338:	blt	2f2b8 <flatcc_builder_create_table@@Base+0x134>
   2f33c:	mov	r3, #0
   2f340:	str	r3, [fp, #-116]	; 0xffffff8c
   2f344:	mov	r3, #0
   2f348:	str	r3, [fp, #-112]	; 0xffffff90
   2f34c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2f350:	add	r3, r3, #4
   2f354:	str	r3, [fp, #-116]	; 0xffffff8c
   2f358:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f35c:	add	r3, r3, #1
   2f360:	lsl	r3, r3, #3
   2f364:	sub	r2, fp, #12
   2f368:	add	r3, r2, r3
   2f36c:	sub	r2, fp, #44	; 0x2c
   2f370:	str	r2, [r3, #-104]	; 0xffffff98
   2f374:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f378:	add	r3, r3, #1
   2f37c:	lsl	r3, r3, #3
   2f380:	sub	r2, fp, #12
   2f384:	add	r3, r2, r3
   2f388:	mov	r2, #4
   2f38c:	str	r2, [r3, #-100]	; 0xffffff9c
   2f390:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f394:	add	r3, r3, #1
   2f398:	str	r3, [fp, #-112]	; 0xffffff90
   2f39c:	ldr	r3, [fp, #-128]	; 0xffffff80
   2f3a0:	cmp	r3, #0
   2f3a4:	beq	2f3fc <flatcc_builder_create_table@@Base+0x278>
   2f3a8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2f3ac:	ldr	r3, [fp, #-128]	; 0xffffff80
   2f3b0:	add	r3, r2, r3
   2f3b4:	str	r3, [fp, #-116]	; 0xffffff8c
   2f3b8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f3bc:	add	r3, r3, #1
   2f3c0:	lsl	r3, r3, #3
   2f3c4:	sub	r2, fp, #12
   2f3c8:	add	r3, r2, r3
   2f3cc:	ldr	r2, [fp, #-124]	; 0xffffff84
   2f3d0:	str	r2, [r3, #-104]	; 0xffffff98
   2f3d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f3d8:	add	r3, r3, #1
   2f3dc:	lsl	r3, r3, #3
   2f3e0:	sub	r2, fp, #12
   2f3e4:	add	r3, r2, r3
   2f3e8:	ldr	r2, [fp, #-128]	; 0xffffff80
   2f3ec:	str	r2, [r3, #-100]	; 0xffffff9c
   2f3f0:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f3f4:	add	r3, r3, #1
   2f3f8:	str	r3, [fp, #-112]	; 0xffffff90
   2f3fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f400:	cmp	r3, #0
   2f404:	beq	2f460 <flatcc_builder_create_table@@Base+0x2dc>
   2f408:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2f40c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f410:	add	r3, r2, r3
   2f414:	str	r3, [fp, #-116]	; 0xffffff8c
   2f418:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f41c:	add	r3, r3, #1
   2f420:	lsl	r3, r3, #3
   2f424:	sub	r2, fp, #12
   2f428:	add	r3, r2, r3
   2f42c:	ldr	r2, [pc, #112]	; 2f4a4 <flatcc_builder_create_table@@Base+0x320>
   2f430:	ldr	r2, [r4, r2]
   2f434:	str	r2, [r3, #-104]	; 0xffffff98
   2f438:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f43c:	add	r3, r3, #1
   2f440:	lsl	r3, r3, #3
   2f444:	sub	r2, fp, #12
   2f448:	add	r3, r2, r3
   2f44c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f450:	str	r2, [r3, #-100]	; 0xffffff9c
   2f454:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f458:	add	r3, r3, #1
   2f45c:	str	r3, [fp, #-112]	; 0xffffff90
   2f460:	sub	r3, fp, #116	; 0x74
   2f464:	mov	r1, r3
   2f468:	ldr	r0, [fp, #-120]	; 0xffffff88
   2f46c:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2f470:	mov	r3, r0
   2f474:	mov	r0, r3
   2f478:	sub	sp, fp, #8
   2f47c:	pop	{r4, fp, pc}
   2f480:	andeq	r2, r3, r4, asr lr
   2f484:	andeq	r0, r2, r8, lsl #4
   2f488:	ldrdeq	r0, [r0], -r5
   2f48c:	andeq	pc, r1, r8, asr fp	; <UNPREDICTABLE>
   2f490:	strdeq	pc, [r1], -r0
   2f494:	ldrdeq	r0, [r2], -r8
   2f498:	ldrdeq	r0, [r0], -fp
   2f49c:	andeq	pc, r1, r8, lsr #22
   2f4a0:	ldrdeq	pc, [r1], -r4
   2f4a4:	andeq	r0, r0, r4, rrx

0002f4a8 <flatcc_builder_check_required_field@@Base>:
   2f4a8:	push	{fp, lr}
   2f4ac:	add	fp, sp, #4
   2f4b0:	sub	sp, sp, #8
   2f4b4:	str	r0, [fp, #-8]
   2f4b8:	mov	r3, r1
   2f4bc:	strh	r3, [fp, #-10]
   2f4c0:	ldr	r3, [fp, #-8]
   2f4c4:	ldr	r3, [r3, #32]
   2f4c8:	ldrh	r3, [r3, #14]
   2f4cc:	cmp	r3, #3
   2f4d0:	beq	2f4f4 <flatcc_builder_check_required_field@@Base+0x4c>
   2f4d4:	ldr	r3, [pc, #100]	; 2f540 <flatcc_builder_check_required_field@@Base+0x98>
   2f4d8:	add	r3, pc, r3
   2f4dc:	ldr	r2, [pc, #96]	; 2f544 <flatcc_builder_check_required_field@@Base+0x9c>
   2f4e0:	ldr	r1, [pc, #96]	; 2f548 <flatcc_builder_check_required_field@@Base+0xa0>
   2f4e4:	add	r1, pc, r1
   2f4e8:	ldr	r0, [pc, #92]	; 2f54c <flatcc_builder_check_required_field@@Base+0xa4>
   2f4ec:	add	r0, pc, r0
   2f4f0:	bl	14610 <__assert_fail@plt>
   2f4f4:	ldr	r3, [fp, #-8]
   2f4f8:	ldrh	r3, [r3, #8]
   2f4fc:	ldrh	r2, [fp, #-10]
   2f500:	cmp	r2, r3
   2f504:	bcs	2f530 <flatcc_builder_check_required_field@@Base+0x88>
   2f508:	ldr	r3, [fp, #-8]
   2f50c:	ldr	r2, [r3, #4]
   2f510:	ldrh	r3, [fp, #-10]
   2f514:	lsl	r3, r3, #1
   2f518:	add	r3, r2, r3
   2f51c:	ldrh	r3, [r3]
   2f520:	cmp	r3, #0
   2f524:	beq	2f530 <flatcc_builder_check_required_field@@Base+0x88>
   2f528:	mov	r3, #1
   2f52c:	b	2f534 <flatcc_builder_check_required_field@@Base+0x8c>
   2f530:	mov	r3, #0
   2f534:	mov	r0, r3
   2f538:	sub	sp, fp, #4
   2f53c:	pop	{fp, pc}
   2f540:	andeq	pc, r1, r4, lsl #30
   2f544:	strdeq	r0, [r0], -r8
   2f548:	andeq	pc, r1, r8, lsr r8	; <UNPREDICTABLE>
   2f54c:	strdeq	pc, [r1], -r0

0002f550 <flatcc_builder_check_union_field@@Base>:
   2f550:	push	{fp, lr}
   2f554:	add	fp, sp, #4
   2f558:	sub	sp, sp, #8
   2f55c:	str	r0, [fp, #-8]
   2f560:	mov	r3, r1
   2f564:	strh	r3, [fp, #-10]
   2f568:	ldr	r3, [fp, #-8]
   2f56c:	ldr	r3, [r3, #32]
   2f570:	ldrh	r3, [r3, #14]
   2f574:	cmp	r3, #3
   2f578:	beq	2f59c <flatcc_builder_check_union_field@@Base+0x4c>
   2f57c:	ldr	r3, [pc, #292]	; 2f6a8 <flatcc_builder_check_union_field@@Base+0x158>
   2f580:	add	r3, pc, r3
   2f584:	ldr	r2, [pc, #288]	; 2f6ac <flatcc_builder_check_union_field@@Base+0x15c>
   2f588:	ldr	r1, [pc, #288]	; 2f6b0 <flatcc_builder_check_union_field@@Base+0x160>
   2f58c:	add	r1, pc, r1
   2f590:	ldr	r0, [pc, #284]	; 2f6b4 <flatcc_builder_check_union_field@@Base+0x164>
   2f594:	add	r0, pc, r0
   2f598:	bl	14610 <__assert_fail@plt>
   2f59c:	ldrh	r3, [fp, #-10]
   2f5a0:	cmp	r3, #0
   2f5a4:	beq	2f5bc <flatcc_builder_check_union_field@@Base+0x6c>
   2f5a8:	ldr	r3, [fp, #-8]
   2f5ac:	ldrh	r3, [r3, #8]
   2f5b0:	ldrh	r2, [fp, #-10]
   2f5b4:	cmp	r2, r3
   2f5b8:	bcc	2f5c4 <flatcc_builder_check_union_field@@Base+0x74>
   2f5bc:	mov	r3, #0
   2f5c0:	b	2f69c <flatcc_builder_check_union_field@@Base+0x14c>
   2f5c4:	ldr	r3, [fp, #-8]
   2f5c8:	ldr	r2, [r3, #4]
   2f5cc:	ldrh	r3, [fp, #-10]
   2f5d0:	sub	r3, r3, #-2147483647	; 0x80000001
   2f5d4:	lsl	r3, r3, #1
   2f5d8:	add	r3, r2, r3
   2f5dc:	ldrh	r3, [r3]
   2f5e0:	cmp	r3, #0
   2f5e4:	bne	2f614 <flatcc_builder_check_union_field@@Base+0xc4>
   2f5e8:	ldr	r3, [fp, #-8]
   2f5ec:	ldr	r2, [r3, #4]
   2f5f0:	ldrh	r3, [fp, #-10]
   2f5f4:	lsl	r3, r3, #1
   2f5f8:	add	r3, r2, r3
   2f5fc:	ldrh	r3, [r3]
   2f600:	cmp	r3, #0
   2f604:	moveq	r3, #1
   2f608:	movne	r3, #0
   2f60c:	uxtb	r3, r3
   2f610:	b	2f69c <flatcc_builder_check_union_field@@Base+0x14c>
   2f614:	ldr	r3, [fp, #-8]
   2f618:	ldr	r3, [r3, #16]
   2f61c:	ldr	r2, [fp, #-8]
   2f620:	ldr	r1, [r2, #4]
   2f624:	ldrh	r2, [fp, #-10]
   2f628:	sub	r2, r2, #-2147483647	; 0x80000001
   2f62c:	lsl	r2, r2, #1
   2f630:	add	r2, r1, r2
   2f634:	ldrh	r2, [r2]
   2f638:	add	r3, r3, r2
   2f63c:	ldrb	r3, [r3]
   2f640:	cmp	r3, #0
   2f644:	beq	2f674 <flatcc_builder_check_union_field@@Base+0x124>
   2f648:	ldr	r3, [fp, #-8]
   2f64c:	ldr	r2, [r3, #4]
   2f650:	ldrh	r3, [fp, #-10]
   2f654:	lsl	r3, r3, #1
   2f658:	add	r3, r2, r3
   2f65c:	ldrh	r3, [r3]
   2f660:	cmp	r3, #0
   2f664:	movne	r3, #1
   2f668:	moveq	r3, #0
   2f66c:	uxtb	r3, r3
   2f670:	b	2f69c <flatcc_builder_check_union_field@@Base+0x14c>
   2f674:	ldr	r3, [fp, #-8]
   2f678:	ldr	r2, [r3, #4]
   2f67c:	ldrh	r3, [fp, #-10]
   2f680:	lsl	r3, r3, #1
   2f684:	add	r3, r2, r3
   2f688:	ldrh	r3, [r3]
   2f68c:	cmp	r3, #0
   2f690:	moveq	r3, #1
   2f694:	movne	r3, #0
   2f698:	uxtb	r3, r3
   2f69c:	mov	r0, r3
   2f6a0:	sub	sp, fp, #4
   2f6a4:	pop	{fp, pc}
   2f6a8:	andeq	pc, r1, r0, lsl #29
   2f6ac:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2f6b0:	muleq	r1, r0, r7
   2f6b4:	andeq	pc, r1, r8, asr #20

0002f6b8 <flatcc_builder_check_required@@Base>:
   2f6b8:	push	{fp, lr}
   2f6bc:	add	fp, sp, #4
   2f6c0:	sub	sp, sp, #24
   2f6c4:	str	r0, [fp, #-16]
   2f6c8:	str	r1, [fp, #-20]	; 0xffffffec
   2f6cc:	str	r2, [fp, #-24]	; 0xffffffe8
   2f6d0:	ldr	r3, [fp, #-16]
   2f6d4:	ldr	r3, [r3, #32]
   2f6d8:	ldrh	r3, [r3, #14]
   2f6dc:	cmp	r3, #3
   2f6e0:	beq	2f704 <flatcc_builder_check_required@@Base+0x4c>
   2f6e4:	ldr	r3, [pc, #168]	; 2f794 <flatcc_builder_check_required@@Base+0xdc>
   2f6e8:	add	r3, pc, r3
   2f6ec:	ldr	r2, [pc, #164]	; 2f798 <flatcc_builder_check_required@@Base+0xe0>
   2f6f0:	ldr	r1, [pc, #164]	; 2f79c <flatcc_builder_check_required@@Base+0xe4>
   2f6f4:	add	r1, pc, r1
   2f6f8:	ldr	r0, [pc, #160]	; 2f7a0 <flatcc_builder_check_required@@Base+0xe8>
   2f6fc:	add	r0, pc, r0
   2f700:	bl	14610 <__assert_fail@plt>
   2f704:	ldr	r3, [fp, #-16]
   2f708:	ldrh	r3, [r3, #8]
   2f70c:	mov	r2, r3
   2f710:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f714:	cmp	r2, r3
   2f718:	bge	2f724 <flatcc_builder_check_required@@Base+0x6c>
   2f71c:	mov	r3, #0
   2f720:	b	2f788 <flatcc_builder_check_required@@Base+0xd0>
   2f724:	mov	r3, #0
   2f728:	str	r3, [fp, #-8]
   2f72c:	b	2f774 <flatcc_builder_check_required@@Base+0xbc>
   2f730:	ldr	r3, [fp, #-16]
   2f734:	ldr	r2, [r3, #4]
   2f738:	ldr	r3, [fp, #-8]
   2f73c:	lsl	r3, r3, #1
   2f740:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f744:	add	r3, r1, r3
   2f748:	ldrh	r3, [r3]
   2f74c:	lsl	r3, r3, #1
   2f750:	add	r3, r2, r3
   2f754:	ldrh	r3, [r3]
   2f758:	cmp	r3, #0
   2f75c:	bne	2f768 <flatcc_builder_check_required@@Base+0xb0>
   2f760:	mov	r3, #0
   2f764:	b	2f788 <flatcc_builder_check_required@@Base+0xd0>
   2f768:	ldr	r3, [fp, #-8]
   2f76c:	add	r3, r3, #1
   2f770:	str	r3, [fp, #-8]
   2f774:	ldr	r2, [fp, #-8]
   2f778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f77c:	cmp	r2, r3
   2f780:	blt	2f730 <flatcc_builder_check_required@@Base+0x78>
   2f784:	mov	r3, #1
   2f788:	mov	r0, r3
   2f78c:	sub	sp, fp, #4
   2f790:	pop	{fp, pc}
   2f794:	andeq	pc, r1, ip, lsr sp	; <UNPREDICTABLE>
   2f798:	andeq	r0, r0, r1, lsl r5
   2f79c:	andeq	pc, r1, r8, lsr #12
   2f7a0:	andeq	pc, r1, r0, ror #17

0002f7a4 <flatcc_builder_end_table@@Base>:
   2f7a4:	push	{fp, lr}
   2f7a8:	add	fp, sp, #4
   2f7ac:	sub	sp, sp, #48	; 0x30
   2f7b0:	str	r0, [fp, #-32]	; 0xffffffe0
   2f7b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f7b8:	ldr	r3, [r3, #32]
   2f7bc:	ldrh	r3, [r3, #14]
   2f7c0:	cmp	r3, #3
   2f7c4:	beq	2f7e8 <flatcc_builder_end_table@@Base+0x44>
   2f7c8:	ldr	r3, [pc, #508]	; 2f9cc <flatcc_builder_end_table@@Base+0x228>
   2f7cc:	add	r3, pc, r3
   2f7d0:	ldr	r2, [pc, #504]	; 2f9d0 <flatcc_builder_end_table@@Base+0x22c>
   2f7d4:	ldr	r1, [pc, #504]	; 2f9d4 <flatcc_builder_end_table@@Base+0x230>
   2f7d8:	add	r1, pc, r1
   2f7dc:	ldr	r0, [pc, #500]	; 2f9d8 <flatcc_builder_end_table@@Base+0x234>
   2f7e0:	add	r0, pc, r0
   2f7e4:	bl	14610 <__assert_fail@plt>
   2f7e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f7ec:	ldr	r3, [r3, #4]
   2f7f0:	sub	r3, r3, #4
   2f7f4:	str	r3, [fp, #-8]
   2f7f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f7fc:	ldrh	r3, [r3, #8]
   2f800:	add	r3, r3, #2
   2f804:	uxth	r3, r3
   2f808:	lsl	r3, r3, #1
   2f80c:	strh	r3, [fp, #-10]
   2f810:	ldr	r3, [fp, #-8]
   2f814:	ldrh	r2, [fp, #-10]
   2f818:	strh	r2, [r3]
   2f81c:	ldr	r3, [fp, #-8]
   2f820:	add	r3, r3, #2
   2f824:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f828:	ldr	r2, [r2, #20]
   2f82c:	uxth	r2, r2
   2f830:	add	r2, r2, #4
   2f834:	uxth	r2, r2
   2f838:	strh	r2, [r3]
   2f83c:	ldr	r3, [fp, #-8]
   2f840:	ldrh	r3, [r3]
   2f844:	mov	r2, r3
   2f848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f84c:	ldr	r3, [r3, #12]
   2f850:	eor	r3, r3, r2
   2f854:	ldr	r2, [pc, #384]	; 2f9dc <flatcc_builder_end_table@@Base+0x238>
   2f858:	mul	r3, r2, r3
   2f85c:	ldr	r2, [fp, #-8]
   2f860:	add	r2, r2, #2
   2f864:	ldrh	r2, [r2]
   2f868:	eor	r3, r3, r2
   2f86c:	ldr	r2, [pc, #360]	; 2f9dc <flatcc_builder_end_table@@Base+0x238>
   2f870:	mul	r2, r2, r3
   2f874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f878:	str	r2, [r3, #12]
   2f87c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f880:	ldr	r3, [r3, #12]
   2f884:	ldrh	r2, [fp, #-10]
   2f888:	ldr	r1, [fp, #-8]
   2f88c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f890:	bl	2ee74 <flatcc_builder_create_cached_vtable@@Base>
   2f894:	str	r0, [fp, #-16]
   2f898:	ldr	r3, [fp, #-16]
   2f89c:	cmp	r3, #0
   2f8a0:	bne	2f8ac <flatcc_builder_end_table@@Base+0x108>
   2f8a4:	mov	r3, #0
   2f8a8:	b	2f9c0 <flatcc_builder_end_table@@Base+0x21c>
   2f8ac:	ldrh	r3, [fp, #-10]
   2f8b0:	mov	r2, r3
   2f8b4:	mov	r1, #0
   2f8b8:	ldr	r0, [fp, #-8]
   2f8bc:	bl	145bc <memset@plt>
   2f8c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8c4:	ldr	r2, [r3, #76]	; 0x4c
   2f8c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8cc:	ldr	r3, [r3, #32]
   2f8d0:	ldr	r3, [r3, #20]
   2f8d4:	add	r3, r2, r3
   2f8d8:	str	r3, [fp, #-20]	; 0xffffffec
   2f8dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8e0:	ldr	r3, [r3]
   2f8e4:	mov	r2, r3
   2f8e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f8ec:	sub	r3, r2, r3
   2f8f0:	asr	r3, r3, #1
   2f8f4:	str	r3, [fp, #-24]	; 0xffffffe8
   2f8f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f8fc:	ldr	r1, [r3, #16]
   2f900:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f904:	ldr	r2, [r3, #20]
   2f908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f90c:	ldrh	r0, [r3, #130]	; 0x82
   2f910:	ldr	r3, [fp, #-16]
   2f914:	str	r3, [sp, #8]
   2f918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f91c:	str	r3, [sp, #4]
   2f920:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f924:	str	r3, [sp]
   2f928:	mov	r3, r0
   2f92c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f930:	bl	2f184 <flatcc_builder_create_table@@Base>
   2f934:	str	r0, [fp, #-28]	; 0xffffffe4
   2f938:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f93c:	cmp	r3, #0
   2f940:	bne	2f94c <flatcc_builder_end_table@@Base+0x1a8>
   2f944:	mov	r3, #0
   2f948:	b	2f9c0 <flatcc_builder_end_table@@Base+0x21c>
   2f94c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f950:	ldr	r3, [r3, #32]
   2f954:	ldr	r2, [r3, #24]
   2f958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f95c:	str	r2, [r3, #12]
   2f960:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f964:	ldr	r3, [r3, #32]
   2f968:	ldrh	r2, [r3, #28]
   2f96c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f970:	strh	r2, [r3, #8]
   2f974:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f978:	ldr	r2, [r3, #52]	; 0x34
   2f97c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f980:	ldr	r3, [r3, #32]
   2f984:	ldr	r3, [r3, #16]
   2f988:	add	r2, r2, r3
   2f98c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f990:	str	r2, [r3, #4]
   2f994:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f998:	ldr	r2, [r3, #76]	; 0x4c
   2f99c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f9a0:	ldr	r3, [r3, #32]
   2f9a4:	ldr	r3, [r3, #20]
   2f9a8:	add	r2, r2, r3
   2f9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f9b0:	str	r2, [r3]
   2f9b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f9b8:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2f9bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f9c0:	mov	r0, r3
   2f9c4:	sub	sp, fp, #4
   2f9c8:	pop	{fp, pc}
   2f9cc:	andeq	pc, r1, r8, ror ip	; <UNPREDICTABLE>
   2f9d0:	andeq	r0, r0, r5, lsr #10
   2f9d4:	andeq	pc, r1, r4, asr #10
   2f9d8:	strdeq	pc, [r1], -ip
   2f9dc:			; <UNDEFINED> instruction: 0x9e3779b1

0002f9e0 <flatcc_builder_create_vector@@Base>:
   2f9e0:	push	{r4, fp, lr}
   2f9e4:	add	fp, sp, #8
   2f9e8:	sub	sp, sp, #108	; 0x6c
   2f9ec:	str	r0, [fp, #-104]	; 0xffffff98
   2f9f0:	str	r1, [fp, #-108]	; 0xffffff94
   2f9f4:	str	r2, [fp, #-112]	; 0xffffff90
   2f9f8:	str	r3, [fp, #-116]	; 0xffffff8c
   2f9fc:	ldr	r4, [pc, #484]	; 2fbe8 <flatcc_builder_create_vector@@Base+0x208>
   2fa00:	add	r4, pc, r4
   2fa04:	ldr	r2, [fp, #-112]	; 0xffffff90
   2fa08:	ldr	r3, [fp, #8]
   2fa0c:	cmp	r2, r3
   2fa10:	bls	2fa4c <flatcc_builder_create_vector@@Base+0x6c>
   2fa14:	ldr	r2, [fp, #-112]	; 0xffffff90
   2fa18:	ldr	r3, [fp, #8]
   2fa1c:	cmp	r2, r3
   2fa20:	bls	2fa44 <flatcc_builder_create_vector@@Base+0x64>
   2fa24:	ldr	r3, [pc, #448]	; 2fbec <flatcc_builder_create_vector@@Base+0x20c>
   2fa28:	add	r3, pc, r3
   2fa2c:	ldr	r2, [pc, #444]	; 2fbf0 <flatcc_builder_create_vector@@Base+0x210>
   2fa30:	ldr	r1, [pc, #444]	; 2fbf4 <flatcc_builder_create_vector@@Base+0x214>
   2fa34:	add	r1, pc, r1
   2fa38:	ldr	r0, [pc, #440]	; 2fbf8 <flatcc_builder_create_vector@@Base+0x218>
   2fa3c:	add	r0, pc, r0
   2fa40:	bl	14610 <__assert_fail@plt>
   2fa44:	mov	r3, #0
   2fa48:	b	2fbdc <flatcc_builder_create_vector@@Base+0x1fc>
   2fa4c:	mov	r1, #4
   2fa50:	add	r3, fp, #4
   2fa54:	mov	r0, r3
   2fa58:	bl	2ca88 <flatcc_builder_clear@@Base+0xf8>
   2fa5c:	ldrh	r3, [fp, #4]
   2fa60:	mov	r1, r3
   2fa64:	ldr	r0, [fp, #-104]	; 0xffffff98
   2fa68:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   2fa6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   2fa70:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2fa74:	mul	r3, r2, r3
   2fa78:	str	r3, [fp, #-16]
   2fa7c:	ldr	r0, [fp, #-112]	; 0xffffff90
   2fa80:	bl	2ba40 <main@@Base+0xd40>
   2fa84:	mov	r3, r0
   2fa88:	str	r3, [fp, #-24]	; 0xffffffe8
   2fa8c:	ldrh	r3, [fp, #4]
   2fa90:	mov	r2, r3
   2fa94:	ldr	r1, [fp, #-16]
   2fa98:	ldr	r0, [fp, #-104]	; 0xffffff98
   2fa9c:	bl	2d07c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2faa0:	str	r0, [fp, #-20]	; 0xffffffec
   2faa4:	mov	r3, #0
   2faa8:	str	r3, [fp, #-96]	; 0xffffffa0
   2faac:	mov	r3, #0
   2fab0:	str	r3, [fp, #-92]	; 0xffffffa4
   2fab4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2fab8:	add	r3, r3, #4
   2fabc:	str	r3, [fp, #-96]	; 0xffffffa0
   2fac0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fac4:	add	r3, r3, #1
   2fac8:	lsl	r3, r3, #3
   2facc:	sub	r2, fp, #12
   2fad0:	add	r3, r2, r3
   2fad4:	sub	r2, fp, #24
   2fad8:	str	r2, [r3, #-84]	; 0xffffffac
   2fadc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fae0:	add	r3, r3, #1
   2fae4:	lsl	r3, r3, #3
   2fae8:	sub	r2, fp, #12
   2faec:	add	r3, r2, r3
   2faf0:	mov	r2, #4
   2faf4:	str	r2, [r3, #-80]	; 0xffffffb0
   2faf8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fafc:	add	r3, r3, #1
   2fb00:	str	r3, [fp, #-92]	; 0xffffffa4
   2fb04:	ldr	r3, [fp, #-16]
   2fb08:	cmp	r3, #0
   2fb0c:	beq	2fb64 <flatcc_builder_create_vector@@Base+0x184>
   2fb10:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2fb14:	ldr	r3, [fp, #-16]
   2fb18:	add	r3, r2, r3
   2fb1c:	str	r3, [fp, #-96]	; 0xffffffa0
   2fb20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fb24:	add	r3, r3, #1
   2fb28:	lsl	r3, r3, #3
   2fb2c:	sub	r2, fp, #12
   2fb30:	add	r3, r2, r3
   2fb34:	ldr	r2, [fp, #-108]	; 0xffffff94
   2fb38:	str	r2, [r3, #-84]	; 0xffffffac
   2fb3c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fb40:	add	r3, r3, #1
   2fb44:	lsl	r3, r3, #3
   2fb48:	sub	r2, fp, #12
   2fb4c:	add	r3, r2, r3
   2fb50:	ldr	r2, [fp, #-16]
   2fb54:	str	r2, [r3, #-80]	; 0xffffffb0
   2fb58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fb5c:	add	r3, r3, #1
   2fb60:	str	r3, [fp, #-92]	; 0xffffffa4
   2fb64:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fb68:	cmp	r3, #0
   2fb6c:	beq	2fbc8 <flatcc_builder_create_vector@@Base+0x1e8>
   2fb70:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2fb74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fb78:	add	r3, r2, r3
   2fb7c:	str	r3, [fp, #-96]	; 0xffffffa0
   2fb80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fb84:	add	r3, r3, #1
   2fb88:	lsl	r3, r3, #3
   2fb8c:	sub	r2, fp, #12
   2fb90:	add	r3, r2, r3
   2fb94:	ldr	r2, [pc, #96]	; 2fbfc <flatcc_builder_create_vector@@Base+0x21c>
   2fb98:	ldr	r2, [r4, r2]
   2fb9c:	str	r2, [r3, #-84]	; 0xffffffac
   2fba0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fba4:	add	r3, r3, #1
   2fba8:	lsl	r3, r3, #3
   2fbac:	sub	r2, fp, #12
   2fbb0:	add	r3, r2, r3
   2fbb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fbb8:	str	r2, [r3, #-80]	; 0xffffffb0
   2fbbc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2fbc0:	add	r3, r3, #1
   2fbc4:	str	r3, [fp, #-92]	; 0xffffffa4
   2fbc8:	sub	r3, fp, #96	; 0x60
   2fbcc:	mov	r1, r3
   2fbd0:	ldr	r0, [fp, #-104]	; 0xffffff98
   2fbd4:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   2fbd8:	mov	r3, r0
   2fbdc:	mov	r0, r3
   2fbe0:	sub	sp, fp, #8
   2fbe4:	pop	{r4, fp, pc}
   2fbe8:	strdeq	r2, [r3], -r8
   2fbec:	andeq	pc, r1, r8, lsr sl	; <UNPREDICTABLE>
   2fbf0:	andeq	r0, r0, r5, asr r5
   2fbf4:	andeq	pc, r1, r8, ror #5
   2fbf8:	andeq	pc, r1, ip, asr #11
   2fbfc:	andeq	r0, r0, r4, rrx

0002fc00 <flatcc_builder_end_vector@@Base>:
   2fc00:	push	{fp, lr}
   2fc04:	add	fp, sp, #4
   2fc08:	sub	sp, sp, #24
   2fc0c:	str	r0, [fp, #-16]
   2fc10:	ldr	r3, [fp, #-16]
   2fc14:	ldr	r3, [r3, #32]
   2fc18:	ldrh	r3, [r3, #14]
   2fc1c:	cmp	r3, #4
   2fc20:	beq	2fc44 <flatcc_builder_end_vector@@Base+0x44>
   2fc24:	ldr	r3, [pc, #148]	; 2fcc0 <flatcc_builder_end_vector@@Base+0xc0>
   2fc28:	add	r3, pc, r3
   2fc2c:	ldr	r2, [pc, #144]	; 2fcc4 <flatcc_builder_end_vector@@Base+0xc4>
   2fc30:	ldr	r1, [pc, #144]	; 2fcc8 <flatcc_builder_end_vector@@Base+0xc8>
   2fc34:	add	r1, pc, r1
   2fc38:	ldr	r0, [pc, #140]	; 2fccc <flatcc_builder_end_vector@@Base+0xcc>
   2fc3c:	add	r0, pc, r0
   2fc40:	bl	14610 <__assert_fail@plt>
   2fc44:	ldr	r3, [fp, #-16]
   2fc48:	ldr	r1, [r3, #16]
   2fc4c:	ldr	r3, [fp, #-16]
   2fc50:	ldr	r3, [r3, #32]
   2fc54:	ldr	r0, [r3, #20]
   2fc58:	ldr	r3, [fp, #-16]
   2fc5c:	ldr	r3, [r3, #32]
   2fc60:	ldr	ip, [r3, #16]
   2fc64:	ldr	r3, [fp, #-16]
   2fc68:	ldrh	r3, [r3, #130]	; 0x82
   2fc6c:	ldr	r2, [fp, #-16]
   2fc70:	ldr	r2, [r2, #32]
   2fc74:	ldr	r2, [r2, #24]
   2fc78:	str	r2, [sp, #4]
   2fc7c:	str	r3, [sp]
   2fc80:	mov	r3, ip
   2fc84:	mov	r2, r0
   2fc88:	ldr	r0, [fp, #-16]
   2fc8c:	bl	2f9e0 <flatcc_builder_create_vector@@Base>
   2fc90:	str	r0, [fp, #-8]
   2fc94:	ldr	r3, [fp, #-8]
   2fc98:	cmp	r3, #0
   2fc9c:	bne	2fca8 <flatcc_builder_end_vector@@Base+0xa8>
   2fca0:	mov	r3, #0
   2fca4:	b	2fcb4 <flatcc_builder_end_vector@@Base+0xb4>
   2fca8:	ldr	r0, [fp, #-16]
   2fcac:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   2fcb0:	ldr	r3, [fp, #-8]
   2fcb4:	mov	r0, r3
   2fcb8:	sub	sp, fp, #4
   2fcbc:	pop	{fp, pc}
   2fcc0:	andeq	pc, r1, r8, asr r8	; <UNPREDICTABLE>
   2fcc4:	andeq	r0, r0, r8, ror r5
   2fcc8:	andeq	pc, r1, r8, ror #1
   2fccc:	andeq	pc, r1, r4, lsr #4

0002fcd0 <flatcc_builder_vector_count@@Base>:
   2fcd0:	push	{fp}		; (str fp, [sp, #-4]!)
   2fcd4:	add	fp, sp, #0
   2fcd8:	sub	sp, sp, #12
   2fcdc:	str	r0, [fp, #-8]
   2fce0:	ldr	r3, [fp, #-8]
   2fce4:	ldr	r3, [r3, #32]
   2fce8:	ldr	r3, [r3, #20]
   2fcec:	mov	r0, r3
   2fcf0:	add	sp, fp, #0
   2fcf4:	pop	{fp}		; (ldr fp, [sp], #4)
   2fcf8:	bx	lr

0002fcfc <flatcc_builder_vector_edit@@Base>:
   2fcfc:	push	{fp}		; (str fp, [sp, #-4]!)
   2fd00:	add	fp, sp, #0
   2fd04:	sub	sp, sp, #12
   2fd08:	str	r0, [fp, #-8]
   2fd0c:	ldr	r3, [fp, #-8]
   2fd10:	ldr	r3, [r3, #16]
   2fd14:	mov	r0, r3
   2fd18:	add	sp, fp, #0
   2fd1c:	pop	{fp}		; (ldr fp, [sp], #4)
   2fd20:	bx	lr
   2fd24:	push	{r4, fp, lr}
   2fd28:	add	fp, sp, #8
   2fd2c:	sub	sp, sp, #116	; 0x74
   2fd30:	str	r0, [fp, #-112]	; 0xffffff90
   2fd34:	str	r1, [fp, #-116]	; 0xffffff8c
   2fd38:	str	r2, [fp, #-120]	; 0xffffff88
   2fd3c:	str	r3, [fp, #-124]	; 0xffffff84
   2fd40:	ldr	r4, [pc, #748]	; 30034 <flatcc_builder_vector_edit@@Base+0x338>
   2fd44:	add	r4, pc, r4
   2fd48:	ldr	r3, [fp, #-120]	; 0xffffff88
   2fd4c:	cmn	r3, #-1073741823	; 0xc0000001
   2fd50:	bls	2fd5c <flatcc_builder_vector_edit@@Base+0x60>
   2fd54:	mov	r3, #0
   2fd58:	b	30028 <flatcc_builder_vector_edit@@Base+0x32c>
   2fd5c:	mov	r1, #4
   2fd60:	ldr	r0, [fp, #-112]	; 0xffffff90
   2fd64:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   2fd68:	ldr	r3, [fp, #-120]	; 0xffffff88
   2fd6c:	lsl	r3, r3, #2
   2fd70:	str	r3, [fp, #-20]	; 0xffffffec
   2fd74:	ldr	r0, [fp, #-120]	; 0xffffff88
   2fd78:	bl	2ba40 <main@@Base+0xd40>
   2fd7c:	mov	r3, r0
   2fd80:	str	r3, [fp, #-36]	; 0xffffffdc
   2fd84:	mov	r2, #4
   2fd88:	ldr	r1, [fp, #-20]	; 0xffffffec
   2fd8c:	ldr	r0, [fp, #-112]	; 0xffffff90
   2fd90:	bl	2d07c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   2fd94:	str	r0, [fp, #-24]	; 0xffffffe8
   2fd98:	mov	r3, #0
   2fd9c:	str	r3, [fp, #-108]	; 0xffffff94
   2fda0:	mov	r3, #0
   2fda4:	str	r3, [fp, #-104]	; 0xffffff98
   2fda8:	ldr	r3, [fp, #-108]	; 0xffffff94
   2fdac:	add	r3, r3, #4
   2fdb0:	str	r3, [fp, #-108]	; 0xffffff94
   2fdb4:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fdb8:	add	r3, r3, #1
   2fdbc:	lsl	r3, r3, #3
   2fdc0:	sub	r2, fp, #12
   2fdc4:	add	r3, r2, r3
   2fdc8:	sub	r2, fp, #36	; 0x24
   2fdcc:	str	r2, [r3, #-96]	; 0xffffffa0
   2fdd0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fdd4:	add	r3, r3, #1
   2fdd8:	lsl	r3, r3, #3
   2fddc:	sub	r2, fp, #12
   2fde0:	add	r3, r2, r3
   2fde4:	mov	r2, #4
   2fde8:	str	r2, [r3, #-92]	; 0xffffffa4
   2fdec:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fdf0:	add	r3, r3, #1
   2fdf4:	str	r3, [fp, #-104]	; 0xffffff98
   2fdf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fdfc:	cmp	r3, #0
   2fe00:	beq	2fe58 <flatcc_builder_vector_edit@@Base+0x15c>
   2fe04:	ldr	r2, [fp, #-108]	; 0xffffff94
   2fe08:	ldr	r3, [fp, #-20]	; 0xffffffec
   2fe0c:	add	r3, r2, r3
   2fe10:	str	r3, [fp, #-108]	; 0xffffff94
   2fe14:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fe18:	add	r3, r3, #1
   2fe1c:	lsl	r3, r3, #3
   2fe20:	sub	r2, fp, #12
   2fe24:	add	r3, r2, r3
   2fe28:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2fe2c:	str	r2, [r3, #-96]	; 0xffffffa0
   2fe30:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fe34:	add	r3, r3, #1
   2fe38:	lsl	r3, r3, #3
   2fe3c:	sub	r2, fp, #12
   2fe40:	add	r3, r2, r3
   2fe44:	ldr	r2, [fp, #-20]	; 0xffffffec
   2fe48:	str	r2, [r3, #-92]	; 0xffffffa4
   2fe4c:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fe50:	add	r3, r3, #1
   2fe54:	str	r3, [fp, #-104]	; 0xffffff98
   2fe58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe5c:	cmp	r3, #0
   2fe60:	beq	2febc <flatcc_builder_vector_edit@@Base+0x1c0>
   2fe64:	ldr	r2, [fp, #-108]	; 0xffffff94
   2fe68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe6c:	add	r3, r2, r3
   2fe70:	str	r3, [fp, #-108]	; 0xffffff94
   2fe74:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fe78:	add	r3, r3, #1
   2fe7c:	lsl	r3, r3, #3
   2fe80:	sub	r2, fp, #12
   2fe84:	add	r3, r2, r3
   2fe88:	ldr	r2, [pc, #424]	; 30038 <flatcc_builder_vector_edit@@Base+0x33c>
   2fe8c:	ldr	r2, [r4, r2]
   2fe90:	str	r2, [r3, #-96]	; 0xffffffa0
   2fe94:	ldr	r3, [fp, #-104]	; 0xffffff98
   2fe98:	add	r3, r3, #1
   2fe9c:	lsl	r3, r3, #3
   2fea0:	sub	r2, fp, #12
   2fea4:	add	r3, r2, r3
   2fea8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2feac:	str	r2, [r3, #-92]	; 0xffffffa4
   2feb0:	ldr	r3, [fp, #-104]	; 0xffffff98
   2feb4:	add	r3, r3, #1
   2feb8:	str	r3, [fp, #-104]	; 0xffffff98
   2febc:	ldr	r3, [fp, #-112]	; 0xffffff90
   2fec0:	ldr	r3, [r3, #136]	; 0x88
   2fec4:	mov	r2, r3
   2fec8:	ldr	r3, [fp, #-108]	; 0xffffff94
   2fecc:	sub	r3, r2, r3
   2fed0:	str	r3, [fp, #-28]	; 0xffffffe4
   2fed4:	mov	r3, #0
   2fed8:	str	r3, [fp, #-16]
   2fedc:	b	30004 <flatcc_builder_vector_edit@@Base+0x308>
   2fee0:	ldr	r3, [fp, #-16]
   2fee4:	lsl	r3, r3, #2
   2fee8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2feec:	add	r3, r2, r3
   2fef0:	ldr	r3, [r3]
   2fef4:	cmp	r3, #0
   2fef8:	beq	2ff94 <flatcc_builder_vector_edit@@Base+0x298>
   2fefc:	ldr	r3, [fp, #-16]
   2ff00:	lsl	r3, r3, #2
   2ff04:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2ff08:	add	r3, r2, r3
   2ff0c:	ldr	r3, [r3]
   2ff10:	mov	r2, r3
   2ff14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ff18:	sub	r2, r2, r3
   2ff1c:	ldr	r3, [fp, #-16]
   2ff20:	lsl	r3, r3, #2
   2ff24:	sub	r3, r2, r3
   2ff28:	sub	r3, r3, #4
   2ff2c:	str	r3, [fp, #-32]	; 0xffffffe0
   2ff30:	ldr	r3, [fp, #-16]
   2ff34:	lsl	r3, r3, #2
   2ff38:	ldr	r2, [fp, #-116]	; 0xffffff8c
   2ff3c:	add	r4, r2, r3
   2ff40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ff44:	bl	2ba40 <main@@Base+0xd40>
   2ff48:	mov	r3, r0
   2ff4c:	str	r3, [r4]
   2ff50:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ff54:	cmp	r3, #0
   2ff58:	beq	2fff8 <flatcc_builder_vector_edit@@Base+0x2fc>
   2ff5c:	ldr	r2, [fp, #-124]	; 0xffffff84
   2ff60:	ldr	r3, [fp, #-16]
   2ff64:	add	r3, r2, r3
   2ff68:	ldrb	r3, [r3]
   2ff6c:	cmp	r3, #0
   2ff70:	bne	2fff8 <flatcc_builder_vector_edit@@Base+0x2fc>
   2ff74:	ldr	r3, [pc, #192]	; 3003c <flatcc_builder_vector_edit@@Base+0x340>
   2ff78:	add	r3, pc, r3
   2ff7c:	ldr	r2, [pc, #188]	; 30040 <flatcc_builder_vector_edit@@Base+0x344>
   2ff80:	ldr	r1, [pc, #188]	; 30044 <flatcc_builder_vector_edit@@Base+0x348>
   2ff84:	add	r1, pc, r1
   2ff88:	ldr	r0, [pc, #184]	; 30048 <flatcc_builder_vector_edit@@Base+0x34c>
   2ff8c:	add	r0, pc, r0
   2ff90:	bl	14610 <__assert_fail@plt>
   2ff94:	ldr	r3, [fp, #-124]	; 0xffffff84
   2ff98:	cmp	r3, #0
   2ff9c:	beq	2ffd8 <flatcc_builder_vector_edit@@Base+0x2dc>
   2ffa0:	ldr	r2, [fp, #-124]	; 0xffffff84
   2ffa4:	ldr	r3, [fp, #-16]
   2ffa8:	add	r3, r2, r3
   2ffac:	ldrb	r3, [r3]
   2ffb0:	cmp	r3, #0
   2ffb4:	beq	2fff8 <flatcc_builder_vector_edit@@Base+0x2fc>
   2ffb8:	ldr	r3, [pc, #140]	; 3004c <flatcc_builder_vector_edit@@Base+0x350>
   2ffbc:	add	r3, pc, r3
   2ffc0:	ldr	r2, [pc, #136]	; 30050 <flatcc_builder_vector_edit@@Base+0x354>
   2ffc4:	ldr	r1, [pc, #136]	; 30054 <flatcc_builder_vector_edit@@Base+0x358>
   2ffc8:	add	r1, pc, r1
   2ffcc:	ldr	r0, [pc, #132]	; 30058 <flatcc_builder_vector_edit@@Base+0x35c>
   2ffd0:	add	r0, pc, r0
   2ffd4:	bl	14610 <__assert_fail@plt>
   2ffd8:	ldr	r3, [pc, #124]	; 3005c <flatcc_builder_vector_edit@@Base+0x360>
   2ffdc:	add	r3, pc, r3
   2ffe0:	ldr	r2, [pc, #120]	; 30060 <flatcc_builder_vector_edit@@Base+0x364>
   2ffe4:	ldr	r1, [pc, #120]	; 30064 <flatcc_builder_vector_edit@@Base+0x368>
   2ffe8:	add	r1, pc, r1
   2ffec:	ldr	r0, [pc, #116]	; 30068 <flatcc_builder_vector_edit@@Base+0x36c>
   2fff0:	add	r0, pc, r0
   2fff4:	bl	14610 <__assert_fail@plt>
   2fff8:	ldr	r3, [fp, #-16]
   2fffc:	add	r3, r3, #1
   30000:	str	r3, [fp, #-16]
   30004:	ldr	r2, [fp, #-16]
   30008:	ldr	r3, [fp, #-120]	; 0xffffff88
   3000c:	cmp	r2, r3
   30010:	bcc	2fee0 <flatcc_builder_vector_edit@@Base+0x1e4>
   30014:	sub	r3, fp, #108	; 0x6c
   30018:	mov	r1, r3
   3001c:	ldr	r0, [fp, #-112]	; 0xffffff90
   30020:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   30024:	mov	r3, r0
   30028:	mov	r0, r3
   3002c:	sub	sp, fp, #8
   30030:	pop	{r4, fp, pc}
   30034:			; <UNDEFINED> instruction: 0x000322b4
   30038:	andeq	r0, r0, r4, rrx
   3003c:	andeq	pc, r1, r4, lsr #10
   30040:			; <UNDEFINED> instruction: 0x000005b1
   30044:	muleq	r1, r8, sp
   30048:	muleq	r1, r0, r0
   3004c:	andeq	pc, r1, r0, ror #9
   30050:			; <UNDEFINED> instruction: 0x000005b5
   30054:	andeq	lr, r1, r4, asr sp
   30058:	andeq	pc, r1, ip, asr r0	; <UNPREDICTABLE>
   3005c:	andeq	pc, r1, r0, asr #9
   30060:			; <UNDEFINED> instruction: 0x000005b7
   30064:	andeq	lr, r1, r4, lsr sp
   30068:	andeq	lr, r1, ip, lsl #27

0003006c <flatcc_builder_create_offset_vector_direct@@Base>:
   3006c:	push	{fp, lr}
   30070:	add	fp, sp, #4
   30074:	sub	sp, sp, #16
   30078:	str	r0, [fp, #-8]
   3007c:	str	r1, [fp, #-12]
   30080:	str	r2, [fp, #-16]
   30084:	mov	r3, #0
   30088:	ldr	r2, [fp, #-16]
   3008c:	ldr	r1, [fp, #-12]
   30090:	ldr	r0, [fp, #-8]
   30094:	bl	2fd24 <flatcc_builder_vector_edit@@Base+0x28>
   30098:	mov	r3, r0
   3009c:	mov	r0, r3
   300a0:	sub	sp, fp, #4
   300a4:	pop	{fp, pc}

000300a8 <flatcc_builder_end_offset_vector@@Base>:
   300a8:	push	{fp, lr}
   300ac:	add	fp, sp, #4
   300b0:	sub	sp, sp, #16
   300b4:	str	r0, [fp, #-16]
   300b8:	ldr	r3, [fp, #-16]
   300bc:	ldr	r3, [r3, #32]
   300c0:	ldrh	r3, [r3, #14]
   300c4:	cmp	r3, #5
   300c8:	beq	300ec <flatcc_builder_end_offset_vector@@Base+0x44>
   300cc:	ldr	r3, [pc, #104]	; 3013c <flatcc_builder_end_offset_vector@@Base+0x94>
   300d0:	add	r3, pc, r3
   300d4:	ldr	r2, [pc, #100]	; 30140 <flatcc_builder_end_offset_vector@@Base+0x98>
   300d8:	ldr	r1, [pc, #100]	; 30144 <flatcc_builder_end_offset_vector@@Base+0x9c>
   300dc:	add	r1, pc, r1
   300e0:	ldr	r0, [pc, #96]	; 30148 <flatcc_builder_end_offset_vector@@Base+0xa0>
   300e4:	add	r0, pc, r0
   300e8:	bl	14610 <__assert_fail@plt>
   300ec:	ldr	r3, [fp, #-16]
   300f0:	ldr	r1, [r3, #16]
   300f4:	ldr	r3, [fp, #-16]
   300f8:	ldr	r3, [r3, #32]
   300fc:	ldr	r3, [r3, #20]
   30100:	mov	r2, r3
   30104:	ldr	r0, [fp, #-16]
   30108:	bl	3006c <flatcc_builder_create_offset_vector_direct@@Base>
   3010c:	str	r0, [fp, #-8]
   30110:	ldr	r3, [fp, #-8]
   30114:	cmp	r3, #0
   30118:	bne	30124 <flatcc_builder_end_offset_vector@@Base+0x7c>
   3011c:	mov	r3, #0
   30120:	b	30130 <flatcc_builder_end_offset_vector@@Base+0x88>
   30124:	ldr	r0, [fp, #-16]
   30128:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   3012c:	ldr	r3, [fp, #-8]
   30130:	mov	r0, r3
   30134:	sub	sp, fp, #4
   30138:	pop	{fp, pc}
   3013c:	andeq	pc, r1, ip, ror #7
   30140:	andeq	r0, r0, r8, asr #11
   30144:	andeq	lr, r1, r0, asr #24
   30148:	andeq	lr, r1, r8, ror #27

0003014c <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3014c:	push	{fp, lr}
   30150:	add	fp, sp, #4
   30154:	sub	sp, sp, #16
   30158:	str	r0, [fp, #-16]
   3015c:	str	r1, [fp, #-20]	; 0xffffffec
   30160:	ldr	r3, [fp, #-16]
   30164:	ldr	r3, [r3, #32]
   30168:	ldrh	r3, [r3, #14]
   3016c:	cmp	r3, #5
   30170:	beq	30194 <flatcc_builder_end_offset_vector_for_unions@@Base+0x48>
   30174:	ldr	r3, [pc, #104]	; 301e4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   30178:	add	r3, pc, r3
   3017c:	ldr	r2, [pc, #100]	; 301e8 <flatcc_builder_end_offset_vector_for_unions@@Base+0x9c>
   30180:	ldr	r1, [pc, #100]	; 301ec <flatcc_builder_end_offset_vector_for_unions@@Base+0xa0>
   30184:	add	r1, pc, r1
   30188:	ldr	r0, [pc, #96]	; 301f0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   3018c:	add	r0, pc, r0
   30190:	bl	14610 <__assert_fail@plt>
   30194:	ldr	r3, [fp, #-16]
   30198:	ldr	r1, [r3, #16]
   3019c:	ldr	r3, [fp, #-16]
   301a0:	ldr	r3, [r3, #32]
   301a4:	ldr	r2, [r3, #20]
   301a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   301ac:	ldr	r0, [fp, #-16]
   301b0:	bl	2fd24 <flatcc_builder_vector_edit@@Base+0x28>
   301b4:	str	r0, [fp, #-8]
   301b8:	ldr	r3, [fp, #-8]
   301bc:	cmp	r3, #0
   301c0:	bne	301cc <flatcc_builder_end_offset_vector_for_unions@@Base+0x80>
   301c4:	mov	r3, #0
   301c8:	b	301d8 <flatcc_builder_end_offset_vector_for_unions@@Base+0x8c>
   301cc:	ldr	r0, [fp, #-16]
   301d0:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   301d4:	ldr	r3, [fp, #-8]
   301d8:	mov	r0, r3
   301dc:	sub	sp, fp, #4
   301e0:	pop	{fp, pc}
   301e4:	andeq	pc, r1, r8, ror #6
   301e8:	ldrdeq	r0, [r0], -r5
   301ec:	muleq	r1, r8, fp
   301f0:	andeq	lr, r1, r0, asr #26

000301f4 <flatcc_builder_offset_vector_edit@@Base>:
   301f4:	push	{fp}		; (str fp, [sp, #-4]!)
   301f8:	add	fp, sp, #0
   301fc:	sub	sp, sp, #12
   30200:	str	r0, [fp, #-8]
   30204:	ldr	r3, [fp, #-8]
   30208:	ldr	r3, [r3, #16]
   3020c:	mov	r0, r3
   30210:	add	sp, fp, #0
   30214:	pop	{fp}		; (ldr fp, [sp], #4)
   30218:	bx	lr

0003021c <flatcc_builder_offset_vector_count@@Base>:
   3021c:	push	{fp}		; (str fp, [sp, #-4]!)
   30220:	add	fp, sp, #0
   30224:	sub	sp, sp, #12
   30228:	str	r0, [fp, #-8]
   3022c:	ldr	r3, [fp, #-8]
   30230:	ldr	r3, [r3, #32]
   30234:	ldr	r3, [r3, #20]
   30238:	mov	r0, r3
   3023c:	add	sp, fp, #0
   30240:	pop	{fp}		; (ldr fp, [sp], #4)
   30244:	bx	lr

00030248 <flatcc_builder_table_add_union@@Base>:
   30248:	push	{fp, lr}
   3024c:	add	fp, sp, #4
   30250:	sub	sp, sp, #24
   30254:	str	r0, [fp, #-16]
   30258:	str	r1, [fp, #-20]	; 0xffffffec
   3025c:	sub	r1, fp, #28
   30260:	stm	r1, {r2, r3}
   30264:	ldr	r3, [fp, #-16]
   30268:	ldr	r3, [r3, #32]
   3026c:	ldrh	r3, [r3, #14]
   30270:	cmp	r3, #3
   30274:	beq	30298 <flatcc_builder_table_add_union@@Base+0x50>
   30278:	ldr	r3, [pc, #352]	; 303e0 <flatcc_builder_table_add_union@@Base+0x198>
   3027c:	add	r3, pc, r3
   30280:	ldr	r2, [pc, #348]	; 303e4 <flatcc_builder_table_add_union@@Base+0x19c>
   30284:	ldr	r1, [pc, #348]	; 303e8 <flatcc_builder_table_add_union@@Base+0x1a0>
   30288:	add	r1, pc, r1
   3028c:	ldr	r0, [pc, #344]	; 303ec <flatcc_builder_table_add_union@@Base+0x1a4>
   30290:	add	r0, pc, r0
   30294:	bl	14610 <__assert_fail@plt>
   30298:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   3029c:	cmp	r3, #0
   302a0:	bne	302f0 <flatcc_builder_table_add_union@@Base+0xa8>
   302a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302a8:	cmp	r3, #0
   302ac:	beq	302f0 <flatcc_builder_table_add_union@@Base+0xa8>
   302b0:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   302b4:	cmp	r3, #0
   302b8:	bne	302e8 <flatcc_builder_table_add_union@@Base+0xa0>
   302bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302c0:	cmp	r3, #0
   302c4:	beq	302e8 <flatcc_builder_table_add_union@@Base+0xa0>
   302c8:	ldr	r3, [pc, #288]	; 303f0 <flatcc_builder_table_add_union@@Base+0x1a8>
   302cc:	add	r3, pc, r3
   302d0:	ldr	r2, [pc, #284]	; 303f4 <flatcc_builder_table_add_union@@Base+0x1ac>
   302d4:	ldr	r1, [pc, #284]	; 303f8 <flatcc_builder_table_add_union@@Base+0x1b0>
   302d8:	add	r1, pc, r1
   302dc:	ldr	r0, [pc, #280]	; 303fc <flatcc_builder_table_add_union@@Base+0x1b4>
   302e0:	add	r0, pc, r0
   302e4:	bl	14610 <__assert_fail@plt>
   302e8:	mvn	r3, #0
   302ec:	b	303d4 <flatcc_builder_table_add_union@@Base+0x18c>
   302f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   302f4:	cmp	r3, #0
   302f8:	beq	30358 <flatcc_builder_table_add_union@@Base+0x110>
   302fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   30300:	ldr	r0, [fp, #-16]
   30304:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   30308:	str	r0, [fp, #-8]
   3030c:	ldr	r3, [fp, #-8]
   30310:	cmp	r3, #0
   30314:	bne	3034c <flatcc_builder_table_add_union@@Base+0x104>
   30318:	ldr	r3, [fp, #-8]
   3031c:	cmp	r3, #0
   30320:	bne	30344 <flatcc_builder_table_add_union@@Base+0xfc>
   30324:	ldr	r3, [pc, #212]	; 30400 <flatcc_builder_table_add_union@@Base+0x1b8>
   30328:	add	r3, pc, r3
   3032c:	ldr	r2, [pc, #208]	; 30404 <flatcc_builder_table_add_union@@Base+0x1bc>
   30330:	ldr	r1, [pc, #208]	; 30408 <flatcc_builder_table_add_union@@Base+0x1c0>
   30334:	add	r1, pc, r1
   30338:	ldr	r0, [pc, #204]	; 3040c <flatcc_builder_table_add_union@@Base+0x1c4>
   3033c:	add	r0, pc, r0
   30340:	bl	14610 <__assert_fail@plt>
   30344:	mvn	r3, #0
   30348:	b	303d4 <flatcc_builder_table_add_union@@Base+0x18c>
   3034c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30350:	ldr	r3, [fp, #-8]
   30354:	str	r2, [r3]
   30358:	ldr	r3, [fp, #-20]	; 0xffffffec
   3035c:	sub	r1, r3, #1
   30360:	mov	r3, #1
   30364:	mov	r2, #1
   30368:	ldr	r0, [fp, #-16]
   3036c:	bl	31134 <flatcc_builder_table_add@@Base>
   30370:	str	r0, [fp, #-12]
   30374:	ldr	r3, [fp, #-12]
   30378:	cmp	r3, #0
   3037c:	bne	303b4 <flatcc_builder_table_add_union@@Base+0x16c>
   30380:	ldr	r3, [fp, #-12]
   30384:	cmp	r3, #0
   30388:	bne	303ac <flatcc_builder_table_add_union@@Base+0x164>
   3038c:	ldr	r3, [pc, #124]	; 30410 <flatcc_builder_table_add_union@@Base+0x1c8>
   30390:	add	r3, pc, r3
   30394:	ldr	r2, [pc, #120]	; 30414 <flatcc_builder_table_add_union@@Base+0x1cc>
   30398:	ldr	r1, [pc, #120]	; 30418 <flatcc_builder_table_add_union@@Base+0x1d0>
   3039c:	add	r1, pc, r1
   303a0:	ldr	r0, [pc, #116]	; 3041c <flatcc_builder_table_add_union@@Base+0x1d4>
   303a4:	add	r0, pc, r0
   303a8:	bl	14610 <__assert_fail@plt>
   303ac:	mvn	r3, #0
   303b0:	b	303d4 <flatcc_builder_table_add_union@@Base+0x18c>
   303b4:	ldrb	r3, [fp, #-28]	; 0xffffffe4
   303b8:	mov	r0, r3
   303bc:	bl	2ba64 <main@@Base+0xd64>
   303c0:	mov	r3, r0
   303c4:	mov	r2, r3
   303c8:	ldr	r3, [fp, #-12]
   303cc:	strb	r2, [r3]
   303d0:	mov	r3, #0
   303d4:	mov	r0, r3
   303d8:	sub	sp, fp, #4
   303dc:	pop	{fp, pc}
   303e0:	muleq	r1, r0, r2
   303e4:	andeq	r0, r0, lr, ror #11
   303e8:	muleq	r1, r4, sl
   303ec:	andeq	lr, r1, ip, asr #26
   303f0:	andeq	pc, r1, r0, asr #4
   303f4:	andeq	r0, r0, pc, ror #11
   303f8:	andeq	lr, r1, r4, asr #20
   303fc:	andeq	lr, r1, ip, asr sp
   30400:	andeq	pc, r1, r4, ror #3
   30404:	strdeq	r0, [r0], -r2
   30408:	andeq	lr, r1, r8, ror #19
   3040c:	andeq	lr, r1, r4, lsr #26
   30410:	andeq	pc, r1, ip, ror r1	; <UNPREDICTABLE>
   30414:	strdeq	r0, [r0], -r6
   30418:	andeq	lr, r1, r0, lsl #19
   3041c:	andeq	lr, r1, r8, asr #25

00030420 <flatcc_builder_table_add_union_vector@@Base>:
   30420:	push	{fp, lr}
   30424:	add	fp, sp, #4
   30428:	sub	sp, sp, #24
   3042c:	str	r0, [fp, #-16]
   30430:	str	r1, [fp, #-20]	; 0xffffffec
   30434:	sub	r1, fp, #28
   30438:	stm	r1, {r2, r3}
   3043c:	ldr	r3, [fp, #-16]
   30440:	ldr	r3, [r3, #32]
   30444:	ldrh	r3, [r3, #14]
   30448:	cmp	r3, #3
   3044c:	beq	30470 <flatcc_builder_table_add_union_vector@@Base+0x50>
   30450:	ldr	r3, [pc, #396]	; 305e4 <flatcc_builder_table_add_union_vector@@Base+0x1c4>
   30454:	add	r3, pc, r3
   30458:	mov	r2, #1536	; 0x600
   3045c:	ldr	r1, [pc, #388]	; 305e8 <flatcc_builder_table_add_union_vector@@Base+0x1c8>
   30460:	add	r1, pc, r1
   30464:	ldr	r0, [pc, #384]	; 305ec <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   30468:	add	r0, pc, r0
   3046c:	bl	14610 <__assert_fail@plt>
   30470:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30474:	cmp	r3, #0
   30478:	moveq	r3, #1
   3047c:	movne	r3, #0
   30480:	uxtb	r2, r3
   30484:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30488:	cmp	r3, #0
   3048c:	moveq	r3, #1
   30490:	movne	r3, #0
   30494:	uxtb	r3, r3
   30498:	eor	r3, r3, r2
   3049c:	uxtb	r3, r3
   304a0:	cmp	r3, #0
   304a4:	beq	30508 <flatcc_builder_table_add_union_vector@@Base+0xe8>
   304a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   304ac:	cmp	r3, #0
   304b0:	movne	r3, #1
   304b4:	moveq	r3, #0
   304b8:	uxtb	r2, r3
   304bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   304c0:	cmp	r3, #0
   304c4:	moveq	r3, #1
   304c8:	movne	r3, #0
   304cc:	uxtb	r3, r3
   304d0:	eor	r3, r3, r2
   304d4:	uxtb	r3, r3
   304d8:	cmp	r3, #0
   304dc:	bne	30500 <flatcc_builder_table_add_union_vector@@Base+0xe0>
   304e0:	ldr	r3, [pc, #264]	; 305f0 <flatcc_builder_table_add_union_vector@@Base+0x1d0>
   304e4:	add	r3, pc, r3
   304e8:	ldr	r2, [pc, #260]	; 305f4 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   304ec:	ldr	r1, [pc, #260]	; 305f8 <flatcc_builder_table_add_union_vector@@Base+0x1d8>
   304f0:	add	r1, pc, r1
   304f4:	ldr	r0, [pc, #256]	; 305fc <flatcc_builder_table_add_union_vector@@Base+0x1dc>
   304f8:	add	r0, pc, r0
   304fc:	bl	14610 <__assert_fail@plt>
   30500:	mvn	r3, #0
   30504:	b	305d8 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   30508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3050c:	cmp	r3, #0
   30510:	beq	305d4 <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   30514:	ldr	r3, [fp, #-20]	; 0xffffffec
   30518:	sub	r3, r3, #1
   3051c:	mov	r1, r3
   30520:	ldr	r0, [fp, #-16]
   30524:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   30528:	str	r0, [fp, #-8]
   3052c:	ldr	r3, [fp, #-8]
   30530:	cmp	r3, #0
   30534:	bne	3056c <flatcc_builder_table_add_union_vector@@Base+0x14c>
   30538:	ldr	r3, [fp, #-8]
   3053c:	cmp	r3, #0
   30540:	bne	30564 <flatcc_builder_table_add_union_vector@@Base+0x144>
   30544:	ldr	r3, [pc, #180]	; 30600 <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   30548:	add	r3, pc, r3
   3054c:	ldr	r2, [pc, #176]	; 30604 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   30550:	ldr	r1, [pc, #176]	; 30608 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   30554:	add	r1, pc, r1
   30558:	ldr	r0, [pc, #172]	; 3060c <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   3055c:	add	r0, pc, r0
   30560:	bl	14610 <__assert_fail@plt>
   30564:	mvn	r3, #0
   30568:	b	305d8 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   3056c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30570:	ldr	r3, [fp, #-8]
   30574:	str	r2, [r3]
   30578:	ldr	r1, [fp, #-20]	; 0xffffffec
   3057c:	ldr	r0, [fp, #-16]
   30580:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   30584:	str	r0, [fp, #-8]
   30588:	ldr	r3, [fp, #-8]
   3058c:	cmp	r3, #0
   30590:	bne	305c8 <flatcc_builder_table_add_union_vector@@Base+0x1a8>
   30594:	ldr	r3, [fp, #-8]
   30598:	cmp	r3, #0
   3059c:	bne	305c0 <flatcc_builder_table_add_union_vector@@Base+0x1a0>
   305a0:	ldr	r3, [pc, #104]	; 30610 <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   305a4:	add	r3, pc, r3
   305a8:	ldr	r2, [pc, #100]	; 30614 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   305ac:	ldr	r1, [pc, #100]	; 30618 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   305b0:	add	r1, pc, r1
   305b4:	ldr	r0, [pc, #96]	; 3061c <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   305b8:	add	r0, pc, r0
   305bc:	bl	14610 <__assert_fail@plt>
   305c0:	mvn	r3, #0
   305c4:	b	305d8 <flatcc_builder_table_add_union_vector@@Base+0x1b8>
   305c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   305cc:	ldr	r3, [fp, #-8]
   305d0:	str	r2, [r3]
   305d4:	mov	r3, #0
   305d8:	mov	r0, r3
   305dc:	sub	sp, fp, #4
   305e0:	pop	{fp, pc}
   305e4:	ldrdeq	pc, [r1], -r8
   305e8:			; <UNDEFINED> instruction: 0x0001e8bc
   305ec:	andeq	lr, r1, r4, ror fp
   305f0:	andeq	pc, r1, r8, asr #32
   305f4:	andeq	r0, r0, r1, lsl #12
   305f8:	andeq	lr, r1, ip, lsr #16
   305fc:	andeq	lr, r1, r0, lsl #23
   30600:	andeq	lr, r1, r4, ror #31
   30604:	andeq	r0, r0, r4, lsl #12
   30608:	andeq	lr, r1, r8, asr #15
   3060c:	andeq	lr, r1, r4, lsl #22
   30610:	andeq	lr, r1, r8, lsl #31
   30614:	andeq	r0, r0, r8, lsl #12
   30618:	andeq	lr, r1, ip, ror #14
   3061c:	andeq	lr, r1, r8, lsr #21

00030620 <flatcc_builder_create_union_vector@@Base>:
   30620:	push	{fp, lr}
   30624:	add	fp, sp, #4
   30628:	sub	sp, sp, #48	; 0x30
   3062c:	str	r0, [fp, #-32]	; 0xffffffe0
   30630:	str	r1, [fp, #-36]	; 0xffffffdc
   30634:	str	r2, [fp, #-40]	; 0xffffffd8
   30638:	str	r3, [fp, #-44]	; 0xffffffd4
   3063c:	mov	r3, #0
   30640:	str	r3, [fp, #-24]	; 0xffffffe8
   30644:	mov	r3, #0
   30648:	str	r3, [fp, #-20]	; 0xffffffec
   3064c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30650:	bl	2ea54 <flatcc_builder_start_offset_vector@@Base>
   30654:	mov	r3, r0
   30658:	cmp	r3, #0
   3065c:	beq	30678 <flatcc_builder_create_union_vector@@Base+0x58>
   30660:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30664:	mov	r2, r3
   30668:	sub	r3, fp, #24
   3066c:	ldm	r3, {r0, r1}
   30670:	stm	r2, {r0, r1}
   30674:	b	30794 <flatcc_builder_create_union_vector@@Base+0x174>
   30678:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3067c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30680:	bl	2e300 <flatcc_builder_extend_offset_vector@@Base>
   30684:	mov	r3, r0
   30688:	cmp	r3, #0
   3068c:	bne	306a8 <flatcc_builder_create_union_vector@@Base+0x88>
   30690:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30694:	mov	r2, r3
   30698:	sub	r3, fp, #24
   3069c:	ldm	r3, {r0, r1}
   306a0:	stm	r2, {r0, r1}
   306a4:	b	30794 <flatcc_builder_create_union_vector@@Base+0x174>
   306a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   306ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   306b0:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   306b4:	str	r0, [fp, #-12]
   306b8:	ldr	r3, [fp, #-12]
   306bc:	cmp	r3, #0
   306c0:	bne	306dc <flatcc_builder_create_union_vector@@Base+0xbc>
   306c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   306c8:	mov	r2, r3
   306cc:	sub	r3, fp, #24
   306d0:	ldm	r3, {r0, r1}
   306d4:	stm	r2, {r0, r1}
   306d8:	b	30794 <flatcc_builder_create_union_vector@@Base+0x174>
   306dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   306e0:	bl	301f4 <flatcc_builder_offset_vector_edit@@Base>
   306e4:	str	r0, [fp, #-16]
   306e8:	mov	r3, #0
   306ec:	str	r3, [fp, #-8]
   306f0:	b	3074c <flatcc_builder_create_union_vector@@Base+0x12c>
   306f4:	ldr	r2, [fp, #-12]
   306f8:	ldr	r3, [fp, #-8]
   306fc:	add	r3, r2, r3
   30700:	ldr	r2, [fp, #-8]
   30704:	lsl	r2, r2, #3
   30708:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3070c:	add	r2, r1, r2
   30710:	ldrb	r2, [r2]
   30714:	strb	r2, [r3]
   30718:	ldr	r3, [fp, #-8]
   3071c:	lsl	r3, r3, #2
   30720:	ldr	r2, [fp, #-16]
   30724:	add	r3, r2, r3
   30728:	ldr	r2, [fp, #-8]
   3072c:	lsl	r2, r2, #3
   30730:	ldr	r1, [fp, #-40]	; 0xffffffd8
   30734:	add	r2, r1, r2
   30738:	ldr	r2, [r2, #4]
   3073c:	str	r2, [r3]
   30740:	ldr	r3, [fp, #-8]
   30744:	add	r3, r3, #1
   30748:	str	r3, [fp, #-8]
   3074c:	ldr	r2, [fp, #-8]
   30750:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30754:	cmp	r2, r3
   30758:	bcc	306f4 <flatcc_builder_create_union_vector@@Base+0xd4>
   3075c:	sub	r0, fp, #24
   30760:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30764:	str	r3, [sp]
   30768:	ldr	r3, [fp, #-16]
   3076c:	ldr	r2, [fp, #-12]
   30770:	ldr	r1, [fp, #-36]	; 0xffffffdc
   30774:	bl	307a0 <flatcc_builder_create_union_vector_direct@@Base>
   30778:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3077c:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   30780:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30784:	mov	r2, r3
   30788:	sub	r3, fp, #24
   3078c:	ldm	r3, {r0, r1}
   30790:	stm	r2, {r0, r1}
   30794:	ldr	r0, [fp, #-32]	; 0xffffffe0
   30798:	sub	sp, fp, #4
   3079c:	pop	{fp, pc}

000307a0 <flatcc_builder_create_union_vector_direct@@Base>:
   307a0:	push	{fp, lr}
   307a4:	add	fp, sp, #4
   307a8:	sub	sp, sp, #32
   307ac:	str	r0, [fp, #-16]
   307b0:	str	r1, [fp, #-20]	; 0xffffffec
   307b4:	str	r2, [fp, #-24]	; 0xffffffe8
   307b8:	str	r3, [fp, #-28]	; 0xffffffe4
   307bc:	mov	r3, #0
   307c0:	str	r3, [fp, #-12]
   307c4:	mov	r3, #0
   307c8:	str	r3, [fp, #-8]
   307cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   307d0:	ldr	r2, [fp, #4]
   307d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   307d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   307dc:	bl	2fd24 <flatcc_builder_vector_edit@@Base+0x28>
   307e0:	mov	r3, r0
   307e4:	str	r3, [fp, #-8]
   307e8:	ldr	r3, [fp, #-8]
   307ec:	cmp	r3, #0
   307f0:	bne	3080c <flatcc_builder_create_union_vector_direct@@Base+0x6c>
   307f4:	ldr	r3, [fp, #-16]
   307f8:	mov	r2, r3
   307fc:	sub	r3, fp, #12
   30800:	ldm	r3, {r0, r1}
   30804:	stm	r2, {r0, r1}
   30808:	b	30870 <flatcc_builder_create_union_vector_direct@@Base+0xd0>
   3080c:	mvn	r3, #0
   30810:	str	r3, [sp, #4]
   30814:	mov	r3, #1
   30818:	str	r3, [sp]
   3081c:	mov	r3, #1
   30820:	ldr	r2, [fp, #4]
   30824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30828:	ldr	r0, [fp, #-20]	; 0xffffffec
   3082c:	bl	2f9e0 <flatcc_builder_create_vector@@Base>
   30830:	mov	r3, r0
   30834:	str	r3, [fp, #-12]
   30838:	ldr	r3, [fp, #-12]
   3083c:	cmp	r3, #0
   30840:	bne	3085c <flatcc_builder_create_union_vector_direct@@Base+0xbc>
   30844:	ldr	r3, [fp, #-16]
   30848:	mov	r2, r3
   3084c:	sub	r3, fp, #12
   30850:	ldm	r3, {r0, r1}
   30854:	stm	r2, {r0, r1}
   30858:	b	30870 <flatcc_builder_create_union_vector_direct@@Base+0xd0>
   3085c:	ldr	r3, [fp, #-16]
   30860:	mov	r2, r3
   30864:	sub	r3, fp, #12
   30868:	ldm	r3, {r0, r1}
   3086c:	stm	r2, {r0, r1}
   30870:	ldr	r0, [fp, #-16]
   30874:	sub	sp, fp, #4
   30878:	pop	{fp, pc}

0003087c <flatcc_builder_start_union_vector@@Base>:
   3087c:	push	{fp, lr}
   30880:	add	fp, sp, #4
   30884:	sub	sp, sp, #8
   30888:	str	r0, [fp, #-8]
   3088c:	mov	r1, #4
   30890:	ldr	r0, [fp, #-8]
   30894:	bl	2cdd4 <flatcc_builder_get_user_frame_ptr@@Base+0x34>
   30898:	mov	r3, r0
   3089c:	cmp	r3, #0
   308a0:	beq	308ac <flatcc_builder_start_union_vector@@Base+0x30>
   308a4:	mvn	r3, #0
   308a8:	b	308ec <flatcc_builder_start_union_vector@@Base+0x70>
   308ac:	ldr	r3, [fp, #-8]
   308b0:	ldr	r3, [r3, #32]
   308b4:	mov	r2, #8
   308b8:	str	r2, [r3, #16]
   308bc:	ldr	r3, [fp, #-8]
   308c0:	ldr	r3, [r3, #32]
   308c4:	mov	r2, #0
   308c8:	str	r2, [r3, #20]
   308cc:	ldr	r3, [fp, #-8]
   308d0:	ldr	r3, [r3, #32]
   308d4:	mov	r2, #7
   308d8:	strh	r2, [r3, #14]
   308dc:	mvn	r1, #3
   308e0:	ldr	r0, [fp, #-8]
   308e4:	bl	2bd4c <flatcc_builder_default_alloc@@Base+0x1c8>
   308e8:	mov	r3, #0
   308ec:	mov	r0, r3
   308f0:	sub	sp, fp, #4
   308f4:	pop	{fp, pc}

000308f8 <flatcc_builder_end_union_vector@@Base>:
   308f8:	push	{fp, lr}
   308fc:	add	fp, sp, #4
   30900:	sub	sp, sp, #48	; 0x30
   30904:	str	r0, [fp, #-40]	; 0xffffffd8
   30908:	str	r1, [fp, #-44]	; 0xffffffd4
   3090c:	mov	r3, #0
   30910:	str	r3, [fp, #-32]	; 0xffffffe0
   30914:	mov	r3, #0
   30918:	str	r3, [fp, #-28]	; 0xffffffe4
   3091c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30920:	ldr	r3, [r3, #32]
   30924:	ldrh	r3, [r3, #14]
   30928:	cmp	r3, #7
   3092c:	beq	30950 <flatcc_builder_end_union_vector@@Base+0x58>
   30930:	ldr	r3, [pc, #320]	; 30a78 <flatcc_builder_end_union_vector@@Base+0x180>
   30934:	add	r3, pc, r3
   30938:	ldr	r2, [pc, #316]	; 30a7c <flatcc_builder_end_union_vector@@Base+0x184>
   3093c:	ldr	r1, [pc, #316]	; 30a80 <flatcc_builder_end_union_vector@@Base+0x188>
   30940:	add	r1, pc, r1
   30944:	ldr	r0, [pc, #312]	; 30a84 <flatcc_builder_end_union_vector@@Base+0x18c>
   30948:	add	r0, pc, r0
   3094c:	bl	14610 <__assert_fail@plt>
   30950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30954:	bl	30ab0 <flatcc_builder_union_vector_count@@Base>
   30958:	str	r0, [fp, #-12]
   3095c:	ldr	r2, [fp, #-12]
   30960:	mov	r3, r2
   30964:	lsl	r3, r3, #2
   30968:	add	r3, r3, r2
   3096c:	mov	r1, r3
   30970:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30974:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   30978:	str	r0, [fp, #-16]
   3097c:	ldr	r3, [fp, #-16]
   30980:	cmp	r3, #0
   30984:	bne	309a0 <flatcc_builder_end_union_vector@@Base+0xa8>
   30988:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3098c:	mov	r2, r3
   30990:	sub	r3, fp, #32
   30994:	ldm	r3, {r0, r1}
   30998:	stm	r2, {r0, r1}
   3099c:	b	30a6c <flatcc_builder_end_union_vector@@Base+0x174>
   309a0:	ldr	r3, [fp, #-12]
   309a4:	lsl	r3, r3, #2
   309a8:	ldr	r2, [fp, #-16]
   309ac:	add	r3, r2, r3
   309b0:	str	r3, [fp, #-20]	; 0xffffffec
   309b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   309b8:	bl	30a88 <flatcc_builder_union_vector_edit@@Base>
   309bc:	str	r0, [fp, #-24]	; 0xffffffe8
   309c0:	mov	r3, #0
   309c4:	str	r3, [fp, #-8]
   309c8:	b	30a24 <flatcc_builder_end_union_vector@@Base+0x12c>
   309cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   309d0:	ldr	r3, [fp, #-8]
   309d4:	add	r3, r2, r3
   309d8:	ldr	r2, [fp, #-8]
   309dc:	lsl	r2, r2, #3
   309e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   309e4:	add	r2, r1, r2
   309e8:	ldrb	r2, [r2]
   309ec:	strb	r2, [r3]
   309f0:	ldr	r3, [fp, #-8]
   309f4:	lsl	r3, r3, #2
   309f8:	ldr	r2, [fp, #-16]
   309fc:	add	r3, r2, r3
   30a00:	ldr	r2, [fp, #-8]
   30a04:	lsl	r2, r2, #3
   30a08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30a0c:	add	r2, r1, r2
   30a10:	ldr	r2, [r2, #4]
   30a14:	str	r2, [r3]
   30a18:	ldr	r3, [fp, #-8]
   30a1c:	add	r3, r3, #1
   30a20:	str	r3, [fp, #-8]
   30a24:	ldr	r2, [fp, #-8]
   30a28:	ldr	r3, [fp, #-12]
   30a2c:	cmp	r2, r3
   30a30:	bcc	309cc <flatcc_builder_end_union_vector@@Base+0xd4>
   30a34:	sub	r0, fp, #32
   30a38:	ldr	r3, [fp, #-12]
   30a3c:	str	r3, [sp]
   30a40:	ldr	r3, [fp, #-16]
   30a44:	ldr	r2, [fp, #-20]	; 0xffffffec
   30a48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   30a4c:	bl	307a0 <flatcc_builder_create_union_vector_direct@@Base>
   30a50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30a54:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   30a58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30a5c:	mov	r2, r3
   30a60:	sub	r3, fp, #32
   30a64:	ldm	r3, {r0, r1}
   30a68:	stm	r2, {r0, r1}
   30a6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30a70:	sub	sp, fp, #4
   30a74:	pop	{fp, pc}
   30a78:	andeq	lr, r1, r0, lsr #24
   30a7c:	andeq	r0, r0, r1, asr r6
   30a80:	ldrdeq	lr, [r1], -ip
   30a84:	andeq	lr, r1, r8, asr r7

00030a88 <flatcc_builder_union_vector_edit@@Base>:
   30a88:	push	{fp}		; (str fp, [sp, #-4]!)
   30a8c:	add	fp, sp, #0
   30a90:	sub	sp, sp, #12
   30a94:	str	r0, [fp, #-8]
   30a98:	ldr	r3, [fp, #-8]
   30a9c:	ldr	r3, [r3, #16]
   30aa0:	mov	r0, r3
   30aa4:	add	sp, fp, #0
   30aa8:	pop	{fp}		; (ldr fp, [sp], #4)
   30aac:	bx	lr

00030ab0 <flatcc_builder_union_vector_count@@Base>:
   30ab0:	push	{fp}		; (str fp, [sp, #-4]!)
   30ab4:	add	fp, sp, #0
   30ab8:	sub	sp, sp, #12
   30abc:	str	r0, [fp, #-8]
   30ac0:	ldr	r3, [fp, #-8]
   30ac4:	ldr	r3, [r3, #32]
   30ac8:	ldr	r3, [r3, #20]
   30acc:	mov	r0, r3
   30ad0:	add	sp, fp, #0
   30ad4:	pop	{fp}		; (ldr fp, [sp], #4)
   30ad8:	bx	lr

00030adc <flatcc_builder_extend_union_vector@@Base>:
   30adc:	push	{fp, lr}
   30ae0:	add	fp, sp, #4
   30ae4:	sub	sp, sp, #8
   30ae8:	str	r0, [fp, #-8]
   30aec:	str	r1, [fp, #-12]
   30af0:	mvn	r2, #-536870912	; 0xe0000000
   30af4:	ldr	r1, [fp, #-12]
   30af8:	ldr	r0, [fp, #-8]
   30afc:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   30b00:	mov	r3, r0
   30b04:	cmp	r3, #0
   30b08:	beq	30b14 <flatcc_builder_extend_union_vector@@Base+0x38>
   30b0c:	mov	r3, #0
   30b10:	b	30b2c <flatcc_builder_extend_union_vector@@Base+0x50>
   30b14:	ldr	r3, [fp, #-12]
   30b18:	lsl	r3, r3, #3
   30b1c:	mov	r1, r3
   30b20:	ldr	r0, [fp, #-8]
   30b24:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   30b28:	mov	r3, r0
   30b2c:	mov	r0, r3
   30b30:	sub	sp, fp, #4
   30b34:	pop	{fp, pc}

00030b38 <flatcc_builder_truncate_union_vector@@Base>:
   30b38:	push	{fp, lr}
   30b3c:	add	fp, sp, #4
   30b40:	sub	sp, sp, #8
   30b44:	str	r0, [fp, #-8]
   30b48:	str	r1, [fp, #-12]
   30b4c:	ldr	r3, [fp, #-8]
   30b50:	ldr	r3, [r3, #32]
   30b54:	ldrh	r3, [r3, #14]
   30b58:	cmp	r3, #7
   30b5c:	beq	30b80 <flatcc_builder_truncate_union_vector@@Base+0x48>
   30b60:	ldr	r3, [pc, #192]	; 30c28 <flatcc_builder_truncate_union_vector@@Base+0xf0>
   30b64:	add	r3, pc, r3
   30b68:	ldr	r2, [pc, #188]	; 30c2c <flatcc_builder_truncate_union_vector@@Base+0xf4>
   30b6c:	ldr	r1, [pc, #188]	; 30c30 <flatcc_builder_truncate_union_vector@@Base+0xf8>
   30b70:	add	r1, pc, r1
   30b74:	ldr	r0, [pc, #184]	; 30c34 <flatcc_builder_truncate_union_vector@@Base+0xfc>
   30b78:	add	r0, pc, r0
   30b7c:	bl	14610 <__assert_fail@plt>
   30b80:	ldr	r3, [fp, #-8]
   30b84:	ldr	r3, [r3, #32]
   30b88:	ldr	r2, [r3, #20]
   30b8c:	ldr	r3, [fp, #-12]
   30b90:	cmp	r2, r3
   30b94:	bcs	30bd8 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   30b98:	ldr	r3, [fp, #-8]
   30b9c:	ldr	r3, [r3, #32]
   30ba0:	ldr	r2, [r3, #20]
   30ba4:	ldr	r3, [fp, #-12]
   30ba8:	cmp	r2, r3
   30bac:	bcs	30bd0 <flatcc_builder_truncate_union_vector@@Base+0x98>
   30bb0:	ldr	r3, [pc, #128]	; 30c38 <flatcc_builder_truncate_union_vector@@Base+0x100>
   30bb4:	add	r3, pc, r3
   30bb8:	ldr	r2, [pc, #124]	; 30c3c <flatcc_builder_truncate_union_vector@@Base+0x104>
   30bbc:	ldr	r1, [pc, #124]	; 30c40 <flatcc_builder_truncate_union_vector@@Base+0x108>
   30bc0:	add	r1, pc, r1
   30bc4:	ldr	r0, [pc, #120]	; 30c44 <flatcc_builder_truncate_union_vector@@Base+0x10c>
   30bc8:	add	r0, pc, r0
   30bcc:	bl	14610 <__assert_fail@plt>
   30bd0:	mvn	r3, #0
   30bd4:	b	30c1c <flatcc_builder_truncate_union_vector@@Base+0xe4>
   30bd8:	ldr	r3, [fp, #-8]
   30bdc:	ldr	r3, [r3, #32]
   30be0:	ldr	r2, [fp, #-8]
   30be4:	ldr	r2, [r2, #32]
   30be8:	ldr	r1, [r2, #20]
   30bec:	ldr	r2, [fp, #-12]
   30bf0:	sub	r2, r1, r2
   30bf4:	str	r2, [r3, #20]
   30bf8:	ldr	r3, [fp, #-8]
   30bfc:	ldr	r3, [r3, #32]
   30c00:	ldr	r3, [r3, #16]
   30c04:	ldr	r2, [fp, #-12]
   30c08:	mul	r3, r2, r3
   30c0c:	mov	r1, r3
   30c10:	ldr	r0, [fp, #-8]
   30c14:	bl	2bf10 <flatcc_builder_default_alloc@@Base+0x38c>
   30c18:	mov	r3, #0
   30c1c:	mov	r0, r3
   30c20:	sub	sp, fp, #4
   30c24:	pop	{fp, pc}
   30c28:	andeq	lr, r1, r0, lsl sl
   30c2c:	andeq	r0, r0, r1, lsl #13
   30c30:	andeq	lr, r1, ip, lsr #3
   30c34:	andeq	lr, r1, r8, lsr #10
   30c38:	andeq	lr, r1, r0, asr #19
   30c3c:	andeq	r0, r0, r2, lsl #13
   30c40:	andeq	lr, r1, ip, asr r1
   30c44:	andeq	lr, r1, r8, lsl #7

00030c48 <flatcc_builder_union_vector_push@@Base>:
   30c48:	push	{fp, lr}
   30c4c:	add	fp, sp, #4
   30c50:	sub	sp, sp, #24
   30c54:	str	r0, [fp, #-16]
   30c58:	sub	r3, fp, #24
   30c5c:	stm	r3, {r1, r2}
   30c60:	ldr	r3, [fp, #-16]
   30c64:	ldr	r3, [r3, #32]
   30c68:	ldrh	r3, [r3, #14]
   30c6c:	cmp	r3, #7
   30c70:	beq	30c94 <flatcc_builder_union_vector_push@@Base+0x4c>
   30c74:	ldr	r3, [pc, #152]	; 30d14 <flatcc_builder_union_vector_push@@Base+0xcc>
   30c78:	add	r3, pc, r3
   30c7c:	ldr	r2, [pc, #148]	; 30d18 <flatcc_builder_union_vector_push@@Base+0xd0>
   30c80:	ldr	r1, [pc, #148]	; 30d1c <flatcc_builder_union_vector_push@@Base+0xd4>
   30c84:	add	r1, pc, r1
   30c88:	ldr	r0, [pc, #144]	; 30d20 <flatcc_builder_union_vector_push@@Base+0xd8>
   30c8c:	add	r0, pc, r0
   30c90:	bl	14610 <__assert_fail@plt>
   30c94:	ldr	r3, [fp, #-16]
   30c98:	ldr	r3, [r3, #32]
   30c9c:	ldr	r3, [r3, #20]
   30ca0:	cmn	r3, #-536870911	; 0xe0000001
   30ca4:	bne	30cb0 <flatcc_builder_union_vector_push@@Base+0x68>
   30ca8:	mov	r3, #0
   30cac:	b	30d08 <flatcc_builder_union_vector_push@@Base+0xc0>
   30cb0:	ldr	r3, [fp, #-16]
   30cb4:	ldr	r3, [r3, #32]
   30cb8:	ldr	r2, [fp, #-16]
   30cbc:	ldr	r2, [r2, #32]
   30cc0:	ldr	r2, [r2, #20]
   30cc4:	add	r2, r2, #1
   30cc8:	str	r2, [r3, #20]
   30ccc:	mov	r1, #8
   30cd0:	ldr	r0, [fp, #-16]
   30cd4:	bl	2be74 <flatcc_builder_default_alloc@@Base+0x2f0>
   30cd8:	str	r0, [fp, #-8]
   30cdc:	ldr	r3, [fp, #-8]
   30ce0:	cmp	r3, #0
   30ce4:	bne	30cf0 <flatcc_builder_union_vector_push@@Base+0xa8>
   30ce8:	mov	r3, #0
   30cec:	b	30d08 <flatcc_builder_union_vector_push@@Base+0xc0>
   30cf0:	ldr	r3, [fp, #-8]
   30cf4:	mov	r2, r3
   30cf8:	sub	r3, fp, #24
   30cfc:	ldm	r3, {r0, r1}
   30d00:	stm	r2, {r0, r1}
   30d04:	ldr	r3, [fp, #-8]
   30d08:	mov	r0, r3
   30d0c:	sub	sp, fp, #4
   30d10:	pop	{fp, pc}
   30d14:	andeq	lr, r1, r4, lsr #18
   30d18:	andeq	r0, r0, sp, lsl #13
   30d1c:	muleq	r1, r8, r0
   30d20:	andeq	lr, r1, r4, lsl r4

00030d24 <flatcc_builder_append_union_vector@@Base>:
   30d24:	push	{fp, lr}
   30d28:	add	fp, sp, #4
   30d2c:	sub	sp, sp, #16
   30d30:	str	r0, [fp, #-8]
   30d34:	str	r1, [fp, #-12]
   30d38:	str	r2, [fp, #-16]
   30d3c:	ldr	r3, [fp, #-8]
   30d40:	ldr	r3, [r3, #32]
   30d44:	ldrh	r3, [r3, #14]
   30d48:	cmp	r3, #7
   30d4c:	beq	30d70 <flatcc_builder_append_union_vector@@Base+0x4c>
   30d50:	ldr	r3, [pc, #100]	; 30dbc <flatcc_builder_append_union_vector@@Base+0x98>
   30d54:	add	r3, pc, r3
   30d58:	ldr	r2, [pc, #96]	; 30dc0 <flatcc_builder_append_union_vector@@Base+0x9c>
   30d5c:	ldr	r1, [pc, #96]	; 30dc4 <flatcc_builder_append_union_vector@@Base+0xa0>
   30d60:	add	r1, pc, r1
   30d64:	ldr	r0, [pc, #92]	; 30dc8 <flatcc_builder_append_union_vector@@Base+0xa4>
   30d68:	add	r0, pc, r0
   30d6c:	bl	14610 <__assert_fail@plt>
   30d70:	mvn	r2, #-536870912	; 0xe0000000
   30d74:	ldr	r1, [fp, #-16]
   30d78:	ldr	r0, [fp, #-8]
   30d7c:	bl	2dfec <flatcc_builder_end_struct@@Base+0xa0>
   30d80:	mov	r3, r0
   30d84:	cmp	r3, #0
   30d88:	beq	30d94 <flatcc_builder_append_union_vector@@Base+0x70>
   30d8c:	mov	r3, #0
   30d90:	b	30db0 <flatcc_builder_append_union_vector@@Base+0x8c>
   30d94:	ldr	r3, [fp, #-16]
   30d98:	lsl	r3, r3, #3
   30d9c:	mov	r2, r3
   30da0:	ldr	r1, [fp, #-12]
   30da4:	ldr	r0, [fp, #-8]
   30da8:	bl	2bf6c <flatcc_builder_default_alloc@@Base+0x3e8>
   30dac:	mov	r3, r0
   30db0:	mov	r0, r3
   30db4:	sub	sp, fp, #4
   30db8:	pop	{fp, pc}
   30dbc:	andeq	lr, r1, ip, ror #16
   30dc0:	muleq	r0, ip, r6
   30dc4:			; <UNDEFINED> instruction: 0x0001dfbc
   30dc8:	andeq	lr, r1, r8, lsr r3

00030dcc <flatcc_builder_create_string@@Base>:
   30dcc:	push	{r4, fp, lr}
   30dd0:	add	fp, sp, #8
   30dd4:	sub	sp, sp, #100	; 0x64
   30dd8:	str	r0, [fp, #-96]	; 0xffffffa0
   30ddc:	str	r1, [fp, #-100]	; 0xffffff9c
   30de0:	str	r2, [fp, #-104]	; 0xffffff98
   30de4:	ldr	r4, [pc, #376]	; 30f64 <flatcc_builder_create_string@@Base+0x198>
   30de8:	add	r4, pc, r4
   30dec:	ldr	r0, [fp, #-104]	; 0xffffff98
   30df0:	bl	2ba40 <main@@Base+0xd40>
   30df4:	mov	r3, r0
   30df8:	str	r3, [fp, #-20]	; 0xffffffec
   30dfc:	ldr	r3, [fp, #-104]	; 0xffffff98
   30e00:	add	r3, r3, #1
   30e04:	mov	r2, #4
   30e08:	mov	r1, r3
   30e0c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   30e10:	bl	2d07c <flatcc_builder_get_user_frame_ptr@@Base+0x2dc>
   30e14:	mov	r3, r0
   30e18:	add	r3, r3, #1
   30e1c:	str	r3, [fp, #-16]
   30e20:	mov	r3, #0
   30e24:	str	r3, [fp, #-92]	; 0xffffffa4
   30e28:	mov	r3, #0
   30e2c:	str	r3, [fp, #-88]	; 0xffffffa8
   30e30:	ldr	r3, [fp, #-92]	; 0xffffffa4
   30e34:	add	r3, r3, #4
   30e38:	str	r3, [fp, #-92]	; 0xffffffa4
   30e3c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30e40:	add	r3, r3, #1
   30e44:	lsl	r3, r3, #3
   30e48:	sub	r2, fp, #12
   30e4c:	add	r3, r2, r3
   30e50:	sub	r2, fp, #20
   30e54:	str	r2, [r3, #-80]	; 0xffffffb0
   30e58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30e5c:	add	r3, r3, #1
   30e60:	lsl	r3, r3, #3
   30e64:	sub	r2, fp, #12
   30e68:	add	r3, r2, r3
   30e6c:	mov	r2, #4
   30e70:	str	r2, [r3, #-76]	; 0xffffffb4
   30e74:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30e78:	add	r3, r3, #1
   30e7c:	str	r3, [fp, #-88]	; 0xffffffa8
   30e80:	ldr	r3, [fp, #-104]	; 0xffffff98
   30e84:	cmp	r3, #0
   30e88:	beq	30ee0 <flatcc_builder_create_string@@Base+0x114>
   30e8c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   30e90:	ldr	r3, [fp, #-104]	; 0xffffff98
   30e94:	add	r3, r2, r3
   30e98:	str	r3, [fp, #-92]	; 0xffffffa4
   30e9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30ea0:	add	r3, r3, #1
   30ea4:	lsl	r3, r3, #3
   30ea8:	sub	r2, fp, #12
   30eac:	add	r3, r2, r3
   30eb0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   30eb4:	str	r2, [r3, #-80]	; 0xffffffb0
   30eb8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30ebc:	add	r3, r3, #1
   30ec0:	lsl	r3, r3, #3
   30ec4:	sub	r2, fp, #12
   30ec8:	add	r3, r2, r3
   30ecc:	ldr	r2, [fp, #-104]	; 0xffffff98
   30ed0:	str	r2, [r3, #-76]	; 0xffffffb4
   30ed4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30ed8:	add	r3, r3, #1
   30edc:	str	r3, [fp, #-88]	; 0xffffffa8
   30ee0:	ldr	r3, [fp, #-16]
   30ee4:	cmp	r3, #0
   30ee8:	beq	30f44 <flatcc_builder_create_string@@Base+0x178>
   30eec:	ldr	r2, [fp, #-92]	; 0xffffffa4
   30ef0:	ldr	r3, [fp, #-16]
   30ef4:	add	r3, r2, r3
   30ef8:	str	r3, [fp, #-92]	; 0xffffffa4
   30efc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30f00:	add	r3, r3, #1
   30f04:	lsl	r3, r3, #3
   30f08:	sub	r2, fp, #12
   30f0c:	add	r3, r2, r3
   30f10:	ldr	r2, [pc, #80]	; 30f68 <flatcc_builder_create_string@@Base+0x19c>
   30f14:	ldr	r2, [r4, r2]
   30f18:	str	r2, [r3, #-80]	; 0xffffffb0
   30f1c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30f20:	add	r3, r3, #1
   30f24:	lsl	r3, r3, #3
   30f28:	sub	r2, fp, #12
   30f2c:	add	r3, r2, r3
   30f30:	ldr	r2, [fp, #-16]
   30f34:	str	r2, [r3, #-76]	; 0xffffffb4
   30f38:	ldr	r3, [fp, #-88]	; 0xffffffa8
   30f3c:	add	r3, r3, #1
   30f40:	str	r3, [fp, #-88]	; 0xffffffa8
   30f44:	sub	r3, fp, #92	; 0x5c
   30f48:	mov	r1, r3
   30f4c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   30f50:	bl	2d104 <flatcc_builder_get_user_frame_ptr@@Base+0x364>
   30f54:	mov	r3, r0
   30f58:	mov	r0, r3
   30f5c:	sub	sp, fp, #8
   30f60:	pop	{r4, fp, pc}
   30f64:	andeq	r1, r3, r0, lsl r2
   30f68:	andeq	r0, r0, r4, rrx

00030f6c <flatcc_builder_create_string_str@@Base>:
   30f6c:	push	{fp, lr}
   30f70:	add	fp, sp, #4
   30f74:	sub	sp, sp, #8
   30f78:	str	r0, [fp, #-8]
   30f7c:	str	r1, [fp, #-12]
   30f80:	ldr	r0, [fp, #-12]
   30f84:	bl	14598 <strlen@plt>
   30f88:	mov	r3, r0
   30f8c:	mov	r2, r3
   30f90:	ldr	r1, [fp, #-12]
   30f94:	ldr	r0, [fp, #-8]
   30f98:	bl	30dcc <flatcc_builder_create_string@@Base>
   30f9c:	mov	r3, r0
   30fa0:	mov	r0, r3
   30fa4:	sub	sp, fp, #4
   30fa8:	pop	{fp, pc}

00030fac <flatcc_builder_create_string_strn@@Base>:
   30fac:	push	{fp, lr}
   30fb0:	add	fp, sp, #4
   30fb4:	sub	sp, sp, #16
   30fb8:	str	r0, [fp, #-8]
   30fbc:	str	r1, [fp, #-12]
   30fc0:	str	r2, [fp, #-16]
   30fc4:	ldr	r1, [fp, #-16]
   30fc8:	ldr	r0, [fp, #-12]
   30fcc:	bl	2bb30 <main@@Base+0xe30>
   30fd0:	mov	r3, r0
   30fd4:	mov	r2, r3
   30fd8:	ldr	r1, [fp, #-12]
   30fdc:	ldr	r0, [fp, #-8]
   30fe0:	bl	30dcc <flatcc_builder_create_string@@Base>
   30fe4:	mov	r3, r0
   30fe8:	mov	r0, r3
   30fec:	sub	sp, fp, #4
   30ff0:	pop	{fp, pc}

00030ff4 <flatcc_builder_end_string@@Base>:
   30ff4:	push	{fp, lr}
   30ff8:	add	fp, sp, #4
   30ffc:	sub	sp, sp, #16
   31000:	str	r0, [fp, #-16]
   31004:	ldr	r3, [fp, #-16]
   31008:	ldr	r3, [r3, #32]
   3100c:	ldrh	r3, [r3, #14]
   31010:	cmp	r3, #6
   31014:	beq	31038 <flatcc_builder_end_string@@Base+0x44>
   31018:	ldr	r3, [pc, #160]	; 310c0 <flatcc_builder_end_string@@Base+0xcc>
   3101c:	add	r3, pc, r3
   31020:	ldr	r2, [pc, #156]	; 310c4 <flatcc_builder_end_string@@Base+0xd0>
   31024:	ldr	r1, [pc, #156]	; 310c8 <flatcc_builder_end_string@@Base+0xd4>
   31028:	add	r1, pc, r1
   3102c:	ldr	r0, [pc, #152]	; 310cc <flatcc_builder_end_string@@Base+0xd8>
   31030:	add	r0, pc, r0
   31034:	bl	14610 <__assert_fail@plt>
   31038:	ldr	r3, [fp, #-16]
   3103c:	ldr	r3, [r3, #32]
   31040:	ldr	r2, [r3, #20]
   31044:	ldr	r3, [fp, #-16]
   31048:	ldr	r3, [r3, #20]
   3104c:	cmp	r2, r3
   31050:	beq	31074 <flatcc_builder_end_string@@Base+0x80>
   31054:	ldr	r3, [pc, #116]	; 310d0 <flatcc_builder_end_string@@Base+0xdc>
   31058:	add	r3, pc, r3
   3105c:	ldr	r2, [pc, #112]	; 310d4 <flatcc_builder_end_string@@Base+0xe0>
   31060:	ldr	r1, [pc, #112]	; 310d8 <flatcc_builder_end_string@@Base+0xe4>
   31064:	add	r1, pc, r1
   31068:	ldr	r0, [pc, #108]	; 310dc <flatcc_builder_end_string@@Base+0xe8>
   3106c:	add	r0, pc, r0
   31070:	bl	14610 <__assert_fail@plt>
   31074:	ldr	r3, [fp, #-16]
   31078:	ldr	r1, [r3, #16]
   3107c:	ldr	r3, [fp, #-16]
   31080:	ldr	r3, [r3, #20]
   31084:	mov	r2, r3
   31088:	ldr	r0, [fp, #-16]
   3108c:	bl	30dcc <flatcc_builder_create_string@@Base>
   31090:	str	r0, [fp, #-8]
   31094:	ldr	r3, [fp, #-8]
   31098:	cmp	r3, #0
   3109c:	bne	310a8 <flatcc_builder_end_string@@Base+0xb4>
   310a0:	mov	r3, #0
   310a4:	b	310b4 <flatcc_builder_end_string@@Base+0xc0>
   310a8:	ldr	r0, [fp, #-16]
   310ac:	bl	2cfb4 <flatcc_builder_get_user_frame_ptr@@Base+0x214>
   310b0:	ldr	r3, [fp, #-8]
   310b4:	mov	r0, r3
   310b8:	sub	sp, fp, #4
   310bc:	pop	{fp, pc}
   310c0:	andeq	lr, r1, r8, asr #11
   310c4:	andeq	r0, r0, r4, asr #13
   310c8:	strdeq	sp, [r1], -r4
   310cc:	ldrdeq	sp, [r1], -r0
   310d0:	andeq	lr, r1, ip, lsl #11
   310d4:	andeq	r0, r0, r5, asr #13
   310d8:			; <UNDEFINED> instruction: 0x0001dcb8
   310dc:	andeq	lr, r1, r8, rrx

000310e0 <flatcc_builder_string_edit@@Base>:
   310e0:	push	{fp}		; (str fp, [sp, #-4]!)
   310e4:	add	fp, sp, #0
   310e8:	sub	sp, sp, #12
   310ec:	str	r0, [fp, #-8]
   310f0:	ldr	r3, [fp, #-8]
   310f4:	ldr	r3, [r3, #16]
   310f8:	mov	r0, r3
   310fc:	add	sp, fp, #0
   31100:	pop	{fp}		; (ldr fp, [sp], #4)
   31104:	bx	lr

00031108 <flatcc_builder_string_len@@Base>:
   31108:	push	{fp}		; (str fp, [sp, #-4]!)
   3110c:	add	fp, sp, #0
   31110:	sub	sp, sp, #12
   31114:	str	r0, [fp, #-8]
   31118:	ldr	r3, [fp, #-8]
   3111c:	ldr	r3, [r3, #32]
   31120:	ldr	r3, [r3, #20]
   31124:	mov	r0, r3
   31128:	add	sp, fp, #0
   3112c:	pop	{fp}		; (ldr fp, [sp], #4)
   31130:	bx	lr

00031134 <flatcc_builder_table_add@@Base>:
   31134:	push	{fp, lr}
   31138:	add	fp, sp, #4
   3113c:	sub	sp, sp, #16
   31140:	str	r0, [fp, #-8]
   31144:	str	r1, [fp, #-12]
   31148:	str	r2, [fp, #-16]
   3114c:	strh	r3, [fp, #-18]	; 0xffffffee
   31150:	ldr	r3, [fp, #-8]
   31154:	ldr	r3, [r3, #32]
   31158:	ldrh	r3, [r3, #14]
   3115c:	cmp	r3, #3
   31160:	beq	31184 <flatcc_builder_table_add@@Base+0x50>
   31164:	ldr	r3, [pc, #268]	; 31278 <flatcc_builder_table_add@@Base+0x144>
   31168:	add	r3, pc, r3
   3116c:	ldr	r2, [pc, #264]	; 3127c <flatcc_builder_table_add@@Base+0x148>
   31170:	ldr	r1, [pc, #264]	; 31280 <flatcc_builder_table_add@@Base+0x14c>
   31174:	add	r1, pc, r1
   31178:	ldr	r0, [pc, #260]	; 31284 <flatcc_builder_table_add@@Base+0x150>
   3117c:	add	r0, pc, r0
   31180:	bl	14610 <__assert_fail@plt>
   31184:	ldr	r3, [fp, #-12]
   31188:	cmp	r3, #0
   3118c:	blt	311a0 <flatcc_builder_table_add@@Base+0x6c>
   31190:	ldr	r3, [fp, #-12]
   31194:	ldr	r2, [pc, #236]	; 31288 <flatcc_builder_table_add@@Base+0x154>
   31198:	cmp	r3, r2
   3119c:	ble	311c0 <flatcc_builder_table_add@@Base+0x8c>
   311a0:	ldr	r3, [pc, #228]	; 3128c <flatcc_builder_table_add@@Base+0x158>
   311a4:	add	r3, pc, r3
   311a8:	ldr	r2, [pc, #224]	; 31290 <flatcc_builder_table_add@@Base+0x15c>
   311ac:	ldr	r1, [pc, #224]	; 31294 <flatcc_builder_table_add@@Base+0x160>
   311b0:	add	r1, pc, r1
   311b4:	ldr	r0, [pc, #220]	; 31298 <flatcc_builder_table_add@@Base+0x164>
   311b8:	add	r0, pc, r0
   311bc:	bl	14610 <__assert_fail@plt>
   311c0:	ldr	r3, [fp, #-8]
   311c4:	ldrh	r3, [r3, #130]	; 0x82
   311c8:	ldrh	r2, [fp, #-18]	; 0xffffffee
   311cc:	cmp	r2, r3
   311d0:	bls	311e0 <flatcc_builder_table_add@@Base+0xac>
   311d4:	ldr	r3, [fp, #-8]
   311d8:	ldrh	r2, [fp, #-18]	; 0xffffffee
   311dc:	strh	r2, [r3, #130]	; 0x82
   311e0:	ldr	r3, [fp, #-8]
   311e4:	ldr	r2, [r3, #4]
   311e8:	ldr	r3, [fp, #-12]
   311ec:	lsl	r3, r3, #1
   311f0:	add	r3, r2, r3
   311f4:	ldrh	r3, [r3]
   311f8:	cmp	r3, #0
   311fc:	beq	31220 <flatcc_builder_table_add@@Base+0xec>
   31200:	ldr	r3, [pc, #148]	; 3129c <flatcc_builder_table_add@@Base+0x168>
   31204:	add	r3, pc, r3
   31208:	ldr	r2, [pc, #144]	; 312a0 <flatcc_builder_table_add@@Base+0x16c>
   3120c:	ldr	r1, [pc, #144]	; 312a4 <flatcc_builder_table_add@@Base+0x170>
   31210:	add	r1, pc, r1
   31214:	ldr	r0, [pc, #140]	; 312a8 <flatcc_builder_table_add@@Base+0x174>
   31218:	add	r0, pc, r0
   3121c:	bl	14610 <__assert_fail@plt>
   31220:	ldr	r3, [fp, #-8]
   31224:	ldr	r2, [r3, #12]
   31228:	ldr	r3, [fp, #-12]
   3122c:	eor	r3, r3, r2
   31230:	ldr	r2, [pc, #116]	; 312ac <flatcc_builder_table_add@@Base+0x178>
   31234:	mul	r2, r2, r3
   31238:	ldr	r3, [fp, #-16]
   3123c:	eor	r3, r3, r2
   31240:	ldr	r2, [pc, #100]	; 312ac <flatcc_builder_table_add@@Base+0x178>
   31244:	mul	r2, r2, r3
   31248:	ldr	r3, [fp, #-8]
   3124c:	str	r2, [r3, #12]
   31250:	ldr	r3, [fp, #-12]
   31254:	uxth	r3, r3
   31258:	ldrh	r2, [fp, #-18]	; 0xffffffee
   3125c:	ldr	r1, [fp, #-16]
   31260:	ldr	r0, [fp, #-8]
   31264:	bl	2bfc8 <flatcc_builder_default_alloc@@Base+0x444>
   31268:	mov	r3, r0
   3126c:	mov	r0, r3
   31270:	sub	sp, fp, #4
   31274:	pop	{fp, pc}
   31278:	muleq	r1, r8, r4
   3127c:	andeq	r0, r0, sp, ror #13
   31280:	andeq	sp, r1, r8, lsr #23
   31284:	andeq	sp, r1, r0, ror #28
   31288:	strdeq	r7, [r0], -ip
   3128c:	andeq	lr, r1, ip, asr r4
   31290:	andeq	r0, r0, lr, ror #13
   31294:	andeq	sp, r1, ip, ror #22
   31298:	andeq	sp, r1, r0, asr #30
   3129c:	strdeq	lr, [r1], -ip
   312a0:	strdeq	r0, [r0], -r8
   312a4:	andeq	sp, r1, ip, lsl #22
   312a8:	andeq	sp, r1, r4, ror #22
   312ac:			; <UNDEFINED> instruction: 0x9e3779b1

000312b0 <flatcc_builder_table_edit@@Base>:
   312b0:	push	{fp, lr}
   312b4:	add	fp, sp, #4
   312b8:	sub	sp, sp, #8
   312bc:	str	r0, [fp, #-8]
   312c0:	str	r1, [fp, #-12]
   312c4:	ldr	r3, [fp, #-8]
   312c8:	ldr	r3, [r3, #32]
   312cc:	ldrh	r3, [r3, #14]
   312d0:	cmp	r3, #3
   312d4:	beq	312f8 <flatcc_builder_table_edit@@Base+0x48>
   312d8:	ldr	r3, [pc, #64]	; 31320 <flatcc_builder_table_edit@@Base+0x70>
   312dc:	add	r3, pc, r3
   312e0:	ldr	r2, [pc, #60]	; 31324 <flatcc_builder_table_edit@@Base+0x74>
   312e4:	ldr	r1, [pc, #60]	; 31328 <flatcc_builder_table_edit@@Base+0x78>
   312e8:	add	r1, pc, r1
   312ec:	ldr	r0, [pc, #56]	; 3132c <flatcc_builder_table_edit@@Base+0x7c>
   312f0:	add	r0, pc, r0
   312f4:	bl	14610 <__assert_fail@plt>
   312f8:	ldr	r3, [fp, #-8]
   312fc:	ldr	r2, [r3, #16]
   31300:	ldr	r3, [fp, #-8]
   31304:	ldr	r1, [r3, #20]
   31308:	ldr	r3, [fp, #-12]
   3130c:	sub	r3, r1, r3
   31310:	add	r3, r2, r3
   31314:	mov	r0, r3
   31318:	sub	sp, fp, #4
   3131c:	pop	{fp, pc}
   31320:	andeq	lr, r1, r0, asr #6
   31324:	andeq	r0, r0, r2, lsl #14
   31328:	andeq	sp, r1, r4, lsr sl
   3132c:	andeq	sp, r1, ip, ror #25

00031330 <flatcc_builder_table_add_copy@@Base>:
   31330:	push	{fp, lr}
   31334:	add	fp, sp, #4
   31338:	sub	sp, sp, #24
   3133c:	str	r0, [fp, #-16]
   31340:	str	r1, [fp, #-20]	; 0xffffffec
   31344:	str	r2, [fp, #-24]	; 0xffffffe8
   31348:	str	r3, [fp, #-28]	; 0xffffffe4
   3134c:	ldrh	r3, [fp, #4]
   31350:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31354:	ldr	r1, [fp, #-20]	; 0xffffffec
   31358:	ldr	r0, [fp, #-16]
   3135c:	bl	31134 <flatcc_builder_table_add@@Base>
   31360:	str	r0, [fp, #-8]
   31364:	ldr	r3, [fp, #-8]
   31368:	cmp	r3, #0
   3136c:	beq	31380 <flatcc_builder_table_add_copy@@Base+0x50>
   31370:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31374:	ldr	r1, [fp, #-24]	; 0xffffffe8
   31378:	ldr	r0, [fp, #-8]
   3137c:	bl	14544 <memcpy@plt>
   31380:	ldr	r3, [fp, #-8]
   31384:	mov	r0, r3
   31388:	sub	sp, fp, #4
   3138c:	pop	{fp, pc}

00031390 <flatcc_builder_table_add_offset@@Base>:
   31390:	push	{fp, lr}
   31394:	add	fp, sp, #4
   31398:	sub	sp, sp, #8
   3139c:	str	r0, [fp, #-8]
   313a0:	str	r1, [fp, #-12]
   313a4:	ldr	r3, [fp, #-8]
   313a8:	ldr	r3, [r3, #32]
   313ac:	ldrh	r3, [r3, #14]
   313b0:	cmp	r3, #3
   313b4:	beq	313d8 <flatcc_builder_table_add_offset@@Base+0x48>
   313b8:	ldr	r3, [pc, #228]	; 314a4 <flatcc_builder_table_add_offset@@Base+0x114>
   313bc:	add	r3, pc, r3
   313c0:	ldr	r2, [pc, #224]	; 314a8 <flatcc_builder_table_add_offset@@Base+0x118>
   313c4:	ldr	r1, [pc, #224]	; 314ac <flatcc_builder_table_add_offset@@Base+0x11c>
   313c8:	add	r1, pc, r1
   313cc:	ldr	r0, [pc, #220]	; 314b0 <flatcc_builder_table_add_offset@@Base+0x120>
   313d0:	add	r0, pc, r0
   313d4:	bl	14610 <__assert_fail@plt>
   313d8:	ldr	r3, [fp, #-12]
   313dc:	cmp	r3, #0
   313e0:	blt	313f4 <flatcc_builder_table_add_offset@@Base+0x64>
   313e4:	ldr	r3, [fp, #-12]
   313e8:	ldr	r2, [pc, #196]	; 314b4 <flatcc_builder_table_add_offset@@Base+0x124>
   313ec:	cmp	r3, r2
   313f0:	ble	31414 <flatcc_builder_table_add_offset@@Base+0x84>
   313f4:	ldr	r3, [pc, #188]	; 314b8 <flatcc_builder_table_add_offset@@Base+0x128>
   313f8:	add	r3, pc, r3
   313fc:	ldr	r2, [pc, #184]	; 314bc <flatcc_builder_table_add_offset@@Base+0x12c>
   31400:	ldr	r1, [pc, #184]	; 314c0 <flatcc_builder_table_add_offset@@Base+0x130>
   31404:	add	r1, pc, r1
   31408:	ldr	r0, [pc, #180]	; 314c4 <flatcc_builder_table_add_offset@@Base+0x134>
   3140c:	add	r0, pc, r0
   31410:	bl	14610 <__assert_fail@plt>
   31414:	ldr	r3, [fp, #-8]
   31418:	ldr	r2, [r3, #4]
   3141c:	ldr	r3, [fp, #-12]
   31420:	lsl	r3, r3, #1
   31424:	add	r3, r2, r3
   31428:	ldrh	r3, [r3]
   3142c:	cmp	r3, #0
   31430:	beq	31454 <flatcc_builder_table_add_offset@@Base+0xc4>
   31434:	ldr	r3, [pc, #140]	; 314c8 <flatcc_builder_table_add_offset@@Base+0x138>
   31438:	add	r3, pc, r3
   3143c:	ldr	r2, [pc, #136]	; 314cc <flatcc_builder_table_add_offset@@Base+0x13c>
   31440:	ldr	r1, [pc, #136]	; 314d0 <flatcc_builder_table_add_offset@@Base+0x140>
   31444:	add	r1, pc, r1
   31448:	ldr	r0, [pc, #132]	; 314d4 <flatcc_builder_table_add_offset@@Base+0x144>
   3144c:	add	r0, pc, r0
   31450:	bl	14610 <__assert_fail@plt>
   31454:	ldr	r3, [fp, #-8]
   31458:	ldr	r2, [r3, #12]
   3145c:	ldr	r3, [fp, #-12]
   31460:	eor	r3, r3, r2
   31464:	ldr	r2, [pc, #108]	; 314d8 <flatcc_builder_table_add_offset@@Base+0x148>
   31468:	mul	r3, r2, r3
   3146c:	eor	r3, r3, #4
   31470:	ldr	r2, [pc, #96]	; 314d8 <flatcc_builder_table_add_offset@@Base+0x148>
   31474:	mul	r2, r2, r3
   31478:	ldr	r3, [fp, #-8]
   3147c:	str	r2, [r3, #12]
   31480:	ldr	r3, [fp, #-12]
   31484:	uxth	r3, r3
   31488:	mov	r1, r3
   3148c:	ldr	r0, [fp, #-8]
   31490:	bl	2c0d4 <flatcc_builder_default_alloc@@Base+0x550>
   31494:	mov	r3, r0
   31498:	mov	r0, r3
   3149c:	sub	sp, fp, #4
   314a0:	pop	{fp, pc}
   314a4:	andeq	lr, r1, ip, ror r2
   314a8:	andeq	r0, r0, r3, lsl r7
   314ac:	andeq	sp, r1, r4, asr r9
   314b0:	andeq	sp, r1, ip, lsl #24
   314b4:	strdeq	r7, [r0], -ip
   314b8:	andeq	lr, r1, r0, asr #4
   314bc:	andeq	r0, r0, r4, lsl r7
   314c0:	andeq	sp, r1, r8, lsl r9
   314c4:	andeq	sp, r1, ip, ror #25
   314c8:	andeq	lr, r1, r0, lsl #4
   314cc:	andeq	r0, r0, fp, lsl r7
   314d0:	ldrdeq	sp, [r1], -r8
   314d4:	andeq	sp, r1, r0, lsr r9
   314d8:			; <UNDEFINED> instruction: 0x9e3779b1

000314dc <flatcc_builder_push_buffer_alignment@@Base>:
   314dc:	push	{fp}		; (str fp, [sp, #-4]!)
   314e0:	add	fp, sp, #0
   314e4:	sub	sp, sp, #20
   314e8:	str	r0, [fp, #-16]
   314ec:	ldr	r3, [fp, #-16]
   314f0:	ldrh	r3, [r3, #128]	; 0x80
   314f4:	strh	r3, [fp, #-6]
   314f8:	ldr	r3, [fp, #-16]
   314fc:	mov	r2, #4
   31500:	strh	r2, [r3, #128]	; 0x80
   31504:	ldrh	r3, [fp, #-6]
   31508:	mov	r0, r3
   3150c:	add	sp, fp, #0
   31510:	pop	{fp}		; (ldr fp, [sp], #4)
   31514:	bx	lr

00031518 <flatcc_builder_pop_buffer_alignment@@Base>:
   31518:	push	{fp, lr}
   3151c:	add	fp, sp, #4
   31520:	sub	sp, sp, #8
   31524:	str	r0, [fp, #-8]
   31528:	mov	r3, r1
   3152c:	strh	r3, [fp, #-10]
   31530:	ldrh	r3, [fp, #-10]
   31534:	mov	r1, r3
   31538:	ldr	r0, [fp, #-8]
   3153c:	bl	2ca40 <flatcc_builder_clear@@Base+0xb0>
   31540:	nop			; (mov r0, r0)
   31544:	sub	sp, fp, #4
   31548:	pop	{fp, pc}

0003154c <flatcc_builder_get_buffer_alignment@@Base>:
   3154c:	push	{fp}		; (str fp, [sp, #-4]!)
   31550:	add	fp, sp, #0
   31554:	sub	sp, sp, #12
   31558:	str	r0, [fp, #-8]
   3155c:	ldr	r3, [fp, #-8]
   31560:	ldrh	r3, [r3, #128]	; 0x80
   31564:	mov	r0, r3
   31568:	add	sp, fp, #0
   3156c:	pop	{fp}		; (ldr fp, [sp], #4)
   31570:	bx	lr

00031574 <flatcc_builder_set_vtable_clustering@@Base>:
   31574:	push	{fp}		; (str fp, [sp, #-4]!)
   31578:	add	fp, sp, #0
   3157c:	sub	sp, sp, #12
   31580:	str	r0, [fp, #-8]
   31584:	str	r1, [fp, #-12]
   31588:	ldr	r3, [fp, #-12]
   3158c:	cmp	r3, #0
   31590:	moveq	r3, #1
   31594:	movne	r3, #0
   31598:	uxtb	r3, r3
   3159c:	mov	r2, r3
   315a0:	ldr	r3, [fp, #-8]
   315a4:	str	r2, [r3, #180]	; 0xb4
   315a8:	nop			; (mov r0, r0)
   315ac:	add	sp, fp, #0
   315b0:	pop	{fp}		; (ldr fp, [sp], #4)
   315b4:	bx	lr

000315b8 <flatcc_builder_set_block_align@@Base>:
   315b8:	push	{fp}		; (str fp, [sp, #-4]!)
   315bc:	add	fp, sp, #0
   315c0:	sub	sp, sp, #12
   315c4:	str	r0, [fp, #-8]
   315c8:	mov	r3, r1
   315cc:	strh	r3, [fp, #-10]
   315d0:	ldr	r3, [fp, #-8]
   315d4:	ldrh	r2, [fp, #-10]
   315d8:	strh	r2, [r3, #132]	; 0x84
   315dc:	nop			; (mov r0, r0)
   315e0:	add	sp, fp, #0
   315e4:	pop	{fp}		; (ldr fp, [sp], #4)
   315e8:	bx	lr

000315ec <flatcc_builder_get_level@@Base>:
   315ec:	push	{fp}		; (str fp, [sp, #-4]!)
   315f0:	add	fp, sp, #0
   315f4:	sub	sp, sp, #12
   315f8:	str	r0, [fp, #-8]
   315fc:	ldr	r3, [fp, #-8]
   31600:	ldr	r3, [r3, #156]	; 0x9c
   31604:	mov	r0, r3
   31608:	add	sp, fp, #0
   3160c:	pop	{fp}		; (ldr fp, [sp], #4)
   31610:	bx	lr

00031614 <flatcc_builder_set_max_level@@Base>:
   31614:	push	{fp}		; (str fp, [sp, #-4]!)
   31618:	add	fp, sp, #0
   3161c:	sub	sp, sp, #12
   31620:	str	r0, [fp, #-8]
   31624:	str	r1, [fp, #-12]
   31628:	ldr	r3, [fp, #-8]
   3162c:	ldr	r2, [fp, #-12]
   31630:	str	r2, [r3, #176]	; 0xb0
   31634:	ldr	r3, [fp, #-8]
   31638:	ldr	r2, [r3, #160]	; 0xa0
   3163c:	ldr	r3, [fp, #-8]
   31640:	ldr	r3, [r3, #176]	; 0xb0
   31644:	cmp	r2, r3
   31648:	bge	3165c <flatcc_builder_set_max_level@@Base+0x48>
   3164c:	ldr	r3, [fp, #-8]
   31650:	ldr	r2, [r3, #176]	; 0xb0
   31654:	ldr	r3, [fp, #-8]
   31658:	str	r2, [r3, #160]	; 0xa0
   3165c:	nop			; (mov r0, r0)
   31660:	add	sp, fp, #0
   31664:	pop	{fp}		; (ldr fp, [sp], #4)
   31668:	bx	lr

0003166c <flatcc_builder_get_buffer_size@@Base>:
   3166c:	push	{fp}		; (str fp, [sp, #-4]!)
   31670:	add	fp, sp, #0
   31674:	sub	sp, sp, #12
   31678:	str	r0, [fp, #-8]
   3167c:	ldr	r3, [fp, #-8]
   31680:	ldr	r2, [r3, #140]	; 0x8c
   31684:	ldr	r3, [fp, #-8]
   31688:	ldr	r3, [r3, #136]	; 0x88
   3168c:	sub	r3, r2, r3
   31690:	mov	r0, r3
   31694:	add	sp, fp, #0
   31698:	pop	{fp}		; (ldr fp, [sp], #4)
   3169c:	bx	lr

000316a0 <flatcc_builder_get_buffer_start@@Base>:
   316a0:	push	{fp}		; (str fp, [sp, #-4]!)
   316a4:	add	fp, sp, #0
   316a8:	sub	sp, sp, #12
   316ac:	str	r0, [fp, #-8]
   316b0:	ldr	r3, [fp, #-8]
   316b4:	ldr	r3, [r3, #136]	; 0x88
   316b8:	mov	r0, r3
   316bc:	add	sp, fp, #0
   316c0:	pop	{fp}		; (ldr fp, [sp], #4)
   316c4:	bx	lr

000316c8 <flatcc_builder_get_buffer_end@@Base>:
   316c8:	push	{fp}		; (str fp, [sp, #-4]!)
   316cc:	add	fp, sp, #0
   316d0:	sub	sp, sp, #12
   316d4:	str	r0, [fp, #-8]
   316d8:	ldr	r3, [fp, #-8]
   316dc:	ldr	r3, [r3, #140]	; 0x8c
   316e0:	mov	r0, r3
   316e4:	add	sp, fp, #0
   316e8:	pop	{fp}		; (ldr fp, [sp], #4)
   316ec:	bx	lr

000316f0 <flatcc_builder_set_vtable_cache_limit@@Base>:
   316f0:	push	{fp}		; (str fp, [sp, #-4]!)
   316f4:	add	fp, sp, #0
   316f8:	sub	sp, sp, #12
   316fc:	str	r0, [fp, #-8]
   31700:	str	r1, [fp, #-12]
   31704:	ldr	r3, [fp, #-8]
   31708:	ldr	r2, [fp, #-12]
   3170c:	str	r2, [r3, #172]	; 0xac
   31710:	nop			; (mov r0, r0)
   31714:	add	sp, fp, #0
   31718:	pop	{fp}		; (ldr fp, [sp], #4)
   3171c:	bx	lr

00031720 <flatcc_builder_set_identifier@@Base>:
   31720:	push	{fp}		; (str fp, [sp, #-4]!)
   31724:	add	fp, sp, #0
   31728:	sub	sp, sp, #12
   3172c:	str	r0, [fp, #-8]
   31730:	str	r1, [fp, #-12]
   31734:	ldr	r1, [pc, #60]	; 31778 <flatcc_builder_set_identifier@@Base+0x58>
   31738:	add	r1, pc, r1
   3173c:	ldr	r3, [fp, #-8]
   31740:	add	r2, r3, #168	; 0xa8
   31744:	ldr	r3, [fp, #-12]
   31748:	cmp	r3, #0
   3174c:	beq	31758 <flatcc_builder_set_identifier@@Base+0x38>
   31750:	ldr	r3, [fp, #-12]
   31754:	b	31760 <flatcc_builder_set_identifier@@Base+0x40>
   31758:	ldr	r3, [pc, #28]	; 3177c <flatcc_builder_set_identifier@@Base+0x5c>
   3175c:	ldr	r3, [r1, r3]
   31760:	ldr	r3, [r3]
   31764:	str	r3, [r2]
   31768:	nop			; (mov r0, r0)
   3176c:	add	sp, fp, #0
   31770:	pop	{fp}		; (ldr fp, [sp], #4)
   31774:	bx	lr
   31778:	andeq	r0, r3, r0, asr #17
   3177c:	andeq	r0, r0, r4, rrx

00031780 <flatcc_builder_get_type@@Base>:
   31780:	push	{fp}		; (str fp, [sp, #-4]!)
   31784:	add	fp, sp, #0
   31788:	sub	sp, sp, #12
   3178c:	str	r0, [fp, #-8]
   31790:	ldr	r3, [fp, #-8]
   31794:	ldr	r3, [r3, #32]
   31798:	cmp	r3, #0
   3179c:	beq	317b0 <flatcc_builder_get_type@@Base+0x30>
   317a0:	ldr	r3, [fp, #-8]
   317a4:	ldr	r3, [r3, #32]
   317a8:	ldrh	r3, [r3, #14]
   317ac:	b	317b4 <flatcc_builder_get_type@@Base+0x34>
   317b0:	mov	r3, #0
   317b4:	mov	r0, r3
   317b8:	add	sp, fp, #0
   317bc:	pop	{fp}		; (ldr fp, [sp], #4)
   317c0:	bx	lr

000317c4 <flatcc_builder_get_type_at@@Base>:
   317c4:	push	{fp}		; (str fp, [sp, #-4]!)
   317c8:	add	fp, sp, #0
   317cc:	sub	sp, sp, #12
   317d0:	str	r0, [fp, #-8]
   317d4:	str	r1, [fp, #-12]
   317d8:	ldr	r3, [fp, #-12]
   317dc:	cmp	r3, #0
   317e0:	ble	317f8 <flatcc_builder_get_type_at@@Base+0x34>
   317e4:	ldr	r3, [fp, #-8]
   317e8:	ldr	r2, [r3, #156]	; 0x9c
   317ec:	ldr	r3, [fp, #-12]
   317f0:	cmp	r2, r3
   317f4:	bge	31800 <flatcc_builder_get_type_at@@Base+0x3c>
   317f8:	mov	r3, #0
   317fc:	b	31834 <flatcc_builder_get_type_at@@Base+0x70>
   31800:	ldr	r3, [fp, #-8]
   31804:	ldr	r2, [r3, #32]
   31808:	ldr	r3, [fp, #-8]
   3180c:	ldr	r3, [r3, #156]	; 0x9c
   31810:	ldr	r1, [fp, #-12]
   31814:	sub	r3, r1, r3
   31818:	mov	r1, r3
   3181c:	mov	r3, r1
   31820:	lsl	r3, r3, #3
   31824:	add	r3, r3, r1
   31828:	lsl	r3, r3, #2
   3182c:	add	r3, r2, r3
   31830:	ldrh	r3, [r3, #14]
   31834:	mov	r0, r3
   31838:	add	sp, fp, #0
   3183c:	pop	{fp}		; (ldr fp, [sp], #4)
   31840:	bx	lr

00031844 <flatcc_builder_get_direct_buffer@@Base>:
   31844:	push	{fp, lr}
   31848:	add	fp, sp, #4
   3184c:	sub	sp, sp, #8
   31850:	str	r0, [fp, #-8]
   31854:	str	r1, [fp, #-12]
   31858:	ldr	r3, [fp, #-8]
   3185c:	ldr	r3, [r3, #184]	; 0xb8
   31860:	cmp	r3, #0
   31864:	beq	31884 <flatcc_builder_get_direct_buffer@@Base+0x40>
   31868:	ldr	r3, [fp, #-8]
   3186c:	add	r3, r3, #188	; 0xbc
   31870:	ldr	r1, [fp, #-12]
   31874:	mov	r0, r3
   31878:	bl	2bab0 <main@@Base+0xdb0>
   3187c:	mov	r3, r0
   31880:	b	318a0 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   31884:	ldr	r3, [fp, #-12]
   31888:	cmp	r3, #0
   3188c:	beq	3189c <flatcc_builder_get_direct_buffer@@Base+0x58>
   31890:	ldr	r3, [fp, #-12]
   31894:	mov	r2, #0
   31898:	str	r2, [r3]
   3189c:	mov	r3, #0
   318a0:	mov	r0, r3
   318a4:	sub	sp, fp, #4
   318a8:	pop	{fp, pc}

000318ac <flatcc_builder_copy_buffer@@Base>:
   318ac:	push	{fp, lr}
   318b0:	add	fp, sp, #4
   318b4:	sub	sp, sp, #16
   318b8:	str	r0, [fp, #-8]
   318bc:	str	r1, [fp, #-12]
   318c0:	str	r2, [fp, #-16]
   318c4:	ldr	r3, [fp, #-8]
   318c8:	ldr	r3, [r3, #184]	; 0xb8
   318cc:	cmp	r3, #0
   318d0:	bne	318dc <flatcc_builder_copy_buffer@@Base+0x30>
   318d4:	mov	r3, #0
   318d8:	b	31928 <flatcc_builder_copy_buffer@@Base+0x7c>
   318dc:	ldr	r3, [fp, #-8]
   318e0:	add	r3, r3, #188	; 0xbc
   318e4:	ldr	r2, [fp, #-16]
   318e8:	ldr	r1, [fp, #-12]
   318ec:	mov	r0, r3
   318f0:	bl	32674 <flatcc_emitter_copy_buffer@@Base>
   318f4:	str	r0, [fp, #-12]
   318f8:	ldr	r3, [fp, #-12]
   318fc:	cmp	r3, #0
   31900:	bne	31924 <flatcc_builder_copy_buffer@@Base+0x78>
   31904:	ldr	r3, [pc, #40]	; 31934 <flatcc_builder_copy_buffer@@Base+0x88>
   31908:	add	r3, pc, r3
   3190c:	ldr	r2, [pc, #36]	; 31938 <flatcc_builder_copy_buffer@@Base+0x8c>
   31910:	ldr	r1, [pc, #36]	; 3193c <flatcc_builder_copy_buffer@@Base+0x90>
   31914:	add	r1, pc, r1
   31918:	ldr	r0, [pc, #32]	; 31940 <flatcc_builder_copy_buffer@@Base+0x94>
   3191c:	add	r0, pc, r0
   31920:	bl	14610 <__assert_fail@plt>
   31924:	ldr	r3, [fp, #-12]
   31928:	mov	r0, r3
   3192c:	sub	sp, fp, #4
   31930:	pop	{fp, pc}
   31934:	andeq	sp, r1, r0, asr sp
   31938:	andeq	r0, r0, r6, lsl #15
   3193c:	andeq	sp, r1, r8, lsl #8
   31940:	andeq	sp, r1, r0, lsr #16

00031944 <flatcc_builder_finalize_buffer@@Base>:
   31944:	push	{fp, lr}
   31948:	add	fp, sp, #4
   3194c:	sub	sp, sp, #16
   31950:	str	r0, [fp, #-16]
   31954:	str	r1, [fp, #-20]	; 0xffffffec
   31958:	ldr	r0, [fp, #-16]
   3195c:	bl	3166c <flatcc_builder_get_buffer_size@@Base>
   31960:	str	r0, [fp, #-8]
   31964:	ldr	r3, [fp, #-20]	; 0xffffffec
   31968:	cmp	r3, #0
   3196c:	beq	3197c <flatcc_builder_finalize_buffer@@Base+0x38>
   31970:	ldr	r3, [fp, #-20]	; 0xffffffec
   31974:	ldr	r2, [fp, #-8]
   31978:	str	r2, [r3]
   3197c:	ldr	r0, [fp, #-8]
   31980:	bl	14574 <malloc@plt>
   31984:	mov	r3, r0
   31988:	str	r3, [fp, #-12]
   3198c:	ldr	r3, [fp, #-12]
   31990:	cmp	r3, #0
   31994:	bne	319b8 <flatcc_builder_finalize_buffer@@Base+0x74>
   31998:	ldr	r3, [pc, #136]	; 31a28 <flatcc_builder_finalize_buffer@@Base+0xe4>
   3199c:	add	r3, pc, r3
   319a0:	ldr	r2, [pc, #132]	; 31a2c <flatcc_builder_finalize_buffer@@Base+0xe8>
   319a4:	ldr	r1, [pc, #132]	; 31a30 <flatcc_builder_finalize_buffer@@Base+0xec>
   319a8:	add	r1, pc, r1
   319ac:	ldr	r0, [pc, #128]	; 31a34 <flatcc_builder_finalize_buffer@@Base+0xf0>
   319b0:	add	r0, pc, r0
   319b4:	bl	14610 <__assert_fail@plt>
   319b8:	ldr	r2, [fp, #-8]
   319bc:	ldr	r1, [fp, #-12]
   319c0:	ldr	r0, [fp, #-16]
   319c4:	bl	318ac <flatcc_builder_copy_buffer@@Base>
   319c8:	mov	r3, r0
   319cc:	cmp	r3, #0
   319d0:	bne	319f4 <flatcc_builder_finalize_buffer@@Base+0xb0>
   319d4:	ldr	r3, [pc, #92]	; 31a38 <flatcc_builder_finalize_buffer@@Base+0xf4>
   319d8:	add	r3, pc, r3
   319dc:	ldr	r2, [pc, #88]	; 31a3c <flatcc_builder_finalize_buffer@@Base+0xf8>
   319e0:	ldr	r1, [pc, #88]	; 31a40 <flatcc_builder_finalize_buffer@@Base+0xfc>
   319e4:	add	r1, pc, r1
   319e8:	ldr	r0, [pc, #84]	; 31a44 <flatcc_builder_finalize_buffer@@Base+0x100>
   319ec:	add	r0, pc, r0
   319f0:	bl	14610 <__assert_fail@plt>
   319f4:	ldr	r3, [fp, #-12]
   319f8:	cmp	r3, #0
   319fc:	bne	31a18 <flatcc_builder_finalize_buffer@@Base+0xd4>
   31a00:	ldr	r3, [fp, #-20]	; 0xffffffec
   31a04:	cmp	r3, #0
   31a08:	beq	31a18 <flatcc_builder_finalize_buffer@@Base+0xd4>
   31a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31a10:	mov	r2, #0
   31a14:	str	r2, [r3]
   31a18:	ldr	r3, [fp, #-12]
   31a1c:	mov	r0, r3
   31a20:	sub	sp, fp, #4
   31a24:	pop	{fp, pc}
   31a28:	ldrdeq	sp, [r1], -r8
   31a2c:	muleq	r0, r8, r7
   31a30:	andeq	sp, r1, r4, ror r3
   31a34:	andeq	sp, r1, ip, asr #7
   31a38:	muleq	r1, ip, ip
   31a3c:	muleq	r0, ip, r7
   31a40:	andeq	sp, r1, r8, lsr r3
   31a44:	muleq	r1, r0, r3

00031a48 <flatcc_builder_finalize_aligned_buffer@@Base>:
   31a48:	push	{fp, lr}
   31a4c:	add	fp, sp, #4
   31a50:	sub	sp, sp, #24
   31a54:	str	r0, [fp, #-24]	; 0xffffffe8
   31a58:	str	r1, [fp, #-28]	; 0xffffffe4
   31a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a60:	bl	3166c <flatcc_builder_get_buffer_size@@Base>
   31a64:	str	r0, [fp, #-12]
   31a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31a6c:	cmp	r3, #0
   31a70:	beq	31a80 <flatcc_builder_finalize_aligned_buffer@@Base+0x38>
   31a74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31a78:	ldr	r2, [fp, #-12]
   31a7c:	str	r2, [r3]
   31a80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31a84:	bl	3154c <flatcc_builder_get_buffer_alignment@@Base>
   31a88:	mov	r3, r0
   31a8c:	str	r3, [fp, #-16]
   31a90:	ldr	r2, [fp, #-12]
   31a94:	ldr	r3, [fp, #-16]
   31a98:	add	r3, r2, r3
   31a9c:	sub	r2, r3, #1
   31aa0:	ldr	r3, [fp, #-16]
   31aa4:	rsb	r3, r3, #0
   31aa8:	and	r3, r3, r2
   31aac:	str	r3, [fp, #-12]
   31ab0:	ldr	r1, [fp, #-12]
   31ab4:	ldr	r0, [fp, #-16]
   31ab8:	bl	2b9bc <main@@Base+0xcbc>
   31abc:	str	r0, [fp, #-8]
   31ac0:	ldr	r3, [fp, #-8]
   31ac4:	cmp	r3, #0
   31ac8:	beq	31afc <flatcc_builder_finalize_aligned_buffer@@Base+0xb4>
   31acc:	ldr	r2, [fp, #-12]
   31ad0:	ldr	r1, [fp, #-8]
   31ad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ad8:	bl	318ac <flatcc_builder_copy_buffer@@Base>
   31adc:	mov	r3, r0
   31ae0:	cmp	r3, #0
   31ae4:	bne	31b00 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   31ae8:	ldr	r0, [fp, #-8]
   31aec:	bl	14538 <free@plt>
   31af0:	mov	r3, #0
   31af4:	str	r3, [fp, #-8]
   31af8:	b	31b00 <flatcc_builder_finalize_aligned_buffer@@Base+0xb8>
   31afc:	nop			; (mov r0, r0)
   31b00:	ldr	r3, [fp, #-8]
   31b04:	cmp	r3, #0
   31b08:	bne	31b24 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   31b0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31b10:	cmp	r3, #0
   31b14:	beq	31b24 <flatcc_builder_finalize_aligned_buffer@@Base+0xdc>
   31b18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31b1c:	mov	r2, #0
   31b20:	str	r2, [r3]
   31b24:	ldr	r3, [fp, #-8]
   31b28:	mov	r0, r3
   31b2c:	sub	sp, fp, #4
   31b30:	pop	{fp, pc}

00031b34 <flatcc_builder_aligned_alloc@@Base>:
   31b34:	push	{fp, lr}
   31b38:	add	fp, sp, #4
   31b3c:	sub	sp, sp, #8
   31b40:	str	r0, [fp, #-8]
   31b44:	str	r1, [fp, #-12]
   31b48:	ldr	r1, [fp, #-12]
   31b4c:	ldr	r0, [fp, #-8]
   31b50:	bl	2b9bc <main@@Base+0xcbc>
   31b54:	mov	r3, r0
   31b58:	mov	r0, r3
   31b5c:	sub	sp, fp, #4
   31b60:	pop	{fp, pc}

00031b64 <flatcc_builder_aligned_free@@Base>:
   31b64:	push	{fp, lr}
   31b68:	add	fp, sp, #4
   31b6c:	sub	sp, sp, #8
   31b70:	str	r0, [fp, #-8]
   31b74:	ldr	r0, [fp, #-8]
   31b78:	bl	14538 <free@plt>
   31b7c:	nop			; (mov r0, r0)
   31b80:	sub	sp, fp, #4
   31b84:	pop	{fp, pc}

00031b88 <flatcc_builder_get_emit_context@@Base>:
   31b88:	push	{fp}		; (str fp, [sp, #-4]!)
   31b8c:	add	fp, sp, #0
   31b90:	sub	sp, sp, #12
   31b94:	str	r0, [fp, #-8]
   31b98:	ldr	r3, [fp, #-8]
   31b9c:	ldr	r3, [r3, #36]	; 0x24
   31ba0:	mov	r0, r3
   31ba4:	add	sp, fp, #0
   31ba8:	pop	{fp}		; (ldr fp, [sp], #4)
   31bac:	bx	lr
   31bb0:	push	{fp, lr}
   31bb4:	add	fp, sp, #4
   31bb8:	sub	sp, sp, #16
   31bbc:	str	r0, [fp, #-16]
   31bc0:	mov	r3, #0
   31bc4:	str	r3, [fp, #-8]
   31bc8:	ldr	r3, [fp, #-16]
   31bcc:	ldr	r3, [r3]
   31bd0:	cmp	r3, #0
   31bd4:	beq	31c2c <flatcc_builder_get_emit_context@@Base+0xa4>
   31bd8:	ldr	r3, [fp, #-16]
   31bdc:	ldr	r3, [r3]
   31be0:	ldr	r2, [r3, #2948]	; 0xb84
   31be4:	ldr	r3, [fp, #-16]
   31be8:	ldr	r3, [r3, #4]
   31bec:	cmp	r2, r3
   31bf0:	beq	31c2c <flatcc_builder_get_emit_context@@Base+0xa4>
   31bf4:	ldr	r3, [fp, #-16]
   31bf8:	ldr	r3, [r3]
   31bfc:	ldr	r3, [r3, #2948]	; 0xb84
   31c00:	ldr	r2, [fp, #-16]
   31c04:	ldr	r2, [r2]
   31c08:	ldr	r2, [r2, #2952]	; 0xb88
   31c0c:	sub	r2, r2, #2944	; 0xb80
   31c10:	str	r2, [r3, #2952]	; 0xb88
   31c14:	ldr	r3, [fp, #-16]
   31c18:	ldr	r3, [r3]
   31c1c:	ldr	r2, [r3, #2948]	; 0xb84
   31c20:	ldr	r3, [fp, #-16]
   31c24:	str	r2, [r3]
   31c28:	b	31d54 <flatcc_builder_get_emit_context@@Base+0x1cc>
   31c2c:	ldr	r0, [pc, #368]	; 31da4 <flatcc_builder_get_emit_context@@Base+0x21c>
   31c30:	bl	14574 <malloc@plt>
   31c34:	mov	r3, r0
   31c38:	str	r3, [fp, #-8]
   31c3c:	ldr	r3, [fp, #-8]
   31c40:	cmp	r3, #0
   31c44:	bne	31c50 <flatcc_builder_get_emit_context@@Base+0xc8>
   31c48:	mvn	r3, #0
   31c4c:	b	31d98 <flatcc_builder_get_emit_context@@Base+0x210>
   31c50:	ldr	r3, [fp, #-16]
   31c54:	ldr	r3, [r3, #28]
   31c58:	add	r2, r3, #2944	; 0xb80
   31c5c:	ldr	r3, [fp, #-16]
   31c60:	str	r2, [r3, #28]
   31c64:	ldr	r3, [fp, #-16]
   31c68:	ldr	r3, [r3]
   31c6c:	cmp	r3, #0
   31c70:	beq	31cc4 <flatcc_builder_get_emit_context@@Base+0x13c>
   31c74:	ldr	r3, [fp, #-16]
   31c78:	ldr	r2, [r3, #4]
   31c7c:	ldr	r3, [fp, #-8]
   31c80:	str	r2, [r3, #2948]	; 0xb84
   31c84:	ldr	r3, [fp, #-16]
   31c88:	ldr	r2, [r3]
   31c8c:	ldr	r3, [fp, #-8]
   31c90:	str	r2, [r3, #2944]	; 0xb80
   31c94:	ldr	r3, [fp, #-16]
   31c98:	ldr	r3, [r3]
   31c9c:	ldr	r2, [fp, #-8]
   31ca0:	str	r2, [r3, #2948]	; 0xb84
   31ca4:	ldr	r3, [fp, #-16]
   31ca8:	ldr	r3, [r3, #4]
   31cac:	ldr	r2, [fp, #-8]
   31cb0:	str	r2, [r3, #2944]	; 0xb80
   31cb4:	ldr	r3, [fp, #-16]
   31cb8:	ldr	r2, [fp, #-8]
   31cbc:	str	r2, [r3]
   31cc0:	b	31d54 <flatcc_builder_get_emit_context@@Base+0x1cc>
   31cc4:	ldr	r3, [fp, #-16]
   31cc8:	ldr	r2, [fp, #-8]
   31ccc:	str	r2, [r3]
   31cd0:	ldr	r3, [fp, #-16]
   31cd4:	ldr	r2, [fp, #-8]
   31cd8:	str	r2, [r3, #4]
   31cdc:	ldr	r3, [fp, #-8]
   31ce0:	ldr	r2, [fp, #-8]
   31ce4:	str	r2, [r3, #2944]	; 0xb80
   31ce8:	ldr	r3, [fp, #-8]
   31cec:	ldr	r2, [fp, #-8]
   31cf0:	str	r2, [r3, #2948]	; 0xb84
   31cf4:	ldr	r3, [fp, #-16]
   31cf8:	ldr	r3, [r3]
   31cfc:	add	r2, r3, #1472	; 0x5c0
   31d00:	ldr	r3, [fp, #-16]
   31d04:	str	r2, [r3, #8]
   31d08:	ldr	r3, [fp, #-16]
   31d0c:	ldr	r2, [r3, #8]
   31d10:	ldr	r3, [fp, #-16]
   31d14:	str	r2, [r3, #16]
   31d18:	ldr	r3, [fp, #-16]
   31d1c:	mov	r2, #1472	; 0x5c0
   31d20:	str	r2, [r3, #12]
   31d24:	ldr	r3, [fp, #-16]
   31d28:	ldr	r3, [r3, #12]
   31d2c:	rsb	r2, r3, #2944	; 0xb80
   31d30:	ldr	r3, [fp, #-16]
   31d34:	str	r2, [r3, #20]
   31d38:	ldr	r3, [fp, #-16]
   31d3c:	ldr	r3, [r3, #12]
   31d40:	rsb	r2, r3, #0
   31d44:	ldr	r3, [fp, #-8]
   31d48:	str	r2, [r3, #2952]	; 0xb88
   31d4c:	mov	r3, #0
   31d50:	b	31d98 <flatcc_builder_get_emit_context@@Base+0x210>
   31d54:	ldr	r3, [fp, #-16]
   31d58:	ldr	r3, [r3]
   31d5c:	add	r2, r3, #2944	; 0xb80
   31d60:	ldr	r3, [fp, #-16]
   31d64:	str	r2, [r3, #8]
   31d68:	ldr	r3, [fp, #-16]
   31d6c:	mov	r2, #2944	; 0xb80
   31d70:	str	r2, [r3, #12]
   31d74:	ldr	r3, [fp, #-16]
   31d78:	ldr	r3, [r3]
   31d7c:	ldr	r2, [fp, #-16]
   31d80:	ldr	r2, [r2]
   31d84:	ldr	r2, [r2, #2944]	; 0xb80
   31d88:	ldr	r2, [r2, #2952]	; 0xb88
   31d8c:	sub	r2, r2, #2944	; 0xb80
   31d90:	str	r2, [r3, #2952]	; 0xb88
   31d94:	mov	r3, #0
   31d98:	mov	r0, r3
   31d9c:	sub	sp, fp, #4
   31da0:	pop	{fp, pc}
   31da4:	andeq	r0, r0, ip, lsl #23
   31da8:	push	{fp, lr}
   31dac:	add	fp, sp, #4
   31db0:	sub	sp, sp, #16
   31db4:	str	r0, [fp, #-16]
   31db8:	mov	r3, #0
   31dbc:	str	r3, [fp, #-8]
   31dc0:	ldr	r3, [fp, #-16]
   31dc4:	ldr	r3, [r3, #4]
   31dc8:	cmp	r3, #0
   31dcc:	beq	31e04 <flatcc_builder_get_emit_context@@Base+0x27c>
   31dd0:	ldr	r3, [fp, #-16]
   31dd4:	ldr	r3, [r3, #4]
   31dd8:	ldr	r2, [r3, #2944]	; 0xb80
   31ddc:	ldr	r3, [fp, #-16]
   31de0:	ldr	r3, [r3]
   31de4:	cmp	r2, r3
   31de8:	beq	31e04 <flatcc_builder_get_emit_context@@Base+0x27c>
   31dec:	ldr	r3, [fp, #-16]
   31df0:	ldr	r3, [r3, #4]
   31df4:	ldr	r2, [r3, #2944]	; 0xb80
   31df8:	ldr	r3, [fp, #-16]
   31dfc:	str	r2, [r3, #4]
   31e00:	b	31f2c <flatcc_builder_get_emit_context@@Base+0x3a4>
   31e04:	ldr	r0, [pc, #368]	; 31f7c <flatcc_builder_get_emit_context@@Base+0x3f4>
   31e08:	bl	14574 <malloc@plt>
   31e0c:	mov	r3, r0
   31e10:	str	r3, [fp, #-8]
   31e14:	ldr	r3, [fp, #-8]
   31e18:	cmp	r3, #0
   31e1c:	bne	31e28 <flatcc_builder_get_emit_context@@Base+0x2a0>
   31e20:	mvn	r3, #0
   31e24:	b	31f70 <flatcc_builder_get_emit_context@@Base+0x3e8>
   31e28:	ldr	r3, [fp, #-16]
   31e2c:	ldr	r3, [r3, #28]
   31e30:	add	r2, r3, #2944	; 0xb80
   31e34:	ldr	r3, [fp, #-16]
   31e38:	str	r2, [r3, #28]
   31e3c:	ldr	r3, [fp, #-16]
   31e40:	ldr	r3, [r3, #4]
   31e44:	cmp	r3, #0
   31e48:	beq	31e9c <flatcc_builder_get_emit_context@@Base+0x314>
   31e4c:	ldr	r3, [fp, #-16]
   31e50:	ldr	r2, [r3, #4]
   31e54:	ldr	r3, [fp, #-8]
   31e58:	str	r2, [r3, #2948]	; 0xb84
   31e5c:	ldr	r3, [fp, #-16]
   31e60:	ldr	r2, [r3]
   31e64:	ldr	r3, [fp, #-8]
   31e68:	str	r2, [r3, #2944]	; 0xb80
   31e6c:	ldr	r3, [fp, #-16]
   31e70:	ldr	r3, [r3]
   31e74:	ldr	r2, [fp, #-8]
   31e78:	str	r2, [r3, #2948]	; 0xb84
   31e7c:	ldr	r3, [fp, #-16]
   31e80:	ldr	r3, [r3, #4]
   31e84:	ldr	r2, [fp, #-8]
   31e88:	str	r2, [r3, #2944]	; 0xb80
   31e8c:	ldr	r3, [fp, #-16]
   31e90:	ldr	r2, [fp, #-8]
   31e94:	str	r2, [r3, #4]
   31e98:	b	31f2c <flatcc_builder_get_emit_context@@Base+0x3a4>
   31e9c:	ldr	r3, [fp, #-16]
   31ea0:	ldr	r2, [fp, #-8]
   31ea4:	str	r2, [r3]
   31ea8:	ldr	r3, [fp, #-16]
   31eac:	ldr	r2, [fp, #-8]
   31eb0:	str	r2, [r3, #4]
   31eb4:	ldr	r3, [fp, #-8]
   31eb8:	ldr	r2, [fp, #-8]
   31ebc:	str	r2, [r3, #2944]	; 0xb80
   31ec0:	ldr	r3, [fp, #-8]
   31ec4:	ldr	r2, [fp, #-8]
   31ec8:	str	r2, [r3, #2948]	; 0xb84
   31ecc:	ldr	r3, [fp, #-16]
   31ed0:	ldr	r3, [r3]
   31ed4:	add	r2, r3, #1472	; 0x5c0
   31ed8:	ldr	r3, [fp, #-16]
   31edc:	str	r2, [r3, #8]
   31ee0:	ldr	r3, [fp, #-16]
   31ee4:	ldr	r2, [r3, #8]
   31ee8:	ldr	r3, [fp, #-16]
   31eec:	str	r2, [r3, #16]
   31ef0:	ldr	r3, [fp, #-16]
   31ef4:	mov	r2, #1472	; 0x5c0
   31ef8:	str	r2, [r3, #12]
   31efc:	ldr	r3, [fp, #-16]
   31f00:	ldr	r3, [r3, #12]
   31f04:	rsb	r2, r3, #2944	; 0xb80
   31f08:	ldr	r3, [fp, #-16]
   31f0c:	str	r2, [r3, #20]
   31f10:	ldr	r3, [fp, #-16]
   31f14:	ldr	r3, [r3, #12]
   31f18:	rsb	r2, r3, #0
   31f1c:	ldr	r3, [fp, #-8]
   31f20:	str	r2, [r3, #2952]	; 0xb88
   31f24:	mov	r3, #0
   31f28:	b	31f70 <flatcc_builder_get_emit_context@@Base+0x3e8>
   31f2c:	ldr	r3, [fp, #-16]
   31f30:	ldr	r3, [r3, #4]
   31f34:	mov	r2, r3
   31f38:	ldr	r3, [fp, #-16]
   31f3c:	str	r2, [r3, #16]
   31f40:	ldr	r3, [fp, #-16]
   31f44:	mov	r2, #2944	; 0xb80
   31f48:	str	r2, [r3, #20]
   31f4c:	ldr	r3, [fp, #-16]
   31f50:	ldr	r3, [r3, #4]
   31f54:	ldr	r2, [fp, #-16]
   31f58:	ldr	r2, [r2, #4]
   31f5c:	ldr	r2, [r2, #2948]	; 0xb84
   31f60:	ldr	r2, [r2, #2952]	; 0xb88
   31f64:	add	r2, r2, #2944	; 0xb80
   31f68:	str	r2, [r3, #2952]	; 0xb88
   31f6c:	mov	r3, #0
   31f70:	mov	r0, r3
   31f74:	sub	sp, fp, #4
   31f78:	pop	{fp, pc}
   31f7c:	andeq	r0, r0, ip, lsl #23
   31f80:	push	{fp, lr}
   31f84:	add	fp, sp, #4
   31f88:	sub	sp, sp, #24
   31f8c:	str	r0, [fp, #-16]
   31f90:	str	r1, [fp, #-20]	; 0xffffffec
   31f94:	str	r2, [fp, #-24]	; 0xffffffe8
   31f98:	ldr	r2, [fp, #-20]	; 0xffffffec
   31f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31fa0:	add	r3, r2, r3
   31fa4:	str	r3, [fp, #-20]	; 0xffffffec
   31fa8:	b	3206c <flatcc_builder_get_emit_context@@Base+0x4e4>
   31fac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31fb0:	str	r3, [fp, #-8]
   31fb4:	ldr	r3, [fp, #-16]
   31fb8:	ldr	r2, [r3, #12]
   31fbc:	ldr	r3, [fp, #-8]
   31fc0:	cmp	r2, r3
   31fc4:	bcs	31ffc <flatcc_builder_get_emit_context@@Base+0x474>
   31fc8:	ldr	r3, [fp, #-16]
   31fcc:	ldr	r3, [r3, #12]
   31fd0:	str	r3, [fp, #-8]
   31fd4:	ldr	r3, [fp, #-8]
   31fd8:	cmp	r3, #0
   31fdc:	bne	31ffc <flatcc_builder_get_emit_context@@Base+0x474>
   31fe0:	ldr	r0, [fp, #-16]
   31fe4:	bl	31bb0 <flatcc_builder_get_emit_context@@Base+0x28>
   31fe8:	mov	r3, r0
   31fec:	cmp	r3, #0
   31ff0:	beq	3206c <flatcc_builder_get_emit_context@@Base+0x4e4>
   31ff4:	mvn	r3, #0
   31ff8:	b	3207c <flatcc_builder_get_emit_context@@Base+0x4f4>
   31ffc:	ldr	r3, [fp, #-16]
   32000:	ldr	r2, [r3, #8]
   32004:	ldr	r3, [fp, #-8]
   32008:	rsb	r3, r3, #0
   3200c:	add	r2, r2, r3
   32010:	ldr	r3, [fp, #-16]
   32014:	str	r2, [r3, #8]
   32018:	ldr	r3, [fp, #-16]
   3201c:	ldr	r2, [r3, #12]
   32020:	ldr	r3, [fp, #-8]
   32024:	sub	r2, r2, r3
   32028:	ldr	r3, [fp, #-16]
   3202c:	str	r2, [r3, #12]
   32030:	ldr	r3, [fp, #-8]
   32034:	rsb	r3, r3, #0
   32038:	ldr	r2, [fp, #-20]	; 0xffffffec
   3203c:	add	r3, r2, r3
   32040:	str	r3, [fp, #-20]	; 0xffffffec
   32044:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32048:	ldr	r3, [fp, #-8]
   3204c:	sub	r3, r2, r3
   32050:	str	r3, [fp, #-24]	; 0xffffffe8
   32054:	ldr	r3, [fp, #-16]
   32058:	ldr	r3, [r3, #8]
   3205c:	ldr	r2, [fp, #-8]
   32060:	ldr	r1, [fp, #-20]	; 0xffffffec
   32064:	mov	r0, r3
   32068:	bl	14544 <memcpy@plt>
   3206c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32070:	cmp	r3, #0
   32074:	bne	31fac <flatcc_builder_get_emit_context@@Base+0x424>
   32078:	mov	r3, #0
   3207c:	mov	r0, r3
   32080:	sub	sp, fp, #4
   32084:	pop	{fp, pc}
   32088:	push	{fp, lr}
   3208c:	add	fp, sp, #4
   32090:	sub	sp, sp, #24
   32094:	str	r0, [fp, #-16]
   32098:	str	r1, [fp, #-20]	; 0xffffffec
   3209c:	str	r2, [fp, #-24]	; 0xffffffe8
   320a0:	b	3215c <flatcc_builder_get_emit_context@@Base+0x5d4>
   320a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   320a8:	str	r3, [fp, #-8]
   320ac:	ldr	r3, [fp, #-16]
   320b0:	ldr	r2, [r3, #20]
   320b4:	ldr	r3, [fp, #-8]
   320b8:	cmp	r2, r3
   320bc:	bcs	320f4 <flatcc_builder_get_emit_context@@Base+0x56c>
   320c0:	ldr	r3, [fp, #-16]
   320c4:	ldr	r3, [r3, #20]
   320c8:	str	r3, [fp, #-8]
   320cc:	ldr	r3, [fp, #-8]
   320d0:	cmp	r3, #0
   320d4:	bne	320f4 <flatcc_builder_get_emit_context@@Base+0x56c>
   320d8:	ldr	r0, [fp, #-16]
   320dc:	bl	31da8 <flatcc_builder_get_emit_context@@Base+0x220>
   320e0:	mov	r3, r0
   320e4:	cmp	r3, #0
   320e8:	beq	3215c <flatcc_builder_get_emit_context@@Base+0x5d4>
   320ec:	mvn	r3, #0
   320f0:	b	3216c <flatcc_builder_get_emit_context@@Base+0x5e4>
   320f4:	ldr	r3, [fp, #-16]
   320f8:	ldr	r3, [r3, #16]
   320fc:	ldr	r2, [fp, #-8]
   32100:	ldr	r1, [fp, #-20]	; 0xffffffec
   32104:	mov	r0, r3
   32108:	bl	14544 <memcpy@plt>
   3210c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32110:	ldr	r3, [fp, #-8]
   32114:	sub	r3, r2, r3
   32118:	str	r3, [fp, #-24]	; 0xffffffe8
   3211c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32120:	ldr	r3, [fp, #-8]
   32124:	add	r3, r2, r3
   32128:	str	r3, [fp, #-20]	; 0xffffffec
   3212c:	ldr	r3, [fp, #-16]
   32130:	ldr	r2, [r3, #16]
   32134:	ldr	r3, [fp, #-8]
   32138:	add	r2, r2, r3
   3213c:	ldr	r3, [fp, #-16]
   32140:	str	r2, [r3, #16]
   32144:	ldr	r3, [fp, #-16]
   32148:	ldr	r2, [r3, #20]
   3214c:	ldr	r3, [fp, #-8]
   32150:	sub	r2, r2, r3
   32154:	ldr	r3, [fp, #-16]
   32158:	str	r2, [r3, #20]
   3215c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32160:	cmp	r3, #0
   32164:	bne	320a4 <flatcc_builder_get_emit_context@@Base+0x51c>
   32168:	mov	r3, #0
   3216c:	mov	r0, r3
   32170:	sub	sp, fp, #4
   32174:	pop	{fp, pc}

00032178 <flatcc_emitter_recycle_page@@Base>:
   32178:	push	{fp}		; (str fp, [sp, #-4]!)
   3217c:	add	fp, sp, #0
   32180:	sub	sp, sp, #12
   32184:	str	r0, [fp, #-8]
   32188:	str	r1, [fp, #-12]
   3218c:	ldr	r3, [fp, #-8]
   32190:	ldr	r2, [r3]
   32194:	ldr	r3, [fp, #-12]
   32198:	cmp	r2, r3
   3219c:	beq	321b4 <flatcc_emitter_recycle_page@@Base+0x3c>
   321a0:	ldr	r3, [fp, #-8]
   321a4:	ldr	r2, [r3, #4]
   321a8:	ldr	r3, [fp, #-12]
   321ac:	cmp	r2, r3
   321b0:	bne	321bc <flatcc_emitter_recycle_page@@Base+0x44>
   321b4:	mvn	r3, #0
   321b8:	b	3222c <flatcc_emitter_recycle_page@@Base+0xb4>
   321bc:	ldr	r3, [fp, #-12]
   321c0:	ldr	r3, [r3, #2944]	; 0xb80
   321c4:	ldr	r2, [fp, #-12]
   321c8:	ldr	r2, [r2, #2948]	; 0xb84
   321cc:	str	r2, [r3, #2948]	; 0xb84
   321d0:	ldr	r3, [fp, #-12]
   321d4:	ldr	r3, [r3, #2948]	; 0xb84
   321d8:	ldr	r2, [fp, #-12]
   321dc:	ldr	r2, [r2, #2944]	; 0xb80
   321e0:	str	r2, [r3, #2944]	; 0xb80
   321e4:	ldr	r3, [fp, #-8]
   321e8:	ldr	r3, [r3]
   321ec:	ldr	r2, [r3, #2948]	; 0xb84
   321f0:	ldr	r3, [fp, #-12]
   321f4:	str	r2, [r3, #2948]	; 0xb84
   321f8:	ldr	r3, [fp, #-8]
   321fc:	ldr	r2, [r3]
   32200:	ldr	r3, [fp, #-12]
   32204:	str	r2, [r3, #2944]	; 0xb80
   32208:	ldr	r3, [fp, #-12]
   3220c:	ldr	r3, [r3, #2948]	; 0xb84
   32210:	ldr	r2, [fp, #-12]
   32214:	str	r2, [r3, #2944]	; 0xb80
   32218:	ldr	r3, [fp, #-12]
   3221c:	ldr	r3, [r3, #2944]	; 0xb80
   32220:	ldr	r2, [fp, #-12]
   32224:	str	r2, [r3, #2948]	; 0xb84
   32228:	mov	r3, #0
   3222c:	mov	r0, r3
   32230:	add	sp, fp, #0
   32234:	pop	{fp}		; (ldr fp, [sp], #4)
   32238:	bx	lr

0003223c <flatcc_emitter_reset@@Base>:
   3223c:	push	{fp, lr}
   32240:	add	fp, sp, #4
   32244:	sub	sp, sp, #16
   32248:	str	r0, [fp, #-16]
   3224c:	ldr	r3, [fp, #-16]
   32250:	ldr	r3, [r3]
   32254:	str	r3, [fp, #-8]
   32258:	ldr	r3, [fp, #-16]
   3225c:	ldr	r3, [r3]
   32260:	cmp	r3, #0
   32264:	beq	323bc <flatcc_emitter_reset@@Base+0x180>
   32268:	ldr	r3, [fp, #-16]
   3226c:	ldr	r2, [r3]
   32270:	ldr	r3, [fp, #-16]
   32274:	str	r2, [r3, #4]
   32278:	ldr	r3, [fp, #-16]
   3227c:	ldr	r3, [r3]
   32280:	add	r2, r3, #1472	; 0x5c0
   32284:	ldr	r3, [fp, #-16]
   32288:	str	r2, [r3, #8]
   3228c:	ldr	r3, [fp, #-16]
   32290:	ldr	r2, [r3, #8]
   32294:	ldr	r3, [fp, #-16]
   32298:	str	r2, [r3, #16]
   3229c:	ldr	r3, [fp, #-16]
   322a0:	mov	r2, #1472	; 0x5c0
   322a4:	str	r2, [r3, #12]
   322a8:	ldr	r3, [fp, #-16]
   322ac:	mov	r2, #1472	; 0x5c0
   322b0:	str	r2, [r3, #20]
   322b4:	ldr	r3, [fp, #-16]
   322b8:	ldr	r3, [r3]
   322bc:	ldr	r2, [fp, #-16]
   322c0:	ldr	r2, [r2, #12]
   322c4:	rsb	r2, r2, #0
   322c8:	str	r2, [r3, #2952]	; 0xb88
   322cc:	ldr	r3, [fp, #-16]
   322d0:	ldr	r3, [r3, #32]
   322d4:	cmp	r3, #0
   322d8:	bne	322ec <flatcc_emitter_reset@@Base+0xb0>
   322dc:	ldr	r3, [fp, #-16]
   322e0:	ldr	r2, [r3, #24]
   322e4:	ldr	r3, [fp, #-16]
   322e8:	str	r2, [r3, #32]
   322ec:	ldr	r3, [fp, #-16]
   322f0:	ldr	r2, [r3, #32]
   322f4:	mov	r3, r2
   322f8:	lsl	r3, r3, #1
   322fc:	add	r3, r3, r2
   32300:	lsr	r2, r3, #2
   32304:	ldr	r3, [fp, #-16]
   32308:	ldr	r3, [r3, #24]
   3230c:	lsr	r3, r3, #2
   32310:	add	r2, r2, r3
   32314:	ldr	r3, [fp, #-16]
   32318:	str	r2, [r3, #32]
   3231c:	ldr	r3, [fp, #-16]
   32320:	mov	r2, #0
   32324:	str	r2, [r3, #24]
   32328:	b	32380 <flatcc_emitter_reset@@Base+0x144>
   3232c:	ldr	r3, [fp, #-16]
   32330:	ldr	r3, [r3, #4]
   32334:	ldr	r3, [r3, #2944]	; 0xb80
   32338:	str	r3, [fp, #-8]
   3233c:	ldr	r3, [fp, #-16]
   32340:	ldr	r3, [r3, #4]
   32344:	ldr	r2, [fp, #-8]
   32348:	ldr	r2, [r2, #2944]	; 0xb80
   3234c:	str	r2, [r3, #2944]	; 0xb80
   32350:	ldr	r3, [fp, #-8]
   32354:	ldr	r3, [r3, #2944]	; 0xb80
   32358:	ldr	r2, [fp, #-16]
   3235c:	ldr	r2, [r2, #4]
   32360:	str	r2, [r3, #2948]	; 0xb84
   32364:	ldr	r0, [fp, #-8]
   32368:	bl	14538 <free@plt>
   3236c:	ldr	r3, [fp, #-16]
   32370:	ldr	r3, [r3, #28]
   32374:	sub	r2, r3, #2944	; 0xb80
   32378:	ldr	r3, [fp, #-16]
   3237c:	str	r2, [r3, #28]
   32380:	ldr	r3, [fp, #-16]
   32384:	ldr	r3, [r3, #32]
   32388:	lsl	r2, r3, #1
   3238c:	ldr	r3, [fp, #-16]
   32390:	ldr	r3, [r3, #28]
   32394:	cmp	r2, r3
   32398:	bcs	323c0 <flatcc_emitter_reset@@Base+0x184>
   3239c:	ldr	r3, [fp, #-16]
   323a0:	ldr	r3, [r3, #4]
   323a4:	ldr	r2, [r3, #2944]	; 0xb80
   323a8:	ldr	r3, [fp, #-16]
   323ac:	ldr	r3, [r3]
   323b0:	cmp	r2, r3
   323b4:	bne	3232c <flatcc_emitter_reset@@Base+0xf0>
   323b8:	b	323c0 <flatcc_emitter_reset@@Base+0x184>
   323bc:	nop			; (mov r0, r0)
   323c0:	sub	sp, fp, #4
   323c4:	pop	{fp, pc}

000323c8 <flatcc_emitter_clear@@Base>:
   323c8:	push	{fp, lr}
   323cc:	add	fp, sp, #4
   323d0:	sub	sp, sp, #16
   323d4:	str	r0, [fp, #-16]
   323d8:	ldr	r3, [fp, #-16]
   323dc:	ldr	r3, [r3]
   323e0:	str	r3, [fp, #-8]
   323e4:	ldr	r3, [fp, #-8]
   323e8:	cmp	r3, #0
   323ec:	beq	3244c <flatcc_emitter_clear@@Base+0x84>
   323f0:	ldr	r3, [fp, #-8]
   323f4:	ldr	r3, [r3, #2948]	; 0xb84
   323f8:	mov	r2, #0
   323fc:	str	r2, [r3, #2944]	; 0xb80
   32400:	b	32420 <flatcc_emitter_clear@@Base+0x58>
   32404:	ldr	r3, [fp, #-8]
   32408:	ldr	r3, [r3, #2944]	; 0xb80
   3240c:	str	r3, [fp, #-8]
   32410:	ldr	r3, [fp, #-8]
   32414:	ldr	r3, [r3, #2948]	; 0xb84
   32418:	mov	r0, r3
   3241c:	bl	14538 <free@plt>
   32420:	ldr	r3, [fp, #-8]
   32424:	ldr	r3, [r3, #2944]	; 0xb80
   32428:	cmp	r3, #0
   3242c:	bne	32404 <flatcc_emitter_clear@@Base+0x3c>
   32430:	ldr	r0, [fp, #-8]
   32434:	bl	14538 <free@plt>
   32438:	mov	r2, #36	; 0x24
   3243c:	mov	r1, #0
   32440:	ldr	r0, [fp, #-16]
   32444:	bl	145bc <memset@plt>
   32448:	b	32450 <flatcc_emitter_clear@@Base+0x88>
   3244c:	nop			; (mov r0, r0)
   32450:	sub	sp, fp, #4
   32454:	pop	{fp, pc}

00032458 <flatcc_emitter@@Base>:
   32458:	push	{fp, lr}
   3245c:	add	fp, sp, #4
   32460:	sub	sp, sp, #24
   32464:	str	r0, [fp, #-16]
   32468:	str	r1, [fp, #-20]	; 0xffffffec
   3246c:	str	r2, [fp, #-24]	; 0xffffffe8
   32470:	str	r3, [fp, #-28]	; 0xffffffe4
   32474:	ldr	r3, [fp, #-16]
   32478:	str	r3, [fp, #-12]
   3247c:	ldr	r3, [fp, #-12]
   32480:	ldr	r2, [r3, #24]
   32484:	ldr	r3, [fp, #4]
   32488:	add	r2, r2, r3
   3248c:	ldr	r3, [fp, #-12]
   32490:	str	r2, [r3, #24]
   32494:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32498:	cmp	r3, #0
   3249c:	bge	32564 <flatcc_emitter@@Base+0x10c>
   324a0:	ldr	r3, [fp, #-12]
   324a4:	ldr	r2, [r3, #12]
   324a8:	ldr	r3, [fp, #4]
   324ac:	cmp	r2, r3
   324b0:	bcc	324f8 <flatcc_emitter@@Base+0xa0>
   324b4:	ldr	r3, [fp, #-12]
   324b8:	ldr	r2, [r3, #8]
   324bc:	ldr	r3, [fp, #4]
   324c0:	rsb	r3, r3, #0
   324c4:	add	r2, r2, r3
   324c8:	ldr	r3, [fp, #-12]
   324cc:	str	r2, [r3, #8]
   324d0:	ldr	r3, [fp, #-12]
   324d4:	ldr	r2, [r3, #12]
   324d8:	ldr	r3, [fp, #4]
   324dc:	sub	r2, r2, r3
   324e0:	ldr	r3, [fp, #-12]
   324e4:	str	r2, [r3, #12]
   324e8:	ldr	r3, [fp, #-12]
   324ec:	ldr	r3, [r3, #8]
   324f0:	str	r3, [fp, #-8]
   324f4:	b	32610 <flatcc_emitter@@Base+0x1b8>
   324f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   324fc:	lsl	r3, r3, #3
   32500:	ldr	r2, [fp, #-20]	; 0xffffffec
   32504:	add	r3, r2, r3
   32508:	str	r3, [fp, #-20]	; 0xffffffec
   3250c:	b	3254c <flatcc_emitter@@Base+0xf4>
   32510:	ldr	r3, [fp, #-20]	; 0xffffffec
   32514:	sub	r3, r3, #8
   32518:	str	r3, [fp, #-20]	; 0xffffffec
   3251c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32520:	ldr	r1, [r3]
   32524:	ldr	r3, [fp, #-20]	; 0xffffffec
   32528:	ldr	r3, [r3, #4]
   3252c:	mov	r2, r3
   32530:	ldr	r0, [fp, #-12]
   32534:	bl	31f80 <flatcc_builder_get_emit_context@@Base+0x3f8>
   32538:	mov	r3, r0
   3253c:	cmp	r3, #0
   32540:	beq	3254c <flatcc_emitter@@Base+0xf4>
   32544:	mvn	r3, #0
   32548:	b	32668 <flatcc_emitter@@Base+0x210>
   3254c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32550:	sub	r2, r3, #1
   32554:	str	r2, [fp, #-24]	; 0xffffffe8
   32558:	cmp	r3, #0
   3255c:	bne	32510 <flatcc_emitter@@Base+0xb8>
   32560:	b	32608 <flatcc_emitter@@Base+0x1b0>
   32564:	ldr	r3, [fp, #-12]
   32568:	ldr	r2, [r3, #20]
   3256c:	ldr	r3, [fp, #4]
   32570:	cmp	r2, r3
   32574:	bcc	325f4 <flatcc_emitter@@Base+0x19c>
   32578:	ldr	r3, [fp, #-12]
   3257c:	ldr	r3, [r3, #16]
   32580:	str	r3, [fp, #-8]
   32584:	ldr	r3, [fp, #-12]
   32588:	ldr	r2, [r3, #16]
   3258c:	ldr	r3, [fp, #4]
   32590:	add	r2, r2, r3
   32594:	ldr	r3, [fp, #-12]
   32598:	str	r2, [r3, #16]
   3259c:	ldr	r3, [fp, #-12]
   325a0:	ldr	r2, [r3, #20]
   325a4:	ldr	r3, [fp, #4]
   325a8:	sub	r2, r2, r3
   325ac:	ldr	r3, [fp, #-12]
   325b0:	str	r2, [r3, #20]
   325b4:	b	32610 <flatcc_emitter@@Base+0x1b8>
   325b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   325bc:	ldr	r1, [r3]
   325c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   325c4:	ldr	r3, [r3, #4]
   325c8:	mov	r2, r3
   325cc:	ldr	r0, [fp, #-12]
   325d0:	bl	32088 <flatcc_builder_get_emit_context@@Base+0x500>
   325d4:	mov	r3, r0
   325d8:	cmp	r3, #0
   325dc:	beq	325e8 <flatcc_emitter@@Base+0x190>
   325e0:	mvn	r3, #0
   325e4:	b	32668 <flatcc_emitter@@Base+0x210>
   325e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   325ec:	add	r3, r3, #8
   325f0:	str	r3, [fp, #-20]	; 0xffffffec
   325f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   325f8:	sub	r2, r3, #1
   325fc:	str	r2, [fp, #-24]	; 0xffffffe8
   32600:	cmp	r3, #0
   32604:	bne	325b8 <flatcc_emitter@@Base+0x160>
   32608:	mov	r3, #0
   3260c:	b	32668 <flatcc_emitter@@Base+0x210>
   32610:	b	32650 <flatcc_emitter@@Base+0x1f8>
   32614:	ldr	r3, [fp, #-20]	; 0xffffffec
   32618:	ldr	r1, [r3]
   3261c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32620:	ldr	r3, [r3, #4]
   32624:	mov	r2, r3
   32628:	ldr	r0, [fp, #-8]
   3262c:	bl	14544 <memcpy@plt>
   32630:	ldr	r3, [fp, #-20]	; 0xffffffec
   32634:	ldr	r3, [r3, #4]
   32638:	ldr	r2, [fp, #-8]
   3263c:	add	r3, r2, r3
   32640:	str	r3, [fp, #-8]
   32644:	ldr	r3, [fp, #-20]	; 0xffffffec
   32648:	add	r3, r3, #8
   3264c:	str	r3, [fp, #-20]	; 0xffffffec
   32650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32654:	sub	r2, r3, #1
   32658:	str	r2, [fp, #-24]	; 0xffffffe8
   3265c:	cmp	r3, #0
   32660:	bne	32614 <flatcc_emitter@@Base+0x1bc>
   32664:	mov	r3, #0
   32668:	mov	r0, r3
   3266c:	sub	sp, fp, #4
   32670:	pop	{fp, pc}

00032674 <flatcc_emitter_copy_buffer@@Base>:
   32674:	push	{fp, lr}
   32678:	add	fp, sp, #4
   3267c:	sub	sp, sp, #24
   32680:	str	r0, [fp, #-16]
   32684:	str	r1, [fp, #-20]	; 0xffffffec
   32688:	str	r2, [fp, #-24]	; 0xffffffe8
   3268c:	ldr	r3, [fp, #-16]
   32690:	ldr	r2, [r3, #24]
   32694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32698:	cmp	r2, r3
   3269c:	bls	326a8 <flatcc_emitter_copy_buffer@@Base+0x34>
   326a0:	mov	r3, #0
   326a4:	b	327a8 <flatcc_emitter_copy_buffer@@Base+0x134>
   326a8:	ldr	r3, [fp, #-16]
   326ac:	ldr	r3, [r3]
   326b0:	cmp	r3, #0
   326b4:	bne	326c0 <flatcc_emitter_copy_buffer@@Base+0x4c>
   326b8:	mov	r3, #0
   326bc:	b	327a8 <flatcc_emitter_copy_buffer@@Base+0x134>
   326c0:	ldr	r3, [fp, #-16]
   326c4:	ldr	r2, [r3]
   326c8:	ldr	r3, [fp, #-16]
   326cc:	ldr	r3, [r3, #4]
   326d0:	cmp	r2, r3
   326d4:	bne	326fc <flatcc_emitter_copy_buffer@@Base+0x88>
   326d8:	ldr	r3, [fp, #-16]
   326dc:	ldr	r1, [r3, #8]
   326e0:	ldr	r3, [fp, #-16]
   326e4:	ldr	r3, [r3, #24]
   326e8:	mov	r2, r3
   326ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   326f0:	bl	14544 <memcpy@plt>
   326f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   326f8:	b	327a8 <flatcc_emitter_copy_buffer@@Base+0x134>
   326fc:	ldr	r3, [fp, #-16]
   32700:	ldr	r3, [r3, #12]
   32704:	rsb	r3, r3, #2944	; 0xb80
   32708:	str	r3, [fp, #-12]
   3270c:	ldr	r3, [fp, #-16]
   32710:	ldr	r3, [r3, #8]
   32714:	ldr	r2, [fp, #-12]
   32718:	mov	r1, r3
   3271c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32720:	bl	14544 <memcpy@plt>
   32724:	ldr	r2, [fp, #-20]	; 0xffffffec
   32728:	ldr	r3, [fp, #-12]
   3272c:	add	r3, r2, r3
   32730:	str	r3, [fp, #-20]	; 0xffffffec
   32734:	ldr	r3, [fp, #-16]
   32738:	ldr	r3, [r3]
   3273c:	ldr	r3, [r3, #2944]	; 0xb80
   32740:	str	r3, [fp, #-8]
   32744:	b	32774 <flatcc_emitter_copy_buffer@@Base+0x100>
   32748:	ldr	r3, [fp, #-8]
   3274c:	mov	r2, #2944	; 0xb80
   32750:	mov	r1, r3
   32754:	ldr	r0, [fp, #-20]	; 0xffffffec
   32758:	bl	14544 <memcpy@plt>
   3275c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32760:	add	r3, r3, #2944	; 0xb80
   32764:	str	r3, [fp, #-20]	; 0xffffffec
   32768:	ldr	r3, [fp, #-8]
   3276c:	ldr	r3, [r3, #2944]	; 0xb80
   32770:	str	r3, [fp, #-8]
   32774:	ldr	r3, [fp, #-16]
   32778:	ldr	r2, [r3, #4]
   3277c:	ldr	r3, [fp, #-8]
   32780:	cmp	r2, r3
   32784:	bne	32748 <flatcc_emitter_copy_buffer@@Base+0xd4>
   32788:	ldr	r1, [fp, #-8]
   3278c:	ldr	r3, [fp, #-16]
   32790:	ldr	r3, [r3, #20]
   32794:	rsb	r3, r3, #2944	; 0xb80
   32798:	mov	r2, r3
   3279c:	ldr	r0, [fp, #-20]	; 0xffffffec
   327a0:	bl	14544 <memcpy@plt>
   327a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   327a8:	mov	r0, r3
   327ac:	sub	sp, fp, #4
   327b0:	pop	{fp, pc}
   327b4:	push	{fp}		; (str fp, [sp, #-4]!)
   327b8:	add	fp, sp, #0
   327bc:	sub	sp, sp, #12
   327c0:	str	r0, [fp, #-8]
   327c4:	ldr	r3, [fp, #-8]
   327c8:	mov	r0, r3
   327cc:	add	sp, fp, #0
   327d0:	pop	{fp}		; (ldr fp, [sp], #4)
   327d4:	bx	lr
   327d8:	push	{fp, lr}
   327dc:	add	fp, sp, #4
   327e0:	sub	sp, sp, #8
   327e4:	str	r0, [fp, #-8]
   327e8:	ldr	r3, [fp, #-8]
   327ec:	ldr	r3, [r3]
   327f0:	mov	r0, r3
   327f4:	bl	327b4 <flatcc_emitter_copy_buffer@@Base+0x140>
   327f8:	mov	r3, r0
   327fc:	mov	r0, r3
   32800:	sub	sp, fp, #4
   32804:	pop	{fp, pc}
   32808:	push	{fp}		; (str fp, [sp, #-4]!)
   3280c:	add	fp, sp, #0
   32810:	sub	sp, sp, #12
   32814:	mov	r3, r0
   32818:	strh	r3, [fp, #-6]
   3281c:	ldrh	r3, [fp, #-6]
   32820:	mov	r0, r3
   32824:	add	sp, fp, #0
   32828:	pop	{fp}		; (ldr fp, [sp], #4)
   3282c:	bx	lr
   32830:	push	{fp, lr}
   32834:	add	fp, sp, #4
   32838:	sub	sp, sp, #8
   3283c:	str	r0, [fp, #-8]
   32840:	ldr	r3, [fp, #-8]
   32844:	ldrh	r3, [r3]
   32848:	mov	r0, r3
   3284c:	bl	32808 <flatcc_emitter_copy_buffer@@Base+0x194>
   32850:	mov	r3, r0
   32854:	mov	r0, r3
   32858:	sub	sp, fp, #4
   3285c:	pop	{fp, pc}
   32860:	push	{fp}		; (str fp, [sp, #-4]!)
   32864:	add	fp, sp, #0
   32868:	sub	sp, sp, #12
   3286c:	str	r0, [fp, #-8]
   32870:	ldr	r3, [fp, #-8]
   32874:	mov	r0, r3
   32878:	add	sp, fp, #0
   3287c:	pop	{fp}		; (ldr fp, [sp], #4)
   32880:	bx	lr
   32884:	push	{fp}		; (str fp, [sp, #-4]!)
   32888:	add	fp, sp, #0
   3288c:	sub	sp, sp, #12
   32890:	str	r0, [fp, #-8]
   32894:	ldr	r3, [fp, #-8]
   32898:	mov	r0, r3
   3289c:	add	sp, fp, #0
   328a0:	pop	{fp}		; (ldr fp, [sp], #4)
   328a4:	bx	lr
   328a8:	push	{fp, lr}
   328ac:	add	fp, sp, #4
   328b0:	sub	sp, sp, #8
   328b4:	str	r0, [fp, #-8]
   328b8:	ldr	r3, [fp, #-8]
   328bc:	ldr	r3, [r3]
   328c0:	mov	r0, r3
   328c4:	bl	32860 <flatcc_emitter_copy_buffer@@Base+0x1ec>
   328c8:	mov	r3, r0
   328cc:	mov	r0, r3
   328d0:	sub	sp, fp, #4
   328d4:	pop	{fp, pc}

000328d8 <flatcc_verify_error_string@@Base>:
   328d8:	push	{fp}		; (str fp, [sp, #-4]!)
   328dc:	add	fp, sp, #0
   328e0:	sub	sp, sp, #12
   328e4:	str	r0, [fp, #-8]
   328e8:	ldr	r3, [fp, #-8]
   328ec:	cmp	r3, #36	; 0x24
   328f0:	addls	pc, pc, r3, lsl #2
   328f4:	b	32b48 <flatcc_verify_error_string@@Base+0x270>
   328f8:	b	3298c <flatcc_verify_error_string@@Base+0xb4>
   328fc:	b	32998 <flatcc_verify_error_string@@Base+0xc0>
   32900:	b	329a4 <flatcc_verify_error_string@@Base+0xcc>
   32904:	b	329b0 <flatcc_verify_error_string@@Base+0xd8>
   32908:	b	329bc <flatcc_verify_error_string@@Base+0xe4>
   3290c:	b	329c8 <flatcc_verify_error_string@@Base+0xf0>
   32910:	b	329d4 <flatcc_verify_error_string@@Base+0xfc>
   32914:	b	329e0 <flatcc_verify_error_string@@Base+0x108>
   32918:	b	329ec <flatcc_verify_error_string@@Base+0x114>
   3291c:	b	329f8 <flatcc_verify_error_string@@Base+0x120>
   32920:	b	32a04 <flatcc_verify_error_string@@Base+0x12c>
   32924:	b	32a10 <flatcc_verify_error_string@@Base+0x138>
   32928:	b	32a1c <flatcc_verify_error_string@@Base+0x144>
   3292c:	b	32a28 <flatcc_verify_error_string@@Base+0x150>
   32930:	b	32a34 <flatcc_verify_error_string@@Base+0x15c>
   32934:	b	32a40 <flatcc_verify_error_string@@Base+0x168>
   32938:	b	32a4c <flatcc_verify_error_string@@Base+0x174>
   3293c:	b	32a58 <flatcc_verify_error_string@@Base+0x180>
   32940:	b	32a64 <flatcc_verify_error_string@@Base+0x18c>
   32944:	b	32a70 <flatcc_verify_error_string@@Base+0x198>
   32948:	b	32a7c <flatcc_verify_error_string@@Base+0x1a4>
   3294c:	b	32a88 <flatcc_verify_error_string@@Base+0x1b0>
   32950:	b	32a94 <flatcc_verify_error_string@@Base+0x1bc>
   32954:	b	32aa0 <flatcc_verify_error_string@@Base+0x1c8>
   32958:	b	32aac <flatcc_verify_error_string@@Base+0x1d4>
   3295c:	b	32ab8 <flatcc_verify_error_string@@Base+0x1e0>
   32960:	b	32ac4 <flatcc_verify_error_string@@Base+0x1ec>
   32964:	b	32ad0 <flatcc_verify_error_string@@Base+0x1f8>
   32968:	b	32adc <flatcc_verify_error_string@@Base+0x204>
   3296c:	b	32ae8 <flatcc_verify_error_string@@Base+0x210>
   32970:	b	32af4 <flatcc_verify_error_string@@Base+0x21c>
   32974:	b	32b00 <flatcc_verify_error_string@@Base+0x228>
   32978:	b	32b0c <flatcc_verify_error_string@@Base+0x234>
   3297c:	b	32b18 <flatcc_verify_error_string@@Base+0x240>
   32980:	b	32b24 <flatcc_verify_error_string@@Base+0x24c>
   32984:	b	32b30 <flatcc_verify_error_string@@Base+0x258>
   32988:	b	32b3c <flatcc_verify_error_string@@Base+0x264>
   3298c:	ldr	r3, [pc, #460]	; 32b60 <flatcc_verify_error_string@@Base+0x288>
   32990:	add	r3, pc, r3
   32994:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32998:	ldr	r3, [pc, #452]	; 32b64 <flatcc_verify_error_string@@Base+0x28c>
   3299c:	add	r3, pc, r3
   329a0:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329a4:	ldr	r3, [pc, #444]	; 32b68 <flatcc_verify_error_string@@Base+0x290>
   329a8:	add	r3, pc, r3
   329ac:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329b0:	ldr	r3, [pc, #436]	; 32b6c <flatcc_verify_error_string@@Base+0x294>
   329b4:	add	r3, pc, r3
   329b8:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329bc:	ldr	r3, [pc, #428]	; 32b70 <flatcc_verify_error_string@@Base+0x298>
   329c0:	add	r3, pc, r3
   329c4:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329c8:	ldr	r3, [pc, #420]	; 32b74 <flatcc_verify_error_string@@Base+0x29c>
   329cc:	add	r3, pc, r3
   329d0:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329d4:	ldr	r3, [pc, #412]	; 32b78 <flatcc_verify_error_string@@Base+0x2a0>
   329d8:	add	r3, pc, r3
   329dc:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329e0:	ldr	r3, [pc, #404]	; 32b7c <flatcc_verify_error_string@@Base+0x2a4>
   329e4:	add	r3, pc, r3
   329e8:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329ec:	ldr	r3, [pc, #396]	; 32b80 <flatcc_verify_error_string@@Base+0x2a8>
   329f0:	add	r3, pc, r3
   329f4:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   329f8:	ldr	r3, [pc, #388]	; 32b84 <flatcc_verify_error_string@@Base+0x2ac>
   329fc:	add	r3, pc, r3
   32a00:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a04:	ldr	r3, [pc, #380]	; 32b88 <flatcc_verify_error_string@@Base+0x2b0>
   32a08:	add	r3, pc, r3
   32a0c:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a10:	ldr	r3, [pc, #372]	; 32b8c <flatcc_verify_error_string@@Base+0x2b4>
   32a14:	add	r3, pc, r3
   32a18:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a1c:	ldr	r3, [pc, #364]	; 32b90 <flatcc_verify_error_string@@Base+0x2b8>
   32a20:	add	r3, pc, r3
   32a24:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a28:	ldr	r3, [pc, #356]	; 32b94 <flatcc_verify_error_string@@Base+0x2bc>
   32a2c:	add	r3, pc, r3
   32a30:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a34:	ldr	r3, [pc, #348]	; 32b98 <flatcc_verify_error_string@@Base+0x2c0>
   32a38:	add	r3, pc, r3
   32a3c:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a40:	ldr	r3, [pc, #340]	; 32b9c <flatcc_verify_error_string@@Base+0x2c4>
   32a44:	add	r3, pc, r3
   32a48:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a4c:	ldr	r3, [pc, #332]	; 32ba0 <flatcc_verify_error_string@@Base+0x2c8>
   32a50:	add	r3, pc, r3
   32a54:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a58:	ldr	r3, [pc, #324]	; 32ba4 <flatcc_verify_error_string@@Base+0x2cc>
   32a5c:	add	r3, pc, r3
   32a60:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a64:	ldr	r3, [pc, #316]	; 32ba8 <flatcc_verify_error_string@@Base+0x2d0>
   32a68:	add	r3, pc, r3
   32a6c:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a70:	ldr	r3, [pc, #308]	; 32bac <flatcc_verify_error_string@@Base+0x2d4>
   32a74:	add	r3, pc, r3
   32a78:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a7c:	ldr	r3, [pc, #300]	; 32bb0 <flatcc_verify_error_string@@Base+0x2d8>
   32a80:	add	r3, pc, r3
   32a84:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a88:	ldr	r3, [pc, #292]	; 32bb4 <flatcc_verify_error_string@@Base+0x2dc>
   32a8c:	add	r3, pc, r3
   32a90:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32a94:	ldr	r3, [pc, #284]	; 32bb8 <flatcc_verify_error_string@@Base+0x2e0>
   32a98:	add	r3, pc, r3
   32a9c:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32aa0:	ldr	r3, [pc, #276]	; 32bbc <flatcc_verify_error_string@@Base+0x2e4>
   32aa4:	add	r3, pc, r3
   32aa8:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32aac:	ldr	r3, [pc, #268]	; 32bc0 <flatcc_verify_error_string@@Base+0x2e8>
   32ab0:	add	r3, pc, r3
   32ab4:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32ab8:	ldr	r3, [pc, #260]	; 32bc4 <flatcc_verify_error_string@@Base+0x2ec>
   32abc:	add	r3, pc, r3
   32ac0:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32ac4:	ldr	r3, [pc, #252]	; 32bc8 <flatcc_verify_error_string@@Base+0x2f0>
   32ac8:	add	r3, pc, r3
   32acc:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32ad0:	ldr	r3, [pc, #244]	; 32bcc <flatcc_verify_error_string@@Base+0x2f4>
   32ad4:	add	r3, pc, r3
   32ad8:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32adc:	ldr	r3, [pc, #236]	; 32bd0 <flatcc_verify_error_string@@Base+0x2f8>
   32ae0:	add	r3, pc, r3
   32ae4:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32ae8:	ldr	r3, [pc, #228]	; 32bd4 <flatcc_verify_error_string@@Base+0x2fc>
   32aec:	add	r3, pc, r3
   32af0:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32af4:	ldr	r3, [pc, #220]	; 32bd8 <flatcc_verify_error_string@@Base+0x300>
   32af8:	add	r3, pc, r3
   32afc:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32b00:	ldr	r3, [pc, #212]	; 32bdc <flatcc_verify_error_string@@Base+0x304>
   32b04:	add	r3, pc, r3
   32b08:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32b0c:	ldr	r3, [pc, #204]	; 32be0 <flatcc_verify_error_string@@Base+0x308>
   32b10:	add	r3, pc, r3
   32b14:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32b18:	ldr	r3, [pc, #196]	; 32be4 <flatcc_verify_error_string@@Base+0x30c>
   32b1c:	add	r3, pc, r3
   32b20:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32b24:	ldr	r3, [pc, #188]	; 32be8 <flatcc_verify_error_string@@Base+0x310>
   32b28:	add	r3, pc, r3
   32b2c:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32b30:	ldr	r3, [pc, #180]	; 32bec <flatcc_verify_error_string@@Base+0x314>
   32b34:	add	r3, pc, r3
   32b38:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32b3c:	ldr	r3, [pc, #172]	; 32bf0 <flatcc_verify_error_string@@Base+0x318>
   32b40:	add	r3, pc, r3
   32b44:	b	32b50 <flatcc_verify_error_string@@Base+0x278>
   32b48:	ldr	r3, [pc, #164]	; 32bf4 <flatcc_verify_error_string@@Base+0x31c>
   32b4c:	add	r3, pc, r3
   32b50:	mov	r0, r3
   32b54:	add	sp, fp, #0
   32b58:	pop	{fp}		; (ldr fp, [sp], #4)
   32b5c:	bx	lr
   32b60:	andeq	ip, r1, ip, lsl #26
   32b64:	andeq	ip, r1, r4, lsl #26
   32b68:	andeq	ip, r1, r0, lsl sp
   32b6c:	andeq	ip, r1, r8, lsl sp
   32b70:	andeq	ip, r1, r8, lsr #26
   32b74:	andeq	ip, r1, r4, lsr sp
   32b78:	andeq	ip, r1, ip, asr #26
   32b7c:	andeq	ip, r1, r0, ror #26
   32b80:	andeq	ip, r1, r0, ror sp
   32b84:	andeq	ip, r1, r8, ror sp
   32b88:	andeq	ip, r1, r0, lsl #27
   32b8c:	andeq	ip, r1, ip, lsl #27
   32b90:	muleq	r1, r4, sp
   32b94:	andeq	ip, r1, r0, lsr #27
   32b98:			; <UNDEFINED> instruction: 0x0001cdb0
   32b9c:	andeq	ip, r1, r0, asr #27
   32ba0:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   32ba4:	strdeq	ip, [r1], -r8
   32ba8:	andeq	ip, r1, r4, lsl lr
   32bac:	andeq	ip, r1, ip, lsl lr
   32bb0:	andeq	ip, r1, r8, lsr lr
   32bb4:	andeq	ip, r1, r4, asr #28
   32bb8:	andeq	ip, r1, r4, ror #28
   32bbc:	andeq	ip, r1, ip, lsl #29
   32bc0:	andeq	ip, r1, ip, lsr #29
   32bc4:	andeq	ip, r1, ip, asr #29
   32bc8:	strdeq	ip, [r1], -r0
   32bcc:	strdeq	ip, [r1], -r8
   32bd0:	andeq	ip, r1, r8, lsl #30
   32bd4:	andeq	ip, r1, r4, lsl pc
   32bd8:	andeq	ip, r1, r0, lsr pc
   32bdc:	andeq	ip, r1, ip, asr #30
   32be0:	andeq	ip, r1, r8, asr pc
   32be4:	andeq	ip, r1, r4, ror pc
   32be8:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   32bec:			; <UNDEFINED> instruction: 0x0001cfb8
   32bf0:	ldrdeq	ip, [r1], -r4
   32bf4:	ldrdeq	ip, [r1], -r8
   32bf8:	push	{fp, lr}
   32bfc:	add	fp, sp, #4
   32c00:	sub	sp, sp, #8
   32c04:	str	r0, [fp, #-8]
   32c08:	str	r1, [fp, #-12]
   32c0c:	ldr	r2, [fp, #-8]
   32c10:	ldr	r3, [fp, #-12]
   32c14:	add	r3, r2, r3
   32c18:	mov	r0, r3
   32c1c:	bl	327d8 <flatcc_emitter_copy_buffer@@Base+0x164>
   32c20:	mov	r3, r0
   32c24:	mov	r0, r3
   32c28:	sub	sp, fp, #4
   32c2c:	pop	{fp, pc}
   32c30:	push	{fp, lr}
   32c34:	add	fp, sp, #4
   32c38:	sub	sp, sp, #16
   32c3c:	str	r0, [fp, #-16]
   32c40:	mov	r3, #0
   32c44:	str	r3, [fp, #-8]
   32c48:	sub	r3, fp, #8
   32c4c:	mov	r2, #4
   32c50:	ldr	r1, [fp, #-16]
   32c54:	mov	r0, r3
   32c58:	bl	145c8 <strncpy@plt>
   32c5c:	ldr	r3, [fp, #-8]
   32c60:	mov	r0, r3
   32c64:	bl	32884 <flatcc_emitter_copy_buffer@@Base+0x210>
   32c68:	mov	r3, r0
   32c6c:	mov	r0, r3
   32c70:	sub	sp, fp, #4
   32c74:	pop	{fp, pc}
   32c78:	push	{fp, lr}
   32c7c:	add	fp, sp, #4
   32c80:	sub	sp, sp, #8
   32c84:	str	r0, [fp, #-8]
   32c88:	str	r1, [fp, #-12]
   32c8c:	ldr	r2, [fp, #-8]
   32c90:	ldr	r3, [fp, #-12]
   32c94:	add	r3, r2, r3
   32c98:	mov	r0, r3
   32c9c:	bl	328a8 <flatcc_emitter_copy_buffer@@Base+0x234>
   32ca0:	mov	r3, r0
   32ca4:	mov	r0, r3
   32ca8:	sub	sp, fp, #4
   32cac:	pop	{fp, pc}
   32cb0:	push	{fp, lr}
   32cb4:	add	fp, sp, #4
   32cb8:	sub	sp, sp, #8
   32cbc:	str	r0, [fp, #-8]
   32cc0:	str	r1, [fp, #-12]
   32cc4:	ldr	r2, [fp, #-8]
   32cc8:	ldr	r3, [fp, #-12]
   32ccc:	add	r3, r2, r3
   32cd0:	mov	r0, r3
   32cd4:	bl	32830 <flatcc_emitter_copy_buffer@@Base+0x1bc>
   32cd8:	mov	r3, r0
   32cdc:	mov	r0, r3
   32ce0:	sub	sp, fp, #4
   32ce4:	pop	{fp, pc}
   32ce8:	push	{fp}		; (str fp, [sp, #-4]!)
   32cec:	add	fp, sp, #0
   32cf0:	sub	sp, sp, #28
   32cf4:	str	r0, [fp, #-16]
   32cf8:	str	r1, [fp, #-20]	; 0xffffffec
   32cfc:	str	r2, [fp, #-24]	; 0xffffffe8
   32d00:	ldr	r2, [fp, #-20]	; 0xffffffec
   32d04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32d08:	add	r3, r2, r3
   32d0c:	str	r3, [fp, #-8]
   32d10:	ldr	r2, [fp, #-8]
   32d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   32d18:	cmp	r2, r3
   32d1c:	bls	32d4c <flatcc_verify_error_string@@Base+0x474>
   32d20:	ldr	r3, [fp, #-8]
   32d24:	add	r2, r3, #4
   32d28:	ldr	r3, [fp, #-16]
   32d2c:	cmp	r2, r3
   32d30:	bhi	32d4c <flatcc_verify_error_string@@Base+0x474>
   32d34:	ldr	r3, [fp, #-8]
   32d38:	and	r3, r3, #3
   32d3c:	cmp	r3, #0
   32d40:	bne	32d4c <flatcc_verify_error_string@@Base+0x474>
   32d44:	mov	r3, #1
   32d48:	b	32d50 <flatcc_verify_error_string@@Base+0x478>
   32d4c:	mov	r3, #0
   32d50:	mov	r0, r3
   32d54:	add	sp, fp, #0
   32d58:	pop	{fp}		; (ldr fp, [sp], #4)
   32d5c:	bx	lr
   32d60:	push	{fp}		; (str fp, [sp, #-4]!)
   32d64:	add	fp, sp, #0
   32d68:	sub	sp, sp, #28
   32d6c:	str	r0, [fp, #-16]
   32d70:	str	r1, [fp, #-20]	; 0xffffffec
   32d74:	str	r2, [fp, #-24]	; 0xffffffe8
   32d78:	strh	r3, [fp, #-26]	; 0xffffffe6
   32d7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   32d80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32d84:	add	r3, r2, r3
   32d88:	str	r3, [fp, #-8]
   32d8c:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   32d90:	cmp	r3, #4
   32d94:	movcs	r3, r3
   32d98:	movcc	r3, #4
   32d9c:	strh	r3, [fp, #-26]	; 0xffffffe6
   32da0:	ldr	r2, [fp, #-8]
   32da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   32da8:	cmp	r2, r3
   32dac:	bls	32dec <flatcc_verify_error_string@@Base+0x514>
   32db0:	ldr	r3, [fp, #-8]
   32db4:	add	r2, r3, #4
   32db8:	ldr	r3, [fp, #-16]
   32dbc:	cmp	r2, r3
   32dc0:	bhi	32dec <flatcc_verify_error_string@@Base+0x514>
   32dc4:	ldr	r3, [fp, #-8]
   32dc8:	add	r2, r3, #4
   32dcc:	ldrh	r3, [fp, #-26]	; 0xffffffe6
   32dd0:	sub	r3, r3, #1
   32dd4:	orr	r3, r3, #3
   32dd8:	and	r3, r3, r2
   32ddc:	cmp	r3, #0
   32de0:	bne	32dec <flatcc_verify_error_string@@Base+0x514>
   32de4:	mov	r3, #1
   32de8:	b	32df0 <flatcc_verify_error_string@@Base+0x518>
   32dec:	mov	r3, #0
   32df0:	mov	r0, r3
   32df4:	add	sp, fp, #0
   32df8:	pop	{fp}		; (ldr fp, [sp], #4)
   32dfc:	bx	lr
   32e00:	push	{fp}		; (str fp, [sp, #-4]!)
   32e04:	add	fp, sp, #0
   32e08:	sub	sp, sp, #36	; 0x24
   32e0c:	str	r0, [fp, #-24]	; 0xffffffe8
   32e10:	str	r1, [fp, #-28]	; 0xffffffe4
   32e14:	str	r2, [fp, #-32]	; 0xffffffe0
   32e18:	str	r3, [fp, #-36]	; 0xffffffdc
   32e1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32e20:	cmp	r3, #0
   32e24:	beq	32e40 <flatcc_verify_error_string@@Base+0x568>
   32e28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32e30:	add	r2, r2, r3
   32e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32e38:	cmp	r2, r3
   32e3c:	bls	32e48 <flatcc_verify_error_string@@Base+0x570>
   32e40:	mov	r3, #18
   32e44:	b	32f08 <flatcc_verify_error_string@@Base+0x630>
   32e48:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32e4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32e50:	add	r3, r2, r3
   32e54:	str	r3, [fp, #-28]	; 0xffffffe4
   32e58:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32e5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32e60:	add	r2, r2, r3
   32e64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32e68:	cmp	r2, r3
   32e6c:	movcs	r3, #1
   32e70:	movcc	r3, #0
   32e74:	uxtb	r3, r3
   32e78:	str	r3, [fp, #-8]
   32e7c:	ldr	r3, [fp, #-8]
   32e80:	cmp	r3, #0
   32e84:	bne	32e90 <flatcc_verify_error_string@@Base+0x5b8>
   32e88:	mov	r3, #10
   32e8c:	b	32f08 <flatcc_verify_error_string@@Base+0x630>
   32e90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32e94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32e98:	add	r2, r2, r3
   32e9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32ea0:	cmp	r2, r3
   32ea4:	movls	r3, #1
   32ea8:	movhi	r3, #0
   32eac:	uxtb	r3, r3
   32eb0:	str	r3, [fp, #-12]
   32eb4:	ldr	r3, [fp, #-12]
   32eb8:	cmp	r3, #0
   32ebc:	bne	32ec8 <flatcc_verify_error_string@@Base+0x5f0>
   32ec0:	mov	r3, #9
   32ec4:	b	32f08 <flatcc_verify_error_string@@Base+0x630>
   32ec8:	ldrh	r3, [fp, #4]
   32ecc:	sub	r3, r3, #1
   32ed0:	mov	r2, r3
   32ed4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32ed8:	and	r3, r3, r2
   32edc:	cmp	r3, #0
   32ee0:	moveq	r3, #1
   32ee4:	movne	r3, #0
   32ee8:	uxtb	r3, r3
   32eec:	str	r3, [fp, #-16]
   32ef0:	ldr	r3, [fp, #-16]
   32ef4:	cmp	r3, #0
   32ef8:	bne	32f04 <flatcc_verify_error_string@@Base+0x62c>
   32efc:	mov	r3, #11
   32f00:	b	32f08 <flatcc_verify_error_string@@Base+0x630>
   32f04:	mov	r3, #0
   32f08:	mov	r0, r3
   32f0c:	add	sp, fp, #0
   32f10:	pop	{fp}		; (ldr fp, [sp], #4)
   32f14:	bx	lr
   32f18:	push	{fp, lr}
   32f1c:	add	fp, sp, #4
   32f20:	sub	sp, sp, #16
   32f24:	str	r0, [fp, #-16]
   32f28:	mov	r3, r1
   32f2c:	strh	r3, [fp, #-18]	; 0xffffffee
   32f30:	ldrh	r3, [fp, #-18]	; 0xffffffee
   32f34:	add	r3, r3, #2
   32f38:	uxth	r3, r3
   32f3c:	lsl	r3, r3, #1
   32f40:	strh	r3, [fp, #-6]
   32f44:	ldr	r3, [fp, #-16]
   32f48:	ldrh	r3, [r3, #22]
   32f4c:	ldrh	r2, [fp, #-6]
   32f50:	cmp	r2, r3
   32f54:	bcc	32f60 <flatcc_verify_error_string@@Base+0x688>
   32f58:	mov	r3, #0
   32f5c:	b	32f7c <flatcc_verify_error_string@@Base+0x6a4>
   32f60:	ldr	r3, [fp, #-16]
   32f64:	ldr	r3, [r3, #12]
   32f68:	ldrh	r2, [fp, #-6]
   32f6c:	mov	r1, r2
   32f70:	mov	r0, r3
   32f74:	bl	32cb0 <flatcc_verify_error_string@@Base+0x3d8>
   32f78:	mov	r3, r0
   32f7c:	mov	r0, r3
   32f80:	sub	sp, fp, #4
   32f84:	pop	{fp, pc}
   32f88:	push	{fp, lr}
   32f8c:	add	fp, sp, #4
   32f90:	sub	sp, sp, #16
   32f94:	str	r0, [fp, #-16]
   32f98:	mov	r3, r1
   32f9c:	strh	r3, [fp, #-18]	; 0xffffffee
   32fa0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   32fa4:	mov	r1, r3
   32fa8:	ldr	r0, [fp, #-16]
   32fac:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   32fb0:	mov	r3, r0
   32fb4:	strh	r3, [fp, #-6]
   32fb8:	ldrh	r3, [fp, #-6]
   32fbc:	cmp	r3, #0
   32fc0:	beq	32fe4 <flatcc_verify_error_string@@Base+0x70c>
   32fc4:	ldr	r3, [fp, #-16]
   32fc8:	ldr	r2, [r3]
   32fcc:	ldr	r3, [fp, #-16]
   32fd0:	ldr	r1, [r3, #16]
   32fd4:	ldrh	r3, [fp, #-6]
   32fd8:	add	r3, r1, r3
   32fdc:	add	r3, r2, r3
   32fe0:	b	32fe8 <flatcc_verify_error_string@@Base+0x710>
   32fe4:	mov	r3, #0
   32fe8:	mov	r0, r3
   32fec:	sub	sp, fp, #4
   32ff0:	pop	{fp, pc}
   32ff4:	push	{fp, lr}
   32ff8:	add	fp, sp, #4
   32ffc:	sub	sp, sp, #48	; 0x30
   33000:	str	r0, [fp, #-40]	; 0xffffffd8
   33004:	str	r2, [fp, #-48]	; 0xffffffd0
   33008:	str	r3, [fp, #-52]	; 0xffffffcc
   3300c:	strh	r1, [fp, #-42]	; 0xffffffd6
   33010:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33014:	ldr	r3, [r3]
   33018:	str	r3, [fp, #-8]
   3301c:	ldrh	r3, [fp, #-42]	; 0xffffffd6
   33020:	mov	r1, r3
   33024:	ldr	r0, [fp, #-40]	; 0xffffffd8
   33028:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   3302c:	mov	r3, r0
   33030:	strh	r3, [fp, #-10]
   33034:	ldrh	r3, [fp, #-10]
   33038:	cmp	r3, #0
   3303c:	bne	33074 <flatcc_verify_error_string@@Base+0x79c>
   33040:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33044:	cmp	r3, #0
   33048:	moveq	r3, #1
   3304c:	movne	r3, #0
   33050:	uxtb	r3, r3
   33054:	str	r3, [fp, #-16]
   33058:	ldr	r3, [fp, #-16]
   3305c:	cmp	r3, #0
   33060:	bne	3306c <flatcc_verify_error_string@@Base+0x794>
   33064:	mov	r3, #4
   33068:	b	3313c <flatcc_verify_error_string@@Base+0x864>
   3306c:	mov	r3, #0
   33070:	b	3313c <flatcc_verify_error_string@@Base+0x864>
   33074:	ldrh	r3, [fp, #-10]
   33078:	str	r3, [fp, #-20]	; 0xffffffec
   3307c:	ldr	r2, [fp, #-20]	; 0xffffffec
   33080:	ldr	r3, [fp, #-52]	; 0xffffffcc
   33084:	add	r3, r2, r3
   33088:	str	r3, [fp, #-24]	; 0xffffffe8
   3308c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33090:	ldrh	r3, [r3, #20]
   33094:	mov	r2, r3
   33098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3309c:	cmp	r2, r3
   330a0:	movcs	r3, #1
   330a4:	movcc	r3, #0
   330a8:	uxtb	r3, r3
   330ac:	str	r3, [fp, #-28]	; 0xffffffe4
   330b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   330b4:	cmp	r3, #0
   330b8:	bne	330c4 <flatcc_verify_error_string@@Base+0x7ec>
   330bc:	mov	r3, #13
   330c0:	b	3313c <flatcc_verify_error_string@@Base+0x864>
   330c4:	mov	r3, #1
   330c8:	str	r3, [fp, #-32]	; 0xffffffe0
   330cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   330d0:	cmp	r3, #0
   330d4:	bne	330e0 <flatcc_verify_error_string@@Base+0x808>
   330d8:	mov	r3, #14
   330dc:	b	3313c <flatcc_verify_error_string@@Base+0x864>
   330e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   330e4:	ldr	r2, [r3, #16]
   330e8:	ldr	r3, [fp, #-8]
   330ec:	add	r3, r2, r3
   330f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   330f4:	add	r3, r2, r3
   330f8:	str	r3, [fp, #-20]	; 0xffffffec
   330fc:	ldrh	r3, [fp, #4]
   33100:	sub	r3, r3, #1
   33104:	mov	r2, r3
   33108:	ldr	r3, [fp, #-20]	; 0xffffffec
   3310c:	and	r3, r3, r2
   33110:	cmp	r3, #0
   33114:	moveq	r3, #1
   33118:	movne	r3, #0
   3311c:	uxtb	r3, r3
   33120:	str	r3, [fp, #-36]	; 0xffffffdc
   33124:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33128:	cmp	r3, #0
   3312c:	bne	33138 <flatcc_verify_error_string@@Base+0x860>
   33130:	mov	r3, #12
   33134:	b	3313c <flatcc_verify_error_string@@Base+0x864>
   33138:	mov	r3, #0
   3313c:	mov	r0, r3
   33140:	sub	sp, fp, #4
   33144:	pop	{fp, pc}
   33148:	push	{fp, lr}
   3314c:	add	fp, sp, #4
   33150:	sub	sp, sp, #40	; 0x28
   33154:	str	r0, [fp, #-32]	; 0xffffffe0
   33158:	str	r2, [fp, #-40]	; 0xffffffd8
   3315c:	str	r3, [fp, #-44]	; 0xffffffd4
   33160:	strh	r1, [fp, #-34]	; 0xffffffde
   33164:	ldrh	r3, [fp, #-34]	; 0xffffffde
   33168:	mov	r1, r3
   3316c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33170:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   33174:	mov	r3, r0
   33178:	strh	r3, [fp, #-6]
   3317c:	ldrh	r3, [fp, #-6]
   33180:	cmp	r3, #0
   33184:	bne	331b0 <flatcc_verify_error_string@@Base+0x8d8>
   33188:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3318c:	mov	r2, #0
   33190:	str	r2, [r3]
   33194:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33198:	cmp	r3, #0
   3319c:	beq	331a8 <flatcc_verify_error_string@@Base+0x8d0>
   331a0:	mov	r3, #4
   331a4:	b	3326c <flatcc_verify_error_string@@Base+0x994>
   331a8:	mov	r3, #0
   331ac:	b	3326c <flatcc_verify_error_string@@Base+0x994>
   331b0:	ldrh	r3, [fp, #-6]
   331b4:	str	r3, [fp, #-12]
   331b8:	ldr	r3, [fp, #-12]
   331bc:	add	r3, r3, #4
   331c0:	str	r3, [fp, #-16]
   331c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   331c8:	ldrh	r3, [r3, #20]
   331cc:	mov	r2, r3
   331d0:	ldr	r3, [fp, #-16]
   331d4:	cmp	r2, r3
   331d8:	movcs	r3, #1
   331dc:	movcc	r3, #0
   331e0:	uxtb	r3, r3
   331e4:	str	r3, [fp, #-20]	; 0xffffffec
   331e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   331ec:	cmp	r3, #0
   331f0:	bne	331fc <flatcc_verify_error_string@@Base+0x924>
   331f4:	mov	r3, #13
   331f8:	b	3326c <flatcc_verify_error_string@@Base+0x994>
   331fc:	mov	r3, #1
   33200:	str	r3, [fp, #-24]	; 0xffffffe8
   33204:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33208:	cmp	r3, #0
   3320c:	bne	33218 <flatcc_verify_error_string@@Base+0x940>
   33210:	mov	r3, #14
   33214:	b	3326c <flatcc_verify_error_string@@Base+0x994>
   33218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3321c:	ldr	r3, [r3, #16]
   33220:	ldr	r2, [fp, #-12]
   33224:	add	r3, r2, r3
   33228:	str	r3, [fp, #-12]
   3322c:	ldr	r3, [fp, #-12]
   33230:	and	r3, r3, #3
   33234:	cmp	r3, #0
   33238:	moveq	r3, #1
   3323c:	movne	r3, #0
   33240:	uxtb	r3, r3
   33244:	str	r3, [fp, #-28]	; 0xffffffe4
   33248:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3324c:	cmp	r3, #0
   33250:	bne	3325c <flatcc_verify_error_string@@Base+0x984>
   33254:	mov	r3, #12
   33258:	b	3326c <flatcc_verify_error_string@@Base+0x994>
   3325c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33260:	ldr	r2, [fp, #-12]
   33264:	str	r2, [r3]
   33268:	mov	r3, #0
   3326c:	mov	r0, r3
   33270:	sub	sp, fp, #4
   33274:	pop	{fp, pc}
   33278:	push	{fp, lr}
   3327c:	add	fp, sp, #4
   33280:	sub	sp, sp, #32
   33284:	str	r0, [fp, #-24]	; 0xffffffe8
   33288:	str	r1, [fp, #-28]	; 0xffffffe4
   3328c:	str	r2, [fp, #-32]	; 0xffffffe0
   33290:	str	r3, [fp, #-36]	; 0xffffffdc
   33294:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33298:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3329c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   332a0:	bl	32ce8 <flatcc_verify_error_string@@Base+0x410>
   332a4:	str	r0, [fp, #-8]
   332a8:	ldr	r3, [fp, #-8]
   332ac:	cmp	r3, #0
   332b0:	bne	332bc <flatcc_verify_error_string@@Base+0x9e4>
   332b4:	mov	r3, #17
   332b8:	b	33368 <flatcc_verify_error_string@@Base+0xa90>
   332bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   332c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   332c4:	add	r3, r2, r3
   332c8:	str	r3, [fp, #-32]	; 0xffffffe0
   332cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   332d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   332d4:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   332d8:	str	r0, [fp, #-12]
   332dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   332e0:	add	r3, r3, #4
   332e4:	str	r3, [fp, #-32]	; 0xffffffe0
   332e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   332ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   332f0:	sub	r2, r2, r3
   332f4:	ldr	r3, [fp, #-12]
   332f8:	add	r3, r3, #1
   332fc:	cmp	r2, r3
   33300:	movcs	r3, #1
   33304:	movcc	r3, #0
   33308:	uxtb	r3, r3
   3330c:	str	r3, [fp, #-16]
   33310:	ldr	r3, [fp, #-16]
   33314:	cmp	r3, #0
   33318:	bne	33324 <flatcc_verify_error_string@@Base+0xa4c>
   3331c:	mov	r3, #8
   33320:	b	33368 <flatcc_verify_error_string@@Base+0xa90>
   33324:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33328:	ldr	r3, [fp, #-12]
   3332c:	add	r3, r2, r3
   33330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33334:	add	r3, r2, r3
   33338:	ldrb	r3, [r3]
   3333c:	cmp	r3, #0
   33340:	moveq	r3, #1
   33344:	movne	r3, #0
   33348:	uxtb	r3, r3
   3334c:	str	r3, [fp, #-20]	; 0xffffffec
   33350:	ldr	r3, [fp, #-20]	; 0xffffffec
   33354:	cmp	r3, #0
   33358:	bne	33364 <flatcc_verify_error_string@@Base+0xa8c>
   3335c:	mov	r3, #7
   33360:	b	33368 <flatcc_verify_error_string@@Base+0xa90>
   33364:	mov	r3, #0
   33368:	mov	r0, r3
   3336c:	sub	sp, fp, #4
   33370:	pop	{fp, pc}
   33374:	push	{fp, lr}
   33378:	add	fp, sp, #4
   3337c:	sub	sp, sp, #32
   33380:	str	r0, [fp, #-24]	; 0xffffffe8
   33384:	str	r1, [fp, #-28]	; 0xffffffe4
   33388:	str	r2, [fp, #-32]	; 0xffffffe0
   3338c:	str	r3, [fp, #-36]	; 0xffffffdc
   33390:	ldrh	r3, [fp, #8]
   33394:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33398:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3339c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   333a0:	bl	32d60 <flatcc_verify_error_string@@Base+0x488>
   333a4:	str	r0, [fp, #-8]
   333a8:	ldr	r3, [fp, #-8]
   333ac:	cmp	r3, #0
   333b0:	bne	333bc <flatcc_verify_error_string@@Base+0xae4>
   333b4:	mov	r3, #16
   333b8:	b	3345c <flatcc_verify_error_string@@Base+0xb84>
   333bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   333c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   333c4:	add	r3, r2, r3
   333c8:	str	r3, [fp, #-32]	; 0xffffffe0
   333cc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   333d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   333d4:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   333d8:	str	r0, [fp, #-12]
   333dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   333e0:	add	r3, r3, #4
   333e4:	str	r3, [fp, #-32]	; 0xffffffe0
   333e8:	ldr	r2, [fp, #-12]
   333ec:	ldr	r3, [fp, #12]
   333f0:	cmp	r2, r3
   333f4:	movls	r3, #1
   333f8:	movhi	r3, #0
   333fc:	uxtb	r3, r3
   33400:	str	r3, [fp, #-16]
   33404:	ldr	r3, [fp, #-16]
   33408:	cmp	r3, #0
   3340c:	bne	33418 <flatcc_verify_error_string@@Base+0xb40>
   33410:	mov	r3, #25
   33414:	b	3345c <flatcc_verify_error_string@@Base+0xb84>
   33418:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3341c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33420:	sub	r2, r2, r3
   33424:	ldr	r3, [fp, #-12]
   33428:	ldr	r1, [fp, #4]
   3342c:	mul	r3, r1, r3
   33430:	cmp	r2, r3
   33434:	movcs	r3, #1
   33438:	movcc	r3, #0
   3343c:	uxtb	r3, r3
   33440:	str	r3, [fp, #-20]	; 0xffffffec
   33444:	ldr	r3, [fp, #-20]	; 0xffffffec
   33448:	cmp	r3, #0
   3344c:	bne	33458 <flatcc_verify_error_string@@Base+0xb80>
   33450:	mov	r3, #26
   33454:	b	3345c <flatcc_verify_error_string@@Base+0xb84>
   33458:	mov	r3, #0
   3345c:	mov	r0, r3
   33460:	sub	sp, fp, #4
   33464:	pop	{fp, pc}
   33468:	push	{fp, lr}
   3346c:	add	fp, sp, #4
   33470:	sub	sp, sp, #40	; 0x28
   33474:	str	r0, [fp, #-16]
   33478:	str	r1, [fp, #-20]	; 0xffffffec
   3347c:	str	r2, [fp, #-24]	; 0xffffffe8
   33480:	str	r3, [fp, #-28]	; 0xffffffe4
   33484:	mvn	r3, #-1073741824	; 0xc0000000
   33488:	str	r3, [sp, #8]
   3348c:	mov	r3, #4
   33490:	str	r3, [sp, #4]
   33494:	mov	r3, #4
   33498:	str	r3, [sp]
   3349c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   334a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   334a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   334a8:	ldr	r0, [fp, #-16]
   334ac:	bl	33374 <flatcc_verify_error_string@@Base+0xa9c>
   334b0:	mov	r3, r0
   334b4:	cmp	r3, #0
   334b8:	beq	334f0 <flatcc_verify_error_string@@Base+0xc18>
   334bc:	mvn	r3, #-1073741824	; 0xc0000000
   334c0:	str	r3, [sp, #8]
   334c4:	mov	r3, #4
   334c8:	str	r3, [sp, #4]
   334cc:	mov	r3, #4
   334d0:	str	r3, [sp]
   334d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   334d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   334dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   334e0:	ldr	r0, [fp, #-16]
   334e4:	bl	33374 <flatcc_verify_error_string@@Base+0xa9c>
   334e8:	mov	r3, r0
   334ec:	b	335a8 <flatcc_verify_error_string@@Base+0xcd0>
   334f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   334f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   334f8:	add	r3, r2, r3
   334fc:	str	r3, [fp, #-24]	; 0xffffffe8
   33500:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33504:	ldr	r0, [fp, #-16]
   33508:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   3350c:	str	r0, [fp, #-12]
   33510:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33514:	add	r3, r3, #4
   33518:	str	r3, [fp, #-24]	; 0xffffffe8
   3351c:	mov	r3, #0
   33520:	str	r3, [fp, #-8]
   33524:	b	33594 <flatcc_verify_error_string@@Base+0xcbc>
   33528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3352c:	ldr	r0, [fp, #-16]
   33530:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33534:	mov	r3, r0
   33538:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3353c:	ldr	r1, [fp, #-20]	; 0xffffffec
   33540:	ldr	r0, [fp, #-16]
   33544:	bl	33278 <flatcc_verify_error_string@@Base+0x9a0>
   33548:	mov	r3, r0
   3354c:	cmp	r3, #0
   33550:	beq	3357c <flatcc_verify_error_string@@Base+0xca4>
   33554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33558:	ldr	r0, [fp, #-16]
   3355c:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33560:	mov	r3, r0
   33564:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33568:	ldr	r1, [fp, #-20]	; 0xffffffec
   3356c:	ldr	r0, [fp, #-16]
   33570:	bl	33278 <flatcc_verify_error_string@@Base+0x9a0>
   33574:	mov	r3, r0
   33578:	b	335a8 <flatcc_verify_error_string@@Base+0xcd0>
   3357c:	ldr	r3, [fp, #-8]
   33580:	add	r3, r3, #1
   33584:	str	r3, [fp, #-8]
   33588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3358c:	add	r3, r3, #4
   33590:	str	r3, [fp, #-24]	; 0xffffffe8
   33594:	ldr	r2, [fp, #-8]
   33598:	ldr	r3, [fp, #-12]
   3359c:	cmp	r2, r3
   335a0:	bcc	33528 <flatcc_verify_error_string@@Base+0xc50>
   335a4:	mov	r3, #0
   335a8:	mov	r0, r3
   335ac:	sub	sp, fp, #4
   335b0:	pop	{fp, pc}
   335b4:	push	{r4, fp, lr}
   335b8:	add	fp, sp, #8
   335bc:	sub	sp, sp, #84	; 0x54
   335c0:	str	r0, [fp, #-80]	; 0xffffffb0
   335c4:	str	r1, [fp, #-84]	; 0xffffffac
   335c8:	str	r2, [fp, #-88]	; 0xffffffa8
   335cc:	str	r3, [fp, #-92]	; 0xffffffa4
   335d0:	ldr	r3, [fp, #4]
   335d4:	sub	r3, r3, #1
   335d8:	str	r3, [fp, #-68]	; 0xffffffbc
   335dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   335e0:	str	r3, [fp, #-16]
   335e4:	ldr	r3, [fp, #-16]
   335e8:	cmp	r3, #0
   335ec:	bne	335f8 <flatcc_verify_error_string@@Base+0xd20>
   335f0:	mov	r3, #3
   335f4:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   335f8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   335fc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   33600:	ldr	r0, [fp, #-84]	; 0xffffffac
   33604:	bl	32ce8 <flatcc_verify_error_string@@Base+0x410>
   33608:	str	r0, [fp, #-20]	; 0xffffffec
   3360c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33610:	cmp	r3, #0
   33614:	bne	33620 <flatcc_verify_error_string@@Base+0xd48>
   33618:	mov	r3, #15
   3361c:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   33620:	ldr	r2, [fp, #-88]	; 0xffffffa8
   33624:	ldr	r3, [fp, #-92]	; 0xffffffa4
   33628:	add	r3, r2, r3
   3362c:	str	r3, [fp, #-60]	; 0xffffffc4
   33630:	ldr	r4, [fp, #-60]	; 0xffffffc4
   33634:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33638:	mov	r1, r3
   3363c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   33640:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33644:	mov	r3, r0
   33648:	sub	r3, r4, r3
   3364c:	str	r3, [fp, #-24]	; 0xffffffe8
   33650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33654:	cmp	r3, #0
   33658:	blt	33674 <flatcc_verify_error_string@@Base+0xd9c>
   3365c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33660:	and	r3, r3, #1
   33664:	cmp	r3, #0
   33668:	bne	33674 <flatcc_verify_error_string@@Base+0xd9c>
   3366c:	mov	r3, #1
   33670:	b	33678 <flatcc_verify_error_string@@Base+0xda0>
   33674:	mov	r3, #0
   33678:	str	r3, [fp, #-28]	; 0xffffffe4
   3367c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33680:	cmp	r3, #0
   33684:	bne	33690 <flatcc_verify_error_string@@Base+0xdb8>
   33688:	mov	r3, #29
   3368c:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   33690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33694:	add	r2, r3, #2
   33698:	ldr	r3, [fp, #-84]	; 0xffffffac
   3369c:	cmp	r2, r3
   336a0:	movls	r3, #1
   336a4:	movhi	r3, #0
   336a8:	uxtb	r3, r3
   336ac:	str	r3, [fp, #-32]	; 0xffffffe0
   336b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   336b4:	cmp	r3, #0
   336b8:	bne	336c4 <flatcc_verify_error_string@@Base+0xdec>
   336bc:	mov	r3, #27
   336c0:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   336c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   336c8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   336cc:	bl	32cb0 <flatcc_verify_error_string@@Base+0x3d8>
   336d0:	mov	r3, r0
   336d4:	strh	r3, [fp, #-54]	; 0xffffffca
   336d8:	ldrh	r3, [fp, #-54]	; 0xffffffca
   336dc:	mov	r2, r3
   336e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   336e4:	add	r3, r2, r3
   336e8:	str	r3, [fp, #-36]	; 0xffffffdc
   336ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   336f0:	ldr	r3, [fp, #-84]	; 0xffffffac
   336f4:	cmp	r2, r3
   336f8:	bhi	33714 <flatcc_verify_error_string@@Base+0xe3c>
   336fc:	ldrh	r3, [fp, #-54]	; 0xffffffca
   33700:	and	r3, r3, #1
   33704:	cmp	r3, #0
   33708:	bne	33714 <flatcc_verify_error_string@@Base+0xe3c>
   3370c:	mov	r3, #1
   33710:	b	33718 <flatcc_verify_error_string@@Base+0xe40>
   33714:	mov	r3, #0
   33718:	str	r3, [fp, #-40]	; 0xffffffd8
   3371c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33720:	cmp	r3, #0
   33724:	bne	33730 <flatcc_verify_error_string@@Base+0xe58>
   33728:	mov	r3, #30
   3372c:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   33730:	mov	r3, #1
   33734:	str	r3, [fp, #-44]	; 0xffffffd4
   33738:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3373c:	cmp	r3, #0
   33740:	bne	3374c <flatcc_verify_error_string@@Base+0xe74>
   33744:	mov	r3, #31
   33748:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   3374c:	ldrh	r3, [fp, #-54]	; 0xffffffca
   33750:	cmp	r3, #3
   33754:	movhi	r3, #1
   33758:	movls	r3, #0
   3375c:	uxtb	r3, r3
   33760:	str	r3, [fp, #-48]	; 0xffffffd0
   33764:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33768:	cmp	r3, #0
   3376c:	bne	33778 <flatcc_verify_error_string@@Base+0xea0>
   33770:	mov	r3, #28
   33774:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   33778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3377c:	add	r3, r3, #2
   33780:	mov	r1, r3
   33784:	ldr	r0, [fp, #-80]	; 0xffffffb0
   33788:	bl	32cb0 <flatcc_verify_error_string@@Base+0x3d8>
   3378c:	mov	r3, r0
   33790:	strh	r3, [fp, #-56]	; 0xffffffc8
   33794:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33798:	ldr	r2, [fp, #-84]	; 0xffffffac
   3379c:	sub	r3, r2, r3
   337a0:	ldrh	r2, [fp, #-56]	; 0xffffffc8
   337a4:	cmp	r3, r2
   337a8:	movcs	r3, #1
   337ac:	movcc	r3, #0
   337b0:	uxtb	r3, r3
   337b4:	str	r3, [fp, #-52]	; 0xffffffcc
   337b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   337bc:	cmp	r3, #0
   337c0:	bne	337cc <flatcc_verify_error_string@@Base+0xef4>
   337c4:	mov	r3, #20
   337c8:	b	33800 <flatcc_verify_error_string@@Base+0xf28>
   337cc:	ldr	r2, [fp, #-80]	; 0xffffffb0
   337d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   337d4:	add	r3, r2, r3
   337d8:	str	r3, [fp, #-64]	; 0xffffffc0
   337dc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   337e0:	str	r3, [fp, #-76]	; 0xffffffb4
   337e4:	ldr	r3, [fp, #-84]	; 0xffffffac
   337e8:	str	r3, [fp, #-72]	; 0xffffffb8
   337ec:	sub	r2, fp, #76	; 0x4c
   337f0:	ldr	r3, [fp, #8]
   337f4:	mov	r0, r2
   337f8:	blx	r3
   337fc:	mov	r3, r0
   33800:	mov	r0, r3
   33804:	sub	sp, fp, #8
   33808:	pop	{r4, fp, pc}
   3380c:	push	{fp, lr}
   33810:	add	fp, sp, #4
   33814:	sub	sp, sp, #48	; 0x30
   33818:	str	r0, [fp, #-24]	; 0xffffffe8
   3381c:	str	r1, [fp, #-28]	; 0xffffffe4
   33820:	str	r2, [fp, #-32]	; 0xffffffe0
   33824:	str	r3, [fp, #-36]	; 0xffffffdc
   33828:	ldr	r3, [fp, #4]
   3382c:	sub	r2, r3, #1
   33830:	str	r2, [fp, #4]
   33834:	cmp	r3, #0
   33838:	movgt	r3, #1
   3383c:	movle	r3, #0
   33840:	uxtb	r3, r3
   33844:	str	r3, [fp, #-12]
   33848:	ldr	r3, [fp, #-12]
   3384c:	cmp	r3, #0
   33850:	bne	3385c <flatcc_verify_error_string@@Base+0xf84>
   33854:	mov	r3, #3
   33858:	b	339a8 <flatcc_verify_error_string@@Base+0x10d0>
   3385c:	mvn	r3, #-1073741824	; 0xc0000000
   33860:	str	r3, [sp, #8]
   33864:	mov	r3, #4
   33868:	str	r3, [sp, #4]
   3386c:	mov	r3, #4
   33870:	str	r3, [sp]
   33874:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33878:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3387c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   33880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33884:	bl	33374 <flatcc_verify_error_string@@Base+0xa9c>
   33888:	mov	r3, r0
   3388c:	cmp	r3, #0
   33890:	beq	338c8 <flatcc_verify_error_string@@Base+0xff0>
   33894:	mvn	r3, #-1073741824	; 0xc0000000
   33898:	str	r3, [sp, #8]
   3389c:	mov	r3, #4
   338a0:	str	r3, [sp, #4]
   338a4:	mov	r3, #4
   338a8:	str	r3, [sp]
   338ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   338b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   338b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   338b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   338bc:	bl	33374 <flatcc_verify_error_string@@Base+0xa9c>
   338c0:	mov	r3, r0
   338c4:	b	339a8 <flatcc_verify_error_string@@Base+0x10d0>
   338c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   338cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   338d0:	add	r3, r2, r3
   338d4:	str	r3, [fp, #-32]	; 0xffffffe0
   338d8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   338dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   338e0:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   338e4:	str	r0, [fp, #-16]
   338e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   338ec:	add	r3, r3, #4
   338f0:	str	r3, [fp, #-32]	; 0xffffffe0
   338f4:	mov	r3, #0
   338f8:	str	r3, [fp, #-8]
   338fc:	b	33994 <flatcc_verify_error_string@@Base+0x10bc>
   33900:	ldr	r1, [fp, #-32]	; 0xffffffe0
   33904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33908:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   3390c:	mov	r2, r0
   33910:	ldr	r3, [fp, #8]
   33914:	str	r3, [sp, #4]
   33918:	ldr	r3, [fp, #4]
   3391c:	str	r3, [sp]
   33920:	mov	r3, r2
   33924:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33928:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3392c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33930:	bl	335b4 <flatcc_verify_error_string@@Base+0xcdc>
   33934:	mov	r3, r0
   33938:	cmp	r3, #0
   3393c:	beq	3397c <flatcc_verify_error_string@@Base+0x10a4>
   33940:	ldr	r1, [fp, #-32]	; 0xffffffe0
   33944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33948:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   3394c:	mov	r2, r0
   33950:	ldr	r3, [fp, #8]
   33954:	str	r3, [sp, #4]
   33958:	ldr	r3, [fp, #4]
   3395c:	str	r3, [sp]
   33960:	mov	r3, r2
   33964:	ldr	r2, [fp, #-32]	; 0xffffffe0
   33968:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3396c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33970:	bl	335b4 <flatcc_verify_error_string@@Base+0xcdc>
   33974:	mov	r3, r0
   33978:	b	339a8 <flatcc_verify_error_string@@Base+0x10d0>
   3397c:	ldr	r3, [fp, #-8]
   33980:	add	r3, r3, #1
   33984:	str	r3, [fp, #-8]
   33988:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3398c:	add	r3, r3, #4
   33990:	str	r3, [fp, #-32]	; 0xffffffe0
   33994:	ldr	r2, [fp, #-8]
   33998:	ldr	r3, [fp, #-16]
   3399c:	cmp	r2, r3
   339a0:	bcc	33900 <flatcc_verify_error_string@@Base+0x1028>
   339a4:	mov	r3, #0
   339a8:	mov	r0, r3
   339ac:	sub	sp, fp, #4
   339b0:	pop	{fp, pc}
   339b4:	push	{fp, lr}
   339b8:	add	fp, sp, #4
   339bc:	sub	sp, sp, #88	; 0x58
   339c0:	str	r0, [fp, #-64]	; 0xffffffc0
   339c4:	str	r1, [fp, #-68]	; 0xffffffbc
   339c8:	str	r2, [fp, #-72]	; 0xffffffb8
   339cc:	str	r3, [fp, #-76]	; 0xffffffb4
   339d0:	ldr	r3, [fp, #12]
   339d4:	sub	r2, r3, #1
   339d8:	str	r2, [fp, #12]
   339dc:	cmp	r3, #0
   339e0:	movgt	r3, #1
   339e4:	movle	r3, #0
   339e8:	uxtb	r3, r3
   339ec:	str	r3, [fp, #-12]
   339f0:	ldr	r3, [fp, #-12]
   339f4:	cmp	r3, #0
   339f8:	bne	33a04 <flatcc_verify_error_string@@Base+0x112c>
   339fc:	mov	r3, #3
   33a00:	b	33c00 <flatcc_verify_error_string@@Base+0x1328>
   33a04:	mvn	r3, #-1073741824	; 0xc0000000
   33a08:	str	r3, [sp, #8]
   33a0c:	mov	r3, #4
   33a10:	str	r3, [sp, #4]
   33a14:	mov	r3, #4
   33a18:	str	r3, [sp]
   33a1c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   33a20:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33a24:	ldr	r1, [fp, #-68]	; 0xffffffbc
   33a28:	ldr	r0, [fp, #-64]	; 0xffffffc0
   33a2c:	bl	33374 <flatcc_verify_error_string@@Base+0xa9c>
   33a30:	mov	r3, r0
   33a34:	cmp	r3, #0
   33a38:	beq	33a70 <flatcc_verify_error_string@@Base+0x1198>
   33a3c:	mvn	r3, #-1073741824	; 0xc0000000
   33a40:	str	r3, [sp, #8]
   33a44:	mov	r3, #4
   33a48:	str	r3, [sp, #4]
   33a4c:	mov	r3, #4
   33a50:	str	r3, [sp]
   33a54:	ldr	r3, [fp, #-76]	; 0xffffffb4
   33a58:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33a5c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   33a60:	ldr	r0, [fp, #-64]	; 0xffffffc0
   33a64:	bl	33374 <flatcc_verify_error_string@@Base+0xa9c>
   33a68:	mov	r3, r0
   33a6c:	b	33c00 <flatcc_verify_error_string@@Base+0x1328>
   33a70:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33a74:	ldr	r3, [fp, #-76]	; 0xffffffb4
   33a78:	add	r3, r2, r3
   33a7c:	str	r3, [fp, #-72]	; 0xffffffb8
   33a80:	ldr	r1, [fp, #-72]	; 0xffffffb8
   33a84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   33a88:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33a8c:	str	r0, [fp, #-16]
   33a90:	ldr	r2, [fp, #-16]
   33a94:	ldr	r3, [fp, #4]
   33a98:	cmp	r2, r3
   33a9c:	moveq	r3, #1
   33aa0:	movne	r3, #0
   33aa4:	uxtb	r3, r3
   33aa8:	str	r3, [fp, #-20]	; 0xffffffec
   33aac:	ldr	r3, [fp, #-20]	; 0xffffffec
   33ab0:	cmp	r3, #0
   33ab4:	bne	33ac0 <flatcc_verify_error_string@@Base+0x11e8>
   33ab8:	mov	r3, #34	; 0x22
   33abc:	b	33c00 <flatcc_verify_error_string@@Base+0x1328>
   33ac0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33ac4:	add	r3, r3, #4
   33ac8:	str	r3, [fp, #-72]	; 0xffffffb8
   33acc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33ad0:	str	r3, [fp, #-56]	; 0xffffffc8
   33ad4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   33ad8:	str	r3, [fp, #-52]	; 0xffffffcc
   33adc:	ldr	r3, [fp, #12]
   33ae0:	str	r3, [fp, #-48]	; 0xffffffd0
   33ae4:	mov	r3, #0
   33ae8:	str	r3, [fp, #-8]
   33aec:	b	33bec <flatcc_verify_error_string@@Base+0x1314>
   33af0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   33af4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   33af8:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33afc:	str	r0, [fp, #-24]	; 0xffffffe8
   33b00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33b04:	cmp	r3, #0
   33b08:	bne	33b44 <flatcc_verify_error_string@@Base+0x126c>
   33b0c:	ldr	r2, [fp, #8]
   33b10:	ldr	r3, [fp, #-8]
   33b14:	add	r3, r2, r3
   33b18:	ldrb	r3, [r3]
   33b1c:	cmp	r3, #0
   33b20:	moveq	r3, #1
   33b24:	movne	r3, #0
   33b28:	uxtb	r3, r3
   33b2c:	str	r3, [fp, #-32]	; 0xffffffe0
   33b30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33b34:	cmp	r3, #0
   33b38:	bne	33bd4 <flatcc_verify_error_string@@Base+0x12fc>
   33b3c:	mov	r3, #32
   33b40:	b	33c00 <flatcc_verify_error_string@@Base+0x1328>
   33b44:	ldr	r2, [fp, #8]
   33b48:	ldr	r3, [fp, #-8]
   33b4c:	add	r3, r2, r3
   33b50:	ldrb	r3, [r3]
   33b54:	cmp	r3, #0
   33b58:	movne	r3, #1
   33b5c:	moveq	r3, #0
   33b60:	uxtb	r3, r3
   33b64:	str	r3, [fp, #-28]	; 0xffffffe4
   33b68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33b6c:	cmp	r3, #0
   33b70:	bne	33b7c <flatcc_verify_error_string@@Base+0x12a4>
   33b74:	mov	r3, #33	; 0x21
   33b78:	b	33c00 <flatcc_verify_error_string@@Base+0x1328>
   33b7c:	ldr	r2, [fp, #8]
   33b80:	ldr	r3, [fp, #-8]
   33b84:	add	r3, r2, r3
   33b88:	ldrb	r3, [r3]
   33b8c:	strb	r3, [fp, #-44]	; 0xffffffd4
   33b90:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33b94:	str	r3, [fp, #-40]	; 0xffffffd8
   33b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33b9c:	str	r3, [fp, #-36]	; 0xffffffdc
   33ba0:	sub	r2, fp, #56	; 0x38
   33ba4:	ldr	r3, [fp, #16]
   33ba8:	mov	r0, r2
   33bac:	blx	r3
   33bb0:	mov	r3, r0
   33bb4:	cmp	r3, #0
   33bb8:	beq	33bd4 <flatcc_verify_error_string@@Base+0x12fc>
   33bbc:	sub	r2, fp, #56	; 0x38
   33bc0:	ldr	r3, [fp, #16]
   33bc4:	mov	r0, r2
   33bc8:	blx	r3
   33bcc:	mov	r3, r0
   33bd0:	b	33c00 <flatcc_verify_error_string@@Base+0x1328>
   33bd4:	ldr	r3, [fp, #-8]
   33bd8:	add	r3, r3, #1
   33bdc:	str	r3, [fp, #-8]
   33be0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33be4:	add	r3, r3, #4
   33be8:	str	r3, [fp, #-72]	; 0xffffffb8
   33bec:	ldr	r2, [fp, #-8]
   33bf0:	ldr	r3, [fp, #-16]
   33bf4:	cmp	r2, r3
   33bf8:	bcc	33af0 <flatcc_verify_error_string@@Base+0x1218>
   33bfc:	mov	r3, #0
   33c00:	mov	r0, r3
   33c04:	sub	sp, fp, #4
   33c08:	pop	{fp, pc}

00033c0c <flatcc_verify_field@@Base>:
   33c0c:	push	{fp, lr}
   33c10:	add	fp, sp, #4
   33c14:	sub	sp, sp, #24
   33c18:	str	r0, [fp, #-8]
   33c1c:	str	r2, [fp, #-16]
   33c20:	strh	r1, [fp, #-10]
   33c24:	strh	r3, [fp, #-12]
   33c28:	ldrh	r1, [fp, #-10]
   33c2c:	ldrh	r3, [fp, #-12]
   33c30:	str	r3, [sp]
   33c34:	ldr	r3, [fp, #-16]
   33c38:	mov	r2, #0
   33c3c:	ldr	r0, [fp, #-8]
   33c40:	bl	32ff4 <flatcc_verify_error_string@@Base+0x71c>
   33c44:	mov	r3, r0
   33c48:	cmp	r3, #0
   33c4c:	beq	33c74 <flatcc_verify_field@@Base+0x68>
   33c50:	ldrh	r1, [fp, #-10]
   33c54:	ldrh	r3, [fp, #-12]
   33c58:	str	r3, [sp]
   33c5c:	ldr	r3, [fp, #-16]
   33c60:	mov	r2, #0
   33c64:	ldr	r0, [fp, #-8]
   33c68:	bl	32ff4 <flatcc_verify_error_string@@Base+0x71c>
   33c6c:	mov	r3, r0
   33c70:	b	33c78 <flatcc_verify_field@@Base+0x6c>
   33c74:	mov	r3, #0
   33c78:	mov	r0, r3
   33c7c:	sub	sp, fp, #4
   33c80:	pop	{fp, pc}

00033c84 <flatcc_verify_string_field@@Base>:
   33c84:	push	{r4, r5, r6, fp, lr}
   33c88:	add	fp, sp, #16
   33c8c:	sub	sp, sp, #28
   33c90:	str	r0, [fp, #-32]	; 0xffffffe0
   33c94:	mov	r3, r1
   33c98:	str	r2, [fp, #-40]	; 0xffffffd8
   33c9c:	strh	r3, [fp, #-34]	; 0xffffffde
   33ca0:	sub	r3, fp, #28
   33ca4:	ldrh	r1, [fp, #-34]	; 0xffffffde
   33ca8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33cac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33cb0:	bl	33148 <flatcc_verify_error_string@@Base+0x870>
   33cb4:	str	r0, [fp, #-24]	; 0xffffffe8
   33cb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33cbc:	cmp	r3, #0
   33cc0:	bne	33cd0 <flatcc_verify_string_field@@Base+0x4c>
   33cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33cc8:	cmp	r3, #0
   33ccc:	bne	33cd8 <flatcc_verify_string_field@@Base+0x54>
   33cd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33cd4:	b	33d1c <flatcc_verify_string_field@@Base+0x98>
   33cd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33cdc:	ldr	r4, [r3]
   33ce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33ce4:	ldr	r5, [r3, #4]
   33ce8:	ldr	r6, [fp, #-28]	; 0xffffffe4
   33cec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33cf0:	ldr	r3, [r3]
   33cf4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33cf8:	mov	r1, r2
   33cfc:	mov	r0, r3
   33d00:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33d04:	mov	r3, r0
   33d08:	mov	r2, r6
   33d0c:	mov	r1, r5
   33d10:	mov	r0, r4
   33d14:	bl	33278 <flatcc_verify_error_string@@Base+0x9a0>
   33d18:	mov	r3, r0
   33d1c:	mov	r0, r3
   33d20:	sub	sp, fp, #16
   33d24:	pop	{r4, r5, r6, fp, pc}

00033d28 <flatcc_verify_vector_field@@Base>:
   33d28:	push	{r4, r5, r6, fp, lr}
   33d2c:	add	fp, sp, #16
   33d30:	sub	sp, sp, #44	; 0x2c
   33d34:	str	r0, [fp, #-32]	; 0xffffffe0
   33d38:	str	r2, [fp, #-40]	; 0xffffffd8
   33d3c:	str	r3, [fp, #-44]	; 0xffffffd4
   33d40:	strh	r1, [fp, #-34]	; 0xffffffde
   33d44:	sub	r3, fp, #28
   33d48:	ldrh	r1, [fp, #-34]	; 0xffffffde
   33d4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33d54:	bl	33148 <flatcc_verify_error_string@@Base+0x870>
   33d58:	str	r0, [fp, #-24]	; 0xffffffe8
   33d5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33d60:	cmp	r3, #0
   33d64:	bne	33d74 <flatcc_verify_vector_field@@Base+0x4c>
   33d68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33d6c:	cmp	r3, #0
   33d70:	bne	33d7c <flatcc_verify_vector_field@@Base+0x54>
   33d74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33d78:	b	33ddc <flatcc_verify_vector_field@@Base+0xb4>
   33d7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33d80:	ldr	r4, [r3]
   33d84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33d88:	ldr	r5, [r3, #4]
   33d8c:	ldr	r6, [fp, #-28]	; 0xffffffe4
   33d90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33d94:	ldr	r3, [r3]
   33d98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33d9c:	mov	r1, r2
   33da0:	mov	r0, r3
   33da4:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33da8:	mov	r2, r0
   33dac:	ldr	r3, [fp, #8]
   33db0:	str	r3, [sp, #8]
   33db4:	ldrh	r3, [fp, #4]
   33db8:	str	r3, [sp, #4]
   33dbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   33dc0:	str	r3, [sp]
   33dc4:	mov	r3, r2
   33dc8:	mov	r2, r6
   33dcc:	mov	r1, r5
   33dd0:	mov	r0, r4
   33dd4:	bl	33374 <flatcc_verify_error_string@@Base+0xa9c>
   33dd8:	mov	r3, r0
   33ddc:	mov	r0, r3
   33de0:	sub	sp, fp, #16
   33de4:	pop	{r4, r5, r6, fp, pc}

00033de8 <flatcc_verify_string_vector_field@@Base>:
   33de8:	push	{r4, r5, r6, fp, lr}
   33dec:	add	fp, sp, #16
   33df0:	sub	sp, sp, #28
   33df4:	str	r0, [fp, #-32]	; 0xffffffe0
   33df8:	mov	r3, r1
   33dfc:	str	r2, [fp, #-40]	; 0xffffffd8
   33e00:	strh	r3, [fp, #-34]	; 0xffffffde
   33e04:	sub	r3, fp, #28
   33e08:	ldrh	r1, [fp, #-34]	; 0xffffffde
   33e0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33e10:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33e14:	bl	33148 <flatcc_verify_error_string@@Base+0x870>
   33e18:	str	r0, [fp, #-24]	; 0xffffffe8
   33e1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33e20:	cmp	r3, #0
   33e24:	bne	33e34 <flatcc_verify_string_vector_field@@Base+0x4c>
   33e28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e2c:	cmp	r3, #0
   33e30:	bne	33e3c <flatcc_verify_string_vector_field@@Base+0x54>
   33e34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33e38:	b	33e80 <flatcc_verify_string_vector_field@@Base+0x98>
   33e3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33e40:	ldr	r4, [r3]
   33e44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33e48:	ldr	r5, [r3, #4]
   33e4c:	ldr	r6, [fp, #-28]	; 0xffffffe4
   33e50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33e54:	ldr	r3, [r3]
   33e58:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33e5c:	mov	r1, r2
   33e60:	mov	r0, r3
   33e64:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33e68:	mov	r3, r0
   33e6c:	mov	r2, r6
   33e70:	mov	r1, r5
   33e74:	mov	r0, r4
   33e78:	bl	33468 <flatcc_verify_error_string@@Base+0xb90>
   33e7c:	mov	r3, r0
   33e80:	mov	r0, r3
   33e84:	sub	sp, fp, #16
   33e88:	pop	{r4, r5, r6, fp, pc}

00033e8c <flatcc_verify_table_field@@Base>:
   33e8c:	push	{r4, r5, r6, fp, lr}
   33e90:	add	fp, sp, #16
   33e94:	sub	sp, sp, #36	; 0x24
   33e98:	str	r0, [fp, #-32]	; 0xffffffe0
   33e9c:	str	r2, [fp, #-40]	; 0xffffffd8
   33ea0:	str	r3, [fp, #-44]	; 0xffffffd4
   33ea4:	strh	r1, [fp, #-34]	; 0xffffffde
   33ea8:	sub	r3, fp, #28
   33eac:	ldrh	r1, [fp, #-34]	; 0xffffffde
   33eb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33eb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33eb8:	bl	33148 <flatcc_verify_error_string@@Base+0x870>
   33ebc:	str	r0, [fp, #-24]	; 0xffffffe8
   33ec0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33ec4:	cmp	r3, #0
   33ec8:	bne	33ed8 <flatcc_verify_table_field@@Base+0x4c>
   33ecc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33ed0:	cmp	r3, #0
   33ed4:	bne	33ee0 <flatcc_verify_table_field@@Base+0x54>
   33ed8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33edc:	b	33f3c <flatcc_verify_table_field@@Base+0xb0>
   33ee0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33ee4:	ldr	r4, [r3]
   33ee8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33eec:	ldr	r5, [r3, #4]
   33ef0:	ldr	r6, [fp, #-28]	; 0xffffffe4
   33ef4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33ef8:	ldr	r3, [r3]
   33efc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33f00:	mov	r1, r2
   33f04:	mov	r0, r3
   33f08:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33f0c:	mov	r1, r0
   33f10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33f14:	ldr	r3, [r3, #8]
   33f18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   33f1c:	str	r2, [sp, #4]
   33f20:	str	r3, [sp]
   33f24:	mov	r3, r1
   33f28:	mov	r2, r6
   33f2c:	mov	r1, r5
   33f30:	mov	r0, r4
   33f34:	bl	335b4 <flatcc_verify_error_string@@Base+0xcdc>
   33f38:	mov	r3, r0
   33f3c:	mov	r0, r3
   33f40:	sub	sp, fp, #16
   33f44:	pop	{r4, r5, r6, fp, pc}

00033f48 <flatcc_verify_table_vector_field@@Base>:
   33f48:	push	{r4, r5, r6, fp, lr}
   33f4c:	add	fp, sp, #16
   33f50:	sub	sp, sp, #36	; 0x24
   33f54:	str	r0, [fp, #-32]	; 0xffffffe0
   33f58:	str	r2, [fp, #-40]	; 0xffffffd8
   33f5c:	str	r3, [fp, #-44]	; 0xffffffd4
   33f60:	strh	r1, [fp, #-34]	; 0xffffffde
   33f64:	sub	r3, fp, #28
   33f68:	ldrh	r1, [fp, #-34]	; 0xffffffde
   33f6c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   33f70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   33f74:	bl	33148 <flatcc_verify_error_string@@Base+0x870>
   33f78:	str	r0, [fp, #-24]	; 0xffffffe8
   33f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33f80:	cmp	r3, #0
   33f84:	bne	33f94 <flatcc_verify_table_vector_field@@Base+0x4c>
   33f88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33f8c:	cmp	r3, #0
   33f90:	bne	33f9c <flatcc_verify_table_vector_field@@Base+0x54>
   33f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33f98:	b	33ff8 <flatcc_verify_table_vector_field@@Base+0xb0>
   33f9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33fa0:	ldr	r4, [r3]
   33fa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33fa8:	ldr	r5, [r3, #4]
   33fac:	ldr	r6, [fp, #-28]	; 0xffffffe4
   33fb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33fb4:	ldr	r3, [r3]
   33fb8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   33fbc:	mov	r1, r2
   33fc0:	mov	r0, r3
   33fc4:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   33fc8:	mov	r1, r0
   33fcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33fd0:	ldr	r3, [r3, #8]
   33fd4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   33fd8:	str	r2, [sp, #4]
   33fdc:	str	r3, [sp]
   33fe0:	mov	r3, r1
   33fe4:	mov	r2, r6
   33fe8:	mov	r1, r5
   33fec:	mov	r0, r4
   33ff0:	bl	3380c <flatcc_verify_error_string@@Base+0xf34>
   33ff4:	mov	r3, r0
   33ff8:	mov	r0, r3
   33ffc:	sub	sp, fp, #16
   34000:	pop	{r4, r5, r6, fp, pc}

00034004 <flatcc_verify_union_table@@Base>:
   34004:	push	{fp, lr}
   34008:	add	fp, sp, #4
   3400c:	sub	sp, sp, #16
   34010:	str	r0, [fp, #-8]
   34014:	str	r1, [fp, #-12]
   34018:	ldr	r3, [fp, #-8]
   3401c:	ldr	r0, [r3]
   34020:	ldr	r3, [fp, #-8]
   34024:	ldr	r1, [r3, #4]
   34028:	ldr	r3, [fp, #-8]
   3402c:	ldr	ip, [r3, #16]
   34030:	ldr	r3, [fp, #-8]
   34034:	ldr	lr, [r3, #20]
   34038:	ldr	r3, [fp, #-8]
   3403c:	ldr	r3, [r3, #8]
   34040:	ldr	r2, [fp, #-12]
   34044:	str	r2, [sp, #4]
   34048:	str	r3, [sp]
   3404c:	mov	r3, lr
   34050:	mov	r2, ip
   34054:	bl	335b4 <flatcc_verify_error_string@@Base+0xcdc>
   34058:	mov	r3, r0
   3405c:	mov	r0, r3
   34060:	sub	sp, fp, #4
   34064:	pop	{fp, pc}

00034068 <flatcc_verify_union_struct@@Base>:
   34068:	push	{fp, lr}
   3406c:	add	fp, sp, #4
   34070:	sub	sp, sp, #24
   34074:	str	r0, [fp, #-8]
   34078:	str	r1, [fp, #-12]
   3407c:	mov	r3, r2
   34080:	strh	r3, [fp, #-14]
   34084:	ldr	r3, [fp, #-8]
   34088:	ldr	r0, [r3, #4]
   3408c:	ldr	r3, [fp, #-8]
   34090:	ldr	r1, [r3, #16]
   34094:	ldr	r3, [fp, #-8]
   34098:	ldr	r2, [r3, #20]
   3409c:	ldrh	r3, [fp, #-14]
   340a0:	str	r3, [sp]
   340a4:	ldr	r3, [fp, #-12]
   340a8:	bl	32e00 <flatcc_verify_error_string@@Base+0x528>
   340ac:	mov	r3, r0
   340b0:	mov	r0, r3
   340b4:	sub	sp, fp, #4
   340b8:	pop	{fp, pc}

000340bc <flatcc_verify_union_string@@Base>:
   340bc:	push	{fp, lr}
   340c0:	add	fp, sp, #4
   340c4:	sub	sp, sp, #8
   340c8:	str	r0, [fp, #-8]
   340cc:	ldr	r3, [fp, #-8]
   340d0:	ldr	r0, [r3]
   340d4:	ldr	r3, [fp, #-8]
   340d8:	ldr	r1, [r3, #4]
   340dc:	ldr	r3, [fp, #-8]
   340e0:	ldr	r2, [r3, #16]
   340e4:	ldr	r3, [fp, #-8]
   340e8:	ldr	r3, [r3, #20]
   340ec:	bl	33278 <flatcc_verify_error_string@@Base+0x9a0>
   340f0:	mov	r3, r0
   340f4:	mov	r0, r3
   340f8:	sub	sp, fp, #4
   340fc:	pop	{fp, pc}

00034100 <flatcc_verify_buffer_header@@Base>:
   34100:	push	{fp, lr}
   34104:	add	fp, sp, #4
   34108:	sub	sp, sp, #40	; 0x28
   3410c:	str	r0, [fp, #-32]	; 0xffffffe0
   34110:	str	r1, [fp, #-36]	; 0xffffffdc
   34114:	str	r2, [fp, #-40]	; 0xffffffd8
   34118:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3411c:	and	r3, r3, #3
   34120:	cmp	r3, #0
   34124:	moveq	r3, #1
   34128:	movne	r3, #0
   3412c:	uxtb	r3, r3
   34130:	str	r3, [fp, #-8]
   34134:	ldr	r3, [fp, #-8]
   34138:	cmp	r3, #0
   3413c:	bne	34148 <flatcc_verify_buffer_header@@Base+0x48>
   34140:	mov	r3, #5
   34144:	b	3420c <flatcc_verify_buffer_header@@Base+0x10c>
   34148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3414c:	cmn	r3, #9
   34150:	movls	r3, #1
   34154:	movhi	r3, #0
   34158:	uxtb	r3, r3
   3415c:	str	r3, [fp, #-12]
   34160:	ldr	r3, [fp, #-12]
   34164:	cmp	r3, #0
   34168:	bne	34174 <flatcc_verify_buffer_header@@Base+0x74>
   3416c:	mov	r3, #6
   34170:	b	3420c <flatcc_verify_buffer_header@@Base+0x10c>
   34174:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34178:	cmp	r3, #7
   3417c:	movhi	r3, #1
   34180:	movls	r3, #0
   34184:	uxtb	r3, r3
   34188:	str	r3, [fp, #-16]
   3418c:	ldr	r3, [fp, #-16]
   34190:	cmp	r3, #0
   34194:	bne	341a0 <flatcc_verify_buffer_header@@Base+0xa0>
   34198:	mov	r3, #1
   3419c:	b	3420c <flatcc_verify_buffer_header@@Base+0x10c>
   341a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   341a4:	cmp	r3, #0
   341a8:	beq	34208 <flatcc_verify_buffer_header@@Base+0x108>
   341ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   341b0:	bl	32c30 <flatcc_verify_error_string@@Base+0x358>
   341b4:	str	r0, [fp, #-20]	; 0xffffffec
   341b8:	mov	r1, #4
   341bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   341c0:	bl	32c78 <flatcc_verify_error_string@@Base+0x3a0>
   341c4:	str	r0, [fp, #-24]	; 0xffffffe8
   341c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   341cc:	cmp	r3, #0
   341d0:	beq	341e4 <flatcc_verify_buffer_header@@Base+0xe4>
   341d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   341d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   341dc:	cmp	r2, r3
   341e0:	bne	341ec <flatcc_verify_buffer_header@@Base+0xec>
   341e4:	mov	r3, #1
   341e8:	b	341f0 <flatcc_verify_buffer_header@@Base+0xf0>
   341ec:	mov	r3, #0
   341f0:	str	r3, [fp, #-28]	; 0xffffffe4
   341f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   341f8:	cmp	r3, #0
   341fc:	bne	34208 <flatcc_verify_buffer_header@@Base+0x108>
   34200:	mov	r3, #2
   34204:	b	3420c <flatcc_verify_buffer_header@@Base+0x10c>
   34208:	mov	r3, #0
   3420c:	mov	r0, r3
   34210:	sub	sp, fp, #4
   34214:	pop	{fp, pc}

00034218 <flatcc_verify_typed_buffer_header@@Base>:
   34218:	push	{fp, lr}
   3421c:	add	fp, sp, #4
   34220:	sub	sp, sp, #40	; 0x28
   34224:	str	r0, [fp, #-32]	; 0xffffffe0
   34228:	str	r1, [fp, #-36]	; 0xffffffdc
   3422c:	str	r2, [fp, #-40]	; 0xffffffd8
   34230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34234:	and	r3, r3, #3
   34238:	cmp	r3, #0
   3423c:	moveq	r3, #1
   34240:	movne	r3, #0
   34244:	uxtb	r3, r3
   34248:	str	r3, [fp, #-8]
   3424c:	ldr	r3, [fp, #-8]
   34250:	cmp	r3, #0
   34254:	bne	34260 <flatcc_verify_typed_buffer_header@@Base+0x48>
   34258:	mov	r3, #5
   3425c:	b	34320 <flatcc_verify_typed_buffer_header@@Base+0x108>
   34260:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34264:	cmn	r3, #9
   34268:	movls	r3, #1
   3426c:	movhi	r3, #0
   34270:	uxtb	r3, r3
   34274:	str	r3, [fp, #-12]
   34278:	ldr	r3, [fp, #-12]
   3427c:	cmp	r3, #0
   34280:	bne	3428c <flatcc_verify_typed_buffer_header@@Base+0x74>
   34284:	mov	r3, #6
   34288:	b	34320 <flatcc_verify_typed_buffer_header@@Base+0x108>
   3428c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34290:	cmp	r3, #7
   34294:	movhi	r3, #1
   34298:	movls	r3, #0
   3429c:	uxtb	r3, r3
   342a0:	str	r3, [fp, #-16]
   342a4:	ldr	r3, [fp, #-16]
   342a8:	cmp	r3, #0
   342ac:	bne	342b8 <flatcc_verify_typed_buffer_header@@Base+0xa0>
   342b0:	mov	r3, #1
   342b4:	b	34320 <flatcc_verify_typed_buffer_header@@Base+0x108>
   342b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   342bc:	cmp	r3, #0
   342c0:	beq	3431c <flatcc_verify_typed_buffer_header@@Base+0x104>
   342c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   342c8:	str	r3, [fp, #-20]	; 0xffffffec
   342cc:	mov	r1, #4
   342d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   342d4:	bl	32c78 <flatcc_verify_error_string@@Base+0x3a0>
   342d8:	str	r0, [fp, #-24]	; 0xffffffe8
   342dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   342e0:	cmp	r3, #0
   342e4:	beq	342f8 <flatcc_verify_typed_buffer_header@@Base+0xe0>
   342e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   342ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   342f0:	cmp	r2, r3
   342f4:	bne	34300 <flatcc_verify_typed_buffer_header@@Base+0xe8>
   342f8:	mov	r3, #1
   342fc:	b	34304 <flatcc_verify_typed_buffer_header@@Base+0xec>
   34300:	mov	r3, #0
   34304:	str	r3, [fp, #-28]	; 0xffffffe4
   34308:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3430c:	cmp	r3, #0
   34310:	bne	3431c <flatcc_verify_typed_buffer_header@@Base+0x104>
   34314:	mov	r3, #2
   34318:	b	34320 <flatcc_verify_typed_buffer_header@@Base+0x108>
   3431c:	mov	r3, #0
   34320:	mov	r0, r3
   34324:	sub	sp, fp, #4
   34328:	pop	{fp, pc}

0003432c <flatcc_verify_struct_as_root@@Base>:
   3432c:	push	{fp, lr}
   34330:	add	fp, sp, #4
   34334:	sub	sp, sp, #24
   34338:	str	r0, [fp, #-8]
   3433c:	str	r1, [fp, #-12]
   34340:	str	r2, [fp, #-16]
   34344:	str	r3, [fp, #-20]	; 0xffffffec
   34348:	ldr	r2, [fp, #-16]
   3434c:	ldr	r1, [fp, #-12]
   34350:	ldr	r0, [fp, #-8]
   34354:	bl	34100 <flatcc_verify_buffer_header@@Base>
   34358:	mov	r3, r0
   3435c:	cmp	r3, #0
   34360:	beq	3437c <flatcc_verify_struct_as_root@@Base+0x50>
   34364:	ldr	r2, [fp, #-16]
   34368:	ldr	r1, [fp, #-12]
   3436c:	ldr	r0, [fp, #-8]
   34370:	bl	34100 <flatcc_verify_buffer_header@@Base>
   34374:	mov	r3, r0
   34378:	b	343a8 <flatcc_verify_struct_as_root@@Base+0x7c>
   3437c:	mov	r1, #0
   34380:	ldr	r0, [fp, #-8]
   34384:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34388:	mov	r2, r0
   3438c:	ldrh	r3, [fp, #4]
   34390:	str	r3, [sp]
   34394:	ldr	r3, [fp, #-20]	; 0xffffffec
   34398:	mov	r1, #0
   3439c:	ldr	r0, [fp, #-12]
   343a0:	bl	32e00 <flatcc_verify_error_string@@Base+0x528>
   343a4:	mov	r3, r0
   343a8:	mov	r0, r3
   343ac:	sub	sp, fp, #4
   343b0:	pop	{fp, pc}

000343b4 <flatcc_verify_struct_as_typed_root@@Base>:
   343b4:	push	{fp, lr}
   343b8:	add	fp, sp, #4
   343bc:	sub	sp, sp, #24
   343c0:	str	r0, [fp, #-8]
   343c4:	str	r1, [fp, #-12]
   343c8:	str	r2, [fp, #-16]
   343cc:	str	r3, [fp, #-20]	; 0xffffffec
   343d0:	ldr	r2, [fp, #-16]
   343d4:	ldr	r1, [fp, #-12]
   343d8:	ldr	r0, [fp, #-8]
   343dc:	bl	34218 <flatcc_verify_typed_buffer_header@@Base>
   343e0:	mov	r3, r0
   343e4:	cmp	r3, #0
   343e8:	beq	34404 <flatcc_verify_struct_as_typed_root@@Base+0x50>
   343ec:	ldr	r2, [fp, #-16]
   343f0:	ldr	r1, [fp, #-12]
   343f4:	ldr	r0, [fp, #-8]
   343f8:	bl	34218 <flatcc_verify_typed_buffer_header@@Base>
   343fc:	mov	r3, r0
   34400:	b	34430 <flatcc_verify_struct_as_typed_root@@Base+0x7c>
   34404:	mov	r1, #0
   34408:	ldr	r0, [fp, #-8]
   3440c:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34410:	mov	r2, r0
   34414:	ldrh	r3, [fp, #4]
   34418:	str	r3, [sp]
   3441c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34420:	mov	r1, #0
   34424:	ldr	r0, [fp, #-12]
   34428:	bl	32e00 <flatcc_verify_error_string@@Base+0x528>
   3442c:	mov	r3, r0
   34430:	mov	r0, r3
   34434:	sub	sp, fp, #4
   34438:	pop	{fp, pc}

0003443c <flatcc_verify_table_as_root@@Base>:
   3443c:	push	{fp, lr}
   34440:	add	fp, sp, #4
   34444:	sub	sp, sp, #24
   34448:	str	r0, [fp, #-8]
   3444c:	str	r1, [fp, #-12]
   34450:	str	r2, [fp, #-16]
   34454:	str	r3, [fp, #-20]	; 0xffffffec
   34458:	ldr	r2, [fp, #-16]
   3445c:	ldr	r1, [fp, #-12]
   34460:	ldr	r0, [fp, #-8]
   34464:	bl	34100 <flatcc_verify_buffer_header@@Base>
   34468:	mov	r3, r0
   3446c:	cmp	r3, #0
   34470:	beq	3448c <flatcc_verify_table_as_root@@Base+0x50>
   34474:	ldr	r2, [fp, #-16]
   34478:	ldr	r1, [fp, #-12]
   3447c:	ldr	r0, [fp, #-8]
   34480:	bl	34100 <flatcc_verify_buffer_header@@Base>
   34484:	mov	r3, r0
   34488:	b	344c4 <flatcc_verify_table_as_root@@Base+0x88>
   3448c:	mov	r1, #0
   34490:	ldr	r0, [fp, #-8]
   34494:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34498:	mov	r2, r0
   3449c:	ldr	r3, [fp, #-20]	; 0xffffffec
   344a0:	str	r3, [sp, #4]
   344a4:	mov	r3, #100	; 0x64
   344a8:	str	r3, [sp]
   344ac:	mov	r3, r2
   344b0:	mov	r2, #0
   344b4:	ldr	r1, [fp, #-12]
   344b8:	ldr	r0, [fp, #-8]
   344bc:	bl	335b4 <flatcc_verify_error_string@@Base+0xcdc>
   344c0:	mov	r3, r0
   344c4:	mov	r0, r3
   344c8:	sub	sp, fp, #4
   344cc:	pop	{fp, pc}

000344d0 <flatcc_verify_table_as_typed_root@@Base>:
   344d0:	push	{fp, lr}
   344d4:	add	fp, sp, #4
   344d8:	sub	sp, sp, #24
   344dc:	str	r0, [fp, #-8]
   344e0:	str	r1, [fp, #-12]
   344e4:	str	r2, [fp, #-16]
   344e8:	str	r3, [fp, #-20]	; 0xffffffec
   344ec:	ldr	r2, [fp, #-16]
   344f0:	ldr	r1, [fp, #-12]
   344f4:	ldr	r0, [fp, #-8]
   344f8:	bl	34218 <flatcc_verify_typed_buffer_header@@Base>
   344fc:	mov	r3, r0
   34500:	cmp	r3, #0
   34504:	beq	34520 <flatcc_verify_table_as_typed_root@@Base+0x50>
   34508:	ldr	r2, [fp, #-16]
   3450c:	ldr	r1, [fp, #-12]
   34510:	ldr	r0, [fp, #-8]
   34514:	bl	34218 <flatcc_verify_typed_buffer_header@@Base>
   34518:	mov	r3, r0
   3451c:	b	34558 <flatcc_verify_table_as_typed_root@@Base+0x88>
   34520:	mov	r1, #0
   34524:	ldr	r0, [fp, #-8]
   34528:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   3452c:	mov	r2, r0
   34530:	ldr	r3, [fp, #-20]	; 0xffffffec
   34534:	str	r3, [sp, #4]
   34538:	mov	r3, #100	; 0x64
   3453c:	str	r3, [sp]
   34540:	mov	r3, r2
   34544:	mov	r2, #0
   34548:	ldr	r1, [fp, #-12]
   3454c:	ldr	r0, [fp, #-8]
   34550:	bl	335b4 <flatcc_verify_error_string@@Base+0xcdc>
   34554:	mov	r3, r0
   34558:	mov	r0, r3
   3455c:	sub	sp, fp, #4
   34560:	pop	{fp, pc}

00034564 <flatcc_verify_struct_as_nested_root@@Base>:
   34564:	push	{fp, lr}
   34568:	add	fp, sp, #4
   3456c:	sub	sp, sp, #32
   34570:	str	r0, [fp, #-16]
   34574:	str	r2, [fp, #-24]	; 0xffffffe8
   34578:	str	r3, [fp, #-28]	; 0xffffffe4
   3457c:	strh	r1, [fp, #-18]	; 0xffffffee
   34580:	ldrh	r2, [fp, #8]
   34584:	ldrh	r1, [fp, #-18]	; 0xffffffee
   34588:	mvn	r3, #0
   3458c:	str	r3, [sp, #4]
   34590:	mov	r3, #1
   34594:	str	r3, [sp]
   34598:	mov	r3, r2
   3459c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   345a0:	ldr	r0, [fp, #-16]
   345a4:	bl	33d28 <flatcc_verify_vector_field@@Base>
   345a8:	mov	r3, r0
   345ac:	cmp	r3, #0
   345b0:	beq	345e4 <flatcc_verify_struct_as_nested_root@@Base+0x80>
   345b4:	ldrh	r2, [fp, #8]
   345b8:	ldrh	r1, [fp, #-18]	; 0xffffffee
   345bc:	mvn	r3, #0
   345c0:	str	r3, [sp, #4]
   345c4:	mov	r3, #1
   345c8:	str	r3, [sp]
   345cc:	mov	r3, r2
   345d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   345d4:	ldr	r0, [fp, #-16]
   345d8:	bl	33d28 <flatcc_verify_vector_field@@Base>
   345dc:	mov	r3, r0
   345e0:	b	34664 <flatcc_verify_struct_as_nested_root@@Base+0x100>
   345e4:	ldrh	r3, [fp, #-18]	; 0xffffffee
   345e8:	mov	r1, r3
   345ec:	ldr	r0, [fp, #-16]
   345f0:	bl	32f88 <flatcc_verify_error_string@@Base+0x6b0>
   345f4:	str	r0, [fp, #-8]
   345f8:	ldr	r3, [fp, #-8]
   345fc:	cmp	r3, #0
   34600:	bne	3460c <flatcc_verify_struct_as_nested_root@@Base+0xa8>
   34604:	mov	r3, #0
   34608:	b	34664 <flatcc_verify_struct_as_nested_root@@Base+0x100>
   3460c:	mov	r1, #0
   34610:	ldr	r0, [fp, #-8]
   34614:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34618:	mov	r2, r0
   3461c:	ldr	r3, [fp, #-8]
   34620:	add	r3, r2, r3
   34624:	str	r3, [fp, #-8]
   34628:	mov	r1, #0
   3462c:	ldr	r0, [fp, #-8]
   34630:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34634:	str	r0, [fp, #-12]
   34638:	ldr	r3, [fp, #-8]
   3463c:	add	r3, r3, #4
   34640:	str	r3, [fp, #-8]
   34644:	ldrh	r3, [fp, #8]
   34648:	str	r3, [sp]
   3464c:	ldr	r3, [fp, #4]
   34650:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34654:	ldr	r1, [fp, #-12]
   34658:	ldr	r0, [fp, #-8]
   3465c:	bl	3432c <flatcc_verify_struct_as_root@@Base>
   34660:	mov	r3, r0
   34664:	mov	r0, r3
   34668:	sub	sp, fp, #4
   3466c:	pop	{fp, pc}

00034670 <flatcc_verify_table_as_nested_root@@Base>:
   34670:	push	{fp, lr}
   34674:	add	fp, sp, #4
   34678:	sub	sp, sp, #32
   3467c:	str	r0, [fp, #-16]
   34680:	str	r2, [fp, #-24]	; 0xffffffe8
   34684:	str	r3, [fp, #-28]	; 0xffffffe4
   34688:	strh	r1, [fp, #-18]	; 0xffffffee
   3468c:	ldrh	r2, [fp, #4]
   34690:	ldrh	r1, [fp, #-18]	; 0xffffffee
   34694:	mvn	r3, #0
   34698:	str	r3, [sp, #4]
   3469c:	mov	r3, #1
   346a0:	str	r3, [sp]
   346a4:	mov	r3, r2
   346a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346ac:	ldr	r0, [fp, #-16]
   346b0:	bl	33d28 <flatcc_verify_vector_field@@Base>
   346b4:	mov	r3, r0
   346b8:	cmp	r3, #0
   346bc:	beq	346f0 <flatcc_verify_table_as_nested_root@@Base+0x80>
   346c0:	ldrh	r2, [fp, #4]
   346c4:	ldrh	r1, [fp, #-18]	; 0xffffffee
   346c8:	mvn	r3, #0
   346cc:	str	r3, [sp, #4]
   346d0:	mov	r3, #1
   346d4:	str	r3, [sp]
   346d8:	mov	r3, r2
   346dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   346e0:	ldr	r0, [fp, #-16]
   346e4:	bl	33d28 <flatcc_verify_vector_field@@Base>
   346e8:	mov	r3, r0
   346ec:	b	347c0 <flatcc_verify_table_as_nested_root@@Base+0x150>
   346f0:	ldrh	r3, [fp, #-18]	; 0xffffffee
   346f4:	mov	r1, r3
   346f8:	ldr	r0, [fp, #-16]
   346fc:	bl	32f88 <flatcc_verify_error_string@@Base+0x6b0>
   34700:	str	r0, [fp, #-8]
   34704:	ldr	r3, [fp, #-8]
   34708:	cmp	r3, #0
   3470c:	bne	34718 <flatcc_verify_table_as_nested_root@@Base+0xa8>
   34710:	mov	r3, #0
   34714:	b	347c0 <flatcc_verify_table_as_nested_root@@Base+0x150>
   34718:	mov	r1, #0
   3471c:	ldr	r0, [fp, #-8]
   34720:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34724:	mov	r2, r0
   34728:	ldr	r3, [fp, #-8]
   3472c:	add	r3, r2, r3
   34730:	str	r3, [fp, #-8]
   34734:	mov	r1, #0
   34738:	ldr	r0, [fp, #-8]
   3473c:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34740:	str	r0, [fp, #-12]
   34744:	ldr	r3, [fp, #-8]
   34748:	add	r3, r3, #4
   3474c:	str	r3, [fp, #-8]
   34750:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34754:	ldr	r1, [fp, #-12]
   34758:	ldr	r0, [fp, #-8]
   3475c:	bl	34100 <flatcc_verify_buffer_header@@Base>
   34760:	mov	r3, r0
   34764:	cmp	r3, #0
   34768:	beq	34784 <flatcc_verify_table_as_nested_root@@Base+0x114>
   3476c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   34770:	ldr	r1, [fp, #-12]
   34774:	ldr	r0, [fp, #-8]
   34778:	bl	34100 <flatcc_verify_buffer_header@@Base>
   3477c:	mov	r3, r0
   34780:	b	347c0 <flatcc_verify_table_as_nested_root@@Base+0x150>
   34784:	mov	r1, #0
   34788:	ldr	r0, [fp, #-8]
   3478c:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34790:	mov	r1, r0
   34794:	ldr	r3, [fp, #-16]
   34798:	ldr	r3, [r3, #8]
   3479c:	ldr	r2, [fp, #8]
   347a0:	str	r2, [sp, #4]
   347a4:	str	r3, [sp]
   347a8:	mov	r3, r1
   347ac:	mov	r2, #0
   347b0:	ldr	r1, [fp, #-12]
   347b4:	ldr	r0, [fp, #-8]
   347b8:	bl	335b4 <flatcc_verify_error_string@@Base+0xcdc>
   347bc:	mov	r3, r0
   347c0:	mov	r0, r3
   347c4:	sub	sp, fp, #4
   347c8:	pop	{fp, pc}

000347cc <flatcc_verify_union_field@@Base>:
   347cc:	push	{fp, lr}
   347d0:	add	fp, sp, #4
   347d4:	sub	sp, sp, #80	; 0x50
   347d8:	str	r0, [fp, #-64]	; 0xffffffc0
   347dc:	str	r2, [fp, #-72]	; 0xffffffb8
   347e0:	str	r3, [fp, #-76]	; 0xffffffb4
   347e4:	strh	r1, [fp, #-66]	; 0xffffffbe
   347e8:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   347ec:	sub	r3, r3, #1
   347f0:	uxth	r3, r3
   347f4:	mov	r1, r3
   347f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   347fc:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   34800:	mov	r3, r0
   34804:	strh	r3, [fp, #-6]
   34808:	ldrh	r3, [fp, #-6]
   3480c:	cmp	r3, #0
   34810:	bne	3488c <flatcc_verify_union_field@@Base+0xc0>
   34814:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   34818:	mov	r1, r3
   3481c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34820:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   34824:	mov	r3, r0
   34828:	strh	r3, [fp, #-8]
   3482c:	ldrh	r3, [fp, #-8]
   34830:	cmp	r3, #0
   34834:	moveq	r3, #1
   34838:	movne	r3, #0
   3483c:	uxtb	r3, r3
   34840:	str	r3, [fp, #-12]
   34844:	ldr	r3, [fp, #-12]
   34848:	cmp	r3, #0
   3484c:	bne	34858 <flatcc_verify_union_field@@Base+0x8c>
   34850:	mov	r3, #23
   34854:	b	34a1c <flatcc_verify_union_field@@Base+0x250>
   34858:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3485c:	cmp	r3, #0
   34860:	moveq	r3, #1
   34864:	movne	r3, #0
   34868:	uxtb	r3, r3
   3486c:	str	r3, [fp, #-16]
   34870:	ldr	r3, [fp, #-16]
   34874:	cmp	r3, #0
   34878:	bne	34884 <flatcc_verify_union_field@@Base+0xb8>
   3487c:	mov	r3, #21
   34880:	b	34a1c <flatcc_verify_union_field@@Base+0x250>
   34884:	mov	r3, #0
   34888:	b	34a1c <flatcc_verify_union_field@@Base+0x250>
   3488c:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   34890:	sub	r3, r3, #1
   34894:	uxth	r1, r3
   34898:	mov	r3, #1
   3489c:	str	r3, [sp]
   348a0:	mov	r3, #1
   348a4:	mov	r2, #0
   348a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   348ac:	bl	32ff4 <flatcc_verify_error_string@@Base+0x71c>
   348b0:	mov	r3, r0
   348b4:	cmp	r3, #0
   348b8:	beq	348e8 <flatcc_verify_union_field@@Base+0x11c>
   348bc:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   348c0:	sub	r3, r3, #1
   348c4:	uxth	r1, r3
   348c8:	mov	r3, #1
   348cc:	str	r3, [sp]
   348d0:	mov	r3, #1
   348d4:	mov	r2, #0
   348d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   348dc:	bl	32ff4 <flatcc_verify_error_string@@Base+0x71c>
   348e0:	mov	r3, r0
   348e4:	b	34a1c <flatcc_verify_union_field@@Base+0x250>
   348e8:	ldrh	r3, [fp, #-66]	; 0xffffffbe
   348ec:	mov	r1, r3
   348f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   348f4:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   348f8:	mov	r3, r0
   348fc:	strh	r3, [fp, #-8]
   34900:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34904:	ldr	r2, [r3]
   34908:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3490c:	ldr	r1, [r3, #16]
   34910:	ldrh	r3, [fp, #-6]
   34914:	add	r3, r1, r3
   34918:	add	r3, r2, r3
   3491c:	str	r3, [fp, #-20]	; 0xffffffec
   34920:	ldr	r3, [fp, #-20]	; 0xffffffec
   34924:	ldrb	r3, [r3]
   34928:	cmp	r3, #0
   3492c:	bne	3493c <flatcc_verify_union_field@@Base+0x170>
   34930:	ldrh	r3, [fp, #-8]
   34934:	cmp	r3, #0
   34938:	bne	34944 <flatcc_verify_union_field@@Base+0x178>
   3493c:	mov	r3, #1
   34940:	b	34948 <flatcc_verify_union_field@@Base+0x17c>
   34944:	mov	r3, #0
   34948:	str	r3, [fp, #-24]	; 0xffffffe8
   3494c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34950:	cmp	r3, #0
   34954:	bne	34960 <flatcc_verify_union_field@@Base+0x194>
   34958:	mov	r3, #24
   3495c:	b	34a1c <flatcc_verify_union_field@@Base+0x250>
   34960:	ldr	r3, [fp, #-20]	; 0xffffffec
   34964:	ldrb	r3, [r3]
   34968:	cmp	r3, #0
   3496c:	bne	34978 <flatcc_verify_union_field@@Base+0x1ac>
   34970:	mov	r3, #0
   34974:	b	34a1c <flatcc_verify_union_field@@Base+0x250>
   34978:	sub	r3, fp, #32
   3497c:	ldrh	r1, [fp, #-66]	; 0xffffffbe
   34980:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34984:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34988:	bl	33148 <flatcc_verify_error_string@@Base+0x870>
   3498c:	str	r0, [fp, #-28]	; 0xffffffe4
   34990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34994:	cmp	r3, #0
   34998:	bne	349a8 <flatcc_verify_union_field@@Base+0x1dc>
   3499c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   349a0:	cmp	r3, #0
   349a4:	bne	349b0 <flatcc_verify_union_field@@Base+0x1e4>
   349a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   349ac:	b	34a1c <flatcc_verify_union_field@@Base+0x250>
   349b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   349b4:	ldr	r3, [r3]
   349b8:	str	r3, [fp, #-56]	; 0xffffffc8
   349bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   349c0:	ldr	r3, [r3, #4]
   349c4:	str	r3, [fp, #-52]	; 0xffffffcc
   349c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   349cc:	ldr	r3, [r3, #8]
   349d0:	str	r3, [fp, #-48]	; 0xffffffd0
   349d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   349d8:	str	r3, [fp, #-40]	; 0xffffffd8
   349dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   349e0:	ldr	r3, [r3]
   349e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   349e8:	mov	r1, r2
   349ec:	mov	r0, r3
   349f0:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   349f4:	mov	r3, r0
   349f8:	str	r3, [fp, #-36]	; 0xffffffdc
   349fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   34a00:	ldrb	r3, [r3]
   34a04:	strb	r3, [fp, #-44]	; 0xffffffd4
   34a08:	sub	r2, fp, #56	; 0x38
   34a0c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   34a10:	mov	r0, r2
   34a14:	blx	r3
   34a18:	mov	r3, r0
   34a1c:	mov	r0, r3
   34a20:	sub	sp, fp, #4
   34a24:	pop	{fp, pc}

00034a28 <flatcc_verify_union_vector_field@@Base>:
   34a28:	push	{r4, r5, r6, fp, lr}
   34a2c:	add	fp, sp, #16
   34a30:	sub	sp, sp, #68	; 0x44
   34a34:	str	r0, [fp, #-56]	; 0xffffffc8
   34a38:	str	r2, [fp, #-64]	; 0xffffffc0
   34a3c:	str	r3, [fp, #-68]	; 0xffffffbc
   34a40:	strh	r1, [fp, #-58]	; 0xffffffc6
   34a44:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   34a48:	sub	r3, r3, #1
   34a4c:	uxth	r3, r3
   34a50:	mov	r1, r3
   34a54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34a58:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   34a5c:	mov	r3, r0
   34a60:	strh	r3, [fp, #-22]	; 0xffffffea
   34a64:	ldrh	r3, [fp, #-22]	; 0xffffffea
   34a68:	cmp	r3, #0
   34a6c:	bne	34ac0 <flatcc_verify_union_vector_field@@Base+0x98>
   34a70:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   34a74:	mov	r1, r3
   34a78:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34a7c:	bl	32f18 <flatcc_verify_error_string@@Base+0x640>
   34a80:	mov	r3, r0
   34a84:	strh	r3, [fp, #-24]	; 0xffffffe8
   34a88:	ldrh	r3, [fp, #-24]	; 0xffffffe8
   34a8c:	cmp	r3, #0
   34a90:	bne	34ac0 <flatcc_verify_union_vector_field@@Base+0x98>
   34a94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34a98:	cmp	r3, #0
   34a9c:	moveq	r3, #1
   34aa0:	movne	r3, #0
   34aa4:	uxtb	r3, r3
   34aa8:	str	r3, [fp, #-28]	; 0xffffffe4
   34aac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34ab0:	cmp	r3, #0
   34ab4:	bne	34ac0 <flatcc_verify_union_vector_field@@Base+0x98>
   34ab8:	mov	r3, #22
   34abc:	b	34c40 <flatcc_verify_union_vector_field@@Base+0x218>
   34ac0:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   34ac4:	sub	r3, r3, #1
   34ac8:	uxth	r1, r3
   34acc:	mvn	r3, #0
   34ad0:	str	r3, [sp, #4]
   34ad4:	mov	r3, #1
   34ad8:	str	r3, [sp]
   34adc:	mov	r3, #1
   34ae0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   34ae4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34ae8:	bl	33d28 <flatcc_verify_vector_field@@Base>
   34aec:	mov	r3, r0
   34af0:	cmp	r3, #0
   34af4:	beq	34b2c <flatcc_verify_union_vector_field@@Base+0x104>
   34af8:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   34afc:	sub	r3, r3, #1
   34b00:	uxth	r1, r3
   34b04:	mvn	r3, #0
   34b08:	str	r3, [sp, #4]
   34b0c:	mov	r3, #1
   34b10:	str	r3, [sp]
   34b14:	mov	r3, #1
   34b18:	ldr	r2, [fp, #-64]	; 0xffffffc0
   34b1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34b20:	bl	33d28 <flatcc_verify_vector_field@@Base>
   34b24:	mov	r3, r0
   34b28:	b	34c40 <flatcc_verify_union_vector_field@@Base+0x218>
   34b2c:	ldrh	r3, [fp, #-58]	; 0xffffffc6
   34b30:	sub	r3, r3, #1
   34b34:	uxth	r3, r3
   34b38:	mov	r1, r3
   34b3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34b40:	bl	32f88 <flatcc_verify_error_string@@Base+0x6b0>
   34b44:	str	r0, [fp, #-32]	; 0xffffffe0
   34b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34b4c:	cmp	r3, #0
   34b50:	bne	34b5c <flatcc_verify_union_vector_field@@Base+0x134>
   34b54:	mov	r3, #0
   34b58:	b	34c40 <flatcc_verify_union_vector_field@@Base+0x218>
   34b5c:	mov	r1, #0
   34b60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34b64:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34b68:	mov	r2, r0
   34b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34b70:	add	r3, r2, r3
   34b74:	str	r3, [fp, #-32]	; 0xffffffe0
   34b78:	mov	r1, #0
   34b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   34b80:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34b84:	str	r0, [fp, #-36]	; 0xffffffdc
   34b88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34b8c:	add	r3, r3, #4
   34b90:	str	r3, [fp, #-32]	; 0xffffffe0
   34b94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34b98:	str	r3, [fp, #-40]	; 0xffffffd8
   34b9c:	sub	r3, fp, #48	; 0x30
   34ba0:	ldrh	r1, [fp, #-58]	; 0xffffffc6
   34ba4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   34ba8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   34bac:	bl	33148 <flatcc_verify_error_string@@Base+0x870>
   34bb0:	str	r0, [fp, #-44]	; 0xffffffd4
   34bb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34bb8:	cmp	r3, #0
   34bbc:	bne	34bcc <flatcc_verify_union_vector_field@@Base+0x1a4>
   34bc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   34bc4:	cmp	r3, #0
   34bc8:	bne	34bd4 <flatcc_verify_union_vector_field@@Base+0x1ac>
   34bcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34bd0:	b	34c40 <flatcc_verify_union_vector_field@@Base+0x218>
   34bd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34bd8:	ldr	r4, [r3]
   34bdc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34be0:	ldr	r5, [r3, #4]
   34be4:	ldr	r6, [fp, #-48]	; 0xffffffd0
   34be8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34bec:	ldr	r3, [r3]
   34bf0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   34bf4:	mov	r1, r2
   34bf8:	mov	r0, r3
   34bfc:	bl	32bf8 <flatcc_verify_error_string@@Base+0x320>
   34c00:	mov	r1, r0
   34c04:	ldr	r3, [fp, #-56]	; 0xffffffc8
   34c08:	ldr	r3, [r3, #8]
   34c0c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   34c10:	str	r2, [sp, #12]
   34c14:	str	r3, [sp, #8]
   34c18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   34c1c:	str	r3, [sp, #4]
   34c20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   34c24:	str	r3, [sp]
   34c28:	mov	r3, r1
   34c2c:	mov	r2, r6
   34c30:	mov	r1, r5
   34c34:	mov	r0, r4
   34c38:	bl	339b4 <flatcc_verify_error_string@@Base+0x10dc>
   34c3c:	mov	r3, r0
   34c40:	mov	r0, r3
   34c44:	sub	sp, fp, #16
   34c48:	pop	{r4, r5, r6, fp, pc}
   34c4c:	andeq	r0, r0, r0
   34c50:	push	{fp}		; (str fp, [sp, #-4]!)
   34c54:	add	fp, sp, #0
   34c58:	sub	sp, sp, #12
   34c5c:	mov	r3, r0
   34c60:	strb	r3, [fp, #-5]
   34c64:	ldrb	r3, [fp, #-5]
   34c68:	mov	r0, r3
   34c6c:	add	sp, fp, #0
   34c70:	pop	{fp}		; (ldr fp, [sp], #4)
   34c74:	bx	lr
   34c78:	push	{fp, lr}
   34c7c:	add	fp, sp, #4
   34c80:	sub	sp, sp, #8
   34c84:	str	r0, [fp, #-8]
   34c88:	mov	r3, r1
   34c8c:	strb	r3, [fp, #-9]
   34c90:	ldrb	r3, [fp, #-9]
   34c94:	mov	r0, r3
   34c98:	bl	34c50 <flatcc_verify_union_vector_field@@Base+0x228>
   34c9c:	mov	r3, r0
   34ca0:	mov	r2, r3
   34ca4:	ldr	r3, [fp, #-8]
   34ca8:	strb	r2, [r3]
   34cac:	nop			; (mov r0, r0)
   34cb0:	sub	sp, fp, #4
   34cb4:	pop	{fp, pc}
   34cb8:	push	{fp, lr}
   34cbc:	add	fp, sp, #4
   34cc0:	sub	sp, sp, #16
   34cc4:	str	r0, [fp, #-8]
   34cc8:	str	r1, [fp, #-12]
   34ccc:	str	r2, [fp, #-16]
   34cd0:	str	r3, [fp, #-20]	; 0xffffffec
   34cd4:	mov	r2, #40	; 0x28
   34cd8:	mov	r1, #0
   34cdc:	ldr	r0, [fp, #-8]
   34ce0:	bl	145bc <memset@plt>
   34ce4:	ldr	r3, [fp, #-8]
   34ce8:	ldr	r2, [fp, #-12]
   34cec:	str	r2, [r3]
   34cf0:	ldr	r3, [fp, #-8]
   34cf4:	ldr	r2, [fp, #-16]
   34cf8:	str	r2, [r3, #4]
   34cfc:	ldr	r3, [fp, #-8]
   34d00:	mov	r2, #1
   34d04:	str	r2, [r3, #12]
   34d08:	ldr	r3, [fp, #-8]
   34d0c:	ldr	r2, [fp, #4]
   34d10:	str	r2, [r3, #8]
   34d14:	ldr	r3, [fp, #-8]
   34d18:	ldr	r2, [fp, #-16]
   34d1c:	str	r2, [r3, #24]
   34d20:	ldr	r3, [fp, #-8]
   34d24:	ldr	r2, [fp, #-20]	; 0xffffffec
   34d28:	str	r2, [r3, #28]
   34d2c:	ldr	r3, [fp, #-8]
   34d30:	ldr	r2, [fp, #-16]
   34d34:	str	r2, [r3, #32]
   34d38:	nop			; (mov r0, r0)
   34d3c:	sub	sp, fp, #4
   34d40:	pop	{fp, pc}
   34d44:	push	{fp, lr}
   34d48:	add	fp, sp, #4
   34d4c:	sub	sp, sp, #16
   34d50:	str	r0, [fp, #-8]
   34d54:	str	r1, [fp, #-12]
   34d58:	str	r2, [fp, #-16]
   34d5c:	ldr	r2, [fp, #-16]
   34d60:	ldr	r3, [fp, #-12]
   34d64:	sub	r3, r2, r3
   34d68:	cmp	r3, #1
   34d6c:	ble	34db8 <flatcc_verify_union_vector_field@@Base+0x390>
   34d70:	ldr	r3, [fp, #-12]
   34d74:	ldrb	r3, [r3]
   34d78:	cmp	r3, #32
   34d7c:	bls	34d88 <flatcc_verify_union_vector_field@@Base+0x360>
   34d80:	ldr	r3, [fp, #-12]
   34d84:	b	34dcc <flatcc_verify_union_vector_field@@Base+0x3a4>
   34d88:	ldr	r3, [fp, #-12]
   34d8c:	ldrb	r3, [r3]
   34d90:	cmp	r3, #32
   34d94:	bne	34db8 <flatcc_verify_union_vector_field@@Base+0x390>
   34d98:	ldr	r3, [fp, #-12]
   34d9c:	add	r3, r3, #1
   34da0:	ldrb	r3, [r3]
   34da4:	cmp	r3, #32
   34da8:	bls	34db8 <flatcc_verify_union_vector_field@@Base+0x390>
   34dac:	ldr	r3, [fp, #-12]
   34db0:	add	r3, r3, #1
   34db4:	b	34dcc <flatcc_verify_union_vector_field@@Base+0x3a4>
   34db8:	ldr	r2, [fp, #-16]
   34dbc:	ldr	r1, [fp, #-12]
   34dc0:	ldr	r0, [fp, #-8]
   34dc4:	bl	39d18 <flatcc_json_parser_space_ext@@Base>
   34dc8:	mov	r3, r0
   34dcc:	mov	r0, r3
   34dd0:	sub	sp, fp, #4
   34dd4:	pop	{fp, pc}
   34dd8:	push	{fp, lr}
   34ddc:	add	fp, sp, #4
   34de0:	sub	sp, sp, #16
   34de4:	str	r0, [fp, #-8]
   34de8:	str	r1, [fp, #-12]
   34dec:	str	r2, [fp, #-16]
   34df0:	ldr	r2, [fp, #-12]
   34df4:	ldr	r3, [fp, #-16]
   34df8:	cmp	r2, r3
   34dfc:	beq	34e10 <flatcc_verify_union_vector_field@@Base+0x3e8>
   34e00:	ldr	r3, [fp, #-12]
   34e04:	ldrb	r3, [r3]
   34e08:	cmp	r3, #34	; 0x22
   34e0c:	beq	34e2c <flatcc_verify_union_vector_field@@Base+0x404>
   34e10:	mov	r3, #16
   34e14:	ldr	r2, [fp, #-16]
   34e18:	ldr	r1, [fp, #-12]
   34e1c:	ldr	r0, [fp, #-8]
   34e20:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   34e24:	mov	r3, r0
   34e28:	b	34e3c <flatcc_verify_union_vector_field@@Base+0x414>
   34e2c:	ldr	r3, [fp, #-12]
   34e30:	add	r3, r3, #1
   34e34:	str	r3, [fp, #-12]
   34e38:	ldr	r3, [fp, #-12]
   34e3c:	mov	r0, r3
   34e40:	sub	sp, fp, #4
   34e44:	pop	{fp, pc}
   34e48:	push	{fp, lr}
   34e4c:	add	fp, sp, #4
   34e50:	sub	sp, sp, #16
   34e54:	str	r0, [fp, #-8]
   34e58:	str	r1, [fp, #-12]
   34e5c:	str	r2, [fp, #-16]
   34e60:	ldr	r2, [fp, #-12]
   34e64:	ldr	r3, [fp, #-16]
   34e68:	cmp	r2, r3
   34e6c:	beq	34e80 <flatcc_verify_union_vector_field@@Base+0x458>
   34e70:	ldr	r3, [fp, #-12]
   34e74:	ldrb	r3, [r3]
   34e78:	cmp	r3, #34	; 0x22
   34e7c:	beq	34e9c <flatcc_verify_union_vector_field@@Base+0x474>
   34e80:	mov	r3, #20
   34e84:	ldr	r2, [fp, #-16]
   34e88:	ldr	r1, [fp, #-12]
   34e8c:	ldr	r0, [fp, #-8]
   34e90:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   34e94:	mov	r3, r0
   34e98:	b	34eac <flatcc_verify_union_vector_field@@Base+0x484>
   34e9c:	ldr	r3, [fp, #-12]
   34ea0:	add	r3, r3, #1
   34ea4:	str	r3, [fp, #-12]
   34ea8:	ldr	r3, [fp, #-12]
   34eac:	mov	r0, r3
   34eb0:	sub	sp, fp, #4
   34eb4:	pop	{fp, pc}
   34eb8:	push	{fp, lr}
   34ebc:	add	fp, sp, #4
   34ec0:	sub	sp, sp, #16
   34ec4:	str	r0, [fp, #-8]
   34ec8:	str	r1, [fp, #-12]
   34ecc:	str	r2, [fp, #-16]
   34ed0:	ldr	r2, [fp, #-12]
   34ed4:	ldr	r3, [fp, #-16]
   34ed8:	cmp	r2, r3
   34edc:	bne	34ee8 <flatcc_verify_union_vector_field@@Base+0x4c0>
   34ee0:	ldr	r3, [fp, #-12]
   34ee4:	b	34f24 <flatcc_verify_union_vector_field@@Base+0x4fc>
   34ee8:	ldr	r3, [fp, #-12]
   34eec:	ldrb	r3, [r3]
   34ef0:	cmp	r3, #34	; 0x22
   34ef4:	bne	34f0c <flatcc_verify_union_vector_field@@Base+0x4e4>
   34ef8:	ldr	r3, [fp, #-12]
   34efc:	add	r3, r3, #1
   34f00:	str	r3, [fp, #-12]
   34f04:	ldr	r3, [fp, #-12]
   34f08:	b	34f24 <flatcc_verify_union_vector_field@@Base+0x4fc>
   34f0c:	mov	r3, #5
   34f10:	ldr	r2, [fp, #-16]
   34f14:	ldr	r1, [fp, #-12]
   34f18:	ldr	r0, [fp, #-8]
   34f1c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   34f20:	mov	r3, r0
   34f24:	mov	r0, r3
   34f28:	sub	sp, fp, #4
   34f2c:	pop	{fp, pc}
   34f30:	push	{fp, lr}
   34f34:	add	fp, sp, #4
   34f38:	sub	sp, sp, #24
   34f3c:	str	r0, [fp, #-16]
   34f40:	str	r1, [fp, #-20]	; 0xffffffec
   34f44:	str	r2, [fp, #-24]	; 0xffffffe8
   34f48:	mov	r3, #0
   34f4c:	strb	r3, [fp, #-5]
   34f50:	b	34f90 <flatcc_verify_union_vector_field@@Base+0x568>
   34f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   34f58:	ldrb	r3, [r3]
   34f5c:	cmp	r3, #92	; 0x5c
   34f60:	bne	34f84 <flatcc_verify_union_vector_field@@Base+0x55c>
   34f64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34f68:	ldr	r3, [fp, #-20]	; 0xffffffec
   34f6c:	sub	r3, r2, r3
   34f70:	cmp	r3, #1
   34f74:	ble	34fb4 <flatcc_verify_union_vector_field@@Base+0x58c>
   34f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   34f7c:	add	r3, r3, #1
   34f80:	str	r3, [fp, #-20]	; 0xffffffec
   34f84:	ldr	r3, [fp, #-20]	; 0xffffffec
   34f88:	add	r3, r3, #1
   34f8c:	str	r3, [fp, #-20]	; 0xffffffec
   34f90:	ldr	r2, [fp, #-20]	; 0xffffffec
   34f94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34f98:	cmp	r2, r3
   34f9c:	beq	34fb8 <flatcc_verify_union_vector_field@@Base+0x590>
   34fa0:	ldr	r3, [fp, #-20]	; 0xffffffec
   34fa4:	ldrb	r3, [r3]
   34fa8:	cmp	r3, #34	; 0x22
   34fac:	bne	34f54 <flatcc_verify_union_vector_field@@Base+0x52c>
   34fb0:	b	34fb8 <flatcc_verify_union_vector_field@@Base+0x590>
   34fb4:	nop			; (mov r0, r0)
   34fb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   34fbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34fc0:	cmp	r2, r3
   34fc4:	beq	34fd8 <flatcc_verify_union_vector_field@@Base+0x5b0>
   34fc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   34fcc:	ldrb	r3, [r3]
   34fd0:	cmp	r3, #34	; 0x22
   34fd4:	beq	34ff4 <flatcc_verify_union_vector_field@@Base+0x5cc>
   34fd8:	mov	r3, #20
   34fdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34fe0:	ldr	r1, [fp, #-20]	; 0xffffffec
   34fe4:	ldr	r0, [fp, #-16]
   34fe8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   34fec:	mov	r3, r0
   34ff0:	b	35004 <flatcc_verify_union_vector_field@@Base+0x5dc>
   34ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   34ff8:	add	r3, r3, #1
   34ffc:	str	r3, [fp, #-20]	; 0xffffffec
   35000:	ldr	r3, [fp, #-20]	; 0xffffffec
   35004:	mov	r0, r3
   35008:	sub	sp, fp, #4
   3500c:	pop	{fp, pc}
   35010:	push	{fp, lr}
   35014:	add	fp, sp, #4
   35018:	sub	sp, sp, #16
   3501c:	str	r0, [fp, #-8]
   35020:	str	r1, [fp, #-12]
   35024:	str	r2, [fp, #-16]
   35028:	ldr	r2, [fp, #-16]
   3502c:	ldr	r1, [fp, #-12]
   35030:	ldr	r0, [fp, #-8]
   35034:	bl	34eb8 <flatcc_verify_union_vector_field@@Base+0x490>
   35038:	str	r0, [fp, #-12]
   3503c:	ldr	r2, [fp, #-16]
   35040:	ldr	r1, [fp, #-12]
   35044:	ldr	r0, [fp, #-8]
   35048:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3504c:	str	r0, [fp, #-12]
   35050:	ldr	r3, [fp, #-12]
   35054:	mov	r0, r3
   35058:	sub	sp, fp, #4
   3505c:	pop	{fp, pc}
   35060:	push	{fp, lr}
   35064:	add	fp, sp, #4
   35068:	sub	sp, sp, #16
   3506c:	str	r0, [fp, #-8]
   35070:	str	r1, [fp, #-12]
   35074:	str	r2, [fp, #-16]
   35078:	str	r3, [fp, #-20]	; 0xffffffec
   3507c:	ldr	r2, [fp, #-16]
   35080:	ldr	r1, [fp, #-12]
   35084:	ldr	r0, [fp, #-8]
   35088:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3508c:	str	r0, [fp, #-12]
   35090:	ldr	r2, [fp, #-12]
   35094:	ldr	r3, [fp, #-16]
   35098:	cmp	r2, r3
   3509c:	bne	350b4 <flatcc_verify_union_vector_field@@Base+0x68c>
   350a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   350a4:	mov	r2, #0
   350a8:	str	r2, [r3]
   350ac:	ldr	r3, [fp, #-12]
   350b0:	b	351bc <flatcc_verify_union_vector_field@@Base+0x794>
   350b4:	ldr	r3, [fp, #-12]
   350b8:	ldrb	r3, [r3]
   350bc:	cmp	r3, #44	; 0x2c
   350c0:	beq	3511c <flatcc_verify_union_vector_field@@Base+0x6f4>
   350c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   350c8:	mov	r2, #0
   350cc:	str	r2, [r3]
   350d0:	ldr	r3, [fp, #-12]
   350d4:	ldrb	r3, [r3]
   350d8:	cmp	r3, #125	; 0x7d
   350dc:	beq	350fc <flatcc_verify_union_vector_field@@Base+0x6d4>
   350e0:	mov	r3, #10
   350e4:	ldr	r2, [fp, #-16]
   350e8:	ldr	r1, [fp, #-12]
   350ec:	ldr	r0, [fp, #-8]
   350f0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   350f4:	mov	r3, r0
   350f8:	b	351bc <flatcc_verify_union_vector_field@@Base+0x794>
   350fc:	ldr	r3, [fp, #-12]
   35100:	add	r3, r3, #1
   35104:	ldr	r2, [fp, #-16]
   35108:	mov	r1, r3
   3510c:	ldr	r0, [fp, #-8]
   35110:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   35114:	mov	r3, r0
   35118:	b	351bc <flatcc_verify_union_vector_field@@Base+0x794>
   3511c:	ldr	r3, [fp, #-12]
   35120:	add	r3, r3, #1
   35124:	ldr	r2, [fp, #-16]
   35128:	mov	r1, r3
   3512c:	ldr	r0, [fp, #-8]
   35130:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   35134:	str	r0, [fp, #-12]
   35138:	ldr	r2, [fp, #-12]
   3513c:	ldr	r3, [fp, #-16]
   35140:	cmp	r2, r3
   35144:	bne	35170 <flatcc_verify_union_vector_field@@Base+0x748>
   35148:	ldr	r3, [fp, #-20]	; 0xffffffec
   3514c:	mov	r2, #0
   35150:	str	r2, [r3]
   35154:	mov	r3, #10
   35158:	ldr	r2, [fp, #-16]
   3515c:	ldr	r1, [fp, #-12]
   35160:	ldr	r0, [fp, #-8]
   35164:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35168:	mov	r3, r0
   3516c:	b	351bc <flatcc_verify_union_vector_field@@Base+0x794>
   35170:	ldr	r3, [fp, #-12]
   35174:	ldrb	r3, [r3]
   35178:	cmp	r3, #125	; 0x7d
   3517c:	bne	351ac <flatcc_verify_union_vector_field@@Base+0x784>
   35180:	ldr	r3, [fp, #-20]	; 0xffffffec
   35184:	mov	r2, #0
   35188:	str	r2, [r3]
   3518c:	ldr	r3, [fp, #-12]
   35190:	add	r3, r3, #1
   35194:	ldr	r2, [fp, #-16]
   35198:	mov	r1, r3
   3519c:	ldr	r0, [fp, #-8]
   351a0:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   351a4:	mov	r3, r0
   351a8:	b	351bc <flatcc_verify_union_vector_field@@Base+0x794>
   351ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   351b0:	mov	r2, #1
   351b4:	str	r2, [r3]
   351b8:	ldr	r3, [fp, #-12]
   351bc:	mov	r0, r3
   351c0:	sub	sp, fp, #4
   351c4:	pop	{fp, pc}
   351c8:	push	{fp, lr}
   351cc:	add	fp, sp, #4
   351d0:	sub	sp, sp, #16
   351d4:	str	r0, [fp, #-8]
   351d8:	str	r1, [fp, #-12]
   351dc:	str	r2, [fp, #-16]
   351e0:	str	r3, [fp, #-20]	; 0xffffffec
   351e4:	ldr	r2, [fp, #-12]
   351e8:	ldr	r3, [fp, #-16]
   351ec:	cmp	r2, r3
   351f0:	beq	35204 <flatcc_verify_union_vector_field@@Base+0x7dc>
   351f4:	ldr	r3, [fp, #-12]
   351f8:	ldrb	r3, [r3]
   351fc:	cmp	r3, #91	; 0x5b
   35200:	beq	3522c <flatcc_verify_union_vector_field@@Base+0x804>
   35204:	ldr	r3, [fp, #-20]	; 0xffffffec
   35208:	mov	r2, #0
   3520c:	str	r2, [r3]
   35210:	mov	r3, #22
   35214:	ldr	r2, [fp, #-16]
   35218:	ldr	r1, [fp, #-12]
   3521c:	ldr	r0, [fp, #-8]
   35220:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35224:	mov	r3, r0
   35228:	b	352a4 <flatcc_verify_union_vector_field@@Base+0x87c>
   3522c:	ldr	r3, [fp, #-12]
   35230:	add	r3, r3, #1
   35234:	ldr	r2, [fp, #-16]
   35238:	mov	r1, r3
   3523c:	ldr	r0, [fp, #-8]
   35240:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   35244:	str	r0, [fp, #-12]
   35248:	ldr	r2, [fp, #-12]
   3524c:	ldr	r3, [fp, #-16]
   35250:	cmp	r2, r3
   35254:	beq	35294 <flatcc_verify_union_vector_field@@Base+0x86c>
   35258:	ldr	r3, [fp, #-12]
   3525c:	ldrb	r3, [r3]
   35260:	cmp	r3, #93	; 0x5d
   35264:	bne	35294 <flatcc_verify_union_vector_field@@Base+0x86c>
   35268:	ldr	r3, [fp, #-20]	; 0xffffffec
   3526c:	mov	r2, #0
   35270:	str	r2, [r3]
   35274:	ldr	r3, [fp, #-12]
   35278:	add	r3, r3, #1
   3527c:	ldr	r2, [fp, #-16]
   35280:	mov	r1, r3
   35284:	ldr	r0, [fp, #-8]
   35288:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3528c:	mov	r3, r0
   35290:	b	352a4 <flatcc_verify_union_vector_field@@Base+0x87c>
   35294:	ldr	r3, [fp, #-20]	; 0xffffffec
   35298:	mov	r2, #1
   3529c:	str	r2, [r3]
   352a0:	ldr	r3, [fp, #-12]
   352a4:	mov	r0, r3
   352a8:	sub	sp, fp, #4
   352ac:	pop	{fp, pc}
   352b0:	push	{fp, lr}
   352b4:	add	fp, sp, #4
   352b8:	sub	sp, sp, #16
   352bc:	str	r0, [fp, #-8]
   352c0:	str	r1, [fp, #-12]
   352c4:	str	r2, [fp, #-16]
   352c8:	str	r3, [fp, #-20]	; 0xffffffec
   352cc:	ldr	r2, [fp, #-16]
   352d0:	ldr	r1, [fp, #-12]
   352d4:	ldr	r0, [fp, #-8]
   352d8:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   352dc:	str	r0, [fp, #-12]
   352e0:	ldr	r2, [fp, #-12]
   352e4:	ldr	r3, [fp, #-16]
   352e8:	cmp	r2, r3
   352ec:	bne	35304 <flatcc_verify_union_vector_field@@Base+0x8dc>
   352f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   352f4:	mov	r2, #0
   352f8:	str	r2, [r3]
   352fc:	ldr	r3, [fp, #-12]
   35300:	b	3540c <flatcc_verify_union_vector_field@@Base+0x9e4>
   35304:	ldr	r3, [fp, #-12]
   35308:	ldrb	r3, [r3]
   3530c:	cmp	r3, #44	; 0x2c
   35310:	beq	3536c <flatcc_verify_union_vector_field@@Base+0x944>
   35314:	ldr	r3, [fp, #-20]	; 0xffffffec
   35318:	mov	r2, #0
   3531c:	str	r2, [r3]
   35320:	ldr	r3, [fp, #-12]
   35324:	ldrb	r3, [r3]
   35328:	cmp	r3, #93	; 0x5d
   3532c:	beq	3534c <flatcc_verify_union_vector_field@@Base+0x924>
   35330:	mov	r3, #9
   35334:	ldr	r2, [fp, #-16]
   35338:	ldr	r1, [fp, #-12]
   3533c:	ldr	r0, [fp, #-8]
   35340:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35344:	mov	r3, r0
   35348:	b	3540c <flatcc_verify_union_vector_field@@Base+0x9e4>
   3534c:	ldr	r3, [fp, #-12]
   35350:	add	r3, r3, #1
   35354:	ldr	r2, [fp, #-16]
   35358:	mov	r1, r3
   3535c:	ldr	r0, [fp, #-8]
   35360:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   35364:	mov	r3, r0
   35368:	b	3540c <flatcc_verify_union_vector_field@@Base+0x9e4>
   3536c:	ldr	r3, [fp, #-12]
   35370:	add	r3, r3, #1
   35374:	ldr	r2, [fp, #-16]
   35378:	mov	r1, r3
   3537c:	ldr	r0, [fp, #-8]
   35380:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   35384:	str	r0, [fp, #-12]
   35388:	ldr	r2, [fp, #-12]
   3538c:	ldr	r3, [fp, #-16]
   35390:	cmp	r2, r3
   35394:	bne	353c0 <flatcc_verify_union_vector_field@@Base+0x998>
   35398:	ldr	r3, [fp, #-20]	; 0xffffffec
   3539c:	mov	r2, #0
   353a0:	str	r2, [r3]
   353a4:	mov	r3, #9
   353a8:	ldr	r2, [fp, #-16]
   353ac:	ldr	r1, [fp, #-12]
   353b0:	ldr	r0, [fp, #-8]
   353b4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   353b8:	mov	r3, r0
   353bc:	b	3540c <flatcc_verify_union_vector_field@@Base+0x9e4>
   353c0:	ldr	r3, [fp, #-12]
   353c4:	ldrb	r3, [r3]
   353c8:	cmp	r3, #93	; 0x5d
   353cc:	bne	353fc <flatcc_verify_union_vector_field@@Base+0x9d4>
   353d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   353d4:	mov	r2, #0
   353d8:	str	r2, [r3]
   353dc:	ldr	r3, [fp, #-12]
   353e0:	add	r3, r3, #1
   353e4:	ldr	r2, [fp, #-16]
   353e8:	mov	r1, r3
   353ec:	ldr	r0, [fp, #-8]
   353f0:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   353f4:	mov	r3, r0
   353f8:	b	3540c <flatcc_verify_union_vector_field@@Base+0x9e4>
   353fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   35400:	mov	r2, #1
   35404:	str	r2, [r3]
   35408:	ldr	r3, [fp, #-12]
   3540c:	mov	r0, r3
   35410:	sub	sp, fp, #4
   35414:	pop	{fp, pc}
   35418:	push	{fp, lr}
   3541c:	add	fp, sp, #4
   35420:	sub	sp, sp, #16
   35424:	str	r0, [fp, #-8]
   35428:	str	r1, [fp, #-12]
   3542c:	str	r2, [fp, #-16]
   35430:	str	r3, [fp, #-20]	; 0xffffffec
   35434:	ldr	r3, [fp, #-20]	; 0xffffffec
   35438:	cmp	r3, #0
   3543c:	beq	3545c <flatcc_verify_union_vector_field@@Base+0xa34>
   35440:	mov	r3, #8
   35444:	ldr	r2, [fp, #-16]
   35448:	ldr	r1, [fp, #-12]
   3544c:	ldr	r0, [fp, #-8]
   35450:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35454:	mov	r3, r0
   35458:	b	3546c <flatcc_verify_union_vector_field@@Base+0xa44>
   3545c:	ldr	r1, [fp, #12]
   35460:	ldrd	r2, [fp, #4]
   35464:	strd	r2, [r1]
   35468:	ldr	r3, [fp, #-12]
   3546c:	mov	r0, r3
   35470:	sub	sp, fp, #4
   35474:	pop	{fp, pc}
   35478:	push	{fp, lr}
   3547c:	add	fp, sp, #4
   35480:	sub	sp, sp, #16
   35484:	str	r0, [fp, #-8]
   35488:	str	r1, [fp, #-12]
   3548c:	str	r2, [fp, #-16]
   35490:	str	r3, [fp, #-20]	; 0xffffffec
   35494:	ldr	r3, [fp, #-20]	; 0xffffffec
   35498:	cmp	r3, #0
   3549c:	beq	354bc <flatcc_verify_union_vector_field@@Base+0xa94>
   354a0:	mov	r3, #8
   354a4:	ldr	r2, [fp, #-16]
   354a8:	ldr	r1, [fp, #-12]
   354ac:	ldr	r0, [fp, #-8]
   354b0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   354b4:	mov	r3, r0
   354b8:	b	354e8 <flatcc_verify_union_vector_field@@Base+0xac0>
   354bc:	ldr	r2, [fp, #4]
   354c0:	ldr	r3, [fp, #8]
   354c4:	orr	r3, r2, r3
   354c8:	cmp	r3, #0
   354cc:	movne	r3, #1
   354d0:	moveq	r3, #0
   354d4:	uxtb	r3, r3
   354d8:	mov	r2, r3
   354dc:	ldr	r3, [fp, #12]
   354e0:	strb	r2, [r3]
   354e4:	ldr	r3, [fp, #-12]
   354e8:	mov	r0, r3
   354ec:	sub	sp, fp, #4
   354f0:	pop	{fp, pc}
   354f4:	push	{fp, lr}
   354f8:	add	fp, sp, #4
   354fc:	sub	sp, sp, #16
   35500:	str	r0, [fp, #-8]
   35504:	str	r1, [fp, #-12]
   35508:	str	r2, [fp, #-16]
   3550c:	str	r3, [fp, #-20]	; 0xffffffec
   35510:	ldr	r3, [fp, #-20]	; 0xffffffec
   35514:	cmp	r3, #0
   35518:	beq	35538 <flatcc_verify_union_vector_field@@Base+0xb10>
   3551c:	mov	r3, #8
   35520:	ldr	r2, [fp, #-16]
   35524:	ldr	r1, [fp, #-12]
   35528:	ldr	r0, [fp, #-8]
   3552c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35530:	mov	r3, r0
   35534:	b	3557c <flatcc_verify_union_vector_field@@Base+0xb54>
   35538:	ldrd	r2, [fp, #4]
   3553c:	mvn	r0, #0
   35540:	mov	r1, #0
   35544:	cmp	r3, r1
   35548:	cmpeq	r2, r0
   3554c:	bls	3556c <flatcc_verify_union_vector_field@@Base+0xb44>
   35550:	mov	r3, #7
   35554:	ldr	r2, [fp, #-16]
   35558:	ldr	r1, [fp, #-12]
   3555c:	ldr	r0, [fp, #-8]
   35560:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35564:	mov	r3, r0
   35568:	b	3557c <flatcc_verify_union_vector_field@@Base+0xb54>
   3556c:	ldr	r2, [fp, #4]
   35570:	ldr	r3, [fp, #12]
   35574:	str	r2, [r3]
   35578:	ldr	r3, [fp, #-12]
   3557c:	mov	r0, r3
   35580:	sub	sp, fp, #4
   35584:	pop	{fp, pc}
   35588:	push	{fp, lr}
   3558c:	add	fp, sp, #4
   35590:	sub	sp, sp, #16
   35594:	str	r0, [fp, #-8]
   35598:	str	r1, [fp, #-12]
   3559c:	str	r2, [fp, #-16]
   355a0:	str	r3, [fp, #-20]	; 0xffffffec
   355a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   355a8:	cmp	r3, #0
   355ac:	beq	355cc <flatcc_verify_union_vector_field@@Base+0xba4>
   355b0:	mov	r3, #8
   355b4:	ldr	r2, [fp, #-16]
   355b8:	ldr	r1, [fp, #-12]
   355bc:	ldr	r0, [fp, #-8]
   355c0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   355c4:	mov	r3, r0
   355c8:	b	35610 <flatcc_verify_union_vector_field@@Base+0xbe8>
   355cc:	ldrd	r2, [fp, #4]
   355d0:	ldr	r0, [pc, #68]	; 3561c <flatcc_verify_union_vector_field@@Base+0xbf4>
   355d4:	mov	r1, #0
   355d8:	cmp	r3, r1
   355dc:	cmpeq	r2, r0
   355e0:	bls	35600 <flatcc_verify_union_vector_field@@Base+0xbd8>
   355e4:	mov	r3, #7
   355e8:	ldr	r2, [fp, #-16]
   355ec:	ldr	r1, [fp, #-12]
   355f0:	ldr	r0, [fp, #-8]
   355f4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   355f8:	mov	r3, r0
   355fc:	b	35610 <flatcc_verify_union_vector_field@@Base+0xbe8>
   35600:	ldrh	r2, [fp, #4]
   35604:	ldr	r3, [fp, #12]
   35608:	strh	r2, [r3]
   3560c:	ldr	r3, [fp, #-12]
   35610:	mov	r0, r3
   35614:	sub	sp, fp, #4
   35618:	pop	{fp, pc}
   3561c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   35620:	push	{fp, lr}
   35624:	add	fp, sp, #4
   35628:	sub	sp, sp, #16
   3562c:	str	r0, [fp, #-8]
   35630:	str	r1, [fp, #-12]
   35634:	str	r2, [fp, #-16]
   35638:	str	r3, [fp, #-20]	; 0xffffffec
   3563c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35640:	cmp	r3, #0
   35644:	beq	35664 <flatcc_verify_union_vector_field@@Base+0xc3c>
   35648:	mov	r3, #8
   3564c:	ldr	r2, [fp, #-16]
   35650:	ldr	r1, [fp, #-12]
   35654:	ldr	r0, [fp, #-8]
   35658:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3565c:	mov	r3, r0
   35660:	b	356a0 <flatcc_verify_union_vector_field@@Base+0xc78>
   35664:	ldrd	r2, [fp, #4]
   35668:	cmp	r3, #0
   3566c:	cmpeq	r2, #255	; 0xff
   35670:	bls	35690 <flatcc_verify_union_vector_field@@Base+0xc68>
   35674:	mov	r3, #7
   35678:	ldr	r2, [fp, #-16]
   3567c:	ldr	r1, [fp, #-12]
   35680:	ldr	r0, [fp, #-8]
   35684:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35688:	mov	r3, r0
   3568c:	b	356a0 <flatcc_verify_union_vector_field@@Base+0xc78>
   35690:	ldrb	r2, [fp, #4]
   35694:	ldr	r3, [fp, #12]
   35698:	strb	r2, [r3]
   3569c:	ldr	r3, [fp, #-12]
   356a0:	mov	r0, r3
   356a4:	sub	sp, fp, #4
   356a8:	pop	{fp, pc}
   356ac:	push	{fp, lr}
   356b0:	add	fp, sp, #4
   356b4:	sub	sp, sp, #16
   356b8:	str	r0, [fp, #-8]
   356bc:	str	r1, [fp, #-12]
   356c0:	str	r2, [fp, #-16]
   356c4:	str	r3, [fp, #-20]	; 0xffffffec
   356c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   356cc:	cmp	r3, #0
   356d0:	beq	35718 <flatcc_verify_union_vector_field@@Base+0xcf0>
   356d4:	ldrd	r2, [fp, #4]
   356d8:	cmp	r3, #-2147483648	; 0x80000000
   356dc:	cmpeq	r2, #0
   356e0:	bls	35700 <flatcc_verify_union_vector_field@@Base+0xcd8>
   356e4:	mov	r3, #8
   356e8:	ldr	r2, [fp, #-16]
   356ec:	ldr	r1, [fp, #-12]
   356f0:	ldr	r0, [fp, #-8]
   356f4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   356f8:	mov	r3, r0
   356fc:	b	35754 <flatcc_verify_union_vector_field@@Base+0xd2c>
   35700:	ldrd	r2, [fp, #4]
   35704:	rsbs	r2, r2, #0
   35708:	rsc	r3, r3, #0
   3570c:	ldr	r1, [fp, #12]
   35710:	strd	r2, [r1]
   35714:	b	35750 <flatcc_verify_union_vector_field@@Base+0xd28>
   35718:	ldrd	r2, [fp, #4]
   3571c:	cmp	r2, #0
   35720:	sbcs	r3, r3, #0
   35724:	bge	35744 <flatcc_verify_union_vector_field@@Base+0xd1c>
   35728:	mov	r3, #7
   3572c:	ldr	r2, [fp, #-16]
   35730:	ldr	r1, [fp, #-12]
   35734:	ldr	r0, [fp, #-8]
   35738:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3573c:	mov	r3, r0
   35740:	b	35754 <flatcc_verify_union_vector_field@@Base+0xd2c>
   35744:	ldrd	r2, [fp, #4]
   35748:	ldr	r1, [fp, #12]
   3574c:	strd	r2, [r1]
   35750:	ldr	r3, [fp, #-12]
   35754:	mov	r0, r3
   35758:	sub	sp, fp, #4
   3575c:	pop	{fp, pc}
   35760:	push	{fp, lr}
   35764:	add	fp, sp, #4
   35768:	sub	sp, sp, #16
   3576c:	str	r0, [fp, #-8]
   35770:	str	r1, [fp, #-12]
   35774:	str	r2, [fp, #-16]
   35778:	str	r3, [fp, #-20]	; 0xffffffec
   3577c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35780:	cmp	r3, #0
   35784:	beq	357cc <flatcc_verify_union_vector_field@@Base+0xda4>
   35788:	ldrd	r2, [fp, #4]
   3578c:	cmp	r3, #0
   35790:	cmpeq	r2, #-2147483648	; 0x80000000
   35794:	bls	357b4 <flatcc_verify_union_vector_field@@Base+0xd8c>
   35798:	mov	r3, #8
   3579c:	ldr	r2, [fp, #-16]
   357a0:	ldr	r1, [fp, #-12]
   357a4:	ldr	r0, [fp, #-8]
   357a8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   357ac:	mov	r3, r0
   357b0:	b	35810 <flatcc_verify_union_vector_field@@Base+0xde8>
   357b4:	ldr	r3, [fp, #4]
   357b8:	rsb	r3, r3, #0
   357bc:	mov	r2, r3
   357c0:	ldr	r3, [fp, #12]
   357c4:	str	r2, [r3]
   357c8:	b	3580c <flatcc_verify_union_vector_field@@Base+0xde4>
   357cc:	ldrd	r2, [fp, #4]
   357d0:	mvn	r0, #-2147483648	; 0x80000000
   357d4:	mov	r1, #0
   357d8:	cmp	r3, r1
   357dc:	cmpeq	r2, r0
   357e0:	bls	35800 <flatcc_verify_union_vector_field@@Base+0xdd8>
   357e4:	mov	r3, #7
   357e8:	ldr	r2, [fp, #-16]
   357ec:	ldr	r1, [fp, #-12]
   357f0:	ldr	r0, [fp, #-8]
   357f4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   357f8:	mov	r3, r0
   357fc:	b	35810 <flatcc_verify_union_vector_field@@Base+0xde8>
   35800:	ldr	r2, [fp, #4]
   35804:	ldr	r3, [fp, #12]
   35808:	str	r2, [r3]
   3580c:	ldr	r3, [fp, #-12]
   35810:	mov	r0, r3
   35814:	sub	sp, fp, #4
   35818:	pop	{fp, pc}
   3581c:	push	{fp, lr}
   35820:	add	fp, sp, #4
   35824:	sub	sp, sp, #16
   35828:	str	r0, [fp, #-8]
   3582c:	str	r1, [fp, #-12]
   35830:	str	r2, [fp, #-16]
   35834:	str	r3, [fp, #-20]	; 0xffffffec
   35838:	ldr	r3, [fp, #-20]	; 0xffffffec
   3583c:	cmp	r3, #0
   35840:	beq	3588c <flatcc_verify_union_vector_field@@Base+0xe64>
   35844:	ldrd	r2, [fp, #4]
   35848:	cmp	r3, #0
   3584c:	cmpeq	r2, #32768	; 0x8000
   35850:	bls	35870 <flatcc_verify_union_vector_field@@Base+0xe48>
   35854:	mov	r3, #8
   35858:	ldr	r2, [fp, #-16]
   3585c:	ldr	r1, [fp, #-12]
   35860:	ldr	r0, [fp, #-8]
   35864:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35868:	mov	r3, r0
   3586c:	b	358d0 <flatcc_verify_union_vector_field@@Base+0xea8>
   35870:	ldrh	r3, [fp, #4]
   35874:	rsb	r3, r3, #0
   35878:	uxth	r3, r3
   3587c:	sxth	r2, r3
   35880:	ldr	r3, [fp, #12]
   35884:	strh	r2, [r3]
   35888:	b	358cc <flatcc_verify_union_vector_field@@Base+0xea4>
   3588c:	ldrd	r2, [fp, #4]
   35890:	ldr	r0, [pc, #68]	; 358dc <flatcc_verify_union_vector_field@@Base+0xeb4>
   35894:	mov	r1, #0
   35898:	cmp	r3, r1
   3589c:	cmpeq	r2, r0
   358a0:	bls	358c0 <flatcc_verify_union_vector_field@@Base+0xe98>
   358a4:	mov	r3, #7
   358a8:	ldr	r2, [fp, #-16]
   358ac:	ldr	r1, [fp, #-12]
   358b0:	ldr	r0, [fp, #-8]
   358b4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   358b8:	mov	r3, r0
   358bc:	b	358d0 <flatcc_verify_union_vector_field@@Base+0xea8>
   358c0:	ldrsh	r2, [fp, #4]
   358c4:	ldr	r3, [fp, #12]
   358c8:	strh	r2, [r3]
   358cc:	ldr	r3, [fp, #-12]
   358d0:	mov	r0, r3
   358d4:	sub	sp, fp, #4
   358d8:	pop	{fp, pc}
   358dc:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   358e0:	push	{fp, lr}
   358e4:	add	fp, sp, #4
   358e8:	sub	sp, sp, #16
   358ec:	str	r0, [fp, #-8]
   358f0:	str	r1, [fp, #-12]
   358f4:	str	r2, [fp, #-16]
   358f8:	str	r3, [fp, #-20]	; 0xffffffec
   358fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   35900:	cmp	r3, #0
   35904:	beq	35950 <flatcc_verify_union_vector_field@@Base+0xf28>
   35908:	ldrd	r2, [fp, #4]
   3590c:	cmp	r3, #0
   35910:	cmpeq	r2, #128	; 0x80
   35914:	bls	35934 <flatcc_verify_union_vector_field@@Base+0xf0c>
   35918:	mov	r3, #8
   3591c:	ldr	r2, [fp, #-16]
   35920:	ldr	r1, [fp, #-12]
   35924:	ldr	r0, [fp, #-8]
   35928:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3592c:	mov	r3, r0
   35930:	b	3598c <flatcc_verify_union_vector_field@@Base+0xf64>
   35934:	ldrb	r3, [fp, #4]
   35938:	rsb	r3, r3, #0
   3593c:	uxtb	r3, r3
   35940:	sxtb	r2, r3
   35944:	ldr	r3, [fp, #12]
   35948:	strb	r2, [r3]
   3594c:	b	35988 <flatcc_verify_union_vector_field@@Base+0xf60>
   35950:	ldrd	r2, [fp, #4]
   35954:	cmp	r3, #0
   35958:	cmpeq	r2, #127	; 0x7f
   3595c:	bls	3597c <flatcc_verify_union_vector_field@@Base+0xf54>
   35960:	mov	r3, #7
   35964:	ldr	r2, [fp, #-16]
   35968:	ldr	r1, [fp, #-12]
   3596c:	ldr	r0, [fp, #-8]
   35970:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35974:	mov	r3, r0
   35978:	b	3598c <flatcc_verify_union_vector_field@@Base+0xf64>
   3597c:	ldrsb	r2, [fp, #4]
   35980:	ldr	r3, [fp, #12]
   35984:	strb	r2, [r3]
   35988:	ldr	r3, [fp, #-12]
   3598c:	mov	r0, r3
   35990:	sub	sp, fp, #4
   35994:	pop	{fp, pc}
   35998:	push	{fp, lr}
   3599c:	add	fp, sp, #4
   359a0:	sub	sp, sp, #16
   359a4:	str	r0, [fp, #-8]
   359a8:	str	r1, [fp, #-12]
   359ac:	str	r2, [fp, #-16]
   359b0:	str	r3, [fp, #-20]	; 0xffffffec
   359b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   359b8:	cmp	r3, #0
   359bc:	beq	359d4 <flatcc_verify_union_vector_field@@Base+0xfac>
   359c0:	ldrd	r0, [fp, #4]
   359c4:	bl	4b6e8 <flatcc_json_printer_clear@@Base+0xa24>
   359c8:	mov	r3, r0
   359cc:	eor	r2, r3, #-2147483648	; 0x80000000
   359d0:	b	359e0 <flatcc_verify_union_vector_field@@Base+0xfb8>
   359d4:	ldrd	r0, [fp, #4]
   359d8:	bl	4b6e8 <flatcc_json_printer_clear@@Base+0xa24>
   359dc:	mov	r2, r0
   359e0:	ldr	r3, [fp, #12]
   359e4:	str	r2, [r3]
   359e8:	ldr	r3, [fp, #-12]
   359ec:	mov	r0, r3
   359f0:	sub	sp, fp, #4
   359f4:	pop	{fp, pc}
   359f8:	push	{fp, lr}
   359fc:	add	fp, sp, #4
   35a00:	sub	sp, sp, #16
   35a04:	str	r0, [fp, #-8]
   35a08:	str	r1, [fp, #-12]
   35a0c:	str	r2, [fp, #-16]
   35a10:	str	r3, [fp, #-20]	; 0xffffffec
   35a14:	ldr	r3, [fp, #-20]	; 0xffffffec
   35a18:	cmp	r3, #0
   35a1c:	beq	35a38 <flatcc_verify_union_vector_field@@Base+0x1010>
   35a20:	ldrd	r0, [fp, #4]
   35a24:	bl	4b4b0 <flatcc_json_printer_clear@@Base+0x7ec>
   35a28:	mov	r2, r0
   35a2c:	mov	r3, r1
   35a30:	eor	r3, r3, #-2147483648	; 0x80000000
   35a34:	b	35a48 <flatcc_verify_union_vector_field@@Base+0x1020>
   35a38:	ldrd	r0, [fp, #4]
   35a3c:	bl	4b4b0 <flatcc_json_printer_clear@@Base+0x7ec>
   35a40:	mov	r2, r0
   35a44:	mov	r3, r1
   35a48:	ldr	r1, [fp, #12]
   35a4c:	strd	r2, [r1]
   35a50:	ldr	r3, [fp, #-12]
   35a54:	mov	r0, r3
   35a58:	sub	sp, fp, #4
   35a5c:	pop	{fp, pc}
   35a60:	push	{fp, lr}
   35a64:	add	fp, sp, #4
   35a68:	sub	sp, sp, #8
   35a6c:	str	r0, [fp, #-8]
   35a70:	str	r1, [fp, #-12]
   35a74:	ldr	r2, [fp, #-12]
   35a78:	ldr	r3, [fp, #-8]
   35a7c:	sub	r3, r2, r3
   35a80:	cmp	r3, #3
   35a84:	ble	35ab8 <flatcc_verify_union_vector_field@@Base+0x1090>
   35a88:	mov	r2, #4
   35a8c:	ldr	r3, [pc, #52]	; 35ac8 <flatcc_verify_union_vector_field@@Base+0x10a0>
   35a90:	add	r3, pc, r3
   35a94:	mov	r1, r3
   35a98:	ldr	r0, [fp, #-8]
   35a9c:	bl	14550 <memcmp@plt>
   35aa0:	mov	r3, r0
   35aa4:	cmp	r3, #0
   35aa8:	bne	35ab8 <flatcc_verify_union_vector_field@@Base+0x1090>
   35aac:	ldr	r3, [fp, #-8]
   35ab0:	add	r3, r3, #4
   35ab4:	b	35abc <flatcc_verify_union_vector_field@@Base+0x1094>
   35ab8:	ldr	r3, [fp, #-8]
   35abc:	mov	r0, r3
   35ac0:	sub	sp, fp, #4
   35ac4:	pop	{fp, pc}
   35ac8:	andeq	sl, r1, r4, lsr #1
   35acc:	push	{fp, lr}
   35ad0:	add	fp, sp, #4
   35ad4:	sub	sp, sp, #56	; 0x38
   35ad8:	str	r0, [fp, #-32]	; 0xffffffe0
   35adc:	str	r1, [fp, #-36]	; 0xffffffdc
   35ae0:	str	r2, [fp, #-40]	; 0xffffffd8
   35ae4:	str	r3, [fp, #-44]	; 0xffffffd4
   35ae8:	mov	r2, #0
   35aec:	mov	r3, #0
   35af0:	strd	r2, [fp, #-20]	; 0xffffffec
   35af4:	mov	r3, #0
   35af8:	str	r3, [fp, #-24]	; 0xffffffe8
   35afc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35b00:	str	r3, [fp, #-8]
   35b04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35b08:	mov	r2, #0
   35b0c:	strb	r2, [r3]
   35b10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   35b14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35b18:	cmp	r2, r3
   35b1c:	bne	35b28 <flatcc_verify_union_vector_field@@Base+0x1100>
   35b20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35b24:	b	35b90 <flatcc_verify_union_vector_field@@Base+0x1168>
   35b28:	sub	r2, fp, #24
   35b2c:	sub	r3, fp, #20
   35b30:	str	r3, [sp]
   35b34:	mov	r3, r2
   35b38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35b3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35b40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35b44:	bl	3b8d8 <flatcc_json_parser_integer@@Base>
   35b48:	str	r0, [fp, #-36]	; 0xffffffdc
   35b4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   35b50:	ldr	r3, [fp, #-8]
   35b54:	cmp	r2, r3
   35b58:	beq	35b8c <flatcc_verify_union_vector_field@@Base+0x1164>
   35b5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   35b60:	ldrd	r2, [fp, #-20]	; 0xffffffec
   35b64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35b68:	str	r1, [sp, #8]
   35b6c:	strd	r2, [sp]
   35b70:	mov	r3, r0
   35b74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35b78:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35b7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35b80:	bl	35620 <flatcc_verify_union_vector_field@@Base+0xbf8>
   35b84:	mov	r3, r0
   35b88:	b	35b90 <flatcc_verify_union_vector_field@@Base+0x1168>
   35b8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35b90:	mov	r0, r3
   35b94:	sub	sp, fp, #4
   35b98:	pop	{fp, pc}
   35b9c:	push	{fp, lr}
   35ba0:	add	fp, sp, #4
   35ba4:	sub	sp, sp, #24
   35ba8:	str	r0, [fp, #-16]
   35bac:	str	r1, [fp, #-20]	; 0xffffffec
   35bb0:	str	r2, [fp, #-24]	; 0xffffffe8
   35bb4:	str	r3, [fp, #-28]	; 0xffffffe4
   35bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   35bbc:	str	r3, [fp, #-8]
   35bc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35bc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   35bc8:	sub	r3, r2, r3
   35bcc:	cmp	r3, #3
   35bd0:	ble	35c10 <flatcc_verify_union_vector_field@@Base+0x11e8>
   35bd4:	mov	r2, #4
   35bd8:	ldr	r3, [pc, #200]	; 35ca8 <flatcc_verify_union_vector_field@@Base+0x1280>
   35bdc:	add	r3, pc, r3
   35be0:	mov	r1, r3
   35be4:	ldr	r0, [fp, #-20]	; 0xffffffec
   35be8:	bl	14550 <memcmp@plt>
   35bec:	mov	r3, r0
   35bf0:	cmp	r3, #0
   35bf4:	bne	35c10 <flatcc_verify_union_vector_field@@Base+0x11e8>
   35bf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35bfc:	mov	r2, #1
   35c00:	strb	r2, [r3]
   35c04:	ldr	r3, [fp, #-8]
   35c08:	add	r3, r3, #4
   35c0c:	b	35c9c <flatcc_verify_union_vector_field@@Base+0x1274>
   35c10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   35c18:	sub	r3, r2, r3
   35c1c:	cmp	r3, #4
   35c20:	ble	35c60 <flatcc_verify_union_vector_field@@Base+0x1238>
   35c24:	mov	r2, #5
   35c28:	ldr	r3, [pc, #124]	; 35cac <flatcc_verify_union_vector_field@@Base+0x1284>
   35c2c:	add	r3, pc, r3
   35c30:	mov	r1, r3
   35c34:	ldr	r0, [fp, #-20]	; 0xffffffec
   35c38:	bl	14550 <memcmp@plt>
   35c3c:	mov	r3, r0
   35c40:	cmp	r3, #0
   35c44:	bne	35c60 <flatcc_verify_union_vector_field@@Base+0x1238>
   35c48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35c4c:	mov	r2, #0
   35c50:	strb	r2, [r3]
   35c54:	ldr	r3, [fp, #-8]
   35c58:	add	r3, r3, #5
   35c5c:	b	35c9c <flatcc_verify_union_vector_field@@Base+0x1274>
   35c60:	sub	r3, fp, #9
   35c64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   35c68:	ldr	r1, [fp, #-20]	; 0xffffffec
   35c6c:	ldr	r0, [fp, #-16]
   35c70:	bl	35acc <flatcc_verify_union_vector_field@@Base+0x10a4>
   35c74:	str	r0, [fp, #-20]	; 0xffffffec
   35c78:	ldrb	r3, [fp, #-9]
   35c7c:	cmp	r3, #0
   35c80:	movne	r3, #1
   35c84:	moveq	r3, #0
   35c88:	uxtb	r3, r3
   35c8c:	mov	r2, r3
   35c90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35c94:	strb	r2, [r3]
   35c98:	ldr	r3, [fp, #-20]	; 0xffffffec
   35c9c:	mov	r0, r3
   35ca0:	sub	sp, fp, #4
   35ca4:	pop	{fp, pc}
   35ca8:	andeq	r9, r1, r0, ror #30
   35cac:	andeq	r9, r1, r8, lsl pc
   35cb0:	push	{r4, fp, lr}
   35cb4:	add	fp, sp, #8
   35cb8:	sub	sp, sp, #68	; 0x44
   35cbc:	str	r0, [fp, #-48]	; 0xffffffd0
   35cc0:	str	r1, [fp, #-52]	; 0xffffffcc
   35cc4:	str	r2, [fp, #-56]	; 0xffffffc8
   35cc8:	str	r3, [fp, #-60]	; 0xffffffc4
   35ccc:	mov	r2, #0
   35cd0:	mov	r3, #0
   35cd4:	strd	r2, [fp, #-28]	; 0xffffffe4
   35cd8:	ldr	r1, [fp, #4]
   35cdc:	mov	r2, #0
   35ce0:	mov	r3, #0
   35ce4:	strd	r2, [r1]
   35ce8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35cec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35cf0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35cf4:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   35cf8:	str	r0, [fp, #-52]	; 0xffffffcc
   35cfc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35d00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35d04:	cmp	r2, r3
   35d08:	bne	35d14 <flatcc_verify_union_vector_field@@Base+0x12ec>
   35d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35d10:	b	35e34 <flatcc_verify_union_vector_field@@Base+0x140c>
   35d14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35d18:	str	r3, [fp, #-16]
   35d1c:	ldr	r3, [fp, #-16]
   35d20:	ldr	r4, [r3]
   35d24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35d28:	str	r3, [fp, #-20]	; 0xffffffec
   35d2c:	sub	r2, fp, #40	; 0x28
   35d30:	sub	r3, fp, #44	; 0x2c
   35d34:	str	r3, [sp, #4]
   35d38:	sub	r3, fp, #36	; 0x24
   35d3c:	str	r3, [sp]
   35d40:	mov	r3, r2
   35d44:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35d48:	ldr	r1, [fp, #-20]	; 0xffffffec
   35d4c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35d50:	blx	r4
   35d54:	str	r0, [fp, #-52]	; 0xffffffcc
   35d58:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35d5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35d60:	cmp	r2, r3
   35d64:	bne	35d70 <flatcc_verify_union_vector_field@@Base+0x1348>
   35d68:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35d6c:	b	35e34 <flatcc_verify_union_vector_field@@Base+0x140c>
   35d70:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35d74:	ldr	r3, [fp, #-20]	; 0xffffffec
   35d78:	cmp	r2, r3
   35d7c:	bne	35d9c <flatcc_verify_union_vector_field@@Base+0x1374>
   35d80:	ldr	r3, [fp, #-16]
   35d84:	add	r3, r3, #4
   35d88:	str	r3, [fp, #-16]
   35d8c:	ldr	r3, [fp, #-16]
   35d90:	ldr	r3, [r3]
   35d94:	cmp	r3, #0
   35d98:	bne	35d1c <flatcc_verify_union_vector_field@@Base+0x12f4>
   35d9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   35da0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35da4:	cmp	r2, r3
   35da8:	bne	35dc8 <flatcc_verify_union_vector_field@@Base+0x13a0>
   35dac:	mov	r3, #23
   35db0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35db4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35db8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35dbc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35dc0:	mov	r3, r0
   35dc4:	b	35e34 <flatcc_verify_union_vector_field@@Base+0x140c>
   35dc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35dcc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   35dd0:	sub	r1, fp, #28
   35dd4:	str	r1, [sp, #8]
   35dd8:	strd	r2, [sp]
   35ddc:	mov	r3, r0
   35de0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35de4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35de8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35dec:	bl	35418 <flatcc_verify_union_vector_field@@Base+0x9f0>
   35df0:	mov	r2, r0
   35df4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35df8:	cmp	r2, r3
   35dfc:	bne	35e08 <flatcc_verify_union_vector_field@@Base+0x13e0>
   35e00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35e04:	b	35e34 <flatcc_verify_union_vector_field@@Base+0x140c>
   35e08:	ldr	r3, [fp, #4]
   35e0c:	ldrd	r0, [r3]
   35e10:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   35e14:	adds	r2, r2, r0
   35e18:	adc	r3, r3, r1
   35e1c:	ldr	r1, [fp, #4]
   35e20:	strd	r2, [r1]
   35e24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35e28:	cmp	r3, #0
   35e2c:	bne	35d14 <flatcc_verify_union_vector_field@@Base+0x12ec>
   35e30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35e34:	mov	r0, r3
   35e38:	sub	sp, fp, #8
   35e3c:	pop	{r4, fp, pc}
   35e40:	push	{r4, fp, lr}
   35e44:	add	fp, sp, #8
   35e48:	sub	sp, sp, #68	; 0x44
   35e4c:	str	r0, [fp, #-48]	; 0xffffffd0
   35e50:	str	r1, [fp, #-52]	; 0xffffffcc
   35e54:	str	r2, [fp, #-56]	; 0xffffffc8
   35e58:	str	r3, [fp, #-60]	; 0xffffffc4
   35e5c:	mov	r3, #0
   35e60:	str	r3, [fp, #-24]	; 0xffffffe8
   35e64:	ldr	r3, [fp, #4]
   35e68:	mov	r2, #0
   35e6c:	str	r2, [r3]
   35e70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35e74:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35e78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35e7c:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   35e80:	str	r0, [fp, #-52]	; 0xffffffcc
   35e84:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35e88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35e8c:	cmp	r2, r3
   35e90:	bne	35e9c <flatcc_verify_union_vector_field@@Base+0x1474>
   35e94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35e98:	b	35fb8 <flatcc_verify_union_vector_field@@Base+0x1590>
   35e9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35ea0:	str	r3, [fp, #-16]
   35ea4:	ldr	r3, [fp, #-16]
   35ea8:	ldr	r4, [r3]
   35eac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35eb0:	str	r3, [fp, #-20]	; 0xffffffec
   35eb4:	sub	r2, fp, #40	; 0x28
   35eb8:	sub	r3, fp, #44	; 0x2c
   35ebc:	str	r3, [sp, #4]
   35ec0:	sub	r3, fp, #36	; 0x24
   35ec4:	str	r3, [sp]
   35ec8:	mov	r3, r2
   35ecc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   35ed4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35ed8:	blx	r4
   35edc:	str	r0, [fp, #-52]	; 0xffffffcc
   35ee0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35ee4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35ee8:	cmp	r2, r3
   35eec:	bne	35ef8 <flatcc_verify_union_vector_field@@Base+0x14d0>
   35ef0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35ef4:	b	35fb8 <flatcc_verify_union_vector_field@@Base+0x1590>
   35ef8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   35efc:	ldr	r3, [fp, #-20]	; 0xffffffec
   35f00:	cmp	r2, r3
   35f04:	bne	35f24 <flatcc_verify_union_vector_field@@Base+0x14fc>
   35f08:	ldr	r3, [fp, #-16]
   35f0c:	add	r3, r3, #4
   35f10:	str	r3, [fp, #-16]
   35f14:	ldr	r3, [fp, #-16]
   35f18:	ldr	r3, [r3]
   35f1c:	cmp	r3, #0
   35f20:	bne	35ea4 <flatcc_verify_union_vector_field@@Base+0x147c>
   35f24:	ldr	r2, [fp, #-20]	; 0xffffffec
   35f28:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35f2c:	cmp	r2, r3
   35f30:	bne	35f50 <flatcc_verify_union_vector_field@@Base+0x1528>
   35f34:	mov	r3, #23
   35f38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35f3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35f40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35f44:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   35f48:	mov	r3, r0
   35f4c:	b	35fb8 <flatcc_verify_union_vector_field@@Base+0x1590>
   35f50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35f54:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   35f58:	sub	r1, fp, #24
   35f5c:	str	r1, [sp, #8]
   35f60:	strd	r2, [sp]
   35f64:	mov	r3, r0
   35f68:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35f6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35f70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   35f74:	bl	354f4 <flatcc_verify_union_vector_field@@Base+0xacc>
   35f78:	mov	r2, r0
   35f7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35f80:	cmp	r2, r3
   35f84:	bne	35f90 <flatcc_verify_union_vector_field@@Base+0x1568>
   35f88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35f8c:	b	35fb8 <flatcc_verify_union_vector_field@@Base+0x1590>
   35f90:	ldr	r3, [fp, #4]
   35f94:	ldr	r2, [r3]
   35f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35f9c:	add	r2, r2, r3
   35fa0:	ldr	r3, [fp, #4]
   35fa4:	str	r2, [r3]
   35fa8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35fac:	cmp	r3, #0
   35fb0:	bne	35e9c <flatcc_verify_union_vector_field@@Base+0x1474>
   35fb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35fb8:	mov	r0, r3
   35fbc:	sub	sp, fp, #8
   35fc0:	pop	{r4, fp, pc}
   35fc4:	push	{r4, fp, lr}
   35fc8:	add	fp, sp, #8
   35fcc:	sub	sp, sp, #68	; 0x44
   35fd0:	str	r0, [fp, #-48]	; 0xffffffd0
   35fd4:	str	r1, [fp, #-52]	; 0xffffffcc
   35fd8:	str	r2, [fp, #-56]	; 0xffffffc8
   35fdc:	str	r3, [fp, #-60]	; 0xffffffc4
   35fe0:	mov	r3, #0
   35fe4:	strh	r3, [fp, #-22]	; 0xffffffea
   35fe8:	ldr	r3, [fp, #4]
   35fec:	mov	r2, #0
   35ff0:	strh	r2, [r3]
   35ff4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   35ff8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35ffc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36000:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   36004:	str	r0, [fp, #-52]	; 0xffffffcc
   36008:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3600c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36010:	cmp	r2, r3
   36014:	bne	36020 <flatcc_verify_union_vector_field@@Base+0x15f8>
   36018:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3601c:	b	36140 <flatcc_verify_union_vector_field@@Base+0x1718>
   36020:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36024:	str	r3, [fp, #-16]
   36028:	ldr	r3, [fp, #-16]
   3602c:	ldr	r4, [r3]
   36030:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36034:	str	r3, [fp, #-20]	; 0xffffffec
   36038:	sub	r2, fp, #40	; 0x28
   3603c:	sub	r3, fp, #44	; 0x2c
   36040:	str	r3, [sp, #4]
   36044:	sub	r3, fp, #36	; 0x24
   36048:	str	r3, [sp]
   3604c:	mov	r3, r2
   36050:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36054:	ldr	r1, [fp, #-20]	; 0xffffffec
   36058:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3605c:	blx	r4
   36060:	str	r0, [fp, #-52]	; 0xffffffcc
   36064:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36068:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3606c:	cmp	r2, r3
   36070:	bne	3607c <flatcc_verify_union_vector_field@@Base+0x1654>
   36074:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36078:	b	36140 <flatcc_verify_union_vector_field@@Base+0x1718>
   3607c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36080:	ldr	r3, [fp, #-20]	; 0xffffffec
   36084:	cmp	r2, r3
   36088:	bne	360a8 <flatcc_verify_union_vector_field@@Base+0x1680>
   3608c:	ldr	r3, [fp, #-16]
   36090:	add	r3, r3, #4
   36094:	str	r3, [fp, #-16]
   36098:	ldr	r3, [fp, #-16]
   3609c:	ldr	r3, [r3]
   360a0:	cmp	r3, #0
   360a4:	bne	36028 <flatcc_verify_union_vector_field@@Base+0x1600>
   360a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   360ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   360b0:	cmp	r2, r3
   360b4:	bne	360d4 <flatcc_verify_union_vector_field@@Base+0x16ac>
   360b8:	mov	r3, #23
   360bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   360c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   360c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   360c8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   360cc:	mov	r3, r0
   360d0:	b	36140 <flatcc_verify_union_vector_field@@Base+0x1718>
   360d4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   360d8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   360dc:	sub	r1, fp, #22
   360e0:	str	r1, [sp, #8]
   360e4:	strd	r2, [sp]
   360e8:	mov	r3, r0
   360ec:	ldr	r2, [fp, #-56]	; 0xffffffc8
   360f0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   360f4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   360f8:	bl	35588 <flatcc_verify_union_vector_field@@Base+0xb60>
   360fc:	mov	r2, r0
   36100:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36104:	cmp	r2, r3
   36108:	bne	36114 <flatcc_verify_union_vector_field@@Base+0x16ec>
   3610c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36110:	b	36140 <flatcc_verify_union_vector_field@@Base+0x1718>
   36114:	ldr	r3, [fp, #4]
   36118:	ldrh	r2, [r3]
   3611c:	ldrh	r3, [fp, #-22]	; 0xffffffea
   36120:	add	r3, r2, r3
   36124:	uxth	r2, r3
   36128:	ldr	r3, [fp, #4]
   3612c:	strh	r2, [r3]
   36130:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36134:	cmp	r3, #0
   36138:	bne	36020 <flatcc_verify_union_vector_field@@Base+0x15f8>
   3613c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36140:	mov	r0, r3
   36144:	sub	sp, fp, #8
   36148:	pop	{r4, fp, pc}
   3614c:	push	{r4, fp, lr}
   36150:	add	fp, sp, #8
   36154:	sub	sp, sp, #68	; 0x44
   36158:	str	r0, [fp, #-48]	; 0xffffffd0
   3615c:	str	r1, [fp, #-52]	; 0xffffffcc
   36160:	str	r2, [fp, #-56]	; 0xffffffc8
   36164:	str	r3, [fp, #-60]	; 0xffffffc4
   36168:	mov	r3, #0
   3616c:	strb	r3, [fp, #-21]	; 0xffffffeb
   36170:	ldr	r3, [fp, #4]
   36174:	mov	r2, #0
   36178:	strb	r2, [r3]
   3617c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36180:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36184:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36188:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   3618c:	str	r0, [fp, #-52]	; 0xffffffcc
   36190:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36194:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36198:	cmp	r2, r3
   3619c:	bne	361a8 <flatcc_verify_union_vector_field@@Base+0x1780>
   361a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   361a4:	b	362c8 <flatcc_verify_union_vector_field@@Base+0x18a0>
   361a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   361ac:	str	r3, [fp, #-16]
   361b0:	ldr	r3, [fp, #-16]
   361b4:	ldr	r4, [r3]
   361b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   361bc:	str	r3, [fp, #-20]	; 0xffffffec
   361c0:	sub	r2, fp, #40	; 0x28
   361c4:	sub	r3, fp, #44	; 0x2c
   361c8:	str	r3, [sp, #4]
   361cc:	sub	r3, fp, #36	; 0x24
   361d0:	str	r3, [sp]
   361d4:	mov	r3, r2
   361d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   361dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   361e0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   361e4:	blx	r4
   361e8:	str	r0, [fp, #-52]	; 0xffffffcc
   361ec:	ldr	r2, [fp, #-52]	; 0xffffffcc
   361f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   361f4:	cmp	r2, r3
   361f8:	bne	36204 <flatcc_verify_union_vector_field@@Base+0x17dc>
   361fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36200:	b	362c8 <flatcc_verify_union_vector_field@@Base+0x18a0>
   36204:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36208:	ldr	r3, [fp, #-20]	; 0xffffffec
   3620c:	cmp	r2, r3
   36210:	bne	36230 <flatcc_verify_union_vector_field@@Base+0x1808>
   36214:	ldr	r3, [fp, #-16]
   36218:	add	r3, r3, #4
   3621c:	str	r3, [fp, #-16]
   36220:	ldr	r3, [fp, #-16]
   36224:	ldr	r3, [r3]
   36228:	cmp	r3, #0
   3622c:	bne	361b0 <flatcc_verify_union_vector_field@@Base+0x1788>
   36230:	ldr	r2, [fp, #-20]	; 0xffffffec
   36234:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36238:	cmp	r2, r3
   3623c:	bne	3625c <flatcc_verify_union_vector_field@@Base+0x1834>
   36240:	mov	r3, #23
   36244:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36248:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3624c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36250:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   36254:	mov	r3, r0
   36258:	b	362c8 <flatcc_verify_union_vector_field@@Base+0x18a0>
   3625c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36260:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36264:	sub	r1, fp, #21
   36268:	str	r1, [sp, #8]
   3626c:	strd	r2, [sp]
   36270:	mov	r3, r0
   36274:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36278:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3627c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36280:	bl	35620 <flatcc_verify_union_vector_field@@Base+0xbf8>
   36284:	mov	r2, r0
   36288:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3628c:	cmp	r2, r3
   36290:	bne	3629c <flatcc_verify_union_vector_field@@Base+0x1874>
   36294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36298:	b	362c8 <flatcc_verify_union_vector_field@@Base+0x18a0>
   3629c:	ldr	r3, [fp, #4]
   362a0:	ldrb	r2, [r3]
   362a4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   362a8:	add	r3, r2, r3
   362ac:	uxtb	r2, r3
   362b0:	ldr	r3, [fp, #4]
   362b4:	strb	r2, [r3]
   362b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   362bc:	cmp	r3, #0
   362c0:	bne	361a8 <flatcc_verify_union_vector_field@@Base+0x1780>
   362c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   362c8:	mov	r0, r3
   362cc:	sub	sp, fp, #8
   362d0:	pop	{r4, fp, pc}
   362d4:	push	{r4, fp, lr}
   362d8:	add	fp, sp, #8
   362dc:	sub	sp, sp, #68	; 0x44
   362e0:	str	r0, [fp, #-48]	; 0xffffffd0
   362e4:	str	r1, [fp, #-52]	; 0xffffffcc
   362e8:	str	r2, [fp, #-56]	; 0xffffffc8
   362ec:	str	r3, [fp, #-60]	; 0xffffffc4
   362f0:	mov	r2, #0
   362f4:	mov	r3, #0
   362f8:	strd	r2, [fp, #-28]	; 0xffffffe4
   362fc:	ldr	r1, [fp, #4]
   36300:	mov	r2, #0
   36304:	mov	r3, #0
   36308:	strd	r2, [r1]
   3630c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36310:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36314:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36318:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   3631c:	str	r0, [fp, #-52]	; 0xffffffcc
   36320:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36324:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36328:	cmp	r2, r3
   3632c:	bne	36338 <flatcc_verify_union_vector_field@@Base+0x1910>
   36330:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36334:	b	36458 <flatcc_verify_union_vector_field@@Base+0x1a30>
   36338:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3633c:	str	r3, [fp, #-16]
   36340:	ldr	r3, [fp, #-16]
   36344:	ldr	r4, [r3]
   36348:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3634c:	str	r3, [fp, #-20]	; 0xffffffec
   36350:	sub	r2, fp, #40	; 0x28
   36354:	sub	r3, fp, #44	; 0x2c
   36358:	str	r3, [sp, #4]
   3635c:	sub	r3, fp, #36	; 0x24
   36360:	str	r3, [sp]
   36364:	mov	r3, r2
   36368:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3636c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36370:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36374:	blx	r4
   36378:	str	r0, [fp, #-52]	; 0xffffffcc
   3637c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36380:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36384:	cmp	r2, r3
   36388:	bne	36394 <flatcc_verify_union_vector_field@@Base+0x196c>
   3638c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36390:	b	36458 <flatcc_verify_union_vector_field@@Base+0x1a30>
   36394:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36398:	ldr	r3, [fp, #-20]	; 0xffffffec
   3639c:	cmp	r2, r3
   363a0:	bne	363c0 <flatcc_verify_union_vector_field@@Base+0x1998>
   363a4:	ldr	r3, [fp, #-16]
   363a8:	add	r3, r3, #4
   363ac:	str	r3, [fp, #-16]
   363b0:	ldr	r3, [fp, #-16]
   363b4:	ldr	r3, [r3]
   363b8:	cmp	r3, #0
   363bc:	bne	36340 <flatcc_verify_union_vector_field@@Base+0x1918>
   363c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   363c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   363c8:	cmp	r2, r3
   363cc:	bne	363ec <flatcc_verify_union_vector_field@@Base+0x19c4>
   363d0:	mov	r3, #23
   363d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   363d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   363dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   363e0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   363e4:	mov	r3, r0
   363e8:	b	36458 <flatcc_verify_union_vector_field@@Base+0x1a30>
   363ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   363f0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   363f4:	sub	r1, fp, #28
   363f8:	str	r1, [sp, #8]
   363fc:	strd	r2, [sp]
   36400:	mov	r3, r0
   36404:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36408:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3640c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36410:	bl	356ac <flatcc_verify_union_vector_field@@Base+0xc84>
   36414:	mov	r2, r0
   36418:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3641c:	cmp	r2, r3
   36420:	bne	3642c <flatcc_verify_union_vector_field@@Base+0x1a04>
   36424:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36428:	b	36458 <flatcc_verify_union_vector_field@@Base+0x1a30>
   3642c:	ldr	r3, [fp, #4]
   36430:	ldrd	r0, [r3]
   36434:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   36438:	adds	r2, r2, r0
   3643c:	adc	r3, r3, r1
   36440:	ldr	r1, [fp, #4]
   36444:	strd	r2, [r1]
   36448:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3644c:	cmp	r3, #0
   36450:	bne	36338 <flatcc_verify_union_vector_field@@Base+0x1910>
   36454:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36458:	mov	r0, r3
   3645c:	sub	sp, fp, #8
   36460:	pop	{r4, fp, pc}
   36464:	push	{r4, fp, lr}
   36468:	add	fp, sp, #8
   3646c:	sub	sp, sp, #68	; 0x44
   36470:	str	r0, [fp, #-48]	; 0xffffffd0
   36474:	str	r1, [fp, #-52]	; 0xffffffcc
   36478:	str	r2, [fp, #-56]	; 0xffffffc8
   3647c:	str	r3, [fp, #-60]	; 0xffffffc4
   36480:	mov	r3, #0
   36484:	str	r3, [fp, #-24]	; 0xffffffe8
   36488:	ldr	r3, [fp, #4]
   3648c:	mov	r2, #0
   36490:	str	r2, [r3]
   36494:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36498:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3649c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   364a0:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   364a4:	str	r0, [fp, #-52]	; 0xffffffcc
   364a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   364ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   364b0:	cmp	r2, r3
   364b4:	bne	364c0 <flatcc_verify_union_vector_field@@Base+0x1a98>
   364b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   364bc:	b	365dc <flatcc_verify_union_vector_field@@Base+0x1bb4>
   364c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   364c4:	str	r3, [fp, #-16]
   364c8:	ldr	r3, [fp, #-16]
   364cc:	ldr	r4, [r3]
   364d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   364d4:	str	r3, [fp, #-20]	; 0xffffffec
   364d8:	sub	r2, fp, #40	; 0x28
   364dc:	sub	r3, fp, #44	; 0x2c
   364e0:	str	r3, [sp, #4]
   364e4:	sub	r3, fp, #36	; 0x24
   364e8:	str	r3, [sp]
   364ec:	mov	r3, r2
   364f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   364f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   364f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   364fc:	blx	r4
   36500:	str	r0, [fp, #-52]	; 0xffffffcc
   36504:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36508:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3650c:	cmp	r2, r3
   36510:	bne	3651c <flatcc_verify_union_vector_field@@Base+0x1af4>
   36514:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36518:	b	365dc <flatcc_verify_union_vector_field@@Base+0x1bb4>
   3651c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36520:	ldr	r3, [fp, #-20]	; 0xffffffec
   36524:	cmp	r2, r3
   36528:	bne	36548 <flatcc_verify_union_vector_field@@Base+0x1b20>
   3652c:	ldr	r3, [fp, #-16]
   36530:	add	r3, r3, #4
   36534:	str	r3, [fp, #-16]
   36538:	ldr	r3, [fp, #-16]
   3653c:	ldr	r3, [r3]
   36540:	cmp	r3, #0
   36544:	bne	364c8 <flatcc_verify_union_vector_field@@Base+0x1aa0>
   36548:	ldr	r2, [fp, #-20]	; 0xffffffec
   3654c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36550:	cmp	r2, r3
   36554:	bne	36574 <flatcc_verify_union_vector_field@@Base+0x1b4c>
   36558:	mov	r3, #23
   3655c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36560:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36564:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36568:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3656c:	mov	r3, r0
   36570:	b	365dc <flatcc_verify_union_vector_field@@Base+0x1bb4>
   36574:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36578:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3657c:	sub	r1, fp, #24
   36580:	str	r1, [sp, #8]
   36584:	strd	r2, [sp]
   36588:	mov	r3, r0
   3658c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36590:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36594:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36598:	bl	35760 <flatcc_verify_union_vector_field@@Base+0xd38>
   3659c:	mov	r2, r0
   365a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   365a4:	cmp	r2, r3
   365a8:	bne	365b4 <flatcc_verify_union_vector_field@@Base+0x1b8c>
   365ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   365b0:	b	365dc <flatcc_verify_union_vector_field@@Base+0x1bb4>
   365b4:	ldr	r3, [fp, #4]
   365b8:	ldr	r2, [r3]
   365bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   365c0:	add	r2, r2, r3
   365c4:	ldr	r3, [fp, #4]
   365c8:	str	r2, [r3]
   365cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   365d0:	cmp	r3, #0
   365d4:	bne	364c0 <flatcc_verify_union_vector_field@@Base+0x1a98>
   365d8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   365dc:	mov	r0, r3
   365e0:	sub	sp, fp, #8
   365e4:	pop	{r4, fp, pc}
   365e8:	push	{r4, fp, lr}
   365ec:	add	fp, sp, #8
   365f0:	sub	sp, sp, #68	; 0x44
   365f4:	str	r0, [fp, #-48]	; 0xffffffd0
   365f8:	str	r1, [fp, #-52]	; 0xffffffcc
   365fc:	str	r2, [fp, #-56]	; 0xffffffc8
   36600:	str	r3, [fp, #-60]	; 0xffffffc4
   36604:	mov	r3, #0
   36608:	strh	r3, [fp, #-22]	; 0xffffffea
   3660c:	ldr	r3, [fp, #4]
   36610:	mov	r2, #0
   36614:	strh	r2, [r3]
   36618:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3661c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36620:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36624:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   36628:	str	r0, [fp, #-52]	; 0xffffffcc
   3662c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36630:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36634:	cmp	r2, r3
   36638:	bne	36644 <flatcc_verify_union_vector_field@@Base+0x1c1c>
   3663c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36640:	b	36770 <flatcc_verify_union_vector_field@@Base+0x1d48>
   36644:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36648:	str	r3, [fp, #-16]
   3664c:	ldr	r3, [fp, #-16]
   36650:	ldr	r4, [r3]
   36654:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36658:	str	r3, [fp, #-20]	; 0xffffffec
   3665c:	sub	r2, fp, #40	; 0x28
   36660:	sub	r3, fp, #44	; 0x2c
   36664:	str	r3, [sp, #4]
   36668:	sub	r3, fp, #36	; 0x24
   3666c:	str	r3, [sp]
   36670:	mov	r3, r2
   36674:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36678:	ldr	r1, [fp, #-20]	; 0xffffffec
   3667c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36680:	blx	r4
   36684:	str	r0, [fp, #-52]	; 0xffffffcc
   36688:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3668c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36690:	cmp	r2, r3
   36694:	bne	366a0 <flatcc_verify_union_vector_field@@Base+0x1c78>
   36698:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3669c:	b	36770 <flatcc_verify_union_vector_field@@Base+0x1d48>
   366a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   366a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   366a8:	cmp	r2, r3
   366ac:	bne	366cc <flatcc_verify_union_vector_field@@Base+0x1ca4>
   366b0:	ldr	r3, [fp, #-16]
   366b4:	add	r3, r3, #4
   366b8:	str	r3, [fp, #-16]
   366bc:	ldr	r3, [fp, #-16]
   366c0:	ldr	r3, [r3]
   366c4:	cmp	r3, #0
   366c8:	bne	3664c <flatcc_verify_union_vector_field@@Base+0x1c24>
   366cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   366d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   366d4:	cmp	r2, r3
   366d8:	bne	366f8 <flatcc_verify_union_vector_field@@Base+0x1cd0>
   366dc:	mov	r3, #23
   366e0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   366e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   366e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   366ec:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   366f0:	mov	r3, r0
   366f4:	b	36770 <flatcc_verify_union_vector_field@@Base+0x1d48>
   366f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   366fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36700:	sub	r1, fp, #22
   36704:	str	r1, [sp, #8]
   36708:	strd	r2, [sp]
   3670c:	mov	r3, r0
   36710:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36714:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36718:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3671c:	bl	3581c <flatcc_verify_union_vector_field@@Base+0xdf4>
   36720:	mov	r2, r0
   36724:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36728:	cmp	r2, r3
   3672c:	bne	36738 <flatcc_verify_union_vector_field@@Base+0x1d10>
   36730:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36734:	b	36770 <flatcc_verify_union_vector_field@@Base+0x1d48>
   36738:	ldr	r3, [fp, #4]
   3673c:	ldrsh	r3, [r3]
   36740:	uxth	r2, r3
   36744:	ldrsh	r3, [fp, #-22]	; 0xffffffea
   36748:	uxth	r3, r3
   3674c:	add	r3, r2, r3
   36750:	uxth	r3, r3
   36754:	sxth	r2, r3
   36758:	ldr	r3, [fp, #4]
   3675c:	strh	r2, [r3]
   36760:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36764:	cmp	r3, #0
   36768:	bne	36644 <flatcc_verify_union_vector_field@@Base+0x1c1c>
   3676c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36770:	mov	r0, r3
   36774:	sub	sp, fp, #8
   36778:	pop	{r4, fp, pc}
   3677c:	push	{r4, fp, lr}
   36780:	add	fp, sp, #8
   36784:	sub	sp, sp, #68	; 0x44
   36788:	str	r0, [fp, #-48]	; 0xffffffd0
   3678c:	str	r1, [fp, #-52]	; 0xffffffcc
   36790:	str	r2, [fp, #-56]	; 0xffffffc8
   36794:	str	r3, [fp, #-60]	; 0xffffffc4
   36798:	mov	r3, #0
   3679c:	strb	r3, [fp, #-21]	; 0xffffffeb
   367a0:	ldr	r3, [fp, #4]
   367a4:	mov	r2, #0
   367a8:	strb	r2, [r3]
   367ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   367b0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   367b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   367b8:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   367bc:	str	r0, [fp, #-52]	; 0xffffffcc
   367c0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   367c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   367c8:	cmp	r2, r3
   367cc:	bne	367d8 <flatcc_verify_union_vector_field@@Base+0x1db0>
   367d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   367d4:	b	36904 <flatcc_verify_union_vector_field@@Base+0x1edc>
   367d8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   367dc:	str	r3, [fp, #-16]
   367e0:	ldr	r3, [fp, #-16]
   367e4:	ldr	r4, [r3]
   367e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   367ec:	str	r3, [fp, #-20]	; 0xffffffec
   367f0:	sub	r2, fp, #40	; 0x28
   367f4:	sub	r3, fp, #44	; 0x2c
   367f8:	str	r3, [sp, #4]
   367fc:	sub	r3, fp, #36	; 0x24
   36800:	str	r3, [sp]
   36804:	mov	r3, r2
   36808:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3680c:	ldr	r1, [fp, #-20]	; 0xffffffec
   36810:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36814:	blx	r4
   36818:	str	r0, [fp, #-52]	; 0xffffffcc
   3681c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36820:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36824:	cmp	r2, r3
   36828:	bne	36834 <flatcc_verify_union_vector_field@@Base+0x1e0c>
   3682c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36830:	b	36904 <flatcc_verify_union_vector_field@@Base+0x1edc>
   36834:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36838:	ldr	r3, [fp, #-20]	; 0xffffffec
   3683c:	cmp	r2, r3
   36840:	bne	36860 <flatcc_verify_union_vector_field@@Base+0x1e38>
   36844:	ldr	r3, [fp, #-16]
   36848:	add	r3, r3, #4
   3684c:	str	r3, [fp, #-16]
   36850:	ldr	r3, [fp, #-16]
   36854:	ldr	r3, [r3]
   36858:	cmp	r3, #0
   3685c:	bne	367e0 <flatcc_verify_union_vector_field@@Base+0x1db8>
   36860:	ldr	r2, [fp, #-20]	; 0xffffffec
   36864:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36868:	cmp	r2, r3
   3686c:	bne	3688c <flatcc_verify_union_vector_field@@Base+0x1e64>
   36870:	mov	r3, #23
   36874:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36878:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3687c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36880:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   36884:	mov	r3, r0
   36888:	b	36904 <flatcc_verify_union_vector_field@@Base+0x1edc>
   3688c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36890:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36894:	sub	r1, fp, #21
   36898:	str	r1, [sp, #8]
   3689c:	strd	r2, [sp]
   368a0:	mov	r3, r0
   368a4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   368a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   368ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   368b0:	bl	358e0 <flatcc_verify_union_vector_field@@Base+0xeb8>
   368b4:	mov	r2, r0
   368b8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   368bc:	cmp	r2, r3
   368c0:	bne	368cc <flatcc_verify_union_vector_field@@Base+0x1ea4>
   368c4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   368c8:	b	36904 <flatcc_verify_union_vector_field@@Base+0x1edc>
   368cc:	ldr	r3, [fp, #4]
   368d0:	ldrsb	r3, [r3]
   368d4:	uxtb	r2, r3
   368d8:	ldrsb	r3, [fp, #-21]	; 0xffffffeb
   368dc:	uxtb	r3, r3
   368e0:	add	r3, r2, r3
   368e4:	uxtb	r3, r3
   368e8:	sxtb	r2, r3
   368ec:	ldr	r3, [fp, #4]
   368f0:	strb	r2, [r3]
   368f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   368f8:	cmp	r3, #0
   368fc:	bne	367d8 <flatcc_verify_union_vector_field@@Base+0x1db0>
   36900:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36904:	mov	r0, r3
   36908:	sub	sp, fp, #8
   3690c:	pop	{r4, fp, pc}
   36910:	push	{r4, fp, lr}
   36914:	add	fp, sp, #8
   36918:	sub	sp, sp, #68	; 0x44
   3691c:	str	r0, [fp, #-48]	; 0xffffffd0
   36920:	str	r1, [fp, #-52]	; 0xffffffcc
   36924:	str	r2, [fp, #-56]	; 0xffffffc8
   36928:	str	r3, [fp, #-60]	; 0xffffffc4
   3692c:	mov	r3, #0
   36930:	strb	r3, [fp, #-21]	; 0xffffffeb
   36934:	ldr	r3, [fp, #4]
   36938:	mov	r2, #0
   3693c:	strb	r2, [r3]
   36940:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36944:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36948:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3694c:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   36950:	str	r0, [fp, #-52]	; 0xffffffcc
   36954:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36958:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3695c:	cmp	r2, r3
   36960:	bne	3696c <flatcc_verify_union_vector_field@@Base+0x1f44>
   36964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36968:	b	36a8c <flatcc_verify_union_vector_field@@Base+0x2064>
   3696c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36970:	str	r3, [fp, #-16]
   36974:	ldr	r3, [fp, #-16]
   36978:	ldr	r4, [r3]
   3697c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36980:	str	r3, [fp, #-20]	; 0xffffffec
   36984:	sub	r2, fp, #40	; 0x28
   36988:	sub	r3, fp, #44	; 0x2c
   3698c:	str	r3, [sp, #4]
   36990:	sub	r3, fp, #36	; 0x24
   36994:	str	r3, [sp]
   36998:	mov	r3, r2
   3699c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   369a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   369a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   369a8:	blx	r4
   369ac:	str	r0, [fp, #-52]	; 0xffffffcc
   369b0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   369b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   369b8:	cmp	r2, r3
   369bc:	bne	369c8 <flatcc_verify_union_vector_field@@Base+0x1fa0>
   369c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   369c4:	b	36a8c <flatcc_verify_union_vector_field@@Base+0x2064>
   369c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   369cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   369d0:	cmp	r2, r3
   369d4:	bne	369f4 <flatcc_verify_union_vector_field@@Base+0x1fcc>
   369d8:	ldr	r3, [fp, #-16]
   369dc:	add	r3, r3, #4
   369e0:	str	r3, [fp, #-16]
   369e4:	ldr	r3, [fp, #-16]
   369e8:	ldr	r3, [r3]
   369ec:	cmp	r3, #0
   369f0:	bne	36974 <flatcc_verify_union_vector_field@@Base+0x1f4c>
   369f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   369f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   369fc:	cmp	r2, r3
   36a00:	bne	36a20 <flatcc_verify_union_vector_field@@Base+0x1ff8>
   36a04:	mov	r3, #23
   36a08:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36a0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36a10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36a14:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   36a18:	mov	r3, r0
   36a1c:	b	36a8c <flatcc_verify_union_vector_field@@Base+0x2064>
   36a20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36a24:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36a28:	sub	r1, fp, #21
   36a2c:	str	r1, [sp, #8]
   36a30:	strd	r2, [sp]
   36a34:	mov	r3, r0
   36a38:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36a3c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36a40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36a44:	bl	35478 <flatcc_verify_union_vector_field@@Base+0xa50>
   36a48:	mov	r2, r0
   36a4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36a50:	cmp	r2, r3
   36a54:	bne	36a60 <flatcc_verify_union_vector_field@@Base+0x2038>
   36a58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36a5c:	b	36a8c <flatcc_verify_union_vector_field@@Base+0x2064>
   36a60:	ldr	r3, [fp, #4]
   36a64:	ldrb	r2, [r3]
   36a68:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   36a6c:	add	r3, r2, r3
   36a70:	uxtb	r2, r3
   36a74:	ldr	r3, [fp, #4]
   36a78:	strb	r2, [r3]
   36a7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36a80:	cmp	r3, #0
   36a84:	bne	3696c <flatcc_verify_union_vector_field@@Base+0x1f44>
   36a88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36a8c:	mov	r0, r3
   36a90:	sub	sp, fp, #8
   36a94:	pop	{r4, fp, pc}
   36a98:	push	{r4, fp, lr}
   36a9c:	add	fp, sp, #8
   36aa0:	sub	sp, sp, #68	; 0x44
   36aa4:	str	r0, [fp, #-48]	; 0xffffffd0
   36aa8:	str	r1, [fp, #-52]	; 0xffffffcc
   36aac:	str	r2, [fp, #-56]	; 0xffffffc8
   36ab0:	str	r3, [fp, #-60]	; 0xffffffc4
   36ab4:	mov	r3, #0
   36ab8:	str	r3, [fp, #-24]	; 0xffffffe8
   36abc:	ldr	r3, [fp, #4]
   36ac0:	mov	r2, #0
   36ac4:	str	r2, [r3]
   36ac8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36acc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36ad0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36ad4:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   36ad8:	str	r0, [fp, #-52]	; 0xffffffcc
   36adc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36ae0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36ae4:	cmp	r2, r3
   36ae8:	bne	36af4 <flatcc_verify_union_vector_field@@Base+0x20cc>
   36aec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36af0:	b	36c10 <flatcc_verify_union_vector_field@@Base+0x21e8>
   36af4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36af8:	str	r3, [fp, #-16]
   36afc:	ldr	r3, [fp, #-16]
   36b00:	ldr	r4, [r3]
   36b04:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36b08:	str	r3, [fp, #-20]	; 0xffffffec
   36b0c:	sub	r2, fp, #40	; 0x28
   36b10:	sub	r3, fp, #44	; 0x2c
   36b14:	str	r3, [sp, #4]
   36b18:	sub	r3, fp, #36	; 0x24
   36b1c:	str	r3, [sp]
   36b20:	mov	r3, r2
   36b24:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36b28:	ldr	r1, [fp, #-20]	; 0xffffffec
   36b2c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36b30:	blx	r4
   36b34:	str	r0, [fp, #-52]	; 0xffffffcc
   36b38:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36b3c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36b40:	cmp	r2, r3
   36b44:	bne	36b50 <flatcc_verify_union_vector_field@@Base+0x2128>
   36b48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36b4c:	b	36c10 <flatcc_verify_union_vector_field@@Base+0x21e8>
   36b50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36b54:	ldr	r3, [fp, #-20]	; 0xffffffec
   36b58:	cmp	r2, r3
   36b5c:	bne	36b7c <flatcc_verify_union_vector_field@@Base+0x2154>
   36b60:	ldr	r3, [fp, #-16]
   36b64:	add	r3, r3, #4
   36b68:	str	r3, [fp, #-16]
   36b6c:	ldr	r3, [fp, #-16]
   36b70:	ldr	r3, [r3]
   36b74:	cmp	r3, #0
   36b78:	bne	36afc <flatcc_verify_union_vector_field@@Base+0x20d4>
   36b7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   36b80:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36b84:	cmp	r2, r3
   36b88:	bne	36ba8 <flatcc_verify_union_vector_field@@Base+0x2180>
   36b8c:	mov	r3, #23
   36b90:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36b94:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36b98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36b9c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   36ba0:	mov	r3, r0
   36ba4:	b	36c10 <flatcc_verify_union_vector_field@@Base+0x21e8>
   36ba8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36bac:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36bb0:	sub	r1, fp, #24
   36bb4:	str	r1, [sp, #8]
   36bb8:	strd	r2, [sp]
   36bbc:	mov	r3, r0
   36bc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36bc4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36bc8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36bcc:	bl	35998 <flatcc_verify_union_vector_field@@Base+0xf70>
   36bd0:	mov	r2, r0
   36bd4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36bd8:	cmp	r2, r3
   36bdc:	bne	36be8 <flatcc_verify_union_vector_field@@Base+0x21c0>
   36be0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36be4:	b	36c10 <flatcc_verify_union_vector_field@@Base+0x21e8>
   36be8:	ldr	r3, [fp, #4]
   36bec:	vldr	s14, [r3]
   36bf0:	vldr	s15, [fp, #-24]	; 0xffffffe8
   36bf4:	vadd.f32	s15, s14, s15
   36bf8:	ldr	r3, [fp, #4]
   36bfc:	vstr	s15, [r3]
   36c00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36c04:	cmp	r3, #0
   36c08:	bne	36af4 <flatcc_verify_union_vector_field@@Base+0x20cc>
   36c0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36c10:	mov	r0, r3
   36c14:	sub	sp, fp, #8
   36c18:	pop	{r4, fp, pc}
   36c1c:	push	{r4, fp, lr}
   36c20:	add	fp, sp, #8
   36c24:	sub	sp, sp, #68	; 0x44
   36c28:	str	r0, [fp, #-48]	; 0xffffffd0
   36c2c:	str	r1, [fp, #-52]	; 0xffffffcc
   36c30:	str	r2, [fp, #-56]	; 0xffffffc8
   36c34:	str	r3, [fp, #-60]	; 0xffffffc4
   36c38:	mov	r2, #0
   36c3c:	mov	r3, #0
   36c40:	strd	r2, [fp, #-28]	; 0xffffffe4
   36c44:	ldr	r1, [fp, #4]
   36c48:	mov	r2, #0
   36c4c:	mov	r3, #0
   36c50:	strd	r2, [r1]
   36c54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36c58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36c5c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36c60:	bl	35010 <flatcc_verify_union_vector_field@@Base+0x5e8>
   36c64:	str	r0, [fp, #-52]	; 0xffffffcc
   36c68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36c6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36c70:	cmp	r2, r3
   36c74:	bne	36c80 <flatcc_verify_union_vector_field@@Base+0x2258>
   36c78:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36c7c:	b	36d9c <flatcc_verify_union_vector_field@@Base+0x2374>
   36c80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36c84:	str	r3, [fp, #-16]
   36c88:	ldr	r3, [fp, #-16]
   36c8c:	ldr	r4, [r3]
   36c90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36c94:	str	r3, [fp, #-20]	; 0xffffffec
   36c98:	sub	r2, fp, #40	; 0x28
   36c9c:	sub	r3, fp, #44	; 0x2c
   36ca0:	str	r3, [sp, #4]
   36ca4:	sub	r3, fp, #36	; 0x24
   36ca8:	str	r3, [sp]
   36cac:	mov	r3, r2
   36cb0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36cb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   36cb8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36cbc:	blx	r4
   36cc0:	str	r0, [fp, #-52]	; 0xffffffcc
   36cc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36cc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36ccc:	cmp	r2, r3
   36cd0:	bne	36cdc <flatcc_verify_union_vector_field@@Base+0x22b4>
   36cd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36cd8:	b	36d9c <flatcc_verify_union_vector_field@@Base+0x2374>
   36cdc:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36ce0:	ldr	r3, [fp, #-20]	; 0xffffffec
   36ce4:	cmp	r2, r3
   36ce8:	bne	36d08 <flatcc_verify_union_vector_field@@Base+0x22e0>
   36cec:	ldr	r3, [fp, #-16]
   36cf0:	add	r3, r3, #4
   36cf4:	str	r3, [fp, #-16]
   36cf8:	ldr	r3, [fp, #-16]
   36cfc:	ldr	r3, [r3]
   36d00:	cmp	r3, #0
   36d04:	bne	36c88 <flatcc_verify_union_vector_field@@Base+0x2260>
   36d08:	ldr	r2, [fp, #-20]	; 0xffffffec
   36d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36d10:	cmp	r2, r3
   36d14:	bne	36d34 <flatcc_verify_union_vector_field@@Base+0x230c>
   36d18:	mov	r3, #23
   36d1c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36d20:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36d24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36d28:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   36d2c:	mov	r3, r0
   36d30:	b	36d9c <flatcc_verify_union_vector_field@@Base+0x2374>
   36d34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36d38:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   36d3c:	sub	r1, fp, #28
   36d40:	str	r1, [sp, #8]
   36d44:	strd	r2, [sp]
   36d48:	mov	r3, r0
   36d4c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36d50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   36d54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   36d58:	bl	359f8 <flatcc_verify_union_vector_field@@Base+0xfd0>
   36d5c:	mov	r2, r0
   36d60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36d64:	cmp	r2, r3
   36d68:	bne	36d74 <flatcc_verify_union_vector_field@@Base+0x234c>
   36d6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36d70:	b	36d9c <flatcc_verify_union_vector_field@@Base+0x2374>
   36d74:	ldr	r3, [fp, #4]
   36d78:	vldr	d6, [r3]
   36d7c:	vldr	d7, [fp, #-28]	; 0xffffffe4
   36d80:	vadd.f64	d7, d6, d7
   36d84:	ldr	r3, [fp, #4]
   36d88:	vstr	d7, [r3]
   36d8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36d90:	cmp	r3, #0
   36d94:	bne	36c80 <flatcc_verify_union_vector_field@@Base+0x2258>
   36d98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36d9c:	mov	r0, r3
   36da0:	sub	sp, fp, #8
   36da4:	pop	{r4, fp, pc}
   36da8:	push	{fp}		; (str fp, [sp, #-4]!)
   36dac:	add	fp, sp, #0
   36db0:	sub	sp, sp, #20
   36db4:	vstr	d0, [fp, #-20]	; 0xffffffec
   36db8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   36dbc:	strd	r2, [fp, #-12]
   36dc0:	ldrd	r2, [fp, #-12]
   36dc4:	mov	r0, r2
   36dc8:	mov	r1, r3
   36dcc:	add	sp, fp, #0
   36dd0:	pop	{fp}		; (ldr fp, [sp], #4)
   36dd4:	bx	lr
   36dd8:	push	{fp}		; (str fp, [sp, #-4]!)
   36ddc:	add	fp, sp, #0
   36de0:	sub	sp, sp, #20
   36de4:	strd	r0, [fp, #-20]	; 0xffffffec
   36de8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   36dec:	strd	r2, [fp, #-12]
   36df0:	ldrd	r2, [fp, #-12]
   36df4:	vmov	d7, r2, r3
   36df8:	vmov.f64	d0, d7
   36dfc:	add	sp, fp, #0
   36e00:	pop	{fp}		; (ldr fp, [sp], #4)
   36e04:	bx	lr
   36e08:	push	{fp}		; (str fp, [sp, #-4]!)
   36e0c:	add	fp, sp, #0
   36e10:	sub	sp, sp, #20
   36e14:	vstr	d0, [fp, #-20]	; 0xffffffec
   36e18:	vldr	d7, [fp, #-20]	; 0xffffffec
   36e1c:	vcvt.s32.f64	s15, d7
   36e20:	vmov	r3, s15
   36e24:	str	r3, [fp, #-8]
   36e28:	vldr	d7, [fp, #-20]	; 0xffffffec
   36e2c:	vcmpe.f64	d7, #0.0
   36e30:	vmrs	APSR_nzcv, fpscr
   36e34:	bpl	36e40 <flatcc_verify_union_vector_field@@Base+0x2418>
   36e38:	ldr	r3, [fp, #-8]
   36e3c:	b	36e70 <flatcc_verify_union_vector_field@@Base+0x2448>
   36e40:	ldr	r3, [fp, #-8]
   36e44:	vmov	s15, r3
   36e48:	vcvt.f64.s32	d7, s15
   36e4c:	vldr	d6, [fp, #-20]	; 0xffffffec
   36e50:	vsub.f64	d7, d6, d7
   36e54:	vcmp.f64	d7, #0.0
   36e58:	vmrs	APSR_nzcv, fpscr
   36e5c:	beq	36e6c <flatcc_verify_union_vector_field@@Base+0x2444>
   36e60:	ldr	r3, [fp, #-8]
   36e64:	add	r3, r3, #1
   36e68:	b	36e70 <flatcc_verify_union_vector_field@@Base+0x2448>
   36e6c:	ldr	r3, [fp, #-8]
   36e70:	mov	r0, r3
   36e74:	add	sp, fp, #0
   36e78:	pop	{fp}		; (ldr fp, [sp], #4)
   36e7c:	bx	lr
   36e80:	push	{fp, lr}
   36e84:	add	fp, sp, #4
   36e88:	sub	sp, sp, #16
   36e8c:	str	r0, [fp, #-16]
   36e90:	str	r1, [fp, #-20]	; 0xffffffec
   36e94:	ldr	r3, [fp, #-16]
   36e98:	add	r3, r3, #63	; 0x3f
   36e9c:	vmov	s15, r3
   36ea0:	vcvt.f64.s32	d7, s15
   36ea4:	vldr	d6, [pc, #164]	; 36f50 <flatcc_verify_union_vector_field@@Base+0x2528>
   36ea8:	vmul.f64	d7, d7, d6
   36eac:	vmov.f64	d0, d7
   36eb0:	bl	36e08 <flatcc_verify_union_vector_field@@Base+0x23e0>
   36eb4:	str	r0, [fp, #-8]
   36eb8:	ldr	r3, [fp, #-8]
   36ebc:	add	r3, r3, #344	; 0x158
   36ec0:	add	r3, r3, #3
   36ec4:	add	r2, r3, #7
   36ec8:	cmp	r3, #0
   36ecc:	movlt	r3, r2
   36ed0:	movge	r3, r3
   36ed4:	asr	r3, r3, #3
   36ed8:	add	r3, r3, #1
   36edc:	str	r3, [fp, #-12]
   36ee0:	ldr	r2, [pc, #112]	; 36f58 <flatcc_verify_union_vector_field@@Base+0x2530>
   36ee4:	add	r2, pc, r2
   36ee8:	ldr	r3, [fp, #-12]
   36eec:	lsl	r3, r3, #4
   36ef0:	add	r3, r2, r3
   36ef4:	ldrd	r2, [r3]
   36ef8:	ldr	r1, [fp, #-20]	; 0xffffffec
   36efc:	strd	r2, [r1]
   36f00:	ldr	r2, [pc, #84]	; 36f5c <flatcc_verify_union_vector_field@@Base+0x2534>
   36f04:	add	r2, pc, r2
   36f08:	ldr	r3, [fp, #-12]
   36f0c:	lsl	r3, r3, #4
   36f10:	add	r3, r2, r3
   36f14:	add	r3, r3, #8
   36f18:	ldrsh	r3, [r3]
   36f1c:	mov	r2, r3
   36f20:	ldr	r3, [fp, #-20]	; 0xffffffec
   36f24:	str	r2, [r3, #8]
   36f28:	ldr	r2, [pc, #48]	; 36f60 <flatcc_verify_union_vector_field@@Base+0x2538>
   36f2c:	add	r2, pc, r2
   36f30:	ldr	r3, [fp, #-12]
   36f34:	lsl	r3, r3, #4
   36f38:	add	r3, r2, r3
   36f3c:	add	r3, r3, #10
   36f40:	ldrsh	r3, [r3]
   36f44:	mov	r0, r3
   36f48:	sub	sp, fp, #4
   36f4c:	pop	{fp, pc}
   36f50:			; <UNDEFINED> instruction: 0x509f79fe
   36f54:	svccc	0x00d34413
   36f58:	andeq	r8, r1, ip, ror #24
   36f5c:	andeq	r8, r1, ip, asr #24
   36f60:	andeq	r8, r1, r4, lsr #24
   36f64:	sub	sp, sp, #8
   36f68:	push	{fp, lr}
   36f6c:	add	fp, sp, #4
   36f70:	sub	sp, sp, #24
   36f74:	str	r0, [fp, #-24]	; 0xffffffe8
   36f78:	add	r1, fp, #4
   36f7c:	stm	r1, {r2, r3}
   36f80:	ldrd	r0, [fp, #4]
   36f84:	ldrd	r2, [fp, #20]
   36f88:	subs	r2, r0, r2
   36f8c:	sbc	r3, r1, r3
   36f90:	strd	r2, [fp, #-20]	; 0xffffffec
   36f94:	ldr	r3, [fp, #12]
   36f98:	str	r3, [fp, #-12]
   36f9c:	ldr	r2, [fp, #12]
   36fa0:	ldr	r3, [fp, #28]
   36fa4:	cmp	r2, r3
   36fa8:	bne	36fc0 <flatcc_verify_union_vector_field@@Base+0x2598>
   36fac:	ldrd	r0, [fp, #4]
   36fb0:	ldrd	r2, [fp, #20]
   36fb4:	cmp	r1, r3
   36fb8:	cmpeq	r0, r2
   36fbc:	bcs	36fe0 <flatcc_verify_union_vector_field@@Base+0x25b8>
   36fc0:	ldr	r3, [pc, #64]	; 37008 <flatcc_verify_union_vector_field@@Base+0x25e0>
   36fc4:	add	r3, pc, r3
   36fc8:	mov	r2, #239	; 0xef
   36fcc:	ldr	r1, [pc, #56]	; 3700c <flatcc_verify_union_vector_field@@Base+0x25e4>
   36fd0:	add	r1, pc, r1
   36fd4:	ldr	r0, [pc, #52]	; 37010 <flatcc_verify_union_vector_field@@Base+0x25e8>
   36fd8:	add	r0, pc, r0
   36fdc:	bl	14610 <__assert_fail@plt>
   36fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36fe4:	mov	ip, r3
   36fe8:	sub	r3, fp, #20
   36fec:	ldm	r3, {r0, r1, r2, r3}
   36ff0:	stm	ip, {r0, r1, r2, r3}
   36ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36ff8:	sub	sp, fp, #4
   36ffc:	pop	{fp, lr}
   37000:	add	sp, sp, #8
   37004:	bx	lr
   37008:	strdeq	r9, [r1], -r4
   3700c:	strdeq	r9, [r1], -r0
   37010:	andeq	r9, r1, r8, asr r1
   37014:	sub	sp, sp, #8
   37018:	push	{r4, r5, r6, r7, r8, r9, fp}
   3701c:	add	fp, sp, #24
   37020:	sub	sp, sp, #124	; 0x7c
   37024:	str	r0, [fp, #-120]	; 0xffffff88
   37028:	add	r1, fp, #4
   3702c:	stm	r1, {r2, r3}
   37030:	ldrd	r2, [fp, #4]
   37034:	mov	r4, r3
   37038:	mov	r5, #0
   3703c:	strd	r4, [fp, #-36]	; 0xffffffdc
   37040:	ldrd	r2, [fp, #4]
   37044:	mvn	r0, #0
   37048:	mov	r1, #0
   3704c:	and	r2, r2, r0
   37050:	and	r3, r3, r1
   37054:	strd	r2, [fp, #-44]	; 0xffffffd4
   37058:	ldrd	r2, [fp, #20]
   3705c:	mov	r3, r3
   37060:	str	r3, [fp, #-148]	; 0xffffff6c
   37064:	mov	r3, #0
   37068:	str	r3, [fp, #-144]	; 0xffffff70
   3706c:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   37070:	strd	r2, [fp, #-52]	; 0xffffffcc
   37074:	ldrd	r2, [fp, #20]
   37078:	mvn	r0, #0
   3707c:	mov	r1, #0
   37080:	and	r2, r2, r0
   37084:	and	r3, r3, r1
   37088:	strd	r2, [fp, #-60]	; 0xffffffc4
   3708c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37090:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37094:	mul	r2, r2, r3
   37098:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3709c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   370a0:	mul	r3, r1, r3
   370a4:	add	r1, r2, r3
   370a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   370ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   370b0:	umull	r2, r3, r2, r3
   370b4:	add	r1, r1, r3
   370b8:	mov	r3, r1
   370bc:	strd	r2, [fp, #-68]	; 0xffffffbc
   370c0:	strd	r2, [fp, #-68]	; 0xffffffbc
   370c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   370c8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   370cc:	mul	r2, r2, r3
   370d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   370d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   370d8:	mul	r3, r1, r3
   370dc:	add	r1, r2, r3
   370e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   370e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   370e8:	umull	r2, r3, r2, r3
   370ec:	add	r1, r1, r3
   370f0:	mov	r3, r1
   370f4:	strd	r2, [fp, #-76]	; 0xffffffb4
   370f8:	strd	r2, [fp, #-76]	; 0xffffffb4
   370fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37100:	ldr	r2, [fp, #-60]	; 0xffffffc4
   37104:	mul	r2, r2, r3
   37108:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3710c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37110:	mul	r3, r1, r3
   37114:	add	r1, r2, r3
   37118:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3711c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37120:	umull	r2, r3, r2, r3
   37124:	add	r1, r1, r3
   37128:	mov	r3, r1
   3712c:	strd	r2, [fp, #-84]	; 0xffffffac
   37130:	strd	r2, [fp, #-84]	; 0xffffffac
   37134:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37138:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3713c:	mul	r2, r2, r3
   37140:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37144:	ldr	r1, [fp, #-44]	; 0xffffffd4
   37148:	mul	r3, r1, r3
   3714c:	add	r1, r2, r3
   37150:	ldr	r2, [fp, #-44]	; 0xffffffd4
   37154:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37158:	umull	r2, r3, r2, r3
   3715c:	add	r1, r1, r3
   37160:	mov	r3, r1
   37164:	strd	r2, [fp, #-92]	; 0xffffffa4
   37168:	strd	r2, [fp, #-92]	; 0xffffffa4
   3716c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   37170:	mov	r3, r3
   37174:	str	r3, [fp, #-132]	; 0xffffff7c
   37178:	mov	r3, #0
   3717c:	str	r3, [fp, #-128]	; 0xffffff80
   37180:	ldrd	r2, [fp, #-84]	; 0xffffffac
   37184:	mvn	r0, #0
   37188:	mov	r1, #0
   3718c:	and	r2, r2, r0
   37190:	and	r3, r3, r1
   37194:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   37198:	adds	r0, r0, r2
   3719c:	adc	r1, r1, r3
   371a0:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   371a4:	mvn	r4, #0
   371a8:	mov	r5, #0
   371ac:	and	r2, r2, r4
   371b0:	and	r3, r3, r5
   371b4:	adds	r2, r2, r0
   371b8:	adc	r3, r3, r1
   371bc:	strd	r2, [fp, #-100]	; 0xffffff9c
   371c0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   371c4:	adds	r2, r2, #-2147483648	; 0x80000000
   371c8:	adc	r3, r3, #0
   371cc:	strd	r2, [fp, #-100]	; 0xffffff9c
   371d0:	ldrd	r2, [fp, #-84]	; 0xffffffac
   371d4:	mov	r3, r3
   371d8:	str	r3, [fp, #-140]	; 0xffffff74
   371dc:	mov	r3, #0
   371e0:	str	r3, [fp, #-136]	; 0xffffff78
   371e4:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   371e8:	ldrd	r0, [fp, #-140]	; 0xffffff74
   371ec:	adds	r0, r0, r2
   371f0:	adc	r1, r1, r3
   371f4:	mov	r2, r0
   371f8:	mov	r3, r1
   371fc:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   37200:	mov	r8, r1
   37204:	mov	r9, #0
   37208:	adds	r2, r2, r8
   3720c:	adc	r3, r3, r9
   37210:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   37214:	mov	r6, r1
   37218:	mov	r7, #0
   3721c:	adds	r2, r2, r6
   37220:	adc	r3, r3, r7
   37224:	strd	r2, [fp, #-116]	; 0xffffff8c
   37228:	ldr	r2, [fp, #12]
   3722c:	ldr	r3, [fp, #28]
   37230:	add	r3, r2, r3
   37234:	add	r3, r3, #64	; 0x40
   37238:	str	r3, [fp, #-108]	; 0xffffff94
   3723c:	ldr	r3, [fp, #-120]	; 0xffffff88
   37240:	mov	ip, r3
   37244:	sub	r3, fp, #116	; 0x74
   37248:	ldm	r3, {r0, r1, r2, r3}
   3724c:	stm	ip, {r0, r1, r2, r3}
   37250:	ldr	r0, [fp, #-120]	; 0xffffff88
   37254:	sub	sp, fp, #24
   37258:	pop	{r4, r5, r6, r7, r8, r9, fp}
   3725c:	add	sp, sp, #8
   37260:	bx	lr
   37264:	sub	sp, sp, #8
   37268:	push	{r4, r5, fp, lr}
   3726c:	add	fp, sp, #12
   37270:	sub	sp, sp, #8
   37274:	str	r0, [fp, #-16]
   37278:	add	r1, fp, #4
   3727c:	stm	r1, {r2, r3}
   37280:	ldrd	r2, [fp, #4]
   37284:	orrs	r3, r2, r3
   37288:	bne	372cc <flatcc_verify_union_vector_field@@Base+0x28a4>
   3728c:	ldr	r3, [pc, #172]	; 37340 <flatcc_verify_union_vector_field@@Base+0x2918>
   37290:	add	r3, pc, r3
   37294:	mov	r2, #260	; 0x104
   37298:	ldr	r1, [pc, #164]	; 37344 <flatcc_verify_union_vector_field@@Base+0x291c>
   3729c:	add	r1, pc, r1
   372a0:	ldr	r0, [pc, #160]	; 37348 <flatcc_verify_union_vector_field@@Base+0x2920>
   372a4:	add	r0, pc, r0
   372a8:	bl	14610 <__assert_fail@plt>
   372ac:	ldrd	r2, [fp, #4]
   372b0:	lsl	r5, r3, #10
   372b4:	orr	r5, r5, r2, lsr #22
   372b8:	lsl	r4, r2, #10
   372bc:	strd	r4, [fp, #4]
   372c0:	ldr	r3, [fp, #12]
   372c4:	sub	r3, r3, #10
   372c8:	str	r3, [fp, #12]
   372cc:	ldrd	r2, [fp, #4]
   372d0:	mov	r0, #0
   372d4:	ldr	r1, [pc, #112]	; 3734c <flatcc_verify_union_vector_field@@Base+0x2924>
   372d8:	and	r2, r2, r0
   372dc:	and	r3, r3, r1
   372e0:	orrs	r3, r2, r3
   372e4:	beq	372ac <flatcc_verify_union_vector_field@@Base+0x2884>
   372e8:	b	37308 <flatcc_verify_union_vector_field@@Base+0x28e0>
   372ec:	ldrd	r2, [fp, #4]
   372f0:	adds	r2, r2, r2
   372f4:	adc	r3, r3, r3
   372f8:	strd	r2, [fp, #4]
   372fc:	ldr	r3, [fp, #12]
   37300:	sub	r3, r3, #1
   37304:	str	r3, [fp, #12]
   37308:	ldrd	r2, [fp, #4]
   3730c:	cmp	r2, #0
   37310:	sbcs	r3, r3, #0
   37314:	bge	372ec <flatcc_verify_union_vector_field@@Base+0x28c4>
   37318:	ldr	r3, [fp, #-16]
   3731c:	mov	ip, r3
   37320:	add	r3, fp, #4
   37324:	ldm	r3, {r0, r1, r2, r3}
   37328:	stm	ip, {r0, r1, r2, r3}
   3732c:	ldr	r0, [fp, #-16]
   37330:	sub	sp, fp, #12
   37334:	pop	{r4, r5, fp, lr}
   37338:	add	sp, sp, #8
   3733c:	bx	lr
   37340:	andeq	r9, r1, ip, lsr r4
   37344:	andeq	r8, r1, r4, lsr #28
   37348:	andeq	r8, r1, r8, lsr #29
   3734c:			; <UNDEFINED> instruction: 0xffc00000
   37350:	push	{r4, r5, fp, lr}
   37354:	add	fp, sp, #12
   37358:	sub	sp, sp, #40	; 0x28
   3735c:	str	r0, [fp, #-40]	; 0xffffffd8
   37360:	vstr	d0, [fp, #-52]	; 0xffffffcc
   37364:	vldr	d0, [fp, #-52]	; 0xffffffcc
   37368:	bl	36da8 <flatcc_verify_union_vector_field@@Base+0x2380>
   3736c:	strd	r0, [fp, #-20]	; 0xffffffec
   37370:	ldrd	r2, [fp, #-20]	; 0xffffffec
   37374:	mov	r0, #0
   37378:	ldr	r1, [pc, #148]	; 37414 <flatcc_verify_union_vector_field@@Base+0x29ec>
   3737c:	and	r2, r2, r0
   37380:	and	r3, r3, r1
   37384:	orrs	r3, r2, r3
   37388:	bne	373b0 <flatcc_verify_union_vector_field@@Base+0x2988>
   3738c:	ldrd	r2, [fp, #-20]	; 0xffffffec
   37390:	mvn	r0, #0
   37394:	ldr	r1, [pc, #124]	; 37418 <flatcc_verify_union_vector_field@@Base+0x29f0>
   37398:	and	r2, r2, r0
   3739c:	and	r3, r3, r1
   373a0:	strd	r2, [fp, #-36]	; 0xffffffdc
   373a4:	ldr	r3, [pc, #112]	; 3741c <flatcc_verify_union_vector_field@@Base+0x29f4>
   373a8:	str	r3, [fp, #-28]	; 0xffffffe4
   373ac:	b	373f4 <flatcc_verify_union_vector_field@@Base+0x29cc>
   373b0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   373b4:	mvn	r0, #0
   373b8:	ldr	r1, [pc, #88]	; 37418 <flatcc_verify_union_vector_field@@Base+0x29f0>
   373bc:	and	r2, r2, r0
   373c0:	and	r3, r3, r1
   373c4:	adds	r2, r2, #0
   373c8:	adc	r3, r3, #1048576	; 0x100000
   373cc:	strd	r2, [fp, #-36]	; 0xffffffdc
   373d0:	ldrd	r2, [fp, #-20]	; 0xffffffec
   373d4:	lsr	r4, r3, #20
   373d8:	mov	r5, #0
   373dc:	mov	r3, r4
   373e0:	lsl	r3, r3, #21
   373e4:	lsr	r3, r3, #21
   373e8:	sub	r3, r3, #1072	; 0x430
   373ec:	sub	r3, r3, #3
   373f0:	str	r3, [fp, #-28]	; 0xffffffe4
   373f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   373f8:	mov	ip, r3
   373fc:	sub	r3, fp, #36	; 0x24
   37400:	ldm	r3, {r0, r1, r2, r3}
   37404:	stm	ip, {r0, r1, r2, r3}
   37408:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3740c:	sub	sp, fp, #12
   37410:	pop	{r4, r5, fp, pc}
   37414:	svcvc	0x00f00000	; IMB
   37418:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   3741c:			; <UNDEFINED> instruction: 0xfffffbce
   37420:	push	{r4, r5, r6, r7, fp, lr}
   37424:	add	fp, sp, #20
   37428:	sub	sp, sp, #72	; 0x48
   3742c:	sub	ip, fp, #92	; 0x5c
   37430:	stm	ip, {r0, r1, r2, r3}
   37434:	mov	r2, #0
   37438:	mov	r3, #1048576	; 0x100000
   3743c:	strd	r2, [fp, #-36]	; 0xffffffdc
   37440:	mvn	r2, #0
   37444:	ldr	r3, [pc, #372]	; 375c0 <flatcc_verify_union_vector_field@@Base+0x2b98>
   37448:	strd	r2, [fp, #-44]	; 0xffffffd4
   3744c:	ldr	r3, [pc, #368]	; 375c4 <flatcc_verify_union_vector_field@@Base+0x2b9c>
   37450:	str	r3, [fp, #-48]	; 0xffffffd0
   37454:	ldr	r3, [pc, #364]	; 375c8 <flatcc_verify_union_vector_field@@Base+0x2ba0>
   37458:	str	r3, [fp, #-52]	; 0xffffffcc
   3745c:	mov	r3, #52	; 0x34
   37460:	str	r3, [fp, #-56]	; 0xffffffc8
   37464:	sub	ip, fp, #76	; 0x4c
   37468:	sub	r3, fp, #92	; 0x5c
   3746c:	ldm	r3, {r0, r1, r2, r3}
   37470:	stm	ip, {r0, r1, r2, r3}
   37474:	b	37494 <flatcc_verify_union_vector_field@@Base+0x2a6c>
   37478:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   3747c:	lsrs	r3, r3, #1
   37480:	rrx	r2, r2
   37484:	strd	r2, [fp, #-76]	; 0xffffffb4
   37488:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3748c:	add	r3, r3, #1
   37490:	str	r3, [fp, #-68]	; 0xffffffbc
   37494:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   37498:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   3749c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   374a0:	adds	r2, r2, r6
   374a4:	adc	r3, r3, r7
   374a8:	cmp	r1, r3
   374ac:	cmpeq	r0, r2
   374b0:	bhi	37478 <flatcc_verify_union_vector_field@@Base+0x2a50>
   374b4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   374b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   374bc:	cmp	r2, r3
   374c0:	bge	374e8 <flatcc_verify_union_vector_field@@Base+0x2ac0>
   374c4:	vldr	d7, [pc, #236]	; 375b8 <flatcc_verify_union_vector_field@@Base+0x2b90>
   374c8:	b	375a8 <flatcc_verify_union_vector_field@@Base+0x2b80>
   374cc:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   374d0:	adds	r2, r2, r2
   374d4:	adc	r3, r3, r3
   374d8:	strd	r2, [fp, #-76]	; 0xffffffb4
   374dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   374e0:	sub	r3, r3, #1
   374e4:	str	r3, [fp, #-68]	; 0xffffffbc
   374e8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   374ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   374f0:	cmp	r2, r3
   374f4:	ble	37510 <flatcc_verify_union_vector_field@@Base+0x2ae8>
   374f8:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   374fc:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37500:	and	r2, r2, r0
   37504:	and	r3, r3, r1
   37508:	orrs	r3, r2, r3
   3750c:	beq	374cc <flatcc_verify_union_vector_field@@Base+0x2aa4>
   37510:	ldr	r2, [fp, #-68]	; 0xffffffbc
   37514:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37518:	cmp	r2, r3
   3751c:	bne	37548 <flatcc_verify_union_vector_field@@Base+0x2b20>
   37520:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   37524:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   37528:	and	r2, r2, r0
   3752c:	and	r3, r3, r1
   37530:	orrs	r3, r2, r3
   37534:	bne	37548 <flatcc_verify_union_vector_field@@Base+0x2b20>
   37538:	mov	r2, #0
   3753c:	mov	r3, #0
   37540:	strd	r2, [fp, #-28]	; 0xffffffe4
   37544:	b	37560 <flatcc_verify_union_vector_field@@Base+0x2b38>
   37548:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3754c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   37550:	add	r3, r2, r3
   37554:	mov	r2, r3
   37558:	asr	r3, r2, #31
   3755c:	strd	r2, [fp, #-28]	; 0xffffffe4
   37560:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   37564:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   37568:	and	r6, r0, r2
   3756c:	and	r7, r1, r3
   37570:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   37574:	ldr	r1, [fp, #-56]	; 0xffffffc8
   37578:	sub	ip, r1, #32
   3757c:	rsb	r0, r1, #32
   37580:	lsl	r5, r3, r1
   37584:	orr	r5, r5, r2, lsl ip
   37588:	orr	r5, r5, r2, lsr r0
   3758c:	lsl	r4, r2, r1
   37590:	orr	r2, r6, r4
   37594:	orr	r3, r7, r5
   37598:	mov	r0, r2
   3759c:	mov	r1, r3
   375a0:	bl	36dd8 <flatcc_verify_union_vector_field@@Base+0x23b0>
   375a4:	vmov.f64	d7, d0
   375a8:	vmov.f64	d0, d7
   375ac:	sub	sp, fp, #20
   375b0:	pop	{r4, r5, r6, r7, fp, pc}
   375b4:	nop			; (mov r0, r0)
	...
   375c0:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   375c4:			; <UNDEFINED> instruction: 0xfffffbce
   375c8:	andeq	r0, r0, r3, lsr r4
   375cc:	push	{fp}		; (str fp, [sp, #-4]!)
   375d0:	add	fp, sp, #0
   375d4:	sub	sp, sp, #28
   375d8:	str	r0, [fp, #-16]
   375dc:	str	r1, [fp, #-20]	; 0xffffffec
   375e0:	str	r2, [fp, #-24]	; 0xffffffe8
   375e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   375e8:	add	r2, r3, #1
   375ec:	mov	r3, r2
   375f0:	lsl	r3, r3, #4
   375f4:	add	r3, r3, r2
   375f8:	lsl	r3, r3, #3
   375fc:	add	r3, r3, r2
   37600:	lsl	r2, r3, #3
   37604:	add	r3, r3, r2
   37608:	asr	r3, r3, #12
   3760c:	add	r3, r3, #1
   37610:	str	r3, [fp, #-8]
   37614:	ldr	r3, [pc, #76]	; 37668 <flatcc_verify_union_vector_field@@Base+0x2c40>
   37618:	add	r3, pc, r3
   3761c:	ldr	r2, [fp, #-8]
   37620:	ldr	r2, [r3, r2, lsl #2]
   37624:	ldr	r3, [fp, #-16]
   37628:	cmp	r2, r3
   3762c:	bls	3763c <flatcc_verify_union_vector_field@@Base+0x2c14>
   37630:	ldr	r3, [fp, #-8]
   37634:	sub	r3, r3, #1
   37638:	str	r3, [fp, #-8]
   3763c:	ldr	r3, [pc, #40]	; 3766c <flatcc_verify_union_vector_field@@Base+0x2c44>
   37640:	add	r3, pc, r3
   37644:	ldr	r2, [fp, #-8]
   37648:	ldr	r2, [r3, r2, lsl #2]
   3764c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37650:	str	r2, [r3]
   37654:	ldr	r3, [fp, #-8]
   37658:	mov	r0, r3
   3765c:	add	sp, fp, #0
   37660:	pop	{fp}		; (ldr fp, [sp], #4)
   37664:	bx	lr
   37668:	andeq	r8, r1, r0, asr #22
   3766c:	andeq	r8, r1, r8, lsl fp
   37670:	push	{fp, lr}
   37674:	add	fp, sp, #4
   37678:	sub	sp, sp, #24
   3767c:	str	r0, [fp, #-24]	; 0xffffffe8
   37680:	str	r1, [fp, #-28]	; 0xffffffe4
   37684:	mov	r3, #348	; 0x15c
   37688:	str	r3, [fp, #-8]
   3768c:	mov	r3, #8
   37690:	str	r3, [fp, #-12]
   37694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37698:	cmn	r3, #348	; 0x15c
   3769c:	bge	376c0 <flatcc_verify_union_vector_field@@Base+0x2c98>
   376a0:	ldr	r3, [pc, #332]	; 377f4 <flatcc_verify_union_vector_field@@Base+0x2dcc>
   376a4:	add	r3, pc, r3
   376a8:	mov	r2, #80	; 0x50
   376ac:	ldr	r1, [pc, #324]	; 377f8 <flatcc_verify_union_vector_field@@Base+0x2dd0>
   376b0:	add	r1, pc, r1
   376b4:	ldr	r0, [pc, #320]	; 377fc <flatcc_verify_union_vector_field@@Base+0x2dd4>
   376b8:	add	r0, pc, r0
   376bc:	bl	14610 <__assert_fail@plt>
   376c0:	ldr	r3, [fp, #-12]
   376c4:	add	r2, r3, #340	; 0x154
   376c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   376cc:	cmp	r2, r3
   376d0:	bgt	376f4 <flatcc_verify_union_vector_field@@Base+0x2ccc>
   376d4:	ldr	r3, [pc, #292]	; 37800 <flatcc_verify_union_vector_field@@Base+0x2dd8>
   376d8:	add	r3, pc, r3
   376dc:	mov	r2, #81	; 0x51
   376e0:	ldr	r1, [pc, #284]	; 37804 <flatcc_verify_union_vector_field@@Base+0x2ddc>
   376e4:	add	r1, pc, r1
   376e8:	ldr	r0, [pc, #280]	; 37808 <flatcc_verify_union_vector_field@@Base+0x2de0>
   376ec:	add	r0, pc, r0
   376f0:	bl	14610 <__assert_fail@plt>
   376f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   376f8:	ldr	r3, [fp, #-8]
   376fc:	add	r3, r2, r3
   37700:	ldr	r1, [fp, #-12]
   37704:	mov	r0, r3
   37708:	bl	4af2c <flatcc_json_printer_clear@@Base+0x268>
   3770c:	mov	r3, r0
   37710:	str	r3, [fp, #-16]
   37714:	ldr	r2, [pc, #240]	; 3780c <flatcc_verify_union_vector_field@@Base+0x2de4>
   37718:	add	r2, pc, r2
   3771c:	ldr	r3, [fp, #-16]
   37720:	lsl	r3, r3, #4
   37724:	add	r3, r2, r3
   37728:	add	r3, r3, #10
   3772c:	ldrsh	r3, [r3]
   37730:	str	r3, [fp, #-20]	; 0xffffffec
   37734:	ldr	r2, [pc, #212]	; 37810 <flatcc_verify_union_vector_field@@Base+0x2de8>
   37738:	add	r2, pc, r2
   3773c:	ldr	r3, [fp, #-16]
   37740:	lsl	r3, r3, #4
   37744:	add	r3, r2, r3
   37748:	ldrd	r2, [r3]
   3774c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37750:	strd	r2, [r1]
   37754:	ldr	r2, [pc, #184]	; 37814 <flatcc_verify_union_vector_field@@Base+0x2dec>
   37758:	add	r2, pc, r2
   3775c:	ldr	r3, [fp, #-16]
   37760:	lsl	r3, r3, #4
   37764:	add	r3, r2, r3
   37768:	add	r3, r3, #8
   3776c:	ldrsh	r3, [r3]
   37770:	mov	r2, r3
   37774:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37778:	str	r2, [r3, #8]
   3777c:	ldr	r2, [fp, #-20]	; 0xffffffec
   37780:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37784:	cmp	r2, r3
   37788:	ble	377ac <flatcc_verify_union_vector_field@@Base+0x2d84>
   3778c:	ldr	r3, [pc, #132]	; 37818 <flatcc_verify_union_vector_field@@Base+0x2df0>
   37790:	add	r3, pc, r3
   37794:	mov	r2, #88	; 0x58
   37798:	ldr	r1, [pc, #124]	; 3781c <flatcc_verify_union_vector_field@@Base+0x2df4>
   3779c:	add	r1, pc, r1
   377a0:	ldr	r0, [pc, #120]	; 37820 <flatcc_verify_union_vector_field@@Base+0x2df8>
   377a4:	add	r0, pc, r0
   377a8:	bl	14610 <__assert_fail@plt>
   377ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   377b0:	ldr	r3, [fp, #-12]
   377b4:	add	r2, r2, r3
   377b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   377bc:	cmp	r2, r3
   377c0:	bgt	377e4 <flatcc_verify_union_vector_field@@Base+0x2dbc>
   377c4:	ldr	r3, [pc, #88]	; 37824 <flatcc_verify_union_vector_field@@Base+0x2dfc>
   377c8:	add	r3, pc, r3
   377cc:	mov	r2, #89	; 0x59
   377d0:	ldr	r1, [pc, #80]	; 37828 <flatcc_verify_union_vector_field@@Base+0x2e00>
   377d4:	add	r1, pc, r1
   377d8:	ldr	r0, [pc, #76]	; 3782c <flatcc_verify_union_vector_field@@Base+0x2e04>
   377dc:	add	r0, pc, r0
   377e0:	bl	14610 <__assert_fail@plt>
   377e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   377e8:	mov	r0, r3
   377ec:	sub	sp, fp, #4
   377f0:	pop	{fp, pc}
   377f4:	andeq	r9, r1, r0, asr #32
   377f8:	ldrdeq	r8, [r1], -r4
   377fc:	andeq	r8, r1, ip, lsr fp
   37800:	andeq	r9, r1, ip
   37804:	andeq	r8, r1, r0, lsr #21
   37808:	andeq	r8, r1, r8, lsr #22
   3780c:	andeq	r8, r1, r8, lsr r4
   37810:	andeq	r8, r1, r8, lsl r4
   37814:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   37818:	andeq	r8, r1, r4, asr pc
   3781c:	andeq	r8, r1, r8, ror #19
   37820:	muleq	r1, ip, sl
   37824:	andeq	r8, r1, ip, lsl pc
   37828:			; <UNDEFINED> instruction: 0x000189b0
   3782c:	andeq	r8, r1, r4, ror sl

00037830 <grisu3_diy_fp_encode_double@@Base>:
   37830:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   37834:	add	fp, sp, #28
   37838:	sub	sp, sp, #184	; 0xb8
   3783c:	strd	r0, [fp, #-156]	; 0xffffff64
   37840:	str	r2, [fp, #-160]	; 0xffffff60
   37844:	str	r3, [fp, #-164]	; 0xffffff5c
   37848:	mov	r3, #3
   3784c:	str	r3, [fp, #-40]	; 0xffffffd8
   37850:	mov	r2, #1
   37854:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37858:	lsl	r3, r2, r3
   3785c:	str	r3, [fp, #-44]	; 0xffffffd4
   37860:	ldr	r3, [pc, #1264]	; 37d58 <grisu3_diy_fp_encode_double@@Base+0x528>
   37864:	str	r3, [fp, #-48]	; 0xffffffd0
   37868:	mov	r2, #0
   3786c:	mov	r3, #1048576	; 0x100000
   37870:	strd	r2, [fp, #-60]	; 0xffffffc4
   37874:	mov	r3, #64	; 0x40
   37878:	str	r3, [fp, #-64]	; 0xffffffc0
   3787c:	mov	r3, #19
   37880:	str	r3, [fp, #-68]	; 0xffffffbc
   37884:	ldr	r3, [fp, #4]
   37888:	cmp	r3, #0
   3788c:	beq	378a4 <grisu3_diy_fp_encode_double@@Base+0x74>
   37890:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37894:	lsr	r2, r3, #31
   37898:	add	r3, r2, r3
   3789c:	asr	r3, r3, #1
   378a0:	b	378a8 <grisu3_diy_fp_encode_double@@Base+0x78>
   378a4:	mov	r3, #0
   378a8:	str	r3, [fp, #-32]	; 0xffffffe0
   378ac:	ldr	r2, [fp, #-160]	; 0xffffff60
   378b0:	ldr	r3, [fp, #-164]	; 0xffffff5c
   378b4:	sub	r3, r2, r3
   378b8:	str	r3, [fp, #-72]	; 0xffffffb8
   378bc:	ldrd	r2, [fp, #-156]	; 0xffffff64
   378c0:	strd	r2, [fp, #-116]	; 0xffffff8c
   378c4:	mov	r3, #0
   378c8:	str	r3, [fp, #-108]	; 0xffffff94
   378cc:	sub	ip, fp, #116	; 0x74
   378d0:	mov	r2, sp
   378d4:	sub	r3, fp, #108	; 0x6c
   378d8:	ldm	r3, {r0, r1}
   378dc:	stm	r2, {r0, r1}
   378e0:	sub	r3, fp, #116	; 0x74
   378e4:	ldm	r3, {r2, r3}
   378e8:	mov	r0, ip
   378ec:	bl	37264 <flatcc_verify_union_vector_field@@Base+0x283c>
   378f0:	ldr	r3, [fp, #-108]	; 0xffffff94
   378f4:	rsb	r3, r3, #0
   378f8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   378fc:	lsl	r3, r2, r3
   37900:	str	r3, [fp, #-32]	; 0xffffffe0
   37904:	sub	r3, fp, #132	; 0x84
   37908:	mov	r1, r3
   3790c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   37910:	bl	37670 <flatcc_verify_union_vector_field@@Base+0x2c48>
   37914:	str	r0, [fp, #-76]	; 0xffffffb4
   37918:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3791c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   37920:	cmp	r2, r3
   37924:	beq	37a04 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   37928:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3792c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   37930:	sub	r3, r2, r3
   37934:	sub	r3, r3, #1
   37938:	str	r3, [fp, #-80]	; 0xffffffb0
   3793c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   37940:	cmp	r3, #0
   37944:	blt	37954 <grisu3_diy_fp_encode_double@@Base+0x124>
   37948:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3794c:	cmp	r3, #6
   37950:	ble	37974 <grisu3_diy_fp_encode_double@@Base+0x144>
   37954:	ldr	r3, [pc, #1024]	; 37d5c <grisu3_diy_fp_encode_double@@Base+0x52c>
   37958:	add	r3, pc, r3
   3795c:	mov	r2, #185	; 0xb9
   37960:	ldr	r1, [pc, #1016]	; 37d60 <grisu3_diy_fp_encode_double@@Base+0x530>
   37964:	add	r1, pc, r1
   37968:	ldr	r0, [pc, #1012]	; 37d64 <grisu3_diy_fp_encode_double@@Base+0x534>
   3796c:	add	r0, pc, r0
   37970:	bl	14610 <__assert_fail@plt>
   37974:	sub	lr, fp, #180	; 0xb4
   37978:	ldr	r2, [pc, #1000]	; 37d68 <grisu3_diy_fp_encode_double@@Base+0x538>
   3797c:	add	r2, pc, r2
   37980:	ldr	r3, [fp, #-80]	; 0xffffffb0
   37984:	add	ip, sp, #8
   37988:	lsl	r3, r3, #4
   3798c:	add	r3, r2, r3
   37990:	ldm	r3, {r0, r1, r2, r3}
   37994:	stm	ip, {r0, r1, r2, r3}
   37998:	mov	r2, sp
   3799c:	sub	r3, fp, #108	; 0x6c
   379a0:	ldm	r3, {r0, r1}
   379a4:	stm	r2, {r0, r1}
   379a8:	sub	r3, fp, #116	; 0x74
   379ac:	ldm	r3, {r2, r3}
   379b0:	mov	r0, lr
   379b4:	bl	37014 <flatcc_verify_union_vector_field@@Base+0x25ec>
   379b8:	sub	ip, fp, #116	; 0x74
   379bc:	sub	r3, fp, #180	; 0xb4
   379c0:	ldm	r3, {r0, r1, r2, r3}
   379c4:	stm	ip, {r0, r1, r2, r3}
   379c8:	ldr	r3, [fp, #-164]	; 0xffffff5c
   379cc:	add	r2, r3, #1
   379d0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   379d4:	add	r2, r2, r3
   379d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   379dc:	cmp	r2, r3
   379e0:	ble	37a04 <grisu3_diy_fp_encode_double@@Base+0x1d4>
   379e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   379e8:	lsr	r2, r3, #31
   379ec:	add	r3, r2, r3
   379f0:	asr	r3, r3, #1
   379f4:	mov	r2, r3
   379f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   379fc:	add	r3, r3, r2
   37a00:	str	r3, [fp, #-32]	; 0xffffffe0
   37a04:	sub	lr, fp, #180	; 0xb4
   37a08:	add	ip, sp, #8
   37a0c:	sub	r3, fp, #132	; 0x84
   37a10:	ldm	r3, {r0, r1, r2, r3}
   37a14:	stm	ip, {r0, r1, r2, r3}
   37a18:	mov	r2, sp
   37a1c:	sub	r3, fp, #108	; 0x6c
   37a20:	ldm	r3, {r0, r1}
   37a24:	stm	r2, {r0, r1}
   37a28:	sub	r3, fp, #116	; 0x74
   37a2c:	ldm	r3, {r2, r3}
   37a30:	mov	r0, lr
   37a34:	bl	37014 <flatcc_verify_union_vector_field@@Base+0x25ec>
   37a38:	sub	ip, fp, #116	; 0x74
   37a3c:	sub	r3, fp, #180	; 0xb4
   37a40:	ldm	r3, {r0, r1, r2, r3}
   37a44:	stm	ip, {r0, r1, r2, r3}
   37a48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37a4c:	cmp	r3, #0
   37a50:	movne	r3, #1
   37a54:	moveq	r3, #0
   37a58:	uxtb	r3, r3
   37a5c:	mov	r2, r3
   37a60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37a64:	add	r3, r2, r3
   37a68:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37a6c:	add	r3, r2, r3
   37a70:	str	r3, [fp, #-32]	; 0xffffffe0
   37a74:	ldr	r3, [fp, #-108]	; 0xffffff94
   37a78:	str	r3, [fp, #-84]	; 0xffffffac
   37a7c:	sub	ip, fp, #180	; 0xb4
   37a80:	mov	r2, sp
   37a84:	sub	r3, fp, #108	; 0x6c
   37a88:	ldm	r3, {r0, r1}
   37a8c:	stm	r2, {r0, r1}
   37a90:	sub	r3, fp, #116	; 0x74
   37a94:	ldm	r3, {r2, r3}
   37a98:	mov	r0, ip
   37a9c:	bl	37264 <flatcc_verify_union_vector_field@@Base+0x283c>
   37aa0:	sub	ip, fp, #116	; 0x74
   37aa4:	sub	r3, fp, #180	; 0xb4
   37aa8:	ldm	r3, {r0, r1, r2, r3}
   37aac:	stm	ip, {r0, r1, r2, r3}
   37ab0:	ldr	r3, [fp, #-108]	; 0xffffff94
   37ab4:	ldr	r2, [fp, #-84]	; 0xffffffac
   37ab8:	sub	r3, r2, r3
   37abc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37ac0:	lsl	r3, r2, r3
   37ac4:	str	r3, [fp, #-32]	; 0xffffffe0
   37ac8:	ldr	r2, [fp, #-108]	; 0xffffff94
   37acc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37ad0:	add	r3, r2, r3
   37ad4:	str	r3, [fp, #-88]	; 0xffffffa8
   37ad8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37adc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37ae0:	add	r2, r2, r3
   37ae4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37ae8:	cmp	r2, r3
   37aec:	ble	37b18 <grisu3_diy_fp_encode_double@@Base+0x2e8>
   37af0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   37af4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37af8:	cmp	r2, r3
   37afc:	ble	37b10 <grisu3_diy_fp_encode_double@@Base+0x2e0>
   37b00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   37b04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37b08:	sub	r3, r2, r3
   37b0c:	b	37b1c <grisu3_diy_fp_encode_double@@Base+0x2ec>
   37b10:	mov	r3, #0
   37b14:	b	37b1c <grisu3_diy_fp_encode_double@@Base+0x2ec>
   37b18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37b1c:	str	r3, [fp, #-88]	; 0xffffffa8
   37b20:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37b24:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37b28:	sub	r3, r2, r3
   37b2c:	str	r3, [fp, #-36]	; 0xffffffdc
   37b30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37b34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37b38:	add	r2, r2, r3
   37b3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37b40:	cmp	r2, r3
   37b44:	blt	37bc4 <grisu3_diy_fp_encode_double@@Base+0x394>
   37b48:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37b4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37b50:	add	r2, r2, r3
   37b54:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37b58:	sub	r3, r2, r3
   37b5c:	sub	r3, r3, #1
   37b60:	str	r3, [fp, #-92]	; 0xffffffa4
   37b64:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   37b68:	ldr	r1, [fp, #-92]	; 0xffffffa4
   37b6c:	rsb	ip, r1, #32
   37b70:	sub	r0, r1, #32
   37b74:	lsr	r8, r2, r1
   37b78:	orr	r8, r8, r3, lsl ip
   37b7c:	orr	r8, r8, r3, lsr r0
   37b80:	lsr	r9, r3, r1
   37b84:	strd	r8, [fp, #-116]	; 0xffffff8c
   37b88:	ldr	r2, [fp, #-108]	; 0xffffff94
   37b8c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37b90:	add	r3, r2, r3
   37b94:	str	r3, [fp, #-108]	; 0xffffff94
   37b98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37b9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37ba0:	asr	r3, r2, r3
   37ba4:	add	r2, r3, #1
   37ba8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37bac:	add	r3, r2, r3
   37bb0:	str	r3, [fp, #-32]	; 0xffffffe0
   37bb4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37bb8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37bbc:	sub	r3, r2, r3
   37bc0:	str	r3, [fp, #-36]	; 0xffffffdc
   37bc4:	ldrd	r2, [fp, #-116]	; 0xffffff8c
   37bc8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37bcc:	rsb	ip, r1, #32
   37bd0:	sub	r0, r1, #32
   37bd4:	lsr	r6, r2, r1
   37bd8:	orr	r6, r6, r3, lsl ip
   37bdc:	orr	r6, r6, r3, lsr r0
   37be0:	lsr	r7, r3, r1
   37be4:	strd	r6, [fp, #-148]	; 0xffffff6c
   37be8:	ldr	r2, [fp, #-108]	; 0xffffff94
   37bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37bf0:	add	r3, r2, r3
   37bf4:	str	r3, [fp, #-140]	; 0xffffff74
   37bf8:	ldrd	r6, [fp, #-116]	; 0xffffff8c
   37bfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37c00:	sub	r1, r3, #1
   37c04:	mov	r2, #1
   37c08:	mov	r3, #0
   37c0c:	sub	ip, r1, #32
   37c10:	rsb	r0, r1, #32
   37c14:	lsl	r5, r3, r1
   37c18:	orr	r5, r5, r2, lsl ip
   37c1c:	orr	r5, r5, r2, lsr r0
   37c20:	lsl	r4, r2, r1
   37c24:	and	r2, r6, r4
   37c28:	and	r3, r7, r5
   37c2c:	mov	r1, r2
   37c30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37c34:	mov	r2, r3
   37c38:	asr	r3, r2, #31
   37c3c:	mov	r3, r2
   37c40:	mul	r3, r3, r1
   37c44:	str	r3, [fp, #-96]	; 0xffffffa0
   37c48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37c4c:	mov	r2, r3
   37c50:	asr	r3, r2, #31
   37c54:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37c58:	sub	r1, r1, #1
   37c5c:	sub	ip, r1, #32
   37c60:	rsb	r0, r1, #32
   37c64:	lsl	lr, r3, r1
   37c68:	str	lr, [fp, #-184]	; 0xffffff48
   37c6c:	ldr	lr, [fp, #-184]	; 0xffffff48
   37c70:	orr	ip, lr, r2, lsl ip
   37c74:	str	ip, [fp, #-184]	; 0xffffff48
   37c78:	ldr	ip, [fp, #-184]	; 0xffffff48
   37c7c:	orr	r0, ip, r2, lsr r0
   37c80:	str	r0, [fp, #-184]	; 0xffffff48
   37c84:	lsl	r3, r2, r1
   37c88:	str	r3, [fp, #-188]	; 0xffffff44
   37c8c:	ldr	r3, [fp, #-188]	; 0xffffff44
   37c90:	str	r3, [fp, #-100]	; 0xffffff9c
   37c94:	ldr	r2, [fp, #-100]	; 0xffffff9c
   37c98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37c9c:	add	r2, r2, r3
   37ca0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37ca4:	cmp	r2, r3
   37ca8:	bgt	37cf8 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   37cac:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   37cb0:	adds	r2, r2, #1
   37cb4:	adc	r3, r3, #0
   37cb8:	strd	r2, [fp, #-148]	; 0xffffff6c
   37cbc:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   37cc0:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   37cc4:	adds	r2, r2, r2
   37cc8:	adc	r3, r3, r3
   37ccc:	and	r2, r2, r0
   37cd0:	and	r3, r3, r1
   37cd4:	orrs	r3, r2, r3
   37cd8:	beq	37cf8 <grisu3_diy_fp_encode_double@@Base+0x4c8>
   37cdc:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   37ce0:	lsrs	r3, r3, #1
   37ce4:	rrx	r2, r2
   37ce8:	strd	r2, [fp, #-148]	; 0xffffff6c
   37cec:	ldr	r3, [fp, #-140]	; 0xffffff74
   37cf0:	add	r3, r3, #1
   37cf4:	str	r3, [fp, #-140]	; 0xffffff74
   37cf8:	sub	r3, fp, #148	; 0x94
   37cfc:	ldm	r3, {r0, r1, r2, r3}
   37d00:	bl	37420 <flatcc_verify_union_vector_field@@Base+0x29f8>
   37d04:	vmov.f64	d7, d0
   37d08:	ldr	r3, [fp, #8]
   37d0c:	vstr	d7, [r3]
   37d10:	ldr	r2, [fp, #-100]	; 0xffffff9c
   37d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37d18:	sub	r2, r2, r3
   37d1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   37d20:	cmp	r2, r3
   37d24:	bge	37d40 <grisu3_diy_fp_encode_double@@Base+0x510>
   37d28:	ldr	r2, [fp, #-100]	; 0xffffff9c
   37d2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37d30:	add	r2, r2, r3
   37d34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   37d38:	cmp	r2, r3
   37d3c:	bgt	37d48 <grisu3_diy_fp_encode_double@@Base+0x518>
   37d40:	mov	r3, #1
   37d44:	b	37d4c <grisu3_diy_fp_encode_double@@Base+0x51c>
   37d48:	mov	r3, #0
   37d4c:	mov	r0, r3
   37d50:	sub	sp, fp, #28
   37d54:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   37d58:			; <UNDEFINED> instruction: 0xfffffbce
   37d5c:	andeq	r8, r1, ip, lsr #27
   37d60:	andeq	r8, r1, r0, lsr #16
   37d64:	andeq	r8, r1, r0, lsl #18
   37d68:			; <UNDEFINED> instruction: 0x0002aab4
   37d6c:	push	{fp, lr}
   37d70:	add	fp, sp, #4
   37d74:	sub	sp, sp, #48	; 0x30
   37d78:	str	r0, [fp, #-32]	; 0xffffffe0
   37d7c:	str	r1, [fp, #-36]	; 0xffffffdc
   37d80:	str	r2, [fp, #-40]	; 0xffffffd8
   37d84:	ldr	r3, [pc, #1556]	; 383a0 <grisu3_diy_fp_encode_double@@Base+0xb70>
   37d88:	str	r3, [fp, #-16]
   37d8c:	ldr	r3, [pc, #1552]	; 383a4 <grisu3_diy_fp_encode_double@@Base+0xb74>
   37d90:	str	r3, [fp, #-20]	; 0xffffffec
   37d94:	ldrd	r2, [fp, #4]
   37d98:	orrs	r3, r2, r3
   37d9c:	beq	37db0 <grisu3_diy_fp_encode_double@@Base+0x580>
   37da0:	ldr	r2, [fp, #12]
   37da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   37da8:	cmp	r2, r3
   37dac:	bge	37dc4 <grisu3_diy_fp_encode_double@@Base+0x594>
   37db0:	ldr	r1, [fp, #24]
   37db4:	mov	r2, #0
   37db8:	mov	r3, #0
   37dbc:	strd	r2, [r1]
   37dc0:	b	383b4 <grisu3_diy_fp_encode_double@@Base+0xb84>
   37dc4:	ldr	r3, [fp, #12]
   37dc8:	sub	r2, r3, #1
   37dcc:	ldr	r3, [fp, #-16]
   37dd0:	cmp	r2, r3
   37dd4:	ble	37df4 <grisu3_diy_fp_encode_double@@Base+0x5c4>
   37dd8:	mov	r0, #0
   37ddc:	ldr	r1, [pc, #1476]	; 383a8 <grisu3_diy_fp_encode_double@@Base+0xb78>
   37de0:	bl	36dd8 <flatcc_verify_union_vector_field@@Base+0x23b0>
   37de4:	vmov.f64	d7, d0
   37de8:	ldr	r3, [fp, #24]
   37dec:	vstr	d7, [r3]
   37df0:	b	383b4 <grisu3_diy_fp_encode_double@@Base+0xb84>
   37df4:	ldrd	r2, [fp, #4]
   37df8:	mvn	r0, #0
   37dfc:	ldr	r1, [pc, #1448]	; 383ac <grisu3_diy_fp_encode_double@@Base+0xb7c>
   37e00:	cmp	r3, r1
   37e04:	cmpeq	r2, r0
   37e08:	bhi	38288 <grisu3_diy_fp_encode_double@@Base+0xa58>
   37e0c:	ldr	r3, [fp, #12]
   37e10:	cmp	r3, #0
   37e14:	blt	38288 <grisu3_diy_fp_encode_double@@Base+0xa58>
   37e18:	ldr	r3, [fp, #12]
   37e1c:	cmp	r3, #22
   37e20:	bgt	38288 <grisu3_diy_fp_encode_double@@Base+0xa58>
   37e24:	ldrd	r0, [fp, #4]
   37e28:	bl	4b4b0 <flatcc_json_printer_clear@@Base+0x7ec>
   37e2c:	mov	r2, r0
   37e30:	mov	r3, r1
   37e34:	strd	r2, [fp, #-12]
   37e38:	ldr	r2, [fp, #12]
   37e3c:	ldr	r3, [fp, #16]
   37e40:	sub	r3, r2, r3
   37e44:	add	r3, r3, #22
   37e48:	cmp	r3, #44	; 0x2c
   37e4c:	addls	pc, pc, r3, lsl #2
   37e50:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37e54:	b	37f08 <grisu3_diy_fp_encode_double@@Base+0x6d8>
   37e58:	b	37f1c <grisu3_diy_fp_encode_double@@Base+0x6ec>
   37e5c:	b	37f30 <grisu3_diy_fp_encode_double@@Base+0x700>
   37e60:	b	37f44 <grisu3_diy_fp_encode_double@@Base+0x714>
   37e64:	b	37f58 <grisu3_diy_fp_encode_double@@Base+0x728>
   37e68:	b	37f6c <grisu3_diy_fp_encode_double@@Base+0x73c>
   37e6c:	b	37f80 <grisu3_diy_fp_encode_double@@Base+0x750>
   37e70:	b	37f94 <grisu3_diy_fp_encode_double@@Base+0x764>
   37e74:	b	37fa8 <grisu3_diy_fp_encode_double@@Base+0x778>
   37e78:	b	37fbc <grisu3_diy_fp_encode_double@@Base+0x78c>
   37e7c:	b	37fd0 <grisu3_diy_fp_encode_double@@Base+0x7a0>
   37e80:	b	37fe4 <grisu3_diy_fp_encode_double@@Base+0x7b4>
   37e84:	b	37ff8 <grisu3_diy_fp_encode_double@@Base+0x7c8>
   37e88:	b	3800c <grisu3_diy_fp_encode_double@@Base+0x7dc>
   37e8c:	b	38020 <grisu3_diy_fp_encode_double@@Base+0x7f0>
   37e90:	b	38034 <grisu3_diy_fp_encode_double@@Base+0x804>
   37e94:	b	38048 <grisu3_diy_fp_encode_double@@Base+0x818>
   37e98:	b	3805c <grisu3_diy_fp_encode_double@@Base+0x82c>
   37e9c:	b	38070 <grisu3_diy_fp_encode_double@@Base+0x840>
   37ea0:	b	38084 <grisu3_diy_fp_encode_double@@Base+0x854>
   37ea4:	b	38098 <grisu3_diy_fp_encode_double@@Base+0x868>
   37ea8:	b	380ac <grisu3_diy_fp_encode_double@@Base+0x87c>
   37eac:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37eb0:	b	380c0 <grisu3_diy_fp_encode_double@@Base+0x890>
   37eb4:	b	380d4 <grisu3_diy_fp_encode_double@@Base+0x8a4>
   37eb8:	b	380e8 <grisu3_diy_fp_encode_double@@Base+0x8b8>
   37ebc:	b	380fc <grisu3_diy_fp_encode_double@@Base+0x8cc>
   37ec0:	b	38110 <grisu3_diy_fp_encode_double@@Base+0x8e0>
   37ec4:	b	38124 <grisu3_diy_fp_encode_double@@Base+0x8f4>
   37ec8:	b	38138 <grisu3_diy_fp_encode_double@@Base+0x908>
   37ecc:	b	3814c <grisu3_diy_fp_encode_double@@Base+0x91c>
   37ed0:	b	38160 <grisu3_diy_fp_encode_double@@Base+0x930>
   37ed4:	b	38174 <grisu3_diy_fp_encode_double@@Base+0x944>
   37ed8:	b	38188 <grisu3_diy_fp_encode_double@@Base+0x958>
   37edc:	b	3819c <grisu3_diy_fp_encode_double@@Base+0x96c>
   37ee0:	b	381b0 <grisu3_diy_fp_encode_double@@Base+0x980>
   37ee4:	b	381c4 <grisu3_diy_fp_encode_double@@Base+0x994>
   37ee8:	b	381d8 <grisu3_diy_fp_encode_double@@Base+0x9a8>
   37eec:	b	381ec <grisu3_diy_fp_encode_double@@Base+0x9bc>
   37ef0:	b	38200 <grisu3_diy_fp_encode_double@@Base+0x9d0>
   37ef4:	b	38214 <grisu3_diy_fp_encode_double@@Base+0x9e4>
   37ef8:	b	38228 <grisu3_diy_fp_encode_double@@Base+0x9f8>
   37efc:	b	3823c <grisu3_diy_fp_encode_double@@Base+0xa0c>
   37f00:	b	38250 <grisu3_diy_fp_encode_double@@Base+0xa20>
   37f04:	b	38264 <grisu3_diy_fp_encode_double@@Base+0xa34>
   37f08:	vldr	d6, [fp, #-12]
   37f0c:	vldr	d5, [pc, #988]	; 382f0 <grisu3_diy_fp_encode_double@@Base+0xac0>
   37f10:	vdiv.f64	d7, d6, d5
   37f14:	vstr	d7, [fp, #-12]
   37f18:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37f1c:	vldr	d6, [fp, #-12]
   37f20:	vldr	d5, [pc, #976]	; 382f8 <grisu3_diy_fp_encode_double@@Base+0xac8>
   37f24:	vdiv.f64	d7, d6, d5
   37f28:	vstr	d7, [fp, #-12]
   37f2c:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37f30:	vldr	d6, [fp, #-12]
   37f34:	vldr	d5, [pc, #964]	; 38300 <grisu3_diy_fp_encode_double@@Base+0xad0>
   37f38:	vdiv.f64	d7, d6, d5
   37f3c:	vstr	d7, [fp, #-12]
   37f40:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37f44:	vldr	d6, [fp, #-12]
   37f48:	vldr	d5, [pc, #952]	; 38308 <grisu3_diy_fp_encode_double@@Base+0xad8>
   37f4c:	vdiv.f64	d7, d6, d5
   37f50:	vstr	d7, [fp, #-12]
   37f54:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37f58:	vldr	d6, [fp, #-12]
   37f5c:	vldr	d5, [pc, #940]	; 38310 <grisu3_diy_fp_encode_double@@Base+0xae0>
   37f60:	vdiv.f64	d7, d6, d5
   37f64:	vstr	d7, [fp, #-12]
   37f68:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37f6c:	vldr	d6, [fp, #-12]
   37f70:	vldr	d5, [pc, #928]	; 38318 <grisu3_diy_fp_encode_double@@Base+0xae8>
   37f74:	vdiv.f64	d7, d6, d5
   37f78:	vstr	d7, [fp, #-12]
   37f7c:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37f80:	vldr	d6, [fp, #-12]
   37f84:	vldr	d5, [pc, #916]	; 38320 <grisu3_diy_fp_encode_double@@Base+0xaf0>
   37f88:	vdiv.f64	d7, d6, d5
   37f8c:	vstr	d7, [fp, #-12]
   37f90:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37f94:	vldr	d6, [fp, #-12]
   37f98:	vldr	d5, [pc, #904]	; 38328 <grisu3_diy_fp_encode_double@@Base+0xaf8>
   37f9c:	vdiv.f64	d7, d6, d5
   37fa0:	vstr	d7, [fp, #-12]
   37fa4:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37fa8:	vldr	d6, [fp, #-12]
   37fac:	vldr	d5, [pc, #892]	; 38330 <grisu3_diy_fp_encode_double@@Base+0xb00>
   37fb0:	vdiv.f64	d7, d6, d5
   37fb4:	vstr	d7, [fp, #-12]
   37fb8:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37fbc:	vldr	d6, [fp, #-12]
   37fc0:	vldr	d5, [pc, #880]	; 38338 <grisu3_diy_fp_encode_double@@Base+0xb08>
   37fc4:	vdiv.f64	d7, d6, d5
   37fc8:	vstr	d7, [fp, #-12]
   37fcc:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37fd0:	vldr	d6, [fp, #-12]
   37fd4:	vldr	d5, [pc, #868]	; 38340 <grisu3_diy_fp_encode_double@@Base+0xb10>
   37fd8:	vdiv.f64	d7, d6, d5
   37fdc:	vstr	d7, [fp, #-12]
   37fe0:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37fe4:	vldr	d6, [fp, #-12]
   37fe8:	vldr	d5, [pc, #856]	; 38348 <grisu3_diy_fp_encode_double@@Base+0xb18>
   37fec:	vdiv.f64	d7, d6, d5
   37ff0:	vstr	d7, [fp, #-12]
   37ff4:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   37ff8:	vldr	d6, [fp, #-12]
   37ffc:	vldr	d5, [pc, #844]	; 38350 <grisu3_diy_fp_encode_double@@Base+0xb20>
   38000:	vdiv.f64	d7, d6, d5
   38004:	vstr	d7, [fp, #-12]
   38008:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3800c:	vldr	d6, [fp, #-12]
   38010:	vldr	d5, [pc, #832]	; 38358 <grisu3_diy_fp_encode_double@@Base+0xb28>
   38014:	vdiv.f64	d7, d6, d5
   38018:	vstr	d7, [fp, #-12]
   3801c:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38020:	vldr	d6, [fp, #-12]
   38024:	vldr	d5, [pc, #820]	; 38360 <grisu3_diy_fp_encode_double@@Base+0xb30>
   38028:	vdiv.f64	d7, d6, d5
   3802c:	vstr	d7, [fp, #-12]
   38030:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38034:	vldr	d6, [fp, #-12]
   38038:	vldr	d5, [pc, #808]	; 38368 <grisu3_diy_fp_encode_double@@Base+0xb38>
   3803c:	vdiv.f64	d7, d6, d5
   38040:	vstr	d7, [fp, #-12]
   38044:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38048:	vldr	d6, [fp, #-12]
   3804c:	vldr	d5, [pc, #796]	; 38370 <grisu3_diy_fp_encode_double@@Base+0xb40>
   38050:	vdiv.f64	d7, d6, d5
   38054:	vstr	d7, [fp, #-12]
   38058:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3805c:	vldr	d6, [fp, #-12]
   38060:	vldr	d5, [pc, #784]	; 38378 <grisu3_diy_fp_encode_double@@Base+0xb48>
   38064:	vdiv.f64	d7, d6, d5
   38068:	vstr	d7, [fp, #-12]
   3806c:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38070:	vldr	d6, [fp, #-12]
   38074:	vldr	d5, [pc, #772]	; 38380 <grisu3_diy_fp_encode_double@@Base+0xb50>
   38078:	vdiv.f64	d7, d6, d5
   3807c:	vstr	d7, [fp, #-12]
   38080:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38084:	vldr	d6, [fp, #-12]
   38088:	vldr	d5, [pc, #760]	; 38388 <grisu3_diy_fp_encode_double@@Base+0xb58>
   3808c:	vdiv.f64	d7, d6, d5
   38090:	vstr	d7, [fp, #-12]
   38094:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38098:	vldr	d6, [fp, #-12]
   3809c:	vldr	d5, [pc, #748]	; 38390 <grisu3_diy_fp_encode_double@@Base+0xb60>
   380a0:	vdiv.f64	d7, d6, d5
   380a4:	vstr	d7, [fp, #-12]
   380a8:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   380ac:	vldr	d6, [fp, #-12]
   380b0:	vldr	d5, [pc, #736]	; 38398 <grisu3_diy_fp_encode_double@@Base+0xb68>
   380b4:	vdiv.f64	d7, d6, d5
   380b8:	vstr	d7, [fp, #-12]
   380bc:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   380c0:	vldr	d7, [fp, #-12]
   380c4:	vldr	d6, [pc, #716]	; 38398 <grisu3_diy_fp_encode_double@@Base+0xb68>
   380c8:	vmul.f64	d7, d7, d6
   380cc:	vstr	d7, [fp, #-12]
   380d0:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   380d4:	vldr	d7, [fp, #-12]
   380d8:	vldr	d6, [pc, #688]	; 38390 <grisu3_diy_fp_encode_double@@Base+0xb60>
   380dc:	vmul.f64	d7, d7, d6
   380e0:	vstr	d7, [fp, #-12]
   380e4:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   380e8:	vldr	d7, [fp, #-12]
   380ec:	vldr	d6, [pc, #660]	; 38388 <grisu3_diy_fp_encode_double@@Base+0xb58>
   380f0:	vmul.f64	d7, d7, d6
   380f4:	vstr	d7, [fp, #-12]
   380f8:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   380fc:	vldr	d7, [fp, #-12]
   38100:	vldr	d6, [pc, #632]	; 38380 <grisu3_diy_fp_encode_double@@Base+0xb50>
   38104:	vmul.f64	d7, d7, d6
   38108:	vstr	d7, [fp, #-12]
   3810c:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38110:	vldr	d7, [fp, #-12]
   38114:	vldr	d6, [pc, #604]	; 38378 <grisu3_diy_fp_encode_double@@Base+0xb48>
   38118:	vmul.f64	d7, d7, d6
   3811c:	vstr	d7, [fp, #-12]
   38120:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38124:	vldr	d7, [fp, #-12]
   38128:	vldr	d6, [pc, #576]	; 38370 <grisu3_diy_fp_encode_double@@Base+0xb40>
   3812c:	vmul.f64	d7, d7, d6
   38130:	vstr	d7, [fp, #-12]
   38134:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38138:	vldr	d7, [fp, #-12]
   3813c:	vldr	d6, [pc, #548]	; 38368 <grisu3_diy_fp_encode_double@@Base+0xb38>
   38140:	vmul.f64	d7, d7, d6
   38144:	vstr	d7, [fp, #-12]
   38148:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3814c:	vldr	d7, [fp, #-12]
   38150:	vldr	d6, [pc, #520]	; 38360 <grisu3_diy_fp_encode_double@@Base+0xb30>
   38154:	vmul.f64	d7, d7, d6
   38158:	vstr	d7, [fp, #-12]
   3815c:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38160:	vldr	d7, [fp, #-12]
   38164:	vldr	d6, [pc, #492]	; 38358 <grisu3_diy_fp_encode_double@@Base+0xb28>
   38168:	vmul.f64	d7, d7, d6
   3816c:	vstr	d7, [fp, #-12]
   38170:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38174:	vldr	d7, [fp, #-12]
   38178:	vldr	d6, [pc, #464]	; 38350 <grisu3_diy_fp_encode_double@@Base+0xb20>
   3817c:	vmul.f64	d7, d7, d6
   38180:	vstr	d7, [fp, #-12]
   38184:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38188:	vldr	d7, [fp, #-12]
   3818c:	vldr	d6, [pc, #436]	; 38348 <grisu3_diy_fp_encode_double@@Base+0xb18>
   38190:	vmul.f64	d7, d7, d6
   38194:	vstr	d7, [fp, #-12]
   38198:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3819c:	vldr	d7, [fp, #-12]
   381a0:	vldr	d6, [pc, #408]	; 38340 <grisu3_diy_fp_encode_double@@Base+0xb10>
   381a4:	vmul.f64	d7, d7, d6
   381a8:	vstr	d7, [fp, #-12]
   381ac:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   381b0:	vldr	d7, [fp, #-12]
   381b4:	vldr	d6, [pc, #380]	; 38338 <grisu3_diy_fp_encode_double@@Base+0xb08>
   381b8:	vmul.f64	d7, d7, d6
   381bc:	vstr	d7, [fp, #-12]
   381c0:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   381c4:	vldr	d7, [fp, #-12]
   381c8:	vldr	d6, [pc, #352]	; 38330 <grisu3_diy_fp_encode_double@@Base+0xb00>
   381cc:	vmul.f64	d7, d7, d6
   381d0:	vstr	d7, [fp, #-12]
   381d4:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   381d8:	vldr	d7, [fp, #-12]
   381dc:	vldr	d6, [pc, #324]	; 38328 <grisu3_diy_fp_encode_double@@Base+0xaf8>
   381e0:	vmul.f64	d7, d7, d6
   381e4:	vstr	d7, [fp, #-12]
   381e8:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   381ec:	vldr	d7, [fp, #-12]
   381f0:	vldr	d6, [pc, #296]	; 38320 <grisu3_diy_fp_encode_double@@Base+0xaf0>
   381f4:	vmul.f64	d7, d7, d6
   381f8:	vstr	d7, [fp, #-12]
   381fc:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38200:	vldr	d7, [fp, #-12]
   38204:	vldr	d6, [pc, #268]	; 38318 <grisu3_diy_fp_encode_double@@Base+0xae8>
   38208:	vmul.f64	d7, d7, d6
   3820c:	vstr	d7, [fp, #-12]
   38210:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38214:	vldr	d7, [fp, #-12]
   38218:	vldr	d6, [pc, #240]	; 38310 <grisu3_diy_fp_encode_double@@Base+0xae0>
   3821c:	vmul.f64	d7, d7, d6
   38220:	vstr	d7, [fp, #-12]
   38224:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38228:	vldr	d7, [fp, #-12]
   3822c:	vldr	d6, [pc, #212]	; 38308 <grisu3_diy_fp_encode_double@@Base+0xad8>
   38230:	vmul.f64	d7, d7, d6
   38234:	vstr	d7, [fp, #-12]
   38238:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   3823c:	vldr	d7, [fp, #-12]
   38240:	vldr	d6, [pc, #184]	; 38300 <grisu3_diy_fp_encode_double@@Base+0xad0>
   38244:	vmul.f64	d7, d7, d6
   38248:	vstr	d7, [fp, #-12]
   3824c:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38250:	vldr	d7, [fp, #-12]
   38254:	vldr	d6, [pc, #156]	; 382f8 <grisu3_diy_fp_encode_double@@Base+0xac8>
   38258:	vmul.f64	d7, d7, d6
   3825c:	vstr	d7, [fp, #-12]
   38260:	b	38278 <grisu3_diy_fp_encode_double@@Base+0xa48>
   38264:	vldr	d7, [fp, #-12]
   38268:	vldr	d6, [pc, #128]	; 382f0 <grisu3_diy_fp_encode_double@@Base+0xac0>
   3826c:	vmul.f64	d7, d7, d6
   38270:	vstr	d7, [fp, #-12]
   38274:	nop			; (mov r0, r0)
   38278:	ldr	r1, [fp, #24]
   3827c:	ldrd	r2, [fp, #-12]
   38280:	strd	r2, [r1]
   38284:	b	383b4 <grisu3_diy_fp_encode_double@@Base+0xb84>
   38288:	ldr	r3, [fp, #24]
   3828c:	str	r3, [sp, #4]
   38290:	ldr	r3, [fp, #20]
   38294:	str	r3, [sp]
   38298:	ldr	r3, [fp, #16]
   3829c:	ldr	r2, [fp, #12]
   382a0:	ldrd	r0, [fp, #4]
   382a4:	bl	37830 <grisu3_diy_fp_encode_double@@Base>
   382a8:	mov	r3, r0
   382ac:	cmp	r3, #0
   382b0:	bne	383b0 <grisu3_diy_fp_encode_double@@Base+0xb80>
   382b4:	sub	r3, fp, #24
   382b8:	mov	r1, r3
   382bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   382c0:	bl	145d4 <strtod@plt>
   382c4:	vmov.f64	d7, d0
   382c8:	ldr	r3, [fp, #24]
   382cc:	vstr	d7, [r3]
   382d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   382d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   382d8:	cmp	r2, r3
   382dc:	bcs	382e8 <grisu3_diy_fp_encode_double@@Base+0xab8>
   382e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   382e4:	b	383d8 <grisu3_diy_fp_encode_double@@Base+0xba8>
   382e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   382ec:	b	383d8 <grisu3_diy_fp_encode_double@@Base+0xba8>
   382f0:			; <UNDEFINED> instruction: 0x064dd592
   382f4:	strmi	pc, [r0], #207	; 0xcf
   382f8:	usatle	lr, #2, r0, asr #30
   382fc:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   38300:	ldmvc	r5!, {r6, sl, fp, pc}
   38304:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38308:	addsvs	r3, r1, r0, lsl #26
   3830c:	mvnmi	r5, #228, 16	; 0xe40000
   38310:	strbvs	ip, [lr, -r0, lsl #16]
   38314:			; <UNDEFINED> instruction: 0x43abc16d
   38318:	ldrbhi	sl, [r8]
   3831c:	cmnmi	r6, #1459617792	; 0x57000000
   38320:	strbcc	r8, [r0, r0]!
   38324:	movtmi	ip, #4985	; 0x1379
   38328:	ldrtcs	r0, [r4], -r0
   3832c:	movwmi	r6, #52213	; 0xcbf5
   38330:	cdpne	0, 9, cr0, cr0, cr0, {0}
   38334:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38338:	strb	r0, [r0, #-0]
   3833c:	adcmi	r3, r2, #156	; 0x9c
   38340:	andge	r0, r0, #0
   38344:	rsbmi	r1, sp, #148, 20	; 0x94000
   38348:	stmda	r0, {}	; <UNPREDICTABLE>
   3834c:	eorsmi	r4, r7, #7733248	; 0x760000
   38350:	andcs	r0, r0, r0
   38354:	andmi	sl, r2, #95	; 0x5f
   38358:	andeq	r0, r0, r0
   3835c:	bicmi	ip, sp, r5, ror #26
   38360:	andeq	r0, r0, r0
   38364:	orrsmi	sp, r7, r4, lsl #15
   38368:	andeq	r0, r0, r0
   3836c:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   38370:	andeq	r0, r0, r0
   38374:	smlawbmi	lr, r0, r4, r8
   38378:	andeq	r0, r0, r0
   3837c:	rscsmi	r6, r8, r0, lsl #20
   38380:	andeq	r0, r0, r0
   38384:	sbcmi	r8, r3, r0, lsl #16
   38388:	andeq	r0, r0, r0
   3838c:	addmi	r4, pc, r0
   38390:	andeq	r0, r0, r0
   38394:	subsmi	r0, r9, r0
   38398:	andeq	r0, r0, r0
   3839c:	eormi	r0, r4, r0
   383a0:	andeq	r0, r0, r5, lsr r1
   383a4:			; <UNDEFINED> instruction: 0xfffffebc
   383a8:	svcvc	0x00f00000	; IMB
   383ac:			; <UNDEFINED> instruction: 0x001fffff
   383b0:	nop			; (mov r0, r0)
   383b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   383b8:	cmp	r3, #0
   383bc:	beq	383d4 <grisu3_diy_fp_encode_double@@Base+0xba4>
   383c0:	ldr	r3, [fp, #24]
   383c4:	vldr	d7, [r3]
   383c8:	vneg.f64	d7, d7
   383cc:	ldr	r3, [fp, #24]
   383d0:	vstr	d7, [r3]
   383d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   383d8:	mov	r0, r3
   383dc:	sub	sp, fp, #4
   383e0:	pop	{fp, pc}
   383e4:	push	{fp}		; (str fp, [sp, #-4]!)
   383e8:	add	fp, sp, #0
   383ec:	sub	sp, sp, #20
   383f0:	str	r0, [fp, #-8]
   383f4:	str	r1, [fp, #-12]
   383f8:	str	r2, [fp, #-16]
   383fc:	str	r3, [fp, #-20]	; 0xffffffec
   38400:	ldr	r1, [fp, #-20]	; 0xffffffec
   38404:	mov	r2, #0
   38408:	mov	r3, #0
   3840c:	strd	r2, [r1]
   38410:	ldr	r3, [fp, #-8]
   38414:	mov	r0, r3
   38418:	add	sp, fp, #0
   3841c:	pop	{fp}		; (ldr fp, [sp], #4)
   38420:	bx	lr
   38424:	push	{fp, lr}
   38428:	add	fp, sp, #4
   3842c:	sub	sp, sp, #88	; 0x58
   38430:	str	r0, [fp, #-56]	; 0xffffffc8
   38434:	str	r1, [fp, #-60]	; 0xffffffc4
   38438:	str	r2, [fp, #-64]	; 0xffffffc0
   3843c:	mov	r3, #0
   38440:	str	r3, [fp, #-12]
   38444:	mov	r3, #0
   38448:	str	r3, [fp, #-16]
   3844c:	mov	r2, #0
   38450:	mov	r3, #0
   38454:	strd	r2, [fp, #-28]	; 0xffffffe4
   38458:	mov	r3, #0
   3845c:	str	r3, [fp, #-32]	; 0xffffffe0
   38460:	mov	r3, #0
   38464:	str	r3, [fp, #-36]	; 0xffffffdc
   38468:	mov	r3, #0
   3846c:	str	r3, [fp, #-40]	; 0xffffffd8
   38470:	mov	r3, #0
   38474:	str	r3, [fp, #-44]	; 0xffffffd4
   38478:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3847c:	mov	r2, #0
   38480:	mov	r3, #0
   38484:	strd	r2, [r1]
   38488:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3848c:	add	r3, r3, #1
   38490:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38494:	add	r3, r2, r3
   38498:	str	r3, [fp, #-8]
   3849c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   384a0:	cmp	r3, #1000	; 0x3e8
   384a4:	ble	384b8 <grisu3_diy_fp_encode_double@@Base+0xc88>
   384a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   384ac:	add	r3, r3, #1000	; 0x3e8
   384b0:	add	r3, r3, #1
   384b4:	str	r3, [fp, #-8]
   384b8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   384bc:	ldr	r3, [fp, #-8]
   384c0:	cmp	r2, r3
   384c4:	bne	384d0 <grisu3_diy_fp_encode_double@@Base+0xca0>
   384c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   384cc:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   384d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   384d4:	str	r3, [fp, #-48]	; 0xffffffd0
   384d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   384dc:	ldrb	r3, [r3]
   384e0:	cmp	r3, #45	; 0x2d
   384e4:	bne	38514 <grisu3_diy_fp_encode_double@@Base+0xce4>
   384e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   384ec:	add	r3, r3, #1
   384f0:	str	r3, [fp, #-56]	; 0xffffffc8
   384f4:	mov	r3, #1
   384f8:	str	r3, [fp, #-12]
   384fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38500:	ldr	r3, [fp, #-8]
   38504:	cmp	r2, r3
   38508:	bne	38514 <grisu3_diy_fp_encode_double@@Base+0xce4>
   3850c:	mov	r3, #0
   38510:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38514:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38518:	ldrb	r3, [r3]
   3851c:	cmp	r3, #48	; 0x30
   38520:	bne	385c0 <grisu3_diy_fp_encode_double@@Base+0xd90>
   38524:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38528:	add	r3, r3, #1
   3852c:	str	r3, [fp, #-56]	; 0xffffffc8
   38530:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38534:	ldr	r3, [fp, #-8]
   38538:	cmp	r2, r3
   3853c:	beq	3859c <grisu3_diy_fp_encode_double@@Base+0xd6c>
   38540:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38544:	ldrb	r3, [r3]
   38548:	orr	r3, r3, #32
   3854c:	uxtb	r3, r3
   38550:	cmp	r3, #120	; 0x78
   38554:	bne	3859c <grisu3_diy_fp_encode_double@@Base+0xd6c>
   38558:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3855c:	ldr	r2, [fp, #-12]
   38560:	ldr	r1, [fp, #-8]
   38564:	ldr	r0, [fp, #-56]	; 0xffffffc8
   38568:	bl	383e4 <grisu3_diy_fp_encode_double@@Base+0xbb4>
   3856c:	str	r0, [fp, #-52]	; 0xffffffcc
   38570:	ldr	r2, [fp, #-52]	; 0xffffffcc
   38574:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38578:	cmp	r2, r3
   3857c:	bne	38588 <grisu3_diy_fp_encode_double@@Base+0xd58>
   38580:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38584:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38588:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3858c:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38590:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38594:	add	r3, r3, #1
   38598:	str	r3, [fp, #-56]	; 0xffffffc8
   3859c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   385a0:	ldr	r3, [fp, #-8]
   385a4:	cmp	r2, r3
   385a8:	beq	3861c <grisu3_diy_fp_encode_double@@Base+0xdec>
   385ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   385b0:	ldrb	r3, [r3]
   385b4:	cmp	r3, #48	; 0x30
   385b8:	beq	38590 <grisu3_diy_fp_encode_double@@Base+0xd60>
   385bc:	b	3861c <grisu3_diy_fp_encode_double@@Base+0xdec>
   385c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   385c4:	ldrb	r3, [r3]
   385c8:	cmp	r3, #48	; 0x30
   385cc:	bls	385e0 <grisu3_diy_fp_encode_double@@Base+0xdb0>
   385d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   385d4:	ldrb	r3, [r3]
   385d8:	cmp	r3, #57	; 0x39
   385dc:	bls	385fc <grisu3_diy_fp_encode_double@@Base+0xdcc>
   385e0:	ldr	r3, [fp, #-12]
   385e4:	cmp	r3, #0
   385e8:	bne	385f4 <grisu3_diy_fp_encode_double@@Base+0xdc4>
   385ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   385f0:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   385f4:	mov	r3, #0
   385f8:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   385fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38600:	add	r2, r3, #1
   38604:	str	r2, [fp, #-56]	; 0xffffffc8
   38608:	ldrb	r3, [r3]
   3860c:	sub	r3, r3, #48	; 0x30
   38610:	mov	r2, r3
   38614:	asr	r3, r2, #31
   38618:	strd	r2, [fp, #-28]	; 0xffffffe4
   3861c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38620:	str	r3, [fp, #-52]	; 0xffffffcc
   38624:	b	386d8 <grisu3_diy_fp_encode_double@@Base+0xea8>
   38628:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3862c:	add	r1, pc, #948	; 0x3b4
   38630:	ldrd	r0, [r1]
   38634:	cmp	r3, r1
   38638:	cmpeq	r2, r0
   3863c:	bls	3867c <grisu3_diy_fp_encode_double@@Base+0xe4c>
   38640:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38644:	ldrb	r3, [r3]
   38648:	cmp	r3, #52	; 0x34
   3864c:	movhi	r3, #1
   38650:	movls	r3, #0
   38654:	uxtb	r3, r3
   38658:	uxtb	r2, r3
   3865c:	mov	r3, #0
   38660:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   38664:	adds	r2, r2, r0
   38668:	adc	r3, r3, r1
   3866c:	strd	r2, [fp, #-28]	; 0xffffffe4
   38670:	mov	r3, #1
   38674:	str	r3, [fp, #-44]	; 0xffffffd4
   38678:	b	38708 <grisu3_diy_fp_encode_double@@Base+0xed8>
   3867c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38680:	mov	r2, #10
   38684:	mul	r2, r2, r3
   38688:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3868c:	mov	r1, #0
   38690:	mul	r3, r1, r3
   38694:	add	r1, r2, r3
   38698:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3869c:	mov	r2, #10
   386a0:	umull	r2, r3, r3, r2
   386a4:	add	r1, r1, r3
   386a8:	mov	r3, r1
   386ac:	ldr	r1, [fp, #-56]	; 0xffffffc8
   386b0:	add	r0, r1, #1
   386b4:	str	r0, [fp, #-56]	; 0xffffffc8
   386b8:	ldrb	r1, [r1]
   386bc:	uxtb	r0, r1
   386c0:	mov	r1, #0
   386c4:	adds	r2, r2, r0
   386c8:	adc	r3, r3, r1
   386cc:	subs	r2, r2, #48	; 0x30
   386d0:	sbc	r3, r3, #0
   386d4:	strd	r2, [fp, #-28]	; 0xffffffe4
   386d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   386dc:	ldr	r3, [fp, #-8]
   386e0:	cmp	r2, r3
   386e4:	beq	38708 <grisu3_diy_fp_encode_double@@Base+0xed8>
   386e8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   386ec:	ldrb	r3, [r3]
   386f0:	cmp	r3, #47	; 0x2f
   386f4:	bls	38708 <grisu3_diy_fp_encode_double@@Base+0xed8>
   386f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   386fc:	ldrb	r3, [r3]
   38700:	cmp	r3, #57	; 0x39
   38704:	bls	38628 <grisu3_diy_fp_encode_double@@Base+0xdf8>
   38708:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3870c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38710:	sub	r3, r2, r3
   38714:	str	r3, [fp, #-40]	; 0xffffffd8
   38718:	b	38734 <grisu3_diy_fp_encode_double@@Base+0xf04>
   3871c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38720:	add	r3, r3, #1
   38724:	str	r3, [fp, #-32]	; 0xffffffe0
   38728:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3872c:	add	r3, r3, #1
   38730:	str	r3, [fp, #-56]	; 0xffffffc8
   38734:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38738:	ldr	r3, [fp, #-8]
   3873c:	cmp	r2, r3
   38740:	beq	38754 <grisu3_diy_fp_encode_double@@Base+0xf24>
   38744:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38748:	ldrb	r3, [r3]
   3874c:	cmp	r3, #48	; 0x30
   38750:	beq	3871c <grisu3_diy_fp_encode_double@@Base+0xeec>
   38754:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38758:	ldr	r3, [fp, #-8]
   3875c:	cmp	r2, r3
   38760:	beq	387f0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   38764:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38768:	ldrb	r3, [r3]
   3876c:	cmp	r3, #48	; 0x30
   38770:	bls	387f0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   38774:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38778:	ldrb	r3, [r3]
   3877c:	cmp	r3, #57	; 0x39
   38780:	bhi	387f0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   38784:	mov	r3, #1
   38788:	str	r3, [fp, #-44]	; 0xffffffd4
   3878c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38790:	add	r3, r3, #1
   38794:	str	r3, [fp, #-32]	; 0xffffffe0
   38798:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3879c:	add	r3, r3, #1
   387a0:	str	r3, [fp, #-56]	; 0xffffffc8
   387a4:	b	387c0 <grisu3_diy_fp_encode_double@@Base+0xf90>
   387a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   387ac:	add	r3, r3, #1
   387b0:	str	r3, [fp, #-32]	; 0xffffffe0
   387b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   387b8:	add	r3, r3, #1
   387bc:	str	r3, [fp, #-56]	; 0xffffffc8
   387c0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   387c4:	ldr	r3, [fp, #-8]
   387c8:	cmp	r2, r3
   387cc:	beq	387f0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   387d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   387d4:	ldrb	r3, [r3]
   387d8:	cmp	r3, #47	; 0x2f
   387dc:	bls	387f0 <grisu3_diy_fp_encode_double@@Base+0xfc0>
   387e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   387e4:	ldrb	r3, [r3]
   387e8:	cmp	r3, #57	; 0x39
   387ec:	bls	387a8 <grisu3_diy_fp_encode_double@@Base+0xf78>
   387f0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   387f4:	ldr	r3, [fp, #-8]
   387f8:	cmp	r2, r3
   387fc:	beq	38a2c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   38800:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38804:	ldrb	r3, [r3]
   38808:	cmp	r3, #46	; 0x2e
   3880c:	bne	38a2c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   38810:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38814:	add	r3, r3, #1
   38818:	str	r3, [fp, #-56]	; 0xffffffc8
   3881c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38820:	str	r3, [fp, #-52]	; 0xffffffcc
   38824:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38828:	ldrb	r3, [r3]
   3882c:	cmp	r3, #47	; 0x2f
   38830:	bls	38844 <grisu3_diy_fp_encode_double@@Base+0x1014>
   38834:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38838:	ldrb	r3, [r3]
   3883c:	cmp	r3, #57	; 0x39
   38840:	bls	38914 <grisu3_diy_fp_encode_double@@Base+0x10e4>
   38844:	mov	r3, #0
   38848:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   3884c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   38850:	add	r1, pc, #400	; 0x190
   38854:	ldrd	r0, [r1]
   38858:	cmp	r3, r1
   3885c:	cmpeq	r2, r0
   38860:	bls	388ac <grisu3_diy_fp_encode_double@@Base+0x107c>
   38864:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38868:	cmp	r3, #0
   3886c:	bne	38948 <grisu3_diy_fp_encode_double@@Base+0x1118>
   38870:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38874:	ldrb	r3, [r3]
   38878:	cmp	r3, #52	; 0x34
   3887c:	movhi	r3, #1
   38880:	movls	r3, #0
   38884:	uxtb	r3, r3
   38888:	uxtb	r2, r3
   3888c:	mov	r3, #0
   38890:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   38894:	adds	r2, r2, r0
   38898:	adc	r3, r3, r1
   3889c:	strd	r2, [fp, #-28]	; 0xffffffe4
   388a0:	mov	r3, #1
   388a4:	str	r3, [fp, #-44]	; 0xffffffd4
   388a8:	b	38948 <grisu3_diy_fp_encode_double@@Base+0x1118>
   388ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   388b0:	mov	r2, #10
   388b4:	mul	r2, r2, r3
   388b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   388bc:	mov	r1, #0
   388c0:	mul	r3, r1, r3
   388c4:	add	r1, r2, r3
   388c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   388cc:	mov	r2, #10
   388d0:	umull	r2, r3, r3, r2
   388d4:	add	r1, r1, r3
   388d8:	mov	r3, r1
   388dc:	ldr	r1, [fp, #-56]	; 0xffffffc8
   388e0:	add	r0, r1, #1
   388e4:	str	r0, [fp, #-56]	; 0xffffffc8
   388e8:	ldrb	r1, [r1]
   388ec:	uxtb	r0, r1
   388f0:	mov	r1, #0
   388f4:	adds	r2, r2, r0
   388f8:	adc	r3, r3, r1
   388fc:	subs	r2, r2, #48	; 0x30
   38900:	sbc	r3, r3, #0
   38904:	strd	r2, [fp, #-28]	; 0xffffffe4
   38908:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3890c:	sub	r3, r3, #1
   38910:	str	r3, [fp, #-32]	; 0xffffffe0
   38914:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38918:	ldr	r3, [fp, #-8]
   3891c:	cmp	r2, r3
   38920:	beq	3894c <grisu3_diy_fp_encode_double@@Base+0x111c>
   38924:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38928:	ldrb	r3, [r3]
   3892c:	cmp	r3, #47	; 0x2f
   38930:	bls	3894c <grisu3_diy_fp_encode_double@@Base+0x111c>
   38934:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38938:	ldrb	r3, [r3]
   3893c:	cmp	r3, #57	; 0x39
   38940:	bls	3884c <grisu3_diy_fp_encode_double@@Base+0x101c>
   38944:	b	3894c <grisu3_diy_fp_encode_double@@Base+0x111c>
   38948:	nop			; (mov r0, r0)
   3894c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38950:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38954:	sub	r3, r2, r3
   38958:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3895c:	add	r3, r2, r3
   38960:	str	r3, [fp, #-40]	; 0xffffffd8
   38964:	b	38980 <grisu3_diy_fp_encode_double@@Base+0x1150>
   38968:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3896c:	add	r3, r3, #1
   38970:	str	r3, [fp, #-32]	; 0xffffffe0
   38974:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38978:	add	r3, r3, #1
   3897c:	str	r3, [fp, #-56]	; 0xffffffc8
   38980:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38984:	ldr	r3, [fp, #-8]
   38988:	cmp	r2, r3
   3898c:	beq	389a0 <grisu3_diy_fp_encode_double@@Base+0x1170>
   38990:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38994:	ldrb	r3, [r3]
   38998:	cmp	r3, #48	; 0x30
   3899c:	beq	38968 <grisu3_diy_fp_encode_double@@Base+0x1138>
   389a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   389a4:	ldr	r3, [fp, #-8]
   389a8:	cmp	r2, r3
   389ac:	beq	38a2c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   389b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   389b4:	ldrb	r3, [r3]
   389b8:	cmp	r3, #48	; 0x30
   389bc:	bls	38a2c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   389c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   389c4:	ldrb	r3, [r3]
   389c8:	cmp	r3, #57	; 0x39
   389cc:	bhi	38a2c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   389d0:	mov	r3, #1
   389d4:	str	r3, [fp, #-44]	; 0xffffffd4
   389d8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   389dc:	add	r3, r3, #1
   389e0:	str	r3, [fp, #-56]	; 0xffffffc8
   389e4:	b	389fc <grisu3_diy_fp_encode_double@@Base+0x11cc>
   389e8:	ldmibls	r9, {r3, r4, r7, r8, fp, ip, pc}
   389ec:	ldmibne	r9, {r0, r3, r4, r7, r8, fp, ip, pc}
   389f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   389f4:	add	r3, r3, #1
   389f8:	str	r3, [fp, #-56]	; 0xffffffc8
   389fc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38a00:	ldr	r3, [fp, #-8]
   38a04:	cmp	r2, r3
   38a08:	beq	38a2c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   38a0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38a10:	ldrb	r3, [r3]
   38a14:	cmp	r3, #47	; 0x2f
   38a18:	bls	38a2c <grisu3_diy_fp_encode_double@@Base+0x11fc>
   38a1c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38a20:	ldrb	r3, [r3]
   38a24:	cmp	r3, #57	; 0x39
   38a28:	bls	389f0 <grisu3_diy_fp_encode_double@@Base+0x11c0>
   38a2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38a30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38a34:	add	r3, r2, r3
   38a38:	str	r3, [fp, #-32]	; 0xffffffe0
   38a3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38a40:	ldr	r3, [fp, #-8]
   38a44:	cmp	r2, r3
   38a48:	beq	38bb4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   38a4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38a50:	ldrb	r3, [r3]
   38a54:	orr	r3, r3, #32
   38a58:	uxtb	r3, r3
   38a5c:	cmp	r3, #101	; 0x65
   38a60:	bne	38bb4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   38a64:	ldr	r2, [fp, #-8]
   38a68:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38a6c:	sub	r3, r2, r3
   38a70:	cmp	r3, #1
   38a74:	bgt	38a80 <grisu3_diy_fp_encode_double@@Base+0x1250>
   38a78:	mov	r3, #0
   38a7c:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38a80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38a84:	add	r3, r3, #1
   38a88:	str	r3, [fp, #-56]	; 0xffffffc8
   38a8c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38a90:	ldrb	r3, [r3]
   38a94:	cmp	r3, #43	; 0x2b
   38a98:	bne	38ac0 <grisu3_diy_fp_encode_double@@Base+0x1290>
   38a9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38aa0:	add	r3, r3, #1
   38aa4:	str	r3, [fp, #-56]	; 0xffffffc8
   38aa8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38aac:	ldr	r3, [fp, #-8]
   38ab0:	cmp	r2, r3
   38ab4:	bne	38afc <grisu3_diy_fp_encode_double@@Base+0x12cc>
   38ab8:	mov	r3, #0
   38abc:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38ac0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38ac4:	ldrb	r3, [r3]
   38ac8:	cmp	r3, #45	; 0x2d
   38acc:	bne	38afc <grisu3_diy_fp_encode_double@@Base+0x12cc>
   38ad0:	mov	r3, #1
   38ad4:	str	r3, [fp, #-16]
   38ad8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38adc:	add	r3, r3, #1
   38ae0:	str	r3, [fp, #-56]	; 0xffffffc8
   38ae4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38ae8:	ldr	r3, [fp, #-8]
   38aec:	cmp	r2, r3
   38af0:	bne	38afc <grisu3_diy_fp_encode_double@@Base+0x12cc>
   38af4:	mov	r3, #0
   38af8:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38afc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38b00:	ldrb	r3, [r3]
   38b04:	cmp	r3, #47	; 0x2f
   38b08:	bls	38b1c <grisu3_diy_fp_encode_double@@Base+0x12ec>
   38b0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38b10:	ldrb	r3, [r3]
   38b14:	cmp	r3, #57	; 0x39
   38b18:	bls	38b24 <grisu3_diy_fp_encode_double@@Base+0x12f4>
   38b1c:	mov	r3, #0
   38b20:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38b24:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38b28:	add	r2, r3, #1
   38b2c:	str	r2, [fp, #-56]	; 0xffffffc8
   38b30:	ldrb	r3, [r3]
   38b34:	sub	r3, r3, #48	; 0x30
   38b38:	str	r3, [fp, #-36]	; 0xffffffdc
   38b3c:	b	38b84 <grisu3_diy_fp_encode_double@@Base+0x1354>
   38b40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38b44:	cmp	r3, #32768	; 0x8000
   38b48:	bge	38b78 <grisu3_diy_fp_encode_double@@Base+0x1348>
   38b4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   38b50:	mov	r3, r2
   38b54:	lsl	r3, r3, #2
   38b58:	add	r3, r3, r2
   38b5c:	lsl	r3, r3, #1
   38b60:	mov	r2, r3
   38b64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38b68:	ldrb	r3, [r3]
   38b6c:	add	r3, r2, r3
   38b70:	sub	r3, r3, #48	; 0x30
   38b74:	str	r3, [fp, #-36]	; 0xffffffdc
   38b78:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38b7c:	add	r3, r3, #1
   38b80:	str	r3, [fp, #-56]	; 0xffffffc8
   38b84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38b88:	ldr	r3, [fp, #-8]
   38b8c:	cmp	r2, r3
   38b90:	beq	38bb4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   38b94:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38b98:	ldrb	r3, [r3]
   38b9c:	cmp	r3, #47	; 0x2f
   38ba0:	bls	38bb4 <grisu3_diy_fp_encode_double@@Base+0x1384>
   38ba4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38ba8:	ldrb	r3, [r3]
   38bac:	cmp	r3, #57	; 0x39
   38bb0:	bls	38b40 <grisu3_diy_fp_encode_double@@Base+0x1310>
   38bb4:	ldr	r3, [fp, #-16]
   38bb8:	cmp	r3, #0
   38bbc:	beq	38bcc <grisu3_diy_fp_encode_double@@Base+0x139c>
   38bc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38bc4:	rsb	r3, r3, #0
   38bc8:	b	38bd0 <grisu3_diy_fp_encode_double@@Base+0x13a0>
   38bcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38bd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   38bd4:	add	r3, r2, r3
   38bd8:	str	r3, [fp, #-32]	; 0xffffffe0
   38bdc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   38be0:	ldr	r3, [fp, #-8]
   38be4:	cmp	r2, r3
   38be8:	bne	38bf4 <grisu3_diy_fp_encode_double@@Base+0x13c4>
   38bec:	mov	r3, #0
   38bf0:	b	38c30 <grisu3_diy_fp_encode_double@@Base+0x1400>
   38bf4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38bf8:	str	r3, [sp, #20]
   38bfc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38c00:	str	r3, [sp, #16]
   38c04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38c08:	str	r3, [sp, #12]
   38c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38c10:	str	r3, [sp, #8]
   38c14:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   38c18:	strd	r2, [sp]
   38c1c:	ldr	r2, [fp, #-12]
   38c20:	ldr	r1, [fp, #-56]	; 0xffffffc8
   38c24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   38c28:	bl	37d6c <grisu3_diy_fp_encode_double@@Base+0x53c>
   38c2c:	mov	r3, r0
   38c30:	mov	r0, r3
   38c34:	sub	sp, fp, #4
   38c38:	pop	{fp, pc}
   38c3c:	push	{fp, lr}
   38c40:	add	fp, sp, #4
   38c44:	sub	sp, sp, #16
   38c48:	str	r0, [fp, #-8]
   38c4c:	str	r1, [fp, #-12]
   38c50:	str	r2, [fp, #-16]
   38c54:	ldr	r2, [fp, #-16]
   38c58:	ldr	r1, [fp, #-12]
   38c5c:	ldr	r0, [fp, #-8]
   38c60:	bl	38424 <grisu3_diy_fp_encode_double@@Base+0xbf4>
   38c64:	mov	r3, r0
   38c68:	mov	r0, r3
   38c6c:	sub	sp, fp, #4
   38c70:	pop	{fp, pc}
   38c74:	push	{fp, lr}
   38c78:	add	fp, sp, #4
   38c7c:	sub	sp, sp, #40	; 0x28
   38c80:	str	r0, [fp, #-32]	; 0xffffffe0
   38c84:	str	r1, [fp, #-36]	; 0xffffffdc
   38c88:	str	r2, [fp, #-40]	; 0xffffffd8
   38c8c:	ldr	r3, [pc, #180]	; 38d48 <grisu3_diy_fp_encode_double@@Base+0x1518>
   38c90:	str	r3, [fp, #-24]	; 0xffffffe8
   38c94:	sub	r3, fp, #20
   38c98:	mov	r2, r3
   38c9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   38ca0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   38ca4:	bl	38c3c <grisu3_diy_fp_encode_double@@Base+0x140c>
   38ca8:	str	r0, [fp, #-8]
   38cac:	vldr	d7, [fp, #-20]	; 0xffffffec
   38cb0:	vcvt.f32.f64	s15, d7
   38cb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38cb8:	vstr	s15, [r3]
   38cbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38cc0:	vldr	s15, [r3]
   38cc4:	vabs.f32	s15, s15
   38cc8:	vldr	s14, [pc, #116]	; 38d44 <grisu3_diy_fp_encode_double@@Base+0x1514>
   38ccc:	vcmp.f32	s15, s14
   38cd0:	vmrs	APSR_nzcv, fpscr
   38cd4:	movle	r3, #1
   38cd8:	movgt	r3, #0
   38cdc:	uxtb	r3, r3
   38ce0:	eor	r3, r3, #1
   38ce4:	uxtb	r3, r3
   38ce8:	cmp	r3, #0
   38cec:	beq	38cf8 <grisu3_diy_fp_encode_double@@Base+0x14c8>
   38cf0:	mov	r3, #1
   38cf4:	b	38cfc <grisu3_diy_fp_encode_double@@Base+0x14cc>
   38cf8:	mov	r3, #0
   38cfc:	cmp	r3, #0
   38d00:	beq	38d34 <grisu3_diy_fp_encode_double@@Base+0x1504>
   38d04:	vldr	d7, [fp, #-20]	; 0xffffffec
   38d08:	vcmpe.f64	d7, #0.0
   38d0c:	vmrs	APSR_nzcv, fpscr
   38d10:	bpl	38d20 <grisu3_diy_fp_encode_double@@Base+0x14f0>
   38d14:	vldr	s15, [fp, #-24]	; 0xffffffe8
   38d18:	vneg.f32	s15, s15
   38d1c:	b	38d24 <grisu3_diy_fp_encode_double@@Base+0x14f4>
   38d20:	vldr	s15, [fp, #-24]	; 0xffffffe8
   38d24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38d28:	vstr	s15, [r3]
   38d2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38d30:	b	38d38 <grisu3_diy_fp_encode_double@@Base+0x1508>
   38d34:	ldr	r3, [fp, #-8]
   38d38:	mov	r0, r3
   38d3c:	sub	sp, fp, #4
   38d40:	pop	{fp, pc}
   38d44:	svcvc	0x007fffff
   38d48:	svcvc	0x00800000
   38d4c:	push	{fp}		; (str fp, [sp, #-4]!)
   38d50:	add	fp, sp, #0
   38d54:	sub	sp, sp, #12
   38d58:	str	r0, [fp, #-8]
   38d5c:	ldr	r3, [fp, #-8]
   38d60:	cmp	r3, #5
   38d64:	addls	pc, pc, r3, lsl #2
   38d68:	b	38dcc <grisu3_diy_fp_encode_double@@Base+0x159c>
   38d6c:	b	38d84 <grisu3_diy_fp_encode_double@@Base+0x1554>
   38d70:	b	38da8 <grisu3_diy_fp_encode_double@@Base+0x1578>
   38d74:	b	38d90 <grisu3_diy_fp_encode_double@@Base+0x1560>
   38d78:	b	38d9c <grisu3_diy_fp_encode_double@@Base+0x156c>
   38d7c:	b	38db4 <grisu3_diy_fp_encode_double@@Base+0x1584>
   38d80:	b	38dc0 <grisu3_diy_fp_encode_double@@Base+0x1590>
   38d84:	ldr	r3, [pc, #88]	; 38de4 <grisu3_diy_fp_encode_double@@Base+0x15b4>
   38d88:	add	r3, pc, r3
   38d8c:	b	38dd4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   38d90:	ldr	r3, [pc, #80]	; 38de8 <grisu3_diy_fp_encode_double@@Base+0x15b8>
   38d94:	add	r3, pc, r3
   38d98:	b	38dd4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   38d9c:	ldr	r3, [pc, #72]	; 38dec <grisu3_diy_fp_encode_double@@Base+0x15bc>
   38da0:	add	r3, pc, r3
   38da4:	b	38dd4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   38da8:	ldr	r3, [pc, #64]	; 38df0 <grisu3_diy_fp_encode_double@@Base+0x15c0>
   38dac:	add	r3, pc, r3
   38db0:	b	38dd4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   38db4:	ldr	r3, [pc, #56]	; 38df4 <grisu3_diy_fp_encode_double@@Base+0x15c4>
   38db8:	add	r3, pc, r3
   38dbc:	b	38dd4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   38dc0:	ldr	r3, [pc, #48]	; 38df8 <grisu3_diy_fp_encode_double@@Base+0x15c8>
   38dc4:	add	r3, pc, r3
   38dc8:	b	38dd4 <grisu3_diy_fp_encode_double@@Base+0x15a4>
   38dcc:	ldr	r3, [pc, #40]	; 38dfc <grisu3_diy_fp_encode_double@@Base+0x15cc>
   38dd0:	add	r3, pc, r3
   38dd4:	mov	r0, r3
   38dd8:	add	sp, fp, #0
   38ddc:	pop	{fp}		; (ldr fp, [sp], #4)
   38de0:	bx	lr
   38de4:	andeq	r7, r1, r0, lsl #10
   38de8:	strdeq	r7, [r1], -r8
   38dec:	andeq	r7, r1, r0, lsl #10
   38df0:	andeq	r7, r1, r4, lsl #10
   38df4:	andeq	r7, r1, ip, lsl #10
   38df8:	andeq	r7, r1, r4, lsl r5
   38dfc:	andeq	r7, r1, r0, lsr #10
   38e00:	push	{fp}		; (str fp, [sp, #-4]!)
   38e04:	add	fp, sp, #0
   38e08:	sub	sp, sp, #28
   38e0c:	str	r0, [fp, #-24]	; 0xffffffe8
   38e10:	str	r1, [fp, #-28]	; 0xffffffe4
   38e14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38e18:	ldr	r3, [pc, #156]	; 38ebc <grisu3_diy_fp_encode_double@@Base+0x168c>
   38e1c:	umull	r1, r3, r3, r2
   38e20:	lsr	r1, r3, #1
   38e24:	mov	r3, r1
   38e28:	lsl	r3, r3, #1
   38e2c:	add	r3, r3, r1
   38e30:	sub	r3, r2, r3
   38e34:	str	r3, [fp, #-12]
   38e38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38e3c:	lsl	r3, r3, #2
   38e40:	ldr	r2, [pc, #116]	; 38ebc <grisu3_diy_fp_encode_double@@Base+0x168c>
   38e44:	umull	r2, r3, r2, r3
   38e48:	lsr	r3, r3, #1
   38e4c:	add	r3, r3, #3
   38e50:	bic	r3, r3, #3
   38e54:	str	r3, [fp, #-8]
   38e58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38e5c:	and	r3, r3, #128	; 0x80
   38e60:	str	r3, [fp, #-16]
   38e64:	ldr	r3, [fp, #-16]
   38e68:	cmp	r3, #0
   38e6c:	bne	38ea8 <grisu3_diy_fp_encode_double@@Base+0x1678>
   38e70:	ldr	r3, [fp, #-12]
   38e74:	cmp	r3, #1
   38e78:	beq	38e98 <grisu3_diy_fp_encode_double@@Base+0x1668>
   38e7c:	cmp	r3, #2
   38e80:	beq	38e88 <grisu3_diy_fp_encode_double@@Base+0x1658>
   38e84:	b	38ea8 <grisu3_diy_fp_encode_double@@Base+0x1678>
   38e88:	ldr	r3, [fp, #-8]
   38e8c:	sub	r3, r3, #1
   38e90:	str	r3, [fp, #-8]
   38e94:	b	38ea8 <grisu3_diy_fp_encode_double@@Base+0x1678>
   38e98:	ldr	r3, [fp, #-8]
   38e9c:	sub	r3, r3, #2
   38ea0:	str	r3, [fp, #-8]
   38ea4:	nop			; (mov r0, r0)
   38ea8:	ldr	r3, [fp, #-8]
   38eac:	mov	r0, r3
   38eb0:	add	sp, fp, #0
   38eb4:	pop	{fp}		; (ldr fp, [sp], #4)
   38eb8:	bx	lr
   38ebc:	bge	feae3970 <__bss_end__@@Base+0xfea814c4>
   38ec0:	push	{fp}		; (str fp, [sp, #-4]!)
   38ec4:	add	fp, sp, #0
   38ec8:	sub	sp, sp, #20
   38ecc:	str	r0, [fp, #-16]
   38ed0:	ldr	r3, [fp, #-16]
   38ed4:	and	r3, r3, #3
   38ed8:	str	r3, [fp, #-8]
   38edc:	ldr	r3, [fp, #-16]
   38ee0:	lsr	r2, r3, #2
   38ee4:	mov	r3, r2
   38ee8:	lsl	r3, r3, #1
   38eec:	add	r3, r3, r2
   38ef0:	str	r3, [fp, #-12]
   38ef4:	ldr	r3, [fp, #-8]
   38ef8:	cmp	r3, #2
   38efc:	beq	38f14 <grisu3_diy_fp_encode_double@@Base+0x16e4>
   38f00:	cmp	r3, #3
   38f04:	bne	38f20 <grisu3_diy_fp_encode_double@@Base+0x16f0>
   38f08:	ldr	r3, [fp, #-12]
   38f0c:	add	r3, r3, #2
   38f10:	b	38f24 <grisu3_diy_fp_encode_double@@Base+0x16f4>
   38f14:	ldr	r3, [fp, #-12]
   38f18:	add	r3, r3, #1
   38f1c:	b	38f24 <grisu3_diy_fp_encode_double@@Base+0x16f4>
   38f20:	ldr	r3, [fp, #-12]
   38f24:	mov	r0, r3
   38f28:	add	sp, fp, #0
   38f2c:	pop	{fp}		; (ldr fp, [sp], #4)
   38f30:	bx	lr
   38f34:	push	{fp}		; (str fp, [sp, #-4]!)
   38f38:	add	fp, sp, #0
   38f3c:	sub	sp, sp, #52	; 0x34
   38f40:	str	r0, [fp, #-40]	; 0xffffffd8
   38f44:	str	r1, [fp, #-44]	; 0xffffffd4
   38f48:	str	r2, [fp, #-48]	; 0xffffffd0
   38f4c:	str	r3, [fp, #-52]	; 0xffffffcc
   38f50:	ldr	r3, [pc, #920]	; 392f0 <grisu3_diy_fp_encode_double@@Base+0x1ac0>
   38f54:	add	r3, pc, r3
   38f58:	str	r3, [fp, #-20]	; 0xffffffec
   38f5c:	ldr	r3, [pc, #912]	; 392f4 <grisu3_diy_fp_encode_double@@Base+0x1ac4>
   38f60:	add	r3, pc, r3
   38f64:	str	r3, [fp, #-24]	; 0xffffffe8
   38f68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38f6c:	str	r3, [fp, #-28]	; 0xffffffe4
   38f70:	ldr	r3, [fp, #4]
   38f74:	and	r3, r3, #128	; 0x80
   38f78:	str	r3, [fp, #-32]	; 0xffffffe0
   38f7c:	mov	r3, #0
   38f80:	str	r3, [fp, #-12]
   38f84:	mov	r3, #3
   38f88:	str	r3, [fp, #-16]
   38f8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38f90:	cmp	r3, #0
   38f94:	bne	38fa4 <grisu3_diy_fp_encode_double@@Base+0x1774>
   38f98:	mov	r3, #2
   38f9c:	str	r3, [fp, #-16]
   38fa0:	b	39294 <grisu3_diy_fp_encode_double@@Base+0x1a64>
   38fa4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38fa8:	ldr	r3, [r3]
   38fac:	str	r3, [fp, #-12]
   38fb0:	ldr	r3, [fp, #4]
   38fb4:	bic	r3, r3, #224	; 0xe0
   38fb8:	str	r3, [fp, #4]
   38fbc:	ldr	r3, [fp, #4]
   38fc0:	cmp	r3, #0
   38fc4:	beq	38fd4 <grisu3_diy_fp_encode_double@@Base+0x17a4>
   38fc8:	cmp	r3, #1
   38fcc:	beq	38fe0 <grisu3_diy_fp_encode_double@@Base+0x17b0>
   38fd0:	b	39294 <grisu3_diy_fp_encode_double@@Base+0x1a64>
   38fd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   38fd8:	str	r3, [fp, #-8]
   38fdc:	b	38fec <grisu3_diy_fp_encode_double@@Base+0x17bc>
   38fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38fe4:	str	r3, [fp, #-8]
   38fe8:	nop			; (mov r0, r0)
   38fec:	mov	r3, #0
   38ff0:	str	r3, [fp, #-16]
   38ff4:	b	390f8 <grisu3_diy_fp_encode_double@@Base+0x18c8>
   38ff8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38ffc:	ldrb	r3, [r3]
   39000:	lsr	r3, r3, #2
   39004:	uxtb	r3, r3
   39008:	mov	r2, r3
   3900c:	ldr	r3, [fp, #-8]
   39010:	add	r3, r3, r2
   39014:	ldrb	r2, [r3]
   39018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3901c:	strb	r2, [r3]
   39020:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39024:	add	r3, r3, #1
   39028:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3902c:	ldrb	r2, [r2]
   39030:	lsl	r2, r2, #4
   39034:	and	r2, r2, #48	; 0x30
   39038:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3903c:	add	r1, r1, #1
   39040:	ldrb	r1, [r1]
   39044:	lsr	r1, r1, #4
   39048:	uxtb	r1, r1
   3904c:	orr	r2, r2, r1
   39050:	mov	r1, r2
   39054:	ldr	r2, [fp, #-8]
   39058:	add	r2, r2, r1
   3905c:	ldrb	r2, [r2]
   39060:	strb	r2, [r3]
   39064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39068:	add	r3, r3, #2
   3906c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39070:	add	r2, r2, #1
   39074:	ldrb	r2, [r2]
   39078:	lsl	r2, r2, #2
   3907c:	and	r2, r2, #60	; 0x3c
   39080:	ldr	r1, [fp, #-44]	; 0xffffffd4
   39084:	add	r1, r1, #2
   39088:	ldrb	r1, [r1]
   3908c:	lsr	r1, r1, #6
   39090:	uxtb	r1, r1
   39094:	orr	r2, r2, r1
   39098:	mov	r1, r2
   3909c:	ldr	r2, [fp, #-8]
   390a0:	add	r2, r2, r1
   390a4:	ldrb	r2, [r2]
   390a8:	strb	r2, [r3]
   390ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   390b0:	add	r3, r3, #3
   390b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   390b8:	add	r2, r2, #2
   390bc:	ldrb	r2, [r2]
   390c0:	and	r2, r2, #63	; 0x3f
   390c4:	ldr	r1, [fp, #-8]
   390c8:	add	r2, r1, r2
   390cc:	ldrb	r2, [r2]
   390d0:	strb	r2, [r3]
   390d4:	ldr	r3, [fp, #-12]
   390d8:	sub	r3, r3, #3
   390dc:	str	r3, [fp, #-12]
   390e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   390e4:	add	r3, r3, #4
   390e8:	str	r3, [fp, #-40]	; 0xffffffd8
   390ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   390f0:	add	r3, r3, #3
   390f4:	str	r3, [fp, #-44]	; 0xffffffd4
   390f8:	ldr	r3, [fp, #-12]
   390fc:	cmp	r3, #2
   39100:	bhi	38ff8 <grisu3_diy_fp_encode_double@@Base+0x17c8>
   39104:	ldr	r3, [fp, #-12]
   39108:	cmp	r3, #1
   3910c:	beq	391e0 <grisu3_diy_fp_encode_double@@Base+0x19b0>
   39110:	cmp	r3, #2
   39114:	bne	39274 <grisu3_diy_fp_encode_double@@Base+0x1a44>
   39118:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3911c:	ldrb	r3, [r3]
   39120:	lsr	r3, r3, #2
   39124:	uxtb	r3, r3
   39128:	mov	r2, r3
   3912c:	ldr	r3, [fp, #-8]
   39130:	add	r3, r3, r2
   39134:	ldrb	r2, [r3]
   39138:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3913c:	strb	r2, [r3]
   39140:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39144:	add	r3, r3, #1
   39148:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3914c:	ldrb	r2, [r2]
   39150:	lsl	r2, r2, #4
   39154:	and	r2, r2, #48	; 0x30
   39158:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3915c:	add	r1, r1, #1
   39160:	ldrb	r1, [r1]
   39164:	lsr	r1, r1, #4
   39168:	uxtb	r1, r1
   3916c:	orr	r2, r2, r1
   39170:	mov	r1, r2
   39174:	ldr	r2, [fp, #-8]
   39178:	add	r2, r2, r1
   3917c:	ldrb	r2, [r2]
   39180:	strb	r2, [r3]
   39184:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39188:	add	r3, r3, #2
   3918c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39190:	add	r2, r2, #1
   39194:	ldrb	r2, [r2]
   39198:	lsl	r2, r2, #2
   3919c:	and	r2, r2, #60	; 0x3c
   391a0:	ldr	r1, [fp, #-8]
   391a4:	add	r2, r1, r2
   391a8:	ldrb	r2, [r2]
   391ac:	strb	r2, [r3]
   391b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   391b4:	add	r3, r3, #3
   391b8:	str	r3, [fp, #-40]	; 0xffffffd8
   391bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   391c0:	cmp	r3, #0
   391c4:	beq	39280 <grisu3_diy_fp_encode_double@@Base+0x1a50>
   391c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   391cc:	add	r2, r3, #1
   391d0:	str	r2, [fp, #-40]	; 0xffffffd8
   391d4:	mov	r2, #61	; 0x3d
   391d8:	strb	r2, [r3]
   391dc:	b	39280 <grisu3_diy_fp_encode_double@@Base+0x1a50>
   391e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   391e4:	ldrb	r3, [r3]
   391e8:	lsr	r3, r3, #2
   391ec:	uxtb	r3, r3
   391f0:	mov	r2, r3
   391f4:	ldr	r3, [fp, #-8]
   391f8:	add	r3, r3, r2
   391fc:	ldrb	r2, [r3]
   39200:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39204:	strb	r2, [r3]
   39208:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3920c:	add	r3, r3, #1
   39210:	ldr	r2, [fp, #-44]	; 0xffffffd4
   39214:	ldrb	r2, [r2]
   39218:	lsl	r2, r2, #4
   3921c:	and	r2, r2, #48	; 0x30
   39220:	ldr	r1, [fp, #-8]
   39224:	add	r2, r1, r2
   39228:	ldrb	r2, [r2]
   3922c:	strb	r2, [r3]
   39230:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39234:	add	r3, r3, #2
   39238:	str	r3, [fp, #-40]	; 0xffffffd8
   3923c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39240:	cmp	r3, #0
   39244:	beq	39288 <grisu3_diy_fp_encode_double@@Base+0x1a58>
   39248:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3924c:	add	r2, r3, #1
   39250:	str	r2, [fp, #-40]	; 0xffffffd8
   39254:	mov	r2, #61	; 0x3d
   39258:	strb	r2, [r3]
   3925c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39260:	add	r2, r3, #1
   39264:	str	r2, [fp, #-40]	; 0xffffffd8
   39268:	mov	r2, #61	; 0x3d
   3926c:	strb	r2, [r3]
   39270:	b	39288 <grisu3_diy_fp_encode_double@@Base+0x1a58>
   39274:	mov	r3, #0
   39278:	str	r3, [fp, #-32]	; 0xffffffe0
   3927c:	b	3928c <grisu3_diy_fp_encode_double@@Base+0x1a5c>
   39280:	nop			; (mov r0, r0)
   39284:	b	3928c <grisu3_diy_fp_encode_double@@Base+0x1a5c>
   39288:	nop			; (mov r0, r0)
   3928c:	mov	r3, #0
   39290:	str	r3, [fp, #-12]
   39294:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39298:	cmp	r3, #0
   3929c:	beq	392b8 <grisu3_diy_fp_encode_double@@Base+0x1a88>
   392a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   392a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   392a8:	sub	r3, r2, r3
   392ac:	mov	r2, r3
   392b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   392b4:	str	r2, [r3]
   392b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   392bc:	cmp	r3, #0
   392c0:	beq	392dc <grisu3_diy_fp_encode_double@@Base+0x1aac>
   392c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   392c8:	ldr	r2, [r3]
   392cc:	ldr	r3, [fp, #-12]
   392d0:	sub	r2, r2, r3
   392d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   392d8:	str	r2, [r3]
   392dc:	ldr	r3, [fp, #-16]
   392e0:	mov	r0, r3
   392e4:	add	sp, fp, #0
   392e8:	pop	{fp}		; (ldr fp, [sp], #4)
   392ec:	bx	lr
   392f0:	andeq	r7, r1, ip, lsr #7
   392f4:	andeq	r7, r1, r4, ror #7
   392f8:	push	{fp}		; (str fp, [sp, #-4]!)
   392fc:	add	fp, sp, #0
   39300:	sub	sp, sp, #60	; 0x3c
   39304:	str	r0, [fp, #-48]	; 0xffffffd0
   39308:	str	r1, [fp, #-52]	; 0xffffffcc
   3930c:	str	r2, [fp, #-56]	; 0xffffffc8
   39310:	str	r3, [fp, #-60]	; 0xffffffc4
   39314:	mov	r3, #0
   39318:	str	r3, [fp, #-8]
   3931c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39320:	str	r3, [fp, #-36]	; 0xffffffdc
   39324:	mvn	r3, #0
   39328:	str	r3, [fp, #-20]	; 0xffffffec
   3932c:	mvn	r3, #0
   39330:	str	r3, [fp, #-24]	; 0xffffffe8
   39334:	ldr	r3, [pc, #1376]	; 3989c <grisu3_diy_fp_encode_double@@Base+0x206c>
   39338:	add	r3, pc, r3
   3933c:	str	r3, [fp, #-32]	; 0xffffffe0
   39340:	ldr	r3, [fp, #4]
   39344:	and	r3, r3, #32
   39348:	str	r3, [fp, #-40]	; 0xffffffd8
   3934c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39350:	cmp	r3, #0
   39354:	beq	39364 <grisu3_diy_fp_encode_double@@Base+0x1b34>
   39358:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3935c:	ldr	r3, [r3]
   39360:	str	r3, [fp, #-24]	; 0xffffffe8
   39364:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39368:	str	r3, [fp, #-28]	; 0xffffffe4
   3936c:	ldr	r3, [fp, #4]
   39370:	bic	r3, r3, #224	; 0xe0
   39374:	str	r3, [fp, #4]
   39378:	ldr	r3, [fp, #4]
   3937c:	cmp	r3, #0
   39380:	beq	39390 <grisu3_diy_fp_encode_double@@Base+0x1b60>
   39384:	cmp	r3, #1
   39388:	beq	393b8 <grisu3_diy_fp_encode_double@@Base+0x1b88>
   3938c:	b	393e0 <grisu3_diy_fp_encode_double@@Base+0x1bb0>
   39390:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39394:	cmp	r3, #0
   39398:	beq	393a8 <grisu3_diy_fp_encode_double@@Base+0x1b78>
   3939c:	ldr	r3, [pc, #1276]	; 398a0 <grisu3_diy_fp_encode_double@@Base+0x2070>
   393a0:	add	r3, pc, r3
   393a4:	b	393b0 <grisu3_diy_fp_encode_double@@Base+0x1b80>
   393a8:	ldr	r3, [pc, #1268]	; 398a4 <grisu3_diy_fp_encode_double@@Base+0x2074>
   393ac:	add	r3, pc, r3
   393b0:	str	r3, [fp, #-32]	; 0xffffffe0
   393b4:	b	393ec <grisu3_diy_fp_encode_double@@Base+0x1bbc>
   393b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   393bc:	cmp	r3, #0
   393c0:	beq	393d0 <grisu3_diy_fp_encode_double@@Base+0x1ba0>
   393c4:	ldr	r3, [pc, #1244]	; 398a8 <grisu3_diy_fp_encode_double@@Base+0x2078>
   393c8:	add	r3, pc, r3
   393cc:	b	393d8 <grisu3_diy_fp_encode_double@@Base+0x1ba8>
   393d0:	ldr	r3, [pc, #1236]	; 398ac <grisu3_diy_fp_encode_double@@Base+0x207c>
   393d4:	add	r3, pc, r3
   393d8:	str	r3, [fp, #-32]	; 0xffffffe0
   393dc:	b	393ec <grisu3_diy_fp_encode_double@@Base+0x1bbc>
   393e0:	mov	r3, #3
   393e4:	str	r3, [fp, #-8]
   393e8:	b	396d4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   393ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   393f0:	cmp	r3, #0
   393f4:	beq	396c8 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   393f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   393fc:	ldr	r3, [r3]
   39400:	cmp	r3, #0
   39404:	beq	396c8 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   39408:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3940c:	ldr	r3, [r3]
   39410:	str	r3, [fp, #-20]	; 0xffffffec
   39414:	b	396c8 <grisu3_diy_fp_encode_double@@Base+0x1e98>
   39418:	mov	r3, #0
   3941c:	str	r3, [fp, #-12]
   39420:	b	395e8 <grisu3_diy_fp_encode_double@@Base+0x1db8>
   39424:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39428:	ldr	r3, [fp, #-12]
   3942c:	cmp	r2, r3
   39430:	bne	39450 <grisu3_diy_fp_encode_double@@Base+0x1c20>
   39434:	ldr	r3, [fp, #-12]
   39438:	str	r3, [fp, #-16]
   3943c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39440:	ldr	r3, [fp, #-12]
   39444:	sub	r3, r2, r3
   39448:	str	r3, [fp, #-24]	; 0xffffffe8
   3944c:	b	39724 <grisu3_diy_fp_encode_double@@Base+0x1ef4>
   39450:	ldr	r2, [fp, #-52]	; 0xffffffcc
   39454:	ldr	r3, [fp, #-12]
   39458:	add	r3, r2, r3
   3945c:	ldrb	r3, [r3]
   39460:	mov	r2, r3
   39464:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39468:	add	r3, r3, r2
   3946c:	ldrb	r1, [r3]
   39470:	sub	r2, fp, #44	; 0x2c
   39474:	ldr	r3, [fp, #-12]
   39478:	add	r3, r2, r3
   3947c:	mov	r2, r1
   39480:	strb	r2, [r3]
   39484:	sub	r2, fp, #44	; 0x2c
   39488:	ldr	r3, [fp, #-12]
   3948c:	add	r3, r2, r3
   39490:	ldrb	r2, [r3]
   39494:	ldr	r3, [pc, #1044]	; 398b0 <grisu3_diy_fp_encode_double@@Base+0x2080>
   39498:	add	r3, pc, r3
   3949c:	ldrb	r3, [r3]
   394a0:	cmp	r2, r3
   394a4:	bcc	395dc <grisu3_diy_fp_encode_double@@Base+0x1dac>
   394a8:	sub	r2, fp, #44	; 0x2c
   394ac:	ldr	r3, [fp, #-12]
   394b0:	add	r3, r2, r3
   394b4:	ldrb	r2, [r3]
   394b8:	ldr	r3, [pc, #1012]	; 398b4 <grisu3_diy_fp_encode_double@@Base+0x2084>
   394bc:	add	r3, pc, r3
   394c0:	ldrb	r3, [r3]
   394c4:	cmp	r2, r3
   394c8:	bne	394f4 <grisu3_diy_fp_encode_double@@Base+0x1cc4>
   394cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   394d0:	add	r3, r3, #1
   394d4:	str	r3, [fp, #-52]	; 0xffffffcc
   394d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   394dc:	sub	r3, r3, #1
   394e0:	str	r3, [fp, #-24]	; 0xffffffe8
   394e4:	ldr	r3, [fp, #-12]
   394e8:	sub	r3, r3, #1
   394ec:	str	r3, [fp, #-12]
   394f0:	b	395dc <grisu3_diy_fp_encode_double@@Base+0x1dac>
   394f4:	ldr	r3, [fp, #-12]
   394f8:	str	r3, [fp, #-16]
   394fc:	sub	r2, fp, #44	; 0x2c
   39500:	ldr	r3, [fp, #-12]
   39504:	add	r3, r2, r3
   39508:	ldrb	r2, [r3]
   3950c:	ldr	r3, [pc, #932]	; 398b8 <grisu3_diy_fp_encode_double@@Base+0x2088>
   39510:	add	r3, pc, r3
   39514:	ldrb	r3, [r3]
   39518:	cmp	r2, r3
   3951c:	bne	395c8 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   39520:	ldr	r3, [fp, #-12]
   39524:	add	r3, r3, #1
   39528:	str	r3, [fp, #-12]
   3952c:	b	395a4 <grisu3_diy_fp_encode_double@@Base+0x1d74>
   39530:	ldr	r2, [fp, #-52]	; 0xffffffcc
   39534:	ldr	r3, [fp, #-12]
   39538:	add	r3, r2, r3
   3953c:	ldrb	r3, [r3]
   39540:	mov	r2, r3
   39544:	ldr	r3, [fp, #-32]	; 0xffffffe0
   39548:	add	r3, r3, r2
   3954c:	ldrb	r2, [r3]
   39550:	ldr	r3, [pc, #868]	; 398bc <grisu3_diy_fp_encode_double@@Base+0x208c>
   39554:	add	r3, pc, r3
   39558:	ldrb	r3, [r3]
   3955c:	cmp	r2, r3
   39560:	beq	39598 <grisu3_diy_fp_encode_double@@Base+0x1d68>
   39564:	ldr	r2, [fp, #-52]	; 0xffffffcc
   39568:	ldr	r3, [fp, #-12]
   3956c:	add	r3, r2, r3
   39570:	ldrb	r3, [r3]
   39574:	mov	r2, r3
   39578:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3957c:	add	r3, r3, r2
   39580:	ldrb	r2, [r3]
   39584:	ldr	r3, [pc, #820]	; 398c0 <grisu3_diy_fp_encode_double@@Base+0x2090>
   39588:	add	r3, pc, r3
   3958c:	ldrb	r3, [r3]
   39590:	cmp	r2, r3
   39594:	bne	395c4 <grisu3_diy_fp_encode_double@@Base+0x1d94>
   39598:	ldr	r3, [fp, #-12]
   3959c:	add	r3, r3, #1
   395a0:	str	r3, [fp, #-12]
   395a4:	ldr	r2, [fp, #-12]
   395a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   395ac:	cmp	r2, r3
   395b0:	bcs	395c8 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   395b4:	ldr	r3, [fp, #-12]
   395b8:	cmp	r3, #7
   395bc:	bls	39530 <grisu3_diy_fp_encode_double@@Base+0x1d00>
   395c0:	b	395c8 <grisu3_diy_fp_encode_double@@Base+0x1d98>
   395c4:	nop			; (mov r0, r0)
   395c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   395cc:	ldr	r3, [fp, #-12]
   395d0:	sub	r3, r2, r3
   395d4:	str	r3, [fp, #-24]	; 0xffffffe8
   395d8:	b	39724 <grisu3_diy_fp_encode_double@@Base+0x1ef4>
   395dc:	ldr	r3, [fp, #-12]
   395e0:	add	r3, r3, #1
   395e4:	str	r3, [fp, #-12]
   395e8:	ldr	r3, [fp, #-12]
   395ec:	cmp	r3, #3
   395f0:	bls	39424 <grisu3_diy_fp_encode_double@@Base+0x1bf4>
   395f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   395f8:	cmp	r3, #2
   395fc:	bls	3986c <grisu3_diy_fp_encode_double@@Base+0x203c>
   39600:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   39604:	lsl	r3, r3, #2
   39608:	sxtb	r2, r3
   3960c:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   39610:	lsr	r3, r3, #4
   39614:	uxtb	r3, r3
   39618:	sxtb	r3, r3
   3961c:	orr	r3, r2, r3
   39620:	sxtb	r3, r3
   39624:	uxtb	r2, r3
   39628:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3962c:	strb	r2, [r3]
   39630:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39634:	add	r3, r3, #1
   39638:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   3963c:	lsl	r2, r2, #4
   39640:	sxtb	r1, r2
   39644:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   39648:	lsr	r2, r2, #2
   3964c:	uxtb	r2, r2
   39650:	sxtb	r2, r2
   39654:	orr	r2, r1, r2
   39658:	sxtb	r2, r2
   3965c:	uxtb	r2, r2
   39660:	strb	r2, [r3]
   39664:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39668:	add	r3, r3, #2
   3966c:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   39670:	lsl	r2, r2, #6
   39674:	sxtb	r1, r2
   39678:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   3967c:	sxtb	r2, r2
   39680:	orr	r2, r1, r2
   39684:	sxtb	r2, r2
   39688:	uxtb	r2, r2
   3968c:	strb	r2, [r3]
   39690:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39694:	add	r3, r3, #3
   39698:	str	r3, [fp, #-48]	; 0xffffffd0
   3969c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   396a0:	add	r3, r3, #4
   396a4:	str	r3, [fp, #-52]	; 0xffffffcc
   396a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   396ac:	sub	r3, r3, #3
   396b0:	str	r3, [fp, #-20]	; 0xffffffec
   396b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   396b8:	sub	r3, r3, #4
   396bc:	str	r3, [fp, #-24]	; 0xffffffe8
   396c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   396c4:	str	r3, [fp, #-28]	; 0xffffffe4
   396c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   396cc:	cmp	r3, #0
   396d0:	bne	39418 <grisu3_diy_fp_encode_double@@Base+0x1be8>
   396d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   396d8:	cmp	r3, #0
   396dc:	beq	396f8 <grisu3_diy_fp_encode_double@@Base+0x1ec8>
   396e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   396e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   396e8:	sub	r3, r2, r3
   396ec:	mov	r2, r3
   396f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   396f4:	str	r2, [r3]
   396f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   396fc:	cmp	r3, #0
   39700:	beq	3971c <grisu3_diy_fp_encode_double@@Base+0x1eec>
   39704:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39708:	ldr	r2, [r3]
   3970c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39710:	sub	r2, r2, r3
   39714:	ldr	r3, [fp, #-60]	; 0xffffffc4
   39718:	str	r2, [r3]
   3971c:	ldr	r3, [fp, #-8]
   39720:	b	3988c <grisu3_diy_fp_encode_double@@Base+0x205c>
   39724:	ldr	r3, [fp, #-16]
   39728:	cmp	r3, #2
   3972c:	beq	39744 <grisu3_diy_fp_encode_double@@Base+0x1f14>
   39730:	cmp	r3, #3
   39734:	beq	397a4 <grisu3_diy_fp_encode_double@@Base+0x1f74>
   39738:	cmp	r3, #0
   3973c:	beq	39844 <grisu3_diy_fp_encode_double@@Base+0x2014>
   39740:	b	39838 <grisu3_diy_fp_encode_double@@Base+0x2008>
   39744:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   39748:	lsl	r3, r3, #4
   3974c:	uxtb	r3, r3
   39750:	cmp	r3, #0
   39754:	bne	39854 <grisu3_diy_fp_encode_double@@Base+0x2024>
   39758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3975c:	cmp	r3, #0
   39760:	beq	39874 <grisu3_diy_fp_encode_double@@Base+0x2044>
   39764:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   39768:	lsl	r3, r3, #2
   3976c:	sxtb	r2, r3
   39770:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   39774:	lsr	r3, r3, #4
   39778:	uxtb	r3, r3
   3977c:	sxtb	r3, r3
   39780:	orr	r3, r2, r3
   39784:	sxtb	r3, r3
   39788:	uxtb	r2, r3
   3978c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39790:	strb	r2, [r3]
   39794:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39798:	add	r3, r3, #1
   3979c:	str	r3, [fp, #-48]	; 0xffffffd0
   397a0:	b	39848 <grisu3_diy_fp_encode_double@@Base+0x2018>
   397a4:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   397a8:	lsl	r3, r3, #6
   397ac:	uxtb	r3, r3
   397b0:	cmp	r3, #0
   397b4:	bne	3985c <grisu3_diy_fp_encode_double@@Base+0x202c>
   397b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   397bc:	cmp	r3, #1
   397c0:	bls	3987c <grisu3_diy_fp_encode_double@@Base+0x204c>
   397c4:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   397c8:	lsl	r3, r3, #2
   397cc:	sxtb	r2, r3
   397d0:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   397d4:	lsr	r3, r3, #4
   397d8:	uxtb	r3, r3
   397dc:	sxtb	r3, r3
   397e0:	orr	r3, r2, r3
   397e4:	sxtb	r3, r3
   397e8:	uxtb	r2, r3
   397ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   397f0:	strb	r2, [r3]
   397f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   397f8:	add	r3, r3, #1
   397fc:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   39800:	lsl	r2, r2, #4
   39804:	sxtb	r1, r2
   39808:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   3980c:	lsr	r2, r2, #2
   39810:	uxtb	r2, r2
   39814:	sxtb	r2, r2
   39818:	orr	r2, r1, r2
   3981c:	sxtb	r2, r2
   39820:	uxtb	r2, r2
   39824:	strb	r2, [r3]
   39828:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3982c:	add	r3, r3, #2
   39830:	str	r3, [fp, #-48]	; 0xffffffd0
   39834:	b	39848 <grisu3_diy_fp_encode_double@@Base+0x2018>
   39838:	mov	r3, #4
   3983c:	str	r3, [fp, #-8]
   39840:	b	396d4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   39844:	nop			; (mov r0, r0)
   39848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3984c:	str	r3, [fp, #-28]	; 0xffffffe4
   39850:	b	396d4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   39854:	nop			; (mov r0, r0)
   39858:	b	39860 <grisu3_diy_fp_encode_double@@Base+0x2030>
   3985c:	nop			; (mov r0, r0)
   39860:	mov	r3, #5
   39864:	str	r3, [fp, #-8]
   39868:	b	396d4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3986c:	nop			; (mov r0, r0)
   39870:	b	39880 <grisu3_diy_fp_encode_double@@Base+0x2050>
   39874:	nop			; (mov r0, r0)
   39878:	b	39880 <grisu3_diy_fp_encode_double@@Base+0x2050>
   3987c:	nop			; (mov r0, r0)
   39880:	mov	r3, #1
   39884:	str	r3, [fp, #-8]
   39888:	b	396d4 <grisu3_diy_fp_encode_double@@Base+0x1ea4>
   3988c:	mov	r0, r3
   39890:	add	sp, fp, #0
   39894:	pop	{fp}		; (ldr fp, [sp], #4)
   39898:	bx	lr
   3989c:	andeq	r7, r1, r8, ror #7
   398a0:	andeq	r7, r1, r0, lsl #9
   398a4:	andeq	r7, r1, r4, ror r3
   398a8:	andeq	r7, r1, r8, asr r5
   398ac:	andeq	r7, r1, ip, asr #12
   398b0:	andeq	r7, r1, r8, lsl #13
   398b4:	andeq	r7, r1, r5, ror #12
   398b8:	andeq	r7, r1, r2, lsl r6
   398bc:	andeq	r7, r1, lr, asr #11
   398c0:	muleq	r1, r9, r5

000398c4 <flatcc_json_parser_error_string@@Base>:
   398c4:	push	{fp}		; (str fp, [sp, #-4]!)
   398c8:	add	fp, sp, #0
   398cc:	sub	sp, sp, #12
   398d0:	str	r0, [fp, #-8]
   398d4:	ldr	r3, [fp, #-8]
   398d8:	cmp	r3, #34	; 0x22
   398dc:	addls	pc, pc, r3, lsl #2
   398e0:	b	39b14 <flatcc_json_parser_error_string@@Base+0x250>
   398e4:	b	39970 <flatcc_json_parser_error_string@@Base+0xac>
   398e8:	b	3997c <flatcc_json_parser_error_string@@Base+0xb8>
   398ec:	b	39988 <flatcc_json_parser_error_string@@Base+0xc4>
   398f0:	b	39994 <flatcc_json_parser_error_string@@Base+0xd0>
   398f4:	b	399a0 <flatcc_json_parser_error_string@@Base+0xdc>
   398f8:	b	399ac <flatcc_json_parser_error_string@@Base+0xe8>
   398fc:	b	399b8 <flatcc_json_parser_error_string@@Base+0xf4>
   39900:	b	399c4 <flatcc_json_parser_error_string@@Base+0x100>
   39904:	b	399d0 <flatcc_json_parser_error_string@@Base+0x10c>
   39908:	b	399dc <flatcc_json_parser_error_string@@Base+0x118>
   3990c:	b	399e8 <flatcc_json_parser_error_string@@Base+0x124>
   39910:	b	399f4 <flatcc_json_parser_error_string@@Base+0x130>
   39914:	b	39a00 <flatcc_json_parser_error_string@@Base+0x13c>
   39918:	b	39a0c <flatcc_json_parser_error_string@@Base+0x148>
   3991c:	b	39a18 <flatcc_json_parser_error_string@@Base+0x154>
   39920:	b	39a24 <flatcc_json_parser_error_string@@Base+0x160>
   39924:	b	39a30 <flatcc_json_parser_error_string@@Base+0x16c>
   39928:	b	39a3c <flatcc_json_parser_error_string@@Base+0x178>
   3992c:	b	39a48 <flatcc_json_parser_error_string@@Base+0x184>
   39930:	b	39a54 <flatcc_json_parser_error_string@@Base+0x190>
   39934:	b	39a60 <flatcc_json_parser_error_string@@Base+0x19c>
   39938:	b	39a6c <flatcc_json_parser_error_string@@Base+0x1a8>
   3993c:	b	39a78 <flatcc_json_parser_error_string@@Base+0x1b4>
   39940:	b	39a84 <flatcc_json_parser_error_string@@Base+0x1c0>
   39944:	b	39a90 <flatcc_json_parser_error_string@@Base+0x1cc>
   39948:	b	39a9c <flatcc_json_parser_error_string@@Base+0x1d8>
   3994c:	b	39aa8 <flatcc_json_parser_error_string@@Base+0x1e4>
   39950:	b	39ab4 <flatcc_json_parser_error_string@@Base+0x1f0>
   39954:	b	39ac0 <flatcc_json_parser_error_string@@Base+0x1fc>
   39958:	b	39acc <flatcc_json_parser_error_string@@Base+0x208>
   3995c:	b	39ad8 <flatcc_json_parser_error_string@@Base+0x214>
   39960:	b	39ae4 <flatcc_json_parser_error_string@@Base+0x220>
   39964:	b	39af0 <flatcc_json_parser_error_string@@Base+0x22c>
   39968:	b	39afc <flatcc_json_parser_error_string@@Base+0x238>
   3996c:	b	39b08 <flatcc_json_parser_error_string@@Base+0x244>
   39970:	ldr	r3, [pc, #436]	; 39b2c <flatcc_json_parser_error_string@@Base+0x268>
   39974:	add	r3, pc, r3
   39978:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   3997c:	ldr	r3, [pc, #428]	; 39b30 <flatcc_json_parser_error_string@@Base+0x26c>
   39980:	add	r3, pc, r3
   39984:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39988:	ldr	r3, [pc, #420]	; 39b34 <flatcc_json_parser_error_string@@Base+0x270>
   3998c:	add	r3, pc, r3
   39990:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39994:	ldr	r3, [pc, #412]	; 39b38 <flatcc_json_parser_error_string@@Base+0x274>
   39998:	add	r3, pc, r3
   3999c:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399a0:	ldr	r3, [pc, #404]	; 39b3c <flatcc_json_parser_error_string@@Base+0x278>
   399a4:	add	r3, pc, r3
   399a8:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399ac:	ldr	r3, [pc, #396]	; 39b40 <flatcc_json_parser_error_string@@Base+0x27c>
   399b0:	add	r3, pc, r3
   399b4:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399b8:	ldr	r3, [pc, #388]	; 39b44 <flatcc_json_parser_error_string@@Base+0x280>
   399bc:	add	r3, pc, r3
   399c0:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399c4:	ldr	r3, [pc, #380]	; 39b48 <flatcc_json_parser_error_string@@Base+0x284>
   399c8:	add	r3, pc, r3
   399cc:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399d0:	ldr	r3, [pc, #372]	; 39b4c <flatcc_json_parser_error_string@@Base+0x288>
   399d4:	add	r3, pc, r3
   399d8:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399dc:	ldr	r3, [pc, #364]	; 39b50 <flatcc_json_parser_error_string@@Base+0x28c>
   399e0:	add	r3, pc, r3
   399e4:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399e8:	ldr	r3, [pc, #356]	; 39b54 <flatcc_json_parser_error_string@@Base+0x290>
   399ec:	add	r3, pc, r3
   399f0:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   399f4:	ldr	r3, [pc, #348]	; 39b58 <flatcc_json_parser_error_string@@Base+0x294>
   399f8:	add	r3, pc, r3
   399fc:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a00:	ldr	r3, [pc, #340]	; 39b5c <flatcc_json_parser_error_string@@Base+0x298>
   39a04:	add	r3, pc, r3
   39a08:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a0c:	ldr	r3, [pc, #332]	; 39b60 <flatcc_json_parser_error_string@@Base+0x29c>
   39a10:	add	r3, pc, r3
   39a14:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a18:	ldr	r3, [pc, #324]	; 39b64 <flatcc_json_parser_error_string@@Base+0x2a0>
   39a1c:	add	r3, pc, r3
   39a20:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a24:	ldr	r3, [pc, #316]	; 39b68 <flatcc_json_parser_error_string@@Base+0x2a4>
   39a28:	add	r3, pc, r3
   39a2c:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a30:	ldr	r3, [pc, #308]	; 39b6c <flatcc_json_parser_error_string@@Base+0x2a8>
   39a34:	add	r3, pc, r3
   39a38:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a3c:	ldr	r3, [pc, #300]	; 39b70 <flatcc_json_parser_error_string@@Base+0x2ac>
   39a40:	add	r3, pc, r3
   39a44:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a48:	ldr	r3, [pc, #292]	; 39b74 <flatcc_json_parser_error_string@@Base+0x2b0>
   39a4c:	add	r3, pc, r3
   39a50:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a54:	ldr	r3, [pc, #284]	; 39b78 <flatcc_json_parser_error_string@@Base+0x2b4>
   39a58:	add	r3, pc, r3
   39a5c:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a60:	ldr	r3, [pc, #276]	; 39b7c <flatcc_json_parser_error_string@@Base+0x2b8>
   39a64:	add	r3, pc, r3
   39a68:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a6c:	ldr	r3, [pc, #268]	; 39b80 <flatcc_json_parser_error_string@@Base+0x2bc>
   39a70:	add	r3, pc, r3
   39a74:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a78:	ldr	r3, [pc, #260]	; 39b84 <flatcc_json_parser_error_string@@Base+0x2c0>
   39a7c:	add	r3, pc, r3
   39a80:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a84:	ldr	r3, [pc, #252]	; 39b88 <flatcc_json_parser_error_string@@Base+0x2c4>
   39a88:	add	r3, pc, r3
   39a8c:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a90:	ldr	r3, [pc, #244]	; 39b8c <flatcc_json_parser_error_string@@Base+0x2c8>
   39a94:	add	r3, pc, r3
   39a98:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39a9c:	ldr	r3, [pc, #236]	; 39b90 <flatcc_json_parser_error_string@@Base+0x2cc>
   39aa0:	add	r3, pc, r3
   39aa4:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39aa8:	ldr	r3, [pc, #228]	; 39b94 <flatcc_json_parser_error_string@@Base+0x2d0>
   39aac:	add	r3, pc, r3
   39ab0:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39ab4:	ldr	r3, [pc, #220]	; 39b98 <flatcc_json_parser_error_string@@Base+0x2d4>
   39ab8:	add	r3, pc, r3
   39abc:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39ac0:	ldr	r3, [pc, #212]	; 39b9c <flatcc_json_parser_error_string@@Base+0x2d8>
   39ac4:	add	r3, pc, r3
   39ac8:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39acc:	ldr	r3, [pc, #204]	; 39ba0 <flatcc_json_parser_error_string@@Base+0x2dc>
   39ad0:	add	r3, pc, r3
   39ad4:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39ad8:	ldr	r3, [pc, #196]	; 39ba4 <flatcc_json_parser_error_string@@Base+0x2e0>
   39adc:	add	r3, pc, r3
   39ae0:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39ae4:	ldr	r3, [pc, #188]	; 39ba8 <flatcc_json_parser_error_string@@Base+0x2e4>
   39ae8:	add	r3, pc, r3
   39aec:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39af0:	ldr	r3, [pc, #180]	; 39bac <flatcc_json_parser_error_string@@Base+0x2e8>
   39af4:	add	r3, pc, r3
   39af8:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39afc:	ldr	r3, [pc, #172]	; 39bb0 <flatcc_json_parser_error_string@@Base+0x2ec>
   39b00:	add	r3, pc, r3
   39b04:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39b08:	ldr	r3, [pc, #164]	; 39bb4 <flatcc_json_parser_error_string@@Base+0x2f0>
   39b0c:	add	r3, pc, r3
   39b10:	b	39b1c <flatcc_json_parser_error_string@@Base+0x258>
   39b14:	ldr	r3, [pc, #156]	; 39bb8 <flatcc_json_parser_error_string@@Base+0x2f4>
   39b18:	add	r3, pc, r3
   39b1c:	mov	r0, r3
   39b20:	add	sp, fp, #0
   39b24:	pop	{fp}		; (ldr fp, [sp], #4)
   39b28:	bx	lr
   39b2c:	andeq	r6, r1, r4, lsl r9
   39b30:	andeq	r6, r1, r8, lsl #20
   39b34:	andeq	r6, r1, r0, lsl #20
   39b38:	andeq	r6, r1, r4, lsl #20
   39b3c:	andeq	r6, r1, r8, lsl #20
   39b40:	andeq	r6, r1, ip, lsl #20
   39b44:	andeq	r6, r1, r8, lsl sl
   39b48:	andeq	r6, r1, ip, lsl sl
   39b4c:	andeq	r6, r1, ip, lsl sl
   39b50:	andeq	r6, r1, ip, lsl sl
   39b54:	andeq	r6, r1, r4, lsr #20
   39b58:	andeq	r6, r1, ip, lsr #20
   39b5c:	andeq	r6, r1, r0, lsr sl
   39b60:	andeq	r6, r1, r8, lsr sl
   39b64:	andeq	r6, r1, ip, lsr sl
   39b68:	andeq	r6, r1, ip, asr #20
   39b6c:	andeq	r6, r1, r4, asr sl
   39b70:	andeq	r6, r1, r8, asr sl
   39b74:	andeq	r6, r1, r0, ror #20
   39b78:	andeq	r6, r1, r4, ror #20
   39b7c:	andeq	r6, r1, r8, ror #20
   39b80:	andeq	r6, r1, r0, ror sl
   39b84:	andeq	r6, r1, r4, ror sl
   39b88:	andeq	r6, r1, r8, ror sl
   39b8c:	muleq	r1, r0, sl
   39b90:	muleq	r1, r8, sl
   39b94:	andeq	r6, r1, ip, lsr #21
   39b98:	andeq	r6, r1, r0, asr #21
   39b9c:	ldrdeq	r6, [r1], -r0
   39ba0:	andeq	r6, r1, r0, ror #21
   39ba4:	andeq	r6, r1, ip, ror #21
   39ba8:	andeq	r6, r1, r0, lsl #22
   39bac:	andeq	r6, r1, ip, lsl #22
   39bb0:	andeq	r6, r1, ip, lsl fp
   39bb4:	andeq	r6, r1, r0, lsr #22
   39bb8:	andeq	r6, r1, r4, lsr #22

00039bbc <flatcc_json_parser_set_error@@Base>:
   39bbc:	push	{fp}		; (str fp, [sp, #-4]!)
   39bc0:	add	fp, sp, #0
   39bc4:	sub	sp, sp, #20
   39bc8:	str	r0, [fp, #-8]
   39bcc:	str	r1, [fp, #-12]
   39bd0:	str	r2, [fp, #-16]
   39bd4:	str	r3, [fp, #-20]	; 0xffffffec
   39bd8:	ldr	r3, [fp, #-8]
   39bdc:	ldr	r3, [r3, #20]
   39be0:	cmp	r3, #0
   39be4:	bne	39c1c <flatcc_json_parser_set_error@@Base+0x60>
   39be8:	ldr	r3, [fp, #-8]
   39bec:	ldr	r2, [fp, #-20]	; 0xffffffec
   39bf0:	str	r2, [r3, #20]
   39bf4:	ldr	r3, [fp, #-12]
   39bf8:	ldr	r2, [fp, #-8]
   39bfc:	ldr	r2, [r2, #4]
   39c00:	sub	r3, r3, r2
   39c04:	add	r2, r3, #1
   39c08:	ldr	r3, [fp, #-8]
   39c0c:	str	r2, [r3, #16]
   39c10:	ldr	r3, [fp, #-8]
   39c14:	ldr	r2, [fp, #-12]
   39c18:	str	r2, [r3, #32]
   39c1c:	ldr	r3, [fp, #-16]
   39c20:	mov	r0, r3
   39c24:	add	sp, fp, #0
   39c28:	pop	{fp}		; (ldr fp, [sp], #4)
   39c2c:	bx	lr

00039c30 <flatcc_json_parser_string_part@@Base>:
   39c30:	push	{fp, lr}
   39c34:	add	fp, sp, #4
   39c38:	sub	sp, sp, #16
   39c3c:	str	r0, [fp, #-8]
   39c40:	str	r1, [fp, #-12]
   39c44:	str	r2, [fp, #-16]
   39c48:	b	39c58 <flatcc_json_parser_string_part@@Base+0x28>
   39c4c:	ldr	r3, [fp, #-12]
   39c50:	add	r3, r3, #1
   39c54:	str	r3, [fp, #-12]
   39c58:	ldr	r2, [fp, #-12]
   39c5c:	ldr	r3, [fp, #-16]
   39c60:	cmp	r2, r3
   39c64:	beq	39c98 <flatcc_json_parser_string_part@@Base+0x68>
   39c68:	ldr	r3, [fp, #-12]
   39c6c:	ldrb	r3, [r3]
   39c70:	cmp	r3, #34	; 0x22
   39c74:	beq	39c98 <flatcc_json_parser_string_part@@Base+0x68>
   39c78:	ldr	r3, [fp, #-12]
   39c7c:	ldrb	r3, [r3]
   39c80:	cmp	r3, #31
   39c84:	bls	39c98 <flatcc_json_parser_string_part@@Base+0x68>
   39c88:	ldr	r3, [fp, #-12]
   39c8c:	ldrb	r3, [r3]
   39c90:	cmp	r3, #92	; 0x5c
   39c94:	bne	39c4c <flatcc_json_parser_string_part@@Base+0x1c>
   39c98:	ldr	r2, [fp, #-12]
   39c9c:	ldr	r3, [fp, #-16]
   39ca0:	cmp	r2, r3
   39ca4:	bne	39cc4 <flatcc_json_parser_string_part@@Base+0x94>
   39ca8:	mov	r3, #20
   39cac:	ldr	r2, [fp, #-16]
   39cb0:	ldr	r1, [fp, #-12]
   39cb4:	ldr	r0, [fp, #-8]
   39cb8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   39cbc:	mov	r3, r0
   39cc0:	b	39d0c <flatcc_json_parser_string_part@@Base+0xdc>
   39cc4:	ldr	r3, [fp, #-12]
   39cc8:	ldrb	r3, [r3]
   39ccc:	cmp	r3, #34	; 0x22
   39cd0:	bne	39cdc <flatcc_json_parser_string_part@@Base+0xac>
   39cd4:	ldr	r3, [fp, #-12]
   39cd8:	b	39d0c <flatcc_json_parser_string_part@@Base+0xdc>
   39cdc:	ldr	r3, [fp, #-12]
   39ce0:	ldrb	r3, [r3]
   39ce4:	cmp	r3, #31
   39ce8:	bhi	39d08 <flatcc_json_parser_string_part@@Base+0xd8>
   39cec:	mov	r3, #17
   39cf0:	ldr	r2, [fp, #-16]
   39cf4:	ldr	r1, [fp, #-12]
   39cf8:	ldr	r0, [fp, #-8]
   39cfc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   39d00:	mov	r3, r0
   39d04:	b	39d0c <flatcc_json_parser_string_part@@Base+0xdc>
   39d08:	ldr	r3, [fp, #-12]
   39d0c:	mov	r0, r3
   39d10:	sub	sp, fp, #4
   39d14:	pop	{fp, pc}

00039d18 <flatcc_json_parser_space_ext@@Base>:
   39d18:	push	{fp, lr}
   39d1c:	add	fp, sp, #4
   39d20:	sub	sp, sp, #16
   39d24:	str	r0, [fp, #-8]
   39d28:	str	r1, [fp, #-12]
   39d2c:	str	r2, [fp, #-16]
   39d30:	b	39d40 <flatcc_json_parser_space_ext@@Base+0x28>
   39d34:	ldr	r3, [fp, #-12]
   39d38:	add	r3, r3, #1
   39d3c:	str	r3, [fp, #-12]
   39d40:	ldr	r2, [fp, #-12]
   39d44:	ldr	r3, [fp, #-16]
   39d48:	cmp	r2, r3
   39d4c:	beq	39e7c <flatcc_json_parser_space_ext@@Base+0x164>
   39d50:	ldr	r3, [fp, #-12]
   39d54:	ldrb	r3, [r3]
   39d58:	cmp	r3, #32
   39d5c:	beq	39d34 <flatcc_json_parser_space_ext@@Base+0x1c>
   39d60:	b	39e7c <flatcc_json_parser_space_ext@@Base+0x164>
   39d64:	ldr	r3, [fp, #-12]
   39d68:	ldrb	r3, [r3]
   39d6c:	sub	r3, r3, #9
   39d70:	cmp	r3, #23
   39d74:	addls	pc, pc, r3, lsl #2
   39d78:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39d7c:	b	39e50 <flatcc_json_parser_space_ext@@Base+0x138>
   39d80:	b	39e20 <flatcc_json_parser_space_ext@@Base+0x108>
   39d84:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39d88:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39d8c:	b	39ddc <flatcc_json_parser_space_ext@@Base+0xc4>
   39d90:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39d94:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39d98:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39d9c:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39da0:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39da4:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39da8:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dac:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39db0:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39db4:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39db8:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dbc:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dc0:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dc4:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dc8:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dcc:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dd0:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dd4:	b	39e60 <flatcc_json_parser_space_ext@@Base+0x148>
   39dd8:	b	39d30 <flatcc_json_parser_space_ext@@Base+0x18>
   39ddc:	ldr	r2, [fp, #-16]
   39de0:	ldr	r3, [fp, #-12]
   39de4:	sub	r3, r2, r3
   39de8:	cmp	r3, #1
   39dec:	ble	39e0c <flatcc_json_parser_space_ext@@Base+0xf4>
   39df0:	ldr	r3, [fp, #-12]
   39df4:	add	r3, r3, #1
   39df8:	ldrb	r3, [r3]
   39dfc:	cmp	r3, #10
   39e00:	bne	39e0c <flatcc_json_parser_space_ext@@Base+0xf4>
   39e04:	mov	r3, #1
   39e08:	b	39e10 <flatcc_json_parser_space_ext@@Base+0xf8>
   39e0c:	mov	r3, #0
   39e10:	mov	r2, r3
   39e14:	ldr	r3, [fp, #-12]
   39e18:	add	r3, r3, r2
   39e1c:	str	r3, [fp, #-12]
   39e20:	ldr	r3, [fp, #-8]
   39e24:	ldr	r3, [r3, #12]
   39e28:	add	r2, r3, #1
   39e2c:	ldr	r3, [fp, #-8]
   39e30:	str	r2, [r3, #12]
   39e34:	ldr	r3, [fp, #-12]
   39e38:	add	r3, r3, #1
   39e3c:	str	r3, [fp, #-12]
   39e40:	ldr	r3, [fp, #-8]
   39e44:	ldr	r2, [fp, #-12]
   39e48:	str	r2, [r3, #4]
   39e4c:	b	39e7c <flatcc_json_parser_space_ext@@Base+0x164>
   39e50:	ldr	r3, [fp, #-12]
   39e54:	add	r3, r3, #1
   39e58:	str	r3, [fp, #-12]
   39e5c:	b	39e7c <flatcc_json_parser_space_ext@@Base+0x164>
   39e60:	mov	r3, #5
   39e64:	ldr	r2, [fp, #-16]
   39e68:	ldr	r1, [fp, #-12]
   39e6c:	ldr	r0, [fp, #-8]
   39e70:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   39e74:	mov	r3, r0
   39e78:	b	39ea0 <flatcc_json_parser_space_ext@@Base+0x188>
   39e7c:	ldr	r2, [fp, #-12]
   39e80:	ldr	r3, [fp, #-16]
   39e84:	cmp	r2, r3
   39e88:	beq	39e9c <flatcc_json_parser_space_ext@@Base+0x184>
   39e8c:	ldr	r3, [fp, #-12]
   39e90:	ldrb	r3, [r3]
   39e94:	cmp	r3, #32
   39e98:	bls	39d64 <flatcc_json_parser_space_ext@@Base+0x4c>
   39e9c:	ldr	r3, [fp, #-12]
   39ea0:	mov	r0, r3
   39ea4:	sub	sp, fp, #4
   39ea8:	pop	{fp, pc}

00039eac <flatcc_json_parser_string_escape@@Base>:
   39eac:	push	{fp, lr}
   39eb0:	add	fp, sp, #4
   39eb4:	sub	sp, sp, #24
   39eb8:	str	r0, [fp, #-16]
   39ebc:	str	r1, [fp, #-20]	; 0xffffffec
   39ec0:	str	r2, [fp, #-24]	; 0xffffffe8
   39ec4:	str	r3, [fp, #-28]	; 0xffffffe4
   39ec8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39ecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   39ed0:	sub	r3, r2, r3
   39ed4:	cmp	r3, #1
   39ed8:	ble	39eec <flatcc_json_parser_string_escape@@Base+0x40>
   39edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   39ee0:	ldrb	r3, [r3]
   39ee4:	cmp	r3, #92	; 0x5c
   39ee8:	beq	39f14 <flatcc_json_parser_string_escape@@Base+0x68>
   39eec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39ef0:	mov	r2, #0
   39ef4:	strb	r2, [r3]
   39ef8:	mov	r3, #18
   39efc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   39f00:	ldr	r1, [fp, #-20]	; 0xffffffec
   39f04:	ldr	r0, [fp, #-16]
   39f08:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   39f0c:	mov	r3, r0
   39f10:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   39f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   39f18:	add	r3, r3, #1
   39f1c:	ldrb	r3, [r3]
   39f20:	sub	r3, r3, #34	; 0x22
   39f24:	cmp	r3, #86	; 0x56
   39f28:	addls	pc, pc, r3, lsl #2
   39f2c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f30:	b	3a7cc <flatcc_json_parser_string_escape@@Base+0x920>
   39f34:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f38:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f3c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f40:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f44:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f48:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f4c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f50:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f54:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f58:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f5c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f60:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f64:	b	3a81c <flatcc_json_parser_string_escape@@Base+0x970>
   39f68:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f6c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f70:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f74:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f78:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f7c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f80:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f84:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f88:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f8c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f90:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f94:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f98:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39f9c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fa0:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fa4:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fa8:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fac:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fb0:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fb4:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fb8:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fbc:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fc0:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fc4:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fc8:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fcc:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fd0:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fd4:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fd8:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fdc:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fe0:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fe4:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fe8:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39fec:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39ff0:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39ff4:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39ff8:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   39ffc:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a000:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a004:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a008:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a00c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a010:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a014:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a018:	b	3a7f4 <flatcc_json_parser_string_escape@@Base+0x948>
   3a01c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a020:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a024:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a028:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a02c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a030:	b	3a77c <flatcc_json_parser_string_escape@@Base+0x8d0>
   3a034:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a038:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a03c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a040:	b	3a7a4 <flatcc_json_parser_string_escape@@Base+0x8f8>
   3a044:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a048:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a04c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a050:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a054:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a058:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a05c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a060:	b	3a72c <flatcc_json_parser_string_escape@@Base+0x880>
   3a064:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a068:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a06c:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a070:	b	3a754 <flatcc_json_parser_string_escape@@Base+0x8a8>
   3a074:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a078:	b	3a704 <flatcc_json_parser_string_escape@@Base+0x858>
   3a07c:	b	3a268 <flatcc_json_parser_string_escape@@Base+0x3bc>
   3a080:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a084:	b	3a844 <flatcc_json_parser_string_escape@@Base+0x998>
   3a088:	b	3a08c <flatcc_json_parser_string_escape@@Base+0x1e0>
   3a08c:	mov	r3, #0
   3a090:	strb	r3, [fp, #-5]
   3a094:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a098:	mov	r2, #1
   3a09c:	strb	r2, [r3]
   3a0a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a0a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0a8:	sub	r3, r2, r3
   3a0ac:	cmp	r3, #3
   3a0b0:	bgt	3a0dc <flatcc_json_parser_string_escape@@Base+0x230>
   3a0b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a0b8:	mov	r2, #0
   3a0bc:	strb	r2, [r3]
   3a0c0:	mov	r3, #18
   3a0c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a0c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a0cc:	ldr	r0, [fp, #-16]
   3a0d0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a0d4:	mov	r3, r0
   3a0d8:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a0dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a0e0:	ldrb	r3, [r3, #2]
   3a0e4:	strb	r3, [fp, #-9]
   3a0e8:	ldrb	r3, [fp, #-9]
   3a0ec:	cmp	r3, #47	; 0x2f
   3a0f0:	bls	3a124 <flatcc_json_parser_string_escape@@Base+0x278>
   3a0f4:	ldrb	r3, [fp, #-9]
   3a0f8:	cmp	r3, #57	; 0x39
   3a0fc:	bhi	3a124 <flatcc_json_parser_string_escape@@Base+0x278>
   3a100:	ldrb	r3, [fp, #-9]
   3a104:	sub	r3, r3, #48	; 0x30
   3a108:	lsl	r3, r3, #4
   3a10c:	sxtb	r2, r3
   3a110:	ldrsb	r3, [fp, #-5]
   3a114:	orr	r3, r2, r3
   3a118:	sxtb	r3, r3
   3a11c:	strb	r3, [fp, #-5]
   3a120:	b	3a194 <flatcc_json_parser_string_escape@@Base+0x2e8>
   3a124:	ldrb	r3, [fp, #-9]
   3a128:	orr	r3, r3, #32
   3a12c:	strb	r3, [fp, #-9]
   3a130:	ldrb	r3, [fp, #-9]
   3a134:	cmp	r3, #96	; 0x60
   3a138:	bls	3a16c <flatcc_json_parser_string_escape@@Base+0x2c0>
   3a13c:	ldrb	r3, [fp, #-9]
   3a140:	cmp	r3, #102	; 0x66
   3a144:	bhi	3a16c <flatcc_json_parser_string_escape@@Base+0x2c0>
   3a148:	ldrb	r3, [fp, #-9]
   3a14c:	sub	r3, r3, #87	; 0x57
   3a150:	lsl	r3, r3, #4
   3a154:	sxtb	r2, r3
   3a158:	ldrsb	r3, [fp, #-5]
   3a15c:	orr	r3, r2, r3
   3a160:	sxtb	r3, r3
   3a164:	strb	r3, [fp, #-5]
   3a168:	b	3a194 <flatcc_json_parser_string_escape@@Base+0x2e8>
   3a16c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a170:	mov	r2, #0
   3a174:	strb	r2, [r3]
   3a178:	mov	r3, #18
   3a17c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a180:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a184:	ldr	r0, [fp, #-16]
   3a188:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a18c:	mov	r3, r0
   3a190:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a194:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a198:	ldrb	r3, [r3, #3]
   3a19c:	strb	r3, [fp, #-9]
   3a1a0:	ldrb	r3, [fp, #-9]
   3a1a4:	cmp	r3, #47	; 0x2f
   3a1a8:	bls	3a1dc <flatcc_json_parser_string_escape@@Base+0x330>
   3a1ac:	ldrb	r3, [fp, #-9]
   3a1b0:	cmp	r3, #57	; 0x39
   3a1b4:	bhi	3a1dc <flatcc_json_parser_string_escape@@Base+0x330>
   3a1b8:	ldrb	r3, [fp, #-9]
   3a1bc:	sub	r3, r3, #48	; 0x30
   3a1c0:	uxtb	r3, r3
   3a1c4:	sxtb	r2, r3
   3a1c8:	ldrsb	r3, [fp, #-5]
   3a1cc:	orr	r3, r2, r3
   3a1d0:	sxtb	r3, r3
   3a1d4:	strb	r3, [fp, #-5]
   3a1d8:	b	3a24c <flatcc_json_parser_string_escape@@Base+0x3a0>
   3a1dc:	ldrb	r3, [fp, #-9]
   3a1e0:	orr	r3, r3, #32
   3a1e4:	strb	r3, [fp, #-9]
   3a1e8:	ldrb	r3, [fp, #-9]
   3a1ec:	cmp	r3, #96	; 0x60
   3a1f0:	bls	3a224 <flatcc_json_parser_string_escape@@Base+0x378>
   3a1f4:	ldrb	r3, [fp, #-9]
   3a1f8:	cmp	r3, #102	; 0x66
   3a1fc:	bhi	3a224 <flatcc_json_parser_string_escape@@Base+0x378>
   3a200:	ldrb	r3, [fp, #-9]
   3a204:	sub	r3, r3, #87	; 0x57
   3a208:	uxtb	r3, r3
   3a20c:	sxtb	r2, r3
   3a210:	ldrsb	r3, [fp, #-5]
   3a214:	orr	r3, r2, r3
   3a218:	sxtb	r3, r3
   3a21c:	strb	r3, [fp, #-5]
   3a220:	b	3a24c <flatcc_json_parser_string_escape@@Base+0x3a0>
   3a224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a228:	mov	r2, #0
   3a22c:	strb	r2, [r3]
   3a230:	mov	r3, #18
   3a234:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a238:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a23c:	ldr	r0, [fp, #-16]
   3a240:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a244:	mov	r3, r0
   3a248:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a24c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a250:	add	r3, r3, #1
   3a254:	ldrb	r2, [fp, #-5]
   3a258:	strb	r2, [r3]
   3a25c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a260:	add	r3, r3, #4
   3a264:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a268:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a26c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a270:	sub	r3, r2, r3
   3a274:	cmp	r3, #5
   3a278:	bgt	3a2a4 <flatcc_json_parser_string_escape@@Base+0x3f8>
   3a27c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a280:	mov	r2, #0
   3a284:	strb	r2, [r3]
   3a288:	mov	r3, #18
   3a28c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a290:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a294:	ldr	r0, [fp, #-16]
   3a298:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a29c:	mov	r3, r0
   3a2a0:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a2a4:	mov	r3, #0
   3a2a8:	strh	r3, [fp, #-8]
   3a2ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a2b0:	ldrb	r3, [r3, #2]
   3a2b4:	strb	r3, [fp, #-9]
   3a2b8:	ldrb	r3, [fp, #-9]
   3a2bc:	cmp	r3, #47	; 0x2f
   3a2c0:	bls	3a2f0 <flatcc_json_parser_string_escape@@Base+0x444>
   3a2c4:	ldrb	r3, [fp, #-9]
   3a2c8:	cmp	r3, #57	; 0x39
   3a2cc:	bhi	3a2f0 <flatcc_json_parser_string_escape@@Base+0x444>
   3a2d0:	ldrb	r3, [fp, #-9]
   3a2d4:	uxth	r3, r3
   3a2d8:	sub	r3, r3, #48	; 0x30
   3a2dc:	strh	r3, [fp, #-12]
   3a2e0:	ldrh	r3, [fp, #-12]
   3a2e4:	lsl	r3, r3, #12
   3a2e8:	strh	r3, [fp, #-8]
   3a2ec:	b	3a36c <flatcc_json_parser_string_escape@@Base+0x4c0>
   3a2f0:	ldrb	r3, [fp, #-9]
   3a2f4:	orr	r3, r3, #32
   3a2f8:	strb	r3, [fp, #-9]
   3a2fc:	ldrb	r3, [fp, #-9]
   3a300:	cmp	r3, #96	; 0x60
   3a304:	bls	3a344 <flatcc_json_parser_string_escape@@Base+0x498>
   3a308:	ldrb	r3, [fp, #-9]
   3a30c:	cmp	r3, #102	; 0x66
   3a310:	bhi	3a344 <flatcc_json_parser_string_escape@@Base+0x498>
   3a314:	ldrb	r3, [fp, #-9]
   3a318:	uxth	r3, r3
   3a31c:	sub	r3, r3, #87	; 0x57
   3a320:	strh	r3, [fp, #-12]
   3a324:	ldrh	r3, [fp, #-12]
   3a328:	lsl	r3, r3, #12
   3a32c:	sxth	r2, r3
   3a330:	ldrsh	r3, [fp, #-8]
   3a334:	orr	r3, r2, r3
   3a338:	sxth	r3, r3
   3a33c:	strh	r3, [fp, #-8]
   3a340:	b	3a36c <flatcc_json_parser_string_escape@@Base+0x4c0>
   3a344:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a348:	mov	r2, #0
   3a34c:	strb	r2, [r3]
   3a350:	mov	r3, #18
   3a354:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a358:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a35c:	ldr	r0, [fp, #-16]
   3a360:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a364:	mov	r3, r0
   3a368:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a36c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a370:	ldrb	r3, [r3, #3]
   3a374:	strb	r3, [fp, #-9]
   3a378:	ldrb	r3, [fp, #-9]
   3a37c:	cmp	r3, #47	; 0x2f
   3a380:	bls	3a3c0 <flatcc_json_parser_string_escape@@Base+0x514>
   3a384:	ldrb	r3, [fp, #-9]
   3a388:	cmp	r3, #57	; 0x39
   3a38c:	bhi	3a3c0 <flatcc_json_parser_string_escape@@Base+0x514>
   3a390:	ldrb	r3, [fp, #-9]
   3a394:	uxth	r3, r3
   3a398:	sub	r3, r3, #48	; 0x30
   3a39c:	strh	r3, [fp, #-12]
   3a3a0:	ldrh	r3, [fp, #-12]
   3a3a4:	lsl	r3, r3, #8
   3a3a8:	sxth	r2, r3
   3a3ac:	ldrsh	r3, [fp, #-8]
   3a3b0:	orr	r3, r2, r3
   3a3b4:	sxth	r3, r3
   3a3b8:	strh	r3, [fp, #-8]
   3a3bc:	b	3a43c <flatcc_json_parser_string_escape@@Base+0x590>
   3a3c0:	ldrb	r3, [fp, #-9]
   3a3c4:	orr	r3, r3, #32
   3a3c8:	strb	r3, [fp, #-9]
   3a3cc:	ldrb	r3, [fp, #-9]
   3a3d0:	cmp	r3, #96	; 0x60
   3a3d4:	bls	3a414 <flatcc_json_parser_string_escape@@Base+0x568>
   3a3d8:	ldrb	r3, [fp, #-9]
   3a3dc:	cmp	r3, #102	; 0x66
   3a3e0:	bhi	3a414 <flatcc_json_parser_string_escape@@Base+0x568>
   3a3e4:	ldrb	r3, [fp, #-9]
   3a3e8:	uxth	r3, r3
   3a3ec:	sub	r3, r3, #87	; 0x57
   3a3f0:	strh	r3, [fp, #-12]
   3a3f4:	ldrh	r3, [fp, #-12]
   3a3f8:	lsl	r3, r3, #8
   3a3fc:	sxth	r2, r3
   3a400:	ldrsh	r3, [fp, #-8]
   3a404:	orr	r3, r2, r3
   3a408:	sxth	r3, r3
   3a40c:	strh	r3, [fp, #-8]
   3a410:	b	3a43c <flatcc_json_parser_string_escape@@Base+0x590>
   3a414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a418:	mov	r2, #0
   3a41c:	strb	r2, [r3]
   3a420:	mov	r3, #18
   3a424:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a428:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a42c:	ldr	r0, [fp, #-16]
   3a430:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a434:	mov	r3, r0
   3a438:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a43c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a440:	ldrb	r3, [r3, #4]
   3a444:	strb	r3, [fp, #-9]
   3a448:	ldrb	r3, [fp, #-9]
   3a44c:	cmp	r3, #47	; 0x2f
   3a450:	bls	3a490 <flatcc_json_parser_string_escape@@Base+0x5e4>
   3a454:	ldrb	r3, [fp, #-9]
   3a458:	cmp	r3, #57	; 0x39
   3a45c:	bhi	3a490 <flatcc_json_parser_string_escape@@Base+0x5e4>
   3a460:	ldrb	r3, [fp, #-9]
   3a464:	uxth	r3, r3
   3a468:	sub	r3, r3, #48	; 0x30
   3a46c:	strh	r3, [fp, #-12]
   3a470:	ldrh	r3, [fp, #-12]
   3a474:	lsl	r3, r3, #4
   3a478:	sxth	r2, r3
   3a47c:	ldrsh	r3, [fp, #-8]
   3a480:	orr	r3, r2, r3
   3a484:	sxth	r3, r3
   3a488:	strh	r3, [fp, #-8]
   3a48c:	b	3a50c <flatcc_json_parser_string_escape@@Base+0x660>
   3a490:	ldrb	r3, [fp, #-9]
   3a494:	orr	r3, r3, #32
   3a498:	strb	r3, [fp, #-9]
   3a49c:	ldrb	r3, [fp, #-9]
   3a4a0:	cmp	r3, #96	; 0x60
   3a4a4:	bls	3a4e4 <flatcc_json_parser_string_escape@@Base+0x638>
   3a4a8:	ldrb	r3, [fp, #-9]
   3a4ac:	cmp	r3, #102	; 0x66
   3a4b0:	bhi	3a4e4 <flatcc_json_parser_string_escape@@Base+0x638>
   3a4b4:	ldrb	r3, [fp, #-9]
   3a4b8:	uxth	r3, r3
   3a4bc:	sub	r3, r3, #87	; 0x57
   3a4c0:	strh	r3, [fp, #-12]
   3a4c4:	ldrh	r3, [fp, #-12]
   3a4c8:	lsl	r3, r3, #4
   3a4cc:	sxth	r2, r3
   3a4d0:	ldrsh	r3, [fp, #-8]
   3a4d4:	orr	r3, r2, r3
   3a4d8:	sxth	r3, r3
   3a4dc:	strh	r3, [fp, #-8]
   3a4e0:	b	3a50c <flatcc_json_parser_string_escape@@Base+0x660>
   3a4e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a4e8:	mov	r2, #0
   3a4ec:	strb	r2, [r3]
   3a4f0:	mov	r3, #18
   3a4f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a4f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a4fc:	ldr	r0, [fp, #-16]
   3a500:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a504:	mov	r3, r0
   3a508:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a50c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a510:	ldrb	r3, [r3, #5]
   3a514:	strb	r3, [fp, #-9]
   3a518:	ldrb	r3, [fp, #-9]
   3a51c:	cmp	r3, #47	; 0x2f
   3a520:	bls	3a554 <flatcc_json_parser_string_escape@@Base+0x6a8>
   3a524:	ldrb	r3, [fp, #-9]
   3a528:	cmp	r3, #57	; 0x39
   3a52c:	bhi	3a554 <flatcc_json_parser_string_escape@@Base+0x6a8>
   3a530:	ldrb	r3, [fp, #-9]
   3a534:	uxth	r3, r3
   3a538:	sub	r3, r3, #48	; 0x30
   3a53c:	strh	r3, [fp, #-12]
   3a540:	ldrh	r2, [fp, #-8]
   3a544:	ldrh	r3, [fp, #-12]
   3a548:	orr	r3, r2, r3
   3a54c:	strh	r3, [fp, #-8]
   3a550:	b	3a5c4 <flatcc_json_parser_string_escape@@Base+0x718>
   3a554:	ldrb	r3, [fp, #-9]
   3a558:	orr	r3, r3, #32
   3a55c:	strb	r3, [fp, #-9]
   3a560:	ldrb	r3, [fp, #-9]
   3a564:	cmp	r3, #96	; 0x60
   3a568:	bls	3a59c <flatcc_json_parser_string_escape@@Base+0x6f0>
   3a56c:	ldrb	r3, [fp, #-9]
   3a570:	cmp	r3, #102	; 0x66
   3a574:	bhi	3a59c <flatcc_json_parser_string_escape@@Base+0x6f0>
   3a578:	ldrb	r3, [fp, #-9]
   3a57c:	uxth	r3, r3
   3a580:	sub	r3, r3, #87	; 0x57
   3a584:	strh	r3, [fp, #-12]
   3a588:	ldrh	r2, [fp, #-8]
   3a58c:	ldrh	r3, [fp, #-12]
   3a590:	orr	r3, r2, r3
   3a594:	strh	r3, [fp, #-8]
   3a598:	b	3a5c4 <flatcc_json_parser_string_escape@@Base+0x718>
   3a59c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a5a0:	mov	r2, #0
   3a5a4:	strb	r2, [r3]
   3a5a8:	mov	r3, #18
   3a5ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a5b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a5b4:	ldr	r0, [fp, #-16]
   3a5b8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a5bc:	mov	r3, r0
   3a5c0:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a5c4:	ldrh	r3, [fp, #-8]
   3a5c8:	cmp	r3, #127	; 0x7f
   3a5cc:	bhi	3a5f4 <flatcc_json_parser_string_escape@@Base+0x748>
   3a5d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a5d4:	mov	r2, #1
   3a5d8:	strb	r2, [r3]
   3a5dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a5e0:	add	r3, r3, #1
   3a5e4:	ldrh	r2, [fp, #-8]
   3a5e8:	uxtb	r2, r2
   3a5ec:	strb	r2, [r3]
   3a5f0:	b	3a6f8 <flatcc_json_parser_string_escape@@Base+0x84c>
   3a5f4:	ldrh	r3, [fp, #-8]
   3a5f8:	cmp	r3, #2048	; 0x800
   3a5fc:	bcs	3a664 <flatcc_json_parser_string_escape@@Base+0x7b8>
   3a600:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a604:	mov	r2, #2
   3a608:	strb	r2, [r3]
   3a60c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a610:	add	r2, r3, #1
   3a614:	ldrh	r3, [fp, #-8]
   3a618:	lsr	r3, r3, #6
   3a61c:	uxth	r3, r3
   3a620:	uxtb	r3, r3
   3a624:	mvn	r3, r3, lsl #26
   3a628:	mvn	r3, r3, lsr #26
   3a62c:	uxtb	r3, r3
   3a630:	strb	r3, [r2]
   3a634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a638:	add	r2, r3, #2
   3a63c:	ldrh	r3, [fp, #-8]
   3a640:	sxtb	r3, r3
   3a644:	and	r3, r3, #63	; 0x3f
   3a648:	sxtb	r3, r3
   3a64c:	mvn	r3, r3, lsl #25
   3a650:	mvn	r3, r3, lsr #25
   3a654:	sxtb	r3, r3
   3a658:	uxtb	r3, r3
   3a65c:	strb	r3, [r2]
   3a660:	b	3a6f8 <flatcc_json_parser_string_escape@@Base+0x84c>
   3a664:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a668:	mov	r2, #3
   3a66c:	strb	r2, [r3]
   3a670:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a674:	add	r2, r3, #1
   3a678:	ldrh	r3, [fp, #-8]
   3a67c:	lsr	r3, r3, #12
   3a680:	uxth	r3, r3
   3a684:	uxtb	r3, r3
   3a688:	mvn	r3, r3, lsl #27
   3a68c:	mvn	r3, r3, lsr #27
   3a690:	uxtb	r3, r3
   3a694:	strb	r3, [r2]
   3a698:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a69c:	add	r2, r3, #2
   3a6a0:	ldrh	r3, [fp, #-8]
   3a6a4:	lsr	r3, r3, #6
   3a6a8:	uxth	r3, r3
   3a6ac:	sxtb	r3, r3
   3a6b0:	and	r3, r3, #63	; 0x3f
   3a6b4:	sxtb	r3, r3
   3a6b8:	mvn	r3, r3, lsl #25
   3a6bc:	mvn	r3, r3, lsr #25
   3a6c0:	sxtb	r3, r3
   3a6c4:	uxtb	r3, r3
   3a6c8:	strb	r3, [r2]
   3a6cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a6d0:	add	r2, r3, #3
   3a6d4:	ldrh	r3, [fp, #-8]
   3a6d8:	sxtb	r3, r3
   3a6dc:	and	r3, r3, #63	; 0x3f
   3a6e0:	sxtb	r3, r3
   3a6e4:	mvn	r3, r3, lsl #25
   3a6e8:	mvn	r3, r3, lsr #25
   3a6ec:	sxtb	r3, r3
   3a6f0:	uxtb	r3, r3
   3a6f4:	strb	r3, [r2]
   3a6f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a6fc:	add	r3, r3, #6
   3a700:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a708:	mov	r2, #1
   3a70c:	strb	r2, [r3]
   3a710:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a714:	add	r3, r3, #1
   3a718:	mov	r2, #9
   3a71c:	strb	r2, [r3]
   3a720:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a724:	add	r3, r3, #2
   3a728:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a72c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a730:	mov	r2, #1
   3a734:	strb	r2, [r3]
   3a738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a73c:	add	r3, r3, #1
   3a740:	mov	r2, #10
   3a744:	strb	r2, [r3]
   3a748:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a74c:	add	r3, r3, #2
   3a750:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a754:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a758:	mov	r2, #1
   3a75c:	strb	r2, [r3]
   3a760:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a764:	add	r3, r3, #1
   3a768:	mov	r2, #13
   3a76c:	strb	r2, [r3]
   3a770:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a774:	add	r3, r3, #2
   3a778:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a77c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a780:	mov	r2, #1
   3a784:	strb	r2, [r3]
   3a788:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a78c:	add	r3, r3, #1
   3a790:	mov	r2, #8
   3a794:	strb	r2, [r3]
   3a798:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a79c:	add	r3, r3, #2
   3a7a0:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a7a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a7a8:	mov	r2, #1
   3a7ac:	strb	r2, [r3]
   3a7b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a7b4:	add	r3, r3, #1
   3a7b8:	mov	r2, #12
   3a7bc:	strb	r2, [r3]
   3a7c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a7c4:	add	r3, r3, #2
   3a7c8:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a7cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a7d0:	mov	r2, #1
   3a7d4:	strb	r2, [r3]
   3a7d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a7dc:	add	r3, r3, #1
   3a7e0:	mov	r2, #34	; 0x22
   3a7e4:	strb	r2, [r3]
   3a7e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a7ec:	add	r3, r3, #2
   3a7f0:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a7f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a7f8:	mov	r2, #1
   3a7fc:	strb	r2, [r3]
   3a800:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a804:	add	r3, r3, #1
   3a808:	mov	r2, #92	; 0x5c
   3a80c:	strb	r2, [r3]
   3a810:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a814:	add	r3, r3, #2
   3a818:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a81c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a820:	mov	r2, #1
   3a824:	strb	r2, [r3]
   3a828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a82c:	add	r3, r3, #1
   3a830:	mov	r2, #47	; 0x2f
   3a834:	strb	r2, [r3]
   3a838:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a83c:	add	r3, r3, #2
   3a840:	b	3a868 <flatcc_json_parser_string_escape@@Base+0x9bc>
   3a844:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a848:	mov	r2, #0
   3a84c:	strb	r2, [r3]
   3a850:	mov	r3, #18
   3a854:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a858:	ldr	r1, [fp, #-20]	; 0xffffffec
   3a85c:	ldr	r0, [fp, #-16]
   3a860:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3a864:	mov	r3, r0
   3a868:	mov	r0, r3
   3a86c:	sub	sp, fp, #4
   3a870:	pop	{fp, pc}

0003a874 <flatcc_json_parser_skip_constant@@Base>:
   3a874:	push	{fp, lr}
   3a878:	add	fp, sp, #4
   3a87c:	sub	sp, sp, #24
   3a880:	str	r0, [fp, #-16]
   3a884:	str	r1, [fp, #-20]	; 0xffffffec
   3a888:	str	r2, [fp, #-24]	; 0xffffffe8
   3a88c:	b	3a950 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3a890:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a894:	ldrb	r3, [r3]
   3a898:	strb	r3, [fp, #-5]
   3a89c:	ldrsb	r3, [fp, #-5]
   3a8a0:	cmp	r3, #0
   3a8a4:	blt	3a8d8 <flatcc_json_parser_skip_constant@@Base+0x64>
   3a8a8:	ldrb	r3, [fp, #-5]
   3a8ac:	cmp	r3, #95	; 0x5f
   3a8b0:	beq	3a8d8 <flatcc_json_parser_skip_constant@@Base+0x64>
   3a8b4:	ldrb	r3, [fp, #-5]
   3a8b8:	cmp	r3, #47	; 0x2f
   3a8bc:	bls	3a8cc <flatcc_json_parser_skip_constant@@Base+0x58>
   3a8c0:	ldrb	r3, [fp, #-5]
   3a8c4:	cmp	r3, #57	; 0x39
   3a8c8:	bls	3a8d8 <flatcc_json_parser_skip_constant@@Base+0x64>
   3a8cc:	ldrb	r3, [fp, #-5]
   3a8d0:	cmp	r3, #46	; 0x2e
   3a8d4:	bne	3a8e8 <flatcc_json_parser_skip_constant@@Base+0x74>
   3a8d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a8dc:	add	r3, r3, #1
   3a8e0:	str	r3, [fp, #-20]	; 0xffffffec
   3a8e4:	b	3a950 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3a8e8:	ldrb	r3, [fp, #-5]
   3a8ec:	orr	r3, r3, #32
   3a8f0:	strb	r3, [fp, #-5]
   3a8f4:	ldrb	r3, [fp, #-5]
   3a8f8:	cmp	r3, #96	; 0x60
   3a8fc:	bls	3a91c <flatcc_json_parser_skip_constant@@Base+0xa8>
   3a900:	ldrb	r3, [fp, #-5]
   3a904:	cmp	r3, #122	; 0x7a
   3a908:	bhi	3a91c <flatcc_json_parser_skip_constant@@Base+0xa8>
   3a90c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a910:	add	r3, r3, #1
   3a914:	str	r3, [fp, #-20]	; 0xffffffec
   3a918:	b	3a950 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3a91c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a920:	str	r3, [fp, #-12]
   3a924:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a928:	ldr	r1, [fp, #-12]
   3a92c:	ldr	r0, [fp, #-16]
   3a930:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3a934:	str	r0, [fp, #-20]	; 0xffffffec
   3a938:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a93c:	ldr	r3, [fp, #-12]
   3a940:	cmp	r2, r3
   3a944:	bne	3a950 <flatcc_json_parser_skip_constant@@Base+0xdc>
   3a948:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a94c:	b	3a964 <flatcc_json_parser_skip_constant@@Base+0xf0>
   3a950:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a954:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a958:	cmp	r2, r3
   3a95c:	bne	3a890 <flatcc_json_parser_skip_constant@@Base+0x1c>
   3a960:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a964:	mov	r0, r3
   3a968:	sub	sp, fp, #4
   3a96c:	pop	{fp, pc}

0003a970 <flatcc_json_parser_match_constant@@Base>:
   3a970:	push	{fp, lr}
   3a974:	add	fp, sp, #4
   3a978:	sub	sp, sp, #24
   3a97c:	str	r0, [fp, #-16]
   3a980:	str	r1, [fp, #-20]	; 0xffffffec
   3a984:	str	r2, [fp, #-24]	; 0xffffffe8
   3a988:	str	r3, [fp, #-28]	; 0xffffffe4
   3a98c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a990:	str	r3, [fp, #-8]
   3a994:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a998:	ldr	r2, [fp, #-20]	; 0xffffffec
   3a99c:	add	r3, r2, r3
   3a9a0:	str	r3, [fp, #-12]
   3a9a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a9a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9ac:	sub	r2, r2, r3
   3a9b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a9b4:	cmp	r2, r3
   3a9b8:	bgt	3a9d0 <flatcc_json_parser_match_constant@@Base+0x60>
   3a9bc:	ldr	r3, [fp, #4]
   3a9c0:	mov	r2, #0
   3a9c4:	str	r2, [r3]
   3a9c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9cc:	b	3aaec <flatcc_json_parser_match_constant@@Base+0x17c>
   3a9d0:	ldr	r3, [fp, #-12]
   3a9d4:	str	r3, [fp, #-20]	; 0xffffffec
   3a9d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9dc:	ldrb	r3, [r3]
   3a9e0:	cmp	r3, #32
   3a9e4:	bne	3aa6c <flatcc_json_parser_match_constant@@Base+0xfc>
   3a9e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9ec:	add	r3, r3, #1
   3a9f0:	str	r3, [fp, #-20]	; 0xffffffec
   3a9f4:	b	3aa04 <flatcc_json_parser_match_constant@@Base+0x94>
   3a9f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3a9fc:	add	r3, r3, #1
   3aa00:	str	r3, [fp, #-20]	; 0xffffffec
   3aa04:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aa08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3aa0c:	cmp	r2, r3
   3aa10:	beq	3aa24 <flatcc_json_parser_match_constant@@Base+0xb4>
   3aa14:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa18:	ldrb	r3, [r3]
   3aa1c:	cmp	r3, #32
   3aa20:	beq	3a9f8 <flatcc_json_parser_match_constant@@Base+0x88>
   3aa24:	ldr	r2, [fp, #-20]	; 0xffffffec
   3aa28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3aa2c:	cmp	r2, r3
   3aa30:	bne	3aa48 <flatcc_json_parser_match_constant@@Base+0xd8>
   3aa34:	ldr	r3, [fp, #4]
   3aa38:	mov	r2, #0
   3aa3c:	str	r2, [r3]
   3aa40:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa44:	b	3aaec <flatcc_json_parser_match_constant@@Base+0x17c>
   3aa48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa4c:	ldrb	r3, [r3]
   3aa50:	cmp	r3, #34	; 0x22
   3aa54:	beq	3aa6c <flatcc_json_parser_match_constant@@Base+0xfc>
   3aa58:	ldr	r3, [fp, #4]
   3aa5c:	mov	r2, #1
   3aa60:	str	r2, [r3]
   3aa64:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa68:	b	3aaec <flatcc_json_parser_match_constant@@Base+0x17c>
   3aa6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aa70:	ldrb	r3, [r3]
   3aa74:	cmp	r3, #34	; 0x22
   3aa78:	beq	3aaac <flatcc_json_parser_match_constant@@Base+0x13c>
   3aa7c:	cmp	r3, #92	; 0x5c
   3aa80:	bne	3aadc <flatcc_json_parser_match_constant@@Base+0x16c>
   3aa84:	ldr	r3, [fp, #4]
   3aa88:	mov	r2, #0
   3aa8c:	str	r2, [r3]
   3aa90:	mov	r3, #18
   3aa94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3aa98:	ldr	r1, [fp, #-20]	; 0xffffffec
   3aa9c:	ldr	r0, [fp, #-16]
   3aaa0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3aaa4:	mov	r3, r0
   3aaa8:	b	3aaec <flatcc_json_parser_match_constant@@Base+0x17c>
   3aaac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aab0:	add	r3, r3, #1
   3aab4:	mov	r2, #0
   3aab8:	mov	r1, r3
   3aabc:	ldr	r0, [fp, #-16]
   3aac0:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3aac4:	str	r0, [fp, #-20]	; 0xffffffec
   3aac8:	ldr	r3, [fp, #4]
   3aacc:	mov	r2, #0
   3aad0:	str	r2, [r3]
   3aad4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aad8:	b	3aaec <flatcc_json_parser_match_constant@@Base+0x17c>
   3aadc:	ldr	r3, [fp, #4]
   3aae0:	mov	r2, #0
   3aae4:	str	r2, [r3]
   3aae8:	ldr	r3, [fp, #-8]
   3aaec:	mov	r0, r3
   3aaf0:	sub	sp, fp, #4
   3aaf4:	pop	{fp, pc}

0003aaf8 <flatcc_json_parser_unmatched_symbol@@Base>:
   3aaf8:	push	{fp, lr}
   3aafc:	add	fp, sp, #4
   3ab00:	sub	sp, sp, #16
   3ab04:	str	r0, [fp, #-8]
   3ab08:	str	r1, [fp, #-12]
   3ab0c:	str	r2, [fp, #-16]
   3ab10:	ldr	r3, [fp, #-8]
   3ab14:	ldr	r3, [r3, #8]
   3ab18:	and	r3, r3, #1
   3ab1c:	cmp	r3, #0
   3ab20:	beq	3abc0 <flatcc_json_parser_unmatched_symbol@@Base+0xc8>
   3ab24:	ldr	r2, [fp, #-16]
   3ab28:	ldr	r1, [fp, #-12]
   3ab2c:	ldr	r0, [fp, #-8]
   3ab30:	bl	34f30 <flatcc_verify_union_vector_field@@Base+0x508>
   3ab34:	str	r0, [fp, #-12]
   3ab38:	ldr	r2, [fp, #-16]
   3ab3c:	ldr	r1, [fp, #-12]
   3ab40:	ldr	r0, [fp, #-8]
   3ab44:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3ab48:	str	r0, [fp, #-12]
   3ab4c:	ldr	r2, [fp, #-12]
   3ab50:	ldr	r3, [fp, #-16]
   3ab54:	cmp	r2, r3
   3ab58:	beq	3aba4 <flatcc_json_parser_unmatched_symbol@@Base+0xac>
   3ab5c:	ldr	r3, [fp, #-12]
   3ab60:	ldrb	r3, [r3]
   3ab64:	cmp	r3, #58	; 0x3a
   3ab68:	bne	3aba4 <flatcc_json_parser_unmatched_symbol@@Base+0xac>
   3ab6c:	ldr	r3, [fp, #-12]
   3ab70:	add	r3, r3, #1
   3ab74:	str	r3, [fp, #-12]
   3ab78:	ldr	r2, [fp, #-16]
   3ab7c:	ldr	r1, [fp, #-12]
   3ab80:	ldr	r0, [fp, #-8]
   3ab84:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3ab88:	str	r0, [fp, #-12]
   3ab8c:	ldr	r2, [fp, #-16]
   3ab90:	ldr	r1, [fp, #-12]
   3ab94:	ldr	r0, [fp, #-8]
   3ab98:	bl	3b2b8 <flatcc_json_parser_generic_json@@Base>
   3ab9c:	mov	r3, r0
   3aba0:	b	3abd8 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   3aba4:	mov	r3, #4
   3aba8:	ldr	r2, [fp, #-16]
   3abac:	ldr	r1, [fp, #-12]
   3abb0:	ldr	r0, [fp, #-8]
   3abb4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3abb8:	mov	r3, r0
   3abbc:	b	3abd8 <flatcc_json_parser_unmatched_symbol@@Base+0xe0>
   3abc0:	mov	r3, #13
   3abc4:	ldr	r2, [fp, #-16]
   3abc8:	ldr	r1, [fp, #-12]
   3abcc:	ldr	r0, [fp, #-8]
   3abd0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3abd4:	mov	r3, r0
   3abd8:	mov	r0, r3
   3abdc:	sub	sp, fp, #4
   3abe0:	pop	{fp, pc}
   3abe4:	push	{fp, lr}
   3abe8:	add	fp, sp, #4
   3abec:	sub	sp, sp, #16
   3abf0:	str	r0, [fp, #-8]
   3abf4:	str	r1, [fp, #-12]
   3abf8:	str	r2, [fp, #-16]
   3abfc:	ldr	r2, [fp, #-12]
   3ac00:	ldr	r3, [fp, #-16]
   3ac04:	cmp	r2, r3
   3ac08:	bne	3ac14 <flatcc_json_parser_unmatched_symbol@@Base+0x11c>
   3ac0c:	ldr	r3, [fp, #-12]
   3ac10:	b	3af74 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3ac14:	ldr	r3, [fp, #-12]
   3ac18:	ldrb	r3, [r3]
   3ac1c:	cmp	r3, #45	; 0x2d
   3ac20:	bne	3ac5c <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   3ac24:	ldr	r3, [fp, #-12]
   3ac28:	add	r3, r3, #1
   3ac2c:	str	r3, [fp, #-12]
   3ac30:	ldr	r2, [fp, #-12]
   3ac34:	ldr	r3, [fp, #-16]
   3ac38:	cmp	r2, r3
   3ac3c:	bne	3ac5c <flatcc_json_parser_unmatched_symbol@@Base+0x164>
   3ac40:	mov	r3, #6
   3ac44:	ldr	r2, [fp, #-16]
   3ac48:	ldr	r1, [fp, #-12]
   3ac4c:	ldr	r0, [fp, #-8]
   3ac50:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3ac54:	mov	r3, r0
   3ac58:	b	3af74 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3ac5c:	ldr	r3, [fp, #-12]
   3ac60:	ldrb	r3, [r3]
   3ac64:	cmp	r3, #48	; 0x30
   3ac68:	bne	3ac7c <flatcc_json_parser_unmatched_symbol@@Base+0x184>
   3ac6c:	ldr	r3, [fp, #-12]
   3ac70:	add	r3, r3, #1
   3ac74:	str	r3, [fp, #-12]
   3ac78:	b	3ad04 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   3ac7c:	ldr	r3, [fp, #-12]
   3ac80:	ldrb	r3, [r3]
   3ac84:	cmp	r3, #48	; 0x30
   3ac88:	bls	3ac9c <flatcc_json_parser_unmatched_symbol@@Base+0x1a4>
   3ac8c:	ldr	r3, [fp, #-12]
   3ac90:	ldrb	r3, [r3]
   3ac94:	cmp	r3, #57	; 0x39
   3ac98:	bls	3acb8 <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   3ac9c:	mov	r3, #6
   3aca0:	ldr	r2, [fp, #-16]
   3aca4:	ldr	r1, [fp, #-12]
   3aca8:	ldr	r0, [fp, #-8]
   3acac:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3acb0:	mov	r3, r0
   3acb4:	b	3af74 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3acb8:	ldr	r3, [fp, #-12]
   3acbc:	add	r3, r3, #1
   3acc0:	str	r3, [fp, #-12]
   3acc4:	b	3acd4 <flatcc_json_parser_unmatched_symbol@@Base+0x1dc>
   3acc8:	ldr	r3, [fp, #-12]
   3accc:	add	r3, r3, #1
   3acd0:	str	r3, [fp, #-12]
   3acd4:	ldr	r2, [fp, #-12]
   3acd8:	ldr	r3, [fp, #-16]
   3acdc:	cmp	r2, r3
   3ace0:	beq	3ad04 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   3ace4:	ldr	r3, [fp, #-12]
   3ace8:	ldrb	r3, [r3]
   3acec:	cmp	r3, #47	; 0x2f
   3acf0:	bls	3ad04 <flatcc_json_parser_unmatched_symbol@@Base+0x20c>
   3acf4:	ldr	r3, [fp, #-12]
   3acf8:	ldrb	r3, [r3]
   3acfc:	cmp	r3, #57	; 0x39
   3ad00:	bls	3acc8 <flatcc_json_parser_unmatched_symbol@@Base+0x1d0>
   3ad04:	ldr	r2, [fp, #-12]
   3ad08:	ldr	r3, [fp, #-16]
   3ad0c:	cmp	r2, r3
   3ad10:	beq	3adb8 <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3ad14:	ldr	r3, [fp, #-12]
   3ad18:	ldrb	r3, [r3]
   3ad1c:	cmp	r3, #46	; 0x2e
   3ad20:	bne	3adb8 <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3ad24:	ldr	r3, [fp, #-12]
   3ad28:	add	r3, r3, #1
   3ad2c:	str	r3, [fp, #-12]
   3ad30:	ldr	r3, [fp, #-12]
   3ad34:	ldrb	r3, [r3]
   3ad38:	cmp	r3, #47	; 0x2f
   3ad3c:	bls	3ad50 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   3ad40:	ldr	r3, [fp, #-12]
   3ad44:	ldrb	r3, [r3]
   3ad48:	cmp	r3, #57	; 0x39
   3ad4c:	bls	3ad6c <flatcc_json_parser_unmatched_symbol@@Base+0x274>
   3ad50:	mov	r3, #6
   3ad54:	ldr	r2, [fp, #-16]
   3ad58:	ldr	r1, [fp, #-12]
   3ad5c:	ldr	r0, [fp, #-8]
   3ad60:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3ad64:	mov	r3, r0
   3ad68:	b	3af74 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3ad6c:	ldr	r3, [fp, #-12]
   3ad70:	add	r3, r3, #1
   3ad74:	str	r3, [fp, #-12]
   3ad78:	b	3ad88 <flatcc_json_parser_unmatched_symbol@@Base+0x290>
   3ad7c:	ldr	r3, [fp, #-12]
   3ad80:	add	r3, r3, #1
   3ad84:	str	r3, [fp, #-12]
   3ad88:	ldr	r2, [fp, #-12]
   3ad8c:	ldr	r3, [fp, #-16]
   3ad90:	cmp	r2, r3
   3ad94:	beq	3adb8 <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3ad98:	ldr	r3, [fp, #-12]
   3ad9c:	ldrb	r3, [r3]
   3ada0:	cmp	r3, #47	; 0x2f
   3ada4:	bls	3adb8 <flatcc_json_parser_unmatched_symbol@@Base+0x2c0>
   3ada8:	ldr	r3, [fp, #-12]
   3adac:	ldrb	r3, [r3]
   3adb0:	cmp	r3, #57	; 0x39
   3adb4:	bls	3ad7c <flatcc_json_parser_unmatched_symbol@@Base+0x284>
   3adb8:	ldr	r2, [fp, #-12]
   3adbc:	ldr	r3, [fp, #-16]
   3adc0:	cmp	r2, r3
   3adc4:	beq	3aee4 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3adc8:	ldr	r3, [fp, #-12]
   3adcc:	ldrb	r3, [r3]
   3add0:	cmp	r3, #101	; 0x65
   3add4:	beq	3ade8 <flatcc_json_parser_unmatched_symbol@@Base+0x2f0>
   3add8:	ldr	r3, [fp, #-12]
   3addc:	ldrb	r3, [r3]
   3ade0:	cmp	r3, #69	; 0x45
   3ade4:	bne	3aee4 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3ade8:	ldr	r3, [fp, #-12]
   3adec:	add	r3, r3, #1
   3adf0:	str	r3, [fp, #-12]
   3adf4:	ldr	r2, [fp, #-12]
   3adf8:	ldr	r3, [fp, #-16]
   3adfc:	cmp	r2, r3
   3ae00:	bne	3ae20 <flatcc_json_parser_unmatched_symbol@@Base+0x328>
   3ae04:	mov	r3, #6
   3ae08:	ldr	r2, [fp, #-16]
   3ae0c:	ldr	r1, [fp, #-12]
   3ae10:	ldr	r0, [fp, #-8]
   3ae14:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3ae18:	mov	r3, r0
   3ae1c:	b	3af74 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3ae20:	ldr	r3, [fp, #-12]
   3ae24:	ldrb	r3, [r3]
   3ae28:	cmp	r3, #43	; 0x2b
   3ae2c:	beq	3ae40 <flatcc_json_parser_unmatched_symbol@@Base+0x348>
   3ae30:	ldr	r3, [fp, #-12]
   3ae34:	ldrb	r3, [r3]
   3ae38:	cmp	r3, #45	; 0x2d
   3ae3c:	bne	3ae4c <flatcc_json_parser_unmatched_symbol@@Base+0x354>
   3ae40:	ldr	r3, [fp, #-12]
   3ae44:	add	r3, r3, #1
   3ae48:	str	r3, [fp, #-12]
   3ae4c:	ldr	r2, [fp, #-12]
   3ae50:	ldr	r3, [fp, #-16]
   3ae54:	cmp	r2, r3
   3ae58:	beq	3ae7c <flatcc_json_parser_unmatched_symbol@@Base+0x384>
   3ae5c:	ldr	r3, [fp, #-12]
   3ae60:	ldrb	r3, [r3]
   3ae64:	cmp	r3, #47	; 0x2f
   3ae68:	bls	3ae7c <flatcc_json_parser_unmatched_symbol@@Base+0x384>
   3ae6c:	ldr	r3, [fp, #-12]
   3ae70:	ldrb	r3, [r3]
   3ae74:	cmp	r3, #57	; 0x39
   3ae78:	bls	3ae98 <flatcc_json_parser_unmatched_symbol@@Base+0x3a0>
   3ae7c:	mov	r3, #6
   3ae80:	ldr	r2, [fp, #-16]
   3ae84:	ldr	r1, [fp, #-12]
   3ae88:	ldr	r0, [fp, #-8]
   3ae8c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3ae90:	mov	r3, r0
   3ae94:	b	3af74 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3ae98:	ldr	r3, [fp, #-12]
   3ae9c:	add	r3, r3, #1
   3aea0:	str	r3, [fp, #-12]
   3aea4:	b	3aeb4 <flatcc_json_parser_unmatched_symbol@@Base+0x3bc>
   3aea8:	ldr	r3, [fp, #-12]
   3aeac:	add	r3, r3, #1
   3aeb0:	str	r3, [fp, #-12]
   3aeb4:	ldr	r2, [fp, #-12]
   3aeb8:	ldr	r3, [fp, #-16]
   3aebc:	cmp	r2, r3
   3aec0:	beq	3aee4 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3aec4:	ldr	r3, [fp, #-12]
   3aec8:	ldrb	r3, [r3]
   3aecc:	cmp	r3, #47	; 0x2f
   3aed0:	bls	3aee4 <flatcc_json_parser_unmatched_symbol@@Base+0x3ec>
   3aed4:	ldr	r3, [fp, #-12]
   3aed8:	ldrb	r3, [r3]
   3aedc:	cmp	r3, #57	; 0x39
   3aee0:	bls	3aea8 <flatcc_json_parser_unmatched_symbol@@Base+0x3b0>
   3aee4:	ldr	r2, [fp, #-12]
   3aee8:	ldr	r3, [fp, #-16]
   3aeec:	cmp	r2, r3
   3aef0:	beq	3af5c <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3aef4:	ldr	r3, [fp, #-12]
   3aef8:	ldrb	r3, [r3]
   3aefc:	cmp	r3, #32
   3af00:	beq	3af54 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3af04:	cmp	r3, #32
   3af08:	bgt	3af28 <flatcc_json_parser_unmatched_symbol@@Base+0x430>
   3af0c:	cmp	r3, #9
   3af10:	blt	3af5c <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3af14:	cmp	r3, #11
   3af18:	ble	3af54 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3af1c:	cmp	r3, #13
   3af20:	beq	3af54 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3af24:	b	3af5c <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3af28:	cmp	r3, #58	; 0x3a
   3af2c:	beq	3af54 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3af30:	cmp	r3, #58	; 0x3a
   3af34:	bgt	3af44 <flatcc_json_parser_unmatched_symbol@@Base+0x44c>
   3af38:	cmp	r3, #44	; 0x2c
   3af3c:	beq	3af54 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3af40:	b	3af5c <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3af44:	cmp	r3, #93	; 0x5d
   3af48:	beq	3af54 <flatcc_json_parser_unmatched_symbol@@Base+0x45c>
   3af4c:	cmp	r3, #125	; 0x7d
   3af50:	bne	3af5c <flatcc_json_parser_unmatched_symbol@@Base+0x464>
   3af54:	ldr	r3, [fp, #-12]
   3af58:	b	3af74 <flatcc_json_parser_unmatched_symbol@@Base+0x47c>
   3af5c:	mov	r3, #6
   3af60:	ldr	r2, [fp, #-16]
   3af64:	ldr	r1, [fp, #-12]
   3af68:	ldr	r0, [fp, #-8]
   3af6c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3af70:	mov	r3, r0
   3af74:	mov	r0, r3
   3af78:	sub	sp, fp, #4
   3af7c:	pop	{fp, pc}

0003af80 <flatcc_json_parser_double@@Base>:
   3af80:	push	{fp, lr}
   3af84:	add	fp, sp, #4
   3af88:	sub	sp, sp, #24
   3af8c:	str	r0, [fp, #-16]
   3af90:	str	r1, [fp, #-20]	; 0xffffffec
   3af94:	str	r2, [fp, #-24]	; 0xffffffe8
   3af98:	str	r3, [fp, #-28]	; 0xffffffe4
   3af9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3afa0:	mov	r2, #0
   3afa4:	mov	r3, #0
   3afa8:	strd	r2, [r1]
   3afac:	ldr	r2, [fp, #-20]	; 0xffffffec
   3afb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3afb4:	cmp	r2, r3
   3afb8:	bne	3afc4 <flatcc_json_parser_double@@Base+0x44>
   3afbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3afc0:	b	3b10c <flatcc_json_parser_double@@Base+0x18c>
   3afc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3afc8:	str	r3, [fp, #-8]
   3afcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3afd0:	ldrb	r3, [r3]
   3afd4:	cmp	r3, #45	; 0x2d
   3afd8:	bne	3afe8 <flatcc_json_parser_double@@Base+0x68>
   3afdc:	ldr	r3, [fp, #-8]
   3afe0:	add	r3, r3, #1
   3afe4:	str	r3, [fp, #-8]
   3afe8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3afec:	ldr	r3, [fp, #-8]
   3aff0:	sub	r3, r2, r3
   3aff4:	cmp	r3, #1
   3aff8:	ble	3b04c <flatcc_json_parser_double@@Base+0xcc>
   3affc:	ldr	r3, [fp, #-8]
   3b000:	ldrb	r3, [r3]
   3b004:	cmp	r3, #46	; 0x2e
   3b008:	beq	3b030 <flatcc_json_parser_double@@Base+0xb0>
   3b00c:	ldr	r3, [fp, #-8]
   3b010:	ldrb	r3, [r3]
   3b014:	cmp	r3, #48	; 0x30
   3b018:	bne	3b04c <flatcc_json_parser_double@@Base+0xcc>
   3b01c:	ldr	r3, [fp, #-8]
   3b020:	add	r3, r3, #1
   3b024:	ldrb	r3, [r3]
   3b028:	cmp	r3, #48	; 0x30
   3b02c:	bne	3b04c <flatcc_json_parser_double@@Base+0xcc>
   3b030:	mov	r3, #6
   3b034:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b038:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b03c:	ldr	r0, [fp, #-16]
   3b040:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b044:	mov	r3, r0
   3b048:	b	3b10c <flatcc_json_parser_double@@Base+0x18c>
   3b04c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b050:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b054:	sub	r3, r2, r3
   3b058:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b05c:	mov	r1, r3
   3b060:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b064:	bl	38c3c <grisu3_diy_fp_encode_double@@Base+0x140c>
   3b068:	str	r0, [fp, #-12]
   3b06c:	ldr	r3, [fp, #-12]
   3b070:	cmp	r3, #0
   3b074:	beq	3b088 <flatcc_json_parser_double@@Base+0x108>
   3b078:	ldr	r2, [fp, #-12]
   3b07c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b080:	cmp	r2, r3
   3b084:	bne	3b108 <flatcc_json_parser_double@@Base+0x188>
   3b088:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b08c:	vldr	d7, [r3]
   3b090:	vabs.f64	d7, d7
   3b094:	vldr	d6, [pc, #124]	; 3b118 <flatcc_json_parser_double@@Base+0x198>
   3b098:	vcmp.f64	d7, d6
   3b09c:	vmrs	APSR_nzcv, fpscr
   3b0a0:	movle	r3, #1
   3b0a4:	movgt	r3, #0
   3b0a8:	uxtb	r3, r3
   3b0ac:	eor	r3, r3, #1
   3b0b0:	uxtb	r3, r3
   3b0b4:	cmp	r3, #0
   3b0b8:	beq	3b0c4 <flatcc_json_parser_double@@Base+0x144>
   3b0bc:	mov	r3, #1
   3b0c0:	b	3b0c8 <flatcc_json_parser_double@@Base+0x148>
   3b0c4:	mov	r3, #0
   3b0c8:	cmp	r3, #0
   3b0cc:	beq	3b0ec <flatcc_json_parser_double@@Base+0x16c>
   3b0d0:	mov	r3, #7
   3b0d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b0d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b0dc:	ldr	r0, [fp, #-16]
   3b0e0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b0e4:	mov	r3, r0
   3b0e8:	b	3b10c <flatcc_json_parser_double@@Base+0x18c>
   3b0ec:	mov	r3, #6
   3b0f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b0f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b0f8:	ldr	r0, [fp, #-16]
   3b0fc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b100:	mov	r3, r0
   3b104:	b	3b10c <flatcc_json_parser_double@@Base+0x18c>
   3b108:	ldr	r3, [fp, #-12]
   3b10c:	mov	r0, r3
   3b110:	sub	sp, fp, #4
   3b114:	pop	{fp, pc}
   3b118:			; <UNDEFINED> instruction: 0xffffffff
   3b11c:	svcvc	0x00efffff

0003b120 <flatcc_json_parser_float@@Base>:
   3b120:	push	{fp, lr}
   3b124:	add	fp, sp, #4
   3b128:	sub	sp, sp, #24
   3b12c:	str	r0, [fp, #-16]
   3b130:	str	r1, [fp, #-20]	; 0xffffffec
   3b134:	str	r2, [fp, #-24]	; 0xffffffe8
   3b138:	str	r3, [fp, #-28]	; 0xffffffe4
   3b13c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b140:	mov	r2, #0
   3b144:	str	r2, [r3]
   3b148:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b14c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b150:	cmp	r2, r3
   3b154:	bne	3b160 <flatcc_json_parser_float@@Base+0x40>
   3b158:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b15c:	b	3b2a8 <flatcc_json_parser_float@@Base+0x188>
   3b160:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b164:	str	r3, [fp, #-8]
   3b168:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b16c:	ldrb	r3, [r3]
   3b170:	cmp	r3, #45	; 0x2d
   3b174:	bne	3b184 <flatcc_json_parser_float@@Base+0x64>
   3b178:	ldr	r3, [fp, #-8]
   3b17c:	add	r3, r3, #1
   3b180:	str	r3, [fp, #-8]
   3b184:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b188:	ldr	r3, [fp, #-8]
   3b18c:	sub	r3, r2, r3
   3b190:	cmp	r3, #1
   3b194:	ble	3b1e8 <flatcc_json_parser_float@@Base+0xc8>
   3b198:	ldr	r3, [fp, #-8]
   3b19c:	ldrb	r3, [r3]
   3b1a0:	cmp	r3, #46	; 0x2e
   3b1a4:	beq	3b1cc <flatcc_json_parser_float@@Base+0xac>
   3b1a8:	ldr	r3, [fp, #-8]
   3b1ac:	ldrb	r3, [r3]
   3b1b0:	cmp	r3, #48	; 0x30
   3b1b4:	bne	3b1e8 <flatcc_json_parser_float@@Base+0xc8>
   3b1b8:	ldr	r3, [fp, #-8]
   3b1bc:	add	r3, r3, #1
   3b1c0:	ldrb	r3, [r3]
   3b1c4:	cmp	r3, #48	; 0x30
   3b1c8:	bne	3b1e8 <flatcc_json_parser_float@@Base+0xc8>
   3b1cc:	mov	r3, #6
   3b1d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b1d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b1d8:	ldr	r0, [fp, #-16]
   3b1dc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b1e0:	mov	r3, r0
   3b1e4:	b	3b2a8 <flatcc_json_parser_float@@Base+0x188>
   3b1e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b1ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b1f0:	sub	r3, r2, r3
   3b1f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3b1f8:	mov	r1, r3
   3b1fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   3b200:	bl	38c74 <grisu3_diy_fp_encode_double@@Base+0x1444>
   3b204:	str	r0, [fp, #-12]
   3b208:	ldr	r3, [fp, #-12]
   3b20c:	cmp	r3, #0
   3b210:	beq	3b224 <flatcc_json_parser_float@@Base+0x104>
   3b214:	ldr	r2, [fp, #-12]
   3b218:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b21c:	cmp	r2, r3
   3b220:	bne	3b2a4 <flatcc_json_parser_float@@Base+0x184>
   3b224:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b228:	vldr	s15, [r3]
   3b22c:	vabs.f32	s15, s15
   3b230:	vldr	s14, [pc, #124]	; 3b2b4 <flatcc_json_parser_float@@Base+0x194>
   3b234:	vcmp.f32	s15, s14
   3b238:	vmrs	APSR_nzcv, fpscr
   3b23c:	movle	r3, #1
   3b240:	movgt	r3, #0
   3b244:	uxtb	r3, r3
   3b248:	eor	r3, r3, #1
   3b24c:	uxtb	r3, r3
   3b250:	cmp	r3, #0
   3b254:	beq	3b260 <flatcc_json_parser_float@@Base+0x140>
   3b258:	mov	r3, #1
   3b25c:	b	3b264 <flatcc_json_parser_float@@Base+0x144>
   3b260:	mov	r3, #0
   3b264:	cmp	r3, #0
   3b268:	beq	3b288 <flatcc_json_parser_float@@Base+0x168>
   3b26c:	mov	r3, #7
   3b270:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b274:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b278:	ldr	r0, [fp, #-16]
   3b27c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b280:	mov	r3, r0
   3b284:	b	3b2a8 <flatcc_json_parser_float@@Base+0x188>
   3b288:	mov	r3, #6
   3b28c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b290:	ldr	r1, [fp, #-20]	; 0xffffffec
   3b294:	ldr	r0, [fp, #-16]
   3b298:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b29c:	mov	r3, r0
   3b2a0:	b	3b2a8 <flatcc_json_parser_float@@Base+0x188>
   3b2a4:	ldr	r3, [fp, #-12]
   3b2a8:	mov	r0, r3
   3b2ac:	sub	sp, fp, #4
   3b2b0:	pop	{fp, pc}
   3b2b4:	svcvc	0x007fffff

0003b2b8 <flatcc_json_parser_generic_json@@Base>:
   3b2b8:	push	{fp, lr}
   3b2bc:	add	fp, sp, #4
   3b2c0:	sub	sp, sp, #552	; 0x228
   3b2c4:	str	r0, [fp, #-544]	; 0xfffffde0
   3b2c8:	str	r1, [fp, #-548]	; 0xfffffddc
   3b2cc:	str	r2, [fp, #-552]	; 0xfffffdd8
   3b2d0:	mov	r3, #0
   3b2d4:	str	r3, [fp, #-536]	; 0xfffffde8
   3b2d8:	sub	r3, fp, #528	; 0x210
   3b2dc:	str	r3, [fp, #-8]
   3b2e0:	ldr	r3, [fp, #-8]
   3b2e4:	add	r3, r3, #512	; 0x200
   3b2e8:	str	r3, [fp, #-12]
   3b2ec:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b2f0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b2f4:	cmp	r2, r3
   3b2f8:	bne	3b304 <flatcc_json_parser_generic_json@@Base+0x4c>
   3b2fc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b300:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b304:	sub	r3, fp, #528	; 0x210
   3b308:	ldr	r2, [fp, #-8]
   3b30c:	cmp	r2, r3
   3b310:	beq	3b3d8 <flatcc_json_parser_generic_json@@Base+0x120>
   3b314:	ldr	r3, [fp, #-8]
   3b318:	sub	r3, r3, #1
   3b31c:	ldrb	r3, [r3]
   3b320:	cmp	r3, #125	; 0x7d
   3b324:	bne	3b3d8 <flatcc_json_parser_generic_json@@Base+0x120>
   3b328:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b32c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b330:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b334:	bl	34eb8 <flatcc_verify_union_vector_field@@Base+0x490>
   3b338:	str	r0, [fp, #-548]	; 0xfffffddc
   3b33c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b340:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b344:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b348:	bl	34f30 <flatcc_verify_union_vector_field@@Base+0x508>
   3b34c:	str	r0, [fp, #-548]	; 0xfffffddc
   3b350:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b354:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b358:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b35c:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3b360:	str	r0, [fp, #-548]	; 0xfffffddc
   3b364:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b368:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b36c:	cmp	r2, r3
   3b370:	bne	3b390 <flatcc_json_parser_generic_json@@Base+0xd8>
   3b374:	mov	r3, #10
   3b378:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b37c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b380:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b384:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b388:	mov	r3, r0
   3b38c:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b390:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b394:	ldrb	r3, [r3]
   3b398:	cmp	r3, #58	; 0x3a
   3b39c:	beq	3b3bc <flatcc_json_parser_generic_json@@Base+0x104>
   3b3a0:	mov	r3, #4
   3b3a4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b3a8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b3ac:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b3b0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b3b4:	mov	r3, r0
   3b3b8:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b3bc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b3c0:	add	r3, r3, #1
   3b3c4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b3c8:	mov	r1, r3
   3b3cc:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b3d0:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3b3d4:	str	r0, [fp, #-548]	; 0xfffffddc
   3b3d8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b3dc:	ldrb	r3, [r3]
   3b3e0:	sub	r3, r3, #34	; 0x22
   3b3e4:	cmp	r3, #89	; 0x59
   3b3e8:	addls	pc, pc, r3, lsl #2
   3b3ec:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b3f0:	b	3b558 <flatcc_json_parser_generic_json@@Base+0x2a0>
   3b3f4:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b3f8:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b3fc:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b400:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b404:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b408:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b40c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b410:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b414:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b418:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b41c:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b420:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b424:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b428:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b42c:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b430:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b434:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b438:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b43c:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b440:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b444:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b448:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b44c:	b	3b5fc <flatcc_json_parser_generic_json@@Base+0x344>
   3b450:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b454:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b458:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b45c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b460:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b464:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b468:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b46c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b470:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b474:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b478:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b47c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b480:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b484:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b488:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b48c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b490:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b494:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b498:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b49c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4a0:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4a4:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4a8:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4ac:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4b0:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4b4:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4b8:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4bc:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4c0:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4c4:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4c8:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4cc:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4d0:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4d4:	b	3b6a8 <flatcc_json_parser_generic_json@@Base+0x3f0>
   3b4d8:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4dc:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4e0:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4e4:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4e8:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4ec:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4f0:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4f4:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4f8:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b4fc:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b500:	b	3b614 <flatcc_json_parser_generic_json@@Base+0x35c>
   3b504:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b508:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b50c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b510:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b514:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b518:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b51c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b520:	b	3b664 <flatcc_json_parser_generic_json@@Base+0x3ac>
   3b524:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b528:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b52c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b530:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b534:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b538:	b	3b614 <flatcc_json_parser_generic_json@@Base+0x35c>
   3b53c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b540:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b544:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b548:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b54c:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b550:	b	3b7a8 <flatcc_json_parser_generic_json@@Base+0x4f0>
   3b554:	b	3b728 <flatcc_json_parser_generic_json@@Base+0x470>
   3b558:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b55c:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b560:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b564:	bl	34dd8 <flatcc_verify_union_vector_field@@Base+0x3b0>
   3b568:	str	r0, [fp, #-548]	; 0xfffffddc
   3b56c:	b	3b5bc <flatcc_json_parser_generic_json@@Base+0x304>
   3b570:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b574:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b578:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b57c:	bl	39c30 <flatcc_json_parser_string_part@@Base>
   3b580:	str	r0, [fp, #-548]	; 0xfffffddc
   3b584:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b588:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b58c:	cmp	r2, r3
   3b590:	beq	3b5a4 <flatcc_json_parser_generic_json@@Base+0x2ec>
   3b594:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b598:	ldrb	r3, [r3]
   3b59c:	cmp	r3, #34	; 0x22
   3b5a0:	beq	3b5e0 <flatcc_json_parser_generic_json@@Base+0x328>
   3b5a4:	sub	r3, fp, #532	; 0x214
   3b5a8:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b5ac:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b5b0:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b5b4:	bl	39eac <flatcc_json_parser_string_escape@@Base>
   3b5b8:	str	r0, [fp, #-548]	; 0xfffffddc
   3b5bc:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b5c0:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b5c4:	cmp	r2, r3
   3b5c8:	beq	3b5e4 <flatcc_json_parser_generic_json@@Base+0x32c>
   3b5cc:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b5d0:	ldrb	r3, [r3]
   3b5d4:	cmp	r3, #34	; 0x22
   3b5d8:	bne	3b570 <flatcc_json_parser_generic_json@@Base+0x2b8>
   3b5dc:	b	3b5e4 <flatcc_json_parser_generic_json@@Base+0x32c>
   3b5e0:	nop			; (mov r0, r0)
   3b5e4:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b5e8:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b5ec:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b5f0:	bl	34e48 <flatcc_verify_union_vector_field@@Base+0x420>
   3b5f4:	str	r0, [fp, #-548]	; 0xfffffddc
   3b5f8:	b	3b7e0 <flatcc_json_parser_generic_json@@Base+0x528>
   3b5fc:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b600:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b604:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b608:	bl	3abe4 <flatcc_json_parser_unmatched_symbol@@Base+0xec>
   3b60c:	str	r0, [fp, #-548]	; 0xfffffddc
   3b610:	b	3b7e0 <flatcc_json_parser_generic_json@@Base+0x528>
   3b614:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b618:	str	r3, [fp, #-16]
   3b61c:	sub	r3, fp, #536	; 0x218
   3b620:	sub	r3, r3, #1
   3b624:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b628:	ldr	r1, [fp, #-16]
   3b62c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b630:	bl	35b9c <flatcc_verify_union_vector_field@@Base+0x1174>
   3b634:	str	r0, [fp, #-548]	; 0xfffffddc
   3b638:	ldr	r2, [fp, #-16]
   3b63c:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b640:	cmp	r2, r3
   3b644:	bne	3b7c4 <flatcc_json_parser_generic_json@@Base+0x50c>
   3b648:	mov	r3, #5
   3b64c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b650:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b654:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b658:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b65c:	mov	r3, r0
   3b660:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b664:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b668:	str	r3, [fp, #-16]
   3b66c:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   3b670:	ldr	r0, [fp, #-16]
   3b674:	bl	35a60 <flatcc_verify_union_vector_field@@Base+0x1038>
   3b678:	str	r0, [fp, #-548]	; 0xfffffddc
   3b67c:	ldr	r2, [fp, #-16]
   3b680:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b684:	cmp	r2, r3
   3b688:	bne	3b7cc <flatcc_json_parser_generic_json@@Base+0x514>
   3b68c:	mov	r3, #5
   3b690:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b694:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b698:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b69c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b6a0:	mov	r3, r0
   3b6a4:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b6a8:	ldr	r2, [fp, #-8]
   3b6ac:	ldr	r3, [fp, #-12]
   3b6b0:	cmp	r2, r3
   3b6b4:	bne	3b6d4 <flatcc_json_parser_generic_json@@Base+0x41c>
   3b6b8:	mov	r3, #2
   3b6bc:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b6c0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b6c4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b6c8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b6cc:	mov	r3, r0
   3b6d0:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b6d4:	ldr	r3, [fp, #-8]
   3b6d8:	add	r2, r3, #1
   3b6dc:	str	r2, [fp, #-8]
   3b6e0:	mov	r2, #93	; 0x5d
   3b6e4:	strb	r2, [r3]
   3b6e8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b6ec:	add	r3, r3, #1
   3b6f0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b6f4:	mov	r1, r3
   3b6f8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b6fc:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3b700:	str	r0, [fp, #-548]	; 0xfffffddc
   3b704:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b708:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b70c:	cmp	r2, r3
   3b710:	beq	3b2ec <flatcc_json_parser_generic_json@@Base+0x34>
   3b714:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b718:	ldrb	r3, [r3]
   3b71c:	cmp	r3, #93	; 0x5d
   3b720:	beq	3b7d4 <flatcc_json_parser_generic_json@@Base+0x51c>
   3b724:	b	3b2ec <flatcc_json_parser_generic_json@@Base+0x34>
   3b728:	ldr	r2, [fp, #-8]
   3b72c:	ldr	r3, [fp, #-12]
   3b730:	cmp	r2, r3
   3b734:	bne	3b754 <flatcc_json_parser_generic_json@@Base+0x49c>
   3b738:	mov	r3, #2
   3b73c:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b740:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b744:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b748:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b74c:	mov	r3, r0
   3b750:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b754:	ldr	r3, [fp, #-8]
   3b758:	add	r2, r3, #1
   3b75c:	str	r2, [fp, #-8]
   3b760:	mov	r2, #125	; 0x7d
   3b764:	strb	r2, [r3]
   3b768:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b76c:	add	r3, r3, #1
   3b770:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b774:	mov	r1, r3
   3b778:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b77c:	bl	34d44 <flatcc_verify_union_vector_field@@Base+0x31c>
   3b780:	str	r0, [fp, #-548]	; 0xfffffddc
   3b784:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b788:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b78c:	cmp	r2, r3
   3b790:	beq	3b2ec <flatcc_json_parser_generic_json@@Base+0x34>
   3b794:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b798:	ldrb	r3, [r3]
   3b79c:	cmp	r3, #125	; 0x7d
   3b7a0:	beq	3b7dc <flatcc_json_parser_generic_json@@Base+0x524>
   3b7a4:	b	3b2ec <flatcc_json_parser_generic_json@@Base+0x34>
   3b7a8:	mov	r3, #5
   3b7ac:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b7b0:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b7b4:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b7b8:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b7bc:	mov	r3, r0
   3b7c0:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b7c4:	nop			; (mov r0, r0)
   3b7c8:	b	3b850 <flatcc_json_parser_generic_json@@Base+0x598>
   3b7cc:	nop			; (mov r0, r0)
   3b7d0:	b	3b850 <flatcc_json_parser_generic_json@@Base+0x598>
   3b7d4:	nop			; (mov r0, r0)
   3b7d8:	b	3b850 <flatcc_json_parser_generic_json@@Base+0x598>
   3b7dc:	nop			; (mov r0, r0)
   3b7e0:	b	3b850 <flatcc_json_parser_generic_json@@Base+0x598>
   3b7e4:	ldr	r3, [fp, #-8]
   3b7e8:	sub	r3, r3, #1
   3b7ec:	str	r3, [fp, #-8]
   3b7f0:	ldr	r3, [fp, #-8]
   3b7f4:	ldrb	r3, [r3]
   3b7f8:	cmp	r3, #93	; 0x5d
   3b7fc:	bne	3b81c <flatcc_json_parser_generic_json@@Base+0x564>
   3b800:	sub	r3, fp, #536	; 0x218
   3b804:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b808:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b80c:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b810:	bl	352b0 <flatcc_verify_union_vector_field@@Base+0x888>
   3b814:	str	r0, [fp, #-548]	; 0xfffffddc
   3b818:	b	3b834 <flatcc_json_parser_generic_json@@Base+0x57c>
   3b81c:	sub	r3, fp, #536	; 0x218
   3b820:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b824:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b828:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b82c:	bl	35060 <flatcc_verify_union_vector_field@@Base+0x638>
   3b830:	str	r0, [fp, #-548]	; 0xfffffddc
   3b834:	ldr	r3, [fp, #-536]	; 0xfffffde8
   3b838:	cmp	r3, #0
   3b83c:	beq	3b850 <flatcc_json_parser_generic_json@@Base+0x598>
   3b840:	ldr	r3, [fp, #-8]
   3b844:	add	r3, r3, #1
   3b848:	str	r3, [fp, #-8]
   3b84c:	b	3b2ec <flatcc_json_parser_generic_json@@Base+0x34>
   3b850:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b854:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b858:	cmp	r2, r3
   3b85c:	beq	3b870 <flatcc_json_parser_generic_json@@Base+0x5b8>
   3b860:	sub	r3, fp, #528	; 0x210
   3b864:	ldr	r2, [fp, #-8]
   3b868:	cmp	r2, r3
   3b86c:	bne	3b7e4 <flatcc_json_parser_generic_json@@Base+0x52c>
   3b870:	ldr	r2, [fp, #-548]	; 0xfffffddc
   3b874:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   3b878:	cmp	r2, r3
   3b87c:	bne	3b8c8 <flatcc_json_parser_generic_json@@Base+0x610>
   3b880:	sub	r3, fp, #528	; 0x210
   3b884:	ldr	r2, [fp, #-8]
   3b888:	cmp	r2, r3
   3b88c:	beq	3b8c8 <flatcc_json_parser_generic_json@@Base+0x610>
   3b890:	ldr	r3, [fp, #-8]
   3b894:	sub	r3, r3, #1
   3b898:	ldrb	r3, [r3]
   3b89c:	cmp	r3, #93	; 0x5d
   3b8a0:	bne	3b8ac <flatcc_json_parser_generic_json@@Base+0x5f4>
   3b8a4:	mov	r3, #9
   3b8a8:	b	3b8b0 <flatcc_json_parser_generic_json@@Base+0x5f8>
   3b8ac:	mov	r3, #10
   3b8b0:	ldr	r2, [fp, #-552]	; 0xfffffdd8
   3b8b4:	ldr	r1, [fp, #-548]	; 0xfffffddc
   3b8b8:	ldr	r0, [fp, #-544]	; 0xfffffde0
   3b8bc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b8c0:	mov	r3, r0
   3b8c4:	b	3b8cc <flatcc_json_parser_generic_json@@Base+0x614>
   3b8c8:	ldr	r3, [fp, #-548]	; 0xfffffddc
   3b8cc:	mov	r0, r3
   3b8d0:	sub	sp, fp, #4
   3b8d4:	pop	{fp, pc}

0003b8d8 <flatcc_json_parser_integer@@Base>:
   3b8d8:	push	{fp, lr}
   3b8dc:	add	fp, sp, #4
   3b8e0:	sub	sp, sp, #40	; 0x28
   3b8e4:	str	r0, [fp, #-32]	; 0xffffffe0
   3b8e8:	str	r1, [fp, #-36]	; 0xffffffdc
   3b8ec:	str	r2, [fp, #-40]	; 0xffffffd8
   3b8f0:	str	r3, [fp, #-44]	; 0xffffffd4
   3b8f4:	mov	r2, #0
   3b8f8:	mov	r3, #0
   3b8fc:	strd	r2, [fp, #-12]
   3b900:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3b904:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3b908:	cmp	r2, r3
   3b90c:	bne	3b918 <flatcc_json_parser_integer@@Base+0x40>
   3b910:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b914:	b	3bac0 <flatcc_json_parser_integer@@Base+0x1e8>
   3b918:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b91c:	str	r3, [fp, #-16]
   3b920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b924:	ldrb	r3, [r3]
   3b928:	cmp	r3, #45	; 0x2d
   3b92c:	moveq	r3, #1
   3b930:	movne	r3, #0
   3b934:	uxtb	r3, r3
   3b938:	mov	r2, r3
   3b93c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b940:	str	r2, [r3]
   3b944:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b948:	ldr	r3, [r3]
   3b94c:	mov	r2, r3
   3b950:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b954:	add	r3, r3, r2
   3b958:	str	r3, [fp, #-36]	; 0xffffffdc
   3b95c:	b	3ba0c <flatcc_json_parser_integer@@Base+0x134>
   3b960:	ldrd	r2, [fp, #-12]
   3b964:	strd	r2, [fp, #-28]	; 0xffffffe4
   3b968:	ldr	r3, [fp, #-8]
   3b96c:	mov	r2, #10
   3b970:	mul	r2, r2, r3
   3b974:	ldr	r3, [fp, #-12]
   3b978:	mov	r1, #0
   3b97c:	mul	r3, r1, r3
   3b980:	add	r1, r2, r3
   3b984:	ldr	r3, [fp, #-12]
   3b988:	mov	r2, #10
   3b98c:	umull	r2, r3, r3, r2
   3b990:	add	r1, r1, r3
   3b994:	mov	r3, r1
   3b998:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3b99c:	ldrb	r1, [r1]
   3b9a0:	uxtb	r0, r1
   3b9a4:	mov	r1, #0
   3b9a8:	adds	r2, r2, r0
   3b9ac:	adc	r3, r3, r1
   3b9b0:	subs	r2, r2, #48	; 0x30
   3b9b4:	sbc	r3, r3, #0
   3b9b8:	strd	r2, [fp, #-12]
   3b9bc:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   3b9c0:	ldrd	r2, [fp, #-12]
   3b9c4:	cmp	r1, r3
   3b9c8:	cmpeq	r0, r2
   3b9cc:	bls	3ba00 <flatcc_json_parser_integer@@Base+0x128>
   3b9d0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3b9d4:	cmp	r3, #0
   3b9d8:	beq	3b9e4 <flatcc_json_parser_integer@@Base+0x10c>
   3b9dc:	mov	r3, #8
   3b9e0:	b	3b9e8 <flatcc_json_parser_integer@@Base+0x110>
   3b9e4:	mov	r3, #7
   3b9e8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3b9ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3b9f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3b9f4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3b9f8:	mov	r3, r0
   3b9fc:	b	3bac0 <flatcc_json_parser_integer@@Base+0x1e8>
   3ba00:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ba04:	add	r3, r3, #1
   3ba08:	str	r3, [fp, #-36]	; 0xffffffdc
   3ba0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ba10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ba14:	cmp	r2, r3
   3ba18:	beq	3ba3c <flatcc_json_parser_integer@@Base+0x164>
   3ba1c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ba20:	ldrb	r3, [r3]
   3ba24:	cmp	r3, #47	; 0x2f
   3ba28:	bls	3ba3c <flatcc_json_parser_integer@@Base+0x164>
   3ba2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ba30:	ldrb	r3, [r3]
   3ba34:	cmp	r3, #57	; 0x39
   3ba38:	bls	3b960 <flatcc_json_parser_integer@@Base+0x88>
   3ba3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ba40:	ldr	r3, [fp, #-16]
   3ba44:	cmp	r2, r3
   3ba48:	bne	3ba54 <flatcc_json_parser_integer@@Base+0x17c>
   3ba4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ba50:	b	3bac0 <flatcc_json_parser_integer@@Base+0x1e8>
   3ba54:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ba58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ba5c:	cmp	r2, r3
   3ba60:	beq	3bab0 <flatcc_json_parser_integer@@Base+0x1d8>
   3ba64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ba68:	ldrb	r3, [r3]
   3ba6c:	cmp	r3, #101	; 0x65
   3ba70:	beq	3ba94 <flatcc_json_parser_integer@@Base+0x1bc>
   3ba74:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ba78:	ldrb	r3, [r3]
   3ba7c:	cmp	r3, #69	; 0x45
   3ba80:	beq	3ba94 <flatcc_json_parser_integer@@Base+0x1bc>
   3ba84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ba88:	ldrb	r3, [r3]
   3ba8c:	cmp	r3, #46	; 0x2e
   3ba90:	bne	3bab0 <flatcc_json_parser_integer@@Base+0x1d8>
   3ba94:	mov	r3, #12
   3ba98:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3ba9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3baa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3baa4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3baa8:	mov	r3, r0
   3baac:	b	3bac0 <flatcc_json_parser_integer@@Base+0x1e8>
   3bab0:	ldr	r1, [fp, #4]
   3bab4:	ldrd	r2, [fp, #-12]
   3bab8:	strd	r2, [r1]
   3babc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3bac0:	mov	r0, r3
   3bac4:	sub	sp, fp, #4
   3bac8:	pop	{fp, pc}

0003bacc <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   3bacc:	push	{fp, lr}
   3bad0:	add	fp, sp, #4
   3bad4:	sub	sp, sp, #56	; 0x38
   3bad8:	str	r0, [fp, #-40]	; 0xffffffd8
   3badc:	str	r1, [fp, #-44]	; 0xffffffd4
   3bae0:	str	r2, [fp, #-48]	; 0xffffffd0
   3bae4:	str	r3, [fp, #-52]	; 0xffffffcc
   3bae8:	ldr	r3, [fp, #4]
   3baec:	cmp	r3, #0
   3baf0:	movne	r3, #1
   3baf4:	moveq	r3, #0
   3baf8:	uxtb	r3, r3
   3bafc:	str	r3, [fp, #-8]
   3bb00:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3bb04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3bb08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bb0c:	bl	34dd8 <flatcc_verify_union_vector_field@@Base+0x3b0>
   3bb10:	str	r0, [fp, #-44]	; 0xffffffd4
   3bb14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3bb18:	str	r3, [fp, #-12]
   3bb1c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3bb20:	ldr	r1, [fp, #-12]
   3bb24:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bb28:	bl	39c30 <flatcc_json_parser_string_part@@Base>
   3bb2c:	str	r0, [fp, #-44]	; 0xffffffd4
   3bb30:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3bb34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3bb38:	cmp	r2, r3
   3bb3c:	beq	3bcfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3bb40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3bb44:	ldrb	r3, [r3]
   3bb48:	cmp	r3, #34	; 0x22
   3bb4c:	bne	3bcfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3bb50:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3bb54:	ldr	r3, [fp, #-12]
   3bb58:	sub	r3, r2, r3
   3bb5c:	mov	r0, r3
   3bb60:	bl	38ec0 <grisu3_diy_fp_encode_double@@Base+0x1690>
   3bb64:	str	r0, [fp, #-16]
   3bb68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3bb6c:	ldr	r0, [r3]
   3bb70:	mvn	r3, #0
   3bb74:	mov	r2, #1
   3bb78:	mov	r1, #1
   3bb7c:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   3bb80:	mov	r3, r0
   3bb84:	cmp	r3, #0
   3bb88:	bne	3bcb8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1ec>
   3bb8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3bb90:	ldr	r3, [r3]
   3bb94:	ldr	r1, [fp, #-16]
   3bb98:	mov	r0, r3
   3bb9c:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   3bba0:	str	r0, [fp, #-20]	; 0xffffffec
   3bba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bba8:	cmp	r3, #0
   3bbac:	beq	3bcc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f4>
   3bbb0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3bbb4:	ldr	r3, [fp, #-12]
   3bbb8:	sub	r3, r2, r3
   3bbbc:	str	r3, [fp, #-32]	; 0xffffffe0
   3bbc0:	ldr	r3, [fp, #-16]
   3bbc4:	str	r3, [fp, #-28]	; 0xffffffe4
   3bbc8:	sub	r1, fp, #32
   3bbcc:	sub	r2, fp, #28
   3bbd0:	ldr	r3, [fp, #-8]
   3bbd4:	str	r3, [sp]
   3bbd8:	mov	r3, r1
   3bbdc:	ldr	r1, [fp, #-12]
   3bbe0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3bbe4:	bl	392f8 <grisu3_diy_fp_encode_double@@Base+0x1ac8>
   3bbe8:	str	r0, [fp, #-24]	; 0xffffffe8
   3bbec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bbf0:	cmp	r3, #0
   3bbf4:	beq	3bc0c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x140>
   3bbf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3bbfc:	ldr	r2, [fp, #-12]
   3bc00:	add	r3, r2, r3
   3bc04:	str	r3, [fp, #-44]	; 0xffffffd4
   3bc08:	b	3bcfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3bc0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3bc10:	ldr	r3, [fp, #-12]
   3bc14:	sub	r3, r2, r3
   3bc18:	mov	r2, r3
   3bc1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3bc20:	cmp	r2, r3
   3bc24:	beq	3bc3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x170>
   3bc28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3bc2c:	ldr	r2, [fp, #-12]
   3bc30:	add	r3, r2, r3
   3bc34:	str	r3, [fp, #-44]	; 0xffffffd4
   3bc38:	b	3bcfc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x230>
   3bc3c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3bc40:	ldr	r3, [fp, #-16]
   3bc44:	cmp	r2, r3
   3bc48:	bcs	3bc74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1a8>
   3bc4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3bc50:	ldr	r0, [r3]
   3bc54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bc58:	ldr	r2, [fp, #-16]
   3bc5c:	sub	r3, r2, r3
   3bc60:	mov	r1, r3
   3bc64:	bl	2e690 <flatcc_builder_truncate_vector@@Base>
   3bc68:	mov	r3, r0
   3bc6c:	cmp	r3, #0
   3bc70:	bne	3bcc8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1fc>
   3bc74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3bc78:	ldr	r3, [r3]
   3bc7c:	mov	r0, r3
   3bc80:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   3bc84:	mov	r2, r0
   3bc88:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3bc8c:	str	r2, [r3]
   3bc90:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3bc94:	ldr	r3, [r3]
   3bc98:	cmp	r3, #0
   3bc9c:	beq	3bcd0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x204>
   3bca0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3bca4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3bca8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bcac:	bl	34e48 <flatcc_verify_union_vector_field@@Base+0x420>
   3bcb0:	mov	r3, r0
   3bcb4:	b	3bd34 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x268>
   3bcb8:	nop			; (mov r0, r0)
   3bcbc:	b	3bcd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   3bcc0:	nop			; (mov r0, r0)
   3bcc4:	b	3bcd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   3bcc8:	nop			; (mov r0, r0)
   3bccc:	b	3bcd4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x208>
   3bcd0:	nop			; (mov r0, r0)
   3bcd4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3bcd8:	mov	r2, #0
   3bcdc:	str	r2, [r3]
   3bce0:	mov	r3, #33	; 0x21
   3bce4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3bce8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3bcec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bcf0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3bcf4:	mov	r3, r0
   3bcf8:	b	3bd34 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x268>
   3bcfc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3bd00:	mov	r2, #0
   3bd04:	str	r2, [r3]
   3bd08:	ldr	r3, [fp, #4]
   3bd0c:	cmp	r3, #0
   3bd10:	beq	3bd1c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x250>
   3bd14:	mov	r3, #32
   3bd18:	b	3bd20 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   3bd1c:	mov	r3, #31
   3bd20:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3bd24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3bd28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3bd2c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3bd30:	mov	r3, r0
   3bd34:	mov	r0, r3
   3bd38:	sub	sp, fp, #4
   3bd3c:	pop	{fp, pc}

0003bd40 <flatcc_json_parser_build_string@@Base>:
   3bd40:	push	{fp, lr}
   3bd44:	add	fp, sp, #4
   3bd48:	sub	sp, sp, #24
   3bd4c:	str	r0, [fp, #-16]
   3bd50:	str	r1, [fp, #-20]	; 0xffffffec
   3bd54:	str	r2, [fp, #-24]	; 0xffffffe8
   3bd58:	str	r3, [fp, #-28]	; 0xffffffe4
   3bd5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bd60:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bd64:	ldr	r0, [fp, #-16]
   3bd68:	bl	34dd8 <flatcc_verify_union_vector_field@@Base+0x3b0>
   3bd6c:	str	r0, [fp, #-20]	; 0xffffffec
   3bd70:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bd74:	str	r3, [fp, #-8]
   3bd78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bd7c:	ldr	r1, [fp, #-8]
   3bd80:	ldr	r0, [fp, #-16]
   3bd84:	bl	39c30 <flatcc_json_parser_string_part@@Base>
   3bd88:	str	r0, [fp, #-20]	; 0xffffffec
   3bd8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bd90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bd94:	cmp	r2, r3
   3bd98:	beq	3bddc <flatcc_json_parser_build_string@@Base+0x9c>
   3bd9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bda0:	ldrb	r3, [r3]
   3bda4:	cmp	r3, #34	; 0x22
   3bda8:	bne	3bddc <flatcc_json_parser_build_string@@Base+0x9c>
   3bdac:	ldr	r3, [fp, #-16]
   3bdb0:	ldr	r0, [r3]
   3bdb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bdb8:	ldr	r3, [fp, #-8]
   3bdbc:	sub	r3, r2, r3
   3bdc0:	mov	r2, r3
   3bdc4:	ldr	r1, [fp, #-8]
   3bdc8:	bl	30dcc <flatcc_builder_create_string@@Base>
   3bdcc:	mov	r2, r0
   3bdd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bdd4:	str	r2, [r3]
   3bdd8:	b	3befc <flatcc_json_parser_build_string@@Base+0x1bc>
   3bddc:	ldr	r3, [fp, #-16]
   3bde0:	ldr	r3, [r3]
   3bde4:	mov	r0, r3
   3bde8:	bl	2eb58 <flatcc_builder_start_string@@Base>
   3bdec:	mov	r3, r0
   3bdf0:	cmp	r3, #0
   3bdf4:	bne	3bf20 <flatcc_json_parser_build_string@@Base+0x1e0>
   3bdf8:	ldr	r3, [fp, #-16]
   3bdfc:	ldr	r0, [r3]
   3be00:	ldr	r2, [fp, #-20]	; 0xffffffec
   3be04:	ldr	r3, [fp, #-8]
   3be08:	sub	r3, r2, r3
   3be0c:	mov	r2, r3
   3be10:	ldr	r1, [fp, #-8]
   3be14:	bl	2e568 <flatcc_builder_append_string@@Base>
   3be18:	mov	r3, r0
   3be1c:	cmp	r3, #0
   3be20:	beq	3bf20 <flatcc_json_parser_build_string@@Base+0x1e0>
   3be24:	b	3bec0 <flatcc_json_parser_build_string@@Base+0x180>
   3be28:	sub	r3, fp, #12
   3be2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3be30:	ldr	r1, [fp, #-20]	; 0xffffffec
   3be34:	ldr	r0, [fp, #-16]
   3be38:	bl	39eac <flatcc_json_parser_string_escape@@Base>
   3be3c:	str	r0, [fp, #-20]	; 0xffffffec
   3be40:	ldr	r3, [fp, #-16]
   3be44:	ldr	r0, [r3]
   3be48:	sub	r3, fp, #12
   3be4c:	add	r3, r3, #1
   3be50:	ldrb	r2, [fp, #-12]
   3be54:	mov	r1, r3
   3be58:	bl	2e568 <flatcc_builder_append_string@@Base>
   3be5c:	mov	r3, r0
   3be60:	cmp	r3, #0
   3be64:	beq	3bf14 <flatcc_json_parser_build_string@@Base+0x1d4>
   3be68:	ldr	r3, [fp, #-20]	; 0xffffffec
   3be6c:	str	r3, [fp, #-8]
   3be70:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3be74:	ldr	r1, [fp, #-8]
   3be78:	ldr	r0, [fp, #-16]
   3be7c:	bl	39c30 <flatcc_json_parser_string_part@@Base>
   3be80:	str	r0, [fp, #-20]	; 0xffffffec
   3be84:	ldr	r2, [fp, #-20]	; 0xffffffec
   3be88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3be8c:	cmp	r2, r3
   3be90:	beq	3bec0 <flatcc_json_parser_build_string@@Base+0x180>
   3be94:	ldr	r3, [fp, #-16]
   3be98:	ldr	r0, [r3]
   3be9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bea0:	ldr	r3, [fp, #-8]
   3bea4:	sub	r3, r2, r3
   3bea8:	mov	r2, r3
   3beac:	ldr	r1, [fp, #-8]
   3beb0:	bl	2e568 <flatcc_builder_append_string@@Base>
   3beb4:	mov	r3, r0
   3beb8:	cmp	r3, #0
   3bebc:	beq	3bf1c <flatcc_json_parser_build_string@@Base+0x1dc>
   3bec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bec8:	cmp	r2, r3
   3becc:	beq	3bee0 <flatcc_json_parser_build_string@@Base+0x1a0>
   3bed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bed4:	ldrb	r3, [r3]
   3bed8:	cmp	r3, #34	; 0x22
   3bedc:	bne	3be28 <flatcc_json_parser_build_string@@Base+0xe8>
   3bee0:	ldr	r3, [fp, #-16]
   3bee4:	ldr	r3, [r3]
   3bee8:	mov	r0, r3
   3beec:	bl	30ff4 <flatcc_builder_end_string@@Base>
   3bef0:	mov	r2, r0
   3bef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bef8:	str	r2, [r3]
   3befc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bf00:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bf04:	ldr	r0, [fp, #-16]
   3bf08:	bl	34e48 <flatcc_verify_union_vector_field@@Base+0x420>
   3bf0c:	mov	r3, r0
   3bf10:	b	3bf30 <flatcc_json_parser_build_string@@Base+0x1f0>
   3bf14:	nop			; (mov r0, r0)
   3bf18:	b	3bf20 <flatcc_json_parser_build_string@@Base+0x1e0>
   3bf1c:	nop			; (mov r0, r0)
   3bf20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bf24:	mov	r2, #0
   3bf28:	str	r2, [r3]
   3bf2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bf30:	mov	r0, r3
   3bf34:	sub	sp, fp, #4
   3bf38:	pop	{fp, pc}

0003bf3c <flatcc_json_parser_prepare_unions@@Base>:
   3bf3c:	push	{fp, lr}
   3bf40:	add	fp, sp, #4
   3bf44:	sub	sp, sp, #24
   3bf48:	str	r0, [fp, #-16]
   3bf4c:	str	r1, [fp, #-20]	; 0xffffffec
   3bf50:	str	r2, [fp, #-24]	; 0xffffffe8
   3bf54:	str	r3, [fp, #-28]	; 0xffffffe4
   3bf58:	ldr	r3, [fp, #-16]
   3bf5c:	ldr	r0, [r3]
   3bf60:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3bf64:	mov	r3, r2
   3bf68:	lsl	r3, r3, #1
   3bf6c:	add	r3, r3, r2
   3bf70:	lsl	r3, r3, #3
   3bf74:	add	r3, r3, #8
   3bf78:	mov	r1, r3
   3bf7c:	bl	2cb94 <flatcc_builder_enter_user_frame@@Base>
   3bf80:	mov	r2, r0
   3bf84:	ldr	r3, [fp, #4]
   3bf88:	str	r2, [r3]
   3bf8c:	ldr	r3, [fp, #4]
   3bf90:	ldr	r3, [r3]
   3bf94:	cmp	r3, #0
   3bf98:	bne	3bfb8 <flatcc_json_parser_prepare_unions@@Base+0x7c>
   3bf9c:	mov	r3, #33	; 0x21
   3bfa0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bfa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   3bfa8:	ldr	r0, [fp, #-16]
   3bfac:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3bfb0:	mov	r3, r0
   3bfb4:	b	3bfe8 <flatcc_json_parser_prepare_unions@@Base+0xac>
   3bfb8:	ldr	r3, [fp, #-16]
   3bfbc:	ldr	r2, [r3]
   3bfc0:	ldr	r3, [fp, #4]
   3bfc4:	ldr	r3, [r3]
   3bfc8:	mov	r1, r3
   3bfcc:	mov	r0, r2
   3bfd0:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3bfd4:	str	r0, [fp, #-8]
   3bfd8:	ldr	r3, [fp, #-8]
   3bfdc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3bfe0:	str	r2, [r3]
   3bfe4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bfe8:	mov	r0, r3
   3bfec:	sub	sp, fp, #4
   3bff0:	pop	{fp, pc}

0003bff4 <flatcc_json_parser_finalize_unions@@Base>:
   3bff4:	push	{fp, lr}
   3bff8:	add	fp, sp, #4
   3bffc:	sub	sp, sp, #24
   3c000:	str	r0, [fp, #-16]
   3c004:	str	r1, [fp, #-20]	; 0xffffffec
   3c008:	str	r2, [fp, #-24]	; 0xffffffe8
   3c00c:	str	r3, [fp, #-28]	; 0xffffffe4
   3c010:	ldr	r3, [fp, #-16]
   3c014:	ldr	r3, [r3]
   3c018:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c01c:	mov	r0, r3
   3c020:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3c024:	str	r0, [fp, #-8]
   3c028:	ldr	r3, [fp, #-8]
   3c02c:	ldr	r3, [r3, #4]
   3c030:	cmp	r3, #0
   3c034:	beq	3c050 <flatcc_json_parser_finalize_unions@@Base+0x5c>
   3c038:	mov	r3, #27
   3c03c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c040:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c044:	ldr	r0, [fp, #-16]
   3c048:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c04c:	str	r0, [fp, #-20]	; 0xffffffec
   3c050:	ldr	r3, [fp, #-16]
   3c054:	ldr	r3, [r3]
   3c058:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3c05c:	mov	r0, r3
   3c060:	bl	2ccfc <flatcc_builder_exit_user_frame_at@@Base>
   3c064:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c068:	mov	r0, r3
   3c06c:	sub	sp, fp, #4
   3c070:	pop	{fp, pc}

0003c074 <flatcc_json_parser_union@@Base>:
   3c074:	push	{r4, fp, lr}
   3c078:	add	fp, sp, #8
   3c07c:	sub	sp, sp, #44	; 0x2c
   3c080:	str	r0, [fp, #-32]	; 0xffffffe0
   3c084:	str	r1, [fp, #-36]	; 0xffffffdc
   3c088:	str	r2, [fp, #-40]	; 0xffffffd8
   3c08c:	str	r3, [fp, #-44]	; 0xffffffd4
   3c090:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c094:	ldr	r3, [r3]
   3c098:	ldr	r1, [fp, #8]
   3c09c:	mov	r0, r3
   3c0a0:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3c0a4:	str	r0, [fp, #-16]
   3c0a8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3c0ac:	mov	r3, r2
   3c0b0:	lsl	r3, r3, #1
   3c0b4:	add	r3, r3, r2
   3c0b8:	lsl	r3, r3, #3
   3c0bc:	add	r3, r3, #8
   3c0c0:	ldr	r2, [fp, #-16]
   3c0c4:	add	r3, r2, r3
   3c0c8:	str	r3, [fp, #-20]	; 0xffffffec
   3c0cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c0d0:	ldr	r3, [r3]
   3c0d4:	cmp	r3, #0
   3c0d8:	beq	3c0f8 <flatcc_json_parser_union@@Base+0x84>
   3c0dc:	mov	r3, #28
   3c0e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c0e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3c0e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c0ec:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c0f0:	mov	r3, r0
   3c0f4:	b	3c238 <flatcc_json_parser_union@@Base+0x1c4>
   3c0f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c0fc:	ldrb	r3, [r3, #12]
   3c100:	cmp	r3, #0
   3c104:	bne	3c168 <flatcc_json_parser_union@@Base+0xf4>
   3c108:	ldr	r3, [fp, #-16]
   3c10c:	ldr	r3, [r3, #4]
   3c110:	add	r2, r3, #1
   3c114:	ldr	r3, [fp, #-16]
   3c118:	str	r2, [r3, #4]
   3c11c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c120:	ldr	r2, [r3, #12]
   3c124:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c128:	str	r2, [r3, #8]
   3c12c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c130:	ldr	r2, [r3, #4]
   3c134:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c138:	str	r2, [r3, #4]
   3c13c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c140:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c144:	str	r2, [r3]
   3c148:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c14c:	ldr	r3, [r3]
   3c150:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c154:	mov	r1, r3
   3c158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c15c:	bl	3b2b8 <flatcc_json_parser_generic_json@@Base>
   3c160:	str	r0, [fp, #-36]	; 0xffffffdc
   3c164:	b	3c234 <flatcc_json_parser_union@@Base+0x1c0>
   3c168:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c16c:	ldrb	r3, [r3, #13]
   3c170:	strb	r3, [fp, #-28]	; 0xffffffe4
   3c174:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c178:	ldrb	r3, [r3, #13]
   3c17c:	cmp	r3, #0
   3c180:	bne	3c1a0 <flatcc_json_parser_union@@Base+0x12c>
   3c184:	mov	r3, #25
   3c188:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c18c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3c190:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c194:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c198:	mov	r3, r0
   3c19c:	b	3c238 <flatcc_json_parser_union@@Base+0x1c4>
   3c1a0:	ldr	r3, [fp, #-16]
   3c1a4:	ldr	r3, [r3, #4]
   3c1a8:	sub	r2, r3, #1
   3c1ac:	ldr	r3, [fp, #-16]
   3c1b0:	str	r2, [r3, #4]
   3c1b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c1b8:	ldrb	r2, [r3, #13]
   3c1bc:	sub	r3, fp, #28
   3c1c0:	add	r3, r3, #4
   3c1c4:	str	r3, [sp]
   3c1c8:	ldr	r4, [fp, #12]
   3c1cc:	mov	r3, r2
   3c1d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c1d4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3c1d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c1dc:	blx	r4
   3c1e0:	str	r0, [fp, #-36]	; 0xffffffdc
   3c1e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3c1e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c1ec:	cmp	r2, r3
   3c1f0:	beq	3c234 <flatcc_json_parser_union@@Base+0x1c0>
   3c1f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c1f8:	ldr	r0, [r3]
   3c1fc:	ldrh	r1, [fp, #4]
   3c200:	sub	r3, fp, #28
   3c204:	ldm	r3, {r2, r3}
   3c208:	bl	30248 <flatcc_builder_table_add_union@@Base>
   3c20c:	mov	r3, r0
   3c210:	cmp	r3, #0
   3c214:	beq	3c234 <flatcc_json_parser_union@@Base+0x1c0>
   3c218:	mov	r3, #28
   3c21c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3c220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3c224:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3c228:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c22c:	mov	r3, r0
   3c230:	b	3c238 <flatcc_json_parser_union@@Base+0x1c4>
   3c234:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c238:	mov	r0, r3
   3c23c:	sub	sp, fp, #8
   3c240:	pop	{r4, fp, pc}

0003c244 <flatcc_json_parser_union_type@@Base>:
   3c244:	push	{r4, fp, lr}
   3c248:	add	fp, sp, #8
   3c24c:	sub	sp, sp, #60	; 0x3c
   3c250:	str	r0, [fp, #-48]	; 0xffffffd0
   3c254:	str	r1, [fp, #-52]	; 0xffffffcc
   3c258:	str	r2, [fp, #-56]	; 0xffffffc8
   3c25c:	str	r3, [fp, #-60]	; 0xffffffc4
   3c260:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c264:	ldr	r3, [r3]
   3c268:	ldr	r1, [fp, #8]
   3c26c:	mov	r0, r3
   3c270:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3c274:	str	r0, [fp, #-16]
   3c278:	ldr	r3, [fp, #-16]
   3c27c:	add	r1, r3, #8
   3c280:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3c284:	mov	r3, r2
   3c288:	lsl	r3, r3, #1
   3c28c:	add	r3, r3, r2
   3c290:	lsl	r3, r3, #3
   3c294:	add	r3, r1, r3
   3c298:	str	r3, [fp, #-20]	; 0xffffffec
   3c29c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c2a0:	ldrb	r3, [r3, #12]
   3c2a4:	cmp	r3, #0
   3c2a8:	beq	3c2c8 <flatcc_json_parser_union_type@@Base+0x84>
   3c2ac:	mov	r3, #28
   3c2b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3c2b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3c2b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3c2bc:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c2c0:	mov	r3, r0
   3c2c4:	b	3c49c <flatcc_json_parser_union_type@@Base+0x258>
   3c2c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c2cc:	mov	r2, #1
   3c2d0:	strb	r2, [r3, #12]
   3c2d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3c2d8:	str	r3, [fp, #-24]	; 0xffffffe8
   3c2dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c2e0:	add	r3, r3, #13
   3c2e4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3c2e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c2ec:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3c2f0:	bl	35acc <flatcc_verify_union_vector_field@@Base+0x10a4>
   3c2f4:	str	r0, [fp, #-52]	; 0xffffffcc
   3c2f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c2fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3c300:	cmp	r2, r3
   3c304:	bne	3c32c <flatcc_json_parser_union_type@@Base+0xe8>
   3c308:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c30c:	add	r3, r3, #13
   3c310:	str	r3, [sp]
   3c314:	ldr	r3, [fp, #12]
   3c318:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3c31c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3c320:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3c324:	bl	3614c <flatcc_verify_union_vector_field@@Base+0x1724>
   3c328:	str	r0, [fp, #-52]	; 0xffffffcc
   3c32c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c330:	ldr	r3, [r3]
   3c334:	cmp	r3, #0
   3c338:	bne	3c370 <flatcc_json_parser_union_type@@Base+0x12c>
   3c33c:	ldr	r3, [fp, #-16]
   3c340:	ldr	r3, [r3, #4]
   3c344:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c348:	ldrb	r2, [r2, #13]
   3c34c:	cmp	r2, #0
   3c350:	movne	r2, #1
   3c354:	moveq	r2, #0
   3c358:	uxtb	r2, r2
   3c35c:	add	r2, r3, r2
   3c360:	ldr	r3, [fp, #-16]
   3c364:	str	r2, [r3, #4]
   3c368:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3c36c:	b	3c49c <flatcc_json_parser_union_type@@Base+0x258>
   3c370:	ldr	r3, [fp, #-16]
   3c374:	ldr	r3, [r3, #4]
   3c378:	cmp	r3, #0
   3c37c:	bne	3c3a0 <flatcc_json_parser_union_type@@Base+0x15c>
   3c380:	ldr	r3, [pc, #288]	; 3c4a8 <flatcc_json_parser_union_type@@Base+0x264>
   3c384:	add	r3, pc, r3
   3c388:	ldr	r2, [pc, #284]	; 3c4ac <flatcc_json_parser_union_type@@Base+0x268>
   3c38c:	ldr	r1, [pc, #284]	; 3c4b0 <flatcc_json_parser_union_type@@Base+0x26c>
   3c390:	add	r1, pc, r1
   3c394:	ldr	r0, [pc, #280]	; 3c4b4 <flatcc_json_parser_union_type@@Base+0x270>
   3c398:	add	r0, pc, r0
   3c39c:	bl	14610 <__assert_fail@plt>
   3c3a0:	ldr	r3, [fp, #-16]
   3c3a4:	ldr	r3, [r3, #4]
   3c3a8:	sub	r2, r3, #1
   3c3ac:	ldr	r3, [fp, #-16]
   3c3b0:	str	r2, [r3, #4]
   3c3b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c3b8:	ldr	r3, [r3, #12]
   3c3bc:	str	r3, [fp, #-28]	; 0xffffffe4
   3c3c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c3c4:	ldr	r3, [r3, #4]
   3c3c8:	str	r3, [fp, #-32]	; 0xffffffe0
   3c3cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c3d0:	ldr	r2, [r3, #8]
   3c3d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c3d8:	str	r2, [r3, #12]
   3c3dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c3e0:	ldr	r2, [r3, #4]
   3c3e4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c3e8:	str	r2, [r3, #4]
   3c3ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c3f0:	ldrb	r3, [r3, #13]
   3c3f4:	strb	r3, [fp, #-40]	; 0xffffffd8
   3c3f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c3fc:	ldr	r1, [r3]
   3c400:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c404:	ldrb	r2, [r3, #13]
   3c408:	sub	r3, fp, #40	; 0x28
   3c40c:	add	r3, r3, #4
   3c410:	str	r3, [sp]
   3c414:	ldr	r4, [fp, #16]
   3c418:	mov	r3, r2
   3c41c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3c420:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3c424:	blx	r4
   3c428:	mov	r2, r0
   3c42c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c430:	cmp	r2, r3
   3c434:	bne	3c440 <flatcc_json_parser_union_type@@Base+0x1fc>
   3c438:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3c43c:	b	3c49c <flatcc_json_parser_union_type@@Base+0x258>
   3c440:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c444:	ldr	r0, [r3]
   3c448:	ldrh	r1, [fp, #4]
   3c44c:	sub	r3, fp, #40	; 0x28
   3c450:	ldm	r3, {r2, r3}
   3c454:	bl	30248 <flatcc_builder_table_add_union@@Base>
   3c458:	mov	r3, r0
   3c45c:	cmp	r3, #0
   3c460:	beq	3c480 <flatcc_json_parser_union_type@@Base+0x23c>
   3c464:	mov	r3, #28
   3c468:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3c46c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3c470:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3c474:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c478:	mov	r3, r0
   3c47c:	b	3c49c <flatcc_json_parser_union_type@@Base+0x258>
   3c480:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c484:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c488:	str	r2, [r3, #12]
   3c48c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c490:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3c494:	str	r2, [r3, #4]
   3c498:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3c49c:	mov	r0, r3
   3c4a0:	sub	sp, fp, #8
   3c4a4:	pop	{r4, fp, pc}
   3c4a8:	andeq	r4, r1, r0, lsr #15
   3c4ac:	andeq	r0, r0, r5, asr #7
   3c4b0:			; <UNDEFINED> instruction: 0x000142b4
   3c4b4:	andeq	r4, r1, r0, lsl r3
   3c4b8:	push	{r4, fp, lr}
   3c4bc:	add	fp, sp, #8
   3c4c0:	sub	sp, sp, #52	; 0x34
   3c4c4:	str	r0, [fp, #-40]	; 0xffffffd8
   3c4c8:	str	r1, [fp, #-44]	; 0xffffffd4
   3c4cc:	str	r2, [fp, #-48]	; 0xffffffd0
   3c4d0:	str	r3, [fp, #-52]	; 0xffffffcc
   3c4d4:	mov	r3, #0
   3c4d8:	str	r3, [fp, #-28]	; 0xffffffe4
   3c4dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c4e0:	ldr	r3, [r3]
   3c4e4:	mov	r0, r3
   3c4e8:	bl	2ea54 <flatcc_builder_start_offset_vector@@Base>
   3c4ec:	mov	r3, r0
   3c4f0:	cmp	r3, #0
   3c4f4:	bne	3c6b4 <flatcc_json_parser_union_type@@Base+0x470>
   3c4f8:	sub	r3, fp, #32
   3c4fc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c500:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c504:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c508:	bl	351c8 <flatcc_verify_union_vector_field@@Base+0x7a0>
   3c50c:	str	r0, [fp, #-44]	; 0xffffffd4
   3c510:	mov	r3, #0
   3c514:	str	r3, [fp, #-16]
   3c518:	b	3c600 <flatcc_json_parser_union_type@@Base+0x3bc>
   3c51c:	ldr	r2, [fp, #-16]
   3c520:	ldr	r3, [fp, #4]
   3c524:	cmp	r2, r3
   3c528:	bne	3c548 <flatcc_json_parser_union_type@@Base+0x304>
   3c52c:	mov	r3, #30
   3c530:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c534:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c538:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c53c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c540:	mov	r3, r0
   3c544:	b	3c6e8 <flatcc_json_parser_union_type@@Base+0x4a4>
   3c548:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c54c:	ldr	r3, [r3]
   3c550:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3c554:	mov	r0, r3
   3c558:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3c55c:	str	r0, [fp, #-20]	; 0xffffffec
   3c560:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c564:	ldr	r3, [fp, #-16]
   3c568:	add	r3, r2, r3
   3c56c:	ldrb	r2, [r3]
   3c570:	sub	r3, fp, #28
   3c574:	str	r3, [sp]
   3c578:	ldr	r4, [fp, #12]
   3c57c:	mov	r3, r2
   3c580:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c584:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c588:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c58c:	blx	r4
   3c590:	str	r0, [fp, #-44]	; 0xffffffd4
   3c594:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3c598:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3c59c:	cmp	r2, r3
   3c5a0:	bne	3c5ac <flatcc_json_parser_union_type@@Base+0x368>
   3c5a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c5a8:	b	3c6e8 <flatcc_json_parser_union_type@@Base+0x4a4>
   3c5ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c5b0:	ldr	r3, [r3]
   3c5b4:	mov	r1, #1
   3c5b8:	mov	r0, r3
   3c5bc:	bl	2e300 <flatcc_builder_extend_offset_vector@@Base>
   3c5c0:	str	r0, [fp, #-24]	; 0xffffffe8
   3c5c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c5c8:	cmp	r3, #0
   3c5cc:	beq	3c6bc <flatcc_json_parser_union_type@@Base+0x478>
   3c5d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c5d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c5d8:	str	r2, [r3]
   3c5dc:	sub	r3, fp, #32
   3c5e0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c5e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c5e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c5ec:	bl	352b0 <flatcc_verify_union_vector_field@@Base+0x888>
   3c5f0:	str	r0, [fp, #-44]	; 0xffffffd4
   3c5f4:	ldr	r3, [fp, #-16]
   3c5f8:	add	r3, r3, #1
   3c5fc:	str	r3, [fp, #-16]
   3c600:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c604:	cmp	r3, #0
   3c608:	bne	3c51c <flatcc_json_parser_union_type@@Base+0x2d8>
   3c60c:	ldr	r2, [fp, #-16]
   3c610:	ldr	r3, [fp, #4]
   3c614:	cmp	r2, r3
   3c618:	beq	3c638 <flatcc_json_parser_union_type@@Base+0x3f4>
   3c61c:	mov	r3, #30
   3c620:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c624:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c628:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c62c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c630:	mov	r3, r0
   3c634:	b	3c6e8 <flatcc_json_parser_union_type@@Base+0x4a4>
   3c638:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c63c:	ldr	r3, [r3]
   3c640:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3c644:	mov	r0, r3
   3c648:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3c64c:	str	r0, [fp, #-20]	; 0xffffffec
   3c650:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c654:	ldr	r3, [r3]
   3c658:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c65c:	mov	r0, r3
   3c660:	bl	3014c <flatcc_builder_end_offset_vector_for_unions@@Base>
   3c664:	mov	r3, r0
   3c668:	str	r3, [fp, #-28]	; 0xffffffe4
   3c66c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c670:	cmp	r3, #0
   3c674:	beq	3c6c4 <flatcc_json_parser_union_type@@Base+0x480>
   3c678:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3c67c:	ldr	r3, [r3]
   3c680:	ldrh	r2, [fp, #8]
   3c684:	mov	r1, r2
   3c688:	mov	r0, r3
   3c68c:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   3c690:	str	r0, [fp, #-24]	; 0xffffffe8
   3c694:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c698:	cmp	r3, #0
   3c69c:	beq	3c6cc <flatcc_json_parser_union_type@@Base+0x488>
   3c6a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c6a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c6a8:	str	r2, [r3]
   3c6ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3c6b0:	b	3c6e8 <flatcc_json_parser_union_type@@Base+0x4a4>
   3c6b4:	nop			; (mov r0, r0)
   3c6b8:	b	3c6d0 <flatcc_json_parser_union_type@@Base+0x48c>
   3c6bc:	nop			; (mov r0, r0)
   3c6c0:	b	3c6d0 <flatcc_json_parser_union_type@@Base+0x48c>
   3c6c4:	nop			; (mov r0, r0)
   3c6c8:	b	3c6d0 <flatcc_json_parser_union_type@@Base+0x48c>
   3c6cc:	nop			; (mov r0, r0)
   3c6d0:	mov	r3, #33	; 0x21
   3c6d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3c6d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3c6dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3c6e0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c6e4:	mov	r3, r0
   3c6e8:	mov	r0, r3
   3c6ec:	sub	sp, fp, #8
   3c6f0:	pop	{r4, fp, pc}

0003c6f4 <flatcc_json_parser_union_vector@@Base>:
   3c6f4:	push	{fp, lr}
   3c6f8:	add	fp, sp, #4
   3c6fc:	sub	sp, sp, #40	; 0x28
   3c700:	str	r0, [fp, #-16]
   3c704:	str	r1, [fp, #-20]	; 0xffffffec
   3c708:	str	r2, [fp, #-24]	; 0xffffffe8
   3c70c:	str	r3, [fp, #-28]	; 0xffffffe4
   3c710:	ldr	r3, [fp, #-16]
   3c714:	ldr	r3, [r3]
   3c718:	ldr	r1, [fp, #8]
   3c71c:	mov	r0, r3
   3c720:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3c724:	str	r0, [fp, #-8]
   3c728:	ldr	r3, [fp, #-8]
   3c72c:	add	r1, r3, #8
   3c730:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c734:	mov	r3, r2
   3c738:	lsl	r3, r3, #1
   3c73c:	add	r3, r3, r2
   3c740:	lsl	r3, r3, #3
   3c744:	add	r3, r1, r3
   3c748:	str	r3, [fp, #-12]
   3c74c:	ldr	r3, [fp, #-12]
   3c750:	ldr	r3, [r3]
   3c754:	cmp	r3, #0
   3c758:	beq	3c778 <flatcc_json_parser_union_vector@@Base+0x84>
   3c75c:	mov	r3, #28
   3c760:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c764:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c768:	ldr	r0, [fp, #-16]
   3c76c:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c770:	mov	r3, r0
   3c774:	b	3c83c <flatcc_json_parser_union_vector@@Base+0x148>
   3c778:	ldr	r3, [fp, #-12]
   3c77c:	ldrb	r3, [r3, #12]
   3c780:	cmp	r3, #0
   3c784:	bne	3c7e8 <flatcc_json_parser_union_vector@@Base+0xf4>
   3c788:	ldr	r3, [fp, #-8]
   3c78c:	ldr	r3, [r3, #4]
   3c790:	add	r2, r3, #1
   3c794:	ldr	r3, [fp, #-8]
   3c798:	str	r2, [r3, #4]
   3c79c:	ldr	r3, [fp, #-16]
   3c7a0:	ldr	r2, [r3, #12]
   3c7a4:	ldr	r3, [fp, #-12]
   3c7a8:	str	r2, [r3, #8]
   3c7ac:	ldr	r3, [fp, #-16]
   3c7b0:	ldr	r2, [r3, #4]
   3c7b4:	ldr	r3, [fp, #-12]
   3c7b8:	str	r2, [r3, #4]
   3c7bc:	ldr	r3, [fp, #-12]
   3c7c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c7c4:	str	r2, [r3]
   3c7c8:	ldr	r3, [fp, #-12]
   3c7cc:	ldr	r3, [r3]
   3c7d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c7d4:	mov	r1, r3
   3c7d8:	ldr	r0, [fp, #-16]
   3c7dc:	bl	3b2b8 <flatcc_json_parser_generic_json@@Base>
   3c7e0:	str	r0, [fp, #-20]	; 0xffffffec
   3c7e4:	b	3c838 <flatcc_json_parser_union_vector@@Base+0x144>
   3c7e8:	ldr	r3, [fp, #-8]
   3c7ec:	ldr	r3, [r3, #4]
   3c7f0:	sub	r2, r3, #1
   3c7f4:	ldr	r3, [fp, #-8]
   3c7f8:	str	r2, [r3, #4]
   3c7fc:	ldr	r3, [fp, #-12]
   3c800:	ldr	r1, [r3, #20]
   3c804:	ldr	r3, [fp, #-12]
   3c808:	ldr	r3, [r3, #16]
   3c80c:	ldr	r2, [fp, #12]
   3c810:	str	r2, [sp, #8]
   3c814:	ldrh	r2, [fp, #4]
   3c818:	str	r2, [sp, #4]
   3c81c:	str	r3, [sp]
   3c820:	mov	r3, r1
   3c824:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3c828:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c82c:	ldr	r0, [fp, #-16]
   3c830:	bl	3c4b8 <flatcc_json_parser_union_type@@Base+0x274>
   3c834:	str	r0, [fp, #-20]	; 0xffffffec
   3c838:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c83c:	mov	r0, r3
   3c840:	sub	sp, fp, #4
   3c844:	pop	{fp, pc}

0003c848 <flatcc_json_parser_union_type_vector@@Base>:
   3c848:	push	{fp, lr}
   3c84c:	add	fp, sp, #4
   3c850:	sub	sp, sp, #88	; 0x58
   3c854:	str	r0, [fp, #-64]	; 0xffffffc0
   3c858:	str	r1, [fp, #-68]	; 0xffffffbc
   3c85c:	str	r2, [fp, #-72]	; 0xffffffb8
   3c860:	str	r3, [fp, #-76]	; 0xffffffb4
   3c864:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3c868:	ldr	r3, [r3]
   3c86c:	ldr	r1, [fp, #8]
   3c870:	mov	r0, r3
   3c874:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3c878:	str	r0, [fp, #-8]
   3c87c:	ldr	r3, [fp, #-8]
   3c880:	add	r1, r3, #8
   3c884:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3c888:	mov	r3, r2
   3c88c:	lsl	r3, r3, #1
   3c890:	add	r3, r3, r2
   3c894:	lsl	r3, r3, #3
   3c898:	add	r3, r1, r3
   3c89c:	str	r3, [fp, #-12]
   3c8a0:	ldr	r3, [fp, #-12]
   3c8a4:	ldrb	r3, [r3, #12]
   3c8a8:	cmp	r3, #0
   3c8ac:	beq	3c8cc <flatcc_json_parser_union_type_vector@@Base+0x84>
   3c8b0:	mov	r3, #28
   3c8b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3c8b8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3c8bc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3c8c0:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c8c4:	mov	r3, r0
   3c8c8:	b	3cc9c <flatcc_json_parser_union_type_vector@@Base+0x454>
   3c8cc:	ldr	r3, [fp, #-12]
   3c8d0:	mov	r2, #1
   3c8d4:	strb	r2, [r3, #12]
   3c8d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3c8dc:	ldr	r0, [r3]
   3c8e0:	mvn	r3, #0
   3c8e4:	mov	r2, #1
   3c8e8:	mov	r1, #1
   3c8ec:	bl	2e9a8 <flatcc_builder_start_vector@@Base>
   3c8f0:	mov	r3, r0
   3c8f4:	cmp	r3, #0
   3c8f8:	bne	3cc68 <flatcc_json_parser_union_type_vector@@Base+0x420>
   3c8fc:	sub	r3, fp, #56	; 0x38
   3c900:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3c904:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3c908:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3c90c:	bl	351c8 <flatcc_verify_union_vector_field@@Base+0x7a0>
   3c910:	str	r0, [fp, #-68]	; 0xffffffbc
   3c914:	b	3ca30 <flatcc_json_parser_union_type_vector@@Base+0x1e8>
   3c918:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3c91c:	ldr	r3, [r3]
   3c920:	mov	r1, #1
   3c924:	mov	r0, r3
   3c928:	bl	2e0b8 <flatcc_builder_extend_vector@@Base>
   3c92c:	str	r0, [fp, #-16]
   3c930:	ldr	r3, [fp, #-16]
   3c934:	cmp	r3, #0
   3c938:	beq	3cc70 <flatcc_json_parser_union_type_vector@@Base+0x428>
   3c93c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3c940:	str	r3, [fp, #-20]	; 0xffffffec
   3c944:	sub	r3, fp, #57	; 0x39
   3c948:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3c94c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c950:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3c954:	bl	35acc <flatcc_verify_union_vector_field@@Base+0x10a4>
   3c958:	str	r0, [fp, #-68]	; 0xffffffbc
   3c95c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c960:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3c964:	cmp	r2, r3
   3c968:	bne	3c9b4 <flatcc_json_parser_union_type_vector@@Base+0x16c>
   3c96c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3c970:	str	r3, [fp, #-20]	; 0xffffffec
   3c974:	sub	r3, fp, #57	; 0x39
   3c978:	str	r3, [sp]
   3c97c:	ldr	r3, [fp, #12]
   3c980:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3c984:	ldr	r1, [fp, #-20]	; 0xffffffec
   3c988:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3c98c:	bl	3614c <flatcc_verify_union_vector_field@@Base+0x1724>
   3c990:	str	r0, [fp, #-68]	; 0xffffffbc
   3c994:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3c998:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c99c:	cmp	r2, r3
   3c9a0:	beq	3cc84 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3c9a4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3c9a8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3c9ac:	cmp	r2, r3
   3c9b0:	beq	3cc84 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3c9b4:	ldrb	r2, [fp, #-57]	; 0xffffffc7
   3c9b8:	ldr	r3, [fp, #20]
   3c9bc:	mov	r0, r2
   3c9c0:	blx	r3
   3c9c4:	mov	r3, r0
   3c9c8:	cmp	r3, #0
   3c9cc:	bne	3ca08 <flatcc_json_parser_union_type_vector@@Base+0x1c0>
   3c9d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3c9d4:	ldr	r3, [r3, #8]
   3c9d8:	and	r3, r3, #1
   3c9dc:	cmp	r3, #0
   3c9e0:	bne	3ca00 <flatcc_json_parser_union_type_vector@@Base+0x1b8>
   3c9e4:	mov	r3, #15
   3c9e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3c9ec:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3c9f0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3c9f4:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3c9f8:	mov	r3, r0
   3c9fc:	b	3cc9c <flatcc_json_parser_union_type_vector@@Base+0x454>
   3ca00:	mov	r3, #0
   3ca04:	strb	r3, [fp, #-57]	; 0xffffffc7
   3ca08:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   3ca0c:	mov	r1, r3
   3ca10:	ldr	r0, [fp, #-16]
   3ca14:	bl	34c78 <flatcc_verify_union_vector_field@@Base+0x250>
   3ca18:	sub	r3, fp, #56	; 0x38
   3ca1c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ca20:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3ca24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3ca28:	bl	352b0 <flatcc_verify_union_vector_field@@Base+0x888>
   3ca2c:	str	r0, [fp, #-68]	; 0xffffffbc
   3ca30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3ca34:	cmp	r3, #0
   3ca38:	bne	3c918 <flatcc_json_parser_union_type_vector@@Base+0xd0>
   3ca3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3ca40:	ldr	r3, [r3]
   3ca44:	mov	r0, r3
   3ca48:	bl	2fcd0 <flatcc_builder_vector_count@@Base>
   3ca4c:	str	r0, [fp, #-24]	; 0xffffffe8
   3ca50:	ldr	r3, [fp, #-12]
   3ca54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ca58:	str	r2, [r3, #16]
   3ca5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ca60:	str	r3, [fp, #-28]	; 0xffffffe4
   3ca64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3ca68:	ldr	r3, [r3]
   3ca6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ca70:	mov	r0, r3
   3ca74:	bl	2cb94 <flatcc_builder_enter_user_frame@@Base>
   3ca78:	str	r0, [fp, #-32]	; 0xffffffe0
   3ca7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3ca80:	ldr	r3, [r3]
   3ca84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ca88:	mov	r0, r3
   3ca8c:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3ca90:	str	r0, [fp, #-36]	; 0xffffffdc
   3ca94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3ca98:	ldr	r3, [r3]
   3ca9c:	mov	r0, r3
   3caa0:	bl	2fcfc <flatcc_builder_vector_edit@@Base>
   3caa4:	mov	r3, r0
   3caa8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3caac:	mov	r1, r3
   3cab0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3cab4:	bl	14544 <memcpy@plt>
   3cab8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cabc:	ldr	r3, [r3]
   3cac0:	mov	r0, r3
   3cac4:	bl	2fc00 <flatcc_builder_end_vector@@Base>
   3cac8:	str	r0, [fp, #-40]	; 0xffffffd8
   3cacc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3cad0:	cmp	r3, #0
   3cad4:	beq	3cc78 <flatcc_json_parser_union_type_vector@@Base+0x430>
   3cad8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cadc:	ldr	r2, [r3]
   3cae0:	ldrh	r3, [fp, #4]
   3cae4:	sub	r3, r3, #1
   3cae8:	mov	r1, r3
   3caec:	mov	r0, r2
   3caf0:	bl	31390 <flatcc_builder_table_add_offset@@Base>
   3caf4:	str	r0, [fp, #-44]	; 0xffffffd4
   3caf8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3cafc:	cmp	r3, #0
   3cb00:	beq	3cc80 <flatcc_json_parser_union_type_vector@@Base+0x438>
   3cb04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3cb08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3cb0c:	str	r2, [r3]
   3cb10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cb14:	ldr	r3, [r3]
   3cb18:	ldr	r1, [fp, #8]
   3cb1c:	mov	r0, r3
   3cb20:	bl	2cda0 <flatcc_builder_get_user_frame_ptr@@Base>
   3cb24:	str	r0, [fp, #-8]
   3cb28:	ldr	r3, [fp, #-8]
   3cb2c:	add	r1, r3, #8
   3cb30:	ldr	r2, [fp, #-76]	; 0xffffffb4
   3cb34:	mov	r3, r2
   3cb38:	lsl	r3, r3, #1
   3cb3c:	add	r3, r3, r2
   3cb40:	lsl	r3, r3, #3
   3cb44:	add	r3, r1, r3
   3cb48:	str	r3, [fp, #-12]
   3cb4c:	ldr	r3, [fp, #-12]
   3cb50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3cb54:	str	r2, [r3, #20]
   3cb58:	ldr	r3, [fp, #-12]
   3cb5c:	ldr	r3, [r3]
   3cb60:	cmp	r3, #0
   3cb64:	bne	3cb84 <flatcc_json_parser_union_type_vector@@Base+0x33c>
   3cb68:	ldr	r3, [fp, #-8]
   3cb6c:	ldr	r3, [r3, #4]
   3cb70:	add	r2, r3, #1
   3cb74:	ldr	r3, [fp, #-8]
   3cb78:	str	r2, [r3, #4]
   3cb7c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cb80:	b	3cc9c <flatcc_json_parser_union_type_vector@@Base+0x454>
   3cb84:	ldr	r3, [fp, #-8]
   3cb88:	ldr	r3, [r3, #4]
   3cb8c:	cmp	r3, #0
   3cb90:	bne	3cbb4 <flatcc_json_parser_union_type_vector@@Base+0x36c>
   3cb94:	ldr	r3, [pc, #268]	; 3cca8 <flatcc_json_parser_union_type_vector@@Base+0x460>
   3cb98:	add	r3, pc, r3
   3cb9c:	ldr	r2, [pc, #264]	; 3ccac <flatcc_json_parser_union_type_vector@@Base+0x464>
   3cba0:	ldr	r1, [pc, #264]	; 3ccb0 <flatcc_json_parser_union_type_vector@@Base+0x468>
   3cba4:	add	r1, pc, r1
   3cba8:	ldr	r0, [pc, #260]	; 3ccb4 <flatcc_json_parser_union_type_vector@@Base+0x46c>
   3cbac:	add	r0, pc, r0
   3cbb0:	bl	14610 <__assert_fail@plt>
   3cbb4:	ldr	r3, [fp, #-8]
   3cbb8:	ldr	r3, [r3, #4]
   3cbbc:	sub	r2, r3, #1
   3cbc0:	ldr	r3, [fp, #-8]
   3cbc4:	str	r2, [r3, #4]
   3cbc8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cbcc:	ldr	r3, [r3, #12]
   3cbd0:	str	r3, [fp, #-48]	; 0xffffffd0
   3cbd4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cbd8:	ldr	r3, [r3, #4]
   3cbdc:	str	r3, [fp, #-52]	; 0xffffffcc
   3cbe0:	ldr	r3, [fp, #-12]
   3cbe4:	ldr	r2, [r3, #8]
   3cbe8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cbec:	str	r2, [r3, #12]
   3cbf0:	ldr	r3, [fp, #-12]
   3cbf4:	ldr	r2, [r3, #4]
   3cbf8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cbfc:	str	r2, [r3, #4]
   3cc00:	ldr	r3, [fp, #-12]
   3cc04:	ldr	r1, [r3]
   3cc08:	ldr	r3, [fp, #16]
   3cc0c:	str	r3, [sp, #8]
   3cc10:	ldrh	r3, [fp, #4]
   3cc14:	str	r3, [sp, #4]
   3cc18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3cc1c:	str	r3, [sp]
   3cc20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3cc24:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3cc28:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3cc2c:	bl	3c4b8 <flatcc_json_parser_union_type@@Base+0x274>
   3cc30:	mov	r2, r0
   3cc34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3cc38:	cmp	r2, r3
   3cc3c:	bne	3cc48 <flatcc_json_parser_union_type_vector@@Base+0x400>
   3cc40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3cc44:	b	3cc9c <flatcc_json_parser_union_type_vector@@Base+0x454>
   3cc48:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cc4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3cc50:	str	r2, [r3, #12]
   3cc54:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3cc58:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3cc5c:	str	r2, [r3, #4]
   3cc60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cc64:	b	3cc9c <flatcc_json_parser_union_type_vector@@Base+0x454>
   3cc68:	nop			; (mov r0, r0)
   3cc6c:	b	3cc84 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3cc70:	nop			; (mov r0, r0)
   3cc74:	b	3cc84 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3cc78:	nop			; (mov r0, r0)
   3cc7c:	b	3cc84 <flatcc_json_parser_union_type_vector@@Base+0x43c>
   3cc80:	nop			; (mov r0, r0)
   3cc84:	mov	r3, #33	; 0x21
   3cc88:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3cc8c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   3cc90:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3cc94:	bl	39bbc <flatcc_json_parser_set_error@@Base>
   3cc98:	mov	r3, r0
   3cc9c:	mov	r0, r3
   3cca0:	sub	sp, fp, #4
   3cca4:	pop	{fp, pc}
   3cca8:	andeq	r3, r1, ip, lsr #31
   3ccac:	andeq	r0, r0, r2, ror #8
   3ccb0:	andeq	r3, r1, r0, lsr #21
   3ccb4:	strdeq	r3, [r1], -ip

0003ccb8 <flatcc_json_parser_table_as_root@@Base>:
   3ccb8:	push	{r4, fp, lr}
   3ccbc:	add	fp, sp, #8
   3ccc0:	sub	sp, sp, #76	; 0x4c
   3ccc4:	str	r0, [fp, #-64]	; 0xffffffc0
   3ccc8:	str	r1, [fp, #-68]	; 0xffffffbc
   3cccc:	str	r2, [fp, #-72]	; 0xffffffb8
   3ccd0:	str	r3, [fp, #-76]	; 0xffffffb4
   3ccd4:	ldr	r3, [fp, #4]
   3ccd8:	and	r3, r3, #4
   3ccdc:	cmp	r3, #0
   3cce0:	beq	3ccec <flatcc_json_parser_table_as_root@@Base+0x34>
   3cce4:	mov	r3, #2
   3cce8:	b	3ccf0 <flatcc_json_parser_table_as_root@@Base+0x38>
   3ccec:	mov	r3, #0
   3ccf0:	str	r3, [fp, #-16]
   3ccf4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ccf8:	cmp	r3, #0
   3ccfc:	bne	3cd08 <flatcc_json_parser_table_as_root@@Base+0x50>
   3cd00:	sub	r3, fp, #56	; 0x38
   3cd04:	b	3cd0c <flatcc_json_parser_table_as_root@@Base+0x54>
   3cd08:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cd0c:	str	r3, [fp, #-68]	; 0xffffffbc
   3cd10:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3cd14:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3cd18:	add	r2, r2, r3
   3cd1c:	ldr	r3, [fp, #4]
   3cd20:	str	r3, [sp]
   3cd24:	mov	r3, r2
   3cd28:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3cd2c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3cd30:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3cd34:	bl	34cb8 <flatcc_verify_union_vector_field@@Base+0x290>
   3cd38:	ldr	r3, [fp, #-16]
   3cd3c:	mov	r2, #0
   3cd40:	ldr	r1, [fp, #8]
   3cd44:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3cd48:	bl	2dbfc <flatcc_builder_start_buffer@@Base>
   3cd4c:	mov	r3, r0
   3cd50:	cmp	r3, #0
   3cd54:	beq	3cd60 <flatcc_json_parser_table_as_root@@Base+0xa8>
   3cd58:	mvn	r3, #0
   3cd5c:	b	3cdd0 <flatcc_json_parser_table_as_root@@Base+0x118>
   3cd60:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3cd64:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3cd68:	add	r2, r2, r3
   3cd6c:	sub	r3, fp, #60	; 0x3c
   3cd70:	ldr	r4, [fp, #12]
   3cd74:	ldr	r1, [fp, #-72]	; 0xffffffb8
   3cd78:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3cd7c:	blx	r4
   3cd80:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cd84:	ldr	r3, [r3, #20]
   3cd88:	cmp	r3, #0
   3cd8c:	beq	3cd9c <flatcc_json_parser_table_as_root@@Base+0xe4>
   3cd90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cd94:	ldr	r3, [r3, #20]
   3cd98:	b	3cdd0 <flatcc_json_parser_table_as_root@@Base+0x118>
   3cd9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3cda0:	mov	r1, r3
   3cda4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3cda8:	bl	2dd54 <flatcc_builder_end_buffer@@Base>
   3cdac:	mov	r3, r0
   3cdb0:	cmp	r3, #0
   3cdb4:	bne	3cdc0 <flatcc_json_parser_table_as_root@@Base+0x108>
   3cdb8:	mvn	r3, #0
   3cdbc:	b	3cdd0 <flatcc_json_parser_table_as_root@@Base+0x118>
   3cdc0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cdc4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3cdc8:	str	r2, [r3, #36]	; 0x24
   3cdcc:	mov	r3, #0
   3cdd0:	mov	r0, r3
   3cdd4:	sub	sp, fp, #8
   3cdd8:	pop	{r4, fp, pc}

0003cddc <flatcc_json_parser_struct_as_root@@Base>:
   3cddc:	push	{r4, fp, lr}
   3cde0:	add	fp, sp, #8
   3cde4:	sub	sp, sp, #76	; 0x4c
   3cde8:	str	r0, [fp, #-64]	; 0xffffffc0
   3cdec:	str	r1, [fp, #-68]	; 0xffffffbc
   3cdf0:	str	r2, [fp, #-72]	; 0xffffffb8
   3cdf4:	str	r3, [fp, #-76]	; 0xffffffb4
   3cdf8:	ldr	r3, [fp, #4]
   3cdfc:	and	r3, r3, #4
   3ce00:	cmp	r3, #0
   3ce04:	beq	3ce10 <flatcc_json_parser_struct_as_root@@Base+0x34>
   3ce08:	mov	r3, #2
   3ce0c:	b	3ce14 <flatcc_json_parser_struct_as_root@@Base+0x38>
   3ce10:	mov	r3, #0
   3ce14:	str	r3, [fp, #-16]
   3ce18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ce1c:	cmp	r3, #0
   3ce20:	bne	3ce2c <flatcc_json_parser_struct_as_root@@Base+0x50>
   3ce24:	sub	r3, fp, #56	; 0x38
   3ce28:	b	3ce30 <flatcc_json_parser_struct_as_root@@Base+0x54>
   3ce2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ce30:	str	r3, [fp, #-68]	; 0xffffffbc
   3ce34:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ce38:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3ce3c:	add	r2, r2, r3
   3ce40:	ldr	r3, [fp, #4]
   3ce44:	str	r3, [sp]
   3ce48:	mov	r3, r2
   3ce4c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ce50:	ldr	r1, [fp, #-64]	; 0xffffffc0
   3ce54:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3ce58:	bl	34cb8 <flatcc_verify_union_vector_field@@Base+0x290>
   3ce5c:	ldr	r3, [fp, #-16]
   3ce60:	mov	r2, #0
   3ce64:	ldr	r1, [fp, #8]
   3ce68:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3ce6c:	bl	2dbfc <flatcc_builder_start_buffer@@Base>
   3ce70:	mov	r3, r0
   3ce74:	cmp	r3, #0
   3ce78:	beq	3ce84 <flatcc_json_parser_struct_as_root@@Base+0xa8>
   3ce7c:	mvn	r3, #0
   3ce80:	b	3cef4 <flatcc_json_parser_struct_as_root@@Base+0x118>
   3ce84:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ce88:	ldr	r3, [fp, #-76]	; 0xffffffb4
   3ce8c:	add	r2, r2, r3
   3ce90:	sub	r3, fp, #60	; 0x3c
   3ce94:	ldr	r4, [fp, #12]
   3ce98:	ldr	r1, [fp, #-72]	; 0xffffffb8
   3ce9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   3cea0:	blx	r4
   3cea4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cea8:	ldr	r3, [r3, #20]
   3ceac:	cmp	r3, #0
   3ceb0:	beq	3cec0 <flatcc_json_parser_struct_as_root@@Base+0xe4>
   3ceb4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3ceb8:	ldr	r3, [r3, #20]
   3cebc:	b	3cef4 <flatcc_json_parser_struct_as_root@@Base+0x118>
   3cec0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3cec4:	mov	r1, r3
   3cec8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3cecc:	bl	2dd54 <flatcc_builder_end_buffer@@Base>
   3ced0:	mov	r3, r0
   3ced4:	cmp	r3, #0
   3ced8:	bne	3cee4 <flatcc_json_parser_struct_as_root@@Base+0x108>
   3cedc:	mvn	r3, #0
   3cee0:	b	3cef4 <flatcc_json_parser_struct_as_root@@Base+0x118>
   3cee4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3cee8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3ceec:	str	r2, [r3, #36]	; 0x24
   3cef0:	mov	r3, #0
   3cef4:	mov	r0, r3
   3cef8:	sub	sp, fp, #8
   3cefc:	pop	{r4, fp, pc}
   3cf00:	push	{fp}		; (str fp, [sp, #-4]!)
   3cf04:	add	fp, sp, #0
   3cf08:	sub	sp, sp, #12
   3cf0c:	mov	r3, r0
   3cf10:	strb	r3, [fp, #-5]
   3cf14:	ldrb	r3, [fp, #-5]
   3cf18:	mov	r0, r3
   3cf1c:	add	sp, fp, #0
   3cf20:	pop	{fp}		; (ldr fp, [sp], #4)
   3cf24:	bx	lr
   3cf28:	push	{fp, lr}
   3cf2c:	add	fp, sp, #4
   3cf30:	sub	sp, sp, #8
   3cf34:	str	r0, [fp, #-8]
   3cf38:	ldr	r3, [fp, #-8]
   3cf3c:	ldrb	r3, [r3]
   3cf40:	mov	r0, r3
   3cf44:	bl	3cf00 <flatcc_json_parser_struct_as_root@@Base+0x124>
   3cf48:	mov	r3, r0
   3cf4c:	mov	r0, r3
   3cf50:	sub	sp, fp, #4
   3cf54:	pop	{fp, pc}
   3cf58:	push	{fp}		; (str fp, [sp, #-4]!)
   3cf5c:	add	fp, sp, #0
   3cf60:	sub	sp, sp, #12
   3cf64:	mov	r3, r0
   3cf68:	strh	r3, [fp, #-6]
   3cf6c:	ldrh	r3, [fp, #-6]
   3cf70:	mov	r0, r3
   3cf74:	add	sp, fp, #0
   3cf78:	pop	{fp}		; (ldr fp, [sp], #4)
   3cf7c:	bx	lr
   3cf80:	push	{fp, lr}
   3cf84:	add	fp, sp, #4
   3cf88:	sub	sp, sp, #8
   3cf8c:	str	r0, [fp, #-8]
   3cf90:	ldr	r3, [fp, #-8]
   3cf94:	ldrh	r3, [r3]
   3cf98:	mov	r0, r3
   3cf9c:	bl	3cf58 <flatcc_json_parser_struct_as_root@@Base+0x17c>
   3cfa0:	mov	r3, r0
   3cfa4:	mov	r0, r3
   3cfa8:	sub	sp, fp, #4
   3cfac:	pop	{fp, pc}
   3cfb0:	push	{fp}		; (str fp, [sp, #-4]!)
   3cfb4:	add	fp, sp, #0
   3cfb8:	sub	sp, sp, #12
   3cfbc:	str	r0, [fp, #-8]
   3cfc0:	ldr	r3, [fp, #-8]
   3cfc4:	mov	r0, r3
   3cfc8:	add	sp, fp, #0
   3cfcc:	pop	{fp}		; (ldr fp, [sp], #4)
   3cfd0:	bx	lr
   3cfd4:	push	{fp, lr}
   3cfd8:	add	fp, sp, #4
   3cfdc:	sub	sp, sp, #8
   3cfe0:	str	r0, [fp, #-8]
   3cfe4:	ldr	r3, [fp, #-8]
   3cfe8:	ldr	r3, [r3]
   3cfec:	mov	r0, r3
   3cff0:	bl	3cfb0 <flatcc_json_parser_struct_as_root@@Base+0x1d4>
   3cff4:	mov	r3, r0
   3cff8:	mov	r0, r3
   3cffc:	sub	sp, fp, #4
   3d000:	pop	{fp, pc}
   3d004:	push	{fp}		; (str fp, [sp, #-4]!)
   3d008:	add	fp, sp, #0
   3d00c:	sub	sp, sp, #12
   3d010:	strd	r0, [fp, #-12]
   3d014:	ldrd	r2, [fp, #-12]
   3d018:	mov	r0, r2
   3d01c:	mov	r1, r3
   3d020:	add	sp, fp, #0
   3d024:	pop	{fp}		; (ldr fp, [sp], #4)
   3d028:	bx	lr
   3d02c:	push	{fp, lr}
   3d030:	add	fp, sp, #4
   3d034:	sub	sp, sp, #8
   3d038:	str	r0, [fp, #-8]
   3d03c:	ldr	r3, [fp, #-8]
   3d040:	ldrd	r2, [r3]
   3d044:	mov	r0, r2
   3d048:	mov	r1, r3
   3d04c:	bl	3d004 <flatcc_json_parser_struct_as_root@@Base+0x228>
   3d050:	mov	r2, r0
   3d054:	mov	r3, r1
   3d058:	mov	r0, r2
   3d05c:	mov	r1, r3
   3d060:	sub	sp, fp, #4
   3d064:	pop	{fp, pc}
   3d068:	push	{fp}		; (str fp, [sp, #-4]!)
   3d06c:	add	fp, sp, #0
   3d070:	sub	sp, sp, #12
   3d074:	mov	r3, r0
   3d078:	strb	r3, [fp, #-5]
   3d07c:	ldrsb	r3, [fp, #-5]
   3d080:	mov	r0, r3
   3d084:	add	sp, fp, #0
   3d088:	pop	{fp}		; (ldr fp, [sp], #4)
   3d08c:	bx	lr
   3d090:	push	{fp, lr}
   3d094:	add	fp, sp, #4
   3d098:	sub	sp, sp, #8
   3d09c:	str	r0, [fp, #-8]
   3d0a0:	ldr	r3, [fp, #-8]
   3d0a4:	ldrsb	r3, [r3]
   3d0a8:	mov	r0, r3
   3d0ac:	bl	3d068 <flatcc_json_parser_struct_as_root@@Base+0x28c>
   3d0b0:	mov	r3, r0
   3d0b4:	mov	r0, r3
   3d0b8:	sub	sp, fp, #4
   3d0bc:	pop	{fp, pc}
   3d0c0:	push	{fp}		; (str fp, [sp, #-4]!)
   3d0c4:	add	fp, sp, #0
   3d0c8:	sub	sp, sp, #12
   3d0cc:	mov	r3, r0
   3d0d0:	strh	r3, [fp, #-6]
   3d0d4:	ldrsh	r3, [fp, #-6]
   3d0d8:	mov	r0, r3
   3d0dc:	add	sp, fp, #0
   3d0e0:	pop	{fp}		; (ldr fp, [sp], #4)
   3d0e4:	bx	lr
   3d0e8:	push	{fp, lr}
   3d0ec:	add	fp, sp, #4
   3d0f0:	sub	sp, sp, #8
   3d0f4:	str	r0, [fp, #-8]
   3d0f8:	ldr	r3, [fp, #-8]
   3d0fc:	ldrsh	r3, [r3]
   3d100:	mov	r0, r3
   3d104:	bl	3d0c0 <flatcc_json_parser_struct_as_root@@Base+0x2e4>
   3d108:	mov	r3, r0
   3d10c:	mov	r0, r3
   3d110:	sub	sp, fp, #4
   3d114:	pop	{fp, pc}
   3d118:	push	{fp}		; (str fp, [sp, #-4]!)
   3d11c:	add	fp, sp, #0
   3d120:	sub	sp, sp, #12
   3d124:	str	r0, [fp, #-8]
   3d128:	ldr	r3, [fp, #-8]
   3d12c:	mov	r0, r3
   3d130:	add	sp, fp, #0
   3d134:	pop	{fp}		; (ldr fp, [sp], #4)
   3d138:	bx	lr
   3d13c:	push	{fp, lr}
   3d140:	add	fp, sp, #4
   3d144:	sub	sp, sp, #8
   3d148:	str	r0, [fp, #-8]
   3d14c:	ldr	r3, [fp, #-8]
   3d150:	ldr	r3, [r3]
   3d154:	mov	r0, r3
   3d158:	bl	3d118 <flatcc_json_parser_struct_as_root@@Base+0x33c>
   3d15c:	mov	r3, r0
   3d160:	mov	r0, r3
   3d164:	sub	sp, fp, #4
   3d168:	pop	{fp, pc}
   3d16c:	push	{fp}		; (str fp, [sp, #-4]!)
   3d170:	add	fp, sp, #0
   3d174:	sub	sp, sp, #12
   3d178:	strd	r0, [fp, #-12]
   3d17c:	ldrd	r2, [fp, #-12]
   3d180:	mov	r0, r2
   3d184:	mov	r1, r3
   3d188:	add	sp, fp, #0
   3d18c:	pop	{fp}		; (ldr fp, [sp], #4)
   3d190:	bx	lr
   3d194:	push	{fp, lr}
   3d198:	add	fp, sp, #4
   3d19c:	sub	sp, sp, #8
   3d1a0:	str	r0, [fp, #-8]
   3d1a4:	ldr	r3, [fp, #-8]
   3d1a8:	ldrd	r2, [r3]
   3d1ac:	mov	r0, r2
   3d1b0:	mov	r1, r3
   3d1b4:	bl	3d16c <flatcc_json_parser_struct_as_root@@Base+0x390>
   3d1b8:	mov	r2, r0
   3d1bc:	mov	r3, r1
   3d1c0:	mov	r0, r2
   3d1c4:	mov	r1, r3
   3d1c8:	sub	sp, fp, #4
   3d1cc:	pop	{fp, pc}
   3d1d0:	push	{fp}		; (str fp, [sp, #-4]!)
   3d1d4:	add	fp, sp, #0
   3d1d8:	sub	sp, sp, #20
   3d1dc:	vstr	s0, [fp, #-16]
   3d1e0:	ldr	r3, [fp, #-16]
   3d1e4:	str	r3, [fp, #-8]
   3d1e8:	ldr	r3, [fp, #-8]
   3d1ec:	str	r3, [fp, #-8]
   3d1f0:	ldr	r3, [fp, #-8]
   3d1f4:	vmov	s15, r3
   3d1f8:	vmov.f32	s0, s15
   3d1fc:	add	sp, fp, #0
   3d200:	pop	{fp}		; (ldr fp, [sp], #4)
   3d204:	bx	lr
   3d208:	push	{fp, lr}
   3d20c:	add	fp, sp, #4
   3d210:	sub	sp, sp, #8
   3d214:	str	r0, [fp, #-8]
   3d218:	ldr	r3, [fp, #-8]
   3d21c:	vldr	s15, [r3]
   3d220:	vmov.f32	s0, s15
   3d224:	bl	3d1d0 <flatcc_json_parser_struct_as_root@@Base+0x3f4>
   3d228:	vmov.f32	s15, s0
   3d22c:	vmov.f32	s0, s15
   3d230:	sub	sp, fp, #4
   3d234:	pop	{fp, pc}
   3d238:	push	{fp}		; (str fp, [sp, #-4]!)
   3d23c:	add	fp, sp, #0
   3d240:	sub	sp, sp, #20
   3d244:	vstr	d0, [fp, #-20]	; 0xffffffec
   3d248:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3d24c:	strd	r2, [fp, #-12]
   3d250:	ldrd	r2, [fp, #-12]
   3d254:	strd	r2, [fp, #-12]
   3d258:	ldrd	r2, [fp, #-12]
   3d25c:	vmov	d7, r2, r3
   3d260:	vmov.f64	d0, d7
   3d264:	add	sp, fp, #0
   3d268:	pop	{fp}		; (ldr fp, [sp], #4)
   3d26c:	bx	lr
   3d270:	push	{fp, lr}
   3d274:	add	fp, sp, #4
   3d278:	sub	sp, sp, #8
   3d27c:	str	r0, [fp, #-8]
   3d280:	ldr	r3, [fp, #-8]
   3d284:	vldr	d7, [r3]
   3d288:	vmov.f64	d0, d7
   3d28c:	bl	3d238 <flatcc_json_parser_struct_as_root@@Base+0x45c>
   3d290:	vmov.f64	d7, d0
   3d294:	vmov.f64	d0, d7
   3d298:	sub	sp, fp, #4
   3d29c:	pop	{fp, pc}
   3d2a0:	push	{fp}		; (str fp, [sp, #-4]!)
   3d2a4:	add	fp, sp, #0
   3d2a8:	sub	sp, sp, #12
   3d2ac:	mov	r3, r0
   3d2b0:	strb	r3, [fp, #-5]
   3d2b4:	ldrb	r3, [fp, #-5]
   3d2b8:	mov	r0, r3
   3d2bc:	add	sp, fp, #0
   3d2c0:	pop	{fp}		; (ldr fp, [sp], #4)
   3d2c4:	bx	lr
   3d2c8:	push	{fp, lr}
   3d2cc:	add	fp, sp, #4
   3d2d0:	sub	sp, sp, #8
   3d2d4:	str	r0, [fp, #-8]
   3d2d8:	ldr	r3, [fp, #-8]
   3d2dc:	ldrb	r3, [r3]
   3d2e0:	mov	r0, r3
   3d2e4:	bl	3d2a0 <flatcc_json_parser_struct_as_root@@Base+0x4c4>
   3d2e8:	mov	r3, r0
   3d2ec:	mov	r0, r3
   3d2f0:	sub	sp, fp, #4
   3d2f4:	pop	{fp, pc}
   3d2f8:	push	{fp}		; (str fp, [sp, #-4]!)
   3d2fc:	add	fp, sp, #0
   3d300:	sub	sp, sp, #12
   3d304:	str	r0, [fp, #-8]
   3d308:	ldr	r3, [fp, #-8]
   3d30c:	mov	r0, r3
   3d310:	add	sp, fp, #0
   3d314:	pop	{fp}		; (ldr fp, [sp], #4)
   3d318:	bx	lr
   3d31c:	push	{fp, lr}
   3d320:	add	fp, sp, #4
   3d324:	sub	sp, sp, #8
   3d328:	str	r0, [fp, #-8]
   3d32c:	ldr	r3, [fp, #-8]
   3d330:	ldr	r3, [r3]
   3d334:	mov	r0, r3
   3d338:	bl	3d2f8 <flatcc_json_parser_struct_as_root@@Base+0x51c>
   3d33c:	mov	r3, r0
   3d340:	mov	r0, r3
   3d344:	sub	sp, fp, #4
   3d348:	pop	{fp, pc}
   3d34c:	push	{fp}		; (str fp, [sp, #-4]!)
   3d350:	add	fp, sp, #0
   3d354:	sub	sp, sp, #12
   3d358:	str	r0, [fp, #-8]
   3d35c:	ldr	r3, [fp, #-8]
   3d360:	mov	r0, r3
   3d364:	add	sp, fp, #0
   3d368:	pop	{fp}		; (ldr fp, [sp], #4)
   3d36c:	bx	lr
   3d370:	push	{fp, lr}
   3d374:	add	fp, sp, #4
   3d378:	sub	sp, sp, #8
   3d37c:	str	r0, [fp, #-8]
   3d380:	ldr	r3, [fp, #-8]
   3d384:	ldr	r3, [r3]
   3d388:	mov	r0, r3
   3d38c:	bl	3d34c <flatcc_json_parser_struct_as_root@@Base+0x570>
   3d390:	mov	r3, r0
   3d394:	mov	r0, r3
   3d398:	sub	sp, fp, #4
   3d39c:	pop	{fp, pc}
   3d3a0:	push	{fp}		; (str fp, [sp, #-4]!)
   3d3a4:	add	fp, sp, #0
   3d3a8:	sub	sp, sp, #12
   3d3ac:	mov	r3, r0
   3d3b0:	strh	r3, [fp, #-6]
   3d3b4:	ldrh	r3, [fp, #-6]
   3d3b8:	mov	r0, r3
   3d3bc:	add	sp, fp, #0
   3d3c0:	pop	{fp}		; (ldr fp, [sp], #4)
   3d3c4:	bx	lr
   3d3c8:	push	{fp, lr}
   3d3cc:	add	fp, sp, #4
   3d3d0:	sub	sp, sp, #8
   3d3d4:	str	r0, [fp, #-8]
   3d3d8:	ldr	r3, [fp, #-8]
   3d3dc:	ldrh	r3, [r3]
   3d3e0:	mov	r0, r3
   3d3e4:	bl	3d3a0 <flatcc_json_parser_struct_as_root@@Base+0x5c4>
   3d3e8:	mov	r3, r0
   3d3ec:	mov	r0, r3
   3d3f0:	sub	sp, fp, #4
   3d3f4:	pop	{fp, pc}
   3d3f8:	push	{fp}		; (str fp, [sp, #-4]!)
   3d3fc:	add	fp, sp, #0
   3d400:	sub	sp, sp, #12
   3d404:	mov	r3, r0
   3d408:	strb	r3, [fp, #-5]
   3d40c:	ldrb	r3, [fp, #-5]
   3d410:	mov	r0, r3
   3d414:	add	sp, fp, #0
   3d418:	pop	{fp}		; (ldr fp, [sp], #4)
   3d41c:	bx	lr
   3d420:	push	{fp, lr}
   3d424:	add	fp, sp, #4
   3d428:	sub	sp, sp, #8
   3d42c:	str	r0, [fp, #-8]
   3d430:	ldr	r3, [fp, #-8]
   3d434:	ldrb	r3, [r3]
   3d438:	mov	r0, r3
   3d43c:	bl	3d3f8 <flatcc_json_parser_struct_as_root@@Base+0x61c>
   3d440:	mov	r3, r0
   3d444:	mov	r0, r3
   3d448:	sub	sp, fp, #4
   3d44c:	pop	{fp, pc}
   3d450:	push	{fp}		; (str fp, [sp, #-4]!)
   3d454:	add	fp, sp, #0
   3d458:	sub	sp, sp, #12
   3d45c:	str	r0, [fp, #-8]
   3d460:	ldr	r3, [fp, #-8]
   3d464:	mov	r0, r3
   3d468:	add	sp, fp, #0
   3d46c:	pop	{fp}		; (ldr fp, [sp], #4)
   3d470:	bx	lr
   3d474:	push	{fp}		; (str fp, [sp, #-4]!)
   3d478:	add	fp, sp, #0
   3d47c:	sub	sp, sp, #12
   3d480:	str	r0, [fp, #-8]
   3d484:	ldr	r3, [fp, #-8]
   3d488:	mov	r0, r3
   3d48c:	add	sp, fp, #0
   3d490:	pop	{fp}		; (ldr fp, [sp], #4)
   3d494:	bx	lr
   3d498:	push	{fp, lr}
   3d49c:	add	fp, sp, #4
   3d4a0:	sub	sp, sp, #8
   3d4a4:	str	r0, [fp, #-8]
   3d4a8:	ldr	r3, [fp, #-8]
   3d4ac:	ldr	r3, [r3]
   3d4b0:	mov	r0, r3
   3d4b4:	bl	3d450 <flatcc_json_parser_struct_as_root@@Base+0x674>
   3d4b8:	mov	r3, r0
   3d4bc:	mov	r0, r3
   3d4c0:	sub	sp, fp, #4
   3d4c4:	pop	{fp, pc}
   3d4c8:	push	{fp}		; (str fp, [sp, #-4]!)
   3d4cc:	add	fp, sp, #0
   3d4d0:	sub	sp, sp, #12
   3d4d4:	str	r0, [fp, #-8]
   3d4d8:	str	r1, [fp, #-12]
   3d4dc:	ldr	r3, [fp, #-8]
   3d4e0:	ldr	r3, [r3, #36]	; 0x24
   3d4e4:	cmp	r3, #0
   3d4e8:	bne	3d4f8 <flatcc_json_parser_struct_as_root@@Base+0x71c>
   3d4ec:	ldr	r3, [fp, #-8]
   3d4f0:	ldr	r2, [fp, #-12]
   3d4f4:	str	r2, [r3, #36]	; 0x24
   3d4f8:	nop			; (mov r0, r0)
   3d4fc:	add	sp, fp, #0
   3d500:	pop	{fp}		; (ldr fp, [sp], #4)
   3d504:	bx	lr
   3d508:	push	{fp}		; (str fp, [sp, #-4]!)
   3d50c:	add	fp, sp, #0
   3d510:	sub	sp, sp, #12
   3d514:	str	r0, [fp, #-8]
   3d518:	ldr	r3, [fp, #-8]
   3d51c:	ldr	r3, [r3, #36]	; 0x24
   3d520:	mov	r0, r3
   3d524:	add	sp, fp, #0
   3d528:	pop	{fp}		; (ldr fp, [sp], #4)
   3d52c:	bx	lr
   3d530:	push	{fp, lr}
   3d534:	add	fp, sp, #4
   3d538:	sub	sp, sp, #8
   3d53c:	str	r0, [fp, #-8]
   3d540:	ldr	r3, [fp, #-8]
   3d544:	ldr	r2, [r3, #20]
   3d548:	ldr	r3, [fp, #-8]
   3d54c:	ldr	r3, [r3, #16]
   3d550:	cmp	r2, r3
   3d554:	bcc	3d56c <flatcc_json_parser_struct_as_root@@Base+0x790>
   3d558:	ldr	r3, [fp, #-8]
   3d55c:	ldr	r3, [r3, #44]	; 0x2c
   3d560:	mov	r1, #0
   3d564:	ldr	r0, [fp, #-8]
   3d568:	blx	r3
   3d56c:	nop			; (mov r0, r0)
   3d570:	sub	sp, fp, #4
   3d574:	pop	{fp, pc}
   3d578:	push	{fp, lr}
   3d57c:	add	fp, sp, #4
   3d580:	sub	sp, sp, #8
   3d584:	str	r0, [fp, #-8]
   3d588:	str	r1, [fp, #-12]
   3d58c:	ldr	r3, [fp, #-8]
   3d590:	cmp	r3, #0
   3d594:	beq	3d5b8 <flatcc_json_parser_struct_as_root@@Base+0x7dc>
   3d598:	mov	r2, #5
   3d59c:	ldr	r3, [pc, #60]	; 3d5e0 <flatcc_json_parser_struct_as_root@@Base+0x804>
   3d5a0:	add	r3, pc, r3
   3d5a4:	mov	r1, r3
   3d5a8:	ldr	r0, [fp, #-12]
   3d5ac:	bl	14544 <memcpy@plt>
   3d5b0:	mov	r3, #4
   3d5b4:	b	3d5d4 <flatcc_json_parser_struct_as_root@@Base+0x7f8>
   3d5b8:	mov	r2, #6
   3d5bc:	ldr	r3, [pc, #32]	; 3d5e4 <flatcc_json_parser_struct_as_root@@Base+0x808>
   3d5c0:	add	r3, pc, r3
   3d5c4:	mov	r1, r3
   3d5c8:	ldr	r0, [fp, #-12]
   3d5cc:	bl	14544 <memcpy@plt>
   3d5d0:	mov	r3, #5
   3d5d4:	mov	r0, r3
   3d5d8:	sub	sp, fp, #4
   3d5dc:	pop	{fp, pc}
   3d5e0:	andeq	r3, r1, r0, lsr #13
   3d5e4:	andeq	r3, r1, r8, lsl #13
   3d5e8:	push	{fp}		; (str fp, [sp, #-4]!)
   3d5ec:	add	fp, sp, #0
   3d5f0:	sub	sp, sp, #20
   3d5f4:	mov	r3, r0
   3d5f8:	str	r1, [fp, #-20]	; 0xffffffec
   3d5fc:	strb	r3, [fp, #-13]
   3d600:	ldrb	r3, [fp, #-13]
   3d604:	cmp	r3, #99	; 0x63
   3d608:	bls	3d6c0 <flatcc_json_parser_struct_as_root@@Base+0x8e4>
   3d60c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d610:	add	r3, r3, #3
   3d614:	str	r3, [fp, #-20]	; 0xffffffec
   3d618:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d61c:	mov	r2, #0
   3d620:	strb	r2, [r3]
   3d624:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d628:	sub	r3, r3, #2
   3d62c:	str	r3, [fp, #-20]	; 0xffffffec
   3d630:	ldrb	r3, [fp, #-13]
   3d634:	ldr	r2, [pc, #356]	; 3d7a0 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3d638:	umull	r1, r2, r2, r3
   3d63c:	lsr	r2, r2, #5
   3d640:	mov	r1, #100	; 0x64
   3d644:	mul	r2, r1, r2
   3d648:	sub	r3, r3, r2
   3d64c:	uxtb	r3, r3
   3d650:	lsl	r3, r3, #1
   3d654:	mov	r2, r3
   3d658:	ldr	r3, [pc, #324]	; 3d7a4 <flatcc_json_parser_struct_as_root@@Base+0x9c8>
   3d65c:	add	r3, pc, r3
   3d660:	add	r3, r2, r3
   3d664:	str	r3, [fp, #-8]
   3d668:	ldrb	r3, [fp, #-13]
   3d66c:	ldr	r2, [pc, #300]	; 3d7a0 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3d670:	umull	r2, r3, r2, r3
   3d674:	lsr	r3, r3, #5
   3d678:	strb	r3, [fp, #-13]
   3d67c:	ldr	r3, [fp, #-8]
   3d680:	ldrb	r2, [r3]
   3d684:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d688:	strb	r2, [r3]
   3d68c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d690:	add	r3, r3, #1
   3d694:	ldr	r2, [fp, #-8]
   3d698:	ldrb	r2, [r2, #1]
   3d69c:	strb	r2, [r3]
   3d6a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d6a4:	sub	r3, r3, #1
   3d6a8:	ldrb	r2, [fp, #-13]
   3d6ac:	add	r2, r2, #48	; 0x30
   3d6b0:	uxtb	r2, r2
   3d6b4:	strb	r2, [r3]
   3d6b8:	mov	r3, #3
   3d6bc:	b	3d790 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   3d6c0:	ldrb	r3, [fp, #-13]
   3d6c4:	cmp	r3, #9
   3d6c8:	bls	3d768 <flatcc_json_parser_struct_as_root@@Base+0x98c>
   3d6cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d6d0:	add	r3, r3, #2
   3d6d4:	str	r3, [fp, #-20]	; 0xffffffec
   3d6d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d6dc:	mov	r2, #0
   3d6e0:	strb	r2, [r3]
   3d6e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d6e8:	sub	r3, r3, #2
   3d6ec:	str	r3, [fp, #-20]	; 0xffffffec
   3d6f0:	ldrb	r3, [fp, #-13]
   3d6f4:	ldr	r2, [pc, #164]	; 3d7a0 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3d6f8:	umull	r1, r2, r2, r3
   3d6fc:	lsr	r2, r2, #5
   3d700:	mov	r1, #100	; 0x64
   3d704:	mul	r2, r1, r2
   3d708:	sub	r3, r3, r2
   3d70c:	uxtb	r3, r3
   3d710:	lsl	r3, r3, #1
   3d714:	mov	r2, r3
   3d718:	ldr	r3, [pc, #136]	; 3d7a8 <flatcc_json_parser_struct_as_root@@Base+0x9cc>
   3d71c:	add	r3, pc, r3
   3d720:	add	r3, r2, r3
   3d724:	str	r3, [fp, #-8]
   3d728:	ldrb	r3, [fp, #-13]
   3d72c:	ldr	r2, [pc, #108]	; 3d7a0 <flatcc_json_parser_struct_as_root@@Base+0x9c4>
   3d730:	umull	r2, r3, r2, r3
   3d734:	lsr	r3, r3, #5
   3d738:	strb	r3, [fp, #-13]
   3d73c:	ldr	r3, [fp, #-8]
   3d740:	ldrb	r2, [r3]
   3d744:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d748:	strb	r2, [r3]
   3d74c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d750:	add	r3, r3, #1
   3d754:	ldr	r2, [fp, #-8]
   3d758:	ldrb	r2, [r2, #1]
   3d75c:	strb	r2, [r3]
   3d760:	mov	r3, #2
   3d764:	b	3d790 <flatcc_json_parser_struct_as_root@@Base+0x9b4>
   3d768:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d76c:	add	r3, r3, #1
   3d770:	mov	r2, #0
   3d774:	strb	r2, [r3]
   3d778:	ldrb	r3, [fp, #-13]
   3d77c:	add	r3, r3, #48	; 0x30
   3d780:	uxtb	r2, r3
   3d784:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d788:	strb	r2, [r3]
   3d78c:	mov	r3, #1
   3d790:	mov	r0, r3
   3d794:	add	sp, fp, #0
   3d798:	pop	{fp}		; (ldr fp, [sp], #4)
   3d79c:	bx	lr
   3d7a0:	mvnpl	r8, pc, lsl r5
   3d7a4:	andeq	r3, r1, r8, lsl r5
   3d7a8:	andeq	r3, r1, r8, asr r4
   3d7ac:	push	{fp}		; (str fp, [sp, #-4]!)
   3d7b0:	add	fp, sp, #0
   3d7b4:	sub	sp, sp, #20
   3d7b8:	mov	r3, r0
   3d7bc:	str	r1, [fp, #-20]	; 0xffffffec
   3d7c0:	strh	r3, [fp, #-14]
   3d7c4:	mov	r3, #0
   3d7c8:	str	r3, [fp, #-8]
   3d7cc:	ldrh	r3, [fp, #-14]
   3d7d0:	cmp	r3, #1000	; 0x3e8
   3d7d4:	bcc	3d800 <flatcc_json_parser_struct_as_root@@Base+0xa24>
   3d7d8:	ldrh	r3, [fp, #-14]
   3d7dc:	ldr	r2, [pc, #728]	; 3dabc <flatcc_json_parser_struct_as_root@@Base+0xce0>
   3d7e0:	cmp	r3, r2
   3d7e4:	bls	3d7f4 <flatcc_json_parser_struct_as_root@@Base+0xa18>
   3d7e8:	mov	r3, #5
   3d7ec:	str	r3, [fp, #-8]
   3d7f0:	b	3d838 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3d7f4:	mov	r3, #4
   3d7f8:	str	r3, [fp, #-8]
   3d7fc:	b	3d838 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3d800:	ldrh	r3, [fp, #-14]
   3d804:	cmp	r3, #99	; 0x63
   3d808:	bls	3d818 <flatcc_json_parser_struct_as_root@@Base+0xa3c>
   3d80c:	mov	r3, #3
   3d810:	str	r3, [fp, #-8]
   3d814:	b	3d838 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3d818:	ldrh	r3, [fp, #-14]
   3d81c:	cmp	r3, #9
   3d820:	bls	3d830 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   3d824:	mov	r3, #2
   3d828:	str	r3, [fp, #-8]
   3d82c:	b	3d838 <flatcc_json_parser_struct_as_root@@Base+0xa5c>
   3d830:	mov	r3, #1
   3d834:	str	r3, [fp, #-8]
   3d838:	ldr	r3, [fp, #-8]
   3d83c:	ldr	r2, [fp, #-20]	; 0xffffffec
   3d840:	add	r3, r2, r3
   3d844:	str	r3, [fp, #-20]	; 0xffffffec
   3d848:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d84c:	mov	r2, #0
   3d850:	strb	r2, [r3]
   3d854:	ldr	r3, [fp, #-8]
   3d858:	and	r3, r3, #1
   3d85c:	cmp	r3, #0
   3d860:	beq	3d99c <flatcc_json_parser_struct_as_root@@Base+0xbc0>
   3d864:	ldr	r3, [fp, #-8]
   3d868:	cmp	r3, #3
   3d86c:	beq	3d900 <flatcc_json_parser_struct_as_root@@Base+0xb24>
   3d870:	cmp	r3, #5
   3d874:	beq	3d884 <flatcc_json_parser_struct_as_root@@Base+0xaa8>
   3d878:	cmp	r3, #1
   3d87c:	beq	3d97c <flatcc_json_parser_struct_as_root@@Base+0xba0>
   3d880:	b	3daa8 <flatcc_json_parser_struct_as_root@@Base+0xccc>
   3d884:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d888:	sub	r3, r3, #2
   3d88c:	str	r3, [fp, #-20]	; 0xffffffec
   3d890:	ldrh	r3, [fp, #-14]
   3d894:	ldr	r2, [pc, #548]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3d898:	umull	r1, r2, r2, r3
   3d89c:	lsr	r2, r2, #5
   3d8a0:	mov	r1, #100	; 0x64
   3d8a4:	mul	r2, r1, r2
   3d8a8:	sub	r3, r3, r2
   3d8ac:	uxth	r3, r3
   3d8b0:	lsl	r3, r3, #1
   3d8b4:	mov	r2, r3
   3d8b8:	ldr	r3, [pc, #516]	; 3dac4 <flatcc_json_parser_struct_as_root@@Base+0xce8>
   3d8bc:	add	r3, pc, r3
   3d8c0:	add	r3, r2, r3
   3d8c4:	str	r3, [fp, #-12]
   3d8c8:	ldrh	r3, [fp, #-14]
   3d8cc:	ldr	r2, [pc, #492]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3d8d0:	umull	r2, r3, r2, r3
   3d8d4:	lsr	r3, r3, #5
   3d8d8:	strh	r3, [fp, #-14]
   3d8dc:	ldr	r3, [fp, #-12]
   3d8e0:	ldrb	r2, [r3]
   3d8e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d8e8:	strb	r2, [r3]
   3d8ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d8f0:	add	r3, r3, #1
   3d8f4:	ldr	r2, [fp, #-12]
   3d8f8:	ldrb	r2, [r2, #1]
   3d8fc:	strb	r2, [r3]
   3d900:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d904:	sub	r3, r3, #2
   3d908:	str	r3, [fp, #-20]	; 0xffffffec
   3d90c:	ldrh	r3, [fp, #-14]
   3d910:	ldr	r2, [pc, #424]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3d914:	umull	r1, r2, r2, r3
   3d918:	lsr	r2, r2, #5
   3d91c:	mov	r1, #100	; 0x64
   3d920:	mul	r2, r1, r2
   3d924:	sub	r3, r3, r2
   3d928:	uxth	r3, r3
   3d92c:	lsl	r3, r3, #1
   3d930:	mov	r2, r3
   3d934:	ldr	r3, [pc, #396]	; 3dac8 <flatcc_json_parser_struct_as_root@@Base+0xcec>
   3d938:	add	r3, pc, r3
   3d93c:	add	r3, r2, r3
   3d940:	str	r3, [fp, #-12]
   3d944:	ldrh	r3, [fp, #-14]
   3d948:	ldr	r2, [pc, #368]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3d94c:	umull	r2, r3, r2, r3
   3d950:	lsr	r3, r3, #5
   3d954:	strh	r3, [fp, #-14]
   3d958:	ldr	r3, [fp, #-12]
   3d95c:	ldrb	r2, [r3]
   3d960:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d964:	strb	r2, [r3]
   3d968:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d96c:	add	r3, r3, #1
   3d970:	ldr	r2, [fp, #-12]
   3d974:	ldrb	r2, [r2, #1]
   3d978:	strb	r2, [r3]
   3d97c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d980:	sub	r3, r3, #1
   3d984:	ldrh	r2, [fp, #-14]
   3d988:	uxtb	r2, r2
   3d98c:	add	r2, r2, #48	; 0x30
   3d990:	uxtb	r2, r2
   3d994:	strb	r2, [r3]
   3d998:	b	3daa8 <flatcc_json_parser_struct_as_root@@Base+0xccc>
   3d99c:	ldr	r3, [fp, #-8]
   3d9a0:	cmp	r3, #2
   3d9a4:	beq	3da2c <flatcc_json_parser_struct_as_root@@Base+0xc50>
   3d9a8:	cmp	r3, #4
   3d9ac:	bne	3daa8 <flatcc_json_parser_struct_as_root@@Base+0xccc>
   3d9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d9b4:	sub	r3, r3, #2
   3d9b8:	str	r3, [fp, #-20]	; 0xffffffec
   3d9bc:	ldrh	r3, [fp, #-14]
   3d9c0:	ldr	r2, [pc, #248]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3d9c4:	umull	r1, r2, r2, r3
   3d9c8:	lsr	r2, r2, #5
   3d9cc:	mov	r1, #100	; 0x64
   3d9d0:	mul	r2, r1, r2
   3d9d4:	sub	r3, r3, r2
   3d9d8:	uxth	r3, r3
   3d9dc:	lsl	r3, r3, #1
   3d9e0:	mov	r2, r3
   3d9e4:	ldr	r3, [pc, #224]	; 3dacc <flatcc_json_parser_struct_as_root@@Base+0xcf0>
   3d9e8:	add	r3, pc, r3
   3d9ec:	add	r3, r2, r3
   3d9f0:	str	r3, [fp, #-12]
   3d9f4:	ldrh	r3, [fp, #-14]
   3d9f8:	ldr	r2, [pc, #192]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3d9fc:	umull	r2, r3, r2, r3
   3da00:	lsr	r3, r3, #5
   3da04:	strh	r3, [fp, #-14]
   3da08:	ldr	r3, [fp, #-12]
   3da0c:	ldrb	r2, [r3]
   3da10:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da14:	strb	r2, [r3]
   3da18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da1c:	add	r3, r3, #1
   3da20:	ldr	r2, [fp, #-12]
   3da24:	ldrb	r2, [r2, #1]
   3da28:	strb	r2, [r3]
   3da2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da30:	sub	r3, r3, #2
   3da34:	str	r3, [fp, #-20]	; 0xffffffec
   3da38:	ldrh	r3, [fp, #-14]
   3da3c:	ldr	r2, [pc, #124]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3da40:	umull	r1, r2, r2, r3
   3da44:	lsr	r2, r2, #5
   3da48:	mov	r1, #100	; 0x64
   3da4c:	mul	r2, r1, r2
   3da50:	sub	r3, r3, r2
   3da54:	uxth	r3, r3
   3da58:	lsl	r3, r3, #1
   3da5c:	mov	r2, r3
   3da60:	ldr	r3, [pc, #104]	; 3dad0 <flatcc_json_parser_struct_as_root@@Base+0xcf4>
   3da64:	add	r3, pc, r3
   3da68:	add	r3, r2, r3
   3da6c:	str	r3, [fp, #-12]
   3da70:	ldrh	r3, [fp, #-14]
   3da74:	ldr	r2, [pc, #68]	; 3dac0 <flatcc_json_parser_struct_as_root@@Base+0xce4>
   3da78:	umull	r2, r3, r2, r3
   3da7c:	lsr	r3, r3, #5
   3da80:	strh	r3, [fp, #-14]
   3da84:	ldr	r3, [fp, #-12]
   3da88:	ldrb	r2, [r3]
   3da8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da90:	strb	r2, [r3]
   3da94:	ldr	r3, [fp, #-20]	; 0xffffffec
   3da98:	add	r3, r3, #1
   3da9c:	ldr	r2, [fp, #-12]
   3daa0:	ldrb	r2, [r2, #1]
   3daa4:	strb	r2, [r3]
   3daa8:	ldr	r3, [fp, #-8]
   3daac:	mov	r0, r3
   3dab0:	add	sp, fp, #0
   3dab4:	pop	{fp}		; (ldr fp, [sp], #4)
   3dab8:	bx	lr
   3dabc:	andeq	r2, r0, pc, lsl #14
   3dac0:	mvnpl	r8, pc, lsl r5
   3dac4:			; <UNDEFINED> instruction: 0x000132b8
   3dac8:	andeq	r3, r1, ip, lsr r2
   3dacc:	andeq	r3, r1, ip, lsl #3
   3dad0:	andeq	r3, r1, r0, lsl r1
   3dad4:	push	{fp}		; (str fp, [sp, #-4]!)
   3dad8:	add	fp, sp, #0
   3dadc:	sub	sp, sp, #20
   3dae0:	str	r0, [fp, #-16]
   3dae4:	str	r1, [fp, #-20]	; 0xffffffec
   3dae8:	mov	r3, #0
   3daec:	str	r3, [fp, #-8]
   3daf0:	ldr	r3, [fp, #-16]
   3daf4:	ldr	r2, [pc, #1488]	; 3e0cc <flatcc_json_parser_struct_as_root@@Base+0x12f0>
   3daf8:	cmp	r3, r2
   3dafc:	bls	3db98 <flatcc_json_parser_struct_as_root@@Base+0xdbc>
   3db00:	ldr	r3, [fp, #-16]
   3db04:	ldr	r2, [pc, #1476]	; 3e0d0 <flatcc_json_parser_struct_as_root@@Base+0x12f4>
   3db08:	cmp	r3, r2
   3db0c:	bls	3db54 <flatcc_json_parser_struct_as_root@@Base+0xd78>
   3db10:	ldr	r3, [fp, #-16]
   3db14:	ldr	r2, [pc, #1464]	; 3e0d4 <flatcc_json_parser_struct_as_root@@Base+0x12f8>
   3db18:	cmp	r3, r2
   3db1c:	bls	3db2c <flatcc_json_parser_struct_as_root@@Base+0xd50>
   3db20:	mov	r3, #10
   3db24:	str	r3, [fp, #-8]
   3db28:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3db2c:	ldr	r3, [fp, #-16]
   3db30:	ldr	r2, [pc, #1440]	; 3e0d8 <flatcc_json_parser_struct_as_root@@Base+0x12fc>
   3db34:	cmp	r3, r2
   3db38:	bls	3db48 <flatcc_json_parser_struct_as_root@@Base+0xd6c>
   3db3c:	mov	r3, #9
   3db40:	str	r3, [fp, #-8]
   3db44:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3db48:	mov	r3, #8
   3db4c:	str	r3, [fp, #-8]
   3db50:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3db54:	ldr	r3, [fp, #-16]
   3db58:	ldr	r2, [pc, #1404]	; 3e0dc <flatcc_json_parser_struct_as_root@@Base+0x1300>
   3db5c:	cmp	r3, r2
   3db60:	bls	3db70 <flatcc_json_parser_struct_as_root@@Base+0xd94>
   3db64:	mov	r3, #7
   3db68:	str	r3, [fp, #-8]
   3db6c:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3db70:	ldr	r3, [fp, #-16]
   3db74:	ldr	r2, [pc, #1380]	; 3e0e0 <flatcc_json_parser_struct_as_root@@Base+0x1304>
   3db78:	cmp	r3, r2
   3db7c:	bls	3db8c <flatcc_json_parser_struct_as_root@@Base+0xdb0>
   3db80:	mov	r3, #6
   3db84:	str	r3, [fp, #-8]
   3db88:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3db8c:	mov	r3, #5
   3db90:	str	r3, [fp, #-8]
   3db94:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3db98:	ldr	r3, [fp, #-16]
   3db9c:	cmp	r3, #99	; 0x63
   3dba0:	bls	3dbc8 <flatcc_json_parser_struct_as_root@@Base+0xdec>
   3dba4:	ldr	r3, [fp, #-16]
   3dba8:	cmp	r3, #1000	; 0x3e8
   3dbac:	bcc	3dbbc <flatcc_json_parser_struct_as_root@@Base+0xde0>
   3dbb0:	mov	r3, #4
   3dbb4:	str	r3, [fp, #-8]
   3dbb8:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3dbbc:	mov	r3, #3
   3dbc0:	str	r3, [fp, #-8]
   3dbc4:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3dbc8:	ldr	r3, [fp, #-16]
   3dbcc:	cmp	r3, #9
   3dbd0:	bls	3dbe0 <flatcc_json_parser_struct_as_root@@Base+0xe04>
   3dbd4:	mov	r3, #2
   3dbd8:	str	r3, [fp, #-8]
   3dbdc:	b	3dbe8 <flatcc_json_parser_struct_as_root@@Base+0xe0c>
   3dbe0:	mov	r3, #1
   3dbe4:	str	r3, [fp, #-8]
   3dbe8:	ldr	r3, [fp, #-8]
   3dbec:	ldr	r2, [fp, #-20]	; 0xffffffec
   3dbf0:	add	r3, r2, r3
   3dbf4:	str	r3, [fp, #-20]	; 0xffffffec
   3dbf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dbfc:	mov	r2, #0
   3dc00:	strb	r2, [r3]
   3dc04:	ldr	r3, [fp, #-8]
   3dc08:	and	r3, r3, #1
   3dc0c:	cmp	r3, #0
   3dc10:	beq	3de3c <flatcc_json_parser_struct_as_root@@Base+0x1060>
   3dc14:	ldr	r3, [fp, #-8]
   3dc18:	sub	r3, r3, #1
   3dc1c:	cmp	r3, #8
   3dc20:	addls	pc, pc, r3, lsl #2
   3dc24:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3dc28:	b	3de1c <flatcc_json_parser_struct_as_root@@Base+0x1040>
   3dc2c:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3dc30:	b	3dda8 <flatcc_json_parser_struct_as_root@@Base+0xfcc>
   3dc34:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3dc38:	b	3dd34 <flatcc_json_parser_struct_as_root@@Base+0xf58>
   3dc3c:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3dc40:	b	3dcc0 <flatcc_json_parser_struct_as_root@@Base+0xee4>
   3dc44:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3dc48:	b	3dc4c <flatcc_json_parser_struct_as_root@@Base+0xe70>
   3dc4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dc50:	sub	r3, r3, #2
   3dc54:	str	r3, [fp, #-20]	; 0xffffffec
   3dc58:	ldr	r2, [fp, #-16]
   3dc5c:	ldr	r3, [pc, #1152]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dc60:	umull	r1, r3, r3, r2
   3dc64:	lsr	r3, r3, #5
   3dc68:	mov	r1, #100	; 0x64
   3dc6c:	mul	r3, r1, r3
   3dc70:	sub	r3, r2, r3
   3dc74:	lsl	r3, r3, #1
   3dc78:	ldr	r2, [pc, #1128]	; 3e0e8 <flatcc_json_parser_struct_as_root@@Base+0x130c>
   3dc7c:	add	r2, pc, r2
   3dc80:	add	r3, r3, r2
   3dc84:	str	r3, [fp, #-12]
   3dc88:	ldr	r3, [fp, #-16]
   3dc8c:	ldr	r2, [pc, #1104]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dc90:	umull	r2, r3, r2, r3
   3dc94:	lsr	r3, r3, #5
   3dc98:	str	r3, [fp, #-16]
   3dc9c:	ldr	r3, [fp, #-12]
   3dca0:	ldrb	r2, [r3]
   3dca4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dca8:	strb	r2, [r3]
   3dcac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dcb0:	add	r3, r3, #1
   3dcb4:	ldr	r2, [fp, #-12]
   3dcb8:	ldrb	r2, [r2, #1]
   3dcbc:	strb	r2, [r3]
   3dcc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dcc4:	sub	r3, r3, #2
   3dcc8:	str	r3, [fp, #-20]	; 0xffffffec
   3dccc:	ldr	r2, [fp, #-16]
   3dcd0:	ldr	r3, [pc, #1036]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dcd4:	umull	r1, r3, r3, r2
   3dcd8:	lsr	r3, r3, #5
   3dcdc:	mov	r1, #100	; 0x64
   3dce0:	mul	r3, r1, r3
   3dce4:	sub	r3, r2, r3
   3dce8:	lsl	r3, r3, #1
   3dcec:	ldr	r2, [pc, #1016]	; 3e0ec <flatcc_json_parser_struct_as_root@@Base+0x1310>
   3dcf0:	add	r2, pc, r2
   3dcf4:	add	r3, r3, r2
   3dcf8:	str	r3, [fp, #-12]
   3dcfc:	ldr	r3, [fp, #-16]
   3dd00:	ldr	r2, [pc, #988]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dd04:	umull	r2, r3, r2, r3
   3dd08:	lsr	r3, r3, #5
   3dd0c:	str	r3, [fp, #-16]
   3dd10:	ldr	r3, [fp, #-12]
   3dd14:	ldrb	r2, [r3]
   3dd18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dd1c:	strb	r2, [r3]
   3dd20:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dd24:	add	r3, r3, #1
   3dd28:	ldr	r2, [fp, #-12]
   3dd2c:	ldrb	r2, [r2, #1]
   3dd30:	strb	r2, [r3]
   3dd34:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dd38:	sub	r3, r3, #2
   3dd3c:	str	r3, [fp, #-20]	; 0xffffffec
   3dd40:	ldr	r2, [fp, #-16]
   3dd44:	ldr	r3, [pc, #920]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dd48:	umull	r1, r3, r3, r2
   3dd4c:	lsr	r3, r3, #5
   3dd50:	mov	r1, #100	; 0x64
   3dd54:	mul	r3, r1, r3
   3dd58:	sub	r3, r2, r3
   3dd5c:	lsl	r3, r3, #1
   3dd60:	ldr	r2, [pc, #904]	; 3e0f0 <flatcc_json_parser_struct_as_root@@Base+0x1314>
   3dd64:	add	r2, pc, r2
   3dd68:	add	r3, r3, r2
   3dd6c:	str	r3, [fp, #-12]
   3dd70:	ldr	r3, [fp, #-16]
   3dd74:	ldr	r2, [pc, #872]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dd78:	umull	r2, r3, r2, r3
   3dd7c:	lsr	r3, r3, #5
   3dd80:	str	r3, [fp, #-16]
   3dd84:	ldr	r3, [fp, #-12]
   3dd88:	ldrb	r2, [r3]
   3dd8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dd90:	strb	r2, [r3]
   3dd94:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dd98:	add	r3, r3, #1
   3dd9c:	ldr	r2, [fp, #-12]
   3dda0:	ldrb	r2, [r2, #1]
   3dda4:	strb	r2, [r3]
   3dda8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ddac:	sub	r3, r3, #2
   3ddb0:	str	r3, [fp, #-20]	; 0xffffffec
   3ddb4:	ldr	r2, [fp, #-16]
   3ddb8:	ldr	r3, [pc, #804]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ddbc:	umull	r1, r3, r3, r2
   3ddc0:	lsr	r3, r3, #5
   3ddc4:	mov	r1, #100	; 0x64
   3ddc8:	mul	r3, r1, r3
   3ddcc:	sub	r3, r2, r3
   3ddd0:	lsl	r3, r3, #1
   3ddd4:	ldr	r2, [pc, #792]	; 3e0f4 <flatcc_json_parser_struct_as_root@@Base+0x1318>
   3ddd8:	add	r2, pc, r2
   3dddc:	add	r3, r3, r2
   3dde0:	str	r3, [fp, #-12]
   3dde4:	ldr	r3, [fp, #-16]
   3dde8:	ldr	r2, [pc, #756]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3ddec:	umull	r2, r3, r2, r3
   3ddf0:	lsr	r3, r3, #5
   3ddf4:	str	r3, [fp, #-16]
   3ddf8:	ldr	r3, [fp, #-12]
   3ddfc:	ldrb	r2, [r3]
   3de00:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de04:	strb	r2, [r3]
   3de08:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de0c:	add	r3, r3, #1
   3de10:	ldr	r2, [fp, #-12]
   3de14:	ldrb	r2, [r2, #1]
   3de18:	strb	r2, [r3]
   3de1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de20:	sub	r3, r3, #1
   3de24:	ldr	r2, [fp, #-16]
   3de28:	uxtb	r2, r2
   3de2c:	add	r2, r2, #48	; 0x30
   3de30:	uxtb	r2, r2
   3de34:	strb	r2, [r3]
   3de38:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3de3c:	ldr	r3, [fp, #-8]
   3de40:	sub	r3, r3, #2
   3de44:	cmp	r3, #8
   3de48:	addls	pc, pc, r3, lsl #2
   3de4c:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3de50:	b	3e044 <flatcc_json_parser_struct_as_root@@Base+0x1268>
   3de54:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3de58:	b	3dfd0 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   3de5c:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3de60:	b	3df5c <flatcc_json_parser_struct_as_root@@Base+0x1180>
   3de64:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3de68:	b	3dee8 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   3de6c:	b	3e0b8 <flatcc_json_parser_struct_as_root@@Base+0x12dc>
   3de70:	b	3de74 <flatcc_json_parser_struct_as_root@@Base+0x1098>
   3de74:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de78:	sub	r3, r3, #2
   3de7c:	str	r3, [fp, #-20]	; 0xffffffec
   3de80:	ldr	r2, [fp, #-16]
   3de84:	ldr	r3, [pc, #600]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3de88:	umull	r1, r3, r3, r2
   3de8c:	lsr	r3, r3, #5
   3de90:	mov	r1, #100	; 0x64
   3de94:	mul	r3, r1, r3
   3de98:	sub	r3, r2, r3
   3de9c:	lsl	r3, r3, #1
   3dea0:	ldr	r2, [pc, #592]	; 3e0f8 <flatcc_json_parser_struct_as_root@@Base+0x131c>
   3dea4:	add	r2, pc, r2
   3dea8:	add	r3, r3, r2
   3deac:	str	r3, [fp, #-12]
   3deb0:	ldr	r3, [fp, #-16]
   3deb4:	ldr	r2, [pc, #552]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3deb8:	umull	r2, r3, r2, r3
   3debc:	lsr	r3, r3, #5
   3dec0:	str	r3, [fp, #-16]
   3dec4:	ldr	r3, [fp, #-12]
   3dec8:	ldrb	r2, [r3]
   3decc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ded0:	strb	r2, [r3]
   3ded4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ded8:	add	r3, r3, #1
   3dedc:	ldr	r2, [fp, #-12]
   3dee0:	ldrb	r2, [r2, #1]
   3dee4:	strb	r2, [r3]
   3dee8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3deec:	sub	r3, r3, #2
   3def0:	str	r3, [fp, #-20]	; 0xffffffec
   3def4:	ldr	r2, [fp, #-16]
   3def8:	ldr	r3, [pc, #484]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3defc:	umull	r1, r3, r3, r2
   3df00:	lsr	r3, r3, #5
   3df04:	mov	r1, #100	; 0x64
   3df08:	mul	r3, r1, r3
   3df0c:	sub	r3, r2, r3
   3df10:	lsl	r3, r3, #1
   3df14:	ldr	r2, [pc, #480]	; 3e0fc <flatcc_json_parser_struct_as_root@@Base+0x1320>
   3df18:	add	r2, pc, r2
   3df1c:	add	r3, r3, r2
   3df20:	str	r3, [fp, #-12]
   3df24:	ldr	r3, [fp, #-16]
   3df28:	ldr	r2, [pc, #436]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3df2c:	umull	r2, r3, r2, r3
   3df30:	lsr	r3, r3, #5
   3df34:	str	r3, [fp, #-16]
   3df38:	ldr	r3, [fp, #-12]
   3df3c:	ldrb	r2, [r3]
   3df40:	ldr	r3, [fp, #-20]	; 0xffffffec
   3df44:	strb	r2, [r3]
   3df48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3df4c:	add	r3, r3, #1
   3df50:	ldr	r2, [fp, #-12]
   3df54:	ldrb	r2, [r2, #1]
   3df58:	strb	r2, [r3]
   3df5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3df60:	sub	r3, r3, #2
   3df64:	str	r3, [fp, #-20]	; 0xffffffec
   3df68:	ldr	r2, [fp, #-16]
   3df6c:	ldr	r3, [pc, #368]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3df70:	umull	r1, r3, r3, r2
   3df74:	lsr	r3, r3, #5
   3df78:	mov	r1, #100	; 0x64
   3df7c:	mul	r3, r1, r3
   3df80:	sub	r3, r2, r3
   3df84:	lsl	r3, r3, #1
   3df88:	ldr	r2, [pc, #368]	; 3e100 <flatcc_json_parser_struct_as_root@@Base+0x1324>
   3df8c:	add	r2, pc, r2
   3df90:	add	r3, r3, r2
   3df94:	str	r3, [fp, #-12]
   3df98:	ldr	r3, [fp, #-16]
   3df9c:	ldr	r2, [pc, #320]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dfa0:	umull	r2, r3, r2, r3
   3dfa4:	lsr	r3, r3, #5
   3dfa8:	str	r3, [fp, #-16]
   3dfac:	ldr	r3, [fp, #-12]
   3dfb0:	ldrb	r2, [r3]
   3dfb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dfb8:	strb	r2, [r3]
   3dfbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dfc0:	add	r3, r3, #1
   3dfc4:	ldr	r2, [fp, #-12]
   3dfc8:	ldrb	r2, [r2, #1]
   3dfcc:	strb	r2, [r3]
   3dfd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dfd4:	sub	r3, r3, #2
   3dfd8:	str	r3, [fp, #-20]	; 0xffffffec
   3dfdc:	ldr	r2, [fp, #-16]
   3dfe0:	ldr	r3, [pc, #252]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3dfe4:	umull	r1, r3, r3, r2
   3dfe8:	lsr	r3, r3, #5
   3dfec:	mov	r1, #100	; 0x64
   3dff0:	mul	r3, r1, r3
   3dff4:	sub	r3, r2, r3
   3dff8:	lsl	r3, r3, #1
   3dffc:	ldr	r2, [pc, #256]	; 3e104 <flatcc_json_parser_struct_as_root@@Base+0x1328>
   3e000:	add	r2, pc, r2
   3e004:	add	r3, r3, r2
   3e008:	str	r3, [fp, #-12]
   3e00c:	ldr	r3, [fp, #-16]
   3e010:	ldr	r2, [pc, #204]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3e014:	umull	r2, r3, r2, r3
   3e018:	lsr	r3, r3, #5
   3e01c:	str	r3, [fp, #-16]
   3e020:	ldr	r3, [fp, #-12]
   3e024:	ldrb	r2, [r3]
   3e028:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e02c:	strb	r2, [r3]
   3e030:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e034:	add	r3, r3, #1
   3e038:	ldr	r2, [fp, #-12]
   3e03c:	ldrb	r2, [r2, #1]
   3e040:	strb	r2, [r3]
   3e044:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e048:	sub	r3, r3, #2
   3e04c:	str	r3, [fp, #-20]	; 0xffffffec
   3e050:	ldr	r2, [fp, #-16]
   3e054:	ldr	r3, [pc, #136]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3e058:	umull	r1, r3, r3, r2
   3e05c:	lsr	r3, r3, #5
   3e060:	mov	r1, #100	; 0x64
   3e064:	mul	r3, r1, r3
   3e068:	sub	r3, r2, r3
   3e06c:	lsl	r3, r3, #1
   3e070:	ldr	r2, [pc, #144]	; 3e108 <flatcc_json_parser_struct_as_root@@Base+0x132c>
   3e074:	add	r2, pc, r2
   3e078:	add	r3, r3, r2
   3e07c:	str	r3, [fp, #-12]
   3e080:	ldr	r3, [fp, #-16]
   3e084:	ldr	r2, [pc, #88]	; 3e0e4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   3e088:	umull	r2, r3, r2, r3
   3e08c:	lsr	r3, r3, #5
   3e090:	str	r3, [fp, #-16]
   3e094:	ldr	r3, [fp, #-12]
   3e098:	ldrb	r2, [r3]
   3e09c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e0a0:	strb	r2, [r3]
   3e0a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e0a8:	add	r3, r3, #1
   3e0ac:	ldr	r2, [fp, #-12]
   3e0b0:	ldrb	r2, [r2, #1]
   3e0b4:	strb	r2, [r3]
   3e0b8:	ldr	r3, [fp, #-8]
   3e0bc:	mov	r0, r3
   3e0c0:	add	sp, fp, #0
   3e0c4:	pop	{fp}		; (ldr fp, [sp], #4)
   3e0c8:	bx	lr
   3e0cc:	andeq	r2, r0, pc, lsl #14
   3e0d0:	addseq	r9, r8, pc, ror r6
   3e0d4:	blcc	fe6f08d8 <__bss_end__@@Base+0xfe68e42c>
   3e0d8:	ldrbeq	lr, [r5, #255]!	; 0xff
   3e0dc:	andeq	r4, pc, pc, lsr r2	; <UNPREDICTABLE>
   3e0e0:	muleq	r1, pc, r6	; <UNPREDICTABLE>
   3e0e4:	mvnpl	r8, pc, lsl r5
   3e0e8:	strdeq	r2, [r1], -r8
   3e0ec:	andeq	r2, r1, r4, lsl #29
   3e0f0:	andeq	r2, r1, r0, lsl lr
   3e0f4:	muleq	r1, ip, sp
   3e0f8:	ldrdeq	r2, [r1], -r0
   3e0fc:	andeq	r2, r1, ip, asr ip
   3e100:	andeq	r2, r1, r8, ror #23
   3e104:	andeq	r2, r1, r4, ror fp
   3e108:	andeq	r2, r1, r0, lsl #22
   3e10c:	push	{fp, lr}
   3e110:	add	fp, sp, #4
   3e114:	sub	sp, sp, #40	; 0x28
   3e118:	strd	r0, [fp, #-36]	; 0xffffffdc
   3e11c:	str	r2, [fp, #-40]	; 0xffffffd8
   3e120:	mov	r3, #0
   3e124:	str	r3, [fp, #-8]
   3e128:	add	r3, pc, #920	; 0x398
   3e12c:	ldrd	r2, [r3]
   3e130:	strd	r2, [fp, #-20]	; 0xffffffec
   3e134:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e138:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3e13c:	cmp	r1, r3
   3e140:	cmpeq	r0, r2
   3e144:	bcs	3e160 <flatcc_json_parser_struct_as_root@@Base+0x1384>
   3e148:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e14c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3e150:	mov	r0, r3
   3e154:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   3e158:	mov	r3, r0
   3e15c:	b	3ec88 <flatcc_json_parser_struct_as_root@@Base+0x1eac>
   3e160:	ldr	r3, [fp, #-16]
   3e164:	ldr	r2, [pc, #868]	; 3e4d0 <flatcc_json_parser_struct_as_root@@Base+0x16f4>
   3e168:	mul	r2, r2, r3
   3e16c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e170:	mov	r1, #0
   3e174:	mul	r3, r1, r3
   3e178:	add	r1, r2, r3
   3e17c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e180:	ldr	r2, [pc, #840]	; 3e4d0 <flatcc_json_parser_struct_as_root@@Base+0x16f4>
   3e184:	umull	r2, r3, r3, r2
   3e188:	add	r1, r1, r3
   3e18c:	mov	r3, r1
   3e190:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e194:	cmp	r3, r1
   3e198:	cmpeq	r2, r0
   3e19c:	bhi	3e374 <flatcc_json_parser_struct_as_root@@Base+0x1598>
   3e1a0:	ldr	r3, [fp, #-16]
   3e1a4:	ldr	r2, [pc, #808]	; 3e4d4 <flatcc_json_parser_struct_as_root@@Base+0x16f8>
   3e1a8:	mul	r2, r2, r3
   3e1ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e1b0:	mov	r1, #0
   3e1b4:	mul	r3, r1, r3
   3e1b8:	add	r1, r2, r3
   3e1bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e1c0:	ldr	r2, [pc, #780]	; 3e4d4 <flatcc_json_parser_struct_as_root@@Base+0x16f8>
   3e1c4:	umull	r2, r3, r3, r2
   3e1c8:	add	r1, r1, r3
   3e1cc:	mov	r3, r1
   3e1d0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e1d4:	cmp	r3, r1
   3e1d8:	cmpeq	r2, r0
   3e1dc:	bhi	3e2d0 <flatcc_json_parser_struct_as_root@@Base+0x14f4>
   3e1e0:	ldr	r3, [fp, #-16]
   3e1e4:	ldr	r2, [pc, #748]	; 3e4d8 <flatcc_json_parser_struct_as_root@@Base+0x16fc>
   3e1e8:	mul	r2, r2, r3
   3e1ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e1f0:	mov	r1, #0
   3e1f4:	mul	r3, r1, r3
   3e1f8:	add	r1, r2, r3
   3e1fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e200:	ldr	r2, [pc, #720]	; 3e4d8 <flatcc_json_parser_struct_as_root@@Base+0x16fc>
   3e204:	umull	r2, r3, r3, r2
   3e208:	add	r1, r1, r3
   3e20c:	mov	r3, r1
   3e210:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e214:	cmp	r3, r1
   3e218:	cmpeq	r2, r0
   3e21c:	bhi	3e278 <flatcc_json_parser_struct_as_root@@Base+0x149c>
   3e220:	ldr	r3, [fp, #-16]
   3e224:	ldr	r2, [pc, #688]	; 3e4dc <flatcc_json_parser_struct_as_root@@Base+0x1700>
   3e228:	mul	r2, r2, r3
   3e22c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e230:	mov	r1, #2
   3e234:	mul	r3, r1, r3
   3e238:	add	r1, r2, r3
   3e23c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e240:	ldr	r2, [pc, #660]	; 3e4dc <flatcc_json_parser_struct_as_root@@Base+0x1700>
   3e244:	umull	r2, r3, r3, r2
   3e248:	add	r1, r1, r3
   3e24c:	mov	r3, r1
   3e250:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e254:	cmp	r3, r1
   3e258:	cmpeq	r2, r0
   3e25c:	bhi	3e26c <flatcc_json_parser_struct_as_root@@Base+0x1490>
   3e260:	mov	r3, #20
   3e264:	str	r3, [fp, #-8]
   3e268:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e26c:	mov	r3, #19
   3e270:	str	r3, [fp, #-8]
   3e274:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e278:	ldr	r3, [fp, #-16]
   3e27c:	ldr	r2, [pc, #604]	; 3e4e0 <flatcc_json_parser_struct_as_root@@Base+0x1704>
   3e280:	mul	r2, r2, r3
   3e284:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e288:	mov	r1, #0
   3e28c:	mul	r3, r1, r3
   3e290:	add	r1, r2, r3
   3e294:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e298:	ldr	r2, [pc, #576]	; 3e4e0 <flatcc_json_parser_struct_as_root@@Base+0x1704>
   3e29c:	umull	r2, r3, r3, r2
   3e2a0:	add	r1, r1, r3
   3e2a4:	mov	r3, r1
   3e2a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e2ac:	cmp	r3, r1
   3e2b0:	cmpeq	r2, r0
   3e2b4:	bhi	3e2c4 <flatcc_json_parser_struct_as_root@@Base+0x14e8>
   3e2b8:	mov	r3, #18
   3e2bc:	str	r3, [fp, #-8]
   3e2c0:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e2c4:	mov	r3, #17
   3e2c8:	str	r3, [fp, #-8]
   3e2cc:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e2d0:	ldr	r3, [fp, #-16]
   3e2d4:	ldr	r2, [pc, #520]	; 3e4e4 <flatcc_json_parser_struct_as_root@@Base+0x1708>
   3e2d8:	mul	r2, r2, r3
   3e2dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e2e0:	mov	r1, #0
   3e2e4:	mul	r3, r1, r3
   3e2e8:	add	r1, r2, r3
   3e2ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e2f0:	ldr	r2, [pc, #492]	; 3e4e4 <flatcc_json_parser_struct_as_root@@Base+0x1708>
   3e2f4:	umull	r2, r3, r3, r2
   3e2f8:	add	r1, r1, r3
   3e2fc:	mov	r3, r1
   3e300:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e304:	cmp	r3, r1
   3e308:	cmpeq	r2, r0
   3e30c:	bhi	3e31c <flatcc_json_parser_struct_as_root@@Base+0x1540>
   3e310:	mov	r3, #16
   3e314:	str	r3, [fp, #-8]
   3e318:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e31c:	ldr	r3, [fp, #-16]
   3e320:	ldr	r2, [pc, #448]	; 3e4e8 <flatcc_json_parser_struct_as_root@@Base+0x170c>
   3e324:	mul	r2, r2, r3
   3e328:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e32c:	mov	r1, #0
   3e330:	mul	r3, r1, r3
   3e334:	add	r1, r2, r3
   3e338:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e33c:	ldr	r2, [pc, #420]	; 3e4e8 <flatcc_json_parser_struct_as_root@@Base+0x170c>
   3e340:	umull	r2, r3, r3, r2
   3e344:	add	r1, r1, r3
   3e348:	mov	r3, r1
   3e34c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e350:	cmp	r3, r1
   3e354:	cmpeq	r2, r0
   3e358:	bhi	3e368 <flatcc_json_parser_struct_as_root@@Base+0x158c>
   3e35c:	mov	r3, #15
   3e360:	str	r3, [fp, #-8]
   3e364:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e368:	mov	r3, #14
   3e36c:	str	r3, [fp, #-8]
   3e370:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e374:	ldr	r3, [fp, #-16]
   3e378:	mov	r2, #100	; 0x64
   3e37c:	mul	r2, r2, r3
   3e380:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e384:	mov	r1, #0
   3e388:	mul	r3, r1, r3
   3e38c:	add	r1, r2, r3
   3e390:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e394:	mov	r2, #100	; 0x64
   3e398:	umull	r2, r3, r3, r2
   3e39c:	add	r1, r1, r3
   3e3a0:	mov	r3, r1
   3e3a4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e3a8:	cmp	r3, r1
   3e3ac:	cmpeq	r2, r0
   3e3b0:	bhi	3e40c <flatcc_json_parser_struct_as_root@@Base+0x1630>
   3e3b4:	ldr	r3, [fp, #-16]
   3e3b8:	mov	r2, #1000	; 0x3e8
   3e3bc:	mul	r2, r2, r3
   3e3c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e3c4:	mov	r1, #0
   3e3c8:	mul	r3, r1, r3
   3e3cc:	add	r1, r2, r3
   3e3d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e3d4:	mov	r2, #1000	; 0x3e8
   3e3d8:	umull	r2, r3, r3, r2
   3e3dc:	add	r1, r1, r3
   3e3e0:	mov	r3, r1
   3e3e4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e3e8:	cmp	r3, r1
   3e3ec:	cmpeq	r2, r0
   3e3f0:	bhi	3e400 <flatcc_json_parser_struct_as_root@@Base+0x1624>
   3e3f4:	mov	r3, #13
   3e3f8:	str	r3, [fp, #-8]
   3e3fc:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e400:	mov	r3, #12
   3e404:	str	r3, [fp, #-8]
   3e408:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e40c:	ldr	r3, [fp, #-16]
   3e410:	mov	r2, #10
   3e414:	mul	r2, r2, r3
   3e418:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e41c:	mov	r1, #0
   3e420:	mul	r3, r1, r3
   3e424:	add	r1, r2, r3
   3e428:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e42c:	mov	r2, #10
   3e430:	umull	r2, r3, r3, r2
   3e434:	add	r1, r1, r3
   3e438:	mov	r3, r1
   3e43c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e440:	cmp	r3, r1
   3e444:	cmpeq	r2, r0
   3e448:	bhi	3e458 <flatcc_json_parser_struct_as_root@@Base+0x167c>
   3e44c:	mov	r3, #11
   3e450:	str	r3, [fp, #-8]
   3e454:	b	3e460 <flatcc_json_parser_struct_as_root@@Base+0x1684>
   3e458:	mov	r3, #10
   3e45c:	str	r3, [fp, #-8]
   3e460:	ldr	r3, [fp, #-8]
   3e464:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3e468:	add	r3, r2, r3
   3e46c:	str	r3, [fp, #-40]	; 0xffffffd8
   3e470:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e474:	mov	r2, #0
   3e478:	strb	r2, [r3]
   3e47c:	ldr	r3, [fp, #-8]
   3e480:	and	r3, r3, #1
   3e484:	cmp	r3, #0
   3e488:	beq	3e7bc <flatcc_json_parser_struct_as_root@@Base+0x19e0>
   3e48c:	ldr	r3, [fp, #-8]
   3e490:	sub	r3, r3, #11
   3e494:	cmp	r3, #8
   3e498:	addls	pc, pc, r3, lsl #2
   3e49c:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e4a0:	b	3e6f8 <flatcc_json_parser_struct_as_root@@Base+0x191c>
   3e4a4:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e4a8:	b	3e684 <flatcc_json_parser_struct_as_root@@Base+0x18a8>
   3e4ac:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e4b0:	b	3e610 <flatcc_json_parser_struct_as_root@@Base+0x1834>
   3e4b4:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e4b8:	b	3e59c <flatcc_json_parser_struct_as_root@@Base+0x17c0>
   3e4bc:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e4c0:	b	3e528 <flatcc_json_parser_struct_as_root@@Base+0x174c>
   3e4c4:	nop			; (mov r0, r0)
   3e4c8:	blcc	fe6f0cd0 <__bss_end__@@Base+0xfe68e824>
   3e4cc:	andeq	r0, r0, r0
   3e4d0:	andeq	r2, r0, r0, lsl r7
   3e4d4:	addseq	r9, r8, r0, lsl #13
   3e4d8:	blcc	fe6f0ce0 <__bss_end__@@Base+0xfe68e834>
   3e4dc:	strpl	lr, [fp], #-1024	; 0xfffffc00
   3e4e0:	ldrbeq	lr, [r5, #256]!	; 0x100
   3e4e4:	andeq	r4, pc, r0, asr #4
   3e4e8:	andeq	r8, r1, r0, lsr #13
   3e4ec:	andeq	r2, r1, r4, lsr #12
   3e4f0:			; <UNDEFINED> instruction: 0x000125b0
   3e4f4:	andeq	r2, r1, ip, lsr r5
   3e4f8:	andeq	r2, r1, r8, asr #9
   3e4fc:	andeq	r2, r1, r4, asr r4
   3e500:	andeq	r2, r1, r0, asr r3
   3e504:	ldrdeq	r2, [r1], -ip
   3e508:	andeq	r2, r1, r8, ror #4
   3e50c:	strdeq	r2, [r1], -r4
   3e510:	andeq	r2, r1, r0, lsl #3
   3e514:	andeq	r2, r1, ip, lsl #2
   3e518:	muleq	r1, r8, r0
   3e51c:	andeq	r2, r1, r4, lsr #32
   3e520:			; <UNDEFINED> instruction: 0x00011fb0
   3e524:	andeq	r1, r1, ip, lsr pc
   3e528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e52c:	sub	r3, r3, #2
   3e530:	str	r3, [fp, #-40]	; 0xffffffd8
   3e534:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e538:	mov	r2, #100	; 0x64
   3e53c:	mov	r3, #0
   3e540:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e544:	mov	r3, r2
   3e548:	lsl	r3, r3, #1
   3e54c:	ldr	r2, [pc, #-104]	; 3e4ec <flatcc_json_parser_struct_as_root@@Base+0x1710>
   3e550:	add	r2, pc, r2
   3e554:	add	r3, r3, r2
   3e558:	str	r3, [fp, #-24]	; 0xffffffe8
   3e55c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e560:	mov	r2, #100	; 0x64
   3e564:	mov	r3, #0
   3e568:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e56c:	mov	r2, r0
   3e570:	mov	r3, r1
   3e574:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e57c:	ldrb	r2, [r3]
   3e580:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e584:	strb	r2, [r3]
   3e588:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e58c:	add	r3, r3, #1
   3e590:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e594:	ldrb	r2, [r2, #1]
   3e598:	strb	r2, [r3]
   3e59c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e5a0:	sub	r3, r3, #2
   3e5a4:	str	r3, [fp, #-40]	; 0xffffffd8
   3e5a8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e5ac:	mov	r2, #100	; 0x64
   3e5b0:	mov	r3, #0
   3e5b4:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e5b8:	mov	r3, r2
   3e5bc:	lsl	r3, r3, #1
   3e5c0:	ldr	r2, [pc, #-216]	; 3e4f0 <flatcc_json_parser_struct_as_root@@Base+0x1714>
   3e5c4:	add	r2, pc, r2
   3e5c8:	add	r3, r3, r2
   3e5cc:	str	r3, [fp, #-24]	; 0xffffffe8
   3e5d0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e5d4:	mov	r2, #100	; 0x64
   3e5d8:	mov	r3, #0
   3e5dc:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e5e0:	mov	r2, r0
   3e5e4:	mov	r3, r1
   3e5e8:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e5ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e5f0:	ldrb	r2, [r3]
   3e5f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e5f8:	strb	r2, [r3]
   3e5fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e600:	add	r3, r3, #1
   3e604:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e608:	ldrb	r2, [r2, #1]
   3e60c:	strb	r2, [r3]
   3e610:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e614:	sub	r3, r3, #2
   3e618:	str	r3, [fp, #-40]	; 0xffffffd8
   3e61c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e620:	mov	r2, #100	; 0x64
   3e624:	mov	r3, #0
   3e628:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e62c:	mov	r3, r2
   3e630:	lsl	r3, r3, #1
   3e634:	ldr	r2, [pc, #-328]	; 3e4f4 <flatcc_json_parser_struct_as_root@@Base+0x1718>
   3e638:	add	r2, pc, r2
   3e63c:	add	r3, r3, r2
   3e640:	str	r3, [fp, #-24]	; 0xffffffe8
   3e644:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e648:	mov	r2, #100	; 0x64
   3e64c:	mov	r3, #0
   3e650:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e654:	mov	r2, r0
   3e658:	mov	r3, r1
   3e65c:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e664:	ldrb	r2, [r3]
   3e668:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e66c:	strb	r2, [r3]
   3e670:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e674:	add	r3, r3, #1
   3e678:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e67c:	ldrb	r2, [r2, #1]
   3e680:	strb	r2, [r3]
   3e684:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e688:	sub	r3, r3, #2
   3e68c:	str	r3, [fp, #-40]	; 0xffffffd8
   3e690:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e694:	mov	r2, #100	; 0x64
   3e698:	mov	r3, #0
   3e69c:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e6a0:	mov	r3, r2
   3e6a4:	lsl	r3, r3, #1
   3e6a8:	ldr	r2, [pc, #-440]	; 3e4f8 <flatcc_json_parser_struct_as_root@@Base+0x171c>
   3e6ac:	add	r2, pc, r2
   3e6b0:	add	r3, r3, r2
   3e6b4:	str	r3, [fp, #-24]	; 0xffffffe8
   3e6b8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e6bc:	mov	r2, #100	; 0x64
   3e6c0:	mov	r3, #0
   3e6c4:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e6c8:	mov	r2, r0
   3e6cc:	mov	r3, r1
   3e6d0:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e6d8:	ldrb	r2, [r3]
   3e6dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e6e0:	strb	r2, [r3]
   3e6e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e6e8:	add	r3, r3, #1
   3e6ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e6f0:	ldrb	r2, [r2, #1]
   3e6f4:	strb	r2, [r3]
   3e6f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e6fc:	sub	r3, r3, #2
   3e700:	str	r3, [fp, #-40]	; 0xffffffd8
   3e704:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e708:	mov	r2, #100	; 0x64
   3e70c:	mov	r3, #0
   3e710:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e714:	mov	r3, r2
   3e718:	lsl	r3, r3, #1
   3e71c:	ldr	r2, [pc, #-552]	; 3e4fc <flatcc_json_parser_struct_as_root@@Base+0x1720>
   3e720:	add	r2, pc, r2
   3e724:	add	r3, r3, r2
   3e728:	str	r3, [fp, #-24]	; 0xffffffe8
   3e72c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e730:	mov	r2, #100	; 0x64
   3e734:	mov	r3, #0
   3e738:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e73c:	mov	r2, r0
   3e740:	mov	r3, r1
   3e744:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e74c:	ldrb	r2, [r3]
   3e750:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e754:	strb	r2, [r3]
   3e758:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e75c:	add	r3, r3, #1
   3e760:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e764:	ldrb	r2, [r2, #1]
   3e768:	strb	r2, [r3]
   3e76c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e770:	sub	r3, r3, #1
   3e774:	str	r3, [fp, #-40]	; 0xffffffd8
   3e778:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e77c:	mov	r2, #10
   3e780:	mov	r3, #0
   3e784:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e788:	uxtb	r3, r2
   3e78c:	add	r3, r3, #48	; 0x30
   3e790:	uxtb	r2, r3
   3e794:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e798:	strb	r2, [r3]
   3e79c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e7a0:	mov	r2, #10
   3e7a4:	mov	r3, #0
   3e7a8:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e7ac:	mov	r2, r0
   3e7b0:	mov	r3, r1
   3e7b4:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e7b8:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e7bc:	ldr	r3, [fp, #-8]
   3e7c0:	sub	r3, r3, #10
   3e7c4:	cmp	r3, #10
   3e7c8:	addls	pc, pc, r3, lsl #2
   3e7cc:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e7d0:	b	3ea40 <flatcc_json_parser_struct_as_root@@Base+0x1c64>
   3e7d4:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e7d8:	b	3e9cc <flatcc_json_parser_struct_as_root@@Base+0x1bf0>
   3e7dc:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e7e0:	b	3e958 <flatcc_json_parser_struct_as_root@@Base+0x1b7c>
   3e7e4:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e7e8:	b	3e8e4 <flatcc_json_parser_struct_as_root@@Base+0x1b08>
   3e7ec:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e7f0:	b	3e870 <flatcc_json_parser_struct_as_root@@Base+0x1a94>
   3e7f4:	b	3eab4 <flatcc_json_parser_struct_as_root@@Base+0x1cd8>
   3e7f8:	b	3e7fc <flatcc_json_parser_struct_as_root@@Base+0x1a20>
   3e7fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e800:	sub	r3, r3, #2
   3e804:	str	r3, [fp, #-40]	; 0xffffffd8
   3e808:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e80c:	mov	r2, #100	; 0x64
   3e810:	mov	r3, #0
   3e814:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e818:	mov	r3, r2
   3e81c:	lsl	r3, r3, #1
   3e820:	ldr	r2, [pc, #-808]	; 3e500 <flatcc_json_parser_struct_as_root@@Base+0x1724>
   3e824:	add	r2, pc, r2
   3e828:	add	r3, r3, r2
   3e82c:	str	r3, [fp, #-24]	; 0xffffffe8
   3e830:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e834:	mov	r2, #100	; 0x64
   3e838:	mov	r3, #0
   3e83c:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e840:	mov	r2, r0
   3e844:	mov	r3, r1
   3e848:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e84c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e850:	ldrb	r2, [r3]
   3e854:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e858:	strb	r2, [r3]
   3e85c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e860:	add	r3, r3, #1
   3e864:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e868:	ldrb	r2, [r2, #1]
   3e86c:	strb	r2, [r3]
   3e870:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e874:	sub	r3, r3, #2
   3e878:	str	r3, [fp, #-40]	; 0xffffffd8
   3e87c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e880:	mov	r2, #100	; 0x64
   3e884:	mov	r3, #0
   3e888:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e88c:	mov	r3, r2
   3e890:	lsl	r3, r3, #1
   3e894:	ldr	r2, [pc, #-920]	; 3e504 <flatcc_json_parser_struct_as_root@@Base+0x1728>
   3e898:	add	r2, pc, r2
   3e89c:	add	r3, r3, r2
   3e8a0:	str	r3, [fp, #-24]	; 0xffffffe8
   3e8a4:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e8a8:	mov	r2, #100	; 0x64
   3e8ac:	mov	r3, #0
   3e8b0:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e8b4:	mov	r2, r0
   3e8b8:	mov	r3, r1
   3e8bc:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e8c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e8c4:	ldrb	r2, [r3]
   3e8c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e8cc:	strb	r2, [r3]
   3e8d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e8d4:	add	r3, r3, #1
   3e8d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e8dc:	ldrb	r2, [r2, #1]
   3e8e0:	strb	r2, [r3]
   3e8e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e8e8:	sub	r3, r3, #2
   3e8ec:	str	r3, [fp, #-40]	; 0xffffffd8
   3e8f0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e8f4:	mov	r2, #100	; 0x64
   3e8f8:	mov	r3, #0
   3e8fc:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e900:	mov	r3, r2
   3e904:	lsl	r3, r3, #1
   3e908:	ldr	r2, [pc, #-1032]	; 3e508 <flatcc_json_parser_struct_as_root@@Base+0x172c>
   3e90c:	add	r2, pc, r2
   3e910:	add	r3, r3, r2
   3e914:	str	r3, [fp, #-24]	; 0xffffffe8
   3e918:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e91c:	mov	r2, #100	; 0x64
   3e920:	mov	r3, #0
   3e924:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e928:	mov	r2, r0
   3e92c:	mov	r3, r1
   3e930:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e934:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e938:	ldrb	r2, [r3]
   3e93c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e940:	strb	r2, [r3]
   3e944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e948:	add	r3, r3, #1
   3e94c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e950:	ldrb	r2, [r2, #1]
   3e954:	strb	r2, [r3]
   3e958:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e95c:	sub	r3, r3, #2
   3e960:	str	r3, [fp, #-40]	; 0xffffffd8
   3e964:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e968:	mov	r2, #100	; 0x64
   3e96c:	mov	r3, #0
   3e970:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e974:	mov	r3, r2
   3e978:	lsl	r3, r3, #1
   3e97c:	ldr	r2, [pc, #-1144]	; 3e50c <flatcc_json_parser_struct_as_root@@Base+0x1730>
   3e980:	add	r2, pc, r2
   3e984:	add	r3, r3, r2
   3e988:	str	r3, [fp, #-24]	; 0xffffffe8
   3e98c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e990:	mov	r2, #100	; 0x64
   3e994:	mov	r3, #0
   3e998:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e99c:	mov	r2, r0
   3e9a0:	mov	r3, r1
   3e9a4:	strd	r2, [fp, #-36]	; 0xffffffdc
   3e9a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e9ac:	ldrb	r2, [r3]
   3e9b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e9b4:	strb	r2, [r3]
   3e9b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e9bc:	add	r3, r3, #1
   3e9c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3e9c4:	ldrb	r2, [r2, #1]
   3e9c8:	strb	r2, [r3]
   3e9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3e9d0:	sub	r3, r3, #2
   3e9d4:	str	r3, [fp, #-40]	; 0xffffffd8
   3e9d8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3e9dc:	mov	r2, #100	; 0x64
   3e9e0:	mov	r3, #0
   3e9e4:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3e9e8:	mov	r3, r2
   3e9ec:	lsl	r3, r3, #1
   3e9f0:	ldr	r2, [pc, #-1256]	; 3e510 <flatcc_json_parser_struct_as_root@@Base+0x1734>
   3e9f4:	add	r2, pc, r2
   3e9f8:	add	r3, r3, r2
   3e9fc:	str	r3, [fp, #-24]	; 0xffffffe8
   3ea00:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ea04:	mov	r2, #100	; 0x64
   3ea08:	mov	r3, #0
   3ea0c:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ea10:	mov	r2, r0
   3ea14:	mov	r3, r1
   3ea18:	strd	r2, [fp, #-36]	; 0xffffffdc
   3ea1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ea20:	ldrb	r2, [r3]
   3ea24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ea28:	strb	r2, [r3]
   3ea2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ea30:	add	r3, r3, #1
   3ea34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ea38:	ldrb	r2, [r2, #1]
   3ea3c:	strb	r2, [r3]
   3ea40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ea44:	sub	r3, r3, #2
   3ea48:	str	r3, [fp, #-40]	; 0xffffffd8
   3ea4c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ea50:	mov	r2, #100	; 0x64
   3ea54:	mov	r3, #0
   3ea58:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ea5c:	mov	r3, r2
   3ea60:	lsl	r3, r3, #1
   3ea64:	ldr	r2, [pc, #-1368]	; 3e514 <flatcc_json_parser_struct_as_root@@Base+0x1738>
   3ea68:	add	r2, pc, r2
   3ea6c:	add	r3, r3, r2
   3ea70:	str	r3, [fp, #-24]	; 0xffffffe8
   3ea74:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ea78:	mov	r2, #100	; 0x64
   3ea7c:	mov	r3, #0
   3ea80:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ea84:	mov	r2, r0
   3ea88:	mov	r3, r1
   3ea8c:	strd	r2, [fp, #-36]	; 0xffffffdc
   3ea90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ea94:	ldrb	r2, [r3]
   3ea98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ea9c:	strb	r2, [r3]
   3eaa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eaa4:	add	r3, r3, #1
   3eaa8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3eaac:	ldrb	r2, [r2, #1]
   3eab0:	strb	r2, [r3]
   3eab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eab8:	sub	r3, r3, #2
   3eabc:	str	r3, [fp, #-40]	; 0xffffffd8
   3eac0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3eac4:	mov	r2, #100	; 0x64
   3eac8:	mov	r3, #0
   3eacc:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ead0:	mov	r3, r2
   3ead4:	lsl	r3, r3, #1
   3ead8:	ldr	r2, [pc, #-1480]	; 3e518 <flatcc_json_parser_struct_as_root@@Base+0x173c>
   3eadc:	add	r2, pc, r2
   3eae0:	add	r3, r3, r2
   3eae4:	str	r3, [fp, #-24]	; 0xffffffe8
   3eae8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3eaec:	mov	r2, #100	; 0x64
   3eaf0:	mov	r3, #0
   3eaf4:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3eaf8:	mov	r2, r0
   3eafc:	mov	r3, r1
   3eb00:	strd	r2, [fp, #-36]	; 0xffffffdc
   3eb04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3eb08:	ldrb	r2, [r3]
   3eb0c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eb10:	strb	r2, [r3]
   3eb14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eb18:	add	r3, r3, #1
   3eb1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3eb20:	ldrb	r2, [r2, #1]
   3eb24:	strb	r2, [r3]
   3eb28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eb2c:	sub	r3, r3, #2
   3eb30:	str	r3, [fp, #-40]	; 0xffffffd8
   3eb34:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3eb38:	mov	r2, #100	; 0x64
   3eb3c:	mov	r3, #0
   3eb40:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3eb44:	mov	r3, r2
   3eb48:	lsl	r3, r3, #1
   3eb4c:	ldr	r2, [pc, #-1592]	; 3e51c <flatcc_json_parser_struct_as_root@@Base+0x1740>
   3eb50:	add	r2, pc, r2
   3eb54:	add	r3, r3, r2
   3eb58:	str	r3, [fp, #-24]	; 0xffffffe8
   3eb5c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3eb60:	mov	r2, #100	; 0x64
   3eb64:	mov	r3, #0
   3eb68:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3eb6c:	mov	r2, r0
   3eb70:	mov	r3, r1
   3eb74:	strd	r2, [fp, #-36]	; 0xffffffdc
   3eb78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3eb7c:	ldrb	r2, [r3]
   3eb80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eb84:	strb	r2, [r3]
   3eb88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eb8c:	add	r3, r3, #1
   3eb90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3eb94:	ldrb	r2, [r2, #1]
   3eb98:	strb	r2, [r3]
   3eb9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3eba0:	sub	r3, r3, #2
   3eba4:	str	r3, [fp, #-40]	; 0xffffffd8
   3eba8:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ebac:	mov	r2, #100	; 0x64
   3ebb0:	mov	r3, #0
   3ebb4:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ebb8:	mov	r3, r2
   3ebbc:	lsl	r3, r3, #1
   3ebc0:	ldr	r2, [pc, #-1704]	; 3e520 <flatcc_json_parser_struct_as_root@@Base+0x1744>
   3ebc4:	add	r2, pc, r2
   3ebc8:	add	r3, r3, r2
   3ebcc:	str	r3, [fp, #-24]	; 0xffffffe8
   3ebd0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ebd4:	mov	r2, #100	; 0x64
   3ebd8:	mov	r3, #0
   3ebdc:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ebe0:	mov	r2, r0
   3ebe4:	mov	r3, r1
   3ebe8:	strd	r2, [fp, #-36]	; 0xffffffdc
   3ebec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ebf0:	ldrb	r2, [r3]
   3ebf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ebf8:	strb	r2, [r3]
   3ebfc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ec00:	add	r3, r3, #1
   3ec04:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ec08:	ldrb	r2, [r2, #1]
   3ec0c:	strb	r2, [r3]
   3ec10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ec14:	sub	r3, r3, #2
   3ec18:	str	r3, [fp, #-40]	; 0xffffffd8
   3ec1c:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ec20:	mov	r2, #100	; 0x64
   3ec24:	mov	r3, #0
   3ec28:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ec2c:	mov	r3, r2
   3ec30:	lsl	r3, r3, #1
   3ec34:	ldr	r2, [pc, #-1816]	; 3e524 <flatcc_json_parser_struct_as_root@@Base+0x1748>
   3ec38:	add	r2, pc, r2
   3ec3c:	add	r3, r3, r2
   3ec40:	str	r3, [fp, #-24]	; 0xffffffe8
   3ec44:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3ec48:	mov	r2, #100	; 0x64
   3ec4c:	mov	r3, #0
   3ec50:	bl	4b774 <flatcc_json_printer_clear@@Base+0xab0>
   3ec54:	mov	r2, r0
   3ec58:	mov	r3, r1
   3ec5c:	strd	r2, [fp, #-36]	; 0xffffffdc
   3ec60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ec64:	ldrb	r2, [r3]
   3ec68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ec6c:	strb	r2, [r3]
   3ec70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ec74:	add	r3, r3, #1
   3ec78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ec7c:	ldrb	r2, [r2, #1]
   3ec80:	strb	r2, [r3]
   3ec84:	ldr	r3, [fp, #-8]
   3ec88:	mov	r0, r3
   3ec8c:	sub	sp, fp, #4
   3ec90:	pop	{fp, pc}
   3ec94:	push	{fp, lr}
   3ec98:	add	fp, sp, #4
   3ec9c:	sub	sp, sp, #16
   3eca0:	mov	r3, r0
   3eca4:	str	r1, [fp, #-20]	; 0xffffffec
   3eca8:	strb	r3, [fp, #-13]
   3ecac:	ldrb	r3, [fp, #-13]
   3ecb0:	lsr	r3, r3, #7
   3ecb4:	uxtb	r3, r3
   3ecb8:	str	r3, [fp, #-8]
   3ecbc:	ldr	r3, [fp, #-8]
   3ecc0:	cmp	r3, #0
   3ecc4:	beq	3ecec <flatcc_json_parser_struct_as_root@@Base+0x1f10>
   3ecc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3eccc:	add	r2, r3, #1
   3ecd0:	str	r2, [fp, #-20]	; 0xffffffec
   3ecd4:	mov	r2, #45	; 0x2d
   3ecd8:	strb	r2, [r3]
   3ecdc:	ldrb	r3, [fp, #-13]
   3ece0:	rsb	r3, r3, #0
   3ece4:	uxtb	r3, r3
   3ece8:	strb	r3, [fp, #-13]
   3ecec:	ldrb	r3, [fp, #-13]
   3ecf0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ecf4:	mov	r0, r3
   3ecf8:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   3ecfc:	mov	r2, r0
   3ed00:	ldr	r3, [fp, #-8]
   3ed04:	add	r3, r2, r3
   3ed08:	mov	r0, r3
   3ed0c:	sub	sp, fp, #4
   3ed10:	pop	{fp, pc}
   3ed14:	push	{fp, lr}
   3ed18:	add	fp, sp, #4
   3ed1c:	sub	sp, sp, #16
   3ed20:	mov	r3, r0
   3ed24:	str	r1, [fp, #-20]	; 0xffffffec
   3ed28:	strh	r3, [fp, #-14]
   3ed2c:	ldrh	r3, [fp, #-14]
   3ed30:	lsr	r3, r3, #15
   3ed34:	uxtb	r3, r3
   3ed38:	str	r3, [fp, #-8]
   3ed3c:	ldr	r3, [fp, #-8]
   3ed40:	cmp	r3, #0
   3ed44:	beq	3ed6c <flatcc_json_parser_struct_as_root@@Base+0x1f90>
   3ed48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ed4c:	add	r2, r3, #1
   3ed50:	str	r2, [fp, #-20]	; 0xffffffec
   3ed54:	mov	r2, #45	; 0x2d
   3ed58:	strb	r2, [r3]
   3ed5c:	ldrh	r3, [fp, #-14]
   3ed60:	rsb	r3, r3, #0
   3ed64:	uxth	r3, r3
   3ed68:	strh	r3, [fp, #-14]
   3ed6c:	ldrh	r3, [fp, #-14]
   3ed70:	ldr	r1, [fp, #-20]	; 0xffffffec
   3ed74:	mov	r0, r3
   3ed78:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   3ed7c:	mov	r2, r0
   3ed80:	ldr	r3, [fp, #-8]
   3ed84:	add	r3, r2, r3
   3ed88:	mov	r0, r3
   3ed8c:	sub	sp, fp, #4
   3ed90:	pop	{fp, pc}
   3ed94:	push	{fp, lr}
   3ed98:	add	fp, sp, #4
   3ed9c:	sub	sp, sp, #16
   3eda0:	str	r0, [fp, #-16]
   3eda4:	str	r1, [fp, #-20]	; 0xffffffec
   3eda8:	ldr	r3, [fp, #-16]
   3edac:	lsr	r3, r3, #31
   3edb0:	uxtb	r3, r3
   3edb4:	str	r3, [fp, #-8]
   3edb8:	ldr	r3, [fp, #-8]
   3edbc:	cmp	r3, #0
   3edc0:	beq	3ede4 <flatcc_json_parser_struct_as_root@@Base+0x2008>
   3edc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3edc8:	add	r2, r3, #1
   3edcc:	str	r2, [fp, #-20]	; 0xffffffec
   3edd0:	mov	r2, #45	; 0x2d
   3edd4:	strb	r2, [r3]
   3edd8:	ldr	r3, [fp, #-16]
   3eddc:	rsb	r3, r3, #0
   3ede0:	str	r3, [fp, #-16]
   3ede4:	ldr	r3, [fp, #-16]
   3ede8:	ldr	r1, [fp, #-20]	; 0xffffffec
   3edec:	mov	r0, r3
   3edf0:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   3edf4:	mov	r2, r0
   3edf8:	ldr	r3, [fp, #-8]
   3edfc:	add	r3, r2, r3
   3ee00:	mov	r0, r3
   3ee04:	sub	sp, fp, #4
   3ee08:	pop	{fp, pc}
   3ee0c:	push	{fp, lr}
   3ee10:	add	fp, sp, #4
   3ee14:	sub	sp, sp, #24
   3ee18:	strd	r0, [fp, #-20]	; 0xffffffec
   3ee1c:	str	r2, [fp, #-24]	; 0xffffffe8
   3ee20:	ldr	r3, [fp, #-16]
   3ee24:	lsr	r3, r3, #31
   3ee28:	uxtb	r3, r3
   3ee2c:	str	r3, [fp, #-8]
   3ee30:	ldr	r3, [fp, #-8]
   3ee34:	cmp	r3, #0
   3ee38:	beq	3ee60 <flatcc_json_parser_struct_as_root@@Base+0x2084>
   3ee3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ee40:	add	r2, r3, #1
   3ee44:	str	r2, [fp, #-24]	; 0xffffffe8
   3ee48:	mov	r2, #45	; 0x2d
   3ee4c:	strb	r2, [r3]
   3ee50:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3ee54:	rsbs	r2, r2, #0
   3ee58:	rsc	r3, r3, #0
   3ee5c:	strd	r2, [fp, #-20]	; 0xffffffec
   3ee60:	ldrd	r0, [fp, #-20]	; 0xffffffec
   3ee64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ee68:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   3ee6c:	mov	r2, r0
   3ee70:	ldr	r3, [fp, #-8]
   3ee74:	add	r3, r2, r3
   3ee78:	mov	r0, r3
   3ee7c:	sub	sp, fp, #4
   3ee80:	pop	{fp, pc}
   3ee84:	push	{fp}		; (str fp, [sp, #-4]!)
   3ee88:	add	fp, sp, #0
   3ee8c:	sub	sp, sp, #52	; 0x34
   3ee90:	str	r0, [fp, #-48]	; 0xffffffd0
   3ee94:	str	r1, [fp, #-52]	; 0xffffffcc
   3ee98:	sub	r3, fp, #40	; 0x28
   3ee9c:	add	r3, r3, #20
   3eea0:	str	r3, [fp, #-8]
   3eea4:	ldr	r3, [fp, #-8]
   3eea8:	str	r3, [fp, #-12]
   3eeac:	b	3ef34 <flatcc_json_parser_struct_as_root@@Base+0x2158>
   3eeb0:	ldr	r3, [fp, #-8]
   3eeb4:	sub	r3, r3, #2
   3eeb8:	str	r3, [fp, #-8]
   3eebc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3eec0:	ldr	r3, [pc, #332]	; 3f014 <flatcc_json_parser_struct_as_root@@Base+0x2238>
   3eec4:	umull	r1, r3, r3, r2
   3eec8:	lsr	r3, r3, #5
   3eecc:	mov	r1, #100	; 0x64
   3eed0:	mul	r3, r1, r3
   3eed4:	sub	r3, r2, r3
   3eed8:	lsl	r3, r3, #1
   3eedc:	str	r3, [fp, #-16]
   3eee0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3eee4:	ldr	r2, [pc, #296]	; 3f014 <flatcc_json_parser_struct_as_root@@Base+0x2238>
   3eee8:	umull	r2, r3, r2, r3
   3eeec:	lsr	r3, r3, #5
   3eef0:	str	r3, [fp, #-48]	; 0xffffffd0
   3eef4:	ldr	r3, [fp, #-16]
   3eef8:	ldr	r2, [pc, #280]	; 3f018 <flatcc_json_parser_struct_as_root@@Base+0x223c>
   3eefc:	add	r2, pc, r2
   3ef00:	add	r3, r3, r2
   3ef04:	ldrb	r2, [r3]
   3ef08:	ldr	r3, [fp, #-8]
   3ef0c:	strb	r2, [r3]
   3ef10:	ldr	r3, [fp, #-8]
   3ef14:	add	r3, r3, #1
   3ef18:	ldr	r2, [fp, #-16]
   3ef1c:	add	r2, r2, #1
   3ef20:	ldr	r1, [pc, #244]	; 3f01c <flatcc_json_parser_struct_as_root@@Base+0x2240>
   3ef24:	add	r1, pc, r1
   3ef28:	add	r2, r2, r1
   3ef2c:	ldrb	r2, [r2]
   3ef30:	strb	r2, [r3]
   3ef34:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ef38:	cmp	r3, #99	; 0x63
   3ef3c:	bhi	3eeb0 <flatcc_json_parser_struct_as_root@@Base+0x20d4>
   3ef40:	ldr	r3, [fp, #-8]
   3ef44:	sub	r3, r3, #2
   3ef48:	str	r3, [fp, #-8]
   3ef4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ef50:	lsl	r3, r3, #1
   3ef54:	str	r3, [fp, #-16]
   3ef58:	ldr	r3, [fp, #-16]
   3ef5c:	ldr	r2, [pc, #188]	; 3f020 <flatcc_json_parser_struct_as_root@@Base+0x2244>
   3ef60:	add	r2, pc, r2
   3ef64:	add	r3, r3, r2
   3ef68:	ldrb	r2, [r3]
   3ef6c:	ldr	r3, [fp, #-8]
   3ef70:	strb	r2, [r3]
   3ef74:	ldr	r3, [fp, #-8]
   3ef78:	add	r3, r3, #1
   3ef7c:	ldr	r2, [fp, #-16]
   3ef80:	add	r2, r2, #1
   3ef84:	ldr	r1, [pc, #152]	; 3f024 <flatcc_json_parser_struct_as_root@@Base+0x2248>
   3ef88:	add	r1, pc, r1
   3ef8c:	add	r2, r2, r1
   3ef90:	ldrb	r2, [r2]
   3ef94:	strb	r2, [r3]
   3ef98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3ef9c:	cmp	r3, #9
   3efa0:	bhi	3efb0 <flatcc_json_parser_struct_as_root@@Base+0x21d4>
   3efa4:	ldr	r3, [fp, #-8]
   3efa8:	add	r3, r3, #1
   3efac:	str	r3, [fp, #-8]
   3efb0:	ldr	r2, [fp, #-12]
   3efb4:	ldr	r3, [fp, #-8]
   3efb8:	sub	r3, r2, r3
   3efbc:	str	r3, [fp, #-20]	; 0xffffffec
   3efc0:	b	3efe4 <flatcc_json_parser_struct_as_root@@Base+0x2208>
   3efc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3efc8:	add	r2, r3, #1
   3efcc:	str	r2, [fp, #-52]	; 0xffffffcc
   3efd0:	ldr	r2, [fp, #-8]
   3efd4:	add	r1, r2, #1
   3efd8:	str	r1, [fp, #-8]
   3efdc:	ldrb	r2, [r2]
   3efe0:	strb	r2, [r3]
   3efe4:	ldr	r2, [fp, #-8]
   3efe8:	ldr	r3, [fp, #-12]
   3efec:	cmp	r2, r3
   3eff0:	bne	3efc4 <flatcc_json_parser_struct_as_root@@Base+0x21e8>
   3eff4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3eff8:	mov	r2, #0
   3effc:	strb	r2, [r3]
   3f000:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f004:	mov	r0, r3
   3f008:	add	sp, fp, #0
   3f00c:	pop	{fp}		; (ldr fp, [sp], #4)
   3f010:	bx	lr
   3f014:	mvnpl	r8, pc, lsl r5
   3f018:	andeq	r1, r1, r8, ror ip
   3f01c:	andeq	r1, r1, r0, asr ip
   3f020:	andeq	r1, r1, r4, lsl ip
   3f024:	andeq	r1, r1, ip, ror #23
   3f028:	push	{fp, lr}
   3f02c:	add	fp, sp, #4
   3f030:	sub	sp, sp, #16
   3f034:	str	r0, [fp, #-16]
   3f038:	str	r1, [fp, #-20]	; 0xffffffec
   3f03c:	ldr	r3, [fp, #-16]
   3f040:	lsr	r3, r3, #31
   3f044:	uxtb	r3, r3
   3f048:	str	r3, [fp, #-8]
   3f04c:	ldr	r3, [fp, #-8]
   3f050:	cmp	r3, #0
   3f054:	beq	3f078 <flatcc_json_parser_struct_as_root@@Base+0x229c>
   3f058:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f05c:	add	r2, r3, #1
   3f060:	str	r2, [fp, #-20]	; 0xffffffec
   3f064:	mov	r2, #45	; 0x2d
   3f068:	strb	r2, [r3]
   3f06c:	ldr	r3, [fp, #-16]
   3f070:	rsb	r3, r3, #0
   3f074:	str	r3, [fp, #-16]
   3f078:	ldr	r3, [fp, #-16]
   3f07c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f080:	mov	r0, r3
   3f084:	bl	3ee84 <flatcc_json_parser_struct_as_root@@Base+0x20a8>
   3f088:	mov	r2, r0
   3f08c:	ldr	r3, [fp, #-8]
   3f090:	add	r3, r2, r3
   3f094:	mov	r0, r3
   3f098:	sub	sp, fp, #4
   3f09c:	pop	{fp, pc}
   3f0a0:	push	{fp}		; (str fp, [sp, #-4]!)
   3f0a4:	add	fp, sp, #0
   3f0a8:	sub	sp, sp, #52	; 0x34
   3f0ac:	str	r0, [fp, #-48]	; 0xffffffd0
   3f0b0:	str	r1, [fp, #-52]	; 0xffffffcc
   3f0b4:	sub	r3, fp, #40	; 0x28
   3f0b8:	add	r3, r3, #20
   3f0bc:	str	r3, [fp, #-8]
   3f0c0:	ldr	r3, [fp, #-8]
   3f0c4:	str	r3, [fp, #-12]
   3f0c8:	b	3f150 <flatcc_json_parser_struct_as_root@@Base+0x2374>
   3f0cc:	ldr	r3, [fp, #-8]
   3f0d0:	sub	r3, r3, #2
   3f0d4:	str	r3, [fp, #-8]
   3f0d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3f0dc:	ldr	r3, [pc, #332]	; 3f230 <flatcc_json_parser_struct_as_root@@Base+0x2454>
   3f0e0:	umull	r1, r3, r3, r2
   3f0e4:	lsr	r3, r3, #5
   3f0e8:	mov	r1, #100	; 0x64
   3f0ec:	mul	r3, r1, r3
   3f0f0:	sub	r3, r2, r3
   3f0f4:	lsl	r3, r3, #1
   3f0f8:	str	r3, [fp, #-16]
   3f0fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f100:	ldr	r2, [pc, #296]	; 3f230 <flatcc_json_parser_struct_as_root@@Base+0x2454>
   3f104:	umull	r2, r3, r2, r3
   3f108:	lsr	r3, r3, #5
   3f10c:	str	r3, [fp, #-48]	; 0xffffffd0
   3f110:	ldr	r3, [fp, #-16]
   3f114:	ldr	r2, [pc, #280]	; 3f234 <flatcc_json_parser_struct_as_root@@Base+0x2458>
   3f118:	add	r2, pc, r2
   3f11c:	add	r3, r3, r2
   3f120:	ldrb	r2, [r3]
   3f124:	ldr	r3, [fp, #-8]
   3f128:	strb	r2, [r3]
   3f12c:	ldr	r3, [fp, #-8]
   3f130:	add	r3, r3, #1
   3f134:	ldr	r2, [fp, #-16]
   3f138:	add	r2, r2, #1
   3f13c:	ldr	r1, [pc, #244]	; 3f238 <flatcc_json_parser_struct_as_root@@Base+0x245c>
   3f140:	add	r1, pc, r1
   3f144:	add	r2, r2, r1
   3f148:	ldrb	r2, [r2]
   3f14c:	strb	r2, [r3]
   3f150:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f154:	cmp	r3, #99	; 0x63
   3f158:	bhi	3f0cc <flatcc_json_parser_struct_as_root@@Base+0x22f0>
   3f15c:	ldr	r3, [fp, #-8]
   3f160:	sub	r3, r3, #2
   3f164:	str	r3, [fp, #-8]
   3f168:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f16c:	lsl	r3, r3, #1
   3f170:	str	r3, [fp, #-16]
   3f174:	ldr	r3, [fp, #-16]
   3f178:	ldr	r2, [pc, #188]	; 3f23c <flatcc_json_parser_struct_as_root@@Base+0x2460>
   3f17c:	add	r2, pc, r2
   3f180:	add	r3, r3, r2
   3f184:	ldrb	r2, [r3]
   3f188:	ldr	r3, [fp, #-8]
   3f18c:	strb	r2, [r3]
   3f190:	ldr	r3, [fp, #-8]
   3f194:	add	r3, r3, #1
   3f198:	ldr	r2, [fp, #-16]
   3f19c:	add	r2, r2, #1
   3f1a0:	ldr	r1, [pc, #152]	; 3f240 <flatcc_json_parser_struct_as_root@@Base+0x2464>
   3f1a4:	add	r1, pc, r1
   3f1a8:	add	r2, r2, r1
   3f1ac:	ldrb	r2, [r2]
   3f1b0:	strb	r2, [r3]
   3f1b4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f1b8:	cmp	r3, #9
   3f1bc:	bhi	3f1cc <flatcc_json_parser_struct_as_root@@Base+0x23f0>
   3f1c0:	ldr	r3, [fp, #-8]
   3f1c4:	add	r3, r3, #1
   3f1c8:	str	r3, [fp, #-8]
   3f1cc:	ldr	r2, [fp, #-12]
   3f1d0:	ldr	r3, [fp, #-8]
   3f1d4:	sub	r3, r2, r3
   3f1d8:	str	r3, [fp, #-20]	; 0xffffffec
   3f1dc:	b	3f200 <flatcc_json_parser_struct_as_root@@Base+0x2424>
   3f1e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3f1e4:	add	r2, r3, #1
   3f1e8:	str	r2, [fp, #-52]	; 0xffffffcc
   3f1ec:	ldr	r2, [fp, #-8]
   3f1f0:	add	r1, r2, #1
   3f1f4:	str	r1, [fp, #-8]
   3f1f8:	ldrb	r2, [r2]
   3f1fc:	strb	r2, [r3]
   3f200:	ldr	r2, [fp, #-8]
   3f204:	ldr	r3, [fp, #-12]
   3f208:	cmp	r2, r3
   3f20c:	bne	3f1e0 <flatcc_json_parser_struct_as_root@@Base+0x2404>
   3f210:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3f214:	mov	r2, #0
   3f218:	strb	r2, [r3]
   3f21c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f220:	mov	r0, r3
   3f224:	add	sp, fp, #0
   3f228:	pop	{fp}		; (ldr fp, [sp], #4)
   3f22c:	bx	lr
   3f230:	mvnpl	r8, pc, lsl r5
   3f234:	andeq	r1, r1, ip, asr sl
   3f238:	andeq	r1, r1, r4, lsr sl
   3f23c:	strdeq	r1, [r1], -r8
   3f240:	ldrdeq	r1, [r1], -r0
   3f244:	push	{fp, lr}
   3f248:	add	fp, sp, #4
   3f24c:	sub	sp, sp, #16
   3f250:	str	r0, [fp, #-16]
   3f254:	str	r1, [fp, #-20]	; 0xffffffec
   3f258:	ldr	r3, [fp, #-16]
   3f25c:	lsr	r3, r3, #31
   3f260:	uxtb	r3, r3
   3f264:	str	r3, [fp, #-8]
   3f268:	ldr	r3, [fp, #-8]
   3f26c:	cmp	r3, #0
   3f270:	beq	3f294 <flatcc_json_parser_struct_as_root@@Base+0x24b8>
   3f274:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f278:	add	r2, r3, #1
   3f27c:	str	r2, [fp, #-20]	; 0xffffffec
   3f280:	mov	r2, #45	; 0x2d
   3f284:	strb	r2, [r3]
   3f288:	ldr	r3, [fp, #-16]
   3f28c:	rsb	r3, r3, #0
   3f290:	str	r3, [fp, #-16]
   3f294:	ldr	r3, [fp, #-16]
   3f298:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f29c:	mov	r0, r3
   3f2a0:	bl	3f0a0 <flatcc_json_parser_struct_as_root@@Base+0x22c4>
   3f2a4:	mov	r2, r0
   3f2a8:	ldr	r3, [fp, #-8]
   3f2ac:	add	r3, r2, r3
   3f2b0:	mov	r0, r3
   3f2b4:	sub	sp, fp, #4
   3f2b8:	pop	{fp, pc}
   3f2bc:	push	{fp}		; (str fp, [sp, #-4]!)
   3f2c0:	add	fp, sp, #0
   3f2c4:	sub	sp, sp, #20
   3f2c8:	vstr	d0, [fp, #-20]	; 0xffffffec
   3f2cc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3f2d0:	strd	r2, [fp, #-12]
   3f2d4:	ldrd	r2, [fp, #-12]
   3f2d8:	mov	r0, r2
   3f2dc:	mov	r1, r3
   3f2e0:	add	sp, fp, #0
   3f2e4:	pop	{fp}		; (ldr fp, [sp], #4)
   3f2e8:	bx	lr
   3f2ec:	push	{fp}		; (str fp, [sp, #-4]!)
   3f2f0:	add	fp, sp, #0
   3f2f4:	sub	sp, sp, #20
   3f2f8:	strd	r0, [fp, #-20]	; 0xffffffec
   3f2fc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3f300:	strd	r2, [fp, #-12]
   3f304:	ldrd	r2, [fp, #-12]
   3f308:	vmov	d7, r2, r3
   3f30c:	vmov.f64	d0, d7
   3f310:	add	sp, fp, #0
   3f314:	pop	{fp}		; (ldr fp, [sp], #4)
   3f318:	bx	lr
   3f31c:	push	{fp}		; (str fp, [sp, #-4]!)
   3f320:	add	fp, sp, #0
   3f324:	sub	sp, sp, #20
   3f328:	vstr	d0, [fp, #-20]	; 0xffffffec
   3f32c:	vldr	d7, [fp, #-20]	; 0xffffffec
   3f330:	vcvt.s32.f64	s15, d7
   3f334:	vmov	r3, s15
   3f338:	str	r3, [fp, #-8]
   3f33c:	vldr	d7, [fp, #-20]	; 0xffffffec
   3f340:	vcmpe.f64	d7, #0.0
   3f344:	vmrs	APSR_nzcv, fpscr
   3f348:	bpl	3f354 <flatcc_json_parser_struct_as_root@@Base+0x2578>
   3f34c:	ldr	r3, [fp, #-8]
   3f350:	b	3f384 <flatcc_json_parser_struct_as_root@@Base+0x25a8>
   3f354:	ldr	r3, [fp, #-8]
   3f358:	vmov	s15, r3
   3f35c:	vcvt.f64.s32	d7, s15
   3f360:	vldr	d6, [fp, #-20]	; 0xffffffec
   3f364:	vsub.f64	d7, d6, d7
   3f368:	vcmp.f64	d7, #0.0
   3f36c:	vmrs	APSR_nzcv, fpscr
   3f370:	beq	3f380 <flatcc_json_parser_struct_as_root@@Base+0x25a4>
   3f374:	ldr	r3, [fp, #-8]
   3f378:	add	r3, r3, #1
   3f37c:	b	3f384 <flatcc_json_parser_struct_as_root@@Base+0x25a8>
   3f380:	ldr	r3, [fp, #-8]
   3f384:	mov	r0, r3
   3f388:	add	sp, fp, #0
   3f38c:	pop	{fp}		; (ldr fp, [sp], #4)
   3f390:	bx	lr
   3f394:	push	{fp, lr}
   3f398:	add	fp, sp, #4
   3f39c:	sub	sp, sp, #16
   3f3a0:	str	r0, [fp, #-16]
   3f3a4:	str	r1, [fp, #-20]	; 0xffffffec
   3f3a8:	ldr	r3, [fp, #-16]
   3f3ac:	add	r3, r3, #63	; 0x3f
   3f3b0:	vmov	s15, r3
   3f3b4:	vcvt.f64.s32	d7, s15
   3f3b8:	vldr	d6, [pc, #168]	; 3f468 <flatcc_json_parser_struct_as_root@@Base+0x268c>
   3f3bc:	vmul.f64	d7, d7, d6
   3f3c0:	vmov.f64	d0, d7
   3f3c4:	bl	3f31c <flatcc_json_parser_struct_as_root@@Base+0x2540>
   3f3c8:	str	r0, [fp, #-8]
   3f3cc:	ldr	r3, [fp, #-8]
   3f3d0:	add	r3, r3, #344	; 0x158
   3f3d4:	add	r3, r3, #3
   3f3d8:	add	r2, r3, #7
   3f3dc:	cmp	r3, #0
   3f3e0:	movlt	r3, r2
   3f3e4:	movge	r3, r3
   3f3e8:	asr	r3, r3, #3
   3f3ec:	add	r3, r3, #1
   3f3f0:	str	r3, [fp, #-12]
   3f3f4:	ldr	r2, [pc, #116]	; 3f470 <flatcc_json_parser_struct_as_root@@Base+0x2694>
   3f3f8:	add	r2, pc, r2
   3f3fc:	ldr	r3, [fp, #-12]
   3f400:	lsl	r3, r3, #4
   3f404:	add	r3, r2, r3
   3f408:	ldrd	r2, [r3]
   3f40c:	ldr	r1, [fp, #-20]	; 0xffffffec
   3f410:	strd	r2, [r1]
   3f414:	ldr	r2, [pc, #88]	; 3f474 <flatcc_json_parser_struct_as_root@@Base+0x2698>
   3f418:	add	r2, pc, r2
   3f41c:	ldr	r3, [fp, #-12]
   3f420:	lsl	r3, r3, #4
   3f424:	add	r3, r2, r3
   3f428:	add	r3, r3, #8
   3f42c:	ldrsh	r3, [r3]
   3f430:	mov	r2, r3
   3f434:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f438:	str	r2, [r3, #8]
   3f43c:	ldr	r2, [pc, #52]	; 3f478 <flatcc_json_parser_struct_as_root@@Base+0x269c>
   3f440:	add	r2, pc, r2
   3f444:	ldr	r3, [fp, #-12]
   3f448:	lsl	r3, r3, #4
   3f44c:	add	r3, r2, r3
   3f450:	add	r3, r3, #10
   3f454:	ldrsh	r3, [r3]
   3f458:	mov	r0, r3
   3f45c:	sub	sp, fp, #4
   3f460:	pop	{fp, pc}
   3f464:	nop			; (mov r0, r0)
   3f468:			; <UNDEFINED> instruction: 0x509f79fe
   3f46c:	svccc	0x00d34413
   3f470:	andeq	r1, r1, r8, asr r8
   3f474:	andeq	r1, r1, r8, lsr r8
   3f478:	andeq	r1, r1, r0, lsl r8
   3f47c:	sub	sp, sp, #8
   3f480:	push	{fp, lr}
   3f484:	add	fp, sp, #4
   3f488:	sub	sp, sp, #24
   3f48c:	str	r0, [fp, #-24]	; 0xffffffe8
   3f490:	add	r1, fp, #4
   3f494:	stm	r1, {r2, r3}
   3f498:	ldrd	r0, [fp, #4]
   3f49c:	ldrd	r2, [fp, #20]
   3f4a0:	subs	r2, r0, r2
   3f4a4:	sbc	r3, r1, r3
   3f4a8:	strd	r2, [fp, #-20]	; 0xffffffec
   3f4ac:	ldr	r3, [fp, #12]
   3f4b0:	str	r3, [fp, #-12]
   3f4b4:	ldr	r2, [fp, #12]
   3f4b8:	ldr	r3, [fp, #28]
   3f4bc:	cmp	r2, r3
   3f4c0:	bne	3f4d8 <flatcc_json_parser_struct_as_root@@Base+0x26fc>
   3f4c4:	ldrd	r0, [fp, #4]
   3f4c8:	ldrd	r2, [fp, #20]
   3f4cc:	cmp	r1, r3
   3f4d0:	cmpeq	r0, r2
   3f4d4:	bcs	3f4f8 <flatcc_json_parser_struct_as_root@@Base+0x271c>
   3f4d8:	ldr	r3, [pc, #64]	; 3f520 <flatcc_json_parser_struct_as_root@@Base+0x2744>
   3f4dc:	add	r3, pc, r3
   3f4e0:	mov	r2, #239	; 0xef
   3f4e4:	ldr	r1, [pc, #56]	; 3f524 <flatcc_json_parser_struct_as_root@@Base+0x2748>
   3f4e8:	add	r1, pc, r1
   3f4ec:	ldr	r0, [pc, #52]	; 3f528 <flatcc_json_parser_struct_as_root@@Base+0x274c>
   3f4f0:	add	r0, pc, r0
   3f4f4:	bl	14610 <__assert_fail@plt>
   3f4f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f4fc:	mov	ip, r3
   3f500:	sub	r3, fp, #20
   3f504:	ldm	r3, {r0, r1, r2, r3}
   3f508:	stm	ip, {r0, r1, r2, r3}
   3f50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3f510:	sub	sp, fp, #4
   3f514:	pop	{fp, lr}
   3f518:	add	sp, sp, #8
   3f51c:	bx	lr
   3f520:	ldrdeq	r2, [r1], -r0
   3f524:	ldrdeq	r1, [r1], -r8
   3f528:	andeq	r1, r1, r0, asr #26
   3f52c:	sub	sp, sp, #8
   3f530:	push	{r4, r5, r6, r7, r8, r9, fp}
   3f534:	add	fp, sp, #24
   3f538:	sub	sp, sp, #124	; 0x7c
   3f53c:	str	r0, [fp, #-120]	; 0xffffff88
   3f540:	add	r1, fp, #4
   3f544:	stm	r1, {r2, r3}
   3f548:	ldrd	r2, [fp, #4]
   3f54c:	mov	r4, r3
   3f550:	mov	r5, #0
   3f554:	strd	r4, [fp, #-36]	; 0xffffffdc
   3f558:	ldrd	r2, [fp, #4]
   3f55c:	mvn	r0, #0
   3f560:	mov	r1, #0
   3f564:	and	r2, r2, r0
   3f568:	and	r3, r3, r1
   3f56c:	strd	r2, [fp, #-44]	; 0xffffffd4
   3f570:	ldrd	r2, [fp, #20]
   3f574:	mov	r3, r3
   3f578:	str	r3, [fp, #-148]	; 0xffffff6c
   3f57c:	mov	r3, #0
   3f580:	str	r3, [fp, #-144]	; 0xffffff70
   3f584:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   3f588:	strd	r2, [fp, #-52]	; 0xffffffcc
   3f58c:	ldrd	r2, [fp, #20]
   3f590:	mvn	r0, #0
   3f594:	mov	r1, #0
   3f598:	and	r2, r2, r0
   3f59c:	and	r3, r3, r1
   3f5a0:	strd	r2, [fp, #-60]	; 0xffffffc4
   3f5a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f5a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3f5ac:	mul	r2, r2, r3
   3f5b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f5b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3f5b8:	mul	r3, r1, r3
   3f5bc:	add	r1, r2, r3
   3f5c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3f5c4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3f5c8:	umull	r2, r3, r2, r3
   3f5cc:	add	r1, r1, r3
   3f5d0:	mov	r3, r1
   3f5d4:	strd	r2, [fp, #-68]	; 0xffffffbc
   3f5d8:	strd	r2, [fp, #-68]	; 0xffffffbc
   3f5dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f5e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3f5e4:	mul	r2, r2, r3
   3f5e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f5ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3f5f0:	mul	r3, r1, r3
   3f5f4:	add	r1, r2, r3
   3f5f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3f5fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3f600:	umull	r2, r3, r2, r3
   3f604:	add	r1, r1, r3
   3f608:	mov	r3, r1
   3f60c:	strd	r2, [fp, #-76]	; 0xffffffb4
   3f610:	strd	r2, [fp, #-76]	; 0xffffffb4
   3f614:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3f618:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3f61c:	mul	r2, r2, r3
   3f620:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3f624:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3f628:	mul	r3, r1, r3
   3f62c:	add	r1, r2, r3
   3f630:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3f634:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3f638:	umull	r2, r3, r2, r3
   3f63c:	add	r1, r1, r3
   3f640:	mov	r3, r1
   3f644:	strd	r2, [fp, #-84]	; 0xffffffac
   3f648:	strd	r2, [fp, #-84]	; 0xffffffac
   3f64c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f650:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3f654:	mul	r2, r2, r3
   3f658:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3f65c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3f660:	mul	r3, r1, r3
   3f664:	add	r1, r2, r3
   3f668:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3f66c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3f670:	umull	r2, r3, r2, r3
   3f674:	add	r1, r1, r3
   3f678:	mov	r3, r1
   3f67c:	strd	r2, [fp, #-92]	; 0xffffffa4
   3f680:	strd	r2, [fp, #-92]	; 0xffffffa4
   3f684:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   3f688:	mov	r3, r3
   3f68c:	str	r3, [fp, #-132]	; 0xffffff7c
   3f690:	mov	r3, #0
   3f694:	str	r3, [fp, #-128]	; 0xffffff80
   3f698:	ldrd	r2, [fp, #-84]	; 0xffffffac
   3f69c:	mvn	r0, #0
   3f6a0:	mov	r1, #0
   3f6a4:	and	r2, r2, r0
   3f6a8:	and	r3, r3, r1
   3f6ac:	ldrd	r0, [fp, #-132]	; 0xffffff7c
   3f6b0:	adds	r0, r0, r2
   3f6b4:	adc	r1, r1, r3
   3f6b8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   3f6bc:	mvn	r4, #0
   3f6c0:	mov	r5, #0
   3f6c4:	and	r2, r2, r4
   3f6c8:	and	r3, r3, r5
   3f6cc:	adds	r2, r2, r0
   3f6d0:	adc	r3, r3, r1
   3f6d4:	strd	r2, [fp, #-100]	; 0xffffff9c
   3f6d8:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   3f6dc:	adds	r2, r2, #-2147483648	; 0x80000000
   3f6e0:	adc	r3, r3, #0
   3f6e4:	strd	r2, [fp, #-100]	; 0xffffff9c
   3f6e8:	ldrd	r2, [fp, #-84]	; 0xffffffac
   3f6ec:	mov	r3, r3
   3f6f0:	str	r3, [fp, #-140]	; 0xffffff74
   3f6f4:	mov	r3, #0
   3f6f8:	str	r3, [fp, #-136]	; 0xffffff78
   3f6fc:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   3f700:	ldrd	r0, [fp, #-140]	; 0xffffff74
   3f704:	adds	r0, r0, r2
   3f708:	adc	r1, r1, r3
   3f70c:	mov	r2, r0
   3f710:	mov	r3, r1
   3f714:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   3f718:	mov	r8, r1
   3f71c:	mov	r9, #0
   3f720:	adds	r2, r2, r8
   3f724:	adc	r3, r3, r9
   3f728:	ldrd	r0, [fp, #-100]	; 0xffffff9c
   3f72c:	mov	r6, r1
   3f730:	mov	r7, #0
   3f734:	adds	r2, r2, r6
   3f738:	adc	r3, r3, r7
   3f73c:	strd	r2, [fp, #-116]	; 0xffffff8c
   3f740:	ldr	r2, [fp, #12]
   3f744:	ldr	r3, [fp, #28]
   3f748:	add	r3, r2, r3
   3f74c:	add	r3, r3, #64	; 0x40
   3f750:	str	r3, [fp, #-108]	; 0xffffff94
   3f754:	ldr	r3, [fp, #-120]	; 0xffffff88
   3f758:	mov	ip, r3
   3f75c:	sub	r3, fp, #116	; 0x74
   3f760:	ldm	r3, {r0, r1, r2, r3}
   3f764:	stm	ip, {r0, r1, r2, r3}
   3f768:	ldr	r0, [fp, #-120]	; 0xffffff88
   3f76c:	sub	sp, fp, #24
   3f770:	pop	{r4, r5, r6, r7, r8, r9, fp}
   3f774:	add	sp, sp, #8
   3f778:	bx	lr
   3f77c:	sub	sp, sp, #8
   3f780:	push	{r4, r5, fp, lr}
   3f784:	add	fp, sp, #12
   3f788:	sub	sp, sp, #8
   3f78c:	str	r0, [fp, #-16]
   3f790:	add	r1, fp, #4
   3f794:	stm	r1, {r2, r3}
   3f798:	ldrd	r2, [fp, #4]
   3f79c:	orrs	r3, r2, r3
   3f7a0:	bne	3f7e4 <flatcc_json_parser_struct_as_root@@Base+0x2a08>
   3f7a4:	ldr	r3, [pc, #172]	; 3f858 <flatcc_json_parser_struct_as_root@@Base+0x2a7c>
   3f7a8:	add	r3, pc, r3
   3f7ac:	mov	r2, #260	; 0x104
   3f7b0:	ldr	r1, [pc, #164]	; 3f85c <flatcc_json_parser_struct_as_root@@Base+0x2a80>
   3f7b4:	add	r1, pc, r1
   3f7b8:	ldr	r0, [pc, #160]	; 3f860 <flatcc_json_parser_struct_as_root@@Base+0x2a84>
   3f7bc:	add	r0, pc, r0
   3f7c0:	bl	14610 <__assert_fail@plt>
   3f7c4:	ldrd	r2, [fp, #4]
   3f7c8:	lsl	r5, r3, #10
   3f7cc:	orr	r5, r5, r2, lsr #22
   3f7d0:	lsl	r4, r2, #10
   3f7d4:	strd	r4, [fp, #4]
   3f7d8:	ldr	r3, [fp, #12]
   3f7dc:	sub	r3, r3, #10
   3f7e0:	str	r3, [fp, #12]
   3f7e4:	ldrd	r2, [fp, #4]
   3f7e8:	mov	r0, #0
   3f7ec:	ldr	r1, [pc, #112]	; 3f864 <flatcc_json_parser_struct_as_root@@Base+0x2a88>
   3f7f0:	and	r2, r2, r0
   3f7f4:	and	r3, r3, r1
   3f7f8:	orrs	r3, r2, r3
   3f7fc:	beq	3f7c4 <flatcc_json_parser_struct_as_root@@Base+0x29e8>
   3f800:	b	3f820 <flatcc_json_parser_struct_as_root@@Base+0x2a44>
   3f804:	ldrd	r2, [fp, #4]
   3f808:	adds	r2, r2, r2
   3f80c:	adc	r3, r3, r3
   3f810:	strd	r2, [fp, #4]
   3f814:	ldr	r3, [fp, #12]
   3f818:	sub	r3, r3, #1
   3f81c:	str	r3, [fp, #12]
   3f820:	ldrd	r2, [fp, #4]
   3f824:	cmp	r2, #0
   3f828:	sbcs	r3, r3, #0
   3f82c:	bge	3f804 <flatcc_json_parser_struct_as_root@@Base+0x2a28>
   3f830:	ldr	r3, [fp, #-16]
   3f834:	mov	ip, r3
   3f838:	add	r3, fp, #4
   3f83c:	ldm	r3, {r0, r1, r2, r3}
   3f840:	stm	ip, {r0, r1, r2, r3}
   3f844:	ldr	r0, [fp, #-16]
   3f848:	sub	sp, fp, #12
   3f84c:	pop	{r4, r5, fp, lr}
   3f850:	add	sp, sp, #8
   3f854:	bx	lr
   3f858:	andeq	r1, r1, r8, lsl lr
   3f85c:	andeq	r1, r1, ip, lsl #20
   3f860:	muleq	r1, r0, sl
   3f864:			; <UNDEFINED> instruction: 0xffc00000
   3f868:	push	{r4, r5, fp, lr}
   3f86c:	add	fp, sp, #12
   3f870:	sub	sp, sp, #40	; 0x28
   3f874:	str	r0, [fp, #-40]	; 0xffffffd8
   3f878:	vstr	d0, [fp, #-52]	; 0xffffffcc
   3f87c:	vldr	d0, [fp, #-52]	; 0xffffffcc
   3f880:	bl	3f2bc <flatcc_json_parser_struct_as_root@@Base+0x24e0>
   3f884:	strd	r0, [fp, #-20]	; 0xffffffec
   3f888:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3f88c:	mov	r0, #0
   3f890:	ldr	r1, [pc, #148]	; 3f92c <flatcc_json_parser_struct_as_root@@Base+0x2b50>
   3f894:	and	r2, r2, r0
   3f898:	and	r3, r3, r1
   3f89c:	orrs	r3, r2, r3
   3f8a0:	bne	3f8c8 <flatcc_json_parser_struct_as_root@@Base+0x2aec>
   3f8a4:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3f8a8:	mvn	r0, #0
   3f8ac:	ldr	r1, [pc, #124]	; 3f930 <flatcc_json_parser_struct_as_root@@Base+0x2b54>
   3f8b0:	and	r2, r2, r0
   3f8b4:	and	r3, r3, r1
   3f8b8:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f8bc:	ldr	r3, [pc, #112]	; 3f934 <flatcc_json_parser_struct_as_root@@Base+0x2b58>
   3f8c0:	str	r3, [fp, #-28]	; 0xffffffe4
   3f8c4:	b	3f90c <flatcc_json_parser_struct_as_root@@Base+0x2b30>
   3f8c8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3f8cc:	mvn	r0, #0
   3f8d0:	ldr	r1, [pc, #88]	; 3f930 <flatcc_json_parser_struct_as_root@@Base+0x2b54>
   3f8d4:	and	r2, r2, r0
   3f8d8:	and	r3, r3, r1
   3f8dc:	adds	r2, r2, #0
   3f8e0:	adc	r3, r3, #1048576	; 0x100000
   3f8e4:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f8e8:	ldrd	r2, [fp, #-20]	; 0xffffffec
   3f8ec:	lsr	r4, r3, #20
   3f8f0:	mov	r5, #0
   3f8f4:	mov	r3, r4
   3f8f8:	lsl	r3, r3, #21
   3f8fc:	lsr	r3, r3, #21
   3f900:	sub	r3, r3, #1072	; 0x430
   3f904:	sub	r3, r3, #3
   3f908:	str	r3, [fp, #-28]	; 0xffffffe4
   3f90c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3f910:	mov	ip, r3
   3f914:	sub	r3, fp, #36	; 0x24
   3f918:	ldm	r3, {r0, r1, r2, r3}
   3f91c:	stm	ip, {r0, r1, r2, r3}
   3f920:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3f924:	sub	sp, fp, #12
   3f928:	pop	{r4, r5, fp, pc}
   3f92c:	svcvc	0x00f00000	; IMB
   3f930:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   3f934:			; <UNDEFINED> instruction: 0xfffffbce
   3f938:	push	{r4, r5, r6, r7, fp, lr}
   3f93c:	add	fp, sp, #20
   3f940:	sub	sp, sp, #72	; 0x48
   3f944:	sub	ip, fp, #92	; 0x5c
   3f948:	stm	ip, {r0, r1, r2, r3}
   3f94c:	mov	r2, #0
   3f950:	mov	r3, #1048576	; 0x100000
   3f954:	strd	r2, [fp, #-36]	; 0xffffffdc
   3f958:	mvn	r2, #0
   3f95c:	ldr	r3, [pc, #372]	; 3fad8 <flatcc_json_parser_struct_as_root@@Base+0x2cfc>
   3f960:	strd	r2, [fp, #-44]	; 0xffffffd4
   3f964:	ldr	r3, [pc, #368]	; 3fadc <flatcc_json_parser_struct_as_root@@Base+0x2d00>
   3f968:	str	r3, [fp, #-48]	; 0xffffffd0
   3f96c:	ldr	r3, [pc, #364]	; 3fae0 <flatcc_json_parser_struct_as_root@@Base+0x2d04>
   3f970:	str	r3, [fp, #-52]	; 0xffffffcc
   3f974:	mov	r3, #52	; 0x34
   3f978:	str	r3, [fp, #-56]	; 0xffffffc8
   3f97c:	sub	ip, fp, #76	; 0x4c
   3f980:	sub	r3, fp, #92	; 0x5c
   3f984:	ldm	r3, {r0, r1, r2, r3}
   3f988:	stm	ip, {r0, r1, r2, r3}
   3f98c:	b	3f9ac <flatcc_json_parser_struct_as_root@@Base+0x2bd0>
   3f990:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   3f994:	lsrs	r3, r3, #1
   3f998:	rrx	r2, r2
   3f99c:	strd	r2, [fp, #-76]	; 0xffffffb4
   3f9a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3f9a4:	add	r3, r3, #1
   3f9a8:	str	r3, [fp, #-68]	; 0xffffffbc
   3f9ac:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   3f9b0:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   3f9b4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3f9b8:	adds	r2, r2, r6
   3f9bc:	adc	r3, r3, r7
   3f9c0:	cmp	r1, r3
   3f9c4:	cmpeq	r0, r2
   3f9c8:	bhi	3f990 <flatcc_json_parser_struct_as_root@@Base+0x2bb4>
   3f9cc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3f9d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3f9d4:	cmp	r2, r3
   3f9d8:	bge	3fa00 <flatcc_json_parser_struct_as_root@@Base+0x2c24>
   3f9dc:	vldr	d7, [pc, #236]	; 3fad0 <flatcc_json_parser_struct_as_root@@Base+0x2cf4>
   3f9e0:	b	3fac0 <flatcc_json_parser_struct_as_root@@Base+0x2ce4>
   3f9e4:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   3f9e8:	adds	r2, r2, r2
   3f9ec:	adc	r3, r3, r3
   3f9f0:	strd	r2, [fp, #-76]	; 0xffffffb4
   3f9f4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3f9f8:	sub	r3, r3, #1
   3f9fc:	str	r3, [fp, #-68]	; 0xffffffbc
   3fa00:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3fa04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fa08:	cmp	r2, r3
   3fa0c:	ble	3fa28 <flatcc_json_parser_struct_as_root@@Base+0x2c4c>
   3fa10:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   3fa14:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3fa18:	and	r2, r2, r0
   3fa1c:	and	r3, r3, r1
   3fa20:	orrs	r3, r2, r3
   3fa24:	beq	3f9e4 <flatcc_json_parser_struct_as_root@@Base+0x2c08>
   3fa28:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3fa2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3fa30:	cmp	r2, r3
   3fa34:	bne	3fa60 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
   3fa38:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   3fa3c:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3fa40:	and	r2, r2, r0
   3fa44:	and	r3, r3, r1
   3fa48:	orrs	r3, r2, r3
   3fa4c:	bne	3fa60 <flatcc_json_parser_struct_as_root@@Base+0x2c84>
   3fa50:	mov	r2, #0
   3fa54:	mov	r3, #0
   3fa58:	strd	r2, [fp, #-28]	; 0xffffffe4
   3fa5c:	b	3fa78 <flatcc_json_parser_struct_as_root@@Base+0x2c9c>
   3fa60:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3fa64:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3fa68:	add	r3, r2, r3
   3fa6c:	mov	r2, r3
   3fa70:	asr	r3, r2, #31
   3fa74:	strd	r2, [fp, #-28]	; 0xffffffe4
   3fa78:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   3fa7c:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   3fa80:	and	r6, r0, r2
   3fa84:	and	r7, r1, r3
   3fa88:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3fa8c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3fa90:	sub	ip, r1, #32
   3fa94:	rsb	r0, r1, #32
   3fa98:	lsl	r5, r3, r1
   3fa9c:	orr	r5, r5, r2, lsl ip
   3faa0:	orr	r5, r5, r2, lsr r0
   3faa4:	lsl	r4, r2, r1
   3faa8:	orr	r2, r6, r4
   3faac:	orr	r3, r7, r5
   3fab0:	mov	r0, r2
   3fab4:	mov	r1, r3
   3fab8:	bl	3f2ec <flatcc_json_parser_struct_as_root@@Base+0x2510>
   3fabc:	vmov.f64	d7, d0
   3fac0:	vmov.f64	d0, d7
   3fac4:	sub	sp, fp, #20
   3fac8:	pop	{r4, r5, r6, r7, fp, pc}
   3facc:	nop			; (mov r0, r0)
	...
   3fad8:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   3fadc:			; <UNDEFINED> instruction: 0xfffffbce
   3fae0:	andeq	r0, r0, r3, lsr r4
   3fae4:	push	{fp}		; (str fp, [sp, #-4]!)
   3fae8:	add	fp, sp, #0
   3faec:	sub	sp, sp, #28
   3faf0:	str	r0, [fp, #-16]
   3faf4:	str	r1, [fp, #-20]	; 0xffffffec
   3faf8:	str	r2, [fp, #-24]	; 0xffffffe8
   3fafc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3fb00:	add	r2, r3, #1
   3fb04:	mov	r3, r2
   3fb08:	lsl	r3, r3, #4
   3fb0c:	add	r3, r3, r2
   3fb10:	lsl	r3, r3, #3
   3fb14:	add	r3, r3, r2
   3fb18:	lsl	r2, r3, #3
   3fb1c:	add	r3, r3, r2
   3fb20:	asr	r3, r3, #12
   3fb24:	add	r3, r3, #1
   3fb28:	str	r3, [fp, #-8]
   3fb2c:	ldr	r3, [pc, #76]	; 3fb80 <flatcc_json_parser_struct_as_root@@Base+0x2da4>
   3fb30:	add	r3, pc, r3
   3fb34:	ldr	r2, [fp, #-8]
   3fb38:	ldr	r2, [r3, r2, lsl #2]
   3fb3c:	ldr	r3, [fp, #-16]
   3fb40:	cmp	r2, r3
   3fb44:	bls	3fb54 <flatcc_json_parser_struct_as_root@@Base+0x2d78>
   3fb48:	ldr	r3, [fp, #-8]
   3fb4c:	sub	r3, r3, #1
   3fb50:	str	r3, [fp, #-8]
   3fb54:	ldr	r3, [pc, #40]	; 3fb84 <flatcc_json_parser_struct_as_root@@Base+0x2da8>
   3fb58:	add	r3, pc, r3
   3fb5c:	ldr	r2, [fp, #-8]
   3fb60:	ldr	r2, [r3, r2, lsl #2]
   3fb64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3fb68:	str	r2, [r3]
   3fb6c:	ldr	r3, [fp, #-8]
   3fb70:	mov	r0, r3
   3fb74:	add	sp, fp, #0
   3fb78:	pop	{fp}		; (ldr fp, [sp], #4)
   3fb7c:	bx	lr
   3fb80:	andeq	r1, r1, r8, lsr #14
   3fb84:	andeq	r1, r1, r0, lsl #14
   3fb88:	push	{r4, r5, r6, r7, fp}
   3fb8c:	add	fp, sp, #16
   3fb90:	sub	sp, sp, #36	; 0x24
   3fb94:	str	r0, [fp, #-40]	; 0xffffffd8
   3fb98:	str	r1, [fp, #-44]	; 0xffffffd4
   3fb9c:	strd	r2, [fp, #-52]	; 0xffffffcc
   3fba0:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3fba4:	ldrd	r2, [fp, #28]
   3fba8:	subs	r2, r0, r2
   3fbac:	sbc	r3, r1, r3
   3fbb0:	strd	r2, [fp, #-28]	; 0xffffffe4
   3fbb4:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   3fbb8:	ldrd	r2, [fp, #28]
   3fbbc:	adds	r2, r2, r0
   3fbc0:	adc	r3, r3, r1
   3fbc4:	strd	r2, [fp, #-36]	; 0xffffffdc
   3fbc8:	b	3fc00 <flatcc_json_parser_struct_as_root@@Base+0x2e24>
   3fbcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3fbd0:	sub	r3, r3, #1
   3fbd4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3fbd8:	add	r3, r2, r3
   3fbdc:	ldrb	r2, [r3]
   3fbe0:	sub	r2, r2, #1
   3fbe4:	uxtb	r2, r2
   3fbe8:	strb	r2, [r3]
   3fbec:	ldrd	r0, [fp, #12]
   3fbf0:	ldrd	r2, [fp, #20]
   3fbf4:	adds	r2, r2, r0
   3fbf8:	adc	r3, r3, r1
   3fbfc:	strd	r2, [fp, #12]
   3fc00:	ldrd	r0, [fp, #12]
   3fc04:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3fc08:	cmp	r1, r3
   3fc0c:	cmpeq	r0, r2
   3fc10:	bcs	3fc8c <flatcc_json_parser_struct_as_root@@Base+0x2eb0>
   3fc14:	ldrd	r0, [fp, #4]
   3fc18:	ldrd	r2, [fp, #12]
   3fc1c:	subs	r0, r0, r2
   3fc20:	sbc	r1, r1, r3
   3fc24:	ldrd	r2, [fp, #20]
   3fc28:	cmp	r1, r3
   3fc2c:	cmpeq	r0, r2
   3fc30:	bcc	3fc8c <flatcc_json_parser_struct_as_root@@Base+0x2eb0>
   3fc34:	ldrd	r0, [fp, #12]
   3fc38:	ldrd	r2, [fp, #20]
   3fc3c:	adds	r0, r0, r2
   3fc40:	adc	r1, r1, r3
   3fc44:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3fc48:	cmp	r1, r3
   3fc4c:	cmpeq	r0, r2
   3fc50:	bcc	3fbcc <flatcc_json_parser_struct_as_root@@Base+0x2df0>
   3fc54:	ldrd	r0, [fp, #-28]	; 0xffffffe4
   3fc58:	ldrd	r2, [fp, #12]
   3fc5c:	subs	r0, r0, r2
   3fc60:	sbc	r1, r1, r3
   3fc64:	ldrd	r6, [fp, #12]
   3fc68:	ldrd	r2, [fp, #20]
   3fc6c:	adds	r6, r6, r2
   3fc70:	adc	r7, r7, r3
   3fc74:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3fc78:	subs	r2, r6, r2
   3fc7c:	sbc	r3, r7, r3
   3fc80:	cmp	r1, r3
   3fc84:	cmpeq	r0, r2
   3fc88:	bcs	3fbcc <flatcc_json_parser_struct_as_root@@Base+0x2df0>
   3fc8c:	ldrd	r0, [fp, #12]
   3fc90:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3fc94:	cmp	r1, r3
   3fc98:	cmpeq	r0, r2
   3fc9c:	bcs	3fd20 <flatcc_json_parser_struct_as_root@@Base+0x2f44>
   3fca0:	ldrd	r0, [fp, #4]
   3fca4:	ldrd	r2, [fp, #12]
   3fca8:	subs	r0, r0, r2
   3fcac:	sbc	r1, r1, r3
   3fcb0:	ldrd	r2, [fp, #20]
   3fcb4:	cmp	r1, r3
   3fcb8:	cmpeq	r0, r2
   3fcbc:	bcc	3fd20 <flatcc_json_parser_struct_as_root@@Base+0x2f44>
   3fcc0:	ldrd	r0, [fp, #12]
   3fcc4:	ldrd	r2, [fp, #20]
   3fcc8:	adds	r0, r0, r2
   3fccc:	adc	r1, r1, r3
   3fcd0:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3fcd4:	cmp	r1, r3
   3fcd8:	cmpeq	r0, r2
   3fcdc:	bcc	3fd18 <flatcc_json_parser_struct_as_root@@Base+0x2f3c>
   3fce0:	ldrd	r0, [fp, #-36]	; 0xffffffdc
   3fce4:	ldrd	r2, [fp, #12]
   3fce8:	subs	r0, r0, r2
   3fcec:	sbc	r1, r1, r3
   3fcf0:	ldrd	r6, [fp, #12]
   3fcf4:	ldrd	r2, [fp, #20]
   3fcf8:	adds	r6, r6, r2
   3fcfc:	adc	r7, r7, r3
   3fd00:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3fd04:	subs	r2, r6, r2
   3fd08:	sbc	r3, r7, r3
   3fd0c:	cmp	r1, r3
   3fd10:	cmpeq	r0, r2
   3fd14:	bls	3fd20 <flatcc_json_parser_struct_as_root@@Base+0x2f44>
   3fd18:	mov	r3, #0
   3fd1c:	b	3fd84 <flatcc_json_parser_struct_as_root@@Base+0x2fa8>
   3fd20:	ldrd	r2, [fp, #28]
   3fd24:	adds	r2, r2, r2
   3fd28:	adc	r3, r3, r3
   3fd2c:	mov	r0, r2
   3fd30:	mov	r1, r3
   3fd34:	ldrd	r2, [fp, #12]
   3fd38:	cmp	r1, r3
   3fd3c:	cmpeq	r0, r2
   3fd40:	bhi	3fd80 <flatcc_json_parser_struct_as_root@@Base+0x2fa4>
   3fd44:	ldrd	r2, [fp, #28]
   3fd48:	lsl	r5, r3, #2
   3fd4c:	orr	r5, r5, r2, lsr #30
   3fd50:	lsl	r4, r2, #2
   3fd54:	ldrd	r2, [fp, #4]
   3fd58:	subs	r2, r2, r4
   3fd5c:	sbc	r3, r3, r5
   3fd60:	mov	r0, r2
   3fd64:	mov	r1, r3
   3fd68:	ldrd	r2, [fp, #12]
   3fd6c:	cmp	r1, r3
   3fd70:	cmpeq	r0, r2
   3fd74:	bcc	3fd80 <flatcc_json_parser_struct_as_root@@Base+0x2fa4>
   3fd78:	mov	r3, #1
   3fd7c:	b	3fd84 <flatcc_json_parser_struct_as_root@@Base+0x2fa8>
   3fd80:	mov	r3, #0
   3fd84:	mov	r0, r3
   3fd88:	sub	sp, fp, #16
   3fd8c:	pop	{r4, r5, r6, r7, fp}
   3fd90:	bx	lr
   3fd94:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3fd98:	add	fp, sp, #28
   3fd9c:	sub	sp, sp, #216	; 0xd8
   3fda0:	sub	ip, fp, #196	; 0xc4
   3fda4:	stm	ip, {r0, r1, r2, r3}
   3fda8:	mov	r2, #1
   3fdac:	mov	r3, #0
   3fdb0:	strd	r2, [fp, #-36]	; 0xffffffdc
   3fdb4:	ldrd	r0, [fp, #-196]	; 0xffffff3c
   3fdb8:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3fdbc:	subs	r2, r0, r2
   3fdc0:	sbc	r3, r1, r3
   3fdc4:	strd	r2, [fp, #-124]	; 0xffffff84
   3fdc8:	ldr	r3, [fp, #-188]	; 0xffffff44
   3fdcc:	str	r3, [fp, #-116]	; 0xffffff8c
   3fdd0:	ldrd	r0, [fp, #20]
   3fdd4:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   3fdd8:	adds	r2, r2, r0
   3fddc:	adc	r3, r3, r1
   3fde0:	strd	r2, [fp, #-140]	; 0xffffff74
   3fde4:	ldr	r3, [fp, #28]
   3fde8:	str	r3, [fp, #-132]	; 0xffffff7c
   3fdec:	sub	lr, fp, #156	; 0x9c
   3fdf0:	add	ip, sp, #8
   3fdf4:	sub	r3, fp, #124	; 0x7c
   3fdf8:	ldm	r3, {r0, r1, r2, r3}
   3fdfc:	stm	ip, {r0, r1, r2, r3}
   3fe00:	mov	r2, sp
   3fe04:	sub	r3, fp, #132	; 0x84
   3fe08:	ldm	r3, {r0, r1}
   3fe0c:	stm	r2, {r0, r1}
   3fe10:	sub	r3, fp, #140	; 0x8c
   3fe14:	ldm	r3, {r2, r3}
   3fe18:	mov	r0, lr
   3fe1c:	bl	3f47c <flatcc_json_parser_struct_as_root@@Base+0x26a0>
   3fe20:	ldr	r3, [fp, #12]
   3fe24:	rsb	r1, r3, #0
   3fe28:	mov	r2, #1
   3fe2c:	mov	r3, #0
   3fe30:	sub	ip, r1, #32
   3fe34:	rsb	r0, r1, #32
   3fe38:	lsl	r7, r3, r1
   3fe3c:	orr	r7, r7, r2, lsl ip
   3fe40:	orr	r7, r7, r2, lsr r0
   3fe44:	lsl	r6, r2, r1
   3fe48:	strd	r6, [fp, #-172]	; 0xffffff54
   3fe4c:	ldr	r3, [fp, #12]
   3fe50:	str	r3, [fp, #-164]	; 0xffffff5c
   3fe54:	ldrd	r2, [fp, #-140]	; 0xffffff74
   3fe58:	ldr	r1, [fp, #-164]	; 0xffffff5c
   3fe5c:	rsb	r1, r1, #0
   3fe60:	rsb	ip, r1, #32
   3fe64:	sub	r0, r1, #32
   3fe68:	lsr	lr, r2, r1
   3fe6c:	str	lr, [fp, #-204]	; 0xffffff34
   3fe70:	ldr	lr, [fp, #-204]	; 0xffffff34
   3fe74:	orr	ip, lr, r3, lsl ip
   3fe78:	str	ip, [fp, #-204]	; 0xffffff34
   3fe7c:	ldr	ip, [fp, #-204]	; 0xffffff34
   3fe80:	orr	r0, ip, r3, lsr r0
   3fe84:	str	r0, [fp, #-204]	; 0xffffff34
   3fe88:	lsr	r3, r3, r1
   3fe8c:	str	r3, [fp, #-200]	; 0xffffff38
   3fe90:	ldr	r3, [fp, #-204]	; 0xffffff34
   3fe94:	str	r3, [fp, #-40]	; 0xffffffd8
   3fe98:	ldrd	r0, [fp, #-140]	; 0xffffff74
   3fe9c:	ldrd	r2, [fp, #-172]	; 0xffffff54
   3fea0:	subs	r2, r2, #1
   3fea4:	sbc	r3, r3, #0
   3fea8:	and	r2, r2, r0
   3feac:	and	r3, r3, r1
   3feb0:	strd	r2, [fp, #-52]	; 0xffffffcc
   3feb4:	ldr	r3, [fp, #-164]	; 0xffffff5c
   3feb8:	add	r3, r3, #64	; 0x40
   3febc:	sub	r2, fp, #176	; 0xb0
   3fec0:	mov	r1, r3
   3fec4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3fec8:	bl	3fae4 <flatcc_json_parser_struct_as_root@@Base+0x2d08>
   3fecc:	mov	r2, r0
   3fed0:	ldr	r3, [fp, #44]	; 0x2c
   3fed4:	str	r2, [r3]
   3fed8:	ldr	r3, [fp, #40]	; 0x28
   3fedc:	mov	r2, #0
   3fee0:	str	r2, [r3]
   3fee4:	b	40090 <flatcc_json_parser_struct_as_root@@Base+0x32b4>
   3fee8:	ldr	r3, [fp, #-176]	; 0xffffff50
   3feec:	mov	r1, r3
   3fef0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3fef4:	bl	4ad20 <flatcc_json_printer_clear@@Base+0x5c>
   3fef8:	mov	r3, r0
   3fefc:	str	r3, [fp, #-56]	; 0xffffffc8
   3ff00:	ldr	r3, [fp, #40]	; 0x28
   3ff04:	ldr	r3, [r3]
   3ff08:	mov	r2, r3
   3ff0c:	ldr	r3, [fp, #36]	; 0x24
   3ff10:	add	r3, r3, r2
   3ff14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   3ff18:	uxtb	r2, r2
   3ff1c:	add	r2, r2, #48	; 0x30
   3ff20:	uxtb	r2, r2
   3ff24:	strb	r2, [r3]
   3ff28:	ldr	r3, [fp, #40]	; 0x28
   3ff2c:	ldr	r3, [r3]
   3ff30:	add	r2, r3, #1
   3ff34:	ldr	r3, [fp, #40]	; 0x28
   3ff38:	str	r2, [r3]
   3ff3c:	ldr	r2, [fp, #-176]	; 0xffffff50
   3ff40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ff44:	mov	r1, r2
   3ff48:	mov	r0, r3
   3ff4c:	bl	4af0c <flatcc_json_printer_clear@@Base+0x248>
   3ff50:	mov	r3, r1
   3ff54:	str	r3, [fp, #-40]	; 0xffffffd8
   3ff58:	ldr	r3, [fp, #44]	; 0x2c
   3ff5c:	ldr	r3, [r3]
   3ff60:	sub	r2, r3, #1
   3ff64:	ldr	r3, [fp, #44]	; 0x2c
   3ff68:	str	r2, [r3]
   3ff6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ff70:	mov	r2, r3
   3ff74:	mov	r3, #0
   3ff78:	ldr	r1, [fp, #-164]	; 0xffffff5c
   3ff7c:	rsb	r1, r1, #0
   3ff80:	sub	ip, r1, #32
   3ff84:	rsb	r0, r1, #32
   3ff88:	lsl	r5, r3, r1
   3ff8c:	orr	r5, r5, r2, lsl ip
   3ff90:	orr	r5, r5, r2, lsr r0
   3ff94:	lsl	r4, r2, r1
   3ff98:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   3ff9c:	adds	r2, r2, r4
   3ffa0:	adc	r3, r3, r5
   3ffa4:	strd	r2, [fp, #-68]	; 0xffffffbc
   3ffa8:	ldrd	r0, [fp, #-156]	; 0xffffff64
   3ffac:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   3ffb0:	cmp	r1, r3
   3ffb4:	cmpeq	r0, r2
   3ffb8:	bls	4007c <flatcc_json_parser_struct_as_root@@Base+0x32a0>
   3ffbc:	ldr	r3, [fp, #40]	; 0x28
   3ffc0:	ldr	r8, [r3]
   3ffc4:	sub	lr, fp, #108	; 0x6c
   3ffc8:	add	ip, sp, #8
   3ffcc:	add	r3, fp, #4
   3ffd0:	ldm	r3, {r0, r1, r2, r3}
   3ffd4:	stm	ip, {r0, r1, r2, r3}
   3ffd8:	mov	r2, sp
   3ffdc:	sub	r3, fp, #132	; 0x84
   3ffe0:	ldm	r3, {r0, r1}
   3ffe4:	stm	r2, {r0, r1}
   3ffe8:	sub	r3, fp, #140	; 0x8c
   3ffec:	ldm	r3, {r2, r3}
   3fff0:	mov	r0, lr
   3fff4:	bl	3f47c <flatcc_json_parser_struct_as_root@@Base+0x26a0>
   3fff8:	ldrd	r6, [fp, #-108]	; 0xffffff94
   3fffc:	ldrd	r4, [fp, #-156]	; 0xffffff64
   40000:	ldr	r3, [fp, #-176]	; 0xffffff50
   40004:	mov	r2, r3
   40008:	mov	r3, #0
   4000c:	ldr	r1, [fp, #-164]	; 0xffffff5c
   40010:	rsb	r1, r1, #0
   40014:	sub	ip, r1, #32
   40018:	rsb	r0, r1, #32
   4001c:	lsl	lr, r3, r1
   40020:	str	lr, [fp, #-208]	; 0xffffff30
   40024:	ldr	lr, [fp, #-208]	; 0xffffff30
   40028:	orr	ip, lr, r2, lsl ip
   4002c:	str	ip, [fp, #-208]	; 0xffffff30
   40030:	ldr	ip, [fp, #-208]	; 0xffffff30
   40034:	orr	r0, ip, r2, lsr r0
   40038:	str	r0, [fp, #-208]	; 0xffffff30
   4003c:	lsl	r3, r2, r1
   40040:	str	r3, [fp, #-212]	; 0xffffff2c
   40044:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   40048:	strd	r2, [sp, #24]
   4004c:	ldrd	r2, [fp, #-212]	; 0xffffff2c
   40050:	strd	r2, [sp, #16]
   40054:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   40058:	strd	r2, [sp, #8]
   4005c:	strd	r4, [sp]
   40060:	mov	r2, r6
   40064:	mov	r3, r7
   40068:	mov	r1, r8
   4006c:	ldr	r0, [fp, #36]	; 0x24
   40070:	bl	3fb88 <flatcc_json_parser_struct_as_root@@Base+0x2dac>
   40074:	mov	r3, r0
   40078:	b	4027c <flatcc_json_parser_struct_as_root@@Base+0x34a0>
   4007c:	ldr	r3, [fp, #-176]	; 0xffffff50
   40080:	ldr	r2, [pc, #512]	; 40288 <flatcc_json_parser_struct_as_root@@Base+0x34ac>
   40084:	umull	r2, r3, r2, r3
   40088:	lsr	r3, r3, #3
   4008c:	str	r3, [fp, #-176]	; 0xffffff50
   40090:	ldr	r3, [fp, #44]	; 0x2c
   40094:	ldr	r3, [r3]
   40098:	cmp	r3, #0
   4009c:	bgt	3fee8 <flatcc_json_parser_struct_as_root@@Base+0x310c>
   400a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   400a4:	mov	r2, #10
   400a8:	mul	r2, r2, r3
   400ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   400b0:	mov	r1, #0
   400b4:	mul	r3, r1, r3
   400b8:	add	r1, r2, r3
   400bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   400c0:	mov	r2, #10
   400c4:	umull	r2, r3, r3, r2
   400c8:	add	r1, r1, r3
   400cc:	mov	r3, r1
   400d0:	strd	r2, [fp, #-52]	; 0xffffffcc
   400d4:	strd	r2, [fp, #-52]	; 0xffffffcc
   400d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   400dc:	mov	r2, #10
   400e0:	mul	r2, r2, r3
   400e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   400e8:	mov	r1, #0
   400ec:	mul	r3, r1, r3
   400f0:	add	r1, r2, r3
   400f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   400f8:	mov	r2, #10
   400fc:	umull	r2, r3, r3, r2
   40100:	add	r1, r1, r3
   40104:	mov	r3, r1
   40108:	strd	r2, [fp, #-36]	; 0xffffffdc
   4010c:	strd	r2, [fp, #-36]	; 0xffffffdc
   40110:	ldrd	r2, [fp, #-156]	; 0xffffff64
   40114:	mov	r1, #10
   40118:	mul	r0, r1, r3
   4011c:	mov	r1, #0
   40120:	mul	r1, r1, r2
   40124:	add	r1, r0, r1
   40128:	mov	r0, #10
   4012c:	umull	r2, r3, r2, r0
   40130:	add	r1, r1, r3
   40134:	mov	r3, r1
   40138:	strd	r2, [fp, #-156]	; 0xffffff64
   4013c:	ldr	r3, [fp, #-164]	; 0xffffff5c
   40140:	rsb	r1, r3, #0
   40144:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   40148:	rsb	ip, r1, #32
   4014c:	sub	r0, r1, #32
   40150:	lsr	r8, r2, r1
   40154:	orr	r8, r8, r3, lsl ip
   40158:	orr	r8, r8, r3, lsr r0
   4015c:	lsr	r9, r3, r1
   40160:	mov	r3, r8
   40164:	str	r3, [fp, #-72]	; 0xffffffb8
   40168:	ldr	r3, [fp, #40]	; 0x28
   4016c:	ldr	r3, [r3]
   40170:	mov	r2, r3
   40174:	ldr	r3, [fp, #36]	; 0x24
   40178:	add	r3, r3, r2
   4017c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   40180:	uxtb	r2, r2
   40184:	add	r2, r2, #48	; 0x30
   40188:	uxtb	r2, r2
   4018c:	strb	r2, [r3]
   40190:	ldr	r3, [fp, #40]	; 0x28
   40194:	ldr	r3, [r3]
   40198:	add	r2, r3, #1
   4019c:	ldr	r3, [fp, #40]	; 0x28
   401a0:	str	r2, [r3]
   401a4:	ldrd	r2, [fp, #-172]	; 0xffffff54
   401a8:	subs	r2, r2, #1
   401ac:	sbc	r3, r3, #0
   401b0:	ldrd	r0, [fp, #-52]	; 0xffffffcc
   401b4:	and	r2, r2, r0
   401b8:	and	r3, r3, r1
   401bc:	strd	r2, [fp, #-52]	; 0xffffffcc
   401c0:	ldr	r3, [fp, #44]	; 0x2c
   401c4:	ldr	r3, [r3]
   401c8:	sub	r2, r3, #1
   401cc:	ldr	r3, [fp, #44]	; 0x2c
   401d0:	str	r2, [r3]
   401d4:	ldrd	r0, [fp, #-156]	; 0xffffff64
   401d8:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   401dc:	cmp	r1, r3
   401e0:	cmpeq	r0, r2
   401e4:	bls	400a0 <flatcc_json_parser_struct_as_root@@Base+0x32c4>
   401e8:	ldr	r3, [fp, #40]	; 0x28
   401ec:	ldr	r8, [r3]
   401f0:	sub	lr, fp, #92	; 0x5c
   401f4:	add	ip, sp, #8
   401f8:	add	r3, fp, #4
   401fc:	ldm	r3, {r0, r1, r2, r3}
   40200:	stm	ip, {r0, r1, r2, r3}
   40204:	mov	r2, sp
   40208:	sub	r3, fp, #132	; 0x84
   4020c:	ldm	r3, {r0, r1}
   40210:	stm	r2, {r0, r1}
   40214:	sub	r3, fp, #140	; 0x8c
   40218:	ldm	r3, {r2, r3}
   4021c:	mov	r0, lr
   40220:	bl	3f47c <flatcc_json_parser_struct_as_root@@Base+0x26a0>
   40224:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   40228:	ldr	r1, [fp, #-36]	; 0xffffffdc
   4022c:	mul	r0, r3, r1
   40230:	ldr	r1, [fp, #-32]	; 0xffffffe0
   40234:	mul	r1, r2, r1
   40238:	add	r1, r0, r1
   4023c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   40240:	umull	r2, r3, r0, r2
   40244:	add	r1, r1, r3
   40248:	mov	r3, r1
   4024c:	ldrd	r0, [fp, #-156]	; 0xffffff64
   40250:	ldrd	r4, [fp, #-172]	; 0xffffff54
   40254:	ldrd	r6, [fp, #-36]	; 0xffffffdc
   40258:	strd	r6, [sp, #24]
   4025c:	strd	r4, [sp, #16]
   40260:	ldrd	r4, [fp, #-52]	; 0xffffffcc
   40264:	strd	r4, [sp, #8]
   40268:	strd	r0, [sp]
   4026c:	mov	r1, r8
   40270:	ldr	r0, [fp, #36]	; 0x24
   40274:	bl	3fb88 <flatcc_json_parser_struct_as_root@@Base+0x2dac>
   40278:	mov	r3, r0
   4027c:	mov	r0, r3
   40280:	sub	sp, fp, #28
   40284:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   40288:	stclgt	12, cr12, [ip], {205}	; 0xcd
   4028c:	push	{r4, r5, r6, r7, fp, lr}
   40290:	add	fp, sp, #20
   40294:	sub	sp, sp, #208	; 0xd0
   40298:	vstr	d0, [fp, #-148]	; 0xffffff6c
   4029c:	str	r0, [fp, #-152]	; 0xffffff68
   402a0:	str	r1, [fp, #-156]	; 0xffffff64
   402a4:	str	r2, [fp, #-160]	; 0xffffff60
   402a8:	sub	r3, fp, #60	; 0x3c
   402ac:	vldr	d0, [fp, #-148]	; 0xffffff6c
   402b0:	mov	r0, r3
   402b4:	bl	3f868 <flatcc_json_parser_struct_as_root@@Base+0x2a8c>
   402b8:	sub	ip, fp, #76	; 0x4c
   402bc:	mov	r2, sp
   402c0:	sub	r3, fp, #52	; 0x34
   402c4:	ldm	r3, {r0, r1}
   402c8:	stm	r2, {r0, r1}
   402cc:	sub	r3, fp, #60	; 0x3c
   402d0:	ldm	r3, {r2, r3}
   402d4:	mov	r0, ip
   402d8:	bl	3f77c <flatcc_json_parser_struct_as_root@@Base+0x29a0>
   402dc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   402e0:	adds	r2, r2, r2
   402e4:	adc	r3, r3, r3
   402e8:	adds	r2, r2, #1
   402ec:	adc	r3, r3, #0
   402f0:	strd	r2, [fp, #-92]	; 0xffffffa4
   402f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   402f8:	sub	r3, r3, #1
   402fc:	str	r3, [fp, #-84]	; 0xffffffac
   40300:	sub	ip, fp, #108	; 0x6c
   40304:	mov	r2, sp
   40308:	sub	r3, fp, #84	; 0x54
   4030c:	ldm	r3, {r0, r1}
   40310:	stm	r2, {r0, r1}
   40314:	sub	r3, fp, #92	; 0x5c
   40318:	ldm	r3, {r2, r3}
   4031c:	mov	r0, ip
   40320:	bl	3f77c <flatcc_json_parser_struct_as_root@@Base+0x29a0>
   40324:	vldr	d0, [fp, #-148]	; 0xffffff6c
   40328:	bl	3f2bc <flatcc_json_parser_struct_as_root@@Base+0x24e0>
   4032c:	strd	r0, [fp, #-28]	; 0xffffffe4
   40330:	vldr	d7, [fp, #-148]	; 0xffffff6c
   40334:	vcmpe.f64	d7, #0.0
   40338:	vmrs	APSR_nzcv, fpscr
   4033c:	movgt	r3, #1
   40340:	movle	r3, #0
   40344:	uxtb	r3, r3
   40348:	eor	r3, r3, #1
   4034c:	uxtb	r3, r3
   40350:	cmp	r3, #0
   40354:	bne	40384 <flatcc_json_parser_struct_as_root@@Base+0x35a8>
   40358:	vldr	d7, [fp, #-148]	; 0xffffff6c
   4035c:	vldr	d6, [pc, #580]	; 405a8 <flatcc_json_parser_struct_as_root@@Base+0x37cc>
   40360:	vcmpe.f64	d7, d6
   40364:	vmrs	APSR_nzcv, fpscr
   40368:	movls	r3, #1
   4036c:	movhi	r3, #0
   40370:	uxtb	r3, r3
   40374:	eor	r3, r3, #1
   40378:	uxtb	r3, r3
   4037c:	cmp	r3, #0
   40380:	beq	403a4 <flatcc_json_parser_struct_as_root@@Base+0x35c8>
   40384:	ldr	r3, [pc, #548]	; 405b0 <flatcc_json_parser_struct_as_root@@Base+0x37d4>
   40388:	add	r3, pc, r3
   4038c:	mov	r2, #138	; 0x8a
   40390:	ldr	r1, [pc, #540]	; 405b4 <flatcc_json_parser_struct_as_root@@Base+0x37d8>
   40394:	add	r1, pc, r1
   40398:	ldr	r0, [pc, #536]	; 405b8 <flatcc_json_parser_struct_as_root@@Base+0x37dc>
   4039c:	add	r0, pc, r0
   403a0:	bl	14610 <__assert_fail@plt>
   403a4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   403a8:	mvn	r0, #0
   403ac:	ldr	r1, [pc, #520]	; 405bc <flatcc_json_parser_struct_as_root@@Base+0x37e0>
   403b0:	and	r2, r2, r0
   403b4:	and	r3, r3, r1
   403b8:	orrs	r3, r2, r3
   403bc:	bne	40408 <flatcc_json_parser_struct_as_root@@Base+0x362c>
   403c0:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   403c4:	mov	r0, #0
   403c8:	ldr	r1, [pc, #496]	; 405c0 <flatcc_json_parser_struct_as_root@@Base+0x37e4>
   403cc:	and	r2, r2, r0
   403d0:	and	r3, r3, r1
   403d4:	orrs	r3, r2, r3
   403d8:	beq	40408 <flatcc_json_parser_struct_as_root@@Base+0x362c>
   403dc:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   403e0:	lsl	r7, r3, #2
   403e4:	orr	r7, r7, r2, lsr #30
   403e8:	lsl	r6, r2, #2
   403ec:	subs	r2, r6, #1
   403f0:	sbc	r3, r7, #0
   403f4:	strd	r2, [fp, #-124]	; 0xffffff84
   403f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   403fc:	sub	r3, r3, #2
   40400:	str	r3, [fp, #-116]	; 0xffffff8c
   40404:	b	4042c <flatcc_json_parser_struct_as_root@@Base+0x3650>
   40408:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   4040c:	adds	r2, r2, r2
   40410:	adc	r3, r3, r3
   40414:	subs	r2, r2, #1
   40418:	sbc	r3, r3, #0
   4041c:	strd	r2, [fp, #-124]	; 0xffffff84
   40420:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40424:	sub	r3, r3, #1
   40428:	str	r3, [fp, #-116]	; 0xffffff8c
   4042c:	ldrd	r2, [fp, #-124]	; 0xffffff84
   40430:	ldr	r0, [fp, #-116]	; 0xffffff8c
   40434:	ldr	r1, [fp, #-100]	; 0xffffff9c
   40438:	sub	r1, r0, r1
   4043c:	sub	ip, r1, #32
   40440:	rsb	r0, r1, #32
   40444:	lsl	r5, r3, r1
   40448:	orr	r5, r5, r2, lsl ip
   4044c:	orr	r5, r5, r2, lsr r0
   40450:	lsl	r4, r2, r1
   40454:	strd	r4, [fp, #-124]	; 0xffffff84
   40458:	ldr	r3, [fp, #-100]	; 0xffffff9c
   4045c:	str	r3, [fp, #-116]	; 0xffffff8c
   40460:	ldr	r2, [fp, #-68]	; 0xffffffbc
   40464:	mvn	r3, #123	; 0x7b
   40468:	sub	r3, r3, r2
   4046c:	sub	r2, fp, #140	; 0x8c
   40470:	mov	r1, r2
   40474:	mov	r0, r3
   40478:	bl	3f394 <flatcc_json_parser_struct_as_root@@Base+0x25b8>
   4047c:	str	r0, [fp, #-32]	; 0xffffffe0
   40480:	sub	lr, fp, #180	; 0xb4
   40484:	add	ip, sp, #8
   40488:	sub	r3, fp, #140	; 0x8c
   4048c:	ldm	r3, {r0, r1, r2, r3}
   40490:	stm	ip, {r0, r1, r2, r3}
   40494:	mov	r2, sp
   40498:	sub	r3, fp, #68	; 0x44
   4049c:	ldm	r3, {r0, r1}
   404a0:	stm	r2, {r0, r1}
   404a4:	sub	r3, fp, #76	; 0x4c
   404a8:	ldm	r3, {r2, r3}
   404ac:	mov	r0, lr
   404b0:	bl	3f52c <flatcc_json_parser_struct_as_root@@Base+0x2750>
   404b4:	sub	ip, fp, #76	; 0x4c
   404b8:	sub	r3, fp, #180	; 0xb4
   404bc:	ldm	r3, {r0, r1, r2, r3}
   404c0:	stm	ip, {r0, r1, r2, r3}
   404c4:	sub	lr, fp, #124	; 0x7c
   404c8:	add	ip, sp, #8
   404cc:	sub	r3, fp, #140	; 0x8c
   404d0:	ldm	r3, {r0, r1, r2, r3}
   404d4:	stm	ip, {r0, r1, r2, r3}
   404d8:	mov	r2, sp
   404dc:	sub	r3, fp, #116	; 0x74
   404e0:	ldm	r3, {r0, r1}
   404e4:	stm	r2, {r0, r1}
   404e8:	sub	r3, fp, #124	; 0x7c
   404ec:	ldm	r3, {r2, r3}
   404f0:	mov	r0, lr
   404f4:	bl	3f52c <flatcc_json_parser_struct_as_root@@Base+0x2750>
   404f8:	sub	lr, fp, #180	; 0xb4
   404fc:	add	ip, sp, #8
   40500:	sub	r3, fp, #140	; 0x8c
   40504:	ldm	r3, {r0, r1, r2, r3}
   40508:	stm	ip, {r0, r1, r2, r3}
   4050c:	mov	r2, sp
   40510:	sub	r3, fp, #100	; 0x64
   40514:	ldm	r3, {r0, r1}
   40518:	stm	r2, {r0, r1}
   4051c:	sub	r3, fp, #108	; 0x6c
   40520:	ldm	r3, {r2, r3}
   40524:	mov	r0, lr
   40528:	bl	3f52c <flatcc_json_parser_struct_as_root@@Base+0x2750>
   4052c:	sub	ip, fp, #108	; 0x6c
   40530:	sub	r3, fp, #180	; 0xb4
   40534:	ldm	r3, {r0, r1, r2, r3}
   40538:	stm	ip, {r0, r1, r2, r3}
   4053c:	sub	r3, fp, #40	; 0x28
   40540:	str	r3, [sp, #40]	; 0x28
   40544:	ldr	r3, [fp, #-156]	; 0xffffff64
   40548:	str	r3, [sp, #36]	; 0x24
   4054c:	ldr	r3, [fp, #-152]	; 0xffffff68
   40550:	str	r3, [sp, #32]
   40554:	add	ip, sp, #16
   40558:	sub	r3, fp, #108	; 0x6c
   4055c:	ldm	r3, {r0, r1, r2, r3}
   40560:	stm	ip, {r0, r1, r2, r3}
   40564:	mov	ip, sp
   40568:	sub	r3, fp, #76	; 0x4c
   4056c:	ldm	r3, {r0, r1, r2, r3}
   40570:	stm	ip, {r0, r1, r2, r3}
   40574:	sub	r3, fp, #124	; 0x7c
   40578:	ldm	r3, {r0, r1, r2, r3}
   4057c:	bl	3fd94 <flatcc_json_parser_struct_as_root@@Base+0x2fb8>
   40580:	str	r0, [fp, #-36]	; 0xffffffdc
   40584:	ldr	r2, [fp, #-40]	; 0xffffffd8
   40588:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4058c:	sub	r2, r2, r3
   40590:	ldr	r3, [fp, #-160]	; 0xffffff60
   40594:	str	r2, [r3]
   40598:	ldr	r3, [fp, #-36]	; 0xffffffdc
   4059c:	mov	r0, r3
   405a0:	sub	sp, fp, #20
   405a4:	pop	{r4, r5, r6, r7, fp, pc}
   405a8:			; <UNDEFINED> instruction: 0xffffffff
   405ac:	svcvc	0x00efffff
   405b0:	andeq	r1, r1, r0, asr r2
   405b4:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   405b8:	andeq	r0, r1, r8, asr pc
   405bc:	strdeq	pc, [pc], -pc	; <UNPREDICTABLE>
   405c0:	svcvc	0x00f00000	; IMB
   405c4:	push	{fp}		; (str fp, [sp, #-4]!)
   405c8:	add	fp, sp, #0
   405cc:	sub	sp, sp, #44	; 0x2c
   405d0:	str	r0, [fp, #-40]	; 0xffffffd8
   405d4:	str	r1, [fp, #-44]	; 0xffffffd4
   405d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   405dc:	str	r3, [fp, #-16]
   405e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   405e4:	cmp	r3, #0
   405e8:	bge	4060c <flatcc_json_parser_struct_as_root@@Base+0x3830>
   405ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   405f0:	add	r2, r3, #1
   405f4:	str	r2, [fp, #-44]	; 0xffffffd4
   405f8:	mov	r2, #45	; 0x2d
   405fc:	strb	r2, [r3]
   40600:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40604:	rsb	r3, r3, #0
   40608:	str	r3, [fp, #-40]	; 0xffffffd8
   4060c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40610:	str	r3, [fp, #-12]
   40614:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40618:	ldr	r2, [pc, #316]	; 4075c <flatcc_json_parser_struct_as_root@@Base+0x3980>
   4061c:	smull	r1, r2, r2, r3
   40620:	asr	r2, r2, #2
   40624:	asr	r3, r3, #31
   40628:	sub	r3, r2, r3
   4062c:	str	r3, [fp, #-20]	; 0xffffffec
   40630:	ldr	r3, [fp, #-20]	; 0xffffffec
   40634:	mvn	r2, #9
   40638:	mul	r2, r2, r3
   4063c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40640:	add	r3, r2, r3
   40644:	str	r3, [fp, #-24]	; 0xffffffe8
   40648:	ldr	r3, [fp, #-12]
   4064c:	add	r2, r3, #1
   40650:	str	r2, [fp, #-12]
   40654:	ldr	r2, [fp, #-24]	; 0xffffffe8
   40658:	uxtb	r2, r2
   4065c:	add	r2, r2, #48	; 0x30
   40660:	uxtb	r2, r2
   40664:	strb	r2, [r3]
   40668:	ldr	r3, [fp, #-20]	; 0xffffffec
   4066c:	cmp	r3, #0
   40670:	beq	40680 <flatcc_json_parser_struct_as_root@@Base+0x38a4>
   40674:	ldr	r3, [fp, #-20]	; 0xffffffec
   40678:	str	r3, [fp, #-40]	; 0xffffffd8
   4067c:	b	40614 <flatcc_json_parser_struct_as_root@@Base+0x3838>
   40680:	nop			; (mov r0, r0)
   40684:	ldr	r3, [fp, #-12]
   40688:	mov	r2, #0
   4068c:	strb	r2, [r3]
   40690:	ldr	r2, [fp, #-12]
   40694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40698:	sub	r3, r2, r3
   4069c:	str	r3, [fp, #-28]	; 0xffffffe4
   406a0:	mov	r3, #0
   406a4:	str	r3, [fp, #-8]
   406a8:	b	40720 <flatcc_json_parser_struct_as_root@@Base+0x3944>
   406ac:	ldr	r3, [fp, #-8]
   406b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   406b4:	add	r3, r2, r3
   406b8:	ldrb	r3, [r3]
   406bc:	strb	r3, [fp, #-29]	; 0xffffffe3
   406c0:	ldr	r3, [fp, #-8]
   406c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   406c8:	add	r3, r2, r3
   406cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   406d0:	sub	r1, r2, #1
   406d4:	ldr	r2, [fp, #-8]
   406d8:	sub	r2, r1, r2
   406dc:	mov	r1, r2
   406e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   406e4:	add	r2, r2, r1
   406e8:	ldrb	r2, [r2]
   406ec:	strb	r2, [r3]
   406f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   406f4:	sub	r2, r3, #1
   406f8:	ldr	r3, [fp, #-8]
   406fc:	sub	r3, r2, r3
   40700:	mov	r2, r3
   40704:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40708:	add	r3, r3, r2
   4070c:	ldrb	r2, [fp, #-29]	; 0xffffffe3
   40710:	strb	r2, [r3]
   40714:	ldr	r3, [fp, #-8]
   40718:	add	r3, r3, #1
   4071c:	str	r3, [fp, #-8]
   40720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40724:	lsr	r2, r3, #31
   40728:	add	r3, r2, r3
   4072c:	asr	r3, r3, #1
   40730:	mov	r2, r3
   40734:	ldr	r3, [fp, #-8]
   40738:	cmp	r2, r3
   4073c:	bgt	406ac <flatcc_json_parser_struct_as_root@@Base+0x38d0>
   40740:	ldr	r2, [fp, #-12]
   40744:	ldr	r3, [fp, #-16]
   40748:	sub	r3, r2, r3
   4074c:	mov	r0, r3
   40750:	add	sp, fp, #0
   40754:	pop	{fp}		; (ldr fp, [sp], #4)
   40758:	bx	lr
   4075c:	strbtvs	r6, [r6], -r7, ror #12
   40760:	push	{r4, r5, fp, lr}
   40764:	add	fp, sp, #12
   40768:	sub	sp, sp, #56	; 0x38
   4076c:	vstr	d0, [fp, #-60]	; 0xffffffc4
   40770:	str	r0, [fp, #-64]	; 0xffffffc0
   40774:	vldr	d0, [fp, #-60]	; 0xffffffc4
   40778:	bl	3f2bc <flatcc_json_parser_struct_as_root@@Base+0x24e0>
   4077c:	strd	r0, [fp, #-28]	; 0xffffffe4
   40780:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40784:	str	r3, [fp, #-32]	; 0xffffffe0
   40788:	ldr	r3, [fp, #-64]	; 0xffffffc0
   4078c:	cmp	r3, #0
   40790:	bne	407b4 <flatcc_json_parser_struct_as_root@@Base+0x39d8>
   40794:	ldr	r3, [pc, #1196]	; 40c48 <flatcc_json_parser_struct_as_root@@Base+0x3e6c>
   40798:	add	r3, pc, r3
   4079c:	mov	r2, #189	; 0xbd
   407a0:	ldr	r1, [pc, #1188]	; 40c4c <flatcc_json_parser_struct_as_root@@Base+0x3e70>
   407a4:	add	r1, pc, r1
   407a8:	ldr	r0, [pc, #1184]	; 40c50 <flatcc_json_parser_struct_as_root@@Base+0x3e74>
   407ac:	add	r0, pc, r0
   407b0:	bl	14610 <__assert_fail@plt>
   407b4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   407b8:	adds	r2, r2, r2
   407bc:	adc	r3, r3, r3
   407c0:	mov	r0, r2
   407c4:	mov	r1, r3
   407c8:	mov	r2, #0
   407cc:	ldr	r3, [pc, #1152]	; 40c54 <flatcc_json_parser_struct_as_root@@Base+0x3e78>
   407d0:	cmp	r1, r3
   407d4:	cmpeq	r0, r2
   407d8:	bls	40808 <flatcc_json_parser_struct_as_root@@Base+0x3a2c>
   407dc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   407e0:	mov	r4, r3
   407e4:	mov	r5, #0
   407e8:	mov	r2, r4
   407ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   407f0:	ldr	r1, [pc, #1120]	; 40c58 <flatcc_json_parser_struct_as_root@@Base+0x3e7c>
   407f4:	add	r1, pc, r1
   407f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   407fc:	bl	145f8 <sprintf@plt>
   40800:	mov	r3, r0
   40804:	b	40c3c <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   40808:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   4080c:	cmp	r2, #0
   40810:	sbcs	r3, r3, #0
   40814:	bge	40844 <flatcc_json_parser_struct_as_root@@Base+0x3a68>
   40818:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4081c:	add	r2, r3, #1
   40820:	str	r2, [fp, #-32]	; 0xffffffe0
   40824:	mov	r2, #45	; 0x2d
   40828:	strb	r2, [r3]
   4082c:	vldr	d7, [fp, #-60]	; 0xffffffc4
   40830:	vneg.f64	d7, d7
   40834:	vstr	d7, [fp, #-60]	; 0xffffffc4
   40838:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   4083c:	add	r3, r3, #-2147483648	; 0x80000000
   40840:	strd	r2, [fp, #-28]	; 0xffffffe4
   40844:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   40848:	orrs	r3, r2, r3
   4084c:	bne	40880 <flatcc_json_parser_struct_as_root@@Base+0x3aa4>
   40850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40854:	add	r2, r3, #1
   40858:	str	r2, [fp, #-32]	; 0xffffffe0
   4085c:	mov	r2, #48	; 0x30
   40860:	strb	r2, [r3]
   40864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40868:	mov	r2, #0
   4086c:	strb	r2, [r3]
   40870:	ldr	r2, [fp, #-32]	; 0xffffffe0
   40874:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40878:	sub	r3, r2, r3
   4087c:	b	40c3c <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   40880:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   40884:	mov	r0, #0
   40888:	ldr	r1, [pc, #972]	; 40c5c <flatcc_json_parser_struct_as_root@@Base+0x3e80>
   4088c:	cmp	r3, r1
   40890:	cmpeq	r2, r0
   40894:	bne	408f0 <flatcc_json_parser_struct_as_root@@Base+0x3b14>
   40898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4089c:	add	r2, r3, #1
   408a0:	str	r2, [fp, #-32]	; 0xffffffe0
   408a4:	mov	r2, #105	; 0x69
   408a8:	strb	r2, [r3]
   408ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   408b0:	add	r2, r3, #1
   408b4:	str	r2, [fp, #-32]	; 0xffffffe0
   408b8:	mov	r2, #110	; 0x6e
   408bc:	strb	r2, [r3]
   408c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   408c4:	add	r2, r3, #1
   408c8:	str	r2, [fp, #-32]	; 0xffffffe0
   408cc:	mov	r2, #102	; 0x66
   408d0:	strb	r2, [r3]
   408d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   408d8:	mov	r2, #0
   408dc:	strb	r2, [r3]
   408e0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   408e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   408e8:	sub	r3, r2, r3
   408ec:	b	40c3c <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   408f0:	sub	r2, fp, #44	; 0x2c
   408f4:	sub	r3, fp, #48	; 0x30
   408f8:	mov	r1, r3
   408fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40900:	vldr	d0, [fp, #-60]	; 0xffffffc4
   40904:	bl	4028c <flatcc_json_parser_struct_as_root@@Base+0x34b0>
   40908:	str	r0, [fp, #-36]	; 0xffffffdc
   4090c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   40910:	cmp	r3, #0
   40914:	bne	40944 <flatcc_json_parser_struct_as_root@@Base+0x3b68>
   40918:	ldrd	r2, [fp, #-60]	; 0xffffffc4
   4091c:	ldr	r1, [pc, #828]	; 40c60 <flatcc_json_parser_struct_as_root@@Base+0x3e84>
   40920:	add	r1, pc, r1
   40924:	ldr	r0, [fp, #-32]	; 0xffffffe0
   40928:	bl	145f8 <sprintf@plt>
   4092c:	mov	r1, r0
   40930:	ldr	r2, [fp, #-32]	; 0xffffffe0
   40934:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40938:	sub	r3, r2, r3
   4093c:	add	r3, r1, r3
   40940:	b	40c3c <flatcc_json_parser_struct_as_root@@Base+0x3e60>
   40944:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40948:	rsb	r2, r3, #0
   4094c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40950:	sub	r3, r3, #1
   40954:	cmp	r3, #1
   40958:	movge	r3, r3
   4095c:	movlt	r3, #1
   40960:	cmp	r2, r3
   40964:	movlt	r3, r2
   40968:	movge	r3, r3
   4096c:	str	r3, [fp, #-40]	; 0xffffffd8
   40970:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40974:	cmp	r3, #0
   40978:	bge	40a48 <flatcc_json_parser_struct_as_root@@Base+0x3c6c>
   4097c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40980:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40984:	add	r3, r2, r3
   40988:	cmn	r3, #2
   4098c:	blt	40a48 <flatcc_json_parser_struct_as_root@@Base+0x3c6c>
   40990:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40994:	rsb	r2, r3, #0
   40998:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4099c:	cmp	r2, r3
   409a0:	blt	40a48 <flatcc_json_parser_struct_as_root@@Base+0x3c6c>
   409a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   409a8:	rsb	r3, r3, #0
   409ac:	ldr	r2, [fp, #-48]	; 0xffffffd0
   409b0:	sub	r3, r3, r2
   409b4:	add	r3, r3, #2
   409b8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   409bc:	add	r3, r2, r3
   409c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   409c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   409c8:	mov	r0, r3
   409cc:	bl	1452c <memmove@plt>
   409d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   409d4:	mov	r2, #48	; 0x30
   409d8:	strb	r2, [r3]
   409dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   409e0:	add	r3, r3, #1
   409e4:	mov	r2, #46	; 0x2e
   409e8:	strb	r2, [r3]
   409ec:	mov	r3, #2
   409f0:	str	r3, [fp, #-16]
   409f4:	b	40a18 <flatcc_json_parser_struct_as_root@@Base+0x3c3c>
   409f8:	ldr	r3, [fp, #-16]
   409fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   40a00:	add	r3, r2, r3
   40a04:	mov	r2, #48	; 0x30
   40a08:	strb	r2, [r3]
   40a0c:	ldr	r3, [fp, #-16]
   40a10:	add	r3, r3, #1
   40a14:	str	r3, [fp, #-16]
   40a18:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40a1c:	rsb	r2, r3, #2
   40a20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40a24:	sub	r2, r2, r3
   40a28:	ldr	r3, [fp, #-16]
   40a2c:	cmp	r2, r3
   40a30:	bgt	409f8 <flatcc_json_parser_struct_as_root@@Base+0x3c1c>
   40a34:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40a38:	ldr	r3, [fp, #-16]
   40a3c:	add	r3, r2, r3
   40a40:	str	r3, [fp, #-48]	; 0xffffffd0
   40a44:	b	40c08 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   40a48:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40a4c:	cmp	r3, #0
   40a50:	bge	40b58 <flatcc_json_parser_struct_as_root@@Base+0x3d7c>
   40a54:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40a58:	cmp	r3, #1
   40a5c:	ble	40b58 <flatcc_json_parser_struct_as_root@@Base+0x3d7c>
   40a60:	mov	r3, #0
   40a64:	str	r3, [fp, #-16]
   40a68:	b	40ab0 <flatcc_json_parser_struct_as_root@@Base+0x3cd4>
   40a6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   40a70:	ldr	r3, [fp, #-16]
   40a74:	sub	r3, r2, r3
   40a78:	mov	r2, r3
   40a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40a80:	add	r3, r3, r2
   40a84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   40a88:	ldr	r2, [fp, #-16]
   40a8c:	sub	r2, r1, r2
   40a90:	sub	r2, r2, #1
   40a94:	ldr	r1, [fp, #-32]	; 0xffffffe0
   40a98:	add	r2, r1, r2
   40a9c:	ldrb	r2, [r2]
   40aa0:	strb	r2, [r3]
   40aa4:	ldr	r3, [fp, #-16]
   40aa8:	add	r3, r3, #1
   40aac:	str	r3, [fp, #-16]
   40ab0:	ldr	r2, [fp, #-16]
   40ab4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40ab8:	cmp	r2, r3
   40abc:	blt	40a6c <flatcc_json_parser_struct_as_root@@Base+0x3c90>
   40ac0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40ac4:	add	r2, r3, #1
   40ac8:	str	r2, [fp, #-48]	; 0xffffffd0
   40acc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   40ad0:	sub	r3, r3, r2
   40ad4:	mov	r2, r3
   40ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40adc:	add	r3, r3, r2
   40ae0:	mov	r2, #46	; 0x2e
   40ae4:	strb	r2, [r3]
   40ae8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40aec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40af0:	add	r3, r2, r3
   40af4:	str	r3, [fp, #-44]	; 0xffffffd4
   40af8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40afc:	cmp	r3, #0
   40b00:	beq	40c08 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   40b04:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40b08:	add	r2, r3, #1
   40b0c:	str	r2, [fp, #-48]	; 0xffffffd0
   40b10:	mov	r2, r3
   40b14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40b18:	add	r3, r3, r2
   40b1c:	mov	r2, #101	; 0x65
   40b20:	strb	r2, [r3]
   40b24:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40b28:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40b2c:	mov	r1, r3
   40b30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40b34:	add	r3, r3, r1
   40b38:	mov	r1, r3
   40b3c:	mov	r0, r2
   40b40:	bl	405c4 <flatcc_json_parser_struct_as_root@@Base+0x37e8>
   40b44:	mov	r2, r0
   40b48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40b4c:	add	r3, r2, r3
   40b50:	str	r3, [fp, #-48]	; 0xffffffd0
   40b54:	b	40c08 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   40b58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40b5c:	cmp	r3, #0
   40b60:	blt	40b70 <flatcc_json_parser_struct_as_root@@Base+0x3d94>
   40b64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40b68:	cmp	r3, #2
   40b6c:	ble	40bc4 <flatcc_json_parser_struct_as_root@@Base+0x3de8>
   40b70:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40b74:	add	r2, r3, #1
   40b78:	str	r2, [fp, #-48]	; 0xffffffd0
   40b7c:	mov	r2, r3
   40b80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40b84:	add	r3, r3, r2
   40b88:	mov	r2, #101	; 0x65
   40b8c:	strb	r2, [r3]
   40b90:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40b94:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40b98:	mov	r1, r3
   40b9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40ba0:	add	r3, r3, r1
   40ba4:	mov	r1, r3
   40ba8:	mov	r0, r2
   40bac:	bl	405c4 <flatcc_json_parser_struct_as_root@@Base+0x37e8>
   40bb0:	mov	r2, r0
   40bb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40bb8:	add	r3, r2, r3
   40bbc:	str	r3, [fp, #-48]	; 0xffffffd0
   40bc0:	b	40c08 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   40bc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40bc8:	cmp	r3, #0
   40bcc:	ble	40c08 <flatcc_json_parser_struct_as_root@@Base+0x3e2c>
   40bd0:	b	40bf4 <flatcc_json_parser_struct_as_root@@Base+0x3e18>
   40bd4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40bd8:	add	r2, r3, #1
   40bdc:	str	r2, [fp, #-48]	; 0xffffffd0
   40be0:	mov	r2, r3
   40be4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40be8:	add	r3, r3, r2
   40bec:	mov	r2, #48	; 0x30
   40bf0:	strb	r2, [r3]
   40bf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40bf8:	sub	r2, r3, #1
   40bfc:	str	r2, [fp, #-44]	; 0xffffffd4
   40c00:	cmp	r3, #0
   40c04:	bgt	40bd4 <flatcc_json_parser_struct_as_root@@Base+0x3df8>
   40c08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40c0c:	mov	r2, r3
   40c10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40c14:	add	r3, r3, r2
   40c18:	mov	r2, #0
   40c1c:	strb	r2, [r3]
   40c20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   40c24:	mov	r2, r3
   40c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   40c2c:	add	r3, r3, r2
   40c30:	mov	r2, r3
   40c34:	ldr	r3, [fp, #-64]	; 0xffffffc0
   40c38:	sub	r3, r2, r3
   40c3c:	mov	r0, r3
   40c40:	sub	sp, fp, #12
   40c44:	pop	{r4, r5, fp, pc}
   40c48:	andeq	r0, r1, r8, asr #28
   40c4c:	andeq	r0, r1, r0, ror #21
   40c50:	andeq	r0, r1, r0, ror fp
   40c54:			; <UNDEFINED> instruction: 0xffe00000
   40c58:	andeq	r0, r1, ip, lsr #22
   40c5c:	svcvc	0x00f00000	; IMB
   40c60:	andeq	r0, r1, r0, lsl sl
   40c64:	push	{fp}		; (str fp, [sp, #-4]!)
   40c68:	add	fp, sp, #0
   40c6c:	sub	sp, sp, #12
   40c70:	str	r0, [fp, #-8]
   40c74:	ldr	r3, [fp, #-8]
   40c78:	cmp	r3, #5
   40c7c:	addls	pc, pc, r3, lsl #2
   40c80:	b	40ce4 <flatcc_json_parser_struct_as_root@@Base+0x3f08>
   40c84:	b	40c9c <flatcc_json_parser_struct_as_root@@Base+0x3ec0>
   40c88:	b	40cc0 <flatcc_json_parser_struct_as_root@@Base+0x3ee4>
   40c8c:	b	40ca8 <flatcc_json_parser_struct_as_root@@Base+0x3ecc>
   40c90:	b	40cb4 <flatcc_json_parser_struct_as_root@@Base+0x3ed8>
   40c94:	b	40ccc <flatcc_json_parser_struct_as_root@@Base+0x3ef0>
   40c98:	b	40cd8 <flatcc_json_parser_struct_as_root@@Base+0x3efc>
   40c9c:	ldr	r3, [pc, #88]	; 40cfc <flatcc_json_parser_struct_as_root@@Base+0x3f20>
   40ca0:	add	r3, pc, r3
   40ca4:	b	40cec <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   40ca8:	ldr	r3, [pc, #80]	; 40d00 <flatcc_json_parser_struct_as_root@@Base+0x3f24>
   40cac:	add	r3, pc, r3
   40cb0:	b	40cec <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   40cb4:	ldr	r3, [pc, #72]	; 40d04 <flatcc_json_parser_struct_as_root@@Base+0x3f28>
   40cb8:	add	r3, pc, r3
   40cbc:	b	40cec <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   40cc0:	ldr	r3, [pc, #64]	; 40d08 <flatcc_json_parser_struct_as_root@@Base+0x3f2c>
   40cc4:	add	r3, pc, r3
   40cc8:	b	40cec <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   40ccc:	ldr	r3, [pc, #56]	; 40d0c <flatcc_json_parser_struct_as_root@@Base+0x3f30>
   40cd0:	add	r3, pc, r3
   40cd4:	b	40cec <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   40cd8:	ldr	r3, [pc, #48]	; 40d10 <flatcc_json_parser_struct_as_root@@Base+0x3f34>
   40cdc:	add	r3, pc, r3
   40ce0:	b	40cec <flatcc_json_parser_struct_as_root@@Base+0x3f10>
   40ce4:	ldr	r3, [pc, #40]	; 40d14 <flatcc_json_parser_struct_as_root@@Base+0x3f38>
   40ce8:	add	r3, pc, r3
   40cec:	mov	r0, r3
   40cf0:	add	sp, fp, #0
   40cf4:	pop	{fp}		; (ldr fp, [sp], #4)
   40cf8:	bx	lr
   40cfc:	muleq	r1, r8, r6
   40d00:	muleq	r1, r0, r6
   40d04:	muleq	r1, r8, r6
   40d08:	muleq	r1, ip, r6
   40d0c:	andeq	r0, r1, r4, lsr #13
   40d10:	andeq	r0, r1, ip, lsr #13
   40d14:			; <UNDEFINED> instruction: 0x000106b8
   40d18:	push	{fp}		; (str fp, [sp, #-4]!)
   40d1c:	add	fp, sp, #0
   40d20:	sub	sp, sp, #28
   40d24:	str	r0, [fp, #-24]	; 0xffffffe8
   40d28:	str	r1, [fp, #-28]	; 0xffffffe4
   40d2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   40d30:	ldr	r3, [pc, #156]	; 40dd4 <flatcc_json_parser_struct_as_root@@Base+0x3ff8>
   40d34:	umull	r1, r3, r3, r2
   40d38:	lsr	r1, r3, #1
   40d3c:	mov	r3, r1
   40d40:	lsl	r3, r3, #1
   40d44:	add	r3, r3, r1
   40d48:	sub	r3, r2, r3
   40d4c:	str	r3, [fp, #-12]
   40d50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40d54:	lsl	r3, r3, #2
   40d58:	ldr	r2, [pc, #116]	; 40dd4 <flatcc_json_parser_struct_as_root@@Base+0x3ff8>
   40d5c:	umull	r2, r3, r2, r3
   40d60:	lsr	r3, r3, #1
   40d64:	add	r3, r3, #3
   40d68:	bic	r3, r3, #3
   40d6c:	str	r3, [fp, #-8]
   40d70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   40d74:	and	r3, r3, #128	; 0x80
   40d78:	str	r3, [fp, #-16]
   40d7c:	ldr	r3, [fp, #-16]
   40d80:	cmp	r3, #0
   40d84:	bne	40dc0 <flatcc_json_parser_struct_as_root@@Base+0x3fe4>
   40d88:	ldr	r3, [fp, #-12]
   40d8c:	cmp	r3, #1
   40d90:	beq	40db0 <flatcc_json_parser_struct_as_root@@Base+0x3fd4>
   40d94:	cmp	r3, #2
   40d98:	beq	40da0 <flatcc_json_parser_struct_as_root@@Base+0x3fc4>
   40d9c:	b	40dc0 <flatcc_json_parser_struct_as_root@@Base+0x3fe4>
   40da0:	ldr	r3, [fp, #-8]
   40da4:	sub	r3, r3, #1
   40da8:	str	r3, [fp, #-8]
   40dac:	b	40dc0 <flatcc_json_parser_struct_as_root@@Base+0x3fe4>
   40db0:	ldr	r3, [fp, #-8]
   40db4:	sub	r3, r3, #2
   40db8:	str	r3, [fp, #-8]
   40dbc:	nop			; (mov r0, r0)
   40dc0:	ldr	r3, [fp, #-8]
   40dc4:	mov	r0, r3
   40dc8:	add	sp, fp, #0
   40dcc:	pop	{fp}		; (ldr fp, [sp], #4)
   40dd0:	bx	lr
   40dd4:	bge	feaeb888 <__bss_end__@@Base+0xfea893dc>
   40dd8:	push	{fp}		; (str fp, [sp, #-4]!)
   40ddc:	add	fp, sp, #0
   40de0:	sub	sp, sp, #20
   40de4:	str	r0, [fp, #-16]
   40de8:	ldr	r3, [fp, #-16]
   40dec:	and	r3, r3, #3
   40df0:	str	r3, [fp, #-8]
   40df4:	ldr	r3, [fp, #-16]
   40df8:	lsr	r2, r3, #2
   40dfc:	mov	r3, r2
   40e00:	lsl	r3, r3, #1
   40e04:	add	r3, r3, r2
   40e08:	str	r3, [fp, #-12]
   40e0c:	ldr	r3, [fp, #-8]
   40e10:	cmp	r3, #2
   40e14:	beq	40e2c <flatcc_json_parser_struct_as_root@@Base+0x4050>
   40e18:	cmp	r3, #3
   40e1c:	bne	40e38 <flatcc_json_parser_struct_as_root@@Base+0x405c>
   40e20:	ldr	r3, [fp, #-12]
   40e24:	add	r3, r3, #2
   40e28:	b	40e3c <flatcc_json_parser_struct_as_root@@Base+0x4060>
   40e2c:	ldr	r3, [fp, #-12]
   40e30:	add	r3, r3, #1
   40e34:	b	40e3c <flatcc_json_parser_struct_as_root@@Base+0x4060>
   40e38:	ldr	r3, [fp, #-12]
   40e3c:	mov	r0, r3
   40e40:	add	sp, fp, #0
   40e44:	pop	{fp}		; (ldr fp, [sp], #4)
   40e48:	bx	lr
   40e4c:	push	{fp}		; (str fp, [sp, #-4]!)
   40e50:	add	fp, sp, #0
   40e54:	sub	sp, sp, #52	; 0x34
   40e58:	str	r0, [fp, #-40]	; 0xffffffd8
   40e5c:	str	r1, [fp, #-44]	; 0xffffffd4
   40e60:	str	r2, [fp, #-48]	; 0xffffffd0
   40e64:	str	r3, [fp, #-52]	; 0xffffffcc
   40e68:	ldr	r3, [pc, #920]	; 41208 <flatcc_json_parser_struct_as_root@@Base+0x442c>
   40e6c:	add	r3, pc, r3
   40e70:	str	r3, [fp, #-20]	; 0xffffffec
   40e74:	ldr	r3, [pc, #912]	; 4120c <flatcc_json_parser_struct_as_root@@Base+0x4430>
   40e78:	add	r3, pc, r3
   40e7c:	str	r3, [fp, #-24]	; 0xffffffe8
   40e80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40e84:	str	r3, [fp, #-28]	; 0xffffffe4
   40e88:	ldr	r3, [fp, #4]
   40e8c:	and	r3, r3, #128	; 0x80
   40e90:	str	r3, [fp, #-32]	; 0xffffffe0
   40e94:	mov	r3, #0
   40e98:	str	r3, [fp, #-12]
   40e9c:	mov	r3, #3
   40ea0:	str	r3, [fp, #-16]
   40ea4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40ea8:	cmp	r3, #0
   40eac:	bne	40ebc <flatcc_json_parser_struct_as_root@@Base+0x40e0>
   40eb0:	mov	r3, #2
   40eb4:	str	r3, [fp, #-16]
   40eb8:	b	411ac <flatcc_json_parser_struct_as_root@@Base+0x43d0>
   40ebc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   40ec0:	ldr	r3, [r3]
   40ec4:	str	r3, [fp, #-12]
   40ec8:	ldr	r3, [fp, #4]
   40ecc:	bic	r3, r3, #224	; 0xe0
   40ed0:	str	r3, [fp, #4]
   40ed4:	ldr	r3, [fp, #4]
   40ed8:	cmp	r3, #0
   40edc:	beq	40eec <flatcc_json_parser_struct_as_root@@Base+0x4110>
   40ee0:	cmp	r3, #1
   40ee4:	beq	40ef8 <flatcc_json_parser_struct_as_root@@Base+0x411c>
   40ee8:	b	411ac <flatcc_json_parser_struct_as_root@@Base+0x43d0>
   40eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   40ef0:	str	r3, [fp, #-8]
   40ef4:	b	40f04 <flatcc_json_parser_struct_as_root@@Base+0x4128>
   40ef8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   40efc:	str	r3, [fp, #-8]
   40f00:	nop			; (mov r0, r0)
   40f04:	mov	r3, #0
   40f08:	str	r3, [fp, #-16]
   40f0c:	b	41010 <flatcc_json_parser_struct_as_root@@Base+0x4234>
   40f10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   40f14:	ldrb	r3, [r3]
   40f18:	lsr	r3, r3, #2
   40f1c:	uxtb	r3, r3
   40f20:	mov	r2, r3
   40f24:	ldr	r3, [fp, #-8]
   40f28:	add	r3, r3, r2
   40f2c:	ldrb	r2, [r3]
   40f30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40f34:	strb	r2, [r3]
   40f38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40f3c:	add	r3, r3, #1
   40f40:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40f44:	ldrb	r2, [r2]
   40f48:	lsl	r2, r2, #4
   40f4c:	and	r2, r2, #48	; 0x30
   40f50:	ldr	r1, [fp, #-44]	; 0xffffffd4
   40f54:	add	r1, r1, #1
   40f58:	ldrb	r1, [r1]
   40f5c:	lsr	r1, r1, #4
   40f60:	uxtb	r1, r1
   40f64:	orr	r2, r2, r1
   40f68:	mov	r1, r2
   40f6c:	ldr	r2, [fp, #-8]
   40f70:	add	r2, r2, r1
   40f74:	ldrb	r2, [r2]
   40f78:	strb	r2, [r3]
   40f7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40f80:	add	r3, r3, #2
   40f84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40f88:	add	r2, r2, #1
   40f8c:	ldrb	r2, [r2]
   40f90:	lsl	r2, r2, #2
   40f94:	and	r2, r2, #60	; 0x3c
   40f98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   40f9c:	add	r1, r1, #2
   40fa0:	ldrb	r1, [r1]
   40fa4:	lsr	r1, r1, #6
   40fa8:	uxtb	r1, r1
   40fac:	orr	r2, r2, r1
   40fb0:	mov	r1, r2
   40fb4:	ldr	r2, [fp, #-8]
   40fb8:	add	r2, r2, r1
   40fbc:	ldrb	r2, [r2]
   40fc0:	strb	r2, [r3]
   40fc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40fc8:	add	r3, r3, #3
   40fcc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   40fd0:	add	r2, r2, #2
   40fd4:	ldrb	r2, [r2]
   40fd8:	and	r2, r2, #63	; 0x3f
   40fdc:	ldr	r1, [fp, #-8]
   40fe0:	add	r2, r1, r2
   40fe4:	ldrb	r2, [r2]
   40fe8:	strb	r2, [r3]
   40fec:	ldr	r3, [fp, #-12]
   40ff0:	sub	r3, r3, #3
   40ff4:	str	r3, [fp, #-12]
   40ff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   40ffc:	add	r3, r3, #4
   41000:	str	r3, [fp, #-40]	; 0xffffffd8
   41004:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41008:	add	r3, r3, #3
   4100c:	str	r3, [fp, #-44]	; 0xffffffd4
   41010:	ldr	r3, [fp, #-12]
   41014:	cmp	r3, #2
   41018:	bhi	40f10 <flatcc_json_parser_struct_as_root@@Base+0x4134>
   4101c:	ldr	r3, [fp, #-12]
   41020:	cmp	r3, #1
   41024:	beq	410f8 <flatcc_json_parser_struct_as_root@@Base+0x431c>
   41028:	cmp	r3, #2
   4102c:	bne	4118c <flatcc_json_parser_struct_as_root@@Base+0x43b0>
   41030:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41034:	ldrb	r3, [r3]
   41038:	lsr	r3, r3, #2
   4103c:	uxtb	r3, r3
   41040:	mov	r2, r3
   41044:	ldr	r3, [fp, #-8]
   41048:	add	r3, r3, r2
   4104c:	ldrb	r2, [r3]
   41050:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41054:	strb	r2, [r3]
   41058:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4105c:	add	r3, r3, #1
   41060:	ldr	r2, [fp, #-44]	; 0xffffffd4
   41064:	ldrb	r2, [r2]
   41068:	lsl	r2, r2, #4
   4106c:	and	r2, r2, #48	; 0x30
   41070:	ldr	r1, [fp, #-44]	; 0xffffffd4
   41074:	add	r1, r1, #1
   41078:	ldrb	r1, [r1]
   4107c:	lsr	r1, r1, #4
   41080:	uxtb	r1, r1
   41084:	orr	r2, r2, r1
   41088:	mov	r1, r2
   4108c:	ldr	r2, [fp, #-8]
   41090:	add	r2, r2, r1
   41094:	ldrb	r2, [r2]
   41098:	strb	r2, [r3]
   4109c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   410a0:	add	r3, r3, #2
   410a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   410a8:	add	r2, r2, #1
   410ac:	ldrb	r2, [r2]
   410b0:	lsl	r2, r2, #2
   410b4:	and	r2, r2, #60	; 0x3c
   410b8:	ldr	r1, [fp, #-8]
   410bc:	add	r2, r1, r2
   410c0:	ldrb	r2, [r2]
   410c4:	strb	r2, [r3]
   410c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   410cc:	add	r3, r3, #3
   410d0:	str	r3, [fp, #-40]	; 0xffffffd8
   410d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   410d8:	cmp	r3, #0
   410dc:	beq	41198 <flatcc_json_parser_struct_as_root@@Base+0x43bc>
   410e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   410e4:	add	r2, r3, #1
   410e8:	str	r2, [fp, #-40]	; 0xffffffd8
   410ec:	mov	r2, #61	; 0x3d
   410f0:	strb	r2, [r3]
   410f4:	b	41198 <flatcc_json_parser_struct_as_root@@Base+0x43bc>
   410f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   410fc:	ldrb	r3, [r3]
   41100:	lsr	r3, r3, #2
   41104:	uxtb	r3, r3
   41108:	mov	r2, r3
   4110c:	ldr	r3, [fp, #-8]
   41110:	add	r3, r3, r2
   41114:	ldrb	r2, [r3]
   41118:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4111c:	strb	r2, [r3]
   41120:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41124:	add	r3, r3, #1
   41128:	ldr	r2, [fp, #-44]	; 0xffffffd4
   4112c:	ldrb	r2, [r2]
   41130:	lsl	r2, r2, #4
   41134:	and	r2, r2, #48	; 0x30
   41138:	ldr	r1, [fp, #-8]
   4113c:	add	r2, r1, r2
   41140:	ldrb	r2, [r2]
   41144:	strb	r2, [r3]
   41148:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4114c:	add	r3, r3, #2
   41150:	str	r3, [fp, #-40]	; 0xffffffd8
   41154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41158:	cmp	r3, #0
   4115c:	beq	411a0 <flatcc_json_parser_struct_as_root@@Base+0x43c4>
   41160:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41164:	add	r2, r3, #1
   41168:	str	r2, [fp, #-40]	; 0xffffffd8
   4116c:	mov	r2, #61	; 0x3d
   41170:	strb	r2, [r3]
   41174:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41178:	add	r2, r3, #1
   4117c:	str	r2, [fp, #-40]	; 0xffffffd8
   41180:	mov	r2, #61	; 0x3d
   41184:	strb	r2, [r3]
   41188:	b	411a0 <flatcc_json_parser_struct_as_root@@Base+0x43c4>
   4118c:	mov	r3, #0
   41190:	str	r3, [fp, #-32]	; 0xffffffe0
   41194:	b	411a4 <flatcc_json_parser_struct_as_root@@Base+0x43c8>
   41198:	nop			; (mov r0, r0)
   4119c:	b	411a4 <flatcc_json_parser_struct_as_root@@Base+0x43c8>
   411a0:	nop			; (mov r0, r0)
   411a4:	mov	r3, #0
   411a8:	str	r3, [fp, #-12]
   411ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   411b0:	cmp	r3, #0
   411b4:	beq	411d0 <flatcc_json_parser_struct_as_root@@Base+0x43f4>
   411b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   411bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   411c0:	sub	r3, r2, r3
   411c4:	mov	r2, r3
   411c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   411cc:	str	r2, [r3]
   411d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   411d4:	cmp	r3, #0
   411d8:	beq	411f4 <flatcc_json_parser_struct_as_root@@Base+0x4418>
   411dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   411e0:	ldr	r2, [r3]
   411e4:	ldr	r3, [fp, #-12]
   411e8:	sub	r2, r2, r3
   411ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   411f0:	str	r2, [r3]
   411f4:	ldr	r3, [fp, #-16]
   411f8:	mov	r0, r3
   411fc:	add	sp, fp, #0
   41200:	pop	{fp}		; (ldr fp, [sp], #4)
   41204:	bx	lr
   41208:	andeq	r0, r1, r4, asr #10
   4120c:	andeq	r0, r1, ip, ror r5
   41210:	push	{fp}		; (str fp, [sp, #-4]!)
   41214:	add	fp, sp, #0
   41218:	sub	sp, sp, #60	; 0x3c
   4121c:	str	r0, [fp, #-48]	; 0xffffffd0
   41220:	str	r1, [fp, #-52]	; 0xffffffcc
   41224:	str	r2, [fp, #-56]	; 0xffffffc8
   41228:	str	r3, [fp, #-60]	; 0xffffffc4
   4122c:	mov	r3, #0
   41230:	str	r3, [fp, #-8]
   41234:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41238:	str	r3, [fp, #-36]	; 0xffffffdc
   4123c:	mvn	r3, #0
   41240:	str	r3, [fp, #-20]	; 0xffffffec
   41244:	mvn	r3, #0
   41248:	str	r3, [fp, #-24]	; 0xffffffe8
   4124c:	ldr	r3, [pc, #1376]	; 417b4 <flatcc_json_parser_struct_as_root@@Base+0x49d8>
   41250:	add	r3, pc, r3
   41254:	str	r3, [fp, #-32]	; 0xffffffe0
   41258:	ldr	r3, [fp, #4]
   4125c:	and	r3, r3, #32
   41260:	str	r3, [fp, #-40]	; 0xffffffd8
   41264:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41268:	cmp	r3, #0
   4126c:	beq	4127c <flatcc_json_parser_struct_as_root@@Base+0x44a0>
   41270:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41274:	ldr	r3, [r3]
   41278:	str	r3, [fp, #-24]	; 0xffffffe8
   4127c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41280:	str	r3, [fp, #-28]	; 0xffffffe4
   41284:	ldr	r3, [fp, #4]
   41288:	bic	r3, r3, #224	; 0xe0
   4128c:	str	r3, [fp, #4]
   41290:	ldr	r3, [fp, #4]
   41294:	cmp	r3, #0
   41298:	beq	412a8 <flatcc_json_parser_struct_as_root@@Base+0x44cc>
   4129c:	cmp	r3, #1
   412a0:	beq	412d0 <flatcc_json_parser_struct_as_root@@Base+0x44f4>
   412a4:	b	412f8 <flatcc_json_parser_struct_as_root@@Base+0x451c>
   412a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   412ac:	cmp	r3, #0
   412b0:	beq	412c0 <flatcc_json_parser_struct_as_root@@Base+0x44e4>
   412b4:	ldr	r3, [pc, #1276]	; 417b8 <flatcc_json_parser_struct_as_root@@Base+0x49dc>
   412b8:	add	r3, pc, r3
   412bc:	b	412c8 <flatcc_json_parser_struct_as_root@@Base+0x44ec>
   412c0:	ldr	r3, [pc, #1268]	; 417bc <flatcc_json_parser_struct_as_root@@Base+0x49e0>
   412c4:	add	r3, pc, r3
   412c8:	str	r3, [fp, #-32]	; 0xffffffe0
   412cc:	b	41304 <flatcc_json_parser_struct_as_root@@Base+0x4528>
   412d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   412d4:	cmp	r3, #0
   412d8:	beq	412e8 <flatcc_json_parser_struct_as_root@@Base+0x450c>
   412dc:	ldr	r3, [pc, #1244]	; 417c0 <flatcc_json_parser_struct_as_root@@Base+0x49e4>
   412e0:	add	r3, pc, r3
   412e4:	b	412f0 <flatcc_json_parser_struct_as_root@@Base+0x4514>
   412e8:	ldr	r3, [pc, #1236]	; 417c4 <flatcc_json_parser_struct_as_root@@Base+0x49e8>
   412ec:	add	r3, pc, r3
   412f0:	str	r3, [fp, #-32]	; 0xffffffe0
   412f4:	b	41304 <flatcc_json_parser_struct_as_root@@Base+0x4528>
   412f8:	mov	r3, #3
   412fc:	str	r3, [fp, #-8]
   41300:	b	415ec <flatcc_json_parser_struct_as_root@@Base+0x4810>
   41304:	ldr	r3, [fp, #-56]	; 0xffffffc8
   41308:	cmp	r3, #0
   4130c:	beq	415e0 <flatcc_json_parser_struct_as_root@@Base+0x4804>
   41310:	ldr	r3, [fp, #-56]	; 0xffffffc8
   41314:	ldr	r3, [r3]
   41318:	cmp	r3, #0
   4131c:	beq	415e0 <flatcc_json_parser_struct_as_root@@Base+0x4804>
   41320:	ldr	r3, [fp, #-56]	; 0xffffffc8
   41324:	ldr	r3, [r3]
   41328:	str	r3, [fp, #-20]	; 0xffffffec
   4132c:	b	415e0 <flatcc_json_parser_struct_as_root@@Base+0x4804>
   41330:	mov	r3, #0
   41334:	str	r3, [fp, #-12]
   41338:	b	41500 <flatcc_json_parser_struct_as_root@@Base+0x4724>
   4133c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41340:	ldr	r3, [fp, #-12]
   41344:	cmp	r2, r3
   41348:	bne	41368 <flatcc_json_parser_struct_as_root@@Base+0x458c>
   4134c:	ldr	r3, [fp, #-12]
   41350:	str	r3, [fp, #-16]
   41354:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41358:	ldr	r3, [fp, #-12]
   4135c:	sub	r3, r2, r3
   41360:	str	r3, [fp, #-24]	; 0xffffffe8
   41364:	b	4163c <flatcc_json_parser_struct_as_root@@Base+0x4860>
   41368:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4136c:	ldr	r3, [fp, #-12]
   41370:	add	r3, r2, r3
   41374:	ldrb	r3, [r3]
   41378:	mov	r2, r3
   4137c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41380:	add	r3, r3, r2
   41384:	ldrb	r1, [r3]
   41388:	sub	r2, fp, #44	; 0x2c
   4138c:	ldr	r3, [fp, #-12]
   41390:	add	r3, r2, r3
   41394:	mov	r2, r1
   41398:	strb	r2, [r3]
   4139c:	sub	r2, fp, #44	; 0x2c
   413a0:	ldr	r3, [fp, #-12]
   413a4:	add	r3, r2, r3
   413a8:	ldrb	r2, [r3]
   413ac:	ldr	r3, [pc, #1044]	; 417c8 <flatcc_json_parser_struct_as_root@@Base+0x49ec>
   413b0:	add	r3, pc, r3
   413b4:	ldrb	r3, [r3]
   413b8:	cmp	r2, r3
   413bc:	bcc	414f4 <flatcc_json_parser_struct_as_root@@Base+0x4718>
   413c0:	sub	r2, fp, #44	; 0x2c
   413c4:	ldr	r3, [fp, #-12]
   413c8:	add	r3, r2, r3
   413cc:	ldrb	r2, [r3]
   413d0:	ldr	r3, [pc, #1012]	; 417cc <flatcc_json_parser_struct_as_root@@Base+0x49f0>
   413d4:	add	r3, pc, r3
   413d8:	ldrb	r3, [r3]
   413dc:	cmp	r2, r3
   413e0:	bne	4140c <flatcc_json_parser_struct_as_root@@Base+0x4630>
   413e4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   413e8:	add	r3, r3, #1
   413ec:	str	r3, [fp, #-52]	; 0xffffffcc
   413f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   413f4:	sub	r3, r3, #1
   413f8:	str	r3, [fp, #-24]	; 0xffffffe8
   413fc:	ldr	r3, [fp, #-12]
   41400:	sub	r3, r3, #1
   41404:	str	r3, [fp, #-12]
   41408:	b	414f4 <flatcc_json_parser_struct_as_root@@Base+0x4718>
   4140c:	ldr	r3, [fp, #-12]
   41410:	str	r3, [fp, #-16]
   41414:	sub	r2, fp, #44	; 0x2c
   41418:	ldr	r3, [fp, #-12]
   4141c:	add	r3, r2, r3
   41420:	ldrb	r2, [r3]
   41424:	ldr	r3, [pc, #932]	; 417d0 <flatcc_json_parser_struct_as_root@@Base+0x49f4>
   41428:	add	r3, pc, r3
   4142c:	ldrb	r3, [r3]
   41430:	cmp	r2, r3
   41434:	bne	414e0 <flatcc_json_parser_struct_as_root@@Base+0x4704>
   41438:	ldr	r3, [fp, #-12]
   4143c:	add	r3, r3, #1
   41440:	str	r3, [fp, #-12]
   41444:	b	414bc <flatcc_json_parser_struct_as_root@@Base+0x46e0>
   41448:	ldr	r2, [fp, #-52]	; 0xffffffcc
   4144c:	ldr	r3, [fp, #-12]
   41450:	add	r3, r2, r3
   41454:	ldrb	r3, [r3]
   41458:	mov	r2, r3
   4145c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41460:	add	r3, r3, r2
   41464:	ldrb	r2, [r3]
   41468:	ldr	r3, [pc, #868]	; 417d4 <flatcc_json_parser_struct_as_root@@Base+0x49f8>
   4146c:	add	r3, pc, r3
   41470:	ldrb	r3, [r3]
   41474:	cmp	r2, r3
   41478:	beq	414b0 <flatcc_json_parser_struct_as_root@@Base+0x46d4>
   4147c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   41480:	ldr	r3, [fp, #-12]
   41484:	add	r3, r2, r3
   41488:	ldrb	r3, [r3]
   4148c:	mov	r2, r3
   41490:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41494:	add	r3, r3, r2
   41498:	ldrb	r2, [r3]
   4149c:	ldr	r3, [pc, #820]	; 417d8 <flatcc_json_parser_struct_as_root@@Base+0x49fc>
   414a0:	add	r3, pc, r3
   414a4:	ldrb	r3, [r3]
   414a8:	cmp	r2, r3
   414ac:	bne	414dc <flatcc_json_parser_struct_as_root@@Base+0x4700>
   414b0:	ldr	r3, [fp, #-12]
   414b4:	add	r3, r3, #1
   414b8:	str	r3, [fp, #-12]
   414bc:	ldr	r2, [fp, #-12]
   414c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   414c4:	cmp	r2, r3
   414c8:	bcs	414e0 <flatcc_json_parser_struct_as_root@@Base+0x4704>
   414cc:	ldr	r3, [fp, #-12]
   414d0:	cmp	r3, #7
   414d4:	bls	41448 <flatcc_json_parser_struct_as_root@@Base+0x466c>
   414d8:	b	414e0 <flatcc_json_parser_struct_as_root@@Base+0x4704>
   414dc:	nop			; (mov r0, r0)
   414e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   414e4:	ldr	r3, [fp, #-12]
   414e8:	sub	r3, r2, r3
   414ec:	str	r3, [fp, #-24]	; 0xffffffe8
   414f0:	b	4163c <flatcc_json_parser_struct_as_root@@Base+0x4860>
   414f4:	ldr	r3, [fp, #-12]
   414f8:	add	r3, r3, #1
   414fc:	str	r3, [fp, #-12]
   41500:	ldr	r3, [fp, #-12]
   41504:	cmp	r3, #3
   41508:	bls	4133c <flatcc_json_parser_struct_as_root@@Base+0x4560>
   4150c:	ldr	r3, [fp, #-20]	; 0xffffffec
   41510:	cmp	r3, #2
   41514:	bls	41784 <flatcc_json_parser_struct_as_root@@Base+0x49a8>
   41518:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   4151c:	lsl	r3, r3, #2
   41520:	sxtb	r2, r3
   41524:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   41528:	lsr	r3, r3, #4
   4152c:	uxtb	r3, r3
   41530:	sxtb	r3, r3
   41534:	orr	r3, r2, r3
   41538:	sxtb	r3, r3
   4153c:	uxtb	r2, r3
   41540:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41544:	strb	r2, [r3]
   41548:	ldr	r3, [fp, #-48]	; 0xffffffd0
   4154c:	add	r3, r3, #1
   41550:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   41554:	lsl	r2, r2, #4
   41558:	sxtb	r1, r2
   4155c:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   41560:	lsr	r2, r2, #2
   41564:	uxtb	r2, r2
   41568:	sxtb	r2, r2
   4156c:	orr	r2, r1, r2
   41570:	sxtb	r2, r2
   41574:	uxtb	r2, r2
   41578:	strb	r2, [r3]
   4157c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41580:	add	r3, r3, #2
   41584:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   41588:	lsl	r2, r2, #6
   4158c:	sxtb	r1, r2
   41590:	ldrb	r2, [fp, #-41]	; 0xffffffd7
   41594:	sxtb	r2, r2
   41598:	orr	r2, r1, r2
   4159c:	sxtb	r2, r2
   415a0:	uxtb	r2, r2
   415a4:	strb	r2, [r3]
   415a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   415ac:	add	r3, r3, #3
   415b0:	str	r3, [fp, #-48]	; 0xffffffd0
   415b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   415b8:	add	r3, r3, #4
   415bc:	str	r3, [fp, #-52]	; 0xffffffcc
   415c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   415c4:	sub	r3, r3, #3
   415c8:	str	r3, [fp, #-20]	; 0xffffffec
   415cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   415d0:	sub	r3, r3, #4
   415d4:	str	r3, [fp, #-24]	; 0xffffffe8
   415d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   415dc:	str	r3, [fp, #-28]	; 0xffffffe4
   415e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   415e4:	cmp	r3, #0
   415e8:	bne	41330 <flatcc_json_parser_struct_as_root@@Base+0x4554>
   415ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   415f0:	cmp	r3, #0
   415f4:	beq	41610 <flatcc_json_parser_struct_as_root@@Base+0x4834>
   415f8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   415fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   41600:	sub	r3, r2, r3
   41604:	mov	r2, r3
   41608:	ldr	r3, [fp, #-56]	; 0xffffffc8
   4160c:	str	r2, [r3]
   41610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41614:	cmp	r3, #0
   41618:	beq	41634 <flatcc_json_parser_struct_as_root@@Base+0x4858>
   4161c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41620:	ldr	r2, [r3]
   41624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41628:	sub	r2, r2, r3
   4162c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   41630:	str	r2, [r3]
   41634:	ldr	r3, [fp, #-8]
   41638:	b	417a4 <flatcc_json_parser_struct_as_root@@Base+0x49c8>
   4163c:	ldr	r3, [fp, #-16]
   41640:	cmp	r3, #2
   41644:	beq	4165c <flatcc_json_parser_struct_as_root@@Base+0x4880>
   41648:	cmp	r3, #3
   4164c:	beq	416bc <flatcc_json_parser_struct_as_root@@Base+0x48e0>
   41650:	cmp	r3, #0
   41654:	beq	4175c <flatcc_json_parser_struct_as_root@@Base+0x4980>
   41658:	b	41750 <flatcc_json_parser_struct_as_root@@Base+0x4974>
   4165c:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   41660:	lsl	r3, r3, #4
   41664:	uxtb	r3, r3
   41668:	cmp	r3, #0
   4166c:	bne	4176c <flatcc_json_parser_struct_as_root@@Base+0x4990>
   41670:	ldr	r3, [fp, #-20]	; 0xffffffec
   41674:	cmp	r3, #0
   41678:	beq	4178c <flatcc_json_parser_struct_as_root@@Base+0x49b0>
   4167c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   41680:	lsl	r3, r3, #2
   41684:	sxtb	r2, r3
   41688:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   4168c:	lsr	r3, r3, #4
   41690:	uxtb	r3, r3
   41694:	sxtb	r3, r3
   41698:	orr	r3, r2, r3
   4169c:	sxtb	r3, r3
   416a0:	uxtb	r2, r3
   416a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   416a8:	strb	r2, [r3]
   416ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   416b0:	add	r3, r3, #1
   416b4:	str	r3, [fp, #-48]	; 0xffffffd0
   416b8:	b	41760 <flatcc_json_parser_struct_as_root@@Base+0x4984>
   416bc:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   416c0:	lsl	r3, r3, #6
   416c4:	uxtb	r3, r3
   416c8:	cmp	r3, #0
   416cc:	bne	41774 <flatcc_json_parser_struct_as_root@@Base+0x4998>
   416d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   416d4:	cmp	r3, #1
   416d8:	bls	41794 <flatcc_json_parser_struct_as_root@@Base+0x49b8>
   416dc:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   416e0:	lsl	r3, r3, #2
   416e4:	sxtb	r2, r3
   416e8:	ldrb	r3, [fp, #-43]	; 0xffffffd5
   416ec:	lsr	r3, r3, #4
   416f0:	uxtb	r3, r3
   416f4:	sxtb	r3, r3
   416f8:	orr	r3, r2, r3
   416fc:	sxtb	r3, r3
   41700:	uxtb	r2, r3
   41704:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41708:	strb	r2, [r3]
   4170c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41710:	add	r3, r3, #1
   41714:	ldrb	r2, [fp, #-43]	; 0xffffffd5
   41718:	lsl	r2, r2, #4
   4171c:	sxtb	r1, r2
   41720:	ldrb	r2, [fp, #-42]	; 0xffffffd6
   41724:	lsr	r2, r2, #2
   41728:	uxtb	r2, r2
   4172c:	sxtb	r2, r2
   41730:	orr	r2, r1, r2
   41734:	sxtb	r2, r2
   41738:	uxtb	r2, r2
   4173c:	strb	r2, [r3]
   41740:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41744:	add	r3, r3, #2
   41748:	str	r3, [fp, #-48]	; 0xffffffd0
   4174c:	b	41760 <flatcc_json_parser_struct_as_root@@Base+0x4984>
   41750:	mov	r3, #4
   41754:	str	r3, [fp, #-8]
   41758:	b	415ec <flatcc_json_parser_struct_as_root@@Base+0x4810>
   4175c:	nop			; (mov r0, r0)
   41760:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41764:	str	r3, [fp, #-28]	; 0xffffffe4
   41768:	b	415ec <flatcc_json_parser_struct_as_root@@Base+0x4810>
   4176c:	nop			; (mov r0, r0)
   41770:	b	41778 <flatcc_json_parser_struct_as_root@@Base+0x499c>
   41774:	nop			; (mov r0, r0)
   41778:	mov	r3, #5
   4177c:	str	r3, [fp, #-8]
   41780:	b	415ec <flatcc_json_parser_struct_as_root@@Base+0x4810>
   41784:	nop			; (mov r0, r0)
   41788:	b	41798 <flatcc_json_parser_struct_as_root@@Base+0x49bc>
   4178c:	nop			; (mov r0, r0)
   41790:	b	41798 <flatcc_json_parser_struct_as_root@@Base+0x49bc>
   41794:	nop			; (mov r0, r0)
   41798:	mov	r3, #1
   4179c:	str	r3, [fp, #-8]
   417a0:	b	415ec <flatcc_json_parser_struct_as_root@@Base+0x4810>
   417a4:	mov	r0, r3
   417a8:	add	sp, fp, #0
   417ac:	pop	{fp}		; (ldr fp, [sp], #4)
   417b0:	bx	lr
   417b4:	andeq	r0, r1, r4, lsr #7
   417b8:	andeq	r0, r1, ip, lsr r4
   417bc:	andeq	r0, r1, r0, lsr r3
   417c0:	andeq	r0, r1, r4, lsl r5
   417c4:	andeq	r0, r1, r8, lsl #12
   417c8:	andeq	r0, r1, r4, asr #12
   417cc:	andeq	r0, r1, r1, lsr #12
   417d0:	andeq	r0, r1, lr, asr #11
   417d4:	andeq	r0, r1, sl, lsl #11
   417d8:	andeq	r0, r1, r5, asr r5

000417dc <flatcc_json_printer_error_string@@Base>:
   417dc:	push	{fp}		; (str fp, [sp, #-4]!)
   417e0:	add	fp, sp, #0
   417e4:	sub	sp, sp, #12
   417e8:	str	r0, [fp, #-8]
   417ec:	ldr	r3, [fp, #-8]
   417f0:	cmp	r3, #3
   417f4:	addls	pc, pc, r3, lsl #2
   417f8:	b	4183c <flatcc_json_printer_error_string@@Base+0x60>
   417fc:	b	4180c <flatcc_json_printer_error_string@@Base+0x30>
   41800:	b	41818 <flatcc_json_printer_error_string@@Base+0x3c>
   41804:	b	41824 <flatcc_json_printer_error_string@@Base+0x48>
   41808:	b	41830 <flatcc_json_printer_error_string@@Base+0x54>
   4180c:	ldr	r3, [pc, #64]	; 41854 <flatcc_json_printer_error_string@@Base+0x78>
   41810:	add	r3, pc, r3
   41814:	b	41844 <flatcc_json_printer_error_string@@Base+0x68>
   41818:	ldr	r3, [pc, #56]	; 41858 <flatcc_json_printer_error_string@@Base+0x7c>
   4181c:	add	r3, pc, r3
   41820:	b	41844 <flatcc_json_printer_error_string@@Base+0x68>
   41824:	ldr	r3, [pc, #48]	; 4185c <flatcc_json_printer_error_string@@Base+0x80>
   41828:	add	r3, pc, r3
   4182c:	b	41844 <flatcc_json_printer_error_string@@Base+0x68>
   41830:	ldr	r3, [pc, #40]	; 41860 <flatcc_json_printer_error_string@@Base+0x84>
   41834:	add	r3, pc, r3
   41838:	b	41844 <flatcc_json_printer_error_string@@Base+0x68>
   4183c:	ldr	r3, [pc, #32]	; 41864 <flatcc_json_printer_error_string@@Base+0x88>
   41840:	add	r3, pc, r3
   41844:	mov	r0, r3
   41848:	add	sp, fp, #0
   4184c:	pop	{fp}		; (ldr fp, [sp], #4)
   41850:	bx	lr
   41854:	andeq	pc, r0, r8, lsr #22
   41858:	andeq	pc, r0, ip, lsl ip	; <UNPREDICTABLE>
   4185c:	andeq	pc, r0, ip, lsl ip	; <UNPREDICTABLE>
   41860:	andeq	pc, r0, r0, lsr #24
   41864:	andeq	pc, r0, r0, lsr #24
   41868:	push	{fp, lr}
   4186c:	add	fp, sp, #4
   41870:	sub	sp, sp, #8
   41874:	str	r0, [fp, #-8]
   41878:	ldr	r0, [fp, #-8]
   4187c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   41880:	mov	r2, r0
   41884:	ldr	r3, [fp, #-8]
   41888:	add	r3, r3, r2
   4188c:	mov	r0, r3
   41890:	sub	sp, fp, #4
   41894:	pop	{fp, pc}
   41898:	push	{fp, lr}
   4189c:	add	fp, sp, #4
   418a0:	sub	sp, sp, #8
   418a4:	str	r0, [fp, #-8]
   418a8:	str	r1, [fp, #-12]
   418ac:	ldr	r2, [fp, #-8]
   418b0:	ldr	r3, [fp, #-12]
   418b4:	add	r3, r2, r3
   418b8:	mov	r0, r3
   418bc:	bl	3d3c8 <flatcc_json_parser_struct_as_root@@Base+0x5ec>
   418c0:	mov	r3, r0
   418c4:	mov	r0, r3
   418c8:	sub	sp, fp, #4
   418cc:	pop	{fp, pc}
   418d0:	push	{fp, lr}
   418d4:	add	fp, sp, #4
   418d8:	sub	sp, sp, #16
   418dc:	str	r0, [fp, #-16]
   418e0:	str	r1, [fp, #-20]	; 0xffffffec
   418e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   418e8:	add	r3, r3, #2
   418ec:	lsl	r3, r3, #1
   418f0:	str	r3, [fp, #-8]
   418f4:	ldr	r3, [fp, #-16]
   418f8:	ldr	r2, [r3, #8]
   418fc:	ldr	r3, [fp, #-8]
   41900:	cmp	r2, r3
   41904:	bgt	41910 <flatcc_json_printer_error_string@@Base+0x134>
   41908:	mov	r3, #0
   4190c:	b	41954 <flatcc_json_printer_error_string@@Base+0x178>
   41910:	ldr	r3, [fp, #-16]
   41914:	ldr	r3, [r3, #4]
   41918:	ldr	r2, [fp, #-8]
   4191c:	mov	r1, r2
   41920:	mov	r0, r3
   41924:	bl	41898 <flatcc_json_printer_error_string@@Base+0xbc>
   41928:	mov	r3, r0
   4192c:	str	r3, [fp, #-8]
   41930:	ldr	r3, [fp, #-8]
   41934:	cmp	r3, #0
   41938:	bne	41944 <flatcc_json_printer_error_string@@Base+0x168>
   4193c:	mov	r3, #0
   41940:	b	41954 <flatcc_json_printer_error_string@@Base+0x178>
   41944:	ldr	r3, [fp, #-16]
   41948:	ldr	r2, [r3]
   4194c:	ldr	r3, [fp, #-8]
   41950:	add	r3, r2, r3
   41954:	mov	r0, r3
   41958:	sub	sp, fp, #4
   4195c:	pop	{fp, pc}

00041960 <flatcc_json_printer_fmt_float@@Base>:
   41960:	push	{fp, lr}
   41964:	add	fp, sp, #4
   41968:	sub	sp, sp, #8
   4196c:	str	r0, [fp, #-8]
   41970:	vstr	s0, [fp, #-12]
   41974:	vldr	s15, [fp, #-12]
   41978:	vcvt.f64.f32	d7, s15
   4197c:	ldr	r0, [fp, #-8]
   41980:	vmov.f64	d0, d7
   41984:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   41988:	mov	r3, r0
   4198c:	mov	r0, r3
   41990:	sub	sp, fp, #4
   41994:	pop	{fp, pc}

00041998 <flatcc_json_printer_fmt_double@@Base>:
   41998:	push	{fp, lr}
   4199c:	add	fp, sp, #4
   419a0:	sub	sp, sp, #16
   419a4:	str	r0, [fp, #-8]
   419a8:	vstr	d0, [fp, #-20]	; 0xffffffec
   419ac:	ldr	r0, [fp, #-8]
   419b0:	vldr	d0, [fp, #-20]	; 0xffffffec
   419b4:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   419b8:	mov	r3, r0
   419bc:	mov	r0, r3
   419c0:	sub	sp, fp, #4
   419c4:	pop	{fp, pc}

000419c8 <flatcc_json_printer_fmt_bool@@Base>:
   419c8:	push	{fp, lr}
   419cc:	add	fp, sp, #4
   419d0:	sub	sp, sp, #8
   419d4:	str	r0, [fp, #-8]
   419d8:	str	r1, [fp, #-12]
   419dc:	ldr	r3, [fp, #-12]
   419e0:	cmp	r3, #0
   419e4:	beq	41a08 <flatcc_json_printer_fmt_bool@@Base+0x40>
   419e8:	mov	r2, #4
   419ec:	ldr	r3, [pc, #60]	; 41a30 <flatcc_json_printer_fmt_bool@@Base+0x68>
   419f0:	add	r3, pc, r3
   419f4:	mov	r1, r3
   419f8:	ldr	r0, [fp, #-8]
   419fc:	bl	14544 <memcpy@plt>
   41a00:	mov	r3, #4
   41a04:	b	41a24 <flatcc_json_printer_fmt_bool@@Base+0x5c>
   41a08:	mov	r2, #5
   41a0c:	ldr	r3, [pc, #32]	; 41a34 <flatcc_json_printer_fmt_bool@@Base+0x6c>
   41a10:	add	r3, pc, r3
   41a14:	mov	r1, r3
   41a18:	ldr	r0, [fp, #-8]
   41a1c:	bl	14544 <memcpy@plt>
   41a20:	mov	r3, #5
   41a24:	mov	r0, r3
   41a28:	sub	sp, fp, #4
   41a2c:	pop	{fp, pc}
   41a30:	andeq	pc, r0, r8, ror sl	; <UNPREDICTABLE>
   41a34:	andeq	pc, r0, r0, ror #20
   41a38:	push	{fp, lr}
   41a3c:	add	fp, sp, #4
   41a40:	sub	sp, sp, #24
   41a44:	str	r0, [fp, #-16]
   41a48:	str	r1, [fp, #-20]	; 0xffffffec
   41a4c:	str	r2, [fp, #-24]	; 0xffffffe8
   41a50:	ldr	r3, [fp, #-16]
   41a54:	ldr	r2, [r3, #20]
   41a58:	ldr	r3, [fp, #-16]
   41a5c:	ldr	r3, [r3, #16]
   41a60:	cmp	r2, r3
   41a64:	bcc	41a7c <flatcc_json_printer_fmt_bool@@Base+0xb4>
   41a68:	ldr	r3, [fp, #-16]
   41a6c:	ldr	r3, [r3, #44]	; 0x2c
   41a70:	mov	r1, #0
   41a74:	ldr	r0, [fp, #-16]
   41a78:	blx	r3
   41a7c:	ldr	r3, [fp, #-16]
   41a80:	ldr	r3, [r3, #16]
   41a84:	mov	r2, r3
   41a88:	ldr	r3, [fp, #-16]
   41a8c:	ldr	r3, [r3, #20]
   41a90:	sub	r3, r2, r3
   41a94:	str	r3, [fp, #-8]
   41a98:	b	41b1c <flatcc_json_printer_fmt_bool@@Base+0x154>
   41a9c:	ldr	r3, [fp, #-16]
   41aa0:	ldr	r3, [r3, #20]
   41aa4:	ldr	r2, [fp, #-8]
   41aa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   41aac:	mov	r0, r3
   41ab0:	bl	14544 <memcpy@plt>
   41ab4:	ldr	r3, [fp, #-16]
   41ab8:	ldr	r2, [r3, #20]
   41abc:	ldr	r3, [fp, #-8]
   41ac0:	add	r2, r2, r3
   41ac4:	ldr	r3, [fp, #-16]
   41ac8:	str	r2, [r3, #20]
   41acc:	ldr	r2, [fp, #-20]	; 0xffffffec
   41ad0:	ldr	r3, [fp, #-8]
   41ad4:	add	r3, r2, r3
   41ad8:	str	r3, [fp, #-20]	; 0xffffffec
   41adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41ae0:	ldr	r3, [fp, #-8]
   41ae4:	sub	r3, r2, r3
   41ae8:	str	r3, [fp, #-24]	; 0xffffffe8
   41aec:	ldr	r3, [fp, #-16]
   41af0:	ldr	r3, [r3, #44]	; 0x2c
   41af4:	mov	r1, #0
   41af8:	ldr	r0, [fp, #-16]
   41afc:	blx	r3
   41b00:	ldr	r3, [fp, #-16]
   41b04:	ldr	r3, [r3, #16]
   41b08:	mov	r2, r3
   41b0c:	ldr	r3, [fp, #-16]
   41b10:	ldr	r3, [r3, #20]
   41b14:	sub	r3, r2, r3
   41b18:	str	r3, [fp, #-8]
   41b1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41b20:	ldr	r3, [fp, #-8]
   41b24:	cmp	r2, r3
   41b28:	bhi	41a9c <flatcc_json_printer_fmt_bool@@Base+0xd4>
   41b2c:	ldr	r3, [fp, #-16]
   41b30:	ldr	r3, [r3, #20]
   41b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41b38:	ldr	r1, [fp, #-20]	; 0xffffffec
   41b3c:	mov	r0, r3
   41b40:	bl	14544 <memcpy@plt>
   41b44:	ldr	r3, [fp, #-16]
   41b48:	ldr	r2, [r3, #20]
   41b4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41b50:	add	r2, r2, r3
   41b54:	ldr	r3, [fp, #-16]
   41b58:	str	r2, [r3, #20]
   41b5c:	nop			; (mov r0, r0)
   41b60:	sub	sp, fp, #4
   41b64:	pop	{fp, pc}
   41b68:	push	{fp, lr}
   41b6c:	add	fp, sp, #4
   41b70:	sub	sp, sp, #16
   41b74:	str	r0, [fp, #-8]
   41b78:	str	r1, [fp, #-12]
   41b7c:	str	r2, [fp, #-16]
   41b80:	ldr	r3, [fp, #-8]
   41b84:	ldr	r2, [r3, #20]
   41b88:	ldr	r3, [fp, #-16]
   41b8c:	add	r2, r2, r3
   41b90:	ldr	r3, [fp, #-8]
   41b94:	ldr	r3, [r3, #16]
   41b98:	cmp	r2, r3
   41b9c:	bcc	41bb4 <flatcc_json_printer_fmt_bool@@Base+0x1ec>
   41ba0:	ldr	r2, [fp, #-16]
   41ba4:	ldr	r1, [fp, #-12]
   41ba8:	ldr	r0, [fp, #-8]
   41bac:	bl	41a38 <flatcc_json_printer_fmt_bool@@Base+0x70>
   41bb0:	b	41be4 <flatcc_json_printer_fmt_bool@@Base+0x21c>
   41bb4:	ldr	r3, [fp, #-8]
   41bb8:	ldr	r3, [r3, #20]
   41bbc:	ldr	r2, [fp, #-16]
   41bc0:	ldr	r1, [fp, #-12]
   41bc4:	mov	r0, r3
   41bc8:	bl	14544 <memcpy@plt>
   41bcc:	ldr	r3, [fp, #-8]
   41bd0:	ldr	r2, [r3, #20]
   41bd4:	ldr	r3, [fp, #-16]
   41bd8:	add	r2, r2, r3
   41bdc:	ldr	r3, [fp, #-8]
   41be0:	str	r2, [r3, #20]
   41be4:	nop			; (mov r0, r0)
   41be8:	sub	sp, fp, #4
   41bec:	pop	{fp, pc}
   41bf0:	push	{fp, lr}
   41bf4:	add	fp, sp, #4
   41bf8:	sub	sp, sp, #32
   41bfc:	str	r0, [fp, #-24]	; 0xffffffe8
   41c00:	str	r1, [fp, #-28]	; 0xffffffe4
   41c04:	str	r2, [fp, #-32]	; 0xffffffe0
   41c08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41c0c:	str	r3, [fp, #-8]
   41c10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41c14:	ldr	r3, [r3, #20]
   41c18:	add	r1, r3, #1
   41c1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41c20:	str	r1, [r2, #20]
   41c24:	mov	r2, #34	; 0x22
   41c28:	strb	r2, [r3]
   41c2c:	ldr	r3, [fp, #-8]
   41c30:	ldrb	r3, [r3]
   41c34:	strb	r3, [fp, #-9]
   41c38:	b	41c54 <flatcc_json_printer_fmt_bool@@Base+0x28c>
   41c3c:	ldr	r3, [fp, #-8]
   41c40:	add	r3, r3, #1
   41c44:	str	r3, [fp, #-8]
   41c48:	ldr	r3, [fp, #-8]
   41c4c:	ldrb	r3, [r3]
   41c50:	strb	r3, [fp, #-9]
   41c54:	ldrb	r3, [fp, #-9]
   41c58:	cmp	r3, #31
   41c5c:	bls	41c78 <flatcc_json_printer_fmt_bool@@Base+0x2b0>
   41c60:	ldrb	r3, [fp, #-9]
   41c64:	cmp	r3, #34	; 0x22
   41c68:	beq	41c78 <flatcc_json_printer_fmt_bool@@Base+0x2b0>
   41c6c:	ldrb	r3, [fp, #-9]
   41c70:	cmp	r3, #92	; 0x5c
   41c74:	bne	41c3c <flatcc_json_printer_fmt_bool@@Base+0x274>
   41c78:	ldr	r2, [fp, #-8]
   41c7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41c80:	sub	r3, r2, r3
   41c84:	str	r3, [fp, #-16]
   41c88:	ldr	r2, [fp, #-16]
   41c8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   41c90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   41c94:	bl	41b68 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   41c98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   41c9c:	ldr	r3, [fp, #-16]
   41ca0:	sub	r3, r2, r3
   41ca4:	str	r3, [fp, #-32]	; 0xffffffe0
   41ca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41cac:	cmp	r3, #0
   41cb0:	beq	41f24 <flatcc_json_printer_fmt_bool@@Base+0x55c>
   41cb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   41cb8:	ldr	r3, [fp, #-16]
   41cbc:	add	r3, r2, r3
   41cc0:	str	r3, [fp, #-28]	; 0xffffffe4
   41cc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41cc8:	ldr	r3, [r3, #20]
   41ccc:	add	r1, r3, #1
   41cd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41cd4:	str	r1, [r2, #20]
   41cd8:	mov	r2, #92	; 0x5c
   41cdc:	strb	r2, [r3]
   41ce0:	ldrb	r3, [fp, #-9]
   41ce4:	cmp	r3, #12
   41ce8:	beq	41d8c <flatcc_json_printer_fmt_bool@@Base+0x3c4>
   41cec:	cmp	r3, #12
   41cf0:	bgt	41d10 <flatcc_json_printer_fmt_bool@@Base+0x348>
   41cf4:	cmp	r3, #9
   41cf8:	beq	41d6c <flatcc_json_printer_fmt_bool@@Base+0x3a4>
   41cfc:	cmp	r3, #10
   41d00:	beq	41dcc <flatcc_json_printer_fmt_bool@@Base+0x404>
   41d04:	cmp	r3, #8
   41d08:	beq	41dec <flatcc_json_printer_fmt_bool@@Base+0x424>
   41d0c:	b	41e0c <flatcc_json_printer_fmt_bool@@Base+0x444>
   41d10:	cmp	r3, #34	; 0x22
   41d14:	beq	41d2c <flatcc_json_printer_fmt_bool@@Base+0x364>
   41d18:	cmp	r3, #92	; 0x5c
   41d1c:	beq	41d4c <flatcc_json_printer_fmt_bool@@Base+0x384>
   41d20:	cmp	r3, #13
   41d24:	beq	41dac <flatcc_json_printer_fmt_bool@@Base+0x3e4>
   41d28:	b	41e0c <flatcc_json_printer_fmt_bool@@Base+0x444>
   41d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41d30:	ldr	r3, [r3, #20]
   41d34:	add	r1, r3, #1
   41d38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41d3c:	str	r1, [r2, #20]
   41d40:	mov	r2, #34	; 0x22
   41d44:	strb	r2, [r3]
   41d48:	b	41efc <flatcc_json_printer_fmt_bool@@Base+0x534>
   41d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41d50:	ldr	r3, [r3, #20]
   41d54:	add	r1, r3, #1
   41d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41d5c:	str	r1, [r2, #20]
   41d60:	mov	r2, #92	; 0x5c
   41d64:	strb	r2, [r3]
   41d68:	b	41efc <flatcc_json_printer_fmt_bool@@Base+0x534>
   41d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41d70:	ldr	r3, [r3, #20]
   41d74:	add	r1, r3, #1
   41d78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41d7c:	str	r1, [r2, #20]
   41d80:	mov	r2, #116	; 0x74
   41d84:	strb	r2, [r3]
   41d88:	b	41efc <flatcc_json_printer_fmt_bool@@Base+0x534>
   41d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41d90:	ldr	r3, [r3, #20]
   41d94:	add	r1, r3, #1
   41d98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41d9c:	str	r1, [r2, #20]
   41da0:	mov	r2, #102	; 0x66
   41da4:	strb	r2, [r3]
   41da8:	b	41efc <flatcc_json_printer_fmt_bool@@Base+0x534>
   41dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41db0:	ldr	r3, [r3, #20]
   41db4:	add	r1, r3, #1
   41db8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41dbc:	str	r1, [r2, #20]
   41dc0:	mov	r2, #114	; 0x72
   41dc4:	strb	r2, [r3]
   41dc8:	b	41efc <flatcc_json_printer_fmt_bool@@Base+0x534>
   41dcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41dd0:	ldr	r3, [r3, #20]
   41dd4:	add	r1, r3, #1
   41dd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41ddc:	str	r1, [r2, #20]
   41de0:	mov	r2, #110	; 0x6e
   41de4:	strb	r2, [r3]
   41de8:	b	41efc <flatcc_json_printer_fmt_bool@@Base+0x534>
   41dec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41df0:	ldr	r3, [r3, #20]
   41df4:	add	r1, r3, #1
   41df8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41dfc:	str	r1, [r2, #20]
   41e00:	mov	r2, #98	; 0x62
   41e04:	strb	r2, [r3]
   41e08:	b	41efc <flatcc_json_printer_fmt_bool@@Base+0x534>
   41e0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41e10:	ldr	r3, [r3, #20]
   41e14:	add	r1, r3, #1
   41e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41e1c:	str	r1, [r2, #20]
   41e20:	mov	r2, #117	; 0x75
   41e24:	strb	r2, [r3]
   41e28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41e2c:	ldr	r3, [r3, #20]
   41e30:	add	r1, r3, #1
   41e34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41e38:	str	r1, [r2, #20]
   41e3c:	mov	r2, #48	; 0x30
   41e40:	strb	r2, [r3]
   41e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41e48:	ldr	r3, [r3, #20]
   41e4c:	add	r1, r3, #1
   41e50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41e54:	str	r1, [r2, #20]
   41e58:	mov	r2, #48	; 0x30
   41e5c:	strb	r2, [r3]
   41e60:	ldrb	r3, [fp, #-9]
   41e64:	lsr	r3, r3, #4
   41e68:	strb	r3, [fp, #-17]	; 0xffffffef
   41e6c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   41e70:	cmp	r3, #9
   41e74:	bhi	41e80 <flatcc_json_printer_fmt_bool@@Base+0x4b8>
   41e78:	mov	r2, #48	; 0x30
   41e7c:	b	41e84 <flatcc_json_printer_fmt_bool@@Base+0x4bc>
   41e80:	mov	r2, #87	; 0x57
   41e84:	ldrb	r3, [fp, #-17]	; 0xffffffef
   41e88:	add	r3, r2, r3
   41e8c:	strb	r3, [fp, #-17]	; 0xffffffef
   41e90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41e94:	ldr	r3, [r3, #20]
   41e98:	add	r1, r3, #1
   41e9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41ea0:	str	r1, [r2, #20]
   41ea4:	ldrb	r2, [fp, #-17]	; 0xffffffef
   41ea8:	strb	r2, [r3]
   41eac:	ldrb	r3, [fp, #-9]
   41eb0:	and	r3, r3, #15
   41eb4:	strb	r3, [fp, #-17]	; 0xffffffef
   41eb8:	ldrb	r3, [fp, #-17]	; 0xffffffef
   41ebc:	cmp	r3, #9
   41ec0:	bhi	41ecc <flatcc_json_printer_fmt_bool@@Base+0x504>
   41ec4:	mov	r2, #48	; 0x30
   41ec8:	b	41ed0 <flatcc_json_printer_fmt_bool@@Base+0x508>
   41ecc:	mov	r2, #87	; 0x57
   41ed0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   41ed4:	add	r3, r2, r3
   41ed8:	strb	r3, [fp, #-17]	; 0xffffffef
   41edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41ee0:	ldr	r3, [r3, #20]
   41ee4:	add	r1, r3, #1
   41ee8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41eec:	str	r1, [r2, #20]
   41ef0:	ldrb	r2, [fp, #-17]	; 0xffffffef
   41ef4:	strb	r2, [r3]
   41ef8:	nop			; (mov r0, r0)
   41efc:	ldr	r3, [fp, #-8]
   41f00:	add	r3, r3, #1
   41f04:	str	r3, [fp, #-8]
   41f08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   41f0c:	sub	r3, r3, #1
   41f10:	str	r3, [fp, #-32]	; 0xffffffe0
   41f14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41f18:	add	r3, r3, #1
   41f1c:	str	r3, [fp, #-28]	; 0xffffffe4
   41f20:	b	41c2c <flatcc_json_printer_fmt_bool@@Base+0x264>
   41f24:	nop			; (mov r0, r0)
   41f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   41f2c:	ldr	r3, [r3, #20]
   41f30:	add	r1, r3, #1
   41f34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   41f38:	str	r1, [r2, #20]
   41f3c:	mov	r2, #34	; 0x22
   41f40:	strb	r2, [r3]
   41f44:	nop			; (mov r0, r0)
   41f48:	sub	sp, fp, #4
   41f4c:	pop	{fp, pc}
   41f50:	push	{fp, lr}
   41f54:	add	fp, sp, #4
   41f58:	sub	sp, sp, #56	; 0x38
   41f5c:	str	r0, [fp, #-40]	; 0xffffffd8
   41f60:	str	r1, [fp, #-44]	; 0xffffffd4
   41f64:	str	r2, [fp, #-48]	; 0xffffffd0
   41f68:	ldr	r3, [fp, #-48]	; 0xffffffd0
   41f6c:	bic	r3, r3, #128	; 0x80
   41f70:	str	r3, [fp, #-16]
   41f74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   41f78:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   41f7c:	mov	r3, r0
   41f80:	str	r3, [fp, #-28]	; 0xffffffe4
   41f84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   41f88:	add	r3, r3, #4
   41f8c:	str	r3, [fp, #-12]
   41f90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41f94:	ldr	r3, [r3, #20]
   41f98:	add	r1, r3, #1
   41f9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   41fa0:	str	r1, [r2, #20]
   41fa4:	mov	r2, #34	; 0x22
   41fa8:	strb	r2, [r3]
   41fac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   41fb0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   41fb4:	mov	r0, r3
   41fb8:	bl	40d18 <flatcc_json_parser_struct_as_root@@Base+0x3f3c>
   41fbc:	str	r0, [fp, #-8]
   41fc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41fc4:	ldr	r2, [r3, #20]
   41fc8:	ldr	r3, [fp, #-8]
   41fcc:	add	r2, r2, r3
   41fd0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41fd4:	ldr	r3, [r3, #16]
   41fd8:	cmp	r2, r3
   41fdc:	bcc	420f8 <flatcc_json_printer_fmt_bool@@Base+0x730>
   41fe0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41fe4:	ldr	r3, [r3, #44]	; 0x2c
   41fe8:	mov	r1, #0
   41fec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   41ff0:	blx	r3
   41ff4:	b	420f8 <flatcc_json_printer_fmt_bool@@Base+0x730>
   41ff8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   41ffc:	ldr	r3, [r3, #16]
   42000:	mov	r2, r3
   42004:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42008:	ldr	r3, [r3, #20]
   4200c:	sub	r3, r2, r3
   42010:	bic	r3, r3, #3
   42014:	str	r3, [fp, #-20]	; 0xffffffec
   42018:	ldr	r2, [fp, #-20]	; 0xffffffec
   4201c:	mov	r3, r2
   42020:	lsl	r3, r3, #1
   42024:	add	r3, r3, r2
   42028:	lsr	r3, r3, #2
   4202c:	str	r3, [fp, #-24]	; 0xffffffe8
   42030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   42034:	cmp	r3, #0
   42038:	bne	4205c <flatcc_json_printer_fmt_bool@@Base+0x694>
   4203c:	ldr	r3, [pc, #312]	; 4217c <flatcc_json_printer_fmt_bool@@Base+0x7b4>
   42040:	add	r3, pc, r3
   42044:	ldr	r2, [pc, #308]	; 42180 <flatcc_json_printer_fmt_bool@@Base+0x7b8>
   42048:	ldr	r1, [pc, #308]	; 42184 <flatcc_json_printer_fmt_bool@@Base+0x7bc>
   4204c:	add	r1, pc, r1
   42050:	ldr	r0, [pc, #304]	; 42188 <flatcc_json_printer_fmt_bool@@Base+0x7c0>
   42054:	add	r0, pc, r0
   42058:	bl	14610 <__assert_fail@plt>
   4205c:	ldr	r2, [fp, #-20]	; 0xffffffec
   42060:	mov	r3, r2
   42064:	lsl	r3, r3, #1
   42068:	add	r3, r3, r2
   4206c:	lsr	r3, r3, #2
   42070:	str	r3, [fp, #-32]	; 0xffffffe0
   42074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42078:	ldr	r0, [r3, #20]
   4207c:	sub	r2, fp, #32
   42080:	ldr	r3, [fp, #-16]
   42084:	str	r3, [sp]
   42088:	mov	r3, r2
   4208c:	mov	r2, #0
   42090:	ldr	r1, [fp, #-12]
   42094:	bl	40e4c <flatcc_json_parser_struct_as_root@@Base+0x4070>
   42098:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4209c:	ldr	r2, [r3, #20]
   420a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   420a4:	add	r2, r2, r3
   420a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   420ac:	str	r2, [r3, #20]
   420b0:	ldr	r2, [fp, #-12]
   420b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   420b8:	add	r3, r2, r3
   420bc:	str	r3, [fp, #-12]
   420c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   420c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   420c8:	sub	r3, r2, r3
   420cc:	str	r3, [fp, #-28]	; 0xffffffe4
   420d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   420d4:	ldr	r3, [r3, #44]	; 0x2c
   420d8:	mov	r1, #0
   420dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   420e0:	blx	r3
   420e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   420e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   420ec:	mov	r0, r3
   420f0:	bl	40d18 <flatcc_json_parser_struct_as_root@@Base+0x3f3c>
   420f4:	str	r0, [fp, #-8]
   420f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   420fc:	ldr	r2, [r3, #20]
   42100:	ldr	r3, [fp, #-8]
   42104:	add	r2, r2, r3
   42108:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4210c:	ldr	r3, [r3, #16]
   42110:	cmp	r2, r3
   42114:	bhi	41ff8 <flatcc_json_printer_fmt_bool@@Base+0x630>
   42118:	ldr	r3, [fp, #-40]	; 0xffffffd8
   4211c:	ldr	r0, [r3, #20]
   42120:	sub	r2, fp, #28
   42124:	ldr	r3, [fp, #-48]	; 0xffffffd0
   42128:	str	r3, [sp]
   4212c:	mov	r3, r2
   42130:	mov	r2, #0
   42134:	ldr	r1, [fp, #-12]
   42138:	bl	40e4c <flatcc_json_parser_struct_as_root@@Base+0x4070>
   4213c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42140:	ldr	r2, [r3, #20]
   42144:	ldr	r3, [fp, #-8]
   42148:	add	r2, r2, r3
   4214c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42150:	str	r2, [r3, #20]
   42154:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42158:	ldr	r3, [r3, #20]
   4215c:	add	r1, r3, #1
   42160:	ldr	r2, [fp, #-40]	; 0xffffffd8
   42164:	str	r1, [r2, #20]
   42168:	mov	r2, #34	; 0x22
   4216c:	strb	r2, [r3]
   42170:	nop			; (mov r0, r0)
   42174:	sub	sp, fp, #4
   42178:	pop	{fp, pc}
   4217c:			; <UNDEFINED> instruction: 0x0000f9b8
   42180:	andeq	r0, r0, r5, lsl r1
   42184:	andeq	pc, r0, ip, lsr #8
   42188:	andeq	pc, r0, r8, lsl #9
   4218c:	push	{fp, lr}
   42190:	add	fp, sp, #4
   42194:	sub	sp, sp, #16
   42198:	str	r0, [fp, #-16]
   4219c:	str	r1, [fp, #-20]	; 0xffffffec
   421a0:	ldr	r3, [fp, #-16]
   421a4:	ldr	r2, [r3, #20]
   421a8:	ldr	r3, [fp, #-16]
   421ac:	ldr	r3, [r3, #16]
   421b0:	cmp	r2, r3
   421b4:	bcc	421cc <flatcc_json_printer_fmt_bool@@Base+0x804>
   421b8:	ldr	r3, [fp, #-16]
   421bc:	ldr	r3, [r3, #44]	; 0x2c
   421c0:	mov	r1, #0
   421c4:	ldr	r0, [fp, #-16]
   421c8:	blx	r3
   421cc:	ldr	r3, [fp, #-16]
   421d0:	ldr	r3, [r3, #16]
   421d4:	mov	r2, r3
   421d8:	ldr	r3, [fp, #-16]
   421dc:	ldr	r3, [r3, #20]
   421e0:	sub	r3, r2, r3
   421e4:	str	r3, [fp, #-8]
   421e8:	b	4225c <flatcc_json_printer_fmt_bool@@Base+0x894>
   421ec:	ldr	r3, [fp, #-16]
   421f0:	ldr	r3, [r3, #20]
   421f4:	ldr	r2, [fp, #-8]
   421f8:	mov	r1, #32
   421fc:	mov	r0, r3
   42200:	bl	145bc <memset@plt>
   42204:	ldr	r3, [fp, #-16]
   42208:	ldr	r2, [r3, #20]
   4220c:	ldr	r3, [fp, #-8]
   42210:	add	r2, r2, r3
   42214:	ldr	r3, [fp, #-16]
   42218:	str	r2, [r3, #20]
   4221c:	ldr	r2, [fp, #-20]	; 0xffffffec
   42220:	ldr	r3, [fp, #-8]
   42224:	sub	r3, r2, r3
   42228:	str	r3, [fp, #-20]	; 0xffffffec
   4222c:	ldr	r3, [fp, #-16]
   42230:	ldr	r3, [r3, #44]	; 0x2c
   42234:	mov	r1, #0
   42238:	ldr	r0, [fp, #-16]
   4223c:	blx	r3
   42240:	ldr	r3, [fp, #-16]
   42244:	ldr	r3, [r3, #16]
   42248:	mov	r2, r3
   4224c:	ldr	r3, [fp, #-16]
   42250:	ldr	r3, [r3, #20]
   42254:	sub	r3, r2, r3
   42258:	str	r3, [fp, #-8]
   4225c:	ldr	r2, [fp, #-20]	; 0xffffffec
   42260:	ldr	r3, [fp, #-8]
   42264:	cmp	r2, r3
   42268:	bhi	421ec <flatcc_json_printer_fmt_bool@@Base+0x824>
   4226c:	ldr	r3, [fp, #-16]
   42270:	ldr	r3, [r3, #20]
   42274:	ldr	r2, [fp, #-20]	; 0xffffffec
   42278:	mov	r1, #32
   4227c:	mov	r0, r3
   42280:	bl	145bc <memset@plt>
   42284:	ldr	r3, [fp, #-16]
   42288:	ldr	r2, [r3, #20]
   4228c:	ldr	r3, [fp, #-20]	; 0xffffffec
   42290:	add	r2, r2, r3
   42294:	ldr	r3, [fp, #-16]
   42298:	str	r2, [r3, #20]
   4229c:	nop			; (mov r0, r0)
   422a0:	sub	sp, fp, #4
   422a4:	pop	{fp, pc}
   422a8:	push	{fp, lr}
   422ac:	add	fp, sp, #4
   422b0:	sub	sp, sp, #16
   422b4:	str	r0, [fp, #-16]
   422b8:	ldr	r3, [fp, #-16]
   422bc:	ldr	r3, [r3, #32]
   422c0:	ldr	r2, [fp, #-16]
   422c4:	ldrb	r2, [r2, #25]
   422c8:	mul	r3, r2, r3
   422cc:	str	r3, [fp, #-8]
   422d0:	ldr	r3, [fp, #-16]
   422d4:	ldr	r2, [r3, #20]
   422d8:	ldr	r3, [fp, #-8]
   422dc:	add	r2, r2, r3
   422e0:	ldr	r3, [fp, #-16]
   422e4:	ldr	r3, [r3, #16]
   422e8:	cmp	r2, r3
   422ec:	bls	42300 <flatcc_json_printer_fmt_bool@@Base+0x938>
   422f0:	ldr	r1, [fp, #-8]
   422f4:	ldr	r0, [fp, #-16]
   422f8:	bl	4218c <flatcc_json_printer_fmt_bool@@Base+0x7c4>
   422fc:	b	42330 <flatcc_json_printer_fmt_bool@@Base+0x968>
   42300:	ldr	r3, [fp, #-16]
   42304:	ldr	r3, [r3, #20]
   42308:	ldr	r2, [fp, #-8]
   4230c:	mov	r1, #32
   42310:	mov	r0, r3
   42314:	bl	145bc <memset@plt>
   42318:	ldr	r3, [fp, #-16]
   4231c:	ldr	r2, [r3, #20]
   42320:	ldr	r3, [fp, #-8]
   42324:	add	r2, r2, r3
   42328:	ldr	r3, [fp, #-16]
   4232c:	str	r2, [r3, #20]
   42330:	nop			; (mov r0, r0)
   42334:	sub	sp, fp, #4
   42338:	pop	{fp, pc}

0004233c <flatcc_json_printer_string@@Base>:
   4233c:	push	{fp, lr}
   42340:	add	fp, sp, #4
   42344:	sub	sp, sp, #16
   42348:	str	r0, [fp, #-8]
   4234c:	str	r1, [fp, #-12]
   42350:	str	r2, [fp, #-16]
   42354:	ldr	r3, [fp, #-16]
   42358:	mov	r2, r3
   4235c:	ldr	r1, [fp, #-12]
   42360:	ldr	r0, [fp, #-8]
   42364:	bl	41bf0 <flatcc_json_printer_fmt_bool@@Base+0x228>
   42368:	nop			; (mov r0, r0)
   4236c:	sub	sp, fp, #4
   42370:	pop	{fp, pc}

00042374 <flatcc_json_printer_write@@Base>:
   42374:	push	{fp, lr}
   42378:	add	fp, sp, #4
   4237c:	sub	sp, sp, #16
   42380:	str	r0, [fp, #-8]
   42384:	str	r1, [fp, #-12]
   42388:	str	r2, [fp, #-16]
   4238c:	ldr	r3, [fp, #-16]
   42390:	mov	r2, r3
   42394:	ldr	r1, [fp, #-12]
   42398:	ldr	r0, [fp, #-8]
   4239c:	bl	41b68 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   423a0:	nop			; (mov r0, r0)
   423a4:	sub	sp, fp, #4
   423a8:	pop	{fp, pc}

000423ac <flatcc_json_printer_nl@@Base>:
   423ac:	push	{fp, lr}
   423b0:	add	fp, sp, #4
   423b4:	sub	sp, sp, #8
   423b8:	str	r0, [fp, #-8]
   423bc:	ldr	r3, [fp, #-8]
   423c0:	ldr	r3, [r3, #20]
   423c4:	add	r1, r3, #1
   423c8:	ldr	r2, [fp, #-8]
   423cc:	str	r1, [r2, #20]
   423d0:	mov	r2, #10
   423d4:	strb	r2, [r3]
   423d8:	ldr	r0, [fp, #-8]
   423dc:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   423e0:	nop			; (mov r0, r0)
   423e4:	sub	sp, fp, #4
   423e8:	pop	{fp, pc}

000423ec <flatcc_json_printer_char@@Base>:
   423ec:	push	{fp}		; (str fp, [sp, #-4]!)
   423f0:	add	fp, sp, #0
   423f4:	sub	sp, sp, #12
   423f8:	str	r0, [fp, #-8]
   423fc:	mov	r3, r1
   42400:	strb	r3, [fp, #-9]
   42404:	ldr	r3, [fp, #-8]
   42408:	ldr	r3, [r3, #20]
   4240c:	add	r1, r3, #1
   42410:	ldr	r2, [fp, #-8]
   42414:	str	r1, [r2, #20]
   42418:	ldrb	r2, [fp, #-9]
   4241c:	strb	r2, [r3]
   42420:	nop			; (mov r0, r0)
   42424:	add	sp, fp, #0
   42428:	pop	{fp}		; (ldr fp, [sp], #4)
   4242c:	bx	lr

00042430 <flatcc_json_printer_indent@@Base>:
   42430:	push	{fp, lr}
   42434:	add	fp, sp, #4
   42438:	sub	sp, sp, #8
   4243c:	str	r0, [fp, #-8]
   42440:	ldr	r0, [fp, #-8]
   42444:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   42448:	nop			; (mov r0, r0)
   4244c:	sub	sp, fp, #4
   42450:	pop	{fp, pc}

00042454 <flatcc_json_printer_add_level@@Base>:
   42454:	push	{fp}		; (str fp, [sp, #-4]!)
   42458:	add	fp, sp, #0
   4245c:	sub	sp, sp, #12
   42460:	str	r0, [fp, #-8]
   42464:	str	r1, [fp, #-12]
   42468:	ldr	r3, [fp, #-8]
   4246c:	ldr	r2, [r3, #32]
   42470:	ldr	r3, [fp, #-12]
   42474:	add	r2, r2, r3
   42478:	ldr	r3, [fp, #-8]
   4247c:	str	r2, [r3, #32]
   42480:	nop			; (mov r0, r0)
   42484:	add	sp, fp, #0
   42488:	pop	{fp}		; (ldr fp, [sp], #4)
   4248c:	bx	lr

00042490 <flatcc_json_printer_get_level@@Base>:
   42490:	push	{fp}		; (str fp, [sp, #-4]!)
   42494:	add	fp, sp, #0
   42498:	sub	sp, sp, #12
   4249c:	str	r0, [fp, #-8]
   424a0:	ldr	r3, [fp, #-8]
   424a4:	ldr	r3, [r3, #32]
   424a8:	mov	r0, r3
   424ac:	add	sp, fp, #0
   424b0:	pop	{fp}		; (ldr fp, [sp], #4)
   424b4:	bx	lr
   424b8:	push	{fp, lr}
   424bc:	add	fp, sp, #4
   424c0:	sub	sp, sp, #16
   424c4:	str	r0, [fp, #-8]
   424c8:	str	r1, [fp, #-12]
   424cc:	str	r2, [fp, #-16]
   424d0:	ldr	r3, [fp, #-8]
   424d4:	ldr	r3, [r3, #20]
   424d8:	mov	r2, #34	; 0x22
   424dc:	strb	r2, [r3]
   424e0:	ldr	r3, [fp, #-8]
   424e4:	ldr	r3, [r3, #20]
   424e8:	ldr	r2, [fp, #-8]
   424ec:	ldrb	r2, [r2, #26]
   424f0:	cmp	r2, #0
   424f4:	moveq	r2, #1
   424f8:	movne	r2, #0
   424fc:	uxtb	r2, r2
   42500:	add	r2, r3, r2
   42504:	ldr	r3, [fp, #-8]
   42508:	str	r2, [r3, #20]
   4250c:	ldr	r3, [fp, #-8]
   42510:	ldr	r2, [r3, #20]
   42514:	ldr	r3, [fp, #-16]
   42518:	add	r2, r2, r3
   4251c:	ldr	r3, [fp, #-8]
   42520:	ldr	r3, [r3, #16]
   42524:	cmp	r2, r3
   42528:	bcs	42560 <flatcc_json_printer_get_level@@Base+0xd0>
   4252c:	ldr	r3, [fp, #-8]
   42530:	ldr	r3, [r3, #20]
   42534:	ldr	r2, [fp, #-16]
   42538:	ldr	r1, [fp, #-12]
   4253c:	mov	r0, r3
   42540:	bl	14544 <memcpy@plt>
   42544:	ldr	r3, [fp, #-8]
   42548:	ldr	r2, [r3, #20]
   4254c:	ldr	r3, [fp, #-16]
   42550:	add	r2, r2, r3
   42554:	ldr	r3, [fp, #-8]
   42558:	str	r2, [r3, #20]
   4255c:	b	42570 <flatcc_json_printer_get_level@@Base+0xe0>
   42560:	ldr	r2, [fp, #-16]
   42564:	ldr	r1, [fp, #-12]
   42568:	ldr	r0, [fp, #-8]
   4256c:	bl	41b68 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   42570:	ldr	r3, [fp, #-8]
   42574:	ldr	r3, [r3, #20]
   42578:	mov	r2, #34	; 0x22
   4257c:	strb	r2, [r3]
   42580:	ldr	r3, [fp, #-8]
   42584:	ldr	r3, [r3, #20]
   42588:	ldr	r2, [fp, #-8]
   4258c:	ldrb	r2, [r2, #26]
   42590:	cmp	r2, #0
   42594:	moveq	r2, #1
   42598:	movne	r2, #0
   4259c:	uxtb	r2, r2
   425a0:	add	r2, r3, r2
   425a4:	ldr	r3, [fp, #-8]
   425a8:	str	r2, [r3, #20]
   425ac:	nop			; (mov r0, r0)
   425b0:	sub	sp, fp, #4
   425b4:	pop	{fp, pc}
   425b8:	push	{fp, lr}
   425bc:	add	fp, sp, #4
   425c0:	sub	sp, sp, #16
   425c4:	str	r0, [fp, #-8]
   425c8:	str	r1, [fp, #-12]
   425cc:	str	r2, [fp, #-16]
   425d0:	ldr	r3, [fp, #-8]
   425d4:	ldrb	r3, [r3, #25]
   425d8:	cmp	r3, #0
   425dc:	beq	42608 <flatcc_json_printer_get_level@@Base+0x178>
   425e0:	ldr	r3, [fp, #-8]
   425e4:	ldr	r3, [r3, #20]
   425e8:	add	r1, r3, #1
   425ec:	ldr	r2, [fp, #-8]
   425f0:	str	r1, [r2, #20]
   425f4:	mov	r2, #10
   425f8:	strb	r2, [r3]
   425fc:	ldr	r0, [fp, #-8]
   42600:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   42604:	b	42610 <flatcc_json_printer_get_level@@Base+0x180>
   42608:	ldr	r0, [fp, #-8]
   4260c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   42610:	ldr	r2, [fp, #-16]
   42614:	ldr	r1, [fp, #-12]
   42618:	ldr	r0, [fp, #-8]
   4261c:	bl	424b8 <flatcc_json_printer_get_level@@Base+0x28>
   42620:	ldr	r3, [fp, #-8]
   42624:	ldr	r3, [r3, #20]
   42628:	add	r1, r3, #1
   4262c:	ldr	r2, [fp, #-8]
   42630:	str	r1, [r2, #20]
   42634:	mov	r2, #58	; 0x3a
   42638:	strb	r2, [r3]
   4263c:	ldr	r3, [fp, #-8]
   42640:	ldr	r3, [r3, #20]
   42644:	mov	r2, #32
   42648:	strb	r2, [r3]
   4264c:	ldr	r3, [fp, #-8]
   42650:	ldr	r3, [r3, #20]
   42654:	ldr	r2, [fp, #-8]
   42658:	ldrb	r2, [r2, #25]
   4265c:	cmp	r2, #0
   42660:	movne	r2, #1
   42664:	moveq	r2, #0
   42668:	uxtb	r2, r2
   4266c:	add	r2, r3, r2
   42670:	ldr	r3, [fp, #-8]
   42674:	str	r2, [r3, #20]
   42678:	nop			; (mov r0, r0)
   4267c:	sub	sp, fp, #4
   42680:	pop	{fp, pc}

00042684 <flatcc_json_printer_uint8@@Base>:
   42684:	push	{fp, lr}
   42688:	add	fp, sp, #4
   4268c:	sub	sp, sp, #8
   42690:	str	r0, [fp, #-8]
   42694:	mov	r3, r1
   42698:	strb	r3, [fp, #-9]
   4269c:	ldr	r3, [fp, #-8]
   426a0:	ldr	r2, [r3, #20]
   426a4:	ldrb	r3, [fp, #-9]
   426a8:	mov	r1, r2
   426ac:	mov	r0, r3
   426b0:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   426b4:	mov	r2, r0
   426b8:	ldr	r3, [fp, #-8]
   426bc:	ldr	r3, [r3, #20]
   426c0:	add	r2, r3, r2
   426c4:	ldr	r3, [fp, #-8]
   426c8:	str	r2, [r3, #20]
   426cc:	nop			; (mov r0, r0)
   426d0:	sub	sp, fp, #4
   426d4:	pop	{fp, pc}

000426d8 <flatcc_json_printer_uint16@@Base>:
   426d8:	push	{fp, lr}
   426dc:	add	fp, sp, #4
   426e0:	sub	sp, sp, #8
   426e4:	str	r0, [fp, #-8]
   426e8:	mov	r3, r1
   426ec:	strh	r3, [fp, #-10]
   426f0:	ldr	r3, [fp, #-8]
   426f4:	ldr	r2, [r3, #20]
   426f8:	ldrh	r3, [fp, #-10]
   426fc:	mov	r1, r2
   42700:	mov	r0, r3
   42704:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   42708:	mov	r2, r0
   4270c:	ldr	r3, [fp, #-8]
   42710:	ldr	r3, [r3, #20]
   42714:	add	r2, r3, r2
   42718:	ldr	r3, [fp, #-8]
   4271c:	str	r2, [r3, #20]
   42720:	nop			; (mov r0, r0)
   42724:	sub	sp, fp, #4
   42728:	pop	{fp, pc}

0004272c <flatcc_json_printer_uint32@@Base>:
   4272c:	push	{fp, lr}
   42730:	add	fp, sp, #4
   42734:	sub	sp, sp, #8
   42738:	str	r0, [fp, #-8]
   4273c:	str	r1, [fp, #-12]
   42740:	ldr	r3, [fp, #-8]
   42744:	ldr	r3, [r3, #20]
   42748:	mov	r1, r3
   4274c:	ldr	r0, [fp, #-12]
   42750:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   42754:	mov	r2, r0
   42758:	ldr	r3, [fp, #-8]
   4275c:	ldr	r3, [r3, #20]
   42760:	add	r2, r3, r2
   42764:	ldr	r3, [fp, #-8]
   42768:	str	r2, [r3, #20]
   4276c:	nop			; (mov r0, r0)
   42770:	sub	sp, fp, #4
   42774:	pop	{fp, pc}

00042778 <flatcc_json_printer_uint64@@Base>:
   42778:	push	{fp, lr}
   4277c:	add	fp, sp, #4
   42780:	sub	sp, sp, #16
   42784:	str	r0, [fp, #-8]
   42788:	strd	r2, [fp, #-20]	; 0xffffffec
   4278c:	ldr	r3, [fp, #-8]
   42790:	ldr	r3, [r3, #20]
   42794:	mov	r2, r3
   42798:	ldrd	r0, [fp, #-20]	; 0xffffffec
   4279c:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   427a0:	mov	r2, r0
   427a4:	ldr	r3, [fp, #-8]
   427a8:	ldr	r3, [r3, #20]
   427ac:	add	r2, r3, r2
   427b0:	ldr	r3, [fp, #-8]
   427b4:	str	r2, [r3, #20]
   427b8:	nop			; (mov r0, r0)
   427bc:	sub	sp, fp, #4
   427c0:	pop	{fp, pc}

000427c4 <flatcc_json_printer_int8@@Base>:
   427c4:	push	{fp, lr}
   427c8:	add	fp, sp, #4
   427cc:	sub	sp, sp, #8
   427d0:	str	r0, [fp, #-8]
   427d4:	mov	r3, r1
   427d8:	strb	r3, [fp, #-9]
   427dc:	ldr	r3, [fp, #-8]
   427e0:	ldr	r2, [r3, #20]
   427e4:	ldrsb	r3, [fp, #-9]
   427e8:	mov	r1, r2
   427ec:	mov	r0, r3
   427f0:	bl	3ec94 <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   427f4:	mov	r2, r0
   427f8:	ldr	r3, [fp, #-8]
   427fc:	ldr	r3, [r3, #20]
   42800:	add	r2, r3, r2
   42804:	ldr	r3, [fp, #-8]
   42808:	str	r2, [r3, #20]
   4280c:	nop			; (mov r0, r0)
   42810:	sub	sp, fp, #4
   42814:	pop	{fp, pc}

00042818 <flatcc_json_printer_int16@@Base>:
   42818:	push	{fp, lr}
   4281c:	add	fp, sp, #4
   42820:	sub	sp, sp, #8
   42824:	str	r0, [fp, #-8]
   42828:	mov	r3, r1
   4282c:	strh	r3, [fp, #-10]
   42830:	ldr	r3, [fp, #-8]
   42834:	ldr	r2, [r3, #20]
   42838:	ldrsh	r3, [fp, #-10]
   4283c:	mov	r1, r2
   42840:	mov	r0, r3
   42844:	bl	3ed14 <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   42848:	mov	r2, r0
   4284c:	ldr	r3, [fp, #-8]
   42850:	ldr	r3, [r3, #20]
   42854:	add	r2, r3, r2
   42858:	ldr	r3, [fp, #-8]
   4285c:	str	r2, [r3, #20]
   42860:	nop			; (mov r0, r0)
   42864:	sub	sp, fp, #4
   42868:	pop	{fp, pc}

0004286c <flatcc_json_printer_int32@@Base>:
   4286c:	push	{fp, lr}
   42870:	add	fp, sp, #4
   42874:	sub	sp, sp, #8
   42878:	str	r0, [fp, #-8]
   4287c:	str	r1, [fp, #-12]
   42880:	ldr	r3, [fp, #-8]
   42884:	ldr	r3, [r3, #20]
   42888:	mov	r1, r3
   4288c:	ldr	r0, [fp, #-12]
   42890:	bl	3ed94 <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   42894:	mov	r2, r0
   42898:	ldr	r3, [fp, #-8]
   4289c:	ldr	r3, [r3, #20]
   428a0:	add	r2, r3, r2
   428a4:	ldr	r3, [fp, #-8]
   428a8:	str	r2, [r3, #20]
   428ac:	nop			; (mov r0, r0)
   428b0:	sub	sp, fp, #4
   428b4:	pop	{fp, pc}

000428b8 <flatcc_json_printer_int64@@Base>:
   428b8:	push	{fp, lr}
   428bc:	add	fp, sp, #4
   428c0:	sub	sp, sp, #16
   428c4:	str	r0, [fp, #-8]
   428c8:	strd	r2, [fp, #-20]	; 0xffffffec
   428cc:	ldr	r3, [fp, #-8]
   428d0:	ldr	r3, [r3, #20]
   428d4:	mov	r2, r3
   428d8:	ldrd	r0, [fp, #-20]	; 0xffffffec
   428dc:	bl	3ee0c <flatcc_json_parser_struct_as_root@@Base+0x2030>
   428e0:	mov	r2, r0
   428e4:	ldr	r3, [fp, #-8]
   428e8:	ldr	r3, [r3, #20]
   428ec:	add	r2, r3, r2
   428f0:	ldr	r3, [fp, #-8]
   428f4:	str	r2, [r3, #20]
   428f8:	nop			; (mov r0, r0)
   428fc:	sub	sp, fp, #4
   42900:	pop	{fp, pc}

00042904 <flatcc_json_printer_float@@Base>:
   42904:	push	{fp, lr}
   42908:	add	fp, sp, #4
   4290c:	sub	sp, sp, #8
   42910:	str	r0, [fp, #-8]
   42914:	vstr	s0, [fp, #-12]
   42918:	vldr	s15, [fp, #-12]
   4291c:	vcvt.f64.f32	d7, s15
   42920:	ldr	r3, [fp, #-8]
   42924:	ldr	r3, [r3, #20]
   42928:	mov	r0, r3
   4292c:	vmov.f64	d0, d7
   42930:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   42934:	mov	r2, r0
   42938:	ldr	r3, [fp, #-8]
   4293c:	ldr	r3, [r3, #20]
   42940:	add	r2, r3, r2
   42944:	ldr	r3, [fp, #-8]
   42948:	str	r2, [r3, #20]
   4294c:	nop			; (mov r0, r0)
   42950:	sub	sp, fp, #4
   42954:	pop	{fp, pc}

00042958 <flatcc_json_printer_double@@Base>:
   42958:	push	{fp, lr}
   4295c:	add	fp, sp, #4
   42960:	sub	sp, sp, #16
   42964:	str	r0, [fp, #-8]
   42968:	vstr	d0, [fp, #-20]	; 0xffffffec
   4296c:	ldr	r3, [fp, #-8]
   42970:	ldr	r3, [r3, #20]
   42974:	mov	r0, r3
   42978:	vldr	d0, [fp, #-20]	; 0xffffffec
   4297c:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   42980:	mov	r2, r0
   42984:	ldr	r3, [fp, #-8]
   42988:	ldr	r3, [r3, #20]
   4298c:	add	r2, r3, r2
   42990:	ldr	r3, [fp, #-8]
   42994:	str	r2, [r3, #20]
   42998:	nop			; (mov r0, r0)
   4299c:	sub	sp, fp, #4
   429a0:	pop	{fp, pc}

000429a4 <flatcc_json_printer_enum@@Base>:
   429a4:	push	{fp, lr}
   429a8:	add	fp, sp, #4
   429ac:	sub	sp, sp, #16
   429b0:	str	r0, [fp, #-8]
   429b4:	str	r1, [fp, #-12]
   429b8:	str	r2, [fp, #-16]
   429bc:	ldr	r3, [fp, #-16]
   429c0:	mov	r2, r3
   429c4:	ldr	r1, [fp, #-12]
   429c8:	ldr	r0, [fp, #-8]
   429cc:	bl	424b8 <flatcc_json_printer_get_level@@Base+0x28>
   429d0:	nop			; (mov r0, r0)
   429d4:	sub	sp, fp, #4
   429d8:	pop	{fp, pc}

000429dc <flatcc_json_printer_delimit_enum_flags@@Base>:
   429dc:	push	{fp}		; (str fp, [sp, #-4]!)
   429e0:	add	fp, sp, #0
   429e4:	sub	sp, sp, #20
   429e8:	str	r0, [fp, #-16]
   429ec:	str	r1, [fp, #-20]	; 0xffffffec
   429f0:	ldr	r3, [fp, #-16]
   429f4:	ldrb	r3, [r3, #26]
   429f8:	cmp	r3, #0
   429fc:	beq	42a0c <flatcc_json_printer_delimit_enum_flags@@Base+0x30>
   42a00:	ldr	r3, [fp, #-20]	; 0xffffffec
   42a04:	cmp	r3, #0
   42a08:	beq	42a14 <flatcc_json_printer_delimit_enum_flags@@Base+0x38>
   42a0c:	mov	r3, #1
   42a10:	b	42a18 <flatcc_json_printer_delimit_enum_flags@@Base+0x3c>
   42a14:	mov	r3, #0
   42a18:	str	r3, [fp, #-8]
   42a1c:	ldr	r3, [fp, #-16]
   42a20:	ldr	r3, [r3, #20]
   42a24:	mov	r2, #34	; 0x22
   42a28:	strb	r2, [r3]
   42a2c:	ldr	r3, [fp, #-16]
   42a30:	ldr	r2, [r3, #20]
   42a34:	ldr	r3, [fp, #-8]
   42a38:	add	r2, r2, r3
   42a3c:	ldr	r3, [fp, #-16]
   42a40:	str	r2, [r3, #20]
   42a44:	nop			; (mov r0, r0)
   42a48:	add	sp, fp, #0
   42a4c:	pop	{fp}		; (ldr fp, [sp], #4)
   42a50:	bx	lr

00042a54 <flatcc_json_printer_enum_flag@@Base>:
   42a54:	push	{fp, lr}
   42a58:	add	fp, sp, #4
   42a5c:	sub	sp, sp, #16
   42a60:	str	r0, [fp, #-8]
   42a64:	str	r1, [fp, #-12]
   42a68:	str	r2, [fp, #-16]
   42a6c:	str	r3, [fp, #-20]	; 0xffffffec
   42a70:	ldr	r3, [fp, #-8]
   42a74:	ldr	r3, [r3, #20]
   42a78:	mov	r2, #32
   42a7c:	strb	r2, [r3]
   42a80:	ldr	r3, [fp, #-8]
   42a84:	ldr	r3, [r3, #20]
   42a88:	ldr	r2, [fp, #-12]
   42a8c:	cmp	r2, #0
   42a90:	movgt	r2, #1
   42a94:	movle	r2, #0
   42a98:	uxtb	r2, r2
   42a9c:	add	r2, r3, r2
   42aa0:	ldr	r3, [fp, #-8]
   42aa4:	str	r2, [r3, #20]
   42aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   42aac:	mov	r2, r3
   42ab0:	ldr	r1, [fp, #-16]
   42ab4:	ldr	r0, [fp, #-8]
   42ab8:	bl	41b68 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   42abc:	nop			; (mov r0, r0)
   42ac0:	sub	sp, fp, #4
   42ac4:	pop	{fp, pc}
   42ac8:	push	{fp, lr}
   42acc:	add	fp, sp, #4
   42ad0:	sub	sp, sp, #16
   42ad4:	str	r0, [fp, #-16]
   42ad8:	str	r1, [fp, #-20]	; 0xffffffec
   42adc:	ldr	r0, [fp, #-20]	; 0xffffffec
   42ae0:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   42ae4:	str	r0, [fp, #-8]
   42ae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   42aec:	add	r3, r3, #4
   42af0:	str	r3, [fp, #-12]
   42af4:	ldr	r2, [fp, #-8]
   42af8:	ldr	r1, [fp, #-12]
   42afc:	ldr	r0, [fp, #-16]
   42b00:	bl	41bf0 <flatcc_json_printer_fmt_bool@@Base+0x228>
   42b04:	nop			; (mov r0, r0)
   42b08:	sub	sp, fp, #4
   42b0c:	pop	{fp, pc}
   42b10:	push	{fp, lr}
   42b14:	add	fp, sp, #4
   42b18:	sub	sp, sp, #40	; 0x28
   42b1c:	str	r0, [fp, #-32]	; 0xffffffe0
   42b20:	str	r1, [fp, #-36]	; 0xffffffdc
   42b24:	str	r2, [fp, #-40]	; 0xffffffd8
   42b28:	str	r3, [fp, #-44]	; 0xffffffd4
   42b2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42b30:	sub	r3, r3, #1
   42b34:	str	r3, [fp, #-40]	; 0xffffffd8
   42b38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42b3c:	cmp	r3, #0
   42b40:	bne	42b54 <flatcc_json_printer_enum_flag@@Base+0x100>
   42b44:	mov	r1, #2
   42b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42b4c:	bl	3d4c8 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   42b50:	b	42c44 <flatcc_json_printer_enum_flag@@Base+0x1f0>
   42b54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42b58:	ldr	r3, [r3, #32]
   42b5c:	add	r2, r3, #1
   42b60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42b64:	str	r2, [r3, #32]
   42b68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42b6c:	ldr	r3, [r3, #20]
   42b70:	add	r1, r3, #1
   42b74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   42b78:	str	r1, [r2, #20]
   42b7c:	mov	r2, #123	; 0x7b
   42b80:	strb	r2, [r3]
   42b84:	mov	r3, #0
   42b88:	str	r3, [fp, #-8]
   42b8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   42b90:	str	r3, [fp, #-12]
   42b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   42b98:	str	r3, [fp, #-24]	; 0xffffffe8
   42b9c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   42ba0:	bl	3d370 <flatcc_json_parser_struct_as_root@@Base+0x594>
   42ba4:	mov	r3, r0
   42ba8:	rsb	r3, r3, #0
   42bac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   42bb0:	add	r3, r2, r3
   42bb4:	str	r3, [fp, #-20]	; 0xffffffec
   42bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   42bbc:	mov	r0, r3
   42bc0:	bl	3d3c8 <flatcc_json_parser_struct_as_root@@Base+0x5ec>
   42bc4:	mov	r3, r0
   42bc8:	str	r3, [fp, #-16]
   42bcc:	sub	r2, fp, #24
   42bd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   42bd4:	mov	r1, r2
   42bd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42bdc:	blx	r3
   42be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42be4:	ldrb	r3, [r3, #25]
   42be8:	cmp	r3, #0
   42bec:	beq	42c28 <flatcc_json_printer_enum_flag@@Base+0x1d4>
   42bf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42bf4:	ldr	r3, [r3, #20]
   42bf8:	add	r1, r3, #1
   42bfc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   42c00:	str	r1, [r2, #20]
   42c04:	mov	r2, #10
   42c08:	strb	r2, [r3]
   42c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42c10:	ldr	r3, [r3, #32]
   42c14:	sub	r2, r3, #1
   42c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42c1c:	str	r2, [r3, #32]
   42c20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   42c24:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   42c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   42c2c:	ldr	r3, [r3, #20]
   42c30:	add	r1, r3, #1
   42c34:	ldr	r2, [fp, #-32]	; 0xffffffe0
   42c38:	str	r1, [r2, #20]
   42c3c:	mov	r2, #125	; 0x7d
   42c40:	strb	r2, [r3]
   42c44:	sub	sp, fp, #4
   42c48:	pop	{fp, pc}

00042c4c <flatcc_json_printer_string_field@@Base>:
   42c4c:	push	{fp, lr}
   42c50:	add	fp, sp, #4
   42c54:	sub	sp, sp, #24
   42c58:	str	r0, [fp, #-16]
   42c5c:	str	r1, [fp, #-20]	; 0xffffffec
   42c60:	str	r2, [fp, #-24]	; 0xffffffe8
   42c64:	str	r3, [fp, #-28]	; 0xffffffe4
   42c68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42c6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   42c70:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   42c74:	str	r0, [fp, #-8]
   42c78:	ldr	r3, [fp, #-8]
   42c7c:	cmp	r3, #0
   42c80:	beq	42ce8 <flatcc_json_printer_string_field@@Base+0x9c>
   42c84:	ldr	r3, [fp, #-20]	; 0xffffffec
   42c88:	ldr	r3, [r3, #16]
   42c8c:	add	r1, r3, #1
   42c90:	ldr	r2, [fp, #-20]	; 0xffffffec
   42c94:	str	r1, [r2, #16]
   42c98:	cmp	r3, #0
   42c9c:	beq	42cbc <flatcc_json_printer_string_field@@Base+0x70>
   42ca0:	ldr	r3, [fp, #-16]
   42ca4:	ldr	r3, [r3, #20]
   42ca8:	add	r1, r3, #1
   42cac:	ldr	r2, [fp, #-16]
   42cb0:	str	r1, [r2, #20]
   42cb4:	mov	r2, #44	; 0x2c
   42cb8:	strb	r2, [r3]
   42cbc:	ldr	r3, [fp, #4]
   42cc0:	mov	r2, r3
   42cc4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   42cc8:	ldr	r0, [fp, #-16]
   42ccc:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   42cd0:	ldr	r0, [fp, #-8]
   42cd4:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   42cd8:	mov	r3, r0
   42cdc:	mov	r1, r3
   42ce0:	ldr	r0, [fp, #-16]
   42ce4:	bl	42ac8 <flatcc_json_printer_enum_flag@@Base+0x74>
   42ce8:	nop			; (mov r0, r0)
   42cec:	sub	sp, fp, #4
   42cf0:	pop	{fp, pc}

00042cf4 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   42cf4:	push	{fp, lr}
   42cf8:	add	fp, sp, #4
   42cfc:	sub	sp, sp, #24
   42d00:	str	r0, [fp, #-16]
   42d04:	str	r1, [fp, #-20]	; 0xffffffec
   42d08:	str	r2, [fp, #-24]	; 0xffffffe8
   42d0c:	str	r3, [fp, #-28]	; 0xffffffe4
   42d10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42d14:	ldr	r0, [fp, #-20]	; 0xffffffec
   42d18:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   42d1c:	str	r0, [fp, #-8]
   42d20:	ldr	r3, [fp, #8]
   42d24:	cmp	r3, #0
   42d28:	movne	r3, #1
   42d2c:	moveq	r3, #0
   42d30:	uxtb	r3, r3
   42d34:	str	r3, [fp, #-12]
   42d38:	ldr	r3, [fp, #-12]
   42d3c:	orr	r3, r3, #128	; 0x80
   42d40:	str	r3, [fp, #-12]
   42d44:	ldr	r3, [fp, #-8]
   42d48:	cmp	r3, #0
   42d4c:	beq	42db8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xc4>
   42d50:	ldr	r3, [fp, #-20]	; 0xffffffec
   42d54:	ldr	r3, [r3, #16]
   42d58:	add	r1, r3, #1
   42d5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   42d60:	str	r1, [r2, #16]
   42d64:	cmp	r3, #0
   42d68:	beq	42d88 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x94>
   42d6c:	ldr	r3, [fp, #-16]
   42d70:	ldr	r3, [r3, #20]
   42d74:	add	r1, r3, #1
   42d78:	ldr	r2, [fp, #-16]
   42d7c:	str	r1, [r2, #20]
   42d80:	mov	r2, #44	; 0x2c
   42d84:	strb	r2, [r3]
   42d88:	ldr	r3, [fp, #4]
   42d8c:	mov	r2, r3
   42d90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   42d94:	ldr	r0, [fp, #-16]
   42d98:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   42d9c:	ldr	r0, [fp, #-8]
   42da0:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   42da4:	mov	r3, r0
   42da8:	ldr	r2, [fp, #-12]
   42dac:	mov	r1, r3
   42db0:	ldr	r0, [fp, #-16]
   42db4:	bl	41f50 <flatcc_json_printer_fmt_bool@@Base+0x588>
   42db8:	nop			; (mov r0, r0)
   42dbc:	sub	sp, fp, #4
   42dc0:	pop	{fp, pc}

00042dc4 <flatcc_json_printer_uint8_field@@Base>:
   42dc4:	push	{fp, lr}
   42dc8:	add	fp, sp, #4
   42dcc:	sub	sp, sp, #24
   42dd0:	str	r0, [fp, #-16]
   42dd4:	str	r1, [fp, #-20]	; 0xffffffec
   42dd8:	str	r2, [fp, #-24]	; 0xffffffe8
   42ddc:	str	r3, [fp, #-28]	; 0xffffffe4
   42de0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42de4:	ldr	r0, [fp, #-20]	; 0xffffffec
   42de8:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   42dec:	str	r0, [fp, #-12]
   42df0:	ldr	r3, [fp, #-12]
   42df4:	cmp	r3, #0
   42df8:	beq	42e30 <flatcc_json_printer_uint8_field@@Base+0x6c>
   42dfc:	ldr	r0, [fp, #-12]
   42e00:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   42e04:	mov	r3, r0
   42e08:	strb	r3, [fp, #-5]
   42e0c:	ldrb	r2, [fp, #-5]
   42e10:	ldrb	r3, [fp, #8]
   42e14:	cmp	r2, r3
   42e18:	bne	42e48 <flatcc_json_printer_uint8_field@@Base+0x84>
   42e1c:	ldr	r3, [fp, #-16]
   42e20:	ldrb	r3, [r3, #28]
   42e24:	cmp	r3, #0
   42e28:	beq	42e48 <flatcc_json_printer_uint8_field@@Base+0x84>
   42e2c:	b	42ecc <flatcc_json_printer_uint8_field@@Base+0x108>
   42e30:	ldr	r3, [fp, #-16]
   42e34:	ldrb	r3, [r3, #29]
   42e38:	cmp	r3, #0
   42e3c:	beq	42ec8 <flatcc_json_printer_uint8_field@@Base+0x104>
   42e40:	ldrb	r3, [fp, #8]
   42e44:	strb	r3, [fp, #-5]
   42e48:	ldr	r3, [fp, #-20]	; 0xffffffec
   42e4c:	ldr	r3, [r3, #16]
   42e50:	add	r1, r3, #1
   42e54:	ldr	r2, [fp, #-20]	; 0xffffffec
   42e58:	str	r1, [r2, #16]
   42e5c:	cmp	r3, #0
   42e60:	beq	42e80 <flatcc_json_printer_uint8_field@@Base+0xbc>
   42e64:	ldr	r3, [fp, #-16]
   42e68:	ldr	r3, [r3, #20]
   42e6c:	add	r1, r3, #1
   42e70:	ldr	r2, [fp, #-16]
   42e74:	str	r1, [r2, #20]
   42e78:	mov	r2, #44	; 0x2c
   42e7c:	strb	r2, [r3]
   42e80:	ldr	r3, [fp, #4]
   42e84:	mov	r2, r3
   42e88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   42e8c:	ldr	r0, [fp, #-16]
   42e90:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   42e94:	ldr	r3, [fp, #-16]
   42e98:	ldr	r2, [r3, #20]
   42e9c:	ldrb	r3, [fp, #-5]
   42ea0:	mov	r1, r2
   42ea4:	mov	r0, r3
   42ea8:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   42eac:	mov	r2, r0
   42eb0:	ldr	r3, [fp, #-16]
   42eb4:	ldr	r3, [r3, #20]
   42eb8:	add	r2, r3, r2
   42ebc:	ldr	r3, [fp, #-16]
   42ec0:	str	r2, [r3, #20]
   42ec4:	b	42ecc <flatcc_json_printer_uint8_field@@Base+0x108>
   42ec8:	nop			; (mov r0, r0)
   42ecc:	sub	sp, fp, #4
   42ed0:	pop	{fp, pc}

00042ed4 <flatcc_json_printer_uint16_field@@Base>:
   42ed4:	push	{fp, lr}
   42ed8:	add	fp, sp, #4
   42edc:	sub	sp, sp, #24
   42ee0:	str	r0, [fp, #-16]
   42ee4:	str	r1, [fp, #-20]	; 0xffffffec
   42ee8:	str	r2, [fp, #-24]	; 0xffffffe8
   42eec:	str	r3, [fp, #-28]	; 0xffffffe4
   42ef0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   42ef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   42ef8:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   42efc:	str	r0, [fp, #-12]
   42f00:	ldr	r3, [fp, #-12]
   42f04:	cmp	r3, #0
   42f08:	beq	42f40 <flatcc_json_printer_uint16_field@@Base+0x6c>
   42f0c:	ldr	r0, [fp, #-12]
   42f10:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   42f14:	mov	r3, r0
   42f18:	strh	r3, [fp, #-6]
   42f1c:	ldrh	r2, [fp, #-6]
   42f20:	ldrh	r3, [fp, #8]
   42f24:	cmp	r2, r3
   42f28:	bne	42f58 <flatcc_json_printer_uint16_field@@Base+0x84>
   42f2c:	ldr	r3, [fp, #-16]
   42f30:	ldrb	r3, [r3, #28]
   42f34:	cmp	r3, #0
   42f38:	beq	42f58 <flatcc_json_printer_uint16_field@@Base+0x84>
   42f3c:	b	42fdc <flatcc_json_printer_uint16_field@@Base+0x108>
   42f40:	ldr	r3, [fp, #-16]
   42f44:	ldrb	r3, [r3, #29]
   42f48:	cmp	r3, #0
   42f4c:	beq	42fd8 <flatcc_json_printer_uint16_field@@Base+0x104>
   42f50:	ldrh	r3, [fp, #8]
   42f54:	strh	r3, [fp, #-6]
   42f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   42f5c:	ldr	r3, [r3, #16]
   42f60:	add	r1, r3, #1
   42f64:	ldr	r2, [fp, #-20]	; 0xffffffec
   42f68:	str	r1, [r2, #16]
   42f6c:	cmp	r3, #0
   42f70:	beq	42f90 <flatcc_json_printer_uint16_field@@Base+0xbc>
   42f74:	ldr	r3, [fp, #-16]
   42f78:	ldr	r3, [r3, #20]
   42f7c:	add	r1, r3, #1
   42f80:	ldr	r2, [fp, #-16]
   42f84:	str	r1, [r2, #20]
   42f88:	mov	r2, #44	; 0x2c
   42f8c:	strb	r2, [r3]
   42f90:	ldr	r3, [fp, #4]
   42f94:	mov	r2, r3
   42f98:	ldr	r1, [fp, #-28]	; 0xffffffe4
   42f9c:	ldr	r0, [fp, #-16]
   42fa0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   42fa4:	ldr	r3, [fp, #-16]
   42fa8:	ldr	r2, [r3, #20]
   42fac:	ldrh	r3, [fp, #-6]
   42fb0:	mov	r1, r2
   42fb4:	mov	r0, r3
   42fb8:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   42fbc:	mov	r2, r0
   42fc0:	ldr	r3, [fp, #-16]
   42fc4:	ldr	r3, [r3, #20]
   42fc8:	add	r2, r3, r2
   42fcc:	ldr	r3, [fp, #-16]
   42fd0:	str	r2, [r3, #20]
   42fd4:	b	42fdc <flatcc_json_printer_uint16_field@@Base+0x108>
   42fd8:	nop			; (mov r0, r0)
   42fdc:	sub	sp, fp, #4
   42fe0:	pop	{fp, pc}

00042fe4 <flatcc_json_printer_uint32_field@@Base>:
   42fe4:	push	{fp, lr}
   42fe8:	add	fp, sp, #4
   42fec:	sub	sp, sp, #24
   42ff0:	str	r0, [fp, #-16]
   42ff4:	str	r1, [fp, #-20]	; 0xffffffec
   42ff8:	str	r2, [fp, #-24]	; 0xffffffe8
   42ffc:	str	r3, [fp, #-28]	; 0xffffffe4
   43000:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43004:	ldr	r0, [fp, #-20]	; 0xffffffec
   43008:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   4300c:	str	r0, [fp, #-12]
   43010:	ldr	r3, [fp, #-12]
   43014:	cmp	r3, #0
   43018:	beq	4304c <flatcc_json_printer_uint32_field@@Base+0x68>
   4301c:	ldr	r0, [fp, #-12]
   43020:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   43024:	str	r0, [fp, #-8]
   43028:	ldr	r2, [fp, #-8]
   4302c:	ldr	r3, [fp, #8]
   43030:	cmp	r2, r3
   43034:	bne	43064 <flatcc_json_printer_uint32_field@@Base+0x80>
   43038:	ldr	r3, [fp, #-16]
   4303c:	ldrb	r3, [r3, #28]
   43040:	cmp	r3, #0
   43044:	beq	43064 <flatcc_json_printer_uint32_field@@Base+0x80>
   43048:	b	430e4 <flatcc_json_printer_uint32_field@@Base+0x100>
   4304c:	ldr	r3, [fp, #-16]
   43050:	ldrb	r3, [r3, #29]
   43054:	cmp	r3, #0
   43058:	beq	430e0 <flatcc_json_printer_uint32_field@@Base+0xfc>
   4305c:	ldr	r3, [fp, #8]
   43060:	str	r3, [fp, #-8]
   43064:	ldr	r3, [fp, #-20]	; 0xffffffec
   43068:	ldr	r3, [r3, #16]
   4306c:	add	r1, r3, #1
   43070:	ldr	r2, [fp, #-20]	; 0xffffffec
   43074:	str	r1, [r2, #16]
   43078:	cmp	r3, #0
   4307c:	beq	4309c <flatcc_json_printer_uint32_field@@Base+0xb8>
   43080:	ldr	r3, [fp, #-16]
   43084:	ldr	r3, [r3, #20]
   43088:	add	r1, r3, #1
   4308c:	ldr	r2, [fp, #-16]
   43090:	str	r1, [r2, #20]
   43094:	mov	r2, #44	; 0x2c
   43098:	strb	r2, [r3]
   4309c:	ldr	r3, [fp, #4]
   430a0:	mov	r2, r3
   430a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   430a8:	ldr	r0, [fp, #-16]
   430ac:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   430b0:	ldr	r3, [fp, #-16]
   430b4:	ldr	r3, [r3, #20]
   430b8:	mov	r1, r3
   430bc:	ldr	r0, [fp, #-8]
   430c0:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   430c4:	mov	r2, r0
   430c8:	ldr	r3, [fp, #-16]
   430cc:	ldr	r3, [r3, #20]
   430d0:	add	r2, r3, r2
   430d4:	ldr	r3, [fp, #-16]
   430d8:	str	r2, [r3, #20]
   430dc:	b	430e4 <flatcc_json_printer_uint32_field@@Base+0x100>
   430e0:	nop			; (mov r0, r0)
   430e4:	sub	sp, fp, #4
   430e8:	pop	{fp, pc}

000430ec <flatcc_json_printer_uint64_field@@Base>:
   430ec:	push	{fp, lr}
   430f0:	add	fp, sp, #4
   430f4:	sub	sp, sp, #32
   430f8:	str	r0, [fp, #-24]	; 0xffffffe8
   430fc:	str	r1, [fp, #-28]	; 0xffffffe4
   43100:	str	r2, [fp, #-32]	; 0xffffffe0
   43104:	str	r3, [fp, #-36]	; 0xffffffdc
   43108:	ldr	r1, [fp, #-32]	; 0xffffffe0
   4310c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   43110:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43114:	str	r0, [fp, #-16]
   43118:	ldr	r3, [fp, #-16]
   4311c:	cmp	r3, #0
   43120:	beq	43158 <flatcc_json_printer_uint64_field@@Base+0x6c>
   43124:	ldr	r0, [fp, #-16]
   43128:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   4312c:	strd	r0, [fp, #-12]
   43130:	ldrd	r0, [fp, #-12]
   43134:	ldrd	r2, [fp, #12]
   43138:	cmp	r1, r3
   4313c:	cmpeq	r0, r2
   43140:	bne	43170 <flatcc_json_printer_uint64_field@@Base+0x84>
   43144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43148:	ldrb	r3, [r3, #28]
   4314c:	cmp	r3, #0
   43150:	beq	43170 <flatcc_json_printer_uint64_field@@Base+0x84>
   43154:	b	431f0 <flatcc_json_printer_uint64_field@@Base+0x104>
   43158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4315c:	ldrb	r3, [r3, #29]
   43160:	cmp	r3, #0
   43164:	beq	431ec <flatcc_json_printer_uint64_field@@Base+0x100>
   43168:	ldrd	r2, [fp, #12]
   4316c:	strd	r2, [fp, #-12]
   43170:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43174:	ldr	r3, [r3, #16]
   43178:	add	r1, r3, #1
   4317c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   43180:	str	r1, [r2, #16]
   43184:	cmp	r3, #0
   43188:	beq	431a8 <flatcc_json_printer_uint64_field@@Base+0xbc>
   4318c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43190:	ldr	r3, [r3, #20]
   43194:	add	r1, r3, #1
   43198:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4319c:	str	r1, [r2, #20]
   431a0:	mov	r2, #44	; 0x2c
   431a4:	strb	r2, [r3]
   431a8:	ldr	r3, [fp, #4]
   431ac:	mov	r2, r3
   431b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   431b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   431b8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   431bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   431c0:	ldr	r3, [r3, #20]
   431c4:	mov	r2, r3
   431c8:	ldrd	r0, [fp, #-12]
   431cc:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   431d0:	mov	r2, r0
   431d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   431d8:	ldr	r3, [r3, #20]
   431dc:	add	r2, r3, r2
   431e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   431e4:	str	r2, [r3, #20]
   431e8:	b	431f0 <flatcc_json_printer_uint64_field@@Base+0x104>
   431ec:	nop			; (mov r0, r0)
   431f0:	sub	sp, fp, #4
   431f4:	pop	{fp, pc}

000431f8 <flatcc_json_printer_int8_field@@Base>:
   431f8:	push	{fp, lr}
   431fc:	add	fp, sp, #4
   43200:	sub	sp, sp, #24
   43204:	str	r0, [fp, #-16]
   43208:	str	r1, [fp, #-20]	; 0xffffffec
   4320c:	str	r2, [fp, #-24]	; 0xffffffe8
   43210:	str	r3, [fp, #-28]	; 0xffffffe4
   43214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43218:	ldr	r0, [fp, #-20]	; 0xffffffec
   4321c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43220:	str	r0, [fp, #-12]
   43224:	ldr	r3, [fp, #-12]
   43228:	cmp	r3, #0
   4322c:	beq	43264 <flatcc_json_printer_int8_field@@Base+0x6c>
   43230:	ldr	r0, [fp, #-12]
   43234:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   43238:	mov	r3, r0
   4323c:	strb	r3, [fp, #-5]
   43240:	ldrsb	r2, [fp, #-5]
   43244:	ldrsb	r3, [fp, #8]
   43248:	cmp	r2, r3
   4324c:	bne	4327c <flatcc_json_printer_int8_field@@Base+0x84>
   43250:	ldr	r3, [fp, #-16]
   43254:	ldrb	r3, [r3, #28]
   43258:	cmp	r3, #0
   4325c:	beq	4327c <flatcc_json_printer_int8_field@@Base+0x84>
   43260:	b	43300 <flatcc_json_printer_int8_field@@Base+0x108>
   43264:	ldr	r3, [fp, #-16]
   43268:	ldrb	r3, [r3, #29]
   4326c:	cmp	r3, #0
   43270:	beq	432fc <flatcc_json_printer_int8_field@@Base+0x104>
   43274:	ldrb	r3, [fp, #8]
   43278:	strb	r3, [fp, #-5]
   4327c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43280:	ldr	r3, [r3, #16]
   43284:	add	r1, r3, #1
   43288:	ldr	r2, [fp, #-20]	; 0xffffffec
   4328c:	str	r1, [r2, #16]
   43290:	cmp	r3, #0
   43294:	beq	432b4 <flatcc_json_printer_int8_field@@Base+0xbc>
   43298:	ldr	r3, [fp, #-16]
   4329c:	ldr	r3, [r3, #20]
   432a0:	add	r1, r3, #1
   432a4:	ldr	r2, [fp, #-16]
   432a8:	str	r1, [r2, #20]
   432ac:	mov	r2, #44	; 0x2c
   432b0:	strb	r2, [r3]
   432b4:	ldr	r3, [fp, #4]
   432b8:	mov	r2, r3
   432bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   432c0:	ldr	r0, [fp, #-16]
   432c4:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   432c8:	ldr	r3, [fp, #-16]
   432cc:	ldr	r2, [r3, #20]
   432d0:	ldrsb	r3, [fp, #-5]
   432d4:	mov	r1, r2
   432d8:	mov	r0, r3
   432dc:	bl	3ec94 <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   432e0:	mov	r2, r0
   432e4:	ldr	r3, [fp, #-16]
   432e8:	ldr	r3, [r3, #20]
   432ec:	add	r2, r3, r2
   432f0:	ldr	r3, [fp, #-16]
   432f4:	str	r2, [r3, #20]
   432f8:	b	43300 <flatcc_json_printer_int8_field@@Base+0x108>
   432fc:	nop			; (mov r0, r0)
   43300:	sub	sp, fp, #4
   43304:	pop	{fp, pc}

00043308 <flatcc_json_printer_int16_field@@Base>:
   43308:	push	{fp, lr}
   4330c:	add	fp, sp, #4
   43310:	sub	sp, sp, #24
   43314:	str	r0, [fp, #-16]
   43318:	str	r1, [fp, #-20]	; 0xffffffec
   4331c:	str	r2, [fp, #-24]	; 0xffffffe8
   43320:	str	r3, [fp, #-28]	; 0xffffffe4
   43324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43328:	ldr	r0, [fp, #-20]	; 0xffffffec
   4332c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43330:	str	r0, [fp, #-12]
   43334:	ldr	r3, [fp, #-12]
   43338:	cmp	r3, #0
   4333c:	beq	43374 <flatcc_json_printer_int16_field@@Base+0x6c>
   43340:	ldr	r0, [fp, #-12]
   43344:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   43348:	mov	r3, r0
   4334c:	strh	r3, [fp, #-6]
   43350:	ldrsh	r2, [fp, #-6]
   43354:	ldrsh	r3, [fp, #8]
   43358:	cmp	r2, r3
   4335c:	bne	4338c <flatcc_json_printer_int16_field@@Base+0x84>
   43360:	ldr	r3, [fp, #-16]
   43364:	ldrb	r3, [r3, #28]
   43368:	cmp	r3, #0
   4336c:	beq	4338c <flatcc_json_printer_int16_field@@Base+0x84>
   43370:	b	43410 <flatcc_json_printer_int16_field@@Base+0x108>
   43374:	ldr	r3, [fp, #-16]
   43378:	ldrb	r3, [r3, #29]
   4337c:	cmp	r3, #0
   43380:	beq	4340c <flatcc_json_printer_int16_field@@Base+0x104>
   43384:	ldrh	r3, [fp, #8]
   43388:	strh	r3, [fp, #-6]
   4338c:	ldr	r3, [fp, #-20]	; 0xffffffec
   43390:	ldr	r3, [r3, #16]
   43394:	add	r1, r3, #1
   43398:	ldr	r2, [fp, #-20]	; 0xffffffec
   4339c:	str	r1, [r2, #16]
   433a0:	cmp	r3, #0
   433a4:	beq	433c4 <flatcc_json_printer_int16_field@@Base+0xbc>
   433a8:	ldr	r3, [fp, #-16]
   433ac:	ldr	r3, [r3, #20]
   433b0:	add	r1, r3, #1
   433b4:	ldr	r2, [fp, #-16]
   433b8:	str	r1, [r2, #20]
   433bc:	mov	r2, #44	; 0x2c
   433c0:	strb	r2, [r3]
   433c4:	ldr	r3, [fp, #4]
   433c8:	mov	r2, r3
   433cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   433d0:	ldr	r0, [fp, #-16]
   433d4:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   433d8:	ldr	r3, [fp, #-16]
   433dc:	ldr	r2, [r3, #20]
   433e0:	ldrsh	r3, [fp, #-6]
   433e4:	mov	r1, r2
   433e8:	mov	r0, r3
   433ec:	bl	3ed14 <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   433f0:	mov	r2, r0
   433f4:	ldr	r3, [fp, #-16]
   433f8:	ldr	r3, [r3, #20]
   433fc:	add	r2, r3, r2
   43400:	ldr	r3, [fp, #-16]
   43404:	str	r2, [r3, #20]
   43408:	b	43410 <flatcc_json_printer_int16_field@@Base+0x108>
   4340c:	nop			; (mov r0, r0)
   43410:	sub	sp, fp, #4
   43414:	pop	{fp, pc}

00043418 <flatcc_json_printer_int32_field@@Base>:
   43418:	push	{fp, lr}
   4341c:	add	fp, sp, #4
   43420:	sub	sp, sp, #24
   43424:	str	r0, [fp, #-16]
   43428:	str	r1, [fp, #-20]	; 0xffffffec
   4342c:	str	r2, [fp, #-24]	; 0xffffffe8
   43430:	str	r3, [fp, #-28]	; 0xffffffe4
   43434:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43438:	ldr	r0, [fp, #-20]	; 0xffffffec
   4343c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43440:	str	r0, [fp, #-12]
   43444:	ldr	r3, [fp, #-12]
   43448:	cmp	r3, #0
   4344c:	beq	43480 <flatcc_json_printer_int32_field@@Base+0x68>
   43450:	ldr	r0, [fp, #-12]
   43454:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   43458:	str	r0, [fp, #-8]
   4345c:	ldr	r2, [fp, #-8]
   43460:	ldr	r3, [fp, #8]
   43464:	cmp	r2, r3
   43468:	bne	43498 <flatcc_json_printer_int32_field@@Base+0x80>
   4346c:	ldr	r3, [fp, #-16]
   43470:	ldrb	r3, [r3, #28]
   43474:	cmp	r3, #0
   43478:	beq	43498 <flatcc_json_printer_int32_field@@Base+0x80>
   4347c:	b	43518 <flatcc_json_printer_int32_field@@Base+0x100>
   43480:	ldr	r3, [fp, #-16]
   43484:	ldrb	r3, [r3, #29]
   43488:	cmp	r3, #0
   4348c:	beq	43514 <flatcc_json_printer_int32_field@@Base+0xfc>
   43490:	ldr	r3, [fp, #8]
   43494:	str	r3, [fp, #-8]
   43498:	ldr	r3, [fp, #-20]	; 0xffffffec
   4349c:	ldr	r3, [r3, #16]
   434a0:	add	r1, r3, #1
   434a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   434a8:	str	r1, [r2, #16]
   434ac:	cmp	r3, #0
   434b0:	beq	434d0 <flatcc_json_printer_int32_field@@Base+0xb8>
   434b4:	ldr	r3, [fp, #-16]
   434b8:	ldr	r3, [r3, #20]
   434bc:	add	r1, r3, #1
   434c0:	ldr	r2, [fp, #-16]
   434c4:	str	r1, [r2, #20]
   434c8:	mov	r2, #44	; 0x2c
   434cc:	strb	r2, [r3]
   434d0:	ldr	r3, [fp, #4]
   434d4:	mov	r2, r3
   434d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   434dc:	ldr	r0, [fp, #-16]
   434e0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   434e4:	ldr	r3, [fp, #-16]
   434e8:	ldr	r3, [r3, #20]
   434ec:	mov	r1, r3
   434f0:	ldr	r0, [fp, #-8]
   434f4:	bl	3ed94 <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   434f8:	mov	r2, r0
   434fc:	ldr	r3, [fp, #-16]
   43500:	ldr	r3, [r3, #20]
   43504:	add	r2, r3, r2
   43508:	ldr	r3, [fp, #-16]
   4350c:	str	r2, [r3, #20]
   43510:	b	43518 <flatcc_json_printer_int32_field@@Base+0x100>
   43514:	nop			; (mov r0, r0)
   43518:	sub	sp, fp, #4
   4351c:	pop	{fp, pc}

00043520 <flatcc_json_printer_int64_field@@Base>:
   43520:	push	{fp, lr}
   43524:	add	fp, sp, #4
   43528:	sub	sp, sp, #32
   4352c:	str	r0, [fp, #-24]	; 0xffffffe8
   43530:	str	r1, [fp, #-28]	; 0xffffffe4
   43534:	str	r2, [fp, #-32]	; 0xffffffe0
   43538:	str	r3, [fp, #-36]	; 0xffffffdc
   4353c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43540:	ldr	r0, [fp, #-28]	; 0xffffffe4
   43544:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43548:	str	r0, [fp, #-16]
   4354c:	ldr	r3, [fp, #-16]
   43550:	cmp	r3, #0
   43554:	beq	4358c <flatcc_json_printer_int64_field@@Base+0x6c>
   43558:	ldr	r0, [fp, #-16]
   4355c:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   43560:	strd	r0, [fp, #-12]
   43564:	ldrd	r0, [fp, #-12]
   43568:	ldrd	r2, [fp, #12]
   4356c:	cmp	r1, r3
   43570:	cmpeq	r0, r2
   43574:	bne	435a4 <flatcc_json_printer_int64_field@@Base+0x84>
   43578:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4357c:	ldrb	r3, [r3, #28]
   43580:	cmp	r3, #0
   43584:	beq	435a4 <flatcc_json_printer_int64_field@@Base+0x84>
   43588:	b	43624 <flatcc_json_printer_int64_field@@Base+0x104>
   4358c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43590:	ldrb	r3, [r3, #29]
   43594:	cmp	r3, #0
   43598:	beq	43620 <flatcc_json_printer_int64_field@@Base+0x100>
   4359c:	ldrd	r2, [fp, #12]
   435a0:	strd	r2, [fp, #-12]
   435a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   435a8:	ldr	r3, [r3, #16]
   435ac:	add	r1, r3, #1
   435b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   435b4:	str	r1, [r2, #16]
   435b8:	cmp	r3, #0
   435bc:	beq	435dc <flatcc_json_printer_int64_field@@Base+0xbc>
   435c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   435c4:	ldr	r3, [r3, #20]
   435c8:	add	r1, r3, #1
   435cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   435d0:	str	r1, [r2, #20]
   435d4:	mov	r2, #44	; 0x2c
   435d8:	strb	r2, [r3]
   435dc:	ldr	r3, [fp, #4]
   435e0:	mov	r2, r3
   435e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   435e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   435ec:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   435f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   435f4:	ldr	r3, [r3, #20]
   435f8:	mov	r2, r3
   435fc:	ldrd	r0, [fp, #-12]
   43600:	bl	3ee0c <flatcc_json_parser_struct_as_root@@Base+0x2030>
   43604:	mov	r2, r0
   43608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4360c:	ldr	r3, [r3, #20]
   43610:	add	r2, r3, r2
   43614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43618:	str	r2, [r3, #20]
   4361c:	b	43624 <flatcc_json_printer_int64_field@@Base+0x104>
   43620:	nop			; (mov r0, r0)
   43624:	sub	sp, fp, #4
   43628:	pop	{fp, pc}

0004362c <flatcc_json_printer_bool_field@@Base>:
   4362c:	push	{fp, lr}
   43630:	add	fp, sp, #4
   43634:	sub	sp, sp, #24
   43638:	str	r0, [fp, #-16]
   4363c:	str	r1, [fp, #-20]	; 0xffffffec
   43640:	str	r2, [fp, #-24]	; 0xffffffe8
   43644:	str	r3, [fp, #-28]	; 0xffffffe4
   43648:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4364c:	ldr	r0, [fp, #-20]	; 0xffffffec
   43650:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43654:	str	r0, [fp, #-12]
   43658:	ldr	r3, [fp, #-12]
   4365c:	cmp	r3, #0
   43660:	beq	43698 <flatcc_json_printer_bool_field@@Base+0x6c>
   43664:	ldr	r0, [fp, #-12]
   43668:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   4366c:	mov	r3, r0
   43670:	strb	r3, [fp, #-5]
   43674:	ldrb	r2, [fp, #-5]
   43678:	ldrb	r3, [fp, #8]
   4367c:	cmp	r2, r3
   43680:	bne	436b0 <flatcc_json_printer_bool_field@@Base+0x84>
   43684:	ldr	r3, [fp, #-16]
   43688:	ldrb	r3, [r3, #28]
   4368c:	cmp	r3, #0
   43690:	beq	436b0 <flatcc_json_printer_bool_field@@Base+0x84>
   43694:	b	43734 <flatcc_json_printer_bool_field@@Base+0x108>
   43698:	ldr	r3, [fp, #-16]
   4369c:	ldrb	r3, [r3, #29]
   436a0:	cmp	r3, #0
   436a4:	beq	43730 <flatcc_json_printer_bool_field@@Base+0x104>
   436a8:	ldrb	r3, [fp, #8]
   436ac:	strb	r3, [fp, #-5]
   436b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   436b4:	ldr	r3, [r3, #16]
   436b8:	add	r1, r3, #1
   436bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   436c0:	str	r1, [r2, #16]
   436c4:	cmp	r3, #0
   436c8:	beq	436e8 <flatcc_json_printer_bool_field@@Base+0xbc>
   436cc:	ldr	r3, [fp, #-16]
   436d0:	ldr	r3, [r3, #20]
   436d4:	add	r1, r3, #1
   436d8:	ldr	r2, [fp, #-16]
   436dc:	str	r1, [r2, #20]
   436e0:	mov	r2, #44	; 0x2c
   436e4:	strb	r2, [r3]
   436e8:	ldr	r3, [fp, #4]
   436ec:	mov	r2, r3
   436f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   436f4:	ldr	r0, [fp, #-16]
   436f8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   436fc:	ldrb	r2, [fp, #-5]
   43700:	ldr	r3, [fp, #-16]
   43704:	ldr	r3, [r3, #20]
   43708:	mov	r1, r3
   4370c:	mov	r0, r2
   43710:	bl	3d578 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   43714:	mov	r2, r0
   43718:	ldr	r3, [fp, #-16]
   4371c:	ldr	r3, [r3, #20]
   43720:	add	r2, r3, r2
   43724:	ldr	r3, [fp, #-16]
   43728:	str	r2, [r3, #20]
   4372c:	b	43734 <flatcc_json_printer_bool_field@@Base+0x108>
   43730:	nop			; (mov r0, r0)
   43734:	sub	sp, fp, #4
   43738:	pop	{fp, pc}

0004373c <flatcc_json_printer_float_field@@Base>:
   4373c:	push	{fp, lr}
   43740:	add	fp, sp, #4
   43744:	sub	sp, sp, #32
   43748:	str	r0, [fp, #-16]
   4374c:	str	r1, [fp, #-20]	; 0xffffffec
   43750:	str	r2, [fp, #-24]	; 0xffffffe8
   43754:	str	r3, [fp, #-28]	; 0xffffffe4
   43758:	vstr	s0, [fp, #-32]	; 0xffffffe0
   4375c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43760:	ldr	r0, [fp, #-20]	; 0xffffffec
   43764:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43768:	str	r0, [fp, #-12]
   4376c:	ldr	r3, [fp, #-12]
   43770:	cmp	r3, #0
   43774:	beq	437ac <flatcc_json_printer_float_field@@Base+0x70>
   43778:	ldr	r0, [fp, #-12]
   4377c:	bl	3d208 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   43780:	vstr	s0, [fp, #-8]
   43784:	vldr	s14, [fp, #-8]
   43788:	vldr	s15, [fp, #-32]	; 0xffffffe0
   4378c:	vcmp.f32	s14, s15
   43790:	vmrs	APSR_nzcv, fpscr
   43794:	bne	437c4 <flatcc_json_printer_float_field@@Base+0x88>
   43798:	ldr	r3, [fp, #-16]
   4379c:	ldrb	r3, [r3, #28]
   437a0:	cmp	r3, #0
   437a4:	beq	437c4 <flatcc_json_printer_float_field@@Base+0x88>
   437a8:	b	4384c <flatcc_json_printer_float_field@@Base+0x110>
   437ac:	ldr	r3, [fp, #-16]
   437b0:	ldrb	r3, [r3, #29]
   437b4:	cmp	r3, #0
   437b8:	beq	43848 <flatcc_json_printer_float_field@@Base+0x10c>
   437bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   437c0:	str	r3, [fp, #-8]
   437c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   437c8:	ldr	r3, [r3, #16]
   437cc:	add	r1, r3, #1
   437d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   437d4:	str	r1, [r2, #16]
   437d8:	cmp	r3, #0
   437dc:	beq	437fc <flatcc_json_printer_float_field@@Base+0xc0>
   437e0:	ldr	r3, [fp, #-16]
   437e4:	ldr	r3, [r3, #20]
   437e8:	add	r1, r3, #1
   437ec:	ldr	r2, [fp, #-16]
   437f0:	str	r1, [r2, #20]
   437f4:	mov	r2, #44	; 0x2c
   437f8:	strb	r2, [r3]
   437fc:	ldr	r3, [fp, #4]
   43800:	mov	r2, r3
   43804:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43808:	ldr	r0, [fp, #-16]
   4380c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   43810:	vldr	s15, [fp, #-8]
   43814:	vcvt.f64.f32	d7, s15
   43818:	ldr	r3, [fp, #-16]
   4381c:	ldr	r3, [r3, #20]
   43820:	mov	r0, r3
   43824:	vmov.f64	d0, d7
   43828:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   4382c:	mov	r2, r0
   43830:	ldr	r3, [fp, #-16]
   43834:	ldr	r3, [r3, #20]
   43838:	add	r2, r3, r2
   4383c:	ldr	r3, [fp, #-16]
   43840:	str	r2, [r3, #20]
   43844:	b	4384c <flatcc_json_printer_float_field@@Base+0x110>
   43848:	nop			; (mov r0, r0)
   4384c:	sub	sp, fp, #4
   43850:	pop	{fp, pc}

00043854 <flatcc_json_printer_double_field@@Base>:
   43854:	push	{fp, lr}
   43858:	add	fp, sp, #4
   4385c:	sub	sp, sp, #40	; 0x28
   43860:	str	r0, [fp, #-24]	; 0xffffffe8
   43864:	str	r1, [fp, #-28]	; 0xffffffe4
   43868:	str	r2, [fp, #-32]	; 0xffffffe0
   4386c:	str	r3, [fp, #-36]	; 0xffffffdc
   43870:	vstr	d0, [fp, #-44]	; 0xffffffd4
   43874:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43878:	ldr	r0, [fp, #-28]	; 0xffffffe4
   4387c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43880:	str	r0, [fp, #-16]
   43884:	ldr	r3, [fp, #-16]
   43888:	cmp	r3, #0
   4388c:	beq	438c4 <flatcc_json_printer_double_field@@Base+0x70>
   43890:	ldr	r0, [fp, #-16]
   43894:	bl	3d270 <flatcc_json_parser_struct_as_root@@Base+0x494>
   43898:	vstr	d0, [fp, #-12]
   4389c:	vldr	d6, [fp, #-12]
   438a0:	vldr	d7, [fp, #-44]	; 0xffffffd4
   438a4:	vcmp.f64	d6, d7
   438a8:	vmrs	APSR_nzcv, fpscr
   438ac:	bne	438dc <flatcc_json_printer_double_field@@Base+0x88>
   438b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   438b4:	ldrb	r3, [r3, #28]
   438b8:	cmp	r3, #0
   438bc:	beq	438dc <flatcc_json_printer_double_field@@Base+0x88>
   438c0:	b	4395c <flatcc_json_printer_double_field@@Base+0x108>
   438c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   438c8:	ldrb	r3, [r3, #29]
   438cc:	cmp	r3, #0
   438d0:	beq	43958 <flatcc_json_printer_double_field@@Base+0x104>
   438d4:	ldrd	r2, [fp, #-44]	; 0xffffffd4
   438d8:	strd	r2, [fp, #-12]
   438dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   438e0:	ldr	r3, [r3, #16]
   438e4:	add	r1, r3, #1
   438e8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   438ec:	str	r1, [r2, #16]
   438f0:	cmp	r3, #0
   438f4:	beq	43914 <flatcc_json_printer_double_field@@Base+0xc0>
   438f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   438fc:	ldr	r3, [r3, #20]
   43900:	add	r1, r3, #1
   43904:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43908:	str	r1, [r2, #20]
   4390c:	mov	r2, #44	; 0x2c
   43910:	strb	r2, [r3]
   43914:	ldr	r3, [fp, #4]
   43918:	mov	r2, r3
   4391c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   43920:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43924:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   43928:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4392c:	ldr	r3, [r3, #20]
   43930:	mov	r0, r3
   43934:	vldr	d0, [fp, #-12]
   43938:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   4393c:	mov	r2, r0
   43940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43944:	ldr	r3, [r3, #20]
   43948:	add	r2, r3, r2
   4394c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43950:	str	r2, [r3, #20]
   43954:	b	4395c <flatcc_json_printer_double_field@@Base+0x108>
   43958:	nop			; (mov r0, r0)
   4395c:	sub	sp, fp, #4
   43960:	pop	{fp, pc}

00043964 <flatcc_json_printer_uint8_enum_field@@Base>:
   43964:	push	{fp, lr}
   43968:	add	fp, sp, #4
   4396c:	sub	sp, sp, #24
   43970:	str	r0, [fp, #-16]
   43974:	str	r1, [fp, #-20]	; 0xffffffec
   43978:	str	r2, [fp, #-24]	; 0xffffffe8
   4397c:	str	r3, [fp, #-28]	; 0xffffffe4
   43980:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43984:	ldr	r0, [fp, #-20]	; 0xffffffec
   43988:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   4398c:	str	r0, [fp, #-12]
   43990:	ldr	r3, [fp, #-12]
   43994:	cmp	r3, #0
   43998:	beq	439d0 <flatcc_json_printer_uint8_enum_field@@Base+0x6c>
   4399c:	ldr	r0, [fp, #-12]
   439a0:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   439a4:	mov	r3, r0
   439a8:	strb	r3, [fp, #-5]
   439ac:	ldrb	r2, [fp, #-5]
   439b0:	ldrb	r3, [fp, #8]
   439b4:	cmp	r2, r3
   439b8:	bne	439e8 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   439bc:	ldr	r3, [fp, #-16]
   439c0:	ldrb	r3, [r3, #28]
   439c4:	cmp	r3, #0
   439c8:	beq	439e8 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   439cc:	b	43a94 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   439d0:	ldr	r3, [fp, #-16]
   439d4:	ldrb	r3, [r3, #29]
   439d8:	cmp	r3, #0
   439dc:	beq	43a90 <flatcc_json_printer_uint8_enum_field@@Base+0x12c>
   439e0:	ldrb	r3, [fp, #8]
   439e4:	strb	r3, [fp, #-5]
   439e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   439ec:	ldr	r3, [r3, #16]
   439f0:	add	r1, r3, #1
   439f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   439f8:	str	r1, [r2, #16]
   439fc:	cmp	r3, #0
   43a00:	beq	43a20 <flatcc_json_printer_uint8_enum_field@@Base+0xbc>
   43a04:	ldr	r3, [fp, #-16]
   43a08:	ldr	r3, [r3, #20]
   43a0c:	add	r1, r3, #1
   43a10:	ldr	r2, [fp, #-16]
   43a14:	str	r1, [r2, #20]
   43a18:	mov	r2, #44	; 0x2c
   43a1c:	strb	r2, [r3]
   43a20:	ldr	r3, [fp, #4]
   43a24:	mov	r2, r3
   43a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43a2c:	ldr	r0, [fp, #-16]
   43a30:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   43a34:	ldr	r3, [fp, #-16]
   43a38:	ldrb	r3, [r3, #27]
   43a3c:	cmp	r3, #0
   43a40:	beq	43a78 <flatcc_json_printer_uint8_enum_field@@Base+0x114>
   43a44:	ldr	r3, [fp, #-16]
   43a48:	ldr	r2, [r3, #20]
   43a4c:	ldrb	r3, [fp, #-5]
   43a50:	mov	r1, r2
   43a54:	mov	r0, r3
   43a58:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   43a5c:	mov	r2, r0
   43a60:	ldr	r3, [fp, #-16]
   43a64:	ldr	r3, [r3, #20]
   43a68:	add	r2, r3, r2
   43a6c:	ldr	r3, [fp, #-16]
   43a70:	str	r2, [r3, #20]
   43a74:	b	43a94 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   43a78:	ldrb	r2, [fp, #-5]
   43a7c:	ldr	r3, [fp, #12]
   43a80:	mov	r1, r2
   43a84:	ldr	r0, [fp, #-16]
   43a88:	blx	r3
   43a8c:	b	43a94 <flatcc_json_printer_uint8_enum_field@@Base+0x130>
   43a90:	nop			; (mov r0, r0)
   43a94:	sub	sp, fp, #4
   43a98:	pop	{fp, pc}

00043a9c <flatcc_json_printer_uint16_enum_field@@Base>:
   43a9c:	push	{fp, lr}
   43aa0:	add	fp, sp, #4
   43aa4:	sub	sp, sp, #24
   43aa8:	str	r0, [fp, #-16]
   43aac:	str	r1, [fp, #-20]	; 0xffffffec
   43ab0:	str	r2, [fp, #-24]	; 0xffffffe8
   43ab4:	str	r3, [fp, #-28]	; 0xffffffe4
   43ab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43abc:	ldr	r0, [fp, #-20]	; 0xffffffec
   43ac0:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43ac4:	str	r0, [fp, #-12]
   43ac8:	ldr	r3, [fp, #-12]
   43acc:	cmp	r3, #0
   43ad0:	beq	43b08 <flatcc_json_printer_uint16_enum_field@@Base+0x6c>
   43ad4:	ldr	r0, [fp, #-12]
   43ad8:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   43adc:	mov	r3, r0
   43ae0:	strh	r3, [fp, #-6]
   43ae4:	ldrh	r2, [fp, #-6]
   43ae8:	ldrh	r3, [fp, #8]
   43aec:	cmp	r2, r3
   43af0:	bne	43b20 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   43af4:	ldr	r3, [fp, #-16]
   43af8:	ldrb	r3, [r3, #28]
   43afc:	cmp	r3, #0
   43b00:	beq	43b20 <flatcc_json_printer_uint16_enum_field@@Base+0x84>
   43b04:	b	43bcc <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   43b08:	ldr	r3, [fp, #-16]
   43b0c:	ldrb	r3, [r3, #29]
   43b10:	cmp	r3, #0
   43b14:	beq	43bc8 <flatcc_json_printer_uint16_enum_field@@Base+0x12c>
   43b18:	ldrh	r3, [fp, #8]
   43b1c:	strh	r3, [fp, #-6]
   43b20:	ldr	r3, [fp, #-20]	; 0xffffffec
   43b24:	ldr	r3, [r3, #16]
   43b28:	add	r1, r3, #1
   43b2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   43b30:	str	r1, [r2, #16]
   43b34:	cmp	r3, #0
   43b38:	beq	43b58 <flatcc_json_printer_uint16_enum_field@@Base+0xbc>
   43b3c:	ldr	r3, [fp, #-16]
   43b40:	ldr	r3, [r3, #20]
   43b44:	add	r1, r3, #1
   43b48:	ldr	r2, [fp, #-16]
   43b4c:	str	r1, [r2, #20]
   43b50:	mov	r2, #44	; 0x2c
   43b54:	strb	r2, [r3]
   43b58:	ldr	r3, [fp, #4]
   43b5c:	mov	r2, r3
   43b60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43b64:	ldr	r0, [fp, #-16]
   43b68:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   43b6c:	ldr	r3, [fp, #-16]
   43b70:	ldrb	r3, [r3, #27]
   43b74:	cmp	r3, #0
   43b78:	beq	43bb0 <flatcc_json_printer_uint16_enum_field@@Base+0x114>
   43b7c:	ldr	r3, [fp, #-16]
   43b80:	ldr	r2, [r3, #20]
   43b84:	ldrh	r3, [fp, #-6]
   43b88:	mov	r1, r2
   43b8c:	mov	r0, r3
   43b90:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   43b94:	mov	r2, r0
   43b98:	ldr	r3, [fp, #-16]
   43b9c:	ldr	r3, [r3, #20]
   43ba0:	add	r2, r3, r2
   43ba4:	ldr	r3, [fp, #-16]
   43ba8:	str	r2, [r3, #20]
   43bac:	b	43bcc <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   43bb0:	ldrh	r2, [fp, #-6]
   43bb4:	ldr	r3, [fp, #12]
   43bb8:	mov	r1, r2
   43bbc:	ldr	r0, [fp, #-16]
   43bc0:	blx	r3
   43bc4:	b	43bcc <flatcc_json_printer_uint16_enum_field@@Base+0x130>
   43bc8:	nop			; (mov r0, r0)
   43bcc:	sub	sp, fp, #4
   43bd0:	pop	{fp, pc}

00043bd4 <flatcc_json_printer_uint32_enum_field@@Base>:
   43bd4:	push	{fp, lr}
   43bd8:	add	fp, sp, #4
   43bdc:	sub	sp, sp, #24
   43be0:	str	r0, [fp, #-16]
   43be4:	str	r1, [fp, #-20]	; 0xffffffec
   43be8:	str	r2, [fp, #-24]	; 0xffffffe8
   43bec:	str	r3, [fp, #-28]	; 0xffffffe4
   43bf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43bf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   43bf8:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43bfc:	str	r0, [fp, #-12]
   43c00:	ldr	r3, [fp, #-12]
   43c04:	cmp	r3, #0
   43c08:	beq	43c3c <flatcc_json_printer_uint32_enum_field@@Base+0x68>
   43c0c:	ldr	r0, [fp, #-12]
   43c10:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   43c14:	str	r0, [fp, #-8]
   43c18:	ldr	r2, [fp, #-8]
   43c1c:	ldr	r3, [fp, #8]
   43c20:	cmp	r2, r3
   43c24:	bne	43c54 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   43c28:	ldr	r3, [fp, #-16]
   43c2c:	ldrb	r3, [r3, #28]
   43c30:	cmp	r3, #0
   43c34:	beq	43c54 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   43c38:	b	43cf8 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   43c3c:	ldr	r3, [fp, #-16]
   43c40:	ldrb	r3, [r3, #29]
   43c44:	cmp	r3, #0
   43c48:	beq	43cf4 <flatcc_json_printer_uint32_enum_field@@Base+0x120>
   43c4c:	ldr	r3, [fp, #8]
   43c50:	str	r3, [fp, #-8]
   43c54:	ldr	r3, [fp, #-20]	; 0xffffffec
   43c58:	ldr	r3, [r3, #16]
   43c5c:	add	r1, r3, #1
   43c60:	ldr	r2, [fp, #-20]	; 0xffffffec
   43c64:	str	r1, [r2, #16]
   43c68:	cmp	r3, #0
   43c6c:	beq	43c8c <flatcc_json_printer_uint32_enum_field@@Base+0xb8>
   43c70:	ldr	r3, [fp, #-16]
   43c74:	ldr	r3, [r3, #20]
   43c78:	add	r1, r3, #1
   43c7c:	ldr	r2, [fp, #-16]
   43c80:	str	r1, [r2, #20]
   43c84:	mov	r2, #44	; 0x2c
   43c88:	strb	r2, [r3]
   43c8c:	ldr	r3, [fp, #4]
   43c90:	mov	r2, r3
   43c94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43c98:	ldr	r0, [fp, #-16]
   43c9c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   43ca0:	ldr	r3, [fp, #-16]
   43ca4:	ldrb	r3, [r3, #27]
   43ca8:	cmp	r3, #0
   43cac:	beq	43ce0 <flatcc_json_printer_uint32_enum_field@@Base+0x10c>
   43cb0:	ldr	r3, [fp, #-16]
   43cb4:	ldr	r3, [r3, #20]
   43cb8:	mov	r1, r3
   43cbc:	ldr	r0, [fp, #-8]
   43cc0:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   43cc4:	mov	r2, r0
   43cc8:	ldr	r3, [fp, #-16]
   43ccc:	ldr	r3, [r3, #20]
   43cd0:	add	r2, r3, r2
   43cd4:	ldr	r3, [fp, #-16]
   43cd8:	str	r2, [r3, #20]
   43cdc:	b	43cf8 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   43ce0:	ldr	r3, [fp, #12]
   43ce4:	ldr	r1, [fp, #-8]
   43ce8:	ldr	r0, [fp, #-16]
   43cec:	blx	r3
   43cf0:	b	43cf8 <flatcc_json_printer_uint32_enum_field@@Base+0x124>
   43cf4:	nop			; (mov r0, r0)
   43cf8:	sub	sp, fp, #4
   43cfc:	pop	{fp, pc}

00043d00 <flatcc_json_printer_uint64_enum_field@@Base>:
   43d00:	push	{fp, lr}
   43d04:	add	fp, sp, #4
   43d08:	sub	sp, sp, #32
   43d0c:	str	r0, [fp, #-24]	; 0xffffffe8
   43d10:	str	r1, [fp, #-28]	; 0xffffffe4
   43d14:	str	r2, [fp, #-32]	; 0xffffffe0
   43d18:	str	r3, [fp, #-36]	; 0xffffffdc
   43d1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   43d20:	ldr	r0, [fp, #-28]	; 0xffffffe4
   43d24:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43d28:	str	r0, [fp, #-16]
   43d2c:	ldr	r3, [fp, #-16]
   43d30:	cmp	r3, #0
   43d34:	beq	43d6c <flatcc_json_printer_uint64_enum_field@@Base+0x6c>
   43d38:	ldr	r0, [fp, #-16]
   43d3c:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   43d40:	strd	r0, [fp, #-12]
   43d44:	ldrd	r0, [fp, #-12]
   43d48:	ldrd	r2, [fp, #12]
   43d4c:	cmp	r1, r3
   43d50:	cmpeq	r0, r2
   43d54:	bne	43d84 <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   43d58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43d5c:	ldrb	r3, [r3, #28]
   43d60:	cmp	r3, #0
   43d64:	beq	43d84 <flatcc_json_printer_uint64_enum_field@@Base+0x84>
   43d68:	b	43e28 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   43d6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43d70:	ldrb	r3, [r3, #29]
   43d74:	cmp	r3, #0
   43d78:	beq	43e24 <flatcc_json_printer_uint64_enum_field@@Base+0x124>
   43d7c:	ldrd	r2, [fp, #12]
   43d80:	strd	r2, [fp, #-12]
   43d84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   43d88:	ldr	r3, [r3, #16]
   43d8c:	add	r1, r3, #1
   43d90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   43d94:	str	r1, [r2, #16]
   43d98:	cmp	r3, #0
   43d9c:	beq	43dbc <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   43da0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43da4:	ldr	r3, [r3, #20]
   43da8:	add	r1, r3, #1
   43dac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   43db0:	str	r1, [r2, #20]
   43db4:	mov	r2, #44	; 0x2c
   43db8:	strb	r2, [r3]
   43dbc:	ldr	r3, [fp, #4]
   43dc0:	mov	r2, r3
   43dc4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   43dc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43dcc:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   43dd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43dd4:	ldrb	r3, [r3, #27]
   43dd8:	cmp	r3, #0
   43ddc:	beq	43e10 <flatcc_json_printer_uint64_enum_field@@Base+0x110>
   43de0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43de4:	ldr	r3, [r3, #20]
   43de8:	mov	r2, r3
   43dec:	ldrd	r0, [fp, #-12]
   43df0:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   43df4:	mov	r2, r0
   43df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43dfc:	ldr	r3, [r3, #20]
   43e00:	add	r2, r3, r2
   43e04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   43e08:	str	r2, [r3, #20]
   43e0c:	b	43e28 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   43e10:	ldr	r1, [fp, #20]
   43e14:	ldrd	r2, [fp, #-12]
   43e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   43e1c:	blx	r1
   43e20:	b	43e28 <flatcc_json_printer_uint64_enum_field@@Base+0x128>
   43e24:	nop			; (mov r0, r0)
   43e28:	sub	sp, fp, #4
   43e2c:	pop	{fp, pc}

00043e30 <flatcc_json_printer_int8_enum_field@@Base>:
   43e30:	push	{fp, lr}
   43e34:	add	fp, sp, #4
   43e38:	sub	sp, sp, #24
   43e3c:	str	r0, [fp, #-16]
   43e40:	str	r1, [fp, #-20]	; 0xffffffec
   43e44:	str	r2, [fp, #-24]	; 0xffffffe8
   43e48:	str	r3, [fp, #-28]	; 0xffffffe4
   43e4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43e50:	ldr	r0, [fp, #-20]	; 0xffffffec
   43e54:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43e58:	str	r0, [fp, #-12]
   43e5c:	ldr	r3, [fp, #-12]
   43e60:	cmp	r3, #0
   43e64:	beq	43e9c <flatcc_json_printer_int8_enum_field@@Base+0x6c>
   43e68:	ldr	r0, [fp, #-12]
   43e6c:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   43e70:	mov	r3, r0
   43e74:	strb	r3, [fp, #-5]
   43e78:	ldrsb	r2, [fp, #-5]
   43e7c:	ldrsb	r3, [fp, #8]
   43e80:	cmp	r2, r3
   43e84:	bne	43eb4 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   43e88:	ldr	r3, [fp, #-16]
   43e8c:	ldrb	r3, [r3, #28]
   43e90:	cmp	r3, #0
   43e94:	beq	43eb4 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   43e98:	b	43f60 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   43e9c:	ldr	r3, [fp, #-16]
   43ea0:	ldrb	r3, [r3, #29]
   43ea4:	cmp	r3, #0
   43ea8:	beq	43f5c <flatcc_json_printer_int8_enum_field@@Base+0x12c>
   43eac:	ldrb	r3, [fp, #8]
   43eb0:	strb	r3, [fp, #-5]
   43eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   43eb8:	ldr	r3, [r3, #16]
   43ebc:	add	r1, r3, #1
   43ec0:	ldr	r2, [fp, #-20]	; 0xffffffec
   43ec4:	str	r1, [r2, #16]
   43ec8:	cmp	r3, #0
   43ecc:	beq	43eec <flatcc_json_printer_int8_enum_field@@Base+0xbc>
   43ed0:	ldr	r3, [fp, #-16]
   43ed4:	ldr	r3, [r3, #20]
   43ed8:	add	r1, r3, #1
   43edc:	ldr	r2, [fp, #-16]
   43ee0:	str	r1, [r2, #20]
   43ee4:	mov	r2, #44	; 0x2c
   43ee8:	strb	r2, [r3]
   43eec:	ldr	r3, [fp, #4]
   43ef0:	mov	r2, r3
   43ef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   43ef8:	ldr	r0, [fp, #-16]
   43efc:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   43f00:	ldr	r3, [fp, #-16]
   43f04:	ldrb	r3, [r3, #27]
   43f08:	cmp	r3, #0
   43f0c:	beq	43f44 <flatcc_json_printer_int8_enum_field@@Base+0x114>
   43f10:	ldr	r3, [fp, #-16]
   43f14:	ldr	r2, [r3, #20]
   43f18:	ldrsb	r3, [fp, #-5]
   43f1c:	mov	r1, r2
   43f20:	mov	r0, r3
   43f24:	bl	3ec94 <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   43f28:	mov	r2, r0
   43f2c:	ldr	r3, [fp, #-16]
   43f30:	ldr	r3, [r3, #20]
   43f34:	add	r2, r3, r2
   43f38:	ldr	r3, [fp, #-16]
   43f3c:	str	r2, [r3, #20]
   43f40:	b	43f60 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   43f44:	ldrsb	r2, [fp, #-5]
   43f48:	ldr	r3, [fp, #12]
   43f4c:	mov	r1, r2
   43f50:	ldr	r0, [fp, #-16]
   43f54:	blx	r3
   43f58:	b	43f60 <flatcc_json_printer_int8_enum_field@@Base+0x130>
   43f5c:	nop			; (mov r0, r0)
   43f60:	sub	sp, fp, #4
   43f64:	pop	{fp, pc}

00043f68 <flatcc_json_printer_int16_enum_field@@Base>:
   43f68:	push	{fp, lr}
   43f6c:	add	fp, sp, #4
   43f70:	sub	sp, sp, #24
   43f74:	str	r0, [fp, #-16]
   43f78:	str	r1, [fp, #-20]	; 0xffffffec
   43f7c:	str	r2, [fp, #-24]	; 0xffffffe8
   43f80:	str	r3, [fp, #-28]	; 0xffffffe4
   43f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   43f88:	ldr	r0, [fp, #-20]	; 0xffffffec
   43f8c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   43f90:	str	r0, [fp, #-12]
   43f94:	ldr	r3, [fp, #-12]
   43f98:	cmp	r3, #0
   43f9c:	beq	43fd4 <flatcc_json_printer_int16_enum_field@@Base+0x6c>
   43fa0:	ldr	r0, [fp, #-12]
   43fa4:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   43fa8:	mov	r3, r0
   43fac:	strh	r3, [fp, #-6]
   43fb0:	ldrsh	r2, [fp, #-6]
   43fb4:	ldrsh	r3, [fp, #8]
   43fb8:	cmp	r2, r3
   43fbc:	bne	43fec <flatcc_json_printer_int16_enum_field@@Base+0x84>
   43fc0:	ldr	r3, [fp, #-16]
   43fc4:	ldrb	r3, [r3, #28]
   43fc8:	cmp	r3, #0
   43fcc:	beq	43fec <flatcc_json_printer_int16_enum_field@@Base+0x84>
   43fd0:	b	44098 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   43fd4:	ldr	r3, [fp, #-16]
   43fd8:	ldrb	r3, [r3, #29]
   43fdc:	cmp	r3, #0
   43fe0:	beq	44094 <flatcc_json_printer_int16_enum_field@@Base+0x12c>
   43fe4:	ldrh	r3, [fp, #8]
   43fe8:	strh	r3, [fp, #-6]
   43fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   43ff0:	ldr	r3, [r3, #16]
   43ff4:	add	r1, r3, #1
   43ff8:	ldr	r2, [fp, #-20]	; 0xffffffec
   43ffc:	str	r1, [r2, #16]
   44000:	cmp	r3, #0
   44004:	beq	44024 <flatcc_json_printer_int16_enum_field@@Base+0xbc>
   44008:	ldr	r3, [fp, #-16]
   4400c:	ldr	r3, [r3, #20]
   44010:	add	r1, r3, #1
   44014:	ldr	r2, [fp, #-16]
   44018:	str	r1, [r2, #20]
   4401c:	mov	r2, #44	; 0x2c
   44020:	strb	r2, [r3]
   44024:	ldr	r3, [fp, #4]
   44028:	mov	r2, r3
   4402c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44030:	ldr	r0, [fp, #-16]
   44034:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44038:	ldr	r3, [fp, #-16]
   4403c:	ldrb	r3, [r3, #27]
   44040:	cmp	r3, #0
   44044:	beq	4407c <flatcc_json_printer_int16_enum_field@@Base+0x114>
   44048:	ldr	r3, [fp, #-16]
   4404c:	ldr	r2, [r3, #20]
   44050:	ldrsh	r3, [fp, #-6]
   44054:	mov	r1, r2
   44058:	mov	r0, r3
   4405c:	bl	3ed14 <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   44060:	mov	r2, r0
   44064:	ldr	r3, [fp, #-16]
   44068:	ldr	r3, [r3, #20]
   4406c:	add	r2, r3, r2
   44070:	ldr	r3, [fp, #-16]
   44074:	str	r2, [r3, #20]
   44078:	b	44098 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   4407c:	ldrsh	r2, [fp, #-6]
   44080:	ldr	r3, [fp, #12]
   44084:	mov	r1, r2
   44088:	ldr	r0, [fp, #-16]
   4408c:	blx	r3
   44090:	b	44098 <flatcc_json_printer_int16_enum_field@@Base+0x130>
   44094:	nop			; (mov r0, r0)
   44098:	sub	sp, fp, #4
   4409c:	pop	{fp, pc}

000440a0 <flatcc_json_printer_int32_enum_field@@Base>:
   440a0:	push	{fp, lr}
   440a4:	add	fp, sp, #4
   440a8:	sub	sp, sp, #24
   440ac:	str	r0, [fp, #-16]
   440b0:	str	r1, [fp, #-20]	; 0xffffffec
   440b4:	str	r2, [fp, #-24]	; 0xffffffe8
   440b8:	str	r3, [fp, #-28]	; 0xffffffe4
   440bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   440c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   440c4:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   440c8:	str	r0, [fp, #-12]
   440cc:	ldr	r3, [fp, #-12]
   440d0:	cmp	r3, #0
   440d4:	beq	44108 <flatcc_json_printer_int32_enum_field@@Base+0x68>
   440d8:	ldr	r0, [fp, #-12]
   440dc:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   440e0:	str	r0, [fp, #-8]
   440e4:	ldr	r2, [fp, #-8]
   440e8:	ldr	r3, [fp, #8]
   440ec:	cmp	r2, r3
   440f0:	bne	44120 <flatcc_json_printer_int32_enum_field@@Base+0x80>
   440f4:	ldr	r3, [fp, #-16]
   440f8:	ldrb	r3, [r3, #28]
   440fc:	cmp	r3, #0
   44100:	beq	44120 <flatcc_json_printer_int32_enum_field@@Base+0x80>
   44104:	b	441c4 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   44108:	ldr	r3, [fp, #-16]
   4410c:	ldrb	r3, [r3, #29]
   44110:	cmp	r3, #0
   44114:	beq	441c0 <flatcc_json_printer_int32_enum_field@@Base+0x120>
   44118:	ldr	r3, [fp, #8]
   4411c:	str	r3, [fp, #-8]
   44120:	ldr	r3, [fp, #-20]	; 0xffffffec
   44124:	ldr	r3, [r3, #16]
   44128:	add	r1, r3, #1
   4412c:	ldr	r2, [fp, #-20]	; 0xffffffec
   44130:	str	r1, [r2, #16]
   44134:	cmp	r3, #0
   44138:	beq	44158 <flatcc_json_printer_int32_enum_field@@Base+0xb8>
   4413c:	ldr	r3, [fp, #-16]
   44140:	ldr	r3, [r3, #20]
   44144:	add	r1, r3, #1
   44148:	ldr	r2, [fp, #-16]
   4414c:	str	r1, [r2, #20]
   44150:	mov	r2, #44	; 0x2c
   44154:	strb	r2, [r3]
   44158:	ldr	r3, [fp, #4]
   4415c:	mov	r2, r3
   44160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   44164:	ldr	r0, [fp, #-16]
   44168:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   4416c:	ldr	r3, [fp, #-16]
   44170:	ldrb	r3, [r3, #27]
   44174:	cmp	r3, #0
   44178:	beq	441ac <flatcc_json_printer_int32_enum_field@@Base+0x10c>
   4417c:	ldr	r3, [fp, #-16]
   44180:	ldr	r3, [r3, #20]
   44184:	mov	r1, r3
   44188:	ldr	r0, [fp, #-8]
   4418c:	bl	3ed94 <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   44190:	mov	r2, r0
   44194:	ldr	r3, [fp, #-16]
   44198:	ldr	r3, [r3, #20]
   4419c:	add	r2, r3, r2
   441a0:	ldr	r3, [fp, #-16]
   441a4:	str	r2, [r3, #20]
   441a8:	b	441c4 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   441ac:	ldr	r3, [fp, #12]
   441b0:	ldr	r1, [fp, #-8]
   441b4:	ldr	r0, [fp, #-16]
   441b8:	blx	r3
   441bc:	b	441c4 <flatcc_json_printer_int32_enum_field@@Base+0x124>
   441c0:	nop			; (mov r0, r0)
   441c4:	sub	sp, fp, #4
   441c8:	pop	{fp, pc}

000441cc <flatcc_json_printer_int64_enum_field@@Base>:
   441cc:	push	{fp, lr}
   441d0:	add	fp, sp, #4
   441d4:	sub	sp, sp, #32
   441d8:	str	r0, [fp, #-24]	; 0xffffffe8
   441dc:	str	r1, [fp, #-28]	; 0xffffffe4
   441e0:	str	r2, [fp, #-32]	; 0xffffffe0
   441e4:	str	r3, [fp, #-36]	; 0xffffffdc
   441e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   441ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   441f0:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   441f4:	str	r0, [fp, #-16]
   441f8:	ldr	r3, [fp, #-16]
   441fc:	cmp	r3, #0
   44200:	beq	44238 <flatcc_json_printer_int64_enum_field@@Base+0x6c>
   44204:	ldr	r0, [fp, #-16]
   44208:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   4420c:	strd	r0, [fp, #-12]
   44210:	ldrd	r0, [fp, #-12]
   44214:	ldrd	r2, [fp, #12]
   44218:	cmp	r1, r3
   4421c:	cmpeq	r0, r2
   44220:	bne	44250 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   44224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44228:	ldrb	r3, [r3, #28]
   4422c:	cmp	r3, #0
   44230:	beq	44250 <flatcc_json_printer_int64_enum_field@@Base+0x84>
   44234:	b	442f4 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   44238:	ldr	r3, [fp, #-24]	; 0xffffffe8
   4423c:	ldrb	r3, [r3, #29]
   44240:	cmp	r3, #0
   44244:	beq	442f0 <flatcc_json_printer_int64_enum_field@@Base+0x124>
   44248:	ldrd	r2, [fp, #12]
   4424c:	strd	r2, [fp, #-12]
   44250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44254:	ldr	r3, [r3, #16]
   44258:	add	r1, r3, #1
   4425c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   44260:	str	r1, [r2, #16]
   44264:	cmp	r3, #0
   44268:	beq	44288 <flatcc_json_printer_int64_enum_field@@Base+0xbc>
   4426c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   44270:	ldr	r3, [r3, #20]
   44274:	add	r1, r3, #1
   44278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4427c:	str	r1, [r2, #20]
   44280:	mov	r2, #44	; 0x2c
   44284:	strb	r2, [r3]
   44288:	ldr	r3, [fp, #4]
   4428c:	mov	r2, r3
   44290:	ldr	r1, [fp, #-36]	; 0xffffffdc
   44294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   44298:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   4429c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   442a0:	ldrb	r3, [r3, #27]
   442a4:	cmp	r3, #0
   442a8:	beq	442dc <flatcc_json_printer_int64_enum_field@@Base+0x110>
   442ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   442b0:	ldr	r3, [r3, #20]
   442b4:	mov	r2, r3
   442b8:	ldrd	r0, [fp, #-12]
   442bc:	bl	3ee0c <flatcc_json_parser_struct_as_root@@Base+0x2030>
   442c0:	mov	r2, r0
   442c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   442c8:	ldr	r3, [r3, #20]
   442cc:	add	r2, r3, r2
   442d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   442d4:	str	r2, [r3, #20]
   442d8:	b	442f4 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   442dc:	ldr	r1, [fp, #20]
   442e0:	ldrd	r2, [fp, #-12]
   442e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   442e8:	blx	r1
   442ec:	b	442f4 <flatcc_json_printer_int64_enum_field@@Base+0x128>
   442f0:	nop			; (mov r0, r0)
   442f4:	sub	sp, fp, #4
   442f8:	pop	{fp, pc}

000442fc <flatcc_json_printer_bool_enum_field@@Base>:
   442fc:	push	{fp, lr}
   44300:	add	fp, sp, #4
   44304:	sub	sp, sp, #24
   44308:	str	r0, [fp, #-16]
   4430c:	str	r1, [fp, #-20]	; 0xffffffec
   44310:	str	r2, [fp, #-24]	; 0xffffffe8
   44314:	str	r3, [fp, #-28]	; 0xffffffe4
   44318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4431c:	ldr	r0, [fp, #-20]	; 0xffffffec
   44320:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   44324:	str	r0, [fp, #-12]
   44328:	ldr	r3, [fp, #-12]
   4432c:	cmp	r3, #0
   44330:	beq	44368 <flatcc_json_printer_bool_enum_field@@Base+0x6c>
   44334:	ldr	r0, [fp, #-12]
   44338:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   4433c:	mov	r3, r0
   44340:	strb	r3, [fp, #-5]
   44344:	ldrb	r2, [fp, #-5]
   44348:	ldrb	r3, [fp, #8]
   4434c:	cmp	r2, r3
   44350:	bne	44380 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   44354:	ldr	r3, [fp, #-16]
   44358:	ldrb	r3, [r3, #28]
   4435c:	cmp	r3, #0
   44360:	beq	44380 <flatcc_json_printer_bool_enum_field@@Base+0x84>
   44364:	b	4442c <flatcc_json_printer_bool_enum_field@@Base+0x130>
   44368:	ldr	r3, [fp, #-16]
   4436c:	ldrb	r3, [r3, #29]
   44370:	cmp	r3, #0
   44374:	beq	44428 <flatcc_json_printer_bool_enum_field@@Base+0x12c>
   44378:	ldrb	r3, [fp, #8]
   4437c:	strb	r3, [fp, #-5]
   44380:	ldr	r3, [fp, #-20]	; 0xffffffec
   44384:	ldr	r3, [r3, #16]
   44388:	add	r1, r3, #1
   4438c:	ldr	r2, [fp, #-20]	; 0xffffffec
   44390:	str	r1, [r2, #16]
   44394:	cmp	r3, #0
   44398:	beq	443b8 <flatcc_json_printer_bool_enum_field@@Base+0xbc>
   4439c:	ldr	r3, [fp, #-16]
   443a0:	ldr	r3, [r3, #20]
   443a4:	add	r1, r3, #1
   443a8:	ldr	r2, [fp, #-16]
   443ac:	str	r1, [r2, #20]
   443b0:	mov	r2, #44	; 0x2c
   443b4:	strb	r2, [r3]
   443b8:	ldr	r3, [fp, #4]
   443bc:	mov	r2, r3
   443c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   443c4:	ldr	r0, [fp, #-16]
   443c8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   443cc:	ldr	r3, [fp, #-16]
   443d0:	ldrb	r3, [r3, #27]
   443d4:	cmp	r3, #0
   443d8:	beq	44410 <flatcc_json_printer_bool_enum_field@@Base+0x114>
   443dc:	ldrb	r2, [fp, #-5]
   443e0:	ldr	r3, [fp, #-16]
   443e4:	ldr	r3, [r3, #20]
   443e8:	mov	r1, r3
   443ec:	mov	r0, r2
   443f0:	bl	3d578 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   443f4:	mov	r2, r0
   443f8:	ldr	r3, [fp, #-16]
   443fc:	ldr	r3, [r3, #20]
   44400:	add	r2, r3, r2
   44404:	ldr	r3, [fp, #-16]
   44408:	str	r2, [r3, #20]
   4440c:	b	4442c <flatcc_json_printer_bool_enum_field@@Base+0x130>
   44410:	ldrb	r2, [fp, #-5]
   44414:	ldr	r3, [fp, #12]
   44418:	mov	r1, r2
   4441c:	ldr	r0, [fp, #-16]
   44420:	blx	r3
   44424:	b	4442c <flatcc_json_printer_bool_enum_field@@Base+0x130>
   44428:	nop			; (mov r0, r0)
   4442c:	sub	sp, fp, #4
   44430:	pop	{fp, pc}

00044434 <flatcc_json_printer_uint8_struct_field@@Base>:
   44434:	push	{fp, lr}
   44438:	add	fp, sp, #4
   4443c:	sub	sp, sp, #24
   44440:	str	r0, [fp, #-16]
   44444:	str	r1, [fp, #-20]	; 0xffffffec
   44448:	str	r2, [fp, #-24]	; 0xffffffe8
   4444c:	str	r3, [fp, #-28]	; 0xffffffe4
   44450:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44458:	add	r3, r2, r3
   4445c:	mov	r0, r3
   44460:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   44464:	mov	r3, r0
   44468:	strb	r3, [fp, #-5]
   4446c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44470:	cmp	r3, #0
   44474:	beq	44494 <flatcc_json_printer_uint8_struct_field@@Base+0x60>
   44478:	ldr	r3, [fp, #-16]
   4447c:	ldr	r3, [r3, #20]
   44480:	add	r1, r3, #1
   44484:	ldr	r2, [fp, #-16]
   44488:	str	r1, [r2, #20]
   4448c:	mov	r2, #44	; 0x2c
   44490:	strb	r2, [r3]
   44494:	ldr	r3, [fp, #8]
   44498:	mov	r2, r3
   4449c:	ldr	r1, [fp, #4]
   444a0:	ldr	r0, [fp, #-16]
   444a4:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   444a8:	ldr	r3, [fp, #-16]
   444ac:	ldr	r2, [r3, #20]
   444b0:	ldrb	r3, [fp, #-5]
   444b4:	mov	r1, r2
   444b8:	mov	r0, r3
   444bc:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   444c0:	mov	r2, r0
   444c4:	ldr	r3, [fp, #-16]
   444c8:	ldr	r3, [r3, #20]
   444cc:	add	r2, r3, r2
   444d0:	ldr	r3, [fp, #-16]
   444d4:	str	r2, [r3, #20]
   444d8:	nop			; (mov r0, r0)
   444dc:	sub	sp, fp, #4
   444e0:	pop	{fp, pc}

000444e4 <flatcc_json_printer_uint16_struct_field@@Base>:
   444e4:	push	{fp, lr}
   444e8:	add	fp, sp, #4
   444ec:	sub	sp, sp, #24
   444f0:	str	r0, [fp, #-16]
   444f4:	str	r1, [fp, #-20]	; 0xffffffec
   444f8:	str	r2, [fp, #-24]	; 0xffffffe8
   444fc:	str	r3, [fp, #-28]	; 0xffffffe4
   44500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44504:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44508:	add	r3, r2, r3
   4450c:	mov	r0, r3
   44510:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   44514:	mov	r3, r0
   44518:	strh	r3, [fp, #-6]
   4451c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44520:	cmp	r3, #0
   44524:	beq	44544 <flatcc_json_printer_uint16_struct_field@@Base+0x60>
   44528:	ldr	r3, [fp, #-16]
   4452c:	ldr	r3, [r3, #20]
   44530:	add	r1, r3, #1
   44534:	ldr	r2, [fp, #-16]
   44538:	str	r1, [r2, #20]
   4453c:	mov	r2, #44	; 0x2c
   44540:	strb	r2, [r3]
   44544:	ldr	r3, [fp, #8]
   44548:	mov	r2, r3
   4454c:	ldr	r1, [fp, #4]
   44550:	ldr	r0, [fp, #-16]
   44554:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44558:	ldr	r3, [fp, #-16]
   4455c:	ldr	r2, [r3, #20]
   44560:	ldrh	r3, [fp, #-6]
   44564:	mov	r1, r2
   44568:	mov	r0, r3
   4456c:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   44570:	mov	r2, r0
   44574:	ldr	r3, [fp, #-16]
   44578:	ldr	r3, [r3, #20]
   4457c:	add	r2, r3, r2
   44580:	ldr	r3, [fp, #-16]
   44584:	str	r2, [r3, #20]
   44588:	nop			; (mov r0, r0)
   4458c:	sub	sp, fp, #4
   44590:	pop	{fp, pc}

00044594 <flatcc_json_printer_uint32_struct_field@@Base>:
   44594:	push	{fp, lr}
   44598:	add	fp, sp, #4
   4459c:	sub	sp, sp, #24
   445a0:	str	r0, [fp, #-16]
   445a4:	str	r1, [fp, #-20]	; 0xffffffec
   445a8:	str	r2, [fp, #-24]	; 0xffffffe8
   445ac:	str	r3, [fp, #-28]	; 0xffffffe4
   445b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   445b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   445b8:	add	r3, r2, r3
   445bc:	mov	r0, r3
   445c0:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   445c4:	str	r0, [fp, #-8]
   445c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   445cc:	cmp	r3, #0
   445d0:	beq	445f0 <flatcc_json_printer_uint32_struct_field@@Base+0x5c>
   445d4:	ldr	r3, [fp, #-16]
   445d8:	ldr	r3, [r3, #20]
   445dc:	add	r1, r3, #1
   445e0:	ldr	r2, [fp, #-16]
   445e4:	str	r1, [r2, #20]
   445e8:	mov	r2, #44	; 0x2c
   445ec:	strb	r2, [r3]
   445f0:	ldr	r3, [fp, #8]
   445f4:	mov	r2, r3
   445f8:	ldr	r1, [fp, #4]
   445fc:	ldr	r0, [fp, #-16]
   44600:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44604:	ldr	r3, [fp, #-16]
   44608:	ldr	r3, [r3, #20]
   4460c:	mov	r1, r3
   44610:	ldr	r0, [fp, #-8]
   44614:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   44618:	mov	r2, r0
   4461c:	ldr	r3, [fp, #-16]
   44620:	ldr	r3, [r3, #20]
   44624:	add	r2, r3, r2
   44628:	ldr	r3, [fp, #-16]
   4462c:	str	r2, [r3, #20]
   44630:	nop			; (mov r0, r0)
   44634:	sub	sp, fp, #4
   44638:	pop	{fp, pc}

0004463c <flatcc_json_printer_uint64_struct_field@@Base>:
   4463c:	push	{fp, lr}
   44640:	add	fp, sp, #4
   44644:	sub	sp, sp, #24
   44648:	str	r0, [fp, #-16]
   4464c:	str	r1, [fp, #-20]	; 0xffffffec
   44650:	str	r2, [fp, #-24]	; 0xffffffe8
   44654:	str	r3, [fp, #-28]	; 0xffffffe4
   44658:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4465c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44660:	add	r3, r2, r3
   44664:	mov	r0, r3
   44668:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   4466c:	strd	r0, [fp, #-12]
   44670:	ldr	r3, [fp, #-20]	; 0xffffffec
   44674:	cmp	r3, #0
   44678:	beq	44698 <flatcc_json_printer_uint64_struct_field@@Base+0x5c>
   4467c:	ldr	r3, [fp, #-16]
   44680:	ldr	r3, [r3, #20]
   44684:	add	r1, r3, #1
   44688:	ldr	r2, [fp, #-16]
   4468c:	str	r1, [r2, #20]
   44690:	mov	r2, #44	; 0x2c
   44694:	strb	r2, [r3]
   44698:	ldr	r3, [fp, #8]
   4469c:	mov	r2, r3
   446a0:	ldr	r1, [fp, #4]
   446a4:	ldr	r0, [fp, #-16]
   446a8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   446ac:	ldr	r3, [fp, #-16]
   446b0:	ldr	r3, [r3, #20]
   446b4:	mov	r2, r3
   446b8:	ldrd	r0, [fp, #-12]
   446bc:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   446c0:	mov	r2, r0
   446c4:	ldr	r3, [fp, #-16]
   446c8:	ldr	r3, [r3, #20]
   446cc:	add	r2, r3, r2
   446d0:	ldr	r3, [fp, #-16]
   446d4:	str	r2, [r3, #20]
   446d8:	nop			; (mov r0, r0)
   446dc:	sub	sp, fp, #4
   446e0:	pop	{fp, pc}

000446e4 <flatcc_json_printer_int8_struct_field@@Base>:
   446e4:	push	{fp, lr}
   446e8:	add	fp, sp, #4
   446ec:	sub	sp, sp, #24
   446f0:	str	r0, [fp, #-16]
   446f4:	str	r1, [fp, #-20]	; 0xffffffec
   446f8:	str	r2, [fp, #-24]	; 0xffffffe8
   446fc:	str	r3, [fp, #-28]	; 0xffffffe4
   44700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44704:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44708:	add	r3, r2, r3
   4470c:	mov	r0, r3
   44710:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   44714:	mov	r3, r0
   44718:	strb	r3, [fp, #-5]
   4471c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44720:	cmp	r3, #0
   44724:	beq	44744 <flatcc_json_printer_int8_struct_field@@Base+0x60>
   44728:	ldr	r3, [fp, #-16]
   4472c:	ldr	r3, [r3, #20]
   44730:	add	r1, r3, #1
   44734:	ldr	r2, [fp, #-16]
   44738:	str	r1, [r2, #20]
   4473c:	mov	r2, #44	; 0x2c
   44740:	strb	r2, [r3]
   44744:	ldr	r3, [fp, #8]
   44748:	mov	r2, r3
   4474c:	ldr	r1, [fp, #4]
   44750:	ldr	r0, [fp, #-16]
   44754:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44758:	ldr	r3, [fp, #-16]
   4475c:	ldr	r2, [r3, #20]
   44760:	ldrsb	r3, [fp, #-5]
   44764:	mov	r1, r2
   44768:	mov	r0, r3
   4476c:	bl	3ec94 <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   44770:	mov	r2, r0
   44774:	ldr	r3, [fp, #-16]
   44778:	ldr	r3, [r3, #20]
   4477c:	add	r2, r3, r2
   44780:	ldr	r3, [fp, #-16]
   44784:	str	r2, [r3, #20]
   44788:	nop			; (mov r0, r0)
   4478c:	sub	sp, fp, #4
   44790:	pop	{fp, pc}

00044794 <flatcc_json_printer_int16_struct_field@@Base>:
   44794:	push	{fp, lr}
   44798:	add	fp, sp, #4
   4479c:	sub	sp, sp, #24
   447a0:	str	r0, [fp, #-16]
   447a4:	str	r1, [fp, #-20]	; 0xffffffec
   447a8:	str	r2, [fp, #-24]	; 0xffffffe8
   447ac:	str	r3, [fp, #-28]	; 0xffffffe4
   447b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   447b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   447b8:	add	r3, r2, r3
   447bc:	mov	r0, r3
   447c0:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   447c4:	mov	r3, r0
   447c8:	strh	r3, [fp, #-6]
   447cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   447d0:	cmp	r3, #0
   447d4:	beq	447f4 <flatcc_json_printer_int16_struct_field@@Base+0x60>
   447d8:	ldr	r3, [fp, #-16]
   447dc:	ldr	r3, [r3, #20]
   447e0:	add	r1, r3, #1
   447e4:	ldr	r2, [fp, #-16]
   447e8:	str	r1, [r2, #20]
   447ec:	mov	r2, #44	; 0x2c
   447f0:	strb	r2, [r3]
   447f4:	ldr	r3, [fp, #8]
   447f8:	mov	r2, r3
   447fc:	ldr	r1, [fp, #4]
   44800:	ldr	r0, [fp, #-16]
   44804:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44808:	ldr	r3, [fp, #-16]
   4480c:	ldr	r2, [r3, #20]
   44810:	ldrsh	r3, [fp, #-6]
   44814:	mov	r1, r2
   44818:	mov	r0, r3
   4481c:	bl	3ed14 <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   44820:	mov	r2, r0
   44824:	ldr	r3, [fp, #-16]
   44828:	ldr	r3, [r3, #20]
   4482c:	add	r2, r3, r2
   44830:	ldr	r3, [fp, #-16]
   44834:	str	r2, [r3, #20]
   44838:	nop			; (mov r0, r0)
   4483c:	sub	sp, fp, #4
   44840:	pop	{fp, pc}

00044844 <flatcc_json_printer_int32_struct_field@@Base>:
   44844:	push	{fp, lr}
   44848:	add	fp, sp, #4
   4484c:	sub	sp, sp, #24
   44850:	str	r0, [fp, #-16]
   44854:	str	r1, [fp, #-20]	; 0xffffffec
   44858:	str	r2, [fp, #-24]	; 0xffffffe8
   4485c:	str	r3, [fp, #-28]	; 0xffffffe4
   44860:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44864:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44868:	add	r3, r2, r3
   4486c:	mov	r0, r3
   44870:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   44874:	str	r0, [fp, #-8]
   44878:	ldr	r3, [fp, #-20]	; 0xffffffec
   4487c:	cmp	r3, #0
   44880:	beq	448a0 <flatcc_json_printer_int32_struct_field@@Base+0x5c>
   44884:	ldr	r3, [fp, #-16]
   44888:	ldr	r3, [r3, #20]
   4488c:	add	r1, r3, #1
   44890:	ldr	r2, [fp, #-16]
   44894:	str	r1, [r2, #20]
   44898:	mov	r2, #44	; 0x2c
   4489c:	strb	r2, [r3]
   448a0:	ldr	r3, [fp, #8]
   448a4:	mov	r2, r3
   448a8:	ldr	r1, [fp, #4]
   448ac:	ldr	r0, [fp, #-16]
   448b0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   448b4:	ldr	r3, [fp, #-16]
   448b8:	ldr	r3, [r3, #20]
   448bc:	mov	r1, r3
   448c0:	ldr	r0, [fp, #-8]
   448c4:	bl	3ed94 <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   448c8:	mov	r2, r0
   448cc:	ldr	r3, [fp, #-16]
   448d0:	ldr	r3, [r3, #20]
   448d4:	add	r2, r3, r2
   448d8:	ldr	r3, [fp, #-16]
   448dc:	str	r2, [r3, #20]
   448e0:	nop			; (mov r0, r0)
   448e4:	sub	sp, fp, #4
   448e8:	pop	{fp, pc}

000448ec <flatcc_json_printer_int64_struct_field@@Base>:
   448ec:	push	{fp, lr}
   448f0:	add	fp, sp, #4
   448f4:	sub	sp, sp, #24
   448f8:	str	r0, [fp, #-16]
   448fc:	str	r1, [fp, #-20]	; 0xffffffec
   44900:	str	r2, [fp, #-24]	; 0xffffffe8
   44904:	str	r3, [fp, #-28]	; 0xffffffe4
   44908:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4490c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44910:	add	r3, r2, r3
   44914:	mov	r0, r3
   44918:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   4491c:	strd	r0, [fp, #-12]
   44920:	ldr	r3, [fp, #-20]	; 0xffffffec
   44924:	cmp	r3, #0
   44928:	beq	44948 <flatcc_json_printer_int64_struct_field@@Base+0x5c>
   4492c:	ldr	r3, [fp, #-16]
   44930:	ldr	r3, [r3, #20]
   44934:	add	r1, r3, #1
   44938:	ldr	r2, [fp, #-16]
   4493c:	str	r1, [r2, #20]
   44940:	mov	r2, #44	; 0x2c
   44944:	strb	r2, [r3]
   44948:	ldr	r3, [fp, #8]
   4494c:	mov	r2, r3
   44950:	ldr	r1, [fp, #4]
   44954:	ldr	r0, [fp, #-16]
   44958:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   4495c:	ldr	r3, [fp, #-16]
   44960:	ldr	r3, [r3, #20]
   44964:	mov	r2, r3
   44968:	ldrd	r0, [fp, #-12]
   4496c:	bl	3ee0c <flatcc_json_parser_struct_as_root@@Base+0x2030>
   44970:	mov	r2, r0
   44974:	ldr	r3, [fp, #-16]
   44978:	ldr	r3, [r3, #20]
   4497c:	add	r2, r3, r2
   44980:	ldr	r3, [fp, #-16]
   44984:	str	r2, [r3, #20]
   44988:	nop			; (mov r0, r0)
   4498c:	sub	sp, fp, #4
   44990:	pop	{fp, pc}

00044994 <flatcc_json_printer_bool_struct_field@@Base>:
   44994:	push	{fp, lr}
   44998:	add	fp, sp, #4
   4499c:	sub	sp, sp, #24
   449a0:	str	r0, [fp, #-16]
   449a4:	str	r1, [fp, #-20]	; 0xffffffec
   449a8:	str	r2, [fp, #-24]	; 0xffffffe8
   449ac:	str	r3, [fp, #-28]	; 0xffffffe4
   449b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   449b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   449b8:	add	r3, r2, r3
   449bc:	mov	r0, r3
   449c0:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   449c4:	mov	r3, r0
   449c8:	strb	r3, [fp, #-5]
   449cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   449d0:	cmp	r3, #0
   449d4:	beq	449f4 <flatcc_json_printer_bool_struct_field@@Base+0x60>
   449d8:	ldr	r3, [fp, #-16]
   449dc:	ldr	r3, [r3, #20]
   449e0:	add	r1, r3, #1
   449e4:	ldr	r2, [fp, #-16]
   449e8:	str	r1, [r2, #20]
   449ec:	mov	r2, #44	; 0x2c
   449f0:	strb	r2, [r3]
   449f4:	ldr	r3, [fp, #8]
   449f8:	mov	r2, r3
   449fc:	ldr	r1, [fp, #4]
   44a00:	ldr	r0, [fp, #-16]
   44a04:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44a08:	ldrb	r2, [fp, #-5]
   44a0c:	ldr	r3, [fp, #-16]
   44a10:	ldr	r3, [r3, #20]
   44a14:	mov	r1, r3
   44a18:	mov	r0, r2
   44a1c:	bl	3d578 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   44a20:	mov	r2, r0
   44a24:	ldr	r3, [fp, #-16]
   44a28:	ldr	r3, [r3, #20]
   44a2c:	add	r2, r3, r2
   44a30:	ldr	r3, [fp, #-16]
   44a34:	str	r2, [r3, #20]
   44a38:	nop			; (mov r0, r0)
   44a3c:	sub	sp, fp, #4
   44a40:	pop	{fp, pc}

00044a44 <flatcc_json_printer_float_struct_field@@Base>:
   44a44:	push	{fp, lr}
   44a48:	add	fp, sp, #4
   44a4c:	sub	sp, sp, #24
   44a50:	str	r0, [fp, #-16]
   44a54:	str	r1, [fp, #-20]	; 0xffffffec
   44a58:	str	r2, [fp, #-24]	; 0xffffffe8
   44a5c:	str	r3, [fp, #-28]	; 0xffffffe4
   44a60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44a68:	add	r3, r2, r3
   44a6c:	mov	r0, r3
   44a70:	bl	3d208 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   44a74:	vstr	s0, [fp, #-8]
   44a78:	ldr	r3, [fp, #-20]	; 0xffffffec
   44a7c:	cmp	r3, #0
   44a80:	beq	44aa0 <flatcc_json_printer_float_struct_field@@Base+0x5c>
   44a84:	ldr	r3, [fp, #-16]
   44a88:	ldr	r3, [r3, #20]
   44a8c:	add	r1, r3, #1
   44a90:	ldr	r2, [fp, #-16]
   44a94:	str	r1, [r2, #20]
   44a98:	mov	r2, #44	; 0x2c
   44a9c:	strb	r2, [r3]
   44aa0:	ldr	r3, [fp, #8]
   44aa4:	mov	r2, r3
   44aa8:	ldr	r1, [fp, #4]
   44aac:	ldr	r0, [fp, #-16]
   44ab0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44ab4:	vldr	s15, [fp, #-8]
   44ab8:	vcvt.f64.f32	d7, s15
   44abc:	ldr	r3, [fp, #-16]
   44ac0:	ldr	r3, [r3, #20]
   44ac4:	mov	r0, r3
   44ac8:	vmov.f64	d0, d7
   44acc:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   44ad0:	mov	r2, r0
   44ad4:	ldr	r3, [fp, #-16]
   44ad8:	ldr	r3, [r3, #20]
   44adc:	add	r2, r3, r2
   44ae0:	ldr	r3, [fp, #-16]
   44ae4:	str	r2, [r3, #20]
   44ae8:	nop			; (mov r0, r0)
   44aec:	sub	sp, fp, #4
   44af0:	pop	{fp, pc}

00044af4 <flatcc_json_printer_double_struct_field@@Base>:
   44af4:	push	{fp, lr}
   44af8:	add	fp, sp, #4
   44afc:	sub	sp, sp, #24
   44b00:	str	r0, [fp, #-16]
   44b04:	str	r1, [fp, #-20]	; 0xffffffec
   44b08:	str	r2, [fp, #-24]	; 0xffffffe8
   44b0c:	str	r3, [fp, #-28]	; 0xffffffe4
   44b10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44b14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44b18:	add	r3, r2, r3
   44b1c:	mov	r0, r3
   44b20:	bl	3d270 <flatcc_json_parser_struct_as_root@@Base+0x494>
   44b24:	vstr	d0, [fp, #-12]
   44b28:	ldr	r3, [fp, #-20]	; 0xffffffec
   44b2c:	cmp	r3, #0
   44b30:	beq	44b50 <flatcc_json_printer_double_struct_field@@Base+0x5c>
   44b34:	ldr	r3, [fp, #-16]
   44b38:	ldr	r3, [r3, #20]
   44b3c:	add	r1, r3, #1
   44b40:	ldr	r2, [fp, #-16]
   44b44:	str	r1, [r2, #20]
   44b48:	mov	r2, #44	; 0x2c
   44b4c:	strb	r2, [r3]
   44b50:	ldr	r3, [fp, #8]
   44b54:	mov	r2, r3
   44b58:	ldr	r1, [fp, #4]
   44b5c:	ldr	r0, [fp, #-16]
   44b60:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44b64:	ldr	r3, [fp, #-16]
   44b68:	ldr	r3, [r3, #20]
   44b6c:	mov	r0, r3
   44b70:	vldr	d0, [fp, #-12]
   44b74:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   44b78:	mov	r2, r0
   44b7c:	ldr	r3, [fp, #-16]
   44b80:	ldr	r3, [r3, #20]
   44b84:	add	r2, r3, r2
   44b88:	ldr	r3, [fp, #-16]
   44b8c:	str	r2, [r3, #20]
   44b90:	nop			; (mov r0, r0)
   44b94:	sub	sp, fp, #4
   44b98:	pop	{fp, pc}

00044b9c <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   44b9c:	push	{fp, lr}
   44ba0:	add	fp, sp, #4
   44ba4:	sub	sp, sp, #24
   44ba8:	str	r0, [fp, #-16]
   44bac:	str	r1, [fp, #-20]	; 0xffffffec
   44bb0:	str	r2, [fp, #-24]	; 0xffffffe8
   44bb4:	str	r3, [fp, #-28]	; 0xffffffe4
   44bb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44bbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44bc0:	add	r3, r2, r3
   44bc4:	mov	r0, r3
   44bc8:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   44bcc:	mov	r3, r0
   44bd0:	strb	r3, [fp, #-5]
   44bd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   44bd8:	cmp	r3, #0
   44bdc:	beq	44bfc <flatcc_json_printer_uint8_enum_struct_field@@Base+0x60>
   44be0:	ldr	r3, [fp, #-16]
   44be4:	ldr	r3, [r3, #20]
   44be8:	add	r1, r3, #1
   44bec:	ldr	r2, [fp, #-16]
   44bf0:	str	r1, [r2, #20]
   44bf4:	mov	r2, #44	; 0x2c
   44bf8:	strb	r2, [r3]
   44bfc:	ldr	r3, [fp, #8]
   44c00:	mov	r2, r3
   44c04:	ldr	r1, [fp, #4]
   44c08:	ldr	r0, [fp, #-16]
   44c0c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44c10:	ldr	r3, [fp, #-16]
   44c14:	ldrb	r3, [r3, #27]
   44c18:	cmp	r3, #0
   44c1c:	beq	44c54 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb8>
   44c20:	ldr	r3, [fp, #-16]
   44c24:	ldr	r2, [r3, #20]
   44c28:	ldrb	r3, [fp, #-5]
   44c2c:	mov	r1, r2
   44c30:	mov	r0, r3
   44c34:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   44c38:	mov	r2, r0
   44c3c:	ldr	r3, [fp, #-16]
   44c40:	ldr	r3, [r3, #20]
   44c44:	add	r2, r3, r2
   44c48:	ldr	r3, [fp, #-16]
   44c4c:	str	r2, [r3, #20]
   44c50:	b	44c68 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xcc>
   44c54:	ldrb	r2, [fp, #-5]
   44c58:	ldr	r3, [fp, #12]
   44c5c:	mov	r1, r2
   44c60:	ldr	r0, [fp, #-16]
   44c64:	blx	r3
   44c68:	nop			; (mov r0, r0)
   44c6c:	sub	sp, fp, #4
   44c70:	pop	{fp, pc}

00044c74 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   44c74:	push	{fp, lr}
   44c78:	add	fp, sp, #4
   44c7c:	sub	sp, sp, #24
   44c80:	str	r0, [fp, #-16]
   44c84:	str	r1, [fp, #-20]	; 0xffffffec
   44c88:	str	r2, [fp, #-24]	; 0xffffffe8
   44c8c:	str	r3, [fp, #-28]	; 0xffffffe4
   44c90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44c94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44c98:	add	r3, r2, r3
   44c9c:	mov	r0, r3
   44ca0:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   44ca4:	mov	r3, r0
   44ca8:	strh	r3, [fp, #-6]
   44cac:	ldr	r3, [fp, #-20]	; 0xffffffec
   44cb0:	cmp	r3, #0
   44cb4:	beq	44cd4 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x60>
   44cb8:	ldr	r3, [fp, #-16]
   44cbc:	ldr	r3, [r3, #20]
   44cc0:	add	r1, r3, #1
   44cc4:	ldr	r2, [fp, #-16]
   44cc8:	str	r1, [r2, #20]
   44ccc:	mov	r2, #44	; 0x2c
   44cd0:	strb	r2, [r3]
   44cd4:	ldr	r3, [fp, #8]
   44cd8:	mov	r2, r3
   44cdc:	ldr	r1, [fp, #4]
   44ce0:	ldr	r0, [fp, #-16]
   44ce4:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44ce8:	ldr	r3, [fp, #-16]
   44cec:	ldrb	r3, [r3, #27]
   44cf0:	cmp	r3, #0
   44cf4:	beq	44d2c <flatcc_json_printer_uint16_enum_struct_field@@Base+0xb8>
   44cf8:	ldr	r3, [fp, #-16]
   44cfc:	ldr	r2, [r3, #20]
   44d00:	ldrh	r3, [fp, #-6]
   44d04:	mov	r1, r2
   44d08:	mov	r0, r3
   44d0c:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   44d10:	mov	r2, r0
   44d14:	ldr	r3, [fp, #-16]
   44d18:	ldr	r3, [r3, #20]
   44d1c:	add	r2, r3, r2
   44d20:	ldr	r3, [fp, #-16]
   44d24:	str	r2, [r3, #20]
   44d28:	b	44d40 <flatcc_json_printer_uint16_enum_struct_field@@Base+0xcc>
   44d2c:	ldrh	r2, [fp, #-6]
   44d30:	ldr	r3, [fp, #12]
   44d34:	mov	r1, r2
   44d38:	ldr	r0, [fp, #-16]
   44d3c:	blx	r3
   44d40:	nop			; (mov r0, r0)
   44d44:	sub	sp, fp, #4
   44d48:	pop	{fp, pc}

00044d4c <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   44d4c:	push	{fp, lr}
   44d50:	add	fp, sp, #4
   44d54:	sub	sp, sp, #24
   44d58:	str	r0, [fp, #-16]
   44d5c:	str	r1, [fp, #-20]	; 0xffffffec
   44d60:	str	r2, [fp, #-24]	; 0xffffffe8
   44d64:	str	r3, [fp, #-28]	; 0xffffffe4
   44d68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44d6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44d70:	add	r3, r2, r3
   44d74:	mov	r0, r3
   44d78:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   44d7c:	str	r0, [fp, #-8]
   44d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   44d84:	cmp	r3, #0
   44d88:	beq	44da8 <flatcc_json_printer_uint32_enum_struct_field@@Base+0x5c>
   44d8c:	ldr	r3, [fp, #-16]
   44d90:	ldr	r3, [r3, #20]
   44d94:	add	r1, r3, #1
   44d98:	ldr	r2, [fp, #-16]
   44d9c:	str	r1, [r2, #20]
   44da0:	mov	r2, #44	; 0x2c
   44da4:	strb	r2, [r3]
   44da8:	ldr	r3, [fp, #8]
   44dac:	mov	r2, r3
   44db0:	ldr	r1, [fp, #4]
   44db4:	ldr	r0, [fp, #-16]
   44db8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44dbc:	ldr	r3, [fp, #-16]
   44dc0:	ldrb	r3, [r3, #27]
   44dc4:	cmp	r3, #0
   44dc8:	beq	44dfc <flatcc_json_printer_uint32_enum_struct_field@@Base+0xb0>
   44dcc:	ldr	r3, [fp, #-16]
   44dd0:	ldr	r3, [r3, #20]
   44dd4:	mov	r1, r3
   44dd8:	ldr	r0, [fp, #-8]
   44ddc:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   44de0:	mov	r2, r0
   44de4:	ldr	r3, [fp, #-16]
   44de8:	ldr	r3, [r3, #20]
   44dec:	add	r2, r3, r2
   44df0:	ldr	r3, [fp, #-16]
   44df4:	str	r2, [r3, #20]
   44df8:	b	44e0c <flatcc_json_printer_uint32_enum_struct_field@@Base+0xc0>
   44dfc:	ldr	r3, [fp, #12]
   44e00:	ldr	r1, [fp, #-8]
   44e04:	ldr	r0, [fp, #-16]
   44e08:	blx	r3
   44e0c:	nop			; (mov r0, r0)
   44e10:	sub	sp, fp, #4
   44e14:	pop	{fp, pc}

00044e18 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   44e18:	push	{fp, lr}
   44e1c:	add	fp, sp, #4
   44e20:	sub	sp, sp, #24
   44e24:	str	r0, [fp, #-16]
   44e28:	str	r1, [fp, #-20]	; 0xffffffec
   44e2c:	str	r2, [fp, #-24]	; 0xffffffe8
   44e30:	str	r3, [fp, #-28]	; 0xffffffe4
   44e34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44e38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44e3c:	add	r3, r2, r3
   44e40:	mov	r0, r3
   44e44:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   44e48:	strd	r0, [fp, #-12]
   44e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44e50:	cmp	r3, #0
   44e54:	beq	44e74 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x5c>
   44e58:	ldr	r3, [fp, #-16]
   44e5c:	ldr	r3, [r3, #20]
   44e60:	add	r1, r3, #1
   44e64:	ldr	r2, [fp, #-16]
   44e68:	str	r1, [r2, #20]
   44e6c:	mov	r2, #44	; 0x2c
   44e70:	strb	r2, [r3]
   44e74:	ldr	r3, [fp, #8]
   44e78:	mov	r2, r3
   44e7c:	ldr	r1, [fp, #4]
   44e80:	ldr	r0, [fp, #-16]
   44e84:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44e88:	ldr	r3, [fp, #-16]
   44e8c:	ldrb	r3, [r3, #27]
   44e90:	cmp	r3, #0
   44e94:	beq	44ec8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xb0>
   44e98:	ldr	r3, [fp, #-16]
   44e9c:	ldr	r3, [r3, #20]
   44ea0:	mov	r2, r3
   44ea4:	ldrd	r0, [fp, #-12]
   44ea8:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   44eac:	mov	r2, r0
   44eb0:	ldr	r3, [fp, #-16]
   44eb4:	ldr	r3, [r3, #20]
   44eb8:	add	r2, r3, r2
   44ebc:	ldr	r3, [fp, #-16]
   44ec0:	str	r2, [r3, #20]
   44ec4:	b	44ed8 <flatcc_json_printer_uint64_enum_struct_field@@Base+0xc0>
   44ec8:	ldr	r1, [fp, #12]
   44ecc:	ldrd	r2, [fp, #-12]
   44ed0:	ldr	r0, [fp, #-16]
   44ed4:	blx	r1
   44ed8:	nop			; (mov r0, r0)
   44edc:	sub	sp, fp, #4
   44ee0:	pop	{fp, pc}

00044ee4 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   44ee4:	push	{fp, lr}
   44ee8:	add	fp, sp, #4
   44eec:	sub	sp, sp, #24
   44ef0:	str	r0, [fp, #-16]
   44ef4:	str	r1, [fp, #-20]	; 0xffffffec
   44ef8:	str	r2, [fp, #-24]	; 0xffffffe8
   44efc:	str	r3, [fp, #-28]	; 0xffffffe4
   44f00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44f04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44f08:	add	r3, r2, r3
   44f0c:	mov	r0, r3
   44f10:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   44f14:	mov	r3, r0
   44f18:	strb	r3, [fp, #-5]
   44f1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   44f20:	cmp	r3, #0
   44f24:	beq	44f44 <flatcc_json_printer_int8_enum_struct_field@@Base+0x60>
   44f28:	ldr	r3, [fp, #-16]
   44f2c:	ldr	r3, [r3, #20]
   44f30:	add	r1, r3, #1
   44f34:	ldr	r2, [fp, #-16]
   44f38:	str	r1, [r2, #20]
   44f3c:	mov	r2, #44	; 0x2c
   44f40:	strb	r2, [r3]
   44f44:	ldr	r3, [fp, #8]
   44f48:	mov	r2, r3
   44f4c:	ldr	r1, [fp, #4]
   44f50:	ldr	r0, [fp, #-16]
   44f54:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   44f58:	ldr	r3, [fp, #-16]
   44f5c:	ldrb	r3, [r3, #27]
   44f60:	cmp	r3, #0
   44f64:	beq	44f9c <flatcc_json_printer_int8_enum_struct_field@@Base+0xb8>
   44f68:	ldr	r3, [fp, #-16]
   44f6c:	ldr	r2, [r3, #20]
   44f70:	ldrsb	r3, [fp, #-5]
   44f74:	mov	r1, r2
   44f78:	mov	r0, r3
   44f7c:	bl	3ec94 <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   44f80:	mov	r2, r0
   44f84:	ldr	r3, [fp, #-16]
   44f88:	ldr	r3, [r3, #20]
   44f8c:	add	r2, r3, r2
   44f90:	ldr	r3, [fp, #-16]
   44f94:	str	r2, [r3, #20]
   44f98:	b	44fb0 <flatcc_json_printer_int8_enum_struct_field@@Base+0xcc>
   44f9c:	ldrsb	r2, [fp, #-5]
   44fa0:	ldr	r3, [fp, #12]
   44fa4:	mov	r1, r2
   44fa8:	ldr	r0, [fp, #-16]
   44fac:	blx	r3
   44fb0:	nop			; (mov r0, r0)
   44fb4:	sub	sp, fp, #4
   44fb8:	pop	{fp, pc}

00044fbc <flatcc_json_printer_int16_enum_struct_field@@Base>:
   44fbc:	push	{fp, lr}
   44fc0:	add	fp, sp, #4
   44fc4:	sub	sp, sp, #24
   44fc8:	str	r0, [fp, #-16]
   44fcc:	str	r1, [fp, #-20]	; 0xffffffec
   44fd0:	str	r2, [fp, #-24]	; 0xffffffe8
   44fd4:	str	r3, [fp, #-28]	; 0xffffffe4
   44fd8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   44fdc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   44fe0:	add	r3, r2, r3
   44fe4:	mov	r0, r3
   44fe8:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   44fec:	mov	r3, r0
   44ff0:	strh	r3, [fp, #-6]
   44ff4:	ldr	r3, [fp, #-20]	; 0xffffffec
   44ff8:	cmp	r3, #0
   44ffc:	beq	4501c <flatcc_json_printer_int16_enum_struct_field@@Base+0x60>
   45000:	ldr	r3, [fp, #-16]
   45004:	ldr	r3, [r3, #20]
   45008:	add	r1, r3, #1
   4500c:	ldr	r2, [fp, #-16]
   45010:	str	r1, [r2, #20]
   45014:	mov	r2, #44	; 0x2c
   45018:	strb	r2, [r3]
   4501c:	ldr	r3, [fp, #8]
   45020:	mov	r2, r3
   45024:	ldr	r1, [fp, #4]
   45028:	ldr	r0, [fp, #-16]
   4502c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   45030:	ldr	r3, [fp, #-16]
   45034:	ldrb	r3, [r3, #27]
   45038:	cmp	r3, #0
   4503c:	beq	45074 <flatcc_json_printer_int16_enum_struct_field@@Base+0xb8>
   45040:	ldr	r3, [fp, #-16]
   45044:	ldr	r2, [r3, #20]
   45048:	ldrsh	r3, [fp, #-6]
   4504c:	mov	r1, r2
   45050:	mov	r0, r3
   45054:	bl	3ed14 <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   45058:	mov	r2, r0
   4505c:	ldr	r3, [fp, #-16]
   45060:	ldr	r3, [r3, #20]
   45064:	add	r2, r3, r2
   45068:	ldr	r3, [fp, #-16]
   4506c:	str	r2, [r3, #20]
   45070:	b	45088 <flatcc_json_printer_int16_enum_struct_field@@Base+0xcc>
   45074:	ldrsh	r2, [fp, #-6]
   45078:	ldr	r3, [fp, #12]
   4507c:	mov	r1, r2
   45080:	ldr	r0, [fp, #-16]
   45084:	blx	r3
   45088:	nop			; (mov r0, r0)
   4508c:	sub	sp, fp, #4
   45090:	pop	{fp, pc}

00045094 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   45094:	push	{fp, lr}
   45098:	add	fp, sp, #4
   4509c:	sub	sp, sp, #24
   450a0:	str	r0, [fp, #-16]
   450a4:	str	r1, [fp, #-20]	; 0xffffffec
   450a8:	str	r2, [fp, #-24]	; 0xffffffe8
   450ac:	str	r3, [fp, #-28]	; 0xffffffe4
   450b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   450b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   450b8:	add	r3, r2, r3
   450bc:	mov	r0, r3
   450c0:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   450c4:	str	r0, [fp, #-8]
   450c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   450cc:	cmp	r3, #0
   450d0:	beq	450f0 <flatcc_json_printer_int32_enum_struct_field@@Base+0x5c>
   450d4:	ldr	r3, [fp, #-16]
   450d8:	ldr	r3, [r3, #20]
   450dc:	add	r1, r3, #1
   450e0:	ldr	r2, [fp, #-16]
   450e4:	str	r1, [r2, #20]
   450e8:	mov	r2, #44	; 0x2c
   450ec:	strb	r2, [r3]
   450f0:	ldr	r3, [fp, #8]
   450f4:	mov	r2, r3
   450f8:	ldr	r1, [fp, #4]
   450fc:	ldr	r0, [fp, #-16]
   45100:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   45104:	ldr	r3, [fp, #-16]
   45108:	ldrb	r3, [r3, #27]
   4510c:	cmp	r3, #0
   45110:	beq	45144 <flatcc_json_printer_int32_enum_struct_field@@Base+0xb0>
   45114:	ldr	r3, [fp, #-16]
   45118:	ldr	r3, [r3, #20]
   4511c:	mov	r1, r3
   45120:	ldr	r0, [fp, #-8]
   45124:	bl	3ed94 <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   45128:	mov	r2, r0
   4512c:	ldr	r3, [fp, #-16]
   45130:	ldr	r3, [r3, #20]
   45134:	add	r2, r3, r2
   45138:	ldr	r3, [fp, #-16]
   4513c:	str	r2, [r3, #20]
   45140:	b	45154 <flatcc_json_printer_int32_enum_struct_field@@Base+0xc0>
   45144:	ldr	r3, [fp, #12]
   45148:	ldr	r1, [fp, #-8]
   4514c:	ldr	r0, [fp, #-16]
   45150:	blx	r3
   45154:	nop			; (mov r0, r0)
   45158:	sub	sp, fp, #4
   4515c:	pop	{fp, pc}

00045160 <flatcc_json_printer_int64_enum_struct_field@@Base>:
   45160:	push	{fp, lr}
   45164:	add	fp, sp, #4
   45168:	sub	sp, sp, #24
   4516c:	str	r0, [fp, #-16]
   45170:	str	r1, [fp, #-20]	; 0xffffffec
   45174:	str	r2, [fp, #-24]	; 0xffffffe8
   45178:	str	r3, [fp, #-28]	; 0xffffffe4
   4517c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   45180:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45184:	add	r3, r2, r3
   45188:	mov	r0, r3
   4518c:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   45190:	strd	r0, [fp, #-12]
   45194:	ldr	r3, [fp, #-20]	; 0xffffffec
   45198:	cmp	r3, #0
   4519c:	beq	451bc <flatcc_json_printer_int64_enum_struct_field@@Base+0x5c>
   451a0:	ldr	r3, [fp, #-16]
   451a4:	ldr	r3, [r3, #20]
   451a8:	add	r1, r3, #1
   451ac:	ldr	r2, [fp, #-16]
   451b0:	str	r1, [r2, #20]
   451b4:	mov	r2, #44	; 0x2c
   451b8:	strb	r2, [r3]
   451bc:	ldr	r3, [fp, #8]
   451c0:	mov	r2, r3
   451c4:	ldr	r1, [fp, #4]
   451c8:	ldr	r0, [fp, #-16]
   451cc:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   451d0:	ldr	r3, [fp, #-16]
   451d4:	ldrb	r3, [r3, #27]
   451d8:	cmp	r3, #0
   451dc:	beq	45210 <flatcc_json_printer_int64_enum_struct_field@@Base+0xb0>
   451e0:	ldr	r3, [fp, #-16]
   451e4:	ldr	r3, [r3, #20]
   451e8:	mov	r2, r3
   451ec:	ldrd	r0, [fp, #-12]
   451f0:	bl	3ee0c <flatcc_json_parser_struct_as_root@@Base+0x2030>
   451f4:	mov	r2, r0
   451f8:	ldr	r3, [fp, #-16]
   451fc:	ldr	r3, [r3, #20]
   45200:	add	r2, r3, r2
   45204:	ldr	r3, [fp, #-16]
   45208:	str	r2, [r3, #20]
   4520c:	b	45220 <flatcc_json_printer_int64_enum_struct_field@@Base+0xc0>
   45210:	ldr	r1, [fp, #12]
   45214:	ldrd	r2, [fp, #-12]
   45218:	ldr	r0, [fp, #-16]
   4521c:	blx	r1
   45220:	nop			; (mov r0, r0)
   45224:	sub	sp, fp, #4
   45228:	pop	{fp, pc}

0004522c <flatcc_json_printer_bool_enum_struct_field@@Base>:
   4522c:	push	{fp, lr}
   45230:	add	fp, sp, #4
   45234:	sub	sp, sp, #24
   45238:	str	r0, [fp, #-16]
   4523c:	str	r1, [fp, #-20]	; 0xffffffec
   45240:	str	r2, [fp, #-24]	; 0xffffffe8
   45244:	str	r3, [fp, #-28]	; 0xffffffe4
   45248:	ldr	r2, [fp, #-24]	; 0xffffffe8
   4524c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   45250:	add	r3, r2, r3
   45254:	mov	r0, r3
   45258:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   4525c:	mov	r3, r0
   45260:	strb	r3, [fp, #-5]
   45264:	ldr	r3, [fp, #-20]	; 0xffffffec
   45268:	cmp	r3, #0
   4526c:	beq	4528c <flatcc_json_printer_bool_enum_struct_field@@Base+0x60>
   45270:	ldr	r3, [fp, #-16]
   45274:	ldr	r3, [r3, #20]
   45278:	add	r1, r3, #1
   4527c:	ldr	r2, [fp, #-16]
   45280:	str	r1, [r2, #20]
   45284:	mov	r2, #44	; 0x2c
   45288:	strb	r2, [r3]
   4528c:	ldr	r3, [fp, #8]
   45290:	mov	r2, r3
   45294:	ldr	r1, [fp, #4]
   45298:	ldr	r0, [fp, #-16]
   4529c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   452a0:	ldr	r3, [fp, #-16]
   452a4:	ldrb	r3, [r3, #27]
   452a8:	cmp	r3, #0
   452ac:	beq	452e4 <flatcc_json_printer_bool_enum_struct_field@@Base+0xb8>
   452b0:	ldrb	r2, [fp, #-5]
   452b4:	ldr	r3, [fp, #-16]
   452b8:	ldr	r3, [r3, #20]
   452bc:	mov	r1, r3
   452c0:	mov	r0, r2
   452c4:	bl	3d578 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   452c8:	mov	r2, r0
   452cc:	ldr	r3, [fp, #-16]
   452d0:	ldr	r3, [r3, #20]
   452d4:	add	r2, r3, r2
   452d8:	ldr	r3, [fp, #-16]
   452dc:	str	r2, [r3, #20]
   452e0:	b	452f8 <flatcc_json_printer_bool_enum_struct_field@@Base+0xcc>
   452e4:	ldrb	r2, [fp, #-5]
   452e8:	ldr	r3, [fp, #12]
   452ec:	mov	r1, r2
   452f0:	ldr	r0, [fp, #-16]
   452f4:	blx	r3
   452f8:	nop			; (mov r0, r0)
   452fc:	sub	sp, fp, #4
   45300:	pop	{fp, pc}

00045304 <flatcc_json_printer_utype_vector_field@@Base>:
   45304:	push	{fp, lr}
   45308:	add	fp, sp, #4
   4530c:	sub	sp, sp, #24
   45310:	str	r0, [fp, #-16]
   45314:	str	r1, [fp, #-20]	; 0xffffffec
   45318:	str	r2, [fp, #-24]	; 0xffffffe8
   4531c:	str	r3, [fp, #-28]	; 0xffffffe4
   45320:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45324:	ldr	r0, [fp, #-20]	; 0xffffffec
   45328:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   4532c:	str	r0, [fp, #-8]
   45330:	ldr	r3, [fp, #-8]
   45334:	cmp	r3, #0
   45338:	beq	4559c <flatcc_json_printer_utype_vector_field@@Base+0x298>
   4533c:	ldr	r3, [fp, #-20]	; 0xffffffec
   45340:	ldr	r3, [r3, #16]
   45344:	add	r1, r3, #1
   45348:	ldr	r2, [fp, #-20]	; 0xffffffec
   4534c:	str	r1, [r2, #16]
   45350:	cmp	r3, #0
   45354:	beq	45374 <flatcc_json_printer_utype_vector_field@@Base+0x70>
   45358:	ldr	r3, [fp, #-16]
   4535c:	ldr	r3, [r3, #20]
   45360:	add	r1, r3, #1
   45364:	ldr	r2, [fp, #-16]
   45368:	str	r1, [r2, #20]
   4536c:	mov	r2, #44	; 0x2c
   45370:	strb	r2, [r3]
   45374:	ldr	r0, [fp, #-8]
   45378:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4537c:	str	r0, [fp, #-8]
   45380:	ldr	r0, [fp, #-8]
   45384:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   45388:	str	r0, [fp, #-12]
   4538c:	ldr	r3, [fp, #-8]
   45390:	add	r3, r3, #4
   45394:	str	r3, [fp, #-8]
   45398:	ldr	r3, [fp, #4]
   4539c:	mov	r2, r3
   453a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   453a4:	ldr	r0, [fp, #-16]
   453a8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   453ac:	ldr	r3, [fp, #-16]
   453b0:	ldr	r3, [r3, #32]
   453b4:	add	r2, r3, #1
   453b8:	ldr	r3, [fp, #-16]
   453bc:	str	r2, [r3, #32]
   453c0:	ldr	r3, [fp, #-16]
   453c4:	ldr	r3, [r3, #20]
   453c8:	add	r1, r3, #1
   453cc:	ldr	r2, [fp, #-16]
   453d0:	str	r1, [r2, #20]
   453d4:	mov	r2, #91	; 0x5b
   453d8:	strb	r2, [r3]
   453dc:	ldr	r3, [fp, #-12]
   453e0:	cmp	r3, #0
   453e4:	beq	45524 <flatcc_json_printer_utype_vector_field@@Base+0x220>
   453e8:	ldr	r3, [fp, #-16]
   453ec:	ldrb	r3, [r3, #25]
   453f0:	cmp	r3, #0
   453f4:	beq	45420 <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   453f8:	ldr	r3, [fp, #-16]
   453fc:	ldr	r3, [r3, #20]
   45400:	add	r1, r3, #1
   45404:	ldr	r2, [fp, #-16]
   45408:	str	r1, [r2, #20]
   4540c:	mov	r2, #10
   45410:	strb	r2, [r3]
   45414:	ldr	r0, [fp, #-16]
   45418:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4541c:	b	45428 <flatcc_json_printer_utype_vector_field@@Base+0x124>
   45420:	ldr	r0, [fp, #-16]
   45424:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45428:	ldr	r0, [fp, #-8]
   4542c:	bl	3d420 <flatcc_json_parser_struct_as_root@@Base+0x644>
   45430:	mov	r3, r0
   45434:	mov	r2, r3
   45438:	ldr	r3, [fp, #-16]
   4543c:	ldr	r3, [r3, #20]
   45440:	mov	r1, r3
   45444:	mov	r0, r2
   45448:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   4544c:	mov	r2, r0
   45450:	ldr	r3, [fp, #-16]
   45454:	ldr	r3, [r3, #20]
   45458:	add	r2, r3, r2
   4545c:	ldr	r3, [fp, #-16]
   45460:	str	r2, [r3, #20]
   45464:	ldr	r3, [fp, #-8]
   45468:	add	r3, r3, #1
   4546c:	str	r3, [fp, #-8]
   45470:	ldr	r3, [fp, #-12]
   45474:	sub	r3, r3, #1
   45478:	str	r3, [fp, #-12]
   4547c:	b	45524 <flatcc_json_printer_utype_vector_field@@Base+0x220>
   45480:	ldr	r3, [fp, #-16]
   45484:	ldr	r3, [r3, #20]
   45488:	add	r1, r3, #1
   4548c:	ldr	r2, [fp, #-16]
   45490:	str	r1, [r2, #20]
   45494:	mov	r2, #44	; 0x2c
   45498:	strb	r2, [r3]
   4549c:	ldr	r3, [fp, #-16]
   454a0:	ldrb	r3, [r3, #25]
   454a4:	cmp	r3, #0
   454a8:	beq	454d4 <flatcc_json_printer_utype_vector_field@@Base+0x1d0>
   454ac:	ldr	r3, [fp, #-16]
   454b0:	ldr	r3, [r3, #20]
   454b4:	add	r1, r3, #1
   454b8:	ldr	r2, [fp, #-16]
   454bc:	str	r1, [r2, #20]
   454c0:	mov	r2, #10
   454c4:	strb	r2, [r3]
   454c8:	ldr	r0, [fp, #-16]
   454cc:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   454d0:	b	454dc <flatcc_json_printer_utype_vector_field@@Base+0x1d8>
   454d4:	ldr	r0, [fp, #-16]
   454d8:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   454dc:	ldr	r0, [fp, #-8]
   454e0:	bl	3d420 <flatcc_json_parser_struct_as_root@@Base+0x644>
   454e4:	mov	r3, r0
   454e8:	mov	r2, r3
   454ec:	ldr	r3, [fp, #-16]
   454f0:	ldr	r3, [r3, #20]
   454f4:	mov	r1, r3
   454f8:	mov	r0, r2
   454fc:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   45500:	mov	r2, r0
   45504:	ldr	r3, [fp, #-16]
   45508:	ldr	r3, [r3, #20]
   4550c:	add	r2, r3, r2
   45510:	ldr	r3, [fp, #-16]
   45514:	str	r2, [r3, #20]
   45518:	ldr	r3, [fp, #-8]
   4551c:	add	r3, r3, #1
   45520:	str	r3, [fp, #-8]
   45524:	ldr	r3, [fp, #-12]
   45528:	sub	r2, r3, #1
   4552c:	str	r2, [fp, #-12]
   45530:	cmp	r3, #0
   45534:	bne	45480 <flatcc_json_printer_utype_vector_field@@Base+0x17c>
   45538:	ldr	r3, [fp, #-16]
   4553c:	ldrb	r3, [r3, #25]
   45540:	cmp	r3, #0
   45544:	beq	45580 <flatcc_json_printer_utype_vector_field@@Base+0x27c>
   45548:	ldr	r3, [fp, #-16]
   4554c:	ldr	r3, [r3, #20]
   45550:	add	r1, r3, #1
   45554:	ldr	r2, [fp, #-16]
   45558:	str	r1, [r2, #20]
   4555c:	mov	r2, #10
   45560:	strb	r2, [r3]
   45564:	ldr	r3, [fp, #-16]
   45568:	ldr	r3, [r3, #32]
   4556c:	sub	r2, r3, #1
   45570:	ldr	r3, [fp, #-16]
   45574:	str	r2, [r3, #32]
   45578:	ldr	r0, [fp, #-16]
   4557c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45580:	ldr	r3, [fp, #-16]
   45584:	ldr	r3, [r3, #20]
   45588:	add	r1, r3, #1
   4558c:	ldr	r2, [fp, #-16]
   45590:	str	r1, [r2, #20]
   45594:	mov	r2, #93	; 0x5d
   45598:	strb	r2, [r3]
   4559c:	nop			; (mov r0, r0)
   455a0:	sub	sp, fp, #4
   455a4:	pop	{fp, pc}

000455a8 <flatcc_json_printer_uint8_vector_field@@Base>:
   455a8:	push	{fp, lr}
   455ac:	add	fp, sp, #4
   455b0:	sub	sp, sp, #24
   455b4:	str	r0, [fp, #-16]
   455b8:	str	r1, [fp, #-20]	; 0xffffffec
   455bc:	str	r2, [fp, #-24]	; 0xffffffe8
   455c0:	str	r3, [fp, #-28]	; 0xffffffe4
   455c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   455c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   455cc:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   455d0:	str	r0, [fp, #-8]
   455d4:	ldr	r3, [fp, #-8]
   455d8:	cmp	r3, #0
   455dc:	beq	45840 <flatcc_json_printer_uint8_vector_field@@Base+0x298>
   455e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   455e4:	ldr	r3, [r3, #16]
   455e8:	add	r1, r3, #1
   455ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   455f0:	str	r1, [r2, #16]
   455f4:	cmp	r3, #0
   455f8:	beq	45618 <flatcc_json_printer_uint8_vector_field@@Base+0x70>
   455fc:	ldr	r3, [fp, #-16]
   45600:	ldr	r3, [r3, #20]
   45604:	add	r1, r3, #1
   45608:	ldr	r2, [fp, #-16]
   4560c:	str	r1, [r2, #20]
   45610:	mov	r2, #44	; 0x2c
   45614:	strb	r2, [r3]
   45618:	ldr	r0, [fp, #-8]
   4561c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   45620:	str	r0, [fp, #-8]
   45624:	ldr	r0, [fp, #-8]
   45628:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4562c:	str	r0, [fp, #-12]
   45630:	ldr	r3, [fp, #-8]
   45634:	add	r3, r3, #4
   45638:	str	r3, [fp, #-8]
   4563c:	ldr	r3, [fp, #4]
   45640:	mov	r2, r3
   45644:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45648:	ldr	r0, [fp, #-16]
   4564c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   45650:	ldr	r3, [fp, #-16]
   45654:	ldr	r3, [r3, #32]
   45658:	add	r2, r3, #1
   4565c:	ldr	r3, [fp, #-16]
   45660:	str	r2, [r3, #32]
   45664:	ldr	r3, [fp, #-16]
   45668:	ldr	r3, [r3, #20]
   4566c:	add	r1, r3, #1
   45670:	ldr	r2, [fp, #-16]
   45674:	str	r1, [r2, #20]
   45678:	mov	r2, #91	; 0x5b
   4567c:	strb	r2, [r3]
   45680:	ldr	r3, [fp, #-12]
   45684:	cmp	r3, #0
   45688:	beq	457c8 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
   4568c:	ldr	r3, [fp, #-16]
   45690:	ldrb	r3, [r3, #25]
   45694:	cmp	r3, #0
   45698:	beq	456c4 <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   4569c:	ldr	r3, [fp, #-16]
   456a0:	ldr	r3, [r3, #20]
   456a4:	add	r1, r3, #1
   456a8:	ldr	r2, [fp, #-16]
   456ac:	str	r1, [r2, #20]
   456b0:	mov	r2, #10
   456b4:	strb	r2, [r3]
   456b8:	ldr	r0, [fp, #-16]
   456bc:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   456c0:	b	456cc <flatcc_json_printer_uint8_vector_field@@Base+0x124>
   456c4:	ldr	r0, [fp, #-16]
   456c8:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   456cc:	ldr	r0, [fp, #-8]
   456d0:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   456d4:	mov	r3, r0
   456d8:	mov	r2, r3
   456dc:	ldr	r3, [fp, #-16]
   456e0:	ldr	r3, [r3, #20]
   456e4:	mov	r1, r3
   456e8:	mov	r0, r2
   456ec:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   456f0:	mov	r2, r0
   456f4:	ldr	r3, [fp, #-16]
   456f8:	ldr	r3, [r3, #20]
   456fc:	add	r2, r3, r2
   45700:	ldr	r3, [fp, #-16]
   45704:	str	r2, [r3, #20]
   45708:	ldr	r3, [fp, #-8]
   4570c:	add	r3, r3, #1
   45710:	str	r3, [fp, #-8]
   45714:	ldr	r3, [fp, #-12]
   45718:	sub	r3, r3, #1
   4571c:	str	r3, [fp, #-12]
   45720:	b	457c8 <flatcc_json_printer_uint8_vector_field@@Base+0x220>
   45724:	ldr	r3, [fp, #-16]
   45728:	ldr	r3, [r3, #20]
   4572c:	add	r1, r3, #1
   45730:	ldr	r2, [fp, #-16]
   45734:	str	r1, [r2, #20]
   45738:	mov	r2, #44	; 0x2c
   4573c:	strb	r2, [r3]
   45740:	ldr	r3, [fp, #-16]
   45744:	ldrb	r3, [r3, #25]
   45748:	cmp	r3, #0
   4574c:	beq	45778 <flatcc_json_printer_uint8_vector_field@@Base+0x1d0>
   45750:	ldr	r3, [fp, #-16]
   45754:	ldr	r3, [r3, #20]
   45758:	add	r1, r3, #1
   4575c:	ldr	r2, [fp, #-16]
   45760:	str	r1, [r2, #20]
   45764:	mov	r2, #10
   45768:	strb	r2, [r3]
   4576c:	ldr	r0, [fp, #-16]
   45770:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45774:	b	45780 <flatcc_json_printer_uint8_vector_field@@Base+0x1d8>
   45778:	ldr	r0, [fp, #-16]
   4577c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45780:	ldr	r0, [fp, #-8]
   45784:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   45788:	mov	r3, r0
   4578c:	mov	r2, r3
   45790:	ldr	r3, [fp, #-16]
   45794:	ldr	r3, [r3, #20]
   45798:	mov	r1, r3
   4579c:	mov	r0, r2
   457a0:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   457a4:	mov	r2, r0
   457a8:	ldr	r3, [fp, #-16]
   457ac:	ldr	r3, [r3, #20]
   457b0:	add	r2, r3, r2
   457b4:	ldr	r3, [fp, #-16]
   457b8:	str	r2, [r3, #20]
   457bc:	ldr	r3, [fp, #-8]
   457c0:	add	r3, r3, #1
   457c4:	str	r3, [fp, #-8]
   457c8:	ldr	r3, [fp, #-12]
   457cc:	sub	r2, r3, #1
   457d0:	str	r2, [fp, #-12]
   457d4:	cmp	r3, #0
   457d8:	bne	45724 <flatcc_json_printer_uint8_vector_field@@Base+0x17c>
   457dc:	ldr	r3, [fp, #-16]
   457e0:	ldrb	r3, [r3, #25]
   457e4:	cmp	r3, #0
   457e8:	beq	45824 <flatcc_json_printer_uint8_vector_field@@Base+0x27c>
   457ec:	ldr	r3, [fp, #-16]
   457f0:	ldr	r3, [r3, #20]
   457f4:	add	r1, r3, #1
   457f8:	ldr	r2, [fp, #-16]
   457fc:	str	r1, [r2, #20]
   45800:	mov	r2, #10
   45804:	strb	r2, [r3]
   45808:	ldr	r3, [fp, #-16]
   4580c:	ldr	r3, [r3, #32]
   45810:	sub	r2, r3, #1
   45814:	ldr	r3, [fp, #-16]
   45818:	str	r2, [r3, #32]
   4581c:	ldr	r0, [fp, #-16]
   45820:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45824:	ldr	r3, [fp, #-16]
   45828:	ldr	r3, [r3, #20]
   4582c:	add	r1, r3, #1
   45830:	ldr	r2, [fp, #-16]
   45834:	str	r1, [r2, #20]
   45838:	mov	r2, #93	; 0x5d
   4583c:	strb	r2, [r3]
   45840:	nop			; (mov r0, r0)
   45844:	sub	sp, fp, #4
   45848:	pop	{fp, pc}

0004584c <flatcc_json_printer_uint16_vector_field@@Base>:
   4584c:	push	{fp, lr}
   45850:	add	fp, sp, #4
   45854:	sub	sp, sp, #24
   45858:	str	r0, [fp, #-16]
   4585c:	str	r1, [fp, #-20]	; 0xffffffec
   45860:	str	r2, [fp, #-24]	; 0xffffffe8
   45864:	str	r3, [fp, #-28]	; 0xffffffe4
   45868:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4586c:	ldr	r0, [fp, #-20]	; 0xffffffec
   45870:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   45874:	str	r0, [fp, #-8]
   45878:	ldr	r3, [fp, #-8]
   4587c:	cmp	r3, #0
   45880:	beq	45ae4 <flatcc_json_printer_uint16_vector_field@@Base+0x298>
   45884:	ldr	r3, [fp, #-20]	; 0xffffffec
   45888:	ldr	r3, [r3, #16]
   4588c:	add	r1, r3, #1
   45890:	ldr	r2, [fp, #-20]	; 0xffffffec
   45894:	str	r1, [r2, #16]
   45898:	cmp	r3, #0
   4589c:	beq	458bc <flatcc_json_printer_uint16_vector_field@@Base+0x70>
   458a0:	ldr	r3, [fp, #-16]
   458a4:	ldr	r3, [r3, #20]
   458a8:	add	r1, r3, #1
   458ac:	ldr	r2, [fp, #-16]
   458b0:	str	r1, [r2, #20]
   458b4:	mov	r2, #44	; 0x2c
   458b8:	strb	r2, [r3]
   458bc:	ldr	r0, [fp, #-8]
   458c0:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   458c4:	str	r0, [fp, #-8]
   458c8:	ldr	r0, [fp, #-8]
   458cc:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   458d0:	str	r0, [fp, #-12]
   458d4:	ldr	r3, [fp, #-8]
   458d8:	add	r3, r3, #4
   458dc:	str	r3, [fp, #-8]
   458e0:	ldr	r3, [fp, #4]
   458e4:	mov	r2, r3
   458e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   458ec:	ldr	r0, [fp, #-16]
   458f0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   458f4:	ldr	r3, [fp, #-16]
   458f8:	ldr	r3, [r3, #32]
   458fc:	add	r2, r3, #1
   45900:	ldr	r3, [fp, #-16]
   45904:	str	r2, [r3, #32]
   45908:	ldr	r3, [fp, #-16]
   4590c:	ldr	r3, [r3, #20]
   45910:	add	r1, r3, #1
   45914:	ldr	r2, [fp, #-16]
   45918:	str	r1, [r2, #20]
   4591c:	mov	r2, #91	; 0x5b
   45920:	strb	r2, [r3]
   45924:	ldr	r3, [fp, #-12]
   45928:	cmp	r3, #0
   4592c:	beq	45a6c <flatcc_json_printer_uint16_vector_field@@Base+0x220>
   45930:	ldr	r3, [fp, #-16]
   45934:	ldrb	r3, [r3, #25]
   45938:	cmp	r3, #0
   4593c:	beq	45968 <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   45940:	ldr	r3, [fp, #-16]
   45944:	ldr	r3, [r3, #20]
   45948:	add	r1, r3, #1
   4594c:	ldr	r2, [fp, #-16]
   45950:	str	r1, [r2, #20]
   45954:	mov	r2, #10
   45958:	strb	r2, [r3]
   4595c:	ldr	r0, [fp, #-16]
   45960:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45964:	b	45970 <flatcc_json_printer_uint16_vector_field@@Base+0x124>
   45968:	ldr	r0, [fp, #-16]
   4596c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45970:	ldr	r0, [fp, #-8]
   45974:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   45978:	mov	r3, r0
   4597c:	mov	r2, r3
   45980:	ldr	r3, [fp, #-16]
   45984:	ldr	r3, [r3, #20]
   45988:	mov	r1, r3
   4598c:	mov	r0, r2
   45990:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   45994:	mov	r2, r0
   45998:	ldr	r3, [fp, #-16]
   4599c:	ldr	r3, [r3, #20]
   459a0:	add	r2, r3, r2
   459a4:	ldr	r3, [fp, #-16]
   459a8:	str	r2, [r3, #20]
   459ac:	ldr	r3, [fp, #-8]
   459b0:	add	r3, r3, #2
   459b4:	str	r3, [fp, #-8]
   459b8:	ldr	r3, [fp, #-12]
   459bc:	sub	r3, r3, #1
   459c0:	str	r3, [fp, #-12]
   459c4:	b	45a6c <flatcc_json_printer_uint16_vector_field@@Base+0x220>
   459c8:	ldr	r3, [fp, #-16]
   459cc:	ldr	r3, [r3, #20]
   459d0:	add	r1, r3, #1
   459d4:	ldr	r2, [fp, #-16]
   459d8:	str	r1, [r2, #20]
   459dc:	mov	r2, #44	; 0x2c
   459e0:	strb	r2, [r3]
   459e4:	ldr	r3, [fp, #-16]
   459e8:	ldrb	r3, [r3, #25]
   459ec:	cmp	r3, #0
   459f0:	beq	45a1c <flatcc_json_printer_uint16_vector_field@@Base+0x1d0>
   459f4:	ldr	r3, [fp, #-16]
   459f8:	ldr	r3, [r3, #20]
   459fc:	add	r1, r3, #1
   45a00:	ldr	r2, [fp, #-16]
   45a04:	str	r1, [r2, #20]
   45a08:	mov	r2, #10
   45a0c:	strb	r2, [r3]
   45a10:	ldr	r0, [fp, #-16]
   45a14:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45a18:	b	45a24 <flatcc_json_printer_uint16_vector_field@@Base+0x1d8>
   45a1c:	ldr	r0, [fp, #-16]
   45a20:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45a24:	ldr	r0, [fp, #-8]
   45a28:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   45a2c:	mov	r3, r0
   45a30:	mov	r2, r3
   45a34:	ldr	r3, [fp, #-16]
   45a38:	ldr	r3, [r3, #20]
   45a3c:	mov	r1, r3
   45a40:	mov	r0, r2
   45a44:	bl	3d7ac <flatcc_json_parser_struct_as_root@@Base+0x9d0>
   45a48:	mov	r2, r0
   45a4c:	ldr	r3, [fp, #-16]
   45a50:	ldr	r3, [r3, #20]
   45a54:	add	r2, r3, r2
   45a58:	ldr	r3, [fp, #-16]
   45a5c:	str	r2, [r3, #20]
   45a60:	ldr	r3, [fp, #-8]
   45a64:	add	r3, r3, #2
   45a68:	str	r3, [fp, #-8]
   45a6c:	ldr	r3, [fp, #-12]
   45a70:	sub	r2, r3, #1
   45a74:	str	r2, [fp, #-12]
   45a78:	cmp	r3, #0
   45a7c:	bne	459c8 <flatcc_json_printer_uint16_vector_field@@Base+0x17c>
   45a80:	ldr	r3, [fp, #-16]
   45a84:	ldrb	r3, [r3, #25]
   45a88:	cmp	r3, #0
   45a8c:	beq	45ac8 <flatcc_json_printer_uint16_vector_field@@Base+0x27c>
   45a90:	ldr	r3, [fp, #-16]
   45a94:	ldr	r3, [r3, #20]
   45a98:	add	r1, r3, #1
   45a9c:	ldr	r2, [fp, #-16]
   45aa0:	str	r1, [r2, #20]
   45aa4:	mov	r2, #10
   45aa8:	strb	r2, [r3]
   45aac:	ldr	r3, [fp, #-16]
   45ab0:	ldr	r3, [r3, #32]
   45ab4:	sub	r2, r3, #1
   45ab8:	ldr	r3, [fp, #-16]
   45abc:	str	r2, [r3, #32]
   45ac0:	ldr	r0, [fp, #-16]
   45ac4:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45ac8:	ldr	r3, [fp, #-16]
   45acc:	ldr	r3, [r3, #20]
   45ad0:	add	r1, r3, #1
   45ad4:	ldr	r2, [fp, #-16]
   45ad8:	str	r1, [r2, #20]
   45adc:	mov	r2, #93	; 0x5d
   45ae0:	strb	r2, [r3]
   45ae4:	nop			; (mov r0, r0)
   45ae8:	sub	sp, fp, #4
   45aec:	pop	{fp, pc}

00045af0 <flatcc_json_printer_uint32_vector_field@@Base>:
   45af0:	push	{fp, lr}
   45af4:	add	fp, sp, #4
   45af8:	sub	sp, sp, #24
   45afc:	str	r0, [fp, #-16]
   45b00:	str	r1, [fp, #-20]	; 0xffffffec
   45b04:	str	r2, [fp, #-24]	; 0xffffffe8
   45b08:	str	r3, [fp, #-28]	; 0xffffffe4
   45b0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45b10:	ldr	r0, [fp, #-20]	; 0xffffffec
   45b14:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   45b18:	str	r0, [fp, #-8]
   45b1c:	ldr	r3, [fp, #-8]
   45b20:	cmp	r3, #0
   45b24:	beq	45d80 <flatcc_json_printer_uint32_vector_field@@Base+0x290>
   45b28:	ldr	r3, [fp, #-20]	; 0xffffffec
   45b2c:	ldr	r3, [r3, #16]
   45b30:	add	r1, r3, #1
   45b34:	ldr	r2, [fp, #-20]	; 0xffffffec
   45b38:	str	r1, [r2, #16]
   45b3c:	cmp	r3, #0
   45b40:	beq	45b60 <flatcc_json_printer_uint32_vector_field@@Base+0x70>
   45b44:	ldr	r3, [fp, #-16]
   45b48:	ldr	r3, [r3, #20]
   45b4c:	add	r1, r3, #1
   45b50:	ldr	r2, [fp, #-16]
   45b54:	str	r1, [r2, #20]
   45b58:	mov	r2, #44	; 0x2c
   45b5c:	strb	r2, [r3]
   45b60:	ldr	r0, [fp, #-8]
   45b64:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   45b68:	str	r0, [fp, #-8]
   45b6c:	ldr	r0, [fp, #-8]
   45b70:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   45b74:	str	r0, [fp, #-12]
   45b78:	ldr	r3, [fp, #-8]
   45b7c:	add	r3, r3, #4
   45b80:	str	r3, [fp, #-8]
   45b84:	ldr	r3, [fp, #4]
   45b88:	mov	r2, r3
   45b8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45b90:	ldr	r0, [fp, #-16]
   45b94:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   45b98:	ldr	r3, [fp, #-16]
   45b9c:	ldr	r3, [r3, #32]
   45ba0:	add	r2, r3, #1
   45ba4:	ldr	r3, [fp, #-16]
   45ba8:	str	r2, [r3, #32]
   45bac:	ldr	r3, [fp, #-16]
   45bb0:	ldr	r3, [r3, #20]
   45bb4:	add	r1, r3, #1
   45bb8:	ldr	r2, [fp, #-16]
   45bbc:	str	r1, [r2, #20]
   45bc0:	mov	r2, #91	; 0x5b
   45bc4:	strb	r2, [r3]
   45bc8:	ldr	r3, [fp, #-12]
   45bcc:	cmp	r3, #0
   45bd0:	beq	45d08 <flatcc_json_printer_uint32_vector_field@@Base+0x218>
   45bd4:	ldr	r3, [fp, #-16]
   45bd8:	ldrb	r3, [r3, #25]
   45bdc:	cmp	r3, #0
   45be0:	beq	45c0c <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   45be4:	ldr	r3, [fp, #-16]
   45be8:	ldr	r3, [r3, #20]
   45bec:	add	r1, r3, #1
   45bf0:	ldr	r2, [fp, #-16]
   45bf4:	str	r1, [r2, #20]
   45bf8:	mov	r2, #10
   45bfc:	strb	r2, [r3]
   45c00:	ldr	r0, [fp, #-16]
   45c04:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45c08:	b	45c14 <flatcc_json_printer_uint32_vector_field@@Base+0x124>
   45c0c:	ldr	r0, [fp, #-16]
   45c10:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45c14:	ldr	r0, [fp, #-8]
   45c18:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   45c1c:	mov	r2, r0
   45c20:	ldr	r3, [fp, #-16]
   45c24:	ldr	r3, [r3, #20]
   45c28:	mov	r1, r3
   45c2c:	mov	r0, r2
   45c30:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   45c34:	mov	r2, r0
   45c38:	ldr	r3, [fp, #-16]
   45c3c:	ldr	r3, [r3, #20]
   45c40:	add	r2, r3, r2
   45c44:	ldr	r3, [fp, #-16]
   45c48:	str	r2, [r3, #20]
   45c4c:	ldr	r3, [fp, #-8]
   45c50:	add	r3, r3, #4
   45c54:	str	r3, [fp, #-8]
   45c58:	ldr	r3, [fp, #-12]
   45c5c:	sub	r3, r3, #1
   45c60:	str	r3, [fp, #-12]
   45c64:	b	45d08 <flatcc_json_printer_uint32_vector_field@@Base+0x218>
   45c68:	ldr	r3, [fp, #-16]
   45c6c:	ldr	r3, [r3, #20]
   45c70:	add	r1, r3, #1
   45c74:	ldr	r2, [fp, #-16]
   45c78:	str	r1, [r2, #20]
   45c7c:	mov	r2, #44	; 0x2c
   45c80:	strb	r2, [r3]
   45c84:	ldr	r3, [fp, #-16]
   45c88:	ldrb	r3, [r3, #25]
   45c8c:	cmp	r3, #0
   45c90:	beq	45cbc <flatcc_json_printer_uint32_vector_field@@Base+0x1cc>
   45c94:	ldr	r3, [fp, #-16]
   45c98:	ldr	r3, [r3, #20]
   45c9c:	add	r1, r3, #1
   45ca0:	ldr	r2, [fp, #-16]
   45ca4:	str	r1, [r2, #20]
   45ca8:	mov	r2, #10
   45cac:	strb	r2, [r3]
   45cb0:	ldr	r0, [fp, #-16]
   45cb4:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45cb8:	b	45cc4 <flatcc_json_printer_uint32_vector_field@@Base+0x1d4>
   45cbc:	ldr	r0, [fp, #-16]
   45cc0:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45cc4:	ldr	r0, [fp, #-8]
   45cc8:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   45ccc:	mov	r2, r0
   45cd0:	ldr	r3, [fp, #-16]
   45cd4:	ldr	r3, [r3, #20]
   45cd8:	mov	r1, r3
   45cdc:	mov	r0, r2
   45ce0:	bl	3dad4 <flatcc_json_parser_struct_as_root@@Base+0xcf8>
   45ce4:	mov	r2, r0
   45ce8:	ldr	r3, [fp, #-16]
   45cec:	ldr	r3, [r3, #20]
   45cf0:	add	r2, r3, r2
   45cf4:	ldr	r3, [fp, #-16]
   45cf8:	str	r2, [r3, #20]
   45cfc:	ldr	r3, [fp, #-8]
   45d00:	add	r3, r3, #4
   45d04:	str	r3, [fp, #-8]
   45d08:	ldr	r3, [fp, #-12]
   45d0c:	sub	r2, r3, #1
   45d10:	str	r2, [fp, #-12]
   45d14:	cmp	r3, #0
   45d18:	bne	45c68 <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   45d1c:	ldr	r3, [fp, #-16]
   45d20:	ldrb	r3, [r3, #25]
   45d24:	cmp	r3, #0
   45d28:	beq	45d64 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   45d2c:	ldr	r3, [fp, #-16]
   45d30:	ldr	r3, [r3, #20]
   45d34:	add	r1, r3, #1
   45d38:	ldr	r2, [fp, #-16]
   45d3c:	str	r1, [r2, #20]
   45d40:	mov	r2, #10
   45d44:	strb	r2, [r3]
   45d48:	ldr	r3, [fp, #-16]
   45d4c:	ldr	r3, [r3, #32]
   45d50:	sub	r2, r3, #1
   45d54:	ldr	r3, [fp, #-16]
   45d58:	str	r2, [r3, #32]
   45d5c:	ldr	r0, [fp, #-16]
   45d60:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45d64:	ldr	r3, [fp, #-16]
   45d68:	ldr	r3, [r3, #20]
   45d6c:	add	r1, r3, #1
   45d70:	ldr	r2, [fp, #-16]
   45d74:	str	r1, [r2, #20]
   45d78:	mov	r2, #93	; 0x5d
   45d7c:	strb	r2, [r3]
   45d80:	nop			; (mov r0, r0)
   45d84:	sub	sp, fp, #4
   45d88:	pop	{fp, pc}

00045d8c <flatcc_json_printer_uint64_vector_field@@Base>:
   45d8c:	push	{fp, lr}
   45d90:	add	fp, sp, #4
   45d94:	sub	sp, sp, #24
   45d98:	str	r0, [fp, #-16]
   45d9c:	str	r1, [fp, #-20]	; 0xffffffec
   45da0:	str	r2, [fp, #-24]	; 0xffffffe8
   45da4:	str	r3, [fp, #-28]	; 0xffffffe4
   45da8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   45dac:	ldr	r0, [fp, #-20]	; 0xffffffec
   45db0:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   45db4:	str	r0, [fp, #-8]
   45db8:	ldr	r3, [fp, #-8]
   45dbc:	cmp	r3, #0
   45dc0:	beq	4600c <flatcc_json_printer_uint64_vector_field@@Base+0x280>
   45dc4:	ldr	r3, [fp, #-20]	; 0xffffffec
   45dc8:	ldr	r3, [r3, #16]
   45dcc:	add	r1, r3, #1
   45dd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   45dd4:	str	r1, [r2, #16]
   45dd8:	cmp	r3, #0
   45ddc:	beq	45dfc <flatcc_json_printer_uint64_vector_field@@Base+0x70>
   45de0:	ldr	r3, [fp, #-16]
   45de4:	ldr	r3, [r3, #20]
   45de8:	add	r1, r3, #1
   45dec:	ldr	r2, [fp, #-16]
   45df0:	str	r1, [r2, #20]
   45df4:	mov	r2, #44	; 0x2c
   45df8:	strb	r2, [r3]
   45dfc:	ldr	r0, [fp, #-8]
   45e00:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   45e04:	str	r0, [fp, #-8]
   45e08:	ldr	r0, [fp, #-8]
   45e0c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   45e10:	str	r0, [fp, #-12]
   45e14:	ldr	r3, [fp, #-8]
   45e18:	add	r3, r3, #4
   45e1c:	str	r3, [fp, #-8]
   45e20:	ldr	r3, [fp, #4]
   45e24:	mov	r2, r3
   45e28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   45e2c:	ldr	r0, [fp, #-16]
   45e30:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   45e34:	ldr	r3, [fp, #-16]
   45e38:	ldr	r3, [r3, #32]
   45e3c:	add	r2, r3, #1
   45e40:	ldr	r3, [fp, #-16]
   45e44:	str	r2, [r3, #32]
   45e48:	ldr	r3, [fp, #-16]
   45e4c:	ldr	r3, [r3, #20]
   45e50:	add	r1, r3, #1
   45e54:	ldr	r2, [fp, #-16]
   45e58:	str	r1, [r2, #20]
   45e5c:	mov	r2, #91	; 0x5b
   45e60:	strb	r2, [r3]
   45e64:	ldr	r3, [fp, #-12]
   45e68:	cmp	r3, #0
   45e6c:	beq	45f94 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   45e70:	ldr	r3, [fp, #-16]
   45e74:	ldrb	r3, [r3, #25]
   45e78:	cmp	r3, #0
   45e7c:	beq	45ea8 <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   45e80:	ldr	r3, [fp, #-16]
   45e84:	ldr	r3, [r3, #20]
   45e88:	add	r1, r3, #1
   45e8c:	ldr	r2, [fp, #-16]
   45e90:	str	r1, [r2, #20]
   45e94:	mov	r2, #10
   45e98:	strb	r2, [r3]
   45e9c:	ldr	r0, [fp, #-16]
   45ea0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45ea4:	b	45eb0 <flatcc_json_printer_uint64_vector_field@@Base+0x124>
   45ea8:	ldr	r0, [fp, #-16]
   45eac:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45eb0:	ldr	r0, [fp, #-8]
   45eb4:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   45eb8:	ldr	r3, [fp, #-16]
   45ebc:	ldr	r3, [r3, #20]
   45ec0:	mov	r2, r3
   45ec4:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   45ec8:	mov	r2, r0
   45ecc:	ldr	r3, [fp, #-16]
   45ed0:	ldr	r3, [r3, #20]
   45ed4:	add	r2, r3, r2
   45ed8:	ldr	r3, [fp, #-16]
   45edc:	str	r2, [r3, #20]
   45ee0:	ldr	r3, [fp, #-8]
   45ee4:	add	r3, r3, #8
   45ee8:	str	r3, [fp, #-8]
   45eec:	ldr	r3, [fp, #-12]
   45ef0:	sub	r3, r3, #1
   45ef4:	str	r3, [fp, #-12]
   45ef8:	b	45f94 <flatcc_json_printer_uint64_vector_field@@Base+0x208>
   45efc:	ldr	r3, [fp, #-16]
   45f00:	ldr	r3, [r3, #20]
   45f04:	add	r1, r3, #1
   45f08:	ldr	r2, [fp, #-16]
   45f0c:	str	r1, [r2, #20]
   45f10:	mov	r2, #44	; 0x2c
   45f14:	strb	r2, [r3]
   45f18:	ldr	r3, [fp, #-16]
   45f1c:	ldrb	r3, [r3, #25]
   45f20:	cmp	r3, #0
   45f24:	beq	45f50 <flatcc_json_printer_uint64_vector_field@@Base+0x1c4>
   45f28:	ldr	r3, [fp, #-16]
   45f2c:	ldr	r3, [r3, #20]
   45f30:	add	r1, r3, #1
   45f34:	ldr	r2, [fp, #-16]
   45f38:	str	r1, [r2, #20]
   45f3c:	mov	r2, #10
   45f40:	strb	r2, [r3]
   45f44:	ldr	r0, [fp, #-16]
   45f48:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45f4c:	b	45f58 <flatcc_json_printer_uint64_vector_field@@Base+0x1cc>
   45f50:	ldr	r0, [fp, #-16]
   45f54:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   45f58:	ldr	r0, [fp, #-8]
   45f5c:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   45f60:	ldr	r3, [fp, #-16]
   45f64:	ldr	r3, [r3, #20]
   45f68:	mov	r2, r3
   45f6c:	bl	3e10c <flatcc_json_parser_struct_as_root@@Base+0x1330>
   45f70:	mov	r2, r0
   45f74:	ldr	r3, [fp, #-16]
   45f78:	ldr	r3, [r3, #20]
   45f7c:	add	r2, r3, r2
   45f80:	ldr	r3, [fp, #-16]
   45f84:	str	r2, [r3, #20]
   45f88:	ldr	r3, [fp, #-8]
   45f8c:	add	r3, r3, #8
   45f90:	str	r3, [fp, #-8]
   45f94:	ldr	r3, [fp, #-12]
   45f98:	sub	r2, r3, #1
   45f9c:	str	r2, [fp, #-12]
   45fa0:	cmp	r3, #0
   45fa4:	bne	45efc <flatcc_json_printer_uint64_vector_field@@Base+0x170>
   45fa8:	ldr	r3, [fp, #-16]
   45fac:	ldrb	r3, [r3, #25]
   45fb0:	cmp	r3, #0
   45fb4:	beq	45ff0 <flatcc_json_printer_uint64_vector_field@@Base+0x264>
   45fb8:	ldr	r3, [fp, #-16]
   45fbc:	ldr	r3, [r3, #20]
   45fc0:	add	r1, r3, #1
   45fc4:	ldr	r2, [fp, #-16]
   45fc8:	str	r1, [r2, #20]
   45fcc:	mov	r2, #10
   45fd0:	strb	r2, [r3]
   45fd4:	ldr	r3, [fp, #-16]
   45fd8:	ldr	r3, [r3, #32]
   45fdc:	sub	r2, r3, #1
   45fe0:	ldr	r3, [fp, #-16]
   45fe4:	str	r2, [r3, #32]
   45fe8:	ldr	r0, [fp, #-16]
   45fec:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   45ff0:	ldr	r3, [fp, #-16]
   45ff4:	ldr	r3, [r3, #20]
   45ff8:	add	r1, r3, #1
   45ffc:	ldr	r2, [fp, #-16]
   46000:	str	r1, [r2, #20]
   46004:	mov	r2, #93	; 0x5d
   46008:	strb	r2, [r3]
   4600c:	nop			; (mov r0, r0)
   46010:	sub	sp, fp, #4
   46014:	pop	{fp, pc}

00046018 <flatcc_json_printer_int8_vector_field@@Base>:
   46018:	push	{fp, lr}
   4601c:	add	fp, sp, #4
   46020:	sub	sp, sp, #24
   46024:	str	r0, [fp, #-16]
   46028:	str	r1, [fp, #-20]	; 0xffffffec
   4602c:	str	r2, [fp, #-24]	; 0xffffffe8
   46030:	str	r3, [fp, #-28]	; 0xffffffe4
   46034:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46038:	ldr	r0, [fp, #-20]	; 0xffffffec
   4603c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   46040:	str	r0, [fp, #-8]
   46044:	ldr	r3, [fp, #-8]
   46048:	cmp	r3, #0
   4604c:	beq	462b0 <flatcc_json_printer_int8_vector_field@@Base+0x298>
   46050:	ldr	r3, [fp, #-20]	; 0xffffffec
   46054:	ldr	r3, [r3, #16]
   46058:	add	r1, r3, #1
   4605c:	ldr	r2, [fp, #-20]	; 0xffffffec
   46060:	str	r1, [r2, #16]
   46064:	cmp	r3, #0
   46068:	beq	46088 <flatcc_json_printer_int8_vector_field@@Base+0x70>
   4606c:	ldr	r3, [fp, #-16]
   46070:	ldr	r3, [r3, #20]
   46074:	add	r1, r3, #1
   46078:	ldr	r2, [fp, #-16]
   4607c:	str	r1, [r2, #20]
   46080:	mov	r2, #44	; 0x2c
   46084:	strb	r2, [r3]
   46088:	ldr	r0, [fp, #-8]
   4608c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   46090:	str	r0, [fp, #-8]
   46094:	ldr	r0, [fp, #-8]
   46098:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4609c:	str	r0, [fp, #-12]
   460a0:	ldr	r3, [fp, #-8]
   460a4:	add	r3, r3, #4
   460a8:	str	r3, [fp, #-8]
   460ac:	ldr	r3, [fp, #4]
   460b0:	mov	r2, r3
   460b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   460b8:	ldr	r0, [fp, #-16]
   460bc:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   460c0:	ldr	r3, [fp, #-16]
   460c4:	ldr	r3, [r3, #32]
   460c8:	add	r2, r3, #1
   460cc:	ldr	r3, [fp, #-16]
   460d0:	str	r2, [r3, #32]
   460d4:	ldr	r3, [fp, #-16]
   460d8:	ldr	r3, [r3, #20]
   460dc:	add	r1, r3, #1
   460e0:	ldr	r2, [fp, #-16]
   460e4:	str	r1, [r2, #20]
   460e8:	mov	r2, #91	; 0x5b
   460ec:	strb	r2, [r3]
   460f0:	ldr	r3, [fp, #-12]
   460f4:	cmp	r3, #0
   460f8:	beq	46238 <flatcc_json_printer_int8_vector_field@@Base+0x220>
   460fc:	ldr	r3, [fp, #-16]
   46100:	ldrb	r3, [r3, #25]
   46104:	cmp	r3, #0
   46108:	beq	46134 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   4610c:	ldr	r3, [fp, #-16]
   46110:	ldr	r3, [r3, #20]
   46114:	add	r1, r3, #1
   46118:	ldr	r2, [fp, #-16]
   4611c:	str	r1, [r2, #20]
   46120:	mov	r2, #10
   46124:	strb	r2, [r3]
   46128:	ldr	r0, [fp, #-16]
   4612c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46130:	b	4613c <flatcc_json_printer_int8_vector_field@@Base+0x124>
   46134:	ldr	r0, [fp, #-16]
   46138:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   4613c:	ldr	r0, [fp, #-8]
   46140:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   46144:	mov	r3, r0
   46148:	mov	r2, r3
   4614c:	ldr	r3, [fp, #-16]
   46150:	ldr	r3, [r3, #20]
   46154:	mov	r1, r3
   46158:	mov	r0, r2
   4615c:	bl	3ec94 <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   46160:	mov	r2, r0
   46164:	ldr	r3, [fp, #-16]
   46168:	ldr	r3, [r3, #20]
   4616c:	add	r2, r3, r2
   46170:	ldr	r3, [fp, #-16]
   46174:	str	r2, [r3, #20]
   46178:	ldr	r3, [fp, #-8]
   4617c:	add	r3, r3, #1
   46180:	str	r3, [fp, #-8]
   46184:	ldr	r3, [fp, #-12]
   46188:	sub	r3, r3, #1
   4618c:	str	r3, [fp, #-12]
   46190:	b	46238 <flatcc_json_printer_int8_vector_field@@Base+0x220>
   46194:	ldr	r3, [fp, #-16]
   46198:	ldr	r3, [r3, #20]
   4619c:	add	r1, r3, #1
   461a0:	ldr	r2, [fp, #-16]
   461a4:	str	r1, [r2, #20]
   461a8:	mov	r2, #44	; 0x2c
   461ac:	strb	r2, [r3]
   461b0:	ldr	r3, [fp, #-16]
   461b4:	ldrb	r3, [r3, #25]
   461b8:	cmp	r3, #0
   461bc:	beq	461e8 <flatcc_json_printer_int8_vector_field@@Base+0x1d0>
   461c0:	ldr	r3, [fp, #-16]
   461c4:	ldr	r3, [r3, #20]
   461c8:	add	r1, r3, #1
   461cc:	ldr	r2, [fp, #-16]
   461d0:	str	r1, [r2, #20]
   461d4:	mov	r2, #10
   461d8:	strb	r2, [r3]
   461dc:	ldr	r0, [fp, #-16]
   461e0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   461e4:	b	461f0 <flatcc_json_printer_int8_vector_field@@Base+0x1d8>
   461e8:	ldr	r0, [fp, #-16]
   461ec:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   461f0:	ldr	r0, [fp, #-8]
   461f4:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   461f8:	mov	r3, r0
   461fc:	mov	r2, r3
   46200:	ldr	r3, [fp, #-16]
   46204:	ldr	r3, [r3, #20]
   46208:	mov	r1, r3
   4620c:	mov	r0, r2
   46210:	bl	3ec94 <flatcc_json_parser_struct_as_root@@Base+0x1eb8>
   46214:	mov	r2, r0
   46218:	ldr	r3, [fp, #-16]
   4621c:	ldr	r3, [r3, #20]
   46220:	add	r2, r3, r2
   46224:	ldr	r3, [fp, #-16]
   46228:	str	r2, [r3, #20]
   4622c:	ldr	r3, [fp, #-8]
   46230:	add	r3, r3, #1
   46234:	str	r3, [fp, #-8]
   46238:	ldr	r3, [fp, #-12]
   4623c:	sub	r2, r3, #1
   46240:	str	r2, [fp, #-12]
   46244:	cmp	r3, #0
   46248:	bne	46194 <flatcc_json_printer_int8_vector_field@@Base+0x17c>
   4624c:	ldr	r3, [fp, #-16]
   46250:	ldrb	r3, [r3, #25]
   46254:	cmp	r3, #0
   46258:	beq	46294 <flatcc_json_printer_int8_vector_field@@Base+0x27c>
   4625c:	ldr	r3, [fp, #-16]
   46260:	ldr	r3, [r3, #20]
   46264:	add	r1, r3, #1
   46268:	ldr	r2, [fp, #-16]
   4626c:	str	r1, [r2, #20]
   46270:	mov	r2, #10
   46274:	strb	r2, [r3]
   46278:	ldr	r3, [fp, #-16]
   4627c:	ldr	r3, [r3, #32]
   46280:	sub	r2, r3, #1
   46284:	ldr	r3, [fp, #-16]
   46288:	str	r2, [r3, #32]
   4628c:	ldr	r0, [fp, #-16]
   46290:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46294:	ldr	r3, [fp, #-16]
   46298:	ldr	r3, [r3, #20]
   4629c:	add	r1, r3, #1
   462a0:	ldr	r2, [fp, #-16]
   462a4:	str	r1, [r2, #20]
   462a8:	mov	r2, #93	; 0x5d
   462ac:	strb	r2, [r3]
   462b0:	nop			; (mov r0, r0)
   462b4:	sub	sp, fp, #4
   462b8:	pop	{fp, pc}

000462bc <flatcc_json_printer_int16_vector_field@@Base>:
   462bc:	push	{fp, lr}
   462c0:	add	fp, sp, #4
   462c4:	sub	sp, sp, #24
   462c8:	str	r0, [fp, #-16]
   462cc:	str	r1, [fp, #-20]	; 0xffffffec
   462d0:	str	r2, [fp, #-24]	; 0xffffffe8
   462d4:	str	r3, [fp, #-28]	; 0xffffffe4
   462d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   462dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   462e0:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   462e4:	str	r0, [fp, #-8]
   462e8:	ldr	r3, [fp, #-8]
   462ec:	cmp	r3, #0
   462f0:	beq	46554 <flatcc_json_printer_int16_vector_field@@Base+0x298>
   462f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   462f8:	ldr	r3, [r3, #16]
   462fc:	add	r1, r3, #1
   46300:	ldr	r2, [fp, #-20]	; 0xffffffec
   46304:	str	r1, [r2, #16]
   46308:	cmp	r3, #0
   4630c:	beq	4632c <flatcc_json_printer_int16_vector_field@@Base+0x70>
   46310:	ldr	r3, [fp, #-16]
   46314:	ldr	r3, [r3, #20]
   46318:	add	r1, r3, #1
   4631c:	ldr	r2, [fp, #-16]
   46320:	str	r1, [r2, #20]
   46324:	mov	r2, #44	; 0x2c
   46328:	strb	r2, [r3]
   4632c:	ldr	r0, [fp, #-8]
   46330:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   46334:	str	r0, [fp, #-8]
   46338:	ldr	r0, [fp, #-8]
   4633c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   46340:	str	r0, [fp, #-12]
   46344:	ldr	r3, [fp, #-8]
   46348:	add	r3, r3, #4
   4634c:	str	r3, [fp, #-8]
   46350:	ldr	r3, [fp, #4]
   46354:	mov	r2, r3
   46358:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4635c:	ldr	r0, [fp, #-16]
   46360:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   46364:	ldr	r3, [fp, #-16]
   46368:	ldr	r3, [r3, #32]
   4636c:	add	r2, r3, #1
   46370:	ldr	r3, [fp, #-16]
   46374:	str	r2, [r3, #32]
   46378:	ldr	r3, [fp, #-16]
   4637c:	ldr	r3, [r3, #20]
   46380:	add	r1, r3, #1
   46384:	ldr	r2, [fp, #-16]
   46388:	str	r1, [r2, #20]
   4638c:	mov	r2, #91	; 0x5b
   46390:	strb	r2, [r3]
   46394:	ldr	r3, [fp, #-12]
   46398:	cmp	r3, #0
   4639c:	beq	464dc <flatcc_json_printer_int16_vector_field@@Base+0x220>
   463a0:	ldr	r3, [fp, #-16]
   463a4:	ldrb	r3, [r3, #25]
   463a8:	cmp	r3, #0
   463ac:	beq	463d8 <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   463b0:	ldr	r3, [fp, #-16]
   463b4:	ldr	r3, [r3, #20]
   463b8:	add	r1, r3, #1
   463bc:	ldr	r2, [fp, #-16]
   463c0:	str	r1, [r2, #20]
   463c4:	mov	r2, #10
   463c8:	strb	r2, [r3]
   463cc:	ldr	r0, [fp, #-16]
   463d0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   463d4:	b	463e0 <flatcc_json_printer_int16_vector_field@@Base+0x124>
   463d8:	ldr	r0, [fp, #-16]
   463dc:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   463e0:	ldr	r0, [fp, #-8]
   463e4:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   463e8:	mov	r3, r0
   463ec:	mov	r2, r3
   463f0:	ldr	r3, [fp, #-16]
   463f4:	ldr	r3, [r3, #20]
   463f8:	mov	r1, r3
   463fc:	mov	r0, r2
   46400:	bl	3ed14 <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   46404:	mov	r2, r0
   46408:	ldr	r3, [fp, #-16]
   4640c:	ldr	r3, [r3, #20]
   46410:	add	r2, r3, r2
   46414:	ldr	r3, [fp, #-16]
   46418:	str	r2, [r3, #20]
   4641c:	ldr	r3, [fp, #-8]
   46420:	add	r3, r3, #2
   46424:	str	r3, [fp, #-8]
   46428:	ldr	r3, [fp, #-12]
   4642c:	sub	r3, r3, #1
   46430:	str	r3, [fp, #-12]
   46434:	b	464dc <flatcc_json_printer_int16_vector_field@@Base+0x220>
   46438:	ldr	r3, [fp, #-16]
   4643c:	ldr	r3, [r3, #20]
   46440:	add	r1, r3, #1
   46444:	ldr	r2, [fp, #-16]
   46448:	str	r1, [r2, #20]
   4644c:	mov	r2, #44	; 0x2c
   46450:	strb	r2, [r3]
   46454:	ldr	r3, [fp, #-16]
   46458:	ldrb	r3, [r3, #25]
   4645c:	cmp	r3, #0
   46460:	beq	4648c <flatcc_json_printer_int16_vector_field@@Base+0x1d0>
   46464:	ldr	r3, [fp, #-16]
   46468:	ldr	r3, [r3, #20]
   4646c:	add	r1, r3, #1
   46470:	ldr	r2, [fp, #-16]
   46474:	str	r1, [r2, #20]
   46478:	mov	r2, #10
   4647c:	strb	r2, [r3]
   46480:	ldr	r0, [fp, #-16]
   46484:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46488:	b	46494 <flatcc_json_printer_int16_vector_field@@Base+0x1d8>
   4648c:	ldr	r0, [fp, #-16]
   46490:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46494:	ldr	r0, [fp, #-8]
   46498:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   4649c:	mov	r3, r0
   464a0:	mov	r2, r3
   464a4:	ldr	r3, [fp, #-16]
   464a8:	ldr	r3, [r3, #20]
   464ac:	mov	r1, r3
   464b0:	mov	r0, r2
   464b4:	bl	3ed14 <flatcc_json_parser_struct_as_root@@Base+0x1f38>
   464b8:	mov	r2, r0
   464bc:	ldr	r3, [fp, #-16]
   464c0:	ldr	r3, [r3, #20]
   464c4:	add	r2, r3, r2
   464c8:	ldr	r3, [fp, #-16]
   464cc:	str	r2, [r3, #20]
   464d0:	ldr	r3, [fp, #-8]
   464d4:	add	r3, r3, #2
   464d8:	str	r3, [fp, #-8]
   464dc:	ldr	r3, [fp, #-12]
   464e0:	sub	r2, r3, #1
   464e4:	str	r2, [fp, #-12]
   464e8:	cmp	r3, #0
   464ec:	bne	46438 <flatcc_json_printer_int16_vector_field@@Base+0x17c>
   464f0:	ldr	r3, [fp, #-16]
   464f4:	ldrb	r3, [r3, #25]
   464f8:	cmp	r3, #0
   464fc:	beq	46538 <flatcc_json_printer_int16_vector_field@@Base+0x27c>
   46500:	ldr	r3, [fp, #-16]
   46504:	ldr	r3, [r3, #20]
   46508:	add	r1, r3, #1
   4650c:	ldr	r2, [fp, #-16]
   46510:	str	r1, [r2, #20]
   46514:	mov	r2, #10
   46518:	strb	r2, [r3]
   4651c:	ldr	r3, [fp, #-16]
   46520:	ldr	r3, [r3, #32]
   46524:	sub	r2, r3, #1
   46528:	ldr	r3, [fp, #-16]
   4652c:	str	r2, [r3, #32]
   46530:	ldr	r0, [fp, #-16]
   46534:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46538:	ldr	r3, [fp, #-16]
   4653c:	ldr	r3, [r3, #20]
   46540:	add	r1, r3, #1
   46544:	ldr	r2, [fp, #-16]
   46548:	str	r1, [r2, #20]
   4654c:	mov	r2, #93	; 0x5d
   46550:	strb	r2, [r3]
   46554:	nop			; (mov r0, r0)
   46558:	sub	sp, fp, #4
   4655c:	pop	{fp, pc}

00046560 <flatcc_json_printer_int32_vector_field@@Base>:
   46560:	push	{fp, lr}
   46564:	add	fp, sp, #4
   46568:	sub	sp, sp, #24
   4656c:	str	r0, [fp, #-16]
   46570:	str	r1, [fp, #-20]	; 0xffffffec
   46574:	str	r2, [fp, #-24]	; 0xffffffe8
   46578:	str	r3, [fp, #-28]	; 0xffffffe4
   4657c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46580:	ldr	r0, [fp, #-20]	; 0xffffffec
   46584:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   46588:	str	r0, [fp, #-8]
   4658c:	ldr	r3, [fp, #-8]
   46590:	cmp	r3, #0
   46594:	beq	467f0 <flatcc_json_printer_int32_vector_field@@Base+0x290>
   46598:	ldr	r3, [fp, #-20]	; 0xffffffec
   4659c:	ldr	r3, [r3, #16]
   465a0:	add	r1, r3, #1
   465a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   465a8:	str	r1, [r2, #16]
   465ac:	cmp	r3, #0
   465b0:	beq	465d0 <flatcc_json_printer_int32_vector_field@@Base+0x70>
   465b4:	ldr	r3, [fp, #-16]
   465b8:	ldr	r3, [r3, #20]
   465bc:	add	r1, r3, #1
   465c0:	ldr	r2, [fp, #-16]
   465c4:	str	r1, [r2, #20]
   465c8:	mov	r2, #44	; 0x2c
   465cc:	strb	r2, [r3]
   465d0:	ldr	r0, [fp, #-8]
   465d4:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   465d8:	str	r0, [fp, #-8]
   465dc:	ldr	r0, [fp, #-8]
   465e0:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   465e4:	str	r0, [fp, #-12]
   465e8:	ldr	r3, [fp, #-8]
   465ec:	add	r3, r3, #4
   465f0:	str	r3, [fp, #-8]
   465f4:	ldr	r3, [fp, #4]
   465f8:	mov	r2, r3
   465fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46600:	ldr	r0, [fp, #-16]
   46604:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   46608:	ldr	r3, [fp, #-16]
   4660c:	ldr	r3, [r3, #32]
   46610:	add	r2, r3, #1
   46614:	ldr	r3, [fp, #-16]
   46618:	str	r2, [r3, #32]
   4661c:	ldr	r3, [fp, #-16]
   46620:	ldr	r3, [r3, #20]
   46624:	add	r1, r3, #1
   46628:	ldr	r2, [fp, #-16]
   4662c:	str	r1, [r2, #20]
   46630:	mov	r2, #91	; 0x5b
   46634:	strb	r2, [r3]
   46638:	ldr	r3, [fp, #-12]
   4663c:	cmp	r3, #0
   46640:	beq	46778 <flatcc_json_printer_int32_vector_field@@Base+0x218>
   46644:	ldr	r3, [fp, #-16]
   46648:	ldrb	r3, [r3, #25]
   4664c:	cmp	r3, #0
   46650:	beq	4667c <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   46654:	ldr	r3, [fp, #-16]
   46658:	ldr	r3, [r3, #20]
   4665c:	add	r1, r3, #1
   46660:	ldr	r2, [fp, #-16]
   46664:	str	r1, [r2, #20]
   46668:	mov	r2, #10
   4666c:	strb	r2, [r3]
   46670:	ldr	r0, [fp, #-16]
   46674:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46678:	b	46684 <flatcc_json_printer_int32_vector_field@@Base+0x124>
   4667c:	ldr	r0, [fp, #-16]
   46680:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46684:	ldr	r0, [fp, #-8]
   46688:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   4668c:	mov	r2, r0
   46690:	ldr	r3, [fp, #-16]
   46694:	ldr	r3, [r3, #20]
   46698:	mov	r1, r3
   4669c:	mov	r0, r2
   466a0:	bl	3ed94 <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   466a4:	mov	r2, r0
   466a8:	ldr	r3, [fp, #-16]
   466ac:	ldr	r3, [r3, #20]
   466b0:	add	r2, r3, r2
   466b4:	ldr	r3, [fp, #-16]
   466b8:	str	r2, [r3, #20]
   466bc:	ldr	r3, [fp, #-8]
   466c0:	add	r3, r3, #4
   466c4:	str	r3, [fp, #-8]
   466c8:	ldr	r3, [fp, #-12]
   466cc:	sub	r3, r3, #1
   466d0:	str	r3, [fp, #-12]
   466d4:	b	46778 <flatcc_json_printer_int32_vector_field@@Base+0x218>
   466d8:	ldr	r3, [fp, #-16]
   466dc:	ldr	r3, [r3, #20]
   466e0:	add	r1, r3, #1
   466e4:	ldr	r2, [fp, #-16]
   466e8:	str	r1, [r2, #20]
   466ec:	mov	r2, #44	; 0x2c
   466f0:	strb	r2, [r3]
   466f4:	ldr	r3, [fp, #-16]
   466f8:	ldrb	r3, [r3, #25]
   466fc:	cmp	r3, #0
   46700:	beq	4672c <flatcc_json_printer_int32_vector_field@@Base+0x1cc>
   46704:	ldr	r3, [fp, #-16]
   46708:	ldr	r3, [r3, #20]
   4670c:	add	r1, r3, #1
   46710:	ldr	r2, [fp, #-16]
   46714:	str	r1, [r2, #20]
   46718:	mov	r2, #10
   4671c:	strb	r2, [r3]
   46720:	ldr	r0, [fp, #-16]
   46724:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46728:	b	46734 <flatcc_json_printer_int32_vector_field@@Base+0x1d4>
   4672c:	ldr	r0, [fp, #-16]
   46730:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46734:	ldr	r0, [fp, #-8]
   46738:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   4673c:	mov	r2, r0
   46740:	ldr	r3, [fp, #-16]
   46744:	ldr	r3, [r3, #20]
   46748:	mov	r1, r3
   4674c:	mov	r0, r2
   46750:	bl	3ed94 <flatcc_json_parser_struct_as_root@@Base+0x1fb8>
   46754:	mov	r2, r0
   46758:	ldr	r3, [fp, #-16]
   4675c:	ldr	r3, [r3, #20]
   46760:	add	r2, r3, r2
   46764:	ldr	r3, [fp, #-16]
   46768:	str	r2, [r3, #20]
   4676c:	ldr	r3, [fp, #-8]
   46770:	add	r3, r3, #4
   46774:	str	r3, [fp, #-8]
   46778:	ldr	r3, [fp, #-12]
   4677c:	sub	r2, r3, #1
   46780:	str	r2, [fp, #-12]
   46784:	cmp	r3, #0
   46788:	bne	466d8 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   4678c:	ldr	r3, [fp, #-16]
   46790:	ldrb	r3, [r3, #25]
   46794:	cmp	r3, #0
   46798:	beq	467d4 <flatcc_json_printer_int32_vector_field@@Base+0x274>
   4679c:	ldr	r3, [fp, #-16]
   467a0:	ldr	r3, [r3, #20]
   467a4:	add	r1, r3, #1
   467a8:	ldr	r2, [fp, #-16]
   467ac:	str	r1, [r2, #20]
   467b0:	mov	r2, #10
   467b4:	strb	r2, [r3]
   467b8:	ldr	r3, [fp, #-16]
   467bc:	ldr	r3, [r3, #32]
   467c0:	sub	r2, r3, #1
   467c4:	ldr	r3, [fp, #-16]
   467c8:	str	r2, [r3, #32]
   467cc:	ldr	r0, [fp, #-16]
   467d0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   467d4:	ldr	r3, [fp, #-16]
   467d8:	ldr	r3, [r3, #20]
   467dc:	add	r1, r3, #1
   467e0:	ldr	r2, [fp, #-16]
   467e4:	str	r1, [r2, #20]
   467e8:	mov	r2, #93	; 0x5d
   467ec:	strb	r2, [r3]
   467f0:	nop			; (mov r0, r0)
   467f4:	sub	sp, fp, #4
   467f8:	pop	{fp, pc}

000467fc <flatcc_json_printer_int64_vector_field@@Base>:
   467fc:	push	{fp, lr}
   46800:	add	fp, sp, #4
   46804:	sub	sp, sp, #24
   46808:	str	r0, [fp, #-16]
   4680c:	str	r1, [fp, #-20]	; 0xffffffec
   46810:	str	r2, [fp, #-24]	; 0xffffffe8
   46814:	str	r3, [fp, #-28]	; 0xffffffe4
   46818:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4681c:	ldr	r0, [fp, #-20]	; 0xffffffec
   46820:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   46824:	str	r0, [fp, #-8]
   46828:	ldr	r3, [fp, #-8]
   4682c:	cmp	r3, #0
   46830:	beq	46a7c <flatcc_json_printer_int64_vector_field@@Base+0x280>
   46834:	ldr	r3, [fp, #-20]	; 0xffffffec
   46838:	ldr	r3, [r3, #16]
   4683c:	add	r1, r3, #1
   46840:	ldr	r2, [fp, #-20]	; 0xffffffec
   46844:	str	r1, [r2, #16]
   46848:	cmp	r3, #0
   4684c:	beq	4686c <flatcc_json_printer_int64_vector_field@@Base+0x70>
   46850:	ldr	r3, [fp, #-16]
   46854:	ldr	r3, [r3, #20]
   46858:	add	r1, r3, #1
   4685c:	ldr	r2, [fp, #-16]
   46860:	str	r1, [r2, #20]
   46864:	mov	r2, #44	; 0x2c
   46868:	strb	r2, [r3]
   4686c:	ldr	r0, [fp, #-8]
   46870:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   46874:	str	r0, [fp, #-8]
   46878:	ldr	r0, [fp, #-8]
   4687c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   46880:	str	r0, [fp, #-12]
   46884:	ldr	r3, [fp, #-8]
   46888:	add	r3, r3, #4
   4688c:	str	r3, [fp, #-8]
   46890:	ldr	r3, [fp, #4]
   46894:	mov	r2, r3
   46898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4689c:	ldr	r0, [fp, #-16]
   468a0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   468a4:	ldr	r3, [fp, #-16]
   468a8:	ldr	r3, [r3, #32]
   468ac:	add	r2, r3, #1
   468b0:	ldr	r3, [fp, #-16]
   468b4:	str	r2, [r3, #32]
   468b8:	ldr	r3, [fp, #-16]
   468bc:	ldr	r3, [r3, #20]
   468c0:	add	r1, r3, #1
   468c4:	ldr	r2, [fp, #-16]
   468c8:	str	r1, [r2, #20]
   468cc:	mov	r2, #91	; 0x5b
   468d0:	strb	r2, [r3]
   468d4:	ldr	r3, [fp, #-12]
   468d8:	cmp	r3, #0
   468dc:	beq	46a04 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   468e0:	ldr	r3, [fp, #-16]
   468e4:	ldrb	r3, [r3, #25]
   468e8:	cmp	r3, #0
   468ec:	beq	46918 <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   468f0:	ldr	r3, [fp, #-16]
   468f4:	ldr	r3, [r3, #20]
   468f8:	add	r1, r3, #1
   468fc:	ldr	r2, [fp, #-16]
   46900:	str	r1, [r2, #20]
   46904:	mov	r2, #10
   46908:	strb	r2, [r3]
   4690c:	ldr	r0, [fp, #-16]
   46910:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46914:	b	46920 <flatcc_json_printer_int64_vector_field@@Base+0x124>
   46918:	ldr	r0, [fp, #-16]
   4691c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46920:	ldr	r0, [fp, #-8]
   46924:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   46928:	ldr	r3, [fp, #-16]
   4692c:	ldr	r3, [r3, #20]
   46930:	mov	r2, r3
   46934:	bl	3ee0c <flatcc_json_parser_struct_as_root@@Base+0x2030>
   46938:	mov	r2, r0
   4693c:	ldr	r3, [fp, #-16]
   46940:	ldr	r3, [r3, #20]
   46944:	add	r2, r3, r2
   46948:	ldr	r3, [fp, #-16]
   4694c:	str	r2, [r3, #20]
   46950:	ldr	r3, [fp, #-8]
   46954:	add	r3, r3, #8
   46958:	str	r3, [fp, #-8]
   4695c:	ldr	r3, [fp, #-12]
   46960:	sub	r3, r3, #1
   46964:	str	r3, [fp, #-12]
   46968:	b	46a04 <flatcc_json_printer_int64_vector_field@@Base+0x208>
   4696c:	ldr	r3, [fp, #-16]
   46970:	ldr	r3, [r3, #20]
   46974:	add	r1, r3, #1
   46978:	ldr	r2, [fp, #-16]
   4697c:	str	r1, [r2, #20]
   46980:	mov	r2, #44	; 0x2c
   46984:	strb	r2, [r3]
   46988:	ldr	r3, [fp, #-16]
   4698c:	ldrb	r3, [r3, #25]
   46990:	cmp	r3, #0
   46994:	beq	469c0 <flatcc_json_printer_int64_vector_field@@Base+0x1c4>
   46998:	ldr	r3, [fp, #-16]
   4699c:	ldr	r3, [r3, #20]
   469a0:	add	r1, r3, #1
   469a4:	ldr	r2, [fp, #-16]
   469a8:	str	r1, [r2, #20]
   469ac:	mov	r2, #10
   469b0:	strb	r2, [r3]
   469b4:	ldr	r0, [fp, #-16]
   469b8:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   469bc:	b	469c8 <flatcc_json_printer_int64_vector_field@@Base+0x1cc>
   469c0:	ldr	r0, [fp, #-16]
   469c4:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   469c8:	ldr	r0, [fp, #-8]
   469cc:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   469d0:	ldr	r3, [fp, #-16]
   469d4:	ldr	r3, [r3, #20]
   469d8:	mov	r2, r3
   469dc:	bl	3ee0c <flatcc_json_parser_struct_as_root@@Base+0x2030>
   469e0:	mov	r2, r0
   469e4:	ldr	r3, [fp, #-16]
   469e8:	ldr	r3, [r3, #20]
   469ec:	add	r2, r3, r2
   469f0:	ldr	r3, [fp, #-16]
   469f4:	str	r2, [r3, #20]
   469f8:	ldr	r3, [fp, #-8]
   469fc:	add	r3, r3, #8
   46a00:	str	r3, [fp, #-8]
   46a04:	ldr	r3, [fp, #-12]
   46a08:	sub	r2, r3, #1
   46a0c:	str	r2, [fp, #-12]
   46a10:	cmp	r3, #0
   46a14:	bne	4696c <flatcc_json_printer_int64_vector_field@@Base+0x170>
   46a18:	ldr	r3, [fp, #-16]
   46a1c:	ldrb	r3, [r3, #25]
   46a20:	cmp	r3, #0
   46a24:	beq	46a60 <flatcc_json_printer_int64_vector_field@@Base+0x264>
   46a28:	ldr	r3, [fp, #-16]
   46a2c:	ldr	r3, [r3, #20]
   46a30:	add	r1, r3, #1
   46a34:	ldr	r2, [fp, #-16]
   46a38:	str	r1, [r2, #20]
   46a3c:	mov	r2, #10
   46a40:	strb	r2, [r3]
   46a44:	ldr	r3, [fp, #-16]
   46a48:	ldr	r3, [r3, #32]
   46a4c:	sub	r2, r3, #1
   46a50:	ldr	r3, [fp, #-16]
   46a54:	str	r2, [r3, #32]
   46a58:	ldr	r0, [fp, #-16]
   46a5c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46a60:	ldr	r3, [fp, #-16]
   46a64:	ldr	r3, [r3, #20]
   46a68:	add	r1, r3, #1
   46a6c:	ldr	r2, [fp, #-16]
   46a70:	str	r1, [r2, #20]
   46a74:	mov	r2, #93	; 0x5d
   46a78:	strb	r2, [r3]
   46a7c:	nop			; (mov r0, r0)
   46a80:	sub	sp, fp, #4
   46a84:	pop	{fp, pc}

00046a88 <flatcc_json_printer_bool_vector_field@@Base>:
   46a88:	push	{fp, lr}
   46a8c:	add	fp, sp, #4
   46a90:	sub	sp, sp, #24
   46a94:	str	r0, [fp, #-16]
   46a98:	str	r1, [fp, #-20]	; 0xffffffec
   46a9c:	str	r2, [fp, #-24]	; 0xffffffe8
   46aa0:	str	r3, [fp, #-28]	; 0xffffffe4
   46aa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   46aac:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   46ab0:	str	r0, [fp, #-8]
   46ab4:	ldr	r3, [fp, #-8]
   46ab8:	cmp	r3, #0
   46abc:	beq	46d20 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   46ac0:	ldr	r3, [fp, #-20]	; 0xffffffec
   46ac4:	ldr	r3, [r3, #16]
   46ac8:	add	r1, r3, #1
   46acc:	ldr	r2, [fp, #-20]	; 0xffffffec
   46ad0:	str	r1, [r2, #16]
   46ad4:	cmp	r3, #0
   46ad8:	beq	46af8 <flatcc_json_printer_bool_vector_field@@Base+0x70>
   46adc:	ldr	r3, [fp, #-16]
   46ae0:	ldr	r3, [r3, #20]
   46ae4:	add	r1, r3, #1
   46ae8:	ldr	r2, [fp, #-16]
   46aec:	str	r1, [r2, #20]
   46af0:	mov	r2, #44	; 0x2c
   46af4:	strb	r2, [r3]
   46af8:	ldr	r0, [fp, #-8]
   46afc:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   46b00:	str	r0, [fp, #-8]
   46b04:	ldr	r0, [fp, #-8]
   46b08:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   46b0c:	str	r0, [fp, #-12]
   46b10:	ldr	r3, [fp, #-8]
   46b14:	add	r3, r3, #4
   46b18:	str	r3, [fp, #-8]
   46b1c:	ldr	r3, [fp, #4]
   46b20:	mov	r2, r3
   46b24:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46b28:	ldr	r0, [fp, #-16]
   46b2c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   46b30:	ldr	r3, [fp, #-16]
   46b34:	ldr	r3, [r3, #32]
   46b38:	add	r2, r3, #1
   46b3c:	ldr	r3, [fp, #-16]
   46b40:	str	r2, [r3, #32]
   46b44:	ldr	r3, [fp, #-16]
   46b48:	ldr	r3, [r3, #20]
   46b4c:	add	r1, r3, #1
   46b50:	ldr	r2, [fp, #-16]
   46b54:	str	r1, [r2, #20]
   46b58:	mov	r2, #91	; 0x5b
   46b5c:	strb	r2, [r3]
   46b60:	ldr	r3, [fp, #-12]
   46b64:	cmp	r3, #0
   46b68:	beq	46ca8 <flatcc_json_printer_bool_vector_field@@Base+0x220>
   46b6c:	ldr	r3, [fp, #-16]
   46b70:	ldrb	r3, [r3, #25]
   46b74:	cmp	r3, #0
   46b78:	beq	46ba4 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   46b7c:	ldr	r3, [fp, #-16]
   46b80:	ldr	r3, [r3, #20]
   46b84:	add	r1, r3, #1
   46b88:	ldr	r2, [fp, #-16]
   46b8c:	str	r1, [r2, #20]
   46b90:	mov	r2, #10
   46b94:	strb	r2, [r3]
   46b98:	ldr	r0, [fp, #-16]
   46b9c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46ba0:	b	46bac <flatcc_json_printer_bool_vector_field@@Base+0x124>
   46ba4:	ldr	r0, [fp, #-16]
   46ba8:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46bac:	ldr	r0, [fp, #-8]
   46bb0:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   46bb4:	mov	r3, r0
   46bb8:	mov	r2, r3
   46bbc:	ldr	r3, [fp, #-16]
   46bc0:	ldr	r3, [r3, #20]
   46bc4:	mov	r1, r3
   46bc8:	mov	r0, r2
   46bcc:	bl	3d578 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   46bd0:	mov	r2, r0
   46bd4:	ldr	r3, [fp, #-16]
   46bd8:	ldr	r3, [r3, #20]
   46bdc:	add	r2, r3, r2
   46be0:	ldr	r3, [fp, #-16]
   46be4:	str	r2, [r3, #20]
   46be8:	ldr	r3, [fp, #-8]
   46bec:	add	r3, r3, #1
   46bf0:	str	r3, [fp, #-8]
   46bf4:	ldr	r3, [fp, #-12]
   46bf8:	sub	r3, r3, #1
   46bfc:	str	r3, [fp, #-12]
   46c00:	b	46ca8 <flatcc_json_printer_bool_vector_field@@Base+0x220>
   46c04:	ldr	r3, [fp, #-16]
   46c08:	ldr	r3, [r3, #20]
   46c0c:	add	r1, r3, #1
   46c10:	ldr	r2, [fp, #-16]
   46c14:	str	r1, [r2, #20]
   46c18:	mov	r2, #44	; 0x2c
   46c1c:	strb	r2, [r3]
   46c20:	ldr	r3, [fp, #-16]
   46c24:	ldrb	r3, [r3, #25]
   46c28:	cmp	r3, #0
   46c2c:	beq	46c58 <flatcc_json_printer_bool_vector_field@@Base+0x1d0>
   46c30:	ldr	r3, [fp, #-16]
   46c34:	ldr	r3, [r3, #20]
   46c38:	add	r1, r3, #1
   46c3c:	ldr	r2, [fp, #-16]
   46c40:	str	r1, [r2, #20]
   46c44:	mov	r2, #10
   46c48:	strb	r2, [r3]
   46c4c:	ldr	r0, [fp, #-16]
   46c50:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46c54:	b	46c60 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   46c58:	ldr	r0, [fp, #-16]
   46c5c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46c60:	ldr	r0, [fp, #-8]
   46c64:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   46c68:	mov	r3, r0
   46c6c:	mov	r2, r3
   46c70:	ldr	r3, [fp, #-16]
   46c74:	ldr	r3, [r3, #20]
   46c78:	mov	r1, r3
   46c7c:	mov	r0, r2
   46c80:	bl	3d578 <flatcc_json_parser_struct_as_root@@Base+0x79c>
   46c84:	mov	r2, r0
   46c88:	ldr	r3, [fp, #-16]
   46c8c:	ldr	r3, [r3, #20]
   46c90:	add	r2, r3, r2
   46c94:	ldr	r3, [fp, #-16]
   46c98:	str	r2, [r3, #20]
   46c9c:	ldr	r3, [fp, #-8]
   46ca0:	add	r3, r3, #1
   46ca4:	str	r3, [fp, #-8]
   46ca8:	ldr	r3, [fp, #-12]
   46cac:	sub	r2, r3, #1
   46cb0:	str	r2, [fp, #-12]
   46cb4:	cmp	r3, #0
   46cb8:	bne	46c04 <flatcc_json_printer_bool_vector_field@@Base+0x17c>
   46cbc:	ldr	r3, [fp, #-16]
   46cc0:	ldrb	r3, [r3, #25]
   46cc4:	cmp	r3, #0
   46cc8:	beq	46d04 <flatcc_json_printer_bool_vector_field@@Base+0x27c>
   46ccc:	ldr	r3, [fp, #-16]
   46cd0:	ldr	r3, [r3, #20]
   46cd4:	add	r1, r3, #1
   46cd8:	ldr	r2, [fp, #-16]
   46cdc:	str	r1, [r2, #20]
   46ce0:	mov	r2, #10
   46ce4:	strb	r2, [r3]
   46ce8:	ldr	r3, [fp, #-16]
   46cec:	ldr	r3, [r3, #32]
   46cf0:	sub	r2, r3, #1
   46cf4:	ldr	r3, [fp, #-16]
   46cf8:	str	r2, [r3, #32]
   46cfc:	ldr	r0, [fp, #-16]
   46d00:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46d04:	ldr	r3, [fp, #-16]
   46d08:	ldr	r3, [r3, #20]
   46d0c:	add	r1, r3, #1
   46d10:	ldr	r2, [fp, #-16]
   46d14:	str	r1, [r2, #20]
   46d18:	mov	r2, #93	; 0x5d
   46d1c:	strb	r2, [r3]
   46d20:	nop			; (mov r0, r0)
   46d24:	sub	sp, fp, #4
   46d28:	pop	{fp, pc}

00046d2c <flatcc_json_printer_float_vector_field@@Base>:
   46d2c:	push	{fp, lr}
   46d30:	add	fp, sp, #4
   46d34:	sub	sp, sp, #24
   46d38:	str	r0, [fp, #-16]
   46d3c:	str	r1, [fp, #-20]	; 0xffffffec
   46d40:	str	r2, [fp, #-24]	; 0xffffffe8
   46d44:	str	r3, [fp, #-28]	; 0xffffffe4
   46d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   46d50:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   46d54:	str	r0, [fp, #-8]
   46d58:	ldr	r3, [fp, #-8]
   46d5c:	cmp	r3, #0
   46d60:	beq	46fc4 <flatcc_json_printer_float_vector_field@@Base+0x298>
   46d64:	ldr	r3, [fp, #-20]	; 0xffffffec
   46d68:	ldr	r3, [r3, #16]
   46d6c:	add	r1, r3, #1
   46d70:	ldr	r2, [fp, #-20]	; 0xffffffec
   46d74:	str	r1, [r2, #16]
   46d78:	cmp	r3, #0
   46d7c:	beq	46d9c <flatcc_json_printer_float_vector_field@@Base+0x70>
   46d80:	ldr	r3, [fp, #-16]
   46d84:	ldr	r3, [r3, #20]
   46d88:	add	r1, r3, #1
   46d8c:	ldr	r2, [fp, #-16]
   46d90:	str	r1, [r2, #20]
   46d94:	mov	r2, #44	; 0x2c
   46d98:	strb	r2, [r3]
   46d9c:	ldr	r0, [fp, #-8]
   46da0:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   46da4:	str	r0, [fp, #-8]
   46da8:	ldr	r0, [fp, #-8]
   46dac:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   46db0:	str	r0, [fp, #-12]
   46db4:	ldr	r3, [fp, #-8]
   46db8:	add	r3, r3, #4
   46dbc:	str	r3, [fp, #-8]
   46dc0:	ldr	r3, [fp, #4]
   46dc4:	mov	r2, r3
   46dc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   46dcc:	ldr	r0, [fp, #-16]
   46dd0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   46dd4:	ldr	r3, [fp, #-16]
   46dd8:	ldr	r3, [r3, #32]
   46ddc:	add	r2, r3, #1
   46de0:	ldr	r3, [fp, #-16]
   46de4:	str	r2, [r3, #32]
   46de8:	ldr	r3, [fp, #-16]
   46dec:	ldr	r3, [r3, #20]
   46df0:	add	r1, r3, #1
   46df4:	ldr	r2, [fp, #-16]
   46df8:	str	r1, [r2, #20]
   46dfc:	mov	r2, #91	; 0x5b
   46e00:	strb	r2, [r3]
   46e04:	ldr	r3, [fp, #-12]
   46e08:	cmp	r3, #0
   46e0c:	beq	46f4c <flatcc_json_printer_float_vector_field@@Base+0x220>
   46e10:	ldr	r3, [fp, #-16]
   46e14:	ldrb	r3, [r3, #25]
   46e18:	cmp	r3, #0
   46e1c:	beq	46e48 <flatcc_json_printer_float_vector_field@@Base+0x11c>
   46e20:	ldr	r3, [fp, #-16]
   46e24:	ldr	r3, [r3, #20]
   46e28:	add	r1, r3, #1
   46e2c:	ldr	r2, [fp, #-16]
   46e30:	str	r1, [r2, #20]
   46e34:	mov	r2, #10
   46e38:	strb	r2, [r3]
   46e3c:	ldr	r0, [fp, #-16]
   46e40:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46e44:	b	46e50 <flatcc_json_printer_float_vector_field@@Base+0x124>
   46e48:	ldr	r0, [fp, #-16]
   46e4c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46e50:	ldr	r0, [fp, #-8]
   46e54:	bl	3d208 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   46e58:	vmov.f32	s15, s0
   46e5c:	vcvt.f64.f32	d7, s15
   46e60:	ldr	r3, [fp, #-16]
   46e64:	ldr	r3, [r3, #20]
   46e68:	mov	r0, r3
   46e6c:	vmov.f64	d0, d7
   46e70:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   46e74:	mov	r2, r0
   46e78:	ldr	r3, [fp, #-16]
   46e7c:	ldr	r3, [r3, #20]
   46e80:	add	r2, r3, r2
   46e84:	ldr	r3, [fp, #-16]
   46e88:	str	r2, [r3, #20]
   46e8c:	ldr	r3, [fp, #-8]
   46e90:	add	r3, r3, #4
   46e94:	str	r3, [fp, #-8]
   46e98:	ldr	r3, [fp, #-12]
   46e9c:	sub	r3, r3, #1
   46ea0:	str	r3, [fp, #-12]
   46ea4:	b	46f4c <flatcc_json_printer_float_vector_field@@Base+0x220>
   46ea8:	ldr	r3, [fp, #-16]
   46eac:	ldr	r3, [r3, #20]
   46eb0:	add	r1, r3, #1
   46eb4:	ldr	r2, [fp, #-16]
   46eb8:	str	r1, [r2, #20]
   46ebc:	mov	r2, #44	; 0x2c
   46ec0:	strb	r2, [r3]
   46ec4:	ldr	r3, [fp, #-16]
   46ec8:	ldrb	r3, [r3, #25]
   46ecc:	cmp	r3, #0
   46ed0:	beq	46efc <flatcc_json_printer_float_vector_field@@Base+0x1d0>
   46ed4:	ldr	r3, [fp, #-16]
   46ed8:	ldr	r3, [r3, #20]
   46edc:	add	r1, r3, #1
   46ee0:	ldr	r2, [fp, #-16]
   46ee4:	str	r1, [r2, #20]
   46ee8:	mov	r2, #10
   46eec:	strb	r2, [r3]
   46ef0:	ldr	r0, [fp, #-16]
   46ef4:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46ef8:	b	46f04 <flatcc_json_printer_float_vector_field@@Base+0x1d8>
   46efc:	ldr	r0, [fp, #-16]
   46f00:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   46f04:	ldr	r0, [fp, #-8]
   46f08:	bl	3d208 <flatcc_json_parser_struct_as_root@@Base+0x42c>
   46f0c:	vmov.f32	s15, s0
   46f10:	vcvt.f64.f32	d7, s15
   46f14:	ldr	r3, [fp, #-16]
   46f18:	ldr	r3, [r3, #20]
   46f1c:	mov	r0, r3
   46f20:	vmov.f64	d0, d7
   46f24:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   46f28:	mov	r2, r0
   46f2c:	ldr	r3, [fp, #-16]
   46f30:	ldr	r3, [r3, #20]
   46f34:	add	r2, r3, r2
   46f38:	ldr	r3, [fp, #-16]
   46f3c:	str	r2, [r3, #20]
   46f40:	ldr	r3, [fp, #-8]
   46f44:	add	r3, r3, #4
   46f48:	str	r3, [fp, #-8]
   46f4c:	ldr	r3, [fp, #-12]
   46f50:	sub	r2, r3, #1
   46f54:	str	r2, [fp, #-12]
   46f58:	cmp	r3, #0
   46f5c:	bne	46ea8 <flatcc_json_printer_float_vector_field@@Base+0x17c>
   46f60:	ldr	r3, [fp, #-16]
   46f64:	ldrb	r3, [r3, #25]
   46f68:	cmp	r3, #0
   46f6c:	beq	46fa8 <flatcc_json_printer_float_vector_field@@Base+0x27c>
   46f70:	ldr	r3, [fp, #-16]
   46f74:	ldr	r3, [r3, #20]
   46f78:	add	r1, r3, #1
   46f7c:	ldr	r2, [fp, #-16]
   46f80:	str	r1, [r2, #20]
   46f84:	mov	r2, #10
   46f88:	strb	r2, [r3]
   46f8c:	ldr	r3, [fp, #-16]
   46f90:	ldr	r3, [r3, #32]
   46f94:	sub	r2, r3, #1
   46f98:	ldr	r3, [fp, #-16]
   46f9c:	str	r2, [r3, #32]
   46fa0:	ldr	r0, [fp, #-16]
   46fa4:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   46fa8:	ldr	r3, [fp, #-16]
   46fac:	ldr	r3, [r3, #20]
   46fb0:	add	r1, r3, #1
   46fb4:	ldr	r2, [fp, #-16]
   46fb8:	str	r1, [r2, #20]
   46fbc:	mov	r2, #93	; 0x5d
   46fc0:	strb	r2, [r3]
   46fc4:	nop			; (mov r0, r0)
   46fc8:	sub	sp, fp, #4
   46fcc:	pop	{fp, pc}

00046fd0 <flatcc_json_printer_double_vector_field@@Base>:
   46fd0:	push	{fp, lr}
   46fd4:	add	fp, sp, #4
   46fd8:	sub	sp, sp, #24
   46fdc:	str	r0, [fp, #-16]
   46fe0:	str	r1, [fp, #-20]	; 0xffffffec
   46fe4:	str	r2, [fp, #-24]	; 0xffffffe8
   46fe8:	str	r3, [fp, #-28]	; 0xffffffe4
   46fec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   46ff0:	ldr	r0, [fp, #-20]	; 0xffffffec
   46ff4:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   46ff8:	str	r0, [fp, #-8]
   46ffc:	ldr	r3, [fp, #-8]
   47000:	cmp	r3, #0
   47004:	beq	47260 <flatcc_json_printer_double_vector_field@@Base+0x290>
   47008:	ldr	r3, [fp, #-20]	; 0xffffffec
   4700c:	ldr	r3, [r3, #16]
   47010:	add	r1, r3, #1
   47014:	ldr	r2, [fp, #-20]	; 0xffffffec
   47018:	str	r1, [r2, #16]
   4701c:	cmp	r3, #0
   47020:	beq	47040 <flatcc_json_printer_double_vector_field@@Base+0x70>
   47024:	ldr	r3, [fp, #-16]
   47028:	ldr	r3, [r3, #20]
   4702c:	add	r1, r3, #1
   47030:	ldr	r2, [fp, #-16]
   47034:	str	r1, [r2, #20]
   47038:	mov	r2, #44	; 0x2c
   4703c:	strb	r2, [r3]
   47040:	ldr	r0, [fp, #-8]
   47044:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   47048:	str	r0, [fp, #-8]
   4704c:	ldr	r0, [fp, #-8]
   47050:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   47054:	str	r0, [fp, #-12]
   47058:	ldr	r3, [fp, #-8]
   4705c:	add	r3, r3, #4
   47060:	str	r3, [fp, #-8]
   47064:	ldr	r3, [fp, #4]
   47068:	mov	r2, r3
   4706c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47070:	ldr	r0, [fp, #-16]
   47074:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   47078:	ldr	r3, [fp, #-16]
   4707c:	ldr	r3, [r3, #32]
   47080:	add	r2, r3, #1
   47084:	ldr	r3, [fp, #-16]
   47088:	str	r2, [r3, #32]
   4708c:	ldr	r3, [fp, #-16]
   47090:	ldr	r3, [r3, #20]
   47094:	add	r1, r3, #1
   47098:	ldr	r2, [fp, #-16]
   4709c:	str	r1, [r2, #20]
   470a0:	mov	r2, #91	; 0x5b
   470a4:	strb	r2, [r3]
   470a8:	ldr	r3, [fp, #-12]
   470ac:	cmp	r3, #0
   470b0:	beq	471e8 <flatcc_json_printer_double_vector_field@@Base+0x218>
   470b4:	ldr	r3, [fp, #-16]
   470b8:	ldrb	r3, [r3, #25]
   470bc:	cmp	r3, #0
   470c0:	beq	470ec <flatcc_json_printer_double_vector_field@@Base+0x11c>
   470c4:	ldr	r3, [fp, #-16]
   470c8:	ldr	r3, [r3, #20]
   470cc:	add	r1, r3, #1
   470d0:	ldr	r2, [fp, #-16]
   470d4:	str	r1, [r2, #20]
   470d8:	mov	r2, #10
   470dc:	strb	r2, [r3]
   470e0:	ldr	r0, [fp, #-16]
   470e4:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   470e8:	b	470f4 <flatcc_json_printer_double_vector_field@@Base+0x124>
   470ec:	ldr	r0, [fp, #-16]
   470f0:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   470f4:	ldr	r0, [fp, #-8]
   470f8:	bl	3d270 <flatcc_json_parser_struct_as_root@@Base+0x494>
   470fc:	vmov.f64	d7, d0
   47100:	ldr	r3, [fp, #-16]
   47104:	ldr	r3, [r3, #20]
   47108:	mov	r0, r3
   4710c:	vmov.f64	d0, d7
   47110:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   47114:	mov	r2, r0
   47118:	ldr	r3, [fp, #-16]
   4711c:	ldr	r3, [r3, #20]
   47120:	add	r2, r3, r2
   47124:	ldr	r3, [fp, #-16]
   47128:	str	r2, [r3, #20]
   4712c:	ldr	r3, [fp, #-8]
   47130:	add	r3, r3, #8
   47134:	str	r3, [fp, #-8]
   47138:	ldr	r3, [fp, #-12]
   4713c:	sub	r3, r3, #1
   47140:	str	r3, [fp, #-12]
   47144:	b	471e8 <flatcc_json_printer_double_vector_field@@Base+0x218>
   47148:	ldr	r3, [fp, #-16]
   4714c:	ldr	r3, [r3, #20]
   47150:	add	r1, r3, #1
   47154:	ldr	r2, [fp, #-16]
   47158:	str	r1, [r2, #20]
   4715c:	mov	r2, #44	; 0x2c
   47160:	strb	r2, [r3]
   47164:	ldr	r3, [fp, #-16]
   47168:	ldrb	r3, [r3, #25]
   4716c:	cmp	r3, #0
   47170:	beq	4719c <flatcc_json_printer_double_vector_field@@Base+0x1cc>
   47174:	ldr	r3, [fp, #-16]
   47178:	ldr	r3, [r3, #20]
   4717c:	add	r1, r3, #1
   47180:	ldr	r2, [fp, #-16]
   47184:	str	r1, [r2, #20]
   47188:	mov	r2, #10
   4718c:	strb	r2, [r3]
   47190:	ldr	r0, [fp, #-16]
   47194:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47198:	b	471a4 <flatcc_json_printer_double_vector_field@@Base+0x1d4>
   4719c:	ldr	r0, [fp, #-16]
   471a0:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   471a4:	ldr	r0, [fp, #-8]
   471a8:	bl	3d270 <flatcc_json_parser_struct_as_root@@Base+0x494>
   471ac:	vmov.f64	d7, d0
   471b0:	ldr	r3, [fp, #-16]
   471b4:	ldr	r3, [r3, #20]
   471b8:	mov	r0, r3
   471bc:	vmov.f64	d0, d7
   471c0:	bl	40760 <flatcc_json_parser_struct_as_root@@Base+0x3984>
   471c4:	mov	r2, r0
   471c8:	ldr	r3, [fp, #-16]
   471cc:	ldr	r3, [r3, #20]
   471d0:	add	r2, r3, r2
   471d4:	ldr	r3, [fp, #-16]
   471d8:	str	r2, [r3, #20]
   471dc:	ldr	r3, [fp, #-8]
   471e0:	add	r3, r3, #8
   471e4:	str	r3, [fp, #-8]
   471e8:	ldr	r3, [fp, #-12]
   471ec:	sub	r2, r3, #1
   471f0:	str	r2, [fp, #-12]
   471f4:	cmp	r3, #0
   471f8:	bne	47148 <flatcc_json_printer_double_vector_field@@Base+0x178>
   471fc:	ldr	r3, [fp, #-16]
   47200:	ldrb	r3, [r3, #25]
   47204:	cmp	r3, #0
   47208:	beq	47244 <flatcc_json_printer_double_vector_field@@Base+0x274>
   4720c:	ldr	r3, [fp, #-16]
   47210:	ldr	r3, [r3, #20]
   47214:	add	r1, r3, #1
   47218:	ldr	r2, [fp, #-16]
   4721c:	str	r1, [r2, #20]
   47220:	mov	r2, #10
   47224:	strb	r2, [r3]
   47228:	ldr	r3, [fp, #-16]
   4722c:	ldr	r3, [r3, #32]
   47230:	sub	r2, r3, #1
   47234:	ldr	r3, [fp, #-16]
   47238:	str	r2, [r3, #32]
   4723c:	ldr	r0, [fp, #-16]
   47240:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47244:	ldr	r3, [fp, #-16]
   47248:	ldr	r3, [r3, #20]
   4724c:	add	r1, r3, #1
   47250:	ldr	r2, [fp, #-16]
   47254:	str	r1, [r2, #20]
   47258:	mov	r2, #93	; 0x5d
   4725c:	strb	r2, [r3]
   47260:	nop			; (mov r0, r0)
   47264:	sub	sp, fp, #4
   47268:	pop	{fp, pc}

0004726c <flatcc_json_printer_utype_enum_vector_field@@Base>:
   4726c:	push	{fp, lr}
   47270:	add	fp, sp, #4
   47274:	sub	sp, sp, #32
   47278:	str	r0, [fp, #-16]
   4727c:	str	r1, [fp, #-20]	; 0xffffffec
   47280:	str	r2, [fp, #-24]	; 0xffffffe8
   47284:	str	r3, [fp, #-28]	; 0xffffffe4
   47288:	ldr	r3, [fp, #-16]
   4728c:	ldrb	r3, [r3, #27]
   47290:	cmp	r3, #0
   47294:	beq	472b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x4c>
   47298:	ldr	r3, [fp, #4]
   4729c:	str	r3, [sp]
   472a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   472a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   472a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   472ac:	ldr	r0, [fp, #-16]
   472b0:	bl	45304 <flatcc_json_printer_utype_vector_field@@Base>
   472b4:	b	474fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x290>
   472b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   472bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   472c0:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   472c4:	str	r0, [fp, #-8]
   472c8:	ldr	r3, [fp, #-8]
   472cc:	cmp	r3, #0
   472d0:	beq	474fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x290>
   472d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   472d8:	ldr	r3, [r3, #16]
   472dc:	add	r1, r3, #1
   472e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   472e4:	str	r1, [r2, #16]
   472e8:	cmp	r3, #0
   472ec:	beq	4730c <flatcc_json_printer_utype_enum_vector_field@@Base+0xa0>
   472f0:	ldr	r3, [fp, #-16]
   472f4:	ldr	r3, [r3, #20]
   472f8:	add	r1, r3, #1
   472fc:	ldr	r2, [fp, #-16]
   47300:	str	r1, [r2, #20]
   47304:	mov	r2, #44	; 0x2c
   47308:	strb	r2, [r3]
   4730c:	ldr	r0, [fp, #-8]
   47310:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   47314:	str	r0, [fp, #-8]
   47318:	ldr	r0, [fp, #-8]
   4731c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   47320:	str	r0, [fp, #-12]
   47324:	ldr	r3, [fp, #-8]
   47328:	add	r3, r3, #4
   4732c:	str	r3, [fp, #-8]
   47330:	ldr	r3, [fp, #4]
   47334:	mov	r2, r3
   47338:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4733c:	ldr	r0, [fp, #-16]
   47340:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   47344:	ldr	r3, [fp, #-16]
   47348:	ldr	r3, [r3, #32]
   4734c:	add	r2, r3, #1
   47350:	ldr	r3, [fp, #-16]
   47354:	str	r2, [r3, #32]
   47358:	ldr	r3, [fp, #-16]
   4735c:	ldr	r3, [r3, #20]
   47360:	add	r1, r3, #1
   47364:	ldr	r2, [fp, #-16]
   47368:	str	r1, [r2, #20]
   4736c:	mov	r2, #91	; 0x5b
   47370:	strb	r2, [r3]
   47374:	ldr	r3, [fp, #-12]
   47378:	cmp	r3, #0
   4737c:	beq	47484 <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   47380:	ldr	r3, [fp, #-16]
   47384:	ldrb	r3, [r3, #25]
   47388:	cmp	r3, #0
   4738c:	beq	473b8 <flatcc_json_printer_utype_enum_vector_field@@Base+0x14c>
   47390:	ldr	r3, [fp, #-16]
   47394:	ldr	r3, [r3, #20]
   47398:	add	r1, r3, #1
   4739c:	ldr	r2, [fp, #-16]
   473a0:	str	r1, [r2, #20]
   473a4:	mov	r2, #10
   473a8:	strb	r2, [r3]
   473ac:	ldr	r0, [fp, #-16]
   473b0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   473b4:	b	473c0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x154>
   473b8:	ldr	r0, [fp, #-16]
   473bc:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   473c0:	ldr	r0, [fp, #-8]
   473c4:	bl	3d420 <flatcc_json_parser_struct_as_root@@Base+0x644>
   473c8:	mov	r3, r0
   473cc:	mov	r2, r3
   473d0:	ldr	r3, [fp, #8]
   473d4:	mov	r1, r2
   473d8:	ldr	r0, [fp, #-16]
   473dc:	blx	r3
   473e0:	ldr	r3, [fp, #-8]
   473e4:	add	r3, r3, #1
   473e8:	str	r3, [fp, #-8]
   473ec:	ldr	r3, [fp, #-12]
   473f0:	sub	r3, r3, #1
   473f4:	str	r3, [fp, #-12]
   473f8:	b	47484 <flatcc_json_printer_utype_enum_vector_field@@Base+0x218>
   473fc:	ldr	r3, [fp, #-16]
   47400:	ldr	r3, [r3, #20]
   47404:	add	r1, r3, #1
   47408:	ldr	r2, [fp, #-16]
   4740c:	str	r1, [r2, #20]
   47410:	mov	r2, #44	; 0x2c
   47414:	strb	r2, [r3]
   47418:	ldr	r3, [fp, #-16]
   4741c:	ldrb	r3, [r3, #25]
   47420:	cmp	r3, #0
   47424:	beq	47450 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1e4>
   47428:	ldr	r3, [fp, #-16]
   4742c:	ldr	r3, [r3, #20]
   47430:	add	r1, r3, #1
   47434:	ldr	r2, [fp, #-16]
   47438:	str	r1, [r2, #20]
   4743c:	mov	r2, #10
   47440:	strb	r2, [r3]
   47444:	ldr	r0, [fp, #-16]
   47448:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4744c:	b	47458 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   47450:	ldr	r0, [fp, #-16]
   47454:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47458:	ldr	r0, [fp, #-8]
   4745c:	bl	3d420 <flatcc_json_parser_struct_as_root@@Base+0x644>
   47460:	mov	r3, r0
   47464:	mov	r2, r3
   47468:	ldr	r3, [fp, #8]
   4746c:	mov	r1, r2
   47470:	ldr	r0, [fp, #-16]
   47474:	blx	r3
   47478:	ldr	r3, [fp, #-8]
   4747c:	add	r3, r3, #1
   47480:	str	r3, [fp, #-8]
   47484:	ldr	r3, [fp, #-12]
   47488:	sub	r2, r3, #1
   4748c:	str	r2, [fp, #-12]
   47490:	cmp	r3, #0
   47494:	bne	473fc <flatcc_json_printer_utype_enum_vector_field@@Base+0x190>
   47498:	ldr	r3, [fp, #-16]
   4749c:	ldrb	r3, [r3, #25]
   474a0:	cmp	r3, #0
   474a4:	beq	474e0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   474a8:	ldr	r3, [fp, #-16]
   474ac:	ldr	r3, [r3, #20]
   474b0:	add	r1, r3, #1
   474b4:	ldr	r2, [fp, #-16]
   474b8:	str	r1, [r2, #20]
   474bc:	mov	r2, #10
   474c0:	strb	r2, [r3]
   474c4:	ldr	r3, [fp, #-16]
   474c8:	ldr	r3, [r3, #32]
   474cc:	sub	r2, r3, #1
   474d0:	ldr	r3, [fp, #-16]
   474d4:	str	r2, [r3, #32]
   474d8:	ldr	r0, [fp, #-16]
   474dc:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   474e0:	ldr	r3, [fp, #-16]
   474e4:	ldr	r3, [r3, #20]
   474e8:	add	r1, r3, #1
   474ec:	ldr	r2, [fp, #-16]
   474f0:	str	r1, [r2, #20]
   474f4:	mov	r2, #93	; 0x5d
   474f8:	strb	r2, [r3]
   474fc:	sub	sp, fp, #4
   47500:	pop	{fp, pc}

00047504 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   47504:	push	{fp, lr}
   47508:	add	fp, sp, #4
   4750c:	sub	sp, sp, #32
   47510:	str	r0, [fp, #-16]
   47514:	str	r1, [fp, #-20]	; 0xffffffec
   47518:	str	r2, [fp, #-24]	; 0xffffffe8
   4751c:	str	r3, [fp, #-28]	; 0xffffffe4
   47520:	ldr	r3, [fp, #-16]
   47524:	ldrb	r3, [r3, #27]
   47528:	cmp	r3, #0
   4752c:	beq	47550 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x4c>
   47530:	ldr	r3, [fp, #4]
   47534:	str	r3, [sp]
   47538:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4753c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47540:	ldr	r1, [fp, #-20]	; 0xffffffec
   47544:	ldr	r0, [fp, #-16]
   47548:	bl	455a8 <flatcc_json_printer_uint8_vector_field@@Base>
   4754c:	b	47794 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x290>
   47550:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47554:	ldr	r0, [fp, #-20]	; 0xffffffec
   47558:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   4755c:	str	r0, [fp, #-8]
   47560:	ldr	r3, [fp, #-8]
   47564:	cmp	r3, #0
   47568:	beq	47794 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x290>
   4756c:	ldr	r3, [fp, #-20]	; 0xffffffec
   47570:	ldr	r3, [r3, #16]
   47574:	add	r1, r3, #1
   47578:	ldr	r2, [fp, #-20]	; 0xffffffec
   4757c:	str	r1, [r2, #16]
   47580:	cmp	r3, #0
   47584:	beq	475a4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0xa0>
   47588:	ldr	r3, [fp, #-16]
   4758c:	ldr	r3, [r3, #20]
   47590:	add	r1, r3, #1
   47594:	ldr	r2, [fp, #-16]
   47598:	str	r1, [r2, #20]
   4759c:	mov	r2, #44	; 0x2c
   475a0:	strb	r2, [r3]
   475a4:	ldr	r0, [fp, #-8]
   475a8:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   475ac:	str	r0, [fp, #-8]
   475b0:	ldr	r0, [fp, #-8]
   475b4:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   475b8:	str	r0, [fp, #-12]
   475bc:	ldr	r3, [fp, #-8]
   475c0:	add	r3, r3, #4
   475c4:	str	r3, [fp, #-8]
   475c8:	ldr	r3, [fp, #4]
   475cc:	mov	r2, r3
   475d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   475d4:	ldr	r0, [fp, #-16]
   475d8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   475dc:	ldr	r3, [fp, #-16]
   475e0:	ldr	r3, [r3, #32]
   475e4:	add	r2, r3, #1
   475e8:	ldr	r3, [fp, #-16]
   475ec:	str	r2, [r3, #32]
   475f0:	ldr	r3, [fp, #-16]
   475f4:	ldr	r3, [r3, #20]
   475f8:	add	r1, r3, #1
   475fc:	ldr	r2, [fp, #-16]
   47600:	str	r1, [r2, #20]
   47604:	mov	r2, #91	; 0x5b
   47608:	strb	r2, [r3]
   4760c:	ldr	r3, [fp, #-12]
   47610:	cmp	r3, #0
   47614:	beq	4771c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   47618:	ldr	r3, [fp, #-16]
   4761c:	ldrb	r3, [r3, #25]
   47620:	cmp	r3, #0
   47624:	beq	47650 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x14c>
   47628:	ldr	r3, [fp, #-16]
   4762c:	ldr	r3, [r3, #20]
   47630:	add	r1, r3, #1
   47634:	ldr	r2, [fp, #-16]
   47638:	str	r1, [r2, #20]
   4763c:	mov	r2, #10
   47640:	strb	r2, [r3]
   47644:	ldr	r0, [fp, #-16]
   47648:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4764c:	b	47658 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x154>
   47650:	ldr	r0, [fp, #-16]
   47654:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47658:	ldr	r0, [fp, #-8]
   4765c:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   47660:	mov	r3, r0
   47664:	mov	r2, r3
   47668:	ldr	r3, [fp, #8]
   4766c:	mov	r1, r2
   47670:	ldr	r0, [fp, #-16]
   47674:	blx	r3
   47678:	ldr	r3, [fp, #-8]
   4767c:	add	r3, r3, #1
   47680:	str	r3, [fp, #-8]
   47684:	ldr	r3, [fp, #-12]
   47688:	sub	r3, r3, #1
   4768c:	str	r3, [fp, #-12]
   47690:	b	4771c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x218>
   47694:	ldr	r3, [fp, #-16]
   47698:	ldr	r3, [r3, #20]
   4769c:	add	r1, r3, #1
   476a0:	ldr	r2, [fp, #-16]
   476a4:	str	r1, [r2, #20]
   476a8:	mov	r2, #44	; 0x2c
   476ac:	strb	r2, [r3]
   476b0:	ldr	r3, [fp, #-16]
   476b4:	ldrb	r3, [r3, #25]
   476b8:	cmp	r3, #0
   476bc:	beq	476e8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1e4>
   476c0:	ldr	r3, [fp, #-16]
   476c4:	ldr	r3, [r3, #20]
   476c8:	add	r1, r3, #1
   476cc:	ldr	r2, [fp, #-16]
   476d0:	str	r1, [r2, #20]
   476d4:	mov	r2, #10
   476d8:	strb	r2, [r3]
   476dc:	ldr	r0, [fp, #-16]
   476e0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   476e4:	b	476f0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   476e8:	ldr	r0, [fp, #-16]
   476ec:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   476f0:	ldr	r0, [fp, #-8]
   476f4:	bl	3cf28 <flatcc_json_parser_struct_as_root@@Base+0x14c>
   476f8:	mov	r3, r0
   476fc:	mov	r2, r3
   47700:	ldr	r3, [fp, #8]
   47704:	mov	r1, r2
   47708:	ldr	r0, [fp, #-16]
   4770c:	blx	r3
   47710:	ldr	r3, [fp, #-8]
   47714:	add	r3, r3, #1
   47718:	str	r3, [fp, #-8]
   4771c:	ldr	r3, [fp, #-12]
   47720:	sub	r2, r3, #1
   47724:	str	r2, [fp, #-12]
   47728:	cmp	r3, #0
   4772c:	bne	47694 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x190>
   47730:	ldr	r3, [fp, #-16]
   47734:	ldrb	r3, [r3, #25]
   47738:	cmp	r3, #0
   4773c:	beq	47778 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   47740:	ldr	r3, [fp, #-16]
   47744:	ldr	r3, [r3, #20]
   47748:	add	r1, r3, #1
   4774c:	ldr	r2, [fp, #-16]
   47750:	str	r1, [r2, #20]
   47754:	mov	r2, #10
   47758:	strb	r2, [r3]
   4775c:	ldr	r3, [fp, #-16]
   47760:	ldr	r3, [r3, #32]
   47764:	sub	r2, r3, #1
   47768:	ldr	r3, [fp, #-16]
   4776c:	str	r2, [r3, #32]
   47770:	ldr	r0, [fp, #-16]
   47774:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47778:	ldr	r3, [fp, #-16]
   4777c:	ldr	r3, [r3, #20]
   47780:	add	r1, r3, #1
   47784:	ldr	r2, [fp, #-16]
   47788:	str	r1, [r2, #20]
   4778c:	mov	r2, #93	; 0x5d
   47790:	strb	r2, [r3]
   47794:	sub	sp, fp, #4
   47798:	pop	{fp, pc}

0004779c <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   4779c:	push	{fp, lr}
   477a0:	add	fp, sp, #4
   477a4:	sub	sp, sp, #32
   477a8:	str	r0, [fp, #-16]
   477ac:	str	r1, [fp, #-20]	; 0xffffffec
   477b0:	str	r2, [fp, #-24]	; 0xffffffe8
   477b4:	str	r3, [fp, #-28]	; 0xffffffe4
   477b8:	ldr	r3, [fp, #-16]
   477bc:	ldrb	r3, [r3, #27]
   477c0:	cmp	r3, #0
   477c4:	beq	477e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x4c>
   477c8:	ldr	r3, [fp, #4]
   477cc:	str	r3, [sp]
   477d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   477d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   477d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   477dc:	ldr	r0, [fp, #-16]
   477e0:	bl	4584c <flatcc_json_printer_uint16_vector_field@@Base>
   477e4:	b	47a2c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x290>
   477e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   477ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   477f0:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   477f4:	str	r0, [fp, #-8]
   477f8:	ldr	r3, [fp, #-8]
   477fc:	cmp	r3, #0
   47800:	beq	47a2c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x290>
   47804:	ldr	r3, [fp, #-20]	; 0xffffffec
   47808:	ldr	r3, [r3, #16]
   4780c:	add	r1, r3, #1
   47810:	ldr	r2, [fp, #-20]	; 0xffffffec
   47814:	str	r1, [r2, #16]
   47818:	cmp	r3, #0
   4781c:	beq	4783c <flatcc_json_printer_uint16_enum_vector_field@@Base+0xa0>
   47820:	ldr	r3, [fp, #-16]
   47824:	ldr	r3, [r3, #20]
   47828:	add	r1, r3, #1
   4782c:	ldr	r2, [fp, #-16]
   47830:	str	r1, [r2, #20]
   47834:	mov	r2, #44	; 0x2c
   47838:	strb	r2, [r3]
   4783c:	ldr	r0, [fp, #-8]
   47840:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   47844:	str	r0, [fp, #-8]
   47848:	ldr	r0, [fp, #-8]
   4784c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   47850:	str	r0, [fp, #-12]
   47854:	ldr	r3, [fp, #-8]
   47858:	add	r3, r3, #4
   4785c:	str	r3, [fp, #-8]
   47860:	ldr	r3, [fp, #4]
   47864:	mov	r2, r3
   47868:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4786c:	ldr	r0, [fp, #-16]
   47870:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   47874:	ldr	r3, [fp, #-16]
   47878:	ldr	r3, [r3, #32]
   4787c:	add	r2, r3, #1
   47880:	ldr	r3, [fp, #-16]
   47884:	str	r2, [r3, #32]
   47888:	ldr	r3, [fp, #-16]
   4788c:	ldr	r3, [r3, #20]
   47890:	add	r1, r3, #1
   47894:	ldr	r2, [fp, #-16]
   47898:	str	r1, [r2, #20]
   4789c:	mov	r2, #91	; 0x5b
   478a0:	strb	r2, [r3]
   478a4:	ldr	r3, [fp, #-12]
   478a8:	cmp	r3, #0
   478ac:	beq	479b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   478b0:	ldr	r3, [fp, #-16]
   478b4:	ldrb	r3, [r3, #25]
   478b8:	cmp	r3, #0
   478bc:	beq	478e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x14c>
   478c0:	ldr	r3, [fp, #-16]
   478c4:	ldr	r3, [r3, #20]
   478c8:	add	r1, r3, #1
   478cc:	ldr	r2, [fp, #-16]
   478d0:	str	r1, [r2, #20]
   478d4:	mov	r2, #10
   478d8:	strb	r2, [r3]
   478dc:	ldr	r0, [fp, #-16]
   478e0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   478e4:	b	478f0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x154>
   478e8:	ldr	r0, [fp, #-16]
   478ec:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   478f0:	ldr	r0, [fp, #-8]
   478f4:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   478f8:	mov	r3, r0
   478fc:	mov	r2, r3
   47900:	ldr	r3, [fp, #8]
   47904:	mov	r1, r2
   47908:	ldr	r0, [fp, #-16]
   4790c:	blx	r3
   47910:	ldr	r3, [fp, #-8]
   47914:	add	r3, r3, #2
   47918:	str	r3, [fp, #-8]
   4791c:	ldr	r3, [fp, #-12]
   47920:	sub	r3, r3, #1
   47924:	str	r3, [fp, #-12]
   47928:	b	479b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x218>
   4792c:	ldr	r3, [fp, #-16]
   47930:	ldr	r3, [r3, #20]
   47934:	add	r1, r3, #1
   47938:	ldr	r2, [fp, #-16]
   4793c:	str	r1, [r2, #20]
   47940:	mov	r2, #44	; 0x2c
   47944:	strb	r2, [r3]
   47948:	ldr	r3, [fp, #-16]
   4794c:	ldrb	r3, [r3, #25]
   47950:	cmp	r3, #0
   47954:	beq	47980 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1e4>
   47958:	ldr	r3, [fp, #-16]
   4795c:	ldr	r3, [r3, #20]
   47960:	add	r1, r3, #1
   47964:	ldr	r2, [fp, #-16]
   47968:	str	r1, [r2, #20]
   4796c:	mov	r2, #10
   47970:	strb	r2, [r3]
   47974:	ldr	r0, [fp, #-16]
   47978:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4797c:	b	47988 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   47980:	ldr	r0, [fp, #-16]
   47984:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47988:	ldr	r0, [fp, #-8]
   4798c:	bl	3cf80 <flatcc_json_parser_struct_as_root@@Base+0x1a4>
   47990:	mov	r3, r0
   47994:	mov	r2, r3
   47998:	ldr	r3, [fp, #8]
   4799c:	mov	r1, r2
   479a0:	ldr	r0, [fp, #-16]
   479a4:	blx	r3
   479a8:	ldr	r3, [fp, #-8]
   479ac:	add	r3, r3, #2
   479b0:	str	r3, [fp, #-8]
   479b4:	ldr	r3, [fp, #-12]
   479b8:	sub	r2, r3, #1
   479bc:	str	r2, [fp, #-12]
   479c0:	cmp	r3, #0
   479c4:	bne	4792c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x190>
   479c8:	ldr	r3, [fp, #-16]
   479cc:	ldrb	r3, [r3, #25]
   479d0:	cmp	r3, #0
   479d4:	beq	47a10 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   479d8:	ldr	r3, [fp, #-16]
   479dc:	ldr	r3, [r3, #20]
   479e0:	add	r1, r3, #1
   479e4:	ldr	r2, [fp, #-16]
   479e8:	str	r1, [r2, #20]
   479ec:	mov	r2, #10
   479f0:	strb	r2, [r3]
   479f4:	ldr	r3, [fp, #-16]
   479f8:	ldr	r3, [r3, #32]
   479fc:	sub	r2, r3, #1
   47a00:	ldr	r3, [fp, #-16]
   47a04:	str	r2, [r3, #32]
   47a08:	ldr	r0, [fp, #-16]
   47a0c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47a10:	ldr	r3, [fp, #-16]
   47a14:	ldr	r3, [r3, #20]
   47a18:	add	r1, r3, #1
   47a1c:	ldr	r2, [fp, #-16]
   47a20:	str	r1, [r2, #20]
   47a24:	mov	r2, #93	; 0x5d
   47a28:	strb	r2, [r3]
   47a2c:	sub	sp, fp, #4
   47a30:	pop	{fp, pc}

00047a34 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   47a34:	push	{fp, lr}
   47a38:	add	fp, sp, #4
   47a3c:	sub	sp, sp, #32
   47a40:	str	r0, [fp, #-16]
   47a44:	str	r1, [fp, #-20]	; 0xffffffec
   47a48:	str	r2, [fp, #-24]	; 0xffffffe8
   47a4c:	str	r3, [fp, #-28]	; 0xffffffe4
   47a50:	ldr	r3, [fp, #-16]
   47a54:	ldrb	r3, [r3, #27]
   47a58:	cmp	r3, #0
   47a5c:	beq	47a80 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x4c>
   47a60:	ldr	r3, [fp, #4]
   47a64:	str	r3, [sp]
   47a68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47a70:	ldr	r1, [fp, #-20]	; 0xffffffec
   47a74:	ldr	r0, [fp, #-16]
   47a78:	bl	45af0 <flatcc_json_printer_uint32_vector_field@@Base>
   47a7c:	b	47cbc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   47a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47a84:	ldr	r0, [fp, #-20]	; 0xffffffec
   47a88:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   47a8c:	str	r0, [fp, #-8]
   47a90:	ldr	r3, [fp, #-8]
   47a94:	cmp	r3, #0
   47a98:	beq	47cbc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x288>
   47a9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   47aa0:	ldr	r3, [r3, #16]
   47aa4:	add	r1, r3, #1
   47aa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   47aac:	str	r1, [r2, #16]
   47ab0:	cmp	r3, #0
   47ab4:	beq	47ad4 <flatcc_json_printer_uint32_enum_vector_field@@Base+0xa0>
   47ab8:	ldr	r3, [fp, #-16]
   47abc:	ldr	r3, [r3, #20]
   47ac0:	add	r1, r3, #1
   47ac4:	ldr	r2, [fp, #-16]
   47ac8:	str	r1, [r2, #20]
   47acc:	mov	r2, #44	; 0x2c
   47ad0:	strb	r2, [r3]
   47ad4:	ldr	r0, [fp, #-8]
   47ad8:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   47adc:	str	r0, [fp, #-8]
   47ae0:	ldr	r0, [fp, #-8]
   47ae4:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   47ae8:	str	r0, [fp, #-12]
   47aec:	ldr	r3, [fp, #-8]
   47af0:	add	r3, r3, #4
   47af4:	str	r3, [fp, #-8]
   47af8:	ldr	r3, [fp, #4]
   47afc:	mov	r2, r3
   47b00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47b04:	ldr	r0, [fp, #-16]
   47b08:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   47b0c:	ldr	r3, [fp, #-16]
   47b10:	ldr	r3, [r3, #32]
   47b14:	add	r2, r3, #1
   47b18:	ldr	r3, [fp, #-16]
   47b1c:	str	r2, [r3, #32]
   47b20:	ldr	r3, [fp, #-16]
   47b24:	ldr	r3, [r3, #20]
   47b28:	add	r1, r3, #1
   47b2c:	ldr	r2, [fp, #-16]
   47b30:	str	r1, [r2, #20]
   47b34:	mov	r2, #91	; 0x5b
   47b38:	strb	r2, [r3]
   47b3c:	ldr	r3, [fp, #-12]
   47b40:	cmp	r3, #0
   47b44:	beq	47c44 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   47b48:	ldr	r3, [fp, #-16]
   47b4c:	ldrb	r3, [r3, #25]
   47b50:	cmp	r3, #0
   47b54:	beq	47b80 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x14c>
   47b58:	ldr	r3, [fp, #-16]
   47b5c:	ldr	r3, [r3, #20]
   47b60:	add	r1, r3, #1
   47b64:	ldr	r2, [fp, #-16]
   47b68:	str	r1, [r2, #20]
   47b6c:	mov	r2, #10
   47b70:	strb	r2, [r3]
   47b74:	ldr	r0, [fp, #-16]
   47b78:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47b7c:	b	47b88 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x154>
   47b80:	ldr	r0, [fp, #-16]
   47b84:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47b88:	ldr	r0, [fp, #-8]
   47b8c:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   47b90:	mov	r2, r0
   47b94:	ldr	r3, [fp, #8]
   47b98:	mov	r1, r2
   47b9c:	ldr	r0, [fp, #-16]
   47ba0:	blx	r3
   47ba4:	ldr	r3, [fp, #-8]
   47ba8:	add	r3, r3, #4
   47bac:	str	r3, [fp, #-8]
   47bb0:	ldr	r3, [fp, #-12]
   47bb4:	sub	r3, r3, #1
   47bb8:	str	r3, [fp, #-12]
   47bbc:	b	47c44 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x210>
   47bc0:	ldr	r3, [fp, #-16]
   47bc4:	ldr	r3, [r3, #20]
   47bc8:	add	r1, r3, #1
   47bcc:	ldr	r2, [fp, #-16]
   47bd0:	str	r1, [r2, #20]
   47bd4:	mov	r2, #44	; 0x2c
   47bd8:	strb	r2, [r3]
   47bdc:	ldr	r3, [fp, #-16]
   47be0:	ldrb	r3, [r3, #25]
   47be4:	cmp	r3, #0
   47be8:	beq	47c14 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e0>
   47bec:	ldr	r3, [fp, #-16]
   47bf0:	ldr	r3, [r3, #20]
   47bf4:	add	r1, r3, #1
   47bf8:	ldr	r2, [fp, #-16]
   47bfc:	str	r1, [r2, #20]
   47c00:	mov	r2, #10
   47c04:	strb	r2, [r3]
   47c08:	ldr	r0, [fp, #-16]
   47c0c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47c10:	b	47c1c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1e8>
   47c14:	ldr	r0, [fp, #-16]
   47c18:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47c1c:	ldr	r0, [fp, #-8]
   47c20:	bl	3cfd4 <flatcc_json_parser_struct_as_root@@Base+0x1f8>
   47c24:	mov	r2, r0
   47c28:	ldr	r3, [fp, #8]
   47c2c:	mov	r1, r2
   47c30:	ldr	r0, [fp, #-16]
   47c34:	blx	r3
   47c38:	ldr	r3, [fp, #-8]
   47c3c:	add	r3, r3, #4
   47c40:	str	r3, [fp, #-8]
   47c44:	ldr	r3, [fp, #-12]
   47c48:	sub	r2, r3, #1
   47c4c:	str	r2, [fp, #-12]
   47c50:	cmp	r3, #0
   47c54:	bne	47bc0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x18c>
   47c58:	ldr	r3, [fp, #-16]
   47c5c:	ldrb	r3, [r3, #25]
   47c60:	cmp	r3, #0
   47c64:	beq	47ca0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x26c>
   47c68:	ldr	r3, [fp, #-16]
   47c6c:	ldr	r3, [r3, #20]
   47c70:	add	r1, r3, #1
   47c74:	ldr	r2, [fp, #-16]
   47c78:	str	r1, [r2, #20]
   47c7c:	mov	r2, #10
   47c80:	strb	r2, [r3]
   47c84:	ldr	r3, [fp, #-16]
   47c88:	ldr	r3, [r3, #32]
   47c8c:	sub	r2, r3, #1
   47c90:	ldr	r3, [fp, #-16]
   47c94:	str	r2, [r3, #32]
   47c98:	ldr	r0, [fp, #-16]
   47c9c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47ca0:	ldr	r3, [fp, #-16]
   47ca4:	ldr	r3, [r3, #20]
   47ca8:	add	r1, r3, #1
   47cac:	ldr	r2, [fp, #-16]
   47cb0:	str	r1, [r2, #20]
   47cb4:	mov	r2, #93	; 0x5d
   47cb8:	strb	r2, [r3]
   47cbc:	sub	sp, fp, #4
   47cc0:	pop	{fp, pc}

00047cc4 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   47cc4:	push	{fp, lr}
   47cc8:	add	fp, sp, #4
   47ccc:	sub	sp, sp, #32
   47cd0:	str	r0, [fp, #-16]
   47cd4:	str	r1, [fp, #-20]	; 0xffffffec
   47cd8:	str	r2, [fp, #-24]	; 0xffffffe8
   47cdc:	str	r3, [fp, #-28]	; 0xffffffe4
   47ce0:	ldr	r3, [fp, #-16]
   47ce4:	ldrb	r3, [r3, #27]
   47ce8:	cmp	r3, #0
   47cec:	beq	47d10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x4c>
   47cf0:	ldr	r3, [fp, #4]
   47cf4:	str	r3, [sp]
   47cf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47cfc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47d00:	ldr	r1, [fp, #-20]	; 0xffffffec
   47d04:	ldr	r0, [fp, #-16]
   47d08:	bl	45d8c <flatcc_json_printer_uint64_vector_field@@Base>
   47d0c:	b	47f4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   47d10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47d14:	ldr	r0, [fp, #-20]	; 0xffffffec
   47d18:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   47d1c:	str	r0, [fp, #-8]
   47d20:	ldr	r3, [fp, #-8]
   47d24:	cmp	r3, #0
   47d28:	beq	47f4c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x288>
   47d2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   47d30:	ldr	r3, [r3, #16]
   47d34:	add	r1, r3, #1
   47d38:	ldr	r2, [fp, #-20]	; 0xffffffec
   47d3c:	str	r1, [r2, #16]
   47d40:	cmp	r3, #0
   47d44:	beq	47d64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0xa0>
   47d48:	ldr	r3, [fp, #-16]
   47d4c:	ldr	r3, [r3, #20]
   47d50:	add	r1, r3, #1
   47d54:	ldr	r2, [fp, #-16]
   47d58:	str	r1, [r2, #20]
   47d5c:	mov	r2, #44	; 0x2c
   47d60:	strb	r2, [r3]
   47d64:	ldr	r0, [fp, #-8]
   47d68:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   47d6c:	str	r0, [fp, #-8]
   47d70:	ldr	r0, [fp, #-8]
   47d74:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   47d78:	str	r0, [fp, #-12]
   47d7c:	ldr	r3, [fp, #-8]
   47d80:	add	r3, r3, #4
   47d84:	str	r3, [fp, #-8]
   47d88:	ldr	r3, [fp, #4]
   47d8c:	mov	r2, r3
   47d90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   47d94:	ldr	r0, [fp, #-16]
   47d98:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   47d9c:	ldr	r3, [fp, #-16]
   47da0:	ldr	r3, [r3, #32]
   47da4:	add	r2, r3, #1
   47da8:	ldr	r3, [fp, #-16]
   47dac:	str	r2, [r3, #32]
   47db0:	ldr	r3, [fp, #-16]
   47db4:	ldr	r3, [r3, #20]
   47db8:	add	r1, r3, #1
   47dbc:	ldr	r2, [fp, #-16]
   47dc0:	str	r1, [r2, #20]
   47dc4:	mov	r2, #91	; 0x5b
   47dc8:	strb	r2, [r3]
   47dcc:	ldr	r3, [fp, #-12]
   47dd0:	cmp	r3, #0
   47dd4:	beq	47ed4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
   47dd8:	ldr	r3, [fp, #-16]
   47ddc:	ldrb	r3, [r3, #25]
   47de0:	cmp	r3, #0
   47de4:	beq	47e10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x14c>
   47de8:	ldr	r3, [fp, #-16]
   47dec:	ldr	r3, [r3, #20]
   47df0:	add	r1, r3, #1
   47df4:	ldr	r2, [fp, #-16]
   47df8:	str	r1, [r2, #20]
   47dfc:	mov	r2, #10
   47e00:	strb	r2, [r3]
   47e04:	ldr	r0, [fp, #-16]
   47e08:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47e0c:	b	47e18 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x154>
   47e10:	ldr	r0, [fp, #-16]
   47e14:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47e18:	ldr	r0, [fp, #-8]
   47e1c:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   47e20:	mov	r2, r0
   47e24:	mov	r3, r1
   47e28:	ldr	r1, [fp, #8]
   47e2c:	ldr	r0, [fp, #-16]
   47e30:	blx	r1
   47e34:	ldr	r3, [fp, #-8]
   47e38:	add	r3, r3, #8
   47e3c:	str	r3, [fp, #-8]
   47e40:	ldr	r3, [fp, #-12]
   47e44:	sub	r3, r3, #1
   47e48:	str	r3, [fp, #-12]
   47e4c:	b	47ed4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x210>
   47e50:	ldr	r3, [fp, #-16]
   47e54:	ldr	r3, [r3, #20]
   47e58:	add	r1, r3, #1
   47e5c:	ldr	r2, [fp, #-16]
   47e60:	str	r1, [r2, #20]
   47e64:	mov	r2, #44	; 0x2c
   47e68:	strb	r2, [r3]
   47e6c:	ldr	r3, [fp, #-16]
   47e70:	ldrb	r3, [r3, #25]
   47e74:	cmp	r3, #0
   47e78:	beq	47ea4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e0>
   47e7c:	ldr	r3, [fp, #-16]
   47e80:	ldr	r3, [r3, #20]
   47e84:	add	r1, r3, #1
   47e88:	ldr	r2, [fp, #-16]
   47e8c:	str	r1, [r2, #20]
   47e90:	mov	r2, #10
   47e94:	strb	r2, [r3]
   47e98:	ldr	r0, [fp, #-16]
   47e9c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47ea0:	b	47eac <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1e8>
   47ea4:	ldr	r0, [fp, #-16]
   47ea8:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   47eac:	ldr	r0, [fp, #-8]
   47eb0:	bl	3d02c <flatcc_json_parser_struct_as_root@@Base+0x250>
   47eb4:	mov	r2, r0
   47eb8:	mov	r3, r1
   47ebc:	ldr	r1, [fp, #8]
   47ec0:	ldr	r0, [fp, #-16]
   47ec4:	blx	r1
   47ec8:	ldr	r3, [fp, #-8]
   47ecc:	add	r3, r3, #8
   47ed0:	str	r3, [fp, #-8]
   47ed4:	ldr	r3, [fp, #-12]
   47ed8:	sub	r2, r3, #1
   47edc:	str	r2, [fp, #-12]
   47ee0:	cmp	r3, #0
   47ee4:	bne	47e50 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x18c>
   47ee8:	ldr	r3, [fp, #-16]
   47eec:	ldrb	r3, [r3, #25]
   47ef0:	cmp	r3, #0
   47ef4:	beq	47f30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x26c>
   47ef8:	ldr	r3, [fp, #-16]
   47efc:	ldr	r3, [r3, #20]
   47f00:	add	r1, r3, #1
   47f04:	ldr	r2, [fp, #-16]
   47f08:	str	r1, [r2, #20]
   47f0c:	mov	r2, #10
   47f10:	strb	r2, [r3]
   47f14:	ldr	r3, [fp, #-16]
   47f18:	ldr	r3, [r3, #32]
   47f1c:	sub	r2, r3, #1
   47f20:	ldr	r3, [fp, #-16]
   47f24:	str	r2, [r3, #32]
   47f28:	ldr	r0, [fp, #-16]
   47f2c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   47f30:	ldr	r3, [fp, #-16]
   47f34:	ldr	r3, [r3, #20]
   47f38:	add	r1, r3, #1
   47f3c:	ldr	r2, [fp, #-16]
   47f40:	str	r1, [r2, #20]
   47f44:	mov	r2, #93	; 0x5d
   47f48:	strb	r2, [r3]
   47f4c:	sub	sp, fp, #4
   47f50:	pop	{fp, pc}

00047f54 <flatcc_json_printer_int8_enum_vector_field@@Base>:
   47f54:	push	{fp, lr}
   47f58:	add	fp, sp, #4
   47f5c:	sub	sp, sp, #32
   47f60:	str	r0, [fp, #-16]
   47f64:	str	r1, [fp, #-20]	; 0xffffffec
   47f68:	str	r2, [fp, #-24]	; 0xffffffe8
   47f6c:	str	r3, [fp, #-28]	; 0xffffffe4
   47f70:	ldr	r3, [fp, #-16]
   47f74:	ldrb	r3, [r3, #27]
   47f78:	cmp	r3, #0
   47f7c:	beq	47fa0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x4c>
   47f80:	ldr	r3, [fp, #4]
   47f84:	str	r3, [sp]
   47f88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   47f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   47f90:	ldr	r1, [fp, #-20]	; 0xffffffec
   47f94:	ldr	r0, [fp, #-16]
   47f98:	bl	46018 <flatcc_json_printer_int8_vector_field@@Base>
   47f9c:	b	481e4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x290>
   47fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   47fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   47fa8:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   47fac:	str	r0, [fp, #-8]
   47fb0:	ldr	r3, [fp, #-8]
   47fb4:	cmp	r3, #0
   47fb8:	beq	481e4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x290>
   47fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   47fc0:	ldr	r3, [r3, #16]
   47fc4:	add	r1, r3, #1
   47fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   47fcc:	str	r1, [r2, #16]
   47fd0:	cmp	r3, #0
   47fd4:	beq	47ff4 <flatcc_json_printer_int8_enum_vector_field@@Base+0xa0>
   47fd8:	ldr	r3, [fp, #-16]
   47fdc:	ldr	r3, [r3, #20]
   47fe0:	add	r1, r3, #1
   47fe4:	ldr	r2, [fp, #-16]
   47fe8:	str	r1, [r2, #20]
   47fec:	mov	r2, #44	; 0x2c
   47ff0:	strb	r2, [r3]
   47ff4:	ldr	r0, [fp, #-8]
   47ff8:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   47ffc:	str	r0, [fp, #-8]
   48000:	ldr	r0, [fp, #-8]
   48004:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   48008:	str	r0, [fp, #-12]
   4800c:	ldr	r3, [fp, #-8]
   48010:	add	r3, r3, #4
   48014:	str	r3, [fp, #-8]
   48018:	ldr	r3, [fp, #4]
   4801c:	mov	r2, r3
   48020:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48024:	ldr	r0, [fp, #-16]
   48028:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   4802c:	ldr	r3, [fp, #-16]
   48030:	ldr	r3, [r3, #32]
   48034:	add	r2, r3, #1
   48038:	ldr	r3, [fp, #-16]
   4803c:	str	r2, [r3, #32]
   48040:	ldr	r3, [fp, #-16]
   48044:	ldr	r3, [r3, #20]
   48048:	add	r1, r3, #1
   4804c:	ldr	r2, [fp, #-16]
   48050:	str	r1, [r2, #20]
   48054:	mov	r2, #91	; 0x5b
   48058:	strb	r2, [r3]
   4805c:	ldr	r3, [fp, #-12]
   48060:	cmp	r3, #0
   48064:	beq	4816c <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   48068:	ldr	r3, [fp, #-16]
   4806c:	ldrb	r3, [r3, #25]
   48070:	cmp	r3, #0
   48074:	beq	480a0 <flatcc_json_printer_int8_enum_vector_field@@Base+0x14c>
   48078:	ldr	r3, [fp, #-16]
   4807c:	ldr	r3, [r3, #20]
   48080:	add	r1, r3, #1
   48084:	ldr	r2, [fp, #-16]
   48088:	str	r1, [r2, #20]
   4808c:	mov	r2, #10
   48090:	strb	r2, [r3]
   48094:	ldr	r0, [fp, #-16]
   48098:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4809c:	b	480a8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x154>
   480a0:	ldr	r0, [fp, #-16]
   480a4:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   480a8:	ldr	r0, [fp, #-8]
   480ac:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   480b0:	mov	r3, r0
   480b4:	mov	r2, r3
   480b8:	ldr	r3, [fp, #8]
   480bc:	mov	r1, r2
   480c0:	ldr	r0, [fp, #-16]
   480c4:	blx	r3
   480c8:	ldr	r3, [fp, #-8]
   480cc:	add	r3, r3, #1
   480d0:	str	r3, [fp, #-8]
   480d4:	ldr	r3, [fp, #-12]
   480d8:	sub	r3, r3, #1
   480dc:	str	r3, [fp, #-12]
   480e0:	b	4816c <flatcc_json_printer_int8_enum_vector_field@@Base+0x218>
   480e4:	ldr	r3, [fp, #-16]
   480e8:	ldr	r3, [r3, #20]
   480ec:	add	r1, r3, #1
   480f0:	ldr	r2, [fp, #-16]
   480f4:	str	r1, [r2, #20]
   480f8:	mov	r2, #44	; 0x2c
   480fc:	strb	r2, [r3]
   48100:	ldr	r3, [fp, #-16]
   48104:	ldrb	r3, [r3, #25]
   48108:	cmp	r3, #0
   4810c:	beq	48138 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1e4>
   48110:	ldr	r3, [fp, #-16]
   48114:	ldr	r3, [r3, #20]
   48118:	add	r1, r3, #1
   4811c:	ldr	r2, [fp, #-16]
   48120:	str	r1, [r2, #20]
   48124:	mov	r2, #10
   48128:	strb	r2, [r3]
   4812c:	ldr	r0, [fp, #-16]
   48130:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48134:	b	48140 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   48138:	ldr	r0, [fp, #-16]
   4813c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48140:	ldr	r0, [fp, #-8]
   48144:	bl	3d090 <flatcc_json_parser_struct_as_root@@Base+0x2b4>
   48148:	mov	r3, r0
   4814c:	mov	r2, r3
   48150:	ldr	r3, [fp, #8]
   48154:	mov	r1, r2
   48158:	ldr	r0, [fp, #-16]
   4815c:	blx	r3
   48160:	ldr	r3, [fp, #-8]
   48164:	add	r3, r3, #1
   48168:	str	r3, [fp, #-8]
   4816c:	ldr	r3, [fp, #-12]
   48170:	sub	r2, r3, #1
   48174:	str	r2, [fp, #-12]
   48178:	cmp	r3, #0
   4817c:	bne	480e4 <flatcc_json_printer_int8_enum_vector_field@@Base+0x190>
   48180:	ldr	r3, [fp, #-16]
   48184:	ldrb	r3, [r3, #25]
   48188:	cmp	r3, #0
   4818c:	beq	481c8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   48190:	ldr	r3, [fp, #-16]
   48194:	ldr	r3, [r3, #20]
   48198:	add	r1, r3, #1
   4819c:	ldr	r2, [fp, #-16]
   481a0:	str	r1, [r2, #20]
   481a4:	mov	r2, #10
   481a8:	strb	r2, [r3]
   481ac:	ldr	r3, [fp, #-16]
   481b0:	ldr	r3, [r3, #32]
   481b4:	sub	r2, r3, #1
   481b8:	ldr	r3, [fp, #-16]
   481bc:	str	r2, [r3, #32]
   481c0:	ldr	r0, [fp, #-16]
   481c4:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   481c8:	ldr	r3, [fp, #-16]
   481cc:	ldr	r3, [r3, #20]
   481d0:	add	r1, r3, #1
   481d4:	ldr	r2, [fp, #-16]
   481d8:	str	r1, [r2, #20]
   481dc:	mov	r2, #93	; 0x5d
   481e0:	strb	r2, [r3]
   481e4:	sub	sp, fp, #4
   481e8:	pop	{fp, pc}

000481ec <flatcc_json_printer_int16_enum_vector_field@@Base>:
   481ec:	push	{fp, lr}
   481f0:	add	fp, sp, #4
   481f4:	sub	sp, sp, #32
   481f8:	str	r0, [fp, #-16]
   481fc:	str	r1, [fp, #-20]	; 0xffffffec
   48200:	str	r2, [fp, #-24]	; 0xffffffe8
   48204:	str	r3, [fp, #-28]	; 0xffffffe4
   48208:	ldr	r3, [fp, #-16]
   4820c:	ldrb	r3, [r3, #27]
   48210:	cmp	r3, #0
   48214:	beq	48238 <flatcc_json_printer_int16_enum_vector_field@@Base+0x4c>
   48218:	ldr	r3, [fp, #4]
   4821c:	str	r3, [sp]
   48220:	ldr	r3, [fp, #-28]	; 0xffffffe4
   48224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48228:	ldr	r1, [fp, #-20]	; 0xffffffec
   4822c:	ldr	r0, [fp, #-16]
   48230:	bl	462bc <flatcc_json_printer_int16_vector_field@@Base>
   48234:	b	4847c <flatcc_json_printer_int16_enum_vector_field@@Base+0x290>
   48238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4823c:	ldr	r0, [fp, #-20]	; 0xffffffec
   48240:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   48244:	str	r0, [fp, #-8]
   48248:	ldr	r3, [fp, #-8]
   4824c:	cmp	r3, #0
   48250:	beq	4847c <flatcc_json_printer_int16_enum_vector_field@@Base+0x290>
   48254:	ldr	r3, [fp, #-20]	; 0xffffffec
   48258:	ldr	r3, [r3, #16]
   4825c:	add	r1, r3, #1
   48260:	ldr	r2, [fp, #-20]	; 0xffffffec
   48264:	str	r1, [r2, #16]
   48268:	cmp	r3, #0
   4826c:	beq	4828c <flatcc_json_printer_int16_enum_vector_field@@Base+0xa0>
   48270:	ldr	r3, [fp, #-16]
   48274:	ldr	r3, [r3, #20]
   48278:	add	r1, r3, #1
   4827c:	ldr	r2, [fp, #-16]
   48280:	str	r1, [r2, #20]
   48284:	mov	r2, #44	; 0x2c
   48288:	strb	r2, [r3]
   4828c:	ldr	r0, [fp, #-8]
   48290:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   48294:	str	r0, [fp, #-8]
   48298:	ldr	r0, [fp, #-8]
   4829c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   482a0:	str	r0, [fp, #-12]
   482a4:	ldr	r3, [fp, #-8]
   482a8:	add	r3, r3, #4
   482ac:	str	r3, [fp, #-8]
   482b0:	ldr	r3, [fp, #4]
   482b4:	mov	r2, r3
   482b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   482bc:	ldr	r0, [fp, #-16]
   482c0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   482c4:	ldr	r3, [fp, #-16]
   482c8:	ldr	r3, [r3, #32]
   482cc:	add	r2, r3, #1
   482d0:	ldr	r3, [fp, #-16]
   482d4:	str	r2, [r3, #32]
   482d8:	ldr	r3, [fp, #-16]
   482dc:	ldr	r3, [r3, #20]
   482e0:	add	r1, r3, #1
   482e4:	ldr	r2, [fp, #-16]
   482e8:	str	r1, [r2, #20]
   482ec:	mov	r2, #91	; 0x5b
   482f0:	strb	r2, [r3]
   482f4:	ldr	r3, [fp, #-12]
   482f8:	cmp	r3, #0
   482fc:	beq	48404 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   48300:	ldr	r3, [fp, #-16]
   48304:	ldrb	r3, [r3, #25]
   48308:	cmp	r3, #0
   4830c:	beq	48338 <flatcc_json_printer_int16_enum_vector_field@@Base+0x14c>
   48310:	ldr	r3, [fp, #-16]
   48314:	ldr	r3, [r3, #20]
   48318:	add	r1, r3, #1
   4831c:	ldr	r2, [fp, #-16]
   48320:	str	r1, [r2, #20]
   48324:	mov	r2, #10
   48328:	strb	r2, [r3]
   4832c:	ldr	r0, [fp, #-16]
   48330:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48334:	b	48340 <flatcc_json_printer_int16_enum_vector_field@@Base+0x154>
   48338:	ldr	r0, [fp, #-16]
   4833c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48340:	ldr	r0, [fp, #-8]
   48344:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   48348:	mov	r3, r0
   4834c:	mov	r2, r3
   48350:	ldr	r3, [fp, #8]
   48354:	mov	r1, r2
   48358:	ldr	r0, [fp, #-16]
   4835c:	blx	r3
   48360:	ldr	r3, [fp, #-8]
   48364:	add	r3, r3, #2
   48368:	str	r3, [fp, #-8]
   4836c:	ldr	r3, [fp, #-12]
   48370:	sub	r3, r3, #1
   48374:	str	r3, [fp, #-12]
   48378:	b	48404 <flatcc_json_printer_int16_enum_vector_field@@Base+0x218>
   4837c:	ldr	r3, [fp, #-16]
   48380:	ldr	r3, [r3, #20]
   48384:	add	r1, r3, #1
   48388:	ldr	r2, [fp, #-16]
   4838c:	str	r1, [r2, #20]
   48390:	mov	r2, #44	; 0x2c
   48394:	strb	r2, [r3]
   48398:	ldr	r3, [fp, #-16]
   4839c:	ldrb	r3, [r3, #25]
   483a0:	cmp	r3, #0
   483a4:	beq	483d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1e4>
   483a8:	ldr	r3, [fp, #-16]
   483ac:	ldr	r3, [r3, #20]
   483b0:	add	r1, r3, #1
   483b4:	ldr	r2, [fp, #-16]
   483b8:	str	r1, [r2, #20]
   483bc:	mov	r2, #10
   483c0:	strb	r2, [r3]
   483c4:	ldr	r0, [fp, #-16]
   483c8:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   483cc:	b	483d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   483d0:	ldr	r0, [fp, #-16]
   483d4:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   483d8:	ldr	r0, [fp, #-8]
   483dc:	bl	3d0e8 <flatcc_json_parser_struct_as_root@@Base+0x30c>
   483e0:	mov	r3, r0
   483e4:	mov	r2, r3
   483e8:	ldr	r3, [fp, #8]
   483ec:	mov	r1, r2
   483f0:	ldr	r0, [fp, #-16]
   483f4:	blx	r3
   483f8:	ldr	r3, [fp, #-8]
   483fc:	add	r3, r3, #2
   48400:	str	r3, [fp, #-8]
   48404:	ldr	r3, [fp, #-12]
   48408:	sub	r2, r3, #1
   4840c:	str	r2, [fp, #-12]
   48410:	cmp	r3, #0
   48414:	bne	4837c <flatcc_json_printer_int16_enum_vector_field@@Base+0x190>
   48418:	ldr	r3, [fp, #-16]
   4841c:	ldrb	r3, [r3, #25]
   48420:	cmp	r3, #0
   48424:	beq	48460 <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   48428:	ldr	r3, [fp, #-16]
   4842c:	ldr	r3, [r3, #20]
   48430:	add	r1, r3, #1
   48434:	ldr	r2, [fp, #-16]
   48438:	str	r1, [r2, #20]
   4843c:	mov	r2, #10
   48440:	strb	r2, [r3]
   48444:	ldr	r3, [fp, #-16]
   48448:	ldr	r3, [r3, #32]
   4844c:	sub	r2, r3, #1
   48450:	ldr	r3, [fp, #-16]
   48454:	str	r2, [r3, #32]
   48458:	ldr	r0, [fp, #-16]
   4845c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48460:	ldr	r3, [fp, #-16]
   48464:	ldr	r3, [r3, #20]
   48468:	add	r1, r3, #1
   4846c:	ldr	r2, [fp, #-16]
   48470:	str	r1, [r2, #20]
   48474:	mov	r2, #93	; 0x5d
   48478:	strb	r2, [r3]
   4847c:	sub	sp, fp, #4
   48480:	pop	{fp, pc}

00048484 <flatcc_json_printer_int32_enum_vector_field@@Base>:
   48484:	push	{fp, lr}
   48488:	add	fp, sp, #4
   4848c:	sub	sp, sp, #32
   48490:	str	r0, [fp, #-16]
   48494:	str	r1, [fp, #-20]	; 0xffffffec
   48498:	str	r2, [fp, #-24]	; 0xffffffe8
   4849c:	str	r3, [fp, #-28]	; 0xffffffe4
   484a0:	ldr	r3, [fp, #-16]
   484a4:	ldrb	r3, [r3, #27]
   484a8:	cmp	r3, #0
   484ac:	beq	484d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x4c>
   484b0:	ldr	r3, [fp, #4]
   484b4:	str	r3, [sp]
   484b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   484bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   484c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   484c4:	ldr	r0, [fp, #-16]
   484c8:	bl	46560 <flatcc_json_printer_int32_vector_field@@Base>
   484cc:	b	4870c <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   484d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   484d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   484d8:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   484dc:	str	r0, [fp, #-8]
   484e0:	ldr	r3, [fp, #-8]
   484e4:	cmp	r3, #0
   484e8:	beq	4870c <flatcc_json_printer_int32_enum_vector_field@@Base+0x288>
   484ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   484f0:	ldr	r3, [r3, #16]
   484f4:	add	r1, r3, #1
   484f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   484fc:	str	r1, [r2, #16]
   48500:	cmp	r3, #0
   48504:	beq	48524 <flatcc_json_printer_int32_enum_vector_field@@Base+0xa0>
   48508:	ldr	r3, [fp, #-16]
   4850c:	ldr	r3, [r3, #20]
   48510:	add	r1, r3, #1
   48514:	ldr	r2, [fp, #-16]
   48518:	str	r1, [r2, #20]
   4851c:	mov	r2, #44	; 0x2c
   48520:	strb	r2, [r3]
   48524:	ldr	r0, [fp, #-8]
   48528:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4852c:	str	r0, [fp, #-8]
   48530:	ldr	r0, [fp, #-8]
   48534:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   48538:	str	r0, [fp, #-12]
   4853c:	ldr	r3, [fp, #-8]
   48540:	add	r3, r3, #4
   48544:	str	r3, [fp, #-8]
   48548:	ldr	r3, [fp, #4]
   4854c:	mov	r2, r3
   48550:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48554:	ldr	r0, [fp, #-16]
   48558:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   4855c:	ldr	r3, [fp, #-16]
   48560:	ldr	r3, [r3, #32]
   48564:	add	r2, r3, #1
   48568:	ldr	r3, [fp, #-16]
   4856c:	str	r2, [r3, #32]
   48570:	ldr	r3, [fp, #-16]
   48574:	ldr	r3, [r3, #20]
   48578:	add	r1, r3, #1
   4857c:	ldr	r2, [fp, #-16]
   48580:	str	r1, [r2, #20]
   48584:	mov	r2, #91	; 0x5b
   48588:	strb	r2, [r3]
   4858c:	ldr	r3, [fp, #-12]
   48590:	cmp	r3, #0
   48594:	beq	48694 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   48598:	ldr	r3, [fp, #-16]
   4859c:	ldrb	r3, [r3, #25]
   485a0:	cmp	r3, #0
   485a4:	beq	485d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x14c>
   485a8:	ldr	r3, [fp, #-16]
   485ac:	ldr	r3, [r3, #20]
   485b0:	add	r1, r3, #1
   485b4:	ldr	r2, [fp, #-16]
   485b8:	str	r1, [r2, #20]
   485bc:	mov	r2, #10
   485c0:	strb	r2, [r3]
   485c4:	ldr	r0, [fp, #-16]
   485c8:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   485cc:	b	485d8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x154>
   485d0:	ldr	r0, [fp, #-16]
   485d4:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   485d8:	ldr	r0, [fp, #-8]
   485dc:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   485e0:	mov	r2, r0
   485e4:	ldr	r3, [fp, #8]
   485e8:	mov	r1, r2
   485ec:	ldr	r0, [fp, #-16]
   485f0:	blx	r3
   485f4:	ldr	r3, [fp, #-8]
   485f8:	add	r3, r3, #4
   485fc:	str	r3, [fp, #-8]
   48600:	ldr	r3, [fp, #-12]
   48604:	sub	r3, r3, #1
   48608:	str	r3, [fp, #-12]
   4860c:	b	48694 <flatcc_json_printer_int32_enum_vector_field@@Base+0x210>
   48610:	ldr	r3, [fp, #-16]
   48614:	ldr	r3, [r3, #20]
   48618:	add	r1, r3, #1
   4861c:	ldr	r2, [fp, #-16]
   48620:	str	r1, [r2, #20]
   48624:	mov	r2, #44	; 0x2c
   48628:	strb	r2, [r3]
   4862c:	ldr	r3, [fp, #-16]
   48630:	ldrb	r3, [r3, #25]
   48634:	cmp	r3, #0
   48638:	beq	48664 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e0>
   4863c:	ldr	r3, [fp, #-16]
   48640:	ldr	r3, [r3, #20]
   48644:	add	r1, r3, #1
   48648:	ldr	r2, [fp, #-16]
   4864c:	str	r1, [r2, #20]
   48650:	mov	r2, #10
   48654:	strb	r2, [r3]
   48658:	ldr	r0, [fp, #-16]
   4865c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48660:	b	4866c <flatcc_json_printer_int32_enum_vector_field@@Base+0x1e8>
   48664:	ldr	r0, [fp, #-16]
   48668:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   4866c:	ldr	r0, [fp, #-8]
   48670:	bl	3d13c <flatcc_json_parser_struct_as_root@@Base+0x360>
   48674:	mov	r2, r0
   48678:	ldr	r3, [fp, #8]
   4867c:	mov	r1, r2
   48680:	ldr	r0, [fp, #-16]
   48684:	blx	r3
   48688:	ldr	r3, [fp, #-8]
   4868c:	add	r3, r3, #4
   48690:	str	r3, [fp, #-8]
   48694:	ldr	r3, [fp, #-12]
   48698:	sub	r2, r3, #1
   4869c:	str	r2, [fp, #-12]
   486a0:	cmp	r3, #0
   486a4:	bne	48610 <flatcc_json_printer_int32_enum_vector_field@@Base+0x18c>
   486a8:	ldr	r3, [fp, #-16]
   486ac:	ldrb	r3, [r3, #25]
   486b0:	cmp	r3, #0
   486b4:	beq	486f0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x26c>
   486b8:	ldr	r3, [fp, #-16]
   486bc:	ldr	r3, [r3, #20]
   486c0:	add	r1, r3, #1
   486c4:	ldr	r2, [fp, #-16]
   486c8:	str	r1, [r2, #20]
   486cc:	mov	r2, #10
   486d0:	strb	r2, [r3]
   486d4:	ldr	r3, [fp, #-16]
   486d8:	ldr	r3, [r3, #32]
   486dc:	sub	r2, r3, #1
   486e0:	ldr	r3, [fp, #-16]
   486e4:	str	r2, [r3, #32]
   486e8:	ldr	r0, [fp, #-16]
   486ec:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   486f0:	ldr	r3, [fp, #-16]
   486f4:	ldr	r3, [r3, #20]
   486f8:	add	r1, r3, #1
   486fc:	ldr	r2, [fp, #-16]
   48700:	str	r1, [r2, #20]
   48704:	mov	r2, #93	; 0x5d
   48708:	strb	r2, [r3]
   4870c:	sub	sp, fp, #4
   48710:	pop	{fp, pc}

00048714 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   48714:	push	{fp, lr}
   48718:	add	fp, sp, #4
   4871c:	sub	sp, sp, #32
   48720:	str	r0, [fp, #-16]
   48724:	str	r1, [fp, #-20]	; 0xffffffec
   48728:	str	r2, [fp, #-24]	; 0xffffffe8
   4872c:	str	r3, [fp, #-28]	; 0xffffffe4
   48730:	ldr	r3, [fp, #-16]
   48734:	ldrb	r3, [r3, #27]
   48738:	cmp	r3, #0
   4873c:	beq	48760 <flatcc_json_printer_int64_enum_vector_field@@Base+0x4c>
   48740:	ldr	r3, [fp, #4]
   48744:	str	r3, [sp]
   48748:	ldr	r3, [fp, #-28]	; 0xffffffe4
   4874c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   48750:	ldr	r1, [fp, #-20]	; 0xffffffec
   48754:	ldr	r0, [fp, #-16]
   48758:	bl	467fc <flatcc_json_printer_int64_vector_field@@Base>
   4875c:	b	4899c <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   48760:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48764:	ldr	r0, [fp, #-20]	; 0xffffffec
   48768:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   4876c:	str	r0, [fp, #-8]
   48770:	ldr	r3, [fp, #-8]
   48774:	cmp	r3, #0
   48778:	beq	4899c <flatcc_json_printer_int64_enum_vector_field@@Base+0x288>
   4877c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48780:	ldr	r3, [r3, #16]
   48784:	add	r1, r3, #1
   48788:	ldr	r2, [fp, #-20]	; 0xffffffec
   4878c:	str	r1, [r2, #16]
   48790:	cmp	r3, #0
   48794:	beq	487b4 <flatcc_json_printer_int64_enum_vector_field@@Base+0xa0>
   48798:	ldr	r3, [fp, #-16]
   4879c:	ldr	r3, [r3, #20]
   487a0:	add	r1, r3, #1
   487a4:	ldr	r2, [fp, #-16]
   487a8:	str	r1, [r2, #20]
   487ac:	mov	r2, #44	; 0x2c
   487b0:	strb	r2, [r3]
   487b4:	ldr	r0, [fp, #-8]
   487b8:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   487bc:	str	r0, [fp, #-8]
   487c0:	ldr	r0, [fp, #-8]
   487c4:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   487c8:	str	r0, [fp, #-12]
   487cc:	ldr	r3, [fp, #-8]
   487d0:	add	r3, r3, #4
   487d4:	str	r3, [fp, #-8]
   487d8:	ldr	r3, [fp, #4]
   487dc:	mov	r2, r3
   487e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   487e4:	ldr	r0, [fp, #-16]
   487e8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   487ec:	ldr	r3, [fp, #-16]
   487f0:	ldr	r3, [r3, #32]
   487f4:	add	r2, r3, #1
   487f8:	ldr	r3, [fp, #-16]
   487fc:	str	r2, [r3, #32]
   48800:	ldr	r3, [fp, #-16]
   48804:	ldr	r3, [r3, #20]
   48808:	add	r1, r3, #1
   4880c:	ldr	r2, [fp, #-16]
   48810:	str	r1, [r2, #20]
   48814:	mov	r2, #91	; 0x5b
   48818:	strb	r2, [r3]
   4881c:	ldr	r3, [fp, #-12]
   48820:	cmp	r3, #0
   48824:	beq	48924 <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
   48828:	ldr	r3, [fp, #-16]
   4882c:	ldrb	r3, [r3, #25]
   48830:	cmp	r3, #0
   48834:	beq	48860 <flatcc_json_printer_int64_enum_vector_field@@Base+0x14c>
   48838:	ldr	r3, [fp, #-16]
   4883c:	ldr	r3, [r3, #20]
   48840:	add	r1, r3, #1
   48844:	ldr	r2, [fp, #-16]
   48848:	str	r1, [r2, #20]
   4884c:	mov	r2, #10
   48850:	strb	r2, [r3]
   48854:	ldr	r0, [fp, #-16]
   48858:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4885c:	b	48868 <flatcc_json_printer_int64_enum_vector_field@@Base+0x154>
   48860:	ldr	r0, [fp, #-16]
   48864:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48868:	ldr	r0, [fp, #-8]
   4886c:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   48870:	mov	r2, r0
   48874:	mov	r3, r1
   48878:	ldr	r1, [fp, #8]
   4887c:	ldr	r0, [fp, #-16]
   48880:	blx	r1
   48884:	ldr	r3, [fp, #-8]
   48888:	add	r3, r3, #8
   4888c:	str	r3, [fp, #-8]
   48890:	ldr	r3, [fp, #-12]
   48894:	sub	r3, r3, #1
   48898:	str	r3, [fp, #-12]
   4889c:	b	48924 <flatcc_json_printer_int64_enum_vector_field@@Base+0x210>
   488a0:	ldr	r3, [fp, #-16]
   488a4:	ldr	r3, [r3, #20]
   488a8:	add	r1, r3, #1
   488ac:	ldr	r2, [fp, #-16]
   488b0:	str	r1, [r2, #20]
   488b4:	mov	r2, #44	; 0x2c
   488b8:	strb	r2, [r3]
   488bc:	ldr	r3, [fp, #-16]
   488c0:	ldrb	r3, [r3, #25]
   488c4:	cmp	r3, #0
   488c8:	beq	488f4 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e0>
   488cc:	ldr	r3, [fp, #-16]
   488d0:	ldr	r3, [r3, #20]
   488d4:	add	r1, r3, #1
   488d8:	ldr	r2, [fp, #-16]
   488dc:	str	r1, [r2, #20]
   488e0:	mov	r2, #10
   488e4:	strb	r2, [r3]
   488e8:	ldr	r0, [fp, #-16]
   488ec:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   488f0:	b	488fc <flatcc_json_printer_int64_enum_vector_field@@Base+0x1e8>
   488f4:	ldr	r0, [fp, #-16]
   488f8:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   488fc:	ldr	r0, [fp, #-8]
   48900:	bl	3d194 <flatcc_json_parser_struct_as_root@@Base+0x3b8>
   48904:	mov	r2, r0
   48908:	mov	r3, r1
   4890c:	ldr	r1, [fp, #8]
   48910:	ldr	r0, [fp, #-16]
   48914:	blx	r1
   48918:	ldr	r3, [fp, #-8]
   4891c:	add	r3, r3, #8
   48920:	str	r3, [fp, #-8]
   48924:	ldr	r3, [fp, #-12]
   48928:	sub	r2, r3, #1
   4892c:	str	r2, [fp, #-12]
   48930:	cmp	r3, #0
   48934:	bne	488a0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x18c>
   48938:	ldr	r3, [fp, #-16]
   4893c:	ldrb	r3, [r3, #25]
   48940:	cmp	r3, #0
   48944:	beq	48980 <flatcc_json_printer_int64_enum_vector_field@@Base+0x26c>
   48948:	ldr	r3, [fp, #-16]
   4894c:	ldr	r3, [r3, #20]
   48950:	add	r1, r3, #1
   48954:	ldr	r2, [fp, #-16]
   48958:	str	r1, [r2, #20]
   4895c:	mov	r2, #10
   48960:	strb	r2, [r3]
   48964:	ldr	r3, [fp, #-16]
   48968:	ldr	r3, [r3, #32]
   4896c:	sub	r2, r3, #1
   48970:	ldr	r3, [fp, #-16]
   48974:	str	r2, [r3, #32]
   48978:	ldr	r0, [fp, #-16]
   4897c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48980:	ldr	r3, [fp, #-16]
   48984:	ldr	r3, [r3, #20]
   48988:	add	r1, r3, #1
   4898c:	ldr	r2, [fp, #-16]
   48990:	str	r1, [r2, #20]
   48994:	mov	r2, #93	; 0x5d
   48998:	strb	r2, [r3]
   4899c:	sub	sp, fp, #4
   489a0:	pop	{fp, pc}

000489a4 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   489a4:	push	{fp, lr}
   489a8:	add	fp, sp, #4
   489ac:	sub	sp, sp, #32
   489b0:	str	r0, [fp, #-16]
   489b4:	str	r1, [fp, #-20]	; 0xffffffec
   489b8:	str	r2, [fp, #-24]	; 0xffffffe8
   489bc:	str	r3, [fp, #-28]	; 0xffffffe4
   489c0:	ldr	r3, [fp, #-16]
   489c4:	ldrb	r3, [r3, #27]
   489c8:	cmp	r3, #0
   489cc:	beq	489f0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x4c>
   489d0:	ldr	r3, [fp, #4]
   489d4:	str	r3, [sp]
   489d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   489dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   489e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   489e4:	ldr	r0, [fp, #-16]
   489e8:	bl	46a88 <flatcc_json_printer_bool_vector_field@@Base>
   489ec:	b	48c34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x290>
   489f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   489f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   489f8:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   489fc:	str	r0, [fp, #-8]
   48a00:	ldr	r3, [fp, #-8]
   48a04:	cmp	r3, #0
   48a08:	beq	48c34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x290>
   48a0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   48a10:	ldr	r3, [r3, #16]
   48a14:	add	r1, r3, #1
   48a18:	ldr	r2, [fp, #-20]	; 0xffffffec
   48a1c:	str	r1, [r2, #16]
   48a20:	cmp	r3, #0
   48a24:	beq	48a44 <flatcc_json_printer_bool_enum_vector_field@@Base+0xa0>
   48a28:	ldr	r3, [fp, #-16]
   48a2c:	ldr	r3, [r3, #20]
   48a30:	add	r1, r3, #1
   48a34:	ldr	r2, [fp, #-16]
   48a38:	str	r1, [r2, #20]
   48a3c:	mov	r2, #44	; 0x2c
   48a40:	strb	r2, [r3]
   48a44:	ldr	r0, [fp, #-8]
   48a48:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   48a4c:	str	r0, [fp, #-8]
   48a50:	ldr	r0, [fp, #-8]
   48a54:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   48a58:	str	r0, [fp, #-12]
   48a5c:	ldr	r3, [fp, #-8]
   48a60:	add	r3, r3, #4
   48a64:	str	r3, [fp, #-8]
   48a68:	ldr	r3, [fp, #4]
   48a6c:	mov	r2, r3
   48a70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48a74:	ldr	r0, [fp, #-16]
   48a78:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   48a7c:	ldr	r3, [fp, #-16]
   48a80:	ldr	r3, [r3, #32]
   48a84:	add	r2, r3, #1
   48a88:	ldr	r3, [fp, #-16]
   48a8c:	str	r2, [r3, #32]
   48a90:	ldr	r3, [fp, #-16]
   48a94:	ldr	r3, [r3, #20]
   48a98:	add	r1, r3, #1
   48a9c:	ldr	r2, [fp, #-16]
   48aa0:	str	r1, [r2, #20]
   48aa4:	mov	r2, #91	; 0x5b
   48aa8:	strb	r2, [r3]
   48aac:	ldr	r3, [fp, #-12]
   48ab0:	cmp	r3, #0
   48ab4:	beq	48bbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   48ab8:	ldr	r3, [fp, #-16]
   48abc:	ldrb	r3, [r3, #25]
   48ac0:	cmp	r3, #0
   48ac4:	beq	48af0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x14c>
   48ac8:	ldr	r3, [fp, #-16]
   48acc:	ldr	r3, [r3, #20]
   48ad0:	add	r1, r3, #1
   48ad4:	ldr	r2, [fp, #-16]
   48ad8:	str	r1, [r2, #20]
   48adc:	mov	r2, #10
   48ae0:	strb	r2, [r3]
   48ae4:	ldr	r0, [fp, #-16]
   48ae8:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48aec:	b	48af8 <flatcc_json_printer_bool_enum_vector_field@@Base+0x154>
   48af0:	ldr	r0, [fp, #-16]
   48af4:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48af8:	ldr	r0, [fp, #-8]
   48afc:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   48b00:	mov	r3, r0
   48b04:	mov	r2, r3
   48b08:	ldr	r3, [fp, #8]
   48b0c:	mov	r1, r2
   48b10:	ldr	r0, [fp, #-16]
   48b14:	blx	r3
   48b18:	ldr	r3, [fp, #-8]
   48b1c:	add	r3, r3, #1
   48b20:	str	r3, [fp, #-8]
   48b24:	ldr	r3, [fp, #-12]
   48b28:	sub	r3, r3, #1
   48b2c:	str	r3, [fp, #-12]
   48b30:	b	48bbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x218>
   48b34:	ldr	r3, [fp, #-16]
   48b38:	ldr	r3, [r3, #20]
   48b3c:	add	r1, r3, #1
   48b40:	ldr	r2, [fp, #-16]
   48b44:	str	r1, [r2, #20]
   48b48:	mov	r2, #44	; 0x2c
   48b4c:	strb	r2, [r3]
   48b50:	ldr	r3, [fp, #-16]
   48b54:	ldrb	r3, [r3, #25]
   48b58:	cmp	r3, #0
   48b5c:	beq	48b88 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1e4>
   48b60:	ldr	r3, [fp, #-16]
   48b64:	ldr	r3, [r3, #20]
   48b68:	add	r1, r3, #1
   48b6c:	ldr	r2, [fp, #-16]
   48b70:	str	r1, [r2, #20]
   48b74:	mov	r2, #10
   48b78:	strb	r2, [r3]
   48b7c:	ldr	r0, [fp, #-16]
   48b80:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48b84:	b	48b90 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   48b88:	ldr	r0, [fp, #-16]
   48b8c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48b90:	ldr	r0, [fp, #-8]
   48b94:	bl	3d2c8 <flatcc_json_parser_struct_as_root@@Base+0x4ec>
   48b98:	mov	r3, r0
   48b9c:	mov	r2, r3
   48ba0:	ldr	r3, [fp, #8]
   48ba4:	mov	r1, r2
   48ba8:	ldr	r0, [fp, #-16]
   48bac:	blx	r3
   48bb0:	ldr	r3, [fp, #-8]
   48bb4:	add	r3, r3, #1
   48bb8:	str	r3, [fp, #-8]
   48bbc:	ldr	r3, [fp, #-12]
   48bc0:	sub	r2, r3, #1
   48bc4:	str	r2, [fp, #-12]
   48bc8:	cmp	r3, #0
   48bcc:	bne	48b34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x190>
   48bd0:	ldr	r3, [fp, #-16]
   48bd4:	ldrb	r3, [r3, #25]
   48bd8:	cmp	r3, #0
   48bdc:	beq	48c18 <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   48be0:	ldr	r3, [fp, #-16]
   48be4:	ldr	r3, [r3, #20]
   48be8:	add	r1, r3, #1
   48bec:	ldr	r2, [fp, #-16]
   48bf0:	str	r1, [r2, #20]
   48bf4:	mov	r2, #10
   48bf8:	strb	r2, [r3]
   48bfc:	ldr	r3, [fp, #-16]
   48c00:	ldr	r3, [r3, #32]
   48c04:	sub	r2, r3, #1
   48c08:	ldr	r3, [fp, #-16]
   48c0c:	str	r2, [r3, #32]
   48c10:	ldr	r0, [fp, #-16]
   48c14:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48c18:	ldr	r3, [fp, #-16]
   48c1c:	ldr	r3, [r3, #20]
   48c20:	add	r1, r3, #1
   48c24:	ldr	r2, [fp, #-16]
   48c28:	str	r1, [r2, #20]
   48c2c:	mov	r2, #93	; 0x5d
   48c30:	strb	r2, [r3]
   48c34:	sub	sp, fp, #4
   48c38:	pop	{fp, pc}

00048c3c <flatcc_json_printer_struct_vector_field@@Base>:
   48c3c:	push	{fp, lr}
   48c40:	add	fp, sp, #4
   48c44:	sub	sp, sp, #24
   48c48:	str	r0, [fp, #-16]
   48c4c:	str	r1, [fp, #-20]	; 0xffffffec
   48c50:	str	r2, [fp, #-24]	; 0xffffffe8
   48c54:	str	r3, [fp, #-28]	; 0xffffffe4
   48c58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48c5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   48c60:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   48c64:	str	r0, [fp, #-8]
   48c68:	ldr	r3, [fp, #-8]
   48c6c:	cmp	r3, #0
   48c70:	beq	48f9c <flatcc_json_printer_struct_vector_field@@Base+0x360>
   48c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   48c78:	ldr	r3, [r3, #16]
   48c7c:	add	r1, r3, #1
   48c80:	ldr	r2, [fp, #-20]	; 0xffffffec
   48c84:	str	r1, [r2, #16]
   48c88:	cmp	r3, #0
   48c8c:	beq	48cac <flatcc_json_printer_struct_vector_field@@Base+0x70>
   48c90:	ldr	r3, [fp, #-16]
   48c94:	ldr	r3, [r3, #20]
   48c98:	add	r1, r3, #1
   48c9c:	ldr	r2, [fp, #-16]
   48ca0:	str	r1, [r2, #20]
   48ca4:	mov	r2, #44	; 0x2c
   48ca8:	strb	r2, [r3]
   48cac:	ldr	r0, [fp, #-8]
   48cb0:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   48cb4:	str	r0, [fp, #-8]
   48cb8:	ldr	r0, [fp, #-8]
   48cbc:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   48cc0:	str	r0, [fp, #-12]
   48cc4:	ldr	r3, [fp, #-8]
   48cc8:	add	r3, r3, #4
   48ccc:	str	r3, [fp, #-8]
   48cd0:	ldr	r3, [fp, #4]
   48cd4:	mov	r2, r3
   48cd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   48cdc:	ldr	r0, [fp, #-16]
   48ce0:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   48ce4:	ldr	r3, [fp, #-16]
   48ce8:	ldr	r3, [r3, #32]
   48cec:	add	r2, r3, #1
   48cf0:	ldr	r3, [fp, #-16]
   48cf4:	str	r2, [r3, #32]
   48cf8:	ldr	r3, [fp, #-16]
   48cfc:	ldr	r3, [r3, #20]
   48d00:	add	r1, r3, #1
   48d04:	ldr	r2, [fp, #-16]
   48d08:	str	r1, [r2, #20]
   48d0c:	mov	r2, #91	; 0x5b
   48d10:	strb	r2, [r3]
   48d14:	ldr	r3, [fp, #-12]
   48d18:	cmp	r3, #0
   48d1c:	beq	48f24 <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   48d20:	ldr	r3, [fp, #-16]
   48d24:	ldrb	r3, [r3, #25]
   48d28:	cmp	r3, #0
   48d2c:	beq	48d58 <flatcc_json_printer_struct_vector_field@@Base+0x11c>
   48d30:	ldr	r3, [fp, #-16]
   48d34:	ldr	r3, [r3, #20]
   48d38:	add	r1, r3, #1
   48d3c:	ldr	r2, [fp, #-16]
   48d40:	str	r1, [r2, #20]
   48d44:	mov	r2, #10
   48d48:	strb	r2, [r3]
   48d4c:	ldr	r0, [fp, #-16]
   48d50:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48d54:	b	48d60 <flatcc_json_printer_struct_vector_field@@Base+0x124>
   48d58:	ldr	r0, [fp, #-16]
   48d5c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48d60:	ldr	r3, [fp, #-16]
   48d64:	ldr	r3, [r3, #32]
   48d68:	add	r2, r3, #1
   48d6c:	ldr	r3, [fp, #-16]
   48d70:	str	r2, [r3, #32]
   48d74:	ldr	r3, [fp, #-16]
   48d78:	ldr	r3, [r3, #20]
   48d7c:	add	r1, r3, #1
   48d80:	ldr	r2, [fp, #-16]
   48d84:	str	r1, [r2, #20]
   48d88:	mov	r2, #123	; 0x7b
   48d8c:	strb	r2, [r3]
   48d90:	ldr	r3, [fp, #12]
   48d94:	ldr	r1, [fp, #-8]
   48d98:	ldr	r0, [fp, #-16]
   48d9c:	blx	r3
   48da0:	ldr	r3, [fp, #-16]
   48da4:	ldrb	r3, [r3, #25]
   48da8:	cmp	r3, #0
   48dac:	beq	48de8 <flatcc_json_printer_struct_vector_field@@Base+0x1ac>
   48db0:	ldr	r3, [fp, #-16]
   48db4:	ldr	r3, [r3, #20]
   48db8:	add	r1, r3, #1
   48dbc:	ldr	r2, [fp, #-16]
   48dc0:	str	r1, [r2, #20]
   48dc4:	mov	r2, #10
   48dc8:	strb	r2, [r3]
   48dcc:	ldr	r3, [fp, #-16]
   48dd0:	ldr	r3, [r3, #32]
   48dd4:	sub	r2, r3, #1
   48dd8:	ldr	r3, [fp, #-16]
   48ddc:	str	r2, [r3, #32]
   48de0:	ldr	r0, [fp, #-16]
   48de4:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48de8:	ldr	r3, [fp, #-16]
   48dec:	ldr	r3, [r3, #20]
   48df0:	add	r1, r3, #1
   48df4:	ldr	r2, [fp, #-16]
   48df8:	str	r1, [r2, #20]
   48dfc:	mov	r2, #125	; 0x7d
   48e00:	strb	r2, [r3]
   48e04:	ldr	r3, [fp, #-12]
   48e08:	sub	r3, r3, #1
   48e0c:	str	r3, [fp, #-12]
   48e10:	b	48f24 <flatcc_json_printer_struct_vector_field@@Base+0x2e8>
   48e14:	ldr	r2, [fp, #-8]
   48e18:	ldr	r3, [fp, #8]
   48e1c:	add	r3, r2, r3
   48e20:	str	r3, [fp, #-8]
   48e24:	ldr	r3, [fp, #-16]
   48e28:	ldr	r3, [r3, #20]
   48e2c:	add	r1, r3, #1
   48e30:	ldr	r2, [fp, #-16]
   48e34:	str	r1, [r2, #20]
   48e38:	mov	r2, #44	; 0x2c
   48e3c:	strb	r2, [r3]
   48e40:	ldr	r3, [fp, #-16]
   48e44:	ldrb	r3, [r3, #25]
   48e48:	cmp	r3, #0
   48e4c:	beq	48e78 <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   48e50:	ldr	r3, [fp, #-16]
   48e54:	ldr	r3, [r3, #20]
   48e58:	add	r1, r3, #1
   48e5c:	ldr	r2, [fp, #-16]
   48e60:	str	r1, [r2, #20]
   48e64:	mov	r2, #10
   48e68:	strb	r2, [r3]
   48e6c:	ldr	r0, [fp, #-16]
   48e70:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48e74:	b	48e80 <flatcc_json_printer_struct_vector_field@@Base+0x244>
   48e78:	ldr	r0, [fp, #-16]
   48e7c:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   48e80:	ldr	r3, [fp, #-16]
   48e84:	ldr	r3, [r3, #32]
   48e88:	add	r2, r3, #1
   48e8c:	ldr	r3, [fp, #-16]
   48e90:	str	r2, [r3, #32]
   48e94:	ldr	r3, [fp, #-16]
   48e98:	ldr	r3, [r3, #20]
   48e9c:	add	r1, r3, #1
   48ea0:	ldr	r2, [fp, #-16]
   48ea4:	str	r1, [r2, #20]
   48ea8:	mov	r2, #123	; 0x7b
   48eac:	strb	r2, [r3]
   48eb0:	ldr	r3, [fp, #12]
   48eb4:	ldr	r1, [fp, #-8]
   48eb8:	ldr	r0, [fp, #-16]
   48ebc:	blx	r3
   48ec0:	ldr	r3, [fp, #-16]
   48ec4:	ldrb	r3, [r3, #25]
   48ec8:	cmp	r3, #0
   48ecc:	beq	48f08 <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   48ed0:	ldr	r3, [fp, #-16]
   48ed4:	ldr	r3, [r3, #20]
   48ed8:	add	r1, r3, #1
   48edc:	ldr	r2, [fp, #-16]
   48ee0:	str	r1, [r2, #20]
   48ee4:	mov	r2, #10
   48ee8:	strb	r2, [r3]
   48eec:	ldr	r3, [fp, #-16]
   48ef0:	ldr	r3, [r3, #32]
   48ef4:	sub	r2, r3, #1
   48ef8:	ldr	r3, [fp, #-16]
   48efc:	str	r2, [r3, #32]
   48f00:	ldr	r0, [fp, #-16]
   48f04:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48f08:	ldr	r3, [fp, #-16]
   48f0c:	ldr	r3, [r3, #20]
   48f10:	add	r1, r3, #1
   48f14:	ldr	r2, [fp, #-16]
   48f18:	str	r1, [r2, #20]
   48f1c:	mov	r2, #125	; 0x7d
   48f20:	strb	r2, [r3]
   48f24:	ldr	r3, [fp, #-12]
   48f28:	sub	r2, r3, #1
   48f2c:	str	r2, [fp, #-12]
   48f30:	cmp	r3, #0
   48f34:	bne	48e14 <flatcc_json_printer_struct_vector_field@@Base+0x1d8>
   48f38:	ldr	r3, [fp, #-16]
   48f3c:	ldrb	r3, [r3, #25]
   48f40:	cmp	r3, #0
   48f44:	beq	48f80 <flatcc_json_printer_struct_vector_field@@Base+0x344>
   48f48:	ldr	r3, [fp, #-16]
   48f4c:	ldr	r3, [r3, #20]
   48f50:	add	r1, r3, #1
   48f54:	ldr	r2, [fp, #-16]
   48f58:	str	r1, [r2, #20]
   48f5c:	mov	r2, #10
   48f60:	strb	r2, [r3]
   48f64:	ldr	r3, [fp, #-16]
   48f68:	ldr	r3, [r3, #32]
   48f6c:	sub	r2, r3, #1
   48f70:	ldr	r3, [fp, #-16]
   48f74:	str	r2, [r3, #32]
   48f78:	ldr	r0, [fp, #-16]
   48f7c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   48f80:	ldr	r3, [fp, #-16]
   48f84:	ldr	r3, [r3, #20]
   48f88:	add	r1, r3, #1
   48f8c:	ldr	r2, [fp, #-16]
   48f90:	str	r1, [r2, #20]
   48f94:	mov	r2, #93	; 0x5d
   48f98:	strb	r2, [r3]
   48f9c:	nop			; (mov r0, r0)
   48fa0:	sub	sp, fp, #4
   48fa4:	pop	{fp, pc}

00048fa8 <flatcc_json_printer_string_vector_field@@Base>:
   48fa8:	push	{fp, lr}
   48fac:	add	fp, sp, #4
   48fb0:	sub	sp, sp, #24
   48fb4:	str	r0, [fp, #-16]
   48fb8:	str	r1, [fp, #-20]	; 0xffffffec
   48fbc:	str	r2, [fp, #-24]	; 0xffffffe8
   48fc0:	str	r3, [fp, #-28]	; 0xffffffe4
   48fc4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   48fc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   48fcc:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   48fd0:	str	r0, [fp, #-8]
   48fd4:	ldr	r3, [fp, #-8]
   48fd8:	cmp	r3, #0
   48fdc:	beq	491ec <flatcc_json_printer_string_vector_field@@Base+0x244>
   48fe0:	ldr	r3, [fp, #-20]	; 0xffffffec
   48fe4:	ldr	r3, [r3, #16]
   48fe8:	add	r1, r3, #1
   48fec:	ldr	r2, [fp, #-20]	; 0xffffffec
   48ff0:	str	r1, [r2, #16]
   48ff4:	cmp	r3, #0
   48ff8:	beq	49018 <flatcc_json_printer_string_vector_field@@Base+0x70>
   48ffc:	ldr	r3, [fp, #-16]
   49000:	ldr	r3, [r3, #20]
   49004:	add	r1, r3, #1
   49008:	ldr	r2, [fp, #-16]
   4900c:	str	r1, [r2, #20]
   49010:	mov	r2, #44	; 0x2c
   49014:	strb	r2, [r3]
   49018:	ldr	r0, [fp, #-8]
   4901c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   49020:	str	r0, [fp, #-8]
   49024:	ldr	r0, [fp, #-8]
   49028:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4902c:	str	r0, [fp, #-12]
   49030:	ldr	r3, [fp, #-8]
   49034:	add	r3, r3, #4
   49038:	str	r3, [fp, #-8]
   4903c:	ldr	r3, [fp, #4]
   49040:	mov	r2, r3
   49044:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49048:	ldr	r0, [fp, #-16]
   4904c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   49050:	ldr	r3, [fp, #-16]
   49054:	ldr	r3, [r3, #32]
   49058:	add	r2, r3, #1
   4905c:	ldr	r3, [fp, #-16]
   49060:	str	r2, [r3, #32]
   49064:	ldr	r3, [fp, #-16]
   49068:	ldr	r3, [r3, #20]
   4906c:	add	r1, r3, #1
   49070:	ldr	r2, [fp, #-16]
   49074:	str	r1, [r2, #20]
   49078:	mov	r2, #91	; 0x5b
   4907c:	strb	r2, [r3]
   49080:	ldr	r3, [fp, #-12]
   49084:	cmp	r3, #0
   49088:	beq	49174 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   4908c:	ldr	r3, [fp, #-16]
   49090:	ldrb	r3, [r3, #25]
   49094:	cmp	r3, #0
   49098:	beq	490c4 <flatcc_json_printer_string_vector_field@@Base+0x11c>
   4909c:	ldr	r3, [fp, #-16]
   490a0:	ldr	r3, [r3, #20]
   490a4:	add	r1, r3, #1
   490a8:	ldr	r2, [fp, #-16]
   490ac:	str	r1, [r2, #20]
   490b0:	mov	r2, #10
   490b4:	strb	r2, [r3]
   490b8:	ldr	r0, [fp, #-16]
   490bc:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   490c0:	b	490cc <flatcc_json_printer_string_vector_field@@Base+0x124>
   490c4:	ldr	r0, [fp, #-16]
   490c8:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   490cc:	ldr	r0, [fp, #-8]
   490d0:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   490d4:	mov	r3, r0
   490d8:	mov	r1, r3
   490dc:	ldr	r0, [fp, #-16]
   490e0:	bl	42ac8 <flatcc_json_printer_enum_flag@@Base+0x74>
   490e4:	ldr	r3, [fp, #-12]
   490e8:	sub	r3, r3, #1
   490ec:	str	r3, [fp, #-12]
   490f0:	b	49174 <flatcc_json_printer_string_vector_field@@Base+0x1cc>
   490f4:	ldr	r3, [fp, #-8]
   490f8:	add	r3, r3, #4
   490fc:	str	r3, [fp, #-8]
   49100:	ldr	r3, [fp, #-16]
   49104:	ldr	r3, [r3, #20]
   49108:	add	r1, r3, #1
   4910c:	ldr	r2, [fp, #-16]
   49110:	str	r1, [r2, #20]
   49114:	mov	r2, #44	; 0x2c
   49118:	strb	r2, [r3]
   4911c:	ldr	r3, [fp, #-16]
   49120:	ldrb	r3, [r3, #25]
   49124:	cmp	r3, #0
   49128:	beq	49154 <flatcc_json_printer_string_vector_field@@Base+0x1ac>
   4912c:	ldr	r3, [fp, #-16]
   49130:	ldr	r3, [r3, #20]
   49134:	add	r1, r3, #1
   49138:	ldr	r2, [fp, #-16]
   4913c:	str	r1, [r2, #20]
   49140:	mov	r2, #10
   49144:	strb	r2, [r3]
   49148:	ldr	r0, [fp, #-16]
   4914c:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49150:	b	4915c <flatcc_json_printer_string_vector_field@@Base+0x1b4>
   49154:	ldr	r0, [fp, #-16]
   49158:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   4915c:	ldr	r0, [fp, #-8]
   49160:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   49164:	mov	r3, r0
   49168:	mov	r1, r3
   4916c:	ldr	r0, [fp, #-16]
   49170:	bl	42ac8 <flatcc_json_printer_enum_flag@@Base+0x74>
   49174:	ldr	r3, [fp, #-12]
   49178:	sub	r2, r3, #1
   4917c:	str	r2, [fp, #-12]
   49180:	cmp	r3, #0
   49184:	bne	490f4 <flatcc_json_printer_string_vector_field@@Base+0x14c>
   49188:	ldr	r3, [fp, #-16]
   4918c:	ldrb	r3, [r3, #25]
   49190:	cmp	r3, #0
   49194:	beq	491d0 <flatcc_json_printer_string_vector_field@@Base+0x228>
   49198:	ldr	r3, [fp, #-16]
   4919c:	ldr	r3, [r3, #20]
   491a0:	add	r1, r3, #1
   491a4:	ldr	r2, [fp, #-16]
   491a8:	str	r1, [r2, #20]
   491ac:	mov	r2, #10
   491b0:	strb	r2, [r3]
   491b4:	ldr	r3, [fp, #-16]
   491b8:	ldr	r3, [r3, #32]
   491bc:	sub	r2, r3, #1
   491c0:	ldr	r3, [fp, #-16]
   491c4:	str	r2, [r3, #32]
   491c8:	ldr	r0, [fp, #-16]
   491cc:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   491d0:	ldr	r3, [fp, #-16]
   491d4:	ldr	r3, [r3, #20]
   491d8:	add	r1, r3, #1
   491dc:	ldr	r2, [fp, #-16]
   491e0:	str	r1, [r2, #20]
   491e4:	mov	r2, #93	; 0x5d
   491e8:	strb	r2, [r3]
   491ec:	nop			; (mov r0, r0)
   491f0:	sub	sp, fp, #4
   491f4:	pop	{fp, pc}

000491f8 <flatcc_json_printer_table_vector_field@@Base>:
   491f8:	push	{fp, lr}
   491fc:	add	fp, sp, #4
   49200:	sub	sp, sp, #24
   49204:	str	r0, [fp, #-16]
   49208:	str	r1, [fp, #-20]	; 0xffffffec
   4920c:	str	r2, [fp, #-24]	; 0xffffffe8
   49210:	str	r3, [fp, #-28]	; 0xffffffe4
   49214:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49218:	ldr	r0, [fp, #-20]	; 0xffffffec
   4921c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   49220:	str	r0, [fp, #-8]
   49224:	ldr	r3, [fp, #-8]
   49228:	cmp	r3, #0
   4922c:	beq	493cc <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   49230:	ldr	r3, [fp, #-20]	; 0xffffffec
   49234:	ldr	r3, [r3, #16]
   49238:	add	r1, r3, #1
   4923c:	ldr	r2, [fp, #-20]	; 0xffffffec
   49240:	str	r1, [r2, #16]
   49244:	cmp	r3, #0
   49248:	beq	49268 <flatcc_json_printer_table_vector_field@@Base+0x70>
   4924c:	ldr	r3, [fp, #-16]
   49250:	ldr	r3, [r3, #20]
   49254:	add	r1, r3, #1
   49258:	ldr	r2, [fp, #-16]
   4925c:	str	r1, [r2, #20]
   49260:	mov	r2, #44	; 0x2c
   49264:	strb	r2, [r3]
   49268:	ldr	r0, [fp, #-8]
   4926c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   49270:	str	r0, [fp, #-8]
   49274:	ldr	r0, [fp, #-8]
   49278:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4927c:	str	r0, [fp, #-12]
   49280:	ldr	r3, [fp, #-8]
   49284:	add	r3, r3, #4
   49288:	str	r3, [fp, #-8]
   4928c:	ldr	r3, [fp, #4]
   49290:	mov	r2, r3
   49294:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49298:	ldr	r0, [fp, #-16]
   4929c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   492a0:	ldr	r3, [fp, #-16]
   492a4:	ldr	r3, [r3, #32]
   492a8:	add	r2, r3, #1
   492ac:	ldr	r3, [fp, #-16]
   492b0:	str	r2, [r3, #32]
   492b4:	ldr	r3, [fp, #-16]
   492b8:	ldr	r3, [r3, #20]
   492bc:	add	r1, r3, #1
   492c0:	ldr	r2, [fp, #-16]
   492c4:	str	r1, [r2, #20]
   492c8:	mov	r2, #91	; 0x5b
   492cc:	strb	r2, [r3]
   492d0:	ldr	r3, [fp, #-12]
   492d4:	cmp	r3, #0
   492d8:	beq	49354 <flatcc_json_printer_table_vector_field@@Base+0x15c>
   492dc:	ldr	r0, [fp, #-8]
   492e0:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   492e4:	mov	r1, r0
   492e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   492ec:	ldr	r2, [r3, #12]
   492f0:	ldr	r3, [fp, #8]
   492f4:	ldr	r0, [fp, #-16]
   492f8:	bl	42b10 <flatcc_json_printer_enum_flag@@Base+0xbc>
   492fc:	ldr	r3, [fp, #-12]
   49300:	sub	r3, r3, #1
   49304:	str	r3, [fp, #-12]
   49308:	b	49354 <flatcc_json_printer_table_vector_field@@Base+0x15c>
   4930c:	ldr	r3, [fp, #-8]
   49310:	add	r3, r3, #4
   49314:	str	r3, [fp, #-8]
   49318:	ldr	r3, [fp, #-16]
   4931c:	ldr	r3, [r3, #20]
   49320:	add	r1, r3, #1
   49324:	ldr	r2, [fp, #-16]
   49328:	str	r1, [r2, #20]
   4932c:	mov	r2, #44	; 0x2c
   49330:	strb	r2, [r3]
   49334:	ldr	r0, [fp, #-8]
   49338:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4933c:	mov	r1, r0
   49340:	ldr	r3, [fp, #-20]	; 0xffffffec
   49344:	ldr	r2, [r3, #12]
   49348:	ldr	r3, [fp, #8]
   4934c:	ldr	r0, [fp, #-16]
   49350:	bl	42b10 <flatcc_json_printer_enum_flag@@Base+0xbc>
   49354:	ldr	r3, [fp, #-12]
   49358:	sub	r2, r3, #1
   4935c:	str	r2, [fp, #-12]
   49360:	cmp	r3, #0
   49364:	bne	4930c <flatcc_json_printer_table_vector_field@@Base+0x114>
   49368:	ldr	r3, [fp, #-16]
   4936c:	ldrb	r3, [r3, #25]
   49370:	cmp	r3, #0
   49374:	beq	493b0 <flatcc_json_printer_table_vector_field@@Base+0x1b8>
   49378:	ldr	r3, [fp, #-16]
   4937c:	ldr	r3, [r3, #20]
   49380:	add	r1, r3, #1
   49384:	ldr	r2, [fp, #-16]
   49388:	str	r1, [r2, #20]
   4938c:	mov	r2, #10
   49390:	strb	r2, [r3]
   49394:	ldr	r3, [fp, #-16]
   49398:	ldr	r3, [r3, #32]
   4939c:	sub	r2, r3, #1
   493a0:	ldr	r3, [fp, #-16]
   493a4:	str	r2, [r3, #32]
   493a8:	ldr	r0, [fp, #-16]
   493ac:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   493b0:	ldr	r3, [fp, #-16]
   493b4:	ldr	r3, [r3, #20]
   493b8:	add	r1, r3, #1
   493bc:	ldr	r2, [fp, #-16]
   493c0:	str	r1, [r2, #20]
   493c4:	mov	r2, #93	; 0x5d
   493c8:	strb	r2, [r3]
   493cc:	nop			; (mov r0, r0)
   493d0:	sub	sp, fp, #4
   493d4:	pop	{fp, pc}

000493d8 <flatcc_json_printer_union_vector_field@@Base>:
   493d8:	push	{fp, lr}
   493dc:	add	fp, sp, #4
   493e0:	sub	sp, sp, #160	; 0xa0
   493e4:	str	r0, [fp, #-144]	; 0xffffff70
   493e8:	str	r1, [fp, #-148]	; 0xffffff6c
   493ec:	str	r2, [fp, #-152]	; 0xffffff68
   493f0:	str	r3, [fp, #-156]	; 0xffffff64
   493f4:	ldr	r3, [fp, #-152]	; 0xffffff68
   493f8:	sub	r3, r3, #1
   493fc:	mov	r1, r3
   49400:	ldr	r0, [fp, #-148]	; 0xffffff6c
   49404:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   49408:	str	r0, [fp, #-20]	; 0xffffffec
   4940c:	ldr	r1, [fp, #-152]	; 0xffffff68
   49410:	ldr	r0, [fp, #-148]	; 0xffffff6c
   49414:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   49418:	str	r0, [fp, #-8]
   4941c:	ldr	r3, [fp, #-148]	; 0xffffff6c
   49420:	ldr	r3, [r3, #12]
   49424:	str	r3, [fp, #-136]	; 0xffffff78
   49428:	ldr	r3, [fp, #4]
   4942c:	cmp	r3, #100	; 0x64
   49430:	ble	49460 <flatcc_json_printer_union_vector_field@@Base+0x88>
   49434:	mov	r1, #1
   49438:	ldr	r0, [fp, #-144]	; 0xffffff70
   4943c:	bl	3d4c8 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   49440:	ldr	r3, [pc, #916]	; 497dc <flatcc_json_printer_union_vector_field@@Base+0x404>
   49444:	add	r3, pc, r3
   49448:	ldr	r2, [pc, #912]	; 497e0 <flatcc_json_printer_union_vector_field@@Base+0x408>
   4944c:	ldr	r1, [pc, #912]	; 497e4 <flatcc_json_printer_union_vector_field@@Base+0x40c>
   49450:	add	r1, pc, r1
   49454:	ldr	r0, [pc, #908]	; 497e8 <flatcc_json_printer_union_vector_field@@Base+0x410>
   49458:	add	r0, pc, r0
   4945c:	bl	14610 <__assert_fail@plt>
   49460:	ldr	r2, [fp, #4]
   49464:	sub	r3, fp, #128	; 0x80
   49468:	ldr	r1, [fp, #-156]	; 0xffffff64
   4946c:	mov	r0, r3
   49470:	bl	14544 <memcpy@plt>
   49474:	ldr	r3, [fp, #4]
   49478:	sub	r2, fp, #128	; 0x80
   4947c:	add	r3, r2, r3
   49480:	mov	r2, #5
   49484:	ldr	r1, [pc, #864]	; 497ec <flatcc_json_printer_union_vector_field@@Base+0x414>
   49488:	add	r1, pc, r1
   4948c:	mov	r0, r3
   49490:	bl	14544 <memcpy@plt>
   49494:	ldr	r3, [fp, #-8]
   49498:	cmp	r3, #0
   4949c:	beq	497d0 <flatcc_json_printer_union_vector_field@@Base+0x3f8>
   494a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   494a4:	cmp	r3, #0
   494a8:	beq	497d0 <flatcc_json_printer_union_vector_field@@Base+0x3f8>
   494ac:	ldr	r3, [fp, #-152]	; 0xffffff68
   494b0:	sub	r1, r3, #1
   494b4:	ldr	r3, [fp, #4]
   494b8:	add	r3, r3, #5
   494bc:	sub	r0, fp, #128	; 0x80
   494c0:	ldr	r2, [fp, #8]
   494c4:	str	r2, [sp, #4]
   494c8:	str	r3, [sp]
   494cc:	mov	r3, r0
   494d0:	mov	r2, r1
   494d4:	ldr	r1, [fp, #-148]	; 0xffffff6c
   494d8:	ldr	r0, [fp, #-144]	; 0xffffff70
   494dc:	bl	4726c <flatcc_json_printer_utype_enum_vector_field@@Base>
   494e0:	ldr	r3, [fp, #-148]	; 0xffffff6c
   494e4:	ldr	r3, [r3, #16]
   494e8:	add	r1, r3, #1
   494ec:	ldr	r2, [fp, #-148]	; 0xffffff6c
   494f0:	str	r1, [r2, #16]
   494f4:	cmp	r3, #0
   494f8:	beq	49518 <flatcc_json_printer_union_vector_field@@Base+0x140>
   494fc:	ldr	r3, [fp, #-144]	; 0xffffff70
   49500:	ldr	r3, [r3, #20]
   49504:	add	r1, r3, #1
   49508:	ldr	r2, [fp, #-144]	; 0xffffff70
   4950c:	str	r1, [r2, #20]
   49510:	mov	r2, #44	; 0x2c
   49514:	strb	r2, [r3]
   49518:	ldr	r0, [fp, #-8]
   4951c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   49520:	str	r0, [fp, #-8]
   49524:	ldr	r0, [fp, #-20]	; 0xffffffec
   49528:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4952c:	str	r0, [fp, #-20]	; 0xffffffec
   49530:	ldr	r0, [fp, #-8]
   49534:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   49538:	str	r0, [fp, #-16]
   4953c:	ldr	r3, [fp, #-8]
   49540:	add	r3, r3, #4
   49544:	str	r3, [fp, #-8]
   49548:	ldr	r3, [fp, #-20]	; 0xffffffec
   4954c:	add	r3, r3, #4
   49550:	str	r3, [fp, #-20]	; 0xffffffec
   49554:	ldr	r3, [fp, #-20]	; 0xffffffec
   49558:	str	r3, [fp, #-12]
   4955c:	ldr	r3, [fp, #4]
   49560:	mov	r2, r3
   49564:	ldr	r1, [fp, #-156]	; 0xffffff64
   49568:	ldr	r0, [fp, #-144]	; 0xffffff70
   4956c:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   49570:	ldr	r3, [fp, #-144]	; 0xffffff70
   49574:	ldr	r3, [r3, #32]
   49578:	add	r2, r3, #1
   4957c:	ldr	r3, [fp, #-144]	; 0xffffff70
   49580:	str	r2, [r3, #32]
   49584:	ldr	r3, [fp, #-144]	; 0xffffff70
   49588:	ldr	r3, [r3, #20]
   4958c:	add	r1, r3, #1
   49590:	ldr	r2, [fp, #-144]	; 0xffffff70
   49594:	str	r1, [r2, #20]
   49598:	mov	r2, #91	; 0x5b
   4959c:	strb	r2, [r3]
   495a0:	ldr	r3, [fp, #-16]
   495a4:	cmp	r3, #0
   495a8:	beq	49758 <flatcc_json_printer_union_vector_field@@Base+0x380>
   495ac:	ldr	r0, [fp, #-12]
   495b0:	bl	3d420 <flatcc_json_parser_struct_as_root@@Base+0x644>
   495b4:	mov	r3, r0
   495b8:	strb	r3, [fp, #-21]	; 0xffffffeb
   495bc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   495c0:	cmp	r3, #0
   495c4:	beq	495f0 <flatcc_json_printer_union_vector_field@@Base+0x218>
   495c8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   495cc:	strb	r3, [fp, #-132]	; 0xffffff7c
   495d0:	ldr	r3, [fp, #-8]
   495d4:	str	r3, [fp, #-140]	; 0xffffff74
   495d8:	sub	r2, fp, #140	; 0x8c
   495dc:	ldr	r3, [fp, #12]
   495e0:	mov	r1, r2
   495e4:	ldr	r0, [fp, #-144]	; 0xffffff70
   495e8:	blx	r3
   495ec:	b	49660 <flatcc_json_printer_union_vector_field@@Base+0x288>
   495f0:	ldr	r3, [fp, #-144]	; 0xffffff70
   495f4:	ldr	r3, [r3, #20]
   495f8:	add	r1, r3, #1
   495fc:	ldr	r2, [fp, #-144]	; 0xffffff70
   49600:	str	r1, [r2, #20]
   49604:	mov	r2, #110	; 0x6e
   49608:	strb	r2, [r3]
   4960c:	ldr	r3, [fp, #-144]	; 0xffffff70
   49610:	ldr	r3, [r3, #20]
   49614:	add	r1, r3, #1
   49618:	ldr	r2, [fp, #-144]	; 0xffffff70
   4961c:	str	r1, [r2, #20]
   49620:	mov	r2, #117	; 0x75
   49624:	strb	r2, [r3]
   49628:	ldr	r3, [fp, #-144]	; 0xffffff70
   4962c:	ldr	r3, [r3, #20]
   49630:	add	r1, r3, #1
   49634:	ldr	r2, [fp, #-144]	; 0xffffff70
   49638:	str	r1, [r2, #20]
   4963c:	mov	r2, #108	; 0x6c
   49640:	strb	r2, [r3]
   49644:	ldr	r3, [fp, #-144]	; 0xffffff70
   49648:	ldr	r3, [r3, #20]
   4964c:	add	r1, r3, #1
   49650:	ldr	r2, [fp, #-144]	; 0xffffff70
   49654:	str	r1, [r2, #20]
   49658:	mov	r2, #108	; 0x6c
   4965c:	strb	r2, [r3]
   49660:	ldr	r3, [fp, #-16]
   49664:	sub	r3, r3, #1
   49668:	str	r3, [fp, #-16]
   4966c:	b	49758 <flatcc_json_printer_union_vector_field@@Base+0x380>
   49670:	ldr	r3, [fp, #-8]
   49674:	add	r3, r3, #4
   49678:	str	r3, [fp, #-8]
   4967c:	ldr	r3, [fp, #-12]
   49680:	add	r3, r3, #1
   49684:	str	r3, [fp, #-12]
   49688:	ldr	r0, [fp, #-12]
   4968c:	bl	3d420 <flatcc_json_parser_struct_as_root@@Base+0x644>
   49690:	mov	r3, r0
   49694:	strb	r3, [fp, #-21]	; 0xffffffeb
   49698:	ldr	r3, [fp, #-144]	; 0xffffff70
   4969c:	ldr	r3, [r3, #20]
   496a0:	add	r1, r3, #1
   496a4:	ldr	r2, [fp, #-144]	; 0xffffff70
   496a8:	str	r1, [r2, #20]
   496ac:	mov	r2, #44	; 0x2c
   496b0:	strb	r2, [r3]
   496b4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   496b8:	cmp	r3, #0
   496bc:	beq	496e8 <flatcc_json_printer_union_vector_field@@Base+0x310>
   496c0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   496c4:	strb	r3, [fp, #-132]	; 0xffffff7c
   496c8:	ldr	r3, [fp, #-8]
   496cc:	str	r3, [fp, #-140]	; 0xffffff74
   496d0:	sub	r2, fp, #140	; 0x8c
   496d4:	ldr	r3, [fp, #12]
   496d8:	mov	r1, r2
   496dc:	ldr	r0, [fp, #-144]	; 0xffffff70
   496e0:	blx	r3
   496e4:	b	49758 <flatcc_json_printer_union_vector_field@@Base+0x380>
   496e8:	ldr	r3, [fp, #-144]	; 0xffffff70
   496ec:	ldr	r3, [r3, #20]
   496f0:	add	r1, r3, #1
   496f4:	ldr	r2, [fp, #-144]	; 0xffffff70
   496f8:	str	r1, [r2, #20]
   496fc:	mov	r2, #110	; 0x6e
   49700:	strb	r2, [r3]
   49704:	ldr	r3, [fp, #-144]	; 0xffffff70
   49708:	ldr	r3, [r3, #20]
   4970c:	add	r1, r3, #1
   49710:	ldr	r2, [fp, #-144]	; 0xffffff70
   49714:	str	r1, [r2, #20]
   49718:	mov	r2, #117	; 0x75
   4971c:	strb	r2, [r3]
   49720:	ldr	r3, [fp, #-144]	; 0xffffff70
   49724:	ldr	r3, [r3, #20]
   49728:	add	r1, r3, #1
   4972c:	ldr	r2, [fp, #-144]	; 0xffffff70
   49730:	str	r1, [r2, #20]
   49734:	mov	r2, #108	; 0x6c
   49738:	strb	r2, [r3]
   4973c:	ldr	r3, [fp, #-144]	; 0xffffff70
   49740:	ldr	r3, [r3, #20]
   49744:	add	r1, r3, #1
   49748:	ldr	r2, [fp, #-144]	; 0xffffff70
   4974c:	str	r1, [r2, #20]
   49750:	mov	r2, #108	; 0x6c
   49754:	strb	r2, [r3]
   49758:	ldr	r3, [fp, #-16]
   4975c:	sub	r2, r3, #1
   49760:	str	r2, [fp, #-16]
   49764:	cmp	r3, #0
   49768:	bne	49670 <flatcc_json_printer_union_vector_field@@Base+0x298>
   4976c:	ldr	r3, [fp, #-144]	; 0xffffff70
   49770:	ldrb	r3, [r3, #25]
   49774:	cmp	r3, #0
   49778:	beq	497b4 <flatcc_json_printer_union_vector_field@@Base+0x3dc>
   4977c:	ldr	r3, [fp, #-144]	; 0xffffff70
   49780:	ldr	r3, [r3, #20]
   49784:	add	r1, r3, #1
   49788:	ldr	r2, [fp, #-144]	; 0xffffff70
   4978c:	str	r1, [r2, #20]
   49790:	mov	r2, #10
   49794:	strb	r2, [r3]
   49798:	ldr	r3, [fp, #-144]	; 0xffffff70
   4979c:	ldr	r3, [r3, #32]
   497a0:	sub	r2, r3, #1
   497a4:	ldr	r3, [fp, #-144]	; 0xffffff70
   497a8:	str	r2, [r3, #32]
   497ac:	ldr	r0, [fp, #-144]	; 0xffffff70
   497b0:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   497b4:	ldr	r3, [fp, #-144]	; 0xffffff70
   497b8:	ldr	r3, [r3, #20]
   497bc:	add	r1, r3, #1
   497c0:	ldr	r2, [fp, #-144]	; 0xffffff70
   497c4:	str	r1, [r2, #20]
   497c8:	mov	r2, #93	; 0x5d
   497cc:	strb	r2, [r3]
   497d0:	nop			; (mov r0, r0)
   497d4:	sub	sp, fp, #4
   497d8:	pop	{fp, pc}
   497dc:	ldrdeq	r8, [r0], -r8	; <UNPREDICTABLE>
   497e0:	andeq	r0, r0, fp, asr #6
   497e4:	andeq	r8, r0, r8, lsr #32
   497e8:	andeq	r8, r0, ip, lsl #1
   497ec:	andeq	r8, r0, r8, ror r0

000497f0 <flatcc_json_printer_table_field@@Base>:
   497f0:	push	{fp, lr}
   497f4:	add	fp, sp, #4
   497f8:	sub	sp, sp, #24
   497fc:	str	r0, [fp, #-16]
   49800:	str	r1, [fp, #-20]	; 0xffffffec
   49804:	str	r2, [fp, #-24]	; 0xffffffe8
   49808:	str	r3, [fp, #-28]	; 0xffffffe4
   4980c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49810:	ldr	r0, [fp, #-20]	; 0xffffffec
   49814:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   49818:	str	r0, [fp, #-8]
   4981c:	ldr	r3, [fp, #-8]
   49820:	cmp	r3, #0
   49824:	beq	49894 <flatcc_json_printer_table_field@@Base+0xa4>
   49828:	ldr	r3, [fp, #-20]	; 0xffffffec
   4982c:	ldr	r3, [r3, #16]
   49830:	add	r1, r3, #1
   49834:	ldr	r2, [fp, #-20]	; 0xffffffec
   49838:	str	r1, [r2, #16]
   4983c:	cmp	r3, #0
   49840:	beq	49860 <flatcc_json_printer_table_field@@Base+0x70>
   49844:	ldr	r3, [fp, #-16]
   49848:	ldr	r3, [r3, #20]
   4984c:	add	r1, r3, #1
   49850:	ldr	r2, [fp, #-16]
   49854:	str	r1, [r2, #20]
   49858:	mov	r2, #44	; 0x2c
   4985c:	strb	r2, [r3]
   49860:	ldr	r3, [fp, #4]
   49864:	mov	r2, r3
   49868:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4986c:	ldr	r0, [fp, #-16]
   49870:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   49874:	ldr	r0, [fp, #-8]
   49878:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4987c:	mov	r1, r0
   49880:	ldr	r3, [fp, #-20]	; 0xffffffec
   49884:	ldr	r2, [r3, #12]
   49888:	ldr	r3, [fp, #8]
   4988c:	ldr	r0, [fp, #-16]
   49890:	bl	42b10 <flatcc_json_printer_enum_flag@@Base+0xbc>
   49894:	nop			; (mov r0, r0)
   49898:	sub	sp, fp, #4
   4989c:	pop	{fp, pc}

000498a0 <flatcc_json_printer_union_field@@Base>:
   498a0:	push	{fp, lr}
   498a4:	add	fp, sp, #4
   498a8:	sub	sp, sp, #40	; 0x28
   498ac:	str	r0, [fp, #-32]	; 0xffffffe0
   498b0:	str	r1, [fp, #-36]	; 0xffffffdc
   498b4:	str	r2, [fp, #-40]	; 0xffffffd8
   498b8:	str	r3, [fp, #-44]	; 0xffffffd4
   498bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   498c0:	sub	r3, r3, #1
   498c4:	mov	r1, r3
   498c8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   498cc:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   498d0:	str	r0, [fp, #-8]
   498d4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   498d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   498dc:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   498e0:	str	r0, [fp, #-12]
   498e4:	ldr	r3, [fp, #-12]
   498e8:	cmp	r3, #0
   498ec:	beq	49b9c <flatcc_json_printer_union_field@@Base+0x2fc>
   498f0:	ldr	r3, [fp, #-8]
   498f4:	cmp	r3, #0
   498f8:	beq	49b9c <flatcc_json_printer_union_field@@Base+0x2fc>
   498fc:	ldr	r0, [fp, #-8]
   49900:	bl	3d420 <flatcc_json_parser_struct_as_root@@Base+0x644>
   49904:	mov	r3, r0
   49908:	strb	r3, [fp, #-13]
   4990c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49910:	ldr	r3, [r3, #16]
   49914:	add	r1, r3, #1
   49918:	ldr	r2, [fp, #-36]	; 0xffffffdc
   4991c:	str	r1, [r2, #16]
   49920:	cmp	r3, #0
   49924:	beq	49944 <flatcc_json_printer_union_field@@Base+0xa4>
   49928:	ldr	r3, [fp, #-32]	; 0xffffffe0
   4992c:	ldr	r3, [r3, #20]
   49930:	add	r1, r3, #1
   49934:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49938:	str	r1, [r2, #20]
   4993c:	mov	r2, #44	; 0x2c
   49940:	strb	r2, [r3]
   49944:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49948:	ldrb	r3, [r3, #25]
   4994c:	cmp	r3, #0
   49950:	beq	4997c <flatcc_json_printer_union_field@@Base+0xdc>
   49954:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49958:	ldr	r3, [r3, #20]
   4995c:	add	r1, r3, #1
   49960:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49964:	str	r1, [r2, #20]
   49968:	mov	r2, #10
   4996c:	strb	r2, [r3]
   49970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49974:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49978:	b	49984 <flatcc_json_printer_union_field@@Base+0xe4>
   4997c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49980:	bl	3d530 <flatcc_json_parser_struct_as_root@@Base+0x754>
   49984:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49988:	ldr	r3, [r3, #20]
   4998c:	mov	r2, #34	; 0x22
   49990:	strb	r2, [r3]
   49994:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49998:	ldr	r3, [r3, #20]
   4999c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   499a0:	ldrb	r2, [r2, #26]
   499a4:	cmp	r2, #0
   499a8:	moveq	r2, #1
   499ac:	movne	r2, #0
   499b0:	uxtb	r2, r2
   499b4:	add	r2, r3, r2
   499b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   499bc:	str	r2, [r3, #20]
   499c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   499c4:	ldr	r2, [r3, #20]
   499c8:	ldr	r3, [fp, #4]
   499cc:	add	r2, r2, r3
   499d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   499d4:	ldr	r3, [r3, #16]
   499d8:	cmp	r2, r3
   499dc:	bcs	49a14 <flatcc_json_printer_union_field@@Base+0x174>
   499e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   499e4:	ldr	r3, [r3, #20]
   499e8:	ldr	r2, [fp, #4]
   499ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   499f0:	mov	r0, r3
   499f4:	bl	14544 <memcpy@plt>
   499f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   499fc:	ldr	r2, [r3, #20]
   49a00:	ldr	r3, [fp, #4]
   49a04:	add	r2, r2, r3
   49a08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49a0c:	str	r2, [r3, #20]
   49a10:	b	49a28 <flatcc_json_printer_union_field@@Base+0x188>
   49a14:	ldr	r3, [fp, #4]
   49a18:	mov	r2, r3
   49a1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49a20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49a24:	bl	41b68 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   49a28:	mov	r2, #5
   49a2c:	ldr	r3, [pc, #372]	; 49ba8 <flatcc_json_printer_union_field@@Base+0x308>
   49a30:	add	r3, pc, r3
   49a34:	mov	r1, r3
   49a38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49a3c:	bl	41b68 <flatcc_json_printer_fmt_bool@@Base+0x1a0>
   49a40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49a44:	ldr	r3, [r3, #20]
   49a48:	mov	r2, #34	; 0x22
   49a4c:	strb	r2, [r3]
   49a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49a54:	ldr	r3, [r3, #20]
   49a58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49a5c:	ldrb	r2, [r2, #26]
   49a60:	cmp	r2, #0
   49a64:	moveq	r2, #1
   49a68:	movne	r2, #0
   49a6c:	uxtb	r2, r2
   49a70:	add	r2, r3, r2
   49a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49a78:	str	r2, [r3, #20]
   49a7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49a80:	ldr	r3, [r3, #20]
   49a84:	add	r1, r3, #1
   49a88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49a8c:	str	r1, [r2, #20]
   49a90:	mov	r2, #58	; 0x3a
   49a94:	strb	r2, [r3]
   49a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49a9c:	ldr	r3, [r3, #20]
   49aa0:	mov	r2, #32
   49aa4:	strb	r2, [r3]
   49aa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49aac:	ldr	r3, [r3, #20]
   49ab0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49ab4:	ldrb	r2, [r2, #25]
   49ab8:	cmp	r2, #0
   49abc:	movne	r2, #1
   49ac0:	moveq	r2, #0
   49ac4:	uxtb	r2, r2
   49ac8:	add	r2, r3, r2
   49acc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49ad0:	str	r2, [r3, #20]
   49ad4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49ad8:	ldrb	r3, [r3, #27]
   49adc:	cmp	r3, #0
   49ae0:	beq	49b18 <flatcc_json_printer_union_field@@Base+0x278>
   49ae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49ae8:	ldr	r2, [r3, #20]
   49aec:	ldrb	r3, [fp, #-13]
   49af0:	mov	r1, r2
   49af4:	mov	r0, r3
   49af8:	bl	3d5e8 <flatcc_json_parser_struct_as_root@@Base+0x80c>
   49afc:	mov	r2, r0
   49b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49b04:	ldr	r3, [r3, #20]
   49b08:	add	r2, r3, r2
   49b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49b10:	str	r2, [r3, #20]
   49b14:	b	49b2c <flatcc_json_printer_union_field@@Base+0x28c>
   49b18:	ldrb	r2, [fp, #-13]
   49b1c:	ldr	r3, [fp, #8]
   49b20:	mov	r1, r2
   49b24:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49b28:	blx	r3
   49b2c:	ldrb	r3, [fp, #-13]
   49b30:	cmp	r3, #0
   49b34:	beq	49ba0 <flatcc_json_printer_union_field@@Base+0x300>
   49b38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   49b3c:	ldr	r3, [r3, #20]
   49b40:	add	r1, r3, #1
   49b44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   49b48:	str	r1, [r2, #20]
   49b4c:	mov	r2, #44	; 0x2c
   49b50:	strb	r2, [r3]
   49b54:	ldr	r3, [fp, #4]
   49b58:	mov	r2, r3
   49b5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   49b60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49b64:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   49b68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   49b6c:	ldr	r3, [r3, #12]
   49b70:	str	r3, [fp, #-24]	; 0xffffffe8
   49b74:	ldrb	r3, [fp, #-13]
   49b78:	strb	r3, [fp, #-20]	; 0xffffffec
   49b7c:	ldr	r3, [fp, #-12]
   49b80:	str	r3, [fp, #-28]	; 0xffffffe4
   49b84:	sub	r2, fp, #28
   49b88:	ldr	r3, [fp, #12]
   49b8c:	mov	r1, r2
   49b90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   49b94:	blx	r3
   49b98:	b	49ba0 <flatcc_json_printer_union_field@@Base+0x300>
   49b9c:	nop			; (mov r0, r0)
   49ba0:	sub	sp, fp, #4
   49ba4:	pop	{fp, pc}
   49ba8:	ldrdeq	r7, [r0], -r0

00049bac <flatcc_json_printer_union_table@@Base>:
   49bac:	push	{fp, lr}
   49bb0:	add	fp, sp, #4
   49bb4:	sub	sp, sp, #16
   49bb8:	str	r0, [fp, #-8]
   49bbc:	str	r1, [fp, #-12]
   49bc0:	str	r2, [fp, #-16]
   49bc4:	ldr	r3, [fp, #-12]
   49bc8:	ldr	r3, [r3]
   49bcc:	mov	r0, r3
   49bd0:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   49bd4:	mov	r1, r0
   49bd8:	ldr	r3, [fp, #-12]
   49bdc:	ldr	r2, [r3, #4]
   49be0:	ldr	r3, [fp, #-16]
   49be4:	ldr	r0, [fp, #-8]
   49be8:	bl	42b10 <flatcc_json_printer_enum_flag@@Base+0xbc>
   49bec:	nop			; (mov r0, r0)
   49bf0:	sub	sp, fp, #4
   49bf4:	pop	{fp, pc}

00049bf8 <flatcc_json_printer_union_struct@@Base>:
   49bf8:	push	{fp, lr}
   49bfc:	add	fp, sp, #4
   49c00:	sub	sp, sp, #16
   49c04:	str	r0, [fp, #-8]
   49c08:	str	r1, [fp, #-12]
   49c0c:	str	r2, [fp, #-16]
   49c10:	ldr	r3, [fp, #-8]
   49c14:	ldr	r3, [r3, #32]
   49c18:	add	r2, r3, #1
   49c1c:	ldr	r3, [fp, #-8]
   49c20:	str	r2, [r3, #32]
   49c24:	ldr	r3, [fp, #-8]
   49c28:	ldr	r3, [r3, #20]
   49c2c:	add	r1, r3, #1
   49c30:	ldr	r2, [fp, #-8]
   49c34:	str	r1, [r2, #20]
   49c38:	mov	r2, #123	; 0x7b
   49c3c:	strb	r2, [r3]
   49c40:	ldr	r3, [fp, #-12]
   49c44:	ldr	r3, [r3]
   49c48:	mov	r0, r3
   49c4c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   49c50:	mov	r2, r0
   49c54:	ldr	r3, [fp, #-16]
   49c58:	mov	r1, r2
   49c5c:	ldr	r0, [fp, #-8]
   49c60:	blx	r3
   49c64:	ldr	r3, [fp, #-8]
   49c68:	ldrb	r3, [r3, #25]
   49c6c:	cmp	r3, #0
   49c70:	beq	49cac <flatcc_json_printer_union_struct@@Base+0xb4>
   49c74:	ldr	r3, [fp, #-8]
   49c78:	ldr	r3, [r3, #20]
   49c7c:	add	r1, r3, #1
   49c80:	ldr	r2, [fp, #-8]
   49c84:	str	r1, [r2, #20]
   49c88:	mov	r2, #10
   49c8c:	strb	r2, [r3]
   49c90:	ldr	r3, [fp, #-8]
   49c94:	ldr	r3, [r3, #32]
   49c98:	sub	r2, r3, #1
   49c9c:	ldr	r3, [fp, #-8]
   49ca0:	str	r2, [r3, #32]
   49ca4:	ldr	r0, [fp, #-8]
   49ca8:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49cac:	ldr	r3, [fp, #-8]
   49cb0:	ldr	r3, [r3, #20]
   49cb4:	add	r1, r3, #1
   49cb8:	ldr	r2, [fp, #-8]
   49cbc:	str	r1, [r2, #20]
   49cc0:	mov	r2, #125	; 0x7d
   49cc4:	strb	r2, [r3]
   49cc8:	nop			; (mov r0, r0)
   49ccc:	sub	sp, fp, #4
   49cd0:	pop	{fp, pc}

00049cd4 <flatcc_json_printer_union_string@@Base>:
   49cd4:	push	{fp, lr}
   49cd8:	add	fp, sp, #4
   49cdc:	sub	sp, sp, #8
   49ce0:	str	r0, [fp, #-8]
   49ce4:	str	r1, [fp, #-12]
   49ce8:	ldr	r3, [fp, #-12]
   49cec:	ldr	r3, [r3]
   49cf0:	mov	r0, r3
   49cf4:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   49cf8:	mov	r3, r0
   49cfc:	mov	r1, r3
   49d00:	ldr	r0, [fp, #-8]
   49d04:	bl	42ac8 <flatcc_json_printer_enum_flag@@Base+0x74>
   49d08:	nop			; (mov r0, r0)
   49d0c:	sub	sp, fp, #4
   49d10:	pop	{fp, pc}

00049d14 <flatcc_json_printer_embedded_struct_field@@Base>:
   49d14:	push	{fp, lr}
   49d18:	add	fp, sp, #4
   49d1c:	sub	sp, sp, #16
   49d20:	str	r0, [fp, #-8]
   49d24:	str	r1, [fp, #-12]
   49d28:	str	r2, [fp, #-16]
   49d2c:	str	r3, [fp, #-20]	; 0xffffffec
   49d30:	ldr	r3, [fp, #-12]
   49d34:	cmp	r3, #0
   49d38:	beq	49d58 <flatcc_json_printer_embedded_struct_field@@Base+0x44>
   49d3c:	ldr	r3, [fp, #-8]
   49d40:	ldr	r3, [r3, #20]
   49d44:	add	r1, r3, #1
   49d48:	ldr	r2, [fp, #-8]
   49d4c:	str	r1, [r2, #20]
   49d50:	mov	r2, #44	; 0x2c
   49d54:	strb	r2, [r3]
   49d58:	ldr	r3, [fp, #8]
   49d5c:	mov	r2, r3
   49d60:	ldr	r1, [fp, #4]
   49d64:	ldr	r0, [fp, #-8]
   49d68:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   49d6c:	ldr	r3, [fp, #-8]
   49d70:	ldr	r3, [r3, #32]
   49d74:	add	r2, r3, #1
   49d78:	ldr	r3, [fp, #-8]
   49d7c:	str	r2, [r3, #32]
   49d80:	ldr	r3, [fp, #-8]
   49d84:	ldr	r3, [r3, #20]
   49d88:	add	r1, r3, #1
   49d8c:	ldr	r2, [fp, #-8]
   49d90:	str	r1, [r2, #20]
   49d94:	mov	r2, #123	; 0x7b
   49d98:	strb	r2, [r3]
   49d9c:	ldr	r2, [fp, #-16]
   49da0:	ldr	r3, [fp, #-20]	; 0xffffffec
   49da4:	add	r2, r2, r3
   49da8:	ldr	r3, [fp, #12]
   49dac:	mov	r1, r2
   49db0:	ldr	r0, [fp, #-8]
   49db4:	blx	r3
   49db8:	ldr	r3, [fp, #-8]
   49dbc:	ldrb	r3, [r3, #25]
   49dc0:	cmp	r3, #0
   49dc4:	beq	49e00 <flatcc_json_printer_embedded_struct_field@@Base+0xec>
   49dc8:	ldr	r3, [fp, #-8]
   49dcc:	ldr	r3, [r3, #20]
   49dd0:	add	r1, r3, #1
   49dd4:	ldr	r2, [fp, #-8]
   49dd8:	str	r1, [r2, #20]
   49ddc:	mov	r2, #10
   49de0:	strb	r2, [r3]
   49de4:	ldr	r3, [fp, #-8]
   49de8:	ldr	r3, [r3, #32]
   49dec:	sub	r2, r3, #1
   49df0:	ldr	r3, [fp, #-8]
   49df4:	str	r2, [r3, #32]
   49df8:	ldr	r0, [fp, #-8]
   49dfc:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49e00:	ldr	r3, [fp, #-8]
   49e04:	ldr	r3, [r3, #20]
   49e08:	add	r1, r3, #1
   49e0c:	ldr	r2, [fp, #-8]
   49e10:	str	r1, [r2, #20]
   49e14:	mov	r2, #125	; 0x7d
   49e18:	strb	r2, [r3]
   49e1c:	nop			; (mov r0, r0)
   49e20:	sub	sp, fp, #4
   49e24:	pop	{fp, pc}

00049e28 <flatcc_json_printer_struct_field@@Base>:
   49e28:	push	{fp, lr}
   49e2c:	add	fp, sp, #4
   49e30:	sub	sp, sp, #24
   49e34:	str	r0, [fp, #-16]
   49e38:	str	r1, [fp, #-20]	; 0xffffffec
   49e3c:	str	r2, [fp, #-24]	; 0xffffffe8
   49e40:	str	r3, [fp, #-28]	; 0xffffffe4
   49e44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   49e48:	ldr	r0, [fp, #-20]	; 0xffffffec
   49e4c:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   49e50:	str	r0, [fp, #-8]
   49e54:	ldr	r3, [fp, #-8]
   49e58:	cmp	r3, #0
   49e5c:	beq	49f50 <flatcc_json_printer_struct_field@@Base+0x128>
   49e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   49e64:	ldr	r3, [r3, #16]
   49e68:	add	r1, r3, #1
   49e6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   49e70:	str	r1, [r2, #16]
   49e74:	cmp	r3, #0
   49e78:	beq	49e98 <flatcc_json_printer_struct_field@@Base+0x70>
   49e7c:	ldr	r3, [fp, #-16]
   49e80:	ldr	r3, [r3, #20]
   49e84:	add	r1, r3, #1
   49e88:	ldr	r2, [fp, #-16]
   49e8c:	str	r1, [r2, #20]
   49e90:	mov	r2, #44	; 0x2c
   49e94:	strb	r2, [r3]
   49e98:	ldr	r3, [fp, #4]
   49e9c:	mov	r2, r3
   49ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49ea4:	ldr	r0, [fp, #-16]
   49ea8:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   49eac:	ldr	r3, [fp, #-16]
   49eb0:	ldr	r3, [r3, #32]
   49eb4:	add	r2, r3, #1
   49eb8:	ldr	r3, [fp, #-16]
   49ebc:	str	r2, [r3, #32]
   49ec0:	ldr	r3, [fp, #-16]
   49ec4:	ldr	r3, [r3, #20]
   49ec8:	add	r1, r3, #1
   49ecc:	ldr	r2, [fp, #-16]
   49ed0:	str	r1, [r2, #20]
   49ed4:	mov	r2, #123	; 0x7b
   49ed8:	strb	r2, [r3]
   49edc:	ldr	r3, [fp, #8]
   49ee0:	ldr	r1, [fp, #-8]
   49ee4:	ldr	r0, [fp, #-16]
   49ee8:	blx	r3
   49eec:	ldr	r3, [fp, #-16]
   49ef0:	ldrb	r3, [r3, #25]
   49ef4:	cmp	r3, #0
   49ef8:	beq	49f34 <flatcc_json_printer_struct_field@@Base+0x10c>
   49efc:	ldr	r3, [fp, #-16]
   49f00:	ldr	r3, [r3, #20]
   49f04:	add	r1, r3, #1
   49f08:	ldr	r2, [fp, #-16]
   49f0c:	str	r1, [r2, #20]
   49f10:	mov	r2, #10
   49f14:	strb	r2, [r3]
   49f18:	ldr	r3, [fp, #-16]
   49f1c:	ldr	r3, [r3, #32]
   49f20:	sub	r2, r3, #1
   49f24:	ldr	r3, [fp, #-16]
   49f28:	str	r2, [r3, #32]
   49f2c:	ldr	r0, [fp, #-16]
   49f30:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   49f34:	ldr	r3, [fp, #-16]
   49f38:	ldr	r3, [r3, #20]
   49f3c:	add	r1, r3, #1
   49f40:	ldr	r2, [fp, #-16]
   49f44:	str	r1, [r2, #20]
   49f48:	mov	r2, #125	; 0x7d
   49f4c:	strb	r2, [r3]
   49f50:	nop			; (mov r0, r0)
   49f54:	sub	sp, fp, #4
   49f58:	pop	{fp, pc}
   49f5c:	push	{fp, lr}
   49f60:	add	fp, sp, #4
   49f64:	sub	sp, sp, #24
   49f68:	str	r0, [fp, #-16]
   49f6c:	str	r1, [fp, #-20]	; 0xffffffec
   49f70:	str	r2, [fp, #-24]	; 0xffffffe8
   49f74:	str	r3, [fp, #-28]	; 0xffffffe4
   49f78:	mov	r3, #0
   49f7c:	str	r3, [fp, #-12]
   49f80:	ldr	r3, [fp, #-20]	; 0xffffffec
   49f84:	cmp	r3, #0
   49f88:	beq	49f98 <flatcc_json_printer_struct_field@@Base+0x170>
   49f8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   49f90:	cmp	r3, #7
   49f94:	bhi	49fc4 <flatcc_json_printer_struct_field@@Base+0x19c>
   49f98:	mov	r1, #1
   49f9c:	ldr	r0, [fp, #-16]
   49fa0:	bl	3d4c8 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   49fa4:	ldr	r3, [pc, #184]	; 4a064 <flatcc_json_printer_struct_field@@Base+0x23c>
   49fa8:	add	r3, pc, r3
   49fac:	ldr	r2, [pc, #180]	; 4a068 <flatcc_json_printer_struct_field@@Base+0x240>
   49fb0:	ldr	r1, [pc, #180]	; 4a06c <flatcc_json_printer_struct_field@@Base+0x244>
   49fb4:	add	r1, pc, r1
   49fb8:	ldr	r0, [pc, #176]	; 4a070 <flatcc_json_printer_struct_field@@Base+0x248>
   49fbc:	add	r0, pc, r0
   49fc0:	bl	14610 <__assert_fail@plt>
   49fc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   49fc8:	cmp	r3, #0
   49fcc:	beq	4a054 <flatcc_json_printer_struct_field@@Base+0x22c>
   49fd0:	sub	r3, fp, #12
   49fd4:	mov	r2, #4
   49fd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   49fdc:	mov	r0, r3
   49fe0:	bl	145c8 <strncpy@plt>
   49fe4:	ldr	r3, [fp, #-12]
   49fe8:	mov	r0, r3
   49fec:	bl	3d474 <flatcc_json_parser_struct_as_root@@Base+0x698>
   49ff0:	mov	r3, r0
   49ff4:	str	r3, [fp, #-12]
   49ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   49ffc:	add	r3, r3, #4
   4a000:	mov	r0, r3
   4a004:	bl	3d498 <flatcc_json_parser_struct_as_root@@Base+0x6bc>
   4a008:	str	r0, [fp, #-8]
   4a00c:	ldr	r3, [fp, #-12]
   4a010:	cmp	r3, #0
   4a014:	beq	4a054 <flatcc_json_printer_struct_field@@Base+0x22c>
   4a018:	ldr	r3, [fp, #-12]
   4a01c:	ldr	r2, [fp, #-8]
   4a020:	cmp	r2, r3
   4a024:	beq	4a054 <flatcc_json_printer_struct_field@@Base+0x22c>
   4a028:	mov	r1, #1
   4a02c:	ldr	r0, [fp, #-16]
   4a030:	bl	3d4c8 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4a034:	ldr	r3, [pc, #56]	; 4a074 <flatcc_json_printer_struct_field@@Base+0x24c>
   4a038:	add	r3, pc, r3
   4a03c:	ldr	r2, [pc, #52]	; 4a078 <flatcc_json_printer_struct_field@@Base+0x250>
   4a040:	ldr	r1, [pc, #52]	; 4a07c <flatcc_json_printer_struct_field@@Base+0x254>
   4a044:	add	r1, pc, r1
   4a048:	ldr	r0, [pc, #48]	; 4a080 <flatcc_json_printer_struct_field@@Base+0x258>
   4a04c:	add	r0, pc, r0
   4a050:	bl	14610 <__assert_fail@plt>
   4a054:	mov	r3, #1
   4a058:	mov	r0, r3
   4a05c:	sub	sp, fp, #4
   4a060:	pop	{fp, pc}
   4a064:	muleq	r0, ip, sl
   4a068:	strdeq	r0, [r0], -fp
   4a06c:	andeq	r7, r0, r4, asr #9
   4a070:	andeq	r7, r0, ip, asr #10
   4a074:	andeq	r7, r0, ip, lsl #20
   4a078:	andeq	r0, r0, r4, lsl #8
   4a07c:	andeq	r7, r0, r4, lsr r4
   4a080:	ldrdeq	r7, [r0], -ip

0004a084 <flatcc_json_printer_struct_as_root@@Base>:
   4a084:	push	{fp, lr}
   4a088:	add	fp, sp, #4
   4a08c:	sub	sp, sp, #16
   4a090:	str	r0, [fp, #-8]
   4a094:	str	r1, [fp, #-12]
   4a098:	str	r2, [fp, #-16]
   4a09c:	str	r3, [fp, #-20]	; 0xffffffec
   4a0a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a0a4:	ldr	r2, [fp, #-16]
   4a0a8:	ldr	r1, [fp, #-12]
   4a0ac:	ldr	r0, [fp, #-8]
   4a0b0:	bl	49f5c <flatcc_json_printer_struct_field@@Base+0x134>
   4a0b4:	mov	r3, r0
   4a0b8:	cmp	r3, #0
   4a0bc:	bne	4a0c8 <flatcc_json_printer_struct_as_root@@Base+0x44>
   4a0c0:	mvn	r3, #0
   4a0c4:	b	4a208 <flatcc_json_printer_struct_as_root@@Base+0x184>
   4a0c8:	ldr	r3, [fp, #-8]
   4a0cc:	ldr	r3, [r3, #32]
   4a0d0:	add	r2, r3, #1
   4a0d4:	ldr	r3, [fp, #-8]
   4a0d8:	str	r2, [r3, #32]
   4a0dc:	ldr	r3, [fp, #-8]
   4a0e0:	ldr	r3, [r3, #20]
   4a0e4:	add	r1, r3, #1
   4a0e8:	ldr	r2, [fp, #-8]
   4a0ec:	str	r1, [r2, #20]
   4a0f0:	mov	r2, #123	; 0x7b
   4a0f4:	strb	r2, [r3]
   4a0f8:	ldr	r0, [fp, #-12]
   4a0fc:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4a100:	mov	r2, r0
   4a104:	ldr	r3, [fp, #4]
   4a108:	mov	r1, r2
   4a10c:	ldr	r0, [fp, #-8]
   4a110:	blx	r3
   4a114:	ldr	r3, [fp, #-8]
   4a118:	ldrb	r3, [r3, #25]
   4a11c:	cmp	r3, #0
   4a120:	beq	4a15c <flatcc_json_printer_struct_as_root@@Base+0xd8>
   4a124:	ldr	r3, [fp, #-8]
   4a128:	ldr	r3, [r3, #20]
   4a12c:	add	r1, r3, #1
   4a130:	ldr	r2, [fp, #-8]
   4a134:	str	r1, [r2, #20]
   4a138:	mov	r2, #10
   4a13c:	strb	r2, [r3]
   4a140:	ldr	r3, [fp, #-8]
   4a144:	ldr	r3, [r3, #32]
   4a148:	sub	r2, r3, #1
   4a14c:	ldr	r3, [fp, #-8]
   4a150:	str	r2, [r3, #32]
   4a154:	ldr	r0, [fp, #-8]
   4a158:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4a15c:	ldr	r3, [fp, #-8]
   4a160:	ldr	r3, [r3, #20]
   4a164:	add	r1, r3, #1
   4a168:	ldr	r2, [fp, #-8]
   4a16c:	str	r1, [r2, #20]
   4a170:	mov	r2, #125	; 0x7d
   4a174:	strb	r2, [r3]
   4a178:	ldr	r3, [fp, #-8]
   4a17c:	ldrb	r3, [r3, #25]
   4a180:	cmp	r3, #0
   4a184:	beq	4a1b4 <flatcc_json_printer_struct_as_root@@Base+0x130>
   4a188:	ldr	r3, [fp, #-8]
   4a18c:	ldr	r3, [r3, #32]
   4a190:	cmp	r3, #0
   4a194:	bne	4a1b4 <flatcc_json_printer_struct_as_root@@Base+0x130>
   4a198:	ldr	r3, [fp, #-8]
   4a19c:	ldr	r3, [r3, #20]
   4a1a0:	add	r1, r3, #1
   4a1a4:	ldr	r2, [fp, #-8]
   4a1a8:	str	r1, [r2, #20]
   4a1ac:	mov	r2, #10
   4a1b0:	strb	r2, [r3]
   4a1b4:	ldr	r3, [fp, #-8]
   4a1b8:	ldr	r3, [r3, #44]	; 0x2c
   4a1bc:	mov	r1, #1
   4a1c0:	ldr	r0, [fp, #-8]
   4a1c4:	blx	r3
   4a1c8:	ldr	r0, [fp, #-8]
   4a1cc:	bl	3d508 <flatcc_json_parser_struct_as_root@@Base+0x72c>
   4a1d0:	mov	r3, r0
   4a1d4:	cmp	r3, #0
   4a1d8:	bne	4a204 <flatcc_json_printer_struct_as_root@@Base+0x180>
   4a1dc:	ldr	r3, [fp, #-8]
   4a1e0:	ldr	r3, [r3, #12]
   4a1e4:	ldr	r2, [fp, #-8]
   4a1e8:	ldr	r2, [r2, #20]
   4a1ec:	mov	r1, r2
   4a1f0:	ldr	r2, [fp, #-8]
   4a1f4:	ldr	r2, [r2]
   4a1f8:	sub	r2, r1, r2
   4a1fc:	add	r3, r3, r2
   4a200:	b	4a208 <flatcc_json_printer_struct_as_root@@Base+0x184>
   4a204:	mvn	r3, #0
   4a208:	mov	r0, r3
   4a20c:	sub	sp, fp, #4
   4a210:	pop	{fp, pc}

0004a214 <flatcc_json_printer_table_as_root@@Base>:
   4a214:	push	{fp, lr}
   4a218:	add	fp, sp, #4
   4a21c:	sub	sp, sp, #16
   4a220:	str	r0, [fp, #-8]
   4a224:	str	r1, [fp, #-12]
   4a228:	str	r2, [fp, #-16]
   4a22c:	str	r3, [fp, #-20]	; 0xffffffec
   4a230:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a234:	ldr	r2, [fp, #-16]
   4a238:	ldr	r1, [fp, #-12]
   4a23c:	ldr	r0, [fp, #-8]
   4a240:	bl	49f5c <flatcc_json_printer_struct_field@@Base+0x134>
   4a244:	mov	r3, r0
   4a248:	cmp	r3, #0
   4a24c:	bne	4a258 <flatcc_json_printer_table_as_root@@Base+0x44>
   4a250:	mvn	r3, #0
   4a254:	b	4a304 <flatcc_json_printer_table_as_root@@Base+0xf0>
   4a258:	ldr	r0, [fp, #-12]
   4a25c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4a260:	mov	r1, r0
   4a264:	ldr	r3, [fp, #4]
   4a268:	mov	r2, #100	; 0x64
   4a26c:	ldr	r0, [fp, #-8]
   4a270:	bl	42b10 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4a274:	ldr	r3, [fp, #-8]
   4a278:	ldrb	r3, [r3, #25]
   4a27c:	cmp	r3, #0
   4a280:	beq	4a2b0 <flatcc_json_printer_table_as_root@@Base+0x9c>
   4a284:	ldr	r3, [fp, #-8]
   4a288:	ldr	r3, [r3, #32]
   4a28c:	cmp	r3, #0
   4a290:	bne	4a2b0 <flatcc_json_printer_table_as_root@@Base+0x9c>
   4a294:	ldr	r3, [fp, #-8]
   4a298:	ldr	r3, [r3, #20]
   4a29c:	add	r1, r3, #1
   4a2a0:	ldr	r2, [fp, #-8]
   4a2a4:	str	r1, [r2, #20]
   4a2a8:	mov	r2, #10
   4a2ac:	strb	r2, [r3]
   4a2b0:	ldr	r3, [fp, #-8]
   4a2b4:	ldr	r3, [r3, #44]	; 0x2c
   4a2b8:	mov	r1, #1
   4a2bc:	ldr	r0, [fp, #-8]
   4a2c0:	blx	r3
   4a2c4:	ldr	r0, [fp, #-8]
   4a2c8:	bl	3d508 <flatcc_json_parser_struct_as_root@@Base+0x72c>
   4a2cc:	mov	r3, r0
   4a2d0:	cmp	r3, #0
   4a2d4:	bne	4a300 <flatcc_json_printer_table_as_root@@Base+0xec>
   4a2d8:	ldr	r3, [fp, #-8]
   4a2dc:	ldr	r3, [r3, #12]
   4a2e0:	ldr	r2, [fp, #-8]
   4a2e4:	ldr	r2, [r2, #20]
   4a2e8:	mov	r1, r2
   4a2ec:	ldr	r2, [fp, #-8]
   4a2f0:	ldr	r2, [r2]
   4a2f4:	sub	r2, r1, r2
   4a2f8:	add	r3, r3, r2
   4a2fc:	b	4a304 <flatcc_json_printer_table_as_root@@Base+0xf0>
   4a300:	mvn	r3, #0
   4a304:	mov	r0, r3
   4a308:	sub	sp, fp, #4
   4a30c:	pop	{fp, pc}

0004a310 <flatcc_json_printer_struct_as_nested_root@@Base>:
   4a310:	push	{fp, lr}
   4a314:	add	fp, sp, #4
   4a318:	sub	sp, sp, #24
   4a31c:	str	r0, [fp, #-16]
   4a320:	str	r1, [fp, #-20]	; 0xffffffec
   4a324:	str	r2, [fp, #-24]	; 0xffffffe8
   4a328:	str	r3, [fp, #-28]	; 0xffffffe4
   4a32c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a330:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a334:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   4a338:	str	r0, [fp, #-8]
   4a33c:	ldr	r3, [fp, #-8]
   4a340:	cmp	r3, #0
   4a344:	beq	4a48c <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   4a348:	ldr	r0, [fp, #-8]
   4a34c:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4a350:	mov	r2, r0
   4a354:	ldr	r3, [fp, #-8]
   4a358:	add	r3, r2, r3
   4a35c:	str	r3, [fp, #-8]
   4a360:	ldr	r0, [fp, #-8]
   4a364:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4a368:	str	r0, [fp, #-12]
   4a36c:	ldr	r3, [fp, #8]
   4a370:	ldr	r2, [fp, #-12]
   4a374:	ldr	r1, [fp, #-8]
   4a378:	ldr	r0, [fp, #-16]
   4a37c:	bl	49f5c <flatcc_json_printer_struct_field@@Base+0x134>
   4a380:	mov	r3, r0
   4a384:	cmp	r3, #0
   4a388:	beq	4a494 <flatcc_json_printer_struct_as_nested_root@@Base+0x184>
   4a38c:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a390:	ldr	r3, [r3, #16]
   4a394:	add	r1, r3, #1
   4a398:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a39c:	str	r1, [r2, #16]
   4a3a0:	cmp	r3, #0
   4a3a4:	beq	4a3c4 <flatcc_json_printer_struct_as_nested_root@@Base+0xb4>
   4a3a8:	ldr	r3, [fp, #-16]
   4a3ac:	ldr	r3, [r3, #20]
   4a3b0:	add	r1, r3, #1
   4a3b4:	ldr	r2, [fp, #-16]
   4a3b8:	str	r1, [r2, #20]
   4a3bc:	mov	r2, #44	; 0x2c
   4a3c0:	strb	r2, [r3]
   4a3c4:	ldr	r3, [fp, #4]
   4a3c8:	mov	r2, r3
   4a3cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a3d0:	ldr	r0, [fp, #-16]
   4a3d4:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   4a3d8:	ldr	r3, [fp, #-16]
   4a3dc:	ldr	r3, [r3, #32]
   4a3e0:	add	r2, r3, #1
   4a3e4:	ldr	r3, [fp, #-16]
   4a3e8:	str	r2, [r3, #32]
   4a3ec:	ldr	r3, [fp, #-16]
   4a3f0:	ldr	r3, [r3, #20]
   4a3f4:	add	r1, r3, #1
   4a3f8:	ldr	r2, [fp, #-16]
   4a3fc:	str	r1, [r2, #20]
   4a400:	mov	r2, #123	; 0x7b
   4a404:	strb	r2, [r3]
   4a408:	ldr	r0, [fp, #-8]
   4a40c:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4a410:	mov	r2, r0
   4a414:	ldr	r3, [fp, #12]
   4a418:	mov	r1, r2
   4a41c:	ldr	r0, [fp, #-16]
   4a420:	blx	r3
   4a424:	ldr	r3, [fp, #-16]
   4a428:	ldrb	r3, [r3, #25]
   4a42c:	cmp	r3, #0
   4a430:	beq	4a46c <flatcc_json_printer_struct_as_nested_root@@Base+0x15c>
   4a434:	ldr	r3, [fp, #-16]
   4a438:	ldr	r3, [r3, #20]
   4a43c:	add	r1, r3, #1
   4a440:	ldr	r2, [fp, #-16]
   4a444:	str	r1, [r2, #20]
   4a448:	mov	r2, #10
   4a44c:	strb	r2, [r3]
   4a450:	ldr	r3, [fp, #-16]
   4a454:	ldr	r3, [r3, #32]
   4a458:	sub	r2, r3, #1
   4a45c:	ldr	r3, [fp, #-16]
   4a460:	str	r2, [r3, #32]
   4a464:	ldr	r0, [fp, #-16]
   4a468:	bl	422a8 <flatcc_json_printer_fmt_bool@@Base+0x8e0>
   4a46c:	ldr	r3, [fp, #-16]
   4a470:	ldr	r3, [r3, #20]
   4a474:	add	r1, r3, #1
   4a478:	ldr	r2, [fp, #-16]
   4a47c:	str	r1, [r2, #20]
   4a480:	mov	r2, #125	; 0x7d
   4a484:	strb	r2, [r3]
   4a488:	b	4a498 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   4a48c:	nop			; (mov r0, r0)
   4a490:	b	4a498 <flatcc_json_printer_struct_as_nested_root@@Base+0x188>
   4a494:	nop			; (mov r0, r0)
   4a498:	sub	sp, fp, #4
   4a49c:	pop	{fp, pc}

0004a4a0 <flatcc_json_printer_table_as_nested_root@@Base>:
   4a4a0:	push	{fp, lr}
   4a4a4:	add	fp, sp, #4
   4a4a8:	sub	sp, sp, #24
   4a4ac:	str	r0, [fp, #-16]
   4a4b0:	str	r1, [fp, #-20]	; 0xffffffec
   4a4b4:	str	r2, [fp, #-24]	; 0xffffffe8
   4a4b8:	str	r3, [fp, #-28]	; 0xffffffe4
   4a4bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   4a4c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   4a4c4:	bl	418d0 <flatcc_json_printer_error_string@@Base+0xf4>
   4a4c8:	str	r0, [fp, #-8]
   4a4cc:	ldr	r3, [fp, #-8]
   4a4d0:	cmp	r3, #0
   4a4d4:	beq	4a598 <flatcc_json_printer_table_as_nested_root@@Base+0xf8>
   4a4d8:	ldr	r0, [fp, #-8]
   4a4dc:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4a4e0:	mov	r2, r0
   4a4e4:	ldr	r3, [fp, #-8]
   4a4e8:	add	r3, r2, r3
   4a4ec:	str	r3, [fp, #-8]
   4a4f0:	ldr	r0, [fp, #-8]
   4a4f4:	bl	3d31c <flatcc_json_parser_struct_as_root@@Base+0x540>
   4a4f8:	str	r0, [fp, #-12]
   4a4fc:	ldr	r3, [fp, #-8]
   4a500:	add	r3, r3, #4
   4a504:	str	r3, [fp, #-8]
   4a508:	ldr	r3, [fp, #8]
   4a50c:	ldr	r2, [fp, #-12]
   4a510:	ldr	r1, [fp, #-8]
   4a514:	ldr	r0, [fp, #-16]
   4a518:	bl	49f5c <flatcc_json_printer_struct_field@@Base+0x134>
   4a51c:	mov	r3, r0
   4a520:	cmp	r3, #0
   4a524:	beq	4a5a0 <flatcc_json_printer_table_as_nested_root@@Base+0x100>
   4a528:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a52c:	ldr	r3, [r3, #16]
   4a530:	add	r1, r3, #1
   4a534:	ldr	r2, [fp, #-20]	; 0xffffffec
   4a538:	str	r1, [r2, #16]
   4a53c:	cmp	r3, #0
   4a540:	beq	4a560 <flatcc_json_printer_table_as_nested_root@@Base+0xc0>
   4a544:	ldr	r3, [fp, #-16]
   4a548:	ldr	r3, [r3, #20]
   4a54c:	add	r1, r3, #1
   4a550:	ldr	r2, [fp, #-16]
   4a554:	str	r1, [r2, #20]
   4a558:	mov	r2, #44	; 0x2c
   4a55c:	strb	r2, [r3]
   4a560:	ldr	r3, [fp, #4]
   4a564:	mov	r2, r3
   4a568:	ldr	r1, [fp, #-28]	; 0xffffffe4
   4a56c:	ldr	r0, [fp, #-16]
   4a570:	bl	425b8 <flatcc_json_printer_get_level@@Base+0x128>
   4a574:	ldr	r0, [fp, #-8]
   4a578:	bl	41868 <flatcc_json_printer_error_string@@Base+0x8c>
   4a57c:	mov	r1, r0
   4a580:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a584:	ldr	r2, [r3, #12]
   4a588:	ldr	r3, [fp, #12]
   4a58c:	ldr	r0, [fp, #-16]
   4a590:	bl	42b10 <flatcc_json_printer_enum_flag@@Base+0xbc>
   4a594:	b	4a5a4 <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   4a598:	nop			; (mov r0, r0)
   4a59c:	b	4a5a4 <flatcc_json_printer_table_as_nested_root@@Base+0x104>
   4a5a0:	nop			; (mov r0, r0)
   4a5a4:	sub	sp, fp, #4
   4a5a8:	pop	{fp, pc}
   4a5ac:	push	{fp, lr}
   4a5b0:	add	fp, sp, #4
   4a5b4:	sub	sp, sp, #16
   4a5b8:	str	r0, [fp, #-16]
   4a5bc:	str	r1, [fp, #-20]	; 0xffffffec
   4a5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a5c4:	cmp	r3, #0
   4a5c8:	bne	4a680 <flatcc_json_printer_table_as_nested_root@@Base+0x1e0>
   4a5cc:	ldr	r3, [fp, #-16]
   4a5d0:	ldr	r2, [r3, #20]
   4a5d4:	ldr	r3, [fp, #-16]
   4a5d8:	ldr	r3, [r3, #16]
   4a5dc:	cmp	r2, r3
   4a5e0:	bcc	4a680 <flatcc_json_printer_table_as_nested_root@@Base+0x1e0>
   4a5e4:	ldr	r3, [fp, #-16]
   4a5e8:	ldr	r3, [r3, #20]
   4a5ec:	mov	r2, r3
   4a5f0:	ldr	r3, [fp, #-16]
   4a5f4:	ldr	r3, [r3, #16]
   4a5f8:	sub	r3, r2, r3
   4a5fc:	str	r3, [fp, #-8]
   4a600:	ldr	r3, [fp, #-16]
   4a604:	ldr	r0, [r3]
   4a608:	ldr	r3, [fp, #-16]
   4a60c:	ldr	r1, [r3, #8]
   4a610:	ldr	r3, [fp, #-16]
   4a614:	ldr	r3, [r3, #40]	; 0x28
   4a618:	mov	r2, #1
   4a61c:	bl	14568 <fwrite@plt>
   4a620:	ldr	r3, [fp, #-16]
   4a624:	ldr	r0, [r3]
   4a628:	ldr	r3, [fp, #-16]
   4a62c:	ldr	r2, [r3]
   4a630:	ldr	r3, [fp, #-16]
   4a634:	ldr	r3, [r3, #8]
   4a638:	add	r3, r2, r3
   4a63c:	ldr	r2, [fp, #-8]
   4a640:	mov	r1, r3
   4a644:	bl	14544 <memcpy@plt>
   4a648:	ldr	r3, [fp, #-16]
   4a64c:	ldr	r2, [r3]
   4a650:	ldr	r3, [fp, #-8]
   4a654:	add	r2, r2, r3
   4a658:	ldr	r3, [fp, #-16]
   4a65c:	str	r2, [r3, #20]
   4a660:	ldr	r3, [fp, #-16]
   4a664:	ldr	r2, [r3, #12]
   4a668:	ldr	r3, [fp, #-16]
   4a66c:	ldr	r3, [r3, #8]
   4a670:	add	r2, r2, r3
   4a674:	ldr	r3, [fp, #-16]
   4a678:	str	r2, [r3, #12]
   4a67c:	b	4a6e0 <flatcc_json_printer_table_as_nested_root@@Base+0x240>
   4a680:	ldr	r3, [fp, #-16]
   4a684:	ldr	r3, [r3, #20]
   4a688:	mov	r2, r3
   4a68c:	ldr	r3, [fp, #-16]
   4a690:	ldr	r3, [r3]
   4a694:	sub	r3, r2, r3
   4a698:	str	r3, [fp, #-12]
   4a69c:	ldr	r3, [fp, #-16]
   4a6a0:	ldr	r0, [r3]
   4a6a4:	ldr	r3, [fp, #-16]
   4a6a8:	ldr	r3, [r3, #40]	; 0x28
   4a6ac:	mov	r2, #1
   4a6b0:	ldr	r1, [fp, #-12]
   4a6b4:	bl	14568 <fwrite@plt>
   4a6b8:	ldr	r3, [fp, #-16]
   4a6bc:	ldr	r2, [r3]
   4a6c0:	ldr	r3, [fp, #-16]
   4a6c4:	str	r2, [r3, #20]
   4a6c8:	ldr	r3, [fp, #-16]
   4a6cc:	ldr	r2, [r3, #12]
   4a6d0:	ldr	r3, [fp, #-12]
   4a6d4:	add	r2, r2, r3
   4a6d8:	ldr	r3, [fp, #-16]
   4a6dc:	str	r2, [r3, #12]
   4a6e0:	ldr	r3, [fp, #-16]
   4a6e4:	ldr	r3, [r3, #20]
   4a6e8:	mov	r2, #0
   4a6ec:	strb	r2, [r3]
   4a6f0:	nop			; (mov r0, r0)
   4a6f4:	sub	sp, fp, #4
   4a6f8:	pop	{fp, pc}

0004a6fc <flatcc_json_printer_init@@Base>:
   4a6fc:	push	{r4, fp, lr}
   4a700:	add	fp, sp, #8
   4a704:	sub	sp, sp, #12
   4a708:	str	r0, [fp, #-16]
   4a70c:	str	r1, [fp, #-20]	; 0xffffffec
   4a710:	ldr	r4, [pc, #276]	; 4a82c <flatcc_json_printer_init@@Base+0x130>
   4a714:	add	r4, pc, r4
   4a718:	mov	r2, #48	; 0x30
   4a71c:	mov	r1, #0
   4a720:	ldr	r0, [fp, #-16]
   4a724:	bl	145bc <memset@plt>
   4a728:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a72c:	cmp	r3, #0
   4a730:	beq	4a73c <flatcc_json_printer_init@@Base+0x40>
   4a734:	ldr	r3, [fp, #-20]	; 0xffffffec
   4a738:	b	4a748 <flatcc_json_printer_init@@Base+0x4c>
   4a73c:	ldr	r3, [pc, #236]	; 4a830 <flatcc_json_printer_init@@Base+0x134>
   4a740:	ldr	r3, [r4, r3]
   4a744:	ldr	r3, [r3]
   4a748:	ldr	r2, [fp, #-16]
   4a74c:	str	r3, [r2, #40]	; 0x28
   4a750:	ldr	r3, [fp, #-16]
   4a754:	ldr	r2, [pc, #216]	; 4a834 <flatcc_json_printer_init@@Base+0x138>
   4a758:	add	r2, pc, r2
   4a75c:	str	r2, [r3, #44]	; 0x2c
   4a760:	ldr	r0, [pc, #208]	; 4a838 <flatcc_json_printer_init@@Base+0x13c>
   4a764:	bl	14574 <malloc@plt>
   4a768:	mov	r3, r0
   4a76c:	mov	r2, r3
   4a770:	ldr	r3, [fp, #-16]
   4a774:	str	r2, [r3]
   4a778:	ldr	r3, [fp, #-16]
   4a77c:	ldr	r3, [r3]
   4a780:	cmp	r3, #0
   4a784:	bne	4a790 <flatcc_json_printer_init@@Base+0x94>
   4a788:	mvn	r3, #0
   4a78c:	b	4a820 <flatcc_json_printer_init@@Base+0x124>
   4a790:	ldr	r3, [fp, #-16]
   4a794:	mov	r2, #1
   4a798:	strb	r2, [r3, #24]
   4a79c:	ldr	r3, [fp, #-16]
   4a7a0:	ldr	r2, [pc, #144]	; 4a838 <flatcc_json_printer_init@@Base+0x13c>
   4a7a4:	str	r2, [r3, #4]
   4a7a8:	ldr	r3, [fp, #-16]
   4a7ac:	mov	r2, #16384	; 0x4000
   4a7b0:	str	r2, [r3, #8]
   4a7b4:	ldr	r3, [fp, #-16]
   4a7b8:	ldr	r2, [r3]
   4a7bc:	ldr	r3, [fp, #-16]
   4a7c0:	str	r2, [r3, #20]
   4a7c4:	ldr	r3, [fp, #-16]
   4a7c8:	ldr	r2, [r3]
   4a7cc:	ldr	r3, [fp, #-16]
   4a7d0:	ldr	r3, [r3, #8]
   4a7d4:	add	r2, r2, r3
   4a7d8:	ldr	r3, [fp, #-16]
   4a7dc:	str	r2, [r3, #16]
   4a7e0:	ldr	r3, [fp, #-16]
   4a7e4:	ldr	r3, [r3, #8]
   4a7e8:	add	r2, r3, #64	; 0x40
   4a7ec:	ldr	r3, [fp, #-16]
   4a7f0:	ldr	r3, [r3, #4]
   4a7f4:	cmp	r2, r3
   4a7f8:	bls	4a81c <flatcc_json_printer_init@@Base+0x120>
   4a7fc:	ldr	r3, [pc, #56]	; 4a83c <flatcc_json_printer_init@@Base+0x140>
   4a800:	add	r3, pc, r3
   4a804:	ldr	r2, [pc, #52]	; 4a840 <flatcc_json_printer_init@@Base+0x144>
   4a808:	ldr	r1, [pc, #52]	; 4a844 <flatcc_json_printer_init@@Base+0x148>
   4a80c:	add	r1, pc, r1
   4a810:	ldr	r0, [pc, #48]	; 4a848 <flatcc_json_printer_init@@Base+0x14c>
   4a814:	add	r0, pc, r0
   4a818:	bl	14610 <__assert_fail@plt>
   4a81c:	mov	r3, #0
   4a820:	mov	r0, r3
   4a824:	sub	sp, fp, #8
   4a828:	pop	{r4, fp, pc}
   4a82c:	andeq	r7, r1, r4, ror #17
   4a830:	andeq	r0, r0, r4, ror r0
   4a834:			; <UNDEFINED> instruction: 0xfffffe4c
   4a838:	andeq	r4, r0, r0, asr #32
   4a83c:	andeq	r7, r0, r4, asr r2
   4a840:	andeq	r0, r0, fp, ror r4
   4a844:	andeq	r6, r0, ip, ror #24
   4a848:	andeq	r6, r0, r0, lsr sp
   4a84c:	push	{fp, lr}
   4a850:	add	fp, sp, #4
   4a854:	sub	sp, sp, #8
   4a858:	str	r0, [fp, #-8]
   4a85c:	str	r1, [fp, #-12]
   4a860:	ldr	r3, [fp, #-8]
   4a864:	ldr	r2, [r3, #20]
   4a868:	ldr	r3, [fp, #-8]
   4a86c:	ldr	r3, [r3, #16]
   4a870:	cmp	r2, r3
   4a874:	bcc	4a8c0 <flatcc_json_printer_init@@Base+0x1c4>
   4a878:	mov	r1, #3
   4a87c:	ldr	r0, [fp, #-8]
   4a880:	bl	3d4c8 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4a884:	ldr	r3, [fp, #-8]
   4a888:	ldr	r3, [r3, #12]
   4a88c:	ldr	r2, [fp, #-8]
   4a890:	ldr	r2, [r2, #20]
   4a894:	mov	r1, r2
   4a898:	ldr	r2, [fp, #-8]
   4a89c:	ldr	r2, [r2]
   4a8a0:	sub	r2, r1, r2
   4a8a4:	add	r2, r3, r2
   4a8a8:	ldr	r3, [fp, #-8]
   4a8ac:	str	r2, [r3, #12]
   4a8b0:	ldr	r3, [fp, #-8]
   4a8b4:	ldr	r2, [r3]
   4a8b8:	ldr	r3, [fp, #-8]
   4a8bc:	str	r2, [r3, #20]
   4a8c0:	ldr	r3, [fp, #-8]
   4a8c4:	ldr	r3, [r3, #20]
   4a8c8:	mov	r2, #0
   4a8cc:	strb	r2, [r3]
   4a8d0:	nop			; (mov r0, r0)
   4a8d4:	sub	sp, fp, #4
   4a8d8:	pop	{fp, pc}

0004a8dc <flatcc_json_printer_init_buffer@@Base>:
   4a8dc:	push	{fp, lr}
   4a8e0:	add	fp, sp, #4
   4a8e4:	sub	sp, sp, #16
   4a8e8:	str	r0, [fp, #-8]
   4a8ec:	str	r1, [fp, #-12]
   4a8f0:	str	r2, [fp, #-16]
   4a8f4:	ldr	r3, [fp, #-16]
   4a8f8:	cmp	r3, #63	; 0x3f
   4a8fc:	bhi	4a920 <flatcc_json_printer_init_buffer@@Base+0x44>
   4a900:	ldr	r3, [pc, #180]	; 4a9bc <flatcc_json_printer_init_buffer@@Base+0xe0>
   4a904:	add	r3, pc, r3
   4a908:	ldr	r2, [pc, #176]	; 4a9c0 <flatcc_json_printer_init_buffer@@Base+0xe4>
   4a90c:	ldr	r1, [pc, #176]	; 4a9c4 <flatcc_json_printer_init_buffer@@Base+0xe8>
   4a910:	add	r1, pc, r1
   4a914:	ldr	r0, [pc, #172]	; 4a9c8 <flatcc_json_printer_init_buffer@@Base+0xec>
   4a918:	add	r0, pc, r0
   4a91c:	bl	14610 <__assert_fail@plt>
   4a920:	ldr	r3, [fp, #-16]
   4a924:	cmp	r3, #63	; 0x3f
   4a928:	bhi	4a934 <flatcc_json_printer_init_buffer@@Base+0x58>
   4a92c:	mvn	r3, #0
   4a930:	b	4a9b0 <flatcc_json_printer_init_buffer@@Base+0xd4>
   4a934:	mov	r2, #48	; 0x30
   4a938:	mov	r1, #0
   4a93c:	ldr	r0, [fp, #-8]
   4a940:	bl	145bc <memset@plt>
   4a944:	ldr	r3, [fp, #-8]
   4a948:	ldr	r2, [fp, #-12]
   4a94c:	str	r2, [r3]
   4a950:	ldr	r3, [fp, #-8]
   4a954:	ldr	r2, [fp, #-16]
   4a958:	str	r2, [r3, #4]
   4a95c:	ldr	r3, [fp, #-8]
   4a960:	ldr	r3, [r3, #4]
   4a964:	sub	r2, r3, #64	; 0x40
   4a968:	ldr	r3, [fp, #-8]
   4a96c:	str	r2, [r3, #8]
   4a970:	ldr	r3, [fp, #-8]
   4a974:	ldr	r2, [r3]
   4a978:	ldr	r3, [fp, #-8]
   4a97c:	str	r2, [r3, #20]
   4a980:	ldr	r3, [fp, #-8]
   4a984:	ldr	r2, [r3]
   4a988:	ldr	r3, [fp, #-8]
   4a98c:	ldr	r3, [r3, #8]
   4a990:	add	r2, r2, r3
   4a994:	ldr	r3, [fp, #-8]
   4a998:	str	r2, [r3, #16]
   4a99c:	ldr	r3, [fp, #-8]
   4a9a0:	ldr	r2, [pc, #36]	; 4a9cc <flatcc_json_printer_init_buffer@@Base+0xf0>
   4a9a4:	add	r2, pc, r2
   4a9a8:	str	r2, [r3, #44]	; 0x2c
   4a9ac:	mov	r3, #0
   4a9b0:	mov	r0, r3
   4a9b4:	sub	sp, fp, #4
   4a9b8:	pop	{fp, pc}
   4a9bc:	andeq	r7, r0, ip, ror #2
   4a9c0:	andeq	r0, r0, sp, lsl #9
   4a9c4:	andeq	r6, r0, r8, ror #22
   4a9c8:	andeq	r6, r0, r8, ror #24
   4a9cc:			; <UNDEFINED> instruction: 0xfffffea0
   4a9d0:	push	{fp, lr}
   4a9d4:	add	fp, sp, #4
   4a9d8:	sub	sp, sp, #16
   4a9dc:	str	r0, [fp, #-16]
   4a9e0:	str	r1, [fp, #-20]	; 0xffffffec
   4a9e4:	ldr	r3, [fp, #-16]
   4a9e8:	ldr	r3, [r3, #20]
   4a9ec:	mov	r2, r3
   4a9f0:	ldr	r3, [fp, #-16]
   4a9f4:	ldr	r3, [r3]
   4a9f8:	sub	r3, r2, r3
   4a9fc:	str	r3, [fp, #-8]
   4aa00:	ldr	r3, [fp, #-16]
   4aa04:	ldr	r3, [r3, #20]
   4aa08:	mov	r2, #0
   4aa0c:	strb	r2, [r3]
   4aa10:	ldr	r3, [fp, #-16]
   4aa14:	ldr	r2, [r3, #20]
   4aa18:	ldr	r3, [fp, #-16]
   4aa1c:	ldr	r3, [r3, #16]
   4aa20:	cmp	r2, r3
   4aa24:	bcc	4ab04 <flatcc_json_printer_init_buffer@@Base+0x228>
   4aa28:	ldr	r3, [fp, #-16]
   4aa2c:	ldr	r2, [r3]
   4aa30:	ldr	r3, [fp, #-16]
   4aa34:	ldr	r3, [r3, #4]
   4aa38:	lsl	r3, r3, #1
   4aa3c:	mov	r1, r3
   4aa40:	mov	r0, r2
   4aa44:	bl	1455c <realloc@plt>
   4aa48:	str	r0, [fp, #-12]
   4aa4c:	ldr	r3, [fp, #-12]
   4aa50:	cmp	r3, #0
   4aa54:	bne	4aa90 <flatcc_json_printer_init_buffer@@Base+0x1b4>
   4aa58:	mov	r1, #3
   4aa5c:	ldr	r0, [fp, #-16]
   4aa60:	bl	3d4c8 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4aa64:	ldr	r3, [fp, #-16]
   4aa68:	ldr	r2, [r3, #12]
   4aa6c:	ldr	r3, [fp, #-8]
   4aa70:	add	r2, r2, r3
   4aa74:	ldr	r3, [fp, #-16]
   4aa78:	str	r2, [r3, #12]
   4aa7c:	ldr	r3, [fp, #-16]
   4aa80:	ldr	r2, [r3]
   4aa84:	ldr	r3, [fp, #-16]
   4aa88:	str	r2, [r3, #20]
   4aa8c:	b	4aaf0 <flatcc_json_printer_init_buffer@@Base+0x214>
   4aa90:	ldr	r3, [fp, #-16]
   4aa94:	ldr	r3, [r3, #4]
   4aa98:	lsl	r2, r3, #1
   4aa9c:	ldr	r3, [fp, #-16]
   4aaa0:	str	r2, [r3, #4]
   4aaa4:	ldr	r3, [fp, #-16]
   4aaa8:	ldr	r3, [r3, #4]
   4aaac:	sub	r2, r3, #64	; 0x40
   4aab0:	ldr	r3, [fp, #-16]
   4aab4:	str	r2, [r3, #8]
   4aab8:	ldr	r3, [fp, #-16]
   4aabc:	ldr	r2, [fp, #-12]
   4aac0:	str	r2, [r3]
   4aac4:	ldr	r2, [fp, #-12]
   4aac8:	ldr	r3, [fp, #-8]
   4aacc:	add	r2, r2, r3
   4aad0:	ldr	r3, [fp, #-16]
   4aad4:	str	r2, [r3, #20]
   4aad8:	ldr	r3, [fp, #-16]
   4aadc:	ldr	r3, [r3, #8]
   4aae0:	ldr	r2, [fp, #-12]
   4aae4:	add	r2, r2, r3
   4aae8:	ldr	r3, [fp, #-16]
   4aaec:	str	r2, [r3, #16]
   4aaf0:	ldr	r3, [fp, #-16]
   4aaf4:	ldr	r3, [r3, #20]
   4aaf8:	mov	r2, #0
   4aafc:	strb	r2, [r3]
   4ab00:	b	4ab08 <flatcc_json_printer_init_buffer@@Base+0x22c>
   4ab04:	nop			; (mov r0, r0)
   4ab08:	sub	sp, fp, #4
   4ab0c:	pop	{fp, pc}

0004ab10 <flatcc_json_printer_init_dynamic_buffer@@Base>:
   4ab10:	push	{fp, lr}
   4ab14:	add	fp, sp, #4
   4ab18:	sub	sp, sp, #8
   4ab1c:	str	r0, [fp, #-8]
   4ab20:	str	r1, [fp, #-12]
   4ab24:	ldr	r3, [fp, #-12]
   4ab28:	cmp	r3, #0
   4ab2c:	bne	4ab38 <flatcc_json_printer_init_dynamic_buffer@@Base+0x28>
   4ab30:	mov	r3, #4096	; 0x1000
   4ab34:	str	r3, [fp, #-12]
   4ab38:	ldr	r3, [fp, #-12]
   4ab3c:	cmp	r3, #63	; 0x3f
   4ab40:	bhi	4ab4c <flatcc_json_printer_init_dynamic_buffer@@Base+0x3c>
   4ab44:	mov	r3, #64	; 0x40
   4ab48:	str	r3, [fp, #-12]
   4ab4c:	mov	r2, #48	; 0x30
   4ab50:	mov	r1, #0
   4ab54:	ldr	r0, [fp, #-8]
   4ab58:	bl	145bc <memset@plt>
   4ab5c:	ldr	r0, [fp, #-12]
   4ab60:	bl	14574 <malloc@plt>
   4ab64:	mov	r3, r0
   4ab68:	mov	r2, r3
   4ab6c:	ldr	r3, [fp, #-8]
   4ab70:	str	r2, [r3]
   4ab74:	ldr	r3, [fp, #-8]
   4ab78:	mov	r2, #1
   4ab7c:	strb	r2, [r3, #24]
   4ab80:	ldr	r3, [fp, #-8]
   4ab84:	ldr	r2, [fp, #-12]
   4ab88:	str	r2, [r3, #4]
   4ab8c:	ldr	r3, [fp, #-8]
   4ab90:	ldr	r3, [r3, #4]
   4ab94:	sub	r2, r3, #64	; 0x40
   4ab98:	ldr	r3, [fp, #-8]
   4ab9c:	str	r2, [r3, #8]
   4aba0:	ldr	r3, [fp, #-8]
   4aba4:	ldr	r2, [r3]
   4aba8:	ldr	r3, [fp, #-8]
   4abac:	str	r2, [r3, #20]
   4abb0:	ldr	r3, [fp, #-8]
   4abb4:	ldr	r2, [r3]
   4abb8:	ldr	r3, [fp, #-8]
   4abbc:	ldr	r3, [r3, #8]
   4abc0:	add	r2, r2, r3
   4abc4:	ldr	r3, [fp, #-8]
   4abc8:	str	r2, [r3, #16]
   4abcc:	ldr	r3, [fp, #-8]
   4abd0:	ldr	r2, [pc, #56]	; 4ac10 <flatcc_json_printer_init_dynamic_buffer@@Base+0x100>
   4abd4:	add	r2, pc, r2
   4abd8:	str	r2, [r3, #44]	; 0x2c
   4abdc:	ldr	r3, [fp, #-8]
   4abe0:	ldr	r3, [r3]
   4abe4:	cmp	r3, #0
   4abe8:	bne	4ac00 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf0>
   4abec:	mov	r1, #3
   4abf0:	ldr	r0, [fp, #-8]
   4abf4:	bl	3d4c8 <flatcc_json_parser_struct_as_root@@Base+0x6ec>
   4abf8:	mvn	r3, #0
   4abfc:	b	4ac04 <flatcc_json_printer_init_dynamic_buffer@@Base+0xf4>
   4ac00:	mov	r3, #0
   4ac04:	mov	r0, r3
   4ac08:	sub	sp, fp, #4
   4ac0c:	pop	{fp, pc}
   4ac10:			; <UNDEFINED> instruction: 0xfffffdf4

0004ac14 <flatcc_json_printer_get_buffer@@Base>:
   4ac14:	push	{fp, lr}
   4ac18:	add	fp, sp, #4
   4ac1c:	sub	sp, sp, #8
   4ac20:	str	r0, [fp, #-8]
   4ac24:	str	r1, [fp, #-12]
   4ac28:	ldr	r3, [fp, #-8]
   4ac2c:	ldr	r3, [r3, #44]	; 0x2c
   4ac30:	mov	r1, #0
   4ac34:	ldr	r0, [fp, #-8]
   4ac38:	blx	r3
   4ac3c:	ldr	r3, [fp, #-12]
   4ac40:	cmp	r3, #0
   4ac44:	beq	4ac6c <flatcc_json_printer_get_buffer@@Base+0x58>
   4ac48:	ldr	r3, [fp, #-8]
   4ac4c:	ldr	r3, [r3, #20]
   4ac50:	mov	r2, r3
   4ac54:	ldr	r3, [fp, #-8]
   4ac58:	ldr	r3, [r3]
   4ac5c:	sub	r3, r2, r3
   4ac60:	mov	r2, r3
   4ac64:	ldr	r3, [fp, #-12]
   4ac68:	str	r2, [r3]
   4ac6c:	ldr	r3, [fp, #-8]
   4ac70:	ldr	r3, [r3]
   4ac74:	mov	r0, r3
   4ac78:	sub	sp, fp, #4
   4ac7c:	pop	{fp, pc}

0004ac80 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   4ac80:	push	{fp, lr}
   4ac84:	add	fp, sp, #4
   4ac88:	sub	sp, sp, #16
   4ac8c:	str	r0, [fp, #-16]
   4ac90:	str	r1, [fp, #-20]	; 0xffffffec
   4ac94:	ldr	r1, [fp, #-20]	; 0xffffffec
   4ac98:	ldr	r0, [fp, #-16]
   4ac9c:	bl	4ac14 <flatcc_json_printer_get_buffer@@Base>
   4aca0:	str	r0, [fp, #-8]
   4aca4:	mov	r2, #48	; 0x30
   4aca8:	mov	r1, #0
   4acac:	ldr	r0, [fp, #-16]
   4acb0:	bl	145bc <memset@plt>
   4acb4:	ldr	r3, [fp, #-8]
   4acb8:	mov	r0, r3
   4acbc:	sub	sp, fp, #4
   4acc0:	pop	{fp, pc}

0004acc4 <flatcc_json_printer_clear@@Base>:
   4acc4:	push	{fp, lr}
   4acc8:	add	fp, sp, #4
   4accc:	sub	sp, sp, #8
   4acd0:	str	r0, [fp, #-8]
   4acd4:	ldr	r3, [fp, #-8]
   4acd8:	ldrb	r3, [r3, #24]
   4acdc:	cmp	r3, #0
   4ace0:	beq	4ad04 <flatcc_json_printer_clear@@Base+0x40>
   4ace4:	ldr	r3, [fp, #-8]
   4ace8:	ldr	r3, [r3]
   4acec:	cmp	r3, #0
   4acf0:	beq	4ad04 <flatcc_json_printer_clear@@Base+0x40>
   4acf4:	ldr	r3, [fp, #-8]
   4acf8:	ldr	r3, [r3]
   4acfc:	mov	r0, r3
   4ad00:	bl	14538 <free@plt>
   4ad04:	mov	r2, #48	; 0x30
   4ad08:	mov	r1, #0
   4ad0c:	ldr	r0, [fp, #-8]
   4ad10:	bl	145bc <memset@plt>
   4ad14:	nop			; (mov r0, r0)
   4ad18:	sub	sp, fp, #4
   4ad1c:	pop	{fp, pc}
   4ad20:	subs	r2, r1, #1
   4ad24:	bxeq	lr
   4ad28:	bcc	4af00 <flatcc_json_printer_clear@@Base+0x23c>
   4ad2c:	cmp	r0, r1
   4ad30:	bls	4aee4 <flatcc_json_printer_clear@@Base+0x220>
   4ad34:	tst	r1, r2
   4ad38:	beq	4aef0 <flatcc_json_printer_clear@@Base+0x22c>
   4ad3c:	clz	r3, r0
   4ad40:	clz	r2, r1
   4ad44:	sub	r3, r2, r3
   4ad48:	rsbs	r3, r3, #31
   4ad4c:	addne	r3, r3, r3, lsl #1
   4ad50:	mov	r2, #0
   4ad54:	addne	pc, pc, r3, lsl #2
   4ad58:	nop			; (mov r0, r0)
   4ad5c:	cmp	r0, r1, lsl #31
   4ad60:	adc	r2, r2, r2
   4ad64:	subcs	r0, r0, r1, lsl #31
   4ad68:	cmp	r0, r1, lsl #30
   4ad6c:	adc	r2, r2, r2
   4ad70:	subcs	r0, r0, r1, lsl #30
   4ad74:	cmp	r0, r1, lsl #29
   4ad78:	adc	r2, r2, r2
   4ad7c:	subcs	r0, r0, r1, lsl #29
   4ad80:	cmp	r0, r1, lsl #28
   4ad84:	adc	r2, r2, r2
   4ad88:	subcs	r0, r0, r1, lsl #28
   4ad8c:	cmp	r0, r1, lsl #27
   4ad90:	adc	r2, r2, r2
   4ad94:	subcs	r0, r0, r1, lsl #27
   4ad98:	cmp	r0, r1, lsl #26
   4ad9c:	adc	r2, r2, r2
   4ada0:	subcs	r0, r0, r1, lsl #26
   4ada4:	cmp	r0, r1, lsl #25
   4ada8:	adc	r2, r2, r2
   4adac:	subcs	r0, r0, r1, lsl #25
   4adb0:	cmp	r0, r1, lsl #24
   4adb4:	adc	r2, r2, r2
   4adb8:	subcs	r0, r0, r1, lsl #24
   4adbc:	cmp	r0, r1, lsl #23
   4adc0:	adc	r2, r2, r2
   4adc4:	subcs	r0, r0, r1, lsl #23
   4adc8:	cmp	r0, r1, lsl #22
   4adcc:	adc	r2, r2, r2
   4add0:	subcs	r0, r0, r1, lsl #22
   4add4:	cmp	r0, r1, lsl #21
   4add8:	adc	r2, r2, r2
   4addc:	subcs	r0, r0, r1, lsl #21
   4ade0:	cmp	r0, r1, lsl #20
   4ade4:	adc	r2, r2, r2
   4ade8:	subcs	r0, r0, r1, lsl #20
   4adec:	cmp	r0, r1, lsl #19
   4adf0:	adc	r2, r2, r2
   4adf4:	subcs	r0, r0, r1, lsl #19
   4adf8:	cmp	r0, r1, lsl #18
   4adfc:	adc	r2, r2, r2
   4ae00:	subcs	r0, r0, r1, lsl #18
   4ae04:	cmp	r0, r1, lsl #17
   4ae08:	adc	r2, r2, r2
   4ae0c:	subcs	r0, r0, r1, lsl #17
   4ae10:	cmp	r0, r1, lsl #16
   4ae14:	adc	r2, r2, r2
   4ae18:	subcs	r0, r0, r1, lsl #16
   4ae1c:	cmp	r0, r1, lsl #15
   4ae20:	adc	r2, r2, r2
   4ae24:	subcs	r0, r0, r1, lsl #15
   4ae28:	cmp	r0, r1, lsl #14
   4ae2c:	adc	r2, r2, r2
   4ae30:	subcs	r0, r0, r1, lsl #14
   4ae34:	cmp	r0, r1, lsl #13
   4ae38:	adc	r2, r2, r2
   4ae3c:	subcs	r0, r0, r1, lsl #13
   4ae40:	cmp	r0, r1, lsl #12
   4ae44:	adc	r2, r2, r2
   4ae48:	subcs	r0, r0, r1, lsl #12
   4ae4c:	cmp	r0, r1, lsl #11
   4ae50:	adc	r2, r2, r2
   4ae54:	subcs	r0, r0, r1, lsl #11
   4ae58:	cmp	r0, r1, lsl #10
   4ae5c:	adc	r2, r2, r2
   4ae60:	subcs	r0, r0, r1, lsl #10
   4ae64:	cmp	r0, r1, lsl #9
   4ae68:	adc	r2, r2, r2
   4ae6c:	subcs	r0, r0, r1, lsl #9
   4ae70:	cmp	r0, r1, lsl #8
   4ae74:	adc	r2, r2, r2
   4ae78:	subcs	r0, r0, r1, lsl #8
   4ae7c:	cmp	r0, r1, lsl #7
   4ae80:	adc	r2, r2, r2
   4ae84:	subcs	r0, r0, r1, lsl #7
   4ae88:	cmp	r0, r1, lsl #6
   4ae8c:	adc	r2, r2, r2
   4ae90:	subcs	r0, r0, r1, lsl #6
   4ae94:	cmp	r0, r1, lsl #5
   4ae98:	adc	r2, r2, r2
   4ae9c:	subcs	r0, r0, r1, lsl #5
   4aea0:	cmp	r0, r1, lsl #4
   4aea4:	adc	r2, r2, r2
   4aea8:	subcs	r0, r0, r1, lsl #4
   4aeac:	cmp	r0, r1, lsl #3
   4aeb0:	adc	r2, r2, r2
   4aeb4:	subcs	r0, r0, r1, lsl #3
   4aeb8:	cmp	r0, r1, lsl #2
   4aebc:	adc	r2, r2, r2
   4aec0:	subcs	r0, r0, r1, lsl #2
   4aec4:	cmp	r0, r1, lsl #1
   4aec8:	adc	r2, r2, r2
   4aecc:	subcs	r0, r0, r1, lsl #1
   4aed0:	cmp	r0, r1
   4aed4:	adc	r2, r2, r2
   4aed8:	subcs	r0, r0, r1
   4aedc:	mov	r0, r2
   4aee0:	bx	lr
   4aee4:	moveq	r0, #1
   4aee8:	movne	r0, #0
   4aeec:	bx	lr
   4aef0:	clz	r2, r1
   4aef4:	rsb	r2, r2, #31
   4aef8:	lsr	r0, r0, r2
   4aefc:	bx	lr
   4af00:	cmp	r0, #0
   4af04:	mvnne	r0, #0
   4af08:	b	4b7b0 <flatcc_json_printer_clear@@Base+0xaec>
   4af0c:	cmp	r1, #0
   4af10:	beq	4af00 <flatcc_json_printer_clear@@Base+0x23c>
   4af14:	push	{r0, r1, lr}
   4af18:	bl	4ad20 <flatcc_json_printer_clear@@Base+0x5c>
   4af1c:	pop	{r1, r2, lr}
   4af20:	mul	r3, r2, r0
   4af24:	sub	r1, r1, r3
   4af28:	bx	lr
   4af2c:	cmp	r1, #0
   4af30:	beq	4b13c <flatcc_json_printer_clear@@Base+0x478>
   4af34:	eor	ip, r0, r1
   4af38:	rsbmi	r1, r1, #0
   4af3c:	subs	r2, r1, #1
   4af40:	beq	4b108 <flatcc_json_printer_clear@@Base+0x444>
   4af44:	movs	r3, r0
   4af48:	rsbmi	r3, r0, #0
   4af4c:	cmp	r3, r1
   4af50:	bls	4b114 <flatcc_json_printer_clear@@Base+0x450>
   4af54:	tst	r1, r2
   4af58:	beq	4b124 <flatcc_json_printer_clear@@Base+0x460>
   4af5c:	clz	r2, r3
   4af60:	clz	r0, r1
   4af64:	sub	r2, r0, r2
   4af68:	rsbs	r2, r2, #31
   4af6c:	addne	r2, r2, r2, lsl #1
   4af70:	mov	r0, #0
   4af74:	addne	pc, pc, r2, lsl #2
   4af78:	nop			; (mov r0, r0)
   4af7c:	cmp	r3, r1, lsl #31
   4af80:	adc	r0, r0, r0
   4af84:	subcs	r3, r3, r1, lsl #31
   4af88:	cmp	r3, r1, lsl #30
   4af8c:	adc	r0, r0, r0
   4af90:	subcs	r3, r3, r1, lsl #30
   4af94:	cmp	r3, r1, lsl #29
   4af98:	adc	r0, r0, r0
   4af9c:	subcs	r3, r3, r1, lsl #29
   4afa0:	cmp	r3, r1, lsl #28
   4afa4:	adc	r0, r0, r0
   4afa8:	subcs	r3, r3, r1, lsl #28
   4afac:	cmp	r3, r1, lsl #27
   4afb0:	adc	r0, r0, r0
   4afb4:	subcs	r3, r3, r1, lsl #27
   4afb8:	cmp	r3, r1, lsl #26
   4afbc:	adc	r0, r0, r0
   4afc0:	subcs	r3, r3, r1, lsl #26
   4afc4:	cmp	r3, r1, lsl #25
   4afc8:	adc	r0, r0, r0
   4afcc:	subcs	r3, r3, r1, lsl #25
   4afd0:	cmp	r3, r1, lsl #24
   4afd4:	adc	r0, r0, r0
   4afd8:	subcs	r3, r3, r1, lsl #24
   4afdc:	cmp	r3, r1, lsl #23
   4afe0:	adc	r0, r0, r0
   4afe4:	subcs	r3, r3, r1, lsl #23
   4afe8:	cmp	r3, r1, lsl #22
   4afec:	adc	r0, r0, r0
   4aff0:	subcs	r3, r3, r1, lsl #22
   4aff4:	cmp	r3, r1, lsl #21
   4aff8:	adc	r0, r0, r0
   4affc:	subcs	r3, r3, r1, lsl #21
   4b000:	cmp	r3, r1, lsl #20
   4b004:	adc	r0, r0, r0
   4b008:	subcs	r3, r3, r1, lsl #20
   4b00c:	cmp	r3, r1, lsl #19
   4b010:	adc	r0, r0, r0
   4b014:	subcs	r3, r3, r1, lsl #19
   4b018:	cmp	r3, r1, lsl #18
   4b01c:	adc	r0, r0, r0
   4b020:	subcs	r3, r3, r1, lsl #18
   4b024:	cmp	r3, r1, lsl #17
   4b028:	adc	r0, r0, r0
   4b02c:	subcs	r3, r3, r1, lsl #17
   4b030:	cmp	r3, r1, lsl #16
   4b034:	adc	r0, r0, r0
   4b038:	subcs	r3, r3, r1, lsl #16
   4b03c:	cmp	r3, r1, lsl #15
   4b040:	adc	r0, r0, r0
   4b044:	subcs	r3, r3, r1, lsl #15
   4b048:	cmp	r3, r1, lsl #14
   4b04c:	adc	r0, r0, r0
   4b050:	subcs	r3, r3, r1, lsl #14
   4b054:	cmp	r3, r1, lsl #13
   4b058:	adc	r0, r0, r0
   4b05c:	subcs	r3, r3, r1, lsl #13
   4b060:	cmp	r3, r1, lsl #12
   4b064:	adc	r0, r0, r0
   4b068:	subcs	r3, r3, r1, lsl #12
   4b06c:	cmp	r3, r1, lsl #11
   4b070:	adc	r0, r0, r0
   4b074:	subcs	r3, r3, r1, lsl #11
   4b078:	cmp	r3, r1, lsl #10
   4b07c:	adc	r0, r0, r0
   4b080:	subcs	r3, r3, r1, lsl #10
   4b084:	cmp	r3, r1, lsl #9
   4b088:	adc	r0, r0, r0
   4b08c:	subcs	r3, r3, r1, lsl #9
   4b090:	cmp	r3, r1, lsl #8
   4b094:	adc	r0, r0, r0
   4b098:	subcs	r3, r3, r1, lsl #8
   4b09c:	cmp	r3, r1, lsl #7
   4b0a0:	adc	r0, r0, r0
   4b0a4:	subcs	r3, r3, r1, lsl #7
   4b0a8:	cmp	r3, r1, lsl #6
   4b0ac:	adc	r0, r0, r0
   4b0b0:	subcs	r3, r3, r1, lsl #6
   4b0b4:	cmp	r3, r1, lsl #5
   4b0b8:	adc	r0, r0, r0
   4b0bc:	subcs	r3, r3, r1, lsl #5
   4b0c0:	cmp	r3, r1, lsl #4
   4b0c4:	adc	r0, r0, r0
   4b0c8:	subcs	r3, r3, r1, lsl #4
   4b0cc:	cmp	r3, r1, lsl #3
   4b0d0:	adc	r0, r0, r0
   4b0d4:	subcs	r3, r3, r1, lsl #3
   4b0d8:	cmp	r3, r1, lsl #2
   4b0dc:	adc	r0, r0, r0
   4b0e0:	subcs	r3, r3, r1, lsl #2
   4b0e4:	cmp	r3, r1, lsl #1
   4b0e8:	adc	r0, r0, r0
   4b0ec:	subcs	r3, r3, r1, lsl #1
   4b0f0:	cmp	r3, r1
   4b0f4:	adc	r0, r0, r0
   4b0f8:	subcs	r3, r3, r1
   4b0fc:	cmp	ip, #0
   4b100:	rsbmi	r0, r0, #0
   4b104:	bx	lr
   4b108:	teq	ip, r0
   4b10c:	rsbmi	r0, r0, #0
   4b110:	bx	lr
   4b114:	movcc	r0, #0
   4b118:	asreq	r0, ip, #31
   4b11c:	orreq	r0, r0, #1
   4b120:	bx	lr
   4b124:	clz	r2, r1
   4b128:	rsb	r2, r2, #31
   4b12c:	cmp	ip, #0
   4b130:	lsr	r0, r3, r2
   4b134:	rsbmi	r0, r0, #0
   4b138:	bx	lr
   4b13c:	cmp	r0, #0
   4b140:	mvngt	r0, #-2147483648	; 0x80000000
   4b144:	movlt	r0, #-2147483648	; 0x80000000
   4b148:	b	4b7b0 <flatcc_json_printer_clear@@Base+0xaec>
   4b14c:	cmp	r1, #0
   4b150:	beq	4b13c <flatcc_json_printer_clear@@Base+0x478>
   4b154:	push	{r0, r1, lr}
   4b158:	bl	4af34 <flatcc_json_printer_clear@@Base+0x270>
   4b15c:	pop	{r1, r2, lr}
   4b160:	mul	r3, r2, r0
   4b164:	sub	r1, r1, r3
   4b168:	bx	lr
   4b16c:	eor	r1, r1, #-2147483648	; 0x80000000
   4b170:	b	4b178 <flatcc_json_printer_clear@@Base+0x4b4>
   4b174:	eor	r3, r3, #-2147483648	; 0x80000000
   4b178:	push	{r4, r5, lr}
   4b17c:	lsl	r4, r1, #1
   4b180:	lsl	r5, r3, #1
   4b184:	teq	r4, r5
   4b188:	teqeq	r0, r2
   4b18c:	orrsne	ip, r4, r0
   4b190:	orrsne	ip, r5, r2
   4b194:	mvnsne	ip, r4, asr #21
   4b198:	mvnsne	ip, r5, asr #21
   4b19c:	beq	4b388 <flatcc_json_printer_clear@@Base+0x6c4>
   4b1a0:	lsr	r4, r4, #21
   4b1a4:	rsbs	r5, r4, r5, lsr #21
   4b1a8:	rsblt	r5, r5, #0
   4b1ac:	ble	4b1cc <flatcc_json_printer_clear@@Base+0x508>
   4b1b0:	add	r4, r4, r5
   4b1b4:	eor	r2, r0, r2
   4b1b8:	eor	r3, r1, r3
   4b1bc:	eor	r0, r2, r0
   4b1c0:	eor	r1, r3, r1
   4b1c4:	eor	r2, r0, r2
   4b1c8:	eor	r3, r1, r3
   4b1cc:	cmp	r5, #54	; 0x36
   4b1d0:	pophi	{r4, r5, pc}
   4b1d4:	tst	r1, #-2147483648	; 0x80000000
   4b1d8:	lsl	r1, r1, #12
   4b1dc:	mov	ip, #1048576	; 0x100000
   4b1e0:	orr	r1, ip, r1, lsr #12
   4b1e4:	beq	4b1f0 <flatcc_json_printer_clear@@Base+0x52c>
   4b1e8:	rsbs	r0, r0, #0
   4b1ec:	rsc	r1, r1, #0
   4b1f0:	tst	r3, #-2147483648	; 0x80000000
   4b1f4:	lsl	r3, r3, #12
   4b1f8:	orr	r3, ip, r3, lsr #12
   4b1fc:	beq	4b208 <flatcc_json_printer_clear@@Base+0x544>
   4b200:	rsbs	r2, r2, #0
   4b204:	rsc	r3, r3, #0
   4b208:	teq	r4, r5
   4b20c:	beq	4b370 <flatcc_json_printer_clear@@Base+0x6ac>
   4b210:	sub	r4, r4, #1
   4b214:	rsbs	lr, r5, #32
   4b218:	blt	4b234 <flatcc_json_printer_clear@@Base+0x570>
   4b21c:	lsl	ip, r2, lr
   4b220:	adds	r0, r0, r2, lsr r5
   4b224:	adc	r1, r1, #0
   4b228:	adds	r0, r0, r3, lsl lr
   4b22c:	adcs	r1, r1, r3, asr r5
   4b230:	b	4b250 <flatcc_json_printer_clear@@Base+0x58c>
   4b234:	sub	r5, r5, #32
   4b238:	add	lr, lr, #32
   4b23c:	cmp	r2, #1
   4b240:	lsl	ip, r3, lr
   4b244:	orrcs	ip, ip, #2
   4b248:	adds	r0, r0, r3, asr r5
   4b24c:	adcs	r1, r1, r3, asr #31
   4b250:	and	r5, r1, #-2147483648	; 0x80000000
   4b254:	bpl	4b264 <flatcc_json_printer_clear@@Base+0x5a0>
   4b258:	rsbs	ip, ip, #0
   4b25c:	rscs	r0, r0, #0
   4b260:	rsc	r1, r1, #0
   4b264:	cmp	r1, #1048576	; 0x100000
   4b268:	bcc	4b2a8 <flatcc_json_printer_clear@@Base+0x5e4>
   4b26c:	cmp	r1, #2097152	; 0x200000
   4b270:	bcc	4b290 <flatcc_json_printer_clear@@Base+0x5cc>
   4b274:	lsrs	r1, r1, #1
   4b278:	rrxs	r0, r0
   4b27c:	rrx	ip, ip
   4b280:	add	r4, r4, #1
   4b284:	lsl	r2, r4, #21
   4b288:	cmn	r2, #4194304	; 0x400000
   4b28c:	bcs	4b3e8 <flatcc_json_printer_clear@@Base+0x724>
   4b290:	cmp	ip, #-2147483648	; 0x80000000
   4b294:	lsrseq	ip, r0, #1
   4b298:	adcs	r0, r0, #0
   4b29c:	adc	r1, r1, r4, lsl #20
   4b2a0:	orr	r1, r1, r5
   4b2a4:	pop	{r4, r5, pc}
   4b2a8:	lsls	ip, ip, #1
   4b2ac:	adcs	r0, r0, r0
   4b2b0:	adc	r1, r1, r1
   4b2b4:	tst	r1, #1048576	; 0x100000
   4b2b8:	sub	r4, r4, #1
   4b2bc:	bne	4b290 <flatcc_json_printer_clear@@Base+0x5cc>
   4b2c0:	teq	r1, #0
   4b2c4:	moveq	r1, r0
   4b2c8:	moveq	r0, #0
   4b2cc:	clz	r3, r1
   4b2d0:	addeq	r3, r3, #32
   4b2d4:	sub	r3, r3, #11
   4b2d8:	subs	r2, r3, #32
   4b2dc:	bge	4b300 <flatcc_json_printer_clear@@Base+0x63c>
   4b2e0:	adds	r2, r2, #12
   4b2e4:	ble	4b2fc <flatcc_json_printer_clear@@Base+0x638>
   4b2e8:	add	ip, r2, #20
   4b2ec:	rsb	r2, r2, #12
   4b2f0:	lsl	r0, r1, ip
   4b2f4:	lsr	r1, r1, r2
   4b2f8:	b	4b310 <flatcc_json_printer_clear@@Base+0x64c>
   4b2fc:	add	r2, r2, #20
   4b300:	rsble	ip, r2, #32
   4b304:	lsl	r1, r1, r2
   4b308:	orrle	r1, r1, r0, lsr ip
   4b30c:	lslle	r0, r0, r2
   4b310:	subs	r4, r4, r3
   4b314:	addge	r1, r1, r4, lsl #20
   4b318:	orrge	r1, r1, r5
   4b31c:	popge	{r4, r5, pc}
   4b320:	mvn	r4, r4
   4b324:	subs	r4, r4, #31
   4b328:	bge	4b364 <flatcc_json_printer_clear@@Base+0x6a0>
   4b32c:	adds	r4, r4, #12
   4b330:	bgt	4b34c <flatcc_json_printer_clear@@Base+0x688>
   4b334:	add	r4, r4, #20
   4b338:	rsb	r2, r4, #32
   4b33c:	lsr	r0, r0, r4
   4b340:	orr	r0, r0, r1, lsl r2
   4b344:	orr	r1, r5, r1, lsr r4
   4b348:	pop	{r4, r5, pc}
   4b34c:	rsb	r4, r4, #12
   4b350:	rsb	r2, r4, #32
   4b354:	lsr	r0, r0, r2
   4b358:	orr	r0, r0, r1, lsl r4
   4b35c:	mov	r1, r5
   4b360:	pop	{r4, r5, pc}
   4b364:	lsr	r0, r1, r4
   4b368:	mov	r1, r5
   4b36c:	pop	{r4, r5, pc}
   4b370:	teq	r4, #0
   4b374:	eor	r3, r3, #1048576	; 0x100000
   4b378:	eoreq	r1, r1, #1048576	; 0x100000
   4b37c:	addeq	r4, r4, #1
   4b380:	subne	r5, r5, #1
   4b384:	b	4b210 <flatcc_json_printer_clear@@Base+0x54c>
   4b388:	mvns	ip, r4, asr #21
   4b38c:	mvnsne	ip, r5, asr #21
   4b390:	beq	4b3f8 <flatcc_json_printer_clear@@Base+0x734>
   4b394:	teq	r4, r5
   4b398:	teqeq	r0, r2
   4b39c:	beq	4b3b0 <flatcc_json_printer_clear@@Base+0x6ec>
   4b3a0:	orrs	ip, r4, r0
   4b3a4:	moveq	r1, r3
   4b3a8:	moveq	r0, r2
   4b3ac:	pop	{r4, r5, pc}
   4b3b0:	teq	r1, r3
   4b3b4:	movne	r1, #0
   4b3b8:	movne	r0, #0
   4b3bc:	popne	{r4, r5, pc}
   4b3c0:	lsrs	ip, r4, #21
   4b3c4:	bne	4b3d8 <flatcc_json_printer_clear@@Base+0x714>
   4b3c8:	lsls	r0, r0, #1
   4b3cc:	adcs	r1, r1, r1
   4b3d0:	orrcs	r1, r1, #-2147483648	; 0x80000000
   4b3d4:	pop	{r4, r5, pc}
   4b3d8:	adds	r4, r4, #4194304	; 0x400000
   4b3dc:	addcc	r1, r1, #1048576	; 0x100000
   4b3e0:	popcc	{r4, r5, pc}
   4b3e4:	and	r5, r1, #-2147483648	; 0x80000000
   4b3e8:	orr	r1, r5, #2130706432	; 0x7f000000
   4b3ec:	orr	r1, r1, #15728640	; 0xf00000
   4b3f0:	mov	r0, #0
   4b3f4:	pop	{r4, r5, pc}
   4b3f8:	mvns	ip, r4, asr #21
   4b3fc:	movne	r1, r3
   4b400:	movne	r0, r2
   4b404:	mvnseq	ip, r5, asr #21
   4b408:	movne	r3, r1
   4b40c:	movne	r2, r0
   4b410:	orrs	r4, r0, r1, lsl #12
   4b414:	orrseq	r5, r2, r3, lsl #12
   4b418:	teqeq	r1, r3
   4b41c:	orrne	r1, r1, #524288	; 0x80000
   4b420:	pop	{r4, r5, pc}
   4b424:	teq	r0, #0
   4b428:	moveq	r1, #0
   4b42c:	bxeq	lr
   4b430:	push	{r4, r5, lr}
   4b434:	mov	r4, #1024	; 0x400
   4b438:	add	r4, r4, #50	; 0x32
   4b43c:	mov	r5, #0
   4b440:	mov	r1, #0
   4b444:	b	4b2c0 <flatcc_json_printer_clear@@Base+0x5fc>
   4b448:	teq	r0, #0
   4b44c:	moveq	r1, #0
   4b450:	bxeq	lr
   4b454:	push	{r4, r5, lr}
   4b458:	mov	r4, #1024	; 0x400
   4b45c:	add	r4, r4, #50	; 0x32
   4b460:	ands	r5, r0, #-2147483648	; 0x80000000
   4b464:	rsbmi	r0, r0, #0
   4b468:	mov	r1, #0
   4b46c:	b	4b2c0 <flatcc_json_printer_clear@@Base+0x5fc>
   4b470:	lsls	r2, r0, #1
   4b474:	asr	r1, r2, #3
   4b478:	rrx	r1, r1
   4b47c:	lsl	r0, r2, #28
   4b480:	andsne	r3, r2, #-16777216	; 0xff000000
   4b484:	teqne	r3, #-16777216	; 0xff000000
   4b488:	eorne	r1, r1, #939524096	; 0x38000000
   4b48c:	bxne	lr
   4b490:	teq	r2, #0
   4b494:	teqne	r3, #-16777216	; 0xff000000
   4b498:	bxeq	lr
   4b49c:	push	{r4, r5, lr}
   4b4a0:	mov	r4, #896	; 0x380
   4b4a4:	and	r5, r1, #-2147483648	; 0x80000000
   4b4a8:	bic	r1, r1, #-2147483648	; 0x80000000
   4b4ac:	b	4b2c0 <flatcc_json_printer_clear@@Base+0x5fc>
   4b4b0:	orrs	r2, r0, r1
   4b4b4:	bxeq	lr
   4b4b8:	push	{r4, r5, lr}
   4b4bc:	mov	r5, #0
   4b4c0:	b	4b4e0 <flatcc_json_printer_clear@@Base+0x81c>
   4b4c4:	orrs	r2, r0, r1
   4b4c8:	bxeq	lr
   4b4cc:	push	{r4, r5, lr}
   4b4d0:	ands	r5, r1, #-2147483648	; 0x80000000
   4b4d4:	bpl	4b4e0 <flatcc_json_printer_clear@@Base+0x81c>
   4b4d8:	rsbs	r0, r0, #0
   4b4dc:	rsc	r1, r1, #0
   4b4e0:	mov	r4, #1024	; 0x400
   4b4e4:	add	r4, r4, #50	; 0x32
   4b4e8:	lsrs	ip, r1, #22
   4b4ec:	beq	4b264 <flatcc_json_printer_clear@@Base+0x5a0>
   4b4f0:	mov	r2, #3
   4b4f4:	lsrs	ip, ip, #3
   4b4f8:	addne	r2, r2, #3
   4b4fc:	lsrs	ip, ip, #3
   4b500:	addne	r2, r2, #3
   4b504:	add	r2, r2, ip, lsr #3
   4b508:	rsb	r3, r2, #32
   4b50c:	lsl	ip, r0, r3
   4b510:	lsr	r0, r0, r2
   4b514:	orr	r0, r0, r1, lsl r3
   4b518:	lsr	r1, r1, r2
   4b51c:	add	r4, r4, r2
   4b520:	b	4b264 <flatcc_json_printer_clear@@Base+0x5a0>
   4b524:	eor	r0, r0, #-2147483648	; 0x80000000
   4b528:	b	4b530 <flatcc_json_printer_clear@@Base+0x86c>
   4b52c:	eor	r1, r1, #-2147483648	; 0x80000000
   4b530:	lsls	r2, r0, #1
   4b534:	lslsne	r3, r1, #1
   4b538:	teqne	r2, r3
   4b53c:	mvnsne	ip, r2, asr #24
   4b540:	mvnsne	ip, r3, asr #24
   4b544:	beq	4b63c <flatcc_json_printer_clear@@Base+0x978>
   4b548:	lsr	r2, r2, #24
   4b54c:	rsbs	r3, r2, r3, lsr #24
   4b550:	addgt	r2, r2, r3
   4b554:	eorgt	r1, r0, r1
   4b558:	eorgt	r0, r1, r0
   4b55c:	eorgt	r1, r0, r1
   4b560:	rsblt	r3, r3, #0
   4b564:	cmp	r3, #25
   4b568:	bxhi	lr
   4b56c:	tst	r0, #-2147483648	; 0x80000000
   4b570:	orr	r0, r0, #8388608	; 0x800000
   4b574:	bic	r0, r0, #-16777216	; 0xff000000
   4b578:	rsbne	r0, r0, #0
   4b57c:	tst	r1, #-2147483648	; 0x80000000
   4b580:	orr	r1, r1, #8388608	; 0x800000
   4b584:	bic	r1, r1, #-16777216	; 0xff000000
   4b588:	rsbne	r1, r1, #0
   4b58c:	teq	r2, r3
   4b590:	beq	4b624 <flatcc_json_printer_clear@@Base+0x960>
   4b594:	sub	r2, r2, #1
   4b598:	adds	r0, r0, r1, asr r3
   4b59c:	rsb	r3, r3, #32
   4b5a0:	lsl	r1, r1, r3
   4b5a4:	and	r3, r0, #-2147483648	; 0x80000000
   4b5a8:	bpl	4b5b4 <flatcc_json_printer_clear@@Base+0x8f0>
   4b5ac:	rsbs	r1, r1, #0
   4b5b0:	rsc	r0, r0, #0
   4b5b4:	cmp	r0, #8388608	; 0x800000
   4b5b8:	bcc	4b5ec <flatcc_json_printer_clear@@Base+0x928>
   4b5bc:	cmp	r0, #16777216	; 0x1000000
   4b5c0:	bcc	4b5d8 <flatcc_json_printer_clear@@Base+0x914>
   4b5c4:	lsrs	r0, r0, #1
   4b5c8:	rrx	r1, r1
   4b5cc:	add	r2, r2, #1
   4b5d0:	cmp	r2, #254	; 0xfe
   4b5d4:	bcs	4b690 <flatcc_json_printer_clear@@Base+0x9cc>
   4b5d8:	cmp	r1, #-2147483648	; 0x80000000
   4b5dc:	adc	r0, r0, r2, lsl #23
   4b5e0:	biceq	r0, r0, #1
   4b5e4:	orr	r0, r0, r3
   4b5e8:	bx	lr
   4b5ec:	lsls	r1, r1, #1
   4b5f0:	adc	r0, r0, r0
   4b5f4:	tst	r0, #8388608	; 0x800000
   4b5f8:	sub	r2, r2, #1
   4b5fc:	bne	4b5d8 <flatcc_json_printer_clear@@Base+0x914>
   4b600:	clz	ip, r0
   4b604:	sub	ip, ip, #8
   4b608:	subs	r2, r2, ip
   4b60c:	lsl	r0, r0, ip
   4b610:	addge	r0, r0, r2, lsl #23
   4b614:	rsblt	r2, r2, #0
   4b618:	orrge	r0, r0, r3
   4b61c:	orrlt	r0, r3, r0, lsr r2
   4b620:	bx	lr
   4b624:	teq	r2, #0
   4b628:	eor	r1, r1, #8388608	; 0x800000
   4b62c:	eoreq	r0, r0, #8388608	; 0x800000
   4b630:	addeq	r2, r2, #1
   4b634:	subne	r3, r3, #1
   4b638:	b	4b594 <flatcc_json_printer_clear@@Base+0x8d0>
   4b63c:	lsl	r3, r1, #1
   4b640:	mvns	ip, r2, asr #24
   4b644:	mvnsne	ip, r3, asr #24
   4b648:	beq	4b69c <flatcc_json_printer_clear@@Base+0x9d8>
   4b64c:	teq	r2, r3
   4b650:	beq	4b660 <flatcc_json_printer_clear@@Base+0x99c>
   4b654:	teq	r2, #0
   4b658:	moveq	r0, r1
   4b65c:	bx	lr
   4b660:	teq	r0, r1
   4b664:	movne	r0, #0
   4b668:	bxne	lr
   4b66c:	tst	r2, #-16777216	; 0xff000000
   4b670:	bne	4b680 <flatcc_json_printer_clear@@Base+0x9bc>
   4b674:	lsls	r0, r0, #1
   4b678:	orrcs	r0, r0, #-2147483648	; 0x80000000
   4b67c:	bx	lr
   4b680:	adds	r2, r2, #33554432	; 0x2000000
   4b684:	addcc	r0, r0, #8388608	; 0x800000
   4b688:	bxcc	lr
   4b68c:	and	r3, r0, #-2147483648	; 0x80000000
   4b690:	orr	r0, r3, #2130706432	; 0x7f000000
   4b694:	orr	r0, r0, #8388608	; 0x800000
   4b698:	bx	lr
   4b69c:	mvns	r2, r2, asr #24
   4b6a0:	movne	r0, r1
   4b6a4:	mvnseq	r3, r3, asr #24
   4b6a8:	movne	r1, r0
   4b6ac:	lsls	r2, r0, #9
   4b6b0:	lslseq	r3, r1, #9
   4b6b4:	teqeq	r0, r1
   4b6b8:	orrne	r0, r0, #4194304	; 0x400000
   4b6bc:	bx	lr
   4b6c0:	mov	r3, #0
   4b6c4:	b	4b6d0 <flatcc_json_printer_clear@@Base+0xa0c>
   4b6c8:	ands	r3, r0, #-2147483648	; 0x80000000
   4b6cc:	rsbmi	r0, r0, #0
   4b6d0:	movs	ip, r0
   4b6d4:	bxeq	lr
   4b6d8:	orr	r3, r3, #1258291200	; 0x4b000000
   4b6dc:	mov	r1, r0
   4b6e0:	mov	r0, #0
   4b6e4:	b	4b728 <flatcc_json_printer_clear@@Base+0xa64>
   4b6e8:	orrs	r2, r0, r1
   4b6ec:	bxeq	lr
   4b6f0:	mov	r3, #0
   4b6f4:	b	4b710 <flatcc_json_printer_clear@@Base+0xa4c>
   4b6f8:	orrs	r2, r0, r1
   4b6fc:	bxeq	lr
   4b700:	ands	r3, r1, #-2147483648	; 0x80000000
   4b704:	bpl	4b710 <flatcc_json_printer_clear@@Base+0xa4c>
   4b708:	rsbs	r0, r0, #0
   4b70c:	rsc	r1, r1, #0
   4b710:	movs	ip, r1
   4b714:	moveq	ip, r0
   4b718:	moveq	r1, r0
   4b71c:	moveq	r0, #0
   4b720:	orr	r3, r3, #1526726656	; 0x5b000000
   4b724:	subeq	r3, r3, #268435456	; 0x10000000
   4b728:	sub	r3, r3, #8388608	; 0x800000
   4b72c:	clz	r2, ip
   4b730:	subs	r2, r2, #8
   4b734:	sub	r3, r3, r2, lsl #23
   4b738:	blt	4b758 <flatcc_json_printer_clear@@Base+0xa94>
   4b73c:	add	r3, r3, r1, lsl r2
   4b740:	lsl	ip, r0, r2
   4b744:	rsb	r2, r2, #32
   4b748:	cmp	ip, #-2147483648	; 0x80000000
   4b74c:	adc	r0, r3, r0, lsr r2
   4b750:	biceq	r0, r0, #1
   4b754:	bx	lr
   4b758:	add	r2, r2, #32
   4b75c:	lsl	ip, r1, r2
   4b760:	rsb	r2, r2, #32
   4b764:	orrs	r0, r0, ip, lsl #1
   4b768:	adc	r0, r3, r1, lsr r2
   4b76c:	biceq	r0, r0, ip, lsr #31
   4b770:	bx	lr
   4b774:	cmp	r3, #0
   4b778:	cmpeq	r2, #0
   4b77c:	bne	4b794 <flatcc_json_printer_clear@@Base+0xad0>
   4b780:	cmp	r1, #0
   4b784:	cmpeq	r0, #0
   4b788:	mvnne	r1, #0
   4b78c:	mvnne	r0, #0
   4b790:	b	4b7b0 <flatcc_json_printer_clear@@Base+0xaec>
   4b794:	sub	sp, sp, #8
   4b798:	push	{sp, lr}
   4b79c:	bl	4b7c0 <flatcc_json_printer_clear@@Base+0xafc>
   4b7a0:	ldr	lr, [sp, #4]
   4b7a4:	add	sp, sp, #8
   4b7a8:	pop	{r2, r3}
   4b7ac:	bx	lr
   4b7b0:	push	{r1, lr}
   4b7b4:	mov	r0, #8
   4b7b8:	bl	14514 <raise@plt>
   4b7bc:	pop	{r1, pc}
   4b7c0:	cmp	r1, r3
   4b7c4:	push	{r4, r5, r6, r7, r8, r9, lr}
   4b7c8:	cmpeq	r0, r2
   4b7cc:	mov	r4, r0
   4b7d0:	mov	r5, r1
   4b7d4:	ldr	r9, [sp, #28]
   4b7d8:	movcc	r0, #0
   4b7dc:	movcc	r1, #0
   4b7e0:	bcc	4b8d8 <flatcc_json_printer_clear@@Base+0xc14>
   4b7e4:	cmp	r3, #0
   4b7e8:	clzeq	ip, r2
   4b7ec:	clzne	ip, r3
   4b7f0:	addeq	ip, ip, #32
   4b7f4:	cmp	r5, #0
   4b7f8:	clzeq	r1, r4
   4b7fc:	addeq	r1, r1, #32
   4b800:	clzne	r1, r5
   4b804:	sub	ip, ip, r1
   4b808:	sub	lr, ip, #32
   4b80c:	lsl	r7, r3, ip
   4b810:	rsb	r8, ip, #32
   4b814:	orr	r7, r7, r2, lsl lr
   4b818:	orr	r7, r7, r2, lsr r8
   4b81c:	lsl	r6, r2, ip
   4b820:	cmp	r5, r7
   4b824:	cmpeq	r4, r6
   4b828:	movcc	r0, #0
   4b82c:	movcc	r1, #0
   4b830:	bcc	4b84c <flatcc_json_printer_clear@@Base+0xb88>
   4b834:	mov	r3, #1
   4b838:	subs	r4, r4, r6
   4b83c:	lsl	r1, r3, lr
   4b840:	lsl	r0, r3, ip
   4b844:	orr	r1, r1, r3, lsr r8
   4b848:	sbc	r5, r5, r7
   4b84c:	cmp	ip, #0
   4b850:	beq	4b8d8 <flatcc_json_printer_clear@@Base+0xc14>
   4b854:	lsrs	r3, r7, #1
   4b858:	rrx	r2, r6
   4b85c:	mov	r6, ip
   4b860:	b	4b884 <flatcc_json_printer_clear@@Base+0xbc0>
   4b864:	subs	r4, r4, r2
   4b868:	sbc	r5, r5, r3
   4b86c:	adds	r4, r4, r4
   4b870:	adc	r5, r5, r5
   4b874:	adds	r4, r4, #1
   4b878:	adc	r5, r5, #0
   4b87c:	subs	r6, r6, #1
   4b880:	beq	4b8a0 <flatcc_json_printer_clear@@Base+0xbdc>
   4b884:	cmp	r5, r3
   4b888:	cmpeq	r4, r2
   4b88c:	bcs	4b864 <flatcc_json_printer_clear@@Base+0xba0>
   4b890:	adds	r4, r4, r4
   4b894:	adc	r5, r5, r5
   4b898:	subs	r6, r6, #1
   4b89c:	bne	4b884 <flatcc_json_printer_clear@@Base+0xbc0>
   4b8a0:	lsr	r6, r4, ip
   4b8a4:	lsr	r7, r5, ip
   4b8a8:	orr	r6, r6, r5, lsl r8
   4b8ac:	adds	r2, r0, r4
   4b8b0:	orr	r6, r6, r5, lsr lr
   4b8b4:	adc	r3, r1, r5
   4b8b8:	lsl	r1, r7, ip
   4b8bc:	orr	r1, r1, r6, lsl lr
   4b8c0:	lsl	r0, r6, ip
   4b8c4:	orr	r1, r1, r6, lsr r8
   4b8c8:	subs	r0, r2, r0
   4b8cc:	mov	r4, r6
   4b8d0:	mov	r5, r7
   4b8d4:	sbc	r1, r3, r1
   4b8d8:	cmp	r9, #0
   4b8dc:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   4b8e0:	strd	r4, [r9]
   4b8e4:	pop	{r4, r5, r6, r7, r8, r9, pc}

0004b8e8 <__libc_csu_init@@Base>:
   4b8e8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   4b8ec:	mov	r7, r0
   4b8f0:	ldr	r6, [pc, #72]	; 4b940 <__libc_csu_init@@Base+0x58>
   4b8f4:	ldr	r5, [pc, #72]	; 4b944 <__libc_csu_init@@Base+0x5c>
   4b8f8:	add	r6, pc, r6
   4b8fc:	add	r5, pc, r5
   4b900:	sub	r6, r6, r5
   4b904:	mov	r8, r1
   4b908:	mov	r9, r2
   4b90c:	bl	144f4 <raise@plt-0x20>
   4b910:	asrs	r6, r6, #2
   4b914:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   4b918:	mov	r4, #0
   4b91c:	add	r4, r4, #1
   4b920:	ldr	r3, [r5], #4
   4b924:	mov	r2, r9
   4b928:	mov	r1, r8
   4b92c:	mov	r0, r7
   4b930:	blx	r3
   4b934:	cmp	r6, r4
   4b938:	bne	4b91c <__libc_csu_init@@Base+0x34>
   4b93c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   4b940:	andeq	r6, r1, r0, ror #11
   4b944:	ldrdeq	r6, [r1], -r8

0004b948 <__libc_csu_fini@@Base>:
   4b948:	bx	lr

Disassembly of section .fini:

0004b94c <.fini>:
   4b94c:	push	{r3, lr}
   4b950:	pop	{r3, pc}
