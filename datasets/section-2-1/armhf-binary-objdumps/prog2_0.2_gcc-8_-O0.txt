
../repos/prog2/0.2:     file format elf32-littlearm


Disassembly of section .init:

000105a0 <.init>:
   105a0:	push	{r3, lr}
   105a4:	bl	10650 <_start@@Base+0x3c>
   105a8:	pop	{r3, pc}

Disassembly of section .plt:

000105ac <printf@plt-0x14>:
   105ac:	push	{lr}		; (str lr, [sp, #-4]!)
   105b0:	ldr	lr, [pc, #4]	; 105bc <printf@plt-0x4>
   105b4:	add	lr, pc, lr
   105b8:	ldr	pc, [lr, #8]!
   105bc:	andeq	r0, r1, r4, asr #20

000105c0 <printf@plt>:
   105c0:	add	ip, pc, #0, 12
   105c4:	add	ip, ip, #16, 20	; 0x10000
   105c8:	ldr	pc, [ip, #2628]!	; 0xa44

000105cc <puts@plt>:
   105cc:	add	ip, pc, #0, 12
   105d0:	add	ip, ip, #16, 20	; 0x10000
   105d4:	ldr	pc, [ip, #2620]!	; 0xa3c

000105d8 <__libc_start_main@plt>:
   105d8:	add	ip, pc, #0, 12
   105dc:	add	ip, ip, #16, 20	; 0x10000
   105e0:	ldr	pc, [ip, #2612]!	; 0xa34

000105e4 <__gmon_start__@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #16, 20	; 0x10000
   105ec:	ldr	pc, [ip, #2604]!	; 0xa2c

000105f0 <putchar@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #16, 20	; 0x10000
   105f8:	ldr	pc, [ip, #2596]!	; 0xa24

000105fc <__isoc99_scanf@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #16, 20	; 0x10000
   10604:	ldr	pc, [ip, #2588]!	; 0xa1c

00010608 <abort@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #16, 20	; 0x10000
   10610:	ldr	pc, [ip, #2580]!	; 0xa14

Disassembly of section .text:

00010614 <_start@@Base>:
   10614:	mov	fp, #0
   10618:	mov	lr, #0
   1061c:	pop	{r1}		; (ldr r1, [sp], #4)
   10620:	mov	r2, sp
   10624:	push	{r2}		; (str r2, [sp, #-4]!)
   10628:	push	{r0}		; (str r0, [sp, #-4]!)
   1062c:	ldr	ip, [pc, #16]	; 10644 <_start@@Base+0x30>
   10630:	push	{ip}		; (str ip, [sp, #-4]!)
   10634:	ldr	r0, [pc, #12]	; 10648 <_start@@Base+0x34>
   10638:	ldr	r3, [pc, #12]	; 1064c <_start@@Base+0x38>
   1063c:	bl	105d8 <__libc_start_main@plt>
   10640:	bl	10608 <abort@plt>
   10644:	andeq	r0, r1, ip, lsl #19
   10648:	andeq	r0, r1, r4, lsl #14
   1064c:	andeq	r0, r1, ip, lsr #18
   10650:	ldr	r3, [pc, #20]	; 1066c <_start@@Base+0x58>
   10654:	ldr	r2, [pc, #20]	; 10670 <_start@@Base+0x5c>
   10658:	add	r3, pc, r3
   1065c:	ldr	r2, [r3, r2]
   10660:	cmp	r2, #0
   10664:	bxeq	lr
   10668:	b	105e4 <__gmon_start__@plt>
   1066c:	andeq	r0, r1, r0, lsr #19
   10670:	andeq	r0, r0, r8, lsr #32
   10674:	ldr	r0, [pc, #24]	; 10694 <_start@@Base+0x80>
   10678:	ldr	r3, [pc, #24]	; 10698 <_start@@Base+0x84>
   1067c:	cmp	r3, r0
   10680:	bxeq	lr
   10684:	ldr	r3, [pc, #16]	; 1069c <_start@@Base+0x88>
   10688:	cmp	r3, #0
   1068c:	bxeq	lr
   10690:	bx	r3
   10694:	andeq	r1, r2, r4, lsr r0
   10698:	andeq	r1, r2, r4, lsr r0
   1069c:	andeq	r0, r0, r0
   106a0:	ldr	r0, [pc, #36]	; 106cc <_start@@Base+0xb8>
   106a4:	ldr	r1, [pc, #36]	; 106d0 <_start@@Base+0xbc>
   106a8:	sub	r1, r1, r0
   106ac:	asr	r1, r1, #2
   106b0:	add	r1, r1, r1, lsr #31
   106b4:	asrs	r1, r1, #1
   106b8:	bxeq	lr
   106bc:	ldr	r3, [pc, #16]	; 106d4 <_start@@Base+0xc0>
   106c0:	cmp	r3, #0
   106c4:	bxeq	lr
   106c8:	bx	r3
   106cc:	andeq	r1, r2, r4, lsr r0
   106d0:	andeq	r1, r2, r4, lsr r0
   106d4:	andeq	r0, r0, r0
   106d8:	push	{r4, lr}
   106dc:	ldr	r4, [pc, #24]	; 106fc <_start@@Base+0xe8>
   106e0:	ldrb	r3, [r4]
   106e4:	cmp	r3, #0
   106e8:	popne	{r4, pc}
   106ec:	bl	10674 <_start@@Base+0x60>
   106f0:	mov	r3, #1
   106f4:	strb	r3, [r4]
   106f8:	pop	{r4, pc}
   106fc:	andeq	r1, r2, r4, lsr r0
   10700:	b	106a0 <_start@@Base+0x8c>

00010704 <main@@Base>:
   10704:	str	fp, [sp, #-8]!
   10708:	str	lr, [sp, #4]
   1070c:	add	fp, sp, #4
   10710:	sub	sp, sp, #48	; 0x30
   10714:	sub	r1, fp, #32
   10718:	mov	r2, #0
   1071c:	mov	r3, #0
   10720:	strd	r2, [r1]
   10724:	strd	r2, [r1, #8]
   10728:	mov	r3, r2
   1072c:	str	r3, [r1, #16]
   10730:	sub	r1, fp, #52	; 0x34
   10734:	mov	r2, #0
   10738:	mov	r3, #0
   1073c:	strd	r2, [r1]
   10740:	strd	r2, [r1, #8]
   10744:	mov	r3, r2
   10748:	str	r3, [r1, #16]
   1074c:	ldr	r3, [pc, #440]	; 1090c <main@@Base+0x208>
   10750:	add	r3, pc, r3
   10754:	mov	r0, r3
   10758:	bl	105cc <puts@plt>
   1075c:	mov	r3, #0
   10760:	str	r3, [fp, #-8]
   10764:	b	107b4 <main@@Base+0xb0>
   10768:	ldr	r3, [fp, #-8]
   1076c:	add	r3, r3, #1
   10770:	mov	r1, r3
   10774:	ldr	r3, [pc, #404]	; 10910 <main@@Base+0x20c>
   10778:	add	r3, pc, r3
   1077c:	mov	r0, r3
   10780:	bl	105c0 <printf@plt>
   10784:	sub	r2, fp, #32
   10788:	ldr	r3, [fp, #-8]
   1078c:	lsl	r3, r3, #2
   10790:	add	r3, r2, r3
   10794:	mov	r1, r3
   10798:	ldr	r3, [pc, #372]	; 10914 <main@@Base+0x210>
   1079c:	add	r3, pc, r3
   107a0:	mov	r0, r3
   107a4:	bl	105fc <__isoc99_scanf@plt>
   107a8:	ldr	r3, [fp, #-8]
   107ac:	add	r3, r3, #1
   107b0:	str	r3, [fp, #-8]
   107b4:	ldr	r3, [fp, #-8]
   107b8:	cmp	r3, #4
   107bc:	ble	10768 <main@@Base+0x64>
   107c0:	ldr	r3, [pc, #336]	; 10918 <main@@Base+0x214>
   107c4:	add	r3, pc, r3
   107c8:	mov	r0, r3
   107cc:	bl	105cc <puts@plt>
   107d0:	mov	r3, #0
   107d4:	str	r3, [fp, #-8]
   107d8:	b	10828 <main@@Base+0x124>
   107dc:	ldr	r3, [fp, #-8]
   107e0:	add	r3, r3, #1
   107e4:	mov	r1, r3
   107e8:	ldr	r3, [pc, #300]	; 1091c <main@@Base+0x218>
   107ec:	add	r3, pc, r3
   107f0:	mov	r0, r3
   107f4:	bl	105c0 <printf@plt>
   107f8:	sub	r2, fp, #52	; 0x34
   107fc:	ldr	r3, [fp, #-8]
   10800:	lsl	r3, r3, #2
   10804:	add	r3, r2, r3
   10808:	mov	r1, r3
   1080c:	ldr	r3, [pc, #268]	; 10920 <main@@Base+0x21c>
   10810:	add	r3, pc, r3
   10814:	mov	r0, r3
   10818:	bl	105fc <__isoc99_scanf@plt>
   1081c:	ldr	r3, [fp, #-8]
   10820:	add	r3, r3, #1
   10824:	str	r3, [fp, #-8]
   10828:	ldr	r3, [fp, #-8]
   1082c:	cmp	r3, #4
   10830:	ble	107dc <main@@Base+0xd8>
   10834:	mov	r0, #10
   10838:	bl	105f0 <putchar@plt>
   1083c:	ldr	r3, [pc, #224]	; 10924 <main@@Base+0x220>
   10840:	add	r3, pc, r3
   10844:	mov	r0, r3
   10848:	bl	105c0 <printf@plt>
   1084c:	mov	r3, #0
   10850:	str	r3, [fp, #-8]
   10854:	b	108e0 <main@@Base+0x1dc>
   10858:	mov	r3, #0
   1085c:	str	r3, [fp, #-12]
   10860:	b	108c8 <main@@Base+0x1c4>
   10864:	ldr	r3, [fp, #-8]
   10868:	lsl	r3, r3, #2
   1086c:	sub	r2, fp, #4
   10870:	add	r3, r2, r3
   10874:	ldr	r2, [r3, #-28]	; 0xffffffe4
   10878:	ldr	r3, [fp, #-12]
   1087c:	lsl	r3, r3, #2
   10880:	sub	r1, fp, #4
   10884:	add	r3, r1, r3
   10888:	ldr	r3, [r3, #-48]	; 0xffffffd0
   1088c:	cmp	r2, r3
   10890:	bne	108bc <main@@Base+0x1b8>
   10894:	ldr	r3, [fp, #-8]
   10898:	lsl	r3, r3, #2
   1089c:	sub	r2, fp, #4
   108a0:	add	r3, r2, r3
   108a4:	ldr	r3, [r3, #-28]	; 0xffffffe4
   108a8:	mov	r1, r3
   108ac:	ldr	r3, [pc, #116]	; 10928 <main@@Base+0x224>
   108b0:	add	r3, pc, r3
   108b4:	mov	r0, r3
   108b8:	bl	105c0 <printf@plt>
   108bc:	ldr	r3, [fp, #-12]
   108c0:	add	r3, r3, #1
   108c4:	str	r3, [fp, #-12]
   108c8:	ldr	r3, [fp, #-12]
   108cc:	cmp	r3, #4
   108d0:	ble	10864 <main@@Base+0x160>
   108d4:	ldr	r3, [fp, #-8]
   108d8:	add	r3, r3, #1
   108dc:	str	r3, [fp, #-8]
   108e0:	ldr	r3, [fp, #-8]
   108e4:	cmp	r3, #4
   108e8:	ble	10858 <main@@Base+0x154>
   108ec:	mov	r0, #10
   108f0:	bl	105f0 <putchar@plt>
   108f4:	mov	r3, #0
   108f8:	mov	r0, r3
   108fc:	sub	sp, fp, #4
   10900:	ldr	fp, [sp]
   10904:	add	sp, sp, #4
   10908:	pop	{pc}		; (ldr pc, [sp], #4)
   1090c:	andeq	r0, r0, r4, asr #4
   10910:	andeq	r0, r0, r8, lsr #4
   10914:	andeq	r0, r0, ip, lsl r2
   10918:	strdeq	r0, [r0], -r8
   1091c:			; <UNDEFINED> instruction: 0x000001b4
   10920:	andeq	r0, r0, r8, lsr #3
   10924:	andeq	r0, r0, r8, lsl #3
   10928:	andeq	r0, r0, r0, lsr #2

0001092c <__libc_csu_init@@Base>:
   1092c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10930:	mov	r7, r0
   10934:	ldr	r6, [pc, #72]	; 10984 <__libc_csu_init@@Base+0x58>
   10938:	ldr	r5, [pc, #72]	; 10988 <__libc_csu_init@@Base+0x5c>
   1093c:	add	r6, pc, r6
   10940:	add	r5, pc, r5
   10944:	sub	r6, r6, r5
   10948:	mov	r8, r1
   1094c:	mov	r9, r2
   10950:	bl	105a0 <printf@plt-0x20>
   10954:	asrs	r6, r6, #2
   10958:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1095c:	mov	r4, #0
   10960:	add	r4, r4, #1
   10964:	ldr	r3, [r5], #4
   10968:	mov	r2, r9
   1096c:	mov	r1, r8
   10970:	mov	r0, r7
   10974:	blx	r3
   10978:	cmp	r6, r4
   1097c:	bne	10960 <__libc_csu_init@@Base+0x34>
   10980:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10984:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10988:	andeq	r0, r1, r8, asr #11

0001098c <__libc_csu_fini@@Base>:
   1098c:	bx	lr

Disassembly of section .fini:

00010990 <.fini>:
   10990:	push	{r3, lr}
   10994:	pop	{r3, pc}
