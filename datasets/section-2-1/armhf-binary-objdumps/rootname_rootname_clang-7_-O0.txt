
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

00010a8c <.init>:
   10a8c:	push	{r3, lr}
   10a90:	bl	10c08 <_start@@Base+0x3c>
   10a94:	pop	{r3, pc}

Disassembly of section .plt:

00010a98 <raise@plt-0x14>:
   10a98:	push	{lr}		; (str lr, [sp, #-4]!)
   10a9c:	ldr	lr, [pc, #4]	; 10aa8 <raise@plt-0x4>
   10aa0:	add	lr, pc, lr
   10aa4:	ldr	pc, [lr, #8]!
   10aa8:	andeq	r1, r1, r8, asr r5

00010aac <raise@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #69632	; 0x11000
   10ab4:	ldr	pc, [ip, #1368]!	; 0x558

00010ab8 <fopen@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #69632	; 0x11000
   10ac0:	ldr	pc, [ip, #1360]!	; 0x550

00010ac4 <memcpy@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #69632	; 0x11000
   10acc:	ldr	pc, [ip, #1352]!	; 0x548

00010ad0 <time@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #69632	; 0x11000
   10ad8:	ldr	pc, [ip, #1344]!	; 0x540

00010adc <xcb_connect@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #69632	; 0x11000
   10ae4:	ldr	pc, [ip, #1336]!	; 0x538

00010ae8 <sleep@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #69632	; 0x11000
   10af0:	ldr	pc, [ip, #1328]!	; 0x530

00010af4 <xcb_flush@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #69632	; 0x11000
   10afc:	ldr	pc, [ip, #1320]!	; 0x528

00010b00 <rewind@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #69632	; 0x11000
   10b08:	ldr	pc, [ip, #1312]!	; 0x520

00010b0c <xcb_screen_next@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #69632	; 0x11000
   10b14:	ldr	pc, [ip, #1304]!	; 0x518

00010b18 <fread@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #69632	; 0x11000
   10b20:	ldr	pc, [ip, #1296]!	; 0x510

00010b24 <xcb_setup_roots_iterator@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #69632	; 0x11000
   10b2c:	ldr	pc, [ip, #1288]!	; 0x508

00010b30 <puts@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #69632	; 0x11000
   10b38:	ldr	pc, [ip, #1280]!	; 0x500

00010b3c <__libc_start_main@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #69632	; 0x11000
   10b44:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b48 <localtime@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #69632	; 0x11000
   10b50:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b54 <__gmon_start__@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #69632	; 0x11000
   10b5c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b60 <exit@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #69632	; 0x11000
   10b68:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b6c <snprintf@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #69632	; 0x11000
   10b74:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b78 <__isoc99_sscanf@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #69632	; 0x11000
   10b80:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b84 <fclose@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #69632	; 0x11000
   10b8c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b90 <xcb_disconnect@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #69632	; 0x11000
   10b98:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b9c <xcb_connection_has_error@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #69632	; 0x11000
   10ba4:	ldr	pc, [ip, #1208]!	; 0x4b8

00010ba8 <xcb_get_setup@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #69632	; 0x11000
   10bb0:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bb4 <xcb_change_property@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #69632	; 0x11000
   10bbc:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bc0 <abort@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1184]!	; 0x4a0

Disassembly of section .text:

00010bcc <_start@@Base>:
   10bcc:	mov	fp, #0
   10bd0:	mov	lr, #0
   10bd4:	pop	{r1}		; (ldr r1, [sp], #4)
   10bd8:	mov	r2, sp
   10bdc:	push	{r2}		; (str r2, [sp, #-4]!)
   10be0:	push	{r0}		; (str r0, [sp, #-4]!)
   10be4:	ldr	ip, [pc, #16]	; 10bfc <_start@@Base+0x30>
   10be8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bec:	ldr	r0, [pc, #12]	; 10c00 <_start@@Base+0x34>
   10bf0:	ldr	r3, [pc, #12]	; 10c04 <_start@@Base+0x38>
   10bf4:	bl	10b3c <__libc_start_main@plt>
   10bf8:	bl	10bc0 <abort@plt>
   10bfc:	strdeq	r1, [r1], -ip
   10c00:			; <UNDEFINED> instruction: 0x00010cbc
   10c04:	muleq	r1, ip, r5
   10c08:	ldr	r3, [pc, #20]	; 10c24 <_start@@Base+0x58>
   10c0c:	ldr	r2, [pc, #20]	; 10c28 <_start@@Base+0x5c>
   10c10:	add	r3, pc, r3
   10c14:	ldr	r2, [r3, r2]
   10c18:	cmp	r2, #0
   10c1c:	bxeq	lr
   10c20:	b	10b54 <__gmon_start__@plt>
   10c24:	andeq	r1, r1, r8, ror #7
   10c28:	andeq	r0, r0, ip, rrx
   10c2c:	ldr	r0, [pc, #24]	; 10c4c <_start@@Base+0x80>
   10c30:	ldr	r3, [pc, #24]	; 10c50 <_start@@Base+0x84>
   10c34:	cmp	r3, r0
   10c38:	bxeq	lr
   10c3c:	ldr	r3, [pc, #16]	; 10c54 <_start@@Base+0x88>
   10c40:	cmp	r3, #0
   10c44:	bxeq	lr
   10c48:	bx	r3
   10c4c:	andeq	r2, r2, r8, ror r0
   10c50:	andeq	r2, r2, r8, ror r0
   10c54:	andeq	r0, r0, r0
   10c58:	ldr	r0, [pc, #36]	; 10c84 <_start@@Base+0xb8>
   10c5c:	ldr	r1, [pc, #36]	; 10c88 <_start@@Base+0xbc>
   10c60:	sub	r1, r1, r0
   10c64:	asr	r1, r1, #2
   10c68:	add	r1, r1, r1, lsr #31
   10c6c:	asrs	r1, r1, #1
   10c70:	bxeq	lr
   10c74:	ldr	r3, [pc, #16]	; 10c8c <_start@@Base+0xc0>
   10c78:	cmp	r3, #0
   10c7c:	bxeq	lr
   10c80:	bx	r3
   10c84:	andeq	r2, r2, r8, ror r0
   10c88:	andeq	r2, r2, r8, ror r0
   10c8c:	andeq	r0, r0, r0
   10c90:	push	{r4, lr}
   10c94:	ldr	r4, [pc, #24]	; 10cb4 <_start@@Base+0xe8>
   10c98:	ldrb	r3, [r4]
   10c9c:	cmp	r3, #0
   10ca0:	popne	{r4, pc}
   10ca4:	bl	10c2c <_start@@Base+0x60>
   10ca8:	mov	r3, #1
   10cac:	strb	r3, [r4]
   10cb0:	pop	{r4, pc}
   10cb4:	andeq	r2, r2, r8, ror r0
   10cb8:	b	10c58 <_start@@Base+0x8c>

00010cbc <main@@Base>:
   10cbc:	push	{fp, lr}
   10cc0:	mov	fp, sp
   10cc4:	sub	sp, sp, #176	; 0xb0
   10cc8:	movw	r0, #0
   10ccc:	str	r0, [fp, #-4]
   10cd0:	add	r0, sp, #80	; 0x50
   10cd4:	bl	10e20 <main@@Base+0x164>
   10cd8:	add	r0, sp, #48	; 0x30
   10cdc:	bl	11028 <init_bat@@Base>
   10ce0:	movw	r0, #0
   10ce4:	strb	r0, [fp, #-5]
   10ce8:	movw	r0, #0
   10cec:	str	r0, [sp, #44]	; 0x2c
   10cf0:	ldrb	r0, [sp, #72]	; 0x48
   10cf4:	tst	r0, #1
   10cf8:	beq	10d28 <main@@Base+0x6c>
   10cfc:	sub	r0, fp, #85	; 0x55
   10d00:	ldr	r1, [sp, #44]	; 0x2c
   10d04:	add	r1, r0, r1
   10d08:	ldr	r0, [sp, #44]	; 0x2c
   10d0c:	movw	r2, #80	; 0x50
   10d10:	sub	r2, r2, r0
   10d14:	add	r0, sp, #48	; 0x30
   10d18:	bl	1127c <bat@@Base>
   10d1c:	ldr	r1, [sp, #44]	; 0x2c
   10d20:	add	r0, r1, r0
   10d24:	str	r0, [sp, #44]	; 0x2c
   10d28:	sub	r0, fp, #85	; 0x55
   10d2c:	ldr	r1, [sp, #44]	; 0x2c
   10d30:	add	r0, r0, r1
   10d34:	ldr	r1, [sp, #44]	; 0x2c
   10d38:	movw	r2, #80	; 0x50
   10d3c:	sub	r1, r2, r1
   10d40:	bl	10ee8 <main@@Base+0x22c>
   10d44:	sub	r1, fp, #85	; 0x55
   10d48:	ldr	r2, [sp, #44]	; 0x2c
   10d4c:	add	r0, r2, r0
   10d50:	str	r0, [sp, #44]	; 0x2c
   10d54:	ldr	r0, [sp, #80]	; 0x50
   10d58:	ldr	r2, [sp, #84]	; 0x54
   10d5c:	ldr	lr, [sp, #44]	; 0x2c
   10d60:	movw	r3, #0
   10d64:	and	r3, r3, #255	; 0xff
   10d68:	str	r1, [sp, #36]	; 0x24
   10d6c:	mov	r1, r3
   10d70:	movw	r3, #39	; 0x27
   10d74:	movw	ip, #31
   10d78:	str	ip, [sp]
   10d7c:	movw	ip, #8
   10d80:	and	ip, ip, #255	; 0xff
   10d84:	str	ip, [sp, #4]
   10d88:	str	lr, [sp, #8]
   10d8c:	ldr	ip, [sp, #36]	; 0x24
   10d90:	str	ip, [sp, #12]
   10d94:	bl	10bb4 <xcb_change_property@plt>
   10d98:	str	r0, [sp, #40]	; 0x28
   10d9c:	ldr	r0, [sp, #80]	; 0x50
   10da0:	bl	10af4 <xcb_flush@plt>
   10da4:	cmp	r0, #0
   10da8:	bgt	10dc0 <main@@Base+0x104>
   10dac:	ldr	r0, [pc, #104]	; 10e1c <main@@Base+0x160>
   10db0:	add	r0, pc, r0
   10db4:	bl	10b30 <puts@plt>
   10db8:	str	r0, [sp, #32]
   10dbc:	b	10dd0 <main@@Base+0x114>
   10dc0:	movw	r0, #60	; 0x3c
   10dc4:	bl	10ae8 <sleep@plt>
   10dc8:	str	r0, [sp, #28]
   10dcc:	b	10ce0 <main@@Base+0x24>
   10dd0:	ldr	r0, [sp, #80]	; 0x50
   10dd4:	bl	10b90 <xcb_disconnect@plt>
   10dd8:	ldrb	r0, [sp, #72]	; 0x48
   10ddc:	tst	r0, #1
   10de0:	beq	10e10 <main@@Base+0x154>
   10de4:	ldr	r0, [sp, #48]	; 0x30
   10de8:	bl	10b84 <fclose@plt>
   10dec:	ldr	lr, [sp, #56]	; 0x38
   10df0:	str	r0, [sp, #24]
   10df4:	mov	r0, lr
   10df8:	bl	10b84 <fclose@plt>
   10dfc:	ldr	lr, [sp, #52]	; 0x34
   10e00:	str	r0, [sp, #20]
   10e04:	mov	r0, lr
   10e08:	bl	10b84 <fclose@plt>
   10e0c:	str	r0, [sp, #16]
   10e10:	movw	r0, #2
   10e14:	mov	sp, fp
   10e18:	pop	{fp, pc}
   10e1c:	andeq	r0, r0, r4, asr r8
   10e20:	push	{fp, lr}
   10e24:	mov	fp, sp
   10e28:	sub	sp, sp, #32
   10e2c:	str	r0, [fp, #-4]
   10e30:	movw	r0, #0
   10e34:	sub	r1, fp, #8
   10e38:	bl	10adc <xcb_connect@plt>
   10e3c:	ldr	r1, [fp, #-4]
   10e40:	str	r0, [r1]
   10e44:	ldr	r0, [fp, #-4]
   10e48:	ldr	r0, [r0]
   10e4c:	bl	10b9c <xcb_connection_has_error@plt>
   10e50:	cmp	r0, #0
   10e54:	beq	10e80 <main@@Base+0x1c4>
   10e58:	ldr	r0, [pc, #132]	; 10ee4 <main@@Base+0x228>
   10e5c:	add	r0, pc, r0
   10e60:	bl	10b30 <puts@plt>
   10e64:	ldr	lr, [fp, #-4]
   10e68:	ldr	lr, [lr]
   10e6c:	str	r0, [sp, #4]
   10e70:	mov	r0, lr
   10e74:	bl	10b90 <xcb_disconnect@plt>
   10e78:	movw	r0, #1
   10e7c:	bl	10b60 <exit@plt>
   10e80:	ldr	r0, [fp, #-4]
   10e84:	ldr	r0, [r0]
   10e88:	bl	10ba8 <xcb_get_setup@plt>
   10e8c:	add	lr, sp, #12
   10e90:	str	r0, [sp]
   10e94:	mov	r0, lr
   10e98:	ldr	r1, [sp]
   10e9c:	bl	10b24 <xcb_setup_roots_iterator@plt>
   10ea0:	ldr	r0, [fp, #-8]
   10ea4:	mvn	r1, #0
   10ea8:	add	r1, r0, r1
   10eac:	str	r1, [fp, #-8]
   10eb0:	cmp	r0, #0
   10eb4:	beq	10ec4 <main@@Base+0x208>
   10eb8:	add	r0, sp, #12
   10ebc:	bl	10b0c <xcb_screen_next@plt>
   10ec0:	b	10ea0 <main@@Base+0x1e4>
   10ec4:	ldr	r0, [sp, #12]
   10ec8:	str	r0, [sp, #8]
   10ecc:	ldr	r0, [sp, #8]
   10ed0:	ldr	r0, [r0]
   10ed4:	ldr	r1, [fp, #-4]
   10ed8:	str	r0, [r1, #4]
   10edc:	mov	sp, fp
   10ee0:	pop	{fp, pc}
   10ee4:	andeq	r0, r0, r8, asr #15
   10ee8:	push	{r4, r5, r6, sl, fp, lr}
   10eec:	add	fp, sp, #16
   10ef0:	sub	sp, sp, #88	; 0x58
   10ef4:	str	r0, [fp, #-20]	; 0xffffffec
   10ef8:	str	r1, [fp, #-24]	; 0xffffffe8
   10efc:	movw	r0, #0
   10f00:	bl	10ad0 <time@plt>
   10f04:	str	r0, [fp, #-28]	; 0xffffffe4
   10f08:	sub	r0, fp, #28
   10f0c:	bl	10b48 <localtime@plt>
   10f10:	ldr	r1, [pc, #116]	; 10f8c <main@@Base+0x2d0>
   10f14:	add	r2, pc, r1
   10f18:	add	r1, sp, #32
   10f1c:	str	r0, [sp, #28]
   10f20:	mov	r0, r1
   10f24:	ldr	r1, [sp, #28]
   10f28:	movw	lr, #44	; 0x2c
   10f2c:	str	r2, [sp, #24]
   10f30:	mov	r2, lr
   10f34:	bl	10ac4 <memcpy@plt>
   10f38:	ldr	r0, [fp, #-20]	; 0xffffffec
   10f3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f40:	ldr	r2, [sp, #52]	; 0x34
   10f44:	movw	lr, #1900	; 0x76c
   10f48:	add	r3, r2, lr
   10f4c:	ldr	r2, [sp, #48]	; 0x30
   10f50:	add	r2, r2, #1
   10f54:	ldr	lr, [sp, #44]	; 0x2c
   10f58:	ldr	ip, [sp, #40]	; 0x28
   10f5c:	ldr	r4, [sp, #36]	; 0x24
   10f60:	ldr	r5, [sp, #24]
   10f64:	str	r2, [sp, #20]
   10f68:	mov	r2, r5
   10f6c:	ldr	r6, [sp, #20]
   10f70:	str	r6, [sp]
   10f74:	str	lr, [sp, #4]
   10f78:	str	ip, [sp, #8]
   10f7c:	str	r4, [sp, #12]
   10f80:	bl	10b6c <snprintf@plt>
   10f84:	sub	sp, fp, #16
   10f88:	pop	{r4, r5, r6, sl, fp, pc}
   10f8c:	andeq	r0, r0, r8, lsr #14

00010f90 <read_int@@Base>:
   10f90:	push	{fp, lr}
   10f94:	mov	fp, sp
   10f98:	sub	sp, sp, #72	; 0x48
   10f9c:	str	r0, [fp, #-12]
   10fa0:	ldr	r0, [fp, #-12]
   10fa4:	bl	10b00 <rewind@plt>
   10fa8:	add	r0, sp, #8
   10fac:	ldr	r3, [fp, #-12]
   10fb0:	movw	r1, #1
   10fb4:	movw	r2, #40	; 0x28
   10fb8:	bl	10b18 <fread@plt>
   10fbc:	ldr	r1, [pc, #96]	; 11024 <read_int@@Base+0x94>
   10fc0:	add	r1, pc, r1
   10fc4:	add	r2, sp, #8
   10fc8:	str	r0, [sp, #4]
   10fcc:	ldr	r0, [sp, #4]
   10fd0:	add	r0, r2, r0
   10fd4:	movw	r3, #0
   10fd8:	strb	r3, [r0]
   10fdc:	mov	r0, r2
   10fe0:	sub	r2, fp, #24
   10fe4:	bl	10b78 <__isoc99_sscanf@plt>
   10fe8:	cmp	r0, #1
   10fec:	bne	11004 <read_int@@Base+0x74>
   10ff0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ff4:	ldr	r1, [fp, #-20]	; 0xffffffec
   10ff8:	str	r1, [fp, #-4]
   10ffc:	str	r0, [fp, #-8]
   11000:	b	11014 <read_int@@Base+0x84>
   11004:	mov	r0, #0
   11008:	str	r0, [fp, #-4]
   1100c:	mvn	r0, #0
   11010:	str	r0, [fp, #-8]
   11014:	ldr	r0, [fp, #-8]
   11018:	ldr	r1, [fp, #-4]
   1101c:	mov	sp, fp
   11020:	pop	{fp, pc}
   11024:	muleq	r0, r5, r6

00011028 <init_bat@@Base>:
   11028:	push	{fp, lr}
   1102c:	mov	fp, sp
   11030:	sub	sp, sp, #24
   11034:	ldr	r1, [pc, #388]	; 111c0 <init_bat@@Base+0x198>
   11038:	add	r1, pc, r1
   1103c:	ldr	r2, [pc, #384]	; 111c4 <init_bat@@Base+0x19c>
   11040:	add	r2, pc, r2
   11044:	str	r0, [fp, #-4]
   11048:	mov	r0, r1
   1104c:	mov	r1, r2
   11050:	bl	10ab8 <fopen@plt>
   11054:	str	r0, [fp, #-8]
   11058:	ldr	r0, [fp, #-8]
   1105c:	movw	r1, #0
   11060:	cmp	r0, r1
   11064:	bne	11080 <init_bat@@Base+0x58>
   11068:	ldr	r0, [pc, #344]	; 111c8 <init_bat@@Base+0x1a0>
   1106c:	add	r0, pc, r0
   11070:	ldr	r1, [pc, #340]	; 111cc <init_bat@@Base+0x1a4>
   11074:	add	r1, pc, r1
   11078:	bl	10ab8 <fopen@plt>
   1107c:	str	r0, [fp, #-8]
   11080:	ldr	r0, [fp, #-8]
   11084:	movw	r1, #0
   11088:	cmp	r0, r1
   1108c:	bne	110bc <init_bat@@Base+0x94>
   11090:	ldr	r0, [fp, #-4]
   11094:	movw	r1, #0
   11098:	strb	r1, [r0, #24]
   1109c:	ldr	r0, [fp, #-4]
   110a0:	movw	r1, #0
   110a4:	str	r1, [r0]
   110a8:	ldr	r0, [fp, #-4]
   110ac:	str	r1, [r0, #4]
   110b0:	ldr	r0, [fp, #-4]
   110b4:	str	r1, [r0, #8]
   110b8:	b	111b8 <init_bat@@Base+0x190>
   110bc:	ldr	r0, [pc, #276]	; 111d8 <init_bat@@Base+0x1b0>
   110c0:	add	r0, pc, r0
   110c4:	ldr	r1, [pc, #272]	; 111dc <init_bat@@Base+0x1b4>
   110c8:	add	r1, pc, r1
   110cc:	ldr	r2, [fp, #-4]
   110d0:	mov	r3, #1
   110d4:	strb	r3, [r2, #24]
   110d8:	ldr	r2, [fp, #-8]
   110dc:	str	r0, [sp, #12]
   110e0:	mov	r0, r2
   110e4:	str	r1, [sp, #8]
   110e8:	bl	10f90 <read_int@@Base>
   110ec:	ldr	r2, [fp, #-4]
   110f0:	str	r1, [r2, #20]
   110f4:	str	r0, [r2, #16]
   110f8:	ldr	r0, [sp, #12]
   110fc:	ldr	r1, [sp, #8]
   11100:	bl	10ab8 <fopen@plt>
   11104:	ldr	r1, [pc, #196]	; 111d0 <init_bat@@Base+0x1a8>
   11108:	add	r1, pc, r1
   1110c:	ldr	r2, [pc, #192]	; 111d4 <init_bat@@Base+0x1ac>
   11110:	add	r2, pc, r2
   11114:	ldr	r3, [fp, #-4]
   11118:	str	r0, [r3]
   1111c:	mov	r0, r1
   11120:	mov	r1, r2
   11124:	bl	10ab8 <fopen@plt>
   11128:	ldr	r1, [fp, #-4]
   1112c:	str	r0, [r1, #4]
   11130:	ldr	r0, [fp, #-4]
   11134:	ldr	r0, [r0, #4]
   11138:	movw	r1, #0
   1113c:	cmp	r0, r1
   11140:	bne	11160 <init_bat@@Base+0x138>
   11144:	ldr	r0, [pc, #148]	; 111e0 <init_bat@@Base+0x1b8>
   11148:	add	r0, pc, r0
   1114c:	ldr	r1, [pc, #144]	; 111e4 <init_bat@@Base+0x1bc>
   11150:	add	r1, pc, r1
   11154:	bl	10ab8 <fopen@plt>
   11158:	ldr	r1, [fp, #-4]
   1115c:	str	r0, [r1, #4]
   11160:	ldr	r0, [pc, #128]	; 111e8 <init_bat@@Base+0x1c0>
   11164:	add	r0, pc, r0
   11168:	ldr	r1, [pc, #124]	; 111ec <init_bat@@Base+0x1c4>
   1116c:	add	r1, pc, r1
   11170:	bl	10ab8 <fopen@plt>
   11174:	ldr	r1, [fp, #-4]
   11178:	str	r0, [r1, #8]
   1117c:	ldr	r0, [fp, #-4]
   11180:	ldr	r0, [r0, #8]
   11184:	movw	r1, #0
   11188:	cmp	r0, r1
   1118c:	bne	111ac <init_bat@@Base+0x184>
   11190:	ldr	r0, [pc, #88]	; 111f0 <init_bat@@Base+0x1c8>
   11194:	add	r0, pc, r0
   11198:	ldr	r1, [pc, #84]	; 111f4 <init_bat@@Base+0x1cc>
   1119c:	add	r1, pc, r1
   111a0:	bl	10ab8 <fopen@plt>
   111a4:	ldr	r1, [fp, #-4]
   111a8:	str	r0, [r1, #8]
   111ac:	ldr	r0, [fp, #-8]
   111b0:	bl	10b84 <fclose@plt>
   111b4:	str	r0, [sp, #4]
   111b8:	mov	sp, fp
   111bc:	pop	{fp, pc}
   111c0:	andeq	r0, r0, r2, lsr #12
   111c4:	andeq	r0, r0, r3, asr #12
   111c8:	andeq	r0, r0, r9, lsl r6
   111cc:	andeq	r0, r0, pc, lsl #12
   111d0:	andeq	r0, r0, r8, asr #11
   111d4:	andeq	r0, r0, r3, ror r5
   111d8:	andeq	r0, r0, lr, ror #11
   111dc:			; <UNDEFINED> instruction: 0x000005bb
   111e0:			; <UNDEFINED> instruction: 0x000005b0
   111e4:	andeq	r0, r0, r3, lsr r5
   111e8:			; <UNDEFINED> instruction: 0x000005bc
   111ec:	andeq	r0, r0, r7, lsl r5
   111f0:			; <UNDEFINED> instruction: 0x000005b3
   111f4:	andeq	r0, r0, r7, ror #9

000111f8 <close_bat@@Base>:
   111f8:	push	{fp, lr}
   111fc:	mov	fp, sp
   11200:	sub	sp, sp, #16
   11204:	str	r0, [fp, #-4]
   11208:	ldr	r0, [fp, #-4]
   1120c:	ldr	r0, [r0]
   11210:	movw	r1, #0
   11214:	cmp	r0, r1
   11218:	beq	1122c <close_bat@@Base+0x34>
   1121c:	ldr	r0, [fp, #-4]
   11220:	ldr	r0, [r0]
   11224:	bl	10b84 <fclose@plt>
   11228:	str	r0, [sp, #8]
   1122c:	ldr	r0, [fp, #-4]
   11230:	ldr	r0, [r0, #4]
   11234:	movw	r1, #0
   11238:	cmp	r0, r1
   1123c:	beq	11250 <close_bat@@Base+0x58>
   11240:	ldr	r0, [fp, #-4]
   11244:	ldr	r0, [r0, #4]
   11248:	bl	10b84 <fclose@plt>
   1124c:	str	r0, [sp, #4]
   11250:	ldr	r0, [fp, #-4]
   11254:	ldr	r0, [r0, #8]
   11258:	movw	r1, #0
   1125c:	cmp	r0, r1
   11260:	beq	11274 <close_bat@@Base+0x7c>
   11264:	ldr	r0, [fp, #-4]
   11268:	ldr	r0, [r0, #8]
   1126c:	bl	10b84 <fclose@plt>
   11270:	str	r0, [sp]
   11274:	mov	sp, fp
   11278:	pop	{fp, pc}

0001127c <bat@@Base>:
   1127c:	push	{r4, sl, fp, lr}
   11280:	add	fp, sp, #8
   11284:	sub	sp, sp, #80	; 0x50
   11288:	str	r0, [fp, #-16]
   1128c:	str	r1, [fp, #-20]	; 0xffffffec
   11290:	str	r2, [fp, #-24]	; 0xffffffe8
   11294:	ldr	r0, [fp, #-16]
   11298:	ldr	r0, [r0]
   1129c:	bl	10f90 <read_int@@Base>
   112a0:	orr	r0, r0, r1
   112a4:	cmp	r0, #0
   112a8:	movwne	r0, #1
   112ac:	strb	r0, [fp, #-25]	; 0xffffffe7
   112b0:	ldr	r0, [fp, #-16]
   112b4:	ldr	r0, [r0, #4]
   112b8:	bl	10f90 <read_int@@Base>
   112bc:	str	r1, [fp, #-36]	; 0xffffffdc
   112c0:	str	r0, [fp, #-40]	; 0xffffffd8
   112c4:	ldr	r0, [fp, #-16]
   112c8:	ldr	r0, [r0, #8]
   112cc:	bl	10f90 <read_int@@Base>
   112d0:	str	r1, [sp, #44]	; 0x2c
   112d4:	str	r0, [sp, #40]	; 0x28
   112d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   112dc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   112e0:	mov	r2, #100	; 0x64
   112e4:	umull	r0, lr, r0, r2
   112e8:	mla	r1, r1, r2, lr
   112ec:	ldr	r2, [fp, #-16]
   112f0:	ldr	lr, [r2, #16]
   112f4:	ldr	r3, [r2, #20]
   112f8:	mov	r2, lr
   112fc:	bl	11428 <bat@@Base+0x1ac>
   11300:	str	r0, [sp, #36]	; 0x24
   11304:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   11308:	tst	r0, #1
   1130c:	beq	11330 <bat@@Base+0xb4>
   11310:	ldr	r0, [pc, #268]	; 11424 <bat@@Base+0x1a8>
   11314:	add	r2, pc, r0
   11318:	ldr	r0, [fp, #-20]	; 0xffffffec
   1131c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11320:	ldr	r3, [sp, #36]	; 0x24
   11324:	bl	10b6c <snprintf@plt>
   11328:	str	r0, [fp, #-12]
   1132c:	b	11410 <bat@@Base+0x194>
   11330:	ldr	r0, [sp, #40]	; 0x28
   11334:	ldr	r1, [sp, #44]	; 0x2c
   11338:	orr	r0, r0, r1
   1133c:	cmp	r0, #0
   11340:	beq	113f4 <bat@@Base+0x178>
   11344:	b	11348 <bat@@Base+0xcc>
   11348:	ldr	r0, [pc, #208]	; 11420 <bat@@Base+0x1a4>
   1134c:	add	r2, pc, r0
   11350:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11354:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11358:	ldr	r3, [sp, #40]	; 0x28
   1135c:	ldr	ip, [sp, #44]	; 0x2c
   11360:	str	r2, [sp, #24]
   11364:	mov	r2, r3
   11368:	mov	r3, ip
   1136c:	bl	11428 <bat@@Base+0x1ac>
   11370:	str	r0, [sp, #32]
   11374:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11378:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1137c:	mov	r2, #60	; 0x3c
   11380:	umull	r0, r3, r0, r2
   11384:	rsb	r1, r1, r1, lsl #4
   11388:	add	r1, r3, r1, lsl #2
   1138c:	ldr	r3, [sp, #40]	; 0x28
   11390:	ldr	ip, [sp, #44]	; 0x2c
   11394:	str	r2, [sp, #20]
   11398:	mov	r2, r3
   1139c:	mov	r3, ip
   113a0:	bl	11428 <bat@@Base+0x1ac>
   113a4:	mov	r3, #0
   113a8:	ldr	r2, [sp, #20]
   113ac:	bl	11428 <bat@@Base+0x1ac>
   113b0:	str	r2, [sp, #28]
   113b4:	ldr	r2, [fp, #-20]	; 0xffffffec
   113b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   113bc:	ldr	ip, [sp, #36]	; 0x24
   113c0:	ldr	lr, [sp, #32]
   113c4:	ldr	r4, [sp, #28]
   113c8:	str	r0, [sp, #16]
   113cc:	mov	r0, r2
   113d0:	str	r1, [sp, #12]
   113d4:	mov	r1, r3
   113d8:	ldr	r2, [sp, #24]
   113dc:	mov	r3, ip
   113e0:	str	lr, [sp]
   113e4:	str	r4, [sp, #4]
   113e8:	bl	10b6c <snprintf@plt>
   113ec:	str	r0, [fp, #-12]
   113f0:	b	11410 <bat@@Base+0x194>
   113f4:	ldr	r0, [pc, #32]	; 1141c <bat@@Base+0x1a0>
   113f8:	add	r2, pc, r0
   113fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11404:	ldr	r3, [sp, #36]	; 0x24
   11408:	bl	10b6c <snprintf@plt>
   1140c:	str	r0, [fp, #-12]
   11410:	ldr	r0, [fp, #-12]
   11414:	sub	sp, fp, #8
   11418:	pop	{r4, sl, fp, pc}
   1141c:	muleq	r0, r7, r3
   11420:	andeq	r0, r0, pc, lsr #8
   11424:	andeq	r0, r0, ip, asr r4
   11428:	cmp	r3, #0
   1142c:	cmpeq	r2, #0
   11430:	bne	11448 <bat@@Base+0x1cc>
   11434:	cmp	r1, #0
   11438:	cmpeq	r0, #0
   1143c:	mvnne	r1, #0
   11440:	mvnne	r0, #0
   11444:	b	11464 <bat@@Base+0x1e8>
   11448:	sub	sp, sp, #8
   1144c:	push	{sp, lr}
   11450:	bl	11474 <bat@@Base+0x1f8>
   11454:	ldr	lr, [sp, #4]
   11458:	add	sp, sp, #8
   1145c:	pop	{r2, r3}
   11460:	bx	lr
   11464:	push	{r1, lr}
   11468:	mov	r0, #8
   1146c:	bl	10aac <raise@plt>
   11470:	pop	{r1, pc}
   11474:	cmp	r1, r3
   11478:	cmpeq	r0, r2
   1147c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11480:	mov	r4, r0
   11484:	movcc	r0, #0
   11488:	mov	r5, r1
   1148c:	ldr	lr, [sp, #36]	; 0x24
   11490:	movcc	r1, r0
   11494:	bcc	11590 <bat@@Base+0x314>
   11498:	cmp	r3, #0
   1149c:	clzeq	ip, r2
   114a0:	clzne	ip, r3
   114a4:	addeq	ip, ip, #32
   114a8:	cmp	r5, #0
   114ac:	clzeq	r1, r4
   114b0:	addeq	r1, r1, #32
   114b4:	clzne	r1, r5
   114b8:	sub	ip, ip, r1
   114bc:	sub	sl, ip, #32
   114c0:	lsl	r9, r3, ip
   114c4:	rsb	fp, ip, #32
   114c8:	orr	r9, r9, r2, lsl sl
   114cc:	orr	r9, r9, r2, lsr fp
   114d0:	lsl	r8, r2, ip
   114d4:	cmp	r5, r9
   114d8:	cmpeq	r4, r8
   114dc:	movcc	r0, #0
   114e0:	movcc	r1, r0
   114e4:	bcc	11500 <bat@@Base+0x284>
   114e8:	mov	r0, #1
   114ec:	subs	r4, r4, r8
   114f0:	lsl	r1, r0, sl
   114f4:	orr	r1, r1, r0, lsr fp
   114f8:	lsl	r0, r0, ip
   114fc:	sbc	r5, r5, r9
   11500:	cmp	ip, #0
   11504:	beq	11590 <bat@@Base+0x314>
   11508:	lsr	r6, r8, #1
   1150c:	orr	r6, r6, r9, lsl #31
   11510:	lsr	r7, r9, #1
   11514:	mov	r2, ip
   11518:	b	1153c <bat@@Base+0x2c0>
   1151c:	subs	r3, r4, r6
   11520:	sbc	r8, r5, r7
   11524:	adds	r3, r3, r3
   11528:	adc	r8, r8, r8
   1152c:	adds	r4, r3, #1
   11530:	adc	r5, r8, #0
   11534:	subs	r2, r2, #1
   11538:	beq	11558 <bat@@Base+0x2dc>
   1153c:	cmp	r5, r7
   11540:	cmpeq	r4, r6
   11544:	bcs	1151c <bat@@Base+0x2a0>
   11548:	adds	r4, r4, r4
   1154c:	adc	r5, r5, r5
   11550:	subs	r2, r2, #1
   11554:	bne	1153c <bat@@Base+0x2c0>
   11558:	lsr	r3, r4, ip
   1155c:	orr	r3, r3, r5, lsl fp
   11560:	lsr	r2, r5, ip
   11564:	orr	r3, r3, r5, lsr sl
   11568:	adds	r0, r0, r4
   1156c:	mov	r4, r3
   11570:	lsl	r3, r2, ip
   11574:	orr	r3, r3, r4, lsl sl
   11578:	lsl	ip, r4, ip
   1157c:	orr	r3, r3, r4, lsr fp
   11580:	adc	r1, r1, r5
   11584:	subs	r0, r0, ip
   11588:	mov	r5, r2
   1158c:	sbc	r1, r1, r3
   11590:	cmp	lr, #0
   11594:	strdne	r4, [lr]
   11598:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001159c <__libc_csu_init@@Base>:
   1159c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   115a0:	mov	r7, r0
   115a4:	ldr	r6, [pc, #72]	; 115f4 <__libc_csu_init@@Base+0x58>
   115a8:	ldr	r5, [pc, #72]	; 115f8 <__libc_csu_init@@Base+0x5c>
   115ac:	add	r6, pc, r6
   115b0:	add	r5, pc, r5
   115b4:	sub	r6, r6, r5
   115b8:	mov	r8, r1
   115bc:	mov	r9, r2
   115c0:	bl	10a8c <raise@plt-0x20>
   115c4:	asrs	r6, r6, #2
   115c8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   115cc:	mov	r4, #0
   115d0:	add	r4, r4, #1
   115d4:	ldr	r3, [r5], #4
   115d8:	mov	r2, r9
   115dc:	mov	r1, r8
   115e0:	mov	r0, r7
   115e4:	blx	r3
   115e8:	cmp	r6, r4
   115ec:	bne	115d0 <__libc_csu_init@@Base+0x34>
   115f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115f4:	andeq	r0, r1, r0, asr r9
   115f8:	andeq	r0, r1, r8, asr #18

000115fc <__libc_csu_fini@@Base>:
   115fc:	bx	lr

Disassembly of section .fini:

00011600 <.fini>:
   11600:	push	{r3, lr}
   11604:	pop	{r3, pc}
