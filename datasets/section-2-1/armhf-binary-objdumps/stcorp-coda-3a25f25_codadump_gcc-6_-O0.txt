
../repos/stcorp-coda-3a25f25/codadump:     file format elf32-littlearm


Disassembly of section .init:

000121a8 <.init>:
   121a8:	push	{r3, lr}
   121ac:	bl	126b4 <_start@@Base+0x3c>
   121b0:	pop	{r3, pc}

Disassembly of section .plt:

000121b4 <coda_cursor_get_byte_size@plt-0x14>:
   121b4:	push	{lr}		; (str lr, [sp, #-4]!)
   121b8:	ldr	lr, [pc, #4]	; 121c4 <coda_cursor_get_byte_size@plt-0x4>
   121bc:	add	lr, pc, lr
   121c0:	ldr	pc, [lr, #8]!
   121c4:	andeq	lr, r1, ip, lsr lr

000121c8 <coda_cursor_get_byte_size@plt>:
   121c8:	add	ip, pc, #0, 12
   121cc:	add	ip, ip, #122880	; 0x1e000
   121d0:	ldr	pc, [ip, #3644]!	; 0xe3c

000121d4 <coda_type_get_special_type_name@plt>:
   121d4:	add	ip, pc, #0, 12
   121d8:	add	ip, ip, #122880	; 0x1e000
   121dc:	ldr	pc, [ip, #3636]!	; 0xe34

000121e0 <coda_set_option_use_fast_size_expressions@plt>:
   121e0:	add	ip, pc, #0, 12
   121e4:	add	ip, ip, #122880	; 0x1e000
   121e8:	ldr	pc, [ip, #3628]!	; 0xe2c

000121ec <raise@plt>:
   121ec:	add	ip, pc, #0, 12
   121f0:	add	ip, ip, #122880	; 0x1e000
   121f4:	ldr	pc, [ip, #3620]!	; 0xe24

000121f8 <coda_get_option_bypass_special_types@plt>:
   121f8:	add	ip, pc, #0, 12
   121fc:	add	ip, ip, #122880	; 0x1e000
   12200:	ldr	pc, [ip, #3612]!	; 0xe1c

00012204 <coda_set_option_perform_boundary_checks@plt>:
   12204:	add	ip, pc, #0, 12
   12208:	add	ip, ip, #122880	; 0x1e000
   1220c:	ldr	pc, [ip, #3604]!	; 0xe14

00012210 <strcmp@plt>:
   12210:	add	ip, pc, #0, 12
   12214:	add	ip, ip, #122880	; 0x1e000
   12218:	ldr	pc, [ip, #3596]!	; 0xe0c

0001221c <coda_type_get_record_field_hidden_status@plt>:
   1221c:	add	ip, pc, #0, 12
   12220:	add	ip, ip, #122880	; 0x1e000
   12224:	ldr	pc, [ip, #3588]!	; 0xe04

00012228 <printf@plt>:
   12228:	add	ip, pc, #0, 12
   1222c:	add	ip, ip, #122880	; 0x1e000
   12230:	ldr	pc, [ip, #3580]!	; 0xdfc

00012234 <coda_cursor_get_record_field_available_status@plt>:
   12234:	add	ip, pc, #0, 12
   12238:	add	ip, ip, #122880	; 0x1e000
   1223c:	ldr	pc, [ip, #3572]!	; 0xdf4

00012240 <fopen@plt>:
   12240:	add	ip, pc, #0, 12
   12244:	add	ip, ip, #122880	; 0x1e000
   12248:	ldr	pc, [ip, #3564]!	; 0xdec

0001224c <coda_set_error@plt>:
   1224c:	add	ip, pc, #0, 12
   12250:	add	ip, ip, #122880	; 0x1e000
   12254:	ldr	pc, [ip, #3556]!	; 0xde4

00012258 <coda_open@plt>:
   12258:	add	ip, pc, #0, 12
   1225c:	add	ip, ip, #122880	; 0x1e000
   12260:	ldr	pc, [ip, #3548]!	; 0xddc

00012264 <fflush@plt>:
   12264:	add	ip, pc, #0, 12
   12268:	add	ip, ip, #122880	; 0x1e000
   1226c:	ldr	pc, [ip, #3540]!	; 0xdd4

00012270 <coda_time_double_to_string@plt>:
   12270:	add	ip, pc, #0, 12
   12274:	add	ip, ip, #122880	; 0x1e000
   12278:	ldr	pc, [ip, #3532]!	; 0xdcc

0001227c <coda_cursor_get_num_elements@plt>:
   1227c:	add	ip, pc, #0, 12
   12280:	add	ip, ip, #122880	; 0x1e000
   12284:	ldr	pc, [ip, #3524]!	; 0xdc4

00012288 <coda_str64u@plt>:
   12288:	add	ip, pc, #0, 12
   1228c:	add	ip, ip, #122880	; 0x1e000
   12290:	ldr	pc, [ip, #3516]!	; 0xdbc

00012294 <free@plt>:
   12294:	add	ip, pc, #0, 12
   12298:	add	ip, ip, #122880	; 0x1e000
   1229c:	ldr	pc, [ip, #3508]!	; 0xdb4

000122a0 <coda_set_option_use_mmap@plt>:
   122a0:	add	ip, pc, #0, 12
   122a4:	add	ip, ip, #122880	; 0x1e000
   122a8:	ldr	pc, [ip, #3500]!	; 0xdac

000122ac <coda_set_definition_path_conditional@plt>:
   122ac:	add	ip, pc, #0, 12
   122b0:	add	ip, ip, #122880	; 0x1e000
   122b4:	ldr	pc, [ip, #3492]!	; 0xda4

000122b8 <coda_cursor_read_uint32@plt>:
   122b8:	add	ip, pc, #0, 12
   122bc:	add	ip, ip, #122880	; 0x1e000
   122c0:	ldr	pc, [ip, #3484]!	; 0xd9c

000122c4 <coda_set_option_bypass_special_types@plt>:
   122c4:	add	ip, pc, #0, 12
   122c8:	add	ip, ip, #122880	; 0x1e000
   122cc:	ldr	pc, [ip, #3476]!	; 0xd94

000122d0 <coda_type_get_record_field_type@plt>:
   122d0:	add	ip, pc, #0, 12
   122d4:	add	ip, ip, #122880	; 0x1e000
   122d8:	ldr	pc, [ip, #3468]!	; 0xd8c

000122dc <coda_cursor_get_type@plt>:
   122dc:	add	ip, pc, #0, 12
   122e0:	add	ip, ip, #122880	; 0x1e000
   122e4:	ldr	pc, [ip, #3460]!	; 0xd84

000122e8 <memcpy@plt>:
   122e8:	add	ip, pc, #0, 12
   122ec:	add	ip, ip, #122880	; 0x1e000
   122f0:	ldr	pc, [ip, #3452]!	; 0xd7c

000122f4 <coda_isInf@plt>:
   122f4:	add	ip, pc, #0, 12
   122f8:	add	ip, ip, #122880	; 0x1e000
   122fc:	ldr	pc, [ip, #3444]!	; 0xd74

00012300 <coda_type_get_bit_size@plt>:
   12300:	add	ip, pc, #0, 12
   12304:	add	ip, ip, #122880	; 0x1e000
   12308:	ldr	pc, [ip, #3436]!	; 0xd6c

0001230c <coda_type_get_record_field_available_status@plt>:
   1230c:	add	ip, pc, #0, 12
   12310:	add	ip, ip, #122880	; 0x1e000
   12314:	ldr	pc, [ip, #3428]!	; 0xd64

00012318 <coda_cursor_has_attributes@plt>:
   12318:	add	ip, pc, #0, 12
   1231c:	add	ip, ip, #122880	; 0x1e000
   12320:	ldr	pc, [ip, #3420]!	; 0xd5c

00012324 <coda_cursor_get_type_class@plt>:
   12324:	add	ip, pc, #0, 12
   12328:	add	ip, ip, #122880	; 0x1e000
   1232c:	ldr	pc, [ip, #3412]!	; 0xd54

00012330 <coda_set_definition_path@plt>:
   12330:	add	ip, pc, #0, 12
   12334:	add	ip, ip, #122880	; 0x1e000
   12338:	ldr	pc, [ip, #3404]!	; 0xd4c

0001233c <coda_get_product_format@plt>:
   1233c:	add	ip, pc, #0, 12
   12340:	add	ip, ip, #122880	; 0x1e000
   12344:	ldr	pc, [ip, #3396]!	; 0xd44

00012348 <coda_type_get_unit@plt>:
   12348:	add	ip, pc, #0, 12
   1234c:	add	ip, ip, #122880	; 0x1e000
   12350:	ldr	pc, [ip, #3388]!	; 0xd3c

00012354 <coda_type_get_description@plt>:
   12354:	add	ip, pc, #0, 12
   12358:	add	ip, ip, #122880	; 0x1e000
   1235c:	ldr	pc, [ip, #3380]!	; 0xd34

00012360 <coda_cursor_get_special_type@plt>:
   12360:	add	ip, pc, #0, 12
   12364:	add	ip, ip, #122880	; 0x1e000
   12368:	ldr	pc, [ip, #3372]!	; 0xd2c

0001236c <coda_cursor_goto_first_array_element@plt>:
   1236c:	add	ip, pc, #0, 12
   12370:	add	ip, ip, #122880	; 0x1e000
   12374:	ldr	pc, [ip, #3364]!	; 0xd24

00012378 <fwrite@plt>:
   12378:	add	ip, pc, #0, 12
   1237c:	add	ip, ip, #122880	; 0x1e000
   12380:	ldr	pc, [ip, #3356]!	; 0xd1c

00012384 <coda_cursor_set_product@plt>:
   12384:	add	ip, pc, #0, 12
   12388:	add	ip, ip, #122880	; 0x1e000
   1238c:	ldr	pc, [ip, #3348]!	; 0xd14

00012390 <coda_cursor_goto_first_record_field@plt>:
   12390:	add	ip, pc, #0, 12
   12394:	add	ip, ip, #122880	; 0x1e000
   12398:	ldr	pc, [ip, #3340]!	; 0xd0c

0001239c <coda_cursor_goto_record_field_by_index@plt>:
   1239c:	add	ip, pc, #0, 12
   123a0:	add	ip, ip, #122880	; 0x1e000
   123a4:	ldr	pc, [ip, #3332]!	; 0xd04

000123a8 <coda_done@plt>:
   123a8:	add	ip, pc, #0, 12
   123ac:	add	ip, ip, #122880	; 0x1e000
   123b0:	ldr	pc, [ip, #3324]!	; 0xcfc

000123b4 <puts@plt>:
   123b4:	add	ip, pc, #0, 12
   123b8:	add	ip, ip, #122880	; 0x1e000
   123bc:	ldr	pc, [ip, #3316]!	; 0xcf4

000123c0 <coda_cursor_get_read_type@plt>:
   123c0:	add	ip, pc, #0, 12
   123c4:	add	ip, ip, #122880	; 0x1e000
   123c8:	ldr	pc, [ip, #3308]!	; 0xcec

000123cc <malloc@plt>:
   123cc:	add	ip, pc, #0, 12
   123d0:	add	ip, ip, #122880	; 0x1e000
   123d4:	ldr	pc, [ip, #3300]!	; 0xce4

000123d8 <__libc_start_main@plt>:
   123d8:	add	ip, pc, #0, 12
   123dc:	add	ip, ip, #122880	; 0x1e000
   123e0:	ldr	pc, [ip, #3292]!	; 0xcdc

000123e4 <__gmon_start__@plt>:
   123e4:	add	ip, pc, #0, 12
   123e8:	add	ip, ip, #122880	; 0x1e000
   123ec:	ldr	pc, [ip, #3284]!	; 0xcd4

000123f0 <coda_cursor_read_string@plt>:
   123f0:	add	ip, pc, #0, 12
   123f4:	add	ip, ip, #122880	; 0x1e000
   123f8:	ldr	pc, [ip, #3276]!	; 0xccc

000123fc <coda_cursor_goto_parent@plt>:
   123fc:	add	ip, pc, #0, 12
   12400:	add	ip, ip, #122880	; 0x1e000
   12404:	ldr	pc, [ip, #3268]!	; 0xcc4

00012408 <coda_type_get_num_record_fields@plt>:
   12408:	add	ip, pc, #0, 12
   1240c:	add	ip, ip, #122880	; 0x1e000
   12410:	ldr	pc, [ip, #3260]!	; 0xcbc

00012414 <exit@plt>:
   12414:	add	ip, pc, #0, 12
   12418:	add	ip, ip, #122880	; 0x1e000
   1241c:	ldr	pc, [ip, #3252]!	; 0xcb4

00012420 <coda_type_get_read_type@plt>:
   12420:	add	ip, pc, #0, 12
   12424:	add	ip, ip, #122880	; 0x1e000
   12428:	ldr	pc, [ip, #3244]!	; 0xcac

0001242c <coda_cursor_get_string_length@plt>:
   1242c:	add	ip, pc, #0, 12
   12430:	add	ip, ip, #122880	; 0x1e000
   12434:	ldr	pc, [ip, #3236]!	; 0xca4

00012438 <coda_cursor_read_uint64@plt>:
   12438:	add	ip, pc, #0, 12
   1243c:	add	ip, ip, #122880	; 0x1e000
   12440:	ldr	pc, [ip, #3228]!	; 0xc9c

00012444 <coda_cursor_read_double@plt>:
   12444:	add	ip, pc, #0, 12
   12448:	add	ip, ip, #122880	; 0x1e000
   1244c:	ldr	pc, [ip, #3220]!	; 0xc94

00012450 <coda_isNaN@plt>:
   12450:	add	ip, pc, #0, 12
   12454:	add	ip, ip, #122880	; 0x1e000
   12458:	ldr	pc, [ip, #3212]!	; 0xc8c

0001245c <fprintf@plt>:
   1245c:	add	ip, pc, #0, 12
   12460:	add	ip, ip, #122880	; 0x1e000
   12464:	ldr	pc, [ip, #3204]!	; 0xc84

00012468 <coda_cursor_goto_next_array_element@plt>:
   12468:	add	ip, pc, #0, 12
   1246c:	add	ip, ip, #122880	; 0x1e000
   12470:	ldr	pc, [ip, #3196]!	; 0xc7c

00012474 <coda_open_as@plt>:
   12474:	add	ip, pc, #0, 12
   12478:	add	ip, ip, #122880	; 0x1e000
   1247c:	ldr	pc, [ip, #3188]!	; 0xc74

00012480 <coda_init@plt>:
   12480:	add	ip, pc, #0, 12
   12484:	add	ip, ip, #122880	; 0x1e000
   12488:	ldr	pc, [ip, #3180]!	; 0xc6c

0001248c <coda_set_option_perform_conversions@plt>:
   1248c:	add	ip, pc, #0, 12
   12490:	add	ip, ip, #122880	; 0x1e000
   12494:	ldr	pc, [ip, #3172]!	; 0xc64

00012498 <coda_cursor_goto_attributes@plt>:
   12498:	add	ip, pc, #0, 12
   1249c:	add	ip, ip, #122880	; 0x1e000
   124a0:	ldr	pc, [ip, #3164]!	; 0xc5c

000124a4 <coda_cursor_read_char@plt>:
   124a4:	add	ip, pc, #0, 12
   124a8:	add	ip, ip, #122880	; 0x1e000
   124ac:	ldr	pc, [ip, #3156]!	; 0xc54

000124b0 <memset@plt>:
   124b0:	add	ip, pc, #0, 12
   124b4:	add	ip, ip, #122880	; 0x1e000
   124b8:	ldr	pc, [ip, #3148]!	; 0xc4c

000124bc <putchar@plt>:
   124bc:	add	ip, pc, #0, 12
   124c0:	add	ip, ip, #122880	; 0x1e000
   124c4:	ldr	pc, [ip, #3140]!	; 0xc44

000124c8 <strncpy@plt>:
   124c8:	add	ip, pc, #0, 12
   124cc:	add	ip, ip, #122880	; 0x1e000
   124d0:	ldr	pc, [ip, #3132]!	; 0xc3c

000124d4 <coda_type_get_special_type@plt>:
   124d4:	add	ip, pc, #0, 12
   124d8:	add	ip, ip, #122880	; 0x1e000
   124dc:	ldr	pc, [ip, #3124]!	; 0xc34

000124e0 <coda_type_get_record_union_status@plt>:
   124e0:	add	ip, pc, #0, 12
   124e4:	add	ip, ip, #122880	; 0x1e000
   124e8:	ldr	pc, [ip, #3116]!	; 0xc2c

000124ec <coda_cursor_read_complex_double_split@plt>:
   124ec:	add	ip, pc, #0, 12
   124f0:	add	ip, ip, #122880	; 0x1e000
   124f4:	ldr	pc, [ip, #3108]!	; 0xc24

000124f8 <coda_type_get_array_base_type@plt>:
   124f8:	add	ip, pc, #0, 12
   124fc:	add	ip, ip, #122880	; 0x1e000
   12500:	ldr	pc, [ip, #3100]!	; 0xc1c

00012504 <fclose@plt>:
   12504:	add	ip, pc, #0, 12
   12508:	add	ip, ip, #122880	; 0x1e000
   1250c:	ldr	pc, [ip, #3092]!	; 0xc14

00012510 <coda_type_get_string_length@plt>:
   12510:	add	ip, pc, #0, 12
   12514:	add	ip, ip, #122880	; 0x1e000
   12518:	ldr	pc, [ip, #3084]!	; 0xc0c

0001251c <coda_type_get_native_type_name@plt>:
   1251c:	add	ip, pc, #0, 12
   12520:	add	ip, ip, #122880	; 0x1e000
   12524:	ldr	pc, [ip, #3076]!	; 0xc04

00012528 <coda_cursor_get_array_dim@plt>:
   12528:	add	ip, pc, #0, 12
   1252c:	add	ip, ip, #122880	; 0x1e000
   12530:	ldr	pc, [ip, #3068]!	; 0xbfc

00012534 <coda_cursor_has_ascii_content@plt>:
   12534:	add	ip, pc, #0, 12
   12538:	add	ip, ip, #122880	; 0x1e000
   1253c:	ldr	pc, [ip, #3060]!	; 0xbf4

00012540 <coda_close@plt>:
   12540:	add	ip, pc, #0, 12
   12544:	add	ip, ip, #122880	; 0x1e000
   12548:	ldr	pc, [ip, #3052]!	; 0xbec

0001254c <coda_cursor_read_int64@plt>:
   1254c:	add	ip, pc, #0, 12
   12550:	add	ip, ip, #122880	; 0x1e000
   12554:	ldr	pc, [ip, #3044]!	; 0xbe4

00012558 <vfprintf@plt>:
   12558:	add	ip, pc, #0, 12
   1255c:	add	ip, ip, #122880	; 0x1e000
   12560:	ldr	pc, [ip, #3036]!	; 0xbdc

00012564 <coda_cursor_goto@plt>:
   12564:	add	ip, pc, #0, 12
   12568:	add	ip, ip, #122880	; 0x1e000
   1256c:	ldr	pc, [ip, #3028]!	; 0xbd4

00012570 <coda_type_get_record_field_index_from_name@plt>:
   12570:	add	ip, pc, #0, 12
   12574:	add	ip, ip, #122880	; 0x1e000
   12578:	ldr	pc, [ip, #3020]!	; 0xbcc

0001257c <coda_cursor_read_complex_double_pair@plt>:
   1257c:	add	ip, pc, #0, 12
   12580:	add	ip, ip, #122880	; 0x1e000
   12584:	ldr	pc, [ip, #3012]!	; 0xbc4

00012588 <coda_cursor_goto_next_record_field@plt>:
   12588:	add	ip, pc, #0, 12
   1258c:	add	ip, ip, #122880	; 0x1e000
   12590:	ldr	pc, [ip, #3004]!	; 0xbbc

00012594 <fputc@plt>:
   12594:	add	ip, pc, #0, 12
   12598:	add	ip, ip, #122880	; 0x1e000
   1259c:	ldr	pc, [ip, #2996]!	; 0xbb4

000125a0 <coda_type_get_array_dim@plt>:
   125a0:	add	ip, pc, #0, 12
   125a4:	add	ip, ip, #122880	; 0x1e000
   125a8:	ldr	pc, [ip, #2988]!	; 0xbac

000125ac <coda_cursor_get_bit_size@plt>:
   125ac:	add	ip, pc, #0, 12
   125b0:	add	ip, ip, #122880	; 0x1e000
   125b4:	ldr	pc, [ip, #2980]!	; 0xba4

000125b8 <atoi@plt>:
   125b8:	add	ip, pc, #0, 12
   125bc:	add	ip, ip, #122880	; 0x1e000
   125c0:	ldr	pc, [ip, #2972]!	; 0xb9c

000125c4 <coda_errno_to_string@plt>:
   125c4:	add	ip, pc, #0, 12
   125c8:	add	ip, ip, #122880	; 0x1e000
   125cc:	ldr	pc, [ip, #2964]!	; 0xb94

000125d0 <coda_cursor_use_base_type_of_special_type@plt>:
   125d0:	add	ip, pc, #0, 12
   125d4:	add	ip, ip, #122880	; 0x1e000
   125d8:	ldr	pc, [ip, #2956]!	; 0xb8c

000125dc <coda_cursor_get_available_union_field_index@plt>:
   125dc:	add	ip, pc, #0, 12
   125e0:	add	ip, ip, #122880	; 0x1e000
   125e4:	ldr	pc, [ip, #2948]!	; 0xb84

000125e8 <coda_cursor_read_int32@plt>:
   125e8:	add	ip, pc, #0, 12
   125ec:	add	ip, ip, #122880	; 0x1e000
   125f0:	ldr	pc, [ip, #2940]!	; 0xb7c

000125f4 <coda_cursor_get_file_bit_offset@plt>:
   125f4:	add	ip, pc, #0, 12
   125f8:	add	ip, ip, #122880	; 0x1e000
   125fc:	ldr	pc, [ip, #2932]!	; 0xb74

00012600 <coda_get_libcoda_version@plt>:
   12600:	add	ip, pc, #0, 12
   12604:	add	ip, ip, #122880	; 0x1e000
   12608:	ldr	pc, [ip, #2924]!	; 0xb6c

0001260c <coda_get_errno@plt>:
   1260c:	add	ip, pc, #0, 12
   12610:	add	ip, ip, #122880	; 0x1e000
   12614:	ldr	pc, [ip, #2916]!	; 0xb64

00012618 <coda_type_get_special_base_type@plt>:
   12618:	add	ip, pc, #0, 12
   1261c:	add	ip, ip, #122880	; 0x1e000
   12620:	ldr	pc, [ip, #2908]!	; 0xb5c

00012624 <coda_type_get_record_field_name@plt>:
   12624:	add	ip, pc, #0, 12
   12628:	add	ip, ip, #122880	; 0x1e000
   1262c:	ldr	pc, [ip, #2900]!	; 0xb54

00012630 <fputs@plt>:
   12630:	add	ip, pc, #0, 12
   12634:	add	ip, ip, #122880	; 0x1e000
   12638:	ldr	pc, [ip, #2892]!	; 0xb4c

0001263c <abort@plt>:
   1263c:	add	ip, pc, #0, 12
   12640:	add	ip, ip, #122880	; 0x1e000
   12644:	ldr	pc, [ip, #2884]!	; 0xb44

00012648 <coda_cursor_read_bits@plt>:
   12648:	add	ip, pc, #0, 12
   1264c:	add	ip, ip, #122880	; 0x1e000
   12650:	ldr	pc, [ip, #2876]!	; 0xb3c

00012654 <coda_str64@plt>:
   12654:	add	ip, pc, #0, 12
   12658:	add	ip, ip, #122880	; 0x1e000
   1265c:	ldr	pc, [ip, #2868]!	; 0xb34

00012660 <__assert_fail@plt>:
   12660:	add	ip, pc, #0, 12
   12664:	add	ip, ip, #122880	; 0x1e000
   12668:	ldr	pc, [ip, #2860]!	; 0xb2c

0001266c <coda_type_get_class@plt>:
   1266c:	add	ip, pc, #0, 12
   12670:	add	ip, ip, #122880	; 0x1e000
   12674:	ldr	pc, [ip, #2852]!	; 0xb24

Disassembly of section .text:

00012678 <_start@@Base>:
   12678:	mov	fp, #0
   1267c:	mov	lr, #0
   12680:	pop	{r1}		; (ldr r1, [sp], #4)
   12684:	mov	r2, sp
   12688:	push	{r2}		; (str r2, [sp, #-4]!)
   1268c:	push	{r0}		; (str r0, [sp, #-4]!)
   12690:	ldr	ip, [pc, #16]	; 126a8 <_start@@Base+0x30>
   12694:	push	{ip}		; (str ip, [sp, #-4]!)
   12698:	ldr	r0, [pc, #12]	; 126ac <_start@@Base+0x34>
   1269c:	ldr	r3, [pc, #12]	; 126b0 <_start@@Base+0x38>
   126a0:	bl	123d8 <__libc_start_main@plt>
   126a4:	bl	1263c <abort@plt>
   126a8:	andeq	lr, r1, r4, lsl #10
   126ac:	andeq	sp, r1, r0, ror #27
   126b0:	andeq	lr, r1, r4, lsr #9
   126b4:	ldr	r3, [pc, #20]	; 126d0 <_start@@Base+0x58>
   126b8:	ldr	r2, [pc, #20]	; 126d4 <_start@@Base+0x5c>
   126bc:	add	r3, pc, r3
   126c0:	ldr	r2, [r3, r2]
   126c4:	cmp	r2, #0
   126c8:	bxeq	lr
   126cc:	b	123e4 <__gmon_start__@plt>
   126d0:	andeq	lr, r1, ip, lsr r9
   126d4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   126d8:	ldr	r3, [pc, #28]	; 126fc <_start@@Base+0x84>
   126dc:	ldr	r0, [pc, #28]	; 12700 <_start@@Base+0x88>
   126e0:	sub	r3, r3, r0
   126e4:	cmp	r3, #6
   126e8:	bxls	lr
   126ec:	ldr	r3, [pc, #16]	; 12704 <_start@@Base+0x8c>
   126f0:	cmp	r3, #0
   126f4:	bxeq	lr
   126f8:	bx	r3
   126fc:	andeq	r1, r3, r7, lsl #4
   12700:	andeq	r1, r3, r4, lsl #4
   12704:	andeq	r0, r0, r0
   12708:	ldr	r1, [pc, #36]	; 12734 <_start@@Base+0xbc>
   1270c:	ldr	r0, [pc, #36]	; 12738 <_start@@Base+0xc0>
   12710:	sub	r1, r1, r0
   12714:	asr	r1, r1, #2
   12718:	add	r1, r1, r1, lsr #31
   1271c:	asrs	r1, r1, #1
   12720:	bxeq	lr
   12724:	ldr	r3, [pc, #16]	; 1273c <_start@@Base+0xc4>
   12728:	cmp	r3, #0
   1272c:	bxeq	lr
   12730:	bx	r3
   12734:	andeq	r1, r3, r4, lsl #4
   12738:	andeq	r1, r3, r4, lsl #4
   1273c:	andeq	r0, r0, r0
   12740:	push	{r4, lr}
   12744:	ldr	r4, [pc, #24]	; 12764 <_start@@Base+0xec>
   12748:	ldrb	r3, [r4]
   1274c:	cmp	r3, #0
   12750:	popne	{r4, pc}
   12754:	bl	126d8 <_start@@Base+0x60>
   12758:	mov	r3, #1
   1275c:	strb	r3, [r4]
   12760:	pop	{r4, pc}
   12764:	andeq	r1, r3, r8, lsl #4
   12768:	ldr	r0, [pc, #40]	; 12798 <_start@@Base+0x120>
   1276c:	ldr	r3, [r0]
   12770:	cmp	r3, #0
   12774:	bne	1277c <_start@@Base+0x104>
   12778:	b	12708 <_start@@Base+0x90>
   1277c:	ldr	r3, [pc, #24]	; 1279c <_start@@Base+0x124>
   12780:	cmp	r3, #0
   12784:	beq	12778 <_start@@Base+0x100>
   12788:	push	{r4, lr}
   1278c:	blx	r3
   12790:	pop	{r4, lr}
   12794:	b	12708 <_start@@Base+0x90>
   12798:	strdeq	r0, [r3], -ip
   1279c:	andeq	r0, r0, r0
   127a0:	push	{r4, fp, lr}
   127a4:	add	fp, sp, #8
   127a8:	sub	sp, sp, #28
   127ac:	str	r0, [fp, #-32]	; 0xffffffe0
   127b0:	ldr	r4, [pc, #292]	; 128dc <_start@@Base+0x264>
   127b4:	add	r4, pc, r4
   127b8:	mov	r3, #0
   127bc:	str	r3, [fp, #-16]
   127c0:	mov	r3, #0
   127c4:	str	r3, [fp, #-20]	; 0xffffffec
   127c8:	b	128b8 <_start@@Base+0x240>
   127cc:	ldr	r3, [pc, #268]	; 128e0 <_start@@Base+0x268>
   127d0:	ldr	r3, [r4, r3]
   127d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   127d8:	add	r2, r2, #2
   127dc:	ldr	r3, [r3, r2, lsl #2]
   127e0:	sub	r2, fp, #28
   127e4:	mov	r1, r2
   127e8:	mov	r0, r3
   127ec:	bl	1266c <coda_type_get_class@plt>
   127f0:	mov	r3, r0
   127f4:	cmp	r3, #0
   127f8:	beq	12800 <_start@@Base+0x188>
   127fc:	bl	1bab8 <handle_coda_error@@Base>
   12800:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12804:	cmp	r3, #1
   12808:	bne	128ac <_start@@Base+0x234>
   1280c:	mov	r3, #0
   12810:	str	r3, [fp, #-24]	; 0xffffffe8
   12814:	b	1286c <_start@@Base+0x1f4>
   12818:	ldr	r3, [pc, #192]	; 128e0 <_start@@Base+0x268>
   1281c:	ldr	r1, [r4, r3]
   12820:	ldr	r2, [fp, #-16]
   12824:	mov	r3, r2
   12828:	lsl	r3, r3, #2
   1282c:	add	r3, r3, r2
   12830:	lsl	r3, r3, #2
   12834:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12838:	add	r3, r3, r2
   1283c:	add	r3, r3, #212	; 0xd4
   12840:	ldr	r2, [r1, r3, lsl #2]
   12844:	ldr	r3, [pc, #152]	; 128e4 <_start@@Base+0x26c>
   12848:	ldr	r3, [r4, r3]
   1284c:	ldr	r3, [r3]
   12850:	ldr	r1, [pc, #144]	; 128e8 <_start@@Base+0x270>
   12854:	add	r1, pc, r1
   12858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1285c:	bl	1245c <fprintf@plt>
   12860:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12864:	add	r3, r3, #1
   12868:	str	r3, [fp, #-24]	; 0xffffffe8
   1286c:	ldr	r3, [pc, #108]	; 128e0 <_start@@Base+0x268>
   12870:	ldr	r1, [r4, r3]
   12874:	ldr	r2, [fp, #-16]
   12878:	mov	r3, r2
   1287c:	lsl	r3, r3, #2
   12880:	add	r3, r3, r2
   12884:	lsl	r3, r3, #4
   12888:	add	r3, r1, r3
   1288c:	add	r3, r3, #804	; 0x324
   12890:	ldr	r2, [r3]
   12894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12898:	cmp	r2, r3
   1289c:	bgt	12818 <_start@@Base+0x1a0>
   128a0:	ldr	r3, [fp, #-16]
   128a4:	add	r3, r3, #1
   128a8:	str	r3, [fp, #-16]
   128ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   128b0:	add	r3, r3, #1
   128b4:	str	r3, [fp, #-20]	; 0xffffffec
   128b8:	ldr	r3, [pc, #32]	; 128e0 <_start@@Base+0x268>
   128bc:	ldr	r3, [r4, r3]
   128c0:	ldr	r2, [r3, #136]	; 0x88
   128c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   128c8:	cmp	r2, r3
   128cc:	bgt	127cc <_start@@Base+0x154>
   128d0:	nop			; (mov r0, r0)
   128d4:	sub	sp, fp, #8
   128d8:	pop	{r4, fp, pc}
   128dc:	andeq	lr, r1, r4, asr #16
   128e0:			; <UNDEFINED> instruction: 0x000001b4
   128e4:	andeq	r0, r0, r0, asr #3
   128e8:			; <UNDEFINED> instruction: 0x0000bcb8
   128ec:	push	{r4, r6, r7, fp, lr}
   128f0:	add	fp, sp, #16
   128f4:	sub	sp, sp, #220	; 0xdc
   128f8:	str	r0, [fp, #-216]	; 0xffffff28
   128fc:	str	r1, [fp, #-220]	; 0xffffff24
   12900:	ldr	r4, [pc, #2316]	; 13214 <_start@@Base+0xb9c>
   12904:	add	r4, pc, r4
   12908:	ldr	r3, [pc, #2312]	; 13218 <_start@@Base+0xba0>
   1290c:	ldr	r3, [r4, r3]
   12910:	ldr	r3, [r3]
   12914:	cmp	r3, #0
   12918:	beq	12924 <_start@@Base+0x2ac>
   1291c:	ldr	r0, [fp, #-216]	; 0xffffff28
   12920:	bl	127a0 <_start@@Base+0x128>
   12924:	ldr	r3, [pc, #2288]	; 1321c <_start@@Base+0xba4>
   12928:	ldr	r3, [r4, r3]
   1292c:	ldr	r2, [fp, #-220]	; 0xffffff24
   12930:	add	r2, r2, #2
   12934:	ldr	r3, [r3, r2, lsl #2]
   12938:	sub	r2, fp, #48	; 0x30
   1293c:	mov	r1, r2
   12940:	mov	r0, r3
   12944:	bl	1266c <coda_type_get_class@plt>
   12948:	mov	r3, r0
   1294c:	cmp	r3, #0
   12950:	beq	12958 <_start@@Base+0x2e0>
   12954:	bl	1bab8 <handle_coda_error@@Base>
   12958:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1295c:	cmp	r3, #6
   12960:	addls	pc, pc, r3, lsl #2
   12964:	b	131fc <_start@@Base+0xb84>
   12968:	b	131d0 <_start@@Base+0xb58>
   1296c:	b	131d0 <_start@@Base+0xb58>
   12970:	b	12984 <_start@@Base+0x30c>
   12974:	b	12984 <_start@@Base+0x30c>
   12978:	b	12984 <_start@@Base+0x30c>
   1297c:	b	12984 <_start@@Base+0x30c>
   12980:	b	12fd4 <_start@@Base+0x95c>
   12984:	ldr	r3, [pc, #2192]	; 1321c <_start@@Base+0xba4>
   12988:	ldr	r3, [r4, r3]
   1298c:	ldr	r2, [fp, #-220]	; 0xffffff24
   12990:	add	r2, r2, #2
   12994:	ldr	r3, [r3, r2, lsl #2]
   12998:	sub	r2, fp, #52	; 0x34
   1299c:	mov	r1, r2
   129a0:	mov	r0, r3
   129a4:	bl	12420 <coda_type_get_read_type@plt>
   129a8:	mov	r3, r0
   129ac:	cmp	r3, #0
   129b0:	beq	129b8 <_start@@Base+0x340>
   129b4:	bl	1bab8 <handle_coda_error@@Base>
   129b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   129bc:	add	r3, r3, #1
   129c0:	cmp	r3, #13
   129c4:	addls	pc, pc, r3, lsl #2
   129c8:	b	131f0 <_start@@Base+0xb78>
   129cc:	b	12fb0 <_start@@Base+0x938>
   129d0:	b	12e24 <_start@@Base+0x7ac>
   129d4:	b	12e6c <_start@@Base+0x7f4>
   129d8:	b	12e24 <_start@@Base+0x7ac>
   129dc:	b	12e6c <_start@@Base+0x7f4>
   129e0:	b	12e24 <_start@@Base+0x7ac>
   129e4:	b	12e6c <_start@@Base+0x7f4>
   129e8:	b	12eb4 <_start@@Base+0x83c>
   129ec:	b	12f00 <_start@@Base+0x888>
   129f0:	b	12f4c <_start@@Base+0x8d4>
   129f4:	b	12f4c <_start@@Base+0x8d4>
   129f8:	b	12a04 <_start@@Base+0x38c>
   129fc:	b	12a74 <_start@@Base+0x3fc>
   12a00:	b	12b64 <_start@@Base+0x4ec>
   12a04:	sub	r3, fp, #53	; 0x35
   12a08:	mov	r1, r3
   12a0c:	ldr	r3, [pc, #2056]	; 1321c <_start@@Base+0xba4>
   12a10:	ldr	r3, [r4, r3]
   12a14:	add	r0, r3, #144	; 0x90
   12a18:	bl	124a4 <coda_cursor_read_char@plt>
   12a1c:	mov	r3, r0
   12a20:	cmp	r3, #0
   12a24:	beq	12a2c <_start@@Base+0x3b4>
   12a28:	bl	1bab8 <handle_coda_error@@Base>
   12a2c:	ldr	r3, [pc, #2028]	; 13220 <_start@@Base+0xba8>
   12a30:	ldr	r3, [r4, r3]
   12a34:	ldr	r3, [r3]
   12a38:	cmp	r3, #0
   12a3c:	beq	12a60 <_start@@Base+0x3e8>
   12a40:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   12a44:	mov	r2, r3
   12a48:	ldr	r3, [pc, #2004]	; 13224 <_start@@Base+0xbac>
   12a4c:	add	r3, pc, r3
   12a50:	mov	r1, r3
   12a54:	ldr	r0, [fp, #-216]	; 0xffffff28
   12a58:	bl	1245c <fprintf@plt>
   12a5c:	b	12fd0 <_start@@Base+0x958>
   12a60:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   12a64:	ldr	r1, [fp, #-216]	; 0xffffff28
   12a68:	mov	r0, r3
   12a6c:	bl	12594 <fputc@plt>
   12a70:	b	12fd0 <_start@@Base+0x958>
   12a74:	sub	r3, fp, #60	; 0x3c
   12a78:	mov	r1, r3
   12a7c:	ldr	r3, [pc, #1944]	; 1321c <_start@@Base+0xba4>
   12a80:	ldr	r3, [r4, r3]
   12a84:	add	r0, r3, #144	; 0x90
   12a88:	bl	1242c <coda_cursor_get_string_length@plt>
   12a8c:	mov	r3, r0
   12a90:	cmp	r3, #0
   12a94:	beq	12a9c <_start@@Base+0x424>
   12a98:	bl	1bab8 <handle_coda_error@@Base>
   12a9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12aa0:	add	r3, r3, #1
   12aa4:	mov	r0, r3
   12aa8:	bl	123cc <malloc@plt>
   12aac:	mov	r3, r0
   12ab0:	str	r3, [fp, #-28]	; 0xffffffe4
   12ab4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12ab8:	cmp	r3, #0
   12abc:	bne	12aec <_start@@Base+0x474>
   12ac0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12ac4:	add	r2, r3, #1
   12ac8:	mov	r3, #126	; 0x7e
   12acc:	str	r3, [sp]
   12ad0:	ldr	r3, [pc, #1872]	; 13228 <_start@@Base+0xbb0>
   12ad4:	add	r3, pc, r3
   12ad8:	ldr	r1, [pc, #1868]	; 1322c <_start@@Base+0xbb4>
   12adc:	add	r1, pc, r1
   12ae0:	mvn	r0, #0
   12ae4:	bl	1224c <coda_set_error@plt>
   12ae8:	bl	1bab8 <handle_coda_error@@Base>
   12aec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   12af0:	add	r3, r3, #1
   12af4:	mov	r2, r3
   12af8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12afc:	ldr	r3, [pc, #1816]	; 1321c <_start@@Base+0xba4>
   12b00:	ldr	r3, [r4, r3]
   12b04:	add	r0, r3, #144	; 0x90
   12b08:	bl	123f0 <coda_cursor_read_string@plt>
   12b0c:	mov	r3, r0
   12b10:	cmp	r3, #0
   12b14:	beq	12b1c <_start@@Base+0x4a4>
   12b18:	bl	1bab8 <handle_coda_error@@Base>
   12b1c:	ldr	r3, [pc, #1788]	; 13220 <_start@@Base+0xba8>
   12b20:	ldr	r3, [r4, r3]
   12b24:	ldr	r3, [r3]
   12b28:	cmp	r3, #0
   12b2c:	beq	12b4c <_start@@Base+0x4d4>
   12b30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b34:	ldr	r3, [pc, #1780]	; 13230 <_start@@Base+0xbb8>
   12b38:	add	r3, pc, r3
   12b3c:	mov	r1, r3
   12b40:	ldr	r0, [fp, #-216]	; 0xffffff28
   12b44:	bl	1245c <fprintf@plt>
   12b48:	b	12b58 <_start@@Base+0x4e0>
   12b4c:	ldr	r1, [fp, #-216]	; 0xffffff28
   12b50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b54:	bl	12630 <fputs@plt>
   12b58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b5c:	bl	12294 <free@plt>
   12b60:	b	12fd0 <_start@@Base+0x958>
   12b64:	sub	r3, fp, #68	; 0x44
   12b68:	mov	r1, r3
   12b6c:	ldr	r3, [pc, #1704]	; 1321c <_start@@Base+0xba4>
   12b70:	ldr	r3, [r4, r3]
   12b74:	add	r0, r3, #144	; 0x90
   12b78:	bl	125ac <coda_cursor_get_bit_size@plt>
   12b7c:	mov	r3, r0
   12b80:	cmp	r3, #0
   12b84:	beq	12b8c <_start@@Base+0x514>
   12b88:	bl	1bab8 <handle_coda_error@@Base>
   12b8c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12b90:	lsr	r6, r2, #3
   12b94:	orr	r6, r6, r3, lsl #29
   12b98:	asr	r7, r3, #3
   12b9c:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12ba0:	mov	r0, #7
   12ba4:	mov	r1, #0
   12ba8:	and	r2, r2, r0
   12bac:	and	r3, r3, r1
   12bb0:	orrs	r3, r2, r3
   12bb4:	beq	12bc4 <_start@@Base+0x54c>
   12bb8:	mov	r2, #1
   12bbc:	mov	r3, #0
   12bc0:	b	12bcc <_start@@Base+0x554>
   12bc4:	mov	r2, #0
   12bc8:	mov	r3, #0
   12bcc:	adds	r2, r2, r6
   12bd0:	adc	r3, r3, r7
   12bd4:	strd	r2, [fp, #-36]	; 0xffffffdc
   12bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12bdc:	mov	r0, r3
   12be0:	bl	123cc <malloc@plt>
   12be4:	mov	r3, r0
   12be8:	str	r3, [fp, #-40]	; 0xffffffd8
   12bec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12bf0:	cmp	r3, #0
   12bf4:	bne	12c20 <_start@@Base+0x5a8>
   12bf8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12bfc:	mov	r3, #163	; 0xa3
   12c00:	str	r3, [sp]
   12c04:	ldr	r3, [pc, #1576]	; 13234 <_start@@Base+0xbbc>
   12c08:	add	r3, pc, r3
   12c0c:	ldr	r1, [pc, #1572]	; 13238 <_start@@Base+0xbc0>
   12c10:	add	r1, pc, r1
   12c14:	mvn	r0, #0
   12c18:	bl	1224c <coda_set_error@plt>
   12c1c:	bl	1bab8 <handle_coda_error@@Base>
   12c20:	ldrd	r2, [fp, #-68]	; 0xffffffbc
   12c24:	strd	r2, [sp]
   12c28:	mov	r2, #0
   12c2c:	mov	r3, #0
   12c30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c34:	ldr	r0, [pc, #1504]	; 1321c <_start@@Base+0xba4>
   12c38:	ldr	r0, [r4, r0]
   12c3c:	add	r0, r0, #144	; 0x90
   12c40:	bl	12648 <coda_cursor_read_bits@plt>
   12c44:	mov	r3, r0
   12c48:	cmp	r3, #0
   12c4c:	beq	12c54 <_start@@Base+0x5dc>
   12c50:	bl	1bab8 <handle_coda_error@@Base>
   12c54:	mov	r3, #0
   12c58:	str	r3, [fp, #-24]	; 0xffffffe8
   12c5c:	b	12dfc <_start@@Base+0x784>
   12c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c68:	add	r3, r2, r3
   12c6c:	ldrb	r3, [r3]
   12c70:	strb	r3, [fp, #-41]	; 0xffffffd7
   12c74:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   12c78:	cmp	r3, #10
   12c7c:	beq	12d1c <_start@@Base+0x6a4>
   12c80:	cmp	r3, #10
   12c84:	bgt	12ca4 <_start@@Base+0x62c>
   12c88:	cmp	r3, #8
   12c8c:	beq	12ce4 <_start@@Base+0x66c>
   12c90:	cmp	r3, #8
   12c94:	bgt	12d00 <_start@@Base+0x688>
   12c98:	cmp	r3, #7
   12c9c:	beq	12cc8 <_start@@Base+0x650>
   12ca0:	b	12da8 <_start@@Base+0x730>
   12ca4:	cmp	r3, #12
   12ca8:	beq	12d54 <_start@@Base+0x6dc>
   12cac:	cmp	r3, #12
   12cb0:	blt	12d38 <_start@@Base+0x6c0>
   12cb4:	cmp	r3, #13
   12cb8:	beq	12d70 <_start@@Base+0x6f8>
   12cbc:	cmp	r3, #92	; 0x5c
   12cc0:	beq	12d8c <_start@@Base+0x714>
   12cc4:	b	12da8 <_start@@Base+0x730>
   12cc8:	ldr	r3, [fp, #-216]	; 0xffffff28
   12ccc:	mov	r2, #2
   12cd0:	mov	r1, #1
   12cd4:	ldr	r0, [pc, #1376]	; 1323c <_start@@Base+0xbc4>
   12cd8:	add	r0, pc, r0
   12cdc:	bl	12378 <fwrite@plt>
   12ce0:	b	12df0 <_start@@Base+0x778>
   12ce4:	ldr	r3, [fp, #-216]	; 0xffffff28
   12ce8:	mov	r2, #2
   12cec:	mov	r1, #1
   12cf0:	ldr	r0, [pc, #1352]	; 13240 <_start@@Base+0xbc8>
   12cf4:	add	r0, pc, r0
   12cf8:	bl	12378 <fwrite@plt>
   12cfc:	b	12df0 <_start@@Base+0x778>
   12d00:	ldr	r3, [fp, #-216]	; 0xffffff28
   12d04:	mov	r2, #2
   12d08:	mov	r1, #1
   12d0c:	ldr	r0, [pc, #1328]	; 13244 <_start@@Base+0xbcc>
   12d10:	add	r0, pc, r0
   12d14:	bl	12378 <fwrite@plt>
   12d18:	b	12df0 <_start@@Base+0x778>
   12d1c:	ldr	r3, [fp, #-216]	; 0xffffff28
   12d20:	mov	r2, #2
   12d24:	mov	r1, #1
   12d28:	ldr	r0, [pc, #1304]	; 13248 <_start@@Base+0xbd0>
   12d2c:	add	r0, pc, r0
   12d30:	bl	12378 <fwrite@plt>
   12d34:	b	12df0 <_start@@Base+0x778>
   12d38:	ldr	r3, [fp, #-216]	; 0xffffff28
   12d3c:	mov	r2, #2
   12d40:	mov	r1, #1
   12d44:	ldr	r0, [pc, #1280]	; 1324c <_start@@Base+0xbd4>
   12d48:	add	r0, pc, r0
   12d4c:	bl	12378 <fwrite@plt>
   12d50:	b	12df0 <_start@@Base+0x778>
   12d54:	ldr	r3, [fp, #-216]	; 0xffffff28
   12d58:	mov	r2, #2
   12d5c:	mov	r1, #1
   12d60:	ldr	r0, [pc, #1256]	; 13250 <_start@@Base+0xbd8>
   12d64:	add	r0, pc, r0
   12d68:	bl	12378 <fwrite@plt>
   12d6c:	b	12df0 <_start@@Base+0x778>
   12d70:	ldr	r3, [fp, #-216]	; 0xffffff28
   12d74:	mov	r2, #2
   12d78:	mov	r1, #1
   12d7c:	ldr	r0, [pc, #1232]	; 13254 <_start@@Base+0xbdc>
   12d80:	add	r0, pc, r0
   12d84:	bl	12378 <fwrite@plt>
   12d88:	b	12df0 <_start@@Base+0x778>
   12d8c:	ldr	r3, [fp, #-216]	; 0xffffff28
   12d90:	mov	r2, #2
   12d94:	mov	r1, #1
   12d98:	ldr	r0, [pc, #1208]	; 13258 <_start@@Base+0xbe0>
   12d9c:	add	r0, pc, r0
   12da0:	bl	12378 <fwrite@plt>
   12da4:	b	12df0 <_start@@Base+0x778>
   12da8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   12dac:	cmp	r3, #31
   12db0:	bls	12dd4 <_start@@Base+0x75c>
   12db4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   12db8:	cmp	r3, #126	; 0x7e
   12dbc:	bhi	12dd4 <_start@@Base+0x75c>
   12dc0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   12dc4:	ldr	r1, [fp, #-216]	; 0xffffff28
   12dc8:	mov	r0, r3
   12dcc:	bl	12594 <fputc@plt>
   12dd0:	b	12df0 <_start@@Base+0x778>
   12dd4:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   12dd8:	mov	r2, r3
   12ddc:	ldr	r3, [pc, #1144]	; 1325c <_start@@Base+0xbe4>
   12de0:	add	r3, pc, r3
   12de4:	mov	r1, r3
   12de8:	ldr	r0, [fp, #-216]	; 0xffffff28
   12dec:	bl	1245c <fprintf@plt>
   12df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12df4:	add	r3, r3, #1
   12df8:	str	r3, [fp, #-24]	; 0xffffffe8
   12dfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12e00:	mov	r0, r3
   12e04:	asr	r1, r0, #31
   12e08:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   12e0c:	cmp	r0, r2
   12e10:	sbcs	r3, r1, r3
   12e14:	blt	12c60 <_start@@Base+0x5e8>
   12e18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e1c:	bl	12294 <free@plt>
   12e20:	b	12fd0 <_start@@Base+0x958>
   12e24:	sub	r3, fp, #72	; 0x48
   12e28:	mov	r1, r3
   12e2c:	ldr	r3, [pc, #1000]	; 1321c <_start@@Base+0xba4>
   12e30:	ldr	r3, [r4, r3]
   12e34:	add	r0, r3, #144	; 0x90
   12e38:	bl	125e8 <coda_cursor_read_int32@plt>
   12e3c:	mov	r3, r0
   12e40:	cmp	r3, #0
   12e44:	beq	12e4c <_start@@Base+0x7d4>
   12e48:	bl	1bab8 <handle_coda_error@@Base>
   12e4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   12e50:	mov	r2, r3
   12e54:	ldr	r3, [pc, #1028]	; 13260 <_start@@Base+0xbe8>
   12e58:	add	r3, pc, r3
   12e5c:	mov	r1, r3
   12e60:	ldr	r0, [fp, #-216]	; 0xffffff28
   12e64:	bl	1245c <fprintf@plt>
   12e68:	b	12fd0 <_start@@Base+0x958>
   12e6c:	sub	r3, fp, #76	; 0x4c
   12e70:	mov	r1, r3
   12e74:	ldr	r3, [pc, #928]	; 1321c <_start@@Base+0xba4>
   12e78:	ldr	r3, [r4, r3]
   12e7c:	add	r0, r3, #144	; 0x90
   12e80:	bl	122b8 <coda_cursor_read_uint32@plt>
   12e84:	mov	r3, r0
   12e88:	cmp	r3, #0
   12e8c:	beq	12e94 <_start@@Base+0x81c>
   12e90:	bl	1bab8 <handle_coda_error@@Base>
   12e94:	ldr	r3, [fp, #-76]	; 0xffffffb4
   12e98:	mov	r2, r3
   12e9c:	ldr	r3, [pc, #960]	; 13264 <_start@@Base+0xbec>
   12ea0:	add	r3, pc, r3
   12ea4:	mov	r1, r3
   12ea8:	ldr	r0, [fp, #-216]	; 0xffffff28
   12eac:	bl	1245c <fprintf@plt>
   12eb0:	b	12fd0 <_start@@Base+0x958>
   12eb4:	sub	r3, fp, #84	; 0x54
   12eb8:	mov	r1, r3
   12ebc:	ldr	r3, [pc, #856]	; 1321c <_start@@Base+0xba4>
   12ec0:	ldr	r3, [r4, r3]
   12ec4:	add	r0, r3, #144	; 0x90
   12ec8:	bl	1254c <coda_cursor_read_int64@plt>
   12ecc:	mov	r3, r0
   12ed0:	cmp	r3, #0
   12ed4:	beq	12edc <_start@@Base+0x864>
   12ed8:	bl	1bab8 <handle_coda_error@@Base>
   12edc:	ldrd	r0, [fp, #-84]	; 0xffffffac
   12ee0:	sub	r3, fp, #108	; 0x6c
   12ee4:	mov	r2, r3
   12ee8:	bl	12654 <coda_str64@plt>
   12eec:	sub	r3, fp, #108	; 0x6c
   12ef0:	ldr	r1, [fp, #-216]	; 0xffffff28
   12ef4:	mov	r0, r3
   12ef8:	bl	12630 <fputs@plt>
   12efc:	b	12fd0 <_start@@Base+0x958>
   12f00:	sub	r3, fp, #116	; 0x74
   12f04:	mov	r1, r3
   12f08:	ldr	r3, [pc, #780]	; 1321c <_start@@Base+0xba4>
   12f0c:	ldr	r3, [r4, r3]
   12f10:	add	r0, r3, #144	; 0x90
   12f14:	bl	12438 <coda_cursor_read_uint64@plt>
   12f18:	mov	r3, r0
   12f1c:	cmp	r3, #0
   12f20:	beq	12f28 <_start@@Base+0x8b0>
   12f24:	bl	1bab8 <handle_coda_error@@Base>
   12f28:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   12f2c:	sub	r3, fp, #140	; 0x8c
   12f30:	mov	r2, r3
   12f34:	bl	12288 <coda_str64u@plt>
   12f38:	sub	r3, fp, #140	; 0x8c
   12f3c:	ldr	r1, [fp, #-216]	; 0xffffff28
   12f40:	mov	r0, r3
   12f44:	bl	12630 <fputs@plt>
   12f48:	b	12fd0 <_start@@Base+0x958>
   12f4c:	sub	r3, fp, #148	; 0x94
   12f50:	mov	r1, r3
   12f54:	ldr	r3, [pc, #704]	; 1321c <_start@@Base+0xba4>
   12f58:	ldr	r3, [r4, r3]
   12f5c:	add	r0, r3, #144	; 0x90
   12f60:	bl	12444 <coda_cursor_read_double@plt>
   12f64:	mov	r3, r0
   12f68:	cmp	r3, #0
   12f6c:	beq	12f74 <_start@@Base+0x8fc>
   12f70:	bl	1bab8 <handle_coda_error@@Base>
   12f74:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12f78:	cmp	r3, #8
   12f7c:	bne	12f98 <_start@@Base+0x920>
   12f80:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   12f84:	ldr	r1, [pc, #732]	; 13268 <_start@@Base+0xbf0>
   12f88:	add	r1, pc, r1
   12f8c:	ldr	r0, [fp, #-216]	; 0xffffff28
   12f90:	bl	1245c <fprintf@plt>
   12f94:	b	12fd0 <_start@@Base+0x958>
   12f98:	ldrd	r2, [fp, #-148]	; 0xffffff6c
   12f9c:	ldr	r1, [pc, #712]	; 1326c <_start@@Base+0xbf4>
   12fa0:	add	r1, pc, r1
   12fa4:	ldr	r0, [fp, #-216]	; 0xffffff28
   12fa8:	bl	1245c <fprintf@plt>
   12fac:	b	12fd0 <_start@@Base+0x958>
   12fb0:	ldr	r3, [pc, #696]	; 13270 <_start@@Base+0xbf8>
   12fb4:	add	r3, pc, r3
   12fb8:	ldr	r2, [pc, #692]	; 13274 <_start@@Base+0xbfc>
   12fbc:	ldr	r1, [pc, #692]	; 13278 <_start@@Base+0xc00>
   12fc0:	add	r1, pc, r1
   12fc4:	ldr	r0, [pc, #688]	; 1327c <_start@@Base+0xc04>
   12fc8:	add	r0, pc, r0
   12fcc:	bl	12660 <__assert_fail@plt>
   12fd0:	b	131f0 <_start@@Base+0xb78>
   12fd4:	ldr	r3, [pc, #576]	; 1321c <_start@@Base+0xba4>
   12fd8:	ldr	r3, [r4, r3]
   12fdc:	ldr	r2, [fp, #-220]	; 0xffffff24
   12fe0:	add	r2, r2, #2
   12fe4:	ldr	r3, [r3, r2, lsl #2]
   12fe8:	sub	r2, fp, #152	; 0x98
   12fec:	mov	r1, r2
   12ff0:	mov	r0, r3
   12ff4:	bl	124d4 <coda_type_get_special_type@plt>
   12ff8:	mov	r3, r0
   12ffc:	cmp	r3, #0
   13000:	beq	13008 <_start@@Base+0x990>
   13004:	bl	1bab8 <handle_coda_error@@Base>
   13008:	ldr	r3, [fp, #-152]	; 0xffffff68
   1300c:	cmp	r3, #3
   13010:	addls	pc, pc, r3, lsl #2
   13014:	b	131f8 <_start@@Base+0xb80>
   13018:	b	131c8 <_start@@Base+0xb50>
   1301c:	b	13028 <_start@@Base+0x9b0>
   13020:	b	13028 <_start@@Base+0x9b0>
   13024:	b	13168 <_start@@Base+0xaf0>
   13028:	sub	r3, fp, #164	; 0xa4
   1302c:	mov	r1, r3
   13030:	ldr	r3, [pc, #484]	; 1321c <_start@@Base+0xba4>
   13034:	ldr	r3, [r4, r3]
   13038:	add	r0, r3, #144	; 0x90
   1303c:	bl	12444 <coda_cursor_read_double@plt>
   13040:	mov	r3, r0
   13044:	cmp	r3, #0
   13048:	beq	13050 <_start@@Base+0x9d8>
   1304c:	bl	1bab8 <handle_coda_error@@Base>
   13050:	ldr	r3, [fp, #-152]	; 0xffffff68
   13054:	cmp	r3, #2
   13058:	bne	1314c <_start@@Base+0xad4>
   1305c:	ldr	r3, [pc, #540]	; 13280 <_start@@Base+0xc08>
   13060:	ldr	r3, [r4, r3]
   13064:	ldr	r3, [r3]
   13068:	cmp	r3, #0
   1306c:	beq	1314c <_start@@Base+0xad4>
   13070:	vldr	d7, [fp, #-164]	; 0xffffff5c
   13074:	vmov.f64	d0, d7
   13078:	bl	12450 <coda_isNaN@plt>
   1307c:	mov	r3, r0
   13080:	cmp	r3, #0
   13084:	bne	130a0 <_start@@Base+0xa28>
   13088:	vldr	d7, [fp, #-164]	; 0xffffff5c
   1308c:	vmov.f64	d0, d7
   13090:	bl	122f4 <coda_isInf@plt>
   13094:	mov	r3, r0
   13098:	cmp	r3, #0
   1309c:	beq	130d4 <_start@@Base+0xa5c>
   130a0:	ldr	r3, [pc, #476]	; 13284 <_start@@Base+0xc0c>
   130a4:	add	r3, pc, r3
   130a8:	sub	ip, fp, #192	; 0xc0
   130ac:	mov	lr, r3
   130b0:	ldm	lr!, {r0, r1, r2, r3}
   130b4:	stmia	ip!, {r0, r1, r2, r3}
   130b8:	ldm	lr, {r0, r1, r2}
   130bc:	stmia	ip!, {r0, r1}
   130c0:	strh	r2, [ip]
   130c4:	add	ip, ip, #2
   130c8:	lsr	r3, r2, #16
   130cc:	strb	r3, [ip]
   130d0:	b	13104 <_start@@Base+0xa8c>
   130d4:	vldr	d7, [fp, #-164]	; 0xffffff5c
   130d8:	sub	r3, fp, #192	; 0xc0
   130dc:	mov	r1, r3
   130e0:	ldr	r3, [pc, #416]	; 13288 <_start@@Base+0xc10>
   130e4:	add	r3, pc, r3
   130e8:	mov	r0, r3
   130ec:	vmov.f64	d0, d7
   130f0:	bl	12270 <coda_time_double_to_string@plt>
   130f4:	mov	r3, r0
   130f8:	cmp	r3, #0
   130fc:	beq	13104 <_start@@Base+0xa8c>
   13100:	bl	1bab8 <handle_coda_error@@Base>
   13104:	ldr	r3, [pc, #276]	; 13220 <_start@@Base+0xba8>
   13108:	ldr	r3, [r4, r3]
   1310c:	ldr	r3, [r3]
   13110:	cmp	r3, #0
   13114:	beq	13138 <_start@@Base+0xac0>
   13118:	sub	r3, fp, #192	; 0xc0
   1311c:	mov	r2, r3
   13120:	ldr	r3, [pc, #356]	; 1328c <_start@@Base+0xc14>
   13124:	add	r3, pc, r3
   13128:	mov	r1, r3
   1312c:	ldr	r0, [fp, #-216]	; 0xffffff28
   13130:	bl	1245c <fprintf@plt>
   13134:	b	13164 <_start@@Base+0xaec>
   13138:	sub	r3, fp, #192	; 0xc0
   1313c:	ldr	r1, [fp, #-216]	; 0xffffff28
   13140:	mov	r0, r3
   13144:	bl	12630 <fputs@plt>
   13148:	b	13164 <_start@@Base+0xaec>
   1314c:	ldrd	r2, [fp, #-164]	; 0xffffff5c
   13150:	ldr	r1, [pc, #312]	; 13290 <_start@@Base+0xc18>
   13154:	add	r1, pc, r1
   13158:	ldr	r0, [fp, #-216]	; 0xffffff28
   1315c:	bl	1245c <fprintf@plt>
   13160:	b	131cc <_start@@Base+0xb54>
   13164:	b	131cc <_start@@Base+0xb54>
   13168:	sub	r3, fp, #212	; 0xd4
   1316c:	mov	r1, r3
   13170:	ldr	r3, [pc, #164]	; 1321c <_start@@Base+0xba4>
   13174:	ldr	r3, [r4, r3]
   13178:	add	r0, r3, #144	; 0x90
   1317c:	bl	1257c <coda_cursor_read_complex_double_pair@plt>
   13180:	mov	r3, r0
   13184:	cmp	r3, #0
   13188:	beq	13190 <_start@@Base+0xb18>
   1318c:	bl	1bab8 <handle_coda_error@@Base>
   13190:	ldrd	r0, [fp, #-212]	; 0xffffff2c
   13194:	ldr	r3, [pc, #248]	; 13294 <_start@@Base+0xc1c>
   13198:	ldr	r3, [r4, r3]
   1319c:	ldr	ip, [r3]
   131a0:	ldrd	r2, [fp, #-204]	; 0xffffff34
   131a4:	strd	r2, [sp, #8]
   131a8:	str	ip, [sp]
   131ac:	mov	r2, r0
   131b0:	mov	r3, r1
   131b4:	ldr	r1, [pc, #220]	; 13298 <_start@@Base+0xc20>
   131b8:	add	r1, pc, r1
   131bc:	ldr	r0, [fp, #-216]	; 0xffffff28
   131c0:	bl	1245c <fprintf@plt>
   131c4:	b	131cc <_start@@Base+0xb54>
   131c8:	nop			; (mov r0, r0)
   131cc:	b	131f8 <_start@@Base+0xb80>
   131d0:	ldr	r3, [pc, #196]	; 1329c <_start@@Base+0xc24>
   131d4:	add	r3, pc, r3
   131d8:	mov	r2, #368	; 0x170
   131dc:	ldr	r1, [pc, #188]	; 132a0 <_start@@Base+0xc28>
   131e0:	add	r1, pc, r1
   131e4:	ldr	r0, [pc, #184]	; 132a4 <_start@@Base+0xc2c>
   131e8:	add	r0, pc, r0
   131ec:	bl	12660 <__assert_fail@plt>
   131f0:	nop			; (mov r0, r0)
   131f4:	b	131fc <_start@@Base+0xb84>
   131f8:	nop			; (mov r0, r0)
   131fc:	ldr	r1, [fp, #-216]	; 0xffffff28
   13200:	mov	r0, #10
   13204:	bl	12594 <fputc@plt>
   13208:	nop			; (mov r0, r0)
   1320c:	sub	sp, fp, #16
   13210:	pop	{r4, r6, r7, fp, pc}
   13214:	strdeq	lr, [r1], -r4
   13218:	andeq	r0, r0, ip, asr #3
   1321c:			; <UNDEFINED> instruction: 0x000001b4
   13220:	andeq	r0, r0, ip, ror #3
   13224:	andeq	fp, r0, r8, asr #21
   13228:	andeq	fp, r0, r8, asr #20
   1322c:	andeq	fp, r0, r4, lsr #21
   13230:	andeq	fp, r0, r0, lsl #21
   13234:	andeq	fp, r0, r4, lsl r9
   13238:	andeq	fp, r0, r0, ror r9
   1323c:	andeq	fp, r0, r8, ror #17
   13240:	ldrdeq	fp, [r0], -r0
   13244:			; <UNDEFINED> instruction: 0x0000b8b8
   13248:	andeq	fp, r0, r0, lsr #17
   1324c:	andeq	fp, r0, r8, lsl #17
   13250:	andeq	fp, r0, r0, ror r8
   13254:	andeq	fp, r0, r8, asr r8
   13258:	andeq	fp, r0, r0, asr #16
   1325c:	andeq	fp, r0, r0, lsl #16
   13260:	muleq	r0, r0, r7
   13264:	andeq	fp, r0, ip, asr #14
   13268:	andeq	fp, r0, r8, ror #12
   1326c:	andeq	fp, r0, r8, asr r6
   13270:	muleq	r0, r0, r6
   13274:	andeq	r0, r0, r6, lsr #2
   13278:	andeq	fp, r0, ip, asr r5
   1327c:	andeq	fp, r0, r8, lsr r6
   13280:	andeq	r0, r0, r8, lsr #3
   13284:	andeq	fp, r0, r0, ror #10
   13288:	andeq	fp, r0, ip, lsr r5
   1328c:	muleq	r0, r4, r4
   13290:	andeq	fp, r0, r4, lsr #9
   13294:	andeq	r0, r0, r0, asr #3
   13298:	andeq	fp, r0, r4, lsl #9
   1329c:	andeq	fp, r0, r0, ror r4
   132a0:	andeq	fp, r0, ip, lsr r3
   132a4:	andeq	fp, r0, r8, lsl r4
   132a8:	push	{r4, fp, lr}
   132ac:	add	fp, sp, #8
   132b0:	sub	sp, sp, #84	; 0x54
   132b4:	str	r0, [fp, #-80]	; 0xffffffb0
   132b8:	str	r1, [fp, #-84]	; 0xffffffac
   132bc:	str	r2, [fp, #-88]	; 0xffffffa8
   132c0:	str	r3, [fp, #-92]	; 0xffffffa4
   132c4:	ldr	r4, [pc, #1272]	; 137c4 <_start@@Base+0x114c>
   132c8:	add	r4, pc, r4
   132cc:	ldr	r3, [pc, #1268]	; 137c8 <_start@@Base+0x1150>
   132d0:	ldr	r3, [r4, r3]
   132d4:	ldr	r2, [fp, #-84]	; 0xffffffac
   132d8:	add	r2, r2, #2
   132dc:	ldr	r3, [r3, r2, lsl #2]
   132e0:	sub	r2, fp, #40	; 0x28
   132e4:	mov	r1, r2
   132e8:	mov	r0, r3
   132ec:	bl	1266c <coda_type_get_class@plt>
   132f0:	mov	r3, r0
   132f4:	cmp	r3, #0
   132f8:	beq	13300 <_start@@Base+0xc88>
   132fc:	bl	1bab8 <handle_coda_error@@Base>
   13300:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13304:	cmp	r3, #0
   13308:	beq	136e4 <_start@@Base+0x106c>
   1330c:	cmp	r3, #1
   13310:	bne	137a4 <_start@@Base+0x112c>
   13314:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13318:	mov	r3, r2
   1331c:	lsl	r3, r3, #2
   13320:	add	r3, r3, r2
   13324:	lsl	r3, r3, #4
   13328:	add	r3, r3, #800	; 0x320
   1332c:	ldr	r2, [pc, #1172]	; 137c8 <_start@@Base+0x1150>
   13330:	ldr	r2, [r4, r2]
   13334:	add	r3, r3, r2
   13338:	str	r3, [fp, #-28]	; 0xffffffe4
   1333c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13340:	ldr	r3, [r3]
   13344:	str	r3, [fp, #-32]	; 0xffffffe0
   13348:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1334c:	cmp	r3, #0
   13350:	bne	13360 <_start@@Base+0xce8>
   13354:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13358:	mov	r2, #0
   1335c:	str	r2, [r3, #44]	; 0x2c
   13360:	ldr	r3, [pc, #1124]	; 137cc <_start@@Base+0x1154>
   13364:	ldr	r3, [r4, r3]
   13368:	ldr	r2, [r3, #104]	; 0x68
   1336c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13370:	ldr	r1, [r3, #4]
   13374:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13378:	add	r3, r1, r3
   1337c:	cmp	r2, r3
   13380:	movge	r3, #1
   13384:	movlt	r3, #0
   13388:	uxtb	r3, r3
   1338c:	str	r3, [fp, #-36]	; 0xffffffdc
   13390:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13394:	cmp	r3, #0
   13398:	beq	133f8 <_start@@Base+0xd80>
   1339c:	ldr	r3, [pc, #1060]	; 137c8 <_start@@Base+0x1150>
   133a0:	ldr	r3, [r4, r3]
   133a4:	ldr	r3, [r3, #3360]	; 0xd20
   133a8:	sub	r2, r3, #1
   133ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   133b0:	cmp	r2, r3
   133b4:	ble	133f8 <_start@@Base+0xd80>
   133b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   133bc:	add	r2, r3, #1
   133c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   133c4:	ldr	r3, [r3, #44]	; 0x2c
   133c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   133cc:	ldr	r1, [r1, #40]	; 0x28
   133d0:	mul	r1, r1, r3
   133d4:	ldr	r3, [pc, #1004]	; 137c8 <_start@@Base+0x1150>
   133d8:	ldr	r0, [r4, r3]
   133dc:	mov	r3, r2
   133e0:	lsl	r3, r3, #2
   133e4:	add	r3, r3, r2
   133e8:	lsl	r3, r3, #4
   133ec:	add	r3, r0, r3
   133f0:	add	r3, r3, #844	; 0x34c
   133f4:	str	r1, [r3]
   133f8:	mov	r3, #1
   133fc:	str	r3, [fp, #-16]
   13400:	mov	r3, #0
   13404:	str	r3, [fp, #-20]	; 0xffffffec
   13408:	b	134f4 <_start@@Base+0xe7c>
   1340c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13410:	ldr	r3, [fp, #-20]	; 0xffffffec
   13414:	add	r2, r2, r3
   13418:	ldr	r3, [pc, #940]	; 137cc <_start@@Base+0x1154>
   1341c:	ldr	r3, [r4, r3]
   13420:	add	r2, r2, #18
   13424:	ldr	r3, [r3, r2, lsl #2]
   13428:	cmp	r3, #0
   1342c:	beq	13480 <_start@@Base+0xe08>
   13430:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13434:	ldr	r3, [fp, #-20]	; 0xffffffec
   13438:	add	r3, r2, r3
   1343c:	ldr	r2, [pc, #904]	; 137cc <_start@@Base+0x1154>
   13440:	ldr	r2, [r4, r2]
   13444:	add	r3, r3, #26
   13448:	lsl	r3, r3, #2
   1344c:	add	r3, r2, r3
   13450:	ldr	r2, [r3, #4]
   13454:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13458:	ldr	r3, [r3, #44]	; 0x2c
   1345c:	lsl	r3, r3, #2
   13460:	add	r3, r2, r3
   13464:	ldr	r2, [r3]
   13468:	ldr	r3, [fp, #-20]	; 0xffffffec
   1346c:	lsl	r3, r3, #2
   13470:	sub	r1, fp, #12
   13474:	add	r3, r1, r3
   13478:	str	r2, [r3, #-64]	; 0xffffffc0
   1347c:	b	134b4 <_start@@Base+0xe3c>
   13480:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13484:	ldr	r3, [fp, #-20]	; 0xffffffec
   13488:	add	r3, r2, r3
   1348c:	ldr	r2, [pc, #824]	; 137cc <_start@@Base+0x1154>
   13490:	ldr	r2, [r4, r2]
   13494:	lsl	r3, r3, #2
   13498:	add	r3, r2, r3
   1349c:	ldr	r2, [r3, #4]
   134a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134a4:	lsl	r3, r3, #2
   134a8:	sub	r1, fp, #12
   134ac:	add	r3, r1, r3
   134b0:	str	r2, [r3, #-64]	; 0xffffffc0
   134b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134b8:	lsl	r3, r3, #2
   134bc:	sub	r2, fp, #12
   134c0:	add	r3, r2, r3
   134c4:	ldr	r2, [r3, #-64]	; 0xffffffc0
   134c8:	ldr	r3, [fp, #-16]
   134cc:	mul	r3, r2, r3
   134d0:	str	r3, [fp, #-16]
   134d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   134dc:	add	r2, r2, #12
   134e0:	mov	r1, #0
   134e4:	str	r1, [r3, r2, lsl #2]
   134e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   134ec:	add	r3, r3, #1
   134f0:	str	r3, [fp, #-20]	; 0xffffffec
   134f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134f8:	ldr	r2, [r3, #4]
   134fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13500:	cmp	r2, r3
   13504:	bgt	1340c <_start@@Base+0xd94>
   13508:	ldr	r3, [fp, #-16]
   1350c:	cmp	r3, #0
   13510:	beq	137bc <_start@@Base+0x1144>
   13514:	ldr	r3, [pc, #684]	; 137c8 <_start@@Base+0x1150>
   13518:	ldr	r3, [r4, r3]
   1351c:	add	r0, r3, #144	; 0x90
   13520:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   13524:	mov	r3, r0
   13528:	cmp	r3, #0
   1352c:	beq	13534 <_start@@Base+0xebc>
   13530:	bl	1bab8 <handle_coda_error@@Base>
   13534:	mov	r3, #0
   13538:	str	r3, [fp, #-20]	; 0xffffffec
   1353c:	b	136c0 <_start@@Base+0x1048>
   13540:	ldr	r3, [fp, #-84]	; 0xffffffac
   13544:	add	r1, r3, #1
   13548:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1354c:	add	r2, r3, #1
   13550:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13554:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13558:	bl	132a8 <_start@@Base+0xc30>
   1355c:	ldr	r3, [fp, #-16]
   13560:	sub	r2, r3, #1
   13564:	ldr	r3, [fp, #-20]	; 0xffffffec
   13568:	cmp	r2, r3
   1356c:	ble	136b4 <_start@@Base+0x103c>
   13570:	ldr	r3, [pc, #592]	; 137c8 <_start@@Base+0x1150>
   13574:	ldr	r3, [r4, r3]
   13578:	add	r0, r3, #144	; 0x90
   1357c:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   13580:	mov	r3, r0
   13584:	cmp	r3, #0
   13588:	beq	13590 <_start@@Base+0xf18>
   1358c:	bl	1bab8 <handle_coda_error@@Base>
   13590:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13594:	cmp	r3, #0
   13598:	beq	1360c <_start@@Base+0xf94>
   1359c:	ldr	r3, [pc, #548]	; 137c8 <_start@@Base+0x1150>
   135a0:	ldr	r3, [r4, r3]
   135a4:	ldr	r3, [r3, #3360]	; 0xd20
   135a8:	sub	r2, r3, #1
   135ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   135b0:	cmp	r2, r3
   135b4:	ble	1360c <_start@@Base+0xf94>
   135b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   135bc:	add	r2, r3, #1
   135c0:	ldr	r3, [pc, #512]	; 137c8 <_start@@Base+0x1150>
   135c4:	ldr	r1, [r4, r3]
   135c8:	mov	r3, r2
   135cc:	lsl	r3, r3, #2
   135d0:	add	r3, r3, r2
   135d4:	lsl	r3, r3, #4
   135d8:	add	r3, r1, r3
   135dc:	add	r3, r3, #844	; 0x34c
   135e0:	ldr	r3, [r3]
   135e4:	add	r1, r3, #1
   135e8:	ldr	r3, [pc, #472]	; 137c8 <_start@@Base+0x1150>
   135ec:	ldr	r0, [r4, r3]
   135f0:	mov	r3, r2
   135f4:	lsl	r3, r3, #2
   135f8:	add	r3, r3, r2
   135fc:	lsl	r3, r3, #4
   13600:	add	r3, r0, r3
   13604:	add	r3, r3, #844	; 0x34c
   13608:	str	r1, [r3]
   1360c:	ldr	r3, [pc, #444]	; 137d0 <_start@@Base+0x1158>
   13610:	ldr	r3, [r4, r3]
   13614:	ldr	r3, [r3]
   13618:	cmp	r3, #0
   1361c:	beq	136b4 <_start@@Base+0x103c>
   13620:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13624:	ldr	r3, [r3, #4]
   13628:	sub	r3, r3, #1
   1362c:	str	r3, [fp, #-24]	; 0xffffffe8
   13630:	b	136a0 <_start@@Base+0x1028>
   13634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13638:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1363c:	add	r2, r2, #12
   13640:	ldr	r3, [r3, r2, lsl #2]
   13644:	add	r1, r3, #1
   13648:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1364c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13650:	add	r2, r2, #12
   13654:	str	r1, [r3, r2, lsl #2]
   13658:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1365c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13660:	add	r2, r2, #12
   13664:	ldr	r2, [r3, r2, lsl #2]
   13668:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1366c:	lsl	r3, r3, #2
   13670:	sub	r1, fp, #12
   13674:	add	r3, r1, r3
   13678:	ldr	r3, [r3, #-64]	; 0xffffffc0
   1367c:	cmp	r2, r3
   13680:	bne	136b0 <_start@@Base+0x1038>
   13684:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13688:	sub	r2, r3, #1
   1368c:	str	r2, [fp, #-24]	; 0xffffffe8
   13690:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13694:	add	r3, r3, #12
   13698:	mov	r1, #0
   1369c:	str	r1, [r2, r3, lsl #2]
   136a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   136a4:	cmp	r3, #0
   136a8:	bge	13634 <_start@@Base+0xfbc>
   136ac:	b	136b4 <_start@@Base+0x103c>
   136b0:	nop			; (mov r0, r0)
   136b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   136b8:	add	r3, r3, #1
   136bc:	str	r3, [fp, #-20]	; 0xffffffec
   136c0:	ldr	r2, [fp, #-20]	; 0xffffffec
   136c4:	ldr	r3, [fp, #-16]
   136c8:	cmp	r2, r3
   136cc:	blt	13540 <_start@@Base+0xec8>
   136d0:	ldr	r3, [pc, #240]	; 137c8 <_start@@Base+0x1150>
   136d4:	ldr	r3, [r4, r3]
   136d8:	add	r0, r3, #144	; 0x90
   136dc:	bl	123fc <coda_cursor_goto_parent@plt>
   136e0:	b	137bc <_start@@Base+0x1144>
   136e4:	ldr	r3, [pc, #220]	; 137c8 <_start@@Base+0x1150>
   136e8:	ldr	r2, [r4, r3]
   136ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   136f0:	add	r3, r3, #872	; 0x368
   136f4:	lsl	r3, r3, #2
   136f8:	add	r3, r2, r3
   136fc:	ldr	r3, [r3, #4]
   13700:	sub	r2, fp, #44	; 0x2c
   13704:	mov	r1, r3
   13708:	ldr	r3, [pc, #184]	; 137c8 <_start@@Base+0x1150>
   1370c:	ldr	r3, [r4, r3]
   13710:	add	r0, r3, #144	; 0x90
   13714:	bl	12234 <coda_cursor_get_record_field_available_status@plt>
   13718:	mov	r3, r0
   1371c:	cmp	r3, #0
   13720:	beq	13728 <_start@@Base+0x10b0>
   13724:	bl	1bab8 <handle_coda_error@@Base>
   13728:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1372c:	cmp	r3, #0
   13730:	beq	137b8 <_start@@Base+0x1140>
   13734:	ldr	r3, [pc, #140]	; 137c8 <_start@@Base+0x1150>
   13738:	ldr	r2, [r4, r3]
   1373c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13740:	add	r3, r3, #872	; 0x368
   13744:	lsl	r3, r3, #2
   13748:	add	r3, r2, r3
   1374c:	ldr	r3, [r3, #4]
   13750:	mov	r1, r3
   13754:	ldr	r3, [pc, #108]	; 137c8 <_start@@Base+0x1150>
   13758:	ldr	r3, [r4, r3]
   1375c:	add	r0, r3, #144	; 0x90
   13760:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   13764:	mov	r3, r0
   13768:	cmp	r3, #0
   1376c:	beq	13774 <_start@@Base+0x10fc>
   13770:	bl	1bab8 <handle_coda_error@@Base>
   13774:	ldr	r3, [fp, #-84]	; 0xffffffac
   13778:	add	r1, r3, #1
   1377c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13780:	add	r3, r3, #1
   13784:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13788:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1378c:	bl	132a8 <_start@@Base+0xc30>
   13790:	ldr	r3, [pc, #48]	; 137c8 <_start@@Base+0x1150>
   13794:	ldr	r3, [r4, r3]
   13798:	add	r0, r3, #144	; 0x90
   1379c:	bl	123fc <coda_cursor_goto_parent@plt>
   137a0:	b	137b8 <_start@@Base+0x1140>
   137a4:	ldr	r1, [fp, #-84]	; 0xffffffac
   137a8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   137ac:	bl	128ec <_start@@Base+0x274>
   137b0:	nop			; (mov r0, r0)
   137b4:	b	137bc <_start@@Base+0x1144>
   137b8:	nop			; (mov r0, r0)
   137bc:	sub	sp, fp, #8
   137c0:	pop	{r4, fp, pc}
   137c4:	andeq	sp, r1, r0, lsr sp
   137c8:			; <UNDEFINED> instruction: 0x000001b4
   137cc:	andeq	r0, r0, r4, ror #3
   137d0:	andeq	r0, r0, ip, asr #3

000137d4 <export_data_element_to_ascii@@Base>:
   137d4:	push	{r4, r5, fp, lr}
   137d8:	add	fp, sp, #12
   137dc:	ldr	r4, [pc, #244]	; 138d8 <export_data_element_to_ascii@@Base+0x104>
   137e0:	add	r4, pc, r4
   137e4:	ldr	r3, [pc, #240]	; 138dc <export_data_element_to_ascii@@Base+0x108>
   137e8:	add	r3, pc, r3
   137ec:	ldr	r3, [r3]
   137f0:	cmp	r3, #0
   137f4:	beq	1380c <export_data_element_to_ascii@@Base+0x38>
   137f8:	ldr	r3, [pc, #224]	; 138e0 <export_data_element_to_ascii@@Base+0x10c>
   137fc:	add	r3, pc, r3
   13800:	mov	r2, #0
   13804:	str	r2, [r3]
   13808:	b	13824 <export_data_element_to_ascii@@Base+0x50>
   1380c:	ldr	r3, [pc, #208]	; 138e4 <export_data_element_to_ascii@@Base+0x110>
   13810:	ldr	r3, [r4, r3]
   13814:	ldr	r3, [r3]
   13818:	mov	r1, r3
   1381c:	mov	r0, #10
   13820:	bl	12594 <fputc@plt>
   13824:	ldr	r3, [pc, #188]	; 138e8 <export_data_element_to_ascii@@Base+0x114>
   13828:	ldr	r3, [r4, r3]
   1382c:	ldr	r3, [r3]
   13830:	cmp	r3, #0
   13834:	beq	1386c <export_data_element_to_ascii@@Base+0x98>
   13838:	ldr	r3, [pc, #164]	; 138e4 <export_data_element_to_ascii@@Base+0x110>
   1383c:	ldr	r3, [r4, r3]
   13840:	ldr	r3, [r3]
   13844:	mov	r2, #0
   13848:	mov	r1, #2
   1384c:	mov	r0, r3
   13850:	bl	18d88 <print_full_field_name@@Base>
   13854:	ldr	r3, [pc, #136]	; 138e4 <export_data_element_to_ascii@@Base+0x110>
   13858:	ldr	r3, [r4, r3]
   1385c:	ldr	r3, [r3]
   13860:	mov	r1, r3
   13864:	mov	r0, #10
   13868:	bl	12594 <fputc@plt>
   1386c:	ldr	r3, [pc, #120]	; 138ec <export_data_element_to_ascii@@Base+0x118>
   13870:	ldr	r3, [r4, r3]
   13874:	ldr	r3, [r3]
   13878:	cmp	r3, #0
   1387c:	ble	138b0 <export_data_element_to_ascii@@Base+0xdc>
   13880:	ldr	r3, [pc, #100]	; 138ec <export_data_element_to_ascii@@Base+0x118>
   13884:	ldr	r3, [r4, r3]
   13888:	ldr	r3, [r3]
   1388c:	sub	r3, r3, #1
   13890:	ldr	r2, [pc, #84]	; 138ec <export_data_element_to_ascii@@Base+0x118>
   13894:	ldr	r2, [r4, r2]
   13898:	add	r3, r3, #38	; 0x26
   1389c:	lsl	r3, r3, #3
   138a0:	add	r3, r2, r3
   138a4:	ldrd	r2, [r3]
   138a8:	orrs	r3, r2, r3
   138ac:	beq	138d0 <export_data_element_to_ascii@@Base+0xfc>
   138b0:	ldr	r3, [pc, #44]	; 138e4 <export_data_element_to_ascii@@Base+0x110>
   138b4:	ldr	r3, [r4, r3]
   138b8:	ldr	r0, [r3]
   138bc:	mov	r3, #0
   138c0:	mov	r2, #0
   138c4:	mov	r1, #0
   138c8:	bl	132a8 <_start@@Base+0xc30>
   138cc:	b	138d4 <export_data_element_to_ascii@@Base+0x100>
   138d0:	nop			; (mov r0, r0)
   138d4:	pop	{r4, r5, fp, pc}
   138d8:	andeq	sp, r1, r8, lsl r8
   138dc:	andeq	sp, r1, r8, lsl #20
   138e0:	strdeq	sp, [r1], -r4
   138e4:			; <UNDEFINED> instruction: 0x000001bc
   138e8:	andeq	r0, r0, r8, ror #3
   138ec:	andeq	r0, r0, r4, ror #3
   138f0:	push	{r4, fp, lr}
   138f4:	add	fp, sp, #8
   138f8:	sub	sp, sp, #12
   138fc:	ldr	r4, [pc, #140]	; 13990 <export_data_element_to_ascii@@Base+0x1bc>
   13900:	add	r4, pc, r4
   13904:	ldr	r3, [pc, #136]	; 13994 <export_data_element_to_ascii@@Base+0x1c0>
   13908:	add	r3, pc, r3
   1390c:	ldr	r3, [r3]
   13910:	cmp	r3, #0
   13914:	bge	13938 <export_data_element_to_ascii@@Base+0x164>
   13918:	ldr	r3, [pc, #120]	; 13998 <export_data_element_to_ascii@@Base+0x1c4>
   1391c:	add	r3, pc, r3
   13920:	mov	r2, #44	; 0x2c
   13924:	ldr	r1, [pc, #112]	; 1399c <export_data_element_to_ascii@@Base+0x1c8>
   13928:	add	r1, pc, r1
   1392c:	ldr	r0, [pc, #108]	; 139a0 <export_data_element_to_ascii@@Base+0x1cc>
   13930:	add	r0, pc, r0
   13934:	bl	12660 <__assert_fail@plt>
   13938:	ldr	r3, [pc, #100]	; 139a4 <export_data_element_to_ascii@@Base+0x1d0>
   1393c:	add	r3, pc, r3
   13940:	ldr	r3, [r3]
   13944:	str	r3, [fp, #-16]
   13948:	b	13978 <export_data_element_to_ascii@@Base+0x1a4>
   1394c:	ldr	r3, [pc, #84]	; 139a8 <export_data_element_to_ascii@@Base+0x1d4>
   13950:	ldr	r3, [r4, r3]
   13954:	ldr	r3, [r3]
   13958:	mov	r2, #2
   1395c:	mov	r1, #1
   13960:	ldr	r0, [pc, #68]	; 139ac <export_data_element_to_ascii@@Base+0x1d8>
   13964:	add	r0, pc, r0
   13968:	bl	12378 <fwrite@plt>
   1396c:	ldr	r3, [fp, #-16]
   13970:	sub	r3, r3, #1
   13974:	str	r3, [fp, #-16]
   13978:	ldr	r3, [fp, #-16]
   1397c:	cmp	r3, #0
   13980:	bgt	1394c <export_data_element_to_ascii@@Base+0x178>
   13984:	nop			; (mov r0, r0)
   13988:	sub	sp, fp, #8
   1398c:	pop	{r4, fp, pc}
   13990:	strdeq	sp, [r1], -r8
   13994:	strdeq	sp, [r1], -ip
   13998:	andeq	sl, r0, ip, lsl #30
   1399c:	andeq	sl, r0, r0, lsr sp
   139a0:	andeq	sl, r0, ip, lsl #27
   139a4:	andeq	sp, r1, r8, asr #17
   139a8:			; <UNDEFINED> instruction: 0x000001bc
   139ac:	andeq	sl, r0, r4, ror #26
   139b0:	push	{r0, r1, r2, r3}
   139b4:	push	{fp, lr}
   139b8:	add	fp, sp, #4
   139bc:	sub	sp, sp, #8
   139c0:	ldr	r2, [pc, #64]	; 13a08 <export_data_element_to_ascii@@Base+0x234>
   139c4:	add	r2, pc, r2
   139c8:	add	r3, fp, #8
   139cc:	str	r3, [fp, #-12]
   139d0:	ldr	r3, [pc, #52]	; 13a0c <export_data_element_to_ascii@@Base+0x238>
   139d4:	ldr	r3, [r2, r3]
   139d8:	ldr	r3, [r3]
   139dc:	ldr	r2, [fp, #-12]
   139e0:	ldr	r1, [fp, #4]
   139e4:	mov	r0, r3
   139e8:	bl	12558 <vfprintf@plt>
   139ec:	str	r0, [fp, #-8]
   139f0:	ldr	r3, [fp, #-8]
   139f4:	mov	r0, r3
   139f8:	sub	sp, fp, #4
   139fc:	pop	{fp, lr}
   13a00:	add	sp, sp, #16
   13a04:	bx	lr
   13a08:	andeq	sp, r1, r4, lsr r6
   13a0c:			; <UNDEFINED> instruction: 0x000001bc
   13a10:	push	{r0, r1, r2, r3}
   13a14:	push	{r4, fp, lr}
   13a18:	add	fp, sp, #8
   13a1c:	sub	sp, sp, #12
   13a20:	ldr	r4, [pc, #68]	; 13a6c <export_data_element_to_ascii@@Base+0x298>
   13a24:	add	r4, pc, r4
   13a28:	bl	138f0 <export_data_element_to_ascii@@Base+0x11c>
   13a2c:	add	r3, fp, #8
   13a30:	str	r3, [fp, #-20]	; 0xffffffec
   13a34:	ldr	r3, [pc, #52]	; 13a70 <export_data_element_to_ascii@@Base+0x29c>
   13a38:	ldr	r3, [r4, r3]
   13a3c:	ldr	r3, [r3]
   13a40:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a44:	ldr	r1, [fp, #4]
   13a48:	mov	r0, r3
   13a4c:	bl	12558 <vfprintf@plt>
   13a50:	str	r0, [fp, #-16]
   13a54:	ldr	r3, [fp, #-16]
   13a58:	mov	r0, r3
   13a5c:	sub	sp, fp, #8
   13a60:	pop	{r4, fp, lr}
   13a64:	add	sp, sp, #16
   13a68:	bx	lr
   13a6c:	ldrdeq	sp, [r1], -r4
   13a70:			; <UNDEFINED> instruction: 0x000001bc
   13a74:	push	{fp, lr}
   13a78:	add	fp, sp, #4
   13a7c:	sub	sp, sp, #16
   13a80:	str	r0, [fp, #-16]
   13a84:	str	r1, [fp, #-20]	; 0xffffffec
   13a88:	mov	r3, #0
   13a8c:	str	r3, [fp, #-8]
   13a90:	b	13bf4 <export_data_element_to_ascii@@Base+0x420>
   13a94:	ldr	r3, [fp, #-8]
   13a98:	ldr	r2, [fp, #-16]
   13a9c:	add	r3, r2, r3
   13aa0:	ldrb	r3, [r3]
   13aa4:	strb	r3, [fp, #-9]
   13aa8:	ldrb	r3, [fp, #-9]
   13aac:	cmp	r3, #10
   13ab0:	beq	13b38 <export_data_element_to_ascii@@Base+0x364>
   13ab4:	cmp	r3, #10
   13ab8:	bgt	13ad8 <export_data_element_to_ascii@@Base+0x304>
   13abc:	cmp	r3, #8
   13ac0:	beq	13b10 <export_data_element_to_ascii@@Base+0x33c>
   13ac4:	cmp	r3, #8
   13ac8:	bgt	13b24 <export_data_element_to_ascii@@Base+0x350>
   13acc:	cmp	r3, #7
   13ad0:	beq	13afc <export_data_element_to_ascii@@Base+0x328>
   13ad4:	b	13b9c <export_data_element_to_ascii@@Base+0x3c8>
   13ad8:	cmp	r3, #12
   13adc:	beq	13b60 <export_data_element_to_ascii@@Base+0x38c>
   13ae0:	cmp	r3, #12
   13ae4:	blt	13b4c <export_data_element_to_ascii@@Base+0x378>
   13ae8:	cmp	r3, #13
   13aec:	beq	13b74 <export_data_element_to_ascii@@Base+0x3a0>
   13af0:	cmp	r3, #92	; 0x5c
   13af4:	beq	13b88 <export_data_element_to_ascii@@Base+0x3b4>
   13af8:	b	13b9c <export_data_element_to_ascii@@Base+0x3c8>
   13afc:	ldr	r3, [pc, #268]	; 13c10 <export_data_element_to_ascii@@Base+0x43c>
   13b00:	add	r3, pc, r3
   13b04:	mov	r0, r3
   13b08:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b0c:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b10:	ldr	r3, [pc, #252]	; 13c14 <export_data_element_to_ascii@@Base+0x440>
   13b14:	add	r3, pc, r3
   13b18:	mov	r0, r3
   13b1c:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b20:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b24:	ldr	r3, [pc, #236]	; 13c18 <export_data_element_to_ascii@@Base+0x444>
   13b28:	add	r3, pc, r3
   13b2c:	mov	r0, r3
   13b30:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b34:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b38:	ldr	r3, [pc, #220]	; 13c1c <export_data_element_to_ascii@@Base+0x448>
   13b3c:	add	r3, pc, r3
   13b40:	mov	r0, r3
   13b44:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b48:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b4c:	ldr	r3, [pc, #204]	; 13c20 <export_data_element_to_ascii@@Base+0x44c>
   13b50:	add	r3, pc, r3
   13b54:	mov	r0, r3
   13b58:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b5c:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b60:	ldr	r3, [pc, #188]	; 13c24 <export_data_element_to_ascii@@Base+0x450>
   13b64:	add	r3, pc, r3
   13b68:	mov	r0, r3
   13b6c:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b70:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b74:	ldr	r3, [pc, #172]	; 13c28 <export_data_element_to_ascii@@Base+0x454>
   13b78:	add	r3, pc, r3
   13b7c:	mov	r0, r3
   13b80:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b84:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b88:	ldr	r3, [pc, #156]	; 13c2c <export_data_element_to_ascii@@Base+0x458>
   13b8c:	add	r3, pc, r3
   13b90:	mov	r0, r3
   13b94:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13b98:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13b9c:	ldrb	r3, [fp, #-9]
   13ba0:	cmp	r3, #31
   13ba4:	bls	13bd0 <export_data_element_to_ascii@@Base+0x3fc>
   13ba8:	ldrb	r3, [fp, #-9]
   13bac:	cmp	r3, #126	; 0x7e
   13bb0:	bhi	13bd0 <export_data_element_to_ascii@@Base+0x3fc>
   13bb4:	ldrb	r3, [fp, #-9]
   13bb8:	mov	r1, r3
   13bbc:	ldr	r3, [pc, #108]	; 13c30 <export_data_element_to_ascii@@Base+0x45c>
   13bc0:	add	r3, pc, r3
   13bc4:	mov	r0, r3
   13bc8:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13bcc:	b	13be8 <export_data_element_to_ascii@@Base+0x414>
   13bd0:	ldrb	r3, [fp, #-9]
   13bd4:	mov	r1, r3
   13bd8:	ldr	r3, [pc, #84]	; 13c34 <export_data_element_to_ascii@@Base+0x460>
   13bdc:	add	r3, pc, r3
   13be0:	mov	r0, r3
   13be4:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13be8:	ldr	r3, [fp, #-8]
   13bec:	add	r3, r3, #1
   13bf0:	str	r3, [fp, #-8]
   13bf4:	ldr	r2, [fp, #-8]
   13bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bfc:	cmp	r2, r3
   13c00:	blt	13a94 <export_data_element_to_ascii@@Base+0x2c0>
   13c04:	nop			; (mov r0, r0)
   13c08:	sub	sp, fp, #4
   13c0c:	pop	{fp, pc}
   13c10:	andeq	sl, r0, ip, asr #23
   13c14:			; <UNDEFINED> instruction: 0x0000abbc
   13c18:	andeq	sl, r0, ip, lsr #23
   13c1c:	muleq	r0, ip, fp
   13c20:	andeq	sl, r0, ip, lsl #23
   13c24:	andeq	sl, r0, ip, ror fp
   13c28:	andeq	sl, r0, ip, ror #22
   13c2c:	andeq	sl, r0, ip, asr fp
   13c30:	andeq	sl, r0, ip, lsr #22
   13c34:	andeq	sl, r0, r4, lsl fp
   13c38:	push	{r4, r5, r6, r8, r9, fp, lr}
   13c3c:	add	fp, sp, #24
   13c40:	sub	sp, sp, #964	; 0x3c4
   13c44:	str	r0, [fp, #-952]	; 0xfffffc48
   13c48:	str	r1, [fp, #-956]	; 0xfffffc44
   13c4c:	ldr	r6, [pc, #3936]	; 14bb4 <export_data_element_to_ascii@@Base+0x13e0>
   13c50:	add	r6, pc, r6
   13c54:	sub	r3, fp, #64	; 0x40
   13c58:	mov	r1, r3
   13c5c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13c60:	bl	12318 <coda_cursor_has_attributes@plt>
   13c64:	mov	r3, r0
   13c68:	cmp	r3, #0
   13c6c:	beq	13c74 <export_data_element_to_ascii@@Base+0x4a0>
   13c70:	bl	1bab8 <handle_coda_error@@Base>
   13c74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   13c78:	cmp	r3, #0
   13c7c:	beq	13cf4 <export_data_element_to_ascii@@Base+0x520>
   13c80:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13c84:	bl	12498 <coda_cursor_goto_attributes@plt>
   13c88:	mov	r3, r0
   13c8c:	cmp	r3, #0
   13c90:	beq	13c98 <export_data_element_to_ascii@@Base+0x4c4>
   13c94:	bl	1bab8 <handle_coda_error@@Base>
   13c98:	ldr	r3, [pc, #3864]	; 14bb8 <export_data_element_to_ascii@@Base+0x13e4>
   13c9c:	add	r3, pc, r3
   13ca0:	mov	r0, r3
   13ca4:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   13ca8:	ldr	r3, [pc, #3852]	; 14bbc <export_data_element_to_ascii@@Base+0x13e8>
   13cac:	add	r3, pc, r3
   13cb0:	ldr	r3, [r3]
   13cb4:	add	r2, r3, #1
   13cb8:	ldr	r3, [pc, #3840]	; 14bc0 <export_data_element_to_ascii@@Base+0x13ec>
   13cbc:	add	r3, pc, r3
   13cc0:	str	r2, [r3]
   13cc4:	ldr	r1, [fp, #-956]	; 0xfffffc44
   13cc8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13ccc:	bl	13c38 <export_data_element_to_ascii@@Base+0x464>
   13cd0:	ldr	r3, [pc, #3820]	; 14bc4 <export_data_element_to_ascii@@Base+0x13f0>
   13cd4:	add	r3, pc, r3
   13cd8:	ldr	r3, [r3]
   13cdc:	sub	r2, r3, #1
   13ce0:	ldr	r3, [pc, #3808]	; 14bc8 <export_data_element_to_ascii@@Base+0x13f4>
   13ce4:	add	r3, pc, r3
   13ce8:	str	r2, [r3]
   13cec:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13cf0:	bl	123fc <coda_cursor_goto_parent@plt>
   13cf4:	sub	r3, fp, #60	; 0x3c
   13cf8:	mov	r1, r3
   13cfc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d00:	bl	12324 <coda_cursor_get_type_class@plt>
   13d04:	mov	r3, r0
   13d08:	cmp	r3, #0
   13d0c:	beq	13d14 <export_data_element_to_ascii@@Base+0x540>
   13d10:	bl	1bab8 <handle_coda_error@@Base>
   13d14:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13d18:	cmp	r3, #6
   13d1c:	addls	pc, pc, r3, lsl #2
   13d20:	b	14d9c <export_data_element_to_ascii@@Base+0x15c8>
   13d24:	b	13d40 <export_data_element_to_ascii@@Base+0x56c>
   13d28:	b	141c8 <export_data_element_to_ascii@@Base+0x9f4>
   13d2c:	b	14580 <export_data_element_to_ascii@@Base+0xdac>
   13d30:	b	14580 <export_data_element_to_ascii@@Base+0xdac>
   13d34:	b	14580 <export_data_element_to_ascii@@Base+0xdac>
   13d38:	b	14580 <export_data_element_to_ascii@@Base+0xdac>
   13d3c:	b	14a44 <export_data_element_to_ascii@@Base+0x1270>
   13d40:	sub	r3, fp, #68	; 0x44
   13d44:	mov	r1, r3
   13d48:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d4c:	bl	1227c <coda_cursor_get_num_elements@plt>
   13d50:	mov	r3, r0
   13d54:	cmp	r3, #0
   13d58:	beq	13d60 <export_data_element_to_ascii@@Base+0x58c>
   13d5c:	bl	1bab8 <handle_coda_error@@Base>
   13d60:	ldr	r3, [fp, #-68]	; 0xffffffbc
   13d64:	cmp	r3, #0
   13d68:	ble	14d80 <export_data_element_to_ascii@@Base+0x15ac>
   13d6c:	sub	r3, fp, #72	; 0x48
   13d70:	mov	r1, r3
   13d74:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13d78:	bl	122dc <coda_cursor_get_type@plt>
   13d7c:	mov	r3, r0
   13d80:	cmp	r3, #0
   13d84:	beq	13d8c <export_data_element_to_ascii@@Base+0x5b8>
   13d88:	bl	1bab8 <handle_coda_error@@Base>
   13d8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13d90:	sub	r2, fp, #76	; 0x4c
   13d94:	mov	r1, r2
   13d98:	mov	r0, r3
   13d9c:	bl	124e0 <coda_type_get_record_union_status@plt>
   13da0:	mov	r3, r0
   13da4:	cmp	r3, #0
   13da8:	beq	13db0 <export_data_element_to_ascii@@Base+0x5dc>
   13dac:	bl	1bab8 <handle_coda_error@@Base>
   13db0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   13db4:	cmp	r3, #0
   13db8:	beq	13fac <export_data_element_to_ascii@@Base+0x7d8>
   13dbc:	sub	r3, fp, #80	; 0x50
   13dc0:	mov	r1, r3
   13dc4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13dc8:	bl	125dc <coda_cursor_get_available_union_field_index@plt>
   13dcc:	mov	r3, r0
   13dd0:	cmp	r3, #0
   13dd4:	beq	13ddc <export_data_element_to_ascii@@Base+0x608>
   13dd8:	bl	1bab8 <handle_coda_error@@Base>
   13ddc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13de0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13de4:	sub	r2, fp, #84	; 0x54
   13de8:	mov	r0, r3
   13dec:	bl	12624 <coda_type_get_record_field_name@plt>
   13df0:	mov	r3, r0
   13df4:	cmp	r3, #0
   13df8:	beq	13e00 <export_data_element_to_ascii@@Base+0x62c>
   13dfc:	bl	1bab8 <handle_coda_error@@Base>
   13e00:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13e04:	mov	r1, r3
   13e08:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e0c:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   13e10:	mov	r3, r0
   13e14:	cmp	r3, #0
   13e18:	beq	13e20 <export_data_element_to_ascii@@Base+0x64c>
   13e1c:	bl	1bab8 <handle_coda_error@@Base>
   13e20:	ldr	r3, [fp, #-84]	; 0xffffffac
   13e24:	mov	r1, r3
   13e28:	ldr	r3, [pc, #3484]	; 14bcc <export_data_element_to_ascii@@Base+0x13f8>
   13e2c:	add	r3, pc, r3
   13e30:	mov	r0, r3
   13e34:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   13e38:	ldr	r3, [pc, #3472]	; 14bd0 <export_data_element_to_ascii@@Base+0x13fc>
   13e3c:	add	r3, pc, r3
   13e40:	ldr	r3, [r3]
   13e44:	cmp	r3, #0
   13e48:	beq	13f04 <export_data_element_to_ascii@@Base+0x730>
   13e4c:	sub	r3, fp, #92	; 0x5c
   13e50:	mov	r1, r3
   13e54:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13e58:	bl	125f4 <coda_cursor_get_file_bit_offset@plt>
   13e5c:	mov	r3, r0
   13e60:	cmp	r3, #0
   13e64:	beq	13e6c <export_data_element_to_ascii@@Base+0x698>
   13e68:	bl	1bab8 <handle_coda_error@@Base>
   13e6c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13e70:	cmp	r2, #0
   13e74:	sbcs	r3, r3, #0
   13e78:	blt	13f04 <export_data_element_to_ascii@@Base+0x730>
   13e7c:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13e80:	lsr	r1, r2, #3
   13e84:	str	r1, [fp, #-964]	; 0xfffffc3c
   13e88:	ldr	r1, [fp, #-964]	; 0xfffffc3c
   13e8c:	orr	r1, r1, r3, lsl #29
   13e90:	str	r1, [fp, #-964]	; 0xfffffc3c
   13e94:	asr	r3, r3, #3
   13e98:	str	r3, [fp, #-960]	; 0xfffffc40
   13e9c:	sub	r3, fp, #116	; 0x74
   13ea0:	mov	r2, r3
   13ea4:	sub	r3, fp, #964	; 0x3c4
   13ea8:	ldrd	r0, [r3]
   13eac:	bl	12654 <coda_str64@plt>
   13eb0:	sub	r3, fp, #116	; 0x74
   13eb4:	mov	r1, r3
   13eb8:	ldr	r3, [pc, #3348]	; 14bd4 <export_data_element_to_ascii@@Base+0x1400>
   13ebc:	add	r3, pc, r3
   13ec0:	mov	r0, r3
   13ec4:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13ec8:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13ecc:	mov	r0, #7
   13ed0:	mov	r1, #0
   13ed4:	and	r2, r2, r0
   13ed8:	and	r3, r3, r1
   13edc:	orrs	r3, r2, r3
   13ee0:	beq	13f04 <export_data_element_to_ascii@@Base+0x730>
   13ee4:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   13ee8:	mov	r3, r2
   13eec:	and	r3, r3, #7
   13ef0:	mov	r1, r3
   13ef4:	ldr	r3, [pc, #3292]	; 14bd8 <export_data_element_to_ascii@@Base+0x1404>
   13ef8:	add	r3, pc, r3
   13efc:	mov	r0, r3
   13f00:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13f04:	ldr	r3, [pc, #3280]	; 14bdc <export_data_element_to_ascii@@Base+0x1408>
   13f08:	add	r3, pc, r3
   13f0c:	mov	r0, r3
   13f10:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   13f14:	ldr	r3, [pc, #3268]	; 14be0 <export_data_element_to_ascii@@Base+0x140c>
   13f18:	add	r3, pc, r3
   13f1c:	ldr	r3, [r3]
   13f20:	add	r2, r3, #1
   13f24:	ldr	r3, [pc, #3256]	; 14be4 <export_data_element_to_ascii@@Base+0x1410>
   13f28:	add	r3, pc, r3
   13f2c:	str	r2, [r3]
   13f30:	ldr	r3, [pc, #3248]	; 14be8 <export_data_element_to_ascii@@Base+0x1414>
   13f34:	ldr	r3, [r6, r3]
   13f38:	ldr	r3, [r3]
   13f3c:	cmp	r3, #0
   13f40:	blt	13f5c <export_data_element_to_ascii@@Base+0x788>
   13f44:	ldr	r3, [pc, #3228]	; 14be8 <export_data_element_to_ascii@@Base+0x1414>
   13f48:	ldr	r3, [r6, r3]
   13f4c:	ldr	r3, [r3]
   13f50:	ldr	r2, [fp, #-956]	; 0xfffffc44
   13f54:	cmp	r2, r3
   13f58:	bge	13f74 <export_data_element_to_ascii@@Base+0x7a0>
   13f5c:	ldr	r3, [fp, #-956]	; 0xfffffc44
   13f60:	add	r3, r3, #1
   13f64:	mov	r1, r3
   13f68:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13f6c:	bl	13c38 <export_data_element_to_ascii@@Base+0x464>
   13f70:	b	13f84 <export_data_element_to_ascii@@Base+0x7b0>
   13f74:	ldr	r3, [pc, #3184]	; 14bec <export_data_element_to_ascii@@Base+0x1418>
   13f78:	add	r3, pc, r3
   13f7c:	mov	r0, r3
   13f80:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   13f84:	ldr	r3, [pc, #3172]	; 14bf0 <export_data_element_to_ascii@@Base+0x141c>
   13f88:	add	r3, pc, r3
   13f8c:	ldr	r3, [r3]
   13f90:	sub	r2, r3, #1
   13f94:	ldr	r3, [pc, #3160]	; 14bf4 <export_data_element_to_ascii@@Base+0x1420>
   13f98:	add	r3, pc, r3
   13f9c:	str	r2, [r3]
   13fa0:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13fa4:	bl	123fc <coda_cursor_goto_parent@plt>
   13fa8:	b	14d80 <export_data_element_to_ascii@@Base+0x15ac>
   13fac:	ldr	r0, [fp, #-952]	; 0xfffffc48
   13fb0:	bl	12390 <coda_cursor_goto_first_record_field@plt>
   13fb4:	mov	r3, r0
   13fb8:	cmp	r3, #0
   13fbc:	beq	13fc4 <export_data_element_to_ascii@@Base+0x7f0>
   13fc0:	bl	1bab8 <handle_coda_error@@Base>
   13fc4:	mov	r3, #0
   13fc8:	str	r3, [fp, #-80]	; 0xffffffb0
   13fcc:	b	141ac <export_data_element_to_ascii@@Base+0x9d8>
   13fd0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   13fd4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13fd8:	sub	r2, fp, #120	; 0x78
   13fdc:	mov	r0, r3
   13fe0:	bl	12624 <coda_type_get_record_field_name@plt>
   13fe4:	mov	r3, r0
   13fe8:	cmp	r3, #0
   13fec:	beq	13ff4 <export_data_element_to_ascii@@Base+0x820>
   13ff0:	bl	1bab8 <handle_coda_error@@Base>
   13ff4:	ldr	r3, [fp, #-120]	; 0xffffff88
   13ff8:	mov	r1, r3
   13ffc:	ldr	r3, [pc, #3060]	; 14bf8 <export_data_element_to_ascii@@Base+0x1424>
   14000:	add	r3, pc, r3
   14004:	mov	r0, r3
   14008:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   1400c:	ldr	r3, [pc, #3048]	; 14bfc <export_data_element_to_ascii@@Base+0x1428>
   14010:	add	r3, pc, r3
   14014:	ldr	r3, [r3]
   14018:	cmp	r3, #0
   1401c:	beq	140d8 <export_data_element_to_ascii@@Base+0x904>
   14020:	sub	r3, fp, #132	; 0x84
   14024:	mov	r1, r3
   14028:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1402c:	bl	125f4 <coda_cursor_get_file_bit_offset@plt>
   14030:	mov	r3, r0
   14034:	cmp	r3, #0
   14038:	beq	14040 <export_data_element_to_ascii@@Base+0x86c>
   1403c:	bl	1bab8 <handle_coda_error@@Base>
   14040:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   14044:	cmp	r2, #0
   14048:	sbcs	r3, r3, #0
   1404c:	blt	140d8 <export_data_element_to_ascii@@Base+0x904>
   14050:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   14054:	lsr	r1, r2, #3
   14058:	str	r1, [fp, #-972]	; 0xfffffc34
   1405c:	ldr	r1, [fp, #-972]	; 0xfffffc34
   14060:	orr	r1, r1, r3, lsl #29
   14064:	str	r1, [fp, #-972]	; 0xfffffc34
   14068:	asr	r3, r3, #3
   1406c:	str	r3, [fp, #-968]	; 0xfffffc38
   14070:	sub	r3, fp, #156	; 0x9c
   14074:	mov	r2, r3
   14078:	sub	r3, fp, #972	; 0x3cc
   1407c:	ldrd	r0, [r3]
   14080:	bl	12654 <coda_str64@plt>
   14084:	sub	r3, fp, #156	; 0x9c
   14088:	mov	r1, r3
   1408c:	ldr	r3, [pc, #2924]	; 14c00 <export_data_element_to_ascii@@Base+0x142c>
   14090:	add	r3, pc, r3
   14094:	mov	r0, r3
   14098:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   1409c:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   140a0:	mov	r0, #7
   140a4:	mov	r1, #0
   140a8:	and	r2, r2, r0
   140ac:	and	r3, r3, r1
   140b0:	orrs	r3, r2, r3
   140b4:	beq	140d8 <export_data_element_to_ascii@@Base+0x904>
   140b8:	ldrd	r2, [fp, #-132]	; 0xffffff7c
   140bc:	mov	r3, r2
   140c0:	and	r3, r3, #7
   140c4:	mov	r1, r3
   140c8:	ldr	r3, [pc, #2868]	; 14c04 <export_data_element_to_ascii@@Base+0x1430>
   140cc:	add	r3, pc, r3
   140d0:	mov	r0, r3
   140d4:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   140d8:	ldr	r3, [pc, #2856]	; 14c08 <export_data_element_to_ascii@@Base+0x1434>
   140dc:	add	r3, pc, r3
   140e0:	mov	r0, r3
   140e4:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   140e8:	ldr	r3, [pc, #2844]	; 14c0c <export_data_element_to_ascii@@Base+0x1438>
   140ec:	add	r3, pc, r3
   140f0:	ldr	r3, [r3]
   140f4:	add	r2, r3, #1
   140f8:	ldr	r3, [pc, #2832]	; 14c10 <export_data_element_to_ascii@@Base+0x143c>
   140fc:	add	r3, pc, r3
   14100:	str	r2, [r3]
   14104:	ldr	r3, [pc, #2780]	; 14be8 <export_data_element_to_ascii@@Base+0x1414>
   14108:	ldr	r3, [r6, r3]
   1410c:	ldr	r3, [r3]
   14110:	cmp	r3, #0
   14114:	blt	14130 <export_data_element_to_ascii@@Base+0x95c>
   14118:	ldr	r3, [pc, #2760]	; 14be8 <export_data_element_to_ascii@@Base+0x1414>
   1411c:	ldr	r3, [r6, r3]
   14120:	ldr	r3, [r3]
   14124:	ldr	r2, [fp, #-956]	; 0xfffffc44
   14128:	cmp	r2, r3
   1412c:	bge	14148 <export_data_element_to_ascii@@Base+0x974>
   14130:	ldr	r3, [fp, #-956]	; 0xfffffc44
   14134:	add	r3, r3, #1
   14138:	mov	r1, r3
   1413c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14140:	bl	13c38 <export_data_element_to_ascii@@Base+0x464>
   14144:	b	14158 <export_data_element_to_ascii@@Base+0x984>
   14148:	ldr	r3, [pc, #2756]	; 14c14 <export_data_element_to_ascii@@Base+0x1440>
   1414c:	add	r3, pc, r3
   14150:	mov	r0, r3
   14154:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   14158:	ldr	r3, [pc, #2744]	; 14c18 <export_data_element_to_ascii@@Base+0x1444>
   1415c:	add	r3, pc, r3
   14160:	ldr	r3, [r3]
   14164:	sub	r2, r3, #1
   14168:	ldr	r3, [pc, #2732]	; 14c1c <export_data_element_to_ascii@@Base+0x1448>
   1416c:	add	r3, pc, r3
   14170:	str	r2, [r3]
   14174:	ldr	r3, [fp, #-68]	; 0xffffffbc
   14178:	sub	r2, r3, #1
   1417c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14180:	cmp	r2, r3
   14184:	ble	141a0 <export_data_element_to_ascii@@Base+0x9cc>
   14188:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1418c:	bl	12588 <coda_cursor_goto_next_record_field@plt>
   14190:	mov	r3, r0
   14194:	cmp	r3, #0
   14198:	beq	141a0 <export_data_element_to_ascii@@Base+0x9cc>
   1419c:	bl	1bab8 <handle_coda_error@@Base>
   141a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   141a4:	add	r3, r3, #1
   141a8:	str	r3, [fp, #-80]	; 0xffffffb0
   141ac:	ldr	r2, [fp, #-80]	; 0xffffffb0
   141b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   141b4:	cmp	r2, r3
   141b8:	blt	13fd0 <export_data_element_to_ascii@@Base+0x7fc>
   141bc:	ldr	r0, [fp, #-952]	; 0xfffffc48
   141c0:	bl	123fc <coda_cursor_goto_parent@plt>
   141c4:	b	14d80 <export_data_element_to_ascii@@Base+0x15ac>
   141c8:	sub	r2, fp, #948	; 0x3b4
   141cc:	sub	r3, fp, #160	; 0xa0
   141d0:	mov	r1, r3
   141d4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   141d8:	bl	12528 <coda_cursor_get_array_dim@plt>
   141dc:	mov	r3, r0
   141e0:	cmp	r3, #0
   141e4:	beq	141ec <export_data_element_to_ascii@@Base+0xa18>
   141e8:	bl	1bab8 <handle_coda_error@@Base>
   141ec:	ldr	r3, [fp, #-160]	; 0xffffff60
   141f0:	cmp	r3, #0
   141f4:	blt	14d88 <export_data_element_to_ascii@@Base+0x15b4>
   141f8:	mov	r3, #1
   141fc:	str	r3, [fp, #-32]	; 0xffffffe0
   14200:	mov	r3, #0
   14204:	str	r3, [fp, #-36]	; 0xffffffdc
   14208:	b	14250 <export_data_element_to_ascii@@Base+0xa7c>
   1420c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14210:	lsl	r3, r3, #2
   14214:	sub	r2, fp, #28
   14218:	add	r3, r2, r3
   1421c:	ldr	r2, [r3, #-920]	; 0xfffffc68
   14220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14224:	mul	r3, r2, r3
   14228:	str	r3, [fp, #-32]	; 0xffffffe0
   1422c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14230:	lsl	r3, r3, #2
   14234:	sub	r2, fp, #28
   14238:	add	r3, r2, r3
   1423c:	mov	r2, #0
   14240:	str	r2, [r3, #-888]	; 0xfffffc88
   14244:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14248:	add	r3, r3, #1
   1424c:	str	r3, [fp, #-36]	; 0xffffffdc
   14250:	ldr	r3, [fp, #-160]	; 0xffffff60
   14254:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14258:	cmp	r2, r3
   1425c:	blt	1420c <export_data_element_to_ascii@@Base+0xa38>
   14260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14264:	cmp	r3, #0
   14268:	ble	14d88 <export_data_element_to_ascii@@Base+0x15b4>
   1426c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14270:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   14274:	mov	r3, r0
   14278:	cmp	r3, #0
   1427c:	beq	14284 <export_data_element_to_ascii@@Base+0xab0>
   14280:	bl	1bab8 <handle_coda_error@@Base>
   14284:	mov	r3, #0
   14288:	str	r3, [fp, #-36]	; 0xffffffdc
   1428c:	b	14564 <export_data_element_to_ascii@@Base+0xd90>
   14290:	ldr	r3, [pc, #2440]	; 14c20 <export_data_element_to_ascii@@Base+0x144c>
   14294:	add	r3, pc, r3
   14298:	mov	r0, r3
   1429c:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   142a0:	mov	r3, #0
   142a4:	str	r3, [fp, #-40]	; 0xffffffd8
   142a8:	b	14304 <export_data_element_to_ascii@@Base+0xb30>
   142ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   142b0:	lsl	r3, r3, #2
   142b4:	sub	r2, fp, #28
   142b8:	add	r3, r2, r3
   142bc:	ldr	r3, [r3, #-888]	; 0xfffffc88
   142c0:	mov	r1, r3
   142c4:	ldr	r3, [pc, #2392]	; 14c24 <export_data_element_to_ascii@@Base+0x1450>
   142c8:	add	r3, pc, r3
   142cc:	mov	r0, r3
   142d0:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   142d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   142d8:	sub	r2, r3, #1
   142dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   142e0:	cmp	r2, r3
   142e4:	ble	142f8 <export_data_element_to_ascii@@Base+0xb24>
   142e8:	ldr	r3, [pc, #2360]	; 14c28 <export_data_element_to_ascii@@Base+0x1454>
   142ec:	add	r3, pc, r3
   142f0:	mov	r0, r3
   142f4:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   142f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   142fc:	add	r3, r3, #1
   14300:	str	r3, [fp, #-40]	; 0xffffffd8
   14304:	ldr	r3, [fp, #-160]	; 0xffffff60
   14308:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1430c:	cmp	r2, r3
   14310:	blt	142ac <export_data_element_to_ascii@@Base+0xad8>
   14314:	ldr	r3, [pc, #2320]	; 14c2c <export_data_element_to_ascii@@Base+0x1458>
   14318:	add	r3, pc, r3
   1431c:	mov	r0, r3
   14320:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14324:	ldr	r3, [pc, #2308]	; 14c30 <export_data_element_to_ascii@@Base+0x145c>
   14328:	add	r3, pc, r3
   1432c:	ldr	r3, [r3]
   14330:	cmp	r3, #0
   14334:	beq	143f0 <export_data_element_to_ascii@@Base+0xc1c>
   14338:	sub	r3, fp, #172	; 0xac
   1433c:	mov	r1, r3
   14340:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14344:	bl	125f4 <coda_cursor_get_file_bit_offset@plt>
   14348:	mov	r3, r0
   1434c:	cmp	r3, #0
   14350:	beq	14358 <export_data_element_to_ascii@@Base+0xb84>
   14354:	bl	1bab8 <handle_coda_error@@Base>
   14358:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1435c:	cmp	r2, #0
   14360:	sbcs	r3, r3, #0
   14364:	blt	143f0 <export_data_element_to_ascii@@Base+0xc1c>
   14368:	ldrd	r2, [fp, #-172]	; 0xffffff54
   1436c:	lsr	r1, r2, #3
   14370:	str	r1, [fp, #-980]	; 0xfffffc2c
   14374:	ldr	r1, [fp, #-980]	; 0xfffffc2c
   14378:	orr	r1, r1, r3, lsl #29
   1437c:	str	r1, [fp, #-980]	; 0xfffffc2c
   14380:	asr	r3, r3, #3
   14384:	str	r3, [fp, #-976]	; 0xfffffc30
   14388:	sub	r3, fp, #196	; 0xc4
   1438c:	mov	r2, r3
   14390:	sub	r3, fp, #980	; 0x3d4
   14394:	ldrd	r0, [r3]
   14398:	bl	12654 <coda_str64@plt>
   1439c:	sub	r3, fp, #196	; 0xc4
   143a0:	mov	r1, r3
   143a4:	ldr	r3, [pc, #2184]	; 14c34 <export_data_element_to_ascii@@Base+0x1460>
   143a8:	add	r3, pc, r3
   143ac:	mov	r0, r3
   143b0:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   143b4:	ldrd	r2, [fp, #-172]	; 0xffffff54
   143b8:	mov	r0, #7
   143bc:	mov	r1, #0
   143c0:	and	r2, r2, r0
   143c4:	and	r3, r3, r1
   143c8:	orrs	r3, r2, r3
   143cc:	beq	143f0 <export_data_element_to_ascii@@Base+0xc1c>
   143d0:	ldrd	r2, [fp, #-172]	; 0xffffff54
   143d4:	mov	r3, r2
   143d8:	and	r3, r3, #7
   143dc:	mov	r1, r3
   143e0:	ldr	r3, [pc, #2128]	; 14c38 <export_data_element_to_ascii@@Base+0x1464>
   143e4:	add	r3, pc, r3
   143e8:	mov	r0, r3
   143ec:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   143f0:	ldr	r3, [pc, #2116]	; 14c3c <export_data_element_to_ascii@@Base+0x1468>
   143f4:	add	r3, pc, r3
   143f8:	mov	r0, r3
   143fc:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14400:	ldr	r3, [pc, #2104]	; 14c40 <export_data_element_to_ascii@@Base+0x146c>
   14404:	add	r3, pc, r3
   14408:	ldr	r3, [r3]
   1440c:	add	r2, r3, #1
   14410:	ldr	r3, [pc, #2092]	; 14c44 <export_data_element_to_ascii@@Base+0x1470>
   14414:	add	r3, pc, r3
   14418:	str	r2, [r3]
   1441c:	ldr	r3, [pc, #1988]	; 14be8 <export_data_element_to_ascii@@Base+0x1414>
   14420:	ldr	r3, [r6, r3]
   14424:	ldr	r3, [r3]
   14428:	cmp	r3, #0
   1442c:	blt	14448 <export_data_element_to_ascii@@Base+0xc74>
   14430:	ldr	r3, [pc, #1968]	; 14be8 <export_data_element_to_ascii@@Base+0x1414>
   14434:	ldr	r3, [r6, r3]
   14438:	ldr	r3, [r3]
   1443c:	ldr	r2, [fp, #-956]	; 0xfffffc44
   14440:	cmp	r2, r3
   14444:	bge	14460 <export_data_element_to_ascii@@Base+0xc8c>
   14448:	ldr	r3, [fp, #-956]	; 0xfffffc44
   1444c:	add	r3, r3, #1
   14450:	mov	r1, r3
   14454:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14458:	bl	13c38 <export_data_element_to_ascii@@Base+0x464>
   1445c:	b	14470 <export_data_element_to_ascii@@Base+0xc9c>
   14460:	ldr	r3, [pc, #2016]	; 14c48 <export_data_element_to_ascii@@Base+0x1474>
   14464:	add	r3, pc, r3
   14468:	mov	r0, r3
   1446c:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   14470:	ldr	r3, [pc, #2004]	; 14c4c <export_data_element_to_ascii@@Base+0x1478>
   14474:	add	r3, pc, r3
   14478:	ldr	r3, [r3]
   1447c:	sub	r2, r3, #1
   14480:	ldr	r3, [pc, #1992]	; 14c50 <export_data_element_to_ascii@@Base+0x147c>
   14484:	add	r3, pc, r3
   14488:	str	r2, [r3]
   1448c:	ldr	r3, [fp, #-160]	; 0xffffff60
   14490:	sub	r3, r3, #1
   14494:	str	r3, [fp, #-40]	; 0xffffffd8
   14498:	b	14518 <export_data_element_to_ascii@@Base+0xd44>
   1449c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   144a0:	lsl	r3, r3, #2
   144a4:	sub	r2, fp, #28
   144a8:	add	r3, r2, r3
   144ac:	ldr	r3, [r3, #-888]	; 0xfffffc88
   144b0:	add	r2, r3, #1
   144b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   144b8:	lsl	r3, r3, #2
   144bc:	sub	r1, fp, #28
   144c0:	add	r3, r1, r3
   144c4:	str	r2, [r3, #-888]	; 0xfffffc88
   144c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   144cc:	lsl	r3, r3, #2
   144d0:	sub	r2, fp, #28
   144d4:	add	r3, r2, r3
   144d8:	ldr	r2, [r3, #-888]	; 0xfffffc88
   144dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   144e0:	lsl	r3, r3, #2
   144e4:	sub	r1, fp, #28
   144e8:	add	r3, r1, r3
   144ec:	ldr	r3, [r3, #-920]	; 0xfffffc68
   144f0:	cmp	r2, r3
   144f4:	bne	14528 <export_data_element_to_ascii@@Base+0xd54>
   144f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   144fc:	sub	r2, r3, #1
   14500:	str	r2, [fp, #-40]	; 0xffffffd8
   14504:	lsl	r3, r3, #2
   14508:	sub	r2, fp, #28
   1450c:	add	r3, r2, r3
   14510:	mov	r2, #0
   14514:	str	r2, [r3, #-888]	; 0xfffffc88
   14518:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1451c:	cmp	r3, #0
   14520:	bge	1449c <export_data_element_to_ascii@@Base+0xcc8>
   14524:	b	1452c <export_data_element_to_ascii@@Base+0xd58>
   14528:	nop			; (mov r0, r0)
   1452c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14530:	sub	r2, r3, #1
   14534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14538:	cmp	r2, r3
   1453c:	ble	14558 <export_data_element_to_ascii@@Base+0xd84>
   14540:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14544:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   14548:	mov	r3, r0
   1454c:	cmp	r3, #0
   14550:	beq	14558 <export_data_element_to_ascii@@Base+0xd84>
   14554:	bl	1bab8 <handle_coda_error@@Base>
   14558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1455c:	add	r3, r3, #1
   14560:	str	r3, [fp, #-36]	; 0xffffffdc
   14564:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14568:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1456c:	cmp	r2, r3
   14570:	blt	14290 <export_data_element_to_ascii@@Base+0xabc>
   14574:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14578:	bl	123fc <coda_cursor_goto_parent@plt>
   1457c:	b	14d88 <export_data_element_to_ascii@@Base+0x15b4>
   14580:	sub	r3, fp, #204	; 0xcc
   14584:	mov	r1, r3
   14588:	ldr	r0, [fp, #-952]	; 0xfffffc48
   1458c:	bl	12534 <coda_cursor_has_ascii_content@plt>
   14590:	mov	r3, r0
   14594:	cmp	r3, #0
   14598:	beq	145a0 <export_data_element_to_ascii@@Base+0xdcc>
   1459c:	bl	1bab8 <handle_coda_error@@Base>
   145a0:	ldr	r3, [fp, #-204]	; 0xffffff34
   145a4:	cmp	r3, #0
   145a8:	beq	14684 <export_data_element_to_ascii@@Base+0xeb0>
   145ac:	sub	r3, fp, #208	; 0xd0
   145b0:	mov	r1, r3
   145b4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   145b8:	bl	1242c <coda_cursor_get_string_length@plt>
   145bc:	mov	r3, r0
   145c0:	cmp	r3, #0
   145c4:	beq	145cc <export_data_element_to_ascii@@Base+0xdf8>
   145c8:	bl	1bab8 <handle_coda_error@@Base>
   145cc:	ldr	r3, [fp, #-208]	; 0xffffff30
   145d0:	add	r3, r3, #1
   145d4:	mov	r0, r3
   145d8:	bl	123cc <malloc@plt>
   145dc:	mov	r3, r0
   145e0:	str	r3, [fp, #-44]	; 0xffffffd4
   145e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   145e8:	cmp	r3, #0
   145ec:	bne	1461c <export_data_element_to_ascii@@Base+0xe48>
   145f0:	ldr	r3, [fp, #-208]	; 0xffffff30
   145f4:	add	r2, r3, #1
   145f8:	ldr	r3, [pc, #1620]	; 14c54 <export_data_element_to_ascii@@Base+0x1480>
   145fc:	str	r3, [sp]
   14600:	ldr	r3, [pc, #1616]	; 14c58 <export_data_element_to_ascii@@Base+0x1484>
   14604:	add	r3, pc, r3
   14608:	ldr	r1, [pc, #1612]	; 14c5c <export_data_element_to_ascii@@Base+0x1488>
   1460c:	add	r1, pc, r1
   14610:	mvn	r0, #0
   14614:	bl	1224c <coda_set_error@plt>
   14618:	bl	1bab8 <handle_coda_error@@Base>
   1461c:	ldr	r3, [fp, #-208]	; 0xffffff30
   14620:	add	r3, r3, #1
   14624:	mov	r2, r3
   14628:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1462c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14630:	bl	123f0 <coda_cursor_read_string@plt>
   14634:	mov	r3, r0
   14638:	cmp	r3, #0
   1463c:	beq	14644 <export_data_element_to_ascii@@Base+0xe70>
   14640:	bl	1bab8 <handle_coda_error@@Base>
   14644:	ldr	r3, [pc, #1556]	; 14c60 <export_data_element_to_ascii@@Base+0x148c>
   14648:	add	r3, pc, r3
   1464c:	mov	r0, r3
   14650:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   14654:	ldr	r3, [fp, #-208]	; 0xffffff30
   14658:	mov	r1, r3
   1465c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14660:	bl	13a74 <export_data_element_to_ascii@@Base+0x2a0>
   14664:	ldr	r3, [fp, #-208]	; 0xffffff30
   14668:	mov	r1, r3
   1466c:	ldr	r3, [pc, #1520]	; 14c64 <export_data_element_to_ascii@@Base+0x1490>
   14670:	add	r3, pc, r3
   14674:	mov	r0, r3
   14678:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   1467c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14680:	bl	12294 <free@plt>
   14684:	sub	r3, fp, #200	; 0xc8
   14688:	mov	r1, r3
   1468c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14690:	bl	123c0 <coda_cursor_get_read_type@plt>
   14694:	mov	r3, r0
   14698:	cmp	r3, #0
   1469c:	beq	146a4 <export_data_element_to_ascii@@Base+0xed0>
   146a0:	bl	1bab8 <handle_coda_error@@Base>
   146a4:	ldr	r3, [fp, #-200]	; 0xffffff38
   146a8:	add	r3, r3, #1
   146ac:	cmp	r3, #13
   146b0:	addls	pc, pc, r3, lsl #2
   146b4:	b	14d90 <export_data_element_to_ascii@@Base+0x15bc>
   146b8:	b	14a10 <export_data_element_to_ascii@@Base+0x123c>
   146bc:	b	14894 <export_data_element_to_ascii@@Base+0x10c0>
   146c0:	b	148d0 <export_data_element_to_ascii@@Base+0x10fc>
   146c4:	b	14894 <export_data_element_to_ascii@@Base+0x10c0>
   146c8:	b	148d0 <export_data_element_to_ascii@@Base+0x10fc>
   146cc:	b	14894 <export_data_element_to_ascii@@Base+0x10c0>
   146d0:	b	148d0 <export_data_element_to_ascii@@Base+0x10fc>
   146d4:	b	1490c <export_data_element_to_ascii@@Base+0x1138>
   146d8:	b	1495c <export_data_element_to_ascii@@Base+0x1188>
   146dc:	b	149ac <export_data_element_to_ascii@@Base+0x11d8>
   146e0:	b	149ac <export_data_element_to_ascii@@Base+0x11d8>
   146e4:	b	14a10 <export_data_element_to_ascii@@Base+0x123c>
   146e8:	b	14a10 <export_data_element_to_ascii@@Base+0x123c>
   146ec:	b	146f0 <export_data_element_to_ascii@@Base+0xf1c>
   146f0:	sub	r3, fp, #220	; 0xdc
   146f4:	mov	r1, r3
   146f8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   146fc:	bl	125ac <coda_cursor_get_bit_size@plt>
   14700:	mov	r3, r0
   14704:	cmp	r3, #0
   14708:	beq	14710 <export_data_element_to_ascii@@Base+0xf3c>
   1470c:	bl	1bab8 <handle_coda_error@@Base>
   14710:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14714:	lsr	r4, r2, #3
   14718:	orr	r4, r4, r3, lsl #29
   1471c:	asr	r5, r3, #3
   14720:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14724:	mov	r0, #7
   14728:	mov	r1, #0
   1472c:	and	r2, r2, r0
   14730:	and	r3, r3, r1
   14734:	orrs	r3, r2, r3
   14738:	beq	14748 <export_data_element_to_ascii@@Base+0xf74>
   1473c:	mov	r2, #1
   14740:	mov	r3, #0
   14744:	b	14750 <export_data_element_to_ascii@@Base+0xf7c>
   14748:	mov	r2, #0
   1474c:	mov	r3, #0
   14750:	adds	r2, r2, r4
   14754:	adc	r3, r3, r5
   14758:	strd	r2, [fp, #-52]	; 0xffffffcc
   1475c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14760:	mov	r0, r3
   14764:	bl	123cc <malloc@plt>
   14768:	mov	r3, r0
   1476c:	str	r3, [fp, #-56]	; 0xffffffc8
   14770:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14774:	cmp	r3, #0
   14778:	bne	147a4 <export_data_element_to_ascii@@Base+0xfd0>
   1477c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14780:	ldr	r3, [pc, #1248]	; 14c68 <export_data_element_to_ascii@@Base+0x1494>
   14784:	str	r3, [sp]
   14788:	ldr	r3, [pc, #1244]	; 14c6c <export_data_element_to_ascii@@Base+0x1498>
   1478c:	add	r3, pc, r3
   14790:	ldr	r1, [pc, #1240]	; 14c70 <export_data_element_to_ascii@@Base+0x149c>
   14794:	add	r1, pc, r1
   14798:	mvn	r0, #0
   1479c:	bl	1224c <coda_set_error@plt>
   147a0:	bl	1bab8 <handle_coda_error@@Base>
   147a4:	ldrd	r2, [fp, #-220]	; 0xffffff24
   147a8:	strd	r2, [sp]
   147ac:	mov	r2, #0
   147b0:	mov	r3, #0
   147b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   147b8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   147bc:	bl	12648 <coda_cursor_read_bits@plt>
   147c0:	mov	r3, r0
   147c4:	cmp	r3, #0
   147c8:	beq	147d0 <export_data_element_to_ascii@@Base+0xffc>
   147cc:	bl	1bab8 <handle_coda_error@@Base>
   147d0:	ldr	r3, [pc, #1180]	; 14c74 <export_data_element_to_ascii@@Base+0x14a0>
   147d4:	add	r3, pc, r3
   147d8:	mov	r0, r3
   147dc:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   147e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   147e4:	mov	r1, r3
   147e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147ec:	bl	13a74 <export_data_element_to_ascii@@Base+0x2a0>
   147f0:	ldr	r3, [pc, #1152]	; 14c78 <export_data_element_to_ascii@@Base+0x14a4>
   147f4:	add	r3, pc, r3
   147f8:	mov	r0, r3
   147fc:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14800:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14804:	lsr	r8, r2, #3
   14808:	orr	r8, r8, r3, lsl #29
   1480c:	asr	r9, r3, #3
   14810:	sub	r3, fp, #244	; 0xf4
   14814:	mov	r2, r3
   14818:	mov	r0, r8
   1481c:	mov	r1, r9
   14820:	bl	12654 <coda_str64@plt>
   14824:	sub	r3, fp, #244	; 0xf4
   14828:	mov	r1, r3
   1482c:	ldr	r3, [pc, #1096]	; 14c7c <export_data_element_to_ascii@@Base+0x14a8>
   14830:	add	r3, pc, r3
   14834:	mov	r0, r3
   14838:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   1483c:	ldrd	r2, [fp, #-220]	; 0xffffff24
   14840:	mov	r0, #7
   14844:	mov	r1, #0
   14848:	and	r2, r2, r0
   1484c:	and	r3, r3, r1
   14850:	orrs	r3, r2, r3
   14854:	beq	14878 <export_data_element_to_ascii@@Base+0x10a4>
   14858:	ldrd	r2, [fp, #-220]	; 0xffffff24
   1485c:	mov	r3, r2
   14860:	and	r3, r3, #7
   14864:	mov	r1, r3
   14868:	ldr	r3, [pc, #1040]	; 14c80 <export_data_element_to_ascii@@Base+0x14ac>
   1486c:	add	r3, pc, r3
   14870:	mov	r0, r3
   14874:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14878:	ldr	r3, [pc, #1028]	; 14c84 <export_data_element_to_ascii@@Base+0x14b0>
   1487c:	add	r3, pc, r3
   14880:	mov	r0, r3
   14884:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14888:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1488c:	bl	12294 <free@plt>
   14890:	b	14a40 <export_data_element_to_ascii@@Base+0x126c>
   14894:	sub	r3, fp, #248	; 0xf8
   14898:	mov	r1, r3
   1489c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   148a0:	bl	125e8 <coda_cursor_read_int32@plt>
   148a4:	mov	r3, r0
   148a8:	cmp	r3, #0
   148ac:	beq	148b4 <export_data_element_to_ascii@@Base+0x10e0>
   148b0:	bl	1bab8 <handle_coda_error@@Base>
   148b4:	ldr	r3, [fp, #-248]	; 0xffffff08
   148b8:	mov	r1, r3
   148bc:	ldr	r3, [pc, #964]	; 14c88 <export_data_element_to_ascii@@Base+0x14b4>
   148c0:	add	r3, pc, r3
   148c4:	mov	r0, r3
   148c8:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   148cc:	b	14a40 <export_data_element_to_ascii@@Base+0x126c>
   148d0:	sub	r3, fp, #252	; 0xfc
   148d4:	mov	r1, r3
   148d8:	ldr	r0, [fp, #-952]	; 0xfffffc48
   148dc:	bl	122b8 <coda_cursor_read_uint32@plt>
   148e0:	mov	r3, r0
   148e4:	cmp	r3, #0
   148e8:	beq	148f0 <export_data_element_to_ascii@@Base+0x111c>
   148ec:	bl	1bab8 <handle_coda_error@@Base>
   148f0:	ldr	r3, [fp, #-252]	; 0xffffff04
   148f4:	mov	r1, r3
   148f8:	ldr	r3, [pc, #908]	; 14c8c <export_data_element_to_ascii@@Base+0x14b8>
   148fc:	add	r3, pc, r3
   14900:	mov	r0, r3
   14904:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   14908:	b	14a40 <export_data_element_to_ascii@@Base+0x126c>
   1490c:	sub	r3, fp, #260	; 0x104
   14910:	mov	r1, r3
   14914:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14918:	bl	1254c <coda_cursor_read_int64@plt>
   1491c:	mov	r3, r0
   14920:	cmp	r3, #0
   14924:	beq	1492c <export_data_element_to_ascii@@Base+0x1158>
   14928:	bl	1bab8 <handle_coda_error@@Base>
   1492c:	sub	r3, fp, #260	; 0x104
   14930:	ldrd	r0, [r3]
   14934:	sub	r3, fp, #284	; 0x11c
   14938:	mov	r2, r3
   1493c:	bl	12654 <coda_str64@plt>
   14940:	sub	r3, fp, #284	; 0x11c
   14944:	mov	r1, r3
   14948:	ldr	r3, [pc, #832]	; 14c90 <export_data_element_to_ascii@@Base+0x14bc>
   1494c:	add	r3, pc, r3
   14950:	mov	r0, r3
   14954:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   14958:	b	14a40 <export_data_element_to_ascii@@Base+0x126c>
   1495c:	sub	r3, fp, #292	; 0x124
   14960:	mov	r1, r3
   14964:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14968:	bl	12438 <coda_cursor_read_uint64@plt>
   1496c:	mov	r3, r0
   14970:	cmp	r3, #0
   14974:	beq	1497c <export_data_element_to_ascii@@Base+0x11a8>
   14978:	bl	1bab8 <handle_coda_error@@Base>
   1497c:	sub	r3, fp, #284	; 0x11c
   14980:	ldrd	r0, [r3, #-8]
   14984:	sub	r3, fp, #316	; 0x13c
   14988:	mov	r2, r3
   1498c:	bl	12288 <coda_str64u@plt>
   14990:	sub	r3, fp, #316	; 0x13c
   14994:	mov	r1, r3
   14998:	ldr	r3, [pc, #756]	; 14c94 <export_data_element_to_ascii@@Base+0x14c0>
   1499c:	add	r3, pc, r3
   149a0:	mov	r0, r3
   149a4:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   149a8:	b	14a40 <export_data_element_to_ascii@@Base+0x126c>
   149ac:	sub	r3, fp, #324	; 0x144
   149b0:	mov	r1, r3
   149b4:	ldr	r0, [fp, #-952]	; 0xfffffc48
   149b8:	bl	12444 <coda_cursor_read_double@plt>
   149bc:	mov	r3, r0
   149c0:	cmp	r3, #0
   149c4:	beq	149cc <export_data_element_to_ascii@@Base+0x11f8>
   149c8:	bl	1bab8 <handle_coda_error@@Base>
   149cc:	ldr	r3, [fp, #-200]	; 0xffffff38
   149d0:	cmp	r3, #8
   149d4:	bne	149f4 <export_data_element_to_ascii@@Base+0x1220>
   149d8:	sub	r3, fp, #324	; 0x144
   149dc:	ldrd	r2, [r3]
   149e0:	ldr	r1, [pc, #688]	; 14c98 <export_data_element_to_ascii@@Base+0x14c4>
   149e4:	add	r1, pc, r1
   149e8:	mov	r0, r1
   149ec:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   149f0:	b	14a40 <export_data_element_to_ascii@@Base+0x126c>
   149f4:	sub	r3, fp, #324	; 0x144
   149f8:	ldrd	r2, [r3]
   149fc:	ldr	r1, [pc, #664]	; 14c9c <export_data_element_to_ascii@@Base+0x14c8>
   14a00:	add	r1, pc, r1
   14a04:	mov	r0, r1
   14a08:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   14a0c:	b	14a40 <export_data_element_to_ascii@@Base+0x126c>
   14a10:	ldr	r3, [fp, #-204]	; 0xffffff34
   14a14:	cmp	r3, #0
   14a18:	bne	14a3c <export_data_element_to_ascii@@Base+0x1268>
   14a1c:	ldr	r3, [pc, #636]	; 14ca0 <export_data_element_to_ascii@@Base+0x14cc>
   14a20:	add	r3, pc, r3
   14a24:	mov	r2, #548	; 0x224
   14a28:	ldr	r1, [pc, #628]	; 14ca4 <export_data_element_to_ascii@@Base+0x14d0>
   14a2c:	add	r1, pc, r1
   14a30:	ldr	r0, [pc, #624]	; 14ca8 <export_data_element_to_ascii@@Base+0x14d4>
   14a34:	add	r0, pc, r0
   14a38:	bl	12660 <__assert_fail@plt>
   14a3c:	nop			; (mov r0, r0)
   14a40:	b	14d90 <export_data_element_to_ascii@@Base+0x15bc>
   14a44:	sub	r3, fp, #328	; 0x148
   14a48:	mov	r1, r3
   14a4c:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14a50:	bl	12360 <coda_cursor_get_special_type@plt>
   14a54:	mov	r3, r0
   14a58:	cmp	r3, #0
   14a5c:	beq	14a64 <export_data_element_to_ascii@@Base+0x1290>
   14a60:	bl	1bab8 <handle_coda_error@@Base>
   14a64:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14a68:	cmp	r3, #0
   14a6c:	beq	14ab4 <export_data_element_to_ascii@@Base+0x12e0>
   14a70:	ldr	r2, [fp, #-952]	; 0xfffffc48
   14a74:	sub	r3, fp, #916	; 0x394
   14a78:	mov	r1, r2
   14a7c:	mov	r2, #520	; 0x208
   14a80:	mov	r0, r3
   14a84:	bl	122e8 <memcpy@plt>
   14a88:	sub	r3, fp, #916	; 0x394
   14a8c:	mov	r0, r3
   14a90:	bl	125d0 <coda_cursor_use_base_type_of_special_type@plt>
   14a94:	mov	r3, r0
   14a98:	cmp	r3, #0
   14a9c:	beq	14aa4 <export_data_element_to_ascii@@Base+0x12d0>
   14aa0:	bl	1bab8 <handle_coda_error@@Base>
   14aa4:	sub	r3, fp, #916	; 0x394
   14aa8:	ldr	r1, [fp, #-956]	; 0xfffffc44
   14aac:	mov	r0, r3
   14ab0:	bl	13c38 <export_data_element_to_ascii@@Base+0x464>
   14ab4:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14ab8:	mov	r0, r3
   14abc:	bl	121d4 <coda_type_get_special_type_name@plt>
   14ac0:	mov	r3, r0
   14ac4:	mov	r1, r3
   14ac8:	ldr	r3, [pc, #476]	; 14cac <export_data_element_to_ascii@@Base+0x14d8>
   14acc:	add	r3, pc, r3
   14ad0:	mov	r0, r3
   14ad4:	bl	13a10 <export_data_element_to_ascii@@Base+0x23c>
   14ad8:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   14adc:	cmp	r3, #3
   14ae0:	addls	pc, pc, r3, lsl #2
   14ae4:	b	14d98 <export_data_element_to_ascii@@Base+0x15c4>
   14ae8:	b	14af8 <export_data_element_to_ascii@@Base+0x1324>
   14aec:	b	14b0c <export_data_element_to_ascii@@Base+0x1338>
   14af0:	b	14b48 <export_data_element_to_ascii@@Base+0x1374>
   14af4:	b	14d28 <export_data_element_to_ascii@@Base+0x1554>
   14af8:	ldr	r3, [pc, #432]	; 14cb0 <export_data_element_to_ascii@@Base+0x14dc>
   14afc:	add	r3, pc, r3
   14b00:	mov	r0, r3
   14b04:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14b08:	b	14d7c <export_data_element_to_ascii@@Base+0x15a8>
   14b0c:	sub	r3, fp, #340	; 0x154
   14b10:	mov	r1, r3
   14b14:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14b18:	bl	12444 <coda_cursor_read_double@plt>
   14b1c:	mov	r3, r0
   14b20:	cmp	r3, #0
   14b24:	beq	14b2c <export_data_element_to_ascii@@Base+0x1358>
   14b28:	bl	1bab8 <handle_coda_error@@Base>
   14b2c:	sub	r3, fp, #340	; 0x154
   14b30:	ldrd	r2, [r3]
   14b34:	ldr	r1, [pc, #376]	; 14cb4 <export_data_element_to_ascii@@Base+0x14e0>
   14b38:	add	r1, pc, r1
   14b3c:	mov	r0, r1
   14b40:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14b44:	b	14d7c <export_data_element_to_ascii@@Base+0x15a8>
   14b48:	sub	r3, fp, #348	; 0x15c
   14b4c:	mov	r1, r3
   14b50:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14b54:	bl	12444 <coda_cursor_read_double@plt>
   14b58:	mov	r3, r0
   14b5c:	cmp	r3, #0
   14b60:	beq	14b68 <export_data_element_to_ascii@@Base+0x1394>
   14b64:	bl	1bab8 <handle_coda_error@@Base>
   14b68:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14b6c:	vmov.f64	d0, d7
   14b70:	bl	12450 <coda_isNaN@plt>
   14b74:	mov	r3, r0
   14b78:	cmp	r3, #0
   14b7c:	bne	14b98 <export_data_element_to_ascii@@Base+0x13c4>
   14b80:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14b84:	vmov.f64	d0, d7
   14b88:	bl	122f4 <coda_isInf@plt>
   14b8c:	mov	r3, r0
   14b90:	cmp	r3, #0
   14b94:	beq	14ccc <export_data_element_to_ascii@@Base+0x14f8>
   14b98:	sub	r3, fp, #348	; 0x15c
   14b9c:	ldrd	r2, [r3]
   14ba0:	ldr	r1, [pc, #272]	; 14cb8 <export_data_element_to_ascii@@Base+0x14e4>
   14ba4:	add	r1, pc, r1
   14ba8:	mov	r0, r1
   14bac:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14bb0:	b	14d7c <export_data_element_to_ascii@@Base+0x15a8>
   14bb4:	andeq	sp, r1, r8, lsr #7
   14bb8:	andeq	sl, r0, ip, asr sl
   14bbc:	andeq	sp, r1, r8, asr r5
   14bc0:	andeq	sp, r1, r8, asr #10
   14bc4:	andeq	sp, r1, r0, lsr r5
   14bc8:	andeq	sp, r1, r0, lsr #10
   14bcc:	ldrdeq	sl, [r0], -ip
   14bd0:			; <UNDEFINED> instruction: 0x0001d3b8
   14bd4:	andeq	sl, r0, r4, asr r8
   14bd8:	andeq	sl, r0, ip, lsl r8
   14bdc:	andeq	sl, r0, r0, lsl r8
   14be0:	andeq	sp, r1, ip, ror #5
   14be4:	ldrdeq	sp, [r1], -ip
   14be8:	andeq	r0, r0, r0, ror #3
   14bec:	andeq	sl, r0, r4, lsr #15
   14bf0:	andeq	sp, r1, ip, ror r2
   14bf4:	andeq	sp, r1, ip, ror #4
   14bf8:	andeq	sl, r0, r8, lsl #14
   14bfc:	andeq	sp, r1, r4, ror #3
   14c00:	andeq	sl, r0, r0, lsl #13
   14c04:	andeq	sl, r0, r8, asr #12
   14c08:	andeq	sl, r0, ip, lsr r6
   14c0c:	andeq	sp, r1, r8, lsl r1
   14c10:	andeq	sp, r1, r8, lsl #2
   14c14:	ldrdeq	sl, [r0], -r0
   14c18:	andeq	sp, r1, r8, lsr #1
   14c1c:	muleq	r1, r8, r0
   14c20:	muleq	r0, r0, r4
   14c24:	andeq	sl, r0, r0, ror #8
   14c28:	andeq	sl, r0, r0, asr #8
   14c2c:	andeq	sl, r0, r8, lsl r4
   14c30:	andeq	ip, r1, ip, asr #29
   14c34:	andeq	sl, r0, r8, ror #6
   14c38:	andeq	sl, r0, r0, lsr r3
   14c3c:	andeq	sl, r0, r4, lsr #6
   14c40:	andeq	ip, r1, r0, lsl #28
   14c44:	strdeq	ip, [r1], -r0
   14c48:			; <UNDEFINED> instruction: 0x0000a2b8
   14c4c:	muleq	r1, r0, sp
   14c50:	andeq	ip, r1, r0, lsl #27
   14c54:	muleq	r0, sl, r1
   14c58:	andeq	sl, r0, r4, asr r0
   14c5c:	andeq	sl, r0, r8, lsr #2
   14c60:	andeq	sl, r0, r4, lsr #2
   14c64:	andeq	sl, r0, r0, lsl #2
   14c68:			; <UNDEFINED> instruction: 0x000001bf
   14c6c:	andeq	r9, r0, ip, asr #29
   14c70:	andeq	r9, r0, r0, lsr #31
   14c74:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   14c78:	andeq	r9, r0, ip, lsl #31
   14c7c:	andeq	r9, r0, ip, asr pc
   14c80:	andeq	r9, r0, r8, lsr #29
   14c84:	andeq	r9, r0, r4, lsl pc
   14c88:	ldrdeq	r9, [r0], -r4
   14c8c:	andeq	r9, r0, r0, lsr #29
   14c90:	andeq	r9, r0, r8, asr lr
   14c94:	andeq	r9, r0, r8, lsl #28
   14c98:	andeq	r9, r0, r4, asr #27
   14c9c:			; <UNDEFINED> instruction: 0x00009db0
   14ca0:	andeq	r9, r0, r0, lsl lr
   14ca4:	andeq	r9, r0, ip, lsr #24
   14ca8:	andeq	r9, r0, r4, lsl #27
   14cac:	andeq	r9, r0, r0, lsl #26
   14cb0:	andeq	r9, r0, ip, lsl ip
   14cb4:	andeq	r9, r0, r8, ror ip
   14cb8:	andeq	r9, r0, r0, lsr ip
   14cbc:	andeq	r9, r0, r0, lsl #22
   14cc0:	strdeq	r9, [r0], -ip
   14cc4:	strdeq	r9, [r0], -ip
   14cc8:			; <UNDEFINED> instruction: 0x00009ab0
   14ccc:	vldr	d7, [fp, #-348]	; 0xfffffea4
   14cd0:	sub	r3, fp, #376	; 0x178
   14cd4:	mov	r1, r3
   14cd8:	ldr	r3, [pc, #-36]	; 14cbc <export_data_element_to_ascii@@Base+0x14e8>
   14cdc:	add	r3, pc, r3
   14ce0:	mov	r0, r3
   14ce4:	vmov.f64	d0, d7
   14ce8:	bl	12270 <coda_time_double_to_string@plt>
   14cec:	mov	r3, r0
   14cf0:	cmp	r3, #0
   14cf4:	beq	14d0c <export_data_element_to_ascii@@Base+0x1538>
   14cf8:	ldr	r3, [pc, #-64]	; 14cc0 <export_data_element_to_ascii@@Base+0x14ec>
   14cfc:	add	r3, pc, r3
   14d00:	mov	r0, r3
   14d04:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14d08:	b	14d7c <export_data_element_to_ascii@@Base+0x15a8>
   14d0c:	sub	r3, fp, #376	; 0x178
   14d10:	mov	r1, r3
   14d14:	ldr	r3, [pc, #-88]	; 14cc4 <export_data_element_to_ascii@@Base+0x14f0>
   14d18:	add	r3, pc, r3
   14d1c:	mov	r0, r3
   14d20:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14d24:	b	14d7c <export_data_element_to_ascii@@Base+0x15a8>
   14d28:	sub	r2, fp, #396	; 0x18c
   14d2c:	sub	r3, fp, #388	; 0x184
   14d30:	mov	r1, r3
   14d34:	ldr	r0, [fp, #-952]	; 0xfffffc48
   14d38:	bl	124ec <coda_cursor_read_complex_double_split@plt>
   14d3c:	mov	r3, r0
   14d40:	cmp	r3, #0
   14d44:	beq	14d4c <export_data_element_to_ascii@@Base+0x1578>
   14d48:	bl	1bab8 <handle_coda_error@@Base>
   14d4c:	sub	r1, fp, #388	; 0x184
   14d50:	ldrd	r0, [r1]
   14d54:	sub	r3, fp, #396	; 0x18c
   14d58:	ldrd	r2, [r3]
   14d5c:	strd	r2, [sp]
   14d60:	mov	r2, r0
   14d64:	mov	r3, r1
   14d68:	ldr	r1, [pc, #-168]	; 14cc8 <export_data_element_to_ascii@@Base+0x14f4>
   14d6c:	add	r1, pc, r1
   14d70:	mov	r0, r1
   14d74:	bl	139b0 <export_data_element_to_ascii@@Base+0x1dc>
   14d78:	nop			; (mov r0, r0)
   14d7c:	b	14d98 <export_data_element_to_ascii@@Base+0x15c4>
   14d80:	nop			; (mov r0, r0)
   14d84:	b	14d9c <export_data_element_to_ascii@@Base+0x15c8>
   14d88:	nop			; (mov r0, r0)
   14d8c:	b	14d9c <export_data_element_to_ascii@@Base+0x15c8>
   14d90:	nop			; (mov r0, r0)
   14d94:	b	14d9c <export_data_element_to_ascii@@Base+0x15c8>
   14d98:	nop			; (mov r0, r0)
   14d9c:	nop			; (mov r0, r0)
   14da0:	sub	sp, fp, #24
   14da4:	pop	{r4, r5, r6, r8, r9, fp, pc}

00014da8 <print_debug_data@@Base>:
   14da8:	push	{r4, fp, lr}
   14dac:	add	fp, sp, #8
   14db0:	sub	sp, sp, #564	; 0x234
   14db4:	str	r0, [fp, #-552]	; 0xfffffdd8
   14db8:	str	r1, [fp, #-556]	; 0xfffffdd4
   14dbc:	str	r2, [fp, #-560]	; 0xfffffdd0
   14dc0:	ldr	r4, [pc, #488]	; 14fb0 <print_debug_data@@Base+0x208>
   14dc4:	add	r4, pc, r4
   14dc8:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   14dcc:	cmp	r3, #0
   14dd0:	bne	14df8 <print_debug_data@@Base+0x50>
   14dd4:	ldr	r3, [pc, #472]	; 14fb4 <print_debug_data@@Base+0x20c>
   14dd8:	ldr	r3, [r4, r3]
   14ddc:	ldr	r3, [r3]
   14de0:	sub	r2, fp, #20
   14de4:	mov	r1, r2
   14de8:	mov	r0, r3
   14dec:	bl	12258 <coda_open@plt>
   14df0:	str	r0, [fp, #-16]
   14df4:	b	14e20 <print_debug_data@@Base+0x78>
   14df8:	ldr	r3, [pc, #436]	; 14fb4 <print_debug_data@@Base+0x20c>
   14dfc:	ldr	r3, [r4, r3]
   14e00:	ldr	r0, [r3]
   14e04:	sub	r3, fp, #20
   14e08:	str	r3, [sp]
   14e0c:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   14e10:	ldr	r2, [fp, #-556]	; 0xfffffdd4
   14e14:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   14e18:	bl	12474 <coda_open_as@plt>
   14e1c:	str	r0, [fp, #-16]
   14e20:	ldr	r3, [fp, #-16]
   14e24:	cmp	r3, #0
   14e28:	beq	14ea8 <print_debug_data@@Base+0x100>
   14e2c:	bl	1260c <coda_get_errno@plt>
   14e30:	mov	r3, r0
   14e34:	ldr	r3, [r3]
   14e38:	cmn	r3, #21
   14e3c:	bne	14ea8 <print_debug_data@@Base+0x100>
   14e40:	mov	r0, #0
   14e44:	bl	122a0 <coda_set_option_use_mmap@plt>
   14e48:	ldr	r3, [fp, #-552]	; 0xfffffdd8
   14e4c:	cmp	r3, #0
   14e50:	bne	14e78 <print_debug_data@@Base+0xd0>
   14e54:	ldr	r3, [pc, #344]	; 14fb4 <print_debug_data@@Base+0x20c>
   14e58:	ldr	r3, [r4, r3]
   14e5c:	ldr	r3, [r3]
   14e60:	sub	r2, fp, #20
   14e64:	mov	r1, r2
   14e68:	mov	r0, r3
   14e6c:	bl	12258 <coda_open@plt>
   14e70:	str	r0, [fp, #-16]
   14e74:	b	14ea0 <print_debug_data@@Base+0xf8>
   14e78:	ldr	r3, [pc, #308]	; 14fb4 <print_debug_data@@Base+0x20c>
   14e7c:	ldr	r3, [r4, r3]
   14e80:	ldr	r0, [r3]
   14e84:	sub	r3, fp, #20
   14e88:	str	r3, [sp]
   14e8c:	ldr	r3, [fp, #-560]	; 0xfffffdd0
   14e90:	ldr	r2, [fp, #-556]	; 0xfffffdd4
   14e94:	ldr	r1, [fp, #-552]	; 0xfffffdd8
   14e98:	bl	12474 <coda_open_as@plt>
   14e9c:	str	r0, [fp, #-16]
   14ea0:	mov	r0, #1
   14ea4:	bl	122a0 <coda_set_option_use_mmap@plt>
   14ea8:	ldr	r3, [fp, #-16]
   14eac:	cmp	r3, #0
   14eb0:	beq	14eb8 <print_debug_data@@Base+0x110>
   14eb4:	bl	1bab8 <handle_coda_error@@Base>
   14eb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ebc:	sub	r2, fp, #544	; 0x220
   14ec0:	mov	r1, r2
   14ec4:	mov	r0, r3
   14ec8:	bl	1233c <coda_get_product_format@plt>
   14ecc:	mov	r3, r0
   14ed0:	cmp	r3, #0
   14ed4:	beq	14edc <print_debug_data@@Base+0x134>
   14ed8:	bl	1bab8 <handle_coda_error@@Base>
   14edc:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14ee0:	cmp	r3, #0
   14ee4:	beq	14f00 <print_debug_data@@Base+0x158>
   14ee8:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14eec:	cmp	r3, #1
   14ef0:	beq	14f00 <print_debug_data@@Base+0x158>
   14ef4:	ldr	r3, [fp, #-544]	; 0xfffffde0
   14ef8:	cmp	r3, #2
   14efc:	bne	14f08 <print_debug_data@@Base+0x160>
   14f00:	mov	r2, #1
   14f04:	b	14f0c <print_debug_data@@Base+0x164>
   14f08:	mov	r2, #0
   14f0c:	ldr	r3, [pc, #164]	; 14fb8 <print_debug_data@@Base+0x210>
   14f10:	add	r3, pc, r3
   14f14:	str	r2, [r3]
   14f18:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f1c:	sub	r3, fp, #540	; 0x21c
   14f20:	mov	r1, r2
   14f24:	mov	r0, r3
   14f28:	bl	12384 <coda_cursor_set_product@plt>
   14f2c:	mov	r3, r0
   14f30:	cmp	r3, #0
   14f34:	beq	14f3c <print_debug_data@@Base+0x194>
   14f38:	bl	1bab8 <handle_coda_error@@Base>
   14f3c:	ldr	r3, [pc, #120]	; 14fbc <print_debug_data@@Base+0x214>
   14f40:	ldr	r3, [r4, r3]
   14f44:	ldr	r3, [r3]
   14f48:	cmp	r3, #0
   14f4c:	beq	14f80 <print_debug_data@@Base+0x1d8>
   14f50:	ldr	r3, [pc, #100]	; 14fbc <print_debug_data@@Base+0x214>
   14f54:	ldr	r3, [r4, r3]
   14f58:	ldr	r2, [r3]
   14f5c:	sub	r3, fp, #540	; 0x21c
   14f60:	mov	r1, r2
   14f64:	mov	r0, r3
   14f68:	bl	12564 <coda_cursor_goto@plt>
   14f6c:	str	r0, [fp, #-16]
   14f70:	ldr	r3, [fp, #-16]
   14f74:	cmp	r3, #0
   14f78:	beq	14f80 <print_debug_data@@Base+0x1d8>
   14f7c:	bl	1bab8 <handle_coda_error@@Base>
   14f80:	mov	r0, #0
   14f84:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   14f88:	sub	r3, fp, #540	; 0x21c
   14f8c:	mov	r1, #0
   14f90:	mov	r0, r3
   14f94:	bl	13c38 <export_data_element_to_ascii@@Base+0x464>
   14f98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f9c:	mov	r0, r3
   14fa0:	bl	12540 <coda_close@plt>
   14fa4:	nop			; (mov r0, r0)
   14fa8:	sub	sp, fp, #8
   14fac:	pop	{r4, fp, pc}
   14fb0:	andeq	ip, r1, r4, lsr r2
   14fb4:			; <UNDEFINED> instruction: 0x000001b4
   14fb8:	andeq	ip, r1, r4, ror #5
   14fbc:	ldrdeq	r0, [r0], -r8

00014fc0 <dim_info_init@@Base>:
   14fc0:	push	{fp}		; (str fp, [sp, #-4]!)
   14fc4:	add	fp, sp, #0
   14fc8:	ldr	r3, [pc, #64]	; 15010 <dim_info_init@@Base+0x50>
   14fcc:	add	r3, pc, r3
   14fd0:	ldr	r2, [pc, #60]	; 15014 <dim_info_init@@Base+0x54>
   14fd4:	ldr	r2, [r3, r2]
   14fd8:	mov	r1, #0
   14fdc:	str	r1, [r2]
   14fe0:	ldr	r2, [pc, #44]	; 15014 <dim_info_init@@Base+0x54>
   14fe4:	ldr	r2, [r3, r2]
   14fe8:	mov	r1, #0
   14fec:	str	r1, [r2, #68]	; 0x44
   14ff0:	ldr	r2, [pc, #28]	; 15014 <dim_info_init@@Base+0x54>
   14ff4:	ldr	r3, [r3, r2]
   14ff8:	mvn	r2, #0
   14ffc:	str	r2, [r3, #104]	; 0x68
   15000:	nop			; (mov r0, r0)
   15004:	add	sp, fp, #0
   15008:	pop	{fp}		; (ldr fp, [sp], #4)
   1500c:	bx	lr
   15010:	andeq	ip, r1, ip, lsr #32
   15014:	andeq	r0, r0, r4, ror #3

00015018 <dim_info_done@@Base>:
   15018:	push	{fp}		; (str fp, [sp, #-4]!)
   1501c:	add	fp, sp, #0
   15020:	nop			; (mov r0, r0)
   15024:	add	sp, fp, #0
   15028:	pop	{fp}		; (ldr fp, [sp], #4)
   1502c:	bx	lr

00015030 <print_all_distinct_dims@@Base>:
   15030:	push	{r4, fp, lr}
   15034:	add	fp, sp, #8
   15038:	sub	sp, sp, #28
   1503c:	str	r0, [fp, #-24]	; 0xffffffe8
   15040:	ldr	r4, [pc, #948]	; 153fc <print_all_distinct_dims@@Base+0x3cc>
   15044:	add	r4, pc, r4
   15048:	ldr	r3, [pc, #944]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   1504c:	ldr	r3, [r4, r3]
   15050:	ldr	r2, [r3]
   15054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15058:	cmp	r2, r3
   1505c:	bgt	15080 <print_all_distinct_dims@@Base+0x50>
   15060:	ldr	r3, [pc, #924]	; 15404 <print_all_distinct_dims@@Base+0x3d4>
   15064:	add	r3, pc, r3
   15068:	mov	r2, #50	; 0x32
   1506c:	ldr	r1, [pc, #916]	; 15408 <print_all_distinct_dims@@Base+0x3d8>
   15070:	add	r1, pc, r1
   15074:	ldr	r0, [pc, #912]	; 1540c <print_all_distinct_dims@@Base+0x3dc>
   15078:	add	r0, pc, r0
   1507c:	bl	12660 <__assert_fail@plt>
   15080:	ldr	r3, [pc, #888]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   15084:	ldr	r3, [r4, r3]
   15088:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1508c:	add	r2, r2, #18
   15090:	ldr	r3, [r3, r2, lsl #2]
   15094:	cmp	r3, #0
   15098:	beq	153f0 <print_all_distinct_dims@@Base+0x3c0>
   1509c:	ldr	r3, [pc, #860]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   150a0:	ldr	r2, [r4, r3]
   150a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150a8:	lsl	r3, r3, #2
   150ac:	add	r3, r2, r3
   150b0:	ldr	r3, [r3, #4]
   150b4:	add	r3, r3, #1
   150b8:	lsl	r3, r3, #2
   150bc:	mov	r0, r3
   150c0:	bl	123cc <malloc@plt>
   150c4:	mov	r3, r0
   150c8:	str	r3, [fp, #-20]	; 0xffffffec
   150cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   150d0:	cmp	r3, #0
   150d4:	bne	1511c <print_all_distinct_dims@@Base+0xec>
   150d8:	ldr	r3, [pc, #800]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   150dc:	ldr	r2, [r4, r3]
   150e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   150e4:	lsl	r3, r3, #2
   150e8:	add	r3, r2, r3
   150ec:	ldr	r3, [r3, #4]
   150f0:	add	r3, r3, #1
   150f4:	lsl	r2, r3, #2
   150f8:	mov	r3, #61	; 0x3d
   150fc:	str	r3, [sp]
   15100:	ldr	r3, [pc, #776]	; 15410 <print_all_distinct_dims@@Base+0x3e0>
   15104:	add	r3, pc, r3
   15108:	ldr	r1, [pc, #772]	; 15414 <print_all_distinct_dims@@Base+0x3e4>
   1510c:	add	r1, pc, r1
   15110:	mvn	r0, #0
   15114:	bl	1224c <coda_set_error@plt>
   15118:	bl	1bab8 <handle_coda_error@@Base>
   1511c:	ldr	r3, [pc, #732]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   15120:	ldr	r2, [r4, r3]
   15124:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15128:	lsl	r3, r3, #2
   1512c:	add	r3, r2, r3
   15130:	ldr	r3, [r3, #4]
   15134:	add	r3, r3, #1
   15138:	lsl	r3, r3, #2
   1513c:	mov	r2, r3
   15140:	mov	r1, #0
   15144:	ldr	r0, [fp, #-20]	; 0xffffffec
   15148:	bl	124b0 <memset@plt>
   1514c:	mov	r3, #0
   15150:	str	r3, [fp, #-16]
   15154:	b	151dc <print_all_distinct_dims@@Base+0x1ac>
   15158:	ldr	r3, [pc, #672]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   1515c:	ldr	r2, [r4, r3]
   15160:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15164:	add	r3, r3, #26
   15168:	lsl	r3, r3, #2
   1516c:	add	r3, r2, r3
   15170:	ldr	r2, [r3, #4]
   15174:	ldr	r3, [fp, #-16]
   15178:	lsl	r3, r3, #2
   1517c:	add	r3, r2, r3
   15180:	ldr	r3, [r3]
   15184:	cmp	r3, #0
   15188:	blt	151d0 <print_all_distinct_dims@@Base+0x1a0>
   1518c:	ldr	r3, [pc, #620]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   15190:	ldr	r2, [r4, r3]
   15194:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15198:	add	r3, r3, #26
   1519c:	lsl	r3, r3, #2
   151a0:	add	r3, r2, r3
   151a4:	ldr	r2, [r3, #4]
   151a8:	ldr	r3, [fp, #-16]
   151ac:	lsl	r3, r3, #2
   151b0:	add	r3, r2, r3
   151b4:	ldr	r3, [r3]
   151b8:	lsl	r3, r3, #2
   151bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   151c0:	add	r3, r2, r3
   151c4:	ldr	r2, [r3]
   151c8:	add	r2, r2, #1
   151cc:	str	r2, [r3]
   151d0:	ldr	r3, [fp, #-16]
   151d4:	add	r3, r3, #1
   151d8:	str	r3, [fp, #-16]
   151dc:	ldr	r3, [fp, #-16]
   151e0:	mov	r0, r3
   151e4:	asr	r1, r0, #31
   151e8:	ldr	r3, [pc, #528]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   151ec:	ldr	r2, [r4, r3]
   151f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   151f4:	add	r3, r3, #34	; 0x22
   151f8:	lsl	r3, r3, #2
   151fc:	add	r3, r2, r3
   15200:	ldr	r3, [r3, #4]
   15204:	sub	r3, r3, #1
   15208:	ldr	r2, [pc, #496]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   1520c:	ldr	r2, [r4, r2]
   15210:	add	r3, r3, #30
   15214:	lsl	r3, r3, #3
   15218:	add	r3, r2, r3
   1521c:	ldrd	r2, [r3]
   15220:	cmp	r0, r2
   15224:	sbcs	r3, r1, r3
   15228:	blt	15158 <print_all_distinct_dims@@Base+0x128>
   1522c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15230:	add	r3, r3, #1
   15234:	mov	r1, r3
   15238:	ldr	r3, [pc, #472]	; 15418 <print_all_distinct_dims@@Base+0x3e8>
   1523c:	add	r3, pc, r3
   15240:	mov	r0, r3
   15244:	bl	12228 <printf@plt>
   15248:	ldr	r3, [pc, #432]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   1524c:	ldr	r2, [r4, r3]
   15250:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15254:	add	r3, r3, #8
   15258:	lsl	r3, r3, #2
   1525c:	add	r3, r2, r3
   15260:	ldr	r3, [r3, #4]
   15264:	str	r3, [fp, #-16]
   15268:	b	152a8 <print_all_distinct_dims@@Base+0x278>
   1526c:	ldr	r3, [fp, #-16]
   15270:	lsl	r3, r3, #2
   15274:	ldr	r2, [fp, #-20]	; 0xffffffec
   15278:	add	r3, r2, r3
   1527c:	ldr	r3, [r3]
   15280:	cmp	r3, #0
   15284:	ble	1529c <print_all_distinct_dims@@Base+0x26c>
   15288:	ldr	r1, [fp, #-16]
   1528c:	ldr	r3, [pc, #392]	; 1541c <print_all_distinct_dims@@Base+0x3ec>
   15290:	add	r3, pc, r3
   15294:	mov	r0, r3
   15298:	bl	12228 <printf@plt>
   1529c:	ldr	r3, [fp, #-16]
   152a0:	add	r3, r3, #1
   152a4:	str	r3, [fp, #-16]
   152a8:	ldr	r3, [pc, #336]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   152ac:	ldr	r2, [r4, r3]
   152b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152b4:	lsl	r3, r3, #2
   152b8:	add	r3, r2, r3
   152bc:	ldr	r2, [r3, #4]
   152c0:	ldr	r3, [fp, #-16]
   152c4:	cmp	r2, r3
   152c8:	bgt	1526c <print_all_distinct_dims@@Base+0x23c>
   152cc:	ldr	r3, [pc, #300]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   152d0:	ldr	r2, [r4, r3]
   152d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   152d8:	lsl	r3, r3, #2
   152dc:	add	r3, r2, r3
   152e0:	ldr	r3, [r3, #4]
   152e4:	mov	r1, r3
   152e8:	ldr	r3, [pc, #304]	; 15420 <print_all_distinct_dims@@Base+0x3f0>
   152ec:	add	r3, pc, r3
   152f0:	mov	r0, r3
   152f4:	bl	12228 <printf@plt>
   152f8:	ldr	r3, [pc, #292]	; 15424 <print_all_distinct_dims@@Base+0x3f4>
   152fc:	add	r3, pc, r3
   15300:	mov	r0, r3
   15304:	bl	12228 <printf@plt>
   15308:	ldr	r3, [pc, #240]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   1530c:	ldr	r2, [r4, r3]
   15310:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15314:	add	r3, r3, #8
   15318:	lsl	r3, r3, #2
   1531c:	add	r3, r2, r3
   15320:	ldr	r3, [r3, #4]
   15324:	str	r3, [fp, #-16]
   15328:	b	1537c <print_all_distinct_dims@@Base+0x34c>
   1532c:	ldr	r3, [fp, #-16]
   15330:	lsl	r3, r3, #2
   15334:	ldr	r2, [fp, #-20]	; 0xffffffec
   15338:	add	r3, r2, r3
   1533c:	ldr	r3, [r3]
   15340:	cmp	r3, #0
   15344:	ble	15370 <print_all_distinct_dims@@Base+0x340>
   15348:	ldr	r3, [fp, #-16]
   1534c:	lsl	r3, r3, #2
   15350:	ldr	r2, [fp, #-20]	; 0xffffffec
   15354:	add	r3, r2, r3
   15358:	ldr	r3, [r3]
   1535c:	mov	r1, r3
   15360:	ldr	r3, [pc, #192]	; 15428 <print_all_distinct_dims@@Base+0x3f8>
   15364:	add	r3, pc, r3
   15368:	mov	r0, r3
   1536c:	bl	12228 <printf@plt>
   15370:	ldr	r3, [fp, #-16]
   15374:	add	r3, r3, #1
   15378:	str	r3, [fp, #-16]
   1537c:	ldr	r3, [pc, #124]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   15380:	ldr	r2, [r4, r3]
   15384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15388:	lsl	r3, r3, #2
   1538c:	add	r3, r2, r3
   15390:	ldr	r2, [r3, #4]
   15394:	ldr	r3, [fp, #-16]
   15398:	cmp	r2, r3
   1539c:	bgt	1532c <print_all_distinct_dims@@Base+0x2fc>
   153a0:	ldr	r3, [pc, #88]	; 15400 <print_all_distinct_dims@@Base+0x3d0>
   153a4:	ldr	r2, [r4, r3]
   153a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153ac:	lsl	r3, r3, #2
   153b0:	add	r3, r2, r3
   153b4:	ldr	r3, [r3, #4]
   153b8:	lsl	r3, r3, #2
   153bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   153c0:	add	r3, r2, r3
   153c4:	ldr	r3, [r3]
   153c8:	mov	r1, r3
   153cc:	ldr	r3, [pc, #88]	; 1542c <print_all_distinct_dims@@Base+0x3fc>
   153d0:	add	r3, pc, r3
   153d4:	mov	r0, r3
   153d8:	bl	12228 <printf@plt>
   153dc:	mov	r0, #10
   153e0:	bl	124bc <putchar@plt>
   153e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   153e8:	bl	12294 <free@plt>
   153ec:	b	153f4 <print_all_distinct_dims@@Base+0x3c4>
   153f0:	nop			; (mov r0, r0)
   153f4:	sub	sp, fp, #8
   153f8:	pop	{r4, fp, pc}
   153fc:			; <UNDEFINED> instruction: 0x0001bfb4
   15400:	andeq	r0, r0, r4, ror #3
   15404:	andeq	r9, r0, ip, ror r9
   15408:	andeq	r9, r0, ip, asr #15
   1540c:	andeq	r9, r0, r4, lsr #16
   15410:	andeq	r9, r0, r8, lsr r7
   15414:	andeq	r9, r0, ip, lsr #15
   15418:			; <UNDEFINED> instruction: 0x000096b4
   1541c:	andeq	r9, r0, ip, ror #12
   15420:	andeq	r9, r0, r4, lsl r6
   15424:	andeq	r9, r0, r8, lsl #12
   15428:	muleq	r0, r8, r5
   1542c:	andeq	r9, r0, r0, lsr r5
   15430:	push	{r4, fp, lr}
   15434:	add	fp, sp, #8
   15438:	sub	sp, sp, #124	; 0x7c
   1543c:	str	r0, [fp, #-120]	; 0xffffff88
   15440:	str	r1, [fp, #-124]	; 0xffffff84
   15444:	str	r2, [fp, #-128]	; 0xffffff80
   15448:	ldr	r4, [pc, #2436]	; 15dd4 <print_all_distinct_dims@@Base+0xda4>
   1544c:	add	r4, pc, r4
   15450:	sub	r3, fp, #60	; 0x3c
   15454:	mov	r1, r3
   15458:	ldr	r3, [pc, #2424]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   1545c:	ldr	r3, [r4, r3]
   15460:	add	r0, r3, #144	; 0x90
   15464:	bl	12324 <coda_cursor_get_type_class@plt>
   15468:	mov	r3, r0
   1546c:	cmp	r3, #0
   15470:	beq	15478 <print_all_distinct_dims@@Base+0x448>
   15474:	bl	1bab8 <handle_coda_error@@Base>
   15478:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1547c:	cmp	r3, #5
   15480:	addls	pc, pc, r3, lsl #2
   15484:	b	15d9c <print_all_distinct_dims@@Base+0xd6c>
   15488:	b	15980 <print_all_distinct_dims@@Base+0x950>
   1548c:	b	154a0 <print_all_distinct_dims@@Base+0x470>
   15490:	b	15d9c <print_all_distinct_dims@@Base+0xd6c>
   15494:	b	15d9c <print_all_distinct_dims@@Base+0xd6c>
   15498:	b	15b74 <print_all_distinct_dims@@Base+0xb44>
   1549c:	b	15b74 <print_all_distinct_dims@@Base+0xb44>
   154a0:	ldr	r2, [fp, #-124]	; 0xffffff84
   154a4:	mov	r3, r2
   154a8:	lsl	r3, r3, #2
   154ac:	add	r3, r3, r2
   154b0:	lsl	r3, r3, #4
   154b4:	add	r3, r3, #800	; 0x320
   154b8:	ldr	r2, [pc, #2328]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   154bc:	ldr	r2, [r4, r2]
   154c0:	add	r3, r3, r2
   154c4:	str	r3, [fp, #-36]	; 0xffffffdc
   154c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   154cc:	ldr	r3, [r3]
   154d0:	str	r3, [fp, #-40]	; 0xffffffd8
   154d4:	ldr	r3, [pc, #2300]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   154d8:	ldr	r3, [r4, r3]
   154dc:	ldr	r2, [r3, #3360]	; 0xd20
   154e0:	ldr	r3, [fp, #-124]	; 0xffffff84
   154e4:	cmp	r2, r3
   154e8:	bne	15760 <print_all_distinct_dims@@Base+0x730>
   154ec:	sub	r2, fp, #112	; 0x70
   154f0:	sub	r3, fp, #64	; 0x40
   154f4:	mov	r1, r3
   154f8:	ldr	r3, [pc, #2264]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   154fc:	ldr	r3, [r4, r3]
   15500:	add	r0, r3, #144	; 0x90
   15504:	bl	12528 <coda_cursor_get_array_dim@plt>
   15508:	mov	r3, r0
   1550c:	cmp	r3, #0
   15510:	beq	15518 <print_all_distinct_dims@@Base+0x4e8>
   15514:	bl	1bab8 <handle_coda_error@@Base>
   15518:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1551c:	ldr	r2, [r3, #4]
   15520:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15524:	cmp	r2, r3
   15528:	beq	1554c <print_all_distinct_dims@@Base+0x51c>
   1552c:	ldr	r3, [pc, #2216]	; 15ddc <print_all_distinct_dims@@Base+0xdac>
   15530:	add	r3, pc, r3
   15534:	mov	r2, #125	; 0x7d
   15538:	ldr	r1, [pc, #2208]	; 15de0 <print_all_distinct_dims@@Base+0xdb0>
   1553c:	add	r1, pc, r1
   15540:	ldr	r0, [pc, #2204]	; 15de4 <print_all_distinct_dims@@Base+0xdb4>
   15544:	add	r0, pc, r0
   15548:	bl	12660 <__assert_fail@plt>
   1554c:	mov	r3, #0
   15550:	str	r3, [fp, #-16]
   15554:	b	15748 <print_all_distinct_dims@@Base+0x718>
   15558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1555c:	ldr	r2, [fp, #-16]
   15560:	add	r2, r2, #2
   15564:	ldr	r3, [r3, r2, lsl #2]
   15568:	cmn	r3, #1
   1556c:	bne	1573c <print_all_distinct_dims@@Base+0x70c>
   15570:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15574:	ldr	r3, [fp, #-16]
   15578:	add	r3, r2, r3
   1557c:	ldr	r2, [pc, #2148]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15580:	ldr	r2, [r4, r2]
   15584:	add	r3, r3, #26
   15588:	lsl	r3, r3, #2
   1558c:	add	r3, r2, r3
   15590:	ldr	r2, [r3, #4]
   15594:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15598:	ldr	r3, [r3, #44]	; 0x2c
   1559c:	lsl	r3, r3, #2
   155a0:	add	r2, r2, r3
   155a4:	ldr	r3, [fp, #-16]
   155a8:	lsl	r3, r3, #2
   155ac:	sub	r1, fp, #12
   155b0:	add	r3, r1, r3
   155b4:	ldr	r3, [r3, #-100]	; 0xffffff9c
   155b8:	str	r3, [r2]
   155bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   155c0:	ldr	r3, [fp, #-16]
   155c4:	add	r3, r2, r3
   155c8:	ldr	r2, [pc, #2072]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   155cc:	ldr	r2, [r4, r2]
   155d0:	lsl	r3, r3, #2
   155d4:	add	r3, r2, r3
   155d8:	ldr	r3, [r3, #4]
   155dc:	cmn	r3, #1
   155e0:	bne	15654 <print_all_distinct_dims@@Base+0x624>
   155e4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   155e8:	ldr	r3, [fp, #-16]
   155ec:	add	r0, r2, r3
   155f0:	ldr	r3, [fp, #-16]
   155f4:	lsl	r3, r3, #2
   155f8:	sub	r2, fp, #12
   155fc:	add	r3, r2, r3
   15600:	ldr	r2, [r3, #-100]	; 0xffffff9c
   15604:	ldr	r3, [pc, #2012]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15608:	ldr	r1, [r4, r3]
   1560c:	lsl	r3, r0, #2
   15610:	add	r3, r1, r3
   15614:	str	r2, [r3, #4]
   15618:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1561c:	ldr	r3, [fp, #-16]
   15620:	add	r0, r2, r3
   15624:	ldr	r3, [fp, #-16]
   15628:	lsl	r3, r3, #2
   1562c:	sub	r2, fp, #12
   15630:	add	r3, r2, r3
   15634:	ldr	r2, [r3, #-100]	; 0xffffff9c
   15638:	ldr	r3, [pc, #1960]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   1563c:	ldr	r1, [r4, r3]
   15640:	add	r3, r0, #8
   15644:	lsl	r3, r3, #2
   15648:	add	r3, r1, r3
   1564c:	str	r2, [r3, #4]
   15650:	b	1573c <print_all_distinct_dims@@Base+0x70c>
   15654:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15658:	ldr	r3, [fp, #-16]
   1565c:	add	r3, r2, r3
   15660:	ldr	r2, [pc, #1920]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15664:	ldr	r2, [r4, r2]
   15668:	lsl	r3, r3, #2
   1566c:	add	r3, r2, r3
   15670:	ldr	r2, [r3, #4]
   15674:	ldr	r3, [fp, #-16]
   15678:	lsl	r3, r3, #2
   1567c:	sub	r1, fp, #12
   15680:	add	r3, r1, r3
   15684:	ldr	r3, [r3, #-100]	; 0xffffff9c
   15688:	cmp	r2, r3
   1568c:	bge	156c4 <print_all_distinct_dims@@Base+0x694>
   15690:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15694:	ldr	r3, [fp, #-16]
   15698:	add	r0, r2, r3
   1569c:	ldr	r3, [fp, #-16]
   156a0:	lsl	r3, r3, #2
   156a4:	sub	r2, fp, #12
   156a8:	add	r3, r2, r3
   156ac:	ldr	r2, [r3, #-100]	; 0xffffff9c
   156b0:	ldr	r3, [pc, #1840]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   156b4:	ldr	r1, [r4, r3]
   156b8:	lsl	r3, r0, #2
   156bc:	add	r3, r1, r3
   156c0:	str	r2, [r3, #4]
   156c4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   156c8:	ldr	r3, [fp, #-16]
   156cc:	add	r3, r2, r3
   156d0:	ldr	r2, [pc, #1808]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   156d4:	ldr	r2, [r4, r2]
   156d8:	add	r3, r3, #8
   156dc:	lsl	r3, r3, #2
   156e0:	add	r3, r2, r3
   156e4:	ldr	r2, [r3, #4]
   156e8:	ldr	r3, [fp, #-16]
   156ec:	lsl	r3, r3, #2
   156f0:	sub	r1, fp, #12
   156f4:	add	r3, r1, r3
   156f8:	ldr	r3, [r3, #-100]	; 0xffffff9c
   156fc:	cmp	r2, r3
   15700:	ble	1573c <print_all_distinct_dims@@Base+0x70c>
   15704:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15708:	ldr	r3, [fp, #-16]
   1570c:	add	r0, r2, r3
   15710:	ldr	r3, [fp, #-16]
   15714:	lsl	r3, r3, #2
   15718:	sub	r2, fp, #12
   1571c:	add	r3, r2, r3
   15720:	ldr	r2, [r3, #-100]	; 0xffffff9c
   15724:	ldr	r3, [pc, #1724]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15728:	ldr	r1, [r4, r3]
   1572c:	add	r3, r0, #8
   15730:	lsl	r3, r3, #2
   15734:	add	r3, r1, r3
   15738:	str	r2, [r3, #4]
   1573c:	ldr	r3, [fp, #-16]
   15740:	add	r3, r3, #1
   15744:	str	r3, [fp, #-16]
   15748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1574c:	ldr	r2, [r3, #4]
   15750:	ldr	r3, [fp, #-16]
   15754:	cmp	r2, r3
   15758:	bgt	15558 <print_all_distinct_dims@@Base+0x528>
   1575c:	b	15dbc <print_all_distinct_dims@@Base+0xd8c>
   15760:	ldr	r3, [fp, #-124]	; 0xffffff84
   15764:	cmp	r3, #0
   15768:	bne	15778 <print_all_distinct_dims@@Base+0x748>
   1576c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15770:	mov	r2, #0
   15774:	str	r2, [r3, #44]	; 0x2c
   15778:	ldr	r3, [fp, #-124]	; 0xffffff84
   1577c:	add	r2, r3, #1
   15780:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15784:	ldr	r3, [r3, #44]	; 0x2c
   15788:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1578c:	ldr	r1, [r1, #40]	; 0x28
   15790:	mul	r1, r1, r3
   15794:	ldr	r3, [pc, #1596]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15798:	ldr	r0, [r4, r3]
   1579c:	mov	r3, r2
   157a0:	lsl	r3, r3, #2
   157a4:	add	r3, r3, r2
   157a8:	lsl	r3, r3, #4
   157ac:	add	r3, r0, r3
   157b0:	add	r3, r3, #844	; 0x34c
   157b4:	str	r1, [r3]
   157b8:	mov	r3, #1
   157bc:	str	r3, [fp, #-20]	; 0xffffffec
   157c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   157c4:	str	r3, [fp, #-24]	; 0xffffffe8
   157c8:	b	15858 <print_all_distinct_dims@@Base+0x828>
   157cc:	ldr	r3, [pc, #1556]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   157d0:	ldr	r3, [r4, r3]
   157d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   157d8:	add	r2, r2, #18
   157dc:	ldr	r3, [r3, r2, lsl #2]
   157e0:	cmp	r3, #0
   157e4:	beq	15828 <print_all_distinct_dims@@Base+0x7f8>
   157e8:	ldr	r3, [pc, #1528]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   157ec:	ldr	r2, [r4, r3]
   157f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   157f4:	add	r3, r3, #26
   157f8:	lsl	r3, r3, #2
   157fc:	add	r3, r2, r3
   15800:	ldr	r2, [r3, #4]
   15804:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15808:	ldr	r3, [r3, #44]	; 0x2c
   1580c:	lsl	r3, r3, #2
   15810:	add	r3, r2, r3
   15814:	ldr	r2, [r3]
   15818:	ldr	r3, [fp, #-20]	; 0xffffffec
   1581c:	mul	r3, r2, r3
   15820:	str	r3, [fp, #-20]	; 0xffffffec
   15824:	b	1584c <print_all_distinct_dims@@Base+0x81c>
   15828:	ldr	r3, [pc, #1464]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   1582c:	ldr	r2, [r4, r3]
   15830:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15834:	lsl	r3, r3, #2
   15838:	add	r3, r2, r3
   1583c:	ldr	r2, [r3, #4]
   15840:	ldr	r3, [fp, #-20]	; 0xffffffec
   15844:	mul	r3, r2, r3
   15848:	str	r3, [fp, #-20]	; 0xffffffec
   1584c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15850:	add	r3, r3, #1
   15854:	str	r3, [fp, #-24]	; 0xffffffe8
   15858:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1585c:	ldr	r2, [r3, #4]
   15860:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15864:	add	r2, r2, r3
   15868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1586c:	cmp	r2, r3
   15870:	bgt	157cc <print_all_distinct_dims@@Base+0x79c>
   15874:	ldr	r3, [fp, #-20]	; 0xffffffec
   15878:	cmp	r3, #0
   1587c:	ble	15dbc <print_all_distinct_dims@@Base+0xd8c>
   15880:	ldr	r3, [pc, #1360]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15884:	ldr	r3, [r4, r3]
   15888:	add	r0, r3, #144	; 0x90
   1588c:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   15890:	mov	r3, r0
   15894:	cmp	r3, #0
   15898:	beq	158a0 <print_all_distinct_dims@@Base+0x870>
   1589c:	bl	1bab8 <handle_coda_error@@Base>
   158a0:	mov	r3, #0
   158a4:	str	r3, [fp, #-28]	; 0xffffffe4
   158a8:	b	1595c <print_all_distinct_dims@@Base+0x92c>
   158ac:	ldr	r3, [fp, #-120]	; 0xffffff88
   158b0:	add	r0, r3, #1
   158b4:	ldr	r3, [fp, #-124]	; 0xffffff84
   158b8:	add	r3, r3, #1
   158bc:	ldr	r2, [fp, #-128]	; 0xffffff80
   158c0:	mov	r1, r3
   158c4:	bl	15430 <print_all_distinct_dims@@Base+0x400>
   158c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   158cc:	sub	r2, r3, #1
   158d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   158d4:	cmp	r2, r3
   158d8:	ble	15950 <print_all_distinct_dims@@Base+0x920>
   158dc:	ldr	r3, [pc, #1268]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   158e0:	ldr	r3, [r4, r3]
   158e4:	add	r0, r3, #144	; 0x90
   158e8:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   158ec:	mov	r3, r0
   158f0:	cmp	r3, #0
   158f4:	beq	158fc <print_all_distinct_dims@@Base+0x8cc>
   158f8:	bl	1bab8 <handle_coda_error@@Base>
   158fc:	ldr	r3, [fp, #-124]	; 0xffffff84
   15900:	add	r2, r3, #1
   15904:	ldr	r3, [pc, #1228]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15908:	ldr	r1, [r4, r3]
   1590c:	mov	r3, r2
   15910:	lsl	r3, r3, #2
   15914:	add	r3, r3, r2
   15918:	lsl	r3, r3, #4
   1591c:	add	r3, r1, r3
   15920:	add	r3, r3, #844	; 0x34c
   15924:	ldr	r3, [r3]
   15928:	add	r1, r3, #1
   1592c:	ldr	r3, [pc, #1188]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15930:	ldr	r0, [r4, r3]
   15934:	mov	r3, r2
   15938:	lsl	r3, r3, #2
   1593c:	add	r3, r3, r2
   15940:	lsl	r3, r3, #4
   15944:	add	r3, r0, r3
   15948:	add	r3, r3, #844	; 0x34c
   1594c:	str	r1, [r3]
   15950:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15954:	add	r3, r3, #1
   15958:	str	r3, [fp, #-28]	; 0xffffffe4
   1595c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15960:	ldr	r3, [fp, #-20]	; 0xffffffec
   15964:	cmp	r2, r3
   15968:	blt	158ac <print_all_distinct_dims@@Base+0x87c>
   1596c:	ldr	r3, [pc, #1124]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15970:	ldr	r3, [r4, r3]
   15974:	add	r0, r3, #144	; 0x90
   15978:	bl	123fc <coda_cursor_goto_parent@plt>
   1597c:	b	15dbc <print_all_distinct_dims@@Base+0xd8c>
   15980:	ldr	r3, [pc, #1104]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15984:	ldr	r2, [r4, r3]
   15988:	ldr	r3, [fp, #-128]	; 0xffffff80
   1598c:	add	r3, r3, #872	; 0x368
   15990:	lsl	r3, r3, #2
   15994:	add	r3, r2, r3
   15998:	ldr	r3, [r3, #4]
   1599c:	sub	r2, fp, #68	; 0x44
   159a0:	mov	r1, r3
   159a4:	ldr	r3, [pc, #1068]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   159a8:	ldr	r3, [r4, r3]
   159ac:	add	r0, r3, #144	; 0x90
   159b0:	bl	12234 <coda_cursor_get_record_field_available_status@plt>
   159b4:	mov	r3, r0
   159b8:	cmp	r3, #0
   159bc:	beq	159c4 <print_all_distinct_dims@@Base+0x994>
   159c0:	bl	1bab8 <handle_coda_error@@Base>
   159c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   159c8:	cmp	r3, #0
   159cc:	beq	15a40 <print_all_distinct_dims@@Base+0xa10>
   159d0:	ldr	r3, [pc, #1024]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   159d4:	ldr	r2, [r4, r3]
   159d8:	ldr	r3, [fp, #-128]	; 0xffffff80
   159dc:	add	r3, r3, #872	; 0x368
   159e0:	lsl	r3, r3, #2
   159e4:	add	r3, r2, r3
   159e8:	ldr	r3, [r3, #4]
   159ec:	mov	r1, r3
   159f0:	ldr	r3, [pc, #992]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   159f4:	ldr	r3, [r4, r3]
   159f8:	add	r0, r3, #144	; 0x90
   159fc:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   15a00:	mov	r3, r0
   15a04:	cmp	r3, #0
   15a08:	beq	15a10 <print_all_distinct_dims@@Base+0x9e0>
   15a0c:	bl	1bab8 <handle_coda_error@@Base>
   15a10:	ldr	r3, [fp, #-120]	; 0xffffff88
   15a14:	add	r0, r3, #1
   15a18:	ldr	r3, [fp, #-128]	; 0xffffff80
   15a1c:	add	r3, r3, #1
   15a20:	mov	r2, r3
   15a24:	ldr	r1, [fp, #-124]	; 0xffffff84
   15a28:	bl	15430 <print_all_distinct_dims@@Base+0x400>
   15a2c:	ldr	r3, [pc, #932]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15a30:	ldr	r3, [r4, r3]
   15a34:	add	r0, r3, #144	; 0x90
   15a38:	bl	123fc <coda_cursor_goto_parent@plt>
   15a3c:	b	15dc8 <print_all_distinct_dims@@Base+0xd98>
   15a40:	ldr	r3, [pc, #912]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15a44:	ldr	r3, [r4, r3]
   15a48:	ldr	r2, [r3, #3360]	; 0xd20
   15a4c:	mov	r3, r2
   15a50:	lsl	r3, r3, #2
   15a54:	add	r3, r3, r2
   15a58:	lsl	r3, r3, #4
   15a5c:	add	r3, r3, #800	; 0x320
   15a60:	ldr	r2, [pc, #880]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15a64:	ldr	r2, [r4, r2]
   15a68:	add	r3, r3, r2
   15a6c:	str	r3, [fp, #-44]	; 0xffffffd4
   15a70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a74:	ldr	r3, [r3]
   15a78:	str	r3, [fp, #-48]	; 0xffffffd0
   15a7c:	mov	r3, #0
   15a80:	str	r3, [fp, #-32]	; 0xffffffe0
   15a84:	b	15b5c <print_all_distinct_dims@@Base+0xb2c>
   15a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15a90:	add	r2, r2, #2
   15a94:	ldr	r3, [r3, r2, lsl #2]
   15a98:	cmn	r3, #1
   15a9c:	bne	15b50 <print_all_distinct_dims@@Base+0xb20>
   15aa0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15aa4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15aa8:	add	r3, r2, r3
   15aac:	ldr	r2, [pc, #820]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15ab0:	ldr	r2, [r4, r2]
   15ab4:	add	r3, r3, #26
   15ab8:	lsl	r3, r3, #2
   15abc:	add	r3, r2, r3
   15ac0:	ldr	r2, [r3, #4]
   15ac4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15ac8:	ldr	r3, [r3, #44]	; 0x2c
   15acc:	lsl	r3, r3, #2
   15ad0:	add	r3, r2, r3
   15ad4:	mov	r2, #0
   15ad8:	str	r2, [r3]
   15adc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15ae0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15ae4:	add	r3, r2, r3
   15ae8:	ldr	r2, [pc, #760]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15aec:	ldr	r2, [r4, r2]
   15af0:	lsl	r3, r3, #2
   15af4:	add	r3, r2, r3
   15af8:	ldr	r3, [r3, #4]
   15afc:	cmn	r3, #1
   15b00:	bne	15b28 <print_all_distinct_dims@@Base+0xaf8>
   15b04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b0c:	add	r3, r2, r3
   15b10:	ldr	r2, [pc, #720]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15b14:	ldr	r2, [r4, r2]
   15b18:	lsl	r3, r3, #2
   15b1c:	add	r3, r2, r3
   15b20:	mov	r2, #0
   15b24:	str	r2, [r3, #4]
   15b28:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15b2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b30:	add	r3, r2, r3
   15b34:	ldr	r2, [pc, #684]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15b38:	ldr	r2, [r4, r2]
   15b3c:	add	r3, r3, #8
   15b40:	lsl	r3, r3, #2
   15b44:	add	r3, r2, r3
   15b48:	mov	r2, #0
   15b4c:	str	r2, [r3, #4]
   15b50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b54:	add	r3, r3, #1
   15b58:	str	r3, [fp, #-32]	; 0xffffffe0
   15b5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15b60:	ldr	r2, [r3, #4]
   15b64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b68:	cmp	r2, r3
   15b6c:	bgt	15a88 <print_all_distinct_dims@@Base+0xa58>
   15b70:	b	15dc8 <print_all_distinct_dims@@Base+0xd98>
   15b74:	ldr	r3, [pc, #604]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15b78:	ldr	r3, [r4, r3]
   15b7c:	ldr	r2, [r3, #3360]	; 0xd20
   15b80:	ldr	r3, [fp, #-124]	; 0xffffff84
   15b84:	cmp	r2, r3
   15b88:	beq	15bac <print_all_distinct_dims@@Base+0xb7c>
   15b8c:	ldr	r3, [pc, #600]	; 15dec <print_all_distinct_dims@@Base+0xdbc>
   15b90:	add	r3, pc, r3
   15b94:	mov	r2, #252	; 0xfc
   15b98:	ldr	r1, [pc, #592]	; 15df0 <print_all_distinct_dims@@Base+0xdc0>
   15b9c:	add	r1, pc, r1
   15ba0:	ldr	r0, [pc, #588]	; 15df4 <print_all_distinct_dims@@Base+0xdc4>
   15ba4:	add	r0, pc, r0
   15ba8:	bl	12660 <__assert_fail@plt>
   15bac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15bb0:	cmp	r3, #4
   15bb4:	bne	15bf4 <print_all_distinct_dims@@Base+0xbc4>
   15bb8:	sub	r3, fp, #80	; 0x50
   15bbc:	mov	r1, r3
   15bc0:	ldr	r3, [pc, #528]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15bc4:	ldr	r3, [r4, r3]
   15bc8:	add	r0, r3, #144	; 0x90
   15bcc:	bl	1242c <coda_cursor_get_string_length@plt>
   15bd0:	mov	r3, r0
   15bd4:	cmp	r3, #0
   15bd8:	beq	15be0 <print_all_distinct_dims@@Base+0xbb0>
   15bdc:	bl	1bab8 <handle_coda_error@@Base>
   15be0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15be4:	mov	r2, r3
   15be8:	asr	r3, r2, #31
   15bec:	strd	r2, [fp, #-76]	; 0xffffffb4
   15bf0:	b	15c1c <print_all_distinct_dims@@Base+0xbec>
   15bf4:	sub	r3, fp, #76	; 0x4c
   15bf8:	mov	r1, r3
   15bfc:	ldr	r3, [pc, #468]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15c00:	ldr	r3, [r4, r3]
   15c04:	add	r0, r3, #144	; 0x90
   15c08:	bl	121c8 <coda_cursor_get_byte_size@plt>
   15c0c:	mov	r3, r0
   15c10:	cmp	r3, #0
   15c14:	beq	15c1c <print_all_distinct_dims@@Base+0xbec>
   15c18:	bl	1bab8 <handle_coda_error@@Base>
   15c1c:	ldr	r2, [fp, #-124]	; 0xffffff84
   15c20:	mov	r3, r2
   15c24:	lsl	r3, r3, #2
   15c28:	add	r3, r3, r2
   15c2c:	lsl	r3, r3, #4
   15c30:	add	r3, r3, #800	; 0x320
   15c34:	ldr	r2, [pc, #412]	; 15dd8 <print_all_distinct_dims@@Base+0xda8>
   15c38:	ldr	r2, [r4, r2]
   15c3c:	add	r3, r3, r2
   15c40:	str	r3, [fp, #-52]	; 0xffffffcc
   15c44:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c48:	ldr	r3, [r3]
   15c4c:	str	r3, [fp, #-56]	; 0xffffffc8
   15c50:	ldr	r3, [pc, #400]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15c54:	ldr	r2, [r4, r3]
   15c58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c5c:	add	r3, r3, #26
   15c60:	lsl	r3, r3, #2
   15c64:	add	r3, r2, r3
   15c68:	ldr	r2, [r3, #4]
   15c6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15c70:	ldr	r3, [r3, #44]	; 0x2c
   15c74:	lsl	r3, r3, #2
   15c78:	add	r1, r2, r3
   15c7c:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15c80:	mov	r3, r2
   15c84:	str	r3, [r1]
   15c88:	ldr	r3, [pc, #344]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15c8c:	ldr	r2, [r4, r3]
   15c90:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15c94:	lsl	r3, r3, #2
   15c98:	add	r3, r2, r3
   15c9c:	ldr	r3, [r3, #4]
   15ca0:	cmn	r3, #1
   15ca4:	bne	15cf0 <print_all_distinct_dims@@Base+0xcc0>
   15ca8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15cac:	mov	r1, r2
   15cb0:	ldr	r3, [pc, #304]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15cb4:	ldr	r2, [r4, r3]
   15cb8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15cbc:	lsl	r3, r3, #2
   15cc0:	add	r3, r2, r3
   15cc4:	str	r1, [r3, #4]
   15cc8:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15ccc:	mov	r1, r2
   15cd0:	ldr	r3, [pc, #272]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15cd4:	ldr	r2, [r4, r3]
   15cd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15cdc:	add	r3, r3, #8
   15ce0:	lsl	r3, r3, #2
   15ce4:	add	r3, r2, r3
   15ce8:	str	r1, [r3, #4]
   15cec:	b	15dc4 <print_all_distinct_dims@@Base+0xd94>
   15cf0:	ldr	r3, [pc, #240]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15cf4:	ldr	r2, [r4, r3]
   15cf8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15cfc:	lsl	r3, r3, #2
   15d00:	add	r3, r2, r3
   15d04:	ldr	r3, [r3, #4]
   15d08:	mov	r0, r3
   15d0c:	asr	r1, r0, #31
   15d10:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15d14:	cmp	r0, r2
   15d18:	sbcs	r3, r1, r3
   15d1c:	bge	15d40 <print_all_distinct_dims@@Base+0xd10>
   15d20:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15d24:	mov	r1, r2
   15d28:	ldr	r3, [pc, #184]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15d2c:	ldr	r2, [r4, r3]
   15d30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d34:	lsl	r3, r3, #2
   15d38:	add	r3, r2, r3
   15d3c:	str	r1, [r3, #4]
   15d40:	ldr	r3, [pc, #160]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15d44:	ldr	r2, [r4, r3]
   15d48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d4c:	add	r3, r3, #8
   15d50:	lsl	r3, r3, #2
   15d54:	add	r3, r2, r3
   15d58:	ldr	r3, [r3, #4]
   15d5c:	mov	r2, r3
   15d60:	asr	r3, r2, #31
   15d64:	ldrd	r0, [fp, #-76]	; 0xffffffb4
   15d68:	cmp	r0, r2
   15d6c:	sbcs	r3, r1, r3
   15d70:	bge	15dc4 <print_all_distinct_dims@@Base+0xd94>
   15d74:	ldrd	r2, [fp, #-76]	; 0xffffffb4
   15d78:	mov	r1, r2
   15d7c:	ldr	r3, [pc, #100]	; 15de8 <print_all_distinct_dims@@Base+0xdb8>
   15d80:	ldr	r2, [r4, r3]
   15d84:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15d88:	add	r3, r3, #8
   15d8c:	lsl	r3, r3, #2
   15d90:	add	r3, r2, r3
   15d94:	str	r1, [r3, #4]
   15d98:	b	15dc4 <print_all_distinct_dims@@Base+0xd94>
   15d9c:	ldr	r3, [pc, #84]	; 15df8 <print_all_distinct_dims@@Base+0xdc8>
   15da0:	add	r3, pc, r3
   15da4:	ldr	r2, [pc, #80]	; 15dfc <print_all_distinct_dims@@Base+0xdcc>
   15da8:	ldr	r1, [pc, #80]	; 15e00 <print_all_distinct_dims@@Base+0xdd0>
   15dac:	add	r1, pc, r1
   15db0:	ldr	r0, [pc, #76]	; 15e04 <print_all_distinct_dims@@Base+0xdd4>
   15db4:	add	r0, pc, r0
   15db8:	bl	12660 <__assert_fail@plt>
   15dbc:	nop			; (mov r0, r0)
   15dc0:	b	15dc8 <print_all_distinct_dims@@Base+0xd98>
   15dc4:	nop			; (mov r0, r0)
   15dc8:	nop			; (mov r0, r0)
   15dcc:	sub	sp, fp, #8
   15dd0:	pop	{r4, fp, pc}
   15dd4:	andeq	fp, r1, ip, lsr #23
   15dd8:			; <UNDEFINED> instruction: 0x000001b4
   15ddc:	andeq	r9, r0, r8, asr #9
   15de0:	andeq	r9, r0, r0, lsl #6
   15de4:	andeq	r9, r0, r8, asr #7
   15de8:	andeq	r0, r0, r4, ror #3
   15dec:	andeq	r8, r0, r8, ror #28
   15df0:	andeq	r8, r0, r0, lsr #25
   15df4:	andeq	r8, r0, ip, lsl #27
   15df8:	andeq	r8, r0, r8, asr ip
   15dfc:	andeq	r0, r0, r6, lsr #2
   15e00:	muleq	r0, r0, sl
   15e04:	andeq	r8, r0, r4, lsr #23

00015e08 <dim_enter_array@@Base>:
   15e08:	push	{r4, r5, r6, r7, fp, lr}
   15e0c:	add	fp, sp, #20
   15e10:	sub	sp, sp, #112	; 0x70
   15e14:	ldr	r4, [pc, #3888]	; 16d4c <dim_enter_array@@Base+0xf44>
   15e18:	add	r4, pc, r4
   15e1c:	ldr	r3, [pc, #3884]	; 16d50 <dim_enter_array@@Base+0xf48>
   15e20:	ldr	r3, [r4, r3]
   15e24:	ldr	r2, [r3, #3360]	; 0xd20
   15e28:	mov	r3, r2
   15e2c:	lsl	r3, r3, #2
   15e30:	add	r3, r3, r2
   15e34:	lsl	r3, r3, #4
   15e38:	add	r3, r3, #800	; 0x320
   15e3c:	ldr	r2, [pc, #3852]	; 16d50 <dim_enter_array@@Base+0xf48>
   15e40:	ldr	r2, [r4, r2]
   15e44:	add	r3, r3, r2
   15e48:	str	r3, [fp, #-64]	; 0xffffffc0
   15e4c:	ldr	r3, [pc, #3836]	; 16d50 <dim_enter_array@@Base+0xf48>
   15e50:	ldr	r3, [r4, r3]
   15e54:	ldr	r2, [r3, #136]	; 0x88
   15e58:	ldr	r3, [pc, #3824]	; 16d50 <dim_enter_array@@Base+0xf48>
   15e5c:	ldr	r3, [r4, r3]
   15e60:	add	r2, r2, #2
   15e64:	ldr	r3, [r3, r2, lsl #2]
   15e68:	sub	r2, fp, #72	; 0x48
   15e6c:	mov	r1, r2
   15e70:	mov	r0, r3
   15e74:	bl	1266c <coda_type_get_class@plt>
   15e78:	mov	r3, r0
   15e7c:	cmp	r3, #0
   15e80:	beq	15e88 <dim_enter_array@@Base+0x80>
   15e84:	bl	1bab8 <handle_coda_error@@Base>
   15e88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15e8c:	sub	r3, r3, #1
   15e90:	cmp	r3, #5
   15e94:	addls	pc, pc, r3, lsl #2
   15e98:	b	160e4 <dim_enter_array@@Base+0x2dc>
   15e9c:	b	15eb4 <dim_enter_array@@Base+0xac>
   15ea0:	b	160e4 <dim_enter_array@@Base+0x2dc>
   15ea4:	b	160e4 <dim_enter_array@@Base+0x2dc>
   15ea8:	b	15fd4 <dim_enter_array@@Base+0x1cc>
   15eac:	b	1602c <dim_enter_array@@Base+0x224>
   15eb0:	b	15f4c <dim_enter_array@@Base+0x144>
   15eb4:	ldr	r3, [pc, #3732]	; 16d50 <dim_enter_array@@Base+0xf48>
   15eb8:	ldr	r3, [r4, r3]
   15ebc:	ldr	r2, [r3, #136]	; 0x88
   15ec0:	ldr	r3, [pc, #3720]	; 16d50 <dim_enter_array@@Base+0xf48>
   15ec4:	ldr	r3, [r4, r3]
   15ec8:	add	r2, r2, #2
   15ecc:	ldr	r3, [r3, r2, lsl #2]
   15ed0:	sub	r2, fp, #124	; 0x7c
   15ed4:	sub	r1, fp, #76	; 0x4c
   15ed8:	mov	r0, r3
   15edc:	bl	125a0 <coda_type_get_array_dim@plt>
   15ee0:	mov	r3, r0
   15ee4:	cmp	r3, #0
   15ee8:	beq	15ef0 <dim_enter_array@@Base+0xe8>
   15eec:	bl	1bab8 <handle_coda_error@@Base>
   15ef0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15ef4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15ef8:	str	r2, [r3, #4]
   15efc:	mov	r3, #0
   15f00:	str	r3, [fp, #-48]	; 0xffffffd0
   15f04:	b	15f38 <dim_enter_array@@Base+0x130>
   15f08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f0c:	lsl	r3, r3, #2
   15f10:	sub	r2, fp, #20
   15f14:	add	r3, r2, r3
   15f18:	ldr	r1, [r3, #-104]	; 0xffffff98
   15f1c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15f20:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15f24:	add	r2, r2, #2
   15f28:	str	r1, [r3, r2, lsl #2]
   15f2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15f30:	add	r3, r3, #1
   15f34:	str	r3, [fp, #-48]	; 0xffffffd0
   15f38:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15f3c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15f40:	cmp	r2, r3
   15f44:	blt	15f08 <dim_enter_array@@Base+0x100>
   15f48:	b	16104 <dim_enter_array@@Base+0x2fc>
   15f4c:	ldr	r3, [pc, #3580]	; 16d50 <dim_enter_array@@Base+0xf48>
   15f50:	ldr	r3, [r4, r3]
   15f54:	ldr	r2, [r3, #136]	; 0x88
   15f58:	ldr	r3, [pc, #3568]	; 16d50 <dim_enter_array@@Base+0xf48>
   15f5c:	ldr	r3, [r4, r3]
   15f60:	add	r2, r2, #2
   15f64:	ldr	r3, [r3, r2, lsl #2]
   15f68:	sub	r2, fp, #80	; 0x50
   15f6c:	mov	r1, r2
   15f70:	mov	r0, r3
   15f74:	bl	124d4 <coda_type_get_special_type@plt>
   15f78:	mov	r3, r0
   15f7c:	cmp	r3, #0
   15f80:	beq	15f88 <dim_enter_array@@Base+0x180>
   15f84:	bl	1bab8 <handle_coda_error@@Base>
   15f88:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15f8c:	cmp	r3, #3
   15f90:	bne	15fb4 <dim_enter_array@@Base+0x1ac>
   15f94:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15f98:	mov	r2, #1
   15f9c:	str	r2, [r3, #4]
   15fa0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15fa4:	mov	r2, #2
   15fa8:	str	r2, [r3, #8]
   15fac:	nop			; (mov r0, r0)
   15fb0:	b	16104 <dim_enter_array@@Base+0x2fc>
   15fb4:	ldr	r3, [pc, #3480]	; 16d54 <dim_enter_array@@Base+0xf4c>
   15fb8:	add	r3, pc, r3
   15fbc:	ldr	r2, [pc, #3476]	; 16d58 <dim_enter_array@@Base+0xf50>
   15fc0:	ldr	r1, [pc, #3476]	; 16d5c <dim_enter_array@@Base+0xf54>
   15fc4:	add	r1, pc, r1
   15fc8:	ldr	r0, [pc, #3472]	; 16d60 <dim_enter_array@@Base+0xf58>
   15fcc:	add	r0, pc, r0
   15fd0:	bl	12660 <__assert_fail@plt>
   15fd4:	ldr	r3, [pc, #3444]	; 16d50 <dim_enter_array@@Base+0xf48>
   15fd8:	ldr	r3, [r4, r3]
   15fdc:	ldr	r2, [r3, #136]	; 0x88
   15fe0:	ldr	r3, [pc, #3432]	; 16d50 <dim_enter_array@@Base+0xf48>
   15fe4:	ldr	r3, [r4, r3]
   15fe8:	add	r2, r2, #2
   15fec:	ldr	r3, [r3, r2, lsl #2]
   15ff0:	sub	r2, fp, #84	; 0x54
   15ff4:	mov	r1, r2
   15ff8:	mov	r0, r3
   15ffc:	bl	12510 <coda_type_get_string_length@plt>
   16000:	mov	r3, r0
   16004:	cmp	r3, #0
   16008:	beq	16010 <dim_enter_array@@Base+0x208>
   1600c:	bl	1bab8 <handle_coda_error@@Base>
   16010:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16014:	mov	r2, #1
   16018:	str	r2, [r3, #4]
   1601c:	ldr	r2, [fp, #-84]	; 0xffffffac
   16020:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16024:	str	r2, [r3, #8]
   16028:	b	16104 <dim_enter_array@@Base+0x2fc>
   1602c:	ldr	r3, [pc, #3356]	; 16d50 <dim_enter_array@@Base+0xf48>
   16030:	ldr	r3, [r4, r3]
   16034:	ldr	r2, [r3, #136]	; 0x88
   16038:	ldr	r3, [pc, #3344]	; 16d50 <dim_enter_array@@Base+0xf48>
   1603c:	ldr	r3, [r4, r3]
   16040:	add	r2, r2, #2
   16044:	ldr	r3, [r3, r2, lsl #2]
   16048:	sub	r2, fp, #92	; 0x5c
   1604c:	mov	r1, r2
   16050:	mov	r0, r3
   16054:	bl	12300 <coda_type_get_bit_size@plt>
   16058:	mov	r3, r0
   1605c:	cmp	r3, #0
   16060:	beq	16068 <dim_enter_array@@Base+0x260>
   16064:	bl	1bab8 <handle_coda_error@@Base>
   16068:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1606c:	mov	r2, #1
   16070:	str	r2, [r3, #4]
   16074:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   16078:	cmp	r2, #0
   1607c:	sbcs	r3, r3, #0
   16080:	blt	160d4 <dim_enter_array@@Base+0x2cc>
   16084:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   16088:	lsr	r6, r2, #3
   1608c:	orr	r6, r6, r3, lsl #29
   16090:	asr	r7, r3, #3
   16094:	mov	ip, r6
   16098:	ldrd	r2, [fp, #-92]	; 0xffffffa4
   1609c:	mov	r0, #7
   160a0:	mov	r1, #0
   160a4:	and	r2, r2, r0
   160a8:	and	r3, r3, r1
   160ac:	orrs	r3, r2, r3
   160b0:	beq	160bc <dim_enter_array@@Base+0x2b4>
   160b4:	mov	r3, #1
   160b8:	b	160c0 <dim_enter_array@@Base+0x2b8>
   160bc:	mov	r3, #0
   160c0:	add	r3, ip, r3
   160c4:	mov	r2, r3
   160c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160cc:	str	r2, [r3, #8]
   160d0:	b	16104 <dim_enter_array@@Base+0x2fc>
   160d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   160d8:	mvn	r2, #0
   160dc:	str	r2, [r3, #8]
   160e0:	b	16104 <dim_enter_array@@Base+0x2fc>
   160e4:	ldr	r3, [pc, #3192]	; 16d64 <dim_enter_array@@Base+0xf5c>
   160e8:	add	r3, pc, r3
   160ec:	ldr	r2, [pc, #3188]	; 16d68 <dim_enter_array@@Base+0xf60>
   160f0:	ldr	r1, [pc, #3188]	; 16d6c <dim_enter_array@@Base+0xf64>
   160f4:	add	r1, pc, r1
   160f8:	ldr	r0, [pc, #3184]	; 16d70 <dim_enter_array@@Base+0xf68>
   160fc:	add	r0, pc, r0
   16100:	bl	12660 <__assert_fail@plt>
   16104:	ldr	r3, [pc, #3176]	; 16d74 <dim_enter_array@@Base+0xf6c>
   16108:	ldr	r3, [r4, r3]
   1610c:	ldr	r3, [r3]
   16110:	cmp	r3, #0
   16114:	bne	16140 <dim_enter_array@@Base+0x338>
   16118:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1611c:	mvn	r2, #0
   16120:	str	r2, [r3]
   16124:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16128:	mov	r2, #0
   1612c:	str	r2, [r3, #40]	; 0x28
   16130:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16134:	mov	r2, #0
   16138:	str	r2, [r3, #44]	; 0x2c
   1613c:	b	16d44 <dim_enter_array@@Base+0xf3c>
   16140:	ldr	r3, [pc, #3120]	; 16d78 <dim_enter_array@@Base+0xf70>
   16144:	ldr	r3, [r4, r3]
   16148:	ldr	r3, [r3]
   1614c:	str	r3, [fp, #-68]	; 0xffffffbc
   16150:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16154:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16158:	str	r2, [r3]
   1615c:	ldr	r3, [pc, #3092]	; 16d78 <dim_enter_array@@Base+0xf70>
   16160:	ldr	r3, [r4, r3]
   16164:	ldr	r2, [r3]
   16168:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1616c:	ldr	r3, [r3, #4]
   16170:	add	r3, r2, r3
   16174:	cmp	r3, #8
   16178:	ble	1619c <dim_enter_array@@Base+0x394>
   1617c:	ldr	r3, [pc, #3064]	; 16d7c <dim_enter_array@@Base+0xf74>
   16180:	add	r3, pc, r3
   16184:	ldr	r2, [pc, #3060]	; 16d80 <dim_enter_array@@Base+0xf78>
   16188:	ldr	r1, [pc, #3060]	; 16d84 <dim_enter_array@@Base+0xf7c>
   1618c:	add	r1, pc, r1
   16190:	ldr	r0, [pc, #3056]	; 16d88 <dim_enter_array@@Base+0xf80>
   16194:	add	r0, pc, r0
   16198:	bl	12660 <__assert_fail@plt>
   1619c:	ldr	r3, [pc, #3028]	; 16d78 <dim_enter_array@@Base+0xf70>
   161a0:	ldr	r3, [r4, r3]
   161a4:	ldr	r2, [r3]
   161a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   161ac:	ldr	r3, [r3, #4]
   161b0:	add	r2, r2, r3
   161b4:	ldr	r3, [pc, #3004]	; 16d78 <dim_enter_array@@Base+0xf70>
   161b8:	ldr	r3, [r4, r3]
   161bc:	str	r2, [r3]
   161c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   161c4:	cmp	r3, #0
   161c8:	ble	16218 <dim_enter_array@@Base+0x410>
   161cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   161d0:	sub	r3, r3, #1
   161d4:	ldr	r2, [pc, #2972]	; 16d78 <dim_enter_array@@Base+0xf70>
   161d8:	ldr	r2, [r4, r2]
   161dc:	add	r3, r3, #30
   161e0:	lsl	r3, r3, #3
   161e4:	add	r3, r2, r3
   161e8:	ldrd	r2, [r3]
   161ec:	strd	r2, [fp, #-28]	; 0xffffffe4
   161f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   161f4:	sub	r3, r3, #1
   161f8:	ldr	r2, [pc, #2936]	; 16d78 <dim_enter_array@@Base+0xf70>
   161fc:	ldr	r2, [r4, r2]
   16200:	add	r3, r3, #38	; 0x26
   16204:	lsl	r3, r3, #3
   16208:	add	r3, r2, r3
   1620c:	ldrd	r2, [r3]
   16210:	strd	r2, [fp, #-36]	; 0xffffffdc
   16214:	b	16230 <dim_enter_array@@Base+0x428>
   16218:	mov	r2, #1
   1621c:	mov	r3, #0
   16220:	strd	r2, [fp, #-28]	; 0xffffffe4
   16224:	mov	r2, #1
   16228:	mov	r3, #0
   1622c:	strd	r2, [fp, #-36]	; 0xffffffdc
   16230:	mov	r3, #0
   16234:	str	r3, [fp, #-40]	; 0xffffffd8
   16238:	mov	r3, #0
   1623c:	str	r3, [fp, #-44]	; 0xffffffd4
   16240:	ldrd	r2, [fp, #-36]	; 0xffffffdc
   16244:	cmp	r2, #1
   16248:	sbcs	r3, r3, #0
   1624c:	blt	162f0 <dim_enter_array@@Base+0x4e8>
   16250:	mov	r3, #0
   16254:	str	r3, [fp, #-48]	; 0xffffffd0
   16258:	b	162d8 <dim_enter_array@@Base+0x4d0>
   1625c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16260:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16264:	add	r3, r2, r3
   16268:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1626c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16270:	add	r1, r1, #2
   16274:	ldr	r2, [r2, r1, lsl #2]
   16278:	ldr	r1, [pc, #2808]	; 16d78 <dim_enter_array@@Base+0xf70>
   1627c:	ldr	r1, [r4, r1]
   16280:	lsl	r3, r3, #2
   16284:	add	r3, r1, r3
   16288:	str	r2, [r3, #4]
   1628c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16290:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16294:	add	r2, r2, r3
   16298:	ldr	r3, [pc, #2776]	; 16d78 <dim_enter_array@@Base+0xf70>
   1629c:	ldr	r3, [r4, r3]
   162a0:	add	r2, r2, #18
   162a4:	mov	r1, #0
   162a8:	str	r1, [r3, r2, lsl #2]
   162ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   162b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   162b4:	add	r2, r2, #2
   162b8:	ldr	r3, [r3, r2, lsl #2]
   162bc:	cmn	r3, #1
   162c0:	bne	162cc <dim_enter_array@@Base+0x4c4>
   162c4:	mov	r3, #1
   162c8:	str	r3, [fp, #-40]	; 0xffffffd8
   162cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   162d0:	add	r3, r3, #1
   162d4:	str	r3, [fp, #-48]	; 0xffffffd0
   162d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   162dc:	ldr	r2, [r3, #4]
   162e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   162e4:	cmp	r2, r3
   162e8:	bgt	1625c <dim_enter_array@@Base+0x454>
   162ec:	b	16360 <dim_enter_array@@Base+0x558>
   162f0:	mov	r3, #0
   162f4:	str	r3, [fp, #-48]	; 0xffffffd0
   162f8:	b	1634c <dim_enter_array@@Base+0x544>
   162fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16300:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16304:	add	r3, r2, r3
   16308:	ldr	r2, [pc, #2664]	; 16d78 <dim_enter_array@@Base+0xf70>
   1630c:	ldr	r2, [r4, r2]
   16310:	lsl	r3, r3, #2
   16314:	add	r3, r2, r3
   16318:	mov	r2, #0
   1631c:	str	r2, [r3, #4]
   16320:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16324:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16328:	add	r2, r2, r3
   1632c:	ldr	r3, [pc, #2628]	; 16d78 <dim_enter_array@@Base+0xf70>
   16330:	ldr	r3, [r4, r3]
   16334:	add	r2, r2, #18
   16338:	mov	r1, #0
   1633c:	str	r1, [r3, r2, lsl #2]
   16340:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16344:	add	r3, r3, #1
   16348:	str	r3, [fp, #-48]	; 0xffffffd0
   1634c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16350:	ldr	r2, [r3, #4]
   16354:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16358:	cmp	r2, r3
   1635c:	bgt	162fc <dim_enter_array@@Base+0x4f4>
   16360:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16364:	cmp	r3, #0
   16368:	beq	166a0 <dim_enter_array@@Base+0x898>
   1636c:	mov	r3, #0
   16370:	str	r3, [fp, #-48]	; 0xffffffd0
   16374:	b	16518 <dim_enter_array@@Base+0x710>
   16378:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1637c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16380:	add	r2, r2, #2
   16384:	ldr	r3, [r3, r2, lsl #2]
   16388:	cmn	r3, #1
   1638c:	bne	164bc <dim_enter_array@@Base+0x6b4>
   16390:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16394:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16398:	add	r3, r2, r3
   1639c:	ldr	r2, [pc, #2516]	; 16d78 <dim_enter_array@@Base+0xf70>
   163a0:	ldr	r2, [r4, r2]
   163a4:	add	r3, r3, #34	; 0x22
   163a8:	lsl	r3, r3, #2
   163ac:	add	r3, r2, r3
   163b0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   163b4:	str	r2, [r3, #4]
   163b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   163bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   163c0:	add	r5, r2, r3
   163c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   163c8:	lsl	r3, r3, #2
   163cc:	mov	r0, r3
   163d0:	bl	123cc <malloc@plt>
   163d4:	mov	r3, r0
   163d8:	mov	r1, r3
   163dc:	ldr	r3, [pc, #2452]	; 16d78 <dim_enter_array@@Base+0xf70>
   163e0:	ldr	r2, [r4, r3]
   163e4:	add	r3, r5, #26
   163e8:	lsl	r3, r3, #2
   163ec:	add	r3, r2, r3
   163f0:	str	r1, [r3, #4]
   163f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   163f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   163fc:	add	r3, r2, r3
   16400:	ldr	r2, [pc, #2416]	; 16d78 <dim_enter_array@@Base+0xf70>
   16404:	ldr	r2, [r4, r2]
   16408:	add	r3, r3, #26
   1640c:	lsl	r3, r3, #2
   16410:	add	r3, r2, r3
   16414:	ldr	r3, [r3, #4]
   16418:	cmp	r3, #0
   1641c:	bne	1644c <dim_enter_array@@Base+0x644>
   16420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16424:	lsl	r2, r3, #2
   16428:	mov	r3, #456	; 0x1c8
   1642c:	str	r3, [sp]
   16430:	ldr	r3, [pc, #2388]	; 16d8c <dim_enter_array@@Base+0xf84>
   16434:	add	r3, pc, r3
   16438:	ldr	r1, [pc, #2384]	; 16d90 <dim_enter_array@@Base+0xf88>
   1643c:	add	r1, pc, r1
   16440:	mvn	r0, #0
   16444:	bl	1224c <coda_set_error@plt>
   16448:	bl	1bab8 <handle_coda_error@@Base>
   1644c:	mov	r3, #0
   16450:	str	r3, [fp, #-52]	; 0xffffffcc
   16454:	b	1649c <dim_enter_array@@Base+0x694>
   16458:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1645c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16460:	add	r3, r2, r3
   16464:	ldr	r2, [pc, #2316]	; 16d78 <dim_enter_array@@Base+0xf70>
   16468:	ldr	r2, [r4, r2]
   1646c:	add	r3, r3, #26
   16470:	lsl	r3, r3, #2
   16474:	add	r3, r2, r3
   16478:	ldr	r2, [r3, #4]
   1647c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16480:	lsl	r3, r3, #2
   16484:	add	r3, r2, r3
   16488:	mvn	r2, #0
   1648c:	str	r2, [r3]
   16490:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16494:	add	r3, r3, #1
   16498:	str	r3, [fp, #-52]	; 0xffffffcc
   1649c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   164a0:	mov	r0, r3
   164a4:	asr	r1, r0, #31
   164a8:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   164ac:	cmp	r0, r2
   164b0:	sbcs	r3, r1, r3
   164b4:	blt	16458 <dim_enter_array@@Base+0x650>
   164b8:	b	1650c <dim_enter_array@@Base+0x704>
   164bc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   164c4:	add	r3, r2, r3
   164c8:	ldr	r2, [pc, #2216]	; 16d78 <dim_enter_array@@Base+0xf70>
   164cc:	ldr	r2, [r4, r2]
   164d0:	add	r3, r3, #34	; 0x22
   164d4:	lsl	r3, r3, #2
   164d8:	add	r3, r2, r3
   164dc:	mov	r2, #0
   164e0:	str	r2, [r3, #4]
   164e4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   164e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   164ec:	add	r3, r2, r3
   164f0:	ldr	r2, [pc, #2176]	; 16d78 <dim_enter_array@@Base+0xf70>
   164f4:	ldr	r2, [r4, r2]
   164f8:	add	r3, r3, #26
   164fc:	lsl	r3, r3, #2
   16500:	add	r3, r2, r3
   16504:	mov	r2, #0
   16508:	str	r2, [r3, #4]
   1650c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16510:	add	r3, r3, #1
   16514:	str	r3, [fp, #-48]	; 0xffffffd0
   16518:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1651c:	ldr	r2, [r3, #4]
   16520:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16524:	cmp	r2, r3
   16528:	bgt	16378 <dim_enter_array@@Base+0x570>
   1652c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16530:	mov	r2, #0
   16534:	str	r2, [r3, #44]	; 0x2c
   16538:	mov	r2, #0
   1653c:	mov	r1, #0
   16540:	mov	r0, #0
   16544:	bl	15430 <print_all_distinct_dims@@Base+0x400>
   16548:	mov	r3, #0
   1654c:	str	r3, [fp, #-48]	; 0xffffffd0
   16550:	b	1668c <dim_enter_array@@Base+0x884>
   16554:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16558:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1655c:	add	r2, r2, #2
   16560:	ldr	r3, [r3, r2, lsl #2]
   16564:	cmn	r3, #1
   16568:	bne	16680 <dim_enter_array@@Base+0x878>
   1656c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16570:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16574:	add	r3, r2, r3
   16578:	ldr	r2, [pc, #2040]	; 16d78 <dim_enter_array@@Base+0xf70>
   1657c:	ldr	r2, [r4, r2]
   16580:	lsl	r3, r3, #2
   16584:	add	r3, r2, r3
   16588:	ldr	r2, [r3, #4]
   1658c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16590:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16594:	add	r3, r1, r3
   16598:	ldr	r1, [pc, #2008]	; 16d78 <dim_enter_array@@Base+0xf70>
   1659c:	ldr	r1, [r4, r1]
   165a0:	add	r3, r3, #8
   165a4:	lsl	r3, r3, #2
   165a8:	add	r3, r1, r3
   165ac:	ldr	r3, [r3, #4]
   165b0:	cmp	r2, r3
   165b4:	beq	165e4 <dim_enter_array@@Base+0x7dc>
   165b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   165bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   165c0:	add	r2, r2, r3
   165c4:	ldr	r3, [pc, #1964]	; 16d78 <dim_enter_array@@Base+0xf70>
   165c8:	ldr	r3, [r4, r3]
   165cc:	add	r2, r2, #18
   165d0:	mov	r1, #1
   165d4:	str	r1, [r3, r2, lsl #2]
   165d8:	mov	r3, #1
   165dc:	str	r3, [fp, #-44]	; 0xffffffd4
   165e0:	b	16680 <dim_enter_array@@Base+0x878>
   165e4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   165e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   165ec:	add	r2, r2, r3
   165f0:	ldr	r3, [pc, #1920]	; 16d78 <dim_enter_array@@Base+0xf70>
   165f4:	ldr	r3, [r4, r3]
   165f8:	add	r2, r2, #18
   165fc:	mov	r1, #0
   16600:	str	r1, [r3, r2, lsl #2]
   16604:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16608:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1660c:	add	r3, r2, r3
   16610:	ldr	r2, [pc, #1888]	; 16d78 <dim_enter_array@@Base+0xf70>
   16614:	ldr	r2, [r4, r2]
   16618:	add	r3, r3, #26
   1661c:	lsl	r3, r3, #2
   16620:	add	r3, r2, r3
   16624:	ldr	r3, [r3, #4]
   16628:	mov	r0, r3
   1662c:	bl	12294 <free@plt>
   16630:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16634:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16638:	add	r3, r2, r3
   1663c:	ldr	r2, [pc, #1844]	; 16d78 <dim_enter_array@@Base+0xf70>
   16640:	ldr	r2, [r4, r2]
   16644:	add	r3, r3, #26
   16648:	lsl	r3, r3, #2
   1664c:	add	r3, r2, r3
   16650:	mov	r2, #0
   16654:	str	r2, [r3, #4]
   16658:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1665c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16660:	add	r3, r2, r3
   16664:	ldr	r2, [pc, #1804]	; 16d78 <dim_enter_array@@Base+0xf70>
   16668:	ldr	r2, [r4, r2]
   1666c:	add	r3, r3, #34	; 0x22
   16670:	lsl	r3, r3, #2
   16674:	add	r3, r2, r3
   16678:	mov	r2, #0
   1667c:	str	r2, [r3, #4]
   16680:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16684:	add	r3, r3, #1
   16688:	str	r3, [fp, #-48]	; 0xffffffd0
   1668c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16690:	ldr	r2, [r3, #4]
   16694:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16698:	cmp	r2, r3
   1669c:	bgt	16554 <dim_enter_array@@Base+0x74c>
   166a0:	ldr	r3, [pc, #1744]	; 16d78 <dim_enter_array@@Base+0xf70>
   166a4:	ldr	r3, [r4, r3]
   166a8:	mov	r2, #0
   166ac:	str	r2, [r3, #68]	; 0x44
   166b0:	ldr	r3, [pc, #1728]	; 16d78 <dim_enter_array@@Base+0xf70>
   166b4:	ldr	r3, [r4, r3]
   166b8:	mvn	r2, #0
   166bc:	str	r2, [r3, #104]	; 0x68
   166c0:	mov	r3, #0
   166c4:	str	r3, [fp, #-48]	; 0xffffffd0
   166c8:	b	16714 <dim_enter_array@@Base+0x90c>
   166cc:	ldr	r3, [pc, #1700]	; 16d78 <dim_enter_array@@Base+0xf70>
   166d0:	ldr	r3, [r4, r3]
   166d4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   166d8:	add	r2, r2, #18
   166dc:	ldr	r3, [r3, r2, lsl #2]
   166e0:	cmp	r3, #0
   166e4:	beq	16708 <dim_enter_array@@Base+0x900>
   166e8:	ldr	r3, [pc, #1672]	; 16d78 <dim_enter_array@@Base+0xf70>
   166ec:	ldr	r3, [r4, r3]
   166f0:	mov	r2, #1
   166f4:	str	r2, [r3, #68]	; 0x44
   166f8:	ldr	r3, [pc, #1656]	; 16d78 <dim_enter_array@@Base+0xf70>
   166fc:	ldr	r3, [r4, r3]
   16700:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16704:	str	r2, [r3, #104]	; 0x68
   16708:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1670c:	add	r3, r3, #1
   16710:	str	r3, [fp, #-48]	; 0xffffffd0
   16714:	ldr	r3, [pc, #1628]	; 16d78 <dim_enter_array@@Base+0xf70>
   16718:	ldr	r3, [r4, r3]
   1671c:	ldr	r2, [r3]
   16720:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16724:	cmp	r2, r3
   16728:	bgt	166cc <dim_enter_array@@Base+0x8c4>
   1672c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16730:	mov	r2, #1
   16734:	str	r2, [r3, #40]	; 0x28
   16738:	mov	r3, #0
   1673c:	str	r3, [fp, #-48]	; 0xffffffd0
   16740:	b	16880 <dim_enter_array@@Base+0xa78>
   16744:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16748:	ldr	r2, [r3, #40]	; 0x28
   1674c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16750:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16754:	add	r3, r1, r3
   16758:	ldr	r1, [pc, #1560]	; 16d78 <dim_enter_array@@Base+0xf70>
   1675c:	ldr	r1, [r4, r1]
   16760:	lsl	r3, r3, #2
   16764:	add	r3, r1, r3
   16768:	ldr	r3, [r3, #4]
   1676c:	mul	r2, r3, r2
   16770:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16774:	str	r2, [r3, #40]	; 0x28
   16778:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1677c:	cmp	r3, #0
   16780:	bne	167e8 <dim_enter_array@@Base+0x9e0>
   16784:	ldr	r3, [pc, #1516]	; 16d78 <dim_enter_array@@Base+0xf70>
   16788:	ldr	r2, [r4, r3]
   1678c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16790:	lsl	r3, r3, #2
   16794:	add	r3, r2, r3
   16798:	ldr	r3, [r3, #4]
   1679c:	mov	r2, r3
   167a0:	asr	r3, r2, #31
   167a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   167a8:	mul	r0, r3, r1
   167ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167b0:	mul	r1, r2, r1
   167b4:	add	r1, r0, r1
   167b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   167bc:	umull	r2, r3, r0, r2
   167c0:	add	r1, r1, r3
   167c4:	mov	r3, r1
   167c8:	ldr	r1, [pc, #1448]	; 16d78 <dim_enter_array@@Base+0xf70>
   167cc:	ldr	r0, [r4, r1]
   167d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   167d4:	add	r1, r1, #30
   167d8:	lsl	r1, r1, #3
   167dc:	add	r1, r0, r1
   167e0:	strd	r2, [r1]
   167e4:	b	16874 <dim_enter_array@@Base+0xa6c>
   167e8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   167ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   167f0:	add	ip, r2, r3
   167f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   167f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   167fc:	add	r3, r2, r3
   16800:	sub	r3, r3, #1
   16804:	ldr	r2, [pc, #1388]	; 16d78 <dim_enter_array@@Base+0xf70>
   16808:	ldr	r2, [r4, r2]
   1680c:	add	r3, r3, #30
   16810:	lsl	r3, r3, #3
   16814:	add	r3, r2, r3
   16818:	ldrd	r0, [r3]
   1681c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16820:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16824:	add	r3, r2, r3
   16828:	ldr	r2, [pc, #1352]	; 16d78 <dim_enter_array@@Base+0xf70>
   1682c:	ldr	r2, [r4, r2]
   16830:	lsl	r3, r3, #2
   16834:	add	r3, r2, r3
   16838:	ldr	r3, [r3, #4]
   1683c:	mov	r2, r3
   16840:	asr	r3, r2, #31
   16844:	mul	r5, r2, r1
   16848:	mul	lr, r0, r3
   1684c:	add	lr, r5, lr
   16850:	umull	r2, r3, r0, r2
   16854:	add	r1, lr, r3
   16858:	mov	r3, r1
   1685c:	ldr	r1, [pc, #1300]	; 16d78 <dim_enter_array@@Base+0xf70>
   16860:	ldr	r0, [r4, r1]
   16864:	add	r1, ip, #30
   16868:	lsl	r1, r1, #3
   1686c:	add	r1, r0, r1
   16870:	strd	r2, [r1]
   16874:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16878:	add	r3, r3, #1
   1687c:	str	r3, [fp, #-48]	; 0xffffffd0
   16880:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16884:	ldr	r2, [r3, #4]
   16888:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1688c:	cmp	r2, r3
   16890:	bgt	16744 <dim_enter_array@@Base+0x93c>
   16894:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16898:	cmp	r3, #0
   1689c:	beq	16a54 <dim_enter_array@@Base+0xc4c>
   168a0:	mov	r3, #0
   168a4:	str	r3, [fp, #-48]	; 0xffffffd0
   168a8:	b	168e4 <dim_enter_array@@Base+0xadc>
   168ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   168b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   168b4:	add	r3, r2, r3
   168b8:	ldr	r2, [pc, #1208]	; 16d78 <dim_enter_array@@Base+0xf70>
   168bc:	ldr	r2, [r4, r2]
   168c0:	add	r3, r3, #38	; 0x26
   168c4:	lsl	r3, r3, #3
   168c8:	add	r1, r2, r3
   168cc:	mov	r2, #0
   168d0:	mov	r3, #0
   168d4:	strd	r2, [r1]
   168d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   168dc:	add	r3, r3, #1
   168e0:	str	r3, [fp, #-48]	; 0xffffffd0
   168e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   168e8:	ldr	r2, [r3, #4]
   168ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   168f0:	cmp	r2, r3
   168f4:	bgt	168ac <dim_enter_array@@Base+0xaa4>
   168f8:	mov	r3, #0
   168fc:	str	r3, [fp, #-56]	; 0xffffffc8
   16900:	b	16a34 <dim_enter_array@@Base+0xc2c>
   16904:	mov	r3, #1
   16908:	str	r3, [fp, #-60]	; 0xffffffc4
   1690c:	mov	r3, #0
   16910:	str	r3, [fp, #-48]	; 0xffffffd0
   16914:	b	16a14 <dim_enter_array@@Base+0xc0c>
   16918:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1691c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16920:	add	r2, r2, r3
   16924:	ldr	r3, [pc, #1100]	; 16d78 <dim_enter_array@@Base+0xf70>
   16928:	ldr	r3, [r4, r3]
   1692c:	add	r2, r2, #18
   16930:	ldr	r3, [r3, r2, lsl #2]
   16934:	cmp	r3, #0
   16938:	beq	16980 <dim_enter_array@@Base+0xb78>
   1693c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16940:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16944:	add	r3, r2, r3
   16948:	ldr	r2, [pc, #1064]	; 16d78 <dim_enter_array@@Base+0xf70>
   1694c:	ldr	r2, [r4, r2]
   16950:	add	r3, r3, #26
   16954:	lsl	r3, r3, #2
   16958:	add	r3, r2, r3
   1695c:	ldr	r2, [r3, #4]
   16960:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16964:	lsl	r3, r3, #2
   16968:	add	r3, r2, r3
   1696c:	ldr	r2, [r3]
   16970:	ldr	r3, [fp, #-60]	; 0xffffffc4
   16974:	mul	r3, r2, r3
   16978:	str	r3, [fp, #-60]	; 0xffffffc4
   1697c:	b	169ac <dim_enter_array@@Base+0xba4>
   16980:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16984:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16988:	add	r3, r2, r3
   1698c:	ldr	r2, [pc, #996]	; 16d78 <dim_enter_array@@Base+0xf70>
   16990:	ldr	r2, [r4, r2]
   16994:	lsl	r3, r3, #2
   16998:	add	r3, r2, r3
   1699c:	ldr	r2, [r3, #4]
   169a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   169a4:	mul	r3, r2, r3
   169a8:	str	r3, [fp, #-60]	; 0xffffffc4
   169ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   169b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   169b4:	add	ip, r2, r3
   169b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   169bc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   169c0:	add	r3, r2, r3
   169c4:	ldr	r2, [pc, #940]	; 16d78 <dim_enter_array@@Base+0xf70>
   169c8:	ldr	r2, [r4, r2]
   169cc:	add	r3, r3, #38	; 0x26
   169d0:	lsl	r3, r3, #3
   169d4:	add	r3, r2, r3
   169d8:	ldrd	r0, [r3]
   169dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   169e0:	mov	r2, r3
   169e4:	asr	r3, r2, #31
   169e8:	adds	r2, r2, r0
   169ec:	adc	r3, r3, r1
   169f0:	ldr	r1, [pc, #896]	; 16d78 <dim_enter_array@@Base+0xf70>
   169f4:	ldr	r0, [r4, r1]
   169f8:	add	r1, ip, #38	; 0x26
   169fc:	lsl	r1, r1, #3
   16a00:	add	r1, r0, r1
   16a04:	strd	r2, [r1]
   16a08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a0c:	add	r3, r3, #1
   16a10:	str	r3, [fp, #-48]	; 0xffffffd0
   16a14:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16a18:	ldr	r2, [r3, #4]
   16a1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16a20:	cmp	r2, r3
   16a24:	bgt	16918 <dim_enter_array@@Base+0xb10>
   16a28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a2c:	add	r3, r3, #1
   16a30:	str	r3, [fp, #-56]	; 0xffffffc8
   16a34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   16a38:	mov	r0, r3
   16a3c:	asr	r1, r0, #31
   16a40:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   16a44:	cmp	r0, r2
   16a48:	sbcs	r3, r1, r3
   16a4c:	blt	16904 <dim_enter_array@@Base+0xafc>
   16a50:	b	16b6c <dim_enter_array@@Base+0xd64>
   16a54:	ldr	r3, [pc, #796]	; 16d78 <dim_enter_array@@Base+0xf70>
   16a58:	ldr	r2, [r4, r3]
   16a5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16a60:	lsl	r3, r3, #2
   16a64:	add	r3, r2, r3
   16a68:	ldr	r3, [r3, #4]
   16a6c:	mov	r2, r3
   16a70:	asr	r3, r2, #31
   16a74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16a78:	mul	r0, r3, r1
   16a7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16a80:	mul	r1, r2, r1
   16a84:	add	r1, r0, r1
   16a88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a8c:	umull	r2, r3, r0, r2
   16a90:	add	r1, r1, r3
   16a94:	mov	r3, r1
   16a98:	ldr	r1, [pc, #728]	; 16d78 <dim_enter_array@@Base+0xf70>
   16a9c:	ldr	r0, [r4, r1]
   16aa0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16aa4:	add	r1, r1, #38	; 0x26
   16aa8:	lsl	r1, r1, #3
   16aac:	add	r1, r0, r1
   16ab0:	strd	r2, [r1]
   16ab4:	mov	r3, #1
   16ab8:	str	r3, [fp, #-48]	; 0xffffffd0
   16abc:	b	16b58 <dim_enter_array@@Base+0xd50>
   16ac0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ac8:	add	ip, r2, r3
   16acc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16ad0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ad4:	add	r3, r2, r3
   16ad8:	sub	r3, r3, #1
   16adc:	ldr	r2, [pc, #660]	; 16d78 <dim_enter_array@@Base+0xf70>
   16ae0:	ldr	r2, [r4, r2]
   16ae4:	add	r3, r3, #38	; 0x26
   16ae8:	lsl	r3, r3, #3
   16aec:	add	r3, r2, r3
   16af0:	ldrd	r0, [r3]
   16af4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16af8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16afc:	add	r3, r2, r3
   16b00:	ldr	r2, [pc, #624]	; 16d78 <dim_enter_array@@Base+0xf70>
   16b04:	ldr	r2, [r4, r2]
   16b08:	lsl	r3, r3, #2
   16b0c:	add	r3, r2, r3
   16b10:	ldr	r3, [r3, #4]
   16b14:	mov	r2, r3
   16b18:	asr	r3, r2, #31
   16b1c:	mul	r5, r2, r1
   16b20:	mul	lr, r0, r3
   16b24:	add	lr, r5, lr
   16b28:	umull	r2, r3, r0, r2
   16b2c:	add	r1, lr, r3
   16b30:	mov	r3, r1
   16b34:	ldr	r1, [pc, #572]	; 16d78 <dim_enter_array@@Base+0xf70>
   16b38:	ldr	r0, [r4, r1]
   16b3c:	add	r1, ip, #38	; 0x26
   16b40:	lsl	r1, r1, #3
   16b44:	add	r1, r0, r1
   16b48:	strd	r2, [r1]
   16b4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16b50:	add	r3, r3, #1
   16b54:	str	r3, [fp, #-48]	; 0xffffffd0
   16b58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b5c:	ldr	r2, [r3, #4]
   16b60:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16b64:	cmp	r2, r3
   16b68:	bgt	16ac0 <dim_enter_array@@Base+0xcb8>
   16b6c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16b70:	ldr	r2, [r3, #4]
   16b74:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16b78:	add	r3, r2, r3
   16b7c:	sub	r3, r3, #1
   16b80:	ldr	r2, [pc, #496]	; 16d78 <dim_enter_array@@Base+0xf70>
   16b84:	ldr	r2, [r4, r2]
   16b88:	add	r3, r3, #38	; 0x26
   16b8c:	lsl	r3, r3, #3
   16b90:	add	r3, r2, r3
   16b94:	ldrd	r2, [r3]
   16b98:	cmp	r2, #1
   16b9c:	sbcs	r3, r3, #0
   16ba0:	blt	16d44 <dim_enter_array@@Base+0xf3c>
   16ba4:	ldr	r3, [pc, #460]	; 16d78 <dim_enter_array@@Base+0xf70>
   16ba8:	ldr	r3, [r4, r3]
   16bac:	ldr	r3, [r3]
   16bb0:	sub	r1, r3, #1
   16bb4:	ldr	r3, [pc, #444]	; 16d78 <dim_enter_array@@Base+0xf70>
   16bb8:	ldr	r3, [r4, r3]
   16bbc:	ldr	r3, [r3]
   16bc0:	sub	r3, r3, #1
   16bc4:	ldr	r2, [pc, #428]	; 16d78 <dim_enter_array@@Base+0xf70>
   16bc8:	ldr	r2, [r4, r2]
   16bcc:	lsl	r3, r3, #2
   16bd0:	add	r3, r2, r3
   16bd4:	ldr	r3, [r3, #4]
   16bd8:	mov	r2, r3
   16bdc:	asr	r3, r2, #31
   16be0:	ldr	r0, [pc, #400]	; 16d78 <dim_enter_array@@Base+0xf70>
   16be4:	ldr	r0, [r4, r0]
   16be8:	add	r1, r1, #22
   16bec:	lsl	r1, r1, #3
   16bf0:	add	r1, r0, r1
   16bf4:	strd	r2, [r1]
   16bf8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16bfc:	ldr	r3, [r3, #4]
   16c00:	sub	r3, r3, #2
   16c04:	str	r3, [fp, #-48]	; 0xffffffd0
   16c08:	b	16ca4 <dim_enter_array@@Base+0xe9c>
   16c0c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16c10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c14:	add	ip, r2, r3
   16c18:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16c1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c20:	add	r3, r2, r3
   16c24:	ldr	r2, [pc, #332]	; 16d78 <dim_enter_array@@Base+0xf70>
   16c28:	ldr	r2, [r4, r2]
   16c2c:	lsl	r3, r3, #2
   16c30:	add	r3, r2, r3
   16c34:	ldr	r3, [r3, #4]
   16c38:	mov	r0, r3
   16c3c:	asr	r1, r0, #31
   16c40:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16c44:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c48:	add	r3, r2, r3
   16c4c:	add	r3, r3, #1
   16c50:	ldr	r2, [pc, #288]	; 16d78 <dim_enter_array@@Base+0xf70>
   16c54:	ldr	r2, [r4, r2]
   16c58:	add	r3, r3, #22
   16c5c:	lsl	r3, r3, #3
   16c60:	add	r3, r2, r3
   16c64:	ldrd	r2, [r3]
   16c68:	mul	r5, r2, r1
   16c6c:	mul	lr, r0, r3
   16c70:	add	lr, r5, lr
   16c74:	umull	r2, r3, r0, r2
   16c78:	add	r1, lr, r3
   16c7c:	mov	r3, r1
   16c80:	ldr	r1, [pc, #240]	; 16d78 <dim_enter_array@@Base+0xf70>
   16c84:	ldr	r0, [r4, r1]
   16c88:	add	r1, ip, #22
   16c8c:	lsl	r1, r1, #3
   16c90:	add	r1, r0, r1
   16c94:	strd	r2, [r1]
   16c98:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16c9c:	sub	r3, r3, #1
   16ca0:	str	r3, [fp, #-48]	; 0xffffffd0
   16ca4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ca8:	cmp	r3, #0
   16cac:	bge	16c0c <dim_enter_array@@Base+0xe04>
   16cb0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16cb4:	sub	r3, r3, #1
   16cb8:	str	r3, [fp, #-48]	; 0xffffffd0
   16cbc:	b	16d38 <dim_enter_array@@Base+0xf30>
   16cc0:	ldr	r3, [pc, #176]	; 16d78 <dim_enter_array@@Base+0xf70>
   16cc4:	ldr	r2, [r4, r3]
   16cc8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16ccc:	add	r3, r3, #22
   16cd0:	lsl	r3, r3, #3
   16cd4:	add	r3, r2, r3
   16cd8:	ldrd	r0, [r3]
   16cdc:	ldr	r3, [pc, #148]	; 16d78 <dim_enter_array@@Base+0xf70>
   16ce0:	ldr	r2, [r4, r3]
   16ce4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16ce8:	add	r3, r3, #22
   16cec:	lsl	r3, r3, #3
   16cf0:	add	r3, r2, r3
   16cf4:	ldrd	r2, [r3]
   16cf8:	mul	lr, r2, r1
   16cfc:	mul	ip, r0, r3
   16d00:	add	ip, lr, ip
   16d04:	umull	r2, r3, r0, r2
   16d08:	add	r1, ip, r3
   16d0c:	mov	r3, r1
   16d10:	ldr	r1, [pc, #96]	; 16d78 <dim_enter_array@@Base+0xf70>
   16d14:	ldr	r0, [r4, r1]
   16d18:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16d1c:	add	r1, r1, #22
   16d20:	lsl	r1, r1, #3
   16d24:	add	r1, r0, r1
   16d28:	strd	r2, [r1]
   16d2c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d30:	sub	r3, r3, #1
   16d34:	str	r3, [fp, #-48]	; 0xffffffd0
   16d38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16d3c:	cmp	r3, #0
   16d40:	bge	16cc0 <dim_enter_array@@Base+0xeb8>
   16d44:	sub	sp, fp, #20
   16d48:	pop	{r4, r5, r6, r7, fp, pc}
   16d4c:	andeq	fp, r1, r0, ror #3
   16d50:			; <UNDEFINED> instruction: 0x000001b4
   16d54:	andeq	r8, r0, r8, asr sl
   16d58:	andeq	r0, r0, sp, asr r1
   16d5c:	andeq	r8, r0, r8, ror r8
   16d60:	andeq	r8, r0, ip, lsl #19
   16d64:	andeq	r8, r0, r8, lsr #18
   16d68:	andeq	r0, r0, r2, lsl #3
   16d6c:	andeq	r8, r0, r8, asr #14
   16d70:	andeq	r8, r0, ip, asr r8
   16d74:			; <UNDEFINED> instruction: 0x000001b0
   16d78:	andeq	r0, r0, r4, ror #3
   16d7c:	muleq	r0, r0, r8
   16d80:	muleq	r0, r2, r1
   16d84:			; <UNDEFINED> instruction: 0x000086b0
   16d88:	andeq	r8, r0, r8, asr #15
   16d8c:	andeq	r8, r0, r8, lsl #8
   16d90:	andeq	r8, r0, ip, ror r4

00016d94 <dim_leave_array@@Base>:
   16d94:	push	{r4, fp, lr}
   16d98:	add	fp, sp, #8
   16d9c:	sub	sp, sp, #20
   16da0:	ldr	r4, [pc, #616]	; 17010 <dim_leave_array@@Base+0x27c>
   16da4:	add	r4, pc, r4
   16da8:	ldr	r3, [pc, #612]	; 17014 <dim_leave_array@@Base+0x280>
   16dac:	ldr	r3, [r4, r3]
   16db0:	ldr	r3, [r3, #3360]	; 0xd20
   16db4:	cmp	r3, #0
   16db8:	bge	16ddc <dim_leave_array@@Base+0x48>
   16dbc:	ldr	r3, [pc, #596]	; 17018 <dim_leave_array@@Base+0x284>
   16dc0:	add	r3, pc, r3
   16dc4:	ldr	r2, [pc, #592]	; 1701c <dim_leave_array@@Base+0x288>
   16dc8:	ldr	r1, [pc, #592]	; 17020 <dim_leave_array@@Base+0x28c>
   16dcc:	add	r1, pc, r1
   16dd0:	ldr	r0, [pc, #588]	; 17024 <dim_leave_array@@Base+0x290>
   16dd4:	add	r0, pc, r0
   16dd8:	bl	12660 <__assert_fail@plt>
   16ddc:	ldr	r3, [pc, #560]	; 17014 <dim_leave_array@@Base+0x280>
   16de0:	ldr	r3, [r4, r3]
   16de4:	ldr	r2, [r3, #3360]	; 0xd20
   16de8:	mov	r3, r2
   16dec:	lsl	r3, r3, #2
   16df0:	add	r3, r3, r2
   16df4:	lsl	r3, r3, #4
   16df8:	add	r3, r3, #800	; 0x320
   16dfc:	ldr	r2, [pc, #528]	; 17014 <dim_leave_array@@Base+0x280>
   16e00:	ldr	r2, [r4, r2]
   16e04:	add	r3, r3, r2
   16e08:	str	r3, [fp, #-20]	; 0xffffffec
   16e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e10:	ldr	r3, [r3]
   16e14:	str	r3, [fp, #-24]	; 0xffffffe8
   16e18:	ldr	r3, [pc, #520]	; 17028 <dim_leave_array@@Base+0x294>
   16e1c:	ldr	r3, [r4, r3]
   16e20:	ldr	r2, [r3]
   16e24:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e28:	ldr	r3, [r3, #4]
   16e2c:	sub	r2, r2, r3
   16e30:	ldr	r3, [pc, #496]	; 17028 <dim_leave_array@@Base+0x294>
   16e34:	ldr	r3, [r4, r3]
   16e38:	str	r2, [r3]
   16e3c:	mov	r3, #0
   16e40:	str	r3, [fp, #-16]
   16e44:	b	16ea4 <dim_leave_array@@Base+0x110>
   16e48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e4c:	ldr	r3, [fp, #-16]
   16e50:	add	r2, r2, r3
   16e54:	ldr	r3, [pc, #460]	; 17028 <dim_leave_array@@Base+0x294>
   16e58:	ldr	r3, [r4, r3]
   16e5c:	add	r2, r2, #18
   16e60:	ldr	r3, [r3, r2, lsl #2]
   16e64:	cmp	r3, #0
   16e68:	beq	16e98 <dim_leave_array@@Base+0x104>
   16e6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e70:	ldr	r3, [fp, #-16]
   16e74:	add	r3, r2, r3
   16e78:	ldr	r2, [pc, #424]	; 17028 <dim_leave_array@@Base+0x294>
   16e7c:	ldr	r2, [r4, r2]
   16e80:	add	r3, r3, #26
   16e84:	lsl	r3, r3, #2
   16e88:	add	r3, r2, r3
   16e8c:	ldr	r3, [r3, #4]
   16e90:	mov	r0, r3
   16e94:	bl	12294 <free@plt>
   16e98:	ldr	r3, [fp, #-16]
   16e9c:	add	r3, r3, #1
   16ea0:	str	r3, [fp, #-16]
   16ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   16ea8:	ldr	r2, [r3, #4]
   16eac:	ldr	r3, [fp, #-16]
   16eb0:	cmp	r2, r3
   16eb4:	bgt	16e48 <dim_leave_array@@Base+0xb4>
   16eb8:	ldr	r3, [pc, #360]	; 17028 <dim_leave_array@@Base+0x294>
   16ebc:	ldr	r3, [r4, r3]
   16ec0:	mov	r2, #0
   16ec4:	str	r2, [r3, #68]	; 0x44
   16ec8:	ldr	r3, [pc, #344]	; 17028 <dim_leave_array@@Base+0x294>
   16ecc:	ldr	r3, [r4, r3]
   16ed0:	mvn	r2, #0
   16ed4:	str	r2, [r3, #104]	; 0x68
   16ed8:	mov	r3, #0
   16edc:	str	r3, [fp, #-16]
   16ee0:	b	16f2c <dim_leave_array@@Base+0x198>
   16ee4:	ldr	r3, [pc, #316]	; 17028 <dim_leave_array@@Base+0x294>
   16ee8:	ldr	r3, [r4, r3]
   16eec:	ldr	r2, [fp, #-16]
   16ef0:	add	r2, r2, #18
   16ef4:	ldr	r3, [r3, r2, lsl #2]
   16ef8:	cmp	r3, #0
   16efc:	beq	16f20 <dim_leave_array@@Base+0x18c>
   16f00:	ldr	r3, [pc, #288]	; 17028 <dim_leave_array@@Base+0x294>
   16f04:	ldr	r3, [r4, r3]
   16f08:	mov	r2, #1
   16f0c:	str	r2, [r3, #68]	; 0x44
   16f10:	ldr	r3, [pc, #272]	; 17028 <dim_leave_array@@Base+0x294>
   16f14:	ldr	r3, [r4, r3]
   16f18:	ldr	r2, [fp, #-16]
   16f1c:	str	r2, [r3, #104]	; 0x68
   16f20:	ldr	r3, [fp, #-16]
   16f24:	add	r3, r3, #1
   16f28:	str	r3, [fp, #-16]
   16f2c:	ldr	r3, [pc, #244]	; 17028 <dim_leave_array@@Base+0x294>
   16f30:	ldr	r3, [r4, r3]
   16f34:	ldr	r2, [r3]
   16f38:	ldr	r3, [fp, #-16]
   16f3c:	cmp	r2, r3
   16f40:	bgt	16ee4 <dim_leave_array@@Base+0x150>
   16f44:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f48:	ldr	r2, [r3, #4]
   16f4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f50:	add	r3, r2, r3
   16f54:	sub	r3, r3, #1
   16f58:	ldr	r2, [pc, #200]	; 17028 <dim_leave_array@@Base+0x294>
   16f5c:	ldr	r2, [r4, r2]
   16f60:	add	r3, r3, #38	; 0x26
   16f64:	lsl	r3, r3, #3
   16f68:	add	r3, r2, r3
   16f6c:	ldrd	r2, [r3]
   16f70:	cmp	r2, #1
   16f74:	sbcs	r3, r3, #0
   16f78:	blt	17004 <dim_leave_array@@Base+0x270>
   16f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16f80:	sub	r3, r3, #1
   16f84:	str	r3, [fp, #-16]
   16f88:	b	16ff8 <dim_leave_array@@Base+0x264>
   16f8c:	ldr	r3, [pc, #148]	; 17028 <dim_leave_array@@Base+0x294>
   16f90:	ldr	r2, [r4, r3]
   16f94:	ldr	r3, [fp, #-16]
   16f98:	add	r3, r3, #22
   16f9c:	lsl	r3, r3, #3
   16fa0:	add	r3, r2, r3
   16fa4:	ldrd	r0, [r3]
   16fa8:	ldr	r3, [pc, #120]	; 17028 <dim_leave_array@@Base+0x294>
   16fac:	ldr	r2, [r4, r3]
   16fb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16fb4:	add	r3, r3, #22
   16fb8:	lsl	r3, r3, #3
   16fbc:	add	r3, r2, r3
   16fc0:	ldrd	r2, [r3]
   16fc4:	bl	1e298 <main@@Base+0x4b8>
   16fc8:	mov	r2, r0
   16fcc:	mov	r3, r1
   16fd0:	ldr	r1, [pc, #80]	; 17028 <dim_leave_array@@Base+0x294>
   16fd4:	ldr	r0, [r4, r1]
   16fd8:	ldr	r1, [fp, #-16]
   16fdc:	add	r1, r1, #22
   16fe0:	lsl	r1, r1, #3
   16fe4:	add	r1, r0, r1
   16fe8:	strd	r2, [r1]
   16fec:	ldr	r3, [fp, #-16]
   16ff0:	sub	r3, r3, #1
   16ff4:	str	r3, [fp, #-16]
   16ff8:	ldr	r3, [fp, #-16]
   16ffc:	cmp	r3, #0
   17000:	bge	16f8c <dim_leave_array@@Base+0x1f8>
   17004:	nop			; (mov r0, r0)
   17008:	sub	sp, fp, #8
   1700c:	pop	{r4, fp, pc}
   17010:	andeq	sl, r1, r4, asr r2
   17014:			; <UNDEFINED> instruction: 0x000001b4
   17018:	andeq	r7, r0, r0, ror #24
   1701c:	andeq	r0, r0, r3, asr #4
   17020:	andeq	r7, r0, r0, ror sl
   17024:	andeq	r7, r0, r4, asr #23
   17028:	andeq	r0, r0, r4, ror #3
   1702c:	push	{r4, fp, lr}
   17030:	add	fp, sp, #8
   17034:	sub	sp, sp, #52	; 0x34
   17038:	str	r0, [fp, #-48]	; 0xffffffd0
   1703c:	str	r1, [fp, #-52]	; 0xffffffcc
   17040:	str	r2, [fp, #-56]	; 0xffffffc8
   17044:	ldr	r4, [pc, #1084]	; 17488 <dim_leave_array@@Base+0x6f4>
   17048:	add	r4, pc, r4
   1704c:	sub	r3, fp, #36	; 0x24
   17050:	mov	r1, r3
   17054:	ldr	r3, [pc, #1072]	; 1748c <dim_leave_array@@Base+0x6f8>
   17058:	ldr	r3, [r4, r3]
   1705c:	add	r0, r3, #144	; 0x90
   17060:	bl	12324 <coda_cursor_get_type_class@plt>
   17064:	mov	r3, r0
   17068:	cmp	r3, #0
   1706c:	beq	17074 <dim_leave_array@@Base+0x2e0>
   17070:	bl	1bab8 <handle_coda_error@@Base>
   17074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17078:	cmp	r3, #0
   1707c:	beq	17350 <dim_leave_array@@Base+0x5bc>
   17080:	cmp	r3, #1
   17084:	bne	1744c <dim_leave_array@@Base+0x6b8>
   17088:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1708c:	mov	r3, r2
   17090:	lsl	r3, r3, #2
   17094:	add	r3, r3, r2
   17098:	lsl	r3, r3, #4
   1709c:	add	r3, r3, #800	; 0x320
   170a0:	ldr	r2, [pc, #996]	; 1748c <dim_leave_array@@Base+0x6f8>
   170a4:	ldr	r2, [r4, r2]
   170a8:	add	r3, r3, r2
   170ac:	str	r3, [fp, #-28]	; 0xffffffe4
   170b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   170b4:	ldr	r3, [r3]
   170b8:	str	r3, [fp, #-32]	; 0xffffffe0
   170bc:	ldr	r3, [pc, #968]	; 1748c <dim_leave_array@@Base+0x6f8>
   170c0:	ldr	r3, [r4, r3]
   170c4:	ldr	r2, [r3, #3360]	; 0xd20
   170c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170cc:	cmp	r2, r3
   170d0:	bgt	170f4 <dim_leave_array@@Base+0x360>
   170d4:	ldr	r3, [pc, #948]	; 17490 <dim_leave_array@@Base+0x6fc>
   170d8:	add	r3, pc, r3
   170dc:	ldr	r2, [pc, #944]	; 17494 <dim_leave_array@@Base+0x700>
   170e0:	ldr	r1, [pc, #944]	; 17498 <dim_leave_array@@Base+0x704>
   170e4:	add	r1, pc, r1
   170e8:	ldr	r0, [pc, #940]	; 1749c <dim_leave_array@@Base+0x708>
   170ec:	add	r0, pc, r0
   170f0:	bl	12660 <__assert_fail@plt>
   170f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   170f8:	cmp	r3, #0
   170fc:	bne	1710c <dim_leave_array@@Base+0x378>
   17100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17104:	mov	r2, #0
   17108:	str	r2, [r3, #44]	; 0x2c
   1710c:	ldr	r3, [pc, #888]	; 1748c <dim_leave_array@@Base+0x6f8>
   17110:	ldr	r3, [r4, r3]
   17114:	ldr	r2, [r3, #3360]	; 0xd20
   17118:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1711c:	cmp	r2, r3
   17120:	ble	17164 <dim_leave_array@@Base+0x3d0>
   17124:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17128:	add	r2, r3, #1
   1712c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17130:	ldr	r3, [r3, #44]	; 0x2c
   17134:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17138:	ldr	r1, [r1, #40]	; 0x28
   1713c:	mul	r1, r1, r3
   17140:	ldr	r3, [pc, #836]	; 1748c <dim_leave_array@@Base+0x6f8>
   17144:	ldr	r0, [r4, r3]
   17148:	mov	r3, r2
   1714c:	lsl	r3, r3, #2
   17150:	add	r3, r3, r2
   17154:	lsl	r3, r3, #4
   17158:	add	r3, r0, r3
   1715c:	add	r3, r3, #844	; 0x34c
   17160:	str	r1, [r3]
   17164:	mov	r3, #1
   17168:	str	r3, [fp, #-16]
   1716c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17170:	str	r3, [fp, #-20]	; 0xffffffec
   17174:	b	17204 <dim_leave_array@@Base+0x470>
   17178:	ldr	r3, [pc, #800]	; 174a0 <dim_leave_array@@Base+0x70c>
   1717c:	ldr	r3, [r4, r3]
   17180:	ldr	r2, [fp, #-20]	; 0xffffffec
   17184:	add	r2, r2, #18
   17188:	ldr	r3, [r3, r2, lsl #2]
   1718c:	cmp	r3, #0
   17190:	beq	171d4 <dim_leave_array@@Base+0x440>
   17194:	ldr	r3, [pc, #772]	; 174a0 <dim_leave_array@@Base+0x70c>
   17198:	ldr	r2, [r4, r3]
   1719c:	ldr	r3, [fp, #-20]	; 0xffffffec
   171a0:	add	r3, r3, #26
   171a4:	lsl	r3, r3, #2
   171a8:	add	r3, r2, r3
   171ac:	ldr	r2, [r3, #4]
   171b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   171b4:	ldr	r3, [r3, #44]	; 0x2c
   171b8:	lsl	r3, r3, #2
   171bc:	add	r3, r2, r3
   171c0:	ldr	r2, [r3]
   171c4:	ldr	r3, [fp, #-16]
   171c8:	mul	r3, r2, r3
   171cc:	str	r3, [fp, #-16]
   171d0:	b	171f8 <dim_leave_array@@Base+0x464>
   171d4:	ldr	r3, [pc, #708]	; 174a0 <dim_leave_array@@Base+0x70c>
   171d8:	ldr	r2, [r4, r3]
   171dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   171e0:	lsl	r3, r3, #2
   171e4:	add	r3, r2, r3
   171e8:	ldr	r2, [r3, #4]
   171ec:	ldr	r3, [fp, #-16]
   171f0:	mul	r3, r2, r3
   171f4:	str	r3, [fp, #-16]
   171f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   171fc:	add	r3, r3, #1
   17200:	str	r3, [fp, #-20]	; 0xffffffec
   17204:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17208:	ldr	r2, [r3, #4]
   1720c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17210:	add	r2, r2, r3
   17214:	ldr	r3, [fp, #-20]	; 0xffffffec
   17218:	cmp	r2, r3
   1721c:	bgt	17178 <dim_leave_array@@Base+0x3e4>
   17220:	ldr	r3, [fp, #-16]
   17224:	cmp	r3, #0
   17228:	ble	1746c <dim_leave_array@@Base+0x6d8>
   1722c:	ldr	r3, [pc, #600]	; 1748c <dim_leave_array@@Base+0x6f8>
   17230:	ldr	r3, [r4, r3]
   17234:	add	r0, r3, #144	; 0x90
   17238:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   1723c:	mov	r3, r0
   17240:	cmp	r3, #0
   17244:	beq	1724c <dim_leave_array@@Base+0x4b8>
   17248:	bl	1bab8 <handle_coda_error@@Base>
   1724c:	mov	r3, #0
   17250:	str	r3, [fp, #-24]	; 0xffffffe8
   17254:	b	1732c <dim_leave_array@@Base+0x598>
   17258:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1725c:	add	r0, r3, #1
   17260:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17264:	add	r3, r3, #1
   17268:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1726c:	mov	r1, r3
   17270:	bl	1702c <dim_leave_array@@Base+0x298>
   17274:	mov	r3, r0
   17278:	cmp	r3, #0
   1727c:	beq	17298 <dim_leave_array@@Base+0x504>
   17280:	ldr	r3, [pc, #516]	; 1748c <dim_leave_array@@Base+0x6f8>
   17284:	ldr	r3, [r4, r3]
   17288:	add	r0, r3, #144	; 0x90
   1728c:	bl	123fc <coda_cursor_goto_parent@plt>
   17290:	mov	r3, #1
   17294:	b	1747c <dim_leave_array@@Base+0x6e8>
   17298:	ldr	r3, [fp, #-16]
   1729c:	sub	r2, r3, #1
   172a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   172a4:	cmp	r2, r3
   172a8:	ble	17320 <dim_leave_array@@Base+0x58c>
   172ac:	ldr	r3, [pc, #472]	; 1748c <dim_leave_array@@Base+0x6f8>
   172b0:	ldr	r3, [r4, r3]
   172b4:	add	r0, r3, #144	; 0x90
   172b8:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   172bc:	mov	r3, r0
   172c0:	cmp	r3, #0
   172c4:	beq	172cc <dim_leave_array@@Base+0x538>
   172c8:	bl	1bab8 <handle_coda_error@@Base>
   172cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   172d0:	add	r2, r3, #1
   172d4:	ldr	r3, [pc, #432]	; 1748c <dim_leave_array@@Base+0x6f8>
   172d8:	ldr	r1, [r4, r3]
   172dc:	mov	r3, r2
   172e0:	lsl	r3, r3, #2
   172e4:	add	r3, r3, r2
   172e8:	lsl	r3, r3, #4
   172ec:	add	r3, r1, r3
   172f0:	add	r3, r3, #844	; 0x34c
   172f4:	ldr	r3, [r3]
   172f8:	add	r1, r3, #1
   172fc:	ldr	r3, [pc, #392]	; 1748c <dim_leave_array@@Base+0x6f8>
   17300:	ldr	r0, [r4, r3]
   17304:	mov	r3, r2
   17308:	lsl	r3, r3, #2
   1730c:	add	r3, r3, r2
   17310:	lsl	r3, r3, #4
   17314:	add	r3, r0, r3
   17318:	add	r3, r3, #844	; 0x34c
   1731c:	str	r1, [r3]
   17320:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17324:	add	r3, r3, #1
   17328:	str	r3, [fp, #-24]	; 0xffffffe8
   1732c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17330:	ldr	r3, [fp, #-16]
   17334:	cmp	r2, r3
   17338:	blt	17258 <dim_leave_array@@Base+0x4c4>
   1733c:	ldr	r3, [pc, #328]	; 1748c <dim_leave_array@@Base+0x6f8>
   17340:	ldr	r3, [r4, r3]
   17344:	add	r0, r3, #144	; 0x90
   17348:	bl	123fc <coda_cursor_goto_parent@plt>
   1734c:	b	1746c <dim_leave_array@@Base+0x6d8>
   17350:	ldr	r3, [pc, #308]	; 1748c <dim_leave_array@@Base+0x6f8>
   17354:	ldr	r2, [r4, r3]
   17358:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1735c:	add	r3, r3, #872	; 0x368
   17360:	lsl	r3, r3, #2
   17364:	add	r3, r2, r3
   17368:	ldr	r3, [r3, #4]
   1736c:	sub	r2, fp, #40	; 0x28
   17370:	mov	r1, r3
   17374:	ldr	r3, [pc, #272]	; 1748c <dim_leave_array@@Base+0x6f8>
   17378:	ldr	r3, [r4, r3]
   1737c:	add	r0, r3, #144	; 0x90
   17380:	bl	12234 <coda_cursor_get_record_field_available_status@plt>
   17384:	mov	r3, r0
   17388:	cmp	r3, #0
   1738c:	beq	17394 <dim_leave_array@@Base+0x600>
   17390:	bl	1bab8 <handle_coda_error@@Base>
   17394:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17398:	cmp	r3, #0
   1739c:	beq	17474 <dim_leave_array@@Base+0x6e0>
   173a0:	ldr	r3, [pc, #228]	; 1748c <dim_leave_array@@Base+0x6f8>
   173a4:	ldr	r3, [r4, r3]
   173a8:	ldr	r3, [r3, #3748]	; 0xea4
   173ac:	sub	r2, r3, #1
   173b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   173b4:	cmp	r2, r3
   173b8:	bne	173c4 <dim_leave_array@@Base+0x630>
   173bc:	mov	r3, #1
   173c0:	b	1747c <dim_leave_array@@Base+0x6e8>
   173c4:	ldr	r3, [pc, #192]	; 1748c <dim_leave_array@@Base+0x6f8>
   173c8:	ldr	r2, [r4, r3]
   173cc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   173d0:	add	r3, r3, #872	; 0x368
   173d4:	lsl	r3, r3, #2
   173d8:	add	r3, r2, r3
   173dc:	ldr	r3, [r3, #4]
   173e0:	mov	r1, r3
   173e4:	ldr	r3, [pc, #160]	; 1748c <dim_leave_array@@Base+0x6f8>
   173e8:	ldr	r3, [r4, r3]
   173ec:	add	r0, r3, #144	; 0x90
   173f0:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   173f4:	mov	r3, r0
   173f8:	cmp	r3, #0
   173fc:	beq	17404 <dim_leave_array@@Base+0x670>
   17400:	bl	1bab8 <handle_coda_error@@Base>
   17404:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17408:	add	r0, r3, #1
   1740c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   17410:	add	r3, r3, #1
   17414:	mov	r2, r3
   17418:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1741c:	bl	1702c <dim_leave_array@@Base+0x298>
   17420:	mov	r3, r0
   17424:	str	r3, [fp, #-40]	; 0xffffffd8
   17428:	ldr	r3, [pc, #92]	; 1748c <dim_leave_array@@Base+0x6f8>
   1742c:	ldr	r3, [r4, r3]
   17430:	add	r0, r3, #144	; 0x90
   17434:	bl	123fc <coda_cursor_goto_parent@plt>
   17438:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1743c:	cmp	r3, #0
   17440:	beq	17474 <dim_leave_array@@Base+0x6e0>
   17444:	mov	r3, #1
   17448:	b	1747c <dim_leave_array@@Base+0x6e8>
   1744c:	ldr	r3, [pc, #80]	; 174a4 <dim_leave_array@@Base+0x710>
   17450:	add	r3, pc, r3
   17454:	ldr	r2, [pc, #76]	; 174a8 <dim_leave_array@@Base+0x714>
   17458:	ldr	r1, [pc, #76]	; 174ac <dim_leave_array@@Base+0x718>
   1745c:	add	r1, pc, r1
   17460:	ldr	r0, [pc, #72]	; 174b0 <dim_leave_array@@Base+0x71c>
   17464:	add	r0, pc, r0
   17468:	bl	12660 <__assert_fail@plt>
   1746c:	nop			; (mov r0, r0)
   17470:	b	17478 <dim_leave_array@@Base+0x6e4>
   17474:	nop			; (mov r0, r0)
   17478:	mov	r3, #0
   1747c:	mov	r0, r3
   17480:	sub	sp, fp, #8
   17484:	pop	{r4, fp, pc}
   17488:			; <UNDEFINED> instruction: 0x00019fb0
   1748c:			; <UNDEFINED> instruction: 0x000001b4
   17490:	andeq	r7, r0, r8, asr r9
   17494:	andeq	r0, r0, lr, ror r2
   17498:	andeq	r7, r0, r8, asr r7
   1749c:	andeq	r7, r0, ip, asr #17
   174a0:	andeq	r0, r0, r4, ror #3
   174a4:	andeq	r7, r0, r0, ror #11
   174a8:	ldrdeq	r0, [r0], -r9
   174ac:	andeq	r7, r0, r0, ror #7
   174b0:	strdeq	r7, [r0], -r4

000174b4 <dim_record_field_available@@Base>:
   174b4:	push	{fp, lr}
   174b8:	add	fp, sp, #4
   174bc:	mov	r2, #0
   174c0:	mov	r1, #0
   174c4:	mov	r0, #0
   174c8:	bl	1702c <dim_leave_array@@Base+0x298>
   174cc:	mov	r3, r0
   174d0:	mov	r0, r3
   174d4:	pop	{fp, pc}
   174d8:	push	{r4, fp, lr}
   174dc:	add	fp, sp, #8
   174e0:	sub	sp, sp, #36	; 0x24
   174e4:	str	r0, [fp, #-24]	; 0xffffffe8
   174e8:	str	r1, [fp, #-28]	; 0xffffffe4
   174ec:	str	r2, [fp, #-32]	; 0xffffffe0
   174f0:	mov	r3, #0
   174f4:	str	r3, [fp, #-16]
   174f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   174fc:	cmp	r3, #0
   17500:	bne	17524 <dim_record_field_available@@Base+0x70>
   17504:	ldr	r3, [pc, #912]	; 1789c <dim_record_field_available@@Base+0x3e8>
   17508:	add	r3, pc, r3
   1750c:	mov	r2, #44	; 0x2c
   17510:	ldr	r1, [pc, #904]	; 178a0 <dim_record_field_available@@Base+0x3ec>
   17514:	add	r1, pc, r1
   17518:	ldr	r0, [pc, #900]	; 178a4 <dim_record_field_available@@Base+0x3f0>
   1751c:	add	r0, pc, r0
   17520:	bl	12660 <__assert_fail@plt>
   17524:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17528:	cmp	r3, #0
   1752c:	bne	17550 <dim_record_field_available@@Base+0x9c>
   17530:	ldr	r3, [pc, #880]	; 178a8 <dim_record_field_available@@Base+0x3f4>
   17534:	add	r3, pc, r3
   17538:	mov	r2, #45	; 0x2d
   1753c:	ldr	r1, [pc, #872]	; 178ac <dim_record_field_available@@Base+0x3f8>
   17540:	add	r1, pc, r1
   17544:	ldr	r0, [pc, #868]	; 178b0 <dim_record_field_available@@Base+0x3fc>
   17548:	add	r0, pc, r0
   1754c:	bl	12660 <__assert_fail@plt>
   17550:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17554:	cmp	r3, #0
   17558:	bne	17588 <dim_record_field_available@@Base+0xd4>
   1755c:	ldr	r3, [pc, #848]	; 178b4 <dim_record_field_available@@Base+0x400>
   17560:	add	r3, pc, r3
   17564:	mov	r2, #46	; 0x2e
   17568:	ldr	r1, [pc, #840]	; 178b8 <dim_record_field_available@@Base+0x404>
   1756c:	add	r1, pc, r1
   17570:	ldr	r0, [pc, #836]	; 178bc <dim_record_field_available@@Base+0x408>
   17574:	add	r0, pc, r0
   17578:	bl	12660 <__assert_fail@plt>
   1757c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17580:	add	r3, r3, #1
   17584:	str	r3, [fp, #-24]	; 0xffffffe8
   17588:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1758c:	ldrb	r3, [r3]
   17590:	cmp	r3, #32
   17594:	beq	1757c <dim_record_field_available@@Base+0xc8>
   17598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1759c:	ldrb	r3, [r3]
   175a0:	cmp	r3, #9
   175a4:	beq	1757c <dim_record_field_available@@Base+0xc8>
   175a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   175ac:	ldrb	r3, [r3]
   175b0:	cmp	r3, #10
   175b4:	beq	1757c <dim_record_field_available@@Base+0xc8>
   175b8:	b	175c8 <dim_record_field_available@@Base+0x114>
   175bc:	ldr	r3, [fp, #-16]
   175c0:	add	r3, r3, #1
   175c4:	str	r3, [fp, #-16]
   175c8:	ldr	r3, [fp, #-16]
   175cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175d0:	add	r3, r2, r3
   175d4:	ldrb	r3, [r3]
   175d8:	cmp	r3, #0
   175dc:	beq	17628 <dim_record_field_available@@Base+0x174>
   175e0:	ldr	r3, [fp, #-16]
   175e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175e8:	add	r3, r2, r3
   175ec:	ldrb	r3, [r3]
   175f0:	cmp	r3, #46	; 0x2e
   175f4:	beq	17628 <dim_record_field_available@@Base+0x174>
   175f8:	ldr	r3, [fp, #-16]
   175fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17600:	add	r3, r2, r3
   17604:	ldrb	r3, [r3]
   17608:	cmp	r3, #59	; 0x3b
   1760c:	beq	17628 <dim_record_field_available@@Base+0x174>
   17610:	ldr	r3, [fp, #-16]
   17614:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17618:	add	r3, r2, r3
   1761c:	ldrb	r3, [r3]
   17620:	cmp	r3, #44	; 0x2c
   17624:	bne	175bc <dim_record_field_available@@Base+0x108>
   17628:	ldr	r3, [fp, #-16]
   1762c:	cmp	r3, #0
   17630:	ble	17884 <dim_record_field_available@@Base+0x3d0>
   17634:	ldr	r3, [fp, #-16]
   17638:	str	r3, [fp, #-20]	; 0xffffffec
   1763c:	mov	r0, #12
   17640:	bl	123cc <malloc@plt>
   17644:	mov	r3, r0
   17648:	mov	r2, r3
   1764c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17650:	str	r2, [r3]
   17654:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17658:	ldr	r3, [r3]
   1765c:	cmp	r3, #0
   17660:	bne	1768c <dim_record_field_available@@Base+0x1d8>
   17664:	mov	r3, #69	; 0x45
   17668:	str	r3, [sp]
   1766c:	ldr	r3, [pc, #588]	; 178c0 <dim_record_field_available@@Base+0x40c>
   17670:	add	r3, pc, r3
   17674:	mov	r2, #12
   17678:	ldr	r1, [pc, #580]	; 178c4 <dim_record_field_available@@Base+0x410>
   1767c:	add	r1, pc, r1
   17680:	mvn	r0, #0
   17684:	bl	1224c <coda_set_error@plt>
   17688:	bl	1bab8 <handle_coda_error@@Base>
   1768c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17690:	ldr	r4, [r3]
   17694:	ldr	r3, [fp, #-16]
   17698:	add	r3, r3, #1
   1769c:	mov	r0, r3
   176a0:	bl	123cc <malloc@plt>
   176a4:	mov	r3, r0
   176a8:	str	r3, [r4]
   176ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   176b0:	ldr	r3, [r3]
   176b4:	ldr	r3, [r3]
   176b8:	cmp	r3, #0
   176bc:	bne	176ec <dim_record_field_available@@Base+0x238>
   176c0:	ldr	r3, [fp, #-16]
   176c4:	add	r2, r3, #1
   176c8:	mov	r3, #76	; 0x4c
   176cc:	str	r3, [sp]
   176d0:	ldr	r3, [pc, #496]	; 178c8 <dim_record_field_available@@Base+0x414>
   176d4:	add	r3, pc, r3
   176d8:	ldr	r1, [pc, #492]	; 178cc <dim_record_field_available@@Base+0x418>
   176dc:	add	r1, pc, r1
   176e0:	mvn	r0, #0
   176e4:	bl	1224c <coda_set_error@plt>
   176e8:	bl	1bab8 <handle_coda_error@@Base>
   176ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   176f0:	ldr	r3, [r3]
   176f4:	ldr	r3, [r3]
   176f8:	ldr	r2, [fp, #-16]
   176fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17700:	mov	r0, r3
   17704:	bl	124c8 <strncpy@plt>
   17708:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1770c:	ldr	r3, [r3]
   17710:	mov	r2, #0
   17714:	str	r2, [r3, #4]
   17718:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1771c:	ldr	r3, [r3]
   17720:	mov	r2, #0
   17724:	str	r2, [r3, #8]
   17728:	b	17738 <dim_record_field_available@@Base+0x284>
   1772c:	ldr	r3, [fp, #-16]
   17730:	sub	r3, r3, #1
   17734:	str	r3, [fp, #-16]
   17738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1773c:	ldr	r3, [r3]
   17740:	ldr	r2, [r3]
   17744:	ldr	r3, [fp, #-16]
   17748:	sub	r3, r3, #1
   1774c:	add	r3, r2, r3
   17750:	ldrb	r3, [r3]
   17754:	cmp	r3, #32
   17758:	beq	1772c <dim_record_field_available@@Base+0x278>
   1775c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17760:	ldr	r3, [r3]
   17764:	ldr	r2, [r3]
   17768:	ldr	r3, [fp, #-16]
   1776c:	sub	r3, r3, #1
   17770:	add	r3, r2, r3
   17774:	ldrb	r3, [r3]
   17778:	cmp	r3, #9
   1777c:	beq	1772c <dim_record_field_available@@Base+0x278>
   17780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17784:	ldr	r3, [r3]
   17788:	ldr	r2, [r3]
   1778c:	ldr	r3, [fp, #-16]
   17790:	sub	r3, r3, #1
   17794:	add	r3, r2, r3
   17798:	ldrb	r3, [r3]
   1779c:	cmp	r3, #10
   177a0:	beq	1772c <dim_record_field_available@@Base+0x278>
   177a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   177a8:	ldr	r3, [r3]
   177ac:	ldr	r2, [r3]
   177b0:	ldr	r3, [fp, #-16]
   177b4:	add	r3, r2, r3
   177b8:	mov	r2, #0
   177bc:	strb	r2, [r3]
   177c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   177c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177c8:	add	r3, r2, r3
   177cc:	ldrb	r3, [r3]
   177d0:	cmp	r3, #46	; 0x2e
   177d4:	bne	17820 <dim_record_field_available@@Base+0x36c>
   177d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   177dc:	add	r3, r3, #1
   177e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177e4:	add	r0, r2, r3
   177e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   177ec:	ldr	r3, [r3]
   177f0:	add	r3, r3, #4
   177f4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   177f8:	mov	r1, r3
   177fc:	bl	174d8 <dim_record_field_available@@Base+0x24>
   17800:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17804:	ldr	r3, [r3]
   17808:	ldr	r3, [r3, #4]
   1780c:	cmp	r3, #0
   17810:	bne	17890 <dim_record_field_available@@Base+0x3dc>
   17814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17818:	bl	17b10 <codadump_filter_remove@@Base>
   1781c:	b	17890 <dim_record_field_available@@Base+0x3dc>
   17820:	ldr	r3, [fp, #-20]	; 0xffffffec
   17824:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17828:	add	r3, r2, r3
   1782c:	ldrb	r3, [r3]
   17830:	cmp	r3, #59	; 0x3b
   17834:	beq	17850 <dim_record_field_available@@Base+0x39c>
   17838:	ldr	r3, [fp, #-20]	; 0xffffffec
   1783c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17840:	add	r3, r2, r3
   17844:	ldrb	r3, [r3]
   17848:	cmp	r3, #44	; 0x2c
   1784c:	bne	1786c <dim_record_field_available@@Base+0x3b8>
   17850:	ldr	r3, [fp, #-20]	; 0xffffffec
   17854:	add	r3, r3, #1
   17858:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1785c:	add	r2, r2, r3
   17860:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17864:	str	r2, [r3]
   17868:	b	17890 <dim_record_field_available@@Base+0x3dc>
   1786c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17870:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17874:	add	r2, r2, r3
   17878:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1787c:	str	r2, [r3]
   17880:	b	17890 <dim_record_field_available@@Base+0x3dc>
   17884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17888:	mov	r2, #0
   1788c:	str	r2, [r3]
   17890:	nop			; (mov r0, r0)
   17894:	sub	sp, fp, #8
   17898:	pop	{r4, fp, pc}
   1789c:	andeq	r7, r0, r0, asr r6
   178a0:	andeq	r7, r0, r0, asr #10
   178a4:	muleq	r0, ip, r5
   178a8:	andeq	r7, r0, r4, lsr #12
   178ac:	andeq	r7, r0, r4, lsl r5
   178b0:	andeq	r7, r0, r4, lsl #11
   178b4:	strdeq	r7, [r0], -r8
   178b8:	andeq	r7, r0, r8, ror #9
   178bc:	andeq	r7, r0, r8, ror #10
   178c0:	andeq	r7, r0, r4, ror #7
   178c4:	andeq	r7, r0, r0, ror r4
   178c8:	andeq	r7, r0, r0, lsl #7
   178cc:	andeq	r7, r0, r8, asr #8
   178d0:	push	{fp, lr}
   178d4:	add	fp, sp, #4
   178d8:	sub	sp, sp, #8
   178dc:	str	r0, [fp, #-8]
   178e0:	str	r1, [fp, #-12]
   178e4:	ldr	r3, [fp, #-8]
   178e8:	cmp	r3, #0
   178ec:	bne	17910 <dim_record_field_available@@Base+0x45c>
   178f0:	ldr	r3, [pc, #316]	; 17a34 <dim_record_field_available@@Base+0x580>
   178f4:	add	r3, pc, r3
   178f8:	mov	r2, #117	; 0x75
   178fc:	ldr	r1, [pc, #308]	; 17a38 <dim_record_field_available@@Base+0x584>
   17900:	add	r1, pc, r1
   17904:	ldr	r0, [pc, #304]	; 17a3c <dim_record_field_available@@Base+0x588>
   17908:	add	r0, pc, r0
   1790c:	bl	12660 <__assert_fail@plt>
   17910:	ldr	r3, [fp, #-12]
   17914:	cmp	r3, #0
   17918:	beq	17a28 <dim_record_field_available@@Base+0x574>
   1791c:	ldr	r3, [fp, #-8]
   17920:	ldr	r3, [r3]
   17924:	cmp	r3, #0
   17928:	bne	1793c <dim_record_field_available@@Base+0x488>
   1792c:	ldr	r2, [fp, #-12]
   17930:	ldr	r3, [fp, #-8]
   17934:	str	r2, [r3]
   17938:	b	17a2c <dim_record_field_available@@Base+0x578>
   1793c:	ldr	r3, [fp, #-8]
   17940:	ldr	r3, [r3]
   17944:	ldr	r2, [r3]
   17948:	ldr	r3, [fp, #-12]
   1794c:	ldr	r3, [r3]
   17950:	mov	r1, r3
   17954:	mov	r0, r2
   17958:	bl	12210 <strcmp@plt>
   1795c:	mov	r3, r0
   17960:	cmp	r3, #0
   17964:	bne	179e0 <dim_record_field_available@@Base+0x52c>
   17968:	ldr	r3, [fp, #-8]
   1796c:	ldr	r3, [r3]
   17970:	ldr	r3, [r3, #4]
   17974:	cmp	r3, #0
   17978:	beq	179d0 <dim_record_field_available@@Base+0x51c>
   1797c:	ldr	r3, [fp, #-12]
   17980:	ldr	r3, [r3, #4]
   17984:	cmp	r3, #0
   17988:	beq	179bc <dim_record_field_available@@Base+0x508>
   1798c:	ldr	r3, [fp, #-8]
   17990:	ldr	r3, [r3]
   17994:	add	r2, r3, #4
   17998:	ldr	r3, [fp, #-12]
   1799c:	ldr	r3, [r3, #4]
   179a0:	mov	r1, r3
   179a4:	mov	r0, r2
   179a8:	bl	178d0 <dim_record_field_available@@Base+0x41c>
   179ac:	ldr	r3, [fp, #-12]
   179b0:	mov	r2, #0
   179b4:	str	r2, [r3, #4]
   179b8:	b	179d0 <dim_record_field_available@@Base+0x51c>
   179bc:	ldr	r3, [fp, #-8]
   179c0:	ldr	r3, [r3]
   179c4:	add	r3, r3, #4
   179c8:	mov	r0, r3
   179cc:	bl	17b10 <codadump_filter_remove@@Base>
   179d0:	sub	r3, fp, #12
   179d4:	mov	r0, r3
   179d8:	bl	17b10 <codadump_filter_remove@@Base>
   179dc:	b	17a2c <dim_record_field_available@@Base+0x578>
   179e0:	ldr	r3, [fp, #-8]
   179e4:	ldr	r3, [r3]
   179e8:	ldr	r3, [r3, #8]
   179ec:	cmp	r3, #0
   179f0:	beq	17a14 <dim_record_field_available@@Base+0x560>
   179f4:	ldr	r3, [fp, #-8]
   179f8:	ldr	r3, [r3]
   179fc:	add	r3, r3, #8
   17a00:	ldr	r2, [fp, #-12]
   17a04:	mov	r1, r2
   17a08:	mov	r0, r3
   17a0c:	bl	178d0 <dim_record_field_available@@Base+0x41c>
   17a10:	b	17a2c <dim_record_field_available@@Base+0x578>
   17a14:	ldr	r3, [fp, #-8]
   17a18:	ldr	r3, [r3]
   17a1c:	ldr	r2, [fp, #-12]
   17a20:	str	r2, [r3, #8]
   17a24:	b	17a2c <dim_record_field_available@@Base+0x578>
   17a28:	nop			; (mov r0, r0)
   17a2c:	sub	sp, fp, #4
   17a30:	pop	{fp, pc}
   17a34:	andeq	r7, r0, r4, ror r2
   17a38:	andeq	r7, r0, r4, asr r1
   17a3c:	andeq	r7, r0, r4, asr #3
   17a40:	push	{fp, lr}
   17a44:	add	fp, sp, #4
   17a48:	sub	sp, sp, #16
   17a4c:	str	r0, [fp, #-16]
   17a50:	str	r1, [fp, #-20]	; 0xffffffec
   17a54:	mov	r3, #0
   17a58:	str	r3, [fp, #-8]
   17a5c:	ldr	r3, [fp, #-16]
   17a60:	str	r3, [fp, #-12]
   17a64:	ldr	r3, [fp, #-16]
   17a68:	cmp	r3, #0
   17a6c:	beq	17acc <dim_record_field_available@@Base+0x618>
   17a70:	b	17ab8 <dim_record_field_available@@Base+0x604>
   17a74:	ldr	r3, [fp, #-12]
   17a78:	sub	r2, fp, #12
   17a7c:	sub	r1, fp, #8
   17a80:	mov	r0, r3
   17a84:	bl	174d8 <dim_record_field_available@@Base+0x24>
   17a88:	ldr	r3, [fp, #-8]
   17a8c:	cmp	r3, #0
   17a90:	bne	17aa0 <dim_record_field_available@@Base+0x5ec>
   17a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   17a98:	bl	17b10 <codadump_filter_remove@@Base>
   17a9c:	b	17ad0 <dim_record_field_available@@Base+0x61c>
   17aa0:	ldr	r3, [fp, #-8]
   17aa4:	mov	r1, r3
   17aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17aac:	bl	178d0 <dim_record_field_available@@Base+0x41c>
   17ab0:	mov	r3, #0
   17ab4:	str	r3, [fp, #-8]
   17ab8:	ldr	r3, [fp, #-12]
   17abc:	ldrb	r3, [r3]
   17ac0:	cmp	r3, #0
   17ac4:	bne	17a74 <dim_record_field_available@@Base+0x5c0>
   17ac8:	b	17ad0 <dim_record_field_available@@Base+0x61c>
   17acc:	nop			; (mov r0, r0)
   17ad0:	sub	sp, fp, #4
   17ad4:	pop	{fp, pc}

00017ad8 <codadump_filter_create@@Base>:
   17ad8:	push	{fp, lr}
   17adc:	add	fp, sp, #4
   17ae0:	sub	sp, sp, #16
   17ae4:	str	r0, [fp, #-16]
   17ae8:	mov	r3, #0
   17aec:	str	r3, [fp, #-8]
   17af0:	sub	r3, fp, #8
   17af4:	mov	r1, r3
   17af8:	ldr	r0, [fp, #-16]
   17afc:	bl	17a40 <dim_record_field_available@@Base+0x58c>
   17b00:	ldr	r3, [fp, #-8]
   17b04:	mov	r0, r3
   17b08:	sub	sp, fp, #4
   17b0c:	pop	{fp, pc}

00017b10 <codadump_filter_remove@@Base>:
   17b10:	push	{fp, lr}
   17b14:	add	fp, sp, #4
   17b18:	sub	sp, sp, #8
   17b1c:	str	r0, [fp, #-8]
   17b20:	ldr	r3, [fp, #-8]
   17b24:	cmp	r3, #0
   17b28:	bne	17b4c <codadump_filter_remove@@Base+0x3c>
   17b2c:	ldr	r3, [pc, #216]	; 17c0c <codadump_filter_remove@@Base+0xfc>
   17b30:	add	r3, pc, r3
   17b34:	mov	r2, #192	; 0xc0
   17b38:	ldr	r1, [pc, #208]	; 17c10 <codadump_filter_remove@@Base+0x100>
   17b3c:	add	r1, pc, r1
   17b40:	ldr	r0, [pc, #204]	; 17c14 <codadump_filter_remove@@Base+0x104>
   17b44:	add	r0, pc, r0
   17b48:	bl	12660 <__assert_fail@plt>
   17b4c:	ldr	r3, [fp, #-8]
   17b50:	ldr	r3, [r3]
   17b54:	cmp	r3, #0
   17b58:	beq	17c00 <codadump_filter_remove@@Base+0xf0>
   17b5c:	ldr	r3, [fp, #-8]
   17b60:	ldr	r3, [r3]
   17b64:	ldr	r3, [r3, #8]
   17b68:	cmp	r3, #0
   17b6c:	beq	17b84 <codadump_filter_remove@@Base+0x74>
   17b70:	ldr	r3, [fp, #-8]
   17b74:	ldr	r3, [r3]
   17b78:	add	r3, r3, #8
   17b7c:	mov	r0, r3
   17b80:	bl	17b10 <codadump_filter_remove@@Base>
   17b84:	ldr	r3, [fp, #-8]
   17b88:	ldr	r3, [r3]
   17b8c:	ldr	r3, [r3, #4]
   17b90:	cmp	r3, #0
   17b94:	beq	17bac <codadump_filter_remove@@Base+0x9c>
   17b98:	ldr	r3, [fp, #-8]
   17b9c:	ldr	r3, [r3]
   17ba0:	add	r3, r3, #4
   17ba4:	mov	r0, r3
   17ba8:	bl	17b10 <codadump_filter_remove@@Base>
   17bac:	ldr	r3, [fp, #-8]
   17bb0:	ldr	r3, [r3]
   17bb4:	ldr	r3, [r3]
   17bb8:	cmp	r3, #0
   17bbc:	beq	17be4 <codadump_filter_remove@@Base+0xd4>
   17bc0:	ldr	r3, [fp, #-8]
   17bc4:	ldr	r3, [r3]
   17bc8:	ldr	r3, [r3]
   17bcc:	mov	r0, r3
   17bd0:	bl	12294 <free@plt>
   17bd4:	ldr	r3, [fp, #-8]
   17bd8:	ldr	r3, [r3]
   17bdc:	mov	r2, #0
   17be0:	str	r2, [r3]
   17be4:	ldr	r3, [fp, #-8]
   17be8:	ldr	r3, [r3]
   17bec:	mov	r0, r3
   17bf0:	bl	12294 <free@plt>
   17bf4:	ldr	r3, [fp, #-8]
   17bf8:	mov	r2, #0
   17bfc:	str	r2, [r3]
   17c00:	nop			; (mov r0, r0)
   17c04:	sub	sp, fp, #4
   17c08:	pop	{fp, pc}
   17c0c:	andeq	r7, r0, r4, asr #32
   17c10:	andeq	r6, r0, r8, lsl pc
   17c14:	andeq	r6, r0, r8, lsl #31

00017c18 <codadump_filter_get_fieldname@@Base>:
   17c18:	push	{fp, lr}
   17c1c:	add	fp, sp, #4
   17c20:	sub	sp, sp, #8
   17c24:	str	r0, [fp, #-8]
   17c28:	ldr	r3, [fp, #-8]
   17c2c:	cmp	r3, #0
   17c30:	bne	17c54 <codadump_filter_get_fieldname@@Base+0x3c>
   17c34:	ldr	r3, [pc, #44]	; 17c68 <codadump_filter_get_fieldname@@Base+0x50>
   17c38:	add	r3, pc, r3
   17c3c:	mov	r2, #216	; 0xd8
   17c40:	ldr	r1, [pc, #36]	; 17c6c <codadump_filter_get_fieldname@@Base+0x54>
   17c44:	add	r1, pc, r1
   17c48:	ldr	r0, [pc, #32]	; 17c70 <codadump_filter_get_fieldname@@Base+0x58>
   17c4c:	add	r0, pc, r0
   17c50:	bl	12660 <__assert_fail@plt>
   17c54:	ldr	r3, [fp, #-8]
   17c58:	ldr	r3, [r3]
   17c5c:	mov	r0, r3
   17c60:	sub	sp, fp, #4
   17c64:	pop	{fp, pc}
   17c68:	andeq	r6, r0, r4, asr pc
   17c6c:	andeq	r6, r0, r0, lsl lr
   17c70:	andeq	r6, r0, r0, lsl #29

00017c74 <codadump_filter_get_subfilter@@Base>:
   17c74:	push	{fp, lr}
   17c78:	add	fp, sp, #4
   17c7c:	sub	sp, sp, #8
   17c80:	str	r0, [fp, #-8]
   17c84:	ldr	r3, [fp, #-8]
   17c88:	cmp	r3, #0
   17c8c:	bne	17cb0 <codadump_filter_get_subfilter@@Base+0x3c>
   17c90:	ldr	r3, [pc, #44]	; 17cc4 <codadump_filter_get_subfilter@@Base+0x50>
   17c94:	add	r3, pc, r3
   17c98:	mov	r2, #223	; 0xdf
   17c9c:	ldr	r1, [pc, #36]	; 17cc8 <codadump_filter_get_subfilter@@Base+0x54>
   17ca0:	add	r1, pc, r1
   17ca4:	ldr	r0, [pc, #32]	; 17ccc <codadump_filter_get_subfilter@@Base+0x58>
   17ca8:	add	r0, pc, r0
   17cac:	bl	12660 <__assert_fail@plt>
   17cb0:	ldr	r3, [fp, #-8]
   17cb4:	ldr	r3, [r3, #4]
   17cb8:	mov	r0, r3
   17cbc:	sub	sp, fp, #4
   17cc0:	pop	{fp, pc}
   17cc4:	andeq	r6, r0, r8, lsl pc
   17cc8:			; <UNDEFINED> instruction: 0x00006db4
   17ccc:	andeq	r6, r0, r4, lsr #28

00017cd0 <codadump_filter_get_next_filter@@Base>:
   17cd0:	push	{fp, lr}
   17cd4:	add	fp, sp, #4
   17cd8:	sub	sp, sp, #8
   17cdc:	str	r0, [fp, #-8]
   17ce0:	ldr	r3, [fp, #-8]
   17ce4:	cmp	r3, #0
   17ce8:	bne	17d0c <codadump_filter_get_next_filter@@Base+0x3c>
   17cec:	ldr	r3, [pc, #44]	; 17d20 <codadump_filter_get_next_filter@@Base+0x50>
   17cf0:	add	r3, pc, r3
   17cf4:	mov	r2, #230	; 0xe6
   17cf8:	ldr	r1, [pc, #36]	; 17d24 <codadump_filter_get_next_filter@@Base+0x54>
   17cfc:	add	r1, pc, r1
   17d00:	ldr	r0, [pc, #32]	; 17d28 <codadump_filter_get_next_filter@@Base+0x58>
   17d04:	add	r0, pc, r0
   17d08:	bl	12660 <__assert_fail@plt>
   17d0c:	ldr	r3, [fp, #-8]
   17d10:	ldr	r3, [r3, #8]
   17d14:	mov	r0, r3
   17d18:	sub	sp, fp, #4
   17d1c:	pop	{fp, pc}
   17d20:	ldrdeq	r6, [r0], -ip
   17d24:	andeq	r6, r0, r8, asr sp
   17d28:	andeq	r6, r0, r8, asr #27
   17d2c:	push	{r0, r1, r2, r3}
   17d30:	push	{fp, lr}
   17d34:	add	fp, sp, #4
   17d38:	sub	sp, sp, #8
   17d3c:	ldr	r2, [pc, #64]	; 17d84 <codadump_filter_get_next_filter@@Base+0xb4>
   17d40:	add	r2, pc, r2
   17d44:	add	r3, fp, #8
   17d48:	str	r3, [fp, #-12]
   17d4c:	ldr	r3, [pc, #52]	; 17d88 <codadump_filter_get_next_filter@@Base+0xb8>
   17d50:	ldr	r3, [r2, r3]
   17d54:	ldr	r3, [r3]
   17d58:	ldr	r2, [fp, #-12]
   17d5c:	ldr	r1, [fp, #4]
   17d60:	mov	r0, r3
   17d64:	bl	12558 <vfprintf@plt>
   17d68:	str	r0, [fp, #-8]
   17d6c:	ldr	r3, [fp, #-8]
   17d70:	mov	r0, r3
   17d74:	sub	sp, fp, #4
   17d78:	pop	{fp, lr}
   17d7c:	add	sp, sp, #16
   17d80:	bx	lr
   17d84:			; <UNDEFINED> instruction: 0x000192b8
   17d88:			; <UNDEFINED> instruction: 0x000001bc
   17d8c:	push	{fp, lr}
   17d90:	add	fp, sp, #4
   17d94:	sub	sp, sp, #16
   17d98:	str	r0, [fp, #-16]
   17d9c:	str	r1, [fp, #-20]	; 0xffffffec
   17da0:	mov	r3, #0
   17da4:	str	r3, [fp, #-8]
   17da8:	b	17ef0 <codadump_filter_get_next_filter@@Base+0x220>
   17dac:	ldr	r3, [fp, #-8]
   17db0:	ldr	r2, [fp, #-16]
   17db4:	add	r3, r2, r3
   17db8:	ldrb	r3, [r3]
   17dbc:	strb	r3, [fp, #-9]
   17dc0:	ldrb	r3, [fp, #-9]
   17dc4:	cmp	r3, #12
   17dc8:	beq	17e20 <codadump_filter_get_next_filter@@Base+0x150>
   17dcc:	cmp	r3, #12
   17dd0:	bgt	17df0 <codadump_filter_get_next_filter@@Base+0x120>
   17dd4:	cmp	r3, #9
   17dd8:	beq	17e5c <codadump_filter_get_next_filter@@Base+0x18c>
   17ddc:	cmp	r3, #10
   17de0:	beq	17e34 <codadump_filter_get_next_filter@@Base+0x164>
   17de4:	cmp	r3, #8
   17de8:	beq	17e0c <codadump_filter_get_next_filter@@Base+0x13c>
   17dec:	b	17e98 <codadump_filter_get_next_filter@@Base+0x1c8>
   17df0:	cmp	r3, #34	; 0x22
   17df4:	beq	17e70 <codadump_filter_get_next_filter@@Base+0x1a0>
   17df8:	cmp	r3, #92	; 0x5c
   17dfc:	beq	17e84 <codadump_filter_get_next_filter@@Base+0x1b4>
   17e00:	cmp	r3, #13
   17e04:	beq	17e48 <codadump_filter_get_next_filter@@Base+0x178>
   17e08:	b	17e98 <codadump_filter_get_next_filter@@Base+0x1c8>
   17e0c:	ldr	r3, [pc, #248]	; 17f0c <codadump_filter_get_next_filter@@Base+0x23c>
   17e10:	add	r3, pc, r3
   17e14:	mov	r0, r3
   17e18:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17e1c:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17e20:	ldr	r3, [pc, #232]	; 17f10 <codadump_filter_get_next_filter@@Base+0x240>
   17e24:	add	r3, pc, r3
   17e28:	mov	r0, r3
   17e2c:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17e30:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17e34:	ldr	r3, [pc, #216]	; 17f14 <codadump_filter_get_next_filter@@Base+0x244>
   17e38:	add	r3, pc, r3
   17e3c:	mov	r0, r3
   17e40:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17e44:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17e48:	ldr	r3, [pc, #200]	; 17f18 <codadump_filter_get_next_filter@@Base+0x248>
   17e4c:	add	r3, pc, r3
   17e50:	mov	r0, r3
   17e54:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17e58:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17e5c:	ldr	r3, [pc, #184]	; 17f1c <codadump_filter_get_next_filter@@Base+0x24c>
   17e60:	add	r3, pc, r3
   17e64:	mov	r0, r3
   17e68:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17e6c:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17e70:	ldr	r3, [pc, #168]	; 17f20 <codadump_filter_get_next_filter@@Base+0x250>
   17e74:	add	r3, pc, r3
   17e78:	mov	r0, r3
   17e7c:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17e80:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17e84:	ldr	r3, [pc, #152]	; 17f24 <codadump_filter_get_next_filter@@Base+0x254>
   17e88:	add	r3, pc, r3
   17e8c:	mov	r0, r3
   17e90:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17e94:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17e98:	ldrb	r3, [fp, #-9]
   17e9c:	cmp	r3, #31
   17ea0:	bls	17ecc <codadump_filter_get_next_filter@@Base+0x1fc>
   17ea4:	ldrb	r3, [fp, #-9]
   17ea8:	cmp	r3, #126	; 0x7e
   17eac:	bhi	17ecc <codadump_filter_get_next_filter@@Base+0x1fc>
   17eb0:	ldrb	r3, [fp, #-9]
   17eb4:	mov	r1, r3
   17eb8:	ldr	r3, [pc, #104]	; 17f28 <codadump_filter_get_next_filter@@Base+0x258>
   17ebc:	add	r3, pc, r3
   17ec0:	mov	r0, r3
   17ec4:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17ec8:	b	17ee4 <codadump_filter_get_next_filter@@Base+0x214>
   17ecc:	ldrb	r3, [fp, #-9]
   17ed0:	mov	r1, r3
   17ed4:	ldr	r3, [pc, #80]	; 17f2c <codadump_filter_get_next_filter@@Base+0x25c>
   17ed8:	add	r3, pc, r3
   17edc:	mov	r0, r3
   17ee0:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17ee4:	ldr	r3, [fp, #-8]
   17ee8:	add	r3, r3, #1
   17eec:	str	r3, [fp, #-8]
   17ef0:	ldr	r2, [fp, #-8]
   17ef4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ef8:	cmp	r2, r3
   17efc:	blt	17dac <codadump_filter_get_next_filter@@Base+0xdc>
   17f00:	nop			; (mov r0, r0)
   17f04:	sub	sp, fp, #4
   17f08:	pop	{fp, pc}
   17f0c:	ldrdeq	r6, [r0], -ip
   17f10:	andeq	r6, r0, ip, asr #27
   17f14:			; <UNDEFINED> instruction: 0x00006dbc
   17f18:	andeq	r6, r0, ip, lsr #27
   17f1c:	muleq	r0, ip, sp
   17f20:	andeq	r6, r0, ip, lsl #27
   17f24:	andeq	r6, r0, ip, ror sp
   17f28:	andeq	r6, r0, ip, asr #26
   17f2c:	andeq	r6, r0, r4, lsr sp
   17f30:	push	{r4, r5, fp, lr}
   17f34:	add	fp, sp, #12
   17f38:	sub	sp, sp, #288	; 0x120
   17f3c:	str	r0, [fp, #-288]	; 0xfffffee0
   17f40:	mov	r3, #0
   17f44:	str	r3, [fp, #-48]	; 0xffffffd0
   17f48:	ldr	r3, [pc, #2656]	; 189b0 <codadump_filter_get_next_filter@@Base+0xce0>
   17f4c:	add	r3, pc, r3
   17f50:	ldr	r3, [r3]
   17f54:	cmp	r3, #0
   17f58:	beq	17fd0 <codadump_filter_get_next_filter@@Base+0x300>
   17f5c:	sub	r3, fp, #48	; 0x30
   17f60:	mov	r1, r3
   17f64:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17f68:	bl	12318 <coda_cursor_has_attributes@plt>
   17f6c:	mov	r3, r0
   17f70:	cmp	r3, #0
   17f74:	beq	17f7c <codadump_filter_get_next_filter@@Base+0x2ac>
   17f78:	bl	1bab8 <handle_coda_error@@Base>
   17f7c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17f80:	cmp	r3, #0
   17f84:	beq	17fd0 <codadump_filter_get_next_filter@@Base+0x300>
   17f88:	ldr	r3, [pc, #2596]	; 189b4 <codadump_filter_get_next_filter@@Base+0xce4>
   17f8c:	add	r3, pc, r3
   17f90:	mov	r0, r3
   17f94:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17f98:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17f9c:	bl	12498 <coda_cursor_goto_attributes@plt>
   17fa0:	mov	r3, r0
   17fa4:	cmp	r3, #0
   17fa8:	beq	17fb0 <codadump_filter_get_next_filter@@Base+0x2e0>
   17fac:	bl	1bab8 <handle_coda_error@@Base>
   17fb0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17fb4:	bl	17f30 <codadump_filter_get_next_filter@@Base+0x260>
   17fb8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17fbc:	bl	123fc <coda_cursor_goto_parent@plt>
   17fc0:	ldr	r3, [pc, #2544]	; 189b8 <codadump_filter_get_next_filter@@Base+0xce8>
   17fc4:	add	r3, pc, r3
   17fc8:	mov	r0, r3
   17fcc:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   17fd0:	sub	r3, fp, #44	; 0x2c
   17fd4:	mov	r1, r3
   17fd8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   17fdc:	bl	12324 <coda_cursor_get_type_class@plt>
   17fe0:	mov	r3, r0
   17fe4:	cmp	r3, #0
   17fe8:	beq	17ff0 <codadump_filter_get_next_filter@@Base+0x320>
   17fec:	bl	1bab8 <handle_coda_error@@Base>
   17ff0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   17ff4:	cmp	r3, #6
   17ff8:	addls	pc, pc, r3, lsl #2
   17ffc:	b	18988 <codadump_filter_get_next_filter@@Base+0xcb8>
   18000:	b	1801c <codadump_filter_get_next_filter@@Base+0x34c>
   18004:	b	18264 <codadump_filter_get_next_filter@@Base+0x594>
   18008:	b	183a0 <codadump_filter_get_next_filter@@Base+0x6d0>
   1800c:	b	183a0 <codadump_filter_get_next_filter@@Base+0x6d0>
   18010:	b	183a0 <codadump_filter_get_next_filter@@Base+0x6d0>
   18014:	b	183a0 <codadump_filter_get_next_filter@@Base+0x6d0>
   18018:	b	187dc <codadump_filter_get_next_filter@@Base+0xb0c>
   1801c:	ldr	r3, [pc, #2456]	; 189bc <codadump_filter_get_next_filter@@Base+0xcec>
   18020:	add	r3, pc, r3
   18024:	mov	r0, r3
   18028:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1802c:	sub	r3, fp, #52	; 0x34
   18030:	mov	r1, r3
   18034:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18038:	bl	1227c <coda_cursor_get_num_elements@plt>
   1803c:	mov	r3, r0
   18040:	cmp	r3, #0
   18044:	beq	1804c <codadump_filter_get_next_filter@@Base+0x37c>
   18048:	bl	1bab8 <handle_coda_error@@Base>
   1804c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18050:	cmp	r3, #0
   18054:	ble	18250 <codadump_filter_get_next_filter@@Base+0x580>
   18058:	sub	r3, fp, #56	; 0x38
   1805c:	mov	r1, r3
   18060:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18064:	bl	122dc <coda_cursor_get_type@plt>
   18068:	mov	r3, r0
   1806c:	cmp	r3, #0
   18070:	beq	18078 <codadump_filter_get_next_filter@@Base+0x3a8>
   18074:	bl	1bab8 <handle_coda_error@@Base>
   18078:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1807c:	sub	r2, fp, #60	; 0x3c
   18080:	mov	r1, r2
   18084:	mov	r0, r3
   18088:	bl	124e0 <coda_type_get_record_union_status@plt>
   1808c:	mov	r3, r0
   18090:	cmp	r3, #0
   18094:	beq	1809c <codadump_filter_get_next_filter@@Base+0x3cc>
   18098:	bl	1bab8 <handle_coda_error@@Base>
   1809c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   180a0:	cmp	r3, #0
   180a4:	beq	18138 <codadump_filter_get_next_filter@@Base+0x468>
   180a8:	sub	r3, fp, #64	; 0x40
   180ac:	mov	r1, r3
   180b0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   180b4:	bl	125dc <coda_cursor_get_available_union_field_index@plt>
   180b8:	mov	r3, r0
   180bc:	cmp	r3, #0
   180c0:	beq	180c8 <codadump_filter_get_next_filter@@Base+0x3f8>
   180c4:	bl	1bab8 <handle_coda_error@@Base>
   180c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   180cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   180d0:	sub	r2, fp, #68	; 0x44
   180d4:	mov	r0, r3
   180d8:	bl	12624 <coda_type_get_record_field_name@plt>
   180dc:	mov	r3, r0
   180e0:	cmp	r3, #0
   180e4:	beq	180ec <codadump_filter_get_next_filter@@Base+0x41c>
   180e8:	bl	1bab8 <handle_coda_error@@Base>
   180ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   180f0:	mov	r1, r3
   180f4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   180f8:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   180fc:	mov	r3, r0
   18100:	cmp	r3, #0
   18104:	beq	1810c <codadump_filter_get_next_filter@@Base+0x43c>
   18108:	bl	1bab8 <handle_coda_error@@Base>
   1810c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   18110:	mov	r1, r3
   18114:	ldr	r3, [pc, #2212]	; 189c0 <codadump_filter_get_next_filter@@Base+0xcf0>
   18118:	add	r3, pc, r3
   1811c:	mov	r0, r3
   18120:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18124:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18128:	bl	17f30 <codadump_filter_get_next_filter@@Base+0x260>
   1812c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18130:	bl	123fc <coda_cursor_goto_parent@plt>
   18134:	b	18250 <codadump_filter_get_next_filter@@Base+0x580>
   18138:	mov	r3, #1
   1813c:	str	r3, [fp, #-16]
   18140:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18144:	bl	12390 <coda_cursor_goto_first_record_field@plt>
   18148:	mov	r3, r0
   1814c:	cmp	r3, #0
   18150:	beq	18158 <codadump_filter_get_next_filter@@Base+0x488>
   18154:	bl	1bab8 <handle_coda_error@@Base>
   18158:	mov	r3, #0
   1815c:	str	r3, [fp, #-64]	; 0xffffffc0
   18160:	b	18238 <codadump_filter_get_next_filter@@Base+0x568>
   18164:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18168:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1816c:	sub	r2, fp, #76	; 0x4c
   18170:	mov	r0, r3
   18174:	bl	1221c <coda_type_get_record_field_hidden_status@plt>
   18178:	mov	r3, r0
   1817c:	cmp	r3, #0
   18180:	beq	18188 <codadump_filter_get_next_filter@@Base+0x4b8>
   18184:	bl	1bab8 <handle_coda_error@@Base>
   18188:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1818c:	cmp	r3, #0
   18190:	bne	18200 <codadump_filter_get_next_filter@@Base+0x530>
   18194:	ldr	r3, [fp, #-16]
   18198:	cmp	r3, #0
   1819c:	bne	181b4 <codadump_filter_get_next_filter@@Base+0x4e4>
   181a0:	ldr	r3, [pc, #2076]	; 189c4 <codadump_filter_get_next_filter@@Base+0xcf4>
   181a4:	add	r3, pc, r3
   181a8:	mov	r0, r3
   181ac:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   181b0:	b	181bc <codadump_filter_get_next_filter@@Base+0x4ec>
   181b4:	mov	r3, #0
   181b8:	str	r3, [fp, #-16]
   181bc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   181c0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   181c4:	sub	r2, fp, #72	; 0x48
   181c8:	mov	r0, r3
   181cc:	bl	12624 <coda_type_get_record_field_name@plt>
   181d0:	mov	r3, r0
   181d4:	cmp	r3, #0
   181d8:	beq	181e0 <codadump_filter_get_next_filter@@Base+0x510>
   181dc:	bl	1bab8 <handle_coda_error@@Base>
   181e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   181e4:	mov	r1, r3
   181e8:	ldr	r3, [pc, #2008]	; 189c8 <codadump_filter_get_next_filter@@Base+0xcf8>
   181ec:	add	r3, pc, r3
   181f0:	mov	r0, r3
   181f4:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   181f8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   181fc:	bl	17f30 <codadump_filter_get_next_filter@@Base+0x260>
   18200:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18204:	sub	r2, r3, #1
   18208:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1820c:	cmp	r2, r3
   18210:	ble	1822c <codadump_filter_get_next_filter@@Base+0x55c>
   18214:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18218:	bl	12588 <coda_cursor_goto_next_record_field@plt>
   1821c:	mov	r3, r0
   18220:	cmp	r3, #0
   18224:	beq	1822c <codadump_filter_get_next_filter@@Base+0x55c>
   18228:	bl	1bab8 <handle_coda_error@@Base>
   1822c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   18230:	add	r3, r3, #1
   18234:	str	r3, [fp, #-64]	; 0xffffffc0
   18238:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1823c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   18240:	cmp	r2, r3
   18244:	blt	18164 <codadump_filter_get_next_filter@@Base+0x494>
   18248:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1824c:	bl	123fc <coda_cursor_goto_parent@plt>
   18250:	ldr	r3, [pc, #1908]	; 189cc <codadump_filter_get_next_filter@@Base+0xcfc>
   18254:	add	r3, pc, r3
   18258:	mov	r0, r3
   1825c:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18260:	b	18988 <codadump_filter_get_next_filter@@Base+0xcb8>
   18264:	ldr	r3, [pc, #1892]	; 189d0 <codadump_filter_get_next_filter@@Base+0xd00>
   18268:	add	r3, pc, r3
   1826c:	mov	r0, r3
   18270:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18274:	sub	r2, fp, #284	; 0x11c
   18278:	sub	r3, fp, #80	; 0x50
   1827c:	mov	r1, r3
   18280:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18284:	bl	12528 <coda_cursor_get_array_dim@plt>
   18288:	mov	r3, r0
   1828c:	cmp	r3, #0
   18290:	beq	18298 <codadump_filter_get_next_filter@@Base+0x5c8>
   18294:	bl	1bab8 <handle_coda_error@@Base>
   18298:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1829c:	cmp	r3, #0
   182a0:	blt	1838c <codadump_filter_get_next_filter@@Base+0x6bc>
   182a4:	mov	r3, #1
   182a8:	str	r3, [fp, #-20]	; 0xffffffec
   182ac:	mov	r3, #0
   182b0:	str	r3, [fp, #-24]	; 0xffffffe8
   182b4:	b	182e4 <codadump_filter_get_next_filter@@Base+0x614>
   182b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   182bc:	lsl	r3, r3, #2
   182c0:	sub	r2, fp, #12
   182c4:	add	r3, r2, r3
   182c8:	ldr	r2, [r3, #-272]	; 0xfffffef0
   182cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   182d0:	mul	r3, r2, r3
   182d4:	str	r3, [fp, #-20]	; 0xffffffec
   182d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   182dc:	add	r3, r3, #1
   182e0:	str	r3, [fp, #-24]	; 0xffffffe8
   182e4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   182e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   182ec:	cmp	r2, r3
   182f0:	blt	182b8 <codadump_filter_get_next_filter@@Base+0x5e8>
   182f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   182f8:	cmp	r3, #0
   182fc:	ble	1838c <codadump_filter_get_next_filter@@Base+0x6bc>
   18300:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18304:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   18308:	mov	r3, r0
   1830c:	cmp	r3, #0
   18310:	beq	18318 <codadump_filter_get_next_filter@@Base+0x648>
   18314:	bl	1bab8 <handle_coda_error@@Base>
   18318:	mov	r3, #0
   1831c:	str	r3, [fp, #-24]	; 0xffffffe8
   18320:	b	18374 <codadump_filter_get_next_filter@@Base+0x6a4>
   18324:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18328:	bl	17f30 <codadump_filter_get_next_filter@@Base+0x260>
   1832c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18330:	sub	r2, r3, #1
   18334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18338:	cmp	r2, r3
   1833c:	ble	18368 <codadump_filter_get_next_filter@@Base+0x698>
   18340:	ldr	r3, [pc, #1676]	; 189d4 <codadump_filter_get_next_filter@@Base+0xd04>
   18344:	add	r3, pc, r3
   18348:	mov	r0, r3
   1834c:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18350:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18354:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   18358:	mov	r3, r0
   1835c:	cmp	r3, #0
   18360:	beq	18368 <codadump_filter_get_next_filter@@Base+0x698>
   18364:	bl	1bab8 <handle_coda_error@@Base>
   18368:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1836c:	add	r3, r3, #1
   18370:	str	r3, [fp, #-24]	; 0xffffffe8
   18374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18378:	ldr	r3, [fp, #-20]	; 0xffffffec
   1837c:	cmp	r2, r3
   18380:	blt	18324 <codadump_filter_get_next_filter@@Base+0x654>
   18384:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18388:	bl	123fc <coda_cursor_goto_parent@plt>
   1838c:	ldr	r3, [pc, #1604]	; 189d8 <codadump_filter_get_next_filter@@Base+0xd08>
   18390:	add	r3, pc, r3
   18394:	mov	r0, r3
   18398:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1839c:	b	18988 <codadump_filter_get_next_filter@@Base+0xcb8>
   183a0:	sub	r3, fp, #84	; 0x54
   183a4:	mov	r1, r3
   183a8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   183ac:	bl	123c0 <coda_cursor_get_read_type@plt>
   183b0:	mov	r3, r0
   183b4:	cmp	r3, #0
   183b8:	beq	183c0 <codadump_filter_get_next_filter@@Base+0x6f0>
   183bc:	bl	1bab8 <handle_coda_error@@Base>
   183c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   183c4:	add	r3, r3, #1
   183c8:	cmp	r3, #13
   183cc:	addls	pc, pc, r3, lsl #2
   183d0:	b	1897c <codadump_filter_get_next_filter@@Base+0xcac>
   183d4:	b	187c4 <codadump_filter_get_next_filter@@Base+0xaf4>
   183d8:	b	18658 <codadump_filter_get_next_filter@@Base+0x988>
   183dc:	b	18694 <codadump_filter_get_next_filter@@Base+0x9c4>
   183e0:	b	18658 <codadump_filter_get_next_filter@@Base+0x988>
   183e4:	b	18694 <codadump_filter_get_next_filter@@Base+0x9c4>
   183e8:	b	18658 <codadump_filter_get_next_filter@@Base+0x988>
   183ec:	b	18694 <codadump_filter_get_next_filter@@Base+0x9c4>
   183f0:	b	186d0 <codadump_filter_get_next_filter@@Base+0xa00>
   183f4:	b	1871c <codadump_filter_get_next_filter@@Base+0xa4c>
   183f8:	b	18768 <codadump_filter_get_next_filter@@Base+0xa98>
   183fc:	b	18768 <codadump_filter_get_next_filter@@Base+0xa98>
   18400:	b	1840c <codadump_filter_get_next_filter@@Base+0x73c>
   18404:	b	18460 <codadump_filter_get_next_filter@@Base+0x790>
   18408:	b	1853c <codadump_filter_get_next_filter@@Base+0x86c>
   1840c:	sub	r3, fp, #85	; 0x55
   18410:	mov	r1, r3
   18414:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18418:	bl	124a4 <coda_cursor_read_char@plt>
   1841c:	mov	r3, r0
   18420:	cmp	r3, #0
   18424:	beq	1842c <codadump_filter_get_next_filter@@Base+0x75c>
   18428:	bl	1bab8 <handle_coda_error@@Base>
   1842c:	ldr	r3, [pc, #1448]	; 189dc <codadump_filter_get_next_filter@@Base+0xd0c>
   18430:	add	r3, pc, r3
   18434:	mov	r0, r3
   18438:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1843c:	sub	r3, fp, #85	; 0x55
   18440:	mov	r1, #1
   18444:	mov	r0, r3
   18448:	bl	17d8c <codadump_filter_get_next_filter@@Base+0xbc>
   1844c:	ldr	r3, [pc, #1420]	; 189e0 <codadump_filter_get_next_filter@@Base+0xd10>
   18450:	add	r3, pc, r3
   18454:	mov	r0, r3
   18458:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1845c:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   18460:	sub	r3, fp, #92	; 0x5c
   18464:	mov	r1, r3
   18468:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1846c:	bl	1242c <coda_cursor_get_string_length@plt>
   18470:	mov	r3, r0
   18474:	cmp	r3, #0
   18478:	beq	18480 <codadump_filter_get_next_filter@@Base+0x7b0>
   1847c:	bl	1bab8 <handle_coda_error@@Base>
   18480:	ldr	r3, [fp, #-92]	; 0xffffffa4
   18484:	add	r3, r3, #1
   18488:	mov	r0, r3
   1848c:	bl	123cc <malloc@plt>
   18490:	mov	r3, r0
   18494:	str	r3, [fp, #-28]	; 0xffffffe4
   18498:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1849c:	cmp	r3, #0
   184a0:	bne	184d0 <codadump_filter_get_next_filter@@Base+0x800>
   184a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   184a8:	add	r2, r3, #1
   184ac:	ldr	r3, [pc, #1328]	; 189e4 <codadump_filter_get_next_filter@@Base+0xd14>
   184b0:	str	r3, [sp]
   184b4:	ldr	r3, [pc, #1324]	; 189e8 <codadump_filter_get_next_filter@@Base+0xd18>
   184b8:	add	r3, pc, r3
   184bc:	ldr	r1, [pc, #1320]	; 189ec <codadump_filter_get_next_filter@@Base+0xd1c>
   184c0:	add	r1, pc, r1
   184c4:	mvn	r0, #0
   184c8:	bl	1224c <coda_set_error@plt>
   184cc:	bl	1bab8 <handle_coda_error@@Base>
   184d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   184d4:	add	r3, r3, #1
   184d8:	mov	r2, r3
   184dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   184e0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   184e4:	bl	123f0 <coda_cursor_read_string@plt>
   184e8:	mov	r3, r0
   184ec:	cmp	r3, #0
   184f0:	beq	184f8 <codadump_filter_get_next_filter@@Base+0x828>
   184f4:	bl	1bab8 <handle_coda_error@@Base>
   184f8:	ldr	r3, [pc, #1264]	; 189f0 <codadump_filter_get_next_filter@@Base+0xd20>
   184fc:	add	r3, pc, r3
   18500:	mov	r0, r3
   18504:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18508:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1850c:	mov	r1, r3
   18510:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18514:	bl	17d8c <codadump_filter_get_next_filter@@Base+0xbc>
   18518:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1851c:	mov	r1, r3
   18520:	ldr	r3, [pc, #1228]	; 189f4 <codadump_filter_get_next_filter@@Base+0xd24>
   18524:	add	r3, pc, r3
   18528:	mov	r0, r3
   1852c:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18530:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18534:	bl	12294 <free@plt>
   18538:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   1853c:	sub	r3, fp, #100	; 0x64
   18540:	mov	r1, r3
   18544:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18548:	bl	125ac <coda_cursor_get_bit_size@plt>
   1854c:	mov	r3, r0
   18550:	cmp	r3, #0
   18554:	beq	1855c <codadump_filter_get_next_filter@@Base+0x88c>
   18558:	bl	1bab8 <handle_coda_error@@Base>
   1855c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   18560:	lsr	r4, r2, #3
   18564:	orr	r4, r4, r3, lsl #29
   18568:	asr	r5, r3, #3
   1856c:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   18570:	mov	r0, #7
   18574:	mov	r1, #0
   18578:	and	r2, r2, r0
   1857c:	and	r3, r3, r1
   18580:	orrs	r3, r2, r3
   18584:	beq	18594 <codadump_filter_get_next_filter@@Base+0x8c4>
   18588:	mov	r2, #1
   1858c:	mov	r3, #0
   18590:	b	1859c <codadump_filter_get_next_filter@@Base+0x8cc>
   18594:	mov	r2, #0
   18598:	mov	r3, #0
   1859c:	adds	r2, r2, r4
   185a0:	adc	r3, r3, r5
   185a4:	strd	r2, [fp, #-36]	; 0xffffffdc
   185a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   185ac:	mov	r0, r3
   185b0:	bl	123cc <malloc@plt>
   185b4:	mov	r3, r0
   185b8:	str	r3, [fp, #-40]	; 0xffffffd8
   185bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   185c0:	cmp	r3, #0
   185c4:	bne	185f0 <codadump_filter_get_next_filter@@Base+0x920>
   185c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   185cc:	ldr	r3, [pc, #1060]	; 189f8 <codadump_filter_get_next_filter@@Base+0xd28>
   185d0:	str	r3, [sp]
   185d4:	ldr	r3, [pc, #1056]	; 189fc <codadump_filter_get_next_filter@@Base+0xd2c>
   185d8:	add	r3, pc, r3
   185dc:	ldr	r1, [pc, #1052]	; 18a00 <codadump_filter_get_next_filter@@Base+0xd30>
   185e0:	add	r1, pc, r1
   185e4:	mvn	r0, #0
   185e8:	bl	1224c <coda_set_error@plt>
   185ec:	bl	1bab8 <handle_coda_error@@Base>
   185f0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   185f4:	strd	r2, [sp]
   185f8:	mov	r2, #0
   185fc:	mov	r3, #0
   18600:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18604:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18608:	bl	12648 <coda_cursor_read_bits@plt>
   1860c:	mov	r3, r0
   18610:	cmp	r3, #0
   18614:	beq	1861c <codadump_filter_get_next_filter@@Base+0x94c>
   18618:	bl	1bab8 <handle_coda_error@@Base>
   1861c:	ldr	r3, [pc, #992]	; 18a04 <codadump_filter_get_next_filter@@Base+0xd34>
   18620:	add	r3, pc, r3
   18624:	mov	r0, r3
   18628:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1862c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18630:	mov	r1, r3
   18634:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18638:	bl	17d8c <codadump_filter_get_next_filter@@Base+0xbc>
   1863c:	ldr	r3, [pc, #964]	; 18a08 <codadump_filter_get_next_filter@@Base+0xd38>
   18640:	add	r3, pc, r3
   18644:	mov	r0, r3
   18648:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1864c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18650:	bl	12294 <free@plt>
   18654:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   18658:	sub	r3, fp, #104	; 0x68
   1865c:	mov	r1, r3
   18660:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18664:	bl	125e8 <coda_cursor_read_int32@plt>
   18668:	mov	r3, r0
   1866c:	cmp	r3, #0
   18670:	beq	18678 <codadump_filter_get_next_filter@@Base+0x9a8>
   18674:	bl	1bab8 <handle_coda_error@@Base>
   18678:	ldr	r3, [fp, #-104]	; 0xffffff98
   1867c:	mov	r1, r3
   18680:	ldr	r3, [pc, #900]	; 18a0c <codadump_filter_get_next_filter@@Base+0xd3c>
   18684:	add	r3, pc, r3
   18688:	mov	r0, r3
   1868c:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18690:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   18694:	sub	r3, fp, #108	; 0x6c
   18698:	mov	r1, r3
   1869c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   186a0:	bl	122b8 <coda_cursor_read_uint32@plt>
   186a4:	mov	r3, r0
   186a8:	cmp	r3, #0
   186ac:	beq	186b4 <codadump_filter_get_next_filter@@Base+0x9e4>
   186b0:	bl	1bab8 <handle_coda_error@@Base>
   186b4:	ldr	r3, [fp, #-108]	; 0xffffff94
   186b8:	mov	r1, r3
   186bc:	ldr	r3, [pc, #844]	; 18a10 <codadump_filter_get_next_filter@@Base+0xd40>
   186c0:	add	r3, pc, r3
   186c4:	mov	r0, r3
   186c8:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   186cc:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   186d0:	sub	r3, fp, #116	; 0x74
   186d4:	mov	r1, r3
   186d8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   186dc:	bl	1254c <coda_cursor_read_int64@plt>
   186e0:	mov	r3, r0
   186e4:	cmp	r3, #0
   186e8:	beq	186f0 <codadump_filter_get_next_filter@@Base+0xa20>
   186ec:	bl	1bab8 <handle_coda_error@@Base>
   186f0:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   186f4:	sub	r3, fp, #140	; 0x8c
   186f8:	mov	r2, r3
   186fc:	bl	12654 <coda_str64@plt>
   18700:	sub	r3, fp, #140	; 0x8c
   18704:	mov	r1, r3
   18708:	ldr	r3, [pc, #772]	; 18a14 <codadump_filter_get_next_filter@@Base+0xd44>
   1870c:	add	r3, pc, r3
   18710:	mov	r0, r3
   18714:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18718:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   1871c:	sub	r3, fp, #148	; 0x94
   18720:	mov	r1, r3
   18724:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18728:	bl	12438 <coda_cursor_read_uint64@plt>
   1872c:	mov	r3, r0
   18730:	cmp	r3, #0
   18734:	beq	1873c <codadump_filter_get_next_filter@@Base+0xa6c>
   18738:	bl	1bab8 <handle_coda_error@@Base>
   1873c:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   18740:	sub	r3, fp, #172	; 0xac
   18744:	mov	r2, r3
   18748:	bl	12288 <coda_str64u@plt>
   1874c:	sub	r3, fp, #172	; 0xac
   18750:	mov	r1, r3
   18754:	ldr	r3, [pc, #700]	; 18a18 <codadump_filter_get_next_filter@@Base+0xd48>
   18758:	add	r3, pc, r3
   1875c:	mov	r0, r3
   18760:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18764:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   18768:	sub	r3, fp, #180	; 0xb4
   1876c:	mov	r1, r3
   18770:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18774:	bl	12444 <coda_cursor_read_double@plt>
   18778:	mov	r3, r0
   1877c:	cmp	r3, #0
   18780:	beq	18788 <codadump_filter_get_next_filter@@Base+0xab8>
   18784:	bl	1bab8 <handle_coda_error@@Base>
   18788:	ldr	r3, [fp, #-84]	; 0xffffffac
   1878c:	cmp	r3, #8
   18790:	bne	187ac <codadump_filter_get_next_filter@@Base+0xadc>
   18794:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   18798:	ldr	r1, [pc, #636]	; 18a1c <codadump_filter_get_next_filter@@Base+0xd4c>
   1879c:	add	r1, pc, r1
   187a0:	mov	r0, r1
   187a4:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   187a8:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   187ac:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   187b0:	ldr	r1, [pc, #616]	; 18a20 <codadump_filter_get_next_filter@@Base+0xd50>
   187b4:	add	r1, pc, r1
   187b8:	mov	r0, r1
   187bc:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   187c0:	b	187d8 <codadump_filter_get_next_filter@@Base+0xb08>
   187c4:	ldr	r3, [pc, #600]	; 18a24 <codadump_filter_get_next_filter@@Base+0xd54>
   187c8:	add	r3, pc, r3
   187cc:	mov	r0, r3
   187d0:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   187d4:	nop			; (mov r0, r0)
   187d8:	b	1897c <codadump_filter_get_next_filter@@Base+0xcac>
   187dc:	sub	r3, fp, #184	; 0xb8
   187e0:	mov	r1, r3
   187e4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   187e8:	bl	12360 <coda_cursor_get_special_type@plt>
   187ec:	mov	r3, r0
   187f0:	cmp	r3, #0
   187f4:	beq	187fc <codadump_filter_get_next_filter@@Base+0xb2c>
   187f8:	bl	1bab8 <handle_coda_error@@Base>
   187fc:	ldr	r3, [fp, #-184]	; 0xffffff48
   18800:	cmp	r3, #3
   18804:	addls	pc, pc, r3, lsl #2
   18808:	b	18984 <codadump_filter_get_next_filter@@Base+0xcb4>
   1880c:	b	1881c <codadump_filter_get_next_filter@@Base+0xb4c>
   18810:	b	18830 <codadump_filter_get_next_filter@@Base+0xb60>
   18814:	b	18868 <codadump_filter_get_next_filter@@Base+0xb98>
   18818:	b	1892c <codadump_filter_get_next_filter@@Base+0xc5c>
   1881c:	ldr	r3, [pc, #516]	; 18a28 <codadump_filter_get_next_filter@@Base+0xd58>
   18820:	add	r3, pc, r3
   18824:	mov	r0, r3
   18828:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1882c:	b	18978 <codadump_filter_get_next_filter@@Base+0xca8>
   18830:	sub	r3, fp, #196	; 0xc4
   18834:	mov	r1, r3
   18838:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1883c:	bl	12444 <coda_cursor_read_double@plt>
   18840:	mov	r3, r0
   18844:	cmp	r3, #0
   18848:	beq	18850 <codadump_filter_get_next_filter@@Base+0xb80>
   1884c:	bl	1bab8 <handle_coda_error@@Base>
   18850:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   18854:	ldr	r1, [pc, #464]	; 18a2c <codadump_filter_get_next_filter@@Base+0xd5c>
   18858:	add	r1, pc, r1
   1885c:	mov	r0, r1
   18860:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18864:	b	18978 <codadump_filter_get_next_filter@@Base+0xca8>
   18868:	sub	r3, fp, #204	; 0xcc
   1886c:	mov	r1, r3
   18870:	ldr	r0, [fp, #-288]	; 0xfffffee0
   18874:	bl	12444 <coda_cursor_read_double@plt>
   18878:	mov	r3, r0
   1887c:	cmp	r3, #0
   18880:	beq	18888 <codadump_filter_get_next_filter@@Base+0xbb8>
   18884:	bl	1bab8 <handle_coda_error@@Base>
   18888:	vldr	d7, [fp, #-204]	; 0xffffff34
   1888c:	vmov.f64	d0, d7
   18890:	bl	12450 <coda_isNaN@plt>
   18894:	mov	r3, r0
   18898:	cmp	r3, #0
   1889c:	bne	188b8 <codadump_filter_get_next_filter@@Base+0xbe8>
   188a0:	vldr	d7, [fp, #-204]	; 0xffffff34
   188a4:	vmov.f64	d0, d7
   188a8:	bl	122f4 <coda_isInf@plt>
   188ac:	mov	r3, r0
   188b0:	cmp	r3, #0
   188b4:	beq	188d0 <codadump_filter_get_next_filter@@Base+0xc00>
   188b8:	ldrd	r2, [fp, #-204]	; 0xffffff34
   188bc:	ldr	r1, [pc, #364]	; 18a30 <codadump_filter_get_next_filter@@Base+0xd60>
   188c0:	add	r1, pc, r1
   188c4:	mov	r0, r1
   188c8:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   188cc:	b	18978 <codadump_filter_get_next_filter@@Base+0xca8>
   188d0:	vldr	d7, [fp, #-204]	; 0xffffff34
   188d4:	sub	r3, fp, #232	; 0xe8
   188d8:	mov	r1, r3
   188dc:	ldr	r3, [pc, #336]	; 18a34 <codadump_filter_get_next_filter@@Base+0xd64>
   188e0:	add	r3, pc, r3
   188e4:	mov	r0, r3
   188e8:	vmov.f64	d0, d7
   188ec:	bl	12270 <coda_time_double_to_string@plt>
   188f0:	mov	r3, r0
   188f4:	cmp	r3, #0
   188f8:	beq	18910 <codadump_filter_get_next_filter@@Base+0xc40>
   188fc:	ldr	r3, [pc, #308]	; 18a38 <codadump_filter_get_next_filter@@Base+0xd68>
   18900:	add	r3, pc, r3
   18904:	mov	r0, r3
   18908:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   1890c:	b	18978 <codadump_filter_get_next_filter@@Base+0xca8>
   18910:	sub	r3, fp, #232	; 0xe8
   18914:	mov	r1, r3
   18918:	ldr	r3, [pc, #284]	; 18a3c <codadump_filter_get_next_filter@@Base+0xd6c>
   1891c:	add	r3, pc, r3
   18920:	mov	r0, r3
   18924:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18928:	b	18978 <codadump_filter_get_next_filter@@Base+0xca8>
   1892c:	sub	r2, fp, #252	; 0xfc
   18930:	sub	r3, fp, #244	; 0xf4
   18934:	mov	r1, r3
   18938:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1893c:	bl	124ec <coda_cursor_read_complex_double_split@plt>
   18940:	mov	r3, r0
   18944:	cmp	r3, #0
   18948:	beq	18950 <codadump_filter_get_next_filter@@Base+0xc80>
   1894c:	bl	1bab8 <handle_coda_error@@Base>
   18950:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   18954:	ldrd	r2, [fp, #-252]	; 0xffffff04
   18958:	strd	r2, [sp]
   1895c:	mov	r2, r0
   18960:	mov	r3, r1
   18964:	ldr	r1, [pc, #212]	; 18a40 <codadump_filter_get_next_filter@@Base+0xd70>
   18968:	add	r1, pc, r1
   1896c:	mov	r0, r1
   18970:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18974:	nop			; (mov r0, r0)
   18978:	b	18984 <codadump_filter_get_next_filter@@Base+0xcb4>
   1897c:	nop			; (mov r0, r0)
   18980:	b	18988 <codadump_filter_get_next_filter@@Base+0xcb8>
   18984:	nop			; (mov r0, r0)
   18988:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1898c:	cmp	r3, #0
   18990:	beq	189a4 <codadump_filter_get_next_filter@@Base+0xcd4>
   18994:	ldr	r3, [pc, #168]	; 18a44 <codadump_filter_get_next_filter@@Base+0xd74>
   18998:	add	r3, pc, r3
   1899c:	mov	r0, r3
   189a0:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   189a4:	nop			; (mov r0, r0)
   189a8:	sub	sp, fp, #12
   189ac:	pop	{r4, r5, fp, pc}
   189b0:			; <UNDEFINED> instruction: 0x000192bc
   189b4:	andeq	r6, r0, r8, lsl #25
   189b8:	andeq	r6, r0, ip, asr ip
   189bc:	andeq	r6, r0, ip, lsl #24
   189c0:	andeq	r6, r0, r8, lsl fp
   189c4:	muleq	r0, r4, sl
   189c8:	andeq	r6, r0, r4, asr #20
   189cc:	andeq	r6, r0, r8, ror #19
   189d0:	ldrdeq	r6, [r0], -r8
   189d4:	strdeq	r6, [r0], -r4
   189d8:			; <UNDEFINED> instruction: 0x000068b4
   189dc:	andeq	r6, r0, r8, lsl r8
   189e0:	strdeq	r6, [r0], -r8
   189e4:	andeq	r0, r0, pc, lsr #2
   189e8:	muleq	r0, r4, r7
   189ec:	strdeq	r6, [r0], -r0
   189f0:	andeq	r6, r0, ip, asr #14
   189f4:	andeq	r6, r0, r4, lsr #14
   189f8:	andeq	r0, r0, lr, asr #2
   189fc:	andeq	r6, r0, r4, ror r6
   18a00:	ldrdeq	r6, [r0], -r0
   18a04:	andeq	r6, r0, r8, lsr #12
   18a08:	andeq	r6, r0, r8, lsl #12
   18a0c:	andeq	r6, r0, r4, ror #12
   18a10:	andeq	r6, r0, ip, lsr #12
   18a14:	andeq	r6, r0, r4, ror #11
   18a18:	muleq	r0, r8, r5
   18a1c:	andeq	r6, r0, r8, asr r5
   18a20:	andeq	r6, r0, r8, asr #10
   18a24:	andeq	r6, r0, ip, lsr r5
   18a28:	andeq	r6, r0, r4, ror #9
   18a2c:	andeq	r6, r0, r4, lsr #9
   18a30:	andeq	r6, r0, ip, lsr r4
   18a34:	andeq	r6, r0, ip, lsr #8
   18a38:	andeq	r6, r0, ip, lsr #8
   18a3c:	andeq	r6, r0, ip, lsr #8
   18a40:	andeq	r6, r0, r8, ror #7
   18a44:	andeq	r6, r0, r4, lsr #5

00018a48 <print_json_data@@Base>:
   18a48:	push	{r4, fp, lr}
   18a4c:	add	fp, sp, #8
   18a50:	sub	sp, sp, #540	; 0x21c
   18a54:	str	r0, [fp, #-544]	; 0xfffffde0
   18a58:	ldr	r4, [pc, #308]	; 18b94 <print_json_data@@Base+0x14c>
   18a5c:	add	r4, pc, r4
   18a60:	ldr	r3, [pc, #304]	; 18b98 <print_json_data@@Base+0x150>
   18a64:	add	r3, pc, r3
   18a68:	ldr	r2, [fp, #-544]	; 0xfffffde0
   18a6c:	str	r2, [r3]
   18a70:	ldr	r3, [pc, #292]	; 18b9c <print_json_data@@Base+0x154>
   18a74:	ldr	r3, [r4, r3]
   18a78:	ldr	r3, [r3]
   18a7c:	sub	r2, fp, #20
   18a80:	mov	r1, r2
   18a84:	mov	r0, r3
   18a88:	bl	12258 <coda_open@plt>
   18a8c:	str	r0, [fp, #-16]
   18a90:	ldr	r3, [fp, #-16]
   18a94:	cmp	r3, #0
   18a98:	beq	18ae0 <print_json_data@@Base+0x98>
   18a9c:	bl	1260c <coda_get_errno@plt>
   18aa0:	mov	r3, r0
   18aa4:	ldr	r3, [r3]
   18aa8:	cmn	r3, #21
   18aac:	bne	18ae0 <print_json_data@@Base+0x98>
   18ab0:	mov	r0, #0
   18ab4:	bl	122a0 <coda_set_option_use_mmap@plt>
   18ab8:	ldr	r3, [pc, #220]	; 18b9c <print_json_data@@Base+0x154>
   18abc:	ldr	r3, [r4, r3]
   18ac0:	ldr	r3, [r3]
   18ac4:	sub	r2, fp, #20
   18ac8:	mov	r1, r2
   18acc:	mov	r0, r3
   18ad0:	bl	12258 <coda_open@plt>
   18ad4:	str	r0, [fp, #-16]
   18ad8:	mov	r0, #1
   18adc:	bl	122a0 <coda_set_option_use_mmap@plt>
   18ae0:	ldr	r3, [fp, #-16]
   18ae4:	cmp	r3, #0
   18ae8:	beq	18af0 <print_json_data@@Base+0xa8>
   18aec:	bl	1bab8 <handle_coda_error@@Base>
   18af0:	ldr	r2, [fp, #-20]	; 0xffffffec
   18af4:	sub	r3, fp, #540	; 0x21c
   18af8:	mov	r1, r2
   18afc:	mov	r0, r3
   18b00:	bl	12384 <coda_cursor_set_product@plt>
   18b04:	mov	r3, r0
   18b08:	cmp	r3, #0
   18b0c:	beq	18b14 <print_json_data@@Base+0xcc>
   18b10:	bl	1bab8 <handle_coda_error@@Base>
   18b14:	ldr	r3, [pc, #132]	; 18ba0 <print_json_data@@Base+0x158>
   18b18:	ldr	r3, [r4, r3]
   18b1c:	ldr	r3, [r3]
   18b20:	cmp	r3, #0
   18b24:	beq	18b58 <print_json_data@@Base+0x110>
   18b28:	ldr	r3, [pc, #112]	; 18ba0 <print_json_data@@Base+0x158>
   18b2c:	ldr	r3, [r4, r3]
   18b30:	ldr	r2, [r3]
   18b34:	sub	r3, fp, #540	; 0x21c
   18b38:	mov	r1, r2
   18b3c:	mov	r0, r3
   18b40:	bl	12564 <coda_cursor_goto@plt>
   18b44:	str	r0, [fp, #-16]
   18b48:	ldr	r3, [fp, #-16]
   18b4c:	cmp	r3, #0
   18b50:	beq	18b58 <print_json_data@@Base+0x110>
   18b54:	bl	1bab8 <handle_coda_error@@Base>
   18b58:	mov	r0, #0
   18b5c:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   18b60:	sub	r3, fp, #540	; 0x21c
   18b64:	mov	r0, r3
   18b68:	bl	17f30 <codadump_filter_get_next_filter@@Base+0x260>
   18b6c:	ldr	r3, [pc, #48]	; 18ba4 <print_json_data@@Base+0x15c>
   18b70:	add	r3, pc, r3
   18b74:	mov	r0, r3
   18b78:	bl	17d2c <codadump_filter_get_next_filter@@Base+0x5c>
   18b7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b80:	mov	r0, r3
   18b84:	bl	12540 <coda_close@plt>
   18b88:	nop			; (mov r0, r0)
   18b8c:	sub	sp, fp, #8
   18b90:	pop	{r4, fp, pc}
   18b94:	muleq	r1, ip, r5
   18b98:	andeq	r8, r1, r4, lsr #15
   18b9c:			; <UNDEFINED> instruction: 0x000001b4
   18ba0:	ldrdeq	r0, [r0], -r8
   18ba4:	andeq	r6, r0, ip, ror #3
   18ba8:	push	{r4, fp, lr}
   18bac:	add	fp, sp, #8
   18bb0:	sub	sp, sp, #20
   18bb4:	str	r0, [fp, #-24]	; 0xffffffe8
   18bb8:	str	r1, [fp, #-28]	; 0xffffffe4
   18bbc:	ldr	r4, [pc, #424]	; 18d6c <print_json_data@@Base+0x324>
   18bc0:	add	r4, pc, r4
   18bc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18bc8:	mov	r3, r2
   18bcc:	lsl	r3, r3, #2
   18bd0:	add	r3, r3, r2
   18bd4:	lsl	r3, r3, #4
   18bd8:	add	r3, r3, #800	; 0x320
   18bdc:	ldr	r2, [pc, #396]	; 18d70 <print_json_data@@Base+0x328>
   18be0:	ldr	r2, [r4, r2]
   18be4:	add	r3, r3, r2
   18be8:	str	r3, [fp, #-20]	; 0xffffffec
   18bec:	mov	r3, #0
   18bf0:	str	r3, [fp, #-16]
   18bf4:	b	18d4c <print_json_data@@Base+0x304>
   18bf8:	ldr	r3, [fp, #-16]
   18bfc:	cmp	r3, #0
   18c00:	ble	18c10 <print_json_data@@Base+0x1c8>
   18c04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18c08:	mov	r0, #44	; 0x2c
   18c0c:	bl	12594 <fputc@plt>
   18c10:	ldr	r3, [pc, #348]	; 18d74 <print_json_data@@Base+0x32c>
   18c14:	ldr	r3, [r4, r3]
   18c18:	ldr	r3, [r3]
   18c1c:	cmp	r3, #0
   18c20:	beq	18cf0 <print_json_data@@Base+0x2a8>
   18c24:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c28:	ldr	r2, [r3]
   18c2c:	ldr	r3, [fp, #-16]
   18c30:	add	r2, r2, r3
   18c34:	ldr	r3, [pc, #316]	; 18d78 <print_json_data@@Base+0x330>
   18c38:	ldr	r3, [r4, r3]
   18c3c:	add	r2, r2, #18
   18c40:	ldr	r3, [r3, r2, lsl #2]
   18c44:	cmp	r3, #0
   18c48:	beq	18cb0 <print_json_data@@Base+0x268>
   18c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c50:	ldr	r2, [r3]
   18c54:	ldr	r3, [fp, #-16]
   18c58:	add	r3, r2, r3
   18c5c:	ldr	r2, [pc, #276]	; 18d78 <print_json_data@@Base+0x330>
   18c60:	ldr	r2, [r4, r2]
   18c64:	add	r3, r3, #8
   18c68:	lsl	r3, r3, #2
   18c6c:	add	r3, r2, r3
   18c70:	ldr	r1, [r3, #4]
   18c74:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c78:	ldr	r2, [r3]
   18c7c:	ldr	r3, [fp, #-16]
   18c80:	add	r3, r2, r3
   18c84:	ldr	r2, [pc, #236]	; 18d78 <print_json_data@@Base+0x330>
   18c88:	ldr	r2, [r4, r2]
   18c8c:	lsl	r3, r3, #2
   18c90:	add	r3, r2, r3
   18c94:	ldr	r3, [r3, #4]
   18c98:	mov	r2, r1
   18c9c:	ldr	r1, [pc, #216]	; 18d7c <print_json_data@@Base+0x334>
   18ca0:	add	r1, pc, r1
   18ca4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ca8:	bl	1245c <fprintf@plt>
   18cac:	b	18d40 <print_json_data@@Base+0x2f8>
   18cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cb4:	ldr	r2, [r3]
   18cb8:	ldr	r3, [fp, #-16]
   18cbc:	add	r3, r2, r3
   18cc0:	ldr	r2, [pc, #176]	; 18d78 <print_json_data@@Base+0x330>
   18cc4:	ldr	r2, [r4, r2]
   18cc8:	lsl	r3, r3, #2
   18ccc:	add	r3, r2, r3
   18cd0:	ldr	r3, [r3, #4]
   18cd4:	mov	r2, r3
   18cd8:	ldr	r3, [pc, #160]	; 18d80 <print_json_data@@Base+0x338>
   18cdc:	add	r3, pc, r3
   18ce0:	mov	r1, r3
   18ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce8:	bl	1245c <fprintf@plt>
   18cec:	b	18d40 <print_json_data@@Base+0x2f8>
   18cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cf4:	ldr	r2, [fp, #-16]
   18cf8:	add	r2, r2, #2
   18cfc:	ldr	r3, [r3, r2, lsl #2]
   18d00:	cmn	r3, #1
   18d04:	bne	18d18 <print_json_data@@Base+0x2d0>
   18d08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d0c:	mov	r0, #63	; 0x3f
   18d10:	bl	12594 <fputc@plt>
   18d14:	b	18d40 <print_json_data@@Base+0x2f8>
   18d18:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d1c:	ldr	r2, [fp, #-16]
   18d20:	add	r2, r2, #2
   18d24:	ldr	r3, [r3, r2, lsl #2]
   18d28:	mov	r2, r3
   18d2c:	ldr	r3, [pc, #80]	; 18d84 <print_json_data@@Base+0x33c>
   18d30:	add	r3, pc, r3
   18d34:	mov	r1, r3
   18d38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d3c:	bl	1245c <fprintf@plt>
   18d40:	ldr	r3, [fp, #-16]
   18d44:	add	r3, r3, #1
   18d48:	str	r3, [fp, #-16]
   18d4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d50:	ldr	r2, [r3, #4]
   18d54:	ldr	r3, [fp, #-16]
   18d58:	cmp	r2, r3
   18d5c:	bgt	18bf8 <print_json_data@@Base+0x1b0>
   18d60:	nop			; (mov r0, r0)
   18d64:	sub	sp, fp, #8
   18d68:	pop	{r4, fp, pc}
   18d6c:	andeq	r8, r1, r8, lsr r4
   18d70:			; <UNDEFINED> instruction: 0x000001b4
   18d74:			; <UNDEFINED> instruction: 0x000001b0
   18d78:	andeq	r0, r0, r4, ror #3
   18d7c:	andeq	r6, r0, r0, asr #1
   18d80:	andeq	r6, r0, ip, lsl #1
   18d84:	andeq	r6, r0, r8, lsr r0

00018d88 <print_full_field_name@@Base>:
   18d88:	push	{r4, fp, lr}
   18d8c:	add	fp, sp, #8
   18d90:	sub	sp, sp, #44	; 0x2c
   18d94:	str	r0, [fp, #-40]	; 0xffffffd8
   18d98:	str	r1, [fp, #-44]	; 0xffffffd4
   18d9c:	str	r2, [fp, #-48]	; 0xffffffd0
   18da0:	ldr	r4, [pc, #1008]	; 19198 <print_full_field_name@@Base+0x410>
   18da4:	add	r4, pc, r4
   18da8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18dac:	cmp	r3, #1
   18db0:	bne	18f4c <print_full_field_name@@Base+0x1c4>
   18db4:	mov	r3, #0
   18db8:	str	r3, [fp, #-20]	; 0xffffffec
   18dbc:	mov	r3, #0
   18dc0:	str	r3, [fp, #-24]	; 0xffffffe8
   18dc4:	mov	r3, #0
   18dc8:	str	r3, [fp, #-16]
   18dcc:	b	18ee8 <print_full_field_name@@Base+0x160>
   18dd0:	ldr	r3, [pc, #964]	; 1919c <print_full_field_name@@Base+0x414>
   18dd4:	ldr	r3, [r4, r3]
   18dd8:	ldr	r2, [fp, #-16]
   18ddc:	add	r2, r2, #2
   18de0:	ldr	r3, [r3, r2, lsl #2]
   18de4:	sub	r2, fp, #32
   18de8:	mov	r1, r2
   18dec:	mov	r0, r3
   18df0:	bl	1266c <coda_type_get_class@plt>
   18df4:	mov	r3, r0
   18df8:	cmp	r3, #0
   18dfc:	beq	18e04 <print_full_field_name@@Base+0x7c>
   18e00:	bl	1bab8 <handle_coda_error@@Base>
   18e04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18e08:	cmp	r3, #0
   18e0c:	beq	18e1c <print_full_field_name@@Base+0x94>
   18e10:	cmp	r3, #1
   18e14:	beq	18e60 <print_full_field_name@@Base+0xd8>
   18e18:	b	18edc <print_full_field_name@@Base+0x154>
   18e1c:	ldr	r3, [pc, #888]	; 1919c <print_full_field_name@@Base+0x414>
   18e20:	ldr	r2, [r4, r3]
   18e24:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e28:	add	r3, r3, #904	; 0x388
   18e2c:	lsl	r3, r3, #2
   18e30:	add	r3, r2, r3
   18e34:	ldr	r3, [r3, #4]
   18e38:	mov	r2, r3
   18e3c:	ldr	r3, [pc, #860]	; 191a0 <print_full_field_name@@Base+0x418>
   18e40:	add	r3, pc, r3
   18e44:	mov	r1, r3
   18e48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e4c:	bl	1245c <fprintf@plt>
   18e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e54:	add	r3, r3, #1
   18e58:	str	r3, [fp, #-20]	; 0xffffffec
   18e5c:	b	18edc <print_full_field_name@@Base+0x154>
   18e60:	ldr	r3, [fp, #-16]
   18e64:	cmp	r3, #0
   18e68:	bne	18e78 <print_full_field_name@@Base+0xf0>
   18e6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18e70:	mov	r0, #47	; 0x2f
   18e74:	bl	12594 <fputc@plt>
   18e78:	ldr	r3, [pc, #796]	; 1919c <print_full_field_name@@Base+0x414>
   18e7c:	ldr	r1, [r4, r3]
   18e80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18e84:	mov	r3, r2
   18e88:	lsl	r3, r3, #2
   18e8c:	add	r3, r3, r2
   18e90:	lsl	r3, r3, #4
   18e94:	add	r3, r1, r3
   18e98:	add	r3, r3, #804	; 0x324
   18e9c:	ldr	r3, [r3]
   18ea0:	cmp	r3, #0
   18ea4:	ble	18ecc <print_full_field_name@@Base+0x144>
   18ea8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18eac:	mov	r0, #91	; 0x5b
   18eb0:	bl	12594 <fputc@plt>
   18eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18eb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ebc:	bl	18ba8 <print_json_data@@Base+0x160>
   18ec0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18ec4:	mov	r0, #93	; 0x5d
   18ec8:	bl	12594 <fputc@plt>
   18ecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18ed0:	add	r3, r3, #1
   18ed4:	str	r3, [fp, #-24]	; 0xffffffe8
   18ed8:	nop			; (mov r0, r0)
   18edc:	ldr	r3, [fp, #-16]
   18ee0:	add	r3, r3, #1
   18ee4:	str	r3, [fp, #-16]
   18ee8:	ldr	r3, [pc, #684]	; 1919c <print_full_field_name@@Base+0x414>
   18eec:	ldr	r3, [r4, r3]
   18ef0:	ldr	r2, [r3, #136]	; 0x88
   18ef4:	ldr	r3, [fp, #-16]
   18ef8:	cmp	r2, r3
   18efc:	bgt	18dd0 <print_full_field_name@@Base+0x48>
   18f00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18f04:	cmp	r3, #0
   18f08:	beq	1918c <print_full_field_name@@Base+0x404>
   18f0c:	ldr	r3, [pc, #648]	; 1919c <print_full_field_name@@Base+0x414>
   18f10:	ldr	r3, [r4, r3]
   18f14:	ldr	r2, [r3, #3360]	; 0xd20
   18f18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f1c:	cmp	r2, r3
   18f20:	ble	1918c <print_full_field_name@@Base+0x404>
   18f24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f28:	mov	r0, #91	; 0x5b
   18f2c:	bl	12594 <fputc@plt>
   18f30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f34:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f38:	bl	18ba8 <print_json_data@@Base+0x160>
   18f3c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f40:	mov	r0, #93	; 0x5d
   18f44:	bl	12594 <fputc@plt>
   18f48:	b	1918c <print_full_field_name@@Base+0x404>
   18f4c:	mov	r3, #0
   18f50:	str	r3, [fp, #-16]
   18f54:	b	18fa4 <print_full_field_name@@Base+0x21c>
   18f58:	ldr	r3, [fp, #-16]
   18f5c:	cmp	r3, #0
   18f60:	ble	18f70 <print_full_field_name@@Base+0x1e8>
   18f64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f68:	mov	r0, #46	; 0x2e
   18f6c:	bl	12594 <fputc@plt>
   18f70:	ldr	r3, [pc, #548]	; 1919c <print_full_field_name@@Base+0x414>
   18f74:	ldr	r2, [r4, r3]
   18f78:	ldr	r3, [fp, #-16]
   18f7c:	add	r3, r3, #904	; 0x388
   18f80:	lsl	r3, r3, #2
   18f84:	add	r3, r2, r3
   18f88:	ldr	r3, [r3, #4]
   18f8c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   18f90:	mov	r0, r3
   18f94:	bl	12630 <fputs@plt>
   18f98:	ldr	r3, [fp, #-16]
   18f9c:	add	r3, r3, #1
   18fa0:	str	r3, [fp, #-16]
   18fa4:	ldr	r3, [pc, #496]	; 1919c <print_full_field_name@@Base+0x414>
   18fa8:	ldr	r3, [r4, r3]
   18fac:	ldr	r2, [r3, #3748]	; 0xea4
   18fb0:	ldr	r3, [fp, #-16]
   18fb4:	cmp	r2, r3
   18fb8:	bgt	18f58 <print_full_field_name@@Base+0x1d0>
   18fbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18fc0:	cmp	r3, #2
   18fc4:	bne	1918c <print_full_field_name@@Base+0x404>
   18fc8:	mov	r3, #0
   18fcc:	str	r3, [fp, #-28]	; 0xffffffe4
   18fd0:	mov	r3, #0
   18fd4:	str	r3, [fp, #-16]
   18fd8:	b	190c8 <print_full_field_name@@Base+0x340>
   18fdc:	ldr	r3, [pc, #440]	; 1919c <print_full_field_name@@Base+0x414>
   18fe0:	ldr	r3, [r4, r3]
   18fe4:	ldr	r2, [fp, #-16]
   18fe8:	add	r2, r2, #2
   18fec:	ldr	r3, [r3, r2, lsl #2]
   18ff0:	sub	r2, fp, #36	; 0x24
   18ff4:	mov	r1, r2
   18ff8:	mov	r0, r3
   18ffc:	bl	1266c <coda_type_get_class@plt>
   19000:	mov	r3, r0
   19004:	cmp	r3, #0
   19008:	beq	19010 <print_full_field_name@@Base+0x288>
   1900c:	bl	1bab8 <handle_coda_error@@Base>
   19010:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19014:	cmp	r3, #1
   19018:	bne	190bc <print_full_field_name@@Base+0x334>
   1901c:	ldr	r3, [pc, #376]	; 1919c <print_full_field_name@@Base+0x414>
   19020:	ldr	r1, [r4, r3]
   19024:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19028:	mov	r3, r2
   1902c:	lsl	r3, r3, #2
   19030:	add	r3, r3, r2
   19034:	lsl	r3, r3, #4
   19038:	add	r3, r1, r3
   1903c:	add	r3, r3, #804	; 0x324
   19040:	ldr	r3, [r3]
   19044:	cmp	r3, #0
   19048:	ble	190bc <print_full_field_name@@Base+0x334>
   1904c:	ldr	r3, [pc, #328]	; 1919c <print_full_field_name@@Base+0x414>
   19050:	ldr	r1, [r4, r3]
   19054:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19058:	mov	r3, r2
   1905c:	lsl	r3, r3, #2
   19060:	add	r3, r3, r2
   19064:	lsl	r3, r3, #4
   19068:	add	r3, r1, r3
   1906c:	add	r3, r3, #800	; 0x320
   19070:	ldr	r3, [r3]
   19074:	cmp	r3, #0
   19078:	bne	19098 <print_full_field_name@@Base+0x310>
   1907c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19080:	mov	r2, #2
   19084:	mov	r1, #1
   19088:	ldr	r0, [pc, #276]	; 191a4 <print_full_field_name@@Base+0x41c>
   1908c:	add	r0, pc, r0
   19090:	bl	12378 <fwrite@plt>
   19094:	b	190a4 <print_full_field_name@@Base+0x31c>
   19098:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1909c:	mov	r0, #44	; 0x2c
   190a0:	bl	12594 <fputc@plt>
   190a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   190a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190ac:	bl	18ba8 <print_json_data@@Base+0x160>
   190b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   190b4:	add	r3, r3, #1
   190b8:	str	r3, [fp, #-28]	; 0xffffffe4
   190bc:	ldr	r3, [fp, #-16]
   190c0:	add	r3, r3, #1
   190c4:	str	r3, [fp, #-16]
   190c8:	ldr	r3, [pc, #204]	; 1919c <print_full_field_name@@Base+0x414>
   190cc:	ldr	r3, [r4, r3]
   190d0:	ldr	r2, [r3, #136]	; 0x88
   190d4:	ldr	r3, [fp, #-16]
   190d8:	cmp	r2, r3
   190dc:	bgt	18fdc <print_full_field_name@@Base+0x254>
   190e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   190e4:	cmp	r3, #0
   190e8:	beq	19174 <print_full_field_name@@Base+0x3ec>
   190ec:	ldr	r3, [pc, #168]	; 1919c <print_full_field_name@@Base+0x414>
   190f0:	ldr	r3, [r4, r3]
   190f4:	ldr	r2, [r3, #3360]	; 0xd20
   190f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   190fc:	cmp	r2, r3
   19100:	ble	19174 <print_full_field_name@@Base+0x3ec>
   19104:	ldr	r3, [pc, #144]	; 1919c <print_full_field_name@@Base+0x414>
   19108:	ldr	r1, [r4, r3]
   1910c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19110:	mov	r3, r2
   19114:	lsl	r3, r3, #2
   19118:	add	r3, r3, r2
   1911c:	lsl	r3, r3, #4
   19120:	add	r3, r1, r3
   19124:	add	r3, r3, #800	; 0x320
   19128:	ldr	r3, [r3]
   1912c:	cmp	r3, #0
   19130:	bne	19150 <print_full_field_name@@Base+0x3c8>
   19134:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19138:	mov	r2, #2
   1913c:	mov	r1, #1
   19140:	ldr	r0, [pc, #96]	; 191a8 <print_full_field_name@@Base+0x420>
   19144:	add	r0, pc, r0
   19148:	bl	12378 <fwrite@plt>
   1914c:	b	1915c <print_full_field_name@@Base+0x3d4>
   19150:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19154:	mov	r0, #44	; 0x2c
   19158:	bl	12594 <fputc@plt>
   1915c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19160:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19164:	bl	18ba8 <print_json_data@@Base+0x160>
   19168:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1916c:	add	r3, r3, #1
   19170:	str	r3, [fp, #-28]	; 0xffffffe4
   19174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19178:	cmp	r3, #0
   1917c:	ble	1918c <print_full_field_name@@Base+0x404>
   19180:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19184:	mov	r0, #93	; 0x5d
   19188:	bl	12594 <fputc@plt>
   1918c:	nop			; (mov r0, r0)
   19190:	sub	sp, fp, #8
   19194:	pop	{r4, fp, pc}
   19198:	andeq	r8, r1, r4, asr r2
   1919c:			; <UNDEFINED> instruction: 0x000001b4
   191a0:	andeq	r5, r0, ip, lsr #30
   191a4:	andeq	r5, r0, r4, ror #25
   191a8:	andeq	r5, r0, ip, lsr #24

000191ac <traverse_info_init@@Base>:
   191ac:	push	{fp}		; (str fp, [sp, #-4]!)
   191b0:	add	fp, sp, #0
   191b4:	ldr	r3, [pc, #80]	; 1920c <traverse_info_init@@Base+0x60>
   191b8:	add	r3, pc, r3
   191bc:	ldr	r2, [pc, #76]	; 19210 <traverse_info_init@@Base+0x64>
   191c0:	ldr	r2, [r3, r2]
   191c4:	mov	r1, #0
   191c8:	str	r1, [r2, #4]
   191cc:	ldr	r2, [pc, #60]	; 19210 <traverse_info_init@@Base+0x64>
   191d0:	ldr	r2, [r3, r2]
   191d4:	mov	r1, #0
   191d8:	str	r1, [r2, #136]	; 0x88
   191dc:	ldr	r2, [pc, #44]	; 19210 <traverse_info_init@@Base+0x64>
   191e0:	ldr	r2, [r3, r2]
   191e4:	mov	r1, #0
   191e8:	str	r1, [r2, #3360]	; 0xd20
   191ec:	ldr	r2, [pc, #28]	; 19210 <traverse_info_init@@Base+0x64>
   191f0:	ldr	r3, [r3, r2]
   191f4:	mov	r2, #0
   191f8:	str	r2, [r3, #3748]	; 0xea4
   191fc:	nop			; (mov r0, r0)
   19200:	add	sp, fp, #0
   19204:	pop	{fp}		; (ldr fp, [sp], #4)
   19208:	bx	lr
   1920c:	andeq	r7, r1, r0, asr #28
   19210:			; <UNDEFINED> instruction: 0x000001b4

00019214 <traverse_info_done@@Base>:
   19214:	push	{r4, r5, fp, lr}
   19218:	add	fp, sp, #12
   1921c:	ldr	r4, [pc, #84]	; 19278 <traverse_info_done@@Base+0x64>
   19220:	add	r4, pc, r4
   19224:	ldr	r3, [pc, #80]	; 1927c <traverse_info_done@@Base+0x68>
   19228:	ldr	r3, [r4, r3]
   1922c:	ldr	r3, [r3, #4]
   19230:	cmp	r3, #0
   19234:	beq	1924c <traverse_info_done@@Base+0x38>
   19238:	ldr	r3, [pc, #60]	; 1927c <traverse_info_done@@Base+0x68>
   1923c:	ldr	r3, [r4, r3]
   19240:	ldr	r3, [r3, #4]
   19244:	mov	r0, r3
   19248:	bl	12540 <coda_close@plt>
   1924c:	ldr	r3, [pc, #40]	; 1927c <traverse_info_done@@Base+0x68>
   19250:	ldr	r3, [r4, r3]
   19254:	ldr	r3, [r3, #664]	; 0x298
   19258:	cmp	r3, #0
   1925c:	beq	19270 <traverse_info_done@@Base+0x5c>
   19260:	ldr	r3, [pc, #20]	; 1927c <traverse_info_done@@Base+0x68>
   19264:	ldr	r3, [r4, r3]
   19268:	add	r0, r3, #664	; 0x298
   1926c:	bl	17b10 <codadump_filter_remove@@Base>
   19270:	nop			; (mov r0, r0)
   19274:	pop	{r4, r5, fp, pc}
   19278:	ldrdeq	r7, [r1], -r8
   1927c:			; <UNDEFINED> instruction: 0x000001b4
   19280:	push	{r4, fp, lr}
   19284:	add	fp, sp, #8
   19288:	sub	sp, sp, #28
   1928c:	ldr	r4, [pc, #856]	; 195ec <traverse_info_done@@Base+0x3d8>
   19290:	add	r4, pc, r4
   19294:	ldr	r3, [pc, #852]	; 195f0 <traverse_info_done@@Base+0x3dc>
   19298:	ldr	r3, [r4, r3]
   1929c:	ldr	r3, [r3]
   192a0:	cmp	r3, #0
   192a4:	bne	195c8 <traverse_info_done@@Base+0x3b4>
   192a8:	ldr	r3, [pc, #836]	; 195f4 <traverse_info_done@@Base+0x3e0>
   192ac:	ldr	r3, [r4, r3]
   192b0:	ldr	r3, [r3]
   192b4:	mov	r2, #0
   192b8:	mov	r1, #1
   192bc:	mov	r0, r3
   192c0:	bl	18d88 <print_full_field_name@@Base>
   192c4:	ldr	r3, [pc, #812]	; 195f8 <traverse_info_done@@Base+0x3e4>
   192c8:	ldr	r3, [r4, r3]
   192cc:	ldr	r3, [r3]
   192d0:	cmp	r3, #0
   192d4:	beq	19468 <traverse_info_done@@Base+0x254>
   192d8:	ldr	r3, [pc, #796]	; 195fc <traverse_info_done@@Base+0x3e8>
   192dc:	ldr	r3, [r4, r3]
   192e0:	ldr	r2, [r3, #136]	; 0x88
   192e4:	ldr	r3, [pc, #784]	; 195fc <traverse_info_done@@Base+0x3e8>
   192e8:	ldr	r3, [r4, r3]
   192ec:	add	r2, r2, #2
   192f0:	ldr	r3, [r3, r2, lsl #2]
   192f4:	sub	r2, fp, #20
   192f8:	mov	r1, r2
   192fc:	mov	r0, r3
   19300:	bl	1266c <coda_type_get_class@plt>
   19304:	mov	r3, r0
   19308:	cmp	r3, #0
   1930c:	beq	19314 <traverse_info_done@@Base+0x100>
   19310:	bl	1bab8 <handle_coda_error@@Base>
   19314:	ldr	r3, [fp, #-20]	; 0xffffffec
   19318:	cmp	r3, #6
   1931c:	bne	19384 <traverse_info_done@@Base+0x170>
   19320:	ldr	r3, [pc, #724]	; 195fc <traverse_info_done@@Base+0x3e8>
   19324:	ldr	r3, [r4, r3]
   19328:	ldr	r2, [r3, #136]	; 0x88
   1932c:	ldr	r3, [pc, #712]	; 195fc <traverse_info_done@@Base+0x3e8>
   19330:	ldr	r3, [r4, r3]
   19334:	add	r2, r2, #2
   19338:	ldr	r3, [r3, r2, lsl #2]
   1933c:	sub	r2, fp, #24
   19340:	mov	r1, r2
   19344:	mov	r0, r3
   19348:	bl	124d4 <coda_type_get_special_type@plt>
   1934c:	mov	r3, r0
   19350:	cmp	r3, #0
   19354:	beq	1935c <traverse_info_done@@Base+0x148>
   19358:	bl	1bab8 <handle_coda_error@@Base>
   1935c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19360:	mov	r0, r3
   19364:	bl	121d4 <coda_type_get_special_type_name@plt>
   19368:	mov	r3, r0
   1936c:	mov	r1, r3
   19370:	ldr	r3, [pc, #648]	; 19600 <traverse_info_done@@Base+0x3ec>
   19374:	add	r3, pc, r3
   19378:	mov	r0, r3
   1937c:	bl	12228 <printf@plt>
   19380:	b	19468 <traverse_info_done@@Base+0x254>
   19384:	ldr	r3, [pc, #624]	; 195fc <traverse_info_done@@Base+0x3e8>
   19388:	ldr	r3, [r4, r3]
   1938c:	ldr	r2, [r3, #136]	; 0x88
   19390:	ldr	r3, [pc, #612]	; 195fc <traverse_info_done@@Base+0x3e8>
   19394:	ldr	r3, [r4, r3]
   19398:	add	r2, r2, #2
   1939c:	ldr	r3, [r3, r2, lsl #2]
   193a0:	sub	r2, fp, #28
   193a4:	mov	r1, r2
   193a8:	mov	r0, r3
   193ac:	bl	12420 <coda_type_get_read_type@plt>
   193b0:	mov	r3, r0
   193b4:	cmp	r3, #0
   193b8:	beq	193c0 <traverse_info_done@@Base+0x1ac>
   193bc:	bl	1bab8 <handle_coda_error@@Base>
   193c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193c4:	mov	r0, r3
   193c8:	bl	1251c <coda_type_get_native_type_name@plt>
   193cc:	mov	r3, r0
   193d0:	mov	r1, r3
   193d4:	ldr	r3, [pc, #552]	; 19604 <traverse_info_done@@Base+0x3f0>
   193d8:	add	r3, pc, r3
   193dc:	mov	r0, r3
   193e0:	bl	12228 <printf@plt>
   193e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193e8:	cmp	r3, #11
   193ec:	beq	193fc <traverse_info_done@@Base+0x1e8>
   193f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   193f4:	cmp	r3, #12
   193f8:	bne	19468 <traverse_info_done@@Base+0x254>
   193fc:	mov	r0, #40	; 0x28
   19400:	bl	124bc <putchar@plt>
   19404:	ldr	r3, [pc, #496]	; 195fc <traverse_info_done@@Base+0x3e8>
   19408:	ldr	r3, [r4, r3]
   1940c:	ldr	r3, [r3, #3360]	; 0xd20
   19410:	cmp	r3, #0
   19414:	bgt	19438 <traverse_info_done@@Base+0x224>
   19418:	ldr	r3, [pc, #488]	; 19608 <traverse_info_done@@Base+0x3f4>
   1941c:	add	r3, pc, r3
   19420:	mov	r2, #238	; 0xee
   19424:	ldr	r1, [pc, #480]	; 1960c <traverse_info_done@@Base+0x3f8>
   19428:	add	r1, pc, r1
   1942c:	ldr	r0, [pc, #476]	; 19610 <traverse_info_done@@Base+0x3fc>
   19430:	add	r0, pc, r0
   19434:	bl	12660 <__assert_fail@plt>
   19438:	ldr	r3, [pc, #436]	; 195f4 <traverse_info_done@@Base+0x3e0>
   1943c:	ldr	r3, [r4, r3]
   19440:	ldr	r2, [r3]
   19444:	ldr	r3, [pc, #432]	; 195fc <traverse_info_done@@Base+0x3e8>
   19448:	ldr	r3, [r4, r3]
   1944c:	ldr	r3, [r3, #3360]	; 0xd20
   19450:	sub	r3, r3, #1
   19454:	mov	r1, r3
   19458:	mov	r0, r2
   1945c:	bl	18ba8 <print_json_data@@Base+0x160>
   19460:	mov	r0, #41	; 0x29
   19464:	bl	124bc <putchar@plt>
   19468:	ldr	r3, [pc, #420]	; 19614 <traverse_info_done@@Base+0x400>
   1946c:	ldr	r3, [r4, r3]
   19470:	ldr	r3, [r3]
   19474:	cmp	r3, #0
   19478:	beq	194ec <traverse_info_done@@Base+0x2d8>
   1947c:	ldr	r3, [pc, #376]	; 195fc <traverse_info_done@@Base+0x3e8>
   19480:	ldr	r3, [r4, r3]
   19484:	ldr	r2, [r3, #136]	; 0x88
   19488:	ldr	r3, [pc, #364]	; 195fc <traverse_info_done@@Base+0x3e8>
   1948c:	ldr	r3, [r4, r3]
   19490:	add	r2, r2, #2
   19494:	ldr	r3, [r3, r2, lsl #2]
   19498:	sub	r2, fp, #32
   1949c:	mov	r1, r2
   194a0:	mov	r0, r3
   194a4:	bl	12348 <coda_type_get_unit@plt>
   194a8:	mov	r3, r0
   194ac:	cmp	r3, #0
   194b0:	beq	194b8 <traverse_info_done@@Base+0x2a4>
   194b4:	bl	1bab8 <handle_coda_error@@Base>
   194b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194bc:	cmp	r3, #0
   194c0:	beq	194ec <traverse_info_done@@Base+0x2d8>
   194c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194c8:	ldrb	r3, [r3]
   194cc:	cmp	r3, #0
   194d0:	beq	194ec <traverse_info_done@@Base+0x2d8>
   194d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   194d8:	mov	r1, r3
   194dc:	ldr	r3, [pc, #308]	; 19618 <traverse_info_done@@Base+0x404>
   194e0:	add	r3, pc, r3
   194e4:	mov	r0, r3
   194e8:	bl	12228 <printf@plt>
   194ec:	ldr	r3, [pc, #296]	; 1961c <traverse_info_done@@Base+0x408>
   194f0:	ldr	r3, [r4, r3]
   194f4:	ldr	r3, [r3]
   194f8:	cmp	r3, #0
   194fc:	beq	19570 <traverse_info_done@@Base+0x35c>
   19500:	ldr	r3, [pc, #244]	; 195fc <traverse_info_done@@Base+0x3e8>
   19504:	ldr	r3, [r4, r3]
   19508:	ldr	r2, [r3, #136]	; 0x88
   1950c:	ldr	r3, [pc, #232]	; 195fc <traverse_info_done@@Base+0x3e8>
   19510:	ldr	r3, [r4, r3]
   19514:	add	r2, r2, #2
   19518:	ldr	r3, [r3, r2, lsl #2]
   1951c:	sub	r2, fp, #36	; 0x24
   19520:	mov	r1, r2
   19524:	mov	r0, r3
   19528:	bl	12354 <coda_type_get_description@plt>
   1952c:	mov	r3, r0
   19530:	cmp	r3, #0
   19534:	beq	1953c <traverse_info_done@@Base+0x328>
   19538:	bl	1bab8 <handle_coda_error@@Base>
   1953c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19540:	cmp	r3, #0
   19544:	beq	19570 <traverse_info_done@@Base+0x35c>
   19548:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1954c:	ldrb	r3, [r3]
   19550:	cmp	r3, #0
   19554:	beq	19570 <traverse_info_done@@Base+0x35c>
   19558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1955c:	mov	r1, r3
   19560:	ldr	r3, [pc, #184]	; 19620 <traverse_info_done@@Base+0x40c>
   19564:	add	r3, pc, r3
   19568:	mov	r0, r3
   1956c:	bl	12228 <printf@plt>
   19570:	mov	r0, #10
   19574:	bl	124bc <putchar@plt>
   19578:	ldr	r3, [pc, #164]	; 19624 <traverse_info_done@@Base+0x410>
   1957c:	ldr	r3, [r4, r3]
   19580:	ldr	r3, [r3]
   19584:	cmp	r3, #0
   19588:	beq	195e0 <traverse_info_done@@Base+0x3cc>
   1958c:	mov	r3, #0
   19590:	str	r3, [fp, #-16]
   19594:	b	195ac <traverse_info_done@@Base+0x398>
   19598:	ldr	r0, [fp, #-16]
   1959c:	bl	15030 <print_all_distinct_dims@@Base>
   195a0:	ldr	r3, [fp, #-16]
   195a4:	add	r3, r3, #1
   195a8:	str	r3, [fp, #-16]
   195ac:	ldr	r3, [pc, #116]	; 19628 <traverse_info_done@@Base+0x414>
   195b0:	ldr	r3, [r4, r3]
   195b4:	ldr	r2, [r3]
   195b8:	ldr	r3, [fp, #-16]
   195bc:	cmp	r2, r3
   195c0:	bgt	19598 <traverse_info_done@@Base+0x384>
   195c4:	b	195e0 <traverse_info_done@@Base+0x3cc>
   195c8:	ldr	r3, [pc, #32]	; 195f0 <traverse_info_done@@Base+0x3dc>
   195cc:	ldr	r3, [r4, r3]
   195d0:	ldr	r3, [r3]
   195d4:	cmp	r3, #1
   195d8:	bne	195e0 <traverse_info_done@@Base+0x3cc>
   195dc:	bl	137d4 <export_data_element_to_ascii@@Base>
   195e0:	nop			; (mov r0, r0)
   195e4:	sub	sp, fp, #8
   195e8:	pop	{r4, fp, pc}
   195ec:	andeq	r7, r1, r8, ror #26
   195f0:	ldrdeq	r0, [r0], -r4
   195f4:	ldrdeq	r0, [r0], -ip
   195f8:	andeq	r0, r0, r4, asr #3
   195fc:			; <UNDEFINED> instruction: 0x000001b4
   19600:	andeq	r5, r0, r0, lsl #20
   19604:	muleq	r0, ip, r9
   19608:	andeq	r5, r0, r8, lsr sl
   1960c:	andeq	r5, r0, r0, asr r9
   19610:			; <UNDEFINED> instruction: 0x000059b0
   19614:	andeq	r0, r0, ip, lsr #3
   19618:	andeq	r5, r0, r0, lsr #18
   1961c:	andeq	r0, r0, r8, asr #3
   19620:	andeq	r5, r0, r4, lsr #17
   19624:	andeq	r0, r0, r0, lsr #3
   19628:	andeq	r0, r0, r4, ror #3
   1962c:	push	{r4, fp, lr}
   19630:	add	fp, sp, #8
   19634:	sub	sp, sp, #20
   19638:	str	r0, [fp, #-24]	; 0xffffffe8
   1963c:	str	r1, [fp, #-28]	; 0xffffffe4
   19640:	ldr	r4, [pc, #508]	; 19844 <traverse_info_done@@Base+0x630>
   19644:	add	r4, pc, r4
   19648:	ldr	r3, [pc, #504]	; 19848 <traverse_info_done@@Base+0x634>
   1964c:	ldr	r3, [r4, r3]
   19650:	ldr	r3, [r3, #3748]	; 0xea4
   19654:	sub	r3, r3, #1
   19658:	ldr	r2, [pc, #488]	; 19848 <traverse_info_done@@Base+0x634>
   1965c:	ldr	r2, [r4, r2]
   19660:	add	r3, r3, #872	; 0x368
   19664:	lsl	r3, r3, #2
   19668:	add	r3, r2, r3
   1966c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19670:	str	r2, [r3, #4]
   19674:	ldr	r3, [pc, #460]	; 19848 <traverse_info_done@@Base+0x634>
   19678:	ldr	r3, [r4, r3]
   1967c:	ldr	r3, [r3, #136]	; 0x88
   19680:	sub	r2, r3, #1
   19684:	ldr	r3, [pc, #444]	; 19848 <traverse_info_done@@Base+0x634>
   19688:	ldr	r3, [r4, r3]
   1968c:	add	r2, r2, #2
   19690:	ldr	r3, [r3, r2, lsl #2]
   19694:	sub	r2, fp, #16
   19698:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1969c:	mov	r0, r3
   196a0:	bl	1221c <coda_type_get_record_field_hidden_status@plt>
   196a4:	mov	r3, r0
   196a8:	cmp	r3, #0
   196ac:	beq	196b4 <traverse_info_done@@Base+0x4a0>
   196b0:	bl	1bab8 <handle_coda_error@@Base>
   196b4:	ldr	r3, [fp, #-16]
   196b8:	cmp	r3, #0
   196bc:	beq	196cc <traverse_info_done@@Base+0x4b8>
   196c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   196c4:	cmp	r3, #0
   196c8:	beq	19830 <traverse_info_done@@Base+0x61c>
   196cc:	ldr	r3, [pc, #376]	; 1984c <traverse_info_done@@Base+0x638>
   196d0:	ldr	r3, [r4, r3]
   196d4:	ldr	r3, [r3]
   196d8:	cmp	r3, #0
   196dc:	beq	19768 <traverse_info_done@@Base+0x554>
   196e0:	ldr	r3, [pc, #352]	; 19848 <traverse_info_done@@Base+0x634>
   196e4:	ldr	r3, [r4, r3]
   196e8:	ldr	r3, [r3, #136]	; 0x88
   196ec:	sub	r2, r3, #1
   196f0:	ldr	r3, [pc, #336]	; 19848 <traverse_info_done@@Base+0x634>
   196f4:	ldr	r3, [r4, r3]
   196f8:	add	r2, r2, #2
   196fc:	ldr	r3, [r3, r2, lsl #2]
   19700:	sub	r2, fp, #20
   19704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19708:	mov	r0, r3
   1970c:	bl	1230c <coda_type_get_record_field_available_status@plt>
   19710:	mov	r3, r0
   19714:	cmp	r3, #0
   19718:	beq	19720 <traverse_info_done@@Base+0x50c>
   1971c:	bl	1bab8 <handle_coda_error@@Base>
   19720:	ldr	r3, [fp, #-20]	; 0xffffffec
   19724:	cmn	r3, #1
   19728:	bne	1973c <traverse_info_done@@Base+0x528>
   1972c:	bl	174b4 <dim_record_field_available@@Base>
   19730:	mov	r3, r0
   19734:	cmp	r3, #0
   19738:	beq	19838 <traverse_info_done@@Base+0x624>
   1973c:	ldr	r3, [pc, #260]	; 19848 <traverse_info_done@@Base+0x634>
   19740:	ldr	r3, [r4, r3]
   19744:	ldr	r3, [r3, #136]	; 0x88
   19748:	sub	r3, r3, #1
   1974c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19750:	ldr	r1, [pc, #240]	; 19848 <traverse_info_done@@Base+0x634>
   19754:	ldr	r1, [r4, r1]
   19758:	add	r3, r3, #840	; 0x348
   1975c:	lsl	r3, r3, #2
   19760:	add	r3, r1, r3
   19764:	str	r2, [r3, #4]
   19768:	ldr	r3, [pc, #216]	; 19848 <traverse_info_done@@Base+0x634>
   1976c:	ldr	r3, [r4, r3]
   19770:	ldr	r3, [r3, #136]	; 0x88
   19774:	sub	r2, r3, #1
   19778:	ldr	r3, [pc, #200]	; 19848 <traverse_info_done@@Base+0x634>
   1977c:	ldr	r3, [r4, r3]
   19780:	add	r2, r2, #2
   19784:	ldr	r0, [r3, r2, lsl #2]
   19788:	ldr	r3, [pc, #184]	; 19848 <traverse_info_done@@Base+0x634>
   1978c:	ldr	r3, [r4, r3]
   19790:	ldr	r3, [r3, #3748]	; 0xea4
   19794:	sub	r3, r3, #1
   19798:	add	r3, r3, #904	; 0x388
   1979c:	lsl	r3, r3, #2
   197a0:	ldr	r2, [pc, #160]	; 19848 <traverse_info_done@@Base+0x634>
   197a4:	ldr	r2, [r4, r2]
   197a8:	add	r3, r3, r2
   197ac:	add	r3, r3, #4
   197b0:	mov	r2, r3
   197b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197b8:	bl	12624 <coda_type_get_record_field_name@plt>
   197bc:	mov	r3, r0
   197c0:	cmp	r3, #0
   197c4:	beq	197cc <traverse_info_done@@Base+0x5b8>
   197c8:	bl	1bab8 <handle_coda_error@@Base>
   197cc:	ldr	r3, [pc, #116]	; 19848 <traverse_info_done@@Base+0x634>
   197d0:	ldr	r3, [r4, r3]
   197d4:	ldr	r3, [r3, #136]	; 0x88
   197d8:	sub	r2, r3, #1
   197dc:	ldr	r3, [pc, #100]	; 19848 <traverse_info_done@@Base+0x634>
   197e0:	ldr	r3, [r4, r3]
   197e4:	add	r2, r2, #2
   197e8:	ldr	r0, [r3, r2, lsl #2]
   197ec:	ldr	r3, [pc, #84]	; 19848 <traverse_info_done@@Base+0x634>
   197f0:	ldr	r3, [r4, r3]
   197f4:	ldr	r3, [r3, #136]	; 0x88
   197f8:	add	r3, r3, #2
   197fc:	lsl	r3, r3, #2
   19800:	ldr	r2, [pc, #64]	; 19848 <traverse_info_done@@Base+0x634>
   19804:	ldr	r2, [r4, r2]
   19808:	add	r3, r3, r2
   1980c:	mov	r2, r3
   19810:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19814:	bl	122d0 <coda_type_get_record_field_type@plt>
   19818:	mov	r3, r0
   1981c:	cmp	r3, #0
   19820:	beq	19828 <traverse_info_done@@Base+0x614>
   19824:	bl	1bab8 <handle_coda_error@@Base>
   19828:	bl	19850 <traverse_info_done@@Base+0x63c>
   1982c:	b	1983c <traverse_info_done@@Base+0x628>
   19830:	nop			; (mov r0, r0)
   19834:	b	1983c <traverse_info_done@@Base+0x628>
   19838:	nop			; (mov r0, r0)
   1983c:	sub	sp, fp, #8
   19840:	pop	{r4, fp, pc}
   19844:			; <UNDEFINED> instruction: 0x000179b4
   19848:			; <UNDEFINED> instruction: 0x000001b4
   1984c:			; <UNDEFINED> instruction: 0x000001b0
   19850:	push	{r4, r5, fp, lr}
   19854:	add	fp, sp, #12
   19858:	sub	sp, sp, #32
   1985c:	ldr	r4, [pc, #1628]	; 19ec0 <traverse_info_done@@Base+0xcac>
   19860:	add	r4, pc, r4
   19864:	ldr	r3, [pc, #1624]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19868:	ldr	r3, [r4, r3]
   1986c:	ldr	r2, [r3, #136]	; 0x88
   19870:	ldr	r3, [pc, #1612]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19874:	ldr	r3, [r4, r3]
   19878:	add	r2, r2, #2
   1987c:	ldr	r3, [r3, r2, lsl #2]
   19880:	sub	r2, fp, #24
   19884:	mov	r1, r2
   19888:	mov	r0, r3
   1988c:	bl	1266c <coda_type_get_class@plt>
   19890:	mov	r3, r0
   19894:	cmp	r3, #0
   19898:	beq	198a0 <traverse_info_done@@Base+0x68c>
   1989c:	bl	1bab8 <handle_coda_error@@Base>
   198a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   198a4:	cmp	r3, #6
   198a8:	addls	pc, pc, r3, lsl #2
   198ac:	b	19eb8 <traverse_info_done@@Base+0xca4>
   198b0:	b	198cc <traverse_info_done@@Base+0x6b8>
   198b4:	b	19bfc <traverse_info_done@@Base+0x9e8>
   198b8:	b	19ce8 <traverse_info_done@@Base+0xad4>
   198bc:	b	19ce8 <traverse_info_done@@Base+0xad4>
   198c0:	b	19ce8 <traverse_info_done@@Base+0xad4>
   198c4:	b	19ce8 <traverse_info_done@@Base+0xad4>
   198c8:	b	19d88 <traverse_info_done@@Base+0xb74>
   198cc:	ldr	r3, [pc, #1520]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   198d0:	ldr	r3, [r4, r3]
   198d4:	ldr	r3, [r3, #136]	; 0x88
   198d8:	cmp	r3, #30
   198dc:	bgt	19ea4 <traverse_info_done@@Base+0xc90>
   198e0:	ldr	r3, [pc, #1500]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   198e4:	ldr	r3, [r4, r3]
   198e8:	ldr	r3, [r3, #3748]	; 0xea4
   198ec:	add	r2, r3, #1
   198f0:	ldr	r3, [pc, #1484]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   198f4:	ldr	r3, [r4, r3]
   198f8:	str	r2, [r3, #3748]	; 0xea4
   198fc:	ldr	r3, [pc, #1472]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19900:	ldr	r3, [r4, r3]
   19904:	ldr	r2, [r3, #136]	; 0x88
   19908:	ldr	r3, [pc, #1460]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   1990c:	ldr	r3, [r4, r3]
   19910:	add	r2, r2, #2
   19914:	ldr	r3, [r3, r2, lsl #2]
   19918:	sub	r2, fp, #28
   1991c:	mov	r1, r2
   19920:	mov	r0, r3
   19924:	bl	12408 <coda_type_get_num_record_fields@plt>
   19928:	mov	r3, r0
   1992c:	cmp	r3, #0
   19930:	beq	19938 <traverse_info_done@@Base+0x724>
   19934:	bl	1bab8 <handle_coda_error@@Base>
   19938:	ldr	r3, [pc, #1412]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   1993c:	ldr	r3, [r4, r3]
   19940:	ldr	r3, [r3, #136]	; 0x88
   19944:	add	r2, r3, #1
   19948:	ldr	r3, [pc, #1396]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   1994c:	ldr	r3, [r4, r3]
   19950:	str	r2, [r3, #136]	; 0x88
   19954:	ldr	r3, [pc, #1384]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19958:	ldr	r3, [r4, r3]
   1995c:	ldr	r2, [r3, #796]	; 0x31c
   19960:	ldr	r3, [pc, #1372]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19964:	ldr	r3, [r4, r3]
   19968:	add	r2, r2, #166	; 0xa6
   1996c:	ldr	r3, [r3, r2, lsl #2]
   19970:	cmp	r3, #0
   19974:	beq	19b88 <traverse_info_done@@Base+0x974>
   19978:	ldr	r3, [pc, #1348]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   1997c:	ldr	r3, [r4, r3]
   19980:	ldr	r2, [r3, #796]	; 0x31c
   19984:	ldr	r3, [pc, #1336]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19988:	ldr	r3, [r4, r3]
   1998c:	add	r2, r2, #166	; 0xa6
   19990:	ldr	r3, [r3, r2, lsl #2]
   19994:	str	r3, [fp, #-16]
   19998:	b	19b40 <traverse_info_done@@Base+0x92c>
   1999c:	ldr	r3, [pc, #1312]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   199a0:	ldr	r3, [r4, r3]
   199a4:	ldr	r2, [r3, #796]	; 0x31c
   199a8:	ldr	r3, [pc, #1300]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   199ac:	ldr	r3, [r4, r3]
   199b0:	add	r2, r2, #166	; 0xa6
   199b4:	ldr	r3, [r3, r2, lsl #2]
   199b8:	mov	r0, r3
   199bc:	bl	17c18 <codadump_filter_get_fieldname@@Base>
   199c0:	str	r0, [fp, #-20]	; 0xffffffec
   199c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   199c8:	cmp	r3, #0
   199cc:	bne	199f0 <traverse_info_done@@Base+0x7dc>
   199d0:	ldr	r3, [pc, #1264]	; 19ec8 <traverse_info_done@@Base+0xcb4>
   199d4:	add	r3, pc, r3
   199d8:	ldr	r2, [pc, #1260]	; 19ecc <traverse_info_done@@Base+0xcb8>
   199dc:	ldr	r1, [pc, #1260]	; 19ed0 <traverse_info_done@@Base+0xcbc>
   199e0:	add	r1, pc, r1
   199e4:	ldr	r0, [pc, #1256]	; 19ed4 <traverse_info_done@@Base+0xcc0>
   199e8:	add	r0, pc, r0
   199ec:	bl	12660 <__assert_fail@plt>
   199f0:	ldr	r3, [pc, #1228]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   199f4:	ldr	r3, [r4, r3]
   199f8:	ldr	r3, [r3, #136]	; 0x88
   199fc:	sub	r2, r3, #1
   19a00:	ldr	r3, [pc, #1212]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19a04:	ldr	r3, [r4, r3]
   19a08:	add	r2, r2, #2
   19a0c:	ldr	r3, [r3, r2, lsl #2]
   19a10:	sub	r2, fp, #32
   19a14:	ldr	r1, [fp, #-20]	; 0xffffffec
   19a18:	mov	r0, r3
   19a1c:	bl	12570 <coda_type_get_record_field_index_from_name@plt>
   19a20:	mov	r3, r0
   19a24:	cmp	r3, #0
   19a28:	beq	19a6c <traverse_info_done@@Base+0x858>
   19a2c:	bl	1260c <coda_get_errno@plt>
   19a30:	mov	r3, r0
   19a34:	ldr	r3, [r3]
   19a38:	cmn	r3, #102	; 0x66
   19a3c:	bne	19a68 <traverse_info_done@@Base+0x854>
   19a40:	ldr	r3, [pc, #1168]	; 19ed8 <traverse_info_done@@Base+0xcc4>
   19a44:	ldr	r3, [r4, r3]
   19a48:	ldr	r3, [r3]
   19a4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19a50:	ldr	r1, [pc, #1156]	; 19edc <traverse_info_done@@Base+0xcc8>
   19a54:	add	r1, pc, r1
   19a58:	mov	r0, r3
   19a5c:	bl	1245c <fprintf@plt>
   19a60:	mov	r0, #1
   19a64:	bl	12414 <exit@plt>
   19a68:	bl	1bab8 <handle_coda_error@@Base>
   19a6c:	ldr	r3, [pc, #1104]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19a70:	ldr	r3, [r4, r3]
   19a74:	ldr	r3, [r3, #796]	; 0x31c
   19a78:	add	r5, r3, #1
   19a7c:	ldr	r3, [pc, #1088]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19a80:	ldr	r3, [r4, r3]
   19a84:	ldr	r2, [r3, #796]	; 0x31c
   19a88:	ldr	r3, [pc, #1076]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19a8c:	ldr	r3, [r4, r3]
   19a90:	add	r2, r2, #166	; 0xa6
   19a94:	ldr	r3, [r3, r2, lsl #2]
   19a98:	mov	r0, r3
   19a9c:	bl	17c74 <codadump_filter_get_subfilter@@Base>
   19aa0:	mov	r1, r0
   19aa4:	ldr	r3, [pc, #1048]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19aa8:	ldr	r3, [r4, r3]
   19aac:	add	r2, r5, #166	; 0xa6
   19ab0:	str	r1, [r3, r2, lsl #2]
   19ab4:	ldr	r3, [pc, #1032]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19ab8:	ldr	r3, [r4, r3]
   19abc:	ldr	r3, [r3, #796]	; 0x31c
   19ac0:	add	r2, r3, #1
   19ac4:	ldr	r3, [pc, #1016]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19ac8:	ldr	r3, [r4, r3]
   19acc:	str	r2, [r3, #796]	; 0x31c
   19ad0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ad4:	mov	r1, #1
   19ad8:	mov	r0, r3
   19adc:	bl	1962c <traverse_info_done@@Base+0x418>
   19ae0:	ldr	r3, [pc, #988]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19ae4:	ldr	r3, [r4, r3]
   19ae8:	ldr	r3, [r3, #796]	; 0x31c
   19aec:	sub	r2, r3, #1
   19af0:	ldr	r3, [pc, #972]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19af4:	ldr	r3, [r4, r3]
   19af8:	str	r2, [r3, #796]	; 0x31c
   19afc:	ldr	r3, [pc, #960]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b00:	ldr	r3, [r4, r3]
   19b04:	ldr	r5, [r3, #796]	; 0x31c
   19b08:	ldr	r3, [pc, #948]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b0c:	ldr	r3, [r4, r3]
   19b10:	ldr	r2, [r3, #796]	; 0x31c
   19b14:	ldr	r3, [pc, #936]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b18:	ldr	r3, [r4, r3]
   19b1c:	add	r2, r2, #166	; 0xa6
   19b20:	ldr	r3, [r3, r2, lsl #2]
   19b24:	mov	r0, r3
   19b28:	bl	17cd0 <codadump_filter_get_next_filter@@Base>
   19b2c:	mov	r1, r0
   19b30:	ldr	r3, [pc, #908]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b34:	ldr	r3, [r4, r3]
   19b38:	add	r2, r5, #166	; 0xa6
   19b3c:	str	r1, [r3, r2, lsl #2]
   19b40:	ldr	r3, [pc, #892]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b44:	ldr	r3, [r4, r3]
   19b48:	ldr	r2, [r3, #796]	; 0x31c
   19b4c:	ldr	r3, [pc, #880]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b50:	ldr	r3, [r4, r3]
   19b54:	add	r2, r2, #166	; 0xa6
   19b58:	ldr	r3, [r3, r2, lsl #2]
   19b5c:	cmp	r3, #0
   19b60:	bne	1999c <traverse_info_done@@Base+0x788>
   19b64:	ldr	r3, [pc, #856]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b68:	ldr	r3, [r4, r3]
   19b6c:	ldr	r2, [r3, #796]	; 0x31c
   19b70:	ldr	r3, [pc, #844]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19b74:	ldr	r3, [r4, r3]
   19b78:	add	r2, r2, #166	; 0xa6
   19b7c:	ldr	r1, [fp, #-16]
   19b80:	str	r1, [r3, r2, lsl #2]
   19b84:	b	19bc0 <traverse_info_done@@Base+0x9ac>
   19b88:	mov	r3, #0
   19b8c:	str	r3, [fp, #-32]	; 0xffffffe0
   19b90:	b	19bb0 <traverse_info_done@@Base+0x99c>
   19b94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19b98:	mov	r1, #0
   19b9c:	mov	r0, r3
   19ba0:	bl	1962c <traverse_info_done@@Base+0x418>
   19ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19ba8:	add	r3, r3, #1
   19bac:	str	r3, [fp, #-32]	; 0xffffffe0
   19bb0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19bb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19bb8:	cmp	r2, r3
   19bbc:	blt	19b94 <traverse_info_done@@Base+0x980>
   19bc0:	ldr	r3, [pc, #764]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19bc4:	ldr	r3, [r4, r3]
   19bc8:	ldr	r3, [r3, #136]	; 0x88
   19bcc:	sub	r2, r3, #1
   19bd0:	ldr	r3, [pc, #748]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19bd4:	ldr	r3, [r4, r3]
   19bd8:	str	r2, [r3, #136]	; 0x88
   19bdc:	ldr	r3, [pc, #736]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19be0:	ldr	r3, [r4, r3]
   19be4:	ldr	r3, [r3, #3748]	; 0xea4
   19be8:	sub	r2, r3, #1
   19bec:	ldr	r3, [pc, #720]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19bf0:	ldr	r3, [r4, r3]
   19bf4:	str	r2, [r3, #3748]	; 0xea4
   19bf8:	b	19eb8 <traverse_info_done@@Base+0xca4>
   19bfc:	ldr	r3, [pc, #704]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c00:	ldr	r3, [r4, r3]
   19c04:	ldr	r3, [r3, #136]	; 0x88
   19c08:	cmp	r3, #30
   19c0c:	bgt	19eac <traverse_info_done@@Base+0xc98>
   19c10:	bl	15e08 <dim_enter_array@@Base>
   19c14:	ldr	r3, [pc, #680]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c18:	ldr	r3, [r4, r3]
   19c1c:	ldr	r3, [r3, #3360]	; 0xd20
   19c20:	add	r2, r3, #1
   19c24:	ldr	r3, [pc, #664]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c28:	ldr	r3, [r4, r3]
   19c2c:	str	r2, [r3, #3360]	; 0xd20
   19c30:	ldr	r3, [pc, #652]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c34:	ldr	r3, [r4, r3]
   19c38:	ldr	r3, [r3, #136]	; 0x88
   19c3c:	add	r2, r3, #1
   19c40:	ldr	r3, [pc, #636]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c44:	ldr	r3, [r4, r3]
   19c48:	str	r2, [r3, #136]	; 0x88
   19c4c:	ldr	r3, [pc, #624]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c50:	ldr	r3, [r4, r3]
   19c54:	ldr	r3, [r3, #136]	; 0x88
   19c58:	sub	r2, r3, #1
   19c5c:	ldr	r3, [pc, #608]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c60:	ldr	r3, [r4, r3]
   19c64:	add	r2, r2, #2
   19c68:	ldr	r0, [r3, r2, lsl #2]
   19c6c:	ldr	r3, [pc, #592]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c70:	ldr	r3, [r4, r3]
   19c74:	ldr	r3, [r3, #136]	; 0x88
   19c78:	add	r3, r3, #2
   19c7c:	lsl	r3, r3, #2
   19c80:	ldr	r2, [pc, #572]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19c84:	ldr	r2, [r4, r2]
   19c88:	add	r3, r3, r2
   19c8c:	mov	r1, r3
   19c90:	bl	124f8 <coda_type_get_array_base_type@plt>
   19c94:	mov	r3, r0
   19c98:	cmp	r3, #0
   19c9c:	beq	19ca4 <traverse_info_done@@Base+0xa90>
   19ca0:	bl	1bab8 <handle_coda_error@@Base>
   19ca4:	bl	19850 <traverse_info_done@@Base+0x63c>
   19ca8:	ldr	r3, [pc, #532]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19cac:	ldr	r3, [r4, r3]
   19cb0:	ldr	r3, [r3, #136]	; 0x88
   19cb4:	sub	r2, r3, #1
   19cb8:	ldr	r3, [pc, #516]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19cbc:	ldr	r3, [r4, r3]
   19cc0:	str	r2, [r3, #136]	; 0x88
   19cc4:	ldr	r3, [pc, #504]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19cc8:	ldr	r3, [r4, r3]
   19ccc:	ldr	r3, [r3, #3360]	; 0xd20
   19cd0:	sub	r2, r3, #1
   19cd4:	ldr	r3, [pc, #488]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19cd8:	ldr	r3, [r4, r3]
   19cdc:	str	r2, [r3, #3360]	; 0xd20
   19ce0:	bl	16d94 <dim_leave_array@@Base>
   19ce4:	b	19eb8 <traverse_info_done@@Base+0xca4>
   19ce8:	ldr	r3, [pc, #468]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19cec:	ldr	r3, [r4, r3]
   19cf0:	ldr	r2, [r3, #136]	; 0x88
   19cf4:	ldr	r3, [pc, #456]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19cf8:	ldr	r3, [r4, r3]
   19cfc:	add	r2, r2, #2
   19d00:	ldr	r3, [r3, r2, lsl #2]
   19d04:	sub	r2, fp, #36	; 0x24
   19d08:	mov	r1, r2
   19d0c:	mov	r0, r3
   19d10:	bl	12420 <coda_type_get_read_type@plt>
   19d14:	mov	r3, r0
   19d18:	cmp	r3, #0
   19d1c:	beq	19d24 <traverse_info_done@@Base+0xb10>
   19d20:	bl	1bab8 <handle_coda_error@@Base>
   19d24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19d28:	sub	r3, r3, #11
   19d2c:	cmp	r3, #1
   19d30:	bhi	19d7c <traverse_info_done@@Base+0xb68>
   19d34:	bl	15e08 <dim_enter_array@@Base>
   19d38:	ldr	r3, [pc, #388]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19d3c:	ldr	r3, [r4, r3]
   19d40:	ldr	r3, [r3, #3360]	; 0xd20
   19d44:	add	r2, r3, #1
   19d48:	ldr	r3, [pc, #372]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19d4c:	ldr	r3, [r4, r3]
   19d50:	str	r2, [r3, #3360]	; 0xd20
   19d54:	bl	19280 <traverse_info_done@@Base+0x6c>
   19d58:	ldr	r3, [pc, #356]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19d5c:	ldr	r3, [r4, r3]
   19d60:	ldr	r3, [r3, #3360]	; 0xd20
   19d64:	sub	r2, r3, #1
   19d68:	ldr	r3, [pc, #340]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19d6c:	ldr	r3, [r4, r3]
   19d70:	str	r2, [r3, #3360]	; 0xd20
   19d74:	bl	16d94 <dim_leave_array@@Base>
   19d78:	b	19d84 <traverse_info_done@@Base+0xb70>
   19d7c:	bl	19280 <traverse_info_done@@Base+0x6c>
   19d80:	nop			; (mov r0, r0)
   19d84:	b	19eb8 <traverse_info_done@@Base+0xca4>
   19d88:	bl	121f8 <coda_get_option_bypass_special_types@plt>
   19d8c:	mov	r3, r0
   19d90:	cmp	r3, #0
   19d94:	beq	19df4 <traverse_info_done@@Base+0xbe0>
   19d98:	ldr	r3, [pc, #292]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19d9c:	ldr	r3, [r4, r3]
   19da0:	ldr	r2, [r3, #136]	; 0x88
   19da4:	ldr	r3, [pc, #280]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19da8:	ldr	r3, [r4, r3]
   19dac:	add	r2, r2, #2
   19db0:	ldr	r0, [r3, r2, lsl #2]
   19db4:	ldr	r3, [pc, #264]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19db8:	ldr	r3, [r4, r3]
   19dbc:	ldr	r3, [r3, #136]	; 0x88
   19dc0:	add	r3, r3, #2
   19dc4:	lsl	r3, r3, #2
   19dc8:	ldr	r2, [pc, #244]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19dcc:	ldr	r2, [r4, r2]
   19dd0:	add	r3, r3, r2
   19dd4:	mov	r1, r3
   19dd8:	bl	12618 <coda_type_get_special_base_type@plt>
   19ddc:	mov	r3, r0
   19de0:	cmp	r3, #0
   19de4:	beq	19dec <traverse_info_done@@Base+0xbd8>
   19de8:	bl	1bab8 <handle_coda_error@@Base>
   19dec:	bl	19850 <traverse_info_done@@Base+0x63c>
   19df0:	b	19eb8 <traverse_info_done@@Base+0xca4>
   19df4:	ldr	r3, [pc, #200]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19df8:	ldr	r3, [r4, r3]
   19dfc:	ldr	r2, [r3, #136]	; 0x88
   19e00:	ldr	r3, [pc, #188]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19e04:	ldr	r3, [r4, r3]
   19e08:	add	r2, r2, #2
   19e0c:	ldr	r3, [r3, r2, lsl #2]
   19e10:	sub	r2, fp, #40	; 0x28
   19e14:	mov	r1, r2
   19e18:	mov	r0, r3
   19e1c:	bl	124d4 <coda_type_get_special_type@plt>
   19e20:	mov	r3, r0
   19e24:	cmp	r3, #0
   19e28:	beq	19e30 <traverse_info_done@@Base+0xc1c>
   19e2c:	bl	1bab8 <handle_coda_error@@Base>
   19e30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19e34:	cmp	r3, #3
   19e38:	addls	pc, pc, r3, lsl #2
   19e3c:	b	19eb4 <traverse_info_done@@Base+0xca0>
   19e40:	b	19eb4 <traverse_info_done@@Base+0xca0>
   19e44:	b	19e50 <traverse_info_done@@Base+0xc3c>
   19e48:	b	19e50 <traverse_info_done@@Base+0xc3c>
   19e4c:	b	19e58 <traverse_info_done@@Base+0xc44>
   19e50:	bl	19280 <traverse_info_done@@Base+0x6c>
   19e54:	b	19ea0 <traverse_info_done@@Base+0xc8c>
   19e58:	bl	15e08 <dim_enter_array@@Base>
   19e5c:	ldr	r3, [pc, #96]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19e60:	ldr	r3, [r4, r3]
   19e64:	ldr	r3, [r3, #3360]	; 0xd20
   19e68:	add	r2, r3, #1
   19e6c:	ldr	r3, [pc, #80]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19e70:	ldr	r3, [r4, r3]
   19e74:	str	r2, [r3, #3360]	; 0xd20
   19e78:	bl	19280 <traverse_info_done@@Base+0x6c>
   19e7c:	ldr	r3, [pc, #64]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19e80:	ldr	r3, [r4, r3]
   19e84:	ldr	r3, [r3, #3360]	; 0xd20
   19e88:	sub	r2, r3, #1
   19e8c:	ldr	r3, [pc, #48]	; 19ec4 <traverse_info_done@@Base+0xcb0>
   19e90:	ldr	r3, [r4, r3]
   19e94:	str	r2, [r3, #3360]	; 0xd20
   19e98:	bl	16d94 <dim_leave_array@@Base>
   19e9c:	nop			; (mov r0, r0)
   19ea0:	b	19eb4 <traverse_info_done@@Base+0xca0>
   19ea4:	nop			; (mov r0, r0)
   19ea8:	b	19eb8 <traverse_info_done@@Base+0xca4>
   19eac:	nop			; (mov r0, r0)
   19eb0:	b	19eb8 <traverse_info_done@@Base+0xca4>
   19eb4:	nop			; (mov r0, r0)
   19eb8:	sub	sp, fp, #12
   19ebc:	pop	{r4, r5, fp, pc}
   19ec0:	muleq	r1, r8, r7
   19ec4:			; <UNDEFINED> instruction: 0x000001b4
   19ec8:	muleq	r0, r4, r4
   19ecc:	andeq	r0, r0, r9, lsl #3
   19ed0:	muleq	r0, r8, r3
   19ed4:	andeq	r5, r0, r8, lsr #8
   19ed8:			; <UNDEFINED> instruction: 0x000001b8
   19edc:	andeq	r5, r0, ip, asr #7

00019ee0 <traverse_product@@Base>:
   19ee0:	push	{r4, fp, lr}
   19ee4:	add	fp, sp, #8
   19ee8:	sub	sp, sp, #12
   19eec:	ldr	r4, [pc, #304]	; 1a024 <traverse_product@@Base+0x144>
   19ef0:	add	r4, pc, r4
   19ef4:	ldr	r3, [pc, #300]	; 1a028 <traverse_product@@Base+0x148>
   19ef8:	ldr	r3, [r4, r3]
   19efc:	ldr	r2, [r3]
   19f00:	ldr	r3, [pc, #288]	; 1a028 <traverse_product@@Base+0x148>
   19f04:	ldr	r3, [r4, r3]
   19f08:	add	r1, r3, #4
   19f0c:	mov	r0, r2
   19f10:	bl	12258 <coda_open@plt>
   19f14:	str	r0, [fp, #-16]
   19f18:	ldr	r3, [fp, #-16]
   19f1c:	cmp	r3, #0
   19f20:	beq	19f6c <traverse_product@@Base+0x8c>
   19f24:	bl	1260c <coda_get_errno@plt>
   19f28:	mov	r3, r0
   19f2c:	ldr	r3, [r3]
   19f30:	cmn	r3, #21
   19f34:	bne	19f6c <traverse_product@@Base+0x8c>
   19f38:	mov	r0, #0
   19f3c:	bl	122a0 <coda_set_option_use_mmap@plt>
   19f40:	ldr	r3, [pc, #224]	; 1a028 <traverse_product@@Base+0x148>
   19f44:	ldr	r3, [r4, r3]
   19f48:	ldr	r2, [r3]
   19f4c:	ldr	r3, [pc, #212]	; 1a028 <traverse_product@@Base+0x148>
   19f50:	ldr	r3, [r4, r3]
   19f54:	add	r1, r3, #4
   19f58:	mov	r0, r2
   19f5c:	bl	12258 <coda_open@plt>
   19f60:	str	r0, [fp, #-16]
   19f64:	mov	r0, #1
   19f68:	bl	122a0 <coda_set_option_use_mmap@plt>
   19f6c:	ldr	r3, [fp, #-16]
   19f70:	cmp	r3, #0
   19f74:	beq	19f7c <traverse_product@@Base+0x9c>
   19f78:	bl	1bab8 <handle_coda_error@@Base>
   19f7c:	ldr	r3, [pc, #164]	; 1a028 <traverse_product@@Base+0x148>
   19f80:	ldr	r3, [r4, r3]
   19f84:	ldr	r3, [r3, #4]
   19f88:	mov	r1, r3
   19f8c:	ldr	r3, [pc, #148]	; 1a028 <traverse_product@@Base+0x148>
   19f90:	ldr	r3, [r4, r3]
   19f94:	add	r0, r3, #144	; 0x90
   19f98:	bl	12384 <coda_cursor_set_product@plt>
   19f9c:	mov	r3, r0
   19fa0:	cmp	r3, #0
   19fa4:	beq	19fac <traverse_product@@Base+0xcc>
   19fa8:	bl	1bab8 <handle_coda_error@@Base>
   19fac:	ldr	r3, [pc, #116]	; 1a028 <traverse_product@@Base+0x148>
   19fb0:	ldr	r3, [r4, r3]
   19fb4:	ldr	r3, [r3, #136]	; 0x88
   19fb8:	add	r3, r3, #2
   19fbc:	lsl	r3, r3, #2
   19fc0:	ldr	r2, [pc, #96]	; 1a028 <traverse_product@@Base+0x148>
   19fc4:	ldr	r2, [r4, r2]
   19fc8:	add	r3, r3, r2
   19fcc:	mov	r1, r3
   19fd0:	ldr	r3, [pc, #80]	; 1a028 <traverse_product@@Base+0x148>
   19fd4:	ldr	r3, [r4, r3]
   19fd8:	add	r0, r3, #144	; 0x90
   19fdc:	bl	122dc <coda_cursor_get_type@plt>
   19fe0:	mov	r3, r0
   19fe4:	cmp	r3, #0
   19fe8:	beq	19ff0 <traverse_product@@Base+0x110>
   19fec:	bl	1bab8 <handle_coda_error@@Base>
   19ff0:	bl	19850 <traverse_info_done@@Base+0x63c>
   19ff4:	ldr	r3, [pc, #44]	; 1a028 <traverse_product@@Base+0x148>
   19ff8:	ldr	r3, [r4, r3]
   19ffc:	ldr	r3, [r3, #4]
   1a000:	mov	r0, r3
   1a004:	bl	12540 <coda_close@plt>
   1a008:	ldr	r3, [pc, #24]	; 1a028 <traverse_product@@Base+0x148>
   1a00c:	ldr	r3, [r4, r3]
   1a010:	mov	r2, #0
   1a014:	str	r2, [r3, #4]
   1a018:	nop			; (mov r0, r0)
   1a01c:	sub	sp, fp, #8
   1a020:	pop	{r4, fp, pc}
   1a024:	andeq	r7, r1, r8, lsl #2
   1a028:			; <UNDEFINED> instruction: 0x000001b4
   1a02c:	push	{r4, fp, lr}
   1a030:	add	fp, sp, #8
   1a034:	sub	sp, sp, #12
   1a038:	ldr	r4, [pc, #140]	; 1a0cc <traverse_product@@Base+0x1ec>
   1a03c:	add	r4, pc, r4
   1a040:	ldr	r3, [pc, #136]	; 1a0d0 <traverse_product@@Base+0x1f0>
   1a044:	add	r3, pc, r3
   1a048:	ldr	r3, [r3]
   1a04c:	cmp	r3, #0
   1a050:	bge	1a074 <traverse_product@@Base+0x194>
   1a054:	ldr	r3, [pc, #120]	; 1a0d4 <traverse_product@@Base+0x1f4>
   1a058:	add	r3, pc, r3
   1a05c:	mov	r2, #44	; 0x2c
   1a060:	ldr	r1, [pc, #112]	; 1a0d8 <traverse_product@@Base+0x1f8>
   1a064:	add	r1, pc, r1
   1a068:	ldr	r0, [pc, #108]	; 1a0dc <traverse_product@@Base+0x1fc>
   1a06c:	add	r0, pc, r0
   1a070:	bl	12660 <__assert_fail@plt>
   1a074:	ldr	r3, [pc, #100]	; 1a0e0 <traverse_product@@Base+0x200>
   1a078:	add	r3, pc, r3
   1a07c:	ldr	r3, [r3]
   1a080:	str	r3, [fp, #-16]
   1a084:	b	1a0b4 <traverse_product@@Base+0x1d4>
   1a088:	ldr	r3, [pc, #84]	; 1a0e4 <traverse_product@@Base+0x204>
   1a08c:	ldr	r3, [r4, r3]
   1a090:	ldr	r3, [r3]
   1a094:	mov	r2, #2
   1a098:	mov	r1, #1
   1a09c:	ldr	r0, [pc, #68]	; 1a0e8 <traverse_product@@Base+0x208>
   1a0a0:	add	r0, pc, r0
   1a0a4:	bl	12378 <fwrite@plt>
   1a0a8:	ldr	r3, [fp, #-16]
   1a0ac:	sub	r3, r3, #1
   1a0b0:	str	r3, [fp, #-16]
   1a0b4:	ldr	r3, [fp, #-16]
   1a0b8:	cmp	r3, #0
   1a0bc:	bgt	1a088 <traverse_product@@Base+0x1a8>
   1a0c0:	nop			; (mov r0, r0)
   1a0c4:	sub	sp, fp, #8
   1a0c8:	pop	{r4, fp, pc}
   1a0cc:			; <UNDEFINED> instruction: 0x00016fbc
   1a0d0:	andeq	r7, r1, r8, asr #3
   1a0d4:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   1a0d8:	andeq	r4, r0, r4, lsl lr
   1a0dc:	andeq	r4, r0, r0, ror lr
   1a0e0:	muleq	r1, r4, r1
   1a0e4:			; <UNDEFINED> instruction: 0x000001bc
   1a0e8:	andeq	r4, r0, r8, asr #28
   1a0ec:	push	{r0, r1, r2, r3}
   1a0f0:	push	{fp, lr}
   1a0f4:	add	fp, sp, #4
   1a0f8:	sub	sp, sp, #8
   1a0fc:	ldr	r2, [pc, #64]	; 1a144 <traverse_product@@Base+0x264>
   1a100:	add	r2, pc, r2
   1a104:	add	r3, fp, #8
   1a108:	str	r3, [fp, #-12]
   1a10c:	ldr	r3, [pc, #52]	; 1a148 <traverse_product@@Base+0x268>
   1a110:	ldr	r3, [r2, r3]
   1a114:	ldr	r3, [r3]
   1a118:	ldr	r2, [fp, #-12]
   1a11c:	ldr	r1, [fp, #4]
   1a120:	mov	r0, r3
   1a124:	bl	12558 <vfprintf@plt>
   1a128:	str	r0, [fp, #-8]
   1a12c:	ldr	r3, [fp, #-8]
   1a130:	mov	r0, r3
   1a134:	sub	sp, fp, #4
   1a138:	pop	{fp, lr}
   1a13c:	add	sp, sp, #16
   1a140:	bx	lr
   1a144:	strdeq	r6, [r1], -r8
   1a148:			; <UNDEFINED> instruction: 0x000001bc
   1a14c:	push	{r0, r1, r2, r3}
   1a150:	push	{r4, fp, lr}
   1a154:	add	fp, sp, #8
   1a158:	sub	sp, sp, #12
   1a15c:	ldr	r4, [pc, #68]	; 1a1a8 <traverse_product@@Base+0x2c8>
   1a160:	add	r4, pc, r4
   1a164:	bl	1a02c <traverse_product@@Base+0x14c>
   1a168:	add	r3, fp, #8
   1a16c:	str	r3, [fp, #-20]	; 0xffffffec
   1a170:	ldr	r3, [pc, #52]	; 1a1ac <traverse_product@@Base+0x2cc>
   1a174:	ldr	r3, [r4, r3]
   1a178:	ldr	r3, [r3]
   1a17c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a180:	ldr	r1, [fp, #4]
   1a184:	mov	r0, r3
   1a188:	bl	12558 <vfprintf@plt>
   1a18c:	str	r0, [fp, #-16]
   1a190:	ldr	r3, [fp, #-16]
   1a194:	mov	r0, r3
   1a198:	sub	sp, fp, #8
   1a19c:	pop	{r4, fp, lr}
   1a1a0:	add	sp, sp, #16
   1a1a4:	bx	lr
   1a1a8:	muleq	r1, r8, lr
   1a1ac:			; <UNDEFINED> instruction: 0x000001bc
   1a1b0:	push	{fp, lr}
   1a1b4:	add	fp, sp, #4
   1a1b8:	sub	sp, sp, #16
   1a1bc:	str	r0, [fp, #-16]
   1a1c0:	str	r1, [fp, #-20]	; 0xffffffec
   1a1c4:	mov	r3, #0
   1a1c8:	str	r3, [fp, #-8]
   1a1cc:	b	1a314 <traverse_product@@Base+0x434>
   1a1d0:	ldr	r3, [fp, #-8]
   1a1d4:	ldr	r2, [fp, #-16]
   1a1d8:	add	r3, r2, r3
   1a1dc:	ldrb	r3, [r3]
   1a1e0:	strb	r3, [fp, #-9]
   1a1e4:	ldrb	r3, [fp, #-9]
   1a1e8:	cmp	r3, #12
   1a1ec:	beq	1a244 <traverse_product@@Base+0x364>
   1a1f0:	cmp	r3, #12
   1a1f4:	bgt	1a214 <traverse_product@@Base+0x334>
   1a1f8:	cmp	r3, #9
   1a1fc:	beq	1a280 <traverse_product@@Base+0x3a0>
   1a200:	cmp	r3, #10
   1a204:	beq	1a258 <traverse_product@@Base+0x378>
   1a208:	cmp	r3, #8
   1a20c:	beq	1a230 <traverse_product@@Base+0x350>
   1a210:	b	1a2bc <traverse_product@@Base+0x3dc>
   1a214:	cmp	r3, #34	; 0x22
   1a218:	beq	1a294 <traverse_product@@Base+0x3b4>
   1a21c:	cmp	r3, #92	; 0x5c
   1a220:	beq	1a2a8 <traverse_product@@Base+0x3c8>
   1a224:	cmp	r3, #13
   1a228:	beq	1a26c <traverse_product@@Base+0x38c>
   1a22c:	b	1a2bc <traverse_product@@Base+0x3dc>
   1a230:	ldr	r3, [pc, #248]	; 1a330 <traverse_product@@Base+0x450>
   1a234:	add	r3, pc, r3
   1a238:	mov	r0, r3
   1a23c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a240:	b	1a308 <traverse_product@@Base+0x428>
   1a244:	ldr	r3, [pc, #232]	; 1a334 <traverse_product@@Base+0x454>
   1a248:	add	r3, pc, r3
   1a24c:	mov	r0, r3
   1a250:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a254:	b	1a308 <traverse_product@@Base+0x428>
   1a258:	ldr	r3, [pc, #216]	; 1a338 <traverse_product@@Base+0x458>
   1a25c:	add	r3, pc, r3
   1a260:	mov	r0, r3
   1a264:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a268:	b	1a308 <traverse_product@@Base+0x428>
   1a26c:	ldr	r3, [pc, #200]	; 1a33c <traverse_product@@Base+0x45c>
   1a270:	add	r3, pc, r3
   1a274:	mov	r0, r3
   1a278:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a27c:	b	1a308 <traverse_product@@Base+0x428>
   1a280:	ldr	r3, [pc, #184]	; 1a340 <traverse_product@@Base+0x460>
   1a284:	add	r3, pc, r3
   1a288:	mov	r0, r3
   1a28c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a290:	b	1a308 <traverse_product@@Base+0x428>
   1a294:	ldr	r3, [pc, #168]	; 1a344 <traverse_product@@Base+0x464>
   1a298:	add	r3, pc, r3
   1a29c:	mov	r0, r3
   1a2a0:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a2a4:	b	1a308 <traverse_product@@Base+0x428>
   1a2a8:	ldr	r3, [pc, #152]	; 1a348 <traverse_product@@Base+0x468>
   1a2ac:	add	r3, pc, r3
   1a2b0:	mov	r0, r3
   1a2b4:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a2b8:	b	1a308 <traverse_product@@Base+0x428>
   1a2bc:	ldrb	r3, [fp, #-9]
   1a2c0:	cmp	r3, #31
   1a2c4:	bls	1a2f0 <traverse_product@@Base+0x410>
   1a2c8:	ldrb	r3, [fp, #-9]
   1a2cc:	cmp	r3, #126	; 0x7e
   1a2d0:	bhi	1a2f0 <traverse_product@@Base+0x410>
   1a2d4:	ldrb	r3, [fp, #-9]
   1a2d8:	mov	r1, r3
   1a2dc:	ldr	r3, [pc, #104]	; 1a34c <traverse_product@@Base+0x46c>
   1a2e0:	add	r3, pc, r3
   1a2e4:	mov	r0, r3
   1a2e8:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a2ec:	b	1a308 <traverse_product@@Base+0x428>
   1a2f0:	ldrb	r3, [fp, #-9]
   1a2f4:	mov	r1, r3
   1a2f8:	ldr	r3, [pc, #80]	; 1a350 <traverse_product@@Base+0x470>
   1a2fc:	add	r3, pc, r3
   1a300:	mov	r0, r3
   1a304:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a308:	ldr	r3, [fp, #-8]
   1a30c:	add	r3, r3, #1
   1a310:	str	r3, [fp, #-8]
   1a314:	ldr	r2, [fp, #-8]
   1a318:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a31c:	cmp	r2, r3
   1a320:	blt	1a1d0 <traverse_product@@Base+0x2f0>
   1a324:	nop			; (mov r0, r0)
   1a328:	sub	sp, fp, #4
   1a32c:	pop	{fp, pc}
   1a330:			; <UNDEFINED> instruction: 0x00004cb8
   1a334:	andeq	r4, r0, r8, lsr #25
   1a338:	muleq	r0, r8, ip
   1a33c:	andeq	r4, r0, r8, lsl #25
   1a340:	andeq	r4, r0, r8, ror ip
   1a344:	andeq	r4, r0, r8, ror #24
   1a348:	andeq	r4, r0, r8, asr ip
   1a34c:	andeq	r4, r0, r8, lsr #24
   1a350:	andeq	r4, r0, r0, lsl ip
   1a354:	push	{r4, r5, fp, lr}
   1a358:	add	fp, sp, #12
   1a35c:	sub	sp, sp, #288	; 0x120
   1a360:	str	r0, [fp, #-288]	; 0xfffffee0
   1a364:	str	r1, [fp, #-292]	; 0xfffffedc
   1a368:	mov	r3, #0
   1a36c:	str	r3, [fp, #-48]	; 0xffffffd0
   1a370:	ldr	r3, [pc, #3032]	; 1af50 <traverse_product@@Base+0x1070>
   1a374:	add	r3, pc, r3
   1a378:	ldr	r3, [r3]
   1a37c:	cmp	r3, #0
   1a380:	beq	1a470 <traverse_product@@Base+0x590>
   1a384:	sub	r3, fp, #48	; 0x30
   1a388:	mov	r1, r3
   1a38c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a390:	bl	12318 <coda_cursor_has_attributes@plt>
   1a394:	mov	r3, r0
   1a398:	cmp	r3, #0
   1a39c:	beq	1a3a4 <traverse_product@@Base+0x4c4>
   1a3a0:	bl	1bab8 <handle_coda_error@@Base>
   1a3a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a3a8:	cmp	r3, #0
   1a3ac:	beq	1a470 <traverse_product@@Base+0x590>
   1a3b0:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1a3b4:	cmp	r3, #0
   1a3b8:	beq	1a3d0 <traverse_product@@Base+0x4f0>
   1a3bc:	ldr	r3, [pc, #2960]	; 1af54 <traverse_product@@Base+0x1074>
   1a3c0:	add	r3, pc, r3
   1a3c4:	mov	r0, r3
   1a3c8:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a3cc:	bl	1a02c <traverse_product@@Base+0x14c>
   1a3d0:	ldr	r3, [pc, #2944]	; 1af58 <traverse_product@@Base+0x1078>
   1a3d4:	add	r3, pc, r3
   1a3d8:	mov	r0, r3
   1a3dc:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a3e0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a3e4:	bl	12498 <coda_cursor_goto_attributes@plt>
   1a3e8:	mov	r3, r0
   1a3ec:	cmp	r3, #0
   1a3f0:	beq	1a3f8 <traverse_product@@Base+0x518>
   1a3f4:	bl	1bab8 <handle_coda_error@@Base>
   1a3f8:	ldr	r3, [pc, #2908]	; 1af5c <traverse_product@@Base+0x107c>
   1a3fc:	add	r3, pc, r3
   1a400:	ldr	r3, [r3]
   1a404:	add	r2, r3, #1
   1a408:	ldr	r3, [pc, #2896]	; 1af60 <traverse_product@@Base+0x1080>
   1a40c:	add	r3, pc, r3
   1a410:	str	r2, [r3]
   1a414:	mov	r1, #1
   1a418:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a41c:	bl	1a354 <traverse_product@@Base+0x474>
   1a420:	ldr	r3, [pc, #2876]	; 1af64 <traverse_product@@Base+0x1084>
   1a424:	add	r3, pc, r3
   1a428:	ldr	r3, [r3]
   1a42c:	sub	r2, r3, #1
   1a430:	ldr	r3, [pc, #2864]	; 1af68 <traverse_product@@Base+0x1088>
   1a434:	add	r3, pc, r3
   1a438:	str	r2, [r3]
   1a43c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a440:	bl	123fc <coda_cursor_goto_parent@plt>
   1a444:	ldr	r3, [pc, #2848]	; 1af6c <traverse_product@@Base+0x108c>
   1a448:	add	r3, pc, r3
   1a44c:	mov	r0, r3
   1a450:	bl	1a14c <traverse_product@@Base+0x26c>
   1a454:	ldr	r3, [pc, #2836]	; 1af70 <traverse_product@@Base+0x1090>
   1a458:	add	r3, pc, r3
   1a45c:	ldr	r3, [r3]
   1a460:	add	r2, r3, #1
   1a464:	ldr	r3, [pc, #2824]	; 1af74 <traverse_product@@Base+0x1094>
   1a468:	add	r3, pc, r3
   1a46c:	str	r2, [r3]
   1a470:	sub	r3, fp, #44	; 0x2c
   1a474:	mov	r1, r3
   1a478:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a47c:	bl	12324 <coda_cursor_get_type_class@plt>
   1a480:	mov	r3, r0
   1a484:	cmp	r3, #0
   1a488:	beq	1a490 <traverse_product@@Base+0x5b0>
   1a48c:	bl	1bab8 <handle_coda_error@@Base>
   1a490:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a494:	cmp	r3, #6
   1a498:	addls	pc, pc, r3, lsl #2
   1a49c:	b	1af1c <traverse_product@@Base+0x103c>
   1a4a0:	b	1a4bc <traverse_product@@Base+0x5dc>
   1a4a4:	b	1a7a4 <traverse_product@@Base+0x8c4>
   1a4a8:	b	1a934 <traverse_product@@Base+0xa54>
   1a4ac:	b	1a934 <traverse_product@@Base+0xa54>
   1a4b0:	b	1a934 <traverse_product@@Base+0xa54>
   1a4b4:	b	1a934 <traverse_product@@Base+0xa54>
   1a4b8:	b	1ad70 <traverse_product@@Base+0xe90>
   1a4bc:	sub	r3, fp, #52	; 0x34
   1a4c0:	mov	r1, r3
   1a4c4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a4c8:	bl	1227c <coda_cursor_get_num_elements@plt>
   1a4cc:	mov	r3, r0
   1a4d0:	cmp	r3, #0
   1a4d4:	beq	1a4dc <traverse_product@@Base+0x5fc>
   1a4d8:	bl	1bab8 <handle_coda_error@@Base>
   1a4dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a4e0:	cmp	r3, #0
   1a4e4:	ble	1a790 <traverse_product@@Base+0x8b0>
   1a4e8:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1a4ec:	cmp	r3, #0
   1a4f0:	beq	1a504 <traverse_product@@Base+0x624>
   1a4f4:	ldr	r3, [pc, #2684]	; 1af78 <traverse_product@@Base+0x1098>
   1a4f8:	add	r3, pc, r3
   1a4fc:	mov	r0, r3
   1a500:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a504:	sub	r3, fp, #56	; 0x38
   1a508:	mov	r1, r3
   1a50c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a510:	bl	122dc <coda_cursor_get_type@plt>
   1a514:	mov	r3, r0
   1a518:	cmp	r3, #0
   1a51c:	beq	1a524 <traverse_product@@Base+0x644>
   1a520:	bl	1bab8 <handle_coda_error@@Base>
   1a524:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a528:	sub	r2, fp, #60	; 0x3c
   1a52c:	mov	r1, r2
   1a530:	mov	r0, r3
   1a534:	bl	124e0 <coda_type_get_record_union_status@plt>
   1a538:	mov	r3, r0
   1a53c:	cmp	r3, #0
   1a540:	beq	1a548 <traverse_product@@Base+0x668>
   1a544:	bl	1bab8 <handle_coda_error@@Base>
   1a548:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a54c:	cmp	r3, #0
   1a550:	beq	1a630 <traverse_product@@Base+0x750>
   1a554:	sub	r3, fp, #64	; 0x40
   1a558:	mov	r1, r3
   1a55c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a560:	bl	125dc <coda_cursor_get_available_union_field_index@plt>
   1a564:	mov	r3, r0
   1a568:	cmp	r3, #0
   1a56c:	beq	1a574 <traverse_product@@Base+0x694>
   1a570:	bl	1bab8 <handle_coda_error@@Base>
   1a574:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a578:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a57c:	sub	r2, fp, #68	; 0x44
   1a580:	mov	r0, r3
   1a584:	bl	12624 <coda_type_get_record_field_name@plt>
   1a588:	mov	r3, r0
   1a58c:	cmp	r3, #0
   1a590:	beq	1a598 <traverse_product@@Base+0x6b8>
   1a594:	bl	1bab8 <handle_coda_error@@Base>
   1a598:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a59c:	mov	r1, r3
   1a5a0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a5a4:	bl	1239c <coda_cursor_goto_record_field_by_index@plt>
   1a5a8:	mov	r3, r0
   1a5ac:	cmp	r3, #0
   1a5b0:	beq	1a5b8 <traverse_product@@Base+0x6d8>
   1a5b4:	bl	1bab8 <handle_coda_error@@Base>
   1a5b8:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1a5bc:	cmp	r3, #0
   1a5c0:	beq	1a5c8 <traverse_product@@Base+0x6e8>
   1a5c4:	bl	1a02c <traverse_product@@Base+0x14c>
   1a5c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1a5cc:	mov	r1, r3
   1a5d0:	ldr	r3, [pc, #2468]	; 1af7c <traverse_product@@Base+0x109c>
   1a5d4:	add	r3, pc, r3
   1a5d8:	mov	r0, r3
   1a5dc:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a5e0:	ldr	r3, [pc, #2456]	; 1af80 <traverse_product@@Base+0x10a0>
   1a5e4:	add	r3, pc, r3
   1a5e8:	ldr	r3, [r3]
   1a5ec:	add	r2, r3, #1
   1a5f0:	ldr	r3, [pc, #2444]	; 1af84 <traverse_product@@Base+0x10a4>
   1a5f4:	add	r3, pc, r3
   1a5f8:	str	r2, [r3]
   1a5fc:	mov	r1, #1
   1a600:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a604:	bl	1a354 <traverse_product@@Base+0x474>
   1a608:	ldr	r3, [pc, #2424]	; 1af88 <traverse_product@@Base+0x10a8>
   1a60c:	add	r3, pc, r3
   1a610:	ldr	r3, [r3]
   1a614:	sub	r2, r3, #1
   1a618:	ldr	r3, [pc, #2412]	; 1af8c <traverse_product@@Base+0x10ac>
   1a61c:	add	r3, pc, r3
   1a620:	str	r2, [r3]
   1a624:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a628:	bl	123fc <coda_cursor_goto_parent@plt>
   1a62c:	b	1af1c <traverse_product@@Base+0x103c>
   1a630:	mov	r3, #1
   1a634:	str	r3, [fp, #-16]
   1a638:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a63c:	bl	12390 <coda_cursor_goto_first_record_field@plt>
   1a640:	mov	r3, r0
   1a644:	cmp	r3, #0
   1a648:	beq	1a650 <traverse_product@@Base+0x770>
   1a64c:	bl	1bab8 <handle_coda_error@@Base>
   1a650:	mov	r3, #0
   1a654:	str	r3, [fp, #-64]	; 0xffffffc0
   1a658:	b	1a774 <traverse_product@@Base+0x894>
   1a65c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a660:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a664:	sub	r2, fp, #76	; 0x4c
   1a668:	mov	r0, r3
   1a66c:	bl	1221c <coda_type_get_record_field_hidden_status@plt>
   1a670:	mov	r3, r0
   1a674:	cmp	r3, #0
   1a678:	beq	1a680 <traverse_product@@Base+0x7a0>
   1a67c:	bl	1bab8 <handle_coda_error@@Base>
   1a680:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1a684:	cmp	r3, #0
   1a688:	bne	1a73c <traverse_product@@Base+0x85c>
   1a68c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1a690:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1a694:	sub	r2, fp, #72	; 0x48
   1a698:	mov	r0, r3
   1a69c:	bl	12624 <coda_type_get_record_field_name@plt>
   1a6a0:	mov	r3, r0
   1a6a4:	cmp	r3, #0
   1a6a8:	beq	1a6b0 <traverse_product@@Base+0x7d0>
   1a6ac:	bl	1bab8 <handle_coda_error@@Base>
   1a6b0:	ldr	r3, [fp, #-292]	; 0xfffffedc
   1a6b4:	cmp	r3, #0
   1a6b8:	bne	1a6c8 <traverse_product@@Base+0x7e8>
   1a6bc:	ldr	r3, [fp, #-16]
   1a6c0:	cmp	r3, #0
   1a6c4:	bne	1a6cc <traverse_product@@Base+0x7ec>
   1a6c8:	bl	1a02c <traverse_product@@Base+0x14c>
   1a6cc:	ldr	r3, [fp, #-16]
   1a6d0:	cmp	r3, #0
   1a6d4:	beq	1a6e0 <traverse_product@@Base+0x800>
   1a6d8:	mov	r3, #0
   1a6dc:	str	r3, [fp, #-16]
   1a6e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a6e4:	mov	r1, r3
   1a6e8:	ldr	r3, [pc, #2208]	; 1af90 <traverse_product@@Base+0x10b0>
   1a6ec:	add	r3, pc, r3
   1a6f0:	mov	r0, r3
   1a6f4:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a6f8:	ldr	r3, [pc, #2196]	; 1af94 <traverse_product@@Base+0x10b4>
   1a6fc:	add	r3, pc, r3
   1a700:	ldr	r3, [r3]
   1a704:	add	r2, r3, #1
   1a708:	ldr	r3, [pc, #2184]	; 1af98 <traverse_product@@Base+0x10b8>
   1a70c:	add	r3, pc, r3
   1a710:	str	r2, [r3]
   1a714:	mov	r1, #1
   1a718:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a71c:	bl	1a354 <traverse_product@@Base+0x474>
   1a720:	ldr	r3, [pc, #2164]	; 1af9c <traverse_product@@Base+0x10bc>
   1a724:	add	r3, pc, r3
   1a728:	ldr	r3, [r3]
   1a72c:	sub	r2, r3, #1
   1a730:	ldr	r3, [pc, #2152]	; 1afa0 <traverse_product@@Base+0x10c0>
   1a734:	add	r3, pc, r3
   1a738:	str	r2, [r3]
   1a73c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a740:	sub	r2, r3, #1
   1a744:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a748:	cmp	r2, r3
   1a74c:	ble	1a768 <traverse_product@@Base+0x888>
   1a750:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a754:	bl	12588 <coda_cursor_goto_next_record_field@plt>
   1a758:	mov	r3, r0
   1a75c:	cmp	r3, #0
   1a760:	beq	1a768 <traverse_product@@Base+0x888>
   1a764:	bl	1bab8 <handle_coda_error@@Base>
   1a768:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1a76c:	add	r3, r3, #1
   1a770:	str	r3, [fp, #-64]	; 0xffffffc0
   1a774:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1a778:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a77c:	cmp	r2, r3
   1a780:	blt	1a65c <traverse_product@@Base+0x77c>
   1a784:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a788:	bl	123fc <coda_cursor_goto_parent@plt>
   1a78c:	b	1af1c <traverse_product@@Base+0x103c>
   1a790:	ldr	r3, [pc, #2060]	; 1afa4 <traverse_product@@Base+0x10c4>
   1a794:	add	r3, pc, r3
   1a798:	mov	r0, r3
   1a79c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a7a0:	b	1af1c <traverse_product@@Base+0x103c>
   1a7a4:	sub	r2, fp, #284	; 0x11c
   1a7a8:	sub	r3, fp, #80	; 0x50
   1a7ac:	mov	r1, r3
   1a7b0:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a7b4:	bl	12528 <coda_cursor_get_array_dim@plt>
   1a7b8:	mov	r3, r0
   1a7bc:	cmp	r3, #0
   1a7c0:	beq	1a7c8 <traverse_product@@Base+0x8e8>
   1a7c4:	bl	1bab8 <handle_coda_error@@Base>
   1a7c8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a7cc:	cmp	r3, #0
   1a7d0:	blt	1a920 <traverse_product@@Base+0xa40>
   1a7d4:	mov	r3, #1
   1a7d8:	str	r3, [fp, #-20]	; 0xffffffec
   1a7dc:	mov	r3, #0
   1a7e0:	str	r3, [fp, #-24]	; 0xffffffe8
   1a7e4:	b	1a814 <traverse_product@@Base+0x934>
   1a7e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a7ec:	lsl	r3, r3, #2
   1a7f0:	sub	r2, fp, #12
   1a7f4:	add	r3, r2, r3
   1a7f8:	ldr	r2, [r3, #-272]	; 0xfffffef0
   1a7fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a800:	mul	r3, r2, r3
   1a804:	str	r3, [fp, #-20]	; 0xffffffec
   1a808:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a80c:	add	r3, r3, #1
   1a810:	str	r3, [fp, #-24]	; 0xffffffe8
   1a814:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a818:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a81c:	cmp	r2, r3
   1a820:	blt	1a7e8 <traverse_product@@Base+0x908>
   1a824:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a828:	cmp	r3, #0
   1a82c:	ble	1a90c <traverse_product@@Base+0xa2c>
   1a830:	ldr	r3, [pc, #1904]	; 1afa8 <traverse_product@@Base+0x10c8>
   1a834:	add	r3, pc, r3
   1a838:	mov	r0, r3
   1a83c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a840:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a844:	bl	1236c <coda_cursor_goto_first_array_element@plt>
   1a848:	mov	r3, r0
   1a84c:	cmp	r3, #0
   1a850:	beq	1a858 <traverse_product@@Base+0x978>
   1a854:	bl	1bab8 <handle_coda_error@@Base>
   1a858:	mov	r3, #0
   1a85c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a860:	b	1a8f0 <traverse_product@@Base+0xa10>
   1a864:	ldr	r3, [pc, #1856]	; 1afac <traverse_product@@Base+0x10cc>
   1a868:	add	r3, pc, r3
   1a86c:	mov	r0, r3
   1a870:	bl	1a14c <traverse_product@@Base+0x26c>
   1a874:	ldr	r3, [pc, #1844]	; 1afb0 <traverse_product@@Base+0x10d0>
   1a878:	add	r3, pc, r3
   1a87c:	ldr	r3, [r3]
   1a880:	add	r2, r3, #1
   1a884:	ldr	r3, [pc, #1832]	; 1afb4 <traverse_product@@Base+0x10d4>
   1a888:	add	r3, pc, r3
   1a88c:	str	r2, [r3]
   1a890:	mov	r1, #0
   1a894:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a898:	bl	1a354 <traverse_product@@Base+0x474>
   1a89c:	ldr	r3, [pc, #1812]	; 1afb8 <traverse_product@@Base+0x10d8>
   1a8a0:	add	r3, pc, r3
   1a8a4:	ldr	r3, [r3]
   1a8a8:	sub	r2, r3, #1
   1a8ac:	ldr	r3, [pc, #1800]	; 1afbc <traverse_product@@Base+0x10dc>
   1a8b0:	add	r3, pc, r3
   1a8b4:	str	r2, [r3]
   1a8b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8bc:	sub	r2, r3, #1
   1a8c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8c4:	cmp	r2, r3
   1a8c8:	ble	1a8e4 <traverse_product@@Base+0xa04>
   1a8cc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a8d0:	bl	12468 <coda_cursor_goto_next_array_element@plt>
   1a8d4:	mov	r3, r0
   1a8d8:	cmp	r3, #0
   1a8dc:	beq	1a8e4 <traverse_product@@Base+0xa04>
   1a8e0:	bl	1bab8 <handle_coda_error@@Base>
   1a8e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a8e8:	add	r3, r3, #1
   1a8ec:	str	r3, [fp, #-24]	; 0xffffffe8
   1a8f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a8f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a8f8:	cmp	r2, r3
   1a8fc:	blt	1a864 <traverse_product@@Base+0x984>
   1a900:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a904:	bl	123fc <coda_cursor_goto_parent@plt>
   1a908:	b	1af1c <traverse_product@@Base+0x103c>
   1a90c:	ldr	r3, [pc, #1708]	; 1afc0 <traverse_product@@Base+0x10e0>
   1a910:	add	r3, pc, r3
   1a914:	mov	r0, r3
   1a918:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a91c:	b	1af1c <traverse_product@@Base+0x103c>
   1a920:	ldr	r3, [pc, #1692]	; 1afc4 <traverse_product@@Base+0x10e4>
   1a924:	add	r3, pc, r3
   1a928:	mov	r0, r3
   1a92c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a930:	b	1af1c <traverse_product@@Base+0x103c>
   1a934:	sub	r3, fp, #84	; 0x54
   1a938:	mov	r1, r3
   1a93c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a940:	bl	123c0 <coda_cursor_get_read_type@plt>
   1a944:	mov	r3, r0
   1a948:	cmp	r3, #0
   1a94c:	beq	1a954 <traverse_product@@Base+0xa74>
   1a950:	bl	1bab8 <handle_coda_error@@Base>
   1a954:	ldr	r3, [fp, #-84]	; 0xffffffac
   1a958:	add	r3, r3, #1
   1a95c:	cmp	r3, #13
   1a960:	addls	pc, pc, r3, lsl #2
   1a964:	b	1af10 <traverse_product@@Base+0x1030>
   1a968:	b	1ad58 <traverse_product@@Base+0xe78>
   1a96c:	b	1abec <traverse_product@@Base+0xd0c>
   1a970:	b	1ac28 <traverse_product@@Base+0xd48>
   1a974:	b	1abec <traverse_product@@Base+0xd0c>
   1a978:	b	1ac28 <traverse_product@@Base+0xd48>
   1a97c:	b	1abec <traverse_product@@Base+0xd0c>
   1a980:	b	1ac28 <traverse_product@@Base+0xd48>
   1a984:	b	1ac64 <traverse_product@@Base+0xd84>
   1a988:	b	1acb0 <traverse_product@@Base+0xdd0>
   1a98c:	b	1acfc <traverse_product@@Base+0xe1c>
   1a990:	b	1acfc <traverse_product@@Base+0xe1c>
   1a994:	b	1a9a0 <traverse_product@@Base+0xac0>
   1a998:	b	1a9f4 <traverse_product@@Base+0xb14>
   1a99c:	b	1aad0 <traverse_product@@Base+0xbf0>
   1a9a0:	sub	r3, fp, #85	; 0x55
   1a9a4:	mov	r1, r3
   1a9a8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1a9ac:	bl	124a4 <coda_cursor_read_char@plt>
   1a9b0:	mov	r3, r0
   1a9b4:	cmp	r3, #0
   1a9b8:	beq	1a9c0 <traverse_product@@Base+0xae0>
   1a9bc:	bl	1bab8 <handle_coda_error@@Base>
   1a9c0:	ldr	r3, [pc, #1536]	; 1afc8 <traverse_product@@Base+0x10e8>
   1a9c4:	add	r3, pc, r3
   1a9c8:	mov	r0, r3
   1a9cc:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a9d0:	sub	r3, fp, #85	; 0x55
   1a9d4:	mov	r1, #1
   1a9d8:	mov	r0, r3
   1a9dc:	bl	1a1b0 <traverse_product@@Base+0x2d0>
   1a9e0:	ldr	r3, [pc, #1508]	; 1afcc <traverse_product@@Base+0x10ec>
   1a9e4:	add	r3, pc, r3
   1a9e8:	mov	r0, r3
   1a9ec:	bl	1a0ec <traverse_product@@Base+0x20c>
   1a9f0:	b	1ad6c <traverse_product@@Base+0xe8c>
   1a9f4:	sub	r3, fp, #92	; 0x5c
   1a9f8:	mov	r1, r3
   1a9fc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1aa00:	bl	1242c <coda_cursor_get_string_length@plt>
   1aa04:	mov	r3, r0
   1aa08:	cmp	r3, #0
   1aa0c:	beq	1aa14 <traverse_product@@Base+0xb34>
   1aa10:	bl	1bab8 <handle_coda_error@@Base>
   1aa14:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aa18:	add	r3, r3, #1
   1aa1c:	mov	r0, r3
   1aa20:	bl	123cc <malloc@plt>
   1aa24:	mov	r3, r0
   1aa28:	str	r3, [fp, #-28]	; 0xffffffe4
   1aa2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aa30:	cmp	r3, #0
   1aa34:	bne	1aa64 <traverse_product@@Base+0xb84>
   1aa38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aa3c:	add	r2, r3, #1
   1aa40:	ldr	r3, [pc, #1416]	; 1afd0 <traverse_product@@Base+0x10f0>
   1aa44:	str	r3, [sp]
   1aa48:	ldr	r3, [pc, #1412]	; 1afd4 <traverse_product@@Base+0x10f4>
   1aa4c:	add	r3, pc, r3
   1aa50:	ldr	r1, [pc, #1408]	; 1afd8 <traverse_product@@Base+0x10f8>
   1aa54:	add	r1, pc, r1
   1aa58:	mvn	r0, #0
   1aa5c:	bl	1224c <coda_set_error@plt>
   1aa60:	bl	1bab8 <handle_coda_error@@Base>
   1aa64:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aa68:	add	r3, r3, #1
   1aa6c:	mov	r2, r3
   1aa70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa74:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1aa78:	bl	123f0 <coda_cursor_read_string@plt>
   1aa7c:	mov	r3, r0
   1aa80:	cmp	r3, #0
   1aa84:	beq	1aa8c <traverse_product@@Base+0xbac>
   1aa88:	bl	1bab8 <handle_coda_error@@Base>
   1aa8c:	ldr	r3, [pc, #1352]	; 1afdc <traverse_product@@Base+0x10fc>
   1aa90:	add	r3, pc, r3
   1aa94:	mov	r0, r3
   1aa98:	bl	1a0ec <traverse_product@@Base+0x20c>
   1aa9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aaa0:	mov	r1, r3
   1aaa4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aaa8:	bl	1a1b0 <traverse_product@@Base+0x2d0>
   1aaac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1aab0:	mov	r1, r3
   1aab4:	ldr	r3, [pc, #1316]	; 1afe0 <traverse_product@@Base+0x1100>
   1aab8:	add	r3, pc, r3
   1aabc:	mov	r0, r3
   1aac0:	bl	1a0ec <traverse_product@@Base+0x20c>
   1aac4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1aac8:	bl	12294 <free@plt>
   1aacc:	b	1ad6c <traverse_product@@Base+0xe8c>
   1aad0:	sub	r3, fp, #100	; 0x64
   1aad4:	mov	r1, r3
   1aad8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1aadc:	bl	125ac <coda_cursor_get_bit_size@plt>
   1aae0:	mov	r3, r0
   1aae4:	cmp	r3, #0
   1aae8:	beq	1aaf0 <traverse_product@@Base+0xc10>
   1aaec:	bl	1bab8 <handle_coda_error@@Base>
   1aaf0:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1aaf4:	lsr	r4, r2, #3
   1aaf8:	orr	r4, r4, r3, lsl #29
   1aafc:	asr	r5, r3, #3
   1ab00:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1ab04:	mov	r0, #7
   1ab08:	mov	r1, #0
   1ab0c:	and	r2, r2, r0
   1ab10:	and	r3, r3, r1
   1ab14:	orrs	r3, r2, r3
   1ab18:	beq	1ab28 <traverse_product@@Base+0xc48>
   1ab1c:	mov	r2, #1
   1ab20:	mov	r3, #0
   1ab24:	b	1ab30 <traverse_product@@Base+0xc50>
   1ab28:	mov	r2, #0
   1ab2c:	mov	r3, #0
   1ab30:	adds	r2, r2, r4
   1ab34:	adc	r3, r3, r5
   1ab38:	strd	r2, [fp, #-36]	; 0xffffffdc
   1ab3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ab40:	mov	r0, r3
   1ab44:	bl	123cc <malloc@plt>
   1ab48:	mov	r3, r0
   1ab4c:	str	r3, [fp, #-40]	; 0xffffffd8
   1ab50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ab54:	cmp	r3, #0
   1ab58:	bne	1ab84 <traverse_product@@Base+0xca4>
   1ab5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ab60:	mov	r3, #392	; 0x188
   1ab64:	str	r3, [sp]
   1ab68:	ldr	r3, [pc, #1140]	; 1afe4 <traverse_product@@Base+0x1104>
   1ab6c:	add	r3, pc, r3
   1ab70:	ldr	r1, [pc, #1136]	; 1afe8 <traverse_product@@Base+0x1108>
   1ab74:	add	r1, pc, r1
   1ab78:	mvn	r0, #0
   1ab7c:	bl	1224c <coda_set_error@plt>
   1ab80:	bl	1bab8 <handle_coda_error@@Base>
   1ab84:	ldrd	r2, [fp, #-100]	; 0xffffff9c
   1ab88:	strd	r2, [sp]
   1ab8c:	mov	r2, #0
   1ab90:	mov	r3, #0
   1ab94:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ab98:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1ab9c:	bl	12648 <coda_cursor_read_bits@plt>
   1aba0:	mov	r3, r0
   1aba4:	cmp	r3, #0
   1aba8:	beq	1abb0 <traverse_product@@Base+0xcd0>
   1abac:	bl	1bab8 <handle_coda_error@@Base>
   1abb0:	ldr	r3, [pc, #1076]	; 1afec <traverse_product@@Base+0x110c>
   1abb4:	add	r3, pc, r3
   1abb8:	mov	r0, r3
   1abbc:	bl	1a0ec <traverse_product@@Base+0x20c>
   1abc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1abc4:	mov	r1, r3
   1abc8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1abcc:	bl	1a1b0 <traverse_product@@Base+0x2d0>
   1abd0:	ldr	r3, [pc, #1048]	; 1aff0 <traverse_product@@Base+0x1110>
   1abd4:	add	r3, pc, r3
   1abd8:	mov	r0, r3
   1abdc:	bl	1a0ec <traverse_product@@Base+0x20c>
   1abe0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1abe4:	bl	12294 <free@plt>
   1abe8:	b	1ad6c <traverse_product@@Base+0xe8c>
   1abec:	sub	r3, fp, #104	; 0x68
   1abf0:	mov	r1, r3
   1abf4:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1abf8:	bl	125e8 <coda_cursor_read_int32@plt>
   1abfc:	mov	r3, r0
   1ac00:	cmp	r3, #0
   1ac04:	beq	1ac0c <traverse_product@@Base+0xd2c>
   1ac08:	bl	1bab8 <handle_coda_error@@Base>
   1ac0c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1ac10:	mov	r1, r3
   1ac14:	ldr	r3, [pc, #984]	; 1aff4 <traverse_product@@Base+0x1114>
   1ac18:	add	r3, pc, r3
   1ac1c:	mov	r0, r3
   1ac20:	bl	1a0ec <traverse_product@@Base+0x20c>
   1ac24:	b	1ad6c <traverse_product@@Base+0xe8c>
   1ac28:	sub	r3, fp, #108	; 0x6c
   1ac2c:	mov	r1, r3
   1ac30:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1ac34:	bl	122b8 <coda_cursor_read_uint32@plt>
   1ac38:	mov	r3, r0
   1ac3c:	cmp	r3, #0
   1ac40:	beq	1ac48 <traverse_product@@Base+0xd68>
   1ac44:	bl	1bab8 <handle_coda_error@@Base>
   1ac48:	ldr	r3, [fp, #-108]	; 0xffffff94
   1ac4c:	mov	r1, r3
   1ac50:	ldr	r3, [pc, #928]	; 1aff8 <traverse_product@@Base+0x1118>
   1ac54:	add	r3, pc, r3
   1ac58:	mov	r0, r3
   1ac5c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1ac60:	b	1ad6c <traverse_product@@Base+0xe8c>
   1ac64:	sub	r3, fp, #116	; 0x74
   1ac68:	mov	r1, r3
   1ac6c:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1ac70:	bl	1254c <coda_cursor_read_int64@plt>
   1ac74:	mov	r3, r0
   1ac78:	cmp	r3, #0
   1ac7c:	beq	1ac84 <traverse_product@@Base+0xda4>
   1ac80:	bl	1bab8 <handle_coda_error@@Base>
   1ac84:	ldrd	r0, [fp, #-116]	; 0xffffff8c
   1ac88:	sub	r3, fp, #140	; 0x8c
   1ac8c:	mov	r2, r3
   1ac90:	bl	12654 <coda_str64@plt>
   1ac94:	sub	r3, fp, #140	; 0x8c
   1ac98:	mov	r1, r3
   1ac9c:	ldr	r3, [pc, #856]	; 1affc <traverse_product@@Base+0x111c>
   1aca0:	add	r3, pc, r3
   1aca4:	mov	r0, r3
   1aca8:	bl	1a0ec <traverse_product@@Base+0x20c>
   1acac:	b	1ad6c <traverse_product@@Base+0xe8c>
   1acb0:	sub	r3, fp, #148	; 0x94
   1acb4:	mov	r1, r3
   1acb8:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1acbc:	bl	12438 <coda_cursor_read_uint64@plt>
   1acc0:	mov	r3, r0
   1acc4:	cmp	r3, #0
   1acc8:	beq	1acd0 <traverse_product@@Base+0xdf0>
   1accc:	bl	1bab8 <handle_coda_error@@Base>
   1acd0:	ldrd	r0, [fp, #-148]	; 0xffffff6c
   1acd4:	sub	r3, fp, #172	; 0xac
   1acd8:	mov	r2, r3
   1acdc:	bl	12288 <coda_str64u@plt>
   1ace0:	sub	r3, fp, #172	; 0xac
   1ace4:	mov	r1, r3
   1ace8:	ldr	r3, [pc, #784]	; 1b000 <traverse_product@@Base+0x1120>
   1acec:	add	r3, pc, r3
   1acf0:	mov	r0, r3
   1acf4:	bl	1a0ec <traverse_product@@Base+0x20c>
   1acf8:	b	1ad6c <traverse_product@@Base+0xe8c>
   1acfc:	sub	r3, fp, #180	; 0xb4
   1ad00:	mov	r1, r3
   1ad04:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1ad08:	bl	12444 <coda_cursor_read_double@plt>
   1ad0c:	mov	r3, r0
   1ad10:	cmp	r3, #0
   1ad14:	beq	1ad1c <traverse_product@@Base+0xe3c>
   1ad18:	bl	1bab8 <handle_coda_error@@Base>
   1ad1c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1ad20:	cmp	r3, #8
   1ad24:	bne	1ad40 <traverse_product@@Base+0xe60>
   1ad28:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   1ad2c:	ldr	r1, [pc, #720]	; 1b004 <traverse_product@@Base+0x1124>
   1ad30:	add	r1, pc, r1
   1ad34:	mov	r0, r1
   1ad38:	bl	1a0ec <traverse_product@@Base+0x20c>
   1ad3c:	b	1ad6c <traverse_product@@Base+0xe8c>
   1ad40:	ldrd	r2, [fp, #-180]	; 0xffffff4c
   1ad44:	ldr	r1, [pc, #700]	; 1b008 <traverse_product@@Base+0x1128>
   1ad48:	add	r1, pc, r1
   1ad4c:	mov	r0, r1
   1ad50:	bl	1a0ec <traverse_product@@Base+0x20c>
   1ad54:	b	1ad6c <traverse_product@@Base+0xe8c>
   1ad58:	ldr	r3, [pc, #684]	; 1b00c <traverse_product@@Base+0x112c>
   1ad5c:	add	r3, pc, r3
   1ad60:	mov	r0, r3
   1ad64:	bl	1a0ec <traverse_product@@Base+0x20c>
   1ad68:	nop			; (mov r0, r0)
   1ad6c:	b	1af10 <traverse_product@@Base+0x1030>
   1ad70:	sub	r3, fp, #184	; 0xb8
   1ad74:	mov	r1, r3
   1ad78:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1ad7c:	bl	12360 <coda_cursor_get_special_type@plt>
   1ad80:	mov	r3, r0
   1ad84:	cmp	r3, #0
   1ad88:	beq	1ad90 <traverse_product@@Base+0xeb0>
   1ad8c:	bl	1bab8 <handle_coda_error@@Base>
   1ad90:	ldr	r3, [fp, #-184]	; 0xffffff48
   1ad94:	cmp	r3, #3
   1ad98:	addls	pc, pc, r3, lsl #2
   1ad9c:	b	1af18 <traverse_product@@Base+0x1038>
   1ada0:	b	1adb0 <traverse_product@@Base+0xed0>
   1ada4:	b	1adc4 <traverse_product@@Base+0xee4>
   1ada8:	b	1adfc <traverse_product@@Base+0xf1c>
   1adac:	b	1aec0 <traverse_product@@Base+0xfe0>
   1adb0:	ldr	r3, [pc, #600]	; 1b010 <traverse_product@@Base+0x1130>
   1adb4:	add	r3, pc, r3
   1adb8:	mov	r0, r3
   1adbc:	bl	1a0ec <traverse_product@@Base+0x20c>
   1adc0:	b	1af0c <traverse_product@@Base+0x102c>
   1adc4:	sub	r3, fp, #196	; 0xc4
   1adc8:	mov	r1, r3
   1adcc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1add0:	bl	12444 <coda_cursor_read_double@plt>
   1add4:	mov	r3, r0
   1add8:	cmp	r3, #0
   1addc:	beq	1ade4 <traverse_product@@Base+0xf04>
   1ade0:	bl	1bab8 <handle_coda_error@@Base>
   1ade4:	ldrd	r2, [fp, #-196]	; 0xffffff3c
   1ade8:	ldr	r1, [pc, #548]	; 1b014 <traverse_product@@Base+0x1134>
   1adec:	add	r1, pc, r1
   1adf0:	mov	r0, r1
   1adf4:	bl	1a0ec <traverse_product@@Base+0x20c>
   1adf8:	b	1af0c <traverse_product@@Base+0x102c>
   1adfc:	sub	r3, fp, #204	; 0xcc
   1ae00:	mov	r1, r3
   1ae04:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1ae08:	bl	12444 <coda_cursor_read_double@plt>
   1ae0c:	mov	r3, r0
   1ae10:	cmp	r3, #0
   1ae14:	beq	1ae1c <traverse_product@@Base+0xf3c>
   1ae18:	bl	1bab8 <handle_coda_error@@Base>
   1ae1c:	vldr	d7, [fp, #-204]	; 0xffffff34
   1ae20:	vmov.f64	d0, d7
   1ae24:	bl	12450 <coda_isNaN@plt>
   1ae28:	mov	r3, r0
   1ae2c:	cmp	r3, #0
   1ae30:	bne	1ae4c <traverse_product@@Base+0xf6c>
   1ae34:	vldr	d7, [fp, #-204]	; 0xffffff34
   1ae38:	vmov.f64	d0, d7
   1ae3c:	bl	122f4 <coda_isInf@plt>
   1ae40:	mov	r3, r0
   1ae44:	cmp	r3, #0
   1ae48:	beq	1ae64 <traverse_product@@Base+0xf84>
   1ae4c:	ldrd	r2, [fp, #-204]	; 0xffffff34
   1ae50:	ldr	r1, [pc, #448]	; 1b018 <traverse_product@@Base+0x1138>
   1ae54:	add	r1, pc, r1
   1ae58:	mov	r0, r1
   1ae5c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1ae60:	b	1af0c <traverse_product@@Base+0x102c>
   1ae64:	vldr	d7, [fp, #-204]	; 0xffffff34
   1ae68:	sub	r3, fp, #232	; 0xe8
   1ae6c:	mov	r1, r3
   1ae70:	ldr	r3, [pc, #420]	; 1b01c <traverse_product@@Base+0x113c>
   1ae74:	add	r3, pc, r3
   1ae78:	mov	r0, r3
   1ae7c:	vmov.f64	d0, d7
   1ae80:	bl	12270 <coda_time_double_to_string@plt>
   1ae84:	mov	r3, r0
   1ae88:	cmp	r3, #0
   1ae8c:	beq	1aea4 <traverse_product@@Base+0xfc4>
   1ae90:	ldr	r3, [pc, #392]	; 1b020 <traverse_product@@Base+0x1140>
   1ae94:	add	r3, pc, r3
   1ae98:	mov	r0, r3
   1ae9c:	bl	1a0ec <traverse_product@@Base+0x20c>
   1aea0:	b	1af0c <traverse_product@@Base+0x102c>
   1aea4:	sub	r3, fp, #232	; 0xe8
   1aea8:	mov	r1, r3
   1aeac:	ldr	r3, [pc, #368]	; 1b024 <traverse_product@@Base+0x1144>
   1aeb0:	add	r3, pc, r3
   1aeb4:	mov	r0, r3
   1aeb8:	bl	1a0ec <traverse_product@@Base+0x20c>
   1aebc:	b	1af0c <traverse_product@@Base+0x102c>
   1aec0:	sub	r2, fp, #252	; 0xfc
   1aec4:	sub	r3, fp, #244	; 0xf4
   1aec8:	mov	r1, r3
   1aecc:	ldr	r0, [fp, #-288]	; 0xfffffee0
   1aed0:	bl	124ec <coda_cursor_read_complex_double_split@plt>
   1aed4:	mov	r3, r0
   1aed8:	cmp	r3, #0
   1aedc:	beq	1aee4 <traverse_product@@Base+0x1004>
   1aee0:	bl	1bab8 <handle_coda_error@@Base>
   1aee4:	ldrd	r0, [fp, #-244]	; 0xffffff0c
   1aee8:	ldrd	r2, [fp, #-252]	; 0xffffff04
   1aeec:	strd	r2, [sp]
   1aef0:	mov	r2, r0
   1aef4:	mov	r3, r1
   1aef8:	ldr	r1, [pc, #296]	; 1b028 <traverse_product@@Base+0x1148>
   1aefc:	add	r1, pc, r1
   1af00:	mov	r0, r1
   1af04:	bl	1a0ec <traverse_product@@Base+0x20c>
   1af08:	nop			; (mov r0, r0)
   1af0c:	b	1af18 <traverse_product@@Base+0x1038>
   1af10:	nop			; (mov r0, r0)
   1af14:	b	1af1c <traverse_product@@Base+0x103c>
   1af18:	nop			; (mov r0, r0)
   1af1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1af20:	cmp	r3, #0
   1af24:	beq	1af44 <traverse_product@@Base+0x1064>
   1af28:	ldr	r3, [pc, #252]	; 1b02c <traverse_product@@Base+0x114c>
   1af2c:	add	r3, pc, r3
   1af30:	ldr	r3, [r3]
   1af34:	sub	r2, r3, #1
   1af38:	ldr	r3, [pc, #240]	; 1b030 <traverse_product@@Base+0x1150>
   1af3c:	add	r3, pc, r3
   1af40:	str	r2, [r3]
   1af44:	nop			; (mov r0, r0)
   1af48:	sub	sp, fp, #12
   1af4c:	pop	{r4, r5, fp, pc}
   1af50:	muleq	r1, ip, lr
   1af54:	andeq	r4, r0, r4, asr fp
   1af58:	andeq	r4, r0, r4, asr #22
   1af5c:	andeq	r6, r1, r0, lsl lr
   1af60:	andeq	r6, r1, r0, lsl #28
   1af64:	andeq	r6, r1, r8, ror #27
   1af68:	ldrdeq	r6, [r1], -r8
   1af6c:	ldrdeq	r4, [r0], -r8
   1af70:			; <UNDEFINED> instruction: 0x00016db4
   1af74:	andeq	r6, r1, r4, lsr #27
   1af78:	andeq	r4, r0, ip, lsl sl
   1af7c:	andeq	r4, r0, r4, asr r9
   1af80:	andeq	r6, r1, r8, lsr #24
   1af84:	andeq	r6, r1, r8, lsl ip
   1af88:	andeq	r6, r1, r0, lsl #24
   1af8c:	strdeq	r6, [r1], -r0
   1af90:	andeq	r4, r0, ip, lsr r8
   1af94:	andeq	r6, r1, r0, lsl fp
   1af98:	andeq	r6, r1, r0, lsl #22
   1af9c:	andeq	r6, r1, r8, ror #21
   1afa0:	ldrdeq	r6, [r1], -r8
   1afa4:	muleq	r0, ip, r7
   1afa8:	andeq	r4, r0, r0, ror #13
   1afac:	andeq	r4, r0, ip, asr #13
   1afb0:	muleq	r1, r4, r9
   1afb4:	andeq	r6, r1, r4, lsl #19
   1afb8:	andeq	r6, r1, ip, ror #18
   1afbc:	andeq	r6, r1, ip, asr r9
   1afc0:	andeq	r4, r0, r8, lsr #12
   1afc4:	andeq	r4, r0, r4, lsl r6
   1afc8:	andeq	r4, r0, r8, ror r5
   1afcc:	andeq	r4, r0, ip, asr r5
   1afd0:	andeq	r0, r0, r9, ror #2
   1afd4:	andeq	r4, r0, ip, lsr #8
   1afd8:	strdeq	r4, [r0], -r0
   1afdc:	andeq	r4, r0, ip, lsr #9
   1afe0:	andeq	r4, r0, r8, lsl #9
   1afe4:	andeq	r4, r0, ip, lsl #6
   1afe8:	ldrdeq	r4, [r0], -r0
   1afec:	andeq	r4, r0, r8, lsl #7
   1aff0:	andeq	r4, r0, ip, ror #6
   1aff4:	andeq	r4, r0, r4, ror #6
   1aff8:	andeq	r4, r0, r0, lsr r3
   1affc:	andeq	r4, r0, ip, ror #5
   1b000:	andeq	r4, r0, r0, lsr #5
   1b004:	andeq	r4, r0, r0, ror #4
   1b008:	andeq	r4, r0, r0, asr r2
   1b00c:	andeq	r4, r0, r4, asr #4
   1b010:	andeq	r4, r0, ip, ror #3
   1b014:	andeq	r4, r0, ip, lsr #3
   1b018:	andeq	r4, r0, r4, asr #2
   1b01c:	andeq	r4, r0, r4, lsr r1
   1b020:	andeq	r4, r0, r4, lsr r1
   1b024:	ldrdeq	r4, [r0], -ip
   1b028:	andeq	r4, r0, r8, ror #1
   1b02c:	andeq	r6, r1, r0, ror #5
   1b030:	ldrdeq	r6, [r1], -r0

0001b034 <print_yaml_data@@Base>:
   1b034:	push	{r4, fp, lr}
   1b038:	add	fp, sp, #8
   1b03c:	sub	sp, sp, #540	; 0x21c
   1b040:	str	r0, [fp, #-544]	; 0xfffffde0
   1b044:	ldr	r4, [pc, #296]	; 1b174 <print_yaml_data@@Base+0x140>
   1b048:	add	r4, pc, r4
   1b04c:	ldr	r3, [pc, #292]	; 1b178 <print_yaml_data@@Base+0x144>
   1b050:	add	r3, pc, r3
   1b054:	ldr	r2, [fp, #-544]	; 0xfffffde0
   1b058:	str	r2, [r3]
   1b05c:	ldr	r3, [pc, #280]	; 1b17c <print_yaml_data@@Base+0x148>
   1b060:	ldr	r3, [r4, r3]
   1b064:	ldr	r3, [r3]
   1b068:	sub	r2, fp, #20
   1b06c:	mov	r1, r2
   1b070:	mov	r0, r3
   1b074:	bl	12258 <coda_open@plt>
   1b078:	str	r0, [fp, #-16]
   1b07c:	ldr	r3, [fp, #-16]
   1b080:	cmp	r3, #0
   1b084:	beq	1b0cc <print_yaml_data@@Base+0x98>
   1b088:	bl	1260c <coda_get_errno@plt>
   1b08c:	mov	r3, r0
   1b090:	ldr	r3, [r3]
   1b094:	cmn	r3, #21
   1b098:	bne	1b0cc <print_yaml_data@@Base+0x98>
   1b09c:	mov	r0, #0
   1b0a0:	bl	122a0 <coda_set_option_use_mmap@plt>
   1b0a4:	ldr	r3, [pc, #208]	; 1b17c <print_yaml_data@@Base+0x148>
   1b0a8:	ldr	r3, [r4, r3]
   1b0ac:	ldr	r3, [r3]
   1b0b0:	sub	r2, fp, #20
   1b0b4:	mov	r1, r2
   1b0b8:	mov	r0, r3
   1b0bc:	bl	12258 <coda_open@plt>
   1b0c0:	str	r0, [fp, #-16]
   1b0c4:	mov	r0, #1
   1b0c8:	bl	122a0 <coda_set_option_use_mmap@plt>
   1b0cc:	ldr	r3, [fp, #-16]
   1b0d0:	cmp	r3, #0
   1b0d4:	beq	1b0dc <print_yaml_data@@Base+0xa8>
   1b0d8:	bl	1bab8 <handle_coda_error@@Base>
   1b0dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b0e0:	sub	r3, fp, #540	; 0x21c
   1b0e4:	mov	r1, r2
   1b0e8:	mov	r0, r3
   1b0ec:	bl	12384 <coda_cursor_set_product@plt>
   1b0f0:	mov	r3, r0
   1b0f4:	cmp	r3, #0
   1b0f8:	beq	1b100 <print_yaml_data@@Base+0xcc>
   1b0fc:	bl	1bab8 <handle_coda_error@@Base>
   1b100:	ldr	r3, [pc, #120]	; 1b180 <print_yaml_data@@Base+0x14c>
   1b104:	ldr	r3, [r4, r3]
   1b108:	ldr	r3, [r3]
   1b10c:	cmp	r3, #0
   1b110:	beq	1b144 <print_yaml_data@@Base+0x110>
   1b114:	ldr	r3, [pc, #100]	; 1b180 <print_yaml_data@@Base+0x14c>
   1b118:	ldr	r3, [r4, r3]
   1b11c:	ldr	r2, [r3]
   1b120:	sub	r3, fp, #540	; 0x21c
   1b124:	mov	r1, r2
   1b128:	mov	r0, r3
   1b12c:	bl	12564 <coda_cursor_goto@plt>
   1b130:	str	r0, [fp, #-16]
   1b134:	ldr	r3, [fp, #-16]
   1b138:	cmp	r3, #0
   1b13c:	beq	1b144 <print_yaml_data@@Base+0x110>
   1b140:	bl	1bab8 <handle_coda_error@@Base>
   1b144:	mov	r0, #0
   1b148:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   1b14c:	sub	r3, fp, #540	; 0x21c
   1b150:	mov	r1, #0
   1b154:	mov	r0, r3
   1b158:	bl	1a354 <traverse_product@@Base+0x474>
   1b15c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b160:	mov	r0, r3
   1b164:	bl	12540 <coda_close@plt>
   1b168:	nop			; (mov r0, r0)
   1b16c:	sub	sp, fp, #8
   1b170:	pop	{r4, fp, pc}
   1b174:			; <UNDEFINED> instruction: 0x00015fb0
   1b178:	andeq	r6, r1, r0, asr #3
   1b17c:			; <UNDEFINED> instruction: 0x000001b4
   1b180:	ldrdeq	r0, [r0], -r8
   1b184:	push	{fp, lr}
   1b188:	add	fp, sp, #4
   1b18c:	bl	12600 <coda_get_libcoda_version@plt>
   1b190:	mov	r3, r0
   1b194:	mov	r1, r3
   1b198:	ldr	r3, [pc, #40]	; 1b1c8 <print_yaml_data@@Base+0x194>
   1b19c:	add	r3, pc, r3
   1b1a0:	mov	r0, r3
   1b1a4:	bl	12228 <printf@plt>
   1b1a8:	ldr	r3, [pc, #28]	; 1b1cc <print_yaml_data@@Base+0x198>
   1b1ac:	add	r3, pc, r3
   1b1b0:	mov	r0, r3
   1b1b4:	bl	123b4 <puts@plt>
   1b1b8:	mov	r0, #10
   1b1bc:	bl	124bc <putchar@plt>
   1b1c0:	nop			; (mov r0, r0)
   1b1c4:	pop	{fp, pc}
   1b1c8:	andeq	r3, r0, ip, asr lr
   1b1cc:	andeq	r3, r0, r4, ror #28
   1b1d0:	push	{fp, lr}
   1b1d4:	add	fp, sp, #4
   1b1d8:	ldr	r3, [pc, #1824]	; 1b900 <print_yaml_data@@Base+0x8cc>
   1b1dc:	add	r3, pc, r3
   1b1e0:	mov	r0, r3
   1b1e4:	bl	123b4 <puts@plt>
   1b1e8:	ldr	r3, [pc, #1812]	; 1b904 <print_yaml_data@@Base+0x8d0>
   1b1ec:	add	r3, pc, r3
   1b1f0:	mov	r0, r3
   1b1f4:	bl	123b4 <puts@plt>
   1b1f8:	ldr	r3, [pc, #1800]	; 1b908 <print_yaml_data@@Base+0x8d4>
   1b1fc:	add	r3, pc, r3
   1b200:	mov	r0, r3
   1b204:	bl	123b4 <puts@plt>
   1b208:	ldr	r3, [pc, #1788]	; 1b90c <print_yaml_data@@Base+0x8d8>
   1b20c:	add	r3, pc, r3
   1b210:	mov	r0, r3
   1b214:	bl	123b4 <puts@plt>
   1b218:	ldr	r3, [pc, #1776]	; 1b910 <print_yaml_data@@Base+0x8dc>
   1b21c:	add	r3, pc, r3
   1b220:	mov	r0, r3
   1b224:	bl	123b4 <puts@plt>
   1b228:	ldr	r3, [pc, #1764]	; 1b914 <print_yaml_data@@Base+0x8e0>
   1b22c:	add	r3, pc, r3
   1b230:	mov	r0, r3
   1b234:	bl	123b4 <puts@plt>
   1b238:	ldr	r3, [pc, #1752]	; 1b918 <print_yaml_data@@Base+0x8e4>
   1b23c:	add	r3, pc, r3
   1b240:	mov	r0, r3
   1b244:	bl	123b4 <puts@plt>
   1b248:	ldr	r3, [pc, #1740]	; 1b91c <print_yaml_data@@Base+0x8e8>
   1b24c:	add	r3, pc, r3
   1b250:	mov	r0, r3
   1b254:	bl	123b4 <puts@plt>
   1b258:	ldr	r3, [pc, #1728]	; 1b920 <print_yaml_data@@Base+0x8ec>
   1b25c:	add	r3, pc, r3
   1b260:	mov	r0, r3
   1b264:	bl	123b4 <puts@plt>
   1b268:	ldr	r3, [pc, #1716]	; 1b924 <print_yaml_data@@Base+0x8f0>
   1b26c:	add	r3, pc, r3
   1b270:	mov	r0, r3
   1b274:	bl	123b4 <puts@plt>
   1b278:	ldr	r3, [pc, #1704]	; 1b928 <print_yaml_data@@Base+0x8f4>
   1b27c:	add	r3, pc, r3
   1b280:	mov	r0, r3
   1b284:	bl	123b4 <puts@plt>
   1b288:	ldr	r3, [pc, #1692]	; 1b92c <print_yaml_data@@Base+0x8f8>
   1b28c:	add	r3, pc, r3
   1b290:	mov	r0, r3
   1b294:	bl	123b4 <puts@plt>
   1b298:	ldr	r3, [pc, #1680]	; 1b930 <print_yaml_data@@Base+0x8fc>
   1b29c:	add	r3, pc, r3
   1b2a0:	mov	r0, r3
   1b2a4:	bl	123b4 <puts@plt>
   1b2a8:	ldr	r3, [pc, #1668]	; 1b934 <print_yaml_data@@Base+0x900>
   1b2ac:	add	r3, pc, r3
   1b2b0:	mov	r0, r3
   1b2b4:	bl	123b4 <puts@plt>
   1b2b8:	ldr	r3, [pc, #1656]	; 1b938 <print_yaml_data@@Base+0x904>
   1b2bc:	add	r3, pc, r3
   1b2c0:	mov	r0, r3
   1b2c4:	bl	123b4 <puts@plt>
   1b2c8:	ldr	r3, [pc, #1644]	; 1b93c <print_yaml_data@@Base+0x908>
   1b2cc:	add	r3, pc, r3
   1b2d0:	mov	r0, r3
   1b2d4:	bl	123b4 <puts@plt>
   1b2d8:	ldr	r3, [pc, #1632]	; 1b940 <print_yaml_data@@Base+0x90c>
   1b2dc:	add	r3, pc, r3
   1b2e0:	mov	r0, r3
   1b2e4:	bl	123b4 <puts@plt>
   1b2e8:	ldr	r3, [pc, #1620]	; 1b944 <print_yaml_data@@Base+0x910>
   1b2ec:	add	r3, pc, r3
   1b2f0:	mov	r0, r3
   1b2f4:	bl	123b4 <puts@plt>
   1b2f8:	ldr	r3, [pc, #1608]	; 1b948 <print_yaml_data@@Base+0x914>
   1b2fc:	add	r3, pc, r3
   1b300:	mov	r0, r3
   1b304:	bl	123b4 <puts@plt>
   1b308:	ldr	r3, [pc, #1596]	; 1b94c <print_yaml_data@@Base+0x918>
   1b30c:	add	r3, pc, r3
   1b310:	mov	r0, r3
   1b314:	bl	123b4 <puts@plt>
   1b318:	ldr	r3, [pc, #1584]	; 1b950 <print_yaml_data@@Base+0x91c>
   1b31c:	add	r3, pc, r3
   1b320:	mov	r0, r3
   1b324:	bl	123b4 <puts@plt>
   1b328:	ldr	r3, [pc, #1572]	; 1b954 <print_yaml_data@@Base+0x920>
   1b32c:	add	r3, pc, r3
   1b330:	mov	r0, r3
   1b334:	bl	123b4 <puts@plt>
   1b338:	ldr	r3, [pc, #1560]	; 1b958 <print_yaml_data@@Base+0x924>
   1b33c:	add	r3, pc, r3
   1b340:	mov	r0, r3
   1b344:	bl	123b4 <puts@plt>
   1b348:	mov	r0, #10
   1b34c:	bl	124bc <putchar@plt>
   1b350:	ldr	r3, [pc, #1540]	; 1b95c <print_yaml_data@@Base+0x928>
   1b354:	add	r3, pc, r3
   1b358:	mov	r0, r3
   1b35c:	bl	123b4 <puts@plt>
   1b360:	ldr	r3, [pc, #1528]	; 1b960 <print_yaml_data@@Base+0x92c>
   1b364:	add	r3, pc, r3
   1b368:	mov	r0, r3
   1b36c:	bl	123b4 <puts@plt>
   1b370:	ldr	r3, [pc, #1516]	; 1b964 <print_yaml_data@@Base+0x930>
   1b374:	add	r3, pc, r3
   1b378:	mov	r0, r3
   1b37c:	bl	123b4 <puts@plt>
   1b380:	ldr	r3, [pc, #1504]	; 1b968 <print_yaml_data@@Base+0x934>
   1b384:	add	r3, pc, r3
   1b388:	mov	r0, r3
   1b38c:	bl	123b4 <puts@plt>
   1b390:	ldr	r3, [pc, #1492]	; 1b96c <print_yaml_data@@Base+0x938>
   1b394:	add	r3, pc, r3
   1b398:	mov	r0, r3
   1b39c:	bl	123b4 <puts@plt>
   1b3a0:	ldr	r3, [pc, #1480]	; 1b970 <print_yaml_data@@Base+0x93c>
   1b3a4:	add	r3, pc, r3
   1b3a8:	mov	r0, r3
   1b3ac:	bl	123b4 <puts@plt>
   1b3b0:	ldr	r3, [pc, #1468]	; 1b974 <print_yaml_data@@Base+0x940>
   1b3b4:	add	r3, pc, r3
   1b3b8:	mov	r0, r3
   1b3bc:	bl	123b4 <puts@plt>
   1b3c0:	ldr	r3, [pc, #1456]	; 1b978 <print_yaml_data@@Base+0x944>
   1b3c4:	add	r3, pc, r3
   1b3c8:	mov	r0, r3
   1b3cc:	bl	123b4 <puts@plt>
   1b3d0:	ldr	r3, [pc, #1444]	; 1b97c <print_yaml_data@@Base+0x948>
   1b3d4:	add	r3, pc, r3
   1b3d8:	mov	r0, r3
   1b3dc:	bl	123b4 <puts@plt>
   1b3e0:	ldr	r3, [pc, #1432]	; 1b980 <print_yaml_data@@Base+0x94c>
   1b3e4:	add	r3, pc, r3
   1b3e8:	mov	r0, r3
   1b3ec:	bl	123b4 <puts@plt>
   1b3f0:	ldr	r3, [pc, #1420]	; 1b984 <print_yaml_data@@Base+0x950>
   1b3f4:	add	r3, pc, r3
   1b3f8:	mov	r0, r3
   1b3fc:	bl	123b4 <puts@plt>
   1b400:	ldr	r3, [pc, #1408]	; 1b988 <print_yaml_data@@Base+0x954>
   1b404:	add	r3, pc, r3
   1b408:	mov	r0, r3
   1b40c:	bl	123b4 <puts@plt>
   1b410:	ldr	r3, [pc, #1396]	; 1b98c <print_yaml_data@@Base+0x958>
   1b414:	add	r3, pc, r3
   1b418:	mov	r0, r3
   1b41c:	bl	123b4 <puts@plt>
   1b420:	ldr	r3, [pc, #1384]	; 1b990 <print_yaml_data@@Base+0x95c>
   1b424:	add	r3, pc, r3
   1b428:	mov	r0, r3
   1b42c:	bl	123b4 <puts@plt>
   1b430:	ldr	r3, [pc, #1372]	; 1b994 <print_yaml_data@@Base+0x960>
   1b434:	add	r3, pc, r3
   1b438:	mov	r0, r3
   1b43c:	bl	123b4 <puts@plt>
   1b440:	ldr	r3, [pc, #1360]	; 1b998 <print_yaml_data@@Base+0x964>
   1b444:	add	r3, pc, r3
   1b448:	mov	r0, r3
   1b44c:	bl	123b4 <puts@plt>
   1b450:	ldr	r3, [pc, #1348]	; 1b99c <print_yaml_data@@Base+0x968>
   1b454:	add	r3, pc, r3
   1b458:	mov	r0, r3
   1b45c:	bl	123b4 <puts@plt>
   1b460:	ldr	r3, [pc, #1336]	; 1b9a0 <print_yaml_data@@Base+0x96c>
   1b464:	add	r3, pc, r3
   1b468:	mov	r0, r3
   1b46c:	bl	123b4 <puts@plt>
   1b470:	ldr	r3, [pc, #1324]	; 1b9a4 <print_yaml_data@@Base+0x970>
   1b474:	add	r3, pc, r3
   1b478:	mov	r0, r3
   1b47c:	bl	123b4 <puts@plt>
   1b480:	ldr	r3, [pc, #1312]	; 1b9a8 <print_yaml_data@@Base+0x974>
   1b484:	add	r3, pc, r3
   1b488:	mov	r0, r3
   1b48c:	bl	123b4 <puts@plt>
   1b490:	ldr	r3, [pc, #1300]	; 1b9ac <print_yaml_data@@Base+0x978>
   1b494:	add	r3, pc, r3
   1b498:	mov	r0, r3
   1b49c:	bl	123b4 <puts@plt>
   1b4a0:	ldr	r3, [pc, #1288]	; 1b9b0 <print_yaml_data@@Base+0x97c>
   1b4a4:	add	r3, pc, r3
   1b4a8:	mov	r0, r3
   1b4ac:	bl	123b4 <puts@plt>
   1b4b0:	ldr	r3, [pc, #1276]	; 1b9b4 <print_yaml_data@@Base+0x980>
   1b4b4:	add	r3, pc, r3
   1b4b8:	mov	r0, r3
   1b4bc:	bl	123b4 <puts@plt>
   1b4c0:	mov	r0, #10
   1b4c4:	bl	124bc <putchar@plt>
   1b4c8:	ldr	r3, [pc, #1256]	; 1b9b8 <print_yaml_data@@Base+0x984>
   1b4cc:	add	r3, pc, r3
   1b4d0:	mov	r0, r3
   1b4d4:	bl	123b4 <puts@plt>
   1b4d8:	ldr	r3, [pc, #1244]	; 1b9bc <print_yaml_data@@Base+0x988>
   1b4dc:	add	r3, pc, r3
   1b4e0:	mov	r0, r3
   1b4e4:	bl	123b4 <puts@plt>
   1b4e8:	ldr	r3, [pc, #1232]	; 1b9c0 <print_yaml_data@@Base+0x98c>
   1b4ec:	add	r3, pc, r3
   1b4f0:	mov	r0, r3
   1b4f4:	bl	123b4 <puts@plt>
   1b4f8:	ldr	r3, [pc, #1220]	; 1b9c4 <print_yaml_data@@Base+0x990>
   1b4fc:	add	r3, pc, r3
   1b500:	mov	r0, r3
   1b504:	bl	123b4 <puts@plt>
   1b508:	ldr	r3, [pc, #1208]	; 1b9c8 <print_yaml_data@@Base+0x994>
   1b50c:	add	r3, pc, r3
   1b510:	mov	r0, r3
   1b514:	bl	123b4 <puts@plt>
   1b518:	ldr	r3, [pc, #1196]	; 1b9cc <print_yaml_data@@Base+0x998>
   1b51c:	add	r3, pc, r3
   1b520:	mov	r0, r3
   1b524:	bl	123b4 <puts@plt>
   1b528:	ldr	r3, [pc, #1184]	; 1b9d0 <print_yaml_data@@Base+0x99c>
   1b52c:	add	r3, pc, r3
   1b530:	mov	r0, r3
   1b534:	bl	123b4 <puts@plt>
   1b538:	ldr	r3, [pc, #1172]	; 1b9d4 <print_yaml_data@@Base+0x9a0>
   1b53c:	add	r3, pc, r3
   1b540:	mov	r0, r3
   1b544:	bl	123b4 <puts@plt>
   1b548:	ldr	r3, [pc, #1160]	; 1b9d8 <print_yaml_data@@Base+0x9a4>
   1b54c:	add	r3, pc, r3
   1b550:	mov	r0, r3
   1b554:	bl	123b4 <puts@plt>
   1b558:	ldr	r3, [pc, #1148]	; 1b9dc <print_yaml_data@@Base+0x9a8>
   1b55c:	add	r3, pc, r3
   1b560:	mov	r0, r3
   1b564:	bl	123b4 <puts@plt>
   1b568:	ldr	r3, [pc, #1136]	; 1b9e0 <print_yaml_data@@Base+0x9ac>
   1b56c:	add	r3, pc, r3
   1b570:	mov	r0, r3
   1b574:	bl	123b4 <puts@plt>
   1b578:	ldr	r3, [pc, #1124]	; 1b9e4 <print_yaml_data@@Base+0x9b0>
   1b57c:	add	r3, pc, r3
   1b580:	mov	r0, r3
   1b584:	bl	123b4 <puts@plt>
   1b588:	ldr	r3, [pc, #1112]	; 1b9e8 <print_yaml_data@@Base+0x9b4>
   1b58c:	add	r3, pc, r3
   1b590:	mov	r0, r3
   1b594:	bl	123b4 <puts@plt>
   1b598:	ldr	r3, [pc, #1100]	; 1b9ec <print_yaml_data@@Base+0x9b8>
   1b59c:	add	r3, pc, r3
   1b5a0:	mov	r0, r3
   1b5a4:	bl	123b4 <puts@plt>
   1b5a8:	ldr	r3, [pc, #1088]	; 1b9f0 <print_yaml_data@@Base+0x9bc>
   1b5ac:	add	r3, pc, r3
   1b5b0:	mov	r0, r3
   1b5b4:	bl	123b4 <puts@plt>
   1b5b8:	ldr	r3, [pc, #1076]	; 1b9f4 <print_yaml_data@@Base+0x9c0>
   1b5bc:	add	r3, pc, r3
   1b5c0:	mov	r0, r3
   1b5c4:	bl	123b4 <puts@plt>
   1b5c8:	ldr	r3, [pc, #1064]	; 1b9f8 <print_yaml_data@@Base+0x9c4>
   1b5cc:	add	r3, pc, r3
   1b5d0:	mov	r0, r3
   1b5d4:	bl	123b4 <puts@plt>
   1b5d8:	mov	r0, #10
   1b5dc:	bl	124bc <putchar@plt>
   1b5e0:	ldr	r3, [pc, #1044]	; 1b9fc <print_yaml_data@@Base+0x9c8>
   1b5e4:	add	r3, pc, r3
   1b5e8:	mov	r0, r3
   1b5ec:	bl	123b4 <puts@plt>
   1b5f0:	ldr	r3, [pc, #1032]	; 1ba00 <print_yaml_data@@Base+0x9cc>
   1b5f4:	add	r3, pc, r3
   1b5f8:	mov	r0, r3
   1b5fc:	bl	123b4 <puts@plt>
   1b600:	ldr	r3, [pc, #1020]	; 1ba04 <print_yaml_data@@Base+0x9d0>
   1b604:	add	r3, pc, r3
   1b608:	mov	r0, r3
   1b60c:	bl	123b4 <puts@plt>
   1b610:	ldr	r3, [pc, #1008]	; 1ba08 <print_yaml_data@@Base+0x9d4>
   1b614:	add	r3, pc, r3
   1b618:	mov	r0, r3
   1b61c:	bl	123b4 <puts@plt>
   1b620:	ldr	r3, [pc, #996]	; 1ba0c <print_yaml_data@@Base+0x9d8>
   1b624:	add	r3, pc, r3
   1b628:	mov	r0, r3
   1b62c:	bl	123b4 <puts@plt>
   1b630:	ldr	r3, [pc, #984]	; 1ba10 <print_yaml_data@@Base+0x9dc>
   1b634:	add	r3, pc, r3
   1b638:	mov	r0, r3
   1b63c:	bl	123b4 <puts@plt>
   1b640:	ldr	r3, [pc, #972]	; 1ba14 <print_yaml_data@@Base+0x9e0>
   1b644:	add	r3, pc, r3
   1b648:	mov	r0, r3
   1b64c:	bl	123b4 <puts@plt>
   1b650:	ldr	r3, [pc, #960]	; 1ba18 <print_yaml_data@@Base+0x9e4>
   1b654:	add	r3, pc, r3
   1b658:	mov	r0, r3
   1b65c:	bl	123b4 <puts@plt>
   1b660:	ldr	r3, [pc, #948]	; 1ba1c <print_yaml_data@@Base+0x9e8>
   1b664:	add	r3, pc, r3
   1b668:	mov	r0, r3
   1b66c:	bl	123b4 <puts@plt>
   1b670:	ldr	r3, [pc, #936]	; 1ba20 <print_yaml_data@@Base+0x9ec>
   1b674:	add	r3, pc, r3
   1b678:	mov	r0, r3
   1b67c:	bl	123b4 <puts@plt>
   1b680:	ldr	r3, [pc, #924]	; 1ba24 <print_yaml_data@@Base+0x9f0>
   1b684:	add	r3, pc, r3
   1b688:	mov	r0, r3
   1b68c:	bl	123b4 <puts@plt>
   1b690:	ldr	r3, [pc, #912]	; 1ba28 <print_yaml_data@@Base+0x9f4>
   1b694:	add	r3, pc, r3
   1b698:	mov	r0, r3
   1b69c:	bl	123b4 <puts@plt>
   1b6a0:	ldr	r3, [pc, #900]	; 1ba2c <print_yaml_data@@Base+0x9f8>
   1b6a4:	add	r3, pc, r3
   1b6a8:	mov	r0, r3
   1b6ac:	bl	123b4 <puts@plt>
   1b6b0:	ldr	r3, [pc, #888]	; 1ba30 <print_yaml_data@@Base+0x9fc>
   1b6b4:	add	r3, pc, r3
   1b6b8:	mov	r0, r3
   1b6bc:	bl	123b4 <puts@plt>
   1b6c0:	ldr	r3, [pc, #876]	; 1ba34 <print_yaml_data@@Base+0xa00>
   1b6c4:	add	r3, pc, r3
   1b6c8:	mov	r0, r3
   1b6cc:	bl	123b4 <puts@plt>
   1b6d0:	ldr	r3, [pc, #864]	; 1ba38 <print_yaml_data@@Base+0xa04>
   1b6d4:	add	r3, pc, r3
   1b6d8:	mov	r0, r3
   1b6dc:	bl	123b4 <puts@plt>
   1b6e0:	ldr	r3, [pc, #852]	; 1ba3c <print_yaml_data@@Base+0xa08>
   1b6e4:	add	r3, pc, r3
   1b6e8:	mov	r0, r3
   1b6ec:	bl	123b4 <puts@plt>
   1b6f0:	ldr	r3, [pc, #840]	; 1ba40 <print_yaml_data@@Base+0xa0c>
   1b6f4:	add	r3, pc, r3
   1b6f8:	mov	r0, r3
   1b6fc:	bl	123b4 <puts@plt>
   1b700:	mov	r0, #10
   1b704:	bl	124bc <putchar@plt>
   1b708:	ldr	r3, [pc, #820]	; 1ba44 <print_yaml_data@@Base+0xa10>
   1b70c:	add	r3, pc, r3
   1b710:	mov	r0, r3
   1b714:	bl	123b4 <puts@plt>
   1b718:	ldr	r3, [pc, #808]	; 1ba48 <print_yaml_data@@Base+0xa14>
   1b71c:	add	r3, pc, r3
   1b720:	mov	r0, r3
   1b724:	bl	123b4 <puts@plt>
   1b728:	ldr	r3, [pc, #796]	; 1ba4c <print_yaml_data@@Base+0xa18>
   1b72c:	add	r3, pc, r3
   1b730:	mov	r0, r3
   1b734:	bl	123b4 <puts@plt>
   1b738:	ldr	r3, [pc, #784]	; 1ba50 <print_yaml_data@@Base+0xa1c>
   1b73c:	add	r3, pc, r3
   1b740:	mov	r0, r3
   1b744:	bl	123b4 <puts@plt>
   1b748:	ldr	r3, [pc, #772]	; 1ba54 <print_yaml_data@@Base+0xa20>
   1b74c:	add	r3, pc, r3
   1b750:	mov	r0, r3
   1b754:	bl	123b4 <puts@plt>
   1b758:	ldr	r3, [pc, #760]	; 1ba58 <print_yaml_data@@Base+0xa24>
   1b75c:	add	r3, pc, r3
   1b760:	mov	r0, r3
   1b764:	bl	123b4 <puts@plt>
   1b768:	ldr	r3, [pc, #748]	; 1ba5c <print_yaml_data@@Base+0xa28>
   1b76c:	add	r3, pc, r3
   1b770:	mov	r0, r3
   1b774:	bl	123b4 <puts@plt>
   1b778:	ldr	r3, [pc, #736]	; 1ba60 <print_yaml_data@@Base+0xa2c>
   1b77c:	add	r3, pc, r3
   1b780:	mov	r0, r3
   1b784:	bl	123b4 <puts@plt>
   1b788:	ldr	r3, [pc, #724]	; 1ba64 <print_yaml_data@@Base+0xa30>
   1b78c:	add	r3, pc, r3
   1b790:	mov	r0, r3
   1b794:	bl	123b4 <puts@plt>
   1b798:	ldr	r3, [pc, #712]	; 1ba68 <print_yaml_data@@Base+0xa34>
   1b79c:	add	r3, pc, r3
   1b7a0:	mov	r0, r3
   1b7a4:	bl	123b4 <puts@plt>
   1b7a8:	ldr	r3, [pc, #700]	; 1ba6c <print_yaml_data@@Base+0xa38>
   1b7ac:	add	r3, pc, r3
   1b7b0:	mov	r0, r3
   1b7b4:	bl	123b4 <puts@plt>
   1b7b8:	ldr	r3, [pc, #688]	; 1ba70 <print_yaml_data@@Base+0xa3c>
   1b7bc:	add	r3, pc, r3
   1b7c0:	mov	r0, r3
   1b7c4:	bl	123b4 <puts@plt>
   1b7c8:	ldr	r3, [pc, #676]	; 1ba74 <print_yaml_data@@Base+0xa40>
   1b7cc:	add	r3, pc, r3
   1b7d0:	mov	r0, r3
   1b7d4:	bl	123b4 <puts@plt>
   1b7d8:	ldr	r3, [pc, #664]	; 1ba78 <print_yaml_data@@Base+0xa44>
   1b7dc:	add	r3, pc, r3
   1b7e0:	mov	r0, r3
   1b7e4:	bl	123b4 <puts@plt>
   1b7e8:	ldr	r3, [pc, #652]	; 1ba7c <print_yaml_data@@Base+0xa48>
   1b7ec:	add	r3, pc, r3
   1b7f0:	mov	r0, r3
   1b7f4:	bl	123b4 <puts@plt>
   1b7f8:	ldr	r3, [pc, #640]	; 1ba80 <print_yaml_data@@Base+0xa4c>
   1b7fc:	add	r3, pc, r3
   1b800:	mov	r0, r3
   1b804:	bl	123b4 <puts@plt>
   1b808:	ldr	r3, [pc, #628]	; 1ba84 <print_yaml_data@@Base+0xa50>
   1b80c:	add	r3, pc, r3
   1b810:	mov	r0, r3
   1b814:	bl	123b4 <puts@plt>
   1b818:	ldr	r3, [pc, #616]	; 1ba88 <print_yaml_data@@Base+0xa54>
   1b81c:	add	r3, pc, r3
   1b820:	mov	r0, r3
   1b824:	bl	123b4 <puts@plt>
   1b828:	mov	r0, #10
   1b82c:	bl	124bc <putchar@plt>
   1b830:	ldr	r3, [pc, #596]	; 1ba8c <print_yaml_data@@Base+0xa58>
   1b834:	add	r3, pc, r3
   1b838:	mov	r0, r3
   1b83c:	bl	123b4 <puts@plt>
   1b840:	ldr	r3, [pc, #584]	; 1ba90 <print_yaml_data@@Base+0xa5c>
   1b844:	add	r3, pc, r3
   1b848:	mov	r0, r3
   1b84c:	bl	123b4 <puts@plt>
   1b850:	mov	r0, #10
   1b854:	bl	124bc <putchar@plt>
   1b858:	ldr	r3, [pc, #564]	; 1ba94 <print_yaml_data@@Base+0xa60>
   1b85c:	add	r3, pc, r3
   1b860:	mov	r0, r3
   1b864:	bl	123b4 <puts@plt>
   1b868:	ldr	r3, [pc, #552]	; 1ba98 <print_yaml_data@@Base+0xa64>
   1b86c:	add	r3, pc, r3
   1b870:	mov	r0, r3
   1b874:	bl	123b4 <puts@plt>
   1b878:	mov	r0, #10
   1b87c:	bl	124bc <putchar@plt>
   1b880:	ldr	r3, [pc, #532]	; 1ba9c <print_yaml_data@@Base+0xa68>
   1b884:	add	r3, pc, r3
   1b888:	mov	r0, r3
   1b88c:	bl	123b4 <puts@plt>
   1b890:	ldr	r3, [pc, #520]	; 1baa0 <print_yaml_data@@Base+0xa6c>
   1b894:	add	r3, pc, r3
   1b898:	mov	r0, r3
   1b89c:	bl	123b4 <puts@plt>
   1b8a0:	ldr	r3, [pc, #508]	; 1baa4 <print_yaml_data@@Base+0xa70>
   1b8a4:	add	r3, pc, r3
   1b8a8:	mov	r0, r3
   1b8ac:	bl	123b4 <puts@plt>
   1b8b0:	ldr	r3, [pc, #496]	; 1baa8 <print_yaml_data@@Base+0xa74>
   1b8b4:	add	r3, pc, r3
   1b8b8:	mov	r0, r3
   1b8bc:	bl	123b4 <puts@plt>
   1b8c0:	ldr	r3, [pc, #484]	; 1baac <print_yaml_data@@Base+0xa78>
   1b8c4:	add	r3, pc, r3
   1b8c8:	mov	r0, r3
   1b8cc:	bl	123b4 <puts@plt>
   1b8d0:	ldr	r3, [pc, #472]	; 1bab0 <print_yaml_data@@Base+0xa7c>
   1b8d4:	add	r3, pc, r3
   1b8d8:	mov	r0, r3
   1b8dc:	bl	123b4 <puts@plt>
   1b8e0:	ldr	r3, [pc, #460]	; 1bab4 <print_yaml_data@@Base+0xa80>
   1b8e4:	add	r3, pc, r3
   1b8e8:	mov	r0, r3
   1b8ec:	bl	123b4 <puts@plt>
   1b8f0:	mov	r0, #10
   1b8f4:	bl	124bc <putchar@plt>
   1b8f8:	nop			; (mov r0, r0)
   1b8fc:	pop	{fp, pc}
   1b900:	andeq	r3, r0, r4, ror #28
   1b904:	andeq	r3, r0, ip, asr lr
   1b908:	muleq	r0, r4, lr
   1b90c:			; <UNDEFINED> instruction: 0x00003eb0
   1b910:			; <UNDEFINED> instruction: 0x00003eb8
   1b914:	andeq	r3, r0, r4, asr #29
   1b918:	andeq	r3, r0, ip, ror #29
   1b91c:	andeq	r3, r0, r4, lsl #30
   1b920:	andeq	r3, r0, r0, lsr pc
   1b924:	andeq	r3, r0, r0, asr pc
   1b928:	andeq	r3, r0, r8, lsl #31
   1b92c:	muleq	r0, r0, pc	; <UNPREDICTABLE>
   1b930:	andeq	r3, r0, ip, lsr #31
   1b934:			; <UNDEFINED> instruction: 0x00003fb4
   1b938:	ldrdeq	r3, [r0], -r0
   1b93c:	ldrdeq	r3, [r0], -ip
   1b940:	andeq	r4, r0, r0
   1b944:	andeq	r4, r0, ip
   1b948:	andeq	r4, r0, r4, asr #32
   1b94c:	andeq	r4, r0, r0, rrx
   1b950:	andeq	r4, r0, r0, ror r0
   1b954:	strheq	r4, [r0], -r0
   1b958:	strdeq	r4, [r0], -r0
   1b95c:	strdeq	r4, [r0], -r8
   1b960:	andeq	r4, r0, r0, lsr r1
   1b964:	andeq	r3, r0, r8, asr #26
   1b968:	andeq	r3, r0, r4, lsr #27
   1b96c:			; <UNDEFINED> instruction: 0x00003dbc
   1b970:	andeq	r3, r0, r8, ror #27
   1b974:	andeq	r3, r0, r8, lsl #28
   1b978:	andeq	r4, r0, ip, lsl #2
   1b97c:	andeq	r4, r0, r4, lsl r1
   1b980:	andeq	r4, r0, r8, asr #2
   1b984:	andeq	r4, r0, r0, asr r1
   1b988:	andeq	r4, r0, ip, lsl #3
   1b98c:	andeq	r4, r0, r0, lsr #3
   1b990:	andeq	r4, r0, r4, asr #3
   1b994:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1b998:	andeq	r4, r0, r0, lsl r2
   1b99c:	andeq	r4, r0, r8, lsr r2
   1b9a0:	andeq	r4, r0, r4, ror r2
   1b9a4:	andeq	r4, r0, r8, lsl #5
   1b9a8:	andeq	r3, r0, r8, ror #29
   1b9ac:	strdeq	r3, [r0], -r8
   1b9b0:	andeq	r3, r0, r8, lsr pc
   1b9b4:	andeq	r3, r0, r8, ror pc
   1b9b8:	andeq	r4, r0, r0, lsl #5
   1b9bc:			; <UNDEFINED> instruction: 0x000042b8
   1b9c0:	andeq	r4, r0, r4, ror #5
   1b9c4:	andeq	r4, r0, ip, ror #5
   1b9c8:	strdeq	r4, [r0], -ip
   1b9cc:	andeq	r4, r0, r4, lsr r3
   1b9d0:	strdeq	r3, [r0], -ip
   1b9d4:	andeq	r3, r0, r4, lsl ip
   1b9d8:	andeq	r4, r0, r4, asr #32
   1b9dc:	andeq	r4, r0, r8, asr r0
   1b9e0:	andeq	r4, r0, r0, lsr r3
   1b9e4:	andeq	r4, r0, r0, asr #6
   1b9e8:	andeq	r4, r0, r8, ror r3
   1b9ec:	ldrdeq	r3, [r0], -r0
   1b9f0:	andeq	r3, r0, r0, ror #27
   1b9f4:	andeq	r3, r0, r0, lsr #28
   1b9f8:	andeq	r3, r0, r0, ror #28
   1b9fc:	andeq	r4, r0, r0, ror r3
   1ba00:	andeq	r4, r0, r8, lsr #7
   1ba04:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1ba08:	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
   1ba0c:	andeq	r4, r0, r4, ror #3
   1ba10:			; <UNDEFINED> instruction: 0x000043bc
   1ba14:	strdeq	r4, [r0], -r8
   1ba18:	ldrdeq	r3, [r0], -r4
   1ba1c:	andeq	r3, r0, ip, ror #21
   1ba20:	andeq	r3, r0, ip, lsl pc
   1ba24:	andeq	r3, r0, r0, lsr pc
   1ba28:	andeq	r4, r0, r8, lsl #4
   1ba2c:	andeq	r4, r0, r8, lsl r2
   1ba30:	andeq	r4, r0, r0, asr r2
   1ba34:	andeq	r3, r0, r8, lsr #25
   1ba38:			; <UNDEFINED> instruction: 0x00003cb8
   1ba3c:	strdeq	r3, [r0], -r8
   1ba40:	andeq	r3, r0, r8, lsr sp
   1ba44:	andeq	r4, r0, r0, asr r3
   1ba48:	andeq	r4, r0, r8, lsl #7
   1ba4c:	andeq	r4, r0, r4, asr #7
   1ba50:	andeq	r4, r0, r0, lsl #8
   1ba54:	andeq	r4, r0, r0, lsr #8
   1ba58:	andeq	r4, r0, r8, lsr #8
   1ba5c:	andeq	r4, r0, r8, asr #8
   1ba60:	andeq	r3, r0, r4, lsl lr
   1ba64:	andeq	r3, r0, r8, lsr #28
   1ba68:	andeq	r4, r0, r0, lsl #2
   1ba6c:	andeq	r4, r0, r0, lsl r1
   1ba70:	andeq	r4, r0, r8, asr #2
   1ba74:	andeq	r4, r0, r0, lsr #8
   1ba78:	andeq	r4, r0, r0, lsr r4
   1ba7c:	andeq	r4, r0, r0, ror r4
   1ba80:	andeq	r4, r0, ip, lsr #9
   1ba84:	ldrdeq	r4, [r0], -ip
   1ba88:	andeq	r4, r0, ip, lsl r5
   1ba8c:	andeq	r4, r0, ip, lsr r5
   1ba90:	andeq	r4, r0, r4, asr #10
   1ba94:	andeq	r4, r0, ip, asr #10
   1ba98:	andeq	r4, r0, r8, asr r5
   1ba9c:	andeq	r4, r0, r4, ror r5
   1baa0:			; <UNDEFINED> instruction: 0x000045b4
   1baa4:	strdeq	r4, [r0], -r0
   1baa8:	andeq	r4, r0, ip, lsl #12
   1baac:	andeq	r4, r0, r8, asr #12
   1bab0:	andeq	r4, r0, r0, lsl #13
   1bab4:			; <UNDEFINED> instruction: 0x000046b0

0001bab8 <handle_coda_error@@Base>:
   1bab8:	push	{r4, r5, fp, lr}
   1babc:	add	fp, sp, #12
   1bac0:	ldr	r4, [pc, #88]	; 1bb20 <handle_coda_error@@Base+0x68>
   1bac4:	add	r4, pc, r4
   1bac8:	ldr	r3, [pc, #84]	; 1bb24 <handle_coda_error@@Base+0x6c>
   1bacc:	ldr	r3, [r4, r3]
   1bad0:	ldr	r5, [r3]
   1bad4:	bl	1260c <coda_get_errno@plt>
   1bad8:	mov	r3, r0
   1badc:	ldr	r3, [r3]
   1bae0:	mov	r0, r3
   1bae4:	bl	125c4 <coda_errno_to_string@plt>
   1bae8:	mov	r3, r0
   1baec:	mov	r2, r3
   1baf0:	ldr	r3, [pc, #48]	; 1bb28 <handle_coda_error@@Base+0x70>
   1baf4:	add	r3, pc, r3
   1baf8:	mov	r1, r3
   1bafc:	mov	r0, r5
   1bb00:	bl	1245c <fprintf@plt>
   1bb04:	ldr	r3, [pc, #24]	; 1bb24 <handle_coda_error@@Base+0x6c>
   1bb08:	ldr	r3, [r4, r3]
   1bb0c:	ldr	r3, [r3]
   1bb10:	mov	r0, r3
   1bb14:	bl	12264 <fflush@plt>
   1bb18:	mov	r0, #1
   1bb1c:	bl	12414 <exit@plt>
   1bb20:	andeq	r5, r1, r4, lsr r5
   1bb24:			; <UNDEFINED> instruction: 0x000001b8
   1bb28:	andeq	r4, r0, r0, ror #9
   1bb2c:	push	{r4, fp, lr}
   1bb30:	add	fp, sp, #8
   1bb34:	sub	sp, sp, #28
   1bb38:	str	r0, [fp, #-32]	; 0xffffffe0
   1bb3c:	str	r1, [fp, #-36]	; 0xffffffdc
   1bb40:	ldr	r4, [pc, #1568]	; 1c168 <handle_coda_error@@Base+0x6b0>
   1bb44:	add	r4, pc, r4
   1bb48:	ldr	r3, [pc, #1564]	; 1c16c <handle_coda_error@@Base+0x6b4>
   1bb4c:	ldr	r3, [r4, r3]
   1bb50:	mov	r2, #0
   1bb54:	str	r2, [r3]
   1bb58:	ldr	r3, [pc, #1548]	; 1c16c <handle_coda_error@@Base+0x6b4>
   1bb5c:	ldr	r3, [r4, r3]
   1bb60:	mov	r2, #0
   1bb64:	str	r2, [r3, #664]	; 0x298
   1bb68:	ldr	r3, [pc, #1536]	; 1c170 <handle_coda_error@@Base+0x6b8>
   1bb6c:	ldr	r3, [r4, r3]
   1bb70:	mov	r2, #1
   1bb74:	str	r2, [r3]
   1bb78:	ldr	r3, [pc, #1524]	; 1c174 <handle_coda_error@@Base+0x6bc>
   1bb7c:	ldr	r3, [r4, r3]
   1bb80:	mov	r2, #0
   1bb84:	str	r2, [r3]
   1bb88:	mov	r3, #1
   1bb8c:	str	r3, [fp, #-16]
   1bb90:	mov	r3, #1
   1bb94:	str	r3, [fp, #-20]	; 0xffffffec
   1bb98:	ldr	r3, [pc, #1496]	; 1c178 <handle_coda_error@@Base+0x6c0>
   1bb9c:	ldr	r3, [r4, r3]
   1bba0:	mov	r2, #0
   1bba4:	str	r2, [r3]
   1bba8:	ldr	r3, [pc, #1484]	; 1c17c <handle_coda_error@@Base+0x6c4>
   1bbac:	ldr	r3, [r4, r3]
   1bbb0:	mov	r2, #0
   1bbb4:	str	r2, [r3]
   1bbb8:	ldr	r3, [pc, #1472]	; 1c180 <handle_coda_error@@Base+0x6c8>
   1bbbc:	ldr	r3, [r4, r3]
   1bbc0:	mov	r2, #0
   1bbc4:	str	r2, [r3]
   1bbc8:	ldr	r3, [pc, #1460]	; 1c184 <handle_coda_error@@Base+0x6cc>
   1bbcc:	ldr	r3, [r4, r3]
   1bbd0:	mov	r2, #0
   1bbd4:	str	r2, [r3]
   1bbd8:	mov	r3, #0
   1bbdc:	str	r3, [fp, #-24]	; 0xffffffe8
   1bbe0:	b	1c05c <handle_coda_error@@Base+0x5a4>
   1bbe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bbe8:	lsl	r3, r3, #2
   1bbec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bbf0:	add	r3, r2, r3
   1bbf4:	ldr	r3, [r3]
   1bbf8:	ldr	r2, [pc, #1416]	; 1c188 <handle_coda_error@@Base+0x6d0>
   1bbfc:	add	r2, pc, r2
   1bc00:	mov	r1, r2
   1bc04:	mov	r0, r3
   1bc08:	bl	12210 <strcmp@plt>
   1bc0c:	mov	r3, r0
   1bc10:	cmp	r3, #0
   1bc14:	beq	1bc4c <handle_coda_error@@Base+0x194>
   1bc18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc1c:	lsl	r3, r3, #2
   1bc20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bc24:	add	r3, r2, r3
   1bc28:	ldr	r3, [r3]
   1bc2c:	ldr	r2, [pc, #1368]	; 1c18c <handle_coda_error@@Base+0x6d4>
   1bc30:	add	r2, pc, r2
   1bc34:	mov	r1, r2
   1bc38:	mov	r0, r3
   1bc3c:	bl	12210 <strcmp@plt>
   1bc40:	mov	r3, r0
   1bc44:	cmp	r3, #0
   1bc48:	bne	1bc60 <handle_coda_error@@Base+0x1a8>
   1bc4c:	ldr	r3, [pc, #1312]	; 1c174 <handle_coda_error@@Base+0x6bc>
   1bc50:	ldr	r3, [r4, r3]
   1bc54:	mov	r2, #1
   1bc58:	str	r2, [r3]
   1bc5c:	b	1c050 <handle_coda_error@@Base+0x598>
   1bc60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc64:	lsl	r3, r3, #2
   1bc68:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bc6c:	add	r3, r2, r3
   1bc70:	ldr	r3, [r3]
   1bc74:	ldr	r2, [pc, #1300]	; 1c190 <handle_coda_error@@Base+0x6d8>
   1bc78:	add	r2, pc, r2
   1bc7c:	mov	r1, r2
   1bc80:	mov	r0, r3
   1bc84:	bl	12210 <strcmp@plt>
   1bc88:	mov	r3, r0
   1bc8c:	cmp	r3, #0
   1bc90:	beq	1bcc8 <handle_coda_error@@Base+0x210>
   1bc94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bc98:	lsl	r3, r3, #2
   1bc9c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bca0:	add	r3, r2, r3
   1bca4:	ldr	r3, [r3]
   1bca8:	ldr	r2, [pc, #1252]	; 1c194 <handle_coda_error@@Base+0x6dc>
   1bcac:	add	r2, pc, r2
   1bcb0:	mov	r1, r2
   1bcb4:	mov	r0, r3
   1bcb8:	bl	12210 <strcmp@plt>
   1bcbc:	mov	r3, r0
   1bcc0:	cmp	r3, #0
   1bcc4:	bne	1bcd4 <handle_coda_error@@Base+0x21c>
   1bcc8:	mov	r3, #0
   1bccc:	str	r3, [fp, #-20]	; 0xffffffec
   1bcd0:	b	1c050 <handle_coda_error@@Base+0x598>
   1bcd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bcd8:	lsl	r3, r3, #2
   1bcdc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bce0:	add	r3, r2, r3
   1bce4:	ldr	r3, [r3]
   1bce8:	ldr	r2, [pc, #1192]	; 1c198 <handle_coda_error@@Base+0x6e0>
   1bcec:	add	r2, pc, r2
   1bcf0:	mov	r1, r2
   1bcf4:	mov	r0, r3
   1bcf8:	bl	12210 <strcmp@plt>
   1bcfc:	mov	r3, r0
   1bd00:	cmp	r3, #0
   1bd04:	beq	1bd3c <handle_coda_error@@Base+0x284>
   1bd08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd0c:	lsl	r3, r3, #2
   1bd10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd14:	add	r3, r2, r3
   1bd18:	ldr	r3, [r3]
   1bd1c:	ldr	r2, [pc, #1144]	; 1c19c <handle_coda_error@@Base+0x6e4>
   1bd20:	add	r2, pc, r2
   1bd24:	mov	r1, r2
   1bd28:	mov	r0, r3
   1bd2c:	bl	12210 <strcmp@plt>
   1bd30:	mov	r3, r0
   1bd34:	cmp	r3, #0
   1bd38:	bne	1bdf4 <handle_coda_error@@Base+0x33c>
   1bd3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd40:	add	r2, r3, #1
   1bd44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bd48:	cmp	r2, r3
   1bd4c:	bge	1bdf4 <handle_coda_error@@Base+0x33c>
   1bd50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd54:	add	r3, r3, #1
   1bd58:	lsl	r3, r3, #2
   1bd5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd60:	add	r3, r2, r3
   1bd64:	ldr	r3, [r3]
   1bd68:	ldrb	r3, [r3]
   1bd6c:	cmp	r3, #45	; 0x2d
   1bd70:	beq	1bdf4 <handle_coda_error@@Base+0x33c>
   1bd74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bd78:	add	r3, r3, #1
   1bd7c:	lsl	r3, r3, #2
   1bd80:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bd84:	add	r3, r2, r3
   1bd88:	ldr	r3, [r3]
   1bd8c:	mov	r0, r3
   1bd90:	bl	17ad8 <codadump_filter_create@@Base>
   1bd94:	mov	r2, r0
   1bd98:	ldr	r3, [pc, #972]	; 1c16c <handle_coda_error@@Base+0x6b4>
   1bd9c:	ldr	r3, [r4, r3]
   1bda0:	str	r2, [r3, #664]	; 0x298
   1bda4:	ldr	r3, [pc, #960]	; 1c16c <handle_coda_error@@Base+0x6b4>
   1bda8:	ldr	r3, [r4, r3]
   1bdac:	ldr	r3, [r3, #664]	; 0x298
   1bdb0:	cmp	r3, #0
   1bdb4:	bne	1bde4 <handle_coda_error@@Base+0x32c>
   1bdb8:	ldr	r3, [pc, #992]	; 1c1a0 <handle_coda_error@@Base+0x6e8>
   1bdbc:	ldr	r3, [r4, r3]
   1bdc0:	ldr	r3, [r3]
   1bdc4:	mov	r2, #40	; 0x28
   1bdc8:	mov	r1, #1
   1bdcc:	ldr	r0, [pc, #976]	; 1c1a4 <handle_coda_error@@Base+0x6ec>
   1bdd0:	add	r0, pc, r0
   1bdd4:	bl	12378 <fwrite@plt>
   1bdd8:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1bddc:	mov	r0, #1
   1bde0:	bl	12414 <exit@plt>
   1bde4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bde8:	add	r3, r3, #1
   1bdec:	str	r3, [fp, #-24]	; 0xffffffe8
   1bdf0:	b	1c050 <handle_coda_error@@Base+0x598>
   1bdf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bdf8:	lsl	r3, r3, #2
   1bdfc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be00:	add	r3, r2, r3
   1be04:	ldr	r3, [r3]
   1be08:	ldr	r2, [pc, #920]	; 1c1a8 <handle_coda_error@@Base+0x6f0>
   1be0c:	add	r2, pc, r2
   1be10:	mov	r1, r2
   1be14:	mov	r0, r3
   1be18:	bl	12210 <strcmp@plt>
   1be1c:	mov	r3, r0
   1be20:	cmp	r3, #0
   1be24:	beq	1be5c <handle_coda_error@@Base+0x3a4>
   1be28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be2c:	lsl	r3, r3, #2
   1be30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be34:	add	r3, r2, r3
   1be38:	ldr	r3, [r3]
   1be3c:	ldr	r2, [pc, #872]	; 1c1ac <handle_coda_error@@Base+0x6f4>
   1be40:	add	r2, pc, r2
   1be44:	mov	r1, r2
   1be48:	mov	r0, r3
   1be4c:	bl	12210 <strcmp@plt>
   1be50:	mov	r3, r0
   1be54:	cmp	r3, #0
   1be58:	bne	1be70 <handle_coda_error@@Base+0x3b8>
   1be5c:	ldr	r3, [pc, #792]	; 1c17c <handle_coda_error@@Base+0x6c4>
   1be60:	ldr	r3, [r4, r3]
   1be64:	mov	r2, #1
   1be68:	str	r2, [r3]
   1be6c:	b	1c050 <handle_coda_error@@Base+0x598>
   1be70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1be74:	lsl	r3, r3, #2
   1be78:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1be7c:	add	r3, r2, r3
   1be80:	ldr	r3, [r3]
   1be84:	ldr	r2, [pc, #804]	; 1c1b0 <handle_coda_error@@Base+0x6f8>
   1be88:	add	r2, pc, r2
   1be8c:	mov	r1, r2
   1be90:	mov	r0, r3
   1be94:	bl	12210 <strcmp@plt>
   1be98:	mov	r3, r0
   1be9c:	cmp	r3, #0
   1bea0:	beq	1bed8 <handle_coda_error@@Base+0x420>
   1bea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bea8:	lsl	r3, r3, #2
   1beac:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1beb0:	add	r3, r2, r3
   1beb4:	ldr	r3, [r3]
   1beb8:	ldr	r2, [pc, #756]	; 1c1b4 <handle_coda_error@@Base+0x6fc>
   1bebc:	add	r2, pc, r2
   1bec0:	mov	r1, r2
   1bec4:	mov	r0, r3
   1bec8:	bl	12210 <strcmp@plt>
   1becc:	mov	r3, r0
   1bed0:	cmp	r3, #0
   1bed4:	bne	1beec <handle_coda_error@@Base+0x434>
   1bed8:	ldr	r3, [pc, #672]	; 1c180 <handle_coda_error@@Base+0x6c8>
   1bedc:	ldr	r3, [r4, r3]
   1bee0:	mov	r2, #1
   1bee4:	str	r2, [r3]
   1bee8:	b	1c050 <handle_coda_error@@Base+0x598>
   1beec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bef0:	lsl	r3, r3, #2
   1bef4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bef8:	add	r3, r2, r3
   1befc:	ldr	r3, [r3]
   1bf00:	ldr	r2, [pc, #688]	; 1c1b8 <handle_coda_error@@Base+0x700>
   1bf04:	add	r2, pc, r2
   1bf08:	mov	r1, r2
   1bf0c:	mov	r0, r3
   1bf10:	bl	12210 <strcmp@plt>
   1bf14:	mov	r3, r0
   1bf18:	cmp	r3, #0
   1bf1c:	bne	1bf34 <handle_coda_error@@Base+0x47c>
   1bf20:	ldr	r3, [pc, #604]	; 1c184 <handle_coda_error@@Base+0x6cc>
   1bf24:	ldr	r3, [r4, r3]
   1bf28:	mov	r2, #1
   1bf2c:	str	r2, [r3]
   1bf30:	b	1c050 <handle_coda_error@@Base+0x598>
   1bf34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf38:	lsl	r3, r3, #2
   1bf3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf40:	add	r3, r2, r3
   1bf44:	ldr	r3, [r3]
   1bf48:	ldr	r2, [pc, #620]	; 1c1bc <handle_coda_error@@Base+0x704>
   1bf4c:	add	r2, pc, r2
   1bf50:	mov	r1, r2
   1bf54:	mov	r0, r3
   1bf58:	bl	12210 <strcmp@plt>
   1bf5c:	mov	r3, r0
   1bf60:	cmp	r3, #0
   1bf64:	bne	1bf8c <handle_coda_error@@Base+0x4d4>
   1bf68:	ldr	r3, [pc, #516]	; 1c174 <handle_coda_error@@Base+0x6bc>
   1bf6c:	ldr	r3, [r4, r3]
   1bf70:	mov	r2, #1
   1bf74:	str	r2, [r3]
   1bf78:	ldr	r3, [pc, #504]	; 1c178 <handle_coda_error@@Base+0x6c0>
   1bf7c:	ldr	r3, [r4, r3]
   1bf80:	mov	r2, #1
   1bf84:	str	r2, [r3]
   1bf88:	b	1c050 <handle_coda_error@@Base+0x598>
   1bf8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bf90:	lsl	r3, r3, #2
   1bf94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bf98:	add	r3, r2, r3
   1bf9c:	ldr	r3, [r3]
   1bfa0:	ldr	r2, [pc, #536]	; 1c1c0 <handle_coda_error@@Base+0x708>
   1bfa4:	add	r2, pc, r2
   1bfa8:	mov	r1, r2
   1bfac:	mov	r0, r3
   1bfb0:	bl	12210 <strcmp@plt>
   1bfb4:	mov	r3, r0
   1bfb8:	cmp	r3, #0
   1bfbc:	bne	1bfcc <handle_coda_error@@Base+0x514>
   1bfc0:	mov	r3, #0
   1bfc4:	str	r3, [fp, #-16]
   1bfc8:	b	1c050 <handle_coda_error@@Base+0x598>
   1bfcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bfd0:	sub	r2, r3, #1
   1bfd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bfd8:	cmp	r2, r3
   1bfdc:	bne	1c024 <handle_coda_error@@Base+0x56c>
   1bfe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1bfe4:	lsl	r3, r3, #2
   1bfe8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bfec:	add	r3, r2, r3
   1bff0:	ldr	r3, [r3]
   1bff4:	ldrb	r3, [r3]
   1bff8:	cmp	r3, #45	; 0x2d
   1bffc:	beq	1c024 <handle_coda_error@@Base+0x56c>
   1c000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c004:	lsl	r3, r3, #2
   1c008:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c00c:	add	r3, r2, r3
   1c010:	ldr	r2, [r3]
   1c014:	ldr	r3, [pc, #336]	; 1c16c <handle_coda_error@@Base+0x6b4>
   1c018:	ldr	r3, [r4, r3]
   1c01c:	str	r2, [r3]
   1c020:	b	1c050 <handle_coda_error@@Base+0x598>
   1c024:	ldr	r3, [pc, #372]	; 1c1a0 <handle_coda_error@@Base+0x6e8>
   1c028:	ldr	r3, [r4, r3]
   1c02c:	ldr	r3, [r3]
   1c030:	mov	r2, #25
   1c034:	mov	r1, #1
   1c038:	ldr	r0, [pc, #388]	; 1c1c4 <handle_coda_error@@Base+0x70c>
   1c03c:	add	r0, pc, r0
   1c040:	bl	12378 <fwrite@plt>
   1c044:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1c048:	mov	r0, #1
   1c04c:	bl	12414 <exit@plt>
   1c050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c054:	add	r3, r3, #1
   1c058:	str	r3, [fp, #-24]	; 0xffffffe8
   1c05c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c060:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c064:	cmp	r2, r3
   1c068:	blt	1bbe4 <handle_coda_error@@Base+0x12c>
   1c06c:	ldr	r3, [pc, #248]	; 1c16c <handle_coda_error@@Base+0x6b4>
   1c070:	ldr	r3, [r4, r3]
   1c074:	ldr	r3, [r3]
   1c078:	cmp	r3, #0
   1c07c:	beq	1c098 <handle_coda_error@@Base+0x5e0>
   1c080:	ldr	r3, [pc, #228]	; 1c16c <handle_coda_error@@Base+0x6b4>
   1c084:	ldr	r3, [r4, r3]
   1c088:	ldr	r3, [r3]
   1c08c:	ldrb	r3, [r3]
   1c090:	cmp	r3, #0
   1c094:	bne	1c0c4 <handle_coda_error@@Base+0x60c>
   1c098:	ldr	r3, [pc, #256]	; 1c1a0 <handle_coda_error@@Base+0x6e8>
   1c09c:	ldr	r3, [r4, r3]
   1c0a0:	ldr	r3, [r3]
   1c0a4:	mov	r2, #25
   1c0a8:	mov	r1, #1
   1c0ac:	ldr	r0, [pc, #276]	; 1c1c8 <handle_coda_error@@Base+0x710>
   1c0b0:	add	r0, pc, r0
   1c0b4:	bl	12378 <fwrite@plt>
   1c0b8:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1c0bc:	mov	r0, #1
   1c0c0:	bl	12414 <exit@plt>
   1c0c4:	bl	12480 <coda_init@plt>
   1c0c8:	mov	r3, r0
   1c0cc:	cmp	r3, #0
   1c0d0:	beq	1c118 <handle_coda_error@@Base+0x660>
   1c0d4:	ldr	r3, [pc, #196]	; 1c1a0 <handle_coda_error@@Base+0x6e8>
   1c0d8:	ldr	r3, [r4, r3]
   1c0dc:	ldr	r4, [r3]
   1c0e0:	bl	1260c <coda_get_errno@plt>
   1c0e4:	mov	r3, r0
   1c0e8:	ldr	r3, [r3]
   1c0ec:	mov	r0, r3
   1c0f0:	bl	125c4 <coda_errno_to_string@plt>
   1c0f4:	mov	r3, r0
   1c0f8:	mov	r2, r3
   1c0fc:	ldr	r3, [pc, #200]	; 1c1cc <handle_coda_error@@Base+0x714>
   1c100:	add	r3, pc, r3
   1c104:	mov	r1, r3
   1c108:	mov	r0, r4
   1c10c:	bl	1245c <fprintf@plt>
   1c110:	mov	r0, #1
   1c114:	bl	12414 <exit@plt>
   1c118:	ldr	r3, [fp, #-16]
   1c11c:	cmp	r3, #0
   1c120:	moveq	r3, #1
   1c124:	movne	r3, #0
   1c128:	uxtb	r3, r3
   1c12c:	mov	r0, r3
   1c130:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   1c134:	mov	r0, #0
   1c138:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   1c13c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c140:	bl	1248c <coda_set_option_perform_conversions@plt>
   1c144:	bl	191ac <traverse_info_init@@Base>
   1c148:	bl	14fc0 <dim_info_init@@Base>
   1c14c:	bl	19ee0 <traverse_product@@Base>
   1c150:	bl	15018 <dim_info_done@@Base>
   1c154:	bl	19214 <traverse_info_done@@Base>
   1c158:	bl	123a8 <coda_done@plt>
   1c15c:	nop			; (mov r0, r0)
   1c160:	sub	sp, fp, #8
   1c164:	pop	{r4, fp, pc}
   1c168:			; <UNDEFINED> instruction: 0x000154b4
   1c16c:			; <UNDEFINED> instruction: 0x000001b4
   1c170:	muleq	r0, ip, r1
   1c174:			; <UNDEFINED> instruction: 0x000001b0
   1c178:	andeq	r0, r0, r0, lsr #3
   1c17c:	andeq	r0, r0, r4, asr #3
   1c180:	andeq	r0, r0, ip, lsr #3
   1c184:	andeq	r0, r0, r8, asr #3
   1c188:	andeq	r4, r0, r4, ror #7
   1c18c:			; <UNDEFINED> instruction: 0x000043b4
   1c190:	andeq	r4, r0, r8, ror r3
   1c194:	andeq	r4, r0, r8, asr #6
   1c198:	andeq	r4, r0, r0, lsr #6
   1c19c:	strdeq	r4, [r0], -r0
   1c1a0:			; <UNDEFINED> instruction: 0x000001b8
   1c1a4:	andeq	r4, r0, ip, asr #4
   1c1a8:	andeq	r4, r0, ip, lsr r2
   1c1ac:	andeq	r4, r0, ip, lsl #4
   1c1b0:	andeq	r4, r0, ip, asr #3
   1c1b4:	muleq	r0, ip, r1
   1c1b8:	andeq	r4, r0, ip, asr r1
   1c1bc:	andeq	r4, r0, r4, lsr #2
   1c1c0:	ldrdeq	r4, [r0], -ip
   1c1c4:	andeq	r4, r0, r8, asr r0
   1c1c8:	andeq	r3, r0, r4, ror #31
   1c1cc:	ldrdeq	r3, [r0], -r4
   1c1d0:	push	{r4, fp, lr}
   1c1d4:	add	fp, sp, #8
   1c1d8:	sub	sp, sp, #28
   1c1dc:	str	r0, [fp, #-32]	; 0xffffffe0
   1c1e0:	str	r1, [fp, #-36]	; 0xffffffdc
   1c1e4:	ldr	r4, [pc, #2196]	; 1ca80 <handle_coda_error@@Base+0xfc8>
   1c1e8:	add	r4, pc, r4
   1c1ec:	ldr	r3, [pc, #2192]	; 1ca84 <handle_coda_error@@Base+0xfcc>
   1c1f0:	ldr	r3, [r4, r3]
   1c1f4:	mov	r2, #0
   1c1f8:	str	r2, [r3]
   1c1fc:	ldr	r3, [pc, #2176]	; 1ca84 <handle_coda_error@@Base+0xfcc>
   1c200:	ldr	r3, [r4, r3]
   1c204:	mov	r2, #0
   1c208:	str	r2, [r3, #664]	; 0x298
   1c20c:	ldr	r3, [pc, #2164]	; 1ca88 <handle_coda_error@@Base+0xfd0>
   1c210:	ldr	r3, [r4, r3]
   1c214:	mov	r2, #0
   1c218:	str	r2, [r3]
   1c21c:	ldr	r3, [pc, #2152]	; 1ca8c <handle_coda_error@@Base+0xfd4>
   1c220:	ldr	r3, [r4, r3]
   1c224:	ldr	r2, [pc, #2148]	; 1ca90 <handle_coda_error@@Base+0xfd8>
   1c228:	add	r2, pc, r2
   1c22c:	str	r2, [r3]
   1c230:	ldr	r3, [pc, #2140]	; 1ca94 <handle_coda_error@@Base+0xfdc>
   1c234:	ldr	r3, [r4, r3]
   1c238:	ldr	r2, [r3]
   1c23c:	ldr	r3, [pc, #2132]	; 1ca98 <handle_coda_error@@Base+0xfe0>
   1c240:	ldr	r3, [r4, r3]
   1c244:	str	r2, [r3]
   1c248:	ldr	r3, [pc, #2124]	; 1ca9c <handle_coda_error@@Base+0xfe4>
   1c24c:	ldr	r3, [r4, r3]
   1c250:	mov	r2, #1
   1c254:	str	r2, [r3]
   1c258:	ldr	r3, [pc, #2112]	; 1caa0 <handle_coda_error@@Base+0xfe8>
   1c25c:	ldr	r3, [r4, r3]
   1c260:	mov	r2, #1
   1c264:	str	r2, [r3]
   1c268:	mov	r3, #1
   1c26c:	str	r3, [fp, #-16]
   1c270:	mov	r3, #1
   1c274:	str	r3, [fp, #-20]	; 0xffffffec
   1c278:	ldr	r3, [pc, #2084]	; 1caa4 <handle_coda_error@@Base+0xfec>
   1c27c:	ldr	r3, [r4, r3]
   1c280:	mov	r2, #0
   1c284:	str	r2, [r3]
   1c288:	ldr	r3, [pc, #2072]	; 1caa8 <handle_coda_error@@Base+0xff0>
   1c28c:	ldr	r3, [r4, r3]
   1c290:	mov	r2, #0
   1c294:	str	r2, [r3]
   1c298:	ldr	r3, [pc, #2060]	; 1caac <handle_coda_error@@Base+0xff4>
   1c29c:	ldr	r3, [r4, r3]
   1c2a0:	mov	r2, #0
   1c2a4:	str	r2, [r3]
   1c2a8:	ldr	r3, [pc, #2048]	; 1cab0 <handle_coda_error@@Base+0xff8>
   1c2ac:	ldr	r3, [r4, r3]
   1c2b0:	mov	r2, #0
   1c2b4:	str	r2, [r3]
   1c2b8:	mov	r3, #0
   1c2bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1c2c0:	b	1c8c0 <handle_coda_error@@Base+0xe08>
   1c2c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2c8:	lsl	r3, r3, #2
   1c2cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c2d0:	add	r3, r2, r3
   1c2d4:	ldr	r3, [r3]
   1c2d8:	ldr	r2, [pc, #2004]	; 1cab4 <handle_coda_error@@Base+0xffc>
   1c2dc:	add	r2, pc, r2
   1c2e0:	mov	r1, r2
   1c2e4:	mov	r0, r3
   1c2e8:	bl	12210 <strcmp@plt>
   1c2ec:	mov	r3, r0
   1c2f0:	cmp	r3, #0
   1c2f4:	beq	1c32c <handle_coda_error@@Base+0x874>
   1c2f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c2fc:	lsl	r3, r3, #2
   1c300:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c304:	add	r3, r2, r3
   1c308:	ldr	r3, [r3]
   1c30c:	ldr	r2, [pc, #1956]	; 1cab8 <handle_coda_error@@Base+0x1000>
   1c310:	add	r2, pc, r2
   1c314:	mov	r1, r2
   1c318:	mov	r0, r3
   1c31c:	bl	12210 <strcmp@plt>
   1c320:	mov	r3, r0
   1c324:	cmp	r3, #0
   1c328:	bne	1c338 <handle_coda_error@@Base+0x880>
   1c32c:	mov	r3, #0
   1c330:	str	r3, [fp, #-20]	; 0xffffffec
   1c334:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c338:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c33c:	lsl	r3, r3, #2
   1c340:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c344:	add	r3, r2, r3
   1c348:	ldr	r3, [r3]
   1c34c:	ldr	r2, [pc, #1896]	; 1cabc <handle_coda_error@@Base+0x1004>
   1c350:	add	r2, pc, r2
   1c354:	mov	r1, r2
   1c358:	mov	r0, r3
   1c35c:	bl	12210 <strcmp@plt>
   1c360:	mov	r3, r0
   1c364:	cmp	r3, #0
   1c368:	beq	1c3a0 <handle_coda_error@@Base+0x8e8>
   1c36c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c370:	lsl	r3, r3, #2
   1c374:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c378:	add	r3, r2, r3
   1c37c:	ldr	r3, [r3]
   1c380:	ldr	r2, [pc, #1848]	; 1cac0 <handle_coda_error@@Base+0x1008>
   1c384:	add	r2, pc, r2
   1c388:	mov	r1, r2
   1c38c:	mov	r0, r3
   1c390:	bl	12210 <strcmp@plt>
   1c394:	mov	r3, r0
   1c398:	cmp	r3, #0
   1c39c:	bne	1c458 <handle_coda_error@@Base+0x9a0>
   1c3a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3a4:	add	r2, r3, #1
   1c3a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c3ac:	cmp	r2, r3
   1c3b0:	bge	1c458 <handle_coda_error@@Base+0x9a0>
   1c3b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3b8:	add	r3, r3, #1
   1c3bc:	lsl	r3, r3, #2
   1c3c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c3c4:	add	r3, r2, r3
   1c3c8:	ldr	r3, [r3]
   1c3cc:	ldrb	r3, [r3]
   1c3d0:	cmp	r3, #45	; 0x2d
   1c3d4:	beq	1c458 <handle_coda_error@@Base+0x9a0>
   1c3d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c3dc:	add	r3, r3, #1
   1c3e0:	lsl	r3, r3, #2
   1c3e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c3e8:	add	r3, r2, r3
   1c3ec:	ldr	r3, [r3]
   1c3f0:	mov	r0, r3
   1c3f4:	bl	17ad8 <codadump_filter_create@@Base>
   1c3f8:	mov	r2, r0
   1c3fc:	ldr	r3, [pc, #1664]	; 1ca84 <handle_coda_error@@Base+0xfcc>
   1c400:	ldr	r3, [r4, r3]
   1c404:	str	r2, [r3, #664]	; 0x298
   1c408:	ldr	r3, [pc, #1652]	; 1ca84 <handle_coda_error@@Base+0xfcc>
   1c40c:	ldr	r3, [r4, r3]
   1c410:	ldr	r3, [r3, #664]	; 0x298
   1c414:	cmp	r3, #0
   1c418:	bne	1c448 <handle_coda_error@@Base+0x990>
   1c41c:	ldr	r3, [pc, #1696]	; 1cac4 <handle_coda_error@@Base+0x100c>
   1c420:	ldr	r3, [r4, r3]
   1c424:	ldr	r3, [r3]
   1c428:	mov	r2, #40	; 0x28
   1c42c:	mov	r1, #1
   1c430:	ldr	r0, [pc, #1680]	; 1cac8 <handle_coda_error@@Base+0x1010>
   1c434:	add	r0, pc, r0
   1c438:	bl	12378 <fwrite@plt>
   1c43c:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1c440:	mov	r0, #1
   1c444:	bl	12414 <exit@plt>
   1c448:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c44c:	add	r3, r3, #1
   1c450:	str	r3, [fp, #-24]	; 0xffffffe8
   1c454:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c45c:	lsl	r3, r3, #2
   1c460:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c464:	add	r3, r2, r3
   1c468:	ldr	r3, [r3]
   1c46c:	ldr	r2, [pc, #1624]	; 1cacc <handle_coda_error@@Base+0x1014>
   1c470:	add	r2, pc, r2
   1c474:	mov	r1, r2
   1c478:	mov	r0, r3
   1c47c:	bl	12210 <strcmp@plt>
   1c480:	mov	r3, r0
   1c484:	cmp	r3, #0
   1c488:	beq	1c4c0 <handle_coda_error@@Base+0xa08>
   1c48c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c490:	lsl	r3, r3, #2
   1c494:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c498:	add	r3, r2, r3
   1c49c:	ldr	r3, [r3]
   1c4a0:	ldr	r2, [pc, #1576]	; 1cad0 <handle_coda_error@@Base+0x1018>
   1c4a4:	add	r2, pc, r2
   1c4a8:	mov	r1, r2
   1c4ac:	mov	r0, r3
   1c4b0:	bl	12210 <strcmp@plt>
   1c4b4:	mov	r3, r0
   1c4b8:	cmp	r3, #0
   1c4bc:	bne	1c4d4 <handle_coda_error@@Base+0xa1c>
   1c4c0:	ldr	r3, [pc, #1500]	; 1caa4 <handle_coda_error@@Base+0xfec>
   1c4c4:	ldr	r3, [r4, r3]
   1c4c8:	mov	r2, #1
   1c4cc:	str	r2, [r3]
   1c4d0:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c4d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c4d8:	lsl	r3, r3, #2
   1c4dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c4e0:	add	r3, r2, r3
   1c4e4:	ldr	r3, [r3]
   1c4e8:	ldr	r2, [pc, #1508]	; 1cad4 <handle_coda_error@@Base+0x101c>
   1c4ec:	add	r2, pc, r2
   1c4f0:	mov	r1, r2
   1c4f4:	mov	r0, r3
   1c4f8:	bl	12210 <strcmp@plt>
   1c4fc:	mov	r3, r0
   1c500:	cmp	r3, #0
   1c504:	beq	1c53c <handle_coda_error@@Base+0xa84>
   1c508:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c50c:	lsl	r3, r3, #2
   1c510:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c514:	add	r3, r2, r3
   1c518:	ldr	r3, [r3]
   1c51c:	ldr	r2, [pc, #1460]	; 1cad8 <handle_coda_error@@Base+0x1020>
   1c520:	add	r2, pc, r2
   1c524:	mov	r1, r2
   1c528:	mov	r0, r3
   1c52c:	bl	12210 <strcmp@plt>
   1c530:	mov	r3, r0
   1c534:	cmp	r3, #0
   1c538:	bne	1c550 <handle_coda_error@@Base+0xa98>
   1c53c:	ldr	r3, [pc, #1380]	; 1caa8 <handle_coda_error@@Base+0xff0>
   1c540:	ldr	r3, [r4, r3]
   1c544:	mov	r2, #1
   1c548:	str	r2, [r3]
   1c54c:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c554:	lsl	r3, r3, #2
   1c558:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c55c:	add	r3, r2, r3
   1c560:	ldr	r3, [r3]
   1c564:	ldr	r2, [pc, #1392]	; 1cadc <handle_coda_error@@Base+0x1024>
   1c568:	add	r2, pc, r2
   1c56c:	mov	r1, r2
   1c570:	mov	r0, r3
   1c574:	bl	12210 <strcmp@plt>
   1c578:	mov	r3, r0
   1c57c:	cmp	r3, #0
   1c580:	beq	1c5b8 <handle_coda_error@@Base+0xb00>
   1c584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c588:	lsl	r3, r3, #2
   1c58c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c590:	add	r3, r2, r3
   1c594:	ldr	r3, [r3]
   1c598:	ldr	r2, [pc, #1344]	; 1cae0 <handle_coda_error@@Base+0x1028>
   1c59c:	add	r2, pc, r2
   1c5a0:	mov	r1, r2
   1c5a4:	mov	r0, r3
   1c5a8:	bl	12210 <strcmp@plt>
   1c5ac:	mov	r3, r0
   1c5b0:	cmp	r3, #0
   1c5b4:	bne	1c624 <handle_coda_error@@Base+0xb6c>
   1c5b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5bc:	add	r2, r3, #1
   1c5c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c5c4:	cmp	r2, r3
   1c5c8:	bge	1c624 <handle_coda_error@@Base+0xb6c>
   1c5cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5d0:	add	r3, r3, #1
   1c5d4:	lsl	r3, r3, #2
   1c5d8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c5dc:	add	r3, r2, r3
   1c5e0:	ldr	r3, [r3]
   1c5e4:	ldrb	r3, [r3]
   1c5e8:	cmp	r3, #45	; 0x2d
   1c5ec:	beq	1c624 <handle_coda_error@@Base+0xb6c>
   1c5f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c5f4:	add	r3, r3, #1
   1c5f8:	lsl	r3, r3, #2
   1c5fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c600:	add	r3, r2, r3
   1c604:	ldr	r2, [r3]
   1c608:	ldr	r3, [pc, #1144]	; 1ca88 <handle_coda_error@@Base+0xfd0>
   1c60c:	ldr	r3, [r4, r3]
   1c610:	str	r2, [r3]
   1c614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c618:	add	r3, r3, #1
   1c61c:	str	r3, [fp, #-24]	; 0xffffffe8
   1c620:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c628:	lsl	r3, r3, #2
   1c62c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c630:	add	r3, r2, r3
   1c634:	ldr	r3, [r3]
   1c638:	ldr	r2, [pc, #1188]	; 1cae4 <handle_coda_error@@Base+0x102c>
   1c63c:	add	r2, pc, r2
   1c640:	mov	r1, r2
   1c644:	mov	r0, r3
   1c648:	bl	12210 <strcmp@plt>
   1c64c:	mov	r3, r0
   1c650:	cmp	r3, #0
   1c654:	beq	1c68c <handle_coda_error@@Base+0xbd4>
   1c658:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c65c:	lsl	r3, r3, #2
   1c660:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c664:	add	r3, r2, r3
   1c668:	ldr	r3, [r3]
   1c66c:	ldr	r2, [pc, #1140]	; 1cae8 <handle_coda_error@@Base+0x1030>
   1c670:	add	r2, pc, r2
   1c674:	mov	r1, r2
   1c678:	mov	r0, r3
   1c67c:	bl	12210 <strcmp@plt>
   1c680:	mov	r3, r0
   1c684:	cmp	r3, #0
   1c688:	bne	1c6a0 <handle_coda_error@@Base+0xbe8>
   1c68c:	ldr	r3, [pc, #1048]	; 1caac <handle_coda_error@@Base+0xff4>
   1c690:	ldr	r3, [r4, r3]
   1c694:	mov	r2, #1
   1c698:	str	r2, [r3]
   1c69c:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c6a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c6a4:	lsl	r3, r3, #2
   1c6a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6ac:	add	r3, r2, r3
   1c6b0:	ldr	r3, [r3]
   1c6b4:	ldr	r2, [pc, #1072]	; 1caec <handle_coda_error@@Base+0x1034>
   1c6b8:	add	r2, pc, r2
   1c6bc:	mov	r1, r2
   1c6c0:	mov	r0, r3
   1c6c4:	bl	12210 <strcmp@plt>
   1c6c8:	mov	r3, r0
   1c6cc:	cmp	r3, #0
   1c6d0:	beq	1c708 <handle_coda_error@@Base+0xc50>
   1c6d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c6d8:	lsl	r3, r3, #2
   1c6dc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c6e0:	add	r3, r2, r3
   1c6e4:	ldr	r3, [r3]
   1c6e8:	ldr	r2, [pc, #1024]	; 1caf0 <handle_coda_error@@Base+0x1038>
   1c6ec:	add	r2, pc, r2
   1c6f0:	mov	r1, r2
   1c6f4:	mov	r0, r3
   1c6f8:	bl	12210 <strcmp@plt>
   1c6fc:	mov	r3, r0
   1c700:	cmp	r3, #0
   1c704:	bne	1c774 <handle_coda_error@@Base+0xcbc>
   1c708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c70c:	add	r2, r3, #1
   1c710:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c714:	cmp	r2, r3
   1c718:	bge	1c774 <handle_coda_error@@Base+0xcbc>
   1c71c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c720:	add	r3, r3, #1
   1c724:	lsl	r3, r3, #2
   1c728:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c72c:	add	r3, r2, r3
   1c730:	ldr	r3, [r3]
   1c734:	ldrb	r3, [r3]
   1c738:	cmp	r3, #45	; 0x2d
   1c73c:	beq	1c774 <handle_coda_error@@Base+0xcbc>
   1c740:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c744:	add	r3, r3, #1
   1c748:	lsl	r3, r3, #2
   1c74c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c750:	add	r3, r2, r3
   1c754:	ldr	r2, [r3]
   1c758:	ldr	r3, [pc, #812]	; 1ca8c <handle_coda_error@@Base+0xfd4>
   1c75c:	ldr	r3, [r4, r3]
   1c760:	str	r2, [r3]
   1c764:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c768:	add	r3, r3, #1
   1c76c:	str	r3, [fp, #-24]	; 0xffffffe8
   1c770:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c774:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c778:	lsl	r3, r3, #2
   1c77c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c780:	add	r3, r2, r3
   1c784:	ldr	r3, [r3]
   1c788:	ldr	r2, [pc, #868]	; 1caf4 <handle_coda_error@@Base+0x103c>
   1c78c:	add	r2, pc, r2
   1c790:	mov	r1, r2
   1c794:	mov	r0, r3
   1c798:	bl	12210 <strcmp@plt>
   1c79c:	mov	r3, r0
   1c7a0:	cmp	r3, #0
   1c7a4:	beq	1c7dc <handle_coda_error@@Base+0xd24>
   1c7a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c7ac:	lsl	r3, r3, #2
   1c7b0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c7b4:	add	r3, r2, r3
   1c7b8:	ldr	r3, [r3]
   1c7bc:	ldr	r2, [pc, #820]	; 1caf8 <handle_coda_error@@Base+0x1040>
   1c7c0:	add	r2, pc, r2
   1c7c4:	mov	r1, r2
   1c7c8:	mov	r0, r3
   1c7cc:	bl	12210 <strcmp@plt>
   1c7d0:	mov	r3, r0
   1c7d4:	cmp	r3, #0
   1c7d8:	bne	1c7f0 <handle_coda_error@@Base+0xd38>
   1c7dc:	ldr	r3, [pc, #716]	; 1cab0 <handle_coda_error@@Base+0xff8>
   1c7e0:	ldr	r3, [r4, r3]
   1c7e4:	mov	r2, #1
   1c7e8:	str	r2, [r3]
   1c7ec:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c7f4:	lsl	r3, r3, #2
   1c7f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c7fc:	add	r3, r2, r3
   1c800:	ldr	r3, [r3]
   1c804:	ldr	r2, [pc, #752]	; 1cafc <handle_coda_error@@Base+0x1044>
   1c808:	add	r2, pc, r2
   1c80c:	mov	r1, r2
   1c810:	mov	r0, r3
   1c814:	bl	12210 <strcmp@plt>
   1c818:	mov	r3, r0
   1c81c:	cmp	r3, #0
   1c820:	bne	1c830 <handle_coda_error@@Base+0xd78>
   1c824:	mov	r3, #0
   1c828:	str	r3, [fp, #-16]
   1c82c:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c834:	sub	r2, r3, #1
   1c838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c83c:	cmp	r2, r3
   1c840:	bne	1c888 <handle_coda_error@@Base+0xdd0>
   1c844:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c848:	lsl	r3, r3, #2
   1c84c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c850:	add	r3, r2, r3
   1c854:	ldr	r3, [r3]
   1c858:	ldrb	r3, [r3]
   1c85c:	cmp	r3, #45	; 0x2d
   1c860:	beq	1c888 <handle_coda_error@@Base+0xdd0>
   1c864:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c868:	lsl	r3, r3, #2
   1c86c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1c870:	add	r3, r2, r3
   1c874:	ldr	r2, [r3]
   1c878:	ldr	r3, [pc, #516]	; 1ca84 <handle_coda_error@@Base+0xfcc>
   1c87c:	ldr	r3, [r4, r3]
   1c880:	str	r2, [r3]
   1c884:	b	1c8b4 <handle_coda_error@@Base+0xdfc>
   1c888:	ldr	r3, [pc, #564]	; 1cac4 <handle_coda_error@@Base+0x100c>
   1c88c:	ldr	r3, [r4, r3]
   1c890:	ldr	r3, [r3]
   1c894:	mov	r2, #25
   1c898:	mov	r1, #1
   1c89c:	ldr	r0, [pc, #604]	; 1cb00 <handle_coda_error@@Base+0x1048>
   1c8a0:	add	r0, pc, r0
   1c8a4:	bl	12378 <fwrite@plt>
   1c8a8:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1c8ac:	mov	r0, #1
   1c8b0:	bl	12414 <exit@plt>
   1c8b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c8b8:	add	r3, r3, #1
   1c8bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1c8c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c8c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c8c8:	cmp	r2, r3
   1c8cc:	blt	1c2c4 <handle_coda_error@@Base+0x80c>
   1c8d0:	ldr	r3, [pc, #428]	; 1ca84 <handle_coda_error@@Base+0xfcc>
   1c8d4:	ldr	r3, [r4, r3]
   1c8d8:	ldr	r3, [r3]
   1c8dc:	cmp	r3, #0
   1c8e0:	beq	1c8fc <handle_coda_error@@Base+0xe44>
   1c8e4:	ldr	r3, [pc, #408]	; 1ca84 <handle_coda_error@@Base+0xfcc>
   1c8e8:	ldr	r3, [r4, r3]
   1c8ec:	ldr	r3, [r3]
   1c8f0:	ldrb	r3, [r3]
   1c8f4:	cmp	r3, #0
   1c8f8:	bne	1c928 <handle_coda_error@@Base+0xe70>
   1c8fc:	ldr	r3, [pc, #448]	; 1cac4 <handle_coda_error@@Base+0x100c>
   1c900:	ldr	r3, [r4, r3]
   1c904:	ldr	r3, [r3]
   1c908:	mov	r2, #25
   1c90c:	mov	r1, #1
   1c910:	ldr	r0, [pc, #492]	; 1cb04 <handle_coda_error@@Base+0x104c>
   1c914:	add	r0, pc, r0
   1c918:	bl	12378 <fwrite@plt>
   1c91c:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1c920:	mov	r0, #1
   1c924:	bl	12414 <exit@plt>
   1c928:	bl	12480 <coda_init@plt>
   1c92c:	mov	r3, r0
   1c930:	cmp	r3, #0
   1c934:	beq	1c97c <handle_coda_error@@Base+0xec4>
   1c938:	ldr	r3, [pc, #388]	; 1cac4 <handle_coda_error@@Base+0x100c>
   1c93c:	ldr	r3, [r4, r3]
   1c940:	ldr	r4, [r3]
   1c944:	bl	1260c <coda_get_errno@plt>
   1c948:	mov	r3, r0
   1c94c:	ldr	r3, [r3]
   1c950:	mov	r0, r3
   1c954:	bl	125c4 <coda_errno_to_string@plt>
   1c958:	mov	r3, r0
   1c95c:	mov	r2, r3
   1c960:	ldr	r3, [pc, #416]	; 1cb08 <handle_coda_error@@Base+0x1050>
   1c964:	add	r3, pc, r3
   1c968:	mov	r1, r3
   1c96c:	mov	r0, r4
   1c970:	bl	1245c <fprintf@plt>
   1c974:	mov	r0, #1
   1c978:	bl	12414 <exit@plt>
   1c97c:	ldr	r3, [fp, #-16]
   1c980:	cmp	r3, #0
   1c984:	moveq	r3, #1
   1c988:	movne	r3, #0
   1c98c:	uxtb	r3, r3
   1c990:	mov	r0, r3
   1c994:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   1c998:	mov	r0, #0
   1c99c:	bl	12204 <coda_set_option_perform_boundary_checks@plt>
   1c9a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c9a4:	bl	1248c <coda_set_option_perform_conversions@plt>
   1c9a8:	bl	191ac <traverse_info_init@@Base>
   1c9ac:	bl	14fc0 <dim_info_init@@Base>
   1c9b0:	ldr	r3, [pc, #208]	; 1ca88 <handle_coda_error@@Base+0xfd0>
   1c9b4:	ldr	r3, [r4, r3]
   1c9b8:	ldr	r3, [r3]
   1c9bc:	cmp	r3, #0
   1c9c0:	beq	1ca3c <handle_coda_error@@Base+0xf84>
   1c9c4:	ldr	r3, [pc, #188]	; 1ca88 <handle_coda_error@@Base+0xfd0>
   1c9c8:	ldr	r3, [r4, r3]
   1c9cc:	ldr	r3, [r3]
   1c9d0:	ldr	r2, [pc, #308]	; 1cb0c <handle_coda_error@@Base+0x1054>
   1c9d4:	add	r2, pc, r2
   1c9d8:	mov	r1, r2
   1c9dc:	mov	r0, r3
   1c9e0:	bl	12240 <fopen@plt>
   1c9e4:	mov	r2, r0
   1c9e8:	ldr	r3, [pc, #168]	; 1ca98 <handle_coda_error@@Base+0xfe0>
   1c9ec:	ldr	r3, [r4, r3]
   1c9f0:	str	r2, [r3]
   1c9f4:	ldr	r3, [pc, #156]	; 1ca98 <handle_coda_error@@Base+0xfe0>
   1c9f8:	ldr	r3, [r4, r3]
   1c9fc:	ldr	r3, [r3]
   1ca00:	cmp	r3, #0
   1ca04:	bne	1ca3c <handle_coda_error@@Base+0xf84>
   1ca08:	ldr	r3, [pc, #180]	; 1cac4 <handle_coda_error@@Base+0x100c>
   1ca0c:	ldr	r3, [r4, r3]
   1ca10:	ldr	r0, [r3]
   1ca14:	ldr	r3, [pc, #108]	; 1ca88 <handle_coda_error@@Base+0xfd0>
   1ca18:	ldr	r3, [r4, r3]
   1ca1c:	ldr	r3, [r3]
   1ca20:	mov	r2, r3
   1ca24:	ldr	r3, [pc, #228]	; 1cb10 <handle_coda_error@@Base+0x1058>
   1ca28:	add	r3, pc, r3
   1ca2c:	mov	r1, r3
   1ca30:	bl	1245c <fprintf@plt>
   1ca34:	mov	r0, #1
   1ca38:	bl	12414 <exit@plt>
   1ca3c:	bl	19ee0 <traverse_product@@Base>
   1ca40:	ldr	r3, [pc, #64]	; 1ca88 <handle_coda_error@@Base+0xfd0>
   1ca44:	ldr	r3, [r4, r3]
   1ca48:	ldr	r3, [r3]
   1ca4c:	cmp	r3, #0
   1ca50:	beq	1ca68 <handle_coda_error@@Base+0xfb0>
   1ca54:	ldr	r3, [pc, #60]	; 1ca98 <handle_coda_error@@Base+0xfe0>
   1ca58:	ldr	r3, [r4, r3]
   1ca5c:	ldr	r3, [r3]
   1ca60:	mov	r0, r3
   1ca64:	bl	12504 <fclose@plt>
   1ca68:	bl	15018 <dim_info_done@@Base>
   1ca6c:	bl	19214 <traverse_info_done@@Base>
   1ca70:	bl	123a8 <coda_done@plt>
   1ca74:	nop			; (mov r0, r0)
   1ca78:	sub	sp, fp, #8
   1ca7c:	pop	{r4, fp, pc}
   1ca80:	andeq	r4, r1, r0, lsl lr
   1ca84:			; <UNDEFINED> instruction: 0x000001b4
   1ca88:	andeq	r0, r0, r4, lsr #3
   1ca8c:	andeq	r0, r0, r0, asr #3
   1ca90:	andeq	r3, r0, r8, lsl #29
   1ca94:	ldrdeq	r0, [r0], -ip
   1ca98:			; <UNDEFINED> instruction: 0x000001bc
   1ca9c:	muleq	r0, ip, r1
   1caa0:			; <UNDEFINED> instruction: 0x000001b0
   1caa4:	andeq	r0, r0, ip, asr #3
   1caa8:	andeq	r0, r0, r8, ror #3
   1caac:	andeq	r0, r0, ip, ror #3
   1cab0:	andeq	r0, r0, r8, lsr #3
   1cab4:	andeq	r3, r0, r4, lsl sp
   1cab8:	andeq	r3, r0, r4, ror #25
   1cabc:			; <UNDEFINED> instruction: 0x00003cbc
   1cac0:	andeq	r3, r0, ip, lsl #25
   1cac4:			; <UNDEFINED> instruction: 0x000001b8
   1cac8:	andeq	r3, r0, r8, ror #23
   1cacc:	andeq	r3, r0, r4, asr #24
   1cad0:	andeq	r3, r0, r4, lsl ip
   1cad4:	ldrdeq	r3, [r0], -r4
   1cad8:	andeq	r3, r0, r4, lsr #23
   1cadc:	andeq	r3, r0, r4, ror #22
   1cae0:	andeq	r3, r0, r4, lsr fp
   1cae4:	andeq	r3, r0, r0, lsr #21
   1cae8:	andeq	r3, r0, r0, ror sl
   1caec:	andeq	r3, r0, r8, lsr sl
   1caf0:	andeq	r3, r0, r8, lsl #20
   1caf4:			; <UNDEFINED> instruction: 0x000038bc
   1caf8:	andeq	r3, r0, r8, asr #18
   1cafc:	andeq	r3, r0, r8, ror r8
   1cb00:	strdeq	r3, [r0], -r4
   1cb04:	andeq	r3, r0, r0, lsl #15
   1cb08:	andeq	r3, r0, r0, ror r6
   1cb0c:	andeq	r3, r0, r8, asr #14
   1cb10:	strdeq	r3, [r0], -r8
   1cb14:	push	{r4, fp, lr}
   1cb18:	add	fp, sp, #8
   1cb1c:	sub	sp, sp, #28
   1cb20:	str	r0, [fp, #-32]	; 0xffffffe0
   1cb24:	str	r1, [fp, #-36]	; 0xffffffdc
   1cb28:	ldr	r4, [pc, #1400]	; 1d0a8 <handle_coda_error@@Base+0x15f0>
   1cb2c:	add	r4, pc, r4
   1cb30:	ldr	r3, [pc, #1396]	; 1d0ac <handle_coda_error@@Base+0x15f4>
   1cb34:	ldr	r3, [r4, r3]
   1cb38:	mov	r2, #0
   1cb3c:	str	r2, [r3]
   1cb40:	ldr	r3, [pc, #1384]	; 1d0b0 <handle_coda_error@@Base+0x15f8>
   1cb44:	ldr	r3, [r4, r3]
   1cb48:	mov	r2, #0
   1cb4c:	str	r2, [r3]
   1cb50:	ldr	r3, [pc, #1372]	; 1d0b4 <handle_coda_error@@Base+0x15fc>
   1cb54:	ldr	r3, [r4, r3]
   1cb58:	mov	r2, #0
   1cb5c:	str	r2, [r3]
   1cb60:	ldr	r3, [pc, #1360]	; 1d0b8 <handle_coda_error@@Base+0x1600>
   1cb64:	ldr	r3, [r4, r3]
   1cb68:	ldr	r2, [r3]
   1cb6c:	ldr	r3, [pc, #1352]	; 1d0bc <handle_coda_error@@Base+0x1604>
   1cb70:	ldr	r3, [r4, r3]
   1cb74:	str	r2, [r3]
   1cb78:	mov	r3, #1
   1cb7c:	str	r3, [fp, #-16]
   1cb80:	mov	r3, #1
   1cb84:	str	r3, [fp, #-20]	; 0xffffffec
   1cb88:	mov	r3, #0
   1cb8c:	str	r3, [fp, #-24]	; 0xffffffe8
   1cb90:	mov	r3, #0
   1cb94:	str	r3, [fp, #-28]	; 0xffffffe4
   1cb98:	b	1cefc <handle_coda_error@@Base+0x1444>
   1cb9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cba0:	lsl	r3, r3, #2
   1cba4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cba8:	add	r3, r2, r3
   1cbac:	ldr	r3, [r3]
   1cbb0:	ldr	r2, [pc, #1288]	; 1d0c0 <handle_coda_error@@Base+0x1608>
   1cbb4:	add	r2, pc, r2
   1cbb8:	mov	r1, r2
   1cbbc:	mov	r0, r3
   1cbc0:	bl	12210 <strcmp@plt>
   1cbc4:	mov	r3, r0
   1cbc8:	cmp	r3, #0
   1cbcc:	beq	1cc04 <handle_coda_error@@Base+0x114c>
   1cbd0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cbd4:	lsl	r3, r3, #2
   1cbd8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cbdc:	add	r3, r2, r3
   1cbe0:	ldr	r3, [r3]
   1cbe4:	ldr	r2, [pc, #1240]	; 1d0c4 <handle_coda_error@@Base+0x160c>
   1cbe8:	add	r2, pc, r2
   1cbec:	mov	r1, r2
   1cbf0:	mov	r0, r3
   1cbf4:	bl	12210 <strcmp@plt>
   1cbf8:	mov	r3, r0
   1cbfc:	cmp	r3, #0
   1cc00:	bne	1cc10 <handle_coda_error@@Base+0x1158>
   1cc04:	mov	r3, #1
   1cc08:	str	r3, [fp, #-24]	; 0xffffffe8
   1cc0c:	b	1cef0 <handle_coda_error@@Base+0x1438>
   1cc10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc14:	lsl	r3, r3, #2
   1cc18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cc1c:	add	r3, r2, r3
   1cc20:	ldr	r3, [r3]
   1cc24:	ldr	r2, [pc, #1180]	; 1d0c8 <handle_coda_error@@Base+0x1610>
   1cc28:	add	r2, pc, r2
   1cc2c:	mov	r1, r2
   1cc30:	mov	r0, r3
   1cc34:	bl	12210 <strcmp@plt>
   1cc38:	mov	r3, r0
   1cc3c:	cmp	r3, #0
   1cc40:	beq	1cc78 <handle_coda_error@@Base+0x11c0>
   1cc44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc48:	lsl	r3, r3, #2
   1cc4c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cc50:	add	r3, r2, r3
   1cc54:	ldr	r3, [r3]
   1cc58:	ldr	r2, [pc, #1132]	; 1d0cc <handle_coda_error@@Base+0x1614>
   1cc5c:	add	r2, pc, r2
   1cc60:	mov	r1, r2
   1cc64:	mov	r0, r3
   1cc68:	bl	12210 <strcmp@plt>
   1cc6c:	mov	r3, r0
   1cc70:	cmp	r3, #0
   1cc74:	bne	1cc84 <handle_coda_error@@Base+0x11cc>
   1cc78:	mov	r3, #0
   1cc7c:	str	r3, [fp, #-20]	; 0xffffffec
   1cc80:	b	1cef0 <handle_coda_error@@Base+0x1438>
   1cc84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc88:	lsl	r3, r3, #2
   1cc8c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cc90:	add	r3, r2, r3
   1cc94:	ldr	r3, [r3]
   1cc98:	ldr	r2, [pc, #1072]	; 1d0d0 <handle_coda_error@@Base+0x1618>
   1cc9c:	add	r2, pc, r2
   1cca0:	mov	r1, r2
   1cca4:	mov	r0, r3
   1cca8:	bl	12210 <strcmp@plt>
   1ccac:	mov	r3, r0
   1ccb0:	cmp	r3, #0
   1ccb4:	beq	1ccec <handle_coda_error@@Base+0x1234>
   1ccb8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ccbc:	lsl	r3, r3, #2
   1ccc0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ccc4:	add	r3, r2, r3
   1ccc8:	ldr	r3, [r3]
   1cccc:	ldr	r2, [pc, #1024]	; 1d0d4 <handle_coda_error@@Base+0x161c>
   1ccd0:	add	r2, pc, r2
   1ccd4:	mov	r1, r2
   1ccd8:	mov	r0, r3
   1ccdc:	bl	12210 <strcmp@plt>
   1cce0:	mov	r3, r0
   1cce4:	cmp	r3, #0
   1cce8:	bne	1cd58 <handle_coda_error@@Base+0x12a0>
   1ccec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ccf0:	add	r2, r3, #1
   1ccf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ccf8:	cmp	r2, r3
   1ccfc:	bge	1cd58 <handle_coda_error@@Base+0x12a0>
   1cd00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cd04:	add	r3, r3, #1
   1cd08:	lsl	r3, r3, #2
   1cd0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cd10:	add	r3, r2, r3
   1cd14:	ldr	r3, [r3]
   1cd18:	ldrb	r3, [r3]
   1cd1c:	cmp	r3, #45	; 0x2d
   1cd20:	beq	1cd58 <handle_coda_error@@Base+0x12a0>
   1cd24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cd28:	add	r3, r3, #1
   1cd2c:	lsl	r3, r3, #2
   1cd30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cd34:	add	r3, r2, r3
   1cd38:	ldr	r2, [r3]
   1cd3c:	ldr	r3, [pc, #876]	; 1d0b0 <handle_coda_error@@Base+0x15f8>
   1cd40:	ldr	r3, [r4, r3]
   1cd44:	str	r2, [r3]
   1cd48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cd4c:	add	r3, r3, #1
   1cd50:	str	r3, [fp, #-28]	; 0xffffffe4
   1cd54:	b	1cef0 <handle_coda_error@@Base+0x1438>
   1cd58:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cd5c:	lsl	r3, r3, #2
   1cd60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cd64:	add	r3, r2, r3
   1cd68:	ldr	r3, [r3]
   1cd6c:	ldr	r2, [pc, #868]	; 1d0d8 <handle_coda_error@@Base+0x1620>
   1cd70:	add	r2, pc, r2
   1cd74:	mov	r1, r2
   1cd78:	mov	r0, r3
   1cd7c:	bl	12210 <strcmp@plt>
   1cd80:	mov	r3, r0
   1cd84:	cmp	r3, #0
   1cd88:	beq	1cdc0 <handle_coda_error@@Base+0x1308>
   1cd8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cd90:	lsl	r3, r3, #2
   1cd94:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cd98:	add	r3, r2, r3
   1cd9c:	ldr	r3, [r3]
   1cda0:	ldr	r2, [pc, #820]	; 1d0dc <handle_coda_error@@Base+0x1624>
   1cda4:	add	r2, pc, r2
   1cda8:	mov	r1, r2
   1cdac:	mov	r0, r3
   1cdb0:	bl	12210 <strcmp@plt>
   1cdb4:	mov	r3, r0
   1cdb8:	cmp	r3, #0
   1cdbc:	bne	1ce2c <handle_coda_error@@Base+0x1374>
   1cdc0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cdc4:	add	r2, r3, #1
   1cdc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cdcc:	cmp	r2, r3
   1cdd0:	bge	1ce2c <handle_coda_error@@Base+0x1374>
   1cdd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cdd8:	add	r3, r3, #1
   1cddc:	lsl	r3, r3, #2
   1cde0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1cde4:	add	r3, r2, r3
   1cde8:	ldr	r3, [r3]
   1cdec:	ldrb	r3, [r3]
   1cdf0:	cmp	r3, #45	; 0x2d
   1cdf4:	beq	1ce2c <handle_coda_error@@Base+0x1374>
   1cdf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cdfc:	add	r3, r3, #1
   1ce00:	lsl	r3, r3, #2
   1ce04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ce08:	add	r3, r2, r3
   1ce0c:	ldr	r2, [r3]
   1ce10:	ldr	r3, [pc, #668]	; 1d0b4 <handle_coda_error@@Base+0x15fc>
   1ce14:	ldr	r3, [r4, r3]
   1ce18:	str	r2, [r3]
   1ce1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce20:	add	r3, r3, #1
   1ce24:	str	r3, [fp, #-28]	; 0xffffffe4
   1ce28:	b	1cef0 <handle_coda_error@@Base+0x1438>
   1ce2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce30:	lsl	r3, r3, #2
   1ce34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ce38:	add	r3, r2, r3
   1ce3c:	ldr	r3, [r3]
   1ce40:	ldr	r2, [pc, #664]	; 1d0e0 <handle_coda_error@@Base+0x1628>
   1ce44:	add	r2, pc, r2
   1ce48:	mov	r1, r2
   1ce4c:	mov	r0, r3
   1ce50:	bl	12210 <strcmp@plt>
   1ce54:	mov	r3, r0
   1ce58:	cmp	r3, #0
   1ce5c:	bne	1ce6c <handle_coda_error@@Base+0x13b4>
   1ce60:	mov	r3, #0
   1ce64:	str	r3, [fp, #-16]
   1ce68:	b	1cef0 <handle_coda_error@@Base+0x1438>
   1ce6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ce70:	sub	r2, r3, #1
   1ce74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce78:	cmp	r2, r3
   1ce7c:	bne	1cec4 <handle_coda_error@@Base+0x140c>
   1ce80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ce84:	lsl	r3, r3, #2
   1ce88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ce8c:	add	r3, r2, r3
   1ce90:	ldr	r3, [r3]
   1ce94:	ldrb	r3, [r3]
   1ce98:	cmp	r3, #45	; 0x2d
   1ce9c:	beq	1cec4 <handle_coda_error@@Base+0x140c>
   1cea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cea4:	lsl	r3, r3, #2
   1cea8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1ceac:	add	r3, r2, r3
   1ceb0:	ldr	r2, [r3]
   1ceb4:	ldr	r3, [pc, #496]	; 1d0ac <handle_coda_error@@Base+0x15f4>
   1ceb8:	ldr	r3, [r4, r3]
   1cebc:	str	r2, [r3]
   1cec0:	b	1cef0 <handle_coda_error@@Base+0x1438>
   1cec4:	ldr	r3, [pc, #536]	; 1d0e4 <handle_coda_error@@Base+0x162c>
   1cec8:	ldr	r3, [r4, r3]
   1cecc:	ldr	r3, [r3]
   1ced0:	mov	r2, #25
   1ced4:	mov	r1, #1
   1ced8:	ldr	r0, [pc, #520]	; 1d0e8 <handle_coda_error@@Base+0x1630>
   1cedc:	add	r0, pc, r0
   1cee0:	bl	12378 <fwrite@plt>
   1cee4:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1cee8:	mov	r0, #1
   1ceec:	bl	12414 <exit@plt>
   1cef0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cef4:	add	r3, r3, #1
   1cef8:	str	r3, [fp, #-28]	; 0xffffffe4
   1cefc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cf00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cf04:	cmp	r2, r3
   1cf08:	blt	1cb9c <handle_coda_error@@Base+0x10e4>
   1cf0c:	ldr	r3, [pc, #408]	; 1d0ac <handle_coda_error@@Base+0x15f4>
   1cf10:	ldr	r3, [r4, r3]
   1cf14:	ldr	r3, [r3]
   1cf18:	cmp	r3, #0
   1cf1c:	beq	1cf38 <handle_coda_error@@Base+0x1480>
   1cf20:	ldr	r3, [pc, #388]	; 1d0ac <handle_coda_error@@Base+0x15f4>
   1cf24:	ldr	r3, [r4, r3]
   1cf28:	ldr	r3, [r3]
   1cf2c:	ldrb	r3, [r3]
   1cf30:	cmp	r3, #0
   1cf34:	bne	1cf64 <handle_coda_error@@Base+0x14ac>
   1cf38:	ldr	r3, [pc, #420]	; 1d0e4 <handle_coda_error@@Base+0x162c>
   1cf3c:	ldr	r3, [r4, r3]
   1cf40:	ldr	r3, [r3]
   1cf44:	mov	r2, #25
   1cf48:	mov	r1, #1
   1cf4c:	ldr	r0, [pc, #408]	; 1d0ec <handle_coda_error@@Base+0x1634>
   1cf50:	add	r0, pc, r0
   1cf54:	bl	12378 <fwrite@plt>
   1cf58:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1cf5c:	mov	r0, #1
   1cf60:	bl	12414 <exit@plt>
   1cf64:	bl	12480 <coda_init@plt>
   1cf68:	mov	r3, r0
   1cf6c:	cmp	r3, #0
   1cf70:	beq	1cfb8 <handle_coda_error@@Base+0x1500>
   1cf74:	ldr	r3, [pc, #360]	; 1d0e4 <handle_coda_error@@Base+0x162c>
   1cf78:	ldr	r3, [r4, r3]
   1cf7c:	ldr	r4, [r3]
   1cf80:	bl	1260c <coda_get_errno@plt>
   1cf84:	mov	r3, r0
   1cf88:	ldr	r3, [r3]
   1cf8c:	mov	r0, r3
   1cf90:	bl	125c4 <coda_errno_to_string@plt>
   1cf94:	mov	r3, r0
   1cf98:	mov	r2, r3
   1cf9c:	ldr	r3, [pc, #332]	; 1d0f0 <handle_coda_error@@Base+0x1638>
   1cfa0:	add	r3, pc, r3
   1cfa4:	mov	r1, r3
   1cfa8:	mov	r0, r4
   1cfac:	bl	1245c <fprintf@plt>
   1cfb0:	mov	r0, #1
   1cfb4:	bl	12414 <exit@plt>
   1cfb8:	ldr	r3, [fp, #-16]
   1cfbc:	cmp	r3, #0
   1cfc0:	moveq	r3, #1
   1cfc4:	movne	r3, #0
   1cfc8:	uxtb	r3, r3
   1cfcc:	mov	r0, r3
   1cfd0:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   1cfd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cfd8:	bl	1248c <coda_set_option_perform_conversions@plt>
   1cfdc:	ldr	r3, [pc, #204]	; 1d0b0 <handle_coda_error@@Base+0x15f8>
   1cfe0:	ldr	r3, [r4, r3]
   1cfe4:	ldr	r3, [r3]
   1cfe8:	cmp	r3, #0
   1cfec:	beq	1d068 <handle_coda_error@@Base+0x15b0>
   1cff0:	ldr	r3, [pc, #184]	; 1d0b0 <handle_coda_error@@Base+0x15f8>
   1cff4:	ldr	r3, [r4, r3]
   1cff8:	ldr	r3, [r3]
   1cffc:	ldr	r2, [pc, #240]	; 1d0f4 <handle_coda_error@@Base+0x163c>
   1d000:	add	r2, pc, r2
   1d004:	mov	r1, r2
   1d008:	mov	r0, r3
   1d00c:	bl	12240 <fopen@plt>
   1d010:	mov	r2, r0
   1d014:	ldr	r3, [pc, #160]	; 1d0bc <handle_coda_error@@Base+0x1604>
   1d018:	ldr	r3, [r4, r3]
   1d01c:	str	r2, [r3]
   1d020:	ldr	r3, [pc, #148]	; 1d0bc <handle_coda_error@@Base+0x1604>
   1d024:	ldr	r3, [r4, r3]
   1d028:	ldr	r3, [r3]
   1d02c:	cmp	r3, #0
   1d030:	bne	1d068 <handle_coda_error@@Base+0x15b0>
   1d034:	ldr	r3, [pc, #168]	; 1d0e4 <handle_coda_error@@Base+0x162c>
   1d038:	ldr	r3, [r4, r3]
   1d03c:	ldr	r0, [r3]
   1d040:	ldr	r3, [pc, #104]	; 1d0b0 <handle_coda_error@@Base+0x15f8>
   1d044:	ldr	r3, [r4, r3]
   1d048:	ldr	r3, [r3]
   1d04c:	mov	r2, r3
   1d050:	ldr	r3, [pc, #160]	; 1d0f8 <handle_coda_error@@Base+0x1640>
   1d054:	add	r3, pc, r3
   1d058:	mov	r1, r3
   1d05c:	bl	1245c <fprintf@plt>
   1d060:	mov	r0, #1
   1d064:	bl	12414 <exit@plt>
   1d068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d06c:	bl	18a48 <print_json_data@@Base>
   1d070:	ldr	r3, [pc, #56]	; 1d0b0 <handle_coda_error@@Base+0x15f8>
   1d074:	ldr	r3, [r4, r3]
   1d078:	ldr	r3, [r3]
   1d07c:	cmp	r3, #0
   1d080:	beq	1d098 <handle_coda_error@@Base+0x15e0>
   1d084:	ldr	r3, [pc, #48]	; 1d0bc <handle_coda_error@@Base+0x1604>
   1d088:	ldr	r3, [r4, r3]
   1d08c:	ldr	r3, [r3]
   1d090:	mov	r0, r3
   1d094:	bl	12504 <fclose@plt>
   1d098:	bl	123a8 <coda_done@plt>
   1d09c:	nop			; (mov r0, r0)
   1d0a0:	sub	sp, fp, #8
   1d0a4:	pop	{r4, fp, pc}
   1d0a8:	andeq	r4, r1, ip, asr #9
   1d0ac:			; <UNDEFINED> instruction: 0x000001b4
   1d0b0:	andeq	r0, r0, r4, lsr #3
   1d0b4:	ldrdeq	r0, [r0], -r8
   1d0b8:	ldrdeq	r0, [r0], -ip
   1d0bc:			; <UNDEFINED> instruction: 0x000001bc
   1d0c0:	muleq	r0, r8, r5
   1d0c4:	andeq	r3, r0, r8, ror #10
   1d0c8:	andeq	r3, r0, r8, asr #7
   1d0cc:	muleq	r0, r8, r3
   1d0d0:	andeq	r3, r0, r0, lsr r4
   1d0d4:	andeq	r3, r0, r0, lsl #8
   1d0d8:	strdeq	r3, [r0], -r0
   1d0dc:	andeq	r3, r0, r0, asr #7
   1d0e0:	andeq	r3, r0, ip, lsr r2
   1d0e4:			; <UNDEFINED> instruction: 0x000001b8
   1d0e8:			; <UNDEFINED> instruction: 0x000031b8
   1d0ec:	andeq	r3, r0, r4, asr #2
   1d0f0:	andeq	r3, r0, r4, lsr r0
   1d0f4:	andeq	r3, r0, ip, lsl r1
   1d0f8:	andeq	r3, r0, ip, asr #1
   1d0fc:	push	{r4, fp, lr}
   1d100:	add	fp, sp, #8
   1d104:	sub	sp, sp, #28
   1d108:	str	r0, [fp, #-32]	; 0xffffffe0
   1d10c:	str	r1, [fp, #-36]	; 0xffffffdc
   1d110:	ldr	r4, [pc, #1400]	; 1d690 <handle_coda_error@@Base+0x1bd8>
   1d114:	add	r4, pc, r4
   1d118:	ldr	r3, [pc, #1396]	; 1d694 <handle_coda_error@@Base+0x1bdc>
   1d11c:	ldr	r3, [r4, r3]
   1d120:	mov	r2, #0
   1d124:	str	r2, [r3]
   1d128:	ldr	r3, [pc, #1384]	; 1d698 <handle_coda_error@@Base+0x1be0>
   1d12c:	ldr	r3, [r4, r3]
   1d130:	mov	r2, #0
   1d134:	str	r2, [r3]
   1d138:	ldr	r3, [pc, #1372]	; 1d69c <handle_coda_error@@Base+0x1be4>
   1d13c:	ldr	r3, [r4, r3]
   1d140:	mov	r2, #0
   1d144:	str	r2, [r3]
   1d148:	ldr	r3, [pc, #1360]	; 1d6a0 <handle_coda_error@@Base+0x1be8>
   1d14c:	ldr	r3, [r4, r3]
   1d150:	ldr	r2, [r3]
   1d154:	ldr	r3, [pc, #1352]	; 1d6a4 <handle_coda_error@@Base+0x1bec>
   1d158:	ldr	r3, [r4, r3]
   1d15c:	str	r2, [r3]
   1d160:	mov	r3, #1
   1d164:	str	r3, [fp, #-16]
   1d168:	mov	r3, #1
   1d16c:	str	r3, [fp, #-20]	; 0xffffffec
   1d170:	mov	r3, #0
   1d174:	str	r3, [fp, #-24]	; 0xffffffe8
   1d178:	mov	r3, #0
   1d17c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d180:	b	1d4e4 <handle_coda_error@@Base+0x1a2c>
   1d184:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d188:	lsl	r3, r3, #2
   1d18c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d190:	add	r3, r2, r3
   1d194:	ldr	r3, [r3]
   1d198:	ldr	r2, [pc, #1288]	; 1d6a8 <handle_coda_error@@Base+0x1bf0>
   1d19c:	add	r2, pc, r2
   1d1a0:	mov	r1, r2
   1d1a4:	mov	r0, r3
   1d1a8:	bl	12210 <strcmp@plt>
   1d1ac:	mov	r3, r0
   1d1b0:	cmp	r3, #0
   1d1b4:	beq	1d1ec <handle_coda_error@@Base+0x1734>
   1d1b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1bc:	lsl	r3, r3, #2
   1d1c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d1c4:	add	r3, r2, r3
   1d1c8:	ldr	r3, [r3]
   1d1cc:	ldr	r2, [pc, #1240]	; 1d6ac <handle_coda_error@@Base+0x1bf4>
   1d1d0:	add	r2, pc, r2
   1d1d4:	mov	r1, r2
   1d1d8:	mov	r0, r3
   1d1dc:	bl	12210 <strcmp@plt>
   1d1e0:	mov	r3, r0
   1d1e4:	cmp	r3, #0
   1d1e8:	bne	1d1f8 <handle_coda_error@@Base+0x1740>
   1d1ec:	mov	r3, #1
   1d1f0:	str	r3, [fp, #-24]	; 0xffffffe8
   1d1f4:	b	1d4d8 <handle_coda_error@@Base+0x1a20>
   1d1f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d1fc:	lsl	r3, r3, #2
   1d200:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d204:	add	r3, r2, r3
   1d208:	ldr	r3, [r3]
   1d20c:	ldr	r2, [pc, #1180]	; 1d6b0 <handle_coda_error@@Base+0x1bf8>
   1d210:	add	r2, pc, r2
   1d214:	mov	r1, r2
   1d218:	mov	r0, r3
   1d21c:	bl	12210 <strcmp@plt>
   1d220:	mov	r3, r0
   1d224:	cmp	r3, #0
   1d228:	beq	1d260 <handle_coda_error@@Base+0x17a8>
   1d22c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d230:	lsl	r3, r3, #2
   1d234:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d238:	add	r3, r2, r3
   1d23c:	ldr	r3, [r3]
   1d240:	ldr	r2, [pc, #1132]	; 1d6b4 <handle_coda_error@@Base+0x1bfc>
   1d244:	add	r2, pc, r2
   1d248:	mov	r1, r2
   1d24c:	mov	r0, r3
   1d250:	bl	12210 <strcmp@plt>
   1d254:	mov	r3, r0
   1d258:	cmp	r3, #0
   1d25c:	bne	1d26c <handle_coda_error@@Base+0x17b4>
   1d260:	mov	r3, #0
   1d264:	str	r3, [fp, #-20]	; 0xffffffec
   1d268:	b	1d4d8 <handle_coda_error@@Base+0x1a20>
   1d26c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d270:	lsl	r3, r3, #2
   1d274:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d278:	add	r3, r2, r3
   1d27c:	ldr	r3, [r3]
   1d280:	ldr	r2, [pc, #1072]	; 1d6b8 <handle_coda_error@@Base+0x1c00>
   1d284:	add	r2, pc, r2
   1d288:	mov	r1, r2
   1d28c:	mov	r0, r3
   1d290:	bl	12210 <strcmp@plt>
   1d294:	mov	r3, r0
   1d298:	cmp	r3, #0
   1d29c:	beq	1d2d4 <handle_coda_error@@Base+0x181c>
   1d2a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2a4:	lsl	r3, r3, #2
   1d2a8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d2ac:	add	r3, r2, r3
   1d2b0:	ldr	r3, [r3]
   1d2b4:	ldr	r2, [pc, #1024]	; 1d6bc <handle_coda_error@@Base+0x1c04>
   1d2b8:	add	r2, pc, r2
   1d2bc:	mov	r1, r2
   1d2c0:	mov	r0, r3
   1d2c4:	bl	12210 <strcmp@plt>
   1d2c8:	mov	r3, r0
   1d2cc:	cmp	r3, #0
   1d2d0:	bne	1d340 <handle_coda_error@@Base+0x1888>
   1d2d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2d8:	add	r2, r3, #1
   1d2dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d2e0:	cmp	r2, r3
   1d2e4:	bge	1d340 <handle_coda_error@@Base+0x1888>
   1d2e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d2ec:	add	r3, r3, #1
   1d2f0:	lsl	r3, r3, #2
   1d2f4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d2f8:	add	r3, r2, r3
   1d2fc:	ldr	r3, [r3]
   1d300:	ldrb	r3, [r3]
   1d304:	cmp	r3, #45	; 0x2d
   1d308:	beq	1d340 <handle_coda_error@@Base+0x1888>
   1d30c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d310:	add	r3, r3, #1
   1d314:	lsl	r3, r3, #2
   1d318:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d31c:	add	r3, r2, r3
   1d320:	ldr	r2, [r3]
   1d324:	ldr	r3, [pc, #876]	; 1d698 <handle_coda_error@@Base+0x1be0>
   1d328:	ldr	r3, [r4, r3]
   1d32c:	str	r2, [r3]
   1d330:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d334:	add	r3, r3, #1
   1d338:	str	r3, [fp, #-28]	; 0xffffffe4
   1d33c:	b	1d4d8 <handle_coda_error@@Base+0x1a20>
   1d340:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d344:	lsl	r3, r3, #2
   1d348:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d34c:	add	r3, r2, r3
   1d350:	ldr	r3, [r3]
   1d354:	ldr	r2, [pc, #868]	; 1d6c0 <handle_coda_error@@Base+0x1c08>
   1d358:	add	r2, pc, r2
   1d35c:	mov	r1, r2
   1d360:	mov	r0, r3
   1d364:	bl	12210 <strcmp@plt>
   1d368:	mov	r3, r0
   1d36c:	cmp	r3, #0
   1d370:	beq	1d3a8 <handle_coda_error@@Base+0x18f0>
   1d374:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d378:	lsl	r3, r3, #2
   1d37c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d380:	add	r3, r2, r3
   1d384:	ldr	r3, [r3]
   1d388:	ldr	r2, [pc, #820]	; 1d6c4 <handle_coda_error@@Base+0x1c0c>
   1d38c:	add	r2, pc, r2
   1d390:	mov	r1, r2
   1d394:	mov	r0, r3
   1d398:	bl	12210 <strcmp@plt>
   1d39c:	mov	r3, r0
   1d3a0:	cmp	r3, #0
   1d3a4:	bne	1d414 <handle_coda_error@@Base+0x195c>
   1d3a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3ac:	add	r2, r3, #1
   1d3b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d3b4:	cmp	r2, r3
   1d3b8:	bge	1d414 <handle_coda_error@@Base+0x195c>
   1d3bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3c0:	add	r3, r3, #1
   1d3c4:	lsl	r3, r3, #2
   1d3c8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d3cc:	add	r3, r2, r3
   1d3d0:	ldr	r3, [r3]
   1d3d4:	ldrb	r3, [r3]
   1d3d8:	cmp	r3, #45	; 0x2d
   1d3dc:	beq	1d414 <handle_coda_error@@Base+0x195c>
   1d3e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d3e4:	add	r3, r3, #1
   1d3e8:	lsl	r3, r3, #2
   1d3ec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d3f0:	add	r3, r2, r3
   1d3f4:	ldr	r2, [r3]
   1d3f8:	ldr	r3, [pc, #668]	; 1d69c <handle_coda_error@@Base+0x1be4>
   1d3fc:	ldr	r3, [r4, r3]
   1d400:	str	r2, [r3]
   1d404:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d408:	add	r3, r3, #1
   1d40c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d410:	b	1d4d8 <handle_coda_error@@Base+0x1a20>
   1d414:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d418:	lsl	r3, r3, #2
   1d41c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d420:	add	r3, r2, r3
   1d424:	ldr	r3, [r3]
   1d428:	ldr	r2, [pc, #664]	; 1d6c8 <handle_coda_error@@Base+0x1c10>
   1d42c:	add	r2, pc, r2
   1d430:	mov	r1, r2
   1d434:	mov	r0, r3
   1d438:	bl	12210 <strcmp@plt>
   1d43c:	mov	r3, r0
   1d440:	cmp	r3, #0
   1d444:	bne	1d454 <handle_coda_error@@Base+0x199c>
   1d448:	mov	r3, #0
   1d44c:	str	r3, [fp, #-16]
   1d450:	b	1d4d8 <handle_coda_error@@Base+0x1a20>
   1d454:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d458:	sub	r2, r3, #1
   1d45c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d460:	cmp	r2, r3
   1d464:	bne	1d4ac <handle_coda_error@@Base+0x19f4>
   1d468:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d46c:	lsl	r3, r3, #2
   1d470:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d474:	add	r3, r2, r3
   1d478:	ldr	r3, [r3]
   1d47c:	ldrb	r3, [r3]
   1d480:	cmp	r3, #45	; 0x2d
   1d484:	beq	1d4ac <handle_coda_error@@Base+0x19f4>
   1d488:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d48c:	lsl	r3, r3, #2
   1d490:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1d494:	add	r3, r2, r3
   1d498:	ldr	r2, [r3]
   1d49c:	ldr	r3, [pc, #496]	; 1d694 <handle_coda_error@@Base+0x1bdc>
   1d4a0:	ldr	r3, [r4, r3]
   1d4a4:	str	r2, [r3]
   1d4a8:	b	1d4d8 <handle_coda_error@@Base+0x1a20>
   1d4ac:	ldr	r3, [pc, #536]	; 1d6cc <handle_coda_error@@Base+0x1c14>
   1d4b0:	ldr	r3, [r4, r3]
   1d4b4:	ldr	r3, [r3]
   1d4b8:	mov	r2, #25
   1d4bc:	mov	r1, #1
   1d4c0:	ldr	r0, [pc, #520]	; 1d6d0 <handle_coda_error@@Base+0x1c18>
   1d4c4:	add	r0, pc, r0
   1d4c8:	bl	12378 <fwrite@plt>
   1d4cc:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1d4d0:	mov	r0, #1
   1d4d4:	bl	12414 <exit@plt>
   1d4d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d4dc:	add	r3, r3, #1
   1d4e0:	str	r3, [fp, #-28]	; 0xffffffe4
   1d4e4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d4e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d4ec:	cmp	r2, r3
   1d4f0:	blt	1d184 <handle_coda_error@@Base+0x16cc>
   1d4f4:	ldr	r3, [pc, #408]	; 1d694 <handle_coda_error@@Base+0x1bdc>
   1d4f8:	ldr	r3, [r4, r3]
   1d4fc:	ldr	r3, [r3]
   1d500:	cmp	r3, #0
   1d504:	beq	1d520 <handle_coda_error@@Base+0x1a68>
   1d508:	ldr	r3, [pc, #388]	; 1d694 <handle_coda_error@@Base+0x1bdc>
   1d50c:	ldr	r3, [r4, r3]
   1d510:	ldr	r3, [r3]
   1d514:	ldrb	r3, [r3]
   1d518:	cmp	r3, #0
   1d51c:	bne	1d54c <handle_coda_error@@Base+0x1a94>
   1d520:	ldr	r3, [pc, #420]	; 1d6cc <handle_coda_error@@Base+0x1c14>
   1d524:	ldr	r3, [r4, r3]
   1d528:	ldr	r3, [r3]
   1d52c:	mov	r2, #25
   1d530:	mov	r1, #1
   1d534:	ldr	r0, [pc, #408]	; 1d6d4 <handle_coda_error@@Base+0x1c1c>
   1d538:	add	r0, pc, r0
   1d53c:	bl	12378 <fwrite@plt>
   1d540:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1d544:	mov	r0, #1
   1d548:	bl	12414 <exit@plt>
   1d54c:	bl	12480 <coda_init@plt>
   1d550:	mov	r3, r0
   1d554:	cmp	r3, #0
   1d558:	beq	1d5a0 <handle_coda_error@@Base+0x1ae8>
   1d55c:	ldr	r3, [pc, #360]	; 1d6cc <handle_coda_error@@Base+0x1c14>
   1d560:	ldr	r3, [r4, r3]
   1d564:	ldr	r4, [r3]
   1d568:	bl	1260c <coda_get_errno@plt>
   1d56c:	mov	r3, r0
   1d570:	ldr	r3, [r3]
   1d574:	mov	r0, r3
   1d578:	bl	125c4 <coda_errno_to_string@plt>
   1d57c:	mov	r3, r0
   1d580:	mov	r2, r3
   1d584:	ldr	r3, [pc, #332]	; 1d6d8 <handle_coda_error@@Base+0x1c20>
   1d588:	add	r3, pc, r3
   1d58c:	mov	r1, r3
   1d590:	mov	r0, r4
   1d594:	bl	1245c <fprintf@plt>
   1d598:	mov	r0, #1
   1d59c:	bl	12414 <exit@plt>
   1d5a0:	ldr	r3, [fp, #-16]
   1d5a4:	cmp	r3, #0
   1d5a8:	moveq	r3, #1
   1d5ac:	movne	r3, #0
   1d5b0:	uxtb	r3, r3
   1d5b4:	mov	r0, r3
   1d5b8:	bl	122c4 <coda_set_option_bypass_special_types@plt>
   1d5bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d5c0:	bl	1248c <coda_set_option_perform_conversions@plt>
   1d5c4:	ldr	r3, [pc, #204]	; 1d698 <handle_coda_error@@Base+0x1be0>
   1d5c8:	ldr	r3, [r4, r3]
   1d5cc:	ldr	r3, [r3]
   1d5d0:	cmp	r3, #0
   1d5d4:	beq	1d650 <handle_coda_error@@Base+0x1b98>
   1d5d8:	ldr	r3, [pc, #184]	; 1d698 <handle_coda_error@@Base+0x1be0>
   1d5dc:	ldr	r3, [r4, r3]
   1d5e0:	ldr	r3, [r3]
   1d5e4:	ldr	r2, [pc, #240]	; 1d6dc <handle_coda_error@@Base+0x1c24>
   1d5e8:	add	r2, pc, r2
   1d5ec:	mov	r1, r2
   1d5f0:	mov	r0, r3
   1d5f4:	bl	12240 <fopen@plt>
   1d5f8:	mov	r2, r0
   1d5fc:	ldr	r3, [pc, #160]	; 1d6a4 <handle_coda_error@@Base+0x1bec>
   1d600:	ldr	r3, [r4, r3]
   1d604:	str	r2, [r3]
   1d608:	ldr	r3, [pc, #148]	; 1d6a4 <handle_coda_error@@Base+0x1bec>
   1d60c:	ldr	r3, [r4, r3]
   1d610:	ldr	r3, [r3]
   1d614:	cmp	r3, #0
   1d618:	bne	1d650 <handle_coda_error@@Base+0x1b98>
   1d61c:	ldr	r3, [pc, #168]	; 1d6cc <handle_coda_error@@Base+0x1c14>
   1d620:	ldr	r3, [r4, r3]
   1d624:	ldr	r0, [r3]
   1d628:	ldr	r3, [pc, #104]	; 1d698 <handle_coda_error@@Base+0x1be0>
   1d62c:	ldr	r3, [r4, r3]
   1d630:	ldr	r3, [r3]
   1d634:	mov	r2, r3
   1d638:	ldr	r3, [pc, #160]	; 1d6e0 <handle_coda_error@@Base+0x1c28>
   1d63c:	add	r3, pc, r3
   1d640:	mov	r1, r3
   1d644:	bl	1245c <fprintf@plt>
   1d648:	mov	r0, #1
   1d64c:	bl	12414 <exit@plt>
   1d650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d654:	bl	1b034 <print_yaml_data@@Base>
   1d658:	ldr	r3, [pc, #56]	; 1d698 <handle_coda_error@@Base+0x1be0>
   1d65c:	ldr	r3, [r4, r3]
   1d660:	ldr	r3, [r3]
   1d664:	cmp	r3, #0
   1d668:	beq	1d680 <handle_coda_error@@Base+0x1bc8>
   1d66c:	ldr	r3, [pc, #48]	; 1d6a4 <handle_coda_error@@Base+0x1bec>
   1d670:	ldr	r3, [r4, r3]
   1d674:	ldr	r3, [r3]
   1d678:	mov	r0, r3
   1d67c:	bl	12504 <fclose@plt>
   1d680:	bl	123a8 <coda_done@plt>
   1d684:	nop			; (mov r0, r0)
   1d688:	sub	sp, fp, #8
   1d68c:	pop	{r4, fp, pc}
   1d690:	andeq	r3, r1, r4, ror #29
   1d694:			; <UNDEFINED> instruction: 0x000001b4
   1d698:	andeq	r0, r0, r4, lsr #3
   1d69c:	ldrdeq	r0, [r0], -r8
   1d6a0:	ldrdeq	r0, [r0], -ip
   1d6a4:			; <UNDEFINED> instruction: 0x000001bc
   1d6a8:			; <UNDEFINED> instruction: 0x00002fb0
   1d6ac:	andeq	r2, r0, r0, lsl #31
   1d6b0:	andeq	r2, r0, r0, ror #27
   1d6b4:			; <UNDEFINED> instruction: 0x00002db0
   1d6b8:	andeq	r2, r0, r8, asr #28
   1d6bc:	andeq	r2, r0, r8, lsl lr
   1d6c0:	andeq	r2, r0, r8, lsl #28
   1d6c4:	ldrdeq	r2, [r0], -r8
   1d6c8:	andeq	r2, r0, r4, asr ip
   1d6cc:			; <UNDEFINED> instruction: 0x000001b8
   1d6d0:	ldrdeq	r2, [r0], -r0
   1d6d4:	andeq	r2, r0, ip, asr fp
   1d6d8:	andeq	r2, r0, ip, asr #20
   1d6dc:	andeq	r2, r0, r4, lsr fp
   1d6e0:	andeq	r2, r0, r4, ror #21
   1d6e4:	push	{r4, fp, lr}
   1d6e8:	add	fp, sp, #8
   1d6ec:	sub	sp, sp, #36	; 0x24
   1d6f0:	str	r0, [fp, #-40]	; 0xffffffd8
   1d6f4:	str	r1, [fp, #-44]	; 0xffffffd4
   1d6f8:	ldr	r4, [pc, #1676]	; 1dd8c <handle_coda_error@@Base+0x22d4>
   1d6fc:	add	r4, pc, r4
   1d700:	mov	r3, #0
   1d704:	str	r3, [fp, #-16]
   1d708:	mov	r3, #0
   1d70c:	str	r3, [fp, #-20]	; 0xffffffec
   1d710:	mov	r3, #0
   1d714:	str	r3, [fp, #-24]	; 0xffffffe8
   1d718:	ldr	r3, [pc, #1648]	; 1dd90 <handle_coda_error@@Base+0x22d8>
   1d71c:	ldr	r3, [r4, r3]
   1d720:	mov	r2, #0
   1d724:	str	r2, [r3]
   1d728:	ldr	r3, [pc, #1636]	; 1dd94 <handle_coda_error@@Base+0x22dc>
   1d72c:	ldr	r3, [r4, r3]
   1d730:	mov	r2, #0
   1d734:	str	r2, [r3]
   1d738:	ldr	r3, [pc, #1624]	; 1dd98 <handle_coda_error@@Base+0x22e0>
   1d73c:	ldr	r3, [r4, r3]
   1d740:	mov	r2, #0
   1d744:	str	r2, [r3]
   1d748:	ldr	r3, [pc, #1612]	; 1dd9c <handle_coda_error@@Base+0x22e4>
   1d74c:	ldr	r3, [r4, r3]
   1d750:	ldr	r2, [r3]
   1d754:	ldr	r3, [pc, #1604]	; 1dda0 <handle_coda_error@@Base+0x22e8>
   1d758:	ldr	r3, [r4, r3]
   1d75c:	str	r2, [r3]
   1d760:	mov	r3, #1
   1d764:	str	r3, [fp, #-28]	; 0xffffffe4
   1d768:	mov	r3, #0
   1d76c:	str	r3, [fp, #-32]	; 0xffffffe0
   1d770:	b	1dbec <handle_coda_error@@Base+0x2134>
   1d774:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d778:	lsl	r3, r3, #2
   1d77c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d780:	add	r3, r2, r3
   1d784:	ldr	r3, [r3]
   1d788:	ldr	r2, [pc, #1556]	; 1dda4 <handle_coda_error@@Base+0x22ec>
   1d78c:	add	r2, pc, r2
   1d790:	mov	r1, r2
   1d794:	mov	r0, r3
   1d798:	bl	12210 <strcmp@plt>
   1d79c:	mov	r3, r0
   1d7a0:	cmp	r3, #0
   1d7a4:	beq	1d7dc <handle_coda_error@@Base+0x1d24>
   1d7a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d7ac:	lsl	r3, r3, #2
   1d7b0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d7b4:	add	r3, r2, r3
   1d7b8:	ldr	r3, [r3]
   1d7bc:	ldr	r2, [pc, #1508]	; 1dda8 <handle_coda_error@@Base+0x22f0>
   1d7c0:	add	r2, pc, r2
   1d7c4:	mov	r1, r2
   1d7c8:	mov	r0, r3
   1d7cc:	bl	12210 <strcmp@plt>
   1d7d0:	mov	r3, r0
   1d7d4:	cmp	r3, #0
   1d7d8:	bne	1d7e8 <handle_coda_error@@Base+0x1d30>
   1d7dc:	mov	r3, #0
   1d7e0:	str	r3, [fp, #-28]	; 0xffffffe4
   1d7e4:	b	1dbe0 <handle_coda_error@@Base+0x2128>
   1d7e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d7ec:	lsl	r3, r3, #2
   1d7f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d7f4:	add	r3, r2, r3
   1d7f8:	ldr	r3, [r3]
   1d7fc:	ldr	r2, [pc, #1448]	; 1ddac <handle_coda_error@@Base+0x22f4>
   1d800:	add	r2, pc, r2
   1d804:	mov	r1, r2
   1d808:	mov	r0, r3
   1d80c:	bl	12210 <strcmp@plt>
   1d810:	mov	r3, r0
   1d814:	cmp	r3, #0
   1d818:	beq	1d850 <handle_coda_error@@Base+0x1d98>
   1d81c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d820:	lsl	r3, r3, #2
   1d824:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d828:	add	r3, r2, r3
   1d82c:	ldr	r3, [r3]
   1d830:	ldr	r2, [pc, #1400]	; 1ddb0 <handle_coda_error@@Base+0x22f8>
   1d834:	add	r2, pc, r2
   1d838:	mov	r1, r2
   1d83c:	mov	r0, r3
   1d840:	bl	12210 <strcmp@plt>
   1d844:	mov	r3, r0
   1d848:	cmp	r3, #0
   1d84c:	bne	1d8bc <handle_coda_error@@Base+0x1e04>
   1d850:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d854:	add	r2, r3, #1
   1d858:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d85c:	cmp	r2, r3
   1d860:	bge	1d8bc <handle_coda_error@@Base+0x1e04>
   1d864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d868:	add	r3, r3, #1
   1d86c:	lsl	r3, r3, #2
   1d870:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d874:	add	r3, r2, r3
   1d878:	ldr	r3, [r3]
   1d87c:	ldrb	r3, [r3]
   1d880:	cmp	r3, #45	; 0x2d
   1d884:	beq	1d8bc <handle_coda_error@@Base+0x1e04>
   1d888:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d88c:	add	r3, r3, #1
   1d890:	lsl	r3, r3, #2
   1d894:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d898:	add	r3, r2, r3
   1d89c:	ldr	r2, [r3]
   1d8a0:	ldr	r3, [pc, #1260]	; 1dd94 <handle_coda_error@@Base+0x22dc>
   1d8a4:	ldr	r3, [r4, r3]
   1d8a8:	str	r2, [r3]
   1d8ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d8b0:	add	r3, r3, #1
   1d8b4:	str	r3, [fp, #-32]	; 0xffffffe0
   1d8b8:	b	1dbe0 <handle_coda_error@@Base+0x2128>
   1d8bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d8c0:	lsl	r3, r3, #2
   1d8c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d8c8:	add	r3, r2, r3
   1d8cc:	ldr	r3, [r3]
   1d8d0:	ldr	r2, [pc, #1244]	; 1ddb4 <handle_coda_error@@Base+0x22fc>
   1d8d4:	add	r2, pc, r2
   1d8d8:	mov	r1, r2
   1d8dc:	mov	r0, r3
   1d8e0:	bl	12210 <strcmp@plt>
   1d8e4:	mov	r3, r0
   1d8e8:	cmp	r3, #0
   1d8ec:	beq	1d924 <handle_coda_error@@Base+0x1e6c>
   1d8f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d8f4:	lsl	r3, r3, #2
   1d8f8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d8fc:	add	r3, r2, r3
   1d900:	ldr	r3, [r3]
   1d904:	ldr	r2, [pc, #1196]	; 1ddb8 <handle_coda_error@@Base+0x2300>
   1d908:	add	r2, pc, r2
   1d90c:	mov	r1, r2
   1d910:	mov	r0, r3
   1d914:	bl	12210 <strcmp@plt>
   1d918:	mov	r3, r0
   1d91c:	cmp	r3, #0
   1d920:	bne	1d990 <handle_coda_error@@Base+0x1ed8>
   1d924:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d928:	add	r2, r3, #1
   1d92c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d930:	cmp	r2, r3
   1d934:	bge	1d990 <handle_coda_error@@Base+0x1ed8>
   1d938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d93c:	add	r3, r3, #1
   1d940:	lsl	r3, r3, #2
   1d944:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d948:	add	r3, r2, r3
   1d94c:	ldr	r3, [r3]
   1d950:	ldrb	r3, [r3]
   1d954:	cmp	r3, #45	; 0x2d
   1d958:	beq	1d990 <handle_coda_error@@Base+0x1ed8>
   1d95c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d960:	add	r3, r3, #1
   1d964:	lsl	r3, r3, #2
   1d968:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d96c:	add	r3, r2, r3
   1d970:	ldr	r2, [r3]
   1d974:	ldr	r3, [pc, #1052]	; 1dd98 <handle_coda_error@@Base+0x22e0>
   1d978:	ldr	r3, [r4, r3]
   1d97c:	str	r2, [r3]
   1d980:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d984:	add	r3, r3, #1
   1d988:	str	r3, [fp, #-32]	; 0xffffffe0
   1d98c:	b	1dbe0 <handle_coda_error@@Base+0x2128>
   1d990:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d994:	lsl	r3, r3, #2
   1d998:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d99c:	add	r3, r2, r3
   1d9a0:	ldr	r3, [r3]
   1d9a4:	ldr	r2, [pc, #1040]	; 1ddbc <handle_coda_error@@Base+0x2304>
   1d9a8:	add	r2, pc, r2
   1d9ac:	mov	r1, r2
   1d9b0:	mov	r0, r3
   1d9b4:	bl	12210 <strcmp@plt>
   1d9b8:	mov	r3, r0
   1d9bc:	cmp	r3, #0
   1d9c0:	bne	1da3c <handle_coda_error@@Base+0x1f84>
   1d9c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9c8:	add	r2, r3, #1
   1d9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d9d0:	cmp	r2, r3
   1d9d4:	bge	1da3c <handle_coda_error@@Base+0x1f84>
   1d9d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9dc:	add	r3, r3, #1
   1d9e0:	lsl	r3, r3, #2
   1d9e4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1d9e8:	add	r3, r2, r3
   1d9ec:	ldr	r3, [r3]
   1d9f0:	ldrb	r3, [r3]
   1d9f4:	cmp	r3, #45	; 0x2d
   1d9f8:	beq	1da3c <handle_coda_error@@Base+0x1f84>
   1d9fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da00:	add	r3, r3, #1
   1da04:	lsl	r3, r3, #2
   1da08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1da0c:	add	r3, r2, r3
   1da10:	ldr	r3, [r3]
   1da14:	mov	r0, r3
   1da18:	bl	125b8 <atoi@plt>
   1da1c:	mov	r2, r0
   1da20:	ldr	r3, [pc, #920]	; 1ddc0 <handle_coda_error@@Base+0x2308>
   1da24:	ldr	r3, [r4, r3]
   1da28:	str	r2, [r3]
   1da2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da30:	add	r3, r3, #1
   1da34:	str	r3, [fp, #-32]	; 0xffffffe0
   1da38:	b	1dbe0 <handle_coda_error@@Base+0x2128>
   1da3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da40:	lsl	r3, r3, #2
   1da44:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1da48:	add	r3, r2, r3
   1da4c:	ldr	r3, [r3]
   1da50:	ldr	r2, [pc, #876]	; 1ddc4 <handle_coda_error@@Base+0x230c>
   1da54:	add	r2, pc, r2
   1da58:	mov	r1, r2
   1da5c:	mov	r0, r3
   1da60:	bl	12210 <strcmp@plt>
   1da64:	mov	r3, r0
   1da68:	cmp	r3, #0
   1da6c:	bne	1db5c <handle_coda_error@@Base+0x20a4>
   1da70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da74:	add	r2, r3, #3
   1da78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1da7c:	cmp	r2, r3
   1da80:	bge	1db5c <handle_coda_error@@Base+0x20a4>
   1da84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da88:	add	r3, r3, #1
   1da8c:	lsl	r3, r3, #2
   1da90:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1da94:	add	r3, r2, r3
   1da98:	ldr	r3, [r3]
   1da9c:	ldrb	r3, [r3]
   1daa0:	cmp	r3, #45	; 0x2d
   1daa4:	beq	1db5c <handle_coda_error@@Base+0x20a4>
   1daa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1daac:	add	r3, r3, #2
   1dab0:	lsl	r3, r3, #2
   1dab4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dab8:	add	r3, r2, r3
   1dabc:	ldr	r3, [r3]
   1dac0:	ldrb	r3, [r3]
   1dac4:	cmp	r3, #45	; 0x2d
   1dac8:	beq	1db5c <handle_coda_error@@Base+0x20a4>
   1dacc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dad0:	add	r3, r3, #3
   1dad4:	lsl	r3, r3, #2
   1dad8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1dadc:	add	r3, r2, r3
   1dae0:	ldr	r3, [r3]
   1dae4:	ldrb	r3, [r3]
   1dae8:	cmp	r3, #45	; 0x2d
   1daec:	beq	1db5c <handle_coda_error@@Base+0x20a4>
   1daf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1daf4:	add	r3, r3, #1
   1daf8:	lsl	r3, r3, #2
   1dafc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db00:	add	r3, r2, r3
   1db04:	ldr	r3, [r3]
   1db08:	str	r3, [fp, #-16]
   1db0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db10:	add	r3, r3, #2
   1db14:	lsl	r3, r3, #2
   1db18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db1c:	add	r3, r2, r3
   1db20:	ldr	r3, [r3]
   1db24:	str	r3, [fp, #-20]	; 0xffffffec
   1db28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db2c:	add	r3, r3, #3
   1db30:	lsl	r3, r3, #2
   1db34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db38:	add	r3, r2, r3
   1db3c:	ldr	r3, [r3]
   1db40:	mov	r0, r3
   1db44:	bl	125b8 <atoi@plt>
   1db48:	str	r0, [fp, #-24]	; 0xffffffe8
   1db4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db50:	add	r3, r3, #3
   1db54:	str	r3, [fp, #-32]	; 0xffffffe0
   1db58:	b	1dbe0 <handle_coda_error@@Base+0x2128>
   1db5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1db60:	sub	r2, r3, #1
   1db64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db68:	cmp	r2, r3
   1db6c:	bne	1dbb4 <handle_coda_error@@Base+0x20fc>
   1db70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db74:	lsl	r3, r3, #2
   1db78:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db7c:	add	r3, r2, r3
   1db80:	ldr	r3, [r3]
   1db84:	ldrb	r3, [r3]
   1db88:	cmp	r3, #45	; 0x2d
   1db8c:	beq	1dbb4 <handle_coda_error@@Base+0x20fc>
   1db90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1db94:	lsl	r3, r3, #2
   1db98:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1db9c:	add	r3, r2, r3
   1dba0:	ldr	r2, [r3]
   1dba4:	ldr	r3, [pc, #484]	; 1dd90 <handle_coda_error@@Base+0x22d8>
   1dba8:	ldr	r3, [r4, r3]
   1dbac:	str	r2, [r3]
   1dbb0:	b	1dbe0 <handle_coda_error@@Base+0x2128>
   1dbb4:	ldr	r3, [pc, #524]	; 1ddc8 <handle_coda_error@@Base+0x2310>
   1dbb8:	ldr	r3, [r4, r3]
   1dbbc:	ldr	r3, [r3]
   1dbc0:	mov	r2, #25
   1dbc4:	mov	r1, #1
   1dbc8:	ldr	r0, [pc, #508]	; 1ddcc <handle_coda_error@@Base+0x2314>
   1dbcc:	add	r0, pc, r0
   1dbd0:	bl	12378 <fwrite@plt>
   1dbd4:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1dbd8:	mov	r0, #1
   1dbdc:	bl	12414 <exit@plt>
   1dbe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dbe4:	add	r3, r3, #1
   1dbe8:	str	r3, [fp, #-32]	; 0xffffffe0
   1dbec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dbf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dbf4:	cmp	r2, r3
   1dbf8:	blt	1d774 <handle_coda_error@@Base+0x1cbc>
   1dbfc:	ldr	r3, [pc, #396]	; 1dd90 <handle_coda_error@@Base+0x22d8>
   1dc00:	ldr	r3, [r4, r3]
   1dc04:	ldr	r3, [r3]
   1dc08:	cmp	r3, #0
   1dc0c:	beq	1dc28 <handle_coda_error@@Base+0x2170>
   1dc10:	ldr	r3, [pc, #376]	; 1dd90 <handle_coda_error@@Base+0x22d8>
   1dc14:	ldr	r3, [r4, r3]
   1dc18:	ldr	r3, [r3]
   1dc1c:	ldrb	r3, [r3]
   1dc20:	cmp	r3, #0
   1dc24:	bne	1dc54 <handle_coda_error@@Base+0x219c>
   1dc28:	ldr	r3, [pc, #408]	; 1ddc8 <handle_coda_error@@Base+0x2310>
   1dc2c:	ldr	r3, [r4, r3]
   1dc30:	ldr	r3, [r3]
   1dc34:	mov	r2, #25
   1dc38:	mov	r1, #1
   1dc3c:	ldr	r0, [pc, #396]	; 1ddd0 <handle_coda_error@@Base+0x2318>
   1dc40:	add	r0, pc, r0
   1dc44:	bl	12378 <fwrite@plt>
   1dc48:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1dc4c:	mov	r0, #1
   1dc50:	bl	12414 <exit@plt>
   1dc54:	bl	12480 <coda_init@plt>
   1dc58:	mov	r3, r0
   1dc5c:	cmp	r3, #0
   1dc60:	beq	1dca8 <handle_coda_error@@Base+0x21f0>
   1dc64:	ldr	r3, [pc, #348]	; 1ddc8 <handle_coda_error@@Base+0x2310>
   1dc68:	ldr	r3, [r4, r3]
   1dc6c:	ldr	r4, [r3]
   1dc70:	bl	1260c <coda_get_errno@plt>
   1dc74:	mov	r3, r0
   1dc78:	ldr	r3, [r3]
   1dc7c:	mov	r0, r3
   1dc80:	bl	125c4 <coda_errno_to_string@plt>
   1dc84:	mov	r3, r0
   1dc88:	mov	r2, r3
   1dc8c:	ldr	r3, [pc, #320]	; 1ddd4 <handle_coda_error@@Base+0x231c>
   1dc90:	add	r3, pc, r3
   1dc94:	mov	r1, r3
   1dc98:	mov	r0, r4
   1dc9c:	bl	1245c <fprintf@plt>
   1dca0:	mov	r0, #1
   1dca4:	bl	12414 <exit@plt>
   1dca8:	mov	r0, #0
   1dcac:	bl	1248c <coda_set_option_perform_conversions@plt>
   1dcb0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dcb4:	bl	121e0 <coda_set_option_use_fast_size_expressions@plt>
   1dcb8:	ldr	r3, [pc, #212]	; 1dd94 <handle_coda_error@@Base+0x22dc>
   1dcbc:	ldr	r3, [r4, r3]
   1dcc0:	ldr	r3, [r3]
   1dcc4:	cmp	r3, #0
   1dcc8:	beq	1dd44 <handle_coda_error@@Base+0x228c>
   1dccc:	ldr	r3, [pc, #192]	; 1dd94 <handle_coda_error@@Base+0x22dc>
   1dcd0:	ldr	r3, [r4, r3]
   1dcd4:	ldr	r3, [r3]
   1dcd8:	ldr	r2, [pc, #248]	; 1ddd8 <handle_coda_error@@Base+0x2320>
   1dcdc:	add	r2, pc, r2
   1dce0:	mov	r1, r2
   1dce4:	mov	r0, r3
   1dce8:	bl	12240 <fopen@plt>
   1dcec:	mov	r2, r0
   1dcf0:	ldr	r3, [pc, #168]	; 1dda0 <handle_coda_error@@Base+0x22e8>
   1dcf4:	ldr	r3, [r4, r3]
   1dcf8:	str	r2, [r3]
   1dcfc:	ldr	r3, [pc, #156]	; 1dda0 <handle_coda_error@@Base+0x22e8>
   1dd00:	ldr	r3, [r4, r3]
   1dd04:	ldr	r3, [r3]
   1dd08:	cmp	r3, #0
   1dd0c:	bne	1dd44 <handle_coda_error@@Base+0x228c>
   1dd10:	ldr	r3, [pc, #176]	; 1ddc8 <handle_coda_error@@Base+0x2310>
   1dd14:	ldr	r3, [r4, r3]
   1dd18:	ldr	r0, [r3]
   1dd1c:	ldr	r3, [pc, #112]	; 1dd94 <handle_coda_error@@Base+0x22dc>
   1dd20:	ldr	r3, [r4, r3]
   1dd24:	ldr	r3, [r3]
   1dd28:	mov	r2, r3
   1dd2c:	ldr	r3, [pc, #168]	; 1dddc <handle_coda_error@@Base+0x2324>
   1dd30:	add	r3, pc, r3
   1dd34:	mov	r1, r3
   1dd38:	bl	1245c <fprintf@plt>
   1dd3c:	mov	r0, #1
   1dd40:	bl	12414 <exit@plt>
   1dd44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dd48:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dd4c:	ldr	r0, [fp, #-16]
   1dd50:	bl	14da8 <print_debug_data@@Base>
   1dd54:	ldr	r3, [pc, #56]	; 1dd94 <handle_coda_error@@Base+0x22dc>
   1dd58:	ldr	r3, [r4, r3]
   1dd5c:	ldr	r3, [r3]
   1dd60:	cmp	r3, #0
   1dd64:	beq	1dd7c <handle_coda_error@@Base+0x22c4>
   1dd68:	ldr	r3, [pc, #48]	; 1dda0 <handle_coda_error@@Base+0x22e8>
   1dd6c:	ldr	r3, [r4, r3]
   1dd70:	ldr	r3, [r3]
   1dd74:	mov	r0, r3
   1dd78:	bl	12504 <fclose@plt>
   1dd7c:	bl	123a8 <coda_done@plt>
   1dd80:	nop			; (mov r0, r0)
   1dd84:	sub	sp, fp, #8
   1dd88:	pop	{r4, fp, pc}
   1dd8c:	strdeq	r3, [r1], -ip
   1dd90:			; <UNDEFINED> instruction: 0x000001b4
   1dd94:	andeq	r0, r0, r4, lsr #3
   1dd98:	ldrdeq	r0, [r0], -r8
   1dd9c:	ldrdeq	r0, [r0], -ip
   1dda0:			; <UNDEFINED> instruction: 0x000001bc
   1dda4:	andeq	r2, r0, r4, ror #16
   1dda8:	andeq	r2, r0, ip, lsr #19
   1ddac:	andeq	r2, r0, ip, asr #17
   1ddb0:	muleq	r0, ip, r8
   1ddb4:	andeq	r2, r0, ip, lsl #17
   1ddb8:	andeq	r2, r0, ip, asr r8
   1ddbc:	andeq	r2, r0, r4, ror #15
   1ddc0:	andeq	r0, r0, r0, ror #3
   1ddc4:	andeq	r2, r0, r4, asr #14
   1ddc8:			; <UNDEFINED> instruction: 0x000001b8
   1ddcc:	andeq	r2, r0, r8, asr #9
   1ddd0:	andeq	r2, r0, r4, asr r4
   1ddd4:	andeq	r2, r0, r4, asr #6
   1ddd8:	andeq	r2, r0, r0, asr #8
   1dddc:	strdeq	r2, [r0], -r0

0001dde0 <main@@Base>:
   1dde0:	push	{r4, fp, lr}
   1dde4:	add	fp, sp, #8
   1dde8:	sub	sp, sp, #20
   1ddec:	str	r0, [fp, #-24]	; 0xffffffe8
   1ddf0:	str	r1, [fp, #-28]	; 0xffffffe4
   1ddf4:	ldr	r4, [pc, #1116]	; 1e258 <main@@Base+0x478>
   1ddf8:	add	r4, pc, r4
   1ddfc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1de00:	cmp	r3, #1
   1de04:	beq	1de60 <main@@Base+0x80>
   1de08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de0c:	add	r3, r3, #4
   1de10:	ldr	r3, [r3]
   1de14:	ldr	r2, [pc, #1088]	; 1e25c <main@@Base+0x47c>
   1de18:	add	r2, pc, r2
   1de1c:	mov	r1, r2
   1de20:	mov	r0, r3
   1de24:	bl	12210 <strcmp@plt>
   1de28:	mov	r3, r0
   1de2c:	cmp	r3, #0
   1de30:	beq	1de60 <main@@Base+0x80>
   1de34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de38:	add	r3, r3, #4
   1de3c:	ldr	r3, [r3]
   1de40:	ldr	r2, [pc, #1048]	; 1e260 <main@@Base+0x480>
   1de44:	add	r2, pc, r2
   1de48:	mov	r1, r2
   1de4c:	mov	r0, r3
   1de50:	bl	12210 <strcmp@plt>
   1de54:	mov	r3, r0
   1de58:	cmp	r3, #0
   1de5c:	bne	1de6c <main@@Base+0x8c>
   1de60:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1de64:	mov	r0, #0
   1de68:	bl	12414 <exit@plt>
   1de6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de70:	add	r3, r3, #4
   1de74:	ldr	r3, [r3]
   1de78:	ldr	r2, [pc, #996]	; 1e264 <main@@Base+0x484>
   1de7c:	add	r2, pc, r2
   1de80:	mov	r1, r2
   1de84:	mov	r0, r3
   1de88:	bl	12210 <strcmp@plt>
   1de8c:	mov	r3, r0
   1de90:	cmp	r3, #0
   1de94:	beq	1dec4 <main@@Base+0xe4>
   1de98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de9c:	add	r3, r3, #4
   1dea0:	ldr	r3, [r3]
   1dea4:	ldr	r2, [pc, #956]	; 1e268 <main@@Base+0x488>
   1dea8:	add	r2, pc, r2
   1deac:	mov	r1, r2
   1deb0:	mov	r0, r3
   1deb4:	bl	12210 <strcmp@plt>
   1deb8:	mov	r3, r0
   1debc:	cmp	r3, #0
   1dec0:	bne	1ded0 <main@@Base+0xf0>
   1dec4:	bl	1b184 <print_yaml_data@@Base+0x150>
   1dec8:	mov	r0, #0
   1decc:	bl	12414 <exit@plt>
   1ded0:	mov	r3, #1
   1ded4:	str	r3, [fp, #-16]
   1ded8:	ldr	r3, [fp, #-16]
   1dedc:	add	r2, r3, #1
   1dee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dee4:	cmp	r2, r3
   1dee8:	bge	1df50 <main@@Base+0x170>
   1deec:	ldr	r3, [fp, #-16]
   1def0:	lsl	r3, r3, #2
   1def4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1def8:	add	r3, r2, r3
   1defc:	ldr	r3, [r3]
   1df00:	ldr	r2, [pc, #868]	; 1e26c <main@@Base+0x48c>
   1df04:	add	r2, pc, r2
   1df08:	mov	r1, r2
   1df0c:	mov	r0, r3
   1df10:	bl	12210 <strcmp@plt>
   1df14:	mov	r3, r0
   1df18:	cmp	r3, #0
   1df1c:	bne	1df50 <main@@Base+0x170>
   1df20:	ldr	r3, [fp, #-16]
   1df24:	add	r3, r3, #1
   1df28:	lsl	r3, r3, #2
   1df2c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1df30:	add	r3, r2, r3
   1df34:	ldr	r3, [r3]
   1df38:	mov	r0, r3
   1df3c:	bl	12330 <coda_set_definition_path@plt>
   1df40:	ldr	r3, [fp, #-16]
   1df44:	add	r3, r3, #2
   1df48:	str	r3, [fp, #-16]
   1df4c:	b	1dfc4 <main@@Base+0x1e4>
   1df50:	ldr	r3, [pc, #792]	; 1e270 <main@@Base+0x490>
   1df54:	add	r3, pc, r3
   1df58:	str	r3, [fp, #-20]	; 0xffffffec
   1df5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1df60:	ldr	r3, [r3]
   1df64:	ldr	r2, [fp, #-20]	; 0xffffffec
   1df68:	mov	r1, #0
   1df6c:	mov	r0, r3
   1df70:	bl	122ac <coda_set_definition_path_conditional@plt>
   1df74:	mov	r3, r0
   1df78:	cmp	r3, #0
   1df7c:	beq	1dfc4 <main@@Base+0x1e4>
   1df80:	ldr	r3, [pc, #748]	; 1e274 <main@@Base+0x494>
   1df84:	ldr	r3, [r4, r3]
   1df88:	ldr	r4, [r3]
   1df8c:	bl	1260c <coda_get_errno@plt>
   1df90:	mov	r3, r0
   1df94:	ldr	r3, [r3]
   1df98:	mov	r0, r3
   1df9c:	bl	125c4 <coda_errno_to_string@plt>
   1dfa0:	mov	r3, r0
   1dfa4:	mov	r2, r3
   1dfa8:	ldr	r3, [pc, #712]	; 1e278 <main@@Base+0x498>
   1dfac:	add	r3, pc, r3
   1dfb0:	mov	r1, r3
   1dfb4:	mov	r0, r4
   1dfb8:	bl	1245c <fprintf@plt>
   1dfbc:	mov	r0, #1
   1dfc0:	bl	12414 <exit@plt>
   1dfc4:	ldr	r3, [fp, #-16]
   1dfc8:	lsl	r3, r3, #2
   1dfcc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1dfd0:	add	r3, r2, r3
   1dfd4:	ldr	r3, [r3]
   1dfd8:	ldr	r2, [pc, #668]	; 1e27c <main@@Base+0x49c>
   1dfdc:	add	r2, pc, r2
   1dfe0:	mov	r1, r2
   1dfe4:	mov	r0, r3
   1dfe8:	bl	12210 <strcmp@plt>
   1dfec:	mov	r3, r0
   1dff0:	cmp	r3, #0
   1dff4:	bne	1e03c <main@@Base+0x25c>
   1dff8:	ldr	r3, [pc, #640]	; 1e280 <main@@Base+0x4a0>
   1dffc:	ldr	r3, [r4, r3]
   1e000:	mov	r2, #0
   1e004:	str	r2, [r3]
   1e008:	ldr	r3, [fp, #-16]
   1e00c:	add	r3, r3, #1
   1e010:	str	r3, [fp, #-16]
   1e014:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e018:	ldr	r3, [fp, #-16]
   1e01c:	sub	r0, r2, r3
   1e020:	ldr	r3, [fp, #-16]
   1e024:	lsl	r3, r3, #2
   1e028:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e02c:	add	r3, r2, r3
   1e030:	mov	r1, r3
   1e034:	bl	1bb2c <handle_coda_error@@Base+0x74>
   1e038:	b	1e248 <main@@Base+0x468>
   1e03c:	ldr	r3, [fp, #-16]
   1e040:	lsl	r3, r3, #2
   1e044:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e048:	add	r3, r2, r3
   1e04c:	ldr	r3, [r3]
   1e050:	ldr	r2, [pc, #556]	; 1e284 <main@@Base+0x4a4>
   1e054:	add	r2, pc, r2
   1e058:	mov	r1, r2
   1e05c:	mov	r0, r3
   1e060:	bl	12210 <strcmp@plt>
   1e064:	mov	r3, r0
   1e068:	cmp	r3, #0
   1e06c:	bne	1e0b4 <main@@Base+0x2d4>
   1e070:	ldr	r3, [pc, #520]	; 1e280 <main@@Base+0x4a0>
   1e074:	ldr	r3, [r4, r3]
   1e078:	mov	r2, #1
   1e07c:	str	r2, [r3]
   1e080:	ldr	r3, [fp, #-16]
   1e084:	add	r3, r3, #1
   1e088:	str	r3, [fp, #-16]
   1e08c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e090:	ldr	r3, [fp, #-16]
   1e094:	sub	r0, r2, r3
   1e098:	ldr	r3, [fp, #-16]
   1e09c:	lsl	r3, r3, #2
   1e0a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e0a4:	add	r3, r2, r3
   1e0a8:	mov	r1, r3
   1e0ac:	bl	1c1d0 <handle_coda_error@@Base+0x718>
   1e0b0:	b	1e248 <main@@Base+0x468>
   1e0b4:	ldr	r3, [fp, #-16]
   1e0b8:	lsl	r3, r3, #2
   1e0bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e0c0:	add	r3, r2, r3
   1e0c4:	ldr	r3, [r3]
   1e0c8:	ldr	r2, [pc, #440]	; 1e288 <main@@Base+0x4a8>
   1e0cc:	add	r2, pc, r2
   1e0d0:	mov	r1, r2
   1e0d4:	mov	r0, r3
   1e0d8:	bl	12210 <strcmp@plt>
   1e0dc:	mov	r3, r0
   1e0e0:	cmp	r3, #0
   1e0e4:	bne	1e12c <main@@Base+0x34c>
   1e0e8:	ldr	r3, [pc, #400]	; 1e280 <main@@Base+0x4a0>
   1e0ec:	ldr	r3, [r4, r3]
   1e0f0:	mov	r2, #3
   1e0f4:	str	r2, [r3]
   1e0f8:	ldr	r3, [fp, #-16]
   1e0fc:	add	r3, r3, #1
   1e100:	str	r3, [fp, #-16]
   1e104:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e108:	ldr	r3, [fp, #-16]
   1e10c:	sub	r0, r2, r3
   1e110:	ldr	r3, [fp, #-16]
   1e114:	lsl	r3, r3, #2
   1e118:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e11c:	add	r3, r2, r3
   1e120:	mov	r1, r3
   1e124:	bl	1cb14 <handle_coda_error@@Base+0x105c>
   1e128:	b	1e248 <main@@Base+0x468>
   1e12c:	ldr	r3, [fp, #-16]
   1e130:	lsl	r3, r3, #2
   1e134:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e138:	add	r3, r2, r3
   1e13c:	ldr	r3, [r3]
   1e140:	ldr	r2, [pc, #324]	; 1e28c <main@@Base+0x4ac>
   1e144:	add	r2, pc, r2
   1e148:	mov	r1, r2
   1e14c:	mov	r0, r3
   1e150:	bl	12210 <strcmp@plt>
   1e154:	mov	r3, r0
   1e158:	cmp	r3, #0
   1e15c:	bne	1e1a4 <main@@Base+0x3c4>
   1e160:	ldr	r3, [pc, #280]	; 1e280 <main@@Base+0x4a0>
   1e164:	ldr	r3, [r4, r3]
   1e168:	mov	r2, #4
   1e16c:	str	r2, [r3]
   1e170:	ldr	r3, [fp, #-16]
   1e174:	add	r3, r3, #1
   1e178:	str	r3, [fp, #-16]
   1e17c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e180:	ldr	r3, [fp, #-16]
   1e184:	sub	r0, r2, r3
   1e188:	ldr	r3, [fp, #-16]
   1e18c:	lsl	r3, r3, #2
   1e190:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e194:	add	r3, r2, r3
   1e198:	mov	r1, r3
   1e19c:	bl	1d0fc <handle_coda_error@@Base+0x1644>
   1e1a0:	b	1e248 <main@@Base+0x468>
   1e1a4:	ldr	r3, [fp, #-16]
   1e1a8:	lsl	r3, r3, #2
   1e1ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e1b0:	add	r3, r2, r3
   1e1b4:	ldr	r3, [r3]
   1e1b8:	ldr	r2, [pc, #208]	; 1e290 <main@@Base+0x4b0>
   1e1bc:	add	r2, pc, r2
   1e1c0:	mov	r1, r2
   1e1c4:	mov	r0, r3
   1e1c8:	bl	12210 <strcmp@plt>
   1e1cc:	mov	r3, r0
   1e1d0:	cmp	r3, #0
   1e1d4:	bne	1e21c <main@@Base+0x43c>
   1e1d8:	ldr	r3, [pc, #160]	; 1e280 <main@@Base+0x4a0>
   1e1dc:	ldr	r3, [r4, r3]
   1e1e0:	mov	r2, #5
   1e1e4:	str	r2, [r3]
   1e1e8:	ldr	r3, [fp, #-16]
   1e1ec:	add	r3, r3, #1
   1e1f0:	str	r3, [fp, #-16]
   1e1f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e1f8:	ldr	r3, [fp, #-16]
   1e1fc:	sub	r0, r2, r3
   1e200:	ldr	r3, [fp, #-16]
   1e204:	lsl	r3, r3, #2
   1e208:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e20c:	add	r3, r2, r3
   1e210:	mov	r1, r3
   1e214:	bl	1d6e4 <handle_coda_error@@Base+0x1c2c>
   1e218:	b	1e248 <main@@Base+0x468>
   1e21c:	ldr	r3, [pc, #80]	; 1e274 <main@@Base+0x494>
   1e220:	ldr	r3, [r4, r3]
   1e224:	ldr	r3, [r3]
   1e228:	mov	r2, #25
   1e22c:	mov	r1, #1
   1e230:	ldr	r0, [pc, #92]	; 1e294 <main@@Base+0x4b4>
   1e234:	add	r0, pc, r0
   1e238:	bl	12378 <fwrite@plt>
   1e23c:	bl	1b1d0 <print_yaml_data@@Base+0x19c>
   1e240:	mov	r0, #1
   1e244:	bl	12414 <exit@plt>
   1e248:	mov	r3, #0
   1e24c:	mov	r0, r3
   1e250:	sub	sp, fp, #8
   1e254:	pop	{r4, fp, pc}
   1e258:	andeq	r3, r1, r0, lsl #4
   1e25c:	andeq	r2, r0, ip, lsl #7
   1e260:	andeq	r2, r0, r4, ror #6
   1e264:	andeq	r2, r0, r4, lsr r3
   1e268:	andeq	r2, r0, ip, lsl #6
   1e26c:			; <UNDEFINED> instruction: 0x000022bc
   1e270:	andeq	r2, r0, r0, ror r2
   1e274:			; <UNDEFINED> instruction: 0x000001b8
   1e278:	andeq	r2, r0, r8, lsr #32
   1e27c:	andeq	r2, r0, r4, lsl #4
   1e280:	ldrdeq	r0, [r0], -r4
   1e284:	muleq	r0, r4, r1
   1e288:	andeq	r2, r0, r4, lsr #2
   1e28c:	strheq	r2, [r0], -r4
   1e290:	andeq	r2, r0, r4, asr #32
   1e294:	andeq	r1, r0, r0, ror #28
   1e298:	cmp	r3, #0
   1e29c:	cmpeq	r2, #0
   1e2a0:	bne	1e2c4 <main@@Base+0x4e4>
   1e2a4:	cmp	r1, #0
   1e2a8:	movlt	r1, #-2147483648	; 0x80000000
   1e2ac:	movlt	r0, #0
   1e2b0:	blt	1e2c0 <main@@Base+0x4e0>
   1e2b4:	cmpeq	r0, #0
   1e2b8:	mvnne	r1, #-2147483648	; 0x80000000
   1e2bc:	mvnne	r0, #0
   1e2c0:	b	1e36c <main@@Base+0x58c>
   1e2c4:	sub	sp, sp, #8
   1e2c8:	push	{sp, lr}
   1e2cc:	cmp	r1, #0
   1e2d0:	blt	1e2f0 <main@@Base+0x510>
   1e2d4:	cmp	r3, #0
   1e2d8:	blt	1e324 <main@@Base+0x544>
   1e2dc:	bl	1e37c <main@@Base+0x59c>
   1e2e0:	ldr	lr, [sp, #4]
   1e2e4:	add	sp, sp, #8
   1e2e8:	pop	{r2, r3}
   1e2ec:	bx	lr
   1e2f0:	rsbs	r0, r0, #0
   1e2f4:	sbc	r1, r1, r1, lsl #1
   1e2f8:	cmp	r3, #0
   1e2fc:	blt	1e348 <main@@Base+0x568>
   1e300:	bl	1e37c <main@@Base+0x59c>
   1e304:	ldr	lr, [sp, #4]
   1e308:	add	sp, sp, #8
   1e30c:	pop	{r2, r3}
   1e310:	rsbs	r0, r0, #0
   1e314:	sbc	r1, r1, r1, lsl #1
   1e318:	rsbs	r2, r2, #0
   1e31c:	sbc	r3, r3, r3, lsl #1
   1e320:	bx	lr
   1e324:	rsbs	r2, r2, #0
   1e328:	sbc	r3, r3, r3, lsl #1
   1e32c:	bl	1e37c <main@@Base+0x59c>
   1e330:	ldr	lr, [sp, #4]
   1e334:	add	sp, sp, #8
   1e338:	pop	{r2, r3}
   1e33c:	rsbs	r0, r0, #0
   1e340:	sbc	r1, r1, r1, lsl #1
   1e344:	bx	lr
   1e348:	rsbs	r2, r2, #0
   1e34c:	sbc	r3, r3, r3, lsl #1
   1e350:	bl	1e37c <main@@Base+0x59c>
   1e354:	ldr	lr, [sp, #4]
   1e358:	add	sp, sp, #8
   1e35c:	pop	{r2, r3}
   1e360:	rsbs	r2, r2, #0
   1e364:	sbc	r3, r3, r3, lsl #1
   1e368:	bx	lr
   1e36c:	push	{r1, lr}
   1e370:	mov	r0, #8
   1e374:	bl	121ec <raise@plt>
   1e378:	pop	{r1, pc}
   1e37c:	cmp	r1, r3
   1e380:	push	{r4, r5, r6, r7, r8, r9, lr}
   1e384:	cmpeq	r0, r2
   1e388:	mov	r4, r0
   1e38c:	mov	r5, r1
   1e390:	ldr	r9, [sp, #28]
   1e394:	movcc	r0, #0
   1e398:	movcc	r1, #0
   1e39c:	bcc	1e494 <main@@Base+0x6b4>
   1e3a0:	cmp	r3, #0
   1e3a4:	clzeq	ip, r2
   1e3a8:	clzne	ip, r3
   1e3ac:	addeq	ip, ip, #32
   1e3b0:	cmp	r5, #0
   1e3b4:	clzeq	r1, r4
   1e3b8:	addeq	r1, r1, #32
   1e3bc:	clzne	r1, r5
   1e3c0:	sub	ip, ip, r1
   1e3c4:	sub	lr, ip, #32
   1e3c8:	lsl	r7, r3, ip
   1e3cc:	rsb	r8, ip, #32
   1e3d0:	orr	r7, r7, r2, lsl lr
   1e3d4:	orr	r7, r7, r2, lsr r8
   1e3d8:	lsl	r6, r2, ip
   1e3dc:	cmp	r5, r7
   1e3e0:	cmpeq	r4, r6
   1e3e4:	movcc	r0, #0
   1e3e8:	movcc	r1, #0
   1e3ec:	bcc	1e408 <main@@Base+0x628>
   1e3f0:	mov	r3, #1
   1e3f4:	subs	r4, r4, r6
   1e3f8:	lsl	r1, r3, lr
   1e3fc:	lsl	r0, r3, ip
   1e400:	orr	r1, r1, r3, lsr r8
   1e404:	sbc	r5, r5, r7
   1e408:	cmp	ip, #0
   1e40c:	beq	1e494 <main@@Base+0x6b4>
   1e410:	lsrs	r3, r7, #1
   1e414:	rrx	r2, r6
   1e418:	mov	r6, ip
   1e41c:	b	1e440 <main@@Base+0x660>
   1e420:	subs	r4, r4, r2
   1e424:	sbc	r5, r5, r3
   1e428:	adds	r4, r4, r4
   1e42c:	adc	r5, r5, r5
   1e430:	adds	r4, r4, #1
   1e434:	adc	r5, r5, #0
   1e438:	subs	r6, r6, #1
   1e43c:	beq	1e45c <main@@Base+0x67c>
   1e440:	cmp	r5, r3
   1e444:	cmpeq	r4, r2
   1e448:	bcs	1e420 <main@@Base+0x640>
   1e44c:	adds	r4, r4, r4
   1e450:	adc	r5, r5, r5
   1e454:	subs	r6, r6, #1
   1e458:	bne	1e440 <main@@Base+0x660>
   1e45c:	lsr	r6, r4, ip
   1e460:	lsr	r7, r5, ip
   1e464:	orr	r6, r6, r5, lsl r8
   1e468:	adds	r2, r0, r4
   1e46c:	orr	r6, r6, r5, lsr lr
   1e470:	adc	r3, r1, r5
   1e474:	lsl	r1, r7, ip
   1e478:	orr	r1, r1, r6, lsl lr
   1e47c:	lsl	r0, r6, ip
   1e480:	orr	r1, r1, r6, lsr r8
   1e484:	subs	r0, r2, r0
   1e488:	mov	r4, r6
   1e48c:	mov	r5, r7
   1e490:	sbc	r1, r3, r1
   1e494:	cmp	r9, #0
   1e498:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   1e49c:	strd	r4, [r9]
   1e4a0:	pop	{r4, r5, r6, r7, r8, r9, pc}

0001e4a4 <__libc_csu_init@@Base>:
   1e4a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e4a8:	mov	r7, r0
   1e4ac:	ldr	r6, [pc, #72]	; 1e4fc <__libc_csu_init@@Base+0x58>
   1e4b0:	ldr	r5, [pc, #72]	; 1e500 <__libc_csu_init@@Base+0x5c>
   1e4b4:	add	r6, pc, r6
   1e4b8:	add	r5, pc, r5
   1e4bc:	sub	r6, r6, r5
   1e4c0:	mov	r8, r1
   1e4c4:	mov	r9, r2
   1e4c8:	bl	121a8 <coda_cursor_get_byte_size@plt-0x20>
   1e4cc:	asrs	r6, r6, #2
   1e4d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e4d4:	mov	r4, #0
   1e4d8:	add	r4, r4, #1
   1e4dc:	ldr	r3, [r5], #4
   1e4e0:	mov	r2, r9
   1e4e4:	mov	r1, r8
   1e4e8:	mov	r0, r7
   1e4ec:	blx	r3
   1e4f0:	cmp	r6, r4
   1e4f4:	bne	1e4d8 <__libc_csu_init@@Base+0x34>
   1e4f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e4fc:	andeq	r2, r1, ip, lsr sl
   1e500:	andeq	r2, r1, r4, lsr sl

0001e504 <__libc_csu_fini@@Base>:
   1e504:	bx	lr

Disassembly of section .fini:

0001e508 <.fini>:
   1e508:	push	{r3, lr}
   1e50c:	pop	{r3, pc}
