
../repos/sgerbino-table-2fdd8d0/bin/table_version_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r4, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #20, 20	; 0x14000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #20, 20	; 0x14000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #20, 20	; 0x14000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #20, 20	; 0x14000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #20, 20	; 0x14000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #20, 20	; 0x14000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #20, 20	; 0x14000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #20, 20	; 0x14000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #20, 20	; 0x14000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #20, 20	; 0x14000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #20, 20	; 0x14000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #20, 20	; 0x14000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r5, r1, r4, lsr #7
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r5, r1, r4, asr #6
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r6, r2, r8, asr #32
   11fa4:	andeq	r6, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r6, r2, r8, asr #32
   11fdc:	andeq	r6, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r6, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{fp, lr}
   12014:	mov	fp, sp
   12018:	bl	12734 <table_get_major_version@@Base>
   1201c:	mov	r1, r0
   12020:	ldr	r0, [pc, #72]	; 12070 <main@@Base+0x60>
   12024:	add	r0, pc, r0
   12028:	bl	11e9c <printf@plt>
   1202c:	bl	1273c <table_get_minor_version@@Base>
   12030:	mov	r1, r0
   12034:	ldr	r0, [pc, #56]	; 12074 <main@@Base+0x64>
   12038:	add	r0, pc, r0
   1203c:	bl	11e9c <printf@plt>
   12040:	bl	12744 <table_get_patch_version@@Base>
   12044:	mov	r1, r0
   12048:	ldr	r0, [pc, #40]	; 12078 <main@@Base+0x68>
   1204c:	add	r0, pc, r0
   12050:	bl	11e9c <printf@plt>
   12054:	bl	1274c <table_get_version@@Base>
   12058:	mov	r1, r0
   1205c:	ldr	r0, [pc, #24]	; 1207c <main@@Base+0x6c>
   12060:	add	r0, pc, r0
   12064:	bl	11e9c <printf@plt>
   12068:	mov	r0, #0
   1206c:	pop	{fp, pc}
   12070:	andeq	r3, r0, r8, lsl #7
   12074:	andeq	r3, r0, sp, lsl #7
   12078:	muleq	r0, r2, r3
   1207c:	muleq	r0, r7, r3

00012080 <table_new@@Base>:
   12080:	push	{fp, lr}
   12084:	mov	fp, sp
   12088:	mov	r0, #56	; 0x38
   1208c:	bl	11ecc <malloc@plt>
   12090:	mov	r1, #0
   12094:	mov	r2, #10
   12098:	mov	r3, #20
   1209c:	vmov.i32	q8, #0	; 0x00000000
   120a0:	str	r1, [r0]
   120a4:	stmib	r0, {r1, r2}
   120a8:	str	r1, [r0, #12]
   120ac:	str	r1, [r0, #16]
   120b0:	str	r1, [r0, #20]
   120b4:	str	r3, [r0, #24]
   120b8:	str	r1, [r0, #28]
   120bc:	str	r2, [r0, #48]	; 0x30
   120c0:	str	r1, [r0, #52]	; 0x34
   120c4:	add	r1, r0, #32
   120c8:	vst1.32	{d16-d17}, [r1]
   120cc:	pop	{fp, pc}

000120d0 <table_init@@Base>:
   120d0:	mov	r1, #0
   120d4:	mov	r2, #10
   120d8:	mov	r3, #20
   120dc:	vmov.i32	q8, #0	; 0x00000000
   120e0:	str	r1, [r0]
   120e4:	stmib	r0, {r1, r2}
   120e8:	str	r1, [r0, #12]
   120ec:	str	r1, [r0, #16]
   120f0:	str	r1, [r0, #20]
   120f4:	str	r3, [r0, #24]
   120f8:	str	r1, [r0, #28]
   120fc:	str	r2, [r0, #48]	; 0x30
   12100:	str	r1, [r0, #52]	; 0x34
   12104:	add	r0, r0, #32
   12108:	vst1.32	{d16-d17}, [r0]
   1210c:	bx	lr

00012110 <table_delete@@Base>:
   12110:	push	{r4, sl, fp, lr}
   12114:	add	fp, sp, #8
   12118:	mov	r4, r0
   1211c:	bl	1212c <table_destroy@@Base>
   12120:	mov	r0, r4
   12124:	pop	{r4, sl, fp, lr}
   12128:	b	11ea8 <free@plt>

0001212c <table_destroy@@Base>:
   1212c:	cmp	r0, #0
   12130:	bxeq	lr
   12134:	push	{r4, r5, r6, sl, fp, lr}
   12138:	add	fp, sp, #16
   1213c:	mvn	r1, #0
   12140:	mvn	r2, #0
   12144:	mov	r3, #64	; 0x40
   12148:	mov	r4, r0
   1214c:	bl	129c8 <table_notify@@Base>
   12150:	mov	r0, r4
   12154:	bl	137e0 <table_get_row_length@@Base>
   12158:	cmp	r0, #1
   1215c:	blt	12180 <table_destroy@@Base+0x54>
   12160:	mov	r5, r0
   12164:	mov	r6, #0
   12168:	mov	r0, r4
   1216c:	mov	r1, r6
   12170:	bl	13788 <table_row_destroy@@Base>
   12174:	add	r6, r6, #1
   12178:	cmp	r5, r6
   1217c:	bne	12168 <table_destroy@@Base+0x3c>
   12180:	ldr	r0, [r4, #16]
   12184:	cmp	r0, #0
   12188:	beq	12190 <table_destroy@@Base+0x64>
   1218c:	bl	11ea8 <free@plt>
   12190:	mov	r0, r4
   12194:	bl	12abc <table_get_column_length@@Base>
   12198:	cmp	r0, #1
   1219c:	blt	121c0 <table_destroy@@Base+0x94>
   121a0:	mov	r5, r0
   121a4:	mov	r6, #0
   121a8:	mov	r0, r4
   121ac:	mov	r1, r6
   121b0:	bl	12aa4 <table_column_destroy@@Base>
   121b4:	add	r6, r6, #1
   121b8:	cmp	r5, r6
   121bc:	bne	121a8 <table_destroy@@Base+0x7c>
   121c0:	ldr	r0, [r4]
   121c4:	cmp	r0, #0
   121c8:	beq	121d0 <table_destroy@@Base+0xa4>
   121cc:	bl	11ea8 <free@plt>
   121d0:	ldr	r0, [r4, #36]	; 0x24
   121d4:	cmp	r0, #0
   121d8:	beq	121e0 <table_destroy@@Base+0xb4>
   121dc:	bl	11ea8 <free@plt>
   121e0:	ldr	r0, [r4, #40]	; 0x28
   121e4:	cmp	r0, #0
   121e8:	beq	121f0 <table_destroy@@Base+0xc4>
   121ec:	bl	11ea8 <free@plt>
   121f0:	ldr	r0, [r4, #44]	; 0x2c
   121f4:	cmp	r0, #0
   121f8:	pop	{r4, r5, r6, sl, fp, lr}
   121fc:	beq	12204 <table_destroy@@Base+0xd8>
   12200:	b	11ea8 <free@plt>
   12204:	bx	lr

00012208 <table_dupe@@Base>:
   12208:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1220c:	add	fp, sp, #28
   12210:	sub	sp, sp, #12
   12214:	mov	r4, r0
   12218:	bl	137e0 <table_get_row_length@@Base>
   1221c:	mov	r8, r0
   12220:	mov	r0, r4
   12224:	bl	12abc <table_get_column_length@@Base>
   12228:	mov	r6, r0
   1222c:	mov	r0, #56	; 0x38
   12230:	bl	11ecc <malloc@plt>
   12234:	mov	sl, r0
   12238:	mov	r5, #0
   1223c:	mov	r0, #10
   12240:	mov	r1, #20
   12244:	cmp	r6, #1
   12248:	vmov.i32	q8, #0	; 0x00000000
   1224c:	str	r5, [sl]
   12250:	str	r5, [sl, #4]
   12254:	str	r0, [sl, #8]
   12258:	str	r5, [sl, #12]
   1225c:	str	r5, [sl, #16]
   12260:	str	r5, [sl, #20]
   12264:	str	r1, [sl, #24]
   12268:	str	r5, [sl, #28]
   1226c:	str	r0, [sl, #48]	; 0x30
   12270:	add	r0, sl, #32
   12274:	str	r5, [sl, #52]	; 0x34
   12278:	vst1.32	{d16-d17}, [r0]
   1227c:	blt	122b8 <table_dupe@@Base+0xb0>
   12280:	mov	r0, r4
   12284:	mov	r1, r5
   12288:	bl	12b20 <table_get_column_name@@Base>
   1228c:	mov	r7, r0
   12290:	mov	r0, r4
   12294:	mov	r1, r5
   12298:	bl	12b30 <table_get_column_data_type@@Base>
   1229c:	mov	r2, r0
   122a0:	mov	r0, sl
   122a4:	mov	r1, r7
   122a8:	bl	12b44 <table_add_column@@Base>
   122ac:	add	r5, r5, #1
   122b0:	cmp	r6, r5
   122b4:	bne	12280 <table_dupe@@Base+0x78>
   122b8:	cmp	r8, #1
   122bc:	blt	12728 <table_dupe@@Base+0x520>
   122c0:	mov	r5, #0
   122c4:	add	r9, sp, #8
   122c8:	mov	r0, sl
   122cc:	bl	137e8 <table_add_row@@Base>
   122d0:	cmp	r6, #1
   122d4:	blt	1271c <table_dupe@@Base+0x514>
   122d8:	mov	r7, #0
   122dc:	mov	r0, r4
   122e0:	mov	r1, r7
   122e4:	bl	12b30 <table_get_column_data_type@@Base>
   122e8:	cmp	r0, #23
   122ec:	bhi	12710 <table_dupe@@Base+0x508>
   122f0:	add	r1, pc, #4
   122f4:	ldr	r0, [r1, r0, lsl #2]
   122f8:	add	pc, r1, r0
   122fc:	andeq	r0, r0, r0, rrx
   12300:	andeq	r0, r0, r8, lsl #1
   12304:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12308:	ldrdeq	r0, [r0], -r8
   1230c:	andeq	r0, r0, r0, lsl #2
   12310:	andeq	r0, r0, r8, lsr #2
   12314:	andeq	r0, r0, r0, asr r1
   12318:	andeq	r0, r0, r8, ror r1
   1231c:	andeq	r0, r0, r0, lsr #3
   12320:	andeq	r0, r0, r8, asr #3
   12324:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12328:	andeq	r0, r0, r8, lsl r2
   1232c:	andeq	r0, r0, r0, asr #4
   12330:	andeq	r0, r0, r8, ror #4
   12334:	muleq	r0, r0, r2
   12338:			; <UNDEFINED> instruction: 0x000002b8
   1233c:	andeq	r0, r0, r0, ror #5
   12340:	andeq	r0, r0, r4, lsl #6
   12344:	andeq	r0, r0, r8, lsr #6
   12348:	andeq	r0, r0, ip, asr #6
   1234c:	andeq	r0, r0, r4, ror r3
   12350:	muleq	r0, ip, r3
   12354:	andeq	r0, r0, r4, asr #7
   12358:	andeq	r0, r0, ip, ror #7
   1235c:	mov	r0, r4
   12360:	mov	r1, r5
   12364:	mov	r2, r7
   12368:	bl	13538 <table_get_int@@Base>
   1236c:	mov	r3, r0
   12370:	mov	r0, sl
   12374:	mov	r1, r5
   12378:	mov	r2, r7
   1237c:	bl	13d44 <table_set_int@@Base>
   12380:	b	12710 <table_dupe@@Base+0x508>
   12384:	mov	r0, r4
   12388:	mov	r1, r5
   1238c:	mov	r2, r7
   12390:	bl	13550 <table_get_uint@@Base>
   12394:	mov	r3, r0
   12398:	mov	r0, sl
   1239c:	mov	r1, r5
   123a0:	mov	r2, r7
   123a4:	bl	13dc4 <table_set_uint@@Base>
   123a8:	b	12710 <table_dupe@@Base+0x508>
   123ac:	mov	r0, r4
   123b0:	mov	r1, r5
   123b4:	mov	r2, r7
   123b8:	bl	13568 <table_get_int8@@Base>
   123bc:	mov	r3, r0
   123c0:	mov	r0, sl
   123c4:	mov	r1, r5
   123c8:	mov	r2, r7
   123cc:	bl	13e44 <table_set_int8@@Base>
   123d0:	b	12710 <table_dupe@@Base+0x508>
   123d4:	mov	r0, r4
   123d8:	mov	r1, r5
   123dc:	mov	r2, r7
   123e0:	bl	13580 <table_get_uint8@@Base>
   123e4:	mov	r3, r0
   123e8:	mov	r0, sl
   123ec:	mov	r1, r5
   123f0:	mov	r2, r7
   123f4:	bl	13ec4 <table_set_uint8@@Base>
   123f8:	b	12710 <table_dupe@@Base+0x508>
   123fc:	mov	r0, r4
   12400:	mov	r1, r5
   12404:	mov	r2, r7
   12408:	bl	13598 <table_get_int16@@Base>
   1240c:	mov	r3, r0
   12410:	mov	r0, sl
   12414:	mov	r1, r5
   12418:	mov	r2, r7
   1241c:	bl	13f44 <table_set_int16@@Base>
   12420:	b	12710 <table_dupe@@Base+0x508>
   12424:	mov	r0, r4
   12428:	mov	r1, r5
   1242c:	mov	r2, r7
   12430:	bl	135b0 <table_get_uint16@@Base>
   12434:	mov	r3, r0
   12438:	mov	r0, sl
   1243c:	mov	r1, r5
   12440:	mov	r2, r7
   12444:	bl	13fc4 <table_set_uint16@@Base>
   12448:	b	12710 <table_dupe@@Base+0x508>
   1244c:	mov	r0, r4
   12450:	mov	r1, r5
   12454:	mov	r2, r7
   12458:	bl	135c8 <table_get_int32@@Base>
   1245c:	mov	r3, r0
   12460:	mov	r0, sl
   12464:	mov	r1, r5
   12468:	mov	r2, r7
   1246c:	bl	14044 <table_set_int32@@Base>
   12470:	b	12710 <table_dupe@@Base+0x508>
   12474:	mov	r0, r4
   12478:	mov	r1, r5
   1247c:	mov	r2, r7
   12480:	bl	135e0 <table_get_uint32@@Base>
   12484:	mov	r3, r0
   12488:	mov	r0, sl
   1248c:	mov	r1, r5
   12490:	mov	r2, r7
   12494:	bl	140c4 <table_set_uint32@@Base>
   12498:	b	12710 <table_dupe@@Base+0x508>
   1249c:	mov	r0, r4
   124a0:	mov	r1, r5
   124a4:	mov	r2, r7
   124a8:	bl	135f8 <table_get_int64@@Base>
   124ac:	stm	sp, {r0, r1}
   124b0:	mov	r0, sl
   124b4:	mov	r1, r5
   124b8:	mov	r2, r7
   124bc:	bl	14144 <table_set_int64@@Base>
   124c0:	b	12710 <table_dupe@@Base+0x508>
   124c4:	mov	r0, r4
   124c8:	mov	r1, r5
   124cc:	mov	r2, r7
   124d0:	bl	13610 <table_get_uint64@@Base>
   124d4:	stm	sp, {r0, r1}
   124d8:	mov	r0, sl
   124dc:	mov	r1, r5
   124e0:	mov	r2, r7
   124e4:	bl	141cc <table_set_uint64@@Base>
   124e8:	b	12710 <table_dupe@@Base+0x508>
   124ec:	mov	r0, r4
   124f0:	mov	r1, r5
   124f4:	mov	r2, r7
   124f8:	bl	13628 <table_get_short@@Base>
   124fc:	mov	r3, r0
   12500:	mov	r0, sl
   12504:	mov	r1, r5
   12508:	mov	r2, r7
   1250c:	bl	14254 <table_set_short@@Base>
   12510:	b	12710 <table_dupe@@Base+0x508>
   12514:	mov	r0, r4
   12518:	mov	r1, r5
   1251c:	mov	r2, r7
   12520:	bl	13640 <table_get_ushort@@Base>
   12524:	mov	r3, r0
   12528:	mov	r0, sl
   1252c:	mov	r1, r5
   12530:	mov	r2, r7
   12534:	bl	142d4 <table_set_ushort@@Base>
   12538:	b	12710 <table_dupe@@Base+0x508>
   1253c:	mov	r0, r4
   12540:	mov	r1, r5
   12544:	mov	r2, r7
   12548:	bl	13658 <table_get_long@@Base>
   1254c:	mov	r3, r0
   12550:	mov	r0, sl
   12554:	mov	r1, r5
   12558:	mov	r2, r7
   1255c:	bl	14354 <table_set_long@@Base>
   12560:	b	12710 <table_dupe@@Base+0x508>
   12564:	mov	r0, r4
   12568:	mov	r1, r5
   1256c:	mov	r2, r7
   12570:	bl	13670 <table_get_ulong@@Base>
   12574:	mov	r3, r0
   12578:	mov	r0, sl
   1257c:	mov	r1, r5
   12580:	mov	r2, r7
   12584:	bl	143d4 <table_set_ulong@@Base>
   12588:	b	12710 <table_dupe@@Base+0x508>
   1258c:	mov	r0, r4
   12590:	mov	r1, r5
   12594:	mov	r2, r7
   12598:	bl	13688 <table_get_llong@@Base>
   1259c:	stm	sp, {r0, r1}
   125a0:	mov	r0, sl
   125a4:	mov	r1, r5
   125a8:	mov	r2, r7
   125ac:	bl	14454 <table_set_llong@@Base>
   125b0:	b	12710 <table_dupe@@Base+0x508>
   125b4:	mov	r0, r4
   125b8:	mov	r1, r5
   125bc:	mov	r2, r7
   125c0:	bl	136a0 <table_get_ullong@@Base>
   125c4:	stm	sp, {r0, r1}
   125c8:	mov	r0, sl
   125cc:	mov	r1, r5
   125d0:	mov	r2, r7
   125d4:	bl	144dc <table_set_ullong@@Base>
   125d8:	b	12710 <table_dupe@@Base+0x508>
   125dc:	mov	r0, r4
   125e0:	mov	r1, r5
   125e4:	mov	r2, r7
   125e8:	bl	136b8 <table_get_float@@Base>
   125ec:	mov	r0, sl
   125f0:	mov	r1, r5
   125f4:	mov	r2, r7
   125f8:	bl	14564 <table_set_float@@Base>
   125fc:	b	12710 <table_dupe@@Base+0x508>
   12600:	mov	r0, r4
   12604:	mov	r1, r5
   12608:	mov	r2, r7
   1260c:	bl	136d0 <table_get_double@@Base>
   12610:	mov	r0, sl
   12614:	mov	r1, r5
   12618:	mov	r2, r7
   1261c:	bl	145f0 <table_set_double@@Base>
   12620:	b	12710 <table_dupe@@Base+0x508>
   12624:	mov	r0, r4
   12628:	mov	r1, r5
   1262c:	mov	r2, r7
   12630:	bl	136e8 <table_get_ldouble@@Base>
   12634:	mov	r0, sl
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	14678 <table_set_ldouble@@Base>
   12644:	b	12710 <table_dupe@@Base+0x508>
   12648:	mov	r0, r4
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	13700 <table_get_char@@Base>
   12658:	mov	r3, r0
   1265c:	mov	r0, sl
   12660:	mov	r1, r5
   12664:	mov	r2, r7
   12668:	bl	14720 <table_set_char@@Base>
   1266c:	b	12710 <table_dupe@@Base+0x508>
   12670:	mov	r0, r4
   12674:	mov	r1, r5
   12678:	mov	r2, r7
   1267c:	bl	13718 <table_get_uchar@@Base>
   12680:	mov	r3, r0
   12684:	mov	r0, sl
   12688:	mov	r1, r5
   1268c:	mov	r2, r7
   12690:	bl	147a0 <table_set_uchar@@Base>
   12694:	b	12710 <table_dupe@@Base+0x508>
   12698:	mov	r0, r4
   1269c:	mov	r1, r5
   126a0:	mov	r2, r7
   126a4:	bl	13730 <table_get_string@@Base>
   126a8:	mov	r3, r0
   126ac:	mov	r0, sl
   126b0:	mov	r1, r5
   126b4:	mov	r2, r7
   126b8:	bl	14700 <table_set_string@@Base>
   126bc:	b	12710 <table_dupe@@Base+0x508>
   126c0:	mov	r0, r4
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	13520 <table_get_bool@@Base>
   126d0:	mov	r3, r0
   126d4:	mov	r0, sl
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	13cc4 <table_set_bool@@Base>
   126e4:	b	12710 <table_dupe@@Base+0x508>
   126e8:	mov	r0, r4
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	bl	13744 <table_get_ptr@@Base>
   126f8:	str	r0, [sp, #8]
   126fc:	mov	r0, sl
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	mov	r3, r9
   1270c:	bl	14820 <table_set_ptr@@Base>
   12710:	add	r7, r7, #1
   12714:	cmp	r6, r7
   12718:	bne	122dc <table_dupe@@Base+0xd4>
   1271c:	add	r5, r5, #1
   12720:	cmp	r5, r8
   12724:	bne	122c8 <table_dupe@@Base+0xc0>
   12728:	mov	r0, sl
   1272c:	sub	sp, fp, #28
   12730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012734 <table_get_major_version@@Base>:
   12734:	mov	r0, #0
   12738:	bx	lr

0001273c <table_get_minor_version@@Base>:
   1273c:	mov	r0, #0
   12740:	bx	lr

00012744 <table_get_patch_version@@Base>:
   12744:	mov	r0, #0
   12748:	bx	lr

0001274c <table_get_version@@Base>:
   1274c:	ldr	r0, [pc, #4]	; 12758 <table_get_version@@Base+0xc>
   12750:	add	r0, pc, r0
   12754:	bx	lr
   12758:	andeq	r2, r0, r6, lsr #25

0001275c <table_get_callback_length@@Base>:
   1275c:	ldr	r0, [r0, #32]
   12760:	bx	lr

00012764 <table_register_callback@@Base>:
   12764:	push	{r4, r5, r6, r7, fp, lr}
   12768:	add	fp, sp, #16
   1276c:	mov	r5, r0
   12770:	ldr	r0, [r0, #32]
   12774:	mov	r4, r3
   12778:	mov	r6, r2
   1277c:	mov	r7, r1
   12780:	cmp	r0, #1
   12784:	blt	127b8 <table_register_callback@@Base+0x54>
   12788:	ldr	r2, [r5, #36]	; 0x24
   1278c:	mov	r1, #0
   12790:	ldr	r3, [r2, r1, lsl #2]
   12794:	cmp	r3, r7
   12798:	bne	127ac <table_register_callback@@Base+0x48>
   1279c:	ldr	r3, [r5, #40]	; 0x28
   127a0:	ldr	r3, [r3, r1, lsl #2]
   127a4:	cmp	r3, r6
   127a8:	beq	1283c <table_register_callback@@Base+0xd8>
   127ac:	add	r1, r1, #1
   127b0:	cmp	r1, r0
   127b4:	blt	12790 <table_register_callback@@Base+0x2c>
   127b8:	ldr	r1, [r5, #48]	; 0x30
   127bc:	udiv	r2, r0, r1
   127c0:	mls	r2, r2, r1, r0
   127c4:	cmp	r2, #0
   127c8:	bne	12814 <table_register_callback@@Base+0xb0>
   127cc:	ldr	r2, [r5, #52]	; 0x34
   127d0:	ldr	r0, [r5, #36]	; 0x24
   127d4:	add	r1, r2, r1
   127d8:	str	r1, [r5, #52]	; 0x34
   127dc:	lsl	r1, r1, #2
   127e0:	bl	11eb4 <realloc@plt>
   127e4:	str	r0, [r5, #36]	; 0x24
   127e8:	ldr	r1, [r5, #52]	; 0x34
   127ec:	ldr	r0, [r5, #40]	; 0x28
   127f0:	lsl	r1, r1, #2
   127f4:	bl	11eb4 <realloc@plt>
   127f8:	str	r0, [r5, #40]	; 0x28
   127fc:	ldr	r1, [r5, #52]	; 0x34
   12800:	ldr	r0, [r5, #44]	; 0x2c
   12804:	lsl	r1, r1, #2
   12808:	bl	11eb4 <realloc@plt>
   1280c:	str	r0, [r5, #44]	; 0x2c
   12810:	ldr	r0, [r5, #32]
   12814:	ldr	r1, [r5, #36]	; 0x24
   12818:	str	r7, [r1, r0, lsl #2]
   1281c:	ldr	r1, [r5, #40]	; 0x28
   12820:	str	r6, [r1, r0, lsl #2]
   12824:	ldr	r1, [r5, #44]	; 0x2c
   12828:	str	r4, [r1, r0, lsl #2]
   1282c:	ldr	r0, [r5, #32]
   12830:	add	r0, r0, #1
   12834:	str	r0, [r5, #32]
   12838:	pop	{r4, r5, r6, r7, fp, pc}
   1283c:	cmp	r1, #0
   12840:	ldrne	r0, [r5, #44]	; 0x2c
   12844:	ldrne	r2, [r0, r1, lsl #2]
   12848:	orrne	r2, r2, r4
   1284c:	strne	r2, [r0, r1, lsl #2]
   12850:	popne	{r4, r5, r6, r7, fp, pc}
   12854:	b	127b8 <table_register_callback@@Base+0x54>

00012858 <table_unregister_callback@@Base>:
   12858:	push	{r4, r5, r6, sl, fp, lr}
   1285c:	add	fp, sp, #16
   12860:	ldr	r4, [r0, #32]
   12864:	cmp	r4, #1
   12868:	blt	128a0 <table_unregister_callback@@Base+0x48>
   1286c:	ldr	r3, [r0, #36]	; 0x24
   12870:	mov	r6, r0
   12874:	mov	r0, #0
   12878:	ldr	r5, [r3, r0, lsl #2]
   1287c:	cmp	r5, r1
   12880:	bne	12894 <table_unregister_callback@@Base+0x3c>
   12884:	ldr	r5, [r6, #40]	; 0x28
   12888:	ldr	r5, [r5, r0, lsl #2]
   1288c:	cmp	r5, r2
   12890:	beq	128a4 <table_unregister_callback@@Base+0x4c>
   12894:	add	r0, r0, #1
   12898:	cmp	r0, r4
   1289c:	blt	12878 <table_unregister_callback@@Base+0x20>
   128a0:	pop	{r4, r5, r6, sl, fp, pc}
   128a4:	sub	r1, r4, #1
   128a8:	cmp	r0, r1
   128ac:	bge	1293c <table_unregister_callback@@Base+0xe4>
   128b0:	add	r1, r3, r0, lsl #2
   128b4:	ldr	r1, [r1, #4]
   128b8:	str	r1, [r3, r0, lsl #2]
   128bc:	ldr	r1, [r6, #40]	; 0x28
   128c0:	add	r2, r1, r0, lsl #2
   128c4:	ldr	r2, [r2, #4]
   128c8:	str	r2, [r1, r0, lsl #2]
   128cc:	ldr	r1, [r6, #44]	; 0x2c
   128d0:	add	r2, r1, r0, lsl #2
   128d4:	ldr	r2, [r2, #4]
   128d8:	str	r2, [r1, r0, lsl #2]
   128dc:	add	r2, r0, #1
   128e0:	ldr	r1, [r6, #32]
   128e4:	sub	r1, r1, #1
   128e8:	cmp	r2, r1
   128ec:	bge	1293c <table_unregister_callback@@Base+0xe4>
   128f0:	ldr	r1, [r6, #36]	; 0x24
   128f4:	add	r1, r1, r0, lsl #2
   128f8:	ldr	r2, [r1, #8]
   128fc:	str	r2, [r1, #4]
   12900:	ldr	r1, [r6, #40]	; 0x28
   12904:	add	r1, r1, r0, lsl #2
   12908:	ldr	r2, [r1, #8]
   1290c:	str	r2, [r1, #4]
   12910:	ldr	r1, [r6, #44]	; 0x2c
   12914:	add	r1, r1, r0, lsl #2
   12918:	ldr	r2, [r1, #8]
   1291c:	str	r2, [r1, #4]
   12920:	add	r2, r0, #1
   12924:	add	r0, r0, #2
   12928:	ldr	r1, [r6, #32]
   1292c:	sub	r1, r1, #1
   12930:	cmp	r0, r1
   12934:	mov	r0, r2
   12938:	blt	128f0 <table_unregister_callback@@Base+0x98>
   1293c:	str	r1, [r6, #32]
   12940:	ldr	r2, [r6, #48]	; 0x30
   12944:	udiv	r0, r1, r2
   12948:	mls	r0, r0, r2, r1
   1294c:	cmp	r0, #0
   12950:	popne	{r4, r5, r6, sl, fp, pc}
   12954:	ldr	r1, [r6, #52]	; 0x34
   12958:	ldr	r0, [r6, #36]	; 0x24
   1295c:	subs	r1, r1, r2
   12960:	str	r1, [r6, #52]	; 0x34
   12964:	beq	129a0 <table_unregister_callback@@Base+0x148>
   12968:	lsl	r1, r1, #2
   1296c:	bl	11eb4 <realloc@plt>
   12970:	str	r0, [r6, #36]	; 0x24
   12974:	ldr	r1, [r6, #52]	; 0x34
   12978:	ldr	r0, [r6, #40]	; 0x28
   1297c:	lsl	r1, r1, #2
   12980:	bl	11eb4 <realloc@plt>
   12984:	str	r0, [r6, #40]	; 0x28
   12988:	ldr	r1, [r6, #52]	; 0x34
   1298c:	ldr	r0, [r6, #44]	; 0x2c
   12990:	lsl	r1, r1, #2
   12994:	bl	11eb4 <realloc@plt>
   12998:	str	r0, [r6, #44]	; 0x2c
   1299c:	pop	{r4, r5, r6, sl, fp, pc}
   129a0:	bl	11ea8 <free@plt>
   129a4:	ldr	r0, [r6, #40]	; 0x28
   129a8:	bl	11ea8 <free@plt>
   129ac:	ldr	r0, [r6, #44]	; 0x2c
   129b0:	bl	11ea8 <free@plt>
   129b4:	mov	r0, #0
   129b8:	str	r0, [r6, #36]	; 0x24
   129bc:	str	r0, [r6, #40]	; 0x28
   129c0:	str	r0, [r6, #44]	; 0x2c
   129c4:	pop	{r4, r5, r6, sl, fp, pc}

000129c8 <table_notify@@Base>:
   129c8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129cc:	add	fp, sp, #24
   129d0:	sub	sp, sp, #8
   129d4:	mov	r7, r0
   129d8:	ldr	r0, [r0, #32]
   129dc:	cmp	r0, #1
   129e0:	blt	12a3c <table_notify@@Base+0x74>
   129e4:	mov	r4, r3
   129e8:	mov	r8, r2
   129ec:	mov	r9, r1
   129f0:	mov	r5, #0
   129f4:	ldr	r1, [r7, #44]	; 0x2c
   129f8:	ldr	r1, [r1, r5, lsl #2]
   129fc:	tst	r1, r4
   12a00:	beq	12a30 <table_notify@@Base+0x68>
   12a04:	ldr	r0, [r7, #36]	; 0x24
   12a08:	ldr	r1, [r7, #40]	; 0x28
   12a0c:	mov	r2, r8
   12a10:	mov	r3, r4
   12a14:	ldr	r6, [r0, r5, lsl #2]
   12a18:	ldr	r0, [r1, r5, lsl #2]
   12a1c:	mov	r1, r9
   12a20:	str	r0, [sp]
   12a24:	mov	r0, r7
   12a28:	blx	r6
   12a2c:	ldr	r0, [r7, #32]
   12a30:	add	r5, r5, #1
   12a34:	cmp	r5, r0
   12a38:	blt	129f4 <table_notify@@Base+0x2c>
   12a3c:	sub	sp, fp, #24
   12a40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012a44 <table_column_init@@Base>:
   12a44:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12a48:	add	fp, sp, #24
   12a4c:	ldr	r7, [r0]
   12a50:	mov	r0, r2
   12a54:	mov	r4, r3
   12a58:	mov	r5, r2
   12a5c:	mov	r6, r1
   12a60:	bl	11ef0 <strlen@plt>
   12a64:	add	r0, r0, #1
   12a68:	bl	11ecc <malloc@plt>
   12a6c:	ldr	r8, [fp, #8]
   12a70:	add	r6, r6, r6, lsl #1
   12a74:	cmp	r0, #0
   12a78:	str	r0, [r7, r6, lsl #2]
   12a7c:	beq	12a88 <table_column_init@@Base+0x44>
   12a80:	mov	r1, r5
   12a84:	bl	11ec0 <strcpy@plt>
   12a88:	add	r0, r7, r6, lsl #2
   12a8c:	stmib	r0, {r4, r8}
   12a90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012a94 <table_get_col_ptr@@Base>:
   12a94:	ldr	r0, [r0]
   12a98:	add	r1, r1, r1, lsl #1
   12a9c:	add	r0, r0, r1, lsl #2
   12aa0:	bx	lr

00012aa4 <table_column_destroy@@Base>:
   12aa4:	ldr	r0, [r0]
   12aa8:	add	r1, r1, r1, lsl #1
   12aac:	ldr	r0, [r0, r1, lsl #2]
   12ab0:	cmp	r0, #0
   12ab4:	bxeq	lr
   12ab8:	b	11ea8 <free@plt>

00012abc <table_get_column_length@@Base>:
   12abc:	ldr	r0, [r0, #4]
   12ac0:	bx	lr

00012ac4 <table_get_column@@Base>:
   12ac4:	push	{r4, r5, r6, r7, fp, lr}
   12ac8:	add	fp, sp, #16
   12acc:	ldr	r6, [r0, #4]
   12ad0:	cmp	r6, #1
   12ad4:	blt	12b0c <table_get_column@@Base+0x48>
   12ad8:	ldr	r7, [r0]
   12adc:	mov	r5, r1
   12ae0:	mov	r4, #0
   12ae4:	ldr	r0, [r7]
   12ae8:	mov	r1, r5
   12aec:	bl	11e90 <strcmp@plt>
   12af0:	cmp	r0, #0
   12af4:	beq	12b10 <table_get_column@@Base+0x4c>
   12af8:	add	r4, r4, #1
   12afc:	add	r7, r7, #12
   12b00:	cmp	r4, r6
   12b04:	blt	12ae4 <table_get_column@@Base+0x20>
   12b08:	b	12b10 <table_get_column@@Base+0x4c>
   12b0c:	mov	r4, #0
   12b10:	cmp	r4, r6
   12b14:	mvneq	r4, #0
   12b18:	mov	r0, r4
   12b1c:	pop	{r4, r5, r6, r7, fp, pc}

00012b20 <table_get_column_name@@Base>:
   12b20:	ldr	r0, [r0]
   12b24:	add	r1, r1, r1, lsl #1
   12b28:	ldr	r0, [r0, r1, lsl #2]
   12b2c:	bx	lr

00012b30 <table_get_column_data_type@@Base>:
   12b30:	ldr	r0, [r0]
   12b34:	add	r1, r1, r1, lsl #1
   12b38:	add	r0, r0, r1, lsl #2
   12b3c:	ldr	r0, [r0, #4]
   12b40:	bx	lr

00012b44 <table_add_column@@Base>:
   12b44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b48:	add	fp, sp, #28
   12b4c:	sub	sp, sp, #4
   12b50:	mov	r4, r0
   12b54:	mov	r8, r1
   12b58:	ldr	r0, [r0, #4]
   12b5c:	mov	r9, r2
   12b60:	ldr	r1, [r4, #8]
   12b64:	udiv	r2, r0, r1
   12b68:	mls	r0, r2, r1, r0
   12b6c:	cmp	r0, #0
   12b70:	bne	12bdc <table_add_column@@Base+0x98>
   12b74:	ldr	r2, [r4, #12]
   12b78:	ldr	r0, [r4]
   12b7c:	add	r1, r2, r1
   12b80:	str	r1, [r4, #12]
   12b84:	add	r1, r1, r1, lsl #1
   12b88:	lsl	r1, r1, #2
   12b8c:	bl	11eb4 <realloc@plt>
   12b90:	str	r0, [r4]
   12b94:	mov	r0, r4
   12b98:	bl	137e0 <table_get_row_length@@Base>
   12b9c:	cmp	r0, #1
   12ba0:	blt	12bdc <table_add_column@@Base+0x98>
   12ba4:	mov	r6, r0
   12ba8:	mov	r5, #0
   12bac:	mov	r0, r4
   12bb0:	mov	r1, r5
   12bb4:	bl	1377c <table_get_row_ptr@@Base>
   12bb8:	ldr	r1, [r4, #12]
   12bbc:	mov	r7, r0
   12bc0:	ldr	r0, [r0]
   12bc4:	lsl	r1, r1, #2
   12bc8:	bl	11eb4 <realloc@plt>
   12bcc:	add	r5, r5, #1
   12bd0:	str	r0, [r7]
   12bd4:	cmp	r6, r5
   12bd8:	bne	12bac <table_add_column@@Base+0x68>
   12bdc:	mov	r0, r4
   12be0:	bl	137e0 <table_get_row_length@@Base>
   12be4:	ldr	r6, [r4, #4]
   12be8:	mov	r7, r0
   12bec:	mov	r0, r9
   12bf0:	bl	134f0 <table_get_default_compare_function_for_data_type@@Base>
   12bf4:	ldr	r5, [r4]
   12bf8:	mov	sl, r0
   12bfc:	mov	r0, r8
   12c00:	bl	11ef0 <strlen@plt>
   12c04:	add	r0, r0, #1
   12c08:	bl	11ecc <malloc@plt>
   12c0c:	mov	r1, r8
   12c10:	add	r8, r6, r6, lsl #1
   12c14:	cmp	r0, #0
   12c18:	str	r0, [r5, r8, lsl #2]
   12c1c:	beq	12c24 <table_add_column@@Base+0xe0>
   12c20:	bl	11ec0 <strcpy@plt>
   12c24:	add	r0, r5, r8, lsl #2
   12c28:	cmp	r7, #1
   12c2c:	stmib	r0, {r9, sl}
   12c30:	blt	12c54 <table_add_column@@Base+0x110>
   12c34:	mov	r5, #0
   12c38:	mov	r0, r4
   12c3c:	mov	r1, r5
   12c40:	mov	r2, r6
   12c44:	bl	1487c <table_cell_init@@Base>
   12c48:	add	r5, r5, #1
   12c4c:	cmp	r7, r5
   12c50:	bne	12c38 <table_add_column@@Base+0xf4>
   12c54:	ldr	r2, [r4, #4]
   12c58:	mov	r0, r4
   12c5c:	mvn	r1, #0
   12c60:	mov	r3, #8
   12c64:	bl	129c8 <table_notify@@Base>
   12c68:	ldr	r0, [r4, #4]
   12c6c:	add	r1, r0, #1
   12c70:	str	r1, [r4, #4]
   12c74:	sub	sp, fp, #28
   12c78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012c7c <table_remove_column@@Base>:
   12c7c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12c80:	add	fp, sp, #24
   12c84:	mov	r5, r0
   12c88:	ldr	r0, [r0]
   12c8c:	add	r6, r1, r1, lsl #1
   12c90:	mov	r9, r1
   12c94:	ldr	r0, [r0, r6, lsl #2]
   12c98:	cmp	r0, #0
   12c9c:	beq	12ca4 <table_remove_column@@Base+0x28>
   12ca0:	bl	11ea8 <free@plt>
   12ca4:	ldr	r0, [r5, #4]
   12ca8:	sub	r4, r0, #1
   12cac:	cmp	r4, r9
   12cb0:	ble	12ce0 <table_remove_column@@Base+0x64>
   12cb4:	sub	r0, r4, r9
   12cb8:	lsl	r1, r6, #2
   12cbc:	ldr	r2, [r5]
   12cc0:	subs	r0, r0, #1
   12cc4:	add	r2, r2, r1
   12cc8:	add	r1, r1, #12
   12ccc:	vldr	d16, [r2, #12]
   12cd0:	ldr	r3, [r2, #20]
   12cd4:	str	r3, [r2, #8]
   12cd8:	vstr	d16, [r2]
   12cdc:	bne	12cbc <table_remove_column@@Base+0x40>
   12ce0:	mov	r0, r5
   12ce4:	bl	137e0 <table_get_row_length@@Base>
   12ce8:	cmp	r0, #1
   12cec:	blt	12d48 <table_remove_column@@Base+0xcc>
   12cf0:	mov	r6, r0
   12cf4:	mov	r7, #0
   12cf8:	mov	r0, r5
   12cfc:	mov	r1, r7
   12d00:	mov	r2, r9
   12d04:	bl	148b8 <table_cell_destroy@@Base>
   12d08:	mov	r0, r5
   12d0c:	mov	r1, r7
   12d10:	bl	1377c <table_get_row_ptr@@Base>
   12d14:	cmp	r4, r9
   12d18:	ble	12d3c <table_remove_column@@Base+0xc0>
   12d1c:	mov	r1, r9
   12d20:	ldr	r2, [r0]
   12d24:	add	r3, r2, r1, lsl #2
   12d28:	ldr	r3, [r3, #4]
   12d2c:	str	r3, [r2, r1, lsl #2]
   12d30:	add	r1, r1, #1
   12d34:	cmp	r4, r1
   12d38:	bne	12d20 <table_remove_column@@Base+0xa4>
   12d3c:	add	r7, r7, #1
   12d40:	cmp	r7, r6
   12d44:	bne	12cf8 <table_remove_column@@Base+0x7c>
   12d48:	ldmib	r5, {r0, r1}
   12d4c:	sub	r0, r0, #1
   12d50:	udiv	r2, r0, r1
   12d54:	str	r0, [r5, #4]
   12d58:	mls	r0, r2, r1, r0
   12d5c:	cmp	r0, #0
   12d60:	bne	12dcc <table_remove_column@@Base+0x150>
   12d64:	ldr	r2, [r5, #12]
   12d68:	ldr	r0, [r5]
   12d6c:	sub	r1, r2, r1
   12d70:	str	r1, [r5, #12]
   12d74:	add	r1, r1, r1, lsl #1
   12d78:	lsl	r1, r1, #2
   12d7c:	bl	11eb4 <realloc@plt>
   12d80:	str	r0, [r5]
   12d84:	mov	r0, r5
   12d88:	bl	137e0 <table_get_row_length@@Base>
   12d8c:	cmp	r0, #1
   12d90:	blt	12dcc <table_remove_column@@Base+0x150>
   12d94:	mov	r8, r0
   12d98:	mov	r7, #0
   12d9c:	mov	r0, r5
   12da0:	mov	r1, r7
   12da4:	bl	1377c <table_get_row_ptr@@Base>
   12da8:	ldr	r1, [r5, #12]
   12dac:	mov	r6, r0
   12db0:	ldr	r0, [r0]
   12db4:	lsl	r1, r1, #2
   12db8:	bl	11eb4 <realloc@plt>
   12dbc:	add	r7, r7, #1
   12dc0:	str	r0, [r6]
   12dc4:	cmp	r8, r7
   12dc8:	bne	12d9c <table_remove_column@@Base+0x120>
   12dcc:	mov	r0, r5
   12dd0:	mvn	r1, #0
   12dd4:	mov	r2, r9
   12dd8:	mov	r3, #16
   12ddc:	bl	129c8 <table_notify@@Base>
   12de0:	mov	r0, #0
   12de4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012de8 <table_get_column_compare_function@@Base>:
   12de8:	ldr	r0, [r0]
   12dec:	add	r1, r1, r1, lsl #1
   12df0:	add	r0, r0, r1, lsl #2
   12df4:	ldr	r0, [r0, #8]
   12df8:	bx	lr

00012dfc <table_set_column_compare_function@@Base>:
   12dfc:	ldr	r0, [r0]
   12e00:	add	r1, r1, r1, lsl #1
   12e04:	add	r0, r0, r1, lsl #2
   12e08:	str	r2, [r0, #8]
   12e0c:	bx	lr

00012e10 <table_compare_bool@@Base>:
   12e10:	cmp	r0, #0
   12e14:	beq	12e48 <table_compare_bool@@Base+0x38>
   12e18:	cmp	r1, #0
   12e1c:	moveq	r1, #1
   12e20:	moveq	r0, r1
   12e24:	bxeq	lr
   12e28:	ldrb	r2, [r1]
   12e2c:	ldrb	r0, [r0]
   12e30:	mov	r1, #0
   12e34:	cmp	r0, r2
   12e38:	mvncc	r1, #0
   12e3c:	movwhi	r1, #1
   12e40:	mov	r0, r1
   12e44:	bx	lr
   12e48:	cmp	r1, #0
   12e4c:	mvnne	r1, #0
   12e50:	mov	r0, r1
   12e54:	bx	lr

00012e58 <table_compare_int@@Base>:
   12e58:	cmp	r0, #0
   12e5c:	beq	12e90 <table_compare_int@@Base+0x38>
   12e60:	cmp	r1, #0
   12e64:	moveq	r1, #1
   12e68:	moveq	r0, r1
   12e6c:	bxeq	lr
   12e70:	ldr	r2, [r1]
   12e74:	ldr	r0, [r0]
   12e78:	mov	r1, #0
   12e7c:	cmp	r0, r2
   12e80:	mvnlt	r1, #0
   12e84:	movwgt	r1, #1
   12e88:	mov	r0, r1
   12e8c:	bx	lr
   12e90:	cmp	r1, #0
   12e94:	mvnne	r1, #0
   12e98:	mov	r0, r1
   12e9c:	bx	lr

00012ea0 <table_compare_uint@@Base>:
   12ea0:	cmp	r0, #0
   12ea4:	beq	12ed8 <table_compare_uint@@Base+0x38>
   12ea8:	cmp	r1, #0
   12eac:	moveq	r1, #1
   12eb0:	moveq	r0, r1
   12eb4:	bxeq	lr
   12eb8:	ldr	r2, [r1]
   12ebc:	ldr	r0, [r0]
   12ec0:	mov	r1, #0
   12ec4:	cmp	r0, r2
   12ec8:	mvncc	r1, #0
   12ecc:	movwhi	r1, #1
   12ed0:	mov	r0, r1
   12ed4:	bx	lr
   12ed8:	cmp	r1, #0
   12edc:	mvnne	r1, #0
   12ee0:	mov	r0, r1
   12ee4:	bx	lr

00012ee8 <table_compare_int8@@Base>:
   12ee8:	cmp	r0, #0
   12eec:	beq	12f20 <table_compare_int8@@Base+0x38>
   12ef0:	cmp	r1, #0
   12ef4:	moveq	r1, #1
   12ef8:	moveq	r0, r1
   12efc:	bxeq	lr
   12f00:	ldrsb	r2, [r1]
   12f04:	ldrsb	r0, [r0]
   12f08:	mov	r1, #0
   12f0c:	cmp	r0, r2
   12f10:	mvnlt	r1, #0
   12f14:	movwgt	r1, #1
   12f18:	mov	r0, r1
   12f1c:	bx	lr
   12f20:	cmp	r1, #0
   12f24:	mvnne	r1, #0
   12f28:	mov	r0, r1
   12f2c:	bx	lr

00012f30 <table_compare_uint8@@Base>:
   12f30:	cmp	r0, #0
   12f34:	beq	12f68 <table_compare_uint8@@Base+0x38>
   12f38:	cmp	r1, #0
   12f3c:	moveq	r1, #1
   12f40:	moveq	r0, r1
   12f44:	bxeq	lr
   12f48:	ldrb	r2, [r1]
   12f4c:	ldrb	r0, [r0]
   12f50:	mov	r1, #0
   12f54:	cmp	r0, r2
   12f58:	mvncc	r1, #0
   12f5c:	movwhi	r1, #1
   12f60:	mov	r0, r1
   12f64:	bx	lr
   12f68:	cmp	r1, #0
   12f6c:	mvnne	r1, #0
   12f70:	mov	r0, r1
   12f74:	bx	lr

00012f78 <table_compare_int16@@Base>:
   12f78:	cmp	r0, #0
   12f7c:	beq	12fb0 <table_compare_int16@@Base+0x38>
   12f80:	cmp	r1, #0
   12f84:	moveq	r1, #1
   12f88:	moveq	r0, r1
   12f8c:	bxeq	lr
   12f90:	ldrsh	r2, [r1]
   12f94:	ldrsh	r0, [r0]
   12f98:	mov	r1, #0
   12f9c:	cmp	r0, r2
   12fa0:	mvnlt	r1, #0
   12fa4:	movwgt	r1, #1
   12fa8:	mov	r0, r1
   12fac:	bx	lr
   12fb0:	cmp	r1, #0
   12fb4:	mvnne	r1, #0
   12fb8:	mov	r0, r1
   12fbc:	bx	lr

00012fc0 <table_compare_uint16@@Base>:
   12fc0:	cmp	r0, #0
   12fc4:	beq	12ff8 <table_compare_uint16@@Base+0x38>
   12fc8:	cmp	r1, #0
   12fcc:	moveq	r1, #1
   12fd0:	moveq	r0, r1
   12fd4:	bxeq	lr
   12fd8:	ldrh	r2, [r1]
   12fdc:	ldrh	r0, [r0]
   12fe0:	mov	r1, #0
   12fe4:	cmp	r0, r2
   12fe8:	mvncc	r1, #0
   12fec:	movwhi	r1, #1
   12ff0:	mov	r0, r1
   12ff4:	bx	lr
   12ff8:	cmp	r1, #0
   12ffc:	mvnne	r1, #0
   13000:	mov	r0, r1
   13004:	bx	lr

00013008 <table_compare_int32@@Base>:
   13008:	cmp	r0, #0
   1300c:	beq	13040 <table_compare_int32@@Base+0x38>
   13010:	cmp	r1, #0
   13014:	moveq	r1, #1
   13018:	moveq	r0, r1
   1301c:	bxeq	lr
   13020:	ldr	r2, [r1]
   13024:	ldr	r0, [r0]
   13028:	mov	r1, #0
   1302c:	cmp	r0, r2
   13030:	mvnlt	r1, #0
   13034:	movwgt	r1, #1
   13038:	mov	r0, r1
   1303c:	bx	lr
   13040:	cmp	r1, #0
   13044:	mvnne	r1, #0
   13048:	mov	r0, r1
   1304c:	bx	lr

00013050 <table_compare_uint32@@Base>:
   13050:	cmp	r0, #0
   13054:	beq	13088 <table_compare_uint32@@Base+0x38>
   13058:	cmp	r1, #0
   1305c:	moveq	r1, #1
   13060:	moveq	r0, r1
   13064:	bxeq	lr
   13068:	ldr	r2, [r1]
   1306c:	ldr	r0, [r0]
   13070:	mov	r1, #0
   13074:	cmp	r0, r2
   13078:	mvncc	r1, #0
   1307c:	movwhi	r1, #1
   13080:	mov	r0, r1
   13084:	bx	lr
   13088:	cmp	r1, #0
   1308c:	mvnne	r1, #0
   13090:	mov	r0, r1
   13094:	bx	lr

00013098 <table_compare_int64@@Base>:
   13098:	cmp	r0, #0
   1309c:	beq	130f0 <table_compare_int64@@Base+0x58>
   130a0:	cmp	r1, #0
   130a4:	moveq	r1, #1
   130a8:	moveq	r0, r1
   130ac:	bxeq	lr
   130b0:	push	{r5, r7, fp, lr}
   130b4:	add	fp, sp, #8
   130b8:	ldm	r1, {r2, r7}
   130bc:	ldm	r0, {r0, r5}
   130c0:	mov	r1, #0
   130c4:	subs	r3, r0, r2
   130c8:	sbcs	r3, r5, r7
   130cc:	movwlt	r1, #1
   130d0:	cmp	r1, #0
   130d4:	mvnne	r1, #0
   130d8:	subs	r0, r2, r0
   130dc:	sbcs	r0, r7, r5
   130e0:	movwlt	r1, #1
   130e4:	pop	{r5, r7, fp, lr}
   130e8:	mov	r0, r1
   130ec:	bx	lr
   130f0:	cmp	r1, #0
   130f4:	mvnne	r1, #0
   130f8:	mov	r0, r1
   130fc:	bx	lr

00013100 <table_compare_uint64@@Base>:
   13100:	cmp	r0, #0
   13104:	beq	13158 <table_compare_uint64@@Base+0x58>
   13108:	cmp	r1, #0
   1310c:	moveq	r1, #1
   13110:	moveq	r0, r1
   13114:	bxeq	lr
   13118:	push	{r5, r7, fp, lr}
   1311c:	add	fp, sp, #8
   13120:	ldm	r1, {r2, r7}
   13124:	ldm	r0, {r0, r5}
   13128:	mov	r1, #0
   1312c:	subs	r3, r0, r2
   13130:	sbcs	r3, r5, r7
   13134:	movwcc	r1, #1
   13138:	cmp	r1, #0
   1313c:	mvnne	r1, #0
   13140:	subs	r0, r2, r0
   13144:	sbcs	r0, r7, r5
   13148:	movwcc	r1, #1
   1314c:	pop	{r5, r7, fp, lr}
   13150:	mov	r0, r1
   13154:	bx	lr
   13158:	cmp	r1, #0
   1315c:	mvnne	r1, #0
   13160:	mov	r0, r1
   13164:	bx	lr

00013168 <table_compare_short@@Base>:
   13168:	cmp	r0, #0
   1316c:	beq	131a0 <table_compare_short@@Base+0x38>
   13170:	cmp	r1, #0
   13174:	moveq	r1, #1
   13178:	moveq	r0, r1
   1317c:	bxeq	lr
   13180:	ldrsh	r2, [r1]
   13184:	ldrsh	r0, [r0]
   13188:	mov	r1, #0
   1318c:	cmp	r0, r2
   13190:	mvnlt	r1, #0
   13194:	movwgt	r1, #1
   13198:	mov	r0, r1
   1319c:	bx	lr
   131a0:	cmp	r1, #0
   131a4:	mvnne	r1, #0
   131a8:	mov	r0, r1
   131ac:	bx	lr

000131b0 <table_compare_ushort@@Base>:
   131b0:	cmp	r0, #0
   131b4:	beq	131e8 <table_compare_ushort@@Base+0x38>
   131b8:	cmp	r1, #0
   131bc:	moveq	r1, #1
   131c0:	moveq	r0, r1
   131c4:	bxeq	lr
   131c8:	ldrh	r2, [r1]
   131cc:	ldrh	r0, [r0]
   131d0:	mov	r1, #0
   131d4:	cmp	r0, r2
   131d8:	mvncc	r1, #0
   131dc:	movwhi	r1, #1
   131e0:	mov	r0, r1
   131e4:	bx	lr
   131e8:	cmp	r1, #0
   131ec:	mvnne	r1, #0
   131f0:	mov	r0, r1
   131f4:	bx	lr

000131f8 <table_compare_long@@Base>:
   131f8:	cmp	r0, #0
   131fc:	beq	13230 <table_compare_long@@Base+0x38>
   13200:	cmp	r1, #0
   13204:	moveq	r1, #1
   13208:	moveq	r0, r1
   1320c:	bxeq	lr
   13210:	ldr	r2, [r1]
   13214:	ldr	r0, [r0]
   13218:	mov	r1, #0
   1321c:	cmp	r0, r2
   13220:	mvnlt	r1, #0
   13224:	movwgt	r1, #1
   13228:	mov	r0, r1
   1322c:	bx	lr
   13230:	cmp	r1, #0
   13234:	mvnne	r1, #0
   13238:	mov	r0, r1
   1323c:	bx	lr

00013240 <table_compare_ulong@@Base>:
   13240:	cmp	r0, #0
   13244:	beq	13278 <table_compare_ulong@@Base+0x38>
   13248:	cmp	r1, #0
   1324c:	moveq	r1, #1
   13250:	moveq	r0, r1
   13254:	bxeq	lr
   13258:	ldr	r2, [r1]
   1325c:	ldr	r0, [r0]
   13260:	mov	r1, #0
   13264:	cmp	r0, r2
   13268:	mvncc	r1, #0
   1326c:	movwhi	r1, #1
   13270:	mov	r0, r1
   13274:	bx	lr
   13278:	cmp	r1, #0
   1327c:	mvnne	r1, #0
   13280:	mov	r0, r1
   13284:	bx	lr

00013288 <table_compare_llong@@Base>:
   13288:	cmp	r0, #0
   1328c:	beq	132e0 <table_compare_llong@@Base+0x58>
   13290:	cmp	r1, #0
   13294:	moveq	r1, #1
   13298:	moveq	r0, r1
   1329c:	bxeq	lr
   132a0:	push	{r5, r7, fp, lr}
   132a4:	add	fp, sp, #8
   132a8:	ldm	r1, {r2, r7}
   132ac:	ldm	r0, {r0, r5}
   132b0:	mov	r1, #0
   132b4:	subs	r3, r0, r2
   132b8:	sbcs	r3, r5, r7
   132bc:	movwlt	r1, #1
   132c0:	cmp	r1, #0
   132c4:	mvnne	r1, #0
   132c8:	subs	r0, r2, r0
   132cc:	sbcs	r0, r7, r5
   132d0:	movwlt	r1, #1
   132d4:	pop	{r5, r7, fp, lr}
   132d8:	mov	r0, r1
   132dc:	bx	lr
   132e0:	cmp	r1, #0
   132e4:	mvnne	r1, #0
   132e8:	mov	r0, r1
   132ec:	bx	lr

000132f0 <table_compare_ullong@@Base>:
   132f0:	cmp	r0, #0
   132f4:	beq	13328 <table_compare_ullong@@Base+0x38>
   132f8:	cmp	r1, #0
   132fc:	moveq	r1, #1
   13300:	moveq	r0, r1
   13304:	bxeq	lr
   13308:	ldr	r2, [r1]
   1330c:	ldr	r0, [r0]
   13310:	mov	r1, #0
   13314:	cmp	r0, r2
   13318:	mvncc	r1, #0
   1331c:	movwhi	r1, #1
   13320:	mov	r0, r1
   13324:	bx	lr
   13328:	cmp	r1, #0
   1332c:	mvnne	r1, #0
   13330:	mov	r0, r1
   13334:	bx	lr

00013338 <table_compare_float@@Base>:
   13338:	cmp	r0, #0
   1333c:	beq	13374 <table_compare_float@@Base+0x3c>
   13340:	cmp	r1, #0
   13344:	moveq	r1, #1
   13348:	moveq	r0, r1
   1334c:	bxeq	lr
   13350:	vldr	s0, [r1]
   13354:	vldr	s2, [r0]
   13358:	mov	r1, #0
   1335c:	vcmpe.f32	s2, s0
   13360:	vmrs	APSR_nzcv, fpscr
   13364:	mvnmi	r1, #0
   13368:	movwgt	r1, #1
   1336c:	mov	r0, r1
   13370:	bx	lr
   13374:	cmp	r1, #0
   13378:	mvnne	r1, #0
   1337c:	mov	r0, r1
   13380:	bx	lr

00013384 <table_compare_double@@Base>:
   13384:	cmp	r0, #0
   13388:	beq	133c0 <table_compare_double@@Base+0x3c>
   1338c:	cmp	r1, #0
   13390:	moveq	r1, #1
   13394:	moveq	r0, r1
   13398:	bxeq	lr
   1339c:	vldr	d16, [r1]
   133a0:	vldr	d17, [r0]
   133a4:	mov	r1, #0
   133a8:	vcmpe.f64	d17, d16
   133ac:	vmrs	APSR_nzcv, fpscr
   133b0:	mvnmi	r1, #0
   133b4:	movwgt	r1, #1
   133b8:	mov	r0, r1
   133bc:	bx	lr
   133c0:	cmp	r1, #0
   133c4:	mvnne	r1, #0
   133c8:	mov	r0, r1
   133cc:	bx	lr

000133d0 <table_compare_ldouble@@Base>:
   133d0:	cmp	r0, #0
   133d4:	beq	1340c <table_compare_ldouble@@Base+0x3c>
   133d8:	cmp	r1, #0
   133dc:	moveq	r1, #1
   133e0:	moveq	r0, r1
   133e4:	bxeq	lr
   133e8:	vldr	d16, [r1]
   133ec:	vldr	d17, [r0]
   133f0:	mov	r1, #0
   133f4:	vcmpe.f64	d17, d16
   133f8:	vmrs	APSR_nzcv, fpscr
   133fc:	mvnmi	r1, #0
   13400:	movwgt	r1, #1
   13404:	mov	r0, r1
   13408:	bx	lr
   1340c:	cmp	r1, #0
   13410:	mvnne	r1, #0
   13414:	mov	r0, r1
   13418:	bx	lr

0001341c <table_compare_char@@Base>:
   1341c:	cmp	r0, #0
   13420:	beq	13454 <table_compare_char@@Base+0x38>
   13424:	cmp	r1, #0
   13428:	moveq	r1, #1
   1342c:	moveq	r0, r1
   13430:	bxeq	lr
   13434:	ldrb	r2, [r1]
   13438:	ldrb	r0, [r0]
   1343c:	mov	r1, #0
   13440:	cmp	r0, r2
   13444:	mvncc	r1, #0
   13448:	movwhi	r1, #1
   1344c:	mov	r0, r1
   13450:	bx	lr
   13454:	cmp	r1, #0
   13458:	mvnne	r1, #0
   1345c:	mov	r0, r1
   13460:	bx	lr

00013464 <table_compare_uchar@@Base>:
   13464:	cmp	r0, #0
   13468:	beq	1349c <table_compare_uchar@@Base+0x38>
   1346c:	cmp	r1, #0
   13470:	moveq	r1, #1
   13474:	moveq	r0, r1
   13478:	bxeq	lr
   1347c:	ldrb	r2, [r1]
   13480:	ldrb	r0, [r0]
   13484:	mov	r1, #0
   13488:	cmp	r0, r2
   1348c:	mvncc	r1, #0
   13490:	movwhi	r1, #1
   13494:	mov	r0, r1
   13498:	bx	lr
   1349c:	cmp	r1, #0
   134a0:	mvnne	r1, #0
   134a4:	mov	r0, r1
   134a8:	bx	lr

000134ac <table_compare_string@@Base>:
   134ac:	cmp	r0, #0
   134b0:	beq	134c8 <table_compare_string@@Base+0x1c>
   134b4:	cmp	r1, #0
   134b8:	moveq	r1, #1
   134bc:	moveq	r0, r1
   134c0:	bxeq	lr
   134c4:	b	11e90 <strcmp@plt>
   134c8:	cmp	r1, #0
   134cc:	mvnne	r1, #0
   134d0:	mov	r0, r1
   134d4:	bx	lr

000134d8 <table_compare_ptr@@Base>:
   134d8:	mov	r2, #0
   134dc:	cmp	r0, r1
   134e0:	mvncc	r2, #0
   134e4:	movwhi	r2, #1
   134e8:	mov	r0, r2
   134ec:	bx	lr

000134f0 <table_get_default_compare_function_for_data_type@@Base>:
   134f0:	cmp	r0, #23
   134f4:	ldrls	r1, [pc, #12]	; 13508 <table_get_default_compare_function_for_data_type@@Base+0x18>
   134f8:	movhi	r0, #0
   134fc:	addls	r1, pc, r1
   13500:	ldrls	r0, [r1, r0, lsl #2]
   13504:	bx	lr
   13508:	andeq	r2, r1, ip, lsr #19

0001350c <table_get@@Base>:
   1350c:	push	{fp, lr}
   13510:	mov	fp, sp
   13514:	bl	1489c <table_get_cell_ptr@@Base>
   13518:	ldr	r0, [r0]
   1351c:	pop	{fp, pc}

00013520 <table_get_bool@@Base>:
   13520:	push	{fp, lr}
   13524:	mov	fp, sp
   13528:	bl	1489c <table_get_cell_ptr@@Base>
   1352c:	ldr	r0, [r0]
   13530:	ldrb	r0, [r0]
   13534:	pop	{fp, pc}

00013538 <table_get_int@@Base>:
   13538:	push	{fp, lr}
   1353c:	mov	fp, sp
   13540:	bl	1489c <table_get_cell_ptr@@Base>
   13544:	ldr	r0, [r0]
   13548:	ldr	r0, [r0]
   1354c:	pop	{fp, pc}

00013550 <table_get_uint@@Base>:
   13550:	push	{fp, lr}
   13554:	mov	fp, sp
   13558:	bl	1489c <table_get_cell_ptr@@Base>
   1355c:	ldr	r0, [r0]
   13560:	ldr	r0, [r0]
   13564:	pop	{fp, pc}

00013568 <table_get_int8@@Base>:
   13568:	push	{fp, lr}
   1356c:	mov	fp, sp
   13570:	bl	1489c <table_get_cell_ptr@@Base>
   13574:	ldr	r0, [r0]
   13578:	ldrsb	r0, [r0]
   1357c:	pop	{fp, pc}

00013580 <table_get_uint8@@Base>:
   13580:	push	{fp, lr}
   13584:	mov	fp, sp
   13588:	bl	1489c <table_get_cell_ptr@@Base>
   1358c:	ldr	r0, [r0]
   13590:	ldrb	r0, [r0]
   13594:	pop	{fp, pc}

00013598 <table_get_int16@@Base>:
   13598:	push	{fp, lr}
   1359c:	mov	fp, sp
   135a0:	bl	1489c <table_get_cell_ptr@@Base>
   135a4:	ldr	r0, [r0]
   135a8:	ldrsh	r0, [r0]
   135ac:	pop	{fp, pc}

000135b0 <table_get_uint16@@Base>:
   135b0:	push	{fp, lr}
   135b4:	mov	fp, sp
   135b8:	bl	1489c <table_get_cell_ptr@@Base>
   135bc:	ldr	r0, [r0]
   135c0:	ldrh	r0, [r0]
   135c4:	pop	{fp, pc}

000135c8 <table_get_int32@@Base>:
   135c8:	push	{fp, lr}
   135cc:	mov	fp, sp
   135d0:	bl	1489c <table_get_cell_ptr@@Base>
   135d4:	ldr	r0, [r0]
   135d8:	ldr	r0, [r0]
   135dc:	pop	{fp, pc}

000135e0 <table_get_uint32@@Base>:
   135e0:	push	{fp, lr}
   135e4:	mov	fp, sp
   135e8:	bl	1489c <table_get_cell_ptr@@Base>
   135ec:	ldr	r0, [r0]
   135f0:	ldr	r0, [r0]
   135f4:	pop	{fp, pc}

000135f8 <table_get_int64@@Base>:
   135f8:	push	{fp, lr}
   135fc:	mov	fp, sp
   13600:	bl	1489c <table_get_cell_ptr@@Base>
   13604:	ldr	r0, [r0]
   13608:	ldrd	r0, [r0]
   1360c:	pop	{fp, pc}

00013610 <table_get_uint64@@Base>:
   13610:	push	{fp, lr}
   13614:	mov	fp, sp
   13618:	bl	1489c <table_get_cell_ptr@@Base>
   1361c:	ldr	r0, [r0]
   13620:	ldrd	r0, [r0]
   13624:	pop	{fp, pc}

00013628 <table_get_short@@Base>:
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	bl	1489c <table_get_cell_ptr@@Base>
   13634:	ldr	r0, [r0]
   13638:	ldrsh	r0, [r0]
   1363c:	pop	{fp, pc}

00013640 <table_get_ushort@@Base>:
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	bl	1489c <table_get_cell_ptr@@Base>
   1364c:	ldr	r0, [r0]
   13650:	ldrh	r0, [r0]
   13654:	pop	{fp, pc}

00013658 <table_get_long@@Base>:
   13658:	push	{fp, lr}
   1365c:	mov	fp, sp
   13660:	bl	1489c <table_get_cell_ptr@@Base>
   13664:	ldr	r0, [r0]
   13668:	ldr	r0, [r0]
   1366c:	pop	{fp, pc}

00013670 <table_get_ulong@@Base>:
   13670:	push	{fp, lr}
   13674:	mov	fp, sp
   13678:	bl	1489c <table_get_cell_ptr@@Base>
   1367c:	ldr	r0, [r0]
   13680:	ldr	r0, [r0]
   13684:	pop	{fp, pc}

00013688 <table_get_llong@@Base>:
   13688:	push	{fp, lr}
   1368c:	mov	fp, sp
   13690:	bl	1489c <table_get_cell_ptr@@Base>
   13694:	ldr	r0, [r0]
   13698:	ldrd	r0, [r0]
   1369c:	pop	{fp, pc}

000136a0 <table_get_ullong@@Base>:
   136a0:	push	{fp, lr}
   136a4:	mov	fp, sp
   136a8:	bl	1489c <table_get_cell_ptr@@Base>
   136ac:	ldr	r0, [r0]
   136b0:	ldrd	r0, [r0]
   136b4:	pop	{fp, pc}

000136b8 <table_get_float@@Base>:
   136b8:	push	{fp, lr}
   136bc:	mov	fp, sp
   136c0:	bl	1489c <table_get_cell_ptr@@Base>
   136c4:	ldr	r0, [r0]
   136c8:	vldr	s0, [r0]
   136cc:	pop	{fp, pc}

000136d0 <table_get_double@@Base>:
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	bl	1489c <table_get_cell_ptr@@Base>
   136dc:	ldr	r0, [r0]
   136e0:	vldr	d0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_ldouble@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	1489c <table_get_cell_ptr@@Base>
   136f4:	ldr	r0, [r0]
   136f8:	vldr	d0, [r0]
   136fc:	pop	{fp, pc}

00013700 <table_get_char@@Base>:
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	bl	1489c <table_get_cell_ptr@@Base>
   1370c:	ldr	r0, [r0]
   13710:	ldrb	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_uchar@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	1489c <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	ldrb	r0, [r0]
   1372c:	pop	{fp, pc}

00013730 <table_get_string@@Base>:
   13730:	push	{fp, lr}
   13734:	mov	fp, sp
   13738:	bl	1489c <table_get_cell_ptr@@Base>
   1373c:	ldr	r0, [r0]
   13740:	pop	{fp, pc}

00013744 <table_get_ptr@@Base>:
   13744:	push	{fp, lr}
   13748:	mov	fp, sp
   1374c:	bl	1489c <table_get_cell_ptr@@Base>
   13750:	ldr	r0, [r0]
   13754:	pop	{fp, pc}

00013758 <table_row_init@@Base>:
   13758:	push	{r4, r5, fp, lr}
   1375c:	add	fp, sp, #8
   13760:	mov	r4, r1
   13764:	ldr	r1, [r0, #12]
   13768:	ldr	r5, [r0, #16]
   1376c:	lsl	r0, r1, #2
   13770:	bl	11ecc <malloc@plt>
   13774:	str	r0, [r5, r4, lsl #2]
   13778:	pop	{r4, r5, fp, pc}

0001377c <table_get_row_ptr@@Base>:
   1377c:	ldr	r0, [r0, #16]
   13780:	add	r0, r0, r1, lsl #2
   13784:	bx	lr

00013788 <table_row_destroy@@Base>:
   13788:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1378c:	add	fp, sp, #24
   13790:	mov	r4, r1
   13794:	mov	r5, r0
   13798:	bl	12abc <table_get_column_length@@Base>
   1379c:	ldr	r8, [r5, #16]
   137a0:	cmp	r0, #1
   137a4:	blt	137cc <table_row_destroy@@Base+0x44>
   137a8:	mov	r6, r0
   137ac:	mov	r7, #0
   137b0:	mov	r0, r5
   137b4:	mov	r1, r4
   137b8:	mov	r2, r7
   137bc:	bl	148b8 <table_cell_destroy@@Base>
   137c0:	add	r7, r7, #1
   137c4:	cmp	r6, r7
   137c8:	bne	137b0 <table_row_destroy@@Base+0x28>
   137cc:	ldr	r0, [r8, r4, lsl #2]
   137d0:	cmp	r0, #0
   137d4:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   137d8:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   137dc:	b	11ea8 <free@plt>

000137e0 <table_get_row_length@@Base>:
   137e0:	ldr	r0, [r0, #20]
   137e4:	bx	lr

000137e8 <table_add_row@@Base>:
   137e8:	push	{r4, r5, r6, r7, fp, lr}
   137ec:	add	fp, sp, #16
   137f0:	ldr	r5, [r0, #20]
   137f4:	ldr	r1, [r0, #24]
   137f8:	mov	r4, r0
   137fc:	udiv	r0, r5, r1
   13800:	mls	r0, r0, r1, r5
   13804:	cmp	r0, #0
   13808:	bne	1382c <table_add_row@@Base+0x44>
   1380c:	ldr	r2, [r4, #28]
   13810:	ldr	r0, [r4, #16]
   13814:	add	r1, r2, r1
   13818:	str	r1, [r4, #28]
   1381c:	lsl	r1, r1, #2
   13820:	bl	11eb4 <realloc@plt>
   13824:	str	r0, [r4, #16]
   13828:	ldr	r5, [r4, #20]
   1382c:	mov	r0, r4
   13830:	bl	12abc <table_get_column_length@@Base>
   13834:	mov	r6, r0
   13838:	ldr	r0, [r4, #12]
   1383c:	ldr	r7, [r4, #16]
   13840:	lsl	r0, r0, #2
   13844:	bl	11ecc <malloc@plt>
   13848:	cmp	r6, #1
   1384c:	str	r0, [r7, r5, lsl #2]
   13850:	blt	13874 <table_add_row@@Base+0x8c>
   13854:	mov	r7, #0
   13858:	mov	r0, r4
   1385c:	mov	r1, r5
   13860:	mov	r2, r7
   13864:	bl	1487c <table_cell_init@@Base>
   13868:	add	r7, r7, #1
   1386c:	cmp	r6, r7
   13870:	bne	13858 <table_add_row@@Base+0x70>
   13874:	ldr	r1, [r4, #20]
   13878:	mov	r0, r4
   1387c:	mvn	r2, #0
   13880:	mov	r3, #2
   13884:	bl	129c8 <table_notify@@Base>
   13888:	ldr	r0, [r4, #20]
   1388c:	add	r1, r0, #1
   13890:	str	r1, [r4, #20]
   13894:	pop	{r4, r5, r6, r7, fp, pc}

00013898 <table_remove_row@@Base>:
   13898:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1389c:	add	fp, sp, #24
   138a0:	ldr	r8, [r0, #20]
   138a4:	mov	r4, r1
   138a8:	mov	r5, r0
   138ac:	bl	12abc <table_get_column_length@@Base>
   138b0:	cmp	r0, #1
   138b4:	blt	13900 <table_remove_row@@Base+0x68>
   138b8:	mov	r6, r0
   138bc:	mov	r7, #0
   138c0:	mov	r0, r5
   138c4:	mov	r1, r7
   138c8:	bl	12b30 <table_get_column_data_type@@Base>
   138cc:	cmp	r0, #23
   138d0:	beq	138f4 <table_remove_row@@Base+0x5c>
   138d4:	mov	r0, r5
   138d8:	mov	r1, r4
   138dc:	mov	r2, r7
   138e0:	bl	1489c <table_get_cell_ptr@@Base>
   138e4:	ldr	r0, [r0]
   138e8:	cmp	r0, #0
   138ec:	beq	138f4 <table_remove_row@@Base+0x5c>
   138f0:	bl	11ea8 <free@plt>
   138f4:	add	r7, r7, #1
   138f8:	cmp	r6, r7
   138fc:	bne	138c0 <table_remove_row@@Base+0x28>
   13900:	ldr	r0, [r5, #16]
   13904:	ldr	r0, [r0, r4, lsl #2]
   13908:	cmp	r0, #0
   1390c:	beq	13914 <table_remove_row@@Base+0x7c>
   13910:	bl	11ea8 <free@plt>
   13914:	sub	r0, r8, #1
   13918:	cmp	r0, r4
   1391c:	ble	13940 <table_remove_row@@Base+0xa8>
   13920:	mov	r1, r4
   13924:	ldr	r2, [r5, #16]
   13928:	add	r3, r2, r1, lsl #2
   1392c:	ldr	r3, [r3, #4]
   13930:	str	r3, [r2, r1, lsl #2]
   13934:	add	r1, r1, #1
   13938:	cmp	r0, r1
   1393c:	bne	13924 <table_remove_row@@Base+0x8c>
   13940:	ldr	r0, [r5, #20]
   13944:	ldr	r1, [r5, #24]
   13948:	sub	r0, r0, #1
   1394c:	udiv	r2, r0, r1
   13950:	str	r0, [r5, #20]
   13954:	mls	r0, r2, r1, r0
   13958:	cmp	r0, #0
   1395c:	bne	1397c <table_remove_row@@Base+0xe4>
   13960:	ldr	r2, [r5, #28]
   13964:	ldr	r0, [r5, #16]
   13968:	sub	r1, r2, r1
   1396c:	str	r1, [r5, #28]
   13970:	lsl	r1, r1, #2
   13974:	bl	11eb4 <realloc@plt>
   13978:	str	r0, [r5, #16]
   1397c:	mov	r0, r5
   13980:	mov	r1, r4
   13984:	mvn	r2, #0
   13988:	mov	r3, #4
   1398c:	bl	129c8 <table_notify@@Base>
   13990:	mov	r0, #0
   13994:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013998 <table_set_row_ptr@@Base>:
   13998:	ldr	r2, [r2]
   1399c:	ldr	r0, [r0, #16]
   139a0:	str	r2, [r0, r1, lsl #2]
   139a4:	bx	lr

000139a8 <table_set@@Base>:
   139a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   139ac:	add	fp, sp, #24
   139b0:	mov	r8, r3
   139b4:	mov	r4, r2
   139b8:	mov	r9, r1
   139bc:	mov	r6, r0
   139c0:	bl	1489c <table_get_cell_ptr@@Base>
   139c4:	mov	r5, r0
   139c8:	mov	r0, r6
   139cc:	mov	r1, r4
   139d0:	bl	12a94 <table_get_col_ptr@@Base>
   139d4:	ldr	r1, [fp, #8]
   139d8:	mvn	r7, #0
   139dc:	cmp	r1, #23
   139e0:	bhi	13ca8 <table_set@@Base+0x300>
   139e4:	add	r2, pc, #4
   139e8:	ldr	r1, [r2, r1, lsl #2]
   139ec:	add	pc, r2, r1
   139f0:	andeq	r0, r0, r0, rrx
   139f4:	andeq	r0, r0, r0, ror r0
   139f8:	andeq	r0, r0, r0, lsl #1
   139fc:	muleq	r0, r0, r0
   13a00:	andeq	r0, r0, r0, lsr #1
   13a04:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a08:	andeq	r0, r0, r0, asr #1
   13a0c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a10:	andeq	r0, r0, r0, ror #1
   13a14:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a18:	andeq	r0, r0, r0, lsl #2
   13a1c:	andeq	r0, r0, r0, lsl r1
   13a20:	andeq	r0, r0, r8, asr #2
   13a24:	andeq	r0, r0, r8, asr r1
   13a28:	andeq	r0, r0, r8, ror #2
   13a2c:	andeq	r0, r0, r8, ror r1
   13a30:	andeq	r0, r0, r8, lsl #3
   13a34:	andeq	r0, r0, r0, asr #3
   13a38:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13a3c:	andeq	r0, r0, r0, lsl r2
   13a40:	andeq	r0, r0, r0, lsr #4
   13a44:	andeq	r0, r0, r0, lsr r2
   13a48:	andeq	r0, r0, ip, ror #4
   13a4c:	andeq	r0, r0, r0, asr #5
   13a50:	ldr	r0, [r0, #4]
   13a54:	cmp	r0, #0
   13a58:	bne	13ca8 <table_set@@Base+0x300>
   13a5c:	b	13b84 <table_set@@Base+0x1dc>
   13a60:	ldr	r0, [r0, #4]
   13a64:	cmp	r0, #1
   13a68:	beq	13b84 <table_set@@Base+0x1dc>
   13a6c:	b	13ca8 <table_set@@Base+0x300>
   13a70:	ldr	r0, [r0, #4]
   13a74:	cmp	r0, #2
   13a78:	beq	13c68 <table_set@@Base+0x2c0>
   13a7c:	b	13ca8 <table_set@@Base+0x300>
   13a80:	ldr	r0, [r0, #4]
   13a84:	cmp	r0, #3
   13a88:	beq	13c68 <table_set@@Base+0x2c0>
   13a8c:	b	13ca8 <table_set@@Base+0x300>
   13a90:	ldr	r0, [r0, #4]
   13a94:	cmp	r0, #4
   13a98:	beq	13b0c <table_set@@Base+0x164>
   13a9c:	b	13ca8 <table_set@@Base+0x300>
   13aa0:	ldr	r0, [r0, #4]
   13aa4:	cmp	r0, #5
   13aa8:	beq	13b0c <table_set@@Base+0x164>
   13aac:	b	13ca8 <table_set@@Base+0x300>
   13ab0:	ldr	r0, [r0, #4]
   13ab4:	cmp	r0, #6
   13ab8:	beq	13b84 <table_set@@Base+0x1dc>
   13abc:	b	13ca8 <table_set@@Base+0x300>
   13ac0:	ldr	r0, [r0, #4]
   13ac4:	cmp	r0, #7
   13ac8:	beq	13b84 <table_set@@Base+0x1dc>
   13acc:	b	13ca8 <table_set@@Base+0x300>
   13ad0:	ldr	r0, [r0, #4]
   13ad4:	cmp	r0, #8
   13ad8:	beq	13bcc <table_set@@Base+0x224>
   13adc:	b	13ca8 <table_set@@Base+0x300>
   13ae0:	ldr	r0, [r0, #4]
   13ae4:	cmp	r0, #9
   13ae8:	beq	13bcc <table_set@@Base+0x224>
   13aec:	b	13ca8 <table_set@@Base+0x300>
   13af0:	ldr	r0, [r0, #4]
   13af4:	cmp	r0, #10
   13af8:	beq	13b0c <table_set@@Base+0x164>
   13afc:	b	13ca8 <table_set@@Base+0x300>
   13b00:	ldr	r0, [r0, #4]
   13b04:	cmp	r0, #11
   13b08:	bne	13ca8 <table_set@@Base+0x300>
   13b0c:	ldr	r0, [r5]
   13b10:	cmp	r0, #0
   13b14:	bne	13b2c <table_set@@Base+0x184>
   13b18:	mov	r0, #2
   13b1c:	bl	11ecc <malloc@plt>
   13b20:	cmp	r0, #0
   13b24:	str	r0, [r5]
   13b28:	beq	13ca8 <table_set@@Base+0x300>
   13b2c:	ldrh	r1, [r8]
   13b30:	strh	r1, [r0]
   13b34:	b	13c90 <table_set@@Base+0x2e8>
   13b38:	ldr	r0, [r0, #4]
   13b3c:	cmp	r0, #12
   13b40:	beq	13b84 <table_set@@Base+0x1dc>
   13b44:	b	13ca8 <table_set@@Base+0x300>
   13b48:	ldr	r0, [r0, #4]
   13b4c:	cmp	r0, #13
   13b50:	beq	13b84 <table_set@@Base+0x1dc>
   13b54:	b	13ca8 <table_set@@Base+0x300>
   13b58:	ldr	r0, [r0, #4]
   13b5c:	cmp	r0, #14
   13b60:	beq	13bcc <table_set@@Base+0x224>
   13b64:	b	13ca8 <table_set@@Base+0x300>
   13b68:	ldr	r0, [r0, #4]
   13b6c:	cmp	r0, #15
   13b70:	beq	13bcc <table_set@@Base+0x224>
   13b74:	b	13ca8 <table_set@@Base+0x300>
   13b78:	ldr	r0, [r0, #4]
   13b7c:	cmp	r0, #16
   13b80:	bne	13ca8 <table_set@@Base+0x300>
   13b84:	ldr	r0, [r5]
   13b88:	cmp	r0, #0
   13b8c:	bne	13ba4 <table_set@@Base+0x1fc>
   13b90:	mov	r0, #4
   13b94:	bl	11ecc <malloc@plt>
   13b98:	cmp	r0, #0
   13b9c:	str	r0, [r5]
   13ba0:	beq	13ca8 <table_set@@Base+0x300>
   13ba4:	ldr	r1, [r8]
   13ba8:	str	r1, [r0]
   13bac:	b	13c90 <table_set@@Base+0x2e8>
   13bb0:	ldr	r0, [r0, #4]
   13bb4:	cmp	r0, #17
   13bb8:	beq	13bcc <table_set@@Base+0x224>
   13bbc:	b	13ca8 <table_set@@Base+0x300>
   13bc0:	ldr	r0, [r0, #4]
   13bc4:	cmp	r0, #18
   13bc8:	bne	13ca8 <table_set@@Base+0x300>
   13bcc:	ldr	r0, [r5]
   13bd0:	cmp	r0, #0
   13bd4:	bne	13bec <table_set@@Base+0x244>
   13bd8:	mov	r0, #8
   13bdc:	bl	11ecc <malloc@plt>
   13be0:	cmp	r0, #0
   13be4:	str	r0, [r5]
   13be8:	beq	13ca8 <table_set@@Base+0x300>
   13bec:	ldr	r1, [r8]
   13bf0:	ldr	r2, [r8, #4]
   13bf4:	str	r2, [r0, #4]
   13bf8:	str	r1, [r0]
   13bfc:	b	13c90 <table_set@@Base+0x2e8>
   13c00:	ldr	r0, [r0, #4]
   13c04:	cmp	r0, #19
   13c08:	beq	13c68 <table_set@@Base+0x2c0>
   13c0c:	b	13ca8 <table_set@@Base+0x300>
   13c10:	ldr	r0, [r0, #4]
   13c14:	cmp	r0, #20
   13c18:	beq	13c68 <table_set@@Base+0x2c0>
   13c1c:	b	13ca8 <table_set@@Base+0x300>
   13c20:	ldr	r0, [r0, #4]
   13c24:	cmp	r0, #21
   13c28:	bne	13ca8 <table_set@@Base+0x300>
   13c2c:	mov	r0, r8
   13c30:	bl	11ef0 <strlen@plt>
   13c34:	ldr	r2, [r5]
   13c38:	add	r1, r0, #1
   13c3c:	mov	r0, r2
   13c40:	bl	11eb4 <realloc@plt>
   13c44:	cmp	r0, #0
   13c48:	str	r0, [r5]
   13c4c:	beq	13ca8 <table_set@@Base+0x300>
   13c50:	mov	r1, r8
   13c54:	bl	11ec0 <strcpy@plt>
   13c58:	b	13c90 <table_set@@Base+0x2e8>
   13c5c:	ldr	r0, [r0, #4]
   13c60:	cmp	r0, #22
   13c64:	bne	13ca8 <table_set@@Base+0x300>
   13c68:	ldr	r0, [r5]
   13c6c:	cmp	r0, #0
   13c70:	bne	13c88 <table_set@@Base+0x2e0>
   13c74:	mov	r0, #1
   13c78:	bl	11ecc <malloc@plt>
   13c7c:	cmp	r0, #0
   13c80:	str	r0, [r5]
   13c84:	beq	13ca8 <table_set@@Base+0x300>
   13c88:	ldrb	r1, [r8]
   13c8c:	strb	r1, [r0]
   13c90:	mov	r0, r6
   13c94:	mov	r1, r9
   13c98:	mov	r2, r4
   13c9c:	mov	r3, #1
   13ca0:	bl	129c8 <table_notify@@Base>
   13ca4:	mov	r7, #0
   13ca8:	mov	r0, r7
   13cac:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13cb0:	ldr	r0, [r0, #4]
   13cb4:	cmp	r0, #23
   13cb8:	bne	13ca8 <table_set@@Base+0x300>
   13cbc:	str	r8, [r5]
   13cc0:	b	13c90 <table_set@@Base+0x2e8>

00013cc4 <table_set_bool@@Base>:
   13cc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13cc8:	add	fp, sp, #24
   13ccc:	mov	r8, r3
   13cd0:	mov	r4, r2
   13cd4:	mov	r9, r1
   13cd8:	mov	r6, r0
   13cdc:	bl	1489c <table_get_cell_ptr@@Base>
   13ce0:	mov	r5, r0
   13ce4:	mov	r0, r6
   13ce8:	mov	r1, r4
   13cec:	bl	12a94 <table_get_col_ptr@@Base>
   13cf0:	ldr	r0, [r0, #4]
   13cf4:	mvn	r7, #0
   13cf8:	cmp	r0, #22
   13cfc:	bne	13d3c <table_set_bool@@Base+0x78>
   13d00:	ldr	r0, [r5]
   13d04:	cmp	r0, #0
   13d08:	bne	13d20 <table_set_bool@@Base+0x5c>
   13d0c:	mov	r0, #1
   13d10:	bl	11ecc <malloc@plt>
   13d14:	cmp	r0, #0
   13d18:	str	r0, [r5]
   13d1c:	beq	13d3c <table_set_bool@@Base+0x78>
   13d20:	strb	r8, [r0]
   13d24:	mov	r0, r6
   13d28:	mov	r1, r9
   13d2c:	mov	r2, r4
   13d30:	mov	r3, #1
   13d34:	bl	129c8 <table_notify@@Base>
   13d38:	mov	r7, #0
   13d3c:	mov	r0, r7
   13d40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013d44 <table_set_int@@Base>:
   13d44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13d48:	add	fp, sp, #24
   13d4c:	mov	r8, r3
   13d50:	mov	r4, r2
   13d54:	mov	r5, r1
   13d58:	mov	r6, r0
   13d5c:	bl	1489c <table_get_cell_ptr@@Base>
   13d60:	mov	r9, r0
   13d64:	mov	r0, r6
   13d68:	mov	r1, r4
   13d6c:	bl	12a94 <table_get_col_ptr@@Base>
   13d70:	ldr	r0, [r0, #4]
   13d74:	mvn	r7, #0
   13d78:	cmp	r0, #0
   13d7c:	bne	13dbc <table_set_int@@Base+0x78>
   13d80:	ldr	r0, [r9]
   13d84:	cmp	r0, #0
   13d88:	bne	13da0 <table_set_int@@Base+0x5c>
   13d8c:	mov	r0, #4
   13d90:	bl	11ecc <malloc@plt>
   13d94:	cmp	r0, #0
   13d98:	str	r0, [r9]
   13d9c:	beq	13dbc <table_set_int@@Base+0x78>
   13da0:	str	r8, [r0]
   13da4:	mov	r0, r6
   13da8:	mov	r1, r5
   13dac:	mov	r2, r4
   13db0:	mov	r3, #1
   13db4:	bl	129c8 <table_notify@@Base>
   13db8:	mov	r7, #0
   13dbc:	mov	r0, r7
   13dc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013dc4 <table_set_uint@@Base>:
   13dc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13dc8:	add	fp, sp, #24
   13dcc:	mov	r8, r3
   13dd0:	mov	r4, r2
   13dd4:	mov	r5, r1
   13dd8:	mov	r6, r0
   13ddc:	bl	1489c <table_get_cell_ptr@@Base>
   13de0:	mov	r9, r0
   13de4:	mov	r0, r6
   13de8:	mov	r1, r4
   13dec:	bl	12a94 <table_get_col_ptr@@Base>
   13df0:	ldr	r0, [r0, #4]
   13df4:	mvn	r7, #0
   13df8:	cmp	r0, #1
   13dfc:	bne	13e3c <table_set_uint@@Base+0x78>
   13e00:	ldr	r0, [r9]
   13e04:	cmp	r0, #0
   13e08:	bne	13e20 <table_set_uint@@Base+0x5c>
   13e0c:	mov	r0, #4
   13e10:	bl	11ecc <malloc@plt>
   13e14:	cmp	r0, #0
   13e18:	str	r0, [r9]
   13e1c:	beq	13e3c <table_set_uint@@Base+0x78>
   13e20:	str	r8, [r0]
   13e24:	mov	r0, r6
   13e28:	mov	r1, r5
   13e2c:	mov	r2, r4
   13e30:	mov	r3, #1
   13e34:	bl	129c8 <table_notify@@Base>
   13e38:	mov	r7, #0
   13e3c:	mov	r0, r7
   13e40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e44 <table_set_int8@@Base>:
   13e44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e48:	add	fp, sp, #24
   13e4c:	mov	r8, r3
   13e50:	mov	r4, r2
   13e54:	mov	r9, r1
   13e58:	mov	r6, r0
   13e5c:	bl	1489c <table_get_cell_ptr@@Base>
   13e60:	mov	r5, r0
   13e64:	mov	r0, r6
   13e68:	mov	r1, r4
   13e6c:	bl	12a94 <table_get_col_ptr@@Base>
   13e70:	ldr	r0, [r0, #4]
   13e74:	mvn	r7, #0
   13e78:	cmp	r0, #2
   13e7c:	bne	13ebc <table_set_int8@@Base+0x78>
   13e80:	ldr	r0, [r5]
   13e84:	cmp	r0, #0
   13e88:	bne	13ea0 <table_set_int8@@Base+0x5c>
   13e8c:	mov	r0, #1
   13e90:	bl	11ecc <malloc@plt>
   13e94:	cmp	r0, #0
   13e98:	str	r0, [r5]
   13e9c:	beq	13ebc <table_set_int8@@Base+0x78>
   13ea0:	strb	r8, [r0]
   13ea4:	mov	r0, r6
   13ea8:	mov	r1, r9
   13eac:	mov	r2, r4
   13eb0:	mov	r3, #1
   13eb4:	bl	129c8 <table_notify@@Base>
   13eb8:	mov	r7, #0
   13ebc:	mov	r0, r7
   13ec0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ec4 <table_set_uint8@@Base>:
   13ec4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ec8:	add	fp, sp, #24
   13ecc:	mov	r8, r3
   13ed0:	mov	r4, r2
   13ed4:	mov	r9, r1
   13ed8:	mov	r6, r0
   13edc:	bl	1489c <table_get_cell_ptr@@Base>
   13ee0:	mov	r5, r0
   13ee4:	mov	r0, r6
   13ee8:	mov	r1, r4
   13eec:	bl	12a94 <table_get_col_ptr@@Base>
   13ef0:	ldr	r0, [r0, #4]
   13ef4:	mvn	r7, #0
   13ef8:	cmp	r0, #3
   13efc:	bne	13f3c <table_set_uint8@@Base+0x78>
   13f00:	ldr	r0, [r5]
   13f04:	cmp	r0, #0
   13f08:	bne	13f20 <table_set_uint8@@Base+0x5c>
   13f0c:	mov	r0, #1
   13f10:	bl	11ecc <malloc@plt>
   13f14:	cmp	r0, #0
   13f18:	str	r0, [r5]
   13f1c:	beq	13f3c <table_set_uint8@@Base+0x78>
   13f20:	strb	r8, [r0]
   13f24:	mov	r0, r6
   13f28:	mov	r1, r9
   13f2c:	mov	r2, r4
   13f30:	mov	r3, #1
   13f34:	bl	129c8 <table_notify@@Base>
   13f38:	mov	r7, #0
   13f3c:	mov	r0, r7
   13f40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f44 <table_set_int16@@Base>:
   13f44:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f48:	add	fp, sp, #24
   13f4c:	mov	r8, r3
   13f50:	mov	r4, r2
   13f54:	mov	r9, r1
   13f58:	mov	r6, r0
   13f5c:	bl	1489c <table_get_cell_ptr@@Base>
   13f60:	mov	r5, r0
   13f64:	mov	r0, r6
   13f68:	mov	r1, r4
   13f6c:	bl	12a94 <table_get_col_ptr@@Base>
   13f70:	ldr	r0, [r0, #4]
   13f74:	mvn	r7, #0
   13f78:	cmp	r0, #4
   13f7c:	bne	13fbc <table_set_int16@@Base+0x78>
   13f80:	ldr	r0, [r5]
   13f84:	cmp	r0, #0
   13f88:	bne	13fa0 <table_set_int16@@Base+0x5c>
   13f8c:	mov	r0, #2
   13f90:	bl	11ecc <malloc@plt>
   13f94:	cmp	r0, #0
   13f98:	str	r0, [r5]
   13f9c:	beq	13fbc <table_set_int16@@Base+0x78>
   13fa0:	strh	r8, [r0]
   13fa4:	mov	r0, r6
   13fa8:	mov	r1, r9
   13fac:	mov	r2, r4
   13fb0:	mov	r3, #1
   13fb4:	bl	129c8 <table_notify@@Base>
   13fb8:	mov	r7, #0
   13fbc:	mov	r0, r7
   13fc0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013fc4 <table_set_uint16@@Base>:
   13fc4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13fc8:	add	fp, sp, #24
   13fcc:	mov	r8, r3
   13fd0:	mov	r4, r2
   13fd4:	mov	r9, r1
   13fd8:	mov	r6, r0
   13fdc:	bl	1489c <table_get_cell_ptr@@Base>
   13fe0:	mov	r5, r0
   13fe4:	mov	r0, r6
   13fe8:	mov	r1, r4
   13fec:	bl	12a94 <table_get_col_ptr@@Base>
   13ff0:	ldr	r0, [r0, #4]
   13ff4:	mvn	r7, #0
   13ff8:	cmp	r0, #5
   13ffc:	bne	1403c <table_set_uint16@@Base+0x78>
   14000:	ldr	r0, [r5]
   14004:	cmp	r0, #0
   14008:	bne	14020 <table_set_uint16@@Base+0x5c>
   1400c:	mov	r0, #2
   14010:	bl	11ecc <malloc@plt>
   14014:	cmp	r0, #0
   14018:	str	r0, [r5]
   1401c:	beq	1403c <table_set_uint16@@Base+0x78>
   14020:	strh	r8, [r0]
   14024:	mov	r0, r6
   14028:	mov	r1, r9
   1402c:	mov	r2, r4
   14030:	mov	r3, #1
   14034:	bl	129c8 <table_notify@@Base>
   14038:	mov	r7, #0
   1403c:	mov	r0, r7
   14040:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014044 <table_set_int32@@Base>:
   14044:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14048:	add	fp, sp, #24
   1404c:	mov	r8, r3
   14050:	mov	r4, r2
   14054:	mov	r5, r1
   14058:	mov	r6, r0
   1405c:	bl	1489c <table_get_cell_ptr@@Base>
   14060:	mov	r9, r0
   14064:	mov	r0, r6
   14068:	mov	r1, r4
   1406c:	bl	12a94 <table_get_col_ptr@@Base>
   14070:	ldr	r0, [r0, #4]
   14074:	mvn	r7, #0
   14078:	cmp	r0, #6
   1407c:	bne	140bc <table_set_int32@@Base+0x78>
   14080:	ldr	r0, [r9]
   14084:	cmp	r0, #0
   14088:	bne	140a0 <table_set_int32@@Base+0x5c>
   1408c:	mov	r0, #4
   14090:	bl	11ecc <malloc@plt>
   14094:	cmp	r0, #0
   14098:	str	r0, [r9]
   1409c:	beq	140bc <table_set_int32@@Base+0x78>
   140a0:	str	r8, [r0]
   140a4:	mov	r0, r6
   140a8:	mov	r1, r5
   140ac:	mov	r2, r4
   140b0:	mov	r3, #1
   140b4:	bl	129c8 <table_notify@@Base>
   140b8:	mov	r7, #0
   140bc:	mov	r0, r7
   140c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140c4 <table_set_uint32@@Base>:
   140c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140c8:	add	fp, sp, #24
   140cc:	mov	r8, r3
   140d0:	mov	r4, r2
   140d4:	mov	r5, r1
   140d8:	mov	r6, r0
   140dc:	bl	1489c <table_get_cell_ptr@@Base>
   140e0:	mov	r9, r0
   140e4:	mov	r0, r6
   140e8:	mov	r1, r4
   140ec:	bl	12a94 <table_get_col_ptr@@Base>
   140f0:	ldr	r0, [r0, #4]
   140f4:	mvn	r7, #0
   140f8:	cmp	r0, #7
   140fc:	bne	1413c <table_set_uint32@@Base+0x78>
   14100:	ldr	r0, [r9]
   14104:	cmp	r0, #0
   14108:	bne	14120 <table_set_uint32@@Base+0x5c>
   1410c:	mov	r0, #4
   14110:	bl	11ecc <malloc@plt>
   14114:	cmp	r0, #0
   14118:	str	r0, [r9]
   1411c:	beq	1413c <table_set_uint32@@Base+0x78>
   14120:	str	r8, [r0]
   14124:	mov	r0, r6
   14128:	mov	r1, r5
   1412c:	mov	r2, r4
   14130:	mov	r3, #1
   14134:	bl	129c8 <table_notify@@Base>
   14138:	mov	r7, #0
   1413c:	mov	r0, r7
   14140:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014144 <table_set_int64@@Base>:
   14144:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14148:	add	fp, sp, #24
   1414c:	mov	r4, r2
   14150:	mov	r8, r1
   14154:	mov	r6, r0
   14158:	bl	1489c <table_get_cell_ptr@@Base>
   1415c:	mov	r5, r0
   14160:	mov	r0, r6
   14164:	mov	r1, r4
   14168:	bl	12a94 <table_get_col_ptr@@Base>
   1416c:	ldr	r0, [r0, #4]
   14170:	mvn	r7, #0
   14174:	cmp	r0, #8
   14178:	bne	141c4 <table_set_int64@@Base+0x80>
   1417c:	ldr	r0, [r5]
   14180:	cmp	r0, #0
   14184:	bne	1419c <table_set_int64@@Base+0x58>
   14188:	mov	r0, #8
   1418c:	bl	11ecc <malloc@plt>
   14190:	cmp	r0, #0
   14194:	str	r0, [r5]
   14198:	beq	141c4 <table_set_int64@@Base+0x80>
   1419c:	ldr	r1, [fp, #12]
   141a0:	ldr	r2, [fp, #8]
   141a4:	mov	r3, #1
   141a8:	str	r2, [r0]
   141ac:	str	r1, [r0, #4]
   141b0:	mov	r0, r6
   141b4:	mov	r1, r8
   141b8:	mov	r2, r4
   141bc:	bl	129c8 <table_notify@@Base>
   141c0:	mov	r7, #0
   141c4:	mov	r0, r7
   141c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000141cc <table_set_uint64@@Base>:
   141cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   141d0:	add	fp, sp, #24
   141d4:	mov	r4, r2
   141d8:	mov	r8, r1
   141dc:	mov	r6, r0
   141e0:	bl	1489c <table_get_cell_ptr@@Base>
   141e4:	mov	r5, r0
   141e8:	mov	r0, r6
   141ec:	mov	r1, r4
   141f0:	bl	12a94 <table_get_col_ptr@@Base>
   141f4:	ldr	r0, [r0, #4]
   141f8:	mvn	r7, #0
   141fc:	cmp	r0, #9
   14200:	bne	1424c <table_set_uint64@@Base+0x80>
   14204:	ldr	r0, [r5]
   14208:	cmp	r0, #0
   1420c:	bne	14224 <table_set_uint64@@Base+0x58>
   14210:	mov	r0, #8
   14214:	bl	11ecc <malloc@plt>
   14218:	cmp	r0, #0
   1421c:	str	r0, [r5]
   14220:	beq	1424c <table_set_uint64@@Base+0x80>
   14224:	ldr	r1, [fp, #12]
   14228:	ldr	r2, [fp, #8]
   1422c:	mov	r3, #1
   14230:	str	r2, [r0]
   14234:	str	r1, [r0, #4]
   14238:	mov	r0, r6
   1423c:	mov	r1, r8
   14240:	mov	r2, r4
   14244:	bl	129c8 <table_notify@@Base>
   14248:	mov	r7, #0
   1424c:	mov	r0, r7
   14250:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014254 <table_set_short@@Base>:
   14254:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14258:	add	fp, sp, #24
   1425c:	mov	r8, r3
   14260:	mov	r4, r2
   14264:	mov	r9, r1
   14268:	mov	r6, r0
   1426c:	bl	1489c <table_get_cell_ptr@@Base>
   14270:	mov	r5, r0
   14274:	mov	r0, r6
   14278:	mov	r1, r4
   1427c:	bl	12a94 <table_get_col_ptr@@Base>
   14280:	ldr	r0, [r0, #4]
   14284:	mvn	r7, #0
   14288:	cmp	r0, #10
   1428c:	bne	142cc <table_set_short@@Base+0x78>
   14290:	ldr	r0, [r5]
   14294:	cmp	r0, #0
   14298:	bne	142b0 <table_set_short@@Base+0x5c>
   1429c:	mov	r0, #2
   142a0:	bl	11ecc <malloc@plt>
   142a4:	cmp	r0, #0
   142a8:	str	r0, [r5]
   142ac:	beq	142cc <table_set_short@@Base+0x78>
   142b0:	strh	r8, [r0]
   142b4:	mov	r0, r6
   142b8:	mov	r1, r9
   142bc:	mov	r2, r4
   142c0:	mov	r3, #1
   142c4:	bl	129c8 <table_notify@@Base>
   142c8:	mov	r7, #0
   142cc:	mov	r0, r7
   142d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000142d4 <table_set_ushort@@Base>:
   142d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   142d8:	add	fp, sp, #24
   142dc:	mov	r8, r3
   142e0:	mov	r4, r2
   142e4:	mov	r9, r1
   142e8:	mov	r6, r0
   142ec:	bl	1489c <table_get_cell_ptr@@Base>
   142f0:	mov	r5, r0
   142f4:	mov	r0, r6
   142f8:	mov	r1, r4
   142fc:	bl	12a94 <table_get_col_ptr@@Base>
   14300:	ldr	r0, [r0, #4]
   14304:	mvn	r7, #0
   14308:	cmp	r0, #11
   1430c:	bne	1434c <table_set_ushort@@Base+0x78>
   14310:	ldr	r0, [r5]
   14314:	cmp	r0, #0
   14318:	bne	14330 <table_set_ushort@@Base+0x5c>
   1431c:	mov	r0, #2
   14320:	bl	11ecc <malloc@plt>
   14324:	cmp	r0, #0
   14328:	str	r0, [r5]
   1432c:	beq	1434c <table_set_ushort@@Base+0x78>
   14330:	strh	r8, [r0]
   14334:	mov	r0, r6
   14338:	mov	r1, r9
   1433c:	mov	r2, r4
   14340:	mov	r3, #1
   14344:	bl	129c8 <table_notify@@Base>
   14348:	mov	r7, #0
   1434c:	mov	r0, r7
   14350:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014354 <table_set_long@@Base>:
   14354:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14358:	add	fp, sp, #24
   1435c:	mov	r8, r3
   14360:	mov	r4, r2
   14364:	mov	r5, r1
   14368:	mov	r6, r0
   1436c:	bl	1489c <table_get_cell_ptr@@Base>
   14370:	mov	r9, r0
   14374:	mov	r0, r6
   14378:	mov	r1, r4
   1437c:	bl	12a94 <table_get_col_ptr@@Base>
   14380:	ldr	r0, [r0, #4]
   14384:	mvn	r7, #0
   14388:	cmp	r0, #12
   1438c:	bne	143cc <table_set_long@@Base+0x78>
   14390:	ldr	r0, [r9]
   14394:	cmp	r0, #0
   14398:	bne	143b0 <table_set_long@@Base+0x5c>
   1439c:	mov	r0, #4
   143a0:	bl	11ecc <malloc@plt>
   143a4:	cmp	r0, #0
   143a8:	str	r0, [r9]
   143ac:	beq	143cc <table_set_long@@Base+0x78>
   143b0:	str	r8, [r0]
   143b4:	mov	r0, r6
   143b8:	mov	r1, r5
   143bc:	mov	r2, r4
   143c0:	mov	r3, #1
   143c4:	bl	129c8 <table_notify@@Base>
   143c8:	mov	r7, #0
   143cc:	mov	r0, r7
   143d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000143d4 <table_set_ulong@@Base>:
   143d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   143d8:	add	fp, sp, #24
   143dc:	mov	r8, r3
   143e0:	mov	r4, r2
   143e4:	mov	r5, r1
   143e8:	mov	r6, r0
   143ec:	bl	1489c <table_get_cell_ptr@@Base>
   143f0:	mov	r9, r0
   143f4:	mov	r0, r6
   143f8:	mov	r1, r4
   143fc:	bl	12a94 <table_get_col_ptr@@Base>
   14400:	ldr	r0, [r0, #4]
   14404:	mvn	r7, #0
   14408:	cmp	r0, #13
   1440c:	bne	1444c <table_set_ulong@@Base+0x78>
   14410:	ldr	r0, [r9]
   14414:	cmp	r0, #0
   14418:	bne	14430 <table_set_ulong@@Base+0x5c>
   1441c:	mov	r0, #4
   14420:	bl	11ecc <malloc@plt>
   14424:	cmp	r0, #0
   14428:	str	r0, [r9]
   1442c:	beq	1444c <table_set_ulong@@Base+0x78>
   14430:	str	r8, [r0]
   14434:	mov	r0, r6
   14438:	mov	r1, r5
   1443c:	mov	r2, r4
   14440:	mov	r3, #1
   14444:	bl	129c8 <table_notify@@Base>
   14448:	mov	r7, #0
   1444c:	mov	r0, r7
   14450:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014454 <table_set_llong@@Base>:
   14454:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14458:	add	fp, sp, #24
   1445c:	mov	r4, r2
   14460:	mov	r8, r1
   14464:	mov	r6, r0
   14468:	bl	1489c <table_get_cell_ptr@@Base>
   1446c:	mov	r5, r0
   14470:	mov	r0, r6
   14474:	mov	r1, r4
   14478:	bl	12a94 <table_get_col_ptr@@Base>
   1447c:	ldr	r0, [r0, #4]
   14480:	mvn	r7, #0
   14484:	cmp	r0, #14
   14488:	bne	144d4 <table_set_llong@@Base+0x80>
   1448c:	ldr	r0, [r5]
   14490:	cmp	r0, #0
   14494:	bne	144ac <table_set_llong@@Base+0x58>
   14498:	mov	r0, #8
   1449c:	bl	11ecc <malloc@plt>
   144a0:	cmp	r0, #0
   144a4:	str	r0, [r5]
   144a8:	beq	144d4 <table_set_llong@@Base+0x80>
   144ac:	ldr	r1, [fp, #12]
   144b0:	ldr	r2, [fp, #8]
   144b4:	mov	r3, #1
   144b8:	str	r2, [r0]
   144bc:	str	r1, [r0, #4]
   144c0:	mov	r0, r6
   144c4:	mov	r1, r8
   144c8:	mov	r2, r4
   144cc:	bl	129c8 <table_notify@@Base>
   144d0:	mov	r7, #0
   144d4:	mov	r0, r7
   144d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000144dc <table_set_ullong@@Base>:
   144dc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   144e0:	add	fp, sp, #24
   144e4:	mov	r4, r2
   144e8:	mov	r8, r1
   144ec:	mov	r6, r0
   144f0:	bl	1489c <table_get_cell_ptr@@Base>
   144f4:	mov	r5, r0
   144f8:	mov	r0, r6
   144fc:	mov	r1, r4
   14500:	bl	12a94 <table_get_col_ptr@@Base>
   14504:	ldr	r0, [r0, #4]
   14508:	mvn	r7, #0
   1450c:	cmp	r0, #15
   14510:	bne	1455c <table_set_ullong@@Base+0x80>
   14514:	ldr	r0, [r5]
   14518:	cmp	r0, #0
   1451c:	bne	14534 <table_set_ullong@@Base+0x58>
   14520:	mov	r0, #8
   14524:	bl	11ecc <malloc@plt>
   14528:	cmp	r0, #0
   1452c:	str	r0, [r5]
   14530:	beq	1455c <table_set_ullong@@Base+0x80>
   14534:	ldr	r1, [fp, #12]
   14538:	ldr	r2, [fp, #8]
   1453c:	mov	r3, #1
   14540:	str	r2, [r0]
   14544:	str	r1, [r0, #4]
   14548:	mov	r0, r6
   1454c:	mov	r1, r8
   14550:	mov	r2, r4
   14554:	bl	129c8 <table_notify@@Base>
   14558:	mov	r7, #0
   1455c:	mov	r0, r7
   14560:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014564 <table_set_float@@Base>:
   14564:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14568:	add	fp, sp, #24
   1456c:	vpush	{d8}
   14570:	vmov.f32	s16, s0
   14574:	mov	r4, r2
   14578:	mov	r8, r1
   1457c:	mov	r6, r0
   14580:	bl	1489c <table_get_cell_ptr@@Base>
   14584:	mov	r5, r0
   14588:	mov	r0, r6
   1458c:	mov	r1, r4
   14590:	bl	12a94 <table_get_col_ptr@@Base>
   14594:	ldr	r0, [r0, #4]
   14598:	mvn	r7, #0
   1459c:	cmp	r0, #16
   145a0:	bne	145e4 <table_set_float@@Base+0x80>
   145a4:	ldr	r0, [r5]
   145a8:	cmp	r0, #0
   145ac:	bne	145c4 <table_set_float@@Base+0x60>
   145b0:	mov	r0, #4
   145b4:	bl	11ecc <malloc@plt>
   145b8:	cmp	r0, #0
   145bc:	str	r0, [r5]
   145c0:	beq	145e4 <table_set_float@@Base+0x80>
   145c4:	vmov	r1, s16
   145c8:	mov	r2, r4
   145cc:	mov	r3, #1
   145d0:	str	r1, [r0]
   145d4:	mov	r0, r6
   145d8:	mov	r1, r8
   145dc:	bl	129c8 <table_notify@@Base>
   145e0:	mov	r7, #0
   145e4:	mov	r0, r7
   145e8:	vpop	{d8}
   145ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000145f0 <table_set_double@@Base>:
   145f0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   145f4:	add	fp, sp, #24
   145f8:	vpush	{d8}
   145fc:	vorr	d8, d0, d0
   14600:	mov	r4, r2
   14604:	mov	r5, r1
   14608:	mov	r6, r0
   1460c:	bl	1489c <table_get_cell_ptr@@Base>
   14610:	mov	r8, r0
   14614:	mov	r0, r6
   14618:	mov	r1, r4
   1461c:	bl	12a94 <table_get_col_ptr@@Base>
   14620:	ldr	r0, [r0, #4]
   14624:	mvn	r7, #0
   14628:	cmp	r0, #17
   1462c:	bne	1466c <table_set_double@@Base+0x7c>
   14630:	ldr	r0, [r8]
   14634:	cmp	r0, #0
   14638:	bne	14650 <table_set_double@@Base+0x60>
   1463c:	mov	r0, #8
   14640:	bl	11ecc <malloc@plt>
   14644:	cmp	r0, #0
   14648:	str	r0, [r8]
   1464c:	beq	1466c <table_set_double@@Base+0x7c>
   14650:	vst1.8	{d8}, [r0]
   14654:	mov	r0, r6
   14658:	mov	r1, r5
   1465c:	mov	r2, r4
   14660:	mov	r3, #1
   14664:	bl	129c8 <table_notify@@Base>
   14668:	mov	r7, #0
   1466c:	mov	r0, r7
   14670:	vpop	{d8}
   14674:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014678 <table_set_ldouble@@Base>:
   14678:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1467c:	add	fp, sp, #24
   14680:	vpush	{d8}
   14684:	vorr	d8, d0, d0
   14688:	mov	r4, r2
   1468c:	mov	r5, r1
   14690:	mov	r6, r0
   14694:	bl	1489c <table_get_cell_ptr@@Base>
   14698:	mov	r8, r0
   1469c:	mov	r0, r6
   146a0:	mov	r1, r4
   146a4:	bl	12a94 <table_get_col_ptr@@Base>
   146a8:	ldr	r0, [r0, #4]
   146ac:	mvn	r7, #0
   146b0:	cmp	r0, #18
   146b4:	bne	146f4 <table_set_ldouble@@Base+0x7c>
   146b8:	ldr	r0, [r8]
   146bc:	cmp	r0, #0
   146c0:	bne	146d8 <table_set_ldouble@@Base+0x60>
   146c4:	mov	r0, #8
   146c8:	bl	11ecc <malloc@plt>
   146cc:	cmp	r0, #0
   146d0:	str	r0, [r8]
   146d4:	beq	146f4 <table_set_ldouble@@Base+0x7c>
   146d8:	vst1.8	{d8}, [r0]
   146dc:	mov	r0, r6
   146e0:	mov	r1, r5
   146e4:	mov	r2, r4
   146e8:	mov	r3, #1
   146ec:	bl	129c8 <table_notify@@Base>
   146f0:	mov	r7, #0
   146f4:	mov	r0, r7
   146f8:	vpop	{d8}
   146fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014700 <table_set_string@@Base>:
   14700:	push	{fp, lr}
   14704:	mov	fp, sp
   14708:	sub	sp, sp, #8
   1470c:	mov	ip, #21
   14710:	str	ip, [sp]
   14714:	bl	139a8 <table_set@@Base>
   14718:	mov	sp, fp
   1471c:	pop	{fp, pc}

00014720 <table_set_char@@Base>:
   14720:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14724:	add	fp, sp, #24
   14728:	mov	r8, r3
   1472c:	mov	r4, r2
   14730:	mov	r9, r1
   14734:	mov	r6, r0
   14738:	bl	1489c <table_get_cell_ptr@@Base>
   1473c:	mov	r5, r0
   14740:	mov	r0, r6
   14744:	mov	r1, r4
   14748:	bl	12a94 <table_get_col_ptr@@Base>
   1474c:	ldr	r0, [r0, #4]
   14750:	mvn	r7, #0
   14754:	cmp	r0, #19
   14758:	bne	14798 <table_set_char@@Base+0x78>
   1475c:	ldr	r0, [r5]
   14760:	cmp	r0, #0
   14764:	bne	1477c <table_set_char@@Base+0x5c>
   14768:	mov	r0, #1
   1476c:	bl	11ecc <malloc@plt>
   14770:	cmp	r0, #0
   14774:	str	r0, [r5]
   14778:	beq	14798 <table_set_char@@Base+0x78>
   1477c:	strb	r8, [r0]
   14780:	mov	r0, r6
   14784:	mov	r1, r9
   14788:	mov	r2, r4
   1478c:	mov	r3, #1
   14790:	bl	129c8 <table_notify@@Base>
   14794:	mov	r7, #0
   14798:	mov	r0, r7
   1479c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000147a0 <table_set_uchar@@Base>:
   147a0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   147a4:	add	fp, sp, #24
   147a8:	mov	r8, r3
   147ac:	mov	r4, r2
   147b0:	mov	r9, r1
   147b4:	mov	r6, r0
   147b8:	bl	1489c <table_get_cell_ptr@@Base>
   147bc:	mov	r5, r0
   147c0:	mov	r0, r6
   147c4:	mov	r1, r4
   147c8:	bl	12a94 <table_get_col_ptr@@Base>
   147cc:	ldr	r0, [r0, #4]
   147d0:	mvn	r7, #0
   147d4:	cmp	r0, #20
   147d8:	bne	14818 <table_set_uchar@@Base+0x78>
   147dc:	ldr	r0, [r5]
   147e0:	cmp	r0, #0
   147e4:	bne	147fc <table_set_uchar@@Base+0x5c>
   147e8:	mov	r0, #1
   147ec:	bl	11ecc <malloc@plt>
   147f0:	cmp	r0, #0
   147f4:	str	r0, [r5]
   147f8:	beq	14818 <table_set_uchar@@Base+0x78>
   147fc:	strb	r8, [r0]
   14800:	mov	r0, r6
   14804:	mov	r1, r9
   14808:	mov	r2, r4
   1480c:	mov	r3, #1
   14810:	bl	129c8 <table_notify@@Base>
   14814:	mov	r7, #0
   14818:	mov	r0, r7
   1481c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014820 <table_set_ptr@@Base>:
   14820:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14824:	add	fp, sp, #24
   14828:	mov	r8, r3
   1482c:	mov	r4, r2
   14830:	mov	r5, r1
   14834:	mov	r6, r0
   14838:	bl	1489c <table_get_cell_ptr@@Base>
   1483c:	mov	r7, r0
   14840:	mov	r0, r6
   14844:	mov	r1, r4
   14848:	bl	12a94 <table_get_col_ptr@@Base>
   1484c:	ldr	r1, [r0, #4]
   14850:	mvn	r0, #0
   14854:	cmp	r1, #23
   14858:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1485c:	mov	r0, r6
   14860:	mov	r1, r5
   14864:	mov	r2, r4
   14868:	mov	r3, #1
   1486c:	str	r8, [r7]
   14870:	bl	129c8 <table_notify@@Base>
   14874:	mov	r0, #0
   14878:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001487c <table_cell_init@@Base>:
   1487c:	push	{r4, sl, fp, lr}
   14880:	add	fp, sp, #8
   14884:	mov	r4, r2
   14888:	bl	1377c <table_get_row_ptr@@Base>
   1488c:	ldr	r0, [r0]
   14890:	mov	r1, #0
   14894:	str	r1, [r0, r4, lsl #2]
   14898:	pop	{r4, sl, fp, pc}

0001489c <table_get_cell_ptr@@Base>:
   1489c:	push	{r4, sl, fp, lr}
   148a0:	add	fp, sp, #8
   148a4:	mov	r4, r2
   148a8:	bl	1377c <table_get_row_ptr@@Base>
   148ac:	ldr	r0, [r0]
   148b0:	add	r0, r0, r4, lsl #2
   148b4:	pop	{r4, sl, fp, pc}

000148b8 <table_cell_destroy@@Base>:
   148b8:	push	{r4, r5, r6, sl, fp, lr}
   148bc:	add	fp, sp, #16
   148c0:	mov	r5, r1
   148c4:	mov	r1, r2
   148c8:	mov	r4, r2
   148cc:	mov	r6, r0
   148d0:	bl	12b30 <table_get_column_data_type@@Base>
   148d4:	cmp	r0, #23
   148d8:	popeq	{r4, r5, r6, sl, fp, pc}
   148dc:	mov	r0, r6
   148e0:	mov	r1, r5
   148e4:	bl	1377c <table_get_row_ptr@@Base>
   148e8:	ldr	r0, [r0]
   148ec:	ldr	r0, [r0, r4, lsl #2]
   148f0:	cmp	r0, #0
   148f4:	beq	14900 <table_cell_destroy@@Base+0x48>
   148f8:	pop	{r4, r5, r6, sl, fp, lr}
   148fc:	b	11ea8 <free@plt>
   14900:	pop	{r4, r5, r6, sl, fp, pc}

00014904 <table_cell_to_buffer@@Base>:
   14904:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14908:	add	fp, sp, #24
   1490c:	sub	sp, sp, #8
   14910:	mov	r7, r1
   14914:	mov	r1, r2
   14918:	mov	r5, r3
   1491c:	mov	r6, r2
   14920:	mov	r4, r0
   14924:	bl	12b30 <table_get_column_data_type@@Base>
   14928:	cmp	r0, #23
   1492c:	bhi	14c20 <table_cell_to_buffer@@Base+0x31c>
   14930:	add	r1, pc, #8
   14934:	ldr	r8, [fp, #8]
   14938:	ldr	r0, [r1, r0, lsl #2]
   1493c:	add	pc, r1, r0
   14940:	andeq	r0, r0, r0, rrx
   14944:	andeq	r0, r0, r4, ror r0
   14948:	andeq	r0, r0, r8, lsl #1
   1494c:	muleq	r0, ip, r0
   14950:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14954:	andeq	r0, r0, r4, asr #1
   14958:	ldrdeq	r0, [r0], -r8
   1495c:	andeq	r0, r0, ip, ror #1
   14960:	andeq	r0, r0, ip, lsl #2
   14964:	andeq	r0, r0, r0, lsr #2
   14968:	andeq	r0, r0, r4, lsr r1
   1496c:	andeq	r0, r0, r4, asr r1
   14970:	andeq	r0, r0, r4, ror r1
   14974:	muleq	r0, r4, r1
   14978:			; <UNDEFINED> instruction: 0x000001b4
   1497c:	ldrdeq	r0, [r0], -r4
   14980:	strdeq	r0, [r0], -r4
   14984:	andeq	r0, r0, r8, lsl r2
   14988:	andeq	r0, r0, r8, lsr r2
   1498c:	andeq	r0, r0, r4, ror #4
   14990:	andeq	r0, r0, r8, ror r2
   14994:	muleq	r0, r8, r2
   14998:			; <UNDEFINED> instruction: 0x000002b8
   1499c:	andeq	r0, r0, ip, ror #5
   149a0:	mov	r0, r4
   149a4:	mov	r1, r7
   149a8:	mov	r2, r6
   149ac:	bl	13538 <table_get_int@@Base>
   149b0:	b	14c08 <table_cell_to_buffer@@Base+0x304>
   149b4:	mov	r0, r4
   149b8:	mov	r1, r7
   149bc:	mov	r2, r6
   149c0:	bl	13550 <table_get_uint@@Base>
   149c4:	b	14a3c <table_cell_to_buffer@@Base+0x138>
   149c8:	mov	r0, r4
   149cc:	mov	r1, r7
   149d0:	mov	r2, r6
   149d4:	bl	13568 <table_get_int8@@Base>
   149d8:	b	14c08 <table_cell_to_buffer@@Base+0x304>
   149dc:	mov	r0, r4
   149e0:	mov	r1, r7
   149e4:	mov	r2, r6
   149e8:	bl	13580 <table_get_uint8@@Base>
   149ec:	b	14a3c <table_cell_to_buffer@@Base+0x138>
   149f0:	mov	r0, r4
   149f4:	mov	r1, r7
   149f8:	mov	r2, r6
   149fc:	bl	13598 <table_get_int16@@Base>
   14a00:	b	14c08 <table_cell_to_buffer@@Base+0x304>
   14a04:	mov	r0, r4
   14a08:	mov	r1, r7
   14a0c:	mov	r2, r6
   14a10:	bl	135b0 <table_get_uint16@@Base>
   14a14:	b	14a3c <table_cell_to_buffer@@Base+0x138>
   14a18:	mov	r0, r4
   14a1c:	mov	r1, r7
   14a20:	mov	r2, r6
   14a24:	bl	135c8 <table_get_int32@@Base>
   14a28:	b	14c08 <table_cell_to_buffer@@Base+0x304>
   14a2c:	mov	r0, r4
   14a30:	mov	r1, r7
   14a34:	mov	r2, r6
   14a38:	bl	135e0 <table_get_uint32@@Base>
   14a3c:	ldr	r2, [pc, #524]	; 14c50 <table_cell_to_buffer@@Base+0x34c>
   14a40:	mov	r3, r0
   14a44:	add	r2, pc, r2
   14a48:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14a4c:	mov	r0, r4
   14a50:	mov	r1, r7
   14a54:	mov	r2, r6
   14a58:	bl	135f8 <table_get_int64@@Base>
   14a5c:	b	14b04 <table_cell_to_buffer@@Base+0x200>
   14a60:	mov	r0, r4
   14a64:	mov	r1, r7
   14a68:	mov	r2, r6
   14a6c:	bl	13610 <table_get_uint64@@Base>
   14a70:	b	14b24 <table_cell_to_buffer@@Base+0x220>
   14a74:	mov	r0, r4
   14a78:	mov	r1, r7
   14a7c:	mov	r2, r6
   14a80:	bl	13628 <table_get_short@@Base>
   14a84:	ldr	r2, [pc, #464]	; 14c5c <table_cell_to_buffer@@Base+0x358>
   14a88:	mov	r3, r0
   14a8c:	add	r2, pc, r2
   14a90:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14a94:	mov	r0, r4
   14a98:	mov	r1, r7
   14a9c:	mov	r2, r6
   14aa0:	bl	13640 <table_get_ushort@@Base>
   14aa4:	ldr	r2, [pc, #436]	; 14c60 <table_cell_to_buffer@@Base+0x35c>
   14aa8:	mov	r3, r0
   14aac:	add	r2, pc, r2
   14ab0:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14ab4:	mov	r0, r4
   14ab8:	mov	r1, r7
   14abc:	mov	r2, r6
   14ac0:	bl	13658 <table_get_long@@Base>
   14ac4:	ldr	r2, [pc, #408]	; 14c64 <table_cell_to_buffer@@Base+0x360>
   14ac8:	mov	r3, r0
   14acc:	add	r2, pc, r2
   14ad0:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14ad4:	mov	r0, r4
   14ad8:	mov	r1, r7
   14adc:	mov	r2, r6
   14ae0:	bl	13670 <table_get_ulong@@Base>
   14ae4:	ldr	r2, [pc, #380]	; 14c68 <table_cell_to_buffer@@Base+0x364>
   14ae8:	mov	r3, r0
   14aec:	add	r2, pc, r2
   14af0:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14af4:	mov	r0, r4
   14af8:	mov	r1, r7
   14afc:	mov	r2, r6
   14b00:	bl	13688 <table_get_llong@@Base>
   14b04:	stm	sp, {r0, r1}
   14b08:	ldr	r2, [pc, #324]	; 14c54 <table_cell_to_buffer@@Base+0x350>
   14b0c:	add	r2, pc, r2
   14b10:	b	14b94 <table_cell_to_buffer@@Base+0x290>
   14b14:	mov	r0, r4
   14b18:	mov	r1, r7
   14b1c:	mov	r2, r6
   14b20:	bl	136a0 <table_get_ullong@@Base>
   14b24:	stm	sp, {r0, r1}
   14b28:	ldr	r2, [pc, #296]	; 14c58 <table_cell_to_buffer@@Base+0x354>
   14b2c:	add	r2, pc, r2
   14b30:	b	14b94 <table_cell_to_buffer@@Base+0x290>
   14b34:	mov	r0, r4
   14b38:	mov	r1, r7
   14b3c:	mov	r2, r6
   14b40:	bl	136b8 <table_get_float@@Base>
   14b44:	vcvt.f64.f32	d16, s0
   14b48:	vstr	d16, [sp]
   14b4c:	ldr	r2, [pc, #284]	; 14c70 <table_cell_to_buffer@@Base+0x36c>
   14b50:	add	r2, pc, r2
   14b54:	b	14b94 <table_cell_to_buffer@@Base+0x290>
   14b58:	mov	r0, r4
   14b5c:	mov	r1, r7
   14b60:	mov	r2, r6
   14b64:	bl	136d0 <table_get_double@@Base>
   14b68:	vstr	d0, [sp]
   14b6c:	ldr	r2, [pc, #256]	; 14c74 <table_cell_to_buffer@@Base+0x370>
   14b70:	add	r2, pc, r2
   14b74:	b	14b94 <table_cell_to_buffer@@Base+0x290>
   14b78:	mov	r0, r4
   14b7c:	mov	r1, r7
   14b80:	mov	r2, r6
   14b84:	bl	136e8 <table_get_ldouble@@Base>
   14b88:	vstr	d0, [sp]
   14b8c:	ldr	r2, [pc, #228]	; 14c78 <table_cell_to_buffer@@Base+0x374>
   14b90:	add	r2, pc, r2
   14b94:	mov	r0, r5
   14b98:	mov	r1, r8
   14b9c:	bl	11efc <snprintf@plt>
   14ba0:	b	14c20 <table_cell_to_buffer@@Base+0x31c>
   14ba4:	mov	r0, r4
   14ba8:	mov	r1, r7
   14bac:	mov	r2, r6
   14bb0:	bl	13700 <table_get_char@@Base>
   14bb4:	b	14bc8 <table_cell_to_buffer@@Base+0x2c4>
   14bb8:	mov	r0, r4
   14bbc:	mov	r1, r7
   14bc0:	mov	r2, r6
   14bc4:	bl	13718 <table_get_uchar@@Base>
   14bc8:	ldr	r2, [pc, #172]	; 14c7c <table_cell_to_buffer@@Base+0x378>
   14bcc:	mov	r3, r0
   14bd0:	add	r2, pc, r2
   14bd4:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14bd8:	mov	r0, r4
   14bdc:	mov	r1, r7
   14be0:	mov	r2, r6
   14be4:	bl	13730 <table_get_string@@Base>
   14be8:	ldr	r2, [pc, #124]	; 14c6c <table_cell_to_buffer@@Base+0x368>
   14bec:	mov	r3, r0
   14bf0:	add	r2, pc, r2
   14bf4:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14bf8:	mov	r0, r4
   14bfc:	mov	r1, r7
   14c00:	mov	r2, r6
   14c04:	bl	13520 <table_get_bool@@Base>
   14c08:	ldr	r2, [pc, #60]	; 14c4c <table_cell_to_buffer@@Base+0x348>
   14c0c:	mov	r3, r0
   14c10:	add	r2, pc, r2
   14c14:	mov	r0, r5
   14c18:	mov	r1, r8
   14c1c:	bl	11efc <snprintf@plt>
   14c20:	mov	r0, #0
   14c24:	sub	sp, fp, #24
   14c28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14c2c:	mov	r0, r4
   14c30:	mov	r1, r7
   14c34:	mov	r2, r6
   14c38:	bl	13744 <table_get_ptr@@Base>
   14c3c:	ldr	r2, [pc, #60]	; 14c80 <table_cell_to_buffer@@Base+0x37c>
   14c40:	mov	r3, r0
   14c44:	add	r2, pc, r2
   14c48:	b	14c14 <table_cell_to_buffer@@Base+0x310>
   14c4c:	strdeq	r0, [r0], -sl
   14c50:	andeq	r0, r0, r9, asr #19
   14c54:	andeq	r0, r0, r4, lsl #18
   14c58:	andeq	r0, r0, r9, ror #17
   14c5c:	andeq	r0, r0, lr, lsl #19
   14c60:	andeq	r0, r0, r2, ror r9
   14c64:	andeq	r0, r0, r6, asr r9
   14c68:	andeq	r0, r0, sl, lsr r9
   14c6c:	andeq	r0, r0, sl, lsr r8
   14c70:	ldrdeq	r0, [r0], -sp
   14c74:	andeq	r0, r0, r0, asr #17
   14c78:	andeq	r0, r0, r4, lsr #17
   14c7c:	andeq	r0, r0, r8, ror #16
   14c80:	strdeq	r0, [r0], -r7

00014c84 <table_cell_from_buffer@@Base>:
   14c84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c88:	add	fp, sp, #24
   14c8c:	sub	sp, sp, #264	; 0x108
   14c90:	mov	r5, r1
   14c94:	mov	r1, r2
   14c98:	mov	r7, r3
   14c9c:	mov	r4, r2
   14ca0:	mov	r6, r0
   14ca4:	bl	12b30 <table_get_column_data_type@@Base>
   14ca8:	cmp	r0, #23
   14cac:	bhi	15284 <table_cell_from_buffer@@Base+0x600>
   14cb0:	add	r1, pc, #4
   14cb4:	ldr	r0, [r1, r0, lsl #2]
   14cb8:	add	pc, r1, r0
   14cbc:	andeq	r0, r0, r0, rrx
   14cc0:	muleq	r0, r8, r0
   14cc4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14cc8:	andeq	r0, r0, r8, lsl #2
   14ccc:	andeq	r0, r0, r0, asr #2
   14cd0:	andeq	r0, r0, r8, ror r1
   14cd4:			; <UNDEFINED> instruction: 0x000001b0
   14cd8:	andeq	r0, r0, r8, ror #3
   14cdc:	andeq	r0, r0, r0, lsr #4
   14ce0:	andeq	r0, r0, r0, ror #4
   14ce4:	andeq	r0, r0, r0, lsr #5
   14ce8:	ldrdeq	r0, [r0], -r8
   14cec:	andeq	r0, r0, r0, lsl r3
   14cf0:	andeq	r0, r0, r8, asr #6
   14cf4:	andeq	r0, r0, r0, lsl #7
   14cf8:	andeq	r0, r0, r0, asr #7
   14cfc:	andeq	r0, r0, r0, lsl #8
   14d00:	andeq	r0, r0, r8, lsr r4
   14d04:	andeq	r0, r0, r0, ror r4
   14d08:	andeq	r0, r0, r8, lsr #9
   14d0c:	andeq	r0, r0, r0, ror #9
   14d10:	andeq	r0, r0, r8, lsl r5
   14d14:	andeq	r0, r0, r0, asr r5
   14d18:	muleq	r0, r4, r5
   14d1c:	ldr	r1, [pc, #1420]	; 152b0 <table_cell_from_buffer@@Base+0x62c>
   14d20:	add	r2, sp, #8
   14d24:	mov	r0, r7
   14d28:	add	r1, pc, r1
   14d2c:	bl	11f08 <__isoc99_sscanf@plt>
   14d30:	mvn	r7, #0
   14d34:	cmp	r0, #1
   14d38:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14d3c:	ldr	r3, [sp, #8]
   14d40:	mov	r0, r6
   14d44:	mov	r1, r5
   14d48:	mov	r2, r4
   14d4c:	bl	13d44 <table_set_int@@Base>
   14d50:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14d54:	ldr	r1, [pc, #1368]	; 152b4 <table_cell_from_buffer@@Base+0x630>
   14d58:	add	r2, sp, #8
   14d5c:	mov	r0, r7
   14d60:	add	r1, pc, r1
   14d64:	bl	11f08 <__isoc99_sscanf@plt>
   14d68:	mvn	r7, #0
   14d6c:	cmp	r0, #1
   14d70:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14d74:	ldr	r3, [sp, #8]
   14d78:	mov	r0, r6
   14d7c:	mov	r1, r5
   14d80:	mov	r2, r4
   14d84:	bl	13dc4 <table_set_uint@@Base>
   14d88:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14d8c:	ldr	r1, [pc, #1316]	; 152b8 <table_cell_from_buffer@@Base+0x634>
   14d90:	add	r2, sp, #8
   14d94:	mov	r0, r7
   14d98:	add	r1, pc, r1
   14d9c:	bl	11f08 <__isoc99_sscanf@plt>
   14da0:	mvn	r7, #0
   14da4:	cmp	r0, #1
   14da8:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14dac:	ldrsb	r3, [sp, #8]
   14db0:	mov	r0, r6
   14db4:	mov	r1, r5
   14db8:	mov	r2, r4
   14dbc:	bl	13e44 <table_set_int8@@Base>
   14dc0:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14dc4:	ldr	r1, [pc, #1264]	; 152bc <table_cell_from_buffer@@Base+0x638>
   14dc8:	add	r2, sp, #8
   14dcc:	mov	r0, r7
   14dd0:	add	r1, pc, r1
   14dd4:	bl	11f08 <__isoc99_sscanf@plt>
   14dd8:	mvn	r7, #0
   14ddc:	cmp	r0, #1
   14de0:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14de4:	ldrb	r3, [sp, #8]
   14de8:	mov	r0, r6
   14dec:	mov	r1, r5
   14df0:	mov	r2, r4
   14df4:	bl	13ec4 <table_set_uint8@@Base>
   14df8:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14dfc:	ldr	r1, [pc, #1212]	; 152c0 <table_cell_from_buffer@@Base+0x63c>
   14e00:	add	r2, sp, #8
   14e04:	mov	r0, r7
   14e08:	add	r1, pc, r1
   14e0c:	bl	11f08 <__isoc99_sscanf@plt>
   14e10:	mvn	r7, #0
   14e14:	cmp	r0, #1
   14e18:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14e1c:	ldrsh	r3, [sp, #8]
   14e20:	mov	r0, r6
   14e24:	mov	r1, r5
   14e28:	mov	r2, r4
   14e2c:	bl	13f44 <table_set_int16@@Base>
   14e30:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14e34:	ldr	r1, [pc, #1160]	; 152c4 <table_cell_from_buffer@@Base+0x640>
   14e38:	add	r2, sp, #8
   14e3c:	mov	r0, r7
   14e40:	add	r1, pc, r1
   14e44:	bl	11f08 <__isoc99_sscanf@plt>
   14e48:	mvn	r7, #0
   14e4c:	cmp	r0, #1
   14e50:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14e54:	ldrh	r3, [sp, #8]
   14e58:	mov	r0, r6
   14e5c:	mov	r1, r5
   14e60:	mov	r2, r4
   14e64:	bl	13fc4 <table_set_uint16@@Base>
   14e68:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14e6c:	ldr	r1, [pc, #1108]	; 152c8 <table_cell_from_buffer@@Base+0x644>
   14e70:	add	r2, sp, #8
   14e74:	mov	r0, r7
   14e78:	add	r1, pc, r1
   14e7c:	bl	11f08 <__isoc99_sscanf@plt>
   14e80:	mvn	r7, #0
   14e84:	cmp	r0, #1
   14e88:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14e8c:	ldr	r3, [sp, #8]
   14e90:	mov	r0, r6
   14e94:	mov	r1, r5
   14e98:	mov	r2, r4
   14e9c:	bl	14044 <table_set_int32@@Base>
   14ea0:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14ea4:	ldr	r1, [pc, #1056]	; 152cc <table_cell_from_buffer@@Base+0x648>
   14ea8:	add	r2, sp, #8
   14eac:	mov	r0, r7
   14eb0:	add	r1, pc, r1
   14eb4:	bl	11f08 <__isoc99_sscanf@plt>
   14eb8:	mvn	r7, #0
   14ebc:	cmp	r0, #1
   14ec0:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14ec4:	ldr	r3, [sp, #8]
   14ec8:	mov	r0, r6
   14ecc:	mov	r1, r5
   14ed0:	mov	r2, r4
   14ed4:	bl	140c4 <table_set_uint32@@Base>
   14ed8:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14edc:	ldr	r1, [pc, #1004]	; 152d0 <table_cell_from_buffer@@Base+0x64c>
   14ee0:	add	r2, sp, #8
   14ee4:	mov	r0, r7
   14ee8:	add	r1, pc, r1
   14eec:	bl	11f08 <__isoc99_sscanf@plt>
   14ef0:	mvn	r7, #0
   14ef4:	cmp	r0, #1
   14ef8:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14efc:	ldr	r0, [sp, #8]
   14f00:	ldr	r1, [sp, #12]
   14f04:	mov	r2, r4
   14f08:	stm	sp, {r0, r1}
   14f0c:	mov	r0, r6
   14f10:	mov	r1, r5
   14f14:	bl	14144 <table_set_int64@@Base>
   14f18:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14f1c:	ldr	r1, [pc, #944]	; 152d4 <table_cell_from_buffer@@Base+0x650>
   14f20:	add	r2, sp, #8
   14f24:	mov	r0, r7
   14f28:	add	r1, pc, r1
   14f2c:	bl	11f08 <__isoc99_sscanf@plt>
   14f30:	mvn	r7, #0
   14f34:	cmp	r0, #1
   14f38:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14f3c:	ldr	r0, [sp, #8]
   14f40:	ldr	r1, [sp, #12]
   14f44:	mov	r2, r4
   14f48:	stm	sp, {r0, r1}
   14f4c:	mov	r0, r6
   14f50:	mov	r1, r5
   14f54:	bl	141cc <table_set_uint64@@Base>
   14f58:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14f5c:	ldr	r1, [pc, #884]	; 152d8 <table_cell_from_buffer@@Base+0x654>
   14f60:	add	r2, sp, #8
   14f64:	mov	r0, r7
   14f68:	add	r1, pc, r1
   14f6c:	bl	11f08 <__isoc99_sscanf@plt>
   14f70:	mvn	r7, #0
   14f74:	cmp	r0, #1
   14f78:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14f7c:	ldrsh	r3, [sp, #8]
   14f80:	mov	r0, r6
   14f84:	mov	r1, r5
   14f88:	mov	r2, r4
   14f8c:	bl	14254 <table_set_short@@Base>
   14f90:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14f94:	ldr	r1, [pc, #832]	; 152dc <table_cell_from_buffer@@Base+0x658>
   14f98:	add	r2, sp, #8
   14f9c:	mov	r0, r7
   14fa0:	add	r1, pc, r1
   14fa4:	bl	11f08 <__isoc99_sscanf@plt>
   14fa8:	mvn	r7, #0
   14fac:	cmp	r0, #1
   14fb0:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14fb4:	ldrh	r3, [sp, #8]
   14fb8:	mov	r0, r6
   14fbc:	mov	r1, r5
   14fc0:	mov	r2, r4
   14fc4:	bl	142d4 <table_set_ushort@@Base>
   14fc8:	b	15284 <table_cell_from_buffer@@Base+0x600>
   14fcc:	ldr	r1, [pc, #780]	; 152e0 <table_cell_from_buffer@@Base+0x65c>
   14fd0:	add	r2, sp, #8
   14fd4:	mov	r0, r7
   14fd8:	add	r1, pc, r1
   14fdc:	bl	11f08 <__isoc99_sscanf@plt>
   14fe0:	mvn	r7, #0
   14fe4:	cmp	r0, #1
   14fe8:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   14fec:	ldr	r3, [sp, #8]
   14ff0:	mov	r0, r6
   14ff4:	mov	r1, r5
   14ff8:	mov	r2, r4
   14ffc:	bl	14354 <table_set_long@@Base>
   15000:	b	15284 <table_cell_from_buffer@@Base+0x600>
   15004:	ldr	r1, [pc, #728]	; 152e4 <table_cell_from_buffer@@Base+0x660>
   15008:	add	r2, sp, #8
   1500c:	mov	r0, r7
   15010:	add	r1, pc, r1
   15014:	bl	11f08 <__isoc99_sscanf@plt>
   15018:	mvn	r7, #0
   1501c:	cmp	r0, #1
   15020:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   15024:	ldr	r3, [sp, #8]
   15028:	mov	r0, r6
   1502c:	mov	r1, r5
   15030:	mov	r2, r4
   15034:	bl	143d4 <table_set_ulong@@Base>
   15038:	b	15284 <table_cell_from_buffer@@Base+0x600>
   1503c:	ldr	r1, [pc, #676]	; 152e8 <table_cell_from_buffer@@Base+0x664>
   15040:	add	r2, sp, #8
   15044:	mov	r0, r7
   15048:	add	r1, pc, r1
   1504c:	bl	11f08 <__isoc99_sscanf@plt>
   15050:	mvn	r7, #0
   15054:	cmp	r0, #1
   15058:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   1505c:	ldr	r0, [sp, #8]
   15060:	ldr	r1, [sp, #12]
   15064:	mov	r2, r4
   15068:	stm	sp, {r0, r1}
   1506c:	mov	r0, r6
   15070:	mov	r1, r5
   15074:	bl	14454 <table_set_llong@@Base>
   15078:	b	15284 <table_cell_from_buffer@@Base+0x600>
   1507c:	ldr	r1, [pc, #616]	; 152ec <table_cell_from_buffer@@Base+0x668>
   15080:	add	r2, sp, #8
   15084:	mov	r0, r7
   15088:	add	r1, pc, r1
   1508c:	bl	11f08 <__isoc99_sscanf@plt>
   15090:	mvn	r7, #0
   15094:	cmp	r0, #1
   15098:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   1509c:	ldr	r0, [sp, #8]
   150a0:	ldr	r1, [sp, #12]
   150a4:	mov	r2, r4
   150a8:	stm	sp, {r0, r1}
   150ac:	mov	r0, r6
   150b0:	mov	r1, r5
   150b4:	bl	144dc <table_set_ullong@@Base>
   150b8:	b	15284 <table_cell_from_buffer@@Base+0x600>
   150bc:	ldr	r1, [pc, #560]	; 152f4 <table_cell_from_buffer@@Base+0x670>
   150c0:	add	r2, sp, #8
   150c4:	mov	r0, r7
   150c8:	add	r1, pc, r1
   150cc:	bl	11f08 <__isoc99_sscanf@plt>
   150d0:	mvn	r7, #0
   150d4:	cmp	r0, #1
   150d8:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   150dc:	vldr	s0, [sp, #8]
   150e0:	mov	r0, r6
   150e4:	mov	r1, r5
   150e8:	mov	r2, r4
   150ec:	bl	14564 <table_set_float@@Base>
   150f0:	b	15284 <table_cell_from_buffer@@Base+0x600>
   150f4:	ldr	r1, [pc, #508]	; 152f8 <table_cell_from_buffer@@Base+0x674>
   150f8:	add	r2, sp, #8
   150fc:	mov	r0, r7
   15100:	add	r1, pc, r1
   15104:	bl	11f08 <__isoc99_sscanf@plt>
   15108:	mvn	r7, #0
   1510c:	cmp	r0, #1
   15110:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   15114:	vldr	d0, [sp, #8]
   15118:	mov	r0, r6
   1511c:	mov	r1, r5
   15120:	mov	r2, r4
   15124:	bl	145f0 <table_set_double@@Base>
   15128:	b	15284 <table_cell_from_buffer@@Base+0x600>
   1512c:	ldr	r1, [pc, #456]	; 152fc <table_cell_from_buffer@@Base+0x678>
   15130:	add	r2, sp, #8
   15134:	mov	r0, r7
   15138:	add	r1, pc, r1
   1513c:	bl	11f08 <__isoc99_sscanf@plt>
   15140:	mvn	r7, #0
   15144:	cmp	r0, #1
   15148:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   1514c:	vldr	d0, [sp, #8]
   15150:	mov	r0, r6
   15154:	mov	r1, r5
   15158:	mov	r2, r4
   1515c:	bl	14678 <table_set_ldouble@@Base>
   15160:	b	15284 <table_cell_from_buffer@@Base+0x600>
   15164:	ldr	r1, [pc, #408]	; 15304 <table_cell_from_buffer@@Base+0x680>
   15168:	add	r2, sp, #8
   1516c:	mov	r0, r7
   15170:	add	r1, pc, r1
   15174:	bl	11f08 <__isoc99_sscanf@plt>
   15178:	mvn	r7, #0
   1517c:	cmp	r0, #1
   15180:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   15184:	ldrb	r3, [sp, #8]
   15188:	mov	r0, r6
   1518c:	mov	r1, r5
   15190:	mov	r2, r4
   15194:	bl	14720 <table_set_char@@Base>
   15198:	b	15284 <table_cell_from_buffer@@Base+0x600>
   1519c:	ldr	r1, [pc, #356]	; 15308 <table_cell_from_buffer@@Base+0x684>
   151a0:	add	r2, sp, #8
   151a4:	mov	r0, r7
   151a8:	add	r1, pc, r1
   151ac:	bl	11f08 <__isoc99_sscanf@plt>
   151b0:	mvn	r7, #0
   151b4:	cmp	r0, #1
   151b8:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   151bc:	ldrb	r3, [sp, #8]
   151c0:	mov	r0, r6
   151c4:	mov	r1, r5
   151c8:	mov	r2, r4
   151cc:	bl	147a0 <table_set_uchar@@Base>
   151d0:	b	15284 <table_cell_from_buffer@@Base+0x600>
   151d4:	ldr	r1, [pc, #276]	; 152f0 <table_cell_from_buffer@@Base+0x66c>
   151d8:	add	r2, sp, #8
   151dc:	mov	r0, r7
   151e0:	add	r1, pc, r1
   151e4:	bl	11f08 <__isoc99_sscanf@plt>
   151e8:	mvn	r7, #0
   151ec:	cmp	r0, #1
   151f0:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   151f4:	add	r3, sp, #8
   151f8:	mov	r0, r6
   151fc:	mov	r1, r5
   15200:	mov	r2, r4
   15204:	bl	14700 <table_set_string@@Base>
   15208:	b	15284 <table_cell_from_buffer@@Base+0x600>
   1520c:	ldr	r1, [pc, #236]	; 15300 <table_cell_from_buffer@@Base+0x67c>
   15210:	add	r2, sp, #8
   15214:	mov	r0, r7
   15218:	add	r1, pc, r1
   1521c:	bl	11f08 <__isoc99_sscanf@plt>
   15220:	mvn	r7, #0
   15224:	cmp	r0, #1
   15228:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   1522c:	ldr	r0, [sp, #8]
   15230:	cmp	r0, #0
   15234:	beq	15294 <table_cell_from_buffer@@Base+0x610>
   15238:	mov	r0, r6
   1523c:	mov	r1, r5
   15240:	mov	r2, r4
   15244:	mov	r3, #1
   15248:	bl	13cc4 <table_set_bool@@Base>
   1524c:	b	15284 <table_cell_from_buffer@@Base+0x600>
   15250:	ldr	r1, [pc, #180]	; 1530c <table_cell_from_buffer@@Base+0x688>
   15254:	add	r2, sp, #8
   15258:	mov	r0, r7
   1525c:	add	r1, pc, r1
   15260:	bl	11f08 <__isoc99_sscanf@plt>
   15264:	mvn	r7, #0
   15268:	cmp	r0, #1
   1526c:	bne	15288 <table_cell_from_buffer@@Base+0x604>
   15270:	ldr	r3, [sp, #8]
   15274:	mov	r0, r6
   15278:	mov	r1, r5
   1527c:	mov	r2, r4
   15280:	bl	14820 <table_set_ptr@@Base>
   15284:	mov	r7, #0
   15288:	mov	r0, r7
   1528c:	sub	sp, fp, #24
   15290:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15294:	mov	r0, r6
   15298:	mov	r1, r5
   1529c:	mov	r2, r4
   152a0:	mov	r3, #0
   152a4:	mov	r7, #0
   152a8:	bl	13cc4 <table_set_bool@@Base>
   152ac:	b	15288 <table_cell_from_buffer@@Base+0x604>
   152b0:	andeq	r0, r0, r2, ror #13
   152b4:	andeq	r0, r0, sp, lsr #13
   152b8:	andeq	r0, r0, r6, lsr #13
   152bc:	andeq	r0, r0, r3, ror r6
   152c0:	andeq	r0, r0, r2, lsl r6
   152c4:	ldrdeq	r0, [r0], -lr
   152c8:	muleq	r0, r2, r5
   152cc:	andeq	r0, r0, sp, asr r5
   152d0:	andeq	r0, r0, r8, lsr #10
   152d4:	andeq	r0, r0, sp, ror #9
   152d8:			; <UNDEFINED> instruction: 0x000004b2
   152dc:	andeq	r0, r0, lr, ror r4
   152e0:	andeq	r0, r0, sl, asr #8
   152e4:	andeq	r0, r0, r6, lsl r4
   152e8:	andeq	r0, r0, r8, asr #7
   152ec:	andeq	r0, r0, sp, lsl #7
   152f0:	andeq	r0, r0, sl, asr #4
   152f4:	andeq	r0, r0, r5, ror #6
   152f8:	andeq	r0, r0, r0, lsr r3
   152fc:	strdeq	r0, [r0], -ip
   15300:	strdeq	r0, [r0], -r2
   15304:	andeq	r0, r0, r8, asr #5
   15308:	muleq	r0, r0, r2
   1530c:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00015310 <table_cell_nullify@@Base>:
   15310:	push	{r4, r5, fp, lr}
   15314:	add	fp, sp, #8
   15318:	mov	r4, r2
   1531c:	bl	1377c <table_get_row_ptr@@Base>
   15320:	ldr	r5, [r0]
   15324:	ldr	r0, [r5, r4, lsl #2]
   15328:	cmp	r0, #0
   1532c:	beq	1533c <table_cell_nullify@@Base+0x2c>
   15330:	bl	11ea8 <free@plt>
   15334:	mov	r0, #0
   15338:	str	r0, [r5, r4, lsl #2]
   1533c:	mov	r0, #0
   15340:	pop	{r4, r5, fp, pc}

00015344 <__libc_csu_init@@Base>:
   15344:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15348:	mov	r7, r0
   1534c:	ldr	r6, [pc, #72]	; 1539c <__libc_csu_init@@Base+0x58>
   15350:	ldr	r5, [pc, #72]	; 153a0 <__libc_csu_init@@Base+0x5c>
   15354:	add	r6, pc, r6
   15358:	add	r5, pc, r5
   1535c:	sub	r6, r6, r5
   15360:	mov	r8, r1
   15364:	mov	r9, r2
   15368:	bl	11e70 <strcmp@plt-0x20>
   1536c:	asrs	r6, r6, #2
   15370:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15374:	mov	r4, #0
   15378:	add	r4, r4, #1
   1537c:	ldr	r3, [r5], #4
   15380:	mov	r2, r9
   15384:	mov	r1, r8
   15388:	mov	r0, r7
   1538c:	blx	r3
   15390:	cmp	r6, r4
   15394:	bne	15378 <__libc_csu_init@@Base+0x34>
   15398:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1539c:	andeq	r0, r1, r0, asr fp
   153a0:	andeq	r0, r1, r8, asr #22

000153a4 <__libc_csu_fini@@Base>:
   153a4:	bx	lr

Disassembly of section .fini:

000153a8 <.fini>:
   153a8:	push	{r3, lr}
   153ac:	pop	{r3, pc}
