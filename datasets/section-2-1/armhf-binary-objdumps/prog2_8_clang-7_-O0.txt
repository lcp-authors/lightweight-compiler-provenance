
../repos/prog2/8:     file format elf32-littlearm


Disassembly of section .init:

00010bb0 <.init>:
   10bb0:	push	{r3, lr}
   10bb4:	bl	10c78 <_start@@Base+0x3c>
   10bb8:	pop	{r3, pc}

Disassembly of section .plt:

00010bbc <calloc@plt-0x14>:
   10bbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10bc0:	ldr	lr, [pc, #4]	; 10bcc <calloc@plt-0x4>
   10bc4:	add	lr, pc, lr
   10bc8:	ldr	pc, [lr, #8]!
   10bcc:	andeq	r3, r1, r4, lsr r4

00010bd0 <calloc@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #77824	; 0x13000
   10bd8:	ldr	pc, [ip, #1076]!	; 0x434

00010bdc <printf@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #77824	; 0x13000
   10be4:	ldr	pc, [ip, #1068]!	; 0x42c

00010be8 <free@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #77824	; 0x13000
   10bf0:	ldr	pc, [ip, #1060]!	; 0x424

00010bf4 <realloc@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #77824	; 0x13000
   10bfc:	ldr	pc, [ip, #1052]!	; 0x41c

00010c00 <malloc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #77824	; 0x13000
   10c08:	ldr	pc, [ip, #1044]!	; 0x414

00010c0c <__libc_start_main@plt>:
   10c0c:	add	ip, pc, #0, 12
   10c10:	add	ip, ip, #77824	; 0x13000
   10c14:	ldr	pc, [ip, #1036]!	; 0x40c

00010c18 <__gmon_start__@plt>:
   10c18:	add	ip, pc, #0, 12
   10c1c:	add	ip, ip, #77824	; 0x13000
   10c20:	ldr	pc, [ip, #1028]!	; 0x404

00010c24 <setvbuf@plt>:
   10c24:	add	ip, pc, #0, 12
   10c28:	add	ip, ip, #77824	; 0x13000
   10c2c:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c30 <abort@plt>:
   10c30:	add	ip, pc, #0, 12
   10c34:	add	ip, ip, #77824	; 0x13000
   10c38:	ldr	pc, [ip, #1012]!	; 0x3f4

Disassembly of section .text:

00010c3c <_start@@Base>:
   10c3c:	mov	fp, #0
   10c40:	mov	lr, #0
   10c44:	pop	{r1}		; (ldr r1, [sp], #4)
   10c48:	mov	r2, sp
   10c4c:	push	{r2}		; (str r2, [sp, #-4]!)
   10c50:	push	{r0}		; (str r0, [sp, #-4]!)
   10c54:	ldr	ip, [pc, #16]	; 10c6c <_start@@Base+0x30>
   10c58:	push	{ip}		; (str ip, [sp, #-4]!)
   10c5c:	ldr	r0, [pc, #12]	; 10c70 <_start@@Base+0x34>
   10c60:	ldr	r3, [pc, #12]	; 10c74 <_start@@Base+0x38>
   10c64:	bl	10c0c <__libc_start_main@plt>
   10c68:	bl	10c30 <abort@plt>
   10c6c:	muleq	r1, ip, r1
   10c70:	andeq	r2, r1, r4, asr r1
   10c74:	andeq	r3, r1, ip, lsr r1
   10c78:	ldr	r3, [pc, #20]	; 10c94 <_start@@Base+0x58>
   10c7c:	ldr	r2, [pc, #20]	; 10c98 <_start@@Base+0x5c>
   10c80:	add	r3, pc, r3
   10c84:	ldr	r2, [r3, r2]
   10c88:	cmp	r2, #0
   10c8c:	bxeq	lr
   10c90:	b	10c18 <__gmon_start__@plt>
   10c94:	andeq	r3, r1, r8, ror r3
   10c98:	andeq	r0, r0, r8, lsr r0
   10c9c:	ldr	r0, [pc, #24]	; 10cbc <_start@@Base+0x80>
   10ca0:	ldr	r3, [pc, #24]	; 10cc0 <_start@@Base+0x84>
   10ca4:	cmp	r3, r0
   10ca8:	bxeq	lr
   10cac:	ldr	r3, [pc, #16]	; 10cc4 <_start@@Base+0x88>
   10cb0:	cmp	r3, #0
   10cb4:	bxeq	lr
   10cb8:	bx	r3
   10cbc:	andeq	r4, r2, r8, asr #32
   10cc0:	andeq	r4, r2, r8, asr #32
   10cc4:	andeq	r0, r0, r0
   10cc8:	ldr	r0, [pc, #36]	; 10cf4 <_start@@Base+0xb8>
   10ccc:	ldr	r1, [pc, #36]	; 10cf8 <_start@@Base+0xbc>
   10cd0:	sub	r1, r1, r0
   10cd4:	asr	r1, r1, #2
   10cd8:	add	r1, r1, r1, lsr #31
   10cdc:	asrs	r1, r1, #1
   10ce0:	bxeq	lr
   10ce4:	ldr	r3, [pc, #16]	; 10cfc <_start@@Base+0xc0>
   10ce8:	cmp	r3, #0
   10cec:	bxeq	lr
   10cf0:	bx	r3
   10cf4:	andeq	r4, r2, r8, asr #32
   10cf8:	andeq	r4, r2, r8, asr #32
   10cfc:	andeq	r0, r0, r0
   10d00:	push	{r4, lr}
   10d04:	ldr	r4, [pc, #24]	; 10d24 <_start@@Base+0xe8>
   10d08:	ldrb	r3, [r4]
   10d0c:	cmp	r3, #0
   10d10:	popne	{r4, pc}
   10d14:	bl	10c9c <_start@@Base+0x60>
   10d18:	mov	r3, #1
   10d1c:	strb	r3, [r4]
   10d20:	pop	{r4, pc}
   10d24:	andeq	r4, r2, r8, asr #32
   10d28:	b	10cc8 <_start@@Base+0x8c>

00010d2c <_g@@Base>:
   10d2c:	sub	sp, sp, #8
   10d30:	push	{fp, lr}
   10d34:	mov	fp, sp
   10d38:	sub	sp, sp, #40	; 0x28
   10d3c:	str	r3, [fp, #12]
   10d40:	str	r2, [fp, #8]
   10d44:	str	r0, [fp, #-4]
   10d48:	str	r1, [fp, #-8]
   10d4c:	movw	r0, #8
   10d50:	bl	10c00 <malloc@plt>
   10d54:	str	r0, [fp, #-16]
   10d58:	sub	r0, fp, #12
   10d5c:	add	r1, fp, #8
   10d60:	str	r1, [r0]
   10d64:	ldr	r0, [fp, #-4]
   10d68:	movw	r1, #8
   10d6c:	bl	10bd0 <calloc@plt>
   10d70:	ldr	r1, [fp, #-16]
   10d74:	str	r0, [r1, #4]
   10d78:	movw	r0, #0
   10d7c:	str	r0, [sp, #20]
   10d80:	ldr	r0, [sp, #20]
   10d84:	ldr	r1, [fp, #-8]
   10d88:	cmp	r0, r1
   10d8c:	bge	10e34 <_g@@Base+0x108>
   10d90:	ldr	r0, [fp, #-12]
   10d94:	add	r1, r0, #4
   10d98:	str	r1, [fp, #-12]
   10d9c:	ldr	r0, [r0]
   10da0:	str	r0, [sp, #16]
   10da4:	ldr	r0, [fp, #-12]
   10da8:	add	r1, r0, #4
   10dac:	str	r1, [fp, #-12]
   10db0:	ldr	r0, [r0]
   10db4:	str	r0, [sp, #12]
   10db8:	mov	r0, #1
   10dbc:	mov	r1, #8
   10dc0:	bl	10bd0 <calloc@plt>
   10dc4:	str	r0, [sp, #8]
   10dc8:	ldr	r0, [sp, #12]
   10dcc:	ldr	r1, [sp, #8]
   10dd0:	str	r0, [r1]
   10dd4:	ldr	r0, [fp, #-16]
   10dd8:	ldr	r0, [r0, #4]
   10ddc:	ldr	r1, [sp, #16]
   10de0:	add	r0, r0, r1, lsl #3
   10de4:	ldr	r0, [r0, #4]
   10de8:	ldr	r1, [sp, #8]
   10dec:	str	r0, [r1, #4]
   10df0:	ldr	r0, [sp, #8]
   10df4:	ldr	r1, [fp, #-16]
   10df8:	ldr	r1, [r1, #4]
   10dfc:	ldr	lr, [sp, #16]
   10e00:	add	r1, r1, lr, lsl #3
   10e04:	str	r0, [r1, #4]
   10e08:	ldr	r0, [fp, #-16]
   10e0c:	ldr	r0, [r0, #4]
   10e10:	ldr	r1, [sp, #16]
   10e14:	add	r0, r0, r1, lsl #3
   10e18:	ldr	r1, [r0]
   10e1c:	add	r1, r1, #1
   10e20:	str	r1, [r0]
   10e24:	ldr	r0, [sp, #20]
   10e28:	add	r0, r0, #2
   10e2c:	str	r0, [sp, #20]
   10e30:	b	10d80 <_g@@Base+0x54>
   10e34:	sub	r0, fp, #12
   10e38:	ldr	r1, [fp, #-4]
   10e3c:	ldr	r2, [fp, #-16]
   10e40:	str	r1, [r2]
   10e44:	ldr	r1, [fp, #-16]
   10e48:	str	r0, [sp, #4]
   10e4c:	mov	r0, r1
   10e50:	mov	sp, fp
   10e54:	pop	{fp, lr}
   10e58:	add	sp, sp, #8
   10e5c:	bx	lr

00010e60 <_f@@Base>:
   10e60:	push	{fp, lr}
   10e64:	mov	fp, sp
   10e68:	sub	sp, sp, #16
   10e6c:	str	r0, [sp, #8]
   10e70:	str	r1, [sp, #4]
   10e74:	ldr	r0, [sp, #8]
   10e78:	movw	r1, #0
   10e7c:	cmp	r0, r1
   10e80:	bne	10e90 <_f@@Base+0x30>
   10e84:	movw	r0, #0
   10e88:	str	r0, [fp, #-4]
   10e8c:	b	10eec <_f@@Base+0x8c>
   10e90:	movw	r0, #0
   10e94:	str	r0, [sp]
   10e98:	ldr	r0, [sp]
   10e9c:	ldr	r1, [sp, #8]
   10ea0:	ldr	r1, [r1]
   10ea4:	cmp	r0, r1
   10ea8:	bge	10ee4 <_f@@Base+0x84>
   10eac:	ldr	r0, [sp, #8]
   10eb0:	ldr	r1, [sp]
   10eb4:	bl	12ce4 <vetor_elemento@@Base>
   10eb8:	ldr	r1, [sp, #4]
   10ebc:	cmp	r0, r1
   10ec0:	bne	10ed0 <_f@@Base+0x70>
   10ec4:	movw	r0, #1
   10ec8:	str	r0, [fp, #-4]
   10ecc:	b	10eec <_f@@Base+0x8c>
   10ed0:	b	10ed4 <_f@@Base+0x74>
   10ed4:	ldr	r0, [sp]
   10ed8:	add	r0, r0, #1
   10edc:	str	r0, [sp]
   10ee0:	b	10e98 <_f@@Base+0x38>
   10ee4:	movw	r0, #0
   10ee8:	str	r0, [fp, #-4]
   10eec:	ldr	r0, [fp, #-4]
   10ef0:	mov	sp, fp
   10ef4:	pop	{fp, pc}

00010ef8 <teste_grafo_novo@@Base>:
   10ef8:	push	{fp, lr}
   10efc:	mov	fp, sp
   10f00:	sub	sp, sp, #56	; 0x38
   10f04:	ldr	r0, [pc, #424]	; 110b4 <teste_grafo_novo@@Base+0x1bc>
   10f08:	add	r0, pc, r0
   10f0c:	movw	r1, #0
   10f10:	str	r1, [fp, #-8]
   10f14:	bl	10bdc <printf@plt>
   10f18:	movw	r1, #10
   10f1c:	str	r0, [fp, #-16]
   10f20:	mov	r0, r1
   10f24:	bl	122ec <grafo_novo@@Base>
   10f28:	str	r0, [fp, #-12]
   10f2c:	ldr	r0, [fp, #-12]
   10f30:	movw	r1, #0
   10f34:	cmp	r0, r1
   10f38:	bne	10f94 <teste_grafo_novo@@Base+0x9c>
   10f3c:	ldr	r0, [pc, #372]	; 110b8 <teste_grafo_novo@@Base+0x1c0>
   10f40:	add	r0, pc, r0
   10f44:	bl	10bdc <printf@plt>
   10f48:	ldr	lr, [fp, #-8]
   10f4c:	add	lr, lr, #1
   10f50:	str	lr, [fp, #-8]
   10f54:	ldr	lr, [fp, #-8]
   10f58:	cmp	lr, #0
   10f5c:	str	r0, [fp, #-20]	; 0xffffffec
   10f60:	bne	10f78 <teste_grafo_novo@@Base+0x80>
   10f64:	ldr	r0, [pc, #336]	; 110bc <teste_grafo_novo@@Base+0x1c4>
   10f68:	add	r0, pc, r0
   10f6c:	bl	10bdc <printf@plt>
   10f70:	str	r0, [fp, #-24]	; 0xffffffe8
   10f74:	b	10f88 <teste_grafo_novo@@Base+0x90>
   10f78:	ldr	r0, [pc, #320]	; 110c0 <teste_grafo_novo@@Base+0x1c8>
   10f7c:	add	r0, pc, r0
   10f80:	bl	10bdc <printf@plt>
   10f84:	str	r0, [sp, #28]
   10f88:	ldr	r0, [fp, #-8]
   10f8c:	str	r0, [fp, #-4]
   10f90:	b	110a8 <teste_grafo_novo@@Base+0x1b0>
   10f94:	ldr	r0, [fp, #-12]
   10f98:	ldr	r0, [r0]
   10f9c:	cmp	r0, #10
   10fa0:	beq	10fc0 <teste_grafo_novo@@Base+0xc8>
   10fa4:	ldr	r0, [pc, #280]	; 110c4 <teste_grafo_novo@@Base+0x1cc>
   10fa8:	add	r0, pc, r0
   10fac:	bl	10bdc <printf@plt>
   10fb0:	ldr	lr, [fp, #-8]
   10fb4:	add	lr, lr, #1
   10fb8:	str	lr, [fp, #-8]
   10fbc:	str	r0, [sp, #24]
   10fc0:	ldr	r0, [fp, #-12]
   10fc4:	bl	123a8 <grafo_apaga@@Base>
   10fc8:	movw	r0, #1
   10fcc:	bl	122ec <grafo_novo@@Base>
   10fd0:	str	r0, [fp, #-12]
   10fd4:	ldr	r0, [fp, #-12]
   10fd8:	movw	lr, #0
   10fdc:	cmp	r0, lr
   10fe0:	bne	1103c <teste_grafo_novo@@Base+0x144>
   10fe4:	ldr	r0, [pc, #220]	; 110c8 <teste_grafo_novo@@Base+0x1d0>
   10fe8:	add	r0, pc, r0
   10fec:	bl	10bdc <printf@plt>
   10ff0:	ldr	lr, [fp, #-8]
   10ff4:	add	lr, lr, #1
   10ff8:	str	lr, [fp, #-8]
   10ffc:	ldr	lr, [fp, #-8]
   11000:	cmp	lr, #0
   11004:	str	r0, [sp, #20]
   11008:	bne	11020 <teste_grafo_novo@@Base+0x128>
   1100c:	ldr	r0, [pc, #184]	; 110cc <teste_grafo_novo@@Base+0x1d4>
   11010:	add	r0, pc, r0
   11014:	bl	10bdc <printf@plt>
   11018:	str	r0, [sp, #16]
   1101c:	b	11030 <teste_grafo_novo@@Base+0x138>
   11020:	ldr	r0, [pc, #168]	; 110d0 <teste_grafo_novo@@Base+0x1d8>
   11024:	add	r0, pc, r0
   11028:	bl	10bdc <printf@plt>
   1102c:	str	r0, [sp, #12]
   11030:	ldr	r0, [fp, #-8]
   11034:	str	r0, [fp, #-4]
   11038:	b	110a8 <teste_grafo_novo@@Base+0x1b0>
   1103c:	ldr	r0, [fp, #-12]
   11040:	ldr	r0, [r0]
   11044:	cmp	r0, #1
   11048:	beq	11068 <teste_grafo_novo@@Base+0x170>
   1104c:	ldr	r0, [pc, #128]	; 110d4 <teste_grafo_novo@@Base+0x1dc>
   11050:	add	r0, pc, r0
   11054:	bl	10bdc <printf@plt>
   11058:	ldr	lr, [fp, #-8]
   1105c:	add	lr, lr, #1
   11060:	str	lr, [fp, #-8]
   11064:	str	r0, [sp, #8]
   11068:	ldr	r0, [fp, #-12]
   1106c:	bl	123a8 <grafo_apaga@@Base>
   11070:	ldr	r0, [fp, #-8]
   11074:	cmp	r0, #0
   11078:	bne	11090 <teste_grafo_novo@@Base+0x198>
   1107c:	ldr	r0, [pc, #84]	; 110d8 <teste_grafo_novo@@Base+0x1e0>
   11080:	add	r0, pc, r0
   11084:	bl	10bdc <printf@plt>
   11088:	str	r0, [sp, #4]
   1108c:	b	110a0 <teste_grafo_novo@@Base+0x1a8>
   11090:	ldr	r0, [pc, #68]	; 110dc <teste_grafo_novo@@Base+0x1e4>
   11094:	add	r0, pc, r0
   11098:	bl	10bdc <printf@plt>
   1109c:	str	r0, [sp]
   110a0:	ldr	r0, [fp, #-8]
   110a4:	str	r0, [fp, #-4]
   110a8:	ldr	r0, [fp, #-4]
   110ac:	mov	sp, fp
   110b0:	pop	{fp, pc}
   110b4:	muleq	r0, ip, r2
   110b8:	andeq	r2, r0, r3, ror r2
   110bc:	andeq	r2, r0, r3, ror #4
   110c0:	andeq	r2, r0, r3, ror #17
   110c4:	andeq	r2, r0, r7, lsr #4
   110c8:	andeq	r2, r0, fp, asr #3
   110cc:			; <UNDEFINED> instruction: 0x000021bb
   110d0:	andeq	r2, r0, fp, lsr r8
   110d4:	andeq	r2, r0, r3, lsr #3
   110d8:	andeq	r2, r0, fp, asr #2
   110dc:	andeq	r2, r0, fp, asr #15

000110e0 <teste_grafo_aresta@@Base>:
   110e0:	push	{r4, r5, r6, sl, fp, lr}
   110e4:	add	fp, sp, #16
   110e8:	sub	sp, sp, #128	; 0x80
   110ec:	movw	r0, #0
   110f0:	str	r0, [fp, #-20]	; 0xffffffec
   110f4:	movw	r1, #8
   110f8:	str	r0, [fp, #-28]	; 0xffffffe4
   110fc:	mov	r0, r1
   11100:	movw	r1, #22
   11104:	movw	r2, #3
   11108:	str	r2, [fp, #-32]	; 0xffffffe0
   1110c:	movw	r3, #2
   11110:	str	r3, [fp, #-36]	; 0xffffffdc
   11114:	movw	ip, #7
   11118:	str	ip, [sp]
   1111c:	ldr	lr, [fp, #-36]	; 0xffffffdc
   11120:	str	lr, [sp, #4]
   11124:	ldr	r4, [fp, #-28]	; 0xffffffe4
   11128:	str	r4, [sp, #8]
   1112c:	str	lr, [sp, #12]
   11130:	str	ip, [sp, #16]
   11134:	movw	r5, #5
   11138:	str	r5, [sp, #20]
   1113c:	str	r5, [sp, #24]
   11140:	movw	r5, #4
   11144:	str	r5, [sp, #28]
   11148:	str	r5, [sp, #32]
   1114c:	str	r4, [sp, #36]	; 0x24
   11150:	str	r5, [sp, #40]	; 0x28
   11154:	movw	r5, #6
   11158:	str	r5, [sp, #44]	; 0x2c
   1115c:	movw	r6, #1
   11160:	str	r6, [sp, #48]	; 0x30
   11164:	str	r6, [sp, #52]	; 0x34
   11168:	str	ip, [sp, #56]	; 0x38
   1116c:	str	r5, [sp, #60]	; 0x3c
   11170:	str	r5, [sp, #64]	; 0x40
   11174:	ldr	ip, [fp, #-32]	; 0xffffffe0
   11178:	str	ip, [sp, #68]	; 0x44
   1117c:	str	r4, [sp, #72]	; 0x48
   11180:	str	r6, [sp, #76]	; 0x4c
   11184:	bl	10d2c <_g@@Base>
   11188:	ldr	r1, [pc, #296]	; 112b8 <teste_grafo_aresta@@Base+0x1d8>
   1118c:	add	r1, pc, r1
   11190:	str	r0, [fp, #-24]	; 0xffffffe8
   11194:	mov	r0, r1
   11198:	bl	10bdc <printf@plt>
   1119c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   111a0:	str	r0, [fp, #-40]	; 0xffffffd8
   111a4:	mov	r0, r1
   111a8:	movw	r1, #5
   111ac:	movw	r2, #4
   111b0:	bl	12460 <grafo_aresta@@Base>
   111b4:	cmp	r0, #1
   111b8:	beq	111d8 <teste_grafo_aresta@@Base+0xf8>
   111bc:	ldr	r0, [pc, #248]	; 112bc <teste_grafo_aresta@@Base+0x1dc>
   111c0:	add	r0, pc, r0
   111c4:	bl	10bdc <printf@plt>
   111c8:	ldr	lr, [fp, #-20]	; 0xffffffec
   111cc:	add	lr, lr, #1
   111d0:	str	lr, [fp, #-20]	; 0xffffffec
   111d4:	str	r0, [fp, #-44]	; 0xffffffd4
   111d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   111dc:	movw	r1, #7
   111e0:	movw	r2, #6
   111e4:	bl	12460 <grafo_aresta@@Base>
   111e8:	cmp	r0, #1
   111ec:	beq	1120c <teste_grafo_aresta@@Base+0x12c>
   111f0:	ldr	r0, [pc, #200]	; 112c0 <teste_grafo_aresta@@Base+0x1e0>
   111f4:	add	r0, pc, r0
   111f8:	bl	10bdc <printf@plt>
   111fc:	ldr	lr, [fp, #-20]	; 0xffffffec
   11200:	add	lr, lr, #1
   11204:	str	lr, [fp, #-20]	; 0xffffffec
   11208:	str	r0, [fp, #-48]	; 0xffffffd0
   1120c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11210:	movw	r1, #7
   11214:	movw	r2, #1
   11218:	bl	12460 <grafo_aresta@@Base>
   1121c:	cmp	r0, #0
   11220:	beq	11240 <teste_grafo_aresta@@Base+0x160>
   11224:	ldr	r0, [pc, #152]	; 112c4 <teste_grafo_aresta@@Base+0x1e4>
   11228:	add	r0, pc, r0
   1122c:	bl	10bdc <printf@plt>
   11230:	ldr	lr, [fp, #-20]	; 0xffffffec
   11234:	add	lr, lr, #1
   11238:	str	lr, [fp, #-20]	; 0xffffffec
   1123c:	str	r0, [fp, #-52]	; 0xffffffcc
   11240:	movw	r0, #0
   11244:	movw	r1, #2
   11248:	movw	r2, #7
   1124c:	bl	12460 <grafo_aresta@@Base>
   11250:	cmn	r0, #1
   11254:	beq	11274 <teste_grafo_aresta@@Base+0x194>
   11258:	ldr	r0, [pc, #104]	; 112c8 <teste_grafo_aresta@@Base+0x1e8>
   1125c:	add	r0, pc, r0
   11260:	bl	10bdc <printf@plt>
   11264:	ldr	lr, [fp, #-20]	; 0xffffffec
   11268:	add	lr, lr, #1
   1126c:	str	lr, [fp, #-20]	; 0xffffffec
   11270:	str	r0, [fp, #-56]	; 0xffffffc8
   11274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11278:	bl	123a8 <grafo_apaga@@Base>
   1127c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11280:	cmp	r0, #0
   11284:	bne	1129c <teste_grafo_aresta@@Base+0x1bc>
   11288:	ldr	r0, [pc, #60]	; 112cc <teste_grafo_aresta@@Base+0x1ec>
   1128c:	add	r0, pc, r0
   11290:	bl	10bdc <printf@plt>
   11294:	str	r0, [fp, #-60]	; 0xffffffc4
   11298:	b	112ac <teste_grafo_aresta@@Base+0x1cc>
   1129c:	ldr	r0, [pc, #44]	; 112d0 <teste_grafo_aresta@@Base+0x1f0>
   112a0:	add	r0, pc, r0
   112a4:	bl	10bdc <printf@plt>
   112a8:	str	r0, [fp, #-64]	; 0xffffffc0
   112ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   112b0:	sub	sp, fp, #16
   112b4:	pop	{r4, r5, r6, sl, fp, pc}
   112b8:	andeq	r2, r0, sl, lsl #1
   112bc:	andeq	r2, r0, r7, rrx
   112c0:	andeq	r2, r0, r3, lsr r0
   112c4:	andeq	r2, r0, r7, lsr r0
   112c8:	andeq	r2, r0, pc, lsr r0
   112cc:	andeq	r1, r0, pc, lsr pc
   112d0:			; <UNDEFINED> instruction: 0x000025bf

000112d4 <teste_grafo_adiciona@@Base>:
   112d4:	push	{fp, lr}
   112d8:	mov	fp, sp
   112dc:	sub	sp, sp, #64	; 0x40
   112e0:	movw	r0, #0
   112e4:	str	r0, [fp, #-4]
   112e8:	movw	r0, #9
   112ec:	movw	r1, #4
   112f0:	movw	r2, #3
   112f4:	movw	r3, #2
   112f8:	str	r3, [fp, #-12]
   112fc:	movw	ip, #7
   11300:	str	ip, [sp]
   11304:	ldr	ip, [fp, #-12]
   11308:	str	ip, [sp, #4]
   1130c:	bl	10d2c <_g@@Base>
   11310:	ldr	r1, [pc, #640]	; 11598 <teste_grafo_adiciona@@Base+0x2c4>
   11314:	add	r1, pc, r1
   11318:	str	r0, [fp, #-8]
   1131c:	mov	r0, r1
   11320:	bl	10bdc <printf@plt>
   11324:	ldr	r1, [fp, #-8]
   11328:	str	r0, [fp, #-16]
   1132c:	mov	r0, r1
   11330:	movw	r1, #2
   11334:	movw	r2, #7
   11338:	bl	1252c <grafo_adiciona@@Base>
   1133c:	cmp	r0, #1
   11340:	beq	11360 <teste_grafo_adiciona@@Base+0x8c>
   11344:	ldr	r0, [pc, #592]	; 1159c <teste_grafo_adiciona@@Base+0x2c8>
   11348:	add	r0, pc, r0
   1134c:	bl	10bdc <printf@plt>
   11350:	ldr	lr, [fp, #-4]
   11354:	add	lr, lr, #1
   11358:	str	lr, [fp, #-4]
   1135c:	str	r0, [fp, #-20]	; 0xffffffec
   11360:	ldr	r0, [fp, #-8]
   11364:	ldr	r0, [r0, #4]
   11368:	ldr	r0, [r0, #20]
   1136c:	movw	r1, #0
   11370:	cmp	r0, r1
   11374:	beq	11390 <teste_grafo_adiciona@@Base+0xbc>
   11378:	ldr	r0, [fp, #-8]
   1137c:	ldr	r0, [r0, #4]
   11380:	ldr	r0, [r0, #20]
   11384:	ldr	r0, [r0]
   11388:	cmp	r0, #7
   1138c:	beq	113ac <teste_grafo_adiciona@@Base+0xd8>
   11390:	ldr	r0, [pc, #520]	; 115a0 <teste_grafo_adiciona@@Base+0x2cc>
   11394:	add	r0, pc, r0
   11398:	bl	10bdc <printf@plt>
   1139c:	ldr	lr, [fp, #-4]
   113a0:	add	lr, lr, #1
   113a4:	str	lr, [fp, #-4]
   113a8:	str	r0, [fp, #-24]	; 0xffffffe8
   113ac:	ldr	r0, [fp, #-8]
   113b0:	movw	r1, #3
   113b4:	movw	r2, #8
   113b8:	bl	1252c <grafo_adiciona@@Base>
   113bc:	cmp	r0, #1
   113c0:	beq	113e0 <teste_grafo_adiciona@@Base+0x10c>
   113c4:	ldr	r0, [pc, #472]	; 115a4 <teste_grafo_adiciona@@Base+0x2d0>
   113c8:	add	r0, pc, r0
   113cc:	bl	10bdc <printf@plt>
   113d0:	ldr	lr, [fp, #-4]
   113d4:	add	lr, lr, #1
   113d8:	str	lr, [fp, #-4]
   113dc:	str	r0, [fp, #-28]	; 0xffffffe4
   113e0:	ldr	r0, [fp, #-8]
   113e4:	ldr	r0, [r0, #4]
   113e8:	ldr	r0, [r0, #28]
   113ec:	movw	r1, #0
   113f0:	cmp	r0, r1
   113f4:	beq	1149c <teste_grafo_adiciona@@Base+0x1c8>
   113f8:	ldr	r0, [fp, #-8]
   113fc:	ldr	r0, [r0, #4]
   11400:	ldr	r0, [r0, #28]
   11404:	ldr	r0, [r0, #4]
   11408:	movw	r1, #0
   1140c:	cmp	r0, r1
   11410:	beq	1149c <teste_grafo_adiciona@@Base+0x1c8>
   11414:	ldr	r0, [fp, #-8]
   11418:	ldr	r0, [r0, #4]
   1141c:	ldr	r0, [r0, #28]
   11420:	ldr	r0, [r0, #4]
   11424:	ldr	r0, [r0, #4]
   11428:	movw	r1, #0
   1142c:	cmp	r0, r1
   11430:	bne	1149c <teste_grafo_adiciona@@Base+0x1c8>
   11434:	ldr	r0, [fp, #-8]
   11438:	ldr	r0, [r0, #4]
   1143c:	ldr	r0, [r0, #28]
   11440:	ldr	r0, [r0]
   11444:	cmp	r0, #2
   11448:	bne	11468 <teste_grafo_adiciona@@Base+0x194>
   1144c:	ldr	r0, [fp, #-8]
   11450:	ldr	r0, [r0, #4]
   11454:	ldr	r0, [r0, #28]
   11458:	ldr	r0, [r0, #4]
   1145c:	ldr	r0, [r0]
   11460:	cmp	r0, #8
   11464:	beq	114b8 <teste_grafo_adiciona@@Base+0x1e4>
   11468:	ldr	r0, [fp, #-8]
   1146c:	ldr	r0, [r0, #4]
   11470:	ldr	r0, [r0, #28]
   11474:	ldr	r0, [r0]
   11478:	cmp	r0, #8
   1147c:	bne	1149c <teste_grafo_adiciona@@Base+0x1c8>
   11480:	ldr	r0, [fp, #-8]
   11484:	ldr	r0, [r0, #4]
   11488:	ldr	r0, [r0, #28]
   1148c:	ldr	r0, [r0, #4]
   11490:	ldr	r0, [r0]
   11494:	cmp	r0, #2
   11498:	beq	114b8 <teste_grafo_adiciona@@Base+0x1e4>
   1149c:	ldr	r0, [pc, #260]	; 115a8 <teste_grafo_adiciona@@Base+0x2d4>
   114a0:	add	r0, pc, r0
   114a4:	bl	10bdc <printf@plt>
   114a8:	ldr	lr, [fp, #-4]
   114ac:	add	lr, lr, #1
   114b0:	str	lr, [fp, #-4]
   114b4:	str	r0, [sp, #32]
   114b8:	ldr	r0, [fp, #-8]
   114bc:	movw	r1, #2
   114c0:	movw	r2, #7
   114c4:	bl	1252c <grafo_adiciona@@Base>
   114c8:	cmp	r0, #0
   114cc:	beq	114ec <teste_grafo_adiciona@@Base+0x218>
   114d0:	ldr	r0, [pc, #212]	; 115ac <teste_grafo_adiciona@@Base+0x2d8>
   114d4:	add	r0, pc, r0
   114d8:	bl	10bdc <printf@plt>
   114dc:	ldr	lr, [fp, #-4]
   114e0:	add	lr, lr, #1
   114e4:	str	lr, [fp, #-4]
   114e8:	str	r0, [sp, #28]
   114ec:	ldr	r0, [fp, #-8]
   114f0:	movw	r1, #22
   114f4:	movw	r2, #7
   114f8:	bl	1252c <grafo_adiciona@@Base>
   114fc:	cmn	r0, #1
   11500:	beq	11520 <teste_grafo_adiciona@@Base+0x24c>
   11504:	ldr	r0, [pc, #164]	; 115b0 <teste_grafo_adiciona@@Base+0x2dc>
   11508:	add	r0, pc, r0
   1150c:	bl	10bdc <printf@plt>
   11510:	ldr	lr, [fp, #-4]
   11514:	add	lr, lr, #1
   11518:	str	lr, [fp, #-4]
   1151c:	str	r0, [sp, #24]
   11520:	movw	r0, #0
   11524:	movw	r1, #2
   11528:	movw	r2, #7
   1152c:	bl	1252c <grafo_adiciona@@Base>
   11530:	cmn	r0, #1
   11534:	beq	11554 <teste_grafo_adiciona@@Base+0x280>
   11538:	ldr	r0, [pc, #116]	; 115b4 <teste_grafo_adiciona@@Base+0x2e0>
   1153c:	add	r0, pc, r0
   11540:	bl	10bdc <printf@plt>
   11544:	ldr	lr, [fp, #-4]
   11548:	add	lr, lr, #1
   1154c:	str	lr, [fp, #-4]
   11550:	str	r0, [sp, #20]
   11554:	ldr	r0, [fp, #-8]
   11558:	bl	123a8 <grafo_apaga@@Base>
   1155c:	ldr	r0, [fp, #-4]
   11560:	cmp	r0, #0
   11564:	bne	1157c <teste_grafo_adiciona@@Base+0x2a8>
   11568:	ldr	r0, [pc, #72]	; 115b8 <teste_grafo_adiciona@@Base+0x2e4>
   1156c:	add	r0, pc, r0
   11570:	bl	10bdc <printf@plt>
   11574:	str	r0, [sp, #16]
   11578:	b	1158c <teste_grafo_adiciona@@Base+0x2b8>
   1157c:	ldr	r0, [pc, #56]	; 115bc <teste_grafo_adiciona@@Base+0x2e8>
   11580:	add	r0, pc, r0
   11584:	bl	10bdc <printf@plt>
   11588:	str	r0, [sp, #12]
   1158c:	ldr	r0, [fp, #-4]
   11590:	mov	sp, fp
   11594:	pop	{fp, pc}
   11598:			; <UNDEFINED> instruction: 0x00001fbd
   1159c:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   115a0:	andeq	r1, r0, sl, lsl #31
   115a4:	andeq	r1, r0, ip, lsl pc
   115a8:	andeq	r1, r0, ip, lsr #29
   115ac:			; <UNDEFINED> instruction: 0x00001eb3
   115b0:			; <UNDEFINED> instruction: 0x00001eb7
   115b4:			; <UNDEFINED> instruction: 0x00001eba
   115b8:	andeq	r1, r0, pc, asr ip
   115bc:	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>

000115c0 <teste_grafo_remove@@Base>:
   115c0:	push	{fp, lr}
   115c4:	mov	fp, sp
   115c8:	sub	sp, sp, #64	; 0x40
   115cc:	movw	r0, #0
   115d0:	str	r0, [fp, #-4]
   115d4:	movw	r0, #9
   115d8:	movw	r1, #6
   115dc:	movw	r2, #3
   115e0:	movw	r3, #2
   115e4:	str	r3, [fp, #-12]
   115e8:	movw	ip, #7
   115ec:	str	ip, [sp]
   115f0:	ldr	lr, [fp, #-12]
   115f4:	str	lr, [sp, #4]
   115f8:	str	ip, [sp, #8]
   115fc:	movw	ip, #1
   11600:	str	ip, [sp, #12]
   11604:	bl	10d2c <_g@@Base>
   11608:	ldr	r1, [pc, #452]	; 117d4 <teste_grafo_remove@@Base+0x214>
   1160c:	add	r1, pc, r1
   11610:	str	r0, [fp, #-8]
   11614:	mov	r0, r1
   11618:	bl	10bdc <printf@plt>
   1161c:	ldr	r1, [fp, #-8]
   11620:	str	r0, [fp, #-16]
   11624:	mov	r0, r1
   11628:	movw	r1, #7
   1162c:	movw	r2, #1
   11630:	bl	12624 <grafo_remove@@Base>
   11634:	cmp	r0, #1
   11638:	beq	11658 <teste_grafo_remove@@Base+0x98>
   1163c:	ldr	r0, [pc, #404]	; 117d8 <teste_grafo_remove@@Base+0x218>
   11640:	add	r0, pc, r0
   11644:	bl	10bdc <printf@plt>
   11648:	ldr	lr, [fp, #-4]
   1164c:	add	lr, lr, #1
   11650:	str	lr, [fp, #-4]
   11654:	str	r0, [fp, #-20]	; 0xffffffec
   11658:	ldr	r0, [fp, #-8]
   1165c:	ldr	r0, [r0, #4]
   11660:	ldr	r0, [r0, #60]	; 0x3c
   11664:	movw	r1, #0
   11668:	cmp	r0, r1
   1166c:	beq	116a4 <teste_grafo_remove@@Base+0xe4>
   11670:	ldr	r0, [fp, #-8]
   11674:	ldr	r0, [r0, #4]
   11678:	ldr	r0, [r0, #60]	; 0x3c
   1167c:	ldr	r0, [r0, #4]
   11680:	movw	r1, #0
   11684:	cmp	r0, r1
   11688:	bne	116a4 <teste_grafo_remove@@Base+0xe4>
   1168c:	ldr	r0, [fp, #-8]
   11690:	ldr	r0, [r0, #4]
   11694:	ldr	r0, [r0, #60]	; 0x3c
   11698:	ldr	r0, [r0]
   1169c:	cmp	r0, #2
   116a0:	beq	116c0 <teste_grafo_remove@@Base+0x100>
   116a4:	ldr	r0, [pc, #304]	; 117dc <teste_grafo_remove@@Base+0x21c>
   116a8:	add	r0, pc, r0
   116ac:	bl	10bdc <printf@plt>
   116b0:	ldr	lr, [fp, #-4]
   116b4:	add	lr, lr, #1
   116b8:	str	lr, [fp, #-4]
   116bc:	str	r0, [fp, #-24]	; 0xffffffe8
   116c0:	ldr	r0, [fp, #-8]
   116c4:	movw	r1, #7
   116c8:	movw	r2, #2
   116cc:	bl	12624 <grafo_remove@@Base>
   116d0:	cmp	r0, #1
   116d4:	beq	116f4 <teste_grafo_remove@@Base+0x134>
   116d8:	ldr	r0, [pc, #256]	; 117e0 <teste_grafo_remove@@Base+0x220>
   116dc:	add	r0, pc, r0
   116e0:	bl	10bdc <printf@plt>
   116e4:	ldr	lr, [fp, #-4]
   116e8:	add	lr, lr, #1
   116ec:	str	lr, [fp, #-4]
   116f0:	str	r0, [fp, #-28]	; 0xffffffe4
   116f4:	ldr	r0, [fp, #-8]
   116f8:	ldr	r0, [r0, #4]
   116fc:	ldr	r0, [r0, #60]	; 0x3c
   11700:	movw	r1, #0
   11704:	cmp	r0, r1
   11708:	beq	11728 <teste_grafo_remove@@Base+0x168>
   1170c:	ldr	r0, [pc, #208]	; 117e4 <teste_grafo_remove@@Base+0x224>
   11710:	add	r0, pc, r0
   11714:	bl	10bdc <printf@plt>
   11718:	ldr	lr, [fp, #-4]
   1171c:	add	lr, lr, #1
   11720:	str	lr, [fp, #-4]
   11724:	str	r0, [sp, #32]
   11728:	ldr	r0, [fp, #-8]
   1172c:	movw	r1, #4
   11730:	movw	r2, #0
   11734:	bl	12624 <grafo_remove@@Base>
   11738:	cmp	r0, #0
   1173c:	beq	1175c <teste_grafo_remove@@Base+0x19c>
   11740:	ldr	r0, [pc, #160]	; 117e8 <teste_grafo_remove@@Base+0x228>
   11744:	add	r0, pc, r0
   11748:	bl	10bdc <printf@plt>
   1174c:	ldr	lr, [fp, #-4]
   11750:	add	lr, lr, #1
   11754:	str	lr, [fp, #-4]
   11758:	str	r0, [sp, #28]
   1175c:	ldr	r0, [fp, #-8]
   11760:	movw	r1, #7
   11764:	movw	r2, #22
   11768:	bl	12624 <grafo_remove@@Base>
   1176c:	cmn	r0, #1
   11770:	beq	11790 <teste_grafo_remove@@Base+0x1d0>
   11774:	ldr	r0, [pc, #112]	; 117ec <teste_grafo_remove@@Base+0x22c>
   11778:	add	r0, pc, r0
   1177c:	bl	10bdc <printf@plt>
   11780:	ldr	lr, [fp, #-4]
   11784:	add	lr, lr, #1
   11788:	str	lr, [fp, #-4]
   1178c:	str	r0, [sp, #24]
   11790:	ldr	r0, [fp, #-8]
   11794:	bl	123a8 <grafo_apaga@@Base>
   11798:	ldr	r0, [fp, #-4]
   1179c:	cmp	r0, #0
   117a0:	bne	117b8 <teste_grafo_remove@@Base+0x1f8>
   117a4:	ldr	r0, [pc, #68]	; 117f0 <teste_grafo_remove@@Base+0x230>
   117a8:	add	r0, pc, r0
   117ac:	bl	10bdc <printf@plt>
   117b0:	str	r0, [sp, #20]
   117b4:	b	117c8 <teste_grafo_remove@@Base+0x208>
   117b8:	ldr	r0, [pc, #52]	; 117f4 <teste_grafo_remove@@Base+0x234>
   117bc:	add	r0, pc, r0
   117c0:	bl	10bdc <printf@plt>
   117c4:	str	r0, [sp, #16]
   117c8:	ldr	r0, [fp, #-4]
   117cc:	mov	sp, fp
   117d0:	pop	{fp, pc}
   117d4:	andeq	r1, r0, pc, lsl lr
   117d8:	strdeq	r1, [r0], -ip
   117dc:	andeq	r1, r0, lr, asr #27
   117e0:	andeq	r1, r0, r0, ror #26
   117e4:	andeq	r1, r0, r6, ror #26
   117e8:	andeq	r1, r0, fp, ror #26
   117ec:	andeq	r1, r0, r3, ror sp
   117f0:	andeq	r1, r0, r3, lsr #20
   117f4:	andeq	r2, r0, r3, lsr #1

000117f8 <teste_v_sucessores@@Base>:
   117f8:	push	{r4, r5, r6, sl, fp, lr}
   117fc:	add	fp, sp, #16
   11800:	sub	sp, sp, #160	; 0xa0
   11804:	movw	r0, #0
   11808:	str	r0, [fp, #-24]	; 0xffffffe8
   1180c:	movw	r1, #8
   11810:	str	r0, [fp, #-36]	; 0xffffffdc
   11814:	mov	r0, r1
   11818:	movw	r1, #22
   1181c:	movw	r2, #3
   11820:	str	r2, [fp, #-40]	; 0xffffffd8
   11824:	movw	r3, #2
   11828:	str	r3, [fp, #-44]	; 0xffffffd4
   1182c:	movw	ip, #7
   11830:	str	ip, [sp]
   11834:	ldr	lr, [fp, #-44]	; 0xffffffd4
   11838:	str	lr, [sp, #4]
   1183c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   11840:	str	r4, [sp, #8]
   11844:	str	lr, [sp, #12]
   11848:	str	ip, [sp, #16]
   1184c:	movw	r5, #5
   11850:	str	r5, [sp, #20]
   11854:	str	r5, [sp, #24]
   11858:	movw	r5, #4
   1185c:	str	r5, [sp, #28]
   11860:	str	r5, [sp, #32]
   11864:	str	r4, [sp, #36]	; 0x24
   11868:	str	r5, [sp, #40]	; 0x28
   1186c:	movw	r5, #6
   11870:	str	r5, [sp, #44]	; 0x2c
   11874:	movw	r6, #1
   11878:	str	r6, [sp, #48]	; 0x30
   1187c:	str	r6, [sp, #52]	; 0x34
   11880:	str	ip, [sp, #56]	; 0x38
   11884:	str	r5, [sp, #60]	; 0x3c
   11888:	str	r5, [sp, #64]	; 0x40
   1188c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   11890:	str	ip, [sp, #68]	; 0x44
   11894:	str	r4, [sp, #72]	; 0x48
   11898:	str	r6, [sp, #76]	; 0x4c
   1189c:	bl	10d2c <_g@@Base>
   118a0:	ldr	r1, [pc, #552]	; 11ad0 <teste_v_sucessores@@Base+0x2d8>
   118a4:	add	r1, pc, r1
   118a8:	str	r0, [fp, #-28]	; 0xffffffe4
   118ac:	mov	r0, r1
   118b0:	bl	10bdc <printf@plt>
   118b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   118b8:	str	r0, [fp, #-48]	; 0xffffffd0
   118bc:	mov	r0, r1
   118c0:	movw	r1, #7
   118c4:	bl	127ec <v_sucessores@@Base>
   118c8:	str	r0, [fp, #-32]	; 0xffffffe0
   118cc:	movw	r1, #0
   118d0:	cmp	r0, r1
   118d4:	bne	118f4 <teste_v_sucessores@@Base+0xfc>
   118d8:	ldr	r0, [pc, #500]	; 11ad4 <teste_v_sucessores@@Base+0x2dc>
   118dc:	add	r0, pc, r0
   118e0:	bl	10bdc <printf@plt>
   118e4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   118e8:	add	lr, lr, #1
   118ec:	str	lr, [fp, #-24]	; 0xffffffe8
   118f0:	str	r0, [fp, #-52]	; 0xffffffcc
   118f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   118f8:	movw	r1, #0
   118fc:	cmp	r0, r1
   11900:	bne	11940 <teste_v_sucessores@@Base+0x148>
   11904:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11908:	cmp	r0, #0
   1190c:	bne	11924 <teste_v_sucessores@@Base+0x12c>
   11910:	ldr	r0, [pc, #448]	; 11ad8 <teste_v_sucessores@@Base+0x2e0>
   11914:	add	r0, pc, r0
   11918:	bl	10bdc <printf@plt>
   1191c:	str	r0, [fp, #-56]	; 0xffffffc8
   11920:	b	11934 <teste_v_sucessores@@Base+0x13c>
   11924:	ldr	r0, [pc, #432]	; 11adc <teste_v_sucessores@@Base+0x2e4>
   11928:	add	r0, pc, r0
   1192c:	bl	10bdc <printf@plt>
   11930:	str	r0, [fp, #-60]	; 0xffffffc4
   11934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11938:	str	r0, [fp, #-20]	; 0xffffffec
   1193c:	b	11ac4 <teste_v_sucessores@@Base+0x2cc>
   11940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11944:	ldr	r0, [r0]
   11948:	cmp	r0, #3
   1194c:	beq	1196c <teste_v_sucessores@@Base+0x174>
   11950:	ldr	r0, [pc, #392]	; 11ae0 <teste_v_sucessores@@Base+0x2e8>
   11954:	add	r0, pc, r0
   11958:	bl	10bdc <printf@plt>
   1195c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11960:	add	lr, lr, #1
   11964:	str	lr, [fp, #-24]	; 0xffffffe8
   11968:	str	r0, [fp, #-64]	; 0xffffffc0
   1196c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11970:	movw	r1, #2
   11974:	bl	10e60 <_f@@Base>
   11978:	cmp	r0, #0
   1197c:	beq	119a8 <teste_v_sucessores@@Base+0x1b0>
   11980:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11984:	movw	r1, #5
   11988:	bl	10e60 <_f@@Base>
   1198c:	cmp	r0, #0
   11990:	beq	119a8 <teste_v_sucessores@@Base+0x1b0>
   11994:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11998:	movw	r1, #6
   1199c:	bl	10e60 <_f@@Base>
   119a0:	cmp	r0, #0
   119a4:	bne	119c4 <teste_v_sucessores@@Base+0x1cc>
   119a8:	ldr	r0, [pc, #308]	; 11ae4 <teste_v_sucessores@@Base+0x2ec>
   119ac:	add	r0, pc, r0
   119b0:	bl	10bdc <printf@plt>
   119b4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   119b8:	add	lr, lr, #1
   119bc:	str	lr, [fp, #-24]	; 0xffffffe8
   119c0:	str	r0, [fp, #-68]	; 0xffffffbc
   119c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   119c8:	bl	12bf0 <vetor_apaga@@Base>
   119cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   119d0:	movw	r1, #2
   119d4:	bl	127ec <v_sucessores@@Base>
   119d8:	str	r0, [fp, #-32]	; 0xffffffe0
   119dc:	movw	r1, #0
   119e0:	cmp	r0, r1
   119e4:	bne	11a04 <teste_v_sucessores@@Base+0x20c>
   119e8:	ldr	r0, [pc, #248]	; 11ae8 <teste_v_sucessores@@Base+0x2f0>
   119ec:	add	r0, pc, r0
   119f0:	bl	10bdc <printf@plt>
   119f4:	ldr	lr, [fp, #-24]	; 0xffffffe8
   119f8:	add	lr, lr, #1
   119fc:	str	lr, [fp, #-24]	; 0xffffffe8
   11a00:	str	r0, [fp, #-72]	; 0xffffffb8
   11a04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a08:	movw	r1, #0
   11a0c:	cmp	r0, r1
   11a10:	bne	11a50 <teste_v_sucessores@@Base+0x258>
   11a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a18:	cmp	r0, #0
   11a1c:	bne	11a34 <teste_v_sucessores@@Base+0x23c>
   11a20:	ldr	r0, [pc, #196]	; 11aec <teste_v_sucessores@@Base+0x2f4>
   11a24:	add	r0, pc, r0
   11a28:	bl	10bdc <printf@plt>
   11a2c:	str	r0, [fp, #-76]	; 0xffffffb4
   11a30:	b	11a44 <teste_v_sucessores@@Base+0x24c>
   11a34:	ldr	r0, [pc, #180]	; 11af0 <teste_v_sucessores@@Base+0x2f8>
   11a38:	add	r0, pc, r0
   11a3c:	bl	10bdc <printf@plt>
   11a40:	str	r0, [fp, #-80]	; 0xffffffb0
   11a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a48:	str	r0, [fp, #-20]	; 0xffffffec
   11a4c:	b	11ac4 <teste_v_sucessores@@Base+0x2cc>
   11a50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a54:	ldr	r0, [r0]
   11a58:	cmp	r0, #0
   11a5c:	beq	11a7c <teste_v_sucessores@@Base+0x284>
   11a60:	ldr	r0, [pc, #140]	; 11af4 <teste_v_sucessores@@Base+0x2fc>
   11a64:	add	r0, pc, r0
   11a68:	bl	10bdc <printf@plt>
   11a6c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11a70:	add	lr, lr, #1
   11a74:	str	lr, [fp, #-24]	; 0xffffffe8
   11a78:	str	r0, [fp, #-84]	; 0xffffffac
   11a7c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11a80:	bl	12bf0 <vetor_apaga@@Base>
   11a84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a88:	bl	123a8 <grafo_apaga@@Base>
   11a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a90:	cmp	r0, #0
   11a94:	bne	11aac <teste_v_sucessores@@Base+0x2b4>
   11a98:	ldr	r0, [pc, #88]	; 11af8 <teste_v_sucessores@@Base+0x300>
   11a9c:	add	r0, pc, r0
   11aa0:	bl	10bdc <printf@plt>
   11aa4:	str	r0, [sp, #88]	; 0x58
   11aa8:	b	11abc <teste_v_sucessores@@Base+0x2c4>
   11aac:	ldr	r0, [pc, #72]	; 11afc <teste_v_sucessores@@Base+0x304>
   11ab0:	add	r0, pc, r0
   11ab4:	bl	10bdc <printf@plt>
   11ab8:	str	r0, [sp, #84]	; 0x54
   11abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11ac0:	str	r0, [fp, #-20]	; 0xffffffec
   11ac4:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ac8:	sub	sp, fp, #16
   11acc:	pop	{r4, r5, r6, sl, fp, pc}
   11ad0:	andeq	r1, r0, pc, ror ip
   11ad4:	andeq	r1, r0, r8, asr ip
   11ad8:			; <UNDEFINED> instruction: 0x000018b7
   11adc:	andeq	r1, r0, r7, lsr pc
   11ae0:	andeq	r1, r0, sp, lsl #24
   11ae4:	andeq	r1, r0, r0, ror #23
   11ae8:	andeq	r1, r0, ip, asr #23
   11aec:	andeq	r1, r0, r7, lsr #15
   11af0:	andeq	r1, r0, r7, lsr #28
   11af4:	muleq	r0, r2, fp
   11af8:	andeq	r1, r0, pc, lsr #14
   11afc:	andeq	r1, r0, pc, lsr #27

00011b00 <teste_v_antecessores@@Base>:
   11b00:	push	{r4, r5, r6, sl, fp, lr}
   11b04:	add	fp, sp, #16
   11b08:	sub	sp, sp, #160	; 0xa0
   11b0c:	movw	r0, #0
   11b10:	str	r0, [fp, #-24]	; 0xffffffe8
   11b14:	movw	r1, #8
   11b18:	str	r0, [fp, #-36]	; 0xffffffdc
   11b1c:	mov	r0, r1
   11b20:	movw	r1, #22
   11b24:	movw	r2, #3
   11b28:	str	r2, [fp, #-40]	; 0xffffffd8
   11b2c:	movw	r3, #2
   11b30:	str	r3, [fp, #-44]	; 0xffffffd4
   11b34:	movw	ip, #7
   11b38:	str	ip, [sp]
   11b3c:	ldr	lr, [fp, #-44]	; 0xffffffd4
   11b40:	str	lr, [sp, #4]
   11b44:	ldr	r4, [fp, #-36]	; 0xffffffdc
   11b48:	str	r4, [sp, #8]
   11b4c:	str	lr, [sp, #12]
   11b50:	str	ip, [sp, #16]
   11b54:	movw	r5, #5
   11b58:	str	r5, [sp, #20]
   11b5c:	str	r5, [sp, #24]
   11b60:	movw	r5, #4
   11b64:	str	r5, [sp, #28]
   11b68:	str	r5, [sp, #32]
   11b6c:	str	r4, [sp, #36]	; 0x24
   11b70:	str	r5, [sp, #40]	; 0x28
   11b74:	movw	r5, #6
   11b78:	str	r5, [sp, #44]	; 0x2c
   11b7c:	movw	r6, #1
   11b80:	str	r6, [sp, #48]	; 0x30
   11b84:	str	r6, [sp, #52]	; 0x34
   11b88:	str	ip, [sp, #56]	; 0x38
   11b8c:	str	r5, [sp, #60]	; 0x3c
   11b90:	str	r5, [sp, #64]	; 0x40
   11b94:	ldr	ip, [fp, #-40]	; 0xffffffd8
   11b98:	str	ip, [sp, #68]	; 0x44
   11b9c:	str	r4, [sp, #72]	; 0x48
   11ba0:	str	r6, [sp, #76]	; 0x4c
   11ba4:	bl	10d2c <_g@@Base>
   11ba8:	ldr	r1, [pc, #552]	; 11dd8 <teste_v_antecessores@@Base+0x2d8>
   11bac:	add	r1, pc, r1
   11bb0:	str	r0, [fp, #-28]	; 0xffffffe4
   11bb4:	mov	r0, r1
   11bb8:	bl	10bdc <printf@plt>
   11bbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11bc0:	str	r0, [fp, #-48]	; 0xffffffd0
   11bc4:	mov	r0, r1
   11bc8:	movw	r1, #2
   11bcc:	bl	128bc <v_antecessores@@Base>
   11bd0:	str	r0, [fp, #-32]	; 0xffffffe0
   11bd4:	movw	r1, #0
   11bd8:	cmp	r0, r1
   11bdc:	bne	11bfc <teste_v_antecessores@@Base+0xfc>
   11be0:	ldr	r0, [pc, #500]	; 11ddc <teste_v_antecessores@@Base+0x2dc>
   11be4:	add	r0, pc, r0
   11be8:	bl	10bdc <printf@plt>
   11bec:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11bf0:	add	lr, lr, #1
   11bf4:	str	lr, [fp, #-24]	; 0xffffffe8
   11bf8:	str	r0, [fp, #-52]	; 0xffffffcc
   11bfc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c00:	movw	r1, #0
   11c04:	cmp	r0, r1
   11c08:	bne	11c48 <teste_v_antecessores@@Base+0x148>
   11c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c10:	cmp	r0, #0
   11c14:	bne	11c2c <teste_v_antecessores@@Base+0x12c>
   11c18:	ldr	r0, [pc, #448]	; 11de0 <teste_v_antecessores@@Base+0x2e0>
   11c1c:	add	r0, pc, r0
   11c20:	bl	10bdc <printf@plt>
   11c24:	str	r0, [fp, #-56]	; 0xffffffc8
   11c28:	b	11c3c <teste_v_antecessores@@Base+0x13c>
   11c2c:	ldr	r0, [pc, #432]	; 11de4 <teste_v_antecessores@@Base+0x2e4>
   11c30:	add	r0, pc, r0
   11c34:	bl	10bdc <printf@plt>
   11c38:	str	r0, [fp, #-60]	; 0xffffffc4
   11c3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11c40:	str	r0, [fp, #-20]	; 0xffffffec
   11c44:	b	11dcc <teste_v_antecessores@@Base+0x2cc>
   11c48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c4c:	ldr	r0, [r0]
   11c50:	cmp	r0, #3
   11c54:	beq	11c74 <teste_v_antecessores@@Base+0x174>
   11c58:	ldr	r0, [pc, #392]	; 11de8 <teste_v_antecessores@@Base+0x2e8>
   11c5c:	add	r0, pc, r0
   11c60:	bl	10bdc <printf@plt>
   11c64:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11c68:	add	lr, lr, #1
   11c6c:	str	lr, [fp, #-24]	; 0xffffffe8
   11c70:	str	r0, [fp, #-64]	; 0xffffffc0
   11c74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c78:	movw	r1, #0
   11c7c:	bl	10e60 <_f@@Base>
   11c80:	cmp	r0, #0
   11c84:	beq	11cb0 <teste_v_antecessores@@Base+0x1b0>
   11c88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11c8c:	movw	r1, #3
   11c90:	bl	10e60 <_f@@Base>
   11c94:	cmp	r0, #0
   11c98:	beq	11cb0 <teste_v_antecessores@@Base+0x1b0>
   11c9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ca0:	movw	r1, #7
   11ca4:	bl	10e60 <_f@@Base>
   11ca8:	cmp	r0, #0
   11cac:	bne	11ccc <teste_v_antecessores@@Base+0x1cc>
   11cb0:	ldr	r0, [pc, #308]	; 11dec <teste_v_antecessores@@Base+0x2ec>
   11cb4:	add	r0, pc, r0
   11cb8:	bl	10bdc <printf@plt>
   11cbc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11cc0:	add	lr, lr, #1
   11cc4:	str	lr, [fp, #-24]	; 0xffffffe8
   11cc8:	str	r0, [fp, #-68]	; 0xffffffbc
   11ccc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11cd0:	bl	12bf0 <vetor_apaga@@Base>
   11cd4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11cd8:	movw	r1, #7
   11cdc:	bl	128bc <v_antecessores@@Base>
   11ce0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ce4:	movw	r1, #0
   11ce8:	cmp	r0, r1
   11cec:	bne	11d0c <teste_v_antecessores@@Base+0x20c>
   11cf0:	ldr	r0, [pc, #248]	; 11df0 <teste_v_antecessores@@Base+0x2f0>
   11cf4:	add	r0, pc, r0
   11cf8:	bl	10bdc <printf@plt>
   11cfc:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11d00:	add	lr, lr, #1
   11d04:	str	lr, [fp, #-24]	; 0xffffffe8
   11d08:	str	r0, [fp, #-72]	; 0xffffffb8
   11d0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d10:	movw	r1, #0
   11d14:	cmp	r0, r1
   11d18:	bne	11d58 <teste_v_antecessores@@Base+0x258>
   11d1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d20:	cmp	r0, #0
   11d24:	bne	11d3c <teste_v_antecessores@@Base+0x23c>
   11d28:	ldr	r0, [pc, #196]	; 11df4 <teste_v_antecessores@@Base+0x2f4>
   11d2c:	add	r0, pc, r0
   11d30:	bl	10bdc <printf@plt>
   11d34:	str	r0, [fp, #-76]	; 0xffffffb4
   11d38:	b	11d4c <teste_v_antecessores@@Base+0x24c>
   11d3c:	ldr	r0, [pc, #180]	; 11df8 <teste_v_antecessores@@Base+0x2f8>
   11d40:	add	r0, pc, r0
   11d44:	bl	10bdc <printf@plt>
   11d48:	str	r0, [fp, #-80]	; 0xffffffb0
   11d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d50:	str	r0, [fp, #-20]	; 0xffffffec
   11d54:	b	11dcc <teste_v_antecessores@@Base+0x2cc>
   11d58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d5c:	ldr	r0, [r0]
   11d60:	cmp	r0, #0
   11d64:	beq	11d84 <teste_v_antecessores@@Base+0x284>
   11d68:	ldr	r0, [pc, #140]	; 11dfc <teste_v_antecessores@@Base+0x2fc>
   11d6c:	add	r0, pc, r0
   11d70:	bl	10bdc <printf@plt>
   11d74:	ldr	lr, [fp, #-24]	; 0xffffffe8
   11d78:	add	lr, lr, #1
   11d7c:	str	lr, [fp, #-24]	; 0xffffffe8
   11d80:	str	r0, [fp, #-84]	; 0xffffffac
   11d84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d88:	bl	12bf0 <vetor_apaga@@Base>
   11d8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d90:	bl	123a8 <grafo_apaga@@Base>
   11d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11d98:	cmp	r0, #0
   11d9c:	bne	11db4 <teste_v_antecessores@@Base+0x2b4>
   11da0:	ldr	r0, [pc, #88]	; 11e00 <teste_v_antecessores@@Base+0x300>
   11da4:	add	r0, pc, r0
   11da8:	bl	10bdc <printf@plt>
   11dac:	str	r0, [sp, #88]	; 0x58
   11db0:	b	11dc4 <teste_v_antecessores@@Base+0x2c4>
   11db4:	ldr	r0, [pc, #72]	; 11e04 <teste_v_antecessores@@Base+0x304>
   11db8:	add	r0, pc, r0
   11dbc:	bl	10bdc <printf@plt>
   11dc0:	str	r0, [sp, #84]	; 0x54
   11dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11dc8:	str	r0, [fp, #-20]	; 0xffffffec
   11dcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11dd0:	sub	sp, fp, #16
   11dd4:	pop	{r4, r5, r6, sl, fp, pc}
   11dd8:	andeq	r1, r0, r8, ror sl
   11ddc:	andeq	r1, r0, r3, asr sl
   11de0:	andeq	r1, r0, pc, lsr #11
   11de4:	andeq	r1, r0, pc, lsr #24
   11de8:	andeq	r1, r0, sl, lsl #20
   11dec:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11df0:	andeq	r1, r0, sp, asr #19
   11df4:	muleq	r0, pc, r4	; <UNPREDICTABLE>
   11df8:	andeq	r1, r0, pc, lsl fp
   11dfc:	muleq	r0, r5, r9
   11e00:	andeq	r1, r0, r7, lsr #8
   11e04:	andeq	r1, r0, r7, lsr #21

00011e08 <teste_v_grau@@Base>:
   11e08:	push	{r4, r5, r6, sl, fp, lr}
   11e0c:	add	fp, sp, #16
   11e10:	sub	sp, sp, #128	; 0x80
   11e14:	movw	r0, #0
   11e18:	str	r0, [fp, #-20]	; 0xffffffec
   11e1c:	movw	r1, #8
   11e20:	str	r0, [fp, #-28]	; 0xffffffe4
   11e24:	mov	r0, r1
   11e28:	movw	r1, #22
   11e2c:	movw	r2, #3
   11e30:	str	r2, [fp, #-32]	; 0xffffffe0
   11e34:	movw	r3, #2
   11e38:	str	r3, [fp, #-36]	; 0xffffffdc
   11e3c:	movw	ip, #7
   11e40:	str	ip, [sp]
   11e44:	ldr	lr, [fp, #-36]	; 0xffffffdc
   11e48:	str	lr, [sp, #4]
   11e4c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   11e50:	str	r4, [sp, #8]
   11e54:	str	lr, [sp, #12]
   11e58:	str	ip, [sp, #16]
   11e5c:	movw	r5, #5
   11e60:	str	r5, [sp, #20]
   11e64:	str	r5, [sp, #24]
   11e68:	movw	r5, #4
   11e6c:	str	r5, [sp, #28]
   11e70:	str	r5, [sp, #32]
   11e74:	str	r4, [sp, #36]	; 0x24
   11e78:	str	r5, [sp, #40]	; 0x28
   11e7c:	movw	r5, #6
   11e80:	str	r5, [sp, #44]	; 0x2c
   11e84:	movw	r6, #1
   11e88:	str	r6, [sp, #48]	; 0x30
   11e8c:	str	r6, [sp, #52]	; 0x34
   11e90:	str	ip, [sp, #56]	; 0x38
   11e94:	str	r5, [sp, #60]	; 0x3c
   11e98:	str	r5, [sp, #64]	; 0x40
   11e9c:	ldr	ip, [fp, #-32]	; 0xffffffe0
   11ea0:	str	ip, [sp, #68]	; 0x44
   11ea4:	str	r4, [sp, #72]	; 0x48
   11ea8:	str	r6, [sp, #76]	; 0x4c
   11eac:	bl	10d2c <_g@@Base>
   11eb0:	ldr	r1, [pc, #232]	; 11fa0 <teste_v_grau@@Base+0x198>
   11eb4:	add	r1, pc, r1
   11eb8:	str	r0, [fp, #-24]	; 0xffffffe8
   11ebc:	mov	r0, r1
   11ec0:	bl	10bdc <printf@plt>
   11ec4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11ec8:	str	r0, [fp, #-40]	; 0xffffffd8
   11ecc:	mov	r0, r1
   11ed0:	mvn	r1, #3
   11ed4:	bl	129dc <v_grau@@Base>
   11ed8:	cmn	r0, #1
   11edc:	beq	11efc <teste_v_grau@@Base+0xf4>
   11ee0:	ldr	r0, [pc, #188]	; 11fa4 <teste_v_grau@@Base+0x19c>
   11ee4:	add	r0, pc, r0
   11ee8:	bl	10bdc <printf@plt>
   11eec:	ldr	lr, [fp, #-20]	; 0xffffffec
   11ef0:	add	lr, lr, #1
   11ef4:	str	lr, [fp, #-20]	; 0xffffffec
   11ef8:	str	r0, [fp, #-44]	; 0xffffffd4
   11efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f00:	movw	r1, #7
   11f04:	bl	129dc <v_grau@@Base>
   11f08:	cmp	r0, #3
   11f0c:	beq	11f2c <teste_v_grau@@Base+0x124>
   11f10:	ldr	r0, [pc, #144]	; 11fa8 <teste_v_grau@@Base+0x1a0>
   11f14:	add	r0, pc, r0
   11f18:	bl	10bdc <printf@plt>
   11f1c:	ldr	lr, [fp, #-20]	; 0xffffffec
   11f20:	add	lr, lr, #1
   11f24:	str	lr, [fp, #-20]	; 0xffffffec
   11f28:	str	r0, [fp, #-48]	; 0xffffffd0
   11f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f30:	movw	r1, #5
   11f34:	bl	129dc <v_grau@@Base>
   11f38:	cmp	r0, #2
   11f3c:	beq	11f5c <teste_v_grau@@Base+0x154>
   11f40:	ldr	r0, [pc, #100]	; 11fac <teste_v_grau@@Base+0x1a4>
   11f44:	add	r0, pc, r0
   11f48:	bl	10bdc <printf@plt>
   11f4c:	ldr	lr, [fp, #-20]	; 0xffffffec
   11f50:	add	lr, lr, #1
   11f54:	str	lr, [fp, #-20]	; 0xffffffec
   11f58:	str	r0, [fp, #-52]	; 0xffffffcc
   11f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11f60:	bl	123a8 <grafo_apaga@@Base>
   11f64:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f68:	cmp	r0, #0
   11f6c:	bne	11f84 <teste_v_grau@@Base+0x17c>
   11f70:	ldr	r0, [pc, #56]	; 11fb0 <teste_v_grau@@Base+0x1a8>
   11f74:	add	r0, pc, r0
   11f78:	bl	10bdc <printf@plt>
   11f7c:	str	r0, [fp, #-56]	; 0xffffffc8
   11f80:	b	11f94 <teste_v_grau@@Base+0x18c>
   11f84:	ldr	r0, [pc, #40]	; 11fb4 <teste_v_grau@@Base+0x1ac>
   11f88:	add	r0, pc, r0
   11f8c:	bl	10bdc <printf@plt>
   11f90:	str	r0, [fp, #-60]	; 0xffffffc4
   11f94:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f98:	sub	sp, fp, #16
   11f9c:	pop	{r4, r5, r6, sl, fp, pc}
   11fa0:	andeq	r1, r0, sp, ror r8
   11fa4:	andeq	r1, r0, r8, asr r8
   11fa8:	andeq	r1, r0, r8, asr r8
   11fac:	andeq	r1, r0, r7, asr r8
   11fb0:	andeq	r1, r0, r7, asr r2
   11fb4:	ldrdeq	r1, [r0], -r7

00011fb8 <teste_v_celebridade@@Base>:
   11fb8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11fbc:	add	fp, sp, #24
   11fc0:	sub	sp, sp, #152	; 0x98
   11fc4:	movw	r0, #0
   11fc8:	str	r0, [fp, #-28]	; 0xffffffe4
   11fcc:	movw	r1, #8
   11fd0:	str	r0, [fp, #-36]	; 0xffffffdc
   11fd4:	mov	r0, r1
   11fd8:	movw	r1, #30
   11fdc:	movw	r2, #3
   11fe0:	str	r2, [fp, #-40]	; 0xffffffd8
   11fe4:	movw	r3, #2
   11fe8:	str	r3, [fp, #-44]	; 0xffffffd4
   11fec:	movw	ip, #7
   11ff0:	str	ip, [sp]
   11ff4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   11ff8:	str	lr, [sp, #4]
   11ffc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   12000:	str	r4, [sp, #8]
   12004:	str	lr, [sp, #12]
   12008:	str	ip, [sp, #16]
   1200c:	movw	r5, #5
   12010:	str	r5, [sp, #20]
   12014:	str	r5, [sp, #24]
   12018:	movw	r6, #4
   1201c:	str	r6, [sp, #28]
   12020:	str	r6, [sp, #32]
   12024:	str	r4, [sp, #36]	; 0x24
   12028:	str	r6, [sp, #40]	; 0x28
   1202c:	movw	r7, #6
   12030:	str	r7, [sp, #44]	; 0x2c
   12034:	movw	r8, #1
   12038:	str	r8, [sp, #48]	; 0x30
   1203c:	str	r8, [sp, #52]	; 0x34
   12040:	str	ip, [sp, #56]	; 0x38
   12044:	str	r7, [sp, #60]	; 0x3c
   12048:	str	r7, [sp, #64]	; 0x40
   1204c:	ldr	ip, [fp, #-40]	; 0xffffffd8
   12050:	str	ip, [sp, #68]	; 0x44
   12054:	str	r4, [sp, #72]	; 0x48
   12058:	str	r8, [sp, #76]	; 0x4c
   1205c:	str	r8, [sp, #80]	; 0x50
   12060:	str	lr, [sp, #84]	; 0x54
   12064:	str	r7, [sp, #88]	; 0x58
   12068:	str	lr, [sp, #92]	; 0x5c
   1206c:	str	r6, [sp, #96]	; 0x60
   12070:	str	lr, [sp, #100]	; 0x64
   12074:	str	r5, [sp, #104]	; 0x68
   12078:	str	lr, [sp, #108]	; 0x6c
   1207c:	bl	10d2c <_g@@Base>
   12080:	ldr	r1, [pc, #184]	; 12140 <teste_v_celebridade@@Base+0x188>
   12084:	add	r1, pc, r1
   12088:	str	r0, [fp, #-32]	; 0xffffffe0
   1208c:	mov	r0, r1
   12090:	bl	10bdc <printf@plt>
   12094:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12098:	str	r0, [fp, #-48]	; 0xffffffd0
   1209c:	mov	r0, r1
   120a0:	movw	r1, #7
   120a4:	bl	12a70 <v_celebridade@@Base>
   120a8:	cmp	r0, #0
   120ac:	beq	120cc <teste_v_celebridade@@Base+0x114>
   120b0:	ldr	r0, [pc, #140]	; 12144 <teste_v_celebridade@@Base+0x18c>
   120b4:	add	r0, pc, r0
   120b8:	bl	10bdc <printf@plt>
   120bc:	ldr	lr, [fp, #-28]	; 0xffffffe4
   120c0:	add	lr, lr, #1
   120c4:	str	lr, [fp, #-28]	; 0xffffffe4
   120c8:	str	r0, [fp, #-52]	; 0xffffffcc
   120cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   120d0:	movw	r1, #2
   120d4:	bl	12a70 <v_celebridade@@Base>
   120d8:	cmp	r0, #1
   120dc:	beq	120fc <teste_v_celebridade@@Base+0x144>
   120e0:	ldr	r0, [pc, #96]	; 12148 <teste_v_celebridade@@Base+0x190>
   120e4:	add	r0, pc, r0
   120e8:	bl	10bdc <printf@plt>
   120ec:	ldr	lr, [fp, #-28]	; 0xffffffe4
   120f0:	add	lr, lr, #1
   120f4:	str	lr, [fp, #-28]	; 0xffffffe4
   120f8:	str	r0, [fp, #-56]	; 0xffffffc8
   120fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12100:	bl	123a8 <grafo_apaga@@Base>
   12104:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12108:	cmp	r0, #0
   1210c:	bne	12124 <teste_v_celebridade@@Base+0x16c>
   12110:	ldr	r0, [pc, #52]	; 1214c <teste_v_celebridade@@Base+0x194>
   12114:	add	r0, pc, r0
   12118:	bl	10bdc <printf@plt>
   1211c:	str	r0, [fp, #-60]	; 0xffffffc4
   12120:	b	12134 <teste_v_celebridade@@Base+0x17c>
   12124:	ldr	r0, [pc, #36]	; 12150 <teste_v_celebridade@@Base+0x198>
   12128:	add	r0, pc, r0
   1212c:	bl	10bdc <printf@plt>
   12130:	str	r0, [fp, #-64]	; 0xffffffc0
   12134:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12138:	sub	sp, fp, #24
   1213c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12140:	andeq	r1, r0, r6, asr #14
   12144:	andeq	r1, r0, r8, lsr #14
   12148:	andeq	r1, r0, r0, lsr r7
   1214c:	strheq	r1, [r0], -r7
   12150:	andeq	r1, r0, r7, lsr r7

00012154 <main@@Base>:
   12154:	push	{fp, lr}
   12158:	mov	fp, sp
   1215c:	sub	sp, sp, #32
   12160:	ldr	r0, [pc, #276]	; 1227c <main@@Base+0x128>
   12164:	ldr	r0, [pc, r0]
   12168:	movw	r1, #0
   1216c:	str	r1, [fp, #-4]
   12170:	ldr	r0, [r0]
   12174:	str	r1, [fp, #-12]
   12178:	movw	r2, #2
   1217c:	ldr	r3, [fp, #-12]
   12180:	bl	10c24 <setvbuf@plt>
   12184:	ldr	r1, [pc, #236]	; 12278 <main@@Base+0x124>
   12188:	ldr	r1, [pc, r1]
   1218c:	ldr	r1, [r1]
   12190:	str	r0, [sp, #16]
   12194:	mov	r0, r1
   12198:	movw	r1, #0
   1219c:	str	r1, [sp, #12]
   121a0:	movw	r2, #2
   121a4:	ldr	r3, [sp, #12]
   121a8:	bl	10c24 <setvbuf@plt>
   121ac:	movw	r1, #0
   121b0:	str	r1, [fp, #-8]
   121b4:	str	r0, [sp, #8]
   121b8:	bl	10ef8 <teste_grafo_novo@@Base>
   121bc:	ldr	r1, [fp, #-8]
   121c0:	add	r0, r1, r0
   121c4:	str	r0, [fp, #-8]
   121c8:	bl	110e0 <teste_grafo_aresta@@Base>
   121cc:	ldr	r1, [fp, #-8]
   121d0:	add	r0, r1, r0
   121d4:	str	r0, [fp, #-8]
   121d8:	bl	112d4 <teste_grafo_adiciona@@Base>
   121dc:	ldr	r1, [fp, #-8]
   121e0:	add	r0, r1, r0
   121e4:	str	r0, [fp, #-8]
   121e8:	bl	115c0 <teste_grafo_remove@@Base>
   121ec:	ldr	r1, [fp, #-8]
   121f0:	add	r0, r1, r0
   121f4:	str	r0, [fp, #-8]
   121f8:	bl	117f8 <teste_v_sucessores@@Base>
   121fc:	ldr	r1, [fp, #-8]
   12200:	add	r0, r1, r0
   12204:	str	r0, [fp, #-8]
   12208:	bl	11b00 <teste_v_antecessores@@Base>
   1220c:	ldr	r1, [fp, #-8]
   12210:	add	r0, r1, r0
   12214:	str	r0, [fp, #-8]
   12218:	bl	11e08 <teste_v_grau@@Base>
   1221c:	ldr	r1, [fp, #-8]
   12220:	add	r0, r1, r0
   12224:	str	r0, [fp, #-8]
   12228:	bl	11fb8 <teste_v_celebridade@@Base>
   1222c:	ldr	r1, [fp, #-8]
   12230:	add	r0, r1, r0
   12234:	str	r0, [fp, #-8]
   12238:	ldr	r0, [fp, #-8]
   1223c:	cmp	r0, #0
   12240:	bne	12258 <main@@Base+0x104>
   12244:	ldr	r0, [pc, #52]	; 12280 <main@@Base+0x12c>
   12248:	add	r0, pc, r0
   1224c:	bl	10bdc <printf@plt>
   12250:	str	r0, [sp, #4]
   12254:	b	1226c <main@@Base+0x118>
   12258:	ldr	r0, [pc, #36]	; 12284 <main@@Base+0x130>
   1225c:	add	r0, pc, r0
   12260:	ldr	r1, [fp, #-8]
   12264:	bl	10bdc <printf@plt>
   12268:	str	r0, [sp]
   1226c:	movw	r0, #0
   12270:	mov	sp, fp
   12274:	pop	{fp, pc}
   12278:	andeq	r1, r1, r4, lsr #29
   1227c:	ldrdeq	r1, [r1], -r0
   12280:	andeq	r1, r0, r0, lsl #12
   12284:	andeq	r1, r0, r5, lsl #12

00012288 <cria_elem@@Base>:
   12288:	push	{fp, lr}
   1228c:	mov	fp, sp
   12290:	sub	sp, sp, #16
   12294:	str	r0, [sp, #8]
   12298:	movw	r0, #8
   1229c:	bl	10c00 <malloc@plt>
   122a0:	str	r0, [sp, #4]
   122a4:	ldr	r0, [sp, #4]
   122a8:	movw	lr, #0
   122ac:	cmp	r0, lr
   122b0:	bne	122c0 <cria_elem@@Base+0x38>
   122b4:	movw	r0, #0
   122b8:	str	r0, [fp, #-4]
   122bc:	b	122e0 <cria_elem@@Base+0x58>
   122c0:	ldr	r0, [sp, #8]
   122c4:	ldr	r1, [sp, #4]
   122c8:	str	r0, [r1]
   122cc:	ldr	r0, [sp, #4]
   122d0:	movw	r1, #0
   122d4:	str	r1, [r0, #4]
   122d8:	ldr	r0, [sp, #4]
   122dc:	str	r0, [fp, #-4]
   122e0:	ldr	r0, [fp, #-4]
   122e4:	mov	sp, fp
   122e8:	pop	{fp, pc}

000122ec <grafo_novo@@Base>:
   122ec:	push	{fp, lr}
   122f0:	mov	fp, sp
   122f4:	sub	sp, sp, #16
   122f8:	str	r0, [sp, #8]
   122fc:	ldr	r0, [sp, #8]
   12300:	cmp	r0, #1
   12304:	bge	12314 <grafo_novo@@Base+0x28>
   12308:	movw	r0, #0
   1230c:	str	r0, [fp, #-4]
   12310:	b	1239c <grafo_novo@@Base+0xb0>
   12314:	mov	r0, #8
   12318:	bl	10c00 <malloc@plt>
   1231c:	str	r0, [sp]
   12320:	ldr	r0, [sp, #8]
   12324:	ldr	lr, [sp]
   12328:	str	r0, [lr]
   1232c:	ldr	r0, [sp, #8]
   12330:	lsl	r0, r0, #3
   12334:	bl	10c00 <malloc@plt>
   12338:	ldr	lr, [sp]
   1233c:	str	r0, [lr, #4]
   12340:	movw	r0, #0
   12344:	str	r0, [sp, #4]
   12348:	ldr	r0, [sp, #4]
   1234c:	ldr	r1, [sp, #8]
   12350:	cmp	r0, r1
   12354:	bge	12394 <grafo_novo@@Base+0xa8>
   12358:	ldr	r0, [sp]
   1235c:	ldr	r0, [r0, #4]
   12360:	ldr	r1, [sp, #4]
   12364:	mov	r2, #0
   12368:	str	r2, [r0, r1, lsl #3]
   1236c:	ldr	r0, [sp]
   12370:	ldr	r0, [r0, #4]
   12374:	ldr	r1, [sp, #4]
   12378:	add	r0, r0, r1, lsl #3
   1237c:	movw	r1, #0
   12380:	str	r1, [r0, #4]
   12384:	ldr	r0, [sp, #4]
   12388:	add	r0, r0, #1
   1238c:	str	r0, [sp, #4]
   12390:	b	12348 <grafo_novo@@Base+0x5c>
   12394:	ldr	r0, [sp]
   12398:	str	r0, [fp, #-4]
   1239c:	ldr	r0, [fp, #-4]
   123a0:	mov	sp, fp
   123a4:	pop	{fp, pc}

000123a8 <grafo_apaga@@Base>:
   123a8:	push	{fp, lr}
   123ac:	mov	fp, sp
   123b0:	sub	sp, sp, #16
   123b4:	str	r0, [fp, #-4]
   123b8:	ldr	r0, [fp, #-4]
   123bc:	movw	r1, #0
   123c0:	cmp	r0, r1
   123c4:	bne	123cc <grafo_apaga@@Base+0x24>
   123c8:	b	12458 <grafo_apaga@@Base+0xb0>
   123cc:	movw	r0, #0
   123d0:	str	r0, [sp, #8]
   123d4:	ldr	r0, [sp, #8]
   123d8:	ldr	r1, [fp, #-4]
   123dc:	ldr	r1, [r1]
   123e0:	cmp	r0, r1
   123e4:	bge	12444 <grafo_apaga@@Base+0x9c>
   123e8:	ldr	r0, [fp, #-4]
   123ec:	ldr	r0, [r0, #4]
   123f0:	ldr	r1, [sp, #8]
   123f4:	add	r0, r0, r1, lsl #3
   123f8:	ldr	r0, [r0, #4]
   123fc:	str	r0, [sp, #4]
   12400:	ldr	r0, [sp, #4]
   12404:	movw	r1, #0
   12408:	cmp	r0, r1
   1240c:	beq	12430 <grafo_apaga@@Base+0x88>
   12410:	ldr	r0, [sp, #4]
   12414:	str	r0, [sp]
   12418:	ldr	r0, [sp, #4]
   1241c:	ldr	r0, [r0, #4]
   12420:	str	r0, [sp, #4]
   12424:	ldr	r0, [sp]
   12428:	bl	10be8 <free@plt>
   1242c:	b	12400 <grafo_apaga@@Base+0x58>
   12430:	b	12434 <grafo_apaga@@Base+0x8c>
   12434:	ldr	r0, [sp, #8]
   12438:	add	r0, r0, #1
   1243c:	str	r0, [sp, #8]
   12440:	b	123d4 <grafo_apaga@@Base+0x2c>
   12444:	ldr	r0, [fp, #-4]
   12448:	ldr	r0, [r0, #4]
   1244c:	bl	10be8 <free@plt>
   12450:	ldr	r0, [fp, #-4]
   12454:	bl	10be8 <free@plt>
   12458:	mov	sp, fp
   1245c:	pop	{fp, pc}

00012460 <grafo_aresta@@Base>:
   12460:	sub	sp, sp, #20
   12464:	str	r0, [sp, #12]
   12468:	str	r1, [sp, #8]
   1246c:	str	r2, [sp, #4]
   12470:	ldr	r0, [sp, #12]
   12474:	movw	r1, #0
   12478:	cmp	r0, r1
   1247c:	beq	12494 <grafo_aresta@@Base+0x34>
   12480:	ldr	r0, [sp, #8]
   12484:	ldr	r1, [sp, #12]
   12488:	ldr	r1, [r1]
   1248c:	cmp	r0, r1
   12490:	ble	124a0 <grafo_aresta@@Base+0x40>
   12494:	mvn	r0, #0
   12498:	str	r0, [sp, #16]
   1249c:	b	12520 <grafo_aresta@@Base+0xc0>
   124a0:	ldr	r0, [sp, #4]
   124a4:	ldr	r1, [sp, #12]
   124a8:	ldr	r1, [r1]
   124ac:	cmp	r0, r1
   124b0:	ble	124c0 <grafo_aresta@@Base+0x60>
   124b4:	movw	r0, #0
   124b8:	str	r0, [sp, #16]
   124bc:	b	12520 <grafo_aresta@@Base+0xc0>
   124c0:	ldr	r0, [sp, #12]
   124c4:	ldr	r0, [r0, #4]
   124c8:	ldr	r1, [sp, #8]
   124cc:	add	r0, r0, r1, lsl #3
   124d0:	ldr	r0, [r0, #4]
   124d4:	str	r0, [sp]
   124d8:	ldr	r0, [sp]
   124dc:	movw	r1, #0
   124e0:	cmp	r0, r1
   124e4:	beq	12518 <grafo_aresta@@Base+0xb8>
   124e8:	ldr	r0, [sp]
   124ec:	ldr	r0, [r0]
   124f0:	ldr	r1, [sp, #4]
   124f4:	cmp	r0, r1
   124f8:	bne	12508 <grafo_aresta@@Base+0xa8>
   124fc:	movw	r0, #1
   12500:	str	r0, [sp, #16]
   12504:	b	12520 <grafo_aresta@@Base+0xc0>
   12508:	ldr	r0, [sp]
   1250c:	ldr	r0, [r0, #4]
   12510:	str	r0, [sp]
   12514:	b	124d8 <grafo_aresta@@Base+0x78>
   12518:	movw	r0, #0
   1251c:	str	r0, [sp, #16]
   12520:	ldr	r0, [sp, #16]
   12524:	add	sp, sp, #20
   12528:	bx	lr

0001252c <grafo_adiciona@@Base>:
   1252c:	push	{fp, lr}
   12530:	mov	fp, sp
   12534:	sub	sp, sp, #24
   12538:	str	r0, [fp, #-8]
   1253c:	str	r1, [sp, #12]
   12540:	str	r2, [sp, #8]
   12544:	ldr	r0, [fp, #-8]
   12548:	movw	r1, #0
   1254c:	cmp	r0, r1
   12550:	beq	1257c <grafo_adiciona@@Base+0x50>
   12554:	ldr	r0, [sp, #12]
   12558:	ldr	r1, [fp, #-8]
   1255c:	ldr	r1, [r1]
   12560:	cmp	r0, r1
   12564:	bgt	1257c <grafo_adiciona@@Base+0x50>
   12568:	ldr	r0, [sp, #8]
   1256c:	ldr	r1, [fp, #-8]
   12570:	ldr	r1, [r1]
   12574:	cmp	r0, r1
   12578:	ble	12588 <grafo_adiciona@@Base+0x5c>
   1257c:	mvn	r0, #0
   12580:	str	r0, [fp, #-4]
   12584:	b	12618 <grafo_adiciona@@Base+0xec>
   12588:	ldr	r0, [fp, #-8]
   1258c:	ldr	r1, [sp, #12]
   12590:	ldr	r2, [sp, #8]
   12594:	bl	12460 <grafo_aresta@@Base>
   12598:	cmp	r0, #1
   1259c:	bne	125ac <grafo_adiciona@@Base+0x80>
   125a0:	movw	r0, #0
   125a4:	str	r0, [fp, #-4]
   125a8:	b	12618 <grafo_adiciona@@Base+0xec>
   125ac:	ldr	r0, [fp, #-8]
   125b0:	ldr	r0, [r0, #4]
   125b4:	ldr	r1, [sp, #12]
   125b8:	add	r0, r0, r1, lsl #3
   125bc:	ldr	r0, [r0, #4]
   125c0:	str	r0, [sp, #4]
   125c4:	ldr	r0, [sp, #8]
   125c8:	bl	12288 <cria_elem@@Base>
   125cc:	ldr	r1, [fp, #-8]
   125d0:	ldr	r1, [r1, #4]
   125d4:	ldr	lr, [sp, #12]
   125d8:	add	r1, r1, lr, lsl #3
   125dc:	str	r0, [r1, #4]
   125e0:	ldr	r0, [sp, #4]
   125e4:	ldr	r1, [fp, #-8]
   125e8:	ldr	r1, [r1, #4]
   125ec:	ldr	lr, [sp, #12]
   125f0:	add	r1, r1, lr, lsl #3
   125f4:	ldr	r1, [r1, #4]
   125f8:	str	r0, [r1, #4]
   125fc:	ldr	r0, [fp, #-8]
   12600:	ldr	r0, [r0, #4]
   12604:	ldr	r1, [r0]
   12608:	add	r1, r1, #1
   1260c:	str	r1, [r0]
   12610:	movw	r0, #1
   12614:	str	r0, [fp, #-4]
   12618:	ldr	r0, [fp, #-4]
   1261c:	mov	sp, fp
   12620:	pop	{fp, pc}

00012624 <grafo_remove@@Base>:
   12624:	push	{fp, lr}
   12628:	mov	fp, sp
   1262c:	sub	sp, sp, #32
   12630:	str	r0, [fp, #-8]
   12634:	str	r1, [fp, #-12]
   12638:	str	r2, [sp, #16]
   1263c:	ldr	r0, [fp, #-8]
   12640:	movw	r1, #0
   12644:	cmp	r0, r1
   12648:	beq	127d8 <grafo_remove@@Base+0x1b4>
   1264c:	ldr	r0, [fp, #-12]
   12650:	ldr	r1, [fp, #-8]
   12654:	ldr	r1, [r1]
   12658:	cmp	r0, r1
   1265c:	bgt	127d8 <grafo_remove@@Base+0x1b4>
   12660:	ldr	r0, [sp, #16]
   12664:	ldr	r1, [fp, #-8]
   12668:	ldr	r1, [r1]
   1266c:	cmp	r0, r1
   12670:	bgt	127d8 <grafo_remove@@Base+0x1b4>
   12674:	ldr	r0, [fp, #-8]
   12678:	ldr	r0, [r0, #4]
   1267c:	ldr	r1, [fp, #-12]
   12680:	add	r0, r0, r1, lsl #3
   12684:	ldr	r0, [r0, #4]
   12688:	movw	r1, #0
   1268c:	cmp	r0, r1
   12690:	bne	126a0 <grafo_remove@@Base+0x7c>
   12694:	movw	r0, #0
   12698:	str	r0, [fp, #-4]
   1269c:	b	127e0 <grafo_remove@@Base+0x1bc>
   126a0:	ldr	r0, [fp, #-8]
   126a4:	ldr	r0, [r0, #4]
   126a8:	ldr	r1, [fp, #-12]
   126ac:	add	r0, r0, r1, lsl #3
   126b0:	ldr	r0, [r0, #4]
   126b4:	ldr	r0, [r0]
   126b8:	ldr	r1, [sp, #16]
   126bc:	cmp	r0, r1
   126c0:	bne	12724 <grafo_remove@@Base+0x100>
   126c4:	ldr	r0, [fp, #-8]
   126c8:	ldr	r0, [r0, #4]
   126cc:	ldr	r1, [fp, #-12]
   126d0:	add	r0, r0, r1, lsl #3
   126d4:	ldr	r0, [r0, #4]
   126d8:	str	r0, [sp, #12]
   126dc:	ldr	r0, [fp, #-8]
   126e0:	ldr	r0, [r0, #4]
   126e4:	ldr	r1, [fp, #-12]
   126e8:	add	r0, r0, r1, lsl #3
   126ec:	ldr	r1, [r0, #4]
   126f0:	ldr	r1, [r1, #4]
   126f4:	str	r1, [r0, #4]
   126f8:	ldr	r0, [fp, #-8]
   126fc:	ldr	r0, [r0, #4]
   12700:	ldr	r1, [r0]
   12704:	mvn	r2, #0
   12708:	add	r1, r1, r2
   1270c:	str	r1, [r0]
   12710:	ldr	r0, [sp, #12]
   12714:	bl	10be8 <free@plt>
   12718:	movw	r0, #1
   1271c:	str	r0, [fp, #-4]
   12720:	b	127e0 <grafo_remove@@Base+0x1bc>
   12724:	mov	r0, #0
   12728:	str	r0, [sp, #4]
   1272c:	ldr	r0, [fp, #-8]
   12730:	ldr	r0, [r0, #4]
   12734:	ldr	r1, [fp, #-12]
   12738:	add	r0, r0, r1, lsl #3
   1273c:	ldr	r0, [r0, #4]
   12740:	str	r0, [sp, #8]
   12744:	ldr	r0, [sp, #8]
   12748:	movw	r1, #0
   1274c:	cmp	r0, r1
   12750:	beq	127cc <grafo_remove@@Base+0x1a8>
   12754:	ldr	r0, [sp, #8]
   12758:	ldr	r0, [r0]
   1275c:	ldr	r1, [sp, #16]
   12760:	cmp	r0, r1
   12764:	bne	127b4 <grafo_remove@@Base+0x190>
   12768:	ldr	r0, [sp, #4]
   1276c:	movw	r1, #0
   12770:	cmp	r0, r1
   12774:	beq	127b4 <grafo_remove@@Base+0x190>
   12778:	ldr	r0, [sp, #8]
   1277c:	ldr	r0, [r0, #4]
   12780:	ldr	r1, [sp, #4]
   12784:	str	r0, [r1, #4]
   12788:	ldr	r0, [fp, #-8]
   1278c:	ldr	r0, [r0, #4]
   12790:	ldr	r1, [r0]
   12794:	mvn	r2, #0
   12798:	add	r1, r1, r2
   1279c:	str	r1, [r0]
   127a0:	ldr	r0, [sp, #8]
   127a4:	bl	10be8 <free@plt>
   127a8:	movw	r0, #1
   127ac:	str	r0, [fp, #-4]
   127b0:	b	127e0 <grafo_remove@@Base+0x1bc>
   127b4:	ldr	r0, [sp, #8]
   127b8:	str	r0, [sp, #4]
   127bc:	ldr	r0, [sp, #8]
   127c0:	ldr	r0, [r0, #4]
   127c4:	str	r0, [sp, #8]
   127c8:	b	12744 <grafo_remove@@Base+0x120>
   127cc:	movw	r0, #0
   127d0:	str	r0, [fp, #-4]
   127d4:	b	127e0 <grafo_remove@@Base+0x1bc>
   127d8:	mvn	r0, #0
   127dc:	str	r0, [fp, #-4]
   127e0:	ldr	r0, [fp, #-4]
   127e4:	mov	sp, fp
   127e8:	pop	{fp, pc}

000127ec <v_sucessores@@Base>:
   127ec:	push	{fp, lr}
   127f0:	mov	fp, sp
   127f4:	sub	sp, sp, #32
   127f8:	str	r0, [fp, #-8]
   127fc:	str	r1, [fp, #-12]
   12800:	ldr	r0, [fp, #-8]
   12804:	movw	r1, #0
   12808:	cmp	r0, r1
   1280c:	beq	128a8 <v_sucessores@@Base+0xbc>
   12810:	ldr	r0, [fp, #-12]
   12814:	ldr	r1, [fp, #-8]
   12818:	ldr	r1, [r1]
   1281c:	cmp	r0, r1
   12820:	bge	128a8 <v_sucessores@@Base+0xbc>
   12824:	ldr	r0, [fp, #-12]
   12828:	cmp	r0, #0
   1282c:	blt	128a8 <v_sucessores@@Base+0xbc>
   12830:	mov	r0, #0
   12834:	str	r0, [sp, #16]
   12838:	bl	12b8c <vetor_novo@@Base>
   1283c:	str	r0, [sp, #12]
   12840:	ldr	r0, [fp, #-8]
   12844:	ldr	r0, [r0, #4]
   12848:	ldr	lr, [fp, #-12]
   1284c:	add	r0, r0, lr, lsl #3
   12850:	ldr	r0, [r0, #4]
   12854:	str	r0, [sp, #8]
   12858:	ldr	r0, [sp, #8]
   1285c:	movw	r1, #0
   12860:	cmp	r0, r1
   12864:	beq	1289c <v_sucessores@@Base+0xb0>
   12868:	ldr	r0, [sp, #12]
   1286c:	ldr	r1, [sp, #8]
   12870:	ldr	r1, [r1]
   12874:	ldr	r2, [sp, #16]
   12878:	bl	12d54 <vetor_insere@@Base>
   1287c:	ldr	r1, [sp, #16]
   12880:	add	r1, r1, #1
   12884:	str	r1, [sp, #16]
   12888:	str	r0, [sp, #4]
   1288c:	ldr	r0, [sp, #8]
   12890:	ldr	r0, [r0, #4]
   12894:	str	r0, [sp, #8]
   12898:	b	12858 <v_sucessores@@Base+0x6c>
   1289c:	ldr	r0, [sp, #12]
   128a0:	str	r0, [fp, #-4]
   128a4:	b	128b0 <v_sucessores@@Base+0xc4>
   128a8:	movw	r0, #0
   128ac:	str	r0, [fp, #-4]
   128b0:	ldr	r0, [fp, #-4]
   128b4:	mov	sp, fp
   128b8:	pop	{fp, pc}

000128bc <v_antecessores@@Base>:
   128bc:	push	{fp, lr}
   128c0:	mov	fp, sp
   128c4:	sub	sp, sp, #32
   128c8:	str	r0, [fp, #-8]
   128cc:	str	r1, [fp, #-12]
   128d0:	ldr	r0, [fp, #-8]
   128d4:	movw	r1, #0
   128d8:	cmp	r0, r1
   128dc:	beq	129c4 <v_antecessores@@Base+0x108>
   128e0:	ldr	r0, [fp, #-12]
   128e4:	ldr	r1, [fp, #-8]
   128e8:	ldr	r1, [r1]
   128ec:	cmp	r0, r1
   128f0:	bge	129c4 <v_antecessores@@Base+0x108>
   128f4:	ldr	r0, [fp, #-12]
   128f8:	cmp	r0, #0
   128fc:	blt	129c4 <v_antecessores@@Base+0x108>
   12900:	ldr	r0, [pc, #208]	; 129d8 <v_antecessores@@Base+0x11c>
   12904:	ldr	r0, [pc, r0]
   12908:	blx	r0
   1290c:	str	r0, [sp, #16]
   12910:	movw	r0, #0
   12914:	str	r0, [sp, #8]
   12918:	str	r0, [sp, #12]
   1291c:	ldr	r0, [sp, #12]
   12920:	ldr	r1, [fp, #-8]
   12924:	ldr	r1, [r1]
   12928:	cmp	r0, r1
   1292c:	bge	129b8 <v_antecessores@@Base+0xfc>
   12930:	ldr	r0, [fp, #-8]
   12934:	ldr	r0, [r0, #4]
   12938:	ldr	r1, [sp, #12]
   1293c:	add	r0, r0, r1, lsl #3
   12940:	ldr	r0, [r0, #4]
   12944:	str	r0, [sp, #4]
   12948:	ldr	r0, [sp, #4]
   1294c:	movw	r1, #0
   12950:	cmp	r0, r1
   12954:	beq	129a4 <v_antecessores@@Base+0xe8>
   12958:	ldr	r0, [sp, #4]
   1295c:	ldr	r0, [r0]
   12960:	ldr	r1, [fp, #-12]
   12964:	cmp	r0, r1
   12968:	bne	12990 <v_antecessores@@Base+0xd4>
   1296c:	ldr	r0, [sp, #16]
   12970:	ldr	r1, [sp, #12]
   12974:	ldr	r2, [sp, #8]
   12978:	bl	12d54 <vetor_insere@@Base>
   1297c:	ldr	r1, [sp, #8]
   12980:	add	r1, r1, #1
   12984:	str	r1, [sp, #8]
   12988:	str	r0, [sp]
   1298c:	b	129a4 <v_antecessores@@Base+0xe8>
   12990:	b	12994 <v_antecessores@@Base+0xd8>
   12994:	ldr	r0, [sp, #4]
   12998:	ldr	r0, [r0, #4]
   1299c:	str	r0, [sp, #4]
   129a0:	b	12948 <v_antecessores@@Base+0x8c>
   129a4:	b	129a8 <v_antecessores@@Base+0xec>
   129a8:	ldr	r0, [sp, #12]
   129ac:	add	r0, r0, #1
   129b0:	str	r0, [sp, #12]
   129b4:	b	1291c <v_antecessores@@Base+0x60>
   129b8:	ldr	r0, [sp, #16]
   129bc:	str	r0, [fp, #-4]
   129c0:	b	129cc <v_antecessores@@Base+0x110>
   129c4:	movw	r0, #0
   129c8:	str	r0, [fp, #-4]
   129cc:	ldr	r0, [fp, #-4]
   129d0:	mov	sp, fp
   129d4:	pop	{fp, pc}
   129d8:	andeq	r1, r1, r4, lsr #14

000129dc <v_grau@@Base>:
   129dc:	push	{fp, lr}
   129e0:	mov	fp, sp
   129e4:	sub	sp, sp, #32
   129e8:	str	r0, [fp, #-8]
   129ec:	str	r1, [fp, #-12]
   129f0:	ldr	r0, [fp, #-12]
   129f4:	cmp	r0, #0
   129f8:	bge	12a08 <v_grau@@Base+0x2c>
   129fc:	mvn	r0, #0
   12a00:	str	r0, [fp, #-4]
   12a04:	b	12a64 <v_grau@@Base+0x88>
   12a08:	ldr	r0, [fp, #-8]
   12a0c:	ldr	r1, [fp, #-12]
   12a10:	bl	128bc <v_antecessores@@Base>
   12a14:	str	r0, [sp, #16]
   12a18:	ldr	r0, [fp, #-8]
   12a1c:	ldr	r1, [fp, #-12]
   12a20:	bl	127ec <v_sucessores@@Base>
   12a24:	str	r0, [sp, #12]
   12a28:	ldr	r0, [sp, #16]
   12a2c:	bl	12ca8 <vetor_tamanho@@Base>
   12a30:	ldr	r1, [sp, #12]
   12a34:	str	r0, [sp, #4]
   12a38:	mov	r0, r1
   12a3c:	bl	12ca8 <vetor_tamanho@@Base>
   12a40:	ldr	r1, [sp, #4]
   12a44:	add	r0, r1, r0
   12a48:	str	r0, [sp, #8]
   12a4c:	ldr	r0, [sp, #16]
   12a50:	bl	12bf0 <vetor_apaga@@Base>
   12a54:	ldr	r0, [sp, #12]
   12a58:	bl	12bf0 <vetor_apaga@@Base>
   12a5c:	ldr	r0, [sp, #8]
   12a60:	str	r0, [fp, #-4]
   12a64:	ldr	r0, [fp, #-4]
   12a68:	mov	sp, fp
   12a6c:	pop	{fp, pc}

00012a70 <v_celebridade@@Base>:
   12a70:	sub	sp, sp, #24
   12a74:	str	r0, [sp, #16]
   12a78:	str	r1, [sp, #12]
   12a7c:	ldr	r0, [sp, #16]
   12a80:	movw	r1, #0
   12a84:	cmp	r0, r1
   12a88:	bne	12a98 <v_celebridade@@Base+0x28>
   12a8c:	mvn	r0, #0
   12a90:	str	r0, [sp, #20]
   12a94:	b	12b80 <v_celebridade@@Base+0x110>
   12a98:	ldr	r0, [sp, #16]
   12a9c:	ldr	r0, [r0, #4]
   12aa0:	ldr	r1, [sp, #12]
   12aa4:	add	r0, r0, r1, lsl #3
   12aa8:	ldr	r0, [r0]
   12aac:	cmp	r0, #0
   12ab0:	beq	12ac0 <v_celebridade@@Base+0x50>
   12ab4:	movw	r0, #0
   12ab8:	str	r0, [sp, #20]
   12abc:	b	12b80 <v_celebridade@@Base+0x110>
   12ac0:	movw	r0, #0
   12ac4:	str	r0, [sp, #4]
   12ac8:	str	r0, [sp, #8]
   12acc:	ldr	r0, [sp, #8]
   12ad0:	ldr	r1, [sp, #16]
   12ad4:	ldr	r1, [r1]
   12ad8:	cmp	r0, r1
   12adc:	bge	12b54 <v_celebridade@@Base+0xe4>
   12ae0:	ldr	r0, [sp, #16]
   12ae4:	ldr	r0, [r0, #4]
   12ae8:	ldr	r1, [sp, #8]
   12aec:	add	r0, r0, r1, lsl #3
   12af0:	ldr	r0, [r0, #4]
   12af4:	str	r0, [sp]
   12af8:	ldr	r0, [sp]
   12afc:	movw	r1, #0
   12b00:	cmp	r0, r1
   12b04:	beq	12b40 <v_celebridade@@Base+0xd0>
   12b08:	ldr	r0, [sp]
   12b0c:	ldr	r0, [r0]
   12b10:	ldr	r1, [sp, #12]
   12b14:	cmp	r0, r1
   12b18:	bne	12b2c <v_celebridade@@Base+0xbc>
   12b1c:	ldr	r0, [sp, #4]
   12b20:	add	r0, r0, #1
   12b24:	str	r0, [sp, #4]
   12b28:	b	12b40 <v_celebridade@@Base+0xd0>
   12b2c:	b	12b30 <v_celebridade@@Base+0xc0>
   12b30:	ldr	r0, [sp]
   12b34:	ldr	r0, [r0, #4]
   12b38:	str	r0, [sp]
   12b3c:	b	12af8 <v_celebridade@@Base+0x88>
   12b40:	b	12b44 <v_celebridade@@Base+0xd4>
   12b44:	ldr	r0, [sp, #8]
   12b48:	add	r0, r0, #1
   12b4c:	str	r0, [sp, #8]
   12b50:	b	12acc <v_celebridade@@Base+0x5c>
   12b54:	ldr	r0, [sp, #4]
   12b58:	add	r0, r0, #1
   12b5c:	ldr	r1, [sp, #16]
   12b60:	ldr	r1, [r1]
   12b64:	cmp	r0, r1
   12b68:	bne	12b78 <v_celebridade@@Base+0x108>
   12b6c:	movw	r0, #1
   12b70:	str	r0, [sp, #20]
   12b74:	b	12b80 <v_celebridade@@Base+0x110>
   12b78:	movw	r0, #0
   12b7c:	str	r0, [sp, #20]
   12b80:	ldr	r0, [sp, #20]
   12b84:	add	sp, sp, #24
   12b88:	bx	lr

00012b8c <vetor_novo@@Base>:
   12b8c:	push	{fp, lr}
   12b90:	mov	fp, sp
   12b94:	sub	sp, sp, #8
   12b98:	movw	r0, #12
   12b9c:	bl	10c00 <malloc@plt>
   12ba0:	str	r0, [sp]
   12ba4:	ldr	r0, [sp]
   12ba8:	movw	lr, #0
   12bac:	cmp	r0, lr
   12bb0:	bne	12bc0 <vetor_novo@@Base+0x34>
   12bb4:	movw	r0, #0
   12bb8:	str	r0, [sp, #4]
   12bbc:	b	12be4 <vetor_novo@@Base+0x58>
   12bc0:	ldr	r0, [sp]
   12bc4:	movw	r1, #0
   12bc8:	str	r1, [r0]
   12bcc:	ldr	r0, [sp]
   12bd0:	str	r1, [r0, #4]
   12bd4:	ldr	r0, [sp]
   12bd8:	str	r1, [r0, #8]
   12bdc:	ldr	r0, [sp]
   12be0:	str	r0, [sp, #4]
   12be4:	ldr	r0, [sp, #4]
   12be8:	mov	sp, fp
   12bec:	pop	{fp, pc}

00012bf0 <vetor_apaga@@Base>:
   12bf0:	push	{fp, lr}
   12bf4:	mov	fp, sp
   12bf8:	sub	sp, sp, #8
   12bfc:	str	r0, [sp, #4]
   12c00:	ldr	r0, [sp, #4]
   12c04:	movw	r1, #0
   12c08:	cmp	r0, r1
   12c0c:	bne	12c14 <vetor_apaga@@Base+0x24>
   12c10:	b	12c28 <vetor_apaga@@Base+0x38>
   12c14:	ldr	r0, [sp, #4]
   12c18:	ldr	r0, [r0, #8]
   12c1c:	bl	10be8 <free@plt>
   12c20:	ldr	r0, [sp, #4]
   12c24:	bl	10be8 <free@plt>
   12c28:	mov	sp, fp
   12c2c:	pop	{fp, pc}

00012c30 <vetor_atribui@@Base>:
   12c30:	sub	sp, sp, #16
   12c34:	str	r0, [sp, #8]
   12c38:	str	r1, [sp, #4]
   12c3c:	str	r2, [sp]
   12c40:	ldr	r0, [sp, #8]
   12c44:	movw	r1, #0
   12c48:	cmp	r0, r1
   12c4c:	beq	12c70 <vetor_atribui@@Base+0x40>
   12c50:	ldr	r0, [sp, #4]
   12c54:	cmp	r0, #0
   12c58:	blt	12c70 <vetor_atribui@@Base+0x40>
   12c5c:	ldr	r0, [sp, #4]
   12c60:	ldr	r1, [sp, #8]
   12c64:	ldr	r1, [r1]
   12c68:	cmp	r0, r1
   12c6c:	blt	12c7c <vetor_atribui@@Base+0x4c>
   12c70:	mvn	r0, #0
   12c74:	str	r0, [sp, #12]
   12c78:	b	12c9c <vetor_atribui@@Base+0x6c>
   12c7c:	ldr	r0, [sp]
   12c80:	ldr	r1, [sp, #8]
   12c84:	ldr	r1, [r1, #8]
   12c88:	ldr	r2, [sp, #4]
   12c8c:	add	r1, r1, r2, lsl #2
   12c90:	str	r0, [r1]
   12c94:	ldr	r0, [sp, #4]
   12c98:	str	r0, [sp, #12]
   12c9c:	ldr	r0, [sp, #12]
   12ca0:	add	sp, sp, #16
   12ca4:	bx	lr

00012ca8 <vetor_tamanho@@Base>:
   12ca8:	sub	sp, sp, #8
   12cac:	str	r0, [sp]
   12cb0:	ldr	r0, [sp]
   12cb4:	movw	r1, #0
   12cb8:	cmp	r0, r1
   12cbc:	bne	12ccc <vetor_tamanho@@Base+0x24>
   12cc0:	mvn	r0, #0
   12cc4:	str	r0, [sp, #4]
   12cc8:	b	12cd8 <vetor_tamanho@@Base+0x30>
   12ccc:	ldr	r0, [sp]
   12cd0:	ldr	r0, [r0]
   12cd4:	str	r0, [sp, #4]
   12cd8:	ldr	r0, [sp, #4]
   12cdc:	add	sp, sp, #8
   12ce0:	bx	lr

00012ce4 <vetor_elemento@@Base>:
   12ce4:	sub	sp, sp, #12
   12ce8:	str	r0, [sp, #4]
   12cec:	str	r1, [sp]
   12cf0:	ldr	r0, [sp, #4]
   12cf4:	movw	r1, #0
   12cf8:	cmp	r0, r1
   12cfc:	beq	12d20 <vetor_elemento@@Base+0x3c>
   12d00:	ldr	r0, [sp]
   12d04:	cmp	r0, #0
   12d08:	blt	12d20 <vetor_elemento@@Base+0x3c>
   12d0c:	ldr	r0, [sp]
   12d10:	ldr	r1, [sp, #4]
   12d14:	ldr	r1, [r1]
   12d18:	cmp	r0, r1
   12d1c:	blt	12d2c <vetor_elemento@@Base+0x48>
   12d20:	ldr	r0, [pc, #40]	; 12d50 <vetor_elemento@@Base+0x6c>
   12d24:	str	r0, [sp, #8]
   12d28:	b	12d44 <vetor_elemento@@Base+0x60>
   12d2c:	ldr	r0, [sp, #4]
   12d30:	ldr	r0, [r0, #8]
   12d34:	ldr	r1, [sp]
   12d38:	add	r0, r0, r1, lsl #2
   12d3c:	ldr	r0, [r0]
   12d40:	str	r0, [sp, #8]
   12d44:	ldr	r0, [sp, #8]
   12d48:	add	sp, sp, #12
   12d4c:	bx	lr
   12d50:	andhi	r0, r0, r0

00012d54 <vetor_insere@@Base>:
   12d54:	push	{fp, lr}
   12d58:	mov	fp, sp
   12d5c:	sub	sp, sp, #24
   12d60:	str	r0, [fp, #-8]
   12d64:	str	r1, [sp, #12]
   12d68:	str	r2, [sp, #8]
   12d6c:	ldr	r0, [fp, #-8]
   12d70:	movw	r1, #0
   12d74:	cmp	r0, r1
   12d78:	beq	12d9c <vetor_insere@@Base+0x48>
   12d7c:	ldr	r0, [sp, #8]
   12d80:	cmn	r0, #1
   12d84:	blt	12d9c <vetor_insere@@Base+0x48>
   12d88:	ldr	r0, [sp, #8]
   12d8c:	ldr	r1, [fp, #-8]
   12d90:	ldr	r1, [r1]
   12d94:	cmp	r0, r1
   12d98:	ble	12da8 <vetor_insere@@Base+0x54>
   12d9c:	mvn	r0, #0
   12da0:	str	r0, [fp, #-4]
   12da4:	b	12ec8 <vetor_insere@@Base+0x174>
   12da8:	ldr	r0, [sp, #8]
   12dac:	cmn	r0, #1
   12db0:	bne	12dc0 <vetor_insere@@Base+0x6c>
   12db4:	ldr	r0, [fp, #-8]
   12db8:	ldr	r0, [r0]
   12dbc:	str	r0, [sp, #8]
   12dc0:	ldr	r0, [fp, #-8]
   12dc4:	ldr	r0, [r0]
   12dc8:	ldr	r1, [fp, #-8]
   12dcc:	ldr	r1, [r1, #4]
   12dd0:	cmp	r0, r1
   12dd4:	bne	12e48 <vetor_insere@@Base+0xf4>
   12dd8:	ldr	r0, [fp, #-8]
   12ddc:	ldr	r0, [r0, #4]
   12de0:	cmp	r0, #0
   12de4:	bne	12df8 <vetor_insere@@Base+0xa4>
   12de8:	ldr	r0, [fp, #-8]
   12dec:	movw	r1, #1
   12df0:	str	r1, [r0, #4]
   12df4:	b	12e08 <vetor_insere@@Base+0xb4>
   12df8:	ldr	r0, [fp, #-8]
   12dfc:	ldr	r1, [r0, #4]
   12e00:	lsl	r1, r1, #1
   12e04:	str	r1, [r0, #4]
   12e08:	ldr	r0, [fp, #-8]
   12e0c:	ldr	r1, [r0, #4]
   12e10:	ldr	r0, [r0, #8]
   12e14:	lsl	r1, r1, #2
   12e18:	bl	10bf4 <realloc@plt>
   12e1c:	ldr	r1, [fp, #-8]
   12e20:	str	r0, [r1, #8]
   12e24:	ldr	r0, [fp, #-8]
   12e28:	ldr	r0, [r0, #8]
   12e2c:	movw	r1, #0
   12e30:	cmp	r0, r1
   12e34:	bne	12e44 <vetor_insere@@Base+0xf0>
   12e38:	mvn	r0, #0
   12e3c:	str	r0, [fp, #-4]
   12e40:	b	12ec8 <vetor_insere@@Base+0x174>
   12e44:	b	12e48 <vetor_insere@@Base+0xf4>
   12e48:	ldr	r0, [fp, #-8]
   12e4c:	ldr	r0, [r0]
   12e50:	sub	r0, r0, #1
   12e54:	str	r0, [sp, #4]
   12e58:	ldr	r0, [sp, #4]
   12e5c:	ldr	r1, [sp, #8]
   12e60:	cmp	r0, r1
   12e64:	blt	12e98 <vetor_insere@@Base+0x144>
   12e68:	ldr	r0, [fp, #-8]
   12e6c:	ldr	r0, [r0, #8]
   12e70:	ldr	r1, [sp, #4]
   12e74:	ldr	r2, [r0, r1, lsl #2]
   12e78:	add	r1, r1, #1
   12e7c:	add	r0, r0, r1, lsl #2
   12e80:	str	r2, [r0]
   12e84:	ldr	r0, [sp, #4]
   12e88:	mvn	r1, #0
   12e8c:	add	r0, r0, r1
   12e90:	str	r0, [sp, #4]
   12e94:	b	12e58 <vetor_insere@@Base+0x104>
   12e98:	ldr	r0, [sp, #12]
   12e9c:	ldr	r1, [fp, #-8]
   12ea0:	ldr	r1, [r1, #8]
   12ea4:	ldr	r2, [sp, #8]
   12ea8:	add	r1, r1, r2, lsl #2
   12eac:	str	r0, [r1]
   12eb0:	ldr	r0, [fp, #-8]
   12eb4:	ldr	r1, [r0]
   12eb8:	add	r1, r1, #1
   12ebc:	str	r1, [r0]
   12ec0:	ldr	r0, [sp, #8]
   12ec4:	str	r0, [fp, #-4]
   12ec8:	ldr	r0, [fp, #-4]
   12ecc:	mov	sp, fp
   12ed0:	pop	{fp, pc}

00012ed4 <vetor_remove@@Base>:
   12ed4:	sub	sp, sp, #16
   12ed8:	str	r0, [sp, #8]
   12edc:	str	r1, [sp, #4]
   12ee0:	ldr	r0, [sp, #8]
   12ee4:	movw	r1, #0
   12ee8:	cmp	r0, r1
   12eec:	beq	12f10 <vetor_remove@@Base+0x3c>
   12ef0:	ldr	r0, [sp, #4]
   12ef4:	cmp	r0, #0
   12ef8:	blt	12f10 <vetor_remove@@Base+0x3c>
   12efc:	ldr	r0, [sp, #4]
   12f00:	ldr	r1, [sp, #8]
   12f04:	ldr	r1, [r1]
   12f08:	cmp	r0, r1
   12f0c:	blt	12f1c <vetor_remove@@Base+0x48>
   12f10:	mvn	r0, #0
   12f14:	str	r0, [sp, #12]
   12f18:	b	12f84 <vetor_remove@@Base+0xb0>
   12f1c:	ldr	r0, [sp, #4]
   12f20:	add	r0, r0, #1
   12f24:	str	r0, [sp]
   12f28:	ldr	r0, [sp]
   12f2c:	ldr	r1, [sp, #8]
   12f30:	ldr	r1, [r1]
   12f34:	cmp	r0, r1
   12f38:	bge	12f68 <vetor_remove@@Base+0x94>
   12f3c:	ldr	r0, [sp, #8]
   12f40:	ldr	r0, [r0, #8]
   12f44:	ldr	r1, [sp]
   12f48:	ldr	r2, [r0, r1, lsl #2]
   12f4c:	sub	r1, r1, #1
   12f50:	add	r0, r0, r1, lsl #2
   12f54:	str	r2, [r0]
   12f58:	ldr	r0, [sp]
   12f5c:	add	r0, r0, #1
   12f60:	str	r0, [sp]
   12f64:	b	12f28 <vetor_remove@@Base+0x54>
   12f68:	ldr	r0, [sp, #8]
   12f6c:	ldr	r1, [r0]
   12f70:	mvn	r2, #0
   12f74:	add	r1, r1, r2
   12f78:	str	r1, [r0]
   12f7c:	movw	r0, #0
   12f80:	str	r0, [sp, #12]
   12f84:	ldr	r0, [sp, #12]
   12f88:	add	sp, sp, #16
   12f8c:	bx	lr

00012f90 <vetor_pesquisa@@Base>:
   12f90:	sub	sp, sp, #16
   12f94:	str	r0, [sp, #8]
   12f98:	str	r1, [sp, #4]
   12f9c:	ldr	r0, [sp, #8]
   12fa0:	movw	r1, #0
   12fa4:	cmp	r0, r1
   12fa8:	bne	12fb8 <vetor_pesquisa@@Base+0x28>
   12fac:	mvn	r0, #0
   12fb0:	str	r0, [sp, #12]
   12fb4:	b	1301c <vetor_pesquisa@@Base+0x8c>
   12fb8:	movw	r0, #0
   12fbc:	str	r0, [sp]
   12fc0:	ldr	r0, [sp]
   12fc4:	ldr	r1, [sp, #8]
   12fc8:	ldr	r1, [r1]
   12fcc:	cmp	r0, r1
   12fd0:	bge	13014 <vetor_pesquisa@@Base+0x84>
   12fd4:	ldr	r0, [sp, #8]
   12fd8:	ldr	r0, [r0, #8]
   12fdc:	ldr	r1, [sp]
   12fe0:	add	r0, r0, r1, lsl #2
   12fe4:	ldr	r0, [r0]
   12fe8:	ldr	r1, [sp, #4]
   12fec:	cmp	r0, r1
   12ff0:	bne	13000 <vetor_pesquisa@@Base+0x70>
   12ff4:	ldr	r0, [sp]
   12ff8:	str	r0, [sp, #12]
   12ffc:	b	1301c <vetor_pesquisa@@Base+0x8c>
   13000:	b	13004 <vetor_pesquisa@@Base+0x74>
   13004:	ldr	r0, [sp]
   13008:	add	r0, r0, #1
   1300c:	str	r0, [sp]
   13010:	b	12fc0 <vetor_pesquisa@@Base+0x30>
   13014:	mvn	r0, #0
   13018:	str	r0, [sp, #12]
   1301c:	ldr	r0, [sp, #12]
   13020:	add	sp, sp, #16
   13024:	bx	lr

00013028 <vetor_ordena@@Base>:
   13028:	sub	sp, sp, #24
   1302c:	str	r0, [sp, #16]
   13030:	ldr	r0, [sp, #16]
   13034:	movw	r1, #0
   13038:	cmp	r0, r1
   1303c:	bne	1304c <vetor_ordena@@Base+0x24>
   13040:	mvn	r0, #0
   13044:	str	r0, [sp, #20]
   13048:	b	13130 <vetor_ordena@@Base+0x108>
   1304c:	movw	r0, #1
   13050:	str	r0, [sp, #12]
   13054:	ldr	r0, [sp, #12]
   13058:	ldr	r1, [sp, #16]
   1305c:	ldr	r1, [r1]
   13060:	cmp	r0, r1
   13064:	bge	13128 <vetor_ordena@@Base+0x100>
   13068:	ldr	r0, [sp, #16]
   1306c:	ldr	r0, [r0, #8]
   13070:	ldr	r1, [sp, #12]
   13074:	add	r0, r0, r1, lsl #2
   13078:	ldr	r0, [r0]
   1307c:	str	r0, [sp, #4]
   13080:	ldr	r0, [sp, #12]
   13084:	str	r0, [sp, #8]
   13088:	ldr	r0, [sp, #8]
   1308c:	cmp	r0, #0
   13090:	movw	r0, #0
   13094:	str	r0, [sp]
   13098:	ble	130c8 <vetor_ordena@@Base+0xa0>
   1309c:	ldr	r0, [sp, #4]
   130a0:	ldr	r1, [sp, #16]
   130a4:	ldr	r1, [r1, #8]
   130a8:	ldr	r2, [sp, #8]
   130ac:	sub	r2, r2, #1
   130b0:	add	r1, r1, r2, lsl #2
   130b4:	ldr	r1, [r1]
   130b8:	cmp	r0, r1
   130bc:	movw	r0, #0
   130c0:	movlt	r0, #1
   130c4:	str	r0, [sp]
   130c8:	ldr	r0, [sp]
   130cc:	tst	r0, #1
   130d0:	beq	13100 <vetor_ordena@@Base+0xd8>
   130d4:	ldr	r0, [sp, #16]
   130d8:	ldr	r0, [r0, #8]
   130dc:	ldr	r1, [sp, #8]
   130e0:	add	r0, r0, r1, lsl #2
   130e4:	ldr	r1, [r0, #-4]
   130e8:	str	r1, [r0]
   130ec:	ldr	r0, [sp, #8]
   130f0:	mvn	r1, #0
   130f4:	add	r0, r0, r1
   130f8:	str	r0, [sp, #8]
   130fc:	b	13088 <vetor_ordena@@Base+0x60>
   13100:	ldr	r0, [sp, #4]
   13104:	ldr	r1, [sp, #16]
   13108:	ldr	r1, [r1, #8]
   1310c:	ldr	r2, [sp, #8]
   13110:	add	r1, r1, r2, lsl #2
   13114:	str	r0, [r1]
   13118:	ldr	r0, [sp, #12]
   1311c:	add	r0, r0, #1
   13120:	str	r0, [sp, #12]
   13124:	b	13054 <vetor_ordena@@Base+0x2c>
   13128:	movw	r0, #0
   1312c:	str	r0, [sp, #20]
   13130:	ldr	r0, [sp, #20]
   13134:	add	sp, sp, #24
   13138:	bx	lr

0001313c <__libc_csu_init@@Base>:
   1313c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13140:	mov	r7, r0
   13144:	ldr	r6, [pc, #72]	; 13194 <__libc_csu_init@@Base+0x58>
   13148:	ldr	r5, [pc, #72]	; 13198 <__libc_csu_init@@Base+0x5c>
   1314c:	add	r6, pc, r6
   13150:	add	r5, pc, r5
   13154:	sub	r6, r6, r5
   13158:	mov	r8, r1
   1315c:	mov	r9, r2
   13160:	bl	10bb0 <calloc@plt-0x20>
   13164:	asrs	r6, r6, #2
   13168:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1316c:	mov	r4, #0
   13170:	add	r4, r4, #1
   13174:	ldr	r3, [r5], #4
   13178:	mov	r2, r9
   1317c:	mov	r1, r8
   13180:	mov	r0, r7
   13184:	blx	r3
   13188:	cmp	r6, r4
   1318c:	bne	13170 <__libc_csu_init@@Base+0x34>
   13190:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13194:			; <UNDEFINED> instruction: 0x00010db8
   13198:			; <UNDEFINED> instruction: 0x00010db0

0001319c <__libc_csu_fini@@Base>:
   1319c:	bx	lr

Disassembly of section .fini:

000131a0 <.fini>:
   131a0:	push	{r3, lr}
   131a4:	pop	{r3, pc}
