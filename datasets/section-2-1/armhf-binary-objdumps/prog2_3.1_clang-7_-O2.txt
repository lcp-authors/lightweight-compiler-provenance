
../repos/prog2/3.1:     file format elf32-littlearm


Disassembly of section .init:

00010ba0 <.init>:
   10ba0:	push	{r3, lr}
   10ba4:	bl	10cec <_start@@Base+0x3c>
   10ba8:	pop	{r3, pc}

Disassembly of section .plt:

00010bac <calloc@plt-0x14>:
   10bac:	push	{lr}		; (str lr, [sp, #-4]!)
   10bb0:	ldr	lr, [pc, #4]	; 10bbc <calloc@plt-0x4>
   10bb4:	add	lr, pc, lr
   10bb8:	ldr	pc, [lr, #8]!
   10bbc:	andeq	r1, r1, r4, asr #8

00010bc0 <calloc@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #69632	; 0x11000
   10bc8:	ldr	pc, [ip, #1092]!	; 0x444

00010bcc <strstr@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #69632	; 0x11000
   10bd4:	ldr	pc, [ip, #1084]!	; 0x43c

00010bd8 <strcmp@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #69632	; 0x11000
   10be0:	ldr	pc, [ip, #1076]!	; 0x434

00010be4 <printf@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #69632	; 0x11000
   10bec:	ldr	pc, [ip, #1068]!	; 0x42c

00010bf0 <fopen@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #69632	; 0x11000
   10bf8:	ldr	pc, [ip, #1060]!	; 0x424

00010bfc <free@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #69632	; 0x11000
   10c04:	ldr	pc, [ip, #1052]!	; 0x41c

00010c08 <time@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #69632	; 0x11000
   10c10:	ldr	pc, [ip, #1044]!	; 0x414

00010c14 <realloc@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #69632	; 0x11000
   10c1c:	ldr	pc, [ip, #1036]!	; 0x40c

00010c20 <strcat@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #69632	; 0x11000
   10c28:	ldr	pc, [ip, #1028]!	; 0x404

00010c2c <strcpy@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #69632	; 0x11000
   10c34:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c38 <puts@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #69632	; 0x11000
   10c40:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c44 <malloc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #69632	; 0x11000
   10c4c:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c50 <__libc_start_main@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #69632	; 0x11000
   10c58:	ldr	pc, [ip, #996]!	; 0x3e4

00010c5c <__gmon_start__@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #69632	; 0x11000
   10c64:	ldr	pc, [ip, #988]!	; 0x3dc

00010c68 <strlen@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #69632	; 0x11000
   10c70:	ldr	pc, [ip, #980]!	; 0x3d4

00010c74 <srand@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #69632	; 0x11000
   10c7c:	ldr	pc, [ip, #972]!	; 0x3cc

00010c80 <rand@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #69632	; 0x11000
   10c88:	ldr	pc, [ip, #964]!	; 0x3c4

00010c8c <fclose@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #69632	; 0x11000
   10c94:	ldr	pc, [ip, #956]!	; 0x3bc

00010c98 <fgets_unlocked@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #69632	; 0x11000
   10ca0:	ldr	pc, [ip, #948]!	; 0x3b4

00010ca4 <abort@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #69632	; 0x11000
   10cac:	ldr	pc, [ip, #940]!	; 0x3ac

Disassembly of section .text:

00010cb0 <_start@@Base>:
   10cb0:	mov	fp, #0
   10cb4:	mov	lr, #0
   10cb8:	pop	{r1}		; (ldr r1, [sp], #4)
   10cbc:	mov	r2, sp
   10cc0:	push	{r2}		; (str r2, [sp, #-4]!)
   10cc4:	push	{r0}		; (str r0, [sp, #-4]!)
   10cc8:	ldr	ip, [pc, #16]	; 10ce0 <_start@@Base+0x30>
   10ccc:	push	{ip}		; (str ip, [sp, #-4]!)
   10cd0:	ldr	r0, [pc, #12]	; 10ce4 <_start@@Base+0x34>
   10cd4:	ldr	r3, [pc, #12]	; 10ce8 <_start@@Base+0x38>
   10cd8:	bl	10c50 <__libc_start_main@plt>
   10cdc:	bl	10ca4 <abort@plt>
   10ce0:	andeq	r1, r1, ip, ror #16
   10ce4:	andeq	r0, r1, r0, lsr #27
   10ce8:	andeq	r1, r1, ip, lsl #16
   10cec:	ldr	r3, [pc, #20]	; 10d08 <_start@@Base+0x58>
   10cf0:	ldr	r2, [pc, #20]	; 10d0c <_start@@Base+0x5c>
   10cf4:	add	r3, pc, r3
   10cf8:	ldr	r2, [r3, r2]
   10cfc:	cmp	r2, #0
   10d00:	bxeq	lr
   10d04:	b	10c5c <__gmon_start__@plt>
   10d08:	andeq	r1, r1, r4, lsl #6
   10d0c:	andeq	r0, r0, ip, asr r0
   10d10:	ldr	r0, [pc, #24]	; 10d30 <_start@@Base+0x80>
   10d14:	ldr	r3, [pc, #24]	; 10d34 <_start@@Base+0x84>
   10d18:	cmp	r3, r0
   10d1c:	bxeq	lr
   10d20:	ldr	r3, [pc, #16]	; 10d38 <_start@@Base+0x88>
   10d24:	cmp	r3, #0
   10d28:	bxeq	lr
   10d2c:	bx	r3
   10d30:	andeq	r2, r2, r8, rrx
   10d34:	andeq	r2, r2, r8, rrx
   10d38:	andeq	r0, r0, r0
   10d3c:	ldr	r0, [pc, #36]	; 10d68 <_start@@Base+0xb8>
   10d40:	ldr	r1, [pc, #36]	; 10d6c <_start@@Base+0xbc>
   10d44:	sub	r1, r1, r0
   10d48:	asr	r1, r1, #2
   10d4c:	add	r1, r1, r1, lsr #31
   10d50:	asrs	r1, r1, #1
   10d54:	bxeq	lr
   10d58:	ldr	r3, [pc, #16]	; 10d70 <_start@@Base+0xc0>
   10d5c:	cmp	r3, #0
   10d60:	bxeq	lr
   10d64:	bx	r3
   10d68:	andeq	r2, r2, r8, rrx
   10d6c:	andeq	r2, r2, r8, rrx
   10d70:	andeq	r0, r0, r0
   10d74:	push	{r4, lr}
   10d78:	ldr	r4, [pc, #24]	; 10d98 <_start@@Base+0xe8>
   10d7c:	ldrb	r3, [r4]
   10d80:	cmp	r3, #0
   10d84:	popne	{r4, pc}
   10d88:	bl	10d10 <_start@@Base+0x60>
   10d8c:	mov	r3, #1
   10d90:	strb	r3, [r4]
   10d94:	pop	{r4, pc}
   10d98:	andeq	r2, r2, r8, rrx
   10d9c:	b	10d3c <_start@@Base+0x8c>

00010da0 <main@@Base>:
   10da0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10da4:	add	fp, sp, #24
   10da8:	sub	sp, sp, #104	; 0x68
   10dac:	bl	112c8 <vetor_novo@@Base>
   10db0:	mov	r4, r0
   10db4:	ldr	r0, [pc, #712]	; 11084 <main@@Base+0x2e4>
   10db8:	ldr	r1, [pc, #712]	; 11088 <main@@Base+0x2e8>
   10dbc:	add	r0, pc, r0
   10dc0:	add	r1, pc, r1
   10dc4:	bl	10bf0 <fopen@plt>
   10dc8:	mov	r8, r0
   10dcc:	add	r6, sp, #4
   10dd0:	mov	r1, #100	; 0x64
   10dd4:	mov	r0, r6
   10dd8:	mov	r2, r8
   10ddc:	bl	10c98 <fgets_unlocked@plt>
   10de0:	cmp	r0, #0
   10de4:	beq	10e38 <main@@Base+0x98>
   10de8:	mov	r7, #0
   10dec:	mov	r5, #0
   10df0:	mov	r0, r6
   10df4:	bl	10c68 <strlen@plt>
   10df8:	add	r0, r6, r0
   10dfc:	mov	r1, r6
   10e00:	mov	r2, r5
   10e04:	strb	r7, [r0, #-1]
   10e08:	mov	r0, r4
   10e0c:	bl	11414 <vetor_insere@@Base>
   10e10:	cmn	r0, #1
   10e14:	beq	10ecc <main@@Base+0x12c>
   10e18:	mov	r0, r6
   10e1c:	mov	r1, #100	; 0x64
   10e20:	mov	r2, r8
   10e24:	bl	10c98 <fgets_unlocked@plt>
   10e28:	add	r5, r5, #1
   10e2c:	cmp	r0, #0
   10e30:	bne	10df0 <main@@Base+0x50>
   10e34:	b	10e3c <main@@Base+0x9c>
   10e38:	mov	r5, #0
   10e3c:	ldr	r0, [pc, #588]	; 11090 <main@@Base+0x2f0>
   10e40:	mov	r1, r5
   10e44:	add	r0, pc, r0
   10e48:	bl	10be4 <printf@plt>
   10e4c:	ldr	r7, [r4]
   10e50:	cmp	r7, #1
   10e54:	blt	10e8c <main@@Base+0xec>
   10e58:	ldr	r6, [pc, #564]	; 11094 <main@@Base+0x2f4>
   10e5c:	mov	r5, #0
   10e60:	add	r6, pc, r6
   10e64:	mov	r0, r4
   10e68:	mov	r1, r5
   10e6c:	bl	113ec <vetor_elemento@@Base>
   10e70:	mov	r2, r0
   10e74:	mov	r0, r6
   10e78:	mov	r1, r5
   10e7c:	bl	10be4 <printf@plt>
   10e80:	add	r5, r5, #1
   10e84:	cmp	r7, r5
   10e88:	bne	10e64 <main@@Base+0xc4>
   10e8c:	ldr	r1, [pc, #516]	; 11098 <main@@Base+0x2f8>
   10e90:	mov	r0, r4
   10e94:	add	r1, pc, r1
   10e98:	bl	11568 <vetor_pesquisa@@Base>
   10e9c:	mov	r1, r0
   10ea0:	ldr	r0, [pc, #500]	; 1109c <main@@Base+0x2fc>
   10ea4:	add	r0, pc, r0
   10ea8:	bl	10be4 <printf@plt>
   10eac:	mov	r0, r4
   10eb0:	bl	115c0 <vetor_ordena@@Base>
   10eb4:	cmp	r0, #0
   10eb8:	beq	10ee4 <main@@Base+0x144>
   10ebc:	ldr	r0, [pc, #480]	; 110a4 <main@@Base+0x304>
   10ec0:	add	r0, pc, r0
   10ec4:	bl	10c38 <puts@plt>
   10ec8:	b	10f24 <main@@Base+0x184>
   10ecc:	ldr	r0, [pc, #440]	; 1108c <main@@Base+0x2ec>
   10ed0:	add	r0, pc, r0
   10ed4:	bl	10c38 <puts@plt>
   10ed8:	mvn	r0, #0
   10edc:	sub	sp, fp, #24
   10ee0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10ee4:	ldr	r7, [r4]
   10ee8:	mov	r5, #0
   10eec:	cmp	r7, #1
   10ef0:	blt	10f74 <main@@Base+0x1d4>
   10ef4:	ldr	r6, [pc, #420]	; 110a0 <main@@Base+0x300>
   10ef8:	add	r6, pc, r6
   10efc:	mov	r0, r4
   10f00:	mov	r1, r5
   10f04:	bl	113ec <vetor_elemento@@Base>
   10f08:	mov	r2, r0
   10f0c:	mov	r0, r6
   10f10:	mov	r1, r5
   10f14:	bl	10be4 <printf@plt>
   10f18:	add	r5, r5, #1
   10f1c:	cmp	r7, r5
   10f20:	bne	10efc <main@@Base+0x15c>
   10f24:	ldr	r7, [r4]
   10f28:	cmp	r7, #1
   10f2c:	blt	10f70 <main@@Base+0x1d0>
   10f30:	ldr	r9, [pc, #368]	; 110a8 <main@@Base+0x308>
   10f34:	mov	r6, #0
   10f38:	mov	r5, #0
   10f3c:	add	r9, pc, r9
   10f40:	mov	r0, r4
   10f44:	mov	r1, r6
   10f48:	bl	113ec <vetor_elemento@@Base>
   10f4c:	mov	r1, r0
   10f50:	mov	r0, r9
   10f54:	bl	10bd8 <strcmp@plt>
   10f58:	cmp	r0, #0
   10f5c:	add	r6, r6, #1
   10f60:	addeq	r5, r5, #1
   10f64:	cmp	r7, r6
   10f68:	bne	10f40 <main@@Base+0x1a0>
   10f6c:	b	10f74 <main@@Base+0x1d4>
   10f70:	mov	r5, #0
   10f74:	ldr	r0, [pc, #304]	; 110ac <main@@Base+0x30c>
   10f78:	mov	r1, r5
   10f7c:	add	r0, pc, r0
   10f80:	bl	10be4 <printf@plt>
   10f84:	mov	r0, r4
   10f88:	bl	11174 <vetor_remove_repetidas@@Base>
   10f8c:	ldr	r0, [r4]
   10f90:	sub	r1, r0, #1
   10f94:	ldr	r0, [pc, #276]	; 110b0 <main@@Base+0x310>
   10f98:	add	r0, pc, r0
   10f9c:	bl	10be4 <printf@plt>
   10fa0:	bl	112c8 <vetor_novo@@Base>
   10fa4:	mov	r6, r0
   10fa8:	ldr	r0, [r4]
   10fac:	cmp	r0, #1
   10fb0:	blt	11020 <main@@Base+0x280>
   10fb4:	ldr	r5, [pc, #248]	; 110b4 <main@@Base+0x314>
   10fb8:	ldr	r9, [pc, #248]	; 110b8 <main@@Base+0x318>
   10fbc:	mov	r7, #0
   10fc0:	add	r5, pc, r5
   10fc4:	add	r9, pc, r9
   10fc8:	mov	r0, r4
   10fcc:	mov	r1, r7
   10fd0:	bl	113ec <vetor_elemento@@Base>
   10fd4:	mov	r1, r5
   10fd8:	bl	10bcc <strstr@plt>
   10fdc:	cmp	r0, #0
   10fe0:	beq	11010 <main@@Base+0x270>
   10fe4:	mov	r0, r4
   10fe8:	mov	r1, r7
   10fec:	bl	113ec <vetor_elemento@@Base>
   10ff0:	mov	r1, r0
   10ff4:	mov	r0, r6
   10ff8:	mov	r2, #0
   10ffc:	bl	11414 <vetor_insere@@Base>
   11000:	cmn	r0, #1
   11004:	bne	11010 <main@@Base+0x270>
   11008:	mov	r0, r9
   1100c:	bl	10c38 <puts@plt>
   11010:	ldr	r0, [r4]
   11014:	add	r7, r7, #1
   11018:	cmp	r7, r0
   1101c:	blt	10fc8 <main@@Base+0x228>
   11020:	ldr	r7, [r6]
   11024:	cmp	r7, #1
   11028:	blt	11060 <main@@Base+0x2c0>
   1102c:	ldr	r9, [pc, #136]	; 110bc <main@@Base+0x31c>
   11030:	mov	r5, #0
   11034:	add	r9, pc, r9
   11038:	mov	r0, r6
   1103c:	mov	r1, r5
   11040:	bl	113ec <vetor_elemento@@Base>
   11044:	mov	r2, r0
   11048:	mov	r0, r9
   1104c:	mov	r1, r5
   11050:	bl	10be4 <printf@plt>
   11054:	add	r5, r5, #1
   11058:	cmp	r7, r5
   1105c:	bne	11038 <main@@Base+0x298>
   11060:	mov	r0, r6
   11064:	bl	112f8 <vetor_apaga@@Base>
   11068:	mov	r0, r4
   1106c:	bl	112f8 <vetor_apaga@@Base>
   11070:	mov	r0, r8
   11074:	bl	10c8c <fclose@plt>
   11078:	mov	r0, #0
   1107c:	sub	sp, fp, #24
   11080:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   11084:	andeq	r0, r0, r0, asr #21
   11088:	ldrdeq	r0, [r0], -r2
   1108c:	andeq	r0, r0, r8, lsl fp
   11090:	andeq	r0, r0, r0, asr sl
   11094:	andeq	r0, r0, r6, asr #22
   11098:	andeq	r0, r0, r0, ror #20
   1109c:	andeq	r0, r0, r9, lsl #20
   110a0:	andeq	r0, r0, lr, lsr #21
   110a4:	strdeq	r0, [r0], -r8
   110a8:	andeq	r0, r0, r3, lsl sl
   110ac:	muleq	r0, fp, r9
   110b0:	andeq	r0, r0, sl, asr #19
   110b4:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   110b8:	andeq	r0, r0, r4, lsl #21
   110bc:	andeq	r0, r0, r2, ror r9

000110c0 <vetor_imprime@@Base>:
   110c0:	push	{r4, r5, r6, r7, fp, lr}
   110c4:	add	fp, sp, #16
   110c8:	ldr	r7, [r0]
   110cc:	cmp	r7, #1
   110d0:	poplt	{r4, r5, r6, r7, fp, pc}
   110d4:	ldr	r6, [pc, #52]	; 11110 <vetor_imprime@@Base+0x50>
   110d8:	mov	r4, r0
   110dc:	mov	r5, #0
   110e0:	add	r6, pc, r6
   110e4:	mov	r0, r4
   110e8:	mov	r1, r5
   110ec:	bl	113ec <vetor_elemento@@Base>
   110f0:	mov	r2, r0
   110f4:	mov	r0, r6
   110f8:	mov	r1, r5
   110fc:	bl	10be4 <printf@plt>
   11100:	add	r5, r5, #1
   11104:	cmp	r7, r5
   11108:	bne	110e4 <vetor_imprime@@Base+0x24>
   1110c:	pop	{r4, r5, r6, r7, fp, pc}
   11110:	andeq	r0, r0, r6, asr #17

00011114 <vetor_num_ocorrencias@@Base>:
   11114:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11118:	add	fp, sp, #24
   1111c:	ldr	r4, [r0]
   11120:	cmp	r4, #1
   11124:	movlt	r6, #0
   11128:	movlt	r0, r6
   1112c:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   11130:	mov	r8, r1
   11134:	mov	r5, r0
   11138:	mov	r7, #0
   1113c:	mov	r6, #0
   11140:	mov	r0, r5
   11144:	mov	r1, r7
   11148:	bl	113ec <vetor_elemento@@Base>
   1114c:	mov	r1, r0
   11150:	mov	r0, r8
   11154:	bl	10bd8 <strcmp@plt>
   11158:	cmp	r0, #0
   1115c:	add	r7, r7, #1
   11160:	addeq	r6, r6, #1
   11164:	cmp	r4, r7
   11168:	bne	11140 <vetor_num_ocorrencias@@Base+0x2c>
   1116c:	mov	r0, r6
   11170:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011174 <vetor_remove_repetidas@@Base>:
   11174:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11178:	add	fp, sp, #24
   1117c:	sub	sp, sp, #104	; 0x68
   11180:	mov	r4, r0
   11184:	ldr	r0, [r0]
   11188:	cmp	r0, #1
   1118c:	blt	11228 <vetor_remove_repetidas@@Base+0xb4>
   11190:	ldr	r8, [pc, #152]	; 11230 <vetor_remove_repetidas@@Base+0xbc>
   11194:	mov	r7, #0
   11198:	add	r6, sp, #4
   1119c:	add	r8, pc, r8
   111a0:	mov	r0, r4
   111a4:	mov	r1, r7
   111a8:	bl	113ec <vetor_elemento@@Base>
   111ac:	mov	r1, r0
   111b0:	mov	r0, r6
   111b4:	bl	10c2c <strcpy@plt>
   111b8:	ldr	r0, [r4]
   111bc:	add	r7, r7, #1
   111c0:	cmp	r7, r0
   111c4:	bge	11220 <vetor_remove_repetidas@@Base+0xac>
   111c8:	mov	r5, r7
   111cc:	mov	r0, r4
   111d0:	mov	r1, r5
   111d4:	bl	113ec <vetor_elemento@@Base>
   111d8:	mov	r1, r0
   111dc:	mov	r0, r6
   111e0:	bl	10bd8 <strcmp@plt>
   111e4:	cmp	r0, #0
   111e8:	bne	11210 <vetor_remove_repetidas@@Base+0x9c>
   111ec:	mov	r0, r4
   111f0:	mov	r1, r5
   111f4:	bl	114e8 <vetor_remove@@Base>
   111f8:	cmn	r0, #1
   111fc:	beq	11208 <vetor_remove_repetidas@@Base+0x94>
   11200:	sub	r5, r5, #1
   11204:	b	11210 <vetor_remove_repetidas@@Base+0x9c>
   11208:	mov	r0, r8
   1120c:	bl	10c38 <puts@plt>
   11210:	ldr	r0, [r4]
   11214:	add	r5, r5, #1
   11218:	cmp	r5, r0
   1121c:	blt	111cc <vetor_remove_repetidas@@Base+0x58>
   11220:	cmp	r7, r0
   11224:	blt	111a0 <vetor_remove_repetidas@@Base+0x2c>
   11228:	sub	sp, fp, #24
   1122c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11230:	andeq	r0, r0, ip, ror r8

00011234 <vetor_pesquisa_parcial@@Base>:
   11234:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11238:	add	fp, sp, #24
   1123c:	mov	r4, r1
   11240:	mov	r5, r0
   11244:	bl	112c8 <vetor_novo@@Base>
   11248:	mov	r6, r0
   1124c:	ldr	r0, [r5]
   11250:	cmp	r0, #1
   11254:	blt	112bc <vetor_pesquisa_parcial@@Base+0x88>
   11258:	ldr	r8, [pc, #100]	; 112c4 <vetor_pesquisa_parcial@@Base+0x90>
   1125c:	mov	r7, #0
   11260:	add	r8, pc, r8
   11264:	mov	r0, r5
   11268:	mov	r1, r7
   1126c:	bl	113ec <vetor_elemento@@Base>
   11270:	mov	r1, r4
   11274:	bl	10bcc <strstr@plt>
   11278:	cmp	r0, #0
   1127c:	beq	112ac <vetor_pesquisa_parcial@@Base+0x78>
   11280:	mov	r0, r5
   11284:	mov	r1, r7
   11288:	bl	113ec <vetor_elemento@@Base>
   1128c:	mov	r1, r0
   11290:	mov	r0, r6
   11294:	mov	r2, #0
   11298:	bl	11414 <vetor_insere@@Base>
   1129c:	cmn	r0, #1
   112a0:	bne	112ac <vetor_pesquisa_parcial@@Base+0x78>
   112a4:	mov	r0, r8
   112a8:	bl	10c38 <puts@plt>
   112ac:	ldr	r0, [r5]
   112b0:	add	r7, r7, #1
   112b4:	cmp	r7, r0
   112b8:	blt	11264 <vetor_pesquisa_parcial@@Base+0x30>
   112bc:	mov	r0, r6
   112c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   112c4:	andeq	r0, r0, r8, ror #15

000112c8 <vetor_novo@@Base>:
   112c8:	push	{fp, lr}
   112cc:	mov	fp, sp
   112d0:	mov	r0, #12
   112d4:	bl	10c44 <malloc@plt>
   112d8:	cmp	r0, #0
   112dc:	movne	r1, #0
   112e0:	strne	r1, [r0]
   112e4:	strne	r1, [r0, #4]
   112e8:	strne	r1, [r0, #8]
   112ec:	popne	{fp, pc}
   112f0:	mov	r0, #0
   112f4:	pop	{fp, pc}

000112f8 <vetor_apaga@@Base>:
   112f8:	cmp	r0, #0
   112fc:	bxeq	lr
   11300:	push	{r4, r5, fp, lr}
   11304:	add	fp, sp, #8
   11308:	ldr	r1, [r0]
   1130c:	mov	r4, r0
   11310:	ldr	r0, [r0, #8]
   11314:	cmp	r1, #1
   11318:	blt	1133c <vetor_apaga@@Base+0x44>
   1131c:	mov	r5, #0
   11320:	ldr	r0, [r0, r5, lsl #2]
   11324:	bl	10bfc <free@plt>
   11328:	ldr	r1, [r4]
   1132c:	ldr	r0, [r4, #8]
   11330:	add	r5, r5, #1
   11334:	cmp	r5, r1
   11338:	blt	11320 <vetor_apaga@@Base+0x28>
   1133c:	bl	10bfc <free@plt>
   11340:	mov	r0, r4
   11344:	pop	{r4, r5, fp, lr}
   11348:	b	10bfc <free@plt>

0001134c <vetor_atribui@@Base>:
   1134c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   11350:	add	fp, sp, #24
   11354:	mvn	r5, #0
   11358:	cmp	r0, #0
   1135c:	beq	113d4 <vetor_atribui@@Base+0x88>
   11360:	mov	r4, r1
   11364:	cmp	r1, #0
   11368:	blt	113d4 <vetor_atribui@@Base+0x88>
   1136c:	mov	r7, r0
   11370:	ldr	r0, [r0]
   11374:	cmp	r0, r4
   11378:	ble	113d4 <vetor_atribui@@Base+0x88>
   1137c:	mov	r0, r2
   11380:	mov	r8, r2
   11384:	bl	10c68 <strlen@plt>
   11388:	mov	r9, r0
   1138c:	ldr	r0, [r7, #8]
   11390:	ldr	r6, [r0, r4, lsl #2]
   11394:	mov	r0, r6
   11398:	bl	10c68 <strlen@plt>
   1139c:	cmp	r9, r0
   113a0:	bls	113c4 <vetor_atribui@@Base+0x78>
   113a4:	add	r1, r9, #1
   113a8:	mov	r0, r6
   113ac:	bl	10c14 <realloc@plt>
   113b0:	mov	r6, r0
   113b4:	ldr	r0, [r7, #8]
   113b8:	cmp	r6, #0
   113bc:	str	r6, [r0, r4, lsl #2]
   113c0:	beq	113d4 <vetor_atribui@@Base+0x88>
   113c4:	mov	r0, r6
   113c8:	mov	r1, r8
   113cc:	bl	10c2c <strcpy@plt>
   113d0:	mov	r5, r4
   113d4:	mov	r0, r5
   113d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000113dc <vetor_tamanho@@Base>:
   113dc:	cmp	r0, #0
   113e0:	ldrne	r0, [r0]
   113e4:	mvneq	r0, #0
   113e8:	bx	lr

000113ec <vetor_elemento@@Base>:
   113ec:	mov	r2, r0
   113f0:	mov	r0, #0
   113f4:	cmp	r2, #0
   113f8:	bxeq	lr
   113fc:	cmp	r1, #0
   11400:	ldrge	r3, [r2]
   11404:	cmpge	r3, r1
   11408:	ldrgt	r0, [r2, #8]
   1140c:	ldrgt	r0, [r0, r1, lsl #2]
   11410:	bx	lr

00011414 <vetor_insere@@Base>:
   11414:	push	{r4, r5, r6, r7, fp, lr}
   11418:	add	fp, sp, #16
   1141c:	mvn	r4, #0
   11420:	cmp	r0, #0
   11424:	beq	114e0 <vetor_insere@@Base+0xcc>
   11428:	mov	r5, r2
   1142c:	cmp	r2, #0
   11430:	blt	114e0 <vetor_insere@@Base+0xcc>
   11434:	mov	r6, r0
   11438:	ldr	r0, [r0]
   1143c:	cmp	r0, r5
   11440:	blt	114e0 <vetor_insere@@Base+0xcc>
   11444:	mov	r7, r1
   11448:	ldr	r1, [r6, #4]
   1144c:	cmp	r0, r1
   11450:	bne	1149c <vetor_insere@@Base+0x88>
   11454:	lsl	r1, r0, #1
   11458:	cmp	r0, #0
   1145c:	movweq	r1, #1
   11460:	str	r1, [r6, #4]
   11464:	lsl	r1, r1, #2
   11468:	ldr	r0, [r6, #8]
   1146c:	bl	10c14 <realloc@plt>
   11470:	cmp	r0, #0
   11474:	str	r0, [r6, #8]
   11478:	beq	114e0 <vetor_insere@@Base+0xcc>
   1147c:	ldr	r0, [r6]
   11480:	cmp	r0, r5
   11484:	ble	114a4 <vetor_insere@@Base+0x90>
   11488:	ldr	r1, [r6, #8]
   1148c:	add	r2, r1, r0, lsl #2
   11490:	ldr	r2, [r2, #-4]
   11494:	str	r2, [r1, r0, lsl #2]
   11498:	sub	r0, r0, #1
   1149c:	cmp	r0, r5
   114a0:	bgt	11488 <vetor_insere@@Base+0x74>
   114a4:	mov	r0, r7
   114a8:	bl	10c68 <strlen@plt>
   114ac:	add	r0, r0, #1
   114b0:	mov	r1, #1
   114b4:	bl	10bc0 <calloc@plt>
   114b8:	ldr	r1, [r6, #8]
   114bc:	cmp	r0, #0
   114c0:	str	r0, [r1, r5, lsl #2]
   114c4:	beq	114e0 <vetor_insere@@Base+0xcc>
   114c8:	mov	r1, r7
   114cc:	bl	10c2c <strcpy@plt>
   114d0:	ldr	r0, [r6]
   114d4:	mov	r4, r5
   114d8:	add	r0, r0, #1
   114dc:	str	r0, [r6]
   114e0:	mov	r0, r4
   114e4:	pop	{r4, r5, r6, r7, fp, pc}

000114e8 <vetor_remove@@Base>:
   114e8:	push	{r4, r5, fp, lr}
   114ec:	add	fp, sp, #8
   114f0:	mov	r4, r0
   114f4:	mvn	r0, #0
   114f8:	cmp	r4, #0
   114fc:	popeq	{r4, r5, fp, pc}
   11500:	cmp	r1, #0
   11504:	mov	r5, r1
   11508:	ldrge	r1, [r4]
   1150c:	cmpge	r1, r5
   11510:	bgt	11518 <vetor_remove@@Base+0x30>
   11514:	pop	{r4, r5, fp, pc}
   11518:	ldr	r0, [r4, #8]
   1151c:	ldr	r0, [r0, r5, lsl #2]
   11520:	bl	10bfc <free@plt>
   11524:	ldr	r0, [r4]
   11528:	add	r1, r5, #1
   1152c:	cmp	r1, r0
   11530:	bge	11558 <vetor_remove@@Base+0x70>
   11534:	ldr	r1, [r4, #8]
   11538:	add	r2, r1, r5, lsl #2
   1153c:	ldr	r2, [r2, #4]
   11540:	str	r2, [r1, r5, lsl #2]
   11544:	add	r2, r5, #2
   11548:	add	r1, r5, #1
   1154c:	cmp	r2, r0
   11550:	mov	r5, r1
   11554:	blt	11534 <vetor_remove@@Base+0x4c>
   11558:	sub	r0, r0, #1
   1155c:	str	r0, [r4]
   11560:	mov	r0, #0
   11564:	pop	{r4, r5, fp, pc}

00011568 <vetor_pesquisa@@Base>:
   11568:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1156c:	add	fp, sp, #24
   11570:	mvn	r8, #0
   11574:	cmp	r0, #0
   11578:	beq	115b8 <vetor_pesquisa@@Base+0x50>
   1157c:	ldr	r6, [r0]
   11580:	cmp	r6, #1
   11584:	blt	115b8 <vetor_pesquisa@@Base+0x50>
   11588:	ldr	r4, [r0, #8]
   1158c:	mov	r5, r1
   11590:	mov	r7, #0
   11594:	ldr	r0, [r4, r7, lsl #2]
   11598:	mov	r1, r5
   1159c:	bl	10bd8 <strcmp@plt>
   115a0:	cmp	r0, #0
   115a4:	moveq	r0, r7
   115a8:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   115ac:	add	r7, r7, #1
   115b0:	cmp	r7, r6
   115b4:	blt	11594 <vetor_pesquisa@@Base+0x2c>
   115b8:	mov	r0, r8
   115bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000115c0 <vetor_ordena@@Base>:
   115c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115c4:	add	fp, sp, #28
   115c8:	sub	sp, sp, #4
   115cc:	cmp	r0, #0
   115d0:	mvneq	r0, #0
   115d4:	subeq	sp, fp, #28
   115d8:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   115dc:	ldr	r1, [r0]
   115e0:	mov	sl, r0
   115e4:	mov	r0, #0
   115e8:	cmp	r1, #2
   115ec:	str	r1, [sp]
   115f0:	blt	11678 <vetor_ordena@@Base+0xb8>
   115f4:	ldr	r5, [sl, #8]
   115f8:	mov	r8, #1
   115fc:	sub	r9, r8, #1
   11600:	ldr	r6, [r5, r8, lsl #2]
   11604:	ldr	r7, [r5, r9, lsl #2]
   11608:	mov	r0, r6
   1160c:	mov	r1, r7
   11610:	bl	10bd8 <strcmp@plt>
   11614:	cmn	r0, #1
   11618:	bgt	1165c <vetor_ordena@@Base+0x9c>
   1161c:	add	r0, r5, r9, lsl #2
   11620:	mov	r4, r9
   11624:	str	r7, [r0, #4]
   11628:	add	r0, r9, #1
   1162c:	ldr	r5, [sl, #8]
   11630:	cmp	r0, #2
   11634:	blt	11660 <vetor_ordena@@Base+0xa0>
   11638:	add	r0, r5, r4, lsl #2
   1163c:	ldr	r7, [r0, #-4]
   11640:	mov	r0, r6
   11644:	mov	r1, r7
   11648:	bl	10bd8 <strcmp@plt>
   1164c:	sub	r9, r4, #1
   11650:	cmp	r0, #0
   11654:	blt	1161c <vetor_ordena@@Base+0x5c>
   11658:	b	11660 <vetor_ordena@@Base+0xa0>
   1165c:	mov	r4, r8
   11660:	ldr	r0, [sp]
   11664:	add	r8, r8, #1
   11668:	str	r6, [r5, r4, lsl #2]
   1166c:	cmp	r8, r0
   11670:	blt	115fc <vetor_ordena@@Base+0x3c>
   11674:	mov	r0, #0
   11678:	sub	sp, fp, #28
   1167c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011680 <vetor_concatena@@Base>:
   11680:	push	{r4, r5, r6, sl, fp, lr}
   11684:	add	fp, sp, #16
   11688:	cmp	r0, #0
   1168c:	mov	r4, #0
   11690:	movne	r5, r1
   11694:	cmpne	r1, #0
   11698:	bne	116a4 <vetor_concatena@@Base+0x24>
   1169c:	mov	r0, r4
   116a0:	pop	{r4, r5, r6, sl, fp, pc}
   116a4:	mov	r6, r0
   116a8:	mov	r0, #12
   116ac:	bl	10c44 <malloc@plt>
   116b0:	cmp	r0, #0
   116b4:	beq	116d0 <vetor_concatena@@Base+0x50>
   116b8:	mov	r4, r0
   116bc:	mov	r0, #0
   116c0:	str	r0, [r4]
   116c4:	str	r0, [r4, #4]
   116c8:	str	r0, [r4, #8]
   116cc:	b	116d4 <vetor_concatena@@Base+0x54>
   116d0:	mov	r4, #0
   116d4:	ldm	r5, {r0, r1}
   116d8:	ldm	r6, {r2, r3, ip}
   116dc:	add	r6, r2, r0, lsl #2
   116e0:	add	r1, r1, r3
   116e4:	stmib	r4, {r1, r6}
   116e8:	ldr	r0, [r2, r0, lsl #2]
   116ec:	ldr	r1, [ip]
   116f0:	bl	10c2c <strcpy@plt>
   116f4:	ldr	r0, [r4, #8]
   116f8:	ldr	r1, [r5, #8]
   116fc:	ldr	r0, [r0]
   11700:	ldr	r1, [r1]
   11704:	bl	10c20 <strcat@plt>
   11708:	mov	r0, r4
   1170c:	pop	{r4, r5, r6, sl, fp, pc}

00011710 <vetor_inverte@@Base>:
   11710:	push	{r4, r5, fp, lr}
   11714:	add	fp, sp, #8
   11718:	cmp	r0, #0
   1171c:	beq	11774 <vetor_inverte@@Base+0x64>
   11720:	ldr	ip, [r0]
   11724:	cmp	ip, #1
   11728:	blt	11774 <vetor_inverte@@Base+0x64>
   1172c:	sub	r3, ip, #1
   11730:	lsl	lr, ip, #2
   11734:	mov	r1, #0
   11738:	ldr	r2, [r0, #8]
   1173c:	add	r5, r2, lr
   11740:	ldr	r4, [r2, r1, lsl #2]
   11744:	ldr	r5, [r5, -r1, lsl #2]
   11748:	str	r5, [r2, r1, lsl #2]
   1174c:	ldr	r2, [r0, #8]
   11750:	add	r2, r2, lr
   11754:	str	r4, [r2, -r1, lsl #2]
   11758:	add	r1, r1, #1
   1175c:	cmp	r1, ip
   11760:	bge	11774 <vetor_inverte@@Base+0x64>
   11764:	sub	r2, r3, #1
   11768:	cmp	r1, r3
   1176c:	mov	r3, r2
   11770:	blt	11738 <vetor_inverte@@Base+0x28>
   11774:	mov	r0, #0
   11778:	pop	{r4, r5, fp, pc}

0001177c <vetor_baralha@@Base>:
   1177c:	push	{r4, r5, r6, r7, fp, lr}
   11780:	add	fp, sp, #16
   11784:	sub	sp, sp, #8
   11788:	ldr	r5, [r0]
   1178c:	mov	r0, #12
   11790:	bl	10c44 <malloc@plt>
   11794:	cmp	r0, #0
   11798:	beq	117b4 <vetor_baralha@@Base+0x38>
   1179c:	mov	r4, r0
   117a0:	mov	r0, #0
   117a4:	str	r0, [r4]
   117a8:	str	r0, [r4, #4]
   117ac:	str	r0, [r4, #8]
   117b0:	b	117b8 <vetor_baralha@@Base+0x3c>
   117b4:	mov	r4, #0
   117b8:	add	r0, sp, #4
   117bc:	bl	10c08 <time@plt>
   117c0:	bl	10c74 <srand@plt>
   117c4:	cmp	r5, #1
   117c8:	blt	11800 <vetor_baralha@@Base+0x84>
   117cc:	add	r6, r5, #1
   117d0:	mov	r7, #0
   117d4:	bl	10c80 <rand@plt>
   117d8:	ldr	r1, [r4, #8]
   117dc:	sdiv	r3, r0, r6
   117e0:	mls	r0, r3, r6, r0
   117e4:	ldr	r3, [r1, r0, lsl #2]
   117e8:	ldr	r2, [r1, r7, lsl #2]
   117ec:	str	r3, [r1, r7, lsl #2]
   117f0:	add	r7, r7, #1
   117f4:	str	r2, [r1, r0, lsl #2]
   117f8:	cmp	r5, r7
   117fc:	bne	117d4 <vetor_baralha@@Base+0x58>
   11800:	mov	r0, r4
   11804:	sub	sp, fp, #16
   11808:	pop	{r4, r5, r6, r7, fp, pc}

0001180c <__libc_csu_init@@Base>:
   1180c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11810:	mov	r7, r0
   11814:	ldr	r6, [pc, #72]	; 11864 <__libc_csu_init@@Base+0x58>
   11818:	ldr	r5, [pc, #72]	; 11868 <__libc_csu_init@@Base+0x5c>
   1181c:	add	r6, pc, r6
   11820:	add	r5, pc, r5
   11824:	sub	r6, r6, r5
   11828:	mov	r8, r1
   1182c:	mov	r9, r2
   11830:	bl	10ba0 <calloc@plt-0x20>
   11834:	asrs	r6, r6, #2
   11838:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1183c:	mov	r4, #0
   11840:	add	r4, r4, #1
   11844:	ldr	r3, [r5], #4
   11848:	mov	r2, r9
   1184c:	mov	r1, r8
   11850:	mov	r0, r7
   11854:	blx	r3
   11858:	cmp	r6, r4
   1185c:	bne	11840 <__libc_csu_init@@Base+0x34>
   11860:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11864:	andeq	r0, r1, r8, ror #13
   11868:	andeq	r0, r1, r0, ror #13

0001186c <__libc_csu_fini@@Base>:
   1186c:	bx	lr

Disassembly of section .fini:

00011870 <.fini>:
   11870:	push	{r3, lr}
   11874:	pop	{r3, pc}
