
../repos/prog2/3.e.3:     file format elf32-littlearm


Disassembly of section .init:

00010734 <.init>:
   10734:	push	{r3, lr}
   10738:	bl	10808 <_start@@Base+0x3c>
   1073c:	pop	{r3, pc}

Disassembly of section .plt:

00010740 <__isoc99_fscanf@plt-0x14>:
   10740:	push	{lr}		; (str lr, [sp, #-4]!)
   10744:	ldr	lr, [pc, #4]	; 10750 <__isoc99_fscanf@plt-0x4>
   10748:	add	lr, pc, lr
   1074c:	ldr	pc, [lr, #8]!
   10750:			; <UNDEFINED> instruction: 0x000108b0

00010754 <__isoc99_fscanf@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2224]!	; 0x8b0

00010760 <fopen@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2216]!	; 0x8a8

0001076c <fwrite_unlocked@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #16, 20	; 0x10000
   10774:	ldr	pc, [ip, #2208]!	; 0x8a0

00010778 <realloc@plt>:
   10778:	add	ip, pc, #0, 12
   1077c:	add	ip, ip, #16, 20	; 0x10000
   10780:	ldr	pc, [ip, #2200]!	; 0x898

00010784 <malloc@plt>:
   10784:	add	ip, pc, #0, 12
   10788:	add	ip, ip, #16, 20	; 0x10000
   1078c:	ldr	pc, [ip, #2192]!	; 0x890

00010790 <__libc_start_main@plt>:
   10790:	add	ip, pc, #0, 12
   10794:	add	ip, ip, #16, 20	; 0x10000
   10798:	ldr	pc, [ip, #2184]!	; 0x888

0001079c <__gmon_start__@plt>:
   1079c:	add	ip, pc, #0, 12
   107a0:	add	ip, ip, #16, 20	; 0x10000
   107a4:	ldr	pc, [ip, #2176]!	; 0x880

000107a8 <fprintf@plt>:
   107a8:	add	ip, pc, #0, 12
   107ac:	add	ip, ip, #16, 20	; 0x10000
   107b0:	ldr	pc, [ip, #2168]!	; 0x878

000107b4 <fclose@plt>:
   107b4:	add	ip, pc, #0, 12
   107b8:	add	ip, ip, #16, 20	; 0x10000
   107bc:	ldr	pc, [ip, #2160]!	; 0x870

000107c0 <abort@plt>:
   107c0:	add	ip, pc, #0, 12
   107c4:	add	ip, ip, #16, 20	; 0x10000
   107c8:	ldr	pc, [ip, #2152]!	; 0x868

Disassembly of section .text:

000107cc <_start@@Base>:
   107cc:	mov	fp, #0
   107d0:	mov	lr, #0
   107d4:	pop	{r1}		; (ldr r1, [sp], #4)
   107d8:	mov	r2, sp
   107dc:	push	{r2}		; (str r2, [sp, #-4]!)
   107e0:	push	{r0}		; (str r0, [sp, #-4]!)
   107e4:	ldr	ip, [pc, #16]	; 107fc <_start@@Base+0x30>
   107e8:	push	{ip}		; (str ip, [sp, #-4]!)
   107ec:	ldr	r0, [pc, #12]	; 10800 <_start@@Base+0x34>
   107f0:	ldr	r3, [pc, #12]	; 10804 <_start@@Base+0x38>
   107f4:	bl	10790 <__libc_start_main@plt>
   107f8:	bl	107c0 <abort@plt>
   107fc:	andeq	r0, r1, r8, ror #21
   10800:	andeq	r0, r1, ip, asr #20
   10804:	andeq	r0, r1, r8, lsl #21
   10808:	ldr	r3, [pc, #20]	; 10824 <_start@@Base+0x58>
   1080c:	ldr	r2, [pc, #20]	; 10828 <_start@@Base+0x5c>
   10810:	add	r3, pc, r3
   10814:	ldr	r2, [r3, r2]
   10818:	cmp	r2, #0
   1081c:	bxeq	lr
   10820:	b	1079c <__gmon_start__@plt>
   10824:	andeq	r0, r1, r8, ror #15
   10828:	andeq	r0, r0, r4, lsr r0
   1082c:	ldr	r0, [pc, #24]	; 1084c <_start@@Base+0x80>
   10830:	ldr	r3, [pc, #24]	; 10850 <_start@@Base+0x84>
   10834:	cmp	r3, r0
   10838:	bxeq	lr
   1083c:	ldr	r3, [pc, #16]	; 10854 <_start@@Base+0x88>
   10840:	cmp	r3, #0
   10844:	bxeq	lr
   10848:	bx	r3
   1084c:	andeq	r1, r2, r0, asr #32
   10850:	andeq	r1, r2, r0, asr #32
   10854:	andeq	r0, r0, r0
   10858:	ldr	r0, [pc, #36]	; 10884 <_start@@Base+0xb8>
   1085c:	ldr	r1, [pc, #36]	; 10888 <_start@@Base+0xbc>
   10860:	sub	r1, r1, r0
   10864:	asr	r1, r1, #2
   10868:	add	r1, r1, r1, lsr #31
   1086c:	asrs	r1, r1, #1
   10870:	bxeq	lr
   10874:	ldr	r3, [pc, #16]	; 1088c <_start@@Base+0xc0>
   10878:	cmp	r3, #0
   1087c:	bxeq	lr
   10880:	bx	r3
   10884:	andeq	r1, r2, r0, asr #32
   10888:	andeq	r1, r2, r0, asr #32
   1088c:	andeq	r0, r0, r0
   10890:	push	{r4, lr}
   10894:	ldr	r4, [pc, #24]	; 108b4 <_start@@Base+0xe8>
   10898:	ldrb	r3, [r4]
   1089c:	cmp	r3, #0
   108a0:	popne	{r4, pc}
   108a4:	bl	1082c <_start@@Base+0x60>
   108a8:	mov	r3, #1
   108ac:	strb	r3, [r4]
   108b0:	pop	{r4, pc}
   108b4:	andeq	r1, r2, r0, asr #32
   108b8:	b	10858 <_start@@Base+0x8c>

000108bc <analisarFicheiro@@Base>:
   108bc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   108c0:	add	fp, sp, #24
   108c4:	sub	sp, sp, #8
   108c8:	ldr	r0, [pc, #176]	; 10980 <analisarFicheiro@@Base+0xc4>
   108cc:	mov	r8, r1
   108d0:	ldr	r1, [pc, #172]	; 10984 <analisarFicheiro@@Base+0xc8>
   108d4:	add	r0, pc, r0
   108d8:	add	r1, pc, r1
   108dc:	bl	10760 <fopen@plt>
   108e0:	mov	r5, r0
   108e4:	mov	r0, #104	; 0x68
   108e8:	mov	r7, #104	; 0x68
   108ec:	bl	10784 <malloc@plt>
   108f0:	mov	r6, r0
   108f4:	add	r0, r0, #100	; 0x64
   108f8:	str	r0, [sp]
   108fc:	add	r3, r6, #50	; 0x32
   10900:	mov	r0, r5
   10904:	mov	r2, r6
   10908:	ldr	r1, [pc, #120]	; 10988 <analisarFicheiro@@Base+0xcc>
   1090c:	add	r1, pc, r1
   10910:	bl	10754 <__isoc99_fscanf@plt>
   10914:	mov	r4, #0
   10918:	cmp	r0, #3
   1091c:	bne	10968 <analisarFicheiro@@Base+0xac>
   10920:	ldr	r9, [pc, #100]	; 1098c <analisarFicheiro@@Base+0xd0>
   10924:	mov	r4, #0
   10928:	add	r9, pc, r9
   1092c:	mov	r0, r6
   10930:	mov	r1, r7
   10934:	bl	10778 <realloc@plt>
   10938:	add	r2, r0, r7
   1093c:	mov	r6, r0
   10940:	mov	r1, r9
   10944:	add	r0, r2, #100	; 0x64
   10948:	add	r3, r2, #50	; 0x32
   1094c:	str	r0, [sp]
   10950:	mov	r0, r5
   10954:	bl	10754 <__isoc99_fscanf@plt>
   10958:	add	r7, r7, #104	; 0x68
   1095c:	add	r4, r4, #1
   10960:	cmp	r0, #3
   10964:	beq	1092c <analisarFicheiro@@Base+0x70>
   10968:	mov	r0, r5
   1096c:	str	r4, [r8]
   10970:	bl	107b4 <fclose@plt>
   10974:	mov	r0, r6
   10978:	sub	sp, fp, #24
   1097c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10980:	andeq	r0, r0, ip, lsl r2
   10984:	andeq	r0, r0, r5, lsr #4
   10988:	strdeq	r0, [r0], -r3
   1098c:	ldrdeq	r0, [r0], -r7

00010990 <gerarRelatorio@@Base>:
   10990:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10994:	add	fp, sp, #28
   10998:	sub	sp, sp, #12
   1099c:	ldr	r1, [pc, #156]	; 10a40 <gerarRelatorio@@Base+0xb0>
   109a0:	mov	r9, r2
   109a4:	add	r1, pc, r1
   109a8:	bl	10760 <fopen@plt>
   109ac:	mov	sl, r0
   109b0:	ldr	r0, [pc, #140]	; 10a44 <gerarRelatorio@@Base+0xb4>
   109b4:	mov	r1, #10
   109b8:	mov	r2, #1
   109bc:	mov	r3, sl
   109c0:	add	r0, pc, r0
   109c4:	bl	1076c <fwrite_unlocked@plt>
   109c8:	mov	r0, #104	; 0x68
   109cc:	bl	10784 <malloc@plt>
   109d0:	cmp	r9, #1
   109d4:	blt	10a30 <gerarRelatorio@@Base+0xa0>
   109d8:	ldr	r8, [pc, #104]	; 10a48 <gerarRelatorio@@Base+0xb8>
   109dc:	mov	r6, r0
   109e0:	mov	r4, #0
   109e4:	mov	r7, #0
   109e8:	add	r8, pc, r8
   109ec:	add	r5, r4, #104	; 0x68
   109f0:	mov	r0, r6
   109f4:	mov	r1, r5
   109f8:	bl	10778 <realloc@plt>
   109fc:	mov	r6, r0
   10a00:	add	r0, r0, r4
   10a04:	mov	r2, r7
   10a08:	ldr	r1, [r0, #100]	; 0x64
   10a0c:	add	r3, r0, #50	; 0x32
   10a10:	stm	sp, {r0, r1}
   10a14:	mov	r0, sl
   10a18:	mov	r1, r8
   10a1c:	bl	107a8 <fprintf@plt>
   10a20:	add	r7, r7, #1
   10a24:	mov	r4, r5
   10a28:	cmp	r9, r7
   10a2c:	bne	109ec <gerarRelatorio@@Base+0x5c>
   10a30:	mov	r0, sl
   10a34:	sub	sp, fp, #28
   10a38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10a3c:	b	107b4 <fclose@plt>
   10a40:	andeq	r0, r0, r4, ror #2
   10a44:	andeq	r0, r0, sl, asr #2
   10a48:	andeq	r0, r0, sp, lsr #2

00010a4c <main@@Base>:
   10a4c:	push	{fp, lr}
   10a50:	mov	fp, sp
   10a54:	sub	sp, sp, #8
   10a58:	mov	r0, #0
   10a5c:	add	r1, sp, #4
   10a60:	str	r0, [sp, #4]
   10a64:	bl	108bc <analisarFicheiro@@Base>
   10a68:	ldr	r2, [sp, #4]
   10a6c:	ldr	r0, [pc, #16]	; 10a84 <main@@Base+0x38>
   10a70:	add	r0, pc, r0
   10a74:	bl	10990 <gerarRelatorio@@Base>
   10a78:	mov	r0, #0
   10a7c:	mov	sp, fp
   10a80:	pop	{fp, pc}
   10a84:	strheq	r0, [r0], -r7

00010a88 <__libc_csu_init@@Base>:
   10a88:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10a8c:	mov	r7, r0
   10a90:	ldr	r6, [pc, #72]	; 10ae0 <__libc_csu_init@@Base+0x58>
   10a94:	ldr	r5, [pc, #72]	; 10ae4 <__libc_csu_init@@Base+0x5c>
   10a98:	add	r6, pc, r6
   10a9c:	add	r5, pc, r5
   10aa0:	sub	r6, r6, r5
   10aa4:	mov	r8, r1
   10aa8:	mov	r9, r2
   10aac:	bl	10734 <__isoc99_fscanf@plt-0x20>
   10ab0:	asrs	r6, r6, #2
   10ab4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ab8:	mov	r4, #0
   10abc:	add	r4, r4, #1
   10ac0:	ldr	r3, [r5], #4
   10ac4:	mov	r2, r9
   10ac8:	mov	r1, r8
   10acc:	mov	r0, r7
   10ad0:	blx	r3
   10ad4:	cmp	r6, r4
   10ad8:	bne	10abc <__libc_csu_init@@Base+0x34>
   10adc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ae0:	andeq	r0, r1, ip, ror #8
   10ae4:	andeq	r0, r1, r4, ror #8

00010ae8 <__libc_csu_fini@@Base>:
   10ae8:	bx	lr

Disassembly of section .fini:

00010aec <.fini>:
   10aec:	push	{r3, lr}
   10af0:	pop	{r3, pc}
