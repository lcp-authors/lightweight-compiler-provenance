
../repos/prog2/1.3:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strcpy@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strcpy@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strcpy@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strcpy@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strcpy@plt-0x10>

0000000000401040 <fclose@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <fclose@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <strcpy@plt-0x10>

0000000000401050 <printf@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <printf@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strcpy@plt-0x10>

0000000000401060 <memset@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <memset@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <strcpy@plt-0x10>

0000000000401070 <fseek@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <fseek@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <strcpy@plt-0x10>

0000000000401080 <fopen@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <fopen@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <strcpy@plt-0x10>

0000000000401090 <getc@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <getc@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <strcpy@plt-0x10>

Disassembly of section .text:

00000000004010a0 <_start@@Base>:
  4010a0:	endbr64 
  4010a4:	xor    ebp,ebp
  4010a6:	mov    r9,rdx
  4010a9:	pop    rsi
  4010aa:	mov    rdx,rsp
  4010ad:	and    rsp,0xfffffffffffffff0
  4010b1:	push   rax
  4010b2:	push   rsp
  4010b3:	mov    r8,0x401450
  4010ba:	mov    rcx,0x4013e0
  4010c1:	mov    rdi,0x4011b0
  4010c8:	call   QWORD PTR [rip+0x2f22]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ce:	hlt    
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	ret    
  4010d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010df:	nop
  4010e0:	mov    eax,0x404060
  4010e5:	cmp    rax,0x404060
  4010eb:	je     401100 <_start@@Base+0x60>
  4010ed:	mov    eax,0x0
  4010f2:	test   rax,rax
  4010f5:	je     401100 <_start@@Base+0x60>
  4010f7:	mov    edi,0x404060
  4010fc:	jmp    rax
  4010fe:	xchg   ax,ax
  401100:	ret    
  401101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40110c:	nop    DWORD PTR [rax+0x0]
  401110:	mov    esi,0x404060
  401115:	sub    rsi,0x404060
  40111c:	mov    rax,rsi
  40111f:	shr    rsi,0x3f
  401123:	sar    rax,0x3
  401127:	add    rsi,rax
  40112a:	sar    rsi,1
  40112d:	je     401140 <_start@@Base+0xa0>
  40112f:	mov    eax,0x0
  401134:	test   rax,rax
  401137:	je     401140 <_start@@Base+0xa0>
  401139:	mov    edi,0x404060
  40113e:	jmp    rax
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	cmp    BYTE PTR [rip+0x2f05],0x0        # 404060 <__bss_start@@Base>
  40115b:	jne    401170 <_start@@Base+0xd0>
  40115d:	push   rbp
  40115e:	mov    rbp,rsp
  401161:	call   4010e0 <_start@@Base+0x40>
  401166:	mov    BYTE PTR [rip+0x2ef3],0x1        # 404060 <__bss_start@@Base>
  40116d:	pop    rbp
  40116e:	ret    
  40116f:	nop
  401170:	ret    
  401171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	endbr64 
  401184:	jmp    401110 <_start@@Base+0x70>
  401186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401190 <esvaziastring@@Base>:
  401190:	test   esi,esi
  401192:	jle    4011a2 <esvaziastring@@Base+0x12>
  401194:	push   rax
  401195:	mov    edx,esi
  401197:	xor    esi,esi
  401199:	call   401060 <memset@plt>
  40119e:	add    rsp,0x8
  4011a2:	ret    
  4011a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011ad:	nop    DWORD PTR [rax]

00000000004011b0 <main@@Base>:
  4011b0:	push   rbp
  4011b1:	mov    rbp,rsp
  4011b4:	push   r15
  4011b6:	push   r14
  4011b8:	push   r13
  4011ba:	push   r12
  4011bc:	push   rbx
  4011bd:	and    rsp,0xffffffffffffffe0
  4011c1:	sub    rsp,0x920
  4011c8:	lea    rdi,[rip+0xe35]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011cf:	lea    rsi,[rip+0xe44]        # 40201a <_IO_stdin_used@@Base+0x1a>
  4011d6:	call   401080 <fopen@plt>
  4011db:	mov    r15,rax
  4011de:	lea    rbx,[rsp+0x20]
  4011e3:	xor    r12d,r12d
  4011e6:	jmp    401240 <main@@Base+0x90>
  4011e8:	movsxd rax,r14d
  4011eb:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  4011f0:	add    r13,rsp
  4011f3:	add    r13,0x1cd
  4011fa:	mov    rdi,r13
  4011fd:	mov    rsi,rbx
  401200:	call   401030 <strcpy@plt>
  401205:	vxorps xmm0,xmm0,xmm0
  401209:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  40120f:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  401215:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40121b:	xor    eax,eax
  40121d:	lea    rdi,[rip+0xdf8]        # 40201c <_IO_stdin_used@@Base+0x1c>
  401224:	mov    rsi,r13
  401227:	mov    rdx,r12
  40122a:	vzeroupper 
  40122d:	call   401050 <printf@plt>
  401232:	mov    r12d,DWORD PTR [rsp+0x1c]
  401237:	add    r12d,0x1
  40123b:	nop    DWORD PTR [rax+rax*1+0x0]
  401240:	mov    rdi,r15
  401243:	call   401090 <getc@plt>
  401248:	cmp    eax,0x3c
  40124b:	jne    4013b1 <main@@Base+0x201>
  401251:	mov    rdi,r15
  401254:	call   401090 <getc@plt>
  401259:	cmp    eax,0x61
  40125c:	jne    401240 <main@@Base+0x90>
  40125e:	mov    r14,rbx
  401261:	vxorps xmm0,xmm0,xmm0
  401265:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40126e:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  401277:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  401280:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  401286:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40128c:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  401292:	mov    QWORD PTR [rsp+0xe0],0x0
  40129e:	mov    esi,0x7
  4012a3:	mov    edx,0x1
  4012a8:	mov    rdi,r15
  4012ab:	vzeroupper 
  4012ae:	call   401070 <fseek@plt>
  4012b3:	mov    rdi,r15
  4012b6:	call   401090 <getc@plt>
  4012bb:	xor    ebx,ebx
  4012bd:	cmp    eax,0x22
  4012c0:	je     4012e5 <main@@Base+0x135>
  4012c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012cc:	nop    DWORD PTR [rax+0x0]
  4012d0:	mov    BYTE PTR [rsp+rbx*1+0x20],al
  4012d4:	add    rbx,0x1
  4012d8:	mov    rdi,r15
  4012db:	call   401090 <getc@plt>
  4012e0:	cmp    eax,0x22
  4012e3:	jne    4012d0 <main@@Base+0x120>
  4012e5:	mov    eax,ebx
  4012e7:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  4012ec:	mov    DWORD PTR [rsp+0x1c],r12d
  4012f1:	mov    eax,r12d
  4012f4:	imul   r13,rax,0x19a
  4012fb:	lea    r12,[rsp+r13*1]
  4012ff:	add    r12,0x100
  401306:	mov    rdi,r12
  401309:	mov    rbx,r14
  40130c:	mov    rsi,r14
  40130f:	call   401030 <strcpy@plt>
  401314:	vxorps xmm0,xmm0,xmm0
  401318:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  401321:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40132a:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  401333:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  401339:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40133f:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  401345:	mov    QWORD PTR [rsp+0xe0],0x0
  401351:	mov    esi,0x1
  401356:	mov    edx,0x1
  40135b:	mov    rdi,r15
  40135e:	vzeroupper 
  401361:	call   401070 <fseek@plt>
  401366:	xor    r14d,r14d
  401369:	jmp    40137c <main@@Base+0x1cc>
  40136b:	nop    DWORD PTR [rax+rax*1+0x0]
  401370:	movsxd r14,r14d
  401373:	mov    BYTE PTR [rsp+r14*1+0x20],al
  401378:	add    r14d,0x1
  40137c:	mov    rdi,r15
  40137f:	call   401090 <getc@plt>
  401384:	cmp    eax,0xe1
  401389:	je     4013a0 <main@@Base+0x1f0>
  40138b:	cmp    eax,0x3c
  40138e:	jne    401370 <main@@Base+0x1c0>
  401390:	jmp    4011e8 <main@@Base+0x38>
  401395:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40139f:	nop
  4013a0:	movsxd r14,r14d
  4013a3:	mov    BYTE PTR [rsp+r14*1+0x20],0xc3
  4013a9:	add    r14d,0x1
  4013ad:	mov    al,0xa1
  4013af:	jmp    401370 <main@@Base+0x1c0>
  4013b1:	cmp    eax,0xffffffff
  4013b4:	jne    401240 <main@@Base+0x90>
  4013ba:	mov    rdi,r15
  4013bd:	call   401040 <fclose@plt>
  4013c2:	xor    eax,eax
  4013c4:	lea    rsp,[rbp-0x28]
  4013c8:	pop    rbx
  4013c9:	pop    r12
  4013cb:	pop    r13
  4013cd:	pop    r14
  4013cf:	pop    r15
  4013d1:	pop    rbp
  4013d2:	ret    
  4013d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4013dd:	nop    DWORD PTR [rax]

00000000004013e0 <__libc_csu_init@@Base>:
  4013e0:	endbr64 
  4013e4:	push   r15
  4013e6:	lea    r15,[rip+0x2a13]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  4013ed:	push   r14
  4013ef:	mov    r14,rdx
  4013f2:	push   r13
  4013f4:	mov    r13,rsi
  4013f7:	push   r12
  4013f9:	mov    r12d,edi
  4013fc:	push   rbp
  4013fd:	lea    rbp,[rip+0x2a04]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401404:	push   rbx
  401405:	sub    rbp,r15
  401408:	sub    rsp,0x8
  40140c:	call   401000 <strcpy@plt-0x30>
  401411:	sar    rbp,0x3
  401415:	je     401436 <__libc_csu_init@@Base+0x56>
  401417:	xor    ebx,ebx
  401419:	nop    DWORD PTR [rax+0x0]
  401420:	mov    rdx,r14
  401423:	mov    rsi,r13
  401426:	mov    edi,r12d
  401429:	call   QWORD PTR [r15+rbx*8]
  40142d:	add    rbx,0x1
  401431:	cmp    rbp,rbx
  401434:	jne    401420 <__libc_csu_init@@Base+0x40>
  401436:	add    rsp,0x8
  40143a:	pop    rbx
  40143b:	pop    rbp
  40143c:	pop    r12
  40143e:	pop    r13
  401440:	pop    r14
  401442:	pop    r15
  401444:	ret    
  401445:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401450 <__libc_csu_fini@@Base>:
  401450:	endbr64 
  401454:	ret    

Disassembly of section .fini:

0000000000401458 <.fini>:
  401458:	endbr64 
  40145c:	sub    rsp,0x8
  401460:	add    rsp,0x8
  401464:	ret    
